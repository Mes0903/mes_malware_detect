
6a085f6ef87fd1462537f3a8a2f811577ea32d71a28a4d6e893a149025f06391.exe:     file format pei-i386


Disassembly of section .text:

00010480 <.text>:
   10480:	add    BYTE PTR [eax],al
   10482:	add    BYTE PTR [eax],al
   10484:	add    BYTE PTR [eax],al
   10486:	mov    edi,edi
   10488:	push   ebp
   10489:	mov    ebp,esp
   1048b:	mov    eax,DWORD PTR [ebp+0xc]
   1048e:	xor    eax,DWORD PTR [ebp+0x10]
   10491:	mov    ecx,DWORD PTR [ebp+0x10]
   10494:	and    eax,0x7ffffffe
   10499:	xor    eax,DWORD PTR [ebp+0xc]
   1049c:	and    cl,0x1
   1049f:	movzx  ecx,cl
   104a2:	shr    eax,1
   104a4:	neg    ecx
   104a6:	sbb    ecx,ecx
   104a8:	and    ecx,0x9908b0df
   104ae:	xor    eax,ecx
   104b0:	xor    eax,DWORD PTR [ebp+0x8]
   104b3:	pop    ebp
   104b4:	ret    0xc
   104b7:	int3   
   104b8:	int3   
   104b9:	int3   
   104ba:	int3   
   104bb:	int3   
   104bc:	mov    edi,edi
   104be:	push   ebp
   104bf:	mov    ebp,esp
   104c1:	mov    eax,DWORD PTR [ebp+0x8]
   104c4:	xor    edx,edx
   104c6:	inc    edx
   104c7:	mov    DWORD PTR [ecx],eax
   104c9:	push   esi
   104ca:	mov    eax,DWORD PTR [ecx]
   104cc:	mov    esi,eax
   104ce:	shr    esi,0x1e
   104d1:	xor    esi,eax
   104d3:	imul   esi,esi,0x6c078965
   104d9:	add    ecx,0x4
   104dc:	add    esi,edx
   104de:	inc    edx
   104df:	cmp    edx,0x270
   104e5:	mov    DWORD PTR [ecx],esi
   104e7:	jl     0x104ca
   104e9:	pop    esi
   104ea:	pop    ebp
   104eb:	ret    0x4
   104ee:	int3   
   104ef:	int3   
   104f0:	int3   
   104f1:	int3   
   104f2:	int3   
   104f3:	int3   
   104f4:	mov    edi,edi
   104f6:	push   ebp
   104f7:	mov    ebp,esp
   104f9:	push   ecx
   104fa:	push   ebx
   104fb:	push   esi
   104fc:	push   edi
   104fd:	mov    edi,ecx
   104ff:	mov    esi,edi
   10501:	mov    ebx,0xe3
   10506:	push   DWORD PTR [esi+0x4]
   10509:	mov    ecx,edi
   1050b:	push   DWORD PTR [esi]
   1050d:	dec    ebx
   1050e:	push   DWORD PTR [esi+0x634]
   10514:	call   0x10486
   10519:	mov    DWORD PTR [esi],eax
   1051b:	add    esi,0x4
   1051e:	test   ebx,ebx
   10520:	jne    0x10506
   10522:	mov    DWORD PTR [ebp-0x4],0x18c
   10529:	lea    ebx,[esi+0x4]
   1052c:	push   DWORD PTR [ebx]
   1052e:	mov    ecx,edi
   10530:	push   DWORD PTR [esi]
   10532:	push   DWORD PTR [esi-0x38c]
   10538:	call   0x10486
   1053d:	dec    DWORD PTR [ebp-0x4]
   10540:	mov    DWORD PTR [esi],eax
   10542:	mov    esi,ebx
   10544:	jne    0x10529
   10546:	push   DWORD PTR [edi]
   10548:	mov    ecx,edi
   1054a:	push   DWORD PTR [esi]
   1054c:	push   DWORD PTR [esi-0x38c]
   10552:	call   0x10486
   10557:	mov    DWORD PTR [esi],eax
   10559:	mov    DWORD PTR [edi+0x9c4],0x270
   10563:	mov    DWORD PTR [edi+0x9c0],edi
   10569:	pop    edi
   1056a:	pop    esi
   1056b:	pop    ebx
   1056c:	leave  
   1056d:	ret    
   1056e:	int3   
   1056f:	int3   
   10570:	int3   
   10571:	int3   
   10572:	int3   
   10573:	int3   
   10574:	mov    edi,edi
   10576:	push   ebp
   10577:	mov    ebp,esp
   10579:	push   esi
   1057a:	push   DWORD PTR [ebp+0x8]
   1057d:	mov    esi,ecx
   1057f:	call   0x104bc
   10584:	mov    ecx,esi
   10586:	call   0x104f4
   1058b:	pop    esi
   1058c:	pop    ebp
   1058d:	ret    0x4
   10590:	int3   
   10591:	int3   
   10592:	int3   
   10593:	int3   
   10594:	int3   
   10595:	int3   
   10596:	mov    edi,edi
   10598:	push   esi
   10599:	push   edi
   1059a:	mov    edi,ecx
   1059c:	lea    esi,[edi+0x9c4]
   105a2:	cmp    DWORD PTR [esi],0x0
   105a5:	jne    0x105ac
   105a7:	call   0x104f4
   105ac:	dec    DWORD PTR [esi]
   105ae:	lea    eax,[edi+0x9c0]
   105b4:	mov    edx,DWORD PTR [eax]
   105b6:	mov    ecx,DWORD PTR [edx]
   105b8:	add    edx,0x4
   105bb:	mov    DWORD PTR [eax],edx
   105bd:	mov    eax,ecx
   105bf:	shr    eax,0xb
   105c2:	xor    ecx,eax
   105c4:	mov    eax,ecx
   105c6:	and    eax,0xff3a58ad
   105cb:	shl    eax,0x7
   105ce:	xor    ecx,eax
   105d0:	mov    eax,ecx
   105d2:	and    eax,0xffffdf8c
   105d7:	shl    eax,0xf
   105da:	xor    ecx,eax
   105dc:	mov    eax,ecx
   105de:	shr    eax,0x12
   105e1:	pop    edi
   105e2:	xor    eax,ecx
   105e4:	pop    esi
   105e5:	ret    
   105e6:	int3   
   105e7:	int3   
   105e8:	int3   
   105e9:	int3   
   105ea:	int3   
   105eb:	int3   
   105ec:	mov    edi,edi
   105ee:	push   ebp
   105ef:	mov    ebp,esp
   105f1:	push   esi
   105f2:	mov    esi,DWORD PTR [ebp+0x8]
   105f5:	shr    esi,1
   105f7:	or     esi,DWORD PTR [ebp+0x8]
   105fa:	push   edi
   105fb:	mov    eax,esi
   105fd:	shr    eax,0x2
   10600:	or     esi,eax
   10602:	mov    eax,esi
   10604:	shr    eax,0x4
   10607:	or     esi,eax
   10609:	mov    eax,esi
   1060b:	shr    eax,0x8
   1060e:	or     esi,eax
   10610:	mov    eax,esi
   10612:	shr    eax,0x10
   10615:	mov    edi,ecx
   10617:	or     esi,eax
   10619:	mov    ecx,edi
   1061b:	call   0x10596
   10620:	and    eax,esi
   10622:	cmp    eax,DWORD PTR [ebp+0x8]
   10625:	ja     0x10619
   10627:	pop    edi
   10628:	pop    esi
   10629:	pop    ebp
   1062a:	ret    0x4
   1062d:	int3   
   1062e:	int3   
   1062f:	int3   
   10630:	int3   
   10631:	int3   
   10632:	mov    edi,edi
   10634:	push   ebp
   10635:	mov    ebp,esp
   10637:	sub    esp,0xa04
   1063d:	push   ebx
   1063e:	push   esi
   1063f:	mov    esi,DWORD PTR [ebp+0x14]
   10642:	push   edi
   10643:	test   esi,esi
   10645:	jne    0x10720
   1064b:	xor    ecx,ecx
   1064d:	lea    eax,[ebp-0x3c]
   10650:	mov    edx,0xff
   10655:	shl    edx,cl
   10657:	and    edx,DWORD PTR [ebp+0x8]
   1065a:	shr    edx,cl
   1065c:	inc    ecx
   1065d:	inc    ecx
   1065e:	mov    DWORD PTR [eax],edx
   10660:	add    eax,0x4
   10663:	cmp    ecx,0x14
   10666:	jne    0x10650
   10668:	mov    ebx,DWORD PTR [ebp+0xc]
   1066b:	xor    eax,eax
   1066d:	mov    WORD PTR [ebx],ax
   10670:	mov    eax,DWORD PTR [ebp-0x3c]
   10673:	push   0x5
   10675:	cdq    
   10676:	pop    ecx
   10677:	idiv   ecx
   10679:	mov    DWORD PTR [ebp-0x14],0x1ac16
   10680:	mov    DWORD PTR [ebp-0x10],0x1ac0c
   10687:	mov    DWORD PTR [ebp-0xc],0x1ac04
   1068e:	mov    DWORD PTR [ebp-0x8],0x1abfa
   10695:	mov    DWORD PTR [ebp-0x4],0x1abf0
   1069c:	mov    edx,DWORD PTR [ebp+edx*4-0x14]
   106a0:	mov    ecx,edx
   106a2:	mov    ax,WORD PTR [edx]
   106a5:	inc    edx
   106a6:	inc    edx
   106a7:	test   ax,ax
   106aa:	jne    0x106a2
   106ac:	sub    edx,ecx
   106ae:	mov    edi,ebx
   106b0:	dec    edi
   106b1:	mov    esi,ecx
   106b3:	dec    edi
   106b4:	mov    ax,WORD PTR [edi+0x2]
   106b8:	inc    edi
   106b9:	inc    edi
   106ba:	test   ax,ax
   106bd:	jne    0x106b4
   106bf:	mov    ecx,edx
   106c1:	shr    ecx,0x2
   106c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   106c6:	mov    ecx,edx
   106c8:	and    ecx,0x3
   106cb:	mov    eax,ebx
   106cd:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   106cf:	lea    ecx,[eax+0x2]
   106d2:	mov    dx,WORD PTR [eax]
   106d5:	inc    eax
   106d6:	inc    eax
   106d7:	test   dx,dx
   106da:	jne    0x106d2
   106dc:	sub    eax,ecx
   106de:	sar    eax,1
   106e0:	mov    ecx,eax
   106e2:	mov    eax,DWORD PTR [ebp-0x38]
   106e5:	push   0x3
   106e7:	cdq    
   106e8:	pop    esi
   106e9:	idiv   esi
   106eb:	cmp    edx,0xfffffffe
   106ee:	je     0x107d4
   106f4:	add    edx,0x2
   106f7:	lea    esi,[ebp-0x34]
   106fa:	mov    DWORD PTR [ebp+0x8],edx
   106fd:	mov    eax,DWORD PTR [esi]
   106ff:	cdq    
   10700:	push   0x1a
   10702:	pop    edi
   10703:	idiv   edi
   10705:	add    esi,0x4
   10708:	xor    eax,eax
   1070a:	add    edx,0x61
   1070d:	mov    WORD PTR [ebx+ecx*2],dx
   10711:	inc    ecx
   10712:	dec    DWORD PTR [ebp+0x8]
   10715:	mov    WORD PTR [ebx+ecx*2],ax
   10719:	jne    0x106fd
   1071b:	jmp    0x107d4
   10720:	cmp    esi,0x1
   10723:	je     0x10730
   10725:	mov    eax,esi
   10727:	imul   eax,eax,0xa
   1072a:	add    eax,DWORD PTR [ebp+0x10]
   1072d:	add    DWORD PTR [ebp+0x8],eax
   10730:	push   DWORD PTR [ebp+0x8]
   10733:	lea    ecx,[ebp-0xa04]
   10739:	call   0x10574
   1073e:	lea    eax,[esi-0x1]
   10741:	cmp    eax,0x5
   10744:	ja     0x10755
   10746:	imul   esi,esi,0x3
   10749:	add    esi,DWORD PTR [ebp+0x10]
   1074c:	mov    esi,DWORD PTR [esi*4+0x703bc]
   10753:	jmp    0x1075a
   10755:	mov    esi,0x1abee
   1075a:	mov    ebx,DWORD PTR [ebp+0xc]
   1075d:	xor    eax,eax
   1075f:	mov    WORD PTR [ebx],ax
   10762:	mov    eax,esi
   10764:	mov    edx,esi
   10766:	mov    cx,WORD PTR [eax]
   10769:	inc    eax
   1076a:	inc    eax
   1076b:	test   cx,cx
   1076e:	jne    0x10766
   10770:	sub    eax,edx
   10772:	mov    edi,ebx
   10774:	dec    edi
   10775:	dec    edi
   10776:	mov    cx,WORD PTR [edi+0x2]
   1077a:	inc    edi
   1077b:	inc    edi
   1077c:	test   cx,cx
   1077f:	jne    0x10776
   10781:	mov    ecx,eax
   10783:	shr    ecx,0x2
   10786:	mov    esi,edx
   10788:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1078a:	mov    ecx,eax
   1078c:	and    ecx,0x3
   1078f:	mov    eax,ebx
   10791:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   10793:	lea    ecx,[eax+0x2]
   10796:	mov    dx,WORD PTR [eax]
   10799:	inc    eax
   1079a:	inc    eax
   1079b:	test   dx,dx
   1079e:	jne    0x10796
   107a0:	sub    eax,ecx
   107a2:	sar    eax,1
   107a4:	push   0x5
   107a6:	mov    esi,eax
   107a8:	pop    edi
   107a9:	push   0x23
   107ab:	lea    ecx,[ebp-0xa04]
   107b1:	call   0x105ec
   107b6:	cmp    eax,0xa
   107b9:	jae    0x107c0
   107bb:	add    eax,0x30
   107be:	jmp    0x107c3
   107c0:	add    eax,0x57
   107c3:	movzx  eax,ax
   107c6:	mov    WORD PTR [ebx+esi*2],ax
   107ca:	inc    esi
   107cb:	xor    eax,eax
   107cd:	dec    edi
   107ce:	mov    WORD PTR [ebx+esi*2],ax
   107d2:	jne    0x107a9
   107d4:	pop    edi
   107d5:	pop    esi
   107d6:	pop    ebx
   107d7:	leave  
   107d8:	ret    0x10
   107db:	int3   
   107dc:	int3   
   107dd:	int3   
   107de:	int3   
   107df:	int3   
   107e0:	mov    edi,edi
   107e2:	push   ebp
   107e3:	mov    ebp,esp
   107e5:	mov    eax,DWORD PTR [ebp+0x8]
   107e8:	lea    edx,[eax+0x2]
   107eb:	mov    cx,WORD PTR [eax]
   107ee:	inc    eax
   107ef:	inc    eax
   107f0:	test   cx,cx
   107f3:	jne    0x107eb
   107f5:	sub    eax,edx
   107f7:	sar    eax,1
   107f9:	pop    ebp
   107fa:	ret    0x4
   107fd:	int3   
   107fe:	int3   
   107ff:	int3   
   10800:	int3   
   10801:	int3   
   10802:	mov    edi,edi
   10804:	push   ebp
   10805:	mov    ebp,esp
   10807:	push   esi
   10808:	push   0x20
   1080a:	push   0x61737973
   1080f:	push   DWORD PTR [ebp+0x8]
   10812:	push   0x1
   10814:	call   DWORD PTR ds:0x1ba18
   1081a:	mov    esi,eax
   1081c:	test   esi,esi
   1081e:	jne    0x1082b
   10820:	push   0xc000009a
   10825:	call   DWORD PTR ds:0x1ba14
   1082b:	mov    eax,esi
   1082d:	pop    esi
   1082e:	pop    ebp
   1082f:	ret    
   10830:	int3   
   10831:	int3   
   10832:	int3   
   10833:	int3   
   10834:	int3   
   10835:	int3   
   10836:	mov    edi,edi
   10838:	push   ebp
   10839:	mov    ebp,esp
   1083b:	cmp    DWORD PTR [ebp+0x8],0x0
   1083f:	je     0x1084c
   10841:	push   0x0
   10843:	push   DWORD PTR [ebp+0x8]
   10846:	call   DWORD PTR ds:0x1ba1c
   1084c:	pop    ebp
   1084d:	ret    
   1084e:	int3   
   1084f:	int3   
   10850:	int3   
   10851:	int3   
   10852:	int3   
   10853:	int3   
   10854:	mov    edi,edi
   10856:	push   esi
   10857:	mov    esi,ecx
   10859:	dec    DWORD PTR [esi+0x4]
   1085c:	jne    0x1086d
   1085e:	push   DWORD PTR [esi]
   10860:	call   0x10836
   10865:	push   esi
   10866:	call   0x10836
   1086b:	pop    ecx
   1086c:	pop    ecx
   1086d:	pop    esi
   1086e:	ret    
   1086f:	int3   
   10870:	int3   
   10871:	int3   
   10872:	int3   
   10873:	int3   
   10874:	mov    edi,edi
   10876:	push   ebp
   10877:	mov    ebp,esp
   10879:	push   esi
   1087a:	xor    esi,esi
   1087c:	xor    edx,edx
   1087e:	cmp    DWORD PTR [ebp+0xc],esi
   10881:	je     0x1089e
   10883:	mov    eax,DWORD PTR [ebp+0x8]
   10886:	mov    ecx,DWORD PTR [ebp+0x10]
   10889:	mov    cl,BYTE PTR [edx+ecx*1]
   1088c:	add    eax,esi
   1088e:	xor    BYTE PTR [eax],cl
   10890:	lea    eax,[edx+0x1]
   10893:	xor    edx,edx
   10895:	div    DWORD PTR [ebp+0x14]
   10898:	inc    esi
   10899:	cmp    esi,DWORD PTR [ebp+0xc]
   1089c:	jne    0x10883
   1089e:	pop    esi
   1089f:	pop    ebp
   108a0:	ret    0x10
   108a3:	int3   
   108a4:	int3   
   108a5:	int3   
   108a6:	int3   
   108a7:	int3   
   108a8:	mov    edi,edi
   108aa:	push   ebp
   108ab:	mov    ebp,esp
   108ad:	mov    ecx,DWORD PTR [ebp+0x8]
   108b0:	mov    eax,ecx
   108b2:	lea    edx,[eax+0x2]
   108b5:	push   esi
   108b6:	mov    si,WORD PTR [eax]
   108b9:	inc    eax
   108ba:	inc    eax
   108bb:	test   si,si
   108be:	jne    0x108b6
   108c0:	sub    eax,edx
   108c2:	sar    eax,1
   108c4:	cmp    eax,0xc
   108c7:	jae    0x108d0
   108c9:	xor    al,al
   108cb:	jmp    0x1099e
   108d0:	lea    eax,[ecx+eax*2-0x18]
   108d4:	movzx  ecx,WORD PTR [eax]
   108d7:	cmp    cx,0x69
   108db:	je     0x108e3
   108dd:	cmp    cx,0x49
   108e1:	jne    0x108c9
   108e3:	movzx  ecx,WORD PTR [eax+0x2]
   108e7:	push   0x45
   108e9:	pop    esi
   108ea:	push   0x65
   108ec:	pop    edx
   108ed:	cmp    cx,dx
   108f0:	je     0x108f7
   108f2:	cmp    cx,si
   108f5:	jne    0x108c9
   108f7:	movzx  ecx,WORD PTR [eax+0x4]
   108fb:	cmp    cx,0x78
   108ff:	je     0x10907
   10901:	cmp    cx,0x58
   10905:	jne    0x108c9
   10907:	movzx  ecx,WORD PTR [eax+0x6]
   1090b:	cmp    cx,0x70
   1090f:	je     0x10917
   10911:	cmp    cx,0x50
   10915:	jne    0x108c9
   10917:	movzx  ecx,WORD PTR [eax+0x8]
   1091b:	cmp    cx,0x6c
   1091f:	je     0x10927
   10921:	cmp    cx,0x4c
   10925:	jne    0x108c9
   10927:	movzx  ecx,WORD PTR [eax+0xa]
   1092b:	cmp    cx,0x6f
   1092f:	je     0x10937
   10931:	cmp    cx,0x4f
   10935:	jne    0x108c9
   10937:	movzx  ecx,WORD PTR [eax+0xc]
   1093b:	cmp    cx,0x72
   1093f:	je     0x10947
   10941:	cmp    cx,0x52
   10945:	jne    0x108c9
   10947:	movzx  ecx,WORD PTR [eax+0xe]
   1094b:	cmp    cx,dx
   1094e:	je     0x10959
   10950:	cmp    cx,si
   10953:	jne    0x108c9
   10959:	cmp    WORD PTR [eax+0x10],0x2e
   1095e:	jne    0x108c9
   10964:	movzx  ecx,WORD PTR [eax+0x12]
   10968:	cmp    cx,dx
   1096b:	je     0x10976
   1096d:	cmp    cx,si
   10970:	jne    0x108c9
   10976:	movzx  ecx,WORD PTR [eax+0x14]
   1097a:	cmp    cx,0x78
   1097e:	je     0x1098a
   10980:	cmp    cx,0x58
   10984:	jne    0x108c9
   1098a:	movzx  eax,WORD PTR [eax+0x16]
   1098e:	cmp    ax,dx
   10991:	je     0x1099c
   10993:	cmp    ax,si
   10996:	jne    0x108c9
   1099c:	mov    al,0x1
   1099e:	pop    esi
   1099f:	pop    ebp
   109a0:	ret    0x4
   109a3:	int3   
   109a4:	int3   
   109a5:	int3   
   109a6:	int3   
   109a7:	int3   
   109a8:	mov    edi,edi
   109aa:	push   ebp
   109ab:	mov    ebp,esp
   109ad:	mov    ecx,DWORD PTR [ebp+0x8]
   109b0:	mov    eax,ecx
   109b2:	lea    edx,[eax+0x2]
   109b5:	push   esi
   109b6:	mov    si,WORD PTR [eax]
   109b9:	inc    eax
   109ba:	inc    eax
   109bb:	test   si,si
   109be:	jne    0x109b6
   109c0:	sub    eax,edx
   109c2:	sar    eax,1
   109c4:	pop    esi
   109c5:	cmp    eax,0xb
   109c8:	jae    0x109d1
   109ca:	xor    al,al
   109cc:	jmp    0x10a8d
   109d1:	lea    eax,[ecx+eax*2-0x16]
   109d5:	movzx  ecx,WORD PTR [eax]
   109d8:	cmp    cx,0x66
   109dc:	je     0x109e4
   109de:	cmp    cx,0x46
   109e2:	jne    0x109ca
   109e4:	movzx  ecx,WORD PTR [eax+0x2]
   109e8:	cmp    cx,0x69
   109ec:	je     0x109f4
   109ee:	cmp    cx,0x49
   109f2:	jne    0x109ca
   109f4:	movzx  ecx,WORD PTR [eax+0x4]
   109f8:	cmp    cx,0x72
   109fc:	je     0x10a04
   109fe:	cmp    cx,0x52
   10a02:	jne    0x109ca
   10a04:	movzx  ecx,WORD PTR [eax+0x6]
   10a08:	cmp    cx,0x65
   10a0c:	je     0x10a14
   10a0e:	cmp    cx,0x45
   10a12:	jne    0x109ca
   10a14:	movzx  ecx,WORD PTR [eax+0x8]
   10a18:	cmp    cx,0x66
   10a1c:	je     0x10a24
   10a1e:	cmp    cx,0x46
   10a22:	jne    0x109ca
   10a24:	movzx  ecx,WORD PTR [eax+0xa]
   10a28:	cmp    cx,0x6f
   10a2c:	je     0x10a34
   10a2e:	cmp    cx,0x4f
   10a32:	jne    0x109ca
   10a34:	movzx  ecx,WORD PTR [eax+0xc]
   10a38:	cmp    cx,0x78
   10a3c:	je     0x10a44
   10a3e:	cmp    cx,0x58
   10a42:	jne    0x109ca
   10a44:	cmp    WORD PTR [eax+0xe],0x2e
   10a49:	jne    0x109ca
   10a4f:	movzx  ecx,WORD PTR [eax+0x10]
   10a53:	cmp    cx,0x65
   10a57:	je     0x10a63
   10a59:	cmp    cx,0x45
   10a5d:	jne    0x109ca
   10a63:	movzx  ecx,WORD PTR [eax+0x12]
   10a67:	cmp    cx,0x78
   10a6b:	je     0x10a77
   10a6d:	cmp    cx,0x58
   10a71:	jne    0x109ca
   10a77:	movzx  eax,WORD PTR [eax+0x14]
   10a7b:	cmp    ax,0x65
   10a7f:	je     0x10a8b
   10a81:	cmp    ax,0x45
   10a85:	jne    0x109ca
   10a8b:	mov    al,0x1
   10a8d:	pop    ebp
   10a8e:	ret    0x4
   10a91:	int3   
   10a92:	int3   
   10a93:	int3   
   10a94:	int3   
   10a95:	int3   
   10a96:	mov    edi,edi
   10a98:	push   ebp
   10a99:	mov    ebp,esp
   10a9b:	mov    ecx,DWORD PTR [ebp+0x8]
   10a9e:	mov    eax,ecx
   10aa0:	lea    edx,[eax+0x2]
   10aa3:	push   esi
   10aa4:	mov    si,WORD PTR [eax]
   10aa7:	inc    eax
   10aa8:	inc    eax
   10aa9:	test   si,si
   10aac:	jne    0x10aa4
   10aae:	sub    eax,edx
   10ab0:	sar    eax,1
   10ab2:	pop    esi
   10ab3:	cmp    eax,0xa
   10ab6:	jae    0x10abf
   10ab8:	xor    al,al
   10aba:	jmp    0x10b67
   10abf:	lea    eax,[ecx+eax*2-0x14]
   10ac3:	movzx  ecx,WORD PTR [eax]
   10ac6:	cmp    cx,0x63
   10aca:	je     0x10ad2
   10acc:	cmp    cx,0x43
   10ad0:	jne    0x10ab8
   10ad2:	movzx  ecx,WORD PTR [eax+0x2]
   10ad6:	cmp    cx,0x68
   10ada:	je     0x10ae2
   10adc:	cmp    cx,0x48
   10ae0:	jne    0x10ab8
   10ae2:	movzx  ecx,WORD PTR [eax+0x4]
   10ae6:	cmp    cx,0x72
   10aea:	je     0x10af2
   10aec:	cmp    cx,0x52
   10af0:	jne    0x10ab8
   10af2:	movzx  ecx,WORD PTR [eax+0x6]
   10af6:	cmp    cx,0x6f
   10afa:	je     0x10b02
   10afc:	cmp    cx,0x4f
   10b00:	jne    0x10ab8
   10b02:	movzx  ecx,WORD PTR [eax+0x8]
   10b06:	cmp    cx,0x6d
   10b0a:	je     0x10b12
   10b0c:	cmp    cx,0x4d
   10b10:	jne    0x10ab8
   10b12:	movzx  ecx,WORD PTR [eax+0xa]
   10b16:	cmp    cx,0x65
   10b1a:	je     0x10b22
   10b1c:	cmp    cx,0x45
   10b20:	jne    0x10ab8
   10b22:	cmp    WORD PTR [eax+0xc],0x2e
   10b27:	jne    0x10ab8
   10b29:	movzx  ecx,WORD PTR [eax+0xe]
   10b2d:	cmp    cx,0x65
   10b31:	je     0x10b3d
   10b33:	cmp    cx,0x45
   10b37:	jne    0x10ab8
   10b3d:	movzx  ecx,WORD PTR [eax+0x10]
   10b41:	cmp    cx,0x78
   10b45:	je     0x10b51
   10b47:	cmp    cx,0x58
   10b4b:	jne    0x10ab8
   10b51:	movzx  eax,WORD PTR [eax+0x12]
   10b55:	cmp    ax,0x65
   10b59:	je     0x10b65
   10b5b:	cmp    ax,0x45
   10b5f:	jne    0x10ab8
   10b65:	mov    al,0x1
   10b67:	pop    ebp
   10b68:	ret    0x4
   10b6b:	int3   
   10b6c:	int3   
   10b6d:	int3   
   10b6e:	int3   
   10b6f:	int3   
   10b70:	mov    edi,edi
   10b72:	push   ebp
   10b73:	mov    ebp,esp
   10b75:	mov    ecx,DWORD PTR [ebp+0x8]
   10b78:	mov    eax,ecx
   10b7a:	lea    edx,[eax+0x2]
   10b7d:	push   esi
   10b7e:	mov    si,WORD PTR [eax]
   10b81:	inc    eax
   10b82:	inc    eax
   10b83:	test   si,si
   10b86:	jne    0x10b7e
   10b88:	sub    eax,edx
   10b8a:	sar    eax,1
   10b8c:	pop    esi
   10b8d:	cmp    eax,0x9
   10b90:	jae    0x10b99
   10b92:	xor    al,al
   10b94:	jmp    0x10c2d
   10b99:	lea    eax,[ecx+eax*2-0x12]
   10b9d:	movzx  ecx,WORD PTR [eax]
   10ba0:	cmp    cx,0x6d
   10ba4:	je     0x10bac
   10ba6:	cmp    cx,0x4d
   10baa:	jne    0x10b92
   10bac:	movzx  ecx,WORD PTR [eax+0x2]
   10bb0:	cmp    cx,0x73
   10bb4:	je     0x10bbc
   10bb6:	cmp    cx,0x53
   10bba:	jne    0x10b92
   10bbc:	movzx  ecx,WORD PTR [eax+0x4]
   10bc0:	cmp    cx,0x68
   10bc4:	je     0x10bcc
   10bc6:	cmp    cx,0x48
   10bca:	jne    0x10b92
   10bcc:	movzx  ecx,WORD PTR [eax+0x6]
   10bd0:	cmp    cx,0x74
   10bd4:	je     0x10bdc
   10bd6:	cmp    cx,0x54
   10bda:	jne    0x10b92
   10bdc:	movzx  ecx,WORD PTR [eax+0x8]
   10be0:	cmp    cx,0x61
   10be4:	je     0x10bec
   10be6:	cmp    cx,0x41
   10bea:	jne    0x10b92
   10bec:	cmp    WORD PTR [eax+0xa],0x2e
   10bf1:	jne    0x10b92
   10bf3:	movzx  ecx,WORD PTR [eax+0xc]
   10bf7:	cmp    cx,0x65
   10bfb:	je     0x10c03
   10bfd:	cmp    cx,0x45
   10c01:	jne    0x10b92
   10c03:	movzx  ecx,WORD PTR [eax+0xe]
   10c07:	cmp    cx,0x78
   10c0b:	je     0x10c17
   10c0d:	cmp    cx,0x58
   10c11:	jne    0x10b92
   10c17:	movzx  eax,WORD PTR [eax+0x10]
   10c1b:	cmp    ax,0x65
   10c1f:	je     0x10c2b
   10c21:	cmp    ax,0x45
   10c25:	jne    0x10b92
   10c2b:	mov    al,0x1
   10c2d:	pop    ebp
   10c2e:	ret    0x4
   10c31:	int3   
   10c32:	int3   
   10c33:	int3   
   10c34:	int3   
   10c35:	int3   
   10c36:	mov    edi,edi
   10c38:	push   ebp
   10c39:	mov    ebp,esp
   10c3b:	push   esi
   10c3c:	mov    esi,DWORD PTR [ebp+0x8]
   10c3f:	push   esi
   10c40:	call   0x108a8
   10c45:	test   al,al
   10c47:	je     0x10c4e
   10c49:	xor    eax,eax
   10c4b:	inc    eax
   10c4c:	jmp    0x10c7b
   10c4e:	push   esi
   10c4f:	call   0x109a8
   10c54:	test   al,al
   10c56:	je     0x10c5d
   10c58:	push   0x2
   10c5a:	pop    eax
   10c5b:	jmp    0x10c7b
   10c5d:	push   esi
   10c5e:	call   0x10a96
   10c63:	test   al,al
   10c65:	je     0x10c6b
   10c67:	push   0x3
   10c69:	jmp    0x10c5a
   10c6b:	push   esi
   10c6c:	call   0x10b70
   10c71:	movzx  eax,al
   10c74:	neg    eax
   10c76:	sbb    eax,eax
   10c78:	and    eax,0x4
   10c7b:	pop    esi
   10c7c:	pop    ebp
   10c7d:	ret    0x4
   10c80:	int3   
   10c81:	int3   
   10c82:	int3   
   10c83:	int3   
   10c84:	int3   
   10c85:	int3   
   10c86:	mov    edi,edi
   10c88:	push   ebp
   10c89:	mov    ebp,esp
   10c8b:	sub    esp,0x10
   10c8e:	push   esi
   10c8f:	push   edi
   10c90:	xor    eax,eax
   10c92:	mov    WORD PTR [ebp-0x8],ax
   10c96:	lea    edi,[ebp-0x6]
   10c99:	stos   DWORD PTR es:[edi],eax
   10c9a:	stos   WORD PTR es:[edi],ax
   10c9c:	mov    eax,DWORD PTR [ebp+0xc]
   10c9f:	mov    DWORD PTR [ebp-0x4],eax
   10ca2:	lea    ecx,[eax+0x2]
   10ca5:	mov    dx,WORD PTR [eax]
   10ca8:	inc    eax
   10ca9:	inc    eax
   10caa:	test   dx,dx
   10cad:	jne    0x10ca5
   10caf:	mov    esi,DWORD PTR [ebp+0x8]
   10cb2:	movzx  edx,WORD PTR [esi]
   10cb5:	sub    eax,ecx
   10cb7:	sar    eax,1
   10cb9:	lea    ecx,[eax+eax*1]
   10cbc:	mov    WORD PTR [ebp-0x8],cx
   10cc0:	mov    WORD PTR [ebp-0x6],cx
   10cc4:	cmp    dx,cx
   10cc7:	jb     0x10d06
   10cc9:	xor    eax,eax
   10ccb:	lea    edi,[ebp-0xe]
   10cce:	stos   DWORD PTR es:[edi],eax
   10ccf:	stos   WORD PTR es:[edi],ax
   10cd1:	mov    WORD PTR [ebp-0x10],cx
   10cd5:	mov    WORD PTR [ebp-0xe],cx
   10cd9:	movzx  eax,dx
   10cdc:	movzx  ecx,cx
   10cdf:	sub    eax,ecx
   10ce1:	mov    ecx,DWORD PTR [esi+0x4]
   10ce4:	cdq    
   10ce5:	sub    eax,edx
   10ce7:	sar    eax,1
   10ce9:	lea    eax,[ecx+eax*2]
   10cec:	mov    DWORD PTR [ebp-0xc],eax
   10cef:	push   0x1
   10cf1:	lea    eax,[ebp-0x8]
   10cf4:	push   eax
   10cf5:	lea    eax,[ebp-0x10]
   10cf8:	push   eax
   10cf9:	call   DWORD PTR ds:0x1ba20
   10cff:	neg    eax
   10d01:	sbb    eax,eax
   10d03:	inc    eax
   10d04:	jmp    0x10d08
   10d06:	xor    al,al
   10d08:	pop    edi
   10d09:	pop    esi
   10d0a:	leave  
   10d0b:	ret    0x8
   10d0e:	int3   
   10d0f:	int3   
   10d10:	int3   
   10d11:	int3   
   10d12:	int3   
   10d13:	int3   
   10d14:	mov    edi,edi
   10d16:	push   ebp
   10d17:	mov    ebp,esp
   10d19:	push   ebx
   10d1a:	xor    eax,eax
   10d1c:	push   eax
   10d1d:	push   eax
   10d1e:	push   eax
   10d1f:	push   eax
   10d20:	mov    ebx,0x70424
   10d25:	push   ebx
   10d26:	call   DWORD PTR ds:0x1ba28
   10d2c:	test   eax,eax
   10d2e:	jge    0x10d34
   10d30:	xor    al,al
   10d32:	jmp    0x10d57
   10d34:	push   esi
   10d35:	mov    esi,DWORD PTR [ebp+0x8]
   10d38:	push   edi
   10d39:	imul   esi,esi,0x14
   10d3c:	mov    edi,DWORD PTR [ebp+0xc]
   10d3f:	push   0x5
   10d41:	pop    ecx
   10d42:	push   0x0
   10d44:	add    esi,0x70e6c
   10d4a:	push   ebx
   10d4b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10d4d:	call   DWORD PTR ds:0x1ba24
   10d53:	pop    edi
   10d54:	mov    al,0x1
   10d56:	pop    esi
   10d57:	pop    ebx
   10d58:	pop    ebp
   10d59:	ret    0x8
   10d5c:	int3   
   10d5d:	int3   
   10d5e:	int3   
   10d5f:	int3   
   10d60:	int3   
   10d61:	int3   
   10d62:	mov    edi,edi
   10d64:	push   ebp
   10d65:	mov    ebp,esp
   10d67:	push   ebx
   10d68:	xor    eax,eax
   10d6a:	push   eax
   10d6b:	push   eax
   10d6c:	push   eax
   10d6d:	push   eax
   10d6e:	mov    ebx,0x70424
   10d73:	push   ebx
   10d74:	call   DWORD PTR ds:0x1ba28
   10d7a:	test   eax,eax
   10d7c:	jl     0x10d9f
   10d7e:	push   esi
   10d7f:	mov    esi,DWORD PTR [ebp+0xc]
   10d82:	push   edi
   10d83:	mov    edi,DWORD PTR [ebp+0x8]
   10d86:	imul   edi,edi,0x14
   10d89:	push   0x5
   10d8b:	pop    ecx
   10d8c:	push   0x0
   10d8e:	add    edi,0x70e6c
   10d94:	push   ebx
   10d95:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10d97:	call   DWORD PTR ds:0x1ba24
   10d9d:	pop    edi
   10d9e:	pop    esi
   10d9f:	pop    ebx
   10da0:	pop    ebp
   10da1:	ret    0x8
   10da4:	int3   
   10da5:	int3   
   10da6:	int3   
   10da7:	int3   
   10da8:	int3   
   10da9:	int3   
   10daa:	mov    edi,edi
   10dac:	push   ebp
   10dad:	mov    ebp,esp
   10daf:	sub    esp,0x14
   10db2:	and    DWORD PTR [ebp-0x14],0x0
   10db6:	push   edi
   10db7:	xor    eax,eax
   10db9:	lea    edi,[ebp-0x10]
   10dbc:	stos   DWORD PTR es:[edi],eax
   10dbd:	stos   DWORD PTR es:[edi],eax
   10dbe:	stos   DWORD PTR es:[edi],eax
   10dbf:	stos   DWORD PTR es:[edi],eax
   10dc0:	lea    eax,[ebp-0x14]
   10dc3:	push   eax
   10dc4:	push   DWORD PTR [ebp+0x8]
   10dc7:	call   0x10d62
   10dcc:	pop    edi
   10dcd:	leave  
   10dce:	ret    0x4
   10dd1:	int3   
   10dd2:	int3   
   10dd3:	int3   
   10dd4:	int3   
   10dd5:	int3   
   10dd6:	mov    edi,edi
   10dd8:	push   ebp
   10dd9:	mov    ebp,esp
   10ddb:	push   ebx
   10ddc:	xor    eax,eax
   10dde:	push   eax
   10ddf:	push   eax
   10de0:	push   eax
   10de1:	push   eax
   10de2:	mov    ebx,0x70db0
   10de7:	push   ebx
   10de8:	call   DWORD PTR ds:0x1ba28
   10dee:	test   eax,eax
   10df0:	jl     0x10e0c
   10df2:	push   esi
   10df3:	mov    esi,DWORD PTR [ebp+0x8]
   10df6:	push   edi
   10df7:	push   0x40
   10df9:	pop    ecx
   10dfa:	push   0x0
   10dfc:	mov    edi,0x70e98
   10e01:	push   ebx
   10e02:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10e04:	call   DWORD PTR ds:0x1ba24
   10e0a:	pop    edi
   10e0b:	pop    esi
   10e0c:	pop    ebx
   10e0d:	pop    ebp
   10e0e:	ret    0x4
   10e11:	int3   
   10e12:	int3   
   10e13:	int3   
   10e14:	int3   
   10e15:	int3   
   10e16:	mov    edi,edi
   10e18:	push   ebp
   10e19:	mov    ebp,esp
   10e1b:	push   ebx
   10e1c:	xor    eax,eax
   10e1e:	push   eax
   10e1f:	push   eax
   10e20:	push   eax
   10e21:	push   eax
   10e22:	mov    ebx,0x70db0
   10e27:	push   ebx
   10e28:	call   DWORD PTR ds:0x1ba28
   10e2e:	test   eax,eax
   10e30:	jge    0x10e36
   10e32:	xor    al,al
   10e34:	jmp    0x10e5c
   10e36:	push   esi
   10e37:	push   edi
   10e38:	mov    edi,DWORD PTR [ebp+0x8]
   10e3b:	push   0x40
   10e3d:	pop    ecx
   10e3e:	push   0x0
   10e40:	mov    esi,0x70e98
   10e45:	push   ebx
   10e46:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10e48:	call   DWORD PTR ds:0x1ba24
   10e4e:	xor    eax,eax
   10e50:	cmp    WORD PTR ds:0x70e98,ax
   10e57:	pop    edi
   10e58:	setne  al
   10e5b:	pop    esi
   10e5c:	pop    ebx
   10e5d:	pop    ebp
   10e5e:	ret    0x4
   10e61:	int3   
   10e62:	int3   
   10e63:	int3   
   10e64:	int3   
   10e65:	int3   
   10e66:	mov    eax,ds:0x70e18
   10e6b:	test   eax,eax
   10e6d:	je     0x10e7d
   10e6f:	push   eax
   10e70:	call   DWORD PTR ds:0x1ba2c
   10e76:	and    DWORD PTR ds:0x70e18,0x0
   10e7d:	ret    
   10e7e:	int3   
   10e7f:	int3   
   10e80:	int3   
   10e81:	int3   
   10e82:	int3   
   10e83:	int3   
   10e84:	mov    edi,edi
   10e86:	push   ebp
   10e87:	mov    ebp,esp
   10e89:	sub    esp,0x18
   10e8c:	and    DWORD PTR [ebp-0x18],0x0
   10e90:	push   edi
   10e91:	xor    eax,eax
   10e93:	lea    edi,[ebp-0x14]
   10e96:	stos   DWORD PTR es:[edi],eax
   10e97:	stos   DWORD PTR es:[edi],eax
   10e98:	stos   DWORD PTR es:[edi],eax
   10e99:	stos   DWORD PTR es:[edi],eax
   10e9a:	lea    eax,[ebp-0x18]
   10e9d:	push   eax
   10e9e:	push   0x1
   10ea0:	call   0x10d14
   10ea5:	pop    edi
   10ea6:	test   al,al
   10ea8:	je     0x10efc
   10eaa:	cmp    DWORD PTR [ebp-0x18],0x0
   10eae:	je     0x10efc
   10eb0:	lea    eax,[ebp-0x4]
   10eb3:	push   eax
   10eb4:	push   DWORD PTR [ebp-0x18]
   10eb7:	call   DWORD PTR ds:0x1ba38
   10ebd:	test   eax,eax
   10ebf:	jl     0x10efc
   10ec1:	push   esi
   10ec2:	push   DWORD PTR [ebp-0x4]
   10ec5:	call   DWORD PTR ds:0x1ba34
   10ecb:	mov    esi,DWORD PTR [ebp-0xc]
   10ece:	mov    eax,DWORD PTR [ebp+0x8]
   10ed1:	lea    edx,[esi+0x14]
   10ed4:	sub    edx,eax
   10ed6:	movzx  ecx,WORD PTR [eax]
   10ed9:	mov    WORD PTR [edx+eax*1],cx
   10edd:	inc    eax
   10ede:	inc    eax
   10edf:	test   cx,cx
   10ee2:	jne    0x10ed6
   10ee4:	mov    eax,DWORD PTR [esi+0x4]
   10ee7:	mov    cl,BYTE PTR [esi+0x8]
   10eea:	mov    BYTE PTR [eax],cl
   10eec:	call   DWORD PTR ds:0x1ba30
   10ef2:	mov    ecx,DWORD PTR [ebp-0x4]
   10ef5:	call   DWORD PTR ds:0x1bab0
   10efb:	pop    esi
   10efc:	leave  
   10efd:	ret    0x4
   10f00:	int3   
   10f01:	int3   
   10f02:	int3   
   10f03:	int3   
   10f04:	int3   
   10f05:	int3   
   10f06:	push   0x0
   10f08:	push   0x70de8
   10f0d:	call   DWORD PTR ds:0x1ba44
   10f13:	push   0x100
   10f18:	push   0x0
   10f1a:	push   0x704b0
   10f1f:	call   0x1a81e
   10f24:	add    esp,0xc
   10f27:	ret    
   10f28:	int3   
   10f29:	int3   
   10f2a:	int3   
   10f2b:	int3   
   10f2c:	int3   
   10f2d:	int3   
   10f2e:	mov    edi,edi
   10f30:	push   ebp
   10f31:	mov    ebp,esp
   10f33:	push   ebx
   10f34:	mov    ebx,DWORD PTR [ebp+0x8]
   10f37:	cmp    ebx,0x40
   10f3a:	ja     0x10f67
   10f3c:	push   esi
   10f3d:	push   edi
   10f3e:	xor    edi,edi
   10f40:	push   edi
   10f41:	push   edi
   10f42:	push   edi
   10f43:	push   edi
   10f44:	mov    esi,0x70de8
   10f49:	push   esi
   10f4a:	call   DWORD PTR ds:0x1ba28
   10f50:	test   eax,eax
   10f52:	jl     0x10f65
   10f54:	push   edi
   10f55:	lea    eax,[ebx*4+0x704b0]
   10f5c:	inc    DWORD PTR [eax]
   10f5e:	push   esi
   10f5f:	call   DWORD PTR ds:0x1ba24
   10f65:	pop    edi
   10f66:	pop    esi
   10f67:	pop    ebx
   10f68:	pop    ebp
   10f69:	ret    0x4
   10f6c:	int3   
   10f6d:	int3   
   10f6e:	int3   
   10f6f:	int3   
   10f70:	int3   
   10f71:	int3   
   10f72:	mov    edi,edi
   10f74:	push   ebp
   10f75:	mov    ebp,esp
   10f77:	push   ebx
   10f78:	push   esi
   10f79:	push   edi
   10f7a:	mov    edi,DWORD PTR [ebp+0x8]
   10f7d:	cmp    edi,0x40
   10f80:	ja     0x10fab
   10f82:	xor    ebx,ebx
   10f84:	push   ebx
   10f85:	push   ebx
   10f86:	push   ebx
   10f87:	push   ebx
   10f88:	mov    esi,0x70de8
   10f8d:	push   esi
   10f8e:	call   DWORD PTR ds:0x1ba28
   10f94:	test   eax,eax
   10f96:	jl     0x10fab
   10f98:	mov    edi,DWORD PTR [edi*4+0x704b0]
   10f9f:	push   ebx
   10fa0:	push   esi
   10fa1:	call   DWORD PTR ds:0x1ba24
   10fa7:	mov    eax,edi
   10fa9:	jmp    0x10fad
   10fab:	xor    eax,eax
   10fad:	pop    edi
   10fae:	pop    esi
   10faf:	pop    ebx
   10fb0:	pop    ebp
   10fb1:	ret    0x4
   10fb4:	int3   
   10fb5:	int3   
   10fb6:	int3   
   10fb7:	int3   
   10fb8:	int3   
   10fb9:	int3   
   10fba:	mov    edi,edi
   10fbc:	push   esi
   10fbd:	mov    esi,ecx
   10fbf:	push   DWORD PTR [esi+0x18]
   10fc2:	call   0x10836
   10fc7:	push   DWORD PTR [esi+0x10]
   10fca:	call   0x10836
   10fcf:	push   DWORD PTR [esi+0x8]
   10fd2:	call   0x10836
   10fd7:	push   DWORD PTR [esi]
   10fd9:	call   0x10836
   10fde:	add    esp,0x10
   10fe1:	pop    esi
   10fe2:	ret    
   10fe3:	int3   
   10fe4:	int3   
   10fe5:	int3   
   10fe6:	int3   
   10fe7:	int3   
   10fe8:	mov    edi,edi
   10fea:	push   esi
   10feb:	mov    esi,ecx
   10fed:	lea    ecx,[esi+0x8]
   10ff0:	call   0x10fba
   10ff5:	push   DWORD PTR [esi]
   10ff7:	call   0x10836
   10ffc:	pop    ecx
   10ffd:	pop    esi
   10ffe:	ret    
   10fff:	int3   
   11000:	int3   
   11001:	int3   
   11002:	int3   
   11003:	int3   
   11004:	mov    edi,edi
   11006:	push   esi
   11007:	mov    esi,ecx
   11009:	push   DWORD PTR [esi+0x8]
   1100c:	call   0x10836
   11011:	push   DWORD PTR [esi]
   11013:	call   0x10836
   11018:	pop    ecx
   11019:	pop    ecx
   1101a:	pop    esi
   1101b:	ret    
   1101c:	int3   
   1101d:	int3   
   1101e:	int3   
   1101f:	int3   
   11020:	int3   
   11021:	int3   
   11022:	mov    edi,edi
   11024:	push   ebp
   11025:	mov    ebp,esp
   11027:	push   esi
   11028:	mov    esi,DWORD PTR [ebp+0xc]
   1102b:	push   edi
   1102c:	mov    edi,ecx
   1102e:	cmp    esi,0xffffffff
   11031:	jne    0x11042
   11033:	mov    esi,DWORD PTR [ebp+0x8]
   11036:	lea    ecx,[esi+0x1]
   11039:	mov    al,BYTE PTR [esi]
   1103b:	inc    esi
   1103c:	test   al,al
   1103e:	jne    0x11039
   11040:	sub    esi,ecx
   11042:	lea    eax,[esi+0x1]
   11045:	push   eax
   11046:	call   0x10802
   1104b:	pop    ecx
   1104c:	mov    DWORD PTR [edi],eax
   1104e:	test   eax,eax
   11050:	jne    0x1105d
   11052:	push   0xc000009a
   11057:	call   DWORD PTR ds:0x1ba14
   1105d:	mov    eax,DWORD PTR [edi]
   1105f:	push   esi
   11060:	push   DWORD PTR [ebp+0x8]
   11063:	mov    BYTE PTR [esi+eax*1],0x0
   11067:	push   DWORD PTR [edi]
   11069:	call   0x1a82a
   1106e:	add    esp,0xc
   11071:	mov    DWORD PTR [edi+0x4],esi
   11074:	pop    edi
   11075:	pop    esi
   11076:	pop    ebp
   11077:	ret    0x8
   1107a:	int3   
   1107b:	int3   
   1107c:	int3   
   1107d:	int3   
   1107e:	int3   
   1107f:	int3   
   11080:	mov    edi,edi
   11082:	push   ebp
   11083:	mov    ebp,esp
   11085:	mov    eax,DWORD PTR [ebp+0x8]
   11088:	mov    edx,DWORD PTR [ebp+0xc]
   1108b:	push   esi
   1108c:	xor    esi,esi
   1108e:	jmp    0x110b3
   11090:	mov    ecx,eax
   11092:	and    ecx,0x1
   11095:	or     ecx,esi
   11097:	push   esi
   11098:	jne    0x110a5
   1109a:	push   0x2
   1109c:	push   edx
   1109d:	push   eax
   1109e:	call   0x1a812
   110a3:	jmp    0x110b3
   110a5:	push   0x3
   110a7:	push   edx
   110a8:	push   eax
   110a9:	call   0x1a806
   110ae:	add    eax,0x1
   110b1:	adc    edx,esi
   110b3:	cmp    eax,0x4
   110b6:	jne    0x11090
   110b8:	cmp    edx,esi
   110ba:	jne    0x11090
   110bc:	pop    esi
   110bd:	pop    ebp
   110be:	ret    0x8
   110c1:	int3   
   110c2:	int3   
   110c3:	int3   
   110c4:	int3   
   110c5:	int3   
   110c6:	mov    edi,edi
   110c8:	push   ebp
   110c9:	mov    ebp,esp
   110cb:	push   esi
   110cc:	push   edi
   110cd:	mov    edi,DWORD PTR [ebp+0xc]
   110d0:	mov    esi,ecx
   110d2:	cmp    edi,0xffffffff
   110d5:	jne    0x110e1
   110d7:	push   DWORD PTR [ebp+0x8]
   110da:	call   0x107e0
   110df:	mov    edi,eax
   110e1:	xor    ecx,ecx
   110e3:	push   0x2
   110e5:	pop    edx
   110e6:	lea    eax,[edi+0x1]
   110e9:	mul    edx
   110eb:	seto   cl
   110ee:	neg    ecx
   110f0:	or     ecx,eax
   110f2:	push   ecx
   110f3:	call   0x10802
   110f8:	pop    ecx
   110f9:	mov    DWORD PTR [esi],eax
   110fb:	test   eax,eax
   110fd:	jne    0x1110a
   110ff:	push   0xc000009a
   11104:	call   DWORD PTR ds:0x1ba14
   1110a:	mov    ecx,DWORD PTR [esi]
   1110c:	lea    eax,[edi+edi*1]
   1110f:	push   eax
   11110:	push   DWORD PTR [ebp+0x8]
   11113:	xor    edx,edx
   11115:	mov    WORD PTR [eax+ecx*1],dx
   11119:	push   DWORD PTR [esi]
   1111b:	call   0x1a82a
   11120:	add    esp,0xc
   11123:	mov    DWORD PTR [esi+0x4],edi
   11126:	pop    edi
   11127:	pop    esi
   11128:	pop    ebp
   11129:	ret    0x8
   1112c:	int3   
   1112d:	int3   
   1112e:	int3   
   1112f:	int3   
   11130:	int3   
   11131:	int3   
   11132:	mov    edi,edi
   11134:	push   ebp
   11135:	mov    ebp,esp
   11137:	mov    eax,DWORD PTR [ebp+0x8]
   1113a:	mov    edx,DWORD PTR ds:0x70fa0
   11140:	jmp    0x11144
   11142:	mov    eax,ecx
   11144:	mov    ecx,DWORD PTR [eax+0x8]
   11147:	cmp    ecx,edx
   11149:	jne    0x11142
   1114b:	pop    ebp
   1114c:	ret    0x4
   1114f:	int3   
   11150:	int3   
   11151:	int3   
   11152:	int3   
   11153:	int3   
   11154:	mov    edi,edi
   11156:	push   ebp
   11157:	mov    ebp,esp
   11159:	mov    eax,DWORD PTR [ebp+0x8]
   1115c:	mov    edx,DWORD PTR ds:0x70fa0
   11162:	jmp    0x11166
   11164:	mov    eax,ecx
   11166:	mov    ecx,DWORD PTR [eax]
   11168:	cmp    ecx,edx
   1116a:	jne    0x11164
   1116c:	pop    ebp
   1116d:	ret    0x4
   11170:	int3   
   11171:	int3   
   11172:	int3   
   11173:	int3   
   11174:	int3   
   11175:	int3   
   11176:	mov    edi,edi
   11178:	push   esi
   11179:	mov    esi,ecx
   1117b:	mov    ecx,DWORD PTR [esi]
   1117d:	cmp    DWORD PTR [ecx+0x14],0x0
   11181:	jne    0x11190
   11183:	mov    eax,DWORD PTR [ecx+0x4]
   11186:	cmp    DWORD PTR [eax+0x4],ecx
   11189:	jne    0x11190
   1118b:	mov    eax,DWORD PTR [ecx+0x8]
   1118e:	jmp    0x111ad
   11190:	mov    eax,DWORD PTR [ecx]
   11192:	cmp    eax,DWORD PTR ds:0x70fa0
   11198:	je     0x111a6
   1119a:	push   eax
   1119b:	call   0x11132
   111a0:	jmp    0x111ad
   111a2:	mov    DWORD PTR [esi],eax
   111a4:	mov    ecx,eax
   111a6:	mov    eax,DWORD PTR [ecx+0x4]
   111a9:	cmp    ecx,DWORD PTR [eax]
   111ab:	je     0x111a2
   111ad:	mov    DWORD PTR [esi],eax
   111af:	pop    esi
   111b0:	ret    
   111b1:	int3   
   111b2:	int3   
   111b3:	int3   
   111b4:	int3   
   111b5:	int3   
   111b6:	mov    edi,edi
   111b8:	push   esi
   111b9:	mov    esi,ecx
   111bb:	mov    ecx,DWORD PTR [esi]
   111bd:	mov    eax,DWORD PTR [ecx+0x8]
   111c0:	cmp    eax,DWORD PTR ds:0x70fa0
   111c6:	je     0x111d4
   111c8:	push   eax
   111c9:	call   0x11154
   111ce:	jmp    0x111e3
   111d0:	mov    DWORD PTR [esi],eax
   111d2:	mov    ecx,eax
   111d4:	mov    eax,DWORD PTR [ecx+0x4]
   111d7:	cmp    ecx,DWORD PTR [eax+0x8]
   111da:	je     0x111d0
   111dc:	mov    ecx,DWORD PTR [esi]
   111de:	cmp    DWORD PTR [ecx+0x8],eax
   111e1:	je     0x111e5
   111e3:	mov    DWORD PTR [esi],eax
   111e5:	pop    esi
   111e6:	ret    
   111e7:	int3   
   111e8:	int3   
   111e9:	int3   
   111ea:	int3   
   111eb:	int3   
   111ec:	mov    edi,edi
   111ee:	push   ebp
   111ef:	mov    ebp,esp
   111f1:	mov    edx,DWORD PTR [ebp+0x8]
   111f4:	mov    eax,DWORD PTR [edx+0x8]
   111f7:	push   esi
   111f8:	mov    esi,DWORD PTR [eax]
   111fa:	mov    DWORD PTR [edx+0x8],esi
   111fd:	mov    esi,DWORD PTR [eax]
   111ff:	cmp    esi,DWORD PTR ds:0x70fa8
   11205:	je     0x1120a
   11207:	mov    DWORD PTR [esi+0x4],edx
   1120a:	mov    esi,DWORD PTR [edx+0x4]
   1120d:	mov    DWORD PTR [eax+0x4],esi
   11210:	mov    ecx,DWORD PTR [ecx+0x4]
   11213:	pop    esi
   11214:	cmp    edx,DWORD PTR [ecx+0x4]
   11217:	jne    0x1121e
   11219:	mov    DWORD PTR [ecx+0x4],eax
   1121c:	jmp    0x1122c
   1121e:	mov    ecx,DWORD PTR [edx+0x4]
   11221:	cmp    edx,DWORD PTR [ecx]
   11223:	jne    0x11229
   11225:	mov    DWORD PTR [ecx],eax
   11227:	jmp    0x1122c
   11229:	mov    DWORD PTR [ecx+0x8],eax
   1122c:	mov    DWORD PTR [eax],edx
   1122e:	mov    DWORD PTR [edx+0x4],eax
   11231:	pop    ebp
   11232:	ret    0x4
   11235:	int3   
   11236:	int3   
   11237:	int3   
   11238:	int3   
   11239:	int3   
   1123a:	mov    edi,edi
   1123c:	push   ebp
   1123d:	mov    ebp,esp
   1123f:	mov    eax,DWORD PTR [ebp+0x8]
   11242:	mov    edx,DWORD PTR ds:0x70fa8
   11248:	jmp    0x1124c
   1124a:	mov    eax,ecx
   1124c:	mov    ecx,DWORD PTR [eax+0x8]
   1124f:	cmp    ecx,edx
   11251:	jne    0x1124a
   11253:	pop    ebp
   11254:	ret    0x4
   11257:	int3   
   11258:	int3   
   11259:	int3   
   1125a:	int3   
   1125b:	int3   
   1125c:	mov    edi,edi
   1125e:	push   ebp
   1125f:	mov    ebp,esp
   11261:	mov    edx,DWORD PTR [ebp+0x8]
   11264:	mov    eax,DWORD PTR [edx]
   11266:	push   esi
   11267:	mov    esi,DWORD PTR [eax+0x8]
   1126a:	mov    DWORD PTR [edx],esi
   1126c:	mov    esi,DWORD PTR [eax+0x8]
   1126f:	cmp    esi,DWORD PTR ds:0x70fa8
   11275:	je     0x1127a
   11277:	mov    DWORD PTR [esi+0x4],edx
   1127a:	mov    esi,DWORD PTR [edx+0x4]
   1127d:	mov    DWORD PTR [eax+0x4],esi
   11280:	mov    ecx,DWORD PTR [ecx+0x4]
   11283:	pop    esi
   11284:	cmp    edx,DWORD PTR [ecx+0x4]
   11287:	jne    0x1128e
   11289:	mov    DWORD PTR [ecx+0x4],eax
   1128c:	jmp    0x1129d
   1128e:	mov    ecx,DWORD PTR [edx+0x4]
   11291:	cmp    edx,DWORD PTR [ecx+0x8]
   11294:	jne    0x1129b
   11296:	mov    DWORD PTR [ecx+0x8],eax
   11299:	jmp    0x1129d
   1129b:	mov    DWORD PTR [ecx],eax
   1129d:	mov    DWORD PTR [eax+0x8],edx
   112a0:	mov    DWORD PTR [edx+0x4],eax
   112a3:	pop    ebp
   112a4:	ret    0x4
   112a7:	int3   
   112a8:	int3   
   112a9:	int3   
   112aa:	int3   
   112ab:	int3   
   112ac:	mov    edi,edi
   112ae:	push   esi
   112af:	mov    esi,ecx
   112b1:	mov    ecx,DWORD PTR [esi]
   112b3:	cmp    DWORD PTR [ecx+0x50],0x0
   112b7:	jne    0x112c6
   112b9:	mov    eax,DWORD PTR [ecx+0x4]
   112bc:	cmp    DWORD PTR [eax+0x4],ecx
   112bf:	jne    0x112c6
   112c1:	mov    eax,DWORD PTR [ecx+0x8]
   112c4:	jmp    0x112e3
   112c6:	mov    eax,DWORD PTR [ecx]
   112c8:	cmp    eax,DWORD PTR ds:0x70fa8
   112ce:	je     0x112dc
   112d0:	push   eax
   112d1:	call   0x1123a
   112d6:	jmp    0x112e3
   112d8:	mov    DWORD PTR [esi],eax
   112da:	mov    ecx,eax
   112dc:	mov    eax,DWORD PTR [ecx+0x4]
   112df:	cmp    ecx,DWORD PTR [eax]
   112e1:	je     0x112d8
   112e3:	mov    DWORD PTR [esi],eax
   112e5:	pop    esi
   112e6:	ret    
   112e7:	int3   
   112e8:	int3   
   112e9:	int3   
   112ea:	int3   
   112eb:	int3   
   112ec:	mov    edi,edi
   112ee:	push   ebp
   112ef:	mov    ebp,esp
   112f1:	mov    eax,DWORD PTR [ebp+0x8]
   112f4:	mov    edx,DWORD PTR ds:0x70fac
   112fa:	jmp    0x112fe
   112fc:	mov    eax,ecx
   112fe:	mov    ecx,DWORD PTR [eax+0x8]
   11301:	cmp    ecx,edx
   11303:	jne    0x112fc
   11305:	pop    ebp
   11306:	ret    0x4
   11309:	int3   
   1130a:	int3   
   1130b:	int3   
   1130c:	int3   
   1130d:	int3   
   1130e:	mov    edi,edi
   11310:	push   ebp
   11311:	mov    ebp,esp
   11313:	mov    eax,DWORD PTR [ebp+0x8]
   11316:	mov    edx,DWORD PTR ds:0x70fac
   1131c:	jmp    0x11320
   1131e:	mov    eax,ecx
   11320:	mov    ecx,DWORD PTR [eax]
   11322:	cmp    ecx,edx
   11324:	jne    0x1131e
   11326:	pop    ebp
   11327:	ret    0x4
   1132a:	int3   
   1132b:	int3   
   1132c:	int3   
   1132d:	int3   
   1132e:	int3   
   1132f:	int3   
   11330:	mov    edi,edi
   11332:	push   esi
   11333:	mov    esi,ecx
   11335:	mov    ecx,DWORD PTR [esi]
   11337:	cmp    DWORD PTR [ecx+0x1c],0x0
   1133b:	jne    0x1134a
   1133d:	mov    eax,DWORD PTR [ecx+0x4]
   11340:	cmp    DWORD PTR [eax+0x4],ecx
   11343:	jne    0x1134a
   11345:	mov    eax,DWORD PTR [ecx+0x8]
   11348:	jmp    0x11367
   1134a:	mov    eax,DWORD PTR [ecx]
   1134c:	cmp    eax,DWORD PTR ds:0x70fac
   11352:	je     0x11360
   11354:	push   eax
   11355:	call   0x112ec
   1135a:	jmp    0x11367
   1135c:	mov    DWORD PTR [esi],eax
   1135e:	mov    ecx,eax
   11360:	mov    eax,DWORD PTR [ecx+0x4]
   11363:	cmp    ecx,DWORD PTR [eax]
   11365:	je     0x1135c
   11367:	mov    DWORD PTR [esi],eax
   11369:	pop    esi
   1136a:	ret    
   1136b:	int3   
   1136c:	int3   
   1136d:	int3   
   1136e:	int3   
   1136f:	int3   
   11370:	mov    edi,edi
   11372:	push   ebp
   11373:	mov    ebp,esp
   11375:	mov    eax,DWORD PTR [ebp+0x8]
   11378:	mov    edx,DWORD PTR ds:0x70fb0
   1137e:	jmp    0x11382
   11380:	mov    eax,ecx
   11382:	mov    ecx,DWORD PTR [eax+0x8]
   11385:	cmp    ecx,edx
   11387:	jne    0x11380
   11389:	pop    ebp
   1138a:	ret    0x4
   1138d:	int3   
   1138e:	int3   
   1138f:	int3   
   11390:	int3   
   11391:	int3   
   11392:	mov    edi,edi
   11394:	push   ebp
   11395:	mov    ebp,esp
   11397:	mov    eax,DWORD PTR [ebp+0x8]
   1139a:	mov    edx,DWORD PTR ds:0x70fb0
   113a0:	jmp    0x113a4
   113a2:	mov    eax,ecx
   113a4:	mov    ecx,DWORD PTR [eax]
   113a6:	cmp    ecx,edx
   113a8:	jne    0x113a2
   113aa:	pop    ebp
   113ab:	ret    0x4
   113ae:	int3   
   113af:	int3   
   113b0:	int3   
   113b1:	int3   
   113b2:	int3   
   113b3:	int3   
   113b4:	mov    edi,edi
   113b6:	push   esi
   113b7:	mov    esi,ecx
   113b9:	mov    ecx,DWORD PTR [esi]
   113bb:	cmp    DWORD PTR [ecx+0x14],0x0
   113bf:	jne    0x113ce
   113c1:	mov    eax,DWORD PTR [ecx+0x4]
   113c4:	cmp    DWORD PTR [eax+0x4],ecx
   113c7:	jne    0x113ce
   113c9:	mov    eax,DWORD PTR [ecx+0x8]
   113cc:	jmp    0x113eb
   113ce:	mov    eax,DWORD PTR [ecx]
   113d0:	cmp    eax,DWORD PTR ds:0x70fb0
   113d6:	je     0x113e4
   113d8:	push   eax
   113d9:	call   0x11370
   113de:	jmp    0x113eb
   113e0:	mov    DWORD PTR [esi],eax
   113e2:	mov    ecx,eax
   113e4:	mov    eax,DWORD PTR [ecx+0x4]
   113e7:	cmp    ecx,DWORD PTR [eax]
   113e9:	je     0x113e0
   113eb:	mov    DWORD PTR [esi],eax
   113ed:	pop    esi
   113ee:	ret    
   113ef:	int3   
   113f0:	int3   
   113f1:	int3   
   113f2:	int3   
   113f3:	int3   
   113f4:	mov    edi,edi
   113f6:	push   esi
   113f7:	mov    esi,ecx
   113f9:	mov    ecx,DWORD PTR [esi]
   113fb:	mov    eax,DWORD PTR [ecx+0x8]
   113fe:	cmp    eax,DWORD PTR ds:0x70fac
   11404:	je     0x11412
   11406:	push   eax
   11407:	call   0x1130e
   1140c:	jmp    0x11421
   1140e:	mov    DWORD PTR [esi],eax
   11410:	mov    ecx,eax
   11412:	mov    eax,DWORD PTR [ecx+0x4]
   11415:	cmp    ecx,DWORD PTR [eax+0x8]
   11418:	je     0x1140e
   1141a:	mov    ecx,DWORD PTR [esi]
   1141c:	cmp    DWORD PTR [ecx+0x8],eax
   1141f:	je     0x11423
   11421:	mov    DWORD PTR [esi],eax
   11423:	pop    esi
   11424:	ret    
   11425:	int3   
   11426:	int3   
   11427:	int3   
   11428:	int3   
   11429:	int3   
   1142a:	mov    edi,edi
   1142c:	push   esi
   1142d:	mov    esi,ecx
   1142f:	mov    ecx,DWORD PTR [esi]
   11431:	mov    eax,DWORD PTR [ecx+0x8]
   11434:	cmp    eax,DWORD PTR ds:0x70fb0
   1143a:	je     0x11448
   1143c:	push   eax
   1143d:	call   0x11392
   11442:	jmp    0x11457
   11444:	mov    DWORD PTR [esi],eax
   11446:	mov    ecx,eax
   11448:	mov    eax,DWORD PTR [ecx+0x4]
   1144b:	cmp    ecx,DWORD PTR [eax+0x8]
   1144e:	je     0x11444
   11450:	mov    ecx,DWORD PTR [esi]
   11452:	cmp    DWORD PTR [ecx+0x8],eax
   11455:	je     0x11459
   11457:	mov    DWORD PTR [esi],eax
   11459:	pop    esi
   1145a:	ret    
   1145b:	int3   
   1145c:	int3   
   1145d:	int3   
   1145e:	int3   
   1145f:	int3   
   11460:	mov    edi,edi
   11462:	push   ebp
   11463:	mov    ebp,esp
   11465:	mov    eax,DWORD PTR [ebp+0x8]
   11468:	mov    edx,DWORD PTR ds:0x70fb8
   1146e:	jmp    0x11472
   11470:	mov    eax,ecx
   11472:	mov    ecx,DWORD PTR [eax+0x8]
   11475:	cmp    ecx,edx
   11477:	jne    0x11470
   11479:	pop    ebp
   1147a:	ret    0x4
   1147d:	int3   
   1147e:	int3   
   1147f:	int3   
   11480:	int3   
   11481:	int3   
   11482:	mov    edi,edi
   11484:	push   ebp
   11485:	mov    ebp,esp
   11487:	push   ecx
   11488:	push   ecx
   11489:	mov    eax,DWORD PTR [ebp+0x8]
   1148c:	mov    DWORD PTR [ebp-0x4],eax
   1148f:	lea    ecx,[eax+0x2]
   11492:	mov    dx,WORD PTR [eax]
   11495:	inc    eax
   11496:	inc    eax
   11497:	test   dx,dx
   1149a:	jne    0x11492
   1149c:	sub    eax,ecx
   1149e:	sar    eax,1
   114a0:	add    eax,eax
   114a2:	mov    WORD PTR [ebp-0x8],ax
   114a6:	mov    WORD PTR [ebp-0x6],ax
   114aa:	lea    eax,[ebp-0x8]
   114ad:	push   eax
   114ae:	call   DWORD PTR ds:0x1ba4c
   114b4:	leave  
   114b5:	ret    0x4
   114b8:	int3   
   114b9:	int3   
   114ba:	int3   
   114bb:	int3   
   114bc:	int3   
   114bd:	int3   
   114be:	mov    edi,edi
   114c0:	push   ebp
   114c1:	mov    ebp,esp
   114c3:	cmp    DWORD PTR [ebp+0x8],0x0
   114c7:	jge    0x114cd
   114c9:	and    DWORD PTR [ebp+0x8],0x0
   114cd:	push   DWORD PTR [ebp+0x8]
   114d0:	call   0x10802
   114d5:	pop    ecx
   114d6:	pop    ebp
   114d7:	ret    0x8
   114da:	int3   
   114db:	int3   
   114dc:	int3   
   114dd:	int3   
   114de:	int3   
   114df:	int3   
   114e0:	mov    edi,edi
   114e2:	push   ebp
   114e3:	mov    ebp,esp
   114e5:	mov    eax,DWORD PTR [ebp+0x8]
   114e8:	test   eax,eax
   114ea:	je     0x114f9
   114ec:	mov    ecx,DWORD PTR [ebp+0xc]
   114ef:	mov    edx,DWORD PTR [ecx]
   114f1:	mov    DWORD PTR [eax],edx
   114f3:	mov    ecx,DWORD PTR [ecx+0x4]
   114f6:	mov    DWORD PTR [eax+0x4],ecx
   114f9:	pop    ebp
   114fa:	ret    0x8
   114fd:	int3   
   114fe:	int3   
   114ff:	int3   
   11500:	int3   
   11501:	int3   
   11502:	mov    edi,edi
   11504:	push   ebp
   11505:	mov    ebp,esp
   11507:	push   esi
   11508:	mov    esi,ecx
   1150a:	call   0x10fe8
   1150f:	test   BYTE PTR [ebp+0x8],0x1
   11513:	je     0x1151c
   11515:	push   esi
   11516:	call   0x10836
   1151b:	pop    ecx
   1151c:	mov    eax,esi
   1151e:	pop    esi
   1151f:	pop    ebp
   11520:	ret    0x4
   11523:	int3   
   11524:	int3   
   11525:	int3   
   11526:	int3   
   11527:	int3   
   11528:	mov    edi,edi
   1152a:	push   ebp
   1152b:	mov    ebp,esp
   1152d:	push   esi
   1152e:	mov    esi,ecx
   11530:	call   0x11004
   11535:	test   BYTE PTR [ebp+0x8],0x1
   11539:	je     0x11542
   1153b:	push   esi
   1153c:	call   0x10836
   11541:	pop    ecx
   11542:	mov    eax,esi
   11544:	pop    esi
   11545:	pop    ebp
   11546:	ret    0x4
   11549:	int3   
   1154a:	int3   
   1154b:	int3   
   1154c:	int3   
   1154d:	int3   
   1154e:	mov    edi,edi
   11550:	push   ebp
   11551:	mov    ebp,esp
   11553:	mov    eax,ecx
   11555:	mov    ecx,DWORD PTR [ebp+0x8]
   11558:	mov    edx,DWORD PTR [ecx]
   1155a:	test   edx,edx
   1155c:	je     0x11565
   1155e:	mov    DWORD PTR [eax],edx
   11560:	inc    DWORD PTR [edx+0x4]
   11563:	jmp    0x11568
   11565:	and    DWORD PTR [eax],0x0
   11568:	pop    ebp
   11569:	ret    0x4
   1156c:	int3   
   1156d:	int3   
   1156e:	int3   
   1156f:	int3   
   11570:	int3   
   11571:	int3   
   11572:	mov    edi,edi
   11574:	push   ebp
   11575:	mov    ebp,esp
   11577:	push   esi
   11578:	mov    esi,ecx
   1157a:	mov    ecx,DWORD PTR [esi]
   1157c:	test   ecx,ecx
   1157e:	je     0x11585
   11580:	call   0x10854
   11585:	mov    eax,DWORD PTR [ebp+0x8]
   11588:	mov    eax,DWORD PTR [eax]
   1158a:	mov    DWORD PTR [esi],eax
   1158c:	inc    DWORD PTR [eax+0x4]
   1158f:	mov    eax,esi
   11591:	pop    esi
   11592:	pop    ebp
   11593:	ret    0x4
   11596:	int3   
   11597:	int3   
   11598:	int3   
   11599:	int3   
   1159a:	int3   
   1159b:	int3   
   1159c:	mov    edi,edi
   1159e:	push   ebp
   1159f:	mov    ebp,esp
   115a1:	push   ebx
   115a2:	push   esi
   115a3:	push   edi
   115a4:	mov    edi,DWORD PTR [ebp+0xc]
   115a7:	mov    esi,ecx
   115a9:	and    DWORD PTR [esi+0x4],0x0
   115ad:	lea    eax,[edi+0x1]
   115b0:	push   eax
   115b1:	mov    DWORD PTR [esi+0x8],edi
   115b4:	call   0x10802
   115b9:	push   edi
   115ba:	push   DWORD PTR [ebp+0x8]
   115bd:	mov    ebx,eax
   115bf:	push   ebx
   115c0:	call   0x1a82a
   115c5:	add    esp,0x10
   115c8:	inc    DWORD PTR [esi+0x4]
   115cb:	pop    edi
   115cc:	mov    DWORD PTR [esi],ebx
   115ce:	mov    eax,esi
   115d0:	pop    esi
   115d1:	pop    ebx
   115d2:	pop    ebp
   115d3:	ret    0x8
   115d6:	int3   
   115d7:	int3   
   115d8:	int3   
   115d9:	int3   
   115da:	int3   
   115db:	int3   
   115dc:	mov    edi,edi
   115de:	push   ebp
   115df:	mov    ebp,esp
   115e1:	push   ecx
   115e2:	push   esi
   115e3:	mov    esi,0x1aeb0
   115e8:	push   esi
   115e9:	call   0x11482
   115ee:	lea    ecx,[ebp-0x4]
   115f1:	push   ecx
   115f2:	push   0x0
   115f4:	push   0x0
   115f6:	push   0x1b
   115f8:	push   DWORD PTR [ebp+0x8]
   115fb:	call   eax
   115fd:	cmp    eax,0xc0000004
   11602:	jne    0x1166c
   11604:	mov    ecx,DWORD PTR [ebp+0xc]
   11607:	mov    edx,DWORD PTR [ebp-0x4]
   1160a:	push   edi
   1160b:	movzx  edi,WORD PTR [ecx+0x2]
   1160f:	lea    eax,[edx-0x8]
   11612:	cmp    edi,eax
   11614:	jae    0x11620
   11616:	mov    WORD PTR [ecx],ax
   11619:	mov    eax,0x80000005
   1161e:	jmp    0x1166b
   11620:	push   0x20736649
   11625:	push   edx
   11626:	push   0x0
   11628:	call   DWORD PTR ds:0x1ba40
   1162e:	mov    edi,eax
   11630:	test   edi,edi
   11632:	jne    0x1163b
   11634:	mov    eax,0xc000009a
   11639:	jmp    0x1166b
   1163b:	push   esi
   1163c:	call   0x11482
   11641:	lea    ecx,[ebp-0x4]
   11644:	push   ecx
   11645:	push   DWORD PTR [ebp-0x4]
   11648:	push   edi
   11649:	push   0x1b
   1164b:	push   DWORD PTR [ebp+0x8]
   1164e:	call   eax
   11650:	mov    esi,eax
   11652:	test   esi,esi
   11654:	jl     0x11660
   11656:	push   edi
   11657:	push   DWORD PTR [ebp+0xc]
   1165a:	call   DWORD PTR ds:0x1ba50
   11660:	push   0x0
   11662:	push   edi
   11663:	call   DWORD PTR ds:0x1ba1c
   11669:	mov    eax,esi
   1166b:	pop    edi
   1166c:	pop    esi
   1166d:	leave  
   1166e:	ret    0x8
   11671:	int3   
   11672:	int3   
   11673:	int3   
   11674:	int3   
   11675:	int3   
   11676:	mov    edi,edi
   11678:	push   ebp
   11679:	mov    ebp,esp
   1167b:	sub    esp,0x18
   1167e:	push   0x1aeb0
   11683:	call   0x11482
   11688:	push   0x0
   1168a:	push   0x18
   1168c:	lea    ecx,[ebp-0x18]
   1168f:	push   ecx
   11690:	push   0x0
   11692:	push   DWORD PTR [ebp+0x8]
   11695:	call   eax
   11697:	test   eax,eax
   11699:	jl     0x116a0
   1169b:	mov    eax,DWORD PTR [ebp-0x8]
   1169e:	jmp    0x116a2
   116a0:	xor    eax,eax
   116a2:	leave  
   116a3:	ret    0x4
   116a6:	int3   
   116a7:	int3   
   116a8:	int3   
   116a9:	int3   
   116aa:	int3   
   116ab:	int3   
   116ac:	mov    edi,edi
   116ae:	push   ebp
   116af:	mov    ebp,esp
   116b1:	mov    ecx,DWORD PTR ds:0x70e94
   116b7:	sub    esp,0x38
   116ba:	push   esi
   116bb:	xor    esi,esi
   116bd:	cmp    ecx,esi
   116bf:	jne    0x116c9
   116c1:	or     eax,0xffffffff
   116c4:	jmp    0x117c8
   116c9:	push   ebx
   116ca:	push   edi
   116cb:	xor    eax,eax
   116cd:	mov    ebx,0x1acbc
   116d2:	mov    DWORD PTR [ebp-0x20],esi
   116d5:	lea    edi,[ebp-0x1c]
   116d8:	push   ebx
   116d9:	mov    DWORD PTR [ebp-0x4],esi
   116dc:	stos   DWORD PTR es:[edi],eax
   116dd:	mov    DWORD PTR [ebp-0x38],0x18
   116e4:	mov    DWORD PTR [ebp-0x34],esi
   116e7:	mov    DWORD PTR [ebp-0x2c],esi
   116ea:	mov    DWORD PTR [ebp-0x30],esi
   116ed:	mov    DWORD PTR [ebp-0x28],esi
   116f0:	mov    DWORD PTR [ebp-0x24],esi
   116f3:	mov    DWORD PTR [ebp-0x18],ecx
   116f6:	mov    DWORD PTR [ebp-0x14],esi
   116f9:	call   0x11482
   116fe:	lea    ecx,[ebp-0x18]
   11701:	push   ecx
   11702:	lea    ecx,[ebp-0x38]
   11705:	push   ecx
   11706:	push   0x400
   1170b:	lea    ecx,[ebp-0x10]
   1170e:	push   ecx
   1170f:	call   eax
   11711:	mov    edi,eax
   11713:	cmp    edi,esi
   11715:	jl     0x117c4
   1171b:	push   0x1adb0
   11720:	call   0x11482
   11725:	lea    ecx,[ebp-0xc]
   11728:	push   ecx
   11729:	push   0x8
   1172b:	push   DWORD PTR [ebp-0x10]
   1172e:	call   eax
   11730:	mov    edi,eax
   11732:	cmp    edi,esi
   11734:	jl     0x117bb
   1173a:	push   0x1add6
   1173f:	call   0x11482
   11744:	lea    ecx,[ebp-0x4]
   11747:	push   ecx
   11748:	push   0x1
   1174a:	push   esi
   1174b:	push   esi
   1174c:	push   0x1
   1174e:	push   DWORD PTR [ebp-0xc]
   11751:	call   eax
   11753:	mov    edi,eax
   11755:	cmp    edi,esi
   11757:	jl     0x117b2
   11759:	mov    eax,DWORD PTR [ebp+0x8]
   1175c:	push   ebx
   1175d:	mov    DWORD PTR [ebp-0x18],eax
   11760:	call   0x11482
   11765:	lea    ecx,[ebp-0x18]
   11768:	push   ecx
   11769:	lea    ecx,[ebp-0x38]
   1176c:	push   ecx
   1176d:	push   0x200
   11772:	lea    ecx,[ebp-0x8]
   11775:	push   ecx
   11776:	call   eax
   11778:	mov    edi,eax
   1177a:	cmp    edi,esi
   1177c:	jl     0x117a9
   1177e:	mov    eax,DWORD PTR [ebp-0x4]
   11781:	push   0x1adf8
   11786:	mov    DWORD PTR [ebp-0x20],eax
   11789:	mov    DWORD PTR [ebp-0x1c],esi
   1178c:	call   0x11482
   11791:	push   0x8
   11793:	lea    ecx,[ebp-0x20]
   11796:	push   ecx
   11797:	push   0x9
   11799:	push   DWORD PTR [ebp-0x8]
   1179c:	call   eax
   1179e:	push   DWORD PTR [ebp-0x8]
   117a1:	mov    edi,eax
   117a3:	call   DWORD PTR ds:0x1bab4
   117a9:	push   DWORD PTR [ebp-0x4]
   117ac:	call   DWORD PTR ds:0x1bab4
   117b2:	push   DWORD PTR [ebp-0xc]
   117b5:	call   DWORD PTR ds:0x1bab4
   117bb:	push   DWORD PTR [ebp-0x10]
   117be:	call   DWORD PTR ds:0x1bab4
   117c4:	mov    eax,edi
   117c6:	pop    edi
   117c7:	pop    ebx
   117c8:	pop    esi
   117c9:	leave  
   117ca:	ret    0x4
   117cd:	int3   
   117ce:	int3   
   117cf:	int3   
   117d0:	int3   
   117d1:	int3   
   117d2:	mov    edi,edi
   117d4:	push   ebp
   117d5:	mov    ebp,esp
   117d7:	sub    esp,0x43c
   117dd:	mov    eax,ds:0x70418
   117e2:	xor    eax,ebp
   117e4:	mov    DWORD PTR [ebp-0x4],eax
   117e7:	mov    eax,DWORD PTR [ebp+0xc]
   117ea:	push   ebx
   117eb:	push   esi
   117ec:	mov    esi,DWORD PTR [ebp+0x8]
   117ef:	push   edi
   117f0:	xor    ebx,ebx
   117f2:	push   0x3ff
   117f7:	mov    DWORD PTR [ebp-0x418],eax
   117fd:	lea    eax,[ebp-0x403]
   11803:	push   ebx
   11804:	push   eax
   11805:	mov    DWORD PTR [ebp-0x424],esi
   1180b:	mov    BYTE PTR [ebp-0x404],bl
   11811:	call   0x1a81e
   11816:	add    esp,0xc
   11819:	lea    eax,[ebp-0x410]
   1181f:	push   eax
   11820:	push   0x400
   11825:	lea    eax,[ebp-0x404]
   1182b:	push   eax
   1182c:	push   ebx
   1182d:	push   ebx
   1182e:	push   esi
   1182f:	jmp    0x119e9
   11834:	cmp    eax,ebx
   11836:	jl     0x11a0a
   1183c:	mov    eax,DWORD PTR [ebp-0x418]
   11842:	lea    edx,[eax+0x2]
   11845:	mov    cx,WORD PTR [eax]
   11848:	inc    eax
   11849:	inc    eax
   1184a:	cmp    cx,bx
   1184d:	jne    0x11845
   1184f:	mov    ecx,DWORD PTR [ebp-0x3f8]
   11855:	sub    eax,edx
   11857:	shr    ecx,1
   11859:	sar    eax,1
   1185b:	lea    esi,[ecx+eax*1+0x2]
   1185f:	xor    ecx,ecx
   11861:	push   0x2
   11863:	pop    edx
   11864:	mov    eax,esi
   11866:	mul    edx
   11868:	seto   cl
   1186b:	neg    ecx
   1186d:	or     ecx,eax
   1186f:	push   ecx
   11870:	call   0x10802
   11875:	mov    edi,eax
   11877:	lea    eax,[esi+esi*1]
   1187a:	push   eax
   1187b:	push   ebx
   1187c:	push   edi
   1187d:	mov    DWORD PTR [ebp-0x40c],edi
   11883:	call   0x1a81e
   11888:	mov    eax,DWORD PTR [ebp-0x418]
   1188e:	add    esp,0x10
   11891:	mov    ecx,eax
   11893:	mov    dx,WORD PTR [eax]
   11896:	inc    eax
   11897:	inc    eax
   11898:	cmp    dx,bx
   1189b:	jne    0x11893
   1189d:	sub    eax,ecx
   1189f:	dec    edi
   118a0:	mov    esi,ecx
   118a2:	dec    edi
   118a3:	mov    cx,WORD PTR [edi+0x2]
   118a7:	inc    edi
   118a8:	inc    edi
   118a9:	cmp    cx,bx
   118ac:	jne    0x118a3
   118ae:	mov    ecx,eax
   118b0:	shr    ecx,0x2
   118b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   118b5:	mov    ecx,eax
   118b7:	and    ecx,0x3
   118ba:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   118bc:	mov    edi,DWORD PTR [ebp-0x40c]
   118c2:	dec    edi
   118c3:	dec    edi
   118c4:	mov    ax,WORD PTR [edi+0x2]
   118c8:	inc    edi
   118c9:	inc    edi
   118ca:	cmp    ax,bx
   118cd:	jne    0x118c4
   118cf:	mov    esi,0x1abea
   118d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   118d5:	mov    eax,DWORD PTR [ebp-0x3f8]
   118db:	shr    eax,1
   118dd:	push   eax
   118de:	lea    eax,[ebp-0x3f4]
   118e4:	push   eax
   118e5:	push   DWORD PTR [ebp-0x40c]
   118eb:	call   0x1a836
   118f0:	mov    esi,DWORD PTR [ebp-0x40c]
   118f6:	mov    eax,esi
   118f8:	add    esp,0xc
   118fb:	mov    DWORD PTR [ebp-0x41c],esi
   11901:	lea    edx,[eax+0x2]
   11904:	mov    cx,WORD PTR [eax]
   11907:	inc    eax
   11908:	inc    eax
   11909:	cmp    cx,bx
   1190c:	jne    0x11904
   1190e:	sub    eax,edx
   11910:	sar    eax,1
   11912:	add    eax,eax
   11914:	mov    WORD PTR [ebp-0x41e],ax
   1191b:	mov    WORD PTR [ebp-0x420],ax
   11922:	lea    eax,[ebp-0x420]
   11928:	push   0x1af30
   1192d:	mov    DWORD PTR [ebp-0x43c],0x18
   11937:	mov    DWORD PTR [ebp-0x438],ebx
   1193d:	mov    DWORD PTR [ebp-0x430],0x40
   11947:	mov    DWORD PTR [ebp-0x434],eax
   1194d:	mov    DWORD PTR [ebp-0x42c],ebx
   11953:	mov    DWORD PTR [ebp-0x428],ebx
   11959:	call   0x11482
   1195e:	lea    ecx,[ebp-0x43c]
   11964:	push   ecx
   11965:	push   0xf003f
   1196a:	lea    ecx,[ebp-0x414]
   11970:	push   ecx
   11971:	call   eax
   11973:	push   esi
   11974:	test   eax,eax
   11976:	jl     0x11a04
   1197c:	push   DWORD PTR [ebp-0x414]
   11982:	call   0x117d2
   11987:	push   esi
   11988:	mov    BYTE PTR [ebp-0x405],al
   1198e:	call   0x10836
   11993:	mov    DWORD PTR [esp],0x1af44
   1199a:	call   0x11482
   1199f:	push   DWORD PTR [ebp-0x414]
   119a5:	call   eax
   119a7:	test   eax,eax
   119a9:	jl     0x11a0a
   119ab:	cmp    BYTE PTR [ebp-0x405],bl
   119b1:	je     0x11a0a
   119b3:	push   0x3ff
   119b8:	lea    eax,[ebp-0x403]
   119be:	push   ebx
   119bf:	push   eax
   119c0:	mov    BYTE PTR [ebp-0x404],bl
   119c6:	call   0x1a81e
   119cb:	add    esp,0xc
   119ce:	lea    eax,[ebp-0x410]
   119d4:	push   eax
   119d5:	push   0x400
   119da:	lea    eax,[ebp-0x404]
   119e0:	push   eax
   119e1:	push   ebx
   119e2:	push   ebx
   119e3:	push   DWORD PTR [ebp-0x424]
   119e9:	mov    DWORD PTR [ebp-0x410],ebx
   119ef:	call   DWORD PTR ds:0x1ba54
   119f5:	cmp    eax,0x8000001a
   119fa:	jne    0x11834
   11a00:	mov    al,0x1
   11a02:	jmp    0x11a0c
   11a04:	call   0x10836
   11a09:	pop    ecx
   11a0a:	xor    al,al
   11a0c:	mov    ecx,DWORD PTR [ebp-0x4]
   11a0f:	pop    edi
   11a10:	pop    esi
   11a11:	xor    ecx,ebp
   11a13:	pop    ebx
   11a14:	call   0x1a7c5
   11a19:	leave  
   11a1a:	ret    0x8
   11a1d:	int3   
   11a1e:	int3   
   11a1f:	int3   
   11a20:	int3   
   11a21:	int3   
   11a22:	push   0x28
   11a24:	push   0x70088
   11a29:	call   0x1a874
   11a2e:	xor    esi,esi
   11a30:	mov    DWORD PTR [ebp-0x28],esi
   11a33:	mov    DWORD PTR [ebp-0x2c],esi
   11a36:	mov    ebx,DWORD PTR [ebp+0x8]
   11a39:	cmp    ebx,esi
   11a3b:	jne    0x11a44
   11a3d:	xor    eax,eax
   11a3f:	jmp    0x11b26
   11a44:	mov    DWORD PTR [ebp-0x4],esi
   11a47:	push   0x1ad76
   11a4c:	call   0x11482
   11a51:	lea    ecx,[ebp-0x2c]
   11a54:	push   ecx
   11a55:	push   esi
   11a56:	push   0x1
   11a58:	push   ebx
   11a59:	call   eax
   11a5b:	mov    edx,eax
   11a5d:	sub    edx,ebx
   11a5f:	mov    DWORD PTR [ebp-0x38],edx
   11a62:	mov    esi,DWORD PTR [eax+0x1c]
   11a65:	add    esi,ebx
   11a67:	mov    edi,DWORD PTR [eax+0x24]
   11a6a:	add    edi,ebx
   11a6c:	mov    ecx,DWORD PTR [eax+0x20]
   11a6f:	add    ecx,ebx
   11a71:	and    DWORD PTR [ebp-0x20],0x0
   11a75:	mov    ebx,DWORD PTR [ebp-0x20]
   11a78:	cmp    ebx,DWORD PTR [eax+0x18]
   11a7b:	jae    0x11b0e
   11a81:	movsx  ebx,WORD PTR [edi+ebx*2]
   11a85:	cmp    ebx,DWORD PTR [eax+0x14]
   11a88:	jae    0x11b02
   11a8a:	lea    ebx,[esi+ebx*4]
   11a8d:	mov    DWORD PTR [ebp-0x34],ebx
   11a90:	cmp    DWORD PTR [ebx],edx
   11a92:	jb     0x11aa0
   11a94:	mov    ebx,DWORD PTR [ebp-0x2c]
   11a97:	add    edx,ebx
   11a99:	mov    ebx,DWORD PTR [ebp-0x34]
   11a9c:	cmp    DWORD PTR [ebx],edx
   11a9e:	jb     0x11af7
   11aa0:	mov    edx,DWORD PTR [ebp+0xc]
   11aa3:	mov    DWORD PTR [ebp-0x30],edx
   11aa6:	mov    edx,DWORD PTR [ebp-0x20]
   11aa9:	mov    edx,DWORD PTR [ecx+edx*4]
   11aac:	add    edx,DWORD PTR [ebp+0x8]
   11aaf:	mov    DWORD PTR [ebp-0x24],edx
   11ab2:	mov    dl,BYTE PTR [edx]
   11ab4:	mov    ebx,DWORD PTR [ebp-0x30]
   11ab7:	cmp    dl,BYTE PTR [ebx]
   11ab9:	jne    0x11ae4
   11abb:	test   dl,dl
   11abd:	je     0x11ae0
   11abf:	mov    edx,DWORD PTR [ebp-0x24]
   11ac2:	mov    dl,BYTE PTR [edx+0x1]
   11ac5:	mov    BYTE PTR [ebp-0x19],dl
   11ac8:	cmp    dl,BYTE PTR [ebx+0x1]
   11acb:	jne    0x11ae4
   11acd:	mov    edx,DWORD PTR [ebp-0x24]
   11ad0:	inc    edx
   11ad1:	inc    edx
   11ad2:	mov    DWORD PTR [ebp-0x24],edx
   11ad5:	inc    ebx
   11ad6:	inc    ebx
   11ad7:	mov    DWORD PTR [ebp-0x30],ebx
   11ada:	cmp    BYTE PTR [ebp-0x19],0x0
   11ade:	jne    0x11ab2
   11ae0:	xor    edx,edx
   11ae2:	jmp    0x11ae9
   11ae4:	sbb    edx,edx
   11ae6:	sbb    edx,0xffffffff
   11ae9:	test   edx,edx
   11aeb:	jne    0x11af7
   11aed:	mov    eax,DWORD PTR [ebp-0x34]
   11af0:	mov    eax,DWORD PTR [eax]
   11af2:	add    eax,DWORD PTR [ebp+0x8]
   11af5:	jmp    0x11b1c
   11af7:	inc    DWORD PTR [ebp-0x20]
   11afa:	mov    edx,DWORD PTR [ebp-0x38]
   11afd:	jmp    0x11a75
   11b02:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   11b09:	jmp    0x11a3d
   11b0e:	mov    eax,DWORD PTR [ebp-0x28]
   11b11:	jmp    0x11b1f
   11b13:	xor    eax,eax
   11b15:	inc    eax
   11b16:	ret    
   11b17:	mov    esp,DWORD PTR [ebp-0x18]
   11b1a:	xor    eax,eax
   11b1c:	mov    DWORD PTR [ebp-0x28],eax
   11b1f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   11b26:	call   0x1a8b9
   11b2b:	ret    0x8
   11b2e:	int3   
   11b2f:	int3   
   11b30:	int3   
   11b31:	int3   
   11b32:	int3   
   11b33:	int3   
   11b34:	mov    edi,edi
   11b36:	push   ebp
   11b37:	mov    ebp,esp
   11b39:	sub    esp,0x48
   11b3c:	mov    eax,DWORD PTR [ebp+0xc]
   11b3f:	mov    eax,DWORD PTR [eax]
   11b41:	push   edi
   11b42:	xor    edi,edi
   11b44:	push   0x1acbc
   11b49:	mov    DWORD PTR [ebp-0x48],0x18
   11b50:	mov    DWORD PTR [ebp-0x44],edi
   11b53:	mov    DWORD PTR [ebp-0x3c],0x200
   11b5a:	mov    DWORD PTR [ebp-0x40],edi
   11b5d:	mov    DWORD PTR [ebp-0x38],edi
   11b60:	mov    DWORD PTR [ebp-0x34],edi
   11b63:	mov    DWORD PTR [ebp-0x30],eax
   11b66:	mov    DWORD PTR [ebp-0x2c],edi
   11b69:	mov    DWORD PTR [ebp-0x10],edi
   11b6c:	call   0x11482
   11b71:	lea    ecx,[ebp-0x30]
   11b74:	push   ecx
   11b75:	lea    ecx,[ebp-0x48]
   11b78:	push   ecx
   11b79:	push   0x1f0fff
   11b7e:	lea    ecx,[ebp-0x10]
   11b81:	push   ecx
   11b82:	call   eax
   11b84:	test   eax,eax
   11b86:	jl     0x11ee7
   11b8c:	push   ebx
   11b8d:	push   esi
   11b8e:	mov    ebx,0x1acd8
   11b93:	push   ebx
   11b94:	mov    DWORD PTR [ebp-0xc],edi
   11b97:	mov    DWORD PTR [ebp-0x14],0x400
   11b9e:	call   0x11482
   11ba3:	push   0x40
   11ba5:	mov    esi,0x1000
   11baa:	push   esi
   11bab:	lea    ecx,[ebp-0x14]
   11bae:	push   ecx
   11baf:	push   edi
   11bb0:	lea    ecx,[ebp-0xc]
   11bb3:	push   ecx
   11bb4:	push   DWORD PTR [ebp-0x10]
   11bb7:	call   eax
   11bb9:	test   eax,eax
   11bbb:	jl     0x11bc6
   11bbd:	mov    eax,DWORD PTR [ebp-0xc]
   11bc0:	mov    ecx,DWORD PTR [ebp+0xc]
   11bc3:	mov    DWORD PTR [ecx+0x8],eax
   11bc6:	push   ebx
   11bc7:	mov    DWORD PTR [ebp-0x18],edi
   11bca:	mov    DWORD PTR [ebp-0x14],0x400
   11bd1:	call   0x11482
   11bd6:	push   0x4
   11bd8:	push   esi
   11bd9:	lea    ecx,[ebp-0x14]
   11bdc:	push   ecx
   11bdd:	push   edi
   11bde:	lea    ecx,[ebp-0x18]
   11be1:	push   ecx
   11be2:	push   DWORD PTR [ebp-0x10]
   11be5:	call   eax
   11be7:	test   eax,eax
   11be9:	jl     0x11bf4
   11beb:	mov    eax,DWORD PTR [ebp-0x18]
   11bee:	mov    ecx,DWORD PTR [ebp+0xc]
   11bf1:	mov    DWORD PTR [ecx+0xc],eax
   11bf4:	push   0x1ad08
   11bf9:	call   0x11482
   11bfe:	lea    ecx,[ebp-0x24]
   11c01:	push   ecx
   11c02:	push   DWORD PTR [ebp-0x30]
   11c05:	call   eax
   11c07:	test   eax,eax
   11c09:	jl     0x11ee5
   11c0f:	push   DWORD PTR [ebp-0x24]
   11c12:	call   DWORD PTR ds:0x1ba34
   11c18:	mov    eax,DWORD PTR [ebp-0xc]
   11c1b:	mov    DWORD PTR [ebp-0x20],edi
   11c1e:	cmp    eax,edi
   11c20:	je     0x11ecd
   11c26:	mov    esi,DWORD PTR [ebp-0x18]
   11c29:	cmp    esi,edi
   11c2b:	je     0x11e3a
   11c31:	push   0x214
   11c36:	push   edi
   11c37:	push   esi
   11c38:	mov    DWORD PTR [ebp-0x4],eax
   11c3b:	call   0x1a81e
   11c40:	mov    eax,DWORD PTR [ebp-0x4]
   11c43:	add    esp,0xc
   11c46:	push   0x60
   11c48:	lea    ebx,[esi+0xc]
   11c4b:	push   eax
   11c4c:	mov    DWORD PTR [ebx],edi
   11c4e:	mov    DWORD PTR [esi],edi
   11c50:	mov    DWORD PTR [ebp-0x20],eax
   11c53:	call   0x17bc4
   11c58:	push   0x68
   11c5a:	push   eax
   11c5b:	call   0x17bc4
   11c60:	push   ebx
   11c61:	push   eax
   11c62:	call   0x17bdc
   11c67:	push   0x6a
   11c69:	pop    ebx
   11c6a:	push   ebx
   11c6b:	push   eax
   11c6c:	call   0x17bc4
   11c71:	push   edi
   11c72:	push   eax
   11c73:	call   0x17bc4
   11c78:	push   ebx
   11c79:	push   eax
   11c7a:	call   0x17bc4
   11c7f:	push   edi
   11c80:	push   eax
   11c81:	call   0x17bc4
   11c86:	push   0x68
   11c88:	push   eax
   11c89:	call   0x17bc4
   11c8e:	push   edi
   11c8f:	push   eax
   11c90:	mov    DWORD PTR [ebp-0x28],eax
   11c93:	call   0x17bdc
   11c98:	push   ebx
   11c99:	push   eax
   11c9a:	call   0x17bc4
   11c9f:	push   edi
   11ca0:	push   eax
   11ca1:	call   0x17bc4
   11ca6:	push   ebx
   11ca7:	push   eax
   11ca8:	call   0x17bc4
   11cad:	push   edi
   11cae:	push   eax
   11caf:	call   0x17bc4
   11cb4:	push   0xb8
   11cb9:	push   eax
   11cba:	call   0x17bc4
   11cbf:	push   DWORD PTR ds:0x70e60
   11cc5:	push   eax
   11cc6:	call   0x17bdc
   11ccb:	mov    ebx,0xc00b
   11cd0:	push   ebx
   11cd1:	push   eax
   11cd2:	call   0x17bf6
   11cd7:	push   0x74
   11cd9:	push   eax
   11cda:	call   0x17bc4
   11cdf:	push   0x9
   11ce1:	push   eax
   11ce2:	call   0x17bc4
   11ce7:	mov    edi,0xd0ff
   11cec:	push   edi
   11ced:	push   eax
   11cee:	call   0x17bf6
   11cf3:	push   0xb9
   11cf8:	push   eax
   11cf9:	call   0x17bc4
   11cfe:	lea    ecx,[esi+0x10]
   11d01:	push   ecx
   11d02:	push   eax
   11d03:	call   0x17bdc
   11d08:	push   0x189
   11d0d:	push   eax
   11d0e:	call   0x17bf6
   11d13:	push   0x61
   11d15:	push   eax
   11d16:	call   0x17bc4
   11d1b:	and    DWORD PTR [ebp-0x8],0x0
   11d1f:	mov    DWORD PTR [ebp-0x4],eax
   11d22:	mov    eax,DWORD PTR [ebp+0x8]
   11d25:	mov    DWORD PTR [ebp-0x1c],eax
   11d28:	push   0x0
   11d2a:	push   DWORD PTR [ebp-0x1c]
   11d2d:	push   DWORD PTR [ebp-0x4]
   11d30:	call   0x18388
   11d35:	mov    ecx,eax
   11d37:	sub    ecx,DWORD PTR [ebp-0x1c]
   11d3a:	mov    DWORD PTR [ebp-0x1c],eax
   11d3d:	add    DWORD PTR [ebp-0x8],ecx
   11d40:	add    DWORD PTR [ebp-0x4],ecx
   11d43:	cmp    DWORD PTR [ebp-0x8],0x5
   11d47:	jb     0x11d28
   11d49:	mov    ecx,DWORD PTR [ebp+0x8]
   11d4c:	push   DWORD PTR [ebp-0x4]
   11d4f:	mov    eax,DWORD PTR [ebp-0x8]
   11d52:	add    eax,ecx
   11d54:	push   eax
   11d55:	call   0x17c3a
   11d5a:	push   eax
   11d5b:	push   DWORD PTR [ebp-0x28]
   11d5e:	mov    DWORD PTR [ebp-0x4],eax
   11d61:	call   0x17bdc
   11d66:	mov    eax,DWORD PTR [ebp-0x4]
   11d69:	push   0xeb
   11d6e:	push   eax
   11d6f:	mov    DWORD PTR [esi],eax
   11d71:	call   0x17bc4
   11d76:	push   0x0
   11d78:	push   eax
   11d79:	mov    DWORD PTR [esi+0x4],eax
   11d7c:	call   0x17bc4
   11d81:	push   0x68
   11d83:	push   eax
   11d84:	call   0x17bc4
   11d89:	push   0x3e8
   11d8e:	push   eax
   11d8f:	call   0x17bdc
   11d94:	push   0xb8
   11d99:	push   eax
   11d9a:	call   0x17bc4
   11d9f:	push   DWORD PTR ds:0x70e64
   11da5:	push   eax
   11da6:	call   0x17bdc
   11dab:	push   ebx
   11dac:	push   eax
   11dad:	call   0x17bf6
   11db2:	push   0x74
   11db4:	push   eax
   11db5:	call   0x17bc4
   11dba:	push   0x2
   11dbc:	push   eax
   11dbd:	call   0x17bc4
   11dc2:	push   edi
   11dc3:	push   eax
   11dc4:	call   0x17bf6
   11dc9:	push   eax
   11dca:	push   DWORD PTR [esi]
   11dcc:	call   0x17c3a
   11dd1:	mov    cl,al
   11dd3:	sub    cl,BYTE PTR [esi+0x4]
   11dd6:	push   0x68
   11dd8:	dec    cl
   11dda:	push   eax
   11ddb:	mov    BYTE PTR [esi+0x8],cl
   11dde:	call   0x17bc4
   11de3:	add    esi,0x14
   11de6:	push   esi
   11de7:	push   eax
   11de8:	call   0x17bdc
   11ded:	push   0xb8
   11df2:	push   eax
   11df3:	call   0x17bc4
   11df8:	push   DWORD PTR ds:0x70e58
   11dfe:	push   eax
   11dff:	call   0x17bdc
   11e04:	push   ebx
   11e05:	push   eax
   11e06:	call   0x17bf6
   11e0b:	push   0x74
   11e0d:	push   eax
   11e0e:	call   0x17bc4
   11e13:	push   0x2
   11e15:	push   eax
   11e16:	call   0x17bc4
   11e1b:	push   edi
   11e1c:	push   eax
   11e1d:	call   0x17bf6
   11e22:	push   0xc2
   11e27:	push   eax
   11e28:	call   0x17bc4
   11e2d:	push   0x4
   11e2f:	push   eax
   11e30:	call   0x17bf6
   11e35:	mov    eax,DWORD PTR [ebp-0xc]
   11e38:	xor    edi,edi
   11e3a:	cmp    eax,edi
   11e3c:	je     0x11ecd
   11e42:	add    eax,0x400
   11e47:	lea    esi,[eax-0xc]
   11e4a:	lea    ecx,[eax-0x8]
   11e4d:	push   esi
   11e4e:	lea    ebx,[eax-0x4]
   11e51:	lea    edx,[eax-0x10]
   11e54:	push   0x40
   11e56:	add    eax,0xffffffe8
   11e59:	push   ecx
   11e5a:	mov    DWORD PTR [ebp-0x1c],eax
   11e5d:	mov    eax,DWORD PTR [ebp+0x8]
   11e60:	mov    DWORD PTR [ebx],eax
   11e62:	push   ebx
   11e63:	mov    DWORD PTR [ecx],0x5
   11e69:	push   0xffffffff
   11e6b:	mov    DWORD PTR [ebp-0x8],ecx
   11e6e:	mov    DWORD PTR [ebp-0x28],edx
   11e71:	mov    DWORD PTR [esi],edi
   11e73:	call   DWORD PTR ds:0x70ddc
   11e79:	test   eax,eax
   11e7b:	jl     0x11ecd
   11e7d:	mov    eax,DWORD PTR [ebp-0x20]
   11e80:	sub    eax,DWORD PTR [ebp+0x8]
   11e83:	sub    eax,0x5
   11e86:	push   eax
   11e87:	mov    eax,DWORD PTR [ebp-0x1c]
   11e8a:	inc    eax
   11e8b:	push   eax
   11e8c:	call   0x17bdc
   11e91:	push   0xe9
   11e96:	push   DWORD PTR [ebp-0x1c]
   11e99:	call   0x17bc4
   11e9e:	mov    eax,DWORD PTR [ebp-0x28]
   11ea1:	push   eax
   11ea2:	push   0x5
   11ea4:	push   DWORD PTR [ebp-0x1c]
   11ea7:	mov    DWORD PTR [eax],edi
   11ea9:	push   DWORD PTR [ebp+0x8]
   11eac:	push   0xffffffff
   11eae:	call   DWORD PTR ds:0x70dd0
   11eb4:	mov    eax,DWORD PTR [ebp+0xc]
   11eb7:	mov    BYTE PTR [eax+0x10],0x1
   11ebb:	lea    eax,[ebp-0x20]
   11ebe:	push   eax
   11ebf:	push   DWORD PTR [esi]
   11ec1:	push   DWORD PTR [ebp-0x8]
   11ec4:	push   ebx
   11ec5:	push   0xffffffff
   11ec7:	call   DWORD PTR ds:0x70ddc
   11ecd:	call   DWORD PTR ds:0x1ba30
   11ed3:	mov    ecx,DWORD PTR [ebp-0x24]
   11ed6:	call   DWORD PTR ds:0x1bab0
   11edc:	push   DWORD PTR [ebp-0x10]
   11edf:	call   DWORD PTR ds:0x1bab4
   11ee5:	pop    esi
   11ee6:	pop    ebx
   11ee7:	pop    edi
   11ee8:	leave  
   11ee9:	ret    0x8
   11eec:	int3   
   11eed:	int3   
   11eee:	int3   
   11eef:	int3   
   11ef0:	int3   
   11ef1:	int3   
   11ef2:	mov    edi,edi
   11ef4:	push   ebp
   11ef5:	mov    ebp,esp
   11ef7:	push   ecx
   11ef8:	and    DWORD PTR [ebp-0x4],0x0
   11efc:	push   ebx
   11efd:	push   esi
   11efe:	push   edi
   11eff:	mov    esi,0x1000
   11f04:	push   0x20736649
   11f09:	push   esi
   11f0a:	push   0x0
   11f0c:	call   DWORD PTR ds:0x1ba40
   11f12:	mov    edi,eax
   11f14:	test   edi,edi
   11f16:	je     0x11f4f
   11f18:	push   0x1aee4
   11f1d:	call   0x11482
   11f22:	lea    ecx,[ebp-0x4]
   11f25:	push   ecx
   11f26:	push   esi
   11f27:	push   edi
   11f28:	push   DWORD PTR [ebp+0x8]
   11f2b:	call   eax
   11f2d:	mov    ebx,eax
   11f2f:	cmp    ebx,0xc0000004
   11f35:	jne    0x11f42
   11f37:	push   0x0
   11f39:	push   edi
   11f3a:	call   DWORD PTR ds:0x1ba1c
   11f40:	add    esi,esi
   11f42:	test   ebx,ebx
   11f44:	jne    0x11f04
   11f46:	mov    eax,edi
   11f48:	pop    edi
   11f49:	pop    esi
   11f4a:	pop    ebx
   11f4b:	leave  
   11f4c:	ret    0x4
   11f4f:	xor    eax,eax
   11f51:	jmp    0x11f48
   11f53:	int3   
   11f54:	int3   
   11f55:	int3   
   11f56:	int3   
   11f57:	int3   
   11f58:	mov    edi,edi
   11f5a:	push   ebp
   11f5b:	mov    ebp,esp
   11f5d:	push   esi
   11f5e:	push   DWORD PTR [ebp+0xc]
   11f61:	mov    esi,ecx
   11f63:	push   DWORD PTR [ebp+0x8]
   11f66:	call   0x11022
   11f6b:	mov    eax,esi
   11f6d:	pop    esi
   11f6e:	pop    ebp
   11f6f:	ret    0x8
   11f72:	int3   
   11f73:	int3   
   11f74:	int3   
   11f75:	int3   
   11f76:	int3   
   11f77:	int3   
   11f78:	mov    edi,edi
   11f7a:	push   ebp
   11f7b:	mov    ebp,esp
   11f7d:	mov    eax,DWORD PTR [ebp+0x8]
   11f80:	push   esi
   11f81:	push   DWORD PTR [eax+0x4]
   11f84:	mov    esi,ecx
   11f86:	push   DWORD PTR [eax]
   11f88:	call   0x11022
   11f8d:	mov    eax,esi
   11f8f:	pop    esi
   11f90:	pop    ebp
   11f91:	ret    0x4
   11f94:	int3   
   11f95:	int3   
   11f96:	int3   
   11f97:	int3   
   11f98:	int3   
   11f99:	int3   
   11f9a:	mov    edi,edi
   11f9c:	push   ebp
   11f9d:	mov    ebp,esp
   11f9f:	push   ebx
   11fa0:	push   esi
   11fa1:	push   edi
   11fa2:	mov    edi,DWORD PTR [ebp+0x8]
   11fa5:	mov    eax,DWORD PTR [edi+0x4]
   11fa8:	mov    esi,ecx
   11faa:	mov    ebx,DWORD PTR [esi]
   11fac:	mov    DWORD PTR [esi+0x4],eax
   11faf:	inc    eax
   11fb0:	push   eax
   11fb1:	call   0x10802
   11fb6:	push   DWORD PTR [esi+0x4]
   11fb9:	mov    DWORD PTR [esi],eax
   11fbb:	push   DWORD PTR [edi]
   11fbd:	push   eax
   11fbe:	call   0x1a82a
   11fc3:	mov    eax,DWORD PTR [esi+0x4]
   11fc6:	mov    ecx,DWORD PTR [esi]
   11fc8:	push   ebx
   11fc9:	mov    BYTE PTR [eax+ecx*1],0x0
   11fcd:	call   0x10836
   11fd2:	add    esp,0x14
   11fd5:	pop    edi
   11fd6:	mov    eax,esi
   11fd8:	pop    esi
   11fd9:	pop    ebx
   11fda:	pop    ebp
   11fdb:	ret    0x4
   11fde:	int3   
   11fdf:	int3   
   11fe0:	int3   
   11fe1:	int3   
   11fe2:	int3   
   11fe3:	int3   
   11fe4:	mov    edi,edi
   11fe6:	push   ebp
   11fe7:	mov    ebp,esp
   11fe9:	push   esi
   11fea:	mov    esi,DWORD PTR [ebp+0x8]
   11fed:	push   edi
   11fee:	mov    edi,ecx
   11ff0:	cmp    edi,esi
   11ff2:	je     0x1201f
   11ff4:	mov    eax,DWORD PTR [edi+0x4]
   11ff7:	cmp    eax,DWORD PTR [esi+0x4]
   11ffa:	je     0x1200e
   11ffc:	cmp    BYTE PTR [edi],0x0
   11fff:	je     0x12008
   12001:	push   eax
   12002:	call   0x10836
   12007:	pop    ecx
   12008:	mov    al,BYTE PTR [esi]
   1200a:	mov    BYTE PTR [edi],al
   1200c:	jmp    0x12016
   1200e:	cmp    BYTE PTR [esi],0x0
   12011:	je     0x12016
   12013:	mov    BYTE PTR [edi],0x1
   12016:	mov    eax,DWORD PTR [esi+0x4]
   12019:	mov    BYTE PTR [esi],0x0
   1201c:	mov    DWORD PTR [edi+0x4],eax
   1201f:	mov    eax,edi
   12021:	pop    edi
   12022:	pop    esi
   12023:	pop    ebp
   12024:	ret    0x4
   12027:	int3   
   12028:	int3   
   12029:	int3   
   1202a:	int3   
   1202b:	int3   
   1202c:	mov    edi,edi
   1202e:	push   esi
   1202f:	push   edi
   12030:	push   0x20736649
   12035:	push   0x20
   12037:	push   0x0
   12039:	mov    esi,ecx
   1203b:	call   DWORD PTR ds:0x1ba40
   12041:	push   0x0
   12043:	mov    edi,eax
   12045:	push   0x1
   12047:	mov    ecx,esi
   12049:	mov    DWORD PTR [esi],edi
   1204b:	call   0x11080
   12050:	mov    DWORD PTR [esi+0x8],eax
   12053:	mov    DWORD PTR [esi+0xc],edx
   12056:	test   edi,edi
   12058:	jne    0x12065
   1205a:	push   0xc000009a
   1205f:	call   DWORD PTR ds:0x1ba14
   12065:	pop    edi
   12066:	mov    eax,esi
   12068:	pop    esi
   12069:	ret    
   1206a:	int3   
   1206b:	int3   
   1206c:	int3   
   1206d:	int3   
   1206e:	int3   
   1206f:	int3   
   12070:	mov    edi,edi
   12072:	push   ebp
   12073:	mov    ebp,esp
   12075:	push   esi
   12076:	mov    esi,DWORD PTR [ebp+0x8]
   12079:	lea    eax,[ebp+0xc]
   1207c:	push   eax
   1207d:	mov    ecx,esi
   1207f:	call   0x11f78
   12084:	xor    ecx,ecx
   12086:	inc    ecx
   12087:	cmp    DWORD PTR [esi+0x4],ecx
   1208a:	jbe    0x1209b
   1208c:	mov    eax,DWORD PTR [esi]
   1208e:	add    eax,ecx
   12090:	mov    dl,BYTE PTR [eax-0x1]
   12093:	xor    BYTE PTR [eax],dl
   12095:	inc    ecx
   12096:	cmp    ecx,DWORD PTR [esi+0x4]
   12099:	jb     0x1208c
   1209b:	push   DWORD PTR [ebp+0xc]
   1209e:	call   0x10836
   120a3:	pop    ecx
   120a4:	mov    eax,esi
   120a6:	pop    esi
   120a7:	pop    ebp
   120a8:	ret    0xc
   120ab:	int3   
   120ac:	int3   
   120ad:	int3   
   120ae:	int3   
   120af:	int3   
   120b0:	mov    edi,edi
   120b2:	push   ebp
   120b3:	mov    ebp,esp
   120b5:	push   esi
   120b6:	push   DWORD PTR [ebp+0xc]
   120b9:	mov    esi,ecx
   120bb:	push   DWORD PTR [ebp+0x8]
   120be:	call   0x110c6
   120c3:	mov    eax,esi
   120c5:	pop    esi
   120c6:	pop    ebp
   120c7:	ret    0x8
   120ca:	int3   
   120cb:	int3   
   120cc:	int3   
   120cd:	int3   
   120ce:	int3   
   120cf:	int3   
   120d0:	mov    edi,edi
   120d2:	push   ebp
   120d3:	mov    ebp,esp
   120d5:	mov    eax,DWORD PTR [ebp+0x8]
   120d8:	push   esi
   120d9:	push   DWORD PTR [eax+0x4]
   120dc:	mov    esi,ecx
   120de:	push   DWORD PTR [eax]
   120e0:	call   0x110c6
   120e5:	mov    eax,esi
   120e7:	pop    esi
   120e8:	pop    ebp
   120e9:	ret    0x4
   120ec:	int3   
   120ed:	int3   
   120ee:	int3   
   120ef:	int3   
   120f0:	int3   
   120f1:	int3   
   120f2:	mov    edi,edi
   120f4:	push   ebp
   120f5:	mov    ebp,esp
   120f7:	push   ebx
   120f8:	push   esi
   120f9:	push   edi
   120fa:	mov    edi,DWORD PTR [ebp+0x8]
   120fd:	mov    eax,DWORD PTR [edi+0x4]
   12100:	mov    esi,ecx
   12102:	mov    ebx,DWORD PTR [esi]
   12104:	mov    DWORD PTR [esi+0x4],eax
   12107:	xor    ecx,ecx
   12109:	push   0x2
   1210b:	inc    eax
   1210c:	pop    edx
   1210d:	mul    edx
   1210f:	seto   cl
   12112:	neg    ecx
   12114:	or     ecx,eax
   12116:	push   ecx
   12117:	call   0x10802
   1211c:	mov    ecx,DWORD PTR [esi+0x4]
   1211f:	add    ecx,ecx
   12121:	push   ecx
   12122:	mov    DWORD PTR [esi],eax
   12124:	push   DWORD PTR [edi]
   12126:	push   eax
   12127:	call   0x1a82a
   1212c:	mov    eax,DWORD PTR [esi+0x4]
   1212f:	mov    ecx,DWORD PTR [esi]
   12131:	xor    edx,edx
   12133:	push   ebx
   12134:	mov    WORD PTR [ecx+eax*2],dx
   12138:	call   0x10836
   1213d:	add    esp,0x14
   12140:	pop    edi
   12141:	mov    eax,esi
   12143:	pop    esi
   12144:	pop    ebx
   12145:	pop    ebp
   12146:	ret    0x4
   12149:	int3   
   1214a:	int3   
   1214b:	int3   
   1214c:	int3   
   1214d:	int3   
   1214e:	mov    edi,edi
   12150:	push   ebp
   12151:	mov    ebp,esp
   12153:	push   esi
   12154:	push   DWORD PTR [ebp+0x8]
   12157:	mov    esi,ecx
   12159:	call   0x11f78
   1215e:	push   DWORD PTR [ebp+0xc]
   12161:	lea    ecx,[esi+0x8]
   12164:	call   0x11f78
   12169:	mov    eax,esi
   1216b:	pop    esi
   1216c:	pop    ebp
   1216d:	ret    0x8
   12170:	int3   
   12171:	int3   
   12172:	int3   
   12173:	int3   
   12174:	int3   
   12175:	int3   
   12176:	mov    edi,edi
   12178:	push   ebp
   12179:	mov    ebp,esp
   1217b:	mov    eax,DWORD PTR [ebp+0x8]
   1217e:	mov    eax,DWORD PTR [eax]
   12180:	push   esi
   12181:	push   DWORD PTR [ebp+0xc]
   12184:	mov    esi,ecx
   12186:	lea    ecx,[esi+0x4]
   12189:	mov    DWORD PTR [esi],eax
   1218b:	call   0x1154e
   12190:	mov    eax,esi
   12192:	pop    esi
   12193:	pop    ebp
   12194:	ret    0x8
   12197:	int3   
   12198:	int3   
   12199:	int3   
   1219a:	int3   
   1219b:	int3   
   1219c:	mov    edi,edi
   1219e:	push   ebp
   1219f:	mov    ebp,esp
   121a1:	push   esi
   121a2:	push   edi
   121a3:	mov    edi,DWORD PTR [ebp+0x8]
   121a6:	push   edi
   121a7:	mov    esi,ecx
   121a9:	call   0x11f78
   121ae:	lea    eax,[edi+0x8]
   121b1:	push   eax
   121b2:	lea    ecx,[esi+0x8]
   121b5:	call   0x11f78
   121ba:	lea    eax,[edi+0x10]
   121bd:	push   eax
   121be:	lea    ecx,[esi+0x10]
   121c1:	call   0x11f78
   121c6:	lea    eax,[edi+0x18]
   121c9:	push   eax
   121ca:	lea    ecx,[esi+0x18]
   121cd:	call   0x11f78
   121d2:	mov    eax,DWORD PTR [edi+0x20]
   121d5:	mov    DWORD PTR [esi+0x20],eax
   121d8:	mov    eax,DWORD PTR [edi+0x28]
   121db:	mov    DWORD PTR [esi+0x28],eax
   121de:	mov    eax,DWORD PTR [edi+0x2c]
   121e1:	mov    DWORD PTR [esi+0x2c],eax
   121e4:	mov    eax,DWORD PTR [edi+0x30]
   121e7:	mov    DWORD PTR [esi+0x30],eax
   121ea:	mov    eax,DWORD PTR [edi+0x34]
   121ed:	mov    DWORD PTR [esi+0x34],eax
   121f0:	pop    edi
   121f1:	mov    eax,esi
   121f3:	pop    esi
   121f4:	pop    ebp
   121f5:	ret    0x4
   121f8:	int3   
   121f9:	int3   
   121fa:	int3   
   121fb:	int3   
   121fc:	int3   
   121fd:	int3   
   121fe:	mov    edi,edi
   12200:	push   ebp
   12201:	mov    ebp,esp
   12203:	mov    eax,DWORD PTR [ebp+0x8]
   12206:	mov    edx,DWORD PTR ds:0x70fa8
   1220c:	jmp    0x12210
   1220e:	mov    eax,ecx
   12210:	mov    ecx,DWORD PTR [eax]
   12212:	cmp    ecx,edx
   12214:	jne    0x1220e
   12216:	pop    ebp
   12217:	ret    0x4
   1221a:	int3   
   1221b:	int3   
   1221c:	int3   
   1221d:	int3   
   1221e:	int3   
   1221f:	int3   
   12220:	mov    edi,edi
   12222:	push   ebp
   12223:	mov    ebp,esp
   12225:	push   esi
   12226:	push   DWORD PTR [ebp+0x8]
   12229:	mov    esi,ecx
   1222b:	call   0x120d0
   12230:	push   DWORD PTR [ebp+0xc]
   12233:	lea    ecx,[esi+0x8]
   12236:	call   0x120d0
   1223b:	mov    eax,esi
   1223d:	pop    esi
   1223e:	pop    ebp
   1223f:	ret    0x8
   12242:	int3   
   12243:	int3   
   12244:	int3   
   12245:	int3   
   12246:	int3   
   12247:	int3   
   12248:	mov    edi,edi
   1224a:	push   ebp
   1224b:	mov    ebp,esp
   1224d:	mov    eax,DWORD PTR [ecx+0x4]
   12250:	mov    ecx,DWORD PTR [eax+0x4]
   12253:	mov    edx,DWORD PTR ds:0x70fa0
   12259:	cmp    ecx,edx
   1225b:	je     0x12276
   1225d:	push   esi
   1225e:	mov    esi,DWORD PTR [ebp+0x8]
   12261:	mov    esi,DWORD PTR [esi]
   12263:	cmp    DWORD PTR [ecx+0xc],esi
   12266:	jae    0x1226d
   12268:	mov    ecx,DWORD PTR [ecx+0x8]
   1226b:	jmp    0x12271
   1226d:	mov    eax,ecx
   1226f:	mov    ecx,DWORD PTR [ecx]
   12271:	cmp    ecx,edx
   12273:	jne    0x12263
   12275:	pop    esi
   12276:	pop    ebp
   12277:	ret    0x4
   1227a:	int3   
   1227b:	int3   
   1227c:	int3   
   1227d:	int3   
   1227e:	int3   
   1227f:	int3   
   12280:	mov    edi,edi
   12282:	push   ebp
   12283:	mov    ebp,esp
   12285:	mov    edx,DWORD PTR [ebp+0x8]
   12288:	mov    eax,DWORD PTR [edx+0x8]
   1228b:	push   esi
   1228c:	mov    esi,DWORD PTR [eax]
   1228e:	mov    DWORD PTR [edx+0x8],esi
   12291:	mov    esi,DWORD PTR [eax]
   12293:	cmp    esi,DWORD PTR ds:0x70fa0
   12299:	je     0x1229e
   1229b:	mov    DWORD PTR [esi+0x4],edx
   1229e:	mov    esi,DWORD PTR [edx+0x4]
   122a1:	mov    DWORD PTR [eax+0x4],esi
   122a4:	mov    ecx,DWORD PTR [ecx+0x4]
   122a7:	pop    esi
   122a8:	cmp    edx,DWORD PTR [ecx+0x4]
   122ab:	jne    0x122b2
   122ad:	mov    DWORD PTR [ecx+0x4],eax
   122b0:	jmp    0x122c0
   122b2:	mov    ecx,DWORD PTR [edx+0x4]
   122b5:	cmp    edx,DWORD PTR [ecx]
   122b7:	jne    0x122bd
   122b9:	mov    DWORD PTR [ecx],eax
   122bb:	jmp    0x122c0
   122bd:	mov    DWORD PTR [ecx+0x8],eax
   122c0:	mov    DWORD PTR [eax],edx
   122c2:	mov    DWORD PTR [edx+0x4],eax
   122c5:	pop    ebp
   122c6:	ret    0x4
   122c9:	int3   
   122ca:	int3   
   122cb:	int3   
   122cc:	int3   
   122cd:	int3   
   122ce:	mov    edi,edi
   122d0:	push   ebp
   122d1:	mov    ebp,esp
   122d3:	mov    edx,DWORD PTR [ebp+0x8]
   122d6:	mov    eax,DWORD PTR [edx]
   122d8:	push   esi
   122d9:	mov    esi,DWORD PTR [eax+0x8]
   122dc:	mov    DWORD PTR [edx],esi
   122de:	mov    esi,DWORD PTR [eax+0x8]
   122e1:	cmp    esi,DWORD PTR ds:0x70fa0
   122e7:	je     0x122ec
   122e9:	mov    DWORD PTR [esi+0x4],edx
   122ec:	mov    esi,DWORD PTR [edx+0x4]
   122ef:	mov    DWORD PTR [eax+0x4],esi
   122f2:	mov    ecx,DWORD PTR [ecx+0x4]
   122f5:	pop    esi
   122f6:	cmp    edx,DWORD PTR [ecx+0x4]
   122f9:	jne    0x12300
   122fb:	mov    DWORD PTR [ecx+0x4],eax
   122fe:	jmp    0x1230f
   12300:	mov    ecx,DWORD PTR [edx+0x4]
   12303:	cmp    edx,DWORD PTR [ecx+0x8]
   12306:	jne    0x1230d
   12308:	mov    DWORD PTR [ecx+0x8],eax
   1230b:	jmp    0x1230f
   1230d:	mov    DWORD PTR [ecx],eax
   1230f:	mov    DWORD PTR [eax+0x8],edx
   12312:	mov    DWORD PTR [edx+0x4],eax
   12315:	pop    ebp
   12316:	ret    0x4
   12319:	int3   
   1231a:	int3   
   1231b:	int3   
   1231c:	int3   
   1231d:	int3   
   1231e:	mov    edi,edi
   12320:	push   ebp
   12321:	mov    ebp,esp
   12323:	mov    eax,DWORD PTR [ecx+0x4]
   12326:	push   esi
   12327:	mov    esi,DWORD PTR [eax+0x4]
   1232a:	push   edi
   1232b:	mov    edi,eax
   1232d:	jmp    0x12348
   1232f:	push   DWORD PTR [ebp+0x8]
   12332:	lea    eax,[esi+0x10]
   12335:	push   eax
   12336:	call   0x17b84
   1233b:	test   al,al
   1233d:	je     0x12344
   1233f:	mov    esi,DWORD PTR [esi+0x8]
   12342:	jmp    0x12348
   12344:	mov    edi,esi
   12346:	mov    esi,DWORD PTR [esi]
   12348:	cmp    esi,DWORD PTR ds:0x70fa8
   1234e:	jne    0x1232f
   12350:	mov    eax,edi
   12352:	pop    edi
   12353:	pop    esi
   12354:	pop    ebp
   12355:	ret    0x4
   12358:	int3   
   12359:	int3   
   1235a:	int3   
   1235b:	int3   
   1235c:	int3   
   1235d:	int3   
   1235e:	mov    edi,edi
   12360:	push   ebp
   12361:	mov    ebp,esp
   12363:	mov    eax,DWORD PTR [ecx+0x4]
   12366:	push   esi
   12367:	mov    esi,DWORD PTR [eax+0x4]
   1236a:	push   edi
   1236b:	mov    edi,eax
   1236d:	jmp    0x12388
   1236f:	push   DWORD PTR [ebp+0x8]
   12372:	lea    eax,[esi+0xc]
   12375:	push   eax
   12376:	call   0x17b84
   1237b:	test   al,al
   1237d:	je     0x12384
   1237f:	mov    esi,DWORD PTR [esi+0x8]
   12382:	jmp    0x12388
   12384:	mov    edi,esi
   12386:	mov    esi,DWORD PTR [esi]
   12388:	cmp    esi,DWORD PTR ds:0x70fac
   1238e:	jne    0x1236f
   12390:	mov    eax,edi
   12392:	pop    edi
   12393:	pop    esi
   12394:	pop    ebp
   12395:	ret    0x4
   12398:	int3   
   12399:	int3   
   1239a:	int3   
   1239b:	int3   
   1239c:	int3   
   1239d:	int3   
   1239e:	mov    edi,edi
   123a0:	push   ebp
   123a1:	mov    ebp,esp
   123a3:	mov    eax,DWORD PTR [ecx+0x4]
   123a6:	mov    ecx,DWORD PTR [eax+0x4]
   123a9:	mov    edx,DWORD PTR ds:0x70fb0
   123af:	cmp    ecx,edx
   123b1:	je     0x123cc
   123b3:	push   esi
   123b4:	mov    esi,DWORD PTR [ebp+0x8]
   123b7:	mov    esi,DWORD PTR [esi]
   123b9:	cmp    DWORD PTR [ecx+0xc],esi
   123bc:	jge    0x123c3
   123be:	mov    ecx,DWORD PTR [ecx+0x8]
   123c1:	jmp    0x123c7
   123c3:	mov    eax,ecx
   123c5:	mov    ecx,DWORD PTR [ecx]
   123c7:	cmp    ecx,edx
   123c9:	jne    0x123b9
   123cb:	pop    esi
   123cc:	pop    ebp
   123cd:	ret    0x4
   123d0:	int3   
   123d1:	int3   
   123d2:	int3   
   123d3:	int3   
   123d4:	int3   
   123d5:	int3   
   123d6:	mov    edi,edi
   123d8:	push   ebp
   123d9:	mov    ebp,esp
   123db:	mov    eax,DWORD PTR [ecx+0x4]
   123de:	mov    ecx,DWORD PTR [eax+0x4]
   123e1:	mov    edx,DWORD PTR ds:0x70fa0
   123e7:	cmp    ecx,edx
   123e9:	je     0x12404
   123eb:	push   esi
   123ec:	mov    esi,DWORD PTR [ebp+0x8]
   123ef:	mov    esi,DWORD PTR [esi]
   123f1:	cmp    esi,DWORD PTR [ecx+0xc]
   123f4:	jae    0x123fc
   123f6:	mov    eax,ecx
   123f8:	mov    ecx,DWORD PTR [ecx]
   123fa:	jmp    0x123ff
   123fc:	mov    ecx,DWORD PTR [ecx+0x8]
   123ff:	cmp    ecx,edx
   12401:	jne    0x123f1
   12403:	pop    esi
   12404:	pop    ebp
   12405:	ret    0x4
   12408:	int3   
   12409:	int3   
   1240a:	int3   
   1240b:	int3   
   1240c:	int3   
   1240d:	int3   
   1240e:	mov    edi,edi
   12410:	push   ebp
   12411:	mov    ebp,esp
   12413:	mov    eax,DWORD PTR [ecx+0x4]
   12416:	push   esi
   12417:	mov    esi,DWORD PTR [eax+0x4]
   1241a:	push   edi
   1241b:	mov    edi,eax
   1241d:	jmp    0x12438
   1241f:	lea    eax,[esi+0x10]
   12422:	push   eax
   12423:	push   DWORD PTR [ebp+0x8]
   12426:	call   0x17b84
   1242b:	test   al,al
   1242d:	je     0x12435
   1242f:	mov    edi,esi
   12431:	mov    esi,DWORD PTR [esi]
   12433:	jmp    0x12438
   12435:	mov    esi,DWORD PTR [esi+0x8]
   12438:	cmp    esi,DWORD PTR ds:0x70fa8
   1243e:	jne    0x1241f
   12440:	mov    eax,edi
   12442:	pop    edi
   12443:	pop    esi
   12444:	pop    ebp
   12445:	ret    0x4
   12448:	int3   
   12449:	int3   
   1244a:	int3   
   1244b:	int3   
   1244c:	int3   
   1244d:	int3   
   1244e:	mov    edi,edi
   12450:	push   ebp
   12451:	mov    ebp,esp
   12453:	mov    edx,DWORD PTR [ebp+0x8]
   12456:	mov    eax,DWORD PTR [edx+0x8]
   12459:	push   esi
   1245a:	mov    esi,DWORD PTR [eax]
   1245c:	mov    DWORD PTR [edx+0x8],esi
   1245f:	mov    esi,DWORD PTR [eax]
   12461:	cmp    esi,DWORD PTR ds:0x70fac
   12467:	je     0x1246c
   12469:	mov    DWORD PTR [esi+0x4],edx
   1246c:	mov    esi,DWORD PTR [edx+0x4]
   1246f:	mov    DWORD PTR [eax+0x4],esi
   12472:	mov    ecx,DWORD PTR [ecx+0x4]
   12475:	pop    esi
   12476:	cmp    edx,DWORD PTR [ecx+0x4]
   12479:	jne    0x12480
   1247b:	mov    DWORD PTR [ecx+0x4],eax
   1247e:	jmp    0x1248e
   12480:	mov    ecx,DWORD PTR [edx+0x4]
   12483:	cmp    edx,DWORD PTR [ecx]
   12485:	jne    0x1248b
   12487:	mov    DWORD PTR [ecx],eax
   12489:	jmp    0x1248e
   1248b:	mov    DWORD PTR [ecx+0x8],eax
   1248e:	mov    DWORD PTR [eax],edx
   12490:	mov    DWORD PTR [edx+0x4],eax
   12493:	pop    ebp
   12494:	ret    0x4
   12497:	int3   
   12498:	int3   
   12499:	int3   
   1249a:	int3   
   1249b:	int3   
   1249c:	mov    edi,edi
   1249e:	push   ebp
   1249f:	mov    ebp,esp
   124a1:	mov    edx,DWORD PTR [ebp+0x8]
   124a4:	mov    eax,DWORD PTR [edx]
   124a6:	push   esi
   124a7:	mov    esi,DWORD PTR [eax+0x8]
   124aa:	mov    DWORD PTR [edx],esi
   124ac:	mov    esi,DWORD PTR [eax+0x8]
   124af:	cmp    esi,DWORD PTR ds:0x70fac
   124b5:	je     0x124ba
   124b7:	mov    DWORD PTR [esi+0x4],edx
   124ba:	mov    esi,DWORD PTR [edx+0x4]
   124bd:	mov    DWORD PTR [eax+0x4],esi
   124c0:	mov    ecx,DWORD PTR [ecx+0x4]
   124c3:	pop    esi
   124c4:	cmp    edx,DWORD PTR [ecx+0x4]
   124c7:	jne    0x124ce
   124c9:	mov    DWORD PTR [ecx+0x4],eax
   124cc:	jmp    0x124dd
   124ce:	mov    ecx,DWORD PTR [edx+0x4]
   124d1:	cmp    edx,DWORD PTR [ecx+0x8]
   124d4:	jne    0x124db
   124d6:	mov    DWORD PTR [ecx+0x8],eax
   124d9:	jmp    0x124dd
   124db:	mov    DWORD PTR [ecx],eax
   124dd:	mov    DWORD PTR [eax+0x8],edx
   124e0:	mov    DWORD PTR [edx+0x4],eax
   124e3:	pop    ebp
   124e4:	ret    0x4
   124e7:	int3   
   124e8:	int3   
   124e9:	int3   
   124ea:	int3   
   124eb:	int3   
   124ec:	mov    edi,edi
   124ee:	push   ebp
   124ef:	mov    ebp,esp
   124f1:	mov    eax,DWORD PTR [ecx+0x4]
   124f4:	push   esi
   124f5:	mov    esi,DWORD PTR [eax+0x4]
   124f8:	push   edi
   124f9:	mov    edi,eax
   124fb:	jmp    0x12516
   124fd:	lea    eax,[esi+0xc]
   12500:	push   eax
   12501:	push   DWORD PTR [ebp+0x8]
   12504:	call   0x17b84
   12509:	test   al,al
   1250b:	je     0x12513
   1250d:	mov    edi,esi
   1250f:	mov    esi,DWORD PTR [esi]
   12511:	jmp    0x12516
   12513:	mov    esi,DWORD PTR [esi+0x8]
   12516:	cmp    esi,DWORD PTR ds:0x70fac
   1251c:	jne    0x124fd
   1251e:	mov    eax,edi
   12520:	pop    edi
   12521:	pop    esi
   12522:	pop    ebp
   12523:	ret    0x4
   12526:	int3   
   12527:	int3   
   12528:	int3   
   12529:	int3   
   1252a:	int3   
   1252b:	int3   
   1252c:	mov    edi,edi
   1252e:	push   ebp
   1252f:	mov    ebp,esp
   12531:	mov    edx,DWORD PTR [ebp+0x8]
   12534:	mov    eax,DWORD PTR [edx+0x8]
   12537:	push   esi
   12538:	mov    esi,DWORD PTR [eax]
   1253a:	mov    DWORD PTR [edx+0x8],esi
   1253d:	mov    esi,DWORD PTR [eax]
   1253f:	cmp    esi,DWORD PTR ds:0x70fb0
   12545:	je     0x1254a
   12547:	mov    DWORD PTR [esi+0x4],edx
   1254a:	mov    esi,DWORD PTR [edx+0x4]
   1254d:	mov    DWORD PTR [eax+0x4],esi
   12550:	mov    ecx,DWORD PTR [ecx+0x4]
   12553:	pop    esi
   12554:	cmp    edx,DWORD PTR [ecx+0x4]
   12557:	jne    0x1255e
   12559:	mov    DWORD PTR [ecx+0x4],eax
   1255c:	jmp    0x1256c
   1255e:	mov    ecx,DWORD PTR [edx+0x4]
   12561:	cmp    edx,DWORD PTR [ecx]
   12563:	jne    0x12569
   12565:	mov    DWORD PTR [ecx],eax
   12567:	jmp    0x1256c
   12569:	mov    DWORD PTR [ecx+0x8],eax
   1256c:	mov    DWORD PTR [eax],edx
   1256e:	mov    DWORD PTR [edx+0x4],eax
   12571:	pop    ebp
   12572:	ret    0x4
   12575:	int3   
   12576:	int3   
   12577:	int3   
   12578:	int3   
   12579:	int3   
   1257a:	mov    edi,edi
   1257c:	push   ebp
   1257d:	mov    ebp,esp
   1257f:	mov    edx,DWORD PTR [ebp+0x8]
   12582:	mov    eax,DWORD PTR [edx]
   12584:	push   esi
   12585:	mov    esi,DWORD PTR [eax+0x8]
   12588:	mov    DWORD PTR [edx],esi
   1258a:	mov    esi,DWORD PTR [eax+0x8]
   1258d:	cmp    esi,DWORD PTR ds:0x70fb0
   12593:	je     0x12598
   12595:	mov    DWORD PTR [esi+0x4],edx
   12598:	mov    esi,DWORD PTR [edx+0x4]
   1259b:	mov    DWORD PTR [eax+0x4],esi
   1259e:	mov    ecx,DWORD PTR [ecx+0x4]
   125a1:	pop    esi
   125a2:	cmp    edx,DWORD PTR [ecx+0x4]
   125a5:	jne    0x125ac
   125a7:	mov    DWORD PTR [ecx+0x4],eax
   125aa:	jmp    0x125bb
   125ac:	mov    ecx,DWORD PTR [edx+0x4]
   125af:	cmp    edx,DWORD PTR [ecx+0x8]
   125b2:	jne    0x125b9
   125b4:	mov    DWORD PTR [ecx+0x8],eax
   125b7:	jmp    0x125bb
   125b9:	mov    DWORD PTR [ecx],eax
   125bb:	mov    DWORD PTR [eax+0x8],edx
   125be:	mov    DWORD PTR [edx+0x4],eax
   125c1:	pop    ebp
   125c2:	ret    0x4
   125c5:	int3   
   125c6:	int3   
   125c7:	int3   
   125c8:	int3   
   125c9:	int3   
   125ca:	mov    edi,edi
   125cc:	push   ebp
   125cd:	mov    ebp,esp
   125cf:	mov    eax,DWORD PTR [ecx+0x4]
   125d2:	mov    ecx,DWORD PTR [eax+0x4]
   125d5:	mov    edx,DWORD PTR ds:0x70fb0
   125db:	cmp    ecx,edx
   125dd:	je     0x125f8
   125df:	push   esi
   125e0:	mov    esi,DWORD PTR [ebp+0x8]
   125e3:	mov    esi,DWORD PTR [esi]
   125e5:	cmp    esi,DWORD PTR [ecx+0xc]
   125e8:	jge    0x125f0
   125ea:	mov    eax,ecx
   125ec:	mov    ecx,DWORD PTR [ecx]
   125ee:	jmp    0x125f3
   125f0:	mov    ecx,DWORD PTR [ecx+0x8]
   125f3:	cmp    ecx,edx
   125f5:	jne    0x125e5
   125f7:	pop    esi
   125f8:	pop    ebp
   125f9:	ret    0x4
   125fc:	int3   
   125fd:	int3   
   125fe:	int3   
   125ff:	int3   
   12600:	int3   
   12601:	int3   
   12602:	mov    edi,edi
   12604:	push   ebp
   12605:	mov    ebp,esp
   12607:	mov    eax,DWORD PTR [ecx+0x4]
   1260a:	push   esi
   1260b:	mov    esi,DWORD PTR [eax+0x4]
   1260e:	push   edi
   1260f:	mov    edi,eax
   12611:	jmp    0x1262c
   12613:	push   DWORD PTR [ebp+0x8]
   12616:	lea    eax,[esi+0xc]
   12619:	push   eax
   1261a:	call   0x17bb4
   1261f:	test   al,al
   12621:	je     0x12628
   12623:	mov    esi,DWORD PTR [esi+0x8]
   12626:	jmp    0x1262c
   12628:	mov    edi,esi
   1262a:	mov    esi,DWORD PTR [esi]
   1262c:	cmp    esi,DWORD PTR ds:0x70fb8
   12632:	jne    0x12613
   12634:	mov    eax,edi
   12636:	pop    edi
   12637:	pop    esi
   12638:	pop    ebp
   12639:	ret    0x4
   1263c:	int3   
   1263d:	int3   
   1263e:	int3   
   1263f:	int3   
   12640:	int3   
   12641:	int3   
   12642:	mov    edi,edi
   12644:	push   ebp
   12645:	mov    ebp,esp
   12647:	mov    edx,DWORD PTR [ebp+0x8]
   1264a:	mov    eax,DWORD PTR [edx+0x8]
   1264d:	push   esi
   1264e:	mov    esi,DWORD PTR [eax]
   12650:	mov    DWORD PTR [edx+0x8],esi
   12653:	mov    esi,DWORD PTR [eax]
   12655:	cmp    esi,DWORD PTR ds:0x70fb8
   1265b:	je     0x12660
   1265d:	mov    DWORD PTR [esi+0x4],edx
   12660:	mov    esi,DWORD PTR [edx+0x4]
   12663:	mov    DWORD PTR [eax+0x4],esi
   12666:	mov    ecx,DWORD PTR [ecx+0x4]
   12669:	pop    esi
   1266a:	cmp    edx,DWORD PTR [ecx+0x4]
   1266d:	jne    0x12674
   1266f:	mov    DWORD PTR [ecx+0x4],eax
   12672:	jmp    0x12682
   12674:	mov    ecx,DWORD PTR [edx+0x4]
   12677:	cmp    edx,DWORD PTR [ecx]
   12679:	jne    0x1267f
   1267b:	mov    DWORD PTR [ecx],eax
   1267d:	jmp    0x12682
   1267f:	mov    DWORD PTR [ecx+0x8],eax
   12682:	mov    DWORD PTR [eax],edx
   12684:	mov    DWORD PTR [edx+0x4],eax
   12687:	pop    ebp
   12688:	ret    0x4
   1268b:	int3   
   1268c:	int3   
   1268d:	int3   
   1268e:	int3   
   1268f:	int3   
   12690:	mov    edi,edi
   12692:	push   ebp
   12693:	mov    ebp,esp
   12695:	mov    edx,DWORD PTR [ebp+0x8]
   12698:	mov    eax,DWORD PTR [edx]
   1269a:	push   esi
   1269b:	mov    esi,DWORD PTR [eax+0x8]
   1269e:	mov    DWORD PTR [edx],esi
   126a0:	mov    esi,DWORD PTR [eax+0x8]
   126a3:	cmp    esi,DWORD PTR ds:0x70fb8
   126a9:	je     0x126ae
   126ab:	mov    DWORD PTR [esi+0x4],edx
   126ae:	mov    esi,DWORD PTR [edx+0x4]
   126b1:	mov    DWORD PTR [eax+0x4],esi
   126b4:	mov    ecx,DWORD PTR [ecx+0x4]
   126b7:	pop    esi
   126b8:	cmp    edx,DWORD PTR [ecx+0x4]
   126bb:	jne    0x126c2
   126bd:	mov    DWORD PTR [ecx+0x4],eax
   126c0:	jmp    0x126d1
   126c2:	mov    ecx,DWORD PTR [edx+0x4]
   126c5:	cmp    edx,DWORD PTR [ecx+0x8]
   126c8:	jne    0x126cf
   126ca:	mov    DWORD PTR [ecx+0x8],eax
   126cd:	jmp    0x126d1
   126cf:	mov    DWORD PTR [ecx],eax
   126d1:	mov    DWORD PTR [eax+0x8],edx
   126d4:	mov    DWORD PTR [edx+0x4],eax
   126d7:	pop    ebp
   126d8:	ret    0x4
   126db:	int3   
   126dc:	int3   
   126dd:	int3   
   126de:	int3   
   126df:	int3   
   126e0:	mov    edi,edi
   126e2:	push   esi
   126e3:	mov    esi,ecx
   126e5:	mov    ecx,DWORD PTR [esi]
   126e7:	cmp    DWORD PTR [ecx+0x1c],0x0
   126eb:	jne    0x126fa
   126ed:	mov    eax,DWORD PTR [ecx+0x4]
   126f0:	cmp    DWORD PTR [eax+0x4],ecx
   126f3:	jne    0x126fa
   126f5:	mov    eax,DWORD PTR [ecx+0x8]
   126f8:	jmp    0x12717
   126fa:	mov    eax,DWORD PTR [ecx]
   126fc:	cmp    eax,DWORD PTR ds:0x70fb8
   12702:	je     0x12710
   12704:	push   eax
   12705:	call   0x11460
   1270a:	jmp    0x12717
   1270c:	mov    DWORD PTR [esi],eax
   1270e:	mov    ecx,eax
   12710:	mov    eax,DWORD PTR [ecx+0x4]
   12713:	cmp    ecx,DWORD PTR [eax]
   12715:	je     0x1270c
   12717:	mov    DWORD PTR [esi],eax
   12719:	pop    esi
   1271a:	ret    
   1271b:	int3   
   1271c:	int3   
   1271d:	int3   
   1271e:	int3   
   1271f:	int3   
   12720:	mov    edi,edi
   12722:	push   ebp
   12723:	mov    ebp,esp
   12725:	mov    ecx,DWORD PTR [ebp+0x8]
   12728:	push   0x0
   1272a:	call   0x11502
   1272f:	pop    ebp
   12730:	ret    0x4
   12733:	int3   
   12734:	int3   
   12735:	int3   
   12736:	int3   
   12737:	int3   
   12738:	mov    edi,edi
   1273a:	push   ebp
   1273b:	mov    ebp,esp
   1273d:	mov    ecx,DWORD PTR [ebp+0x8]
   12740:	push   0x0
   12742:	call   0x11528
   12747:	pop    ebp
   12748:	ret    0x4
   1274b:	int3   
   1274c:	int3   
   1274d:	int3   
   1274e:	int3   
   1274f:	int3   
   12750:	mov    edi,edi
   12752:	push   ebp
   12753:	mov    ebp,esp
   12755:	push   esi
   12756:	push   edi
   12757:	mov    edi,DWORD PTR [ebp+0x8]
   1275a:	push   edi
   1275b:	mov    esi,ecx
   1275d:	call   0x11f78
   12762:	add    edi,0x8
   12765:	push   edi
   12766:	lea    ecx,[esi+0x8]
   12769:	call   0x1219c
   1276e:	pop    edi
   1276f:	mov    eax,esi
   12771:	pop    esi
   12772:	pop    ebp
   12773:	ret    0x4
   12776:	int3   
   12777:	int3   
   12778:	int3   
   12779:	int3   
   1277a:	int3   
   1277b:	int3   
   1277c:	mov    edi,edi
   1277e:	push   ebp
   1277f:	mov    ebp,esp
   12781:	push   esi
   12782:	push   edi
   12783:	mov    edi,DWORD PTR [ebp+0x8]
   12786:	push   edi
   12787:	mov    esi,ecx
   12789:	call   0x11f78
   1278e:	add    edi,0x8
   12791:	push   edi
   12792:	lea    ecx,[esi+0x8]
   12795:	call   0x11f78
   1279a:	pop    edi
   1279b:	mov    eax,esi
   1279d:	pop    esi
   1279e:	pop    ebp
   1279f:	ret    0x4
   127a2:	int3   
   127a3:	int3   
   127a4:	int3   
   127a5:	int3   
   127a6:	int3   
   127a7:	int3   
   127a8:	mov    edi,edi
   127aa:	push   ebp
   127ab:	mov    ebp,esp
   127ad:	mov    eax,DWORD PTR [ebp+0x8]
   127b0:	push   esi
   127b1:	mov    esi,ecx
   127b3:	mov    ecx,DWORD PTR [eax]
   127b5:	add    eax,0x4
   127b8:	mov    DWORD PTR [esi],ecx
   127ba:	push   eax
   127bb:	lea    ecx,[esi+0x4]
   127be:	call   0x1154e
   127c3:	mov    eax,esi
   127c5:	pop    esi
   127c6:	pop    ebp
   127c7:	ret    0x4
   127ca:	int3   
   127cb:	int3   
   127cc:	int3   
   127cd:	int3   
   127ce:	int3   
   127cf:	int3   
   127d0:	mov    edi,edi
   127d2:	push   ebp
   127d3:	mov    ebp,esp
   127d5:	push   esi
   127d6:	mov    esi,ecx
   127d8:	mov    ecx,DWORD PTR [esi+0x4]
   127db:	test   ecx,ecx
   127dd:	je     0x127e4
   127df:	call   0x10854
   127e4:	test   BYTE PTR [ebp+0x8],0x1
   127e8:	je     0x127f1
   127ea:	push   esi
   127eb:	call   0x10836
   127f0:	pop    ecx
   127f1:	mov    eax,esi
   127f3:	pop    esi
   127f4:	pop    ebp
   127f5:	ret    0x4
   127f8:	int3   
   127f9:	int3   
   127fa:	int3   
   127fb:	int3   
   127fc:	int3   
   127fd:	int3   
   127fe:	mov    edi,edi
   12800:	push   ebp
   12801:	mov    ebp,esp
   12803:	push   esi
   12804:	push   edi
   12805:	mov    edi,DWORD PTR [ebp+0x8]
   12808:	push   edi
   12809:	mov    esi,ecx
   1280b:	call   0x120d0
   12810:	add    edi,0x8
   12813:	push   edi
   12814:	lea    ecx,[esi+0x8]
   12817:	call   0x120d0
   1281c:	pop    edi
   1281d:	mov    eax,esi
   1281f:	pop    esi
   12820:	pop    ebp
   12821:	ret    0x4
   12824:	int3   
   12825:	int3   
   12826:	int3   
   12827:	int3   
   12828:	int3   
   12829:	int3   
   1282a:	mov    edi,edi
   1282c:	push   ebp
   1282d:	mov    ebp,esp
   1282f:	push   edi
   12830:	mov    edi,DWORD PTR [ebp+0xc]
   12833:	cmp    DWORD PTR [ebp+0x8],edi
   12836:	je     0x1284c
   12838:	push   esi
   12839:	mov    esi,DWORD PTR [ebp+0x10]
   1283c:	inc    DWORD PTR [esi]
   1283e:	lea    ecx,[ebp+0x8]
   12841:	call   0x111b6
   12846:	cmp    DWORD PTR [ebp+0x8],edi
   12849:	jne    0x1283c
   1284b:	pop    esi
   1284c:	pop    edi
   1284d:	pop    ebp
   1284e:	ret    
   1284f:	int3   
   12850:	int3   
   12851:	int3   
   12852:	int3   
   12853:	int3   
   12854:	mov    edi,edi
   12856:	push   ebp
   12857:	mov    ebp,esp
   12859:	push   edi
   1285a:	mov    edi,DWORD PTR [ebp+0xc]
   1285d:	cmp    DWORD PTR [ebp+0x8],edi
   12860:	je     0x12876
   12862:	push   esi
   12863:	mov    esi,DWORD PTR [ebp+0x10]
   12866:	inc    DWORD PTR [esi]
   12868:	lea    ecx,[ebp+0x8]
   1286b:	call   0x113f4
   12870:	cmp    DWORD PTR [ebp+0x8],edi
   12873:	jne    0x12866
   12875:	pop    esi
   12876:	pop    edi
   12877:	pop    ebp
   12878:	ret    
   12879:	int3   
   1287a:	int3   
   1287b:	int3   
   1287c:	int3   
   1287d:	int3   
   1287e:	mov    edi,edi
   12880:	push   ebp
   12881:	mov    ebp,esp
   12883:	push   edi
   12884:	mov    edi,DWORD PTR [ebp+0xc]
   12887:	cmp    DWORD PTR [ebp+0x8],edi
   1288a:	je     0x128a0
   1288c:	push   esi
   1288d:	mov    esi,DWORD PTR [ebp+0x10]
   12890:	inc    DWORD PTR [esi]
   12892:	lea    ecx,[ebp+0x8]
   12895:	call   0x1142a
   1289a:	cmp    DWORD PTR [ebp+0x8],edi
   1289d:	jne    0x12890
   1289f:	pop    esi
   128a0:	pop    edi
   128a1:	pop    ebp
   128a2:	ret    
   128a3:	int3   
   128a4:	int3   
   128a5:	int3   
   128a6:	int3   
   128a7:	int3   
   128a8:	mov    edi,edi
   128aa:	push   esi
   128ab:	push   edi
   128ac:	push   0xffffffff
   128ae:	mov    edi,0x1ac88
   128b3:	push   edi
   128b4:	mov    esi,ecx
   128b6:	call   0x11022
   128bb:	push   0xffffffff
   128bd:	push   edi
   128be:	lea    ecx,[esi+0x8]
   128c1:	call   0x11022
   128c6:	push   0xffffffff
   128c8:	push   edi
   128c9:	lea    ecx,[esi+0x10]
   128cc:	call   0x11022
   128d1:	push   0xffffffff
   128d3:	push   edi
   128d4:	lea    ecx,[esi+0x18]
   128d7:	call   0x11022
   128dc:	xor    eax,eax
   128de:	mov    DWORD PTR [esi+0x20],eax
   128e1:	mov    DWORD PTR [esi+0x30],eax
   128e4:	mov    DWORD PTR [esi+0x34],eax
   128e7:	pop    edi
   128e8:	mov    eax,esi
   128ea:	pop    esi
   128eb:	ret    
   128ec:	int3   
   128ed:	int3   
   128ee:	int3   
   128ef:	int3   
   128f0:	int3   
   128f1:	int3   
   128f2:	mov    edi,edi
   128f4:	push   ebp
   128f5:	mov    ebp,esp
   128f7:	push   esi
   128f8:	push   0xc
   128fa:	mov    esi,ecx
   128fc:	call   0x10802
   12901:	pop    ecx
   12902:	test   eax,eax
   12904:	je     0x12915
   12906:	push   DWORD PTR [ebp+0xc]
   12909:	mov    ecx,eax
   1290b:	push   DWORD PTR [ebp+0x8]
   1290e:	call   0x1159c
   12913:	jmp    0x12917
   12915:	xor    eax,eax
   12917:	mov    DWORD PTR [esi],eax
   12919:	mov    eax,esi
   1291b:	pop    esi
   1291c:	pop    ebp
   1291d:	ret    0x8
   12920:	int3   
   12921:	int3   
   12922:	int3   
   12923:	int3   
   12924:	int3   
   12925:	int3   
   12926:	mov    edi,edi
   12928:	push   ebp
   12929:	mov    ebp,esp
   1292b:	sub    esp,0x18
   1292e:	lea    eax,[ebp-0x18]
   12931:	push   eax
   12932:	push   DWORD PTR [ebp+0x8]
   12935:	call   0x10d14
   1293a:	test   al,al
   1293c:	je     0x129af
   1293e:	push   0x1ad08
   12943:	call   0x11482
   12948:	lea    ecx,[ebp-0x4]
   1294b:	push   ecx
   1294c:	push   DWORD PTR [ebp+0xc]
   1294f:	call   eax
   12951:	test   eax,eax
   12953:	jl     0x129af
   12955:	push   esi
   12956:	push   0x5
   12958:	call   0x11ef2
   1295d:	mov    esi,eax
   1295f:	test   esi,esi
   12961:	je     0x129ae
   12963:	mov    edx,DWORD PTR [ebp+0x10]
   12966:	cmp    DWORD PTR [esi+0x44],edx
   12969:	je     0x12978
   1296b:	mov    ecx,DWORD PTR [eax]
   1296d:	test   ecx,ecx
   1296f:	je     0x1299c
   12971:	add    eax,ecx
   12973:	cmp    DWORD PTR [eax+0x44],edx
   12976:	jne    0x1296b
   12978:	cmp    DWORD PTR [eax+0x4],0x0
   1297c:	je     0x1299c
   1297e:	mov    ecx,DWORD PTR [eax+0xd8]
   12984:	mov    eax,DWORD PTR [eax+0xdc]
   1298a:	mov    DWORD PTR [ebp-0x14],eax
   1298d:	lea    eax,[ebp-0x18]
   12990:	push   eax
   12991:	push   DWORD PTR [ebp+0x8]
   12994:	mov    DWORD PTR [ebp-0x18],ecx
   12997:	call   0x10d62
   1299c:	mov    ecx,DWORD PTR [ebp-0x4]
   1299f:	call   DWORD PTR ds:0x1bab0
   129a5:	push   0x0
   129a7:	push   esi
   129a8:	call   DWORD PTR ds:0x1ba1c
   129ae:	pop    esi
   129af:	leave  
   129b0:	ret    0x10
   129b3:	int3   
   129b4:	int3   
   129b5:	int3   
   129b6:	int3   
   129b7:	int3   
   129b8:	mov    edi,edi
   129ba:	push   ebp
   129bb:	mov    ebp,esp
   129bd:	push   esi
   129be:	mov    esi,DWORD PTR [ebp+0x8]
   129c1:	lea    eax,[ebp+0xc]
   129c4:	push   eax
   129c5:	mov    ecx,esi
   129c7:	call   0x120d0
   129cc:	xor    ecx,ecx
   129ce:	inc    ecx
   129cf:	cmp    DWORD PTR [esi+0x4],ecx
   129d2:	jbe    0x129e6
   129d4:	mov    eax,DWORD PTR [esi]
   129d6:	lea    eax,[eax+ecx*2]
   129d9:	mov    dx,WORD PTR [eax-0x2]
   129dd:	xor    WORD PTR [eax],dx
   129e0:	inc    ecx
   129e1:	cmp    ecx,DWORD PTR [esi+0x4]
   129e4:	jb     0x129d4
   129e6:	push   DWORD PTR [ebp+0xc]
   129e9:	call   0x10836
   129ee:	pop    ecx
   129ef:	mov    eax,esi
   129f1:	pop    esi
   129f2:	pop    ebp
   129f3:	ret    0xc
   129f6:	int3   
   129f7:	int3   
   129f8:	int3   
   129f9:	int3   
   129fa:	int3   
   129fb:	int3   
   129fc:	mov    edi,edi
   129fe:	push   esi
   129ff:	mov    esi,ecx
   12a01:	mov    ecx,DWORD PTR [esi]
   12a03:	mov    eax,DWORD PTR [ecx+0x8]
   12a06:	cmp    eax,DWORD PTR ds:0x70fa8
   12a0c:	je     0x12a1a
   12a0e:	push   eax
   12a0f:	call   0x121fe
   12a14:	jmp    0x12a29
   12a16:	mov    DWORD PTR [esi],eax
   12a18:	mov    ecx,eax
   12a1a:	mov    eax,DWORD PTR [ecx+0x4]
   12a1d:	cmp    ecx,DWORD PTR [eax+0x8]
   12a20:	je     0x12a16
   12a22:	mov    ecx,DWORD PTR [esi]
   12a24:	cmp    DWORD PTR [ecx+0x8],eax
   12a27:	je     0x12a2b
   12a29:	mov    DWORD PTR [esi],eax
   12a2b:	pop    esi
   12a2c:	ret    
   12a2d:	int3   
   12a2e:	int3   
   12a2f:	int3   
   12a30:	int3   
   12a31:	int3   
   12a32:	mov    edi,edi
   12a34:	push   ebp
   12a35:	mov    ebp,esp
   12a37:	push   esi
   12a38:	push   DWORD PTR [ebp+0x8]
   12a3b:	mov    esi,ecx
   12a3d:	call   0x11f78
   12a42:	push   DWORD PTR [ebp+0xc]
   12a45:	lea    ecx,[esi+0x8]
   12a48:	call   0x1219c
   12a4d:	mov    eax,esi
   12a4f:	pop    esi
   12a50:	pop    ebp
   12a51:	ret    0x8
   12a54:	int3   
   12a55:	int3   
   12a56:	int3   
   12a57:	int3   
   12a58:	int3   
   12a59:	int3   
   12a5a:	mov    edi,edi
   12a5c:	push   ebp
   12a5d:	mov    ebp,esp
   12a5f:	push   ebx
   12a60:	push   esi
   12a61:	push   edi
   12a62:	mov    edi,DWORD PTR [ebp+0x8]
   12a65:	mov    ebx,ecx
   12a67:	mov    esi,edi
   12a69:	cmp    edi,DWORD PTR ds:0x70fa0
   12a6f:	je     0x12a8e
   12a71:	push   DWORD PTR [esi+0x8]
   12a74:	mov    ecx,ebx
   12a76:	call   0x12a5a
   12a7b:	mov    esi,DWORD PTR [esi]
   12a7d:	push   edi
   12a7e:	call   0x10836
   12a83:	pop    ecx
   12a84:	mov    edi,esi
   12a86:	cmp    esi,DWORD PTR ds:0x70fa0
   12a8c:	jne    0x12a71
   12a8e:	pop    edi
   12a8f:	pop    esi
   12a90:	pop    ebx
   12a91:	pop    ebp
   12a92:	ret    0x4
   12a95:	int3   
   12a96:	int3   
   12a97:	int3   
   12a98:	int3   
   12a99:	int3   
   12a9a:	mov    edi,edi
   12a9c:	push   ebp
   12a9d:	mov    ebp,esp
   12a9f:	push   0x0
   12aa1:	push   0x58
   12aa3:	call   0x114be
   12aa8:	mov    ecx,DWORD PTR [ebp+0x8]
   12aab:	mov    DWORD PTR [eax+0x4],ecx
   12aae:	mov    ecx,DWORD PTR [ebp+0xc]
   12ab1:	mov    DWORD PTR [eax+0x50],ecx
   12ab4:	pop    ebp
   12ab5:	ret    0x8
   12ab8:	int3   
   12ab9:	int3   
   12aba:	int3   
   12abb:	int3   
   12abc:	int3   
   12abd:	int3   
   12abe:	mov    edi,edi
   12ac0:	push   ebp
   12ac1:	mov    ebp,esp
   12ac3:	push   0x0
   12ac5:	push   0x18
   12ac7:	call   0x114be
   12acc:	mov    ecx,DWORD PTR [ebp+0x8]
   12acf:	mov    DWORD PTR [eax+0x4],ecx
   12ad2:	mov    ecx,DWORD PTR [ebp+0xc]
   12ad5:	mov    DWORD PTR [eax+0x14],ecx
   12ad8:	pop    ebp
   12ad9:	ret    0x8
   12adc:	int3   
   12add:	int3   
   12ade:	int3   
   12adf:	int3   
   12ae0:	int3   
   12ae1:	int3   
   12ae2:	mov    edi,edi
   12ae4:	push   ebp
   12ae5:	mov    ebp,esp
   12ae7:	push   0x0
   12ae9:	push   0x14
   12aeb:	call   0x114be
   12af0:	mov    ecx,DWORD PTR [ebp+0x8]
   12af3:	mov    DWORD PTR [eax+0x4],ecx
   12af6:	mov    ecx,DWORD PTR [ebp+0xc]
   12af9:	mov    DWORD PTR [eax+0x10],ecx
   12afc:	pop    ebp
   12afd:	ret    0x8
   12b00:	int3   
   12b01:	int3   
   12b02:	int3   
   12b03:	int3   
   12b04:	int3   
   12b05:	int3   
   12b06:	mov    edi,edi
   12b08:	push   ebp
   12b09:	mov    ebp,esp
   12b0b:	push   0x0
   12b0d:	push   0x60
   12b0f:	call   0x114be
   12b14:	mov    ecx,DWORD PTR [ebp+0x8]
   12b17:	mov    DWORD PTR [eax+0x4],ecx
   12b1a:	mov    ecx,DWORD PTR [ebp+0xc]
   12b1d:	mov    DWORD PTR [eax+0x58],ecx
   12b20:	pop    ebp
   12b21:	ret    0x8
   12b24:	int3   
   12b25:	int3   
   12b26:	int3   
   12b27:	int3   
   12b28:	int3   
   12b29:	int3   
   12b2a:	mov    edi,edi
   12b2c:	push   ebp
   12b2d:	mov    ebp,esp
   12b2f:	push   0x0
   12b31:	push   0x20
   12b33:	call   0x114be
   12b38:	mov    ecx,DWORD PTR [ebp+0x8]
   12b3b:	mov    DWORD PTR [eax+0x4],ecx
   12b3e:	mov    ecx,DWORD PTR [ebp+0xc]
   12b41:	mov    DWORD PTR [eax+0x1c],ecx
   12b44:	pop    ebp
   12b45:	ret    0x8
   12b48:	int3   
   12b49:	int3   
   12b4a:	int3   
   12b4b:	int3   
   12b4c:	int3   
   12b4d:	int3   
   12b4e:	mov    edi,edi
   12b50:	push   ebp
   12b51:	mov    ebp,esp
   12b53:	push   ecx
   12b54:	push   DWORD PTR [ebp-0x4]
   12b57:	push   DWORD PTR [ebp+0x10]
   12b5a:	push   DWORD PTR [ebp+0xc]
   12b5d:	push   DWORD PTR [ebp+0x8]
   12b60:	call   0x1282a
   12b65:	add    esp,0x10
   12b68:	leave  
   12b69:	ret    
   12b6a:	int3   
   12b6b:	int3   
   12b6c:	int3   
   12b6d:	int3   
   12b6e:	int3   
   12b6f:	int3   
   12b70:	mov    edi,edi
   12b72:	push   ebp
   12b73:	mov    ebp,esp
   12b75:	push   ecx
   12b76:	push   DWORD PTR [ebp-0x4]
   12b79:	push   DWORD PTR [ebp+0x10]
   12b7c:	push   DWORD PTR [ebp+0xc]
   12b7f:	push   DWORD PTR [ebp+0x8]
   12b82:	call   0x12854
   12b87:	add    esp,0x10
   12b8a:	leave  
   12b8b:	ret    
   12b8c:	int3   
   12b8d:	int3   
   12b8e:	int3   
   12b8f:	int3   
   12b90:	int3   
   12b91:	int3   
   12b92:	mov    edi,edi
   12b94:	push   ebp
   12b95:	mov    ebp,esp
   12b97:	push   ecx
   12b98:	push   DWORD PTR [ebp-0x4]
   12b9b:	push   DWORD PTR [ebp+0x10]
   12b9e:	push   DWORD PTR [ebp+0xc]
   12ba1:	push   DWORD PTR [ebp+0x8]
   12ba4:	call   0x1287e
   12ba9:	add    esp,0x10
   12bac:	leave  
   12bad:	ret    
   12bae:	int3   
   12baf:	int3   
   12bb0:	int3   
   12bb1:	int3   
   12bb2:	int3   
   12bb3:	int3   
   12bb4:	mov    edi,edi
   12bb6:	push   ebp
   12bb7:	mov    ebp,esp
   12bb9:	mov    ecx,DWORD PTR [ebp+0x8]
   12bbc:	test   ecx,ecx
   12bbe:	je     0x12bc8
   12bc0:	push   DWORD PTR [ebp+0xc]
   12bc3:	call   0x12750
   12bc8:	pop    ebp
   12bc9:	ret    0x8
   12bcc:	int3   
   12bcd:	int3   
   12bce:	int3   
   12bcf:	int3   
   12bd0:	int3   
   12bd1:	int3   
   12bd2:	mov    edi,edi
   12bd4:	push   ebp
   12bd5:	mov    ebp,esp
   12bd7:	mov    ecx,DWORD PTR [ebp+0x8]
   12bda:	test   ecx,ecx
   12bdc:	je     0x12be6
   12bde:	push   DWORD PTR [ebp+0xc]
   12be1:	call   0x1277c
   12be6:	pop    ebp
   12be7:	ret    0x8
   12bea:	int3   
   12beb:	int3   
   12bec:	int3   
   12bed:	int3   
   12bee:	int3   
   12bef:	int3   
   12bf0:	mov    edi,edi
   12bf2:	push   ebp
   12bf3:	mov    ebp,esp
   12bf5:	mov    ecx,DWORD PTR [ebp+0x8]
   12bf8:	test   ecx,ecx
   12bfa:	je     0x12c04
   12bfc:	push   DWORD PTR [ebp+0xc]
   12bff:	call   0x127a8
   12c04:	pop    ebp
   12c05:	ret    0x8
   12c08:	int3   
   12c09:	int3   
   12c0a:	int3   
   12c0b:	int3   
   12c0c:	int3   
   12c0d:	int3   
   12c0e:	mov    edi,edi
   12c10:	push   ebp
   12c11:	mov    ebp,esp
   12c13:	mov    ecx,DWORD PTR [ebp+0x8]
   12c16:	push   0x0
   12c18:	call   0x127d0
   12c1d:	pop    ebp
   12c1e:	ret    0x4
   12c21:	int3   
   12c22:	int3   
   12c23:	int3   
   12c24:	int3   
   12c25:	int3   
   12c26:	mov    edi,edi
   12c28:	push   ebp
   12c29:	mov    ebp,esp
   12c2b:	mov    ecx,DWORD PTR [ebp+0x8]
   12c2e:	test   ecx,ecx
   12c30:	je     0x12c3a
   12c32:	push   DWORD PTR [ebp+0xc]
   12c35:	call   0x127fe
   12c3a:	pop    ebp
   12c3b:	ret    0x8
   12c3e:	int3   
   12c3f:	int3   
   12c40:	int3   
   12c41:	int3   
   12c42:	int3   
   12c43:	int3   
   12c44:	mov    edi,edi
   12c46:	push   ebp
   12c47:	mov    ebp,esp
   12c49:	push   ecx
   12c4a:	push   esi
   12c4b:	push   edi
   12c4c:	mov    edi,DWORD PTR [ebp+0xc]
   12c4f:	push   edi
   12c50:	mov    esi,ecx
   12c52:	call   0x12248
   12c57:	mov    esi,DWORD PTR [esi+0x4]
   12c5a:	mov    DWORD PTR [ebp+0xc],eax
   12c5d:	cmp    eax,esi
   12c5f:	je     0x12c6d
   12c61:	mov    ecx,DWORD PTR [edi]
   12c63:	cmp    ecx,DWORD PTR [eax+0xc]
   12c66:	jb     0x12c6d
   12c68:	lea    eax,[ebp+0xc]
   12c6b:	jmp    0x12c73
   12c6d:	mov    DWORD PTR [ebp-0x4],esi
   12c70:	lea    eax,[ebp-0x4]
   12c73:	mov    ecx,DWORD PTR [eax]
   12c75:	mov    eax,DWORD PTR [ebp+0x8]
   12c78:	pop    edi
   12c79:	mov    DWORD PTR [eax],ecx
   12c7b:	pop    esi
   12c7c:	leave  
   12c7d:	ret    0x8
   12c80:	int3   
   12c81:	int3   
   12c82:	int3   
   12c83:	int3   
   12c84:	int3   
   12c85:	int3   
   12c86:	mov    edi,edi
   12c88:	push   ebp
   12c89:	mov    ebp,esp
   12c8b:	push   ecx
   12c8c:	push   esi
   12c8d:	push   DWORD PTR [ebp+0xc]
   12c90:	mov    esi,ecx
   12c92:	call   0x1231e
   12c97:	mov    DWORD PTR [ebp-0x4],eax
   12c9a:	cmp    eax,DWORD PTR [esi+0x4]
   12c9d:	je     0x12cb4
   12c9f:	add    eax,0x10
   12ca2:	push   eax
   12ca3:	push   DWORD PTR [ebp+0xc]
   12ca6:	call   0x17b84
   12cab:	test   al,al
   12cad:	jne    0x12cb4
   12caf:	lea    eax,[ebp-0x4]
   12cb2:	jmp    0x12cbd
   12cb4:	mov    eax,DWORD PTR [esi+0x4]
   12cb7:	mov    DWORD PTR [ebp+0xc],eax
   12cba:	lea    eax,[ebp+0xc]
   12cbd:	mov    ecx,DWORD PTR [eax]
   12cbf:	mov    eax,DWORD PTR [ebp+0x8]
   12cc2:	mov    DWORD PTR [eax],ecx
   12cc4:	pop    esi
   12cc5:	leave  
   12cc6:	ret    0x8
   12cc9:	int3   
   12cca:	int3   
   12ccb:	int3   
   12ccc:	int3   
   12ccd:	int3   
   12cce:	mov    edi,edi
   12cd0:	push   ebp
   12cd1:	mov    ebp,esp
   12cd3:	push   ecx
   12cd4:	push   esi
   12cd5:	push   DWORD PTR [ebp+0xc]
   12cd8:	mov    esi,ecx
   12cda:	call   0x1235e
   12cdf:	mov    DWORD PTR [ebp-0x4],eax
   12ce2:	cmp    eax,DWORD PTR [esi+0x4]
   12ce5:	je     0x12cfc
   12ce7:	add    eax,0xc
   12cea:	push   eax
   12ceb:	push   DWORD PTR [ebp+0xc]
   12cee:	call   0x17b84
   12cf3:	test   al,al
   12cf5:	jne    0x12cfc
   12cf7:	lea    eax,[ebp-0x4]
   12cfa:	jmp    0x12d05
   12cfc:	mov    eax,DWORD PTR [esi+0x4]
   12cff:	mov    DWORD PTR [ebp+0xc],eax
   12d02:	lea    eax,[ebp+0xc]
   12d05:	mov    ecx,DWORD PTR [eax]
   12d07:	mov    eax,DWORD PTR [ebp+0x8]
   12d0a:	mov    DWORD PTR [eax],ecx
   12d0c:	pop    esi
   12d0d:	leave  
   12d0e:	ret    0x8
   12d11:	int3   
   12d12:	int3   
   12d13:	int3   
   12d14:	int3   
   12d15:	int3   
   12d16:	mov    edi,edi
   12d18:	push   ebp
   12d19:	mov    ebp,esp
   12d1b:	push   ecx
   12d1c:	push   esi
   12d1d:	push   edi
   12d1e:	mov    edi,DWORD PTR [ebp+0xc]
   12d21:	push   edi
   12d22:	mov    esi,ecx
   12d24:	call   0x1239e
   12d29:	mov    esi,DWORD PTR [esi+0x4]
   12d2c:	mov    DWORD PTR [ebp+0xc],eax
   12d2f:	cmp    eax,esi
   12d31:	je     0x12d3f
   12d33:	mov    ecx,DWORD PTR [edi]
   12d35:	cmp    ecx,DWORD PTR [eax+0xc]
   12d38:	jl     0x12d3f
   12d3a:	lea    eax,[ebp+0xc]
   12d3d:	jmp    0x12d45
   12d3f:	mov    DWORD PTR [ebp-0x4],esi
   12d42:	lea    eax,[ebp-0x4]
   12d45:	mov    ecx,DWORD PTR [eax]
   12d47:	mov    eax,DWORD PTR [ebp+0x8]
   12d4a:	pop    edi
   12d4b:	mov    DWORD PTR [eax],ecx
   12d4d:	pop    esi
   12d4e:	leave  
   12d4f:	ret    0x8
   12d52:	int3   
   12d53:	int3   
   12d54:	int3   
   12d55:	int3   
   12d56:	int3   
   12d57:	int3   
   12d58:	mov    edi,edi
   12d5a:	push   ebp
   12d5b:	mov    ebp,esp
   12d5d:	push   ecx
   12d5e:	push   ecx
   12d5f:	push   ebx
   12d60:	push   esi
   12d61:	mov    DWORD PTR [ebp-0x4],ecx
   12d64:	push   edi
   12d65:	mov    edi,DWORD PTR [ebp+0xc]
   12d68:	lea    ecx,[ebp+0xc]
   12d6b:	call   0x111b6
   12d70:	mov    esi,DWORD PTR [edi]
   12d72:	mov    eax,ds:0x70fa0
   12d77:	mov    ebx,edi
   12d79:	mov    DWORD PTR [ebp-0x8],esi
   12d7c:	cmp    esi,eax
   12d7e:	jne    0x12d9c
   12d80:	mov    esi,DWORD PTR [edi+0x8]
   12d83:	mov    eax,DWORD PTR [ebx+0x4]
   12d86:	mov    ecx,DWORD PTR [ebp-0x4]
   12d89:	mov    DWORD PTR [esi+0x4],eax
   12d8c:	mov    eax,DWORD PTR [ecx+0x4]
   12d8f:	cmp    DWORD PTR [eax+0x4],edi
   12d92:	jne    0x12e11
   12d94:	mov    DWORD PTR [eax+0x4],esi
   12d97:	jmp    0x12e1f
   12d9c:	mov    ecx,DWORD PTR [edi+0x8]
   12d9f:	cmp    ecx,eax
   12da1:	je     0x12d83
   12da3:	push   ecx
   12da4:	call   0x11154
   12da9:	mov    ebx,eax
   12dab:	mov    esi,DWORD PTR [ebx+0x8]
   12dae:	cmp    ebx,edi
   12db0:	je     0x12d83
   12db2:	mov    eax,DWORD PTR [ebp-0x8]
   12db5:	mov    DWORD PTR [eax+0x4],ebx
   12db8:	mov    eax,DWORD PTR [edi]
   12dba:	mov    DWORD PTR [ebx],eax
   12dbc:	cmp    ebx,DWORD PTR [edi+0x8]
   12dbf:	jne    0x12dc6
   12dc1:	mov    DWORD PTR [esi+0x4],ebx
   12dc4:	jmp    0x12ddd
   12dc6:	mov    eax,DWORD PTR [ebx+0x4]
   12dc9:	mov    DWORD PTR [esi+0x4],eax
   12dcc:	mov    eax,DWORD PTR [ebx+0x4]
   12dcf:	mov    DWORD PTR [eax],esi
   12dd1:	mov    eax,DWORD PTR [edi+0x8]
   12dd4:	mov    DWORD PTR [ebx+0x8],eax
   12dd7:	mov    eax,DWORD PTR [edi+0x8]
   12dda:	mov    DWORD PTR [eax+0x4],ebx
   12ddd:	mov    eax,DWORD PTR [ebp-0x4]
   12de0:	mov    eax,DWORD PTR [eax+0x4]
   12de3:	cmp    DWORD PTR [eax+0x4],edi
   12de6:	jne    0x12ded
   12de8:	mov    DWORD PTR [eax+0x4],ebx
   12deb:	jmp    0x12dfb
   12ded:	mov    eax,DWORD PTR [edi+0x4]
   12df0:	cmp    DWORD PTR [eax],edi
   12df2:	jne    0x12df8
   12df4:	mov    DWORD PTR [eax],ebx
   12df6:	jmp    0x12dfb
   12df8:	mov    DWORD PTR [eax+0x8],ebx
   12dfb:	mov    eax,DWORD PTR [edi+0x4]
   12dfe:	mov    DWORD PTR [ebx+0x4],eax
   12e01:	mov    eax,DWORD PTR [ebx+0x14]
   12e04:	mov    ecx,DWORD PTR [edi+0x14]
   12e07:	mov    DWORD PTR [ebx+0x14],ecx
   12e0a:	mov    DWORD PTR [edi+0x14],eax
   12e0d:	mov    ebx,edi
   12e0f:	jmp    0x12e72
   12e11:	mov    eax,DWORD PTR [edi+0x4]
   12e14:	cmp    DWORD PTR [eax],edi
   12e16:	jne    0x12e1c
   12e18:	mov    DWORD PTR [eax],esi
   12e1a:	jmp    0x12e1f
   12e1c:	mov    DWORD PTR [eax+0x8],esi
   12e1f:	mov    eax,DWORD PTR [ecx+0x4]
   12e22:	mov    DWORD PTR [ebp-0x8],eax
   12e25:	cmp    DWORD PTR [eax],edi
   12e27:	jne    0x12e49
   12e29:	mov    edx,DWORD PTR [edi+0x8]
   12e2c:	cmp    edx,DWORD PTR ds:0x70fa0
   12e32:	jne    0x12e3b
   12e34:	mov    edx,DWORD PTR [edi+0x4]
   12e37:	mov    DWORD PTR [eax],edx
   12e39:	jmp    0x12e49
   12e3b:	push   esi
   12e3c:	call   0x11154
   12e41:	mov    ecx,DWORD PTR [ebp-0x8]
   12e44:	mov    DWORD PTR [ecx],eax
   12e46:	mov    ecx,DWORD PTR [ebp-0x4]
   12e49:	mov    eax,DWORD PTR [ecx+0x4]
   12e4c:	mov    DWORD PTR [ebp-0x8],eax
   12e4f:	cmp    DWORD PTR [eax+0x8],edi
   12e52:	jne    0x12e72
   12e54:	mov    ecx,DWORD PTR [edi]
   12e56:	cmp    ecx,DWORD PTR ds:0x70fa0
   12e5c:	jne    0x12e66
   12e5e:	mov    ecx,DWORD PTR [edi+0x4]
   12e61:	mov    DWORD PTR [eax+0x8],ecx
   12e64:	jmp    0x12e72
   12e66:	push   esi
   12e67:	call   0x11132
   12e6c:	mov    ecx,DWORD PTR [ebp-0x8]
   12e6f:	mov    DWORD PTR [ecx+0x8],eax
   12e72:	xor    edi,edi
   12e74:	inc    edi
   12e75:	cmp    DWORD PTR [ebx+0x14],edi
   12e78:	jne    0x12f8f
   12e7e:	jmp    0x12f3d
   12e83:	cmp    DWORD PTR [esi+0x14],edi
   12e86:	jne    0x12f8c
   12e8c:	mov    eax,DWORD PTR [esi+0x4]
   12e8f:	cmp    esi,DWORD PTR [eax]
   12e91:	jne    0x12f08
   12e93:	mov    eax,DWORD PTR [eax+0x8]
   12e96:	cmp    DWORD PTR [eax+0x14],0x0
   12e9a:	jne    0x12eb4
   12e9c:	mov    DWORD PTR [eax+0x14],edi
   12e9f:	mov    eax,DWORD PTR [esi+0x4]
   12ea2:	and    DWORD PTR [eax+0x14],0x0
   12ea6:	push   DWORD PTR [esi+0x4]
   12ea9:	call   0x12280
   12eae:	mov    eax,DWORD PTR [esi+0x4]
   12eb1:	mov    eax,DWORD PTR [eax+0x8]
   12eb4:	mov    ecx,DWORD PTR [eax]
   12eb6:	cmp    DWORD PTR [ecx+0x14],edi
   12eb9:	jne    0x12ec3
   12ebb:	mov    ecx,DWORD PTR [eax+0x8]
   12ebe:	cmp    DWORD PTR [ecx+0x14],edi
   12ec1:	je     0x12f36
   12ec3:	mov    ecx,DWORD PTR [eax+0x8]
   12ec6:	cmp    DWORD PTR [ecx+0x14],edi
   12ec9:	jne    0x12ee3
   12ecb:	mov    ecx,DWORD PTR [eax]
   12ecd:	mov    DWORD PTR [ecx+0x14],edi
   12ed0:	mov    ecx,DWORD PTR [ebp-0x4]
   12ed3:	and    DWORD PTR [eax+0x14],0x0
   12ed7:	push   eax
   12ed8:	call   0x122ce
   12edd:	mov    eax,DWORD PTR [esi+0x4]
   12ee0:	mov    eax,DWORD PTR [eax+0x8]
   12ee3:	mov    ecx,DWORD PTR [esi+0x4]
   12ee6:	mov    ecx,DWORD PTR [ecx+0x14]
   12ee9:	mov    DWORD PTR [eax+0x14],ecx
   12eec:	mov    ecx,DWORD PTR [esi+0x4]
   12eef:	mov    DWORD PTR [ecx+0x14],edi
   12ef2:	mov    eax,DWORD PTR [eax+0x8]
   12ef5:	mov    ecx,DWORD PTR [ebp-0x4]
   12ef8:	mov    DWORD PTR [eax+0x14],edi
   12efb:	push   DWORD PTR [esi+0x4]
   12efe:	call   0x12280
   12f03:	jmp    0x12f8c
   12f08:	mov    eax,DWORD PTR [eax]
   12f0a:	cmp    DWORD PTR [eax+0x14],0x0
   12f0e:	jne    0x12f27
   12f10:	mov    DWORD PTR [eax+0x14],edi
   12f13:	mov    eax,DWORD PTR [esi+0x4]
   12f16:	and    DWORD PTR [eax+0x14],0x0
   12f1a:	push   DWORD PTR [esi+0x4]
   12f1d:	call   0x122ce
   12f22:	mov    eax,DWORD PTR [esi+0x4]
   12f25:	mov    eax,DWORD PTR [eax]
   12f27:	mov    ecx,DWORD PTR [eax+0x8]
   12f2a:	cmp    DWORD PTR [ecx+0x14],edi
   12f2d:	jne    0x12f4e
   12f2f:	mov    ecx,DWORD PTR [eax]
   12f31:	cmp    DWORD PTR [ecx+0x14],edi
   12f34:	jne    0x12f4e
   12f36:	and    DWORD PTR [eax+0x14],0x0
   12f3a:	mov    esi,DWORD PTR [esi+0x4]
   12f3d:	mov    ecx,DWORD PTR [ebp-0x4]
   12f40:	mov    eax,DWORD PTR [ecx+0x4]
   12f43:	cmp    esi,DWORD PTR [eax+0x4]
   12f46:	jne    0x12e83
   12f4c:	jmp    0x12f8c
   12f4e:	mov    ecx,DWORD PTR [eax]
   12f50:	cmp    DWORD PTR [ecx+0x14],edi
   12f53:	jne    0x12f6d
   12f55:	mov    ecx,DWORD PTR [eax+0x8]
   12f58:	mov    DWORD PTR [ecx+0x14],edi
   12f5b:	mov    ecx,DWORD PTR [ebp-0x4]
   12f5e:	and    DWORD PTR [eax+0x14],0x0
   12f62:	push   eax
   12f63:	call   0x12280
   12f68:	mov    eax,DWORD PTR [esi+0x4]
   12f6b:	mov    eax,DWORD PTR [eax]
   12f6d:	mov    ecx,DWORD PTR [esi+0x4]
   12f70:	mov    ecx,DWORD PTR [ecx+0x14]
   12f73:	mov    DWORD PTR [eax+0x14],ecx
   12f76:	mov    ecx,DWORD PTR [esi+0x4]
   12f79:	mov    DWORD PTR [ecx+0x14],edi
   12f7c:	mov    eax,DWORD PTR [eax]
   12f7e:	mov    ecx,DWORD PTR [ebp-0x4]
   12f81:	mov    DWORD PTR [eax+0x14],edi
   12f84:	push   DWORD PTR [esi+0x4]
   12f87:	call   0x122ce
   12f8c:	mov    DWORD PTR [esi+0x14],edi
   12f8f:	push   ebx
   12f90:	call   0x10836
   12f95:	mov    eax,DWORD PTR [ebp-0x4]
   12f98:	dec    DWORD PTR [eax+0xc]
   12f9b:	mov    eax,DWORD PTR [ebp+0x8]
   12f9e:	pop    ecx
   12f9f:	mov    ecx,DWORD PTR [ebp+0xc]
   12fa2:	pop    edi
   12fa3:	pop    esi
   12fa4:	mov    DWORD PTR [eax],ecx
   12fa6:	pop    ebx
   12fa7:	leave  
   12fa8:	ret    0x8
   12fab:	int3   
   12fac:	int3   
   12fad:	int3   
   12fae:	int3   
   12faf:	int3   
   12fb0:	mov    edi,edi
   12fb2:	push   ebp
   12fb3:	mov    ebp,esp
   12fb5:	push   esi
   12fb6:	push   edi
   12fb7:	push   DWORD PTR [ebp+0xc]
   12fba:	mov    edi,ecx
   12fbc:	call   0x123d6
   12fc1:	push   DWORD PTR [ebp+0xc]
   12fc4:	mov    ecx,edi
   12fc6:	mov    esi,eax
   12fc8:	call   0x12248
   12fcd:	mov    ecx,DWORD PTR [ebp+0x8]
   12fd0:	pop    edi
   12fd1:	mov    DWORD PTR [ecx],eax
   12fd3:	mov    DWORD PTR [ecx+0x4],esi
   12fd6:	mov    eax,ecx
   12fd8:	pop    esi
   12fd9:	pop    ebp
   12fda:	ret    0x8
   12fdd:	int3   
   12fde:	int3   
   12fdf:	int3   
   12fe0:	int3   
   12fe1:	int3   
   12fe2:	mov    edi,edi
   12fe4:	push   esi
   12fe5:	push   edi
   12fe6:	push   0x1
   12fe8:	xor    edi,edi
   12fea:	push   edi
   12feb:	mov    esi,ecx
   12fed:	call   0x12abe
   12ff2:	cmp    DWORD PTR ds:0x70fa0,edi
   12ff8:	jne    0x1300f
   12ffa:	mov    ecx,eax
   12ffc:	mov    DWORD PTR ds:0x70fa0,ecx
   13002:	mov    DWORD PTR [ecx],edi
   13004:	mov    ecx,DWORD PTR ds:0x70fa0
   1300a:	xor    eax,eax
   1300c:	mov    DWORD PTR [ecx+0x8],edi
   1300f:	inc    DWORD PTR ds:0x70fbc
   13015:	cmp    eax,edi
   13017:	je     0x13020
   13019:	push   eax
   1301a:	call   0x10836
   1301f:	pop    ecx
   13020:	push   edi
   13021:	push   DWORD PTR ds:0x70fa0
   13027:	mov    ecx,esi
   13029:	call   0x12abe
   1302e:	mov    DWORD PTR [esi+0xc],edi
   13031:	mov    DWORD PTR [esi+0x4],eax
   13034:	mov    DWORD PTR [eax],eax
   13036:	mov    esi,DWORD PTR [esi+0x4]
   13039:	pop    edi
   1303a:	mov    DWORD PTR [esi+0x8],esi
   1303d:	pop    esi
   1303e:	ret    
   1303f:	int3   
   13040:	int3   
   13041:	int3   
   13042:	int3   
   13043:	int3   
   13044:	mov    edi,edi
   13046:	push   ebp
   13047:	mov    ebp,esp
   13049:	push   esi
   1304a:	push   edi
   1304b:	push   DWORD PTR [ebp+0xc]
   1304e:	mov    edi,ecx
   13050:	call   0x1240e
   13055:	push   DWORD PTR [ebp+0xc]
   13058:	mov    ecx,edi
   1305a:	mov    esi,eax
   1305c:	call   0x1231e
   13061:	mov    ecx,DWORD PTR [ebp+0x8]
   13064:	pop    edi
   13065:	mov    DWORD PTR [ecx],eax
   13067:	mov    DWORD PTR [ecx+0x4],esi
   1306a:	mov    eax,ecx
   1306c:	pop    esi
   1306d:	pop    ebp
   1306e:	ret    0x8
   13071:	int3   
   13072:	int3   
   13073:	int3   
   13074:	int3   
   13075:	int3   
   13076:	mov    edi,edi
   13078:	push   esi
   13079:	push   edi
   1307a:	push   0x1
   1307c:	xor    edi,edi
   1307e:	push   edi
   1307f:	mov    esi,ecx
   13081:	call   0x12a9a
   13086:	cmp    DWORD PTR ds:0x70fa8,edi
   1308c:	jne    0x130a3
   1308e:	mov    ecx,eax
   13090:	mov    DWORD PTR ds:0x70fa8,ecx
   13096:	mov    DWORD PTR [ecx],edi
   13098:	mov    ecx,DWORD PTR ds:0x70fa8
   1309e:	xor    eax,eax
   130a0:	mov    DWORD PTR [ecx+0x8],edi
   130a3:	inc    DWORD PTR ds:0x70fc0
   130a9:	cmp    eax,edi
   130ab:	je     0x130b4
   130ad:	push   eax
   130ae:	call   0x10836
   130b3:	pop    ecx
   130b4:	push   edi
   130b5:	push   DWORD PTR ds:0x70fa8
   130bb:	mov    ecx,esi
   130bd:	call   0x12a9a
   130c2:	mov    DWORD PTR [esi+0xc],edi
   130c5:	mov    DWORD PTR [esi+0x4],eax
   130c8:	mov    DWORD PTR [eax],eax
   130ca:	mov    esi,DWORD PTR [esi+0x4]
   130cd:	pop    edi
   130ce:	mov    DWORD PTR [esi+0x8],esi
   130d1:	pop    esi
   130d2:	ret    
   130d3:	int3   
   130d4:	int3   
   130d5:	int3   
   130d6:	int3   
   130d7:	int3   
   130d8:	mov    edi,edi
   130da:	push   ebp
   130db:	mov    ebp,esp
   130dd:	push   esi
   130de:	push   edi
   130df:	push   DWORD PTR [ebp+0xc]
   130e2:	mov    edi,ecx
   130e4:	call   0x124ec
   130e9:	push   DWORD PTR [ebp+0xc]
   130ec:	mov    ecx,edi
   130ee:	mov    esi,eax
   130f0:	call   0x1235e
   130f5:	mov    ecx,DWORD PTR [ebp+0x8]
   130f8:	pop    edi
   130f9:	mov    DWORD PTR [ecx],eax
   130fb:	mov    DWORD PTR [ecx+0x4],esi
   130fe:	mov    eax,ecx
   13100:	pop    esi
   13101:	pop    ebp
   13102:	ret    0x8
   13105:	int3   
   13106:	int3   
   13107:	int3   
   13108:	int3   
   13109:	int3   
   1310a:	mov    edi,edi
   1310c:	push   esi
   1310d:	push   edi
   1310e:	push   0x1
   13110:	xor    edi,edi
   13112:	push   edi
   13113:	mov    esi,ecx
   13115:	call   0x12b2a
   1311a:	cmp    DWORD PTR ds:0x70fac,edi
   13120:	jne    0x13137
   13122:	mov    ecx,eax
   13124:	mov    DWORD PTR ds:0x70fac,ecx
   1312a:	mov    DWORD PTR [ecx],edi
   1312c:	mov    ecx,DWORD PTR ds:0x70fac
   13132:	xor    eax,eax
   13134:	mov    DWORD PTR [ecx+0x8],edi
   13137:	inc    DWORD PTR ds:0x70fc4
   1313d:	cmp    eax,edi
   1313f:	je     0x13148
   13141:	push   eax
   13142:	call   0x10836
   13147:	pop    ecx
   13148:	push   edi
   13149:	push   DWORD PTR ds:0x70fac
   1314f:	mov    ecx,esi
   13151:	call   0x12b2a
   13156:	mov    DWORD PTR [esi+0xc],edi
   13159:	mov    DWORD PTR [esi+0x4],eax
   1315c:	mov    DWORD PTR [eax],eax
   1315e:	mov    esi,DWORD PTR [esi+0x4]
   13161:	pop    edi
   13162:	mov    DWORD PTR [esi+0x8],esi
   13165:	pop    esi
   13166:	ret    
   13167:	int3   
   13168:	int3   
   13169:	int3   
   1316a:	int3   
   1316b:	int3   
   1316c:	mov    edi,edi
   1316e:	push   ebp
   1316f:	mov    ebp,esp
   13171:	push   esi
   13172:	push   edi
   13173:	push   DWORD PTR [ebp+0xc]
   13176:	mov    edi,ecx
   13178:	call   0x125ca
   1317d:	push   DWORD PTR [ebp+0xc]
   13180:	mov    ecx,edi
   13182:	mov    esi,eax
   13184:	call   0x1239e
   13189:	mov    ecx,DWORD PTR [ebp+0x8]
   1318c:	pop    edi
   1318d:	mov    DWORD PTR [ecx],eax
   1318f:	mov    DWORD PTR [ecx+0x4],esi
   13192:	mov    eax,ecx
   13194:	pop    esi
   13195:	pop    ebp
   13196:	ret    0x8
   13199:	int3   
   1319a:	int3   
   1319b:	int3   
   1319c:	int3   
   1319d:	int3   
   1319e:	mov    edi,edi
   131a0:	push   esi
   131a1:	push   edi
   131a2:	push   0x1
   131a4:	xor    edi,edi
   131a6:	push   edi
   131a7:	mov    esi,ecx
   131a9:	call   0x12abe
   131ae:	cmp    DWORD PTR ds:0x70fb0,edi
   131b4:	jne    0x131cb
   131b6:	mov    ecx,eax
   131b8:	mov    DWORD PTR ds:0x70fb0,ecx
   131be:	mov    DWORD PTR [ecx],edi
   131c0:	mov    ecx,DWORD PTR ds:0x70fb0
   131c6:	xor    eax,eax
   131c8:	mov    DWORD PTR [ecx+0x8],edi
   131cb:	inc    DWORD PTR ds:0x70fc8
   131d1:	cmp    eax,edi
   131d3:	je     0x131dc
   131d5:	push   eax
   131d6:	call   0x10836
   131db:	pop    ecx
   131dc:	push   edi
   131dd:	push   DWORD PTR ds:0x70fb0
   131e3:	mov    ecx,esi
   131e5:	call   0x12abe
   131ea:	mov    DWORD PTR [esi+0xc],edi
   131ed:	mov    DWORD PTR [esi+0x4],eax
   131f0:	mov    DWORD PTR [eax],eax
   131f2:	mov    esi,DWORD PTR [esi+0x4]
   131f5:	pop    edi
   131f6:	mov    DWORD PTR [esi+0x8],esi
   131f9:	pop    esi
   131fa:	ret    
   131fb:	int3   
   131fc:	int3   
   131fd:	int3   
   131fe:	int3   
   131ff:	int3   
   13200:	mov    edi,edi
   13202:	push   ebp
   13203:	mov    ebp,esp
   13205:	push   ecx
   13206:	push   esi
   13207:	push   DWORD PTR [ebp+0xc]
   1320a:	mov    esi,ecx
   1320c:	call   0x12602
   13211:	mov    DWORD PTR [ebp-0x4],eax
   13214:	cmp    eax,DWORD PTR [esi+0x4]
   13217:	je     0x1322e
   13219:	add    eax,0xc
   1321c:	push   eax
   1321d:	push   DWORD PTR [ebp+0xc]
   13220:	call   0x17bb4
   13225:	test   al,al
   13227:	jne    0x1322e
   13229:	lea    eax,[ebp-0x4]
   1322c:	jmp    0x13237
   1322e:	mov    eax,DWORD PTR [esi+0x4]
   13231:	mov    DWORD PTR [ebp+0xc],eax
   13234:	lea    eax,[ebp+0xc]
   13237:	mov    ecx,DWORD PTR [eax]
   13239:	mov    eax,DWORD PTR [ebp+0x8]
   1323c:	mov    DWORD PTR [eax],ecx
   1323e:	pop    esi
   1323f:	leave  
   13240:	ret    0x8
   13243:	int3   
   13244:	int3   
   13245:	int3   
   13246:	int3   
   13247:	int3   
   13248:	mov    edi,edi
   1324a:	push   esi
   1324b:	push   edi
   1324c:	push   0x1
   1324e:	xor    edi,edi
   13250:	push   edi
   13251:	mov    esi,ecx
   13253:	call   0x12ae2
   13258:	cmp    DWORD PTR ds:0x70fa4,edi
   1325e:	jne    0x13275
   13260:	mov    ecx,eax
   13262:	mov    DWORD PTR ds:0x70fa4,ecx
   13268:	mov    DWORD PTR [ecx],edi
   1326a:	mov    ecx,DWORD PTR ds:0x70fa4
   13270:	xor    eax,eax
   13272:	mov    DWORD PTR [ecx+0x8],edi
   13275:	inc    DWORD PTR ds:0x70fcc
   1327b:	cmp    eax,edi
   1327d:	je     0x13286
   1327f:	push   eax
   13280:	call   0x10836
   13285:	pop    ecx
   13286:	push   edi
   13287:	push   DWORD PTR ds:0x70fa4
   1328d:	mov    ecx,esi
   1328f:	call   0x12ae2
   13294:	mov    DWORD PTR [esi+0xc],edi
   13297:	mov    DWORD PTR [esi+0x4],eax
   1329a:	mov    DWORD PTR [eax],eax
   1329c:	mov    esi,DWORD PTR [esi+0x4]
   1329f:	pop    edi
   132a0:	mov    DWORD PTR [esi+0x8],esi
   132a3:	pop    esi
   132a4:	ret    
   132a5:	int3   
   132a6:	int3   
   132a7:	int3   
   132a8:	int3   
   132a9:	int3   
   132aa:	mov    edi,edi
   132ac:	push   ebp
   132ad:	mov    ebp,esp
   132af:	push   ebx
   132b0:	push   esi
   132b1:	mov    esi,DWORD PTR [ebp+0x10]
   132b4:	push   edi
   132b5:	push   0x0
   132b7:	push   esi
   132b8:	mov    edi,ecx
   132ba:	call   0x12abe
   132bf:	push   DWORD PTR [ebp+0x14]
   132c2:	mov    ebx,eax
   132c4:	mov    eax,ds:0x70fa0
   132c9:	mov    DWORD PTR [ebx],eax
   132cb:	mov    eax,ds:0x70fa0
   132d0:	mov    DWORD PTR [ebx+0x8],eax
   132d3:	lea    eax,[ebx+0xc]
   132d6:	push   eax
   132d7:	call   0x114e0
   132dc:	inc    DWORD PTR [edi+0xc]
   132df:	cmp    esi,DWORD PTR [edi+0x4]
   132e2:	je     0x13306
   132e4:	mov    eax,DWORD PTR [ebp+0xc]
   132e7:	cmp    eax,DWORD PTR ds:0x70fa0
   132ed:	jne    0x13306
   132ef:	mov    eax,DWORD PTR [ebp+0x14]
   132f2:	mov    eax,DWORD PTR [eax]
   132f4:	cmp    eax,DWORD PTR [esi+0xc]
   132f7:	jb     0x13306
   132f9:	mov    DWORD PTR [esi+0x8],ebx
   132fc:	mov    eax,DWORD PTR [edi+0x4]
   132ff:	cmp    esi,DWORD PTR [eax+0x8]
   13302:	jne    0x13320
   13304:	jmp    0x13315
   13306:	mov    DWORD PTR [esi],ebx
   13308:	mov    eax,DWORD PTR [edi+0x4]
   1330b:	cmp    esi,eax
   1330d:	jne    0x1331a
   1330f:	mov    DWORD PTR [eax+0x4],ebx
   13312:	mov    eax,DWORD PTR [edi+0x4]
   13315:	mov    DWORD PTR [eax+0x8],ebx
   13318:	jmp    0x13320
   1331a:	cmp    esi,DWORD PTR [eax]
   1331c:	jne    0x13320
   1331e:	mov    DWORD PTR [eax],ebx
   13320:	mov    eax,DWORD PTR [edi+0x4]
   13323:	mov    esi,ebx
   13325:	cmp    ebx,DWORD PTR [eax+0x4]
   13328:	je     0x133dc
   1332e:	mov    eax,DWORD PTR [esi+0x4]
   13331:	xor    edx,edx
   13333:	cmp    DWORD PTR [eax+0x14],edx
   13336:	jne    0x133dc
   1333c:	mov    ecx,DWORD PTR [eax+0x4]
   1333f:	cmp    eax,DWORD PTR [ecx]
   13341:	jne    0x1337d
   13343:	mov    ecx,DWORD PTR [ecx+0x8]
   13346:	cmp    DWORD PTR [ecx+0x14],edx
   13349:	je     0x13384
   1334b:	cmp    esi,DWORD PTR [eax+0x8]
   1334e:	jne    0x1335a
   13350:	mov    esi,eax
   13352:	push   esi
   13353:	mov    ecx,edi
   13355:	call   0x12280
   1335a:	mov    eax,DWORD PTR [esi+0x4]
   1335d:	mov    DWORD PTR [eax+0x14],0x1
   13364:	mov    eax,DWORD PTR [esi+0x4]
   13367:	mov    eax,DWORD PTR [eax+0x4]
   1336a:	and    DWORD PTR [eax+0x14],0x0
   1336e:	mov    eax,DWORD PTR [esi+0x4]
   13371:	push   DWORD PTR [eax+0x4]
   13374:	mov    ecx,edi
   13376:	call   0x122ce
   1337b:	jmp    0x133d0
   1337d:	mov    ecx,DWORD PTR [ecx]
   1337f:	cmp    DWORD PTR [ecx+0x14],edx
   13382:	jne    0x133a1
   13384:	mov    edx,eax
   13386:	xor    eax,eax
   13388:	inc    eax
   13389:	mov    DWORD PTR [edx+0x14],eax
   1338c:	mov    DWORD PTR [ecx+0x14],eax
   1338f:	mov    eax,DWORD PTR [esi+0x4]
   13392:	mov    eax,DWORD PTR [eax+0x4]
   13395:	and    DWORD PTR [eax+0x14],0x0
   13399:	mov    eax,DWORD PTR [esi+0x4]
   1339c:	mov    esi,DWORD PTR [eax+0x4]
   1339f:	jmp    0x133d0
   133a1:	cmp    esi,DWORD PTR [eax]
   133a3:	jne    0x133af
   133a5:	mov    esi,eax
   133a7:	push   esi
   133a8:	mov    ecx,edi
   133aa:	call   0x122ce
   133af:	mov    eax,DWORD PTR [esi+0x4]
   133b2:	mov    DWORD PTR [eax+0x14],0x1
   133b9:	mov    eax,DWORD PTR [esi+0x4]
   133bc:	mov    eax,DWORD PTR [eax+0x4]
   133bf:	and    DWORD PTR [eax+0x14],0x0
   133c3:	mov    eax,DWORD PTR [esi+0x4]
   133c6:	push   DWORD PTR [eax+0x4]
   133c9:	mov    ecx,edi
   133cb:	call   0x12280
   133d0:	mov    eax,DWORD PTR [edi+0x4]
   133d3:	cmp    esi,DWORD PTR [eax+0x4]
   133d6:	jne    0x1332e
   133dc:	mov    eax,DWORD PTR [edi+0x4]
   133df:	mov    eax,DWORD PTR [eax+0x4]
   133e2:	pop    edi
   133e3:	mov    DWORD PTR [eax+0x14],0x1
   133ea:	mov    eax,DWORD PTR [ebp+0x8]
   133ed:	pop    esi
   133ee:	mov    DWORD PTR [eax],ebx
   133f0:	pop    ebx
   133f1:	pop    ebp
   133f2:	ret    0x10
   133f5:	int3   
   133f6:	int3   
   133f7:	int3   
   133f8:	int3   
   133f9:	int3   
   133fa:	mov    edi,edi
   133fc:	push   ebp
   133fd:	mov    ebp,esp
   133ff:	push   ebx
   13400:	push   esi
   13401:	push   edi
   13402:	mov    edi,DWORD PTR [ebp+0x8]
   13405:	mov    ebx,ecx
   13407:	mov    esi,edi
   13409:	cmp    edi,DWORD PTR ds:0x70fa8
   1340f:	je     0x13437
   13411:	push   DWORD PTR [esi+0x8]
   13414:	mov    ecx,ebx
   13416:	call   0x133fa
   1341b:	mov    esi,DWORD PTR [esi]
   1341d:	lea    eax,[edi+0x10]
   13420:	push   eax
   13421:	call   0x12720
   13426:	push   edi
   13427:	call   0x10836
   1342c:	pop    ecx
   1342d:	mov    edi,esi
   1342f:	cmp    esi,DWORD PTR ds:0x70fa8
   13435:	jne    0x13411
   13437:	pop    edi
   13438:	pop    esi
   13439:	pop    ebx
   1343a:	pop    ebp
   1343b:	ret    0x4
   1343e:	int3   
   1343f:	int3   
   13440:	int3   
   13441:	int3   
   13442:	int3   
   13443:	int3   
   13444:	mov    edi,edi
   13446:	push   ebp
   13447:	mov    ebp,esp
   13449:	push   ecx
   1344a:	push   ecx
   1344b:	push   ebx
   1344c:	push   esi
   1344d:	mov    DWORD PTR [ebp-0x4],ecx
   13450:	push   edi
   13451:	mov    edi,DWORD PTR [ebp+0xc]
   13454:	lea    ecx,[ebp+0xc]
   13457:	call   0x113f4
   1345c:	mov    esi,DWORD PTR [edi]
   1345e:	mov    eax,ds:0x70fac
   13463:	mov    ebx,edi
   13465:	mov    DWORD PTR [ebp-0x8],esi
   13468:	cmp    esi,eax
   1346a:	jne    0x13488
   1346c:	mov    esi,DWORD PTR [edi+0x8]
   1346f:	mov    eax,DWORD PTR [ebx+0x4]
   13472:	mov    ecx,DWORD PTR [ebp-0x4]
   13475:	mov    DWORD PTR [esi+0x4],eax
   13478:	mov    eax,DWORD PTR [ecx+0x4]
   1347b:	cmp    DWORD PTR [eax+0x4],edi
   1347e:	jne    0x134fd
   13480:	mov    DWORD PTR [eax+0x4],esi
   13483:	jmp    0x1350b
   13488:	mov    ecx,DWORD PTR [edi+0x8]
   1348b:	cmp    ecx,eax
   1348d:	je     0x1346f
   1348f:	push   ecx
   13490:	call   0x1130e
   13495:	mov    ebx,eax
   13497:	mov    esi,DWORD PTR [ebx+0x8]
   1349a:	cmp    ebx,edi
   1349c:	je     0x1346f
   1349e:	mov    eax,DWORD PTR [ebp-0x8]
   134a1:	mov    DWORD PTR [eax+0x4],ebx
   134a4:	mov    eax,DWORD PTR [edi]
   134a6:	mov    DWORD PTR [ebx],eax
   134a8:	cmp    ebx,DWORD PTR [edi+0x8]
   134ab:	jne    0x134b2
   134ad:	mov    DWORD PTR [esi+0x4],ebx
   134b0:	jmp    0x134c9
   134b2:	mov    eax,DWORD PTR [ebx+0x4]
   134b5:	mov    DWORD PTR [esi+0x4],eax
   134b8:	mov    eax,DWORD PTR [ebx+0x4]
   134bb:	mov    DWORD PTR [eax],esi
   134bd:	mov    eax,DWORD PTR [edi+0x8]
   134c0:	mov    DWORD PTR [ebx+0x8],eax
   134c3:	mov    eax,DWORD PTR [edi+0x8]
   134c6:	mov    DWORD PTR [eax+0x4],ebx
   134c9:	mov    eax,DWORD PTR [ebp-0x4]
   134cc:	mov    eax,DWORD PTR [eax+0x4]
   134cf:	cmp    DWORD PTR [eax+0x4],edi
   134d2:	jne    0x134d9
   134d4:	mov    DWORD PTR [eax+0x4],ebx
   134d7:	jmp    0x134e7
   134d9:	mov    eax,DWORD PTR [edi+0x4]
   134dc:	cmp    DWORD PTR [eax],edi
   134de:	jne    0x134e4
   134e0:	mov    DWORD PTR [eax],ebx
   134e2:	jmp    0x134e7
   134e4:	mov    DWORD PTR [eax+0x8],ebx
   134e7:	mov    eax,DWORD PTR [edi+0x4]
   134ea:	mov    DWORD PTR [ebx+0x4],eax
   134ed:	mov    eax,DWORD PTR [ebx+0x1c]
   134f0:	mov    ecx,DWORD PTR [edi+0x1c]
   134f3:	mov    DWORD PTR [ebx+0x1c],ecx
   134f6:	mov    DWORD PTR [edi+0x1c],eax
   134f9:	mov    ebx,edi
   134fb:	jmp    0x1355e
   134fd:	mov    eax,DWORD PTR [edi+0x4]
   13500:	cmp    DWORD PTR [eax],edi
   13502:	jne    0x13508
   13504:	mov    DWORD PTR [eax],esi
   13506:	jmp    0x1350b
   13508:	mov    DWORD PTR [eax+0x8],esi
   1350b:	mov    eax,DWORD PTR [ecx+0x4]
   1350e:	mov    DWORD PTR [ebp-0x8],eax
   13511:	cmp    DWORD PTR [eax],edi
   13513:	jne    0x13535
   13515:	mov    edx,DWORD PTR [edi+0x8]
   13518:	cmp    edx,DWORD PTR ds:0x70fac
   1351e:	jne    0x13527
   13520:	mov    edx,DWORD PTR [edi+0x4]
   13523:	mov    DWORD PTR [eax],edx
   13525:	jmp    0x13535
   13527:	push   esi
   13528:	call   0x1130e
   1352d:	mov    ecx,DWORD PTR [ebp-0x8]
   13530:	mov    DWORD PTR [ecx],eax
   13532:	mov    ecx,DWORD PTR [ebp-0x4]
   13535:	mov    eax,DWORD PTR [ecx+0x4]
   13538:	mov    DWORD PTR [ebp-0x8],eax
   1353b:	cmp    DWORD PTR [eax+0x8],edi
   1353e:	jne    0x1355e
   13540:	mov    ecx,DWORD PTR [edi]
   13542:	cmp    ecx,DWORD PTR ds:0x70fac
   13548:	jne    0x13552
   1354a:	mov    ecx,DWORD PTR [edi+0x4]
   1354d:	mov    DWORD PTR [eax+0x8],ecx
   13550:	jmp    0x1355e
   13552:	push   esi
   13553:	call   0x112ec
   13558:	mov    ecx,DWORD PTR [ebp-0x8]
   1355b:	mov    DWORD PTR [ecx+0x8],eax
   1355e:	xor    edi,edi
   13560:	inc    edi
   13561:	cmp    DWORD PTR [ebx+0x1c],edi
   13564:	jne    0x1367b
   1356a:	jmp    0x13629
   1356f:	cmp    DWORD PTR [esi+0x1c],edi
   13572:	jne    0x13678
   13578:	mov    eax,DWORD PTR [esi+0x4]
   1357b:	cmp    esi,DWORD PTR [eax]
   1357d:	jne    0x135f4
   1357f:	mov    eax,DWORD PTR [eax+0x8]
   13582:	cmp    DWORD PTR [eax+0x1c],0x0
   13586:	jne    0x135a0
   13588:	mov    DWORD PTR [eax+0x1c],edi
   1358b:	mov    eax,DWORD PTR [esi+0x4]
   1358e:	and    DWORD PTR [eax+0x1c],0x0
   13592:	push   DWORD PTR [esi+0x4]
   13595:	call   0x1244e
   1359a:	mov    eax,DWORD PTR [esi+0x4]
   1359d:	mov    eax,DWORD PTR [eax+0x8]
   135a0:	mov    ecx,DWORD PTR [eax]
   135a2:	cmp    DWORD PTR [ecx+0x1c],edi
   135a5:	jne    0x135af
   135a7:	mov    ecx,DWORD PTR [eax+0x8]
   135aa:	cmp    DWORD PTR [ecx+0x1c],edi
   135ad:	je     0x13622
   135af:	mov    ecx,DWORD PTR [eax+0x8]
   135b2:	cmp    DWORD PTR [ecx+0x1c],edi
   135b5:	jne    0x135cf
   135b7:	mov    ecx,DWORD PTR [eax]
   135b9:	mov    DWORD PTR [ecx+0x1c],edi
   135bc:	mov    ecx,DWORD PTR [ebp-0x4]
   135bf:	and    DWORD PTR [eax+0x1c],0x0
   135c3:	push   eax
   135c4:	call   0x1249c
   135c9:	mov    eax,DWORD PTR [esi+0x4]
   135cc:	mov    eax,DWORD PTR [eax+0x8]
   135cf:	mov    ecx,DWORD PTR [esi+0x4]
   135d2:	mov    ecx,DWORD PTR [ecx+0x1c]
   135d5:	mov    DWORD PTR [eax+0x1c],ecx
   135d8:	mov    ecx,DWORD PTR [esi+0x4]
   135db:	mov    DWORD PTR [ecx+0x1c],edi
   135de:	mov    eax,DWORD PTR [eax+0x8]
   135e1:	mov    ecx,DWORD PTR [ebp-0x4]
   135e4:	mov    DWORD PTR [eax+0x1c],edi
   135e7:	push   DWORD PTR [esi+0x4]
   135ea:	call   0x1244e
   135ef:	jmp    0x13678
   135f4:	mov    eax,DWORD PTR [eax]
   135f6:	cmp    DWORD PTR [eax+0x1c],0x0
   135fa:	jne    0x13613
   135fc:	mov    DWORD PTR [eax+0x1c],edi
   135ff:	mov    eax,DWORD PTR [esi+0x4]
   13602:	and    DWORD PTR [eax+0x1c],0x0
   13606:	push   DWORD PTR [esi+0x4]
   13609:	call   0x1249c
   1360e:	mov    eax,DWORD PTR [esi+0x4]
   13611:	mov    eax,DWORD PTR [eax]
   13613:	mov    ecx,DWORD PTR [eax+0x8]
   13616:	cmp    DWORD PTR [ecx+0x1c],edi
   13619:	jne    0x1363a
   1361b:	mov    ecx,DWORD PTR [eax]
   1361d:	cmp    DWORD PTR [ecx+0x1c],edi
   13620:	jne    0x1363a
   13622:	and    DWORD PTR [eax+0x1c],0x0
   13626:	mov    esi,DWORD PTR [esi+0x4]
   13629:	mov    ecx,DWORD PTR [ebp-0x4]
   1362c:	mov    eax,DWORD PTR [ecx+0x4]
   1362f:	cmp    esi,DWORD PTR [eax+0x4]
   13632:	jne    0x1356f
   13638:	jmp    0x13678
   1363a:	mov    ecx,DWORD PTR [eax]
   1363c:	cmp    DWORD PTR [ecx+0x1c],edi
   1363f:	jne    0x13659
   13641:	mov    ecx,DWORD PTR [eax+0x8]
   13644:	mov    DWORD PTR [ecx+0x1c],edi
   13647:	mov    ecx,DWORD PTR [ebp-0x4]
   1364a:	and    DWORD PTR [eax+0x1c],0x0
   1364e:	push   eax
   1364f:	call   0x1244e
   13654:	mov    eax,DWORD PTR [esi+0x4]
   13657:	mov    eax,DWORD PTR [eax]
   13659:	mov    ecx,DWORD PTR [esi+0x4]
   1365c:	mov    ecx,DWORD PTR [ecx+0x1c]
   1365f:	mov    DWORD PTR [eax+0x1c],ecx
   13662:	mov    ecx,DWORD PTR [esi+0x4]
   13665:	mov    DWORD PTR [ecx+0x1c],edi
   13668:	mov    eax,DWORD PTR [eax]
   1366a:	mov    ecx,DWORD PTR [ebp-0x4]
   1366d:	mov    DWORD PTR [eax+0x1c],edi
   13670:	push   DWORD PTR [esi+0x4]
   13673:	call   0x1249c
   13678:	mov    DWORD PTR [esi+0x1c],edi
   1367b:	lea    eax,[ebx+0xc]
   1367e:	push   eax
   1367f:	call   0x12738
   13684:	push   ebx
   13685:	call   0x10836
   1368a:	mov    eax,DWORD PTR [ebp-0x4]
   1368d:	dec    DWORD PTR [eax+0xc]
   13690:	mov    eax,DWORD PTR [ebp+0x8]
   13693:	pop    ecx
   13694:	mov    ecx,DWORD PTR [ebp+0xc]
   13697:	pop    edi
   13698:	pop    esi
   13699:	mov    DWORD PTR [eax],ecx
   1369b:	pop    ebx
   1369c:	leave  
   1369d:	ret    0x8
   136a0:	int3   
   136a1:	int3   
   136a2:	int3   
   136a3:	int3   
   136a4:	int3   
   136a5:	int3   
   136a6:	mov    edi,edi
   136a8:	push   ebp
   136a9:	mov    ebp,esp
   136ab:	push   ebx
   136ac:	push   esi
   136ad:	push   edi
   136ae:	mov    edi,DWORD PTR [ebp+0x8]
   136b1:	mov    ebx,ecx
   136b3:	mov    esi,edi
   136b5:	cmp    edi,DWORD PTR ds:0x70fac
   136bb:	je     0x136e3
   136bd:	push   DWORD PTR [esi+0x8]
   136c0:	mov    ecx,ebx
   136c2:	call   0x136a6
   136c7:	mov    esi,DWORD PTR [esi]
   136c9:	lea    eax,[edi+0xc]
   136cc:	push   eax
   136cd:	call   0x12738
   136d2:	push   edi
   136d3:	call   0x10836
   136d8:	pop    ecx
   136d9:	mov    edi,esi
   136db:	cmp    esi,DWORD PTR ds:0x70fac
   136e1:	jne    0x136bd
   136e3:	pop    edi
   136e4:	pop    esi
   136e5:	pop    ebx
   136e6:	pop    ebp
   136e7:	ret    0x4
   136ea:	int3   
   136eb:	int3   
   136ec:	int3   
   136ed:	int3   
   136ee:	int3   
   136ef:	int3   
   136f0:	mov    edi,edi
   136f2:	push   esi
   136f3:	push   edi
   136f4:	push   0x1
   136f6:	xor    edi,edi
   136f8:	push   edi
   136f9:	mov    esi,ecx
   136fb:	call   0x12b06
   13700:	cmp    DWORD PTR ds:0x70fb4,edi
   13706:	jne    0x1371d
   13708:	mov    ecx,eax
   1370a:	mov    DWORD PTR ds:0x70fb4,ecx
   13710:	mov    DWORD PTR [ecx],edi
   13712:	mov    ecx,DWORD PTR ds:0x70fb4
   13718:	xor    eax,eax
   1371a:	mov    DWORD PTR [ecx+0x8],edi
   1371d:	inc    DWORD PTR ds:0x70fd0
   13723:	cmp    eax,edi
   13725:	je     0x1372e
   13727:	push   eax
   13728:	call   0x10836
   1372d:	pop    ecx
   1372e:	push   edi
   1372f:	push   DWORD PTR ds:0x70fb4
   13735:	mov    ecx,esi
   13737:	call   0x12b06
   1373c:	mov    DWORD PTR [esi+0xc],edi
   1373f:	mov    DWORD PTR [esi+0x4],eax
   13742:	mov    DWORD PTR [eax],eax
   13744:	mov    esi,DWORD PTR [esi+0x4]
   13747:	pop    edi
   13748:	mov    DWORD PTR [esi+0x8],esi
   1374b:	pop    esi
   1374c:	ret    
   1374d:	int3   
   1374e:	int3   
   1374f:	int3   
   13750:	int3   
   13751:	int3   
   13752:	mov    edi,edi
   13754:	push   ebp
   13755:	mov    ebp,esp
   13757:	push   edi
   13758:	mov    edi,DWORD PTR [ebp+0xc]
   1375b:	cmp    DWORD PTR [ebp+0x8],edi
   1375e:	je     0x13774
   13760:	push   esi
   13761:	mov    esi,DWORD PTR [ebp+0x10]
   13764:	inc    DWORD PTR [esi]
   13766:	lea    ecx,[ebp+0x8]
   13769:	call   0x129fc
   1376e:	cmp    DWORD PTR [ebp+0x8],edi
   13771:	jne    0x13764
   13773:	pop    esi
   13774:	pop    edi
   13775:	pop    ebp
   13776:	ret    
   13777:	int3   
   13778:	int3   
   13779:	int3   
   1377a:	int3   
   1377b:	int3   
   1377c:	mov    edi,edi
   1377e:	push   ebp
   1377f:	mov    ebp,esp
   13781:	push   DWORD PTR [ebp+0xc]
   13784:	push   DWORD PTR [ebp+0x8]
   13787:	call   0x12cce
   1378c:	mov    eax,DWORD PTR [ebp+0x8]
   1378f:	pop    ebp
   13790:	ret    0x8
   13793:	int3   
   13794:	int3   
   13795:	int3   
   13796:	int3   
   13797:	int3   
   13798:	mov    edi,edi
   1379a:	push   ebp
   1379b:	mov    ebp,esp
   1379d:	push   ecx
   1379e:	push   esi
   1379f:	mov    esi,ecx
   137a1:	cmp    DWORD PTR [esi+0xc],0x0
   137a5:	mov    ecx,DWORD PTR [ebp+0xc]
   137a8:	je     0x137e2
   137aa:	mov    eax,DWORD PTR [esi+0x4]
   137ad:	cmp    ecx,DWORD PTR [eax]
   137af:	jne    0x137e2
   137b1:	cmp    DWORD PTR [ebp+0x10],eax
   137b4:	jne    0x137e2
   137b6:	push   DWORD PTR [eax+0x4]
   137b9:	mov    ecx,esi
   137bb:	call   0x12a5a
   137c0:	mov    ecx,DWORD PTR ds:0x70fa0
   137c6:	mov    eax,DWORD PTR [esi+0x4]
   137c9:	mov    DWORD PTR [eax+0x4],ecx
   137cc:	mov    eax,DWORD PTR [esi+0x4]
   137cf:	and    DWORD PTR [esi+0xc],0x0
   137d3:	mov    DWORD PTR [eax],eax
   137d5:	mov    eax,DWORD PTR [esi+0x4]
   137d8:	mov    DWORD PTR [eax+0x8],eax
   137db:	mov    eax,DWORD PTR [esi+0x4]
   137de:	mov    ecx,DWORD PTR [eax]
   137e0:	jmp    0x13807
   137e2:	cmp    ecx,DWORD PTR [ebp+0x10]
   137e5:	je     0x13807
   137e7:	push   edi
   137e8:	mov    edi,ecx
   137ea:	lea    ecx,[ebp+0xc]
   137ed:	call   0x111b6
   137f2:	push   edi
   137f3:	lea    eax,[ebp-0x4]
   137f6:	push   eax
   137f7:	mov    ecx,esi
   137f9:	call   0x12d58
   137fe:	mov    ecx,DWORD PTR [ebp+0xc]
   13801:	cmp    ecx,DWORD PTR [ebp+0x10]
   13804:	jne    0x137e8
   13806:	pop    edi
   13807:	mov    eax,DWORD PTR [ebp+0x8]
   1380a:	mov    DWORD PTR [eax],ecx
   1380c:	pop    esi
   1380d:	leave  
   1380e:	ret    0xc
   13811:	int3   
   13812:	int3   
   13813:	int3   
   13814:	int3   
   13815:	int3   
   13816:	mov    edi,edi
   13818:	push   ebp
   13819:	mov    ebp,esp
   1381b:	push   ecx
   1381c:	push   ecx
   1381d:	push   esi
   1381e:	push   DWORD PTR [ebp+0x8]
   13821:	lea    eax,[ebp-0x8]
   13824:	push   eax
   13825:	mov    esi,ecx
   13827:	call   0x12fb0
   1382c:	and    DWORD PTR [ebp+0x8],0x0
   13830:	lea    eax,[ebp+0x8]
   13833:	push   eax
   13834:	push   DWORD PTR [ebp-0x4]
   13837:	push   DWORD PTR [ebp-0x8]
   1383a:	call   0x12b4e
   1383f:	add    esp,0xc
   13842:	push   DWORD PTR [ebp-0x4]
   13845:	lea    eax,[ebp-0x4]
   13848:	push   DWORD PTR [ebp-0x8]
   1384b:	mov    ecx,esi
   1384d:	push   eax
   1384e:	call   0x13798
   13853:	mov    eax,DWORD PTR [ebp+0x8]
   13856:	pop    esi
   13857:	leave  
   13858:	ret    0x4
   1385b:	int3   
   1385c:	int3   
   1385d:	int3   
   1385e:	int3   
   1385f:	int3   
   13860:	mov    edi,edi
   13862:	push   ebp
   13863:	mov    ebp,esp
   13865:	push   ecx
   13866:	push   ebx
   13867:	push   esi
   13868:	push   edi
   13869:	mov    edi,ecx
   1386b:	mov    eax,DWORD PTR [edi+0x4]
   1386e:	mov    esi,DWORD PTR [eax+0x4]
   13871:	mov    ebx,eax
   13873:	mov    eax,ds:0x70fa0
   13878:	mov    dl,0x1
   1387a:	cmp    esi,eax
   1387c:	je     0x1389a
   1387e:	mov    ecx,DWORD PTR [ebp+0xc]
   13881:	mov    ecx,DWORD PTR [ecx]
   13883:	cmp    ecx,DWORD PTR [esi+0xc]
   13886:	mov    ebx,esi
   13888:	setb   dl
   1388b:	test   dl,dl
   1388d:	je     0x13893
   1388f:	mov    esi,DWORD PTR [esi]
   13891:	jmp    0x13896
   13893:	mov    esi,DWORD PTR [esi+0x8]
   13896:	cmp    esi,eax
   13898:	jne    0x13883
   1389a:	cmp    BYTE PTR [edi+0x8],0x0
   1389e:	je     0x138bb
   138a0:	push   DWORD PTR [ebp+0xc]
   138a3:	push   ebx
   138a4:	push   esi
   138a5:	lea    eax,[ebp+0xc]
   138a8:	push   eax
   138a9:	mov    ecx,edi
   138ab:	call   0x132aa
   138b0:	mov    ecx,DWORD PTR [eax]
   138b2:	mov    eax,DWORD PTR [ebp+0x8]
   138b5:	mov    BYTE PTR [eax+0x4],0x1
   138b9:	jmp    0x138ea
   138bb:	mov    ecx,ebx
   138bd:	mov    DWORD PTR [ebp-0x4],ecx
   138c0:	test   dl,dl
   138c2:	je     0x138d6
   138c4:	mov    eax,DWORD PTR [edi+0x4]
   138c7:	cmp    ebx,DWORD PTR [eax]
   138c9:	je     0x138a0
   138cb:	lea    ecx,[ebp-0x4]
   138ce:	call   0x11176
   138d3:	mov    ecx,DWORD PTR [ebp-0x4]
   138d6:	mov    edx,DWORD PTR [ecx+0xc]
   138d9:	mov    eax,DWORD PTR [ebp+0xc]
   138dc:	cmp    edx,DWORD PTR [eax]
   138de:	jae    0x138e3
   138e0:	push   eax
   138e1:	jmp    0x138a3
   138e3:	mov    eax,DWORD PTR [ebp+0x8]
   138e6:	mov    BYTE PTR [eax+0x4],0x0
   138ea:	pop    edi
   138eb:	pop    esi
   138ec:	mov    DWORD PTR [eax],ecx
   138ee:	pop    ebx
   138ef:	leave  
   138f0:	ret    0x8
   138f3:	int3   
   138f4:	int3   
   138f5:	int3   
   138f6:	int3   
   138f7:	int3   
   138f8:	mov    edi,edi
   138fa:	push   ebp
   138fb:	mov    ebp,esp
   138fd:	push   ecx
   138fe:	push   esi
   138ff:	mov    esi,ecx
   13901:	cmp    DWORD PTR [esi+0xc],0x0
   13905:	mov    ecx,DWORD PTR [ebp+0xc]
   13908:	je     0x13942
   1390a:	mov    eax,DWORD PTR [esi+0x4]
   1390d:	cmp    ecx,DWORD PTR [eax]
   1390f:	jne    0x13942
   13911:	cmp    DWORD PTR [ebp+0x10],eax
   13914:	jne    0x13942
   13916:	push   DWORD PTR [eax+0x4]
   13919:	mov    ecx,esi
   1391b:	call   0x136a6
   13920:	mov    ecx,DWORD PTR ds:0x70fac
   13926:	mov    eax,DWORD PTR [esi+0x4]
   13929:	mov    DWORD PTR [eax+0x4],ecx
   1392c:	mov    eax,DWORD PTR [esi+0x4]
   1392f:	and    DWORD PTR [esi+0xc],0x0
   13933:	mov    DWORD PTR [eax],eax
   13935:	mov    eax,DWORD PTR [esi+0x4]
   13938:	mov    DWORD PTR [eax+0x8],eax
   1393b:	mov    eax,DWORD PTR [esi+0x4]
   1393e:	mov    ecx,DWORD PTR [eax]
   13940:	jmp    0x13967
   13942:	cmp    ecx,DWORD PTR [ebp+0x10]
   13945:	je     0x13967
   13947:	push   edi
   13948:	mov    edi,ecx
   1394a:	lea    ecx,[ebp+0xc]
   1394d:	call   0x113f4
   13952:	push   edi
   13953:	lea    eax,[ebp-0x4]
   13956:	push   eax
   13957:	mov    ecx,esi
   13959:	call   0x13444
   1395e:	mov    ecx,DWORD PTR [ebp+0xc]
   13961:	cmp    ecx,DWORD PTR [ebp+0x10]
   13964:	jne    0x13948
   13966:	pop    edi
   13967:	mov    eax,DWORD PTR [ebp+0x8]
   1396a:	mov    DWORD PTR [eax],ecx
   1396c:	pop    esi
   1396d:	leave  
   1396e:	ret    0xc
   13971:	int3   
   13972:	int3   
   13973:	int3   
   13974:	int3   
   13975:	int3   
   13976:	mov    edi,edi
   13978:	push   ebp
   13979:	mov    ebp,esp
   1397b:	push   ecx
   1397c:	push   ecx
   1397d:	push   ebx
   1397e:	push   esi
   1397f:	mov    DWORD PTR [ebp-0x4],ecx
   13982:	push   edi
   13983:	mov    edi,DWORD PTR [ebp+0xc]
   13986:	lea    ecx,[ebp+0xc]
   13989:	call   0x129fc
   1398e:	mov    esi,DWORD PTR [edi]
   13990:	mov    eax,ds:0x70fa8
   13995:	mov    ebx,edi
   13997:	mov    DWORD PTR [ebp-0x8],esi
   1399a:	cmp    esi,eax
   1399c:	jne    0x139ba
   1399e:	mov    esi,DWORD PTR [edi+0x8]
   139a1:	mov    eax,DWORD PTR [ebx+0x4]
   139a4:	mov    ecx,DWORD PTR [ebp-0x4]
   139a7:	mov    DWORD PTR [esi+0x4],eax
   139aa:	mov    eax,DWORD PTR [ecx+0x4]
   139ad:	cmp    DWORD PTR [eax+0x4],edi
   139b0:	jne    0x13a2f
   139b2:	mov    DWORD PTR [eax+0x4],esi
   139b5:	jmp    0x13a3d
   139ba:	mov    ecx,DWORD PTR [edi+0x8]
   139bd:	cmp    ecx,eax
   139bf:	je     0x139a1
   139c1:	push   ecx
   139c2:	call   0x121fe
   139c7:	mov    ebx,eax
   139c9:	mov    esi,DWORD PTR [ebx+0x8]
   139cc:	cmp    ebx,edi
   139ce:	je     0x139a1
   139d0:	mov    eax,DWORD PTR [ebp-0x8]
   139d3:	mov    DWORD PTR [eax+0x4],ebx
   139d6:	mov    eax,DWORD PTR [edi]
   139d8:	mov    DWORD PTR [ebx],eax
   139da:	cmp    ebx,DWORD PTR [edi+0x8]
   139dd:	jne    0x139e4
   139df:	mov    DWORD PTR [esi+0x4],ebx
   139e2:	jmp    0x139fb
   139e4:	mov    eax,DWORD PTR [ebx+0x4]
   139e7:	mov    DWORD PTR [esi+0x4],eax
   139ea:	mov    eax,DWORD PTR [ebx+0x4]
   139ed:	mov    DWORD PTR [eax],esi
   139ef:	mov    eax,DWORD PTR [edi+0x8]
   139f2:	mov    DWORD PTR [ebx+0x8],eax
   139f5:	mov    eax,DWORD PTR [edi+0x8]
   139f8:	mov    DWORD PTR [eax+0x4],ebx
   139fb:	mov    eax,DWORD PTR [ebp-0x4]
   139fe:	mov    eax,DWORD PTR [eax+0x4]
   13a01:	cmp    DWORD PTR [eax+0x4],edi
   13a04:	jne    0x13a0b
   13a06:	mov    DWORD PTR [eax+0x4],ebx
   13a09:	jmp    0x13a19
   13a0b:	mov    eax,DWORD PTR [edi+0x4]
   13a0e:	cmp    DWORD PTR [eax],edi
   13a10:	jne    0x13a16
   13a12:	mov    DWORD PTR [eax],ebx
   13a14:	jmp    0x13a19
   13a16:	mov    DWORD PTR [eax+0x8],ebx
   13a19:	mov    eax,DWORD PTR [edi+0x4]
   13a1c:	mov    DWORD PTR [ebx+0x4],eax
   13a1f:	mov    eax,DWORD PTR [ebx+0x50]
   13a22:	mov    ecx,DWORD PTR [edi+0x50]
   13a25:	mov    DWORD PTR [ebx+0x50],ecx
   13a28:	mov    DWORD PTR [edi+0x50],eax
   13a2b:	mov    ebx,edi
   13a2d:	jmp    0x13a90
   13a2f:	mov    eax,DWORD PTR [edi+0x4]
   13a32:	cmp    DWORD PTR [eax],edi
   13a34:	jne    0x13a3a
   13a36:	mov    DWORD PTR [eax],esi
   13a38:	jmp    0x13a3d
   13a3a:	mov    DWORD PTR [eax+0x8],esi
   13a3d:	mov    eax,DWORD PTR [ecx+0x4]
   13a40:	mov    DWORD PTR [ebp-0x8],eax
   13a43:	cmp    DWORD PTR [eax],edi
   13a45:	jne    0x13a67
   13a47:	mov    edx,DWORD PTR [edi+0x8]
   13a4a:	cmp    edx,DWORD PTR ds:0x70fa8
   13a50:	jne    0x13a59
   13a52:	mov    edx,DWORD PTR [edi+0x4]
   13a55:	mov    DWORD PTR [eax],edx
   13a57:	jmp    0x13a67
   13a59:	push   esi
   13a5a:	call   0x121fe
   13a5f:	mov    ecx,DWORD PTR [ebp-0x8]
   13a62:	mov    DWORD PTR [ecx],eax
   13a64:	mov    ecx,DWORD PTR [ebp-0x4]
   13a67:	mov    eax,DWORD PTR [ecx+0x4]
   13a6a:	mov    DWORD PTR [ebp-0x8],eax
   13a6d:	cmp    DWORD PTR [eax+0x8],edi
   13a70:	jne    0x13a90
   13a72:	mov    ecx,DWORD PTR [edi]
   13a74:	cmp    ecx,DWORD PTR ds:0x70fa8
   13a7a:	jne    0x13a84
   13a7c:	mov    ecx,DWORD PTR [edi+0x4]
   13a7f:	mov    DWORD PTR [eax+0x8],ecx
   13a82:	jmp    0x13a90
   13a84:	push   esi
   13a85:	call   0x1123a
   13a8a:	mov    ecx,DWORD PTR [ebp-0x8]
   13a8d:	mov    DWORD PTR [ecx+0x8],eax
   13a90:	xor    edi,edi
   13a92:	inc    edi
   13a93:	cmp    DWORD PTR [ebx+0x50],edi
   13a96:	jne    0x13bad
   13a9c:	jmp    0x13b5b
   13aa1:	cmp    DWORD PTR [esi+0x50],edi
   13aa4:	jne    0x13baa
   13aaa:	mov    eax,DWORD PTR [esi+0x4]
   13aad:	cmp    esi,DWORD PTR [eax]
   13aaf:	jne    0x13b26
   13ab1:	mov    eax,DWORD PTR [eax+0x8]
   13ab4:	cmp    DWORD PTR [eax+0x50],0x0
   13ab8:	jne    0x13ad2
   13aba:	mov    DWORD PTR [eax+0x50],edi
   13abd:	mov    eax,DWORD PTR [esi+0x4]
   13ac0:	and    DWORD PTR [eax+0x50],0x0
   13ac4:	push   DWORD PTR [esi+0x4]
   13ac7:	call   0x111ec
   13acc:	mov    eax,DWORD PTR [esi+0x4]
   13acf:	mov    eax,DWORD PTR [eax+0x8]
   13ad2:	mov    ecx,DWORD PTR [eax]
   13ad4:	cmp    DWORD PTR [ecx+0x50],edi
   13ad7:	jne    0x13ae1
   13ad9:	mov    ecx,DWORD PTR [eax+0x8]
   13adc:	cmp    DWORD PTR [ecx+0x50],edi
   13adf:	je     0x13b54
   13ae1:	mov    ecx,DWORD PTR [eax+0x8]
   13ae4:	cmp    DWORD PTR [ecx+0x50],edi
   13ae7:	jne    0x13b01
   13ae9:	mov    ecx,DWORD PTR [eax]
   13aeb:	mov    DWORD PTR [ecx+0x50],edi
   13aee:	mov    ecx,DWORD PTR [ebp-0x4]
   13af1:	and    DWORD PTR [eax+0x50],0x0
   13af5:	push   eax
   13af6:	call   0x1125c
   13afb:	mov    eax,DWORD PTR [esi+0x4]
   13afe:	mov    eax,DWORD PTR [eax+0x8]
   13b01:	mov    ecx,DWORD PTR [esi+0x4]
   13b04:	mov    ecx,DWORD PTR [ecx+0x50]
   13b07:	mov    DWORD PTR [eax+0x50],ecx
   13b0a:	mov    ecx,DWORD PTR [esi+0x4]
   13b0d:	mov    DWORD PTR [ecx+0x50],edi
   13b10:	mov    eax,DWORD PTR [eax+0x8]
   13b13:	mov    ecx,DWORD PTR [ebp-0x4]
   13b16:	mov    DWORD PTR [eax+0x50],edi
   13b19:	push   DWORD PTR [esi+0x4]
   13b1c:	call   0x111ec
   13b21:	jmp    0x13baa
   13b26:	mov    eax,DWORD PTR [eax]
   13b28:	cmp    DWORD PTR [eax+0x50],0x0
   13b2c:	jne    0x13b45
   13b2e:	mov    DWORD PTR [eax+0x50],edi
   13b31:	mov    eax,DWORD PTR [esi+0x4]
   13b34:	and    DWORD PTR [eax+0x50],0x0
   13b38:	push   DWORD PTR [esi+0x4]
   13b3b:	call   0x1125c
   13b40:	mov    eax,DWORD PTR [esi+0x4]
   13b43:	mov    eax,DWORD PTR [eax]
   13b45:	mov    ecx,DWORD PTR [eax+0x8]
   13b48:	cmp    DWORD PTR [ecx+0x50],edi
   13b4b:	jne    0x13b6c
   13b4d:	mov    ecx,DWORD PTR [eax]
   13b4f:	cmp    DWORD PTR [ecx+0x50],edi
   13b52:	jne    0x13b6c
   13b54:	and    DWORD PTR [eax+0x50],0x0
   13b58:	mov    esi,DWORD PTR [esi+0x4]
   13b5b:	mov    ecx,DWORD PTR [ebp-0x4]
   13b5e:	mov    eax,DWORD PTR [ecx+0x4]
   13b61:	cmp    esi,DWORD PTR [eax+0x4]
   13b64:	jne    0x13aa1
   13b6a:	jmp    0x13baa
   13b6c:	mov    ecx,DWORD PTR [eax]
   13b6e:	cmp    DWORD PTR [ecx+0x50],edi
   13b71:	jne    0x13b8b
   13b73:	mov    ecx,DWORD PTR [eax+0x8]
   13b76:	mov    DWORD PTR [ecx+0x50],edi
   13b79:	mov    ecx,DWORD PTR [ebp-0x4]
   13b7c:	and    DWORD PTR [eax+0x50],0x0
   13b80:	push   eax
   13b81:	call   0x111ec
   13b86:	mov    eax,DWORD PTR [esi+0x4]
   13b89:	mov    eax,DWORD PTR [eax]
   13b8b:	mov    ecx,DWORD PTR [esi+0x4]
   13b8e:	mov    ecx,DWORD PTR [ecx+0x50]
   13b91:	mov    DWORD PTR [eax+0x50],ecx
   13b94:	mov    ecx,DWORD PTR [esi+0x4]
   13b97:	mov    DWORD PTR [ecx+0x50],edi
   13b9a:	mov    eax,DWORD PTR [eax]
   13b9c:	mov    ecx,DWORD PTR [ebp-0x4]
   13b9f:	mov    DWORD PTR [eax+0x50],edi
   13ba2:	push   DWORD PTR [esi+0x4]
   13ba5:	call   0x1125c
   13baa:	mov    DWORD PTR [esi+0x50],edi
   13bad:	lea    eax,[ebx+0x10]
   13bb0:	push   eax
   13bb1:	call   0x12720
   13bb6:	push   ebx
   13bb7:	call   0x10836
   13bbc:	mov    eax,DWORD PTR [ebp-0x4]
   13bbf:	dec    DWORD PTR [eax+0xc]
   13bc2:	mov    eax,DWORD PTR [ebp+0x8]
   13bc5:	pop    ecx
   13bc6:	mov    ecx,DWORD PTR [ebp+0xc]
   13bc9:	pop    edi
   13bca:	pop    esi
   13bcb:	mov    DWORD PTR [eax],ecx
   13bcd:	pop    ebx
   13bce:	leave  
   13bcf:	ret    0x8
   13bd2:	int3   
   13bd3:	int3   
   13bd4:	int3   
   13bd5:	int3   
   13bd6:	int3   
   13bd7:	int3   
   13bd8:	mov    edi,edi
   13bda:	push   ebp
   13bdb:	mov    ebp,esp
   13bdd:	push   ebx
   13bde:	push   esi
   13bdf:	mov    esi,DWORD PTR [ebp+0x10]
   13be2:	push   edi
   13be3:	push   0x0
   13be5:	push   esi
   13be6:	mov    edi,ecx
   13be8:	call   0x12a9a
   13bed:	push   DWORD PTR [ebp+0x14]
   13bf0:	mov    ebx,eax
   13bf2:	mov    eax,ds:0x70fa8
   13bf7:	mov    DWORD PTR [ebx],eax
   13bf9:	mov    eax,ds:0x70fa8
   13bfe:	mov    DWORD PTR [ebx+0x8],eax
   13c01:	lea    eax,[ebx+0x10]
   13c04:	push   eax
   13c05:	call   0x12bb4
   13c0a:	inc    DWORD PTR [edi+0xc]
   13c0d:	cmp    esi,DWORD PTR [edi+0x4]
   13c10:	je     0x13c3a
   13c12:	mov    eax,DWORD PTR [ebp+0xc]
   13c15:	cmp    eax,DWORD PTR ds:0x70fa8
   13c1b:	jne    0x13c3a
   13c1d:	lea    eax,[esi+0x10]
   13c20:	push   eax
   13c21:	push   DWORD PTR [ebp+0x14]
   13c24:	call   0x17b84
   13c29:	test   al,al
   13c2b:	jne    0x13c3a
   13c2d:	mov    DWORD PTR [esi+0x8],ebx
   13c30:	mov    eax,DWORD PTR [edi+0x4]
   13c33:	cmp    esi,DWORD PTR [eax+0x8]
   13c36:	jne    0x13c54
   13c38:	jmp    0x13c49
   13c3a:	mov    DWORD PTR [esi],ebx
   13c3c:	mov    eax,DWORD PTR [edi+0x4]
   13c3f:	cmp    esi,eax
   13c41:	jne    0x13c4e
   13c43:	mov    DWORD PTR [eax+0x4],ebx
   13c46:	mov    eax,DWORD PTR [edi+0x4]
   13c49:	mov    DWORD PTR [eax+0x8],ebx
   13c4c:	jmp    0x13c54
   13c4e:	cmp    esi,DWORD PTR [eax]
   13c50:	jne    0x13c54
   13c52:	mov    DWORD PTR [eax],ebx
   13c54:	mov    eax,DWORD PTR [edi+0x4]
   13c57:	mov    esi,ebx
   13c59:	cmp    ebx,DWORD PTR [eax+0x4]
   13c5c:	je     0x13d10
   13c62:	mov    eax,DWORD PTR [esi+0x4]
   13c65:	xor    edx,edx
   13c67:	cmp    DWORD PTR [eax+0x50],edx
   13c6a:	jne    0x13d10
   13c70:	mov    ecx,DWORD PTR [eax+0x4]
   13c73:	cmp    eax,DWORD PTR [ecx]
   13c75:	jne    0x13cb1
   13c77:	mov    ecx,DWORD PTR [ecx+0x8]
   13c7a:	cmp    DWORD PTR [ecx+0x50],edx
   13c7d:	je     0x13cb8
   13c7f:	cmp    esi,DWORD PTR [eax+0x8]
   13c82:	jne    0x13c8e
   13c84:	mov    esi,eax
   13c86:	push   esi
   13c87:	mov    ecx,edi
   13c89:	call   0x111ec
   13c8e:	mov    eax,DWORD PTR [esi+0x4]
   13c91:	mov    DWORD PTR [eax+0x50],0x1
   13c98:	mov    eax,DWORD PTR [esi+0x4]
   13c9b:	mov    eax,DWORD PTR [eax+0x4]
   13c9e:	and    DWORD PTR [eax+0x50],0x0
   13ca2:	mov    eax,DWORD PTR [esi+0x4]
   13ca5:	push   DWORD PTR [eax+0x4]
   13ca8:	mov    ecx,edi
   13caa:	call   0x1125c
   13caf:	jmp    0x13d04
   13cb1:	mov    ecx,DWORD PTR [ecx]
   13cb3:	cmp    DWORD PTR [ecx+0x50],edx
   13cb6:	jne    0x13cd5
   13cb8:	mov    edx,eax
   13cba:	xor    eax,eax
   13cbc:	inc    eax
   13cbd:	mov    DWORD PTR [edx+0x50],eax
   13cc0:	mov    DWORD PTR [ecx+0x50],eax
   13cc3:	mov    eax,DWORD PTR [esi+0x4]
   13cc6:	mov    eax,DWORD PTR [eax+0x4]
   13cc9:	and    DWORD PTR [eax+0x50],0x0
   13ccd:	mov    eax,DWORD PTR [esi+0x4]
   13cd0:	mov    esi,DWORD PTR [eax+0x4]
   13cd3:	jmp    0x13d04
   13cd5:	cmp    esi,DWORD PTR [eax]
   13cd7:	jne    0x13ce3
   13cd9:	mov    esi,eax
   13cdb:	push   esi
   13cdc:	mov    ecx,edi
   13cde:	call   0x1125c
   13ce3:	mov    eax,DWORD PTR [esi+0x4]
   13ce6:	mov    DWORD PTR [eax+0x50],0x1
   13ced:	mov    eax,DWORD PTR [esi+0x4]
   13cf0:	mov    eax,DWORD PTR [eax+0x4]
   13cf3:	and    DWORD PTR [eax+0x50],0x0
   13cf7:	mov    eax,DWORD PTR [esi+0x4]
   13cfa:	push   DWORD PTR [eax+0x4]
   13cfd:	mov    ecx,edi
   13cff:	call   0x111ec
   13d04:	mov    eax,DWORD PTR [edi+0x4]
   13d07:	cmp    esi,DWORD PTR [eax+0x4]
   13d0a:	jne    0x13c62
   13d10:	mov    eax,DWORD PTR [edi+0x4]
   13d13:	mov    eax,DWORD PTR [eax+0x4]
   13d16:	pop    edi
   13d17:	mov    DWORD PTR [eax+0x50],0x1
   13d1e:	mov    eax,DWORD PTR [ebp+0x8]
   13d21:	pop    esi
   13d22:	mov    DWORD PTR [eax],ebx
   13d24:	pop    ebx
   13d25:	pop    ebp
   13d26:	ret    0x10
   13d29:	int3   
   13d2a:	int3   
   13d2b:	int3   
   13d2c:	int3   
   13d2d:	int3   
   13d2e:	mov    edi,edi
   13d30:	push   ebp
   13d31:	mov    ebp,esp
   13d33:	push   ebx
   13d34:	push   esi
   13d35:	mov    esi,DWORD PTR [ebp+0x10]
   13d38:	push   edi
   13d39:	push   0x0
   13d3b:	push   esi
   13d3c:	mov    edi,ecx
   13d3e:	call   0x12b2a
   13d43:	push   DWORD PTR [ebp+0x14]
   13d46:	mov    ebx,eax
   13d48:	mov    eax,ds:0x70fac
   13d4d:	mov    DWORD PTR [ebx],eax
   13d4f:	mov    eax,ds:0x70fac
   13d54:	mov    DWORD PTR [ebx+0x8],eax
   13d57:	lea    eax,[ebx+0xc]
   13d5a:	push   eax
   13d5b:	call   0x12bd2
   13d60:	inc    DWORD PTR [edi+0xc]
   13d63:	cmp    esi,DWORD PTR [edi+0x4]
   13d66:	je     0x13d90
   13d68:	mov    eax,DWORD PTR [ebp+0xc]
   13d6b:	cmp    eax,DWORD PTR ds:0x70fac
   13d71:	jne    0x13d90
   13d73:	lea    eax,[esi+0xc]
   13d76:	push   eax
   13d77:	push   DWORD PTR [ebp+0x14]
   13d7a:	call   0x17b84
   13d7f:	test   al,al
   13d81:	jne    0x13d90
   13d83:	mov    DWORD PTR [esi+0x8],ebx
   13d86:	mov    eax,DWORD PTR [edi+0x4]
   13d89:	cmp    esi,DWORD PTR [eax+0x8]
   13d8c:	jne    0x13daa
   13d8e:	jmp    0x13d9f
   13d90:	mov    DWORD PTR [esi],ebx
   13d92:	mov    eax,DWORD PTR [edi+0x4]
   13d95:	cmp    esi,eax
   13d97:	jne    0x13da4
   13d99:	mov    DWORD PTR [eax+0x4],ebx
   13d9c:	mov    eax,DWORD PTR [edi+0x4]
   13d9f:	mov    DWORD PTR [eax+0x8],ebx
   13da2:	jmp    0x13daa
   13da4:	cmp    esi,DWORD PTR [eax]
   13da6:	jne    0x13daa
   13da8:	mov    DWORD PTR [eax],ebx
   13daa:	mov    eax,DWORD PTR [edi+0x4]
   13dad:	mov    esi,ebx
   13daf:	cmp    ebx,DWORD PTR [eax+0x4]
   13db2:	je     0x13e66
   13db8:	mov    eax,DWORD PTR [esi+0x4]
   13dbb:	xor    edx,edx
   13dbd:	cmp    DWORD PTR [eax+0x1c],edx
   13dc0:	jne    0x13e66
   13dc6:	mov    ecx,DWORD PTR [eax+0x4]
   13dc9:	cmp    eax,DWORD PTR [ecx]
   13dcb:	jne    0x13e07
   13dcd:	mov    ecx,DWORD PTR [ecx+0x8]
   13dd0:	cmp    DWORD PTR [ecx+0x1c],edx
   13dd3:	je     0x13e0e
   13dd5:	cmp    esi,DWORD PTR [eax+0x8]
   13dd8:	jne    0x13de4
   13dda:	mov    esi,eax
   13ddc:	push   esi
   13ddd:	mov    ecx,edi
   13ddf:	call   0x1244e
   13de4:	mov    eax,DWORD PTR [esi+0x4]
   13de7:	mov    DWORD PTR [eax+0x1c],0x1
   13dee:	mov    eax,DWORD PTR [esi+0x4]
   13df1:	mov    eax,DWORD PTR [eax+0x4]
   13df4:	and    DWORD PTR [eax+0x1c],0x0
   13df8:	mov    eax,DWORD PTR [esi+0x4]
   13dfb:	push   DWORD PTR [eax+0x4]
   13dfe:	mov    ecx,edi
   13e00:	call   0x1249c
   13e05:	jmp    0x13e5a
   13e07:	mov    ecx,DWORD PTR [ecx]
   13e09:	cmp    DWORD PTR [ecx+0x1c],edx
   13e0c:	jne    0x13e2b
   13e0e:	mov    edx,eax
   13e10:	xor    eax,eax
   13e12:	inc    eax
   13e13:	mov    DWORD PTR [edx+0x1c],eax
   13e16:	mov    DWORD PTR [ecx+0x1c],eax
   13e19:	mov    eax,DWORD PTR [esi+0x4]
   13e1c:	mov    eax,DWORD PTR [eax+0x4]
   13e1f:	and    DWORD PTR [eax+0x1c],0x0
   13e23:	mov    eax,DWORD PTR [esi+0x4]
   13e26:	mov    esi,DWORD PTR [eax+0x4]
   13e29:	jmp    0x13e5a
   13e2b:	cmp    esi,DWORD PTR [eax]
   13e2d:	jne    0x13e39
   13e2f:	mov    esi,eax
   13e31:	push   esi
   13e32:	mov    ecx,edi
   13e34:	call   0x1249c
   13e39:	mov    eax,DWORD PTR [esi+0x4]
   13e3c:	mov    DWORD PTR [eax+0x1c],0x1
   13e43:	mov    eax,DWORD PTR [esi+0x4]
   13e46:	mov    eax,DWORD PTR [eax+0x4]
   13e49:	and    DWORD PTR [eax+0x1c],0x0
   13e4d:	mov    eax,DWORD PTR [esi+0x4]
   13e50:	push   DWORD PTR [eax+0x4]
   13e53:	mov    ecx,edi
   13e55:	call   0x1244e
   13e5a:	mov    eax,DWORD PTR [edi+0x4]
   13e5d:	cmp    esi,DWORD PTR [eax+0x4]
   13e60:	jne    0x13db8
   13e66:	mov    eax,DWORD PTR [edi+0x4]
   13e69:	mov    eax,DWORD PTR [eax+0x4]
   13e6c:	pop    edi
   13e6d:	mov    DWORD PTR [eax+0x1c],0x1
   13e74:	mov    eax,DWORD PTR [ebp+0x8]
   13e77:	pop    esi
   13e78:	mov    DWORD PTR [eax],ebx
   13e7a:	pop    ebx
   13e7b:	pop    ebp
   13e7c:	ret    0x10
   13e7f:	int3   
   13e80:	int3   
   13e81:	int3   
   13e82:	int3   
   13e83:	int3   
   13e84:	mov    edi,edi
   13e86:	push   ebp
   13e87:	mov    ebp,esp
   13e89:	push   ecx
   13e8a:	push   ecx
   13e8b:	push   ebx
   13e8c:	push   esi
   13e8d:	mov    DWORD PTR [ebp-0x4],ecx
   13e90:	push   edi
   13e91:	mov    edi,DWORD PTR [ebp+0xc]
   13e94:	lea    ecx,[ebp+0xc]
   13e97:	call   0x1142a
   13e9c:	mov    esi,DWORD PTR [edi]
   13e9e:	mov    eax,ds:0x70fb0
   13ea3:	mov    ebx,edi
   13ea5:	mov    DWORD PTR [ebp-0x8],esi
   13ea8:	cmp    esi,eax
   13eaa:	jne    0x13ec8
   13eac:	mov    esi,DWORD PTR [edi+0x8]
   13eaf:	mov    eax,DWORD PTR [ebx+0x4]
   13eb2:	mov    ecx,DWORD PTR [ebp-0x4]
   13eb5:	mov    DWORD PTR [esi+0x4],eax
   13eb8:	mov    eax,DWORD PTR [ecx+0x4]
   13ebb:	cmp    DWORD PTR [eax+0x4],edi
   13ebe:	jne    0x13f3d
   13ec0:	mov    DWORD PTR [eax+0x4],esi
   13ec3:	jmp    0x13f4b
   13ec8:	mov    ecx,DWORD PTR [edi+0x8]
   13ecb:	cmp    ecx,eax
   13ecd:	je     0x13eaf
   13ecf:	push   ecx
   13ed0:	call   0x11392
   13ed5:	mov    ebx,eax
   13ed7:	mov    esi,DWORD PTR [ebx+0x8]
   13eda:	cmp    ebx,edi
   13edc:	je     0x13eaf
   13ede:	mov    eax,DWORD PTR [ebp-0x8]
   13ee1:	mov    DWORD PTR [eax+0x4],ebx
   13ee4:	mov    eax,DWORD PTR [edi]
   13ee6:	mov    DWORD PTR [ebx],eax
   13ee8:	cmp    ebx,DWORD PTR [edi+0x8]
   13eeb:	jne    0x13ef2
   13eed:	mov    DWORD PTR [esi+0x4],ebx
   13ef0:	jmp    0x13f09
   13ef2:	mov    eax,DWORD PTR [ebx+0x4]
   13ef5:	mov    DWORD PTR [esi+0x4],eax
   13ef8:	mov    eax,DWORD PTR [ebx+0x4]
   13efb:	mov    DWORD PTR [eax],esi
   13efd:	mov    eax,DWORD PTR [edi+0x8]
   13f00:	mov    DWORD PTR [ebx+0x8],eax
   13f03:	mov    eax,DWORD PTR [edi+0x8]
   13f06:	mov    DWORD PTR [eax+0x4],ebx
   13f09:	mov    eax,DWORD PTR [ebp-0x4]
   13f0c:	mov    eax,DWORD PTR [eax+0x4]
   13f0f:	cmp    DWORD PTR [eax+0x4],edi
   13f12:	jne    0x13f19
   13f14:	mov    DWORD PTR [eax+0x4],ebx
   13f17:	jmp    0x13f27
   13f19:	mov    eax,DWORD PTR [edi+0x4]
   13f1c:	cmp    DWORD PTR [eax],edi
   13f1e:	jne    0x13f24
   13f20:	mov    DWORD PTR [eax],ebx
   13f22:	jmp    0x13f27
   13f24:	mov    DWORD PTR [eax+0x8],ebx
   13f27:	mov    eax,DWORD PTR [edi+0x4]
   13f2a:	mov    DWORD PTR [ebx+0x4],eax
   13f2d:	mov    eax,DWORD PTR [ebx+0x14]
   13f30:	mov    ecx,DWORD PTR [edi+0x14]
   13f33:	mov    DWORD PTR [ebx+0x14],ecx
   13f36:	mov    DWORD PTR [edi+0x14],eax
   13f39:	mov    ebx,edi
   13f3b:	jmp    0x13f9e
   13f3d:	mov    eax,DWORD PTR [edi+0x4]
   13f40:	cmp    DWORD PTR [eax],edi
   13f42:	jne    0x13f48
   13f44:	mov    DWORD PTR [eax],esi
   13f46:	jmp    0x13f4b
   13f48:	mov    DWORD PTR [eax+0x8],esi
   13f4b:	mov    eax,DWORD PTR [ecx+0x4]
   13f4e:	mov    DWORD PTR [ebp-0x8],eax
   13f51:	cmp    DWORD PTR [eax],edi
   13f53:	jne    0x13f75
   13f55:	mov    edx,DWORD PTR [edi+0x8]
   13f58:	cmp    edx,DWORD PTR ds:0x70fb0
   13f5e:	jne    0x13f67
   13f60:	mov    edx,DWORD PTR [edi+0x4]
   13f63:	mov    DWORD PTR [eax],edx
   13f65:	jmp    0x13f75
   13f67:	push   esi
   13f68:	call   0x11392
   13f6d:	mov    ecx,DWORD PTR [ebp-0x8]
   13f70:	mov    DWORD PTR [ecx],eax
   13f72:	mov    ecx,DWORD PTR [ebp-0x4]
   13f75:	mov    eax,DWORD PTR [ecx+0x4]
   13f78:	mov    DWORD PTR [ebp-0x8],eax
   13f7b:	cmp    DWORD PTR [eax+0x8],edi
   13f7e:	jne    0x13f9e
   13f80:	mov    ecx,DWORD PTR [edi]
   13f82:	cmp    ecx,DWORD PTR ds:0x70fb0
   13f88:	jne    0x13f92
   13f8a:	mov    ecx,DWORD PTR [edi+0x4]
   13f8d:	mov    DWORD PTR [eax+0x8],ecx
   13f90:	jmp    0x13f9e
   13f92:	push   esi
   13f93:	call   0x11370
   13f98:	mov    ecx,DWORD PTR [ebp-0x8]
   13f9b:	mov    DWORD PTR [ecx+0x8],eax
   13f9e:	xor    edi,edi
   13fa0:	inc    edi
   13fa1:	cmp    DWORD PTR [ebx+0x14],edi
   13fa4:	jne    0x140bb
   13faa:	jmp    0x14069
   13faf:	cmp    DWORD PTR [esi+0x14],edi
   13fb2:	jne    0x140b8
   13fb8:	mov    eax,DWORD PTR [esi+0x4]
   13fbb:	cmp    esi,DWORD PTR [eax]
   13fbd:	jne    0x14034
   13fbf:	mov    eax,DWORD PTR [eax+0x8]
   13fc2:	cmp    DWORD PTR [eax+0x14],0x0
   13fc6:	jne    0x13fe0
   13fc8:	mov    DWORD PTR [eax+0x14],edi
   13fcb:	mov    eax,DWORD PTR [esi+0x4]
   13fce:	and    DWORD PTR [eax+0x14],0x0
   13fd2:	push   DWORD PTR [esi+0x4]
   13fd5:	call   0x1252c
   13fda:	mov    eax,DWORD PTR [esi+0x4]
   13fdd:	mov    eax,DWORD PTR [eax+0x8]
   13fe0:	mov    ecx,DWORD PTR [eax]
   13fe2:	cmp    DWORD PTR [ecx+0x14],edi
   13fe5:	jne    0x13fef
   13fe7:	mov    ecx,DWORD PTR [eax+0x8]
   13fea:	cmp    DWORD PTR [ecx+0x14],edi
   13fed:	je     0x14062
   13fef:	mov    ecx,DWORD PTR [eax+0x8]
   13ff2:	cmp    DWORD PTR [ecx+0x14],edi
   13ff5:	jne    0x1400f
   13ff7:	mov    ecx,DWORD PTR [eax]
   13ff9:	mov    DWORD PTR [ecx+0x14],edi
   13ffc:	mov    ecx,DWORD PTR [ebp-0x4]
   13fff:	and    DWORD PTR [eax+0x14],0x0
   14003:	push   eax
   14004:	call   0x1257a
   14009:	mov    eax,DWORD PTR [esi+0x4]
   1400c:	mov    eax,DWORD PTR [eax+0x8]
   1400f:	mov    ecx,DWORD PTR [esi+0x4]
   14012:	mov    ecx,DWORD PTR [ecx+0x14]
   14015:	mov    DWORD PTR [eax+0x14],ecx
   14018:	mov    ecx,DWORD PTR [esi+0x4]
   1401b:	mov    DWORD PTR [ecx+0x14],edi
   1401e:	mov    eax,DWORD PTR [eax+0x8]
   14021:	mov    ecx,DWORD PTR [ebp-0x4]
   14024:	mov    DWORD PTR [eax+0x14],edi
   14027:	push   DWORD PTR [esi+0x4]
   1402a:	call   0x1252c
   1402f:	jmp    0x140b8
   14034:	mov    eax,DWORD PTR [eax]
   14036:	cmp    DWORD PTR [eax+0x14],0x0
   1403a:	jne    0x14053
   1403c:	mov    DWORD PTR [eax+0x14],edi
   1403f:	mov    eax,DWORD PTR [esi+0x4]
   14042:	and    DWORD PTR [eax+0x14],0x0
   14046:	push   DWORD PTR [esi+0x4]
   14049:	call   0x1257a
   1404e:	mov    eax,DWORD PTR [esi+0x4]
   14051:	mov    eax,DWORD PTR [eax]
   14053:	mov    ecx,DWORD PTR [eax+0x8]
   14056:	cmp    DWORD PTR [ecx+0x14],edi
   14059:	jne    0x1407a
   1405b:	mov    ecx,DWORD PTR [eax]
   1405d:	cmp    DWORD PTR [ecx+0x14],edi
   14060:	jne    0x1407a
   14062:	and    DWORD PTR [eax+0x14],0x0
   14066:	mov    esi,DWORD PTR [esi+0x4]
   14069:	mov    ecx,DWORD PTR [ebp-0x4]
   1406c:	mov    eax,DWORD PTR [ecx+0x4]
   1406f:	cmp    esi,DWORD PTR [eax+0x4]
   14072:	jne    0x13faf
   14078:	jmp    0x140b8
   1407a:	mov    ecx,DWORD PTR [eax]
   1407c:	cmp    DWORD PTR [ecx+0x14],edi
   1407f:	jne    0x14099
   14081:	mov    ecx,DWORD PTR [eax+0x8]
   14084:	mov    DWORD PTR [ecx+0x14],edi
   14087:	mov    ecx,DWORD PTR [ebp-0x4]
   1408a:	and    DWORD PTR [eax+0x14],0x0
   1408e:	push   eax
   1408f:	call   0x1252c
   14094:	mov    eax,DWORD PTR [esi+0x4]
   14097:	mov    eax,DWORD PTR [eax]
   14099:	mov    ecx,DWORD PTR [esi+0x4]
   1409c:	mov    ecx,DWORD PTR [ecx+0x14]
   1409f:	mov    DWORD PTR [eax+0x14],ecx
   140a2:	mov    ecx,DWORD PTR [esi+0x4]
   140a5:	mov    DWORD PTR [ecx+0x14],edi
   140a8:	mov    eax,DWORD PTR [eax]
   140aa:	mov    ecx,DWORD PTR [ebp-0x4]
   140ad:	mov    DWORD PTR [eax+0x14],edi
   140b0:	push   DWORD PTR [esi+0x4]
   140b3:	call   0x1257a
   140b8:	mov    DWORD PTR [esi+0x14],edi
   140bb:	lea    eax,[ebx+0xc]
   140be:	push   eax
   140bf:	call   0x12c0e
   140c4:	push   ebx
   140c5:	call   0x10836
   140ca:	mov    eax,DWORD PTR [ebp-0x4]
   140cd:	dec    DWORD PTR [eax+0xc]
   140d0:	mov    eax,DWORD PTR [ebp+0x8]
   140d3:	pop    ecx
   140d4:	mov    ecx,DWORD PTR [ebp+0xc]
   140d7:	pop    edi
   140d8:	pop    esi
   140d9:	mov    DWORD PTR [eax],ecx
   140db:	pop    ebx
   140dc:	leave  
   140dd:	ret    0x8
   140e0:	int3   
   140e1:	int3   
   140e2:	int3   
   140e3:	int3   
   140e4:	int3   
   140e5:	int3   
   140e6:	mov    edi,edi
   140e8:	push   ebp
   140e9:	mov    ebp,esp
   140eb:	push   ebx
   140ec:	push   esi
   140ed:	push   edi
   140ee:	mov    edi,DWORD PTR [ebp+0x8]
   140f1:	mov    ebx,ecx
   140f3:	mov    esi,edi
   140f5:	cmp    edi,DWORD PTR ds:0x70fb0
   140fb:	je     0x14123
   140fd:	push   DWORD PTR [esi+0x8]
   14100:	mov    ecx,ebx
   14102:	call   0x140e6
   14107:	mov    esi,DWORD PTR [esi]
   14109:	lea    eax,[edi+0xc]
   1410c:	push   eax
   1410d:	call   0x12c0e
   14112:	push   edi
   14113:	call   0x10836
   14118:	pop    ecx
   14119:	mov    edi,esi
   1411b:	cmp    esi,DWORD PTR ds:0x70fb0
   14121:	jne    0x140fd
   14123:	pop    edi
   14124:	pop    esi
   14125:	pop    ebx
   14126:	pop    ebp
   14127:	ret    0x4
   1412a:	int3   
   1412b:	int3   
   1412c:	int3   
   1412d:	int3   
   1412e:	int3   
   1412f:	int3   
   14130:	mov    edi,edi
   14132:	push   ebp
   14133:	mov    ebp,esp
   14135:	push   ebx
   14136:	push   esi
   14137:	mov    esi,DWORD PTR [ebp+0x10]
   1413a:	push   edi
   1413b:	push   0x0
   1413d:	push   esi
   1413e:	mov    edi,ecx
   14140:	call   0x12abe
   14145:	push   DWORD PTR [ebp+0x14]
   14148:	mov    ebx,eax
   1414a:	mov    eax,ds:0x70fb0
   1414f:	mov    DWORD PTR [ebx],eax
   14151:	mov    eax,ds:0x70fb0
   14156:	mov    DWORD PTR [ebx+0x8],eax
   14159:	lea    eax,[ebx+0xc]
   1415c:	push   eax
   1415d:	call   0x12bf0
   14162:	inc    DWORD PTR [edi+0xc]
   14165:	cmp    esi,DWORD PTR [edi+0x4]
   14168:	je     0x1418c
   1416a:	mov    eax,DWORD PTR [ebp+0xc]
   1416d:	cmp    eax,DWORD PTR ds:0x70fb0
   14173:	jne    0x1418c
   14175:	mov    eax,DWORD PTR [ebp+0x14]
   14178:	mov    eax,DWORD PTR [eax]
   1417a:	cmp    eax,DWORD PTR [esi+0xc]
   1417d:	jl     0x1418c
   1417f:	mov    DWORD PTR [esi+0x8],ebx
   14182:	mov    eax,DWORD PTR [edi+0x4]
   14185:	cmp    esi,DWORD PTR [eax+0x8]
   14188:	jne    0x141a6
   1418a:	jmp    0x1419b
   1418c:	mov    DWORD PTR [esi],ebx
   1418e:	mov    eax,DWORD PTR [edi+0x4]
   14191:	cmp    esi,eax
   14193:	jne    0x141a0
   14195:	mov    DWORD PTR [eax+0x4],ebx
   14198:	mov    eax,DWORD PTR [edi+0x4]
   1419b:	mov    DWORD PTR [eax+0x8],ebx
   1419e:	jmp    0x141a6
   141a0:	cmp    esi,DWORD PTR [eax]
   141a2:	jne    0x141a6
   141a4:	mov    DWORD PTR [eax],ebx
   141a6:	mov    eax,DWORD PTR [edi+0x4]
   141a9:	mov    esi,ebx
   141ab:	cmp    ebx,DWORD PTR [eax+0x4]
   141ae:	je     0x14262
   141b4:	mov    eax,DWORD PTR [esi+0x4]
   141b7:	xor    edx,edx
   141b9:	cmp    DWORD PTR [eax+0x14],edx
   141bc:	jne    0x14262
   141c2:	mov    ecx,DWORD PTR [eax+0x4]
   141c5:	cmp    eax,DWORD PTR [ecx]
   141c7:	jne    0x14203
   141c9:	mov    ecx,DWORD PTR [ecx+0x8]
   141cc:	cmp    DWORD PTR [ecx+0x14],edx
   141cf:	je     0x1420a
   141d1:	cmp    esi,DWORD PTR [eax+0x8]
   141d4:	jne    0x141e0
   141d6:	mov    esi,eax
   141d8:	push   esi
   141d9:	mov    ecx,edi
   141db:	call   0x1252c
   141e0:	mov    eax,DWORD PTR [esi+0x4]
   141e3:	mov    DWORD PTR [eax+0x14],0x1
   141ea:	mov    eax,DWORD PTR [esi+0x4]
   141ed:	mov    eax,DWORD PTR [eax+0x4]
   141f0:	and    DWORD PTR [eax+0x14],0x0
   141f4:	mov    eax,DWORD PTR [esi+0x4]
   141f7:	push   DWORD PTR [eax+0x4]
   141fa:	mov    ecx,edi
   141fc:	call   0x1257a
   14201:	jmp    0x14256
   14203:	mov    ecx,DWORD PTR [ecx]
   14205:	cmp    DWORD PTR [ecx+0x14],edx
   14208:	jne    0x14227
   1420a:	mov    edx,eax
   1420c:	xor    eax,eax
   1420e:	inc    eax
   1420f:	mov    DWORD PTR [edx+0x14],eax
   14212:	mov    DWORD PTR [ecx+0x14],eax
   14215:	mov    eax,DWORD PTR [esi+0x4]
   14218:	mov    eax,DWORD PTR [eax+0x4]
   1421b:	and    DWORD PTR [eax+0x14],0x0
   1421f:	mov    eax,DWORD PTR [esi+0x4]
   14222:	mov    esi,DWORD PTR [eax+0x4]
   14225:	jmp    0x14256
   14227:	cmp    esi,DWORD PTR [eax]
   14229:	jne    0x14235
   1422b:	mov    esi,eax
   1422d:	push   esi
   1422e:	mov    ecx,edi
   14230:	call   0x1257a
   14235:	mov    eax,DWORD PTR [esi+0x4]
   14238:	mov    DWORD PTR [eax+0x14],0x1
   1423f:	mov    eax,DWORD PTR [esi+0x4]
   14242:	mov    eax,DWORD PTR [eax+0x4]
   14245:	and    DWORD PTR [eax+0x14],0x0
   14249:	mov    eax,DWORD PTR [esi+0x4]
   1424c:	push   DWORD PTR [eax+0x4]
   1424f:	mov    ecx,edi
   14251:	call   0x1252c
   14256:	mov    eax,DWORD PTR [edi+0x4]
   14259:	cmp    esi,DWORD PTR [eax+0x4]
   1425c:	jne    0x141b4
   14262:	mov    eax,DWORD PTR [edi+0x4]
   14265:	mov    eax,DWORD PTR [eax+0x4]
   14268:	pop    edi
   14269:	mov    DWORD PTR [eax+0x14],0x1
   14270:	mov    eax,DWORD PTR [ebp+0x8]
   14273:	pop    esi
   14274:	mov    DWORD PTR [eax],ebx
   14276:	pop    ebx
   14277:	pop    ebp
   14278:	ret    0x10
   1427b:	int3   
   1427c:	int3   
   1427d:	int3   
   1427e:	int3   
   1427f:	int3   
   14280:	mov    edi,edi
   14282:	push   ebp
   14283:	mov    ebp,esp
   14285:	push   ebx
   14286:	push   esi
   14287:	mov    esi,DWORD PTR [ebp+0x10]
   1428a:	push   edi
   1428b:	push   0x0
   1428d:	push   esi
   1428e:	mov    edi,ecx
   14290:	call   0x12b2a
   14295:	push   DWORD PTR [ebp+0x14]
   14298:	mov    ebx,eax
   1429a:	mov    eax,ds:0x70fb8
   1429f:	mov    DWORD PTR [ebx],eax
   142a1:	mov    eax,ds:0x70fb8
   142a6:	mov    DWORD PTR [ebx+0x8],eax
   142a9:	lea    eax,[ebx+0xc]
   142ac:	push   eax
   142ad:	call   0x12c26
   142b2:	inc    DWORD PTR [edi+0xc]
   142b5:	cmp    esi,DWORD PTR [edi+0x4]
   142b8:	je     0x142e2
   142ba:	mov    eax,DWORD PTR [ebp+0xc]
   142bd:	cmp    eax,DWORD PTR ds:0x70fb8
   142c3:	jne    0x142e2
   142c5:	lea    eax,[esi+0xc]
   142c8:	push   eax
   142c9:	push   DWORD PTR [ebp+0x14]
   142cc:	call   0x17bb4
   142d1:	test   al,al
   142d3:	jne    0x142e2
   142d5:	mov    DWORD PTR [esi+0x8],ebx
   142d8:	mov    eax,DWORD PTR [edi+0x4]
   142db:	cmp    esi,DWORD PTR [eax+0x8]
   142de:	jne    0x142fc
   142e0:	jmp    0x142f1
   142e2:	mov    DWORD PTR [esi],ebx
   142e4:	mov    eax,DWORD PTR [edi+0x4]
   142e7:	cmp    esi,eax
   142e9:	jne    0x142f6
   142eb:	mov    DWORD PTR [eax+0x4],ebx
   142ee:	mov    eax,DWORD PTR [edi+0x4]
   142f1:	mov    DWORD PTR [eax+0x8],ebx
   142f4:	jmp    0x142fc
   142f6:	cmp    esi,DWORD PTR [eax]
   142f8:	jne    0x142fc
   142fa:	mov    DWORD PTR [eax],ebx
   142fc:	mov    eax,DWORD PTR [edi+0x4]
   142ff:	mov    esi,ebx
   14301:	cmp    ebx,DWORD PTR [eax+0x4]
   14304:	je     0x143b8
   1430a:	mov    eax,DWORD PTR [esi+0x4]
   1430d:	xor    edx,edx
   1430f:	cmp    DWORD PTR [eax+0x1c],edx
   14312:	jne    0x143b8
   14318:	mov    ecx,DWORD PTR [eax+0x4]
   1431b:	cmp    eax,DWORD PTR [ecx]
   1431d:	jne    0x14359
   1431f:	mov    ecx,DWORD PTR [ecx+0x8]
   14322:	cmp    DWORD PTR [ecx+0x1c],edx
   14325:	je     0x14360
   14327:	cmp    esi,DWORD PTR [eax+0x8]
   1432a:	jne    0x14336
   1432c:	mov    esi,eax
   1432e:	push   esi
   1432f:	mov    ecx,edi
   14331:	call   0x12642
   14336:	mov    eax,DWORD PTR [esi+0x4]
   14339:	mov    DWORD PTR [eax+0x1c],0x1
   14340:	mov    eax,DWORD PTR [esi+0x4]
   14343:	mov    eax,DWORD PTR [eax+0x4]
   14346:	and    DWORD PTR [eax+0x1c],0x0
   1434a:	mov    eax,DWORD PTR [esi+0x4]
   1434d:	push   DWORD PTR [eax+0x4]
   14350:	mov    ecx,edi
   14352:	call   0x12690
   14357:	jmp    0x143ac
   14359:	mov    ecx,DWORD PTR [ecx]
   1435b:	cmp    DWORD PTR [ecx+0x1c],edx
   1435e:	jne    0x1437d
   14360:	mov    edx,eax
   14362:	xor    eax,eax
   14364:	inc    eax
   14365:	mov    DWORD PTR [edx+0x1c],eax
   14368:	mov    DWORD PTR [ecx+0x1c],eax
   1436b:	mov    eax,DWORD PTR [esi+0x4]
   1436e:	mov    eax,DWORD PTR [eax+0x4]
   14371:	and    DWORD PTR [eax+0x1c],0x0
   14375:	mov    eax,DWORD PTR [esi+0x4]
   14378:	mov    esi,DWORD PTR [eax+0x4]
   1437b:	jmp    0x143ac
   1437d:	cmp    esi,DWORD PTR [eax]
   1437f:	jne    0x1438b
   14381:	mov    esi,eax
   14383:	push   esi
   14384:	mov    ecx,edi
   14386:	call   0x12690
   1438b:	mov    eax,DWORD PTR [esi+0x4]
   1438e:	mov    DWORD PTR [eax+0x1c],0x1
   14395:	mov    eax,DWORD PTR [esi+0x4]
   14398:	mov    eax,DWORD PTR [eax+0x4]
   1439b:	and    DWORD PTR [eax+0x1c],0x0
   1439f:	mov    eax,DWORD PTR [esi+0x4]
   143a2:	push   DWORD PTR [eax+0x4]
   143a5:	mov    ecx,edi
   143a7:	call   0x12642
   143ac:	mov    eax,DWORD PTR [edi+0x4]
   143af:	cmp    esi,DWORD PTR [eax+0x4]
   143b2:	jne    0x1430a
   143b8:	mov    eax,DWORD PTR [edi+0x4]
   143bb:	mov    eax,DWORD PTR [eax+0x4]
   143be:	pop    edi
   143bf:	mov    DWORD PTR [eax+0x1c],0x1
   143c6:	mov    eax,DWORD PTR [ebp+0x8]
   143c9:	pop    esi
   143ca:	mov    DWORD PTR [eax],ebx
   143cc:	pop    ebx
   143cd:	pop    ebp
   143ce:	ret    0x10
   143d1:	int3   
   143d2:	int3   
   143d3:	int3   
   143d4:	int3   
   143d5:	int3   
   143d6:	mov    edi,edi
   143d8:	push   ebp
   143d9:	mov    ebp,esp
   143db:	push   ecx
   143dc:	push   DWORD PTR [ebp-0x4]
   143df:	push   DWORD PTR [ebp+0x10]
   143e2:	push   DWORD PTR [ebp+0xc]
   143e5:	push   DWORD PTR [ebp+0x8]
   143e8:	call   0x13752
   143ed:	add    esp,0x10
   143f0:	leave  
   143f1:	ret    
   143f2:	int3   
   143f3:	int3   
   143f4:	int3   
   143f5:	int3   
   143f6:	int3   
   143f7:	int3   
   143f8:	mov    edi,edi
   143fa:	push   ebp
   143fb:	mov    ebp,esp
   143fd:	push   ecx
   143fe:	push   ebx
   143ff:	push   esi
   14400:	push   edi
   14401:	xor    edi,edi
   14403:	push   edi
   14404:	push   edi
   14405:	push   edi
   14406:	mov    esi,ecx
   14408:	mov    eax,DWORD PTR [esi+0x10]
   1440b:	push   edi
   1440c:	push   eax
   1440d:	xor    ebx,ebx
   1440f:	call   DWORD PTR ds:0x1ba28
   14415:	test   eax,eax
   14417:	jge    0x1441d
   14419:	xor    eax,eax
   1441b:	jmp    0x14443
   1441d:	lea    eax,[ebp+0x8]
   14420:	push   eax
   14421:	lea    eax,[ebp-0x4]
   14424:	push   eax
   14425:	mov    ecx,esi
   14427:	call   0x12c44
   1442c:	mov    eax,DWORD PTR [ebp-0x4]
   1442f:	cmp    eax,DWORD PTR [esi+0x4]
   14432:	je     0x14437
   14434:	mov    ebx,DWORD PTR [eax+0x10]
   14437:	push   edi
   14438:	push   DWORD PTR [esi+0x10]
   1443b:	call   DWORD PTR ds:0x1ba24
   14441:	mov    eax,ebx
   14443:	pop    edi
   14444:	pop    esi
   14445:	pop    ebx
   14446:	leave  
   14447:	ret    0x4
   1444a:	int3   
   1444b:	int3   
   1444c:	int3   
   1444d:	int3   
   1444e:	int3   
   1444f:	int3   
   14450:	mov    edi,edi
   14452:	push   ebp
   14453:	mov    ebp,esp
   14455:	mov    ecx,DWORD PTR ds:0x70dd8
   1445b:	push   esi
   1445c:	push   DWORD PTR [ebp+0x8]
   1445f:	lea    eax,[ebp+0x8]
   14462:	push   eax
   14463:	call   0x12c86
   14468:	mov    esi,DWORD PTR [ebp+0x8]
   1446b:	mov    eax,ds:0x70dd8
   14470:	cmp    esi,DWORD PTR [eax+0x4]
   14473:	jne    0x14479
   14475:	xor    al,al
   14477:	jmp    0x144c3
   14479:	mov    ecx,DWORD PTR [ebp+0xc]
   1447c:	lea    eax,[esi+0x20]
   1447f:	push   eax
   14480:	call   0x11f9a
   14485:	mov    ecx,DWORD PTR [ebp+0x10]
   14488:	lea    eax,[esi+0x28]
   1448b:	push   eax
   1448c:	call   0x11f9a
   14491:	mov    ecx,DWORD PTR [ebp+0x14]
   14494:	lea    eax,[esi+0x30]
   14497:	push   eax
   14498:	call   0x11f9a
   1449d:	mov    eax,DWORD PTR [esi+0x38]
   144a0:	mov    ecx,DWORD PTR [ebp+0x18]
   144a3:	mov    DWORD PTR [ecx],eax
   144a5:	mov    ecx,DWORD PTR [esi+0x40]
   144a8:	mov    eax,DWORD PTR [ebp+0x1c]
   144ab:	mov    DWORD PTR [eax],ecx
   144ad:	mov    ecx,DWORD PTR [esi+0x44]
   144b0:	mov    DWORD PTR [eax+0x4],ecx
   144b3:	mov    ecx,DWORD PTR [esi+0x48]
   144b6:	mov    eax,DWORD PTR [ebp+0x20]
   144b9:	mov    DWORD PTR [eax],ecx
   144bb:	mov    ecx,DWORD PTR [esi+0x4c]
   144be:	mov    DWORD PTR [eax+0x4],ecx
   144c1:	mov    al,0x1
   144c3:	pop    esi
   144c4:	pop    ebp
   144c5:	ret    0x1c
   144c8:	int3   
   144c9:	int3   
   144ca:	int3   
   144cb:	int3   
   144cc:	int3   
   144cd:	int3   
   144ce:	push   0x30
   144d0:	push   0x700a8
   144d5:	call   0x1a874
   144da:	xor    esi,esi
   144dc:	push   esi
   144dd:	push   esi
   144de:	push   esi
   144df:	push   esi
   144e0:	push   0x70450
   144e5:	call   DWORD PTR ds:0x1ba28
   144eb:	cmp    eax,esi
   144ed:	jl     0x14630
   144f3:	mov    DWORD PTR [ebp-0x4],esi
   144f6:	push   0xffffffff
   144f8:	mov    esi,0x1ac88
   144fd:	push   esi
   144fe:	lea    ecx,[ebp-0x38]
   14501:	call   0x11022
   14506:	push   0xffffffff
   14508:	push   esi
   14509:	lea    ecx,[ebp-0x30]
   1450c:	call   0x11022
   14511:	push   0xffffffff
   14513:	push   esi
   14514:	lea    ecx,[ebp-0x28]
   14517:	call   0x11022
   1451c:	lea    eax,[ebp-0x40]
   1451f:	push   eax
   14520:	lea    eax,[ebp-0x20]
   14523:	push   eax
   14524:	lea    eax,[ebp+0x8]
   14527:	push   eax
   14528:	lea    eax,[ebp-0x28]
   1452b:	push   eax
   1452c:	lea    eax,[ebp-0x30]
   1452f:	push   eax
   14530:	lea    eax,[ebp-0x38]
   14533:	push   eax
   14534:	mov    edi,DWORD PTR [ebp+0x8]
   14537:	push   edi
   14538:	call   0x14450
   1453d:	test   al,al
   1453f:	jne    0x14550
   14541:	mov    eax,DWORD PTR [ebp+0xc]
   14544:	mov    DWORD PTR [eax+0x8],0x1
   1454b:	jmp    0x145ee
   14550:	mov    edx,DWORD PTR [edi+0x4]
   14553:	mov    eax,DWORD PTR [ebp-0x34]
   14556:	lea    esi,[eax+edx*1+0x2]
   1455a:	mov    eax,DWORD PTR [ebp-0x2c]
   1455d:	lea    ebx,[eax+esi*1+0x1]
   14561:	mov    eax,DWORD PTR [ebp-0x24]
   14564:	lea    ecx,[eax+ebx*1+0x1]
   14568:	mov    eax,DWORD PTR [ebp+0xc]
   1456b:	cmp    ecx,DWORD PTR [eax]
   1456d:	jbe    0x1457a
   1456f:	mov    DWORD PTR [eax],ecx
   14571:	mov    DWORD PTR [eax+0x8],0x2
   14578:	jmp    0x145ee
   1457a:	and    DWORD PTR [eax+0x8],0x0
   1457e:	mov    ecx,DWORD PTR [ebp+0x8]
   14581:	mov    DWORD PTR [eax+0xc],ecx
   14584:	mov    ecx,DWORD PTR [ebp-0x20]
   14587:	mov    DWORD PTR [eax+0x10],ecx
   1458a:	mov    ecx,DWORD PTR [ebp-0x1c]
   1458d:	mov    DWORD PTR [eax+0x14],ecx
   14590:	mov    ecx,DWORD PTR [ebp-0x40]
   14593:	mov    DWORD PTR [eax+0x18],ecx
   14596:	mov    ecx,DWORD PTR [ebp-0x3c]
   14599:	mov    DWORD PTR [eax+0x1c],ecx
   1459c:	mov    ecx,DWORD PTR [edi]
   1459e:	mov    DWORD PTR [ebp+0x8],ecx
   145a1:	lea    ecx,[eax+0x20]
   145a4:	mov    DWORD PTR [ebp-0x1c],ecx
   145a7:	mov    ecx,DWORD PTR [ebp+0x8]
   145aa:	mov    cl,BYTE PTR [ecx]
   145ac:	mov    edi,DWORD PTR [ebp-0x1c]
   145af:	mov    BYTE PTR [edi],cl
   145b1:	inc    DWORD PTR [ebp+0x8]
   145b4:	inc    DWORD PTR [ebp-0x1c]
   145b7:	test   cl,cl
   145b9:	jne    0x145a7
   145bb:	mov    ecx,DWORD PTR [ebp-0x38]
   145be:	lea    edi,[edx+eax*1+0x21]
   145c2:	mov    dl,BYTE PTR [ecx]
   145c4:	mov    BYTE PTR [edi],dl
   145c6:	inc    ecx
   145c7:	inc    edi
   145c8:	test   dl,dl
   145ca:	jne    0x145c2
   145cc:	mov    edx,DWORD PTR [ebp-0x30]
   145cf:	lea    esi,[esi+eax*1+0x20]
   145d3:	mov    cl,BYTE PTR [edx]
   145d5:	mov    BYTE PTR [esi],cl
   145d7:	inc    edx
   145d8:	inc    esi
   145d9:	test   cl,cl
   145db:	jne    0x145d3
   145dd:	mov    edx,DWORD PTR [ebp-0x28]
   145e0:	lea    eax,[ebx+eax*1+0x20]
   145e4:	mov    cl,BYTE PTR [edx]
   145e6:	mov    BYTE PTR [eax],cl
   145e8:	inc    edx
   145e9:	inc    eax
   145ea:	test   cl,cl
   145ec:	jne    0x145e4
   145ee:	push   DWORD PTR [ebp-0x28]
   145f1:	call   0x10836
   145f6:	push   DWORD PTR [ebp-0x30]
   145f9:	call   0x10836
   145fe:	push   DWORD PTR [ebp-0x38]
   14601:	call   0x10836
   14606:	add    esp,0xc
   14609:	jmp    0x1461c
   1460b:	xor    eax,eax
   1460d:	inc    eax
   1460e:	ret    
   1460f:	mov    esp,DWORD PTR [ebp-0x18]
   14612:	mov    eax,DWORD PTR [ebp+0xc]
   14615:	mov    DWORD PTR [eax+0x8],0x4
   1461c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   14623:	push   0x0
   14625:	push   0x70450
   1462a:	call   DWORD PTR ds:0x1ba24
   14630:	call   0x1a8b9
   14635:	ret    0x8
   14638:	int3   
   14639:	int3   
   1463a:	int3   
   1463b:	int3   
   1463c:	int3   
   1463d:	int3   
   1463e:	push   0x10
   14640:	push   0x700c8
   14645:	call   0x1a874
   1464a:	xor    ebx,ebx
   1464c:	push   ebx
   1464d:	push   ebx
   1464e:	push   ebx
   1464f:	push   ebx
   14650:	push   0x70450
   14655:	call   DWORD PTR ds:0x1ba28
   1465b:	cmp    eax,ebx
   1465d:	jl     0x1471a
   14663:	mov    DWORD PTR [ebp-0x4],ebx
   14666:	push   0xffffffff
   14668:	push   0x1ac88
   1466d:	lea    ecx,[ebp-0x20]
   14670:	call   0x11022
   14675:	mov    esi,DWORD PTR [ebp+0x8]
   14678:	push   esi
   14679:	lea    eax,[ebp+0x8]
   1467c:	push   eax
   1467d:	mov    ecx,DWORD PTR ds:0x70420
   14683:	call   0x1377c
   14688:	mov    eax,ds:0x70420
   1468d:	mov    eax,DWORD PTR [eax+0x4]
   14690:	mov    ecx,DWORD PTR [ebp+0x8]
   14693:	cmp    ecx,eax
   14695:	je     0x146a3
   14697:	add    ecx,0x14
   1469a:	push   ecx
   1469b:	lea    ecx,[ebp-0x20]
   1469e:	call   0x11f9a
   146a3:	mov    edx,DWORD PTR [esi+0x4]
   146a6:	mov    eax,DWORD PTR [ebp-0x1c]
   146a9:	lea    ecx,[eax+edx*1+0x2]
   146ad:	mov    eax,DWORD PTR [ebp+0xc]
   146b0:	cmp    ecx,DWORD PTR [eax]
   146b2:	jbe    0x146bf
   146b4:	mov    DWORD PTR [eax],ecx
   146b6:	mov    DWORD PTR [eax+0x8],0x2
   146bd:	jmp    0x146e2
   146bf:	mov    DWORD PTR [eax+0x8],ebx
   146c2:	mov    esi,DWORD PTR [esi]
   146c4:	lea    edi,[eax+0xc]
   146c7:	mov    cl,BYTE PTR [esi]
   146c9:	mov    BYTE PTR [edi],cl
   146cb:	inc    esi
   146cc:	inc    edi
   146cd:	cmp    cl,bl
   146cf:	jne    0x146c7
   146d1:	mov    esi,DWORD PTR [ebp-0x20]
   146d4:	lea    eax,[edx+eax*1+0xd]
   146d8:	mov    cl,BYTE PTR [esi]
   146da:	mov    BYTE PTR [eax],cl
   146dc:	inc    esi
   146dd:	inc    eax
   146de:	cmp    cl,bl
   146e0:	jne    0x146d8
   146e2:	push   DWORD PTR [ebp-0x20]
   146e5:	call   0x10836
   146ea:	pop    ecx
   146eb:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   146f2:	jmp    0x1470e
   146f4:	xor    eax,eax
   146f6:	inc    eax
   146f7:	ret    
   146f8:	mov    esp,DWORD PTR [ebp-0x18]
   146fb:	mov    eax,DWORD PTR [ebp+0xc]
   146fe:	mov    DWORD PTR [eax+0x8],0x4
   14705:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1470c:	xor    ebx,ebx
   1470e:	push   ebx
   1470f:	push   0x70450
   14714:	call   DWORD PTR ds:0x1ba24
   1471a:	call   0x1a8b9
   1471f:	ret    0x8
   14722:	int3   
   14723:	int3   
   14724:	int3   
   14725:	int3   
   14726:	int3   
   14727:	int3   
   14728:	push   0xc
   1472a:	push   0x700e8
   1472f:	call   0x1a874
   14734:	xor    edi,edi
   14736:	push   edi
   14737:	push   edi
   14738:	push   edi
   14739:	push   edi
   1473a:	push   0x70450
   1473f:	call   DWORD PTR ds:0x1ba28
   14745:	cmp    eax,edi
   14747:	jl     0x147f6
   1474d:	mov    DWORD PTR [ebp-0x4],edi
   14750:	lea    eax,[ebp+0x8]
   14753:	push   eax
   14754:	lea    eax,[ebp-0x1c]
   14757:	push   eax
   14758:	mov    esi,DWORD PTR ds:0x704ac
   1475e:	mov    ecx,esi
   14760:	call   0x12d16
   14765:	mov    esi,DWORD PTR [esi+0x4]
   14768:	mov    ecx,DWORD PTR [ebp-0x1c]
   1476b:	cmp    ecx,esi
   1476d:	jne    0x1477b
   1476f:	mov    eax,DWORD PTR [ebp+0xc]
   14772:	mov    DWORD PTR [eax+0x8],0x1
   14779:	jmp    0x147c7
   1477b:	mov    eax,DWORD PTR [ecx+0x10]
   1477e:	cmp    eax,edi
   14780:	jne    0x14786
   14782:	xor    edx,edx
   14784:	jmp    0x14789
   14786:	mov    edx,DWORD PTR [eax+0x8]
   14789:	mov    eax,DWORD PTR [ebp+0xc]
   1478c:	cmp    edx,DWORD PTR [eax]
   1478e:	jbe    0x1479b
   14790:	mov    DWORD PTR [eax],edx
   14792:	mov    DWORD PTR [eax+0x8],0x2
   14799:	jmp    0x147c7
   1479b:	mov    DWORD PTR [eax+0x8],edi
   1479e:	mov    edx,DWORD PTR [ecx+0x10]
   147a1:	cmp    edx,edi
   147a3:	jne    0x147a9
   147a5:	xor    edx,edx
   147a7:	jmp    0x147ac
   147a9:	mov    edx,DWORD PTR [edx+0x8]
   147ac:	mov    ecx,DWORD PTR [ecx+0x10]
   147af:	cmp    ecx,edi
   147b1:	jne    0x147b7
   147b3:	xor    ecx,ecx
   147b5:	jmp    0x147b9
   147b7:	mov    ecx,DWORD PTR [ecx]
   147b9:	push   edx
   147ba:	push   ecx
   147bb:	add    eax,0xc
   147be:	push   eax
   147bf:	call   0x1a82a
   147c4:	add    esp,0xc
   147c7:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   147ce:	jmp    0x147ea
   147d0:	xor    eax,eax
   147d2:	inc    eax
   147d3:	ret    
   147d4:	mov    esp,DWORD PTR [ebp-0x18]
   147d7:	mov    eax,DWORD PTR [ebp+0xc]
   147da:	mov    DWORD PTR [eax+0x8],0x4
   147e1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   147e8:	xor    edi,edi
   147ea:	push   edi
   147eb:	push   0x70450
   147f0:	call   DWORD PTR ds:0x1ba24
   147f6:	call   0x1a8b9
   147fb:	ret    0x8
   147fe:	int3   
   147ff:	int3   
   14800:	int3   
   14801:	int3   
   14802:	int3   
   14803:	int3   
   14804:	mov    edi,edi
   14806:	push   ebp
   14807:	mov    ebp,esp
   14809:	push   ecx
   1480a:	push   ecx
   1480b:	push   DWORD PTR [ebp+0xc]
   1480e:	lea    eax,[ebp-0x8]
   14811:	push   eax
   14812:	call   0x13860
   14817:	mov    eax,DWORD PTR [ebp+0x8]
   1481a:	mov    ecx,DWORD PTR [ebp-0x8]
   1481d:	mov    DWORD PTR [eax],ecx
   1481f:	mov    cl,BYTE PTR [ebp-0x4]
   14822:	mov    BYTE PTR [eax+0x4],cl
   14825:	leave  
   14826:	ret    0x8
   14829:	int3   
   1482a:	int3   
   1482b:	int3   
   1482c:	int3   
   1482d:	int3   
   1482e:	mov    edi,edi
   14830:	push   ebp
   14831:	mov    ebp,esp
   14833:	push   ecx
   14834:	push   ecx
   14835:	push   DWORD PTR [ebp+0x8]
   14838:	lea    eax,[ebp-0x8]
   1483b:	push   eax
   1483c:	call   0x13044
   14841:	and    DWORD PTR [ebp+0x8],0x0
   14845:	lea    eax,[ebp+0x8]
   14848:	push   eax
   14849:	push   DWORD PTR [ebp-0x4]
   1484c:	push   DWORD PTR [ebp-0x8]
   1484f:	call   0x143d6
   14854:	mov    eax,DWORD PTR [ebp+0x8]
   14857:	add    esp,0xc
   1485a:	leave  
   1485b:	ret    0x4
   1485e:	int3   
   1485f:	int3   
   14860:	int3   
   14861:	int3   
   14862:	int3   
   14863:	int3   
   14864:	mov    edi,edi
   14866:	push   ebp
   14867:	mov    ebp,esp
   14869:	push   ecx
   1486a:	push   ecx
   1486b:	push   esi
   1486c:	push   DWORD PTR [ebp+0x8]
   1486f:	lea    eax,[ebp-0x8]
   14872:	push   eax
   14873:	mov    esi,ecx
   14875:	call   0x130d8
   1487a:	and    DWORD PTR [ebp+0x8],0x0
   1487e:	lea    eax,[ebp+0x8]
   14881:	push   eax
   14882:	push   DWORD PTR [ebp-0x4]
   14885:	push   DWORD PTR [ebp-0x8]
   14888:	call   0x12b70
   1488d:	add    esp,0xc
   14890:	push   DWORD PTR [ebp-0x4]
   14893:	lea    eax,[ebp-0x4]
   14896:	push   DWORD PTR [ebp-0x8]
   14899:	mov    ecx,esi
   1489b:	push   eax
   1489c:	call   0x138f8
   148a1:	mov    eax,DWORD PTR [ebp+0x8]
   148a4:	pop    esi
   148a5:	leave  
   148a6:	ret    0x4
   148a9:	int3   
   148aa:	int3   
   148ab:	int3   
   148ac:	int3   
   148ad:	int3   
   148ae:	mov    edi,edi
   148b0:	push   ebp
   148b1:	mov    ebp,esp
   148b3:	push   ecx
   148b4:	push   ebx
   148b5:	push   esi
   148b6:	push   edi
   148b7:	mov    edi,ecx
   148b9:	mov    eax,DWORD PTR [edi+0x4]
   148bc:	mov    esi,DWORD PTR [eax+0x4]
   148bf:	mov    ebx,eax
   148c1:	mov    al,0x1
   148c3:	jmp    0x148de
   148c5:	lea    eax,[esi+0x10]
   148c8:	push   eax
   148c9:	push   DWORD PTR [ebp+0xc]
   148cc:	mov    ebx,esi
   148ce:	call   0x17b84
   148d3:	test   al,al
   148d5:	je     0x148db
   148d7:	mov    esi,DWORD PTR [esi]
   148d9:	jmp    0x148de
   148db:	mov    esi,DWORD PTR [esi+0x8]
   148de:	cmp    esi,DWORD PTR ds:0x70fa8
   148e4:	jne    0x148c5
   148e6:	cmp    BYTE PTR [edi+0x8],0x0
   148ea:	je     0x14907
   148ec:	push   DWORD PTR [ebp+0xc]
   148ef:	lea    eax,[ebp+0xc]
   148f2:	push   ebx
   148f3:	push   esi
   148f4:	push   eax
   148f5:	mov    ecx,edi
   148f7:	call   0x13bd8
   148fc:	mov    ecx,DWORD PTR [eax]
   148fe:	mov    eax,DWORD PTR [ebp+0x8]
   14901:	mov    BYTE PTR [eax+0x4],0x1
   14905:	jmp    0x1493a
   14907:	mov    DWORD PTR [ebp-0x4],ebx
   1490a:	test   al,al
   1490c:	je     0x1491d
   1490e:	mov    eax,DWORD PTR [edi+0x4]
   14911:	cmp    ebx,DWORD PTR [eax]
   14913:	je     0x148ec
   14915:	lea    ecx,[ebp-0x4]
   14918:	call   0x112ac
   1491d:	push   DWORD PTR [ebp+0xc]
   14920:	mov    eax,DWORD PTR [ebp-0x4]
   14923:	add    eax,0x10
   14926:	push   eax
   14927:	call   0x17b84
   1492c:	test   al,al
   1492e:	jne    0x148ec
   14930:	mov    eax,DWORD PTR [ebp+0x8]
   14933:	mov    ecx,DWORD PTR [ebp-0x4]
   14936:	mov    BYTE PTR [eax+0x4],0x0
   1493a:	pop    edi
   1493b:	pop    esi
   1493c:	mov    DWORD PTR [eax],ecx
   1493e:	pop    ebx
   1493f:	leave  
   14940:	ret    0x8
   14943:	int3   
   14944:	int3   
   14945:	int3   
   14946:	int3   
   14947:	int3   
   14948:	mov    edi,edi
   1494a:	push   ebp
   1494b:	mov    ebp,esp
   1494d:	push   ecx
   1494e:	push   esi
   1494f:	mov    esi,ecx
   14951:	cmp    DWORD PTR [esi+0xc],0x0
   14955:	mov    ecx,DWORD PTR [ebp+0xc]
   14958:	je     0x14992
   1495a:	mov    eax,DWORD PTR [esi+0x4]
   1495d:	cmp    ecx,DWORD PTR [eax]
   1495f:	jne    0x14992
   14961:	cmp    DWORD PTR [ebp+0x10],eax
   14964:	jne    0x14992
   14966:	push   DWORD PTR [eax+0x4]
   14969:	mov    ecx,esi
   1496b:	call   0x133fa
   14970:	mov    ecx,DWORD PTR ds:0x70fa8
   14976:	mov    eax,DWORD PTR [esi+0x4]
   14979:	mov    DWORD PTR [eax+0x4],ecx
   1497c:	mov    eax,DWORD PTR [esi+0x4]
   1497f:	and    DWORD PTR [esi+0xc],0x0
   14983:	mov    DWORD PTR [eax],eax
   14985:	mov    eax,DWORD PTR [esi+0x4]
   14988:	mov    DWORD PTR [eax+0x8],eax
   1498b:	mov    eax,DWORD PTR [esi+0x4]
   1498e:	mov    ecx,DWORD PTR [eax]
   14990:	jmp    0x149b7
   14992:	cmp    ecx,DWORD PTR [ebp+0x10]
   14995:	je     0x149b7
   14997:	push   edi
   14998:	mov    edi,ecx
   1499a:	lea    ecx,[ebp+0xc]
   1499d:	call   0x129fc
   149a2:	push   edi
   149a3:	lea    eax,[ebp-0x4]
   149a6:	push   eax
   149a7:	mov    ecx,esi
   149a9:	call   0x13976
   149ae:	mov    ecx,DWORD PTR [ebp+0xc]
   149b1:	cmp    ecx,DWORD PTR [ebp+0x10]
   149b4:	jne    0x14998
   149b6:	pop    edi
   149b7:	mov    eax,DWORD PTR [ebp+0x8]
   149ba:	mov    DWORD PTR [eax],ecx
   149bc:	pop    esi
   149bd:	leave  
   149be:	ret    0xc
   149c1:	int3   
   149c2:	int3   
   149c3:	int3   
   149c4:	int3   
   149c5:	int3   
   149c6:	mov    edi,edi
   149c8:	push   ebp
   149c9:	mov    ebp,esp
   149cb:	push   ecx
   149cc:	push   ebx
   149cd:	push   esi
   149ce:	push   edi
   149cf:	mov    edi,ecx
   149d1:	mov    eax,DWORD PTR [edi+0x4]
   149d4:	mov    esi,DWORD PTR [eax+0x4]
   149d7:	mov    ebx,eax
   149d9:	mov    al,0x1
   149db:	jmp    0x149f6
   149dd:	lea    eax,[esi+0xc]
   149e0:	push   eax
   149e1:	push   DWORD PTR [ebp+0xc]
   149e4:	mov    ebx,esi
   149e6:	call   0x17b84
   149eb:	test   al,al
   149ed:	je     0x149f3
   149ef:	mov    esi,DWORD PTR [esi]
   149f1:	jmp    0x149f6
   149f3:	mov    esi,DWORD PTR [esi+0x8]
   149f6:	cmp    esi,DWORD PTR ds:0x70fac
   149fc:	jne    0x149dd
   149fe:	cmp    BYTE PTR [edi+0x8],0x0
   14a02:	je     0x14a1f
   14a04:	push   DWORD PTR [ebp+0xc]
   14a07:	lea    eax,[ebp+0xc]
   14a0a:	push   ebx
   14a0b:	push   esi
   14a0c:	push   eax
   14a0d:	mov    ecx,edi
   14a0f:	call   0x13d2e
   14a14:	mov    ecx,DWORD PTR [eax]
   14a16:	mov    eax,DWORD PTR [ebp+0x8]
   14a19:	mov    BYTE PTR [eax+0x4],0x1
   14a1d:	jmp    0x14a52
   14a1f:	mov    DWORD PTR [ebp-0x4],ebx
   14a22:	test   al,al
   14a24:	je     0x14a35
   14a26:	mov    eax,DWORD PTR [edi+0x4]
   14a29:	cmp    ebx,DWORD PTR [eax]
   14a2b:	je     0x14a04
   14a2d:	lea    ecx,[ebp-0x4]
   14a30:	call   0x11330
   14a35:	push   DWORD PTR [ebp+0xc]
   14a38:	mov    eax,DWORD PTR [ebp-0x4]
   14a3b:	add    eax,0xc
   14a3e:	push   eax
   14a3f:	call   0x17b84
   14a44:	test   al,al
   14a46:	jne    0x14a04
   14a48:	mov    eax,DWORD PTR [ebp+0x8]
   14a4b:	mov    ecx,DWORD PTR [ebp-0x4]
   14a4e:	mov    BYTE PTR [eax+0x4],0x0
   14a52:	pop    edi
   14a53:	pop    esi
   14a54:	mov    DWORD PTR [eax],ecx
   14a56:	pop    ebx
   14a57:	leave  
   14a58:	ret    0x8
   14a5b:	int3   
   14a5c:	int3   
   14a5d:	int3   
   14a5e:	int3   
   14a5f:	int3   
   14a60:	mov    edi,edi
   14a62:	push   ebp
   14a63:	mov    ebp,esp
   14a65:	push   ecx
   14a66:	push   ebx
   14a67:	push   esi
   14a68:	push   edi
   14a69:	mov    edi,ecx
   14a6b:	mov    eax,DWORD PTR [edi+0x4]
   14a6e:	mov    esi,DWORD PTR [eax+0x4]
   14a71:	mov    ebx,eax
   14a73:	mov    eax,ds:0x70fb0
   14a78:	mov    dl,0x1
   14a7a:	cmp    esi,eax
   14a7c:	je     0x14a9a
   14a7e:	mov    ecx,DWORD PTR [ebp+0xc]
   14a81:	mov    ecx,DWORD PTR [ecx]
   14a83:	cmp    ecx,DWORD PTR [esi+0xc]
   14a86:	mov    ebx,esi
   14a88:	setl   dl
   14a8b:	test   dl,dl
   14a8d:	je     0x14a93
   14a8f:	mov    esi,DWORD PTR [esi]
   14a91:	jmp    0x14a96
   14a93:	mov    esi,DWORD PTR [esi+0x8]
   14a96:	cmp    esi,eax
   14a98:	jne    0x14a83
   14a9a:	cmp    BYTE PTR [edi+0x8],0x0
   14a9e:	je     0x14abb
   14aa0:	push   DWORD PTR [ebp+0xc]
   14aa3:	push   ebx
   14aa4:	push   esi
   14aa5:	lea    eax,[ebp+0xc]
   14aa8:	push   eax
   14aa9:	mov    ecx,edi
   14aab:	call   0x14130
   14ab0:	mov    ecx,DWORD PTR [eax]
   14ab2:	mov    eax,DWORD PTR [ebp+0x8]
   14ab5:	mov    BYTE PTR [eax+0x4],0x1
   14ab9:	jmp    0x14aea
   14abb:	mov    ecx,ebx
   14abd:	mov    DWORD PTR [ebp-0x4],ecx
   14ac0:	test   dl,dl
   14ac2:	je     0x14ad6
   14ac4:	mov    eax,DWORD PTR [edi+0x4]
   14ac7:	cmp    ebx,DWORD PTR [eax]
   14ac9:	je     0x14aa0
   14acb:	lea    ecx,[ebp-0x4]
   14ace:	call   0x113b4
   14ad3:	mov    ecx,DWORD PTR [ebp-0x4]
   14ad6:	mov    edx,DWORD PTR [ecx+0xc]
   14ad9:	mov    eax,DWORD PTR [ebp+0xc]
   14adc:	cmp    edx,DWORD PTR [eax]
   14ade:	jge    0x14ae3
   14ae0:	push   eax
   14ae1:	jmp    0x14aa3
   14ae3:	mov    eax,DWORD PTR [ebp+0x8]
   14ae6:	mov    BYTE PTR [eax+0x4],0x0
   14aea:	pop    edi
   14aeb:	pop    esi
   14aec:	mov    DWORD PTR [eax],ecx
   14aee:	pop    ebx
   14aef:	leave  
   14af0:	ret    0x8
   14af3:	int3   
   14af4:	int3   
   14af5:	int3   
   14af6:	int3   
   14af7:	int3   
   14af8:	mov    edi,edi
   14afa:	push   ebp
   14afb:	mov    ebp,esp
   14afd:	push   ecx
   14afe:	push   esi
   14aff:	mov    esi,ecx
   14b01:	cmp    DWORD PTR [esi+0xc],0x0
   14b05:	mov    ecx,DWORD PTR [ebp+0xc]
   14b08:	je     0x14b42
   14b0a:	mov    eax,DWORD PTR [esi+0x4]
   14b0d:	cmp    ecx,DWORD PTR [eax]
   14b0f:	jne    0x14b42
   14b11:	cmp    DWORD PTR [ebp+0x10],eax
   14b14:	jne    0x14b42
   14b16:	push   DWORD PTR [eax+0x4]
   14b19:	mov    ecx,esi
   14b1b:	call   0x140e6
   14b20:	mov    ecx,DWORD PTR ds:0x70fb0
   14b26:	mov    eax,DWORD PTR [esi+0x4]
   14b29:	mov    DWORD PTR [eax+0x4],ecx
   14b2c:	mov    eax,DWORD PTR [esi+0x4]
   14b2f:	and    DWORD PTR [esi+0xc],0x0
   14b33:	mov    DWORD PTR [eax],eax
   14b35:	mov    eax,DWORD PTR [esi+0x4]
   14b38:	mov    DWORD PTR [eax+0x8],eax
   14b3b:	mov    eax,DWORD PTR [esi+0x4]
   14b3e:	mov    ecx,DWORD PTR [eax]
   14b40:	jmp    0x14b67
   14b42:	cmp    ecx,DWORD PTR [ebp+0x10]
   14b45:	je     0x14b67
   14b47:	push   edi
   14b48:	mov    edi,ecx
   14b4a:	lea    ecx,[ebp+0xc]
   14b4d:	call   0x1142a
   14b52:	push   edi
   14b53:	lea    eax,[ebp-0x4]
   14b56:	push   eax
   14b57:	mov    ecx,esi
   14b59:	call   0x13e84
   14b5e:	mov    ecx,DWORD PTR [ebp+0xc]
   14b61:	cmp    ecx,DWORD PTR [ebp+0x10]
   14b64:	jne    0x14b48
   14b66:	pop    edi
   14b67:	mov    eax,DWORD PTR [ebp+0x8]
   14b6a:	mov    DWORD PTR [eax],ecx
   14b6c:	pop    esi
   14b6d:	leave  
   14b6e:	ret    0xc
   14b71:	int3   
   14b72:	int3   
   14b73:	int3   
   14b74:	int3   
   14b75:	int3   
   14b76:	mov    edi,edi
   14b78:	push   ebp
   14b79:	mov    ebp,esp
   14b7b:	push   ecx
   14b7c:	push   ebx
   14b7d:	push   esi
   14b7e:	push   edi
   14b7f:	mov    edi,ecx
   14b81:	mov    eax,DWORD PTR [edi+0x4]
   14b84:	mov    esi,DWORD PTR [eax+0x4]
   14b87:	mov    ebx,eax
   14b89:	mov    al,0x1
   14b8b:	jmp    0x14ba6
   14b8d:	lea    eax,[esi+0xc]
   14b90:	push   eax
   14b91:	push   DWORD PTR [ebp+0xc]
   14b94:	mov    ebx,esi
   14b96:	call   0x17bb4
   14b9b:	test   al,al
   14b9d:	je     0x14ba3
   14b9f:	mov    esi,DWORD PTR [esi]
   14ba1:	jmp    0x14ba6
   14ba3:	mov    esi,DWORD PTR [esi+0x8]
   14ba6:	cmp    esi,DWORD PTR ds:0x70fb8
   14bac:	jne    0x14b8d
   14bae:	cmp    BYTE PTR [edi+0x8],0x0
   14bb2:	je     0x14bcf
   14bb4:	push   DWORD PTR [ebp+0xc]
   14bb7:	lea    eax,[ebp+0xc]
   14bba:	push   ebx
   14bbb:	push   esi
   14bbc:	push   eax
   14bbd:	mov    ecx,edi
   14bbf:	call   0x14280
   14bc4:	mov    ecx,DWORD PTR [eax]
   14bc6:	mov    eax,DWORD PTR [ebp+0x8]
   14bc9:	mov    BYTE PTR [eax+0x4],0x1
   14bcd:	jmp    0x14c02
   14bcf:	mov    DWORD PTR [ebp-0x4],ebx
   14bd2:	test   al,al
   14bd4:	je     0x14be5
   14bd6:	mov    eax,DWORD PTR [edi+0x4]
   14bd9:	cmp    ebx,DWORD PTR [eax]
   14bdb:	je     0x14bb4
   14bdd:	lea    ecx,[ebp-0x4]
   14be0:	call   0x126e0
   14be5:	push   DWORD PTR [ebp+0xc]
   14be8:	mov    eax,DWORD PTR [ebp-0x4]
   14beb:	add    eax,0xc
   14bee:	push   eax
   14bef:	call   0x17bb4
   14bf4:	test   al,al
   14bf6:	jne    0x14bb4
   14bf8:	mov    eax,DWORD PTR [ebp+0x8]
   14bfb:	mov    ecx,DWORD PTR [ebp-0x4]
   14bfe:	mov    BYTE PTR [eax+0x4],0x0
   14c02:	pop    edi
   14c03:	pop    esi
   14c04:	mov    DWORD PTR [eax],ecx
   14c06:	pop    ebx
   14c07:	leave  
   14c08:	ret    0x8
   14c0b:	int3   
   14c0c:	int3   
   14c0d:	int3   
   14c0e:	int3   
   14c0f:	int3   
   14c10:	mov    edi,edi
   14c12:	push   ebp
   14c13:	mov    ebp,esp
   14c15:	push   esi
   14c16:	push   edi
   14c17:	xor    edi,edi
   14c19:	push   edi
   14c1a:	push   edi
   14c1b:	push   edi
   14c1c:	mov    esi,ecx
   14c1e:	mov    eax,DWORD PTR [esi+0x10]
   14c21:	push   edi
   14c22:	push   eax
   14c23:	call   DWORD PTR ds:0x1ba28
   14c29:	test   eax,eax
   14c2b:	jl     0x14c42
   14c2d:	lea    eax,[ebp+0x8]
   14c30:	push   eax
   14c31:	mov    ecx,esi
   14c33:	call   0x13816
   14c38:	push   edi
   14c39:	push   DWORD PTR [esi+0x10]
   14c3c:	call   DWORD PTR ds:0x1ba24
   14c42:	pop    edi
   14c43:	pop    esi
   14c44:	pop    ebp
   14c45:	ret    0x4
   14c48:	int3   
   14c49:	int3   
   14c4a:	int3   
   14c4b:	int3   
   14c4c:	int3   
   14c4d:	int3   
   14c4e:	mov    edi,edi
   14c50:	push   ebp
   14c51:	mov    ebp,esp
   14c53:	sub    esp,0x10
   14c56:	mov    eax,DWORD PTR [ebp+0x8]
   14c59:	mov    eax,DWORD PTR [eax]
   14c5b:	and    DWORD PTR [ebp-0x4],0x0
   14c5f:	mov    DWORD PTR [ebp-0x8],eax
   14c62:	lea    eax,[ebp-0x8]
   14c65:	push   eax
   14c66:	lea    eax,[ebp-0x10]
   14c69:	push   eax
   14c6a:	call   0x14804
   14c6f:	mov    eax,DWORD PTR [eax]
   14c71:	add    eax,0x10
   14c74:	leave  
   14c75:	ret    0x4
   14c78:	int3   
   14c79:	int3   
   14c7a:	int3   
   14c7b:	int3   
   14c7c:	int3   
   14c7d:	int3   
   14c7e:	mov    edi,edi
   14c80:	push   esi
   14c81:	mov    esi,ecx
   14c83:	mov    BYTE PTR [esi+0x8],0x0
   14c87:	call   0x1310a
   14c8c:	mov    eax,esi
   14c8e:	pop    esi
   14c8f:	ret    0x8
   14c92:	int3   
   14c93:	int3   
   14c94:	int3   
   14c95:	int3   
   14c96:	int3   
   14c97:	int3   
   14c98:	mov    edi,edi
   14c9a:	push   ebp
   14c9b:	mov    ebp,esp
   14c9d:	push   ecx
   14c9e:	push   ecx
   14c9f:	push   DWORD PTR [ebp+0xc]
   14ca2:	lea    eax,[ebp-0x8]
   14ca5:	push   eax
   14ca6:	call   0x148ae
   14cab:	mov    eax,DWORD PTR [ebp+0x8]
   14cae:	mov    ecx,DWORD PTR [ebp-0x8]
   14cb1:	mov    DWORD PTR [eax],ecx
   14cb3:	mov    cl,BYTE PTR [ebp-0x4]
   14cb6:	mov    BYTE PTR [eax+0x4],cl
   14cb9:	leave  
   14cba:	ret    0x8
   14cbd:	int3   
   14cbe:	int3   
   14cbf:	int3   
   14cc0:	int3   
   14cc1:	int3   
   14cc2:	mov    edi,edi
   14cc4:	push   ebp
   14cc5:	mov    ebp,esp
   14cc7:	push   ecx
   14cc8:	mov    eax,DWORD PTR [ecx+0x4]
   14ccb:	mov    edx,DWORD PTR [eax]
   14ccd:	push   eax
   14cce:	push   edx
   14ccf:	lea    eax,[ebp-0x4]
   14cd2:	push   eax
   14cd3:	call   0x14948
   14cd8:	leave  
   14cd9:	ret    
   14cda:	int3   
   14cdb:	int3   
   14cdc:	int3   
   14cdd:	int3   
   14cde:	int3   
   14cdf:	int3   
   14ce0:	mov    edi,edi
   14ce2:	push   ebp
   14ce3:	mov    ebp,esp
   14ce5:	push   ecx
   14ce6:	push   ecx
   14ce7:	push   DWORD PTR [ebp+0xc]
   14cea:	lea    eax,[ebp-0x8]
   14ced:	push   eax
   14cee:	call   0x149c6
   14cf3:	mov    eax,DWORD PTR [ebp+0x8]
   14cf6:	mov    ecx,DWORD PTR [ebp-0x8]
   14cf9:	mov    DWORD PTR [eax],ecx
   14cfb:	mov    cl,BYTE PTR [ebp-0x4]
   14cfe:	mov    BYTE PTR [eax+0x4],cl
   14d01:	leave  
   14d02:	ret    0x8
   14d05:	int3   
   14d06:	int3   
   14d07:	int3   
   14d08:	int3   
   14d09:	int3   
   14d0a:	mov    edi,edi
   14d0c:	push   ebp
   14d0d:	mov    ebp,esp
   14d0f:	push   ecx
   14d10:	push   ecx
   14d11:	push   DWORD PTR [ebp+0xc]
   14d14:	lea    eax,[ebp-0x8]
   14d17:	push   eax
   14d18:	call   0x14a60
   14d1d:	mov    eax,DWORD PTR [ebp+0x8]
   14d20:	mov    ecx,DWORD PTR [ebp-0x8]
   14d23:	mov    DWORD PTR [eax],ecx
   14d25:	mov    cl,BYTE PTR [ebp-0x4]
   14d28:	mov    BYTE PTR [eax+0x4],cl
   14d2b:	leave  
   14d2c:	ret    0x8
   14d2f:	int3   
   14d30:	int3   
   14d31:	int3   
   14d32:	int3   
   14d33:	int3   
   14d34:	mov    edi,edi
   14d36:	push   ebp
   14d37:	mov    ebp,esp
   14d39:	push   ecx
   14d3a:	push   ecx
   14d3b:	push   esi
   14d3c:	push   DWORD PTR [ebp+0x8]
   14d3f:	lea    eax,[ebp-0x8]
   14d42:	push   eax
   14d43:	mov    esi,ecx
   14d45:	call   0x1316c
   14d4a:	and    DWORD PTR [ebp+0x8],0x0
   14d4e:	lea    eax,[ebp+0x8]
   14d51:	push   eax
   14d52:	push   DWORD PTR [ebp-0x4]
   14d55:	push   DWORD PTR [ebp-0x8]
   14d58:	call   0x12b92
   14d5d:	add    esp,0xc
   14d60:	push   DWORD PTR [ebp-0x4]
   14d63:	lea    eax,[ebp-0x4]
   14d66:	push   DWORD PTR [ebp-0x8]
   14d69:	mov    ecx,esi
   14d6b:	push   eax
   14d6c:	call   0x14af8
   14d71:	mov    eax,DWORD PTR [ebp+0x8]
   14d74:	pop    esi
   14d75:	leave  
   14d76:	ret    0x4
   14d79:	int3   
   14d7a:	int3   
   14d7b:	int3   
   14d7c:	int3   
   14d7d:	int3   
   14d7e:	mov    edi,edi
   14d80:	push   ebp
   14d81:	mov    ebp,esp
   14d83:	push   ecx
   14d84:	mov    eax,DWORD PTR [ecx+0x4]
   14d87:	mov    edx,DWORD PTR [eax]
   14d89:	push   eax
   14d8a:	push   edx
   14d8b:	lea    eax,[ebp-0x4]
   14d8e:	push   eax
   14d8f:	call   0x14af8
   14d94:	leave  
   14d95:	ret    
   14d96:	int3   
   14d97:	int3   
   14d98:	int3   
   14d99:	int3   
   14d9a:	int3   
   14d9b:	int3   
   14d9c:	mov    edi,edi
   14d9e:	push   ebp
   14d9f:	mov    ebp,esp
   14da1:	push   ecx
   14da2:	push   ecx
   14da3:	push   DWORD PTR [ebp+0xc]
   14da6:	lea    eax,[ebp-0x8]
   14da9:	push   eax
   14daa:	call   0x14b76
   14daf:	mov    eax,DWORD PTR [ebp+0x8]
   14db2:	mov    ecx,DWORD PTR [ebp-0x8]
   14db5:	mov    DWORD PTR [eax],ecx
   14db7:	mov    cl,BYTE PTR [ebp-0x4]
   14dba:	mov    BYTE PTR [eax+0x4],cl
   14dbd:	leave  
   14dbe:	ret    0x8
   14dc1:	int3   
   14dc2:	int3   
   14dc3:	int3   
   14dc4:	int3   
   14dc5:	int3   
   14dc6:	mov    edi,edi
   14dc8:	push   esi
   14dc9:	mov    esi,ecx
   14dcb:	push   edi
   14dcc:	mov    BYTE PTR [esi+0x8],0x0
   14dd0:	call   0x12fe2
   14dd5:	lea    edi,[esi+0x10]
   14dd8:	mov    ecx,edi
   14dda:	call   0x1202c
   14ddf:	push   0x0
   14de1:	push   DWORD PTR [edi]
   14de3:	call   DWORD PTR ds:0x1ba44
   14de9:	pop    edi
   14dea:	mov    eax,esi
   14dec:	pop    esi
   14ded:	ret    
   14dee:	int3   
   14def:	int3   
   14df0:	int3   
   14df1:	int3   
   14df2:	int3   
   14df3:	int3   
   14df4:	mov    edi,edi
   14df6:	push   ebp
   14df7:	mov    ebp,esp
   14df9:	push   esi
   14dfa:	push   edi
   14dfb:	xor    edi,edi
   14dfd:	push   edi
   14dfe:	push   edi
   14dff:	push   edi
   14e00:	mov    esi,ecx
   14e02:	mov    eax,DWORD PTR [esi+0x10]
   14e05:	push   edi
   14e06:	push   eax
   14e07:	call   DWORD PTR ds:0x1ba28
   14e0d:	test   eax,eax
   14e0f:	jl     0x14e2b
   14e11:	lea    eax,[ebp+0x8]
   14e14:	push   eax
   14e15:	mov    ecx,esi
   14e17:	call   0x14c4e
   14e1c:	mov    ecx,DWORD PTR [ebp+0xc]
   14e1f:	push   edi
   14e20:	mov    DWORD PTR [eax],ecx
   14e22:	push   DWORD PTR [esi+0x10]
   14e25:	call   DWORD PTR ds:0x1ba24
   14e2b:	pop    edi
   14e2c:	pop    esi
   14e2d:	pop    ebp
   14e2e:	ret    0x8
   14e31:	int3   
   14e32:	int3   
   14e33:	int3   
   14e34:	int3   
   14e35:	int3   
   14e36:	mov    edi,edi
   14e38:	push   esi
   14e39:	mov    esi,ecx
   14e3b:	mov    BYTE PTR [esi+0x8],0x0
   14e3f:	call   0x13076
   14e44:	mov    eax,esi
   14e46:	pop    esi
   14e47:	ret    0x8
   14e4a:	int3   
   14e4b:	int3   
   14e4c:	int3   
   14e4d:	int3   
   14e4e:	int3   
   14e4f:	int3   
   14e50:	mov    edi,edi
   14e52:	push   ebp
   14e53:	mov    ebp,esp
   14e55:	sub    esp,0x80
   14e5b:	push   esi
   14e5c:	mov    esi,ecx
   14e5e:	lea    ecx,[ebp-0x40]
   14e61:	call   0x128a8
   14e66:	push   eax
   14e67:	push   DWORD PTR [ebp+0x8]
   14e6a:	lea    ecx,[ebp-0x80]
   14e6d:	call   0x12a32
   14e72:	push   eax
   14e73:	lea    eax,[ebp-0x8]
   14e76:	push   eax
   14e77:	mov    ecx,esi
   14e79:	call   0x14c98
   14e7e:	mov    esi,DWORD PTR [eax]
   14e80:	lea    ecx,[ebp-0x80]
   14e83:	call   0x10fe8
   14e88:	lea    ecx,[ebp-0x40]
   14e8b:	call   0x10fba
   14e90:	lea    eax,[esi+0x18]
   14e93:	pop    esi
   14e94:	leave  
   14e95:	ret    0x4
   14e98:	int3   
   14e99:	int3   
   14e9a:	int3   
   14e9b:	int3   
   14e9c:	int3   
   14e9d:	int3   
   14e9e:	mov    edi,edi
   14ea0:	push   ebp
   14ea1:	mov    ebp,esp
   14ea3:	sub    esp,0x20
   14ea6:	push   esi
   14ea7:	push   0xffffffff
   14ea9:	mov    esi,ecx
   14eab:	push   0x1ac88
   14eb0:	lea    ecx,[ebp-0x8]
   14eb3:	call   0x11022
   14eb8:	lea    eax,[ebp-0x8]
   14ebb:	push   eax
   14ebc:	push   DWORD PTR [ebp+0x8]
   14ebf:	lea    ecx,[ebp-0x20]
   14ec2:	call   0x1214e
   14ec7:	push   eax
   14ec8:	lea    eax,[ebp-0x10]
   14ecb:	push   eax
   14ecc:	mov    ecx,esi
   14ece:	call   0x14ce0
   14ed3:	mov    esi,DWORD PTR [eax]
   14ed5:	lea    ecx,[ebp-0x20]
   14ed8:	call   0x11004
   14edd:	push   DWORD PTR [ebp-0x8]
   14ee0:	call   0x10836
   14ee5:	pop    ecx
   14ee6:	lea    eax,[esi+0x14]
   14ee9:	pop    esi
   14eea:	leave  
   14eeb:	ret    0x4
   14eee:	int3   
   14eef:	int3   
   14ef0:	int3   
   14ef1:	int3   
   14ef2:	int3   
   14ef3:	int3   
   14ef4:	mov    edi,edi
   14ef6:	push   esi
   14ef7:	mov    esi,ecx
   14ef9:	mov    BYTE PTR [esi+0x8],0x0
   14efd:	call   0x1319e
   14f02:	mov    eax,esi
   14f04:	pop    esi
   14f05:	ret    0x8
   14f08:	int3   
   14f09:	int3   
   14f0a:	int3   
   14f0b:	int3   
   14f0c:	int3   
   14f0d:	int3   
   14f0e:	mov    edi,edi
   14f10:	push   ebp
   14f11:	mov    ebp,esp
   14f13:	sub    esp,0x14
   14f16:	and    DWORD PTR [ebp-0x4],0x0
   14f1a:	push   esi
   14f1b:	lea    eax,[ebp-0x4]
   14f1e:	push   eax
   14f1f:	push   DWORD PTR [ebp+0x8]
   14f22:	mov    esi,ecx
   14f24:	lea    ecx,[ebp-0xc]
   14f27:	call   0x12176
   14f2c:	push   eax
   14f2d:	lea    eax,[ebp-0x14]
   14f30:	push   eax
   14f31:	mov    ecx,esi
   14f33:	call   0x14d0a
   14f38:	mov    ecx,DWORD PTR [ebp-0x8]
   14f3b:	mov    esi,DWORD PTR [eax]
   14f3d:	test   ecx,ecx
   14f3f:	je     0x14f46
   14f41:	call   0x10854
   14f46:	lea    eax,[esi+0x10]
   14f49:	pop    esi
   14f4a:	leave  
   14f4b:	ret    0x4
   14f4e:	int3   
   14f4f:	int3   
   14f50:	int3   
   14f51:	int3   
   14f52:	int3   
   14f53:	int3   
   14f54:	mov    edi,edi
   14f56:	push   ebp
   14f57:	mov    ebp,esp
   14f59:	sub    esp,0x20
   14f5c:	push   esi
   14f5d:	push   0xffffffff
   14f5f:	mov    esi,ecx
   14f61:	push   0x1abee
   14f66:	lea    ecx,[ebp-0x8]
   14f69:	call   0x110c6
   14f6e:	lea    eax,[ebp-0x8]
   14f71:	push   eax
   14f72:	push   DWORD PTR [ebp+0x8]
   14f75:	lea    ecx,[ebp-0x20]
   14f78:	call   0x12220
   14f7d:	push   eax
   14f7e:	lea    eax,[ebp-0x10]
   14f81:	push   eax
   14f82:	mov    ecx,esi
   14f84:	call   0x14d9c
   14f89:	mov    esi,DWORD PTR [eax]
   14f8b:	lea    ecx,[ebp-0x20]
   14f8e:	call   0x11004
   14f93:	push   DWORD PTR [ebp-0x8]
   14f96:	call   0x10836
   14f9b:	pop    ecx
   14f9c:	lea    eax,[esi+0x14]
   14f9f:	pop    esi
   14fa0:	leave  
   14fa1:	ret    0x4
   14fa4:	int3   
   14fa5:	int3   
   14fa6:	int3   
   14fa7:	int3   
   14fa8:	int3   
   14fa9:	int3   
   14faa:	mov    edi,edi
   14fac:	push   ebp
   14fad:	mov    ebp,esp
   14faf:	mov    ecx,DWORD PTR ds:0x70dd8
   14fb5:	push   ebx
   14fb6:	push   DWORD PTR [ebp+0xc]
   14fb9:	call   0x1482e
   14fbe:	mov    ebx,DWORD PTR [ebp+0x8]
   14fc1:	test   eax,eax
   14fc3:	jne    0x14fd1
   14fc5:	test   bl,0x1
   14fc8:	jne    0x14fd1
   14fca:	xor    al,al
   14fcc:	jmp    0x150e5
   14fd1:	mov    ecx,DWORD PTR ds:0x70dd8
   14fd7:	push   esi
   14fd8:	push   DWORD PTR [ebp+0xc]
   14fdb:	call   0x14e50
   14fe0:	mov    esi,eax
   14fe2:	test   bl,0x1
   14fe5:	je     0x15018
   14fe7:	mov    eax,DWORD PTR [ebp+0x1c]
   14fea:	push   DWORD PTR [ebp+0xc]
   14fed:	mov    ecx,esi
   14fef:	mov    DWORD PTR [esi+0x20],eax
   14ff2:	call   0x11f9a
   14ff7:	push   DWORD PTR [ebp+0x10]
   14ffa:	lea    ecx,[esi+0x8]
   14ffd:	call   0x11f9a
   15002:	push   DWORD PTR [ebp+0x14]
   15005:	lea    ecx,[esi+0x10]
   15008:	call   0x11f9a
   1500d:	push   DWORD PTR [ebp+0x18]
   15010:	lea    ecx,[esi+0x18]
   15013:	call   0x11f9a
   15018:	mov    DWORD PTR [ebp+0x8],ebx
   1501b:	and    DWORD PTR [ebp+0x8],0x2
   1501f:	je     0x1502f
   15021:	mov    eax,DWORD PTR [ebp+0x20]
   15024:	mov    ecx,DWORD PTR [eax]
   15026:	mov    DWORD PTR [esi+0x28],ecx
   15029:	mov    eax,DWORD PTR [eax+0x4]
   1502c:	mov    DWORD PTR [esi+0x2c],eax
   1502f:	mov    DWORD PTR [ebp+0x1c],ebx
   15032:	and    DWORD PTR [ebp+0x1c],0x4
   15036:	je     0x15046
   15038:	mov    eax,DWORD PTR [ebp+0x24]
   1503b:	mov    ecx,DWORD PTR [eax]
   1503d:	mov    DWORD PTR [esi+0x30],ecx
   15040:	mov    eax,DWORD PTR [eax+0x4]
   15043:	mov    DWORD PTR [esi+0x34],eax
   15046:	test   bl,0x10
   15049:	je     0x150e2
   1504f:	cmp    DWORD PTR [esi+0xc],0x0
   15053:	jbe    0x150e2
   15059:	mov    eax,ds:0x70dd8
   1505e:	mov    eax,DWORD PTR [eax+0x4]
   15061:	push   edi
   15062:	mov    edi,DWORD PTR [eax]
   15064:	mov    DWORD PTR [ebp+0x10],edi
   15067:	cmp    edi,eax
   15069:	je     0x150e1
   1506b:	push   DWORD PTR [ebp+0xc]
   1506e:	lea    ebx,[edi+0x10]
   15071:	push   ebx
   15072:	call   0x17ba4
   15077:	test   al,al
   15079:	je     0x150cc
   1507b:	lea    eax,[esi+0x8]
   1507e:	push   eax
   1507f:	add    edi,0x20
   15082:	push   edi
   15083:	call   0x17b94
   15088:	test   al,al
   1508a:	je     0x150cc
   1508c:	cmp    DWORD PTR [ebp+0x8],0x0
   15090:	je     0x150ac
   15092:	mov    ecx,DWORD PTR ds:0x70dd8
   15098:	push   ebx
   15099:	call   0x14e50
   1509e:	mov    ecx,DWORD PTR [ebp+0x20]
   150a1:	mov    edx,DWORD PTR [ecx]
   150a3:	mov    DWORD PTR [eax+0x28],edx
   150a6:	mov    ecx,DWORD PTR [ecx+0x4]
   150a9:	mov    DWORD PTR [eax+0x2c],ecx
   150ac:	cmp    DWORD PTR [ebp+0x1c],0x0
   150b0:	je     0x150cc
   150b2:	mov    ecx,DWORD PTR ds:0x70dd8
   150b8:	push   ebx
   150b9:	call   0x14e50
   150be:	mov    ecx,DWORD PTR [ebp+0x24]
   150c1:	mov    edx,DWORD PTR [ecx]
   150c3:	mov    DWORD PTR [eax+0x30],edx
   150c6:	mov    ecx,DWORD PTR [ecx+0x4]
   150c9:	mov    DWORD PTR [eax+0x34],ecx
   150cc:	lea    ecx,[ebp+0x10]
   150cf:	call   0x129fc
   150d4:	mov    edi,DWORD PTR [ebp+0x10]
   150d7:	mov    eax,ds:0x70dd8
   150dc:	cmp    edi,DWORD PTR [eax+0x4]
   150df:	jne    0x1506b
   150e1:	pop    edi
   150e2:	mov    al,0x1
   150e4:	pop    esi
   150e5:	pop    ebx
   150e6:	pop    ebp
   150e7:	ret    0x20
   150ea:	int3   
   150eb:	int3   
   150ec:	int3   
   150ed:	int3   
   150ee:	int3   
   150ef:	int3   
   150f0:	push   0x38
   150f2:	push   0x70108
   150f7:	call   0x1a874
   150fc:	xor    esi,esi
   150fe:	push   esi
   150ff:	push   esi
   15100:	push   esi
   15101:	push   esi
   15102:	push   0x70450
   15107:	call   DWORD PTR ds:0x1ba28
   1510d:	cmp    eax,esi
   1510f:	jge    0x15120
   15111:	mov    eax,DWORD PTR [ebp+0x8]
   15114:	mov    DWORD PTR [eax+0x8],0x4
   1511b:	jmp    0x15202
   15120:	mov    DWORD PTR [ebp-0x4],esi
   15123:	or     ebx,0xffffffff
   15126:	push   ebx
   15127:	mov    esi,DWORD PTR [ebp+0x8]
   1512a:	lea    eax,[esi+0x20]
   1512d:	push   eax
   1512e:	lea    ecx,[ebp-0x30]
   15131:	call   0x11f58
   15136:	mov    edi,DWORD PTR [ebp-0x2c]
   15139:	inc    edi
   1513a:	push   ebx
   1513b:	lea    eax,[edi+esi*1+0x20]
   1513f:	push   eax
   15140:	lea    ecx,[ebp-0x28]
   15143:	call   0x11f58
   15148:	mov    eax,DWORD PTR [ebp-0x24]
   1514b:	lea    edi,[edi+eax*1+0x1]
   1514f:	push   ebx
   15150:	lea    eax,[edi+esi*1+0x20]
   15154:	push   eax
   15155:	lea    ecx,[ebp-0x20]
   15158:	call   0x11f58
   1515d:	mov    eax,DWORD PTR [ebp-0x1c]
   15160:	lea    eax,[edi+eax*1+0x1]
   15164:	push   ebx
   15165:	lea    eax,[eax+esi*1+0x20]
   15169:	push   eax
   1516a:	lea    ecx,[ebp-0x48]
   1516d:	call   0x11f58
   15172:	mov    eax,DWORD PTR [esi+0xc]
   15175:	mov    ecx,DWORD PTR [esi+0x10]
   15178:	mov    DWORD PTR [ebp-0x40],ecx
   1517b:	mov    ecx,DWORD PTR [esi+0x14]
   1517e:	mov    DWORD PTR [ebp-0x3c],ecx
   15181:	mov    ecx,DWORD PTR [esi+0x18]
   15184:	mov    DWORD PTR [ebp-0x38],ecx
   15187:	mov    ecx,DWORD PTR [esi+0x1c]
   1518a:	mov    DWORD PTR [ebp-0x34],ecx
   1518d:	lea    ecx,[ebp-0x38]
   15190:	push   ecx
   15191:	lea    ecx,[ebp-0x40]
   15194:	push   ecx
   15195:	push   eax
   15196:	lea    eax,[ebp-0x48]
   15199:	push   eax
   1519a:	lea    eax,[ebp-0x20]
   1519d:	push   eax
   1519e:	lea    eax,[ebp-0x28]
   151a1:	push   eax
   151a2:	lea    eax,[ebp-0x30]
   151a5:	push   eax
   151a6:	push   DWORD PTR [esi+0x4]
   151a9:	call   0x14faa
   151ae:	xor    ecx,ecx
   151b0:	test   al,al
   151b2:	sete   cl
   151b5:	mov    DWORD PTR [esi+0x8],ecx
   151b8:	push   DWORD PTR [ebp-0x48]
   151bb:	call   0x10836
   151c0:	push   DWORD PTR [ebp-0x20]
   151c3:	call   0x10836
   151c8:	push   DWORD PTR [ebp-0x28]
   151cb:	call   0x10836
   151d0:	push   DWORD PTR [ebp-0x30]
   151d3:	call   0x10836
   151d8:	add    esp,0x10
   151db:	jmp    0x151ee
   151dd:	xor    eax,eax
   151df:	inc    eax
   151e0:	ret    
   151e1:	mov    esp,DWORD PTR [ebp-0x18]
   151e4:	mov    eax,DWORD PTR [ebp+0x8]
   151e7:	mov    DWORD PTR [eax+0x8],0x4
   151ee:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   151f5:	push   0x0
   151f7:	push   0x70450
   151fc:	call   DWORD PTR ds:0x1ba24
   15202:	call   0x1a8b9
   15207:	ret    0x4
   1520a:	int3   
   1520b:	int3   
   1520c:	int3   
   1520d:	int3   
   1520e:	int3   
   1520f:	int3   
   15210:	push   0x24
   15212:	push   0x70128
   15217:	call   0x1a874
   1521c:	xor    ebx,ebx
   1521e:	push   ebx
   1521f:	push   ebx
   15220:	push   ebx
   15221:	push   ebx
   15222:	push   0x70450
   15227:	call   DWORD PTR ds:0x1ba28
   1522d:	cmp    eax,ebx
   1522f:	jge    0x15240
   15231:	mov    eax,DWORD PTR [ebp+0x8]
   15234:	mov    DWORD PTR [eax+0x8],0x4
   1523b:	jmp    0x152f8
   15240:	mov    DWORD PTR [ebp-0x4],ebx
   15243:	push   0xffffffff
   15245:	mov    esi,DWORD PTR [ebp+0x8]
   15248:	lea    eax,[esi+0xc]
   1524b:	push   eax
   1524c:	lea    ecx,[ebp-0x24]
   1524f:	call   0x11f58
   15254:	push   0xffffffff
   15256:	mov    eax,DWORD PTR [ebp-0x20]
   15259:	lea    eax,[eax+esi*1+0xd]
   1525d:	push   eax
   1525e:	lea    ecx,[ebp-0x2c]
   15261:	call   0x11f58
   15266:	push   0xffffffff
   15268:	push   0x1ac88
   1526d:	lea    ecx,[ebp-0x34]
   15270:	call   0x11022
   15275:	lea    eax,[ebp-0x34]
   15278:	push   eax
   15279:	lea    eax,[ebp-0x2c]
   1527c:	push   eax
   1527d:	call   0x17b94
   15282:	mov    BYTE PTR [ebp-0x19],al
   15285:	push   DWORD PTR [ebp-0x34]
   15288:	call   0x10836
   1528d:	pop    ecx
   1528e:	lea    eax,[ebp-0x24]
   15291:	mov    ecx,DWORD PTR ds:0x70420
   15297:	push   eax
   15298:	cmp    BYTE PTR [ebp-0x19],bl
   1529b:	je     0x152a4
   1529d:	call   0x14864
   152a2:	jmp    0x152b4
   152a4:	call   0x14e9e
   152a9:	lea    ecx,[ebp-0x2c]
   152ac:	push   ecx
   152ad:	mov    ecx,eax
   152af:	call   0x11f9a
   152b4:	mov    DWORD PTR [esi+0x8],ebx
   152b7:	push   DWORD PTR [ebp-0x2c]
   152ba:	call   0x10836
   152bf:	push   DWORD PTR [ebp-0x24]
   152c2:	call   0x10836
   152c7:	pop    ecx
   152c8:	pop    ecx
   152c9:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   152d0:	jmp    0x152ec
   152d2:	xor    eax,eax
   152d4:	inc    eax
   152d5:	ret    
   152d6:	mov    esp,DWORD PTR [ebp-0x18]
   152d9:	mov    eax,DWORD PTR [ebp+0x8]
   152dc:	mov    DWORD PTR [eax+0x8],0x4
   152e3:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   152ea:	xor    ebx,ebx
   152ec:	push   ebx
   152ed:	push   0x70450
   152f2:	call   DWORD PTR ds:0x1ba24
   152f8:	call   0x1a8b9
   152fd:	ret    0x4
   15300:	int3   
   15301:	int3   
   15302:	int3   
   15303:	int3   
   15304:	int3   
   15305:	int3   
   15306:	push   0xc
   15308:	push   0x70148
   1530d:	call   0x1a874
   15312:	xor    edi,edi
   15314:	push   edi
   15315:	push   edi
   15316:	push   edi
   15317:	push   edi
   15318:	push   0x70450
   1531d:	call   DWORD PTR ds:0x1ba28
   15323:	cmp    eax,edi
   15325:	jge    0x15333
   15327:	mov    eax,DWORD PTR [ebp+0x8]
   1532a:	mov    DWORD PTR [eax+0x8],0x4
   15331:	jmp    0x153a9
   15333:	mov    DWORD PTR [ebp-0x4],edi
   15336:	mov    esi,DWORD PTR [ebp+0x8]
   15339:	lea    eax,[esi+0x4]
   1533c:	mov    ecx,DWORD PTR ds:0x704ac
   15342:	push   eax
   15343:	cmp    DWORD PTR [esi],edi
   15345:	jbe    0x15372
   15347:	call   0x14f0e
   1534c:	mov    ebx,eax
   1534e:	push   DWORD PTR [esi]
   15350:	lea    eax,[esi+0xc]
   15353:	push   eax
   15354:	lea    ecx,[ebp-0x1c]
   15357:	call   0x128f2
   1535c:	push   eax
   1535d:	mov    ecx,ebx
   1535f:	call   0x11572
   15364:	mov    ecx,DWORD PTR [ebp-0x1c]
   15367:	cmp    ecx,edi
   15369:	je     0x15377
   1536b:	call   0x10854
   15370:	jmp    0x15377
   15372:	call   0x14d34
   15377:	mov    DWORD PTR [esi+0x8],edi
   1537a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   15381:	jmp    0x1539d
   15383:	xor    eax,eax
   15385:	inc    eax
   15386:	ret    
   15387:	mov    esp,DWORD PTR [ebp-0x18]
   1538a:	mov    eax,DWORD PTR [ebp+0x8]
   1538d:	mov    DWORD PTR [eax+0x8],0x4
   15394:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1539b:	xor    edi,edi
   1539d:	push   edi
   1539e:	push   0x70450
   153a3:	call   DWORD PTR ds:0x1ba24
   153a9:	call   0x1a8b9
   153ae:	ret    0x4
   153b1:	int3   
   153b2:	int3   
   153b3:	int3   
   153b4:	int3   
   153b5:	int3   
   153b6:	mov    edi,edi
   153b8:	push   ebp
   153b9:	mov    ebp,esp
   153bb:	sub    esp,0x10
   153be:	and    DWORD PTR [ebp-0xc],0x0
   153c2:	xor    ecx,ecx
   153c4:	mov    DWORD PTR [ebp-0x10],0x1
   153cb:	xor    eax,eax
   153cd:	mov    dl,BYTE PTR [eax+0x6c48c]
   153d3:	xor    BYTE PTR [ebp+ecx*1-0x10],dl
   153d7:	inc    ecx
   153d8:	inc    eax
   153d9:	and    eax,0xf
   153dc:	cmp    ecx,0x8
   153df:	jne    0x153cd
   153e1:	push   ecx
   153e2:	lea    eax,[ebp-0x10]
   153e5:	push   eax
   153e6:	lea    ecx,[ebp-0x8]
   153e9:	mov    DWORD PTR [ebp-0x4],0x2
   153f0:	call   0x128f2
   153f5:	mov    ecx,DWORD PTR ds:0x704ac
   153fb:	push   eax
   153fc:	lea    eax,[ebp-0x4]
   153ff:	push   eax
   15400:	call   0x14f0e
   15405:	mov    ecx,eax
   15407:	call   0x11572
   1540c:	mov    ecx,DWORD PTR [ebp-0x8]
   1540f:	test   ecx,ecx
   15411:	je     0x15418
   15413:	call   0x10854
   15418:	leave  
   15419:	ret    
   1541a:	int3   
   1541b:	int3   
   1541c:	int3   
   1541d:	int3   
   1541e:	int3   
   1541f:	int3   
   15420:	push   0x868
   15425:	push   0x70168
   1542a:	call   0x1ab80
   1542f:	xor    ebx,ebx
   15431:	mov    DWORD PTR [ebp-0x838],ebx
   15437:	mov    DWORD PTR [ebp-0x4],ebx
   1543a:	mov    DWORD PTR [ebp-0x878],ebx
   15440:	xor    eax,eax
   15442:	lea    edi,[ebp-0x874]
   15448:	stos   DWORD PTR es:[edi],eax
   15449:	stos   DWORD PTR es:[edi],eax
   1544a:	stos   DWORD PTR es:[edi],eax
   1544b:	stos   DWORD PTR es:[edi],eax
   1544c:	stos   DWORD PTR es:[edi],eax
   1544d:	mov    BYTE PTR [ebp-0x840],bl
   15453:	mov    DWORD PTR [ebp-0x83c],ebx
   15459:	xor    eax,eax
   1545b:	mov    WORD PTR [ebp-0x81c],ax
   15462:	push   0x7fe
   15467:	push   ebx
   15468:	lea    eax,[ebp-0x81a]
   1546e:	push   eax
   1546f:	call   0x1a81e
   15474:	add    esp,0xc
   15477:	mov    eax,0x705b0
   1547c:	mov    edx,eax
   1547e:	mov    cx,WORD PTR [eax]
   15481:	inc    eax
   15482:	inc    eax
   15483:	cmp    cx,bx
   15486:	jne    0x1547e
   15488:	sub    eax,edx
   1548a:	lea    edi,[ebp-0x81c]
   15490:	dec    edi
   15491:	dec    edi
   15492:	mov    cx,WORD PTR [edi+0x2]
   15496:	inc    edi
   15497:	inc    edi
   15498:	cmp    cx,bx
   1549b:	jne    0x15492
   1549d:	mov    ecx,eax
   1549f:	mov    esi,edx
   154a1:	shr    ecx,0x2
   154a4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   154a6:	mov    ecx,eax
   154a8:	and    ecx,0x3
   154ab:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   154ad:	mov    eax,0x70348
   154b2:	mov    edx,eax
   154b4:	mov    cx,WORD PTR [eax]
   154b7:	inc    eax
   154b8:	inc    eax
   154b9:	cmp    cx,bx
   154bc:	jne    0x154b4
   154be:	sub    eax,edx
   154c0:	lea    edi,[ebp-0x81c]
   154c6:	dec    edi
   154c7:	dec    edi
   154c8:	mov    cx,WORD PTR [edi+0x2]
   154cc:	inc    edi
   154cd:	inc    edi
   154ce:	cmp    cx,bx
   154d1:	jne    0x154c8
   154d3:	mov    ecx,eax
   154d5:	mov    esi,edx
   154d7:	shr    ecx,0x2
   154da:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   154dc:	mov    ecx,eax
   154de:	and    ecx,0x3
   154e1:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   154e3:	lea    eax,[ebp-0x81c]
   154e9:	mov    DWORD PTR [ebp-0x85c],eax
   154ef:	lea    ecx,[eax+0x2]
   154f2:	mov    dx,WORD PTR [eax]
   154f5:	inc    eax
   154f6:	inc    eax
   154f7:	cmp    dx,bx
   154fa:	jne    0x154f2
   154fc:	sub    eax,ecx
   154fe:	sar    eax,1
   15500:	add    eax,eax
   15502:	mov    WORD PTR [ebp-0x85e],ax
   15509:	mov    WORD PTR [ebp-0x860],ax
   15510:	push   0x18
   15512:	pop    esi
   15513:	mov    DWORD PTR [ebp-0x878],esi
   15519:	mov    DWORD PTR [ebp-0x874],ebx
   1551f:	mov    DWORD PTR [ebp-0x86c],0x40
   15529:	lea    eax,[ebp-0x860]
   1552f:	mov    DWORD PTR [ebp-0x870],eax
   15535:	mov    DWORD PTR [ebp-0x868],ebx
   1553b:	mov    DWORD PTR [ebp-0x864],ebx
   15541:	push   0x1af30
   15546:	call   0x11482
   1554b:	lea    ecx,[ebp-0x878]
   15551:	push   ecx
   15552:	push   0x1
   15554:	lea    ecx,[ebp-0x838]
   1555a:	push   ecx
   1555b:	call   eax
   1555d:	cmp    eax,ebx
   1555f:	je     0x1556b
   15561:	call   0x153b6
   15566:	jmp    0x15659
   1556b:	mov    eax,0x1abee
   15570:	mov    DWORD PTR [ebp-0x854],eax
   15576:	lea    edx,[eax+0x2]
   15579:	mov    cx,WORD PTR [eax]
   1557c:	inc    eax
   1557d:	inc    eax
   1557e:	cmp    cx,bx
   15581:	jne    0x15579
   15583:	sub    eax,edx
   15585:	sar    eax,1
   15587:	mov    WORD PTR [ebp-0x856],ax
   1558e:	mov    WORD PTR [ebp-0x858],ax
   15595:	mov    DWORD PTR [ebp-0x844],ebx
   1559b:	lea    eax,[ebp-0x844]
   155a1:	push   eax
   155a2:	push   esi
   155a3:	lea    eax,[ebp-0x834]
   155a9:	push   eax
   155aa:	push   0x1
   155ac:	lea    eax,[ebp-0x858]
   155b2:	push   eax
   155b3:	push   DWORD PTR [ebp-0x838]
   155b9:	mov    esi,DWORD PTR ds:0x1ba5c
   155bf:	call   esi
   155c1:	cmp    eax,0x80000005
   155c6:	je     0x155cf
   155c8:	cmp    eax,0xc0000023
   155cd:	jne    0x1563b
   155cf:	push   DWORD PTR [ebp-0x844]
   155d5:	call   0x10802
   155da:	pop    ecx
   155db:	xor    ecx,ecx
   155dd:	cmp    eax,ebx
   155df:	setne  cl
   155e2:	mov    BYTE PTR [ebp-0x850],cl
   155e8:	mov    DWORD PTR [ebp-0x84c],eax
   155ee:	lea    eax,[ebp-0x850]
   155f4:	push   eax
   155f5:	lea    ecx,[ebp-0x840]
   155fb:	call   0x11fe4
   15600:	cmp    BYTE PTR [ebp-0x850],bl
   15606:	je     0x15614
   15608:	push   DWORD PTR [ebp-0x84c]
   1560e:	call   0x10836
   15613:	pop    ecx
   15614:	lea    eax,[ebp-0x844]
   1561a:	push   eax
   1561b:	push   DWORD PTR [ebp-0x844]
   15621:	mov    edi,DWORD PTR [ebp-0x83c]
   15627:	push   edi
   15628:	push   0x1
   1562a:	lea    eax,[ebp-0x858]
   15630:	push   eax
   15631:	push   DWORD PTR [ebp-0x838]
   15637:	call   esi
   15639:	jmp    0x15641
   1563b:	mov    edi,DWORD PTR [ebp-0x83c]
   15641:	cmp    eax,ebx
   15643:	je     0x1566b
   15645:	call   0x153b6
   1564a:	cmp    BYTE PTR [ebp-0x840],bl
   15650:	je     0x15659
   15652:	push   edi
   15653:	call   0x10836
   15658:	pop    ecx
   15659:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   15660:	call   0x156dd
   15665:	call   0x1abc8
   1566a:	ret    
   1566b:	cmp    DWORD PTR [edi+0x4],0x3
   1566f:	jne    0x15645
   15671:	mov    esi,DWORD PTR [edi+0xc]
   15674:	cmp    esi,ebx
   15676:	je     0x1564a
   15678:	cmp    esi,0xf4240
   1567e:	ja     0x1564a
   15680:	mov    DWORD PTR [ebp-0x848],0x2
   1568a:	lea    eax,[ebp-0x848]
   15690:	push   eax
   15691:	mov    ecx,DWORD PTR ds:0x704ac
   15697:	call   0x14f0e
   1569c:	mov    edi,eax
   1569e:	push   esi
   1569f:	mov    esi,DWORD PTR [ebp-0x83c]
   156a5:	mov    eax,DWORD PTR [esi+0x8]
   156a8:	add    eax,esi
   156aa:	push   eax
   156ab:	lea    ecx,[ebp-0x848]
   156b1:	call   0x128f2
   156b6:	push   eax
   156b7:	mov    ecx,edi
   156b9:	call   0x11572
   156be:	mov    ecx,DWORD PTR [ebp-0x848]
   156c4:	cmp    ecx,ebx
   156c6:	je     0x156cd
   156c8:	call   0x10854
   156cd:	cmp    BYTE PTR [ebp-0x840],bl
   156d3:	je     0x15659
   156d5:	push   esi
   156d6:	jmp    0x15653
   156db:	xor    ebx,ebx
   156dd:	cmp    DWORD PTR [ebp-0x838],ebx
   156e3:	je     0x156f1
   156e5:	push   DWORD PTR [ebp-0x838]
   156eb:	call   DWORD PTR ds:0x1bab4
   156f1:	ret    
   156f2:	int3   
   156f3:	int3   
   156f4:	int3   
   156f5:	int3   
   156f6:	int3   
   156f7:	int3   
   156f8:	push   0x844
   156fd:	push   0x70188
   15702:	call   0x1ab80
   15707:	xor    ebx,ebx
   15709:	mov    DWORD PTR [ebp-0x820],ebx
   1570f:	mov    DWORD PTR [ebp-0x4],ebx
   15712:	mov    DWORD PTR [ebp-0x84c],ebx
   15718:	xor    eax,eax
   1571a:	lea    edi,[ebp-0x848]
   15720:	stos   DWORD PTR es:[edi],eax
   15721:	stos   DWORD PTR es:[edi],eax
   15722:	stos   DWORD PTR es:[edi],eax
   15723:	stos   DWORD PTR es:[edi],eax
   15724:	stos   DWORD PTR es:[edi],eax
   15725:	mov    BYTE PTR [ebp-0x854],bl
   1572b:	mov    DWORD PTR [ebp-0x850],ebx
   15731:	xor    eax,eax
   15733:	mov    WORD PTR [ebp-0x81c],ax
   1573a:	push   0x7fe
   1573f:	push   ebx
   15740:	lea    eax,[ebp-0x81a]
   15746:	push   eax
   15747:	call   0x1a81e
   1574c:	add    esp,0xc
   1574f:	mov    eax,0x705b0
   15754:	mov    edx,eax
   15756:	mov    cx,WORD PTR [eax]
   15759:	inc    eax
   1575a:	inc    eax
   1575b:	cmp    cx,bx
   1575e:	jne    0x15756
   15760:	sub    eax,edx
   15762:	lea    edi,[ebp-0x81c]
   15768:	dec    edi
   15769:	dec    edi
   1576a:	mov    cx,WORD PTR [edi+0x2]
   1576e:	inc    edi
   1576f:	inc    edi
   15770:	cmp    cx,bx
   15773:	jne    0x1576a
   15775:	mov    ecx,eax
   15777:	mov    esi,edx
   15779:	shr    ecx,0x2
   1577c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1577e:	mov    ecx,eax
   15780:	and    ecx,0x3
   15783:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   15785:	mov    eax,0x70348
   1578a:	mov    edx,eax
   1578c:	mov    cx,WORD PTR [eax]
   1578f:	inc    eax
   15790:	inc    eax
   15791:	cmp    cx,bx
   15794:	jne    0x1578c
   15796:	sub    eax,edx
   15798:	lea    edi,[ebp-0x81c]
   1579e:	dec    edi
   1579f:	dec    edi
   157a0:	mov    cx,WORD PTR [edi+0x2]
   157a4:	inc    edi
   157a5:	inc    edi
   157a6:	cmp    cx,bx
   157a9:	jne    0x157a0
   157ab:	mov    ecx,eax
   157ad:	mov    esi,edx
   157af:	shr    ecx,0x2
   157b2:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   157b4:	mov    ecx,eax
   157b6:	and    ecx,0x3
   157b9:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   157bb:	lea    eax,[ebp-0x81c]
   157c1:	mov    DWORD PTR [ebp-0x830],eax
   157c7:	lea    ecx,[eax+0x2]
   157ca:	mov    dx,WORD PTR [eax]
   157cd:	inc    eax
   157ce:	inc    eax
   157cf:	cmp    dx,bx
   157d2:	jne    0x157ca
   157d4:	sub    eax,ecx
   157d6:	sar    eax,1
   157d8:	add    eax,eax
   157da:	mov    WORD PTR [ebp-0x832],ax
   157e1:	mov    WORD PTR [ebp-0x834],ax
   157e8:	mov    DWORD PTR [ebp-0x84c],0x18
   157f2:	mov    DWORD PTR [ebp-0x848],ebx
   157f8:	mov    DWORD PTR [ebp-0x840],0x40
   15802:	lea    eax,[ebp-0x834]
   15808:	mov    DWORD PTR [ebp-0x844],eax
   1580e:	mov    DWORD PTR [ebp-0x83c],ebx
   15814:	mov    DWORD PTR [ebp-0x838],ebx
   1581a:	push   0x1af30
   1581f:	call   0x11482
   15824:	lea    ecx,[ebp-0x84c]
   1582a:	push   ecx
   1582b:	push   0x3
   1582d:	lea    ecx,[ebp-0x820]
   15833:	push   ecx
   15834:	call   eax
   15836:	cmp    eax,ebx
   15838:	je     0x15853
   1583a:	push   0xfffffffe
   1583c:	lea    eax,[ebp-0x10]
   1583f:	push   eax
   15840:	push   0x70418
   15845:	call   0x1aa3c
   1584a:	add    esp,0xc
   1584d:	call   0x1abc8
   15852:	ret    
   15853:	mov    eax,0x1abee
   15858:	mov    DWORD PTR [ebp-0x824],eax
   1585e:	lea    edx,[eax+0x2]
   15861:	mov    cx,WORD PTR [eax]
   15864:	inc    eax
   15865:	inc    eax
   15866:	cmp    cx,bx
   15869:	jne    0x15861
   1586b:	sub    eax,edx
   1586d:	sar    eax,1
   1586f:	mov    WORD PTR [ebp-0x826],ax
   15876:	mov    WORD PTR [ebp-0x828],ax
   1587d:	mov    DWORD PTR [ebp-0x82c],0x2
   15887:	lea    eax,[ebp-0x82c]
   1588d:	push   eax
   1588e:	mov    ecx,DWORD PTR ds:0x704ac
   15894:	call   0x14f0e
   15899:	mov    eax,DWORD PTR [eax]
   1589b:	cmp    eax,ebx
   1589d:	jne    0x158a3
   1589f:	xor    edi,edi
   158a1:	jmp    0x158a6
   158a3:	mov    edi,DWORD PTR [eax+0x8]
   158a6:	cmp    eax,ebx
   158a8:	jne    0x158ae
   158aa:	xor    esi,esi
   158ac:	jmp    0x158b0
   158ae:	mov    esi,DWORD PTR [eax]
   158b0:	push   0x1af5c
   158b5:	call   0x11482
   158ba:	push   edi
   158bb:	push   esi
   158bc:	push   0x3
   158be:	push   ebx
   158bf:	lea    ecx,[ebp-0x828]
   158c5:	push   ecx
   158c6:	push   DWORD PTR [ebp-0x820]
   158cc:	call   eax
   158ce:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   158d5:	call   0x158e1
   158da:	jmp    0x1584d
   158df:	xor    ebx,ebx
   158e1:	cmp    DWORD PTR [ebp-0x820],ebx
   158e7:	je     0x158f5
   158e9:	push   DWORD PTR [ebp-0x820]
   158ef:	call   DWORD PTR ds:0x1bab4
   158f5:	ret    
   158f6:	int3   
   158f7:	int3   
   158f8:	int3   
   158f9:	int3   
   158fa:	int3   
   158fb:	int3   
   158fc:	mov    edi,edi
   158fe:	push   ebp
   158ff:	mov    ebp,esp
   15901:	sub    esp,0x10
   15904:	call   0x1855a
   15909:	test   al,al
   1590b:	jne    0x15915
   1590d:	mov    eax,DWORD PTR [ebp+0x8]
   15910:	jmp    0x159a9
   15915:	push   esi
   15916:	mov    esi,DWORD PTR [ebp+0x8]
   15919:	push   0xffffffff
   1591b:	push   esi
   1591c:	lea    ecx,[ebp-0x8]
   1591f:	call   0x110c6
   15924:	mov    ecx,DWORD PTR ds:0x70ff8
   1592a:	lea    eax,[ebp-0x8]
   1592d:	push   eax
   1592e:	lea    eax,[ebp+0x8]
   15931:	push   eax
   15932:	call   0x13200
   15937:	mov    eax,DWORD PTR [ebp+0x8]
   1593a:	mov    ecx,DWORD PTR ds:0x70ff8
   15940:	cmp    eax,DWORD PTR [ecx+0x4]
   15943:	jne    0x15974
   15945:	lea    eax,[ebp-0x8]
   15948:	push   eax
   15949:	lea    ecx,[ebp-0x10]
   1594c:	call   0x120d0
   15951:	mov    ecx,DWORD PTR ds:0x70ff8
   15957:	lea    eax,[ebp-0x10]
   1595a:	push   eax
   1595b:	lea    eax,[ebp-0x8]
   1595e:	push   eax
   1595f:	call   0x14f54
   15964:	mov    ecx,eax
   15966:	call   0x120f2
   1596b:	push   DWORD PTR [ebp-0x10]
   1596e:	call   0x10836
   15973:	pop    ecx
   15974:	mov    ecx,DWORD PTR ds:0x70ff8
   1597a:	lea    eax,[ebp-0x8]
   1597d:	push   eax
   1597e:	lea    eax,[ebp+0x8]
   15981:	push   eax
   15982:	call   0x13200
   15987:	mov    eax,DWORD PTR [ebp+0x8]
   1598a:	mov    ecx,DWORD PTR ds:0x70ff8
   15990:	cmp    eax,DWORD PTR [ecx+0x4]
   15993:	je     0x15998
   15995:	mov    esi,DWORD PTR [eax+0x14]
   15998:	call   0x18576
   1599d:	push   DWORD PTR [ebp-0x8]
   159a0:	call   0x10836
   159a5:	pop    ecx
   159a6:	mov    eax,esi
   159a8:	pop    esi
   159a9:	leave  
   159aa:	ret    0x4
   159ad:	int3   
   159ae:	int3   
   159af:	int3   
   159b0:	int3   
   159b1:	int3   
   159b2:	mov    edi,edi
   159b4:	push   ebp
   159b5:	mov    ebp,esp
   159b7:	sub    esp,0x10
   159ba:	push   esi
   159bb:	call   0x1855a
   159c0:	test   al,al
   159c2:	jne    0x159cc
   159c4:	mov    eax,DWORD PTR [ebp+0x8]
   159c7:	jmp    0x15a78
   159cc:	push   DWORD PTR [ebp+0xc]
   159cf:	lea    ecx,[ebp-0x8]
   159d2:	push   DWORD PTR [ebp+0x8]
   159d5:	call   0x120b0
   159da:	mov    ecx,DWORD PTR ds:0x70ff8
   159e0:	lea    eax,[ebp-0x8]
   159e3:	push   eax
   159e4:	lea    eax,[ebp+0xc]
   159e7:	push   eax
   159e8:	call   0x13200
   159ed:	mov    esi,DWORD PTR [ebp+0xc]
   159f0:	mov    eax,ds:0x70ff8
   159f5:	cmp    esi,DWORD PTR [eax+0x4]
   159f8:	jne    0x15a33
   159fa:	push   ecx
   159fb:	push   ecx
   159fc:	lea    eax,[ebp-0x8]
   159ff:	mov    ecx,esp
   15a01:	push   eax
   15a02:	call   0x120d0
   15a07:	lea    eax,[ebp-0x10]
   15a0a:	push   eax
   15a0b:	call   0x129b8
   15a10:	mov    ecx,DWORD PTR ds:0x70ff8
   15a16:	lea    eax,[ebp-0x10]
   15a19:	push   eax
   15a1a:	lea    eax,[ebp-0x8]
   15a1d:	push   eax
   15a1e:	call   0x14f54
   15a23:	mov    ecx,eax
   15a25:	call   0x120f2
   15a2a:	push   DWORD PTR [ebp-0x10]
   15a2d:	call   0x10836
   15a32:	pop    ecx
   15a33:	mov    eax,DWORD PTR [ebp+0x10]
   15a36:	movzx  eax,BYTE PTR [eax]
   15a39:	cmp    eax,0x100
   15a3e:	jge    0x15a56
   15a40:	mov    ecx,DWORD PTR ds:0x70ff8
   15a46:	lea    eax,[ebp-0x8]
   15a49:	push   eax
   15a4a:	lea    eax,[ebp+0xc]
   15a4d:	push   eax
   15a4e:	call   0x13200
   15a53:	mov    esi,DWORD PTR [ebp+0xc]
   15a56:	mov    eax,ds:0x70ff8
   15a5b:	cmp    esi,DWORD PTR [eax+0x4]
   15a5e:	je     0x15a65
   15a60:	mov    esi,DWORD PTR [esi+0x14]
   15a63:	jmp    0x15a68
   15a65:	mov    esi,DWORD PTR [ebp+0x8]
   15a68:	call   0x18576
   15a6d:	push   DWORD PTR [ebp-0x8]
   15a70:	call   0x10836
   15a75:	pop    ecx
   15a76:	mov    eax,esi
   15a78:	pop    esi
   15a79:	leave  
   15a7a:	ret    0xc
   15a7d:	int3   
   15a7e:	int3   
   15a7f:	int3   
   15a80:	int3   
   15a81:	int3   
   15a82:	mov    edi,edi
   15a84:	push   ebp
   15a85:	mov    ebp,esp
   15a87:	sub    esp,0x10
   15a8a:	push   esi
   15a8b:	call   0x1855a
   15a90:	test   al,al
   15a92:	jne    0x15a9c
   15a94:	mov    eax,DWORD PTR [ebp+0x8]
   15a97:	jmp    0x15b48
   15a9c:	push   DWORD PTR [ebp+0xc]
   15a9f:	lea    ecx,[ebp-0x8]
   15aa2:	push   DWORD PTR [ebp+0x8]
   15aa5:	call   0x11f58
   15aaa:	mov    ecx,DWORD PTR ds:0x70ffc
   15ab0:	lea    eax,[ebp-0x8]
   15ab3:	push   eax
   15ab4:	lea    eax,[ebp+0xc]
   15ab7:	push   eax
   15ab8:	call   0x12cce
   15abd:	mov    esi,DWORD PTR [ebp+0xc]
   15ac0:	mov    eax,ds:0x70ffc
   15ac5:	cmp    esi,DWORD PTR [eax+0x4]
   15ac8:	jne    0x15b03
   15aca:	push   ecx
   15acb:	push   ecx
   15acc:	lea    eax,[ebp-0x8]
   15acf:	mov    ecx,esp
   15ad1:	push   eax
   15ad2:	call   0x11f78
   15ad7:	lea    eax,[ebp-0x10]
   15ada:	push   eax
   15adb:	call   0x12070
   15ae0:	mov    ecx,DWORD PTR ds:0x70ffc
   15ae6:	lea    eax,[ebp-0x10]
   15ae9:	push   eax
   15aea:	lea    eax,[ebp-0x8]
   15aed:	push   eax
   15aee:	call   0x14e9e
   15af3:	mov    ecx,eax
   15af5:	call   0x11f9a
   15afa:	push   DWORD PTR [ebp-0x10]
   15afd:	call   0x10836
   15b02:	pop    ecx
   15b03:	mov    eax,DWORD PTR [ebp+0x10]
   15b06:	movzx  eax,BYTE PTR [eax]
   15b09:	cmp    eax,0x100
   15b0e:	jge    0x15b26
   15b10:	mov    ecx,DWORD PTR ds:0x70ffc
   15b16:	lea    eax,[ebp-0x8]
   15b19:	push   eax
   15b1a:	lea    eax,[ebp+0xc]
   15b1d:	push   eax
   15b1e:	call   0x12cce
   15b23:	mov    esi,DWORD PTR [ebp+0xc]
   15b26:	mov    eax,ds:0x70ffc
   15b2b:	cmp    esi,DWORD PTR [eax+0x4]
   15b2e:	je     0x15b35
   15b30:	mov    esi,DWORD PTR [esi+0x14]
   15b33:	jmp    0x15b38
   15b35:	mov    esi,DWORD PTR [ebp+0x8]
   15b38:	call   0x18576
   15b3d:	push   DWORD PTR [ebp-0x8]
   15b40:	call   0x10836
   15b45:	pop    ecx
   15b46:	mov    eax,esi
   15b48:	pop    esi
   15b49:	leave  
   15b4a:	ret    0xc
   15b4d:	int3   
   15b4e:	int3   
   15b4f:	int3   
   15b50:	int3   
   15b51:	int3   
   15b52:	mov    edi,edi
   15b54:	push   ebp
   15b55:	mov    ebp,esp
   15b57:	sub    esp,0x838
   15b5d:	mov    eax,ds:0x70418
   15b62:	xor    eax,ebp
   15b64:	mov    DWORD PTR [ebp-0x4],eax
   15b67:	mov    eax,DWORD PTR [ebp+0x8]
   15b6a:	push   ebx
   15b6b:	push   esi
   15b6c:	push   edi
   15b6d:	mov    DWORD PTR [ebp-0x808],eax
   15b73:	xor    eax,eax
   15b75:	push   0x7fe
   15b7a:	mov    WORD PTR [ebp-0x804],ax
   15b81:	xor    ebx,ebx
   15b83:	lea    eax,[ebp-0x802]
   15b89:	push   ebx
   15b8a:	push   eax
   15b8b:	call   0x1a81e
   15b90:	mov    eax,0x705b0
   15b95:	add    esp,0xc
   15b98:	mov    edx,eax
   15b9a:	mov    cx,WORD PTR [eax]
   15b9d:	inc    eax
   15b9e:	inc    eax
   15b9f:	cmp    cx,bx
   15ba2:	jne    0x15b9a
   15ba4:	sub    eax,edx
   15ba6:	lea    edi,[ebp-0x804]
   15bac:	dec    edi
   15bad:	dec    edi
   15bae:	mov    cx,WORD PTR [edi+0x2]
   15bb2:	inc    edi
   15bb3:	inc    edi
   15bb4:	cmp    cx,bx
   15bb7:	jne    0x15bae
   15bb9:	mov    ecx,eax
   15bbb:	shr    ecx,0x2
   15bbe:	mov    esi,edx
   15bc0:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   15bc2:	mov    ecx,eax
   15bc4:	mov    eax,DWORD PTR [ebp-0x808]
   15bca:	and    ecx,0x3
   15bcd:	add    eax,0x400
   15bd2:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   15bd4:	mov    edx,eax
   15bd6:	mov    cx,WORD PTR [eax]
   15bd9:	inc    eax
   15bda:	inc    eax
   15bdb:	cmp    cx,bx
   15bde:	jne    0x15bd6
   15be0:	sub    eax,edx
   15be2:	lea    edi,[ebp-0x804]
   15be8:	dec    edi
   15be9:	dec    edi
   15bea:	mov    cx,WORD PTR [edi+0x2]
   15bee:	inc    edi
   15bef:	inc    edi
   15bf0:	cmp    cx,bx
   15bf3:	jne    0x15bea
   15bf5:	mov    ecx,eax
   15bf7:	shr    ecx,0x2
   15bfa:	mov    esi,edx
   15bfc:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   15bfe:	mov    ecx,eax
   15c00:	and    ecx,0x3
   15c03:	lea    eax,[ebp-0x804]
   15c09:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   15c0b:	mov    DWORD PTR [ebp-0x818],eax
   15c11:	lea    ecx,[eax+0x2]
   15c14:	mov    dx,WORD PTR [eax]
   15c17:	inc    eax
   15c18:	inc    eax
   15c19:	cmp    dx,bx
   15c1c:	jne    0x15c14
   15c1e:	sub    eax,ecx
   15c20:	sar    eax,1
   15c22:	add    eax,eax
   15c24:	mov    WORD PTR [ebp-0x81a],ax
   15c2b:	mov    WORD PTR [ebp-0x81c],ax
   15c32:	lea    eax,[ebp-0x81c]
   15c38:	mov    DWORD PTR [ebp-0x82c],eax
   15c3e:	lea    eax,[ebp-0x838]
   15c44:	push   eax
   15c45:	push   0x1
   15c47:	push   ebx
   15c48:	push   ebx
   15c49:	lea    eax,[ebp-0x834]
   15c4f:	push   eax
   15c50:	push   0xf003f
   15c55:	lea    eax,[ebp-0x80c]
   15c5b:	push   eax
   15c5c:	mov    DWORD PTR [ebp-0x834],0x18
   15c66:	mov    DWORD PTR [ebp-0x830],ebx
   15c6c:	mov    DWORD PTR [ebp-0x828],0x40
   15c76:	mov    DWORD PTR [ebp-0x824],ebx
   15c7c:	mov    DWORD PTR [ebp-0x820],ebx
   15c82:	call   DWORD PTR ds:0x1ba60
   15c88:	test   eax,eax
   15c8a:	jl     0x15e32
   15c90:	push   0x1b07e
   15c95:	push   0x9
   15c97:	push   0x1b06a
   15c9c:	call   0x159b2
   15ca1:	mov    DWORD PTR [ebp-0x810],eax
   15ca7:	lea    edx,[eax+0x2]
   15caa:	mov    cx,WORD PTR [eax]
   15cad:	inc    eax
   15cae:	inc    eax
   15caf:	cmp    cx,bx
   15cb2:	jne    0x15caa
   15cb4:	sub    eax,edx
   15cb6:	sar    eax,1
   15cb8:	add    eax,eax
   15cba:	mov    WORD PTR [ebp-0x812],ax
   15cc1:	mov    WORD PTR [ebp-0x814],ax
   15cc8:	mov    eax,DWORD PTR [ebp-0x808]
   15cce:	lea    ecx,[eax+0x2]
   15cd1:	mov    dx,WORD PTR [eax]
   15cd4:	inc    eax
   15cd5:	inc    eax
   15cd6:	cmp    dx,bx
   15cd9:	jne    0x15cd1
   15cdb:	sub    eax,ecx
   15cdd:	sar    eax,1
   15cdf:	mov    esi,0x1af5c
   15ce4:	push   esi
   15ce5:	mov    edi,eax
   15ce7:	call   0x11482
   15cec:	inc    edi
   15ced:	movzx  ecx,di
   15cf0:	add    ecx,ecx
   15cf2:	push   ecx
   15cf3:	push   DWORD PTR [ebp-0x808]
   15cf9:	lea    ecx,[ebp-0x814]
   15cff:	push   0x1
   15d01:	push   ebx
   15d02:	push   ecx
   15d03:	push   DWORD PTR [ebp-0x80c]
   15d09:	call   eax
   15d0b:	test   eax,eax
   15d0d:	jl     0x15e32
   15d13:	push   0x1b034
   15d18:	push   0x5
   15d1a:	push   0x1b028
   15d1f:	mov    DWORD PTR [ebp-0x808],0x3
   15d29:	call   0x159b2
   15d2e:	mov    DWORD PTR [ebp-0x810],eax
   15d34:	lea    edx,[eax+0x2]
   15d37:	mov    cx,WORD PTR [eax]
   15d3a:	inc    eax
   15d3b:	inc    eax
   15d3c:	cmp    cx,bx
   15d3f:	jne    0x15d37
   15d41:	sub    eax,edx
   15d43:	sar    eax,1
   15d45:	add    eax,eax
   15d47:	push   esi
   15d48:	mov    WORD PTR [ebp-0x812],ax
   15d4f:	mov    WORD PTR [ebp-0x814],ax
   15d56:	call   0x11482
   15d5b:	push   0x4
   15d5d:	pop    edi
   15d5e:	push   edi
   15d5f:	lea    ecx,[ebp-0x808]
   15d65:	push   ecx
   15d66:	push   edi
   15d67:	push   ebx
   15d68:	lea    ecx,[ebp-0x814]
   15d6e:	push   ecx
   15d6f:	push   DWORD PTR [ebp-0x80c]
   15d75:	call   eax
   15d77:	test   eax,eax
   15d79:	jl     0x15e32
   15d7f:	push   0x1aff8
   15d84:	push   edi
   15d85:	push   0x1afee
   15d8a:	mov    DWORD PTR [ebp-0x808],0x1
   15d94:	call   0x159b2
   15d99:	mov    DWORD PTR [ebp-0x810],eax
   15d9f:	lea    ecx,[eax+0x2]
   15da2:	mov    dx,WORD PTR [eax]
   15da5:	inc    eax
   15da6:	inc    eax
   15da7:	cmp    dx,bx
   15daa:	jne    0x15da2
   15dac:	sub    eax,ecx
   15dae:	sar    eax,1
   15db0:	add    eax,eax
   15db2:	push   esi
   15db3:	mov    WORD PTR [ebp-0x812],ax
   15dba:	mov    WORD PTR [ebp-0x814],ax
   15dc1:	call   0x11482
   15dc6:	push   edi
   15dc7:	lea    ecx,[ebp-0x808]
   15dcd:	push   ecx
   15dce:	push   edi
   15dcf:	push   ebx
   15dd0:	lea    ecx,[ebp-0x814]
   15dd6:	push   ecx
   15dd7:	push   DWORD PTR [ebp-0x80c]
   15ddd:	call   eax
   15ddf:	test   eax,eax
   15de1:	jl     0x15e32
   15de3:	push   0x1af16
   15de8:	call   0x11482
   15ded:	lea    ecx,[ebp-0x81c]
   15df3:	push   ecx
   15df4:	call   eax
   15df6:	test   eax,eax
   15df8:	jl     0x15e32
   15dfa:	lea    eax,[ebp-0x804]
   15e00:	push   eax
   15e01:	push   DWORD PTR [ebp-0x80c]
   15e07:	call   0x117d2
   15e0c:	test   al,al
   15e0e:	je     0x15e26
   15e10:	push   0x1af44
   15e15:	call   0x11482
   15e1a:	push   DWORD PTR [ebp-0x80c]
   15e20:	call   eax
   15e22:	test   eax,eax
   15e24:	jl     0x15e32
   15e26:	push   DWORD PTR [ebp-0x80c]
   15e2c:	call   DWORD PTR ds:0x1bab4
   15e32:	mov    ecx,DWORD PTR [ebp-0x4]
   15e35:	pop    edi
   15e36:	pop    esi
   15e37:	xor    ecx,ebp
   15e39:	pop    ebx
   15e3a:	call   0x1a7c5
   15e3f:	leave  
   15e40:	ret    0x4
   15e43:	int3   
   15e44:	int3   
   15e45:	int3   
   15e46:	int3   
   15e47:	int3   
   15e48:	mov    edi,edi
   15e4a:	push   ebp
   15e4b:	mov    ebp,esp
   15e4d:	sub    esp,0x44
   15e50:	mov    eax,DWORD PTR [ebp+0xc]
   15e53:	mov    eax,DWORD PTR [eax]
   15e55:	push   esi
   15e56:	xor    esi,esi
   15e58:	push   0x1acbc
   15e5d:	mov    DWORD PTR [ebp-0x44],0x18
   15e64:	mov    DWORD PTR [ebp-0x40],esi
   15e67:	mov    DWORD PTR [ebp-0x38],0x200
   15e6e:	mov    DWORD PTR [ebp-0x3c],esi
   15e71:	mov    DWORD PTR [ebp-0x34],esi
   15e74:	mov    DWORD PTR [ebp-0x30],esi
   15e77:	mov    DWORD PTR [ebp-0x2c],eax
   15e7a:	mov    DWORD PTR [ebp-0x28],esi
   15e7d:	mov    DWORD PTR [ebp-0x10],esi
   15e80:	call   0x11482
   15e85:	lea    ecx,[ebp-0x2c]
   15e88:	push   ecx
   15e89:	lea    ecx,[ebp-0x44]
   15e8c:	push   ecx
   15e8d:	push   0x1f0fff
   15e92:	lea    ecx,[ebp-0x10]
   15e95:	push   ecx
   15e96:	call   eax
   15e98:	test   eax,eax
   15e9a:	jl     0x16119
   15ea0:	push   ebx
   15ea1:	push   edi
   15ea2:	mov    edi,0x1acd8
   15ea7:	mov    ebx,0x400
   15eac:	push   edi
   15ead:	mov    DWORD PTR [ebp-0x8],esi
   15eb0:	mov    DWORD PTR [ebp-0x14],ebx
   15eb3:	call   0x11482
   15eb8:	push   0x40
   15eba:	mov    esi,0x1000
   15ebf:	push   esi
   15ec0:	lea    ecx,[ebp-0x14]
   15ec3:	push   ecx
   15ec4:	push   0x0
   15ec6:	lea    ecx,[ebp-0x8]
   15ec9:	push   ecx
   15eca:	push   DWORD PTR [ebp-0x10]
   15ecd:	call   eax
   15ecf:	test   eax,eax
   15ed1:	jl     0x15edc
   15ed3:	mov    eax,DWORD PTR [ebp-0x8]
   15ed6:	mov    ecx,DWORD PTR [ebp+0xc]
   15ed9:	mov    DWORD PTR [ecx+0x8],eax
   15edc:	and    DWORD PTR [ebp-0x18],0x0
   15ee0:	push   edi
   15ee1:	mov    DWORD PTR [ebp-0x14],ebx
   15ee4:	call   0x11482
   15ee9:	push   0x4
   15eeb:	push   esi
   15eec:	lea    ecx,[ebp-0x14]
   15eef:	push   ecx
   15ef0:	push   0x0
   15ef2:	lea    ecx,[ebp-0x18]
   15ef5:	push   ecx
   15ef6:	push   DWORD PTR [ebp-0x10]
   15ef9:	call   eax
   15efb:	test   eax,eax
   15efd:	jl     0x15f08
   15eff:	mov    eax,DWORD PTR [ebp-0x18]
   15f02:	mov    ecx,DWORD PTR [ebp+0xc]
   15f05:	mov    DWORD PTR [ecx+0xc],eax
   15f08:	push   0x1ad08
   15f0d:	call   0x11482
   15f12:	lea    ecx,[ebp-0x1c]
   15f15:	push   ecx
   15f16:	push   DWORD PTR [ebp-0x2c]
   15f19:	call   eax
   15f1b:	test   eax,eax
   15f1d:	jl     0x16117
   15f23:	push   DWORD PTR [ebp-0x1c]
   15f26:	call   DWORD PTR ds:0x1ba34
   15f2c:	mov    ebx,DWORD PTR [ebp-0x8]
   15f2f:	and    DWORD PTR [ebp-0x4],0x0
   15f33:	test   ebx,ebx
   15f35:	je     0x160ff
   15f3b:	mov    edi,DWORD PTR [ebp-0x18]
   15f3e:	push   0x40
   15f40:	push   0x70308
   15f45:	push   edi
   15f46:	mov    DWORD PTR [ebp-0xc],edi
   15f49:	call   0x17c12
   15f4e:	push   0x1b0be
   15f53:	push   0x4
   15f55:	push   0x1b0b4
   15f5a:	call   0x159b2
   15f5f:	mov    esi,eax
   15f61:	mov    cx,WORD PTR [eax]
   15f64:	inc    eax
   15f65:	inc    eax
   15f66:	test   cx,cx
   15f69:	jne    0x15f61
   15f6b:	sub    eax,esi
   15f6d:	dec    edi
   15f6e:	dec    edi
   15f6f:	mov    cx,WORD PTR [edi+0x2]
   15f73:	inc    edi
   15f74:	inc    edi
   15f75:	test   cx,cx
   15f78:	jne    0x15f6f
   15f7a:	mov    ecx,eax
   15f7c:	shr    ecx,0x2
   15f7f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   15f81:	mov    ecx,eax
   15f83:	push   0x60
   15f85:	and    ecx,0x3
   15f88:	push   ebx
   15f89:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   15f8b:	mov    DWORD PTR [ebp-0x20],ebx
   15f8e:	call   0x17bc4
   15f93:	push   0x68
   15f95:	push   eax
   15f96:	call   0x17bc4
   15f9b:	push   DWORD PTR [ebp-0xc]
   15f9e:	push   eax
   15f9f:	call   0x17bdc
   15fa4:	push   0xb8
   15fa9:	push   eax
   15faa:	call   0x17bc4
   15faf:	push   DWORD PTR ds:0x70e58
   15fb5:	push   eax
   15fb6:	call   0x17bdc
   15fbb:	push   0xc00b
   15fc0:	push   eax
   15fc1:	call   0x17bf6
   15fc6:	push   0x74
   15fc8:	push   eax
   15fc9:	call   0x17bc4
   15fce:	push   0x2
   15fd0:	push   eax
   15fd1:	call   0x17bc4
   15fd6:	push   0xd0ff
   15fdb:	push   eax
   15fdc:	call   0x17bf6
   15fe1:	push   0x61
   15fe3:	push   eax
   15fe4:	call   0x17bc4
   15fe9:	mov    ebx,DWORD PTR [ebp+0x8]
   15fec:	mov    edi,eax
   15fee:	mov    esi,ebx
   15ff0:	push   0x0
   15ff2:	push   esi
   15ff3:	push   edi
   15ff4:	call   0x18388
   15ff9:	mov    ecx,eax
   15ffb:	sub    ecx,esi
   15ffd:	add    DWORD PTR [ebp-0x4],ecx
   16000:	add    edi,ecx
   16002:	cmp    DWORD PTR [ebp-0x4],0x5
   16006:	mov    esi,eax
   16008:	jb     0x15ff0
   1600a:	mov    eax,DWORD PTR [ebp-0x4]
   1600d:	push   edi
   1600e:	add    eax,ebx
   16010:	push   eax
   16011:	call   0x17c3a
   16016:	mov    eax,DWORD PTR [ebp-0x8]
   16019:	test   eax,eax
   1601b:	je     0x160ff
   16021:	add    eax,0x400
   16026:	lea    ecx,[eax-0x10]
   16029:	mov    DWORD PTR [ebp-0x24],ecx
   1602c:	mov    ecx,DWORD PTR [ebp-0x4]
   1602f:	lea    esi,[eax-0xc]
   16032:	push   esi
   16033:	lea    edi,[eax-0x4]
   16036:	lea    ebx,[eax-0x8]
   16039:	shr    ecx,0x2
   1603c:	lea    ecx,[ecx*4+0x14]
   16043:	push   0x40
   16045:	sub    eax,ecx
   16047:	push   ebx
   16048:	mov    DWORD PTR [ebp-0xc],eax
   1604b:	mov    eax,DWORD PTR [ebp+0x8]
   1604e:	mov    DWORD PTR [edi],eax
   16050:	push   edi
   16051:	mov    DWORD PTR [ebx],0x5
   16057:	and    DWORD PTR [esi],0x0
   1605a:	push   0xffffffff
   1605c:	call   DWORD PTR ds:0x70ddc
   16062:	test   eax,eax
   16064:	jl     0x160c9
   16066:	push   DWORD PTR [ebp-0x4]
   16069:	push   0x90
   1606e:	push   DWORD PTR [ebp-0xc]
   16071:	call   0x1a81e
   16076:	mov    eax,DWORD PTR [ebp-0x20]
   16079:	sub    eax,DWORD PTR [ebp+0x8]
   1607c:	add    esp,0xc
   1607f:	sub    eax,0x5
   16082:	push   eax
   16083:	mov    eax,DWORD PTR [ebp-0xc]
   16086:	inc    eax
   16087:	push   eax
   16088:	call   0x17bdc
   1608d:	push   0xe9
   16092:	push   DWORD PTR [ebp-0xc]
   16095:	call   0x17bc4
   1609a:	mov    eax,DWORD PTR [ebp-0x24]
   1609d:	and    DWORD PTR [eax],0x0
   160a0:	push   eax
   160a1:	push   DWORD PTR [ebp-0x4]
   160a4:	push   DWORD PTR [ebp-0xc]
   160a7:	push   DWORD PTR [ebp+0x8]
   160aa:	push   0xffffffff
   160ac:	call   DWORD PTR ds:0x70dd0
   160b2:	mov    eax,DWORD PTR [ebp+0xc]
   160b5:	mov    BYTE PTR [eax+0x10],0x1
   160b9:	lea    eax,[ebp-0x20]
   160bc:	push   eax
   160bd:	push   DWORD PTR [esi]
   160bf:	push   ebx
   160c0:	push   edi
   160c1:	push   0xffffffff
   160c3:	call   DWORD PTR ds:0x70ddc
   160c9:	mov    esi,DWORD PTR [ebp-0x8]
   160cc:	test   esi,esi
   160ce:	je     0x160ff
   160d0:	lea    eax,[esi+0x400]
   160d6:	lea    ecx,[eax-0x4]
   160d9:	lea    edx,[eax-0x8]
   160dc:	add    eax,0xfffffff4
   160df:	push   eax
   160e0:	push   0x20
   160e2:	push   edx
   160e3:	mov    DWORD PTR [ecx],esi
   160e5:	push   ecx
   160e6:	mov    DWORD PTR [edx],0x400
   160ec:	and    DWORD PTR [eax],0x0
   160ef:	push   0xffffffff
   160f1:	call   DWORD PTR ds:0x70ddc
   160f7:	test   eax,eax
   160f9:	jge    0x160ff
   160fb:	and    DWORD PTR [ebp-0x8],0x0
   160ff:	call   DWORD PTR ds:0x1ba30
   16105:	mov    ecx,DWORD PTR [ebp-0x1c]
   16108:	call   DWORD PTR ds:0x1bab0
   1610e:	push   DWORD PTR [ebp-0x10]
   16111:	call   DWORD PTR ds:0x1bab4
   16117:	pop    edi
   16118:	pop    ebx
   16119:	pop    esi
   1611a:	leave  
   1611b:	ret    0x8
   1611e:	int3   
   1611f:	int3   
   16120:	int3   
   16121:	int3   
   16122:	int3   
   16123:	int3   
   16124:	mov    edi,edi
   16126:	push   ebp
   16127:	mov    ebp,esp
   16129:	cmp    DWORD PTR ds:0x70e58,0x0
   16130:	push   esi
   16131:	mov    esi,DWORD PTR [ebp+0x10]
   16134:	jne    0x161ff
   1613a:	push   0x1b27e
   1613f:	push   0xc
   16141:	push   0x1b264
   16146:	call   0x159b2
   1614b:	push   eax
   1614c:	push   DWORD PTR [ebp+0x8]
   1614f:	call   0x10c86
   16154:	test   al,al
   16156:	je     0x161ff
   1615c:	mov    eax,DWORD PTR [esi+0x4]
   1615f:	push   0x1b23c
   16164:	push   0xc
   16166:	push   0x1b22e
   1616b:	mov    ds:0x70e50,eax
   16170:	call   0x15a82
   16175:	push   eax
   16176:	push   DWORD PTR [esi+0x4]
   16179:	call   0x11a22
   1617e:	push   0x1b20c
   16183:	push   0xc
   16185:	push   0x1b1fe
   1618a:	mov    ds:0x70e58,eax
   1618f:	call   0x15a82
   16194:	push   eax
   16195:	push   DWORD PTR [esi+0x4]
   16198:	call   0x11a22
   1619d:	push   0x1b1d2
   161a2:	push   0xc
   161a4:	push   0x1b1c4
   161a9:	mov    ds:0x70e5c,eax
   161ae:	call   0x15a82
   161b3:	push   eax
   161b4:	push   DWORD PTR [esi+0x4]
   161b7:	call   0x11a22
   161bc:	push   0x1b18a
   161c1:	push   0x5
   161c3:	push   0x1b184
   161c8:	mov    ds:0x70e60,eax
   161cd:	call   0x15a82
   161d2:	push   eax
   161d3:	push   DWORD PTR [esi+0x4]
   161d6:	call   0x11a22
   161db:	push   0x1b148
   161e0:	push   0x4
   161e2:	push   0x1b142
   161e7:	mov    ds:0x70e64,eax
   161ec:	call   0x15a82
   161f1:	push   eax
   161f2:	push   DWORD PTR [esi+0x4]
   161f5:	call   0x11a22
   161fa:	mov    ds:0x70e68,eax
   161ff:	cmp    DWORD PTR ds:0x70e54,0x0
   16206:	jne    0x1622e
   16208:	push   0x1b112
   1620d:	push   0x9
   1620f:	push   0x1b0fe
   16214:	call   0x159b2
   16219:	push   eax
   1621a:	push   DWORD PTR [ebp+0x8]
   1621d:	call   0x10c86
   16222:	test   al,al
   16224:	je     0x1622e
   16226:	mov    eax,DWORD PTR [esi+0x4]
   16229:	mov    ds:0x70e54,eax
   1622e:	pop    esi
   1622f:	pop    ebp
   16230:	ret    0xc
   16233:	int3   
   16234:	int3   
   16235:	int3   
   16236:	int3   
   16237:	int3   
   16238:	mov    edi,edi
   1623a:	push   ebp
   1623b:	mov    ebp,esp
   1623d:	sub    esp,0x4c
   16240:	push   ebx
   16241:	push   esi
   16242:	push   edi
   16243:	push   DWORD PTR [ebp+0xc]
   16246:	push   DWORD PTR [ebp+0x8]
   16249:	call   DWORD PTR ds:0x70de4
   1624f:	mov    DWORD PTR [ebp-0x8],eax
   16252:	xor    eax,eax
   16254:	xor    ebx,ebx
   16256:	mov    DWORD PTR [ebp-0x30],ebx
   16259:	lea    edi,[ebp-0x2c]
   1625c:	stos   DWORD PTR es:[edi],eax
   1625d:	stos   DWORD PTR es:[edi],eax
   1625e:	stos   DWORD PTR es:[edi],eax
   1625f:	stos   DWORD PTR es:[edi],eax
   16260:	xor    eax,eax
   16262:	mov    DWORD PTR [ebp-0x1c],ebx
   16265:	lea    edi,[ebp-0x18]
   16268:	stos   DWORD PTR es:[edi],eax
   16269:	stos   DWORD PTR es:[edi],eax
   1626a:	stos   DWORD PTR es:[edi],eax
   1626b:	stos   DWORD PTR es:[edi],eax
   1626c:	lea    eax,[ebp-0x30]
   1626f:	push   eax
   16270:	push   ebx
   16271:	call   0x10d14
   16276:	mov    BYTE PTR [ebp+0xf],al
   16279:	lea    eax,[ebp-0x1c]
   1627c:	push   eax
   1627d:	push   0x1
   1627f:	call   0x10d14
   16284:	mov    BYTE PTR [ebp-0x1],al
   16287:	mov    esi,0x1ae28
   1628c:	cmp    BYTE PTR [ebp+0xf],bl
   1628f:	je     0x162f3
   16291:	cmp    DWORD PTR [ebp-0x30],ebx
   16294:	je     0x162f3
   16296:	push   0x6
   16298:	pop    ecx
   16299:	xor    eax,eax
   1629b:	mov    DWORD PTR [ebp-0x4c],ebx
   1629e:	lea    edi,[ebp-0x48]
   162a1:	push   esi
   162a2:	rep stos DWORD PTR es:[edi],eax
   162a4:	call   0x11482
   162a9:	push   ebx
   162aa:	push   0x1c
   162ac:	lea    ecx,[ebp-0x4c]
   162af:	push   ecx
   162b0:	push   ebx
   162b1:	push   DWORD PTR [ebp+0x8]
   162b4:	call   eax
   162b6:	mov    eax,DWORD PTR [ebp-0x30]
   162b9:	cmp    DWORD PTR [ebp-0x44],eax
   162bc:	jne    0x162f3
   162be:	push   esi
   162bf:	mov    DWORD PTR [ebp+0xc],ebx
   162c2:	call   0x11482
   162c7:	push   ebx
   162c8:	push   0x4
   162ca:	lea    ecx,[ebp+0xc]
   162cd:	push   ecx
   162ce:	push   0x9
   162d0:	push   DWORD PTR [ebp+0x8]
   162d3:	call   eax
   162d5:	test   eax,eax
   162d7:	jge    0x162dc
   162d9:	mov    DWORD PTR [ebp+0xc],ebx
   162dc:	cmp    DWORD PTR [ebp+0xc],ebx
   162df:	je     0x162f3
   162e1:	lea    eax,[ebp-0x30]
   162e4:	push   eax
   162e5:	push   DWORD PTR [ebp+0xc]
   162e8:	call   0x15e48
   162ed:	push   ebx
   162ee:	call   0x10daa
   162f3:	cmp    BYTE PTR [ebp-0x1],bl
   162f6:	je     0x16364
   162f8:	cmp    DWORD PTR [ebp-0x1c],ebx
   162fb:	je     0x16364
   162fd:	cmp    BYTE PTR [ebp-0xc],bl
   16300:	jne    0x16364
   16302:	push   0x6
   16304:	pop    ecx
   16305:	xor    eax,eax
   16307:	mov    DWORD PTR [ebp-0x4c],ebx
   1630a:	lea    edi,[ebp-0x48]
   1630d:	push   esi
   1630e:	rep stos DWORD PTR es:[edi],eax
   16310:	call   0x11482
   16315:	push   ebx
   16316:	push   0x1c
   16318:	lea    ecx,[ebp-0x4c]
   1631b:	push   ecx
   1631c:	push   ebx
   1631d:	push   DWORD PTR [ebp+0x8]
   16320:	call   eax
   16322:	mov    eax,DWORD PTR [ebp-0x1c]
   16325:	cmp    DWORD PTR [ebp-0x44],eax
   16328:	jne    0x16364
   1632a:	push   esi
   1632b:	mov    DWORD PTR [ebp+0xc],ebx
   1632e:	call   0x11482
   16333:	push   ebx
   16334:	push   0x4
   16336:	lea    ecx,[ebp+0xc]
   16339:	push   ecx
   1633a:	push   0x9
   1633c:	push   DWORD PTR [ebp+0x8]
   1633f:	call   eax
   16341:	test   eax,eax
   16343:	jge    0x16348
   16345:	mov    DWORD PTR [ebp+0xc],ebx
   16348:	cmp    DWORD PTR [ebp+0xc],ebx
   1634b:	je     0x16364
   1634d:	lea    eax,[ebp-0x1c]
   16350:	push   eax
   16351:	push   DWORD PTR [ebp+0xc]
   16354:	call   0x11b34
   16359:	lea    eax,[ebp-0x1c]
   1635c:	push   eax
   1635d:	push   0x1
   1635f:	call   0x10d62
   16364:	mov    eax,DWORD PTR [ebp-0x8]
   16367:	pop    edi
   16368:	pop    esi
   16369:	pop    ebx
   1636a:	leave  
   1636b:	ret    0x8
   1636e:	int3   
   1636f:	int3   
   16370:	int3   
   16371:	int3   
   16372:	int3   
   16373:	int3   
   16374:	push   0x2c
   16376:	push   0x701a8
   1637b:	call   0x1a874
   16380:	xor    edi,edi
   16382:	mov    DWORD PTR [ebp-0x24],edi
   16385:	mov    ebx,DWORD PTR [ebp+0xc]
   16388:	mov    DWORD PTR [ebx+0x18],edi
   1638b:	mov    DWORD PTR [ebx+0x1c],edi
   1638e:	mov    eax,DWORD PTR [ebx+0x60]
   16391:	cmp    BYTE PTR [eax],0xe
   16394:	jne    0x167c2
   1639a:	mov    eax,DWORD PTR [eax+0xc]
   1639d:	mov    DWORD PTR [ebx+0x1c],0x84c
   163a4:	mov    ecx,0x22c05c
   163a9:	cmp    eax,ecx
   163ab:	ja     0x166b2
   163b1:	je     0x1669a
   163b7:	add    ecx,0xffffffd8
   163ba:	cmp    eax,ecx
   163bc:	ja     0x164cc
   163c2:	je     0x164af
   163c8:	sub    eax,0x22c020
   163cd:	je     0x16479
   163d3:	push   0x4
   163d5:	pop    esi
   163d6:	sub    eax,esi
   163d8:	je     0x16443
   163da:	sub    eax,esi
   163dc:	je     0x16428
   163de:	sub    eax,esi
   163e0:	je     0x1641b
   163e2:	sub    eax,esi
   163e4:	jne    0x16756
   163ea:	mov    esi,DWORD PTR [ebx+0xc]
   163ed:	mov    eax,DWORD PTR [esi]
   163ef:	add    eax,0x20
   163f2:	mov    DWORD PTR [ebx+0x1c],eax
   163f5:	push   0xffffffff
   163f7:	lea    eax,[esi+0x20]
   163fa:	push   eax
   163fb:	lea    ecx,[ebp-0x34]
   163fe:	call   0x11022
   16403:	push   esi
   16404:	lea    eax,[ebp-0x34]
   16407:	push   eax
   16408:	call   0x144ce
   1640d:	push   DWORD PTR [ebp-0x34]
   16410:	call   0x10836
   16415:	pop    ecx
   16416:	jmp    0x167c2
   1641b:	push   DWORD PTR [ebx+0xc]
   1641e:	call   0x150f0
   16423:	jmp    0x167bf
   16428:	mov    ecx,DWORD PTR ds:0x70dd8
   1642e:	call   0x14cc2
   16433:	mov    ecx,DWORD PTR ds:0x704ac
   16439:	call   0x14d7e
   1643e:	jmp    0x167c2
   16443:	mov    eax,DWORD PTR [ebx+0xc]
   16446:	mov    DWORD PTR [ebx+0x1c],0x10
   1644d:	mov    ecx,DWORD PTR [eax]
   1644f:	cmp    ecx,edi
   16451:	jl     0x167c2
   16457:	cmp    ecx,0x6
   1645a:	jge    0x167c2
   16460:	mov    edx,DWORD PTR [eax+0x8]
   16463:	mov    DWORD PTR [ecx*8+0x70e20],edx
   1646a:	mov    eax,DWORD PTR [eax+0xc]
   1646d:	mov    DWORD PTR [ecx*8+0x70e24],eax
   16474:	jmp    0x167c2
   16479:	mov    eax,DWORD PTR [ebx+0xc]
   1647c:	mov    DWORD PTR [ebx+0x1c],0x10
   16483:	mov    ecx,DWORD PTR [eax]
   16485:	cmp    ecx,edi
   16487:	jl     0x167c2
   1648d:	cmp    ecx,0x6
   16490:	jge    0x167c2
   16496:	mov    edx,DWORD PTR [ecx*8+0x70e20]
   1649d:	mov    DWORD PTR [eax+0x8],edx
   164a0:	mov    ecx,DWORD PTR [ecx*8+0x70e24]
   164a7:	mov    DWORD PTR [eax+0xc],ecx
   164aa:	jmp    0x167c2
   164af:	mov    esi,DWORD PTR [ebx+0xc]
   164b2:	push   esi
   164b3:	call   0x15306
   164b8:	cmp    DWORD PTR [esi+0x4],0x2
   164bc:	jne    0x167bf
   164c2:	call   0x156f8
   164c7:	jmp    0x167bf
   164cc:	sub    eax,0x22c038
   164d1:	je     0x16681
   164d7:	push   0x4
   164d9:	pop    esi
   164da:	sub    eax,esi
   164dc:	je     0x165fd
   164e2:	sub    eax,0x10
   164e5:	je     0x165f3
   164eb:	sub    eax,esi
   164ed:	jne    0x16756
   164f3:	mov    DWORD PTR [ebx+0x1c],edi
   164f6:	mov    esi,DWORD PTR [ebx+0xc]
   164f9:	mov    DWORD PTR [ebp-0x20],esi
   164fc:	push   0xffffffff
   164fe:	push   0x1ac88
   16503:	lea    ecx,[ebp-0x2c]
   16506:	call   0x11022
   1650b:	xor    edi,edi
   1650d:	inc    edi
   1650e:	mov    DWORD PTR [esi+0x8],edi
   16511:	xor    eax,eax
   16513:	push   eax
   16514:	push   eax
   16515:	push   eax
   16516:	push   eax
   16517:	push   0x70450
   1651c:	call   DWORD PTR ds:0x1ba28
   16522:	test   eax,eax
   16524:	jge    0x1652e
   16526:	push   DWORD PTR [ebp-0x2c]
   16529:	jmp    0x16410
   1652e:	and    DWORD PTR [ebp-0x4],0x0
   16532:	mov    DWORD PTR [ebp-0x4],edi
   16535:	mov    eax,DWORD PTR [esi]
   16537:	add    eax,0x20
   1653a:	mov    DWORD PTR [ebx+0x1c],eax
   1653d:	mov    eax,ds:0x70dd8
   16542:	mov    ebx,DWORD PTR [eax+0x4]
   16545:	mov    eax,DWORD PTR [ebx]
   16547:	mov    DWORD PTR [ebp+0xc],eax
   1654a:	and    DWORD PTR [ebp-0x1c],0x0
   1654e:	mov    edi,DWORD PTR [esi+0x20]
   16551:	cmp    DWORD PTR [ebp-0x1c],edi
   16554:	jge    0x16568
   16556:	cmp    DWORD PTR [ebp+0xc],ebx
   16559:	je     0x16568
   1655b:	lea    ecx,[ebp+0xc]
   1655e:	call   0x129fc
   16563:	inc    DWORD PTR [ebp-0x1c]
   16566:	jmp    0x16551
   16568:	mov    eax,DWORD PTR [ebp+0xc]
   1656b:	cmp    eax,ebx
   1656d:	je     0x16581
   1656f:	and    DWORD PTR [esi+0x8],0x0
   16573:	add    eax,0x10
   16576:	push   eax
   16577:	lea    ecx,[ebp-0x2c]
   1657a:	call   0x11f9a
   1657f:	jmp    0x16588
   16581:	mov    DWORD PTR [esi+0x8],0x1
   16588:	and    DWORD PTR [esi+0x4],0x0
   1658c:	and    DWORD PTR [ebp-0x4],0x0
   16590:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   16597:	call   0x165e5
   1659c:	cmp    DWORD PTR [esi+0x8],0x0
   165a0:	jne    0x16526
   165a2:	push   esi
   165a3:	lea    eax,[ebp-0x2c]
   165a6:	push   eax
   165a7:	call   0x144ce
   165ac:	jmp    0x16526
   165b1:	xor    eax,eax
   165b3:	inc    eax
   165b4:	ret    
   165b5:	mov    esp,DWORD PTR [ebp-0x18]
   165b8:	mov    eax,DWORD PTR [ebp-0x20]
   165bb:	mov    DWORD PTR [eax+0x8],0x4
   165c2:	push   DWORD PTR [ebp-0x2c]
   165c5:	call   0x10836
   165ca:	push   0xfffffffe
   165cc:	lea    eax,[ebp-0x10]
   165cf:	push   eax
   165d0:	push   0x70418
   165d5:	call   0x1aa3c
   165da:	add    esp,0x10
   165dd:	jmp    0x167c2
   165e2:	mov    esi,DWORD PTR [ebp-0x20]
   165e5:	push   0x0
   165e7:	push   0x70450
   165ec:	call   DWORD PTR ds:0x1ba24
   165f2:	ret    
   165f3:	call   0x10e66
   165f8:	jmp    0x167c2
   165fd:	mov    eax,DWORD PTR [ebx+0xc]
   16600:	mov    ecx,DWORD PTR ds:0x70304
   16606:	mov    esi,eax
   16608:	sub    esi,ecx
   1660a:	push   0x2
   1660c:	pop    edi
   1660d:	movzx  edx,WORD PTR [ecx]
   16610:	mov    WORD PTR [esi+ecx*1],dx
   16614:	add    ecx,edi
   16616:	test   dx,dx
   16619:	jne    0x1660d
   1661b:	mov    ecx,0x70348
   16620:	lea    esi,[eax+0x50]
   16623:	sub    esi,ecx
   16625:	movzx  edx,WORD PTR [ecx]
   16628:	mov    WORD PTR [esi+ecx*1],dx
   1662c:	add    ecx,edi
   1662e:	test   dx,dx
   16631:	jne    0x16625
   16633:	mov    ecx,0x70308
   16638:	lea    esi,[eax+0x90]
   1663e:	sub    esi,ecx
   16640:	movzx  edx,WORD PTR [ecx]
   16643:	mov    WORD PTR [esi+ecx*1],dx
   16647:	add    ecx,edi
   16649:	test   dx,dx
   1664c:	jne    0x16640
   1664e:	mov    ecx,0x70388
   16653:	lea    esi,[eax+0xd0]
   16659:	sub    esi,ecx
   1665b:	movzx  edx,WORD PTR [ecx]
   1665e:	mov    WORD PTR [esi+ecx*1],dx
   16662:	add    ecx,edi
   16664:	test   dx,dx
   16667:	jne    0x1665b
   16669:	lea    edi,[eax+0x40]
   1666c:	mov    esi,0x6c48c
   16671:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   16672:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   16673:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   16674:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   16675:	mov    DWORD PTR [ebx+0x1c],0x110
   1667c:	jmp    0x167c2
   16681:	mov    eax,DWORD PTR [ebx+0xc]
   16684:	mov    ecx,DWORD PTR [eax]
   16686:	add    ecx,0xc
   16689:	mov    DWORD PTR [ebx+0x1c],ecx
   1668c:	push   eax
   1668d:	push   DWORD PTR [eax+0x4]
   16690:	call   0x14728
   16695:	jmp    0x167c2
   1669a:	mov    eax,DWORD PTR [ebx+0xc]
   1669d:	mov    ecx,DWORD PTR [eax]
   1669f:	mov    DWORD PTR ds:0x70e08,ecx
   166a5:	mov    eax,DWORD PTR [eax+0x4]
   166a8:	mov    ds:0x70e0c,eax
   166ad:	jmp    0x167bf
   166b2:	mov    ecx,0x22c078
   166b7:	cmp    eax,ecx
   166b9:	ja     0x16740
   166bf:	je     0x16736
   166c1:	sub    eax,0x22c060
   166c6:	je     0x16718
   166c8:	push   0x4
   166ca:	pop    esi
   166cb:	sub    eax,esi
   166cd:	je     0x1670b
   166cf:	sub    eax,esi
   166d1:	je     0x166fc
   166d3:	sub    eax,esi
   166d5:	je     0x166e8
   166d7:	sub    eax,esi
   166d9:	jne    0x16756
   166db:	push   DWORD PTR [ebx+0xc]
   166de:	call   0x10dd6
   166e3:	jmp    0x167bf
   166e8:	mov    edi,DWORD PTR [ebx+0xc]
   166eb:	push   DWORD PTR [edi]
   166ed:	call   0x10f72
   166f2:	mov    DWORD PTR [edi],eax
   166f4:	mov    DWORD PTR [ebx+0x1c],esi
   166f7:	jmp    0x167c2
   166fc:	mov    eax,DWORD PTR [ebx+0xc]
   166ff:	push   DWORD PTR [eax]
   16701:	call   0x10f2e
   16706:	jmp    0x167bf
   1670b:	push   DWORD PTR [ebx+0xc]
   1670e:	call   0x10e84
   16713:	jmp    0x167bf
   16718:	mov    DWORD PTR [ebx+0x1c],0x8
   1671f:	mov    ebx,DWORD PTR [ebx+0xc]
   16722:	mov    eax,ds:0x70e08
   16727:	mov    DWORD PTR [ebx],eax
   16729:	mov    eax,ds:0x70e0c
   1672e:	mov    DWORD PTR [ebx+0x4],eax
   16731:	jmp    0x167c2
   16736:	push   DWORD PTR [ebx+0xc]
   16739:	call   0x15b52
   1673e:	jmp    0x167bf
   16740:	sub    eax,0x22c07c
   16745:	je     0x167ac
   16747:	push   0x4
   16749:	pop    esi
   1674a:	sub    eax,esi
   1674c:	je     0x16794
   1674e:	sub    eax,esi
   16750:	je     0x1678a
   16752:	sub    eax,esi
   16754:	je     0x1675f
   16756:	mov    DWORD PTR [ebp-0x24],0xc0000010
   1675d:	jmp    0x167bf
   1675f:	mov    esi,DWORD PTR [ebx+0xc]
   16762:	mov    eax,DWORD PTR [esi]
   16764:	add    eax,0xc
   16767:	mov    DWORD PTR [ebx+0x1c],eax
   1676a:	push   0xffffffff
   1676c:	lea    eax,[esi+0xc]
   1676f:	push   eax
   16770:	lea    ecx,[ebp-0x3c]
   16773:	call   0x11022
   16778:	push   esi
   16779:	lea    eax,[ebp-0x3c]
   1677c:	push   eax
   1677d:	call   0x1463e
   16782:	push   DWORD PTR [ebp-0x3c]
   16785:	jmp    0x16410
   1678a:	push   DWORD PTR [ebx+0xc]
   1678d:	call   0x15210
   16792:	jmp    0x167bf
   16794:	mov    DWORD PTR [ebx+0x1c],0x8
   1679b:	mov    ebx,DWORD PTR [ebx+0xc]
   1679e:	mov    eax,ds:0x70e10
   167a3:	mov    DWORD PTR [ebx],eax
   167a5:	mov    eax,ds:0x70e14
   167aa:	jmp    0x1672e
   167ac:	mov    eax,DWORD PTR [ebx+0xc]
   167af:	mov    ecx,DWORD PTR [eax]
   167b1:	mov    DWORD PTR ds:0x70e10,ecx
   167b7:	mov    eax,DWORD PTR [eax+0x4]
   167ba:	mov    ds:0x70e14,eax
   167bf:	mov    DWORD PTR [ebx+0x1c],edi
   167c2:	mov    eax,DWORD PTR [ebp-0x24]
   167c5:	call   0x1a8b9
   167ca:	ret    0x8
   167cd:	int3   
   167ce:	int3   
   167cf:	int3   
   167d0:	int3   
   167d1:	int3   
   167d2:	push   0x848
   167d7:	push   0x701d0
   167dc:	call   0x1ab80
   167e1:	xor    ebx,ebx
   167e3:	mov    BYTE PTR [ebp-0x81d],bl
   167e9:	xor    eax,eax
   167eb:	mov    WORD PTR [ebp-0x81c],ax
   167f2:	push   0x7fe
   167f7:	push   ebx
   167f8:	lea    eax,[ebp-0x81a]
   167fe:	push   eax
   167ff:	call   0x1a81e
   16804:	add    esp,0xc
   16807:	push   0x1b314
   1680c:	push   0x15
   1680e:	push   0x1b2e8
   16813:	call   0x159b2
   16818:	mov    edx,eax
   1681a:	mov    cx,WORD PTR [eax]
   1681d:	inc    eax
   1681e:	inc    eax
   1681f:	cmp    cx,bx
   16822:	jne    0x1681a
   16824:	sub    eax,edx
   16826:	lea    edi,[ebp-0x81c]
   1682c:	dec    edi
   1682d:	dec    edi
   1682e:	mov    cx,WORD PTR [edi+0x2]
   16832:	inc    edi
   16833:	inc    edi
   16834:	cmp    cx,bx
   16837:	jne    0x1682e
   16839:	mov    ecx,eax
   1683b:	mov    esi,edx
   1683d:	shr    ecx,0x2
   16840:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   16842:	mov    ecx,eax
   16844:	and    ecx,0x3
   16847:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   16849:	mov    eax,0x70308
   1684e:	mov    edx,eax
   16850:	mov    cx,WORD PTR [eax]
   16853:	inc    eax
   16854:	inc    eax
   16855:	cmp    cx,bx
   16858:	jne    0x16850
   1685a:	sub    eax,edx
   1685c:	lea    edi,[ebp-0x81c]
   16862:	dec    edi
   16863:	dec    edi
   16864:	mov    cx,WORD PTR [edi+0x2]
   16868:	inc    edi
   16869:	inc    edi
   1686a:	cmp    cx,bx
   1686d:	jne    0x16864
   1686f:	mov    ecx,eax
   16871:	mov    esi,edx
   16873:	shr    ecx,0x2
   16876:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   16878:	mov    ecx,eax
   1687a:	and    ecx,0x3
   1687d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1687f:	push   0x1b2ba
   16884:	push   0x4
   16886:	push   0x1b0b4
   1688b:	call   0x159b2
   16890:	mov    edx,eax
   16892:	mov    cx,WORD PTR [eax]
   16895:	inc    eax
   16896:	inc    eax
   16897:	cmp    cx,bx
   1689a:	jne    0x16892
   1689c:	sub    eax,edx
   1689e:	lea    edi,[ebp-0x81c]
   168a4:	dec    edi
   168a5:	dec    edi
   168a6:	mov    cx,WORD PTR [edi+0x2]
   168aa:	inc    edi
   168ab:	inc    edi
   168ac:	cmp    cx,bx
   168af:	jne    0x168a6
   168b1:	mov    ecx,eax
   168b3:	mov    esi,edx
   168b5:	shr    ecx,0x2
   168b8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   168ba:	mov    ecx,eax
   168bc:	and    ecx,0x3
   168bf:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   168c1:	lea    eax,[ebp-0x81c]
   168c7:	push   eax
   168c8:	lea    eax,[ebp-0x858]
   168ce:	push   eax
   168cf:	call   DWORD PTR ds:0x1ba08
   168d5:	mov    DWORD PTR [ebp-0x824],ebx
   168db:	xor    eax,eax
   168dd:	lea    edi,[ebp-0x84c]
   168e3:	stos   DWORD PTR es:[edi],eax
   168e4:	stos   DWORD PTR es:[edi],eax
   168e5:	stos   DWORD PTR es:[edi],eax
   168e6:	stos   DWORD PTR es:[edi],eax
   168e7:	stos   DWORD PTR es:[edi],eax
   168e8:	mov    DWORD PTR [ebp-0x830],ebx
   168ee:	xor    eax,eax
   168f0:	lea    edi,[ebp-0x82c]
   168f6:	stos   DWORD PTR es:[edi],eax
   168f7:	mov    DWORD PTR [ebp-0x850],0x18
   16901:	mov    DWORD PTR [ebp-0x84c],ebx
   16907:	mov    DWORD PTR [ebp-0x844],0x240
   16911:	lea    eax,[ebp-0x858]
   16917:	mov    DWORD PTR [ebp-0x848],eax
   1691d:	mov    DWORD PTR [ebp-0x840],ebx
   16923:	mov    DWORD PTR [ebp-0x83c],ebx
   16929:	push   0x1afb2
   1692e:	call   0x11482
   16933:	push   ebx
   16934:	push   ebx
   16935:	push   0x60
   16937:	push   0x1
   16939:	push   ebx
   1693a:	push   0x80
   1693f:	push   ebx
   16940:	lea    ecx,[ebp-0x830]
   16946:	push   ecx
   16947:	lea    ecx,[ebp-0x850]
   1694d:	push   ecx
   1694e:	push   0x100001
   16953:	lea    ecx,[ebp-0x824]
   16959:	push   ecx
   1695a:	call   eax
   1695c:	cmp    eax,ebx
   1695e:	jge    0x16967
   16960:	xor    al,al
   16962:	jmp    0x169fb
   16967:	mov    DWORD PTR [ebp-0x4],ebx
   1696a:	mov    esi,DWORD PTR [ebp+0xc]
   1696d:	mov    eax,0x10000
   16972:	cmp    esi,eax
   16974:	jbe    0x16978
   16976:	mov    esi,eax
   16978:	push   esi
   16979:	call   0x10802
   1697e:	pop    ecx
   1697f:	mov    DWORD PTR [ebp-0x828],eax
   16985:	mov    DWORD PTR [ebp-0x838],ebx
   1698b:	xor    eax,eax
   1698d:	lea    edi,[ebp-0x834]
   16993:	stos   DWORD PTR es:[edi],eax
   16994:	push   ebx
   16995:	lea    eax,[ebp-0x838]
   1699b:	push   eax
   1699c:	push   esi
   1699d:	push   DWORD PTR [ebp-0x828]
   169a3:	lea    eax,[ebp-0x830]
   169a9:	push   eax
   169aa:	push   ebx
   169ab:	push   ebx
   169ac:	push   ebx
   169ad:	push   DWORD PTR [ebp-0x824]
   169b3:	call   DWORD PTR ds:0x1ba64
   169b9:	cmp    eax,ebx
   169bb:	jl     0x169e2
   169bd:	mov    ecx,DWORD PTR [ebp-0x82c]
   169c3:	mov    edi,DWORD PTR [ebp+0x8]
   169c6:	mov    esi,DWORD PTR [ebp-0x828]
   169cc:	xor    eax,eax
   169ce:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
   169d0:	sete   al
   169d3:	mov    BYTE PTR [ebp-0x81d],al
   169d9:	jmp    0x169e2
   169db:	xor    eax,eax
   169dd:	inc    eax
   169de:	ret    
   169df:	mov    esp,DWORD PTR [ebp-0x18]
   169e2:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   169e9:	push   DWORD PTR [ebp-0x824]
   169ef:	call   DWORD PTR ds:0x1bab4
   169f5:	mov    al,BYTE PTR [ebp-0x81d]
   169fb:	call   0x1abc8
   16a00:	ret    0x8
   16a03:	int3   
   16a04:	int3   
   16a05:	int3   
   16a06:	int3   
   16a07:	int3   
   16a08:	push   0x874
   16a0d:	push   0x701f0
   16a12:	call   0x1ab80
   16a17:	mov    eax,DWORD PTR [ebp+0x8]
   16a1a:	mov    DWORD PTR [ebp-0x830],eax
   16a20:	xor    ebx,ebx
   16a22:	mov    BYTE PTR [ebp-0x81d],bl
   16a28:	xor    eax,eax
   16a2a:	mov    WORD PTR [ebp-0x81c],ax
   16a31:	push   0x7fe
   16a36:	push   ebx
   16a37:	lea    eax,[ebp-0x81a]
   16a3d:	push   eax
   16a3e:	call   0x1a81e
   16a43:	add    esp,0xc
   16a46:	push   0x1b372
   16a4b:	push   0x15
   16a4d:	push   0x1b2e8
   16a52:	call   0x159b2
   16a57:	mov    edx,eax
   16a59:	mov    cx,WORD PTR [eax]
   16a5c:	inc    eax
   16a5d:	inc    eax
   16a5e:	cmp    cx,bx
   16a61:	jne    0x16a59
   16a63:	sub    eax,edx
   16a65:	lea    edi,[ebp-0x81c]
   16a6b:	dec    edi
   16a6c:	dec    edi
   16a6d:	mov    cx,WORD PTR [edi+0x2]
   16a71:	inc    edi
   16a72:	inc    edi
   16a73:	cmp    cx,bx
   16a76:	jne    0x16a6d
   16a78:	mov    ecx,eax
   16a7a:	mov    esi,edx
   16a7c:	shr    ecx,0x2
   16a7f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   16a81:	mov    ecx,eax
   16a83:	and    ecx,0x3
   16a86:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   16a88:	mov    eax,0x70308
   16a8d:	mov    edx,eax
   16a8f:	mov    cx,WORD PTR [eax]
   16a92:	inc    eax
   16a93:	inc    eax
   16a94:	cmp    cx,bx
   16a97:	jne    0x16a8f
   16a99:	sub    eax,edx
   16a9b:	lea    edi,[ebp-0x81c]
   16aa1:	dec    edi
   16aa2:	dec    edi
   16aa3:	mov    cx,WORD PTR [edi+0x2]
   16aa7:	inc    edi
   16aa8:	inc    edi
   16aa9:	cmp    cx,bx
   16aac:	jne    0x16aa3
   16aae:	mov    ecx,eax
   16ab0:	mov    esi,edx
   16ab2:	shr    ecx,0x2
   16ab5:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   16ab7:	mov    ecx,eax
   16ab9:	and    ecx,0x3
   16abc:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   16abe:	push   0x1b34e
   16ac3:	push   0x4
   16ac5:	push   0x1b0b4
   16aca:	call   0x159b2
   16acf:	mov    edx,eax
   16ad1:	mov    cx,WORD PTR [eax]
   16ad4:	inc    eax
   16ad5:	inc    eax
   16ad6:	cmp    cx,bx
   16ad9:	jne    0x16ad1
   16adb:	sub    eax,edx
   16add:	lea    edi,[ebp-0x81c]
   16ae3:	dec    edi
   16ae4:	dec    edi
   16ae5:	mov    cx,WORD PTR [edi+0x2]
   16ae9:	inc    edi
   16aea:	inc    edi
   16aeb:	cmp    cx,bx
   16aee:	jne    0x16ae5
   16af0:	mov    ecx,eax
   16af2:	mov    esi,edx
   16af4:	shr    ecx,0x2
   16af7:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   16af9:	mov    ecx,eax
   16afb:	and    ecx,0x3
   16afe:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   16b00:	lea    eax,[ebp-0x81c]
   16b06:	push   eax
   16b07:	lea    eax,[ebp-0x884]
   16b0d:	push   eax
   16b0e:	call   DWORD PTR ds:0x1ba08
   16b14:	mov    DWORD PTR [ebp-0x824],ebx
   16b1a:	xor    eax,eax
   16b1c:	lea    edi,[ebp-0x850]
   16b22:	stos   DWORD PTR es:[edi],eax
   16b23:	stos   DWORD PTR es:[edi],eax
   16b24:	stos   DWORD PTR es:[edi],eax
   16b25:	stos   DWORD PTR es:[edi],eax
   16b26:	stos   DWORD PTR es:[edi],eax
   16b27:	mov    DWORD PTR [ebp-0x82c],ebx
   16b2d:	xor    eax,eax
   16b2f:	lea    edi,[ebp-0x828]
   16b35:	stos   DWORD PTR es:[edi],eax
   16b36:	mov    DWORD PTR [ebp-0x854],0x18
   16b40:	mov    DWORD PTR [ebp-0x850],ebx
   16b46:	mov    DWORD PTR [ebp-0x848],0x240
   16b50:	lea    eax,[ebp-0x884]
   16b56:	mov    DWORD PTR [ebp-0x84c],eax
   16b5c:	mov    DWORD PTR [ebp-0x844],ebx
   16b62:	mov    DWORD PTR [ebp-0x840],ebx
   16b68:	push   0x1afb2
   16b6d:	call   0x11482
   16b72:	push   ebx
   16b73:	push   ebx
   16b74:	push   0x60
   16b76:	push   ebx
   16b77:	push   ebx
   16b78:	mov    esi,0x80
   16b7d:	push   esi
   16b7e:	push   ebx
   16b7f:	lea    ecx,[ebp-0x82c]
   16b85:	push   ecx
   16b86:	lea    ecx,[ebp-0x854]
   16b8c:	push   ecx
   16b8d:	push   0x100002
   16b92:	lea    ecx,[ebp-0x824]
   16b98:	push   ecx
   16b99:	call   eax
   16b9b:	cmp    eax,ebx
   16b9d:	jge    0x16ba6
   16b9f:	xor    al,al
   16ba1:	jmp    0x16ca9
   16ba6:	mov    DWORD PTR [ebp-0x4],ebx
   16ba9:	xor    eax,eax
   16bab:	lea    edi,[ebp-0x82c]
   16bb1:	stos   DWORD PTR es:[edi],eax
   16bb2:	stos   DWORD PTR es:[edi],eax
   16bb3:	xor    edi,edi
   16bb5:	mov    DWORD PTR [ebp-0x834],edi
   16bbb:	mov    ecx,DWORD PTR [ebp+0xc]
   16bbe:	cmp    edi,ecx
   16bc0:	jae    0x16c13
   16bc2:	mov    DWORD PTR [ebp-0x83c],ebx
   16bc8:	mov    DWORD PTR [ebp-0x83c],edi
   16bce:	mov    DWORD PTR [ebp-0x838],ebx
   16bd4:	sub    ecx,edi
   16bd6:	mov    eax,0x10000
   16bdb:	cmp    ecx,eax
   16bdd:	jae    0x16be1
   16bdf:	mov    eax,ecx
   16be1:	push   ebx
   16be2:	push   ebx
   16be3:	push   eax
   16be4:	mov    eax,DWORD PTR [ebp-0x830]
   16bea:	add    eax,edi
   16bec:	push   eax
   16bed:	lea    eax,[ebp-0x82c]
   16bf3:	push   eax
   16bf4:	push   ebx
   16bf5:	push   ebx
   16bf6:	push   ebx
   16bf7:	push   DWORD PTR [ebp-0x824]
   16bfd:	call   DWORD PTR ds:0x1ba6c
   16c03:	cmp    eax,ebx
   16c05:	jl     0x16c90
   16c0b:	add    edi,0x10000
   16c11:	jmp    0x16bb5
   16c13:	mov    BYTE PTR [ebp-0x81d],0x1
   16c1a:	mov    DWORD PTR [ebp-0x87c],ebx
   16c20:	push   0x9
   16c22:	pop    ecx
   16c23:	xor    eax,eax
   16c25:	lea    edi,[ebp-0x878]
   16c2b:	rep stos DWORD PTR es:[edi],eax
   16c2d:	mov    eax,DWORD PTR [ebp+0x10]
   16c30:	mov    DWORD PTR [ebp-0x86c],eax
   16c36:	mov    ecx,DWORD PTR [ebp+0x14]
   16c39:	mov    DWORD PTR [ebp-0x868],ecx
   16c3f:	mov    DWORD PTR [ebp-0x874],eax
   16c45:	mov    DWORD PTR [ebp-0x870],ecx
   16c4b:	mov    DWORD PTR [ebp-0x864],eax
   16c51:	mov    DWORD PTR [ebp-0x860],ecx
   16c57:	mov    DWORD PTR [ebp-0x87c],eax
   16c5d:	mov    DWORD PTR [ebp-0x878],ecx
   16c63:	mov    DWORD PTR [ebp-0x85c],esi
   16c69:	push   0x4
   16c6b:	push   0x28
   16c6d:	lea    eax,[ebp-0x87c]
   16c73:	push   eax
   16c74:	lea    eax,[ebp-0x82c]
   16c7a:	push   eax
   16c7b:	push   DWORD PTR [ebp-0x824]
   16c81:	call   DWORD PTR ds:0x1ba68
   16c87:	jmp    0x16c90
   16c89:	xor    eax,eax
   16c8b:	inc    eax
   16c8c:	ret    
   16c8d:	mov    esp,DWORD PTR [ebp-0x18]
   16c90:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   16c97:	push   DWORD PTR [ebp-0x824]
   16c9d:	call   DWORD PTR ds:0x1bab4
   16ca3:	mov    al,BYTE PTR [ebp-0x81d]
   16ca9:	call   0x1abc8
   16cae:	ret    0x10
   16cb1:	int3   
   16cb2:	int3   
   16cb3:	int3   
   16cb4:	int3   
   16cb5:	int3   
   16cb6:	push   0x874
   16cbb:	push   0x70210
   16cc0:	call   0x1ab80
   16cc5:	xor    ebx,ebx
   16cc7:	mov    BYTE PTR [ebp-0x81d],bl
   16ccd:	mov    BYTE PTR [ebp-0x81e],bl
   16cd3:	mov    DWORD PTR [ebp-0x828],ebx
   16cd9:	mov    DWORD PTR [ebp-0x824],ebx
   16cdf:	xor    eax,eax
   16ce1:	mov    WORD PTR [ebp-0x81c],ax
   16ce8:	push   0x7fe
   16ced:	push   ebx
   16cee:	lea    eax,[ebp-0x81a]
   16cf4:	push   eax
   16cf5:	call   0x1a81e
   16cfa:	add    esp,0xc
   16cfd:	push   0x1b414
   16d02:	push   0x1d
   16d04:	push   0x1b3d8
   16d09:	call   0x159b2
   16d0e:	mov    edx,eax
   16d10:	mov    cx,WORD PTR [eax]
   16d13:	inc    eax
   16d14:	inc    eax
   16d15:	cmp    cx,bx
   16d18:	jne    0x16d10
   16d1a:	sub    eax,edx
   16d1c:	lea    edi,[ebp-0x81c]
   16d22:	dec    edi
   16d23:	dec    edi
   16d24:	mov    cx,WORD PTR [edi+0x2]
   16d28:	inc    edi
   16d29:	inc    edi
   16d2a:	cmp    cx,bx
   16d2d:	jne    0x16d24
   16d2f:	mov    ecx,eax
   16d31:	mov    esi,edx
   16d33:	shr    ecx,0x2
   16d36:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   16d38:	mov    ecx,eax
   16d3a:	and    ecx,0x3
   16d3d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   16d3f:	mov    eax,0x70348
   16d44:	mov    edx,eax
   16d46:	mov    cx,WORD PTR [eax]
   16d49:	inc    eax
   16d4a:	inc    eax
   16d4b:	cmp    cx,bx
   16d4e:	jne    0x16d46
   16d50:	sub    eax,edx
   16d52:	lea    edi,[ebp-0x81c]
   16d58:	dec    edi
   16d59:	dec    edi
   16d5a:	mov    cx,WORD PTR [edi+0x2]
   16d5e:	inc    edi
   16d5f:	inc    edi
   16d60:	cmp    cx,bx
   16d63:	jne    0x16d5a
   16d65:	mov    ecx,eax
   16d67:	mov    esi,edx
   16d69:	shr    ecx,0x2
   16d6c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   16d6e:	mov    ecx,eax
   16d70:	and    ecx,0x3
   16d73:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   16d75:	push   0x1b3b4
   16d7a:	push   0x4
   16d7c:	push   0x1b3aa
   16d81:	call   0x159b2
   16d86:	mov    edx,eax
   16d88:	mov    cx,WORD PTR [eax]
   16d8b:	inc    eax
   16d8c:	inc    eax
   16d8d:	cmp    cx,bx
   16d90:	jne    0x16d88
   16d92:	sub    eax,edx
   16d94:	lea    edi,[ebp-0x81c]
   16d9a:	dec    edi
   16d9b:	dec    edi
   16d9c:	mov    cx,WORD PTR [edi+0x2]
   16da0:	inc    edi
   16da1:	inc    edi
   16da2:	cmp    cx,bx
   16da5:	jne    0x16d9c
   16da7:	mov    ecx,eax
   16da9:	mov    esi,edx
   16dab:	shr    ecx,0x2
   16dae:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   16db0:	mov    ecx,eax
   16db2:	and    ecx,0x3
   16db5:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   16db7:	lea    eax,[ebp-0x81c]
   16dbd:	push   eax
   16dbe:	lea    eax,[ebp-0x85c]
   16dc4:	push   eax
   16dc5:	call   DWORD PTR ds:0x1ba08
   16dcb:	xor    eax,eax
   16dcd:	lea    edi,[ebp-0x850]
   16dd3:	stos   DWORD PTR es:[edi],eax
   16dd4:	stos   DWORD PTR es:[edi],eax
   16dd5:	stos   DWORD PTR es:[edi],eax
   16dd6:	stos   DWORD PTR es:[edi],eax
   16dd7:	stos   DWORD PTR es:[edi],eax
   16dd8:	mov    DWORD PTR [ebp-0x834],ebx
   16dde:	xor    eax,eax
   16de0:	lea    edi,[ebp-0x830]
   16de6:	stos   DWORD PTR es:[edi],eax
   16de7:	mov    DWORD PTR [ebp-0x82c],ebx
   16ded:	mov    DWORD PTR [ebp-0x854],0x18
   16df7:	mov    DWORD PTR [ebp-0x850],ebx
   16dfd:	mov    DWORD PTR [ebp-0x848],0x240
   16e07:	lea    eax,[ebp-0x85c]
   16e0d:	mov    DWORD PTR [ebp-0x84c],eax
   16e13:	mov    DWORD PTR [ebp-0x844],ebx
   16e19:	mov    DWORD PTR [ebp-0x840],ebx
   16e1f:	push   0x1afb2
   16e24:	call   0x11482
   16e29:	push   ebx
   16e2a:	push   ebx
   16e2b:	push   ebx
   16e2c:	push   0x1
   16e2e:	push   0x7
   16e30:	push   ebx
   16e31:	push   ebx
   16e32:	lea    ecx,[ebp-0x834]
   16e38:	push   ecx
   16e39:	lea    ecx,[ebp-0x854]
   16e3f:	push   ecx
   16e40:	push   0x89
   16e45:	lea    ecx,[ebp-0x82c]
   16e4b:	push   ecx
   16e4c:	call   eax
   16e4e:	cmp    eax,ebx
   16e50:	jge    0x16e59
   16e52:	xor    al,al
   16e54:	jmp    0x16f77
   16e59:	mov    DWORD PTR [ebp-0x884],ebx
   16e5f:	push   0x9
   16e61:	pop    ecx
   16e62:	xor    eax,eax
   16e64:	lea    edi,[ebp-0x880]
   16e6a:	rep stos DWORD PTR es:[edi],eax
   16e6c:	mov    DWORD PTR [ebp-0x4],ebx
   16e6f:	push   0x4
   16e71:	push   0x28
   16e73:	lea    eax,[ebp-0x884]
   16e79:	push   eax
   16e7a:	lea    eax,[ebp-0x834]
   16e80:	push   eax
   16e81:	push   DWORD PTR [ebp-0x82c]
   16e87:	call   DWORD PTR ds:0x1ba70
   16e8d:	cmp    eax,ebx
   16e8f:	jl     0x16f0d
   16e91:	mov    esi,0x5097b
   16e96:	push   esi
   16e97:	call   0x10802
   16e9c:	mov    edi,eax
   16e9e:	push   esi
   16e9f:	push   0x1bae8
   16ea4:	push   edi
   16ea5:	call   0x1a82a
   16eaa:	add    esp,0x10
   16ead:	push   0x25
   16eaf:	push   0x6c464
   16eb4:	push   esi
   16eb5:	push   edi
   16eb6:	call   0x10874
   16ebb:	lea    eax,[ebp-0x828]
   16ec1:	push   eax
   16ec2:	push   esi
   16ec3:	push   edi
   16ec4:	lea    eax,[ebp-0x83c]
   16eca:	push   eax
   16ecb:	call   0x183d0
   16ed0:	mov    BYTE PTR [ebp-0x83c],bl
   16ed6:	mov    eax,DWORD PTR [ebp-0x838]
   16edc:	mov    DWORD PTR [ebp-0x824],eax
   16ee2:	cmp    eax,ebx
   16ee4:	je     0x16eff
   16ee6:	push   DWORD PTR [ebp-0x828]
   16eec:	push   eax
   16eed:	call   0x167d2
   16ef2:	test   al,al
   16ef4:	je     0x16eff
   16ef6:	mov    BYTE PTR [ebp-0x81d],0x1
   16efd:	jmp    0x16f0d
   16eff:	mov    BYTE PTR [ebp-0x81d],0x1
   16f06:	mov    BYTE PTR [ebp-0x81e],0x1
   16f0d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   16f14:	jmp    0x16f26
   16f16:	xor    eax,eax
   16f18:	inc    eax
   16f19:	ret    
   16f1a:	mov    esp,DWORD PTR [ebp-0x18]
   16f1d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   16f24:	xor    ebx,ebx
   16f26:	push   DWORD PTR [ebp-0x82c]
   16f2c:	call   DWORD PTR ds:0x1bab4
   16f32:	cmp    BYTE PTR [ebp-0x81e],bl
   16f38:	je     0x16f5d
   16f3a:	push   DWORD PTR [ebp-0x880]
   16f40:	push   DWORD PTR [ebp-0x884]
   16f46:	push   DWORD PTR [ebp-0x828]
   16f4c:	push   DWORD PTR [ebp-0x824]
   16f52:	call   0x16a08
   16f57:	mov    BYTE PTR [ebp-0x81d],al
   16f5d:	cmp    DWORD PTR [ebp-0x824],ebx
   16f63:	je     0x16f71
   16f65:	push   DWORD PTR [ebp-0x824]
   16f6b:	call   0x10836
   16f70:	pop    ecx
   16f71:	mov    al,BYTE PTR [ebp-0x81d]
   16f77:	call   0x1abc8
   16f7c:	ret    
   16f7d:	int3   
   16f7e:	int3   
   16f7f:	int3   
   16f80:	int3   
   16f81:	int3   
   16f82:	mov    edi,edi
   16f84:	push   ebp
   16f85:	mov    ebp,esp
   16f87:	sub    esp,0xbc
   16f8d:	mov    eax,ds:0x70418
   16f92:	xor    eax,ebp
   16f94:	mov    DWORD PTR [ebp-0x4],eax
   16f97:	push   ebx
   16f98:	push   edi
   16f99:	push   0x1b466
   16f9e:	push   0xb
   16fa0:	push   0x1b44e
   16fa5:	call   0x159b2
   16faa:	push   eax
   16fab:	lea    eax,[ebp-0xbc]
   16fb1:	push   eax
   16fb2:	call   DWORD PTR ds:0x1ba08
   16fb8:	xor    eax,eax
   16fba:	lea    edi,[ebp-0xb0]
   16fc0:	stos   DWORD PTR es:[edi],eax
   16fc1:	stos   DWORD PTR es:[edi],eax
   16fc2:	stos   DWORD PTR es:[edi],eax
   16fc3:	stos   DWORD PTR es:[edi],eax
   16fc4:	stos   DWORD PTR es:[edi],eax
   16fc5:	xor    ebx,ebx
   16fc7:	xor    eax,eax
   16fc9:	mov    DWORD PTR [ebp-0x94],ebx
   16fcf:	lea    edi,[ebp-0x90]
   16fd5:	stos   DWORD PTR es:[edi],eax
   16fd6:	lea    eax,[ebp-0xbc]
   16fdc:	push   0x1afb2
   16fe1:	mov    DWORD PTR [ebp-0x8c],ebx
   16fe7:	mov    DWORD PTR [ebp-0xb4],0x18
   16ff1:	mov    DWORD PTR [ebp-0xb0],ebx
   16ff7:	mov    DWORD PTR [ebp-0xa8],0x240
   17001:	mov    DWORD PTR [ebp-0xac],eax
   17007:	mov    DWORD PTR [ebp-0xa4],ebx
   1700d:	mov    DWORD PTR [ebp-0xa0],ebx
   17013:	call   0x11482
   17018:	push   ebx
   17019:	push   ebx
   1701a:	push   ebx
   1701b:	push   0x1
   1701d:	push   0x7
   1701f:	push   ebx
   17020:	push   ebx
   17021:	lea    ecx,[ebp-0x94]
   17027:	push   ecx
   17028:	lea    ecx,[ebp-0xb4]
   1702e:	push   ecx
   1702f:	push   0x89
   17034:	lea    ecx,[ebp-0x8c]
   1703a:	push   ecx
   1703b:	call   eax
   1703d:	test   eax,eax
   1703f:	jge    0x17048
   17041:	xor    al,al
   17043:	jmp    0x17109
   17048:	push   esi
   17049:	mov    esi,0x20c
   1704e:	push   esi
   1704f:	call   0x10802
   17054:	mov    edi,eax
   17056:	cmp    edi,ebx
   17058:	setne  BYTE PTR [ebp-0x9c]
   1705f:	mov    DWORD PTR [esp],0x1af78
   17066:	call   0x11482
   1706b:	push   0x1
   1706d:	push   esi
   1706e:	push   edi
   1706f:	lea    ecx,[ebp-0x94]
   17075:	push   ecx
   17076:	push   DWORD PTR [ebp-0x8c]
   1707c:	call   eax
   1707e:	push   DWORD PTR [ebp-0x8c]
   17084:	mov    esi,eax
   17086:	call   DWORD PTR ds:0x1bab4
   1708c:	cmp    esi,ebx
   1708e:	pop    esi
   1708f:	jge    0x170a2
   17091:	cmp    BYTE PTR [ebp-0x9c],bl
   17097:	je     0x17041
   17099:	push   edi
   1709a:	call   0x10836
   1709f:	pop    ecx
   170a0:	jmp    0x17041
   170a2:	push   0x6
   170a4:	push   0x1
   170a6:	lea    eax,[ebp-0x84]
   170ac:	push   eax
   170ad:	push   DWORD PTR [edi+0x8]
   170b0:	call   0x10632
   170b5:	mov    ecx,0x70308
   170ba:	lea    eax,[ebp-0x84]
   170c0:	mov    dx,WORD PTR [eax]
   170c3:	cmp    dx,WORD PTR [ecx]
   170c6:	jne    0x170e6
   170c8:	cmp    dx,bx
   170cb:	je     0x170e2
   170cd:	mov    dx,WORD PTR [eax+0x2]
   170d1:	cmp    dx,WORD PTR [ecx+0x2]
   170d5:	jne    0x170e6
   170d7:	add    eax,0x4
   170da:	add    ecx,0x4
   170dd:	cmp    dx,bx
   170e0:	jne    0x170c0
   170e2:	xor    eax,eax
   170e4:	jmp    0x170eb
   170e6:	sbb    eax,eax
   170e8:	sbb    eax,0xffffffff
   170eb:	cmp    eax,ebx
   170ed:	sete   BYTE PTR [ebp-0x85]
   170f4:	cmp    BYTE PTR [ebp-0x9c],bl
   170fa:	je     0x17103
   170fc:	push   edi
   170fd:	call   0x10836
   17102:	pop    ecx
   17103:	mov    al,BYTE PTR [ebp-0x85]
   17109:	mov    ecx,DWORD PTR [ebp-0x4]
   1710c:	pop    edi
   1710d:	xor    ecx,ebp
   1710f:	pop    ebx
   17110:	call   0x1a7c5
   17115:	leave  
   17116:	ret    
   17117:	int3   
   17118:	int3   
   17119:	int3   
   1711a:	int3   
   1711b:	int3   
   1711c:	call   0x185ec
   17121:	push   0x1b4fc
   17126:	push   0x34
   17128:	push   0x1b492
   1712d:	call   0x159b2
   17132:	mov    edx,0x705b0
   17137:	movzx  ecx,WORD PTR [eax]
   1713a:	inc    eax
   1713b:	mov    WORD PTR [edx],cx
   1713e:	inc    eax
   1713f:	inc    edx
   17140:	inc    edx
   17141:	test   cx,cx
   17144:	jne    0x17137
   17146:	ret    
   17147:	int3   
   17148:	int3   
   17149:	int3   
   1714a:	int3   
   1714b:	int3   
   1714c:	mov    edi,edi
   1714e:	push   ebp
   1714f:	mov    ebp,esp
   17151:	push   esi
   17152:	mov    esi,ecx
   17154:	mov    BYTE PTR [esi+0x8],0x0
   17158:	call   0x136f0
   1715d:	lea    ecx,[esi+0x10]
   17160:	mov    BYTE PTR [ecx+0x8],0x0
   17164:	call   0x13248
   17169:	mov    eax,DWORD PTR [ebp+0x8]
   1716c:	mov    DWORD PTR [esi+0x20],eax
   1716f:	mov    eax,DWORD PTR [ebp+0xc]
   17172:	mov    DWORD PTR [esi+0x24],eax
   17175:	mov    eax,esi
   17177:	pop    esi
   17178:	pop    ebp
   17179:	ret    0x8
   1717c:	int3   
   1717d:	int3   
   1717e:	int3   
   1717f:	int3   
   17180:	int3   
   17181:	int3   
   17182:	push   0x33c
   17187:	push   0x70230
   1718c:	call   0x1ab80
   17191:	mov    esi,DWORD PTR [ebp+0xc]
   17194:	mov    DWORD PTR [ebp-0x32c],esi
   1719a:	call   DWORD PTR ds:0x1ba00
   171a0:	xor    ebx,ebx
   171a2:	cmp    BYTE PTR [ebp+0x10],bl
   171a5:	jne    0x171e3
   171a7:	push   esi
   171a8:	mov    ecx,DWORD PTR ds:0x70448
   171ae:	call   0x143f8
   171b3:	mov    edi,eax
   171b5:	push   esi
   171b6:	mov    ecx,DWORD PTR ds:0x70448
   171bc:	call   0x14c10
   171c1:	mov    eax,edi
   171c3:	dec    eax
   171c4:	je     0x171d8
   171c6:	dec    eax
   171c7:	je     0x171d4
   171c9:	dec    eax
   171ca:	jne    0x173c2
   171d0:	push   0xa
   171d2:	jmp    0x171d9
   171d4:	push   0x2
   171d6:	jmp    0x171d9
   171d8:	push   ebx
   171d9:	call   0x10f2e
   171de:	jmp    0x173c2
   171e3:	mov    DWORD PTR [ebp-0x320],ebx
   171e9:	xor    eax,eax
   171eb:	lea    edi,[ebp-0x326]
   171f1:	stos   DWORD PTR es:[edi],eax
   171f2:	stos   WORD PTR es:[edi],ax
   171f4:	xor    eax,eax
   171f6:	mov    WORD PTR [ebp-0x21c],ax
   171fd:	push   0x1fc
   17202:	push   ebx
   17203:	lea    eax,[ebp-0x21a]
   17209:	push   eax
   1720a:	call   0x1a81e
   1720f:	add    esp,0xc
   17212:	lea    eax,[ebp-0x21c]
   17218:	mov    DWORD PTR [ebp-0x324],eax
   1721e:	xor    eax,eax
   17220:	mov    WORD PTR [ebp-0x328],ax
   17227:	mov    eax,0x1fe
   1722c:	mov    WORD PTR [ebp-0x326],ax
   17233:	mov    DWORD PTR [ebp-0x34c],0x18
   1723d:	mov    DWORD PTR [ebp-0x348],ebx
   17243:	mov    DWORD PTR [ebp-0x340],0x200
   1724d:	mov    DWORD PTR [ebp-0x344],ebx
   17253:	mov    DWORD PTR [ebp-0x33c],ebx
   17259:	mov    DWORD PTR [ebp-0x338],ebx
   1725f:	mov    DWORD PTR [ebp-0x334],esi
   17265:	mov    DWORD PTR [ebp-0x330],ebx
   1726b:	push   0x1acbc
   17270:	call   0x11482
   17275:	lea    ecx,[ebp-0x334]
   1727b:	push   ecx
   1727c:	lea    ecx,[ebp-0x34c]
   17282:	push   ecx
   17283:	push   0x1f0fff
   17288:	lea    ecx,[ebp-0x320]
   1728e:	push   ecx
   1728f:	call   eax
   17291:	test   eax,eax
   17293:	jl     0x173c2
   17299:	lea    eax,[ebp-0x328]
   1729f:	push   eax
   172a0:	push   DWORD PTR [ebp-0x320]
   172a6:	call   0x115dc
   172ab:	cmp    eax,ebx
   172ad:	jl     0x173b6
   172b3:	movzx  eax,WORD PTR [ebp-0x328]
   172ba:	shr    eax,1
   172bc:	xor    ecx,ecx
   172be:	mov    WORD PTR [ebp+eax*2-0x21c],cx
   172c6:	push   DWORD PTR [ebp-0x320]
   172cc:	call   0x11676
   172d1:	lea    eax,[ebp-0x21c]
   172d7:	push   eax
   172d8:	call   0x10c36
   172dd:	cmp    eax,ebx
   172df:	je     0x17304
   172e1:	push   eax
   172e2:	push   esi
   172e3:	mov    ecx,DWORD PTR ds:0x70448
   172e9:	call   0x14df4
   172ee:	push   DWORD PTR [ebp-0x320]
   172f4:	push   DWORD PTR [ebp-0x320]
   172fa:	call   0x11676
   172ff:	push   eax
   17300:	push   esi
   17301:	push   ebx
   17302:	jmp    0x17382
   17304:	push   0x1b546
   17309:	push   0x9
   1730b:	push   0x1b532
   17310:	call   0x159b2
   17315:	push   eax
   17316:	lea    eax,[ebp-0x328]
   1731c:	push   eax
   1731d:	call   0x10c86
   17322:	test   al,al
   17324:	je     0x17389
   17326:	cmp    DWORD PTR ds:0x70fd4,ebx
   1732c:	jne    0x1735f
   1732e:	mov    DWORD PTR ds:0x70fd4,0x1
   17338:	mov    DWORD PTR [ebp-0x4],ebx
   1733b:	call   0x16cb6
   17340:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17347:	jmp    0x1735f
   17349:	xor    eax,eax
   1734b:	inc    eax
   1734c:	ret    
   1734d:	mov    esp,DWORD PTR [ebp-0x18]
   17350:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17357:	xor    ebx,ebx
   17359:	mov    esi,DWORD PTR [ebp-0x32c]
   1735f:	cmp    DWORD PTR ds:0x70e94,ebx
   17365:	jne    0x1736d
   17367:	mov    DWORD PTR ds:0x70e94,esi
   1736d:	push   DWORD PTR [ebp-0x320]
   17373:	push   DWORD PTR [ebp-0x320]
   17379:	call   0x11676
   1737e:	push   eax
   1737f:	push   esi
   17380:	push   0x1
   17382:	call   0x12926
   17387:	jmp    0x173b6
   17389:	lea    eax,[ebp-0x31c]
   1738f:	push   eax
   17390:	call   0x10e16
   17395:	test   al,al
   17397:	je     0x173b6
   17399:	lea    eax,[ebp-0x31c]
   1739f:	push   eax
   173a0:	lea    eax,[ebp-0x328]
   173a6:	push   eax
   173a7:	call   0x10c86
   173ac:	test   al,al
   173ae:	je     0x173b6
   173b0:	push   esi
   173b1:	call   0x116ac
   173b6:	push   DWORD PTR [ebp-0x320]
   173bc:	call   DWORD PTR ds:0x1bab4
   173c2:	call   0x1abc8
   173c7:	ret    0xc
   173ca:	int3   
   173cb:	int3   
   173cc:	int3   
   173cd:	int3   
   173ce:	int3   
   173cf:	int3   
   173d0:	mov    edi,edi
   173d2:	push   ebp
   173d3:	mov    ebp,esp
   173d5:	push   ecx
   173d6:	cli    
   173d7:	mov    eax,cr0
   173da:	mov    DWORD PTR [ebp-0x4],eax
   173dd:	and    eax,0xfffeffff
   173e2:	mov    cr0,eax
   173e5:	push   0x16238
   173ea:	push   DWORD PTR ds:0x70de0
   173f0:	call   0x17c5c
   173f5:	push   0x0
   173f7:	push   0x17182
   173fc:	push   0x1ae5a
   17401:	mov    ds:0x70de4,eax
   17406:	call   0x11482
   1740b:	call   eax
   1740d:	push   0x16124
   17412:	push   0x1ad3e
   17417:	call   0x11482
   1741c:	call   eax
   1741e:	mov    eax,DWORD PTR [ebp-0x4]
   17421:	mov    cr0,eax
   17424:	sti    
   17425:	leave  
   17426:	ret    
   17427:	int3   
   17428:	int3   
   17429:	int3   
   1742a:	int3   
   1742b:	int3   
   1742c:	push   0xc
   1742e:	push   0x70250
   17433:	call   0x1a874
   17438:	and    DWORD PTR [ebp-0x4],0x0
   1743c:	push   DWORD PTR [ebp+0xc]
   1743f:	push   DWORD PTR [ebp+0x8]
   17442:	call   0x16374
   17447:	mov    esi,eax
   17449:	jmp    0x1745e
   1744b:	xor    eax,eax
   1744d:	inc    eax
   1744e:	ret    
   1744f:	mov    esp,DWORD PTR [ebp-0x18]
   17452:	push   0xd
   17454:	call   0x10f2e
   17459:	mov    esi,0xc0000001
   1745e:	mov    DWORD PTR [ebp-0x1c],esi
   17461:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17468:	cmp    esi,0x103
   1746e:	je     0x1747e
   17470:	mov    ecx,DWORD PTR [ebp+0xc]
   17473:	mov    DWORD PTR [ecx+0x18],esi
   17476:	xor    dl,dl
   17478:	call   DWORD PTR ds:0x1ba74
   1747e:	mov    eax,esi
   17480:	call   0x1a8b9
   17485:	ret    0x8
   17488:	int3   
   17489:	int3   
   1748a:	int3   
   1748b:	int3   
   1748c:	int3   
   1748d:	int3   
   1748e:	push   0x854
   17493:	push   0x70270
   17498:	call   0x1ab80
   1749d:	mov    esi,DWORD PTR [ebp+0x8]
   174a0:	mov    DWORD PTR [ebp-0x830],esi
   174a6:	mov    edi,DWORD PTR [ebp+0xc]
   174a9:	call   0x1711c
   174ae:	xor    ebx,ebx
   174b0:	mov    DWORD PTR [ebp-0x834],ebx
   174b6:	call   0x16f82
   174bb:	cmp    al,bl
   174bd:	jne    0x176dc
   174c3:	mov    DWORD PTR [ebp-0x4],ebx
   174c6:	push   ebx
   174c7:	push   0x70db0
   174cc:	call   DWORD PTR ds:0x1ba44
   174d2:	push   0x10
   174d4:	call   0x10802
   174d9:	pop    ecx
   174da:	cmp    eax,ebx
   174dc:	je     0x174f5
   174de:	lea    ecx,[ebp-0x81d]
   174e4:	push   ecx
   174e5:	lea    ecx,[ebp-0x81d]
   174eb:	push   ecx
   174ec:	mov    ecx,eax
   174ee:	call   0x14e36
   174f3:	jmp    0x174f7
   174f5:	xor    eax,eax
   174f7:	mov    ecx,eax
   174f9:	mov    DWORD PTR ds:0x70dd8,ecx
   174ff:	call   0x14cc2
   17504:	push   edi
   17505:	push   0x1b7c2
   1750a:	lea    eax,[ebp-0x41c]
   17510:	push   eax
   17511:	call   0x1a85a
   17516:	add    esp,0xc
   17519:	push   0xffffffff
   1751b:	lea    eax,[ebp-0x41c]
   17521:	push   eax
   17522:	lea    ecx,[ebp-0x828]
   17528:	call   0x11022
   1752d:	lea    eax,[ebp-0x828]
   17533:	push   eax
   17534:	mov    ecx,DWORD PTR ds:0x70dd8
   1753a:	call   0x14e50
   1753f:	mov    edi,eax
   17541:	push   DWORD PTR [ebp-0x828]
   17547:	call   0x10836
   1754c:	pop    ecx
   1754d:	lea    eax,[ebp-0x83c]
   17553:	push   eax
   17554:	call   DWORD PTR ds:0x1ba8c
   1755a:	push   ebx
   1755b:	push   0x989680
   17560:	push   DWORD PTR [ebp-0x838]
   17566:	push   DWORD PTR [ebp-0x83c]
   1756c:	call   0x1a812
   17571:	inc    eax
   17572:	mov    DWORD PTR [edi+0x20],eax
   17575:	cmp    eax,ebx
   17577:	jge    0x17580
   17579:	mov    DWORD PTR [edi+0x20],0x1
   17580:	push   0xffffffff
   17582:	push   0x1b79e
   17587:	push   0x4
   17589:	push   0x1b798
   1758e:	call   0x15a82
   17593:	push   eax
   17594:	lea    ecx,[ebp-0x828]
   1759a:	call   0x11f58
   1759f:	lea    eax,[ebp-0x828]
   175a5:	push   eax
   175a6:	mov    ecx,edi
   175a8:	call   0x11f9a
   175ad:	push   DWORD PTR [ebp-0x828]
   175b3:	call   0x10836
   175b8:	mov    DWORD PTR [esp],0x1b774
   175bf:	push   0x4
   175c1:	push   0x1b76a
   175c6:	call   0x159b2
   175cb:	mov    DWORD PTR [ebp-0x824],eax
   175d1:	lea    ecx,[eax+0x2]
   175d4:	mov    dx,WORD PTR [eax]
   175d7:	inc    eax
   175d8:	inc    eax
   175d9:	cmp    dx,bx
   175dc:	jne    0x175d4
   175de:	sub    eax,ecx
   175e0:	sar    eax,1
   175e2:	add    eax,eax
   175e4:	mov    WORD PTR [ebp-0x826],ax
   175eb:	mov    WORD PTR [ebp-0x828],ax
   175f2:	mov    DWORD PTR [ebp-0x854],0x18
   175fc:	mov    DWORD PTR [ebp-0x850],ebx
   17602:	mov    DWORD PTR [ebp-0x848],0x40
   1760c:	lea    eax,[ebp-0x828]
   17612:	mov    DWORD PTR [ebp-0x84c],eax
   17618:	mov    DWORD PTR [ebp-0x844],ebx
   1761e:	mov    DWORD PTR [ebp-0x840],ebx
   17624:	mov    eax,DWORD PTR [ebp-0x824]
   1762a:	lea    ecx,[eax+0x2]
   1762d:	mov    dx,WORD PTR [eax]
   17630:	inc    eax
   17631:	inc    eax
   17632:	cmp    dx,bx
   17635:	jne    0x1762d
   17637:	sub    eax,ecx
   17639:	sar    eax,1
   1763b:	mov    DWORD PTR [ebp-0x834],eax
   17641:	push   0xffffffff
   17643:	push   0x1b730
   17648:	push   0x8
   1764a:	push   0x1b726
   1764f:	call   0x15a82
   17654:	push   eax
   17655:	lea    ecx,[ebp-0x828]
   1765b:	call   0x11f58
   17660:	lea    ecx,[edi+0x8]
   17663:	lea    eax,[ebp-0x828]
   17669:	push   eax
   1766a:	call   0x11f9a
   1766f:	push   DWORD PTR [ebp-0x828]
   17675:	call   0x10836
   1767a:	pop    ecx
   1767b:	push   0xffffffff
   1767d:	push   0x1ac88
   17682:	lea    ecx,[ebp-0x828]
   17688:	call   0x11022
   1768d:	lea    eax,[ebp-0x828]
   17693:	push   eax
   17694:	lea    ecx,[edi+0x10]
   17697:	call   0x11f9a
   1769c:	push   DWORD PTR [ebp-0x828]
   176a2:	call   0x10836
   176a7:	pop    ecx
   176a8:	lea    eax,[edi+0x8]
   176ab:	push   eax
   176ac:	lea    ecx,[edi+0x18]
   176af:	call   0x11f9a
   176b4:	mov    eax,DWORD PTR [edi+0x20]
   176b7:	or     DWORD PTR [ebp-0x834],eax
   176bd:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   176c4:	jmp    0x176dc
   176c6:	xor    eax,eax
   176c8:	inc    eax
   176c9:	ret    
   176ca:	mov    esp,DWORD PTR [ebp-0x18]
   176cd:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   176d4:	xor    ebx,ebx
   176d6:	mov    esi,DWORD PTR [ebp-0x830]
   176dc:	xor    eax,eax
   176de:	cmp    DWORD PTR [ebp-0x834],ebx
   176e4:	jne    0x17a6d
   176ea:	lea    edi,[ebp-0x844]
   176f0:	stos   DWORD PTR es:[edi],eax
   176f1:	stos   DWORD PTR es:[edi],eax
   176f2:	mov    DWORD PTR [ebp-0x848],0xc
   176fc:	mov    DWORD PTR [ebp-0x844],0x2
   17706:	mov    BYTE PTR [ebp-0x840],bl
   1770c:	mov    BYTE PTR [ebp-0x83f],bl
   17712:	push   0x70470
   17717:	push   ebx
   17718:	lea    eax,[ebp-0x848]
   1771e:	push   eax
   1771f:	call   0x1a84e
   17724:	push   eax
   17725:	call   DWORD PTR ds:0x1ba84
   1772b:	push   0x10
   1772d:	call   0x10802
   17732:	pop    ecx
   17733:	cmp    eax,ebx
   17735:	je     0x17753
   17737:	lea    ecx,[ebp-0x81d]
   1773d:	push   ecx
   1773e:	lea    ecx,[ebp-0x81d]
   17744:	push   ecx
   17745:	mov    ecx,eax
   17747:	call   0x14e36
   1774c:	mov    ds:0x70dd8,eax
   17751:	jmp    0x17759
   17753:	mov    DWORD PTR ds:0x70dd8,ebx
   17759:	push   0x10
   1775b:	call   0x10802
   17760:	pop    ecx
   17761:	cmp    eax,ebx
   17763:	je     0x17781
   17765:	lea    ecx,[ebp-0x81d]
   1776b:	push   ecx
   1776c:	lea    ecx,[ebp-0x81d]
   17772:	push   ecx
   17773:	mov    ecx,eax
   17775:	call   0x14c7e
   1777a:	mov    ds:0x70420,eax
   1777f:	jmp    0x17787
   17781:	mov    DWORD PTR ds:0x70420,ebx
   17787:	push   0x10
   17789:	call   0x10802
   1778e:	pop    ecx
   1778f:	cmp    eax,ebx
   17791:	je     0x177af
   17793:	lea    ecx,[ebp-0x81d]
   17799:	push   ecx
   1779a:	lea    ecx,[ebp-0x81d]
   177a0:	push   ecx
   177a1:	mov    ecx,eax
   177a3:	call   0x14ef4
   177a8:	mov    ds:0x704ac,eax
   177ad:	jmp    0x177b5
   177af:	mov    DWORD PTR ds:0x704ac,ebx
   177b5:	push   0x28
   177b7:	call   0x10802
   177bc:	pop    ecx
   177bd:	cmp    eax,ebx
   177bf:	je     0x177d3
   177c1:	push   0x64
   177c3:	push   0x14
   177c5:	mov    ecx,eax
   177c7:	call   0x1714c
   177cc:	mov    ds:0x7044c,eax
   177d1:	jmp    0x177d9
   177d3:	mov    DWORD PTR ds:0x7044c,ebx
   177d9:	push   0x20
   177db:	call   0x10802
   177e0:	pop    ecx
   177e1:	cmp    eax,ebx
   177e3:	je     0x177f3
   177e5:	mov    ecx,eax
   177e7:	call   0x14dc6
   177ec:	mov    ds:0x70448,eax
   177f1:	jmp    0x177f9
   177f3:	mov    DWORD PTR ds:0x70448,ebx
   177f9:	call   0x10f06
   177fe:	call   0x15420
   17803:	push   0x1b716
   17808:	call   0x158fc
   1780d:	push   eax
   1780e:	push   0x1b6e4
   17813:	push   0xa
   17815:	push   0x1b6ce
   1781a:	call   0x159b2
   1781f:	push   eax
   17820:	lea    eax,[ebp-0x41c]
   17826:	push   eax
   17827:	call   0x1a842
   1782c:	add    esp,0xc
   1782f:	lea    eax,[ebp-0x41c]
   17835:	push   eax
   17836:	lea    eax,[ebp-0x85c]
   1783c:	push   eax
   1783d:	mov    edi,DWORD PTR ds:0x1ba08
   17843:	call   edi
   17845:	push   0x1b716
   1784a:	call   0x158fc
   1784f:	push   eax
   17850:	push   0x1b68e
   17855:	push   0xe
   17857:	push   0x1b670
   1785c:	call   0x159b2
   17861:	push   eax
   17862:	lea    eax,[ebp-0x81c]
   17868:	push   eax
   17869:	call   0x1a842
   1786e:	add    esp,0xc
   17871:	lea    eax,[ebp-0x81c]
   17877:	push   eax
   17878:	lea    eax,[ebp-0x864]
   1787e:	push   eax
   1787f:	call   edi
   17881:	push   0x70e18
   17886:	push   ebx
   17887:	push   0x100
   1788c:	push   0x22
   1788e:	lea    eax,[ebp-0x85c]
   17894:	push   eax
   17895:	push   ebx
   17896:	push   esi
   17897:	call   DWORD PTR ds:0x1ba7c
   1789d:	cmp    eax,ebx
   1789f:	jl     0x17a6d
   178a5:	mov    eax,0x1742c
   178aa:	mov    DWORD PTR [esi+0x94],eax
   178b0:	mov    DWORD PTR [esi+0x90],eax
   178b6:	mov    DWORD PTR [esi+0xa4],eax
   178bc:	mov    DWORD PTR [esi+0x70],eax
   178bf:	mov    DWORD PTR [esi+0x48],eax
   178c2:	mov    DWORD PTR [esi+0x44],eax
   178c5:	mov    DWORD PTR [esi+0x40],eax
   178c8:	mov    DWORD PTR [esi+0x38],eax
   178cb:	mov    eax,ds:0x70e18
   178d0:	or     DWORD PTR [eax+0x1c],0x4
   178d4:	lea    eax,[ebp-0x85c]
   178da:	push   eax
   178db:	lea    eax,[ebp-0x864]
   178e1:	push   eax
   178e2:	call   DWORD PTR ds:0x1ba78
   178e8:	mov    DWORD PTR [ebp-0x830],eax
   178ee:	cmp    eax,ebx
   178f0:	jge    0x17900
   178f2:	push   DWORD PTR [esi+0x4]
   178f5:	call   DWORD PTR ds:0x1ba2c
   178fb:	jmp    0x17a67
   17900:	push   ebx
   17901:	push   0x70db0
   17906:	mov    esi,DWORD PTR ds:0x1ba44
   1790c:	call   esi
   1790e:	push   ebx
   1790f:	push   0x70450
   17914:	call   esi
   17916:	push   ebx
   17917:	push   0x70424
   1791c:	call   esi
   1791e:	push   0x8000000
   17923:	push   0x1b648
   17928:	push   0x9
   1792a:	push   0x1b2b0
   1792f:	call   0x15a82
   17934:	push   eax
   17935:	lea    eax,[ebp-0x82c]
   1793b:	push   eax
   1793c:	call   0x17ebe
   17941:	push   0x1afcc
   17946:	call   0x11482
   1794b:	push   DWORD PTR [ebp-0x82c]
   17951:	call   eax
   17953:	mov    DWORD PTR [ebp-0x838],eax
   17959:	push   ebx
   1795a:	push   0x1b61a
   1795f:	push   0x16
   17961:	push   0x1b602
   17966:	call   0x15a82
   1796b:	push   eax
   1796c:	push   DWORD PTR [ebp-0x82c]
   17972:	call   0x17d8c
   17977:	push   eax
   17978:	push   DWORD PTR [ebp-0x838]
   1797e:	call   0x17d32
   17983:	mov    edi,eax
   17985:	add    edi,DWORD PTR [ebp-0x82c]
   1798b:	mov    esi,0x1ac8a
   17990:	push   esi
   17991:	call   0x11482
   17996:	mov    DWORD PTR [ebp-0x824],eax
   1799c:	push   edi
   1799d:	call   0x17cda
   179a2:	mov    ecx,DWORD PTR [ebp-0x824]
   179a8:	mov    ecx,DWORD PTR [ecx]
   179aa:	mov    eax,DWORD PTR [ecx+eax*4]
   179ad:	mov    ds:0x70ddc,eax
   179b2:	push   ebx
   179b3:	push   0x1b5d8
   179b8:	push   0x14
   179ba:	push   0x1b5c2
   179bf:	call   0x15a82
   179c4:	push   eax
   179c5:	push   DWORD PTR [ebp-0x82c]
   179cb:	call   0x17d8c
   179d0:	push   eax
   179d1:	push   DWORD PTR [ebp-0x838]
   179d7:	call   0x17d32
   179dc:	mov    edi,eax
   179de:	add    edi,DWORD PTR [ebp-0x82c]
   179e4:	push   esi
   179e5:	call   0x11482
   179ea:	mov    DWORD PTR [ebp-0x824],eax
   179f0:	push   edi
   179f1:	call   0x17cda
   179f6:	mov    ecx,DWORD PTR [ebp-0x824]
   179fc:	mov    ecx,DWORD PTR [ecx]
   179fe:	mov    eax,DWORD PTR [ecx+eax*4]
   17a01:	mov    ds:0x70dd0,eax
   17a06:	push   ebx
   17a07:	push   0x1b594
   17a0c:	push   0xe
   17a0e:	push   0x1b584
   17a13:	call   0x15a82
   17a18:	push   eax
   17a19:	push   DWORD PTR [ebp-0x82c]
   17a1f:	call   0x17d8c
   17a24:	push   eax
   17a25:	push   DWORD PTR [ebp-0x838]
   17a2b:	call   0x17d32
   17a30:	mov    edi,eax
   17a32:	add    edi,DWORD PTR [ebp-0x82c]
   17a38:	push   esi
   17a39:	call   0x11482
   17a3e:	mov    esi,eax
   17a40:	push   edi
   17a41:	call   0x17cda
   17a46:	mov    ecx,DWORD PTR [esi]
   17a48:	mov    eax,DWORD PTR [ecx+eax*4]
   17a4b:	mov    ds:0x70de0,eax
   17a50:	push   DWORD PTR [ebp-0x82c]
   17a56:	call   0x17ea4
   17a5b:	call   0x173d0
   17a60:	mov    BYTE PTR ds:0x70e1c,0x1
   17a67:	mov    eax,DWORD PTR [ebp-0x830]
   17a6d:	call   0x1abc8
   17a72:	ret    0x8
   17a75:	int3   
   17a76:	int3   
   17a77:	int3   
   17a78:	int3   
   17a79:	int3   
   17a7a:	mov    edi,edi
   17a7c:	push   ebp
   17a7d:	mov    ebp,esp
   17a7f:	push   ecx
   17a80:	mov    ecx,DWORD PTR [ebp+0x8]
   17a83:	mov    eax,DWORD PTR [ecx+0x4]
   17a86:	mov    edx,DWORD PTR [ebp+0xc]
   17a89:	push   ebx
   17a8a:	mov    ebx,DWORD PTR [edx+0x4]
   17a8d:	push   esi
   17a8e:	push   edi
   17a8f:	mov    DWORD PTR [ebp-0x4],eax
   17a92:	mov    DWORD PTR [ebp+0x8],eax
   17a95:	cmp    eax,ebx
   17a97:	jbe    0x17a9c
   17a99:	mov    DWORD PTR [ebp+0x8],ebx
   17a9c:	xor    eax,eax
   17a9e:	cmp    DWORD PTR [ebp+0x8],eax
   17aa1:	jbe    0x17ab9
   17aa3:	mov    esi,DWORD PTR [ecx]
   17aa5:	mov    edi,DWORD PTR [edx]
   17aa7:	mov    cl,BYTE PTR [esi+eax*1]
   17aaa:	mov    dl,BYTE PTR [edi+eax*1]
   17aad:	cmp    cl,dl
   17aaf:	jl     0x17ac6
   17ab1:	jg     0x17aca
   17ab3:	inc    eax
   17ab4:	cmp    eax,DWORD PTR [ebp+0x8]
   17ab7:	jb     0x17aa7
   17ab9:	cmp    DWORD PTR [ebp-0x4],ebx
   17abc:	setb   al
   17abf:	pop    edi
   17ac0:	pop    esi
   17ac1:	pop    ebx
   17ac2:	leave  
   17ac3:	ret    0x8
   17ac6:	mov    al,0x1
   17ac8:	jmp    0x17abf
   17aca:	xor    al,al
   17acc:	jmp    0x17abf
   17ace:	int3   
   17acf:	int3   
   17ad0:	int3   
   17ad1:	int3   
   17ad2:	int3   
   17ad3:	int3   
   17ad4:	mov    edi,edi
   17ad6:	push   ebp
   17ad7:	mov    ebp,esp
   17ad9:	mov    eax,DWORD PTR [ebp+0x8]
   17adc:	mov    ecx,DWORD PTR [eax+0x4]
   17adf:	mov    edx,DWORD PTR [ebp+0xc]
   17ae2:	cmp    ecx,DWORD PTR [edx+0x4]
   17ae5:	je     0x17aeb
   17ae7:	xor    al,al
   17ae9:	jmp    0x17afa
   17aeb:	push   esi
   17aec:	mov    esi,DWORD PTR [eax]
   17aee:	push   edi
   17aef:	mov    edi,DWORD PTR [edx]
   17af1:	xor    eax,eax
   17af3:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
   17af5:	pop    edi
   17af6:	sete   al
   17af9:	pop    esi
   17afa:	pop    ebp
   17afb:	ret    0x8
   17afe:	int3   
   17aff:	int3   
   17b00:	int3   
   17b01:	int3   
   17b02:	int3   
   17b03:	int3   
   17b04:	mov    edi,edi
   17b06:	push   ebp
   17b07:	mov    ebp,esp
   17b09:	push   DWORD PTR [ebp+0xc]
   17b0c:	push   DWORD PTR [ebp+0x8]
   17b0f:	call   0x17ad4
   17b14:	xor    ecx,ecx
   17b16:	test   al,al
   17b18:	sete   cl
   17b1b:	mov    al,cl
   17b1d:	pop    ebp
   17b1e:	ret    0x8
   17b21:	int3   
   17b22:	int3   
   17b23:	int3   
   17b24:	int3   
   17b25:	int3   
   17b26:	mov    edi,edi
   17b28:	push   ebp
   17b29:	mov    ebp,esp
   17b2b:	push   ecx
   17b2c:	mov    ecx,DWORD PTR [ebp+0x8]
   17b2f:	mov    eax,DWORD PTR [ebp+0xc]
   17b32:	push   ebx
   17b33:	mov    ebx,DWORD PTR [eax+0x4]
   17b36:	push   esi
   17b37:	push   edi
   17b38:	mov    edi,DWORD PTR [ecx+0x4]
   17b3b:	mov    DWORD PTR [ebp-0x4],edi
   17b3e:	cmp    edi,ebx
   17b40:	jbe    0x17b44
   17b42:	mov    edi,ebx
   17b44:	and    DWORD PTR [ebp+0x8],0x0
   17b48:	test   edi,edi
   17b4a:	jbe    0x17b6a
   17b4c:	mov    eax,DWORD PTR [eax]
   17b4e:	mov    ecx,DWORD PTR [ecx]
   17b50:	sub    ecx,eax
   17b52:	movzx  edx,WORD PTR [ecx+eax*1]
   17b56:	movzx  esi,WORD PTR [eax]
   17b59:	cmp    dx,si
   17b5c:	jb     0x17b77
   17b5e:	ja     0x17b7b
   17b60:	inc    DWORD PTR [ebp+0x8]
   17b63:	inc    eax
   17b64:	inc    eax
   17b65:	cmp    DWORD PTR [ebp+0x8],edi
   17b68:	jb     0x17b52
   17b6a:	cmp    DWORD PTR [ebp-0x4],ebx
   17b6d:	setb   al
   17b70:	pop    edi
   17b71:	pop    esi
   17b72:	pop    ebx
   17b73:	leave  
   17b74:	ret    0x8
   17b77:	mov    al,0x1
   17b79:	jmp    0x17b70
   17b7b:	xor    al,al
   17b7d:	jmp    0x17b70
   17b7f:	int3   
   17b80:	int3   
   17b81:	int3   
   17b82:	int3   
   17b83:	int3   
   17b84:	mov    edi,edi
   17b86:	push   ebp
   17b87:	mov    ebp,esp
   17b89:	pop    ebp
   17b8a:	jmp    0x17a7a
   17b8f:	int3   
   17b90:	int3   
   17b91:	int3   
   17b92:	int3   
   17b93:	int3   
   17b94:	mov    edi,edi
   17b96:	push   ebp
   17b97:	mov    ebp,esp
   17b99:	pop    ebp
   17b9a:	jmp    0x17ad4
   17b9f:	int3   
   17ba0:	int3   
   17ba1:	int3   
   17ba2:	int3   
   17ba3:	int3   
   17ba4:	mov    edi,edi
   17ba6:	push   ebp
   17ba7:	mov    ebp,esp
   17ba9:	pop    ebp
   17baa:	jmp    0x17b04
   17baf:	int3   
   17bb0:	int3   
   17bb1:	int3   
   17bb2:	int3   
   17bb3:	int3   
   17bb4:	mov    edi,edi
   17bb6:	push   ebp
   17bb7:	mov    ebp,esp
   17bb9:	pop    ebp
   17bba:	jmp    0x17b26
   17bbf:	int3   
   17bc0:	int3   
   17bc1:	int3   
   17bc2:	int3   
   17bc3:	int3   
   17bc4:	mov    edi,edi
   17bc6:	push   ebp
   17bc7:	mov    ebp,esp
   17bc9:	mov    eax,DWORD PTR [ebp+0x8]
   17bcc:	mov    cl,BYTE PTR [ebp+0xc]
   17bcf:	mov    BYTE PTR [eax],cl
   17bd1:	inc    eax
   17bd2:	pop    ebp
   17bd3:	ret    0x8
   17bd6:	int3   
   17bd7:	int3   
   17bd8:	int3   
   17bd9:	int3   
   17bda:	int3   
   17bdb:	int3   
   17bdc:	mov    edi,edi
   17bde:	push   ebp
   17bdf:	mov    ebp,esp
   17be1:	mov    eax,DWORD PTR [ebp+0x8]
   17be4:	mov    ecx,DWORD PTR [ebp+0xc]
   17be7:	mov    DWORD PTR [eax],ecx
   17be9:	add    eax,0x4
   17bec:	pop    ebp
   17bed:	ret    0x8
   17bf0:	int3   
   17bf1:	int3   
   17bf2:	int3   
   17bf3:	int3   
   17bf4:	int3   
   17bf5:	int3   
   17bf6:	mov    edi,edi
   17bf8:	push   ebp
   17bf9:	mov    ebp,esp
   17bfb:	mov    eax,DWORD PTR [ebp+0x8]
   17bfe:	mov    cx,WORD PTR [ebp+0xc]
   17c02:	mov    WORD PTR [eax],cx
   17c05:	add    eax,0x2
   17c08:	pop    ebp
   17c09:	ret    0x8
   17c0c:	int3   
   17c0d:	int3   
   17c0e:	int3   
   17c0f:	int3   
   17c10:	int3   
   17c11:	int3   
   17c12:	mov    edi,edi
   17c14:	push   ebp
   17c15:	mov    ebp,esp
   17c17:	push   esi
   17c18:	mov    esi,DWORD PTR [ebp+0x10]
   17c1b:	push   edi
   17c1c:	mov    edi,DWORD PTR [ebp+0x8]
   17c1f:	push   esi
   17c20:	push   DWORD PTR [ebp+0xc]
   17c23:	push   edi
   17c24:	call   0x1a82a
   17c29:	add    esp,0xc
   17c2c:	lea    eax,[edi+esi*1]
   17c2f:	pop    edi
   17c30:	pop    esi
   17c31:	pop    ebp
   17c32:	ret    0xc
   17c35:	int3   
   17c36:	int3   
   17c37:	int3   
   17c38:	int3   
   17c39:	int3   
   17c3a:	mov    edi,edi
   17c3c:	push   ebp
   17c3d:	mov    ebp,esp
   17c3f:	mov    eax,DWORD PTR [ebp+0xc]
   17c42:	mov    ecx,DWORD PTR [ebp+0x8]
   17c45:	sub    ecx,eax
   17c47:	sub    ecx,0x5
   17c4a:	mov    DWORD PTR [eax+0x1],ecx
   17c4d:	mov    BYTE PTR [eax],0xe9
   17c50:	add    eax,0x5
   17c53:	pop    ebp
   17c54:	ret    0x8
   17c57:	int3   
   17c58:	int3   
   17c59:	int3   
   17c5a:	int3   
   17c5b:	int3   
   17c5c:	mov    edi,edi
   17c5e:	push   ebp
   17c5f:	mov    ebp,esp
   17c61:	push   ecx
   17c62:	push   ebx
   17c63:	mov    ebx,DWORD PTR [ebp+0x8]
   17c66:	and    DWORD PTR [ebp+0x8],0x0
   17c6a:	push   edi
   17c6b:	mov    edi,ebx
   17c6d:	test   ebx,ebx
   17c6f:	jne    0x17c75
   17c71:	xor    eax,eax
   17c73:	jmp    0x17ccf
   17c75:	push   esi
   17c76:	push   0x20736649
   17c7b:	push   0x80
   17c80:	push   0x0
   17c82:	call   DWORD PTR ds:0x1ba40
   17c88:	mov    esi,eax
   17c8a:	mov    DWORD PTR [ebp-0x4],esi
   17c8d:	push   0x0
   17c8f:	push   edi
   17c90:	push   esi
   17c91:	call   0x18388
   17c96:	mov    ecx,eax
   17c98:	sub    ecx,edi
   17c9a:	add    DWORD PTR [ebp+0x8],ecx
   17c9d:	add    esi,ecx
   17c9f:	cmp    DWORD PTR [ebp+0x8],0x5
   17ca3:	mov    edi,eax
   17ca5:	jb     0x17c8d
   17ca7:	push   DWORD PTR [ebp+0x8]
   17caa:	push   0x90
   17caf:	push   ebx
   17cb0:	call   0x1a81e
   17cb5:	add    esp,0xc
   17cb8:	push   esi
   17cb9:	lea    eax,[ebx+0x5]
   17cbc:	push   eax
   17cbd:	call   0x17c3a
   17cc2:	push   ebx
   17cc3:	push   DWORD PTR [ebp+0xc]
   17cc6:	call   0x17c3a
   17ccb:	mov    eax,DWORD PTR [ebp-0x4]
   17cce:	pop    esi
   17ccf:	pop    edi
   17cd0:	pop    ebx
   17cd1:	leave  
   17cd2:	ret    0x8
   17cd5:	int3   
   17cd6:	int3   
   17cd7:	int3   
   17cd8:	int3   
   17cd9:	int3   
   17cda:	mov    edi,edi
   17cdc:	push   ebp
   17cdd:	mov    ebp,esp
   17cdf:	mov    eax,DWORD PTR [ebp+0x8]
   17ce2:	mov    eax,DWORD PTR [eax+0x1]
   17ce5:	pop    ebp
   17ce6:	ret    0x4
   17ce9:	int3   
   17cea:	int3   
   17ceb:	int3   
   17cec:	int3   
   17ced:	int3   
   17cee:	mov    edi,edi
   17cf0:	push   ebp
   17cf1:	mov    ebp,esp
   17cf3:	mov    ecx,DWORD PTR [ebp+0x8]
   17cf6:	movzx  eax,WORD PTR [ecx+0x14]
   17cfa:	lea    eax,[eax+ecx*1+0x18]
   17cfe:	movzx  ecx,WORD PTR [ecx+0x6]
   17d02:	push   esi
   17d03:	xor    esi,esi
   17d05:	push   edi
   17d06:	test   ecx,ecx
   17d08:	jbe    0x17d24
   17d0a:	mov    edx,DWORD PTR [eax+0xc]
   17d0d:	cmp    DWORD PTR [ebp+0xc],edx
   17d10:	jb     0x17d1c
   17d12:	mov    edi,DWORD PTR [eax+0x8]
   17d15:	add    edi,edx
   17d17:	cmp    DWORD PTR [ebp+0xc],edi
   17d1a:	jb     0x17d26
   17d1c:	add    eax,0x28
   17d1f:	inc    esi
   17d20:	cmp    esi,ecx
   17d22:	jb     0x17d0a
   17d24:	xor    eax,eax
   17d26:	pop    edi
   17d27:	pop    esi
   17d28:	pop    ebp
   17d29:	ret    0x8
   17d2c:	int3   
   17d2d:	int3   
   17d2e:	int3   
   17d2f:	int3   
   17d30:	int3   
   17d31:	int3   
   17d32:	mov    edi,edi
   17d34:	push   ebp
   17d35:	mov    ebp,esp
   17d37:	push   esi
   17d38:	push   DWORD PTR [ebp+0xc]
   17d3b:	mov    esi,DWORD PTR [ebp+0x8]
   17d3e:	push   esi
   17d3f:	call   0x17cee
   17d44:	mov    ecx,eax
   17d46:	test   ecx,ecx
   17d48:	je     0x17d5b
   17d4a:	mov    eax,DWORD PTR [esi+0x3c]
   17d4d:	dec    eax
   17d4e:	not    eax
   17d50:	and    eax,DWORD PTR [ecx+0x14]
   17d53:	sub    eax,DWORD PTR [ecx+0xc]
   17d56:	add    eax,DWORD PTR [ebp+0xc]
   17d59:	jmp    0x17d5e
   17d5b:	mov    eax,DWORD PTR [ebp+0xc]
   17d5e:	pop    esi
   17d5f:	pop    ebp
   17d60:	ret    0x8
   17d63:	int3   
   17d64:	int3   
   17d65:	int3   
   17d66:	int3   
   17d67:	int3   
   17d68:	mov    edi,edi
   17d6a:	push   ebp
   17d6b:	mov    ebp,esp
   17d6d:	cmp    DWORD PTR [ebp+0x10],0x0
   17d71:	je     0x17d78
   17d73:	mov    eax,DWORD PTR [ebp+0xc]
   17d76:	jmp    0x17d83
   17d78:	push   DWORD PTR [ebp+0xc]
   17d7b:	push   DWORD PTR [ebp+0x8]
   17d7e:	call   0x17d32
   17d83:	pop    ebp
   17d84:	ret    0xc
   17d87:	int3   
   17d88:	int3   
   17d89:	int3   
   17d8a:	int3   
   17d8b:	int3   
   17d8c:	mov    edi,edi
   17d8e:	push   ebp
   17d8f:	mov    ebp,esp
   17d91:	sub    esp,0x1c
   17d94:	push   ebx
   17d95:	push   esi
   17d96:	mov    esi,DWORD PTR [ebp+0x8]
   17d99:	push   edi
   17d9a:	push   esi
   17d9b:	call   DWORD PTR ds:0x1ba98
   17da1:	mov    ebx,eax
   17da3:	lea    eax,[ebp-0x14]
   17da6:	push   eax
   17da7:	push   0x0
   17da9:	push   0x0
   17dab:	push   esi
   17dac:	mov    DWORD PTR [ebp-0x4],ebx
   17daf:	call   0x1a866
   17db4:	mov    edi,eax
   17db6:	mov    eax,DWORD PTR [ebx+0x50]
   17db9:	mov    ecx,edi
   17dbb:	sub    ecx,esi
   17dbd:	cmp    eax,ecx
   17dbf:	jb     0x17e10
   17dc1:	mov    ecx,DWORD PTR [ebp-0x14]
   17dc4:	sub    ecx,esi
   17dc6:	add    ecx,edi
   17dc8:	cmp    eax,ecx
   17dca:	jb     0x17e10
   17dcc:	push   DWORD PTR [ebp+0x10]
   17dcf:	push   DWORD PTR [edi+0x20]
   17dd2:	push   ebx
   17dd3:	call   0x17d68
   17dd8:	push   DWORD PTR [ebp+0x10]
   17ddb:	mov    ebx,eax
   17ddd:	push   DWORD PTR [edi+0x1c]
   17de0:	add    ebx,esi
   17de2:	push   DWORD PTR [ebp-0x4]
   17de5:	call   0x17d68
   17dea:	push   DWORD PTR [ebp+0x10]
   17ded:	add    eax,esi
   17def:	push   DWORD PTR [edi+0x24]
   17df2:	mov    DWORD PTR [ebp-0x1c],eax
   17df5:	push   DWORD PTR [ebp-0x4]
   17df8:	call   0x17d68
   17dfd:	and    DWORD PTR [ebp-0xc],0x0
   17e01:	add    eax,esi
   17e03:	mov    esi,DWORD PTR [edi+0x18]
   17e06:	mov    DWORD PTR [ebp-0x18],eax
   17e09:	mov    DWORD PTR [ebp-0x8],esi
   17e0c:	test   esi,esi
   17e0e:	jg     0x17e1c
   17e10:	xor    eax,eax
   17e12:	pop    edi
   17e13:	pop    esi
   17e14:	pop    ebx
   17e15:	leave  
   17e16:	ret    0xc
   17e19:	mov    esi,DWORD PTR [ebp-0x8]
   17e1c:	mov    eax,DWORD PTR [ebp-0xc]
   17e1f:	push   DWORD PTR [ebp+0x10]
   17e22:	add    esi,eax
   17e24:	mov    eax,DWORD PTR [ebp+0xc]
   17e27:	sar    esi,1
   17e29:	push   DWORD PTR [ebx+esi*4]
   17e2c:	mov    DWORD PTR [ebp-0x10],eax
   17e2f:	push   DWORD PTR [ebp-0x4]
   17e32:	call   0x17d68
   17e37:	add    eax,DWORD PTR [ebp+0x8]
   17e3a:	mov    cl,BYTE PTR [eax]
   17e3c:	mov    edx,DWORD PTR [ebp-0x10]
   17e3f:	cmp    cl,BYTE PTR [edx]
   17e41:	jne    0x17e5e
   17e43:	test   cl,cl
   17e45:	je     0x17e5a
   17e47:	mov    cl,BYTE PTR [eax+0x1]
   17e4a:	cmp    cl,BYTE PTR [edx+0x1]
   17e4d:	jne    0x17e5e
   17e4f:	inc    eax
   17e50:	inc    eax
   17e51:	inc    edx
   17e52:	inc    edx
   17e53:	mov    DWORD PTR [ebp-0x10],edx
   17e56:	test   cl,cl
   17e58:	jne    0x17e3a
   17e5a:	xor    eax,eax
   17e5c:	jmp    0x17e63
   17e5e:	sbb    eax,eax
   17e60:	sbb    eax,0xffffffff
   17e63:	test   eax,eax
   17e65:	je     0x17e7c
   17e67:	jge    0x17e6f
   17e69:	inc    esi
   17e6a:	mov    DWORD PTR [ebp-0xc],esi
   17e6d:	jmp    0x17e72
   17e6f:	mov    DWORD PTR [ebp-0x8],esi
   17e72:	mov    eax,DWORD PTR [ebp-0x8]
   17e75:	cmp    DWORD PTR [ebp-0xc],eax
   17e78:	jl     0x17e19
   17e7a:	jmp    0x17e10
   17e7c:	mov    eax,DWORD PTR [ebp-0x18]
   17e7f:	movzx  eax,WORD PTR [eax+esi*2]
   17e83:	mov    ecx,DWORD PTR [ebp-0x1c]
   17e86:	mov    ecx,DWORD PTR [ecx+eax*4]
   17e89:	mov    eax,ecx
   17e8b:	sub    eax,edi
   17e8d:	add    eax,DWORD PTR [ebp+0x8]
   17e90:	cmp    eax,DWORD PTR [ebp-0x14]
   17e93:	sbb    eax,eax
   17e95:	not    eax
   17e97:	and    eax,ecx
   17e99:	jmp    0x17e12
   17e9e:	int3   
   17e9f:	int3   
   17ea0:	int3   
   17ea1:	int3   
   17ea2:	int3   
   17ea3:	int3   
   17ea4:	mov    edi,edi
   17ea6:	push   ebp
   17ea7:	mov    ebp,esp
   17ea9:	push   DWORD PTR [ebp+0x8]
   17eac:	push   0xffffffff
   17eae:	call   DWORD PTR ds:0x1ba9c
   17eb4:	pop    ebp
   17eb5:	ret    0x4
   17eb8:	int3   
   17eb9:	int3   
   17eba:	int3   
   17ebb:	int3   
   17ebc:	int3   
   17ebd:	int3   
   17ebe:	mov    edi,edi
   17ec0:	push   ebp
   17ec1:	mov    ebp,esp
   17ec3:	sub    esp,0x818
   17ec9:	mov    eax,ds:0x70418
   17ece:	xor    eax,ebp
   17ed0:	mov    DWORD PTR [ebp-0x4],eax
   17ed3:	mov    ecx,DWORD PTR [ebp+0xc]
   17ed6:	push   ebx
   17ed7:	mov    ebx,DWORD PTR [ebp+0x8]
   17eda:	push   esi
   17edb:	push   edi
   17edc:	xor    esi,esi
   17ede:	xor    eax,eax
   17ee0:	push   ecx
   17ee1:	mov    DWORD PTR [ebp-0x7f0],esi
   17ee7:	lea    edi,[ebp-0x7ec]
   17eed:	stos   DWORD PTR es:[edi],eax
   17eee:	lea    eax,[ebp-0x7d4]
   17ef4:	push   0x1b7c6
   17ef9:	push   eax
   17efa:	mov    DWORD PTR [ebp-0x7e0],esi
   17f00:	mov    DWORD PTR [ebp-0x7e8],esi
   17f06:	call   DWORD PTR ds:0x1ba80
   17f0c:	add    esp,0xc
   17f0f:	lea    eax,[ebp-0x7d4]
   17f15:	push   eax
   17f16:	lea    eax,[ebp-0x810]
   17f1c:	push   eax
   17f1d:	call   DWORD PTR ds:0x1ba08
   17f23:	lea    eax,[ebp-0x810]
   17f29:	push   0x1ae9a
   17f2e:	mov    DWORD PTR [ebp-0x808],0x18
   17f38:	mov    DWORD PTR [ebp-0x804],esi
   17f3e:	mov    DWORD PTR [ebp-0x7fc],esi
   17f44:	mov    DWORD PTR [ebp-0x800],eax
   17f4a:	mov    DWORD PTR [ebp-0x7f8],esi
   17f50:	mov    DWORD PTR [ebp-0x7f4],esi
   17f56:	call   0x11482
   17f5b:	push   0x10
   17f5d:	push   0x1
   17f5f:	lea    ecx,[ebp-0x818]
   17f65:	push   ecx
   17f66:	lea    ecx,[ebp-0x808]
   17f6c:	push   ecx
   17f6d:	push   0x80100000
   17f72:	lea    ecx,[ebp-0x7e4]
   17f78:	push   ecx
   17f79:	call   eax
   17f7b:	cmp    eax,esi
   17f7d:	jl     0x18009
   17f83:	push   DWORD PTR [ebp-0x7e4]
   17f89:	lea    eax,[ebp-0x7f0]
   17f8f:	push   DWORD PTR [ebp+0x10]
   17f92:	push   0x2
   17f94:	push   eax
   17f95:	push   esi
   17f96:	push   0x4
   17f98:	lea    eax,[ebp-0x7dc]
   17f9e:	push   eax
   17f9f:	call   DWORD PTR ds:0x1baa4
   17fa5:	push   DWORD PTR [ebp-0x7e4]
   17fab:	mov    edi,DWORD PTR ds:0x1bab4
   17fb1:	mov    DWORD PTR [ebp-0x7d8],eax
   17fb7:	call   edi
   17fb9:	mov    eax,DWORD PTR [ebp-0x7d8]
   17fbf:	cmp    eax,esi
   17fc1:	jl     0x18009
   17fc3:	push   0x2
   17fc5:	push   esi
   17fc6:	push   0x2
   17fc8:	lea    eax,[ebp-0x7e8]
   17fce:	push   eax
   17fcf:	push   esi
   17fd0:	push   esi
   17fd1:	push   esi
   17fd2:	lea    eax,[ebp-0x7e0]
   17fd8:	push   eax
   17fd9:	push   0xffffffff
   17fdb:	push   DWORD PTR [ebp-0x7dc]
   17fe1:	call   DWORD PTR ds:0x1baa0
   17fe7:	push   DWORD PTR [ebp-0x7dc]
   17fed:	mov    DWORD PTR [ebp-0x7d8],eax
   17ff3:	call   edi
   17ff5:	mov    eax,DWORD PTR [ebp-0x7d8]
   17ffb:	cmp    eax,esi
   17ffd:	jl     0x18009
   17fff:	mov    eax,DWORD PTR [ebp-0x7e0]
   18005:	mov    DWORD PTR [ebx],eax
   18007:	xor    eax,eax
   18009:	mov    ecx,DWORD PTR [ebp-0x4]
   1800c:	pop    edi
   1800d:	pop    esi
   1800e:	xor    ecx,ebp
   18010:	pop    ebx
   18011:	call   0x1a7c5
   18016:	leave  
   18017:	ret    0xc
   1801a:	int3   
   1801b:	int3   
   1801c:	int3   
   1801d:	int3   
   1801e:	int3   
   1801f:	int3   
   18020:	mov    edi,edi
   18022:	push   ebp
   18023:	mov    ebp,esp
   18025:	push   esi
   18026:	mov    esi,DWORD PTR [ebp+0x8]
   18029:	test   esi,esi
   1802b:	jne    0x18030
   1802d:	lea    esi,[ecx+0x18]
   18030:	mov    edx,DWORD PTR [ebp+0xc]
   18033:	test   edx,edx
   18035:	jne    0x1803b
   18037:	xor    eax,eax
   18039:	jmp    0x1804b
   1803b:	movzx  eax,BYTE PTR [edx]
   1803e:	push   edx
   1803f:	lea    eax,[eax*8+0x6c5a0]
   18046:	push   esi
   18047:	push   eax
   18048:	call   DWORD PTR [eax+0x4]
   1804b:	pop    esi
   1804c:	pop    ebp
   1804d:	ret    0x8
   18050:	int3   
   18051:	int3   
   18052:	int3   
   18053:	int3   
   18054:	int3   
   18055:	int3   
   18056:	mov    edi,edi
   18058:	push   ebp
   18059:	mov    ebp,esp
   1805b:	mov    eax,DWORD PTR [ebp+0x14]
   1805e:	push   ebx
   1805f:	mov    ebx,DWORD PTR [ebp+0x8]
   18062:	push   esi
   18063:	mov    esi,DWORD PTR [ebp+0x10]
   18066:	sub    esi,eax
   18068:	push   edi
   18069:	lea    edi,[ebx+eax*1]
   1806c:	mov    eax,esi
   1806e:	xor    edx,edx
   18070:	dec    eax
   18071:	je     0x18092
   18073:	dec    eax
   18074:	je     0x18084
   18076:	dec    eax
   18077:	dec    eax
   18078:	jne    0x1809e
   1807a:	mov    eax,DWORD PTR [ecx+0xc]
   1807d:	mov    edx,DWORD PTR [edi]
   1807f:	and    DWORD PTR [eax],0x0
   18082:	jmp    0x1809e
   18084:	mov    eax,DWORD PTR [ecx+0xc]
   18087:	movsx  edx,WORD PTR [edi]
   1808a:	mov    DWORD PTR [eax],0x2
   18090:	jmp    0x1809e
   18092:	mov    eax,DWORD PTR [ecx+0xc]
   18095:	movsx  edx,BYTE PTR [edi]
   18098:	mov    DWORD PTR [eax],0x3
   1809e:	mov    ecx,DWORD PTR [ebp+0xc]
   180a1:	lea    eax,[edx+ecx*1]
   180a4:	add    eax,DWORD PTR [ebp+0x10]
   180a7:	sub    edx,ebx
   180a9:	add    edx,ecx
   180ab:	dec    esi
   180ac:	je     0x180be
   180ae:	dec    esi
   180af:	je     0x180b9
   180b1:	dec    esi
   180b2:	dec    esi
   180b3:	jne    0x180c0
   180b5:	mov    DWORD PTR [edi],edx
   180b7:	jmp    0x180c0
   180b9:	mov    WORD PTR [edi],dx
   180bc:	jmp    0x180c0
   180be:	mov    BYTE PTR [edi],dl
   180c0:	pop    edi
   180c1:	pop    esi
   180c2:	pop    ebx
   180c3:	pop    ebp
   180c4:	ret    0x10
   180c7:	int3   
   180c8:	int3   
   180c9:	int3   
   180ca:	int3   
   180cb:	int3   
   180cc:	mov    edi,edi
   180ce:	push   ebp
   180cf:	mov    ebp,esp
   180d1:	mov    eax,DWORD PTR [ebp+0x10]
   180d4:	inc    eax
   180d5:	pop    ebp
   180d6:	ret    0xc
   180d9:	int3   
   180da:	int3   
   180db:	int3   
   180dc:	int3   
   180dd:	int3   
   180de:	mov    edi,edi
   180e0:	push   ebp
   180e1:	mov    ebp,esp
   180e3:	mov    eax,ecx
   180e5:	mov    ecx,DWORD PTR [ebp+0x8]
   180e8:	and    DWORD PTR [eax],0x0
   180eb:	and    DWORD PTR [eax+0x4],0x0
   180ef:	test   ecx,ecx
   180f1:	jne    0x180f6
   180f3:	lea    ecx,[eax+0x14]
   180f6:	mov    edx,DWORD PTR [ebp+0xc]
   180f9:	mov    DWORD PTR [eax+0x8],ecx
   180fc:	test   edx,edx
   180fe:	jne    0x18103
   18100:	lea    edx,[eax+0x10]
   18103:	mov    DWORD PTR [eax+0xc],edx
   18106:	and    DWORD PTR [ecx],0x0
   18109:	mov    ecx,DWORD PTR [eax+0xc]
   1810c:	and    DWORD PTR [ecx],0x0
   1810f:	pop    ebp
   18110:	ret    0x8
   18113:	int3   
   18114:	int3   
   18115:	int3   
   18116:	int3   
   18117:	int3   
   18118:	mov    edi,edi
   1811a:	push   ebp
   1811b:	mov    ebp,esp
   1811d:	push   ecx
   1811e:	mov    eax,DWORD PTR [ebp+0x8]
   18121:	mov    eax,DWORD PTR [eax]
   18123:	push   ebx
   18124:	push   esi
   18125:	push   edi
   18126:	mov    DWORD PTR [ebp-0x4],ecx
   18129:	mov    esi,eax
   1812b:	test   eax,0x200000
   18130:	je     0x1813d
   18132:	cmp    DWORD PTR [ecx+0x4],0x0
   18136:	je     0x18142
   18138:	shr    esi,0xb
   1813b:	jmp    0x18145
   1813d:	cmp    DWORD PTR [ecx],0x0
   18140:	jmp    0x18136
   18142:	shr    esi,0x8
   18145:	mov    ebx,DWORD PTR [ebp+0x10]
   18148:	and    esi,0x7
   1814b:	shr    eax,0xe
   1814e:	and    eax,0x7
   18151:	mov    edi,esi
   18153:	jbe    0x1818f
   18155:	add    eax,ebx
   18157:	mov    cl,BYTE PTR [eax]
   18159:	movzx  edx,cl
   1815c:	mov    dl,BYTE PTR [edx+0x6c4a0]
   18162:	test   dl,0x10
   18165:	je     0x18187
   18167:	mov    al,BYTE PTR [eax+0x1]
   1816a:	and    al,0x7
   1816c:	cmp    al,0x5
   1816e:	jne    0x18187
   18170:	and    cl,0xc0
   18173:	je     0x18184
   18175:	cmp    cl,0x40
   18178:	jne    0x1817f
   1817a:	lea    edi,[esi+0x1]
   1817d:	jmp    0x18187
   1817f:	cmp    cl,0x80
   18182:	jne    0x18187
   18184:	lea    edi,[esi+0x4]
   18187:	movzx  eax,dl
   1818a:	and    eax,0xf
   1818d:	add    edi,eax
   1818f:	push   edi
   18190:	push   ebx
   18191:	push   DWORD PTR [ebp+0xc]
   18194:	call   0x1a82a
   18199:	mov    ecx,DWORD PTR [ebp+0x8]
   1819c:	mov    eax,DWORD PTR [ecx]
   1819e:	shl    eax,0xc
   181a1:	sar    eax,0x1d
   181a4:	add    esp,0xc
   181a7:	test   eax,eax
   181a9:	je     0x181c5
   181ab:	push   eax
   181ac:	push   esi
   181ad:	mov    esi,DWORD PTR [ebp-0x4]
   181b0:	push   ebx
   181b1:	push   DWORD PTR [ebp+0xc]
   181b4:	mov    ecx,esi
   181b6:	call   0x18056
   181bb:	mov    ecx,DWORD PTR [esi+0x8]
   181be:	mov    DWORD PTR [ecx],eax
   181c0:	mov    ecx,DWORD PTR [ebp+0x8]
   181c3:	jmp    0x181c8
   181c5:	mov    esi,DWORD PTR [ebp-0x4]
   181c8:	test   DWORD PTR [ecx],0x400000
   181ce:	je     0x181d5
   181d0:	mov    eax,DWORD PTR [esi+0xc]
   181d3:	neg    DWORD PTR [eax]
   181d5:	test   DWORD PTR [ecx],0x100000
   181db:	je     0x181e3
   181dd:	mov    eax,DWORD PTR [esi+0x8]
   181e0:	or     DWORD PTR [eax],0xffffffff
   181e3:	lea    eax,[edi+ebx*1]
   181e6:	pop    edi
   181e7:	pop    esi
   181e8:	pop    ebx
   181e9:	leave  
   181ea:	ret    0xc
   181ed:	int3   
   181ee:	int3   
   181ef:	int3   
   181f0:	int3   
   181f1:	int3   
   181f2:	mov    edi,edi
   181f4:	push   ebp
   181f5:	mov    ebp,esp
   181f7:	push   ebx
   181f8:	push   esi
   181f9:	mov    esi,DWORD PTR [ebp+0x10]
   181fc:	push   edi
   181fd:	mov    edi,DWORD PTR [ebp+0xc]
   18200:	push   esi
   18201:	push   edi
   18202:	push   DWORD PTR [ebp+0x8]
   18205:	mov    ebx,ecx
   18207:	call   0x18118
   1820c:	lea    eax,[esi+0x1]
   1820f:	movzx  edx,BYTE PTR [eax]
   18212:	push   eax
   18213:	inc    edi
   18214:	lea    edx,[edx*8+0x6c5a0]
   1821b:	push   edi
   1821c:	push   edx
   1821d:	mov    ecx,ebx
   1821f:	call   DWORD PTR [edx+0x4]
   18222:	pop    edi
   18223:	pop    esi
   18224:	pop    ebx
   18225:	pop    ebp
   18226:	ret    0xc
   18229:	int3   
   1822a:	int3   
   1822b:	int3   
   1822c:	int3   
   1822d:	int3   
   1822e:	mov    edi,edi
   18230:	push   ebp
   18231:	mov    ebp,esp
   18233:	push   ebx
   18234:	push   esi
   18235:	mov    esi,DWORD PTR [ebp+0x10]
   18238:	push   edi
   18239:	mov    edi,DWORD PTR [ebp+0xc]
   1823c:	push   esi
   1823d:	push   edi
   1823e:	push   DWORD PTR [ebp+0x8]
   18241:	mov    ebx,ecx
   18243:	call   0x18118
   18248:	lea    eax,[esi+0x1]
   1824b:	movzx  edx,BYTE PTR [eax]
   1824e:	push   eax
   1824f:	inc    edi
   18250:	lea    edx,[edx*8+0x6cda8]
   18257:	push   edi
   18258:	push   edx
   18259:	mov    ecx,ebx
   1825b:	call   DWORD PTR [edx+0x4]
   1825e:	pop    edi
   1825f:	pop    esi
   18260:	pop    ebx
   18261:	pop    ebp
   18262:	ret    0xc
   18265:	int3   
   18266:	int3   
   18267:	int3   
   18268:	int3   
   18269:	int3   
   1826a:	mov    edi,edi
   1826c:	push   ebp
   1826d:	mov    ebp,esp
   1826f:	mov    DWORD PTR [ecx],0x1
   18275:	pop    ebp
   18276:	jmp    0x181f2
   1827b:	int3   
   1827c:	int3   
   1827d:	int3   
   1827e:	int3   
   1827f:	int3   
   18280:	mov    edi,edi
   18282:	push   ebp
   18283:	mov    ebp,esp
   18285:	mov    DWORD PTR [ecx+0x4],0x1
   1828c:	pop    ebp
   1828d:	jmp    0x181f2
   18292:	int3   
   18293:	int3   
   18294:	int3   
   18295:	int3   
   18296:	int3   
   18297:	int3   
   18298:	mov    edi,edi
   1829a:	push   ebp
   1829b:	mov    ebp,esp
   1829d:	mov    eax,DWORD PTR [ebp+0x10]
   182a0:	sub    esp,0x10
   182a3:	test   BYTE PTR [eax+0x1],0x38
   182a7:	push   eax
   182a8:	push   DWORD PTR [ebp+0xc]
   182ab:	jne    0x182c0
   182ad:	mov    DWORD PTR [ebp-0x8],0x5bf6
   182b4:	mov    DWORD PTR [ebp-0x4],0x18118
   182bb:	lea    eax,[ebp-0x8]
   182be:	jmp    0x182d1
   182c0:	mov    DWORD PTR [ebp-0x10],0x52f6
   182c7:	mov    DWORD PTR [ebp-0xc],0x18118
   182ce:	lea    eax,[ebp-0x10]
   182d1:	push   eax
   182d2:	call   0x18118
   182d7:	leave  
   182d8:	ret    0xc
   182db:	int3   
   182dc:	int3   
   182dd:	int3   
   182de:	int3   
   182df:	int3   
   182e0:	mov    edi,edi
   182e2:	push   ebp
   182e3:	mov    ebp,esp
   182e5:	mov    eax,DWORD PTR [ebp+0x10]
   182e8:	sub    esp,0x10
   182eb:	test   BYTE PTR [eax+0x1],0x38
   182ef:	push   eax
   182f0:	push   DWORD PTR [ebp+0xc]
   182f3:	jne    0x18308
   182f5:	mov    DWORD PTR [ebp-0x8],0x66f7
   182fc:	mov    DWORD PTR [ebp-0x4],0x18118
   18303:	lea    eax,[ebp-0x8]
   18306:	jmp    0x18319
   18308:	mov    DWORD PTR [ebp-0x10],0x52f7
   1830f:	mov    DWORD PTR [ebp-0xc],0x18118
   18316:	lea    eax,[ebp-0x10]
   18319:	push   eax
   1831a:	call   0x18118
   1831f:	leave  
   18320:	ret    0xc
   18323:	int3   
   18324:	int3   
   18325:	int3   
   18326:	int3   
   18327:	int3   
   18328:	mov    edi,edi
   1832a:	push   ebp
   1832b:	mov    ebp,esp
   1832d:	push   ecx
   1832e:	push   ecx
   1832f:	mov    edx,DWORD PTR [ebp+0x10]
   18332:	mov    al,BYTE PTR [edx+0x1]
   18335:	cmp    al,0x15
   18337:	je     0x18357
   18339:	cmp    al,0x25
   1833b:	je     0x18357
   1833d:	and    al,0x38
   1833f:	cmp    al,0x10
   18341:	je     0x1834f
   18343:	cmp    al,0x18
   18345:	je     0x1834f
   18347:	cmp    al,0x20
   18349:	je     0x1834f
   1834b:	cmp    al,0x28
   1834d:	jne    0x18363
   1834f:	mov    eax,DWORD PTR [ecx+0x8]
   18352:	or     DWORD PTR [eax],0xffffffff
   18355:	jmp    0x18363
   18357:	mov    eax,DWORD PTR [edx+0x2]
   1835a:	mov    eax,DWORD PTR [eax]
   1835c:	push   esi
   1835d:	mov    esi,DWORD PTR [ecx+0x8]
   18360:	mov    DWORD PTR [esi],eax
   18362:	pop    esi
   18363:	push   edx
   18364:	push   DWORD PTR [ebp+0xc]
   18367:	lea    eax,[ebp-0x8]
   1836a:	push   eax
   1836b:	mov    DWORD PTR [ebp-0x8],0x52ff
   18372:	mov    DWORD PTR [ebp-0x4],0x18118
   18379:	call   0x18118
   1837e:	leave  
   1837f:	ret    0xc
   18382:	int3   
   18383:	int3   
   18384:	int3   
   18385:	int3   
   18386:	int3   
   18387:	int3   
   18388:	mov    edi,edi
   1838a:	push   ebp
   1838b:	mov    ebp,esp
   1838d:	sub    esp,0x5c
   18390:	mov    eax,ds:0x70418
   18395:	xor    eax,ebp
   18397:	mov    DWORD PTR [ebp-0x4],eax
   1839a:	mov    eax,DWORD PTR [ebp+0x10]
   1839d:	push   esi
   1839e:	mov    esi,DWORD PTR [ebp+0x8]
   183a1:	push   edi
   183a2:	mov    edi,DWORD PTR [ebp+0xc]
   183a5:	push   0x0
   183a7:	push   eax
   183a8:	lea    ecx,[ebp-0x5c]
   183ab:	call   0x180de
   183b0:	push   edi
   183b1:	push   esi
   183b2:	lea    ecx,[ebp-0x5c]
   183b5:	call   0x18020
   183ba:	mov    ecx,DWORD PTR [ebp-0x4]
   183bd:	pop    edi
   183be:	xor    ecx,ebp
   183c0:	pop    esi
   183c1:	call   0x1a7c5
   183c6:	leave  
   183c7:	ret    0xc
   183ca:	int3   
   183cb:	int3   
   183cc:	int3   
   183cd:	int3   
   183ce:	int3   
   183cf:	int3   
   183d0:	mov    edi,edi
   183d2:	push   ebp
   183d3:	mov    ebp,esp
   183d5:	sub    esp,0x50
   183d8:	push   ebx
   183d9:	push   esi
   183da:	push   edi
   183db:	mov    edi,0x4000
   183e0:	push   edi
   183e1:	call   0x10802
   183e6:	pop    ecx
   183e7:	xor    ebx,ebx
   183e9:	push   0x38
   183eb:	push   0x1b7f6
   183f0:	cmp    eax,ebx
   183f2:	mov    DWORD PTR [ebp-0x4],eax
   183f5:	mov    DWORD PTR [ebp-0xc],eax
   183f8:	push   0x2f
   183fa:	lea    eax,[ebp-0x50]
   183fd:	setne  BYTE PTR [ebp-0x10]
   18401:	push   eax
   18402:	xor    esi,esi
   18404:	mov    DWORD PTR [ebp-0x30],ebx
   18407:	mov    DWORD PTR [ebp-0x2c],ebx
   1840a:	mov    DWORD PTR [ebp-0x28],ebx
   1840d:	mov    DWORD PTR [ebp-0x4c],ebx
   18410:	mov    DWORD PTR [ebp-0x50],ebx
   18413:	call   0x186ba
   18418:	test   eax,eax
   1841a:	je     0x18439
   1841c:	mov    esi,DWORD PTR [ebp+0x8]
   1841f:	mov    BYTE PTR [esi],bl
   18421:	mov    DWORD PTR [esi+0x4],ebx
   18424:	cmp    BYTE PTR [ebp-0x10],bl
   18427:	je     0x18432
   18429:	push   DWORD PTR [ebp-0x4]
   1842c:	call   0x10836
   18431:	pop    ecx
   18432:	mov    eax,esi
   18434:	jmp    0x1854e
   18439:	mov    eax,DWORD PTR [ebp+0x10]
   1843c:	mov    DWORD PTR [ebp-0x4c],eax
   1843f:	mov    eax,DWORD PTR [ebp+0xc]
   18442:	mov    DWORD PTR [ebp-0x50],eax
   18445:	mov    eax,DWORD PTR [ebp-0xc]
   18448:	add    eax,esi
   1844a:	mov    DWORD PTR [ebp-0x44],eax
   1844d:	push   0x4
   1844f:	lea    eax,[ebp-0x50]
   18452:	push   eax
   18453:	mov    DWORD PTR [ebp-0x40],edi
   18456:	call   0x1884e
   1845b:	cmp    eax,0xfffffffc
   1845e:	mov    DWORD PTR [ebp+0x10],eax
   18461:	jl     0x18475
   18463:	cmp    eax,0xfffffffd
   18466:	jle    0x184fe
   1846c:	cmp    eax,0x2
   1846f:	je     0x184fe
   18475:	mov    eax,edi
   18477:	sub    eax,DWORD PTR [ebp-0x40]
   1847a:	add    esi,eax
   1847c:	cmp    DWORD PTR [ebp-0x40],ebx
   1847f:	jne    0x184e8
   18481:	mov    al,BYTE PTR [ebp-0x10]
   18484:	mov    BYTE PTR [ebp-0x18],al
   18487:	mov    eax,DWORD PTR [ebp-0xc]
   1848a:	mov    DWORD PTR [ebp-0x14],eax
   1848d:	lea    eax,[esi+0x4000]
   18493:	push   eax
   18494:	mov    BYTE PTR [ebp-0x10],bl
   18497:	call   0x10802
   1849c:	pop    ecx
   1849d:	cmp    eax,ebx
   1849f:	setne  cl
   184a2:	mov    DWORD PTR [ebp-0x4],eax
   184a5:	lea    eax,[ebp-0x8]
   184a8:	mov    BYTE PTR [ebp-0x8],cl
   184ab:	push   eax
   184ac:	lea    ecx,[ebp-0x10]
   184af:	call   0x11fe4
   184b4:	cmp    BYTE PTR [ebp-0x8],bl
   184b7:	je     0x184c2
   184b9:	push   DWORD PTR [ebp-0x4]
   184bc:	call   0x10836
   184c1:	pop    ecx
   184c2:	push   esi
   184c3:	push   DWORD PTR [ebp-0x14]
   184c6:	push   DWORD PTR [ebp-0xc]
   184c9:	call   0x1a82a
   184ce:	add    esp,0xc
   184d1:	cmp    BYTE PTR [ebp-0x18],bl
   184d4:	je     0x184df
   184d6:	push   DWORD PTR [ebp-0x14]
   184d9:	call   0x10836
   184de:	pop    ecx
   184df:	cmp    DWORD PTR [ebp-0x40],ebx
   184e2:	je     0x18445
   184e8:	lea    eax,[ebp-0x50]
   184eb:	push   eax
   184ec:	call   0x19a6c
   184f1:	cmp    DWORD PTR [ebp+0x10],0x1
   184f5:	jne    0x18520
   184f7:	mov    eax,DWORD PTR [ebp+0x14]
   184fa:	mov    DWORD PTR [eax],esi
   184fc:	jmp    0x18540
   184fe:	lea    eax,[ebp-0x50]
   18501:	push   eax
   18502:	call   0x19a6c
   18507:	mov    esi,DWORD PTR [ebp+0x8]
   1850a:	mov    BYTE PTR [esi],bl
   1850c:	mov    DWORD PTR [esi+0x4],ebx
   1850f:	cmp    BYTE PTR [ebp-0x10],bl
   18512:	je     0x18432
   18518:	push   DWORD PTR [ebp-0xc]
   1851b:	jmp    0x1842c
   18520:	lea    eax,[ebp-0x18]
   18523:	push   eax
   18524:	lea    ecx,[ebp-0x10]
   18527:	mov    BYTE PTR [ebp-0x18],bl
   1852a:	mov    DWORD PTR [ebp-0x14],ebx
   1852d:	call   0x11fe4
   18532:	cmp    BYTE PTR [ebp-0x18],bl
   18535:	je     0x18540
   18537:	push   DWORD PTR [ebp-0x14]
   1853a:	call   0x10836
   1853f:	pop    ecx
   18540:	mov    eax,DWORD PTR [ebp+0x8]
   18543:	mov    cl,BYTE PTR [ebp-0x10]
   18546:	mov    BYTE PTR [eax],cl
   18548:	mov    ecx,DWORD PTR [ebp-0xc]
   1854b:	mov    DWORD PTR [eax+0x4],ecx
   1854e:	pop    edi
   1854f:	pop    esi
   18550:	pop    ebx
   18551:	leave  
   18552:	ret    0x10
   18555:	int3   
   18556:	int3   
   18557:	int3   
   18558:	int3   
   18559:	int3   
   1855a:	xor    eax,eax
   1855c:	push   eax
   1855d:	push   eax
   1855e:	push   eax
   1855f:	push   eax
   18560:	push   0x70fd8
   18565:	call   DWORD PTR ds:0x1ba28
   1856b:	test   eax,eax
   1856d:	setge  al
   18570:	ret    
   18571:	int3   
   18572:	int3   
   18573:	int3   
   18574:	int3   
   18575:	int3   
   18576:	push   0x0
   18578:	push   0x70fd8
   1857d:	call   DWORD PTR ds:0x1ba24
   18583:	ret    
   18584:	int3   
   18585:	int3   
   18586:	int3   
   18587:	int3   
   18588:	int3   
   18589:	int3   
   1858a:	mov    edi,edi
   1858c:	push   esi
   1858d:	push   edi
   1858e:	push   0x1
   18590:	xor    edi,edi
   18592:	push   edi
   18593:	mov    esi,ecx
   18595:	call   0x12b2a
   1859a:	cmp    DWORD PTR ds:0x70fb8,edi
   185a0:	jne    0x185b7
   185a2:	mov    ecx,eax
   185a4:	mov    DWORD PTR ds:0x70fb8,ecx
   185aa:	mov    DWORD PTR [ecx],edi
   185ac:	mov    ecx,DWORD PTR ds:0x70fb8
   185b2:	xor    eax,eax
   185b4:	mov    DWORD PTR [ecx+0x8],edi
   185b7:	inc    DWORD PTR ds:0x71000
   185bd:	cmp    eax,edi
   185bf:	je     0x185c8
   185c1:	push   eax
   185c2:	call   0x10836
   185c7:	pop    ecx
   185c8:	push   edi
   185c9:	push   DWORD PTR ds:0x70fb8
   185cf:	mov    ecx,esi
   185d1:	call   0x12b2a
   185d6:	mov    DWORD PTR [esi+0xc],edi
   185d9:	mov    DWORD PTR [esi+0x4],eax
   185dc:	mov    DWORD PTR [eax],eax
   185de:	mov    esi,DWORD PTR [esi+0x4]
   185e1:	pop    edi
   185e2:	mov    DWORD PTR [esi+0x8],esi
   185e5:	pop    esi
   185e6:	ret    
   185e7:	int3   
   185e8:	int3   
   185e9:	int3   
   185ea:	int3   
   185eb:	int3   
   185ec:	mov    edi,edi
   185ee:	push   ebx
   185ef:	push   esi
   185f0:	xor    ebx,ebx
   185f2:	push   ebx
   185f3:	push   0x70fd8
   185f8:	call   DWORD PTR ds:0x1ba44
   185fe:	push   0x10
   18600:	call   0x10802
   18605:	mov    esi,eax
   18607:	pop    ecx
   18608:	cmp    esi,ebx
   1860a:	je     0x1861e
   1860c:	mov    ecx,esi
   1860e:	mov    BYTE PTR [esi+0x8],bl
   18611:	call   0x1858a
   18616:	mov    DWORD PTR ds:0x70ff8,esi
   1861c:	jmp    0x18624
   1861e:	mov    DWORD PTR ds:0x70ff8,ebx
   18624:	push   0x10
   18626:	call   0x10802
   1862b:	mov    esi,eax
   1862d:	pop    ecx
   1862e:	cmp    esi,ebx
   18630:	je     0x18644
   18632:	mov    ecx,esi
   18634:	mov    BYTE PTR [esi+0x8],bl
   18637:	call   0x1310a
   1863c:	mov    DWORD PTR ds:0x70ffc,esi
   18642:	jmp    0x1864a
   18644:	mov    DWORD PTR ds:0x70ffc,ebx
   1864a:	pop    esi
   1864b:	pop    ebx
   1864c:	ret    
   1864d:	int3   
   1864e:	int3   
   1864f:	int3   
   18650:	int3   
   18651:	int3   
   18652:	mov    edi,edi
   18654:	push   ebp
   18655:	mov    ebp,esp
   18657:	mov    ecx,DWORD PTR [ebp+0x8]
   1865a:	xor    edx,edx
   1865c:	cmp    ecx,edx
   1865e:	je     0x186ae
   18660:	mov    eax,DWORD PTR [ecx+0x1c]
   18663:	cmp    eax,edx
   18665:	je     0x186ae
   18667:	mov    DWORD PTR [eax+0x1c],edx
   1866a:	mov    DWORD PTR [ecx+0x14],edx
   1866d:	mov    DWORD PTR [ecx+0x8],edx
   18670:	mov    DWORD PTR [ecx+0x18],edx
   18673:	mov    DWORD PTR [ecx+0x30],0x1
   1867a:	lea    ecx,[eax+0x530]
   18680:	mov    DWORD PTR [eax],edx
   18682:	mov    DWORD PTR [eax+0x4],edx
   18685:	mov    DWORD PTR [eax+0xc],edx
   18688:	mov    DWORD PTR [eax+0x14],0x8000
   1868f:	mov    DWORD PTR [eax+0x20],edx
   18692:	mov    DWORD PTR [eax+0x28],edx
   18695:	mov    DWORD PTR [eax+0x2c],edx
   18698:	mov    DWORD PTR [eax+0x30],edx
   1869b:	mov    DWORD PTR [eax+0x38],edx
   1869e:	mov    DWORD PTR [eax+0x3c],edx
   186a1:	mov    DWORD PTR [eax+0x6c],ecx
   186a4:	mov    DWORD PTR [eax+0x50],ecx
   186a7:	mov    DWORD PTR [eax+0x4c],ecx
   186aa:	xor    eax,eax
   186ac:	jmp    0x186b1
   186ae:	push   0xfffffffe
   186b0:	pop    eax
   186b1:	pop    ebp
   186b2:	ret    0x4
   186b5:	int3   
   186b6:	int3   
   186b7:	int3   
   186b8:	int3   
   186b9:	int3   
   186ba:	mov    edi,edi
   186bc:	push   ebp
   186bd:	mov    ebp,esp
   186bf:	mov    eax,DWORD PTR [ebp+0x10]
   186c2:	push   esi
   186c3:	push   edi
   186c4:	xor    edi,edi
   186c6:	cmp    eax,edi
   186c8:	je     0x18763
   186ce:	cmp    BYTE PTR [eax],0x31
   186d1:	jne    0x18763
   186d7:	cmp    DWORD PTR [ebp+0x14],0x38
   186db:	jne    0x18763
   186e1:	mov    esi,DWORD PTR [ebp+0x8]
   186e4:	cmp    esi,edi
   186e6:	jne    0x186ec
   186e8:	push   0xfffffffe
   186ea:	jmp    0x18765
   186ec:	mov    DWORD PTR [esi+0x18],edi
   186ef:	cmp    DWORD PTR [esi+0x20],edi
   186f2:	jne    0x186fe
   186f4:	mov    DWORD PTR [esi+0x20],0x19ab2
   186fb:	mov    DWORD PTR [esi+0x28],edi
   186fe:	cmp    DWORD PTR [esi+0x24],edi
   18701:	jne    0x1870a
   18703:	mov    DWORD PTR [esi+0x24],0x19ace
   1870a:	push   0x2530
   1870f:	push   0x1
   18711:	push   DWORD PTR [esi+0x28]
   18714:	call   DWORD PTR [esi+0x20]
   18717:	cmp    eax,edi
   18719:	jne    0x1871f
   1871b:	push   0xfffffffc
   1871d:	jmp    0x18765
   1871f:	mov    ecx,DWORD PTR [ebp+0xc]
   18722:	cmp    ecx,edi
   18724:	mov    DWORD PTR [esi+0x1c],eax
   18727:	jge    0x18730
   18729:	mov    DWORD PTR [eax+0x8],edi
   1872c:	neg    ecx
   1872e:	jmp    0x18741
   18730:	mov    edx,ecx
   18732:	sar    edx,0x4
   18735:	inc    edx
   18736:	cmp    ecx,0x30
   18739:	mov    DWORD PTR [eax+0x8],edx
   1873c:	jge    0x18741
   1873e:	and    ecx,0xf
   18741:	lea    edx,[ecx-0x8]
   18744:	cmp    edx,0x7
   18747:	ja     0x18757
   18749:	push   esi
   1874a:	mov    DWORD PTR [eax+0x24],ecx
   1874d:	mov    DWORD PTR [eax+0x34],edi
   18750:	call   0x18652
   18755:	jmp    0x18766
   18757:	push   eax
   18758:	push   DWORD PTR [esi+0x28]
   1875b:	call   DWORD PTR [esi+0x24]
   1875e:	mov    DWORD PTR [esi+0x1c],edi
   18761:	jmp    0x186e8
   18763:	push   0xfffffffa
   18765:	pop    eax
   18766:	pop    edi
   18767:	pop    esi
   18768:	pop    ebp
   18769:	ret    0x10
   1876c:	int3   
   1876d:	int3   
   1876e:	int3   
   1876f:	int3   
   18770:	int3   
   18771:	int3   
   18772:	mov    edi,edi
   18774:	push   ebp
   18775:	mov    ebp,esp
   18777:	push   ecx
   18778:	push   ebx
   18779:	push   esi
   1877a:	mov    esi,DWORD PTR [edi+0x1c]
   1877d:	cmp    DWORD PTR [esi+0x34],0x0
   18781:	mov    ebx,eax
   18783:	jne    0x187a3
   18785:	mov    ecx,DWORD PTR [esi+0x24]
   18788:	xor    eax,eax
   1878a:	inc    eax
   1878b:	shl    eax,cl
   1878d:	push   0x1
   1878f:	push   eax
   18790:	push   DWORD PTR [edi+0x28]
   18793:	call   DWORD PTR [edi+0x20]
   18796:	mov    DWORD PTR [esi+0x34],eax
   18799:	test   eax,eax
   1879b:	jne    0x187a3
   1879d:	inc    eax
   1879e:	jmp    0x18845
   187a3:	xor    eax,eax
   187a5:	cmp    DWORD PTR [esi+0x28],eax
   187a8:	jne    0x187bb
   187aa:	mov    ecx,DWORD PTR [esi+0x24]
   187ad:	xor    edx,edx
   187af:	inc    edx
   187b0:	shl    edx,cl
   187b2:	mov    DWORD PTR [esi+0x30],eax
   187b5:	mov    DWORD PTR [esi+0x2c],eax
   187b8:	mov    DWORD PTR [esi+0x28],edx
   187bb:	sub    ebx,DWORD PTR [edi+0x10]
   187be:	mov    eax,DWORD PTR [esi+0x28]
   187c1:	cmp    ebx,eax
   187c3:	jb     0x187dd
   187c5:	mov    ecx,DWORD PTR [edi+0xc]
   187c8:	push   eax
   187c9:	sub    ecx,eax
   187cb:	push   ecx
   187cc:	push   DWORD PTR [esi+0x34]
   187cf:	call   0x1a82a
   187d4:	add    esp,0xc
   187d7:	and    DWORD PTR [esi+0x30],0x0
   187db:	jmp    0x1881e
   187dd:	sub    eax,DWORD PTR [esi+0x30]
   187e0:	mov    DWORD PTR [ebp-0x4],eax
   187e3:	cmp    eax,ebx
   187e5:	jbe    0x187ea
   187e7:	mov    DWORD PTR [ebp-0x4],ebx
   187ea:	mov    eax,DWORD PTR [edi+0xc]
   187ed:	push   DWORD PTR [ebp-0x4]
   187f0:	sub    eax,ebx
   187f2:	push   eax
   187f3:	mov    eax,DWORD PTR [esi+0x34]
   187f6:	add    eax,DWORD PTR [esi+0x30]
   187f9:	push   eax
   187fa:	call   0x1a82a
   187ff:	mov    eax,DWORD PTR [ebp-0x4]
   18802:	add    esp,0xc
   18805:	sub    ebx,eax
   18807:	je     0x18826
   18809:	mov    eax,DWORD PTR [edi+0xc]
   1880c:	push   ebx
   1880d:	sub    eax,ebx
   1880f:	push   eax
   18810:	push   DWORD PTR [esi+0x34]
   18813:	call   0x1a82a
   18818:	add    esp,0xc
   1881b:	mov    DWORD PTR [esi+0x30],ebx
   1881e:	mov    eax,DWORD PTR [esi+0x28]
   18821:	mov    DWORD PTR [esi+0x2c],eax
   18824:	jmp    0x18843
   18826:	add    DWORD PTR [esi+0x30],eax
   18829:	mov    ecx,DWORD PTR [esi+0x30]
   1882c:	mov    edx,DWORD PTR [esi+0x28]
   1882f:	cmp    ecx,edx
   18831:	jne    0x18837
   18833:	and    DWORD PTR [esi+0x30],0x0
   18837:	mov    ecx,DWORD PTR [esi+0x2c]
   1883a:	cmp    ecx,edx
   1883c:	jae    0x18843
   1883e:	add    ecx,eax
   18840:	mov    DWORD PTR [esi+0x2c],ecx
   18843:	xor    eax,eax
   18845:	pop    esi
   18846:	pop    ebx
   18847:	leave  
   18848:	ret    
   18849:	int3   
   1884a:	int3   
   1884b:	int3   
   1884c:	int3   
   1884d:	int3   
   1884e:	mov    edi,edi
   18850:	push   ebp
   18851:	mov    ebp,esp
   18853:	mov    edx,DWORD PTR [ebp+0x8]
   18856:	sub    esp,0x2c
   18859:	push   ebx
   1885a:	xor    eax,eax
   1885c:	push   esi
   1885d:	push   edi
   1885e:	cmp    edx,eax
   18860:	je     0x188b0
   18862:	mov    esi,DWORD PTR [edx+0x1c]
   18865:	cmp    esi,eax
   18867:	je     0x188b0
   18869:	cmp    DWORD PTR [edx+0xc],eax
   1886c:	je     0x188b0
   1886e:	cmp    DWORD PTR [edx],eax
   18870:	jne    0x18877
   18872:	cmp    DWORD PTR [edx+0x4],eax
   18875:	jne    0x188b0
   18877:	cmp    DWORD PTR [esi],0xb
   1887a:	jne    0x18882
   1887c:	mov    DWORD PTR [esi],0xc
   18882:	mov    eax,DWORD PTR [edx+0xc]
   18885:	mov    ecx,DWORD PTR [edx+0x10]
   18888:	and    DWORD PTR [ebp-0x24],0x0
   1888c:	mov    ebx,DWORD PTR [esi+0x38]
   1888f:	mov    edi,DWORD PTR [esi+0x3c]
   18892:	mov    DWORD PTR [ebp-0x18],eax
   18895:	mov    eax,DWORD PTR [edx]
   18897:	mov    DWORD PTR [ebp-0x4],eax
   1889a:	mov    eax,DWORD PTR [edx+0x4]
   1889d:	mov    DWORD PTR [ebp-0x8],eax
   188a0:	mov    DWORD PTR [ebp-0x2c],eax
   188a3:	mov    eax,DWORD PTR [esi]
   188a5:	mov    DWORD PTR [ebp-0x10],ecx
   188a8:	mov    DWORD PTR [ebp-0x1c],ecx
   188ab:	cmp    eax,0x1c
   188ae:	jbe    0x188bd
   188b0:	push   0xfffffffe
   188b2:	pop    eax
   188b3:	pop    edi
   188b4:	pop    esi
   188b5:	pop    ebx
   188b6:	leave  
   188b7:	ret    0x8
   188ba:	mov    edx,DWORD PTR [ebp+0x8]
   188bd:	jmp    DWORD PTR [eax*4+0x199f2]
   188c4:	mov    eax,DWORD PTR [esi+0x8]
   188c7:	test   eax,eax
   188c9:	jne    0x188f5
   188cb:	mov    DWORD PTR [esi],0xc
   188d1:	jmp    0x198c3
   188d6:	cmp    DWORD PTR [ebp-0x8],0x0
   188da:	je     0x19911
   188e0:	mov    ecx,DWORD PTR [ebp-0x4]
   188e3:	movzx  edx,BYTE PTR [ecx]
   188e6:	dec    DWORD PTR [ebp-0x8]
   188e9:	mov    ecx,edi
   188eb:	shl    edx,cl
   188ed:	add    ebx,edx
   188ef:	inc    DWORD PTR [ebp-0x4]
   188f2:	add    edi,0x8
   188f5:	cmp    edi,0x10
   188f8:	jb     0x188d6
   188fa:	test   al,0x2
   188fc:	je     0x18939
   188fe:	cmp    ebx,0x8b1f
   18904:	jne    0x18939
   18906:	xor    edi,edi
   18908:	push   edi
   18909:	push   edi
   1890a:	push   edi
   1890b:	call   0x1a774
   18910:	mov    DWORD PTR [esi+0x18],eax
   18913:	push   0x2
   18915:	lea    eax,[ebp-0x14]
   18918:	push   eax
   18919:	mov    BYTE PTR [ebp-0x14],0x1f
   1891d:	mov    BYTE PTR [ebp-0x13],0x8b
   18921:	push   DWORD PTR [esi+0x18]
   18924:	call   0x1a774
   18929:	mov    DWORD PTR [esi+0x18],eax
   1892c:	xor    ebx,ebx
   1892e:	mov    DWORD PTR [esi],0x1
   18934:	jmp    0x198c3
   18939:	mov    eax,DWORD PTR [esi+0x20]
   1893c:	and    DWORD PTR [esi+0x10],0x0
   18940:	test   eax,eax
   18942:	je     0x18948
   18944:	or     DWORD PTR [eax+0x30],0xffffffff
   18948:	test   BYTE PTR [esi+0x8],0x1
   1894c:	je     0x189d2
   18952:	movzx  eax,bl
   18955:	shl    eax,0x8
   18958:	mov    ecx,ebx
   1895a:	shr    ecx,0x8
   1895d:	add    eax,ecx
   1895f:	push   0x1f
   18961:	xor    edx,edx
   18963:	pop    ecx
   18964:	div    ecx
   18966:	test   edx,edx
   18968:	jne    0x189d2
   1896a:	mov    eax,ebx
   1896c:	and    al,0xf
   1896e:	cmp    al,0x8
   18970:	je     0x18981
   18972:	mov    eax,DWORD PTR [ebp+0x8]
   18975:	mov    DWORD PTR [eax+0x18],0x1b990
   1897c:	jmp    0x198bd
   18981:	shr    ebx,0x4
   18984:	mov    ecx,ebx
   18986:	and    ecx,0xf
   18989:	add    ecx,0x8
   1898c:	sub    edi,0x4
   1898f:	cmp    ecx,DWORD PTR [esi+0x24]
   18992:	jbe    0x189a3
   18994:	mov    eax,DWORD PTR [ebp+0x8]
   18997:	mov    DWORD PTR [eax+0x18],0x1b97c
   1899e:	jmp    0x198bd
   189a3:	xor    eax,eax
   189a5:	xor    edi,edi
   189a7:	inc    eax
   189a8:	push   edi
   189a9:	shl    eax,cl
   189ab:	push   edi
   189ac:	push   edi
   189ad:	mov    DWORD PTR [esi+0x14],eax
   189b0:	call   0x1a2d2
   189b5:	mov    ecx,DWORD PTR [ebp+0x8]
   189b8:	shr    ebx,0x8
   189bb:	not    ebx
   189bd:	and    ebx,0x2
   189c0:	or     ebx,0x9
   189c3:	mov    DWORD PTR [esi+0x18],eax
   189c6:	mov    DWORD PTR [ecx+0x30],eax
   189c9:	mov    DWORD PTR [esi],ebx
   189cb:	xor    ebx,ebx
   189cd:	jmp    0x198c3
   189d2:	mov    eax,DWORD PTR [ebp+0x8]
   189d5:	mov    DWORD PTR [eax+0x18],0x1b964
   189dc:	jmp    0x198bd
   189e1:	cmp    edi,0x10
   189e4:	jae    0x18a0d
   189e6:	cmp    DWORD PTR [ebp-0x8],0x0
   189ea:	je     0x19911
   189f0:	mov    eax,DWORD PTR [ebp-0x4]
   189f3:	movzx  eax,BYTE PTR [eax]
   189f6:	dec    DWORD PTR [ebp-0x8]
   189f9:	mov    ecx,edi
   189fb:	shl    eax,cl
   189fd:	add    edi,0x8
   18a00:	add    ebx,eax
   18a02:	inc    DWORD PTR [ebp-0x4]
   18a05:	cmp    edi,0x10
   18a08:	jb     0x189e6
   18a0a:	mov    edx,DWORD PTR [ebp+0x8]
   18a0d:	mov    DWORD PTR [esi+0x10],ebx
   18a10:	cmp    bl,0x8
   18a13:	je     0x18a21
   18a15:	mov    DWORD PTR [edx+0x18],0x1b990
   18a1c:	jmp    0x198bd
   18a21:	test   ebx,0xe000
   18a27:	je     0x18a35
   18a29:	mov    DWORD PTR [edx+0x18],0x1b94a
   18a30:	jmp    0x198bd
   18a35:	mov    eax,DWORD PTR [esi+0x20]
   18a38:	test   eax,eax
   18a3a:	je     0x18a46
   18a3c:	mov    ecx,ebx
   18a3e:	shr    ecx,0x8
   18a41:	and    ecx,0x1
   18a44:	mov    DWORD PTR [eax],ecx
   18a46:	test   DWORD PTR [esi+0x10],0x200
   18a4d:	je     0x18a6c
   18a4f:	mov    BYTE PTR [ebp-0x14],bl
   18a52:	push   0x2
   18a54:	lea    eax,[ebp-0x14]
   18a57:	shr    ebx,0x8
   18a5a:	push   eax
   18a5b:	mov    BYTE PTR [ebp-0x13],bl
   18a5e:	push   DWORD PTR [esi+0x18]
   18a61:	call   0x1a774
   18a66:	mov    edx,DWORD PTR [ebp+0x8]
   18a69:	mov    DWORD PTR [esi+0x18],eax
   18a6c:	xor    ebx,ebx
   18a6e:	xor    edi,edi
   18a70:	mov    DWORD PTR [esi],0x2
   18a76:	cmp    edi,0x20
   18a79:	jae    0x18aa2
   18a7b:	cmp    DWORD PTR [ebp-0x8],0x0
   18a7f:	je     0x19911
   18a85:	mov    eax,DWORD PTR [ebp-0x4]
   18a88:	movzx  eax,BYTE PTR [eax]
   18a8b:	dec    DWORD PTR [ebp-0x8]
   18a8e:	mov    ecx,edi
   18a90:	shl    eax,cl
   18a92:	add    edi,0x8
   18a95:	add    ebx,eax
   18a97:	inc    DWORD PTR [ebp-0x4]
   18a9a:	cmp    edi,0x20
   18a9d:	jb     0x18a7b
   18a9f:	mov    edx,DWORD PTR [ebp+0x8]
   18aa2:	mov    eax,DWORD PTR [esi+0x20]
   18aa5:	test   eax,eax
   18aa7:	je     0x18aac
   18aa9:	mov    DWORD PTR [eax+0x4],ebx
   18aac:	test   DWORD PTR [esi+0x10],0x200
   18ab3:	je     0x18ae2
   18ab5:	mov    eax,ebx
   18ab7:	shr    eax,0x8
   18aba:	mov    BYTE PTR [ebp-0x13],al
   18abd:	mov    eax,ebx
   18abf:	shr    eax,0x10
   18ac2:	mov    BYTE PTR [ebp-0x12],al
   18ac5:	mov    BYTE PTR [ebp-0x14],bl
   18ac8:	push   0x4
   18aca:	lea    eax,[ebp-0x14]
   18acd:	shr    ebx,0x18
   18ad0:	push   eax
   18ad1:	mov    BYTE PTR [ebp-0x11],bl
   18ad4:	push   DWORD PTR [esi+0x18]
   18ad7:	call   0x1a774
   18adc:	mov    edx,DWORD PTR [ebp+0x8]
   18adf:	mov    DWORD PTR [esi+0x18],eax
   18ae2:	xor    ebx,ebx
   18ae4:	xor    edi,edi
   18ae6:	mov    DWORD PTR [esi],0x3
   18aec:	cmp    edi,0x10
   18aef:	jae    0x18b18
   18af1:	cmp    DWORD PTR [ebp-0x8],0x0
   18af5:	je     0x19911
   18afb:	mov    eax,DWORD PTR [ebp-0x4]
   18afe:	movzx  eax,BYTE PTR [eax]
   18b01:	dec    DWORD PTR [ebp-0x8]
   18b04:	mov    ecx,edi
   18b06:	shl    eax,cl
   18b08:	add    edi,0x8
   18b0b:	add    ebx,eax
   18b0d:	inc    DWORD PTR [ebp-0x4]
   18b10:	cmp    edi,0x10
   18b13:	jb     0x18af1
   18b15:	mov    edx,DWORD PTR [ebp+0x8]
   18b18:	mov    eax,DWORD PTR [esi+0x20]
   18b1b:	test   eax,eax
   18b1d:	je     0x18b35
   18b1f:	mov    ecx,ebx
   18b21:	and    ecx,0xff
   18b27:	mov    DWORD PTR [eax+0x8],ecx
   18b2a:	mov    ecx,DWORD PTR [esi+0x20]
   18b2d:	mov    eax,ebx
   18b2f:	shr    eax,0x8
   18b32:	mov    DWORD PTR [ecx+0xc],eax
   18b35:	test   DWORD PTR [esi+0x10],0x200
   18b3c:	je     0x18b5b
   18b3e:	mov    BYTE PTR [ebp-0x14],bl
   18b41:	push   0x2
   18b43:	lea    eax,[ebp-0x14]
   18b46:	shr    ebx,0x8
   18b49:	push   eax
   18b4a:	mov    BYTE PTR [ebp-0x13],bl
   18b4d:	push   DWORD PTR [esi+0x18]
   18b50:	call   0x1a774
   18b55:	mov    edx,DWORD PTR [ebp+0x8]
   18b58:	mov    DWORD PTR [esi+0x18],eax
   18b5b:	xor    ebx,ebx
   18b5d:	xor    edi,edi
   18b5f:	mov    DWORD PTR [esi],0x4
   18b65:	test   DWORD PTR [esi+0x10],0x400
   18b6c:	je     0x18bd3
   18b6e:	cmp    edi,0x10
   18b71:	jae    0x18b9a
   18b73:	cmp    DWORD PTR [ebp-0x8],0x0
   18b77:	je     0x19911
   18b7d:	mov    eax,DWORD PTR [ebp-0x4]
   18b80:	movzx  eax,BYTE PTR [eax]
   18b83:	dec    DWORD PTR [ebp-0x8]
   18b86:	mov    ecx,edi
   18b88:	shl    eax,cl
   18b8a:	add    edi,0x8
   18b8d:	add    ebx,eax
   18b8f:	inc    DWORD PTR [ebp-0x4]
   18b92:	cmp    edi,0x10
   18b95:	jb     0x18b73
   18b97:	mov    edx,DWORD PTR [ebp+0x8]
   18b9a:	mov    eax,DWORD PTR [esi+0x20]
   18b9d:	mov    DWORD PTR [esi+0x40],ebx
   18ba0:	test   eax,eax
   18ba2:	je     0x18ba7
   18ba4:	mov    DWORD PTR [eax+0x14],ebx
   18ba7:	test   DWORD PTR [esi+0x10],0x200
   18bae:	je     0x18bcd
   18bb0:	mov    BYTE PTR [ebp-0x14],bl
   18bb3:	push   0x2
   18bb5:	lea    eax,[ebp-0x14]
   18bb8:	shr    ebx,0x8
   18bbb:	push   eax
   18bbc:	mov    BYTE PTR [ebp-0x13],bl
   18bbf:	push   DWORD PTR [esi+0x18]
   18bc2:	call   0x1a774
   18bc7:	mov    edx,DWORD PTR [ebp+0x8]
   18bca:	mov    DWORD PTR [esi+0x18],eax
   18bcd:	xor    ebx,ebx
   18bcf:	xor    edi,edi
   18bd1:	jmp    0x18bde
   18bd3:	mov    eax,DWORD PTR [esi+0x20]
   18bd6:	test   eax,eax
   18bd8:	je     0x18bde
   18bda:	and    DWORD PTR [eax+0x10],0x0
   18bde:	mov    DWORD PTR [esi],0x5
   18be4:	test   DWORD PTR [esi+0x10],0x400
   18beb:	je     0x18c75
   18bf1:	mov    edx,DWORD PTR [esi+0x40]
   18bf4:	mov    eax,DWORD PTR [ebp-0x8]
   18bf7:	mov    DWORD PTR [ebp-0xc],edx
   18bfa:	cmp    edx,eax
   18bfc:	jbe    0x18c01
   18bfe:	mov    DWORD PTR [ebp-0xc],eax
   18c01:	cmp    DWORD PTR [ebp-0xc],0x0
   18c05:	je     0x18c68
   18c07:	mov    ecx,DWORD PTR [esi+0x20]
   18c0a:	test   ecx,ecx
   18c0c:	je     0x18c42
   18c0e:	mov    eax,DWORD PTR [ecx+0x10]
   18c11:	mov    DWORD PTR [ebp-0x28],eax
   18c14:	test   eax,eax
   18c16:	je     0x18c42
   18c18:	mov    eax,DWORD PTR [ecx+0x14]
   18c1b:	mov    ecx,DWORD PTR [ecx+0x18]
   18c1e:	sub    eax,edx
   18c20:	mov    edx,DWORD PTR [ebp-0xc]
   18c23:	add    edx,eax
   18c25:	cmp    edx,ecx
   18c27:	jbe    0x18c2d
   18c29:	sub    ecx,eax
   18c2b:	jmp    0x18c30
   18c2d:	mov    ecx,DWORD PTR [ebp-0xc]
   18c30:	push   ecx
   18c31:	mov    ecx,DWORD PTR [ebp-0x28]
   18c34:	push   DWORD PTR [ebp-0x4]
   18c37:	add    ecx,eax
   18c39:	push   ecx
   18c3a:	call   0x1a82a
   18c3f:	add    esp,0xc
   18c42:	test   DWORD PTR [esi+0x10],0x200
   18c49:	je     0x18c5c
   18c4b:	push   DWORD PTR [ebp-0xc]
   18c4e:	push   DWORD PTR [ebp-0x4]
   18c51:	push   DWORD PTR [esi+0x18]
   18c54:	call   0x1a774
   18c59:	mov    DWORD PTR [esi+0x18],eax
   18c5c:	mov    eax,DWORD PTR [ebp-0xc]
   18c5f:	sub    DWORD PTR [ebp-0x8],eax
   18c62:	add    DWORD PTR [ebp-0x4],eax
   18c65:	sub    DWORD PTR [esi+0x40],eax
   18c68:	cmp    DWORD PTR [esi+0x40],0x0
   18c6c:	jne    0x19911
   18c72:	mov    edx,DWORD PTR [ebp+0x8]
   18c75:	and    DWORD PTR [esi+0x40],0x0
   18c79:	mov    DWORD PTR [esi],0x6
   18c7f:	test   DWORD PTR [esi+0x10],0x800
   18c86:	je     0x18d03
   18c88:	cmp    DWORD PTR [ebp-0x8],0x0
   18c8c:	je     0x19911
   18c92:	xor    ecx,ecx
   18c94:	mov    eax,DWORD PTR [ebp-0x4]
   18c97:	movzx  eax,BYTE PTR [ecx+eax*1]
   18c9b:	inc    ecx
   18c9c:	mov    DWORD PTR [ebp-0xc],ecx
   18c9f:	mov    ecx,DWORD PTR [esi+0x20]
   18ca2:	mov    DWORD PTR [ebp-0x20],eax
   18ca5:	test   ecx,ecx
   18ca7:	je     0x18cc4
   18ca9:	mov    edx,DWORD PTR [ecx+0x1c]
   18cac:	mov    DWORD PTR [ebp-0x28],edx
   18caf:	test   edx,edx
   18cb1:	je     0x18cc4
   18cb3:	mov    edx,DWORD PTR [esi+0x40]
   18cb6:	cmp    edx,DWORD PTR [ecx+0x20]
   18cb9:	jae    0x18cc4
   18cbb:	mov    ecx,DWORD PTR [ebp-0x28]
   18cbe:	mov    BYTE PTR [ecx+edx*1],al
   18cc1:	inc    DWORD PTR [esi+0x40]
   18cc4:	test   eax,eax
   18cc6:	je     0x18cd0
   18cc8:	mov    ecx,DWORD PTR [ebp-0xc]
   18ccb:	cmp    ecx,DWORD PTR [ebp-0x8]
   18cce:	jb     0x18c94
   18cd0:	test   DWORD PTR [esi+0x10],0x200
   18cd7:	je     0x18ced
   18cd9:	push   DWORD PTR [ebp-0xc]
   18cdc:	push   DWORD PTR [ebp-0x4]
   18cdf:	push   DWORD PTR [esi+0x18]
   18ce2:	call   0x1a774
   18ce7:	mov    DWORD PTR [esi+0x18],eax
   18cea:	mov    eax,DWORD PTR [ebp-0x20]
   18ced:	mov    ecx,DWORD PTR [ebp-0xc]
   18cf0:	sub    DWORD PTR [ebp-0x8],ecx
   18cf3:	add    DWORD PTR [ebp-0x4],ecx
   18cf6:	test   eax,eax
   18cf8:	jne    0x19911
   18cfe:	mov    edx,DWORD PTR [ebp+0x8]
   18d01:	jmp    0x18d0e
   18d03:	mov    eax,DWORD PTR [esi+0x20]
   18d06:	test   eax,eax
   18d08:	je     0x18d0e
   18d0a:	and    DWORD PTR [eax+0x1c],0x0
   18d0e:	and    DWORD PTR [esi+0x40],0x0
   18d12:	mov    DWORD PTR [esi],0x7
   18d18:	test   DWORD PTR [esi+0x10],0x1000
   18d1f:	je     0x18d9c
   18d21:	cmp    DWORD PTR [ebp-0x8],0x0
   18d25:	je     0x19911
   18d2b:	xor    ecx,ecx
   18d2d:	mov    eax,DWORD PTR [ebp-0x4]
   18d30:	movzx  eax,BYTE PTR [ecx+eax*1]
   18d34:	inc    ecx
   18d35:	mov    DWORD PTR [ebp-0xc],ecx
   18d38:	mov    ecx,DWORD PTR [esi+0x20]
   18d3b:	mov    DWORD PTR [ebp-0x20],eax
   18d3e:	test   ecx,ecx
   18d40:	je     0x18d5d
   18d42:	mov    edx,DWORD PTR [ecx+0x24]
   18d45:	mov    DWORD PTR [ebp-0x28],edx
   18d48:	test   edx,edx
   18d4a:	je     0x18d5d
   18d4c:	mov    edx,DWORD PTR [esi+0x40]
   18d4f:	cmp    edx,DWORD PTR [ecx+0x28]
   18d52:	jae    0x18d5d
   18d54:	mov    ecx,DWORD PTR [ebp-0x28]
   18d57:	mov    BYTE PTR [ecx+edx*1],al
   18d5a:	inc    DWORD PTR [esi+0x40]
   18d5d:	test   eax,eax
   18d5f:	je     0x18d69
   18d61:	mov    ecx,DWORD PTR [ebp-0xc]
   18d64:	cmp    ecx,DWORD PTR [ebp-0x8]
   18d67:	jb     0x18d2d
   18d69:	test   DWORD PTR [esi+0x10],0x200
   18d70:	je     0x18d86
   18d72:	push   DWORD PTR [ebp-0xc]
   18d75:	push   DWORD PTR [ebp-0x4]
   18d78:	push   DWORD PTR [esi+0x18]
   18d7b:	call   0x1a774
   18d80:	mov    DWORD PTR [esi+0x18],eax
   18d83:	mov    eax,DWORD PTR [ebp-0x20]
   18d86:	mov    ecx,DWORD PTR [ebp-0xc]
   18d89:	sub    DWORD PTR [ebp-0x8],ecx
   18d8c:	add    DWORD PTR [ebp-0x4],ecx
   18d8f:	test   eax,eax
   18d91:	jne    0x19911
   18d97:	mov    edx,DWORD PTR [ebp+0x8]
   18d9a:	jmp    0x18da7
   18d9c:	mov    eax,DWORD PTR [esi+0x20]
   18d9f:	test   eax,eax
   18da1:	je     0x18da7
   18da3:	and    DWORD PTR [eax+0x24],0x0
   18da7:	mov    DWORD PTR [esi],0x8
   18dad:	test   DWORD PTR [esi+0x10],0x200
   18db4:	je     0x18dfa
   18db6:	cmp    edi,0x10
   18db9:	jae    0x18de2
   18dbb:	cmp    DWORD PTR [ebp-0x8],0x0
   18dbf:	je     0x19911
   18dc5:	mov    eax,DWORD PTR [ebp-0x4]
   18dc8:	movzx  eax,BYTE PTR [eax]
   18dcb:	dec    DWORD PTR [ebp-0x8]
   18dce:	mov    ecx,edi
   18dd0:	shl    eax,cl
   18dd2:	add    edi,0x8
   18dd5:	add    ebx,eax
   18dd7:	inc    DWORD PTR [ebp-0x4]
   18dda:	cmp    edi,0x10
   18ddd:	jb     0x18dbb
   18ddf:	mov    edx,DWORD PTR [ebp+0x8]
   18de2:	movzx  eax,WORD PTR [esi+0x18]
   18de6:	cmp    ebx,eax
   18de8:	je     0x18df6
   18dea:	mov    DWORD PTR [edx+0x18],0x1b936
   18df1:	jmp    0x198bd
   18df6:	xor    ebx,ebx
   18df8:	xor    edi,edi
   18dfa:	mov    eax,DWORD PTR [esi+0x20]
   18dfd:	test   eax,eax
   18dff:	je     0x18e15
   18e01:	mov    edx,DWORD PTR [esi+0x10]
   18e04:	xor    ecx,ecx
   18e06:	inc    ecx
   18e07:	sar    edx,0x9
   18e0a:	and    edx,ecx
   18e0c:	mov    DWORD PTR [eax+0x2c],edx
   18e0f:	mov    eax,DWORD PTR [esi+0x20]
   18e12:	mov    DWORD PTR [eax+0x30],ecx
   18e15:	xor    eax,eax
   18e17:	push   eax
   18e18:	push   eax
   18e19:	push   eax
   18e1a:	call   0x1a774
   18e1f:	mov    ecx,DWORD PTR [ebp+0x8]
   18e22:	mov    DWORD PTR [esi+0x18],eax
   18e25:	mov    DWORD PTR [ecx+0x30],eax
   18e28:	jmp    0x19526
   18e2d:	cmp    edi,0x20
   18e30:	jae    0x18e59
   18e32:	cmp    DWORD PTR [ebp-0x8],0x0
   18e36:	je     0x19911
   18e3c:	mov    eax,DWORD PTR [ebp-0x4]
   18e3f:	movzx  eax,BYTE PTR [eax]
   18e42:	dec    DWORD PTR [ebp-0x8]
   18e45:	mov    ecx,edi
   18e47:	shl    eax,cl
   18e49:	add    edi,0x8
   18e4c:	add    ebx,eax
   18e4e:	inc    DWORD PTR [ebp-0x4]
   18e51:	cmp    edi,0x20
   18e54:	jb     0x18e32
   18e56:	mov    edx,DWORD PTR [ebp+0x8]
   18e59:	mov    ecx,ebx
   18e5b:	mov    eax,0xff00
   18e60:	and    ecx,eax
   18e62:	mov    edi,ebx
   18e64:	shl    edi,0x10
   18e67:	add    ecx,edi
   18e69:	mov    edi,ebx
   18e6b:	shr    edi,0x8
   18e6e:	and    edi,eax
   18e70:	shl    ecx,0x8
   18e73:	shr    ebx,0x18
   18e76:	add    ecx,edi
   18e78:	lea    eax,[ecx+ebx*1]
   18e7b:	mov    DWORD PTR [esi+0x18],eax
   18e7e:	mov    DWORD PTR [edx+0x30],eax
   18e81:	xor    ebx,ebx
   18e83:	xor    edi,edi
   18e85:	mov    DWORD PTR [esi],0xa
   18e8b:	cmp    DWORD PTR [esi+0xc],0x0
   18e8f:	je     0x198d3
   18e95:	xor    eax,eax
   18e97:	push   eax
   18e98:	push   eax
   18e99:	push   eax
   18e9a:	call   0x1a2d2
   18e9f:	mov    ecx,DWORD PTR [ebp+0x8]
   18ea2:	mov    DWORD PTR [esi+0x18],eax
   18ea5:	mov    DWORD PTR [ecx+0x30],eax
   18ea8:	mov    DWORD PTR [esi],0xb
   18eae:	cmp    DWORD PTR [ebp+0xc],0x5
   18eb2:	je     0x19911
   18eb8:	mov    edx,DWORD PTR [ebp+0x8]
   18ebb:	cmp    DWORD PTR [esi+0x4],0x0
   18ebf:	je     0x18ed5
   18ec1:	mov    ecx,edi
   18ec3:	and    ecx,0x7
   18ec6:	shr    ebx,cl
   18ec8:	sub    edi,ecx
   18eca:	mov    DWORD PTR [esi],0x18
   18ed0:	jmp    0x198c3
   18ed5:	cmp    edi,0x3
   18ed8:	jae    0x18f01
   18eda:	cmp    DWORD PTR [ebp-0x8],0x0
   18ede:	je     0x19911
   18ee4:	mov    eax,DWORD PTR [ebp-0x4]
   18ee7:	movzx  eax,BYTE PTR [eax]
   18eea:	dec    DWORD PTR [ebp-0x8]
   18eed:	mov    ecx,edi
   18eef:	shl    eax,cl
   18ef1:	add    edi,0x8
   18ef4:	add    ebx,eax
   18ef6:	inc    DWORD PTR [ebp-0x4]
   18ef9:	cmp    edi,0x3
   18efc:	jb     0x18eda
   18efe:	mov    edx,DWORD PTR [ebp+0x8]
   18f01:	mov    eax,ebx
   18f03:	and    eax,0x1
   18f06:	shr    ebx,1
   18f08:	mov    DWORD PTR [esi+0x4],eax
   18f0b:	mov    eax,ebx
   18f0d:	and    eax,0x3
   18f10:	dec    edi
   18f11:	sub    eax,0x0
   18f14:	je     0x18f5a
   18f16:	dec    eax
   18f17:	je     0x18f36
   18f19:	dec    eax
   18f1a:	je     0x18f2e
   18f1c:	dec    eax
   18f1d:	jne    0x18f60
   18f1f:	mov    DWORD PTR [edx+0x18],0x1b922
   18f26:	mov    DWORD PTR [esi],0x1b
   18f2c:	jmp    0x18f60
   18f2e:	mov    DWORD PTR [esi],0xf
   18f34:	jmp    0x18f60
   18f36:	mov    DWORD PTR [esi+0x4c],0x6d5b0
   18f3d:	mov    DWORD PTR [esi+0x54],0x9
   18f44:	mov    DWORD PTR [esi+0x50],0x6ddb0
   18f4b:	mov    DWORD PTR [esi+0x58],0x5
   18f52:	mov    DWORD PTR [esi],0x12
   18f58:	jmp    0x18f60
   18f5a:	mov    DWORD PTR [esi],0xd
   18f60:	shr    ebx,0x2
   18f63:	dec    edi
   18f64:	dec    edi
   18f65:	jmp    0x198c3
   18f6a:	mov    ecx,edi
   18f6c:	and    ecx,0x7
   18f6f:	sub    edi,ecx
   18f71:	shr    ebx,cl
   18f73:	cmp    edi,0x20
   18f76:	jae    0x18f9f
   18f78:	cmp    DWORD PTR [ebp-0x8],0x0
   18f7c:	je     0x19911
   18f82:	mov    eax,DWORD PTR [ebp-0x4]
   18f85:	movzx  eax,BYTE PTR [eax]
   18f88:	dec    DWORD PTR [ebp-0x8]
   18f8b:	mov    ecx,edi
   18f8d:	shl    eax,cl
   18f8f:	add    edi,0x8
   18f92:	add    ebx,eax
   18f94:	inc    DWORD PTR [ebp-0x4]
   18f97:	cmp    edi,0x20
   18f9a:	jb     0x18f78
   18f9c:	mov    edx,DWORD PTR [ebp+0x8]
   18f9f:	mov    ecx,ebx
   18fa1:	mov    eax,ebx
   18fa3:	not    ecx
   18fa5:	and    eax,0xffff
   18faa:	shr    ecx,0x10
   18fad:	cmp    eax,ecx
   18faf:	je     0x18fbd
   18fb1:	mov    DWORD PTR [edx+0x18],0x1b904
   18fb8:	jmp    0x198bd
   18fbd:	xor    ebx,ebx
   18fbf:	mov    DWORD PTR [esi+0x40],eax
   18fc2:	xor    edi,edi
   18fc4:	mov    DWORD PTR [esi],0xe
   18fca:	mov    eax,DWORD PTR [esi+0x40]
   18fcd:	mov    DWORD PTR [ebp-0xc],eax
   18fd0:	test   eax,eax
   18fd2:	je     0x19526
   18fd8:	mov    eax,DWORD PTR [ebp-0x8]
   18fdb:	cmp    DWORD PTR [ebp-0xc],eax
   18fde:	jbe    0x18fe3
   18fe0:	mov    DWORD PTR [ebp-0xc],eax
   18fe3:	mov    eax,DWORD PTR [ebp-0x10]
   18fe6:	cmp    DWORD PTR [ebp-0xc],eax
   18fe9:	jbe    0x18fee
   18feb:	mov    DWORD PTR [ebp-0xc],eax
   18fee:	cmp    DWORD PTR [ebp-0xc],0x0
   18ff2:	je     0x19911
   18ff8:	push   DWORD PTR [ebp-0xc]
   18ffb:	push   DWORD PTR [ebp-0x4]
   18ffe:	push   DWORD PTR [ebp-0x18]
   19001:	call   0x1a82a
   19006:	mov    eax,DWORD PTR [ebp-0xc]
   19009:	sub    DWORD PTR [ebp-0x8],eax
   1900c:	add    DWORD PTR [ebp-0x4],eax
   1900f:	sub    DWORD PTR [ebp-0x10],eax
   19012:	add    DWORD PTR [ebp-0x18],eax
   19015:	add    esp,0xc
   19018:	sub    DWORD PTR [esi+0x40],eax
   1901b:	jmp    0x198c3
   19020:	cmp    edi,0xe
   19023:	jae    0x1904c
   19025:	cmp    DWORD PTR [ebp-0x8],0x0
   19029:	je     0x19911
   1902f:	mov    eax,DWORD PTR [ebp-0x4]
   19032:	movzx  eax,BYTE PTR [eax]
   19035:	dec    DWORD PTR [ebp-0x8]
   19038:	mov    ecx,edi
   1903a:	shl    eax,cl
   1903c:	add    edi,0x8
   1903f:	add    ebx,eax
   19041:	inc    DWORD PTR [ebp-0x4]
   19044:	cmp    edi,0xe
   19047:	jb     0x19025
   19049:	mov    edx,DWORD PTR [ebp+0x8]
   1904c:	mov    eax,ebx
   1904e:	and    eax,0x1f
   19051:	add    eax,0x101
   19056:	mov    DWORD PTR [esi+0x60],eax
   19059:	shr    ebx,0x5
   1905c:	mov    eax,ebx
   1905e:	and    eax,0x1f
   19061:	inc    eax
   19062:	shr    ebx,0x5
   19065:	mov    DWORD PTR [esi+0x64],eax
   19068:	mov    eax,ebx
   1906a:	and    eax,0xf
   1906d:	add    eax,0x4
   19070:	shr    ebx,0x4
   19073:	sub    edi,0xe
   19076:	cmp    DWORD PTR [esi+0x60],0x11e
   1907d:	mov    DWORD PTR [esi+0x5c],eax
   19080:	ja     0x19094
   19082:	cmp    DWORD PTR [esi+0x64],0x1e
   19086:	ja     0x19094
   19088:	and    DWORD PTR [esi+0x68],0x0
   1908c:	mov    DWORD PTR [esi],0x10
   19092:	jmp    0x190e2
   19094:	mov    DWORD PTR [edx+0x18],0x1b8e0
   1909b:	jmp    0x198bd
   190a0:	cmp    DWORD PTR [ebp-0x8],0x0
   190a4:	je     0x19911
   190aa:	mov    eax,DWORD PTR [ebp-0x4]
   190ad:	movzx  eax,BYTE PTR [eax]
   190b0:	dec    DWORD PTR [ebp-0x8]
   190b3:	mov    ecx,edi
   190b5:	shl    eax,cl
   190b7:	add    ebx,eax
   190b9:	inc    DWORD PTR [ebp-0x4]
   190bc:	add    edi,0x8
   190bf:	cmp    edi,0x3
   190c2:	jb     0x190a0
   190c4:	mov    ecx,DWORD PTR [esi+0x68]
   190c7:	movzx  ecx,WORD PTR [ecx*2+0x6de30]
   190cf:	mov    eax,ebx
   190d1:	and    eax,0x7
   190d4:	mov    WORD PTR [esi+ecx*2+0x70],ax
   190d9:	inc    DWORD PTR [esi+0x68]
   190dc:	shr    ebx,0x3
   190df:	sub    edi,0x3
   190e2:	mov    eax,DWORD PTR [esi+0x68]
   190e5:	cmp    eax,DWORD PTR [esi+0x5c]
   190e8:	jb     0x190bf
   190ea:	jmp    0x19101
   190ec:	mov    eax,DWORD PTR [esi+0x68]
   190ef:	movzx  eax,WORD PTR [eax*2+0x6de30]
   190f7:	xor    ecx,ecx
   190f9:	mov    WORD PTR [esi+eax*2+0x70],cx
   190fe:	inc    DWORD PTR [esi+0x68]
   19101:	cmp    DWORD PTR [esi+0x68],0x13
   19105:	jb     0x190ec
   19107:	lea    eax,[esi+0x530]
   1910d:	lea    ecx,[esi+0x6c]
   19110:	mov    DWORD PTR [ecx],eax
   19112:	mov    DWORD PTR [esi+0x4c],eax
   19115:	lea    edx,[esi+0x2f0]
   1911b:	push   edx
   1911c:	lea    eax,[esi+0x54]
   1911f:	push   eax
   19120:	push   ecx
   19121:	mov    DWORD PTR [eax],0x7
   19127:	push   0x13
   19129:	lea    eax,[esi+0x70]
   1912c:	push   eax
   1912d:	push   0x0
   1912f:	call   0x19ecc
   19134:	mov    DWORD PTR [ebp-0x24],eax
   19137:	test   eax,eax
   19139:	je     0x1914a
   1913b:	mov    eax,DWORD PTR [ebp+0x8]
   1913e:	mov    DWORD PTR [eax+0x18],0x1b8c6
   19145:	jmp    0x198bd
   1914a:	and    DWORD PTR [esi+0x68],0x0
   1914e:	mov    DWORD PTR [esi],0x11
   19154:	jmp    0x19350
   19159:	cmp    DWORD PTR [ebp-0x8],0x0
   1915d:	je     0x19911
   19163:	mov    eax,DWORD PTR [ebp-0x4]
   19166:	movzx  eax,BYTE PTR [eax]
   19169:	dec    DWORD PTR [ebp-0x8]
   1916c:	mov    ecx,edi
   1916e:	shl    eax,cl
   19170:	add    ebx,eax
   19172:	inc    DWORD PTR [ebp-0x4]
   19175:	add    edi,0x8
   19178:	mov    ecx,DWORD PTR [esi+0x54]
   1917b:	xor    eax,eax
   1917d:	inc    eax
   1917e:	shl    eax,cl
   19180:	mov    ecx,DWORD PTR [esi+0x4c]
   19183:	dec    eax
   19184:	and    eax,ebx
   19186:	mov    eax,DWORD PTR [ecx+eax*4]
   19189:	mov    ecx,eax
   1918b:	shr    ecx,0x8
   1918e:	movzx  ecx,cl
   19191:	mov    DWORD PTR [ebp-0x20],eax
   19194:	cmp    ecx,edi
   19196:	ja     0x19159
   19198:	mov    ecx,eax
   1919a:	shr    ecx,0x10
   1919d:	cmp    cx,0x10
   191a1:	jae    0x191ee
   191a3:	mov    ecx,eax
   191a5:	shr    ecx,0x8
   191a8:	movzx  ecx,cl
   191ab:	jmp    0x191cf
   191ad:	cmp    DWORD PTR [ebp-0x8],0x0
   191b1:	je     0x19911
   191b7:	mov    ecx,DWORD PTR [ebp-0x4]
   191ba:	movzx  edx,BYTE PTR [ecx]
   191bd:	dec    DWORD PTR [ebp-0x8]
   191c0:	mov    ecx,edi
   191c2:	shl    edx,cl
   191c4:	movzx  ecx,ah
   191c7:	add    ebx,edx
   191c9:	inc    DWORD PTR [ebp-0x4]
   191cc:	add    edi,0x8
   191cf:	cmp    edi,ecx
   191d1:	jb     0x191ad
   191d3:	movzx  ecx,ah
   191d6:	mov    eax,DWORD PTR [esi+0x68]
   191d9:	shr    ebx,cl
   191db:	sub    edi,ecx
   191dd:	mov    cx,WORD PTR [ebp-0x1e]
   191e1:	mov    WORD PTR [esi+eax*2+0x70],cx
   191e6:	inc    DWORD PTR [esi+0x68]
   191e9:	jmp    0x19350
   191ee:	cmp    WORD PTR [ebp-0x1e],0x10
   191f3:	jne    0x1924b
   191f5:	movzx  eax,ah
   191f8:	jmp    0x19219
   191fa:	cmp    DWORD PTR [ebp-0x8],0x0
   191fe:	je     0x19911
   19204:	mov    ecx,DWORD PTR [ebp-0x4]
   19207:	movzx  edx,BYTE PTR [ecx]
   1920a:	dec    DWORD PTR [ebp-0x8]
   1920d:	mov    ecx,edi
   1920f:	shl    edx,cl
   19211:	add    ebx,edx
   19213:	inc    DWORD PTR [ebp-0x4]
   19216:	add    edi,0x8
   19219:	lea    ecx,[eax+0x2]
   1921c:	cmp    edi,ecx
   1921e:	jb     0x191fa
   19220:	mov    ecx,eax
   19222:	sub    edi,eax
   19224:	mov    eax,DWORD PTR [esi+0x68]
   19227:	shr    ebx,cl
   19229:	test   eax,eax
   1922b:	je     0x19361
   19231:	movzx  eax,WORD PTR [esi+eax*2+0x6e]
   19236:	mov    DWORD PTR [ebp-0x20],eax
   19239:	mov    eax,ebx
   1923b:	and    eax,0x3
   1923e:	add    eax,0x3
   19241:	shr    ebx,0x2
   19244:	dec    edi
   19245:	dec    edi
   19246:	jmp    0x192d0
   1924b:	cmp    WORD PTR [ebp-0x1e],0x11
   19250:	movzx  edx,ah
   19253:	jne    0x192af
   19255:	jmp    0x19276
   19257:	cmp    DWORD PTR [ebp-0x8],0x0
   1925b:	je     0x19911
   19261:	mov    eax,DWORD PTR [ebp-0x4]
   19264:	movzx  eax,BYTE PTR [eax]
   19267:	dec    DWORD PTR [ebp-0x8]
   1926a:	mov    ecx,edi
   1926c:	shl    eax,cl
   1926e:	add    ebx,eax
   19270:	inc    DWORD PTR [ebp-0x4]
   19273:	add    edi,0x8
   19276:	lea    eax,[edx+0x3]
   19279:	cmp    edi,eax
   1927b:	jb     0x19257
   1927d:	mov    ecx,edx
   1927f:	shr    ebx,cl
   19281:	push   0xfffffffd
   19283:	mov    eax,ebx
   19285:	and    eax,0x7
   19288:	add    eax,0x3
   1928b:	shr    ebx,0x3
   1928e:	jmp    0x192c7
   19290:	cmp    DWORD PTR [ebp-0x8],0x0
   19294:	je     0x19911
   1929a:	mov    eax,DWORD PTR [ebp-0x4]
   1929d:	movzx  eax,BYTE PTR [eax]
   192a0:	dec    DWORD PTR [ebp-0x8]
   192a3:	mov    ecx,edi
   192a5:	shl    eax,cl
   192a7:	add    ebx,eax
   192a9:	inc    DWORD PTR [ebp-0x4]
   192ac:	add    edi,0x8
   192af:	lea    eax,[edx+0x7]
   192b2:	cmp    edi,eax
   192b4:	jb     0x19290
   192b6:	mov    ecx,edx
   192b8:	shr    ebx,cl
   192ba:	push   0xfffffff9
   192bc:	mov    eax,ebx
   192be:	and    eax,0x7f
   192c1:	add    eax,0xb
   192c4:	shr    ebx,0x7
   192c7:	and    DWORD PTR [ebp-0x20],0x0
   192cb:	pop    ecx
   192cc:	sub    ecx,edx
   192ce:	add    edi,ecx
   192d0:	mov    ecx,DWORD PTR [esi+0x64]
   192d3:	mov    edx,DWORD PTR [esi+0x68]
   192d6:	add    ecx,DWORD PTR [esi+0x60]
   192d9:	add    edx,eax
   192db:	cmp    edx,ecx
   192dd:	jbe    0x1934c
   192df:	mov    eax,DWORD PTR [ebp+0x8]
   192e2:	mov    DWORD PTR [eax+0x18],0x1b8ac
   192e9:	mov    DWORD PTR [esi],0x1b
   192ef:	cmp    DWORD PTR [esi],0x1b
   192f2:	je     0x198c3
   192f8:	lea    eax,[esi+0x530]
   192fe:	lea    ecx,[esi+0x6c]
   19301:	mov    DWORD PTR [ecx],eax
   19303:	mov    DWORD PTR [esi+0x4c],eax
   19306:	lea    edx,[esi+0x2f0]
   1930c:	push   edx
   1930d:	lea    eax,[esi+0x54]
   19310:	push   eax
   19311:	push   ecx
   19312:	push   DWORD PTR [esi+0x60]
   19315:	mov    DWORD PTR [eax],0x9
   1931b:	lea    eax,[esi+0x70]
   1931e:	push   eax
   1931f:	push   0x1
   19321:	call   0x19ecc
   19326:	mov    DWORD PTR [ebp-0x24],eax
   19329:	test   eax,eax
   1932b:	je     0x19370
   1932d:	mov    eax,DWORD PTR [ebp+0x8]
   19330:	mov    DWORD PTR [eax+0x18],0x1b890
   19337:	jmp    0x198bd
   1933c:	mov    ecx,DWORD PTR [esi+0x68]
   1933f:	mov    dx,WORD PTR [ebp-0x20]
   19343:	dec    eax
   19344:	mov    WORD PTR [esi+ecx*2+0x70],dx
   19349:	inc    DWORD PTR [esi+0x68]
   1934c:	test   eax,eax
   1934e:	jne    0x1933c
   19350:	mov    eax,DWORD PTR [esi+0x64]
   19353:	add    eax,DWORD PTR [esi+0x60]
   19356:	cmp    DWORD PTR [esi+0x68],eax
   19359:	jb     0x19178
   1935f:	jmp    0x192ef
   19361:	mov    eax,DWORD PTR [ebp+0x8]
   19364:	mov    DWORD PTR [eax+0x18],0x1b8ac
   1936b:	jmp    0x198bd
   19370:	lea    ecx,[esi+0x6c]
   19373:	mov    eax,DWORD PTR [ecx]
   19375:	mov    DWORD PTR [esi+0x50],eax
   19378:	lea    edx,[esi+0x2f0]
   1937e:	push   edx
   1937f:	lea    eax,[esi+0x58]
   19382:	push   eax
   19383:	push   ecx
   19384:	push   DWORD PTR [esi+0x64]
   19387:	mov    DWORD PTR [eax],0x6
   1938d:	mov    eax,DWORD PTR [esi+0x60]
   19390:	lea    eax,[esi+eax*2+0x70]
   19394:	push   eax
   19395:	push   0x2
   19397:	call   0x19ecc
   1939c:	mov    DWORD PTR [ebp-0x24],eax
   1939f:	test   eax,eax
   193a1:	je     0x193b2
   193a3:	mov    eax,DWORD PTR [ebp+0x8]
   193a6:	mov    DWORD PTR [eax+0x18],0x1b87a
   193ad:	jmp    0x198bd
   193b2:	mov    DWORD PTR [esi],0x12
   193b8:	cmp    DWORD PTR [ebp-0x8],0x6
   193bc:	jb     0x19415
   193be:	cmp    DWORD PTR [ebp-0x10],0x102
   193c5:	jb     0x19415
   193c7:	mov    eax,DWORD PTR [ebp+0x8]
   193ca:	mov    ecx,DWORD PTR [ebp-0x18]
   193cd:	push   DWORD PTR [ebp-0x1c]
   193d0:	mov    DWORD PTR [eax+0xc],ecx
   193d3:	mov    ecx,DWORD PTR [ebp-0x10]
   193d6:	mov    DWORD PTR [eax+0x10],ecx
   193d9:	mov    ecx,DWORD PTR [ebp-0x4]
   193dc:	mov    DWORD PTR [eax],ecx
   193de:	mov    ecx,DWORD PTR [ebp-0x8]
   193e1:	mov    DWORD PTR [eax+0x4],ecx
   193e4:	push   eax
   193e5:	mov    DWORD PTR [esi+0x38],ebx
   193e8:	mov    DWORD PTR [esi+0x3c],edi
   193eb:	call   0x19ae6
   193f0:	mov    eax,DWORD PTR [ebp+0x8]
   193f3:	mov    ecx,DWORD PTR [eax+0xc]
   193f6:	mov    ebx,DWORD PTR [esi+0x38]
   193f9:	mov    edi,DWORD PTR [esi+0x3c]
   193fc:	mov    DWORD PTR [ebp-0x18],ecx
   193ff:	mov    ecx,DWORD PTR [eax+0x10]
   19402:	mov    DWORD PTR [ebp-0x10],ecx
   19405:	mov    ecx,DWORD PTR [eax]
   19407:	mov    eax,DWORD PTR [eax+0x4]
   1940a:	mov    DWORD PTR [ebp-0x4],ecx
   1940d:	mov    DWORD PTR [ebp-0x8],eax
   19410:	jmp    0x198c3
   19415:	mov    ecx,DWORD PTR [esi+0x54]
   19418:	mov    eax,DWORD PTR [esi+0x4c]
   1941b:	xor    edx,edx
   1941d:	inc    edx
   1941e:	shl    edx,cl
   19420:	dec    edx
   19421:	and    edx,ebx
   19423:	mov    eax,DWORD PTR [eax+edx*4]
   19426:	jmp    0x19458
   19428:	cmp    DWORD PTR [ebp-0x8],0x0
   1942c:	je     0x19911
   19432:	mov    eax,DWORD PTR [ebp-0x4]
   19435:	movzx  eax,BYTE PTR [eax]
   19438:	dec    DWORD PTR [ebp-0x8]
   1943b:	mov    ecx,edi
   1943d:	shl    eax,cl
   1943f:	mov    ecx,DWORD PTR [esi+0x54]
   19442:	add    edi,0x8
   19445:	add    ebx,eax
   19447:	inc    DWORD PTR [ebp-0x4]
   1944a:	xor    eax,eax
   1944c:	inc    eax
   1944d:	shl    eax,cl
   1944f:	mov    ecx,DWORD PTR [esi+0x4c]
   19452:	dec    eax
   19453:	and    eax,ebx
   19455:	mov    eax,DWORD PTR [ecx+eax*4]
   19458:	mov    ecx,eax
   1945a:	shr    ecx,0x8
   1945d:	movzx  ecx,cl
   19460:	cmp    ecx,edi
   19462:	ja     0x19428
   19464:	test   al,al
   19466:	je     0x194ff
   1946c:	test   al,0xf0
   1946e:	jne    0x194ff
   19474:	mov    DWORD PTR [ebp-0xc],eax
   19477:	shr    DWORD PTR [ebp-0xc],0x8
   1947b:	movzx  edx,BYTE PTR [ebp-0xc]
   1947f:	mov    DWORD PTR [ebp-0x28],edx
   19482:	movzx  ecx,al
   19485:	add    ecx,edx
   19487:	xor    edx,edx
   19489:	inc    edx
   1948a:	shl    edx,cl
   1948c:	mov    ecx,DWORD PTR [ebp-0x28]
   1948f:	mov    DWORD PTR [ebp-0x20],eax
   19492:	shr    eax,0x10
   19495:	dec    edx
   19496:	and    edx,ebx
   19498:	shr    edx,cl
   1949a:	add    edx,eax
   1949c:	mov    eax,DWORD PTR [esi+0x4c]
   1949f:	mov    eax,DWORD PTR [eax+edx*4]
   194a2:	movzx  edx,BYTE PTR [ebp-0xc]
   194a6:	jmp    0x194e9
   194a8:	cmp    DWORD PTR [ebp-0x8],0x0
   194ac:	je     0x19911
   194b2:	mov    eax,DWORD PTR [ebp-0x4]
   194b5:	movzx  eax,BYTE PTR [eax]
   194b8:	movzx  edx,BYTE PTR [ebp-0x1f]
   194bc:	dec    DWORD PTR [ebp-0x8]
   194bf:	mov    ecx,edi
   194c1:	shl    eax,cl
   194c3:	movzx  ecx,BYTE PTR [ebp-0x20]
   194c7:	add    ebx,eax
   194c9:	inc    DWORD PTR [ebp-0x4]
   194cc:	xor    eax,eax
   194ce:	add    ecx,edx
   194d0:	inc    eax
   194d1:	shl    eax,cl
   194d3:	add    edi,0x8
   194d6:	mov    ecx,edx
   194d8:	dec    eax
   194d9:	and    eax,ebx
   194db:	shr    eax,cl
   194dd:	movzx  ecx,WORD PTR [ebp-0x1e]
   194e1:	add    eax,ecx
   194e3:	mov    ecx,DWORD PTR [esi+0x4c]
   194e6:	mov    eax,DWORD PTR [ecx+eax*4]
   194e9:	mov    ecx,eax
   194eb:	shr    ecx,0x8
   194ee:	movzx  ecx,cl
   194f1:	add    ecx,edx
   194f3:	cmp    ecx,edi
   194f5:	ja     0x194a8
   194f7:	movzx  ecx,BYTE PTR [ebp-0x1f]
   194fb:	shr    ebx,cl
   194fd:	sub    edi,ecx
   194ff:	mov    ecx,eax
   19501:	shr    ecx,0x8
   19504:	movzx  ecx,cl
   19507:	shr    ebx,cl
   19509:	sub    edi,ecx
   1950b:	mov    ecx,eax
   1950d:	shr    ecx,0x10
   19510:	mov    DWORD PTR [esi+0x40],ecx
   19513:	test   al,al
   19515:	jne    0x19522
   19517:	mov    DWORD PTR [esi],0x17
   1951d:	jmp    0x198c3
   19522:	test   al,0x20
   19524:	je     0x19531
   19526:	mov    DWORD PTR [esi],0xb
   1952c:	jmp    0x198c3
   19531:	test   al,0x40
   19533:	je     0x19544
   19535:	mov    eax,DWORD PTR [ebp+0x8]
   19538:	mov    DWORD PTR [eax+0x18],0x1b85e
   1953f:	jmp    0x198bd
   19544:	movzx  eax,al
   19547:	and    eax,0xf
   1954a:	mov    DWORD PTR [esi+0x48],eax
   1954d:	mov    DWORD PTR [esi],0x13
   19553:	mov    eax,DWORD PTR [esi+0x48]
   19556:	test   eax,eax
   19558:	je     0x19593
   1955a:	cmp    edi,eax
   1955c:	jae    0x19582
   1955e:	cmp    DWORD PTR [ebp-0x8],0x0
   19562:	je     0x19911
   19568:	mov    ecx,DWORD PTR [ebp-0x4]
   1956b:	movzx  edx,BYTE PTR [ecx]
   1956e:	dec    DWORD PTR [ebp-0x8]
   19571:	mov    ecx,edi
   19573:	shl    edx,cl
   19575:	add    edi,0x8
   19578:	add    ebx,edx
   1957a:	inc    DWORD PTR [ebp-0x4]
   1957d:	cmp    edi,DWORD PTR [esi+0x48]
   19580:	jb     0x1955e
   19582:	xor    edx,edx
   19584:	inc    edx
   19585:	mov    ecx,eax
   19587:	shl    edx,cl
   19589:	dec    edx
   1958a:	and    edx,ebx
   1958c:	add    DWORD PTR [esi+0x40],edx
   1958f:	shr    ebx,cl
   19591:	sub    edi,eax
   19593:	mov    DWORD PTR [esi],0x14
   19599:	mov    ecx,DWORD PTR [esi+0x58]
   1959c:	mov    eax,DWORD PTR [esi+0x50]
   1959f:	xor    edx,edx
   195a1:	inc    edx
   195a2:	shl    edx,cl
   195a4:	dec    edx
   195a5:	and    edx,ebx
   195a7:	mov    eax,DWORD PTR [eax+edx*4]
   195aa:	jmp    0x195dc
   195ac:	cmp    DWORD PTR [ebp-0x8],0x0
   195b0:	je     0x19911
   195b6:	mov    eax,DWORD PTR [ebp-0x4]
   195b9:	movzx  eax,BYTE PTR [eax]
   195bc:	dec    DWORD PTR [ebp-0x8]
   195bf:	mov    ecx,edi
   195c1:	shl    eax,cl
   195c3:	mov    ecx,DWORD PTR [esi+0x58]
   195c6:	add    edi,0x8
   195c9:	add    ebx,eax
   195cb:	inc    DWORD PTR [ebp-0x4]
   195ce:	xor    eax,eax
   195d0:	inc    eax
   195d1:	shl    eax,cl
   195d3:	mov    ecx,DWORD PTR [esi+0x50]
   195d6:	dec    eax
   195d7:	and    eax,ebx
   195d9:	mov    eax,DWORD PTR [ecx+eax*4]
   195dc:	mov    ecx,eax
   195de:	shr    ecx,0x8
   195e1:	movzx  ecx,cl
   195e4:	cmp    ecx,edi
   195e6:	ja     0x195ac
   195e8:	test   al,0xf0
   195ea:	jne    0x1967b
   195f0:	mov    DWORD PTR [ebp-0xc],eax
   195f3:	shr    DWORD PTR [ebp-0xc],0x8
   195f7:	movzx  edx,BYTE PTR [ebp-0xc]
   195fb:	mov    DWORD PTR [ebp-0x28],edx
   195fe:	movzx  ecx,al
   19601:	add    ecx,edx
   19603:	xor    edx,edx
   19605:	inc    edx
   19606:	shl    edx,cl
   19608:	mov    ecx,DWORD PTR [ebp-0x28]
   1960b:	mov    DWORD PTR [ebp-0x20],eax
   1960e:	shr    eax,0x10
   19611:	dec    edx
   19612:	and    edx,ebx
   19614:	shr    edx,cl
   19616:	add    edx,eax
   19618:	mov    eax,DWORD PTR [esi+0x50]
   1961b:	mov    eax,DWORD PTR [eax+edx*4]
   1961e:	movzx  edx,BYTE PTR [ebp-0xc]
   19622:	jmp    0x19665
   19624:	cmp    DWORD PTR [ebp-0x8],0x0
   19628:	je     0x19911
   1962e:	mov    eax,DWORD PTR [ebp-0x4]
   19631:	movzx  eax,BYTE PTR [eax]
   19634:	movzx  edx,BYTE PTR [ebp-0x1f]
   19638:	dec    DWORD PTR [ebp-0x8]
   1963b:	mov    ecx,edi
   1963d:	shl    eax,cl
   1963f:	movzx  ecx,BYTE PTR [ebp-0x20]
   19643:	add    ebx,eax
   19645:	inc    DWORD PTR [ebp-0x4]
   19648:	xor    eax,eax
   1964a:	add    ecx,edx
   1964c:	inc    eax
   1964d:	shl    eax,cl
   1964f:	add    edi,0x8
   19652:	mov    ecx,edx
   19654:	dec    eax
   19655:	and    eax,ebx
   19657:	shr    eax,cl
   19659:	movzx  ecx,WORD PTR [ebp-0x1e]
   1965d:	add    eax,ecx
   1965f:	mov    ecx,DWORD PTR [esi+0x50]
   19662:	mov    eax,DWORD PTR [ecx+eax*4]
   19665:	mov    ecx,eax
   19667:	shr    ecx,0x8
   1966a:	movzx  ecx,cl
   1966d:	add    ecx,edx
   1966f:	cmp    ecx,edi
   19671:	ja     0x19624
   19673:	movzx  ecx,BYTE PTR [ebp-0x1f]
   19677:	shr    ebx,cl
   19679:	sub    edi,ecx
   1967b:	mov    ecx,eax
   1967d:	shr    ecx,0x8
   19680:	movzx  ecx,cl
   19683:	shr    ebx,cl
   19685:	sub    edi,ecx
   19687:	test   al,0x40
   19689:	je     0x1969a
   1968b:	mov    eax,DWORD PTR [ebp+0x8]
   1968e:	mov    DWORD PTR [eax+0x18],0x1b848
   19695:	jmp    0x198bd
   1969a:	mov    edx,DWORD PTR [ebp+0x8]
   1969d:	mov    ecx,eax
   1969f:	movzx  eax,al
   196a2:	shr    ecx,0x10
   196a5:	and    eax,0xf
   196a8:	mov    DWORD PTR [esi+0x44],ecx
   196ab:	mov    DWORD PTR [esi+0x48],eax
   196ae:	mov    DWORD PTR [esi],0x15
   196b4:	mov    eax,DWORD PTR [esi+0x48]
   196b7:	test   eax,eax
   196b9:	je     0x196f8
   196bb:	cmp    edi,eax
   196bd:	jae    0x196e6
   196bf:	cmp    DWORD PTR [ebp-0x8],0x0
   196c3:	je     0x19911
   196c9:	mov    eax,DWORD PTR [ebp-0x4]
   196cc:	movzx  eax,BYTE PTR [eax]
   196cf:	dec    DWORD PTR [ebp-0x8]
   196d2:	mov    ecx,edi
   196d4:	shl    eax,cl
   196d6:	add    edi,0x8
   196d9:	add    ebx,eax
   196db:	inc    DWORD PTR [ebp-0x4]
   196de:	cmp    edi,DWORD PTR [esi+0x48]
   196e1:	jb     0x196bf
   196e3:	mov    edx,DWORD PTR [ebp+0x8]
   196e6:	mov    ecx,DWORD PTR [esi+0x48]
   196e9:	xor    eax,eax
   196eb:	inc    eax
   196ec:	shl    eax,cl
   196ee:	dec    eax
   196ef:	and    eax,ebx
   196f1:	add    DWORD PTR [esi+0x44],eax
   196f4:	shr    ebx,cl
   196f6:	sub    edi,ecx
   196f8:	mov    eax,DWORD PTR [esi+0x2c]
   196fb:	sub    eax,DWORD PTR [ebp-0x10]
   196fe:	add    eax,DWORD PTR [ebp-0x1c]
   19701:	cmp    DWORD PTR [esi+0x44],eax
   19704:	jbe    0x19712
   19706:	mov    DWORD PTR [edx+0x18],0x1b82a
   1970d:	jmp    0x198bd
   19712:	mov    DWORD PTR [esi],0x16
   19718:	cmp    DWORD PTR [ebp-0x10],0x0
   1971c:	je     0x19911
   19722:	mov    eax,DWORD PTR [ebp-0x1c]
   19725:	sub    eax,DWORD PTR [ebp-0x10]
   19728:	mov    ecx,DWORD PTR [esi+0x44]
   1972b:	cmp    ecx,eax
   1972d:	jbe    0x1975c
   1972f:	sub    ecx,eax
   19731:	mov    eax,DWORD PTR [esi+0x34]
   19734:	mov    DWORD PTR [ebp-0xc],ecx
   19737:	mov    ecx,DWORD PTR [esi+0x30]
   1973a:	cmp    DWORD PTR [ebp-0xc],ecx
   1973d:	jbe    0x1974a
   1973f:	add    eax,DWORD PTR [esi+0x28]
   19742:	sub    DWORD PTR [ebp-0xc],ecx
   19745:	sub    eax,DWORD PTR [ebp-0xc]
   19748:	jmp    0x1974f
   1974a:	sub    eax,DWORD PTR [ebp-0xc]
   1974d:	add    eax,ecx
   1974f:	mov    ecx,DWORD PTR [esi+0x40]
   19752:	mov    DWORD PTR [ebp-0x28],ecx
   19755:	cmp    DWORD PTR [ebp-0xc],ecx
   19758:	jbe    0x1976a
   1975a:	jmp    0x19767
   1975c:	mov    eax,DWORD PTR [ebp-0x18]
   1975f:	sub    eax,ecx
   19761:	mov    ecx,DWORD PTR [esi+0x40]
   19764:	mov    DWORD PTR [ebp-0x28],ecx
   19767:	mov    DWORD PTR [ebp-0xc],ecx
   1976a:	mov    ecx,DWORD PTR [ebp-0x10]
   1976d:	cmp    DWORD PTR [ebp-0xc],ecx
   19770:	jbe    0x19775
   19772:	mov    DWORD PTR [ebp-0xc],ecx
   19775:	sub    ecx,DWORD PTR [ebp-0xc]
   19778:	mov    DWORD PTR [ebp-0x10],ecx
   1977b:	mov    ecx,DWORD PTR [ebp-0x28]
   1977e:	sub    ecx,DWORD PTR [ebp-0xc]
   19781:	mov    DWORD PTR [esi+0x40],ecx
   19784:	mov    edx,DWORD PTR [ebp-0x18]
   19787:	mov    cl,BYTE PTR [eax]
   19789:	inc    DWORD PTR [ebp-0x18]
   1978c:	inc    eax
   1978d:	dec    DWORD PTR [ebp-0xc]
   19790:	mov    BYTE PTR [edx],cl
   19792:	jne    0x19784
   19794:	cmp    DWORD PTR [esi+0x40],0x0
   19798:	jne    0x198c3
   1979e:	jmp    0x197b8
   197a0:	cmp    DWORD PTR [ebp-0x10],0x0
   197a4:	je     0x19911
   197aa:	mov    ecx,DWORD PTR [ebp-0x18]
   197ad:	mov    al,BYTE PTR [esi+0x40]
   197b0:	inc    DWORD PTR [ebp-0x18]
   197b3:	dec    DWORD PTR [ebp-0x10]
   197b6:	mov    BYTE PTR [ecx],al
   197b8:	mov    DWORD PTR [esi],0x12
   197be:	jmp    0x198c3
   197c3:	cmp    DWORD PTR [esi+0x8],0x0
   197c7:	je     0x19877
   197cd:	cmp    edi,0x20
   197d0:	jae    0x197f9
   197d2:	cmp    DWORD PTR [ebp-0x8],0x0
   197d6:	je     0x19911
   197dc:	mov    eax,DWORD PTR [ebp-0x4]
   197df:	movzx  eax,BYTE PTR [eax]
   197e2:	dec    DWORD PTR [ebp-0x8]
   197e5:	mov    ecx,edi
   197e7:	shl    eax,cl
   197e9:	add    edi,0x8
   197ec:	add    ebx,eax
   197ee:	inc    DWORD PTR [ebp-0x4]
   197f1:	cmp    edi,0x20
   197f4:	jb     0x197d2
   197f6:	mov    edx,DWORD PTR [ebp+0x8]
   197f9:	mov    eax,DWORD PTR [ebp-0x1c]
   197fc:	sub    eax,DWORD PTR [ebp-0x10]
   197ff:	add    DWORD PTR [edx+0x14],eax
   19802:	add    DWORD PTR [esi+0x1c],eax
   19805:	mov    DWORD PTR [ebp-0x1c],eax
   19808:	test   eax,eax
   1980a:	je     0x19834
   1980c:	push   eax
   1980d:	mov    eax,DWORD PTR [ebp-0x18]
   19810:	sub    eax,DWORD PTR [ebp-0x1c]
   19813:	cmp    DWORD PTR [esi+0x10],0x0
   19817:	push   eax
   19818:	push   DWORD PTR [esi+0x18]
   1981b:	je     0x19824
   1981d:	call   0x1a774
   19822:	jmp    0x19829
   19824:	call   0x1a2d2
   19829:	mov    ecx,DWORD PTR [ebp+0x8]
   1982c:	mov    DWORD PTR [esi+0x18],eax
   1982f:	mov    DWORD PTR [ecx+0x30],eax
   19832:	mov    edx,ecx
   19834:	cmp    DWORD PTR [esi+0x10],0x0
   19838:	mov    eax,DWORD PTR [ebp-0x10]
   1983b:	mov    DWORD PTR [ebp-0x1c],eax
   1983e:	mov    eax,ebx
   19840:	jne    0x19865
   19842:	and    eax,0xff00
   19847:	mov    ecx,ebx
   19849:	shl    ecx,0x10
   1984c:	add    eax,ecx
   1984e:	mov    ecx,ebx
   19850:	shr    ecx,0x8
   19853:	and    ecx,0xff00
   19859:	shl    eax,0x8
   1985c:	add    eax,ecx
   1985e:	mov    ecx,ebx
   19860:	shr    ecx,0x18
   19863:	add    eax,ecx
   19865:	cmp    eax,DWORD PTR [esi+0x18]
   19868:	je     0x19873
   1986a:	mov    DWORD PTR [edx+0x18],0x1b814
   19871:	jmp    0x198bd
   19873:	xor    ebx,ebx
   19875:	xor    edi,edi
   19877:	mov    DWORD PTR [esi],0x19
   1987d:	cmp    DWORD PTR [esi+0x8],0x0
   19881:	je     0x198fb
   19883:	cmp    DWORD PTR [esi+0x10],0x0
   19887:	je     0x198fb
   19889:	cmp    edi,0x20
   1988c:	jae    0x198b1
   1988e:	cmp    DWORD PTR [ebp-0x8],0x0
   19892:	je     0x19911
   19894:	mov    eax,DWORD PTR [ebp-0x4]
   19897:	movzx  eax,BYTE PTR [eax]
   1989a:	dec    DWORD PTR [ebp-0x8]
   1989d:	mov    ecx,edi
   1989f:	shl    eax,cl
   198a1:	add    edi,0x8
   198a4:	add    ebx,eax
   198a6:	inc    DWORD PTR [ebp-0x4]
   198a9:	cmp    edi,0x20
   198ac:	jb     0x1988e
   198ae:	mov    edx,DWORD PTR [ebp+0x8]
   198b1:	cmp    ebx,DWORD PTR [esi+0x1c]
   198b4:	je     0x198f7
   198b6:	mov    DWORD PTR [edx+0x18],0x1b7fc
   198bd:	mov    DWORD PTR [esi],0x1b
   198c3:	mov    eax,DWORD PTR [esi]
   198c5:	cmp    eax,0x1c
   198c8:	jbe    0x188ba
   198ce:	jmp    0x188b0
   198d3:	mov    eax,DWORD PTR [ebp-0x18]
   198d6:	mov    DWORD PTR [edx+0xc],eax
   198d9:	mov    eax,DWORD PTR [ebp-0x10]
   198dc:	mov    DWORD PTR [edx+0x10],eax
   198df:	mov    eax,DWORD PTR [ebp-0x4]
   198e2:	mov    DWORD PTR [edx],eax
   198e4:	mov    eax,DWORD PTR [ebp-0x8]
   198e7:	mov    DWORD PTR [edx+0x4],eax
   198ea:	mov    DWORD PTR [esi+0x38],ebx
   198ed:	mov    DWORD PTR [esi+0x3c],edi
   198f0:	push   0x2
   198f2:	jmp    0x188b2
   198f7:	xor    ebx,ebx
   198f9:	xor    edi,edi
   198fb:	mov    DWORD PTR [esi],0x1a
   19901:	mov    DWORD PTR [ebp-0x24],0x1
   19908:	jmp    0x19911
   1990a:	mov    DWORD PTR [ebp-0x24],0xfffffffd
   19911:	mov    eax,DWORD PTR [ebp+0x8]
   19914:	mov    ecx,DWORD PTR [ebp-0x18]
   19917:	mov    DWORD PTR [eax+0xc],ecx
   1991a:	mov    ecx,DWORD PTR [ebp-0x10]
   1991d:	mov    DWORD PTR [eax+0x10],ecx
   19920:	mov    ecx,DWORD PTR [ebp-0x4]
   19923:	mov    DWORD PTR [eax],ecx
   19925:	mov    ecx,DWORD PTR [ebp-0x8]
   19928:	mov    DWORD PTR [eax+0x4],ecx
   1992b:	cmp    DWORD PTR [esi+0x28],0x0
   1992f:	mov    DWORD PTR [esi+0x38],ebx
   19932:	mov    DWORD PTR [esi+0x3c],edi
   19935:	jne    0x19947
   19937:	cmp    DWORD PTR [esi],0x18
   1993a:	jge    0x19963
   1993c:	mov    eax,DWORD PTR [ebp-0x1c]
   1993f:	mov    ecx,DWORD PTR [ebp+0x8]
   19942:	cmp    eax,DWORD PTR [ecx+0x10]
   19945:	je     0x19963
   19947:	mov    eax,DWORD PTR [ebp-0x1c]
   1994a:	mov    edi,DWORD PTR [ebp+0x8]
   1994d:	call   0x18772
   19952:	test   eax,eax
   19954:	je     0x19963
   19956:	mov    DWORD PTR [esi],0x1c
   1995c:	push   0xfffffffc
   1995e:	jmp    0x188b2
   19963:	mov    edi,DWORD PTR [ebp+0x8]
   19966:	mov    eax,DWORD PTR [ebp-0x2c]
   19969:	sub    eax,DWORD PTR [edi+0x4]
   1996c:	mov    ebx,DWORD PTR [ebp-0x1c]
   1996f:	sub    ebx,DWORD PTR [edi+0x10]
   19972:	add    DWORD PTR [edi+0x8],eax
   19975:	add    DWORD PTR [edi+0x14],ebx
   19978:	add    DWORD PTR [esi+0x1c],ebx
   1997b:	cmp    DWORD PTR [esi+0x8],0x0
   1997f:	mov    DWORD PTR [ebp-0x2c],eax
   19982:	je     0x199ad
   19984:	test   ebx,ebx
   19986:	je     0x199ad
   19988:	mov    eax,DWORD PTR [edi+0xc]
   1998b:	push   ebx
   1998c:	sub    eax,ebx
   1998e:	cmp    DWORD PTR [esi+0x10],0x0
   19992:	push   eax
   19993:	push   DWORD PTR [esi+0x18]
   19996:	je     0x1999f
   19998:	call   0x1a774
   1999d:	jmp    0x199a4
   1999f:	call   0x1a2d2
   199a4:	mov    DWORD PTR [esi+0x18],eax
   199a7:	mov    DWORD PTR [edi+0x30],eax
   199aa:	mov    eax,DWORD PTR [ebp-0x2c]
   199ad:	cmp    DWORD PTR [esi],0xb
   199b0:	jne    0x199b9
   199b2:	mov    ecx,0x80
   199b7:	jmp    0x199bb
   199b9:	xor    ecx,ecx
   199bb:	mov    edx,DWORD PTR [esi+0x4]
   199be:	neg    edx
   199c0:	sbb    edx,edx
   199c2:	and    edx,0x40
   199c5:	add    edx,ecx
   199c7:	add    edx,DWORD PTR [esi+0x3c]
   199ca:	mov    DWORD PTR [edi+0x2c],edx
   199cd:	test   eax,eax
   199cf:	jne    0x199d5
   199d1:	test   ebx,ebx
   199d3:	je     0x199db
   199d5:	cmp    DWORD PTR [ebp+0xc],0x4
   199d9:	jne    0x199e8
   199db:	cmp    DWORD PTR [ebp-0x24],0x0
   199df:	jne    0x199e8
   199e1:	mov    DWORD PTR [ebp-0x24],0xfffffffb
   199e8:	mov    eax,DWORD PTR [ebp-0x24]
   199eb:	jmp    0x188b3
   199f0:	mov    edi,edi
   199f2:	les    ecx,FWORD PTR [eax-0x761effff]
   199f8:	add    DWORD PTR [eax],eax
   199fa:	jbe    0x19986
   199fc:	add    DWORD PTR [eax],eax
   199fe:	in     al,dx
   199ff:	mov    al,BYTE PTR [ecx]
   19a01:	add    BYTE PTR [ebp-0x75],ah
   19a04:	add    DWORD PTR [eax],eax
   19a06:	in     al,0x8b
   19a08:	add    DWORD PTR [eax],eax
   19a0a:	jg     0x19998
   19a0c:	add    DWORD PTR [eax],eax
   19a0e:	sbb    BYTE PTR [ebp-0x7252ffff],cl
   19a14:	add    DWORD PTR [eax],eax
   19a16:	sub    eax,0x8b00018e
   19a1b:	mov    es,WORD PTR [ecx]
   19a1d:	add    BYTE PTR [esi-0x44fffe72],ch
   19a23:	mov    es,WORD PTR [ecx]
   19a25:	add    BYTE PTR [edx-0x71],ch
   19a28:	add    DWORD PTR [eax],eax
   19a2a:	retf   0x18f
   19a2d:	add    BYTE PTR [eax],ah
   19a2f:	nop
   19a30:	add    DWORD PTR [eax],eax
   19a32:	loop   0x199c4
   19a34:	add    DWORD PTR [eax],eax
   19a36:	push   eax
   19a37:	xchg   ebx,eax
   19a38:	add    DWORD PTR [eax],eax
   19a3a:	mov    eax,0x53000193
   19a3f:	xchg   ebp,eax
   19a40:	add    DWORD PTR [eax],eax
   19a42:	cdq    
   19a43:	xchg   ebp,eax
   19a44:	add    DWORD PTR [eax],eax
   19a46:	mov    ah,0x96
   19a48:	add    DWORD PTR [eax],eax
   19a4a:	sbb    BYTE PTR [edi-0x685fffff],dl
   19a50:	add    DWORD PTR [eax],eax
   19a52:	ret    
   19a53:	xchg   edi,eax
   19a54:	add    DWORD PTR [eax],eax
   19a56:	jge    0x199f0
   19a58:	add    DWORD PTR [eax],eax
   19a5a:	add    DWORD PTR [ecx-0x66f5ffff],ebx
   19a60:	add    DWORD PTR [eax],eax
   19a62:	pop    esp
   19a63:	cdq    
   19a64:	add    DWORD PTR [eax],eax
   19a66:	int3   
   19a67:	int3   
   19a68:	int3   
   19a69:	int3   
   19a6a:	int3   
   19a6b:	int3   
   19a6c:	mov    edi,edi
   19a6e:	push   ebp
   19a6f:	mov    ebp,esp
   19a71:	push   esi
   19a72:	mov    esi,DWORD PTR [ebp+0x8]
   19a75:	test   esi,esi
   19a77:	je     0x19aa5
   19a79:	mov    eax,DWORD PTR [esi+0x1c]
   19a7c:	test   eax,eax
   19a7e:	je     0x19aa5
   19a80:	mov    ecx,DWORD PTR [esi+0x24]
   19a83:	test   ecx,ecx
   19a85:	je     0x19aa5
   19a87:	mov    eax,DWORD PTR [eax+0x34]
   19a8a:	test   eax,eax
   19a8c:	je     0x19a94
   19a8e:	push   eax
   19a8f:	push   DWORD PTR [esi+0x28]
   19a92:	call   ecx
   19a94:	push   DWORD PTR [esi+0x1c]
   19a97:	push   DWORD PTR [esi+0x28]
   19a9a:	call   DWORD PTR [esi+0x24]
   19a9d:	and    DWORD PTR [esi+0x1c],0x0
   19aa1:	xor    eax,eax
   19aa3:	jmp    0x19aa8
   19aa5:	push   0xfffffffe
   19aa7:	pop    eax
   19aa8:	pop    esi
   19aa9:	pop    ebp
   19aaa:	ret    0x4
   19aad:	int3   
   19aae:	int3   
   19aaf:	int3   
   19ab0:	int3   
   19ab1:	int3   
   19ab2:	mov    edi,edi
   19ab4:	push   ebp
   19ab5:	mov    ebp,esp
   19ab7:	mov    eax,DWORD PTR [ebp+0xc]
   19aba:	imul   eax,DWORD PTR [ebp+0x10]
   19abe:	push   eax
   19abf:	call   0x1a798
   19ac4:	pop    ecx
   19ac5:	pop    ebp
   19ac6:	ret    0xc
   19ac9:	int3   
   19aca:	int3   
   19acb:	int3   
   19acc:	int3   
   19acd:	int3   
   19ace:	mov    edi,edi
   19ad0:	push   ebp
   19ad1:	mov    ebp,esp
   19ad3:	push   DWORD PTR [ebp+0xc]
   19ad6:	call   0x10836
   19adb:	pop    ecx
   19adc:	pop    ebp
   19add:	ret    0x8
   19ae0:	int3   
   19ae1:	int3   
   19ae2:	int3   
   19ae3:	int3   
   19ae4:	int3   
   19ae5:	int3   
   19ae6:	mov    edi,edi
   19ae8:	push   ebp
   19ae9:	mov    ebp,esp
   19aeb:	sub    esp,0x40
   19aee:	mov    eax,DWORD PTR [ebp+0x8]
   19af1:	mov    ecx,DWORD PTR [eax+0x4]
   19af4:	mov    edx,DWORD PTR [eax+0x10]
   19af7:	push   ebx
   19af8:	mov    ebx,DWORD PTR [eax]
   19afa:	dec    ebx
   19afb:	lea    ecx,[ecx+ebx*1-0x5]
   19aff:	mov    DWORD PTR [ebp-0x2c],ecx
   19b02:	mov    ecx,edx
   19b04:	sub    ecx,DWORD PTR [ebp+0xc]
   19b07:	push   esi
   19b08:	mov    esi,DWORD PTR [eax+0x1c]
   19b0b:	push   edi
   19b0c:	mov    edi,DWORD PTR [eax+0xc]
   19b0f:	dec    edi
   19b10:	add    ecx,edi
   19b12:	mov    DWORD PTR [ebp-0x3c],ecx
   19b15:	lea    ecx,[edx+edi*1-0x101]
   19b1c:	mov    DWORD PTR [ebp-0x30],ecx
   19b1f:	mov    ecx,DWORD PTR [esi+0x28]
   19b22:	mov    DWORD PTR [ebp-0x24],ecx
   19b25:	mov    ecx,DWORD PTR [esi+0x2c]
   19b28:	mov    DWORD PTR [ebp-0x40],ecx
   19b2b:	mov    ecx,DWORD PTR [esi+0x30]
   19b2e:	mov    DWORD PTR [ebp-0x18],ecx
   19b31:	mov    ecx,DWORD PTR [esi+0x34]
   19b34:	mov    DWORD PTR [ebp-0x28],ecx
   19b37:	mov    ecx,DWORD PTR [esi+0x38]
   19b3a:	mov    DWORD PTR [ebp-0x4],ecx
   19b3d:	mov    ecx,DWORD PTR [esi+0x3c]
   19b40:	mov    DWORD PTR [ebp+0xc],ecx
   19b43:	mov    ecx,DWORD PTR [esi+0x4c]
   19b46:	xor    edx,edx
   19b48:	mov    DWORD PTR [ebp-0x1c],ecx
   19b4b:	mov    ecx,DWORD PTR [esi+0x50]
   19b4e:	inc    edx
   19b4f:	mov    DWORD PTR [ebp-0x20],ecx
   19b52:	mov    ecx,DWORD PTR [esi+0x54]
   19b55:	shl    edx,cl
   19b57:	mov    ecx,DWORD PTR [esi+0x58]
   19b5a:	dec    edx
   19b5b:	mov    DWORD PTR [ebp-0x34],edx
   19b5e:	xor    edx,edx
   19b60:	inc    edx
   19b61:	shl    edx,cl
   19b63:	dec    edx
   19b64:	mov    DWORD PTR [ebp-0x38],edx
   19b67:	mov    ecx,DWORD PTR [ebp+0xc]
   19b6a:	cmp    ecx,0xf
   19b6d:	jae    0x19b8c
   19b6f:	add    DWORD PTR [ebp+0xc],0x8
   19b73:	inc    ebx
   19b74:	movzx  edx,BYTE PTR [ebx]
   19b77:	shl    edx,cl
   19b79:	mov    ecx,DWORD PTR [ebp+0xc]
   19b7c:	add    DWORD PTR [ebp-0x4],edx
   19b7f:	inc    ebx
   19b80:	movzx  edx,BYTE PTR [ebx]
   19b83:	shl    edx,cl
   19b85:	add    DWORD PTR [ebp-0x4],edx
   19b88:	add    DWORD PTR [ebp+0xc],0x8
   19b8c:	mov    ecx,DWORD PTR [ebp-0x34]
   19b8f:	and    ecx,DWORD PTR [ebp-0x4]
   19b92:	mov    edx,DWORD PTR [ebp-0x1c]
   19b95:	mov    ecx,DWORD PTR [edx+ecx*4]
   19b98:	mov    DWORD PTR [ebp-0x10],ecx
   19b9b:	mov    edx,DWORD PTR [ebp-0x10]
   19b9e:	shr    ecx,0x8
   19ba1:	movzx  ecx,cl
   19ba4:	shr    DWORD PTR [ebp-0x4],cl
   19ba7:	sub    DWORD PTR [ebp+0xc],ecx
   19baa:	mov    DWORD PTR [ebp-0x8],ecx
   19bad:	movzx  ecx,dl
   19bb0:	mov    DWORD PTR [ebp-0x8],ecx
   19bb3:	test   ecx,ecx
   19bb5:	je     0x19bfe
   19bb7:	mov    ecx,DWORD PTR [ebp-0x8]
   19bba:	test   cl,0x10
   19bbd:	jne    0x19c09
   19bbf:	test   cl,0x40
   19bc2:	jne    0x19e58
   19bc8:	xor    edx,edx
   19bca:	inc    edx
   19bcb:	shl    edx,cl
   19bcd:	mov    ecx,DWORD PTR [ebp-0x10]
   19bd0:	shr    ecx,0x10
   19bd3:	dec    edx
   19bd4:	and    edx,DWORD PTR [ebp-0x4]
   19bd7:	add    edx,ecx
   19bd9:	mov    ecx,DWORD PTR [ebp-0x1c]
   19bdc:	mov    ecx,DWORD PTR [ecx+edx*4]
   19bdf:	mov    DWORD PTR [ebp-0x10],ecx
   19be2:	mov    edx,DWORD PTR [ebp-0x10]
   19be5:	shr    ecx,0x8
   19be8:	movzx  ecx,cl
   19beb:	shr    DWORD PTR [ebp-0x4],cl
   19bee:	sub    DWORD PTR [ebp+0xc],ecx
   19bf1:	mov    DWORD PTR [ebp-0x8],ecx
   19bf4:	movzx  ecx,dl
   19bf7:	mov    DWORD PTR [ebp-0x8],ecx
   19bfa:	test   ecx,ecx
   19bfc:	jne    0x19bb7
   19bfe:	inc    edi
   19bff:	shr    edx,0x10
   19c02:	mov    BYTE PTR [edi],dl
   19c04:	jmp    0x19e36
   19c09:	shr    edx,0x10
   19c0c:	and    ecx,0xf
   19c0f:	mov    DWORD PTR [ebp-0xc],edx
   19c12:	mov    DWORD PTR [ebp-0x8],ecx
   19c15:	je     0x19c41
   19c17:	mov    ecx,DWORD PTR [ebp+0xc]
   19c1a:	cmp    ecx,DWORD PTR [ebp-0x8]
   19c1d:	jae    0x19c2c
   19c1f:	inc    ebx
   19c20:	movzx  edx,BYTE PTR [ebx]
   19c23:	shl    edx,cl
   19c25:	add    DWORD PTR [ebp-0x4],edx
   19c28:	add    DWORD PTR [ebp+0xc],0x8
   19c2c:	mov    ecx,DWORD PTR [ebp-0x8]
   19c2f:	xor    edx,edx
   19c31:	inc    edx
   19c32:	shl    edx,cl
   19c34:	dec    edx
   19c35:	and    edx,DWORD PTR [ebp-0x4]
   19c38:	shr    DWORD PTR [ebp-0x4],cl
   19c3b:	add    DWORD PTR [ebp-0xc],edx
   19c3e:	sub    DWORD PTR [ebp+0xc],ecx
   19c41:	mov    ecx,DWORD PTR [ebp+0xc]
   19c44:	cmp    ecx,0xf
   19c47:	jae    0x19c66
   19c49:	add    DWORD PTR [ebp+0xc],0x8
   19c4d:	inc    ebx
   19c4e:	movzx  edx,BYTE PTR [ebx]
   19c51:	shl    edx,cl
   19c53:	mov    ecx,DWORD PTR [ebp+0xc]
   19c56:	add    DWORD PTR [ebp-0x4],edx
   19c59:	inc    ebx
   19c5a:	movzx  edx,BYTE PTR [ebx]
   19c5d:	shl    edx,cl
   19c5f:	add    DWORD PTR [ebp-0x4],edx
   19c62:	add    DWORD PTR [ebp+0xc],0x8
   19c66:	mov    ecx,DWORD PTR [ebp-0x38]
   19c69:	and    ecx,DWORD PTR [ebp-0x4]
   19c6c:	mov    edx,DWORD PTR [ebp-0x20]
   19c6f:	mov    ecx,DWORD PTR [edx+ecx*4]
   19c72:	jmp    0x19c92
   19c74:	test   cl,0x40
   19c77:	jne    0x19e4f
   19c7d:	xor    edx,edx
   19c7f:	inc    edx
   19c80:	shl    edx,cl
   19c82:	movzx  ecx,WORD PTR [ebp-0xe]
   19c86:	dec    edx
   19c87:	and    edx,DWORD PTR [ebp-0x4]
   19c8a:	add    edx,ecx
   19c8c:	mov    ecx,DWORD PTR [ebp-0x20]
   19c8f:	mov    ecx,DWORD PTR [ecx+edx*4]
   19c92:	mov    DWORD PTR [ebp-0x10],ecx
   19c95:	mov    edx,DWORD PTR [ebp-0x10]
   19c98:	shr    ecx,0x8
   19c9b:	movzx  ecx,cl
   19c9e:	shr    DWORD PTR [ebp-0x4],cl
   19ca1:	sub    DWORD PTR [ebp+0xc],ecx
   19ca4:	mov    DWORD PTR [ebp-0x8],ecx
   19ca7:	movzx  ecx,dl
   19caa:	test   cl,0x10
   19cad:	je     0x19c74
   19caf:	and    ecx,0xf
   19cb2:	shr    edx,0x10
   19cb5:	mov    DWORD PTR [ebp-0x14],edx
   19cb8:	mov    DWORD PTR [ebp-0x8],ecx
   19cbb:	cmp    DWORD PTR [ebp+0xc],ecx
   19cbe:	jae    0x19ceb
   19cc0:	mov    ecx,DWORD PTR [ebp+0xc]
   19cc3:	add    DWORD PTR [ebp+0xc],0x8
   19cc7:	inc    ebx
   19cc8:	movzx  edx,BYTE PTR [ebx]
   19ccb:	shl    edx,cl
   19ccd:	mov    ecx,DWORD PTR [ebp-0x8]
   19cd0:	add    DWORD PTR [ebp-0x4],edx
   19cd3:	cmp    DWORD PTR [ebp+0xc],ecx
   19cd6:	jae    0x19ceb
   19cd8:	mov    ecx,DWORD PTR [ebp+0xc]
   19cdb:	inc    ebx
   19cdc:	movzx  edx,BYTE PTR [ebx]
   19cdf:	shl    edx,cl
   19ce1:	mov    ecx,DWORD PTR [ebp-0x8]
   19ce4:	add    DWORD PTR [ebp-0x4],edx
   19ce7:	add    DWORD PTR [ebp+0xc],0x8
   19ceb:	xor    edx,edx
   19ced:	inc    edx
   19cee:	shl    edx,cl
   19cf0:	mov    ecx,DWORD PTR [ebp-0x8]
   19cf3:	sub    DWORD PTR [ebp+0xc],ecx
   19cf6:	dec    edx
   19cf7:	and    edx,DWORD PTR [ebp-0x4]
   19cfa:	shr    DWORD PTR [ebp-0x4],cl
   19cfd:	add    DWORD PTR [ebp-0x14],edx
   19d00:	mov    edx,DWORD PTR [ebp-0x14]
   19d03:	mov    ecx,edi
   19d05:	sub    ecx,DWORD PTR [ebp-0x3c]
   19d08:	cmp    edx,ecx
   19d0a:	jbe    0x19dfe
   19d10:	sub    edx,ecx
   19d12:	mov    DWORD PTR [ebp-0x8],edx
   19d15:	cmp    edx,DWORD PTR [ebp-0x40]
   19d18:	ja     0x19e46
   19d1e:	mov    ecx,DWORD PTR [ebp-0x28]
   19d21:	dec    ecx
   19d22:	mov    DWORD PTR [ebp-0x10],ecx
   19d25:	mov    ecx,DWORD PTR [ebp-0x18]
   19d28:	test   ecx,ecx
   19d2a:	jne    0x19d52
   19d2c:	mov    ecx,DWORD PTR [ebp-0x24]
   19d2f:	sub    ecx,edx
   19d31:	add    DWORD PTR [ebp-0x10],ecx
   19d34:	mov    ecx,edx
   19d36:	cmp    ecx,DWORD PTR [ebp-0xc]
   19d39:	jae    0x19dc7
   19d3f:	sub    DWORD PTR [ebp-0xc],ecx
   19d42:	mov    ecx,DWORD PTR [ebp-0x10]
   19d45:	inc    ecx
   19d46:	mov    dl,BYTE PTR [ecx]
   19d48:	inc    edi
   19d49:	dec    DWORD PTR [ebp-0x8]
   19d4c:	mov    BYTE PTR [edi],dl
   19d4e:	jne    0x19d45
   19d50:	jmp    0x19d9d
   19d52:	cmp    ecx,edx
   19d54:	jae    0x19da7
   19d56:	sub    ecx,edx
   19d58:	add    ecx,DWORD PTR [ebp-0x24]
   19d5b:	add    DWORD PTR [ebp-0x10],ecx
   19d5e:	mov    ecx,DWORD PTR [ebp-0x8]
   19d61:	sub    ecx,DWORD PTR [ebp-0x18]
   19d64:	cmp    ecx,DWORD PTR [ebp-0xc]
   19d67:	jae    0x19dc7
   19d69:	sub    DWORD PTR [ebp-0xc],ecx
   19d6c:	inc    DWORD PTR [ebp-0x10]
   19d6f:	mov    edx,DWORD PTR [ebp-0x10]
   19d72:	mov    dl,BYTE PTR [edx]
   19d74:	inc    edi
   19d75:	dec    ecx
   19d76:	mov    BYTE PTR [edi],dl
   19d78:	jne    0x19d6c
   19d7a:	mov    ecx,DWORD PTR [ebp-0x28]
   19d7d:	dec    ecx
   19d7e:	mov    DWORD PTR [ebp-0x10],ecx
   19d81:	mov    ecx,DWORD PTR [ebp-0x18]
   19d84:	cmp    ecx,DWORD PTR [ebp-0xc]
   19d87:	jae    0x19dc7
   19d89:	sub    DWORD PTR [ebp-0xc],ecx
   19d8c:	mov    DWORD PTR [ebp-0x8],ecx
   19d8f:	mov    ecx,DWORD PTR [ebp-0x10]
   19d92:	inc    ecx
   19d93:	mov    dl,BYTE PTR [ecx]
   19d95:	inc    edi
   19d96:	dec    DWORD PTR [ebp-0x8]
   19d99:	mov    BYTE PTR [edi],dl
   19d9b:	jne    0x19d92
   19d9d:	mov    ecx,edi
   19d9f:	sub    ecx,DWORD PTR [ebp-0x14]
   19da2:	mov    DWORD PTR [ebp-0x10],ecx
   19da5:	jmp    0x19dca
   19da7:	sub    ecx,edx
   19da9:	add    DWORD PTR [ebp-0x10],ecx
   19dac:	mov    ecx,DWORD PTR [ebp-0x8]
   19daf:	cmp    ecx,DWORD PTR [ebp-0xc]
   19db2:	jae    0x19dc7
   19db4:	sub    DWORD PTR [ebp-0xc],ecx
   19db7:	mov    ecx,DWORD PTR [ebp-0x10]
   19dba:	inc    ecx
   19dbb:	mov    dl,BYTE PTR [ecx]
   19dbd:	inc    edi
   19dbe:	dec    DWORD PTR [ebp-0x8]
   19dc1:	mov    BYTE PTR [edi],dl
   19dc3:	jne    0x19dba
   19dc5:	jmp    0x19d9d
   19dc7:	mov    ecx,DWORD PTR [ebp-0x10]
   19dca:	mov    edx,DWORD PTR [ebp-0xc]
   19dcd:	cmp    edx,0x2
   19dd0:	jbe    0x19e1e
   19dd2:	lea    eax,[edx-0x3]
   19dd5:	push   0x3
   19dd7:	xor    edx,edx
   19dd9:	pop    ecx
   19dda:	div    ecx
   19ddc:	mov    ecx,DWORD PTR [ebp-0x10]
   19ddf:	inc    eax
   19de0:	sub    DWORD PTR [ebp-0xc],0x3
   19de4:	inc    ecx
   19de5:	mov    dl,BYTE PTR [ecx]
   19de7:	inc    edi
   19de8:	mov    BYTE PTR [edi],dl
   19dea:	inc    ecx
   19deb:	mov    dl,BYTE PTR [ecx]
   19ded:	inc    edi
   19dee:	inc    ecx
   19def:	mov    BYTE PTR [edi],dl
   19df1:	mov    dl,BYTE PTR [ecx]
   19df3:	inc    edi
   19df4:	dec    eax
   19df5:	mov    BYTE PTR [edi],dl
   19df7:	jne    0x19de0
   19df9:	mov    eax,DWORD PTR [ebp+0x8]
   19dfc:	jmp    0x19e1e
   19dfe:	mov    ecx,edi
   19e00:	sub    ecx,edx
   19e02:	sub    DWORD PTR [ebp-0xc],0x3
   19e06:	inc    ecx
   19e07:	mov    dl,BYTE PTR [ecx]
   19e09:	inc    edi
   19e0a:	mov    BYTE PTR [edi],dl
   19e0c:	inc    ecx
   19e0d:	mov    dl,BYTE PTR [ecx]
   19e0f:	inc    edi
   19e10:	inc    ecx
   19e11:	mov    BYTE PTR [edi],dl
   19e13:	mov    dl,BYTE PTR [ecx]
   19e15:	inc    edi
   19e16:	cmp    DWORD PTR [ebp-0xc],0x2
   19e1a:	mov    BYTE PTR [edi],dl
   19e1c:	ja     0x19e02
   19e1e:	cmp    DWORD PTR [ebp-0xc],0x0
   19e22:	je     0x19e36
   19e24:	inc    ecx
   19e25:	mov    dl,BYTE PTR [ecx]
   19e27:	inc    edi
   19e28:	cmp    DWORD PTR [ebp-0xc],0x1
   19e2c:	mov    BYTE PTR [edi],dl
   19e2e:	jbe    0x19e36
   19e30:	mov    cl,BYTE PTR [ecx+0x1]
   19e33:	inc    edi
   19e34:	mov    BYTE PTR [edi],cl
   19e36:	cmp    ebx,DWORD PTR [ebp-0x2c]
   19e39:	jae    0x19e72
   19e3b:	cmp    edi,DWORD PTR [ebp-0x30]
   19e3e:	jb     0x19b67
   19e44:	jmp    0x19e72
   19e46:	mov    DWORD PTR [eax+0x18],0x1b82a
   19e4d:	jmp    0x19e6c
   19e4f:	mov    DWORD PTR [eax+0x18],0x1b848
   19e56:	jmp    0x19e6c
   19e58:	test   cl,0x20
   19e5b:	je     0x19e65
   19e5d:	mov    DWORD PTR [esi],0xb
   19e63:	jmp    0x19e72
   19e65:	mov    DWORD PTR [eax+0x18],0x1b85e
   19e6c:	mov    DWORD PTR [esi],0x1b
   19e72:	mov    ecx,DWORD PTR [ebp+0xc]
   19e75:	shr    ecx,0x3
   19e78:	sub    ebx,ecx
   19e7a:	shl    ecx,0x3
   19e7d:	sub    DWORD PTR [ebp+0xc],ecx
   19e80:	xor    ecx,ecx
   19e82:	inc    ecx
   19e83:	mov    edx,ecx
   19e85:	mov    ecx,DWORD PTR [ebp+0xc]
   19e88:	shl    edx,cl
   19e8a:	dec    edx
   19e8b:	mov    ecx,edx
   19e8d:	mov    edx,DWORD PTR [ebp-0x4]
   19e90:	and    edx,ecx
   19e92:	lea    ecx,[ebx+0x1]
   19e95:	mov    DWORD PTR [eax],ecx
   19e97:	lea    ecx,[edi+0x1]
   19e9a:	mov    DWORD PTR [eax+0xc],ecx
   19e9d:	mov    ecx,DWORD PTR [ebp-0x2c]
   19ea0:	sub    ecx,ebx
   19ea2:	add    ecx,0x5
   19ea5:	mov    DWORD PTR [eax+0x4],ecx
   19ea8:	mov    ecx,DWORD PTR [ebp-0x30]
   19eab:	sub    ecx,edi
   19ead:	add    ecx,0x101
   19eb3:	mov    DWORD PTR [eax+0x10],ecx
   19eb6:	mov    eax,DWORD PTR [ebp+0xc]
   19eb9:	pop    edi
   19eba:	mov    DWORD PTR [esi+0x38],edx
   19ebd:	mov    DWORD PTR [esi+0x3c],eax
   19ec0:	pop    esi
   19ec1:	pop    ebx
   19ec2:	leave  
   19ec3:	ret    0x8
   19ec6:	int3   
   19ec7:	int3   
   19ec8:	int3   
   19ec9:	int3   
   19eca:	int3   
   19ecb:	int3   
   19ecc:	mov    edi,edi
   19ece:	push   ebp
   19ecf:	mov    ebp,esp
   19ed1:	sub    esp,0x90
   19ed7:	mov    eax,ds:0x70418
   19edc:	xor    eax,ebp
   19ede:	mov    DWORD PTR [ebp-0x4],eax
   19ee1:	mov    eax,DWORD PTR [ebp+0xc]
   19ee4:	mov    edx,DWORD PTR [ebp+0x18]
   19ee7:	mov    DWORD PTR [ebp-0x7c],eax
   19eea:	mov    eax,DWORD PTR [ebp+0x1c]
   19eed:	push   ebx
   19eee:	mov    DWORD PTR [ebp-0x4c],eax
   19ef1:	xor    eax,eax
   19ef3:	push   esi
   19ef4:	mov    esi,DWORD PTR [ebp+0x14]
   19ef7:	movzx  ebx,ax
   19efa:	push   edi
   19efb:	mov    eax,ebx
   19efd:	shl    ebx,0x10
   19f00:	push   0x8
   19f02:	or     eax,ebx
   19f04:	pop    ecx
   19f05:	lea    edi,[ebp-0x24]
   19f08:	rep stos DWORD PTR es:[edi],eax
   19f0a:	xor    edi,edi
   19f0c:	xor    ecx,ecx
   19f0e:	mov    DWORD PTR [ebp-0x90],edx
   19f14:	cmp    DWORD PTR [ebp+0x10],edi
   19f17:	jbe    0x19f2d
   19f19:	mov    eax,DWORD PTR [ebp-0x7c]
   19f1c:	movzx  eax,WORD PTR [eax+ecx*2]
   19f20:	lea    eax,[ebp+eax*2-0x24]
   19f24:	inc    WORD PTR [eax]
   19f27:	inc    ecx
   19f28:	cmp    ecx,DWORD PTR [ebp+0x10]
   19f2b:	jb     0x19f19
   19f2d:	mov    ecx,DWORD PTR [edx]
   19f2f:	push   0xf
   19f31:	pop    eax
   19f32:	mov    DWORD PTR [ebp-0x54],ecx
   19f35:	mov    DWORD PTR [ebp-0x60],eax
   19f38:	cmp    WORD PTR [ebp+eax*2-0x24],di
   19f3d:	jne    0x19f48
   19f3f:	dec    eax
   19f40:	mov    DWORD PTR [ebp-0x60],eax
   19f43:	cmp    eax,0x1
   19f46:	jae    0x19f38
   19f48:	cmp    ecx,eax
   19f4a:	jbe    0x19f4f
   19f4c:	mov    DWORD PTR [ebp-0x54],eax
   19f4f:	cmp    eax,edi
   19f51:	jne    0x19f7d
   19f53:	mov    ecx,DWORD PTR [esi]
   19f55:	xor    eax,eax
   19f57:	mov    BYTE PTR [ebp-0x48],0x40
   19f5b:	mov    BYTE PTR [ebp-0x47],0x1
   19f5f:	mov    WORD PTR [ebp-0x46],ax
   19f63:	mov    eax,DWORD PTR [ebp-0x48]
   19f66:	mov    DWORD PTR [ecx],eax
   19f68:	add    DWORD PTR [esi],0x4
   19f6b:	mov    ecx,DWORD PTR [esi]
   19f6d:	mov    DWORD PTR [ecx],eax
   19f6f:	add    DWORD PTR [esi],0x4
   19f72:	mov    DWORD PTR [edx],0x1
   19f78:	jmp    0x1a2b9
   19f7d:	xor    ecx,ecx
   19f7f:	inc    ecx
   19f80:	mov    edx,ecx
   19f82:	cmp    WORD PTR [ebp+edx*2-0x24],di
   19f87:	jne    0x19f8f
   19f89:	inc    edx
   19f8a:	cmp    edx,0xf
   19f8d:	jbe    0x19f82
   19f8f:	cmp    DWORD PTR [ebp-0x54],edx
   19f92:	jae    0x19f97
   19f94:	mov    DWORD PTR [ebp-0x54],edx
   19f97:	mov    edi,ecx
   19f99:	movzx  ebx,WORD PTR [ebp+ecx*2-0x24]
   19f9e:	add    edi,edi
   19fa0:	sub    edi,ebx
   19fa2:	js     0x1a02e
   19fa8:	inc    ecx
   19fa9:	cmp    ecx,0xf
   19fac:	jbe    0x19f99
   19fae:	xor    ebx,ebx
   19fb0:	cmp    edi,ebx
   19fb2:	jle    0x19fbe
   19fb4:	cmp    DWORD PTR [ebp+0x8],ebx
   19fb7:	je     0x1a02e
   19fb9:	cmp    eax,0x1
   19fbc:	jne    0x1a02e
   19fbe:	xor    eax,eax
   19fc0:	push   0x2
   19fc2:	mov    WORD PTR [ebp-0x42],ax
   19fc6:	pop    ecx
   19fc7:	mov    ax,WORD PTR [ebp+ecx*1-0x44]
   19fcc:	add    ax,WORD PTR [ebp+ecx*1-0x24]
   19fd1:	inc    ecx
   19fd2:	mov    WORD PTR [ebp+ecx*1-0x43],ax
   19fd7:	inc    ecx
   19fd8:	cmp    ecx,0x1e
   19fdb:	jb     0x19fc7
   19fdd:	mov    eax,DWORD PTR [ebp-0x4c]
   19fe0:	xor    edi,edi
   19fe2:	cmp    DWORD PTR [ebp+0x10],ebx
   19fe5:	jbe    0x1a010
   19fe7:	mov    ecx,DWORD PTR [ebp-0x7c]
   19fea:	lea    ecx,[ecx+edi*2]
   19fed:	cmp    WORD PTR [ecx],bx
   19ff0:	je     0x1a00a
   19ff2:	movzx  ebx,WORD PTR [ecx]
   19ff5:	movzx  ebx,WORD PTR [ebp+ebx*2-0x44]
   19ffa:	mov    WORD PTR [eax+ebx*2],di
   19ffe:	movzx  ecx,WORD PTR [ecx]
   1a001:	lea    ecx,[ebp+ecx*2-0x44]
   1a005:	inc    WORD PTR [ecx]
   1a008:	xor    ebx,ebx
   1a00a:	inc    edi
   1a00b:	cmp    edi,DWORD PTR [ebp+0x10]
   1a00e:	jb     0x19fe7
   1a010:	mov    ecx,DWORD PTR [ebp+0x8]
   1a013:	sub    ecx,ebx
   1a015:	je     0x1a058
   1a017:	dec    ecx
   1a018:	je     0x1a036
   1a01a:	or     DWORD PTR [ebp-0x68],0xffffffff
   1a01e:	mov    DWORD PTR [ebp-0x6c],0x6dfb0
   1a025:	mov    DWORD PTR [ebp-0x78],0x6dff0
   1a02c:	jmp    0x1a065
   1a02e:	or     eax,0xffffffff
   1a031:	jmp    0x1a2bb
   1a036:	mov    ecx,0x202
   1a03b:	mov    edi,0x6df30
   1a040:	sub    edi,ecx
   1a042:	mov    DWORD PTR [ebp-0x6c],edi
   1a045:	mov    edi,0x6df70
   1a04a:	sub    edi,ecx
   1a04c:	mov    DWORD PTR [ebp-0x78],edi
   1a04f:	mov    DWORD PTR [ebp-0x68],0x100
   1a056:	jmp    0x1a065
   1a058:	mov    DWORD PTR [ebp-0x78],eax
   1a05b:	mov    DWORD PTR [ebp-0x6c],eax
   1a05e:	mov    DWORD PTR [ebp-0x68],0x13
   1a065:	mov    ecx,DWORD PTR [ebp-0x54]
   1a068:	or     DWORD PTR [ebp-0x74],0xffffffff
   1a06c:	mov    edi,DWORD PTR [esi]
   1a06e:	mov    eax,edx
   1a070:	xor    edx,edx
   1a072:	inc    edx
   1a073:	shl    edx,cl
   1a075:	cmp    DWORD PTR [ebp+0x8],0x1
   1a079:	mov    DWORD PTR [ebp-0x5c],ebx
   1a07c:	mov    DWORD PTR [ebp-0x84],eax
   1a082:	lea    ecx,[edx-0x1]
   1a085:	mov    DWORD PTR [ebp-0x50],ebx
   1a088:	mov    DWORD PTR [ebp-0x80],edx
   1a08b:	mov    DWORD PTR [ebp-0x64],edx
   1a08e:	mov    DWORD PTR [ebp-0x88],ecx
   1a094:	jne    0x1a0a6
   1a096:	cmp    edx,0x5b0
   1a09c:	jb     0x1a0a6
   1a09e:	xor    eax,eax
   1a0a0:	inc    eax
   1a0a1:	jmp    0x1a2bb
   1a0a6:	mov    ecx,DWORD PTR [ebp-0x4c]
   1a0a9:	mov    DWORD PTR [ebp-0x58],ecx
   1a0ac:	mov    cl,al
   1a0ae:	sub    cl,BYTE PTR [ebp-0x50]
   1a0b1:	mov    BYTE PTR [ebp-0x47],cl
   1a0b4:	mov    ecx,DWORD PTR [ebp-0x58]
   1a0b7:	movzx  edx,WORD PTR [ecx]
   1a0ba:	movzx  ecx,dx
   1a0bd:	cmp    ecx,DWORD PTR [ebp-0x68]
   1a0c0:	jge    0x1a0cc
   1a0c2:	mov    BYTE PTR [ebp-0x48],0x0
   1a0c6:	mov    WORD PTR [ebp-0x46],dx
   1a0ca:	jmp    0x1a0f2
   1a0cc:	jle    0x1a0e8
   1a0ce:	mov    ecx,DWORD PTR [ebp-0x58]
   1a0d1:	movzx  ecx,WORD PTR [ecx]
   1a0d4:	mov    edx,DWORD PTR [ebp-0x78]
   1a0d7:	add    ecx,ecx
   1a0d9:	mov    dl,BYTE PTR [ecx+edx*1]
   1a0dc:	mov    BYTE PTR [ebp-0x48],dl
   1a0df:	mov    edx,DWORD PTR [ebp-0x6c]
   1a0e2:	mov    cx,WORD PTR [ecx+edx*1]
   1a0e6:	jmp    0x1a0ee
   1a0e8:	mov    BYTE PTR [ebp-0x48],0x60
   1a0ec:	xor    ecx,ecx
   1a0ee:	mov    WORD PTR [ebp-0x46],cx
   1a0f2:	xor    edx,edx
   1a0f4:	mov    ecx,eax
   1a0f6:	sub    ecx,DWORD PTR [ebp-0x50]
   1a0f9:	inc    edx
   1a0fa:	shl    edx,cl
   1a0fc:	mov    ecx,DWORD PTR [ebp-0x80]
   1a0ff:	mov    DWORD PTR [ebp-0x4c],ecx
   1a102:	mov    DWORD PTR [ebp-0x70],ecx
   1a105:	mov    ecx,DWORD PTR [ebp-0x50]
   1a108:	shr    ebx,cl
   1a10a:	add    ebx,DWORD PTR [ebp-0x4c]
   1a10d:	lea    ecx,[edi+ebx*4]
   1a110:	sub    DWORD PTR [ebp-0x4c],edx
   1a113:	mov    ebx,edx
   1a115:	shl    ebx,0x2
   1a118:	sub    ecx,ebx
   1a11a:	cmp    DWORD PTR [ebp-0x4c],0x0
   1a11e:	mov    ebx,DWORD PTR [ebp-0x48]
   1a121:	mov    DWORD PTR [ecx],ebx
   1a123:	jne    0x1a110
   1a125:	xor    edx,edx
   1a127:	lea    ecx,[eax-0x1]
   1a12a:	inc    edx
   1a12b:	shl    edx,cl
   1a12d:	mov    ecx,DWORD PTR [ebp-0x5c]
   1a130:	jmp    0x1a134
   1a132:	shr    edx,1
   1a134:	test   ecx,edx
   1a136:	jne    0x1a132
   1a138:	test   edx,edx
   1a13a:	je     0x1a145
   1a13c:	lea    ebx,[edx-0x1]
   1a13f:	and    ebx,ecx
   1a141:	add    ebx,edx
   1a143:	jmp    0x1a147
   1a145:	xor    ebx,ebx
   1a147:	add    DWORD PTR [ebp-0x58],0x2
   1a14b:	lea    ecx,[ebp+eax*2-0x24]
   1a14f:	mov    edx,0xffff
   1a154:	add    WORD PTR [ecx],dx
   1a157:	movzx  ecx,WORD PTR [ecx]
   1a15a:	mov    DWORD PTR [ebp-0x5c],ebx
   1a15d:	test   cx,cx
   1a160:	jne    0x1a17e
   1a162:	cmp    eax,DWORD PTR [ebp-0x60]
   1a165:	je     0x1a241
   1a16b:	mov    eax,DWORD PTR [ebp-0x58]
   1a16e:	movzx  eax,WORD PTR [eax]
   1a171:	mov    ecx,DWORD PTR [ebp-0x7c]
   1a174:	movzx  eax,WORD PTR [ecx+eax*2]
   1a178:	mov    DWORD PTR [ebp-0x84],eax
   1a17e:	mov    edx,DWORD PTR [ebp-0x54]
   1a181:	cmp    eax,edx
   1a183:	jbe    0x1a0ac
   1a189:	mov    ecx,DWORD PTR [ebp-0x88]
   1a18f:	and    ecx,ebx
   1a191:	mov    DWORD PTR [ebp-0x8c],ecx
   1a197:	cmp    ecx,DWORD PTR [ebp-0x74]
   1a19a:	je     0x1a0ac
   1a1a0:	cmp    DWORD PTR [ebp-0x50],0x0
   1a1a4:	jne    0x1a1a9
   1a1a6:	mov    DWORD PTR [ebp-0x50],edx
   1a1a9:	mov    ecx,DWORD PTR [ebp-0x70]
   1a1ac:	lea    edi,[edi+ecx*4]
   1a1af:	mov    ecx,eax
   1a1b1:	mov    eax,DWORD PTR [ebp-0x50]
   1a1b4:	xor    edx,edx
   1a1b6:	sub    ecx,eax
   1a1b8:	inc    edx
   1a1b9:	add    eax,ecx
   1a1bb:	shl    edx,cl
   1a1bd:	cmp    eax,DWORD PTR [ebp-0x60]
   1a1c0:	jae    0x1a1ea
   1a1c2:	mov    DWORD PTR [ebp-0x4c],eax
   1a1c5:	lea    eax,[ebp+eax*2-0x24]
   1a1c9:	jmp    0x1a1ce
   1a1cb:	mov    eax,DWORD PTR [ebp-0x70]
   1a1ce:	movzx  ebx,WORD PTR [eax]
   1a1d1:	sub    edx,ebx
   1a1d3:	test   edx,edx
   1a1d5:	jle    0x1a1ea
   1a1d7:	inc    ecx
   1a1d8:	inc    DWORD PTR [ebp-0x4c]
   1a1db:	inc    eax
   1a1dc:	inc    eax
   1a1dd:	mov    DWORD PTR [ebp-0x70],eax
   1a1e0:	mov    eax,DWORD PTR [ebp-0x4c]
   1a1e3:	add    edx,edx
   1a1e5:	cmp    eax,DWORD PTR [ebp-0x60]
   1a1e8:	jb     0x1a1cb
   1a1ea:	xor    eax,eax
   1a1ec:	inc    eax
   1a1ed:	mov    edx,eax
   1a1ef:	shl    edx,cl
   1a1f1:	add    DWORD PTR [ebp-0x64],edx
   1a1f4:	mov    DWORD PTR [ebp-0x80],edx
   1a1f7:	cmp    DWORD PTR [ebp+0x8],eax
   1a1fa:	jne    0x1a209
   1a1fc:	cmp    DWORD PTR [ebp-0x64],0x5b0
   1a203:	jae    0x1a2bb
   1a209:	mov    eax,DWORD PTR [ebp-0x8c]
   1a20f:	mov    ebx,DWORD PTR [ebp-0x5c]
   1a212:	mov    edx,eax
   1a214:	mov    DWORD PTR [ebp-0x74],eax
   1a217:	mov    eax,DWORD PTR [esi]
   1a219:	shl    edx,0x2
   1a21c:	mov    BYTE PTR [edx+eax*1],cl
   1a21f:	mov    eax,DWORD PTR [esi]
   1a221:	mov    cl,BYTE PTR [ebp-0x54]
   1a224:	mov    BYTE PTR [edx+eax*1+0x1],cl
   1a228:	mov    eax,DWORD PTR [esi]
   1a22a:	mov    ecx,edi
   1a22c:	sub    ecx,eax
   1a22e:	sar    ecx,0x2
   1a231:	mov    WORD PTR [edx+eax*1+0x2],cx
   1a236:	mov    eax,DWORD PTR [ebp-0x84]
   1a23c:	jmp    0x1a0ac
   1a241:	mov    cl,al
   1a243:	sub    cl,BYTE PTR [ebp-0x50]
   1a246:	mov    BYTE PTR [ebp-0x48],0x40
   1a24a:	mov    BYTE PTR [ebp-0x47],cl
   1a24d:	xor    ecx,ecx
   1a24f:	mov    WORD PTR [ebp-0x46],cx
   1a253:	jmp    0x1a2a2
   1a255:	cmp    DWORD PTR [ebp-0x50],0x0
   1a259:	je     0x1a274
   1a25b:	mov    ecx,DWORD PTR [ebp-0x88]
   1a261:	and    ecx,ebx
   1a263:	cmp    ecx,DWORD PTR [ebp-0x74]
   1a266:	je     0x1a274
   1a268:	mov    eax,DWORD PTR [ebp-0x54]
   1a26b:	and    DWORD PTR [ebp-0x50],0x0
   1a26f:	mov    edi,DWORD PTR [esi]
   1a271:	mov    BYTE PTR [ebp-0x47],al
   1a274:	mov    ecx,DWORD PTR [ebp-0x50]
   1a277:	mov    edx,ebx
   1a279:	shr    edx,cl
   1a27b:	mov    ecx,DWORD PTR [ebp-0x48]
   1a27e:	mov    DWORD PTR [edi+edx*4],ecx
   1a281:	xor    edx,edx
   1a283:	lea    ecx,[eax-0x1]
   1a286:	inc    edx
   1a287:	shl    edx,cl
   1a289:	jmp    0x1a28d
   1a28b:	shr    edx,1
   1a28d:	test   ebx,edx
   1a28f:	jne    0x1a28b
   1a291:	test   edx,edx
   1a293:	je     0x1a2a0
   1a295:	lea    ecx,[edx-0x1]
   1a298:	and    ecx,ebx
   1a29a:	add    ecx,edx
   1a29c:	mov    ebx,ecx
   1a29e:	jmp    0x1a2a2
   1a2a0:	xor    ebx,ebx
   1a2a2:	test   ebx,ebx
   1a2a4:	jne    0x1a255
   1a2a6:	mov    eax,DWORD PTR [ebp-0x64]
   1a2a9:	mov    ecx,DWORD PTR [ebp-0x54]
   1a2ac:	shl    eax,0x2
   1a2af:	add    DWORD PTR [esi],eax
   1a2b1:	mov    eax,DWORD PTR [ebp-0x90]
   1a2b7:	mov    DWORD PTR [eax],ecx
   1a2b9:	xor    eax,eax
   1a2bb:	mov    ecx,DWORD PTR [ebp-0x4]
   1a2be:	pop    edi
   1a2bf:	pop    esi
   1a2c0:	xor    ecx,ebp
   1a2c2:	pop    ebx
   1a2c3:	call   0x1a7c5
   1a2c8:	leave  
   1a2c9:	ret    0x18
   1a2cc:	int3   
   1a2cd:	int3   
   1a2ce:	int3   
   1a2cf:	int3   
   1a2d0:	int3   
   1a2d1:	int3   
   1a2d2:	mov    edi,edi
   1a2d4:	push   ebp
   1a2d5:	mov    ebp,esp
   1a2d7:	push   ebx
   1a2d8:	mov    ebx,DWORD PTR [ebp+0x10]
   1a2db:	push   esi
   1a2dc:	mov    esi,DWORD PTR [ebp+0x8]
   1a2df:	push   edi
   1a2e0:	xor    eax,eax
   1a2e2:	mov    edi,esi
   1a2e4:	inc    eax
   1a2e5:	shr    edi,0x10
   1a2e8:	and    esi,0xffff
   1a2ee:	cmp    ebx,eax
   1a2f0:	jne    0x1a316
   1a2f2:	mov    eax,DWORD PTR [ebp+0xc]
   1a2f5:	movzx  eax,BYTE PTR [eax]
   1a2f8:	add    esi,eax
   1a2fa:	mov    eax,0xfff1
   1a2ff:	cmp    esi,eax
   1a301:	jb     0x1a305
   1a303:	sub    esi,eax
   1a305:	add    edi,esi
   1a307:	cmp    edi,eax
   1a309:	jb     0x1a4e8
   1a30f:	sub    edi,eax
   1a311:	jmp    0x1a4e8
   1a316:	mov    ecx,DWORD PTR [ebp+0xc]
   1a319:	test   ecx,ecx
   1a31b:	je     0x1a4ef
   1a321:	cmp    ebx,0x10
   1a324:	jb     0x1a4ab
   1a32a:	cmp    ebx,0x15b0
   1a330:	jb     0x1a3fe
   1a336:	mov    eax,ebx
   1a338:	mov    ebx,0x15b0
   1a33d:	xor    edx,edx
   1a33f:	div    ebx
   1a341:	mov    ebx,DWORD PTR [ebp+0x10]
   1a344:	mov    DWORD PTR [ebp+0xc],eax
   1a347:	sub    ebx,0x15b0
   1a34d:	mov    eax,0x15b
   1a352:	movzx  edx,BYTE PTR [ecx]
   1a355:	add    esi,edx
   1a357:	movzx  edx,BYTE PTR [ecx+0x1]
   1a35b:	add    edi,esi
   1a35d:	add    esi,edx
   1a35f:	movzx  edx,BYTE PTR [ecx+0x2]
   1a363:	add    edi,esi
   1a365:	add    esi,edx
   1a367:	movzx  edx,BYTE PTR [ecx+0x3]
   1a36b:	add    edi,esi
   1a36d:	add    esi,edx
   1a36f:	movzx  edx,BYTE PTR [ecx+0x4]
   1a373:	add    edi,esi
   1a375:	add    esi,edx
   1a377:	movzx  edx,BYTE PTR [ecx+0x5]
   1a37b:	add    edi,esi
   1a37d:	add    esi,edx
   1a37f:	movzx  edx,BYTE PTR [ecx+0x6]
   1a383:	add    edi,esi
   1a385:	add    esi,edx
   1a387:	movzx  edx,BYTE PTR [ecx+0x7]
   1a38b:	add    edi,esi
   1a38d:	add    esi,edx
   1a38f:	movzx  edx,BYTE PTR [ecx+0x8]
   1a393:	add    edi,esi
   1a395:	add    esi,edx
   1a397:	movzx  edx,BYTE PTR [ecx+0x9]
   1a39b:	add    edi,esi
   1a39d:	add    esi,edx
   1a39f:	movzx  edx,BYTE PTR [ecx+0xa]
   1a3a3:	add    edi,esi
   1a3a5:	add    esi,edx
   1a3a7:	movzx  edx,BYTE PTR [ecx+0xb]
   1a3ab:	add    edi,esi
   1a3ad:	add    esi,edx
   1a3af:	movzx  edx,BYTE PTR [ecx+0xc]
   1a3b3:	add    edi,esi
   1a3b5:	add    esi,edx
   1a3b7:	movzx  edx,BYTE PTR [ecx+0xd]
   1a3bb:	add    edi,esi
   1a3bd:	add    esi,edx
   1a3bf:	movzx  edx,BYTE PTR [ecx+0xe]
   1a3c3:	add    edi,esi
   1a3c5:	add    esi,edx
   1a3c7:	movzx  edx,BYTE PTR [ecx+0xf]
   1a3cb:	add    edi,esi
   1a3cd:	add    esi,edx
   1a3cf:	add    edi,esi
   1a3d1:	add    ecx,0x10
   1a3d4:	dec    eax
   1a3d5:	jne    0x1a352
   1a3db:	mov    eax,esi
   1a3dd:	xor    edx,edx
   1a3df:	mov    esi,0xfff1
   1a3e4:	div    esi
   1a3e6:	mov    eax,edi
   1a3e8:	mov    edi,0xfff1
   1a3ed:	mov    esi,edx
   1a3ef:	xor    edx,edx
   1a3f1:	div    edi
   1a3f3:	dec    DWORD PTR [ebp+0xc]
   1a3f6:	mov    edi,edx
   1a3f8:	jne    0x1a347
   1a3fe:	test   ebx,ebx
   1a400:	je     0x1a4e8
   1a406:	cmp    ebx,0x10
   1a409:	jb     0x1a4cd
   1a40f:	mov    eax,ebx
   1a411:	shr    eax,0x4
   1a414:	movzx  edx,BYTE PTR [ecx]
   1a417:	add    esi,edx
   1a419:	movzx  edx,BYTE PTR [ecx+0x1]
   1a41d:	add    edi,esi
   1a41f:	add    esi,edx
   1a421:	movzx  edx,BYTE PTR [ecx+0x2]
   1a425:	add    edi,esi
   1a427:	add    esi,edx
   1a429:	movzx  edx,BYTE PTR [ecx+0x3]
   1a42d:	add    edi,esi
   1a42f:	add    esi,edx
   1a431:	movzx  edx,BYTE PTR [ecx+0x4]
   1a435:	add    edi,esi
   1a437:	add    esi,edx
   1a439:	movzx  edx,BYTE PTR [ecx+0x5]
   1a43d:	add    edi,esi
   1a43f:	add    esi,edx
   1a441:	movzx  edx,BYTE PTR [ecx+0x6]
   1a445:	add    edi,esi
   1a447:	add    esi,edx
   1a449:	movzx  edx,BYTE PTR [ecx+0x7]
   1a44d:	add    edi,esi
   1a44f:	add    esi,edx
   1a451:	movzx  edx,BYTE PTR [ecx+0x8]
   1a455:	add    edi,esi
   1a457:	add    esi,edx
   1a459:	movzx  edx,BYTE PTR [ecx+0x9]
   1a45d:	add    edi,esi
   1a45f:	add    esi,edx
   1a461:	movzx  edx,BYTE PTR [ecx+0xa]
   1a465:	add    edi,esi
   1a467:	add    esi,edx
   1a469:	movzx  edx,BYTE PTR [ecx+0xb]
   1a46d:	add    edi,esi
   1a46f:	add    esi,edx
   1a471:	movzx  edx,BYTE PTR [ecx+0xc]
   1a475:	add    edi,esi
   1a477:	add    esi,edx
   1a479:	movzx  edx,BYTE PTR [ecx+0xd]
   1a47d:	add    edi,esi
   1a47f:	add    esi,edx
   1a481:	movzx  edx,BYTE PTR [ecx+0xe]
   1a485:	add    edi,esi
   1a487:	add    esi,edx
   1a489:	movzx  edx,BYTE PTR [ecx+0xf]
   1a48d:	add    edi,esi
   1a48f:	add    esi,edx
   1a491:	sub    ebx,0x10
   1a494:	add    edi,esi
   1a496:	add    ecx,0x10
   1a499:	dec    eax
   1a49a:	jne    0x1a414
   1a4a0:	jmp    0x1a4cd
   1a4a2:	movzx  eax,BYTE PTR [ecx]
   1a4a5:	dec    ebx
   1a4a6:	add    esi,eax
   1a4a8:	inc    ecx
   1a4a9:	add    edi,esi
   1a4ab:	test   ebx,ebx
   1a4ad:	jne    0x1a4a2
   1a4af:	mov    ecx,0xfff1
   1a4b4:	cmp    esi,ecx
   1a4b6:	jb     0x1a4ba
   1a4b8:	sub    esi,ecx
   1a4ba:	mov    eax,edi
   1a4bc:	xor    edx,edx
   1a4be:	div    ecx
   1a4c0:	mov    eax,edx
   1a4c2:	jmp    0x1a4ea
   1a4c4:	movzx  eax,BYTE PTR [ecx]
   1a4c7:	dec    ebx
   1a4c8:	add    esi,eax
   1a4ca:	inc    ecx
   1a4cb:	add    edi,esi
   1a4cd:	test   ebx,ebx
   1a4cf:	jne    0x1a4c4
   1a4d1:	mov    eax,esi
   1a4d3:	mov    ecx,0xfff1
   1a4d8:	xor    edx,edx
   1a4da:	mov    esi,ecx
   1a4dc:	div    esi
   1a4de:	mov    eax,edi
   1a4e0:	mov    esi,edx
   1a4e2:	xor    edx,edx
   1a4e4:	div    ecx
   1a4e6:	mov    edi,edx
   1a4e8:	mov    eax,edi
   1a4ea:	shl    eax,0x10
   1a4ed:	or     eax,esi
   1a4ef:	pop    edi
   1a4f0:	pop    esi
   1a4f1:	pop    ebx
   1a4f2:	pop    ebp
   1a4f3:	ret    0xc
   1a4f6:	int3   
   1a4f7:	int3   
   1a4f8:	int3   
   1a4f9:	int3   
   1a4fa:	int3   
   1a4fb:	int3   
   1a4fc:	mov    edi,edi
   1a4fe:	push   ebp
   1a4ff:	mov    ebp,esp
   1a501:	push   ecx
   1a502:	cmp    DWORD PTR [ebp+0x8],0x0
   1a506:	push   esi
   1a507:	not    eax
   1a509:	mov    ecx,0xff
   1a50e:	je     0x1a52c
   1a510:	test   dl,0x3
   1a513:	je     0x1a52c
   1a515:	movzx  esi,BYTE PTR [edx]
   1a518:	xor    esi,eax
   1a51a:	and    esi,ecx
   1a51c:	shr    eax,0x8
   1a51f:	xor    eax,DWORD PTR [esi*4+0x6e030]
   1a526:	inc    edx
   1a527:	dec    DWORD PTR [ebp+0x8]
   1a52a:	jne    0x1a510
   1a52c:	cmp    DWORD PTR [ebp+0x8],0x20
   1a530:	push   ebx
   1a531:	push   edi
   1a532:	push   0x4
   1a534:	mov    esi,edx
   1a536:	pop    edi
   1a537:	jb     0x1a6fb
   1a53d:	mov    edx,DWORD PTR [ebp+0x8]
   1a540:	shr    edx,0x5
   1a543:	mov    DWORD PTR [ebp-0x4],edx
   1a546:	xor    eax,DWORD PTR [esi]
   1a548:	add    esi,edi
   1a54a:	mov    edx,eax
   1a54c:	shr    edx,0x10
   1a54f:	mov    ebx,eax
   1a551:	shr    ebx,0x8
   1a554:	and    edx,ecx
   1a556:	mov    edx,DWORD PTR [edx*4+0x6e430]
   1a55d:	and    ebx,ecx
   1a55f:	xor    edx,DWORD PTR [ebx*4+0x6e830]
   1a566:	mov    ebx,eax
   1a568:	shr    ebx,0x18
   1a56b:	xor    edx,DWORD PTR [ebx*4+0x6e030]
   1a572:	and    eax,ecx
   1a574:	xor    edx,DWORD PTR [eax*4+0x6ec30]
   1a57b:	xor    edx,DWORD PTR [esi]
   1a57d:	add    esi,edi
   1a57f:	mov    eax,edx
   1a581:	shr    eax,0x10
   1a584:	mov    ebx,edx
   1a586:	shr    ebx,0x8
   1a589:	and    eax,ecx
   1a58b:	mov    eax,DWORD PTR [eax*4+0x6e430]
   1a592:	and    ebx,ecx
   1a594:	xor    eax,DWORD PTR [ebx*4+0x6e830]
   1a59b:	mov    ebx,edx
   1a59d:	shr    ebx,0x18
   1a5a0:	xor    eax,DWORD PTR [ebx*4+0x6e030]
   1a5a7:	and    edx,ecx
   1a5a9:	xor    eax,DWORD PTR [edx*4+0x6ec30]
   1a5b0:	xor    eax,DWORD PTR [esi]
   1a5b2:	add    esi,edi
   1a5b4:	mov    edx,eax
   1a5b6:	shr    edx,0x10
   1a5b9:	mov    ebx,eax
   1a5bb:	and    edx,ecx
   1a5bd:	mov    edx,DWORD PTR [edx*4+0x6e430]
   1a5c4:	shr    ebx,0x8
   1a5c7:	and    ebx,ecx
   1a5c9:	xor    edx,DWORD PTR [ebx*4+0x6e830]
   1a5d0:	mov    ebx,eax
   1a5d2:	shr    ebx,0x18
   1a5d5:	xor    edx,DWORD PTR [ebx*4+0x6e030]
   1a5dc:	and    eax,ecx
   1a5de:	xor    edx,DWORD PTR [eax*4+0x6ec30]
   1a5e5:	xor    edx,DWORD PTR [esi]
   1a5e7:	add    esi,edi
   1a5e9:	mov    eax,edx
   1a5eb:	shr    eax,0x10
   1a5ee:	mov    ebx,edx
   1a5f0:	shr    ebx,0x8
   1a5f3:	and    eax,ecx
   1a5f5:	mov    eax,DWORD PTR [eax*4+0x6e430]
   1a5fc:	and    ebx,ecx
   1a5fe:	xor    eax,DWORD PTR [ebx*4+0x6e830]
   1a605:	mov    ebx,edx
   1a607:	shr    ebx,0x18
   1a60a:	xor    eax,DWORD PTR [ebx*4+0x6e030]
   1a611:	and    edx,ecx
   1a613:	xor    eax,DWORD PTR [edx*4+0x6ec30]
   1a61a:	xor    eax,DWORD PTR [esi]
   1a61c:	add    esi,edi
   1a61e:	mov    edx,eax
   1a620:	shr    edx,0x10
   1a623:	mov    ebx,eax
   1a625:	and    edx,ecx
   1a627:	mov    edx,DWORD PTR [edx*4+0x6e430]
   1a62e:	shr    ebx,0x8
   1a631:	and    ebx,ecx
   1a633:	xor    edx,DWORD PTR [ebx*4+0x6e830]
   1a63a:	mov    ebx,eax
   1a63c:	shr    ebx,0x18
   1a63f:	xor    edx,DWORD PTR [ebx*4+0x6e030]
   1a646:	and    eax,ecx
   1a648:	xor    edx,DWORD PTR [eax*4+0x6ec30]
   1a64f:	xor    edx,DWORD PTR [esi]
   1a651:	add    esi,edi
   1a653:	mov    eax,edx
   1a655:	shr    eax,0x10
   1a658:	and    eax,ecx
   1a65a:	mov    ebx,edx
   1a65c:	mov    eax,DWORD PTR [eax*4+0x6e430]
   1a663:	shr    ebx,0x8
   1a666:	and    ebx,ecx
   1a668:	xor    eax,DWORD PTR [ebx*4+0x6e830]
   1a66f:	mov    ebx,edx
   1a671:	shr    ebx,0x18
   1a674:	xor    eax,DWORD PTR [ebx*4+0x6e030]
   1a67b:	and    edx,ecx
   1a67d:	xor    eax,DWORD PTR [edx*4+0x6ec30]
   1a684:	sub    DWORD PTR [ebp+0x8],0x20
   1a688:	xor    eax,DWORD PTR [esi]
   1a68a:	add    esi,edi
   1a68c:	mov    edx,eax
   1a68e:	mov    ebx,eax
   1a690:	shr    edx,0x10
   1a693:	shr    ebx,0x8
   1a696:	and    edx,ecx
   1a698:	mov    edx,DWORD PTR [edx*4+0x6e430]
   1a69f:	and    ebx,ecx
   1a6a1:	xor    edx,DWORD PTR [ebx*4+0x6e830]
   1a6a8:	mov    ebx,eax
   1a6aa:	shr    ebx,0x18
   1a6ad:	xor    edx,DWORD PTR [ebx*4+0x6e030]
   1a6b4:	and    eax,ecx
   1a6b6:	xor    edx,DWORD PTR [eax*4+0x6ec30]
   1a6bd:	xor    edx,DWORD PTR [esi]
   1a6bf:	add    esi,edi
   1a6c1:	mov    eax,edx
   1a6c3:	shr    eax,0x10
   1a6c6:	and    eax,ecx
   1a6c8:	mov    eax,DWORD PTR [eax*4+0x6e430]
   1a6cf:	mov    ebx,edx
   1a6d1:	shr    ebx,0x8
   1a6d4:	and    ebx,ecx
   1a6d6:	xor    eax,DWORD PTR [ebx*4+0x6e830]
   1a6dd:	mov    ebx,edx
   1a6df:	shr    ebx,0x18
   1a6e2:	xor    eax,DWORD PTR [ebx*4+0x6e030]
   1a6e9:	and    edx,ecx
   1a6eb:	xor    eax,DWORD PTR [edx*4+0x6ec30]
   1a6f2:	dec    DWORD PTR [ebp-0x4]
   1a6f5:	jne    0x1a546
   1a6fb:	cmp    DWORD PTR [ebp+0x8],edi
   1a6fe:	jb     0x1a748
   1a700:	mov    edx,DWORD PTR [ebp+0x8]
   1a703:	shr    edx,0x2
   1a706:	mov    DWORD PTR [ebp-0x4],edx
   1a709:	xor    eax,DWORD PTR [esi]
   1a70b:	sub    DWORD PTR [ebp+0x8],edi
   1a70e:	mov    edx,eax
   1a710:	shr    edx,0x10
   1a713:	and    edx,ecx
   1a715:	mov    edx,DWORD PTR [edx*4+0x6e430]
   1a71c:	mov    ebx,eax
   1a71e:	shr    ebx,0x8
   1a721:	and    ebx,ecx
   1a723:	xor    edx,DWORD PTR [ebx*4+0x6e830]
   1a72a:	mov    ebx,eax
   1a72c:	shr    ebx,0x18
   1a72f:	xor    edx,DWORD PTR [ebx*4+0x6e030]
   1a736:	and    eax,ecx
   1a738:	xor    edx,DWORD PTR [eax*4+0x6ec30]
   1a73f:	add    esi,edi
   1a741:	dec    DWORD PTR [ebp-0x4]
   1a744:	mov    eax,edx
   1a746:	jne    0x1a709
   1a748:	cmp    DWORD PTR [ebp+0x8],0x0
   1a74c:	pop    edi
   1a74d:	pop    ebx
   1a74e:	je     0x1a767
   1a750:	movzx  edx,BYTE PTR [esi]
   1a753:	xor    edx,eax
   1a755:	and    edx,ecx
   1a757:	shr    eax,0x8
   1a75a:	xor    eax,DWORD PTR [edx*4+0x6e030]
   1a761:	inc    esi
   1a762:	dec    DWORD PTR [ebp+0x8]
   1a765:	jne    0x1a750
   1a767:	not    eax
   1a769:	pop    esi
   1a76a:	leave  
   1a76b:	ret    0x4
   1a76e:	int3   
   1a76f:	int3   
   1a770:	int3   
   1a771:	int3   
   1a772:	int3   
   1a773:	int3   
   1a774:	mov    edi,edi
   1a776:	push   ebp
   1a777:	mov    ebp,esp
   1a779:	mov    edx,DWORD PTR [ebp+0xc]
   1a77c:	test   edx,edx
   1a77e:	jne    0x1a784
   1a780:	xor    eax,eax
   1a782:	jmp    0x1a78f
   1a784:	push   DWORD PTR [ebp+0x10]
   1a787:	mov    eax,DWORD PTR [ebp+0x8]
   1a78a:	call   0x1a4fc
   1a78f:	pop    ebp
   1a790:	ret    0xc
   1a793:	int3   
   1a794:	int3   
   1a795:	int3   
   1a796:	int3   
   1a797:	int3   
   1a798:	mov    edi,edi
   1a79a:	push   ebp
   1a79b:	mov    ebp,esp
   1a79d:	push   0x20
   1a79f:	push   0x61737973
   1a7a4:	push   DWORD PTR [ebp+0x8]
   1a7a7:	push   0x1
   1a7a9:	call   DWORD PTR ds:0x1ba18
   1a7af:	test   eax,eax
   1a7b1:	jne    0x1a7be
   1a7b3:	push   0xc000009a
   1a7b8:	call   DWORD PTR ds:0x1ba14
   1a7be:	pop    ebp
   1a7bf:	ret    
   1a7c0:	int3   
   1a7c1:	int3   
   1a7c2:	int3   
   1a7c3:	int3   
   1a7c4:	int3   
   1a7c5:	cmp    ecx,DWORD PTR ds:0x70418
   1a7cb:	jne    0x1a7d0
   1a7cd:	ret    0x0
   1a7d0:	jmp    0x1a7da
   1a7d5:	int3   
   1a7d6:	int3   
   1a7d7:	int3   
   1a7d8:	int3   
   1a7d9:	int3   
   1a7da:	mov    edi,edi
   1a7dc:	push   ebp
   1a7dd:	mov    ebp,esp
   1a7df:	push   ecx
   1a7e0:	mov    DWORD PTR [ebp-0x4],ecx
   1a7e3:	push   0x0
   1a7e5:	push   DWORD PTR ds:0x7041c
   1a7eb:	push   DWORD PTR ds:0x70418
   1a7f1:	push   DWORD PTR [ebp-0x4]
   1a7f4:	push   0xf7
   1a7f9:	call   DWORD PTR ds:0x1baac
   1a7ff:	int3   
   1a800:	int3   
   1a801:	int3   
   1a802:	int3   
   1a803:	int3   
   1a804:	int3   
   1a805:	int3   
   1a806:	jmp    DWORD PTR ds:0x1ba0c
   1a80c:	int3   
   1a80d:	int3   
   1a80e:	int3   
   1a80f:	int3   
   1a810:	int3   
   1a811:	int3   
   1a812:	jmp    DWORD PTR ds:0x1ba10
   1a818:	int3   
   1a819:	int3   
   1a81a:	int3   
   1a81b:	int3   
   1a81c:	int3   
   1a81d:	int3   
   1a81e:	jmp    DWORD PTR ds:0x1ba3c
   1a824:	int3   
   1a825:	int3   
   1a826:	int3   
   1a827:	int3   
   1a828:	int3   
   1a829:	int3   
   1a82a:	jmp    DWORD PTR ds:0x1ba48
   1a830:	int3   
   1a831:	int3   
   1a832:	int3   
   1a833:	int3   
   1a834:	int3   
   1a835:	int3   
   1a836:	jmp    DWORD PTR ds:0x1ba58
   1a83c:	int3   
   1a83d:	int3   
   1a83e:	int3   
   1a83f:	int3   
   1a840:	int3   
   1a841:	int3   
   1a842:	jmp    DWORD PTR ds:0x1ba80
   1a848:	int3   
   1a849:	int3   
   1a84a:	int3   
   1a84b:	int3   
   1a84c:	int3   
   1a84d:	int3   
   1a84e:	jmp    DWORD PTR ds:0x1ba88
   1a854:	int3   
   1a855:	int3   
   1a856:	int3   
   1a857:	int3   
   1a858:	int3   
   1a859:	int3   
   1a85a:	jmp    DWORD PTR ds:0x1ba90
   1a860:	int3   
   1a861:	int3   
   1a862:	int3   
   1a863:	int3   
   1a864:	int3   
   1a865:	int3   
   1a866:	jmp    DWORD PTR ds:0x1ba94
   1a86c:	int3   
   1a86d:	int3   
   1a86e:	int3   
   1a86f:	int3   
   1a870:	int3   
   1a871:	int3   
   1a872:	int3   
   1a873:	int3   
   1a874:	push   0x1a8e0
   1a879:	push   DWORD PTR fs:0x0
   1a880:	mov    eax,DWORD PTR [esp+0x10]
   1a884:	mov    DWORD PTR [esp+0x10],ebp
   1a888:	lea    ebp,[esp+0x10]
   1a88c:	sub    esp,eax
   1a88e:	push   ebx
   1a88f:	push   esi
   1a890:	push   edi
   1a891:	mov    eax,ds:0x70418
   1a896:	xor    DWORD PTR [ebp-0x4],eax
   1a899:	xor    eax,ebp
   1a89b:	push   eax
   1a89c:	mov    DWORD PTR [ebp-0x18],esp
   1a89f:	push   DWORD PTR [ebp-0x8]
   1a8a2:	mov    eax,DWORD PTR [ebp-0x4]
   1a8a5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1a8ac:	mov    DWORD PTR [ebp-0x8],eax
   1a8af:	lea    eax,[ebp-0x10]
   1a8b2:	mov    fs:0x0,eax
   1a8b8:	ret    
   1a8b9:	mov    ecx,DWORD PTR [ebp-0x10]
   1a8bc:	mov    DWORD PTR fs:0x0,ecx
   1a8c3:	pop    ecx
   1a8c4:	pop    edi
   1a8c5:	pop    edi
   1a8c6:	pop    esi
   1a8c7:	pop    ebx
   1a8c8:	mov    esp,ebp
   1a8ca:	pop    ebp
   1a8cb:	push   ecx
   1a8cc:	ret    
   1a8cd:	int3   
   1a8ce:	int3   
   1a8cf:	int3   
   1a8d0:	int3   
   1a8d1:	int3   
   1a8d2:	int3   
   1a8d3:	int3   
   1a8d4:	int3   
   1a8d5:	int3   
   1a8d6:	int3   
   1a8d7:	int3   
   1a8d8:	int3   
   1a8d9:	int3   
   1a8da:	int3   
   1a8db:	int3   
   1a8dc:	int3   
   1a8dd:	int3   
   1a8de:	int3   
   1a8df:	int3   
   1a8e0:	mov    edi,edi
   1a8e2:	push   ebp
   1a8e3:	mov    ebp,esp
   1a8e5:	sub    esp,0x14
   1a8e8:	push   ebx
   1a8e9:	mov    ebx,DWORD PTR [ebp+0xc]
   1a8ec:	push   esi
   1a8ed:	mov    esi,DWORD PTR [ebx+0x8]
   1a8f0:	xor    esi,DWORD PTR ds:0x70418
   1a8f6:	push   edi
   1a8f7:	mov    eax,DWORD PTR [esi]
   1a8f9:	mov    BYTE PTR [ebp-0x1],0x0
   1a8fd:	mov    DWORD PTR [ebp-0x8],0x1
   1a904:	lea    edi,[ebx+0x10]
   1a907:	cmp    eax,0xfffffffe
   1a90a:	je     0x1a919
   1a90c:	mov    ecx,DWORD PTR [esi+0x4]
   1a90f:	add    ecx,edi
   1a911:	xor    ecx,DWORD PTR [eax+edi*1]
   1a914:	call   0x1a7c5
   1a919:	mov    ecx,DWORD PTR [esi+0xc]
   1a91c:	mov    eax,DWORD PTR [esi+0x8]
   1a91f:	add    ecx,edi
   1a921:	xor    ecx,DWORD PTR [eax+edi*1]
   1a924:	call   0x1a7c5
   1a929:	mov    eax,DWORD PTR [ebp+0x8]
   1a92c:	test   BYTE PTR [eax+0x4],0x66
   1a930:	jne    0x1aa18
   1a936:	mov    ecx,DWORD PTR [ebp+0x10]
   1a939:	lea    edx,[ebp-0x14]
   1a93c:	mov    DWORD PTR [ebx-0x4],edx
   1a93f:	mov    ebx,DWORD PTR [ebx+0xc]
   1a942:	mov    DWORD PTR [ebp-0x14],eax
   1a945:	mov    DWORD PTR [ebp-0x10],ecx
   1a948:	cmp    ebx,0xfffffffe
   1a94b:	je     0x1a9ac
   1a94d:	lea    ecx,[ecx+0x0]
   1a950:	lea    eax,[ebx+ebx*2]
   1a953:	mov    ecx,DWORD PTR [esi+eax*4+0x14]
   1a957:	lea    eax,[esi+eax*4+0x10]
   1a95b:	mov    DWORD PTR [ebp-0xc],eax
   1a95e:	mov    eax,DWORD PTR [eax]
   1a960:	mov    DWORD PTR [ebp+0x8],eax
   1a963:	test   ecx,ecx
   1a965:	je     0x1a97b
   1a967:	mov    edx,edi
   1a969:	call   0x1ab21
   1a96e:	mov    BYTE PTR [ebp-0x1],0x1
   1a972:	test   eax,eax
   1a974:	jl     0x1a9b6
   1a976:	jg     0x1a9bf
   1a978:	mov    eax,DWORD PTR [ebp+0x8]
   1a97b:	mov    ebx,eax
   1a97d:	cmp    eax,0xfffffffe
   1a980:	jne    0x1a950
   1a982:	cmp    BYTE PTR [ebp-0x1],0x0
   1a986:	je     0x1a9ac
   1a988:	mov    eax,DWORD PTR [esi]
   1a98a:	cmp    eax,0xfffffffe
   1a98d:	je     0x1a99c
   1a98f:	mov    ecx,DWORD PTR [esi+0x4]
   1a992:	add    ecx,edi
   1a994:	xor    ecx,DWORD PTR [eax+edi*1]
   1a997:	call   0x1a7c5
   1a99c:	mov    ecx,DWORD PTR [esi+0xc]
   1a99f:	mov    edx,DWORD PTR [esi+0x8]
   1a9a2:	add    ecx,edi
   1a9a4:	xor    ecx,DWORD PTR [edx+edi*1]
   1a9a7:	call   0x1a7c5
   1a9ac:	mov    eax,DWORD PTR [ebp-0x8]
   1a9af:	pop    edi
   1a9b0:	pop    esi
   1a9b1:	pop    ebx
   1a9b2:	mov    esp,ebp
   1a9b4:	pop    ebp
   1a9b5:	ret    
   1a9b6:	mov    DWORD PTR [ebp-0x8],0x0
   1a9bd:	jmp    0x1a988
   1a9bf:	mov    ecx,DWORD PTR [ebp+0xc]
   1a9c2:	call   0x1ab4a
   1a9c7:	mov    eax,DWORD PTR [ebp+0xc]
   1a9ca:	cmp    DWORD PTR [eax+0xc],ebx
   1a9cd:	je     0x1a9e1
   1a9cf:	push   0x70418
   1a9d4:	push   edi
   1a9d5:	mov    edx,ebx
   1a9d7:	mov    ecx,eax
   1a9d9:	call   0x1ab64
   1a9de:	mov    eax,DWORD PTR [ebp+0xc]
   1a9e1:	mov    ecx,DWORD PTR [ebp+0x8]
   1a9e4:	mov    DWORD PTR [eax+0xc],ecx
   1a9e7:	mov    eax,DWORD PTR [esi]
   1a9e9:	cmp    eax,0xfffffffe
   1a9ec:	je     0x1a9fb
   1a9ee:	mov    ecx,DWORD PTR [esi+0x4]
   1a9f1:	add    ecx,edi
   1a9f3:	xor    ecx,DWORD PTR [eax+edi*1]
   1a9f6:	call   0x1a7c5
   1a9fb:	mov    ecx,DWORD PTR [esi+0xc]
   1a9fe:	mov    edx,DWORD PTR [esi+0x8]
   1aa01:	add    ecx,edi
   1aa03:	xor    ecx,DWORD PTR [edx+edi*1]
   1aa06:	call   0x1a7c5
   1aa0b:	mov    eax,DWORD PTR [ebp-0xc]
   1aa0e:	mov    ecx,DWORD PTR [eax+0x8]
   1aa11:	mov    edx,edi
   1aa13:	call   0x1ab38
   1aa18:	mov    edx,0xfffffffe
   1aa1d:	cmp    DWORD PTR [ebx+0xc],edx
   1aa20:	je     0x1a9ac
   1aa22:	push   0x70418
   1aa27:	push   edi
   1aa28:	mov    ecx,ebx
   1aa2a:	call   0x1ab64
   1aa2f:	jmp    0x1a988
   1aa34:	int3   
   1aa35:	int3   
   1aa36:	int3   
   1aa37:	int3   
   1aa38:	int3   
   1aa39:	int3   
   1aa3a:	int3   
   1aa3b:	int3   
   1aa3c:	push   ebx
   1aa3d:	push   esi
   1aa3e:	push   edi
   1aa3f:	mov    edx,DWORD PTR [esp+0x10]
   1aa43:	mov    eax,DWORD PTR [esp+0x14]
   1aa47:	mov    ecx,DWORD PTR [esp+0x18]
   1aa4b:	push   ebp
   1aa4c:	push   edx
   1aa4d:	push   eax
   1aa4e:	push   ecx
   1aa4f:	push   ecx
   1aa50:	push   0x1aabf
   1aa55:	push   DWORD PTR fs:0x0
   1aa5c:	mov    eax,ds:0x70418
   1aa61:	xor    eax,esp
   1aa63:	mov    DWORD PTR [esp+0x8],eax
   1aa67:	mov    DWORD PTR fs:0x0,esp
   1aa6e:	mov    eax,DWORD PTR [esp+0x30]
   1aa72:	mov    ebx,DWORD PTR [eax+0x8]
   1aa75:	mov    ecx,DWORD PTR [esp+0x2c]
   1aa79:	xor    ebx,DWORD PTR [ecx]
   1aa7b:	mov    esi,DWORD PTR [eax+0xc]
   1aa7e:	cmp    esi,0xfffffffe
   1aa81:	je     0x1aab1
   1aa83:	mov    edx,DWORD PTR [esp+0x34]
   1aa87:	cmp    edx,0xfffffffe
   1aa8a:	je     0x1aa90
   1aa8c:	cmp    esi,edx
   1aa8e:	jbe    0x1aab1
   1aa90:	lea    esi,[esi+esi*2]
   1aa93:	lea    ebx,[ebx+esi*4+0x10]
   1aa97:	mov    ecx,DWORD PTR [ebx]
   1aa99:	mov    DWORD PTR [eax+0xc],ecx
   1aa9c:	cmp    DWORD PTR [ebx+0x4],0x0
   1aaa0:	jne    0x1aa6e
   1aaa2:	mov    ecx,0x1
   1aaa7:	mov    eax,DWORD PTR [ebx+0x8]
   1aaaa:	call   0x1abdc
   1aaaf:	jmp    0x1aa6e
   1aab1:	pop    DWORD PTR fs:0x0
   1aab8:	add    esp,0x18
   1aabb:	pop    edi
   1aabc:	pop    esi
   1aabd:	pop    ebx
   1aabe:	ret    
   1aabf:	mov    ecx,DWORD PTR [esp+0x4]
   1aac3:	test   DWORD PTR [ecx+0x4],0x6
   1aaca:	mov    eax,0x1
   1aacf:	je     0x1ab04
   1aad1:	mov    eax,DWORD PTR [esp+0x8]
   1aad5:	mov    ecx,DWORD PTR [eax+0x8]
   1aad8:	xor    ecx,eax
   1aada:	call   0x1a7c5
   1aadf:	push   ebp
   1aae0:	mov    ebp,DWORD PTR [eax+0x18]
   1aae3:	push   DWORD PTR [eax+0xc]
   1aae6:	push   DWORD PTR [eax+0x10]
   1aae9:	push   DWORD PTR [eax+0x14]
   1aaec:	call   0x1aa3c
   1aaf1:	add    esp,0xc
   1aaf4:	pop    ebp
   1aaf5:	mov    eax,DWORD PTR [esp+0x8]
   1aaf9:	mov    edx,DWORD PTR [esp+0x10]
   1aafd:	mov    DWORD PTR [edx],eax
   1aaff:	mov    eax,0x3
   1ab04:	ret    
   1ab05:	push   ebp
   1ab06:	mov    ecx,DWORD PTR [esp+0x8]
   1ab0a:	mov    ebp,DWORD PTR [ecx]
   1ab0c:	push   DWORD PTR [ecx+0x1c]
   1ab0f:	push   DWORD PTR [ecx+0x18]
   1ab12:	push   DWORD PTR [ecx+0x28]
   1ab15:	call   0x1aa3c
   1ab1a:	add    esp,0xc
   1ab1d:	pop    ebp
   1ab1e:	ret    0x4
   1ab21:	push   ebp
   1ab22:	push   esi
   1ab23:	push   edi
   1ab24:	push   ebx
   1ab25:	mov    ebp,edx
   1ab27:	xor    eax,eax
   1ab29:	xor    ebx,ebx
   1ab2b:	xor    edx,edx
   1ab2d:	xor    esi,esi
   1ab2f:	xor    edi,edi
   1ab31:	call   ecx
   1ab33:	pop    ebx
   1ab34:	pop    edi
   1ab35:	pop    esi
   1ab36:	pop    ebp
   1ab37:	ret    
   1ab38:	mov    ebp,edx
   1ab3a:	mov    esi,ecx
   1ab3c:	mov    eax,ecx
   1ab3e:	xor    eax,eax
   1ab40:	xor    ebx,ebx
   1ab42:	xor    ecx,ecx
   1ab44:	xor    edx,edx
   1ab46:	xor    edi,edi
   1ab48:	jmp    esi
   1ab4a:	push   ebp
   1ab4b:	mov    ebp,esp
   1ab4d:	push   ebx
   1ab4e:	push   esi
   1ab4f:	push   edi
   1ab50:	push   0x0
   1ab52:	push   0x0
   1ab54:	push   0x1ab5f
   1ab59:	push   ecx
   1ab5a:	call   0x1abe4
   1ab5f:	pop    edi
   1ab60:	pop    esi
   1ab61:	pop    ebx
   1ab62:	pop    ebp
   1ab63:	ret    
   1ab64:	push   ebp
   1ab65:	mov    ebp,DWORD PTR [esp+0x8]
   1ab69:	push   edx
   1ab6a:	push   ecx
   1ab6b:	push   DWORD PTR [esp+0x14]
   1ab6f:	call   0x1aa3c
   1ab74:	add    esp,0xc
   1ab77:	pop    ebp
   1ab78:	ret    0x8
   1ab7b:	int3   
   1ab7c:	int3   
   1ab7d:	int3   
   1ab7e:	int3   
   1ab7f:	int3   
   1ab80:	push   0x1a8e0
   1ab85:	push   DWORD PTR fs:0x0
   1ab8c:	mov    eax,DWORD PTR [esp+0x10]
   1ab90:	mov    DWORD PTR [esp+0x10],ebp
   1ab94:	lea    ebp,[esp+0x10]
   1ab98:	sub    esp,eax
   1ab9a:	push   ebx
   1ab9b:	push   esi
   1ab9c:	push   edi
   1ab9d:	mov    eax,ds:0x70418
   1aba2:	xor    DWORD PTR [ebp-0x4],eax
   1aba5:	xor    eax,ebp
   1aba7:	mov    DWORD PTR [ebp-0x1c],eax
   1abaa:	push   eax
   1abab:	mov    DWORD PTR [ebp-0x18],esp
   1abae:	push   DWORD PTR [ebp-0x8]
   1abb1:	mov    eax,DWORD PTR [ebp-0x4]
   1abb4:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1abbb:	mov    DWORD PTR [ebp-0x8],eax
   1abbe:	lea    eax,[ebp-0x10]
   1abc1:	mov    fs:0x0,eax
   1abc7:	ret    
   1abc8:	mov    ecx,DWORD PTR [ebp-0x1c]
   1abcb:	xor    ecx,ebp
   1abcd:	call   0x1a7c5
   1abd2:	jmp    0x1a8b9
   1abd7:	int3   
   1abd8:	int3   
   1abd9:	int3   
   1abda:	int3   
   1abdb:	int3   
   1abdc:	call   eax
   1abde:	ret    
   1abdf:	int3   
   1abe0:	int3   
   1abe1:	int3   
   1abe2:	int3   
   1abe3:	int3   
   1abe4:	jmp    DWORD PTR ds:0x1bab8
   1abea:	pop    esp
   1abeb:	add    BYTE PTR [eax],al
   1abed:	add    BYTE PTR [eax],al
   1abef:	add    BYTE PTR [ebx+0x0],ch
   1abf2:	bound  eax,QWORD PTR [eax]
   1abf4:	add    BYTE PTR fs:[ecx+0x0],dh
   1abf8:	add    BYTE PTR [eax],al
   1abfa:	add    BYTE PTR fs:[ebx],dh
   1abfd:	add    BYTE PTR [eax+eax*1+0x73],ah
   1ac01:	add    BYTE PTR [eax],al
   1ac03:	add    BYTE PTR [esi+0x0],ch
   1ac06:	je     0x1ac08
   1ac08:	outs   dx,BYTE PTR ds:[esi]
   1ac09:	add    BYTE PTR [eax],al
   1ac0b:	add    BYTE PTR [ebx+0x0],dh
   1ac0e:	jns    0x1ac10
   1ac10:	jae    0x1ac12
   1ac12:	popa   
   1ac13:	add    BYTE PTR [eax],al
   1ac15:	add    BYTE PTR [edi+0x0],dh
   1ac18:	imul   eax,DWORD PTR [eax],0x65006e
   1ac1e:	add    BYTE PTR [eax],al
   1ac20:	jo     0x1ac22
   1ac22:	arpl   WORD PTR [eax],ax
   1ac24:	imul   eax,DWORD PTR [eax],0x6d0000
   1ac2a:	jae    0x1ac2c
   1ac2c:	jb     0x1ac2e
   1ac2e:	add    BYTE PTR [eax],al
   1ac30:	je     0x1ac32
   1ac32:	ins    DWORD PTR es:[edi],dx
   1ac33:	add    BYTE PTR [eax+0x0],dh
   1ac36:	add    BYTE PTR [eax],al
   1ac38:	jne    0x1ac3a
   1ac3a:	jae    0x1ac3c
   1ac3c:	bound  eax,QWORD PTR [eax]
   1ac3e:	add    BYTE PTR [eax],al
   1ac40:	outs   dx,DWORD PTR ds:[esi]
   1ac41:	add    BYTE PTR [eax+eax*1+0x65],ch
   1ac45:	add    BYTE PTR [eax],al
   1ac47:	add    BYTE PTR [ecx+0x0],ah
   1ac4a:	imul   eax,DWORD PTR [eax],0x70
   1ac50:	push   0x0
   1ac52:	popa   
   1ac53:	add    BYTE PTR [ecx+0x0],bh
   1ac56:	add    BYTE PTR [eax],al
   1ac58:	jbe    0x1ac5a
   1ac5a:	add    BYTE PTR gs:[edx+0x0],dh
   1ac5e:	add    BYTE PTR [eax],al
   1ac60:	jae    0x1ac62
   1ac62:	popa   
   1ac63:	add    BYTE PTR [ecx+0x0],ch
   1ac66:	add    BYTE PTR [eax],al
   1ac68:	ins    BYTE PTR es:[edi],dx
   1ac69:	add    BYTE PTR [ecx+0x0],ah
   1ac6c:	arpl   WORD PTR [eax],ax
   1ac6e:	add    BYTE PTR [eax],al
   1ac70:	push   0x0
   1ac72:	jo     0x1ac74
   1ac74:	add    BYTE PTR [bx+si],al
   1ac77:	add    BYTE PTR [eax+0x0],ch
   1ac7a:	imul   eax,DWORD PTR [eax],0x64
   1ac80:	jo     0x1ac82
   1ac82:	outs   dx,BYTE PTR ds:[esi]
   1ac83:	add    BYTE PTR [edi+0x0],ah
   1ac86:	add    BYTE PTR [eax],al
   1ac88:	add    ah,cl
   1ac8a:	dec    ebx
   1ac8b:	add    BYTE PTR [ebp+0x0],ah
   1ac8e:	push   ebx
   1ac8f:	add    BYTE PTR [ebp+0x0],ah
   1ac92:	jb     0x1ac94
   1ac94:	jbe    0x1ac96
   1ac96:	imul   eax,DWORD PTR [eax],0x650063
   1ac9c:	inc    esp
   1ac9d:	add    BYTE PTR [ebp+0x0],ah
   1aca0:	jae    0x1aca2
   1aca2:	arpl   WORD PTR [eax],ax
   1aca4:	jb     0x1aca6
   1aca6:	imul   eax,DWORD PTR [eax],0x740070
   1acac:	outs   dx,DWORD PTR ds:[esi]
   1acad:	add    BYTE PTR [edx+0x0],dh
   1acb0:	push   esp
   1acb1:	add    BYTE PTR [ecx+0x0],ah
   1acb4:	bound  eax,QWORD PTR [eax]
   1acb6:	ins    BYTE PTR es:[edi],dx
   1acb7:	add    BYTE PTR [ebp+0x0],ah
   1acba:	add    BYTE PTR [eax],al
   1acbc:	pop    edx
   1acbd:	add    BYTE PTR [edi+0x0],dh
   1acc0:	dec    edi
   1acc1:	add    BYTE PTR [eax+0x0],dh
   1acc4:	add    BYTE PTR gs:[esi+0x0],ch
   1acc8:	push   eax
   1acc9:	add    BYTE PTR [edx+0x0],dh
   1accc:	outs   dx,DWORD PTR ds:[esi]
   1accd:	add    BYTE PTR [ebx+0x0],ah
   1acd0:	add    BYTE PTR gs:[ebx+0x0],dh
   1acd4:	jae    0x1acd6
   1acd6:	add    BYTE PTR [eax],al
   1acd8:	pop    edx
   1acd9:	add    BYTE PTR [edi+0x0],dh
   1acdc:	inc    ecx
   1acdd:	add    BYTE PTR [eax+eax*1+0x6c],ch
   1ace1:	add    BYTE PTR [edi+0x0],ch
   1ace4:	arpl   WORD PTR [eax],ax
   1ace6:	popa   
   1ace7:	add    BYTE PTR [eax+eax*1+0x65],dh
   1aceb:	add    BYTE PTR [esi+0x0],dl
   1acee:	imul   eax,DWORD PTR [eax],0x740072
   1acf4:	jne    0x1acf6
   1acf6:	popa   
   1acf7:	add    BYTE PTR [eax+eax*1+0x4d],ch
   1acfb:	add    BYTE PTR [ebp+0x0],ah
   1acfe:	ins    DWORD PTR es:[edi],dx
   1acff:	add    BYTE PTR [edi+0x0],ch
   1ad02:	jb     0x1ad04
   1ad04:	jns    0x1ad06
   1ad06:	add    BYTE PTR [eax],al
   1ad08:	push   eax
   1ad09:	add    BYTE PTR [ebx+0x0],dh
   1ad0c:	dec    esp
   1ad0d:	add    BYTE PTR [edi+0x0],ch
   1ad10:	outs   dx,DWORD PTR ds:[esi]
   1ad11:	add    BYTE PTR [ebx+0x0],ch
   1ad14:	jne    0x1ad16
   1ad16:	jo     0x1ad18
   1ad18:	push   eax
   1ad19:	add    BYTE PTR [edx+0x0],dh
   1ad1c:	outs   dx,DWORD PTR ds:[esi]
   1ad1d:	add    BYTE PTR [ebx+0x0],ah
   1ad20:	add    BYTE PTR gs:[ebx+0x0],dh
   1ad24:	jae    0x1ad26
   1ad26:	inc    edx
   1ad27:	add    BYTE PTR [ecx+0x0],bh
   1ad2a:	push   eax
   1ad2b:	add    BYTE PTR [edx+0x0],dh
   1ad2e:	outs   dx,DWORD PTR ds:[esi]
   1ad2f:	add    BYTE PTR [ebx+0x0],ah
   1ad32:	add    BYTE PTR gs:[ebx+0x0],dh
   1ad36:	jae    0x1ad38
   1ad38:	dec    ecx
   1ad39:	add    BYTE PTR [eax+eax*1+0x0],ah
   1ad3d:	add    BYTE PTR [eax+0x0],dl
   1ad40:	jae    0x1ad42
   1ad42:	push   ebx
   1ad43:	add    BYTE PTR [ebp+0x0],ah
   1ad46:	je     0x1ad48
   1ad48:	dec    esp
   1ad49:	add    BYTE PTR [edi+0x0],ch
   1ad4c:	popa   
   1ad4d:	add    BYTE PTR [eax+eax*1+0x49],ah
   1ad51:	add    BYTE PTR [ebp+0x0],ch
   1ad54:	popa   
   1ad55:	add    BYTE PTR [edi+0x0],ah
   1ad58:	add    BYTE PTR gs:[esi+0x0],cl
   1ad5c:	outs   dx,DWORD PTR ds:[esi]
   1ad5d:	add    BYTE PTR [eax+eax*1+0x69],dh
   1ad61:	add    BYTE PTR [esi+0x0],ah
   1ad64:	jns    0x1ad66
   1ad66:	push   edx
   1ad67:	add    BYTE PTR [edi+0x0],ch
   1ad6a:	jne    0x1ad6c
   1ad6c:	je     0x1ad6e
   1ad6e:	imul   eax,DWORD PTR [eax],0x65006e
   1ad74:	add    BYTE PTR [eax],al
   1ad76:	push   edx
   1ad77:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1ad7b:	add    BYTE PTR [ecx+0x0],cl
   1ad7e:	ins    DWORD PTR es:[edi],dx
   1ad7f:	add    BYTE PTR [ecx+0x0],ah
   1ad82:	add    BYTE PTR [di+0x0],ah
   1ad86:	inc    esp
   1ad87:	add    BYTE PTR [ecx+0x0],ch
   1ad8a:	jb     0x1ad8c
   1ad8c:	add    BYTE PTR gs:[ebx+0x0],ah
   1ad90:	je     0x1ad92
   1ad92:	outs   dx,DWORD PTR ds:[esi]
   1ad93:	add    BYTE PTR [edx+0x0],dh
   1ad96:	jns    0x1ad98
   1ad98:	inc    ebp
   1ad99:	add    BYTE PTR [esi+0x0],ch
   1ad9c:	je     0x1ad9e
   1ad9e:	jb     0x1ada0
   1ada0:	jns    0x1ada2
   1ada2:	push   esp
   1ada3:	add    BYTE PTR [edi+0x0],ch
   1ada6:	inc    esp
   1ada7:	add    BYTE PTR [ecx+0x0],ah
   1adaa:	je     0x1adac
   1adac:	popa   
   1adad:	add    BYTE PTR [eax],al
   1adaf:	add    BYTE PTR [edx+0x0],bl
   1adb2:	ja     0x1adb4
   1adb4:	dec    edi
   1adb5:	add    BYTE PTR [eax+0x0],dh
   1adb8:	add    BYTE PTR gs:[esi+0x0],ch
   1adbc:	push   eax
   1adbd:	add    BYTE PTR [edx+0x0],dh
   1adc0:	outs   dx,DWORD PTR ds:[esi]
   1adc1:	add    BYTE PTR [ebx+0x0],ah
   1adc4:	add    BYTE PTR gs:[ebx+0x0],dh
   1adc8:	jae    0x1adca
   1adca:	push   esp
   1adcb:	add    BYTE PTR [edi+0x0],ch
   1adce:	imul   eax,DWORD PTR [eax],0x65
   1add1:	add    BYTE PTR [esi+0x0],ch
   1add4:	add    BYTE PTR [eax],al
   1add6:	pop    edx
   1add7:	add    BYTE PTR [edi+0x0],dh
   1adda:	inc    esp
   1addb:	add    BYTE PTR [ebp+0x0],dh
   1adde:	jo     0x1ade0
   1ade0:	ins    BYTE PTR es:[edi],dx
   1ade1:	add    BYTE PTR [ecx+0x0],ch
   1ade4:	arpl   WORD PTR [eax],ax
   1ade6:	popa   
   1ade7:	add    BYTE PTR [eax+eax*1+0x65],dh
   1adeb:	add    BYTE PTR [eax+eax*1+0x6f],dl
   1adef:	add    BYTE PTR [ebx+0x0],ch
   1adf2:	add    BYTE PTR gs:[esi+0x0],ch
   1adf6:	add    BYTE PTR [eax],al
   1adf8:	pop    edx
   1adf9:	add    BYTE PTR [edi+0x0],dh
   1adfc:	push   ebx
   1adfd:	add    BYTE PTR [ebp+0x0],ah
   1ae00:	je     0x1ae02
   1ae02:	dec    ecx
   1ae03:	add    BYTE PTR [esi+0x0],ch
   1ae06:	data16 add BYTE PTR [edi+0x0],ch
   1ae0a:	jb     0x1ae0c
   1ae0c:	ins    DWORD PTR es:[edi],dx
   1ae0d:	add    BYTE PTR [ecx+0x0],ah
   1ae10:	je     0x1ae12
   1ae12:	imul   eax,DWORD PTR [eax],0x6e006f
   1ae18:	push   eax
   1ae19:	add    BYTE PTR [edx+0x0],dh
   1ae1c:	outs   dx,DWORD PTR ds:[esi]
   1ae1d:	add    BYTE PTR [ebx+0x0],ah
   1ae20:	add    BYTE PTR gs:[ebx+0x0],dh
   1ae24:	jae    0x1ae26
   1ae26:	add    BYTE PTR [eax],al
   1ae28:	pop    edx
   1ae29:	add    BYTE PTR [edi+0x0],dh
   1ae2c:	push   ecx
   1ae2d:	add    BYTE PTR [ebp+0x0],dh
   1ae30:	add    BYTE PTR gs:[edx+0x0],dh
   1ae34:	jns    0x1ae36
   1ae36:	dec    ecx
   1ae37:	add    BYTE PTR [esi+0x0],ch
   1ae3a:	data16 add BYTE PTR [edi+0x0],ch
   1ae3e:	jb     0x1ae40
   1ae40:	ins    DWORD PTR es:[edi],dx
   1ae41:	add    BYTE PTR [ecx+0x0],ah
   1ae44:	je     0x1ae46
   1ae46:	imul   eax,DWORD PTR [eax],0x6e006f
   1ae4c:	push   esp
   1ae4d:	add    BYTE PTR [eax+0x0],ch
   1ae50:	jb     0x1ae52
   1ae52:	add    BYTE PTR gs:[ecx+0x0],ah
   1ae56:	add    BYTE PTR fs:[eax],al
   1ae59:	add    BYTE PTR [eax+0x0],dl
   1ae5c:	jae    0x1ae5e
   1ae5e:	push   ebx
   1ae5f:	add    BYTE PTR [ebp+0x0],ah
   1ae62:	je     0x1ae64
   1ae64:	inc    ebx
   1ae65:	add    BYTE PTR [edx+0x0],dh
   1ae68:	add    BYTE PTR gs:[ecx+0x0],ah
   1ae6c:	je     0x1ae6e
   1ae6e:	add    BYTE PTR gs:[eax+0x0],dl
   1ae72:	jb     0x1ae74
   1ae74:	outs   dx,DWORD PTR ds:[esi]
   1ae75:	add    BYTE PTR [ebx+0x0],ah
   1ae78:	add    BYTE PTR gs:[ebx+0x0],dh
   1ae7c:	jae    0x1ae7e
   1ae7e:	dec    esi
   1ae7f:	add    BYTE PTR [edi+0x0],ch
   1ae82:	je     0x1ae84
   1ae84:	imul   eax,DWORD PTR [eax],0x790066
   1ae8a:	push   edx
   1ae8b:	add    BYTE PTR [edi+0x0],ch
   1ae8e:	jne    0x1ae90
   1ae90:	je     0x1ae92
   1ae92:	imul   eax,DWORD PTR [eax],0x65006e
   1ae98:	add    BYTE PTR [eax],al
   1ae9a:	pop    edx
   1ae9b:	add    BYTE PTR [edi+0x0],dh
   1ae9e:	dec    edi
   1ae9f:	add    BYTE PTR [eax+0x0],dh
   1aea2:	add    BYTE PTR gs:[esi+0x0],ch
   1aea6:	inc    esi
   1aea7:	add    BYTE PTR [ecx+0x0],ch
   1aeaa:	ins    BYTE PTR es:[edi],dx
   1aeab:	add    BYTE PTR [ebp+0x0],ah
   1aeae:	add    BYTE PTR [eax],al
   1aeb0:	pop    edx
   1aeb1:	add    BYTE PTR [edi+0x0],dh
   1aeb4:	push   ecx
   1aeb5:	add    BYTE PTR [ebp+0x0],dh
   1aeb8:	add    BYTE PTR gs:[edx+0x0],dh
   1aebc:	jns    0x1aebe
   1aebe:	dec    ecx
   1aebf:	add    BYTE PTR [esi+0x0],ch
   1aec2:	data16 add BYTE PTR [edi+0x0],ch
   1aec6:	jb     0x1aec8
   1aec8:	ins    DWORD PTR es:[edi],dx
   1aec9:	add    BYTE PTR [ecx+0x0],ah
   1aecc:	je     0x1aece
   1aece:	imul   eax,DWORD PTR [eax],0x6e006f
   1aed4:	push   eax
   1aed5:	add    BYTE PTR [edx+0x0],dh
   1aed8:	outs   dx,DWORD PTR ds:[esi]
   1aed9:	add    BYTE PTR [ebx+0x0],ah
   1aedc:	add    BYTE PTR gs:[ebx+0x0],dh
   1aee0:	jae    0x1aee2
   1aee2:	add    BYTE PTR [eax],al
   1aee4:	pop    edx
   1aee5:	add    BYTE PTR [edi+0x0],dh
   1aee8:	push   ecx
   1aee9:	add    BYTE PTR [ebp+0x0],dh
   1aeec:	add    BYTE PTR gs:[edx+0x0],dh
   1aef0:	jns    0x1aef2
   1aef2:	push   ebx
   1aef3:	add    BYTE PTR [ecx+0x0],bh
   1aef6:	jae    0x1aef8
   1aef8:	je     0x1aefa
   1aefa:	add    BYTE PTR gs:[ebp+0x0],ch
   1aefe:	dec    ecx
   1aeff:	add    BYTE PTR [esi+0x0],ch
   1af02:	data16 add BYTE PTR [edi+0x0],ch
   1af06:	jb     0x1af08
   1af08:	ins    DWORD PTR es:[edi],dx
   1af09:	add    BYTE PTR [ecx+0x0],ah
   1af0c:	je     0x1af0e
   1af0e:	imul   eax,DWORD PTR [eax],0x6e006f
   1af14:	add    BYTE PTR [eax],al
   1af16:	pop    edx
   1af17:	add    BYTE PTR [edi+0x0],dh
   1af1a:	dec    esp
   1af1b:	add    BYTE PTR [edi+0x0],ch
   1af1e:	popa   
   1af1f:	add    BYTE PTR [eax+eax*1+0x44],ah
   1af23:	add    BYTE PTR [edx+0x0],dh
   1af26:	imul   eax,DWORD PTR [eax],0x650076
   1af2c:	jb     0x1af2e
   1af2e:	add    BYTE PTR [eax],al
   1af30:	pop    edx
   1af31:	add    BYTE PTR [edi+0x0],dh
   1af34:	dec    edi
   1af35:	add    BYTE PTR [eax+0x0],dh
   1af38:	add    BYTE PTR gs:[esi+0x0],ch
   1af3c:	dec    ebx
   1af3d:	add    BYTE PTR [ebp+0x0],ah
   1af40:	jns    0x1af42
   1af42:	add    BYTE PTR [eax],al
   1af44:	pop    edx
   1af45:	add    BYTE PTR [edi+0x0],dh
   1af48:	inc    esp
   1af49:	add    BYTE PTR [ebp+0x0],ah
   1af4c:	ins    BYTE PTR es:[edi],dx
   1af4d:	add    BYTE PTR [ebp+0x0],ah
   1af50:	je     0x1af52
   1af52:	add    BYTE PTR gs:[ebx+0x0],cl
   1af56:	add    BYTE PTR gs:[ecx+0x0],bh
   1af5a:	add    BYTE PTR [eax],al
   1af5c:	pop    edx
   1af5d:	add    BYTE PTR [edi+0x0],dh
   1af60:	push   ebx
   1af61:	add    BYTE PTR [ebp+0x0],ah
   1af64:	je     0x1af66
   1af66:	push   esi
   1af67:	add    BYTE PTR [ecx+0x0],ah
   1af6a:	ins    BYTE PTR es:[edi],dx
   1af6b:	add    BYTE PTR [ebp+0x0],dh
   1af6e:	add    BYTE PTR gs:[ebx+0x0],cl
   1af72:	add    BYTE PTR gs:[ecx+0x0],bh
   1af76:	add    BYTE PTR [eax],al
   1af78:	pop    edx
   1af79:	add    BYTE PTR [edi+0x0],dh
   1af7c:	push   ecx
   1af7d:	add    BYTE PTR [ebp+0x0],dh
   1af80:	add    BYTE PTR gs:[edx+0x0],dh
   1af84:	jns    0x1af86
   1af86:	push   esi
   1af87:	add    BYTE PTR [edi+0x0],ch
   1af8a:	ins    BYTE PTR es:[edi],dx
   1af8b:	add    BYTE PTR [ebp+0x0],dh
   1af8e:	ins    DWORD PTR es:[edi],dx
   1af8f:	add    BYTE PTR [ebp+0x0],ah
   1af92:	dec    ecx
   1af93:	add    BYTE PTR [esi+0x0],ch
   1af96:	data16 add BYTE PTR [edi+0x0],ch
   1af9a:	jb     0x1af9c
   1af9c:	ins    DWORD PTR es:[edi],dx
   1af9d:	add    BYTE PTR [ecx+0x0],ah
   1afa0:	je     0x1afa2
   1afa2:	imul   eax,DWORD PTR [eax],0x6e006f
   1afa8:	inc    esi
   1afa9:	add    BYTE PTR [ecx+0x0],ch
   1afac:	ins    BYTE PTR es:[edi],dx
   1afad:	add    BYTE PTR [ebp+0x0],ah
   1afb0:	add    BYTE PTR [eax],al
   1afb2:	pop    edx
   1afb3:	add    BYTE PTR [edi+0x0],dh
   1afb6:	inc    ebx
   1afb7:	add    BYTE PTR [edx+0x0],dh
   1afba:	add    BYTE PTR gs:[ecx+0x0],ah
   1afbe:	je     0x1afc0
   1afc0:	add    BYTE PTR gs:[esi+0x0],al
   1afc4:	imul   eax,DWORD PTR [eax],0x65006c
   1afca:	add    BYTE PTR [eax],al
   1afcc:	push   edx
   1afcd:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1afd1:	add    BYTE PTR [ecx+0x0],cl
   1afd4:	ins    DWORD PTR es:[edi],dx
   1afd5:	add    BYTE PTR [ecx+0x0],ah
   1afd8:	add    BYTE PTR [di+0x0],ah
   1afdc:	dec    esi
   1afdd:	add    BYTE PTR [eax+eax*1+0x48],dh
   1afe1:	add    BYTE PTR [ebp+0x0],ah
   1afe4:	popa   
   1afe5:	add    BYTE PTR [eax+eax*1+0x65],ah
   1afe9:	add    BYTE PTR [edx+0x0],dh
   1afec:	add    BYTE PTR [eax],al
   1afee:	push   esp
   1afef:	add    BYTE PTR ds:0x15000900,ch
   1aff5:	add    BYTE PTR [eax],al
   1aff7:	add    BYTE PTR [ebp+eiz*1-0x1486359],bl
   1affe:	ret    
   1afff:	dec    ebx
   1b000:	in     al,dx
   1b001:	push   eax
   1b002:	mov    edi,0xeb6bc16d
   1b007:	pop    eax
   1b008:	sub    al,0x6c
   1b00a:	xchg   edi,eax
   1b00b:	in     al,dx
   1b00c:	dec    esi
   1b00d:	and    al,0x7b
   1b00f:	nop
   1b010:	ins    BYTE PTR es:[edi],dx
   1b011:	sbb    al,BYTE PTR es:[edx]
   1b014:	xor    ecx,DWORD PTR [esi-0x7]
   1b017:	jle    0x1b026
   1b019:	and    ecx,DWORD PTR [ecx-0x61fb0db]
   1b01f:	jp     0x1b044
   1b021:	pop    ds
   1b022:	outs   dx,BYTE PTR ds:[esi]
   1b023:	cld    
   1b024:	jl     0x1afe3
   1b026:	test   BYTE PTR [eax],al
   1b028:	push   ebx
   1b029:	add    BYTE PTR [edi],ah
   1b02b:	add    BYTE PTR ds:0x6001300,dl
   1b031:	add    BYTE PTR [eax],al
   1b033:	add    dl,bl
   1b035:	adc    ecx,DWORD PTR [ebp+0x1624ca35]
   1b03b:	jg     0x1afe6
   1b03d:	jb     0x1afcf
   1b03f:	jnp    0x1b0a0
   1b041:	test   DWORD PTR [edi+0x20],eax
   1b044:	ins    BYTE PTR es:[edi],dx
   1b045:	mov    edi,0x73f90ec4
   1b04a:	sahf   
   1b04b:	jne    0x1b030
   1b04d:	add    BYTE PTR [ebx+esi*4+0x2a],bl
   1b051:	or     DWORD PTR [ecx-0x7b4ec08e],ebx
   1b057:	xor    DWORD PTR ds:[ecx-0x66],ebx
   1b05b:	arpl   WORD PTR [ecx],bx
   1b05d:	(bad)  
   1b05e:	sub    eax,0x7cb11036
   1b063:	xor    eax,0xe7e8b68a
   1b068:	add    ah,cl
   1b06a:	dec    ecx
   1b06b:	add    BYTE PTR [eax+eax*1],ah
   1b06e:	or     al,0x0
   1b070:	push   es
   1b071:	add    BYTE PTR [edx],al
   1b073:	add    BYTE PTR ds:0x15003100,dh
   1b079:	add    BYTE PTR [eax+eax*1],bl
   1b07c:	add    BYTE PTR [eax],al
   1b07e:	test   eax,0xfdbd6fb9
   1b083:	pusha  
   1b084:	xchg   ecx,eax
   1b085:	mov    ch,0xd8
   1b087:	cmp    al,0x93
   1b089:	lock mov esi,0x634c61a4
   1b08f:	fxam   
   1b091:	enter  0x5f66,0xc9
   1b095:	in     al,0x65
   1b097:	gs (bad) 
   1b099:	ror    DWORD PTR [eax+0x43224375],cl
   1b09f:	inc    esp
   1b0a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   1b0a1:	xchg   BYTE PTR [edi+0x5e],dl
   1b0a4:	pop    edi
   1b0a5:	jo     0x1b05b
   1b0a7:	mov    bl,BYTE PTR [edx-0xb9bec06]
   1b0ad:	jbe    0x1b0cd
   1b0af:	mov    esi,0xcc00ebfd
   1b0b4:	add    BYTE PTR cs:[edx+0x0],cl
   1b0b8:	or     BYTE PTR [eax],al
   1b0ba:	add    BYTE PTR [eax],al
   1b0bc:	add    BYTE PTR [eax],al
   1b0be:	nop
   1b0bf:	das    
   1b0c0:	fwait
   1b0c1:	out    dx,eax
   1b0c2:	jns    0x1b0c9
   1b0c4:	add    eax,0xcaddfa35
   1b0c9:	add    DWORD PTR [eax-0xe06fba9],ecx
   1b0cf:	imul   eax,DWORD PTR [edi],0xbab5f63a
   1b0d5:	xlat   BYTE PTR ds:[ebx]
   1b0d6:	or     eax,0xa6b3eb9e
   1b0db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   1b0dc:	push   es
   1b0dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1b0de:	aas    
   1b0df:	hlt    
   1b0e0:	xchg   DWORD PTR [ebp+0x7d],edi
   1b0e3:	cmp    bl,BYTE PTR ds:0xb517b76b
   1b0e9:	add    BYTE PTR [esi],al
   1b0eb:	jbe    0x1b0e9
   1b0ed:	push   cs
   1b0ee:	xor    al,0xa0
   1b0f0:	fyl2xp1 
   1b0f2:	aas    
   1b0f3:	mov    ah,0xc6
   1b0f5:	scas   eax,DWORD PTR es:[edi]
   1b0f6:	pushf  
   1b0f7:	and    DWORD PTR [esi],edx
   1b0f9:	aas    
   1b0fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1b0fb:	mov    ch,0x13
   1b0fd:	add    BYTE PTR [esi+0x0],ch
   1b100:	sbb    al,BYTE PTR [eax]
   1b102:	adc    BYTE PTR [eax],al
   1b104:	or     BYTE PTR [eax],al
   1b106:	add    BYTE PTR [eax],al
   1b108:	inc    edx
   1b109:	add    BYTE PTR [edx+0x0],cl
   1b10c:	or     BYTE PTR [eax],al
   1b10e:	add    BYTE PTR [eax],al
   1b110:	add    BYTE PTR [eax],al
   1b112:	cmp    BYTE PTR [esi-0x4de5774b],ch
   1b118:	or     al,0x12
   1b11a:	iret   
   1b11b:	sbb    al,0xe9
   1b11d:	fwait
   1b11e:	dec    di
   1b120:	ret    0x3555
   1b123:	push   ss
   1b124:	imul   edi,DWORD PTR [edi],0x1a
   1b127:	out    0xac,al
   1b129:	scas   eax,DWORD PTR es:[edi]
   1b12a:	sub    BYTE PTR [eax-0x50],0xe5
   1b12e:	jbe    0x1b0ce
   1b130:	mov    ds:0x9835c02a,eax
   1b135:	rcr    DWORD PTR [esi+0xd],1
   1b138:	jbe    0x1b1a0
   1b13a:	and    al,0x41
   1b13c:	setns  BYTE PTR [eax+0x23]
   1b140:	inc    esp
   1b141:	add    BYTE PTR [edx+0x27],al
   1b144:	add    BYTE PTR ds:0x765dcc00,dl
   1b14a:	cwde   
   1b14b:	in     al,dx
   1b14c:	add    eax,0x703d50c2
   1b151:	das    
   1b152:	(bad)  
   1b153:	sub    DWORD PTR [edi-0x2f44642d],esi
   1b159:	js     0x1b168
   1b15b:	sub    eax,0x6ecc612a
   1b160:	xchg   ebx,eax
   1b161:	je     0x1b196
   1b163:	imul   esi,DWORD PTR [ebp+0x29],0x623e547b
   1b16a:	sbb    DWORD PTR [esi-0x54370b0b],ebp
   1b170:	mov    ds:0x6af52fc9,al
   1b175:	xor    DWORD PTR [edx+0x37],eax
   1b178:	cmp    al,0x8c
   1b17a:	fidiv  DWORD PTR [eax-0x7919a30c]
   1b180:	int    0x7e
   1b182:	add    ah,cl
   1b184:	push   ebx
   1b185:	aas    
   1b186:	or     DWORD PTR [eax],eax
   1b188:	adc    eax,0xfb5ac600
   1b18d:	push   ecx
   1b18e:	or     eax,0x2673e2a
   1b193:	dec    ecx
   1b194:	pop    esi
   1b195:	jmp    0x797a65f5
   1b19a:	test   ch,ch
   1b19c:	cdq    
   1b19d:	outs   dx,BYTE PTR ds:[esi]
   1b19e:	js     0x1b124
   1b1a0:	aas    
   1b1a1:	movnti DWORD PTR ds:[esi],esi
   1b1a5:	and    al,0xa1
   1b1a7:	pop    ds
   1b1a8:	pop    es
   1b1a9:	inc    ecx
   1b1aa:	mov    DWORD PTR [edi-0x13],0x4d8b1748
   1b1b1:	jo     0x1b15e
   1b1b3:	cmp    BYTE PTR fs:[ebp+0x7],0xd8
   1b1b8:	std    
   1b1b9:	ret    0x7151
   1b1bc:	jg     0x1b1dd
   1b1be:	xchg   DWORD PTR [ecx+0x33],esp
   1b1c1:	mov    BYTE PTR [eax],al
   1b1c3:	int3   
   1b1c4:	inc    ebx
   1b1c5:	xor    DWORD PTR [edi],edx
   1b1c7:	add    al,0x15
   1b1c9:	adc    DWORD PTR [ecx],esi
   1b1cb:	cmp    al,0x1a
   1b1cd:	pop    ss
   1b1ce:	add    al,0x5
   1b1d0:	add    ah,cl
   1b1d2:	je     0x1b23c
   1b1d4:	les    ecx,FWORD PTR [esi]
   1b1d6:	scas   al,BYTE PTR es:[edi]
   1b1d7:	sub    al,BYTE PTR ds:0xd84ab9bb
   1b1dd:	xchg   BYTE PTR [ebp+0x1f],dl
   1b1e0:	sti    
   1b1e1:	or     ah,al
   1b1e3:	popf   
   1b1e4:	pop    esp
   1b1e5:	mov    ds:0xbb3f010c,eax
   1b1ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b1eb:	arpl   cx,di
   1b1ed:	fdivr  QWORD PTR [edx-0x15]
   1b1f0:	mov    eax,ds:0x63fb81d7
   1b1f5:	xchg   BYTE PTR [eax-0x7e],al
   1b1f8:	and    esp,DWORD PTR [ebp-0x33ff8b46]
   1b1fe:	dec    esp
   1b1ff:	and    ecx,DWORD PTR [esi]
   1b201:	add    eax,0x100b2528
   1b206:	adc    edx,DWORD PTR [ebx]
   1b208:	or     edi,DWORD PTR [eax]
   1b20a:	add    ah,cl
   1b20c:	add    BYTE PTR [esi+0x1f2bd02d],cl
   1b212:	pop    edi
   1b213:	gs dec ecx
   1b215:	imul   cl
   1b217:	add    bl,BYTE PTR [edx+0x56]
   1b21a:	push   edx
   1b21b:	fistp  WORD PTR ds:0x98cdb4d7
   1b221:	jge    0x1b289
   1b223:	das    
   1b224:	jbe    0x1b29e
   1b226:	std    
   1b227:	inc    eax
   1b228:	repz (bad) 
   1b22a:	push   ebp
   1b22b:	cmp    bl,BYTE PTR [ecx]
   1b22d:	add    BYTE PTR [ebx+eiz*1+0xe],cl
   1b231:	add    eax,0x100b2528
   1b236:	adc    edx,DWORD PTR [ebx]
   1b238:	or     ebp,DWORD PTR [esi]
   1b23a:	add    ah,cl
   1b23c:	mov    WORD PTR [ebx],?
   1b23e:	lahf   
   1b23f:	int    0xd9
   1b241:	dec    ebp
   1b242:	je     0x1b203
   1b244:	pop    eax
   1b245:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   1b246:	cmp    ah,al
   1b248:	and    DWORD PTR [esi],0xa7b1925b
   1b24e:	gs jo  0x1b290
   1b251:	xor    edx,esp
   1b253:	aas    
   1b254:	xchg   edi,eax
   1b255:	jmp    0x1b1e0
   1b257:	fimul  WORD PTR [edx-0x24b02ab8]
   1b25d:	jnp    0x1b2db
   1b25f:	push   es
   1b260:	nop
   1b261:	jle    0x1b263
   1b263:	int3   
   1b264:	imul   eax,DWORD PTR [eax],0xe
   1b267:	add    BYTE PTR [edi],dl
   1b269:	add    BYTE PTR [eax+eax*1],bl
   1b26c:	or     eax,DWORD PTR [eax]
   1b26e:	or     DWORD PTR [eax],eax
   1b270:	pop    edi
   1b271:	add    BYTE PTR [ecx],al
   1b273:	add    BYTE PTR [eax+eax*1],bl
   1b276:	dec    edx
   1b277:	add    BYTE PTR [eax],cl
   1b279:	add    BYTE PTR [eax],al
   1b27b:	add    BYTE PTR [eax],al
   1b27d:	add    BYTE PTR [ecx-0xce3f4a1],bl
   1b283:	shl    BYTE PTR [esp+ebp*4+0x7342348f],cl
   1b28a:	xchg   DWORD PTR [ebp+eiz*8-0x7f747c8d],edi
   1b291:	xor    DWORD PTR [eax+edi*8+0xe9089c4],edi
   1b298:	adc    dl,BYTE PTR [esi+0x6b]
   1b29b:	cli    
   1b29c:	retf   0xed07
   1b29f:	je     0x1b227
   1b2a1:	jecxz  0x1b232
   1b2a3:	xchg   ebp,eax
   1b2a4:	or     ch,BYTE PTR [ecx]
   1b2a6:	mov    ds:0x3b8bb1ed,al
   1b2ab:	outs   dx,BYTE PTR ds:[esi]
   1b2ac:	mov    ecx,0x6ecc0088
   1b2b1:	sbb    dl,BYTE PTR [eax]
   1b2b3:	or     BYTE PTR [eax],al
   1b2b5:	inc    edx
   1b2b6:	dec    edx
   1b2b7:	or     BYTE PTR [eax],al
   1b2b9:	add    cl,al
   1b2bb:	add    bl,BYTE PTR [esi]
   1b2bd:	sub    al,0x45
   1b2bf:	xor    cl,BYTE PTR [ecx-0x59cbbcab]
   1b2c5:	and    DWORD PTR [ebp+0x62],0xbc7afe8
   1b2cc:	push   0xbff3b1c9
   1b2d1:	mov    ah,0x2
   1b2d3:	in     al,0xb4
   1b2d5:	ja     0x1b26c
   1b2d7:	test   al,0xc1
   1b2d9:	scas   al,BYTE PTR es:[edi]
   1b2da:	fdivrp st(3),st
   1b2dc:	cwde   
   1b2dd:	mov    WORD PTR [ecx-0x18199dfe],ds
   1b2e3:	out    0x82,al
   1b2e5:	arpl   WORD PTR [eax+0xf005c00],di
   1b2eb:	add    BYTE PTR [edx],ch
   1b2ed:	add    BYTE PTR [edx],cl
   1b2ef:	add    BYTE PTR [edi],al
   1b2f1:	add    BYTE PTR [ecx],dl
   1b2f3:	add    BYTE PTR [eax],cl
   1b2f5:	add    BYTE PTR [edi],bh
   1b2f7:	add    BYTE PTR ds:0x1b000000,bh
   1b2fd:	add    BYTE PTR [eax],ch
   1b2ff:	add    BYTE PTR [edi],ch
   1b301:	add    BYTE PTR [edx],cl
   1b303:	add    BYTE PTR [edx],cl
   1b305:	add    BYTE PTR [edi],al
   1b307:	add    BYTE PTR [ecx],dl
   1b309:	add    BYTE PTR [eax],cl
   1b30b:	add    BYTE PTR [esi+0x0],bl
   1b30e:	add    DWORD PTR [eax],eax
   1b310:	outs   dx,BYTE PTR ds:[esi]
   1b311:	add    BYTE PTR [eax],al
   1b313:	add    BYTE PTR [ebp+0x6b7173d8],cl
   1b319:	fstp   QWORD PTR [esi+0x5e5f7f7f]
   1b31f:	sbb    al,0x95
   1b321:	dec    DWORD PTR ds:0xfb0c5868
   1b327:	popa   
   1b328:	(bad)  
   1b329:	jne    0x1b36d
   1b32b:	sahf   
   1b32c:	sbb    bl,bh
   1b32e:	sar    edx,1
   1b330:	sbb    BYTE PTR [edi-0x6c64666d],al
   1b336:	(bad)  
   1b337:	in     al,0xd2
   1b339:	(bad)  [esi]
   1b33b:	retf   0x30a3
   1b33e:	test   eax,0xee180a03
   1b343:	in     al,dx
   1b344:	jge    0x1b303
   1b346:	push   eax
   1b347:	or     al,0xba
   1b349:	inc    eax
   1b34a:	aaa    
   1b34b:	aam    0x0
   1b34d:	int3   
   1b34e:	ficomp DWORD PTR [eax-0x6d816f53]
   1b354:	add    DWORD PTR [eax],0x7480b01a
   1b35a:	lahf   
   1b35b:	push   ebx
   1b35c:	mov    cl,0x74
   1b35e:	addr16 pop ds
   1b360:	pop    esp
   1b361:	sbb    bh,BYTE PTR [ecx-0x1e036cd2]
   1b367:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   1b368:	popf   
   1b369:	jl     0x1b314
   1b36b:	cmp    BYTE PTR ds:0x4128af,0xcc
   1b372:	mov    ecx,DWORD PTR [edi+edx*8+0x29]
   1b376:	das    
   1b377:	idiv   BYTE PTR [edi+0x3fb6edf0]
   1b37d:	push   ss
   1b37e:	mov    ebx,0x3ce5b3fd
   1b383:	and    cl,BYTE PTR [ecx+ebx*4+0x3a]
   1b387:	out    dx,eax
   1b388:	cmp    BYTE PTR [esp+esi*8+0x4d2ad0e6],dl
   1b38f:	repnz xor DWORD PTR [ebx-0x28],edx
   1b393:	in     eax,dx
   1b394:	or     eax,0x5acff1d0
   1b399:	outs   dx,DWORD PTR ds:[esi]
   1b39a:	or     DWORD PTR cs:[edi-0xf537006],ebp
   1b3a1:	in     al,0xc8
   1b3a3:	retf   0x14d1
   1b3a6:	inc    eax
   1b3a7:	and    ah,BYTE PTR [ecx]
   1b3a9:	add    BYTE PTR [esi],ch
   1b3ab:	add    BYTE PTR [ebp+0x0],bl
   1b3ae:	or     al,BYTE PTR [eax]
   1b3b0:	or     al,BYTE PTR [eax]
   1b3b2:	add    BYTE PTR [eax],al
   1b3b4:	adc    ch,bh
   1b3b6:	xor    eax,0xc7add5b3
   1b3bb:	jno    0x1b37d
   1b3bd:	inc    eax
   1b3be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   1b3bf:	lods   eax,DWORD PTR ds:[esi]
   1b3c0:	push   ds
   1b3c1:	mov    ds:0x11425d29,eax
   1b3c6:	xchg   ecx,eax
   1b3c7:	sbb    dh,bl
   1b3c9:	pop    ss
   1b3ca:	out    dx,al
   1b3cb:	adc    bh,dh
   1b3cd:	push   ss
   1b3ce:	xchg   ecx,eax
   1b3cf:	out    dx,al
   1b3d0:	xor    al,0x55
   1b3d2:	inc    esi
   1b3d3:	repz cli 
   1b3d5:	hlt    
   1b3d6:	add    ah,cl
   1b3d8:	pop    esp
   1b3d9:	add    BYTE PTR [edi],cl
   1b3db:	add    BYTE PTR [edx],ch
   1b3dd:	add    BYTE PTR [edx],cl
   1b3df:	add    BYTE PTR [edi],al
   1b3e1:	add    BYTE PTR [ecx],dl
   1b3e3:	add    BYTE PTR [eax],cl
   1b3e5:	add    BYTE PTR [edi],bh
   1b3e7:	add    BYTE PTR ds:0x1b000000,bh
   1b3ed:	add    BYTE PTR [eax],ch
   1b3ef:	add    BYTE PTR [edi],ch
   1b3f1:	add    BYTE PTR [edx],cl
   1b3f3:	add    BYTE PTR [edx],cl
   1b3f5:	add    BYTE PTR [edi],al
   1b3f7:	add    BYTE PTR [ecx],dl
   1b3f9:	add    BYTE PTR [eax],cl
   1b3fb:	add    BYTE PTR [esi+0x0],bl
   1b3fe:	add    DWORD PTR [eax],eax
   1b400:	outs   dx,BYTE PTR ds:[esi]
   1b401:	add    BYTE PTR [eax],bh
   1b403:	add    BYTE PTR [esi],dl
   1b405:	add    BYTE PTR [ebx],bl
   1b407:	add    BYTE PTR [edi],bl
   1b409:	add    BYTE PTR [ebx],dl
   1b40b:	add    BYTE PTR [edi],dl
   1b40d:	add    BYTE PTR [ecx],al
   1b40f:	add    BYTE PTR [edi],ch
   1b411:	add    BYTE PTR [eax],al
   1b413:	add    BYTE PTR [edi+0x60],cl
   1b416:	jo     0x1b3b8
   1b418:	adc    eax,0x22d70cb
   1b41d:	jmp    0xaa28:0xc98676aa
   1b424:	dec    eax
   1b425:	dec    edx
   1b426:	(bad)  
   1b427:	mov    esp,0x382c2449
   1b42c:	add    DWORD PTR [edi],esi
   1b42e:	pop    ds
   1b42f:	int3   
   1b430:	mov    eax,0x45f46e05
   1b435:	or     BYTE PTR [edx+edx*8],bl
   1b438:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
   1b43a:	mov    esp,0xf12ef418
   1b43f:	pop    eax
   1b440:	adc    ecx,edx
   1b442:	dec    ebx
   1b443:	mov    al,ds:0x7fa0c09f
   1b448:	push   edi
   1b449:	add    dl,cl
   1b44b:	ja     0x1b490
   1b44d:	add    BYTE PTR [eax+eax*1+0xf],bl
   1b451:	add    BYTE PTR [edx],ch
   1b453:	add    BYTE PTR [edx],cl
   1b455:	add    BYTE PTR [edi],al
   1b457:	add    BYTE PTR [ecx],dl
   1b459:	add    BYTE PTR [eax],cl
   1b45b:	add    BYTE PTR [edi],bh
   1b45d:	add    BYTE PTR ds:0x1b000000,bh
   1b463:	add    BYTE PTR [eax],al
   1b465:	add    BYTE PTR [ecx],ah
   1b467:	popa   
   1b468:	jg     0x1b473
   1b46a:	mov    dh,0xb3
   1b46c:	stos   DWORD PTR es:[edi],eax
   1b46d:	add    DWORD PTR [ecx+0x2e79e7a5],esp
   1b473:	lods   eax,DWORD PTR cs:[esi]
   1b475:	inc    ebx
   1b476:	xor    esp,DWORD PTR [ecx+0x3bad6af3]
   1b47c:	push   edx
   1b47d:	xchg   ebp,eax
   1b47e:	push   0x9a3dec69
   1b483:	ins    DWORD PTR es:[edi],dx
   1b484:	adc    DWORD PTR [eax-0x4c],esi
   1b487:	dec    ebp
   1b488:	push   ebx
   1b489:	push   es
   1b48a:	fisub  WORD PTR [esp+ecx*2+0x7b]
   1b48e:	fstp   QWORD PTR [edi+0x0]
   1b491:	int3   
   1b492:	pop    esp
   1b493:	add    BYTE PTR [esi],cl
   1b495:	add    BYTE PTR [edi],dh
   1b497:	add    BYTE PTR [edx],al
   1b499:	add    BYTE PTR [esi],cl
   1b49b:	add    BYTE PTR [edx],bl
   1b49d:	add    BYTE PTR [edi],al
   1b49f:	add    BYTE PTR [esi],al
   1b4a1:	add    BYTE PTR [ebx],cl
   1b4a3:	add    BYTE PTR ds:0x2c001100,ah
   1b4a9:	add    BYTE PTR [edx],al
   1b4ab:	add    BYTE PTR [ebx],cl
   1b4ad:	add    BYTE PTR [ecx],al
   1b4af:	add    BYTE PTR [edi],al
   1b4b1:	add    BYTE PTR [ebx],cl
   1b4b3:	add    BYTE PTR [ecx],bh
   1b4b5:	add    BYTE PTR [edi],cl
   1b4b7:	add    BYTE PTR [edx],cl
   1b4b9:	add    BYTE PTR [edx],cl
   1b4bb:	add    BYTE PTR [edi],al
   1b4bd:	add    BYTE PTR [ecx],dl
   1b4bf:	add    BYTE PTR [eax],cl
   1b4c1:	add    BYTE PTR [ecx],dl
   1b4c3:	add    BYTE PTR [edi],bl
   1b4c5:	add    BYTE PTR [esi],dh
   1b4c7:	add    BYTE PTR [edi],al
   1b4c9:	add    BYTE PTR [eax],al
   1b4cb:	add    BYTE PTR [edi],dl
   1b4cd:	add    BYTE PTR [ebx],cl
   1b4cf:	add    BYTE PTR [edx],bl
   1b4d1:	add    BYTE PTR [edi],dh
   1b4d3:	add    BYTE PTR [eax+eax*1],ch
   1b4d6:	add    DWORD PTR [eax],eax
   1b4d8:	sbb    al,BYTE PTR [eax]
   1b4da:	push   es
   1b4db:	add    BYTE PTR ds:0x3f000300,bl
   1b4e1:	add    BYTE PTR [esi],dh
   1b4e3:	add    BYTE PTR [ecx],dl
   1b4e5:	add    BYTE PTR [eax],ch
   1b4e7:	add    BYTE PTR [edi],cl
   1b4e9:	add    BYTE PTR [esi],dh
   1b4eb:	add    BYTE PTR [edi],dl
   1b4ed:	add    BYTE PTR [eax+eax*1],al
   1b4f0:	pop    ds
   1b4f1:	add    BYTE PTR [edx],cl
   1b4f3:	add    BYTE PTR [esi],al
   1b4f5:	add    BYTE PTR [esi],dl
   1b4f7:	add    BYTE PTR [edi],ch
   1b4f9:	add    BYTE PTR [eax],al
   1b4fb:	add    BYTE PTR [ecx+0x7a89539b],dh
   1b501:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1b502:	ror    DWORD PTR [esi],1
   1b504:	mov    cs,ecx
   1b506:	(bad)  
   1b507:	rol    BYTE PTR [esi],1
   1b509:	dec    edi
   1b50a:	inc    edi
   1b50b:	xor    eax,0x808547e2
   1b510:	ins    DWORD PTR es:[edi],dx
   1b511:	and    DWORD PTR [eax+eax*2+0x1d],ebp
   1b515:	dec    edi
   1b516:	in     eax,dx
   1b517:	mov    DWORD PTR [esi+0x30db1e1],0x4b728163
   1b521:	(bad)  
   1b522:	pop    ebp
   1b523:	mov    edx,0x13b46ed
   1b528:	icebp  
   1b529:	pop    edx
   1b52a:	lahf   
   1b52b:	ins    BYTE PTR es:[edi],dx
   1b52c:	mov    eax,0x7ca8b97b
   1b531:	add    BYTE PTR [eax+eax*1+0x1f],ch
   1b535:	add    BYTE PTR [edx],dl
   1b537:	add    BYTE PTR [edx],dl
   1b539:	add    BYTE PTR [eax],al
   1b53b:	add    BYTE PTR [ebp+0x0],bl
   1b53e:	dec    ebx
   1b53f:	add    BYTE PTR ds:0x1d00,bl
   1b545:	add    BYTE PTR [eax*2-0x67ff0610],al
   1b54c:	add    al,0xd2
   1b54e:	std    
   1b54f:	and    eax,0xa5f4cbe9
   1b554:	ins    BYTE PTR es:[edi],dx
   1b555:	std    
   1b556:	ins    DWORD PTR es:[edi],dx
   1b557:	dec    esi
   1b558:	adc    DWORD PTR [ebx-0x32],ecx
   1b55b:	retf   
   1b55c:	jmp    0xb2a56913
   1b561:	daa    
   1b562:	inc    eax
   1b563:	mov    fs,WORD PTR [edi-0x16228497]
   1b569:	pop    ecx
   1b56a:	mov    WORD PTR [ebx-0x47],ds
   1b56d:	lods   eax,DWORD PTR ds:[esi]
   1b56e:	sbb    DWORD PTR [ecx],ebp
   1b570:	or     al,BYTE PTR [edx-0x26]
   1b573:	push   0x7ecfd2e0
   1b578:	call   0x615288af
   1b57d:	test   al,0x42
   1b57f:	mov    ds:0x7dda52,al
   1b584:	pop    edx
   1b585:	sub    eax,0x6163725
   1b58a:	sbb    BYTE PTR [eax],cl
   1b58c:	xor    DWORD PTR [edx+ebx*1],edi
   1b58f:	pop    ss
   1b590:	add    al,0x5
   1b592:	add    ah,cl
   1b594:	loopne 0x1b5e5
   1b596:	sub    eax,0x6faec20f
   1b59b:	adc    ch,cl
   1b59d:	outs   dx,BYTE PTR ds:[esi]
   1b59e:	es fwait
   1b5a0:	es sbb al,0xa5
   1b5a3:	adc    edi,ebx
   1b5a5:	(bad)  
   1b5a6:	mov    al,ds:0x687b48be
   1b5ab:	push   ss
   1b5ac:	or     BYTE PTR [esi],0x31
   1b5af:	jb     0x1b5a5
   1b5b1:	sbb    DWORD PTR [ebx+0x44406e3],edx
   1b5b7:	and    eax,0xb49a99cc
   1b5bc:	jle    0x1b5c6
   1b5be:	(bad)  
   1b5c0:	add    ah,cl
   1b5c2:	dec    esi
   1b5c3:	cmp    ah,BYTE PTR [ebx]
   1b5c5:	and    eax,0x33111d1b
   1b5ca:	aas    
   1b5cb:	sbb    eax,DWORD PTR [esi]
   1b5cd:	add    DWORD PTR [ecx*1+0x2082821],edx
   1b5d4:	sbb    eax,0x86cc000b
   1b5d9:	dec    ecx
   1b5da:	mov    eax,0x2a119109
   1b5df:	js     0x1b659
   1b5e1:	mov    dl,0x65
   1b5e3:	sub    DWORD PTR [ebx+ecx*4],edx
   1b5e6:	cmp    bh,bl
   1b5e8:	gs inc ebx
   1b5ea:	dec    edi
   1b5eb:	retf   
   1b5ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   1b5ed:	jp     0x1b62c
   1b5ef:	or     al,0x41
   1b5f1:	int3   
   1b5f2:	(bad)  
   1b5f3:	push   esp
   1b5f4:	sub    eax,DWORD PTR [eax+ebx*2]
   1b5f7:	sub    BYTE PTR [ebp+eax*1-0x5206259b],0x77
   1b5ff:	(bad)  
   1b600:	rol    DWORD PTR [eax],cl
   1b602:	pop    edx
   1b603:	sub    eax,0x1b1d2227
   1b608:	adc    DWORD PTR [esi],eax
   1b60a:	pop    ss
   1b60b:	and    bh,BYTE PTR [edi]
   1b60d:	sbb    eax,DWORD PTR [esi]
   1b60f:	add    DWORD PTR [ecx*1+0x2082821],edx
   1b616:	sbb    eax,0xddcc000b
   1b61b:	jmp    0x1b685
   1b61d:	fisub  DWORD PTR [ebp-0x3f]
   1b620:	mov    al,ds:0x6d0ef282
   1b625:	dec    eax
   1b626:	sub    BYTE PTR [esi+0x0],ah
   1b629:	mov    ch,0xa1
   1b62b:	shr    BYTE PTR [eax+edx*1+0x53],0xbc
   1b630:	pop    ss
   1b631:	clc    
   1b632:	dec    edi
   1b633:	fistp  DWORD PTR [esi+0x636d4238]
   1b639:	jl     0x1b61e
   1b63b:	jp     0x1b65b
   1b63d:	or     eax,0xd59eda64
   1b642:	lea    ecx,[edi+0xe]
   1b645:	jae    0x1b5ef
   1b647:	add    BYTE PTR [eax+0x70],dl
   1b64a:	cmp    DWORD PTR [ecx-0x2c],0xfffffff4
   1b64e:	shr    BYTE PTR [ebx+0x62344bb2],0xcf
   1b655:	daa    
   1b656:	mov    esp,0xfe81cc75
   1b65b:	push   ecx
   1b65c:	dec    edi
   1b65d:	mov    ebx,0x62e8fc5a
   1b662:	(bad)  
   1b663:	mov    al,ds:0xe41c2c93
   1b668:	stc    
   1b669:	(bad)  
   1b66a:	mov    ds:0xdc4693,al
   1b66f:	int3   
   1b670:	pop    esp
   1b671:	add    BYTE PTR [eax],bl
   1b673:	add    BYTE PTR [ebx],ch
   1b675:	add    BYTE PTR [eax+eax*1],bl
   1b678:	aaa    
   1b679:	add    BYTE PTR [ecx],ah
   1b67b:	add    BYTE PTR [ebx],dl
   1b67d:	add    BYTE PTR [edi],bl
   1b67f:	add    BYTE PTR [edx],cl
   1b681:	add    BYTE PTR [esi],al
   1b683:	add    BYTE PTR [esi],dl
   1b685:	add    BYTE PTR [edi],ch
   1b687:	add    BYTE PTR [ecx+0x0],bh
   1b68a:	push   esi
   1b68b:	add    BYTE PTR [eax],al
   1b68d:	add    BYTE PTR ds:0x57af7d5,dl
   1b693:	cmp    DWORD PTR [edi+0x2ca5d3f6],0xf0c640a6
   1b69d:	aas    
   1b69e:	clc    
   1b69f:	add    al,0x4f
   1b6a1:	int3   
   1b6a2:	and    dh,cl
   1b6a4:	push   esi
   1b6a5:	mov    eax,ds:0xfd7500c
   1b6aa:	mov    eax,ds:0x478ba078
   1b6af:	mul    BYTE PTR [ebp+0x65]
   1b6b2:	push   ebx
   1b6b3:	mov    edi,DWORD PTR [edx+0x75fd8997]
   1b6b9:	inc    ebp
   1b6ba:	test   DWORD PTR [edx+0x5633986],edx
   1b6c0:	rcr    BYTE PTR [edx+0x4a],cl
   1b6c3:	in     al,dx
   1b6c4:	jg     0x1b6ec
   1b6c6:	inc    ebp
   1b6c7:	imul   eax,DWORD PTR [esi+0x14],0x38b261
   1b6ce:	pop    esp
   1b6cf:	add    BYTE PTR [eax],bl
   1b6d1:	add    BYTE PTR [ecx],ah
   1b6d3:	add    BYTE PTR [ebx],dl
   1b6d5:	add    BYTE PTR [edi],bl
   1b6d7:	add    BYTE PTR [edx],cl
   1b6d9:	add    BYTE PTR [esi],al
   1b6db:	add    BYTE PTR [ecx],bh
   1b6dd:	add    BYTE PTR [ecx+0x0],bh
   1b6e0:	push   esi
   1b6e1:	add    BYTE PTR [eax],al
   1b6e3:	add    ah,cl
   1b6e5:	call   0x77a1:0xfe54a4f8
   1b6ec:	xchg   BYTE PTR ds:0xfbc7c288,dl
   1b6f2:	mov    ds:0xb1167ba9,al
   1b6f7:	fmul   st,st(4)
   1b6f9:	sbb    DWORD PTR [ecx-0x464f72d6],0x16
   1b700:	or     BYTE PTR gs:[edx-0x5906a54b],bl
   1b707:	sub    BYTE PTR [esi],bh
   1b709:	dec    ebx
   1b70a:	add    eax,0x9d20cdb2
   1b70f:	mov    eax,0xd1e27fb8
   1b714:	add    ah,cl
   1b716:	push   ebx
   1b717:	add    BYTE PTR [ecx+0x0],bh
   1b71a:	jae    0x1b71c
   1b71c:	inc    ebp
   1b71d:	add    BYTE PTR [esi+0x0],dh
   1b720:	je     0x1b722
   1b722:	inc    ebx
   1b723:	add    BYTE PTR [eax],al
   1b725:	add    BYTE PTR [eax+ebx*1+0x21],bl
   1b729:	adc    ebx,DWORD PTR [edi]
   1b72b:	or     al,BYTE PTR [esi]
   1b72d:	cmp    DWORD PTR [eax],eax
   1b72f:	int3   
   1b730:	xor    DWORD PTR [ebx-0x41465f97],ebx
   1b736:	xlat   BYTE PTR ds:[ebx]
   1b737:	(bad)  
   1b738:	and    BYTE PTR [edx],ah
   1b73a:	outs   dx,DWORD PTR ds:[esi]
   1b73b:	mov    esi,0xc61cfde8
   1b740:	popf   
   1b741:	add    eax,0x5872b279
   1b746:	sub    BYTE PTR [eax+esi*2+0x27],0xb6
   1b74b:	popf   
   1b74c:	jns    0x1b781
   1b74e:	in     al,dx
   1b74f:	mov    dl,0x93
   1b751:	cld    
   1b752:	pusha  
   1b753:	popf   
   1b754:	cwde   
   1b755:	lahf   
   1b756:	lds    esp,FWORD PTR [ecx]
   1b758:	jae    0x1b7a3
   1b75a:	xor    ah,BYTE PTR [ecx-0x2f]
   1b75d:	(bad)  
   1b75e:	pushf  
   1b75f:	or     edx,0xfffffff7
   1b762:	ja     0x1b794
   1b764:	mov    esi,0x9e885
   1b769:	int3   
   1b76a:	pop    esp
   1b76b:	add    BYTE PTR [eax],al
   1b76d:	add    BYTE PTR [edx+0x0],dh
   1b770:	jb     0x1b772
   1b772:	add    BYTE PTR [eax],al
   1b774:	cwde   
   1b775:	mov    eax,0x79c97071
   1b77a:	pushf  
   1b77b:	adc    al,0x2e
   1b77d:	add    DWORD PTR [edx-0x145a8b7d],esi
   1b783:	aam    0xc0
   1b785:	jno    0x1b766
   1b787:	fild   WORD PTR [edx]
   1b789:	jl     0x1b73a
   1b78b:	in     eax,dx
   1b78c:	dec    edi
   1b78d:	lds    eax,FWORD PTR fs:[eax]
   1b790:	pusha  
   1b791:	sub    al,0xc2
   1b793:	push   eax
   1b794:	xlat   BYTE PTR ds:[ebx]
   1b795:	pop    ebx
   1b796:	test   BYTE PTR [eax],al
   1b798:	pop    esp
   1b799:	add    BYTE PTR [ebx+0x63],ah
   1b79c:	add    ah,cl
   1b79e:	ret    
   1b79f:	inc    edi
   1b7a0:	inc    eax
   1b7a1:	or     eax,0x53584824
   1b7a6:	test   DWORD PTR [eax+eax*2],0xffe3ce63
   1b7ad:	out    0xf7,al
   1b7af:	jl     0x1b79c
   1b7b1:	and    BYTE PTR ss:[ecx-0x57174cce],bl
   1b7b8:	inc    edx
   1b7b9:	popa   
   1b7ba:	enter  0x47aa,0x1f
   1b7be:	mov    WORD PTR [eax+eax*1-0x34],fs
   1b7c2:	and    eax,0x5ccc0053
   1b7c7:	add    BYTE PTR [ebx+0x0],dh
   1b7ca:	jns    0x1b7cc
   1b7cc:	jae    0x1b7ce
   1b7ce:	je     0x1b7d0
   1b7d0:	add    BYTE PTR gs:[ebp+0x0],ch
   1b7d4:	jb     0x1b7d6
   1b7d6:	outs   dx,DWORD PTR ds:[esi]
   1b7d7:	add    BYTE PTR [edi+0x0],ch
   1b7da:	je     0x1b7dc
   1b7dc:	pop    esp
   1b7dd:	add    BYTE PTR [ebx+0x0],dh
   1b7e0:	jns    0x1b7e2
   1b7e2:	jae    0x1b7e4
   1b7e4:	je     0x1b7e6
   1b7e6:	add    BYTE PTR gs:[ebp+0x0],ch
   1b7ea:	xor    eax,DWORD PTR [eax]
   1b7ec:	xor    al,BYTE PTR [eax]
   1b7ee:	pop    esp
   1b7ef:	add    BYTE PTR ds:0x5300,ah
   1b7f5:	add    BYTE PTR [ecx],dh
   1b7f7:	xor    ch,BYTE PTR cs:[esi]
   1b7fa:	xor    eax,DWORD PTR [eax]
   1b7fc:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1b803:	arpl   WORD PTR [eax+eiz*1+0x6c],si
   1b807:	outs   dx,BYTE PTR gs:[esi]
   1b809:	addr16 je 0x1b874
   1b80c:	and    BYTE PTR [ebx+0x68],ah
   1b80f:	arpl   WORD PTR gs:[ebx+0x0],bp
   1b813:	int3   
   1b814:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1b81b:	arpl   WORD PTR [eax+eiz*1+0x64],si
   1b81f:	popa   
   1b820:	je     0x1b883
   1b822:	and    BYTE PTR [ebx+0x68],ah
   1b825:	arpl   WORD PTR gs:[ebx+0x0],bp
   1b829:	int3   
   1b82a:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1b831:	and    BYTE PTR [ecx+ebp*2+0x73],ah
   1b835:	je     0x1b898
   1b837:	outs   dx,BYTE PTR ds:[esi]
   1b838:	arpl   WORD PTR [ebp+0x20],sp
   1b83b:	je     0x1b8ac
   1b83d:	outs   dx,DWORD PTR ds:[esi]
   1b83e:	and    BYTE PTR [esi+0x61],ah
   1b841:	jb     0x1b863
   1b843:	bound  esp,QWORD PTR [ecx+0x63]
   1b846:	imul   eax,DWORD PTR [eax],0x69
   1b849:	outs   dx,BYTE PTR ds:[esi]
   1b84a:	jbe    0x1b8ad
   1b84c:	ins    BYTE PTR es:[edi],dx
   1b84d:	imul   esp,DWORD PTR [eax+eiz*1+0x64],0x61747369
   1b855:	outs   dx,BYTE PTR ds:[esi]
   1b856:	arpl   WORD PTR [ebp+0x20],sp
   1b859:	arpl   WORD PTR [edi+0x64],bp
   1b85c:	add    BYTE PTR gs:[ecx+0x6e],ch
   1b860:	jbe    0x1b8c3
   1b862:	ins    BYTE PTR es:[edi],dx
   1b863:	imul   esp,DWORD PTR [eax+eiz*1+0x6c],0x72657469
   1b86b:	popa   
   1b86c:	ins    BYTE PTR es:[edi],dx
   1b86d:	das    
   1b86e:	ins    BYTE PTR es:[edi],dx
   1b86f:	outs   dx,BYTE PTR gs:[esi]
   1b871:	addr16 je 0x1b8dc
   1b874:	and    BYTE PTR [ebx+0x6f],ah
   1b877:	fs add BYTE PTR gs:[ecx+0x6e],ch
   1b87c:	jbe    0x1b8df
   1b87e:	ins    BYTE PTR es:[edi],dx
   1b87f:	imul   esp,DWORD PTR [eax+eiz*1+0x64],0x61747369
   1b887:	outs   dx,BYTE PTR ds:[esi]
   1b888:	arpl   WORD PTR [ebp+0x73],sp
   1b88b:	and    BYTE PTR [ebx+0x65],dh
   1b88e:	je     0x1b890
   1b890:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1b897:	and    BYTE PTR [ecx+ebp*2+0x74],ch
   1b89b:	gs jb  0x1b8ff
   1b89e:	ins    BYTE PTR es:[edi],dx
   1b89f:	das    
   1b8a0:	ins    BYTE PTR es:[edi],dx
   1b8a1:	outs   dx,BYTE PTR gs:[esi]
   1b8a3:	addr16 je 0x1b90e
   1b8a6:	jae    0x1b8c8
   1b8a8:	jae    0x1b90f
   1b8aa:	je     0x1b8ac
   1b8ac:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1b8b3:	and    BYTE PTR [edx+0x69],ah
   1b8b6:	je     0x1b8d8
   1b8b8:	ins    BYTE PTR es:[edi],dx
   1b8b9:	outs   dx,BYTE PTR gs:[esi]
   1b8bb:	addr16 je 0x1b926
   1b8be:	and    BYTE PTR [edx+0x65],dh
   1b8c1:	jo     0x1b928
   1b8c3:	popa   
   1b8c4:	je     0x1b8c6
   1b8c6:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1b8cd:	and    BYTE PTR [ebx+0x6f],ah
   1b8d0:	fs and BYTE PTR gs:[ebp+eiz*2+0x6e],ch
   1b8d6:	addr16 je 0x1b941
   1b8d9:	jae    0x1b8fb
   1b8db:	jae    0x1b942
   1b8dd:	je     0x1b8df
   1b8df:	int3   
   1b8e0:	je     0x1b951
   1b8e2:	outs   dx,DWORD PTR ds:[esi]
   1b8e3:	and    BYTE PTR [ebp+0x61],ch
   1b8e6:	outs   dx,BYTE PTR ds:[esi]
   1b8e7:	jns    0x1b909
   1b8e9:	ins    BYTE PTR es:[edi],dx
   1b8ea:	outs   dx,BYTE PTR gs:[esi]
   1b8ec:	addr16 je 0x1b957
   1b8ef:	and    BYTE PTR [edi+0x72],ch
   1b8f2:	and    BYTE PTR [ecx+ebp*2+0x73],ah
   1b8f6:	je     0x1b959
   1b8f8:	outs   dx,BYTE PTR ds:[esi]
   1b8f9:	arpl   WORD PTR [ebp+0x20],sp
   1b8fc:	jae    0x1b977
   1b8fe:	ins    DWORD PTR es:[edi],dx
   1b8ff:	bound  ebp,QWORD PTR [edi+0x6c]
   1b902:	jae    0x1b904
   1b904:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1b90b:	and    BYTE PTR [ebx+0x74],dh
   1b90e:	outs   dx,DWORD PTR ds:[esi]
   1b90f:	jb     0x1b976
   1b911:	and    BYTE PTR fs:[edx+0x6c],ah
   1b915:	outs   dx,DWORD PTR ds:[esi]
   1b916:	arpl   WORD PTR [ebx+0x20],bp
   1b919:	ins    BYTE PTR es:[edi],dx
   1b91a:	outs   dx,BYTE PTR gs:[esi]
   1b91c:	addr16 je 0x1b987
   1b91f:	jae    0x1b921
   1b921:	int3   
   1b922:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1b929:	and    BYTE PTR [edx+0x6c],ah
   1b92c:	outs   dx,DWORD PTR ds:[esi]
   1b92d:	arpl   WORD PTR [ebx+0x20],bp
   1b930:	je     0x1b9ab
   1b932:	jo     0x1b999
   1b934:	add    ah,cl
   1b936:	push   0x65646165
   1b93b:	jb     0x1b95d
   1b93d:	arpl   WORD PTR [edx+0x63],si
   1b940:	and    BYTE PTR [ebp+0x69],ch
   1b943:	jae    0x1b9b2
   1b945:	popa   
   1b946:	je     0x1b9ab
   1b948:	push   0x6b6e7500
   1b94d:	outs   dx,BYTE PTR ds:[esi]
   1b94e:	outs   dx,DWORD PTR ds:[esi]
   1b94f:	ja     0x1b9bf
   1b951:	and    BYTE PTR [eax+0x65],ch
   1b954:	popa   
   1b955:	fs gs jb 0x1b979
   1b959:	data16 ins BYTE PTR es:[edi],dx
   1b95b:	popa   
   1b95c:	addr16 jae 0x1b97f
   1b95f:	jae    0x1b9c6
   1b961:	je     0x1b963
   1b963:	int3   
   1b964:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1b96b:	arpl   WORD PTR [eax+eiz*1+0x68],si
   1b96f:	gs popa 
   1b971:	fs gs jb 0x1b995
   1b975:	arpl   WORD PTR [eax+0x65],bp
   1b978:	arpl   WORD PTR [ebx+0x0],bp
   1b97b:	int3   
   1b97c:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1b983:	and    BYTE PTR [edi+0x69],dh
   1b986:	outs   dx,BYTE PTR ds:[esi]
   1b987:	outs   dx,DWORD PTR fs:[esi]
   1b989:	ja     0x1b9ab
   1b98b:	jae    0x1b9f6
   1b98d:	jp     0x1b9f4
   1b98f:	add    BYTE PTR [ebp+0x6e],dh
   1b992:	imul   ebp,DWORD PTR [esi+0x6f],0x77
   1b996:	outs   dx,BYTE PTR ds:[esi]
   1b997:	and    BYTE PTR [ebx+0x6f],ah
   1b99a:	ins    DWORD PTR es:[edi],dx
   1b99b:	jo     0x1ba0f
   1b99d:	gs jae 0x1ba13
   1b9a0:	imul   ebp,DWORD PTR [edi+0x6e],0x74656d20
   1b9a7:	.byte 0x68
   1b9a8:	outs   dx,DWORD PTR ds:[esi]
   1b9a9:	fs
	...

Disassembly of section INIT:

00071080 <INIT>:
   71080:	add    BYTE PTR [eax],al
   71082:	add    BYTE PTR [eax],al
   71084:	add    BYTE PTR [ecx+0x70418],ah
   7108a:	mov    ecx,0xbb40e64e
   7108f:	test   eax,eax
   71091:	je     0x71097
   71093:	cmp    eax,ecx
   71095:	jne    0x710b1
   71097:	mov    eax,ds:0x1baa8
   7109c:	mov    eax,DWORD PTR [eax]
   7109e:	xor    eax,0x70418
   710a3:	mov    ds:0x70418,eax
   710a8:	jne    0x710b1
   710aa:	mov    eax,ecx
   710ac:	mov    ds:0x70418,eax
   710b1:	not    eax
   710b3:	mov    ds:0x7041c,eax
   710b8:	ret    
   710b9:	les    esp,FWORD PTR [eax+eiz*2]
   710bc:	test   DWORD PTR [ebx-0x75],ecx
   710bf:	call   DWORD PTR [ebp-0x75]
   710c2:	in     al,dx
   710c3:	call   0x71085
   710c8:	pop    ebp
   710c9:	jmp    0x1748e
   710ce:	int3   
   710cf:	int3   
   710d0:	adc    al,0x11
   710d2:	push   es
	...
   710db:	add    BYTE PTR [eax],ah
   710dd:	adc    eax,0xba080006
   710e2:	add    BYTE PTR [eax],al
   710e4:	or     al,0x11
   710e6:	push   es
	...
   710ef:	add    BYTE PTR [edx+0x15],al
   710f2:	push   es
   710f3:	add    BYTE PTR [eax],al
   710f5:	mov    edx,0x0
	...
   7110a:	add    BYTE PTR [eax],al
   7110c:	cs adc eax,0x6
   71112:	add    BYTE PTR [eax],al
   71114:	out    dx,al
   71115:	adc    DWORD PTR [esi],eax
   71117:	add    BYTE PTR [esi],al
   71119:	adc    al,BYTE PTR [esi]
   7111b:	add    BYTE PTR [eax],dl
   7111d:	adc    al,BYTE PTR [esi]
   7111f:	add    BYTE PTR [edx],bl
   71121:	adc    al,BYTE PTR [esi]
   71123:	add    BYTE PTR [edx],ch
   71125:	adc    al,BYTE PTR [esi]
   71127:	add    BYTE PTR [edx+0x12],cl
   7112a:	push   es
   7112b:	add    BYTE PTR [esi+0x12],bl
   7112e:	push   es
   7112f:	add    BYTE PTR [eax+0x12],bh
   71132:	push   es
   71133:	add    BYTE PTR [edx-0x5dfff9ee],cl
   71139:	adc    al,BYTE PTR [esi]
   7113b:	add    BYTE PTR [edx+edx*1+0x12c60006],dh
   71142:	push   es
   71143:	add    al,bl
   71145:	adc    al,BYTE PTR [esi]
   71147:	add    dh,dh
   71149:	adc    al,BYTE PTR [esi]
   7114b:	add    BYTE PTR [eax],al
   7114d:	adc    eax,DWORD PTR [esi]
   7114f:	add    BYTE PTR [eax],bl
   71151:	adc    eax,DWORD PTR [esi]
   71153:	add    BYTE PTR [ebx+edx*1],ch
   71156:	push   es
   71157:	add    BYTE PTR [esi],dh
   71159:	adc    eax,DWORD PTR [esi]
   7115b:	add    BYTE PTR [edx+0x13],dl
   7115e:	push   es
   7115f:	add    BYTE PTR [edx+0x13],ch
   71162:	push   es
   71163:	add    BYTE PTR [ebx+edx*1+0x6],bh
   71167:	add    BYTE PTR [esi-0x67fff9ed],al
   7116d:	adc    eax,DWORD PTR [esi]
   7116f:	add    BYTE PTR [esi-0x4bfff9ed],ah
   71175:	adc    eax,DWORD PTR [esi]
   71177:	add    ah,cl
   71179:	adc    eax,DWORD PTR [esi]
   7117b:	add    dl,bl
   7117d:	adc    eax,DWORD PTR [esi]
   7117f:	add    ah,dh
   71181:	adc    eax,DWORD PTR [esi]
   71183:	add    BYTE PTR [edx],cl
   71185:	adc    al,0x6
   71187:	add    BYTE PTR [edx],ah
   71189:	adc    al,0x6
   7118b:	add    BYTE PTR [esp+edx*1],dh
   7118e:	push   es
   7118f:	add    BYTE PTR [eax+0x14],al
   71192:	push   es
   71193:	add    BYTE PTR [edx+0x14],bl
   71196:	push   es
   71197:	add    BYTE PTR [eax+0x14],dh
   7119a:	push   es
   7119b:	add    BYTE PTR [esp+edx*1+0x148e0006],al
   711a2:	push   es
   711a3:	add    BYTE PTR [esi-0x3dfff9ec],ch
   711a9:	adc    al,0x6
   711ab:	add    dl,bl
   711ad:	adc    al,0x6
   711af:	add    al,dh
   711b1:	adc    al,0x6
   711b3:	add    BYTE PTR [edx],al
   711b5:	adc    eax,0x15100006
   711ba:	push   es
   711bb:	add    dh,dl
   711bd:	adc    DWORD PTR [esi],eax
   711bf:	add    ah,cl
   711c1:	adc    DWORD PTR [esi],eax
   711c3:	add    BYTE PTR [edx+0x15],cl
   711c6:	push   es
   711c7:	add    BYTE PTR [eax],al
   711c9:	add    BYTE PTR [eax],al
   711cb:	add    BYTE PTR [ebx],cl
   711cd:	add    eax,0x6c43775a
   711d2:	outs   dx,DWORD PTR ds:[esi]
   711d3:	jae    0x7123a
   711d5:	add    BYTE PTR [eax],dh
   711d7:	add    ecx,DWORD PTR [edi+0x62]
   711da:	inc    sp
   711dc:	gs jb  0x71244
   711df:	data16 gs jb 0x71248
   711e3:	outs   dx,BYTE PTR ds:[esi]
   711e4:	arpl   WORD PTR [ebp+0x4f],sp
   711e7:	bound  ebp,QWORD PTR [edx+0x65]
   711ea:	arpl   WORD PTR [eax+eax*1+0x0],si
   711ee:	sbb    eax,0x6c745204
   711f3:	dec    ecx
   711f4:	outs   dx,BYTE PTR ds:[esi]
   711f5:	imul   esi,DWORD PTR [ebp+edx*2+0x6e],0x646f6369
   711fd:	gs push ebx
   711ff:	je     0x71273
   71201:	imul   ebp,DWORD PTR [esi+0x67],0x57b0000
   71208:	pop    edi
   71209:	popa   
   7120a:	ins    BYTE PTR es:[edi],dx
   7120b:	ins    BYTE PTR es:[edi],dx
   7120c:	ins    DWORD PTR es:[edi],dx
   7120d:	jne    0x7127b
   7120f:	add    BYTE PTR [ecx+0x5],bh
   71212:	pop    edi
   71213:	popa   
   71214:	ins    BYTE PTR es:[edi],dx
   71215:	ins    BYTE PTR es:[edi],dx
   71216:	imul   esi,DWORD PTR fs:[esi+0x0],0x78450075
   7121e:	push   edx
   7121f:	popa   
   71220:	imul   esi,DWORD PTR [ebx+0x65],0x74617453
   71227:	jne    0x7129c
   71229:	add    BYTE PTR [edx+0x0],al
   7122c:	inc    ebp
   7122d:	js     0x71270
   7122f:	ins    BYTE PTR es:[edi],dx
   71230:	ins    BYTE PTR es:[edi],dx
   71231:	outs   dx,DWORD PTR ds:[esi]
   71232:	arpl   WORD PTR [ecx+0x74],sp
   71235:	gs push eax
   71237:	outs   dx,DWORD PTR ds:[esi]
   71238:	outs   dx,DWORD PTR ds:[esi]
   71239:	ins    BYTE PTR es:[edi],dx
   7123a:	push   edi
   7123b:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0x72506761
   71243:	imul   ebp,DWORD PTR [edi+0x72],0x797469
   7124a:	dec    esi
   7124b:	add    BYTE PTR [ebp+0x78],al
   7124e:	inc    esi
   7124f:	jb     0x712b6
   71251:	gs push eax
   71253:	outs   dx,DWORD PTR ds:[esi]
   71254:	outs   dx,DWORD PTR ds:[esi]
   71255:	ins    BYTE PTR es:[edi],dx
   71256:	push   edi
   71257:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0xbd006761
   7125f:	add    edx,DWORD PTR [edx+0x74]
   71262:	ins    BYTE PTR es:[edi],dx
   71263:	inc    ebx
   71264:	outs   dx,DWORD PTR ds:[esi]
   71265:	ins    DWORD PTR es:[edi],dx
   71266:	jo     0x712c9
   71268:	jb     0x712cf
   7126a:	push   ebp
   7126b:	outs   dx,BYTE PTR ds:[esi]
   7126c:	imul   esp,DWORD PTR [ebx+0x6f],0x74536564
   71273:	jb     0x712de
   71275:	outs   dx,BYTE PTR ds:[esi]
   71276:	add    BYTE PTR [bp+si+0x2],al
   7127a:	dec    ebx
   7127b:	gs push edx
   7127d:	gs ins BYTE PTR es:[edi],dx
   7127f:	gs popa 
   71281:	jae    0x712e8
   71283:	dec    ebp
   71284:	jne    0x712fa
   71286:	gs js  0x71289
   71289:	add    BYTE PTR [ebp+0x2],ch
   7128c:	dec    ebx
   7128d:	gs push edi
   7128f:	popa   
   71290:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
   71298:	ins    BYTE PTR es:[di],dx
   7129a:	gs dec edi
   7129c:	bound  ebp,QWORD PTR [edx+0x65]
   7129f:	arpl   WORD PTR [eax+eax*1+0x4f],si
   712a3:	add    DWORD PTR [ecx+0x6f],ecx
   712a6:	inc    esp
   712a7:	gs ins BYTE PTR es:[edi],dx
   712a9:	gs je  0x71311
   712ac:	inc    esp
   712ad:	gs jbe 0x71319
   712b0:	arpl   WORD PTR [ebp+0x0],sp
   712b3:	add    bh,bh
   712b5:	add    DWORD PTR [ebx+0x65],ecx
   712b8:	inc    esp
   712b9:	gs je  0x7131d
   712bc:	arpl   WORD PTR [eax+0x50],bp
   712bf:	jb     0x71330
   712c1:	arpl   WORD PTR [ebp+0x73],sp
   712c4:	jae    0x712c6
   712c6:	hlt    
   712c7:	add    DWORD PTR [ebx+0x65],ecx
   712ca:	inc    ecx
   712cb:	je     0x71341
   712cd:	popa   
   712ce:	arpl   WORD PTR [eax+0x50],bp
   712d1:	jb     0x71342
   712d3:	arpl   WORD PTR [ebp+0x73],sp
   712d6:	jae    0x712d8
   712d8:	jge    0x712dd
   712da:	push   eax
   712db:	jae    0x71329
   712dd:	outs   dx,DWORD PTR ds:[esi]
   712de:	outs   dx,DWORD PTR ds:[esi]
   712df:	imul   esi,DWORD PTR [ebp+0x70],0x50
   712e3:	jb     0x71354
   712e5:	arpl   WORD PTR [ebp+0x73],sp
   712e8:	jae    0x7132c
   712ea:	jns    0x7133c
   712ec:	jb     0x7135d
   712ee:	arpl   WORD PTR [ebp+0x73],sp
   712f1:	jae    0x7133c
   712f3:	add    BYTE PTR fs:[eax],al
   712f6:	test   eax,0x6d656d05
   712fb:	jae    0x71362
   712fd:	je     0x712ff
   712ff:	add    BYTE PTR [ecx+0x0],al
   71302:	inc    ebp
   71303:	js     0x71346
   71305:	ins    BYTE PTR es:[edi],dx
   71306:	ins    BYTE PTR es:[edi],dx
   71307:	outs   dx,DWORD PTR ds:[esi]
   71308:	arpl   WORD PTR [ecx+0x74],sp
   7130b:	gs push eax
   7130d:	outs   dx,DWORD PTR ds:[esi]
   7130e:	outs   dx,DWORD PTR ds:[esi]
   7130f:	ins    BYTE PTR es:[edi],dx
   71310:	push   edi
   71311:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0x1b006761
   71319:	add    cl,BYTE PTR [ebx+0x65]
   7131c:	dec    ecx
   7131d:	outs   dx,BYTE PTR ds:[esi]
   7131e:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
   71326:	dec    ebp
   71327:	jne    0x7139d
   71329:	gs js  0x7132c
   7132c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   7132d:	add    eax,0x636d656d
   71332:	jo     0x713ad
   71334:	add    BYTE PTR [eax],al
   71336:	mov    eax,ds:0x476d4d02
   7133b:	gs je  0x71391
   7133e:	jns    0x713b3
   71340:	je     0x713a7
   71342:	ins    DWORD PTR es:[edi],dx
   71343:	push   edx
   71344:	outs   dx,DWORD PTR ds:[esi]
   71345:	jne    0x713bb
   71347:	imul   ebp,DWORD PTR [esi+0x65],0x72646441
   7134e:	gs jae 0x713c4
   71351:	add    bh,al
   71353:	add    edx,DWORD PTR [edx+0x74]
   71356:	ins    BYTE PTR es:[edi],dx
   71357:	inc    ebx
   71358:	outs   dx,DWORD PTR ds:[esi]
   71359:	jo     0x713d4
   7135b:	push   ebp
   7135c:	outs   dx,BYTE PTR ds:[esi]
   7135d:	imul   esp,DWORD PTR [ebx+0x6f],0x74536564
   71364:	jb     0x713cf
   71366:	outs   dx,BYTE PTR ds:[esi]
   71367:	add    BYTE PTR [bx+si],al
   7136a:	pop    ds
   7136b:	add    eax,0x6e45775a
   71370:	jne    0x713df
   71372:	gs jb  0x713d6
   71375:	je     0x713dc
   71377:	dec    ebx
   71378:	gs jns 0x7137b
   7137b:	add    bh,al
   7137d:	add    eax,0x6e736377
   71382:	arpl   WORD PTR [ecx+0x74],sp
   71385:	add    BYTE PTR [ecx+0x5],dl
   71388:	pop    edx
   71389:	ja     0x713dc
   7138b:	jne    0x713f2
   7138d:	jb     0x71408
   7138f:	push   esi
   71390:	popa   
   71391:	ins    BYTE PTR es:[edi],dx
   71392:	jne    0x713f9
   71394:	dec    ebx
   71395:	gs jns 0x71398
   71398:	adc    al,BYTE PTR ds:0x7243775a
   7139e:	gs popa 
   713a0:	je     0x71407
   713a2:	dec    ebx
   713a3:	gs jns 0x713a6
   713a6:	push   ebx
   713a7:	add    eax,0x6552775a
   713ac:	popa   
   713ad:	fs inc esi
   713af:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x5a056000
   713b7:	ja     0x7140c
   713b9:	gs je  0x71405
   713bc:	outs   dx,BYTE PTR ds:[esi]
   713bd:	outs   dx,WORD PTR ds:[esi]
   713bf:	jb     0x7142e
   713c1:	popa   
   713c2:	je     0x7142d
   713c4:	outs   dx,DWORD PTR ds:[esi]
   713c5:	outs   dx,BYTE PTR ds:[esi]
   713c6:	inc    esi
   713c7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x5a057300
   713cf:	ja     0x71428
   713d1:	jb     0x7143c
   713d3:	je     0x7143a
   713d5:	inc    esi
   713d6:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x775a0545
   713de:	push   ecx
   713df:	jne    0x71446
   713e1:	jb     0x7145c
   713e3:	dec    ecx
   713e4:	outs   dx,BYTE PTR ds:[esi]
   713e5:	outs   dx,WORD PTR ds:[esi]
   713e7:	jb     0x71456
   713e9:	popa   
   713ea:	je     0x71455
   713ec:	outs   dx,DWORD PTR ds:[esi]
   713ed:	outs   dx,BYTE PTR ds:[esi]
   713ee:	inc    esi
   713ef:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x4901e300
   713f7:	outs   dx,DWORD PTR ds:[esi]
   713f8:	inc    bx
   713fa:	outs   dx,DWORD PTR ds:[esi]
   713fb:	ins    DWORD PTR es:[edi],dx
   713fc:	jo     0x7146a
   713fe:	gs je  0x71466
   71401:	push   edx
   71402:	gs jno 0x7147a
   71405:	gs jae 0x7147c
   71408:	add    BYTE PTR [eax],al
   7140a:	inc    edi
   7140b:	add    DWORD PTR [ecx+0x6f],ecx
   7140e:	inc    ebx
   7140f:	jb     0x71476
   71411:	popa   
   71412:	je     0x71479
   71414:	push   ebx
   71415:	jns    0x71484
   71417:	bound  ebp,QWORD PTR [edi+0x6c]
   7141a:	imul   esp,DWORD PTR [ebx+0x4c],0x6b6e69
   71421:	add    BYTE PTR [esi],bh
   71423:	add    DWORD PTR [ecx+0x6f],ecx
   71426:	inc    ebx
   71427:	jb     0x7148e
   71429:	popa   
   7142a:	je     0x71491
   7142c:	inc    esp
   7142d:	gs jbe 0x71499
   71430:	arpl   WORD PTR [ebp+0x0],sp
   71433:	add    BYTE PTR [ecx+0x70777305],bh
   71439:	jb     0x714a4
   7143b:	outs   dx,BYTE PTR ds:[esi]
   7143c:	je     0x714a4
   7143e:	add    BYTE PTR [eax],al
   71440:	mov    DWORD PTR [ebx+edx*2],0x65724365
   71447:	popa   
   71448:	je     0x714af
   7144a:	inc    ebx
   7144b:	ins    BYTE PTR es:[edi],dx
   7144c:	imul   esp,DWORD PTR [ebp+0x6e],0x63655374
   71453:	jne    0x714c7
   71455:	imul   esi,DWORD PTR [ecx+edi*2+0x0],0x4b020700
   7145d:	gs inc edi
   7145f:	gs je  0x714a5
   71462:	jne    0x714d6
   71464:	jb     0x714cb
   71466:	outs   dx,BYTE PTR ds:[esi]
   71467:	je     0x714bd
   71469:	push   0x64616572
   7146e:	add    BYTE PTR [eax],al
   71470:	xor    eax,DWORD PTR [edx]
   71472:	dec    ebx
   71473:	gs push ecx
   71475:	jne    0x714dc
   71477:	jb     0x714f2
   71479:	push   ebx
   7147a:	jns    0x714ef
   7147c:	je     0x714e3
   7147e:	ins    DWORD PTR es:[edi],dx
   7147f:	push   esp
   71480:	imul   ebp,DWORD PTR [ebp+0x65],0x7305ac00
   71487:	jo     0x714fb
   71489:	imul   ebp,DWORD PTR [esi+0x74],0x4180066
   71490:	push   edx
   71491:	je     0x714ff
   71493:	dec    ecx
   71494:	ins    DWORD PTR es:[edi],dx
   71495:	popa   
   71496:	addr16 gs inc esp
   71499:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
   714a0:	jns    0x714e7
   714a2:	outs   dx,BYTE PTR ds:[esi]
   714a3:	je     0x71517
   714a5:	jns    0x714fb
   714a7:	outs   dx,DWORD PTR ds:[esi]
   714a8:	inc    esp
   714a9:	popa   
   714aa:	je     0x7150d
   714ac:	add    BYTE PTR [eax],al
   714ae:	sbb    DWORD PTR [edx+edx*2],eax
   714b1:	je     0x7151f
   714b3:	dec    ecx
   714b4:	ins    DWORD PTR es:[edi],dx
   714b5:	popa   
   714b6:	addr16 gs dec esi
   714b9:	je     0x71503
   714bb:	gs popa 
   714bd:	fs gs jb 0x714c1
   714c1:	add    BYTE PTR [eax+0x5],dh
   714c4:	pop    edx
   714c5:	ja     0x7151c
   714c7:	outs   dx,BYTE PTR ds:[esi]
   714c8:	ins    DWORD PTR es:[edi],dx
   714c9:	popa   
   714ca:	jo     0x71522
   714cc:	imul   esp,DWORD PTR [ebp+0x77],0x6553664f
   714d3:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
   714d7:	outs   dx,BYTE PTR ds:[esi]
   714d8:	add    BYTE PTR [eax],al
   714da:	sub    eax,DWORD PTR ds:0x614d775a
   714e0:	jo     0x71538
   714e2:	imul   esp,DWORD PTR [ebp+0x77],0x6553664f
   714e9:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
   714ed:	outs   dx,BYTE PTR ds:[esi]
   714ee:	add    BYTE PTR [eax],al
   714f0:	adc    eax,DWORD PTR ds:0x7243775a
   714f6:	gs popa 
   714f8:	je     0x7155f
   714fa:	push   ebx
   714fb:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
   71500:	outs   dx,BYTE PTR ds:[esi]
   71501:	add    BYTE PTR [esi+0x2],ah
   71504:	dec    ebx
   71505:	gs push esp
   71507:	imul   esp,DWORD PTR [ebx+0x6b],0x6e756f43
   7150e:	je     0x71510
   71510:	test   BYTE PTR [ecx],0x4b
   71513:	gs inc edx
   71515:	jne    0x7157e
   71517:	inc    ebx
   71518:	push   0x456b6365
   7151d:	js     0x7151f
   7151f:	add    BYTE PTR [esi+0x74],ch
   71522:	outs   dx,DWORD PTR ds:[esi]
   71523:	jae    0x71590
   71525:	jb     0x71595
   71527:	ins    BYTE PTR es:[edi],dx
   71528:	cs gs js 0x71591
   7152c:	add    BYTE PTR [eax],al
   7152e:	inc    eax
   7152f:	add    BYTE PTR [ebx+0x65],cl
   71532:	inc    edi
   71533:	gs je  0x71579
   71536:	jne    0x715aa
   71538:	jb     0x7159f
   7153a:	outs   dx,BYTE PTR ds:[esi]
   7153b:	je     0x71586
   7153d:	jb     0x715b0
   7153f:	ins    BYTE PTR es:[edi],dx
   71540:	add    BYTE PTR [eax],al
   71542:	dec    eax
   71543:	inc    ecx
   71544:	dec    esp
   71545:	cs fs ins BYTE PTR es:[edi],dx
   71548:	ins    BYTE PTR es:[edi],dx
   71549:	add    BYTE PTR [eax+0x6c745204],ah
   7154f:	push   ebp
   71550:	outs   dx,BYTE PTR ds:[esi]
   71551:	ja     0x715bc
   71553:	outs   dx,BYTE PTR ds:[esi]
   71554:	fs
	...
