
f9f55be3b35ed9f0635a25b1c3baba2c05e7da37150d2b2077111aabfed12184.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xcc
  401009:	xor    DWORD PTR ds:0x42d014,0x42a000
  401013:	push   esi
  401014:	movzx  esi,WORD PTR ds:0x429014
  40101b:	sub    DWORD PTR ds:0x42a018,esi
  401021:	mov    esi,DWORD PTR ds:0x42ed49
  401027:	push   0x8
  401029:	push   0x42e545
  40102e:	and    DWORD PTR ds:0x42c010,0x110f
  401038:	call   esi
  40103a:	test   eax,eax
  40103c:	mov    DWORD PTR ds:0x42a018,0x6e1c
  401046:	je     0x40105d
  40104c:	adc    DWORD PTR ds:0x42a014,0x429000
  401056:	xor    eax,eax
  401058:	jmp    0x4029a4
  40105d:	push   edi
  40105e:	push   0x42e555
  401063:	xor    edi,edi
  401065:	and    DWORD PTR ds:0x42c004,0x42d018
  40106f:	inc    edi
  401070:	push   edi
  401071:	push   edi
  401072:	call   DWORD PTR ds:0x42ed79
  401078:	xor    DWORD PTR ds:0x42d01c,0x429020
  401082:	test   eax,eax
  401084:	mov    DWORD PTR ds:0x42c004,0x42a7
  40108e:	je     0x4010a5
  401094:	xor    eax,eax
  401096:	mov    DWORD PTR ds:0x42a018,0x32e7
  4010a0:	jmp    0x4029a3
  4010a5:	sbb    DWORD PTR ds:0x42a010,0x2663
  4010af:	push   ebx
  4010b0:	and    DWORD PTR ds:0x42d008,0x0
  4010ba:	mov    ebx,DWORD PTR ds:0x42d008
  4010c0:	inc    ebx
  4010c1:	mov    DWORD PTR ds:0x42d008,ebx
  4010c7:	cmp    DWORD PTR ds:0x42d008,0xb
  4010ce:	jne    0x4010e4
  4010d4:	push   0x2cfb
  4010d9:	push   0x7de9
  4010de:	call   DWORD PTR ds:0x42ed35
  4010e4:	cmp    DWORD PTR ds:0x42d008,0xa
  4010eb:	jne    0x4010fe
  4010f1:	mov    ebx,DWORD PTR ds:0x42d008
  4010f7:	inc    ebx
  4010f8:	mov    DWORD PTR ds:0x42d008,ebx
  4010fe:	cmp    DWORD PTR ds:0x42d008,0x12
  401105:	jb     0x4010ba
  40110b:	mov    ebx,DWORD PTR ds:0x42ed4d
  401111:	push   0x42e565
  401116:	sub    DWORD PTR ds:0x429014,0x429020
  401120:	push   edi
  401121:	mov    DWORD PTR ds:0x42b01c,0x3048
  40112b:	push   edi
  40112c:	call   ebx
  40112e:	and    DWORD PTR ds:0x42c00c,0x5ead
  401138:	test   eax,eax
  40113a:	jne    0x401e1f
  401140:	push   0xc
  401142:	push   0x42e589
  401147:	adc    DWORD PTR ds:0x42c010,0x42d010
  401151:	call   esi
  401153:	test   eax,eax
  401155:	mov    DWORD PTR ds:0x42a01c,0x6b4c
  40115f:	jne    0x401e1f
  401165:	push   0x7
  401167:	push   0x42e59d
  40116c:	call   esi
  40116e:	xor    DWORD PTR ds:0x429028,0x6216
  401178:	test   eax,eax
  40117a:	jne    0x401e1f
  401180:	add    DWORD PTR ds:0x429004,0x14dc
  40118a:	push   0x8
  40118c:	and    DWORD PTR ds:0x42c00c,0x42a000
  401196:	push   0x42e5ad
  40119b:	add    DWORD PTR ds:0x42a018,0x317f
  4011a5:	call   esi
  4011a7:	test   eax,eax
  4011a9:	mov    DWORD PTR ds:0x42c014,0x304b
  4011b3:	jne    0x401e1f
  4011b9:	push   0x42e5bd
  4011be:	xor    DWORD PTR ds:0x42d014,0x42b004
  4011c8:	push   edi
  4011c9:	push   edi
  4011ca:	sub    DWORD PTR ds:0x429010,0x429028
  4011d4:	call   DWORD PTR ds:0x42ed79
  4011da:	not    DWORD PTR ds:0x42b000
  4011e0:	test   eax,eax
  4011e2:	mov    DWORD PTR ds:0x429008,0x4a9f
  4011ec:	jne    0x401e1f
  4011f2:	push   0x42e5cd
  4011f7:	push   edi
  4011f8:	adc    DWORD PTR ds:0x42d000,0x42900c
  401202:	push   edi
  401203:	call   ebx
  401205:	test   eax,eax
  401207:	jne    0x401e1f
  40120d:	xor    DWORD PTR ds:0x429000,0x429010
  401217:	push   0xc
  401219:	and    DWORD PTR ds:0x42b00c,0x6767
  401223:	push   0x42e5f1
  401228:	sub    DWORD PTR ds:0x42a010,0x429018
  401232:	call   esi
  401234:	sub    DWORD PTR ds:0x429010,0x42a010
  40123e:	test   eax,eax
  401240:	jne    0x401e1f
  401246:	push   0x7
  401248:	push   0x42e605
  40124d:	and    DWORD PTR ds:0x42c004,0x42b014
  401257:	call   esi
  401259:	test   eax,eax
  40125b:	mov    DWORD PTR ds:0x42c014,0x7e03
  401265:	jne    0x401e1f
  40126b:	and    DWORD PTR ds:0x429020,0x42d000
  401275:	push   0x8
  401277:	sbb    DWORD PTR ds:0x42a008,0x42901c
  401281:	push   0x42e615
  401286:	add    DWORD PTR ds:0x42c01c,0x42d010
  401290:	call   esi
  401292:	test   eax,eax
  401294:	mov    DWORD PTR ds:0x429008,0x7503
  40129e:	jne    0x401e1f
  4012a4:	push   0x42e625
  4012a9:	and    DWORD PTR ds:0x42d008,0x42c000
  4012b3:	push   edi
  4012b4:	push   edi
  4012b5:	call   DWORD PTR ds:0x42ed79
  4012bb:	or     DWORD PTR ds:0x42c01c,0x42d000
  4012c5:	test   eax,eax
  4012c7:	jne    0x401e1f
  4012cd:	add    DWORD PTR ds:0x42b018,0x42d004
  4012d7:	push   0x42e635
  4012dc:	and    DWORD PTR ds:0x42900c,0x42a018
  4012e6:	push   edi
  4012e7:	push   edi
  4012e8:	and    DWORD PTR ds:0x42c018,0x4f5c
  4012f2:	call   ebx
  4012f4:	xor    DWORD PTR ds:0x42b00c,0x577f
  4012fe:	test   eax,eax
  401300:	jne    0x401e1f
  401306:	push   0xc
  401308:	push   0x42e659
  40130d:	xor    DWORD PTR ds:0x429018,0x2dc5
  401317:	call   esi
  401319:	mov    DWORD PTR ds:0x42d014,0x790c
  401323:	test   eax,eax
  401325:	mov    DWORD PTR ds:0x42a014,0x2892
  40132f:	jne    0x401e1f
  401335:	sub    DWORD PTR ds:0x42d004,0x3ee1
  40133f:	push   0x7
  401341:	xor    DWORD PTR ds:0x42a01c,0x42b018
  40134b:	push   0x42e66d
  401350:	and    DWORD PTR ds:0x42c018,0x42d014
  40135a:	call   esi
  40135c:	test   eax,eax
  40135e:	mov    DWORD PTR ds:0x429008,0x4095
  401368:	jne    0x401e1f
  40136e:	sub    DWORD PTR ds:0x42d008,0x42b000
  401378:	push   0x8
  40137a:	adc    DWORD PTR ds:0x42d018,0x42c00c
  401384:	push   0x42e67d
  401389:	xor    DWORD PTR ds:0x42c014,0x7b1e
  401393:	call   esi
  401395:	test   eax,eax
  401397:	mov    DWORD PTR ds:0x42c010,0x4421
  4013a1:	jne    0x401e1f
  4013a7:	push   0x42e68d
  4013ac:	xor    DWORD PTR ds:0x42d018,0x31e9
  4013b6:	push   edi
  4013b7:	push   edi
  4013b8:	dec    DWORD PTR ds:0x42b010
  4013be:	call   DWORD PTR ds:0x42ed79
  4013c4:	test   eax,eax
  4013c6:	mov    DWORD PTR ds:0x429008,0x30d5
  4013d0:	jne    0x401e1f
  4013d6:	push   0x42e69d
  4013db:	push   edi
  4013dc:	adc    DWORD PTR ds:0x42c018,0x42d014
  4013e6:	push   edi
  4013e7:	sbb    DWORD PTR ds:0x429024,0x42b00c
  4013f1:	call   ebx
  4013f3:	xor    DWORD PTR ds:0x42b004,0x3165
  4013fd:	test   eax,eax
  4013ff:	mov    DWORD PTR ds:0x429028,0x3c76
  401409:	jne    0x401e1f
  40140f:	push   0xc
  401411:	or     DWORD PTR ds:0x42d000,0x42c004
  40141b:	push   0x42e6c1
  401420:	call   esi
  401422:	test   eax,eax
  401424:	mov    DWORD PTR ds:0x42d01c,0x6bbc
  40142e:	jne    0x401e1f
  401434:	and    DWORD PTR ds:0x42c018,0x24ff
  40143e:	push   0x7
  401440:	push   0x42e6d5
  401445:	add    DWORD PTR ds:0x42c008,0x429024
  40144f:	call   esi
  401451:	adc    DWORD PTR ds:0x429008,0x42b004
  40145b:	test   eax,eax
  40145d:	jne    0x401e1f
  401463:	push   0x8
  401465:	push   0x42e6e5
  40146a:	or     DWORD PTR ds:0x42a00c,0x2f15
  401474:	call   esi
  401476:	test   eax,eax
  401478:	jne    0x401e1f
  40147e:	push   0x42e6f5
  401483:	push   edi
  401484:	add    DWORD PTR ds:0x42a008,0x52fe
  40148e:	push   edi
  40148f:	call   DWORD PTR ds:0x42ed79
  401495:	sub    DWORD PTR ds:0x429018,0x42c010
  40149f:	test   eax,eax
  4014a1:	mov    DWORD PTR ds:0x42d014,0x5fc2
  4014ab:	jne    0x401e1f
  4014b1:	push   0x42e705
  4014b6:	add    DWORD PTR ds:0x42b014,0x42a00c
  4014c0:	push   edi
  4014c1:	push   edi
  4014c2:	xor    DWORD PTR ds:0x42b00c,0x37e4
  4014cc:	call   ebx
  4014ce:	mov    DWORD PTR ds:0x429000,0x2bcb
  4014d8:	test   eax,eax
  4014da:	jne    0x401e1f
  4014e0:	push   0xc
  4014e2:	push   0x42e729
  4014e7:	call   esi
  4014e9:	and    DWORD PTR ds:0x42b000,0x6be4
  4014f3:	test   eax,eax
  4014f5:	mov    DWORD PTR ds:0x42b00c,0x4954
  4014ff:	jne    0x401e1f
  401505:	or     DWORD PTR ds:0x429004,0x2e1b
  40150f:	push   0x7
  401511:	push   0x42e73d
  401516:	neg    DWORD PTR ds:0x429018
  40151c:	call   esi
  40151e:	or     DWORD PTR ds:0x429004,0x7cc8
  401528:	test   eax,eax
  40152a:	mov    DWORD PTR ds:0x42a000,0x4af4
  401534:	jne    0x401e1f
  40153a:	sub    DWORD PTR ds:0x429020,0x6067
  401544:	push   0x8
  401546:	push   0x42e74d
  40154b:	call   esi
  40154d:	test   eax,eax
  40154f:	jne    0x401e1f
  401555:	xor    DWORD PTR ds:0x429008,0x42a00c
  40155f:	push   0x42e75d
  401564:	push   edi
  401565:	sbb    DWORD PTR ds:0x42a004,0x429028
  40156f:	push   edi
  401570:	adc    DWORD PTR ds:0x42c000,0x42b004
  40157a:	call   DWORD PTR ds:0x42ed79
  401580:	xor    DWORD PTR ds:0x42b01c,0x42d004
  40158a:	test   eax,eax
  40158c:	mov    DWORD PTR ds:0x429004,0x6f0c
  401596:	jne    0x401e1f
  40159c:	sbb    DWORD PTR ds:0x429010,0x42b010
  4015a6:	push   0x42e76d
  4015ab:	push   edi
  4015ac:	xor    DWORD PTR ds:0x42c000,0x17e1
  4015b6:	push   edi
  4015b7:	add    DWORD PTR ds:0x429024,0x42b018
  4015c1:	call   ebx
  4015c3:	sbb    DWORD PTR ds:0x42c004,0x42b018
  4015cd:	test   eax,eax
  4015cf:	jne    0x401e1f
  4015d5:	or     DWORD PTR ds:0x42d008,0x42d000
  4015df:	push   0xc
  4015e1:	push   0x42e791
  4015e6:	adc    DWORD PTR ds:0x42d01c,0x429000
  4015f0:	call   esi
  4015f2:	test   eax,eax
  4015f4:	jne    0x401e1f
  4015fa:	sbb    DWORD PTR ds:0x42b01c,0x35f4
  401604:	push   0x7
  401606:	adc    DWORD PTR ds:0x42d00c,0x4213
  401610:	push   0x42e7a5
  401615:	xor    DWORD PTR ds:0x42b01c,0x728b
  40161f:	call   esi
  401621:	test   eax,eax
  401623:	mov    DWORD PTR ds:0x429010,0x1355
  40162d:	jne    0x401e1f
  401633:	add    DWORD PTR ds:0x42c00c,0x42d000
  40163d:	push   0x8
  40163f:	sub    DWORD PTR ds:0x42d000,0x42a014
  401649:	push   0x42e7b5
  40164e:	xor    DWORD PTR ds:0x42900c,0x42a014
  401658:	call   esi
  40165a:	add    DWORD PTR ds:0x42d018,0x7270
  401664:	test   eax,eax
  401666:	jne    0x401e1f
  40166c:	xor    DWORD PTR ds:0x429028,0x318
  401676:	push   0x42e7c5
  40167b:	not    DWORD PTR ds:0x42b00c
  401681:	push   edi
  401682:	and    DWORD PTR ds:0x429024,0x42d004
  40168c:	push   edi
  40168d:	call   DWORD PTR ds:0x42ed79
  401693:	test   eax,eax
  401695:	jne    0x401e1f
  40169b:	push   0x42e7d5
  4016a0:	push   edi
  4016a1:	push   edi
  4016a2:	xor    DWORD PTR ds:0x42d004,0x42b004
  4016ac:	call   ebx
  4016ae:	sbb    DWORD PTR ds:0x42d01c,0x42a008
  4016b8:	test   eax,eax
  4016ba:	mov    DWORD PTR ds:0x42b008,0x59c6
  4016c4:	jne    0x401e1f
  4016ca:	mov    DWORD PTR ds:0x42a008,0x78fc
  4016d4:	push   0xc
  4016d6:	add    DWORD PTR ds:0x42900c,0x42c018
  4016e0:	push   0x42e7f9
  4016e5:	call   esi
  4016e7:	test   eax,eax
  4016e9:	jne    0x401e1f
  4016ef:	and    DWORD PTR ds:0x42d010,0x3029
  4016f9:	push   0x7
  4016fb:	xor    DWORD PTR ds:0x42d008,0x429020
  401705:	push   0x42e80d
  40170a:	call   esi
  40170c:	sub    DWORD PTR ds:0x42901c,0x49cd
  401716:	test   eax,eax
  401718:	mov    DWORD PTR ds:0x42900c,0x2477
  401722:	jne    0x401e1f
  401728:	push   0x8
  40172a:	push   0x42e81d
  40172f:	call   esi
  401731:	or     DWORD PTR ds:0x42c000,0x42b014
  40173b:	test   eax,eax
  40173d:	jne    0x401e1f
  401743:	sub    DWORD PTR ds:0x429018,0x4202
  40174d:	push   0x42e82d
  401752:	adc    DWORD PTR ds:0x42a000,0x15e
  40175c:	push   edi
  40175d:	push   edi
  40175e:	and    DWORD PTR ds:0x42d008,0x1b79
  401768:	call   DWORD PTR ds:0x42ed79
  40176e:	add    DWORD PTR ds:0x42b008,0x42c000
  401778:	test   eax,eax
  40177a:	mov    DWORD PTR ds:0x429004,0x4fab
  401784:	jne    0x401e1f
  40178a:	add    DWORD PTR ds:0x42b008,0x429018
  401794:	push   0x42e83d
  401799:	push   edi
  40179a:	adc    DWORD PTR ds:0x42d018,0x42b008
  4017a4:	push   edi
  4017a5:	call   ebx
  4017a7:	adc    DWORD PTR ds:0x42b01c,0x42a014
  4017b1:	test   eax,eax
  4017b3:	mov    DWORD PTR ds:0x42b008,0x413c
  4017bd:	jne    0x401e1f
  4017c3:	sub    DWORD PTR ds:0x42a004,0x429004
  4017cd:	push   0xc
  4017cf:	push   0x42e861
  4017d4:	sub    DWORD PTR ds:0x42b014,0x419d
  4017de:	call   esi
  4017e0:	sub    DWORD PTR ds:0x429014,0x429024
  4017ea:	test   eax,eax
  4017ec:	mov    DWORD PTR ds:0x42c018,0x3584
  4017f6:	jne    0x401e1f
  4017fc:	adc    DWORD PTR ds:0x42b014,0x3845
  401806:	push   0x7
  401808:	adc    DWORD PTR ds:0x42b014,0x5918
  401812:	push   0x42e875
  401817:	call   esi
  401819:	or     DWORD PTR ds:0x42b004,0x42a000
  401823:	test   eax,eax
  401825:	jne    0x401e1f
  40182b:	sub    DWORD PTR ds:0x42c010,0x7a9b
  401835:	push   0x8
  401837:	push   0x42e885
  40183c:	call   esi
  40183e:	or     DWORD PTR ds:0x42b018,0x42a018
  401848:	test   eax,eax
  40184a:	mov    DWORD PTR ds:0x42c018,0x6db6
  401854:	jne    0x401e1f
  40185a:	push   0x42e895
  40185f:	push   edi
  401860:	push   edi
  401861:	or     DWORD PTR ds:0x429024,0x42b004
  40186b:	call   DWORD PTR ds:0x42ed79
  401871:	test   eax,eax
  401873:	jne    0x401e1f
  401879:	push   0x42e8a5
  40187e:	mov    DWORD PTR ds:0x42d010,0x708e
  401888:	push   edi
  401889:	mov    DWORD PTR ds:0x42c01c,0x7ef
  401893:	push   edi
  401894:	call   ebx
  401896:	test   eax,eax
  401898:	mov    DWORD PTR ds:0x42a00c,0x3b87
  4018a2:	jne    0x401e1f
  4018a8:	mov    DWORD PTR ds:0x429004,0x503
  4018b2:	push   0xc
  4018b4:	xor    DWORD PTR ds:0x42c00c,0x6b3b
  4018be:	push   0x42e8c9
  4018c3:	call   esi
  4018c5:	test   eax,eax
  4018c7:	mov    DWORD PTR ds:0x42a004,0x812
  4018d1:	jne    0x401e1f
  4018d7:	push   0x7
  4018d9:	sub    DWORD PTR ds:0x42b000,0x42a00c
  4018e3:	push   0x42e8dd
  4018e8:	sub    DWORD PTR ds:0x42d008,0x6a91
  4018f2:	call   esi
  4018f4:	add    DWORD PTR ds:0x429000,0x3ce6
  4018fe:	test   eax,eax
  401900:	mov    DWORD PTR ds:0x42d018,0x1a2
  40190a:	jne    0x401e1f
  401910:	sub    DWORD PTR ds:0x42a008,0x42a010
  40191a:	push   0x8
  40191c:	push   0x42e8ed
  401921:	call   esi
  401923:	sub    DWORD PTR ds:0x42d00c,0x42900c
  40192d:	test   eax,eax
  40192f:	mov    DWORD PTR ds:0x429000,0x18ec
  401939:	jne    0x401e1f
  40193f:	sbb    DWORD PTR ds:0x42a01c,0x42a004
  401949:	push   0x42e8fd
  40194e:	adc    DWORD PTR ds:0x42c010,0x1027
  401958:	push   edi
  401959:	adc    DWORD PTR ds:0x42d014,0x61c0
  401963:	push   edi
  401964:	xor    DWORD PTR ds:0x42d004,0x42b000
  40196e:	call   DWORD PTR ds:0x42ed79
  401974:	and    DWORD PTR ds:0x42b00c,0x54e0
  40197e:	test   eax,eax
  401980:	jne    0x401e1f
  401986:	mov    DWORD PTR ds:0x42b014,0x48d
  401990:	push   0x42e90d
  401995:	xor    DWORD PTR ds:0x42b00c,0x429000
  40199f:	push   edi
  4019a0:	xor    DWORD PTR ds:0x42c008,0x7d0d
  4019aa:	push   edi
  4019ab:	and    DWORD PTR ds:0x42b010,0xad4
  4019b5:	call   ebx
  4019b7:	adc    DWORD PTR ds:0x42b01c,0x42d018
  4019c1:	test   eax,eax
  4019c3:	mov    DWORD PTR ds:0x42a00c,0x2f29
  4019cd:	jne    0x401e1f
  4019d3:	sub    DWORD PTR ds:0x42a010,0x429014
  4019dd:	push   0xc
  4019df:	add    DWORD PTR ds:0x42d004,0x38f3
  4019e9:	push   0x42e931
  4019ee:	sub    DWORD PTR ds:0x42d008,0x531f
  4019f8:	call   esi
  4019fa:	xor    DWORD PTR ds:0x42a00c,0x1332
  401a04:	test   eax,eax
  401a06:	jne    0x401e1f
  401a0c:	add    DWORD PTR ds:0x42d014,0x42b000
  401a16:	push   0x7
  401a18:	push   0x42e945
  401a1d:	adc    DWORD PTR ds:0x429028,0x23cf
  401a27:	call   esi
  401a29:	test   eax,eax
  401a2b:	jne    0x401e1f
  401a31:	push   0x8
  401a33:	add    DWORD PTR ds:0x429020,0x607a
  401a3d:	push   0x42e955
  401a42:	call   esi
  401a44:	or     DWORD PTR ds:0x42c000,0x42b00c
  401a4e:	test   eax,eax
  401a50:	mov    DWORD PTR ds:0x42c00c,0x4ca0
  401a5a:	jne    0x401e1f
  401a60:	sub    DWORD PTR ds:0x429000,0x42d010
  401a6a:	push   0x42e965
  401a6f:	push   edi
  401a70:	and    DWORD PTR ds:0x42901c,0x42a004
  401a7a:	push   edi
  401a7b:	xor    DWORD PTR ds:0x42b018,0x42a008
  401a85:	call   DWORD PTR ds:0x42ed79
  401a8b:	adc    DWORD PTR ds:0x42d004,0x42901c
  401a95:	test   eax,eax
  401a97:	mov    DWORD PTR ds:0x42c010,0x64f7
  401aa1:	jne    0x401e1f
  401aa7:	push   0x42e975
  401aac:	mov    DWORD PTR ds:0x42a014,0x62f7
  401ab6:	push   edi
  401ab7:	push   edi
  401ab8:	call   ebx
  401aba:	add    DWORD PTR ds:0x42a018,0x42d01c
  401ac4:	test   eax,eax
  401ac6:	mov    DWORD PTR ds:0x42c01c,0x72ca
  401ad0:	jne    0x401e1f
  401ad6:	mov    DWORD PTR ds:0x42c01c,0x7760
  401ae0:	push   0xc
  401ae2:	sub    DWORD PTR ds:0x42b018,0x3ed8
  401aec:	push   0x42e999
  401af1:	call   esi
  401af3:	test   eax,eax
  401af5:	mov    DWORD PTR ds:0x42d018,0x4329
  401aff:	jne    0x401e1f
  401b05:	push   0x7
  401b07:	push   0x42e9ad
  401b0c:	call   esi
  401b0e:	add    DWORD PTR ds:0x42b01c,0x42d008
  401b18:	test   eax,eax
  401b1a:	jne    0x401e1f
  401b20:	add    DWORD PTR ds:0x42a008,0x5e0b
  401b2a:	push   0x8
  401b2c:	sub    DWORD PTR ds:0x429018,0x42a00c
  401b36:	push   0x42e9bd
  401b3b:	call   esi
  401b3d:	test   eax,eax
  401b3f:	mov    DWORD PTR ds:0x42d008,0x514f
  401b49:	jne    0x401e1f
  401b4f:	sbb    DWORD PTR ds:0x42b000,0x42d000
  401b59:	push   0x42e9cd
  401b5e:	xor    DWORD PTR ds:0x42c018,0x40e4
  401b68:	push   edi
  401b69:	add    DWORD PTR ds:0x42b010,0x42c000
  401b73:	push   edi
  401b74:	add    DWORD PTR ds:0x42d004,0x42c010
  401b7e:	call   DWORD PTR ds:0x42ed79
  401b84:	mov    DWORD PTR ds:0x42a000,0x51c5
  401b8e:	test   eax,eax
  401b90:	mov    DWORD PTR ds:0x42b000,0x17c8
  401b9a:	jne    0x401e1f
  401ba0:	and    DWORD PTR ds:0x42d014,0x42d010
  401baa:	push   0x42e9dd
  401baf:	push   edi
  401bb0:	push   edi
  401bb1:	call   ebx
  401bb3:	sbb    DWORD PTR ds:0x429010,0x42b014
  401bbd:	test   eax,eax
  401bbf:	mov    DWORD PTR ds:0x42c01c,0x73a3
  401bc9:	jne    0x401e1f
  401bcf:	xor    DWORD PTR ds:0x42c01c,0x6e0
  401bd9:	push   0xc
  401bdb:	adc    DWORD PTR ds:0x429008,0x42c008
  401be5:	push   0x42ea01
  401bea:	adc    DWORD PTR ds:0x42901c,0x2688
  401bf4:	call   esi
  401bf6:	add    DWORD PTR ds:0x42c008,0x63eb
  401c00:	test   eax,eax
  401c02:	mov    DWORD PTR ds:0x429004,0x7742
  401c0c:	jne    0x401e1f
  401c12:	adc    DWORD PTR ds:0x42c014,0x42b008
  401c1c:	push   0x7
  401c1e:	adc    DWORD PTR ds:0x42c008,0x42b010
  401c28:	push   0x42ea15
  401c2d:	call   esi
  401c2f:	test   eax,eax
  401c31:	mov    DWORD PTR ds:0x42900c,0x5c79
  401c3b:	jne    0x401e1f
  401c41:	adc    DWORD PTR ds:0x42d008,0x429000
  401c4b:	push   0x8
  401c4d:	xor    DWORD PTR ds:0x42c008,0x42b014
  401c57:	push   0x42ea25
  401c5c:	sub    DWORD PTR ds:0x42d000,0x42b01c
  401c66:	call   esi
  401c68:	xor    DWORD PTR ds:0x429008,0x42a00c
  401c72:	test   eax,eax
  401c74:	jne    0x401e1f
  401c7a:	push   0x42ea35
  401c7f:	adc    DWORD PTR ds:0x429020,0x1586
  401c89:	push   edi
  401c8a:	push   edi
  401c8b:	and    DWORD PTR ds:0x429008,0x42a014
  401c95:	call   DWORD PTR ds:0x42ed79
  401c9b:	and    DWORD PTR ds:0x42a01c,0x429000
  401ca5:	test   eax,eax
  401ca7:	jne    0x401e1f
  401cad:	push   0x42ea45
  401cb2:	push   edi
  401cb3:	sub    DWORD PTR ds:0x42d000,0x429000
  401cbd:	push   edi
  401cbe:	call   ebx
  401cc0:	test   eax,eax
  401cc2:	jne    0x401e1f
  401cc8:	push   0xc
  401cca:	push   0x42ea69
  401ccf:	sbb    DWORD PTR ds:0x42a004,0x42a014
  401cd9:	call   esi
  401cdb:	test   eax,eax
  401cdd:	mov    DWORD PTR ds:0x42a018,0x57a5
  401ce7:	jne    0x401e1f
  401ced:	sub    DWORD PTR ds:0x42d018,0x45f
  401cf7:	push   0x7
  401cf9:	push   0x42ea7d
  401cfe:	call   esi
  401d00:	test   eax,eax
  401d02:	mov    DWORD PTR ds:0x42a010,0x77f7
  401d0c:	jne    0x401e1f
  401d12:	adc    DWORD PTR ds:0x42a008,0x42900c
  401d1c:	push   0x8
  401d1e:	sub    DWORD PTR ds:0x429008,0x429014
  401d28:	push   0x42ea8d
  401d2d:	and    DWORD PTR ds:0x429008,0x429018
  401d37:	call   esi
  401d39:	test   eax,eax
  401d3b:	mov    DWORD PTR ds:0x429000,0x2cbb
  401d45:	jne    0x401e1f
  401d4b:	and    DWORD PTR ds:0x42d01c,0x42b000
  401d55:	push   0x42ea9d
  401d5a:	or     DWORD PTR ds:0x42b010,0x58c8
  401d64:	push   edi
  401d65:	or     DWORD PTR ds:0x42c00c,0x42a00c
  401d6f:	push   edi
  401d70:	adc    DWORD PTR ds:0x42b004,0x42a01c
  401d7a:	call   DWORD PTR ds:0x42ed79
  401d80:	and    DWORD PTR ds:0x429020,0x42b000
  401d8a:	test   eax,eax
  401d8c:	jne    0x401e1f
  401d92:	or     DWORD PTR ds:0x42c01c,0x42b01c
  401d9c:	push   0x42eaad
  401da1:	push   edi
  401da2:	push   edi
  401da3:	call   ebx
  401da5:	sbb    DWORD PTR ds:0x42901c,0x42c01c
  401daf:	test   eax,eax
  401db1:	mov    DWORD PTR ds:0x429018,0x129d
  401dbb:	jne    0x401e1f
  401dc1:	sbb    DWORD PTR ds:0x42a004,0x14a1
  401dcb:	push   0xc
  401dcd:	push   0x42ead1
  401dd2:	call   esi
  401dd4:	sbb    DWORD PTR ds:0x42c00c,0x67e3
  401dde:	test   eax,eax
  401de0:	mov    DWORD PTR ds:0x42c014,0x5d4a
  401dea:	jne    0x401e1f
  401df0:	sbb    DWORD PTR ds:0x42c00c,0x7769
  401dfa:	push   0x7
  401dfc:	or     DWORD PTR ds:0x42b00c,0x1035
  401e06:	push   0x42eae5
  401e0b:	call   esi
  401e0d:	test   eax,eax
  401e0f:	mov    DWORD PTR ds:0x42d014,0xf4
  401e19:	je     0x401e3a
  401e1f:	sub    DWORD PTR ds:0x42b01c,0x42b000
  401e29:	xor    eax,eax
  401e2b:	mov    DWORD PTR ds:0x42c018,0x7f86
  401e35:	jmp    0x4029a2
  401e3a:	or     esi,DWORD PTR ds:0x429020
  401e40:	mov    DWORD PTR [ebp-0x10],0x0
  401e47:	movzx  esi,BYTE PTR ds:0x42d010
  401e4e:	add    DWORD PTR ds:0x42c004,esi
  401e54:	mov    eax,DWORD PTR [ebp-0x24]
  401e57:	dec    esi
  401e58:	mov    DWORD PTR [ebp-0x24],eax
  401e5b:	mov    ecx,0xf89c85b5
  401e60:	mov    edi,DWORD PTR ds:0x411fc4
  401e66:	mov    esi,DWORD PTR ds:0x411f58
  401e6c:	sub    esi,edi
  401e6e:	imul   edi,DWORD PTR [edi+esi*1]
  401e72:	mov    DWORD PTR [ebp-0x8],ecx
  401e75:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  401e7c:	and    DWORD PTR ds:0x42a004,0x0
  401e86:	jmp    0x401e98
  401e8b:	mov    edi,DWORD PTR ds:0x42a004
  401e91:	inc    edi
  401e92:	mov    DWORD PTR ds:0x42a004,edi
  401e98:	cmp    DWORD PTR ds:0x42a004,0x1c
  401e9f:	jae    0x401ed2
  401ea5:	cmp    DWORD PTR ds:0x42a004,0x25
  401eac:	jne    0x401ec3
  401eb2:	push   DWORD PTR [ebp-0x14]
  401eb5:	push   0x42a004
  401eba:	push   DWORD PTR [ebp-0x1c]
  401ebd:	call   DWORD PTR ds:0x42ed39
  401ec3:	jmp    0x401e8b
  401ec8:	sbb    DWORD PTR ds:0x42d000,0x3f97
  401ed2:	lea    eax,[ebp-0x34]
  401ed5:	mov    DWORD PTR [ebp-0x28],eax
  401ed8:	mov    esi,DWORD PTR ds:0x429018
  401ede:	and    esi,DWORD PTR ds:0x42901c
  401ee4:	mov    DWORD PTR ds:0x429018,esi
  401eea:	lea    eax,[ebp-0x30]
  401eed:	mov    DWORD PTR [ebp-0x1c],eax
  401ef0:	sub    DWORD PTR ds:0x429018,0x2a07
  401efa:	mov    eax,ds:0x42e435
  401eff:	mov    eax,DWORD PTR [eax+0x1c8]
  401f05:	or     DWORD PTR ds:0x429028,0x42b010
  401f0f:	mov    eax,DWORD PTR [eax]
  401f11:	mov    edx,DWORD PTR [ebp-0x1c]
  401f14:	mov    esi,0x7510896
  401f19:	adc    DWORD PTR ds:0x429014,edi
  401f1f:	xor    eax,esi
  401f21:	mov    edi,0x3272dd
  401f26:	add    eax,edi
  401f28:	mov    DWORD PTR ds:0x42d008,0xdc
  401f32:	mov    DWORD PTR [edx],eax
  401f34:	mov    eax,ds:0x42b000
  401f39:	mov    eax,ds:0x42ebcd
  401f3e:	cmp    eax,0x312bc9f6
  401f43:	jne    0x40206d
  401f49:	xor    eax,0x6ec6
  401f4e:	mov    eax,DWORD PTR [ebp-0x8]
  401f51:	mov    edx,DWORD PTR ds:0x42e435
  401f57:	or     DWORD PTR ds:0x42901c,0x3e24
  401f61:	mov    edx,DWORD PTR [edx+0x198]
  401f67:	or     DWORD PTR ds:0x42b018,edx
  401f6d:	xor    eax,esi
  401f6f:	and    ebx,0x7b5c
  401f75:	add    eax,edi
  401f77:	and    DWORD PTR ds:0x429028,0x0
  401f81:	jmp    0x401f93
  401f86:	mov    ebx,DWORD PTR ds:0x429028
  401f8c:	inc    ebx
  401f8d:	mov    DWORD PTR ds:0x429028,ebx
  401f93:	cmp    DWORD PTR ds:0x429028,0x10
  401f9a:	jae    0x401fc8
  401fa0:	cmp    DWORD PTR ds:0x429028,0x12
  401fa7:	jne    0x401fbd
  401fad:	push   0x42e010
  401fb2:	push   0x42e0c5
  401fb7:	call   DWORD PTR ds:0x42ed3d
  401fbd:	jmp    0x401f86
  401fc2:	sub    DWORD PTR ds:0x42c014,edx
  401fc8:	mov    DWORD PTR [edx],eax
  401fca:	sbb    DWORD PTR ds:0x42c014,edi
  401fd0:	mov    eax,DWORD PTR [ebp-0x8]
  401fd3:	mov    DWORD PTR ds:0x42c018,0x1d
  401fdd:	cmp    DWORD PTR ds:0x42c018,0x0
  401fe4:	je     0x402064
  401fea:	cmp    DWORD PTR ds:0x42c018,0x26
  401ff1:	jne    0x40200a
  401ff7:	push   0x887e
  401ffc:	push   0x81aa
  402001:	push   DWORD PTR [ebp-0x1c]
  402004:	call   DWORD PTR ds:0x42ed41
  40200a:	mov    ebx,DWORD PTR ds:0x42c018
  402010:	dec    ebx
  402011:	mov    DWORD PTR ds:0x42c018,ebx
  402017:	jmp    0x401fdd
  40201c:	and    DWORD PTR ds:0x42a018,0x0
  402026:	mov    ebx,DWORD PTR ds:0x42a018
  40202c:	inc    ebx
  40202d:	mov    DWORD PTR ds:0x42a018,ebx
  402033:	cmp    DWORD PTR ds:0x42a018,0x27
  40203a:	jne    0x402051
  402040:	push   DWORD PTR [ebp-0x10]
  402043:	push   0x429008
  402048:	push   DWORD PTR [ebp-0xc]
  40204b:	call   DWORD PTR ds:0x42ed45
  402051:	cmp    DWORD PTR ds:0x42a018,0x17
  402058:	jb     0x402026
  40205e:	xor    ebx,0x6fac
  402064:	xor    eax,esi
  402066:	add    eax,edi
  402068:	mov    ds:0x42ebcd,eax
  40206d:	sub    ebx,ebx
  40206f:	mov    eax,ds:0x42e435
  402074:	mov    eax,DWORD PTR [eax+0x18c]
  40207a:	sbb    DWORD PTR ds:0x42c004,ecx
  402080:	mov    eax,DWORD PTR [eax]
  402082:	mov    DWORD PTR [ebp-0x68],eax
  402085:	or     DWORD PTR ds:0x42900c,0x1063
  40208f:	mov    ebx,0xf89c85b1
  402094:	mov    DWORD PTR [ebp-0x10],ebx
  402097:	dec    DWORD PTR ds:0x429024
  40209d:	mov    DWORD PTR [ebp-0x10],ebx
  4020a0:	sub    DWORD PTR ds:0x429028,0x6632
  4020aa:	mov    DWORD PTR [ebp-0x10],ebx
  4020ad:	and    DWORD PTR ds:0x42b018,0x42a00c
  4020b7:	mov    DWORD PTR [ebp-0x1c],ecx
  4020ba:	mov    DWORD PTR [ebp-0x10],ebx
  4020bd:	add    DWORD PTR ds:0x42a008,0x61a5
  4020c7:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  4020ce:	adc    DWORD PTR ds:0x42a004,0x6791
  4020d8:	mov    eax,DWORD PTR [ebp-0x8]
  4020db:	and    DWORD PTR ds:0x42d008,0x429018
  4020e5:	xor    eax,esi
  4020e7:	add    eax,edi
  4020e9:	mov    DWORD PTR ds:0x42c00c,0x48a6
  4020f3:	jmp    0x4022be
  4020f8:	add    eax,eax
  4020fa:	mov    eax,DWORD PTR [ebp-0xc]
  4020fd:	adc    DWORD PTR ds:0x42c000,0x10b0
  402107:	mov    ecx,DWORD PTR [ebp-0x18]
  40210a:	xor    eax,esi
  40210c:	sub    DWORD PTR ds:0x42b00c,0x42a004
  402116:	lea    eax,[eax+ecx*1+0x3272dd]
  40211d:	push   eax
  40211e:	mov    DWORD PTR ds:0x42a014,0x1b
  402128:	cmp    DWORD PTR ds:0x42a014,0x0
  40212f:	je     0x40217e
  402135:	cmp    DWORD PTR ds:0x42a014,0x6
  40213c:	jne    0x402148
  402142:	call   DWORD PTR ds:0x42ed51
  402148:	cmp    DWORD PTR ds:0x42a014,0x7
  40214f:	jne    0x402160
  402155:	mov    eax,ds:0x42a014
  40215a:	dec    eax
  40215b:	mov    ds:0x42a014,eax
  402160:	mov    eax,ds:0x42a014
  402165:	dec    eax
  402166:	mov    ds:0x42a014,eax
  40216b:	jmp    0x402128
  402170:	xor    eax,eax
  402172:	add    eax,DWORD PTR ds:0x42a008
  402178:	sub    DWORD PTR ds:0x429024,eax
  40217e:	mov    eax,DWORD PTR [ebp-0x1c]
  402181:	adc    DWORD PTR ds:0x429020,0x429028
  40218b:	xor    eax,esi
  40218d:	lea    eax,[ebp+eax*1+0x3272e5]
  402194:	push   eax
  402195:	add    DWORD PTR ds:0x42900c,0x1bda
  40219f:	mov    eax,ds:0x42e435
  4021a4:	push   DWORD PTR [eax+0x1bc]
  4021aa:	xor    DWORD PTR ds:0x42c018,0x429018
  4021b4:	call   0x4029b7
  4021b9:	and    DWORD PTR ds:0x42b018,0x0
  4021c3:	jmp    0x4021d5
  4021c8:	mov    ecx,DWORD PTR ds:0x42b018
  4021ce:	inc    ecx
  4021cf:	mov    DWORD PTR ds:0x42b018,ecx
  4021d5:	cmp    DWORD PTR ds:0x42b018,0x1d
  4021dc:	jae    0x4021fa
  4021e2:	cmp    DWORD PTR ds:0x42b018,0x27
  4021e9:	jne    0x4021f5
  4021ef:	call   DWORD PTR ds:0x42ed55
  4021f5:	jmp    0x4021c8
  4021fa:	mov    eax,DWORD PTR [ebp-0xc]
  4021fd:	mov    ecx,DWORD PTR [ebp-0x18]
  402200:	and    DWORD PTR ds:0x429010,0x0
  40220a:	mov    edx,DWORD PTR ds:0x429010
  402210:	inc    edx
  402211:	mov    DWORD PTR ds:0x429010,edx
  402217:	cmp    DWORD PTR ds:0x429010,0x9
  40221e:	jne    0x402245
  402224:	push   DWORD PTR [ebp-0x20]
  402227:	push   DWORD PTR [ebp-0x14]
  40222a:	push   0x42a010
  40222f:	push   0x39f6
  402234:	push   DWORD PTR [ebp-0x10]
  402237:	push   0x1415
  40223c:	push   DWORD PTR [ebp-0x14]
  40223f:	call   DWORD PTR ds:0x42ed59
  402245:	cmp    DWORD PTR ds:0x429010,0x8
  40224c:	jne    0x40225f
  402252:	mov    edx,DWORD PTR ds:0x429010
  402258:	inc    edx
  402259:	mov    DWORD PTR ds:0x429010,edx
  40225f:	cmp    DWORD PTR ds:0x429010,0x17
  402266:	jb     0x40220a
  40226c:	and    DWORD PTR ds:0x42d01c,0x0
  402276:	jmp    0x402288
  40227b:	mov    edx,DWORD PTR ds:0x42d01c
  402281:	inc    edx
  402282:	mov    DWORD PTR ds:0x42d01c,edx
  402288:	cmp    DWORD PTR ds:0x42d01c,0x16
  40228f:	jae    0x4022b5
  402295:	cmp    DWORD PTR ds:0x42d01c,0x1f
  40229c:	jne    0x4022b0
  4022a2:	push   DWORD PTR [ebp-0xc]
  4022a5:	push   0x42e12b
  4022aa:	call   DWORD PTR ds:0x42ed5d
  4022b0:	jmp    0x40227b
  4022b5:	xor    eax,esi
  4022b7:	lea    eax,[ecx+eax*1+0x3272dd]
  4022be:	and    DWORD PTR ds:0x429000,0x0
  4022c8:	jmp    0x4022da
  4022cd:	mov    edx,DWORD PTR ds:0x429000
  4022d3:	inc    edx
  4022d4:	mov    DWORD PTR ds:0x429000,edx
  4022da:	cmp    DWORD PTR ds:0x429000,0x1a
  4022e1:	jae    0x402370
  4022e7:	cmp    DWORD PTR ds:0x429000,0x7
  4022ee:	jne    0x402308
  4022f4:	push   0x42e196
  4022f9:	push   0x1
  4022fb:	push   0x0
  4022fd:	push   0x72dd
  402302:	call   DWORD PTR ds:0x42ed61
  402308:	cmp    DWORD PTR ds:0x429000,0x6
  40230f:	jne    0x402322
  402315:	mov    edx,DWORD PTR ds:0x429000
  40231b:	inc    edx
  40231c:	mov    DWORD PTR ds:0x429000,edx
  402322:	jmp    0x4022cd
  402327:	and    DWORD PTR ds:0x42a014,0x0
  402331:	mov    edx,DWORD PTR ds:0x42a014
  402337:	inc    edx
  402338:	mov    DWORD PTR ds:0x42a014,edx
  40233e:	cmp    DWORD PTR ds:0x42a014,0x1b
  402345:	jne    0x402359
  40234b:	push   0x42d004
  402350:	push   DWORD PTR [ebp-0x18]
  402353:	call   DWORD PTR ds:0x42ed65
  402359:	cmp    DWORD PTR ds:0x42a014,0x11
  402360:	jb     0x402331
  402366:	and    DWORD PTR ds:0x42d018,0x567b
  402370:	mov    ecx,DWORD PTR [ebp-0xc]
  402373:	xor    edx,0x27b9
  402379:	mov    edx,DWORD PTR [ebp-0xc]
  40237c:	add    DWORD PTR ds:0x42a010,0x42d014
  402386:	xor    edx,esi
  402388:	xor    ecx,esi
  40238a:	and    DWORD PTR ds:0x42c00c,0x48dd
  402394:	add    ecx,edx
  402396:	mov    edx,DWORD PTR [ebp-0xc]
  402399:	neg    DWORD PTR ds:0x42c00c
  40239f:	xor    edx,esi
  4023a1:	lea    ecx,[ecx+edx*1+0x975897]
  4023a8:	mov    DWORD PTR ds:0x42b018,0x21
  4023b2:	mov    DWORD PTR [ebp-0x18],eax
  4023b5:	mov    DWORD PTR ds:0x42a010,0x55c5
  4023bf:	cmp    eax,ecx
  4023c1:	mov    DWORD PTR ds:0x42c01c,0x1ffa
  4023cb:	jbe    0x4020f8
  4023d1:	mov    eax,DWORD PTR [ebp+0xc]
  4023d4:	mov    ds:0x42e2b9,eax
  4023d9:	mov    eax,DWORD PTR [ebp+0x10]
  4023dc:	mov    ds:0x42e50d,eax
  4023e1:	mov    eax,ds:0x42e2b9
  4023e6:	mov    ecx,DWORD PTR [ebp-0x28]
  4023e9:	sub    eax,edi
  4023eb:	xor    eax,esi
  4023ed:	mov    DWORD PTR [ecx],eax
  4023ef:	mov    eax,DWORD PTR [ebp-0x24]
  4023f2:	cmp    eax,0xf89c85b5
  4023f7:	jne    0x4024d1
  4023fd:	lea    eax,[ebp-0x38]
  402400:	mov    DWORD PTR [ebp-0x70],eax
  402403:	lea    eax,[ebp+0x4]
  402406:	mov    DWORD PTR [ebp-0x38],eax
  402409:	mov    eax,DWORD PTR [ebp-0x38]
  40240c:	test   eax,eax
  40240e:	je     0x402987
  402414:	mov    eax,DWORD PTR [ebp-0x20]
  402417:	mov    eax,DWORD PTR [ebp-0xc]
  40241a:	mov    eax,DWORD PTR [ebp-0x8]
  40241d:	mov    DWORD PTR [ebp+0xc],eax
  402420:	mov    eax,eax
  402422:	mov    eax,ds:0x42e435
  402427:	mov    eax,DWORD PTR [eax+0x1c8]
  40242d:	mov    eax,DWORD PTR [eax]
  40242f:	cdq    
  402430:	mov    ebx,eax
  402432:	mov    eax,0xfabdbeed
  402437:	add    ebx,eax
  402439:	adc    edx,0xffffffff
  40243c:	and    DWORD PTR [ebp-0x10],0x0
  402440:	xor    edx,0x0
  402443:	mov    DWORD PTR [ebp-0x54],edx
  402446:	mov    edx,DWORD PTR [ebp+0xc]
  402449:	mov    DWORD PTR [ebp-0x14],edx
  40244c:	mov    ecx,0x8a29a127
  402451:	xor    ebx,ecx
  402453:	add    DWORD PTR [ebp-0x14],eax
  402456:	mov    edx,DWORD PTR [ebp-0x14]
  402459:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40245d:	xor    edx,ecx
  40245f:	mov    DWORD PTR [ebp-0x4c],edx
  402462:	mov    edx,DWORD PTR [ebp-0x10]
  402465:	xor    edx,0x0
  402468:	mov    DWORD PTR [ebp-0x48],edx
  40246b:	cmp    DWORD PTR [ebp-0x4c],ebx
  40246e:	jne    0x402480
  402474:	mov    edx,DWORD PTR [ebp-0x54]
  402477:	cmp    DWORD PTR [ebp-0x48],edx
  40247a:	je     0x4024af
  402480:	mov    edx,DWORD PTR ds:0x42e435
  402486:	mov    edx,DWORD PTR [edx+0x1c0]
  40248c:	mov    edx,DWORD PTR [edx]
  40248e:	xor    ebx,ebx
  402490:	add    edx,eax
  402492:	adc    ebx,0xffffffff
  402495:	xor    edx,ecx
  402497:	xor    ebx,0x0
  40249a:	cmp    edx,0x70941fc9
  4024a0:	jne    0x402987
  4024a6:	cmp    ebx,0xffffffff
  4024a9:	jne    0x402987
  4024af:	mov    edx,DWORD PTR ds:0x42e4b1
  4024b5:	mov    ebx,DWORD PTR ds:0x42e4b9
  4024bb:	xor    edx,ebx
  4024bd:	mov    DWORD PTR ds:0x42e4b1,edx
  4024c3:	mov    ebx,DWORD PTR ds:0x42e4b1
  4024c9:	mov    edx,DWORD PTR [ebp-0x38]
  4024cc:	jmp    0x402946
  4024d1:	mov    eax,DWORD PTR [ebp-0x34]
  4024d4:	cmp    eax,0xf89c85b2
  4024d9:	je     0x402536
  4024df:	mov    eax,DWORD PTR [ebp-0x8]
  4024e2:	mov    ecx,DWORD PTR [ebp-0x30]
  4024e5:	xor    eax,esi
  4024e7:	add    eax,edi
  4024e9:	cmp    eax,ecx
  4024eb:	je     0x402536
  4024f1:	mov    eax,ds:0x42e435
  4024f6:	mov    eax,DWORD PTR [eax+0x194]
  4024fc:	mov    ecx,DWORD PTR [eax]
  4024fe:	mov    eax,DWORD PTR [ecx+0x3c]
  402501:	push   DWORD PTR ds:0x42e50d
  402507:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40250b:	push   DWORD PTR ds:0x42e2b9
  402511:	add    eax,ecx
  402513:	mov    ecx,DWORD PTR ds:0x42e435
  402519:	mov    ecx,DWORD PTR [ecx+0x194]
  40251f:	push   DWORD PTR [ecx]
  402521:	call   eax
  402523:	mov    ecx,DWORD PTR ds:0x42e435
  402529:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40252f:	mov    DWORD PTR [ecx],eax
  402531:	jmp    0x402987
  402536:	mov    eax,DWORD PTR [ebp-0x8]
  402539:	mov    ecx,DWORD PTR [ebp-0x68]
  40253c:	xor    eax,esi
  40253e:	add    eax,edi
  402540:	cmp    eax,ecx
  402542:	jne    0x402850
  402548:	mov    eax,DWORD PTR [ebp-0x8]
  40254b:	mov    ecx,DWORD PTR ds:0x42e435
  402551:	mov    ecx,DWORD PTR [ecx+0x198]
  402557:	xor    eax,esi
  402559:	add    eax,edi
  40255b:	cmp    eax,DWORD PTR [ecx]
  40255d:	jne    0x40257c
  402563:	mov    eax,DWORD PTR [ebp-0x8]
  402566:	push   0xf89c85b5
  40256b:	xor    eax,esi
  40256d:	add    eax,edi
  40256f:	push   eax
  402570:	push   ebx
  402571:	push   DWORD PTR [ebp-0xc]
  402574:	push   DWORD PTR [ebp-0x8]
  402577:	call   0x40a327
  40257c:	mov    eax,DWORD PTR [ebp-0xc]
  40257f:	mov    DWORD PTR [ebp-0x3c],eax
  402582:	mov    eax,DWORD PTR [ebp-0x8]
  402585:	mov    DWORD PTR [ebp-0x18],eax
  402588:	mov    eax,DWORD PTR [ebp-0x18]
  40258b:	xor    eax,esi
  40258d:	add    eax,edi
  40258f:	mov    DWORD PTR [ebp+0x10],eax
  402592:	mov    eax,ds:0x42e2b5
  402597:	mov    eax,DWORD PTR [eax]
  402599:	mov    DWORD PTR [ebp+0x10],eax
  40259c:	mov    eax,ds:0x42e4bd
  4025a1:	mov    eax,DWORD PTR [eax]
  4025a3:	mov    DWORD PTR [ebp-0x1c],eax
  4025a6:	mov    DWORD PTR [ebp+0xc],0xf89c87b5
  4025ad:	mov    eax,DWORD PTR [ebp+0xc]
  4025b0:	xor    eax,esi
  4025b2:	add    eax,edi
  4025b4:	mov    DWORD PTR [ebp+0xc],eax
  4025b7:	mov    eax,ds:0x42e435
  4025bc:	mov    DWORD PTR [ebp+0xc],eax
  4025bf:	mov    eax,DWORD PTR [ebp+0x10]
  4025c2:	mov    DWORD PTR [ebp+0xc],eax
  4025c5:	mov    eax,DWORD PTR [ebp+0xc]
  4025c8:	push   0x4
  4025ca:	pop    ecx
  4025cb:	sub    ecx,eax
  4025cd:	add    ecx,DWORD PTR [ebp-0x1c]
  4025d0:	mov    DWORD PTR [ebp-0x28],0xf89c85f5
  4025d7:	mov    DWORD PTR [ebp+0x10],ecx
  4025da:	mov    DWORD PTR [ebp-0xcc],ebx
  4025e0:	mov    eax,DWORD PTR [ebp+0xc]
  4025e3:	mov    DWORD PTR [ebp-0xc8],eax
  4025e9:	mov    eax,DWORD PTR [ebp+0x10]
  4025ec:	mov    DWORD PTR [ebp-0xc4],eax
  4025f2:	mov    eax,DWORD PTR [ebp-0x28]
  4025f5:	xor    eax,esi
  4025f7:	add    eax,edi
  4025f9:	mov    DWORD PTR [ebp-0xc0],eax
  4025ff:	lea    eax,[ebp-0x78]
  402602:	mov    DWORD PTR [ebp-0xbc],eax
  402608:	mov    eax,DWORD PTR [ebp-0xcc]
  40260e:	xor    eax,esi
  402610:	add    eax,edi
  402612:	mov    DWORD PTR [ebp-0xcc],eax
  402618:	lea    eax,[ebp-0xcc]
  40261e:	push   eax
  40261f:	mov    eax,DWORD PTR [ebp-0x3c]
  402622:	xor    eax,esi
  402624:	add    eax,edi
  402626:	push   eax
  402627:	mov    eax,ds:0x42e455
  40262c:	push   0x42e3ab
  402631:	push   DWORD PTR [eax]
  402633:	call   0x40508b
  402638:	mov    eax,DWORD PTR [ebp+0xc]
  40263b:	mov    ecx,DWORD PTR [ebp+0x10]
  40263e:	mov    DWORD PTR [ebp-0x6c],ecx
  402641:	mov    ecx,DWORD PTR [ebp-0x18]
  402644:	xor    ecx,esi
  402646:	mov    DWORD PTR [ebp-0x1c],eax
  402649:	add    ecx,edi
  40264b:	jmp    0x4027f1
  402650:	lea    edx,[ecx+eax*1]
  402653:	mov    DWORD PTR [ebp+0x10],edx
  402656:	mov    edx,DWORD PTR [ebp-0x6c]
  402659:	sub    edx,ecx
  40265b:	mov    DWORD PTR [ebp+0xc],edx
  40265e:	mov    edx,DWORD PTR [ebp+0xc]
  402661:	mov    DWORD PTR [ebp-0x40],edx
  402664:	mov    edx,DWORD PTR [ebp+0x10]
  402667:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  40266e:	mov    DWORD PTR [ebp-0x64],edx
  402671:	mov    DWORD PTR [ebp+0x10],0xf89c85b2
  402678:	mov    edx,DWORD PTR [ebp-0x44]
  40267b:	xor    edx,esi
  40267d:	add    edx,edi
  40267f:	mov    DWORD PTR [ebp+0xc],edx
  402682:	mov    edx,DWORD PTR [ebp-0x44]
  402685:	xor    edx,esi
  402687:	add    edx,edi
  402689:	mov    DWORD PTR [ebp-0x4],edx
  40268c:	mov    DWORD PTR [ebp-0x60],0xf89c85d5
  402693:	mov    DWORD PTR [ebp-0x5c],0xf89c85bc
  40269a:	mov    edx,DWORD PTR [ebp-0x44]
  40269d:	mov    ebx,DWORD PTR [ebp-0x40]
  4026a0:	xor    edx,esi
  4026a2:	add    edx,edi
  4026a4:	cmp    ebx,edx
  4026a6:	je     0x4027e5
  4026ac:	mov    eax,DWORD PTR [ebp+0x10]
  4026af:	xor    eax,esi
  4026b1:	mov    edx,0xffcd8d23
  4026b6:	sub    edx,eax
  4026b8:	add    edx,DWORD PTR [ebp-0x40]
  4026bb:	mov    eax,DWORD PTR [ebp+0x10]
  4026be:	mov    ebx,DWORD PTR [ebp+0xc]
  4026c1:	xor    eax,esi
  4026c3:	add    eax,edi
  4026c5:	imul   eax,ebx
  4026c8:	cmp    eax,edx
  4026ca:	ja     0x4027e2
  4026d0:	mov    edx,DWORD PTR [ebp+0xc]
  4026d3:	mov    eax,DWORD PTR [ebp-0x40]
  4026d6:	mov    ebx,DWORD PTR [ebp-0x60]
  4026d9:	sub    eax,edx
  4026db:	xor    ebx,esi
  4026dd:	xor    edx,edx
  4026df:	add    ebx,edi
  4026e1:	div    ebx
  4026e3:	mov    DWORD PTR [ebp-0x4],eax
  4026e6:	mov    eax,DWORD PTR [ebp-0x5c]
  4026e9:	mov    edx,DWORD PTR [ebp-0x4]
  4026ec:	xor    eax,esi
  4026ee:	add    eax,edi
  4026f0:	cmp    edx,eax
  4026f2:	jbe    0x402702
  4026f8:	mov    eax,DWORD PTR [ebp-0x5c]
  4026fb:	xor    eax,esi
  4026fd:	add    eax,edi
  4026ff:	mov    DWORD PTR [ebp-0x4],eax
  402702:	mov    eax,DWORD PTR [ebp-0x60]
  402705:	mov    edx,DWORD PTR [ebp-0x4]
  402708:	xor    eax,esi
  40270a:	add    eax,edi
  40270c:	imul   eax,edx
  40270f:	mov    DWORD PTR [ebp-0x4],eax
  402712:	mov    eax,DWORD PTR [ebp-0x44]
  402715:	mov    edx,DWORD PTR [ebp-0x4]
  402718:	xor    eax,esi
  40271a:	add    eax,edi
  40271c:	cmp    edx,eax
  40271e:	je     0x4027cb
  402724:	mov    eax,DWORD PTR [ebp-0x4]
  402727:	mov    DWORD PTR [ebp-0x24],eax
  40272a:	mov    eax,DWORD PTR [ebp+0xc]
  40272d:	add    eax,DWORD PTR [ebp-0x64]
  402730:	mov    DWORD PTR [ebp-0x28],0xf89c85b5
  402737:	mov    DWORD PTR [ebp-0x48],eax
  40273a:	mov    eax,0xf89c85b2
  40273f:	mov    DWORD PTR [ebp-0x50],eax
  402742:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  402749:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  402750:	mov    DWORD PTR [ebp-0x54],eax
  402753:	mov    eax,DWORD PTR [ebp-0x28]
  402756:	xor    eax,esi
  402758:	add    eax,edi
  40275a:	jmp    0x402787
  40275f:	mov    eax,DWORD PTR [ebp-0x54]
  402762:	mov    edx,DWORD PTR [ebp-0x4]
  402765:	xor    eax,esi
  402767:	add    eax,edi
  402769:	imul   eax,edx
  40276c:	mov    edx,DWORD PTR [ebp-0x48]
  40276f:	mov    BYTE PTR [eax+edx*1],0x0
  402773:	mov    eax,DWORD PTR [ebp-0x10]
  402776:	mov    edx,DWORD PTR [ebp-0x50]
  402779:	xor    eax,esi
  40277b:	xor    edx,esi
  40277d:	add    eax,edi
  40277f:	add    edx,edi
  402781:	imul   eax,edx
  402784:	add    eax,DWORD PTR [ebp-0x4]
  402787:	mov    DWORD PTR [ebp-0x4],eax
  40278a:	mov    eax,DWORD PTR [ebp-0x4]
  40278d:	mov    edx,DWORD PTR [ebp-0x24]
  402790:	cmp    edx,eax
  402792:	jb     0x40275f
  402798:	mov    eax,DWORD PTR [ebp-0x50]
  40279b:	mov    edx,DWORD PTR [ebp-0x24]
  40279e:	xor    eax,esi
  4027a0:	add    eax,edi
  4027a2:	imul   eax,edx
  4027a5:	mov    edx,DWORD PTR [ebp-0x28]
  4027a8:	xor    edx,esi
  4027aa:	add    edx,edi
  4027ac:	or     eax,edx
  4027ae:	mov    edx,DWORD PTR [ebp+0x10]
  4027b1:	xor    edx,esi
  4027b3:	add    eax,edx
  4027b5:	mov    edx,DWORD PTR [ebp+0x10]
  4027b8:	xor    edx,esi
  4027ba:	add    eax,edx
  4027bc:	mov    edx,DWORD PTR [ebp+0xc]
  4027bf:	lea    eax,[eax+edx*1+0x64e5ba]
  4027c6:	jmp    0x4027da
  4027cb:	mov    eax,DWORD PTR [ebp+0x10]
  4027ce:	mov    edx,DWORD PTR [ebp+0xc]
  4027d1:	xor    eax,esi
  4027d3:	lea    eax,[eax+edx*1+0x3272dd]
  4027da:	mov    DWORD PTR [ebp+0xc],eax
  4027dd:	jmp    0x4026ac
  4027e2:	mov    eax,DWORD PTR [ebp-0x1c]
  4027e5:	mov    edx,DWORD PTR [ebp-0x3c]
  4027e8:	xor    edx,esi
  4027ea:	lea    ecx,[ecx+edx*1+0x3272dd]
  4027f1:	lea    edx,[ecx-0x3272dd]
  4027f7:	xor    edx,esi
  4027f9:	cmp    edx,0xf89c95b5
  4027ff:	jne    0x402650
  402805:	mov    ecx,DWORD PTR [ebp-0x18]
  402808:	mov    edx,DWORD PTR [ebp-0x3c]
  40280b:	mov    ebx,DWORD PTR [ebp-0x18]
  40280e:	xor    edx,esi
  402810:	mov    dl,BYTE PTR [edx+eax*1+0x3272dd]
  402817:	xor    ecx,esi
  402819:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  402820:	xor    ebx,esi
  402822:	mov    BYTE PTR [ebx+eax*1+0x3272dd],dl
  402829:	mov    edx,DWORD PTR [ebp-0x3c]
  40282c:	xor    edx,esi
  40282e:	mov    BYTE PTR [edx+eax*1+0x3272dd],cl
  402835:	mov    eax,DWORD PTR [ebp-0x3c]
  402838:	mov    eax,DWORD PTR [ebp-0x8]
  40283b:	xor    eax,esi
  40283d:	add    eax,edi
  40283f:	mov    ds:0x42e4b9,eax
  402844:	mov    eax,DWORD PTR [ebp-0x8]
  402847:	xor    eax,esi
  402849:	add    eax,edi
  40284b:	mov    ds:0x42e4b1,eax
  402850:	lea    eax,[ebp-0x2c]
  402853:	mov    DWORD PTR [ebp-0x88],eax
  402859:	lea    eax,[ebp+0x4]
  40285c:	mov    DWORD PTR [ebp-0x2c],eax
  40285f:	mov    eax,DWORD PTR [ebp-0x2c]
  402862:	test   eax,eax
  402864:	je     0x402987
  40286a:	mov    DWORD PTR [ebp-0x80],0xf152c3a
  402871:	mov    DWORD PTR [ebp-0x74],0x712ed0f
  402878:	mov    DWORD PTR [ebp-0x7c],0x373fc2d
  40287f:	mov    DWORD PTR [ebp-0x84],0x72670a1d
  402889:	call   0x409f81
  40288e:	mov    eax,DWORD PTR [ebp-0x20]
  402891:	mov    eax,DWORD PTR [ebp-0xc]
  402894:	mov    eax,DWORD PTR [ebp-0x8]
  402897:	mov    DWORD PTR [ebp+0xc],eax
  40289a:	mov    eax,eax
  40289c:	mov    eax,ds:0x42e435
  4028a1:	mov    eax,DWORD PTR [eax+0x1c8]
  4028a7:	mov    eax,DWORD PTR [eax]
  4028a9:	cdq    
  4028aa:	mov    ebx,eax
  4028ac:	mov    eax,0xfabdbeed
  4028b1:	add    ebx,eax
  4028b3:	adc    edx,0xffffffff
  4028b6:	and    DWORD PTR [ebp-0x10],0x0
  4028ba:	xor    edx,0x0
  4028bd:	mov    DWORD PTR [ebp-0x54],edx
  4028c0:	mov    edx,DWORD PTR [ebp+0xc]
  4028c3:	mov    DWORD PTR [ebp-0x14],edx
  4028c6:	mov    ecx,0x8a29a127
  4028cb:	xor    ebx,ecx
  4028cd:	add    DWORD PTR [ebp-0x14],eax
  4028d0:	mov    edx,DWORD PTR [ebp-0x14]
  4028d3:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4028d7:	xor    edx,ecx
  4028d9:	mov    DWORD PTR [ebp-0x4c],edx
  4028dc:	mov    edx,DWORD PTR [ebp-0x10]
  4028df:	xor    edx,0x0
  4028e2:	mov    DWORD PTR [ebp-0x48],edx
  4028e5:	cmp    DWORD PTR [ebp-0x4c],ebx
  4028e8:	jne    0x4028fa
  4028ee:	mov    edx,DWORD PTR [ebp-0x54]
  4028f1:	cmp    DWORD PTR [ebp-0x48],edx
  4028f4:	je     0x402929
  4028fa:	mov    edx,DWORD PTR ds:0x42e435
  402900:	mov    edx,DWORD PTR [edx+0x1c0]
  402906:	mov    edx,DWORD PTR [edx]
  402908:	xor    ebx,ebx
  40290a:	add    edx,eax
  40290c:	adc    ebx,0xffffffff
  40290f:	xor    edx,ecx
  402911:	xor    ebx,0x0
  402914:	cmp    edx,0x70941fc9
  40291a:	jne    0x402987
  402920:	cmp    ebx,0xffffffff
  402923:	jne    0x402987
  402929:	mov    edx,DWORD PTR ds:0x42e4b1
  40292f:	mov    ebx,DWORD PTR ds:0x42e4b9
  402935:	xor    edx,ebx
  402937:	mov    DWORD PTR ds:0x42e4b1,edx
  40293d:	mov    ebx,DWORD PTR ds:0x42e4b1
  402943:	mov    edx,DWORD PTR [ebp-0x2c]
  402946:	add    DWORD PTR [edx],ebx
  402948:	mov    edx,DWORD PTR [ebp+0xc]
  40294b:	xor    esi,edx
  40294d:	mov    edx,DWORD PTR ds:0x42e4b1
  402953:	add    esi,edi
  402955:	xor    ebx,ebx
  402957:	add    esi,eax
  402959:	adc    ebx,0xffffffff
  40295c:	xor    edi,edi
  40295e:	xor    esi,ecx
  402960:	xor    ebx,0x0
  402963:	add    edx,eax
  402965:	adc    edi,0xffffffff
  402968:	xor    edx,ecx
  40296a:	xor    edi,0x0
  40296d:	cmp    edx,esi
  40296f:	jne    0x402987
  402975:	cmp    edi,ebx
  402977:	jne    0x402987
  40297d:	mov    eax,ds:0x42e4b1
  402982:	mov    ds:0x42e4b9,eax
  402987:	mov    eax,ds:0x42e435
  40298c:	push   0x4
  40298e:	add    eax,0x1cc
  402993:	push   eax
  402994:	lea    eax,[ebp-0x20]
  402997:	push   eax
  402998:	call   0x4029b7
  40299d:	mov    eax,DWORD PTR [ebp-0x20]
  4029a0:	mov    eax,DWORD PTR [eax]
  4029a2:	pop    ebx
  4029a3:	pop    edi
  4029a4:	pop    esi
  4029a5:	leave  
  4029a6:	ret    0xc
  4029a9:	xor    eax,eax
  4029ab:	adc    DWORD PTR ds:0x429018,0x42b01c
  4029b5:	inc    eax
  4029b6:	ret    
  4029b7:	push   ebp
  4029b8:	mov    ebp,esp
  4029ba:	sub    esp,0x10
  4029bd:	mov    eax,0xf89c85b5
  4029c2:	and    DWORD PTR ds:0x42a004,0x0
  4029cc:	jmp    0x4029de
  4029d1:	mov    ecx,DWORD PTR ds:0x42a004
  4029d7:	inc    ecx
  4029d8:	mov    DWORD PTR ds:0x42a004,ecx
  4029de:	cmp    DWORD PTR ds:0x42a004,0x19
  4029e5:	jae    0x402a37
  4029eb:	cmp    DWORD PTR ds:0x42a004,0x8
  4029f2:	jne    0x402a18
  4029f8:	push   0x58e0
  4029fd:	push   0x42d014
  402a02:	push   DWORD PTR [ebp-0x28]
  402a05:	push   0x42e0f3
  402a0a:	push   0x48f7
  402a0f:	push   DWORD PTR [ebp-0x28]
  402a12:	call   DWORD PTR ds:0x42ed6d
  402a18:	cmp    DWORD PTR ds:0x42a004,0x7
  402a1f:	jne    0x402a32
  402a25:	mov    ecx,DWORD PTR ds:0x42a004
  402a2b:	inc    ecx
  402a2c:	mov    DWORD PTR ds:0x42a004,ecx
  402a32:	jmp    0x4029d1
  402a37:	mov    DWORD PTR [ebp-0x4],eax
  402a3a:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  402a41:	movzx  edx,WORD PTR ds:0x42901c
  402a48:	xor    edx,DWORD PTR ds:0x429024
  402a4e:	mov    DWORD PTR ds:0x42901c,edx
  402a54:	mov    ecx,DWORD PTR [ebp-0x4]
  402a57:	sbb    edx,0x1c35
  402a5d:	push   esi
  402a5e:	mov    esi,DWORD PTR ds:0x42c01c
  402a64:	sbb    esi,DWORD PTR ds:0x42d018
  402a6a:	mov    DWORD PTR ds:0x42c01c,esi
  402a70:	mov    edx,0x7510896
  402a75:	mov    esi,DWORD PTR ds:0x42a00c
  402a7b:	add    DWORD PTR ds:0x42d008,esi
  402a81:	xor    ecx,edx
  402a83:	add    esi,DWORD PTR ds:0x429018
  402a89:	mov    esi,0x3272dd
  402a8e:	sub    DWORD PTR ds:0x42d004,0x41ed
  402a98:	push   edi
  402a99:	mov    edi,DWORD PTR [ebp+0x10]
  402a9c:	add    ecx,esi
  402a9e:	mov    DWORD PTR ds:0x42c014,0x852
  402aa8:	cmp    ecx,edi
  402aaa:	mov    DWORD PTR ds:0x42b014,0x2a3e
  402ab4:	je     0x404f9d
  402aba:	inc    ecx
  402abb:	mov    ecx,DWORD PTR [ebp-0x4]
  402abe:	and    DWORD PTR ds:0x42a010,0x0
  402ac8:	mov    edi,DWORD PTR ds:0x42a010
  402ace:	inc    edi
  402acf:	mov    DWORD PTR ds:0x42a010,edi
  402ad5:	cmp    DWORD PTR ds:0x42a010,0x2a
  402adc:	jne    0x402ae8
  402ae2:	call   DWORD PTR ds:0x42ed71
  402ae8:	cmp    DWORD PTR ds:0x42a010,0x1b
  402aef:	jb     0x402ac8
  402af5:	mov    edi,DWORD PTR ds:0x42c00c
  402afb:	sbb    DWORD PTR ds:0x42a01c,edi
  402b01:	mov    edi,DWORD PTR [ebp+0x10]
  402b04:	xor    DWORD PTR ds:0x429010,0x457d
  402b0e:	xor    eax,eax
  402b10:	xor    DWORD PTR ds:0x42c010,0x42b010
  402b1a:	xor    ecx,edx
  402b1c:	add    DWORD PTR ds:0x429028,0x1d9a
  402b26:	add    ecx,esi
  402b28:	add    edi,0xfabdbeed
  402b2e:	mov    DWORD PTR ds:0x42d014,0x7361
  402b38:	adc    eax,0xffffffff
  402b3b:	xor    eax,0x0
  402b3e:	mov    DWORD PTR [ebp-0xc],eax
  402b41:	push   ebx
  402b42:	xor    ebx,ebx
  402b44:	xor    edi,0x8a29a127
  402b4a:	mov    eax,ecx
  402b4c:	add    eax,0xfabdbeed
  402b51:	adc    ebx,0xffffffff
  402b54:	xor    eax,0x8a29a127
  402b59:	xor    ebx,0x0
  402b5c:	cmp    eax,edi
  402b5e:	jne    0x404f2f
  402b64:	cmp    ebx,DWORD PTR [ebp-0xc]
  402b67:	je     0x404f97
  402b6d:	jmp    0x404f2f
  402b72:	mov    esi,0x3272dd
  402b77:	jmp    0x404f2f
  402b7c:	jmp    0x402b15
  402b7e:	iret   
  402b7f:	push   esi
  402b80:	jae    0x402b78
  402b82:	retf   
  402b83:	xchg   edi,eax
  402b84:	mov    al,ds:0xac55e01a
  402b89:	jae    0x402b19
  402b8b:	push   ebp
  402b8c:	jp     0x402c08
  402b8e:	jp     0x402c0a
  402b90:	xlat   BYTE PTR ds:[ebx]
  402b91:	pop    edi
  402b92:	jp     0x402c0e
  402b94:	adc    eax,0x1921172c
  402b99:	and    eax,0x3a652f1b
  402b9e:	imul   esp,DWORD PTR [esi-0x2c],0x6d6a6a67
  402ba5:	xor    al,ch
  402ba7:	fsubr  st(1),st
  402ba9:	push   eax
  402baa:	dec    eax
  402bab:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff90
  402baf:	pusha  
  402bb0:	ins    DWORD PTR es:[edi],dx
  402bb1:	pop    ecx
  402bb2:	iret   
  402bb3:	pop    ebp
  402bb4:	dec    edx
  402bb5:	and    BYTE PTR [edx+edi*8+0x4d577687],cl
  402bbc:	jg     0x402bf5
  402bbe:	jo     0x402b66
  402bc0:	jg     0x402b62
  402bc2:	mov    ds:0x66ff2c3b,al
  402bc7:	fdiv   st(2),st
  402bc9:	push   ebx
  402bca:	jg     0x402bea
  402bcc:	in     eax,dx
  402bcd:	cmp    ebp,ecx
  402bcf:	mov    edx,0xde1387ed
  402bd4:	mov    ebp,DWORD PTR [ecx]
  402bd6:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c48a]
  402bdd:	fld    QWORD PTR [esp+edx*8]
  402be0:	push   cs
  402be1:	cli    
  402be2:	sbb    BYTE PTR es:[eax+0xc],cl
  402be6:	imul   ebp,DWORD PTR es:[eax-0x47],0xffffffaf
  402beb:	adc    eax,DWORD PTR [ecx+0x5]
  402bee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bef:	(bad)  
  402bf0:	jmp    0x32b4573e
  402bf5:	enter  0xf95b,0x1a
  402bf9:	cli    
  402bfa:	js     0x402b9d
  402bfc:	arpl   bp,bx
  402bfe:	cwde   
  402bff:	pop    edi
  402c00:	mov    esp,DWORD PTR [ecx+0x31821407]
  402c06:	repz sahf 
  402c08:	cmp    al,0x72
  402c0a:	jae    0x402c17
  402c0c:	fisubr DWORD PTR ds:0x33348d52
  402c12:	push   esp
  402c13:	jecxz  0x402be4
  402c15:	mov    ch,BYTE PTR [ecx]
  402c17:	mov    DWORD PTR [eax+0x5188ccb7],esi
  402c1d:	in     al,0x45
  402c1f:	push   edx
  402c20:	dec    esp
  402c21:	or     al,0x3e
  402c23:	repz add ebp,DWORD PTR ss:[ebp+0x30a7ca4b]
  402c2b:	rol    BYTE PTR [esi+edx*2],0xfd
  402c2f:	push   edx
  402c30:	push   esi
  402c31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c32:	stc    
  402c33:	push   0x542f8bf
  402c38:	xchg   DWORD PTR [edi-0x1015e39e],ebp
  402c3e:	dec    edi
  402c3f:	(bad)  
  402c40:	mov    ah,0x3c
  402c42:	fadd   QWORD PTR [edi-0x34]
  402c45:	xor    dl,0xb7
  402c48:	mov    esi,0xc76e990e
  402c4d:	sbb    DWORD PTR [eax+0x6b],ecx
  402c50:	cmp    al,BYTE PTR ds:0x2401f2cd
  402c56:	nop
  402c57:	mov    esi,0xdbe66e45
  402c5c:	jmp    0x6bc8315
  402c61:	or     al,0x2a
  402c63:	xchg   ecx,eax
  402c64:	jl     0x402ce1
  402c66:	mov    eax,0x4fa4cc7b
  402c6b:	xchg   esp,eax
  402c6c:	loope  0x402cae
  402c6e:	fs sti 
  402c70:	dec    edi
  402c71:	ja     0x402c7c
  402c73:	fidiv  DWORD PTR [ebx+ebp*1]
  402c76:	sub    al,0xd7
  402c78:	xchg   esp,eax
  402c79:	test   dh,dh
  402c7b:	adc    al,0x62
  402c7d:	into   
  402c7e:	lds    ecx,FWORD PTR [edx]
  402c80:	xchg   edi,eax
  402c81:	sub    bl,al
  402c83:	enter  0x6fbc,0xa7
  402c87:	(bad)  
  402c88:	mov    WORD PTR [edi-0x2e],cs
  402c8b:	in     al,0x33
  402c8d:	inc    edi
  402c8e:	out    0x72,al
  402c90:	in     eax,dx
  402c91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c92:	sbb    DWORD PTR [edx-0xd],0xffffffde
  402c96:	test   BYTE PTR [ebp-0x62623424],ch
  402c9c:	and    BYTE PTR [ecx],ch
  402c9e:	into   
  402c9f:	aam    0x8c
  402ca1:	xchg   esp,eax
  402ca2:	cli    
  402ca3:	es push ebx
  402ca5:	das    
  402ca6:	adc    dl,al
  402ca8:	cmp    DWORD PTR cs:[edx],ecx
  402cab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402cac:	push   ds
  402cad:	or     BYTE PTR ds:0xab833cde,0xc2
  402cb4:	and    al,0xe5
  402cb6:	xlat   BYTE PTR ds:[ebx]
  402cb7:	jmp    0x402c69
  402cb9:	in     eax,dx
  402cba:	mov    esp,0x5d809ff8
  402cbf:	popf   
  402cc0:	xor    dh,BYTE PTR [edx]
  402cc2:	jl     0x402c92
  402cc4:	adc    DWORD PTR [edx+ecx*4],ecx
  402cc7:	adc    BYTE PTR [ebx-0x59],ah
  402cca:	(bad)  
  402ccb:	out    0x58,eax
  402ccd:	sub    BYTE PTR [ecx-0x682303bf],al
  402cd3:	cli    
  402cd4:	repz das 
  402cd6:	stos   BYTE PTR es:[edi],al
  402cd7:	push   es
  402cd8:	shl    BYTE PTR [ebx],0x68
  402cdb:	xlat   BYTE PTR ds:[ebx]
  402cdc:	mov    ecx,0xc37b26cd
  402ce1:	and    ecx,DWORD PTR [eax-0x2306b4b6]
  402ce7:	or     dh,BYTE PTR [edx]
  402ce9:	sub    ecx,0x73605a70
  402cef:	jbe    0x402ccc
  402cf1:	adc    DWORD PTR [eax],edi
  402cf3:	cwde   
  402cf4:	cmp    ch,dh
  402cf6:	cmp    eax,0xeb9f0bc
  402cfb:	loop   0x402d3e
  402cfd:	pop    es
  402cfe:	or     ebp,ebx
  402d00:	fistp  WORD PTR [edi+0x67b8e29e]
  402d06:	xchg   esp,eax
  402d07:	mov    ebp,0x2fe31aae
  402d0c:	cwde   
  402d0d:	mov    ebx,0xc9c8fc6c
  402d12:	rol    DWORD PTR [esi-0x6c],0x99
  402d16:	fwait
  402d17:	test   DWORD PTR [eax+0x3ede7d42],0x88b432c
  402d21:	pop    ds
  402d22:	or     eax,0x1fbedbe0
  402d27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d28:	call   0xa37f8bd1
  402d2d:	mov    edi,edi
  402d2f:	mov    edx,0xc554514d
  402d34:	stc    
  402d35:	pop    es
  402d36:	or     DWORD PTR [edi+edi*4-0x18],0x6215d03e
  402d3e:	dec    esp
  402d3f:	jle    0x402db0
  402d41:	(bad)  
  402d42:	mov    ds:0x51ff39,al
  402d47:	push   ebx
  402d48:	inc    esp
  402d49:	pop    esi
  402d4a:	lods   al,BYTE PTR ds:[esi]
  402d4b:	xor    al,0x9c
  402d4d:	(bad)  
  402d4e:	test   ebx,edi
  402d50:	add    BYTE PTR [edi],bh
  402d52:	jbe    0x402d58
  402d54:	lea    ebp,[eax]
  402d56:	mov    esp,0x1486c28b
  402d5b:	cwde   
  402d5c:	retf   
  402d5d:	fsub   DWORD PTR [esi-0x45f7a45b]
  402d63:	call   0x8b4e:0xc6bba2da
  402d6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d6b:	add    BYTE PTR cs:[eax-0x6036b6ce],dl
  402d72:	repz push edx
  402d74:	push   es
  402d75:	test   eax,0x5603bf81
  402d7a:	push   esi
  402d7b:	fld    st(1)
  402d7d:	mov    ch,0xd9
  402d7f:	pop    edx
  402d80:	clc    
  402d81:	lea    ebp,[ecx-0x3b690bcd]
  402d87:	dec    esp
  402d88:	sub    ecx,DWORD PTR es:[edx+0x22fbce5]
  402d8f:	mov    ?,ebx
  402d91:	dec    ebx
  402d92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d93:	inc    edx
  402d94:	jns    0x402d85
  402d96:	sub    ebp,esp
  402d98:	ret    
  402d99:	xor    al,0x4
  402d9b:	inc    ebp
  402d9c:	xor    eax,0x75d7ad1b
  402da1:	(bad)  
  402da2:	adc    BYTE PTR ds:[eax],0xc
  402da6:	xor    BYTE PTR ds:0xc1110f14,bh
  402dac:	jne    0x402e13
  402dae:	mov    cl,0x0
  402db0:	test   al,0xda
  402db2:	in     eax,0x7b
  402db4:	push   ebp
  402db5:	cli    
  402db6:	popa   
  402db7:	mov    cl,0xdf
  402db9:	jge    0x402da3
  402dbb:	bound  esp,QWORD PTR [ebx+0x7e]
  402dbe:	adc    bh,BYTE PTR [edi+eiz*8-0x5179f790]
  402dc5:	mov    cl,0xa6
  402dc7:	ret    0x3b7
  402dca:	and    al,0xe7
  402dcc:	mov    ebx,0x2afc85d2
  402dd1:	test   eax,0x5fe9a1d5
  402dd6:	lahf   
  402dd7:	sub    bl,BYTE PTR [ebx+0x21]
  402dda:	mov    eax,0x19e74381
  402ddf:	imul   eax,DWORD PTR [eax],0xffffffe0
  402de2:	lds    eax,FWORD PTR [ebx+0x2c1db28f]
  402de8:	in     al,0xaa
  402dea:	(bad)  
  402deb:	seto   BYTE PTR gs:[esp+eax*4]
  402df0:	loopne 0x402dee
  402df2:	loopne 0x402d9e
  402df4:	sbb    esp,DWORD PTR [esi]
  402df6:	addr16 pop ds
  402df8:	in     al,0x42
  402dfa:	mov    gs,WORD PTR [esi-0x43c89df6]
  402e00:	xchg   BYTE PTR [esi-0x23390b15],cl
  402e06:	pop    ecx
  402e07:	lea    eax,ds:0x3032bad2
  402e0d:	repnz pop ds
  402e0f:	push   0xfffffffa
  402e11:	mov    ebp,0x4353bc80
  402e16:	(bad)  
  402e17:	into   
  402e18:	and    DWORD PTR [edi-0x4f],esp
  402e1b:	xor    ah,bh
  402e1d:	test   BYTE PTR [edx],dh
  402e1f:	or     al,0xfb
  402e21:	xchg   ebx,eax
  402e22:	loopne 0x402dc3
  402e24:	cmp    esp,DWORD PTR [esi-0x4a]
  402e27:	ret    
  402e28:	rcr    cl,0x74
  402e2b:	add    BYTE PTR [ebp+0x30463b39],al
  402e31:	or     edi,DWORD PTR [ebx+0x2f]
  402e34:	mov    WORD PTR [eax-0x43f92a46],?
  402e3a:	into   
  402e3b:	(bad)  
  402e3c:	and    eax,0x335db057
  402e41:	popa   
  402e42:	jb     0x402e40
  402e44:	mov    eax,0xdb27cd7c
  402e49:	mov    edx,0xe7f344d
  402e4e:	stos   BYTE PTR es:[edi],al
  402e4f:	push   ebx
  402e50:	call   0xb6a4a634
  402e55:	int    0xb0
  402e57:	push   esi
  402e58:	fidivr DWORD PTR [eax+ecx*4]
  402e5b:	call   0x48ddc24e
  402e60:	retf   
  402e61:	(bad)  
  402e62:	jmp    0x5fabe76
  402e67:	dec    edi
  402e68:	mov    dl,0xc2
  402e6a:	sbb    dl,dh
  402e6c:	repnz inc eax
  402e6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e70:	cs push ss
  402e72:	add    edi,DWORD PTR [edi]
  402e74:	icebp  
  402e75:	fidiv  WORD PTR [edi+0x79]
  402e78:	mov    ebx,0x7597292b
  402e7d:	mov    ch,0xb1
  402e7f:	test   eax,0xf74314f4
  402e84:	ffreep st(3)
  402e86:	fdiv   QWORD PTR [edi+0x1edab50a]
  402e8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e8e:	dec    esp
  402e8f:	pop    ebx
  402e90:	and    eax,ebx
  402e92:	lods   al,BYTE PTR ds:[esi]
  402e93:	es test ch,bl
  402e96:	out    dx,eax
  402e97:	xchg   edi,eax
  402e98:	arpl   WORD PTR [esi],cx
  402e9a:	ficomp WORD PTR ds:[ebx]
  402e9d:	iret   
  402e9e:	or     DWORD PTR [ebx-0x77f4c504],esi
  402ea4:	test   eax,0x3d1e475f
  402ea9:	xchg   esi,eax
  402eaa:	in     al,dx
  402eab:	adc    BYTE PTR [esi+0x4d],dl
  402eae:	xchg   edx,eax
  402eaf:	sub    DWORD PTR [ebp+eax*8+0x5f],esi
  402eb3:	ret    
  402eb4:	pusha  
  402eb5:	frstor [ebx+0x6c]
  402eb8:	jl     0x402ede
  402eba:	into   
  402ebb:	mov    ebp,0xad18d3ab
  402ec0:	sub    dl,dl
  402ec2:	push   0x51
  402ec4:	packsswb mm4,QWORD PTR [eax+0x6a98e8d2]
  402ecb:	icebp  
  402ecc:	dec    esi
  402ecd:	mov    edx,0xde35a363
  402ed2:	iret   
  402ed3:	dec    edi
  402ed4:	shl    BYTE PTR [ecx-0x6c4507a6],0x58
  402edb:	jmp    ebp
  402edd:	mov    dl,0xab
  402edf:	jno    0x402ef9
  402ee1:	push   0xfffffff4
  402ee3:	push   ds
  402ee4:	ins    BYTE PTR es:[edi],dx
  402ee5:	pop    ss
  402ee6:	test   al,0xf2
  402ee8:	arpl   bp,di
  402eea:	(bad)  
  402eeb:	int3   
  402eec:	aad    0xe3
  402eee:	mov    WORD PTR [edi+0x7673bd0d],?
  402ef4:	xchg   ebx,eax
  402ef5:	xor    al,0x20
  402ef7:	push   ds
  402ef8:	div    DWORD PTR [ebx+edx*1-0x7e704537]
  402eff:	add    ebx,esp
  402f01:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  402f03:	dec    edx
  402f04:	or     DWORD PTR [eax+0x484592bb],edx
  402f0a:	shr    bh,0xd4
  402f0d:	jne    0x402ec3
  402f0f:	popa   
  402f10:	sub    esi,DWORD PTR [ebp+0x69d43541]
  402f16:	jge    0x402eff
  402f18:	mov    ecx,DWORD PTR [ebp-0x3a]
  402f1b:	mov    edx,0x78288565
  402f20:	sbb    BYTE PTR [edi],bh
  402f22:	dec    ecx
  402f23:	push   esp
  402f24:	shl    BYTE PTR ds:0xf87585d0,1
  402f2a:	mov    ds:0x1b368288,al
  402f2f:	mov    bl,0xe9
  402f31:	cmp    ch,BYTE PTR [edx+esi*4-0x7117e938]
  402f38:	mov    edi,?
  402f3a:	fisttp WORD PTR [esp+ecx*8+0x5c1aceb8]
  402f41:	fucom  st(3)
  402f43:	(bad)  
  402f44:	hlt    
  402f45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f46:	je     0x402f73
  402f48:	xchg   BYTE PTR [ebp-0x586de58],dh
  402f4e:	rol    DWORD PTR [edx-0x11bed97b],0xc0
  402f55:	mov    esp,0x210cf0bb
  402f5a:	ja     0x402efd
  402f5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f5d:	sub    eax,0x7e4cd26a
  402f62:	lock pop es
  402f64:	ins    BYTE PTR es:[edi],dx
  402f65:	gs scas eax,DWORD PTR es:[edi]
  402f67:	sahf   
  402f68:	pop    eax
  402f69:	and    DWORD PTR [esi],ebp
  402f6b:	cmp    eax,0xb5eece76
  402f70:	jbe    0x402f84
  402f72:	dec    edx
  402f73:	xor    eax,DWORD PTR [edx]
  402f75:	sub    BYTE PTR ds:0x747148f8,dl
  402f7b:	inc    edi
  402f7c:	xchg   DWORD PTR [ebp+0x1c846c33],eax
  402f82:	dec    ebp
  402f83:	pop    ebx
  402f84:	jmp    0x9506:0xf2dae628
  402f8b:	mov    dh,0xbf
  402f8d:	in     al,dx
  402f8e:	adc    al,0x6c
  402f90:	push   cs
  402f91:	add    ah,0x75
  402f94:	fwait
  402f95:	pop    edx
  402f96:	std    
  402f97:	inc    edx
  402f98:	xor    edi,ebx
  402f9a:	xor    dl,dl
  402f9c:	fstp   TBYTE PTR [ebp-0x3ed7b93e]
  402fa2:	arpl   WORD PTR [ebp-0x8],si
  402fa5:	ins    DWORD PTR es:[edi],dx
  402fa6:	mov    ds:0xd1f3243d,eax
  402fab:	cdq    
  402fac:	test   al,0x1d
  402fae:	retf   
  402faf:	fmul   DWORD PTR [edx-0x17f3d17]
  402fb5:	jnp    0x402f66
  402fb7:	and    edx,DWORD PTR [esi-0x6d]
  402fba:	jo     0x403017
  402fbc:	mov    esp,DWORD PTR [esi+0x46]
  402fbf:	and    DWORD PTR [edi-0x65],ebx
  402fc2:	in     eax,0x8c
  402fc4:	pop    edi
  402fc5:	aam    0xc0
  402fc7:	pop    edi
  402fc8:	push   ebp
  402fc9:	jecxz  0x40302c
  402fcb:	call   0xff67:0x8e267af
  402fd2:	mov    esi,0x83f49755
  402fd7:	mov    al,cl
  402fd9:	hlt    
  402fda:	fild   QWORD PTR [edi-0x31]
  402fdd:	xchg   esi,eax
  402fde:	push   ss
  402fdf:	sub    al,0xa5
  402fe1:	push   eax
  402fe2:	inc    ebp
  402fe3:	lods   eax,DWORD PTR ds:[esi]
  402fe4:	aas    
  402fe5:	inc    ebp
  402fe6:	mov    BYTE PTR [edi+eiz*2],ch
  402fe9:	xchg   esi,eax
  402fea:	dec    ebx
  402feb:	pop    es
  402fec:	aas    
  402fed:	ja     0x403026
  402fef:	rcr    BYTE PTR [esi+edi*4],1
  402ff2:	inc    esp
  402ff3:	or     eax,DWORD PTR ds:0xe6d12989
  402ff9:	dec    edx
  402ffa:	xchg   esi,eax
  402ffb:	fdiv   DWORD PTR [edi+0x7]
  402ffe:	das    
  402fff:	push   cs
  403000:	and    dh,BYTE PTR [eax+0x259de0c8]
  403006:	push   es
  403007:	or     al,0xef
  403009:	mov    ds:0x16fef526,al
  40300e:	mov    dl,0x23
  403010:	fiadd  DWORD PTR [ebx+0x26]
  403013:	stc    
  403014:	or     al,bl
  403016:	fstp   DWORD PTR [ebp+0x1b]
  403019:	xchg   edx,eax
  40301a:	idiv   DWORD PTR [esi+0x3]
  40301d:	fisttp QWORD PTR [eax-0x13]
  403020:	dec    ecx
  403021:	pop    esp
  403022:	popf   
  403023:	(bad)  
  403025:	xchg   ch,bh
  403027:	call   0x17ea9ae6
  40302c:	(bad)  
  40302d:	lahf   
  40302e:	inc    ecx
  40302f:	(bad)  
  403030:	jbe    0x403071
  403032:	jo     0x402ff0
  403034:	hlt    
  403035:	sti    
  403036:	aad    0x70
  403038:	pop    eax
  403039:	test   DWORD PTR [esi],0x8ad38e00
  40303f:	fs jne 0x403046
  403042:	cs cli 
  403044:	cmp    esi,DWORD PTR [edx-0x37]
  403047:	mov    ds,WORD PTR [eax]
  403049:	xchg   edi,eax
  40304a:	daa    
  40304b:	into   
  40304c:	add    al,0x69
  40304e:	pop    ss
  40304f:	xchg   esp,eax
  403050:	popf   
  403051:	sahf   
  403052:	add    dh,BYTE PTR ds:0x3ac47a08
  403058:	dec    ebp
  403059:	sbb    DWORD PTR [edx+0x2e],ecx
  40305c:	jnp    0x403068
  40305e:	jno    0x40309e
  403060:	mov    eax,ds:0x44a3914f
  403065:	pop    edx
  403066:	inc    ebp
  403067:	mov    bh,bl
  403069:	out    0x46,eax
  40306b:	or     bh,BYTE PTR [ebx-0x4e]
  40306e:	jo     0x403007
  403070:	(bad)  
  403071:	sub    ebp,DWORD PTR [ebx-0xfca0db1]
  403077:	sub    ecx,ecx
  403079:	adc    bh,BYTE PTR [ebp-0x78c829da]
  40307f:	xchg   BYTE PTR [ebx],al
  403081:	and    ah,ch
  403083:	test   al,0x64
  403085:	shr    eax,1
  403087:	fisubr DWORD PTR [edx]
  403089:	(bad)  [ebx+edi*1]
  40308c:	xchg   DWORD PTR [ebx],ebp
  40308e:	and    ch,BYTE PTR [ebx+0x2a]
  403091:	jmp    0xea0ee623
  403096:	sahf   
  403097:	fcomi  st,st(0)
  403099:	popa   
  40309a:	sub    BYTE PTR [ebx+ebx*2],0x10
  40309e:	xor    BYTE PTR ds:0xd3d32c5e,bh
  4030a4:	add    DWORD PTR [ecx],edi
  4030a6:	ror    BYTE PTR [ebp-0x4e77590e],1
  4030ac:	push   ecx
  4030ad:	xor    eax,0x8c8cff32
  4030b2:	inc    esp
  4030b3:	or     ah,BYTE PTR [ebx]
  4030b5:	jb     0x4030f3
  4030b7:	cmp    BYTE PTR [ebx],bl
  4030b9:	add    BYTE PTR [eax+0x294ba203],0xa4
  4030c0:	arpl   WORD PTR [edi],sp
  4030c2:	pop    es
  4030c3:	xor    al,0xbf
  4030c5:	mov    bl,0x35
  4030c7:	rcr    BYTE PTR [ecx+0x75],1
  4030ca:	and    ecx,ebp
  4030cc:	push   ss
  4030cd:	mov    ds:0x2d952e17,eax
  4030d2:	and    al,0xe2
  4030d4:	cli    
  4030d5:	out    0x19,eax
  4030d7:	pushf  
  4030d8:	mov    cl,0xc6
  4030da:	or     eax,0xe43d8890
  4030df:	fwait
  4030e0:	adc    eax,0xbf5f2f59
  4030e5:	in     eax,0x77
  4030e7:	adc    eax,0xc00a8ba
  4030ec:	int    0x83
  4030ee:	sbb    DWORD PTR ds:[eax+0x79],ebx
  4030f2:	stc    
  4030f3:	retf   0x25b6
  4030f6:	jno    0x403162
  4030f8:	cmp    BYTE PTR [eax-0x7fe5cedd],bl
  4030fe:	pop    edi
  4030ff:	jnp    0x4030d3
  403101:	ret    0xc4c5
  403104:	ds mov edi,0x229a3536
  40310a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40310b:	xor    DWORD PTR [esi],eax
  40310d:	sbb    eax,DWORD PTR [edx-0x7c]
  403110:	fbld   TBYTE PTR [edi]
  403112:	and    al,0x3c
  403114:	mov    edx,DWORD PTR [eax-0x2f6757fa]
  40311a:	push   ecx
  40311b:	scas   al,BYTE PTR es:[edi]
  40311c:	aas    
  40311d:	daa    
  40311e:	fsubr  QWORD PTR [eax-0x4b65e4a8]
  403124:	aas    
  403125:	popa   
  403126:	cmp    esi,DWORD PTR [edx]
  403128:	inc    edi
  403129:	or     DWORD PTR ds:0xfa06c0f4,0xffffffd1
  403130:	shr    DWORD PTR [esi],0x42
  403133:	and    al,0x6f
  403135:	jecxz  0x403186
  403137:	clc    
  403138:	daa    
  403139:	scas   al,BYTE PTR es:[edi]
  40313a:	out    0x9c,al
  40313c:	icebp  
  40313d:	mov    eax,ds:0x58ee5ed9
  403142:	push   esi
  403143:	add    BYTE PTR [ecx+0x3d16a9c8],dl
  403149:	and    eax,0xda8a36e5
  40314e:	(bad)  
  40314f:	adc    cl,ah
  403151:	mov    edi,0xa82331fd
  403156:	popf   
  403157:	in     eax,dx
  403158:	sbb    esi,DWORD PTR [esi+eax*2+0x5ccb66d5]
  40315f:	sbb    ch,ch
  403161:	shl    BYTE PTR [edx-0x51],1
  403164:	in     eax,dx
  403165:	nop
  403166:	adc    BYTE PTR [ebp-0x32],al
  403169:	enter  0x3eee,0x68
  40316d:	adc    edi,DWORD PTR [esi+0x5]
  403170:	pop    edi
  403171:	in     eax,dx
  403172:	loope  0x4030fb
  403174:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403175:	pop    eax
  403176:	imul   ecx,DWORD PTR ds:0x78794a08,0xffffffba
  40317d:	adc    ebx,ebp
  40317f:	and    dl,BYTE PTR gs:[ebx-0x3f79ba4a]
  403186:	adc    cl,BYTE PTR [eax-0x3a]
  403189:	dec    eax
  40318a:	jne    0x403150
  40318c:	add    DWORD PTR [ebp-0xdecec2a],eax
  403192:	xchg   bl,dh
  403194:	push   ebp
  403195:	or     dl,BYTE PTR [edi]
  403197:	out    0xae,al
  403199:	stos   DWORD PTR es:[edi],eax
  40319a:	stos   DWORD PTR es:[edi],eax
  40319b:	(bad)  
  40319c:	pop    DWORD PTR ds:0x8e7b59a9
  4031a2:	das    
  4031a3:	jp     0x403156
  4031a5:	fnstsw WORD PTR [edx+0x6a8d6dc8]
  4031ab:	mov    ds:0x6c923d9e,eax
  4031b0:	popa   
  4031b1:	lock inc ebp
  4031b3:	jmp    0x1038:0x739c53e
  4031ba:	push   edi
  4031bb:	rcr    ch,cl
  4031bd:	loop   0x403144
  4031bf:	fimul  DWORD PTR [ebx]
  4031c1:	dec    eax
  4031c2:	cmc    
  4031c3:	stos   DWORD PTR es:[edi],eax
  4031c4:	or     dl,bl
  4031c6:	popa   
  4031c7:	add    esp,0x7aebd7c6
  4031cd:	cmp    BYTE PTR [esi+0x56d0eb36],ah
  4031d3:	jmp    ebx
  4031d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031d6:	cs mov bh,0x10
  4031d9:	sqrtps xmm4,XMMWORD PTR [esp+ecx*4]
  4031dd:	add    ebp,DWORD PTR [eax-0x4e]
  4031e0:	stos   BYTE PTR es:[edi],al
  4031e1:	mov    ebp,0x6a71233d
  4031e6:	adc    DWORD PTR [eax+0x72],ebp
  4031e9:	je     0x4031ba
  4031eb:	jecxz  0x403255
  4031ed:	fcom   QWORD PTR [esi-0x20]
  4031f0:	cld    
  4031f1:	sub    BYTE PTR [ebp-0x5077a5bb],cl
  4031f7:	nop
  4031f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031f9:	inc    eax
  4031fa:	push   esp
  4031fb:	push   cs
  4031fc:	fwait
  4031fd:	(bad)  
  4031fe:	lea    esp,[esi+0x1b]
  403201:	int    0x75
  403203:	es (bad) 
  403205:	bound  eax,QWORD PTR [esi]
  403207:	adc    edx,DWORD PTR [ecx]
  403209:	aaa    
  40320a:	stos   DWORD PTR es:[edi],eax
  40320b:	jno    0x40324a
  40320d:	hlt    
  40320e:	push   0x46bdadfd
  403213:	sub    al,0x52
  403215:	cwde   
  403216:	sub    BYTE PTR [ebx-0x70],bh
  403219:	scas   al,BYTE PTR es:[edi]
  40321a:	mov    DWORD PTR [esi+0x503ebf42],ecx
  403220:	scas   al,BYTE PTR es:[edi]
  403221:	pop    ecx
  403222:	fcom   st(4)
  403224:	sbb    ecx,esi
  403226:	std    
  403227:	test   DWORD PTR [ecx],esp
  403229:	daa    
  40322a:	repz push 0x77
  40322d:	jle    0x4031de
  40322f:	es inc edx
  403231:	jle    0x403211
  403233:	mov    eax,es
  403235:	jnp    0x4032a9
  403237:	repz inc eax
  403239:	or     DWORD PTR [edi+0x27],ebx
  40323c:	xchg   ebp,eax
  40323d:	lahf   
  40323e:	xchg   ecx,eax
  40323f:	xchg   esi,eax
  403240:	jecxz  0x403296
  403242:	aad    0x43
  403244:	dec    esi
  403245:	repz add DWORD PTR [eax-0x7a],esi
  403249:	add    DWORD PTR [ebx+0x12],esi
  40324c:	and    dh,BYTE PTR [edi-0x485c2b45]
  403252:	sahf   
  403253:	jbe    0x4031d6
  403255:	push   0x27
  403257:	dec    esp
  403258:	cmp    BYTE PTR [ebx],cl
  40325a:	push   ecx
  40325b:	aam    0xbc
  40325d:	sbb    bl,BYTE PTR [ebx+0x3b]
  403260:	in     eax,0x30
  403262:	sbb    eax,0xa45d3dc2
  403267:	iret   
  403268:	(bad)  
  403269:	icebp  
  40326a:	mov    al,0x92
  40326c:	mov    DWORD PTR [edi],edi
  40326e:	aaa    
  40326f:	lods   eax,DWORD PTR ds:[esi]
  403270:	lahf   
  403271:	mov    esi,0xe55639a7
  403276:	push   ecx
  403277:	or     al,0xc
  403279:	and    DWORD PTR [edx],0xffffff92
  40327c:	and    al,bl
  40327e:	sbb    ecx,DWORD PTR [edx]
  403280:	stos   DWORD PTR es:[edi],eax
  403281:	lea    eax,[eax]
  403283:	dec    esi
  403284:	into   
  403285:	pop    es
  403286:	test   cl,cl
  403288:	jecxz  0x403275
  40328a:	sbb    DWORD PTR [edx+0x4f],esp
  40328d:	jge    0x403243
  40328f:	jnp    0x403292
  403291:	xchg   edi,eax
  403292:	fstp   QWORD PTR [ebp+0x5459a823]
  403298:	adc    BYTE PTR [eax-0x3d],ch
  40329b:	popa   
  40329c:	xor    edx,eax
  40329e:	adc    dh,BYTE PTR [eax]
  4032a0:	es sbb edi,esi
  4032a3:	fs jne 0x403233
  4032a6:	call   DWORD PTR [eax]
  4032a8:	outs   dx,BYTE PTR ds:[esi]
  4032a9:	push   0x255a6ec5
  4032ae:	sub    eax,0xe2de2b1b
  4032b3:	and    al,0xaf
  4032b5:	mov    al,BYTE PTR [eax-0x336cc025]
  4032bb:	inc    edx
  4032bc:	loopne 0x40326d
  4032be:	js     0x4032ed
  4032c0:	add    ecx,DWORD PTR [ebx-0x4b]
  4032c3:	xchg   ebx,eax
  4032c4:	adc    al,0xb2
  4032c6:	sbb    BYTE PTR [ebx-0x8553b8b],bl
  4032cc:	pop    ebx
  4032cd:	add    eax,0xfa1efc9
  4032d2:	into   
  4032d3:	lods   al,BYTE PTR ds:[esi]
  4032d4:	aas    
  4032d5:	dec    ebx
  4032d6:	sbb    BYTE PTR ds:0x3a285fc6,al
  4032dc:	jns    0x4032ad
  4032de:	and    ebp,ecx
  4032e0:	inc    ebp
  4032e1:	hlt    
  4032e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032e3:	lods   al,BYTE PTR ds:[esi]
  4032e4:	jecxz  0x403345
  4032e6:	adc    ah,BYTE PTR [ebx-0x7e]
  4032e9:	jb     0x40330a
  4032eb:	inc    esp
  4032ec:	ins    DWORD PTR es:[edi],dx
  4032ed:	lahf   
  4032ee:	jno    0x403296
  4032f0:	jg     0x40331f
  4032f2:	outs   dx,BYTE PTR ds:[esi]
  4032f3:	mov    ecx,0x2de846a4
  4032f8:	pop    ecx
  4032f9:	not    DWORD PTR [edx+esi*1]
  4032fc:	cmp    DWORD PTR [eax+0x655bc3e8],0xffffffbd
  403303:	test   eax,0x37063637
  403308:	mov    DWORD PTR [ecx-0x58],edi
  40330b:	clc    
  40330c:	call   0x51c3c614
  403311:	pop    ecx
  403312:	dec    eax
  403313:	lds    edi,FWORD PTR [edx+0x60]
  403316:	pop    ebx
  403317:	xchg   BYTE PTR [ecx],ch
  403319:	out    0x10,al
  40331b:	dec    ebp
  40331c:	cmp    DWORD PTR [ebp+ebx*1+0x5d],esi
  403320:	lods   eax,DWORD PTR ds:[esi]
  403321:	xchg   esi,eax
  403322:	dec    ebx
  403323:	neg    DWORD PTR [ebp+0x22]
  403326:	nop
  403327:	cld    
  403328:	jge    0x4032c1
  40332a:	mov    fs:0x7b2f3076,al
  403330:	sbb    eax,0xf71fec67
  403335:	fadd   st,st(0)
  403337:	aad    0x56
  403339:	cwde   
  40333a:	fcom   st(2)
  40333c:	inc    esi
  40333d:	pop    esi
  40333e:	nop
  40333f:	call   0xeb44:0xc2fe979
  403346:	popa   
  403347:	add    BYTE PTR [eax+0x7c],cl
  40334a:	pop    esp
  40334b:	ss sub esp,edx
  40334e:	nop
  40334f:	fsub   st,st(1)
  403351:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403352:	push   esi
  403353:	popf   
  403354:	jno    0x40330e
  403356:	and    eax,0xb94fc226
  40335b:	inc    ebx
  40335c:	popf   
  40335d:	fmul   DWORD PTR [edi+0x5e]
  403360:	loope  0x4032e8
  403362:	div    DWORD PTR ds:0x162c66bf
  403368:	sub    eax,0xba9c45c4
  40336d:	fistp  QWORD PTR [ebp-0x4392bc13]
  403373:	dec    esp
  403374:	mov    ebp,0x1bc29b1b
  403379:	lods   al,BYTE PTR ds:[esi]
  40337a:	int    0xc7
  40337c:	or     edi,DWORD PTR [eax+edi*4+0x384b588e]
  403383:	xchg   DWORD PTR [edx],edx
  403385:	test   esi,esi
  403387:	test   BYTE PTR [esi+0x554bff29],dl
  40338d:	cli    
  40338e:	dec    esi
  40338f:	fild   DWORD PTR [ebx]
  403391:	xchg   BYTE PTR [ecx-0x61235069],bl
  403397:	cdq    
  403398:	mov    ah,0xfa
  40339a:	in     al,0xd2
  40339c:	adc    eax,0xb8fd6ede
  4033a1:	aad    0x68
  4033a3:	fwait
  4033a4:	out    dx,eax
  4033a5:	inc    esi
  4033a6:	sbb    eax,0x87914e4d
  4033ab:	push   ss
  4033ac:	lods   al,BYTE PTR ds:[esi]
  4033ad:	mov    dl,dh
  4033af:	arpl   bp,cx
  4033b1:	imul   edx,DWORD PTR [ebp-0x6c471cc6],0x44
  4033b8:	jp     0x40337c
  4033ba:	lahf   
  4033bb:	inc    edx
  4033bc:	aaa    
  4033bd:	add    BYTE PTR [edi],ah
  4033bf:	test   al,0xee
  4033c1:	xor    eax,0x8bc1dbe5
  4033c6:	(bad)
  4033c9:	xor    BYTE PTR [ebx+0x2a8f799b],al
  4033cf:	lea    ebp,[eax+0x8]
  4033d2:	inc    ecx
  4033d3:	mov    edx,0x3e98ea8b
  4033d8:	out    dx,eax
  4033d9:	enter  0x11e0,0x16
  4033dd:	popa   
  4033de:	xor    BYTE PTR [eax-0x68],bl
  4033e1:	push   ds
  4033e2:	xor    DWORD PTR [edi+0x73],ebx
  4033e5:	jle    0x4033d7
  4033e7:	jg     0x40343c
  4033e9:	fdiv   st(1),st
  4033eb:	mov    ds:0xba6c204d,eax
  4033f0:	adc    eax,0x96183a2a
  4033f5:	pop    es
  4033f6:	jge    0x4033bd
  4033f8:	sub    al,0xb3
  4033fa:	imul   ecx,DWORD PTR es:[eax],0x1ac9514a
  403401:	stos   BYTE PTR es:[edi],al
  403402:	mov    bl,0xbe
  403404:	mov    ecx,0x9378bb69
  403409:	int    0xa
  40340b:	lods   al,BYTE PTR ds:[esi]
  40340c:	rcr    DWORD PTR [ebp+0x35238f36],1
  403412:	lods   al,BYTE PTR ds:[esi]
  403413:	in     eax,0x32
  403415:	push   esp
  403416:	inc    edx
  403417:	push   ebx
  403418:	pop    ecx
  403419:	daa    
  40341a:	or     ebp,DWORD PTR [esi-0x3b]
  40341d:	add    eax,esi
  40341f:	sbb    DWORD PTR [ecx+0x40a81937],ebp
  403425:	inc    edx
  403426:	int3   
  403427:	pop    es
  403428:	fs ret 0xf7c2
  40342c:	jmp    0x634a:0xa6bb2e7
  403433:	xor    edx,DWORD PTR [edx]
  403435:	mov    ebx,0x1680af62
  40343a:	fnstsw WORD PTR [eax+0x7eeebda6]
  403440:	jns    0x4034af
  403442:	ja     0x40345c
  403444:	lock ins BYTE PTR es:[edi],dx
  403446:	outs   dx,DWORD PTR ds:[esi]
  403447:	xchg   DWORD PTR [edx],ecx
  403449:	in     eax,dx
  40344a:	test   DWORD PTR [edi+0x3f7bb975],edi
  403450:	ins    BYTE PTR es:[edi],dx
  403451:	adc    DWORD PTR es:[esi],ecx
  403454:	inc    ecx
  403455:	dec    ecx
  403456:	into   
  403457:	into   
  403458:	test   esp,esp
  40345a:	jno    0x4034b6
  40345c:	ror    DWORD PTR [edi-0x10],1
  40345f:	ret    0x5ca
  403462:	xchg   ecx,eax
  403463:	mov    ds:0xf142f0ee,al
  403468:	dec    BYTE PTR [ebx+0x52]
  40346b:	dec    edx
  40346c:	xchg   edx,eax
  40346d:	out    dx,al
  40346e:	data16 jnp 0x4034e1
  403471:	(bad)  
  403472:	xlat   BYTE PTR ds:[ebx]
  403473:	and    bl,BYTE PTR [edi-0x10]
  403476:	mov    ah,BYTE PTR [edi]
  403478:	or     al,0x6f
  40347a:	mov    ds:0xa15fb9cb,al
  40347f:	fsubr  QWORD PTR ss:[ebx-0x7e4e41e0]
  403486:	add    dh,BYTE PTR [eax]
  403488:	pop    ds
  403489:	xor    BYTE PTR [edx],bl
  40348b:	jle    0x4034d6
  40348d:	outs   dx,BYTE PTR ds:[esi]
  40348e:	outs   dx,BYTE PTR ds:[esi]
  40348f:	stos   DWORD PTR es:[edi],eax
  403490:	mov    al,0xaa
  403492:	aaa    
  403493:	xchg   ebx,eax
  403494:	and    DWORD PTR [esi-0x4e],ebp
  403497:	and    ecx,DWORD PTR [eax+0xf83bbc9]
  40349d:	test   eax,0x3f2a138c
  4034a2:	xchg   ebx,eax
  4034a3:	pushf  
  4034a4:	sub    bh,al
  4034a6:	jae    0x403503
  4034a8:	mov    WORD PTR [eax+0x7c],?
  4034ab:	mov    al,ds:0x642b6e60
  4034b0:	dec    esi
  4034b1:	les    eax,FWORD PTR [esi+0x38]
  4034b4:	pop    es
  4034b5:	dec    esp
  4034b6:	pop    edi
  4034b7:	add    al,0xc6
  4034b9:	stos   DWORD PTR es:[edi],eax
  4034ba:	repnz push esp
  4034bc:	push   esp
  4034bd:	adc    BYTE PTR [esi+0x32131cdb],ch
  4034c3:	inc    esi
  4034c4:	push   esp
  4034c5:	popf   
  4034c6:	pop    eax
  4034c7:	ja     0x4034e5
  4034c9:	mov    esi,0xfa31497c
  4034ce:	clc    
  4034cf:	in     al,dx
  4034d0:	mov    ebp,0x3d4a572d
  4034d5:	enter  0x33f4,0x42
  4034d9:	hlt    
  4034da:	iret   
  4034db:	and    BYTE PTR [ebx-0x4617ed74],bl
  4034e1:	ja     0x403487
  4034e3:	mov    esi,0x78f8f79
  4034e8:	paddsw mm4,QWORD PTR [ecx+0x33dd7652]
  4034ef:	icebp  
  4034f0:	add    DWORD PTR [edi+0x3b1ee871],esi
  4034f6:	addr16 dec esi
  4034f8:	and    bl,BYTE PTR [eax]
  4034fa:	or     esi,DWORD PTR [ebx]
  4034fc:	jo     0x403509
  4034fe:	push   eax
  4034ff:	bound  eax,QWORD PTR [ebp-0x7e9c8ba2]
  403505:	aaa    
  403506:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403507:	inc    ecx
  403508:	lahf   
  403509:	inc    ebp
  40350a:	sahf   
  40350b:	test   DWORD PTR [eax-0x38d3bdb8],esp
  403511:	ror    ebp,1
  403513:	fwait
  403514:	repz cdq 
  403516:	push   es
  403517:	(bad)  
  403519:	fsubr  st,st(5)
  40351b:	jmp    0x40357b
  40351d:	cmp    eax,0xbc4d025
  403522:	mov    ds:0x85dc59bd,eax
  403527:	cmp    DWORD PTR [ecx+ebx*8-0x474ce80f],esp
  40352e:	pop    edx
  40352f:	pop    eax
  403530:	aaa    
  403531:	cmp    bh,BYTE PTR [edx]
  403533:	dec    esp
  403534:	push   0xffffffbc
  403536:	in     eax,0xb1
  403538:	add    eax,0x7f9f482f
  40353d:	sbb    BYTE PTR [eax+0x4c],ch
  403540:	xchg   ebp,eax
  403541:	or     DWORD PTR [ebp+0xa],ebp
  403544:	mov    edx,0x5f5310ef
  403549:	adc    DWORD PTR [eax],0x6a3a1684
  40354f:	and    ebp,esp
  403551:	cmp    DWORD PTR [edx],0x59
  403554:	mov    dl,0xb0
  403556:	or     cl,BYTE PTR ds:0xee6ee782
  40355c:	je     0x4034f0
  40355e:	mov    ch,0x2d
  403560:	fnstsw WORD PTR [edi]
  403562:	inc    edi
  403563:	repz mov edx,0xcdc5f87c
  403569:	push   edx
  40356a:	aad    0x8e
  40356c:	sbb    eax,0x1b39024a
  403571:	push   es
  403572:	fld    QWORD PTR [edx-0x3edaba5f]
  403578:	push   es
  403579:	dec    BYTE PTR [eax+0x194d8b70]
  40357f:	call   0xc9ed:0x9c97b67b
  403586:	mov    eax,0xf4f9705a
  40358b:	inc    esp
  40358c:	lods   al,BYTE PTR ds:[esi]
  40358d:	sub    BYTE PTR [esi+ecx*2],cl
  403590:	in     al,0x7f
  403592:	fs fcmovne st,st(3)
  403595:	in     eax,0x13
  403597:	shl    DWORD PTR [edi-0x25],1
  40359a:	fsubr  st,st(3)
  40359c:	scas   eax,DWORD PTR es:[edi]
  40359d:	cmp    ch,BYTE PTR gs:[edi-0x4e]
  4035a1:	sbb    eax,0xb60d950e
  4035a6:	inc    ebp
  4035a7:	inc    BYTE PTR [eax-0x2d]
  4035aa:	add    BYTE PTR [ebp-0x41],0xe1
  4035ae:	sar    DWORD PTR [edx+0x279cb136],0x25
  4035b5:	and    eax,0x66a4114d
  4035ba:	pop    esp
  4035bb:	push   eax
  4035bc:	ret    
  4035bd:	(bad)  
  4035be:	loope  0x403562
  4035c0:	in     eax,dx
  4035c1:	out    0x7c,eax
  4035c3:	cmp    dh,BYTE PTR [esp+eax*2-0x52]
  4035c7:	ror    BYTE PTR [ecx+0x7885f11f],1
  4035cd:	sub    eax,0xed455561
  4035d2:	add    BYTE PTR [ecx+0x3a],ch
  4035d5:	or     ebp,DWORD PTR [esi+edi*2+0x7200ef03]
  4035dc:	retf   0xb4a6
  4035df:	out    0xf3,eax
  4035e1:	inc    edx
  4035e2:	inc    ebp
  4035e3:	call   0x4b1c:0x77714d64
  4035ea:	dec    edx
  4035eb:	out    dx,al
  4035ec:	xchg   eax,edx
  4035ee:	das    
  4035ef:	mov    esi,0x199bb990
  4035f4:	jns    0x403577
  4035f6:	xchg   esi,eax
  4035f7:	pop    ebp
  4035f8:	inc    edi
  4035f9:	(bad)  
  4035fa:	popf   
  4035fb:	imul   ebp,DWORD PTR [eax+0x47],0xffffffb9
  4035ff:	shl    DWORD PTR [esi],cl
  403601:	push   ebx
  403602:	sub    al,0xe1
  403604:	pop    edx
  403605:	push   ecx
  403606:	dec    edi
  403607:	and    DWORD PTR [eax],ebx
  403609:	push   ss
  40360a:	sbb    BYTE PTR [ecx-0x2a9800e2],dl
  403610:	sbb    eax,0x5b1895d7
  403615:	inc    edx
  403616:	outs   dx,DWORD PTR ds:[esi]
  403617:	mov    esp,0x2766d35f
  40361c:	and    DWORD PTR fs:[ecx-0x5d],esp
  403620:	loop   0x40367d
  403622:	mov    al,ds:0x7c204e07
  403627:	test   eax,0x4f76dc1c
  40362c:	pop    gs
  40362e:	mov    ebx,0x6be1003c
  403633:	ror    DWORD PTR [eax],cl
  403635:	(bad)  
  403637:	cmp    eax,DWORD PTR [edi-0x8]
  40363a:	test   eax,0x2192e4f9
  40363f:	jb     0x4035fd
  403641:	cmp    bh,al
  403643:	aaa    
  403644:	repz mov dl,0xe3
  403647:	xor    bl,BYTE PTR ds:0x58e49d76
  40364d:	int3   
  40364e:	and    al,0x25
  403650:	sahf   
  403651:	sar    edi,1
  403653:	cdq    
  403654:	push   edi
  403655:	les    edi,FWORD PTR [edi-0x6d9cc1e9]
  40365b:	fsubr  DWORD PTR ds:0xe8ab9856
  403661:	lea    eax,[ecx-0x2e063ab7]
  403667:	(bad)  
  403668:	out    0x30,eax
  40366a:	mov    edx,ebp
  40366c:	inc    ebp
  40366d:	jl     0x403606
  40366f:	test   DWORD PTR [ecx+edx*4+0xb18aa6d],edi
  403676:	aas    
  403677:	ficomp DWORD PTR [edx-0x73c26795]
  40367d:	ds stos DWORD PTR es:[edi],eax
  40367f:	or     al,0x54
  403681:	stos   WORD PTR es:[edi],ax
  403683:	loopne 0x403659
  403685:	fwait
  403686:	stos   DWORD PTR es:[edi],eax
  403687:	cmp    edx,DWORD PTR [ebx+0xf]
  40368a:	call   0x866e:0xa97b73a8
  403691:	mov    dh,BYTE PTR ds:0x80e6e889
  403697:	aas    
  403698:	rcr    edi,cl
  40369a:	mov    bh,0x21
  40369c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40369d:	(bad)  
  40369e:	mov    ebp,0x534b14a6
  4036a3:	inc    ebp
  4036a4:	mov    ah,ch
  4036a6:	out    dx,eax
  4036a7:	popf   
  4036a8:	push   edi
  4036a9:	vmulss xmm0,xmm0,DWORD PTR [ebx]
  4036ad:	dec    eax
  4036ae:	bound  ebp,QWORD PTR [edx+0x47dd835]
  4036b4:	jmp    0x40370d
  4036b6:	xchg   ecx,ebp
  4036b8:	(bad)  
  4036b9:	div    ecx
  4036bb:	out    0x6a,al
  4036bd:	pop    ebx
  4036be:	adc    al,0x9f
  4036c0:	test   al,0x47
  4036c2:	call   0xc30b6e0b
  4036c7:	dec    esp
  4036c8:	sub    al,0xf5
  4036ca:	icebp  
  4036cb:	mov    dl,BYTE PTR [ecx+0x78]
  4036ce:	lods   al,BYTE PTR ds:[esi]
  4036cf:	repz shl eax,1
  4036d2:	jle    0x4036fd
  4036d4:	jno    0x4036ea
  4036d6:	in     al,dx
  4036d7:	ds ja  0x4036e9
  4036da:	in     eax,0x78
  4036dc:	retf   0xf383
  4036df:	imul   edx,ebx,0x5ae35c4d
  4036e5:	in     al,0xa7
  4036e7:	xchg   edx,eax
  4036e8:	dec    ecx
  4036e9:	push   ecx
  4036ea:	out    0xf7,al
  4036ec:	pop    esi
  4036ed:	inc    ebp
  4036ee:	popf   
  4036ef:	adc    DWORD PTR [ebx+0x49],0xffffffb4
  4036f3:	cmp    DWORD PTR [ebp-0x2890ec2b],ebp
  4036f9:	std    
  4036fa:	jae    0x40367f
  4036fc:	pop    es
  4036fd:	bnd jne 0x4036ca
  403700:	fs fwait
  403702:	stc    
  403703:	rcl    ecx,1
  403705:	adc    eax,0xb43953eb
  40370a:	fstp   DWORD PTR [ebx+0x23]
  40370d:	clc    
  40370e:	test   BYTE PTR [esi-0x10],0xbe
  403712:	mov    eax,ds:0x4e8f513e
  403717:	popf   
  403718:	lock pop esi
  40371a:	scas   al,BYTE PTR es:[edi]
  40371b:	xor    DWORD PTR [ecx+ecx*2-0x36],eax
  40371f:	bound  ecx,QWORD PTR [ebx-0x37]
  403722:	lahf   
  403723:	mov    es,ebp
  403725:	ins    DWORD PTR es:[edi],dx
  403726:	leave  
  403727:	and    dh,BYTE PTR [eax]
  403729:	lahf   
  40372a:	mov    bh,0xba
  40372c:	sti    
  40372d:	call   0x7d6ad6d
  403732:	ret    
  403733:	int3   
  403734:	sbb    eax,0x168b62f7
  403739:	dec    edx
  40373a:	inc    eax
  40373b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40373c:	inc    ecx
  40373d:	int    0x4a
  40373f:	sbb    al,0x66
  403741:	lock ss retf 
  403744:	push   edx
  403745:	sub    BYTE PTR [eax+eiz*2+0x38a07270],dl
  40374c:	jo     0x4036de
  40374e:	and    al,0x70
  403750:	mov    bh,0xa7
  403752:	dec    ebp
  403753:	mov    esi,0x5035d408
  403758:	mov    DWORD PTR [ebx+0x5f],0x2f9d7303
  40375f:	dec    edi
  403760:	cmp    al,0x83
  403762:	sub    eax,0xcab4b40b
  403767:	jmp    0x4036f5
  403769:	call   0x9b38c869
  40376e:	inc    esi
  40376f:	xchg   ecx,eax
  403770:	mov    ah,0xe6
  403772:	je     0x40375f
  403774:	mov    bl,ah
  403776:	fcom   DWORD PTR [edi+0x1c725d8f]
  40377c:	jns    0x4037ca
  40377e:	mov    ebx,0x7d3cee84
  403783:	(bad)  
  403784:	jbe    0x4037b8
  403786:	xchg   DWORD PTR [edx-0x7556af5b],esi
  40378c:	dec    edi
  40378d:	mov    esi,0xae21abf5
  403792:	pusha  
  403793:	call   0xeefa:0xbe15b65d
  40379a:	fnstenv [ebx]
  40379c:	inc    ecx
  40379d:	xlat   BYTE PTR ds:[ebx]
  40379e:	adc    ah,BYTE PTR [ebp-0x6c63ac0d]
  4037a4:	jo     0x4037d7
  4037a6:	arpl   WORD PTR [edx+0x78],sp
  4037a9:	jecxz  0x40376d
  4037ab:	ja     0x403826
  4037ad:	jp     0x4037b8
  4037af:	(bad)  
  4037b0:	out    dx,eax
  4037b1:	cmc    
  4037b2:	sub    DWORD PTR [eax-0x16],edi
  4037b5:	pop    ebx
  4037b6:	(bad)  ss:[esi+0x7930e557]
  4037bd:	xchg   esp,eax
  4037be:	push   es
  4037bf:	jmp    0x4037ff
  4037c1:	mov    eax,0x784704b0
  4037c6:	das    
  4037c7:	sbb    BYTE PTR [ecx+0x2d],0xbd
  4037cb:	mov    ebp,0x8d38f710
  4037d0:	xor    eax,DWORD PTR [edi+0x68]
  4037d3:	repnz adc BYTE PTR [edx-0x1],0xe1
  4037d8:	loope  0x40376b
  4037da:	fs iret 
  4037dc:	fld    QWORD PTR [esi]
  4037de:	cmp    al,0xfa
  4037e0:	push   ebp
  4037e1:	enter  0xc413,0x5e
  4037e5:	push   eax
  4037e6:	inc    edi
  4037e7:	test   al,0x10
  4037e9:	(bad)  
  4037ea:	lods   al,BYTE PTR ds:[esi]
  4037eb:	inc    edx
  4037ec:	mov    al,ds:0x3ca12283
  4037f1:	mov    ecx,0x89d8c5d
  4037f6:	sub    ch,BYTE PTR [ebx+ecx*4+0x59f941e9]
  4037fd:	xchg   esi,eax
  4037fe:	rcl    DWORD PTR [edi],1
  403800:	adc    eax,0x1f8f9e17
  403805:	xor    ch,BYTE PTR [ebp+0x5b]
  403808:	icebp  
  403809:	clc    
  40380a:	aaa    
  40380b:	push   es
  40380c:	pop    ebx
  40380d:	add    eax,0xffffffb6
  403810:	cwde   
  403811:	or     ebp,DWORD PTR [ecx]
  403813:	cli    
  403814:	int3   
  403815:	in     eax,dx
  403816:	mov    edi,0x611bd31f
  40381b:	(bad)  
  40381c:	mov    ch,0x0
  40381e:	mov    eax,ds:0x5afdacce
  403823:	cmp    bh,dh
  403825:	sub    eax,0x907bd914
  40382a:	cmp    BYTE PTR [edi+0xd],0x24
  40382e:	call   0x5ffe9ea9
  403833:	mov    ebx,es
  403835:	push   ebx
  403836:	imul   eax,edx,0x69
  403839:	lahf   
  40383a:	adc    ebp,DWORD PTR [ebx+0x6d]
  40383d:	push   ecx
  40383e:	repnz xchg ecx,eax
  403840:	mov    esp,0x12f3f76c
  403845:	jnp    0x403832
  403847:	cli    
  403848:	jecxz  0x4037fc
  40384a:	aas    
  40384b:	nop
  40384c:	dec    edx
  40384d:	push   cs
  40384e:	push   ecx
  40384f:	mov    ecx,0xaa8d1236
  403854:	ds pop esi
  403856:	mov    ch,0xff
  403858:	fldenv [edi-0x7b]
  40385b:	inc    edi
  40385c:	fisub  WORD PTR [ecx+0x78bc04d]
  403862:	pusha  
  403863:	jl     0x4037e7
  403865:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403866:	xchg   BYTE PTR [ebx],dl
  403868:	mov    BYTE PTR [eax+0x62a15147],cl
  40386e:	popa   
  40386f:	sub    edx,esp
  403871:	jle    0x4038e2
  403873:	or     eax,0xb10023c2
  403878:	sub    BYTE PTR [esi+0x3c21fc8a],0xc8
  40387f:	inc    ebx
  403880:	jb     0x40380e
  403882:	daa    
  403883:	fwait
  403884:	dec    esp
  403885:	ss jmp 0x4038c3
  403888:	xor    eax,DWORD PTR [eax-0x470168c6]
  40388e:	ret    0x4001
  403891:	loopne 0x4038e6
  403893:	and    eax,0x350bed9b
  403898:	clc    
  403899:	aad    0x4a
  40389b:	test   DWORD PTR ds:0x71b4c57,ebx
  4038a1:	int3   
  4038a2:	aam    0xb6
  4038a4:	xor    cl,BYTE PTR [ebx-0x69ead003]
  4038aa:	pop    edi
  4038ab:	pop    esi
  4038ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038ad:	jecxz  0x403891
  4038af:	sahf   
  4038b0:	out    dx,eax
  4038b1:	inc    edi
  4038b2:	iret   
  4038b3:	fistp  WORD PTR [edi-0x7]
  4038b6:	aaa    
  4038b7:	mov    WORD PTR [ecx],gs
  4038b9:	pusha  
  4038ba:	or     al,0xd0
  4038bc:	sbb    BYTE PTR [edx+0x23],dh
  4038bf:	and    edx,DWORD PTR [ecx-0x336eb9b4]
  4038c5:	cmp    esi,0x6dbc8e3a
  4038cb:	fneni(8087 only) 
  4038cd:	dec    esp
  4038ce:	inc    esi
  4038cf:	cwde   
  4038d0:	fistp  WORD PTR [edx-0x2810aace]
  4038d6:	dec    eax
  4038d7:	dec    edx
  4038d8:	add    dh,BYTE PTR [edi+0x44]
  4038db:	je     0x40395a
  4038dd:	outs   dx,BYTE PTR ds:[esi]
  4038de:	out    0x0,eax
  4038e0:	gs shl al,0xac
  4038e4:	jge    0x4038f5
  4038e6:	mov    eax,ds:0xecce333d
  4038eb:	pop    ds
  4038ec:	loopne 0x403937
  4038ee:	hlt    
  4038ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038f0:	scas   al,BYTE PTR es:[edi]
  4038f1:	addr16 sbb al,0x2e
  4038f4:	(bad)  
  4038f5:	add    eax,0xf3fc0c7
  4038fa:	(bad)  
  4038fb:	pop    ebp
  4038fc:	fisubr DWORD PTR [eax-0x5b]
  4038ff:	push   edi
  403900:	sbb    BYTE PTR [esi+0xa09a7c3],bl
  403906:	test   eax,0x2a374380
  40390b:	cmp    BYTE PTR ds:0xe596cbbc,bh
  403911:	jp     0x403922
  403913:	xchg   ebp,eax
  403914:	rcl    BYTE PTR [ecx-0x59],0xd3
  403918:	or     edx,DWORD PTR [ebx]
  40391a:	jbe    0x403923
  40391c:	cli    
  40391d:	retf   0x9668
  403920:	call   0x4986c23a
  403925:	cs jbe 0x4038a8
  403928:	outs   dx,DWORD PTR ds:[esi]
  403929:	popf   
  40392a:	mov    eax,0x51349cfc
  40392f:	jns    0x40394b
  403931:	mov    cl,0x51
  403933:	jb     0x403922
  403935:	push   edx
  403936:	push   edi
  403937:	jno    0x403976
  403939:	adc    esp,edx
  40393b:	sbb    eax,DWORD PTR [ebx+0x468e816b]
  403941:	and    esi,ecx
  403943:	push   ss
  403944:	dec    edx
  403945:	mov    bl,0x12
  403947:	lahf   
  403948:	pop    ds
  403949:	pop    ebp
  40394a:	xor    DWORD PTR [eax],edi
  40394c:	xchg   ecx,eax
  40394d:	push   ecx
  40394e:	mov    cl,0x6b
  403950:	push   edi
  403951:	adc    eax,0x61ccdc54
  403956:	xchg   esp,eax
  403957:	in     al,dx
  403958:	push   esi
  403959:	and    DWORD PTR [edi+0x199ff7df],ebx
  40395f:	fimul  WORD PTR [eax]
  403961:	inc    ebp
  403962:	jmp    0x3918:0x4be7e674
  403969:	cmp    dh,al
  40396b:	leave  
  40396c:	and    ebx,DWORD PTR [edx+eax*8]
  40396f:	es pop edx
  403971:	adc    dh,BYTE PTR [edi+0x5]
  403974:	repz cmp eax,0x1316b24d
  40397a:	mov    edx,0xb359ef78
  40397f:	lea    edx,[ebx+esi*1-0x6efc8f42]
  403986:	ins    DWORD PTR es:[edi],dx
  403987:	mov    cl,0x15
  403989:	pop    esp
  40398a:	ds scas eax,DWORD PTR es:[edi]
  40398c:	ret    0x692b
  40398f:	cmp    cl,BYTE PTR [ebx]
  403991:	cmp    cl,0x13
  403994:	or     eax,0x2b74a36a
  403999:	arpl   bx,di
  40399b:	cs ss mov edi,0xc8bd1eab
  4039a2:	shr    DWORD PTR [eax],0xa6
  4039a5:	jmp    0x40398e
  4039a7:	jmp    0x4039fa
  4039a9:	mov    ds:0x927f0f92,al
  4039ae:	add    al,0xb3
  4039b0:	push   ebx
  4039b1:	jmp    0x94778d9f
  4039b6:	fidiv  WORD PTR [edi+0x2e]
  4039b9:	mov    ebx,0x1c18d1d0
  4039be:	push   0x4d
  4039c0:	in     eax,dx
  4039c1:	int    0x16
  4039c3:	adc    eax,0xd84052a8
  4039c8:	test   eax,0x5f31c69a
  4039cd:	inc    ecx
  4039ce:	sub    al,0x26
  4039d0:	xchg   DWORD PTR [edx+0xe],eax
  4039d3:	pushf  
  4039d4:	cli    
  4039d5:	mov    WORD PTR [edx-0x14ac87cd],gs
  4039db:	fdiv   DWORD PTR [esi+0x21f92bfa]
  4039e1:	mov    gs,WORD PTR [edx-0x58fc9460]
  4039e7:	jnp    0x403a42
  4039e9:	mov    cl,0x29
  4039eb:	adc    eax,0xf55659ad
  4039f0:	lods   al,BYTE PTR ds:[esi]
  4039f1:	popf   
  4039f2:	cwde   
  4039f3:	and    eax,DWORD PTR [ebx+0x125d5748]
  4039f9:	push   eax
  4039fa:	das    
  4039fb:	xor    bh,0xc1
  4039fe:	fwait
  4039ff:	nop
  403a00:	lahf   
  403a01:	bound  ebp,QWORD PTR [ebx+0x22]
  403a04:	outs   dx,BYTE PTR ds:[esi]
  403a05:	pusha  
  403a06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a07:	out    0xb8,al
  403a09:	arpl   WORD PTR [eax-0x788921cd],ax
  403a0f:	test   DWORD PTR [eax+0x6bcf6a6b],edx
  403a15:	rol    DWORD PTR [ecx-0x3],cl
  403a18:	ror    BYTE PTR ds:0xa2ca9776,0x23
  403a1f:	jg     0x403a2e
  403a21:	rcr    BYTE PTR [ebx],1
  403a23:	jne    0x4039ba
  403a25:	jae    0x403a99
  403a27:	ja     0x4039bc
  403a29:	test   al,0xfd
  403a2b:	xor    eax,0xb3bb5e12
  403a30:	and    eax,0xee98a4f3
  403a35:	inc    ebx
  403a36:	dec    ebp
  403a37:	pop    ebx
  403a38:	dec    eax
  403a39:	xchg   bl,bh
  403a3b:	lock js 0x403a57
  403a3e:	mov    WORD PTR [edx-0x61],fs
  403a41:	and    al,BYTE PTR [esi-0x4c]
  403a44:	add    eax,ebp
  403a46:	xor    DWORD PTR [esi],0xffffffb8
  403a49:	cmp    BYTE PTR [ebx],dh
  403a4b:	cmp    ecx,esi
  403a4d:	pop    es
  403a4e:	mov    bl,0x3d
  403a51:	(bad)  
  403a52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a53:	jo     0x403a7a
  403a55:	push   esp
  403a56:	and    eax,0x7f303995
  403a5b:	add    BYTE PTR [ecx+eax*1-0x38029cc8],dh
  403a62:	call   0xdf4e:0xfd030202
  403a69:	or     DWORD PTR [ebp-0x2a1bd605],0xffffffc5
  403a70:	fs sbb al,0xc4
  403a73:	jmp    0xb011f0b6
  403a78:	mov    ebp,DWORD PTR [eax+eax*4+0x3d]
  403a7c:	xchg   esi,eax
  403a7d:	mov    ah,0x50
  403a7f:	out    dx,al
  403a80:	sbb    ecx,DWORD PTR [edi+0x7e]
  403a83:	adc    eax,0x2182e75b
  403a88:	jnp    0x403a21
  403a8a:	and    eax,0x3d24300f
  403a8f:	mov    dh,0xd0
  403a91:	aaa    
  403a92:	sbb    eax,0x56f61507
  403a97:	cld    
  403a98:	mov    al,ds:0x320fd4d7
  403a9d:	ds mov esi,0x5157e6e1
  403aa3:	rcr    DWORD PTR [esi],0xd1
  403aa6:	cmp    eax,0xda1f421a
  403aab:	jle    0x403b01
  403aad:	cmp    edi,esp
  403aaf:	or     ecx,edi
  403ab1:	inc    edi
  403ab2:	fist   DWORD PTR [ebp+0x1]
  403ab5:	dec    edi
  403ab6:	sbb    DWORD PTR [ebp-0x44a8af99],edi
  403abc:	pop    edx
  403abd:	xchg   edx,eax
  403abe:	mov    ah,0x1c
  403ac0:	sbb    esi,edi
  403ac2:	mov    al,0x39
  403ac4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ac5:	ins    DWORD PTR es:[edi],dx
  403ac6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ac7:	dec    ecx
  403ac8:	add    dl,cl
  403aca:	and    BYTE PTR [eax],ah
  403acc:	fidiv  DWORD PTR [esp+eax*4-0x2eb04170]
  403ad3:	pop    ebp
  403ad4:	and    BYTE PTR [eax],bl
  403ad6:	stc    
  403ad7:	lods   eax,DWORD PTR ds:[esi]
  403ad8:	cdq    
  403ad9:	out    dx,al
  403ada:	(bad)  
  403adb:	jo     0x403b4c
  403add:	mov    ds:0xa69663e,ax
  403ae3:	into   
  403ae4:	inc    esi
  403ae5:	les    eax,FWORD PTR [edx+0x61]
  403ae8:	jo     0x403b26
  403aea:	(bad)  
  403aeb:	retf   
  403aec:	hlt    
  403aed:	push   esp
  403aee:	gs xor ah,ah
  403af1:	xchg   edi,eax
  403af2:	push   edi
  403af3:	ja     0x403b47
  403af5:	add    edi,DWORD PTR [ebx-0x5509fb02]
  403afb:	or     esp,DWORD PTR ds:0xd066827e
  403b01:	or     eax,0x240df442
  403b06:	(bad)  
  403b07:	mov    eax,0xb65ee4f1
  403b0c:	add    ch,BYTE PTR [esi+eax*8-0x3c]
  403b10:	int3   
  403b11:	retf   0xba8c
  403b14:	neg    BYTE PTR [esi+0x3c486480]
  403b1a:	in     eax,dx
  403b1b:	leave  
  403b1c:	push   cs
  403b1d:	push   0x3b
  403b1f:	mul    BYTE PTR [eax-0x4656cd46]
  403b25:	inc    eax
  403b26:	ror    dh,1
  403b28:	repz lock xor eax,0xf23e18a6
  403b2f:	inc    ebx
  403b30:	arpl   WORD PTR [ecx+ebx*8+0x40],cx
  403b34:	xor    BYTE PTR [edi+0x6a58b949],bh
  403b3a:	mov    ds:0xc466520a,al
  403b3f:	mov    ecx,0x9916a590
  403b44:	mov    dl,0xac
  403b46:	call   0xf1e7:0xac8d1074
  403b4d:	and    BYTE PTR [edx+0x41],0xf7
  403b51:	push   esp
  403b52:	cli    
  403b53:	outs   dx,DWORD PTR ds:[esi]
  403b54:	stc    
  403b55:	dec    ebp
  403b56:	ret    
  403b57:	leave  
  403b58:	nop
  403b59:	adc    DWORD PTR [edi],ebx
  403b5b:	fbld   TBYTE PTR [edi+0x3cdd492f]
  403b61:	dec    esp
  403b62:	jo     0x403b1c
  403b64:	cmp    edi,ebp
  403b66:	push   ebx
  403b67:	stos   BYTE PTR es:[edi],al
  403b68:	das    
  403b69:	jno    0x403b35
  403b6b:	push   es
  403b6c:	cdq    
  403b6d:	push   esi
  403b6e:	inc    esp
  403b6f:	test   al,0x4a
  403b71:	cdq    
  403b72:	lods   al,BYTE PTR ds:[esi]
  403b73:	dec    ecx
  403b74:	imul   dh
  403b76:	adc    BYTE PTR [esi-0x3],0xa0
  403b7a:	jbe    0x403b16
  403b7c:	ret    0xee0a
  403b7f:	std    
  403b80:	(bad)  
  403b81:	je     0x403b13
  403b83:	ja     0x403bf8
  403b85:	inc    ebx
  403b86:	(bad)  
  403b87:	push   ebx
  403b88:	xchg   si,ax
  403b8a:	stc    
  403b8b:	xchg   ebp,eax
  403b8c:	aas    
  403b8d:	ja     0x403bf2
  403b8f:	push   0xeb121719
  403b94:	inc    ebx
  403b95:	mov    al,ds:0xf0937789
  403b9a:	in     al,0x1d
  403b9c:	pop    ecx
  403b9d:	imul   DWORD PTR [ecx+0x24d7374e]
  403ba3:	push   0x5f
  403ba5:	mov    ebx,0x9329b31a
  403baa:	dec    esp
  403bab:	xor    ebx,DWORD PTR [ecx-0x3d]
  403bae:	fwait
  403baf:	sub    eax,DWORD PTR [edi-0x71201a0a]
  403bb5:	push   edx
  403bb6:	imul   eax,DWORD PTR [esi-0xc50d7e3],0xffffffbc
  403bbd:	add    DWORD PTR [eax],edi
  403bbf:	push   0x7661dc1f
  403bc4:	cmp    dl,BYTE PTR [eax+eax*2+0x3e]
  403bc8:	push   DWORD PTR [eax+0x3d]
  403bcb:	push   cs
  403bcc:	leave  
  403bcd:	push   0xa904775e
  403bd2:	mov    eax,ds:0x434b6e13
  403bd7:	add    ecx,0xffffffbb
  403bda:	xchg   ecx,eax
  403bdb:	stc    
  403bdc:	mov    bl,0x39
  403bde:	or     al,0xd1
  403be0:	and    DWORD PTR [esi+edx*8-0x6498c376],edi
  403be7:	jb     0x403c40
  403be9:	jb     0x403b88
  403beb:	(bad)  
  403bec:	mov    edi,0x1001e188
  403bf1:	popa   
  403bf2:	test   eax,0x4992812e
  403bf7:	mov    cl,0x98
  403bfa:	inc    esp
  403bfb:	mov    eax,0x8168d366
  403c00:	not    BYTE PTR [edx-0x349d2529]
  403c06:	mov    ebx,0xe003d848
  403c0b:	call   0x844d:0x17293f65
  403c12:	dec    ebx
  403c13:	jne    0x403bd9
  403c15:	xor    eax,DWORD PTR [ebp-0x53281dfe]
  403c1b:	cmc    
  403c1c:	test   DWORD PTR [edi+esi*1-0x738c32e2],esi
  403c23:	(bad)  
  403c25:	pusha  
  403c26:	pop    esi
  403c27:	sub    eax,0x5afee39d
  403c2c:	inc    ebx
  403c2d:	cld    
  403c2e:	(bad)  [ecx+0x72]
  403c31:	jmp    0x403c84
  403c33:	test   al,0x2f
  403c35:	xlat   BYTE PTR ds:[ebx]
  403c36:	pushf  
  403c37:	mov    ch,0xae
  403c39:	mov    esp,0xfc256a76
  403c3e:	setle  BYTE PTR [esi-0x6391f008]
  403c45:	repnz push ds
  403c47:	push   cs
  403c48:	jb     0x403c11
  403c4a:	shl    BYTE PTR [edi],1
  403c4c:	in     eax,dx
  403c4d:	pop    DWORD PTR [edi+edi*2+0x3039ee5f]
  403c54:	rdmsr  
  403c56:	xchg   ecx,eax
  403c57:	bts    DWORD PTR [ebx-0x4be38ada],ecx
  403c5e:	jno    0x403be0
  403c60:	dec    eax
  403c61:	dec    esp
  403c62:	jo     0x403beb
  403c64:	jl     0x403c3f
  403c66:	pusha  
  403c67:	stos   DWORD PTR es:[edi],eax
  403c68:	nop
  403c69:	jns    0x403c79
  403c6b:	jmp    0x403bf7
  403c6d:	xchg   DWORD PTR [ebx+0x104b0e90],edi
  403c73:	loope  0x403c30
  403c75:	add    BYTE PTR ds:0xd7d25d58,ah
  403c7b:	inc    esi
  403c7c:	outs   dx,BYTE PTR ds:[esi]
  403c7d:	adc    ebp,DWORD PTR [eax+0x19]
  403c80:	pop    ss
  403c81:	out    0xb6,eax
  403c83:	cdq    
  403c84:	test   BYTE PTR [eax],bl
  403c86:	aam    0x85
  403c88:	xor    al,0xff
  403c8a:	shr    BYTE PTR [ecx],1
  403c8c:	sub    DWORD PTR [ebp-0x4],ebp
  403c8f:	imul   edi,DWORD PTR [ecx-0x1e380e6],0xffffffc7
  403c96:	ficomp WORD PTR [eax+0x5463ae77]
  403c9c:	into   
  403c9d:	xchg   ebp,eax
  403c9e:	out    0xe7,al
  403ca0:	ss jno 0x403c7c
  403ca3:	mov    edi,ebp
  403ca5:	fisubr DWORD PTR [ecx]
  403ca7:	sub    eax,0xaea5e16e
  403cac:	push   ss
  403cad:	(bad)  
  403cae:	jecxz  0x403ca9
  403cb0:	xor    eax,0x32b81227
  403cb5:	lea    edi,[ecx]
  403cb7:	pop    eax
  403cb8:	jecxz  0x403cb6
  403cba:	mov    ds:0x18c90054,eax
  403cbf:	retf   0x308c
  403cc2:	shr    BYTE PTR [edx],0xf6
  403cc5:	cs dec edx
  403cc7:	das    
  403cc8:	clc    
  403cc9:	sub    BYTE PTR [ecx+ecx*4-0x23db71cf],dh
  403cd0:	cmp    edx,DWORD PTR [ebp-0x1a]
  403cd3:	shl    edi,1
  403cd5:	lds    ebp,FWORD PTR [ecx-0x1ae44da2]
  403cdb:	ins    BYTE PTR es:[edi],dx
  403cdc:	sub    bl,BYTE PTR [esi]
  403cde:	dec    ebp
  403cdf:	mov    bl,0xca
  403ce1:	cmp    DWORD PTR [eax+eax*4-0x15],0xe94e4184
  403ce9:	jne    0x403d61
  403ceb:	adc    esi,DWORD PTR [ebp+0x8]
  403cee:	es sub eax,0x8c437c58
  403cf4:	xchg   BYTE PTR [eax+0x19a640d4],bl
  403cfa:	xchg   edi,eax
  403cfb:	dec    eax
  403cfc:	clc    
  403cfd:	adc    al,BYTE PTR [ebp+0x771664d9]
  403d03:	mov    ds:0xe9dd6aa5,al
  403d08:	or     eax,0x451fd39d
  403d0d:	fbld   TBYTE PTR [edi]
  403d0f:	push   es
  403d10:	dec    eax
  403d11:	scas   al,BYTE PTR es:[edi]
  403d12:	xchg   edx,eax
  403d13:	dec    ecx
  403d14:	adc    al,bl
  403d16:	mov    ah,0x8f
  403d18:	add    ecx,DWORD PTR [esi+0x48]
  403d1b:	(bad)  
  403d1c:	push   0xbe374351
  403d21:	or     dl,al
  403d23:	pop    eax
  403d24:	icebp  
  403d25:	mov    ds:0x245760e4,al
  403d2a:	test   BYTE PTR ds:0x5766e610,bh
  403d30:	xor    bl,BYTE PTR ds:0xe4346ce1
  403d36:	outs   dx,DWORD PTR ds:[esi]
  403d37:	pop    es
  403d38:	imul   eax,edi,0x33
  403d3b:	mul    ecx
  403d3d:	in     eax,0x1f
  403d3f:	leave  
  403d40:	outs   dx,BYTE PTR ds:[esi]
  403d41:	rol    ebp,1
  403d43:	rol    BYTE PTR [esp+edi*8+0x36],0xc6
  403d48:	stos   DWORD PTR es:[edi],eax
  403d49:	stc    
  403d4a:	hlt    
  403d4b:	adc    BYTE PTR [esi+0x29c661c3],dh
  403d51:	mov    ah,0xdd
  403d53:	(bad)  
  403d54:	adc    eax,0x7b97e9e0
  403d59:	fnstenv [eax+0x3d]
  403d5c:	jmp    0xd510:0x4e2c3a55
  403d63:	rol    DWORD PTR [edi+0x5d],1
  403d66:	add    eax,0x9efdc52
  403d6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d6c:	test   al,0x88
  403d6e:	pop    esp
  403d6f:	adc    esp,edi
  403d71:	mov    ebp,0x99ed126b
  403d76:	mov    bl,0xa3
  403d78:	aas    
  403d79:	stos   DWORD PTR es:[edi],eax
  403d7a:	(bad)  
  403d7b:	bound  ebp,QWORD PTR [ebx-0x3c95a657]
  403d81:	mov    edi,0xe3ab8df0
  403d86:	xor    dh,bl
  403d88:	in     eax,dx
  403d89:	inc    edi
  403d8a:	add    al,0x38
  403d8c:	pop    edi
  403d8d:	pusha  
  403d8e:	test   eax,0x7fe233ef
  403d93:	addr16 in eax,0xcb
  403d96:	mul    DWORD PTR [esi+ebx*8-0x724b521c]
  403d9d:	imul   edi,DWORD PTR ds:0x1eff6aec,0x6b43ba82
  403da7:	xlat   BYTE PTR ds:[ebx]
  403da8:	scas   eax,DWORD PTR es:[edi]
  403da9:	push   0x5b
  403dab:	test   eax,0x2ff9546d
  403db0:	(bad)  
  403db1:	out    0x5a,al
  403db3:	in     eax,0xc
  403db5:	aam    0x6b
  403db7:	in     eax,0xf6
  403db9:	inc    ebx
  403dba:	xchg   ebp,eax
  403dbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403dbc:	xor    al,0xaf
  403dbe:	daa    
  403dbf:	scas   al,BYTE PTR es:[edi]
  403dc0:	mov    dl,0xa7
  403dc2:	xchg   ebp,ecx
  403dc4:	scas   al,BYTE PTR es:[edi]
  403dc5:	xchg   edi,eax
  403dc6:	xor    al,0xd3
  403dc8:	imul   ecx,DWORD PTR [bx+si+0x3068],0xfffffff3
  403dce:	call   0xc691ca63
  403dd3:	sub    eax,0x9ad1d635
  403dd8:	or     al,al
  403dda:	in     eax,0x69
  403ddc:	hlt    
  403ddd:	fdiv   QWORD PTR [eax-0x606ce872]
  403de3:	pop    edi
  403de4:	mov    eax,0x1d486b06
  403de9:	or     al,0x2f
  403deb:	out    dx,al
  403dec:	sbb    ah,0xfe
  403def:	xor    ebp,DWORD PTR [eax-0x2a]
  403df2:	mov    edi,0x5f5137cd
  403df7:	push   edi
  403df8:	push   ebp
  403df9:	imul   edi,DWORD PTR [edi-0x12567ea5],0xffffffcd
  403e00:	fdiv   DWORD PTR [ecx+esi*4-0x7]
  403e05:	in     al,dx
  403e06:	aad    0x3c
  403e08:	ds in  al,0x62
  403e0b:	add    edx,DWORD PTR [esp+edi*4-0x642692b]
  403e12:	jge    0x403db5
  403e14:	xchg   esp,eax
  403e15:	(bad)  
  403e16:	xlat   BYTE PTR ds:[ebx]
  403e17:	pusha  
  403e18:	dec    esp
  403e19:	loopne 0x403da1
  403e1b:	mov    edx,DWORD PTR [ebp-0x33]
  403e1e:	push   ds
  403e1f:	in     al,dx
  403e20:	mov    edi,0xb395e1d6
  403e25:	sub    al,0x5
  403e27:	mov    cl,0x54
  403e29:	in     al,dx
  403e2a:	fcmovnbe st,st(1)
  403e2c:	cwde   
  403e2d:	mov    al,0x9e
  403e2f:	sub    DWORD PTR [ecx],ebp
  403e31:	ds ror esi,1
  403e34:	xchg   edi,eax
  403e35:	inc    ecx
  403e36:	jge    0x403e89
  403e38:	mov    cl,0xa0
  403e3a:	jbe    0x403e6a
  403e3c:	lods   al,BYTE PTR ds:[esi]
  403e3d:	hlt    
  403e3e:	test   eax,0x134603e7
  403e43:	cmp    DWORD PTR [edi+0x5a7cc63c],0x881ae036
  403e4d:	shl    DWORD PTR [ebp+0x41],cl
  403e50:	dec    esp
  403e51:	adc    al,0x9d
  403e53:	sbb    esp,DWORD PTR [ecx+0x55]
  403e56:	lods   eax,DWORD PTR ds:[esi]
  403e57:	and    BYTE PTR [edx-0x39],0xc
  403e5b:	mov    ebx,0x6252bcb2
  403e60:	cmp    ah,BYTE PTR [esi-0x7b]
  403e63:	and    esp,edx
  403e65:	sar    ebp,1
  403e67:	fisub  DWORD PTR [edx]
  403e69:	shr    ebx,1
  403e6b:	shr    edx,0x7f
  403e6e:	js     0x403e61
  403e70:	lea    eax,[ebp-0x75d230d8]
  403e76:	jecxz  0x403e1d
  403e78:	in     eax,0xc4
  403e7a:	sub    al,0x5e
  403e7c:	test   DWORD PTR [edx+0x58],ecx
  403e7f:	cmp    dh,bh
  403e81:	jns    0x403ec2
  403e83:	cmc    
  403e84:	into   
  403e85:	inc    eax
  403e86:	inc    eax
  403e87:	call   0xfd64:0xb469234b
  403e8e:	push   cs
  403e8f:	push   ss
  403e90:	inc    esp
  403e91:	mov    esp,0x380fe2e5
  403e96:	xchg   ebp,eax
  403e97:	nop
  403e98:	ret    
  403e99:	hlt    
  403e9a:	mov    ebx,0x3c8f965b
  403e9f:	pusha  
  403ea0:	add    edi,esp
  403ea2:	mov    eax,0x940b1a99
  403ea7:	or     dl,BYTE PTR [eax-0x60]
  403eaa:	loop   0x403f0a
  403eac:	(bad)  
  403ead:	sub    ah,BYTE PTR [eax-0x17]
  403eb0:	mov    ds:0xd4d230bb,eax
  403eb5:	sub    eax,0xb27ac978
  403eba:	hlt    
  403ebb:	jbe    0x403e97
  403ebd:	inc    edx
  403ebe:	jl     0x403eb6
  403ec0:	out    dx,eax
  403ec1:	lds    ecx,FWORD PTR ds:0x31a36281
  403ec7:	xchg   edx,eax
  403ec8:	push   0x3347b03e
  403ecd:	pop    ecx
  403ece:	add    BYTE PTR [eax],ch
  403ed0:	lods   eax,DWORD PTR ds:[esi]
  403ed1:	aaa    
  403ed2:	jb     0x403ef2
  403ed4:	sub    al,0xd6
  403ed6:	ror    DWORD PTR [edx],1
  403ed8:	xchg   esp,eax
  403ed9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403eda:	sar    BYTE PTR [eax-0x53cb485a],cl
  403ee0:	dec    edx
  403ee1:	inc    edx
  403ee2:	mov    al,ds:0xb911876c
  403ee7:	mov    al,0xf1
  403ee9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403eea:	cdq    
  403eeb:	test   eax,0x11f06b6a
  403ef0:	mov    eax,ds:0xc2b32f8a
  403ef5:	mov    dh,0x5e
  403ef7:	nop
  403ef8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ef9:	jge    0x403e7c
  403efb:	repz pop esi
  403efd:	inc    ebp
  403efe:	rcl    DWORD PTR [eax],cl
  403f00:	jmp    0x403e84
  403f02:	dec    edx
  403f03:	cld    
  403f04:	jmp    0x8b63:0xd8e8e197
  403f0b:	mov    bl,0x1b
  403f0d:	mov    al,0xf8
  403f0f:	xor    eax,0xf66b0b4f
  403f14:	adc    BYTE PTR [ecx+0x10],0x6e
  403f18:	leave  
  403f19:	call   ebp
  403f1b:	xor    DWORD PTR [bx+si-0x6af0],esi
  403f20:	fcomi  st,st(2)
  403f22:	push   esp
  403f23:	pusha  
  403f24:	xor    esi,DWORD PTR [di]
  403f27:	retf   0x9978
  403f2a:	and    al,0xa1
  403f2c:	aad    0x5c
  403f2e:	and    eax,0x6b6c935
  403f33:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  403f35:	sbb    esp,DWORD PTR [esi+0x60a9fd86]
  403f3b:	call   0x86b8971d
  403f40:	or     BYTE PTR [ebx],cl
  403f42:	popf   
  403f43:	ret    
  403f44:	xchg   edi,eax
  403f45:	sbb    eax,0x10960c3a
  403f4a:	push   es
  403f4b:	sbb    eax,0x40b3566e
  403f50:	jle    0x403ede
  403f52:	icebp  
  403f53:	sub    dh,BYTE PTR [eax-0x5d]
  403f56:	dec    edx
  403f57:	mov    WORD PTR [ebx-0x67],ss
  403f5a:	ins    DWORD PTR es:[edi],dx
  403f5b:	mov    ebx,0xd64d8be3
  403f60:	or     DWORD PTR [edx*8+0x21a7e22d],ecx
  403f67:	xor    esi,DWORD PTR [ebx+0xa]
  403f6a:	add    BYTE PTR [ebx],dl
  403f6c:	xchg   ebx,eax
  403f6d:	sub    cl,al
  403f6f:	mov    fs,esp
  403f71:	adc    bh,BYTE PTR [ecx]
  403f73:	pop    edi
  403f74:	push   es
  403f75:	sub    al,0x5c
  403f77:	adc    ebx,DWORD PTR [edi-0x3b]
  403f7a:	into   
  403f7b:	retf   0x9e6a
  403f7e:	cdq    
  403f7f:	xchg   esi,eax
  403f80:	pop    ds
  403f81:	sbb    eax,0xe91b5729
  403f86:	imul   DWORD PTR [ecx+0x3c2ddc96]
  403f8c:	jmp    0xbc9dd406
  403f91:	call   0x62bf:0x93fceeec
  403f98:	jge    0x403f4a
  403f9a:	scas   al,BYTE PTR es:[edi]
  403f9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f9c:	xchg   edx,eax
  403f9d:	lods   al,BYTE PTR ds:[esi]
  403f9e:	mov    ebp,DWORD PTR [ebp+0xeb82a61]
  403fa4:	stos   BYTE PTR es:[edi],al
  403fa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fa6:	stos   DWORD PTR es:[edi],eax
  403fa7:	push   ebp
  403fa8:	jns    0x403fde
  403faa:	xchg   ebx,eax
  403fab:	pop    edi
  403fac:	imul   BYTE PTR [esi-0x6a29f975]
  403fb2:	fidiv  DWORD PTR [edx]
  403fb4:	add    eax,0x271b0b6f
  403fb9:	imul   edi,DWORD PTR [esi-0x31],0xdf2f4f5a
  403fc0:	jae    0x403f47
  403fc2:	aas    
  403fc3:	jae    0x403feb
  403fc5:	jmp    0x8a64e72c
  403fca:	push   ss
  403fcb:	pop    esp
  403fcc:	mov    esi,0xcd3c1920
  403fd1:	mov    ebx,0x42ff1170
  403fd6:	iret   
  403fd7:	add    BYTE PTR [eax],ch
  403fd9:	repnz imul ebx,DWORD PTR [eax+0x1769bbf2],0x8f0cf637
  403fe4:	sti    
  403fe5:	test   al,0x51
  403fe7:	push   ecx
  403fe8:	fsubr  DWORD PTR [ecx+0x26210199]
  403fee:	jge    0x403f80
  403ff0:	sbb    DWORD PTR [edx+0x3c720e7b],edx
  403ff6:	loopne 0x403ff1
  403ff8:	push   ecx
  403ff9:	clc    
  403ffa:	ficomp DWORD PTR [ebx-0x77]
  403ffd:	test   eax,0xefaff772
  404002:	lds    edi,FWORD PTR [edx+0x64]
  404005:	xor    al,0xd2
  404007:	mov    ds:0x3b32fa7a,al
  40400c:	xor    esp,DWORD PTR [edx-0x65baa3a7]
  404012:	xor    bh,BYTE PTR [eax-0x2cb6ee31]
  404018:	xchg   edx,eax
  404019:	sar    BYTE PTR [edi-0x6327f8fb],1
  40401f:	das    
  404020:	push   edi
  404021:	mov    ecx,ecx
  404023:	dec    edx
  404024:	hlt    
  404025:	sub    BYTE PTR [ecx+edi*4-0x7b],bh
  404029:	(bad)  
  40402a:	mov    al,0x8d
  40402c:	jmp    0x47f66bb9
  404031:	or     eax,0x1115f10d
  404036:	in     eax,dx
  404037:	nop
  404038:	aas    
  404039:	xchg   DWORD PTR [ebp+0x51],esp
  40403c:	xchg   ecx,eax
  40403d:	mov    al,ds:0x7d2ca11a
  404042:	test   al,0x6a
  404044:	icebp  
  404045:	aas    
  404046:	daa    
  404047:	jge    0x404065
  404049:	jg     0x404081
  40404b:	inc    edx
  40404c:	nop
  40404d:	loope  0x404023
  40404f:	bound  edx,QWORD PTR [edi]
  404051:	cmp    al,0x5b
  404053:	fdivr  QWORD PTR [eax+0x6a924faa]
  404059:	jmp    0xf6596f91
  40405e:	adc    BYTE PTR [eax],bl
  404060:	sar    cl,0xd3
  404063:	and    DWORD PTR [esi],esp
  404065:	inc    edi
  404066:	mov    esp,0xaca71a51
  40406b:	xchg   ebp,eax
  40406c:	pop    esp
  40406d:	std    
  40406e:	pop    es
  40406f:	push   edi
  404070:	jmp    0x404035
  404072:	pop    eax
  404073:	push   esp
  404074:	pop    ds
  404075:	mov    dh,0xa9
  404077:	dec    ebx
  404078:	push   ds
  404079:	jb     0x4040a7
  40407b:	inc    ebp
  40407c:	push   ss
  40407d:	push   edi
  40407e:	push   eax
  40407f:	ss and al,0xb5
  404082:	sbb    eax,0x544b066c
  404087:	sbb    al,0x12
  404089:	test   bl,ch
  40408b:	imul   esi,edx,0xffffff82
  40408e:	xor    DWORD PTR [ecx-0x152962b8],ebx
  404094:	and    al,0x75
  404096:	pop    ecx
  404097:	pushf  
  404098:	inc    ebx
  404099:	add    edi,DWORD PTR [ebx]
  40409b:	and    DWORD PTR [ebp+0x43],ebp
  40409e:	lea    edi,cs:[ebx+0x20888921]
  4040a5:	sar    ebx,1
  4040a7:	inc    eax
  4040a8:	adc    al,BYTE PTR [ebp+0x42fc2f75]
  4040ae:	out    dx,al
  4040af:	mov    al,dl
  4040b1:	push   es
  4040b2:	mov    eax,ds:0xfd4cdaf9
  4040b7:	mov    ds:0xc00cd214,eax
  4040bc:	inc    eax
  4040bd:	jno    0x4040cb
  4040bf:	xchg   ebp,eax
  4040c0:	sti    
  4040c1:	mov    al,ds:0x82953703
  4040c6:	stos   BYTE PTR es:[edi],al
  4040c7:	mov    DWORD PTR [eax+ebp*1],eax
  4040ca:	or     al,0x83
  4040cc:	pushf  
  4040cd:	daa    
  4040ce:	int3   
  4040cf:	and    al,0x83
  4040d1:	out    dx,al
  4040d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040d3:	fs dec edi
  4040d5:	popa   
  4040d6:	rol    DWORD PTR [edi],cl
  4040d8:	fld    QWORD PTR [eax-0x76]
  4040db:	add    DWORD PTR ds:0xf6b36884,edx
  4040e1:	mov    dl,0x93
  4040e3:	rcr    dl,1
  4040e5:	and    DWORD PTR [ecx+0x42c74d96],edx
  4040eb:	mov    eax,ds:0x9cd93aa3
  4040f0:	into   
  4040f1:	xor    ebx,DWORD PTR [ebp+eiz*8-0x44]
  4040f5:	shl    bh,1
  4040f7:	sbb    eax,0xa0382a54
  4040fc:	sbb    DWORD PTR [ebx-0x51],edx
  4040ff:	xchg   ecx,eax
  404100:	aas    
  404101:	mov    ebp,0x3f391868
  404106:	imul   eax,DWORD PTR [esp],0x2c
  40410a:	and    dh,BYTE PTR [edi+0x1cfe70b2]
  404110:	sbb    DWORD PTR [edi-0x77],edi
  404113:	shl    DWORD PTR [eax],cl
  404115:	test   DWORD PTR [ebx-0x4c9319f2],edx
  40411b:	adc    BYTE PTR [ecx],al
  40411d:	push   es
  40411e:	sub    eax,0x567c4eb0
  404123:	das    
  404124:	adc    ebx,ecx
  404126:	fwait
  404127:	jmp    0x459:0xda6eb3e5
  40412e:	(bad)  
  40412f:	test   DWORD PTR [ebx+0x37196a06],edx
  404135:	push   0xffffff9f
  404137:	jp     0x4040df
  404139:	test   eax,0x28c7e3d0
  40413e:	xor    al,0xc
  404140:	ja     0x4040ff
  404142:	jmp    0x404115
  404144:	adc    BYTE PTR [eax],ch
  404146:	aad    0x5c
  404148:	sbb    BYTE PTR [edx-0x5f1ad60f],0xb7
  40414f:	xchg   ebx,eax
  404150:	retf   0xa304
  404153:	xchg   ecx,eax
  404154:	repz pusha 
  404156:	in     al,0xa
  404158:	mov    DWORD PTR ds:0x8ab53b70,edx
  40415e:	adc    eax,0xa3070c4c
  404163:	bound  edx,QWORD PTR [ebx-0x75]
  404166:	push   ebp
  404167:	push   esp
  404168:	cwde   
  404169:	and    DWORD PTR [edx],esp
  40416b:	sbb    BYTE PTR [ebx],ah
  40416d:	fwait
  40416e:	dec    ebp
  40416f:	stos   DWORD PTR es:[edi],eax
  404170:	mov    edi,0x41762f23
  404175:	imul   ecx,DWORD PTR [ecx+ebx*1],0xffffffee
  404179:	xchg   ecx,eax
  40417a:	or     BYTE PTR [esi+edx*2],ch
  40417d:	lods   eax,DWORD PTR ds:[esi]
  40417e:	mov    eax,ds:0x3f782e55
  404183:	pop    esi
  404184:	add    al,BYTE PTR [esi]
  404186:	jmp    0x404138
  404188:	pushf  
  404189:	(bad)  
  40418a:	repz inc edx
  40418c:	addr16 sbb eax,0x95df1dc6
  404192:	fcom   DWORD PTR [ebp+0x5c]
  404195:	dec    ebx
  404196:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404197:	rol    BYTE PTR [eax],1
  404199:	push   es
  40419a:	adc    BYTE PTR [edi],bh
  40419c:	shl    ebx,cl
  40419e:	jno    0x404137
  4041a0:	xor    DWORD PTR [eax],edx
  4041a2:	jae    0x404201
  4041a4:	mov    ebx,0x6f881118
  4041a9:	fldenv [ebx]
  4041ab:	mov    ?,WORD PTR [esi]
  4041ad:	mov    ah,0x8e
  4041af:	in     eax,dx
  4041b0:	cmp    DWORD PTR [edi+0x7b],ebp
  4041b3:	popa   
  4041b4:	or     al,0x5f
  4041b6:	or     ecx,DWORD PTR [ebx+edx*4+0x385425ec]
  4041bd:	xchg   esi,eax
  4041be:	adc    eax,0x9511a430
  4041c3:	scas   al,BYTE PTR es:[edi]
  4041c4:	js     0x4041c7
  4041c6:	xor    al,0x57
  4041c8:	dec    ebx
  4041c9:	add    ah,BYTE PTR [esi]
  4041cb:	cmp    ah,ch
  4041cd:	dec    edi
  4041ce:	dec    edx
  4041cf:	call   0xaacc763
  4041d4:	bnd jge 0x404238
  4041d7:	call   0xf3b8ddb1
  4041dc:	push   edx
  4041dd:	xchg   ecx,eax
  4041de:	and    eax,0xd792ceb7
  4041e3:	js     0x404244
  4041e5:	loop   0x4041bb
  4041e7:	std    
  4041e8:	pusha  
  4041e9:	inc    edi
  4041ea:	dec    esp
  4041eb:	stos   BYTE PTR es:[edi],al
  4041ec:	dec    esp
  4041ed:	inc    eax
  4041ee:	and    al,0x90
  4041f0:	imul   ecx,ecx,0xb63db9d3
  4041f6:	add    bl,BYTE PTR [ebx+0x522f6b0a]
  4041fc:	jge    0x404185
  4041fe:	sbb    al,0x3e
  404200:	jle    0x40420d
  404202:	and    al,0xb0
  404204:	push   edi
  404205:	(bad)  
  404207:	and    DWORD PTR [edi-0x5025b6bb],0x9583a010
  404211:	mov    al,0xdd
  404213:	fldcw  WORD PTR [edx-0x55]
  404216:	lods   eax,DWORD PTR ds:[esi]
  404217:	shl    BYTE PTR [ebx],0x96
  40421a:	sbb    ebp,ecx
  40421c:	repnz push eax
  40421e:	imul   edi,eax,0xffffff93
  404221:	ret    
  404222:	stos   BYTE PTR es:[edi],al
  404223:	dec    ebx
  404224:	mov    bh,0xab
  404226:	xchg   DWORD PTR [ecx-0x2250578d],ebp
  40422c:	sbb    ch,BYTE PTR [edi]
  40422e:	dec    ebp
  40422f:	xor    eax,0xe04505b9
  404234:	push   edx
  404235:	mov    ds:0x15f7d3be,al
  40423a:	test   al,0xbf
  40423c:	scas   al,BYTE PTR es:[edi]
  40423d:	scas   al,BYTE PTR es:[edi]
  40423e:	call   0xa9fe:0x707408f6
  404245:	xchg   DWORD PTR [esi+0x3d9af8a1],esp
  40424b:	dec    ebp
  40424c:	mov    cl,0xde
  40424e:	ja     0x40428a
  404250:	nop
  404251:	ins    DWORD PTR es:[edi],dx
  404252:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404253:	mov    ss,WORD PTR [ecx+edi*4-0x7f]
  404257:	xchg   ecx,eax
  404258:	std    
  404259:	cld    
  40425a:	in     al,0x43
  40425c:	out    0x96,al
  40425e:	adc    eax,0xf7e04919
  404263:	test   al,0xa9
  404265:	push   0xe7cb037c
  40426a:	mov    ecx,0x65b34116
  40426f:	push   ds
  404270:	adc    DWORD PTR ds:0x1185286f,edx
  404276:	sub    edi,DWORD PTR [eax]
  404278:	rcl    BYTE PTR [ebx-0x1d],cl
  40427b:	mov    ah,0x86
  40427d:	adc    DWORD PTR [ebx],0xffffffaf
  404280:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404281:	add    eax,0x4de53468
  404286:	push   0x90a22b09
  40428b:	dec    ecx
  40428c:	mov    ah,0x48
  40428e:	jmp    0xb1e3:0x990b15c8
  404295:	stos   BYTE PTR es:[edi],al
  404296:	or     BYTE PTR [esi],0xe8
  404299:	test   eax,0x656a086a
  40429e:	mov    eax,ds:0xba878f87
  4042a3:	fwait
  4042a4:	sub    eax,0xee22d532
  4042a9:	out    dx,eax
  4042aa:	icebp  
  4042ab:	retf   
  4042ac:	out    dx,al
  4042ad:	mov    al,0x30
  4042af:	call   0xdaacbdbb
  4042b4:	add    eax,0x3a58fe8
  4042b9:	retf   
  4042ba:	in     eax,0x77
  4042bc:	dec    edx
  4042bd:	test   eax,0x513a49f3
  4042c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042c3:	stc    
  4042c4:	ja     0x40432d
  4042c6:	sbb    bh,BYTE PTR [ebx-0x72]
  4042c9:	call   edi
  4042cb:	rol    esi,cl
  4042cd:	add    al,0xbf
  4042cf:	lea    edx,[esi-0x62]
  4042d2:	or     eax,0x45389f4f
  4042d7:	mov    ch,0x4b
  4042d9:	lods   eax,DWORD PTR ds:[esi]
  4042da:	aas    
  4042db:	dec    esp
  4042dc:	fwait
  4042dd:	mov    ebx,0x842f32bd
  4042e2:	xchg   ebx,eax
  4042e3:	sbb    esi,ebx
  4042e5:	sbb    bh,BYTE PTR ds:0xac53880b
  4042eb:	push   edi
  4042ec:	cmc    
  4042ed:	mov    al,ds:0x4a77f5d7
  4042f2:	or     BYTE PTR [esp+ebp*2],ch
  4042f5:	or     al,0xfe
  4042f7:	lock sub BYTE PTR [ebx+0x3a],cl
  4042fb:	xchg   edi,eax
  4042fc:	push   esp
  4042fd:	aam    0xe3
  4042ff:	sbb    BYTE PTR [ebx],dl
  404301:	cmp    eax,0x6849caff
  404306:	mov    eax,0xb024eebd
  40430b:	add    edx,edx
  40430d:	fild   DWORD PTR [edi]
  40430f:	mov    al,0x12
  404311:	dec    edx
  404312:	cmp    DWORD PTR [ebx],eax
  404314:	mov    dh,0xb6
  404316:	inc    esp
  404317:	scas   al,BYTE PTR es:[edi]
  404318:	fadd   DWORD PTR [edx]
  40431a:	and    DWORD PTR [ebp+0x6fa7ae29],ebx
  404320:	dec    eax
  404321:	ins    DWORD PTR es:[edi],dx
  404322:	jno    0x404359
  404324:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404325:	mov    edi,0xd110f246
  40432a:	xor    DWORD PTR [edx-0x79],edx
  40432d:	and    ebx,esp
  40432f:	pop    esi
  404330:	or     al,0x95
  404332:	aaa    
  404333:	loop   0x404387
  404335:	pcmpeqw mm4,QWORD PTR [edx-0x7b2da810]
  40433c:	pusha  
  40433d:	out    dx,eax
  40433e:	jns    0x40438c
  404340:	bound  edi,QWORD PTR [ebx-0x4]
  404343:	xchg   edx,eax
  404344:	and    bh,0x67
  404347:	push   esp
  404348:	pusha  
  404349:	aad    0x2b
  40434b:	dec    esp
  40434c:	or     BYTE PTR [esi-0x1561898f],ah
  404352:	leave  
  404353:	icebp  
  404354:	inc    esp
  404355:	aam    0xf2
  404357:	lods   eax,DWORD PTR ds:[esi]
  404358:	scas   al,BYTE PTR es:[edi]
  404359:	pop    ebx
  40435a:	lock mov eax,0x212bec2d
  404360:	mov    cl,BYTE PTR [edi+ecx*4+0x2d]
  404364:	(bad)
  404369:	retf   0xde03
  40436c:	repz test al,0xe5
  40436f:	stos   BYTE PTR es:[edi],al
  404370:	stos   DWORD PTR es:[edi],eax
  404371:	mov    ebp,0x851845eb
  404376:	mov    dh,0x33
  404378:	cmp    DWORD PTR [ebp-0x9e5542b],esi
  40437e:	jecxz  0x404346
  404380:	cs (bad) 
  404382:	repnz add al,0xc5
  404385:	or     ebp,ebp
  404387:	retf   
  404388:	(bad)
  40438b:	and    al,0x24
  40438d:	dec    ebx
  40438e:	aaa    
  40438f:	mov    BYTE PTR [edi+0xe],bh
  404392:	and    ax,0xac5b
  404396:	dec    eax
  404397:	push   ds
  404398:	or     ebx,DWORD PTR [eax+0x57458491]
  40439e:	dec    edx
  40439f:	sbb    al,0x7a
  4043a1:	gs dec edx
  4043a3:	emms   
  4043a5:	mov    dh,0x59
  4043a7:	xor    BYTE PTR [eax],0xcb
  4043aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043ab:	pop    edx
  4043ac:	push   eax
  4043ad:	mov    esi,0xbd8bb34e
  4043b2:	ins    DWORD PTR es:[edi],dx
  4043b3:	mov    eax,ds:0x6d0c5a1f
  4043b8:	pop    edx
  4043b9:	mov    esi,DWORD PTR [eax-0x3a]
  4043bc:	int    0x44
  4043be:	ins    DWORD PTR es:[edi],dx
  4043bf:	(bad)  
  4043c0:	std    
  4043c1:	or     eax,0x1bb3acaa
  4043c6:	loope  0x4043a6
  4043c8:	xlat   BYTE PTR ds:[ebx]
  4043c9:	xchg   ecx,eax
  4043ca:	dec    eax
  4043cb:	leave  
  4043cc:	or     eax,0x56905072
  4043d1:	lea    ebp,[ecx]
  4043d3:	loopne 0x4043e4
  4043d5:	mov    al,ds:0xc29daee5
  4043da:	jmp    0x2ed2:0xd21fb71b
  4043e1:	js     0x404412
  4043e3:	sahf   
  4043e4:	jl     0x4043df
  4043e6:	mov    bl,0x4
  4043e8:	push   edx
  4043e9:	ss pop es
  4043eb:	sub    eax,0xcd487e00
  4043f0:	pop    esp
  4043f1:	and    eax,edx
  4043f3:	mov    edi,0xf99451fd
  4043f8:	ds pusha 
  4043fa:	inc    eax
  4043fb:	cwde   
  4043fc:	and    ch,BYTE PTR [ebx+0x4eb1e1b]
  404402:	test   eax,0x9ef29e4
  404407:	int    0x64
  404409:	in     eax,0x4b
  40440b:	inc    ecx
  40440c:	repnz push ecx
  40440e:	sub    DWORD PTR [ecx],eax
  404410:	mov    bl,0x8e
  404412:	push   esi
  404413:	sar    BYTE PTR [ebp+0x18c4635f],0x78
  40441a:	test   BYTE PTR [esi-0x435c3d3a],0x1
  404421:	popf   
  404422:	adc    bl,BYTE PTR [ecx+0x76]
  404425:	sub    eax,0xd7fb2da6
  40442a:	call   0x228a006d
  40442f:	retf   
  404430:	ret    
  404431:	sub    edx,ebp
  404433:	mov    eax,ds:0x4dc44aa5
  404438:	imul   ebp,edi,0x40
  40443b:	pushf  
  40443c:	cdq    
  40443d:	lock and esp,DWORD PTR [ebx+0x51]
  404441:	sub    esi,DWORD PTR [ecx+esi*1+0x11812339]
  404448:	stos   DWORD PTR es:[edi],eax
  404449:	and    bh,dl
  40444b:	jae    0x4044b5
  40444d:	inc    BYTE PTR [ebx]
  40444f:	rcl    BYTE PTR [edx+0x1b],cl
  404452:	jnp    0x404439
  404454:	jb     0x4044b9
  404456:	lods   eax,DWORD PTR ds:[esi]
  404457:	je     0x40443f
  404459:	pop    eax
  40445a:	test   DWORD PTR [edx-0x4f],esi
  40445d:	sub    eax,0xb02b9828
  404462:	inc    ebx
  404463:	adc    BYTE PTR [ecx-0x2f],bl
  404466:	inc    esi
  404467:	popa   
  404468:	fcomip st,st(2)
  40446a:	pop    ds
  40446b:	fnstenv [eax]
  40446d:	mov    eax,ds:0x465e7fab
  404472:	add    DWORD PTR [ecx-0x9946d5e],eax
  404478:	and    DWORD PTR [esi+0x49],0xffffffa5
  40447c:	mov    edx,0x7bc62864
  404481:	ins    BYTE PTR es:[edi],dx
  404482:	test   BYTE PTR [edi],dh
  404484:	xchg   dh,dl
  404486:	jne    0x404422
  404488:	dec    ebp
  404489:	retf   
  40448a:	dec    eax
  40448b:	fst    DWORD PTR [edi-0x43]
  40448e:	mov    es,WORD PTR [eax+ecx*1+0x35]
  404492:	pusha  
  404493:	imul   ecx,esp,0x5711e7c2
  404499:	jno    0x40443f
  40449b:	outs   dx,BYTE PTR ds:[esi]
  40449c:	stos   DWORD PTR es:[edi],eax
  40449d:	pop    ds
  40449e:	xor    ah,bl
  4044a0:	jno    0x40450b
  4044a2:	adc    ecx,DWORD PTR [ecx]
  4044a4:	leave  
  4044a5:	and    ebx,DWORD PTR [eax-0x3ba1fd5]
  4044ab:	jmp    FWORD PTR [edi]
  4044ad:	mov    eax,ds:0x181ad30e
  4044b2:	popa   
  4044b3:	mov    edi,0xdccb7b88
  4044b8:	int    0xa0
  4044ba:	inc    esi
  4044bb:	loope  0x404451
  4044bd:	ss push eax
  4044bf:	xchg   esp,eax
  4044c0:	into   
  4044c1:	std    
  4044c2:	xor    DWORD PTR [edi+0x3c83fca],ebx
  4044c8:	mov    ecx,0x19a9d070
  4044cd:	inc    eax
  4044ce:	hlt    
  4044cf:	gs loop 0x404530
  4044d2:	push   0xffffff95
  4044d4:	mov    bl,0xd0
  4044d7:	or     esp,DWORD PTR [edx-0x19]
  4044da:	shl    edx,cl
  4044dc:	les    edx,FWORD PTR [edx-0x62]
  4044df:	xchg   ebx,eax
  4044e0:	loop   0x404467
  4044e2:	(bad)  
  4044e3:	loope  0x4044a9
  4044e5:	in     al,0x6e
  4044e7:	sbb    BYTE PTR [edi+eax*4],dh
  4044ea:	jg     0x4044b0
  4044ec:	push   ecx
  4044ed:	cmc    
  4044ee:	sahf   
  4044ef:	sub    edi,DWORD PTR ds:0xdb8d51b2
  4044f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044f6:	sbb    al,0xb8
  4044f8:	mov    WORD PTR [eax-0x38c97b56],gs
  4044fe:	push   esi
  4044ff:	test   eax,0xb3283f2b
  404504:	fld    TBYTE PTR [ecx]
  404506:	push   ds
  404507:	outs   dx,BYTE PTR ds:[esi]
  404508:	cmp    esp,0x54
  40450b:	jl     0x404531
  40450d:	fwait
  40450e:	out    0x35,eax
  404510:	out    0x7f,al
  404512:	data16 mov al,0xa6
  404515:	les    esp,FWORD PTR [eax-0x4e]
  404518:	sub    edi,edx
  40451a:	nop
  40451b:	ret    
  40451c:	mov    edi,0x4ecb5084
  404521:	sub    al,0x7d
  404523:	sub    BYTE PTR [edi],cl
  404525:	and    BYTE PTR [ebx-0x3d],cl
  404528:	scas   al,BYTE PTR es:[edi]
  404529:	inc    edx
  40452a:	ss fucomi st,st(6)
  40452d:	adc    al,0xfc
  40452f:	sbb    eax,0x56464acf
  404534:	adc    al,BYTE PTR [ecx+edi*4+0x123dd832]
  40453b:	bound  ebp,QWORD PTR [eax]
  40453d:	jge    0x40456f
  40453f:	sbb    DWORD PTR [esi+ecx*1],esi
  404542:	push   cs
  404543:	and    al,0xd9
  404545:	scas   al,BYTE PTR es:[edi]
  404546:	mov    ss,WORD PTR [edi+0xe]
  404549:	(bad)  
  40454a:	push   ds
  40454b:	or     dl,BYTE PTR [ebx-0x4a]
  40454e:	mov    edi,0xefedbc98
  404553:	mov    ebx,0x43ad6072
  404558:	arpl   WORD PTR [ecx],ax
  40455a:	outs   dx,DWORD PTR gs:[esi]
  40455c:	inc    ecx
  40455d:	dec    esp
  40455e:	mov    BYTE PTR [edi+0x4edaa8d0],dh
  404564:	add    edx,edx
  404566:	pop    edi
  404567:	sub    eax,0x1e139c25
  40456c:	mov    bh,0x7c
  40456e:	out    dx,eax
  40456f:	fisub  DWORD PTR [eiz*8-0x45bbe4f6]
  404576:	mov    edi,fs
  404578:	rcl    BYTE PTR ss:[esp+eax*8+0x43],cl
  40457d:	test   DWORD PTR [eax],0xa61aeea9
  404583:	adc    al,0x6d
  404585:	neg    DWORD PTR [eax+0x71]
  404588:	js     0x404575
  40458a:	jmp    0x94ab545f
  40458f:	push   esi
  404590:	dec    edi
  404591:	leave  
  404592:	mov    cl,0x5d
  404594:	neg    DWORD PTR [esi+ebx*2+0x3d]
  404598:	dec    edx
  404599:	pop    ebp
  40459a:	xchg   esi,eax
  40459b:	cmp    dh,BYTE PTR [esp+edi*2+0x5ed7dc63]
  4045a2:	repnz call 0x35ca:0xce09860
  4045aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045ab:	cli    
  4045ac:	pop    esi
  4045ad:	add    edi,DWORD PTR [eax+0x44]
  4045b0:	mov    edx,cs
  4045b2:	int    0x7e
  4045b4:	dec    eax
  4045b5:	inc    ebp
  4045b6:	sbb    al,0xb2
  4045b8:	scas   eax,DWORD PTR es:[edi]
  4045b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045ba:	shl    BYTE PTR ds:0x185365ac,cl
  4045c0:	push   ebp
  4045c1:	rcr    BYTE PTR [esi+0x13e53379],1
  4045c7:	test   al,0xb9
  4045c9:	out    dx,al
  4045ca:	out    0xfc,al
  4045cc:	ins    DWORD PTR es:[edi],dx
  4045cd:	mov    ebx,DWORD PTR [ebp+0x4d]
  4045d0:	jmp    0x22ff:0x74efa257
  4045d7:	nop
  4045d8:	pop    edx
  4045d9:	mov    ds:0x9e62d8d9,al
  4045de:	sahf   
  4045df:	sbb    al,0x9a
  4045e1:	push   0x8aeaa1df
  4045e6:	ja     0x404606
  4045e8:	dec    ecx
  4045e9:	aad    0x24
  4045eb:	jb     0x404591
  4045ed:	in     al,dx
  4045ee:	retf   0x4d41
  4045f1:	inc    ebx
  4045f2:	add    eax,0x9416ba8a
  4045f7:	adc    dl,BYTE PTR [edi]
  4045f9:	arpl   WORD PTR [eax+0x17],bp
  4045fc:	mov    WORD PTR [esi+ebp*2+0x58],gs
  404600:	dec    ebp
  404601:	lea    edi,[ebx-0x53]
  404604:	add    DWORD PTR [ebp+eiz*2+0x1b],esi
  404608:	call   0x9163:0x69be7896
  40460f:	sub    al,0x86
  404611:	mov    al,0xf4
  404613:	jecxz  0x40459c
  404615:	jle    0x404673
  404617:	push   ss
  404618:	mov    ds:0xba39f38d,eax
  40461d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40461e:	xchg   ebp,eax
  40461f:	aaa    
  404620:	lds    ebx,FWORD PTR [ebx+0x55bc2a6]
  404626:	push   edx
  404627:	loope  0x40468f
  404629:	add    cl,0x64
  40462c:	mov    ebx,gs
  40462e:	push   ss
  40462f:	xchg   ecx,eax
  404630:	pop    ebx
  404631:	div    BYTE PTR ds:0x6bd8d6e
  404637:	jae    0x404646
  404639:	pusha  
  40463a:	mov    ebx,0x65f86bce
  40463f:	popa   
  404640:	(bad)  
  404643:	inc    edi
  404644:	mov    BYTE PTR [edi-0x57e9ba68],bl
  40464a:	jne    0x4046be
  40464c:	adc    BYTE PTR [edi+0x62],dh
  40464f:	lds    ecx,FWORD PTR [edx+0x1f]
  404652:	mov    eax,0xf8a4b8fe
  404657:	js     0x40469e
  404659:	sub    bh,dl
  40465b:	add    eax,0xbd5b499d
  404660:	std    
  404661:	(bad)  
  404662:	adc    cl,al
  404664:	imul   ecx,DWORD PTR [edi-0x73],0x41
  404668:	mov    edi,0x8855c556
  40466d:	daa    
  40466e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40466f:	sbb    DWORD PTR [ebp-0x2ff2f28a],esp
  404675:	xchg   esi,eax
  404676:	xor    al,0x2b
  404678:	mov    ch,0xbb
  40467a:	inc    edi
  40467b:	dec    ecx
  40467c:	push   esp
  40467d:	lea    ecx,ds:0x331be265
  404683:	xor    eax,0x8b575e37
  404688:	cmp    DWORD PTR [ecx+0x63],ebx
  40468b:	and    eax,DWORD PTR [edx-0x4d8c24ce]
  404691:	in     al,dx
  404692:	int3   
  404693:	pop    edi
  404694:	arpl   WORD PTR [eax+0x1b],dx
  404697:	adc    edx,DWORD PTR [esi-0x58]
  40469a:	imul   ebp,DWORD PTR [edi-0x52],0x46
  40469e:	shl    edi,cl
  4046a0:	mov    DWORD PTR [edx-0x224b8812],ecx
  4046a6:	xlat   BYTE PTR ds:[ebx]
  4046a7:	mov    ebp,0x9c05c8d0
  4046ac:	imul   ebp,ecx,0xffffffcf
  4046af:	push   esi
  4046b0:	sbb    ebx,edx
  4046b2:	lods   al,BYTE PTR ds:[esi]
  4046b3:	mov    ds:0x68cefcdb,al
  4046b8:	loope  0x404666
  4046ba:	mov    es,WORD PTR [eax+0x8]
  4046bd:	xchg   ecx,eax
  4046be:	adc    al,0x46
  4046c0:	jmp    0x40467a
  4046c2:	mov    edi,0xfaeeb125
  4046c7:	pusha  
  4046c8:	add    eax,0x4a09c6f
  4046cd:	push   edx
  4046ce:	je     0x404683
  4046d0:	add    eax,0xe2c325d0
  4046d5:	xchg   edi,eax
  4046d6:	repnz rcr BYTE PTR [esi+0x4f152a69],cl
  4046dd:	ins    DWORD PTR es:[edi],dx
  4046de:	jb     0x404666
  4046e0:	pop    esp
  4046e1:	or     al,0xbc
  4046e3:	jle    0x40469a
  4046e5:	push   es
  4046e6:	popa   
  4046e7:	xchg   edi,edi
  4046e9:	adc    edx,DWORD PTR [esi]
  4046eb:	xor    BYTE PTR [eax],0x72
  4046ee:	sub    eax,0xed1b8dee
  4046f3:	push   ss
  4046f4:	or     eax,0xa2e982a7
  4046f9:	mov    edx,esp
  4046fb:	or     BYTE PTR [esi-0x9],0x96
  4046ff:	por    mm7,QWORD PTR [edx]
  404702:	int    0xde
  404704:	dec    ebx
  404705:	mov    ah,0x2f
  404707:	xor    al,0x37
  404709:	sbb    eax,0x7704d01c
  40470e:	cmp    eax,0x5e04b292
  404713:	adc    eax,0x5d9e4bc
  404718:	xchg   DWORD PTR [edi-0x11],esp
  40471b:	repz (bad) 
  40471d:	push   ecx
  40471e:	pop    es
  40471f:	add    eax,0x3739125e
  404724:	jmp    0xf73362e9
  404729:	jae    0x4046c4
  40472b:	cwde   
  40472c:	inc    ecx
  40472d:	daa    
  40472e:	aas    
  40472f:	xor    eax,0xe8985ca7
  404734:	mov    ebx,0x1de6242b
  404739:	add    BYTE PTR [ebx],ch
  40473b:	mov    ecx,0xa225d848
  404740:	xchg   ecx,eax
  404741:	sub    BYTE PTR [eax+ecx*8-0x7e640cff],bh
  404748:	dec    esp
  404749:	aad    0x37
  40474b:	inc    esp
  40474c:	or     ah,BYTE PTR [esi]
  40474e:	adc    al,0x79
  404750:	fucomp st(3)
  404752:	or     eax,0x695549d
  404757:	repz cmp cl,bh
  40475a:	adc    esp,DWORD PTR [edi]
  40475c:	imul   esi,DWORD PTR [eax-0x5d],0xffffffbd
  404760:	stc    
  404761:	sbb    BYTE PTR [ebp-0x2c55af80],ch
  404767:	fnstcw WORD PTR [esi+0x3e8d1f6]
  40476d:	loope  0x4046fe
  40476f:	or     ch,BYTE PTR [ecx+edi*8]
  404772:	adc    eax,0xf9a31686
  404777:	push   esp
  404778:	jge    0x404735
  40477a:	daa    
  40477b:	stos   DWORD PTR es:[edi],eax
  40477c:	mov    DWORD PTR [ebx-0x6f],ecx
  40477f:	sbb    al,0xd8
  404781:	xor    DWORD PTR [ebp+0x691d77d9],eax
  404787:	rcl    DWORD PTR [edx],0x86
  40478a:	push   esp
  40478b:	frstor [edi+0x4257298c]
  404791:	adc    al,0x1
  404793:	mov    dl,0x8f
  404795:	xor    esi,DWORD PTR [esi]
  404797:	jl     0x40475f
  404799:	fdiv   QWORD PTR [ecx-0x65]
  40479c:	out    dx,eax
  40479d:	(bad)  
  40479e:	add    al,0xc2
  4047a0:	xchg   edx,eax
  4047a1:	inc    esi
  4047a2:	pop    esi
  4047a3:	test   eax,0x8aa4e459
  4047a8:	sbb    ecx,DWORD PTR [eax+0x486e60b0]
  4047ae:	sub    al,BYTE PTR [edx]
  4047b0:	pushf  
  4047b1:	inc    esi
  4047b2:	pusha  
  4047b3:	inc    edi
  4047b4:	sub    BYTE PTR [eax+ebx*1-0x44ee6bb0],bl
  4047bb:	adc    esi,DWORD PTR [ebx-0x61]
  4047be:	or     esi,0x26a22b98
  4047c4:	scas   al,BYTE PTR es:[edi]
  4047c5:	cwde   
  4047c6:	fbld   TBYTE PTR [esi+0x64]
  4047c9:	mov    bl,BYTE PTR [eax-0x5348805e]
  4047cf:	out    0xb5,eax
  4047d1:	(bad)  
  4047d2:	repz sbb dh,bh
  4047d5:	sbb    al,0xe3
  4047d7:	xchg   edx,eax
  4047d8:	sbb    esp,DWORD PTR [ebx+0x857ef14]
  4047de:	jnp    0x4047cd
  4047e0:	out    dx,al
  4047e1:	pusha  
  4047e2:	lahf   
  4047e3:	test   BYTE PTR [ebp-0x51],ah
  4047e6:	daa    
  4047e7:	loop   0x4047ad
  4047e9:	add    ch,BYTE PTR [esi+0x2ff8e5ed]
  4047ef:	or     BYTE PTR [ebx+0x67],dh
  4047f2:	mov    eax,0x73b71692
  4047f7:	cmp    eax,0x7cd1bfde
  4047fc:	push   esp
  4047fd:	xchg   ecx,eax
  4047fe:	ins    DWORD PTR es:[edi],dx
  4047ff:	push   cs
  404800:	push   ss
  404801:	xor    ah,BYTE PTR [esi-0x3b]
  404804:	loop   0x404818
  404806:	inc    edi
  404807:	mov    ebp,0x24be8b37
  40480c:	into   
  40480d:	cli    
  40480e:	mov    ah,0x42
  404810:	popa   
  404811:	push   edx
  404812:	mov    ?,WORD PTR [ebx-0x7a]
  404815:	sub    eax,0xb560e501
  40481a:	das    
  40481b:	xor    cl,bl
  40481d:	shl    DWORD PTR [edx+0x6b],1
  404820:	sub    ebp,ebp
  404822:	push   esi
  404823:	outs   dx,BYTE PTR ds:[esi]
  404824:	test   al,0x35
  404826:	and    DWORD PTR [ecx-0x4],0xffffff86
  40482a:	gs ret 
  40482c:	arpl   bp,sp
  40482e:	jle    0x40480e
  404830:	mov    edx,0x14884ecb
  404835:	test   eax,0x9207771a
  40483a:	dec    esi
  40483b:	dec    DWORD PTR [edi+0x46]
  40483e:	xchg   ecx,eax
  40483f:	sbb    BYTE PTR [esi+0x716bfd4],ah
  404845:	scas   al,BYTE PTR es:[edi]
  404846:	rol    DWORD PTR [ebp-0x2],cl
  404849:	dec    esp
  40484a:	pop    esi
  40484b:	push   0xffffffae
  40484d:	inc    ecx
  40484e:	mov    cl,0xe2
  404850:	imul   ebp,DWORD PTR [ebp+0x2b],0xedf2924
  404857:	pop    esi
  404858:	xchg   ecx,eax
  404859:	xor    cl,BYTE PTR [eax]
  40485b:	shl    DWORD PTR ds:0x6ed5fc3d,1
  404861:	push   eax
  404862:	xchg   ebp,eax
  404863:	push   edi
  404864:	and    DWORD PTR [edi-0x53ee8e6b],0xffffffd9
  40486b:	and    esi,ebx
  40486d:	xchg   BYTE PTR [edx-0x537042e1],ah
  404873:	outs   dx,DWORD PTR ds:[esi]
  404874:	pop    esi
  404875:	mov    dl,0xfd
  404877:	mov    eax,0xff207f9f
  40487c:	ficom  DWORD PTR [edx+0x639251]
  404882:	shl    esi,cl
  404884:	aaa    
  404885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404886:	fnstsw WORD PTR [ecx-0x215e8277]
  40488c:	or     esi,DWORD PTR [ecx-0x4]
  40488f:	jo     0x404866
  404891:	popf   
  404892:	mov    ds:0xe1c47b3b,al
  404897:	mov    ebp,0xfe801deb
  40489c:	test   BYTE PTR [ebx],dh
  40489e:	or     eax,0x8c763572
  4048a3:	idiv   DWORD PTR ds:0x188467e8
  4048a9:	jge    0x40491a
  4048ab:	jnp    0x40486e
  4048ad:	pushf  
  4048ae:	cmp    al,0x67
  4048b0:	push   ebp
  4048b1:	ins    DWORD PTR es:[edi],dx
  4048b2:	idiv   BYTE PTR [ecx-0x6]
  4048b5:	cmp    BYTE PTR [eax+0x49],ch
  4048b8:	xchg   edx,eax
  4048b9:	pop    ebx
  4048ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048bb:	jno    0x404877
  4048bd:	test   DWORD PTR [edx],ebx
  4048bf:	sbb    esi,DWORD PTR [edx-0x11]
  4048c2:	hlt    
  4048c3:	test   eax,0x9d30dea6
  4048c8:	jle    0x4048bd
  4048ca:	inc    ebx
  4048cb:	sbb    eax,esi
  4048cd:	addr16 pushf 
  4048cf:	js     0x40493a
  4048d1:	cld    
  4048d2:	or     al,0x67
  4048d4:	dec    edx
  4048d5:	les    eax,FWORD PTR [edi+0x7bd4210d]
  4048db:	xor    DWORD PTR [ebp+0x38f744ed],0x646a7827
  4048e5:	in     al,dx
  4048e6:	push   cs
  4048e7:	push   ss
  4048e8:	mov    ds:0x38973b22,eax
  4048ed:	out    0xfd,al
  4048ef:	scas   al,BYTE PTR es:[edi]
  4048f0:	push   esp
  4048f1:	inc    eax
  4048f2:	jno    0x404961
  4048f4:	inc    edi
  4048f5:	xchg   edi,esi
  4048f7:	push   edx
  4048f8:	pop    ecx
  4048f9:	sti    
  4048fa:	and    esp,ebp
  4048fc:	or     al,BYTE PTR [ebp-0xc]
  4048ff:	loope  0x4048e2
  404901:	jp     0x404942
  404903:	adc    DWORD PTR [ecx],ebp
  404905:	(bad)  
  404906:	pop    ebp
  404907:	adc    al,0x55
  404909:	fwait
  40490a:	div    BYTE PTR [ecx+0x6f]
  40490d:	inc    ecx
  40490e:	pop    ebx
  40490f:	and    eax,DWORD PTR [ecx-0x8]
  404912:	mov    dh,0xa5
  404914:	inc    ecx
  404915:	sbb    al,0x86
  404917:	sbb    ecx,esp
  404919:	ficomp DWORD PTR [edx]
  40491b:	sub    BYTE PTR [edx-0x6816e9fa],0x82
  404922:	rcl    DWORD PTR [esi],1
  404924:	push   eax
  404925:	ds pop esp
  404927:	sti    
  404928:	into   
  404929:	and    eax,0xcd79257
  40492e:	xor    eax,0x10103b1d
  404933:	ja     0x4048f1
  404935:	mov    edx,0x4d442ddb
  40493a:	stos   BYTE PTR es:[edi],al
  40493b:	imul   ebp,edx,0x59
  40493e:	sbb    ah,al
  404940:	cmp    eax,0x666a18ad
  404945:	add    eax,0xb
  404948:	xor    al,0xb3
  40494a:	loope  0x404937
  40494c:	and    ecx,DWORD PTR [ecx+ebx*4+0x3dd4f862]
  404953:	mov    al,0x26
  404955:	sahf   
  404956:	and    al,0xff
  404958:	lods   al,BYTE PTR ds:[esi]
  404959:	in     al,dx
  40495a:	adc    al,0xfc
  40495c:	mov    DWORD PTR [ecx],esp
  40495e:	jns    0x404951
  404960:	retf   0x73d4
  404963:	xchg   DWORD PTR [ebp+0x4d1d0d27],edx
  404969:	clc    
  40496a:	pop    ss
  40496b:	sar    bl,0x77
  40496e:	mov    edx,DWORD PTR [ebx]
  404970:	imul   eax,DWORD PTR [eax+0x21d291cf],0xfffffffa
  404977:	mov    dl,0x5f
  404979:	dec    ebx
  40497a:	(bad)  
  40497b:	fistp  DWORD PTR [eax]
  40497d:	pop    ebp
  40497e:	inc    esp
  40497f:	cmp    cl,BYTE PTR [ebp+edx*4-0x2d]
  404983:	popf   
  404984:	xor    dl,ah
  404986:	fcomp  DWORD PTR [ebp-0x4cfbb44b]
  40498c:	jle    0x4049e2
  40498e:	shl    DWORD PTR [eax-0x22],cl
  404991:	dec    edx
  404992:	cmp    cl,bl
  404994:	xor    dl,BYTE PTR [ebp+0x8]
  404997:	cli    
  404998:	loop   0x404928
  40499a:	out    dx,eax
  40499b:	inc    ebx
  40499c:	shl    BYTE PTR [ebp-0x1f921a1c],0xc8
  4049a3:	mov    esi,esi
  4049a5:	cmp    BYTE PTR [eax-0x62da0132],cl
  4049ab:	fwait
  4049ac:	icebp  
  4049ad:	mov    ebp,0x55b08a42
  4049b2:	push   ss
  4049b3:	shl    DWORD PTR ss:[esi+ecx*8-0x9],cl
  4049b8:	or     BYTE PTR [ebx-0x117ce7b6],bl
  4049be:	cmc    
  4049bf:	mov    dl,0xb8
  4049c1:	sti    
  4049c2:	lods   eax,DWORD PTR ds:[esi]
  4049c3:	data16 jns 0x404947
  4049c6:	jge    0x404a11
  4049c8:	mov    al,0xbc
  4049ca:	dec    esi
  4049cb:	or     BYTE PTR [ebx-0x76484763],ch
  4049d1:	and    eax,0xd140de85
  4049d6:	out    0xd0,al
  4049d8:	ins    BYTE PTR es:[edi],dx
  4049d9:	rol    BYTE PTR [edx],0x31
  4049dc:	add    dh,BYTE PTR [ebx]
  4049de:	popa   
  4049df:	test   eax,0x496ef646
  4049e4:	pcmpgtb mm6,QWORD PTR [edx]
  4049e7:	pop    ds
  4049e8:	in     al,dx
  4049e9:	jno    0x40499e
  4049eb:	outs   dx,DWORD PTR ds:[esi]
  4049ec:	cmp    BYTE PTR es:[edi+0x640b65de],cl
  4049f3:	jne    0x404a26
  4049f5:	jbe    0xaaf19466
  4049fb:	xchg   edx,eax
  4049fc:	cmp    al,0x6f
  4049fe:	jb     0x4049a3
  404a00:	js     0x4049f9
  404a02:	stc    
  404a03:	xor    dl,dl
  404a05:	test   BYTE PTR [ebx-0x4b],dh
  404a08:	inc    esp
  404a09:	lods   eax,DWORD PTR ds:[esi]
  404a0a:	push   ds
  404a0b:	lea    ebx,[esi+ebx*4]
  404a0e:	das    
  404a0f:	push   edx
  404a10:	add    DWORD PTR [esi-0x12],eax
  404a13:	jo     0x4049f4
  404a15:	inc    ebx
  404a16:	ja     0x404a4b
  404a18:	mov    bh,dl
  404a1a:	lods   eax,DWORD PTR ds:[esi]
  404a1b:	shl    DWORD PTR [esi-0x69],0x62
  404a1f:	out    0x50,al
  404a21:	data16 jge 0x404a0a
  404a24:	jno    0x404a5b
  404a26:	bound  esi,QWORD PTR [eax+0x2a]
  404a29:	pop    es
  404a2a:	mov    ebp,?
  404a2c:	das    
  404a2d:	cmp    al,0xe1
  404a2f:	jmp    0x9d66:0x34474846
  404a36:	icebp  
  404a37:	test   DWORD PTR [ebx+0x12],esp
  404a3a:	xor    al,0x35
  404a3c:	mov    cl,0xa9
  404a3e:	sbb    DWORD PTR [edx],edx
  404a40:	test   DWORD PTR [ebx-0x37],0x300156a3
  404a47:	lahf   
  404a48:	jno    0x404a9a
  404a4a:	mov    esp,eax
  404a4c:	jecxz  0x404a0d
  404a4e:	jnp    0x404a21
  404a50:	and    al,0xe5
  404a52:	push   ds
  404a53:	(bad)  
  404a54:	(bad)  
  404a55:	call   0x38f6e9c0
  404a5a:	cmp    DWORD PTR [ecx+esi*1-0x31],0x60feb141
  404a62:	outs   dx,DWORD PTR ds:[esi]
  404a63:	lea    ebp,[eax]
  404a65:	lods   al,BYTE PTR ds:[esi]
  404a66:	xor    esi,DWORD PTR [eax-0x13]
  404a69:	push   0xbd5c020
  404a6e:	iret   
  404a6f:	cs cdq 
  404a71:	ins    BYTE PTR es:[edi],dx
  404a72:	xchg   edi,eax
  404a73:	loopne 0x404ada
  404a75:	mov    eax,0xfe3440f9
  404a7a:	imul   ebx,DWORD PTR cs:[ecx-0x11],0x5abede6
  404a82:	adc    eax,0x4c1bef63
  404a87:	lahf   
  404a88:	add    BYTE PTR [edi],ah
  404a8a:	sar    BYTE PTR [edi-0x38],1
  404a8d:	cmp    BYTE PTR [eax],bl
  404a8f:	push   0x5a99489b
  404a94:	add    al,cl
  404a96:	pop    ss
  404a97:	mov    WORD PTR [edx+ecx*8-0x4b390289],es
  404a9e:	inc    esp
  404a9f:	and    DWORD PTR [edi],esi
  404aa1:	mov    esi,0xec6d0398
  404aa6:	test   DWORD PTR [ebx],0xba91877
  404aac:	mov    edx,0x8e384c35
  404ab1:	es sbb eax,0x3b893bc9
  404ab7:	push   ecx
  404ab8:	aas    
  404ab9:	je     0x404b37
  404abb:	stos   BYTE PTR es:[edi],al
  404abc:	fwait
  404abd:	mov    ds:0xb4fdc7e2,eax
  404ac2:	and    al,0xb8
  404ac4:	call   0x6700:0x43defc64
  404acb:	pop    eax
  404acc:	pop    edi
  404acd:	mov    bl,0x2d
  404acf:	or     al,0x92
  404ad1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ad2:	xchg   esp,eax
  404ad3:	bound  esi,QWORD PTR [ebx]
  404ad5:	mov    edx,0x872f8966
  404ada:	pop    ebp
  404adb:	adc    ch,BYTE PTR [eax+0x4c57af06]
  404ae1:	int3   
  404ae2:	out    dx,eax
  404ae3:	and    ah,BYTE PTR [ebp-0x37]
  404ae6:	movaps XMMWORD PTR [ebp-0x11b6d3f],xmm5
  404aed:	div    BYTE PTR [ecx-0x4d38501d]
  404af3:	mov    cl,0xa9
  404af5:	gs pop edx
  404af7:	mov    ah,0x64
  404af9:	add    ah,dh
  404afb:	test   eax,0xbb968afa
  404b00:	sbb    cl,BYTE PTR [ebx]
  404b02:	retf   0xc72c
  404b05:	nop
  404b06:	mov    esi,0x722d50c5
  404b0b:	jns    0x404b6a
  404b0d:	mov    bh,bh
  404b0f:	or     al,0x41
  404b11:	xchg   ebx,eax
  404b12:	test   BYTE PTR [ebx-0x1],ah
  404b15:	xchg   esp,eax
  404b16:	pop    edi
  404b17:	aad    0xd8
  404b19:	sub    dl,BYTE PTR [esi+ebx*8+0x16c75438]
  404b20:	pusha  
  404b21:	jnp    0x404ae4
  404b23:	pop    ds
  404b24:	xchg   esp,eax
  404b25:	call   0x2ff4cc9e
  404b2a:	sbb    ebx,eax
  404b2c:	or     eax,0x61fb9efe
  404b31:	cwde   
  404b32:	mov    ?,WORD PTR [ebp+ebp*1+0x2a]
  404b36:	ja     0x404af7
  404b38:	and    eax,0xa6d9ca24
  404b3d:	sbb    eax,0x25b59d3b
  404b42:	push   ebx
  404b43:	outs   dx,BYTE PTR ds:[esi]
  404b44:	dec    BYTE PTR [ebx+0x40]
  404b47:	repz cmc 
  404b49:	bsf    esi,DWORD PTR [edx-0x5f]
  404b4d:	(bad)
  404b52:	xchg   DWORD PTR [ecx+0x59],ebx
  404b55:	idiv   BYTE PTR [ecx+0x31d0e0b2]
  404b5b:	sub    DWORD PTR [esi],esi
  404b5d:	(bad)  
  404b5e:	cmp    al,0xdc
  404b60:	push   eax
  404b61:	test   BYTE PTR [esi-0x73cab40],ch
  404b67:	pop    ds
  404b68:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b6a:	or     eax,0xdd2e177f
  404b6f:	mov    ebp,0x2217962b
  404b74:	cmp    edx,eax
  404b76:	sub    BYTE PTR [ebp+ebp*4+0x5f],0x55
  404b7b:	pop    eax
  404b7c:	dec    edi
  404b7d:	imul   ecx,DWORD PTR [ecx+0x4a],0x2d
  404b81:	repz and DWORD PTR [ebp+0x5bd3d27],ebp
  404b88:	jbe    0x404bf8
  404b8a:	ret    0x7585
  404b8d:	and    eax,0x9b18bd0f
  404b92:	imul   ebx,eax,0xc2c9f76e
  404b98:	mov    DWORD PTR [eax+0x2bd0f4b7],edi
  404b9e:	xchg   ecx,eax
  404b9f:	aaa    
  404ba0:	sub    BYTE PTR [esi-0x25],al
  404ba3:	mov    edx,0xf2006fc
  404ba8:	dec    edi
  404ba9:	pop    ebx
  404baa:	scas   al,BYTE PTR es:[edi]
  404bab:	fcmovu st,st(5)
  404bad:	cmp    dl,BYTE PTR [esi-0x57030a5a]
  404bb3:	(bad)  
  404bb4:	xchg   ebx,eax
  404bb5:	(bad)  [edi]
  404bb7:	cmc    
  404bb8:	imul   ecx,DWORD PTR [esi],0xffffffed
  404bbb:	sbb    ebx,DWORD PTR [edx+0x1b]
  404bbe:	aas    
  404bbf:	lock add DWORD PTR [esi],edi
  404bc2:	adc    bl,0xe5
  404bc5:	mov    dl,0x9b
  404bc7:	push   eax
  404bc8:	and    dl,BYTE PTR [edi+0x11]
  404bcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bcc:	push   edi
  404bcd:	and    ah,BYTE PTR [edi-0x42]
  404bd0:	inc    edx
  404bd1:	jle    0x404bc6
  404bd3:	jnp    0x404c1a
  404bd5:	ror    dh,1
  404bd7:	(bad)  
  404bd8:	and    eax,0x8e9a82a
  404bdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bde:	shl    DWORD PTR [ebx],1
  404be0:	xlat   BYTE PTR ds:[ebx]
  404be1:	sar    BYTE PTR [eax-0x230ed676],0x6b
  404be8:	cdq    
  404be9:	test   DWORD PTR es:[ebx+edx*4+0x55e39b0a],0xf3ae99cf
  404bf5:	pop    ebx
  404bf6:	scas   eax,DWORD PTR es:[edi]
  404bf7:	je     0x404c68
  404bf9:	xor    esi,eax
  404bfb:	pusha  
  404bfc:	jnp    0x404bcf
  404bfe:	(bad)  
  404bff:	mov    fs,WORD PTR [ebx-0x19]
  404c02:	and    eax,0x58d709b7
  404c07:	es daa 
  404c09:	xlat   BYTE PTR ds:[ebx]
  404c0a:	ror    BYTE PTR [edx+0x60],1
  404c0d:	pop    edi
  404c0e:	add    al,0xf1
  404c10:	pusha  
  404c11:	pop    edx
  404c12:	sti    
  404c13:	jmp    0x797a:0x13683581
  404c1a:	mov    al,ds:0x56f99961
  404c1f:	frstor [edx-0x5b0dd52c]
  404c25:	jae    0x404bf3
  404c27:	call   0xb3f8e03e
  404c2c:	jl     0x404c6c
  404c2e:	push   esi
  404c2f:	adc    al,0x6c
  404c31:	adc    al,BYTE PTR [edi-0x4b]
  404c34:	jno    0x404c03
  404c36:	push   edi
  404c37:	(bad)  
  404c38:	xchg   edx,eax
  404c39:	jmp    0x404c42
  404c3b:	lahf   
  404c3c:	mov    eax,0x69e69ef7
  404c41:	and    al,0x3a
  404c43:	popf   
  404c44:	sahf   
  404c45:	in     eax,0xd
  404c47:	lods   al,BYTE PTR ds:[esi]
  404c48:	in     eax,0xc5
  404c4a:	xchg   edx,eax
  404c4b:	cmp    DWORD PTR [ebx+0x544b9b10],ebx
  404c51:	addr16 mov ch,0xcc
  404c54:	ja     0x404bfd
  404c56:	jne    0x404cac
  404c58:	in     eax,dx
  404c59:	and    al,0x17
  404c5b:	int3   
  404c5c:	and    dh,BYTE PTR [ebx+0x19fd3576]
  404c62:	cmp    al,0x6
  404c64:	push   esi
  404c65:	pop    eax
  404c66:	js     0x404c74
  404c68:	int3   
  404c69:	cmp    BYTE PTR [ebx-0x1e],0x92
  404c6d:	mov    edi,0x9e3fc6c8
  404c72:	and    bh,BYTE PTR [ebp+0x67]
  404c75:	mov    al,ds:0xbaa917ee
  404c7a:	and    BYTE PTR [edx*8-0x5960f981],dl
  404c81:	clc    
  404c82:	add    eax,0xe9b1505a
  404c87:	mov    bh,0x68
  404c89:	sub    ch,BYTE PTR [edx+ecx*8+0x36c06a5e]
  404c90:	mov    dl,0x78
  404c92:	sub    BYTE PTR [esp+edi*4],dl
  404c95:	push   ebx
  404c96:	xchg   edi,eax
  404c97:	push   ebx
  404c98:	sbb    al,dh
  404c9a:	shr    DWORD PTR ds:[esi-0x2a],0xed
  404c9f:	add    eax,0x3b668dfd
  404ca4:	push   ebp
  404ca5:	in     eax,0xee
  404ca7:	xchg   ebp,eax
  404ca8:	jmp    0x3123:0x1f6a102b
  404caf:	ss stc 
  404cb1:	push   edx
  404cb2:	jb     0x404cd1
  404cb4:	pop    edi
  404cb5:	popa   
  404cb6:	data16 jns 0x404ccd
  404cb9:	sub    ecx,DWORD PTR [ebx]
  404cbb:	dec    ebp
  404cbc:	cmp    ch,BYTE PTR [esi-0x2ee7a01d]
  404cc2:	cmp    dh,bl
  404cc4:	mov    ah,0xe4
  404cc6:	loope  0x404c74
  404cc8:	test   eax,0x24873ea
  404ccd:	mov    ah,BYTE PTR [edi+0x64e6edde]
  404cd3:	jmp    0x2cf6:0xb5ce8be1
  404cda:	out    dx,al
  404cdb:	imul   ecx,DWORD PTR [edx],0x41
  404cde:	pop    edx
  404cdf:	shl    BYTE PTR [edx+0x3e],cl
  404ce2:	test   BYTE PTR [eax-0x1d],dh
  404ce5:	xchg   ecx,eax
  404ce6:	xchg   BYTE PTR [ebx+0x56],ah
  404ce9:	mov    ebx,0x50bcde7d
  404cee:	adc    dh,bh
  404cf0:	add    al,0xe2
  404cf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cf3:	xchg   edi,eax
  404cf4:	dec    al
  404cf6:	mov    ch,0xa9
  404cf8:	out    dx,al
  404cf9:	imul   eax,edx,0xf9f132b1
  404cff:	adc    eax,0xb3e27bbe
  404d04:	jmp    0x404d6c
  404d06:	repnz call 0xa13f:0xb322757d
  404d0e:	daa    
  404d0f:	and    al,0xf3
  404d11:	rcl    eax,1
  404d13:	push   0x5d0371b9
  404d18:	int3   
  404d19:	and    esi,ebp
  404d1b:	stos   BYTE PTR es:[edi],al
  404d1c:	mov    edx,0x88021b6e
  404d21:	dec    edi
  404d22:	scas   eax,DWORD PTR es:[edi]
  404d23:	sub    esp,DWORD PTR [esi]
  404d25:	test   BYTE PTR [edx],dh
  404d27:	jmp    0x404d86
  404d29:	xor    esp,0x367901c2
  404d2f:	or     DWORD PTR [edi-0xf],0xffffffcb
  404d33:	push   esi
  404d34:	(bad)  
  404d36:	sahf   
  404d37:	out    dx,eax
  404d38:	and    esi,DWORD PTR [ebx-0x56b1b5e3]
  404d3e:	rol    BYTE PTR [edi+0x31],cl
  404d41:	mov    DWORD PTR [edi+0x2894f75e],edx
  404d47:	inc    esi
  404d48:	mov    ch,0x3
  404d4a:	shr    BYTE PTR ds:0x214988b,0x3c
  404d51:	sub    eax,0x956e301f
  404d56:	call   0x6f3dcd9d
  404d5b:	loop   0x404d9d
  404d5d:	in     eax,dx
  404d5e:	dec    ebx
  404d5f:	les    esp,FWORD PTR [ebx+eiz*8+0x46]
  404d63:	mov    ch,0x95
  404d65:	aaa    
  404d66:	inc    ah
  404d68:	cmp    eax,ebp
  404d6a:	call   0x3ceb9061
  404d6f:	push   edx
  404d70:	cwde   
  404d71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d72:	test   BYTE PTR [edx-0x2d],cl
  404d75:	cmc    
  404d76:	jo     0x404d37
  404d78:	push   ebp
  404d79:	std    
  404d7a:	mov    eax,0x2ec31375
  404d7f:	pop    esp
  404d80:	or     eax,0xc6d4d83b
  404d85:	push   es
  404d86:	aad    0xb7
  404d88:	dec    ecx
  404d89:	mov    ch,0x55
  404d8b:	adc    DWORD PTR [eax-0x33],ebx
  404d8e:	mov    bl,0xc1
  404d90:	mov    ds:0x39ed0d36,eax
  404d95:	cmp    cl,BYTE PTR [edx]
  404d97:	adc    ecx,DWORD PTR [edi-0x78f1b42]
  404d9d:	jg     0x404d62
  404d9f:	pop    ecx
  404da0:	adc    ebp,DWORD PTR [ebx+0x433a2ff8]
  404da6:	repnz pop edx
  404da8:	stc    
  404da9:	dec    edx
  404daa:	in     al,0xe8
  404dac:	iret   
  404dad:	push   edx
  404dae:	out    0x75,al
  404db0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404db1:	and    ch,0xa8
  404db4:	mov    dh,0x70
  404db6:	push   esp
  404db7:	adc    eax,DWORD PTR [ebx+0x44057232]
  404dbd:	jne    0x404d55
  404dbf:	and    cl,dh
  404dc1:	stos   DWORD PTR es:[edi],eax
  404dc2:	aam    0x10
  404dc4:	adc    DWORD PTR [ebp+0x72],esi
  404dc7:	in     eax,dx
  404dc8:	dec    eax
  404dc9:	retf   
  404dca:	dec    esi
  404dcb:	cmp    bh,BYTE PTR ds:0xbd202dfa
  404dd1:	or     esi,DWORD PTR [esi-0x2fef51b7]
  404dd7:	mov    eax,0xe13ba341
  404ddc:	jmp    0xa0348c9c
  404de1:	dec    ebx
  404de2:	dec    esi
  404de3:	retf   0xb873
  404de6:	cmp    al,0xe0
  404de8:	cmp    eax,0x227e43e5
  404ded:	push   edx
  404dee:	push   esi
  404def:	mov    bl,0x52
  404df1:	push   0xc2f4c02
  404df6:	mov    bh,0x24
  404df8:	push   0x332e2013
  404dfd:	call   0xe917:0xa9859842
  404e04:	sub    DWORD PTR [edx],ecx
  404e06:	imul   edi,DWORD PTR [ebx-0x1],0xfffffff3
  404e0a:	mov    dl,0x3a
  404e0c:	sub    ch,BYTE PTR [ecx+0x6f29adf]
  404e12:	scas   al,BYTE PTR es:[edi]
  404e13:	sbb    cl,BYTE PTR [ecx]
  404e15:	aaa    
  404e16:	mov    edx,0x962b9c69
  404e1b:	add    eax,0x48ee3d0e
  404e20:	dec    ebx
  404e21:	xor    esi,ecx
  404e23:	cmp    al,0x96
  404e25:	dec    ecx
  404e26:	out    0x23,eax
  404e28:	mov    ah,0x0
  404e2a:	dec    ebx
  404e2b:	scas   eax,DWORD PTR es:[edi]
  404e2c:	xchg   BYTE PTR [edx-0x15],ah
  404e2f:	mov    edi,0x5e6f718
  404e34:	xsaveopt [ebp+eiz*4-0x74]
  404e39:	push   ds
  404e3a:	sbb    al,dh
  404e3c:	ins    BYTE PTR es:[edi],dx
  404e3d:	jbe    0x404dc6
  404e3f:	pop    ebp
  404e40:	popf   
  404e41:	sahf   
  404e42:	dec    esp
  404e43:	push   ebp
  404e44:	xchg   esi,eax
  404e45:	push   eax
  404e46:	call   0xe56c:0xdc9cda28
  404e4d:	aam    0xa1
  404e4f:	sub    dh,bh
  404e51:	test   BYTE PTR [esp+ecx*1-0x13916a0c],0x6f
  404e59:	or     esi,esp
  404e5b:	mov    ebx,0x65582aee
  404e60:	sbb    eax,0x58f3998c
  404e65:	sbb    DWORD PTR [edx-0x4571f7b],edx
  404e6b:	out    0x40,eax
  404e6d:	scas   eax,DWORD PTR es:[edi]
  404e6e:	test   al,0xb4
  404e70:	xor    eax,0xe8ce365f
  404e75:	int3   
  404e76:	sbb    esi,DWORD PTR [edx]
  404e78:	mov    dl,0x1c
  404e7a:	sbb    BYTE PTR [edx-0x32c862e0],0x91
  404e81:	sub    bl,BYTE PTR [edi]
  404e83:	hlt    
  404e84:	dec    ebx
  404e85:	xchg   ecx,eax
  404e86:	push   ebp
  404e87:	pop    ss
  404e88:	inc    eax
  404e89:	or     esp,DWORD PTR [esi]
  404e8b:	xlat   BYTE PTR ds:[ebx]
  404e8c:	xor    DWORD PTR [esi+0x57],eax
  404e8f:	jmp    0x818:0xe5be5db5
  404e96:	aaa    
  404e97:	adc    eax,0xd9106449
  404e9c:	adc    edx,esp
  404e9e:	add    eax,0xa4e08368
  404ea3:	sahf   
  404ea4:	repnz mov ah,0xcc
  404ea7:	dec    edx
  404ea8:	nop
  404ea9:	cmp    cl,0xb9
  404eac:	fstp   DWORD PTR cs:[eax-0x77a120df]
  404eb3:	mov    dl,0x8f
  404eb5:	and    eax,0x69888cd4
  404eba:	and    al,0x38
  404ebc:	and    ecx,ebp
  404ebe:	cmp    esp,ecx
  404ec0:	xor    al,0xc2
  404ec2:	mov    eax,ds:0xe2dbb01e
  404ec7:	mov    bh,BYTE PTR [ebp+edi*2+0x1c8e3061]
  404ece:	in     eax,dx
  404ecf:	add    ebp,DWORD PTR [ecx+0x13a3093c]
  404ed5:	nop
  404ed6:	mov    al,0x85
  404ed8:	fmul   DWORD PTR [ecx+ebp*1-0xa]
  404edc:	dec    esp
  404edd:	xchg   esp,eax
  404ede:	jmp    0x6122:0x7df5389e
  404ee5:	neg    DWORD PTR [edi]
  404ee7:	cmp    BYTE PTR [edx],bh
  404ee9:	inc    edx
  404eea:	xor    eax,0x31a5cea3
  404eef:	xor    eax,0x149bbd05
  404ef4:	pop    ebp
  404ef5:	xchg   edx,eax
  404ef6:	push   0x72cce1e
  404efb:	mov    esp,0xf2f5f0c7
  404f00:	ins    BYTE PTR es:[edi],dx
  404f01:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  404f03:	pop    esp
  404f04:	jge    0x404e8e
  404f06:	(bad)  
  404f07:	fnstenv ss:[eax+edx*1+0x65]
  404f0c:	pop    ebx
  404f0d:	xchg   ebp,eax
  404f0e:	inc    esi
  404f0f:	mov    esp,DWORD PTR [esi]
  404f11:	lock pop ebp
  404f13:	dec    esi
  404f14:	test   DWORD PTR [esi+ebx*1],ecx
  404f17:	mov    dh,0x83
  404f19:	fstp   TBYTE PTR [edi]
  404f1b:	in     al,dx
  404f1c:	stos   DWORD PTR es:[edi],eax
  404f1d:	push   esi
  404f1e:	sub    al,0x48
  404f20:	inc    ebp
  404f21:	ror    ebp,cl
  404f23:	stc    
  404f24:	cmp    DWORD PTR [ebx-0x10],ecx
  404f27:	sbb    eax,0xaf73e89f
  404f2c:	add    dl,BYTE PTR [ecx-0x3ba74d8]
  404f32:	mov    edi,DWORD PTR [ebp-0x8]
  404f35:	xor    edi,edx
  404f37:	add    edi,esi
  404f39:	mov    esi,DWORD PTR [ebp+0x8]
  404f3c:	imul   edi,ecx
  404f3f:	mov    ebx,DWORD PTR [ebp+0xc]
  404f42:	xor    eax,edx
  404f44:	add    eax,ecx
  404f46:	mov    al,BYTE PTR [ebx+eax*1+0x3272dd]
  404f4d:	mov    BYTE PTR [edi+esi*1],al
  404f50:	mov    eax,DWORD PTR [ebp-0x8]
  404f53:	mov    esi,DWORD PTR [ebp+0x10]
  404f56:	xor    eax,edx
  404f58:	xor    ebx,ebx
  404f5a:	add    esi,0xfabdbeed
  404f60:	adc    ebx,0xffffffff
  404f63:	lea    ecx,[ecx+eax*1+0x3272dd]
  404f6a:	xor    edi,edi
  404f6c:	xor    esi,0x8a29a127
  404f72:	xor    ebx,0x0
  404f75:	mov    eax,ecx
  404f77:	add    eax,0xfabdbeed
  404f7c:	adc    edi,0xffffffff
  404f7f:	xor    eax,0x8a29a127
  404f84:	xor    edi,0x0
  404f87:	cmp    eax,esi
  404f89:	jne    0x402b72
  404f8f:	cmp    edi,ebx
  404f91:	jne    0x402b72
  404f97:	mov    eax,0xf89c85b2
  404f9c:	pop    ebx
  404f9d:	pop    edi
  404f9e:	pop    esi
  404f9f:	leave  
  404fa0:	ret    0xc
  404fa3:	push   ebp
  404fa4:	mov    ebp,esp
  404fa6:	push   ecx
  404fa7:	add    eax,DWORD PTR ds:0x42a000
  404fad:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  404fb4:	sbb    DWORD PTR ds:0x42b008,0x61d9
  404fbe:	mov    eax,DWORD PTR [ebp+0x8]
  404fc1:	xor    DWORD PTR ds:0x42c018,0x2d2e
  404fcb:	mov    al,BYTE PTR [eax]
  404fcd:	add    al,0xb
  404fcf:	xor    al,0x71
  404fd1:	cmp    al,0x29
  404fd3:	mov    DWORD PTR ds:0x429010,0x6c7b
  404fdd:	jne    0x40507a
  404fe3:	mov    eax,DWORD PTR [ebp+0x8]
  404fe6:	or     edx,DWORD PTR ds:0x42900c
  404fec:	mov    ecx,DWORD PTR [ebp+0x8]
  404fef:	and    DWORD PTR ds:0x42b00c,0x0
  404ff9:	mov    edx,DWORD PTR ds:0x42b00c
  404fff:	inc    edx
  405000:	mov    DWORD PTR ds:0x42b00c,edx
  405006:	cmp    DWORD PTR ds:0x42b00c,0x1a
  40500d:	jne    0x40501e
  405013:	push   0x42900c
  405018:	call   DWORD PTR ds:0x42ed75
  40501e:	cmp    DWORD PTR ds:0x42b00c,0x15
  405025:	jb     0x404ff9
  40502b:	or     DWORD PTR ds:0x42d008,0x1488
  405035:	add    ecx,DWORD PTR [eax+0x3c]
  405038:	mov    edx,0x7510896
  40503d:	mov    DWORD PTR [ebp+0x8],ecx
  405040:	mov    eax,DWORD PTR [ebp-0x4]
  405043:	xor    eax,edx
  405045:	push   esi
  405046:	mov    esi,DWORD PTR ds:0x42d000
  40504c:	and    DWORD PTR ds:0x42a00c,esi
  405052:	mov    esi,DWORD PTR [ebp+0x8]
  405055:	mov    ecx,0x3272dd
  40505a:	add    eax,ecx
  40505c:	cmp    DWORD PTR [esi+0x54],eax
  40505f:	pop    esi
  405060:	je     0x40506e
  405066:	mov    eax,DWORD PTR [ebp+0x8]
  405069:	jmp    0x405087
  40506e:	mov    eax,DWORD PTR [ebp-0x4]
  405071:	xor    eax,edx
  405073:	add    eax,ecx
  405075:	jmp    0x405087
  40507a:	mov    eax,DWORD PTR [ebp-0x4]
  40507d:	xor    eax,0x7510896
  405082:	add    eax,0x3272dd
  405087:	leave  
  405088:	ret    0x4
  40508b:	push   ebp
  40508c:	mov    ebp,esp
  40508e:	sub    esp,0x78
  405091:	push   ebx
  405092:	push   esi
  405093:	push   edi
  405094:	push   0x1f
  405096:	lea    eax,[ebp-0x78]
  405099:	xor    DWORD PTR ds:0x429018,0x42a014
  4050a3:	push   eax
  4050a4:	push   0x0
  4050a6:	mov    DWORD PTR ds:0x429010,0x21c3
  4050b0:	call   DWORD PTR ds:0x42ed69
  4050b6:	add    DWORD PTR ds:0x429024,0x42c000
  4050c0:	push   0x97898797
  4050c5:	call   DWORD PTR ds:0x42ed2d
  4050cb:	adc    DWORD PTR ds:0x42b018,0x6ca1
  4050d5:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4050dc:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  4050e3:	mov    ecx,DWORD PTR [ebp-0x4]
  4050e6:	mov    ebx,0x7510896
  4050eb:	add    DWORD PTR ds:0x42a014,0x255d
  4050f5:	xor    ecx,ebx
  4050f7:	or     DWORD PTR ds:0x429000,0x7ff8
  405101:	mov    eax,0x3272dd
  405106:	add    ecx,eax
  405108:	mov    DWORD PTR [ebp-0x1c],ecx
  40510b:	not    DWORD PTR ds:0x42c018
  405111:	mov    ecx,DWORD PTR [ebp+0x14]
  405114:	test   ecx,ecx
  405116:	mov    DWORD PTR ds:0x42a00c,0x3f58
  405120:	je     0x40513a
  405126:	inc    ecx
  405127:	mov    ecx,DWORD PTR [ebp+0x14]
  40512a:	and    DWORD PTR ds:0x429014,0x1a66
  405134:	mov    ecx,DWORD PTR [ecx]
  405136:	dec    edi
  405137:	mov    DWORD PTR [ebp-0x1c],ecx
  40513a:	add    DWORD PTR ds:0x42901c,edx
  405140:	mov    ecx,0x7665
  405145:	and    DWORD PTR ds:0x42c008,0x0
  40514f:	jmp    0x405161
  405154:	mov    edi,DWORD PTR ds:0x42c008
  40515a:	inc    edi
  40515b:	mov    DWORD PTR ds:0x42c008,edi
  405161:	cmp    DWORD PTR ds:0x42c008,0x10
  405168:	jae    0x405192
  40516e:	cmp    DWORD PTR ds:0x42c008,0x1f
  405175:	jne    0x40518b
  40517b:	push   0x399e
  405180:	push   0x848f
  405185:	call   DWORD PTR ds:0x42ed35
  40518b:	jmp    0x405154
  405190:	xor    edi,edi
  405192:	imul   edx,eax
  405195:	movzx  esi,BYTE PTR ds:0x42c010
  40519c:	xor    DWORD PTR ds:0x42c004,esi
  4051a2:	mov    esi,0x76532
  4051a7:	add    edx,ecx
  4051a9:	and    DWORD PTR ds:0x42a018,0x0
  4051b3:	mov    edi,DWORD PTR ds:0x42a018
  4051b9:	inc    edi
  4051ba:	mov    DWORD PTR ds:0x42a018,edi
  4051c0:	cmp    DWORD PTR ds:0x42a018,0x6
  4051c7:	jne    0x4051e0
  4051cd:	push   0x8802
  4051d2:	push   0x429004
  4051d7:	push   DWORD PTR [ebp-0x24]
  4051da:	call   DWORD PTR ds:0x42ed39
  4051e0:	cmp    DWORD PTR ds:0x42a018,0x5
  4051e7:	jne    0x4051fa
  4051ed:	mov    edi,DWORD PTR ds:0x42a018
  4051f3:	inc    edi
  4051f4:	mov    DWORD PTR ds:0x42a018,edi
  4051fa:	cmp    DWORD PTR ds:0x42a018,0x10
  405201:	jb     0x4051b3
  405207:	and    DWORD PTR ds:0x42d00c,0x0
  405211:	jmp    0x405223
  405216:	mov    edi,DWORD PTR ds:0x42d00c
  40521c:	inc    edi
  40521d:	mov    DWORD PTR ds:0x42d00c,edi
  405223:	cmp    DWORD PTR ds:0x42d00c,0x15
  40522a:	jae    0x405278
  405230:	cmp    DWORD PTR ds:0x42d00c,0xa
  405237:	jne    0x40524d
  40523d:	push   0x42e05b
  405242:	push   0x42e010
  405247:	call   DWORD PTR ds:0x42ed3d
  40524d:	cmp    DWORD PTR ds:0x42d00c,0x9
  405254:	jne    0x405269
  40525a:	xor    edi,edi
  40525c:	or     edi,DWORD PTR ds:0x42d00c
  405262:	inc    edi
  405263:	mov    DWORD PTR ds:0x42d00c,edi
  405269:	jmp    0x405216
  40526e:	adc    DWORD PTR ds:0x42b000,0x4b16
  405278:	xchg   esi,ecx
  40527a:	xor    ecx,DWORD PTR ds:0x42a00c
  405280:	mov    edi,0x54354
  405285:	sub    edx,edi
  405287:	sbb    ecx,0x55bb
  40528d:	mov    ecx,DWORD PTR [ebp-0x4]
  405290:	sub    DWORD PTR ds:0x42a01c,edx
  405296:	xor    ecx,ebx
  405298:	mov    esi,DWORD PTR ds:0x42a018
  40529e:	and    esi,DWORD PTR ds:0x429000
  4052a4:	mov    DWORD PTR ds:0x42a018,esi
  4052aa:	add    ecx,eax
  4052ac:	mov    DWORD PTR [ebp-0x8],ecx
  4052af:	and    DWORD PTR ds:0x42b010,0x0
  4052b9:	jmp    0x4052cb
  4052be:	mov    esi,DWORD PTR ds:0x42b010
  4052c4:	inc    esi
  4052c5:	mov    DWORD PTR ds:0x42b010,esi
  4052cb:	cmp    DWORD PTR ds:0x42b010,0x1e
  4052d2:	jae    0x405313
  4052d8:	cmp    DWORD PTR ds:0x42b010,0x4
  4052df:	jne    0x4052f4
  4052e5:	push   DWORD PTR [ebp-0x1c]
  4052e8:	push   DWORD PTR [ebp-0x20]
  4052eb:	push   DWORD PTR [ebp-0xc]
  4052ee:	call   DWORD PTR ds:0x42ed41
  4052f4:	cmp    DWORD PTR ds:0x42b010,0x3
  4052fb:	jne    0x40530e
  405301:	mov    esi,DWORD PTR ds:0x42b010
  405307:	inc    esi
  405308:	mov    DWORD PTR ds:0x42b010,esi
  40530e:	jmp    0x4052be
  405313:	mov    ecx,DWORD PTR [ebp-0x14]
  405316:	xor    ecx,ebx
  405318:	add    ecx,eax
  40531a:	and    DWORD PTR ds:0x42a00c,0x4b6f
  405324:	mov    DWORD PTR [ebp-0x24],ecx
  405327:	mov    DWORD PTR ds:0x429024,0x1f
  405331:	cmp    DWORD PTR ds:0x429024,0x0
  405338:	je     0x405390
  40533e:	cmp    DWORD PTR ds:0x429024,0x6
  405345:	jne    0x40535e
  40534b:	push   0x5506
  405350:	push   0x42b000
  405355:	push   DWORD PTR [ebp-0x28]
  405358:	call   DWORD PTR ds:0x42ed45
  40535e:	cmp    DWORD PTR ds:0x429024,0x7
  405365:	jne    0x405378
  40536b:	mov    ecx,DWORD PTR ds:0x429024
  405371:	dec    ecx
  405372:	mov    DWORD PTR ds:0x429024,ecx
  405378:	mov    ecx,DWORD PTR ds:0x429024
  40537e:	dec    ecx
  40537f:	mov    DWORD PTR ds:0x429024,ecx
  405385:	jmp    0x405331
  40538a:	or     DWORD PTR ds:0x42a004,ebx
  405390:	mov    ecx,DWORD PTR [ebp-0x4]
  405393:	xor    ecx,ebx
  405395:	add    ecx,eax
  405397:	sub    esi,0x6631
  40539d:	mov    DWORD PTR [ebp-0x30],ecx
  4053a0:	dec    esi
  4053a1:	mov    esi,DWORD PTR [ebp-0x4]
  4053a4:	and    DWORD PTR ds:0x42d01c,0x0
  4053ae:	jmp    0x4053c2
  4053b3:	xor    ecx,ecx
  4053b5:	or     ecx,DWORD PTR ds:0x42d01c
  4053bb:	inc    ecx
  4053bc:	mov    DWORD PTR ds:0x42d01c,ecx
  4053c2:	cmp    DWORD PTR ds:0x42d01c,0x1e
  4053c9:	jae    0x405407
  4053cf:	cmp    DWORD PTR ds:0x42d01c,0xe
  4053d6:	jne    0x4053e2
  4053dc:	call   DWORD PTR ds:0x42ed51
  4053e2:	cmp    DWORD PTR ds:0x42d01c,0xd
  4053e9:	jne    0x4053fc
  4053ef:	mov    ecx,DWORD PTR ds:0x42d01c
  4053f5:	inc    ecx
  4053f6:	mov    DWORD PTR ds:0x42d01c,ecx
  4053fc:	jmp    0x4053b3
  405401:	or     ecx,DWORD PTR ds:0x42a000
  405407:	xor    esi,ebx
  405409:	dec    ecx
  40540a:	add    esi,eax
  40540c:	mov    ecx,DWORD PTR [ebp-0x24]
  40540f:	and    DWORD PTR ds:0x429000,0x42c018
  405419:	sub    ecx,eax
  40541b:	or     DWORD PTR ds:0x42b014,0x429024
  405425:	lea    edx,[esi-0x3272dd]
  40542b:	add    DWORD PTR ds:0x42d008,0x42a004
  405435:	xor    ecx,ebx
  405437:	adc    DWORD PTR ds:0x42d018,0x3588
  405441:	xor    edx,ebx
  405443:	cmp    edx,ecx
  405445:	je     0x4056db
  40544b:	mov    ecx,DWORD PTR [ebp-0x4]
  40544e:	or     DWORD PTR ds:0x42a004,0x7d41
  405458:	xor    ecx,ebx
  40545a:	sbb    DWORD PTR ds:0x42c004,0x1a4b
  405464:	add    ecx,eax
  405466:	cmp    esi,ecx
  405468:	mov    DWORD PTR ds:0x429018,0x444d
  405472:	jne    0x4056b8
  405478:	and    DWORD PTR ds:0x42b004,0x273e
  405482:	push   DWORD PTR [ebp+0x8]
  405485:	add    DWORD PTR ds:0x42d01c,0x42c004
  40548f:	call   0x404fa3
  405494:	mov    DWORD PTR [ebp-0x18],eax
  405497:	sub    ecx,ecx
  405499:	mov    eax,DWORD PTR [ebp-0x4]
  40549c:	and    DWORD PTR ds:0x42d010,0x0
  4054a6:	jmp    0x4054b8
  4054ab:	mov    edi,DWORD PTR ds:0x42d010
  4054b1:	inc    edi
  4054b2:	mov    DWORD PTR ds:0x42d010,edi
  4054b8:	cmp    DWORD PTR ds:0x42d010,0x1b
  4054bf:	jae    0x40557c
  4054c5:	cmp    DWORD PTR ds:0x42d010,0x10
  4054cc:	jne    0x4054d8
  4054d2:	call   DWORD PTR ds:0x42ed55
  4054d8:	cmp    DWORD PTR ds:0x42d010,0xf
  4054df:	jne    0x4054f2
  4054e5:	mov    edi,DWORD PTR ds:0x42d010
  4054eb:	inc    edi
  4054ec:	mov    DWORD PTR ds:0x42d010,edi
  4054f2:	jmp    0x4054ab
  4054f7:	mov    DWORD PTR ds:0x42c00c,0x1c
  405501:	cmp    DWORD PTR ds:0x42c00c,0x0
  405508:	je     0x40557c
  40550e:	cmp    DWORD PTR ds:0x42c00c,0x4
  405515:	jne    0x405544
  40551b:	push   0x213d
  405520:	push   0x2583
  405525:	push   0x42d000
  40552a:	push   0x5f61
  40552f:	push   0x589a
  405534:	push   0x1da2
  405539:	push   0x4b46
  40553e:	call   DWORD PTR ds:0x42ed59
  405544:	cmp    DWORD PTR ds:0x42c00c,0x5
  40554b:	jne    0x40555e
  405551:	mov    edi,DWORD PTR ds:0x42c00c
  405557:	dec    edi
  405558:	mov    DWORD PTR ds:0x42c00c,edi
  40555e:	xor    edi,edi
  405560:	add    edi,DWORD PTR ds:0x42c00c
  405566:	dec    edi
  405567:	mov    DWORD PTR ds:0x42c00c,edi
  40556d:	jmp    0x405501
  405572:	adc    DWORD PTR ds:0x42c004,0x62a8
  40557c:	mov    ecx,DWORD PTR [ebp-0x18]
  40557f:	dec    edi
  405580:	xor    eax,ebx
  405582:	sub    edi,0x56bd
  405588:	mov    edi,0x3272dd
  40558d:	mov    DWORD PTR ds:0x42d00c,0x2303
  405597:	add    eax,edi
  405599:	mov    DWORD PTR ds:0x42a00c,0x3ae7
  4055a3:	cmp    ecx,eax
  4055a5:	mov    DWORD PTR ds:0x42d018,0x39c7
  4055af:	je     0x407aa3
  4055b5:	add    DWORD PTR ds:0x42b004,0x7234
  4055bf:	push   DWORD PTR [ebp-0x18]
  4055c2:	push   DWORD PTR [ebp+0x8]
  4055c5:	call   0x40cc1e
  4055ca:	mov    ecx,DWORD PTR ds:0x42b01c
  4055d0:	sub    DWORD PTR ds:0x42a010,ecx
  4055d6:	mov    DWORD PTR [ebp-0x18],eax
  4055d9:	mov    eax,DWORD PTR [ebp-0x4]
  4055dc:	mov    ecx,DWORD PTR [ebp-0x18]
  4055df:	mov    DWORD PTR ds:0x429000,0x7fe2
  4055e9:	xor    eax,ebx
  4055eb:	or     DWORD PTR ds:0x42a01c,0x42c010
  4055f5:	add    eax,edi
  4055f7:	mov    DWORD PTR ds:0x42b010,0x7af8
  405601:	cmp    ecx,eax
  405603:	mov    DWORD PTR ds:0x429014,0x1a63
  40560d:	je     0x407aa3
  405613:	mov    eax,ds:0x411f6c
  405618:	mov    ecx,DWORD PTR ds:0x411f84
  40561e:	sub    eax,ecx
  405620:	sub    eax,DWORD PTR [eax+ecx*1]
  405623:	mov    eax,DWORD PTR [ebp-0x18]
  405626:	mov    eax,DWORD PTR [eax+0x18]
  405629:	mov    DWORD PTR [ebp-0x24],eax
  40562c:	and    DWORD PTR ds:0x429028,edi
  405632:	mov    eax,DWORD PTR [ebp-0x18]
  405635:	and    DWORD PTR ds:0x429014,0x0
  40563f:	xor    ecx,ecx
  405641:	xor    ecx,DWORD PTR ds:0x429014
  405647:	inc    ecx
  405648:	mov    DWORD PTR ds:0x429014,ecx
  40564e:	cmp    DWORD PTR ds:0x429014,0xa
  405655:	jne    0x405669
  40565b:	push   DWORD PTR [ebp-0xc]
  40565e:	push   0x42e0a1
  405663:	call   DWORD PTR ds:0x42ed5d
  405669:	cmp    DWORD PTR ds:0x429014,0x9
  405670:	jne    0x405683
  405676:	mov    ecx,DWORD PTR ds:0x429014
  40567c:	inc    ecx
  40567d:	mov    DWORD PTR ds:0x429014,ecx
  405683:	cmp    DWORD PTR ds:0x429014,0x1c
  40568a:	jb     0x40563f
  405690:	mov    ecx,DWORD PTR [ebp+0x8]
  405693:	add    ecx,DWORD PTR [eax+0x20]
  405696:	mov    DWORD PTR [ebp-0x2c],ecx
  405699:	mov    eax,DWORD PTR [ebp-0x18]
  40569c:	mov    ecx,DWORD PTR [ebp+0x8]
  40569f:	add    ecx,DWORD PTR [eax+0x24]
  4056a2:	mov    DWORD PTR [ebp-0x34],ecx
  4056a5:	mov    eax,DWORD PTR [ebp-0x18]
  4056a8:	mov    ecx,DWORD PTR [ebp+0x8]
  4056ab:	add    ecx,DWORD PTR [eax+0x1c]
  4056ae:	mov    eax,edi
  4056b0:	mov    DWORD PTR [ebp-0x18],ecx
  4056b3:	jmp    0x407a6b
  4056b8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4056bb:	mov    edx,DWORD PTR [ebp+0x8]
  4056be:	add    edx,DWORD PTR [ecx+esi*4]
  4056c1:	mov    DWORD PTR [ebp-0x28],edx
  4056c4:	mov    ecx,DWORD PTR [ebp-0x4]
  4056c7:	mov    edx,DWORD PTR [ebp-0x28]
  4056ca:	xor    ecx,ebx
  4056cc:	add    ecx,eax
  4056ce:	cmp    edx,ecx
  4056d0:	je     0x407a6b
  4056d6:	jmp    0x407a57
  4056db:	mov    ecx,DWORD PTR [ebp-0x4]
  4056de:	mov    edx,DWORD PTR [ebp-0x8]
  4056e1:	xor    ecx,ebx
  4056e3:	add    ecx,eax
  4056e5:	cmp    edx,ecx
  4056e7:	je     0x407aaf
  4056ed:	jmp    0x407a45
  4056f2:	or     al,0xd7
  4056f4:	xchg   ebp,eax
  4056f5:	loop   0x40576c
  4056f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056f8:	emms   
  4056fa:	adc    dl,BYTE PTR ds:0xb964f58a
  405700:	idiv   BYTE PTR [edi+edx*8+0x377a7a5f]
  405707:	pop    edi
  405708:	jp     0x405784
  40570a:	xor    ebp,DWORD PTR [ebx-0x668ee405]
  405710:	ficom  WORD PTR [esi]
  405712:	pop    ds
  405713:	inc    eax
  405714:	add    bl,BYTE PTR [esi]
  405716:	iret   
  405717:	mov    bl,0x2f
  405719:	pop    esi
  40571a:	inc    ecx
  40571b:	popf   
  40571c:	xchg   esp,eax
  40571d:	dec    edx
  40571e:	inc    esi
  40571f:	outs   dx,BYTE PTR ds:[esi]
  405720:	out    0x94,eax
  405722:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405723:	test   DWORD PTR [eax+0x5b],0x92268ba7
  40572a:	stc    
  40572b:	jae    0x4056b2
  40572d:	ror    DWORD PTR [ebx],1
  40572f:	mov    ch,0x56
  405731:	xchg   edx,eax
  405732:	mov    ch,0x6d
  405734:	fmul   st(5),st
  405736:	add    esp,DWORD PTR ds:0x6f7670db
  40573c:	sub    DWORD PTR [ecx],edi
  40573e:	int    0xa3
  405740:	inc    esi
  405741:	lock shl DWORD PTR [edi-0x385e62fa],0xbc
  405749:	(bad)  
  40574b:	mov    ah,0x9f
  40574d:	shr    DWORD PTR [eax+0x5fcca34d],cl
  405753:	jb     0x40575f
  405755:	pop    esp
  405756:	fistp  DWORD PTR [esi+0x740d7fc9]
  40575c:	jne    0x405758
  40575e:	push   eax
  40575f:	adc    edi,esi
  405761:	stos   BYTE PTR es:[edi],al
  405762:	(bad)
  405766:	sub    DWORD PTR [edx-0x65],0x855936c2
  40576d:	or     bh,ah
  40576f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405770:	std    
  405771:	add    eax,0x517b590
  405776:	mov    eax,fs
  405778:	(bad)  
  405779:	sti    
  40577a:	call   0xba94:0x33647d9d
  405781:	fcomp  QWORD PTR [edi]
  405783:	inc    esi
  405784:	fistp  WORD PTR [ebx+0x6a]
  405787:	test   BYTE PTR [esi-0x1c],bh
  40578a:	ret    
  40578b:	arpl   WORD PTR [ebp-0x25],ax
  40578e:	push   esi
  40578f:	add    dl,cl
  405791:	inc    esp
  405792:	jno    0x4057d8
  405794:	fs push ebp
  405796:	mov    eax,ds:0xcba225e1
  40579b:	push   cs
  40579c:	dec    esp
  40579d:	pop    ebp
  40579e:	push   ecx
  40579f:	mov    ds:0xa6db61a8,eax
  4057a4:	add    al,0x53
  4057a6:	imul   ebx,DWORD PTR [ecx-0x4c3ea49c],0x55ca56c
  4057b0:	push   DWORD PTR [edx]
  4057b2:	bound  ebx,QWORD PTR [edx+0xf]
  4057b5:	rcl    DWORD PTR [edx-0x43],cl
  4057b8:	dec    ecx
  4057b9:	mov    ecx,0x9eb7e507
  4057be:	add    ecx,ebp
  4057c0:	xchg   edi,eax
  4057c1:	mov    bh,0x52
  4057c3:	mov    edx,0x1d8757b4
  4057c8:	xlat   BYTE PTR ds:[ebx]
  4057c9:	je     0x4057ed
  4057cb:	sub    BYTE PTR [edi-0x31],dl
  4057ce:	fcmovnbe st,st(5)
  4057d0:	jmp    0x40575a
  4057d2:	cmp    eax,esp
  4057d4:	test   eax,0xb60e5458
  4057d9:	push   eax
  4057da:	std    
  4057db:	add    eax,0xf3961a47
  4057e0:	sbb    cl,BYTE PTR [ebp+0xd]
  4057e3:	sub    BYTE PTR [ebx-0x68],ch
  4057e6:	inc    eax
  4057e7:	loope  0x405814
  4057e9:	test   DWORD PTR [edx],0xb17d45ac
  4057ef:	xor    ah,al
  4057f1:	pop    ecx
  4057f2:	rol    BYTE PTR [esi],cl
  4057f4:	test   al,0xb7
  4057f6:	inc    ebx
  4057f7:	jae    0x405867
  4057f9:	mov    esi,0x609244ce
  4057fe:	and    edi,DWORD PTR [edx+0x6b7fb1af]
  405804:	cmp    DWORD PTR [eax-0x10b0c383],esp
  40580a:	in     eax,dx
  40580b:	stc    
  40580c:	ret    0x93c3
  40580f:	mov    ds:0x79b17ce8,al
  405814:	mov    ebx,0x76b4c16d
  405819:	sti    
  40581a:	inc    eax
  40581b:	xor    ebp,DWORD PTR [ebp-0x5c439143]
  405821:	(bad)  
  405822:	sbb    DWORD PTR [eax+0x1642074f],ebx
  405828:	shr    DWORD PTR [ecx+ebx*1+0x40],1
  40582c:	je     0x4057b9
  40582e:	(bad)  
  40582f:	(bad)  
  405832:	sub    ah,BYTE PTR [ebx+0x1db48119]
  405838:	std    
  405839:	sbb    DWORD PTR [ecx],ebp
  40583b:	dec    ecx
  40583c:	dec    edi
  40583d:	mov    dh,0x4a
  40583f:	cmp    al,0x3f
  405841:	(bad)  
  405842:	fild   WORD PTR [ecx-0x2acbc952]
  405848:	pusha  
  405849:	jo     0x405830
  40584b:	hlt    
  40584c:	neg    BYTE PTR [esi]
  40584e:	pop    eax
  40584f:	adc    DWORD PTR [esi-0x2e],0xfffffff5
  405853:	ja     0x405805
  405855:	int3   
  405856:	(bad)  
  405857:	std    
  405858:	mov    ebx,0x669b142d
  40585d:	test   BYTE PTR [eax],bl
  40585f:	add    DWORD PTR [eax+0x4c7b5d52],esp
  405865:	push   edi
  405866:	jge    0x40582f
  405868:	mov    dl,0x6d
  40586a:	mov    DWORD PTR [ecx-0x23088cb2],edx
  405870:	nop
  405871:	(bad)  
  405872:	jmp    0xb2a1f63a
  405877:	cwde   
  405878:	dec    edi
  405879:	imul   BYTE PTR [edi]
  40587b:	lahf   
  40587c:	out    0x33,eax
  40587e:	inc    ecx
  40587f:	jmp    0x3cd21d62
  405884:	pop    ss
  405885:	aas    
  405886:	jecxz  0x405907
  405888:	inc    esp
  405889:	sbb    ebp,DWORD PTR [esi-0x10d0025b]
  40588f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405890:	popf   
  405891:	xchg   edi,eax
  405892:	in     al,0x62
  405894:	inc    eax
  405895:	mov    ds:0x60f5faf0,eax
  40589a:	test   DWORD PTR [esi-0x5f],ebx
  40589d:	outs   dx,BYTE PTR ds:[esi]
  40589e:	jnp    0x40584b
  4058a0:	xchg   esp,eax
  4058a1:	aam    0xe6
  4058a3:	ja     0x40584f
  4058a5:	pop    esp
  4058a6:	sbb    ebp,esp
  4058a8:	push   eax
  4058a9:	mov    edi,0xe11fa4df
  4058ae:	mov    ds:0xfce61108,eax
  4058b3:	sahf   
  4058b4:	xchg   ebx,eax
  4058b5:	adc    al,0xfe
  4058b7:	mov    ecx,0xf1340def
  4058bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058be:	stos   DWORD PTR es:[edi],eax
  4058bf:	neg    DWORD PTR [eax]
  4058c1:	fstp   QWORD PTR [esi+0x54477408]
  4058c7:	lahf   
  4058c8:	xor    DWORD PTR [eax],ebx
  4058ca:	cmp    ebp,DWORD PTR [esi+0x5f]
  4058cd:	retf   0x2ddb
  4058d0:	adc    eax,0x3aabf36e
  4058d5:	addr16 mov bl,0x3c
  4058d8:	push   ecx
  4058d9:	add    DWORD PTR ds:[bx+0x71bb],edx
  4058df:	dec    esi
  4058e0:	out    dx,al
  4058e1:	sbb    BYTE PTR [edx+0x2a],ch
  4058e4:	xor    DWORD PTR [esi-0x47],ecx
  4058e7:	sbb    eax,0xaeeb8066
  4058ec:	retf   0x296b
  4058ef:	mov    ch,0xc7
  4058f1:	push   0xa5db90d7
  4058f6:	popa   
  4058f7:	pop    ebp
  4058f8:	sti    
  4058f9:	cld    
  4058fa:	sbb    al,BYTE PTR [esi+0x71]
  4058fd:	or     ebp,DWORD PTR [ebx+0x273d4996]
  405903:	xchg   ecx,eax
  405904:	inc    eax
  405905:	and    ch,ch
  405907:	pop    edi
  405908:	add    edx,ebx
  40590a:	sbb    BYTE PTR [edi+eiz*8-0x50],al
  40590e:	rcr    BYTE PTR [ebp+0x65],1
  405911:	pop    ss
  405912:	mov    ds:0xa36f265c,al
  405917:	popf   
  405918:	call   0x27a8:0xab186d41
  40591f:	dec    BYTE PTR ds:0x77972901
  405925:	mov    eax,ds:0x9b89ce3d
  40592a:	adc    al,0xfe
  40592c:	out    dx,eax
  40592d:	icebp  
  40592e:	aad    0x85
  405930:	in     eax,dx
  405931:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405932:	mov    al,ds:0xc0b61567
  405937:	es sub bl,dh
  40593a:	retf   
  40593b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40593c:	je     0x4058e5
  40593e:	pushf  
  40593f:	mov    ebx,0x7e8bbed2
  405944:	mov    ebp,0x516fa356
  405949:	jg     0x4058fd
  40594b:	xor    si,WORD PTR fs:0x84554acf
  405953:	jno    0x405907
  405955:	pop    eax
  405956:	push   eax
  405957:	mov    al,ds:0x3249d110
  40595c:	ds push eax
  40595e:	out    0xeb,al
  405960:	mov    ebx,0x54844dd4
  405965:	sbb    al,0x11
  405967:	scas   eax,DWORD PTR es:[edi]
  405968:	jmp    0x22e15d06
  40596d:	xchg   ecx,eax
  40596e:	or     bl,BYTE PTR [ebx-0x2e]
  405971:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405972:	xor    ch,BYTE PTR [esi+eax*1]
  405975:	mov    ebx,0x6c9c2f5e
  40597a:	xor    eax,0xe99cbb4c
  40597f:	sub    ebx,DWORD PTR [ebx+0x1dc666af]
  405985:	aad    0xe0
  405987:	ret    
  405988:	js     0x4059d8
  40598a:	cld    
  40598b:	push   esi
  40598c:	mov    BYTE PTR [edx+0x66],0x2a
  405990:	xor    al,0xa2
  405992:	or     eax,0x91fb02f8
  405997:	mov    al,ds:0xe0d9a295
  40599c:	retf   0x95b
  40599f:	add    DWORD PTR [edx],edi
  4059a1:	loop   0x4059cb
  4059a3:	adc    al,0x47
  4059a5:	(bad)  
  4059a7:	dec    ebx
  4059a8:	ror    DWORD PTR [ebx-0x6b],0x13
  4059ac:	jmp    0x1f5e9d36
  4059b1:	mov    esi,0x53be3810
  4059b6:	adc    edx,eax
  4059b8:	stos   BYTE PTR es:[edi],al
  4059b9:	or     BYTE PTR [ebp-0x571ccf7a],ah
  4059bf:	dec    ebp
  4059c0:	rcr    DWORD PTR [ebp+0x6f5a9b04],cl
  4059c6:	sub    DWORD PTR [ecx+edx*1+0x5d],0x62
  4059cb:	(bad)  
  4059cc:	leave  
  4059cd:	dec    eax
  4059ce:	jo     0x4059e8
  4059d0:	rcr    BYTE PTR [edi+0x5],1
  4059d3:	popf   
  4059d4:	mov    cl,0x22
  4059d6:	xchg   ebp,eax
  4059d7:	fidivr DWORD PTR [edx]
  4059d9:	mov    WORD PTR [eax+0x1e],gs
  4059dc:	dec    eax
  4059dd:	sub    al,0x7b
  4059df:	inc    ecx
  4059e0:	mov    esi,0xa329f4ac
  4059e5:	mov    BYTE PTR ds:0x1c26da3c,bh
  4059eb:	mov    BYTE PTR [ecx+0x23],0xab
  4059ef:	inc    ebp
  4059f0:	xchg   edx,eax
  4059f1:	neg    BYTE PTR [eax+0x7c68a97b]
  4059f7:	jbe    0x40598b
  4059f9:	clc    
  4059fa:	push   es
  4059fb:	mov    esi,0xc5bd16b5
  405a00:	xchg   esp,eax
  405a01:	in     al,dx
  405a02:	mov    ch,0x26
  405a04:	daa    
  405a05:	into   
  405a06:	daa    
  405a07:	add    ah,dl
  405a09:	lods   al,BYTE PTR ds:[esi]
  405a0a:	and    bh,al
  405a0c:	or     eax,edx
  405a0e:	repnz mov dl,cl
  405a11:	test   eax,0x9fb941a0
  405a16:	mov    bh,0xf9
  405a18:	pop    ds
  405a19:	jge    0x405a91
  405a1b:	fs cwde 
  405a1d:	je     0x405a3e
  405a1f:	dec    esp
  405a20:	add    eax,0xe65928c0
  405a25:	xchg   esi,eax
  405a26:	in     al,dx
  405a27:	sub    BYTE PTR [eax-0x77],ah
  405a2a:	lock lods eax,DWORD PTR ds:[esi]
  405a2c:	push   edx
  405a2d:	sbb    DWORD PTR [esi],esp
  405a2f:	push   ss
  405a30:	jp     0x405a4d
  405a32:	push   eax
  405a33:	hlt    
  405a34:	rol    dh,1
  405a36:	cmp    eax,0x8dd4b710
  405a3b:	and    DWORD PTR [ecx-0x21],ebx
  405a3e:	adc    edi,DWORD PTR [eax+esi*4-0x80]
  405a42:	pop    eax
  405a43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a44:	je     0x405a19
  405a46:	xor    eax,0x3e0e3090
  405a4b:	cwde   
  405a4c:	lods   al,BYTE PTR ds:[esi]
  405a4d:	push   cs
  405a4e:	cwde   
  405a4f:	in     al,0x30
  405a51:	ret    0xf78
  405a54:	fcmovnbe st,st(7)
  405a56:	mov    ah,BYTE PTR [ebx-0x5d]
  405a59:	or     eax,0xeeb7e2ca
  405a5e:	mov    WORD PTR [ebx],ss
  405a60:	setne  cl
  405a63:	cdq    
  405a64:	and    edi,DWORD PTR [esi]
  405a66:	(bad)  
  405a67:	jmp    DWORD PTR [ecx+ebp*2]
  405a6a:	cmp    DWORD PTR [ebp+0x45],0x560e0429
  405a71:	les    esi,FWORD PTR [eax]
  405a73:	jmp    0x3d18:0x2d077bd2
  405a7a:	ret    
  405a7b:	sbb    ah,BYTE PTR [edx-0x71e8403]
  405a81:	popf   
  405a82:	sub    BYTE PTR [edx],0xe0
  405a85:	je     0x405aa9
  405a87:	retf   0x15e
  405a8a:	jnp    0x405ade
  405a8c:	scas   eax,DWORD PTR es:[edi]
  405a8d:	cdq    
  405a8e:	sub    edi,DWORD PTR [edi-0x2cce48f7]
  405a94:	or     al,0x7e
  405a96:	mov    ch,0x63
  405a98:	lock data16 sar BYTE PTR ds:[ebx],1
  405a9d:	mov    eax,DWORD PTR ds:0x271799db
  405aa3:	je     0x405aaf
  405aa5:	iret   
  405aa6:	inc    edx
  405aa7:	adc    eax,0xbd8f2d0d
  405aac:	adc    DWORD PTR [eax+0x4f],esp
  405aaf:	fs out dx,al
  405ab1:	(bad)  
  405ab2:	iret   
  405ab3:	inc    esp
  405ab4:	rcl    cl,1
  405ab6:	not    edi
  405ab8:	out    dx,eax
  405ab9:	cmp    DWORD PTR [ecx-0x7640fd0c],ebp
  405abf:	call   0x62a5:0x189064e5
  405ac6:	jae    0x405a51
  405ac8:	xor    eax,0x4f6a0f96
  405acd:	push   eax
  405ace:	xchg   esp,eax
  405acf:	das    
  405ad0:	clc    
  405ad1:	cmp    BYTE PTR [ecx],al
  405ad3:	and    al,0x49
  405ad5:	ds jle 0x405aa2
  405ad8:	mov    BYTE PTR [ebx+0x4d],bh
  405adb:	mov    DWORD PTR [eax+0x5b],edi
  405ade:	mov    esp,ecx
  405ae0:	out    0xd0,al
  405ae2:	sbb    dh,BYTE PTR [eax-0x2a]
  405ae5:	pop    ecx
  405ae6:	fucom  st(2)
  405ae8:	jbe    0x405b37
  405aea:	daa    
  405aeb:	fnstsw WORD PTR [ebx]
  405aed:	pop    ss
  405aee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405aef:	push   ebp
  405af0:	fsub   st(1),st
  405af2:	outs   dx,DWORD PTR ds:[esi]
  405af3:	push   esp
  405af4:	fisubr WORD PTR [edi-0x63cb4ec]
  405afa:	inc    edx
  405afb:	scas   eax,DWORD PTR es:[edi]
  405afc:	lds    edx,FWORD PTR [ebx]
  405afe:	and    eax,0x93bfb145
  405b03:	and    ch,BYTE PTR [eax]
  405b05:	add    eax,DWORD PTR [eax]
  405b07:	call   0x831a:0xfb4bbc39
  405b0e:	mov    bh,0x76
  405b10:	mov    esi,0xaf1452c7
  405b15:	leave  
  405b16:	xor    DWORD PTR [edi-0x4ef11a65],ebx
  405b1c:	and    ebx,0x54
  405b1f:	out    dx,al
  405b20:	leave  
  405b21:	mov    eax,DWORD PTR [ebx+edi*8]
  405b24:	mov    DWORD PTR [ebx-0x32625ea],edi
  405b2a:	mov    WORD PTR gs:[esi+0x2cc49d29],gs
  405b31:	add    DWORD PTR [edx+0x1de6e284],0xffffff89
  405b38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b39:	hlt    
  405b3a:	sub    cl,cl
  405b3c:	cmc    
  405b3d:	dec    edx
  405b3e:	push   esi
  405b3f:	adc    al,0xb
  405b41:	rol    ecx,cl
  405b43:	int    0xe9
  405b45:	push   esp
  405b46:	out    dx,eax
  405b47:	and    ebp,0xffffff8a
  405b4a:	imul   ebp,DWORD PTR [eax],0xaa10ac8f
  405b50:	cld    
  405b51:	mov    edx,0x943dbbc0
  405b56:	popa   
  405b57:	ds jg  0x405b6a
  405b5a:	jb     0x405b92
  405b5c:	adc    esp,DWORD PTR [eax]
  405b5e:	mov    eax,0xd198c710
  405b63:	and    BYTE PTR [edx+esi*2+0x641009c5],al
  405b6a:	push   0xffffffe6
  405b6c:	cmp    DWORD PTR [ecx+0x1e],esi
  405b6f:	pusha  
  405b70:	ds dec ebx
  405b72:	sti    
  405b73:	in     al,0x61
  405b75:	neg    BYTE PTR [edi+edx*4+0x57]
  405b79:	cwde   
  405b7a:	mov    eax,0xdd161250
  405b7f:	in     eax,0x2d
  405b81:	jbe    0x405bbc
  405b83:	or     DWORD PTR [eax+0x66],0x42
  405b87:	jecxz  0x405b09
  405b89:	mov    cl,BYTE PTR [edi+edx*1-0xacd58bb]
  405b90:	and    eax,0x8cf86677
  405b95:	ror    BYTE PTR [eax],0x46
  405b98:	sti    
  405b99:	sbb    eax,0x3e75b70b
  405b9e:	inc    eax
  405b9f:	clc    
  405ba0:	(bad)  
  405ba2:	jno    0x405c08
  405ba4:	add    BYTE PTR [ecx],dh
  405ba6:	sub    ebp,ebx
  405ba8:	outs   dx,DWORD PTR ds:[esi]
  405ba9:	in     eax,dx
  405baa:	daa    
  405bab:	test   BYTE PTR [eax+edx*1+0x2d],ch
  405baf:	(bad)  
  405bb0:	fldpi  
  405bb2:	jge    0x405bab
  405bb4:	inc    edi
  405bb5:	mov    edx,0xb8dd8275
  405bba:	xchg   esp,eax
  405bbb:	lock neg edi
  405bbe:	or     BYTE PTR [edi],0x81
  405bc1:	cs pusha 
  405bc3:	push   eax
  405bc4:	mov    edi,0x70a5dce5
  405bc9:	clc    
  405bca:	mov    bh,0x6a
  405bcc:	dec    edx
  405bcd:	iret   
  405bce:	dec    ebp
  405bcf:	dec    ebx
  405bd0:	mov    DWORD PTR [ecx],esp
  405bd2:	in     eax,0x11
  405bd4:	loopne 0x405c25
  405bd6:	mov    eax,0x2c84523
  405bdb:	pop    edi
  405bdc:	jno    0x405be7
  405bde:	sbb    DWORD PTR [ecx+0xc],esp
  405be1:	inc    ebp
  405be2:	(bad)  
  405be3:	jge    0x405c63
  405be5:	daa    
  405be6:	nop
  405be7:	mov    ch,BYTE PTR [edx]
  405be9:	in     al,0x37
  405beb:	rol    DWORD PTR [edx-0x36614ea2],0x7f
  405bf2:	or     al,0x79
  405bf4:	out    dx,eax
  405bf5:	push   eax
  405bf6:	jnp    0x405b80
  405bf8:	leave  
  405bf9:	mov    ebx,0xf900d754
  405bfe:	out    dx,al
  405bff:	pop    ebp
  405c00:	or     bl,BYTE PTR [edx+0x27]
  405c03:	(bad)  
  405c05:	test   al,0xf
  405c07:	test   DWORD PTR ds:0xba545356,eax
  405c0d:	or     DWORD PTR [ebx],0xa5415b8a
  405c13:	arpl   WORD PTR [esi+edx*2+0x68],ax
  405c17:	jge    0x405c73
  405c19:	outs   dx,DWORD PTR ds:[esi]
  405c1a:	sahf   
  405c1b:	les    eax,FWORD PTR [ebp-0x45]
  405c1e:	jbe    0x405c2f
  405c20:	(bad)  
  405c24:	and    DWORD PTR ds:0x240c6ef2,ecx
  405c2a:	inc    ebx
  405c2b:	xchg   ecx,eax
  405c2c:	pop    ecx
  405c2d:	fadd   QWORD PTR [edi-0x3b]
  405c30:	nop
  405c31:	call   0x8f7e9aa3
  405c36:	sbb    al,0xbe
  405c38:	fistp  QWORD PTR [edx]
  405c3a:	cmp    DWORD PTR gs:[ebp-0x63],ecx
  405c3e:	arpl   WORD PTR [ecx+0x76e65892],ax
  405c44:	sub    BYTE PTR [edi],dh
  405c46:	pop    edx
  405c47:	std    
  405c48:	push   edx
  405c49:	js     0x405bf2
  405c4b:	and    eax,0xacba75b5
  405c50:	inc    edi
  405c51:	lods   al,BYTE PTR ds:[esi]
  405c52:	int3   
  405c53:	or     eax,0x13656c71
  405c58:	cli    
  405c59:	clc    
  405c5a:	dec    ebp
  405c5b:	mov    ah,0xc2
  405c5d:	xchg   esi,eax
  405c5e:	mov    bl,0xab
  405c60:	xor    al,0xbe
  405c62:	aad    0x38
  405c64:	add    al,0xa9
  405c66:	stc    
  405c67:	arpl   WORD PTR [esi],di
  405c69:	inc    esi
  405c6a:	fwait
  405c6b:	jge    0x405cd6
  405c6d:	inc    ecx
  405c6e:	and    eax,0xd7269599
  405c73:	dec    eax
  405c74:	sub    al,0xc
  405c76:	(bad)  
  405c77:	pop    ecx
  405c78:	cmovl  eax,eax
  405c7b:	inc    edi
  405c7c:	mov    ecx,0xb7d3ca1e
  405c81:	fnsetpm(287 only) 
  405c83:	cmp    BYTE PTR [ebx+ebp*4+0x18],0x75
  405c88:	es push edx
  405c8a:	mov    bh,0xcf
  405c8c:	cmp    bl,bh
  405c8e:	rcr    BYTE PTR ds:0xd6e4af78,0xa
  405c95:	mov    ch,0xbf
  405c97:	add    eax,0x41956e12
  405c9c:	pusha  
  405c9d:	dec    ebx
  405c9e:	(bad)  
  405c9f:	nop
  405ca0:	inc    esi
  405ca1:	call   0x16aeae58
  405ca6:	ds gs daa 
  405ca9:	sbb    al,0x6b
  405cab:	add    al,0xf6
  405cad:	(bad)  
  405cb0:	mov    ds:0x76ce04ff,al
  405cb5:	ds add al,0x31
  405cb8:	sbb    eax,0x5ba498c1
  405cbd:	inc    edx
  405cbe:	imul   edx,DWORD PTR [esi],0xe958c313
  405cc4:	pop    edi
  405cc5:	sub    eax,0xb8ea629a
  405cca:	int3   
  405ccb:	sub    eax,esp
  405ccd:	ror    ecx,1
  405ccf:	(bad)  [eax*4+0x1e5607af]
  405cd6:	mov    ah,0xd
  405cd8:	out    dx,eax
  405cd9:	adc    BYTE PTR [edi-0x60cc1e3],0xc6
  405ce0:	add    al,0xa1
  405ce2:	popf   
  405ce3:	and    eax,0x63db2389
  405ce8:	inc    edi
  405ce9:	push   eax
  405cea:	xchg   edi,eax
  405ceb:	pop    ebx
  405cec:	mov    ebp,0xb2cbfa79
  405cf1:	sbb    dl,cl
  405cf3:	mov    edi,0x34bfaf15
  405cf8:	pop    ss
  405cf9:	in     eax,dx
  405cfa:	jae    0x405cd6
  405cfc:	(bad)  
  405cfd:	mov    bh,0x1d
  405cff:	xchg   ecx,esi
  405d01:	xchg   esi,eax
  405d02:	inc    ebx
  405d03:	arpl   WORD PTR [esi+ecx*1+0x69b608ba],di
  405d0a:	(bad)  
  405d0b:	cli    
  405d0c:	push   es
  405d0d:	cmp    dl,BYTE PTR [ecx+0x2356e0a8]
  405d13:	stc    
  405d14:	or     al,0xeb
  405d16:	add    DWORD PTR [esi-0x28],ecx
  405d19:	dec    eax
  405d1a:	jl     0x405ca5
  405d1c:	add    BYTE PTR [esp+ebx*2-0xae11a9d],bl
  405d23:	idiv   BYTE PTR [edx+0x26]
  405d26:	jle    0x405ccc
  405d28:	mov    BYTE PTR [eax+ecx*8+0xe0b843a],dh
  405d2f:	xchg   ebp,eax
  405d30:	sub    BYTE PTR [eax-0x5a],al
  405d33:	pop    ss
  405d34:	in     eax,0x1e
  405d36:	retf   0xee67
  405d39:	lods   al,BYTE PTR ds:[esi]
  405d3a:	mov    ch,0xe2
  405d3c:	sub    bh,BYTE PTR [eax-0x2ee04661]
  405d42:	push   eax
  405d43:	dec    eax
  405d44:	and    BYTE PTR [eax-0x6a],ch
  405d47:	xchg   edx,eax
  405d48:	cmp    bl,ah
  405d4a:	cmp    al,0xf3
  405d4c:	jnp    0x405d3b
  405d4e:	xor    ah,dh
  405d50:	inc    esi
  405d51:	pop    ebx
  405d52:	sbb    ebp,0x4b
  405d55:	and    BYTE PTR cs:[esi+0x39],0x39
  405d5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d5b:	inc    eax
  405d5c:	shl    cl,1
  405d5e:	mov    dh,dl
  405d60:	inc    esi
  405d61:	and    esi,esp
  405d63:	xlat   BYTE PTR ds:[ebx]
  405d64:	fist   WORD PTR [edi+0x60]
  405d67:	sub    al,ah
  405d69:	inc    ebx
  405d6a:	dec    edi
  405d6b:	mov    edx,0x791b67df
  405d70:	dec    eax
  405d71:	mov    bh,BYTE PTR [ecx+0x3]
  405d74:	xchg   DWORD PTR [esi-0xb],edi
  405d77:	ret    
  405d78:	cli    
  405d79:	mov    ah,BYTE PTR [ebx+0x3c422bdc]
  405d7f:	push   eax
  405d80:	mov    ebx,0xcd21ea61
  405d85:	cld    
  405d86:	mov    ds:0xb2d99dd0,eax
  405d8b:	mov    dl,BYTE PTR [edx+0x63]
  405d8e:	sbb    eax,0x2d7c050c
  405d93:	call   0x49f21fc6
  405d98:	inc    edi
  405d99:	pop    edx
  405d9a:	mov    ebx,0xbcbe1802
  405d9f:	imul   esi,DWORD PTR [ebp+0x32],0x8a306c18
  405da6:	js     0x405daa
  405da8:	push   edi
  405da9:	cmp    BYTE PTR [edx-0x30],ch
  405dac:	jl     0x405df0
  405dae:	ret    0xe2dc
  405db1:	in     al,dx
  405db2:	in     eax,dx
  405db3:	call   0xa3522e42
  405db8:	call   0x3553393f
  405dbd:	pop    esi
  405dbe:	jae    0x405d97
  405dc0:	out    0xc0,eax
  405dc2:	out    dx,eax
  405dc3:	add    al,0x98
  405dc5:	popa   
  405dc6:	cli    
  405dc7:	in     eax,0xf1
  405dc9:	mov    eax,ds:0xa2ea30c3
  405dce:	or     cl,BYTE PTR [ecx]
  405dd0:	(bad)  
  405dd1:	in     al,dx
  405dd2:	outs   dx,BYTE PTR ds:[esi]
  405dd3:	movq   mm7,mm1
  405dd6:	imul   ebx,ebp,0x36
  405dd9:	in     al,dx
  405dda:	mov    esi,ss
  405ddc:	dec    esp
  405ddd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405dde:	aaa    
  405ddf:	stos   DWORD PTR es:[edi],eax
  405de0:	xor    DWORD PTR [ebp+0x59],ecx
  405de3:	jo     0x405e61
  405de5:	inc    eax
  405de6:	call   0x87d55870
  405deb:	mov    DWORD PTR [edx],ecx
  405ded:	dec    ebp
  405dee:	mov    BYTE PTR [eax-0x42],bh
  405df1:	dec    esp
  405df2:	ins    BYTE PTR es:[edi],dx
  405df3:	sbb    dl,BYTE PTR [edi+0x43ef9b9a]
  405df9:	sti    
  405dfa:	sub    ebx,DWORD PTR [ebp+0x69]
  405dfd:	mov    BYTE PTR [ebp+ebp*8+0x6c82af10],bh
  405e04:	or     al,dh
  405e06:	xor    eax,0x6982a73
  405e0b:	scas   ax,WORD PTR es:[edi]
  405e0d:	ror    DWORD PTR [edi-0x64],0x59
  405e11:	xchg   ecx,eax
  405e12:	gs pop esi
  405e14:	sub    al,0xf0
  405e16:	scas   eax,DWORD PTR es:[edi]
  405e17:	add    DWORD PTR [ecx-0x3b],0x42994afa
  405e1e:	call   0x2ddb:0xc7388995
  405e25:	sbb    BYTE PTR [edx],bl
  405e27:	inc    edx
  405e28:	in     eax,dx
  405e29:	(bad)  
  405e2b:	mov    dl,0xff
  405e2d:	rcl    BYTE PTR [esi],0xaf
  405e30:	jbe    0x405dfc
  405e32:	mov    esp,eax
  405e34:	xor    ah,0xac
  405e37:	mov    al,0x8d
  405e39:	xlat   BYTE PTR ds:[ebx]
  405e3a:	xor    BYTE PTR [eax],bh
  405e3c:	xacquire xchg BYTE PTR [ebp+edx*2-0x1c],al
  405e41:	mov    esi,0x48a07fc0
  405e46:	sbb    ecx,DWORD PTR [edx]
  405e48:	inc    ebx
  405e49:	inc    ebp
  405e4a:	data16 fld QWORD PTR [esi-0x7be2aee1]
  405e51:	aam    0x9f
  405e53:	es inc edi
  405e55:	imul   eax,DWORD PTR [ebx-0x5c],0x7e6a7d5f
  405e5c:	jae    0x405e79
  405e5e:	xor    dl,BYTE PTR [ebp+0x4b]
  405e61:	(bad)  
  405e62:	sar    bl,cl
  405e64:	mov    bh,0x77
  405e66:	push   0xffffffa1
  405e68:	adc    eax,DWORD PTR [eax-0xe]
  405e6b:	and    BYTE PTR [esi-0x30a2081b],bh
  405e71:	jmp    esp
  405e73:	xchg   ebp,eax
  405e74:	call   0xa456afec
  405e79:	stos   DWORD PTR es:[edi],eax
  405e7a:	shl    BYTE PTR ds:0x23b69eb5,1
  405e80:	inc    eax
  405e81:	push   0x5245c8f6
  405e86:	pop    edx
  405e87:	ins    BYTE PTR es:[edi],dx
  405e88:	sub    bl,BYTE PTR [edi+0x648d9420]
  405e8e:	jmp    0xd278:0x18d5161b
  405e95:	xchg   ecx,eax
  405e96:	cld    
  405e97:	mov    eax,ds:0xbaf3af83
  405e9c:	shl    BYTE PTR ds:0xf5d2070c,0x9b
  405ea3:	std    
  405ea4:	sbb    esi,DWORD PTR [edi]
  405ea6:	mov    eax,ds:0x540cb905
  405eab:	sbb    ah,BYTE PTR fs:[edi]
  405eae:	sti    
  405eaf:	push   eax
  405eb0:	ins    BYTE PTR es:[edi],dx
  405eb1:	(bad)  
  405eb2:	ins    BYTE PTR es:[edi],dx
  405eb3:	clc    
  405eb4:	push   edx
  405eb5:	add    eax,0xd879ab09
  405eba:	outs   dx,DWORD PTR ds:[esi]
  405ebb:	xchg   esp,eax
  405ebc:	rcl    eax,cl
  405ebe:	cmp    al,0xeb
  405ec0:	rcr    ah,0xd6
  405ec3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ec4:	cmp    DWORD PTR [ebx+0x2a],ebp
  405ec7:	out    dx,al
  405ec8:	stos   DWORD PTR es:[edi],eax
  405ec9:	mov    ah,0xdf
  405ecb:	mov    edx,0x657e3eda
  405ed0:	xchg   ecx,eax
  405ed1:	fucomp st(1)
  405ed3:	mov    dl,0xef
  405ed5:	and    eax,0x5dc949e5
  405eda:	or     BYTE PTR [esi-0x65f545d],bl
  405ee0:	jg     0x405e80
  405ee2:	mov    al,ds:0xc821d5fa
  405ee7:	ins    DWORD PTR es:[edi],dx
  405ee8:	lea    esp,[ecx+0x71]
  405eeb:	and    edi,esp
  405eed:	mov    esp,0xc0a78fe7
  405ef2:	sbb    ecx,DWORD PTR [ebp-0x4c3eab08]
  405ef8:	adc    ebp,DWORD PTR [edx-0x2e]
  405efb:	gs test dl,0x12
  405eff:	adc    al,0x8
  405f01:	xchg   DWORD PTR [esi+esi*1],ecx
  405f04:	jp     0x405f78
  405f06:	call   0x5bbf:0xba6f0d25
  405f0d:	pop    es
  405f0e:	in     al,dx
  405f0f:	mov    ch,0x16
  405f11:	dec    eax
  405f12:	(bad)  
  405f13:	adc    eax,0x35499481
  405f18:	jecxz  0x405eea
  405f1a:	pop    ecx
  405f1b:	mov    ecx,0xa11c9d4a
  405f20:	pop    ds
  405f21:	xor    BYTE PTR [eax-0x46],dl
  405f24:	dec    ecx
  405f25:	aam    0x57
  405f27:	and    bl,bh
  405f29:	xor    bh,BYTE PTR [esi-0x7f]
  405f2c:	mov    esi,0x560b43c9
  405f31:	sti    
  405f32:	lahf   
  405f33:	mov    ebp,0xc0739b8b
  405f38:	push   ecx
  405f39:	mov    al,ds:0x3ac789e7
  405f3e:	out    0xe8,eax
  405f40:	mov    ah,0x19
  405f42:	adc    ch,BYTE PTR [esi-0x21f64b36]
  405f48:	rcl    bh,0x5d
  405f4b:	mov    edi,0x1bd1b30a
  405f50:	add    eax,0xa41ba216
  405f55:	(bad)  
  405f56:	ficomp WORD PTR [ecx]
  405f58:	mov    ecx,0xb02f1c57
  405f5d:	into   
  405f5e:	cmp    eax,0xe31f0f06
  405f63:	lock xor al,0xdd
  405f66:	dec    esp
  405f67:	xchg   edi,eax
  405f68:	pop    ss
  405f69:	push   esp
  405f6a:	les    ebx,FWORD PTR [edx+0x2f]
  405f6d:	push   0x9298cf18
  405f72:	push   edi
  405f73:	add    BYTE PTR [edi-0x42],0x36
  405f77:	fiadd  DWORD PTR [ebp-0x4b]
  405f7a:	add    cl,BYTE PTR [esi+0x31]
  405f7d:	popa   
  405f7e:	ja     0x405fac
  405f80:	cli    
  405f81:	mov    ah,0xf2
  405f83:	ret    0xd693
  405f86:	cmp    bl,BYTE PTR [eax-0x72644c0b]
  405f8c:	adc    al,0xf4
  405f8e:	shr    DWORD PTR [eax-0x3c],1
  405f91:	push   eax
  405f92:	pop    edi
  405f93:	xor    DWORD PTR [eax-0x40d21564],edx
  405f99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f9a:	or     eax,0xa5fe8efb
  405f9f:	sub    al,0xd9
  405fa1:	mov    ebp,0x2828a448
  405fa6:	push   edi
  405fa7:	pop    eax
  405fa8:	(bad)  
  405fa9:	je     0x40600c
  405fab:	xor    edi,esp
  405fad:	sbb    ebx,edi
  405faf:	or     eax,0x18df9753
  405fb4:	jo     0x406016
  405fb6:	mov    ch,0xb8
  405fb8:	mov    eax,0xbc1b0ec9
  405fbd:	or     DWORD PTR [ebp+0x7ea31ef6],edi
  405fc3:	or     BYTE PTR [eax+0x3d652370],bl
  405fc9:	fadd   QWORD PTR [eax-0x2e]
  405fcc:	inc    eax
  405fcd:	inc    ecx
  405fce:	out    0xab,al
  405fd0:	dec    esi
  405fd1:	xlat   BYTE PTR gs:[ebx]
  405fd3:	jmp    FWORD PTR [esp+ecx*8-0x22e4a5c4]
  405fda:	pop    eax
  405fdb:	jmp    0xcc22:0x9e5557ec
  405fe2:	cmp    ecx,ebx
  405fe4:	xor    eax,0x8f446493
  405fe9:	lods   al,BYTE PTR ds:[esi]
  405fea:	pop    edi
  405feb:	gs ins DWORD PTR es:[edi],dx
  405fed:	mov    bh,0x18
  405fef:	mov    ds:0x89041a57,al
  405ff4:	sub    DWORD PTR [ebx],0x56
  405ff7:	lahf   
  405ff8:	cmp    cl,ah
  405ffa:	add    al,0x5a
  405ffc:	push   ebx
  405ffd:	cwde   
  405ffe:	je     0x406032
  406000:	xor    DWORD PTR [edi+eax*4+0x8],0x19
  406005:	dec    esi
  406006:	leave  
  406007:	fs pop ebp
  406009:	idiv   BYTE PTR [ebx]
  40600b:	inc    edi
  40600c:	adc    esp,edx
  40600e:	sub    BYTE PTR [ecx-0x56],cl
  406011:	stos   BYTE PTR es:[edi],al
  406012:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406013:	mov    bh,0x3
  406015:	pop    esi
  406016:	pop    ebx
  406017:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406018:	(bad)  
  406019:	icebp  
  40601a:	mov    esp,0x5582b8d0
  40601f:	imul   esp,DWORD PTR [edx+0x7f],0x17
  406023:	inc    esp
  406024:	sbb    bh,dl
  406026:	cld    
  406027:	fldenv [esi]
  406029:	inc    ebp
  40602a:	enter  0x494f,0x21
  40602e:	int    0xc8
  406030:	lods   eax,DWORD PTR cs:[esi]
  406032:	icebp  
  406033:	into   
  406034:	daa    
  406035:	cmp    ecx,eax
  406037:	xor    al,0x5f
  406039:	aam    0x1b
  40603b:	lods   al,BYTE PTR es:[esi]
  40603d:	cmp    DWORD PTR [esi-0xf],ebx
  406040:	xor    al,0xce
  406042:	mov    ds:0xa84b789,al
  406047:	add    BYTE PTR [edx],dl
  406049:	mov    DWORD PTR [eax],ebx
  40604b:	mov    ah,0x36
  40604d:	dec    esi
  40604e:	dec    ecx
  40604f:	(bad)  
  406050:	adc    eax,0xd1db857a
  406055:	xlat   BYTE PTR ds:[ebx]
  406056:	mov    ds:0xd24fb072,eax
  40605b:	std    
  40605c:	add    BYTE PTR [edi-0x32419c11],al
  406062:	fisttp DWORD PTR [ebp-0x16]
  406065:	loop   0x406006
  406067:	inc    BYTE PTR [ebp-0xa]
  40606a:	push   ss
  40606b:	mov    DWORD PTR [edx],esi
  40606d:	popf   
  40606e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40606f:	ja     0x406031
  406071:	inc    ecx
  406072:	stos   BYTE PTR es:[edi],al
  406073:	inc    ebx
  406074:	mov    al,0x6d
  406076:	sub    eax,DWORD PTR [edi+esi*4]
  406079:	aas    
  40607a:	cmp    ebp,ecx
  40607c:	mov    dl,0x8a
  40607e:	xor    ecx,ecx
  406080:	push   eax
  406081:	dec    ecx
  406082:	mov    eax,ds:0xd49f5bc9
  406087:	mov    esp,0xd793056a
  40608c:	scas   al,BYTE PTR es:[edi]
  40608d:	xor    al,0x7d
  40608f:	mov    eax,0xa5a05405
  406094:	ss or  ecx,edx
  406097:	cs xor cl,ch
  40609a:	pop    eax
  40609b:	(bad)  
  40609c:	out    0x2c,eax
  40609e:	push   eax
  40609f:	out    0x32,eax
  4060a1:	inc    ebx
  4060a2:	cs (bad) 
  4060a4:	lahf   
  4060a5:	and    al,0xf3
  4060a7:	hlt    
  4060a8:	cmc    
  4060a9:	push   edi
  4060aa:	stc    
  4060ab:	push   esp
  4060ac:	adc    cl,BYTE PTR [edi-0x6637f760]
  4060b2:	sub    ebp,DWORD PTR [edx]
  4060b4:	adc    edi,0xffffffe8
  4060b7:	mov    al,ds:0x39abc91c
  4060bc:	or     BYTE PTR [esp+ebp*4-0x5cfddd96],cl
  4060c3:	lea    edi,[edx]
  4060c5:	push   ebp
  4060c6:	ret    
  4060c7:	stos   BYTE PTR es:[edi],al
  4060c8:	xchg   edx,edx
  4060ca:	inc    esp
  4060cb:	in     eax,0x29
  4060cd:	mov    al,0x96
  4060cf:	aad    0x8c
  4060d1:	or     BYTE PTR [eax+0x5a],bh
  4060d4:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060d6:	xor    DWORD PTR [edi+0x31],edx
  4060d9:	pop    ebp
  4060da:	fs ds dec ebx
  4060dd:	push   0xbe7d422c
  4060e2:	(bad)  
  4060e3:	int3   
  4060e4:	shr    al,1
  4060e6:	sub    al,0x5e
  4060e8:	adc    ebx,DWORD PTR ds:0xb85fe1ce
  4060ee:	std    
  4060ef:	xchg   ebx,esp
  4060f1:	mov    ecx,0x7ebcc925
  4060f6:	inc    esp
  4060f7:	xchg   ebp,eax
  4060f8:	pop    esi
  4060f9:	sahf   
  4060fa:	inc    ecx
  4060fb:	outs   dx,BYTE PTR ds:[esi]
  4060fc:	xchg   edx,eax
  4060fd:	pusha  
  4060fe:	and    ebx,ecx
  406100:	(bad)  
  406101:	popf   
  406102:	cmp    BYTE PTR [esi],ah
  406104:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406105:	mov    DWORD PTR [ebx-0x6c],eax
  406108:	shl    BYTE PTR [esp+ebp*4-0x66],1
  40610c:	(bad)  
  40610d:	push   ebp
  40610e:	sub    DWORD PTR [ebp-0x3e62892e],ebp
  406114:	cld    
  406115:	outs   dx,DWORD PTR ds:[esi]
  406116:	ins    BYTE PTR es:[edi],dx
  406117:	popf   
  406118:	inc    edx
  406119:	(bad)  
  40611a:	lds    edi,FWORD PTR [edx]
  40611c:	retf   0x3847
  40611f:	repz xchg ecx,eax
  406121:	sti    
  406122:	in     eax,dx
  406123:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406124:	pop    ss
  406125:	shl    BYTE PTR [esi],cl
  406127:	imul   esi,DWORD PTR [ebx-0x3aaf944f],0x9
  40612e:	jmp    0x40616c
  406130:	cmp    eax,0xd6ec015
  406135:	dec    edx
  406136:	mov    ds:0xae4e9cbd,eax
  40613b:	imul   edi,DWORD PTR [eax-0x42],0xffffffb8
  40613f:	das    
  406140:	xchg   ecx,eax
  406141:	cmp    BYTE PTR [ecx-0x259aa22c],0x68
  406148:	jb     0x4060ca
  40614a:	sbb    al,bh
  40614c:	aam    0xd2
  40614e:	xchg   ecx,eax
  40614f:	lods   eax,DWORD PTR ds:[esi]
  406150:	cmp    ecx,eax
  406152:	fdiv   st,st(6)
  406154:	sbb    DWORD PTR ds:0xad496ca7,ebx
  40615a:	sbb    bl,0x90
  40615d:	lods   eax,DWORD PTR ds:[esi]
  40615e:	push   edx
  40615f:	pusha  
  406160:	out    0x41,eax
  406162:	out    0x67,al
  406164:	mov    al,ds:0x1f81e99c
  406169:	xchg   esp,eax
  40616a:	add    al,al
  40616c:	imul   DWORD PTR [ecx]
  40616e:	mov    bl,0x79
  406170:	cmp    cl,BYTE PTR [esi]
  406172:	(bad)  
  406173:	jecxz  0x40616e
  406175:	aas    
  406176:	sbb    DWORD PTR [edi-0x25f846b3],ecx
  40617c:	dec    edx
  40617d:	dec    ecx
  40617e:	push   esi
  40617f:	mov    ds:0xb93439d6,eax
  406184:	test   DWORD PTR [edx+0x4b],ebp
  406187:	xchg   ebp,eax
  406188:	mov    cl,0xf4
  40618a:	retf   0x5dcf
  40618d:	sub    cl,BYTE PTR [ebx+0x5bd24413]
  406193:	xor    ebx,DWORD PTR [edi+0x7d64c653]
  406199:	mov    ds:0xdaa9a4ad,eax
  40619e:	and    BYTE PTR [ecx+edi*2-0x68f6335],al
  4061a5:	fisttp WORD PTR [eax]
  4061a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061a8:	hlt    
  4061a9:	add    eax,0x3457328f
  4061ae:	inc    ebx
  4061af:	fidivr WORD PTR ds:[ecx+0x1b]
  4061b3:	cmp    al,0x3b
  4061b5:	mov    ds:0x2cc19dfd,eax
  4061ba:	mov    bh,0x13
  4061bc:	jb     0x406215
  4061be:	loop   0x40620a
  4061c0:	lock sub al,0xf6
  4061c3:	retf   
  4061c4:	iret   
  4061c5:	mov    esi,0x3e24f3c1
  4061ca:	daa    
  4061cb:	add    DWORD PTR [ebx-0xe5147e3],ebp
  4061d1:	sub    eax,0xafb69fd3
  4061d6:	mov    BYTE PTR [esi+0x23],bl
  4061d9:	fwait
  4061da:	mov    ah,0xa6
  4061dc:	sbb    dl,BYTE PTR [eax-0x27]
  4061df:	pop    es
  4061e0:	icebp  
  4061e1:	jg     0x4061ae
  4061e3:	fcomp  DWORD PTR ds:0x5e690498
  4061e9:	mov    WORD PTR [edx+0x7c374ead],?
  4061ef:	or     eax,0x9b70c6f2
  4061f4:	jae    0x4061ae
  4061f6:	push   cx
  4061f8:	push   ds
  4061f9:	jne    0x406255
  4061fb:	cld    
  4061fc:	mov    eax,ds:0x460d715a
  406201:	jg     0x4061f9
  406203:	jp     0x406203
  406205:	ss in  eax,0x7e
  406208:	(bad)  
  406209:	cld    
  40620a:	into   
  40620b:	scas   al,BYTE PTR es:[edi]
  40620c:	and    ebp,DWORD PTR [eax-0x7a3a5c37]
  406212:	hlt    
  406213:	lahf   
  406214:	inc    eax
  406215:	or     al,0x90
  406217:	sbb    dh,0x99
  40621a:	pop    ecx
  40621b:	stos   DWORD PTR es:[edi],eax
  40621c:	ficomp WORD PTR [edx+0x66a625ed]
  406222:	add    DWORD PTR [edx],0x53a45bd6
  406228:	cmp    DWORD PTR [ebx+edi*1],0xb535ebb
  40622f:	call   0x30b54dde
  406234:	loopne 0x406239
  406236:	inc    esp
  406237:	mov    ds:0xf7fb80a9,eax
  40623c:	xchg   esi,eax
  40623d:	dec    edi
  40623e:	cmp    ebx,ebx
  406240:	iret   
  406241:	mov    ebp,0x7878fff5
  406246:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406247:	cmp    BYTE PTR [esp+eiz*4],dl
  40624a:	cmp    bl,cl
  40624c:	loopne 0x406239
  40624e:	stos   BYTE PTR es:[edi],al
  40624f:	xchg   ebx,eax
  406250:	and    BYTE PTR [edx],bh
  406252:	push   0x211b5470
  406257:	or     bh,0xa1
  40625a:	sub    al,0x1a
  40625c:	cs cdq 
  40625e:	call   FWORD PTR [edi+0x3efda60a]
  406264:	xchg   esp,eax
  406265:	les    edx,FWORD PTR [ebx]
  406267:	jle    0x4061f8
  406269:	and    bh,ch
  40626b:	dec    edx
  40626c:	push   cs
  40626d:	(bad)  
  40626e:	loope  0x4062ea
  406270:	test   BYTE PTR [edi+0x196618a2],0xaa
  406277:	outs   dx,BYTE PTR ds:[esi]
  406278:	(bad)  
  406279:	cli    
  40627a:	cmp    ecx,DWORD PTR [edi+ecx*2+0x3]
  40627e:	mov    ?,WORD PTR [eax+0x71]
  406281:	cmp    BYTE PTR [ecx-0x3c],ah
  406284:	nop
  406285:	xor    bh,cl
  406287:	call   FWORD PTR [esi]
  406289:	inc    esp
  40628a:	sub    DWORD PTR [edi+edi*2+0x2e046de1],esp
  406291:	xor    esi,ebp
  406293:	ins    DWORD PTR es:[edi],dx
  406294:	call   0x36c6c825
  406299:	mov    DWORD PTR [eax-0x45],esi
  40629c:	es dec esp
  40629e:	imul   esp,DWORD PTR [eax+0x6b103a49],0x29
  4062a5:	jae    0x40627c
  4062a7:	jae    0x4062bc
  4062a9:	repz adc esi,DWORD PTR [ecx+0x24]
  4062ad:	fdivr  QWORD PTR [ebx-0x1b7ea3ae]
  4062b3:	test   DWORD PTR [ebp-0x36],esi
  4062b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062b7:	sbb    al,0xe3
  4062b9:	mov    ebx,ss
  4062bb:	enter  0x5a9,0x5e
  4062bf:	dec    esp
  4062c0:	test   dh,ah
  4062c2:	retf   0x6440
  4062c5:	cwde   
  4062c6:	icebp  
  4062c7:	sahf   
  4062c8:	or     dl,BYTE PTR [edx+esi*8+0x5b]
  4062cc:	out    dx,al
  4062cd:	mov    al,0xb5
  4062cf:	jnp    0x406268
  4062d1:	push   ds
  4062d2:	xchg   edx,eax
  4062d3:	shl    DWORD PTR [esi],cl
  4062d5:	pushf  
  4062d6:	in     eax,dx
  4062d7:	pop    ss
  4062d8:	push   cs
  4062d9:	ss rcr al,cl
  4062dc:	mov    esi,eax
  4062de:	test   ecx,ebx
  4062e0:	int    0xd3
  4062e2:	pop    es
  4062e3:	repz mov edi,?
  4062e6:	mov    ch,0x4
  4062e8:	ficomp DWORD PTR [esi+0x54]
  4062eb:	test   al,0xa4
  4062ed:	addr16 pop edi
  4062ef:	add    eax,esi
  4062f1:	inc    ebx
  4062f2:	push   eax
  4062f3:	or     dl,BYTE PTR [ecx]
  4062f5:	aas    
  4062f6:	push   ss
  4062f7:	mov    edx,0x22a50cd3
  4062fc:	retf   
  4062fd:	call   0x78a0:0xc03be318
  406304:	sub    eax,0x7f2034e9
  406309:	and    esi,eax
  40630b:	push   ebx
  40630c:	adc    ah,BYTE PTR [ebp-0x2b]
  40630f:	xchg   edi,eax
  406310:	mov    edx,0xb65170cd
  406315:	jp     0x4062a5
  406317:	aaa    
  406318:	arpl   WORD PTR [ebx+0x176e6247],si
  40631e:	adc    eax,0x13d86ae5
  406323:	mov    esi,0xda967b43
  406328:	sbb    ebx,DWORD PTR [edi+0x5d]
  40632b:	or     DWORD PTR [ebx+esi*2+0x6b],0x395493f8
  406333:	push   ebp
  406334:	cmp    esp,esp
  406336:	push   ecx
  406337:	dec    ebx
  406338:	inc    eax
  406339:	in     al,dx
  40633a:	(bad)  
  40633b:	mov    esp,DWORD PTR [eiz*2-0x58318309]
  406342:	add    DWORD PTR ds:0xcf176252,ecx
  406348:	out    0xff,eax
  40634a:	scas   eax,DWORD PTR es:[edi]
  40634b:	dec    ebx
  40634c:	mov    ebx,0x2b6a20a0
  406351:	or     BYTE PTR [edi-0x13],dh
  406354:	push   esp
  406355:	mov    esi,0x924d0622
  40635a:	jns    0x406303
  40635c:	lods   eax,DWORD PTR ds:[esi]
  40635d:	popf   
  40635e:	icebp  
  40635f:	pop    ds
  406360:	(bad)  
  406361:	mov    dl,0x16
  406363:	(bad)  
  406364:	jl     0x40632c
  406366:	inc    edx
  406367:	jmp    0x40636f
  406369:	data16 out 0x22,al
  40636c:	xchg   edx,eax
  40636d:	adc    al,0x7
  40636f:	pop    edi
  406370:	int    0x35
  406372:	(bad)  
  406373:	cli    
  406374:	out    0x9a,eax
  406376:	fcomp  st(5)
  406378:	mov    esp,0xb3da3b9d
  40637d:	sub    eax,0xcf4e63ab
  406382:	les    eax,FWORD PTR [ecx-0xe34b011]
  406388:	xchg   esi,eax
  406389:	jle    0x406329
  40638b:	repnz fldpi 
  40638e:	lahf   
  40638f:	mov    eax,ds:0xa7d3c608
  406394:	push   0xd28a2521
  406399:	lock inc eax
  40639b:	in     eax,dx
  40639c:	sub    bh,bh
  40639e:	and    al,0xfc
  4063a0:	sub    ah,BYTE PTR [esi+0x4f]
  4063a3:	ffreep st(5)
  4063a5:	out    0xc,al
  4063a7:	xor    al,0x1e
  4063a9:	fcomp  QWORD PTR [esi+0x27224da0]
  4063af:	shr    BYTE PTR [ebx-0x489f7b59],0x5e
  4063b6:	fxch   st(5)
  4063b8:	push   edx
  4063ba:	mov    edi,0xeefd6c84
  4063bf:	and    dh,ch
  4063c1:	adc    al,0xdd
  4063c3:	cmp    eax,0x1c453c1e
  4063c8:	pop    ebx
  4063c9:	jne    0x40634e
  4063cb:	out    dx,al
  4063cc:	imul   edx,edi,0x5b
  4063cf:	jecxz  0x4063e8
  4063d1:	loope  0x406427
  4063d3:	and    eax,0xdc1f73ac
  4063d8:	mov    eax,ds:0x5de74f98
  4063dd:	sbb    al,0x80
  4063df:	ss inc bx
  4063e2:	cmp    eax,0xfde48c29
  4063e7:	jle    0x4063fb
  4063e9:	nop
  4063ea:	(bad)  
  4063ec:	mov    esi,0x517bef48
  4063f1:	imul   esi,esp,0xffffffbe
  4063f4:	cmc    
  4063f5:	gs jecxz 0x4063ee
  4063f8:	mov    eax,ds:0xa5810f60
  4063fd:	sub    ebx,DWORD PTR [ebp+0x69e1736c]
  406403:	fiadd  WORD PTR [edx+0x1b8d3cd4]
  406409:	and    eax,0xe4acce19
  40640e:	in     eax,0x3b
  406410:	sub    esi,0x7f
  406413:	outs   dx,DWORD PTR ds:[esi]
  406414:	pop    ebp
  406415:	out    dx,eax
  406416:	jl     0x40645d
  406418:	inc    eax
  406419:	pop    ebx
  40641a:	pop    DWORD PTR [eax-0x7e]
  40641d:	lea    ebx,[edx]
  40641f:	jne    0x40642b
  406421:	js     0x406471
  406423:	mov    dl,0x4f
  406425:	enter  0x4775,0x2d
  406429:	push   ecx
  40642a:	rcl    BYTE PTR [esi+0x7a],cl
  40642d:	pop    ds
  40642e:	(bad)  
  406430:	mov    ebp,ds
  406432:	das    
  406433:	aas    
  406434:	cmp    bh,dl
  406436:	gs xchg esp,eax
  406438:	cwde   
  406439:	inc    ecx
  40643a:	dec    ecx
  40643b:	mov    bl,0x89
  40643d:	dec    esp
  40643e:	lods   al,BYTE PTR ds:[esi]
  40643f:	int3   
  406440:	sub    eax,0xcc399353
  406445:	cmp    al,0xf0
  406447:	adc    eax,0x9aaa9f4f
  40644c:	push   0xffffff85
  40644e:	inc    edx
  40644f:	je     0x406407
  406451:	enter  0x9829,0xef
  406455:	push   cs
  406456:	daa    
  406457:	pop    eax
  406458:	push   0x2e
  40645a:	popf   
  40645b:	(bad)  
  40645c:	mul    ah
  40645e:	xor    BYTE PTR [ecx-0x35],bh
  406461:	and    al,0x7b
  406463:	mov    cl,0x7
  406465:	jmp    0xb58ec7be
  40646a:	xor    edi,DWORD PTR [esi+0xa]
  40646d:	arpl   WORD PTR [esi+ecx*1+0x32],dx
  406471:	sbb    DWORD PTR [edx-0x6203a146],ecx
  406477:	ss ds das 
  40647a:	js     0x406499
  40647c:	cmp    al,0xd7
  40647e:	cli    
  40647f:	push   ebx
  406480:	test   dh,ch
  406482:	sbb    dl,BYTE PTR [edx]
  406484:	imul   edx,DWORD PTR [eax+0x27],0x448f83bc
  40648b:	dec    ebx
  40648c:	cs clc 
  40648e:	ja     0x40645d
  406490:	push   edi
  406491:	push   es
  406492:	out    dx,eax
  406493:	jae    0x4064c9
  406495:	add    ebx,DWORD PTR [edi+0x42c25ec1]
  40649b:	nop
  40649c:	fisttp WORD PTR [eax]
  40649e:	inc    ebp
  40649f:	cmp    edx,DWORD PTR [edx]
  4064a1:	gs pop ss
  4064a3:	dec    ebx
  4064a4:	or     BYTE PTR [esi+0x3f9a190a],dl
  4064aa:	call   0xf29a:0x423815cd
  4064b1:	xor    eax,0x1e4dca2
  4064b6:	jle    0x4064b0
  4064b8:	cli    
  4064b9:	and    esi,DWORD PTR [eax+0x5190bc4a]
  4064bf:	and    cl,0xae
  4064c2:	inc    ebx
  4064c3:	pop    esi
  4064c4:	gs or  ebx,eax
  4064c7:	jnp    0x406450
  4064c9:	push   ds
  4064ca:	sub    bh,BYTE PTR ds:0x49e48e3
  4064d0:	cmp    dh,BYTE PTR [ebp+0x21]
  4064d3:	into   
  4064d4:	ret    0x3928
  4064d7:	scas   eax,DWORD PTR es:[edi]
  4064d8:	dec    ebx
  4064d9:	mov    eax,ds:0xc7922919
  4064de:	out    dx,al
  4064df:	fsubr  QWORD PTR [esi-0x7d]
  4064e2:	je     0x4064f3
  4064e4:	sub    BYTE PTR [ecx-0x63],ah
  4064e7:	shl    DWORD PTR [eax],0x8d
  4064ea:	enter  0x1aa8,0xf2
  4064ee:	pop    edi
  4064ef:	sub    ah,BYTE PTR [eax]
  4064f1:	cmp    ah,bl
  4064f3:	mov    edx,0x2c1d1b7b
  4064f8:	mov    DWORD PTR [edi+eax*8-0x58],edx
  4064fc:	jmp    FWORD PTR [eax+0x13b60065]
  406502:	mov    ch,0x7
  406504:	pop    esp
  406505:	iret   
  406506:	js     0x406511
  406508:	push   eax
  406509:	jl     0x4064a6
  40650b:	mov    bh,0x82
  40650d:	fcom   QWORD PTR [ebx*2-0x6c73da0a]
  406514:	xor    DWORD PTR [ebx-0x71],ecx
  406517:	push   ebx
  406518:	mov    ebx,0xce8713
  40651d:	pop    esp
  40651e:	int3   
  40651f:	xchg   ecx,eax
  406520:	rcl    BYTE PTR [ebp+0x40],cl
  406523:	leave  
  406524:	mov    ecx,0xcffbea20
  406529:	lods   eax,DWORD PTR ds:[esi]
  40652a:	and    eax,0x83bf2d2c
  40652f:	dec    edx
  406530:	aas    
  406531:	cwde   
  406532:	lock xchg ecx,eax
  406534:	adc    al,0x1b
  406536:	ret    0xb91b
  406539:	push   edi
  40653a:	in     eax,dx
  40653b:	cmp    eax,0xfa7c2240
  406540:	cmp    esp,ecx
  406542:	call   0x3f13:0x49f9e2e8
  406549:	cmp    DWORD PTR ds:0x9306f10b,esp
  40654f:	pop    eax
  406550:	lods   al,BYTE PTR ds:[esi]
  406551:	pop    edi
  406552:	adc    BYTE PTR [edx],ch
  406554:	dec    edi
  406555:	dec    ecx
  406556:	scas   eax,DWORD PTR es:[edi]
  406557:	pushf  
  406558:	pop    esi
  406559:	sbb    eax,0x5c4a09c7
  40655e:	mov    bl,0x7b
  406560:	test   eax,0x9573b07f
  406565:	add    ch,BYTE PTR ds:0x65ad863a
  40656b:	js     0x40659d
  40656d:	mov    esi,0x481c08a2
  406572:	std    
  406573:	jns    0x4064fc
  406575:	xchg   DWORD PTR [eax+0x4fd038d5],edi
  40657b:	pop    esp
  40657c:	fs loope 0x4065b9
  40657f:	lahf   
  406580:	jb     0x4065c6
  406582:	xor    DWORD PTR [edx+0x4c],ecx
  406585:	cs in  al,0x9
  406588:	(bad)  
  406589:	lods   al,BYTE PTR ds:[esi]
  40658a:	sbb    BYTE PTR [edi],cl
  40658c:	and    ebx,edx
  40658e:	aam    0xc8
  406590:	ins    DWORD PTR es:[edi],dx
  406591:	mul    BYTE PTR [esi+0x69]
  406594:	push   ss
  406595:	push   edi
  406596:	cs fwait
  406598:	push   ebx
  406599:	test   BYTE PTR [ebx+0x29],dl
  40659c:	inc    eax
  40659d:	push   ebx
  40659e:	cdq    
  40659f:	call   0x1e55:0x4209f2d4
  4065a6:	mov    ah,0x69
  4065a8:	inc    edx
  4065a9:	je     0x4065d1
  4065ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065ac:	sub    ah,dh
  4065ae:	mov    al,0xc7
  4065b0:	mov    ds:0xa2c793e9,al
  4065b5:	int    0x43
  4065b7:	xor    al,0x4c
  4065b9:	popa   
  4065ba:	sahf   
  4065bb:	cwde   
  4065bc:	jb     0x4065f7
  4065be:	jge    0x4065fc
  4065c0:	bound  eax,QWORD PTR [edi+0x25]
  4065c3:	mov    al,ds:0xd31f6cc6
  4065c8:	shl    edi,0x43
  4065cb:	xor    eax,0x3698e6f7
  4065d0:	mov    ebx,0x58f4852f
  4065d5:	inc    ebp
  4065d6:	dec    ebp
  4065d7:	cmp    eax,0xc1d3ea8e
  4065dc:	inc    ecx
  4065dd:	jmp    0x406607
  4065df:	mov    esi,0x43734e5d
  4065e4:	dec    ebx
  4065e5:	mov    BYTE PTR [esi-0x2072a245],bh
  4065eb:	jmp    0x406597
  4065ed:	pusha  
  4065ee:	mov    dl,0x51
  4065f0:	popa   
  4065f1:	in     eax,0x42
  4065f3:	data16 mov WORD PTR [ebx+0x6e9ace4a],?
  4065fa:	(bad)  
  4065fb:	pop    esi
  4065fc:	push   0xd6cf2282
  406601:	mov    esp,0xef386a38
  406606:	xchg   ebx,eax
  406607:	ss ret 0xcbea
  40660b:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40660d:	sbb    ebp,0x4229c004
  406613:	outs   dx,BYTE PTR ds:[esi]
  406614:	jmp    0x4065f2
  406616:	mov    dh,0x14
  406618:	aas    
  406619:	dec    edx
  40661a:	nop
  40661b:	xchg   ebx,eax
  40661c:	inc    ebx
  40661d:	ins    DWORD PTR es:[edi],dx
  40661e:	cmp    eax,0x74ebd949
  406623:	enter  0xd6ff,0xfe
  406627:	shl    BYTE PTR [ebp+0x29c59166],1
  40662d:	scas   eax,DWORD PTR es:[edi]
  40662e:	retfw  
  406630:	mov    ds:0x7f51314e,eax
  406635:	jle    0x40664d
  406637:	jmp    0xcd70:0x249f5bc0
  40663e:	fnstenv [esp+eiz*2+0x34]
  406642:	sub    BYTE PTR [esi-0x6b921d40],cl
  406648:	and    al,0xb2
  40664a:	(bad)  
  40664b:	and    ecx,DWORD PTR [edx-0x20]
  40664e:	je     0x40666e
  406650:	addr16 test ch,cl
  406653:	pop    ecx
  406654:	adc    BYTE PTR [edx],bh
  406656:	ret    0xf357
  406659:	imul   esi,ecx,0xffffffc2
  40665c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40665d:	cmp    eax,0x8e48d14b
  406662:	dec    esp
  406663:	push   0xffffffa4
  406665:	push   ss
  406666:	xchg   DWORD PTR [eax+eax*8-0x31b108a6],edi
  40666d:	in     eax,0xff
  40666f:	or     al,ah
  406671:	mov    WORD PTR [esi+0x667644da],?
  406677:	jae    0x4066f6
  406679:	push   cs
  40667a:	lds    edi,FWORD PTR [ecx+0x75df23fe]
  406680:	add    al,ah
  406682:	dec    edx
  406683:	ficom  DWORD PTR [edi+0x7862f56d]
  406689:	dec    ecx
  40668a:	loopne 0x4066fa
  40668c:	sub    bh,dl
  40668e:	out    dx,eax
  40668f:	or     bh,bh
  406691:	sub    al,0xbb
  406693:	xchg   esi,eax
  406694:	mov    esp,0x38ff4ebf
  406699:	cld    
  40669a:	add    BYTE PTR [ebx-0x59],0x75
  40669e:	or     BYTE PTR [ecx-0x78389258],dh
  4066a4:	retf   
  4066a5:	push   ebp
  4066a6:	and    al,dl
  4066a8:	adc    al,0x45
  4066aa:	and    DWORD PTR [ecx-0x2615449a],esp
  4066b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066b1:	cdq    
  4066b2:	rcr    BYTE PTR [ebx+0x5b],1
  4066b5:	mov    eax,0x3fda6a92
  4066ba:	sbb    ch,BYTE PTR [edi-0x3b]
  4066bd:	daa    
  4066be:	and    eax,0x33c9ae17
  4066c3:	cmc    
  4066c4:	in     eax,0xf6
  4066c6:	jnp    0x40665b
  4066c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066c9:	dec    esp
  4066ca:	or     BYTE PTR cs:[edi+0xc],al
  4066ce:	xor    al,0xdc
  4066d0:	fisttp QWORD PTR [eax+0x5f]
  4066d3:	mov    dh,0xaf
  4066d5:	jmp    0x40669f
  4066d7:	push   esi
  4066d8:	xchg   esi,eax
  4066d9:	dec    esi
  4066da:	cmp    al,0xe
  4066dc:	in     al,0x76
  4066de:	pop    ds
  4066df:	and    DWORD PTR [ecx-0x5b8dcafe],edi
  4066e5:	icebp  
  4066e6:	and    eax,0x1131ac48
  4066eb:	out    0x2c,eax
  4066ed:	or     DWORD PTR [esi-0x1503824],0xb99d8a2b
  4066f7:	mov    ah,0xe2
  4066f9:	jne    0x406754
  4066fb:	inc    ebx
  4066fc:	rol    DWORD PTR [ebx],cl
  4066fe:	pushf  
  4066ff:	and    ebx,DWORD PTR [eax]
  406701:	mov    ecx,0x1640f7c8
  406706:	mov    BYTE PTR [ebx],ch
  406708:	sbb    DWORD PTR [edi],esp
  40670a:	test   eax,0x1da0c030
  40670f:	jecxz  0x4066a1
  406711:	jnp    0xecf38c7d
  406717:	add    ebx,DWORD PTR [edi-0xd099d5d]
  40671d:	mov    ds:0x13cade25,al
  406722:	pop    ebp
  406723:	retf   0xd4b0
  406726:	inc    BYTE PTR [edi]
  406728:	sbb    eax,0x85858082
  40672d:	or     DWORD PTR [ebp-0x7e238acf],0xffffffe4
  406734:	cmc    
  406735:	and    DWORD PTR [ecx],esp
  406737:	mov    edi,0x4152b4b
  40673c:	jne    0x406761
  40673e:	push   ds
  40673f:	ins    DWORD PTR es:[edi],dx
  406740:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406741:	or     ebp,DWORD PTR [eax-0x1f1b0b06]
  406747:	outs   dx,BYTE PTR ds:[esi]
  406748:	stos   BYTE PTR es:[edi],al
  406749:	fs hlt 
  40674b:	dec    edx
  40674c:	jb     0x40678b
  40674e:	mov    ch,0x76
  406750:	outs   dx,BYTE PTR ds:[esi]
  406751:	into   
  406752:	sub    esi,edi
  406754:	adc    bl,BYTE PTR [ebx+0x4f]
  406757:	add    BYTE PTR [edi+0x7c],dl
  40675a:	inc    ebp
  40675b:	inc    ecx
  40675c:	add    cl,0x23
  40675f:	stos   BYTE PTR es:[edi],al
  406760:	cmp    eax,0x977eb72b
  406765:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406766:	nop
  406767:	out    0x54,al
  406769:	and    DWORD PTR [ebp-0x30047694],edi
  40676f:	xchg   esi,eax
  406770:	fs js  0x406777
  406773:	inc    ebp
  406774:	push   DWORD PTR ds:0x36d47242
  40677a:	jno    0x4067a7
  40677c:	pop    ebx
  40677d:	gs dec ebx
  40677f:	cmp    eax,0x57f834d4
  406784:	inc    edi
  406785:	sbb    ah,BYTE PTR ds:0xf4c2c246
  40678b:	or     dh,BYTE PTR [eax+0x1c4dfc88]
  406791:	sub    DWORD PTR [eax+0xe],ebx
  406794:	push   ecx
  406795:	fcomp  st(1)
  406797:	mov    edi,0x66481dc3
  40679c:	cli    
  40679d:	inc    ebx
  40679e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40679f:	adc    edi,0x1a
  4067a2:	retf   
  4067a3:	mov    fs,WORD PTR [ecx]
  4067a5:	push   es
  4067a6:	sub    DWORD PTR [eax+0x4],0x4b
  4067aa:	into   
  4067ab:	pop    esp
  4067ac:	cmp    al,0x36
  4067ae:	sub    eax,0x2a955138
  4067b3:	arpl   WORD PTR [esi+0x2299ef3f],cx
  4067b9:	je     0x4067cf
  4067bb:	call   0x1ab82358
  4067c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067c1:	leave  
  4067c2:	ret    
  4067c3:	ins    BYTE PTR es:[edi],dx
  4067c4:	push   edi
  4067c5:	jb     0x40683e
  4067c7:	fist   DWORD PTR [ebx]
  4067c9:	cmc    
  4067ca:	aas    
  4067cb:	dec    edi
  4067cc:	iret   
  4067cd:	mov    eax,0x148d407f
  4067d2:	xchg   ebx,eax
  4067d3:	add    BYTE PTR [ebx+edi*4],bh
  4067d6:	xchg   edi,eax
  4067d7:	mov    ds:0xc509e252,eax
  4067dc:	int3   
  4067dd:	fldcw  WORD PTR [esi*1+0x78a8f066]
  4067e4:	pop    esi
  4067e5:	enter  0xb253,0xd9
  4067e9:	call   0xaa13b8ec
  4067ee:	outs   dx,DWORD PTR ds:[esi]
  4067ef:	push   0x6f3aebbc
  4067f4:	push   0xffffff89
  4067f6:	fsub   DWORD PTR [ecx+0x61]
  4067f9:	popf   
  4067fa:	jmp    0x5caa:0x768a7230
  406801:	jno    0x4067db
  406803:	ficomp DWORD PTR [edi-0x72]
  406806:	cwde   
  406807:	push   0xa03441f2
  40680c:	pushf  
  40680d:	cld    
  40680e:	mov    cl,dl
  406810:	dec    ebp
  406811:	nop
  406812:	fbld   TBYTE PTR [esi+esi*1+0x151a11a5]
  406819:	mov    ah,0x4c
  40681b:	cmp    DWORD PTR [edi+0x5f],ebx
  40681e:	sbb    DWORD PTR [ebx-0x1bab2f07],0x70
  406825:	arpl   di,dx
  406827:	dec    esi
  406828:	fldln2 
  40682a:	mov    edi,0x14e8c64
  40682f:	pop    esp
  406830:	shl    ecx,0x83
  406833:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406834:	mov    esp,0xc6b99128
  406839:	jg     0x4067cd
  40683b:	add    eax,0x445336d2
  406840:	rcl    DWORD PTR [ebp-0x3dbdf6a3],0x1c
  406847:	aam    0xdf
  406849:	mov    ds:0x1bb3f6c8,al
  40684e:	jae    0x40684c
  406850:	sbb    BYTE PTR [eax],dh
  406852:	jl     0x406819
  406854:	mov    DWORD PTR [esp+esi*8],esi
  406857:	jnp    0x4067e4
  406859:	in     al,dx
  40685a:	inc    esi
  40685b:	jae    0x406860
  40685d:	lea    edi,[ebp+0x50df5d34]
  406863:	imul   ebx,DWORD PTR [ebx-0x1d],0xf1672ff5
  40686a:	xor    dl,dl
  40686c:	loope  0x40688d
  40686e:	lds    edx,FWORD PTR [ecx-0x1db36a23]
  406874:	out    dx,al
  406875:	mov    al,0x18
  406877:	pusha  
  406878:	push   eax
  406879:	loopne 0x4068d8
  40687b:	pop    ds
  40687c:	daa    
  40687d:	icebp  
  40687e:	dec    ebp
  40687f:	cmp    BYTE PTR ds:0xe1414ebf,ah
  406885:	push   esp
  406886:	pop    ebx
  406887:	cmp    BYTE PTR [eax-0x5f],cl
  40688a:	loop   0x40687b
  40688c:	xor    al,0x5e
  40688e:	mov    al,0xcf
  406890:	ret    
  406891:	lods   al,BYTE PTR ds:[esi]
  406892:	retf   0xcbf8
  406895:	into   
  406896:	dec    ebx
  406897:	inc    edx
  406898:	(bad)  
  406899:	xlat   BYTE PTR ds:[ebx]
  40689a:	mov    ds:0xa610f549,eax
  40689f:	test   DWORD PTR ds:0x55d02a24,0xd5f44676
  4068a9:	shl    BYTE PTR [eax-0x74],1
  4068ac:	push   ebx
  4068ad:	call   0xf2e7f245
  4068b2:	inc    ebx
  4068b3:	pop    edi
  4068b4:	ins    DWORD PTR es:[edi],dx
  4068b5:	dec    edi
  4068b6:	je     0x4068a0
  4068b8:	cli    
  4068b9:	and    DWORD PTR [esp+eax*2-0x6c],0xd034c209
  4068c1:	jnp    0x40691a
  4068c3:	stc    
  4068c4:	arpl   di,dx
  4068c6:	rcr    dl,0xa1
  4068c9:	sub    al,0x4d
  4068cb:	pop    esi
  4068cc:	scas   eax,DWORD PTR es:[edi]
  4068cd:	sub    bl,0x17
  4068d0:	test   ecx,ebx
  4068d2:	fnstsw WORD PTR [edx+esi*2]
  4068d5:	es sub eax,ecx
  4068d8:	clc    
  4068d9:	imul   eax,DWORD PTR [ebx+eiz*1],0xe0f28f59
  4068e0:	adc    dl,BYTE PTR ds:[edi-0x27]
  4068e4:	fwait
  4068e5:	cmc    
  4068e6:	sub    eax,0xfb540547
  4068eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068ec:	rcr    DWORD PTR [edx-0xa],cl
  4068ef:	adc    DWORD PTR [edx+eiz*4-0x5b],0x22
  4068f4:	sbb    al,BYTE PTR [esi]
  4068f6:	jne    0x406971
  4068f8:	fisub  WORD PTR [edi-0x67]
  4068fb:	xchg   ecx,edx
  4068fd:	inc    esp
  4068fe:	out    dx,eax
  4068ff:	add    dh,0x7b
  406902:	and    eax,0xb587ae1c
  406907:	add    al,0x8a
  406909:	fbstp  TBYTE PTR ds:0xa33a74e7
  40690f:	jp     0x40690a
  406911:	enter  0x19d7,0xe5
  406915:	icebp  
  406916:	push   ecx
  406917:	and    DWORD PTR [ebp-0x13],ecx
  40691a:	mov    ecx,0x13f66552
  40691f:	cmp    eax,DWORD PTR [edi+0x24]
  406922:	dec    BYTE PTR [eax+ebx*4+0x14]
  406926:	int3   
  406927:	pop    ebp
  406928:	and    DWORD PTR [edx],0xa2379e22
  40692e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40692f:	push   ds
  406930:	push   ds
  406931:	cmp    ebp,DWORD PTR [edx-0x80]
  406934:	and    al,0xa0
  406936:	test   al,0x3f
  406938:	xchg   BYTE PTR [esi-0x50],ch
  40693b:	adc    DWORD PTR [esi-0x5e],ebp
  40693e:	jg     0x406972
  406940:	sub    DWORD PTR [ebp-0x1e],ecx
  406943:	jle    0x40695c
  406945:	cdq    
  406946:	sbb    al,0x94
  406948:	add    dh,0xce
  40694b:	icebp  
  40694c:	and    DWORD PTR [ebx+0xb685ca5],esp
  406952:	or     eax,0x9b85b56e
  406957:	push   ebp
  406958:	mov    ecx,0x1ae11e13
  40695d:	fwait
  40695e:	jbe    0x406919
  406960:	xor    BYTE PTR [esi],0x80
  406963:	pusha  
  406964:	adc    bh,bh
  406966:	enter  0x8927,0x50
  40696a:	sar    DWORD PTR [ebx],cl
  40696c:	ss mov dl,0xb
  40696f:	popa   
  406970:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406971:	lock jmp 0x40698b
  406974:	mov    al,0x43
  406976:	lds    edx,FWORD PTR [ebx+0x26]
  406979:	add    ah,ah
  40697b:	push   0xaea08c35
  406980:	les    ebx,FWORD PTR [edi-0x1b250c8d]
  406986:	mov    dh,0x62
  406988:	pop    ebp
  406989:	pop    es
  40698a:	test   DWORD PTR [ebx-0x52],edx
  40698d:	cli    
  40698e:	jecxz  0x40697a
  406990:	xchg   edi,eax
  406991:	lahf   
  406992:	ficomp WORD PTR [esi]
  406994:	aad    0xc4
  406996:	cmp    eax,0x9299d110
  40699b:	mov    eax,0x83dffa17
  4069a0:	or     ah,BYTE PTR [edi]
  4069a2:	jo     0x4069f9
  4069a4:	ja     0x406a1f
  4069a6:	sar    BYTE PTR [esi],1
  4069a8:	pop    es
  4069a9:	and    al,0xcd
  4069ab:	jl     0x406a1b
  4069ad:	ficom  DWORD PTR [eax+0x2709c84b]
  4069b3:	push   ebx
  4069b4:	int    0xef
  4069b6:	mov    edx,0xdbb2e20a
  4069bb:	mov    esi,0x6b43ba81
  4069c0:	cmp    bh,BYTE PTR [esi+edx*8]
  4069c3:	sbb    al,0x3f
  4069c5:	xor    DWORD PTR [edi+0x48],0x2fd9aa2
  4069cc:	sbb    eax,0xed549943
  4069d1:	mov    DWORD PTR [eax-0x76],ebx
  4069d4:	ds (bad) 
  4069d6:	popa   
  4069d7:	icebp  
  4069d8:	jp     0x406a50
  4069da:	arpl   WORD PTR [ebx+esi*4],cx
  4069dd:	call   0x9633:0x855b9e0b
  4069e4:	xchg   edx,eax
  4069e5:	dec    eax
  4069e6:	mov    WORD PTR [ebx],ds
  4069e8:	in     eax,0x1f
  4069ea:	sbb    bh,BYTE PTR [esi-0x141cac25]
  4069f0:	jns    0x406a68
  4069f2:	ss scas al,BYTE PTR es:[edi]
  4069f4:	test   BYTE PTR [esi-0x16],dl
  4069f7:	cld    
  4069f8:	adc    edx,DWORD PTR [eax+0x1c]
  4069fb:	test   al,0xa4
  4069fd:	sar    DWORD PTR [eax],cl
  4069ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a00:	or     ah,BYTE PTR [edi]
  406a02:	js     0x406a83
  406a04:	stos   BYTE PTR es:[edi],al
  406a05:	fsub   DWORD PTR [ecx+eiz*4-0x3820fc5b]
  406a0c:	ins    BYTE PTR es:[edi],dx
  406a0d:	inc    ecx
  406a0e:	xchg   esi,eax
  406a0f:	(bad)  
  406a10:	jge    0x406a5e
  406a12:	scas   eax,DWORD PTR es:[edi]
  406a13:	cmp    eax,edi
  406a15:	add    ch,BYTE PTR [ebp-0x20]
  406a18:	pop    eax
  406a19:	push   ss
  406a1a:	xor    esi,esp
  406a1c:	pusha  
  406a1d:	lahf   
  406a1e:	or     edx,DWORD PTR [ebx-0x2b]
  406a21:	add    eax,0x60b91e62
  406a26:	or     al,0xc9
  406a28:	mov    DWORD PTR [edi+0x1472beb],edx
  406a2e:	mov    ebp,0xbff9d5c1
  406a33:	icebp  
  406a34:	rcl    DWORD PTR [ebx+0x18d026fc],1
  406a3a:	lahf   
  406a3b:	rcl    BYTE PTR [esi-0x311519cb],0x58
  406a42:	mov    WORD PTR [ebx-0x10],gs
  406a45:	adc    al,0xa
  406a47:	mov    bh,0x2b
  406a49:	test   BYTE PTR [ebp-0x5c],dl
  406a4c:	jmp    0x406a69
  406a4e:	rcr    DWORD PTR [edx-0x7b370a68],0xfb
  406a55:	in     eax,0x9e
  406a57:	lock test edx,ebx
  406a5a:	xchg   ebp,eax
  406a5b:	inc    ecx
  406a5c:	xchg   esp,eax
  406a5d:	xchg   esp,eax
  406a5e:	or     ecx,edi
  406a60:	(bad)  
  406a61:	outs   dx,DWORD PTR ds:[esi]
  406a62:	jo     0x406a80
  406a64:	shl    DWORD PTR [esi-0x19],cl
  406a67:	and    al,0xf2
  406a69:	(bad)  
  406a6b:	outs   dx,DWORD PTR ds:[esi]
  406a6c:	jnp    0x406a21
  406a6e:	stos   BYTE PTR es:[edi],al
  406a6f:	xor    DWORD PTR [ebx-0x4ee0378b],edi
  406a75:	and    ah,BYTE PTR [edi+0xe]
  406a78:	call   0xccbb:0x51a73b23
  406a7f:	cmp    esi,DWORD PTR [esp+edx*2-0x73]
  406a83:	inc    esi
  406a84:	xor    bh,bh
  406a86:	mov    eax,0xf3336727
  406a8b:	xchg   edi,eax
  406a8c:	cmp    bl,BYTE PTR [ecx-0x1c1fd71]
  406a92:	xchg   DWORD PTR [ebx],esp
  406a94:	clc    
  406a95:	mov    edi,0xe18e0c92
  406a9a:	dec    DWORD PTR [edi-0x67db49b]
  406aa0:	jae    0x406a84
  406aa2:	cmp    al,0xe9
  406aa4:	adc    BYTE PTR [eax],0xe9
  406aa7:	fcom   DWORD PTR [edi-0x77]
  406aaa:	push   eax
  406aab:	stc    
  406aac:	dec    ecx
  406aad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406aae:	sbb    DWORD PTR [eax],eax
  406ab0:	add    edi,DWORD PTR [esi-0x1d]
  406ab3:	int    0xdc
  406ab5:	push   0x5d
  406ab7:	mov    dh,0xa3
  406ab9:	jecxz  0x406af5
  406abb:	jbe    0x406b27
  406abd:	test   cl,ch
  406abf:	pop    ecx
  406ac0:	xlat   BYTE PTR ds:[ebx]
  406ac1:	addr16 retf 
  406ac3:	push   es
  406ac4:	add    eax,0x63f6171c
  406ac9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406aca:	std    
  406acb:	push   ecx
  406acc:	xor    eax,0x32219a89
  406ad1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ad2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ad3:	loope  0x406ac2
  406ad5:	mov    ebx,0x709326fc
  406ada:	sub    eax,0x12217688
  406adf:	fmul   DWORD PTR [edx+0x42]
  406ae2:	hlt    
  406ae3:	mov    dl,0x18
  406ae5:	and    eax,0x1ea1a3a9
  406aea:	dec    esi
  406aeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406aec:	mov    ebp,0x709217b9
  406af1:	ret    
  406af2:	test   eax,0x581f0da9
  406af7:	jle    0x406aa6
  406af9:	dec    BYTE PTR [eax-0x5cf526ce]
  406aff:	mov    ch,0xfa
  406b01:	sub    eax,0x96bedb7c
  406b06:	call   0xc85a7462
  406b0b:	inc    ebp
  406b0c:	xlat   BYTE PTR ds:[ebx]
  406b0d:	iret   
  406b0e:	imul   esp,DWORD PTR [ecx+0x61efbe68],0xc7500195
  406b18:	push   0x60ca9e2d
  406b1d:	dec    esp
  406b1e:	sar    BYTE PTR [ebp+0x40f7f7d],0x11
  406b25:	and    DWORD PTR [esi+ecx*4],esi
  406b28:	frstor [ebp+0x2543c514]
  406b2e:	lahf   
  406b2f:	jo     0x406b76
  406b31:	mov    al,0x92
  406b33:	sbb    DWORD PTR [edx],edi
  406b35:	jmp    0x406b22
  406b37:	sbb    ax,0xd386
  406b3b:	lea    edx,ds:0x835ed2d0
  406b41:	push   edi
  406b42:	outs   dx,BYTE PTR ds:[esi]
  406b43:	and    edx,DWORD PTR [esi-0x7]
  406b46:	xor    BYTE PTR ds:0xafa6ae5c,cl
  406b4c:	and    dh,cl
  406b4e:	xchg   ebx,eax
  406b4f:	adc    bh,ch
  406b51:	mov    ebp,0x2c2ce0d0
  406b56:	xchg   BYTE PTR [edi-0x6a],al
  406b59:	and    DWORD PTR [edi+eax*2+0x24dc280d],esp
  406b60:	neg    al
  406b62:	imul   ecx,DWORD PTR [eax+0x58],0x5127dbab
  406b69:	popf   
  406b6a:	int    0x2f
  406b6c:	pop    ss
  406b6d:	sbb    ecx,0x74497424
  406b73:	je     0x406b82
  406b75:	retf   
  406b76:	adc    DWORD PTR [edx],ebp
  406b78:	cmp    eax,0x14dc225a
  406b7d:	cmp    ch,BYTE PTR ds:0x788de373
  406b83:	in     eax,dx
  406b84:	push   esp
  406b85:	dec    esp
  406b86:	sub    dh,BYTE PTR [eax]
  406b88:	push   0xeedeb00d
  406b8d:	push   edi
  406b8e:	in     eax,dx
  406b8f:	mov    ah,0xee
  406b91:	call   0x3eb1:0xed23289d
  406b98:	push   ebp
  406b99:	pop    eax
  406b9a:	sbb    al,0xa7
  406b9c:	pop    esi
  406b9d:	jecxz  0x406b38
  406b9f:	add    cl,BYTE PTR [ebx+esi*1-0x1883c3c8]
  406ba6:	dec    ebx
  406ba7:	add    ebp,DWORD PTR [ebx-0x7e]
  406baa:	xchg   ecx,eax
  406bab:	pop    ds
  406bac:	pop    es
  406bad:	nop
  406bae:	jp     0x406c00
  406bb0:	imul   BYTE PTR [ebp+0x50e2cae1]
  406bb6:	and    eax,0x30ee16d4
  406bbb:	(bad)  
  406bbd:	pop    eax
  406bbe:	push   eax
  406bbf:	dec    ebx
  406bc0:	dec    edi
  406bc1:	push   edi
  406bc2:	pop    eax
  406bc3:	aad    0x68
  406bc5:	fsub   DWORD PTR [ecx]
  406bc7:	dec    esi
  406bc8:	aas    
  406bc9:	(bad)  
  406bca:	cmp    DWORD PTR [edx+0x3134afe1],ebp
  406bd0:	ss aad 0xe5
  406bd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bd4:	pop    ecx
  406bd5:	jmp    0xe729437b
  406bda:	ret    0x19a6
  406bdd:	sub    al,0x4f
  406bdf:	stos   BYTE PTR es:[edi],al
  406be0:	and    eax,0x80806d65
  406be5:	pop    ebp
  406be6:	inc    esi
  406be7:	cmp    eax,0x526af46f
  406bec:	push   esp
  406bed:	pop    edi
  406bee:	xchg   ebx,eax
  406bef:	rcl    BYTE PTR [edi-0x329b0448],cl
  406bf5:	push   eax
  406bf6:	dec    eax
  406bf7:	aad    0xb3
  406bf9:	int3   
  406bfa:	in     al,dx
  406bfb:	add    al,0x82
  406bfd:	or     al,0xbf
  406bff:	enter  0x266a,0x7d
  406c03:	fstp   QWORD PTR [edi+0x1]
  406c06:	and    DWORD PTR [ebx],0x51c01841
  406c0c:	test   eax,0x163fff13
  406c11:	dec    edx
  406c12:	pop    edx
  406c13:	adc    DWORD PTR [edx+0xf],esp
  406c16:	test   BYTE PTR [eax],cl
  406c18:	leave  
  406c19:	and    esp,DWORD PTR [ebx+eax*8+0xe]
  406c1d:	dec    edi
  406c1e:	push   0x75
  406c20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c21:	and    al,0x82
  406c23:	loope  0x406be4
  406c25:	ins    BYTE PTR es:[edi],dx
  406c26:	jne    0x406bb9
  406c28:	xchg   edx,eax
  406c29:	add    cl,BYTE PTR [edx+esi*1+0x6f]
  406c2d:	push   edi
  406c2e:	test   DWORD PTR [edi+eiz*1],edi
  406c31:	out    0xc7,al
  406c33:	lock adc BYTE PTR [ecx+0xbe73302],bl
  406c3a:	cmp    DWORD PTR [ebp+0x78],esi
  406c3d:	inc    edi
  406c3e:	cwde   
  406c3f:	sub    esi,esp
  406c41:	xchg   esp,eax
  406c42:	add    al,0x88
  406c44:	mov    al,0x16
  406c46:	jmp    0xa837:0xeab98119
  406c4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c4e:	in     eax,0x0
  406c50:	jecxz  0x406c5a
  406c52:	mov    cs,edx
  406c54:	or     BYTE PTR [esi+0x21ff5071],0x4f
  406c5b:	pop    edx
  406c5c:	mov    edx,0x7c3dae48
  406c61:	imul   eax,DWORD PTR [ebp-0x41],0xc83f8e75
  406c68:	repnz ds push edi
  406c6b:	inc    esi
  406c6c:	shrd   esp,ebx,0xdb
  406c70:	(bad)
  406c74:	repnz dec eax
  406c76:	push   esp
  406c77:	cwde   
  406c78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c7a:	jne    0x406c01
  406c7c:	stos   BYTE PTR es:[edi],al
  406c7d:	add    eax,0x1e28f390
  406c82:	mov    al,0x4e
  406c84:	sbb    esp,DWORD PTR [ecx]
  406c86:	in     eax,0x8a
  406c88:	cmp    DWORD PTR [eax+0x7be285a6],0x54
  406c8f:	mov    eax,0xeeded9b
  406c94:	pop    es
  406c95:	cmc    
  406c96:	inc    ebx
  406c97:	aam    0x18
  406c99:	rol    BYTE PTR [esi],0x58
  406c9c:	inc    edx
  406c9d:	pop    es
  406c9e:	and    BYTE PTR [esi+0x7b],dh
  406ca1:	add    ebx,esp
  406ca3:	xchg   BYTE PTR [edx],cl
  406ca5:	fmul   st,st(4)
  406ca7:	push   es
  406ca8:	mov    ebx,0x76dc3256
  406cad:	xchg   bh,ah
  406caf:	pop    edx
  406cb0:	sahf   
  406cb1:	dec    edx
  406cb2:	loope  0x406ccd
  406cb4:	sbb    eax,0x26123d1d
  406cb9:	pop    ebp
  406cba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cbb:	mov    ah,0x6b
  406cbd:	add    eax,0x8ffe4b57
  406cc2:	mov    eax,ds:0x91716937
  406cc7:	sbb    eax,0xdc609302
  406ccc:	dec    ebx
  406ccd:	outs   dx,DWORD PTR ds:[esi]
  406cce:	add    BYTE PTR [ecx-0x24],cl
  406cd1:	cld    
  406cd2:	das    
  406cd3:	loop   0x406caa
  406cd5:	push   ebp
  406cd6:	xchg   edi,eax
  406cd7:	sar    BYTE PTR [esi+0x79],cl
  406cda:	(bad)  
  406cdb:	jae    0x406d32
  406cdd:	push   0xc28b0fda
  406ce2:	push   eax
  406ce3:	fstp   st(5)
  406ce5:	push   0xffffffcb
  406ce7:	(bad)  
  406ce8:	sub    BYTE PTR [edx+0x4b],cl
  406ceb:	and    DWORD PTR [edi],edi
  406ced:	adc    ecx,ebx
  406cef:	call   0xb82b:0x2a6d6354
  406cf6:	pop    ss
  406cf7:	loop   0x406cc9
  406cf9:	sbb    dh,ah
  406cfb:	inc    esi
  406cfc:	inc    ecx
  406cfd:	dec    ebp
  406cfe:	and    al,0xb6
  406d00:	stc    
  406d01:	int3   
  406d02:	add    esi,edx
  406d04:	idiv   DWORD PTR [ecx-0x6b]
  406d07:	outs   dx,DWORD PTR ds:[esi]
  406d08:	out    dx,al
  406d09:	pop    es
  406d0a:	mov    dh,0x13
  406d0c:	or     eax,0x8c21a421
  406d11:	pop    ecx
  406d12:	pop    ds
  406d13:	lods   eax,DWORD PTR ds:[esi]
  406d14:	repnz mov dh,0xc1
  406d17:	push   0xb9ec8eba
  406d1c:	mov    dl,0xab
  406d1e:	lds    ebx,FWORD PTR [ecx+0x3a]
  406d21:	mov    bl,0xea
  406d23:	jp     0x406d23
  406d25:	inc    esp
  406d26:	dec    esi
  406d27:	fsubr  st,st(6)
  406d29:	dec    ecx
  406d2a:	inc    esp
  406d2b:	mov    eax,ds:0xd5398a70
  406d30:	outs   dx,BYTE PTR ds:[esi]
  406d31:	inc    BYTE PTR [edi]
  406d33:	jge    0x406ce8
  406d35:	lock inc edx
  406d37:	jg     0x406cfc
  406d39:	jmp    0x6cbb:0xa55727ce
  406d40:	jne    0x406ccb
  406d42:	inc    esi
  406d43:	mov    cl,0x60
  406d45:	(bad)  
  406d46:	retf   0xb162
  406d49:	mul    BYTE PTR [ebp+0x1b0ee80c]
  406d4f:	clc    
  406d50:	std    
  406d51:	(bad)  
  406d53:	sub    BYTE PTR [esi+0x5ceb794c],dl
  406d59:	fs popa 
  406d5b:	int3   
  406d5c:	in     al,0xba
  406d5e:	pushf  
  406d5f:	add    ebp,eax
  406d61:	jbe    0x406d95
  406d63:	xlat   BYTE PTR ds:[ebx]
  406d64:	xor    bl,ah
  406d66:	dec    ecx
  406d67:	mov    al,0x2d
  406d69:	sbb    eax,0xe4bc6c9
  406d6e:	out    dx,eax
  406d6f:	add    BYTE PTR [esi+0x1ae61ced],dh
  406d75:	sbb    DWORD PTR ds:0x819e8fa8,0x72822c5f
  406d7f:	mov    edx,DWORD PTR [esp+ecx*2]
  406d82:	int3   
  406d83:	xchg   edx,eax
  406d84:	pushf  
  406d85:	imul   ecx,DWORD PTR [edx],0x7cb9bfc4
  406d8b:	lods   eax,DWORD PTR ds:[esi]
  406d8c:	xchg   esi,eax
  406d8d:	cmp    BYTE PTR [ebx+0x3602cb5d],ah
  406d93:	push   ebp
  406d94:	mov    ebx,0x492e82a4
  406d99:	test   DWORD PTR [esi-0xa],esi
  406d9c:	inc    edi
  406d9d:	mov    edx,DWORD PTR [esp+edx*4+0x6c46854b]
  406da4:	and    DWORD PTR [edi],esi
  406da6:	repnz out 0xad,al
  406da9:	xor    BYTE PTR [esi-0x70f4fe0d],al
  406daf:	adc    DWORD PTR [esi+esi*2-0x3d],edi
  406db3:	cmp    dh,BYTE PTR [edx+0x6dca9d02]
  406db9:	push   edi
  406dba:	inc    eax
  406dbb:	rcr    BYTE PTR [ebx-0x2e21c6f7],0xe7
  406dc2:	jge    0x406df5
  406dc4:	pop    esp
  406dc5:	or     DWORD PTR [ebp-0x4e],ebp
  406dc8:	cmc    
  406dc9:	jg     0x406e42
  406dcb:	icebp  
  406dcc:	lods   eax,DWORD PTR ds:[esi]
  406dcd:	mov    gs,WORD PTR [ebx-0x21]
  406dd0:	xchg   DWORD PTR [ebx],edi
  406dd2:	adc    edx,esp
  406dd4:	retf   0x18db
  406dd7:	aam    0xad
  406dd9:	pop    eax
  406dda:	adc    al,0x1e
  406ddc:	and    al,0x14
  406dde:	outs   dx,DWORD PTR ds:[esi]
  406ddf:	xchg   BYTE PTR [esi],bh
  406de1:	and    al,0xc0
  406de3:	inc    ebx
  406de4:	stc    
  406de5:	mov    ebx,fs
  406de7:	mov    edx,0xdbf1ee0a
  406dec:	loop   0x406db8
  406dee:	lea    ebp,[eax-0x626b19f4]
  406df4:	or     al,0x2a
  406df6:	scas   al,BYTE PTR es:[edi]
  406df7:	inc    ebx
  406df8:	xlat   BYTE PTR ds:[ebx]
  406df9:	push   ebx
  406dfa:	les    ebp,FWORD PTR [ebx-0x45]
  406dfd:	jg     0x406d90
  406dff:	loopne 0x406d97
  406e01:	sbb    dl,bl
  406e03:	cld    
  406e04:	pop    esi
  406e05:	mov    ebx,0x3e2cc180
  406e0a:	dec    esi
  406e0b:	lahf   
  406e0c:	rol    ch,0x65
  406e0f:	sbb    eax,0x8817e58e
  406e14:	sbb    al,0x81
  406e16:	inc    ecx
  406e17:	add    BYTE PTR [ebx-0x574fa363],0x9c
  406e1e:	push   0xffffff89
  406e20:	clts   
  406e22:	inc    DWORD PTR [edx-0x53]
  406e25:	pushf  
  406e26:	xchg   edi,eax
  406e27:	daa    
  406e28:	push   ds
  406e29:	xor    ebx,ebx
  406e2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e2c:	lods   eax,DWORD PTR ds:[esi]
  406e2d:	fild   WORD PTR [edi]
  406e2f:	mov    ch,0xf4
  406e31:	pop    ds
  406e32:	inc    ebp
  406e33:	call   0xcbb9b518
  406e38:	xchg   ebp,eax
  406e39:	call   0x19b:0xe15639c7
  406e40:	lods   al,BYTE PTR ds:[esi]
  406e41:	test   al,0x2e
  406e43:	mov    WORD PTR [esp+ebp*4],?
  406e46:	cli    
  406e47:	jnp    0x406eba
  406e49:	xchg   esi,eax
  406e4a:	xchg   esp,eax
  406e4b:	jb     0x406e7f
  406e4d:	mov    DWORD PTR [ebp-0x46],ecx
  406e50:	clc    
  406e51:	in     al,0xbd
  406e53:	scas   al,BYTE PTR es:[edi]
  406e54:	(bad)  
  406e55:	cs cmp ebx,esp
  406e58:	mov    bh,0x55
  406e5a:	cld    
  406e5b:	and    dl,BYTE PTR [eax+ebp*1-0x4fe05b82]
  406e62:	adc    BYTE PTR [edx],bl
  406e64:	in     eax,dx
  406e65:	mov    BYTE PTR [eax-0x27],al
  406e68:	jmp    0x406e87
  406e6a:	scas   al,BYTE PTR es:[edi]
  406e6b:	cs pop esi
  406e6d:	mov    edi,0x87214e7e
  406e72:	pop    esi
  406e73:	pop    ecx
  406e74:	lahf   
  406e75:	push   ebx
  406e76:	sbb    ecx,DWORD PTR ds:0x436c115a
  406e7c:	retf   0xee99
  406e7f:	(bad)  
  406e80:	push   ss
  406e81:	std    
  406e82:	fmul   DWORD PTR [eax+0x66]
  406e85:	xchg   edi,eax
  406e86:	ret    
  406e87:	push   ss
  406e88:	dec    esp
  406e89:	in     eax,0xd4
  406e8b:	call   0x14ad:0xbddd6ada
  406e92:	xchg   esp,eax
  406e93:	lods   al,BYTE PTR ds:[esi]
  406e94:	fimul  DWORD PTR ds:0xe8c1ae6e
  406e9a:	xor    BYTE PTR [ebx+0x10],bl
  406e9d:	or     al,0xa7
  406e9f:	daa    
  406ea0:	push   ebx
  406ea1:	in     eax,0x89
  406ea3:	mov    cl,0x83
  406ea5:	mov    ?,WORD PTR [edx+0x65385929]
  406eab:	xor    DWORD PTR [ebx-0x7d9b5993],eax
  406eb1:	mov    cl,BYTE PTR [esi+0x55]
  406eb4:	jecxz  0x406eca
  406eb6:	add    eax,0x4f67ed69
  406ebb:	fisttp DWORD PTR [ecx+0x7466b612]
  406ec1:	or     BYTE PTR [eax+0x1c],ch
  406ec4:	lock aad 0xb3
  406ec7:	aad    0xa8
  406ec9:	cli    
  406eca:	sbb    BYTE PTR fs:[edx-0x61],bl
  406ece:	add    ebp,DWORD PTR [ebx]
  406ed0:	repnz mov ss,WORD PTR [edi]
  406ed3:	dec    ebx
  406ed4:	call   DWORD PTR [edx]
  406ed6:	loope  0x406e8a
  406ed8:	and    al,0xbe
  406eda:	mov    ebp,0x364a4064
  406edf:	pop    esi
  406ee0:	popa   
  406ee1:	add    al,0xfe
  406ee3:	ret    
  406ee4:	sub    al,BYTE PTR [bx-0x3737]
  406ee9:	pushf  
  406eea:	in     al,0x3e
  406eec:	jp     0x406e81
  406eee:	mov    ah,0xba
  406ef0:	add    edi,edx
  406ef2:	dec    ebp
  406ef3:	add    esp,0x665e5ae4
  406ef9:	test   eax,0xcdfdda22
  406efe:	inc    ebx
  406eff:	pop    ebx
  406f00:	add    edi,ecx
  406f02:	popf   
  406f03:	jne    0x406f47
  406f05:	dec    edx
  406f06:	jnp    0x406f1e
  406f08:	add    DWORD PTR [edi],ebp
  406f0a:	inc    ebp
  406f0b:	jg     0x406ea2
  406f0d:	add    DWORD PTR [ebx+0xb9cbcbc],ecx
  406f13:	jo     0x406f87
  406f15:	std    
  406f16:	loope  0x406f1c
  406f18:	cmp    DWORD PTR [eax+0x6cb3c992],eax
  406f1e:	aas    
  406f1f:	or     BYTE PTR [ebp+0x3565a121],cl
  406f25:	jl     0x406f02
  406f27:	xchg   edx,eax
  406f28:	jmp    0x406f24
  406f2a:	(bad)  
  406f2b:	call   FWORD PTR [eax]
  406f2d:	inc    edi
  406f2e:	and    DWORD PTR [ecx+0x53],eax
  406f31:	int    0x35
  406f33:	jns    0x406fb2
  406f35:	add    eax,ebx
  406f37:	int    0x47
  406f39:	pushw  cs
  406f3b:	sbb    al,0x61
  406f3d:	jae    0x406f1e
  406f3f:	fsubp  st(5),st
  406f41:	push   0x810050a0
  406f46:	push   ss
  406f47:	pusha  
  406f48:	fdivrp st(4),st
  406f4a:	xor    dh,bh
  406f4c:	xchg   ebx,eax
  406f4d:	data16 arpl WORD PTR [ebp-0x2c894c4d],cx
  406f54:	out    0xdb,eax
  406f56:	cli    
  406f57:	adc    DWORD PTR [ebp+0xcb6f04f],edi
  406f5d:	enter  0x80e4,0xee
  406f61:	icebp  
  406f62:	dec    esp
  406f63:	mov    edi,0x217ea991
  406f68:	hlt    
  406f69:	pop    es
  406f6a:	cdq    
  406f6b:	add    BYTE PTR [ecx],cl
  406f6d:	fisubr DWORD PTR [edi+0x5f]
  406f70:	imul   ecx,DWORD PTR [eax+edi*2-0x19],0x26aa5fdf
  406f78:	sub    ebx,DWORD PTR [ebx]
  406f7a:	push   eax
  406f7b:	fldenv [eax-0x41]
  406f7e:	xchg   ebp,eax
  406f7f:	aaa    
  406f80:	mov    ebp,0xd7a4f1f1
  406f85:	pop    eax
  406f86:	mov    ebx,0xd930a74e
  406f8b:	add    eax,0xeb7714e4
  406f90:	out    0x79,eax
  406f92:	push   ecx
  406f93:	or     edi,DWORD PTR [esp+edi*4+0x66]
  406f97:	inc    ebp
  406f98:	les    ebp,FWORD PTR [ebp+esi*4-0x1]
  406f9c:	retf   0xfa78
  406f9f:	mov    ch,0xf3
  406fa1:	lods   eax,DWORD PTR ds:[esi]
  406fa2:	xlat   BYTE PTR ds:[ebx]
  406fa3:	inc    ecx
  406fa4:	ret    
  406fa5:	mov    esp,0xd066d6f0
  406fab:	loopne 0x407009
  406fad:	loope  0x406ff5
  406faf:	pop    ebx
  406fb0:	imul   eax,DWORD PTR [ecx],0x1d
  406fb3:	xor    ebx,DWORD PTR [edx]
  406fb5:	jmp    0xf181301d
  406fba:	xchg   ebp,eax
  406fbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fbc:	pusha  
  406fbd:	push   ds
  406fbe:	mov    gs,WORD PTR [ecx]
  406fc0:	outs   dx,DWORD PTR ds:[esi]
  406fc1:	mov    eax,0x4f14898e
  406fc6:	push   cs
  406fc7:	mov    dh,0x54
  406fc9:	icebp  
  406fca:	jp     0x407043
  406fcc:	adc    eax,0xb8b74876
  406fd1:	lods   eax,DWORD PTR ds:[esi]
  406fd2:	jge    0x406fcc
  406fd4:	add    DWORD PTR [edi-0x18a01470],ecx
  406fda:	ds sbb bh,bl
  406fdd:	add    DWORD PTR [esi],eax
  406fdf:	(bad)  
  406fe0:	jp     0x407046
  406fe2:	mov    edx,0xde7c25df
  406fe7:	mov    ecx,0x3fc23b57
  406fec:	iret   
  406fed:	jne    0x406fff
  406fef:	imul   eax,DWORD PTR [ebx-0x12edc545],0x69
  406ff6:	es nop
  406ff8:	mov    ecx,0x5d0de27f
  406ffd:	nop
  406ffe:	add    ebx,ecx
  407000:	int3   
  407001:	and    eax,0x8d03410e
  407006:	fs or  eax,0x1cccc3
  40700c:	jb     0x40702f
  40700e:	outs   dx,DWORD PTR ds:[esi]
  40700f:	inc    esp
  407010:	mov    dh,0xcf
  407012:	addr16 dec edi
  407014:	shl    BYTE PTR [ecx+0x3f],1
  407017:	mov    bh,0x5f
  407019:	xchg   esp,eax
  40701a:	int3   
  40701b:	xchg   esp,eax
  40701c:	or     ebp,eax
  40701e:	into   
  40701f:	repz jne 0x40704a
  407022:	xchg   esp,eax
  407023:	dec    ecx
  407024:	aad    0xed
  407026:	scas   al,BYTE PTR es:[edi]
  407027:	scas   al,BYTE PTR es:[edi]
  407028:	xor    ch,BYTE PTR [edx+0x6a]
  40702b:	or     ch,BYTE PTR [edx-0x57]
  40702e:	xchg   esi,eax
  40702f:	stos   DWORD PTR es:[edi],eax
  407030:	adc    al,0xd6
  407032:	stos   DWORD PTR es:[edi],eax
  407033:	hlt    
  407034:	ins    DWORD PTR es:[edi],dx
  407035:	cld    
  407036:	(bad)
  40703a:	sti    
  40703b:	call   0xd4cc4d5d
  407040:	shl    DWORD PTR [esi],cl
  407042:	adc    bl,BYTE PTR [ebx]
  407044:	fwait
  407045:	je     0x40709f
  407047:	bound  ebp,QWORD PTR [eax-0x2cd8084]
  40704d:	cmp    al,0xe8
  40704f:	and    edi,DWORD PTR [eax+0xc]
  407052:	push   edx
  407053:	xchg   ebp,eax
  407054:	loope  0x40709f
  407056:	jle    0x406fd9
  407058:	jl     0x407098
  40705a:	mov    ebx,gs
  40705c:	mov    DWORD PTR [edi+esi*8-0x47],ebp
  407060:	pop    ecx
  407061:	int3   
  407062:	aas    
  407063:	int3   
  407064:	xor    ch,al
  407066:	mov    dl,0xad
  407068:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407069:	sbb    eax,0x1e49cfa0
  40706e:	shr    BYTE PTR [edx-0x3],1
  407071:	mov    esp,0xf629880b
  407076:	jge    0x407007
  407078:	data16 and BYTE PTR [esi-0x7e],0xaf
  40707d:	mov    bl,ch
  40707f:	mov    ecx,0xd0a0ef2f
  407084:	xor    al,0x2e
  407086:	daa    
  407087:	test   eax,0x1c5268c3
  40708c:	push   eax
  40708d:	cld    
  40708e:	std    
  40708f:	mov    dl,BYTE PTR [edi]
  407091:	dec    ecx
  407092:	ins    BYTE PTR es:[edi],dx
  407093:	iret   
  407094:	std    
  407095:	ds dec ebx
  407097:	fisttp QWORD PTR [edi]
  407099:	aaa    
  40709a:	daa    
  40709b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40709c:	pop    ebp
  40709d:	push   ebp
  40709e:	pop    esi
  4070a0:	cmp    DWORD PTR [edi],ebx
  4070a2:	cmp    eax,0xc156bcf6
  4070a7:	adc    al,0x49
  4070a9:	xor    DWORD PTR [eax+ebp*2-0x5cb4fd17],ebx
  4070b0:	inc    esi
  4070b1:	and    eax,0xdebbbe77
  4070b6:	mov    dl,0x5e
  4070b8:	jnp    0x40703c
  4070ba:	sbb    eax,0x6b40da07
  4070bf:	mov    esi,0xbec00200
  4070c4:	stc    
  4070c5:	pop    ds
  4070c6:	cwde   
  4070c7:	and    dh,ch
  4070c9:	mov    ds:0x432e9ba5,eax
  4070ce:	jl     0x407075
  4070d0:	mov    cl,0xc2
  4070d2:	mov    edx,0x7ba47c4e
  4070d7:	jnp    0x40709f
  4070d9:	popf   
  4070da:	mov    esp,0xee3e6533
  4070df:	test   ecx,0xf29e8a68
  4070e5:	lods   eax,DWORD PTR ds:[esi]
  4070e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070e7:	sbb    BYTE PTR [ebx-0x43b9827e],bl
  4070ed:	jnp    0x4070fc
  4070ef:	test   al,0x6b
  4070f1:	loopne 0x4070e7
  4070f3:	ds unpckhps xmm7,xmm7
  4070f7:	out    0x2e,al
  4070f9:	loope  0x407095
  4070fb:	mov    dl,0xf4
  4070fd:	lahf   
  4070fe:	xor    edi,DWORD PTR [edx+0x78]
  407101:	test   DWORD PTR [esi+0x6d],0x9ab0abdc
  407108:	mov    bh,0xbf
  40710a:	sbb    DWORD PTR [edi],ebp
  40710c:	jnp    0x4070b4
  40710e:	scas   eax,DWORD PTR es:[edi]
  40710f:	mov    WORD PTR [edi+0x63],ss
  407112:	sbb    al,0x79
  407114:	jae    0x40711b
  407116:	and    eax,0x1b01e630
  40711b:	xchg   BYTE PTR [ecx-0x16b05bc2],bh
  407121:	cli    
  407122:	ret    
  407123:	mov    al,0x40
  407125:	mov    ecx,eax
  407127:	popf   
  407128:	fs mov edx,0xa10fa309
  40712e:	or     DWORD PTR ds:0xeedb88fe,eax
  407134:	mov    al,ds:0xa87c90df
  407139:	sbb    al,0x7f
  40713b:	inc    ecx
  40713c:	stc    
  40713d:	cmp    edx,edx
  40713f:	dec    edi
  407140:	imul   ebx,DWORD PTR [esi+0x6cbd4cd4],0xffffffb0
  407147:	test   DWORD PTR [bp+si-0x5d5b],esp
  40714c:	fwait
  40714d:	hlt    
  40714e:	or     bh,cl
  407150:	mov    ebp,DWORD PTR [ecx]
  407152:	je     0x4070eb
  407154:	out    dx,eax
  407155:	lods   eax,DWORD PTR ds:[esi]
  407156:	sbb    al,0xb9
  407158:	and    dh,BYTE PTR [esi-0x85b2981]
  40715e:	sahf   
  40715f:	rol    BYTE PTR [ebx-0x30a0aeb3],cl
  407165:	sub    BYTE PTR [edi],bl
  407167:	xor    BYTE PTR [esi+ebp*2+0x48],ah
  40716b:	push   edi
  40716c:	cs aam 0xe
  40716f:	jl     0x4071c7
  407171:	jge    0x407172
  407173:	nop
  407174:	sub    DWORD PTR [edx+eiz*4-0x790fff60],esp
  40717b:	cmp    bl,cl
  40717d:	dec    edi
  40717e:	mov    ebp,0x2c9a3163
  407183:	mov    esi,0xa6750b8b
  407188:	or     BYTE PTR [edx-0x2f],ah
  40718b:	pop    edx
  40718c:	adc    DWORD PTR [esi+ecx*2+0x54],ecx
  407190:	xchg   BYTE PTR [ebx+0x428dd3ac],ch
  407196:	and    esp,ecx
  407198:	mov    ds:0xa8c2894d,al
  40719d:	sub    DWORD PTR [ecx-0x1dac77f5],esp
  4071a3:	mov    bh,0xfd
  4071a5:	ficom  WORD PTR [ebx-0x72]
  4071a8:	or     al,0x98
  4071aa:	adc    ch,cl
  4071ac:	adc    DWORD PTR [edx+0x478a1dff],0x330a001e
  4071b6:	mov    cl,0x39
  4071b8:	mov    DWORD PTR [eax],ebp
  4071ba:	fld    DWORD PTR [edi-0x415960d6]
  4071c0:	pop    ss
  4071c1:	xchg   edi,eax
  4071c2:	mov    bh,0xd9
  4071c4:	stos   DWORD PTR es:[edi],eax
  4071c5:	lods   al,BYTE PTR ds:[esi]
  4071c6:	clc    
  4071c7:	outs   dx,BYTE PTR ds:[esi]
  4071c8:	mov    ds:0xcf9925ce,al
  4071cd:	mov    ah,bh
  4071cf:	mov    dh,0x52
  4071d1:	js     0x40719c
  4071d3:	xchg   esi,eax
  4071d4:	adc    DWORD PTR [esi],edx
  4071d6:	cmp    eax,0x89df135b
  4071db:	sub    eax,0x22bf875e
  4071e0:	sub    ch,BYTE PTR [esp+eax*8-0x521b1348]
  4071e7:	add    cl,BYTE PTR [ebx+eax*1]
  4071ea:	xchg   ebp,eax
  4071eb:	(bad)  
  4071ec:	push   0xdb973269
  4071f1:	icebp  
  4071f2:	mov    edx,0x39b4fdd6
  4071f7:	(bad)  
  4071f8:	and    DWORD PTR [edx+edx*2+0x7f7caf58],eax
  4071ff:	xlat   BYTE PTR ds:[ebx]
  407200:	xchg   ch,dl
  407202:	add    BYTE PTR ds:0x7c497b49,al
  407208:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407209:	test   BYTE PTR [edi+0x0],cl
  40720c:	pop    ecx
  40720d:	ret    0x9466
  407210:	cmp    ebp,0x50
  407213:	sbb    dl,BYTE PTR [ebx-0x16b8781a]
  407219:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40721a:	std    
  40721b:	cmp    eax,0x7ea707a1
  407220:	popa   
  407221:	xor    eax,0x34775523
  407226:	icebp  
  407227:	enter  0x284d,0x69
  40722b:	fld    TBYTE PTR [esi+0x4a]
  40722e:	hlt    
  40722f:	les    esi,FWORD PTR [esi+0x45]
  407232:	adc    esi,DWORD PTR [esi+0x48]
  407235:	mov    dh,0x5a
  407237:	inc    ebx
  407238:	or     al,0xdf
  40723a:	setb   BYTE PTR [edx+0x7d96a230]
  407241:	mov    al,ds:0x1c999e62
  407246:	call   0xdf4a:0x661a1ab7
  40724d:	(bad)  
  40724e:	fimul  DWORD PTR [edi+ecx*1-0x6e9c1d2c]
  407255:	aaa    
  407256:	xchg   ebp,eax
  407257:	cld    
  407258:	sub    BYTE PTR [esi],0xf7
  40725b:	adc    al,0x94
  40725d:	sbb    BYTE PTR [ecx],0x44
  407260:	out    dx,eax
  407261:	aaa    
  407262:	xor    BYTE PTR [esi],ch
  407264:	xchg   DWORD PTR [edx-0x593c371a],ecx
  40726a:	push   0xfffffff6
  40726c:	mov    eax,ds:0x2c525890
  407271:	retf   0x2897
  407274:	xor    DWORD PTR [ebp+ebx*2-0xfc36f80],0x41
  40727c:	ds call 0x6eecc9cd
  407282:	add    edi,DWORD PTR [edx-0x44]
  407285:	enter  0xb70a,0x70
  407289:	mov    esp,0xcc54373d
  40728e:	add    ebp,DWORD PTR [esi]
  407290:	sbb    eax,0xcaa28cf5
  407295:	and    al,0x7f
  407297:	pop    es
  407298:	pop    edi
  407299:	xchg   edi,eax
  40729a:	or     BYTE PTR [edx+0x3c],dh
  40729d:	xor    dl,cl
  40729f:	pop    edi
  4072a0:	mov    ecx,0x730d9a93
  4072a5:	pop    edx
  4072a6:	outs   dx,BYTE PTR ds:[esi]
  4072a7:	xor    al,0x36
  4072a9:	stos   BYTE PTR es:[edi],al
  4072aa:	xchg   ecx,eax
  4072ab:	dec    BYTE PTR [edi-0x4c]
  4072ae:	call   0x3804:0x78430cfe
  4072b5:	int3   
  4072b6:	and    eax,0x6163e814
  4072bb:	adc    al,0xc6
  4072bd:	(bad)  
  4072be:	call   FWORD PTR [ecx-0x51]
  4072c1:	(bad)  
  4072c2:	(bad)  [eax+0x1f]
  4072c5:	sbb    al,BYTE PTR [eax+0x4e]
  4072c8:	push   0xeb5f0bc4
  4072cd:	imul   ecx
  4072cf:	rcl    DWORD PTR [ebp+0x4b],0x6a
  4072d3:	push   0xc17751d5
  4072d8:	adc    BYTE PTR [eax],dh
  4072da:	push   edi
  4072db:	jle    0x407273
  4072dd:	shl    BYTE PTR [ecx*1-0x1a315099],cl
  4072e4:	mov    al,ds:0x97583afb
  4072e9:	rol    esi,1
  4072eb:	jg     0x40732d
  4072ed:	inc    eax
  4072ee:	add    edx,esi
  4072f0:	jmp    0xd18c:0x7c3ec072
  4072f7:	retf   
  4072f8:	jae    0x407294
  4072fa:	or     al,0xdd
  4072fc:	imul   ebx,DWORD PTR [eax+eax*2-0x2b794eca],0x75
  407304:	lock sub eax,0x9303cada
  40730a:	cmp    bl,ch
  40730c:	xlat   BYTE PTR ds:[ebx]
  40730d:	cmc    
  40730e:	call   0x349f:0xf2ef0060
  407315:	cwde   
  407316:	push   esi
  407317:	mov    al,ds:0x8e97f17c
  40731c:	jb     0x40733b
  40731e:	xlat   BYTE PTR ds:[ebx]
  40731f:	xchg   BYTE PTR [edi],ah
  407321:	mov    bl,0x20
  407323:	or     dh,BYTE PTR [eax+0x444728a3]
  407329:	mov    dh,dh
  40732b:	jle    0x4072f2
  40732d:	pop    eax
  40732e:	inc    esp
  40732f:	rcl    BYTE PTR [ecx+0x6c],0x47
  407333:	mov    esp,0x9bbeea27
  407338:	sbb    edx,DWORD PTR [esi-0x3c]
  40733b:	mov    esp,ecx
  40733d:	xchg   BYTE PTR [ebx+0x6795023a],dh
  407343:	das    
  407344:	fld    st(5)
  407346:	(bad)  
  407347:	push   esi
  407348:	cs ret 
  40734a:	leave  
  40734b:	test   edi,esp
  40734d:	push   ss
  40734e:	or     ebx,ecx
  407350:	pop    es
  407351:	inc    edx
  407352:	sar    dl,cl
  407354:	add    BYTE PTR [edi-0x3f],bh
  407357:	mov    al,ds:0x47a01c45
  40735c:	in     eax,0xf5
  40735e:	xchg   DWORD PTR [ecx+eiz*4-0x6f186f0d],esi
  407365:	ret    
  407366:	fisub  WORD PTR [edi+0x74]
  407369:	mov    ebp,0xc653498f
  40736e:	adc    bl,BYTE PTR [eax]
  407370:	mov    bl,0xe9
  407372:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407373:	call   0x9d5868d5
  407378:	jo     0x407390
  40737a:	xchg   esi,eax
  40737b:	jns    0x407376
  40737d:	into   
  40737e:	xchg   esi,eax
  40737f:	add    al,0xb
  407381:	or     DWORD PTR [ecx+0x1a79c736],ecx
  407387:	xor    edx,DWORD PTR [ebp-0x67]
  40738a:	and    esp,DWORD PTR [eax+0x3f]
  40738d:	mov    ds:0x9faf333f,eax
  407392:	push   es
  407393:	mov    WORD PTR [edi-0x2d],fs
  407396:	sub    BYTE PTR [edi-0x7b21b360],ah
  40739c:	call   0x9f8f:0x8e9b4402
  4073a3:	imul   ebx,ebx,0xd838d2d4
  4073a9:	sub    ebx,ecx
  4073ab:	lods   eax,DWORD PTR ds:[esi]
  4073ac:	es jp  0x407338
  4073af:	sbb    BYTE PTR [ecx+0x5bf14bbe],0x16
  4073b6:	mov    esp,0x1b559106
  4073bb:	popf   
  4073bc:	int3   
  4073bd:	adc    eax,0xa3abfb0e
  4073c2:	dec    esi
  4073c3:	mov    ecx,0xfd8b7db4
  4073c8:	adc    ah,bh
  4073ca:	xchg   ebp,eax
  4073cb:	(bad)  
  4073cd:	jb     0x407440
  4073cf:	xor    cl,bh
  4073d1:	inc    edi
  4073d2:	push   esi
  4073d3:	dec    ebp
  4073d4:	or     eax,0x703fde9b
  4073d9:	pushf  
  4073da:	xchg   esp,eax
  4073db:	sbb    BYTE PTR [esi-0x54e2b193],ah
  4073e1:	stc    
  4073e2:	test   BYTE PTR [eax+ebx*8-0x4e],bh
  4073e6:	sbb    ebp,edi
  4073e8:	or     eax,0x356ea053
  4073ed:	aaa    
  4073ee:	in     al,0x47
  4073f0:	and    esi,edi
  4073f2:	add    eax,0xe9f57863
  4073f7:	lods   al,BYTE PTR ds:[esi]
  4073f8:	pop    eax
  4073f9:	das    
  4073fa:	xor    cl,BYTE PTR [ebx-0x43604f3f]
  407400:	lahf   
  407401:	in     eax,0xd6
  407403:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407404:	inc    ebx
  407405:	jecxz  0x4073ea
  407407:	xchg   esi,eax
  407408:	sub    BYTE PTR [eax+0x587a5745],bh
  40740e:	popa   
  40740f:	xchg   BYTE PTR [edi+0x7350f5f],cl
  407415:	mov    edi,0x5a1e2607
  40741a:	pop    edx
  40741b:	sbb    DWORD PTR [eiz*2+0x760712d0],esi
  407422:	push   ebx
  407423:	jecxz  0x4073dc
  407425:	pusha  
  407426:	neg    DWORD PTR [esi+0x1b]
  407429:	dec    esi
  40742a:	push   edi
  40742b:	xor    al,0x1c
  40742d:	add    al,0xe7
  40742f:	outs   dx,BYTE PTR ds:[esi]
  407430:	mov    DWORD PTR [ecx+0x3f581c5],edi
  407436:	pop    ss
  407437:	stos   DWORD PTR es:[edi],eax
  407438:	leave  
  407439:	lods   al,BYTE PTR ds:[esi]
  40743a:	aad    0x5c
  40743c:	out    dx,al
  40743d:	mov    bl,0x1c
  40743f:	stos   DWORD PTR es:[edi],eax
  407440:	cmp    BYTE PTR [esi+0x1829d6cb],bl
  407446:	jne    0x407436
  407448:	dec    esp
  407449:	mov    edx,es
  40744b:	mov    ebx,0x76fd0910
  407450:	add    DWORD PTR [eax+0xd2d3b4b],edi
  407456:	(bad)  
  407457:	(bad)  [edi-0x32bbf7ea]
  40745d:	xchg   esp,eax
  40745e:	ret    0x9763
  407461:	ret    0x2f9a
  407464:	dec    ebp
  407465:	test   al,0xbe
  407467:	cmp    al,0x43
  407469:	gs aaa 
  40746b:	xchg   ebx,eax
  40746c:	mov    edi,0xa231913c
  407471:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407472:	rcl    edi,0x52
  407475:	loopne 0x4073fa
  407477:	jle    0x4074b4
  407479:	loopne 0x407479
  40747b:	pusha  
  40747c:	cs stc 
  40747e:	jmp    0x40741c
  407480:	data16 aam 0x35
  407483:	adc    al,BYTE PTR [edi+edx*1+0x35c15ffc]
  40748a:	inc    esi
  40748b:	out    0xa7,al
  40748d:	add    eax,0xbe20ac8d
  407492:	aas    
  407493:	in     al,0xcf
  407495:	push   ecx
  407496:	and    al,0x62
  407498:	ret    0x263
  40749b:	test   DWORD PTR [edx+0x44169f09],ecx
  4074a1:	mov    dl,0xba
  4074a3:	sahf   
  4074a4:	lds    eax,FWORD PTR [ecx-0x7a]
  4074a7:	nop
  4074a8:	mov    ah,0xed
  4074aa:	rcl    BYTE PTR ds:0xfb805aff,cl
  4074b0:	setp   BYTE PTR ds:0x5863401f
  4074b7:	pusha  
  4074b8:	mov    dh,0x18
  4074ba:	and    DWORD PTR [edx],edi
  4074bc:	jmp    0x7ee6d33a
  4074c1:	and    al,0xb
  4074c3:	push   eax
  4074c4:	jp     0x407455
  4074c6:	(bad)  
  4074c7:	test   al,0xce
  4074c9:	pop    es
  4074ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074cb:	mov    es,WORD PTR [edx]
  4074cd:	adc    DWORD PTR [ebp+0x4cb09be0],esi
  4074d3:	or     esi,DWORD PTR [edi+0x75618ad2]
  4074d9:	xchg   BYTE PTR [edx+0x4ff8dfca],dh
  4074df:	mov    gs,WORD PTR [ebx+0x7c]
  4074e2:	cmp    DWORD PTR [edx-0x9],edi
  4074e5:	dec    edx
  4074e6:	fild   QWORD PTR [eax+0x4669a1ee]
  4074ec:	mov    esi,0x3dbea00f
  4074f1:	sbb    eax,0xbe6338c1
  4074f6:	outs   dx,BYTE PTR ds:[esi]
  4074f7:	sbb    BYTE PTR [esi+0x4e648787],al
  4074fd:	dec    ecx
  4074fe:	aam    0xef
  407500:	lahf   
  407501:	cmp    ch,BYTE PTR [esi-0x572aade5]
  407507:	cld    
  407508:	push   ecx
  407509:	sbb    BYTE PTR [ebp-0x3f],al
  40750c:	jne    0x4074a0
  40750e:	cli    
  40750f:	sub    eax,DWORD PTR [ebx-0x296210cf]
  407515:	mov    dh,0x2d
  407517:	inc    ebp
  407518:	inc    esp
  407519:	inc    ecx
  40751a:	lods   al,BYTE PTR ds:[esi]
  40751b:	imul   esi,DWORD PTR [eax],0x88e22a75
  407521:	daa    
  407522:	loope  0x4074d4
  407524:	or     DWORD PTR [edi-0x58],0x2a
  407528:	aaa    
  407529:	jl     0x407530
  40752b:	cmc    
  40752c:	fstp   QWORD PTR [edi]
  40752e:	dec    ebp
  40752f:	test   DWORD PTR [ebp-0x39],edx
  407532:	and    BYTE PTR ds:0xcf01403,bh
  407538:	inc    edi
  407539:	pop    ebx
  40753a:	lods   eax,DWORD PTR ds:[esi]
  40753b:	pusha  
  40753c:	jg     0x407513
  40753e:	cmp    eax,0x638e5350
  407543:	adc    DWORD PTR [edx+esi*8+0x32083bba],edi
  40754a:	jmp    0x2a9a:0x9a17f813
  407551:	sub    eax,0x96cba205
  407556:	adc    DWORD PTR [edx+0x68],esi
  407559:	jge    0x407541
  40755b:	mov    eax,0x62b2ff18
  407560:	fsubr  st,st(4)
  407562:	shl    DWORD PTR [ebx+ecx*1],1
  407565:	pop    edx
  407566:	sub    ebp,ecx
  407568:	jne    0x407568
  40756a:	mov    al,bl
  40756c:	or     DWORD PTR [esi+ebx*1],edx
  40756f:	mul    DWORD PTR [esi]
  407571:	xchg   DWORD PTR [ebx-0x260bba4a],eax
  407577:	fs add eax,0xc45e4d3a
  40757d:	ret    0xd9a7
  407580:	je     0x407598
  407582:	out    dx,al
  407583:	or     BYTE PTR [edi-0x76c93ea],dl
  407589:	adc    bh,0xa5
  40758c:	push   0x3e670591
  407591:	mov    BYTE PTR [ebx],al
  407593:	lods   eax,DWORD PTR ds:[esi]
  407594:	cmp    al,0x44
  407596:	les    ebp,FWORD PTR [ebx]
  407598:	lock push ecx
  40759a:	stos   DWORD PTR es:[edi],eax
  40759b:	jmp    0x7ec5:0x3cf2f9b5
  4075a2:	fiadd  DWORD PTR gs:[edi-0x56595413]
  4075a9:	dec    esp
  4075aa:	nop
  4075ab:	ret    0x898b
  4075ae:	adc    al,0xa1
  4075b0:	cmp    BYTE PTR [esp+edx*1-0x67],dl
  4075b4:	dec    esi
  4075b5:	jb     0x407623
  4075b7:	rcl    DWORD PTR [ecx],1
  4075b9:	pop    ebx
  4075ba:	mov    bl,BYTE PTR [edx-0x55dcc937]
  4075c0:	fstp   st(7)
  4075c2:	nop
  4075c3:	jb     0x407561
  4075c5:	xor    dl,BYTE PTR [ebx+0x3e7aeae]
  4075cb:	push   esp
  4075cc:	push   ebx
  4075cd:	into   
  4075ce:	mov    DWORD PTR [esi-0x391efb83],eax
  4075d4:	ds je  0x4075a9
  4075d7:	stos   BYTE PTR es:[edi],al
  4075d8:	mov    al,ds:0x38480ec
  4075dd:	loope  0x40764e
  4075df:	jb     0x4075d8
  4075e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075e2:	mov    ebp,0x17112ef7
  4075e7:	out    0xe7,eax
  4075e9:	(bad)  
  4075ea:	mov    ebp,DWORD PTR [eax-0x39e1a54a]
  4075f0:	cs jmp 0x36d3:0xcc9ed2d
  4075f8:	mov    bh,0xff
  4075fa:	and    eax,DWORD PTR [ebp+0x349525b1]
  407600:	lods   eax,DWORD PTR ds:[esi]
  407601:	mov    BYTE PTR [edx],ch
  407603:	sub    DWORD PTR [ecx-0x67],ebp
  407606:	shl    DWORD PTR [ebx-0x1b],1
  407609:	sti    
  40760a:	adc    BYTE PTR [edi+0x5c],dl
  40760d:	mov    BYTE PTR [eax+0x11],dl
  407610:	xchg   BYTE PTR [ebp+0x7f],bl
  407613:	dec    edx
  407614:	in     al,dx
  407615:	std    
  407616:	(bad)  
  407617:	ins    DWORD PTR es:[edi],dx
  407618:	cmp    eax,ecx
  40761a:	fdivr  QWORD PTR [edx]
  40761c:	adc    BYTE PTR [ecx+eax*4+0x3d],dl
  407620:	jg     0x407662
  407622:	and    BYTE PTR [edx+0x1e8c678c],0x60
  407629:	int    0xa4
  40762b:	cmp    eax,0x77d405a1
  407630:	sub    ebx,edx
  407632:	mov    dh,0x2a
  407634:	ds jmp 0xa03d:0xa821acdd
  40763c:	pop    ebp
  40763d:	mov    ah,0xeb
  40763f:	call   0x864d:0x265180b3
  407646:	pop    esi
  407647:	jns    0x40769d
  407649:	jns    0x40762f
  40764b:	in     eax,0x91
  40764d:	(bad)  
  40764e:	ficom  DWORD PTR [ebx+0xcc75269]
  407654:	or     edi,DWORD PTR ds:0xa22981d1
  40765a:	and    eax,0xabef818e
  40765f:	dec    edi
  407660:	pop    esp
  407661:	push   edx
  407662:	mov    edi,0x810c522d
  407667:	aad    0x65
  407669:	gs inc ebp
  40766b:	nop
  40766c:	stc    
  40766d:	push   ecx
  40766e:	xor    eax,0x428dd345
  407673:	ficom  DWORD PTR [edi-0xa0929cb]
  407679:	jae    0x40769e
  40767b:	fsub   QWORD PTR [esp+esi*1-0x25]
  40767f:	inc    edx
  407680:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407681:	jbe    0x4076c4
  407683:	dec    ebx
  407684:	lods   al,BYTE PTR ds:[esi]
  407685:	sbb    eax,0x1722f68d
  40768a:	xor    al,0x87
  40768c:	in     al,0xde
  40768e:	pushf  
  40768f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407690:	js     0x407649
  407692:	jno    0x40765d
  407694:	cli    
  407695:	(bad)  
  407696:	cmp    BYTE PTR [eax-0x6e],ah
  407699:	mov    ecx,0x3aa828da
  40769e:	cmp    BYTE PTR ds:[edx],cl
  4076a1:	sbb    esi,eax
  4076a3:	add    al,0xdb
  4076a5:	xor    BYTE PTR [edx+0x3d],bh
  4076a8:	push   edx
  4076a9:	lea    edx,[edx+0x5f]
  4076ac:	sub    al,0xd8
  4076ae:	cmp    DWORD PTR [eax-0x34],edi
  4076b1:	aad    0x21
  4076b3:	sbb    bh,bh
  4076b5:	sub    dl,BYTE PTR [ebx+ebp*4-0x3d]
  4076b9:	jmp    0x40770f
  4076bb:	mov    al,ds:0x6546def7
  4076c0:	inc    edx
  4076c1:	push   cs
  4076c2:	inc    edi
  4076c3:	xor    BYTE PTR [ecx-0x50],ah
  4076c6:	loopne 0x40773c
  4076c8:	fwait
  4076c9:	in     eax,dx
  4076ca:	jno    0x4076b9
  4076cc:	lods   al,BYTE PTR ds:[esi]
  4076cd:	rol    DWORD PTR [ecx+eax*1],1
  4076d0:	loop   0x40770f
  4076d2:	shl    DWORD PTR [eax-0x125d4bcc],0x67
  4076d9:	mov    esi,DWORD PTR [ebx]
  4076db:	mov    ebx,DWORD PTR [eax+0x23]
  4076de:	in     al,dx
  4076df:	out    dx,eax
  4076e0:	mov    ebx,0xf96eb13b
  4076e5:	adc    DWORD PTR [edx+0x1f],eax
  4076e8:	add    al,0xc7
  4076ea:	lea    ebx,ds:0x63eb67d1
  4076f0:	jle    0x4076cc
  4076f2:	sahf   
  4076f3:	sub    edx,DWORD PTR [edx]
  4076f5:	adc    BYTE PTR [ecx+0x7a1a55d6],ah
  4076fb:	add    al,0xe5
  4076fd:	mov    dh,0xa9
  4076ff:	jge    0x407683
  407701:	xor    ah,BYTE PTR [edx-0x20f6517d]
  407707:	push   cs
  407708:	mov    BYTE PTR [ebp+ecx*2+0x1f],cl
  40770c:	shl    DWORD PTR [edi+0x7e],1
  40770f:	pop    es
  407710:	jp     0x4076bc
  407712:	push   eax
  407713:	sar    DWORD PTR [ebx-0x73c407c],cl
  407719:	test   eax,0xca567603
  40771e:	sub    ch,dh
  407720:	add    dh,BYTE PTR [eax-0x5b]
  407723:	pusha  
  407724:	fcmovnb st,st(6)
  407726:	push   ecx
  407727:	mov    edx,0xef4d66d0
  40772c:	pop    DWORD PTR [edx+0x28]
  40772f:	js     0x4076be
  407731:	xchg   ecx,eax
  407732:	(bad)  
  407733:	xchg   edx,eax
  407734:	or     esi,ecx
  407736:	enter  0x1ca1,0x33
  40773a:	stos   DWORD PTR es:[edi],eax
  40773b:	inc    ecx
  40773c:	and    BYTE PTR [esi],bl
  40773e:	loope  0x4076de
  407740:	sub    esp,DWORD PTR [ecx-0x5a06d360]
  407746:	push   0x3e
  407748:	jnp    0x4076e6
  40774a:	pop    ecx
  40774b:	xchg   DWORD PTR [edi],ebp
  40774d:	push   eax
  40774e:	fcmovbe st,st(3)
  407750:	in     al,dx
  407751:	and    BYTE PTR [ebx-0x2a],0x4b
  407755:	pop    esp
  407757:	repz mov esi,0xc1b330f6
  40775d:	nop
  40775e:	mov    ebp,0xdcc9715c
  407763:	mov    esp,0xd262421c
  407768:	adc    ebx,DWORD PTR [ecx-0x3b0f6307]
  40776e:	sub    al,0x33
  407770:	ds dec edi
  407772:	push   edx
  407773:	pusha  
  407774:	jnp    0x407741
  407776:	sar    DWORD PTR [esi+0x22],0xec
  40777a:	mov    ebp,0xaf739f23
  40777f:	or     BYTE PTR [ecx-0x780e559f],ch
  407785:	dec    ecx
  407786:	(bad)  
  407788:	addr16 rcl eax,0x76
  40778c:	mov    dl,0x14
  40778e:	mov    ?,ebx
  407790:	nop
  407791:	out    0x92,eax
  407793:	xchg   ebx,eax
  407794:	fwait
  407795:	ds je  0x40777a
  407798:	div    DWORD PTR ss:[esi-0x556021e8]
  40779f:	add    esp,DWORD PTR [eax+0x341ba787]
  4077a5:	in     eax,0xaf
  4077a7:	mov    DWORD PTR [ecx-0x53ddb986],ecx
  4077ad:	rcl    BYTE PTR [ebx+0x35],0x8d
  4077b1:	(bad)  
  4077b2:	popa   
  4077b3:	in     eax,0xbc
  4077b5:	gs mov esi,0x6e53097d
  4077bb:	xchg   edi,eax
  4077bc:	add    BYTE PTR [eax+0x5b420dc2],dl
  4077c2:	out    dx,eax
  4077c3:	jle    0x407769
  4077c5:	bound  ebp,QWORD PTR [edi+esi*2-0x71def00c]
  4077cc:	jmp    0x45ca2782
  4077d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077d2:	stos   BYTE PTR es:[edi],al
  4077d3:	push   0xaeedafcf
  4077d8:	fwait
  4077d9:	js     0x407828
  4077db:	rcl    BYTE PTR [ecx],0x50
  4077de:	push   ds
  4077df:	lock sbb eax,0xafc04977
  4077e5:	and    BYTE PTR [edx-0x1f922128],al
  4077eb:	push   edi
  4077ec:	daa    
  4077ed:	scas   al,BYTE PTR es:[edi]
  4077ee:	imul   edx,DWORD PTR [ecx],0xfffffffc
  4077f1:	outs   dx,BYTE PTR ds:[esi]
  4077f2:	xchg   esi,eax
  4077f3:	in     al,dx
  4077f4:	xor    esi,DWORD PTR [edx]
  4077f6:	jmp    0x4b30:0x9fd34b47
  4077fd:	(bad)  
  4077fe:	fwait
  4077ff:	es jmp 0x99523be
  407805:	xchg   bh,dl
  407807:	(bad)  
  407808:	cli    
  407809:	popa   
  40780a:	fild   DWORD PTR fs:[esi-0x54]
  40780e:	aaa    
  40780f:	in     eax,0xab
  407811:	outs   dx,DWORD PTR ds:[esi]
  407812:	pop    esp
  407813:	mov    al,0x94
  407815:	dec    eax
  407816:	icebp  
  407817:	or     ebx,DWORD PTR [edi+0x32102717]
  40781d:	jle    0x4077f7
  40781f:	rcr    cl,cl
  407821:	rcl    BYTE PTR [ecx-0x15],1
  407824:	jge    0x4077e5
  407826:	jp     0x40784c
  407828:	loope  0x407854
  40782a:	and    DWORD PTR [ebp-0x3f79b6e1],eax
  407830:	adc    BYTE PTR [ecx-0x6727e9ed],bl
  407836:	sti    
  407837:	pop    eax
  407838:	push   eax
  407839:	sbb    al,0x5f
  40783b:	adc    DWORD PTR ds:0x6ad67e3e,ecx
  407841:	push   eax
  407842:	or     DWORD PTR [ecx+ebx*1],ebx
  407845:	cld    
  407846:	sub    BYTE PTR [esi+0x39],bl
  407849:	add    BYTE PTR [ebp+0x4d05acba],ah
  40784f:	add    ecx,0xffffffde
  407852:	imul   edi,DWORD PTR [edx-0x24],0xc3d6155a
  407859:	jns    0x4078d1
  40785b:	mov    ah,0x50
  40785d:	xor    eax,0xafaaa771
  407862:	jne    0x4078c9
  407864:	inc    esi
  407865:	in     al,0x1e
  407867:	jmp    0x8f62:0x2273b89c
  40786e:	jge    0x4078ee
  407870:	sbb    eax,0x619bf42f
  407875:	imul   DWORD PTR [edi]
  407877:	scas   eax,DWORD PTR es:[edi]
  407878:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407879:	fwait
  40787a:	lea    esi,[esp+eiz*8-0x2483dec7]
  407881:	add    BYTE PTR [esi+0x27],cl
  407884:	aad    0xb
  407886:	(bad)  
  407887:	out    dx,eax
  407888:	out    dx,al
  407889:	xchg   esp,eax
  40788a:	test   al,0xd8
  40788c:	fucomip st,st(2)
  40788e:	inc    esp
  40788f:	outs   dx,BYTE PTR ds:[esi]
  407890:	popf   
  407891:	shr    BYTE PTR [eax],1
  407893:	xchg   esi,eax
  407894:	mov    al,0xf9
  407896:	pop    es
  407897:	das    
  407898:	repnz ror BYTE PTR [ebp+0x4fb22d80],cl
  40789f:	call   0x7f6f01e3
  4078a4:	(bad)  
  4078a5:	mov    bh,0x23
  4078a7:	fwait
  4078a8:	in     eax,0xd5
  4078aa:	and    eax,0x722e5a0b
  4078af:	loop   0x407890
  4078b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078b2:	push   ebx
  4078b3:	push   edx
  4078b4:	clc    
  4078b5:	mov    ds:0xe1c60dc7,al
  4078ba:	fwait
  4078bb:	adc    BYTE PTR [eax+0x2cd32889],bl
  4078c1:	stos   DWORD PTR es:[edi],eax
  4078c2:	test   BYTE PTR [edi+ebp*8],0xc6
  4078c6:	imul   edi,DWORD PTR [edi+0x75],0x2b77e378
  4078cd:	ss js  0x4078c2
  4078d0:	pop    eax
  4078d1:	aad    0x1a
  4078d3:	adc    eax,0x31d25957
  4078d8:	out    0x54,eax
  4078da:	jb     0x4078fa
  4078dc:	test   DWORD PTR [ecx-0x18],ebx
  4078df:	out    dx,eax
  4078e0:	arpl   bp,sp
  4078e2:	adc    BYTE PTR [edx+0x58],dl
  4078e5:	mov    dh,0xf5
  4078e7:	fist   WORD PTR [eiz*4+0x1005cb62]
  4078ee:	ss fs adc eax,0xc329e2ff
  4078f5:	and    ebx,ecx
  4078f7:	icebp  
  4078f8:	lock push eax
  4078fa:	pop    ds
  4078fb:	daa    
  4078fc:	lods   eax,DWORD PTR gs:[esi]
  4078fe:	(bad)  
  407900:	arpl   ax,di
  407902:	aas    
  407903:	shl    BYTE PTR [edx],1
  407905:	push   0x2fa77521
  40790a:	mov    ss,WORD PTR [ebp-0x7e]
  40790d:	mov    esi,0xa803e194
  407912:	xlat   BYTE PTR ds:[ebx]
  407913:	repnz mov ds:0xfd60e671,al
  407919:	xchg   esi,eax
  40791a:	fwait
  40791b:	jnp    0x407934
  40791d:	leave  
  40791e:	pop    edx
  40791f:	inc    esi
  407920:	and    eax,0xcb0f73d9
  407925:	xchg   esi,eax
  407926:	jp     0x4078e4
  407928:	lds    ecx,FWORD PTR [edx+edx*4-0x4f]
  40792c:	mov    DWORD PTR [esi-0x62811110],esp
  407932:	pusha  
  407933:	ins    DWORD PTR es:[edi],dx
  407934:	test   eax,0x3940be2d
  407939:	imul   eax,DWORD PTR [edx-0x22],0xffffff8a
  40793d:	add    DWORD PTR [ebp*4+0x1c303d49],eax
  407944:	or     BYTE PTR [eax+0x17974cf5],0x78
  40794b:	lea    esp,[esi+0x71cbdd3b]
  407951:	dec    ecx
  407952:	mov    ch,0x56
  407954:	aas    
  407955:	jo     0x4078f5
  407957:	or     al,0x7c
  407959:	dec    edi
  40795a:	push   es
  40795b:	mov    esp,0x54f898d9
  407960:	popf   
  407961:	xchg   DWORD PTR [ecx],ebp
  407963:	stos   DWORD PTR es:[edi],eax
  407964:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407965:	push   ecx
  407966:	sub    BYTE PTR [esi-0x20],0xc0
  40796a:	mov    ds:0xde3af3b9,eax
  40796f:	dec    ebp
  407970:	xchg   edx,eax
  407971:	popf   
  407972:	std    
  407973:	push   esi
  407974:	popf   
  407975:	stos   DWORD PTR es:[edi],eax
  407976:	xor    eax,0x6588d322
  40797b:	iret   
  40797c:	outs   dx,DWORD PTR ds:[esi]
  40797d:	or     DWORD PTR [ecx-0x22799361],eax
  407983:	push   es
  407984:	stc    
  407985:	fld    QWORD PTR [ebx+esi*4-0x3221212c]
  40798c:	aaa    
  40798d:	fmul   QWORD PTR [ebx+0x45]
  407990:	daa    
  407991:	mul    DWORD PTR cs:[edx+ebp*4+0x5c]
  407996:	xor    al,0xaa
  407998:	outs   dx,BYTE PTR ds:[esi]
  407999:	sub    BYTE PTR [eax+0x5fd64129],ch
  40799f:	and    al,0xbc
  4079a1:	fdiv   DWORD PTR [edx]
  4079a3:	out    0xf2,eax
  4079a5:	pop    ss
  4079a6:	adc    bh,BYTE PTR [esi+0xb730cca]
  4079ac:	in     al,0x2a
  4079ae:	imul   esi,DWORD PTR [edi-0x1a],0x7db1f216
  4079b5:	push   esp
  4079b6:	mov    dh,0xb
  4079b8:	push   ss
  4079b9:	loop   0x407a32
  4079bb:	pop    ecx
  4079bc:	mov    dl,ah
  4079be:	push   cs
  4079bf:	ret    0x45dc
  4079c2:	cmp    BYTE PTR [edi],ch
  4079c4:	xor    ecx,DWORD PTR [ecx-0x18]
  4079c7:	(bad)  
  4079c8:	outs   dx,BYTE PTR ds:[esi]
  4079c9:	mov    esi,0xd5371c8
  4079ce:	push   ebx
  4079cf:	sbb    al,0x90
  4079d1:	or     eax,0xe60c632d
  4079d6:	aad    0xbc
  4079d8:	mov    al,ds:0x7b3bc4f8
  4079dd:	sub    BYTE PTR [ecx+ebp*1-0x57],dl
  4079e1:	pop    edi
  4079e2:	add    esi,eax
  4079e4:	ret    0x9d70
  4079e7:	jne    0x407a0a
  4079e9:	pop    edi
  4079ea:	cs out dx,eax
  4079ec:	jnp    0x407a3f
  4079ee:	outs   dx,DWORD PTR ds:[esi]
  4079ef:	imul   esp,DWORD PTR [eax],0x4a
  4079f2:	loopne 0x4079a2
  4079f4:	xchg   ecx,eax
  4079f5:	push   esi
  4079f6:	cmp    eax,edx
  4079f8:	in     eax,dx
  4079f9:	popf   
  4079fa:	shr    DWORD PTR [ebx-0x1b],0x8b
  4079fe:	add    al,0xa0
  407a00:	iret   
  407a01:	fistp  QWORD PTR [edx+esi*8+0x2c638e98]
  407a08:	dec    esp
  407a09:	fwait
  407a0a:	imul   esp,esp,0x212f6a7c
  407a10:	xchg   ebp,eax
  407a11:	dec    ecx
  407a12:	mov    al,ds:0x6c76056a
  407a17:	daa    
  407a18:	daa    
  407a19:	ins    BYTE PTR es:[edi],dx
  407a1a:	jl     0x4079a1
  407a1c:	mov    esi,0x4b1550c7
  407a21:	mov    ch,0x2b
  407a23:	and    ch,dl
  407a25:	mov    ds:0x1b5deaeb,al
  407a2a:	pusha  
  407a2b:	les    esi,FWORD PTR [ebx+esi*2+0x4b]
  407a2f:	stc    
  407a30:	xchg   DWORD PTR [edi-0x6],esp
  407a33:	sub    BYTE PTR [esi],bl
  407a35:	fcom   DWORD PTR [ecx+ebp*4]
  407a38:	(bad)  
  407a39:	ja     0x407a41
  407a3b:	ds in  al,dx
  407a3d:	inc    eax
  407a3e:	push   es
  407a3f:	imul   ecx,ebp,0x2a1e80c1
  407a45:	mov    ecx,DWORD PTR [ebp-0x4]
  407a48:	mov    edx,DWORD PTR [ebp-0x30]
  407a4b:	xor    ecx,ebx
  407a4d:	add    ecx,eax
  407a4f:	cmp    edx,ecx
  407a51:	je     0x407abe
  407a57:	lea    eax,[ebp-0x8]
  407a5a:	push   eax
  407a5b:	push   DWORD PTR [ebp-0x28]
  407a5e:	push   DWORD PTR [ebp+0xc]
  407a61:	call   0x40f238
  407a66:	mov    eax,0x3272dd
  407a6b:	mov    ecx,DWORD PTR [ebp-0x4]
  407a6e:	mov    edx,DWORD PTR [ebp-0x8]
  407a71:	xor    ecx,ebx
  407a73:	add    ecx,eax
  407a75:	cmp    edx,ecx
  407a77:	je     0x407a92
  407a7d:	mov    ecx,DWORD PTR [ebp-0x34]
  407a80:	movzx  ecx,WORD PTR [ecx+esi*2]
  407a84:	mov    edx,DWORD PTR [ebp-0x18]
  407a87:	mov    ecx,DWORD PTR [edx+ecx*4]
  407a8a:	mov    DWORD PTR [ebp-0x38],ecx
  407a8d:	jmp    0x4056db
  407a92:	mov    ecx,DWORD PTR [ebp-0x14]
  407a95:	xor    ecx,ebx
  407a97:	lea    esi,[esi+ecx*1+0x3272dd]
  407a9e:	jmp    0x40540c
  407aa3:	mov    eax,DWORD PTR [ebp-0x4]
  407aa6:	xor    eax,ebx
  407aa8:	add    eax,edi
  407aaa:	jmp    0x409f7a
  407aaf:	mov    eax,DWORD PTR [ebp-0x4]
  407ab2:	xor    eax,ebx
  407ab4:	add    eax,0x3272dd
  407ab9:	jmp    0x409f7a
  407abe:	mov    ecx,DWORD PTR [ebp-0x38]
  407ac1:	add    ecx,DWORD PTR [ebp+0x8]
  407ac4:	mov    DWORD PTR [ebp-0x10],ecx
  407ac7:	mov    ecx,DWORD PTR [ebp-0x1c]
  407aca:	test   ecx,ecx
  407acc:	je     0x409f05
  407ad2:	mov    DWORD PTR [ebp-0x20],0x0
  407ad9:	push   0x3
  407adb:	xor    edx,edx
  407add:	pop    edx
  407ade:	add    edx,0x8
  407ae1:	push   edx
  407ae2:	pop    ecx
  407ae3:	push   0x6
  407ae5:	dec    ecx
  407ae6:	pop    ebx
  407ae7:	dec    ebx
  407ae8:	xchg   ebx,ecx
  407aea:	sub    ebx,ecx
  407aec:	xchg   ebx,ecx
  407aee:	dec    ecx
  407aef:	mov    eax,DWORD PTR [ebp-0x1c]
  407af2:	imul   eax,ecx
  407af5:	sub    esp,eax
  407af7:	mov    DWORD PTR [ebp-0x20],esp
  407afa:	mov    eax,DWORD PTR [ebp-0x4]
  407afd:	mov    ecx,0x7510896
  407b02:	xor    eax,ecx
  407b04:	mov    edx,0x3272dd
  407b09:	add    eax,edx
  407b0b:	mov    DWORD PTR [ebp+0x8],eax
  407b0e:	mov    eax,DWORD PTR [ebp-0x14]
  407b11:	xor    eax,ecx
  407b13:	add    eax,edx
  407b15:	mov    edx,DWORD PTR [ebp+0x14]
  407b18:	jmp    0x409e70
  407b1d:	push   es
  407b1e:	or     DWORD PTR [esi],ebx
  407b20:	xchg   DWORD PTR [ecx],eax
  407b22:	xchg   DWORD PTR [ebx+0x7caff18b],ecx
  407b28:	xor    eax,0x1e9c923d
  407b2d:	nop
  407b2e:	and    BYTE PTR [edx+0x7a],bh
  407b31:	aaa    
  407b32:	pop    edi
  407b33:	jp     0x407baf
  407b35:	out    dx,eax
  407b36:	mov    al,ds:0xafee6d58
  407b3b:	and    DWORD PTR [edi-0x70],edx
  407b3e:	imul   edx,esi,0xffffff9b
  407b41:	pusha  
  407b42:	dec    esi
  407b43:	adc    al,BYTE PTR [edx]
  407b45:	addr16 push ss
  407b47:	inc    eax
  407b48:	dec    eax
  407b49:	xchg   esi,eax
  407b4a:	sub    dl,0x1d
  407b4d:	fist   DWORD PTR [edi+0x18]
  407b50:	jb     0x407ad9
  407b52:	cmp    BYTE PTR [ecx+0x2d],ah
  407b55:	mov    WORD PTR [ebx],cs
  407b57:	mov    edi,DWORD PTR [edx]
  407b59:	xchg   ebx,eax
  407b5a:	arpl   WORD PTR [esi],si
  407b5c:	fbstp  TBYTE PTR [eax+0x3f]
  407b5f:	pop    ebp
  407b60:	dec    ebp
  407b61:	mov    edi,0x965a1c0a
  407b66:	ss (bad) 
  407b68:	or     bl,BYTE PTR [esi+0x6533a2]
  407b6e:	div    DWORD PTR [eax+0x6a]
  407b71:	push   0xffffffe3
  407b73:	mov    edi,0xe3173da4
  407b78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b79:	xchg   ebx,eax
  407b7a:	mov    ebp,0x621225ff
  407b7f:	mul    BYTE PTR [ecx+eiz*2-0x80]
  407b83:	xor    eax,0x2d083361
  407b88:	cdq    
  407b89:	sbb    DWORD PTR [ebx],ebx
  407b8b:	std    
  407b8c:	ins    DWORD PTR es:[edi],dx
  407b8d:	sub    eax,0x94245cde
  407b92:	xor    ch,BYTE PTR [eax+ebp*4]
  407b95:	cmp    eax,0xc62b408d
  407b9a:	push   DWORD PTR [edi]
  407b9c:	jle    0x407b86
  407b9e:	fwait
  407b9f:	mov    dl,ah
  407ba1:	and    ch,BYTE PTR [ebp+eiz*8-0x4da2eb46]
  407ba8:	cmp    eax,0x31cb51a1
  407bad:	dec    ebp
  407bae:	test   edi,esi
  407bb0:	leave  
  407bb1:	test   eax,0xdbb31aeb
  407bb6:	pop    esi
  407bb7:	in     eax,dx
  407bb8:	out    dx,eax
  407bb9:	dec    ebx
  407bba:	or     ah,BYTE PTR [ebp+0x29739e1]
  407bc0:	into   
  407bc1:	dec    esp
  407bc2:	fdiv   DWORD PTR [edx-0x51783644]
  407bc8:	int    0xf9
  407bca:	addr16 xchg esi,ebx
  407bcd:	push   cs
  407bce:	and    bh,BYTE PTR [ebx+0x75]
  407bd1:	mov    DWORD PTR [edi],ebp
  407bd3:	mov    ds:0x979c6946,al
  407bd8:	ins    DWORD PTR es:[edi],dx
  407bd9:	mov    ds:0x25b62cb2,eax
  407bde:	(bad)  
  407be0:	divps  xmm3,XMMWORD PTR [edx]
  407be3:	ret    0x2bce
  407be6:	add    esi,ebx
  407be8:	push   esp
  407be9:	pop    esp
  407bea:	aaa    
  407beb:	(bad)  
  407bec:	(bad)  
  407bed:	in     al,dx
  407bee:	mov    dh,0x62
  407bf0:	pop    esi
  407bf1:	sub    DWORD PTR [esi+0x7c],esp
  407bf4:	and    DWORD PTR [edi-0x50],ebp
  407bf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bf8:	popf   
  407bf9:	dec    eax
  407bfa:	sub    ebp,DWORD PTR [ebx-0x348d4aa]
  407c00:	add    BYTE PTR [edi-0x5e],0x86
  407c04:	lds    edx,FWORD PTR [ecx-0x18]
  407c07:	fnstsw WORD PTR [ebx]
  407c09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c0a:	fwait
  407c0b:	xor    BYTE PTR [ebx+0x2a],bh
  407c0e:	or     al,0xcd
  407c10:	pop    edi
  407c11:	(bad)  
  407c13:	mov    ds:0x2f0fb86e,al
  407c18:	xor    DWORD PTR [eax+ebx*8],edx
  407c1b:	jge    0x407bfc
  407c1d:	cdq    
  407c1e:	lods   eax,DWORD PTR ds:[esi]
  407c1f:	xchg   esp,eax
  407c20:	dec    esp
  407c21:	lods   al,BYTE PTR ds:[esi]
  407c22:	jnp    0x407bbb
  407c24:	fcomi  st,st(6)
  407c26:	test   DWORD PTR [edi],ebp
  407c28:	cs out 0xb0,al
  407c2b:	test   al,0x90
  407c2d:	adc    ch,BYTE PTR [edx+eiz*2+0x5aa3d64]
  407c34:	ins    BYTE PTR es:[edi],dx
  407c35:	push   ebx
  407c36:	into   
  407c37:	sbb    DWORD PTR es:[esi],0x63
  407c3b:	dec    edx
  407c3c:	scas   al,BYTE PTR es:[edi]
  407c3d:	repz fadd DWORD PTR [ebx]
  407c40:	xor    DWORD PTR [edi+ecx*4],eax
  407c43:	lahf   
  407c44:	popf   
  407c45:	and    BYTE PTR [edi],cl
  407c47:	lahf   
  407c48:	(bad)  
  407c49:	in     eax,dx
  407c4a:	je     0x407c1d
  407c4c:	cmp    dl,BYTE PTR [ecx+0x38]
  407c4f:	repz or eax,0xac188612
  407c55:	mov    eax,ds:0x22853bad
  407c5a:	pusha  
  407c5b:	stos   BYTE PTR es:[edi],al
  407c5c:	or     edx,edx
  407c5e:	mov    WORD PTR [esi+0x3f],fs
  407c61:	xchg   ebx,eax
  407c62:	popa   
  407c63:	cmp    dh,al
  407c65:	sub    al,BYTE PTR [ebx+0x7d7f117f]
  407c6b:	rol    ch,cl
  407c6d:	cmp    al,0x40
  407c6f:	inc    edx
  407c70:	lar    edx,WORD PTR [ebp-0xf]
  407c74:	in     al,0x84
  407c76:	cmp    bh,dh
  407c78:	add    bl,al
  407c7a:	out    dx,al
  407c7b:	push   edx
  407c7c:	aaa    
  407c7d:	pop    es
  407c7e:	sub    al,0xfb
  407c80:	mov    bh,0x21
  407c82:	jecxz  0x407ca3
  407c84:	aam    0x37
  407c86:	int    0xf5
  407c88:	sub    ebx,DWORD PTR [edi+edx*1]
  407c8b:	mov    bl,0x35
  407c8d:	pop    es
  407c8e:	adc    al,0xab
  407c90:	shl    eax,cl
  407c92:	mov    dl,bl
  407c94:	(bad)  
  407c95:	clc    
  407c96:	jns    0x407d0e
  407c98:	loopne 0x407d06
  407c9a:	mov    esp,0xc690e5b7
  407c9f:	jns    0x407c25
  407ca1:	adc    cl,ah
  407ca3:	ds std 
  407ca5:	cli    
  407ca6:	lahf   
  407ca7:	inc    edx
  407ca8:	lods   eax,DWORD PTR ds:[esi]
  407ca9:	add    DWORD PTR [ecx],edx
  407cab:	mov    DWORD PTR [edx-0x4d],ebx
  407cae:	inc    esi
  407caf:	xor    ah,cl
  407cb1:	sar    dl,cl
  407cb3:	fwait
  407cb4:	xor    DWORD PTR [ebx-0x42391f4e],esp
  407cba:	nop
  407cbb:	push   esi
  407cbc:	sub    eax,0x52fe2590
  407cc1:	int3   
  407cc2:	dec    ecx
  407cc3:	bound  edx,QWORD PTR [ebx-0x42]
  407cc6:	cmc    
  407cc7:	bound  ebx,QWORD PTR [esi-0x49]
  407cca:	or     al,0x50
  407ccc:	retf   0xb3d2
  407ccf:	and    al,0xe5
  407cd1:	repz sub cl,BYTE PTR [ecx-0x5d]
  407cd5:	aas    
  407cd6:	jl     0x407d53
  407cd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cd9:	xchg   edx,eax
  407cda:	retf   
  407cdb:	pop    eax
  407cdc:	(bad)  
  407cdd:	jg     0x407c92
  407cdf:	aad    0x89
  407ce1:	mov    dh,bh
  407ce3:	lods   eax,DWORD PTR ds:[esi]
  407ce4:	sub    al,0xcf
  407ce6:	push   cs
  407ce7:	push   ebp
  407ce8:	iret   
  407ce9:	cmp    eax,0x3616d463
  407cee:	xor    eax,0xac132847
  407cf3:	adc    eax,0x769aec89
  407cf8:	pusha  
  407cf9:	clc    
  407cfa:	clc    
  407cfb:	xchg   ah,bh
  407cfd:	cdq    
  407cfe:	mov    ecx,0xc85cde98
  407d03:	or     ah,dh
  407d05:	pop    esi
  407d06:	pop    ecx
  407d07:	adc    BYTE PTR [edx-0x11fd4e5],al
  407d0d:	fidivr WORD PTR [edi]
  407d0f:	fcomp  st(0)
  407d11:	cli    
  407d12:	sbb    DWORD PTR [ebx],0xe90db522
  407d18:	adc    ebx,DWORD PTR [ecx]
  407d1a:	fcomi  st,st(0)
  407d1c:	data16 loopne 0x407d7c
  407d1f:	shl    DWORD PTR [eax+0x21e44e94],cl
  407d25:	mov    dh,0x83
  407d27:	in     al,dx
  407d28:	inc    esp
  407d29:	fisttp QWORD PTR [ecx+0x5f9eb389]
  407d2f:	or     eax,DWORD PTR [esi+ecx*2]
  407d32:	icebp  
  407d33:	clc    
  407d34:	mov    edi,0xde4825d8
  407d39:	adc    bh,0x2e
  407d3c:	mul    BYTE PTR [eax+esi*2-0x57]
  407d40:	int3   
  407d41:	les    esp,FWORD PTR [edi-0x2ec49d93]
  407d47:	dec    ecx
  407d48:	scas   al,BYTE PTR es:[edi]
  407d49:	loop   0x407d10
  407d4b:	dec    ecx
  407d4c:	shl    eax,1
  407d4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d4f:	out    0xde,al
  407d51:	jl     0x407d16
  407d53:	adc    bl,BYTE PTR [edx]
  407d55:	imul   esi,ebx,0x4d
  407d58:	push   0x1
  407d5a:	or     eax,0x3342c16c
  407d5f:	in     al,0xfe
  407d61:	arpl   WORD PTR [eax],sp
  407d63:	cmp    ah,BYTE PTR [ecx]
  407d65:	or     dh,BYTE PTR [ebp+0x65]
  407d68:	xchg   ebp,eax
  407d69:	sbb    eax,0x47bc5c42
  407d6e:	xchg   edx,eax
  407d6f:	push   esp
  407d70:	mov    eax,0x6506b79b
  407d75:	and    al,0x2e
  407d77:	adc    al,0xba
  407d79:	test   al,0x64
  407d7b:	stos   DWORD PTR es:[edi],eax
  407d7c:	push   ds
  407d7d:	or     DWORD PTR [eax-0x94e9f85],ebx
  407d83:	imul   edi,DWORD PTR cs:[edx+0x21],0x54e612b9
  407d8b:	push   esp
  407d8c:	jns    0x407df2
  407d8e:	lahf   
  407d8f:	test   al,0xf0
  407d91:	jl     0x407db7
  407d93:	pop    es
  407d94:	je     0x407d4c
  407d96:	test   BYTE PTR [eax-0x4b7ddb39],cl
  407d9c:	push   0xc7f15d0a
  407da1:	aaa    
  407da2:	add    bl,BYTE PTR gs:[esi+0x5d]
  407da6:	cmp    eax,0x1dea714a
  407dab:	out    dx,eax
  407dac:	xor    al,0x94
  407dae:	sbb    DWORD PTR [edx-0x80],edi
  407db1:	jne    0x407dce
  407db3:	pop    es
  407db4:	test   eax,0x586aed2c
  407db9:	jle    0x407d62
  407dbb:	xchg   edi,eax
  407dbc:	mov    edi,0xb33bbac6
  407dc1:	push   0xffffffca
  407dc3:	lea    ebx,[edx]
  407dc5:	and    BYTE PTR [edx-0x11c4438a],al
  407dcb:	(bad)  
  407dcc:	cmp    al,0x18
  407dce:	test   BYTE PTR [ebx],dh
  407dd0:	retf   
  407dd1:	imul   edi,DWORD PTR [ebx+0x2ebbe87f],0xfffffffa
  407dd8:	pusha  
  407dd9:	sub    esi,edi
  407ddb:	repnz mov ebp,DWORD PTR [edx-0x7f]
  407ddf:	sti    
  407de0:	stc    
  407de1:	push   ds
  407de2:	mov    eax,0x4e6bbe7d
  407de7:	xor    dl,BYTE PTR [esi+0x4bb334cb]
  407ded:	pusha  
  407dee:	sub    DWORD PTR [ebx],ebp
  407df0:	xchg   ebx,eax
  407df1:	iret   
  407df2:	data16 sar BYTE PTR ds:0xa2072884,0xce
  407dfa:	or     DWORD PTR [edi],edx
  407dfc:	mov    eax,0xe8eccc7
  407e01:	or     esi,esp
  407e03:	mov    edx,0x4e14559c
  407e08:	in     eax,dx
  407e09:	(bad)  
  407e0b:	int    0x83
  407e0d:	sbb    al,0x21
  407e0f:	pop    eax
  407e10:	mov    bh,BYTE PTR [eax+0x19]
  407e13:	clc    
  407e14:	jno    0x407e75
  407e16:	loop   0x407e68
  407e18:	fisttp DWORD PTR [eax-0x46]
  407e1b:	loop   0x407e5d
  407e1d:	rcl    DWORD PTR [edi-0x80],cl
  407e20:	es jb  0x407e8f
  407e23:	push   eax
  407e24:	push   esp
  407e25:	and    bh,ah
  407e27:	frstor [ebx-0x6f]
  407e2a:	enter  0x7ee4,0x49
  407e2e:	nop
  407e2f:	adc    dl,0x88
  407e32:	jp     0x407e75
  407e34:	add    edx,0xb0c5b21f
  407e3a:	xor    bh,bh
  407e3c:	jmp    FWORD PTR [ebx-0x338e1b60]
  407e42:	pop    ebx
  407e43:	sub    ebx,DWORD PTR [edi+0x2c98603d]
  407e49:	addr16 leave 
  407e4b:	fnstenv [edx+0x5d]
  407e4e:	cmc    
  407e4f:	leave  
  407e50:	aam    0x76
  407e52:	ror    DWORD PTR [edx-0x4a],0x9e
  407e56:	or     eax,0x2d4fd7ee
  407e5b:	int    0x87
  407e5d:	fiadd  DWORD PTR [eax-0x6aaa94a6]
  407e63:	add    al,0xd1
  407e65:	mov    dl,BYTE PTR [edi+ebx*1]
  407e68:	jb     0x407e2d
  407e6a:	cmc    
  407e6b:	enter  0x2829,0x95
  407e6f:	out    dx,eax
  407e70:	xor    eax,DWORD PTR [esi]
  407e72:	pop    ebx
  407e73:	aad    0x20
  407e75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e76:	push   ebx
  407e77:	(bad)  
  407e78:	push   ecx
  407e79:	iret   
  407e7a:	mov    DWORD PTR [ebx-0x20],esi
  407e7d:	cmc    
  407e7e:	fs inc edi
  407e80:	aad    0x22
  407e82:	jo     0x407ef4
  407e84:	sbb    eax,0xa9e1ca67
  407e89:	cmp    eax,0x64b4c1f9
  407e8e:	sbb    DWORD PTR [eax-0x6e6aabda],ecx
  407e94:	pop    ds
  407e95:	(bad)
  407e98:	rcr    ebx,0x30
  407e9b:	cli    
  407e9c:	inc    ebp
  407e9d:	fild   QWORD PTR [esi-0x6fe74355]
  407ea3:	sbb    DWORD PTR [edx+edi*8],esi
  407ea6:	jecxz  0x407ea4
  407ea8:	arpl   WORD PTR [ebp+0x2a],dx
  407eab:	xor    ebp,DWORD PTR [ebx-0x63faed6f]
  407eb1:	rcr    BYTE PTR [ebp-0xd],cl
  407eb4:	xor    eax,0xd419ab9
  407eb9:	outs   dx,DWORD PTR ds:[esi]
  407eba:	xchg   ebx,eax
  407ebb:	daa    
  407ebc:	aam    0xfb
  407ebe:	push   ebx
  407ebf:	push   cs
  407ec0:	add    eax,0xc687fc1d
  407ec5:	ret    0x11d8
  407ec8:	sbb    bl,cl
  407eca:	fsubr  QWORD PTR [edi-0x44]
  407ecd:	pop    es
  407ece:	cmp    bl,bl
  407ed0:	sbb    esp,edi
  407ed2:	repnz rcr BYTE PTR [esi-0x3dc3bced],cl
  407ed9:	loop   0x407f13
  407edb:	sbb    DWORD PTR [ecx],eax
  407edd:	jno    0x407f1c
  407edf:	mov    al,ds:0xcdcdf2b5
  407ee4:	test   al,0x68
  407ee6:	adc    DWORD PTR [ebx+esi*2+0x30b53b51],ecx
  407eed:	stc    
  407eee:	hlt    
  407eef:	call   DWORD PTR [ebx]
  407ef1:	lods   eax,DWORD PTR ds:[esi]
  407ef2:	(bad)  
  407ef3:	sbb    edi,DWORD PTR [eax]
  407ef5:	into   
  407ef6:	jmp    0x9022:0x4c26d38a
  407efd:	gs sahf 
  407eff:	repz repz jnp 0x407ed7
  407f03:	mov    ch,BYTE PTR [ebp-0x11]
  407f06:	imul   edi,esp,0x1c
  407f09:	or     eax,0x57d807bb
  407f0e:	pop    ebp
  407f0f:	mov    DWORD PTR [bp+di],0xe943a810
  407f16:	add    ecx,0xc551ad26
  407f1c:	call   0xfc66d9a
  407f21:	push   esp
  407f22:	in     eax,dx
  407f23:	adc    edi,DWORD PTR [ebx-0x76a525d9]
  407f29:	call   0x4f1f:0x56f7da4b
  407f30:	imul   esp,ebp,0xffffff99
  407f33:	int3   
  407f34:	icebp  
  407f35:	rcr    DWORD PTR [edi-0x29],cl
  407f38:	add    BYTE PTR [esi+0x62],dh
  407f3b:	fs mov ebx,0x87591fc3
  407f41:	or     BYTE PTR [ecx+0x5ba5f7fd],dh
  407f47:	ins    BYTE PTR es:[edi],dx
  407f48:	xchg   ebx,eax
  407f49:	jbe    0x407fba
  407f4b:	mov    esp,0x488544dc
  407f50:	mov    dh,0x15
  407f52:	sar    BYTE PTR [ebp+eiz*4+0x51bd5185],cl
  407f59:	mov    eax,ds:0x89d0a454
  407f5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f5f:	push   0x1e
  407f61:	jbe    0x407f0f
  407f63:	mov    ch,0x6b
  407f65:	je     0x407f31
  407f67:	in     eax,dx
  407f68:	fs jb  0x407f45
  407f6b:	ret    
  407f6c:	retf   0x3249
  407f6f:	test   cl,dh
  407f71:	mov    ecx,0x15695212
  407f76:	xchg   edx,eax
  407f77:	ds xchg edx,eax
  407f79:	fiadd  WORD PTR [ebx]
  407f7b:	cmp    ebx,DWORD PTR [eax]
  407f7d:	int3   
  407f7e:	arpl   cx,bx
  407f80:	sbb    DWORD PTR [ecx-0x6fa2b899],ebx
  407f86:	pop    ss
  407f87:	add    BYTE PTR [edx],bh
  407f89:	retf   
  407f8a:	rcl    BYTE PTR [edi],cl
  407f8c:	mov    ebx,0xc8dd50b1
  407f91:	(bad)  
  407f92:	lahf   
  407f93:	xor    BYTE PTR [eax-0x26efc0],bh
  407f99:	jmp    0x407fae
  407f9b:	nop
  407f9c:	mov    edi,0xe608009a
  407fa1:	or     esi,0xcdb92042
  407fa7:	jmp    0x407ff9
  407fa9:	jecxz  0x407fb8
  407fab:	push   es
  407fac:	imul   esi,DWORD PTR [esi+0x53],0x3c
  407fb0:	or     eax,0xa1a06325
  407fb5:	and    al,0xb5
  407fb7:	pop    esi
  407fb8:	shl    esp,cl
  407fba:	push   ds
  407fbb:	inc    ecx
  407fbc:	push   ss
  407fbd:	push   ds
  407fbe:	sub    BYTE PTR [esi-0x15dc06ff],dl
  407fc4:	mov    dh,0x79
  407fc6:	mov    al,ds:0x337267b0
  407fcb:	add    al,0x15
  407fcd:	ds inc edx
  407fcf:	stos   DWORD PTR es:[edi],eax
  407fd0:	or     eax,0xa1f8d93a
  407fd5:	and    al,0xc2
  407fd7:	aas    
  407fd8:	sub    DWORD PTR [esi-0x1f],0xffffffcf
  407fdc:	sbb    eax,0xe8566146
  407fe1:	add    BYTE PTR [esi],dh
  407fe3:	push   esp
  407fe4:	mov    esp,0x40517511
  407fe9:	jbe    0x407fd4
  407feb:	pop    eax
  407fec:	pop    ebx
  407fed:	ffreep st(4)
  407fef:	sub    esi,0x5
  407ff2:	fcomi  st,st(7)
  407ff4:	pop    ss
  407ff5:	mov    ah,0xe
  407ff7:	bound  esi,QWORD PTR [esi+0x17ec7a8a]
  407ffd:	push   cs
  407ffe:	sbb    dl,BYTE PTR [edx+0x4c6a460b]
  408004:	or     eax,DWORD PTR [esi+0xe4d2ba9]
  40800a:	lahf   
  40800b:	add    BYTE PTR [eax],ah
  40800d:	fmul   st,st(3)
  40800f:	xor    edi,DWORD PTR [edx]
  408011:	(bad)  
  408012:	fistp  DWORD PTR [ecx+0x610d224b]
  408018:	cmp    al,0x2e
  40801a:	inc    ecx
  40801b:	pop    eax
  40801c:	xlat   BYTE PTR ds:[ebx]
  40801d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40801e:	repnz sbb ah,BYTE PTR [esi+esi*2+0x2f]
  408023:	push   ss
  408024:	pop    ss
  408025:	sbb    ah,BYTE PTR [ebx+0x1135816d]
  40802b:	cmp    ah,BYTE PTR [esi]
  40802d:	jb     0x407fdf
  40802f:	lock aas 
  408031:	fild   DWORD PTR [ebp+0x70]
  408034:	cmp    eax,0x8ebc28ba
  408039:	jnp    0x408035
  40803b:	push   ebx
  40803c:	fistp  DWORD PTR [ebx]
  40803e:	neg    BYTE PTR [edi+0x62]
  408041:	scas   eax,DWORD PTR es:[edi]
  408042:	mov    eax,0xe8588d20
  408047:	aam    0x3a
  408049:	push   cs
  40804a:	dec    edx
  40804b:	mov    esp,0xead3f09d
  408050:	cmp    al,BYTE PTR [ebx+0x4b]
  408053:	rcl    BYTE PTR [ebx],1
  408055:	jmp    0x408066
  408057:	sub    edx,DWORD PTR [ebx]
  408059:	clc    
  40805a:	dec    ecx
  40805b:	sub    bl,bl
  40805d:	jno    0x408068
  40805f:	sub    al,0xff
  408061:	add    DWORD PTR [ecx],eax
  408063:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408064:	nop
  408065:	call   FWORD PTR [si]
  408068:	mov    bl,BYTE PTR [edx+esi*4]
  40806b:	ja     0x4080af
  40806d:	or     DWORD PTR [edi+0x6b6f71ce],0x57
  408074:	push   edi
  408075:	daa    
  408076:	mov    esi,DWORD PTR [ebp+0x514412c1]
  40807c:	scas   eax,DWORD PTR es:[edi]
  40807d:	xor    eax,0x53707027
  408082:	dec    esp
  408083:	pop    eax
  408084:	je     0x408072
  408086:	push   esp
  408087:	inc    eax
  408088:	cmp    bh,BYTE PTR [edi]
  40808a:	or     dh,dl
  40808c:	lea    eax,[ebx+0x6bf32b15]
  408092:	and    BYTE PTR [esi+0x51],0x59
  408096:	xchg   edx,eax
  408097:	pop    es
  408098:	dec    esi
  408099:	or     BYTE PTR [eax],0x6c
  40809c:	or     DWORD PTR [edx],ecx
  40809e:	dec    edi
  40809f:	retf   0x68a2
  4080a2:	pop    ds
  4080a3:	popa   
  4080a4:	jecxz  0x40807a
  4080a6:	or     DWORD PTR [edx],ecx
  4080a8:	mov    dh,0xb9
  4080aa:	ja     0x408050
  4080ac:	loope  0x408085
  4080ae:	or     esp,DWORD PTR [ebx-0x2b]
  4080b1:	out    dx,eax
  4080b2:	fdiv   DWORD PTR ds:0x6c5614b5
  4080b8:	int3   
  4080b9:	xor    DWORD PTR [edi+0x47f249dd],esi
  4080bf:	ret    0xe669
  4080c2:	les    edx,FWORD PTR [edi-0x39]
  4080c5:	mov    al,0x51
  4080c7:	push   ecx
  4080c8:	mov    cl,0x82
  4080ca:	sub    cl,BYTE PTR [edi+0x6cc7a380]
  4080d0:	repz xchg ebx,eax
  4080d2:	xchg   esi,eax
  4080d3:	xor    ch,BYTE PTR [esi+0x49]
  4080d6:	jnp    0x408147
  4080d8:	xchg   bl,ch
  4080da:	int3   
  4080db:	test   BYTE PTR [edx-0x19e45de7],0x22
  4080e2:	xor    ebp,DWORD PTR [ecx+0x10]
  4080e5:	push   es
  4080e6:	mov    ecx,0xd659b0e7
  4080eb:	repnz mov gs,WORD PTR [esi+ebp*4+0x87f272e]
  4080f3:	and    BYTE PTR [esi+0xc],0xf9
  4080f7:	dec    ebx
  4080f8:	je     0x4080b2
  4080fa:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4080fc:	enter  0xfe1b,0x21
  408100:	jae    0x408131
  408102:	iret   
  408103:	push   edx
  408104:	push   0x974f2b07
  408109:	sub    ebx,edx
  40810b:	sub    DWORD PTR [ecx+0x51],ecx
  40810e:	hlt    
  40810f:	mov    bl,BYTE PTR [edx]
  408111:	push   eax
  408112:	mov    bl,0xf
  408114:	mov    DWORD PTR [ebx+0x1cbb55b7],ebp
  40811a:	inc    ecx
  40811b:	pop    esp
  40811c:	es adc al,0xcd
  40811f:	ret    
  408120:	or     cl,BYTE PTR [ebx]
  408122:	into   
  408123:	test   DWORD PTR ds:0xcc695b7b,eax
  408129:	cli    
  40812a:	not    BYTE PTR es:[eax+esi*8-0x31460fb3]
  408132:	mov    ecx,DWORD PTR [edi-0x23e689b8]
  408138:	dec    ebx
  408139:	pop    esp
  40813a:	(bad)  ds:0x91672723
  408140:	xchg   esi,eax
  408141:	xchg   BYTE PTR [edx-0x61],bh
  408144:	xchg   esi,eax
  408145:	pop    es
  408146:	or     DWORD PTR [esp+edx*2+0x163a857f],ebp
  40814d:	out    0x43,eax
  40814f:	(bad)
  408153:	aad    0x11
  408155:	ret    0x39ee
  408158:	inc    edx
  408159:	adc    DWORD PTR [eax+0x41],eax
  40815c:	lds    edi,FWORD PTR [edx+eax*2]
  40815f:	and    eax,0x8b2a785a
  408164:	xchg   edx,eax
  408165:	adc    eax,0x4a446719
  40816a:	push   esp
  40816b:	test   dl,dl
  40816d:	movsx  esi,bh
  408170:	xchg   esi,eax
  408171:	sub    al,0x70
  408173:	push   ds
  408174:	les    edi,FWORD PTR [edx+ebp*4+0x3065479b]
  40817b:	sbb    bl,BYTE PTR [edi]
  40817d:	in     eax,0x9a
  40817f:	test   al,0xae
  408181:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408182:	and    al,0x3c
  408184:	push   ecx
  408185:	stos   BYTE PTR es:[edi],al
  408186:	stc    
  408187:	mov    al,ds:0xb08f0356
  40818c:	iret   
  40818d:	test   eax,0x54c28529
  408192:	or     dl,BYTE PTR [ebx-0x727023a]
  408198:	push   0x2e8d42a0
  40819d:	cmp    BYTE PTR [esi+0x416375bd],bl
  4081a3:	stos   BYTE PTR es:[edi],al
  4081a4:	or     BYTE PTR [ecx-0x55],cl
  4081a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081a8:	imul   ebx,DWORD PTR [ebx],0x6e
  4081ab:	and    ebx,DWORD PTR [edi]
  4081ad:	mov    ecx,0x34e0269a
  4081b2:	iret   
  4081b3:	add    eax,0x6fd8ab97
  4081b8:	mov    dh,BYTE PTR [edx+edi*8]
  4081bb:	ret    
  4081bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081bd:	std    
  4081be:	shl    ebx,cl
  4081c0:	es mov ch,0xff
  4081c3:	imul   ebp,DWORD PTR [esi-0x55],0xffffffa8
  4081c7:	mov    esp,0xcb8ec08a
  4081cc:	sbb    eax,0x672adcdc
  4081d1:	jmp    0x408213
  4081d3:	pusha  
  4081d4:	cwde   
  4081d5:	jmp    0x4081b8
  4081d7:	or     BYTE PTR [eax],al
  4081d9:	popa   
  4081da:	mov    ebx,0x5747075
  4081df:	mov    esp,0x2f811040
  4081e4:	shl    BYTE PTR [eax-0x53],cl
  4081e7:	ss adc al,0x0
  4081ea:	repnz adc BYTE PTR [ecx-0x389c41ac],bh
  4081f1:	or     al,0xda
  4081f3:	xor    DWORD PTR [edx],edx
  4081f5:	or     al,0x1
  4081f7:	push   0x176961c4
  4081fc:	ja     0x4081fc
  4081fe:	pushf  
  4081ff:	ins    DWORD PTR es:[edi],dx
  408200:	repz ret 
  408202:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408203:	jl     0x40824b
  408205:	inc    ecx
  408206:	mul    edi
  408208:	retf   0x438f
  40820b:	out    0xa4,al
  40820d:	cld    
  40820e:	(bad)  
  40820f:	jle    0x4081d0
  408211:	xor    ecx,ebx
  408213:	(bad)  
  408215:	adc    DWORD PTR [ebp+0x4d7cf985],edi
  40821b:	adc    al,0x31
  40821d:	sub    eax,0x90b77286
  408222:	mov    bl,0xd8
  408224:	xchg   BYTE PTR [eax-0x2e],dh
  408227:	bound  edi,QWORD PTR [ebx-0x58099488]
  40822d:	jbe    0x40829e
  40822f:	rol    BYTE PTR [esi+0x41],cl
  408232:	jle    0x40820f
  408234:	daa    
  408235:	mov    ecx,0x12402ce
  40823a:	inc    eax
  40823b:	pop    edi
  40823c:	and    cl,bh
  40823e:	push   ebp
  40823f:	or     eax,DWORD PTR [edi]
  408241:	and    DWORD PTR [esi],edi
  408243:	push   ebx
  408244:	ins    DWORD PTR es:[edi],dx
  408245:	dec    eax
  408246:	push   edi
  408247:	cmp    eax,0x6c3916f0
  40824c:	jnp    0x40827a
  40824e:	pop    esp
  40824f:	dec    esp
  408250:	xor    DWORD PTR [eax-0x5b],ebx
  408253:	xchg   dh,bl
  408255:	fmul   DWORD PTR [edx]
  408257:	in     eax,dx
  408258:	and    DWORD PTR [eax-0x1317fa3],edi
  40825e:	mov    ecx,0xbc3633b5
  408263:	inc    ecx
  408264:	pushf  
  408265:	add    eax,0xd5359bef
  40826a:	(bad)  
  40826b:	xor    edx,DWORD PTR [eax]
  40826d:	out    0xd9,al
  40826f:	fnstsw WORD PTR [edi-0x1d]
  408272:	retf   
  408273:	out    dx,al
  408274:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408275:	pop    ss
  408276:	dec    edx
  408277:	and    ah,BYTE PTR [ebx-0x4]
  40827a:	popf   
  40827b:	or     al,0x99
  40827d:	jmp    0x75f0b864
  408282:	cld    
  408283:	outs   dx,BYTE PTR ds:[esi]
  408284:	sti    
  408285:	clc    
  408286:	in     eax,dx
  408287:	sbb    edx,edi
  408289:	xor    edx,DWORD PTR ds:0xf41c779b
  40828f:	inc    edx
  408290:	mov    esi,0x13a3a94a
  408295:	xchg   esi,eax
  408296:	mov    al,0xd6
  408298:	jmp    0x408282
  40829a:	inc    esp
  40829b:	fdivr  DWORD PTR [ebx-0x4b0f87a]
  4082a1:	dec    edi
  4082a2:	pop    ss
  4082a3:	stc    
  4082a4:	sbb    ebx,esp
  4082a6:	jne    0x408287
  4082a8:	int3   
  4082a9:	pop    esi
  4082aa:	mov    al,0xfc
  4082ac:	xchg   esp,eax
  4082ad:	push   es
  4082ae:	sub    ecx,DWORD PTR [ecx-0x350b034b]
  4082b4:	sub    DWORD PTR [ebp+0x6f],ecx
  4082b7:	ins    BYTE PTR es:[edi],dx
  4082b8:	xchg   esp,eax
  4082b9:	push   ds
  4082ba:	stc    
  4082bb:	xor    bl,BYTE PTR [ecx]
  4082bd:	jg     0x4082fc
  4082bf:	cmp    dh,cl
  4082c1:	jecxz  0x40824c
  4082c3:	or     dh,ah
  4082c5:	retf   
  4082c6:	into   
  4082c7:	jecxz  0x4082bd
  4082c9:	add    eax,0x723ca02e
  4082ce:	xchg   BYTE PTR [edx+0x14],bh
  4082d1:	mov    ds:0xf1bd8506,eax
  4082d6:	pushf  
  4082d7:	pop    eax
  4082d8:	arpl   WORD PTR [esi-0x68],ax
  4082db:	mov    bh,BYTE PTR ss:[edi+ebp*8]
  4082df:	dec    esp
  4082e0:	sub    eax,0x66405637
  4082e5:	lahf   
  4082e6:	lds    esi,FWORD PTR [esi+0x7a74306a]
  4082ec:	jmp    0x6d3c:0x31f1ad88
  4082f3:	bound  edx,QWORD PTR [edi]
  4082f5:	jb     0x408288
  4082f7:	imul   esi,ebx,0x13
  4082fa:	or     bl,BYTE PTR [eax-0x7a]
  4082fd:	pusha  
  4082fe:	push   eax
  4082ff:	inc    eax
  408300:	push   edx
  408301:	lods   eax,DWORD PTR ds:[esi]
  408302:	scas   al,BYTE PTR es:[edi]
  408303:	jp     0x4082b8
  408305:	mov    eax,ds:0xdd74035b
  40830a:	push   esp
  40830b:	mov    ecx,0xddb094c7
  408310:	jl     0x4082c5
  408312:	xchg   edi,eax
  408313:	push   cs
  408314:	out    dx,al
  408315:	mov    bh,0x95
  408317:	cmp    BYTE PTR [ecx-0x6b10bf71],bl
  40831d:	xor    DWORD PTR [edx+0x61e84c6f],edx
  408323:	nop
  408324:	aas    
  408325:	mov    eax,ds:0x955bf8e1
  40832a:	xor    eax,0x96c679ea
  40832f:	ins    DWORD PTR es:[edi],dx
  408330:	es xchg ebp,eax
  408332:	jmp    0x408315
  408334:	inc    eax
  408335:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408336:	dec    esi
  408337:	scas   al,BYTE PTR es:[edi]
  408338:	(bad)  
  408339:	in     al,0xd4
  40833b:	or     ax,WORD PTR [esi-0x6f]
  40833f:	pop    eax
  408340:	adc    ebx,eax
  408342:	int3   
  408343:	mov    dl,0x32
  408345:	sbb    al,0x1d
  408347:	pop    ecx
  408348:	fcmovbe st,st(6)
  40834a:	mov    edx,0x22ca1a7e
  40834f:	pop    es
  408350:	jp     0x40839c
  408352:	imul   edi
  408354:	push   0x223f9df1
  408359:	and    BYTE PTR [edx-0x4e],dh
  40835c:	or     eax,0xc9781267
  408361:	test   DWORD PTR [edi],ecx
  408363:	fld    st(5)
  408365:	popa   
  408366:	aas    
  408367:	stos   BYTE PTR es:[edi],al
  408368:	int    0xbb
  40836a:	jnp    0x40838c
  40836c:	jnp    0x408336
  40836e:	push   ds
  40836f:	out    dx,al
  408370:	ret    
  408371:	mov    ds:0x3c3bcb33,al
  408376:	mov    ch,0xca
  408378:	jne    0x40830a
  40837a:	mov    ecx,0xd520be4f
  40837f:	sbb    DWORD PTR [eax+0x4e],ecx
  408382:	stos   DWORD PTR es:[edi],eax
  408383:	out    0xc3,eax
  408385:	sub    al,0xb0
  408387:	arpl   WORD PTR [ebp-0x77],ax
  40838a:	xor    al,0x74
  40838c:	sahf   
  40838d:	push   ds
  40838e:	out    0x3b,al
  408390:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408391:	arpl   dx,bx
  408393:	test   DWORD PTR [ecx-0x7ccce942],edi
  408399:	jnp    0x408383
  40839b:	in     eax,dx
  40839c:	add    DWORD PTR [edi-0x35],ecx
  40839f:	sbb    DWORD PTR ds:0x4198fb93,ebx
  4083a5:	mov    dl,ah
  4083a7:	addr16 out dx,al
  4083a9:	inc    ecx
  4083aa:	mov    esp,0xbce72976
  4083af:	dec    edi
  4083b0:	pop    edi
  4083b1:	cmp    DWORD PTR [esi],0xe6abf289
  4083b7:	loop   0x408411
  4083b9:	pop    edx
  4083ba:	jmp    0x408345
  4083bc:	loop   0x408368
  4083be:	jne    0x408377
  4083c0:	in     eax,0x9a
  4083c2:	ret    0x43ad
  4083c5:	into   
  4083c6:	into   
  4083c7:	xchg   ebx,eax
  4083c8:	sbb    al,0xf8
  4083ca:	lods   eax,DWORD PTR ds:[esi]
  4083cb:	mov    dl,0x51
  4083cd:	repnz icebp 
  4083cf:	clc    
  4083d0:	push   cs
  4083d1:	dec    edx
  4083d2:	xor    ah,bh
  4083d4:	imul   esp,edx,0xffffffdb
  4083d7:	test   eax,0x4f2a1528
  4083dd:	sahf   
  4083de:	scas   al,BYTE PTR es:[edi]
  4083df:	(bad)  
  4083e0:	jl     0x408378
  4083e2:	adc    ebx,ebx
  4083e4:	sbb    esi,ebx
  4083e6:	xor    BYTE PTR [ebx],dl
  4083e8:	fcmovnb st,st(2)
  4083ea:	cmp    eax,0x771dcb34
  4083ef:	inc    edi
  4083f0:	jecxz  0x408374
  4083f2:	xchg   esi,eax
  4083f3:	sub    bl,dh
  4083f5:	clc    
  4083f6:	xchg   esp,eax
  4083f7:	cld    
  4083f8:	loop   0x4083cc
  4083fa:	popa   
  4083fb:	mov    ds:0xaf85967b,eax
  408400:	push   eax
  408401:	(bad)  
  408402:	jl     0x408385
  408404:	ret    
  408405:	retf   0xcd6a
  408408:	or     BYTE PTR [ecx],cl
  40840a:	nop
  40840b:	lock cmp DWORD PTR [edx+0x3b],ebx
  40840f:	dec    ebx
  408410:	std    
  408411:	std    
  408412:	xor    eax,0x23661233
  408417:	out    dx,al
  408418:	cli    
  408419:	add    ch,BYTE PTR [ebp+0x35]
  40841c:	push   ebp
  40841d:	ins    DWORD PTR es:[edi],dx
  40841e:	jno    0x408482
  408420:	push   esi
  408421:	mov    edi,0x9a86d293
  408426:	or     dh,BYTE PTR [ebx]
  408428:	mov    ds:0xdf45ba19,eax
  40842d:	mov    BYTE PTR [ebx+0x1c52e633],ch
  408433:	lods   eax,DWORD PTR ds:[esi]
  408434:	pop    edx
  408435:	push   ecx
  408436:	or     eax,0x1280d086
  40843b:	jns    0x4083fa
  40843d:	out    0x37,al
  40843f:	(bad)  
  408440:	mov    ds:0x883b364,al
  408445:	xchg   DWORD PTR [ebx+0xcc4c3e6],ebx
  40844b:	pusha  
  40844c:	hlt    
  40844d:	adc    DWORD PTR [esi-0x45],esp
  408450:	imul   edx,DWORD PTR [edx-0x24aae7b5],0xa31016bf
  40845a:	adc    al,0xe
  40845c:	rcl    BYTE PTR [ecx-0x56],0x3a
  408460:	icebp  
  408461:	jo     0x40847e
  408463:	fidivr DWORD PTR [edi-0x24cdea3a]
  408469:	rcl    DWORD PTR [esi-0x6d5986d0],1
  40846f:	imul   edx,edx,0x70065aa5
  408475:	rdseed edx
  408478:	dec    sp
  40847a:	daa    
  40847b:	pop    ecx
  40847c:	jp     0x4084a5
  40847e:	push   0xfffffff5
  408480:	cmp    bl,BYTE PTR [bx]
  408483:	pusha  
  408484:	mov    ebx,ds
  408486:	mov    bl,0x66
  408488:	jo     0x4084d8
  40848a:	lock push esi
  40848c:	adc    eax,0x8b5accde
  408491:	push   DWORD PTR [ecx+0x3a97c66d]
  408497:	loopne 0x4084a3
  408499:	out    0x61,al
  40849b:	sub    ah,dh
  40849d:	cdq    
  40849e:	and    edi,ecx
  4084a0:	loope  0x408425
  4084a2:	nop
  4084a3:	inc    eax
  4084a4:	out    dx,eax
  4084a5:	and    eax,0x63e7aa8d
  4084aa:	in     eax,0x5d
  4084ac:	sbb    al,0x82
  4084ae:	or     eax,0x64c98c02
  4084b3:	ror    BYTE PTR [ecx+0x58],1
  4084b6:	add    BYTE PTR [esi+edx*4-0xcd4f845],al
  4084bd:	add    bl,0x71
  4084c0:	aam    0x5c
  4084c2:	cli    
  4084c3:	fs aam 0xab
  4084c6:	and    BYTE PTR [edi],0xee
  4084c9:	or     cl,BYTE PTR [ebp-0x1c]
  4084cc:	test   eax,edx
  4084ce:	(bad)  
  4084cf:	(bad)  
  4084d1:	adc    bl,BYTE PTR [esi]
  4084d3:	les    edx,FWORD PTR [ebp-0x79]
  4084d6:	loopne 0x40853e
  4084d8:	mov    edx,0xaa7416a0
  4084dd:	jnp    0x408481
  4084df:	cmc    
  4084e0:	popa   
  4084e1:	xchg   ecx,esp
  4084e3:	sub    DWORD PTR [edx-0x2],edi
  4084e6:	pop    es
  4084e7:	ficom  WORD PTR [eax+ebp*4]
  4084ea:	pop    edx
  4084eb:	fwait
  4084ec:	mov    dh,0x2e
  4084ee:	adc    ecx,DWORD PTR ss:[esp+esi*8-0x7216b09d]
  4084f6:	add    ebp,edi
  4084f8:	popa   
  4084f9:	iret   
  4084fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084fb:	push   esp
  4084fc:	in     eax,0xfe
  4084fe:	inc    edx
  4084ff:	aaa    
  408500:	xor    cl,ch
  408502:	gs xchg esi,eax
  408504:	mov    edi,0x399501cf
  408509:	push   esi
  40850a:	jnp    0x4084ab
  40850c:	in     al,0x71
  40850e:	xor    ch,ah
  408510:	push   ds
  408511:	mov    bl,0xa6
  408513:	lock sub eax,0x5c3a4052
  408519:	mov    ebp,0x259d0f95
  40851e:	inc    eax
  40851f:	data16 cli 
  408521:	icebp  
  408522:	fld    st(2)
  408524:	mov    ?,WORD PTR [eax-0x40]
  408527:	or     ecx,esp
  408529:	shl    DWORD PTR [eax+0x72],1
  40852c:	cmp    ch,BYTE PTR [edx+ebx*1]
  40852f:	cmp    DWORD PTR [ecx+0xa636e2b],ecx
  408535:	pop    eax
  408536:	sub    DWORD PTR [esi],eax
  408538:	popf   
  408539:	push   edi
  40853a:	cmp    BYTE PTR [edx+0x7af35e6e],ch
  408540:	inc    eax
  408541:	icebp  
  408542:	inc    edx
  408543:	test   eax,esi
  408545:	mov    ds:0xd0569cc,al
  40854a:	inc    esi
  40854b:	inc    esp
  40854c:	inc    edi
  40854d:	das    
  40854e:	(bad)  
  40854f:	mov    ds:0x339eb753,eax
  408554:	adc    DWORD PTR [ebx+0x4c805eb9],edx
  40855a:	loopne 0x408578
  40855c:	es mov al,0xd5
  40855f:	mov    WORD PTR [ebx-0x7a],ss
  408562:	mov    ds:0x674c3121,eax
  408567:	retf   0x314d
  40856a:	inc    edi
  40856b:	outs   dx,BYTE PTR ds:[esi]
  40856c:	add    al,0xb1
  40856e:	push   ebp
  40856f:	inc    ecx
  408570:	mov    ebp,0x54b7249a
  408575:	leave  
  408576:	push   cs
  408577:	pop    esi
  408578:	jae    0x408524
  40857a:	aaa    
  40857b:	jne    0x408503
  40857d:	(bad)  
  40857e:	cli    
  40857f:	push   eax
  408580:	fwait
  408581:	jle    0x4085e2
  408583:	and    DWORD PTR [esi],ecx
  408585:	add    edi,DWORD PTR [ecx+0x65]
  408588:	sub    eax,0x672a931f
  40858d:	dec    ecx
  40858e:	in     eax,0x5e
  408590:	cmp    DWORD PTR [esi-0x1c],edi
  408593:	xor    dh,ch
  408595:	fcomi  st,st(1)
  408597:	mov    ebp,DWORD PTR ds:0x57657584
  40859d:	jno    0x4085d4
  40859f:	retf   
  4085a0:	jae    0x4085eb
  4085a2:	sub    eax,0x33a770e3
  4085a7:	mov    cl,0x73
  4085a9:	icebp  
  4085aa:	mov    DWORD PTR [ebp-0x4c],ebx
  4085ad:	icebp  
  4085ae:	pop    edi
  4085af:	mov    dh,0x95
  4085b1:	inc    ecx
  4085b2:	push   esi
  4085b3:	inc    ebx
  4085b4:	add    eax,0x209cce1d
  4085b9:	pop    esp
  4085ba:	lds    ebx,FWORD PTR [ecx+0x6a8b8456]
  4085c0:	test   BYTE PTR [ebp+esi*4-0x1e],dh
  4085c4:	sbb    bl,0xb0
  4085c7:	ins    DWORD PTR es:[edi],dx
  4085c8:	popa   
  4085c9:	push   cs
  4085ca:	xchg   ebp,ebx
  4085cc:	push   ss
  4085cd:	popf   
  4085ce:	xchg   ebp,eax
  4085cf:	push   0x7
  4085d1:	stc    
  4085d2:	lock mov al,0x66
  4085d5:	stc    
  4085d6:	xlat   BYTE PTR ds:[ebx]
  4085d7:	cmp    ecx,esi
  4085d9:	mov    eax,ds:0x5c890aaa
  4085de:	cld    
  4085df:	out    0x4e,eax
  4085e1:	or     ebx,DWORD PTR [ebx]
  4085e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085e4:	std    
  4085e5:	jge    0x408639
  4085e7:	test   al,0xad
  4085e9:	popf   
  4085ea:	xchg   DWORD PTR [ebx+0x7f],edi
  4085ed:	lahf   
  4085ee:	ja     0x408631
  4085f0:	cmp    BYTE PTR [esi-0x164de495],cl
  4085f6:	inc    ebp
  4085f7:	mov    eax,0xfaeb8797
  4085fc:	rcr    dl,0x10
  4085ff:	and    al,0xb0
  408601:	sbb    ah,cl
  408603:	pop    eax
  408604:	(bad)  
  408605:	pop    es
  408606:	les    edx,FWORD PTR [ebx-0x6982a091]
  40860c:	sub    al,0x4
  40860e:	adc    eax,0x76f5368
  408613:	sub    al,dl
  408615:	mov    edi,0x4462dabc
  40861a:	gs cdq 
  40861c:	cmp    BYTE PTR [eax-0x39],bl
  40861f:	mov    al,0x74
  408621:	xor    al,0xe
  408623:	xor    bh,BYTE PTR [ebx+0x5]
  408626:	jmp    0x40863b
  408628:	pushf  
  408629:	inc    ebp
  40862a:	mov    al,BYTE PTR [esi-0x14]
  40862d:	mov    al,ds:0xf8430eaa
  408632:	xor    bl,BYTE PTR [edi]
  408634:	push   ds
  408635:	push   ss
  408636:	aam    0xa5
  408638:	and    BYTE PTR [ebp+0x7d],dh
  40863b:	cmp    DWORD PTR [ebx-0x72],esp
  40863e:	js     0x40865f
  408640:	ret    
  408641:	les    eax,FWORD PTR [esi]
  408643:	jno    0x40862c
  408645:	popf   
  408646:	xor    ebp,DWORD PTR [ebx+0xcce5aa2]
  40864c:	sbb    DWORD PTR [ecx],edx
  40864e:	adc    eax,0xd8c9248f
  408653:	(bad)  
  408655:	mov    ebp,0xc4b6772a
  40865a:	sub    bl,BYTE PTR [edi+ebp*8]
  40865d:	scas   eax,DWORD PTR es:[edi]
  40865e:	fimul  DWORD PTR [ebx-0x15]
  408661:	ret    0xa08a
  408664:	xor    bl,BYTE PTR [ecx+0xe414525]
  40866a:	into   
  40866b:	push   eax
  40866c:	xchg   ebp,eax
  40866d:	mov    al,ds:0xf7866a2e
  408672:	retf   0x31d5
  408675:	das    
  408676:	push   ds
  408677:	jmp    0x40861a
  408679:	dec    ecx
  40867a:	push   esi
  40867b:	and    BYTE PTR [eax-0x44],dh
  40867e:	(bad)  
  40867f:	loop   0x408629
  408681:	lock push esp
  408683:	jae    0x408615
  408685:	jle    0x408646
  408687:	lods   al,BYTE PTR ds:[esi]
  408688:	mov    edi,0x78738d1f
  40868d:	test   esi,ecx
  40868f:	adc    cl,dl
  408691:	push   esp
  408692:	jecxz  0x408674
  408694:	xor    ch,BYTE PTR [eax+0x187bc7bc]
  40869a:	mov    WORD PTR [edi+esi*8+0x7a],ss
  40869e:	int3   
  40869f:	jne    0x40862f
  4086a1:	mov    al,ds:0xe8c218c2
  4086a6:	sti    
  4086a7:	sti    
  4086a8:	loop   0x40871b
  4086aa:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4086ac:	push   eax
  4086ad:	outs   dx,DWORD PTR ds:[esi]
  4086ae:	xchg   esi,eax
  4086af:	shl    BYTE PTR [ebp+0x7dccbfdf],cl
  4086b5:	mov    bh,BYTE PTR [ebx]
  4086b7:	jp     0x40869b
  4086b9:	adc    dh,bh
  4086bb:	dec    eax
  4086bc:	push   ss
  4086bd:	(bad)  
  4086be:	or     eax,0x828cb41e
  4086c3:	int    0xe3
  4086c5:	xlat   BYTE PTR ds:[ebx]
  4086c6:	xor    al,BYTE PTR [ebp+0x16f1ccc1]
  4086cc:	mov    ebp,0xe1b09cae
  4086d1:	jp     0x40870e
  4086d3:	cmp    eax,0x9bebe5c
  4086d8:	retf   
  4086d9:	mov    eax,ds:0x84a0923e
  4086de:	dec    eax
  4086df:	fcom   DWORD PTR [edi]
  4086e1:	jae    0x4086ac
  4086e3:	push   0x24
  4086e5:	daa    
  4086e6:	dec    edx
  4086e7:	dec    eax
  4086e8:	icebp  
  4086e9:	and    ebx,0x7c45a20
  4086ef:	sbb    DWORD PTR [edx+0x4157899e],esi
  4086f5:	sbb    ah,BYTE PTR [ecx+ecx*4]
  4086f8:	test   DWORD PTR [edi],esi
  4086fa:	jnp    0x40875c
  4086fc:	sub    eax,0xb5590053
  408701:	sub    al,0xd8
  408703:	and    eax,0xcb233dcd
  408708:	jp     0x40876c
  40870a:	outs   dx,DWORD PTR ds:[esi]
  40870b:	rcl    BYTE PTR [ebx-0x36],1
  40870e:	cwde   
  40870f:	add    eax,0xa4af8148
  408714:	and    esp,eax
  408716:	and    dh,BYTE PTR [ecx]
  408718:	xchg   ebx,eax
  408719:	loop   0x40876f
  40871b:	dec    esi
  40871c:	mov    al,0x73
  40871e:	mov    al,0x66
  408720:	ins    DWORD PTR es:[edi],dx
  408721:	pop    ss
  408722:	(bad)  
  408723:	xlat   BYTE PTR ds:[ebx]
  408724:	push   edi
  408725:	aaa    
  408726:	outs   dx,DWORD PTR ds:[esi]
  408727:	repz out dx,eax
  408729:	push   esp
  40872a:	add    ecx,DWORD PTR [ecx+ebp*1]
  40872d:	test   al,0xee
  40872f:	jns    0x40870c
  408731:	xchg   esp,eax
  408732:	dec    dl
  408734:	inc    edx
  408735:	je     0x408724
  408737:	mov    esp,0xa02bd8b2
  40873c:	sbb    BYTE PTR [ebp-0x1a1d7536],al
  408742:	mov    bh,0xc8
  408744:	dec    esi
  408745:	daa    
  408746:	hlt    
  408747:	stos   DWORD PTR es:[edi],eax
  408748:	mov    bl,0xa3
  40874a:	or     al,0x2b
  40874c:	xchg   edx,eax
  40874d:	fsubp  st(1),st
  40874f:	stos   DWORD PTR es:[edi],eax
  408750:	ret    0x9f11
  408753:	enter  0xb2ee,0xe7
  408757:	xchg   esp,eax
  408758:	adc    ah,BYTE PTR ds:0xf38b9281
  40875e:	jmp    0x4087c5
  408760:	mov    dl,0x25
  408762:	xchg   ebx,eax
  408763:	ror    BYTE PTR ds:0x9f856e8e,1
  408769:	xchg   edi,eax
  40876a:	das    
  40876b:	(bad)  
  40876c:	cmp    al,0x92
  40876e:	mov    al,0x22
  408770:	pop    eax
  408771:	popf   
  408772:	rcl    bl,0xde
  408775:	cs push 0xfa691481
  40877b:	rcl    BYTE PTR [edx],1
  40877d:	push   ss
  40877e:	push   esp
  40877f:	xchg   edi,eax
  408780:	push   esi
  408781:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408782:	jl     0x408740
  408784:	inc    ebp
  408785:	jecxz  0x4087fe
  408787:	mov    ebp,0xc5685814
  40878c:	lods   al,BYTE PTR ds:[esi]
  40878d:	loop   0x408788
  40878f:	jne    0x40872b
  408791:	cmp    al,0x7
  408793:	std    
  408794:	add    BYTE PTR [eax],dh
  408796:	mov    edx,0x61d51242
  40879b:	test   DWORD PTR [ebp-0x4ce86ffd],ecx
  4087a1:	lahf   
  4087a2:	pushf  
  4087a3:	dec    esi
  4087a4:	rcl    BYTE PTR [ecx+eiz*4-0x21],cl
  4087a8:	adc    DWORD PTR [eax+0x6f713087],edx
  4087ae:	xchg   ebx,eax
  4087af:	jb     0x408746
  4087b1:	xor    al,0xe4
  4087b3:	addr16 aam 0x4a
  4087b6:	mov    ds:0x1eda9030,al
  4087bb:	push   cs
  4087bc:	lea    ecx,[ebp+0x2b]
  4087bf:	mov    WORD PTR [esi],cs
  4087c1:	lods   eax,DWORD PTR ds:[esi]
  4087c2:	les    edi,FWORD PTR [eax+0x26]
  4087c5:	cli    
  4087c6:	cdq    
  4087c7:	popa   
  4087c8:	cmp    ebp,DWORD PTR [esi+0x3625c7e9]
  4087ce:	mov    ds:0xabeafaa2,eax
  4087d3:	jmp    0x24b5ed74
  4087d8:	in     eax,dx
  4087d9:	and    ebx,edi
  4087db:	mov    ebp,0xae58d5d4
  4087e0:	faddp  st(5),st
  4087e2:	or     al,0x11
  4087e4:	cdq    
  4087e5:	test   al,0x1a
  4087e7:	lahf   
  4087e8:	pop    eax
  4087e9:	xchg   edi,eax
  4087ea:	fist   WORD PTR gs:[edx-0x35]
  4087ee:	adc    DWORD PTR [ebx],edi
  4087f0:	mov    ss,WORD PTR [ebp-0x2b]
  4087f3:	sbb    eax,0x6d5c49c
  4087f8:	sbb    al,0x3d
  4087fa:	xor    ebx,DWORD PTR [ecx]
  4087fc:	sub    ecx,DWORD PTR [eax+0xae77baf]
  408802:	xor    eax,0xac92ee3d
  408807:	rcr    bh,1
  408809:	cmp    dh,bl
  40880b:	mov    DWORD PTR [ebp+0x7af0b7a8],ebp
  408811:	sar    BYTE PTR [edx-0x5df312f3],1
  408817:	scas   al,BYTE PTR es:[edi]
  408818:	xchg   edi,ecx
  40881a:	ror    cl,0x62
  40881d:	inc    esi
  40881e:	jg     0x40880c
  408820:	inc    ecx
  408821:	mov    ecx,DWORD PTR [ecx]
  408823:	mov    ah,0x75
  408825:	push   edi
  408826:	xchg   DWORD PTR [ecx],ebx
  408828:	inc    ecx
  408829:	mov    BYTE PTR [edx-0x16],al
  40882c:	push   ebp
  40882d:	ja     0x4087ca
  40882f:	or     edx,ebp
  408831:	std    
  408832:	mov    edx,0xc8818858
  408837:	inc    ebx
  408838:	in     eax,dx
  408839:	inc    ebp
  40883a:	adc    eax,0x4b5dab4a
  40883f:	repz fcom DWORD PTR ds:0x8b4f5500
  408846:	test   BYTE PTR [edi+0x43711f7e],cl
  40884c:	or     ebx,DWORD PTR [esi]
  40884e:	jae    0x40883e
  408850:	aaa    
  408851:	or     eax,0x9f0434b3
  408856:	xor    BYTE PTR [esi-0x5d],dl
  408859:	push   ebp
  40885a:	fdivrp st(0),st
  40885c:	push   ebx
  40885d:	mov    bl,0xbe
  40885f:	adc    cl,BYTE PTR [ebx+0x26]
  408862:	mov    BYTE PTR [ebp-0x7b129132],dh
  408868:	rol    bl,1
  40886a:	hlt    
  40886b:	push   0x6609a68
  408870:	xchg   edi,eax
  408871:	jae    0x4088cd
  408873:	mov    edx,0xbd41b6b8
  408878:	push   eax
  408879:	cmp    eax,0x67cbd75c
  40887e:	add    ecx,DWORD PTR [eax]
  408880:	add    bl,0x10
  408883:	jno    0x408865
  408885:	xchg   edx,eax
  408886:	cmp    al,0x37
  408888:	jl     0x408829
  40888a:	xchg   ah,dl
  40888c:	or     BYTE PTR [ecx+esi*2],dh
  40888f:	lea    edx,[edx]
  408891:	popa   
  408892:	cmp    eax,0x1dc60434
  408897:	dec    eax
  408898:	out    0x99,eax
  40889a:	and    BYTE PTR [ebx-0x55b9ed0f],ah
  4088a0:	inc    ebp
  4088a1:	popa   
  4088a2:	xchg   BYTE PTR [edi-0x2dc14375],bl
  4088a8:	iret   
  4088a9:	(bad)  
  4088aa:	in     eax,0x4e
  4088ac:	mov    esp,0x43e605d0
  4088b1:	stos   BYTE PTR es:[edi],al
  4088b2:	pop    ss
  4088b3:	arpl   WORD PTR [esi],ax
  4088b5:	sahf   
  4088b6:	ins    BYTE PTR es:[edi],dx
  4088b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088b8:	repz das 
  4088ba:	mov    eax,0x3f04ab2b
  4088bf:	cmp    DWORD PTR [eax-0x1555293d],0x9bcd6b4a
  4088c9:	fsub   DWORD PTR [ebx-0x5db99cf1]
  4088cf:	hlt    
  4088d0:	push   ebx
  4088d1:	xchg   edi,eax
  4088d2:	shl    DWORD PTR [ebx],1
  4088d4:	popf   
  4088d5:	call   0x132f:0xcb789b01
  4088dc:	jecxz  0x40887a
  4088de:	mov    ebp,0xae2a08a3
  4088e3:	stos   BYTE PTR es:[edi],al
  4088e4:	aaa    
  4088e5:	jl     0x4088a8
  4088e7:	mov    ch,ch
  4088e9:	stos   DWORD PTR es:[edi],eax
  4088ea:	sub    al,BYTE PTR [edx+0x7d]
  4088ed:	adc    esp,ecx
  4088ef:	out    dx,eax
  4088f0:	push   cs
  4088f1:	div    BYTE PTR [eax]
  4088f3:	dec    esp
  4088f4:	into   
  4088f5:	in     al,dx
  4088f6:	jmp    0xcfa021dc
  4088fb:	sub    dh,ch
  4088fd:	xchg   DWORD PTR [ebp-0xa179e16],edx
  408903:	gs jle 0x4088d9
  408906:	adc    al,0x80
  408908:	subps  xmm6,XMMWORD PTR [eax-0x570ddeef]
  40890f:	cmp    eax,0xe2b6e8ac
  408914:	push   0xffffff9c
  408916:	dec    esi
  408917:	add    al,0xb6
  408919:	fdiv   DWORD PTR [ecx+0x7b91c8ed]
  40891f:	das    
  408920:	outs   dx,DWORD PTR ds:[esi]
  408921:	jns    0x408960
  408923:	imul   ebp,DWORD PTR [eax+0xd1d536],0x59
  40892a:	inc    esp
  40892b:	enter  0xab67,0x98
  40892f:	imul   ebp,DWORD PTR [edx-0x6cbed4f6],0xb8bb00a
  408939:	mov    al,ds:0x48d76a70
  40893e:	pop    edi
  40893f:	jle    0x408982
  408941:	das    
  408942:	cmp    eax,0x114cf5c2
  408947:	dec    esi
  408948:	aam    0x5d
  40894a:	xchg   edx,eax
  40894b:	sbb    edx,DWORD PTR [ecx-0x55f45075]
  408951:	inc    esp
  408952:	mov    al,ds:0xc9ab7129
  408957:	in     eax,dx
  408958:	lods   al,BYTE PTR ds:[esi]
  408959:	dec    edx
  40895a:	aaa    
  40895b:	pop    es
  40895c:	push   eax
  40895d:	jmp    0xadd17cc6
  408962:	pop    esi
  408963:	mov    WORD PTR [ebp-0x3],?
  408966:	add    BYTE PTR [ebp-0x36],cl
  408969:	retf   
  40896a:	call   FWORD PTR [ebx-0x64]
  40896d:	xchg   esi,eax
  40896e:	mov    cl,0x96
  408970:	sar    BYTE PTR [ebx-0x62ed6989],cl
  408976:	rcr    DWORD PTR ds:0x3224b382,1
  40897c:	loope  0x40895e
  40897e:	mov    WORD PTR [esi-0x54a28572],?
  408984:	pop    edi
  408985:	imul   edx,DWORD PTR [eax-0x5a],0xd9693a0a
  40898c:	test   eax,0x6cb4f4f3
  408991:	push   ebx
  408992:	pop    edi
  408993:	cmp    ecx,DWORD PTR [eax+edx*8-0x473becd5]
  40899a:	and    cl,BYTE PTR [ebp+0x14]
  40899d:	jns    0x4089c0
  40899f:	into   
  4089a0:	mov    ds:0xf8cc4d1f,al
  4089a5:	mov    ecx,0x5f29b2ad
  4089aa:	cmp    eax,0xa87bcee3
  4089af:	cli    
  4089b0:	inc    ebp
  4089b1:	sbb    al,0x9f
  4089b3:	fisttp DWORD PTR [esi-0x30]
  4089b6:	dec    ecx
  4089b7:	and    ebp,0x5e8e47be
  4089bd:	xor    DWORD PTR [ebp+0x7f],0xbca6fe19
  4089c4:	scas   al,BYTE PTR es:[edi]
  4089c5:	js     0x4089ff
  4089c7:	xor    DWORD PTR ds:0xe497875e,eax
  4089cd:	sti    
  4089ce:	retf   0x8d35
  4089d1:	lods   eax,DWORD PTR ds:[esi]
  4089d2:	shl    bl,1
  4089d4:	xchg   edi,eax
  4089d5:	and    eax,DWORD PTR [ebp-0x1029de4b]
  4089db:	jl     0x408965
  4089dd:	repz pop ds
  4089df:	jo     0x408986
  4089e1:	arpl   WORD PTR [edx],bx
  4089e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089e4:	inc    ecx
  4089e5:	hlt    
  4089e6:	add    ch,BYTE PTR [edx-0x71728b17]
  4089ec:	(bad)  
  4089ef:	jp     0x408a3c
  4089f1:	mov    dl,0xcf
  4089f3:	dec    edi
  4089f4:	jp     0x408986
  4089f6:	push   ss
  4089f7:	dec    eax
  4089f8:	push   esi
  4089f9:	fwait
  4089fa:	jno    0x408a05
  4089fc:	stos   BYTE PTR es:[edi],al
  4089fd:	es cmp al,0xd6
  408a00:	mov    al,0x23
  408a02:	gs sti 
  408a04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a05:	pop    edx
  408a06:	xchg   esp,eax
  408a07:	cs sbb eax,0xe4d0f358
  408a0d:	mov    bh,0xec
  408a0f:	mov    ebp,ebp
  408a11:	dec    DWORD PTR [ecx]
  408a13:	jo     0x408a03
  408a15:	popa   
  408a16:	push   0xffffffa0
  408a18:	ror    BYTE PTR [eax+eiz*2+0x44],1
  408a1c:	mov    cl,al
  408a1e:	mov    edi,0x5fbe1581
  408a23:	sbb    BYTE PTR [esi-0x2a0d6843],dl
  408a29:	sub    dl,BYTE PTR [edx-0x5e87108b]
  408a2f:	in     al,dx
  408a30:	push   ecx
  408a31:	scas   eax,DWORD PTR es:[edi]
  408a32:	pop    ebx
  408a33:	mov    es,WORD PTR [edi-0x31]
  408a36:	push   ss
  408a37:	or     ebx,eax
  408a39:	sub    eax,0xb0f3dcb6
  408a3e:	mov    WORD PTR [ebx+0x3a],?
  408a41:	add    ebx,eax
  408a43:	dec    edx
  408a44:	(bad)  
  408a45:	sti    
  408a46:	push   es
  408a47:	ret    
  408a48:	inc    esi
  408a49:	jp     0x408aad
  408a4b:	shr    BYTE PTR [edx],1
  408a4d:	ja     0x408a5a
  408a4f:	popa   
  408a50:	adc    BYTE PTR [ebx-0x15],0x1
  408a54:	xor    edx,DWORD PTR [ebx]
  408a56:	and    eax,0x9c5db81e
  408a5b:	aad    0xed
  408a5d:	scas   al,BYTE PTR es:[edi]
  408a5e:	jle    0x408a86
  408a60:	outs   dx,BYTE PTR ds:[esi]
  408a61:	test   ah,bh
  408a63:	shr    BYTE PTR [esp+esi*2-0x613ede07],0xab
  408a6b:	dec    esi
  408a6c:	aas    
  408a6d:	mov    bh,cl
  408a6f:	xor    DWORD PTR [ebx+0x45],esi
  408a72:	cmp    DWORD PTR [ecx-0x6338b21d],ebp
  408a78:	data16 ror BYTE PTR [edx+0x6f],cl
  408a7c:	lods   al,BYTE PTR ds:[esi]
  408a7d:	std    
  408a7e:	and    ch,BYTE PTR [ebp+0x1e3ab5e1]
  408a84:	stos   BYTE PTR es:[edi],al
  408a85:	pop    ds
  408a86:	mov    ebx,0x713bc7cd
  408a8b:	mov    bl,0x76
  408a8d:	adc    edx,DWORD PTR [ecx-0x28]
  408a90:	jmp    0x408a15
  408a92:	loope  0x408a88
  408a94:	mov    eax,ds:0xfb698325
  408a99:	and    al,0x32
  408a9b:	or     eax,0xbbc6ff5e
  408aa0:	pop    ebp
  408aa1:	test   eax,0x83ef9510
  408aa6:	jmp    0xee76:0x34a96a18
  408aad:	ror    DWORD PTR ds:0x59fcddd8,cl
  408ab3:	daa    
  408ab4:	sbb    bl,BYTE PTR [edi]
  408ab6:	arpl   WORD PTR [ebx-0x455d55a2],bp
  408abc:	xor    BYTE PTR [ebp+0x4c],dh
  408abf:	stc    
  408ac0:	dec    esp
  408ac1:	dec    ecx
  408ac2:	jl     0x408a62
  408ac4:	scas   al,BYTE PTR es:[edi]
  408ac5:	mov    ebp,0x7e3e712e
  408aca:	inc    ebx
  408acb:	pop    ebx
  408acc:	mov    al,ds:0x52da4cf7
  408ad1:	(bad)
  408ad4:	inc    edi
  408ad5:	sbb    ch,cl
  408ad7:	add    eax,DWORD PTR [ecx-0x1d]
  408ada:	pusha  
  408adb:	push   edi
  408adc:	shl    DWORD PTR [ecx-0x6c],1
  408adf:	and    eax,0x57f5694e
  408ae4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ae5:	mov    cs,WORD PTR [ebp-0x6be221d2]
  408aeb:	loop   0x408ae4
  408aed:	retf   
  408aee:	jbe    0x408a99
  408af0:	pushf  
  408af1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408af2:	and    al,BYTE PTR [ebx+0x20]
  408af5:	aaa    
  408af6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408af7:	and    esp,DWORD PTR [ecx+0x2e20c50f]
  408afd:	xchg   ebp,ebx
  408aff:	adc    BYTE PTR [edx],dl
  408b01:	into   
  408b02:	push   0x6ab2917f
  408b07:	cmp    DWORD PTR [esi],eax
  408b09:	add    BYTE PTR [eax-0x1b],al
  408b0c:	jmp    0x2b80:0x3793c47a
  408b13:	outs   dx,DWORD PTR ds:[esi]
  408b14:	imul   ebp,DWORD PTR [edi+0x564a3c2],0x7f
  408b1b:	jo     0x408b6c
  408b1d:	sub    DWORD PTR [edx+0x22],edi
  408b20:	dec    edi
  408b21:	push   ss
  408b22:	(bad)  
  408b23:	jmp    0xaa35ca6d
  408b28:	adc    DWORD PTR [ecx],0x28
  408b2b:	aas    
  408b2c:	aad    0x93
  408b2e:	loop   0x408ad9
  408b30:	dec    edi
  408b31:	aas    
  408b32:	or     al,0xaf
  408b34:	jb     0x408bb4
  408b36:	jge    0x408ba8
  408b38:	out    0x92,eax
  408b3a:	dec    ebx
  408b3b:	mov    esp,0x5084ed4a
  408b40:	xor    BYTE PTR [ebx-0x22],0xf
  408b44:	mov    ds:0x820f22b2,al
  408b49:	test   al,0xa4
  408b4b:	mov    al,ds:0x95e28e03
  408b50:	mov    cl,0x7b
  408b52:	loop   0x408b0d
  408b54:	fild   DWORD PTR [edi]
  408b56:	mov    eax,ds:0xd916c1cc
  408b5b:	push   esi
  408b5c:	sub    bh,BYTE PTR [ebp-0x1b]
  408b5f:	sub    eax,0xff1cf325
  408b64:	jge    0x408b9e
  408b66:	mov    ch,0x7f
  408b68:	rcr    DWORD PTR ds:0x4139c367,1
  408b6e:	dec    edx
  408b6f:	ja     0x408b36
  408b71:	inc    eax
  408b72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b73:	or     edi,ebp
  408b75:	push   esi
  408b76:	add    ch,BYTE PTR [edi+0x768804a3]
  408b7c:	push   edx
  408b7d:	into   
  408b7e:	je     0x408b36
  408b80:	aam    0x84
  408b82:	pop    ebx
  408b83:	dec    edx
  408b84:	aad    0x2
  408b86:	gs test eax,0x84cfe698
  408b8c:	push   ds
  408b8d:	jno    0x408bd5
  408b8f:	sbb    dl,BYTE PTR [edi]
  408b91:	in     eax,0x2e
  408b93:	or     DWORD PTR [eax+0x28],0x75
  408b97:	add    BYTE PTR [ecx+0x40],ch
  408b9a:	sub    esp,ebx
  408b9c:	scas   al,BYTE PTR es:[edi]
  408b9d:	icebp  
  408b9e:	add    al,0xa4
  408ba0:	or     ecx,DWORD PTR [edi+0x44047639]
  408ba6:	shr    DWORD PTR [bp+0x1e15],0xd5
  408bac:	sbb    eax,0x6d0bcae7
  408bb1:	mov    edi,0xe6a90b73
  408bb6:	ins    BYTE PTR es:[edi],dx
  408bb7:	push   edx
  408bb8:	or     ch,ah
  408bba:	sub    eax,0x5790ad46
  408bbf:	mov    esi,0x56fc747f
  408bc4:	outs   dx,DWORD PTR ds:[esi]
  408bc5:	scas   eax,DWORD PTR es:[edi]
  408bc6:	adc    DWORD PTR [eax],edx
  408bc8:	ret    
  408bc9:	xchg   BYTE PTR [edi+0x29],bh
  408bcc:	or     bh,BYTE PTR [esi+0x1bad1971]
  408bd2:	jb     0x408c2f
  408bd4:	cmc    
  408bd5:	jo     0x408c00
  408bd7:	leave  
  408bd8:	jp     0x408b6f
  408bda:	jae    0x408c38
  408bdc:	gs cmc 
  408bde:	js     0x408c5f
  408be0:	std    
  408be1:	pop    edi
  408be2:	sbb    esi,DWORD PTR [edx]
  408be4:	adc    edx,DWORD PTR [edx+esi*1]
  408be7:	aaa    
  408be8:	push   edx
  408be9:	ja     0x408c49
  408beb:	jb     0x408c41
  408bed:	xor    edi,edi
  408bef:	add    al,0x94
  408bf1:	les    edx,FWORD PTR [ecx+edi*2+0x3c]
  408bf5:	pop    ecx
  408bf6:	scas   al,BYTE PTR es:[edi]
  408bf7:	mov    ch,0x93
  408bf9:	or     eax,0x6d9a5e97
  408bfe:	sbb    BYTE PTR [esi+0x20bb2807],ah
  408c04:	sub    edi,DWORD PTR cs:[eax-0x316d6345]
  408c0b:	mov    al,0x68
  408c0d:	in     al,dx
  408c0e:	mov    eax,0x7baea055
  408c13:	pop    esp
  408c14:	gs js  0x408bf6
  408c17:	mov    cl,0xcc
  408c19:	pop    es
  408c1a:	adc    ebx,DWORD PTR [edi]
  408c1c:	mov    WORD PTR [eax+esi*2],es
  408c1f:	leave  
  408c20:	xchg   ebx,eax
  408c21:	pop    ds
  408c22:	test   DWORD PTR [edi+edx*8+0x39f368c9],ebp
  408c29:	call   0x993d:0xeb2a108b
  408c30:	mov    edx,0x885332b9
  408c35:	ins    DWORD PTR es:[edi],dx
  408c36:	pop    ds
  408c37:	inc    esp
  408c38:	inc    edi
  408c39:	mov    esp,0x774cc125
  408c3e:	and    edi,edx
  408c40:	jmp    0xf3b8ab5
  408c45:	aad    0xf8
  408c47:	int    0x5d
  408c49:	adc    cl,BYTE PTR [ebp+0x68]
  408c4c:	xchg   edx,eax
  408c4d:	pop    ecx
  408c4e:	sub    edi,esp
  408c50:	loopne 0x408c43
  408c52:	rcr    al,cl
  408c54:	jmp    0x408c88
  408c56:	sub    edx,DWORD PTR [eax]
  408c58:	xchg   esi,eax
  408c59:	mov    DWORD PTR [eax-0x5a],esp
  408c5c:	and    DWORD PTR [ebx],0xfffffff9
  408c5f:	jnp    0x408c59
  408c61:	call   0x81b9f274
  408c66:	in     eax,0xd8
  408c68:	cmp    dh,dh
  408c6a:	lock mov BYTE PTR [ecx-0x35fea325],bl
  408c71:	(bad)  
  408c72:	sbb    ebp,DWORD PTR [eax]
  408c74:	into   
  408c75:	leave  
  408c76:	xor    dl,BYTE PTR [eax+0x60a87bfa]
  408c7c:	xor    BYTE PTR [esp+eax*1+0x28],ch
  408c80:	push   ecx
  408c81:	lahf   
  408c82:	mov    esp,0x7cf75d5f
  408c87:	sbb    esp,ebp
  408c89:	mov    eax,fs:0xd8bb1175
  408c8f:	push   esi
  408c90:	mov    eax,ds:0xf9c04748
  408c95:	push   esp
  408c96:	test   DWORD PTR [esi-0x4538b364],ebp
  408c9c:	sbb    eax,esp
  408c9e:	nop
  408c9f:	test   al,0xf8
  408ca1:	jbe    0x408ccd
  408ca3:	out    dx,al
  408ca4:	cld    
  408ca5:	cmp    al,0xbd
  408ca7:	mov    ebp,?
  408ca9:	xor    BYTE PTR [esi+0x372e5355],cl
  408caf:	lds    ebx,FWORD PTR [ebx-0xf]
  408cb2:	dec    ebx
  408cb3:	sub    DWORD PTR [ebp+0x45d97e91],0x41
  408cba:	jnp    0x408c90
  408cbc:	gs ins DWORD PTR es:[edi],dx
  408cbe:	mov    WORD PTR [esi+0x7eb4af34],ss
  408cc4:	lods   al,BYTE PTR ds:[esi]
  408cc5:	in     eax,0x89
  408cc7:	jp     0x408c75
  408cc9:	add    BYTE PTR [esp+edx*2-0xc],cl
  408ccd:	mov    cl,0xb9
  408ccf:	out    dx,eax
  408cd0:	popa   
  408cd1:	ja     0x408ccb
  408cd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cd4:	add    DWORD PTR [esi],eax
  408cd6:	int3   
  408cd7:	mov    ch,0xf5
  408cd9:	add    cl,dl
  408cdb:	dec    edi
  408cdc:	out    dx,al
  408cdd:	stos   BYTE PTR es:[edi],al
  408cde:	xor    eax,0xad8dc1a
  408ce3:	mov    DWORD PTR [edx+ecx*1-0x3bc20a8c],eax
  408cea:	mov    ch,0xc
  408cec:	out    dx,eax
  408ced:	pop    edx
  408cee:	stc    
  408cef:	mov    ah,0xae
  408cf1:	or     edx,0xffffffa7
  408cf4:	in     eax,dx
  408cf5:	cmc    
  408cf6:	xor    al,0x17
  408cf8:	sbb    ecx,DWORD PTR [edx+0x349beb58]
  408cfe:	jo     0x408d35
  408d00:	cmp    DWORD PTR [edi-0x45648e30],0xb44d54eb
  408d0a:	nop
  408d0b:	add    BYTE PTR [esi+eiz*2-0x5d9d200e],ah
  408d12:	fs jae 0x408ce3
  408d15:	call   0xe98d:0xffb8db42
  408d1c:	(bad)  
  408d1d:	(bad)  
  408d1e:	gs adc eax,0x2faa127b
  408d24:	push   ebx
  408d25:	push   ebx
  408d26:	ds sub ebp,0x18
  408d2a:	cmc    
  408d2b:	mov    al,ds:0x34c2f2d5
  408d30:	inc    esp
  408d31:	aaa    
  408d32:	mov    ds:0x5f7109fc,eax
  408d37:	(bad)  
  408d38:	fs push 0xeba2ee8e
  408d3e:	fild   QWORD PTR [esi]
  408d40:	pop    ebx
  408d41:	mov    dl,0x34
  408d43:	inc    ecx
  408d44:	arpl   bx,dx
  408d46:	jl     0x408db3
  408d48:	xor    BYTE PTR [ecx],0x32
  408d4b:	mov    ebp,0x507e72ca
  408d50:	mov    dh,0xbe
  408d52:	shr    ah,0x67
  408d55:	std    
  408d56:	or     bh,dh
  408d58:	mov    bh,0xe1
  408d5a:	xchg   edi,eax
  408d5b:	mov    ah,0x61
  408d5d:	cld    
  408d5e:	es mov dl,0x18
  408d61:	dec    eax
  408d62:	jle    0x408d7f
  408d64:	ins    BYTE PTR es:[edi],dx
  408d65:	fwait
  408d66:	retf   0xd2e3
  408d69:	adc    BYTE PTR [ebx+ebp*8-0x700c6fb3],0x16
  408d71:	or     eax,0xabf89abd
  408d76:	dec    eax
  408d77:	loopne 0x408d8a
  408d79:	mov    ebx,0x83ab2408
  408d7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d7f:	ret    0x242f
  408d82:	in     eax,dx
  408d83:	repz cmc 
  408d85:	aaa    
  408d86:	pop    es
  408d87:	push   eax
  408d88:	pop    ecx
  408d89:	mov    DWORD PTR [edx+0x135bc8f4],0x3e64893b
  408d93:	dec    edi
  408d94:	and    eax,0x1a53ae03
  408d99:	imul   edx,esi,0xfffffff1
  408d9c:	mov    bh,0x17
  408d9e:	mov    al,ds:0x188682a9
  408da3:	inc    ebp
  408da4:	jmp    0x9fed9fe8
  408da9:	call   0xf4c4b4bf
  408dae:	fidivr WORD PTR [eax]
  408db0:	push   ds
  408db1:	cmp    al,0xcb
  408db3:	mov    cl,0x9d
  408db5:	ret    0xe4be
  408db8:	les    esp,FWORD PTR [eax]
  408dba:	sbb    BYTE PTR [edx-0x32],0x3b
  408dbe:	mov    edx,0xa663c9d3
  408dc3:	adc    ebp,DWORD PTR [edx]
  408dc5:	xchg   edi,eax
  408dc6:	int    0x44
  408dc8:	mov    cl,0x99
  408dca:	(bad)  
  408dcb:	inc    esp
  408dcc:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  408dce:	(bad)  
  408dcf:	into   
  408dd0:	rcr    ch,1
  408dd2:	fadd   st,st(3)
  408dd4:	or     DWORD PTR [ebp+ebx*2+0x4035aa1],edx
  408ddb:	jb     0x408e0d
  408ddd:	and    BYTE PTR [esi-0x13],cl
  408de0:	sahf   
  408de1:	and    DWORD PTR [eax-0x40],edx
  408de4:	jle    0x408e1c
  408de6:	inc    ebp
  408de7:	xchg   ecx,eax
  408de8:	repnz or BYTE PTR [ebp-0x72],cl
  408dec:	or     DWORD PTR [edx-0x680a9b19],ebp
  408df2:	test   BYTE PTR [ebp-0x71],ch
  408df5:	mov    esp,0xe6654c80
  408dfa:	popf   
  408dfb:	xor    DWORD PTR [edx-0xadb321c],0x2e
  408e02:	inc    ebp
  408e03:	dec    edx
  408e04:	fild   WORD PTR [edi+eiz*8-0x43a40e7]
  408e0b:	in     eax,dx
  408e0c:	inc    eax
  408e0d:	cld    
  408e0e:	in     al,0xbd
  408e10:	loope  0x408e40
  408e12:	xchg   ebp,eax
  408e13:	imul   edx,DWORD PTR [edx+0x32ddeb48],0x7bddb838
  408e1d:	call   0x959f:0xeb3c589e
  408e24:	ja     0x408e08
  408e26:	rcl    BYTE PTR [ebp-0x6f86d775],0xda
  408e2d:	xchg   esp,eax
  408e2e:	mov    fs,WORD PTR [edx]
  408e30:	and    dl,ah
  408e32:	ret    0x5288
  408e35:	adc    al,BYTE PTR [ebx]
  408e37:	(bad)  
  408e38:	xchg   ebx,eax
  408e39:	mov    bl,BYTE PTR [esi+0x29]
  408e3c:	cmp    eax,0xec86727c
  408e41:	lods   eax,DWORD PTR ds:[esi]
  408e42:	jae    0x408e44
  408e44:	std    
  408e45:	inc    edx
  408e46:	pop    ecx
  408e47:	xchg   ebp,eax
  408e48:	mov    esi,edx
  408e4a:	call   DWORD PTR [ecx-0x76bf724c]
  408e50:	jnp    0x408e2a
  408e52:	mov    al,ds:0x7578e936
  408e57:	sub    eax,DWORD PTR [ebp+0x26]
  408e5a:	inc    eax
  408e5b:	push   ebp
  408e5c:	stos   BYTE PTR es:[edi],al
  408e5d:	xlat   BYTE PTR ds:[ebx]
  408e5e:	out    0xcc,eax
  408e60:	loop   0x408e00
  408e62:	mov    WORD PTR [ebp+0x1c995af3],?
  408e68:	mov    eax,ds:0xa6c0eee2
  408e6d:	lods   eax,DWORD PTR ds:[esi]
  408e6e:	das    
  408e6f:	mov    ecx,0x3a8383e0
  408e74:	(bad)  
  408e75:	in     al,dx
  408e76:	jne    0x408e12
  408e78:	ss xor esi,edi
  408e7b:	lods   eax,DWORD PTR ds:[esi]
  408e7c:	mov    esp,0xa80aad75
  408e81:	test   DWORD PTR [edi-0x18],ecx
  408e84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e85:	ror    BYTE PTR [edi-0xf],0xe
  408e89:	fwait
  408e8a:	push   ecx
  408e8b:	addr16 dec eax
  408e8d:	mov    al,BYTE PTR [eax]
  408e8f:	push   edi
  408e90:	xor    ebp,DWORD PTR [eax-0x7b]
  408e93:	jns    0x408efd
  408e95:	aad    0x39
  408e97:	das    
  408e98:	ins    BYTE PTR es:[edi],dx
  408e99:	push   esp
  408e9a:	in     eax,0xba
  408e9c:	adc    ah,BYTE PTR [edx-0x34be2a79]
  408ea2:	es xchg ah,bl
  408ea5:	xchg   ebx,eax
  408ea6:	mov    al,cl
  408ea8:	mov    al,0xa9
  408eaa:	pop    ebx
  408eab:	pop    ds
  408eac:	cdq    
  408ead:	test   al,0x32
  408eaf:	or     dl,BYTE PTR [ecx]
  408eb1:	scas   al,BYTE PTR es:[edi]
  408eb2:	jmp    0x408e91
  408eb4:	xchg   esi,eax
  408eb5:	jecxz  0x408e79
  408eb7:	sub    al,0x3c
  408eb9:	xor    al,0xeb
  408ebb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ebc:	into   
  408ebd:	lds    esp,FWORD PTR [edi+0x4b]
  408ec0:	sahf   
  408ec1:	push   0x98b9de9c
  408ec6:	shr    BYTE PTR [ebx],1
  408ec8:	mov    al,0x7a
  408eca:	push   ds
  408ecb:	(bad)  
  408ecc:	in     eax,dx
  408ecd:	jnp    0x408f49
  408ecf:	mov    fs,WORD PTR [edi]
  408ed1:	jl     0x408f2e
  408ed3:	mov    ecx,0x5040ce87
  408ed8:	test   DWORD PTR [edx-0xf],edi
  408edb:	sub    BYTE PTR [ebp-0x2b0fcbc0],ah
  408ee1:	pop    ss
  408ee2:	push   es
  408ee3:	inc    ebx
  408ee4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ee5:	dec    eax
  408ee6:	call   0x4cc2:0xba697330
  408eed:	enter  0x54bb,0x93
  408ef1:	sti    
  408ef2:	sbb    BYTE PTR [ecx+ecx*2+0x34368b95],dh
  408ef9:	mov    ecx,0x4fcf2f0a
  408efe:	mov    edi,0x8a4808fd
  408f03:	add    DWORD PTR [edx],ebx
  408f05:	icebp  
  408f06:	xchg   DWORD PTR ds:0xfcf2c74d,esp
  408f0c:	pusha  
  408f0d:	out    0x82,eax
  408f0f:	xchg   esi,eax
  408f10:	jecxz  0x408f69
  408f12:	push   esi
  408f13:	cmc    
  408f14:	pop    es
  408f15:	clc    
  408f16:	in     eax,0x94
  408f18:	imul   esp,DWORD PTR [edi-0x6eb49d87],0x5b
  408f1f:	hlt    
  408f20:	out    dx,eax
  408f21:	mov    edx,0x93e84a30
  408f26:	mov    edi,esp
  408f28:	imul   ebp,DWORD PTR [edx-0x53],0xffffffcd
  408f2c:	cmp    DWORD PTR [esi],edi
  408f2e:	(bad)  
  408f2f:	add    ecx,DWORD PTR [edx-0x5ccdc947]
  408f35:	jo     0x408f77
  408f37:	aad    0x10
  408f39:	adc    eax,0x3c7d103f
  408f3e:	push   0x53
  408f40:	ins    BYTE PTR es:[edi],dx
  408f41:	mov    ch,0x56
  408f43:	pop    esi
  408f44:	pop    esp
  408f45:	das    
  408f46:	and    eax,0x1b8371bb
  408f4b:	pop    esi
  408f4c:	and    DWORD PTR [ecx+eiz*2-0x2c8ed4c9],esi
  408f53:	loop   0x408f63
  408f55:	or     al,0x2
  408f57:	and    DWORD PTR [esi+ecx*8],eax
  408f5a:	push   edi
  408f5b:	mov    ecx,0xd37341e4
  408f60:	enter  0xa2e7,0x9f
  408f64:	aas    
  408f65:	add    cl,BYTE PTR [ebp+0x9f01f2c]
  408f6b:	mov    ebp,0xfee12e76
  408f70:	and    DWORD PTR [ecx],edi
  408f72:	fidiv  WORD PTR ds:0x4491c909
  408f78:	pop    eax
  408f79:	in     al,0xd
  408f7b:	add    al,0xca
  408f7d:	fadd   DWORD PTR [eax-0x42]
  408f80:	jbe    0x408fdd
  408f82:	and    ebp,DWORD PTR [eax-0x166f55ce]
  408f88:	push   eax
  408f89:	sti    
  408f8a:	imul   ebx,DWORD PTR [edi+0x18f53301],0xee75b280
  408f94:	jl     0x408f40
  408f96:	loopne 0x408f1a
  408f98:	test   DWORD PTR [edi-0x68],esp
  408f9b:	into   
  408f9c:	pop    DWORD PTR ds:0xfcfa8fff
  408fa2:	sub    eax,DWORD PTR [edi+0x49537b]
  408fa8:	ja     0x408f4a
  408faa:	xchg   ebp,eax
  408fab:	hlt    
  408fac:	stos   DWORD PTR es:[edi],eax
  408fad:	int    0xef
  408faf:	jmp    0x408f3d
  408fb1:	mov    edi,0xa09afdc5
  408fb6:	add    esp,DWORD PTR [ebp+0x47]
  408fb9:	lahf   
  408fba:	inc    edi
  408fbb:	rol    BYTE PTR ds:0x5ad96054,cl
  408fc1:	add    ch,bl
  408fc3:	imul   ebx,DWORD PTR [edi],0x940bd757
  408fc9:	ss enter 0x20c8,0xf0
  408fce:	sub    BYTE PTR [edi],bh
  408fd0:	sub    ebx,DWORD PTR [esi-0x8]
  408fd3:	ds loope 0x409026
  408fd6:	push   edi
  408fd7:	imul   eax,DWORD PTR [eax-0x24e3ac0f],0x3e403dcf
  408fe1:	fwait
  408fe2:	aad    0x7b
  408fe4:	sti    
  408fe5:	and    eax,0x339112f2
  408fea:	aaa    
  408feb:	and    eax,0x87a478e3
  408ff0:	pop    ebx
  408ff1:	add    edx,DWORD PTR [edx+edi*2-0x39]
  408ff5:	fcmovnbe st,st(3)
  408ff7:	xor    edi,DWORD PTR ds:[esi+ecx*8]
  408ffb:	pop    edx
  408ffc:	jp     0x40907b
  408ffe:	sbb    ch,BYTE PTR [esi-0x1a]
  409001:	out    0x7f,eax
  409003:	int    0x8a
  409005:	hlt    
  409006:	cmp    eax,0x80f59a88
  40900b:	xchg   DWORD PTR ds:0x3fe249b8,ebx
  409011:	sbb    esi,DWORD PTR [ebx-0x3d47e394]
  409017:	sbb    al,BYTE PTR [edx+0x5d125fe6]
  40901d:	pop    ds
  40901e:	inc    esp
  40901f:	mov    bh,0xb
  409021:	fcmovnbe st,st(6)
  409023:	aas    
  409024:	stos   DWORD PTR es:[edi],eax
  409025:	hlt    
  409026:	xor    al,0xa8
  409028:	mov    ecx,0x90bd4a05
  40902d:	push   esi
  40902e:	stos   BYTE PTR es:[edi],al
  40902f:	jno    0x408ff4
  409031:	mov    ds:0xe974feda,eax
  409036:	xchg   edx,eax
  409037:	xchg   BYTE PTR [esi],ah
  409039:	cli    
  40903a:	popf   
  40903b:	dec    ebp
  40903c:	add    eax,0xea4770f4
  409041:	je     0x4090a7
  409043:	xor    esp,DWORD PTR [esi+0x30a989ce]
  409049:	adc    eax,0xc626d153
  40904e:	xchg   esi,eax
  40904f:	fdivr  DWORD PTR ds:0xea2941c8
  409055:	cdq    
  409056:	add    al,0x6f
  409058:	sbb    al,0xdd
  40905a:	aaa    
  40905b:	add    ecx,DWORD PTR [edi]
  40905d:	lea    eax,[ecx-0x3c]
  409060:	rcl    BYTE PTR [edi-0x4b],0xe9
  409064:	xchg   ebp,eax
  409065:	not    DWORD PTR [eax+0x68e700b9]
  40906b:	xchg   ebp,eax
  40906c:	push   0x19d24a3c
  409071:	and    DWORD PTR [ecx-0x374b3347],0x44
  409078:	push   es
  409079:	nop    DWORD PTR [edx]
  40907c:	mul    esp
  40907e:	pop    eax
  40907f:	scas   al,BYTE PTR es:[edi]
  409080:	pop    ebx
  409081:	stos   BYTE PTR es:[edi],al
  409082:	cmp    bl,BYTE PTR [ecx-0x120f3621]
  409088:	push   ebx
  409089:	dec    esi
  40908a:	pop    esi
  40908b:	mov    cs,WORD PTR [edi+0x78]
  40908e:	inc    edi
  40908f:	mov    eax,ds:0xc3303195
  409094:	adc    bh,BYTE PTR [esi+0x5c9bdff6]
  40909a:	fs call 0x454c7861
  4090a0:	ja     0x4090f1
  4090a2:	and    eax,DWORD PTR [edi-0x55]
  4090a5:	pop    edi
  4090a6:	out    dx,eax
  4090a7:	xor    al,0xab
  4090a9:	xor    dh,BYTE PTR [eax+ecx*4-0x46]
  4090ad:	ds sbb ebp,eax
  4090b0:	aad    0x2a
  4090b2:	push   ds
  4090b3:	adc    eax,0x11d87399
  4090b8:	mov    cl,0x12
  4090ba:	(bad)  
  4090bb:	jno    0x4090ec
  4090bd:	dec    esi
  4090be:	fwait
  4090bf:	in     eax,dx
  4090c0:	fwait
  4090c1:	ja     0x40906e
  4090c3:	jmp    0x409067
  4090c5:	test   DWORD PTR [esi+0x22],ecx
  4090c8:	mov    ah,cl
  4090ca:	inc    esi
  4090cb:	idiv   DWORD PTR [esi]
  4090cd:	adc    BYTE PTR [ebp-0x33da855f],0xc9
  4090d4:	cdq    
  4090d5:	into   
  4090d6:	mov    BYTE PTR [edx-0x4c],al
  4090d9:	add    DWORD PTR [edx],edi
  4090db:	sbb    eax,0x94dab9f9
  4090e0:	xchg   ebp,eax
  4090e1:	loop   0x409083
  4090e3:	je     0x409073
  4090e5:	dec    eax
  4090e6:	rcr    DWORD PTR [ebp-0x57b9052d],0x5d
  4090ed:	jp     0x40907c
  4090ef:	out    dx,al
  4090f0:	retf   
  4090f1:	(bad)  
  4090f2:	ins    DWORD PTR es:[edi],dx
  4090f3:	sti    
  4090f4:	ds jbe 0x4090ac
  4090f7:	ret    
  4090f8:	popa   
  4090f9:	icebp  
  4090fa:	pop    ebx
  4090fb:	stos   BYTE PTR es:[edi],al
  4090fc:	push   edi
  4090fd:	mov    DWORD PTR [esi-0x4f],ebx
  409100:	lock xchg ebx,eax
  409102:	mov    cl,BYTE PTR fs:[esi+0x44a3e544]
  409109:	fistp  WORD PTR [ebp-0x611d7673]
  40910f:	test   al,0xd9
  409111:	jbe    0x409113
  409113:	fwait
  409114:	add    DWORD PTR [ebx],0xffffffaa
  409117:	mov    ebx,0x877f0c44
  40911c:	cmpps  xmm5,XMMWORD PTR [edi],0x43
  409120:	cli    
  409121:	sub    al,0x7a
  409123:	int3   
  409124:	mov    al,ds:0xfaf8593
  409129:	idiv   DWORD PTR [ecx-0x3f]
  40912c:	int    0xff
  40912e:	loopne 0x409103
  409130:	mov    WORD PTR [edx-0x46],ds
  409133:	xchg   esi,eax
  409134:	mov    al,0xcc
  409136:	or     eax,DWORD PTR [eax]
  409138:	and    al,BYTE PTR [ebx+0x199ac1]
  40913e:	cmp    BYTE PTR [ebx],dl
  409140:	lahf   
  409141:	mov    eax,ecx
  409143:	or     BYTE PTR [eax+0x75],ah
  409146:	(bad)  
  409147:	out    0xf3,al
  409149:	in     al,0x23
  40914b:	inc    esi
  40914c:	in     al,dx
  40914d:	push   ss
  40914e:	mov    al,0xf1
  409150:	outs   dx,BYTE PTR ds:[esi]
  409151:	adc    DWORD PTR [ebx+0x6e],edx
  409154:	cmc    
  409155:	sti    
  409156:	xchg   esi,eax
  409157:	in     eax,0x1d
  409159:	add    BYTE PTR [ebp+0x66],bl
  40915c:	pop    edx
  40915d:	inc    ecx
  40915e:	lds    eax,FWORD PTR [edi]
  409160:	add    eax,0xd520eaab
  409165:	fsubr  DWORD PTR [eax-0x12]
  409168:	mov    eax,ds:0xd5f2b498
  40916e:	(bad)  
  409170:	loope  0x4091c4
  409172:	jmp    0x409159
  409174:	cmp    ebp,DWORD PTR [ebx]
  409176:	mov    eax,0x8e263a37
  40917b:	jg     0x40919a
  40917d:	scas   al,BYTE PTR es:[edi]
  40917e:	pop    ecx
  40917f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409180:	lock jmp FWORD PTR [edx+0x3911b9a8]
  409187:	xchg   edi,eax
  409188:	arpl   WORD PTR ds:0xe2b034b8,si
  40918e:	dec    ecx
  40918f:	popa   
  409190:	fbld   TBYTE PTR [esi-0x4a58e07a]
  409196:	test   al,0xe9
  409198:	out    dx,al
  409199:	loop   0x40914d
  40919b:	mov    edi,0x3023ef34
  4091a0:	aas    
  4091a1:	mov    BYTE PTR [edi+0x203e3778],dl
  4091a7:	mov    bh,0x1a
  4091a9:	stos   DWORD PTR es:[edi],eax
  4091aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091ab:	mov    edx,0xa8eac957
  4091b0:	sub    bl,BYTE PTR [edx-0x2fb65af2]
  4091b6:	aaa    
  4091b7:	inc    esi
  4091b8:	jns    0x40921d
  4091ba:	cli    
  4091bb:	popa   
  4091bc:	adc    eax,0x9e89bf5b
  4091c1:	push   ebp
  4091c2:	out    dx,eax
  4091c3:	ror    BYTE PTR [ecx],1
  4091c5:	outs   dx,DWORD PTR ds:[esi]
  4091c6:	popf   
  4091c7:	push   0xaec91b3f
  4091cc:	in     al,0xe0
  4091ce:	jo     0x40924b
  4091d0:	scas   al,BYTE PTR es:[edi]
  4091d1:	sahf   
  4091d2:	scas   eax,DWORD PTR es:[edi]
  4091d3:	aas    
  4091d4:	inc    eax
  4091d5:	in     al,0x43
  4091d7:	dec    esi
  4091d8:	fsubr  QWORD PTR ds:0x8626418b
  4091de:	sub    bh,dl
  4091e0:	into   
  4091e1:	adc    edx,DWORD PTR [esi-0x55]
  4091e4:	push   0xffffffe1
  4091e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091e7:	nop
  4091e8:	test   eax,0x49b8fb26
  4091ed:	jbe    0x4091c3
  4091ef:	leave  
  4091f0:	pop    ebx
  4091f1:	out    dx,eax
  4091f2:	jno    0x409243
  4091f4:	shr    dl,cl
  4091f6:	das    
  4091f7:	call   0x5bdbb776
  4091fc:	sbb    ebx,DWORD PTR [ebx]
  4091fe:	in     eax,dx
  4091ff:	inc    ebp
  409200:	add    DWORD PTR [ecx+0x7e],0xffffffc7
  409204:	lock mov esp,0x83c93367
  40920a:	rol    bh,cl
  40920c:	in     eax,dx
  40920d:	in     eax,dx
  40920e:	push   0xffffffa3
  409210:	cdq    
  409211:	jl     0x4091f3
  409213:	xchg   esp,eax
  409214:	pop    esp
  409215:	iret   
  409216:	fdivr  QWORD PTR [esi-0x50]
  409219:	loop   0x4091e2
  40921b:	lods   al,BYTE PTR ds:[esi]
  40921c:	cmp    ah,dl
  40921e:	(bad)  
  40921f:	out    dx,eax
  409220:	inc    edx
  409221:	pop    edi
  409222:	fld    TBYTE PTR [ebp+eax*2+0x62]
  409226:	sbb    DWORD PTR [ecx],ebp
  409228:	pushf  
  409229:	idiv   DWORD PTR [edx-0x20]
  40922c:	mov    ds:0xc718d5e1,al
  409231:	ret    
  409232:	and    DWORD PTR [eax+0x5a],ecx
  409235:	xchg   BYTE PTR [edi],cl
  409237:	fistp  QWORD PTR [ebp-0xd5fe565]
  40923d:	pop    edi
  40923e:	push   0xdaed2206
  409243:	add    BYTE PTR [edi-0x3b3e66c6],cl
  409249:	pop    ebp
  40924a:	shr    DWORD PTR [eax],1
  40924c:	push   ds
  40924d:	mul    BYTE PTR [edx-0x47]
  409250:	lock xor DWORD PTR [esi-0x10],ecx
  409254:	add    eax,0x694a787e
  409259:	into   
  40925a:	(bad)  
  40925c:	mov    bh,0x9d
  40925e:	sbb    ch,BYTE PTR [ebp+0xa]
  409261:	cmc    
  409262:	sub    BYTE PTR [ecx+esi*8],ah
  409265:	nop
  409266:	loop   0x409228
  409268:	mov    ds:0x6e5f506,eax
  40926d:	add    ebx,ebp
  40926f:	and    ch,bl
  409271:	retf   
  409272:	repnz (bad) 
  409274:	sbb    BYTE PTR [ecx+0x44c19231],ah
  40927a:	and    al,BYTE PTR [ebx-0x64e517b]
  409280:	fs dec esi
  409282:	ret    
  409283:	je     0x409273
  409285:	dec    ecx
  409286:	adc    bl,BYTE PTR [ebx-0x49]
  409289:	inc    edx
  40928a:	mov    ch,0x9c
  40928c:	dec    edx
  40928d:	mov    ebp,esp
  40928f:	and    al,0xcd
  409291:	outs   dx,BYTE PTR ds:[esi]
  409292:	jmp    0x97669d7a
  409297:	mov    ebx,0x944e3fd6
  40929c:	imul   ebp,DWORD PTR [eax+eax*4-0x1958f2d7],0x5b4a4088
  4092a7:	push   esi
  4092a8:	xchg   ebp,eax
  4092a9:	xchg   DWORD PTR [ebx+0x12],esp
  4092ac:	push   eax
  4092ad:	mov    dh,0x9d
  4092af:	cs mov ecx,0xe9b242e0
  4092b5:	inc    ecx
  4092b6:	push   esi
  4092b7:	ror    DWORD PTR [edx+ebx*8-0x317cca88],cl
  4092be:	xchg   esp,eax
  4092bf:	and    DWORD PTR [esi-0x7],0x5e329d2c
  4092c6:	or     al,0x5f
  4092c8:	and    al,0x11
  4092ca:	pusha  
  4092cb:	das    
  4092cc:	sub    al,BYTE PTR [ebp-0x318c5a3a]
  4092d2:	ds out 0x8,al
  4092d5:	sub    eax,0x6417169e
  4092da:	adc    eax,0xe7664849
  4092df:	stos   DWORD PTR es:[edi],eax
  4092e0:	divps  xmm5,XMMWORD PTR [ebx+0x9]
  4092e4:	nop
  4092e5:	dec    esp
  4092e6:	and    dh,cl
  4092e8:	call   0x8735a921
  4092ed:	call   0xc21:0xed007571
  4092f4:	mul    DWORD PTR [edx]
  4092f6:	push   edi
  4092f7:	sbb    cl,BYTE PTR [edi+0x3b]
  4092fa:	push   ebp
  4092fb:	dec    edx
  4092fc:	cmp    BYTE PTR [edi+ebp*8+0x40],0xc8
  409301:	mov    DWORD PTR [eax+0xf],ebp
  409304:	outs   dx,BYTE PTR ds:[esi]
  409305:	pushf  
  409306:	cmp    ecx,ecx
  409308:	int3   
  409309:	shl    BYTE PTR [ebx-0x43],cl
  40930c:	pop    es
  40930d:	mov    bh,bl
  40930f:	xor    al,ah
  409311:	xchg   edx,eax
  409312:	fs cwde 
  409314:	add    eax,0x52166c50
  409319:	les    ecx,FWORD PTR [edi-0x4983c54e]
  40931f:	clc    
  409320:	jmp    0x4245:0xdd7aeb4a
  409327:	fcomip st,st(6)
  409329:	push   esi
  40932a:	mov    eax,ds:0xa34c97f0
  40932f:	je     0x40934f
  409331:	in     eax,dx
  409332:	xchg   edi,eax
  409333:	mov    ds:0x9685223d,al
  409338:	ret    
  409339:	cmp    dh,BYTE PTR [ebp+0x2b]
  40933c:	add    al,0x70
  40933e:	pop    esi
  40933f:	pop    esp
  409340:	or     dh,bl
  409342:	fs cli 
  409344:	mov    bl,0x36
  409346:	sbb    al,0xe7
  409348:	push   ds
  409349:	xchg   esi,eax
  40934a:	pop    ebx
  40934b:	cmp    DWORD PTR [ebx+ecx*4-0x28],edi
  40934f:	xlat   BYTE PTR ds:[ebx]
  409350:	addr16 or eax,0x8e10c300
  409356:	sub    BYTE PTR [eax+0x2e],cl
  409359:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40935b:	nop
  40935c:	jl     0x409317
  40935e:	daa    
  40935f:	(bad)  
  409361:	sbb    ch,BYTE PTR [edx]
  409363:	js     0x409339
  409365:	add    ebp,esp
  409367:	adc    DWORD PTR ds:0xcb0a092b,ecx
  40936d:	cmp    esp,ebx
  40936f:	repnz inc esp
  409371:	rcr    DWORD PTR [ecx-0x9],0x6b
  409375:	sahf   
  409376:	xor    DWORD PTR [ebx+0x7d],ebp
  409379:	in     al,dx
  40937a:	repz push ebx
  40937c:	sti    
  40937d:	cld    
  40937e:	sbb    ebp,esi
  409380:	test   al,0xcf
  409382:	cmp    ebx,ebp
  409384:	ret    0xabf4
  409387:	push   ecx
  409388:	jb     0x409399
  40938a:	mov    al,0x54
  40938c:	rcl    BYTE PTR [esi-0x32],cl
  40938f:	daa    
  409390:	(bad)
  409394:	vandps xmm6,xmm5,XMMWORD PTR [eax]
  409398:	xor    al,BYTE PTR [esi]
  40939a:	add    dl,ch
  40939c:	daa    
  40939d:	stos   BYTE PTR es:[edi],al
  40939e:	add    eax,0xe070ba3b
  4093a3:	dec    ebx
  4093a4:	sub    ecx,DWORD PTR [edx-0xbbd5eef]
  4093aa:	hlt    
  4093ab:	inc    ebx
  4093ac:	popf   
  4093ad:	xor    BYTE PTR [esi+ecx*2-0x52],0x66
  4093b2:	stos   DWORD PTR es:[edi],eax
  4093b3:	mov    ch,0xaf
  4093b5:	xor    DWORD PTR [ebx+0x13ddf490],esp
  4093bb:	xchg   edi,eax
  4093bc:	xchg   ebx,eax
  4093bd:	repnz push ss
  4093bf:	cmp    esi,DWORD PTR [ebp-0x4b]
  4093c2:	mov    ebx,0x8351c48e
  4093c7:	cld    
  4093c8:	pushf  
  4093c9:	add    dl,al
  4093cb:	loop   0x4093ce
  4093cd:	cli    
  4093ce:	adc    ebp,eax
  4093d0:	bound  eax,QWORD PTR [edx-0x3f]
  4093d3:	aaa    
  4093d4:	dec    ebx
  4093d5:	dec    edx
  4093d6:	cmp    al,BYTE PTR [ecx+eax*4+0x556753c8]
  4093dd:	jo     0x40939c
  4093df:	out    0x4,eax
  4093e1:	add    BYTE PTR [eax+0x5b128417],dl
  4093e7:	dec    ebx
  4093e8:	pop    edx
  4093e9:	sbb    edx,ecx
  4093eb:	pop    edi
  4093ec:	adc    BYTE PTR [edx],bl
  4093ee:	iret   
  4093ef:	xchg   ebp,eax
  4093f0:	mov    ebx,esp
  4093f2:	xlat   BYTE PTR ds:[ebx]
  4093f3:	addr16 loopne 0x4093e9
  4093f6:	mov    esi,0xc93fd9e2
  4093fb:	cmp    dl,ah
  4093fd:	mov    ebx,0x3bb68f72
  409402:	jp     0x409417
  409404:	xchg   dl,dl
  409406:	daa    
  409407:	iret   
  409408:	sub    al,BYTE PTR [ebp-0x7c]
  40940b:	xchg   ebx,eax
  40940c:	popf   
  40940d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40940e:	int3   
  40940f:	mov    esi,0x8eb12adc
  409414:	ss jecxz 0x4093c1
  409417:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409418:	push   ebx
  409419:	pop    DWORD PTR [esi]
  40941b:	pop    esi
  40941c:	adc    ch,BYTE PTR [eax]
  40941e:	sti    
  40941f:	mov    esi,0x6ac48447
  409424:	mov    ebp,0x45e73571
  409429:	add    eax,0xf23c6c64
  40942e:	mov    eax,ds:0x69f45172
  409433:	mov    ch,0x40
  409435:	loop   0x40941f
  409437:	enter  0x47c0,0x5c
  40943b:	mov    ch,0x3c
  40943d:	xor    BYTE PTR ds:0x7581b3ba,al
  409443:	pop    ss
  409444:	pusha  
  409445:	cdq    
  409446:	out    0x25,al
  409448:	add    DWORD PTR [edi+0x38],0x96294f13
  40944f:	dec    ecx
  409450:	mov    ds:0x71608206,al
  409455:	dec    edi
  409456:	sahf   
  409457:	xchg   esp,eax
  409458:	xchg   esp,eax
  409459:	xor    eax,0xe264a9e4
  40945e:	cmp    eax,0xf616af12
  409463:	cmp    eax,0xb47e5369
  409468:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409469:	xor    BYTE PTR [esi+ecx*2+0xed75631],0x95
  409471:	mov    bh,BYTE PTR [ecx-0x1b]
  409474:	call   0x4752:0x41afdc13
  40947b:	mov    al,ds:0x93c2a45
  409480:	and    DWORD PTR [ecx+ebx*8-0x69],ebp
  409484:	(bad)  
  409485:	inc    esp
  409486:	in     eax,dx
  409487:	mov    esi,ebp
  409489:	lock scas eax,DWORD PTR es:[edi]
  40948b:	mov    WORD PTR [ecx+0x2f],ss
  40948e:	imul   BYTE PTR [edi-0x7a]
  409491:	inc    edi
  409492:	les    ecx,FWORD PTR ds:0xb1487dd5
  409498:	icebp  
  409499:	dec    ebx
  40949a:	rcl    BYTE PTR [eax],0xd8
  40949d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40949e:	adc    DWORD PTR [edx],ecx
  4094a0:	je     0x409448
  4094a2:	or     bh,BYTE PTR [eax+0x14d7b27f]
  4094a8:	hlt    
  4094a9:	scas   eax,DWORD PTR es:[edi]
  4094aa:	test   DWORD PTR [esi],0x2c8581cc
  4094b0:	sbb    BYTE PTR [ebp+0x6a],ah
  4094b3:	dec    ebx
  4094b4:	stos   DWORD PTR es:[edi],eax
  4094b5:	popf   
  4094b6:	xor    BYTE PTR [edi+0x77a44b40],dl
  4094bc:	xchg   ebp,eax
  4094bd:	aam    0xfd
  4094bf:	loope  0x409459
  4094c1:	popa   
  4094c2:	lahf   
  4094c3:	add    al,BYTE PTR [edi+0x54]
  4094c6:	jge    0x4094bc
  4094c8:	fdivr  QWORD PTR [esi]
  4094ca:	dec    esp
  4094cb:	ret    
  4094cc:	or     al,0xbc
  4094ce:	cmp    BYTE PTR [ebp+esi*1-0x4abb2fa4],bl
  4094d5:	out    dx,al
  4094d6:	or     al,0x65
  4094d8:	inc    ecx
  4094d9:	cdq    
  4094da:	mov    ah,0xdf
  4094dc:	fsubr  DWORD PTR [esi]
  4094de:	fcomp  DWORD PTR [edx+0x240de7a0]
  4094e4:	test   eax,0xa6ac7ad7
  4094e9:	mov    dl,BYTE PTR [ebx+0x6265ad0b]
  4094ef:	sahf   
  4094f0:	test   eax,0x94defab
  4094f5:	je     0x409555
  4094f7:	jns    0x40949a
  4094f9:	add    dl,dl
  4094fb:	or     al,0xe8
  4094fd:	std    
  4094fe:	test   BYTE PTR [eax],0xd7
  409501:	cli    
  409502:	int    0x26
  409504:	popa   
  409505:	dec    edx
  409506:	in     al,dx
  409507:	sub    al,0xde
  409509:	ds dec esp
  40950b:	std    
  40950c:	sbb    al,0xcb
  40950e:	push   edx
  40950f:	je     0x409556
  409511:	pop    ebp
  409512:	inc    eax
  409513:	rol    DWORD PTR [edx+0x65],cl
  409516:	dec    ebx
  409517:	mov    ?,esi
  409519:	stc    
  40951a:	retf   
  40951b:	adc    BYTE PTR [edi],ch
  40951d:	sbb    BYTE PTR [eax+0x180d64ea],ah
  409523:	shl    ebp,1
  409525:	(bad)  [edi-0x80]
  409528:	mov    esi,0xddd22373
  40952d:	rcl    BYTE PTR [edx],cl
  40952f:	push   ss
  409530:	leave  
  409531:	pop    ebp
  409532:	adc    cl,BYTE PTR [ebp+0x22]
  409535:	mov    ecx,?
  409537:	adc    bh,al
  409539:	cmp    al,0x15
  40953b:	je     0x4094f6
  40953d:	mov    esp,0x85cf8653
  409542:	jo     0x4095b1
  409544:	jae    0x4094f4
  409546:	xchg   esp,eax
  409547:	sub    cl,ch
  409549:	adc    esi,DWORD PTR [edx]
  40954b:	sub    ah,al
  40954d:	jecxz  0x40958c
  40954f:	cld    
  409550:	loope  0x40956a
  409552:	dec    ebx
  409553:	ss mov es:0xac9ba3d0,eax
  40955a:	push   esp
  40955b:	push   edi
  40955c:	fucomip st,st(1)
  40955e:	push   0xffffff87
  409560:	pop    esp
  409561:	adc    DWORD PTR [eax+eax*8+0x38],ecx
  409565:	pop    ds
  409566:	jp     0x4095c2
  409568:	jmp    0xbc12:0xc88b2a17
  40956f:	lahf   
  409570:	and    eax,0x3c1d6d7e
  409575:	(bad)  
  409576:	and    eax,DWORD PTR [edx]
  409578:	jnp    0x4095df
  40957a:	ja     0x4095a3
  40957c:	jmp    0x596e:0x74bdc1e4
  409583:	add    BYTE PTR [esi-0x14],ch
  409586:	sbb    al,0x61
  409588:	test   BYTE PTR ds:0x988574a8,ah
  40958e:	inc    ebp
  40958f:	inc    esp
  409590:	nop
  409591:	imul   ecx,DWORD PTR [ebp+0x35],0xe51d4c80
  409598:	repz retf 0x5842
  40959c:	bnd jle 0x4095be
  40959f:	dec    edi
  4095a0:	mov    dl,0x32
  4095a2:	mov    ah,0x3f
  4095a4:	fs pop eax
  4095a6:	cs push edi
  4095a8:	aas    
  4095a9:	std    
  4095aa:	loope  0x4095fc
  4095ac:	fcmovb st,st(5)
  4095ae:	xor    al,0x6c
  4095b0:	mov    ch,0x76
  4095b2:	stc    
  4095b3:	fcomp  QWORD PTR ds:0x6710fa15
  4095b9:	push   edi
  4095ba:	jne    0x40955a
  4095bc:	dec    DWORD PTR [eax+ebx*4+0x56]
  4095c0:	dec    ebp
  4095c1:	and    ah,ch
  4095c3:	cmc    
  4095c4:	mov    bl,0xb9
  4095c6:	cmc    
  4095c7:	jno    0x409584
  4095c9:	enter  0x6dde,0x46
  4095cd:	pushf  
  4095ce:	mov    eax,0x4ed6d4e9
  4095d3:	ins    BYTE PTR es:[edi],dx
  4095d4:	or     BYTE PTR [edi-0x5a],dh
  4095d7:	(bad)  
  4095d8:	jle    0x409560
  4095da:	popf   
  4095db:	jge    0x4095d2
  4095dd:	push   ebx
  4095de:	out    dx,eax
  4095df:	push   ecx
  4095e0:	(bad)  
  4095e1:	and    DWORD PTR [edx+0x19f2990b],ebp
  4095e7:	push   eax
  4095e8:	fwait
  4095e9:	xchg   ecx,eax
  4095ea:	sub    al,0x73
  4095ec:	lods   al,BYTE PTR ds:[esi]
  4095ed:	mov    dh,0x9a
  4095ef:	repnz xchg edx,eax
  4095f1:	pop    ds
  4095f2:	dec    esi
  4095f3:	or     cl,dh
  4095f5:	fucomip st,st(6)
  4095f7:	iret   
  4095f8:	fidiv  WORD PTR ds:[ecx-0x68822ee3]
  4095ff:	fild   DWORD PTR [ebp+ecx*1+0x6417432d]
  409606:	push   eax
  409607:	pop    ss
  409608:	scas   eax,DWORD PTR es:[edi]
  409609:	stos   DWORD PTR es:[edi],eax
  40960a:	cmp    DWORD PTR [ebx+0x23],edi
  40960d:	push   ebp
  40960e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40960f:	mov    eax,ds:0x16894389
  409614:	mov    al,ds:0xd0c214c5
  409619:	jge    0x409670
  40961b:	les    ecx,FWORD PTR [ebx+0x22beccc2]
  409621:	mov    bl,0x78
  409623:	data16 daa 
  409625:	mov    edi,DWORD PTR [esi-0x24]
  409628:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409629:	cmp    eax,0x622c9e
  40962e:	push   ecx
  40962f:	sub    dl,BYTE PTR [ebx+edi*8+0x7b]
  409633:	stc    
  409634:	pop    edi
  409635:	xor    bh,BYTE PTR [esp+esi*4]
  409638:	sti    
  409639:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40963a:	sub    BYTE PTR [ebx+edi*1],ah
  40963d:	arpl   WORD PTR [ebp+0x2ae78efb],cx
  409643:	sub    al,0xca
  409645:	mov    ebp,DWORD PTR [esi]
  409647:	sbb    al,0x2c
  409649:	mov    eax,ds:0x5c64decb
  40964e:	push   edi
  40964f:	push   esi
  409650:	jecxz  0x4096aa
  409652:	mov    ah,0xa3
  409654:	call   0xa9f47f00
  409659:	mov    bh,0xe7
  40965b:	mov    ebx,0x68e5a4bf
  409660:	sar    DWORD PTR gs:[esi-0x76724477],1
  409667:	hlt    
  409668:	adc    bh,ch
  40966a:	sar    ebp,1
  40966c:	or     cl,BYTE PTR [edi+0xa]
  40966f:	mov    ebp,0xa9495def
  409674:	stos   DWORD PTR es:[edi],eax
  409675:	cmp    cl,bh
  409677:	sbb    DWORD PTR ds:0x734a10d0,esi
  40967d:	fwait
  40967e:	sub    BYTE PTR [eax],0xcf
  409681:	cs iret 
  409683:	mov    WORD PTR [esi+esi*4],ss
  409686:	addr16 and eax,0x8e10cb64
  40968c:	pop    ds
  40968d:	sbb    ah,BYTE PTR [edi+0x219e25ea]
  409693:	outs   dx,BYTE PTR ds:[esi]
  409694:	jmp    0x7099:0x4a6ee233
  40969b:	(bad)  
  40969c:	nop
  40969d:	iret   
  40969e:	sub    DWORD PTR [edx+0x53],esi
  4096a1:	into   
  4096a2:	sar    DWORD PTR [ebp+edx*4+0xf61d5fc],0x7d
  4096aa:	jbe    0x409707
  4096ac:	xor    BYTE PTR ss:[edi+0x7b],0xed
  4096b1:	push   esp
  4096b2:	jns    0x4096bd
  4096b4:	test   eax,0x780cf4a8
  4096b9:	pop    ebx
  4096ba:	int    0x32
  4096bc:	gs (bad) 
  4096bf:	push   esi
  4096c0:	mov    bh,0x1
  4096c2:	enter  0x1f37,0xe1
  4096c6:	and    DWORD PTR [ebp+0x492baab7],esi
  4096cc:	xor    al,0x24
  4096ce:	nop
  4096cf:	ins    DWORD PTR es:[edi],dx
  4096d0:	int    0xe7
  4096d2:	dec    eax
  4096d3:	mov    dh,0x48
  4096d5:	mov    eax,0xb445c2b0
  4096da:	mov    ds:0x504a2ce3,eax
  4096df:	test   al,0x9d
  4096e1:	or     eax,DWORD PTR [eax+0x6]
  4096e4:	das    
  4096e5:	add    dl,BYTE PTR [ebx-0x1f]
  4096e8:	rol    DWORD PTR [ecx],0xa9
  4096eb:	dec    ebx
  4096ec:	or     edi,DWORD PTR [ebp+0x24ce7a]
  4096f2:	and    edx,DWORD PTR [esi+0x7f]
  4096f5:	or     eax,0xad111a94
  4096fa:	xchg   edi,eax
  4096fb:	mov    ds:0xf1f4fa12,al
  409700:	sbb    eax,0xa35d4e9a
  409705:	bound  esp,QWORD PTR [ebp-0x3f]
  409708:	out    dx,eax
  409709:	dec    edi
  40970a:	dec    ecx
  40970b:	inc    esp
  40970c:	cmp    eax,0x600b2959
  409711:	push   ebx
  409712:	rol    DWORD PTR gs:[esi],cl
  409715:	rcl    DWORD PTR [ebx],0xae
  409718:	xchg   ebp,eax
  409719:	add    cl,dl
  40971b:	cld    
  40971c:	add    edi,DWORD PTR [ebp+esi*4+0x50]
  409720:	mov    al,0x5f
  409722:	cs jmp 0x40976d
  409725:	jg     0x4097a0
  409727:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409729:	mov    ebx,0xe938c7ef
  40972e:	pop    es
  40972f:	jl     0x409747
  409731:	in     eax,dx
  409732:	sbb    DWORD PTR [eax],ecx
  409734:	retf   
  409735:	sbb    BYTE PTR ds:0xfb44c79a,bl
  40973b:	std    
  40973c:	inc    esi
  40973d:	outs   dx,BYTE PTR ds:[esi]
  40973e:	ror    BYTE PTR [ecx-0x6],cl
  409741:	and    ch,BYTE PTR [ecx-0x38]
  409744:	sub    ebx,DWORD PTR [esi]
  409746:	test   eax,0x5375fb03
  40974b:	jecxz  0x40973d
  40974d:	pop    ss
  40974e:	xor    DWORD PTR [ecx],ebx
  409750:	(bad)  
  409751:	daa    
  409752:	std    
  409753:	mov    edi,esi
  409755:	jmp    FWORD PTR [esi-0x3e]
  409758:	xchg   ebx,eax
  409759:	std    
  40975a:	inc    esi
  40975b:	jae    0x4097c0
  40975d:	sbb    edx,DWORD PTR [edx]
  40975f:	xor    eax,ebx
  409761:	dec    ebx
  409762:	(bad)  
  409763:	lock out 0xb1,eax
  409766:	jnp    0x4097b5
  409768:	sbb    ebp,DWORD PTR [esi-0x2de99f23]
  40976e:	inc    eax
  40976f:	xchg   esp,eax
  409770:	push   ds
  409771:	icebp  
  409772:	ja     0x409762
  409774:	std    
  409775:	clc    
  409776:	jmp    FWORD PTR [eax+0x28683dd]
  40977c:	into   
  40977d:	add    BYTE PTR [edi-0x101991c5],dh
  409783:	sbb    DWORD PTR [esi+0x68acd25a],edx
  409789:	aad    0xc6
  40978b:	mov    edx,DWORD PTR [ecx+0x5a9915d1]
  409791:	imul   DWORD PTR [ecx-0x39e329bd]
  409797:	xor    bh,BYTE PTR [esi]
  409799:	xlat   BYTE PTR ds:[ebx]
  40979a:	sbb    DWORD PTR [esi+0x3dd89529],esi
  4097a0:	enter  0xbd98,0x4
  4097a4:	xor    ecx,DWORD PTR ds:0xbaca5372
  4097aa:	stos   DWORD PTR es:[edi],eax
  4097ab:	jp     0x409780
  4097ad:	cmp    BYTE PTR [ecx-0x512dcaf5],0xde
  4097b4:	nop
  4097b5:	imul   edi,DWORD PTR [edi+0x7c],0x9af0bbcf
  4097bc:	clc    
  4097bd:	pop    edx
  4097be:	ror    DWORD PTR [edi],0xc1
  4097c1:	xor    BYTE PTR ds:[edi+ecx*1-0x12caca95],0x55
  4097ca:	shl    BYTE PTR [edi],cl
  4097cc:	push   ecx
  4097cd:	jp     0x409795
  4097cf:	cs jo  0x40981c
  4097d2:	ins    DWORD PTR es:[edi],dx
  4097d3:	hlt    
  4097d4:	add    esp,eax
  4097d6:	ret    0x8f82
  4097d9:	cmp    eax,0x4699178e
  4097de:	int3   
  4097df:	jle    0x409780
  4097e1:	push   ds
  4097e2:	fimul  WORD PTR [edx+0x28b9c853]
  4097e8:	call   0x315c:0x37acedb6
  4097ef:	push   DWORD PTR [edi-0x53a331b2]
  4097f5:	xchg   ebp,eax
  4097f6:	push   ss
  4097f7:	xor    eax,0x96ff0e28
  4097fc:	mov    fs,WORD PTR [edi+edi*8-0x33f0ce4b]
  409803:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409804:	cmp    BYTE PTR [ebp+0xd],ch
  409807:	dec    esi
  409808:	inc    edx
  409809:	packuswb mm3,QWORD PTR [edi]
  40980c:	fmul   st(6),st
  40980e:	pop    es
  40980f:	scas   eax,DWORD PTR es:[edi]
  409810:	pop    ss
  409811:	(bad)  
  409812:	out    dx,al
  409813:	scas   eax,DWORD PTR es:[edi]
  409814:	xlat   BYTE PTR ds:[ebx]
  409815:	sar    ecx,0xb4
  409818:	repz pop esi
  40981a:	(bad)  
  40981b:	sahf   
  40981c:	add    BYTE PTR [edi+0x8],bl
  40981f:	gs cdq 
  409821:	jb     0x40984c
  409823:	mov    dh,0xd3
  409825:	sbb    eax,0x33cb9a89
  40982a:	push   esp
  40982b:	mov    al,ds:0x66ad29ad
  409830:	mov    esi,0x9bef9e24
  409835:	and    DWORD PTR [ebx+ebx*2],ecx
  409838:	pop    ecx
  409839:	stos   BYTE PTR es:[edi],al
  40983a:	inc    esi
  40983b:	push   edx
  40983c:	mov    BYTE PTR [esi+0x46],dl
  40983f:	in     al,0xa5
  409841:	dec    edx
  409842:	push   ecx
  409843:	pushf  
  409844:	fimul  WORD PTR [edx+0x7b]
  409847:	enter  0x829b,0xd4
  40984b:	fwait
  40984c:	adc    eax,0xbbe5b968
  409851:	mov    bh,0x86
  409853:	mov    edx,0xb212ca1f
  409858:	adc    BYTE PTR [eax-0xaaf27cf],0x30
  40985f:	(bad)  
  409860:	xchg   ebx,eax
  409861:	ins    DWORD PTR es:[edi],dx
  409862:	je     0x409889
  409864:	daa    
  409865:	jmp    0xe50546c
  40986a:	mov    al,ds:0x50756bf3
  40986f:	and    BYTE PTR [ecx+0x6fd6a06b],0x43
  409876:	xor    eax,0xd2074d4
  40987b:	inc    eax
  40987c:	ss out dx,al
  40987e:	pusha  
  40987f:	inc    ebp
  409880:	dec    ecx
  409881:	mov    ch,0x56
  409883:	xor    esi,DWORD PTR [ecx+0x38f51e09]
  409889:	push   cs
  40988a:	mov    eax,0x46c8e3e5
  40988f:	(bad)  
  409890:	and    al,0x64
  409892:	gs mov ch,0x84
  409895:	mov    eax,0x362ec9c3
  40989a:	fadd   DWORD PTR [eax]
  40989c:	fnstcw WORD PTR ds:0xb242150c
  4098a2:	into   
  4098a3:	xchg   esp,eax
  4098a4:	mov    ebx,0xed40b983
  4098a9:	iret   
  4098aa:	loope  0x409852
  4098ac:	stos   BYTE PTR es:[edi],al
  4098ad:	cmp    ecx,DWORD PTR [edi]
  4098af:	add    DWORD PTR [edi+0x1ae87077],edi
  4098b5:	jmp    0x409872
  4098b7:	jo     0x40989e
  4098b9:	jg     0x4098e4
  4098bb:	jo     0x4098db
  4098bd:	push   ebx
  4098be:	adc    BYTE PTR [edx+0x10439e89],cl
  4098c4:	fisub  DWORD PTR cs:[ecx]
  4098c7:	stos   DWORD PTR es:[edi],eax
  4098c8:	jo     0x409930
  4098ca:	sbb    ecx,DWORD PTR [esi]
  4098cc:	add    al,0x3
  4098ce:	gs adc bh,dh
  4098d1:	ret    
  4098d2:	sbb    BYTE PTR [ebp-0x33],ch
  4098d5:	fs into 
  4098d7:	(bad)  
  4098d9:	popa   
  4098da:	pop    ds
  4098db:	call   0x9880a5f3
  4098e0:	mov    ecx,0x6ed97db
  4098e5:	and    DWORD PTR [ebx+0xdba6633],0xffffffbd
  4098ec:	ret    0x695b
  4098ef:	repz dec ebp
  4098f1:	xchg   ecx,eax
  4098f2:	adc    al,dh
  4098f4:	ins    BYTE PTR es:[edi],dx
  4098f5:	ds fs retf 
  4098f8:	jmp    0x6b8c2b8f
  4098fd:	rol    DWORD PTR [esp+ecx*2],cl
  409900:	or     ebx,DWORD PTR [esi+0x5c]
  409903:	or     al,0xff
  409905:	nop
  409906:	inc    eax
  409907:	xor    ch,BYTE PTR [ebx]
  409909:	inc    esp
  40990a:	push   es
  40990b:	mov    edx,0xc075bef1
  409910:	loop   0x409977
  409912:	icebp  
  409913:	add    al,0xaa
  409915:	sar    BYTE PTR [esi-0x2e],cl
  409918:	fwait
  409919:	xor    al,0x38
  40991b:	enter  0xe86a,0x5b
  40991f:	pop    edi
  409920:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409921:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409922:	not    BYTE PTR ds:0x287166bc
  409928:	in     eax,0xc0
  40992a:	xor    ch,BYTE PTR [ebx+0x764a7d65]
  409930:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409931:	or     DWORD PTR [edx+eiz*4+0x330f63b4],esp
  409938:	scas   al,BYTE PTR es:[edi]
  409939:	cld    
  40993a:	mov    es,ecx
  40993c:	icebp  
  40993d:	ja     0x4098f0
  40993f:	xchg   esi,eax
  409940:	cdq    
  409941:	retf   
  409942:	pop    eax
  409943:	out    dx,al
  409944:	fcomp  st(1)
  409946:	xchg   DWORD PTR [ebx],ebx
  409948:	or     BYTE PTR [esi+0x5b],0x10
  40994c:	cmp    BYTE PTR [ebx+0x5680d5ae],0xea
  409953:	jo     0x409970
  409955:	jp     0x4099a1
  409957:	test   eax,0xc42b7851
  40995c:	(bad)  
  40995d:	repnz xlat BYTE PTR ds:[ebx]
  40995f:	pop    esp
  409960:	aad    0x96
  409962:	test   al,0x8b
  409964:	pushf  
  409965:	pushf  
  409966:	retf   0x96ac
  409969:	add    esp,DWORD PTR [ebx-0x74]
  40996c:	or     al,0x5c
  40996e:	fwait
  40996f:	clc    
  409970:	sub    eax,0xb18aa708
  409975:	pop    esi
  409976:	cwde   
  409977:	pushf  
  409978:	jg     0x4099c4
  40997a:	add    esi,esp
  40997c:	or     al,0xc
  40997e:	retf   0xf791
  409981:	popa   
  409982:	test   eax,0x72bc664
  409987:	int3   
  409988:	fisttp QWORD PTR [eax+0x40b0b572]
  40998e:	mov    ds:0xe981f881,eax
  409993:	jnp    0x4099d0
  409995:	mov    ecx,0x350aea10
  40999a:	jno    0x409935
  40999c:	cmp    al,BYTE PTR [edi]
  40999e:	(bad)  
  40999f:	in     al,0xfc
  4099a1:	in     eax,0x2a
  4099a3:	mov    bh,cl
  4099a5:	sbb    edi,DWORD PTR gs:[ecx-0x33]
  4099a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099aa:	scas   al,BYTE PTR es:[edi]
  4099ab:	outs   dx,DWORD PTR ds:[esi]
  4099ac:	push   ebx
  4099ad:	out    0xf8,eax
  4099af:	fwait
  4099b0:	xor    BYTE PTR [ebx+0x3f],dh
  4099b3:	fsubp  st(1),st
  4099b5:	mov    ds:0xdd1aa19a,eax
  4099ba:	rcl    BYTE PTR [ecx-0x36],cl
  4099bd:	pop    es
  4099be:	dec    BYTE PTR [edi+0x7cf0fa6]
  4099c4:	pop    di
  4099c6:	xor    esp,DWORD PTR [edi+0x21706c66]
  4099cc:	fsub   QWORD PTR [esi+0x3747afa4]
  4099d2:	add    al,0x16
  4099d4:	out    dx,al
  4099d5:	mov    al,ds:0xb76a92b1
  4099da:	nop
  4099db:	mov    esp,0x8547e721
  4099e0:	scas   al,BYTE PTR es:[edi]
  4099e1:	jns    0x409a34
  4099e3:	mov    esi,0x6e4ce4c1
  4099e8:	fnstenv [ebx]
  4099ea:	jns    0x409a58
  4099ec:	or     BYTE PTR [eax+0x3f490285],ch
  4099f2:	sub    ch,BYTE PTR ds:[edi+esi*1-0x31bce5b2]
  4099fa:	dec    ebx
  4099fb:	lea    ebp,[eax]
  4099fd:	jo     0x409a6d
  4099ff:	lods   al,BYTE PTR ds:[esi]
  409a00:	aas    
  409a01:	adc    eax,0x6a42bf8c
  409a06:	(bad)  
  409a07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a08:	dec    ebx
  409a09:	adc    DWORD PTR [ecx+0x54],ebx
  409a0c:	and    al,0x7
  409a0e:	adc    al,BYTE PTR [ecx]
  409a10:	or     BYTE PTR [ebx+0x61],dl
  409a13:	mov    ch,0xcb
  409a15:	inc    edx
  409a16:	addr16 in eax,dx
  409a18:	outs   dx,BYTE PTR ds:[esi]
  409a19:	data16 xchg BYTE PTR [ecx+0x5e],al
  409a1d:	mov    ds:0x96edc960,eax
  409a22:	adc    al,0xbb
  409a24:	out    0x82,eax
  409a26:	xchg   ebp,eax
  409a27:	out    dx,al
  409a28:	aam    0x7c
  409a2a:	rcl    bl,0xd7
  409a2d:	dec    edi
  409a2e:	add    DWORD PTR [edi-0x79],edi
  409a31:	jecxz  0x409a7a
  409a33:	fld    QWORD PTR ss:[ebx-0x4f7d7b21]
  409a3a:	repz fcmovbe st,st(2)
  409a3d:	inc    ecx
  409a3e:	add    DWORD PTR [eax-0x3d2a6b73],ebx
  409a44:	push   ecx
  409a45:	out    0xec,al
  409a47:	lds    ebx,FWORD PTR [ebx]
  409a49:	pop    edx
  409a4a:	add    al,0x63
  409a4c:	pop    eax
  409a4d:	and    eax,0x391322c8
  409a52:	in     al,0xe9
  409a54:	cld    
  409a55:	dec    ebx
  409a56:	mov    edx,0xff1acea3
  409a5b:	xchg   edi,eax
  409a5c:	ins    BYTE PTR es:[edi],dx
  409a5d:	(bad)  
  409a5e:	addr16 or al,0x77
  409a61:	(bad)  
  409a62:	sub    al,0x2
  409a64:	sub    al,0xfc
  409a66:	sbb    ecx,eax
  409a68:	fisttp DWORD PTR [esi-0x4b]
  409a6b:	and    al,0x2d
  409a6d:	aas    
  409a6e:	adc    DWORD PTR [eax+0x44],0x6540715d
  409a75:	pop    ebx
  409a76:	imul   edx,DWORD PTR [edi-0x33],0x2349cb89
  409a7d:	in     eax,dx
  409a7e:	mov    cl,0x43
  409a80:	mov    cl,0xfc
  409a82:	clc    
  409a83:	mov    dl,0xad
  409a85:	mov    eax,0x7a6b21ce
  409a8a:	and    al,0xd0
  409a8c:	dec    esi
  409a8d:	stos   DWORD PTR es:[edi],eax
  409a8e:	test   DWORD PTR [ecx],ebx
  409a90:	out    0xf3,eax
  409a92:	nop
  409a93:	dec    ebx
  409a94:	aad    0x9
  409a96:	xor    DWORD PTR [edx+0x19],esp
  409a99:	cs xchg esp,eax
  409a9b:	clc    
  409a9c:	(bad)  
  409a9d:	cmp    BYTE PTR [esi],dh
  409a9f:	mov    bl,0xdc
  409aa1:	dec    edx
  409aa2:	neg    dh
  409aa4:	cmp    ebp,DWORD PTR [edi+0x6b]
  409aa7:	stos   BYTE PTR es:[edi],al
  409aa8:	ss jns 0x409aba
  409aab:	xor    dl,dh
  409aad:	pop    eax
  409aae:	cmp    eax,0x6e4450cf
  409ab3:	xchg   esp,eax
  409ab4:	cmp    BYTE PTR [ebp-0x56106338],ah
  409aba:	shl    ebp,cl
  409abc:	sbb    al,0x80
  409abe:	outs   dx,BYTE PTR ds:[esi]
  409abf:	out    dx,eax
  409ac0:	ret    
  409ac1:	shl    BYTE PTR [edx+0x71],cl
  409ac4:	enter  0xfe91,0x2f
  409ac8:	sbb    ecx,ecx
  409aca:	dec    esp
  409acb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409acc:	(bad)  
  409acd:	fdiv   DWORD PTR [esi]
  409acf:	inc    edx
  409ad0:	addr16 das 
  409ad2:	in     eax,0x4f
  409ad4:	jae    0x409a86
  409ad6:	mov    esp,0xb6c9dbd5
  409adb:	inc    ebp
  409adc:	nop
  409add:	(bad)  
  409ade:	adc    eax,0xd35e960a
  409ae3:	imul   edi,ecx,0x5e1d3766
  409ae9:	adc    al,0x79
  409aeb:	xchg   ecx,eax
  409aec:	add    dl,BYTE PTR [ebx]
  409aee:	into   
  409aef:	mov    ch,0xdb
  409af1:	leave  
  409af2:	hlt    
  409af3:	mov    esi,0xdebc47d1
  409af8:	inc    esi
  409af9:	mov    ebp,0x6c71b6d7
  409afe:	enter  0x3ca4,0x30
  409b02:	push   edx
  409b03:	fistp  DWORD PTR [ecx]
  409b05:	(bad)  
  409b06:	test   eax,0xdd0b15f2
  409b0b:	push   edi
  409b0c:	xchg   edi,eax
  409b0d:	fistp  DWORD PTR [ebx-0x62c9261f]
  409b13:	mov    dl,0x70
  409b15:	cmp    esp,DWORD PTR [ecx-0x75]
  409b18:	loopne 0x409b41
  409b1a:	lds    ebx,FWORD PTR [esi]
  409b1c:	ins    DWORD PTR es:[edi],dx
  409b1d:	(bad)  
  409b1e:	jne    0x409b17
  409b20:	and    al,0x4d
  409b22:	inc    ecx
  409b23:	(bad)  
  409b24:	cld    
  409b25:	lods   eax,DWORD PTR ds:[esi]
  409b26:	or     al,0x3a
  409b28:	ja     0x409acd
  409b2a:	mov    BYTE PTR [ebx],ch
  409b2c:	aaa    
  409b2d:	jns    0x409b57
  409b2f:	jns    0x409b3f
  409b31:	and    al,0xc5
  409b33:	ja     0x409b82
  409b35:	xchg   ebx,eax
  409b36:	sbb    BYTE PTR [esi-0x8],0x33
  409b3a:	and    ah,0x36
  409b3d:	lea    ecx,[edi]
  409b3f:	(bad)  
  409b40:	int3   
  409b41:	mov    edi,0xcc602a0e
  409b46:	dec    esp
  409b47:	xchg   edx,eax
  409b48:	xlat   BYTE PTR ds:[ebx]
  409b49:	dec    ebp
  409b4a:	iret   
  409b4b:	push   0xfffffff3
  409b4d:	(bad)  
  409b4e:	xor    ecx,ebx
  409b50:	add    dh,BYTE PTR [esi-0x24]
  409b53:	pop    ds
  409b54:	addr16 xchg ah,al
  409b57:	dec    esp
  409b58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b59:	mov    WORD PTR [ebp-0x7a2f84d8],fs
  409b5f:	xlat   BYTE PTR ds:[ebx]
  409b60:	je     0x409b16
  409b62:	xor    dl,dh
  409b64:	rcl    DWORD PTR [eax],cl
  409b66:	xchg   ebp,eax
  409b67:	push   ds
  409b68:	xchg   ecx,eax
  409b69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b6a:	mov    WORD PTR [ecx],?
  409b6c:	aas    
  409b6d:	and    ah,cl
  409b6f:	sti    
  409b70:	adc    DWORD PTR [ecx-0x6cbc3aeb],0x4b
  409b77:	dec    ebx
  409b78:	adc    cl,bl
  409b7a:	nop    DWORD PTR cs:[ebx+0x32]
  409b7f:	jp     0x409b56
  409b81:	pop    ecx
  409b82:	rcr    BYTE PTR [ecx+edi*2-0x24],0xc8
  409b87:	(bad)  
  409b8a:	loop   0x409bc3
  409b8c:	cld    
  409b8d:	adc    al,0x3
  409b8f:	add    BYTE PTR [ebx-0x4da8ea17],ch
  409b95:	fisub  DWORD PTR [esi]
  409b97:	imul   edx,esp,0xffffffbe
  409b9a:	pop    ss
  409b9b:	push   edi
  409b9c:	dec    ecx
  409b9d:	data16 loope 0x409bef
  409ba0:	test   esi,esp
  409ba2:	int    0x89
  409ba4:	aas    
  409ba5:	pop    ss
  409ba6:	in     al,dx
  409ba7:	cwde   
  409ba8:	loop   0x409bde
  409baa:	xor    eax,0x38f0c16b
  409baf:	in     al,dx
  409bb0:	cmp    al,BYTE PTR [edi+0x15]
  409bb3:	mov    eax,DWORD PTR [esi-0x3f]
  409bb6:	fxch   st(7)
  409bb8:	dec    edx
  409bb9:	ins    BYTE PTR es:[edi],dx
  409bba:	stos   BYTE PTR es:[edi],al
  409bbb:	loop   0x409bdc
  409bbd:	and    al,0x33
  409bbf:	aas    
  409bc0:	fwait
  409bc1:	std    
  409bc2:	inc    edx
  409bc3:	into   
  409bc4:	dec    edi
  409bc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bc6:	retf   0xe362
  409bc9:	mov    ebx,0x22d6df50
  409bce:	xchg   edx,eax
  409bcf:	cld    
  409bd0:	xchg   ecx,eax
  409bd1:	sub    ch,BYTE PTR [ebx+0x75]
  409bd4:	adc    edx,DWORD PTR [esi-0x1a8589f1]
  409bda:	mov    ds:0xed914e86,al
  409bdf:	sti    
  409be0:	cmp    al,0x23
  409be2:	jmp    0x409c48
  409be4:	loopne 0x409bf6
  409be6:	mov    dl,0x54
  409be8:	(bad)  
  409be9:	test   eax,0xbb9a1b24
  409bee:	ror    DWORD PTR [ebx+0xd],1
  409bf1:	stos   BYTE PTR es:[edi],al
  409bf2:	loope  0x409c58
  409bf4:	lock sti 
  409bf6:	pusha  
  409bf7:	jecxz  0x409ba1
  409bf9:	das    
  409bfa:	mov    ebx,0x4d86b38c
  409bff:	jmp    0xb4ef:0xb61f1563
  409c06:	out    dx,al
  409c07:	push   edi
  409c08:	pop    esp
  409c09:	xlat   BYTE PTR ds:[ebx]
  409c0a:	mov    dl,0xe0
  409c0c:	adc    al,0x6e
  409c0e:	inc    esp
  409c0f:	stos   DWORD PTR es:[edi],eax
  409c10:	push   edi
  409c11:	mov    esp,0xb7e530e4
  409c16:	div    esp
  409c18:	inc    ebp
  409c19:	jne    0x409b9b
  409c1b:	es push es
  409c1d:	and    ecx,ebx
  409c1f:	and    esi,DWORD PTR [edi+0x4cd33432]
  409c25:	fstp   DWORD PTR [edx-0x36]
  409c28:	pop    es
  409c29:	nop
  409c2a:	xor    bh,BYTE PTR [ebx+0x3c]
  409c2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c2e:	hlt    
  409c2f:	push   ebp
  409c30:	dec    edx
  409c31:	sbb    DWORD PTR [edi],esp
  409c33:	out    dx,eax
  409c34:	in     eax,0xa2
  409c36:	(bad)  
  409c37:	xchg   esi,eax
  409c38:	dec    edi
  409c39:	pusha  
  409c3a:	fucomip st,st(1)
  409c3c:	mov    eax,0x873df9d9
  409c41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c42:	into   
  409c43:	push   esi
  409c44:	jle    0x409bef
  409c46:	pushf  
  409c47:	xchg   esi,eax
  409c48:	mov    WORD PTR [ebx-0x47a8bea0],cs
  409c4e:	adc    al,0x65
  409c50:	mov    edx,0x9f477265
  409c55:	add    esp,eax
  409c57:	call   0x2e80:0xbec516f4
  409c5e:	cmp    cl,BYTE PTR [esi+ebp*4]
  409c61:	push   ds
  409c62:	cmp    al,0xd3
  409c64:	dec    edx
  409c65:	adc    cl,BYTE PTR [edi+0x28]
  409c68:	cld    
  409c69:	out    dx,eax
  409c6a:	mov    dh,0x54
  409c6c:	dec    ecx
  409c6d:	(bad)  
  409c6e:	mov    edx,0x67aa1c23
  409c73:	pop    ebx
  409c74:	add    ebx,DWORD PTR [eax]
  409c76:	jge    0x409c35
  409c78:	jmp    0xe3c8:0x322a28a0
  409c7f:	jb     0x409c9c
  409c81:	mov    al,ds:0xf113f3cf
  409c86:	(bad)  
  409c87:	xchg   esp,eax
  409c88:	shl    bl,0x6f
  409c8b:	cli    
  409c8c:	or     BYTE PTR [edx-0x24d2f1ab],al
  409c92:	or     DWORD PTR [edi+0x54],ebx
  409c95:	sbb    DWORD PTR [eax+0x2b9989b3],ebp
  409c9b:	sbb    ebx,DWORD PTR [edi+edx*4+0x6f7e6f6b]
  409ca2:	mov    al,0x92
  409ca4:	dec    esp
  409ca5:	mov    BYTE PTR [bp+di],ch
  409ca8:	pop    esp
  409ca9:	aas    
  409caa:	neg    DWORD PTR [eax+0x70656648]
  409cb0:	leave  
  409cb1:	jne    0x409d1b
  409cb3:	aas    
  409cb4:	jl     0x409caf
  409cb6:	mov    dh,0x9d
  409cb8:	in     al,dx
  409cb9:	mov    ecx,0xb43b6906
  409cbe:	adc    edi,DWORD PTR [edx]
  409cc0:	sti    
  409cc1:	mov    esi,0x67301cb1
  409cc6:	jmp    0xc5b062f4
  409ccb:	pusha  
  409ccc:	jg     0x409d1e
  409cce:	test   eax,0xf7d471e5
  409cd3:	sub    eax,0x95d2f5b1
  409cd8:	and    BYTE PTR [eax+0x5d120665],dl
  409cde:	shl    BYTE PTR [eax+0x75e011b0],cl
  409ce4:	jmp    0x409d35
  409ce6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ce7:	sbb    BYTE PTR [edx+0x24],bh
  409cea:	lahf   
  409ceb:	(bad)  
  409cec:	retf   0xf5b8
  409cef:	data16 jmp 0x409d2c
  409cf2:	inc    edx
  409cf3:	and    DWORD PTR [ebx+0x14],edi
  409cf6:	add    DWORD PTR [eax+0x4d],0xffffff8e
  409cfa:	clc    
  409cfb:	mov    bh,0x8d
  409cfd:	inc    esi
  409cfe:	stc    
  409cff:	sbb    BYTE PTR [edi],0x3c
  409d02:	jmp    0x5f51:0x9eb7726
  409d09:	mov    DWORD PTR [ebp+0x28],ebp
  409d0c:	jp     0x409c99
  409d0e:	ja     0x409d4b
  409d10:	in     al,0xe8
  409d12:	repnz es retf 0x59ca
  409d17:	mov    ch,0xc
  409d19:	mov    edx,0xb1358ca5
  409d1e:	leave  
  409d1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d20:	(bad)  
  409d21:	(bad)  
  409d23:	rol    ah,cl
  409d25:	hlt    
  409d26:	ret    0x7c36
  409d29:	ficom  DWORD PTR [edx-0x14d11fc1]
  409d2f:	xor    eax,0x2d0a536a
  409d34:	int3   
  409d35:	and    edx,DWORD PTR ss:[edx+0xccd6304]
  409d3c:	mov    esp,ebx
  409d3e:	mov    al,ah
  409d40:	imul   esi,DWORD PTR [esi+0x1f],0x18
  409d44:	lods   eax,DWORD PTR ds:[esi]
  409d45:	add    BYTE PTR [edx],0xde
  409d48:	dec    esp
  409d49:	arpl   WORD PTR [ecx],di
  409d4b:	xor    ecx,edi
  409d4d:	repz shl edi,cl
  409d50:	bound  esi,QWORD PTR [esi+0x77]
  409d53:	sar    BYTE PTR [edx+0x65],cl
  409d56:	inc    esi
  409d57:	sbb    eax,0x45fb61a0
  409d5c:	adc    DWORD PTR [edx],ecx
  409d5e:	cmp    dh,BYTE PTR [ebx+ebp*1+0x4117a796]
  409d65:	int3   
  409d66:	xchg   esi,eax
  409d67:	loopne 0x409daa
  409d69:	std    
  409d6a:	lods   eax,DWORD PTR ds:[esi]
  409d6b:	mov    ecx,0xb447cdaa
  409d70:	sahf   
  409d71:	pushf  
  409d72:	cmp    al,0x14
  409d74:	jg     0x409dbd
  409d76:	mov    al,ds:0xe1dd5839
  409d7b:	add    eax,0x77969f1d
  409d80:	aaa    
  409d81:	fdivr  QWORD PTR [edx+esi*1-0x68579921]
  409d88:	arpl   WORD PTR [esi],bx
  409d8a:	cli    
  409d8b:	sub    BYTE PTR [ecx+0x3d],bl
  409d8e:	jns    0x409d26
  409d90:	cs push edx
  409d92:	lock rol BYTE PTR [ebx-0x3f937826],cl
  409d99:	cmp    dl,bh
  409d9b:	jmp    0x409d71
  409d9d:	sbb    al,ah
  409d9f:	leave  
  409da0:	xchg   ecx,eax
  409da1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409da2:	mov    DWORD PTR [ebx-0x2c],ebp
  409da5:	ins    DWORD PTR es:[edi],dx
  409da6:	(bad)  
  409da7:	sbb    eax,0x75eee966
  409dac:	lahf   
  409dad:	mov    BYTE PTR [edx+0x11],dl
  409db0:	dec    esp
  409db1:	mov    cs,WORD PTR [ebx-0x490ab4cb]
  409db7:	or     BYTE PTR [edi],0x8b
  409dba:	int3   
  409dbb:	je     0x409dff
  409dbd:	test   DWORD PTR [esi+edx*1-0x5d],edx
  409dc1:	jle    0x409d6b
  409dc3:	jb     0x409d9d
  409dc5:	cmp    eax,0xafe53fbc
  409dca:	(bad)  
  409dcc:	stc    
  409dcd:	sub    BYTE PTR [ebp-0x32],ah
  409dd0:	outs   dx,BYTE PTR ds:[esi]
  409dd1:	pop    esi
  409dd2:	mov    dl,0x68
  409dd4:	adc    dl,BYTE PTR [ecx+0x2b]
  409dd7:	inc    ebx
  409dd8:	lea    ecx,[edx+0x213c391e]
  409dde:	into   
  409ddf:	mov    ecx,0xf46b3153
  409de4:	mov    esp,0x271ee749
  409de9:	mov    edi,edi
  409deb:	into   
  409dec:	pop    ebp
  409ded:	and    edx,eax
  409def:	sbb    BYTE PTR [ebp+0x3813e6d6],cl
  409df5:	pop    esi
  409df6:	scas   al,BYTE PTR es:[edi]
  409df7:	jbe    0x409e3e
  409df9:	and    eax,0xfc55425c
  409dfe:	add    bl,bl
  409e00:	adc    dh,dl
  409e02:	mov    ebx,0x4939985c
  409e07:	dec    edx
  409e08:	loope  0x409dd3
  409e0a:	cmc    
  409e0b:	xchg   edx,eax
  409e0c:	out    0xc6,eax
  409e0e:	sub    al,0xc7
  409e10:	call   FWORD PTR [ebx+ecx*4]
  409e13:	fwait
  409e14:	mov    cs,WORD PTR [esi-0x30f20200]
  409e1a:	(bad)  
  409e1b:	mov    ch,0xad
  409e1d:	sub    ebx,DWORD PTR [ebx-0x5f966919]
  409e23:	jge    0x409e65
  409e25:	rcr    BYTE PTR [ecx],1
  409e27:	ficom  WORD PTR [ebx+ebp*1]
  409e2a:	scas   eax,DWORD PTR es:[edi]
  409e2b:	cmp    dl,BYTE PTR [eax]
  409e2d:	cli    
  409e2e:	std    
  409e2f:	inc    ecx
  409e30:	jg     0x409e04
  409e32:	jecxz  0x409e93
  409e34:	mov    esi,0xab0e9ed6
  409e39:	(bad)  
  409e3a:	dec    ebx
  409e3b:	mov    ?,WORD PTR ss:[esp-0x79]
  409e40:	loope  0x409eaf
  409e42:	mov    esi,0xbadaee9a
  409e47:	aad    0xdc
  409e49:	sbb    BYTE PTR [ebp+0x25],cl
  409e4c:	adc    DWORD PTR [ecx+esi*4-0x3b54a406],0xf0c667d
  409e57:	imul   esi,edi,0x3f7f3ef5
  409e5d:	push   es
  409e5e:	dec    edi
  409e5f:	jnp    0x409e36
  409e61:	xor    BYTE PTR [ecx-0x11],bh
  409e64:	outs   dx,BYTE PTR ds:[esi]
  409e65:	dec    edx
  409e66:	or     BYTE PTR [edi-0x5fad2363],bl
  409e6c:	sub    BYTE PTR [edi],cl
  409e6e:	and    eax,DWORD PTR [ebx]
  409e70:	imul   eax,DWORD PTR [edx]
  409e73:	mov    edx,DWORD PTR [ebp-0x4]
  409e76:	xor    edx,ecx
  409e78:	mov    ecx,DWORD PTR [ebp+0x8]
  409e7b:	lea    ecx,[edx+ecx*1+0x3272dd]
  409e82:	cmp    ecx,eax
  409e84:	je     0x409efb
  409e8a:	mov    edi,DWORD PTR [ebp-0x14]
  409e8d:	mov    eax,DWORD PTR [ebp+0x8]
  409e90:	mov    edx,DWORD PTR [ebp+0x14]
  409e93:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  409e97:	mov    ecx,0x7510896
  409e9c:	xor    edx,edx
  409e9e:	xor    edi,ecx
  409ea0:	mov    esi,0x3272dd
  409ea5:	add    edi,esi
  409ea7:	div    edi
  409ea9:	mov    edx,DWORD PTR [ebp-0x4]
  409eac:	xor    edx,ecx
  409eae:	lea    eax,[edx+eax*1+0x3272dd]
  409eb5:	mov    edx,DWORD PTR [ebp+0x8]
  409eb8:	mov    edi,DWORD PTR [ebp-0x20]
  409ebb:	mov    DWORD PTR [edi+edx*4],eax
  409ebe:	mov    eax,DWORD PTR [ebp-0x14]
  409ec1:	mov    edx,DWORD PTR [ebp+0x8]
  409ec4:	xor    eax,ecx
  409ec6:	lea    eax,[eax+edx*1+0x3272dd]
  409ecd:	mov    DWORD PTR [ebp+0x8],eax
  409ed0:	mov    eax,DWORD PTR [ebp-0x14]
  409ed3:	mov    edx,DWORD PTR [ebp+0x14]
  409ed6:	xor    eax,ecx
  409ed8:	add    eax,esi
  409eda:	imul   eax,DWORD PTR [edx]
  409edd:	mov    edx,DWORD PTR [ebp-0x4]
  409ee0:	xor    edx,ecx
  409ee2:	mov    ecx,DWORD PTR [ebp+0x8]
  409ee5:	lea    ecx,[edx+ecx*1+0x3272dd]
  409eec:	cmp    ecx,eax
  409eee:	jne    0x409e8a
  409ef4:	mov    eax,esi
  409ef6:	jmp    0x409f00
  409efb:	mov    eax,0x3272dd
  409f00:	mov    ebx,0x7510896
  409f05:	mov    ecx,DWORD PTR [ebp-0x4]
  409f08:	xor    ecx,ebx
  409f0a:	add    ecx,eax
  409f0c:	mov    DWORD PTR [ebp-0xc],ecx
  409f0f:	mov    ebx,0x65655
  409f14:	add    ebx,0x3234
  409f1a:	xchg   ebx,esi
  409f1c:	xor    ebx,ebx
  409f1e:	push   esi
  409f1f:	mov    esi,ebx
  409f21:	pop    ebx
  409f22:	mov    edx,esi
  409f24:	add    ebx,0x1002
  409f2a:	lea    eax,[ebp-0x10]
  409f2d:	add    edx,eax
  409f2f:	add    edx,0x5
  409f32:	push   edx
  409f33:	inc    esi
  409f34:	pop    ecx
  409f35:	dec    ecx
  409f36:	xchg   ecx,eax
  409f37:	dec    eax
  409f38:	xchg   ecx,eax
  409f39:	dec    ecx
  409f3a:	xchg   ecx,edx
  409f3c:	dec    edx
  409f3d:	push   edx
  409f3e:	mov    edx,ebx
  409f40:	pop    ebx
  409f41:	dec    ebx
  409f42:	call   DWORD PTR [ebx]
  409f44:	cmp    DWORD PTR [ebp+0x10],esi
  409f47:	je     0x409f66
  409f4d:	xchg   edx,eax
  409f4e:	push   0xb
  409f50:	pop    ecx
  409f51:	push   0x4
  409f53:	pop    ebx
  409f54:	inc    ebx
  409f55:	xchg   ebx,ecx
  409f57:	sub    ebx,ecx
  409f59:	xchg   ebx,ecx
  409f5b:	dec    ecx
  409f5c:	dec    ecx
  409f5d:	mov    eax,DWORD PTR [ebp-0x1c]
  409f60:	imul   eax,ecx
  409f63:	add    esp,eax
  409f65:	xchg   edx,eax
  409f66:	push   eax
  409f67:	xor    ebx,ebx
  409f69:	mov    edx,esp
  409f6b:	dec    edx
  409f6c:	inc    ebx
  409f6d:	add    ebx,DWORD PTR [edx+ebx*1]
  409f70:	dec    ebx
  409f71:	xor    edx,edx
  409f73:	add    DWORD PTR [ebp-0xc],ebx
  409f76:	pop    ebx
  409f77:	mov    eax,DWORD PTR [ebp-0xc]
  409f7a:	pop    edi
  409f7b:	pop    esi
  409f7c:	pop    ebx
  409f7d:	leave  
  409f7e:	ret    0x10
  409f81:	push   ebp
  409f82:	mov    ebp,esp
  409f84:	sub    esp,0x7c
  409f87:	xor    ecx,ecx
  409f89:	xor    ecx,DWORD PTR ds:0x42c014
  409f8f:	xor    DWORD PTR ds:0x42d018,ecx
  409f95:	push   esi
  409f96:	push   edi
  409f97:	movzx  edi,WORD PTR ds:0x429014
  409f9e:	adc    edi,DWORD PTR ds:0x42c018
  409fa4:	mov    DWORD PTR ds:0x429014,edi
  409faa:	mov    eax,ds:0x42e435
  409faf:	or     ecx,0x9a5
  409fb5:	mov    DWORD PTR [ebp-0x24],eax
  409fb8:	mov    eax,ds:0x42e541
  409fbd:	mov    DWORD PTR [ebp-0x34],eax
  409fc0:	or     edi,eax
  409fc2:	and    DWORD PTR [ebp-0x30],0x0
  409fc6:	xor    DWORD PTR ds:0x429018,0x17b1
  409fd0:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  409fd7:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  409fde:	mov    eax,DWORD PTR [ebp-0x10]
  409fe1:	mov    ecx,DWORD PTR [ebp-0x10]
  409fe4:	sub    eax,ecx
  409fe6:	mov    DWORD PTR [ebp-0x10],eax
  409fe9:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  409ff0:	and    DWORD PTR ds:0x42901c,0x0
  409ffa:	xor    eax,eax
  409ffc:	or     eax,DWORD PTR ds:0x42901c
  40a002:	inc    eax
  40a003:	mov    ds:0x42901c,eax
  40a008:	cmp    DWORD PTR ds:0x42901c,0xb
  40a00f:	jne    0x40a029
  40a015:	push   0x42e14e
  40a01a:	push   DWORD PTR [ebp-0xc]
  40a01d:	push   DWORD PTR [ebp-0x18]
  40a020:	push   DWORD PTR [ebp-0x24]
  40a023:	call   DWORD PTR ds:0x42ed61
  40a029:	cmp    DWORD PTR ds:0x42901c,0xa
  40a030:	jne    0x40a041
  40a036:	mov    eax,ds:0x42901c
  40a03b:	inc    eax
  40a03c:	mov    ds:0x42901c,eax
  40a041:	cmp    DWORD PTR ds:0x42901c,0x13
  40a048:	jb     0x409ffa
  40a04e:	sub    eax,esi
  40a050:	mov    eax,DWORD PTR [ebp-0x18]
  40a053:	mov    ecx,DWORD PTR [ebp-0x18]
  40a056:	sub    eax,ecx
  40a058:	mov    DWORD PTR [ebp-0x18],eax
  40a05b:	and    DWORD PTR ds:0x429000,0x0
  40a065:	mov    edi,DWORD PTR ds:0x429000
  40a06b:	inc    edi
  40a06c:	mov    DWORD PTR ds:0x429000,edi
  40a072:	cmp    DWORD PTR ds:0x429000,0xe
  40a079:	jne    0x40a08f
  40a07f:	push   0x429000
  40a084:	push   0x4a29
  40a089:	call   DWORD PTR ds:0x42ed65
  40a08f:	cmp    DWORD PTR ds:0x429000,0xd
  40a096:	jne    0x40a0ab
  40a09c:	xor    edi,edi
  40a09e:	or     edi,DWORD PTR ds:0x429000
  40a0a4:	inc    edi
  40a0a5:	mov    DWORD PTR ds:0x429000,edi
  40a0ab:	cmp    DWORD PTR ds:0x429000,0x1e
  40a0b2:	jb     0x40a065
  40a0b8:	and    eax,0x2f3f
  40a0bd:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  40a0c4:	mov    eax,DWORD PTR [ebp-0xc]
  40a0c7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a0ca:	or     edi,esi
  40a0cc:	sub    eax,ecx
  40a0ce:	xor    edi,edi
  40a0d0:	xor    edi,DWORD PTR ds:0x42d004
  40a0d6:	and    DWORD PTR ds:0x429008,edi
  40a0dc:	mov    DWORD PTR [ebp-0xc],eax
  40a0df:	sbb    DWORD PTR ds:0x42a018,0x66a3
  40a0e9:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  40a0f0:	adc    DWORD PTR ds:0x42b010,ecx
  40a0f6:	mov    eax,DWORD PTR [ebp-0x1c]
  40a0f9:	mov    ecx,DWORD PTR [ebp-0x1c]
  40a0fc:	xor    esi,esi
  40a0fe:	xor    esi,DWORD PTR ds:0x411fec
  40a104:	mov    edi,DWORD PTR ds:0x411ff8
  40a10a:	sub    edi,esi
  40a10c:	and    esi,DWORD PTR [esi+edi*1]
  40a10f:	sub    eax,ecx
  40a111:	and    DWORD PTR ds:0x42c008,0x0
  40a11b:	mov    ecx,DWORD PTR ds:0x42c008
  40a121:	inc    ecx
  40a122:	mov    DWORD PTR ds:0x42c008,ecx
  40a128:	cmp    DWORD PTR ds:0x42c008,0x16
  40a12f:	jne    0x40a159
  40a135:	push   0x2fca
  40a13a:	push   0x42c014
  40a13f:	push   0x8b86
  40a144:	push   0x42e0af
  40a149:	push   0x5b55
  40a14e:	push   0x1406
  40a153:	call   DWORD PTR ds:0x42ed6d
  40a159:	cmp    DWORD PTR ds:0x42c008,0x10
  40a160:	jb     0x40a11b
  40a166:	add    DWORD PTR ds:0x42a018,ecx
  40a16c:	mov    DWORD PTR [ebp-0x1c],eax
  40a16f:	adc    DWORD PTR ds:0x42d018,ebx
  40a175:	or     DWORD PTR [ebp-0x1c],0xf89c85d5
  40a17c:	mov    eax,DWORD PTR [ebp-0x20]
  40a17f:	mov    ecx,DWORD PTR [ebp-0x20]
  40a182:	mov    DWORD PTR ds:0x42c014,0x17
  40a18c:	cmp    DWORD PTR ds:0x42c014,0x0
  40a193:	je     0x40a1be
  40a199:	cmp    DWORD PTR ds:0x42c014,0x22
  40a1a0:	jne    0x40a1ac
  40a1a6:	call   DWORD PTR ds:0x42ed71
  40a1ac:	mov    esi,DWORD PTR ds:0x42c014
  40a1b2:	dec    esi
  40a1b3:	mov    DWORD PTR ds:0x42c014,esi
  40a1b9:	jmp    0x40a18c
  40a1be:	sub    eax,ecx
  40a1c0:	and    DWORD PTR ds:0x42a004,0x0
  40a1ca:	jmp    0x40a1dc
  40a1cf:	mov    edi,DWORD PTR ds:0x42a004
  40a1d5:	inc    edi
  40a1d6:	mov    DWORD PTR ds:0x42a004,edi
  40a1dc:	cmp    DWORD PTR ds:0x42a004,0x15
  40a1e3:	jae    0x40a220
  40a1e9:	cmp    DWORD PTR ds:0x42a004,0x6
  40a1f0:	jne    0x40a201
  40a1f6:	push   0x42c008
  40a1fb:	call   DWORD PTR ds:0x42ed75
  40a201:	cmp    DWORD PTR ds:0x42a004,0x5
  40a208:	jne    0x40a21b
  40a20e:	mov    edi,DWORD PTR ds:0x42a004
  40a214:	inc    edi
  40a215:	mov    DWORD PTR ds:0x42a004,edi
  40a21b:	jmp    0x40a1cf
  40a220:	mov    DWORD PTR [ebp-0x20],eax
  40a223:	mov    eax,DWORD PTR [ebp-0x2c]
  40a226:	mov    ecx,DWORD PTR [ebp-0x20]
  40a229:	mov    esi,0x7510896
  40a22e:	xor    eax,esi
  40a230:	mov    edi,0x3272dd
  40a235:	add    eax,edi
  40a237:	or     eax,ecx
  40a239:	mov    DWORD PTR [ebp-0x20],eax
  40a23c:	mov    eax,DWORD PTR [ebp-0x4]
  40a23f:	mov    ecx,DWORD PTR [ebp-0x4]
  40a242:	sub    eax,ecx
  40a244:	mov    DWORD PTR [ebp-0x4],eax
  40a247:	or     DWORD PTR [ebp-0x4],0xf89c85be
  40a24e:	mov    eax,DWORD PTR [ebp-0xc]
  40a251:	xor    eax,esi
  40a253:	add    eax,edi
  40a255:	push   eax
  40a256:	mov    eax,DWORD PTR [ebp-0x10]
  40a259:	xor    eax,esi
  40a25b:	add    eax,edi
  40a25d:	push   eax
  40a25e:	mov    eax,DWORD PTR [ebp-0x4]
  40a261:	xor    eax,esi
  40a263:	add    eax,edi
  40a265:	push   eax
  40a266:	lea    eax,[ebp-0x7c]
  40a269:	push   eax
  40a26a:	push   DWORD PTR [ebp-0x2c]
  40a26d:	push   DWORD PTR [ebp-0x28]
  40a270:	call   0x40f163
  40a275:	test   eax,eax
  40a277:	je     0x40a2a5
  40a27d:	lea    eax,[ebp-0x7c]
  40a280:	push   eax
  40a281:	mov    eax,DWORD PTR [ebp-0x28]
  40a284:	xor    eax,esi
  40a286:	add    eax,edi
  40a288:	push   eax
  40a289:	mov    eax,DWORD PTR [ebp-0x24]
  40a28c:	add    eax,0xaa
  40a291:	push   eax
  40a292:	mov    eax,DWORD PTR [ebp-0x24]
  40a295:	mov    eax,DWORD PTR [eax+0x198]
  40a29b:	push   DWORD PTR [eax]
  40a29d:	call   0x40508b
  40a2a2:	mov    DWORD PTR [ebp-0x14],eax
  40a2a5:	lea    eax,[ebp+0x4]
  40a2a8:	mov    DWORD PTR [ebp-0x30],eax
  40a2ab:	mov    eax,DWORD PTR [ebp-0x14]
  40a2ae:	test   eax,eax
  40a2b0:	je     0x40a318
  40a2b6:	lea    eax,[ebp-0x8]
  40a2b9:	mov    DWORD PTR [ebp-0x38],eax
  40a2bc:	mov    eax,DWORD PTR [ebp-0x34]
  40a2bf:	mov    DWORD PTR [ebp-0x8],eax
  40a2c2:	mov    eax,DWORD PTR [ebp-0x8]
  40a2c5:	mov    ecx,DWORD PTR [ebp-0x14]
  40a2c8:	sub    eax,ecx
  40a2ca:	mov    DWORD PTR [ebp-0x8],eax
  40a2cd:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2d0:	xor    ecx,esi
  40a2d2:	mov    eax,0xffcd8d23
  40a2d7:	sub    eax,ecx
  40a2d9:	add    DWORD PTR [ebp-0x8],eax
  40a2dc:	mov    eax,DWORD PTR [ebp-0x8]
  40a2df:	mov    ecx,DWORD PTR [ebp-0x14]
  40a2e2:	mov    DWORD PTR [ecx+0x1],eax
  40a2e5:	mov    eax,DWORD PTR [ebp-0x14]
  40a2e8:	push   DWORD PTR [ebp-0x24]
  40a2eb:	mov    BYTE PTR [eax],0xe9
  40a2ee:	mov    eax,ds:0x42e2b1
  40a2f3:	push   DWORD PTR [eax]
  40a2f5:	push   DWORD PTR ds:0x42e50d
  40a2fb:	push   DWORD PTR ds:0x42e2b9
  40a301:	push   DWORD PTR ds:0x42e4ed
  40a307:	push   DWORD PTR ds:0x42eafd
  40a30d:	push   DWORD PTR [ebp-0x28]
  40a310:	push   DWORD PTR [ebp-0x2c]
  40a313:	mov    eax,DWORD PTR [ebp-0x14]
  40a316:	call   eax
  40a318:	mov    eax,DWORD PTR [ebp-0x30]
  40a31b:	mov    ecx,DWORD PTR ds:0x42e4b1
  40a321:	add    DWORD PTR [eax],ecx
  40a323:	pop    edi
  40a324:	pop    esi
  40a325:	leave  
  40a326:	ret    
  40a327:	push   ebp
  40a328:	mov    ebp,esp
  40a32a:	sub    esp,0x18
  40a32d:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  40a334:	lea    eax,[ebp+0x14]
  40a337:	mov    DWORD PTR [ebp-0x4],eax
  40a33a:	add    edx,0x781f
  40a340:	push   esi
  40a341:	and    esi,esi
  40a343:	mov    esi,0xf89c85b5
  40a348:	mov    DWORD PTR [ebp-0xc],esi
  40a34b:	lea    eax,[ebp-0xc]
  40a34e:	mov    DWORD PTR [ebp-0x14],eax
  40a351:	mov    eax,DWORD PTR [ebp-0xc]
  40a354:	mov    edx,DWORD PTR [ebp-0x14]
  40a357:	mov    ecx,0x7510896
  40a35c:	and    DWORD PTR ds:0x42d010,0x34d
  40a366:	xor    eax,ecx
  40a368:	sub    DWORD PTR ds:0x42a00c,0x429018
  40a372:	add    eax,0x3272dd
  40a377:	adc    DWORD PTR ds:0x42d00c,0x760b
  40a381:	mov    DWORD PTR [edx],eax
  40a383:	dec    edx
  40a384:	mov    eax,ds:0x42e2ad
  40a389:	sub    DWORD PTR ds:0x429008,ecx
  40a38f:	mov    edx,DWORD PTR [ebp-0x4]
  40a392:	mov    eax,DWORD PTR [eax]
  40a394:	and    DWORD PTR ds:0x42d004,0x42a01c
  40a39e:	add    eax,DWORD PTR [edx]
  40a3a0:	push   edi
  40a3a1:	mov    DWORD PTR [ebp-0x8],eax
  40a3a4:	and    DWORD PTR ds:0x42c008,0x0
  40a3ae:	jmp    0x40a3c0
  40a3b3:	mov    edi,DWORD PTR ds:0x42c008
  40a3b9:	inc    edi
  40a3ba:	mov    DWORD PTR ds:0x42c008,edi
  40a3c0:	cmp    DWORD PTR ds:0x42c008,0x1f
  40a3c7:	jae    0x40a451
  40a3cd:	cmp    DWORD PTR ds:0x42c008,0x25
  40a3d4:	jne    0x40a3e8
  40a3da:	push   0x3550
  40a3df:	push   DWORD PTR [ebp-0x1c]
  40a3e2:	call   DWORD PTR ds:0x42ed35
  40a3e8:	jmp    0x40a3b3
  40a3ed:	and    DWORD PTR ds:0x42d018,0x0
  40a3f7:	jmp    0x40a407
  40a3fc:	mov    eax,ds:0x42d018
  40a401:	inc    eax
  40a402:	mov    ds:0x42d018,eax
  40a407:	cmp    DWORD PTR ds:0x42d018,0x1a
  40a40e:	jae    0x40a451
  40a414:	cmp    DWORD PTR ds:0x42d018,0x8
  40a41b:	jne    0x40a434
  40a421:	push   DWORD PTR [ebp-0x1c]
  40a424:	push   0x42d014
  40a429:	push   0x5fa0
  40a42e:	call   DWORD PTR ds:0x42ed39
  40a434:	cmp    DWORD PTR ds:0x42d018,0x7
  40a43b:	jne    0x40a44c
  40a441:	mov    eax,ds:0x42d018
  40a446:	inc    eax
  40a447:	mov    ds:0x42d018,eax
  40a44c:	jmp    0x40a3fc
  40a451:	mov    edi,DWORD PTR [ebp+0x8]
  40a454:	mov    eax,ds:0x42e435
  40a459:	and    DWORD PTR ds:0x42a00c,0x728
  40a463:	mov    eax,DWORD PTR [eax+0x198]
  40a469:	xor    edi,ecx
  40a46b:	mov    edx,0x3272dd
  40a470:	and    DWORD PTR ds:0x42b010,0x42d000
  40a47a:	add    edi,edx
  40a47c:	mov    DWORD PTR ds:0x429000,0x5af1
  40a486:	cmp    DWORD PTR [eax],edi
  40a488:	je     0x40a49f
  40a48e:	mov    DWORD PTR ds:0x429000,0x225c
  40a498:	mov    eax,DWORD PTR [eax]
  40a49a:	jmp    0x40cc18
  40a49f:	mov    eax,0x3847
  40a4a4:	mov    eax,DWORD PTR [ebp+0x18]
  40a4a7:	cmp    eax,esi
  40a4a9:	mov    DWORD PTR ds:0x429014,0x6496
  40a4b3:	jne    0x40a4d7
  40a4b9:	mov    DWORD PTR ds:0x42b000,0x18c7
  40a4c3:	push   0xf89c85b2
  40a4c8:	mov    DWORD PTR ds:0x42c014,0x18
  40a4d2:	jmp    0x40cc07
  40a4d7:	mov    esi,DWORD PTR [ebp+0x18]
  40a4da:	mov    DWORD PTR ds:0x42b000,ebx
  40a4e0:	mov    eax,0xf89c85b3
  40a4e5:	cmp    esi,eax
  40a4e7:	mov    DWORD PTR ds:0x42b008,0x2007
  40a4f1:	jne    0x40cbf7
  40a4f7:	mov    eax,ds:0x42c008
  40a4fc:	xor    DWORD PTR ds:0x429004,eax
  40a502:	mov    eax,DWORD PTR [ebp+0x10]
  40a505:	dec    esi
  40a506:	xor    eax,ecx
  40a508:	adc    esi,DWORD PTR ds:0x42d008
  40a50e:	add    eax,edx
  40a510:	xor    esi,esi
  40a512:	or     esi,DWORD PTR ds:0x42c008
  40a518:	adc    DWORD PTR ds:0x42d010,esi
  40a51e:	mov    DWORD PTR [ebp-0x18],eax
  40a521:	mov    eax,DWORD PTR [ebp+0xc]
  40a524:	adc    DWORD PTR ds:0x42d010,0x3da6
  40a52e:	mov    esi,DWORD PTR [ebp-0x8]
  40a531:	xor    eax,ecx
  40a533:	add    DWORD PTR ds:0x42d018,0x6859
  40a53d:	add    eax,edx
  40a53f:	imul   eax,DWORD PTR [esi]
  40a542:	mov    esi,DWORD PTR [ebp+0x8]
  40a545:	or     DWORD PTR ds:0x42d014,0x363e
  40a54f:	xor    esi,ecx
  40a551:	mov    DWORD PTR ds:0x42b010,0xc36
  40a55b:	add    esi,edx
  40a55d:	mov    DWORD PTR ds:0x42d010,0x490b
  40a567:	cmp    esi,eax
  40a569:	mov    eax,ds:0x42d018
  40a56e:	mov    eax,DWORD PTR [ebp-0x4]
  40a571:	push   ebx
  40a572:	mov    DWORD PTR ds:0x42a008,0x30a3
  40a57c:	je     0x40a688
  40a582:	mov    DWORD PTR ds:0x42d008,0x4e69
  40a58c:	mov    esi,DWORD PTR [ebp-0x18]
  40a58f:	or     DWORD PTR ds:0x42a01c,0x42c010
  40a599:	add    DWORD PTR [eax],esi
  40a59b:	mov    DWORD PTR ds:0x42b00c,0x14
  40a5a5:	cmp    DWORD PTR ds:0x42b00c,0x0
  40a5ac:	je     0x40a5f7
  40a5b2:	cmp    DWORD PTR ds:0x42b00c,0x3
  40a5b9:	jne    0x40a5cf
  40a5bf:	push   0x42e0a1
  40a5c4:	push   0x42e035
  40a5c9:	call   DWORD PTR ds:0x42ed3d
  40a5cf:	cmp    DWORD PTR ds:0x42b00c,0x4
  40a5d6:	jne    0x40a5e7
  40a5dc:	mov    eax,ds:0x42b00c
  40a5e1:	dec    eax
  40a5e2:	mov    ds:0x42b00c,eax
  40a5e7:	mov    eax,ds:0x42b00c
  40a5ec:	dec    eax
  40a5ed:	mov    ds:0x42b00c,eax
  40a5f2:	jmp    0x40a5a5
  40a5f7:	mov    eax,DWORD PTR [ebp-0x4]
  40a5fa:	mov    DWORD PTR ds:0x42d004,0x12
  40a604:	cmp    DWORD PTR ds:0x42d004,0x0
  40a60b:	je     0x40a64f
  40a611:	cmp    DWORD PTR ds:0x42d004,0x21
  40a618:	jne    0x40a633
  40a61e:	push   0x5688
  40a623:	push   0x5318
  40a628:	push   0x314e
  40a62d:	call   DWORD PTR ds:0x42ed41
  40a633:	mov    esi,DWORD PTR ds:0x42d004
  40a639:	dec    esi
  40a63a:	mov    DWORD PTR ds:0x42d004,esi
  40a640:	jmp    0x40a604
  40a645:	sub    DWORD PTR ds:0x42c010,0x7728
  40a64f:	mov    esi,DWORD PTR [ebp+0xc]
  40a652:	add    DWORD PTR ds:0x42c018,0x42b00c
  40a65c:	xor    esi,ecx
  40a65e:	xor    DWORD PTR ds:0x429020,0x39e1
  40a668:	add    esi,edx
  40a66a:	xor    DWORD PTR ds:0x42b00c,0x429028
  40a674:	imul   esi,DWORD PTR [eax]
  40a677:	mov    DWORD PTR [eax],esi
  40a679:	mov    DWORD PTR ds:0x42d000,0x1b30
  40a683:	jmp    0x40a68f
  40a688:	and    edi,edi
  40a68a:	mov    esi,DWORD PTR [ebp+0x14]
  40a68d:	xor    DWORD PTR [eax],esi
  40a68f:	sbb    eax,edi
  40a691:	mov    eax,DWORD PTR [ebp-0x4]
  40a694:	mov    DWORD PTR ds:0x429020,0x1e
  40a69e:	cmp    DWORD PTR ds:0x429020,0x0
  40a6a5:	je     0x40a6f7
  40a6ab:	cmp    DWORD PTR ds:0x429020,0xf
  40a6b2:	jne    0x40a6cb
  40a6b8:	push   DWORD PTR [ebp-0x24]
  40a6bb:	push   0x42b000
  40a6c0:	push   0x2936
  40a6c5:	call   DWORD PTR ds:0x42ed45
  40a6cb:	cmp    DWORD PTR ds:0x429020,0x10
  40a6d2:	jne    0x40a6e5
  40a6d8:	mov    esi,DWORD PTR ds:0x429020
  40a6de:	dec    esi
  40a6df:	mov    DWORD PTR ds:0x429020,esi
  40a6e5:	mov    esi,DWORD PTR ds:0x429020
  40a6eb:	dec    esi
  40a6ec:	mov    DWORD PTR ds:0x429020,esi
  40a6f2:	jmp    0x40a69e
  40a6f7:	mov    edi,DWORD PTR [ebp+0x10]
  40a6fa:	xor    edi,ecx
  40a6fc:	mov    esi,0xffcd8d23
  40a701:	mov    ebx,esi
  40a703:	sub    ebx,edi
  40a705:	jmp    0x40caae
  40a70a:	inc    ecx
  40a70b:	sbb    al,0x8b
  40a70e:	fwait
  40a70f:	jnp    0x40a702
  40a711:	mov    BYTE PTR [ebx-0x60a83f7d],bl
  40a717:	ret    
  40a718:	stc    
  40a719:	push   ecx
  40a71a:	ins    DWORD PTR es:[edi],dx
  40a71b:	add    al,0x7a
  40a71d:	jp     0x40a705
  40a71f:	pop    edi
  40a720:	jp     0x40a79c
  40a722:	fcmovnu st,st(1)
  40a724:	cwde   
  40a725:	scas   al,BYTE PTR es:[edi]
  40a726:	fdiv   QWORD PTR [ecx+edx*4]
  40a729:	lahf   
  40a72a:	in     eax,0xaf
  40a72c:	rol    ah,1
  40a72e:	lods   eax,DWORD PTR ds:[esi]
  40a72f:	dec    ebx
  40a730:	add    ebp,esi
  40a732:	adc    eax,0x15ff9ae7
  40a737:	mov    ch,0xed
  40a739:	xchg   esi,eax
  40a73a:	dec    edi
  40a73b:	mov    dl,0x42
  40a73d:	sbb    eax,0x17d2b62d
  40a742:	xchg   ebx,eax
  40a743:	lods   al,BYTE PTR ds:[esi]
  40a744:	bound  ecx,QWORD PTR [ecx-0x48170fa1]
  40a74a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a74b:	cmp    DWORD PTR [edi],edi
  40a74d:	dec    ecx
  40a74e:	cli    
  40a74f:	or     eax,0x3f4672ba
  40a754:	dec    DWORD PTR [ecx+0x4cdadc52]
  40a75a:	and    bh,ch
  40a75c:	mov    ecx,0xd0d60aca
  40a761:	jmp    0x8d0:0xa3703b6c
  40a768:	neg    dh
  40a76a:	dec    eax
  40a76b:	mov    dl,0x11
  40a76d:	std    
  40a76e:	and    DWORD PTR [edi],ebx
  40a770:	or     eax,0xa54dbfde
  40a775:	das    
  40a776:	das    
  40a777:	mov    ebp,ebx
  40a779:	push   ecx
  40a77a:	xor    eax,0x9c0b0ef8
  40a77f:	fisubr DWORD PTR [esi-0x34]
  40a782:	shl    DWORD PTR [ecx+0x79],1
  40a785:	jne    0x40a7c4
  40a787:	xchg   esi,eax
  40a788:	cmp    ecx,DWORD PTR [ecx-0x1bc8212]
  40a78e:	pop    es
  40a78f:	scas   eax,DWORD PTR es:[edi]
  40a790:	clc    
  40a791:	ss popa 
  40a793:	jo     0x40a742
  40a795:	sti    
  40a796:	in     eax,0x4f
  40a798:	aad    0x2d
  40a79a:	mov    ds:0x22eebe51,eax
  40a79f:	adc    al,0xf1
  40a7a1:	(bad)  
  40a7a3:	sub    dh,BYTE PTR [edx]
  40a7a5:	mov    eax,0x11eef72
  40a7aa:	not    BYTE PTR [esi+edi*4-0x60]
  40a7ae:	mov    fs,edi
  40a7b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7b1:	stos   BYTE PTR es:[edi],al
  40a7b2:	pop    ds
  40a7b3:	out    dx,eax
  40a7b4:	pop    edx
  40a7b5:	xchg   esp,eax
  40a7b6:	add    al,0x48
  40a7b8:	jg     0x40a7c3
  40a7ba:	or     DWORD PTR [edi+0x4195b62f],0x6a1f6cb2
  40a7c4:	fadd   QWORD PTR [esi-0x2c]
  40a7c7:	mov    dh,0x15
  40a7c9:	scas   al,BYTE PTR es:[edi]
  40a7ca:	inc    edi
  40a7cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7cc:	shl    DWORD PTR [eax-0x23fefc66],cl
  40a7d2:	jg     0x40a7e6
  40a7d4:	fimul  DWORD PTR [edi+0x62]
  40a7d7:	jnp    0x40a82e
  40a7d9:	cs jns 0x40a7e1
  40a7dc:	push   eax
  40a7dd:	fisub  DWORD PTR [eax]
  40a7e0:	mov    ah,0x9b
  40a7e2:	repnz pop edx
  40a7e4:	arpl   WORD PTR [ebx],dx
  40a7e6:	js     0x40a865
  40a7e8:	adc    DWORD PTR [edx],eax
  40a7ea:	jno    0x40a7c4
  40a7ec:	iret   
  40a7ed:	xor    DWORD PTR [esi+0x64be9f92],ebp
  40a7f3:	aas    
  40a7f4:	dec    eax
  40a7f5:	bound  ebx,QWORD PTR [ebp+eax*1+0x4b]
  40a7f9:	iret   
  40a7fa:	push   ss
  40a7fb:	inc    DWORD PTR [ecx]
  40a7fd:	pusha  
  40a7fe:	sar    BYTE PTR [edx+0x6cf77a8],cl
  40a804:	shl    DWORD PTR [esi+0x73],cl
  40a807:	pop    esi
  40a808:	jae    0x40a82d
  40a80a:	add    ebp,ebp
  40a80c:	or     eax,0x8461e168
  40a811:	call   0x416c:0xd306fd2f
  40a818:	push   ds
  40a819:	jmp    0xbfd58a52
  40a81e:	retf   0xc33f
  40a821:	shl    BYTE PTR [edi+0x359d4f56],cl
  40a827:	loopne 0x40a8a2
  40a829:	jmp    0xb8d7:0x4561da70
  40a830:	imul   ebx,DWORD PTR [eax-0x1f],0xffffff9d
  40a834:	jmp    0x40a87f
  40a836:	mov    ecx,0xff08c4aa
  40a83b:	in     eax,0xf9
  40a83d:	(bad)  
  40a83e:	and    DWORD PTR [esi+eax*2+0x1d],0x5f
  40a843:	inc    ebx
  40a844:	rcr    DWORD PTR [eax],cl
  40a846:	rol    bh,0xfd
  40a849:	stc    
  40a84a:	jl     0x40a8a8
  40a84c:	repnz ins DWORD PTR es:[edi],dx
  40a84e:	mov    ch,0x73
  40a850:	push   ebx
  40a851:	xchg   esp,eax
  40a852:	xor    al,0x5a
  40a854:	mov    ecx,0xdab99d5b
  40a859:	jns    0x40a824
  40a85b:	fsubr  QWORD PTR ds:[eax]
  40a85e:	mov    ah,0x64
  40a860:	or     eax,0x54c8d37b
  40a865:	pusha  
  40a866:	mov    ebx,DWORD PTR [eax-0x31]
  40a869:	add    BYTE PTR [ecx],bl
  40a86b:	mov    ch,0x87
  40a86d:	call   0x3ac800ab
  40a872:	push   0x70345922
  40a877:	arpl   WORD PTR [eax+0x1bc38945],bx
  40a87d:	repz gs pop esi
  40a880:	mov    dh,0x7c
  40a882:	or     DWORD PTR [esi+ecx*8-0x15],esi
  40a886:	sbb    eax,0xf7e5f558
  40a88b:	xor    al,0x7d
  40a88d:	xchg   ebx,eax
  40a88e:	sbb    eax,0xdaf519c5
  40a893:	cmp    edx,DWORD PTR [ecx+0x10]
  40a896:	out    dx,eax
  40a897:	in     eax,dx
  40a898:	adc    DWORD PTR [ecx-0x5ff1b385],0xbfa9f7ec
  40a8a2:	and    al,0xd7
  40a8a4:	sub    dh,bl
  40a8a6:	cld    
  40a8a7:	mov    esp,0x849e8482
  40a8ac:	add    DWORD PTR [ecx+0x52c455d0],eax
  40a8b2:	add    ecx,0x5ae7eeab
  40a8b8:	scas   eax,DWORD PTR es:[edi]
  40a8b9:	xchg   edi,eax
  40a8ba:	xchg   edi,eax
  40a8bb:	jp     0x40a918
  40a8bd:	mov    ds:0x8ddefff4,al
  40a8c2:	imul   esp,DWORD PTR [esi],0x2d3983d3
  40a8c8:	or     DWORD PTR [eax],edi
  40a8ca:	aas    
  40a8cb:	inc    eax
  40a8cc:	cmp    al,0x34
  40a8ce:	pop    esi
  40a8cf:	ja     0x40a85f
  40a8d1:	mov    dl,0x55
  40a8d3:	int3   
  40a8d4:	and    DWORD PTR [eax+0x24],0x6e
  40a8d8:	sti    
  40a8d9:	and    esi,0xeb837eda
  40a8df:	inc    edi
  40a8e0:	pushf  
  40a8e1:	aam    0x3a
  40a8e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8e4:	ds (bad) 
  40a8e6:	in     eax,0x4a
  40a8e8:	xor    eax,0xeef78e57
  40a8ed:	adc    ch,dl
  40a8ef:	sahf   
  40a8f0:	test   al,0x61
  40a8f2:	mov    edi,0xb15c480
  40a8f7:	sbb    bl,BYTE PTR [edi+0x54]
  40a8fa:	mov    esp,0x9cc5f111
  40a8ff:	mov    ch,0x74
  40a901:	aam    0xe1
  40a903:	retf   0x6a0e
  40a906:	add    BYTE PTR [ebx+0x6b8947e1],dl
  40a90c:	adc    ah,bh
  40a90e:	rcl    BYTE PTR [ebp+ebp*4-0x41],1
  40a912:	aam    0xe6
  40a914:	in     eax,0x35
  40a916:	mov    bl,0x55
  40a918:	mov    eax,ds:0xe74e89f8
  40a91d:	test   eax,0xa7b977d7
  40a922:	imul   ebx,edx,0xffffff81
  40a925:	inc    ebp
  40a926:	push   esp
  40a927:	xchg   esp,edi
  40a929:	pop    edx
  40a92a:	mov    esi,0x94ab8ccd
  40a92f:	lahf   
  40a930:	icebp  
  40a931:	call   0x27ae:0xb9b0e03
  40a938:	mov    dh,0x4a
  40a93a:	xor    esp,DWORD PTR [ecx+0x79c0c96d]
  40a940:	cld    
  40a941:	js     0x40a92a
  40a943:	pop    edx
  40a944:	dec    edi
  40a945:	fld    TBYTE PTR [ebp+0x1b]
  40a948:	mov    cl,0x18
  40a94a:	mov    ch,bl
  40a94c:	cmc    
  40a94d:	xchg   BYTE PTR [ecx-0x4b],bl
  40a950:	add    bl,ah
  40a952:	mov    cl,0xd5
  40a954:	pop    es
  40a955:	pop    edi
  40a956:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a957:	dec    edx
  40a958:	jg     0x40a995
  40a95a:	jnp    0x40a9b0
  40a95c:	(bad)  
  40a95d:	stc    
  40a95e:	jb     0x40a9bf
  40a960:	add    al,ah
  40a962:	push   edi
  40a963:	xor    DWORD PTR [eax],edi
  40a965:	ds inc ecx
  40a967:	xor    BYTE PTR [esi+ebp*1],bl
  40a96a:	hlt    
  40a96b:	sbb    ecx,esi
  40a96d:	sbb    eax,DWORD PTR [ebx+0x997d74c]
  40a973:	mov    ebp,0xf77e2abc
  40a978:	mov    bh,0x5a
  40a97a:	imul   esp,DWORD PTR [esi+0x150ca071],0xffffff96
  40a981:	jb     0x40a983
  40a983:	inc    esi
  40a984:	mov    dl,BYTE PTR [ecx]
  40a986:	bound  esi,QWORD PTR [esi+edi*8]
  40a989:	xor    ebx,DWORD PTR [edx+esi*8]
  40a98c:	xchg   ebp,eax
  40a98d:	pop    di
  40a98f:	push   ebx
  40a990:	test   BYTE PTR [esi],0xe2
  40a993:	aad    0x49
  40a995:	in     al,dx
  40a996:	cmp    al,0xb9
  40a998:	dec    edx
  40a999:	fcmove st,st(0)
  40a99b:	out    dx,eax
  40a99c:	sub    DWORD PTR [edx+ebp*8],ecx
  40a99f:	xchg   edx,eax
  40a9a0:	inc    edx
  40a9a1:	and    al,0x5a
  40a9a3:	cmp    eax,0x9919f331
  40a9a8:	inc    ecx
  40a9a9:	jecxz  0x40aa16
  40a9ab:	jl     0x40aa1a
  40a9ad:	jmp    0x40a96e
  40a9af:	and    ebx,DWORD PTR [edx]
  40a9b1:	pop    ebp
  40a9b2:	pop    edi
  40a9b3:	mov    esi,DWORD PTR [ebp-0xa]
  40a9b6:	xor    DWORD PTR [esi-0x3db60a90],esp
  40a9bc:	add    eax,0x69d5ff3f
  40a9c1:	and    eax,0x3388836f
  40a9c6:	rcl    DWORD PTR [eax+eiz*1-0x17f720e7],1
  40a9cd:	test   DWORD PTR ds:0x15e6c525,eax
  40a9d3:	jb     0x40aa47
  40a9d5:	jle    0x40a9ac
  40a9d7:	mov    cl,0x49
  40a9d9:	add    eax,0x9f2e8efd
  40a9de:	scas   al,BYTE PTR es:[edi]
  40a9df:	out    0x9f,al
  40a9e1:	lahf   
  40a9e2:	xor    esp,esp
  40a9e4:	jl     0x40aa5b
  40a9e6:	pop    eax
  40a9e7:	retf   
  40a9e8:	neg    BYTE PTR [edi]
  40a9ea:	mov    cl,0x89
  40a9ec:	loopne 0x40a9e9
  40a9ee:	ds or  eax,0x9d526e4
  40a9f4:	pop    esp
  40a9f5:	push   ds
  40a9f6:	push   es
  40a9f7:	dec    edi
  40a9f8:	adc    ebp,DWORD PTR [eax+0x7c]
  40a9fb:	or     DWORD PTR [edi-0x5a8e9a82],edx
  40aa01:	test   al,0xc9
  40aa03:	dec    edi
  40aa04:	mov    WORD PTR [ecx+0x7ea4561d],ds
  40aa0a:	outs   dx,DWORD PTR ds:[esi]
  40aa0b:	add    ebx,DWORD PTR [esi]
  40aa0d:	cmp    bl,BYTE PTR [esi]
  40aa0f:	inc    edi
  40aa10:	inc    edi
  40aa11:	jl     0x40aa91
  40aa13:	call   0x85750b80
  40aa18:	mov    ah,0xf9
  40aa1a:	adc    eax,0x826381d5
  40aa1f:	call   0x1656:0x22638f18
  40aa26:	pop    esi
  40aa27:	fsub   st(1),st
  40aa29:	nop
  40aa2a:	fld    DWORD PTR gs:[ecx]
  40aa2d:	pop    ecx
  40aa2e:	fwait
  40aa2f:	mov    ecx,0xe4ea276
  40aa34:	ins    DWORD PTR es:[edi],dx
  40aa35:	repnz sbb al,dh
  40aa38:	cmp    al,BYTE PTR [edi-0x5f52c015]
  40aa3e:	aad    0xf8
  40aa40:	push   edi
  40aa41:	push   cs
  40aa42:	out    0x28,eax
  40aa44:	mov    esi,0xf9412928
  40aa49:	mov    al,ds:0xea188267
  40aa4e:	mov    ebp,0x5109efb6
  40aa53:	dec    edi
  40aa54:	pushf  
  40aa55:	lahf   
  40aa56:	call   0x7238:0xeca14729
  40aa5d:	xor    eax,0x1d6e24ba
  40aa62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa63:	add    eax,0x4609f9c1
  40aa68:	mov    eax,ds:0xff8c7e55
  40aa6d:	dec    ecx
  40aa6e:	fdivr  st(7),st
  40aa70:	cld    
  40aa71:	stos   BYTE PTR es:[edi],al
  40aa72:	sub    DWORD PTR [ecx+0x76],ebx
  40aa75:	loopne 0x40a9fe
  40aa77:	popf   
  40aa78:	xor    DWORD PTR [ebp-0x1403ea11],eax
  40aa7e:	sub    al,0xb6
  40aa80:	xlat   BYTE PTR ds:[ebx]
  40aa81:	mov    ebx,0x8aa8b50c
  40aa86:	sub    ebp,ebp
  40aa88:	dec    esp
  40aa89:	lds    esi,FWORD PTR [ecx-0x17c7c936]
  40aa8f:	out    dx,eax
  40aa90:	test   BYTE PTR [esi-0x77],0xd6
  40aa94:	xor    BYTE PTR [esi+edi*8+0x9d67f7e],ah
  40aa9b:	and    al,0xb2
  40aa9d:	icebp  
  40aa9e:	dec    ebp
  40aa9f:	or     edx,DWORD PTR [edi]
  40aaa1:	inc    edx
  40aaa2:	shr    BYTE PTR [eax],0x16
  40aaa5:	push   DWORD PTR ds:0x57ad7533
  40aaab:	adc    eax,0x4b75d784
  40aab0:	xchg   ebp,eax
  40aab1:	mov    ss,WORD PTR [ecx-0x62]
  40aab4:	mov    eax,ss
  40aab6:	sbb    eax,0x4bbdd57d
  40aabb:	add    dl,BYTE PTR [ecx]
  40aabd:	inc    edi
  40aabe:	retf   
  40aabf:	jns    0x40aa65
  40aac1:	push   ebx
  40aac2:	xor    DWORD PTR [esp+eiz*8+0x65edd68b],ebx
  40aac9:	xchg   ecx,edx
  40aacb:	sub    BYTE PTR [eax-0x45920567],al
  40aad1:	stc    
  40aad2:	rcl    DWORD PTR [edx],0x38
  40aad5:	jle    0x40aa89
  40aad7:	cdq    
  40aad8:	fsub   DWORD PTR [esi-0x7207583]
  40aade:	lods   eax,DWORD PTR ds:[esi]
  40aadf:	jne    0x40ab0c
  40aae1:	jl     0x40aa99
  40aae3:	rcl    DWORD PTR [ebx+0x73],1
  40aae6:	push   ecx
  40aae7:	sbb    eax,0x46a7d36
  40aaec:	pop    ss
  40aaed:	data16 or al,ch
  40aaf0:	jb     0x40ab1f
  40aaf2:	mov    DWORD PTR [edx+esi*8],esp
  40aaf5:	mov    edi,DWORD PTR [ebp-0x74]
  40aaf8:	push   ds
  40aaf9:	jmp    0x887:0xedb22df0
  40ab00:	xor    al,0x98
  40ab02:	pop    ebx
  40ab03:	cwde   
  40ab04:	das    
  40ab05:	fsub   st,st(7)
  40ab07:	sbb    dh,al
  40ab09:	xor    BYTE PTR [ecx-0x4f14915e],ch
  40ab0f:	mov    esp,ecx
  40ab11:	sub    ah,BYTE PTR [ecx]
  40ab13:	mov    eax,0xc4905764
  40ab18:	jo     0x40aac2
  40ab1a:	jg     0x40ab12
  40ab1c:	sub    BYTE PTR [eax+edx*8],dl
  40ab1f:	mov    ds:0x294955d9,eax
  40ab24:	add    BYTE PTR [esi-0xe],ch
  40ab27:	jns    0x40ab16
  40ab29:	pop    edi
  40ab2a:	sahf   
  40ab2b:	aam    0x63
  40ab2d:	das    
  40ab2e:	call   0xaf3e12ab
  40ab33:	cmovs  ecx,eax
  40ab36:	shl    BYTE PTR [ebx+ebx*1+0x7a0662b9],cl
  40ab3d:	test   al,0x39
  40ab3f:	cli    
  40ab40:	sub    al,BYTE PTR [eax+esi*1-0xa]
  40ab44:	sub    BYTE PTR [edi-0x28d9df0d],cl
  40ab4a:	cwde   
  40ab4b:	xor    ah,ah
  40ab4d:	xchg   ebp,eax
  40ab4e:	adc    bl,cl
  40ab50:	pop    es
  40ab51:	repnz outs dx,BYTE PTR ds:[esi]
  40ab53:	push   0xffffff9d
  40ab55:	pop    esi
  40ab56:	clc    
  40ab57:	xor    BYTE PTR [edi-0x2a],bl
  40ab5a:	neg    DWORD PTR [esi]
  40ab5c:	add    BYTE PTR [esi+0x29fd03a9],dh
  40ab62:	(bad)  
  40ab63:	jge    0x40ab85
  40ab65:	xchg   ecx,eax
  40ab66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab67:	cmp    al,0x37
  40ab69:	sub    ch,dh
  40ab6b:	mov    gs,WORD PTR [esi+0x2]
  40ab6e:	stos   BYTE PTR es:[edi],al
  40ab6f:	aas    
  40ab70:	bound  edi,QWORD PTR [ebp+0x7e]
  40ab73:	mov    esp,DWORD PTR [edi]
  40ab75:	add    eax,0x38c1529
  40ab7a:	pop    ds
  40ab7b:	or     al,BYTE PTR [edi]
  40ab7d:	add    ch,BYTE PTR [eax+0x7e]
  40ab80:	fst    QWORD PTR [edi+0x200fca55]
  40ab86:	mov    ?,WORD PTR ds:0x81a54bce
  40ab8c:	popa   
  40ab8d:	jl     0x40abfe
  40ab8f:	stc    
  40ab90:	adc    eax,0x5199e9c
  40ab95:	mov    DWORD PTR [ecx-0x312110fe],ebp
  40ab9b:	adc    BYTE PTR [esp+eax*2+0x4a],0x7
  40aba0:	iret   
  40aba1:	cli    
  40aba2:	adc    ebx,ebp
  40aba4:	stos   BYTE PTR es:[edi],al
  40aba5:	retf   0x96a2
  40aba8:	inc    ebx
  40aba9:	jno    0x40ab2e
  40abab:	int    0x90
  40abad:	mov    edi,0xeb1d240d
  40abb2:	gs dec edi
  40abb4:	aam    0x4e
  40abb6:	mov    ds:0xf01f6667,eax
  40abbb:	call   0x544b:0x3d3518c3
  40abc2:	dec    esi
  40abc3:	adc    ah,BYTE PTR [esp+ebx*2]
  40abc6:	(bad)  
  40abc7:	and    al,bl
  40abc9:	std    
  40abca:	fnstsw WORD PTR [esi]
  40abcc:	xor    BYTE PTR ds:[edi+0x2c30d4f7],cl
  40abd3:	sahf   
  40abd4:	or     edi,edi
  40abd6:	pop    esi
  40abd7:	mov    edx,0xa0fad562
  40abdc:	(bad)  
  40abdd:	pop    eax
  40abde:	or     al,0xe
  40abe0:	retf   
  40abe1:	cwde   
  40abe2:	shl    DWORD PTR [edi-0x1a],0xe
  40abe6:	test   eax,0x43ba3b90
  40abeb:	retf   
  40abec:	popf   
  40abed:	sar    DWORD PTR [edi],0x20
  40abf0:	push   ecx
  40abf1:	outs   dx,DWORD PTR ds:[esi]
  40abf2:	add    ecx,DWORD PTR [ecx]
  40abf4:	arpl   WORD PTR [esi-0x19],ax
  40abf7:	js     0x40ac4c
  40abf9:	and    eax,0xc37e1cbc
  40abfe:	shl    BYTE PTR [ebp-0xe561954],cl
  40ac04:	out    dx,al
  40ac05:	mov    eax,ds:0x741d1662
  40ac0a:	dec    esp
  40ac0b:	adc    al,0x1d
  40ac0d:	xchg   esi,eax
  40ac0e:	add    eax,0x87912f3d
  40ac13:	cmp    DWORD PTR [esi-0x6a],esi
  40ac16:	in     eax,0x3c
  40ac18:	jmp    0x2862:0x7a1d6d45
  40ac1f:	add    edx,DWORD PTR [ecx-0x6f10c4f8]
  40ac25:	sub    dh,bl
  40ac27:	rcr    DWORD PTR [ebx-0x4352f37],cl
  40ac2d:	in     al,dx
  40ac2e:	out    0xa2,eax
  40ac30:	shr    dl,0xf3
  40ac33:	sbb    bl,BYTE PTR [ebp+0x4e]
  40ac36:	lds    ecx,FWORD PTR [edx-0x37]
  40ac39:	stos   BYTE PTR es:[edi],al
  40ac3a:	inc    ebx
  40ac3b:	je     0x40ac89
  40ac3d:	add    bl,bl
  40ac3f:	cdq    
  40ac40:	int    0x9f
  40ac42:	and    BYTE PTR [eax-0x26b4c37a],dh
  40ac48:	jmp    0x40abd3
  40ac4a:	mov    esi,0x93b47a26
  40ac4f:	adc    dl,bh
  40ac51:	pmulhw mm4,QWORD PTR [esi]
  40ac54:	adc    DWORD PTR [ecx+ebp*4-0x6e],ebp
  40ac58:	cmp    DWORD PTR [ecx],esp
  40ac5a:	xchg   edi,eax
  40ac5b:	cwde   
  40ac5c:	fimul  WORD PTR [ecx]
  40ac5e:	xor    al,0x56
  40ac60:	hlt    
  40ac61:	iret   
  40ac62:	cmp    al,0xd7
  40ac64:	or     BYTE PTR [esi],0x3f
  40ac67:	mov    dl,0x3a
  40ac69:	in     eax,0x65
  40ac6b:	sti    
  40ac6c:	repz and eax,DWORD PTR [esi+0x3d]
  40ac70:	mov    bh,dh
  40ac72:	out    0x39,al
  40ac74:	pusha  
  40ac75:	push   ebx
  40ac76:	xor    al,0xa
  40ac78:	nop
  40ac79:	daa    
  40ac7a:	stos   DWORD PTR es:[edi],eax
  40ac7b:	stc    
  40ac7c:	push   ebp
  40ac7d:	pop    edi
  40ac7e:	jl     0x40ac44
  40ac80:	cdq    
  40ac81:	gs adc eax,0xb708b90e
  40ac87:	out    dx,al
  40ac88:	push   esp
  40ac89:	in     eax,dx
  40ac8a:	mov    ebp,edx
  40ac8c:	mov    ah,0x62
  40ac8e:	xchg   ecx,eax
  40ac8f:	ret    0xbc02
  40ac92:	pop    edx
  40ac93:	and    al,0x81
  40ac95:	mov    dh,0x39
  40ac97:	and    eax,0x28f95649
  40ac9c:	repnz add eax,0x650cb13f
  40aca2:	xchg   esi,eax
  40aca3:	mov    al,ds:0xe24d519e
  40aca8:	push   ecx
  40aca9:	rdmsr  
  40acab:	sahf   
  40acac:	inc    esi
  40acad:	sub    dh,bh
  40acaf:	mov    dh,BYTE PTR [ecx+eax*1-0x5c50e319]
  40acb6:	cwde   
  40acb7:	arpl   si,bx
  40acb9:	pop    ebp
  40acba:	cmc    
  40acbb:	push   ss
  40acbc:	sbb    al,0x4f
  40acbe:	mov    ds,WORD PTR [edi-0x71d637d9]
  40acc4:	ficom  DWORD PTR [ebx]
  40acc6:	int3   
  40acc7:	adc    BYTE PTR [eax],ah
  40acc9:	jo     0x40acd6
  40accb:	div    DWORD PTR [edi+0x74]
  40acce:	sti    
  40accf:	shr    al,1
  40acd1:	int3   
  40acd2:	xor    dl,BYTE PTR gs:[eax]
  40acd5:	(bad)  
  40acd6:	mov    bl,0xbf
  40acd8:	out    0x67,al
  40acda:	or     DWORD PTR [ebp+0x18],edi
  40acdd:	mov    bh,0x47
  40acdf:	dec    edx
  40ace0:	sbb    ebx,DWORD PTR [esi+0x73e761e4]
  40ace6:	mov    al,0xbd
  40ace8:	cdq    
  40ace9:	pop    esi
  40acea:	test   BYTE PTR [ebx-0x87318d8],bl
  40acf0:	leave  
  40acf1:	mov    WORD PTR [ebx+0xc],fs
  40acf4:	sti    
  40acf5:	stos   DWORD PTR es:[edi],eax
  40acf6:	fidivr WORD PTR [ebp-0x4f6b52a0]
  40acfc:	sahf   
  40acfd:	outs   dx,BYTE PTR ds:[esi]
  40acfe:	mov    esi,0xe95d3899
  40ad03:	mov    dh,0x6f
  40ad05:	mov    eax,ds:0x52a87ddd
  40ad0a:	test   BYTE PTR [ebp+0x19],bh
  40ad0d:	adc    bh,0xd6
  40ad10:	xchg   ecx,eax
  40ad11:	std    
  40ad12:	sub    bl,BYTE PTR gs:[esi+0x50c16b3c]
  40ad19:	into   
  40ad1a:	push   edx
  40ad1b:	frstor [ebp-0x62c6fea8]
  40ad21:	add    esp,DWORD PTR [eax+edi*2-0x58]
  40ad25:	repz enter 0x28fd,0x91
  40ad2a:	mov    cl,0x3d
  40ad2c:	popf   
  40ad2d:	in     al,dx
  40ad2e:	sti    
  40ad2f:	dec    ecx
  40ad30:	shr    BYTE PTR [esi],1
  40ad32:	xchg   ebp,eax
  40ad33:	add    ecx,DWORD PTR [edi+eiz*8+0x6acc98e7]
  40ad3a:	ret    
  40ad3b:	ja     0x40adab
  40ad3d:	mov    BYTE PTR [ecx+esi*2+0x4e],bl
  40ad41:	fs sti 
  40ad43:	pop    esi
  40ad44:	cs push ebp
  40ad46:	inc    edx
  40ad47:	ins    DWORD PTR es:[edi],dx
  40ad48:	hlt    
  40ad49:	test   eax,0xe963bb8e
  40ad4e:	mov    bl,0xc0
  40ad50:	imul   esp,ebx,0xcee80b3f
  40ad56:	sub    BYTE PTR [ecx-0x5e4361f8],ah
  40ad5c:	repz fld DWORD PTR [ebx]
  40ad5f:	jg     0x40ad1e
  40ad61:	xchg   ebp,eax
  40ad62:	popa   
  40ad63:	pavgw  mm2,mm5
  40ad66:	call   0xd0923877
  40ad6b:	jns    0x40addb
  40ad6d:	dec    esi
  40ad6e:	push   ds
  40ad6f:	inc    esi
  40ad70:	lahf   
  40ad71:	hlt    
  40ad72:	add    eax,0x17a262f9
  40ad77:	xchg   esi,eax
  40ad78:	lods   eax,DWORD PTR ds:[esi]
  40ad79:	fdivr  DWORD PTR [bp+di]
  40ad7c:	cmp    BYTE PTR [edi],dh
  40ad7e:	xor    DWORD PTR [esi],ebp
  40ad80:	out    dx,eax
  40ad81:	(bad)  
  40ad82:	outs   dx,DWORD PTR ds:[esi]
  40ad83:	mov    dh,0xca
  40ad85:	lahf   
  40ad86:	cdq    
  40ad87:	imul   esi,DWORD PTR [edx],0x19
  40ad8a:	aam    0x88
  40ad8c:	rol    ch,cl
  40ad8e:	out    0x39,eax
  40ad90:	mov    bh,0xfd
  40ad92:	pop    ebp
  40ad93:	rcl    ebp,cl
  40ad95:	push   cs
  40ad96:	jae    0x40ade4
  40ad98:	jmp    0xac03:0xf0bc1092
  40ad9f:	jne    0x40ad4b
  40ada1:	jle    0x40adfb
  40ada3:	mov    ecx,0x9e882571
  40ada8:	jmp    0x40ad79
  40adaa:	mov    DWORD PTR [ebx-0x1921e74a],esp
  40adb0:	mov    WORD PTR [ebx+ecx*8],ds
  40adb3:	or     DWORD PTR [ecx-0x28678d1e],0xffffffb5
  40adba:	xchg   ecx,eax
  40adbb:	inc    eax
  40adbc:	dec    esp
  40adbd:	jbe    0x40ad8d
  40adbf:	dec    ecx
  40adc0:	(bad)  
  40adc2:	and    ah,BYTE PTR [eax-0x27]
  40adc5:	fwait
  40adc6:	xchg   ecx,eax
  40adc7:	popf   
  40adc8:	fdivp  st(6),st
  40adca:	mov    ebp,0x4ae9fa53
  40adcf:	mov    ds,WORD PTR [ebx-0x79]
  40add2:	add    BYTE PTR ds:0x873ad18,0x7f
  40add9:	icebp  
  40adda:	lock pop ebx
  40addc:	ds aad 0x94
  40addf:	jmp    0x40adc0
  40ade1:	stos   BYTE PTR es:[edi],al
  40ade2:	jns    0x40ada7
  40ade4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ade5:	shl    BYTE PTR [edi],cl
  40ade7:	inc    eax
  40ade8:	int3   
  40ade9:	imul   edx,ebx,0x4d9da6d5
  40adef:	addr16 rol eax,cl
  40adf2:	popa   
  40adf3:	cmp    DWORD PTR [ebx+0x2e6ab431],eax
  40adf9:	sbb    DWORD PTR [edi],ebp
  40adfb:	sbb    esp,ebx
  40adfd:	dec    ebx
  40adfe:	adc    eax,0xc85b4b0c
  40ae03:	or     BYTE PTR [esi],cl
  40ae05:	inc    ebx
  40ae06:	test   DWORD PTR [ebx],ebp
  40ae08:	dec    eax
  40ae09:	outs   dx,DWORD PTR ds:[esi]
  40ae0a:	pop    edx
  40ae0b:	mov    edx,0xbf0f3665
  40ae10:	inc    ebx
  40ae11:	adc    eax,0x2ea5c730
  40ae16:	test   eax,0x1ee8171f
  40ae1b:	mov    ebp,0x6ada22ab
  40ae20:	pop    esi
  40ae21:	push   ebx
  40ae22:	jl     0x40adc0
  40ae24:	mov    cl,cl
  40ae26:	sbb    esi,DWORD PTR [ebx+0x99d8cce]
  40ae2c:	mov    edx,edi
  40ae2e:	dec    edi
  40ae2f:	js     0x40adf7
  40ae31:	pop    ebx
  40ae32:	or     dl,BYTE PTR [eax]
  40ae34:	pop    edx
  40ae35:	cmp    bh,dl
  40ae37:	(bad)  
  40ae38:	aaa    
  40ae39:	pop    esi
  40ae3a:	adc    BYTE PTR [edi-0x7],ch
  40ae3d:	ins    DWORD PTR es:[edi],dx
  40ae3e:	(bad)  
  40ae3f:	bound  esp,QWORD PTR [eax]
  40ae41:	sbb    al,0x76
  40ae43:	pop    edx
  40ae44:	retf   0x2922
  40ae47:	pop    ebx
  40ae48:	dec    ebp
  40ae49:	rcr    BYTE PTR [edi-0x5111c388],0x3d
  40ae50:	adc    al,0xa6
  40ae52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae53:	xchg   ecx,eax
  40ae54:	or     al,0xb0
  40ae56:	mov    bl,0xc6
  40ae58:	cmp    bl,BYTE PTR [ebp+0x6a5d3e2a]
  40ae5e:	cmp    bl,dl
  40ae60:	cmp    eax,0xc65a983c
  40ae65:	mov    edx,cs
  40ae67:	jmp    0x7bc765e6
  40ae6c:	fsubr  st,st(1)
  40ae6e:	das    
  40ae6f:	mov    ds:0x2bb8820f,eax
  40ae74:	fmul   QWORD PTR [ecx+0x1a4d1900]
  40ae7a:	popa   
  40ae7b:	mov    bl,0x45
  40ae7d:	fild   DWORD PTR [ebp-0x6493af7a]
  40ae83:	cmp    DWORD PTR [ecx],esp
  40ae85:	mov    ds:0xcbb685b6,eax
  40ae8a:	les    ecx,FWORD PTR [edx+0x56842462]
  40ae90:	psubusb mm7,QWORD PTR [edx+0x71]
  40ae94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae95:	adc    eax,0x72669d5
  40ae9a:	push   ebx
  40ae9b:	aam    0xf2
  40ae9d:	adc    BYTE PTR [edi],0xc7
  40aea0:	cwde   
  40aea1:	rcl    BYTE PTR [edi],0x3c
  40aea4:	dec    esp
  40aea5:	pop    esp
  40aea6:	ret    
  40aea7:	mov    edx,0x2474fe86
  40aeac:	or     DWORD PTR [eax+0x12e130a],edx
  40aeb2:	jae    0x40af32
  40aeb4:	and    ebp,eax
  40aeb6:	or     ecx,DWORD PTR [ecx+eax*2-0xc968e56]
  40aebd:	push   edx
  40aebe:	fistp  DWORD PTR [edi+0x18]
  40aec1:	push   ds
  40aec2:	pop    edx
  40aec3:	and    al,0x34
  40aec5:	xchg   edx,eax
  40aec6:	fst    DWORD PTR [ebx-0x6]
  40aec9:	xchg   ebx,eax
  40aeca:	jo     0x40af2d
  40aecc:	outs   dx,DWORD PTR ds:[esi]
  40aecd:	fisub  WORD PTR [eax-0x3a]
  40aed0:	mov    ebx,0x274f3be5
  40aed5:	mov    ebx,0x37c50ad4
  40aeda:	js     0x40aebe
  40aedc:	xor    dl,bh
  40aede:	ret    0xf8f7
  40aee1:	cmp    DWORD PTR [edx+0x785bcfdc],ebx
  40aee7:	mov    esi,0xf17e93f2
  40aeec:	adc    BYTE PTR [ebx+edi*1],dh
  40aeef:	mov    ch,0xec
  40aef1:	lahf   
  40aef2:	gs push esp
  40aef4:	sbb    esp,ebx
  40aef6:	inc    edi
  40aef7:	xchg   esi,eax
  40aef8:	inc    esp
  40aef9:	out    dx,al
  40aefa:	scas   eax,DWORD PTR es:[edi]
  40aefb:	in     al,dx
  40aefc:	sub    edx,DWORD PTR [ebx+0x1d]
  40aeff:	pop    edx
  40af00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af01:	(bad)  
  40af02:	out    0x33,al
  40af04:	mov    esi,0xabf34742
  40af09:	or     al,BYTE PTR [ebx+0x21664762]
  40af0f:	out    0x26,al
  40af11:	sub    DWORD PTR ds:0xafef1ddc,edi
  40af17:	repz aam 0x8c
  40af1a:	dec    esp
  40af1b:	mov    ds:0x98d2dccc,eax
  40af20:	ds (bad) 
  40af23:	ins    BYTE PTR es:[edi],dx
  40af24:	scas   al,BYTE PTR es:[edi]
  40af25:	jg     0x40af11
  40af27:	sar    dl,0x4b
  40af2a:	ins    DWORD PTR es:[edi],dx
  40af2b:	jmp    0x8fed8db4
  40af30:	mov    bl,BYTE PTR [edx+esi*2]
  40af33:	mov    DWORD PTR ds:0xfd327b01,ebx
  40af39:	xchg   edx,eax
  40af3a:	hlt    
  40af3b:	dec    ebp
  40af3c:	inc    ebp
  40af3d:	push   ecx
  40af3e:	lds    eax,FWORD PTR [ebx+0x63256b01]
  40af44:	in     eax,0x52
  40af46:	js     0x40af75
  40af48:	and    eax,0x1bbfc2bc
  40af4d:	cld    
  40af4e:	cmc    
  40af4f:	into   
  40af50:	cmp    ecx,DWORD PTR [ebx+0x0]
  40af53:	or     ecx,DWORD PTR [ebp+0x14]
  40af56:	xor    DWORD PTR [edi+ecx*8-0x60ee0636],0xa
  40af5e:	arpl   WORD PTR [esi+edi*4+0x462f822a],di
  40af65:	and    DWORD PTR [eax+edx*1-0x4],edi
  40af69:	or     edi,DWORD PTR [esi+0x3c]
  40af6c:	imul   esi,esp,0x16
  40af6f:	xchg   edi,eax
  40af70:	bound  esi,QWORD PTR [ecx+0x29]
  40af73:	push   ebx
  40af74:	jnp    0x40af68
  40af76:	xchg   ecx,eax
  40af77:	jmp    0xaea195d1
  40af7c:	fldcw  WORD PTR [edx+ecx*2]
  40af7f:	add    dl,BYTE PTR [edi]
  40af81:	stos   BYTE PTR es:[edi],al
  40af82:	xchg   esp,eax
  40af83:	fcom   QWORD PTR gs:0x2ee74edf
  40af8a:	jo     0x40af17
  40af8c:	sahf   
  40af8d:	(bad)  
  40af8e:	sbb    ch,cl
  40af90:	xor    ecx,DWORD PTR [eax+0x3f]
  40af93:	div    bl
  40af95:	cdq    
  40af96:	adc    al,BYTE PTR [ebp-0x75d2f134]
  40af9c:	xchg   esi,eax
  40af9d:	and    al,BYTE PTR [ecx+0x274073b]
  40afa3:	mov    ebx,0xd46d848b
  40afa8:	xor    al,0x40
  40afaa:	aam    0x95
  40afac:	mov    cs,ecx
  40afae:	or     BYTE PTR [esi+0x3eefb885],0x34
  40afb5:	mov    ah,0xab
  40afb7:	sub    dl,BYTE PTR [edx-0x1fe8f39e]
  40afbd:	inc    ebp
  40afbe:	mov    esp,0xecd4bbff
  40afc3:	retf   
  40afc4:	cmp    DWORD PTR [edi+0x664e09e9],edx
  40afca:	loope  0x40af5f
  40afcc:	add    al,0x84
  40afce:	inc    ecx
  40afcf:	adc    esp,DWORD PTR [edi-0x3e791047]
  40afd5:	cmp    eax,0xebbfe6c8
  40afda:	call   0xd2b6fd43
  40afdf:	je     0x40b01f
  40afe1:	inc    edi
  40afe2:	cmc    
  40afe3:	aad    0xea
  40afe5:	sub    ch,BYTE PTR [edi]
  40afe7:	shl    DWORD PTR [esi],cl
  40afe9:	inc    ebx
  40afea:	mov    ebx,0x2c3fcb65
  40afef:	xchg   ebx,eax
  40aff0:	or     DWORD PTR [ebx],ebx
  40aff2:	sub    al,0x91
  40aff4:	loope  0x40b032
  40aff6:	push   esi
  40aff7:	push   edx
  40aff8:	push   edx
  40aff9:	test   al,0x14
  40affb:	and    DWORD PTR [edi+0x52],ecx
  40affe:	jnp    0x40afd9
  40b000:	push   ds
  40b001:	cmp    al,0xdb
  40b003:	mov    esp,0x2b8fb9e7
  40b008:	add    eax,0x90d48962
  40b00d:	xlat   BYTE PTR ds:[ebx]
  40b00e:	out    dx,al
  40b00f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b010:	sbb    ebp,edi
  40b012:	cmp    bl,bl
  40b014:	sub    edi,DWORD PTR [ebp+ebx*2+0x6d]
  40b018:	pop    eax
  40b019:	fstp   DWORD PTR [ebp+0x3679ec35]
  40b01f:	jnp    0x40b00d
  40b021:	push   ecx
  40b022:	lock jne 0x40afea
  40b025:	enter  0x676,0xf8
  40b029:	loopne 0x40afda
  40b02b:	or     eax,0xcaab03d6
  40b030:	leave  
  40b031:	cmc    
  40b032:	in     eax,dx
  40b033:	push   edi
  40b034:	in     al,0x9b
  40b036:	xchg   ecx,eax
  40b037:	cmp    al,0xa2
  40b039:	ins    DWORD PTR es:[edi],dx
  40b03a:	mov    eax,0xe765e09f
  40b03f:	stos   DWORD PTR es:[edi],eax
  40b040:	ja     0x40afcd
  40b042:	cwde   
  40b043:	jnp    0x40afef
  40b045:	mov    WORD PTR [esi+0x6f],ds
  40b048:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b049:	push   ebp
  40b04a:	sar    eax,1
  40b04c:	jbe    0x40b0c9
  40b04e:	pushf  
  40b04f:	repnz mov edx,0x232a16d3
  40b056:	pop    ds
  40b057:	jae    0x40afed
  40b059:	push   ebx
  40b05a:	mov    eax,0xacc2d935
  40b05f:	retf   0x3e02
  40b062:	add    bh,cl
  40b064:	dec    ebp
  40b065:	push   ebx
  40b066:	dec    ebx
  40b067:	addr16 dec esp
  40b069:	cli    
  40b06a:	adc    ebp,DWORD PTR [esi-0x6c]
  40b06d:	jnp    0x40b09f
  40b06f:	xor    DWORD PTR [ebp-0x67889f0],eax
  40b075:	(bad)  
  40b076:	mov    ebx,0x73f9e0ed
  40b07b:	jmp    0x40b0c2
  40b07d:	lds    ebp,FWORD PTR [edx+0x4a]
  40b080:	stc    
  40b081:	xor    al,0xa4
  40b083:	arpl   WORD PTR [ebx-0x69],cx
  40b086:	retf   0xe42
  40b089:	mov    ebx,0x485f05cb
  40b08e:	pop    es
  40b08f:	inc    esi
  40b090:	push   ebp
  40b091:	(bad)  [ecx-0x7ab9ca71]
  40b097:	jmp    0x39f58f17
  40b09c:	popw   ss
  40b09e:	and    eax,0xe9dcf43a
  40b0a3:	inc    ebp
  40b0a4:	mov    al,ds:0x3f680ef8
  40b0a9:	sbb    al,BYTE PTR [esi]
  40b0ab:	xor    DWORD PTR [ebx],0xf2b0bc23
  40b0b1:	sbb    eax,0xbae04c7b
  40b0b6:	mov    ah,dl
  40b0b8:	in     eax,0xd7
  40b0ba:	lods   al,BYTE PTR ds:[esi]
  40b0bb:	mov    edi,0x81fd7014
  40b0c0:	pop    ss
  40b0c1:	xchg   edi,eax
  40b0c2:	xchg   DWORD PTR [ecx+0x30259dcf],ebx
  40b0c8:	push   es
  40b0c9:	cmp    DWORD PTR [eax+0x20],edx
  40b0cc:	mov    dh,bh
  40b0ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0cf:	and    DWORD PTR [ebx+ecx*2],ebp
  40b0d2:	xlat   BYTE PTR ds:[ebx]
  40b0d3:	add    al,0xba
  40b0d5:	jp     0x40b0b4
  40b0d7:	sbb    DWORD PTR [esi+0x1d1ee2ec],esp
  40b0dd:	mov    esp,0x2d6f9663
  40b0e2:	mov    dh,0x0
  40b0e4:	mov    ah,0x30
  40b0e7:	xchg   ebp,eax
  40b0e8:	sub    al,0xe8
  40b0ea:	outs   dx,BYTE PTR ds:[esi]
  40b0eb:	push   ds
  40b0ec:	mov    ecx,0x9c8d06bc
  40b0f1:	mov    ds:0xb45c207d,eax
  40b0f6:	shr    bl,cl
  40b0f8:	mov    BYTE PTR [edi+0x6d],bh
  40b0fb:	popf   
  40b0fc:	xchg   edx,eax
  40b0fd:	mov    bh,0xaa
  40b0ff:	pushf  
  40b100:	jle    0x40b173
  40b102:	jg     0x40b0c9
  40b104:	pop    eax
  40b105:	cmp    al,al
  40b107:	and    ebp,DWORD PTR [edx]
  40b109:	mov    WORD PTR [ebx-0x5aef7efe],ss
  40b10f:	(bad)  
  40b110:	into   
  40b111:	outs   dx,DWORD PTR ds:[esi]
  40b112:	fimul  DWORD PTR [edi+0x30]
  40b115:	mov    ds:0xae5d531a,eax
  40b11a:	xchg   ebx,eax
  40b11b:	(bad)  
  40b11c:	cmp    edx,ebx
  40b11e:	ret    
  40b11f:	popa   
  40b120:	into   
  40b121:	ret    
  40b122:	lods   al,BYTE PTR ds:[esi]
  40b123:	shr    DWORD PTR ds:0xe26e2792,1
  40b129:	mov    esi,DWORD PTR [eax-0xf1c5acd]
  40b12f:	push   0xd
  40b131:	sub    al,0xe
  40b133:	jbe    0x40b0b6
  40b135:	dec    ebx
  40b136:	(bad)  
  40b137:	das    
  40b138:	retf   
  40b139:	or     esi,DWORD PTR [esi]
  40b13b:	fistp  DWORD PTR [ebp-0x4c18805b]
  40b141:	jmp    FWORD PTR [ebp+0x6a]
  40b144:	xor    esi,0xaea0c56c
  40b14a:	data16 jp 0x40b175
  40b14d:	mov    ebx,0x148d6a88
  40b152:	push   es
  40b153:	mov    ebp,ss
  40b155:	addr16 int3 
  40b157:	xor    ebx,ecx
  40b159:	fdiv   st(2),st
  40b15b:	push   edi
  40b15c:	sub    DWORD PTR [edi],0x1f
  40b15f:	test   DWORD PTR [ebx-0x4f],ecx
  40b162:	fcomi  st,st(4)
  40b164:	cmc    
  40b165:	in     al,dx
  40b166:	sub    BYTE PTR [eax*1-0x1de81a0d],0x77
  40b16e:	loop   0x40b168
  40b170:	add    DWORD PTR [esi+0x188aa6c6],ecx
  40b176:	sbb    ebp,DWORD PTR [esi-0x3c269ab0]
  40b17c:	push   cs
  40b17d:	mov    DWORD PTR [ecx+0x20ff2530],ecx
  40b183:	xchg   esp,esi
  40b185:	sub    cl,BYTE PTR [ebx-0xdf829e6]
  40b18b:	xchg   esi,eax
  40b18c:	out    0xe3,eax
  40b18e:	add    al,0xe1
  40b190:	repnz in al,dx
  40b192:	es stc 
  40b194:	mov    edx,0xfe4c35a0
  40b199:	jg     0x40b1f9
  40b19b:	or     esi,ebp
  40b19d:	lds    esi,FWORD PTR [eax+esi*1]
  40b1a0:	or     eax,0xabce7dcf
  40b1a5:	out    dx,al
  40b1a6:	lods   al,BYTE PTR ds:[esi]
  40b1a7:	xor    eax,0x1ed8062e
  40b1ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1ad:	inc    ebp
  40b1ae:	cs inc eax
  40b1b0:	adc    al,0xa0
  40b1b2:	jg     0x40b204
  40b1b4:	adc    DWORD PTR [edi-0x1d4fb27b],edi
  40b1ba:	jnp    0x40b1f7
  40b1bc:	es dec eax
  40b1be:	inc    ecx
  40b1bf:	push   ebp
  40b1c0:	test   al,0xc6
  40b1c2:	adc    ebp,DWORD PTR [edi]
  40b1c4:	leave  
  40b1c5:	add    al,cl
  40b1c7:	sub    bl,dl
  40b1c9:	mov    ds:0xf988f7bf,eax
  40b1ce:	jmp    FWORD PTR [ebp+0x3b355006]
  40b1d4:	mov    eax,ds:0xe62f4443
  40b1d9:	lds    esp,FWORD PTR [edi-0x43591865]
  40b1df:	xadd   BYTE PTR [ebp-0x40],cl
  40b1e3:	pop    ebp
  40b1e4:	and    DWORD PTR [edx],edi
  40b1e6:	mov    dl,BYTE PTR [ebx-0x761bea29]
  40b1ec:	dec    ebx
  40b1ed:	loop   0x40b1cb
  40b1ef:	mov    al,ds:0xfdf22e15
  40b1f4:	les    eax,FWORD PTR [edi-0x7ac47cbb]
  40b1fa:	iret   
  40b1fb:	push   edx
  40b1fc:	mov    DWORD PTR [edx],esp
  40b1fe:	mov    esi,0xa4ab4bfa
  40b203:	mov    ds:0xed8a212a,al
  40b208:	ja     0x40b1ee
  40b20a:	daa    
  40b20b:	dec    ebp
  40b20c:	cmc    
  40b20d:	jge    0x40b284
  40b20f:	push   edi
  40b210:	mov    eax,0x373c1cd
  40b215:	sbb    cl,bh
  40b217:	test   eax,0x6a72498f
  40b21c:	mov    dl,0x61
  40b21e:	or     dh,BYTE PTR [ecx]
  40b220:	sbb    DWORD PTR [esi-0xb854263],0x49
  40b227:	das    
  40b228:	add    DWORD PTR [esi-0x3243d076],esi
  40b22e:	cmp    eax,0xe861913c
  40b233:	xchg   ecx,eax
  40b234:	push   ecx
  40b235:	dec    esi
  40b236:	iret   
  40b237:	(bad)  
  40b238:	mov    dh,0xd1
  40b23a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b23b:	and    eax,0x4072bb5e
  40b240:	dec    esi
  40b241:	mov    ah,0xa9
  40b243:	test   DWORD PTR [edx+0x5ea8cb19],0x64649d10
  40b24d:	xchg   edx,eax
  40b24e:	inc    ebp
  40b24f:	std    
  40b250:	or     esi,ebx
  40b252:	sbb    dh,ch
  40b254:	test   dl,al
  40b256:	imul   ecx,DWORD PTR [eax-0x2f885577],0xffffffad
  40b25d:	inc    edx
  40b25e:	daa    
  40b25f:	adc    esp,DWORD PTR [esi+0x6e4ad1bd]
  40b265:	pop    edx
  40b266:	outs   dx,DWORD PTR ds:[esi]
  40b267:	outs   dx,BYTE PTR ds:[esi]
  40b268:	in     al,dx
  40b269:	cmc    
  40b26a:	push   edi
  40b26b:	jne    0x40b2b2
  40b26d:	sub    dh,BYTE PTR [edi+0x3b7b785f]
  40b273:	xor    dl,cl
  40b275:	xor    dh,BYTE PTR [edx+ecx*2]
  40b278:	push   edx
  40b279:	cmp    DWORD PTR [esi],ebp
  40b27b:	mov    dl,0xb3
  40b27d:	mov    edx,0x59e8bc0
  40b282:	mov    ebp,0xd5da1a62
  40b287:	mov    ds:0xdcb03ea8,eax
  40b28c:	xor    al,0x91
  40b28e:	ds push eax
  40b290:	stc    
  40b291:	push   ebp
  40b292:	cmp    bl,BYTE PTR [eax-0x69]
  40b295:	std    
  40b296:	sbb    BYTE PTR [ebp+0x68],dl
  40b299:	ins    DWORD PTR es:[edi],dx
  40b29a:	shl    BYTE PTR [edi-0xf],1
  40b29d:	mov    eax,ds:0x90e16d90
  40b2a2:	aas    
  40b2a3:	jp     0x40b296
  40b2a5:	and    eax,0xbccd6fca
  40b2aa:	int    0xce
  40b2ac:	mov    bl,0x4a
  40b2ae:	lods   eax,DWORD PTR ds:[esi]
  40b2af:	mov    esp,0x3aec438c
  40b2b4:	push   esp
  40b2b5:	add    eax,0x2133e1af
  40b2ba:	pop    esp
  40b2bb:	inc    esi
  40b2bc:	fmulp  st(1),st
  40b2be:	cvtps2pi mm3,xmm1
  40b2c1:	sar    DWORD PTR [edi-0x3],0xfc
  40b2c5:	mov    ch,0x3a
  40b2c7:	push   es
  40b2c8:	ins    DWORD PTR es:[edi],dx
  40b2c9:	clc    
  40b2ca:	push   ds
  40b2cb:	outs   dx,DWORD PTR ds:[esi]
  40b2cc:	je     0x40b2b8
  40b2ce:	leave  
  40b2cf:	mov    ah,BYTE PTR [edi+0x2971c429]
  40b2d5:	jnp    0x40b307
  40b2d7:	test   BYTE PTR [ebp+0x5],bh
  40b2da:	xor    DWORD PTR [edx+edx*2-0x62dba4a1],esp
  40b2e1:	or     al,0x9f
  40b2e3:	cmp    DWORD PTR [ebx-0x2c5c239c],edi
  40b2e9:	call   0xf98a:0xe8531cbe
  40b2f0:	pop    edx
  40b2f1:	mov    BYTE PTR [edx],dl
  40b2f3:	push   ebp
  40b2f4:	pop    ecx
  40b2f5:	imul   esi,DWORD PTR [ebp+0x7dad1f38],0x6e
  40b2fc:	mov    ch,0x93
  40b2fe:	hlt    
  40b2ff:	(bad)  
  40b300:	jb     0x40b2f8
  40b302:	xchg   ebx,eax
  40b303:	aam    0x19
  40b305:	pushf  
  40b306:	and    eax,0xa385b579
  40b30b:	(bad)  
  40b30c:	mov    ebx,0x206f931c
  40b311:	rcr    BYTE PTR [esi-0x24],0xe1
  40b315:	or     dh,dh
  40b317:	or     DWORD PTR [ebp+edi*1-0x1f],eax
  40b31b:	iret   
  40b31c:	popf   
  40b31d:	push   ss
  40b31e:	add    cl,BYTE PTR [edx-0x32]
  40b321:	call   0xdb17:0xcbc07a9e
  40b328:	ja     0x40b325
  40b32a:	out    0x93,al
  40b32c:	test   al,0x6c
  40b32e:	xlat   BYTE PTR ds:[ebx]
  40b32f:	mov    ebx,0x6399ab21
  40b334:	xchg   esp,eax
  40b335:	mov    BYTE PTR [edx+ecx*2-0x7e],dh
  40b339:	cwde   
  40b33a:	scas   eax,DWORD PTR es:[edi]
  40b33b:	dec    esp
  40b33c:	jl     0x40b37e
  40b33e:	sbb    BYTE PTR [eax+0x7f],dh
  40b341:	jmp    0x40b381
  40b343:	sub    BYTE PTR [ebx],al
  40b345:	ins    BYTE PTR es:[edi],dx
  40b346:	enter  0x4556,0x6d
  40b34a:	pop    ebx
  40b34b:	cmp    BYTE PTR [edx+0x799ef074],cl
  40b351:	mov    esp,0x8f222995
  40b356:	lock aam 0x48
  40b359:	jb     0x40b335
  40b35b:	ror    DWORD PTR [edi-0x35],0x8f
  40b35f:	ja     0x40b338
  40b361:	dec    eax
  40b362:	bound  edi,QWORD PTR [ecx+ecx*8+0x75af391f]
  40b369:	(bad)  [ebp+0xe]
  40b36c:	call   0x661c273a
  40b371:	leave  
  40b372:	xlat   BYTE PTR ds:[ebx]
  40b373:	imul   edx
  40b375:	test   al,0x1b
  40b377:	pop    esi
  40b378:	enter  0xcb7c,0x48
  40b37c:	fs (bad) 
  40b37e:	mov    ss,edx
  40b380:	mov    cl,al
  40b382:	push   ebx
  40b383:	or     ecx,eax
  40b385:	mov    ds:0xc08decd6,eax
  40b38a:	or     DWORD PTR [ecx+0x300ed3c],ebp
  40b390:	mov    dh,0x3
  40b392:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b393:	jbe    0x40b387
  40b395:	jmp    0x40b35d
  40b397:	lahf   
  40b398:	ss sahf 
  40b39a:	mov    edx,0xb0a574e3
  40b39f:	fprem  
  40b3a1:	push   esi
  40b3a2:	out    0x7a,eax
  40b3a4:	test   al,0xfc
  40b3a6:	jo     0x40b418
  40b3a8:	dec    ax
  40b3aa:	test   DWORD PTR [ebp+edx*8-0x790fba8c],esi
  40b3b1:	imul   esi,DWORD PTR [ebp+0x351be866],0xfffffff4
  40b3b8:	inc    ebx
  40b3b9:	xor    ebp,DWORD PTR [esi+0x7c63d256]
  40b3bf:	out    0xd0,eax
  40b3c1:	repnz hlt 
  40b3c3:	mov    BYTE PTR [edx],0xb7
  40b3c6:	mov    al,fs:0x12067a7f
  40b3cc:	mov    bl,0x21
  40b3ce:	nop
  40b3cf:	in     al,0x3a
  40b3d1:	cs mov ah,0x45
  40b3d4:	xor    DWORD PTR [esp+ebp*2+0x33],ebx
  40b3d8:	xchg   esp,eax
  40b3d9:	push   edi
  40b3da:	in     eax,dx
  40b3db:	lods   al,BYTE PTR ds:[esi]
  40b3dc:	mov    ecx,DWORD PTR [ecx]
  40b3de:	shl    BYTE PTR [edx+0x29],0xa0
  40b3e2:	loop   0x40b39b
  40b3e4:	push   ebx
  40b3e5:	(bad)  
  40b3e6:	adc    eax,0x9b592f2c
  40b3eb:	dec    esi
  40b3ec:	mov    cl,dl
  40b3ee:	push   esp
  40b3ef:	jg     0x40b3a4
  40b3f1:	cwde   
  40b3f2:	sub    dl,dl
  40b3f4:	jmp    FWORD PTR [ecx+0x6c]
  40b3f7:	or     BYTE PTR [ebx],0x6d
  40b3fa:	arpl   WORD PTR [ecx],bp
  40b3fc:	and    bl,BYTE PTR [ecx]
  40b3fe:	adc    BYTE PTR [esp+edx*4+0x2c22bb74],dh
  40b405:	sbb    edi,edi
  40b407:	add    ebx,DWORD PTR [ebx+0x627b087c]
  40b40d:	jno    0x40b3c5
  40b40f:	cmp    al,0x3b
  40b411:	dec    esi
  40b412:	ffree  st(6)
  40b414:	daa    
  40b415:	xchg   ebp,eax
  40b416:	std    
  40b417:	jl     0x40b434
  40b419:	xor    DWORD PTR [esi+0x39],eax
  40b41c:	sti    
  40b41d:	jns    0x40b3e2
  40b41f:	in     al,0x75
  40b421:	gs in  eax,dx
  40b423:	ja     0x40b46b
  40b425:	cs test eax,0x4c32ed24
  40b42b:	push   ecx
  40b42c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b42d:	pop    es
  40b42e:	sbb    al,0x1a
  40b430:	mov    dl,0x22
  40b432:	xchg   ecx,eax
  40b433:	adc    ch,bh
  40b435:	(bad)  
  40b436:	cmp    DWORD PTR [edx],ebp
  40b438:	mov    fs,WORD PTR [ecx+0x600c0969]
  40b43e:	push   cs
  40b43f:	mov    bh,0x61
  40b441:	mov    dl,0xee
  40b443:	adc    BYTE PTR [ecx-0x7d],dl
  40b446:	xor    eax,0x91e14d67
  40b44b:	cmp    al,0x4f
  40b44d:	not    BYTE PTR [ecx+ecx*4+0x4b]
  40b451:	aaa    
  40b452:	mov    eax,0xb4ffb080
  40b457:	mov    ebx,0x32351293
  40b45c:	out    0xa,eax
  40b45e:	cmp    BYTE PTR [ebx+0x36ca69ee],ah
  40b464:	mov    edx,DWORD PTR [esi+eax*2]
  40b467:	jle    0x40b4ad
  40b469:	inc    edx
  40b46a:	dec    esp
  40b46b:	jnp    0x40b429
  40b46d:	popf   
  40b46e:	push   es
  40b46f:	sbb    BYTE PTR [ebp+0x37],dl
  40b472:	cmp    eax,0x847fb28
  40b477:	sbb    DWORD PTR [edi+edi*1+0x5b],ebp
  40b47b:	adc    cl,BYTE PTR [edx+eax*1-0x5]
  40b47f:	xor    BYTE PTR [eax+0x6a],bh
  40b482:	retf   0x6d
  40b485:	ins    BYTE PTR es:[edi],dx
  40b486:	sub    BYTE PTR [esi+0x327a27a6],bh
  40b48c:	mov    ds:0x84273a92,al
  40b491:	sub    DWORD PTR [ecx-0x3a1ebf44],edi
  40b497:	fs ret 0x9da4
  40b49b:	xor    edi,0x82f2b10b
  40b4a1:	mov    esi,0xea3dda41
  40b4a6:	push   0x99eda971
  40b4ab:	mov    WORD PTR [esi],fs
  40b4ad:	rcl    BYTE PTR [ebp+0x75],cl
  40b4b0:	or     eax,0x53d6f495
  40b4b5:	in     eax,0x4b
  40b4b7:	das    
  40b4b8:	mov    esi,0xd1853426
  40b4bd:	cmp    bl,BYTE PTR [edi+0x71]
  40b4c0:	pushf  
  40b4c1:	sub    edx,eax
  40b4c3:	dec    esp
  40b4c4:	add    dh,bh
  40b4c6:	jp     0x40b4c3
  40b4c8:	pop    ebp
  40b4c9:	mul    DWORD PTR [edi]
  40b4cb:	pop    ss
  40b4cc:	mov    ds,WORD PTR [edi+0x2bd8a8b8]
  40b4d2:	cmp    al,0xb4
  40b4d4:	aaa    
  40b4d5:	mov    ebx,0xb86e0b42
  40b4da:	jecxz  0x40b492
  40b4dc:	imul   ecx,edx,0x5aac4078
  40b4e2:	or     DWORD PTR [eax],ecx
  40b4e4:	xlat   BYTE PTR es:[ebx]
  40b4e6:	adc    BYTE PTR [edx+0x50],bh
  40b4e9:	cld    
  40b4ea:	es scas eax,DWORD PTR es:[edi]
  40b4ec:	loope  0x40b518
  40b4ee:	jle    0x40b500
  40b4f0:	hlt    
  40b4f1:	dec    edi
  40b4f2:	loopne 0x40b546
  40b4f4:	shl    BYTE PTR ds:[eax],0x43
  40b4f8:	lahf   
  40b4f9:	cmc    
  40b4fa:	test   DWORD PTR [esi+0x9],ecx
  40b4fd:	sbb    al,0x45
  40b4ff:	adc    al,0x32
  40b501:	out    0x54,eax
  40b503:	mov    ecx,0x44985eef
  40b508:	into   
  40b509:	mov    ebp,0x87144167
  40b50e:	xor    DWORD PTR [ebp-0x35],ebx
  40b511:	sub    al,0xd
  40b513:	lock mov ah,0xc9
  40b516:	les    esi,FWORD PTR [esi]
  40b518:	into   
  40b519:	xchg   ah,ah
  40b51b:	mov    ch,0xcf
  40b51d:	mov    ah,BYTE PTR [edx]
  40b51f:	adc    BYTE PTR [ebx+0x63],ah
  40b522:	leave  
  40b523:	push   0x37
  40b525:	lds    esp,FWORD PTR [esi-0x30102a60]
  40b52b:	push   0xbbce6f22
  40b530:	ins    BYTE PTR es:[edi],dx
  40b531:	iret   
  40b532:	out    dx,eax
  40b533:	cli    
  40b534:	cmp    al,0x93
  40b536:	xor    dh,BYTE PTR [eax]
  40b538:	push   ds
  40b539:	int3   
  40b53a:	sbb    edx,esi
  40b53c:	div    eax
  40b53e:	sub    DWORD PTR [esi+0xb1b1b7e],eax
  40b544:	cmp    eax,0x60496bc7
  40b549:	pop    eax
  40b54a:	pusha  
  40b54b:	jnp    0x40b535
  40b54d:	addr16 pop es
  40b54f:	sub    al,0xe8
  40b551:	enter  0xfc52,0x43
  40b555:	inc    esp
  40b556:	sbb    al,0x70
  40b558:	xchg   DWORD PTR [ebx-0x77],eax
  40b55b:	int    0x50
  40b55d:	popa   
  40b55e:	fs push ss
  40b560:	and    al,0x25
  40b562:	popa   
  40b563:	push   ebx
  40b564:	int    0xb9
  40b566:	dec    BYTE PTR [ebp-0x502a98dc]
  40b56c:	and    BYTE PTR [esi],ah
  40b56e:	imul   edx,DWORD PTR [edx+ebp*1+0x716d97f3],0x61
  40b576:	push   0x32532765
  40b57b:	mov    BYTE PTR [edi-0x27518b3c],0x7e
  40b582:	dec    edi
  40b583:	and    edi,ebp
  40b585:	cmp    edi,DWORD PTR [eax+esi*8+0x44]
  40b589:	fisttp WORD PTR [ebx-0xe]
  40b58c:	inc    ebp
  40b58d:	add    ecx,ebx
  40b58f:	ret    
  40b590:	mov    ds:0x2ae73ccc,al
  40b595:	mov    ah,0xe1
  40b597:	das    
  40b598:	in     al,0x95
  40b59a:	xor    al,0x5
  40b59c:	ins    DWORD PTR es:[edi],dx
  40b59d:	inc    ecx
  40b59e:	and    ebp,ebx
  40b5a0:	push   eax
  40b5a1:	mov    bh,BYTE PTR [ecx+ecx*2+0x4c]
  40b5a5:	lea    edi,[ebp+eiz*2-0x28]
  40b5a9:	in     al,0x81
  40b5ab:	cmovs  eax,edx
  40b5ae:	fnstsw WORD PTR [ebx+0x40]
  40b5b1:	push   ss
  40b5b2:	mov    al,0x32
  40b5b4:	dec    ebp
  40b5b5:	jne    0x40b627
  40b5b7:	cmp    DWORD PTR [ecx+0x20],ebx
  40b5ba:	dec    edx
  40b5bb:	loop   0x40b592
  40b5bd:	(bad)  
  40b5be:	or     ebx,DWORD PTR [ebp+0x21]
  40b5c1:	inc    ecx
  40b5c2:	mov    ah,0x89
  40b5c4:	not    dh
  40b5c6:	cld    
  40b5c7:	jecxz  0x40b62f
  40b5c9:	loope  0x40b622
  40b5cb:	lods   eax,DWORD PTR ds:[esi]
  40b5cc:	jne    0x40b646
  40b5ce:	inc    esi
  40b5cf:	loope  0x40b5b2
  40b5d1:	data16 or bl,BYTE PTR [edx-0x39e60cf8]
  40b5d8:	cwde   
  40b5d9:	mov    al,0xa4
  40b5db:	sbb    al,dh
  40b5dd:	js     0x40b61f
  40b5df:	sbb    DWORD PTR [ebp-0x3a],ebx
  40b5e2:	(bad)  
  40b5e3:	retf   
  40b5e4:	imul   esp,ebx,0xffffffbb
  40b5e7:	cwde   
  40b5e8:	pop    ds
  40b5e9:	shl    cl,0xad
  40b5ec:	or     BYTE PTR [esi+0x6d7136ef],bh
  40b5f2:	cwde   
  40b5f3:	jo     0x40b650
  40b5f5:	mov    dl,0xb5
  40b5f7:	jp     0x40b64e
  40b5f9:	outs   dx,DWORD PTR ds:[esi]
  40b5fa:	sub    bl,BYTE PTR [edx]
  40b5fc:	push   gs
  40b5fe:	adc    eax,DWORD PTR [ebp+ebp*4+0x1697374e]
  40b605:	jge    0x40b674
  40b607:	mov    ah,0x61
  40b609:	sub    al,0xd6
  40b60b:	dec    ebx
  40b60c:	leave  
  40b60d:	xor    eax,0xe2cc75
  40b612:	and    edx,DWORD PTR [esi]
  40b614:	or     BYTE PTR [edi],dl
  40b616:	pusha  
  40b617:	fimul  WORD PTR [ebp+eiz*8-0x6fa9b3ad]
  40b61e:	xchg   ah,dh
  40b620:	es dec ecx
  40b622:	nop
  40b623:	pop    ebp
  40b624:	out    dx,al
  40b625:	push   ds
  40b626:	(bad)
  40b629:	nop
  40b62a:	(bad)  
  40b62c:	adc    eax,0x720c08d4
  40b631:	shl    BYTE PTR [ebp-0x3c7606f8],0xf0
  40b638:	xchg   edi,eax
  40b639:	xchg   ebx,eax
  40b63a:	lahf   
  40b63b:	mov    ah,0x5d
  40b63d:	in     al,0x1e
  40b63f:	pop    es
  40b640:	inc    edi
  40b641:	fidiv  DWORD PTR [eax-0x74]
  40b644:	sbb    bh,dh
  40b646:	sub    eax,0xf512d223
  40b64b:	fimul  DWORD PTR [ecx]
  40b64d:	aad    0x6d
  40b64f:	outs   dx,DWORD PTR ds:[esi]
  40b650:	pop    ds
  40b651:	jns    0x40b66c
  40b653:	add    BYTE PTR [ecx+0xc18c68f],dl
  40b659:	inc    edx
  40b65a:	push   ebp
  40b65b:	sub    BYTE PTR [eax],bh
  40b65d:	out    0xc6,eax
  40b65f:	sub    eax,0xac63a17b
  40b664:	(bad)  
  40b665:	adc    dl,bh
  40b667:	out    dx,al
  40b668:	out    dx,al
  40b669:	add    DWORD PTR [esi+0x3c],esp
  40b66c:	mov    ch,BYTE PTR [ebp-0x6292c1ee]
  40b672:	test   eax,0x30d17c06
  40b677:	mov    edi,0xb3e939f1
  40b67c:	cmp    al,0x33
  40b67e:	mov    cl,0xe9
  40b680:	fisubr DWORD PTR [edx]
  40b682:	adc    DWORD PTR ds:0x30d67b3e,esi
  40b688:	xchg   ebp,eax
  40b689:	aas    
  40b68a:	clc    
  40b68b:	sar    BYTE PTR [ebx-0x20],cl
  40b68e:	cmp    ch,BYTE PTR [edx-0x419f126b]
  40b694:	gs pop edi
  40b696:	sub    dl,BYTE PTR [ecx-0x705c1b25]
  40b69c:	mov    BYTE PTR [eax+0x7a],0x71
  40b6a0:	lods   al,BYTE PTR ds:[esi]
  40b6a1:	mov    ds:0x945d2d1c,al
  40b6a6:	fldcw  WORD PTR [eax-0x6192137c]
  40b6ac:	inc    ebx
  40b6ad:	imul   ebx,ecx,0x1b6d7049
  40b6b3:	imul   ebp,eax,0x25
  40b6b6:	in     eax,0x4a
  40b6b8:	call   0x9bc623d8
  40b6bd:	mov    esi,0xa128ed90
  40b6c2:	lahf   
  40b6c3:	cmc    
  40b6c4:	mov    esi,0xf8710fda
  40b6c9:	ins    DWORD PTR es:[edi],dx
  40b6ca:	push   esp
  40b6cb:	xor    bh,bl
  40b6cd:	(bad)  
  40b6ce:	and    ah,BYTE PTR [eax+0x5246558f]
  40b6d4:	lock xor esp,DWORD PTR [eax-0x361583de]
  40b6db:	sar    BYTE PTR [esi-0x80],cl
  40b6de:	out    0x54,eax
  40b6e0:	xor    edx,DWORD PTR [ebp+0x2534647d]
  40b6e6:	es dec ecx
  40b6e8:	test   DWORD PTR ds:0xe867e8a9,edi
  40b6ee:	sub    bh,BYTE PTR [esi+ecx*2]
  40b6f1:	sahf   
  40b6f2:	enter  0x45d6,0x3e
  40b6f6:	out    dx,eax
  40b6f7:	ins    DWORD PTR es:[edi],dx
  40b6f8:	adc    al,0xd5
  40b6fa:	adc    bh,ch
  40b6fc:	data16 fsub DWORD PTR [ebp+0x17]
  40b700:	mov    ebp,0x2af17e05
  40b705:	adc    ebp,DWORD PTR [esi-0x2f1014b4]
  40b70b:	pop    ecx
  40b70c:	mov    al,ds:0xaed84df1
  40b711:	add    ah,BYTE PTR [esp+edi*2-0x72]
  40b715:	mov    ecx,0xbbfd7232
  40b71a:	shl    DWORD PTR cs:[edx-0x65cad2fc],cl
  40b721:	ins    BYTE PTR es:[edi],dx
  40b722:	or     eax,0xb4900a99
  40b727:	pushf  
  40b728:	shr    DWORD PTR [ecx],1
  40b72a:	mov    ebx,0x5fb4bf0c
  40b72f:	mov    esi,0xd28eec4e
  40b734:	retf   
  40b735:	ret    0xeb9d
  40b738:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b739:	mov    ch,0x30
  40b73b:	pop    ss
  40b73c:	lds    esi,FWORD PTR [eax-0x6424b5f7]
  40b742:	push   ebx
  40b743:	xor    ebx,DWORD PTR [edi+0x6bca33c8]
  40b749:	loop   0x40b6e2
  40b74b:	cmp    al,0x2e
  40b74d:	sub    eax,0xe9fb2698
  40b752:	shl    BYTE PTR [edi+0x73],0xfb
  40b756:	pop    ecx
  40b757:	sbb    DWORD PTR [esi+0x6b],ebx
  40b75a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b75b:	xchg   ebx,eax
  40b75c:	xor    ebp,DWORD PTR [edi]
  40b75e:	imul   esi,ebp,0xffffffd5
  40b761:	pop    ss
  40b762:	jle    0x40b782
  40b764:	dec    edi
  40b765:	int3   
  40b766:	cmp    al,0x8a
  40b768:	test   DWORD PTR [ebp-0x1bcdf9da],ebp
  40b76e:	aad    0x9a
  40b770:	call   0xa28c:0xcfadb3db
  40b777:	fprem1 
  40b779:	pusha  
  40b77a:	addr16 pop edi
  40b77c:	popf   
  40b77d:	test   eax,0xb0a07863
  40b782:	xchg   BYTE PTR [edi+0x3b],cl
  40b785:	inc    esi
  40b786:	iret   
  40b787:	mov    ch,0xd3
  40b789:	jmp    0x95be:0x9e619b4f
  40b790:	dec    ebp
  40b791:	bound  esi,QWORD PTR [esi+eiz*4]
  40b794:	popa   
  40b795:	cld    
  40b796:	test   BYTE PTR [eax],bh
  40b798:	pop    ds
  40b799:	lahf   
  40b79a:	adc    BYTE PTR [esi],bh
  40b79c:	adc    ebp,esp
  40b79e:	sub    al,0x92
  40b7a0:	nop
  40b7a1:	sbb    esp,DWORD PTR [edi-0x71]
  40b7a4:	xor    BYTE PTR [esi],al
  40b7a6:	jmp    0x40b761
  40b7a8:	js     0x40b779
  40b7aa:	sbb    al,0x2
  40b7ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7ad:	in     al,0x86
  40b7af:	mov    edi,0x72c327b7
  40b7b4:	add    al,0xc7
  40b7b6:	jns    0x40b73b
  40b7b8:	adc    eax,DWORD PTR [ebp-0x1aaa74b0]
  40b7be:	mov    bh,0x13
  40b7c0:	out    0x69,eax
  40b7c2:	jnp    0x40b751
  40b7c4:	jge    0x40b75d
  40b7c6:	or     al,0xa
  40b7c8:	lods   al,BYTE PTR cs:[esi]
  40b7ca:	push   cs
  40b7cb:	je     0x40b7ab
  40b7cd:	pop    esp
  40b7ce:	out    dx,al
  40b7cf:	ret    0x70d2
  40b7d2:	test   DWORD PTR [esi],ebx
  40b7d4:	in     eax,dx
  40b7d5:	push   esi
  40b7d6:	jb     0x40b77a
  40b7d8:	repnz mov edi,0xa67ef762
  40b7de:	mov    al,ds:0x4ea24a6
  40b7e3:	pop    es
  40b7e4:	inc    esp
  40b7e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7e6:	add    edx,DWORD PTR [edi]
  40b7e8:	adc    cl,BYTE PTR [ebp-0x15345299]
  40b7ee:	int3   
  40b7ef:	and    al,0xed
  40b7f1:	sub    ebp,DWORD PTR [edi]
  40b7f3:	call   0xe77:0x48e6ae0e
  40b7fa:	mov    eax,0x1fa5d368
  40b7ff:	xchg   DWORD PTR [edx-0x22],ebx
  40b802:	shl    DWORD PTR [ebx],cl
  40b804:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b805:	aaa    
  40b806:	mov    ebp,0xf514fe58
  40b80b:	test   al,0x6d
  40b80d:	push   cs
  40b80e:	or     al,0x54
  40b810:	int3   
  40b811:	sahf   
  40b812:	bound  ebx,QWORD PTR [edi]
  40b814:	aas    
  40b815:	and    bl,BYTE PTR [ebp+0x42]
  40b818:	jg     0x40b7e8
  40b81a:	cmp    DWORD PTR [esi-0x6e1551f],esi
  40b820:	imul   ebx,esp,0xcb61c574
  40b826:	dec    eax
  40b827:	or     ecx,esp
  40b829:	jle    0x40b86c
  40b82b:	sub    esi,DWORD PTR [edi-0xd]
  40b82e:	mov    esi,DWORD PTR [edi-0x41]
  40b831:	shl    DWORD PTR [ecx],0xac
  40b834:	ret    0x63c3
  40b837:	dec    edx
  40b838:	adc    ch,BYTE PTR [edi+0x1a]
  40b83b:	pop    es
  40b83c:	push   0xfcfa2038
  40b841:	lahf   
  40b842:	into   
  40b843:	and    ah,BYTE PTR [edx]
  40b845:	or     eax,0x1e814144
  40b84a:	push   ds
  40b84b:	cmp    eax,0x483c1124
  40b850:	push   0xffffff84
  40b852:	jne    0x40b7e5
  40b854:	sbb    eax,0x3277eabe
  40b859:	jle    0x7b948353
  40b85f:	push   edx
  40b860:	and    DWORD PTR [esi+0x2552555a],esi
  40b866:	add    esi,DWORD PTR [ebp+0xb0fa9ba]
  40b86c:	shr    DWORD PTR [edi],0x6a
  40b86f:	loop   0x40b89b
  40b871:	mov    ch,ah
  40b873:	or     ebx,DWORD PTR [ebx-0x696cb866]
  40b879:	loopne 0x40b8f5
  40b87b:	bound  eax,QWORD PTR [edi]
  40b87d:	dec    ecx
  40b87e:	adc    bp,0xff96
  40b882:	push   cs
  40b883:	cmc    
  40b884:	mov    al,0x39
  40b886:	and    eax,0x597c8cdd
  40b88b:	pop    edx
  40b88c:	pop    edx
  40b88d:	inc    eax
  40b88e:	cld    
  40b88f:	in     eax,0x79
  40b891:	inc    eax
  40b892:	mov    al,ds:0x6473e026
  40b897:	jge    0x40b820
  40b899:	push   0x78
  40b89b:	pop    esp
  40b89c:	adc    BYTE PTR [ebx-0x5787ec5c],dl
  40b8a2:	push   edi
  40b8a3:	sub    DWORD PTR [edx+0x7adfc395],ebp
  40b8a9:	xchg   esp,eax
  40b8aa:	in     eax,0x2f
  40b8ac:	fsub   DWORD PTR [eax+eax*1-0x4fd2d31b]
  40b8b3:	js     0x40b86a
  40b8b5:	ss xchg esp,eax
  40b8b7:	stos   DWORD PTR es:[edi],eax
  40b8b8:	pop    es
  40b8b9:	pop    esi
  40b8ba:	mov    al,ds:0x9892d6b2
  40b8bf:	sbb    BYTE PTR [eax+eax*8+0x451d4bd7],cl
  40b8c6:	ret    
  40b8c7:	or     DWORD PTR [ecx-0x464037b8],ebp
  40b8cd:	and    eax,0x6456b044
  40b8d2:	push   ebp
  40b8d3:	sbb    BYTE PTR [edi],0xb4
  40b8d6:	mov    edx,0x54b96501
  40b8db:	hlt    
  40b8dc:	repz repz push ss
  40b8df:	loope  0x40b8ad
  40b8e1:	ror    DWORD PTR [esi+0x45e3f259],cl
  40b8e7:	push   0x903aa187
  40b8ec:	xor    eax,DWORD PTR [ebx+0x6a8bb541]
  40b8f2:	push   esi
  40b8f3:	out    0x3f,eax
  40b8f5:	inc    eax
  40b8f6:	mov    eax,ds:0x7a6935ab
  40b8fb:	pop    edx
  40b8fc:	fst    st(1)
  40b8ff:	and    esp,DWORD PTR [esi]
  40b901:	icebp  
  40b902:	cli    
  40b903:	imul   ebx,DWORD PTR es:[ebx-0x4b795086],0x19
  40b90b:	mov    ebx,0xc745f1f4
  40b910:	test   eax,0x86dcd814
  40b915:	xlat   BYTE PTR ds:[ebx]
  40b916:	jne    0x40b8aa
  40b918:	mov    dl,0x4
  40b91a:	jae    0x40b8a1
  40b91c:	xor    ch,BYTE PTR [edx+0x49]
  40b91f:	inc    esi
  40b920:	callw  0xc5e5
  40b924:	sub    BYTE PTR [eax],ah
  40b926:	stos   BYTE PTR es:[edi],al
  40b927:	call   0x13387a67
  40b92c:	lea    edx,[edx+0x72]
  40b92f:	or     BYTE PTR [ebp+0x18c6021d],dl
  40b935:	js     0x40b995
  40b937:	div    DWORD PTR [ebp-0x6c97bd4]
  40b93d:	add    bl,dl
  40b93f:	retf   
  40b940:	popf   
  40b941:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b942:	add    al,0xb9
  40b944:	inc    esi
  40b945:	mov    ch,0xad
  40b947:	xchg   edi,eax
  40b948:	dec    esi
  40b949:	sbb    DWORD PTR cs:[edi+edi*4-0x1f],eax
  40b94e:	xchg   esp,eax
  40b94f:	and    DWORD PTR [edi+0x7a],ebp
  40b952:	add    eax,0x291e1c89
  40b957:	mov    cl,0x3e
  40b959:	dec    ecx
  40b95a:	xor    BYTE PTR [eax-0x2a],ch
  40b95d:	xor    eax,0xa76d8eea
  40b962:	add    al,0xdf
  40b964:	mov    esp,0x4cb9b316
  40b969:	(bad)  
  40b96a:	sub    DWORD PTR [eax+0x58],edx
  40b96d:	pop    ebp
  40b96e:	aaa    
  40b96f:	adc    BYTE PTR [eax+0x26869cfd],bh
  40b975:	inc    al
  40b977:	int    0x21
  40b979:	mov    esp,0x77909255
  40b97e:	and    eax,DWORD PTR [ebx]
  40b980:	sub    al,0x16
  40b982:	xor    al,0x9a
  40b984:	dec    edx
  40b985:	(bad)  
  40b986:	jmp    0x821e:0xc6fd1139
  40b98d:	xchg   ebx,eax
  40b98e:	xchg   ebp,eax
  40b98f:	shr    DWORD PTR [ebx-0xc446e20],0x3b
  40b996:	shr    DWORD PTR [eax],0xe1
  40b999:	loopne 0x40b9c9
  40b99b:	std    
  40b99c:	push   ds
  40b99d:	jb     0x40b9b0
  40b99f:	adc    BYTE PTR [ebx],0x7c
  40b9a2:	mov    ch,ch
  40b9a4:	rcl    edx,cl
  40b9a6:	mov    al,ds:0x7ae2c917
  40b9ab:	or     eax,0x67af0707
  40b9b0:	test   DWORD PTR [ebp+0x1081c154],esi
  40b9b6:	fisttp DWORD PTR [ebp-0x75]
  40b9b9:	sbb    al,0xaf
  40b9bb:	lods   al,BYTE PTR ds:[esi]
  40b9bc:	test   DWORD PTR [ecx+esi*8-0x2a],ebx
  40b9c0:	adc    esp,eax
  40b9c2:	(bad)  
  40b9c3:	mov    eax,ds:0xa1fdf0c8
  40b9c8:	dec    edi
  40b9c9:	add    ebx,DWORD PTR [eax]
  40b9cb:	mov    dh,dl
  40b9cd:	stos   BYTE PTR es:[edi],al
  40b9ce:	mov    eax,ds:0xa50d60fe
  40b9d3:	mov    edi,0x90bc3f78
  40b9d8:	dec    ebx
  40b9d9:	imul   esp,DWORD PTR [eax-0x23],0x6de44d6a
  40b9e0:	shl    BYTE PTR [ecx-0x30],0x61
  40b9e4:	xchg   DWORD PTR [ecx],eax
  40b9e6:	cmp    DWORD PTR [ebp-0x12b9a164],0xffffffce
  40b9ed:	pusha  
  40b9ee:	push   ebx
  40b9ef:	aad    0xf0
  40b9f1:	imul   DWORD PTR [edi+edx*4-0x57388886]
  40b9f8:	(bad)  
  40b9f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9fa:	xchg   ecx,eax
  40b9fb:	outs   dx,DWORD PTR ds:[esi]
  40b9fc:	sbb    BYTE PTR [ecx],bl
  40b9fe:	mov    edx,0x983734f2
  40ba03:	outs   dx,DWORD PTR ds:[esi]
  40ba04:	inc    ecx
  40ba05:	imul   ebp,DWORD PTR [eax],0xe
  40ba08:	out    0x3f,eax
  40ba0a:	xor    ebx,ebx
  40ba0c:	enter  0x4ee,0xfc
  40ba10:	(bad)  [ecx-0x5b]
  40ba13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba14:	popf   
  40ba15:	push   ebx
  40ba16:	mov    ch,0x98
  40ba18:	sub    eax,0xc1803aac
  40ba1d:	add    edx,DWORD PTR [eax]
  40ba1f:	inc    edi
  40ba20:	inc    ecx
  40ba21:	lds    ebp,FWORD PTR ds:[ebx]
  40ba24:	add    BYTE PTR [ebx+ebp*8-0x9],ah
  40ba28:	(bad)  
  40ba29:	push   ss
  40ba2a:	sbb    DWORD PTR [esi+0x12],ebx
  40ba2d:	jmp    0x40b9b9
  40ba2f:	xchg   ecx,eax
  40ba30:	and    edx,DWORD PTR [eax+0x7]
  40ba33:	pop    ebp
  40ba34:	jnp    0x40b9de
  40ba36:	mov    ch,0x8d
  40ba38:	imul   ecx,DWORD PTR [ecx+ebp*2+0x34b071da],0xb14ff087
  40ba43:	ds cld 
  40ba45:	push   ds
  40ba46:	in     al,dx
  40ba47:	(bad)  
  40ba48:	xor    eax,0x829f86e5
  40ba4d:	xlat   BYTE PTR ds:[ebx]
  40ba4e:	in     eax,dx
  40ba4f:	or     esp,DWORD PTR [ecx]
  40ba51:	daa    
  40ba52:	xor    ebp,DWORD PTR [ebp+0x2e]
  40ba55:	loop   0x40b9ed
  40ba57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba58:	test   eax,0x6d3bdd81
  40ba5d:	mov    ?,WORD PTR [ecx+0x64470bce]
  40ba63:	jge    0x40ba52
  40ba65:	(bad)  
  40ba66:	xchg   ebx,eax
  40ba67:	and    bl,ah
  40ba69:	or     al,0x5f
  40ba6b:	gs in  al,0x6d
  40ba6e:	int    0xcb
  40ba70:	fldz   
  40ba72:	sbb    dl,BYTE PTR [edx+0x35ad9abc]
  40ba78:	and    dl,BYTE PTR [esi+0x3d]
  40ba7b:	jecxz  0x40bab1
  40ba7d:	mov    dl,0x60
  40ba7f:	cli    
  40ba80:	mov    BYTE PTR [ecx-0x46],dh
  40ba83:	ins    BYTE PTR es:[edi],dx
  40ba84:	pop    ecx
  40ba85:	add    BYTE PTR [eax],0xc5
  40ba88:	out    0x53,al
  40ba8a:	out    0x32,eax
  40ba8c:	pop    ebx
  40ba8d:	enter  0x9a80,0xe
  40ba91:	push   ds
  40ba92:	dec    edi
  40ba93:	push   cs
  40ba94:	aam    0xad
  40ba96:	sub    ebp,esi
  40ba98:	sub    BYTE PTR [eax-0x3c],ah
  40ba9b:	and    eax,0x134963b2
  40baa0:	mov    fs,WORD PTR [eax+0x3e]
  40baa3:	dec    edi
  40baa4:	sub    eax,0x32bf89fa
  40baa9:	mov    esp,DWORD PTR [ecx+ecx*1-0x1498f446]
  40bab0:	mov    WORD PTR ds:0x4b5e0eec,?
  40bab6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bab7:	pop    ds
  40bab8:	inc    ecx
  40bab9:	arpl   WORD PTR [edi+eax*2-0x37],di
  40babd:	xor    eax,0xfae23318
  40bac2:	pusha  
  40bac3:	stc    
  40bac4:	pop    esp
  40bac5:	loope  0x40bad6
  40bac7:	sub    BYTE PTR [ebp-0x1831001f],ch
  40bacd:	outs   dx,DWORD PTR ds:[esi]
  40bace:	xchg   ebp,eax
  40bacf:	mov    ch,BYTE PTR [edi+0x5c]
  40bad2:	ror    DWORD PTR [edx+0x4e],1
  40bad5:	aam    0xbe
  40bad7:	or     al,0x90
  40bad9:	test   eax,0x7cf3c11c
  40bade:	das    
  40badf:	mov    dh,ch
  40bae1:	adc    BYTE PTR [esi+0x7b],ch
  40bae4:	sbb    esi,ecx
  40bae6:	cwde   
  40bae7:	test   BYTE PTR [ebp+0x775bc457],ch
  40baed:	(bad)  
  40baee:	push   ebx
  40baef:	mov    al,ds:0xf736c6f9
  40baf4:	(bad)  
  40baf6:	cs add ch,cl
  40baf9:	add    ebp,DWORD PTR [ecx-0x27]
  40bafc:	mov    edx,?
  40bafe:	rol    DWORD PTR [esi+0x35],1
  40bb01:	and    edx,DWORD PTR cs:0x40fd05aa
  40bb08:	mov    al,ds:0x9b59a0e0
  40bb0d:	(bad)  
  40bb0f:	cs xchg edx,eax
  40bb11:	fsubr  QWORD PTR [esi+0x3c]
  40bb14:	pop    ecx
  40bb15:	pop    eax
  40bb16:	xor    DWORD PTR [edi+0x61],0x6e
  40bb1a:	jmp    0x8a197ff1
  40bb1f:	mov    ah,0xcc
  40bb21:	lea    edx,[esi-0x16]
  40bb24:	test   al,0x2
  40bb26:	scas   al,BYTE PTR es:[edi]
  40bb27:	call   0x42f6:0x2e812c9b
  40bb2e:	out    0xd7,al
  40bb30:	mov    gs,WORD PTR [eax-0x49154e96]
  40bb36:	sub    eax,eax
  40bb38:	cmp    ah,cl
  40bb3a:	xor    esp,edx
  40bb3c:	cwde   
  40bb3d:	push   ds
  40bb3e:	call   0xe4884029
  40bb43:	xchg   edi,eax
  40bb44:	pushf  
  40bb45:	fist   WORD PTR [esi+0x7cadb66c]
  40bb4b:	nop
  40bb4c:	in     eax,0xcd
  40bb4e:	and    edi,DWORD PTR [edx]
  40bb50:	jbe    0x40bb0e
  40bb52:	repnz ins BYTE PTR es:[edi],dx
  40bb54:	outs   dx,BYTE PTR ds:[esi]
  40bb55:	mov    dh,0xad
  40bb57:	imul   ecx,DWORD PTR [ecx],0x7faf9f1f
  40bb5d:	cwde   
  40bb5e:	dec    esp
  40bb5f:	aad    0xcf
  40bb61:	adc    BYTE PTR [ebp+0x4],ch
  40bb64:	dec    esp
  40bb65:	nop
  40bb66:	cli    
  40bb67:	cmc    
  40bb68:	aad    0x92
  40bb6a:	xor    BYTE PTR [edi-0x56fc342e],ah
  40bb70:	pop    ebx
  40bb71:	std    
  40bb72:	mov    ch,0x7a
  40bb74:	pop    ebx
  40bb75:	inc    esi
  40bb76:	(bad)
  40bb7a:	aam    0xcd
  40bb7c:	inc    ebx
  40bb7d:	addr16 pop ebx
  40bb7f:	add    cl,BYTE PTR [esi-0x18a16a76]
  40bb85:	test   al,0xc1
  40bb87:	xchg   edi,eax
  40bb88:	sub    DWORD PTR [esi+0x55],ebp
  40bb8b:	xor    al,0xf7
  40bb8d:	jnp    0x40bb59
  40bb8f:	mov    ebx,0x52f1d805
  40bb94:	mov    al,0xfe
  40bb96:	test   DWORD PTR [ecx-0x65],ecx
  40bb99:	mov    edx,0xe8b1a920
  40bb9e:	stos   BYTE PTR es:[edi],al
  40bb9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bba0:	cs out dx,eax
  40bba2:	scas   eax,DWORD PTR es:[edi]
  40bba3:	rcr    ah,1
  40bba5:	xchg   edx,eax
  40bba6:	jge    0x40bc20
  40bba8:	push   ebp
  40bba9:	mov    dl,ch
  40bbab:	push   ebp
  40bbac:	rol    BYTE PTR [esi+0x20b85aef],0x8a
  40bbb3:	inc    esp
  40bbb4:	rcr    BYTE PTR [esi+0x61],0x18
  40bbb8:	call   0x86e2:0x433f7a69
  40bbbf:	(bad)  
  40bbc0:	push   ds
  40bbc1:	ins    BYTE PTR es:[edi],dx
  40bbc2:	(bad)  
  40bbc3:	sbb    eax,0xba219c8d
  40bbc8:	inc    edx
  40bbc9:	mov    bh,BYTE PTR [esi+0x67]
  40bbcc:	iret   
  40bbcd:	xor    al,cl
  40bbcf:	dec    eax
  40bbd0:	mov    esi,0x958120c8
  40bbd5:	push   esp
  40bbd6:	shl    BYTE PTR [esi],1
  40bbd8:	arpl   WORD PTR [ecx],ax
  40bbda:	mov    eax,0xaff719c8
  40bbdf:	xor    bh,ch
  40bbe1:	in     al,0x6d
  40bbe3:	or     ah,0xc2
  40bbe6:	jmp    DWORD PTR [eax]
  40bbe8:	test   al,0xe9
  40bbea:	clc    
  40bbeb:	lock or DWORD PTR [ebp-0x7de850],esi
  40bbf2:	sbb    DWORD PTR [ebx+0x180b42a0],ebp
  40bbf8:	out    0x7a,eax
  40bbfa:	xor    al,0x39
  40bbfc:	icebp  
  40bbfd:	xor    BYTE PTR [esi-0x6212d0ac],bl
  40bc03:	repz xor al,0xde
  40bc06:	mov    ds:0xbd159687,al
  40bc0b:	pop    ss
  40bc0c:	lods   eax,DWORD PTR ds:[esi]
  40bc0d:	xchg   ebp,eax
  40bc0e:	push   eax
  40bc0f:	mov    al,0x8f
  40bc11:	retf   
  40bc12:	leave  
  40bc13:	sbb    BYTE PTR [edx],ah
  40bc15:	ins    BYTE PTR es:[edi],dx
  40bc16:	mov    WORD PTR [ebx],fs
  40bc18:	jmp    0x8b9:0x3726d3d9
  40bc1f:	stos   DWORD PTR es:[edi],eax
  40bc20:	mov    ?,ecx
  40bc22:	(bad)  
  40bc23:	cmp    eax,0xae0486a4
  40bc28:	jg     0x40bc21
  40bc2a:	sub    ch,BYTE PTR [eax-0x58]
  40bc2d:	lock mov ebp,0xdedca9a1
  40bc33:	mov    esi,DWORD PTR [eax]
  40bc35:	jp     0x40bc9a
  40bc37:	rcl    bl,cl
  40bc39:	ds icebp 
  40bc3b:	inc    edi
  40bc3c:	mov    ecx,ebx
  40bc3e:	fucom  st(7)
  40bc40:	inc    edx
  40bc41:	xchg   edi,eax
  40bc42:	push   ecx
  40bc43:	nop
  40bc44:	sbb    BYTE PTR [edi+0x22],dh
  40bc47:	ins    BYTE PTR es:[edi],dx
  40bc48:	push   es
  40bc49:	loop   0x40bca5
  40bc4b:	aaa    
  40bc4c:	add    al,0x30
  40bc4e:	xchg   esi,eax
  40bc4f:	mov    eax,0x517208c9
  40bc54:	mov    dh,0xd2
  40bc56:	xchg   ch,cl
  40bc58:	cwde   
  40bc59:	shl    BYTE PTR ds:0x5483eb6c,1
  40bc5f:	loope  0x40bcc3
  40bc61:	add    DWORD PTR [ebp-0x44],ebp
  40bc64:	(bad)  
  40bc66:	cmp    al,0x2a
  40bc68:	mov    al,0x3c
  40bc6a:	(bad)  
  40bc6b:	mov    cl,0xff
  40bc6d:	jp     0x40bcc8
  40bc6f:	sbb    BYTE PTR [edx-0x59],dl
  40bc72:	inc    esp
  40bc73:	xor    BYTE PTR [esi+0x4b4d38f7],0x17
  40bc7a:	cld    
  40bc7b:	add    eax,0xa4f88ecb
  40bc80:	mov    dh,0x1b
  40bc82:	out    dx,al
  40bc83:	in     eax,0xf5
  40bc85:	dec    ecx
  40bc86:	rol    ebp,1
  40bc88:	dec    esi
  40bc89:	and    DWORD PTR [edx+0x68d23ee8],0xbcaffa7a
  40bc93:	mov    eax,ds:0xf45e2e2
  40bc98:	cmp    cl,dl
  40bc9a:	test   al,0x67
  40bc9c:	mov    ss,ecx
  40bc9e:	cmp    al,0x2c
  40bca0:	xor    bl,BYTE PTR [ebx+0x1f]
  40bca3:	std    
  40bca4:	pop    ds
  40bca5:	push   eax
  40bca6:	in     al,dx
  40bca7:	(bad)  [ebx+ebp*1-0x3941032a]
  40bcae:	mov    bl,ch
  40bcb0:	jb     0x40bc70
  40bcb2:	xor    DWORD PTR [edi-0x76d4f0e],ecx
  40bcb8:	sub    al,0x12
  40bcba:	icebp  
  40bcbb:	in     eax,dx
  40bcbc:	push   eax
  40bcbd:	inc    esi
  40bcbe:	fcmovnb st,st(7)
  40bcc0:	or     al,0x5e
  40bcc2:	sbb    BYTE PTR [ebx-0x71],0x55
  40bcc6:	enter  0x1d0d,0xf2
  40bcca:	fcom   QWORD PTR [esi+0x4cdcf461]
  40bcd0:	xor    ecx,esp
  40bcd2:	or     esp,ecx
  40bcd4:	cli    
  40bcd5:	mov    esp,0x570be869
  40bcda:	push   es
  40bcdb:	(bad)  
  40bcdc:	mov    ds:0x9205677f,al
  40bce1:	scas   eax,DWORD PTR es:[edi]
  40bce2:	(bad)  
  40bce4:	test   al,0x5f
  40bce6:	aaa    
  40bce7:	cdq    
  40bce8:	ins    DWORD PTR es:[edi],dx
  40bce9:	idiv   BYTE PTR [eax+0x6882bd7c]
  40bcef:	stc    
  40bcf0:	data16 fsubr st,st(3)
  40bcf3:	cmp    al,0xdc
  40bcf5:	in     ax,dx
  40bcf7:	and    ebp,0x7e7c8ae4
  40bcfd:	jns    0x40bcbe
  40bcff:	push   eax
  40bd00:	pop    eax
  40bd02:	mov    ds:0xa0abd639,al
  40bd07:	rol    DWORD PTR gs:[ecx+0x2e9600b2],1
  40bd0e:	int3   
  40bd0f:	inc    eax
  40bd10:	sub    al,0xc5
  40bd12:	mov    esi,0x67f465fb
  40bd17:	sbb    eax,esi
  40bd19:	mov    edx,0x10f5ae94
  40bd1e:	xor    DWORD PTR [eax],ebp
  40bd20:	push   ss
  40bd21:	enter  0x4cd0,0xbc
  40bd25:	sub    al,0x8f
  40bd27:	sar    BYTE PTR [eax-0x76],cl
  40bd2a:	cdq    
  40bd2b:	retf   0x4cc
  40bd2e:	popf   
  40bd2f:	adc    BYTE PTR [ebx+0x607414c0],bh
  40bd35:	enter  0xaba9,0xaa
  40bd39:	adc    eax,DWORD PTR [edx]
  40bd3b:	mov    bl,ch
  40bd3d:	mov    edi,0x8c5fd326
  40bd42:	call   0x5b6194fa
  40bd47:	(bad)  
  40bd48:	cmc    
  40bd49:	sub    BYTE PTR [ecx+0x54],0xe8
  40bd4d:	ss jmp 0xba481306
  40bd53:	lods   al,BYTE PTR ds:[esi]
  40bd54:	sbb    bl,BYTE PTR [esp+ecx*8+0x69]
  40bd58:	pop    esi
  40bd59:	pop    eax
  40bd5a:	popa   
  40bd5b:	pusha  
  40bd5c:	or     DWORD PTR [ecx],esi
  40bd5e:	sub    bl,ch
  40bd60:	mov    eax,ds:0x4cc07729
  40bd65:	mov    al,0xfa
  40bd67:	cmp    DWORD PTR [eax+0x299f0292],0x39406d71
  40bd71:	jg     0x40bd82
  40bd73:	popa   
  40bd74:	jns    0x40bd1f
  40bd76:	xor    DWORD PTR [edi+esi*8-0x66],esp
  40bd7a:	push   0x1a
  40bd7c:	scas   al,BYTE PTR es:[edi]
  40bd7d:	push   cs
  40bd7e:	push   edi
  40bd7f:	into   
  40bd80:	out    0x86,eax
  40bd82:	outs   dx,BYTE PTR ds:[esi]
  40bd83:	mov    bh,0x40
  40bd85:	cmp    DWORD PTR [edi],ebx
  40bd87:	call   0xa24a:0x22ccbee5
  40bd8e:	sub    DWORD PTR [ecx],eax
  40bd90:	bound  ecx,QWORD PTR [eax-0x49c75650]
  40bd96:	jg     0x40bd1d
  40bd98:	(bad)
  40bd9c:	in     al,dx
  40bd9d:	pop    es
  40bd9e:	scas   eax,DWORD PTR es:[edi]
  40bd9f:	mov    ebx,0xd2022057
  40bda4:	test   DWORD PTR ss:[edi],eax
  40bda7:	retf   
  40bda8:	cmp    ecx,DWORD PTR [esi]
  40bdaa:	sahf   
  40bdab:	jmp    0xe62f0020
  40bdb0:	es push ebx
  40bdb2:	push   ebp
  40bdb3:	into   
  40bdb4:	mov    bh,0x7e
  40bdb6:	jno    0x40bd9f
  40bdb8:	faddp  st(5),st
  40bdba:	adc    edx,DWORD PTR [ecx+0x3b]
  40bdbd:	mov    BYTE PTR [ebx-0x79baa04b],cl
  40bdc3:	stos   BYTE PTR es:[edi],al
  40bdc4:	mov    DWORD PTR [edx-0x64],esp
  40bdc7:	sub    BYTE PTR [ebp+0xaf57d89],cl
  40bdcd:	retf   0xa7a
  40bdd0:	imul   BYTE PTR ds:0x2e4a5c9c
  40bdd6:	dec    edx
  40bdd7:	call   0xffec:0x3874f737
  40bdde:	jmp    0x34327f4a
  40bde3:	es addr16 push ds
  40bde6:	fbstp  TBYTE PTR [esi-0x60]
  40bde9:	mov    ecx,0x9fae0ab2
  40bdee:	sbb    dl,BYTE PTR [edx]
  40bdf0:	push   edx
  40bdf1:	dec    esp
  40bdf2:	mov    esp,0x88192c69
  40bdf7:	mov    esp,DWORD PTR [eax]
  40bdf9:	jle    0x40be2d
  40bdfb:	jbe    0x40be63
  40bdfd:	jp     0x40be3a
  40bdff:	js     0x40bdb7
  40be01:	(bad)  
  40be03:	ss push edx
  40be05:	addr16 iret 
  40be07:	or     al,0x60
  40be09:	or     eax,ebx
  40be0b:	call   0x729e6ec9
  40be10:	loopne 0x40bdab
  40be12:	sbb    eax,DWORD PTR [ecx+0x345e6720]
  40be18:	xor    esi,DWORD PTR [edi]
  40be1a:	cli    
  40be1b:	iret   
  40be1c:	and    BYTE PTR [esi+0xd29b8ad],ch
  40be22:	icebp  
  40be23:	and    ch,cl
  40be25:	aaa    
  40be26:	ret    
  40be27:	add    eax,0xefdde2fd
  40be2c:	fmul   DWORD PTR [esi]
  40be2e:	in     al,0xdb
  40be30:	sbb    al,0x2
  40be33:	add    al,0x68
  40be35:	mov    al,0x5f
  40be37:	lahf   
  40be38:	aam    0xea
  40be3a:	aaa    
  40be3b:	mov    DWORD PTR [ecx-0x61],esp
  40be3e:	jmp    0x1bb83f11
  40be43:	dec    ebx
  40be44:	ss xchg edi,eax
  40be46:	xchg   BYTE PTR [eax],al
  40be48:	subps  xmm7,XMMWORD PTR [ecx]
  40be4b:	cli    
  40be4c:	mov    BYTE PTR [eax+0x6a],bh
  40be4f:	xchg   ecx,eax
  40be50:	and    al,BYTE PTR [edx+0x7d]
  40be53:	fimul  DWORD PTR [edi+eiz*2]
  40be56:	cld    
  40be57:	add    al,0x3e
  40be59:	pop    esi
  40be5a:	pop    ebp
  40be5b:	inc    ebp
  40be5c:	cmp    eax,0xe5ee97a
  40be61:	fild   WORD PTR [eax]
  40be63:	cwde   
  40be64:	add    DWORD PTR [eax+0x1d],ecx
  40be67:	push   0x294afec7
  40be6c:	sbb    eax,DWORD PTR [edx]
  40be6e:	loope  0x40beb6
  40be70:	sub    al,0xed
  40be72:	xor    ch,0x6
  40be75:	dec    edi
  40be76:	sti    
  40be77:	outs   dx,DWORD PTR ds:[esi]
  40be78:	fcmovu st,st(4)
  40be7a:	(bad)
  40be7d:	dec    edx
  40be7e:	sbb    edx,edi
  40be80:	out    dx,eax
  40be81:	sti    
  40be82:	clc    
  40be83:	mov    bl,0x94
  40be85:	rcr    BYTE PTR [edi],cl
  40be87:	lods   al,BYTE PTR ds:[esi]
  40be88:	in     al,dx
  40be89:	int3   
  40be8a:	in     al,0x8b
  40be8c:	sub    al,0x65
  40be8e:	dec    ebp
  40be8f:	mov    ds:0x154942d3,al
  40be94:	xor    al,0xc0
  40be96:	fild   DWORD PTR [edi-0x305c429e]
  40be9c:	loope  0x40be5e
  40be9e:	dec    ebp
  40be9f:	mov    ds:0x56944499,eax
  40bea4:	dec    edi
  40bea5:	aad    0x1
  40bea7:	fcom   st(0)
  40bea9:	xlat   BYTE PTR ds:[ebx]
  40beaa:	popf   
  40beab:	mov    ds:0x644cd6f9,eax
  40beb0:	push   eax
  40beb1:	lods   al,BYTE PTR ds:[esi]
  40beb2:	fisttp QWORD PTR [eax+edx*2]
  40beb5:	pop    edi
  40beb6:	in     eax,0xf4
  40beb8:	mov    ecx,0x21bb8e61
  40bebd:	mov    dl,0x96
  40bebf:	and    ch,bl
  40bec1:	dec    eax
  40bec2:	sub    edi,DWORD PTR [esi+0x708f918d]
  40bec8:	jno    0x40bec0
  40beca:	push   es
  40becb:	dec    ecx
  40becc:	cmp    DWORD PTR [ecx+0x3f],eax
  40becf:	inc    esi
  40bed0:	test   eax,0xe6445aee
  40bed5:	or     al,0x1f
  40bed7:	ja     0x40bf4e
  40bed9:	ret    
  40beda:	pop    edi
  40bedb:	xchg   esp,eax
  40bedc:	lods   eax,DWORD PTR ds:[esi]
  40bedd:	shl    bl,0x6e
  40bee0:	xchg   esp,eax
  40bee1:	jo     0x40bed4
  40bee3:	lods   al,BYTE PTR ds:[esi]
  40bee4:	ret    0x441d
  40bee7:	rol    BYTE PTR [edx],cl
  40bee9:	xchg   ebp,eax
  40beea:	or     bh,BYTE PTR [ebx+0x34]
  40beed:	fsub   DWORD PTR [ecx+0x46]
  40bef0:	xchg   ah,ch
  40bef2:	push   ecx
  40bef3:	sbb    DWORD PTR [edi-0x49c580c0],eax
  40bef9:	mov    esp,0x40c91957
  40befe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40beff:	mov    ebp,ds
  40bf01:	adc    esp,DWORD PTR [ecx-0xa4b927b]
  40bf07:	ret    0x4b7
  40bf0a:	fwait
  40bf0b:	popa   
  40bf0c:	mov    edx,0xcfb22364
  40bf11:	mov    ebp,0x82a00ba1
  40bf16:	add    edi,esp
  40bf18:	rcr    ah,cl
  40bf1a:	outs   dx,DWORD PTR ds:[esi]
  40bf1b:	retf   
  40bf1c:	mov    bh,0x72
  40bf1e:	xchg   edi,eax
  40bf1f:	sub    BYTE PTR [edi],cl
  40bf21:	or     DWORD PTR [edx+0x4],edx
  40bf24:	iret   
  40bf25:	push   es
  40bf26:	sub    DWORD PTR [ecx-0x13],ebp
  40bf29:	retf   0x8307
  40bf2c:	and    BYTE PTR [ebx],al
  40bf2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf2f:	mov    dl,0xd
  40bf31:	jns    0x40becb
  40bf33:	or     ebx,esp
  40bf35:	or     eax,0x303bf94c
  40bf3a:	mov    ebx,0x48f96c8f
  40bf3f:	cmp    DWORD PTR [edi-0x14f8711a],edx
  40bf45:	dec    edx
  40bf46:	jp     0x40bf78
  40bf48:	mov    al,0xc5
  40bf4a:	(bad)  
  40bf4b:	pushf  
  40bf4c:	inc    edi
  40bf4d:	or     DWORD PTR [esi+0x35],ecx
  40bf50:	pop    eax
  40bf51:	aad    0x31
  40bf53:	jmp    0x40bfa2
  40bf55:	cmp    ch,0x77
  40bf58:	mov    ah,0xf5
  40bf5a:	retf   0x6e25
  40bf5d:	xlat   BYTE PTR ds:[ebx]
  40bf5e:	push   edx
  40bf5f:	imul   BYTE PTR [eax]
  40bf61:	adc    ebx,eax
  40bf63:	cld    
  40bf64:	sbb    eax,DWORD PTR [ebx]
  40bf66:	jo     0x40bf08
  40bf68:	xlat   BYTE PTR ds:[ebx]
  40bf69:	and    eax,0xf46b3037
  40bf6e:	ds jle 0x40bf9f
  40bf71:	std    
  40bf72:	dec    esp
  40bf73:	lsl    eax,WORD PTR [ecx-0x6885f8b4]
  40bf7a:	mov    esi,0xb23ee54b
  40bf7f:	sar    DWORD PTR [ebx+0x7436337f],0x12
  40bf86:	dec    eax
  40bf87:	push   ss
  40bf88:	jae    0x40bf9b
  40bf8a:	sbb    al,0x7a
  40bf8c:	sahf   
  40bf8d:	sbb    BYTE PTR [edx+0x5f],0xe4
  40bf91:	shl    edi,cl
  40bf93:	pop    edx
  40bf94:	push   0x54
  40bf96:	sbb    esp,DWORD PTR [ecx]
  40bf98:	into   
  40bf99:	es retf 
  40bf9b:	idiv   DWORD PTR [eax]
  40bf9d:	mov    dh,0xae
  40bf9f:	pushf  
  40bfa0:	out    0xf3,eax
  40bfa2:	clc    
  40bfa3:	(bad)  
  40bfa4:	int3   
  40bfa5:	cmp    BYTE PTR [ebx+ebx*2],bh
  40bfa8:	iret   
  40bfa9:	jo     0x40c00d
  40bfab:	into   
  40bfac:	popa   
  40bfad:	xchg   ebx,eax
  40bfae:	lock in al,dx
  40bfb0:	or     al,BYTE PTR [esp+ecx*1]
  40bfb3:	popa   
  40bfb4:	and    DWORD PTR [ebx+0x6970bd5a],ebp
  40bfba:	into   
  40bfbb:	mov    esp,0xd303cd7d
  40bfc0:	ror    BYTE PTR [edx-0x7f],1
  40bfc3:	or     ecx,eax
  40bfc5:	jo     0x40bf51
  40bfc7:	mov    al,ds:0xfea75d6
  40bfcc:	cmp    BYTE PTR [esi+eiz*1+0x3d462566],al
  40bfd3:	loope  0x40bf6a
  40bfd5:	mov    edx,esp
  40bfd7:	dec    eax
  40bfd8:	jae    0x40bfdb
  40bfda:	leave  
  40bfdb:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40bfdd:	sub    eax,edx
  40bfdf:	call   0x92f55c6c
  40bfe4:	push   ds
  40bfe5:	aaa    
  40bfe6:	ss mov al,0x89
  40bfe9:	dec    eax
  40bfea:	or     DWORD PTR [ecx+0x79],esp
  40bfed:	push   esp
  40bfee:	and    cl,BYTE PTR [eax+0xc75dee9]
  40bff4:	jg     0x40bf85
  40bff6:	pushf  
  40bff7:	sbb    BYTE PTR ds:[eax+0x7cf1371e],0xaf
  40bfff:	cwde   
  40c000:	out    0xe3,eax
  40c002:	xor    DWORD PTR [esi-0x54],ebp
  40c005:	pushf  
  40c006:	out    dx,eax
  40c007:	inc    eax
  40c008:	adc    al,0x92
  40c00a:	test   esi,esp
  40c00c:	das    
  40c00d:	shl    DWORD PTR [ecx],1
  40c00f:	xor    ch,al
  40c011:	fwait
  40c012:	xor    eax,0xf914d08d
  40c017:	cwd    
  40c019:	outs   dx,DWORD PTR ds:[esi]
  40c01a:	fwait
  40c01b:	mov    ds:0xf803099a,al
  40c020:	ins    BYTE PTR es:[edi],dx
  40c021:	xchg   edi,eax
  40c022:	or     DWORD PTR [ebx+0x1ff1d387],ebx
  40c028:	push   eax
  40c029:	into   
  40c02a:	mov    ?,WORD PTR [eax-0x776e1598]
  40c030:	or     ch,BYTE PTR [ecx+esi*8+0x53]
  40c034:	xchg   ebx,eax
  40c035:	in     al,0x7b
  40c037:	loopne 0x40c070
  40c039:	sahf   
  40c03a:	jmp    0x40bfde
  40c03c:	rcr    BYTE PTR [esi],cl
  40c03e:	in     al,dx
  40c03f:	icebp  
  40c040:	in     eax,0xb
  40c042:	lahf   
  40c043:	in     eax,0xce
  40c045:	sub    ecx,DWORD PTR [edi-0x6f]
  40c048:	dec    edx
  40c049:	je     0x40c05c
  40c04b:	cld    
  40c04c:	popa   
  40c04d:	inc    esp
  40c04e:	jecxz  0x40c0c7
  40c050:	aaa    
  40c051:	call   0x3a90c6c6
  40c056:	push   es
  40c057:	nop
  40c058:	inc    edx
  40c059:	(bad)  
  40c05a:	push   edi
  40c05b:	(bad)  [esi+0xdb02679]
  40c061:	or     al,0x7a
  40c063:	int    0xa2
  40c065:	push   ss
  40c066:	mov    ds:0xf8c80c13,al
  40c06b:	loopne 0x40c078
  40c06d:	lds    esp,FWORD PTR [edx]
  40c06f:	daa    
  40c070:	(bad)  
  40c071:	sub    edi,DWORD PTR [eax-0x2c]
  40c074:	mov    ds:0x44762442,eax
  40c079:	test   al,0xbd
  40c07b:	fdiv   DWORD PTR [esi+0x14639f3b]
  40c081:	and    DWORD PTR [eax+0x32],esp
  40c084:	pop    es
  40c085:	sbb    DWORD PTR [esi+0x50],ebp
  40c088:	adc    dh,bh
  40c08a:	push   edx
  40c08b:	xchg   ebx,eax
  40c08c:	mov    edi,0x21e6448c
  40c091:	outs   dx,DWORD PTR ds:[esi]
  40c092:	mov    ah,0x47
  40c094:	adc    BYTE PTR [eax+0x7c],ah
  40c097:	fdivr  QWORD PTR [ebx-0x18]
  40c09a:	inc    eax
  40c09b:	outs   dx,BYTE PTR ds:[esi]
  40c09c:	cmp    bh,BYTE PTR [edx-0x79313657]
  40c0a2:	sub    eax,0xb71739e8
  40c0a7:	adc    eax,0x1a30e375
  40c0ac:	mov    ah,0x26
  40c0ae:	sub    BYTE PTR [edi+ebx*1+0x66],ah
  40c0b2:	cld    
  40c0b3:	pop    ebx
  40c0b4:	mov    ds:0xf0425825,al
  40c0b9:	sub    al,0x49
  40c0bb:	test   al,0xe2
  40c0bd:	xchg   edi,eax
  40c0be:	cmc    
  40c0bf:	jns    0x40c0ca
  40c0c1:	pop    eax
  40c0c2:	and    eax,DWORD PTR [edx]
  40c0c4:	xchg   edi,eax
  40c0c5:	jno    0x40c0a7
  40c0c7:	xor    bl,0xf2
  40c0ca:	jmp    0xf599:0xf484c1f0
  40c0d1:	xchg   ecx,eax
  40c0d2:	jg     0x40c0de
  40c0d4:	or     DWORD PTR [esi+edi*4+0x720330da],edx
  40c0db:	das    
  40c0dc:	loopne 0x40c0bb
  40c0de:	test   esp,ecx
  40c0e0:	pop    es
  40c0e1:	pushf  
  40c0e2:	dec    ebp
  40c0e3:	xor    bl,BYTE PTR [edx-0x2eb98f52]
  40c0e9:	gs fisub WORD PTR es:[esi-0x65442751]
  40c0f1:	jae    0x40c074
  40c0f3:	fsubr  st,st(2)
  40c0f5:	shl    edx,0x14
  40c0f8:	cmp    ecx,esi
  40c0fa:	stos   BYTE PTR es:[edi],al
  40c0fb:	repnz ficomp WORD PTR ds:0x6c26c41a
  40c102:	mov    esp,0xd0a30fba
  40c107:	sar    DWORD PTR [ecx+0x5c],1
  40c10a:	sub    esp,DWORD PTR [esi+0x52]
  40c10d:	fcomip st,st(5)
  40c10f:	stos   DWORD PTR es:[edi],eax
  40c110:	test   eax,0x1f82548e
  40c115:	je     0x40c0d9
  40c117:	xchg   ebx,eax
  40c118:	popa   
  40c119:	cmp    eax,0xaf1c0ccb
  40c11e:	cdq    
  40c11f:	in     eax,0x6d
  40c121:	stos   DWORD PTR es:[edi],eax
  40c122:	imul   esp,DWORD PTR [ebx],0x66
  40c125:	lods   al,BYTE PTR ds:[esi]
  40c126:	jle    0x40c18c
  40c128:	retf   
  40c129:	or     ah,BYTE PTR [ebx-0x4c2aa4cc]
  40c12f:	gs mov edi,0xe4f56293
  40c135:	jne    0x40c142
  40c137:	mov    cl,0xf6
  40c139:	mov    ds:0x92866dea,al
  40c13e:	xchg   edi,eax
  40c13f:	sbb    al,0xde
  40c141:	jmp    0x8583:0xcab57a24
  40c148:	push   0xfffffff2
  40c14a:	jecxz  0x40c109
  40c14c:	mov    cl,0xc4
  40c14e:	push   esi
  40c14f:	inc    eax
  40c150:	sar    DWORD PTR [edx-0x54],cl
  40c153:	inc    edx
  40c154:	int    0x64
  40c156:	sub    eax,0x3d7510f9
  40c15b:	shl    BYTE PTR [ecx-0x2713f437],cl
  40c161:	mov    DWORD PTR [esi+0x6a],esp
  40c164:	cmp    BYTE PTR [edi-0x66],dh
  40c167:	clc    
  40c168:	xchg   edi,eax
  40c169:	loope  0x40c14c
  40c16b:	in     eax,dx
  40c16c:	jp     0x40c15c
  40c16e:	mov    ds,WORD PTR [edx-0x29]
  40c171:	outs   dx,DWORD PTR es:[esi]
  40c173:	push   es
  40c174:	repnz dec ebx
  40c176:	dec    ebp
  40c177:	push   esi
  40c178:	leave  
  40c179:	stos   DWORD PTR es:[edi],eax
  40c17a:	mov    ds:0xb2ce2dbe,eax
  40c17f:	xlat   BYTE PTR ds:[ebx]
  40c180:	pop    ebp
  40c181:	xchg   esi,eax
  40c182:	js     0x40c115
  40c184:	clc    
  40c185:	pop    es
  40c186:	repnz push ds
  40c188:	adc    cl,0xe
  40c18b:	adc    esi,DWORD PTR [edi-0x7c]
  40c18e:	push   0xd3d431d2
  40c193:	pop    ds
  40c194:	test   BYTE PTR [edx],al
  40c196:	gs mov ch,0x1d
  40c199:	ret    
  40c19a:	add    edi,DWORD PTR [ebx-0x11c549c9]
  40c1a0:	or     eax,DWORD PTR [ebp+0x72e9a727]
  40c1a6:	add    DWORD PTR [ecx-0x5b38a215],0x7a898eca
  40c1b0:	scas   al,BYTE PTR es:[edi]
  40c1b1:	dec    eax
  40c1b2:	loopne 0x40c158
  40c1b4:	addr16 loop 0x40c1bb
  40c1b7:	scas   al,BYTE PTR es:[edi]
  40c1b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1b9:	jne    0x40c20b
  40c1bb:	rcr    DWORD PTR ss:[ecx-0x2d],cl
  40c1bf:	call   0xf5ae3ccd
  40c1c4:	je     0x40c16d
  40c1c6:	xor    al,0xac
  40c1c8:	bound  esp,QWORD PTR [edx+0x43c841f6]
  40c1ce:	dec    cx
  40c1d0:	jp     0x40c164
  40c1d2:	xchg   ecx,eax
  40c1d3:	mov    ch,0xb8
  40c1d5:	mov    ebx,0x69b06c08
  40c1da:	push   0xffffffb2
  40c1dc:	les    esi,FWORD PTR [ebx+edx*8]
  40c1df:	(bad)  
  40c1e0:	in     al,dx
  40c1e1:	(bad)  
  40c1e2:	pop    ecx
  40c1e3:	xor    DWORD PTR [edx-0x6f45dd79],edx
  40c1e9:	jl     0x40c196
  40c1eb:	les    ebp,FWORD PTR [ebx+0x705d2144]
  40c1f1:	pushf  
  40c1f2:	lock prefetch (bad)
  40c1f4:	or     eax,0x2b39f8f1
  40c1f9:	nop
  40c1fa:	sbb    eax,DWORD PTR es:[ecx+0x38]
  40c1fe:	sbb    eax,0x8749a06f
  40c203:	imul   ebx,DWORD PTR [ebx-0x2f638d41],0xe
  40c20a:	mov    edx,0x582f9b8c
  40c20f:	pop    ss
  40c210:	jno    0x40c1d4
  40c212:	clc    
  40c213:	int    0xe2
  40c215:	out    0xa,eax
  40c217:	cmp    cl,ch
  40c219:	jns    0x40c22f
  40c21b:	mov    ah,0xae
  40c21d:	stos   DWORD PTR es:[edi],eax
  40c21e:	or     al,al
  40c220:	mov    eax,0xa4497569
  40c225:	ror    BYTE PTR [edx+edi*1-0x11ba0274],1
  40c22c:	imul   esi,DWORD PTR [ebx-0x51],0x1e
  40c230:	adc    DWORD PTR ds:0xa98a7a10,0x4e50a70c
  40c23a:	push   cs
  40c23b:	sub    BYTE PTR [edi],bl
  40c23d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c23e:	mov    DWORD PTR [ebx-0x3a],ebp
  40c241:	fcmovnb st,st(3)
  40c243:	int3   
  40c244:	dec    ebx
  40c245:	push   ecx
  40c246:	pop    ebx
  40c247:	test   ecx,esp
  40c249:	into   
  40c24a:	add    DWORD PTR [edx],esi
  40c24c:	jmp    0x40c27d
  40c24e:	push   cs
  40c24f:	xlat   BYTE PTR ds:[ebx]
  40c250:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c251:	inc    esi
  40c252:	xor    eax,DWORD PTR [ebx]
  40c254:	je     0x40c2cb
  40c256:	and    edi,DWORD PTR [ebx-0x55e5bbdd]
  40c25c:	mov    ah,0x4
  40c25e:	mov    ds:0xad744ba9,al
  40c263:	xchg   ebx,eax
  40c264:	inc    ebx
  40c265:	je     0x40c209
  40c267:	(bad)  
  40c268:	enter  0xe14d,0x5b
  40c26c:	inc    ebp
  40c26d:	test   BYTE PTR [edx+0x72],bh
  40c270:	ficom  DWORD PTR [ebx]
  40c272:	cli    
  40c273:	and    cl,BYTE PTR ds:0xecaefd96
  40c279:	inc    esp
  40c27a:	stos   DWORD PTR es:[edi],eax
  40c27b:	push   ss
  40c27c:	mov    edi,0x977dfa7c
  40c281:	pop    ds
  40c282:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c283:	pop    edx
  40c284:	fsub   st,st(3)
  40c286:	pop    eax
  40c287:	data16 in al,dx
  40c289:	repnz out 0xd3,al
  40c28c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c28d:	test   BYTE PTR [edi],cl
  40c28f:	add    al,0xbb
  40c291:	js     0x40c271
  40c293:	cmp    al,0x23
  40c295:	pushf  
  40c296:	sar    DWORD PTR [esp+ebp*1+0x599809dd],0x33
  40c29e:	mov    cx,0xf1f3
  40c2a2:	or     ecx,ebx
  40c2a4:	adc    bh,0x6
  40c2a7:	jp     0x40c244
  40c2a9:	adc    BYTE PTR [edx+0x333dfadf],dh
  40c2af:	mov    ch,0x59
  40c2b1:	or     al,0x85
  40c2b3:	xor    esi,DWORD PTR [ebx]
  40c2b5:	lea    ebp,[edx]
  40c2b7:	inc    eax
  40c2b8:	fs add eax,0xa6436ad
  40c2be:	pop    esp
  40c2bf:	std    
  40c2c0:	mov    bh,0x94
  40c2c2:	out    0x12,eax
  40c2c4:	pop    ebx
  40c2c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2c6:	ds push 0x17
  40c2c9:	push   ss
  40c2ca:	mov    DWORD PTR [edi-0x352cfe52],ecx
  40c2d0:	mov    ds:0xe3310511,eax
  40c2d5:	pop    ss
  40c2d6:	mov    al,0x44
  40c2d8:	fwait
  40c2d9:	arpl   WORD PTR [eax],di
  40c2db:	pop    edi
  40c2dc:	inc    eax
  40c2dd:	mov    cl,0x69
  40c2df:	mov    dh,0x4b
  40c2e1:	pop    ss
  40c2e2:	(bad)  
  40c2e3:	jno    0x40c316
  40c2e5:	xchg   esi,eax
  40c2e6:	in     eax,dx
  40c2e7:	jb     0x40c2ce
  40c2e9:	loopne 0x40c34d
  40c2eb:	ret    0xbbb6
  40c2ee:	push   esi
  40c2ef:	inc    edi
  40c2f0:	(bad)  
  40c2f1:	outs   dx,BYTE PTR ds:[esi]
  40c2f2:	mov    es,WORD PTR [ecx+0x3c982b93]
  40c2f8:	inc    esp
  40c2f9:	cwde   
  40c2fa:	xor    eax,DWORD PTR [ebx-0x42]
  40c2fd:	dec    edi
  40c2fe:	pop    edx
  40c2ff:	shl    BYTE PTR [edi],cl
  40c301:	mov    edx,0xcbc6f481
  40c306:	nop
  40c307:	hlt    
  40c308:	pop    es
  40c309:	ja     0x40c30b
  40c30b:	jp     0x40c36d
  40c30d:	ret    
  40c30e:	nop
  40c30f:	mov    esi,0x6fb20510
  40c314:	mov    edx,0x23fb134
  40c319:	shl    DWORD PTR [eax],cl
  40c31b:	add    BYTE PTR [ecx+ecx*1],ah
  40c31e:	lods   eax,DWORD PTR ds:[esi]
  40c31f:	push   0xffffffde
  40c321:	out    dx,eax
  40c322:	mov    edi,0xb2761f89
  40c327:	inc    esp
  40c328:	test   DWORD PTR [edx-0x3ebd5b5e],ecx
  40c32e:	xchg   ebp,eax
  40c32f:	or     DWORD PTR [ebx+esi*4-0x69341524],edi
  40c336:	or     DWORD PTR [edx+0x2b],ebp
  40c339:	aaa    
  40c33a:	adc    BYTE PTR [esi+edx*4],ch
  40c33d:	adc    ecx,DWORD PTR fs:[edx+0x57]
  40c341:	or     ch,BYTE PTR [eax-0x8]
  40c344:	std    
  40c345:	test   DWORD PTR [ebx],ecx
  40c347:	(bad)  
  40c348:	ins    BYTE PTR es:[edi],dx
  40c349:	sbb    al,0xc4
  40c34b:	call   0xc172:0x9d50584e
  40c352:	and    eax,ebx
  40c354:	push   edx
  40c355:	pusha  
  40c356:	cld    
  40c357:	aad    0x8
  40c359:	lock pop ebp
  40c35b:	mov    bh,0x3e
  40c35d:	pop    edx
  40c35e:	xchg   edi,eax
  40c35f:	xchg   edx,eax
  40c360:	test   DWORD PTR [ebx-0x2d6a3f5d],edi
  40c366:	add    BYTE PTR ds:0x62064952,al
  40c36c:	xlat   BYTE PTR ds:[ebx]
  40c36d:	(bad)  
  40c36f:	dec    edx
  40c370:	pop    esi
  40c371:	mov    bh,0x7d
  40c373:	push   ebp
  40c374:	out    0xab,al
  40c376:	cld    
  40c377:	mov    ds:0x883d4e9e,al
  40c37c:	in     eax,0xf5
  40c37e:	lea    ebx,[edi-0x7a]
  40c381:	loope  0x40c3a8
  40c383:	dec    edx
  40c384:	repz push 0x63
  40c387:	inc    eax
  40c388:	xchg   esp,eax
  40c389:	xor    DWORD PTR [esi+ebp*8+0x6c],ebx
  40c38d:	jge    0x40c340
  40c38f:	xchg   ebp,eax
  40c390:	data16 daa 
  40c392:	add    eax,0x9aafc650
  40c397:	inc    ecx
  40c398:	lods   al,BYTE PTR ds:[esi]
  40c399:	retf   0x635e
  40c39c:	repz rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c39f:	and    eax,0xfe49630d
  40c3a4:	mov    bh,0x22
  40c3a6:	add    ch,BYTE PTR ds:0xe5a30970
  40c3ac:	loope  0x40c35f
  40c3ae:	pop    ds
  40c3af:	sbb    BYTE PTR cs:[ebp-0x43565e36],cl
  40c3b6:	sub    BYTE PTR [edx-0x46],dh
  40c3b9:	add    ch,al
  40c3bb:	loope  0x40c396
  40c3bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3be:	aas    
  40c3bf:	idiv   BYTE PTR [esi+0x2c9e878]
  40c3c5:	sub    BYTE PTR [edi-0x15],ch
  40c3c8:	out    0xce,eax
  40c3ca:	test   DWORD PTR [edi],ebp
  40c3cc:	out    0x38,al
  40c3ce:	inc    eax
  40c3cf:	clc    
  40c3d0:	push   esp
  40c3d1:	(bad)  
  40c3d2:	jg     0x40c434
  40c3d4:	test   BYTE PTR [ebp+ecx*1-0x1bdad3b4],ah
  40c3db:	popa   
  40c3dc:	stc    
  40c3dd:	xor    edi,DWORD PTR [ecx-0x3f]
  40c3e0:	mov    ds:0xf00a073c,al
  40c3e5:	adc    bl,ah
  40c3e7:	repz mov esp,0x32f6e535
  40c3ed:	xor    BYTE PTR [ebp+0x542343db],bl
  40c3f3:	dec    ebp
  40c3f4:	mov    DWORD PTR [ebx-0x666b08f4],esp
  40c3fa:	sbb    BYTE PTR [ecx+0x75a4a298],0x40
  40c401:	call   0xafd31ba8
  40c406:	test   BYTE PTR [edi-0x64],al
  40c409:	outs   dx,DWORD PTR ds:[esi]
  40c40a:	leave  
  40c40b:	mov    ds:0x43122bf0,eax
  40c410:	inc    ecx
  40c411:	ss push ss
  40c413:	je     0x40c3c8
  40c415:	loope  0x40c461
  40c417:	jbe    0x40c47c
  40c419:	dec    ecx
  40c41a:	(bad)  
  40c41c:	ficomp WORD PTR [edi+ebx*8]
  40c41f:	test   al,0xb4
  40c421:	and    bl,BYTE PTR [edx-0x4c]
  40c424:	out    dx,al
  40c425:	and    al,0x78
  40c427:	push   ss
  40c428:	out    dx,al
  40c429:	jb     0x40c3c3
  40c42b:	mov    edi,0xe45f6998
  40c430:	jmp    0x40c430
  40c432:	or     al,0x62
  40c434:	cmp    BYTE PTR [edi+0x43],bl
  40c437:	inc    esp
  40c438:	loop   0x40c3e3
  40c43a:	shr    BYTE PTR [eax+0x70],cl
  40c43d:	sahf   
  40c43e:	mov    ebx,DWORD PTR cs:[ecx-0x5d]
  40c442:	(bad)  
  40c443:	mov    esi,0x2b7c157e
  40c448:	les    ebp,FWORD PTR es:[ebp+edx*2+0x3afc7d80]
  40c450:	std    
  40c451:	or     DWORD PTR [esi],edx
  40c453:	ror    BYTE PTR [edx],1
  40c455:	pop    ebx
  40c456:	shl    DWORD PTR [ecx],0x55
  40c459:	dec    ebp
  40c45a:	mov    ds:0x8f026db8,eax
  40c45f:	addr16 ds or al,0xa5
  40c463:	in     eax,0x12
  40c465:	mov    bh,0x7c
  40c467:	push   ebp
  40c468:	test   DWORD PTR [esp+eiz*8-0x7a],ebp
  40c46c:	stos   DWORD PTR es:[edi],eax
  40c46d:	add    al,0xf4
  40c46f:	shl    BYTE PTR [esi+0x5f],1
  40c472:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c473:	jmp    0xaf10:0xe43bf48a
  40c47a:	jmp    0x40c495
  40c47c:	nop
  40c47d:	test   DWORD PTR [edx+0x38],0x16a03466
  40c484:	push   cs
  40c485:	mov    dh,0xda
  40c487:	jmp    0x40c43b
  40c489:	sub    esi,esp
  40c48b:	dec    ebp
  40c48c:	add    bl,bl
  40c48e:	rol    DWORD PTR [esi-0x5e],cl
  40c491:	ds push edi
  40c493:	into   
  40c494:	ror    BYTE PTR [eax+ebp*2],1
  40c497:	and    BYTE PTR [ebx+0x11d5a5b3],0x88
  40c49e:	scas   eax,DWORD PTR es:[edi]
  40c49f:	pop    ebp
  40c4a0:	mov    edx,0x6a0a1e33
  40c4a5:	stos   DWORD PTR es:[edi],eax
  40c4a6:	(bad)  
  40c4a7:	push   ss
  40c4a8:	call   0x853d6cae
  40c4ad:	add    al,0x16
  40c4af:	mov    esp,cs
  40c4b1:	adc    edi,esi
  40c4b3:	aaa    
  40c4b4:	cmc    
  40c4b5:	(bad)  
  40c4b6:	(bad)  
  40c4b7:	and    eax,0xbe77a644
  40c4bc:	rcl    BYTE PTR [edx+0x1981019d],1
  40c4c2:	into   
  40c4c3:	mov    ds:0x82cd1879,al
  40c4c8:	push   ss
  40c4c9:	jnp    0x40c50d
  40c4cb:	push   cs
  40c4cc:	fcom   DWORD PTR [eax-0x53]
  40c4cf:	and    al,0xed
  40c4d1:	add    BYTE PTR [ebp-0x48cc13d],cl
  40c4d7:	mov    ah,BYTE PTR [eax-0x5913f6ee]
  40c4dd:	sub    ebp,edx
  40c4df:	xor    bl,BYTE PTR [edi+0x2c]
  40c4e2:	push   eax
  40c4e3:	fld    st(4)
  40c4e5:	mov    esi,0x521e430b
  40c4ea:	add    DWORD PTR [eax-0x77],edi
  40c4ed:	mov    cl,0x6c
  40c4ef:	dec    ebx
  40c4f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4f1:	xlat   BYTE PTR ds:[ebx]
  40c4f2:	popa   
  40c4f3:	movups xmm1,xmm1
  40c4f6:	push   0x43e75918
  40c4fb:	shr    DWORD PTR [edx+0x71],0x3f
  40c4ff:	and    DWORD PTR [edi-0x2f507995],edi
  40c505:	xchg   ebx,eax
  40c506:	aad    0xd8
  40c508:	xor    al,0x6c
  40c50a:	xchg   edi,eax
  40c50b:	sub    DWORD PTR [esi+0x65],edi
  40c50e:	outs   dx,BYTE PTR ds:[esi]
  40c50f:	or     DWORD PTR [ecx],esp
  40c511:	add    BYTE PTR [edx+0x6c],ah
  40c514:	out    dx,eax
  40c515:	xor    esp,ebx
  40c517:	nop
  40c518:	sar    BYTE PTR [edx-0x7979be95],1
  40c51e:	mov    cl,0xe5
  40c520:	push   edi
  40c521:	mov    edi,0xd3527f05
  40c526:	mov    al,0x6f
  40c528:	or     BYTE PTR [ebp-0x16],dh
  40c52b:	mov    edi,0xa2c05cec
  40c530:	outs   dx,BYTE PTR ds:[esi]
  40c531:	inc    esi
  40c532:	pop    es
  40c533:	lods   eax,DWORD PTR ds:[esi]
  40c534:	pop    esi
  40c535:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c536:	inc    ebx
  40c537:	imul   ebx,edi,0xffffffbd
  40c53a:	mov    edx,0xaa494372
  40c53f:	mov    ds:0xa68aaf1c,eax
  40c544:	int3   
  40c545:	into   
  40c546:	(bad)  
  40c547:	out    0xf4,al
  40c549:	je     0x40c4cb
  40c54b:	xlat   BYTE PTR ds:[ebx]
  40c54c:	jne    0x40c59d
  40c54e:	dec    eax
  40c54f:	ins    DWORD PTR es:[edi],dx
  40c550:	push   es
  40c551:	mov    bl,0x4a
  40c553:	adc    BYTE PTR [edx+0x3a],cl
  40c556:	push   ebp
  40c557:	sub    al,0xc6
  40c559:	jmp    0x40c5d2
  40c55b:	bound  ecx,QWORD PTR [ecx+0x12f2b7c5]
  40c561:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c562:	xchg   BYTE PTR [ecx-0x2bbfa657],ah
  40c568:	adc    al,0x2f
  40c56a:	pop    edx
  40c56b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c56c:	pop    ebp
  40c56d:	mov    eax,ds:0x28f703ed
  40c572:	adc    ebx,DWORD PTR [esi-0x7af23b7c]
  40c578:	lea    ebp,[ebx]
  40c57a:	call   0xdf19ed21
  40c57f:	sub    DWORD PTR [ebx+0x7e],eax
  40c582:	mov    BYTE PTR [edx],dh
  40c584:	loopne 0x40c54a
  40c586:	inc    esp
  40c587:	add    al,0x23
  40c589:	das    
  40c58a:	ret    
  40c58b:	xor    ah,BYTE PTR [ecx-0x30ebcee7]
  40c591:	retf   0x9435
  40c594:	xchg   edx,eax
  40c595:	js     0x40c5e7
  40c597:	in     al,dx
  40c598:	inc    ebx
  40c599:	push   esi
  40c59a:	mov    esp,0x934a8956
  40c59f:	and    bh,BYTE PTR [edi-0xc342c8e]
  40c5a5:	cwde   
  40c5a6:	ins    DWORD PTR es:[edi],dx
  40c5a7:	cmp    ah,BYTE PTR [eax+0x38]
  40c5aa:	aas    
  40c5ab:	cli    
  40c5ac:	add    ebx,esp
  40c5ae:	int3   
  40c5af:	aad    0x32
  40c5b1:	fld    TBYTE PTR [ebx]
  40c5b3:	add    DWORD PTR [edi+0x7275c697],0xef016d1c
  40c5bd:	add    BYTE PTR [esi+0x79],dl
  40c5c0:	sub    BYTE PTR [eax-0x21],ch
  40c5c3:	int3   
  40c5c4:	cli    
  40c5c5:	fistp  DWORD PTR [ecx+0x7b]
  40c5c8:	arpl   WORD PTR [edx+eiz*2-0x35a2336e],bp
  40c5cf:	sbb    al,BYTE PTR [edi-0x5c274706]
  40c5d5:	sub    ecx,DWORD PTR [edi+0x19]
  40c5d8:	movd   DWORD PTR [ecx],mm6
  40c5db:	out    0xe3,al
  40c5dd:	xor    DWORD PTR [ebp-0x2446c9a3],ebx
  40c5e3:	repz sbb eax,0x2c8fed4d
  40c5e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5ea:	call   0xc9a3:0x423ddded
  40c5f1:	mov    al,0x43
  40c5f3:	and    DWORD PTR [esi-0x2cae09db],edi
  40c5f9:	pop    esp
  40c5fa:	adc    dh,BYTE PTR [edi]
  40c5fc:	outs   dx,DWORD PTR ds:[esi]
  40c5fd:	adc    ecx,DWORD PTR [edx]
  40c5ff:	loope  0x40c66c
  40c601:	mov    esi,0x3dc7921a
  40c606:	call   0x19f817e3
  40c60b:	or     dh,BYTE PTR [ebx]
  40c60d:	out    0x78,al
  40c60f:	cdq    
  40c610:	into   
  40c611:	aad    0xb5
  40c613:	mov    eax,DWORD PTR cs:[eax]
  40c616:	ror    BYTE PTR [esi+edx*2],0x80
  40c61a:	retf   0xbc43
  40c61d:	or     esi,DWORD PTR [edi-0x310f7096]
  40c623:	in     al,dx
  40c624:	jb     0x40c5f4
  40c626:	vmwrite edx,DWORD PTR [ebp-0x42]
  40c62a:	enter  0x34f,0x34
  40c62e:	pop    DWORD PTR [ebp+0x20]
  40c631:	pop    es
  40c632:	sahf   
  40c633:	jne    0x40c5be
  40c635:	sbb    edx,DWORD PTR [ebx-0x48]
  40c638:	(bad)  
  40c639:	dec    ecx
  40c63a:	push   0xb8e4c831
  40c63f:	mov    bh,dl
  40c641:	jne    0x40c65a
  40c643:	test   eax,0x6290a856
  40c648:	pop    esp
  40c649:	jecxz  0x40c6b6
  40c64b:	lea    esp,[ebp+edx*2-0x4f]
  40c64f:	call   0x9625:0xdf7929f6
  40c656:	js     0x40c6cb
  40c658:	jns    0x40c69a
  40c65a:	pop    es
  40c65b:	aas    
  40c65c:	mov    dh,0x31
  40c65e:	sub    esp,DWORD PTR [edx+0x3baf32eb]
  40c664:	inc    edx
  40c665:	fdiv   st,st(5)
  40c667:	(bad)  
  40c669:	clc    
  40c66a:	pop    esi
  40c66b:	jmp    0xb1aa:0x623f1ca8
  40c672:	in     al,dx
  40c673:	push   eax
  40c674:	ja     0x40c604
  40c676:	mov    bh,0x50
  40c678:	mov    ah,0x19
  40c67a:	mov    DWORD PTR [ecx-0x5c22bfc5],ebp
  40c680:	dec    ecx
  40c681:	pop    ss
  40c682:	pop    es
  40c683:	div    BYTE PTR [edx+0x39]
  40c686:	sub    ecx,DWORD PTR [esi+0x39b6fc97]
  40c68c:	out    dx,eax
  40c68d:	or     BYTE PTR [esi+0x6ab8f226],al
  40c693:	scas   al,BYTE PTR es:[edi]
  40c694:	pusha  
  40c695:	jg     0x40c714
  40c697:	data16 int 0x0
  40c69a:	ret    
  40c69b:	jnp    0x40c65d
  40c69d:	das    
  40c69e:	lahf   
  40c69f:	(bad)  
  40c6a0:	js     0x40c6b2
  40c6a2:	(bad)  
  40c6a4:	sub    BYTE PTR [edi],0x17
  40c6a7:	lods   al,BYTE PTR cs:[esi]
  40c6a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6aa:	(bad)  
  40c6ab:	mov    dl,0x6b
  40c6ad:	inc    eax
  40c6ae:	ficomp WORD PTR [edi+0x7e14b9]
  40c6b4:	or     DWORD PTR [esi+0x21cd6056],0xfce2010d
  40c6be:	jmp    0x40c6b9
  40c6c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6c1:	stos   DWORD PTR es:[edi],eax
  40c6c2:	dec    edx
  40c6c3:	into   
  40c6c4:	shl    cl,1
  40c6c6:	mov    al,ds:0x5ec44124
  40c6cb:	imul   edx,DWORD PTR [esi+esi*2+0x23],0xfffffff3
  40c6d0:	sub    eax,0xdb8a754b
  40c6d5:	mov    esp,0x3671f981
  40c6da:	xchg   esp,eax
  40c6db:	jmp    0x45687cca
  40c6e0:	xchg   DWORD PTR [edi+0xf],ebx
  40c6e3:	xchg   ebp,eax
  40c6e4:	ret    0xe756
  40c6e7:	push   eax
  40c6e8:	xchg   ebx,eax
  40c6e9:	fimul  DWORD PTR [edi-0x1fe411df]
  40c6ef:	fld    QWORD PTR ds:0x27fc4f29
  40c6f5:	loopne 0x40c76c
  40c6f7:	sahf   
  40c6f8:	fnsetpm(287 only) 
  40c6fa:	rcr    BYTE PTR [eax+0x2c],0x7c
  40c6fe:	or     al,0xa7
  40c700:	xchg   ecx,eax
  40c701:	add    BYTE PTR [ebp-0x6227c364],ch
  40c707:	int    0xe7
  40c709:	jbe    0x40c71a
  40c70b:	sbb    al,ah
  40c70d:	inc    esi
  40c70e:	xchg   edi,eax
  40c70f:	inc    eax
  40c710:	or     al,0xcf
  40c712:	and    eax,0xda328a12
  40c717:	cmp    DWORD PTR [eiz*4+0x5c7c48fa],ebx
  40c71e:	sub    BYTE PTR [edi+0x63],cl
  40c721:	hlt    
  40c722:	adc    ah,BYTE PTR ss:[ebx]
  40c725:	or     al,0xc8
  40c727:	and    eax,0x6b5ccaf
  40c72c:	imul   edi
  40c72e:	pop    ds
  40c72f:	push   edx
  40c730:	mov    dx,0x205e
  40c734:	ja     0x40c71e
  40c736:	xchg   ebp,eax
  40c737:	lock xor ebx,DWORD PTR fs:[edi]
  40c73b:	sbb    eax,0xfb16031b
  40c740:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c741:	push   esp
  40c742:	call   0x84a7f44a
  40c747:	(bad)  
  40c748:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c749:	jns    0x40c6f2
  40c74b:	into   
  40c74c:	adc    cl,BYTE PTR [eax]
  40c74e:	push   0xffffff8e
  40c750:	daa    
  40c751:	inc    eax
  40c752:	int3   
  40c753:	neg    BYTE PTR [ebx+0x2be13e03]
  40c759:	div    eax
  40c75b:	inc    ecx
  40c75c:	adc    bh,dl
  40c75e:	imul   esi,DWORD PTR [edi+0x474dee1c],0x9cb7f3b3
  40c768:	inc    ebp
  40c769:	sbb    al,0x5e
  40c76b:	mov    BYTE PTR [eax-0x66671777],al
  40c771:	xchg   esp,eax
  40c772:	imul   edi,DWORD PTR ds:0xed3ee605,0x4e
  40c779:	sahf   
  40c77a:	out    dx,al
  40c77b:	jle    0x40c737
  40c77d:	or     dl,ch
  40c77f:	sti    
  40c780:	jne    0x40c77c
  40c782:	inc    ebx
  40c783:	out    0xf1,eax
  40c785:	dec    edi
  40c786:	ror    DWORD PTR [esp+ecx*2-0x45],0x17
  40c78b:	push   ebx
  40c78c:	mov    ecx,edi
  40c78e:	mov    ebx,ss
  40c790:	in     eax,0x97
  40c792:	jecxz  0x40c812
  40c794:	cmp    al,0xc9
  40c796:	xor    al,0x2f
  40c798:	retf   
  40c799:	jl     0x40c71d
  40c79b:	or     DWORD PTR [ebp+0x7010e4f7],esi
  40c7a1:	out    dx,al
  40c7a2:	sbb    edi,ebp
  40c7a4:	push   esp
  40c7a5:	cld    
  40c7a6:	xchg   ebp,eax
  40c7a7:	lock out 0xf9,eax
  40c7aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7ab:	push   ecx
  40c7ac:	dec    edi
  40c7ad:	mov    ah,0xf4
  40c7af:	or     al,0x83
  40c7b1:	(bad)  
  40c7b2:	(bad)  
  40c7b3:	sub    ebp,DWORD PTR [esi-0x7477320d]
  40c7b9:	cs in  eax,0x4b
  40c7bc:	les    eax,FWORD PTR [edi]
  40c7be:	jnp    0x40c780
  40c7c0:	addr16 aas 
  40c7c2:	aaa    
  40c7c3:	push   ebx
  40c7c4:	sbb    edx,DWORD PTR [edi]
  40c7c6:	xor    al,0xdf
  40c7c8:	sub    DWORD PTR ss:[ecx-0x4634b2d3],esp
  40c7cf:	lock shl DWORD PTR [eax-0xfbe11ac],cl
  40c7d6:	push   es
  40c7d7:	and    esi,ecx
  40c7d9:	mov    DWORD PTR [ecx+ecx*2-0x7f],esi
  40c7dd:	repnz push eax
  40c7df:	jecxz  0x40c81a
  40c7e1:	jno    0x40c85a
  40c7e3:	jmp    0x897cd63c
  40c7e8:	mov    al,0x79
  40c7ea:	jmp    0x45b0a7e3
  40c7ef:	add    BYTE PTR [ebx+0x4c681cb2],0x81
  40c7f6:	xchg   ebx,eax
  40c7f7:	mov    eax,ds:0x637df186
  40c7fc:	fwait
  40c7fd:	xchg   ebx,eax
  40c7fe:	dec    ebx
  40c7ff:	or     esi,DWORD PTR [edx+0x38]
  40c802:	jae    0x40c857
  40c804:	jle    0x40c7e0
  40c806:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c807:	and    eax,0x1ff9bb1
  40c80c:	xchg   edx,eax
  40c80d:	sahf   
  40c80e:	(bad)  
  40c80f:	retf   
  40c810:	(bad)  
  40c811:	(bad)  
  40c812:	das    
  40c813:	add    DWORD PTR [edx],0x30
  40c816:	and    dl,dl
  40c818:	mov    es:0x1fa1eba0,eax
  40c81e:	adc    bl,BYTE PTR [ecx+0x3344175b]
  40c824:	arpl   WORD PTR ds:0xd9206f9a,bp
  40c82a:	fcom   QWORD PTR [edx]
  40c82c:	lahf   
  40c82d:	add    esi,edx
  40c82f:	pop    edi
  40c830:	sbb    ch,BYTE PTR [eax+0x34]
  40c833:	cwde   
  40c834:	(bad)  
  40c836:	mov    dh,0x99
  40c838:	dec    edx
  40c839:	test   eax,0xb562989e
  40c83e:	jp     0x40c7c3
  40c840:	stc    
  40c841:	add    ch,BYTE PTR [eax-0x56]
  40c844:	mov    cl,0x4c
  40c846:	lods   eax,DWORD PTR ds:[esi]
  40c847:	adc    al,BYTE PTR [edx+0x1f]
  40c84a:	fucomp st(4)
  40c84c:	daa    
  40c84d:	repz mov bl,0x81
  40c850:	mov    ch,0x0
  40c852:	xchg   esp,ebx
  40c854:	mov    bh,0x3d
  40c856:	push   eax
  40c857:	int3   
  40c858:	aam    0x75
  40c85a:	bound  edi,QWORD PTR [edx-0x4e]
  40c85d:	nop
  40c85e:	jg     0x40c859
  40c860:	in     eax,0x60
  40c862:	push   DWORD PTR [ebx-0x1939a5a8]
  40c868:	popa   
  40c869:	mov    cl,0xd8
  40c86b:	sub    DWORD PTR [edi+0x2dfc7e25],esi
  40c871:	pop    eax
  40c872:	loopne 0x40c851
  40c874:	shl    BYTE PTR [ecx],0x41
  40c877:	add    eax,0x78600e0f
  40c87c:	cmp    eax,0x3c2cc47c
  40c881:	jns    0x40c81d
  40c883:	xchg   ecx,eax
  40c884:	add    edi,DWORD PTR [esi-0x7d]
  40c887:	sbb    BYTE PTR [edx+0x75b7c913],dl
  40c88d:	inc    ebx
  40c88e:	mov    ds:0x2a5be095,eax
  40c893:	cmp    dl,BYTE PTR [esp+ecx*1+0x10f1fde2]
  40c89a:	jne    0x40c89d
  40c89c:	mov    edx,DWORD PTR [ebx+eax*4-0x2cf08b32]
  40c8a3:	sub    edx,DWORD PTR [eax]
  40c8a5:	idiv   BYTE PTR [eax+0x79]
  40c8a8:	dec    edx
  40c8a9:	fstp   DWORD PTR [eax+0x30]
  40c8ac:	ret    
  40c8ad:	sub    cl,0x3d
  40c8b0:	in     al,dx
  40c8b1:	sbb    eax,0x60e2fd2
  40c8b6:	scas   al,BYTE PTR es:[edi]
  40c8b7:	add    al,BYTE PTR [eax]
  40c8b9:	outs   dx,BYTE PTR ds:[esi]
  40c8ba:	fisttp WORD PTR [eax-0x7e]
  40c8bd:	lock sbb al,dl
  40c8c0:	pop    esp
  40c8c1:	(bad)  
  40c8c2:	xor    BYTE PTR [edi+0x6758df76],cl
  40c8c8:	mov    DWORD PTR [eax],edx
  40c8ca:	sbb    eax,0xe263056c
  40c8cf:	xchg   esi,eax
  40c8d0:	jmp    0xc247:0x36408ff
  40c8d7:	ins    BYTE PTR es:[edi],dx
  40c8d8:	or     al,0xe8
  40c8da:	sub    BYTE PTR [esi-0x72],ah
  40c8dd:	outs   dx,DWORD PTR ds:[esi]
  40c8de:	dec    edx
  40c8df:	push   esp
  40c8e0:	mov    edi,0x68046155
  40c8e5:	adc    bl,BYTE PTR [edi+0x53]
  40c8e8:	xchg   DWORD PTR [edi+ebp*4],ebp
  40c8eb:	test   BYTE PTR ds:0xef6643a6,ch
  40c8f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8f2:	inc    ebx
  40c8f3:	add    dh,0x2d
  40c8f6:	dec    edx
  40c8f7:	xchg   edi,eax
  40c8f8:	push   ecx
  40c8f9:	jnp    0x40c8cd
  40c8fb:	sar    DWORD PTR [esi-0x49],1
  40c8fe:	int3   
  40c8ff:	out    dx,eax
  40c900:	out    dx,eax
  40c901:	jns    0x40c981
  40c903:	push   ebx
  40c904:	pop    ebp
  40c905:	xchg   DWORD PTR [ecx-0x3e474038],ecx
  40c90b:	loopne 0x40c93f
  40c90d:	cs pop ss
  40c90f:	in     al,0xbd
  40c911:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c912:	aaa    
  40c913:	mov    ds:0x86f19d82,eax
  40c918:	cwde   
  40c919:	shl    BYTE PTR [ecx+0x32],1
  40c91c:	ins    BYTE PTR es:[edi],dx
  40c91d:	xchg   esi,eax
  40c91e:	fs push edi
  40c920:	ret    0x3823
  40c923:	js     0x40c90c
  40c925:	pop    ecx
  40c926:	sub    eax,0x1a7c04e0
  40c92b:	mov    dh,0xd1
  40c92d:	cwde   
  40c92e:	div    DWORD PTR [edi+ebp*8+0x51]
  40c932:	ds gs inc ebx
  40c935:	repnz or esi,DWORD PTR ds:0x9ab6c1b
  40c93c:	rcl    BYTE PTR [esi],cl
  40c93e:	cld    
  40c93f:	in     al,0x41
  40c941:	enter  0x48ec,0x66
  40c945:	popf   
  40c946:	xor    DWORD PTR [edx+0x5318684d],esp
  40c94c:	push   eax
  40c94d:	sbb    al,0xe9
  40c94f:	xchg   esp,eax
  40c950:	ds dec edi
  40c952:	xchg   DWORD PTR [eax+0xf0e2634],esi
  40c958:	xchg   ebp,eax
  40c959:	xor    ch,BYTE PTR [ecx+0x5557ca0d]
  40c95f:	stc    
  40c960:	and    dl,al
  40c962:	cli    
  40c963:	in     eax,0xfa
  40c965:	add    bl,BYTE PTR [ebx-0x721bdec]
  40c96b:	test   DWORD PTR [eax+eax*1-0x186b288],0x1de0f188
  40c976:	sbb    DWORD PTR [edx],ebp
  40c978:	jae    0x40c958
  40c97a:	mov    ss,WORD PTR [eax]
  40c97c:	test   eax,0x8e0f45dc
  40c981:	aad    0x58
  40c983:	arpl   WORD PTR [esi],sp
  40c985:	mov    ds:0x1a3199dd,al
  40c98a:	xchg   DWORD PTR [eax+0x70],ebp
  40c98d:	jp     0x40c92f
  40c98f:	cmp    al,0x2b
  40c991:	cmp    bl,ah
  40c993:	and    ch,BYTE PTR [edx]
  40c995:	jae    0x40c9a2
  40c997:	cmc    
  40c998:	test   edi,ebp
  40c99a:	ja     0x40c94a
  40c99c:	pop    edx
  40c99d:	jge    0x40c962
  40c99f:	(bad)  
  40c9a0:	clc    
  40c9a1:	pop    esp
  40c9a2:	loope  0x40ca1f
  40c9a4:	imul   ebx,ebx,0xffffff89
  40c9a7:	xor    edi,DWORD PTR [eiz*8+0x5bcc38be]
  40c9ae:	lods   al,BYTE PTR ds:[esi]
  40c9af:	fucom  st(5)
  40c9b1:	and    BYTE PTR [ebx],0x93
  40c9b4:	inc    edx
  40c9b5:	ins    DWORD PTR es:[edi],dx
  40c9b6:	dec    edi
  40c9b7:	rcr    BYTE PTR [edx+0xdff8199],0x35
  40c9be:	test   DWORD PTR [eax-0x7dfc9d7a],0x8db1d68f
  40c9c8:	xchg   dl,bl
  40c9ca:	sbb    eax,DWORD PTR [edx+0x559cff4]
  40c9d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9d1:	dec    edi
  40c9d2:	add    ah,BYTE PTR [ebp+0x74]
  40c9d5:	data16 into 
  40c9d7:	jns    0x40c9c4
  40c9d9:	xchg   esp,eax
  40c9da:	imul   ebp,DWORD PTR [eax],0x574be8b3
  40c9e0:	jl     0x40c97a
  40c9e2:	scas   al,BYTE PTR es:[edi]
  40c9e3:	(bad)  
  40c9e4:	xlat   BYTE PTR ds:[ebx]
  40c9e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9e6:	repnz in eax,0x5
  40c9e9:	jbe    0x40c96f
  40c9eb:	and    esi,ebp
  40c9ed:	das    
  40c9ee:	(bad)  [edx]
  40c9f0:	mov    esi,0xe1221e18
  40c9f5:	lods   al,BYTE PTR ds:[esi]
  40c9f6:	adc    al,ch
  40c9f8:	pop    es
  40c9f9:	loopne 0x40c9b4
  40c9fb:	mov    ebx,0x6c6bab52
  40ca00:	mov    cl,0xd1
  40ca02:	and    BYTE PTR [edi+0xe9cc05f],bh
  40ca08:	pop    ebx
  40ca09:	inc    edi
  40ca0a:	jbe    0x40ca40
  40ca0c:	(bad)  
  40ca0d:	or     al,0xa6
  40ca0f:	je     0x40c99e
  40ca11:	xchg   ecx,eax
  40ca12:	or     edx,DWORD PTR [ebx]
  40ca14:	mov    DWORD PTR [esi-0x62],ebp
  40ca17:	gs jb  0x40c9ed
  40ca1a:	loop   0x40ca3d
  40ca1c:	mov    eax,0x5518e714
  40ca21:	mov    bl,0xb9
  40ca23:	push   ebp
  40ca24:	inc    esi
  40ca25:	jne    0x40c9ff
  40ca27:	push   cs
  40ca28:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40ca2a:	clc    
  40ca2b:	and    dl,BYTE PTR [ecx+eax*4+0x61]
  40ca2f:	adc    al,al
  40ca31:	fdivr  DWORD PTR [ecx]
  40ca33:	enter  0xd7fa,0x68
  40ca37:	mov    dh,0x1d
  40ca39:	or     BYTE PTR [eax+0x27bec43c],cl
  40ca3f:	jmp    0x40ca9e
  40ca41:	mov    eax,ds:0xf4674cdc
  40ca46:	aas    
  40ca47:	sbb    BYTE PTR [esi],al
  40ca49:	adc    eax,DWORD PTR [edx]
  40ca4b:	push   edx
  40ca4c:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40ca4e:	jg     0x40ca50
  40ca50:	push   ss
  40ca51:	scas   al,BYTE PTR es:[edi]
  40ca52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca53:	push   ebx
  40ca54:	shl    BYTE PTR [ebp+eax*8-0x3b],cl
  40ca58:	push   ds
  40ca59:	fild   QWORD PTR [edx]
  40ca5b:	out    0x73,al
  40ca5d:	data16 mov al,ds:0x6c923760
  40ca63:	push   esi
  40ca64:	aad    0x4b
  40ca66:	ss mov cx,0x8425
  40ca6b:	dec    ebp
  40ca6c:	mov    dl,0x4d
  40ca6e:	jno    0x40ca1d
  40ca70:	rcl    bh,cl
  40ca72:	cdq    
  40ca73:	ds or  eax,0x6a7c48f4
  40ca79:	icebp  
  40ca7a:	popf   
  40ca7b:	mov    ecx,0xa723802d
  40ca80:	cmp    esi,DWORD PTR [eax-0x3e]
  40ca83:	push   ebp
  40ca84:	mov    cl,0x60
  40ca86:	cmp    al,0x27
  40ca88:	jb     0x40caa2
  40ca8a:	cmp    al,0xa2
  40ca8c:	rcr    BYTE PTR [eax+0x3b655ca5],0xe6
  40ca93:	sbb    al,0xfe
  40ca95:	(bad)  [ebx]
  40ca97:	stos   BYTE PTR es:[edi],al
  40ca98:	ret    
  40ca99:	add    dl,ch
  40ca9b:	adc    DWORD PTR [eax-0x32],0x2b
  40ca9f:	jmp    0xce7a:0xd2d17e82
  40caa6:	xchg   edi,eax
  40caa7:	arpl   WORD PTR [edi-0x6a257ea2],ax
  40caad:	mov    esi,0x458b1801
  40cab2:	cld    
  40cab3:	mov    edi,DWORD PTR [ebp-0x8]
  40cab6:	add    edi,DWORD PTR [eax]
  40cab8:	mov    DWORD PTR [ebp-0x8],edi
  40cabb:	mov    eax,DWORD PTR [ebp+0xc]
  40cabe:	mov    edi,DWORD PTR [ebp+0xc]
  40cac1:	xor    edi,ecx
  40cac3:	xor    eax,ecx
  40cac5:	lea    eax,[eax+edi*1+0x64e5ba]
  40cacc:	mov    edi,DWORD PTR [ebp+0xc]
  40cacf:	xor    edi,ecx
  40cad1:	add    edi,edx
  40cad3:	imul   eax,edi
  40cad6:	mov    edi,DWORD PTR [ebp+0xc]
  40cad9:	xor    edi,ecx
  40cadb:	sub    edi,eax
  40cadd:	mov    eax,DWORD PTR [ebp-0x4]
  40cae0:	add    edi,edx
  40cae2:	cmp    DWORD PTR [eax],edi
  40cae4:	mov    eax,DWORD PTR [ebp-0x4]
  40cae7:	mov    edi,DWORD PTR [ebp+0x10]
  40caea:	jg     0x40cafd
  40caf0:	xor    edi,ecx
  40caf2:	mov    ebx,esi
  40caf4:	sub    ebx,edi
  40caf6:	add    DWORD PTR [eax],ebx
  40caf8:	jmp    0x40cb03
  40cafd:	xor    edi,ecx
  40caff:	add    edi,edx
  40cb01:	add    DWORD PTR [eax],edi
  40cb03:	mov    eax,DWORD PTR [ebp-0x8]
  40cb06:	mov    edi,DWORD PTR [ebp-0x10]
  40cb09:	mov    eax,DWORD PTR [eax]
  40cb0b:	xor    edi,ecx
  40cb0d:	add    edi,0x3272dc
  40cb13:	not    edi
  40cb15:	and    eax,edi
  40cb17:	movsx  di,BYTE PTR [eax+0x1]
  40cb1c:	mov    ebx,0x3b4c
  40cb21:	sub    di,bx
  40cb24:	mov    ebx,0x8a89
  40cb29:	xor    di,bx
  40cb2c:	mov    ebx,0x4f87
  40cb31:	cmp    di,bx
  40cb34:	jne    0x40cb5c
  40cb3a:	movsx  di,BYTE PTR [eax]
  40cb3e:	mov    ebx,0x3b4c
  40cb43:	sub    di,bx
  40cb46:	mov    ebx,0x8a89
  40cb4b:	xor    di,bx
  40cb4e:	mov    ebx,0x4f88
  40cb53:	cmp    di,bx
  40cb56:	je     0x40cb6c
  40cb5c:	mov    edi,DWORD PTR [ebp-0x10]
  40cb5f:	xor    edi,ecx
  40cb61:	mov    ebx,esi
  40cb63:	sub    ebx,edi
  40cb65:	add    eax,ebx
  40cb67:	jmp    0x40cb17
  40cb6c:	mov    esi,DWORD PTR [ebp-0x14]
  40cb6f:	mov    esi,DWORD PTR [esi]
  40cb71:	mov    edi,DWORD PTR [eax+0x3c]
  40cb74:	lea    esi,[edi+esi*8+0x78]
  40cb78:	mov    esi,DWORD PTR [esi+eax*1]
  40cb7b:	mov    DWORD PTR [ebp-0x8],esi
  40cb7e:	mov    esi,DWORD PTR [ebp+0x8]
  40cb81:	xor    esi,ecx
  40cb83:	add    esi,edx
  40cb85:	mov    DWORD PTR [ebp-0x14],esi
  40cb88:	mov    esi,DWORD PTR [ebp+0x8]
  40cb8b:	mov    edi,DWORD PTR [ebp-0x8]
  40cb8e:	xor    esi,ecx
  40cb90:	add    esi,edx
  40cb92:	pop    ebx
  40cb93:	cmp    edi,esi
  40cb95:	jne    0x40cbb3
  40cb9b:	mov    eax,DWORD PTR [ebp+0xc]
  40cb9e:	xor    eax,ecx
  40cba0:	mov    ecx,DWORD PTR [ebp-0x8]
  40cba3:	add    eax,edx
  40cba5:	imul   eax,ecx
  40cba8:	mov    DWORD PTR [ebp-0x8],eax
  40cbab:	push   DWORD PTR [ebp+0x18]
  40cbae:	jmp    0x40cc07
  40cbb3:	mov    ecx,DWORD PTR [ebp-0x8]
  40cbb6:	add    ecx,eax
  40cbb8:	mov    DWORD PTR [ebp-0x14],ecx
  40cbbb:	mov    ecx,DWORD PTR [ebp-0x14]
  40cbbe:	mov    ecx,DWORD PTR [ecx+0xc]
  40cbc1:	movsx  cx,BYTE PTR [ecx+eax*1]
  40cbc6:	mov    edx,0x3b4c
  40cbcb:	sub    cx,dx
  40cbce:	mov    edx,0x8a89
  40cbd3:	xor    cx,dx
  40cbd6:	mov    edx,0x4e76
  40cbdb:	cmp    cx,dx
  40cbde:	jne    0x40cbab
  40cbe4:	mov    ecx,DWORD PTR ds:0x42e435
  40cbea:	mov    ecx,DWORD PTR [ecx+0x198]
  40cbf0:	mov    DWORD PTR [ecx],eax
  40cbf2:	jmp    0x40cc18
  40cbf7:	mov    ecx,DWORD PTR [ebp+0x18]
  40cbfa:	cmp    ecx,0xf89c85b2
  40cc00:	jne    0x40cc18
  40cc06:	push   eax
  40cc07:	push   DWORD PTR [ebp+0x14]
  40cc0a:	push   DWORD PTR [ebp+0x10]
  40cc0d:	push   DWORD PTR [ebp+0xc]
  40cc10:	push   DWORD PTR [ebp+0x8]
  40cc13:	call   0x40a327
  40cc18:	pop    edi
  40cc19:	pop    esi
  40cc1a:	leave  
  40cc1b:	ret    0x14
  40cc1e:	push   ebp
  40cc1f:	mov    ebp,esp
  40cc21:	push   ecx
  40cc22:	push   ecx
  40cc23:	add    DWORD PTR ds:0x42b010,edx
  40cc29:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  40cc30:	sub    DWORD PTR ds:0x429024,0x76a8
  40cc3a:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  40cc41:	and    DWORD PTR ds:0x42b018,edi
  40cc47:	mov    eax,DWORD PTR [ebp-0x4]
  40cc4a:	adc    DWORD PTR ds:0x429018,edx
  40cc50:	push   esi
  40cc51:	and    DWORD PTR ds:0x42a000,0x0
  40cc5b:	jmp    0x40cc6d
  40cc60:	mov    esi,DWORD PTR ds:0x42a000
  40cc66:	inc    esi
  40cc67:	mov    DWORD PTR ds:0x42a000,esi
  40cc6d:	cmp    DWORD PTR ds:0x42a000,0x1a
  40cc74:	jae    0x40cc98
  40cc7a:	cmp    DWORD PTR ds:0x42a000,0x26
  40cc81:	jne    0x40cc8d
  40cc87:	call   DWORD PTR ds:0x42ed51
  40cc8d:	jmp    0x40cc60
  40cc92:	sub    edx,0x54cb
  40cc98:	mov    esi,DWORD PTR [ebp-0x8]
  40cc9b:	and    DWORD PTR ds:0x429018,0x0
  40cca5:	jmp    0x40ccb7
  40ccaa:	mov    ecx,DWORD PTR ds:0x429018
  40ccb0:	inc    ecx
  40ccb1:	mov    DWORD PTR ds:0x429018,ecx
  40ccb7:	cmp    DWORD PTR ds:0x429018,0x1e
  40ccbe:	jae    0x40ccf6
  40ccc4:	cmp    DWORD PTR ds:0x429018,0x8
  40cccb:	jne    0x40ccd7
  40ccd1:	call   DWORD PTR ds:0x42ed55
  40ccd7:	cmp    DWORD PTR ds:0x429018,0x7
  40ccde:	jne    0x40ccf1
  40cce4:	mov    ecx,DWORD PTR ds:0x429018
  40ccea:	inc    ecx
  40cceb:	mov    DWORD PTR ds:0x429018,ecx
  40ccf1:	jmp    0x40ccaa
  40ccf6:	mov    edx,0x7510896
  40ccfb:	mov    ecx,DWORD PTR ds:0x42d00c
  40cd01:	sub    DWORD PTR ds:0x42a004,ecx
  40cd07:	xor    eax,edx
  40cd09:	xor    esi,edx
  40cd0b:	mov    DWORD PTR ds:0x42b00c,0x13
  40cd15:	cmp    DWORD PTR ds:0x42b00c,0x0
  40cd1c:	je     0x40cd7c
  40cd22:	cmp    DWORD PTR ds:0x42b00c,0x2
  40cd29:	jne    0x40cd50
  40cd2f:	push   DWORD PTR [ebp-0x14]
  40cd32:	push   0x6af7
  40cd37:	push   0x42b010
  40cd3c:	push   0x84d2
  40cd41:	push   DWORD PTR [ebp-0x10]
  40cd44:	push   DWORD PTR [ebp-0x20]
  40cd47:	push   DWORD PTR [ebp-0x28]
  40cd4a:	call   DWORD PTR ds:0x42ed59
  40cd50:	cmp    DWORD PTR ds:0x42b00c,0x3
  40cd57:	jne    0x40cd6a
  40cd5d:	mov    ecx,DWORD PTR ds:0x42b00c
  40cd63:	dec    ecx
  40cd64:	mov    DWORD PTR ds:0x42b00c,ecx
  40cd6a:	mov    ecx,DWORD PTR ds:0x42b00c
  40cd70:	dec    ecx
  40cd71:	mov    DWORD PTR ds:0x42b00c,ecx
  40cd77:	jmp    0x40cd15
  40cd7c:	mov    ecx,0x3272dd
  40cd81:	add    esi,ecx
  40cd83:	add    eax,ecx
  40cd85:	imul   eax,esi
  40cd88:	mov    esi,DWORD PTR [ebp+0xc]
  40cd8b:	cmp    esi,eax
  40cd8d:	jne    0x40cda9
  40cd93:	mov    eax,DWORD PTR [ebp-0x4]
  40cd96:	mov    esi,DWORD PTR [ebp-0x8]
  40cd99:	xor    eax,edx
  40cd9b:	xor    esi,edx
  40cd9d:	add    eax,ecx
  40cd9f:	add    esi,ecx
  40cda1:	imul   eax,esi
  40cda4:	jmp    0x40f15e
  40cda9:	mov    eax,DWORD PTR [ebp+0xc]
  40cdac:	mov    eax,DWORD PTR [eax+0x78]
  40cdaf:	mov    DWORD PTR [ebp+0xc],eax
  40cdb2:	mov    eax,DWORD PTR [ebp-0x4]
  40cdb5:	mov    esi,DWORD PTR [ebp-0x8]
  40cdb8:	xor    eax,edx
  40cdba:	xor    esi,edx
  40cdbc:	add    eax,ecx
  40cdbe:	add    esi,ecx
  40cdc0:	imul   eax,esi
  40cdc3:	jmp    0x40f13d
  40cdc8:	push   esi
  40cdc9:	pop    ss
  40cdca:	rcl    DWORD PTR [ebx-0x6d],cl
  40cdcd:	fwait
  40cdce:	(bad)  
  40cdcf:	pop    ss
  40cdd0:	push   ds
  40cdd1:	outs   dx,BYTE PTR ds:[esi]
  40cdd2:	adc    DWORD PTR ds:0xaec3c23,ebx
  40cdd8:	fldl2t 
  40cdda:	jp     0x40ce56
  40cddc:	sbb    DWORD PTR [edi+0x7a],ebx
  40cddf:	jp     0x40ce5a
  40cde1:	add    DWORD PTR [ebx+0x2410fa36],0xffffff9a
  40cde8:	popf   
  40cde9:	jg     0x40cdaf
  40cdeb:	ins    BYTE PTR es:[edi],dx
  40cdec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cded:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdee:	lds    ebp,FWORD PTR [edi]
  40cdf0:	in     eax,0x25
  40cdf2:	popf   
  40cdf3:	xchg   ebx,eax
  40cdf4:	sub    esi,esi
  40cdf6:	inc    ebx
  40cdf7:	or     ebx,DWORD PTR ds:0xfe0b2dc8
  40cdfd:	cdq    
  40cdfe:	add    DWORD PTR [esi+0x230ba21d],edx
  40ce04:	popa   
  40ce05:	ret    
  40ce06:	in     eax,0xfd
  40ce08:	fstp   TBYTE PTR [ebx+edi*4+0x4dcb55cf]
  40ce0f:	mov    ebx,0xdd7e46ee
  40ce14:	inc    ecx
  40ce15:	sub    eax,0x7ab1aec3
  40ce1a:	iret   
  40ce1b:	mov    WORD PTR [edx+0x3d],?
  40ce1e:	into   
  40ce1f:	push   0xf1c368ea
  40ce24:	lods   eax,DWORD PTR ds:[esi]
  40ce25:	add    BYTE PTR [eax],bh
  40ce27:	inc    eax
  40ce28:	and    BYTE PTR [esi+0x2a],cl
  40ce2b:	dec    edi
  40ce2c:	xor    ch,ch
  40ce2e:	dec    esi
  40ce2f:	test   BYTE PTR [edi-0x6ca08ba4],ch
  40ce35:	push   edi
  40ce36:	ret    0x646b
  40ce39:	sub    BYTE PTR [ebp-0x46],dl
  40ce3c:	or     BYTE PTR [ecx],cl
  40ce3e:	mov    WORD PTR [eax-0x48113f5b],es
  40ce44:	jle    0x40cdc6
  40ce46:	pop    eax
  40ce47:	aam    0x29
  40ce49:	jae    0x40ce4b
  40ce4b:	adc    al,0x67
  40ce4d:	sbb    ah,BYTE PTR [edx+0x3eb788e0]
  40ce53:	xchg   edi,eax
  40ce54:	push   esi
  40ce55:	int    0x49
  40ce57:	ja     0x40ce78
  40ce59:	sbb    BYTE PTR [edx],0x71
  40ce5c:	push   cs
  40ce5d:	mov    ch,0x93
  40ce5f:	and    DWORD PTR [esi-0x1478d59d],esp
  40ce65:	jge    0x40ce9a
  40ce67:	je     0x40ce30
  40ce69:	xor    DWORD PTR [ebp+0x1f],esp
  40ce6c:	push   esp
  40ce6d:	lock xor al,0xe8
  40ce70:	inc    esp
  40ce71:	xchg   ebx,eax
  40ce73:	pushf  
  40ce74:	iret   
  40ce75:	add    al,0xa
  40ce77:	add    DWORD PTR [esi-0x3309e0c4],0xffffffee
  40ce7e:	push   edi
  40ce7f:	dec    esi
  40ce80:	pop    edx
  40ce81:	xlat   BYTE PTR ds:[ebx]
  40ce82:	pushf  
  40ce83:	imul   edx,DWORD PTR [edx-0x58],0xf4a1d081
  40ce8a:	xchg   edi,eax
  40ce8b:	ins    BYTE PTR es:[edi],dx
  40ce8c:	push   ebp
  40ce8d:	into   
  40ce8e:	xor    DWORD PTR [ebp-0x44505a0f],esp
  40ce94:	sbb    ah,BYTE PTR [eax+0x46]
  40ce97:	(bad)  
  40ce98:	ja     0x40ce73
  40ce9a:	sar    BYTE PTR [ebx-0x2f],1
  40ce9d:	pop    es
  40ce9e:	inc    esp
  40ce9f:	lock dec DWORD PTR [edi+0x4f7788af]
  40cea6:	lds    esp,FWORD PTR [eax+ebx*2]
  40cea9:	fild   WORD PTR ds:0x275886dc
  40ceaf:	jg     0x40cf25
  40ceb1:	hlt    
  40ceb2:	fcom   DWORD PTR [edi+0xfb2f9b6]
  40ceb8:	in     eax,dx
  40ceb9:	outs   dx,DWORD PTR ds:[esi]
  40ceba:	mov    edx,0x808eb79b
  40cebf:	sbb    dh,BYTE PTR ds:[ebp-0x51]
  40cec3:	mov    DWORD PTR [eax+eax*8-0x6c],ecx
  40cec7:	idiv   eax
  40cec9:	jle    0x40ced4
  40cecb:	cmp    DWORD PTR [eax],esi
  40cecd:	mov    ebp,0x51bb4464
  40ced2:	pop    edi
  40ced3:	push   esi
  40ced4:	lods   eax,DWORD PTR ds:[esi]
  40ced5:	hlt    
  40ced6:	dec    esi
  40ced7:	(bad)  
  40ced8:	int    0xbc
  40ceda:	mov    esp,0x4a037480
  40cedf:	rcr    DWORD PTR [ebx+0xd26e26e],0x4e
  40cee6:	(bad)  
  40cee7:	sbb    al,cl
  40cee9:	inc    esi
  40ceea:	test   BYTE PTR [ebx],ch
  40ceec:	cmp    edi,DWORD PTR [edx]
  40ceee:	mov    WORD PTR [ebx],cs
  40cef0:	mov    esp,DWORD PTR [eax+0x55]
  40cef3:	mov    edx,0xc4707825
  40cef8:	add    ch,al
  40cefa:	mov    esp,0xd29ac3ed
  40ceff:	inc    esp
  40cf00:	hlt    
  40cf01:	fucomip st,st(4)
  40cf03:	(bad)  ds:0x9b05a8f2
  40cf09:	aas    
  40cf0a:	xor    al,0x73
  40cf0c:	inc    BYTE PTR [ebp+0x53]
  40cf0f:	jo     0x40cf21
  40cf11:	in     eax,dx
  40cf12:	lahf   
  40cf13:	aam    0x5f
  40cf15:	sbb    DWORD PTR [esi+0x935bfae],esi
  40cf1b:	xor    BYTE PTR [edx],ah
  40cf1d:	dec    eax
  40cf1e:	mov    bl,0xa4
  40cf20:	pushf  
  40cf21:	sub    al,0xd8
  40cf23:	jl     0x40cf69
  40cf25:	dec    esi
  40cf26:	and    dh,cl
  40cf28:	inc    eax
  40cf29:	arpl   ax,bx
  40cf2b:	loop   0x40cf78
  40cf2d:	push   ebp
  40cf2e:	mov    ebp,ebp
  40cf30:	idiv   BYTE PTR ds:0x80119830
  40cf36:	jl     0x40cf77
  40cf38:	arpl   WORD PTR [edi+edi*4],sp
  40cf3b:	mov    ecx,0xf464f635
  40cf40:	add    edx,ecx
  40cf42:	shl    DWORD PTR ds:0x4cb22370,cl
  40cf48:	outs   dx,BYTE PTR ds:[esi]
  40cf49:	jno    0x40cf51
  40cf4b:	pushf  
  40cf4c:	sti    
  40cf4d:	mov    ?,ebp
  40cf4f:	int    0xee
  40cf51:	pop    ecx
  40cf52:	je     0x40cf02
  40cf54:	push   edx
  40cf55:	push   esi
  40cf56:	mov    ds:0x31581515,eax
  40cf5b:	adc    BYTE PTR ds:0x124cf901,bh
  40cf61:	mov    eax,0x3a537b60
  40cf66:	sbb    ecx,DWORD PTR [ebx]
  40cf68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf69:	jb     0x40cf77
  40cf6b:	xchg   esp,edi
  40cf6d:	mov    ds:0x2b306c95,al
  40cf72:	dec    ebp
  40cf73:	push   esp
  40cf74:	in     al,0x40
  40cf76:	cmp    BYTE PTR [ebx],0xab
  40cf79:	xor    bl,bl
  40cf7b:	push   edi
  40cf7c:	push   0xd96cf273
  40cf81:	in     eax,0x53
  40cf83:	arpl   WORD PTR [eax+0x63],bp
  40cf86:	lahf   
  40cf87:	call   0x49fd:0x26b646bc
  40cf8e:	sahf   
  40cf8f:	ret    
  40cf90:	icebp  
  40cf91:	test   BYTE PTR [eax-0x55],dl
  40cf94:	or     al,0x4
  40cf96:	getsec 
  40cf98:	cwde   
  40cf99:	push   ds
  40cf9a:	leave  
  40cf9b:	es aaa 
  40cf9d:	xor    al,0x78
  40cf9f:	xchg   edx,eax
  40cfa0:	aas    
  40cfa1:	mov    ds:0xbc117a59,al
  40cfa6:	sbb    dl,BYTE PTR [edi-0x4243d6ab]
  40cfac:	loopne 0x40d00f
  40cfae:	add    eax,0x9acdb206
  40cfb3:	xchg   edi,eax
  40cfb4:	mov    bh,0x1e
  40cfb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfb7:	dec    ecx
  40cfb8:	cmp    BYTE PTR [edx+0x639882dc],ch
  40cfbe:	push   edx
  40cfbf:	clc    
  40cfc0:	push   cs
  40cfc1:	lahf   
  40cfc2:	cmp    ebx,DWORD PTR [edx]
  40cfc4:	test   DWORD PTR [ecx],ebp
  40cfc6:	dec    ecx
  40cfc7:	adc    BYTE PTR [ecx],ch
  40cfc9:	adc    BYTE PTR ds:0x79e5ec9e,ah
  40cfcf:	dec    esp
  40cfd0:	sbb    eax,0x8d8cda06
  40cfd5:	fsubrp st(5),st
  40cfd7:	inc    edx
  40cfd8:	lods   al,BYTE PTR ds:[esi]
  40cfd9:	ins    BYTE PTR es:[edi],dx
  40cfda:	add    BYTE PTR [esi+0x2e41d182],dl
  40cfe0:	xor    al,al
  40cfe2:	jecxz  0x40d052
  40cfe4:	bound  esi,QWORD PTR [edx]
  40cfe6:	into   
  40cfe7:	stc    
  40cfe8:	pop    ebx
  40cfe9:	mov    ecx,0xe0c6d273
  40cfee:	call   0xa3981f52
  40cff3:	sbb    ebx,DWORD PTR [edx-0x64ae6b2b]
  40cff9:	cwde   
  40cffa:	in     al,dx
  40cffb:	mov    ch,0xc2
  40cffd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cffe:	loop   0x40d044
  40d000:	popf   
  40d001:	mov    ah,0x32
  40d003:	lock data16 xor bl,BYTE PTR [ebp+esi*8-0x4b]
  40d009:	pop    esi
  40d00a:	nop
  40d00b:	xchg   ecx,eax
  40d00c:	inc    edi
  40d00d:	je     0x40d015
  40d00f:	adc    DWORD PTR [edi+edi*8+0x283a4603],0x3bcc9f66
  40d01a:	and    cl,BYTE PTR [eax]
  40d01c:	lock or bh,BYTE PTR [ecx+ebp*1]
  40d020:	xchg   ebx,eax
  40d021:	leave  
  40d022:	sbb    BYTE PTR [ecx-0x69],dl
  40d025:	aam    0x27
  40d027:	int3   
  40d028:	frstor [ecx-0x4c]
  40d02b:	adc    al,0xd
  40d02d:	aaa    
  40d02e:	scas   eax,DWORD PTR es:[edi]
  40d02f:	scas   eax,DWORD PTR es:[edi]
  40d030:	xchg   BYTE PTR [esp+edx*2+0x1],ch
  40d034:	xchg   esi,eax
  40d035:	xlat   BYTE PTR ds:[ebx]
  40d036:	cmp    BYTE PTR cs:[ebp+0x77b78e0b],0xce
  40d03e:	out    dx,eax
  40d03f:	addr16 dec edx
  40d041:	sbb    dh,BYTE PTR [ebp-0xe623347]
  40d047:	xor    al,0x8a
  40d049:	imul   ebx,DWORD PTR [ebp-0x41e62efc],0xf2894c43
  40d053:	pop    ecx
  40d054:	pop    edi
  40d055:	int    0x9d
  40d057:	out    0x74,al
  40d059:	pop    esp
  40d05a:	fcom   DWORD PTR [esi-0x64e98d50]
  40d060:	sub    bh,bl
  40d062:	(bad)  
  40d063:	nop
  40d064:	xchg   ebx,eax
  40d065:	fwait
  40d066:	fwait
  40d067:	add    bl,BYTE PTR [ecx-0x7b]
  40d06a:	test   BYTE PTR [eax+0x6fff6f9d],0xc7
  40d071:	fdivp  st(2),st
  40d073:	jbe    0x40d0c7
  40d075:	dec    ebx
  40d076:	fild   QWORD PTR [ebp+0x64a3e16f]
  40d07c:	ins    DWORD PTR es:[edi],dx
  40d07d:	cmp    al,0x21
  40d07f:	push   edx
  40d080:	sub    edx,DWORD PTR [esi+ecx*2+0x38e4133f]
  40d087:	inc    ebp
  40d088:	not    edx
  40d08a:	xor    al,0x2f
  40d08c:	icebp  
  40d08d:	call   0xb00070f6
  40d092:	sbb    ah,BYTE PTR [esi+0x25]
  40d095:	loopne 0x40d0c1
  40d097:	int    0x43
  40d099:	je     0x40d083
  40d09b:	xchg   edi,eax
  40d09c:	fxch   st(7)
  40d09e:	pop    ebp
  40d09f:	stos   BYTE PTR es:[edi],al
  40d0a0:	pop    ebp
  40d0a1:	inc    esp
  40d0a2:	fwait
  40d0a3:	xchg   ebx,eax
  40d0a4:	cmp    DWORD PTR [ecx+0x40260f56],edi
  40d0aa:	mov    ebx,esi
  40d0ac:	out    dx,al
  40d0ad:	(bad)  
  40d0ae:	push   esp
  40d0af:	retf   0x509f
  40d0b2:	ror    DWORD PTR [eax],1
  40d0b4:	fnsave [eax-0x23]
  40d0b7:	sub    al,0xaf
  40d0b9:	or     eax,edi
  40d0bb:	test   BYTE PTR [ebp-0x197823a1],dl
  40d0c1:	xchg   edi,eax
  40d0c2:	add    ch,dh
  40d0c4:	out    0x93,eax
  40d0c6:	shl    DWORD PTR [edi-0x1874926],1
  40d0cc:	xchg   esi,eax
  40d0cd:	scas   al,BYTE PTR es:[edi]
  40d0ce:	(bad)  
  40d0cf:	push   ss
  40d0d0:	sub    DWORD PTR [edi+0x704d131a],edi
  40d0d6:	cmp    ebx,edx
  40d0d8:	aad    0xdd
  40d0da:	mov    al,ds:0xd2ffc29e
  40d0df:	(bad)  
  40d0e0:	cmp    esp,eax
  40d0e2:	mov    esi,0xa4d487b2
  40d0e7:	xchg   esi,esp
  40d0e9:	or     al,0xbe
  40d0eb:	mov    BYTE PTR [eax+eax*4-0x4d2aa8c3],al
  40d0f2:	pusha  
  40d0f3:	or     DWORD PTR [eax+ecx*1+0x4f6a67f9],ecx
  40d0fa:	jnp    0x40d15d
  40d0fc:	mov    ebp,0x70ae6167
  40d101:	lods   al,BYTE PTR ds:[esi]
  40d102:	dec    eax
  40d103:	cdq    
  40d104:	push   0xf
  40d106:	and    bh,0xee
  40d109:	shr    DWORD PTR [ecx-0x1],0x92
  40d10d:	sbb    DWORD PTR [ebp-0x31a6fe83],edx
  40d113:	cmp    ebp,DWORD PTR [edx]
  40d115:	in     eax,0xf9
  40d117:	push   0x6809f058
  40d11c:	push   esp
  40d11d:	(bad)  
  40d11e:	mov    dh,0x5e
  40d120:	fisubr WORD PTR [eax+ebp*1+0xa301717]
  40d127:	mov    BYTE PTR [ecx+ecx*1+0x6a8501eb],bh
  40d12e:	addr16 inc edi
  40d130:	sbb    eax,0x419c568a
  40d135:	stc    
  40d136:	pop    ss
  40d137:	(bad)  
  40d138:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d139:	shl    BYTE PTR [esp+edi*8],1
  40d13c:	ss lahf 
  40d13e:	ror    DWORD PTR [ebx+0x674c1bc],1
  40d144:	sbb    eax,0x5b56eb5c
  40d149:	mov    al,ds:0xbc81ef8d
  40d14e:	add    al,0x1d
  40d150:	jmp    0xd0ef43d3
  40d155:	(bad)  
  40d156:	cmp    esp,DWORD PTR [esi+0x24]
  40d159:	ins    DWORD PTR es:[edi],dx
  40d15a:	inc    esi
  40d15b:	or     ah,bh
  40d15d:	clc    
  40d15e:	loope  0x40d125
  40d160:	xlat   BYTE PTR ds:[ebx]
  40d161:	xchg   esi,eax
  40d162:	jbe    0x40d1b9
  40d164:	bound  ecx,QWORD PTR [edi+0x3648996a]
  40d16a:	sbb    dl,BYTE PTR [eax+eiz*4-0x17716ea4]
  40d171:	cmc    
  40d172:	out    0x4a,eax
  40d174:	pop    ebx
  40d175:	lahf   
  40d176:	push   esp
  40d177:	ret    
  40d178:	pop    ebp
  40d179:	idiv   DWORD PTR [ecx+esi*1+0x2e667b23]
  40d180:	outs   dx,BYTE PTR ds:[esi]
  40d181:	dec    esp
  40d182:	mov    al,ds:0xf5fe7802
  40d187:	or     eax,0x25aec244
  40d18c:	je     0x40d182
  40d18e:	bound  eax,QWORD PTR [ebp-0x25]
  40d191:	mov    eax,ds:0xa19e88e0
  40d196:	pop    eax
  40d197:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d198:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d199:	scas   al,BYTE PTR es:[edi]
  40d19a:	je     0x40d1e4
  40d19c:	fnsave [edi-0x9]
  40d19f:	mov    cl,0x7f
  40d1a1:	xchg   edi,eax
  40d1a2:	sub    BYTE PTR [eax],bh
  40d1a4:	inc    eax
  40d1a5:	pop    ecx
  40d1a6:	sbb    BYTE PTR [edx+ebp*4+0x1260609b],0xca
  40d1ae:	push   esp
  40d1af:	popf   
  40d1b0:	dec    esp
  40d1b1:	xchg   esi,eax
  40d1b2:	push   edx
  40d1b3:	inc    ebp
  40d1b4:	and    BYTE PTR [ebp-0x14],ah
  40d1b7:	push   ecx
  40d1b8:	jne    0x40d155
  40d1ba:	rcr    BYTE PTR [esi-0x62e5b970],0x25
  40d1c1:	test   al,0x3f
  40d1c3:	jmp    0x40d1be
  40d1c5:	push   cs
  40d1c6:	mov    dl,bl
  40d1c8:	imul   edi,DWORD PTR [ecx+ebp*8],0x2187b668
  40d1cf:	add    DWORD PTR [ebx+0x33],0x50f45d46
  40d1d6:	mov    cl,dl
  40d1d8:	into   
  40d1d9:	je     0x40d1ee
  40d1db:	adc    eax,0x6587d008
  40d1e0:	dec    edi
  40d1e1:	push   ebp
  40d1e2:	test   eax,0x4c44b941
  40d1e7:	xor    al,0x9a
  40d1ea:	mov    ch,0x5f
  40d1ec:	pop    ecx
  40d1ed:	(bad)  
  40d1ee:	lock cld 
  40d1f0:	out    0x11,al
  40d1f2:	dec    eax
  40d1f3:	imul   esp,edx,0x7f
  40d1f6:	mov    ah,0x8a
  40d1f8:	iret   
  40d1f9:	fsub   DWORD PTR [ebp-0x76d5e4e9]
  40d1ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d200:	scas   al,BYTE PTR es:[edi]
  40d201:	mov    bl,al
  40d203:	mov    edi,DWORD PTR ds:0xf83e4669
  40d209:	xor    DWORD PTR [ecx-0x3ca179eb],0xf3fcaea0
  40d213:	push   cs
  40d214:	sub    al,bl
  40d216:	call   0xd483a6f4
  40d21b:	jb     0x40d214
  40d21d:	fld    QWORD PTR [esi]
  40d21f:	(bad)  
  40d220:	jae    0x40d1ca
  40d222:	add    al,0x2c
  40d224:	fadd   DWORD PTR [ebx-0x78b1f27f]
  40d22a:	pop    eax
  40d22b:	out    0x28,al
  40d22d:	imul   eax,edx,0xffffff9f
  40d230:	loopne 0x40d22f
  40d232:	sbb    al,0x76
  40d234:	dec    ecx
  40d235:	mov    cl,0x5b
  40d237:	cmp    BYTE PTR [ebp+0x1652769f],dl
  40d23d:	xor    al,0xaf
  40d23f:	adc    ecx,DWORD PTR [esi-0x2]
  40d242:	and    DWORD PTR [edx],0x2685d71a
  40d248:	dec    edx
  40d249:	mov    eax,0x8e5df59b
  40d24e:	sahf   
  40d24f:	adc    al,0xa1
  40d251:	jne    0x40d1f7
  40d253:	jmp    0x5ac0:0xf51addca
  40d25a:	or     eax,0xeccd3c1b
  40d25f:	push   ss
  40d260:	cs pop edi
  40d262:	mov    cl,0x57
  40d264:	jle    0x40d1eb
  40d266:	call   FWORD PTR [ecx+0x4f389801]
  40d26c:	add    BYTE PTR [ebp-0xed1cad1],bl
  40d272:	inc    ebx
  40d273:	idiv   BYTE PTR [ebx]
  40d275:	bound  edx,QWORD PTR [edi-0x658a0e74]
  40d27b:	cld    
  40d27c:	sbb    BYTE PTR [ecx+0x4020d299],dh
  40d282:	adc    ebx,DWORD PTR [ebx-0x773509d3]
  40d288:	mov    esp,0x5e5d9900
  40d28d:	std    
  40d28e:	and    al,BYTE PTR [edx+eiz*4-0x2da1aea5]
  40d295:	add    bl,dh
  40d297:	jo     0x40d236
  40d299:	pop    DWORD PTR [edx-0x70]
  40d29c:	mov    BYTE PTR [ebp-0x1b7895a1],bl
  40d2a2:	or     DWORD PTR [esi],0xffffffc4
  40d2a5:	retf   0x5252
  40d2a8:	call   esi
  40d2aa:	div    BYTE PTR [eax]
  40d2ac:	adc    eax,ecx
  40d2ae:	mov    ds:0x6eeaa047,al
  40d2b3:	xchg   esi,eax
  40d2b4:	jno    0x40d335
  40d2b6:	ret    0xefc
  40d2b9:	jnp    0x40d29d
  40d2bb:	mov    bh,0xc
  40d2bd:	scas   al,BYTE PTR es:[edi]
  40d2be:	data16 mov cl,0x1c
  40d2c1:	dec    esi
  40d2c2:	in     eax,dx
  40d2c3:	pop    edi
  40d2c4:	pop    esp
  40d2c5:	aas    
  40d2c6:	fstp   QWORD PTR [ebx]
  40d2c8:	fbld   TBYTE PTR [ebx+0x3b54c4ae]
  40d2ce:	mov    ds:0xceb08acc,eax
  40d2d3:	pop    edx
  40d2d4:	std    
  40d2d5:	aas    
  40d2d6:	jbe    0x40d2e3
  40d2d8:	mov    DWORD PTR [esp+edx*4+0x736b1807],esi
  40d2df:	inc    edi
  40d2e0:	(bad)  
  40d2e1:	aaa    
  40d2e2:	shr    bl,0x18
  40d2e5:	ins    DWORD PTR es:[edi],dx
  40d2e6:	ins    BYTE PTR es:[edi],dx
  40d2e7:	in     eax,dx
  40d2e8:	and    bh,ch
  40d2ea:	icebp  
  40d2eb:	mov    edi,0x5bb3453c
  40d2f0:	jns    0x40d2de
  40d2f2:	jge    0x40d347
  40d2f4:	xlat   BYTE PTR ds:[ebx]
  40d2f5:	into   
  40d2f6:	cmp    al,0xb3
  40d2f8:	ror    esi,cl
  40d2fa:	repnz mov esp,0x5c87d91f
  40d300:	cwde   
  40d301:	or     BYTE PTR [ebp*4-0x46fb5cf2],bh
  40d308:	bound  eax,QWORD PTR [ebx-0x26]
  40d30b:	xchg   ebp,eax
  40d30c:	test   BYTE PTR [edi-0x3],dl
  40d30f:	mov    dh,0x79
  40d311:	fbld   TBYTE PTR [esi]
  40d313:	jl     0x40d2a7
  40d315:	out    dx,al
  40d316:	icebp  
  40d317:	pop    ds
  40d318:	mov    ebx,0xc15e7459
  40d31d:	lods   eax,DWORD PTR ds:[esi]
  40d31e:	ins    DWORD PTR es:[edi],dx
  40d31f:	ror    BYTE PTR [edi+0x25],cl
  40d322:	lock push ebp
  40d324:	or     al,0x0
  40d326:	xor    BYTE PTR [edx],al
  40d328:	xchg   ch,ah
  40d32a:	in     al,dx
  40d32b:	iret   
  40d32c:	cld    
  40d32d:	dec    ebx
  40d32e:	call   0xb54f56da
  40d333:	xchg   esi,eax
  40d334:	mov    fs,eax
  40d336:	fld    DWORD PTR [edx]
  40d338:	dec    eax
  40d339:	mov    dh,0x95
  40d33b:	mov    esp,0x1e3d771
  40d340:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d341:	xchg   edx,eax
  40d342:	sbb    al,0xe4
  40d344:	scas   al,BYTE PTR es:[edi]
  40d345:	sub    edi,ecx
  40d347:	adc    bl,BYTE PTR [esp+edx*4-0x1ad1e57d]
  40d34e:	dec    ebx
  40d34f:	ror    BYTE PTR [edi+0xe],0xed
  40d353:	popf   
  40d354:	adc    bh,BYTE PTR [esi]
  40d356:	sub    eax,0x9da7e712
  40d35b:	daa    
  40d35c:	mov    ds:0x3858712b,al
  40d361:	jb     0x40d3ae
  40d363:	lods   eax,DWORD PTR ds:[esi]
  40d364:	out    dx,al
  40d365:	outs   dx,DWORD PTR ds:[esi]
  40d366:	adc    al,0xa7
  40d368:	mov    ds:0xcf6a4cb6,al
  40d36d:	and    eax,0x63cd9c31
  40d372:	shr    BYTE PTR [edi],cl
  40d374:	xchg   esp,eax
  40d375:	aad    0x2a
  40d377:	test   DWORD PTR [edx],ecx
  40d379:	div    DWORD PTR [ebp-0x42d47359]
  40d37f:	fisttp DWORD PTR [ebx-0x6c]
  40d382:	push   ds
  40d383:	call   0x8808:0xeb7c69c3
  40d38a:	pushf  
  40d38b:	cmp    DWORD PTR [edx],eax
  40d38d:	popa   
  40d38e:	adc    al,0x76
  40d390:	push   edx
  40d391:	xor    al,BYTE PTR [eax+0x28]
  40d394:	jns    0x40d37d
  40d396:	mov    WORD PTR [ecx+ebp*4+0x575bb01a],?
  40d39d:	jmp    0x2628ecdf
  40d3a2:	arpl   WORD PTR [ecx-0x4a761057],ax
  40d3a8:	sahf   
  40d3a9:	ret    
  40d3aa:	stos   DWORD PTR es:[edi],eax
  40d3ab:	cwde   
  40d3ac:	das    
  40d3ad:	mov    ah,0x0
  40d3af:	jnp    0x40d3ce
  40d3b1:	push   edi
  40d3b2:	int    0x36
  40d3b4:	div    BYTE PTR [edx+0x43]
  40d3b7:	iret   
  40d3b8:	fmul   QWORD PTR [edx-0x6b]
  40d3bb:	test   BYTE PTR [edi-0x724f4676],dl
  40d3c1:	sti    
  40d3c2:	or     BYTE PTR [ecx+0x2e87e08d],al
  40d3c8:	push   ds
  40d3c9:	mov    WORD PTR [ecx],?
  40d3cb:	cmc    
  40d3cc:	mov    esp,0x67d74eb6
  40d3d1:	fild   WORD PTR [ebx-0x37faa0f2]
  40d3d7:	mov    al,0xe5
  40d3d9:	lods   eax,DWORD PTR ds:[esi]
  40d3da:	mov    edi,edx
  40d3dc:	xchg   esi,eax
  40d3dd:	imul   edx,DWORD PTR [esi-0x7e],0x1180a428
  40d3e4:	mov    WORD PTR [esi+0x6ec13253],?
  40d3ea:	pushf  
  40d3eb:	xor    ah,cl
  40d3ed:	dec    edx
  40d3ee:	push   edx
  40d3ef:	dec    edx
  40d3f0:	dec    ebp
  40d3f1:	jp     0x40d3e9
  40d3f3:	das    
  40d3f4:	mov    ebx,0xe4d4e56d
  40d3f9:	inc    edi
  40d3fa:	imul   ecx,DWORD PTR [edi+0x4f458485],0xffffffd9
  40d401:	test   eax,0xce93673d
  40d406:	push   eax
  40d407:	out    0x7f,al
  40d409:	mov    ebp,0x59f333f5
  40d40e:	pop    es
  40d40f:	add    al,0xd
  40d411:	retf   0x6bdb
  40d414:	fnclex 
  40d416:	and    eax,0x2dcc28f
  40d41b:	scas   al,BYTE PTR es:[edi]
  40d41c:	add    eax,0x59df1db7
  40d421:	or     al,0x2c
  40d423:	xchg   ebp,eax
  40d424:	push   ebx
  40d425:	adc    al,0x38
  40d427:	neg    edx
  40d429:	dec    eax
  40d42a:	stos   DWORD PTR es:[edi],eax
  40d42b:	xlat   BYTE PTR ds:[ebx]
  40d42c:	mov    WORD PTR ds:0x6583fed5,?
  40d432:	jbe    0x40d3d9
  40d434:	xor    DWORD PTR [ebx+eiz*4-0x5d],ebx
  40d438:	arpl   WORD PTR [ebx+eax*4-0xe],cx
  40d43c:	sbb    DWORD PTR [ebp+0x6],edi
  40d43f:	cs ds test eax,0x328d0eb7
  40d446:	jo     0x40d439
  40d448:	sbb    ah,BYTE PTR [ecx+0x6c244524]
  40d44e:	in     al,0x17
  40d450:	fisttp WORD PTR [ecx+0x22]
  40d453:	in     al,dx
  40d454:	mov    bh,0x11
  40d456:	mov    ebx,0xf62bb606
  40d45b:	cmc    
  40d45c:	mov    BYTE PTR [edx+0x44],0xab
  40d460:	cli    
  40d461:	xchg   ecx,eax
  40d462:	mov    cs,WORD PTR [edx+0x58085a95]
  40d468:	sbb    BYTE PTR [eax-0x39aa2ca6],bl
  40d46e:	pop    ebp
  40d46f:	ss (bad) 
  40d471:	fcom   QWORD PTR [ebp+0x40b0af65]
  40d477:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d478:	scas   eax,DWORD PTR es:[edi]
  40d479:	shr    BYTE PTR [ecx-0x5],1
  40d47c:	cmp    al,0xb3
  40d47e:	jmp    0x8656:0x4bee8067
  40d485:	inc    esi
  40d486:	bound  ebx,QWORD PTR [ecx]
  40d488:	push   esi
  40d489:	lods   al,BYTE PTR ds:[esi]
  40d48a:	test   BYTE PTR [ebp+0x3a],0x86
  40d48e:	ins    DWORD PTR es:[edi],dx
  40d48f:	inc    edx
  40d490:	pop    es
  40d491:	out    dx,al
  40d492:	cmp    DWORD PTR [edi+0x2],ecx
  40d495:	repnz imul DWORD PTR [ecx]
  40d498:	lock mov dh,0xc4
  40d49b:	xor    DWORD PTR [edi+esi*8+0x6b],0x75926092
  40d4a3:	fisub  WORD PTR [ebx]
  40d4a5:	jae    0x40d4e6
  40d4a7:	and    eax,0x84273ae0
  40d4ac:	jb     0x40d489
  40d4ae:	daa    
  40d4af:	ror    ch,1
  40d4b1:	or     DWORD PTR [eax-0x7ab74fec],ebx
  40d4b7:	mov    ah,0xd4
  40d4b9:	push   cs
  40d4ba:	shl    cl,cl
  40d4bc:	call   FWORD PTR [ebp+0x3d]
  40d4bf:	pop    ds
  40d4c0:	and    bl,ch
  40d4c2:	jg     0x40d52a
  40d4c4:	test   DWORD PTR [ecx-0x32],edi
  40d4c7:	call   0x825b:0x3d54204f
  40d4ce:	cmp    DWORD PTR [edx-0x4780c840],ecx
  40d4d4:	add    eax,0xb1673e2c
  40d4d9:	or     ah,bl
  40d4db:	xchg   ebx,esi
  40d4dd:	test   al,0xf9
  40d4df:	xlat   BYTE PTR ds:[ebx]
  40d4e0:	push   esi
  40d4e1:	or     ah,cl
  40d4e3:	and    BYTE PTR [ecx+0x2c],bl
  40d4e6:	gs jnp 0x40d4d1
  40d4e9:	repnz add al,0x4b
  40d4ec:	mov    eax,0xdb55ca85
  40d4f1:	and    ecx,DWORD PTR [edi]
  40d4f3:	jo     0x40d51b
  40d4f5:	jnp    0x40d530
  40d4f7:	in     eax,0x94
  40d4f9:	pop    esp
  40d4fa:	jb     0x40d546
  40d4fc:	adc    eax,0xf1c77548
  40d501:	mov    BYTE PTR [esi+ebx*1],dh
  40d504:	push   esi
  40d505:	add    dh,bl
  40d507:	or     BYTE PTR [ecx-0x34],ch
  40d50a:	mov    DWORD PTR [esp+ebx*2],edx
  40d50d:	push   eax
  40d50e:	and    DWORD PTR [ebx-0x78],0x38
  40d512:	or     ebp,DWORD PTR [ecx+0x1052b263]
  40d518:	xor    BYTE PTR [ebx-0x189189b8],bh
  40d51e:	mov    ds:0xdc78f905,al
  40d523:	mov    bl,0xbb
  40d525:	dec    ebp
  40d526:	push   0xfe7c0744
  40d52b:	xchg   DWORD PTR [ebx],ecx
  40d52d:	xchg   DWORD PTR [ebp-0x5d],esp
  40d530:	imul   ebp,DWORD PTR [eax+0x68],0xffffff93
  40d534:	xor    DWORD PTR [edi-0x370f9670],ecx
  40d53a:	pop    ecx
  40d53b:	xor    BYTE PTR [ebp+0x3b],0x1b
  40d53f:	push   ss
  40d540:	out    0xb3,al
  40d542:	scas   al,BYTE PTR es:[edi]
  40d543:	add    eax,0xef01aae0
  40d548:	sub    ebp,ebx
  40d54a:	dec    eax
  40d54b:	jae    0x40d513
  40d54d:	lods   eax,DWORD PTR ds:[esi]
  40d54e:	sub    bl,cl
  40d550:	xor    BYTE PTR [ebx],al
  40d552:	sbb    al,0xec
  40d554:	push   eax
  40d555:	push   ecx
  40d556:	stc    
  40d557:	push   edi
  40d558:	push   ebp
  40d559:	xchg   BYTE PTR ds:0x140fc15,al
  40d55f:	cmp    BYTE PTR [ecx],dh
  40d561:	fcom   QWORD PTR [eax+0x1d5697dd]
  40d567:	pop    ds
  40d568:	sbb    esp,DWORD PTR es:[edx]
  40d56b:	sbb    eax,0x59bb7014
  40d570:	and    eax,0xb67aa95c
  40d575:	inc    esi
  40d576:	dec    esi
  40d577:	ja     0x40d556
  40d579:	push   cs
  40d57a:	scas   al,BYTE PTR es:[edi]
  40d57b:	mov    DWORD PTR ds:0x8f342102,ebp
  40d581:	mov    dh,0xec
  40d583:	mov    bl,0x2b
  40d585:	test   al,0x57
  40d587:	mov    al,ds:0x2c456837
  40d58c:	pop    esp
  40d58d:	inc    ecx
  40d58e:	cmp    eax,0x4facc2bf
  40d593:	(bad)  
  40d595:	mov    ebx,0xff1a7923
  40d59a:	sbb    BYTE PTR [ebx],bl
  40d59c:	add    eax,0xce8fa763
  40d5a1:	leave  
  40d5a2:	mov    edi,0xd7419437
  40d5a7:	addr16 test al,0x1d
  40d5aa:	inc    eax
  40d5ab:	popf   
  40d5ac:	pop    ds
  40d5ad:	das    
  40d5ae:	test   BYTE PTR [esi+0x43a6dd76],0xdb
  40d5b5:	inc    ecx
  40d5b6:	pop    ebp
  40d5b7:	push   es
  40d5b8:	push   ebp
  40d5b9:	sub    eax,0x2d71afc4
  40d5be:	push   esi
  40d5bf:	pusha  
  40d5c0:	push   cs
  40d5c1:	stos   BYTE PTR es:[edi],al
  40d5c2:	cmp    al,0xa5
  40d5c4:	ja     0x40d641
  40d5c6:	xor    ecx,esi
  40d5c8:	xchg   DWORD PTR [eax-0x48],ebx
  40d5cb:	add    ebx,DWORD PTR [ecx+0x22b49480]
  40d5d1:	dec    eax
  40d5d2:	aam    0x2a
  40d5d4:	sbb    eax,DWORD PTR [eax-0x2d]
  40d5d7:	loop   0x40d5ba
  40d5d9:	int3   
  40d5da:	mov    bh,0x2b
  40d5dc:	ret    
  40d5dd:	stos   DWORD PTR es:[edi],eax
  40d5de:	ror    edx,1
  40d5e0:	les    esi,FWORD PTR [ebx]
  40d5e2:	ror    BYTE PTR [edi-0x31],0x12
  40d5e6:	daa    
  40d5e7:	push   0xf
  40d5e9:	popf   
  40d5ea:	jne    0x40d635
  40d5ec:	cs pushf 
  40d5ee:	pop    eax
  40d5ef:	jnp    0x40d665
  40d5f1:	inc    ebx
  40d5f2:	repnz or eax,0xcbdaa27c
  40d5f8:	retf   
  40d5f9:	mov    fs,WORD PTR [esi-0x70]
  40d5fc:	pop    esi
  40d5fd:	sbb    al,0xe7
  40d5ff:	out    0x4f,al
  40d601:	sbb    bh,BYTE PTR [eax+0x5e8646d7]
  40d607:	neg    BYTE PTR [eax+ecx*2+0x6b02aebc]
  40d60e:	shl    DWORD PTR [ebx+0xe],1
  40d611:	or     al,0x9a
  40d613:	dec    eax
  40d614:	int    0xdb
  40d616:	retf   
  40d617:	or     ah,BYTE PTR [edx+0x2d]
  40d61a:	jmp    0x40d5fc
  40d61c:	pop    edx
  40d61d:	lods   al,BYTE PTR ds:[esi]
  40d61e:	mov    ds:0xf18c4175,eax
  40d623:	adc    DWORD PTR [ebx+ebx*8-0x746a6310],ecx
  40d62a:	add    dl,BYTE PTR [eax+edi*4+0x24]
  40d62e:	retf   
  40d62f:	fbstp  TBYTE PTR [ecx+0x2375eae7]
  40d635:	mov    esp,0xf38fabec
  40d63a:	jl     0x40d5bc
  40d63c:	or     ecx,DWORD PTR [edi-0x6d]
  40d63f:	add    DWORD PTR [esi],0xffffffa8
  40d642:	jae    0x40d63f
  40d644:	ins    DWORD PTR es:[edi],dx
  40d645:	aaa    
  40d646:	jbe    0x40d690
  40d648:	pusha  
  40d649:	daa    
  40d64a:	loope  0x40d601
  40d64c:	xchg   DWORD PTR ds:0x4fe03433,edx
  40d652:	dec    ecx
  40d653:	cmp    bh,BYTE PTR [edi+0x6b534b8a]
  40d659:	sbb    al,0x49
  40d65b:	std    
  40d65c:	out    0x50,eax
  40d65e:	jecxz  0x40d66a
  40d660:	inc    ecx
  40d661:	cwde   
  40d662:	loopne 0x40d658
  40d664:	mov    ds:0xf90cccd3,eax
  40d669:	sbb    ebp,ecx
  40d66b:	clc    
  40d66c:	mov    esi,0x410f157b
  40d671:	or     edi,esp
  40d673:	pop    esp
  40d674:	adc    ebx,DWORD PTR ds:0xfb879adb
  40d67a:	xchg   ecx,eax
  40d67b:	out    0x7e,eax
  40d67d:	push   ebp
  40d67e:	pop    esi
  40d67f:	dec    edx
  40d680:	jmp    0xb196:0x1d30786f
  40d687:	ret    0x8dd9
  40d68a:	(bad)  
  40d68b:	xor    al,BYTE PTR [edi+0x51]
  40d68e:	loopne 0x40d700
  40d690:	cdq    
  40d691:	inc    ecx
  40d692:	ret    0xb8ff
  40d695:	push   ecx
  40d696:	mov    dl,0x65
  40d698:	adc    al,0xc
  40d69a:	mov    eax,0xbc7a7ffc
  40d69f:	aad    0x7d
  40d6a1:	not    BYTE PTR [ebp+0x4cbe623]
  40d6a7:	or     eax,0x38403dda
  40d6ac:	push   edx
  40d6ad:	out    dx,al
  40d6ae:	dec    edx
  40d6af:	pop    edx
  40d6b0:	aas    
  40d6b1:	lea    eax,[esi]
  40d6b3:	push   edx
  40d6b4:	mov    DWORD PTR [ebp+0x2d729d44],edx
  40d6ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6bb:	jge    0x40d6d5
  40d6bd:	gs sbb eax,0x69a14044
  40d6c3:	rcr    DWORD PTR [edx],cl
  40d6c5:	test   DWORD PTR [esi],esi
  40d6c7:	jae    0x40d725
  40d6c9:	idiv   DWORD PTR [edi+edx*4+0x69]
  40d6cd:	popf   
  40d6ce:	push   ecx
  40d6cf:	jb     0x40d69e
  40d6d1:	xor    cl,BYTE PTR [edx]
  40d6d3:	icebp  
  40d6d4:	outs   dx,DWORD PTR ds:[esi]
  40d6d5:	stc    
  40d6d6:	inc    ecx
  40d6d7:	jge    0x40d68c
  40d6d9:	xchg   ebx,eax
  40d6da:	stos   BYTE PTR es:[edi],al
  40d6db:	sbb    BYTE PTR [edx+0x7c29f028],0x8f
  40d6e2:	pop    esi
  40d6e3:	jge    0x40d69d
  40d6e5:	xchg   esi,eax
  40d6e6:	aas    
  40d6e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6e8:	out    0xaa,al
  40d6ea:	and    al,0x5
  40d6ec:	pop    ss
  40d6ed:	out    0xff,al
  40d6ef:	cmp    BYTE PTR [ebp+0x25],bh
  40d6f2:	mov    edx,0xbc37f314
  40d6f7:	adc    BYTE PTR [ebx-0x79],cl
  40d6fa:	mov    edi,0x65e16b5c
  40d6ff:	pop    esp
  40d700:	leave  
  40d701:	out    0xeb,al
  40d703:	mov    ds:0x24c2460c,al
  40d708:	xchg   edx,eax
  40d709:	adc    esi,edi
  40d70b:	ins    DWORD PTR es:[edi],dx
  40d70c:	add    eax,edi
  40d70e:	push   ebx
  40d70f:	enter  0x4d4c,0x8c
  40d713:	popf   
  40d714:	inc    ebp
  40d715:	dec    ebx
  40d716:	loopne 0x40d707
  40d718:	pop    edx
  40d719:	stc    
  40d71a:	or     eax,0x5ed6cc51
  40d71f:	xor    al,0xbc
  40d721:	mov    ebx,0x95a05534
  40d726:	hlt    
  40d727:	or     BYTE PTR [eax+esi*1-0x349ebf7e],ch
  40d72e:	inc    edx
  40d72f:	sbb    eax,0x8e860510
  40d734:	in     eax,dx
  40d735:	jo     0x40d6ea
  40d737:	fidiv  WORD PTR [edx]
  40d739:	mov    cl,0xde
  40d73b:	out    0x3,al
  40d73d:	jle    0x40d74a
  40d73f:	xor    DWORD PTR [edx-0x772f4aa9],edx
  40d745:	cmp    ch,BYTE PTR [esi]
  40d747:	or     DWORD PTR [ebp-0x57295f96],edx
  40d74d:	ins    BYTE PTR es:[edi],dx
  40d74e:	pop    ebx
  40d74f:	cld    
  40d750:	push   ebp
  40d751:	popf   
  40d752:	mov    al,0xbd
  40d754:	aaa    
  40d755:	jp     0x40d789
  40d757:	test   DWORD PTR [ebp+0xd],ecx
  40d75a:	pop    edx
  40d75b:	cld    
  40d75c:	neg    BYTE PTR [edx+0x1b]
  40d75f:	in     eax,dx
  40d760:	mov    esi,0xf042c508
  40d765:	and    eax,0xb6d75357
  40d76a:	cmp    eax,0x4e0e94d4
  40d76f:	mov    es:0x7fc31ccd,al
  40d775:	test   BYTE PTR [eax],bl
  40d777:	arpl   WORD PTR [edi],sp
  40d779:	into   
  40d77a:	(bad)  
  40d77c:	sub    bl,BYTE PTR ss:[edi]
  40d77f:	or     edx,DWORD PTR [eax+0x50]
  40d782:	outs   dx,DWORD PTR ds:[esi]
  40d783:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d784:	loopne 0x40d747
  40d786:	in     al,0xde
  40d788:	mov    ebx,DWORD PTR [ecx]
  40d78a:	mov    edx,0xc8071e9a
  40d78f:	(bad)  [edx-0x45b0bdeb]
  40d795:	push   0xffffffe2
  40d797:	dec    ebx
  40d798:	fsub   QWORD PTR [esi]
  40d79a:	sbb    BYTE PTR [ebx-0x52],dl
  40d79d:	inc    edx
  40d79e:	or     eax,0x1ce36538
  40d7a3:	ja     0x40d823
  40d7a5:	xor    ebp,edi
  40d7a7:	out    0x20,al
  40d7a9:	xor    eax,0x91e6e513
  40d7ae:	xor    eax,0x2429c7e6
  40d7b3:	inc    edi
  40d7b4:	sub    eax,0x54c5020a
  40d7b9:	fidiv  DWORD PTR [edx+0x75]
  40d7bc:	imul   ebx,DWORD PTR [esi],0xffffffa8
  40d7bf:	fstp   DWORD PTR [edi-0x7a]
  40d7c2:	mov    cs,WORD PTR [edx-0x13]
  40d7c5:	arpl   WORD PTR [esi],bx
  40d7c7:	dec    eax
  40d7c8:	mov    ebx,0x4839e22b
  40d7cd:	es adc eax,0xfc0c565d
  40d7d3:	ret    
  40d7d4:	sbb    eax,0xd19b0bfa
  40d7d9:	scas   eax,DWORD PTR es:[edi]
  40d7da:	cmp    eax,0xbb061931
  40d7df:	mov    ch,ah
  40d7e1:	ror    DWORD PTR ds:0xe0cbfbda,1
  40d7e7:	loopne 0x40d817
  40d7e9:	mov    al,0x61
  40d7eb:	aad    0xf
  40d7ed:	mov    dh,0x2f
  40d7ef:	push   esp
  40d7f0:	push   eax
  40d7f1:	and    BYTE PTR ds:0x37fc1e47,bh
  40d7f7:	std    
  40d7f8:	loope  0x40d822
  40d7fa:	adc    eax,ebp
  40d7fc:	mov    eax,ds:0xadfeb0f1
  40d801:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d802:	jle    0x40d80a
  40d804:	loopne 0x40d85f
  40d806:	pop    esi
  40d807:	loope  0x40d790
  40d809:	sub    ah,BYTE PTR [eax]
  40d80b:	lea    edx,[ecx+0x72]
  40d80e:	adc    esp,DWORD PTR ss:[ebx-0x58d04a4a]
  40d815:	or     ah,bh
  40d817:	enter  0x6f95,0xd6
  40d81b:	(bad)
  40d81f:	int    0x1
  40d821:	repnz out dx,al
  40d823:	mov    edx,0xba5c1d53
  40d828:	sbb    ebx,edi
  40d82a:	in     eax,0xc0
  40d82c:	xlat   BYTE PTR ds:[ebx]
  40d82d:	mov    dh,0x4f
  40d82f:	dec    ebx
  40d830:	add    ebx,ecx
  40d832:	cmp    bh,cl
  40d834:	dec    edx
  40d835:	lods   al,BYTE PTR ds:[esi]
  40d836:	inc    esi
  40d837:	sbb    DWORD PTR [eax],ebx
  40d839:	int    0x6d
  40d83b:	inc    edx
  40d83c:	mov    ebp,0xe68b6352
  40d841:	pop    ebx
  40d842:	(bad)  
  40d843:	cmp    BYTE PTR [ebp+0x5c],dh
  40d846:	adc    edi,DWORD PTR [esi-0x1f]
  40d849:	pop    eax
  40d84a:	add    al,0x7d
  40d84c:	cmc    
  40d84d:	sbb    al,0x8e
  40d84f:	sub    eax,0x82062ab2
  40d854:	xor    bh,BYTE PTR [ebp-0xf04ce8f]
  40d85a:	add    BYTE PTR [edx+ebx*4],ch
  40d85d:	cli    
  40d85e:	lds    esi,FWORD PTR [eax+0x4f808279]
  40d864:	push   eax
  40d865:	fst    st(5)
  40d867:	mov    WORD PTR [edx-0x16da220f],gs
  40d86d:	lock mov ds:0xf0267f70,eax
  40d873:	cdq    
  40d874:	xor    al,0x4b
  40d876:	out    dx,al
  40d877:	inc    edi
  40d878:	test   cl,bh
  40d87a:	lods   al,BYTE PTR ds:[esi]
  40d87b:	cmp    DWORD PTR [edx-0x5],eax
  40d87e:	int3   
  40d87f:	call   0xdb5bdc69
  40d884:	in     eax,dx
  40d885:	pop    edi
  40d886:	neg    BYTE PTR [ebx]
  40d888:	and    al,0xac
  40d88a:	mov    BYTE PTR [ebx+eiz*2-0x96121f7],dh
  40d891:	inc    eax
  40d892:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d893:	mov    bh,0xfc
  40d895:	mov    dh,0x5f
  40d897:	cld    
  40d898:	int    0x31
  40d89a:	xor    eax,0x2fa85195
  40d89f:	push   esi
  40d8a0:	es call 0xd1323b59
  40d8a6:	jle    0x40d8bd
  40d8a8:	mov    esp,0xf4d30f12
  40d8ad:	dec    edx
  40d8ae:	mov    esp,0x996f75d0
  40d8b3:	jmp    0x44b58f7a
  40d8b8:	das    
  40d8b9:	jnp    0x40d8b8
  40d8bb:	fisubr WORD PTR [edi-0x1dfdb5c9]
  40d8c1:	test   eax,0x7cb0aad8
  40d8c6:	fistp  WORD PTR [edx+ebp*2-0x52324f23]
  40d8cd:	mov    edi,0x9f2d63eb
  40d8d2:	lds    eax,FWORD PTR [ebp-0xc]
  40d8d5:	aaa    
  40d8d6:	lods   eax,DWORD PTR ds:[esi]
  40d8d7:	lds    ebp,FWORD PTR [edi]
  40d8d9:	sti    
  40d8da:	push   esp
  40d8db:	xchg   esi,eax
  40d8dc:	or     al,BYTE PTR [ebx]
  40d8de:	repz shr DWORD PTR [esi+0x177481b3],cl
  40d8e5:	aad    0xf1
  40d8e7:	sub    DWORD PTR [edx-0x704e940f],edx
  40d8ed:	mov    ebx,0x391b3e24
  40d8f2:	call   0xce32:0xeed3787a
  40d8f9:	fcom   QWORD PTR [edi-0x5439fa3b]
  40d8ff:	in     al,0xe0
  40d901:	out    0x7a,al
  40d903:	and    BYTE PTR ds:0xc4276c9a,ah
  40d909:	ret    
  40d90a:	retf   
  40d90b:	sar    BYTE PTR [edi+edi*8],cl
  40d90e:	das    
  40d90f:	push   edx
  40d910:	jge    0x40d8a7
  40d912:	push   ds
  40d913:	push   ds
  40d914:	div    DWORD PTR [edi+0x27779d24]
  40d91a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d91b:	mov    dl,0xb9
  40d91d:	push   ds
  40d91e:	sbb    al,0xf6
  40d920:	mov    ?,edx
  40d922:	(bad)  
  40d923:	and    eax,0x2a7eb18c
  40d928:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d929:	jne    0x40d8ae
  40d92b:	cwde   
  40d92c:	fdivrp st(1),st
  40d92e:	push   ebx
  40d92f:	push   ss
  40d930:	sbb    bh,BYTE PTR [ebx+0x2d]
  40d933:	inc    ebp
  40d934:	ficom  WORD PTR [edi+0x63]
  40d937:	add    dl,BYTE PTR [eax]
  40d939:	clc    
  40d93a:	and    edx,DWORD PTR ds:[ebp-0x390b8076]
  40d941:	pop    DWORD PTR [ebp+0x4f22d905]
  40d947:	mov    ah,0xd8
  40d949:	pop    ss
  40d94a:	push   cs
  40d94b:	fsubp  st(0),st
  40d94d:	je     0x40d981
  40d94f:	pop    es
  40d950:	sti    
  40d951:	cs inc edx
  40d953:	push   edi
  40d954:	ffreep st(3)
  40d956:	out    dx,eax
  40d957:	pop    ebp
  40d958:	shl    DWORD PTR [edi+0x48],cl
  40d95b:	aam    0xb7
  40d95d:	mov    WORD PTR [esi],ds
  40d95f:	repz std 
  40d961:	and    esp,esi
  40d963:	and    BYTE PTR [edi+0x2fb4e44f],bh
  40d969:	neg    ebx
  40d96b:	cmp    eax,0x4b27cbf6
  40d970:	push   cs
  40d971:	jo     0x40d98a
  40d973:	inc    edx
  40d974:	outs   dx,BYTE PTR ds:[esi]
  40d975:	sar    bh,0x4c
  40d978:	clc    
  40d979:	popf   
  40d97a:	dec    ebp
  40d97b:	push   es
  40d97c:	inc    eax
  40d97d:	add    eax,0x3bdc7b2b
  40d982:	das    
  40d983:	adc    ebp,esi
  40d985:	mov    eax,ds:0x40b1c1a9
  40d98a:	jbe    0x40d9e3
  40d98c:	push   cs
  40d98d:	push   ebx
  40d98e:	and    al,0xe
  40d990:	dec    ebx
  40d991:	loopne 0x40d9dd
  40d993:	mov    ebp,0x2d7a4e7a
  40d998:	add    al,0x38
  40d99a:	mov    ?,WORD PTR [ebx]
  40d99c:	ficom  WORD PTR [esi-0xcf4ec4d]
  40d9a2:	lahf   
  40d9a3:	mov    cl,dl
  40d9a5:	and    eax,0xf24d8487
  40d9aa:	(bad)  
  40d9ab:	aam    0x2b
  40d9ad:	test   DWORD PTR [edi-0x18],edi
  40d9b0:	jbe    0x40d936
  40d9b2:	jno    0x40d973
  40d9b4:	cld    
  40d9b5:	adc    ch,BYTE PTR [ecx+0x6c9a731c]
  40d9bb:	loop   0x40d996
  40d9bd:	sbb    BYTE PTR [edi+0x0],bl
  40d9c0:	inc    ebx
  40d9c1:	mov    esp,0x252b8eae
  40d9c6:	add    al,0xd2
  40d9c8:	pop    es
  40d9c9:	call   0xbb74c6e3
  40d9ce:	lock xchg ebx,eax
  40d9d0:	stos   DWORD PTR es:[edi],eax
  40d9d1:	pavgb  mm1,mm5
  40d9d4:	pop    edi
  40d9d5:	nop
  40d9d6:	add    dh,BYTE PTR ds:0xebd3b9d
  40d9dc:	call   0x91315e0
  40d9e1:	add    bh,dh
  40d9e3:	sbb    al,0xbe
  40d9e5:	fsub   st,st(7)
  40d9e7:	sbb    BYTE PTR [ecx-0x1],0x46
  40d9eb:	outs   dx,BYTE PTR ds:[esi]
  40d9ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9ed:	dec    edx
  40d9ee:	cmp    BYTE PTR [edx],bh
  40d9f0:	stc    
  40d9f1:	sti    
  40d9f2:	mov    ds:0xf4b58e0b,al
  40d9f7:	add    al,al
  40d9f9:	cwde   
  40d9fa:	stc    
  40d9fb:	ss add eax,0x2e070126
  40da01:	retf   
  40da02:	pop    ebp
  40da03:	cmp    dh,BYTE PTR [esi-0x348086d5]
  40da09:	sti    
  40da0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da0b:	(bad)  
  40da0c:	add    al,0xb8
  40da0e:	xchg   edi,eax
  40da0f:	jne    0x40da1f
  40da11:	test   DWORD PTR [esp-0x32],edx
  40da15:	sbb    DWORD PTR [edi+0x32],ebx
  40da18:	inc    esp
  40da19:	stos   DWORD PTR es:[edi],eax
  40da1a:	push   ebx
  40da1b:	cwde   
  40da1c:	stc    
  40da1d:	xchg   esp,eax
  40da1e:	pop    esi
  40da1f:	neg    DWORD PTR fs:[ebx-0x29]
  40da23:	ja     0x40d9b9
  40da25:	pop    esi
  40da26:	scas   eax,DWORD PTR es:[edi]
  40da27:	ja     0x40da9c
  40da29:	test   DWORD PTR [esp+esi*2-0x7f],esp
  40da2d:	push   esi
  40da2e:	cmp    al,BYTE PTR [eax]
  40da30:	mov    ebp,ds
  40da32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da33:	lahf   
  40da34:	outs   dx,DWORD PTR ds:[esi]
  40da35:	je     0x40d9df
  40da37:	push   ecx
  40da38:	clc    
  40da39:	mov    esi,0x8dae0cc1
  40da3e:	add    ecx,ebp
  40da40:	fs jecxz 0x40d9d3
  40da43:	sti    
  40da44:	push   eax
  40da45:	cmp    DWORD PTR [ebx-0x6a86b22b],ecx
  40da4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da4c:	dec    edi
  40da4d:	xchg   DWORD PTR [ecx+0x2a],edi
  40da50:	dec    eax
  40da51:	xor    edx,DWORD PTR [esi+0x5d57ec1d]
  40da57:	pusha  
  40da58:	and    ebp,esi
  40da5a:	sub    BYTE PTR [ebp+0x64943095],dl
  40da60:	call   0x5bc:0x89f2a9ee
  40da67:	mov    ah,0x80
  40da69:	(bad)  
  40da6a:	dec    edi
  40da6b:	mov    ch,0x98
  40da6d:	shl    BYTE PTR [edx-0x39],0x19
  40da71:	loop   0x40dad2
  40da73:	out    dx,eax
  40da74:	inc    edi
  40da75:	out    dx,eax
  40da76:	mov    ah,0x1e
  40da78:	(bad)  
  40da7a:	mov    eax,0x11705fe9
  40da7f:	sub    edx,ebp
  40da81:	or     eax,0x59dfce3b
  40da86:	js     0x40da49
  40da88:	dec    ebx
  40da89:	mov    cl,BYTE PTR [esi-0x541ee93f]
  40da8f:	xchg   DWORD PTR [esi],edi
  40da91:	inc    eax
  40da92:	dec    esi
  40da93:	lea    eax,[eax-0x53]
  40da96:	pop    ss
  40da97:	call   0xf76e:0x86c46d13
  40da9e:	cmp    ebx,ebp
  40daa0:	fs ins BYTE PTR es:[edi],dx
  40daa2:	outs   dx,BYTE PTR ds:[esi]
  40daa3:	add    ch,BYTE PTR [ebx-0x40]
  40daa6:	mov    ch,0xc9
  40daa8:	imul   ebp,edi,0xccfbea88
  40daae:	mov    ds:0xfa64136f,eax
  40dab3:	fucomp st(4)
  40dab5:	mov    dl,0x40
  40dab7:	out    0x84,al
  40dab9:	sbb    BYTE PTR [eax-0x70],0x1
  40dabd:	add    BYTE PTR [ecx+0x72],dh
  40dac0:	inc    esp
  40dac1:	dec    ebx
  40dac2:	je     0x40daab
  40dac4:	mov    ds:0x374e26ef,eax
  40dac9:	or     eax,0xbbba556d
  40dace:	mov    bl,BYTE PTR [eax]
  40dad0:	xor    al,ah
  40dad2:	xchg   ebp,eax
  40dad3:	cmp    bh,ah
  40dad5:	and    BYTE PTR ds:0x81f06e29,0xeb
  40dadc:	jo     0x40db51
  40dade:	imul   ebp,DWORD PTR [edx-0x1f194818],0x626c4113
  40dae8:	xchg   edx,eax
  40dae9:	(bad)  
  40daea:	dec    ebx
  40daeb:	xlat   BYTE PTR ds:[ebx]
  40daec:	retf   0x8be6
  40daef:	out    dx,al
  40daf0:	mov    eax,ds:0xb84b1a70
  40daf5:	rcl    dh,1
  40daf7:	loope  0x40da98
  40daf9:	loopne 0x40db7a
  40dafb:	cdq    
  40dafc:	push   edx
  40dafd:	leave  
  40dafe:	fwait
  40daff:	popa   
  40db00:	push   esp
  40db01:	les    esp,FWORD PTR [eax-0x6b]
  40db04:	and    eax,ecx
  40db06:	xor    esi,esi
  40db08:	push   edi
  40db09:	mov    cl,0x44
  40db0b:	call   FWORD PTR [ebp+0x69]
  40db0e:	pop    esi
  40db0f:	int3   
  40db10:	outs   dx,DWORD PTR ds:[esi]
  40db11:	add    DWORD PTR [edx-0x3c],ebx
  40db14:	adc    ah,ah
  40db16:	dec    ebx
  40db17:	pop    ecx
  40db18:	ret    
  40db19:	lds    ebp,FWORD PTR [bx+di-0x19ab]
  40db1e:	mov    DWORD PTR [ecx-0x48],eax
  40db21:	mov    gs,WORD PTR [ecx+0x25ad68aa]
  40db27:	(bad)  
  40db28:	pop    ebp
  40db29:	add    BYTE PTR [ebx-0x75804c50],bl
  40db2f:	mov    esp,0xc85e464
  40db34:	add    ebp,ecx
  40db36:	add    al,0x5e
  40db38:	imul   edx,DWORD PTR gs:[ecx-0x7e],0x134741ee
  40db40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db41:	cwde   
  40db42:	jb     0x40daca
  40db44:	out    0x4d,al
  40db46:	les    edx,FWORD PTR [esi-0x4e]
  40db49:	cmp    bh,BYTE PTR [ebx]
  40db4b:	mov    al,ds:0xcb33062c
  40db50:	mov    esi,0xeb6d20ae
  40db55:	jnp    0x40db01
  40db57:	inc    ebx
  40db58:	ins    BYTE PTR es:[edi],dx
  40db59:	mov    al,ds:0xa56b6b73
  40db5e:	mov    edi,0xd0d8790
  40db63:	inc    ecx
  40db64:	add    DWORD PTR [edi+0x62d3ed94],0xa75d5753
  40db6e:	lea    esi,[ebx-0x7ce5aacd]
  40db74:	inc    esp
  40db75:	shl    DWORD PTR [esi-0xd],cl
  40db78:	jnp    0x40dbc9
  40db7a:	mov    edx,0xd264155
  40db7f:	jne    0x40db60
  40db81:	in     eax,dx
  40db82:	and    al,0x25
  40db84:	jne    0x40dba3
  40db86:	fist   WORD PTR [edx]
  40db88:	adc    eax,0x1d059538
  40db8d:	mov    ds:0x1227a9b1,eax
  40db92:	mov    dl,0x45
  40db94:	scas   al,BYTE PTR es:[edi]
  40db95:	push   es
  40db96:	adc    DWORD PTR [esi+0x4c443916],0xb44e6bdb
  40dba0:	jle    0x40dbda
  40dba2:	imul   edi,DWORD PTR [ebp+edx*8+0x70],0x20
  40dba7:	fmul   st(0),st
  40dba9:	pop    ds
  40dbaa:	dec    esp
  40dbab:	vminpd xmm0,xmm3,XMMWORD PTR [esi+0x719b83a4]
  40dbb3:	inc    eax
  40dbb4:	push   ebp
  40dbb5:	jmp    0x2abce906
  40dbba:	add    BYTE PTR [esi+ecx*4+0x22],cl
  40dbbe:	ins    DWORD PTR es:[edi],dx
  40dbbf:	int3   
  40dbc0:	ret    
  40dbc1:	sahf   
  40dbc2:	push   es
  40dbc3:	out    dx,eax
  40dbc4:	cmp    al,0xdd
  40dbc6:	pushf  
  40dbc7:	inc    ebp
  40dbc8:	outs   dx,BYTE PTR ds:[esi]
  40dbc9:	aaa    
  40dbca:	shl    BYTE PTR [ebp+0x3c],cl
  40dbcd:	cmp    DWORD PTR [ecx-0x25937c23],esi
  40dbd3:	sbb    edx,edi
  40dbd5:	push   edx
  40dbd6:	(bad)  
  40dbd7:	push   edx
  40dbd8:	sbb    eax,0x52a0dd27
  40dbdd:	mov    dl,BYTE PTR [eax+ecx*1-0x28392684]
  40dbe4:	xchg   esp,eax
  40dbe5:	sub    eax,0x4482772
  40dbea:	arpl   WORD PTR [eax+0x15],sp
  40dbed:	mov    ah,0x1f
  40dbef:	das    
  40dbf0:	xor    DWORD PTR [ebp-0x3],edx
  40dbf3:	add    eax,0x702ad71
  40dbf8:	scas   al,BYTE PTR es:[edi]
  40dbf9:	and    ch,BYTE PTR [ebp+esi*2+0x27f8b043]
  40dc00:	cdq    
  40dc01:	fmul   st(0),st
  40dc03:	cli    
  40dc04:	mov    WORD PTR [ecx],gs
  40dc06:	leave  
  40dc07:	xchg   edi,eax
  40dc08:	repnz and bh,BYTE PTR [edi]
  40dc0b:	rol    edx,0xb4
  40dc0e:	daa    
  40dc0f:	jl     0x40dc29
  40dc11:	and    DWORD PTR [edx],edi
  40dc13:	hlt    
  40dc14:	xor    esi,edi
  40dc16:	xchg   esp,edx
  40dc18:	cmp    ebx,esp
  40dc1a:	mov    ebp,0x5cf4f2c3
  40dc1f:	dec    ecx
  40dc20:	jmp    0x3c334ce4
  40dc25:	int    0x3f
  40dc27:	add    DWORD PTR [edx-0x4e],0xe6f777f3
  40dc2e:	rol    BYTE PTR [edi],0xd
  40dc31:	mov    ch,0xc0
  40dc33:	mov    al,ds:0x5ce85dd3
  40dc38:	cmc    
  40dc39:	jno    0x40dcac
  40dc3b:	lods   eax,DWORD PTR ds:[esi]
  40dc3c:	push   0xffffffeb
  40dc3e:	sar    DWORD PTR ds:0xda9c4862,cl
  40dc44:	mov    al,ds:0xb1519f79
  40dc49:	sbb    DWORD PTR [ebp+0x436e338],ecx
  40dc4f:	jp     0x40dc9d
  40dc51:	add    ecx,DWORD PTR [ebx]
  40dc53:	jp     0x40dbff
  40dc55:	cmp    eax,0x51234e4
  40dc5a:	inc    edx
  40dc5b:	sbb    edi,DWORD PTR [ebx+ecx*1]
  40dc5e:	(bad)  
  40dc5f:	xchg   ecx,eax
  40dc60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc61:	jne    0x40dc5d
  40dc63:	mov    BYTE PTR [ecx+0x1c],bl
  40dc66:	inc    esi
  40dc67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc68:	loopne 0x40dbfe
  40dc6a:	aam    0x26
  40dc6c:	mov    dl,0x28
  40dc6e:	stc    
  40dc6f:	iret   
  40dc70:	adc    BYTE PTR [edi],ah
  40dc72:	sbb    al,0x24
  40dc74:	add    edi,DWORD PTR [edx+0x1f]
  40dc77:	mov    DWORD PTR [ebx-0x2d57800c],esi
  40dc7d:	lds    ecx,FWORD PTR [ebp+0x3ca2c2c1]
  40dc83:	jae    0x40dc5d
  40dc85:	bound  edi,QWORD PTR fs:[ebx-0x16]
  40dc89:	xchg   DWORD PTR [ebx],eax
  40dc8b:	icebp  
  40dc8c:	scas   al,BYTE PTR es:[edi]
  40dc8d:	push   ss
  40dc8e:	or     al,0x4
  40dc90:	inc    edx
  40dc91:	push   ss
  40dc92:	cld    
  40dc93:	jb     0x40dd11
  40dc95:	call   0xd732469f
  40dc9a:	sub    ecx,DWORD PTR [edi-0x75]
  40dc9d:	rol    DWORD PTR [eax+0x235b95d2],cl
  40dca3:	jb     0x40dcb2
  40dca5:	(bad)  
  40dca6:	in     eax,0x76
  40dca8:	call   0x3792:0x8ce3c9b1
  40dcaf:	mov    esi,0xb7599ca7
  40dcb4:	sub    al,0xf
  40dcb6:	sbb    BYTE PTR [esi],0x38
  40dcb9:	adc    bh,cl
  40dcbb:	out    0xaa,eax
  40dcbd:	and    dh,BYTE PTR [ebx-0x16]
  40dcc0:	push   cs
  40dcc1:	hlt    
  40dcc2:	pop    ebp
  40dcc3:	das    
  40dcc4:	cmp    eax,0x8f71af6
  40dcc9:	fnstsw WORD PTR [ebx+0x1c]
  40dccc:	rol    DWORD PTR [ecx-0x5a72d007],cl
  40dcd2:	dec    eax
  40dcd3:	scas   eax,DWORD PTR es:[edi]
  40dcd4:	jae    0x40dc9b
  40dcd6:	mov    al,ds:0xb4019014
  40dcdb:	sub    ah,bl
  40dcdd:	cmp    al,0x57
  40dcdf:	xor    ebp,esp
  40dce1:	xor    eax,0xbd65ff7c
  40dce6:	scas   al,BYTE PTR es:[edi]
  40dce7:	test   al,0x62
  40dce9:	cs nop
  40dceb:	sbb    al,0x92
  40dced:	push   esp
  40dcee:	out    dx,eax
  40dcef:	mov    ebx,0xb0df5651
  40dcf4:	call   0x240d:0x4dc327ec
  40dcfb:	push   ss
  40dcfc:	push   esi
  40dcfd:	add    esi,DWORD PTR [edi+edx*4+0x4d]
  40dd01:	lods   al,BYTE PTR ds:[esi]
  40dd02:	ins    DWORD PTR es:[edi],dx
  40dd03:	cmp    dl,bl
  40dd05:	mov    esi,0x7f377462
  40dd0a:	dec    cl
  40dd0c:	dec    ebp
  40dd0d:	push   ss
  40dd0e:	fsubr  QWORD PTR [esi-0x13]
  40dd11:	pop    ebp
  40dd12:	es jecxz 0x40dd8d
  40dd15:	push   edx
  40dd16:	push   eax
  40dd17:	and    bl,dh
  40dd19:	ficom  WORD PTR [esi+0x69]
  40dd1c:	cs pop ecx
  40dd1e:	or     ah,BYTE PTR [esi]
  40dd20:	mov    bh,0xc
  40dd22:	mov    ebp,DWORD PTR [edx-0x26e7c70]
  40dd28:	rcr    DWORD PTR [esp+ecx*2],1
  40dd2b:	adc    BYTE PTR ds:0xf69c5318,bh
  40dd31:	test   bh,ch
  40dd33:	sub    edx,DWORD PTR [esi]
  40dd35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd36:	std    
  40dd37:	adc    cl,BYTE PTR [eax+0x2f]
  40dd3a:	stos   DWORD PTR es:[edi],eax
  40dd3b:	(bad)  
  40dd3d:	adc    BYTE PTR [eax],dh
  40dd3f:	int3   
  40dd40:	retf   0x5b23
  40dd43:	out    dx,eax
  40dd44:	imul   edi,DWORD PTR [edx],0xfffffffe
  40dd47:	ja     0x40dd9a
  40dd49:	ror    DWORD PTR [ebx+ebx*8-0x48],cl
  40dd4d:	fwait
  40dd4e:	mov    ds:0x5a52908e,eax
  40dd53:	outs   dx,DWORD PTR ds:[esi]
  40dd54:	aad    0xdf
  40dd56:	aas    
  40dd57:	gs and eax,0x326f5af
  40dd5d:	mov    BYTE PTR [ecx+0x7a7089d7],bh
  40dd63:	or     ecx,esi
  40dd65:	in     eax,0xb0
  40dd67:	int    0x8b
  40dd69:	push   0x8a44e130
  40dd6e:	gs ret 0x1d4
  40dd72:	inc    eax
  40dd73:	(bad)  
  40dd74:	stc    
  40dd75:	push   ss
  40dd76:	pop    esp
  40dd77:	and    ah,BYTE PTR [edi+0x51]
  40dd7a:	(bad)  
  40dd7b:	adc    al,0xc1
  40dd7d:	push   cs
  40dd7e:	imul   eax,eax,0x376fcbe0
  40dd84:	inc    ebx
  40dd85:	shl    DWORD PTR [edx+0xbfb8c8b],0x2e
  40dd8c:	repnz mov ebp,0xa0c8e5db
  40dd92:	aad    0x4b
  40dd94:	xchg   edx,eax
  40dd95:	hlt    
  40dd96:	aas    
  40dd97:	aam    0x82
  40dd99:	pusha  
  40dd9a:	push   ecx
  40dd9b:	int3   
  40dd9c:	adc    dl,BYTE PTR [esi]
  40dd9e:	sub    ebx,esp
  40dda0:	call   0xe730:0x5b189e8b
  40dda7:	and    esp,ebx
  40dda9:	add    al,0xfb
  40ddab:	in     al,0x2
  40ddad:	sbb    DWORD PTR [eax],0xfffffffb
  40ddb0:	lea    edx,ss:[eax+0x52a201b2]
  40ddb7:	cli    
  40ddb8:	or     al,0xae
  40ddba:	pop    edx
  40ddbb:	in     al,dx
  40ddbc:	pop    edi
  40ddbd:	adc    bh,BYTE PTR [edx]
  40ddbf:	jl     0x40ddc8
  40ddc1:	mov    bl,0xf1
  40ddc3:	cmc    
  40ddc4:	retf   0xee72
  40ddc7:	cwde   
  40ddc8:	sub    eax,0xfaa02d62
  40ddcd:	fwait
  40ddce:	call   0x4f6701b9
  40ddd3:	push   ebp
  40ddd4:	jg     0x40dd56
  40ddd6:	sbb    ebp,DWORD PTR [ebx+edi*2]
  40ddd9:	and    DWORD PTR [esp+edi*4+0x7f5a6c51],0x6c514ef5
  40dde4:	push   edx
  40dde5:	push   ebp
  40dde6:	mul    DWORD PTR [ebx]
  40dde8:	xchg   DWORD PTR ds:0xd685b0c,esp
  40ddee:	mov    ds:0x134d84e9,eax
  40ddf3:	jnp    0x40de17
  40ddf5:	xchg   ecx,eax
  40ddf6:	inc    ecx
  40ddf7:	test   DWORD PTR [edi],edi
  40ddf9:	pop    esi
  40ddfa:	pusha  
  40ddfb:	mov    eax,0xab13e5f4
  40de00:	and    BYTE PTR [edx-0x5],0x23
  40de04:	adc    eax,0xac7a53b1
  40de09:	add    eax,0xcdfbdcef
  40de0e:	leave  
  40de0f:	loop   0x40de78
  40de11:	(bad)  
  40de12:	sbb    cl,BYTE PTR [esi]
  40de14:	xlat   BYTE PTR ds:[ebx]
  40de15:	mov    esi,0x2d513305
  40de1a:	pop    ss
  40de1b:	xchg   edi,eax
  40de1c:	call   0x2bce1875
  40de21:	mov    eax,ds:0xd2688926
  40de26:	sti    
  40de27:	(bad)  
  40de28:	ins    BYTE PTR es:[edi],dx
  40de29:	and    eax,0xdd38734e
  40de2e:	mov    eax,ds:0x24da89f5
  40de33:	daa    
  40de34:	mov    al,0xcc
  40de36:	lea    edx,[edx]
  40de38:	test   al,0x19
  40de3a:	push   ecx
  40de3b:	(bad)  
  40de3c:	cmp    dl,dh
  40de3e:	sbb    BYTE PTR [edx],0x1
  40de41:	pop    ebx
  40de42:	xchg   esi,eax
  40de43:	jnp    0x40ddf7
  40de45:	leave  
  40de46:	mov    esi,0x15b2a4c4
  40de4b:	neg    BYTE PTR [edx-0x1a732148]
  40de51:	stos   BYTE PTR es:[edi],al
  40de52:	mov    WORD PTR [ebp*1+0x23f4842c],es
  40de59:	icebp  
  40de5a:	out    dx,eax
  40de5b:	test   al,0xa2
  40de5d:	not    DWORD PTR [ecx-0x20234219]
  40de63:	fisttp WORD PTR [ebx+0xd]
  40de66:	in     al,dx
  40de67:	or     bl,ch
  40de69:	jl     0x40de6c
  40de6b:	fsubr  DWORD PTR [ebx+0x2411a4d9]
  40de71:	xor    eax,0xff64051a
  40de76:	add    BYTE PTR [eax-0x16],dl
  40de79:	stos   DWORD PTR es:[edi],eax
  40de7a:	push   edi
  40de7b:	push   0x62
  40de7d:	pop    ebx
  40de7e:	push   ecx
  40de7f:	sub    BYTE PTR [eax],0x33
  40de82:	imul   esp
  40de84:	add    cl,BYTE PTR [eax+0x6d149c6b]
  40de8a:	ja     0x40deb4
  40de8c:	inc    ebx
  40de8e:	xchg   ebx,eax
  40de8f:	push   ds
  40de90:	mov    esi,0x512bdcc7
  40de95:	(bad)  
  40de96:	and    DWORD PTR [ebp+eiz*1-0x21cedcd4],edi
  40de9d:	cmp    eax,0x899694b0
  40dea2:	loop   0x40de92
  40dea4:	add    cl,cl
  40dea6:	add    dh,BYTE PTR [edx-0x62]
  40dea9:	inc    esp
  40deaa:	mov    es,esp
  40deac:	xlat   BYTE PTR ds:[ebx]
  40dead:	nop
  40deae:	mov    ebx,0x69e9a602
  40deb3:	jg     0x40deae
  40deb5:	pop    eax
  40deb6:	push   ecx
  40deb7:	jg     0x40dea2
  40deb9:	xor    edi,ebp
  40debb:	iret   
  40debc:	mov    eax,0x7f0a7039
  40dec1:	sbb    esi,DWORD PTR [ebx]
  40dec3:	leave  
  40dec4:	add    DWORD PTR [ebp+0xe],edx
  40dec7:	rcl    BYTE PTR [ebx+0x6a],cl
  40deca:	inc    esi
  40decb:	xchg   BYTE PTR [edx-0xd],bl
  40dece:	loopne 0x40df0d
  40ded0:	ja     0x40de6d
  40ded2:	mov    WORD PTR [ebx+0x4a],fs
  40ded5:	in     al,dx
  40ded6:	jmp    DWORD PTR [edi-0x4dbc0f81]
  40dedc:	enter  0x8592,0x77
  40dee0:	scas   al,BYTE PTR es:[edi]
  40dee1:	dec    ebp
  40dee2:	bound  ebp,QWORD PTR [ebx+0x2b]
  40dee5:	xor    BYTE PTR [eax],0x57
  40dee8:	cmp    DWORD PTR [esi],ebp
  40deea:	add    ebp,0x24
  40deed:	(bad)
  40def0:	int3   
  40def1:	pop    sp
  40def3:	mov    cl,BYTE PTR [ebx+0x38]
  40def6:	test   BYTE PTR [ecx+0x1909ba95],cl
  40defc:	xchg   DWORD PTR [edx-0x662316a5],ebp
  40df02:	(bad)  
  40df03:	imul   esp,DWORD PTR [ebx+edx*2-0x2e],0xffffff95
  40df08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df09:	jmp    0x166b347d
  40df0e:	adc    al,0xa1
  40df10:	jecxz  0x40deb1
  40df12:	jecxz  0x40deea
  40df14:	pop    es
  40df15:	ret    0x158d
  40df18:	outs   dx,BYTE PTR ds:[esi]
  40df19:	pushf  
  40df1a:	aad    0x78
  40df1c:	jg     0x40df02
  40df1e:	leave  
  40df1f:	mov    dh,0xb8
  40df21:	pusha  
  40df22:	psubusb mm4,QWORD PTR [esi+0x77]
  40df26:	inc    ecx
  40df27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df28:	sbb    bh,bl
  40df2a:	mov    BYTE PTR [ebx],cl
  40df2c:	jae    0x40def0
  40df2e:	and    al,0x35
  40df30:	jg     0x40dfac
  40df32:	xor    al,0xbc
  40df34:	arpl   WORD PTR [ecx],si
  40df36:	cmp    eax,0x5b0f8b47
  40df3b:	lahf   
  40df3c:	mov    BYTE PTR [ecx-0x13],0x31
  40df40:	jge    0x40df37
  40df42:	sbb    esi,DWORD PTR [ebx+0x6c]
  40df45:	cmp    eax,0xe0cdb892
  40df4a:	pop    ebp
  40df4b:	sbb    al,0x63
  40df4d:	mov    ah,0x19
  40df4f:	push   cs
  40df50:	or     bl,al
  40df52:	cwde   
  40df53:	mov    ebx,0x56a43253
  40df58:	push   edx
  40df5a:	xchg   edx,eax
  40df5b:	inc    edx
  40df5c:	inc    edx
  40df5d:	mov    BYTE PTR [eax-0x7c],ch
  40df60:	xor    dl,bl
  40df62:	xor    BYTE PTR [ebx+esi*1-0x60127ee5],dh
  40df69:	in     eax,dx
  40df6a:	dec    ebp
  40df6b:	int    0x49
  40df6d:	movsx  ebp,dl
  40df70:	push   es
  40df71:	nop
  40df72:	lea    esi,[ebx-0x1d]
  40df75:	xchg   BYTE PTR [ebx],bl
  40df77:	mov    esp,0xfb9c05e2
  40df7c:	and    BYTE PTR [esi],al
  40df7e:	sbb    al,0xbb
  40df80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df81:	div    BYTE PTR cs:[esi-0x1]
  40df85:	add    ecx,edx
  40df87:	out    dx,eax
  40df88:	loope  0x40df8f
  40df8a:	in     al,dx
  40df8b:	mov    ecx,0xf447a22c
  40df90:	adc    DWORD PTR [ecx+0xfdfa4a0],ebp
  40df96:	rol    BYTE PTR [esi-0x4abcd019],cl
  40df9c:	push   esi
  40df9d:	xchg   ecx,eax
  40df9e:	sbb    al,0x7d
  40dfa0:	xchg   ebx,eax
  40dfa1:	ficomp WORD PTR [ebp+0x1ced950a]
  40dfa7:	popa   
  40dfa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfa9:	into   
  40dfaa:	sub    eax,0x7de42def
  40dfaf:	adc    BYTE PTR [esi],bl
  40dfb1:	ja     0x40dfbb
  40dfb3:	aam    0xed
  40dfb5:	mov    edi,0x4b0ebc84
  40dfba:	jb     0x40df82
  40dfbc:	xor    eax,DWORD PTR [ebp+edi*1-0x5]
  40dfc0:	ss push cs
  40dfc2:	daa    
  40dfc3:	in     eax,0x1f
  40dfc5:	in     al,0x4b
  40dfc7:	inc    esp
  40dfc8:	scas   eax,DWORD PTR es:[edi]
  40dfc9:	out    dx,eax
  40dfca:	mov    edi,0x6647c4b9
  40dfcf:	adc    DWORD PTR [edx+0x3d11b7ac],ebx
  40dfd5:	pop    edi
  40dfd6:	jnp    0x40dfc1
  40dfd8:	call   0xa97b:0xf2732f2d
  40dfdf:	(bad)  
  40dfe0:	addr16 jae 0x40e005
  40dfe3:	sub    ah,0x3b
  40dfe6:	les    eax,FWORD PTR [edi+0x2e099126]
  40dfec:	pop    edi
  40dfed:	imul   ebp,edx,0x124e485c
  40dff3:	lods   eax,DWORD PTR ds:[esi]
  40dff4:	daa    
  40dff5:	jmp    0x7447b185
  40dffa:	test   al,0xee
  40dffc:	adc    al,0x1f
  40dffe:	push   esi
  40dfff:	inc    eax
  40e000:	lds    esi,FWORD PTR [ebx]
  40e002:	add    DWORD PTR [edx-0x40],esp
  40e005:	xor    BYTE PTR [edi-0x7c476476],al
  40e00b:	jmp    0x40e019
  40e00d:	out    0xdb,al
  40e00f:	mov    ds:0x9984a4c1,eax
  40e014:	pop    ecx
  40e015:	pop    ebp
  40e016:	push   eax
  40e017:	cdq    
  40e018:	jge    0x40e070
  40e01a:	(bad)  [eax+0x29]
  40e01d:	adc    DWORD PTR [ebx+0x23],ecx
  40e020:	and    DWORD PTR [ecx],0x167fb2c6
  40e026:	aas    
  40e027:	xchg   ebx,eax
  40e028:	ror    esp,0x32
  40e02b:	push   ds
  40e02c:	pop    edx
  40e02d:	dec    esi
  40e02e:	and    BYTE PTR [esi-0xe],dl
  40e031:	(bad)  
  40e032:	and    eax,0x9faf7f5
  40e037:	mov    bh,0xb3
  40e039:	push   es
  40e03a:	loopne 0x40e000
  40e03c:	mov    al,0x30
  40e03e:	retf   
  40e03f:	addr16 sbb eax,0x33a5bd9e
  40e045:	xchg   DWORD PTR [ebx-0x58645ad4],esp
  40e04b:	fucom  st(5)
  40e04d:	aas    
  40e04e:	pop    esi
  40e04f:	ins    DWORD PTR es:[edi],dx
  40e050:	addr16 popf 
  40e052:	sbb    al,BYTE PTR [edx+0x56f86d15]
  40e058:	dec    esi
  40e059:	cli    
  40e05a:	mov    ?,WORD PTR [edx]
  40e05c:	ins    BYTE PTR es:[edi],dx
  40e05d:	add    esp,DWORD PTR [edi+0x11491894]
  40e063:	cmp    al,0x3b
  40e065:	hlt    
  40e066:	add    BYTE PTR [edx],ah
  40e068:	loope  0x40e049
  40e06a:	push   ebp
  40e06b:	adc    BYTE PTR [edi],0x27
  40e06e:	mov    esp,0xe7b9e930
  40e073:	xor    al,0x80
  40e075:	xchg   esp,eax
  40e076:	fldl2t 
  40e078:	fisubr DWORD PTR [ebp+0x41a60f6d]
  40e07e:	push   ecx
  40e07f:	push   ebx
  40e080:	cmc    
  40e081:	test   BYTE PTR [ecx],bh
  40e083:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e084:	dec    edx
  40e085:	dec    ecx
  40e086:	mov    edx,0x76829322
  40e08b:	push   ecx
  40e08c:	pop    es
  40e08d:	cdq    
  40e08e:	test   edi,0x2965b5c6
  40e094:	xchg   edi,eax
  40e095:	mov    dh,BYTE PTR [edi-0x5edaadc0]
  40e09b:	cmp    BYTE PTR [eax+edx*2],ch
  40e09e:	push   0xa2faa8c2
  40e0a3:	push   0xab8b0dab
  40e0a8:	cmp    DWORD PTR [edx+0x77df7c6a],eax
  40e0ae:	jns    0x40e050
  40e0b0:	xchg   BYTE PTR [esi+esi*1],ah
  40e0b3:	mov    al,0x91
  40e0b5:	mov    dh,0x2
  40e0b7:	or     DWORD PTR ds:0x54e87cce,0x55
  40e0be:	push   0x2f
  40e0c0:	jb     0x40e095
  40e0c2:	ds mov dl,0x8d
  40e0c5:	dec    ecx
  40e0c6:	jp     0x40e075
  40e0c8:	dec    ebx
  40e0c9:	js     0x40e058
  40e0cb:	rcl    BYTE PTR ds:[eax+0x2e6ce4cb],1
  40e0d2:	ret    0x6f17
  40e0d5:	data16 cmp BYTE PTR [edi+0x42248d31],dh
  40e0dc:	push   ebp
  40e0dd:	pop    ds
  40e0de:	in     eax,dx
  40e0df:	xchg   ebx,eax
  40e0e0:	imul   eax,esi,0xffffffeb
  40e0e3:	mov    ah,0x9f
  40e0e5:	sahf   
  40e0e6:	ret    0xe191
  40e0e9:	xchg   ecx,eax
  40e0ea:	or     BYTE PTR [ebp+0x17],0xee
  40e0ee:	out    dx,ax
  40e0f0:	or     al,0x4f
  40e0f2:	outs   dx,DWORD PTR ds:[esi]
  40e0f3:	inc    esp
  40e0f4:	out    0xb1,eax
  40e0f6:	adc    ebp,ecx
  40e0f8:	ins    DWORD PTR es:[edi],dx
  40e0f9:	cmp    BYTE PTR [ecx+0xd],bl
  40e0fc:	scas   al,BYTE PTR es:[edi]
  40e0fd:	lods   al,BYTE PTR ds:[esi]
  40e0fe:	jnp    0x40e127
  40e100:	lahf   
  40e101:	stos   BYTE PTR es:[edi],al
  40e102:	mov    ds:0xed85c1a5,eax
  40e107:	lock outs dx,BYTE PTR ds:[esi]
  40e109:	mov    ds:0xf338216f,eax
  40e10e:	in     al,0x38
  40e110:	jnp    0x40e0d4
  40e112:	mov    ch,0x85
  40e114:	lahf   
  40e115:	push   ds
  40e116:	mov    eax,ds:0xea2b77dd
  40e11b:	setbe  BYTE PTR [ebx]
  40e11e:	mov    WORD PTR [eax],?
  40e120:	test   eax,0x752ea1ae
  40e125:	adc    eax,0xba8ebaea
  40e12a:	hlt    
  40e12b:	jp     0x40e11b
  40e12d:	lds    ebx,FWORD PTR [esi+0x5a117163]
  40e133:	in     eax,dx
  40e134:	stos   DWORD PTR es:[edi],eax
  40e135:	and    ecx,ebp
  40e137:	jecxz  0x40e1a6
  40e139:	push   eax
  40e13a:	pop    ds
  40e13b:	shl    DWORD PTR cs:[ebp+0x42404c20],1
  40e142:	mov    al,ds:0x47acd4d3
  40e147:	nop
  40e148:	sub    DWORD PTR [eax],ebp
  40e14a:	push   edi
  40e14b:	mov    ah,0xf9
  40e14d:	pop    ss
  40e14e:	xor    ah,0x5a
  40e151:	je     0x40e182
  40e153:	in     al,0x6c
  40e155:	rcr    DWORD PTR [edi-0x6d8154ef],cl
  40e15b:	sbb    al,0xa4
  40e15d:	enter  0x93c7,0x2e
  40e161:	fdiv   DWORD PTR gs:[ebx-0x93447f6]
  40e168:	lock and edi,DWORD PTR [ebx+0x246765de]
  40e16f:	mov    al,ds:0x4c88f89b
  40e174:	sub    BYTE PTR [eax],dh
  40e176:	test   eax,0x7dbfbfdf
  40e17b:	mov    esi,0x7cf96bc0
  40e180:	test   BYTE PTR [ebx-0xb7dc9cb],0x2c
  40e187:	nop
  40e188:	inc    edi
  40e189:	pop    edi
  40e18a:	sbb    eax,0xf35f9658
  40e18f:	mov    ebp,0xb759ac62
  40e194:	out    0xb1,eax
  40e196:	fmulp  st(0),st
  40e198:	sbb    BYTE PTR [ecx-0x53],bl
  40e19b:	ds nop
  40e19d:	or     dh,BYTE PTR [esi-0x3b]
  40e1a0:	fbld   TBYTE PTR [eax+0x4165bce9]
  40e1a6:	jbe    0x40e1d6
  40e1a8:	outs   dx,DWORD PTR ds:[esi]
  40e1a9:	push   0xffffff81
  40e1ab:	xor    bh,BYTE PTR [eax+0x3]
  40e1ae:	std    
  40e1af:	jp     0x40e1c2
  40e1b1:	mov    WORD PTR [esi-0x4b],?
  40e1b4:	das    
  40e1b5:	sub    BYTE PTR [eax-0x1eb9bb7c],bh
  40e1bb:	mov    esi,0xcf41e671
  40e1c0:	nop
  40e1c1:	lahf   
  40e1c2:	jmp    0x772481b5
  40e1c7:	xchg   DWORD PTR [edx],esp
  40e1c9:	sub    DWORD PTR [esi+eax*1-0x27],edx
  40e1cd:	lods   al,BYTE PTR ds:[esi]
  40e1ce:	int    0x23
  40e1d0:	cmp    edi,eax
  40e1d2:	xchg   ecx,eax
  40e1d3:	or     esi,0x4a
  40e1d6:	cwde   
  40e1d7:	dec    ebp
  40e1d8:	jns    0x40e220
  40e1da:	stc    
  40e1db:	sbb    al,0xdd
  40e1dd:	stos   BYTE PTR es:[edi],al
  40e1de:	dec    BYTE PTR [ecx+0x5eafbe28]
  40e1e4:	stos   DWORD PTR es:[edi],eax
  40e1e5:	cld    
  40e1e6:	ins    BYTE PTR es:[edi],dx
  40e1e7:	push   0xd5e9782d
  40e1ec:	inc    esp
  40e1ed:	jae    0x40e201
  40e1ef:	add    eax,0xd8d368a
  40e1f4:	add    DWORD PTR [ebp-0x6a154271],edx
  40e1fa:	or     BYTE PTR [esi-0x4cb71b69],cl
  40e200:	add    eax,DWORD PTR [edi]
  40e202:	push   edx
  40e203:	mov    ebx,0x3b499e8d
  40e208:	jg     0x40e278
  40e20a:	xor    cl,bl
  40e20c:	fdivr  QWORD PTR [ecx-0x67]
  40e20f:	xchg   edi,eax
  40e210:	or     ah,BYTE PTR [ebx+0x5790e8d2]
  40e216:	pushf  
  40e217:	fidivr DWORD PTR ds:0x41de0a4f
  40e21d:	and    DWORD PTR [edx+0x3bbb147c],esi
  40e223:	mov    al,0x95
  40e225:	call   0x64e5:0xfed23295
  40e22c:	mov    dh,0x6d
  40e22e:	stos   BYTE PTR es:[edi],al
  40e22f:	adc    eax,0x4cc7581b
  40e234:	in     eax,dx
  40e235:	loopne 0x40e236
  40e237:	and    ebx,esp
  40e239:	repnz ins BYTE PTR es:[edi],dx
  40e23b:	loope  0x40e214
  40e23d:	ficomp WORD PTR [esi-0x47]
  40e240:	fsub   QWORD PTR [edi-0x245efe4a]
  40e246:	je     0x40e1e7
  40e248:	and    DWORD PTR [esi+0x3b],ecx
  40e24b:	sbb    DWORD PTR [ebx+0x15],eax
  40e24e:	jmp    0xc82d969e
  40e253:	dec    esp
  40e254:	or     BYTE PTR [ecx-0x22a1c61a],ch
  40e25a:	fs sbb ax,0xfa13
  40e25f:	and    eax,ecx
  40e261:	mov    ds:0xeb1846e7,al
  40e266:	imul   eax,DWORD PTR [ecx+0x75],0xffffff9f
  40e26a:	call   0xe73833a4
  40e26f:	ret    0x6659
  40e272:	mov    dh,0xf1
  40e274:	jmp    0x40e292
  40e276:	sar    BYTE PTR [ecx-0x1ceb2770],0xe1
  40e27d:	fiadd  DWORD PTR [esp+ebp*8-0x77]
  40e281:	mov    esp,0x72f7cdc
  40e286:	or     DWORD PTR [edx],ebx
  40e288:	mul    DWORD PTR [edi-0x57]
  40e28b:	fsubr  st(1),st
  40e28d:	or     BYTE PTR [ebx],al
  40e28f:	adc    esp,edi
  40e291:	adc    al,dh
  40e293:	int    0xfb
  40e295:	cmp    DWORD PTR [edi-0x2a1507cd],esi
  40e29b:	add    ecx,esp
  40e29d:	push   es
  40e29e:	hlt    
  40e29f:	cmp    edi,DWORD PTR [edx]
  40e2a1:	scas   eax,DWORD PTR es:[edi]
  40e2a2:	mov    ebp,0xefd79a5a
  40e2a7:	xchg   BYTE PTR [edx+0x7d],dh
  40e2aa:	scas   eax,DWORD PTR es:[edi]
  40e2ab:	out    dx,eax
  40e2ac:	or     al,0x3a
  40e2ae:	and    BYTE PTR cs:[eax-0x64],cl
  40e2b2:	test   BYTE PTR [eax-0x7689fea0],bh
  40e2b8:	inc    edi
  40e2b9:	addr16 cmc 
  40e2bb:	fild   QWORD PTR [ecx+eiz*4+0x1ec5f3ca]
  40e2c2:	mov    ecx,ds
  40e2c4:	fcomi  st,st(0)
  40e2c6:	adc    ecx,ebx
  40e2c8:	fwait
  40e2c9:	dec    ecx
  40e2ca:	lods   al,BYTE PTR gs:[esi]
  40e2cc:	mov    dh,0xf5
  40e2ce:	cld    
  40e2cf:	pop    edi
  40e2d0:	add    BYTE PTR [ebx+0x31e9e8a1],cl
  40e2d6:	push   edi
  40e2d7:	outs   dx,BYTE PTR ds:[esi]
  40e2d8:	xchg   ebx,eax
  40e2d9:	mov    al,BYTE PTR [ebx]
  40e2db:	fwait
  40e2dc:	pop    edx
  40e2dd:	addps  xmm4,XMMWORD PTR [ebp+esi*4-0x21397f85]
  40e2e5:	int3   
  40e2e6:	jmp    0x9ce1caa5
  40e2eb:	aaa    
  40e2ec:	out    dx,al
  40e2ed:	xlat   BYTE PTR ds:[ebx]
  40e2ee:	mov    eax,0x43723d14
  40e2f3:	mov    ecx,0x1b29d23
  40e2f8:	ret    0x9a53
  40e2fb:	mov    WORD PTR [ecx-0x72],fs
  40e2fe:	xchg   edi,eax
  40e2ff:	and    DWORD PTR [eax-0x63],eax
  40e302:	repnz mov al,0xc2
  40e305:	popf   
  40e306:	cwde   
  40e307:	aam    0x32
  40e309:	hlt    
  40e30a:	add    DWORD PTR [edi],eax
  40e30c:	mov    ch,0xdc
  40e30e:	cmc    
  40e30f:	stos   BYTE PTR es:[edi],al
  40e310:	fsubr  DWORD PTR [ebp+0x407ed45a]
  40e316:	add    DWORD PTR [edx+0xa],edx
  40e319:	lock fcom DWORD PTR [ecx-0x30]
  40e31d:	push   0x8e14e5cc
  40e322:	sbb    DWORD PTR [eax-0x2c],0xaad3e4c3
  40e329:	test   BYTE PTR [ebx-0x18c86715],cl
  40e32f:	cmp    DWORD PTR [eax],ebp
  40e331:	and    eax,0xac52f5c9
  40e336:	aam    0xf
  40e338:	cld    
  40e339:	(bad)  
  40e33b:	pop    esi
  40e33d:	adc    eax,0x8727bfa9
  40e342:	xbegin 0x6f7df231
  40e348:	test   DWORD PTR cs:[ebp-0xd503ecf],ebp
  40e34f:	shl    eax,cl
  40e351:	mov    ebx,0xc57a2994
  40e356:	mov    ecx,0x5d7084c7
  40e35b:	ds ds mov ch,0x18
  40e35f:	fcom   DWORD PTR [eax]
  40e361:	fmul   QWORD PTR [ebx+0x348d34e]
  40e367:	mov    ah,dl
  40e369:	jle    0x40e370
  40e36b:	or     edi,ecx
  40e36d:	rol    BYTE PTR [eax],1
  40e36f:	loop   0x40e34c
  40e371:	cmp    DWORD PTR [ecx-0x1b],ecx
  40e374:	dec    esp
  40e375:	push   ebp
  40e376:	sahf   
  40e377:	mov    esi,0xb89c4beb
  40e37c:	jle    0x40e3ac
  40e37e:	call   0xe145:0x18e4d73a
  40e385:	jns    0x40e35d
  40e387:	mov    esp,0x8f05b340
  40e38c:	mov    cl,0x75
  40e38e:	and    bh,BYTE PTR [ebp+0x171b3007]
  40e394:	sti    
  40e395:	inc    esi
  40e396:	cmp    al,0x30
  40e398:	cli    
  40e399:	icebp  
  40e39a:	mov    dl,0x2a
  40e39c:	popa   
  40e39d:	inc    ebp
  40e39e:	retf   0xdc0b
  40e3a1:	rcr    DWORD PTR [edi],0x9a
  40e3a4:	int3   
  40e3a5:	lods   al,BYTE PTR ds:[esi]
  40e3a6:	sar    BYTE PTR [eax-0x51471a68],cl
  40e3ac:	adc    eax,DWORD PTR [ebp+0x76d0104c]
  40e3b2:	cmp    DWORD PTR [edx],edx
  40e3b4:	mov    ecx,fs
  40e3b6:	ds js  0x40e423
  40e3b9:	xor    DWORD PTR [edx+0x36ab05b2],eax
  40e3bf:	adc    al,0x8b
  40e3c1:	out    dx,al
  40e3c2:	add    ch,dl
  40e3c4:	jmp    0x7bbc9cf8
  40e3c9:	push   esp
  40e3ca:	neg    DWORD PTR [edi-0x43e8b7a5]
  40e3d0:	rcl    DWORD PTR [edi-0x470ce758],cl
  40e3d6:	je     0x40e392
  40e3d8:	dec    esp
  40e3d9:	leave  
  40e3da:	sub    cl,cl
  40e3dc:	fbld   TBYTE PTR [ebx]
  40e3de:	add    dl,dl
  40e3e0:	inc    eax
  40e3e1:	or     al,BYTE PTR [ebp+0x4f456ce7]
  40e3e7:	jl     0x40e3b7
  40e3e9:	push   ebx
  40e3ea:	sar    DWORD PTR [esp+edi*8+0x13],0x85
  40e3ef:	je     0x40e3c7
  40e3f1:	ret    
  40e3f2:	xor    al,0x18
  40e3f4:	or     edi,esi
  40e3f6:	jmp    0x40e429
  40e3f8:	adc    eax,0x763e9e3
  40e3fd:	xchg   ecx,eax
  40e3fe:	dec    esp
  40e3ff:	mov    WORD PTR [esi],ss
  40e401:	dec    esp
  40e402:	and    DWORD PTR cs:[edi+ebx*8],esp
  40e406:	cld    
  40e407:	jecxz  0x40e470
  40e409:	and    cl,BYTE PTR [edi+ebx*1+0x35298256]
  40e410:	xchg   esp,eax
  40e411:	dec    ebx
  40e412:	xchg   edx,eax
  40e413:	stos   BYTE PTR es:[edi],al
  40e414:	push   edx
  40e415:	dec    ebp
  40e416:	dec    esp
  40e417:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e418:	add    ch,ch
  40e41a:	inc    eax
  40e41b:	gs lahf 
  40e41d:	inc    edx
  40e41e:	add    eax,DWORD PTR [eax+0x0]
  40e421:	rol    DWORD PTR [ebx],cl
  40e423:	test   bl,cl
  40e425:	lods   al,BYTE PTR ds:[esi]
  40e426:	or     eax,0x16eeea70
  40e42b:	pop    esp
  40e42c:	push   eax
  40e42d:	adc    BYTE PTR [esi-0xd],ah
  40e430:	inc    esp
  40e431:	outs   dx,BYTE PTR ds:[esi]
  40e432:	bnd jl 0x40e40d
  40e435:	or     eax,0x4a4690b1
  40e43a:	sbb    ecx,ebx
  40e43c:	cli    
  40e43d:	shr    BYTE PTR [ebx],cl
  40e43f:	bound  ebp,QWORD PTR [esi-0x2df38588]
  40e445:	outs   dx,DWORD PTR ds:[esi]
  40e446:	adc    DWORD PTR [esi-0x6a],esi
  40e449:	mov    ds,WORD PTR [edx]
  40e44b:	not    DWORD PTR [edi-0x47]
  40e44e:	cli    
  40e44f:	cmp    DWORD PTR [eax-0x26],eax
  40e452:	fwait
  40e453:	jns    0x40e490
  40e455:	cli    
  40e456:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e457:	xor    BYTE PTR [ecx+eax*8-0x2c37bbd2],bh
  40e45e:	out    0x78,al
  40e460:	repnz (bad) 
  40e462:	test   BYTE PTR [eax],cl
  40e464:	in     al,dx
  40e465:	inc    eax
  40e466:	pop    ss
  40e467:	sbb    esi,ebx
  40e469:	add    esp,DWORD PTR [edx]
  40e46b:	shr    BYTE PTR [eax],cl
  40e46d:	dec    esp
  40e46e:	xchg   esi,eax
  40e46f:	or     BYTE PTR [edi+0x6c9bfd4e],dl
  40e475:	cs mov dl,0x14
  40e478:	sub    DWORD PTR [edi-0x606e9a7b],esi
  40e47e:	fisubr DWORD PTR [eax*2-0x435ef518]
  40e485:	push   dx
  40e487:	int    0xd7
  40e489:	fist   DWORD PTR [ebp+eiz*2+0x4af10fd8]
  40e490:	cmovae ebp,DWORD PTR [esi+edi*1-0x66be789d]
  40e498:	mov    bl,0xfa
  40e49a:	aad    0x6e
  40e49c:	rcl    DWORD PTR [ecx+0x676b2a35],0x74
  40e4a3:	xor    eax,0xb1ec29f4
  40e4a8:	mov    ebx,DWORD PTR [esi-0x4b]
  40e4ab:	call   0x2a865736
  40e4b0:	clc    
  40e4b1:	add    esi,edi
  40e4b3:	push   ecx
  40e4b4:	stos   DWORD PTR es:[edi],eax
  40e4b5:	cdq    
  40e4b6:	imul   BYTE PTR [esi-0x5f]
  40e4b9:	in     eax,0x9f
  40e4bb:	xor    BYTE PTR [ebp-0x30761771],0x77
  40e4c2:	leave  
  40e4c3:	mov    eax,0x77775589
  40e4c8:	outs   dx,DWORD PTR ds:[esi]
  40e4c9:	ins    BYTE PTR es:[edi],dx
  40e4ca:	xchg   ebx,eax
  40e4cb:	div    BYTE PTR [eax-0x7f]
  40e4ce:	jmp    FWORD PTR [eax]
  40e4d0:	dec    ecx
  40e4d1:	xchg   ebp,eax
  40e4d2:	sub    BYTE PTR [eax+0x58],bl
  40e4d5:	xchg   esp,eax
  40e4d6:	nop
  40e4d7:	shl    BYTE PTR [ebp+0x390d7ae8],0xf4
  40e4de:	adc    DWORD PTR [ebp+0x2f663648],0xffffff82
  40e4e5:	jbe    0x40e4cf
  40e4e7:	das    
  40e4e8:	mov    dl,0x83
  40e4ea:	xor    eax,DWORD PTR [eax+0x54e650b5]
  40e4f0:	sub    ebp,DWORD PTR [ebp+0x4d7a0360]
  40e4f6:	adc    DWORD PTR [ecx-0x7b09df31],esp
  40e4fc:	jae    0x40e4ac
  40e4fe:	hlt    
  40e4ff:	sahf   
  40e500:	fldcw  WORD PTR [edx-0x14945872]
  40e506:	cmp    BYTE PTR [esi],al
  40e508:	mov    edi,0x23dcd530
  40e50d:	jp     0x40e4f8
  40e50f:	sbb    edi,DWORD PTR [ebx-0x5b]
  40e512:	lock mov ebp,0xf6ca6a77
  40e518:	jg     0x40e49b
  40e51a:	arpl   WORD PTR [ebx-0x17],cx
  40e51d:	out    0x81,al
  40e51f:	jp     0x40e523
  40e521:	or     bh,BYTE PTR [eax-0x7d]
  40e524:	jmp    0xdcb00284
  40e529:	arpl   WORD PTR [eax+0x21],ax
  40e52c:	xchg   ecx,eax
  40e52d:	out    0xe7,al
  40e52f:	add    eax,0xc6797227
  40e534:	mov    ebp,0x9171b412
  40e539:	mov    ds:0x23ab7961,al
  40e53e:	jmp    0x5c9e328c
  40e543:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40e545:	cmp    al,0xd2
  40e547:	pop    edi
  40e548:	mov    ebp,DWORD PTR [ecx-0x39243c27]
  40e54e:	cmc    
  40e54f:	call   0x3a9ac31e
  40e554:	es fcmovnb st,st(2)
  40e557:	mov    bl,0xe0
  40e559:	xor    al,0x3d
  40e55b:	shl    bh,1
  40e55d:	mov    ah,0x46
  40e55f:	xchg   BYTE PTR [ebx],cl
  40e561:	and    BYTE PTR [edx+esi*2+0x48],bl
  40e565:	and    eax,0xc0ab4458
  40e56a:	cmp    eax,0x15a9dbe
  40e56f:	mov    edx,ss
  40e571:	push   edi
  40e572:	or     esi,DWORD PTR [eax+esi*4+0x4bd6b946]
  40e579:	sub    eax,0x53b57d98
  40e57e:	aas    
  40e57f:	out    0xbd,al
  40e581:	les    ecx,FWORD PTR [esi]
  40e583:	push   esp
  40e584:	ficomp WORD PTR [ecx]
  40e586:	dec    ebx
  40e587:	sbb    dh,dh
  40e589:	or     eax,0x6b24cf7f
  40e58e:	inc    ebp
  40e58f:	scas   eax,DWORD PTR es:[edi]
  40e590:	dec    ebp
  40e591:	or     DWORD PTR [esp+edi*8+0x9eb9b21],ecx
  40e598:	jnp    0x40e5ed
  40e59a:	js     0x40e5da
  40e59c:	ja     0x40e579
  40e59e:	fstp   TBYTE PTR [ebp-0x1b]
  40e5a1:	pop    ecx
  40e5a2:	jno    0x40e525
  40e5a4:	ds cwde 
  40e5a6:	and    DWORD PTR [ebx-0x64],0xffffffca
  40e5aa:	je     0x40e552
  40e5ac:	push   0x16368fac
  40e5b1:	xor    edx,DWORD PTR [eax]
  40e5b3:	(bad)  
  40e5b4:	ffreep st(1)
  40e5b6:	push   ebp
  40e5b7:	pop    edi
  40e5b8:	sub    al,BYTE PTR [ebx]
  40e5ba:	repz sbb eax,0x4b46282f
  40e5c0:	xchg   edx,eax
  40e5c1:	ja     0x40e5f9
  40e5c3:	icebp  
  40e5c4:	aam    0xc
  40e5c6:	inc    ebx
  40e5c7:	dec    ebx
  40e5c8:	addr16 pop edx
  40e5ca:	push   edi
  40e5cb:	adc    eax,0x9d37cef0
  40e5d0:	mov    ebp,0xcb3f38b5
  40e5d5:	loopne 0x40e591
  40e5d7:	inc    edx
  40e5d8:	xchg   sp,ax
  40e5da:	sbb    edx,ebp
  40e5dc:	adc    DWORD PTR [esi],esp
  40e5de:	pop    eax
  40e5df:	dec    ebp
  40e5e0:	fmul   QWORD PTR [ebx]
  40e5e2:	std    
  40e5e3:	jp     0x40e594
  40e5e5:	repnz nop
  40e5e7:	(bad)
  40e5ea:	cmp    eax,0x1641cfcd
  40e5ef:	lock lahf 
  40e5f1:	es dec ecx
  40e5f3:	add    eax,0x47131450
  40e5f8:	jge    0x40e595
  40e5fa:	xor    eax,0x76647ddc
  40e5ff:	repnz rcr DWORD PTR [ebx+0x69dbb392],1
  40e606:	(bad)  
  40e607:	sti    
  40e608:	fs pop ebx
  40e60a:	add    bh,ah
  40e60c:	sub    cl,BYTE PTR [edx-0x63]
  40e60f:	xchg   esi,eax
  40e610:	mov    ecx,DWORD PTR [edi+0x3b69fa9e]
  40e616:	imul   esi,esi,0xffffffdf
  40e619:	popf   
  40e61a:	xor    BYTE PTR [edx+eax*4+0x48],bl
  40e61e:	(bad)  
  40e61f:	in     eax,dx
  40e620:	retf   
  40e621:	fimul  DWORD PTR [ebp+0x2a]
  40e624:	push   es
  40e625:	inc    esp
  40e626:	in     al,dx
  40e627:	push   cs
  40e628:	jbe    0x40e65a
  40e62a:	xlat   BYTE PTR ds:[ebx]
  40e62b:	daa    
  40e62c:	dec    ebx
  40e62d:	sbb    edi,DWORD PTR [esi+0x73a67e7e]
  40e633:	xor    DWORD PTR [edx-0x27],esi
  40e636:	daa    
  40e637:	popa   
  40e638:	inc    ebp
  40e639:	cs repz push 0x12
  40e63d:	mov    esi,edi
  40e63f:	lds    edx,FWORD PTR [esi+0x6f368e55]
  40e645:	xchg   edi,eax
  40e646:	mov    eax,ds:0xa83c2911
  40e64b:	data16 stos BYTE PTR es:[edi],al
  40e64d:	and    ebx,DWORD PTR [edx-0xa5c0e30]
  40e653:	mov    BYTE PTR [ebx-0xb],cl
  40e656:	stc    
  40e657:	or     edx,esi
  40e659:	xlat   BYTE PTR ds:[ebx]
  40e65a:	sahf   
  40e65b:	js     0x40e6c8
  40e65d:	dec    ebp
  40e65e:	mov    al,0x2f
  40e660:	sar    DWORD PTR [ebx-0x53],1
  40e663:	mov    BYTE PTR cs:[esi],ah
  40e666:	mov    eax,0xadee6546
  40e66b:	fwait
  40e66c:	push   ecx
  40e66d:	loopne 0x40e6d5
  40e66f:	adc    bh,BYTE PTR [edi+0x2dcc537e]
  40e675:	(bad)  
  40e676:	jb     0x40e607
  40e678:	adc    edi,DWORD PTR [esi+eax*2+0x3d360b59]
  40e67f:	jnp    0x40e6bf
  40e681:	fs adc eax,0x7f539b49
  40e687:	nop
  40e688:	cwde   
  40e689:	scas   al,BYTE PTR es:[edi]
  40e68a:	jae    0x40e671
  40e68c:	mov    ecx,0x23fa2e37
  40e691:	adc    ah,dl
  40e693:	or     eax,0x1e2363e3
  40e698:	(bad)  
  40e699:	pop    esi
  40e69a:	jo     0x40e68d
  40e69c:	pop    ss
  40e69d:	jb     0x40e678
  40e69f:	pop    es
  40e6a0:	bound  ecx,QWORD PTR [esi+ebx*8]
  40e6a3:	xchg   esp,esi
  40e6a5:	mov    ah,0xdc
  40e6a7:	lock cmp eax,0xf97b974f
  40e6ad:	shr    DWORD PTR [eax+ebp*1],0xc5
  40e6b1:	lods   al,BYTE PTR ds:[esi]
  40e6b2:	cwde   
  40e6b3:	pop    ecx
  40e6b4:	pop    eax
  40e6b5:	ror    DWORD PTR [esi+ebx*2+0x59],cl
  40e6b9:	jns    0x40e737
  40e6bb:	dec    ebx
  40e6bc:	cmp    ebp,DWORD PTR [ecx-0x5ab26bd2]
  40e6c2:	inc    esi
  40e6c3:	adc    BYTE PTR [ebp+0x14cad5e3],ch
  40e6c9:	sbb    al,BYTE PTR ds:0xc377c634
  40e6cf:	add    BYTE PTR [ecx-0x77551cd9],dh
  40e6d5:	in     al,dx
  40e6d6:	push   ebp
  40e6d7:	ret    0x218
  40e6da:	bound  eax,QWORD PTR [edx+0x53d7080a]
  40e6e0:	ins    DWORD PTR es:[edi],dx
  40e6e1:	mov    WORD PTR [eax],cs
  40e6e3:	and    BYTE PTR [ebx],ch
  40e6e5:	inc    ebx
  40e6e6:	and    edi,esi
  40e6e8:	push   es
  40e6e9:	lahf   
  40e6ea:	dec    edi
  40e6eb:	add    dh,cl
  40e6ed:	push   edx
  40e6ee:	xadd   BYTE PTR [ebp-0x3623eb47],dl
  40e6f5:	mov    cl,0x28
  40e6f7:	bnd jg 0x40e729
  40e6fa:	aad    0xec
  40e6fc:	and    ch,BYTE PTR [esi+ebx*2-0x558c05d5]
  40e703:	jecxz  0x40e74d
  40e705:	inc    edx
  40e706:	pop    edx
  40e707:	(bad)  
  40e708:	aad    0xa8
  40e70a:	push   ss
  40e70b:	out    dx,al
  40e70c:	pop    ebx
  40e70d:	mov    ebx,DWORD PTR [ebx+0x5e66306c]
  40e713:	mov    ebp,0x88993cd4
  40e718:	cwde   
  40e719:	into   
  40e71a:	mov    ebp,0x3c16db0b
  40e71f:	xchg   ebx,eax
  40e720:	aaa    
  40e721:	sbb    eax,0xdef06493
  40e726:	sbb    dl,BYTE PTR [ebx]
  40e728:	xlat   BYTE PTR ds:[ebx]
  40e729:	fucom  st(1)
  40e72b:	jno    0x40e6ef
  40e72d:	imul   eax,DWORD PTR ds:0x9ce07d71,0x3c
  40e734:	and    eax,0xcfe24d0b
  40e739:	pop    eax
  40e73a:	xor    ebx,edx
  40e73c:	jmp    0x291:0x497af84
  40e743:	jl     0x40e780
  40e745:	fisubr DWORD PTR [ecx+0x7cdbb2cc]
  40e74b:	icebp  
  40e74c:	fdivr  QWORD PTR [ebx-0x62211f88]
  40e752:	xchg   ebx,eax
  40e753:	mov    esp,0x2bd057e7
  40e758:	icebp  
  40e759:	popa   
  40e75a:	call   0x5281:0x53b64cce
  40e761:	outs   dx,DWORD PTR ds:[esi]
  40e762:	cdq    
  40e763:	push   fs
  40e765:	lods   al,BYTE PTR ds:[esi]
  40e766:	pop    ecx
  40e767:	dec    edi
  40e768:	in     eax,dx
  40e769:	add    BYTE PTR [esi-0x53dbbcc4],cl
  40e76f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e770:	adc    ecx,DWORD PTR ds:0xad9010e2
  40e776:	cmp    ebx,ecx
  40e778:	mov    dl,0x35
  40e77a:	jns    0x40e780
  40e77c:	lock add bl,BYTE PTR [ebx]
  40e77f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e780:	pop    edi
  40e781:	mov    esp,0xbb2b9634
  40e786:	mul    ah
  40e788:	ret    
  40e789:	sub    eax,DWORD PTR ds:0x8205291f
  40e78f:	sbb    DWORD PTR [edi-0xe],0x47
  40e793:	pop    ebp
  40e794:	push   eax
  40e795:	push   ecx
  40e796:	ret    0x419e
  40e799:	xchg   edi,edi
  40e79b:	cld    
  40e79c:	pop    edi
  40e79d:	push   ecx
  40e79e:	sahf   
  40e79f:	ret    0xdc71
  40e7a2:	pop    ds
  40e7a3:	mov    es,WORD PTR [ebx]
  40e7a5:	shl    DWORD PTR [ecx-0x42c9956],1
  40e7ab:	into   
  40e7ac:	cmp    DWORD PTR [ebp+0x15],edi
  40e7af:	pushf  
  40e7b0:	mov    dl,0x69
  40e7b2:	fmul   QWORD PTR [ecx]
  40e7b4:	scas   al,BYTE PTR es:[edi]
  40e7b5:	pop    ds
  40e7b6:	aad    0x20
  40e7b8:	dec    esi
  40e7b9:	imul   esp,DWORD PTR [ecx-0x30ef417b],0x246e72a
  40e7c3:	leave  
  40e7c4:	sub    al,0x27
  40e7c6:	xor    al,0xd2
  40e7c8:	or     esi,DWORD PTR [edi+edx*8]
  40e7cb:	mov    cl,0xd4
  40e7cd:	hlt    
  40e7ce:	out    dx,al
  40e7cf:	imul   edx,DWORD PTR [ebx+0x4528c27a],0xffffffc4
  40e7d6:	xor    BYTE PTR [edx],bl
  40e7d8:	fisub  DWORD PTR [eax-0x73]
  40e7db:	leave  
  40e7dc:	push   esi
  40e7dd:	fdivp  st(4),st
  40e7df:	pop    esp
  40e7e0:	ins    BYTE PTR es:[edi],dx
  40e7e1:	mov    al,BYTE PTR [ecx]
  40e7e3:	inc    esp
  40e7e4:	scas   al,BYTE PTR es:[edi]
  40e7e5:	mov    bl,0x53
  40e7e7:	dec    esi
  40e7e8:	pop    ecx
  40e7e9:	pop    esi
  40e7ea:	cmp    ah,BYTE PTR [eax+edi*1+0x75869ded]
  40e7f1:	adc    BYTE PTR [edx],cl
  40e7f3:	cld    
  40e7f4:	fistp  QWORD PTR [eax+0x5c]
  40e7f7:	stc    
  40e7f8:	sub    cl,BYTE PTR [eax]
  40e7fa:	cwde   
  40e7fb:	jne    0x40e84c
  40e7fd:	out    0x81,eax
  40e7ff:	gs into 
  40e801:	adc    al,0x29
  40e803:	jo     0x40e877
  40e805:	mov    esp,0x643908f
  40e80a:	rol    cl,0xba
  40e80d:	test   eax,0x4eb73d41
  40e812:	dec    ebx
  40e813:	sub    DWORD PTR [ebx+0x57e2818],edi
  40e819:	nop
  40e81a:	jle    0x40e80e
  40e81c:	ror    BYTE PTR [edi-0x4b20c1a2],1
  40e822:	or     eax,0x1230a6cd
  40e827:	and    al,0xb2
  40e829:	outs   dx,DWORD PTR ds:[esi]
  40e82a:	cs push edx
  40e82c:	mov    DWORD PTR [eax+esi*4],edx
  40e82f:	pop    edx
  40e830:	and    al,0xfc
  40e832:	push   edx
  40e833:	jmp    FWORD PTR [ecx]
  40e835:	sbb    DWORD PTR [edx],ebx
  40e837:	push   cs
  40e838:	xchg   esi,eax
  40e839:	mov    al,ds:0x33d4f48d
  40e83e:	mov    al,ds:0x4ee9997
  40e843:	call   0x8a91:0xd4f03b6c
  40e84a:	aaa    
  40e84b:	adc    al,BYTE PTR [edi]
  40e84d:	ficom  DWORD PTR [edx+ebp*1+0xb26cf11]
  40e854:	cs jae 0x40e7ff
  40e857:	pop    eax
  40e858:	or     bl,BYTE PTR [edx]
  40e85a:	push   0xffffffe5
  40e85c:	mov    ebx,0x5a1e8f9d
  40e861:	test   al,0x5d
  40e863:	popa   
  40e864:	mov    al,ds:0xc8b971a7
  40e869:	and    al,0xf6
  40e86b:	das    
  40e86c:	inc    ebx
  40e86d:	sti    
  40e86e:	or     eax,0x6721b0a1
  40e873:	aaa    
  40e874:	xor    DWORD PTR [ecx-0x33fda087],ecx
  40e87a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e87b:	lock sbb DWORD PTR ds:0xfe29bbd,esp
  40e882:	repnz repnz test DWORD PTR [ebx+ebx*8+0x16],ebp
  40e888:	mov    ecx,0x46d9241d
  40e88d:	shr    ebx,1
  40e88f:	mov    ecx,0x7fe15325
  40e894:	push   esp
  40e895:	cwde   
  40e896:	outs   dx,BYTE PTR ds:[esi]
  40e897:	sbb    cl,bh
  40e899:	mov    eax,ds:0x76bc3e63
  40e89e:	xchg   ecx,eax
  40e89f:	fiadd  WORD PTR [edi-0x49]
  40e8a2:	aam    0x1
  40e8a4:	add    BYTE PTR [ebp-0x7c],ch
  40e8a7:	lods   al,BYTE PTR ds:[esi]
  40e8a8:	mov    al,ds:0x514cd61c
  40e8ad:	enter  0xc6e6,0x36
  40e8b1:	data16 jecxz 0x40e857
  40e8b4:	loope  0x40e923
  40e8b6:	dec    esp
  40e8b7:	dec    ebp
  40e8b8:	sub    DWORD PTR [edi+0x51],ecx
  40e8bb:	mov    dh,0x18
  40e8bd:	add    al,0x2b
  40e8bf:	fwait
  40e8c0:	aaa    
  40e8c1:	and    BYTE PTR [eax-0x3d31df44],dl
  40e8c7:	aad    0x44
  40e8c9:	dec    ebp
  40e8ca:	adc    ah,0x4
  40e8cd:	stos   DWORD PTR es:[edi],eax
  40e8ce:	pop    esi
  40e8cf:	add    DWORD PTR [ecx],eax
  40e8d1:	jno    0x40e8f3
  40e8d3:	leave  
  40e8d4:	test   eax,0x70f661ac
  40e8d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8da:	pusha  
  40e8db:	inc    eax
  40e8dc:	push   esi
  40e8dd:	jg     0x40e905
  40e8df:	arpl   WORD PTR [ecx-0x3a],bx
  40e8e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8e3:	lods   al,BYTE PTR ds:[esi]
  40e8e4:	lahf   
  40e8e5:	clc    
  40e8e6:	xlat   BYTE PTR ds:[ebx]
  40e8e7:	adc    BYTE PTR [edi+0x562a37d9],al
  40e8ed:	adc    bl,BYTE PTR ds:0x92369c55
  40e8f3:	fdiv   QWORD PTR [esi-0x6ca798f1]
  40e8f9:	pop    esp
  40e8fa:	jb     0x40e8c7
  40e8fc:	test   eax,0x6d208311
  40e901:	clc    
  40e902:	xchg   esi,eax
  40e903:	pop    ss
  40e904:	adc    bh,BYTE PTR [edx+0x386003f8]
  40e90a:	and    eax,0x862ded43
  40e90f:	push   ecx
  40e910:	inc    ecx
  40e911:	pop    ss
  40e912:	sub    bh,dl
  40e914:	clc    
  40e915:	rol    BYTE PTR [edi],cl
  40e917:	or     eax,0x15b59409
  40e91c:	out    0x64,eax
  40e91e:	sahf   
  40e91f:	arpl   WORD PTR [edx-0x9],sp
  40e922:	jnp    0x40e99b
  40e924:	fs loopne 0x40e8ce
  40e927:	xor    bh,BYTE PTR ds:0xf81d7c5d
  40e92d:	stos   DWORD PTR es:[edi],eax
  40e92e:	sub    al,0x21
  40e930:	mov    edx,esp
  40e932:	pop    ss
  40e933:	call   0x990d10ec
  40e938:	sub    edx,DWORD PTR [esi-0x5f2a5360]
  40e93e:	pushf  
  40e93f:	adc    DWORD PTR [eax+0xcb0c86f],esp
  40e945:	pop    ecx
  40e946:	das    
  40e947:	psubb  mm2,QWORD PTR [ecx-0x12de870c]
  40e94e:	jbe    0x40e8d9
  40e950:	xchg   BYTE PTR [ebp+0x5cf8b201],ah
  40e956:	dec    eax
  40e957:	mov    bl,0xb4
  40e959:	cmc    
  40e95a:	loop   0x40e8f9
  40e95c:	dec    esp
  40e95d:	mov    bh,0x69
  40e95f:	add    esi,DWORD PTR [ebx+0x28]
  40e962:	cmc    
  40e963:	or     bl,bh
  40e965:	aam    0xb5
  40e967:	dec    ebp
  40e968:	sub    BYTE PTR [ebx-0xd4ff6e5],ch
  40e96e:	sub    DWORD PTR [eax+0x238dfb2a],esi
  40e974:	ret    
  40e975:	(bad)  
  40e977:	push   edx
  40e978:	sbb    eax,0x77a1e077
  40e97d:	rcl    BYTE PTR [esi],0x18
  40e980:	loope  0x40e9ed
  40e982:	push   edx
  40e983:	ds mov edi,0x784440e4
  40e989:	cmp    DWORD PTR [eax+0x89d16c5],esi
  40e98f:	dec    esi
  40e990:	loopne 0x40e954
  40e992:	jge    0x40e9f9
  40e994:	test   eax,0xd6ae1224
  40e999:	pop    ss
  40e99a:	or     al,0xe9
  40e99c:	lea    esi,[eax+0x51]
  40e99f:	out    0x65,eax
  40e9a1:	fist   WORD PTR ds:0x914f47b9
  40e9a7:	into   
  40e9a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9a9:	cli    
  40e9aa:	cmc    
  40e9ab:	mov    eax,ds:0x4a880050
  40e9b0:	fst    QWORD PTR [esi-0x6fec26f4]
  40e9b6:	adc    edx,DWORD PTR [ecx]
  40e9b8:	in     al,0x6e
  40e9ba:	dec    ebx
  40e9bb:	mov    edx,0xf24cf520
  40e9c0:	pop    es
  40e9c1:	or     al,bh
  40e9c3:	shl    BYTE PTR [ecx-0x722a7753],1
  40e9c9:	lods   al,BYTE PTR ds:[esi]
  40e9ca:	jl     0x40ea16
  40e9cc:	push   ecx
  40e9cd:	mov    ebp,DWORD PTR [eax]
  40e9cf:	dec    ebx
  40e9d0:	sbb    ecx,DWORD PTR [esp+ebx*1]
  40e9d3:	sub    cl,cl
  40e9d5:	test   BYTE PTR [esi+0x501e3680],cl
  40e9db:	push   edx
  40e9dc:	sbb    DWORD PTR [edi],edi
  40e9de:	add    dh,BYTE PTR [esi-0x427c5760]
  40e9e4:	dec    ebx
  40e9e5:	push   0x4d
  40e9e7:	adc    al,0x52
  40e9e9:	adc    DWORD PTR [ebp+0xe61d45e],ecx
  40e9ef:	jmp    0x4736:0xe41691e8
  40e9f6:	and    al,0x8
  40e9f8:	mov    esi,0x5e4e05a0
  40e9fd:	pop    edi
  40e9fe:	fistp  QWORD PTR [edi]
  40ea00:	xor    al,dl
  40ea02:	sbb    DWORD PTR [ebp+0x3e],edi
  40ea05:	stos   BYTE PTR es:[edi],al
  40ea06:	and    ecx,DWORD PTR [edx+0x773275b6]
  40ea0c:	fdiv   QWORD PTR [edx+0x106b805a]
  40ea12:	pop    esp
  40ea13:	shl    BYTE PTR [edi+0x45684fe8],cl
  40ea19:	(bad)  
  40ea1a:	mov    BYTE PTR [ebp+0x43],0x43
  40ea1e:	mov    dh,0x29
  40ea20:	mov    fs,WORD PTR [edx]
  40ea22:	(bad)  
  40ea23:	inc    DWORD PTR [ecx-0x6dc626d9]
  40ea29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea2a:	(bad)  
  40ea2b:	rcl    DWORD PTR [edi+0x45c37fe3],cl
  40ea31:	and    ah,BYTE PTR [ebx]
  40ea33:	xchg   esi,eax
  40ea34:	rep stos DWORD PTR es:[edi],eax
  40ea36:	dec    esp
  40ea37:	lods   eax,DWORD PTR ds:[esi]
  40ea38:	and    eax,0x30b05d5
  40ea3d:	gs out 0xe3,eax
  40ea40:	jl     0x40eaa8
  40ea42:	mov    edx,0x6dd1a29c
  40ea47:	fnstenv [ebp+0x53]
  40ea4a:	shr    BYTE PTR ds:0xfa47ce22,1
  40ea50:	popa   
  40ea51:	mov    bl,0x42
  40ea53:	jmp    0x40ea54
  40ea55:	dec    edi
  40ea56:	xchg   ebx,eax
  40ea57:	sbb    bl,bl
  40ea59:	push   ecx
  40ea5a:	mov    fs,WORD PTR [esi+ecx*1-0x4f]
  40ea5e:	shl    DWORD PTR [esi],0xf2
  40ea61:	call   0xe193:0x37511086
  40ea68:	(bad)  
  40ea69:	xor    ebp,esi
  40ea6b:	xor    dl,dh
  40ea6d:	ret    0xee9
  40ea70:	fucomp st(2)
  40ea72:	ins    BYTE PTR es:[edi],dx
  40ea73:	mov    edx,0x1bb58860
  40ea78:	push   ds
  40ea79:	aaa    
  40ea7a:	fldcw  WORD PTR [edx+0x6fa7d632]
  40ea80:	cwde   
  40ea81:	sub    esp,DWORD PTR [edi-0x42]
  40ea84:	pop    esi
  40ea85:	shl    DWORD PTR [esi],cl
  40ea87:	jae    0x40ea81
  40ea89:	mov    ebx,0x785f7d1b
  40ea8e:	(bad)  
  40ea90:	aam    0x48
  40ea92:	rcr    DWORD PTR [ecx-0xe],1
  40ea95:	popa   
  40ea96:	sbb    eax,0x6d382816
  40ea9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea9c:	lods   eax,DWORD PTR ds:[esi]
  40ea9d:	(bad)  
  40ea9f:	push   cs
  40eaa0:	addr16 push eax
  40eaa2:	gs int3 
  40eaa4:	fimul  DWORD PTR [edx+0x2f8515ba]
  40eaaa:	fild   QWORD PTR [esp+eiz*4]
  40eaad:	cmp    dl,ch
  40eaaf:	imul   esi,DWORD PTR [ebp-0x50],0x2b3d76a6
  40eab6:	xchg   ecx,eax
  40eab7:	cmp    DWORD PTR [edi+0x3],edi
  40eaba:	sbb    cx,WORD PTR [edx-0x2b]
  40eabe:	aam    0xb0
  40eac0:	adc    al,0x20
  40eac2:	(bad)  
  40eac3:	xchg   ebx,eax
  40eac4:	aad    0x27
  40eac6:	jnp    0x40eaed
  40eac8:	mov    ecx,0xe017567
  40eacd:	test   al,0x13
  40eacf:	loope  0x40eae3
  40ead1:	out    0xa3,eax
  40ead3:	ins    BYTE PTR es:[edi],dx
  40ead4:	sbb    DWORD PTR [ebp+ebx*8+0x5a],0xffffffee
  40ead9:	mov    BYTE PTR [edi+ecx*2],ah
  40eadc:	bound  esp,QWORD PTR [edx-0x37]
  40eadf:	inc    edx
  40eae0:	iret   
  40eae1:	rcr    DWORD PTR [ebp-0x60],cl
  40eae4:	sub    eax,0x67e6a71a
  40eae9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eaea:	xchg   edi,eax
  40eaeb:	jg     0x40eab1
  40eaed:	sahf   
  40eaee:	adc    al,0xb8
  40eaf0:	pusha  
  40eaf1:	or     al,0xb9
  40eaf3:	xchg   ebp,eax
  40eaf4:	adc    al,0xa6
  40eaf6:	pop    esi
  40eaf7:	xadd   bl,dl
  40eafa:	inc    esp
  40eafb:	rcl    BYTE PTR [ebp-0x44],cl
  40eafe:	or     al,0xb6
  40eb00:	test   eax,0xea6a3e81
  40eb05:	aas    
  40eb06:	imul   edx,DWORD PTR [eax+edx*8+0x12cfe90e],0x4c70e28a
  40eb11:	popf   
  40eb12:	jno    0x40eab8
  40eb14:	mov    ah,0x34
  40eb16:	in     eax,0x83
  40eb18:	ffreep st(7)
  40eb1a:	popa   
  40eb1b:	in     eax,dx
  40eb1c:	xchg   esi,eax
  40eb1d:	push   esi
  40eb1e:	dec    eax
  40eb1f:	dec    ebx
  40eb20:	mov    DWORD PTR [ecx],0x8ca5539f
  40eb26:	sub    al,0x5a
  40eb28:	rol    DWORD PTR [ebp+0x13],0x27
  40eb2c:	inc    ebp
  40eb2d:	call   0x8da7ec4f
  40eb32:	test   eax,0x18894287
  40eb37:	fs jl  0x40eb5b
  40eb3a:	jb     0x40eaf6
  40eb3c:	sub    dl,ch
  40eb3e:	mov    al,0x49
  40eb40:	add    al,0x0
  40eb42:	adc    al,0x11
  40eb44:	mov    eax,ds:0xf475d77c
  40eb49:	in     eax,dx
  40eb4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb4b:	push   esi
  40eb4c:	rol    DWORD PTR [ebp+0x34],1
  40eb4f:	data16 mov cl,0x30
  40eb52:	inc    ebx
  40eb53:	fdiv   QWORD PTR [ebx-0x6e]
  40eb56:	mov    dl,0x1d
  40eb58:	repz xor eax,0xafdce005
  40eb5e:	dec    ecx
  40eb5f:	bound  ecx,QWORD PTR [ecx+ebp*8+0x41d6d516]
  40eb66:	sub    eax,ecx
  40eb68:	jmp    0xf1cfd050
  40eb6d:	adc    cl,BYTE PTR [ecx+0x63]
  40eb70:	sbb    ecx,0x71
  40eb73:	mul    DWORD PTR [eax-0x6b]
  40eb76:	push   cs
  40eb77:	out    0x28,al
  40eb79:	sar    BYTE PTR [edx+0x23],cl
  40eb7c:	repz or esp,DWORD PTR [esi]
  40eb7f:	xlat   BYTE PTR ds:[ebx]
  40eb80:	push   0xff9f0568
  40eb85:	addr16 push es
  40eb87:	push   esp
  40eb88:	mov    ds:0x1e128d1f,eax
  40eb8d:	cmc    
  40eb8e:	xchg   ecx,eax
  40eb8f:	add    eax,0x555361d9
  40eb94:	push   eax
  40eb95:	push   0x4b
  40eb97:	ret    
  40eb98:	ret    0x8335
  40eb9b:	push   0xffffffec
  40eb9d:	cli    
  40eb9e:	xor    BYTE PTR [ebx],0xaa
  40eba1:	xor    eax,0xd8142694
  40eba6:	(bad)  
  40eba7:	adc    ebp,DWORD PTR [ebx+0x58]
  40ebaa:	popa   
  40ebab:	dec    eax
  40ebac:	aad    0xdf
  40ebae:	into   
  40ebaf:	mov    ds,WORD PTR [ebx]
  40ebb1:	into   
  40ebb2:	add    al,0x9d
  40ebb4:	das    
  40ebb5:	test   DWORD PTR [esi+0x4d],edi
  40ebb8:	or     ebx,ebp
  40ebba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebbb:	bound  esp,QWORD PTR [ebx-0x511b5bb4]
  40ebc1:	push   esp
  40ebc2:	xchg   ebx,eax
  40ebc3:	leave  
  40ebc4:	adc    ch,BYTE PTR [ebx]
  40ebc6:	xchg   ebx,eax
  40ebc7:	jl     0x40ebb5
  40ebc9:	push   esp
  40ebca:	scas   al,BYTE PTR es:[edi]
  40ebcb:	push   ebx
  40ebcc:	adc    al,0x32
  40ebce:	pop    ecx
  40ebcf:	jmp    0x9ddc4c4b
  40ebd4:	ins    BYTE PTR es:[edi],dx
  40ebd5:	mov    edi,0x4bdc742a
  40ebda:	stc    
  40ebdb:	repnz push ecx
  40ebdd:	bound  esi,QWORD PTR [esi+ebx*1+0xa]
  40ebe1:	in     al,0xe9
  40ebe3:	sub    al,0x17
  40ebe5:	ja     0x40ebfe
  40ebe7:	hlt    
  40ebe8:	xor    BYTE PTR [ebp+0x3019959e],0xa8
  40ebef:	hlt    
  40ebf0:	fs push ss
  40ebf2:	cdq    
  40ebf3:	addr16 jmp 0x4fb2:0xd20c1190
  40ebfb:	cwde   
  40ebfc:	ret    0xeb06
  40ebff:	jbe    0x40ec3f
  40ec01:	cld    
  40ec02:	lahf   
  40ec03:	mov    eax,0x703d8b8e
  40ec08:	push   0x1ea51256
  40ec0d:	data16 aaa 
  40ec0f:	xchg   ebx,eax
  40ec10:	push   es
  40ec11:	ja     0x40ec52
  40ec13:	mov    ds:0x245430f,eax
  40ec18:	ret    
  40ec19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec1a:	jmp    0x4e12bfd6
  40ec1f:	cmp    eax,0x9772909b
  40ec24:	leave  
  40ec25:	mov    bl,0x64
  40ec27:	(bad)  
  40ec28:	mov    ?,WORD PTR [esp+eax*2-0x13]
  40ec2c:	mov    cl,0x2
  40ec2e:	ret    0x37d3
  40ec31:	jg     0x40ebbb
  40ec33:	stos   DWORD PTR es:[edi],eax
  40ec34:	xchg   esi,eax
  40ec35:	loopne 0x40ecae
  40ec37:	xchg   edx,eax
  40ec38:	mov    dh,0x57
  40ec3a:	or     ebx,esp
  40ec3c:	sbb    al,0x4e
  40ec3e:	mov    ah,0xd6
  40ec40:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec42:	aaa    
  40ec43:	add    DWORD PTR [edi+0x6ab88899],esp
  40ec49:	adc    dl,al
  40ec4b:	iret   
  40ec4c:	fmul   QWORD PTR [edx]
  40ec4e:	and    al,0x72
  40ec50:	jl     0x40ec86
  40ec52:	dec    ebx
  40ec53:	jne    0x40ec49
  40ec55:	inc    ecx
  40ec56:	fsubrp st(4),st
  40ec58:	push   ebp
  40ec59:	sbb    DWORD PTR [esi+ebp*8+0x11],0xfffffff4
  40ec5e:	and    edi,edx
  40ec60:	pop    es
  40ec61:	jg     0x40ecb6
  40ec63:	scas   al,BYTE PTR es:[edi]
  40ec64:	sbb    edi,DWORD PTR [edi+0x61]
  40ec67:	(bad)  
  40ec68:	je     0x40ec32
  40ec6a:	outs   dx,DWORD PTR ds:[esi]
  40ec6b:	das    
  40ec6c:	dec    edi
  40ec6d:	es clc 
  40ec6f:	jge    0x40ec4d
  40ec71:	cwde   
  40ec72:	es das 
  40ec74:	jmp    0x6d9e:0x5c59ce7e
  40ec7b:	scas   eax,DWORD PTR es:[edi]
  40ec7c:	push   ss
  40ec7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec7e:	pusha  
  40ec7f:	mov    ah,0x8f
  40ec81:	add    DWORD PTR [ecx-0x5b5e2e58],0xffffffc0
  40ec88:	and    cl,BYTE PTR [ebx]
  40ec8a:	xchg   edi,eax
  40ec8b:	frstpm(287 only) 
  40ec8d:	or     DWORD PTR [ecx-0xe],esp
  40ec90:	outs   dx,BYTE PTR ds:[esi]
  40ec91:	into   
  40ec92:	pop    edx
  40ec93:	add    BYTE PTR [eax+0x5b],dh
  40ec96:	mov    esi,0x4689cd61
  40ec9b:	and    esi,DWORD PTR [ecx+0x2cc77725]
  40eca1:	mov    ?,WORD PTR [edx+0x30191ba]
  40eca7:	cs std 
  40eca9:	and    DWORD PTR [edi+0x335084b4],ecx
  40ecaf:	fidivr DWORD PTR [ecx+0x4271e7a2]
  40ecb5:	mov    ch,0x17
  40ecb7:	mov    eax,0x717d9634
  40ecbc:	cmp    DWORD PTR [edx-0xe],0x6d
  40ecc0:	mov    ebx,ebx
  40ecc2:	sbb    ecx,esp
  40ecc4:	inc    edi
  40ecc5:	mul    BYTE PTR [ecx-0x2b]
  40ecc8:	in     ax,dx
  40ecca:	mov    al,ds:0x47bffb1c
  40eccf:	arpl   WORD PTR [ecx+0x39c5ebb7],sp
  40ecd5:	xor    edi,DWORD PTR [ebp+0x484d3e96]
  40ecdb:	in     eax,0x8a
  40ecdd:	cmp    esp,esi
  40ecdf:	(bad)  [edx-0x22ebc4d5]
  40ece5:	outs   dx,BYTE PTR ds:[esi]
  40ece6:	test   DWORD PTR gs:[eiz*8-0x44ee4172],ebp
  40ecee:	(bad)  
  40ecef:	bound  ebx,QWORD PTR [ebp+0x6d]
  40ecf2:	add    eax,0x829f8f0
  40ecf7:	aaa    
  40ecf8:	jmp    0xbcceb769
  40ecfd:	dec    BYTE PTR [ebx+0x3059cd47]
  40ed03:	aam    0x58
  40ed05:	xor    BYTE PTR [edi+0x7997763b],ah
  40ed0b:	and    al,0xaf
  40ed0d:	js     0x40ed2a
  40ed0f:	push   edi
  40ed10:	xchg   ebx,eax
  40ed11:	fs aas 
  40ed13:	retf   
  40ed14:	inc    ecx
  40ed15:	stos   DWORD PTR es:[edi],eax
  40ed16:	jl     0x40ecb5
  40ed18:	stos   DWORD PTR es:[edi],eax
  40ed19:	test   DWORD PTR [eax],edi
  40ed1b:	and    eax,esi
  40ed1d:	adc    eax,0xe9dac676
  40ed22:	(bad)  [ebx+0x60436d26]
  40ed28:	add    eax,0x9340cc33
  40ed2d:	push   0xc7005f4b
  40ed32:	aam    0x1b
  40ed34:	fcom   DWORD PTR [ecx+ecx*8+0x3c5029bc]
  40ed3b:	ja     0x40ed49
  40ed3d:	sti    
  40ed3e:	ss out 0x3,eax
  40ed41:	dec    ebx
  40ed42:	add    edi,esi
  40ed44:	or     al,0x6b
  40ed46:	mov    DWORD PTR [eax-0x7a6bcd7a],ebp
  40ed4c:	and    eax,0x9e64d81e
  40ed51:	(bad)  
  40ed52:	jno    0x40ecfd
  40ed54:	cmc    
  40ed55:	push   0xffffffb3
  40ed57:	jle    0x40ed7c
  40ed59:	sub    cl,al
  40ed5b:	add    al,0xc9
  40ed5d:	cmp    eax,0xdc1f0447
  40ed62:	test   edi,ecx
  40ed64:	mov    ebx,0x1c3465ea
  40ed69:	ret    
  40ed6a:	ror    BYTE PTR [ecx],1
  40ed6c:	inc    edi
  40ed6d:	or     DWORD PTR [ecx-0x4d63434],esp
  40ed73:	pusha  
  40ed74:	inc    eax
  40ed75:	ja     0x40edce
  40ed77:	push   es
  40ed78:	ja     0x40ed8a
  40ed7a:	mov    ah,0x3b
  40ed7c:	fcmove st,st(3)
  40ed7e:	cmp    al,0x75
  40ed80:	mov    ebx,0x810c7c3a
  40ed85:	jb     0x40edd6
  40ed87:	mov    esi,ebx
  40ed89:	push   esp
  40ed8a:	cmp    cl,BYTE PTR [ebx+0x18258bec]
  40ed90:	ja     0x40ed6a
  40ed92:	add    DWORD PTR [ebp+0x6f],ebx
  40ed95:	push   0xffffffca
  40ed97:	mov    eax,ds:0x9234d01d
  40ed9c:	outs   dx,BYTE PTR ds:[esi]
  40ed9d:	dec    esp
  40ed9e:	mov    DWORD PTR [edx-0x75a1de86],0x46f35248
  40eda8:	push   edi
  40eda9:	retf   0x997b
  40edac:	pop    eax
  40edad:	xchg   esi,eax
  40edae:	xlat   BYTE PTR ds:[ebx]
  40edaf:	jmp    0x879f:0x4cf81a0a
  40edb6:	ficom  DWORD PTR [esi]
  40edb8:	cmp    BYTE PTR [ebp+0x549ec8],dh
  40edbe:	les    edx,FWORD PTR [edi-0x60a54ebc]
  40edc4:	push   0xe0e11673
  40edc9:	dec    esi
  40edca:	in     eax,0x38
  40edcc:	int    0x51
  40edce:	cdq    
  40edcf:	sbb    DWORD PTR [eax],esp
  40edd1:	pop    ebx
  40edd2:	ss popf 
  40edd4:	pop    ecx
  40edd5:	(bad)  
  40edd6:	pushf  
  40edd7:	fnstenv [esi+0x24]
  40edda:	sbb    dh,BYTE PTR [ecx]
  40eddc:	rol    DWORD PTR [ebx+0x67901326],cl
  40ede2:	mov    ecx,0x20f0152b
  40ede7:	test   BYTE PTR [ebp+0x22],dl
  40edea:	outs   dx,DWORD PTR ds:[esi]
  40edeb:	hlt    
  40edec:	xor    al,0xdc
  40edee:	or     esp,esp
  40edf0:	shr    BYTE PTR [eax+0x62],cl
  40edf3:	retf   
  40edf4:	and    DWORD PTR [edx-0x94d8934],eax
  40edfa:	xchg   esp,eax
  40edfb:	out    dx,eax
  40edfc:	out    dx,al
  40edfd:	pop    ecx
  40edfe:	jp     0x40ee3e
  40ee00:	jecxz  0x40edb5
  40ee02:	jle    0x40ee2b
  40ee04:	loop   0x40eda0
  40ee06:	mov    ah,0x8d
  40ee08:	xor    DWORD PTR [esi+0x31e44003],ebp
  40ee0e:	loopne 0x40ee65
  40ee10:	shr    dh,1
  40ee12:	xchg   ecx,eax
  40ee13:	mov    dl,0x9c
  40ee15:	dec    ecx
  40ee16:	test   BYTE PTR [ecx+0x3c],dl
  40ee19:	(bad)  
  40ee1b:	fcmovne st,st(5)
  40ee1d:	daa    
  40ee1e:	(bad)  
  40ee1f:	push   ecx
  40ee20:	(bad)  
  40ee21:	mov    bh,0x48
  40ee23:	addr16 (bad) 
  40ee25:	pop    ss
  40ee26:	or     dh,BYTE PTR [eax+0x18]
  40ee29:	dec    BYTE PTR [esp+ebp*2+0x2e]
  40ee2d:	mov    cl,0x43
  40ee2f:	add    BYTE PTR [ecx+0x26f5e265],ch
  40ee35:	push   cs
  40ee36:	cmp    eax,0x87f41e94
  40ee3b:	adc    eax,0x9b262453
  40ee40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee41:	jmp    0x84036e90
  40ee46:	dec    esi
  40ee47:	ds mov cl,0x14
  40ee4a:	inc    edx
  40ee4b:	mov    ch,al
  40ee4d:	dec    ecx
  40ee4e:	jg     0x40edd0
  40ee50:	mov    cl,bh
  40ee52:	mov    ch,0x89
  40ee54:	out    dx,eax
  40ee55:	retf   0xa0d7
  40ee58:	add    dh,BYTE PTR [ebx]
  40ee5a:	jbe    0x40ee0a
  40ee5c:	retf   
  40ee5d:	cmp    BYTE PTR [eax+0x44],dl
  40ee60:	sbb    ch,BYTE PTR [ecx]
  40ee62:	lock in al,0x76
  40ee65:	add    BYTE PTR [edx-0x2216bc7d],cl
  40ee6b:	enter  0x984e,0xcd
  40ee6f:	sahf   
  40ee70:	mov    al,0x93
  40ee72:	int3   
  40ee73:	jo     0x40ee6d
  40ee75:	aas    
  40ee76:	out    0x1a,eax
  40ee78:	dec    eax
  40ee79:	test   BYTE PTR [esi+0x73],0x68
  40ee7d:	(bad)  
  40ee7e:	sub    DWORD PTR [esi+0x1],edx
  40ee81:	lock inc edi
  40ee83:	cmp    ebx,DWORD PTR ss:[ebx+0x73]
  40ee87:	fild   QWORD PTR [esi]
  40ee89:	mov    ebp,0xf2b09fbc
  40ee8e:	jl     0x40ee95
  40ee90:	stos   BYTE PTR es:[edi],al
  40ee91:	test   ch,al
  40ee93:	repz call 0x8c41:0x37115153
  40ee9b:	cmp    eax,0xa9232e37
  40eea0:	mov    WORD PTR [ecx+eiz*4],fs
  40eea3:	sub    DWORD PTR [edi-0x3f],esp
  40eea6:	repz (bad) 
  40eea8:	xchg   edi,eax
  40eea9:	xor    BYTE PTR [ebx],ah
  40eeab:	and    DWORD PTR [eax+0x106e7845],ecx
  40eeb1:	fstp   QWORD PTR [eax]
  40eeb3:	(bad)  
  40eeb4:	pop    ecx
  40eeb5:	sahf   
  40eeb6:	jbe    0x40eed9
  40eeb8:	pop    ebp
  40eeb9:	(bad)  
  40eeba:	or     eax,0x5eb7a3eb
  40eebf:	jnp    0x40eed2
  40eec1:	pop    edi
  40eec2:	mov    edi,DWORD PTR [ecx-0x652ab8f8]
  40eec8:	call   0x59ef:0x39b1c6fd
  40eecf:	or     BYTE PTR [edi+0x3863d724],ch
  40eed5:	aam    0xb
  40eed7:	sub    ebp,DWORD PTR [ecx+0x2c]
  40eeda:	push   esi
  40eedb:	arpl   bx,bx
  40eedd:	pop    ds
  40eede:	jmp    0x731f:0x972cb9d0
  40eee5:	adc    al,0x80
  40eee7:	jno    0x40ef67
  40eee9:	add    BYTE PTR [eax],bh
  40eeeb:	pop    edx
  40eeec:	inc    eax
  40eeed:	mov    WORD PTR [ebp-0x238a7125],?
  40eef3:	jno    0x40ef56
  40eef5:	push   ebx
  40eef6:	je     0x40ef6a
  40eef8:	mov    esi,gs
  40eefa:	mov    ebp,0xcddf64db
  40eeff:	out    dx,eax
  40ef00:	sar    dl,0x47
  40ef03:	(bad)  
  40ef04:	cld    
  40ef05:	call   0x9eb572f6
  40ef0a:	adc    BYTE PTR [edi-0x4d],bl
  40ef0d:	jl     0x40eebd
  40ef0f:	pushf  
  40ef10:	add    BYTE PTR [ebx+ebx*4],ah
  40ef13:	push   esi
  40ef14:	shr    BYTE PTR [ebp-0x54],1
  40ef17:	pop    edi
  40ef18:	add    edi,ebp
  40ef1a:	fucomi st,st(6)
  40ef1c:	lods   eax,DWORD PTR ds:[esi]
  40ef1d:	daa    
  40ef1e:	hlt    
  40ef1f:	mov    ds,WORD PTR [edx]
  40ef21:	mov    esi,0xf6e42a81
  40ef26:	test   al,0xec
  40ef28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef29:	pushf  
  40ef2a:	or     eax,0x6f9b9ce
  40ef2f:	retf   
  40ef30:	sbb    DWORD PTR [esi],edi
  40ef32:	and    eax,0x182f687a
  40ef37:	retf   0x9b9e
  40ef3a:	dec    bh
  40ef3c:	(bad)  
  40ef3d:	faddp  st(5),st
  40ef3f:	mov    DWORD PTR [esi-0x54a88fd],edx
  40ef45:	mov    ebp,DWORD PTR [eax-0x131b5924]
  40ef4b:	cmp    dh,BYTE PTR [edi]
  40ef4d:	nop
  40ef4e:	bound  ecx,QWORD PTR [edx-0x52fcc627]
  40ef54:	adc    ebp,DWORD PTR [edx]
  40ef56:	hlt    
  40ef57:	dec    edi
  40ef58:	das    
  40ef59:	ror    BYTE PTR [eax+0x72511ba1],cl
  40ef5f:	xor    BYTE PTR [esi],dh
  40ef61:	add    esi,DWORD PTR [edx]
  40ef63:	icebp  
  40ef64:	sti    
  40ef65:	or     DWORD PTR [esi-0x21],esp
  40ef68:	out    dx,eax
  40ef69:	xchg   esp,eax
  40ef6a:	lea    ecx,[ebp-0x2d]
  40ef6d:	ss pop esp
  40ef6f:	pop    ebx
  40ef70:	inc    edx
  40ef71:	mov    esp,0xeb2f5a91
  40ef76:	and    edx,DWORD PTR ds:0x811544a7
  40ef7c:	dec    esp
  40ef7d:	cmp    DWORD PTR [edi],esi
  40ef7f:	icebp  
  40ef80:	sub    bh,BYTE PTR [edx-0x49]
  40ef83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef84:	push   ebp
  40ef85:	mov    ebx,0x3cda1139
  40ef8a:	xor    dl,BYTE PTR [esi+0x558588ee]
  40ef90:	gs jmp 0x40efb0
  40ef93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef94:	push   edi
  40ef95:	fimul  DWORD PTR [edi]
  40ef97:	inc    edi
  40ef98:	and    ah,0x1b
  40ef9b:	fidiv  WORD PTR [edi-0x6c]
  40ef9e:	or     edi,DWORD PTR [ebp-0x1de99b33]
  40efa4:	movaps xmm7,XMMWORD PTR [ebx-0x76]
  40efa8:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40efaa:	push   ss
  40efab:	rcr    BYTE PTR [eax-0x1e8c5aea],1
  40efb1:	jns    0x40ef96
  40efb3:	xlat   BYTE PTR ds:[ebx]
  40efb4:	(bad)  
  40efb5:	cmp    eax,DWORD PTR [edi+ebx*2-0x271b499c]
  40efbc:	sub    dl,bl
  40efbe:	cmp    ebp,DWORD PTR [ecx-0x6a]
  40efc1:	push   ebx
  40efc2:	mov    al,ds:0x24bbac45
  40efc7:	mov    eax,ds:0xec05443c
  40efcc:	add    eax,DWORD PTR [edx+0x1982b087]
  40efd2:	pop    ss
  40efd3:	pop    ss
  40efd4:	mov    edx,0x1f80c5e4
  40efd9:	stc    
  40efda:	retf   0x3aeb
  40efdd:	jmp    0x1ab0797b
  40efe2:	mov    edx,0xa8d1148c
  40efe7:	lea    esi,ds:0x612d52bf
  40efed:	fstp   TBYTE PTR [edi]
  40efef:	sar    BYTE PTR [edi-0x9],cl
  40eff2:	xchg   ebx,eax
  40eff3:	jne    0x40f008
  40eff5:	cld    
  40eff6:	aad    0x91
  40eff8:	mov    dl,0x77
  40effa:	and    eax,0x33e6c4d8
  40efff:	push   ecx
  40f000:	(bad)  
  40f001:	xchg   ebx,eax
  40f002:	mov    cl,0xaa
  40f004:	pop    es
  40f005:	pusha  
  40f006:	xchg   DWORD PTR [ecx-0x57bca610],esi
  40f00c:	mov    ch,0x1a
  40f00e:	cmp    al,0x3c
  40f010:	fwait
  40f011:	jnp    0x40f013
  40f013:	sbb    DWORD PTR [bx+di],edi
  40f016:	xor    ecx,DWORD PTR [ecx]
  40f018:	sbb    eax,0x4bc70d6e
  40f01d:	out    0x4b,al
  40f01f:	mov    ah,0xb0
  40f021:	fwait
  40f022:	xchg   esp,eax
  40f023:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f024:	adc    BYTE PTR [ebx+edi*1],bl
  40f027:	or     esp,DWORD PTR [ebp+0x48]
  40f02a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f02b:	je     0x40f00a
  40f02d:	ret    0xc948
  40f030:	enter  0x81df,0xd9
  40f034:	stos   DWORD PTR es:[edi],eax
  40f035:	imul   ebp
  40f037:	out    0xee,eax
  40f039:	xchg   ebx,edx
  40f03b:	mov    dh,0x1a
  40f03d:	int3   
  40f03e:	mov    eax,0xfc701102
  40f043:	imul   ecx,DWORD PTR [ecx+0x79],0x4af2a900
  40f04a:	inc    ebp
  40f04b:	dec    esi
  40f04c:	mov    ecx,0x88eee40c
  40f051:	and    dl,BYTE PTR [edi]
  40f053:	mov    esp,0xa821192e
  40f058:	frstor [edi+0x7]
  40f05b:	inc    ebx
  40f05c:	in     al,0x50
  40f05e:	mov    ecx,0x79e58873
  40f063:	sbb    esi,DWORD PTR ds:0x97e4fe6c
  40f069:	mov    DWORD PTR [edx+0x4c],ecx
  40f06c:	sbb    eax,0x9fc520c1
  40f071:	ins    DWORD PTR es:[edi],dx
  40f072:	or     edi,DWORD PTR [ecx]
  40f074:	xchg   ebx,eax
  40f075:	ret    0xfc18
  40f078:	into   
  40f079:	fistp  QWORD PTR [ebp+0x4]
  40f07c:	pop    esi
  40f07d:	mov    al,ds:0xc8a49105
  40f082:	cmp    ecx,DWORD PTR [edi-0xd]
  40f085:	(bad)  
  40f086:	push   esp
  40f087:	dec    esp
  40f088:	mov    ebx,0x82131624
  40f08d:	sub    eax,0xc02625e2
  40f092:	scas   eax,DWORD PTR es:[edi]
  40f093:	hlt    
  40f094:	fwait
  40f095:	icebp  
  40f096:	cdq    
  40f097:	mov    ebx,0x24ace32a
  40f09c:	and    dl,BYTE PTR [ebp+eiz*8+0x56eeca72]
  40f0a3:	xor    edi,DWORD PTR [ecx+0x7c9295fd]
  40f0a9:	test   al,0x42
  40f0ab:	int    0x49
  40f0ad:	push   es
  40f0ae:	loopne 0x40f04d
  40f0b0:	fcomp  QWORD PTR [eax+0x46]
  40f0b3:	mov    ebx,0x4daf55d3
  40f0b8:	cs iret 
  40f0ba:	test   BYTE PTR [edx+0x629e7a07],dh
  40f0c0:	cmp    BYTE PTR [edi-0x68ea5cba],bh
  40f0c6:	jbe    0x40f0ce
  40f0c8:	sbb    edx,DWORD PTR [ecx+0x15]
  40f0cb:	cwde   
  40f0cc:	rcl    BYTE PTR [edi+edx*2-0x7b],1
  40f0d0:	push   ds
  40f0d1:	push   ebp
  40f0d2:	les    esi,FWORD PTR [esi+edx*8]
  40f0d5:	sub    eax,0x3687391f
  40f0da:	jle    0x40f140
  40f0dc:	shl    BYTE PTR ds:0xb57715a,1
  40f0e2:	addr16 retf 
  40f0e4:	jl     0x40f15c
  40f0e6:	pushf  
  40f0e7:	les    esi,FWORD PTR [esi+eiz*1]
  40f0ea:	popf   
  40f0eb:	add    al,0xa7
  40f0ed:	icebp  
  40f0ee:	and    eax,0xa2800a35
  40f0f3:	addr16 cwde 
  40f0f5:	mov    ds:0xa1a50e74,eax
  40f0fa:	loop   0x40f16b
  40f0fc:	inc    esi
  40f0fd:	sahf   
  40f0fe:	rol    esp,cl
  40f100:	push   ebp
  40f101:	or     al,0x70
  40f103:	rol    DWORD PTR [edi+0x29ba7ee2],cl
  40f109:	mov    ?,WORD PTR [ecx+0x53]
  40f10c:	ror    BYTE PTR ds:0x7cb93ee,1
  40f112:	adc    al,0x8c
  40f114:	test   BYTE PTR [eax-0x6d],bh
  40f117:	xor    eax,0xf1d4ca3f
  40f11c:	lods   al,BYTE PTR ds:[esi]
  40f11d:	inc    esi
  40f11e:	out    0x27,eax
  40f120:	icebp  
  40f121:	ret    
  40f122:	and    ebp,DWORD PTR [edi+0x2c]
  40f125:	inc    ebx
  40f126:	ins    DWORD PTR es:[edi],dx
  40f127:	sub    WORD PTR [ebx],si
  40f12a:	daa    
  40f12b:	xor    eax,0x32fb6b
  40f130:	bound  esp,QWORD PTR [edi]
  40f132:	cmc    
  40f133:	adc    bl,BYTE PTR [edx+eiz*8-0x75]
  40f137:	or     edx,DWORD PTR [eax+0x36]
  40f13a:	cld    
  40f13b:	add    al,0xe0
  40f13d:	mov    esi,DWORD PTR [ebp+0xc]
  40f140:	cmp    esi,eax
  40f142:	mov    eax,DWORD PTR [ebp-0x4]
  40f145:	je     0x40cd96
  40f14b:	xor    eax,edx
  40f14d:	add    eax,ecx
  40f14f:	mov    ecx,DWORD PTR [ebp+0xc]
  40f152:	imul   eax,ecx
  40f155:	add    eax,DWORD PTR [ebp+0x8]
  40f158:	mov    DWORD PTR [ebp+0xc],eax
  40f15b:	mov    eax,DWORD PTR [ebp+0xc]
  40f15e:	pop    esi
  40f15f:	leave  
  40f160:	ret    0x8
  40f163:	push   ebp
  40f164:	mov    ebp,esp
  40f166:	push   ecx
  40f167:	or     eax,0x63ef
  40f16c:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  40f173:	adc    DWORD PTR ds:0x429004,0x1463
  40f17d:	mov    eax,DWORD PTR [ebp-0x4]
  40f180:	mov    edx,DWORD PTR [ebp+0x10]
  40f183:	mov    ecx,DWORD PTR ds:0x42b010
  40f189:	add    DWORD PTR ds:0x42a000,ecx
  40f18f:	mov    ecx,0x7510896
  40f194:	neg    DWORD PTR ds:0x42b010
  40f19a:	xor    eax,ecx
  40f19c:	add    eax,0x3272dd
  40f1a1:	and    DWORD PTR ds:0x429010,0xb4c
  40f1ab:	mov    DWORD PTR [edx],eax
  40f1ad:	and    DWORD PTR ds:0x42c01c,0x0
  40f1b7:	jmp    0x40f1c9
  40f1bc:	mov    edx,DWORD PTR ds:0x42c01c
  40f1c2:	inc    edx
  40f1c3:	mov    DWORD PTR ds:0x42c01c,edx
  40f1c9:	cmp    DWORD PTR ds:0x42c01c,0x1b
  40f1d0:	jae    0x40f1f8
  40f1d6:	cmp    DWORD PTR ds:0x42c01c,0x28
  40f1dd:	jne    0x40f1f3
  40f1e3:	push   0x22f2
  40f1e8:	push   0x42e134
  40f1ed:	call   DWORD PTR ds:0x42ed5d
  40f1f3:	jmp    0x40f1bc
  40f1f8:	mov    eax,DWORD PTR [ebp+0xc]
  40f1fb:	or     DWORD PTR ds:0x42a004,ecx
  40f201:	xor    eax,ecx
  40f203:	push   esi
  40f204:	mov    esi,DWORD PTR [ebp+0x10]
  40f207:	mov    edx,0x3272dd
  40f20c:	add    eax,edx
  40f20e:	mov    DWORD PTR [esi+0x4],eax
  40f211:	mov    eax,DWORD PTR [ebp+0x14]
  40f214:	mov    esi,DWORD PTR [ebp+0x10]
  40f217:	mov    DWORD PTR [esi+0x8],eax
  40f21a:	mov    eax,DWORD PTR [ebp+0x18]
  40f21d:	mov    esi,DWORD PTR [ebp+0x10]
  40f220:	mov    DWORD PTR [esi+0xc],eax
  40f223:	mov    eax,DWORD PTR [ebp+0x1c]
  40f226:	mov    esi,DWORD PTR [ebp+0x10]
  40f229:	mov    DWORD PTR [esi+0x10],eax
  40f22c:	mov    eax,DWORD PTR [ebp+0x8]
  40f22f:	xor    eax,ecx
  40f231:	add    eax,edx
  40f233:	pop    esi
  40f234:	leave  
  40f235:	ret    0x18
  40f238:	push   ebp
  40f239:	mov    ebp,esp
  40f23b:	sub    esp,0xa4
  40f241:	adc    eax,0x77b8
  40f246:	mov    ecx,DWORD PTR [ebp+0x8]
  40f249:	adc    DWORD PTR ds:0x429000,edi
  40f24f:	mov    eax,0x8a89
  40f254:	adc    DWORD PTR ds:0x42900c,0x429028
  40f25e:	xor    ax,WORD PTR [ecx+0x20]
  40f262:	mov    ecx,DWORD PTR ds:0x429028
  40f268:	and    DWORD PTR ds:0x42b00c,ecx
  40f26e:	mov    ecx,0x3b4c
  40f273:	dec    DWORD PTR ds:0x42d014
  40f279:	add    ax,cx
  40f27c:	movzx  eax,ax
  40f27f:	add    ecx,0x1468
  40f285:	mov    DWORD PTR [ebp-0x18],eax
  40f288:	mov    BYTE PTR [ebp-0x1],0x7d
  40f28c:	mov    ecx,DWORD PTR ds:0x412000
  40f292:	mov    ecx,DWORD PTR [ecx]
  40f294:	adc    DWORD PTR ds:0x42d01c,ecx
  40f29a:	lea    eax,[ebp-0x1]
  40f29d:	sub    DWORD PTR ds:0x42c014,0xae5
  40f2a7:	mov    DWORD PTR [ebp-0x10],eax
  40f2aa:	mov    al,BYTE PTR [ebp-0x1]
  40f2ad:	inc    ecx
  40f2ae:	mov    ecx,DWORD PTR [ebp-0x10]
  40f2b1:	xor    al,0x71
  40f2b3:	adc    DWORD PTR ds:0x42b018,0x264
  40f2bd:	sub    al,0xb
  40f2bf:	adc    DWORD PTR ds:0x429014,0x5cc7
  40f2c9:	mov    BYTE PTR [ecx],al
  40f2cb:	mov    DWORD PTR ds:0x42b004,0x11
  40f2d5:	cmp    DWORD PTR ds:0x42b004,0x0
  40f2dc:	je     0x40f31e
  40f2e2:	cmp    DWORD PTR ds:0x42b004,0x1d
  40f2e9:	jne    0x40f304
  40f2ef:	push   0x42e000
  40f2f4:	push   DWORD PTR [ebp-0x18]
  40f2f7:	push   0x0
  40f2f9:	push   0x4fbc
  40f2fe:	call   DWORD PTR ds:0x42ed61
  40f304:	mov    eax,ds:0x42b004
  40f309:	dec    eax
  40f30a:	mov    ds:0x42b004,eax
  40f30f:	jmp    0x40f2d5
  40f314:	sbb    DWORD PTR ds:0x42d010,0x7483
  40f31e:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40f325:	push   ebx
  40f326:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  40f32d:	mov    ecx,DWORD PTR [ebp-0x14]
  40f330:	push   esi
  40f331:	and    DWORD PTR ds:0x42a01c,0x0
  40f33b:	jmp    0x40f34d
  40f340:	mov    esi,DWORD PTR ds:0x42a01c
  40f346:	inc    esi
  40f347:	mov    DWORD PTR ds:0x42a01c,esi
  40f34d:	cmp    DWORD PTR ds:0x42a01c,0x1f
  40f354:	jae    0x40f3f6
  40f35a:	cmp    DWORD PTR ds:0x42a01c,0x21
  40f361:	jne    0x40f377
  40f367:	push   0x42c010
  40f36c:	push   0x562e
  40f371:	call   DWORD PTR ds:0x42ed65
  40f377:	jmp    0x40f340
  40f37c:	and    DWORD PTR ds:0x42d01c,0x0
  40f386:	xor    eax,eax
  40f388:	or     eax,DWORD PTR ds:0x42d01c
  40f38e:	inc    eax
  40f38f:	mov    ds:0x42d01c,eax
  40f394:	cmp    DWORD PTR ds:0x42d01c,0xb
  40f39b:	jne    0x40f3c1
  40f3a1:	push   DWORD PTR [ebp-0x24]
  40f3a4:	push   0x42a010
  40f3a9:	push   0x78c6
  40f3ae:	push   0x42e134
  40f3b3:	push   DWORD PTR [ebp-0x1c]
  40f3b6:	push   0x1e85
  40f3bb:	call   DWORD PTR ds:0x42ed6d
  40f3c1:	cmp    DWORD PTR ds:0x42d01c,0xa
  40f3c8:	jne    0x40f3d9
  40f3ce:	mov    eax,ds:0x42d01c
  40f3d3:	inc    eax
  40f3d4:	mov    ds:0x42d01c,eax
  40f3d9:	cmp    DWORD PTR ds:0x42d01c,0x18
  40f3e0:	jb     0x40f386
  40f3e6:	xor    eax,eax
  40f3e8:	xor    eax,DWORD PTR ds:0x411ff4
  40f3ee:	mov    eax,DWORD PTR [eax]
  40f3f0:	or     DWORD PTR ds:0x42b018,eax
  40f3f6:	mov    eax,0x7510896
  40f3fb:	sbb    DWORD PTR ds:0x42a01c,edx
  40f401:	xor    ecx,eax
  40f403:	or     esi,DWORD PTR ds:0x42a008
  40f409:	mov    esi,0x3272dd
  40f40e:	push   edi
  40f40f:	add    ecx,esi
  40f411:	jmp    0x40f435
  40f416:	mov    DWORD PTR ds:0x42a01c,0x2feb
  40f420:	mov    dl,BYTE PTR [ebp-0x1]
  40f423:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40f42a:	mov    DWORD PTR ds:0x42b01c,0x5ed5
  40f434:	inc    ecx
  40f435:	cmp    ecx,0x40
  40f438:	jb     0x40f416
  40f43e:	mov    DWORD PTR ds:0x429018,0x19
  40f448:	cmp    DWORD PTR ds:0x429018,0x0
  40f44f:	je     0x40f47c
  40f455:	cmp    DWORD PTR ds:0x429018,0x1d
  40f45c:	jne    0x40f468
  40f462:	call   DWORD PTR ds:0x42ed71
  40f468:	mov    edx,DWORD PTR ds:0x429018
  40f46e:	dec    edx
  40f46f:	mov    DWORD PTR ds:0x429018,edx
  40f475:	jmp    0x40f448
  40f47a:	not    edx
  40f47c:	mov    edx,DWORD PTR [ebp-0x14]
  40f47f:	sub    DWORD PTR ds:0x42c00c,0x42b014
  40f489:	xor    edx,eax
  40f48b:	adc    DWORD PTR ds:0x429024,0x42a018
  40f495:	add    edx,esi
  40f497:	mov    DWORD PTR ds:0x42b014,0x72c9
  40f4a1:	jmp    0x40f5bb
  40f4a6:	dec    DWORD PTR ds:0x429014
  40f4ac:	mov    edi,DWORD PTR [ebp+0x8]
  40f4af:	adc    ecx,DWORD PTR ds:0x42a018
  40f4b5:	mov    ecx,0x8a89
  40f4ba:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40f4bf:	and    DWORD PTR ds:0x429008,0x0
  40f4c9:	jmp    0x40f4dd
  40f4ce:	xor    edi,edi
  40f4d0:	xor    edi,DWORD PTR ds:0x429008
  40f4d6:	inc    edi
  40f4d7:	mov    DWORD PTR ds:0x429008,edi
  40f4dd:	cmp    DWORD PTR ds:0x429008,0x10
  40f4e4:	jae    0x40f511
  40f4ea:	cmp    DWORD PTR ds:0x429008,0x19
  40f4f1:	jne    0x40f502
  40f4f7:	push   0x429018
  40f4fc:	call   DWORD PTR ds:0x42ed75
  40f502:	jmp    0x40f4ce
  40f507:	adc    DWORD PTR ds:0x42a010,0x20e4
  40f511:	mov    edi,0x3b4c
  40f516:	sub    DWORD PTR ds:0x42a014,0x7a80
  40f520:	add    cx,di
  40f523:	movzx  ecx,cx
  40f526:	neg    DWORD PTR ds:0x42b000
  40f52c:	mov    DWORD PTR [ebp-0x10],ecx
  40f52f:	and    DWORD PTR ds:0x42a000,0x0
  40f539:	jmp    0x40f54b
  40f53e:	mov    ecx,DWORD PTR ds:0x42a000
  40f544:	inc    ecx
  40f545:	mov    DWORD PTR ds:0x42a000,ecx
  40f54b:	cmp    DWORD PTR ds:0x42a000,0x1f
  40f552:	jae    0x40f57e
  40f558:	cmp    DWORD PTR ds:0x42a000,0x26
  40f55f:	jne    0x40f573
  40f565:	push   0x3463
  40f56a:	push   DWORD PTR [ebp-0x1c]
  40f56d:	call   DWORD PTR ds:0x42ed35
  40f573:	jmp    0x40f53e
  40f578:	or     ecx,0x6b07
  40f57e:	mov    ecx,DWORD PTR [ebp+0x8]
  40f581:	movzx  ecx,WORD PTR [ecx+edx*4]
  40f585:	mov    DWORD PTR ds:0x42a010,0x2266
  40f58f:	xor    ecx,0x8a89
  40f595:	add    ecx,edi
  40f597:	mov    DWORD PTR ds:0x42b018,0x196a
  40f5a1:	mov    edi,DWORD PTR [ebp-0x10]
  40f5a4:	mov    DWORD PTR ds:0x42a018,0x15ce
  40f5ae:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  40f5b5:	mov    ecx,0x651b
  40f5ba:	inc    edx
  40f5bb:	mov    ecx,DWORD PTR [ebp-0x18]
  40f5be:	mov    DWORD PTR ds:0x429020,0x7b55
  40f5c8:	cmp    edx,ecx
  40f5ca:	jne    0x40f4a6
  40f5d0:	mov    ecx,DWORD PTR [ebp-0x14]
  40f5d3:	mov    edx,DWORD PTR [ebp+0x10]
  40f5d6:	adc    DWORD PTR ds:0x429008,0x429014
  40f5e0:	xor    ecx,eax
  40f5e2:	mov    DWORD PTR ds:0x429028,0x35c1
  40f5ec:	add    ecx,esi
  40f5ee:	sub    DWORD PTR ds:0x429024,0xd80
  40f5f8:	mov    DWORD PTR [edx],ecx
  40f5fa:	add    ecx,0x553e
  40f600:	mov    ecx,DWORD PTR [ebp-0x14]
  40f603:	add    DWORD PTR ds:0x42901c,0xd2d
  40f60d:	xor    ecx,eax
  40f60f:	add    ecx,esi
  40f611:	mov    DWORD PTR ds:0x42d008,0x74bc
  40f61b:	mov    DWORD PTR [ebp-0x20],ecx
  40f61e:	mov    DWORD PTR ds:0x42a004,edi
  40f624:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  40f62b:	mov    DWORD PTR ds:0x429018,0x1d37
  40f635:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  40f63c:	mov    DWORD PTR ds:0x42901c,0x14b9
  40f646:	mov    DWORD PTR [ebp-0x1c],0xf89c95b5
  40f64d:	mov    DWORD PTR ds:0x42c000,edx
  40f653:	mov    ecx,DWORD PTR [ebp-0xc]
  40f656:	mov    DWORD PTR ds:0x42a018,0x1347
  40f660:	mov    DWORD PTR [ebp+0x8],ecx
  40f663:	mov    DWORD PTR ds:0x429014,0x4ea
  40f66d:	jmp    0x40f78d
  40f672:	sbb    DWORD PTR ds:0x42a018,0x42c008
  40f67c:	mov    ecx,DWORD PTR [ebp+0x8]
  40f67f:	and    edx,DWORD PTR ds:0x42c00c
  40f685:	mov    edx,DWORD PTR [ebp-0x8]
  40f688:	xor    DWORD PTR ds:0x42a008,0x42a018
  40f692:	xor    ecx,eax
  40f694:	xor    edx,eax
  40f696:	sub    ecx,edx
  40f698:	sub    edx,0x6561
  40f69e:	sub    ecx,esi
  40f6a0:	xor    ecx,eax
  40f6a2:	mov    DWORD PTR [ebp+0x8],ecx
  40f6a5:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6a8:	mov    edx,DWORD PTR [ebp-0x64]
  40f6ab:	sub    DWORD PTR ds:0x42901c,0x6b48
  40f6b5:	lea    ecx,[edx+ecx*1+0x5708f2]
  40f6bc:	movzx  edx,WORD PTR ds:0x42900c
  40f6c3:	adc    DWORD PTR ds:0x42c00c,edx
  40f6c9:	mov    DWORD PTR [ebp-0x64],ecx
  40f6cc:	sbb    DWORD PTR ds:0x42a018,0x1891
  40f6d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6d9:	dec    edx
  40f6da:	mov    edx,DWORD PTR [ebp-0x60]
  40f6dd:	lea    ecx,[edx+ecx*1+0x5708f2]
  40f6e4:	mov    DWORD PTR [ebp-0x60],ecx
  40f6e7:	sbb    DWORD PTR ds:0x42900c,0x79ab
  40f6f1:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6f4:	add    DWORD PTR ds:0x42a01c,edi
  40f6fa:	mov    edx,DWORD PTR [ebp-0x5c]
  40f6fd:	lea    ecx,[edx+ecx*1+0x5708f3]
  40f704:	mov    DWORD PTR [ebp-0x5c],ecx
  40f707:	inc    DWORD PTR ds:0x429004
  40f70d:	mov    ecx,DWORD PTR [ebp+0x8]
  40f710:	sbb    DWORD PTR ds:0x42d018,edx
  40f716:	mov    edx,DWORD PTR [ebp-0x58]
  40f719:	and    DWORD PTR ds:0x42c008,0x42b004
  40f723:	lea    ecx,[edx+ecx*1+0x5708f0]
  40f72a:	dec    edx
  40f72b:	mov    DWORD PTR [ebp-0x58],ecx
  40f72e:	movzx  ecx,WORD PTR ds:0x429000
  40f735:	adc    DWORD PTR ds:0x42c008,ecx
  40f73b:	mov    ecx,DWORD PTR [ebp+0x8]
  40f73e:	mov    edx,DWORD PTR [ebp-0x54]
  40f741:	add    DWORD PTR ds:0x42d004,0x42a014
  40f74b:	lea    ecx,[edx+ecx*1+0x5708f1]
  40f752:	mov    DWORD PTR [ebp-0x54],ecx
  40f755:	xor    DWORD PTR ds:0x42d01c,0x80b
  40f75f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f762:	and    DWORD PTR ds:0x42d008,0x7467
  40f76c:	mov    edx,DWORD PTR [ebp-0x50]
  40f76f:	or     DWORD PTR ds:0x42c004,0x42a000
  40f779:	lea    ecx,[edx+ecx*1+0x5708fe]
  40f780:	add    DWORD PTR ds:0x42c010,0x5221
  40f78a:	mov    DWORD PTR [ebp-0x50],ecx
  40f78d:	or     ecx,DWORD PTR ds:0x429028
  40f793:	mov    ecx,DWORD PTR [ebp+0x8]
  40f796:	xor    ecx,eax
  40f798:	add    ecx,esi
  40f79a:	mov    DWORD PTR ds:0x42c004,0x633d
  40f7a4:	jne    0x40f672
  40f7aa:	jmp    0x411e4d
  40f7af:	neg    DWORD PTR ds:0x42901c
  40f7b5:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f7b8:	mov    edx,DWORD PTR [ebp-0x8]
  40f7bb:	sub    DWORD PTR ds:0x429008,0x429014
  40f7c5:	xor    ecx,eax
  40f7c7:	xor    edx,eax
  40f7c9:	sbb    DWORD PTR ds:0x42c018,0x25ac
  40f7d3:	sub    ecx,edx
  40f7d5:	or     DWORD PTR ds:0x42d000,0x429014
  40f7df:	sub    ecx,esi
  40f7e1:	xor    ecx,eax
  40f7e3:	mov    DWORD PTR ds:0x42b018,0x1de
  40f7ed:	mov    DWORD PTR [ebp-0x1c],ecx
  40f7f0:	mov    DWORD PTR ds:0x42c000,0x7d6a
  40f7fa:	mov    ecx,DWORD PTR [ebp-0xc]
  40f7fd:	mov    DWORD PTR ds:0x429028,0x9e0
  40f807:	mov    DWORD PTR [ebp+0x8],ecx
  40f80a:	jmp    0x40f91d
  40f80f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f812:	mov    edx,DWORD PTR [ebp-0x8]
  40f815:	xor    ecx,eax
  40f817:	adc    DWORD PTR ds:0x42c008,ecx
  40f81d:	xor    edx,eax
  40f81f:	xor    DWORD PTR ds:0x42900c,0x3273
  40f829:	sub    ecx,edx
  40f82b:	sub    ecx,esi
  40f82d:	or     edi,edi
  40f82f:	xor    ecx,eax
  40f831:	mov    DWORD PTR [ebp+0x8],ecx
  40f834:	and    DWORD PTR ds:0x429020,0x0
  40f83e:	jmp    0x40f850
  40f843:	mov    edi,DWORD PTR ds:0x429020
  40f849:	inc    edi
  40f84a:	mov    DWORD PTR ds:0x429020,edi
  40f850:	cmp    DWORD PTR ds:0x429020,0x1b
  40f857:	jae    0x40f8a8
  40f85d:	cmp    DWORD PTR ds:0x429020,0x6
  40f864:	jne    0x40f87f
  40f86a:	push   0x6ce2
  40f86f:	push   0x42d018
  40f874:	push   0x18a6
  40f879:	call   DWORD PTR ds:0x42ed39
  40f87f:	cmp    DWORD PTR ds:0x429020,0x5
  40f886:	jne    0x40f899
  40f88c:	mov    edi,DWORD PTR ds:0x429020
  40f892:	inc    edi
  40f893:	mov    DWORD PTR ds:0x429020,edi
  40f899:	jmp    0x40f843
  40f89e:	and    DWORD PTR ds:0x42b004,0x42b01c
  40f8a8:	mov    ecx,DWORD PTR [ebp+0x8]
  40f8ab:	mov    edx,DWORD PTR [ebp+0x8]
  40f8ae:	and    DWORD PTR ds:0x42d010,0x0
  40f8b8:	mov    edi,DWORD PTR ds:0x42d010
  40f8be:	inc    edi
  40f8bf:	mov    DWORD PTR ds:0x42d010,edi
  40f8c5:	cmp    DWORD PTR ds:0x42d010,0x5
  40f8cc:	jne    0x40f8e2
  40f8d2:	push   0x42e11d
  40f8d7:	push   0x42e110
  40f8dc:	call   DWORD PTR ds:0x42ed3d
  40f8e2:	cmp    DWORD PTR ds:0x42d010,0x4
  40f8e9:	jne    0x40f8fc
  40f8ef:	mov    edi,DWORD PTR ds:0x42d010
  40f8f5:	inc    edi
  40f8f6:	mov    DWORD PTR ds:0x42d010,edi
  40f8fc:	cmp    DWORD PTR ds:0x42d010,0x15
  40f903:	jb     0x40f8b8
  40f909:	imul   edx,edx,0x5708f2
  40f90f:	xor    ecx,eax
  40f911:	add    ecx,esi
  40f913:	lea    ecx,[ebp+ecx*4-0x64]
  40f917:	mov    edi,DWORD PTR [ecx]
  40f919:	add    edx,edi
  40f91b:	mov    DWORD PTR [ecx],edx
  40f91d:	mov    ecx,DWORD PTR [ebp+0x8]
  40f920:	xor    ecx,eax
  40f922:	add    ecx,esi
  40f924:	jne    0x40f80f
  40f92a:	mov    ecx,DWORD PTR [ebp-0x20]
  40f92d:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40f934:	mov    dl,BYTE PTR [ebp-0x1]
  40f937:	cmp    cl,dl
  40f939:	je     0x411dae
  40f93f:	mov    ecx,DWORD PTR [ebp-0x20]
  40f942:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40f949:	mov    edx,DWORD PTR [ebp+0xc]
  40f94c:	cmp    cl,BYTE PTR [edx]
  40f94e:	jne    0x411e5f
  40f954:	mov    ecx,DWORD PTR [ebp-0x14]
  40f957:	mov    edx,DWORD PTR [ebp+0xc]
  40f95a:	movsx  edx,BYTE PTR [edx]
  40f95d:	xor    ecx,eax
  40f95f:	add    ecx,esi
  40f961:	cmp    edx,ecx
  40f963:	mov    ecx,DWORD PTR [ebp-0xc]
  40f966:	mov    DWORD PTR [ebp+0x8],ecx
  40f969:	mov    ecx,DWORD PTR [ebp+0x8]
  40f96c:	je     0x411ed9
  40f972:	jmp    0x40f9a7
  40f977:	mov    ecx,DWORD PTR [ebp+0x8]
  40f97a:	mov    edx,DWORD PTR [ebp-0x8]
  40f97d:	xor    ecx,eax
  40f97f:	xor    edx,eax
  40f981:	sub    ecx,edx
  40f983:	sub    ecx,esi
  40f985:	xor    ecx,eax
  40f987:	mov    DWORD PTR [ebp+0x8],ecx
  40f98a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f98d:	mov    edx,DWORD PTR [ebp+0x8]
  40f990:	xor    ecx,eax
  40f992:	imul   edx,edx,0x5708f2
  40f998:	add    ecx,esi
  40f99a:	lea    ecx,[ebp+ecx*4-0x64]
  40f99e:	mov    edi,DWORD PTR [ecx]
  40f9a0:	add    edx,edi
  40f9a2:	mov    DWORD PTR [ecx],edx
  40f9a4:	mov    ecx,DWORD PTR [ebp+0x8]
  40f9a7:	xor    ecx,eax
  40f9a9:	add    ecx,esi
  40f9ab:	jne    0x40f977
  40f9b1:	mov    ecx,DWORD PTR [ebp-0x14]
  40f9b4:	mov    edx,DWORD PTR [ebp+0x8]
  40f9b7:	xor    ecx,eax
  40f9b9:	xor    edx,eax
  40f9bb:	add    ecx,esi
  40f9bd:	add    edx,esi
  40f9bf:	cmp    ecx,edx
  40f9c1:	jae    0x411df3
  40f9c7:	lea    edx,[ecx-0x3272dd]
  40f9cd:	mov    DWORD PTR [ebp-0x18],edx
  40f9d0:	mov    edi,DWORD PTR [ebp-0x18]
  40f9d3:	mov    DWORD PTR [ebp-0x24],0x705fd0f
  40f9da:	lea    edx,[ebp-0x24]
  40f9dd:	mov    DWORD PTR [ebp-0x10],edx
  40f9e0:	mov    edx,DWORD PTR [ebp-0x10]
  40f9e3:	add    DWORD PTR [edx],0x705fa0f
  40f9e9:	mov    ebx,DWORD PTR [ebp-0x10]
  40f9ec:	xor    edi,eax
  40f9ee:	add    edi,DWORD PTR [ebx]
  40f9f0:	lea    edx,[ebp+ecx*4-0x64]
  40f9f4:	mov    ebx,DWORD PTR [edx]
  40f9f6:	xor    edi,ebx
  40f9f8:	mov    DWORD PTR [edx],edi
  40f9fa:	mov    edx,DWORD PTR [ebp+0x8]
  40f9fd:	xor    edx,eax
  40f9ff:	inc    ecx
  40fa00:	inc    DWORD PTR [ebp-0x18]
  40fa03:	add    edx,esi
  40fa05:	jmp    0x411da1
  40fa0a:	fstp   DWORD PTR [ebx]
  40fa0c:	sti    
  40fa0d:	sar    DWORD PTR [ebx-0x4f],1
  40fa10:	jnp    0x40fa2d
  40fa12:	inc    esi
  40fa13:	xchg   ebx,eax
  40fa14:	or     ch,BYTE PTR [eax]
  40fa16:	lods   al,BYTE PTR ds:[esi]
  40fa17:	fist   WORD PTR [eax-0x43]
  40fa1a:	je     0x40f9e6
  40fa1c:	jp     0x40fa98
  40fa1e:	sti    
  40fa1f:	pop    edi
  40fa20:	jp     0x40fa9c
  40fa22:	and    BYTE PTR [edx-0x35],dh
  40fa25:	enter  0x49f8,0xd6
  40fa29:	ret    0xcaf2
  40fa2c:	das    
  40fa2d:	push   edx
  40fa2e:	xchg   esi,eax
  40fa2f:	cmp    BYTE PTR [ecx],ch
  40fa31:	scas   al,BYTE PTR es:[edi]
  40fa32:	add    DWORD PTR [edx-0x16],eax
  40fa35:	xor    bl,al
  40fa37:	leave  
  40fa38:	inc    eax
  40fa39:	or     eax,0x78e62e55
  40fa3e:	imul   esi,DWORD PTR [edi],0xfcf3a125
  40fa44:	mov    al,0x2
  40fa46:	cmovo  ebx,DWORD PTR [eax+0x1e362592]
  40fa4d:	mov    bh,0xc0
  40fa4f:	pop    edi
  40fa50:	bound  esp,QWORD PTR [edx+0x5c]
  40fa53:	stc    
  40fa54:	inc    edi
  40fa55:	mov    eax,0x39f70779
  40fa5a:	jae    0x40fa11
  40fa5c:	mov    bl,0x7f
  40fa5e:	sti    
  40fa5f:	sbb    ebp,DWORD PTR gs:[eax+0xa]
  40fa63:	outs   dx,BYTE PTR ds:[esi]
  40fa64:	(bad)  
  40fa65:	outs   dx,BYTE PTR ds:[esi]
  40fa66:	cmc    
  40fa67:	in     eax,0xae
  40fa69:	ret    
  40fa6a:	push   es
  40fa6b:	mov    eax,ds:0xf4828a4e
  40fa70:	jne    0x40fa81
  40fa72:	and    al,0x8
  40fa74:	dec    esi
  40fa75:	mov    ah,0xbd
  40fa77:	or     al,0x72
  40fa79:	mov    esi,0x3f792e84
  40fa7e:	jae    0x40fa09
  40fa80:	jo     0x40faa8
  40fa82:	je     0x40fa61
  40fa84:	inc    esi
  40fa85:	pop    ebx
  40fa86:	push   ebp
  40fa87:	jmp    0xa735815f
  40fa8c:	push   eax
  40fa8d:	sbb    esp,DWORD PTR [ecx]
  40fa8f:	mov    DWORD PTR [edx+0x50],edx
  40fa92:	lods   al,BYTE PTR ds:[esi]
  40fa93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa94:	test   BYTE PTR [ebx-0x35],ah
  40fa97:	push   eax
  40fa98:	lock sub DWORD PTR [edx-0x55],edx
  40fa9c:	shl    DWORD PTR cs:[edi],1
  40fa9f:	mov    bh,0x75
  40faa1:	ror    BYTE PTR [eax],1
  40faa3:	dec    ecx
  40faa4:	pusha  
  40faa5:	dec    edx
  40faa6:	in     eax,0xf
  40faa8:	dec    esp
  40faa9:	jae    0x40fa5d
  40faab:	push   ds
  40faac:	ficomp DWORD PTR es:[ebx]
  40faaf:	jl     0x40fb15
  40fab1:	dec    edi
  40fab2:	mov    cl,0xaa
  40fab4:	mov    esp,DWORD PTR [ecx-0x22]
  40fab7:	(bad)  
  40fab8:	(bad)  
  40fab9:	pusha  
  40faba:	gs dec edi
  40fabc:	aas    
  40fabd:	scas   eax,DWORD PTR es:[edi]
  40fabe:	fisubr WORD PTR [eax+0x10b68094]
  40fac4:	call   0x277bb2d2
  40fac9:	mov    eax,0x12d0d58f
  40face:	popf   
  40facf:	xchg   esi,eax
  40fad0:	or     ah,BYTE PTR [edi]
  40fad2:	cmp    al,0x7b
  40fad4:	out    0x20,al
  40fad6:	out    0x6,al
  40fad8:	xchg   esp,edx
  40fada:	push   esp
  40fadb:	mov    ecx,0xf8b14dd1
  40fae0:	aaa    
  40fae1:	aas    
  40fae2:	jle    0x40fa8d
  40fae4:	out    0x55,eax
  40fae6:	jl     0x40fb34
  40fae8:	fcmove st,st(6)
  40faea:	dec    di
  40faec:	jl     0x40fb14
  40faee:	mov    eax,0x5f7e47c7
  40faf3:	push   ds
  40faf4:	add    DWORD PTR [ebx+0x3724d806],eax
  40fafa:	inc    DWORD PTR [esi-0x59]
  40fafd:	mov    al,0x7
  40faff:	popa   
  40fb00:	cmp    BYTE PTR [ebp-0x77786bd5],ah
  40fb06:	mov    ecx,0xd383efce
  40fb0b:	shr    edx,cl
  40fb0d:	sub    esp,DWORD PTR [eax-0x33]
  40fb10:	xchg   edi,eax
  40fb11:	adc    al,0xb2
  40fb13:	adc    eax,0xaa128a25
  40fb18:	(bad)
  40fb1b:	cmp    edx,DWORD PTR [ebp-0x1605c531]
  40fb21:	cmp    al,ch
  40fb23:	push   cs
  40fb24:	out    dx,eax
  40fb25:	inc    edx
  40fb26:	mov    ah,0xd2
  40fb28:	jns    0x40fb11
  40fb2a:	push   0x4237d5c6
  40fb2f:	add    DWORD PTR [eax],0xffffff90
  40fb32:	add    DWORD PTR [ecx+0x4ea764c9],edi
  40fb38:	jmp    0x5281e867
  40fb3d:	inc    eax
  40fb3e:	lds    esp,FWORD PTR [ecx-0x72721785]
  40fb44:	test   DWORD PTR [eax+0x5c60926],ebx
  40fb4a:	dec    ebp
  40fb4b:	out    dx,eax
  40fb4c:	push   ss
  40fb4d:	push   ss
  40fb4e:	jle    0x40fafd
  40fb50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb51:	mov    esi,0x8be8167e
  40fb56:	inc    esp
  40fb57:	out    0x78,al
  40fb59:	xchg   edi,eax
  40fb5a:	mov    ecx,0x601ec819
  40fb5f:	xor    al,0x4d
  40fb61:	std    
  40fb62:	add    DWORD PTR [esp+edx*2+0x35090330],esi
  40fb69:	stos   BYTE PTR es:[edi],al
  40fb6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb6b:	repnz std 
  40fb6d:	mov    al,0xa9
  40fb6f:	ret    0x2431
  40fb72:	cmp    dh,0x32
  40fb75:	es repz cli 
  40fb78:	rcl    DWORD PTR [ebx],cl
  40fb7a:	ret    0xb30e
  40fb7d:	cmp    al,0xbb
  40fb7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb80:	add    eax,0xb5b6909a
  40fb85:	out    0x6c,al
  40fb87:	lahf   
  40fb88:	aaa    
  40fb89:	adc    al,0xfd
  40fb8b:	lea    ecx,[edi+0x2f]
  40fb8e:	(bad)  
  40fb8f:	mov    esi,0x776fb063
  40fb94:	dec    edx
  40fb95:	(bad)  
  40fb96:	rol    esi,1
  40fb98:	popf   
  40fb99:	scas   eax,DWORD PTR es:[edi]
  40fb9a:	mov    ds:0x3fd065d6,eax
  40fb9f:	aas    
  40fba0:	dec    ecx
  40fba1:	aaa    
  40fba2:	jg     0x40fbf9
  40fba4:	xor    ecx,DWORD PTR [edx-0x1f]
  40fba7:	lods   al,BYTE PTR ds:[esi]
  40fba8:	pop    esi
  40fba9:	mov    edx,0x2d655007
  40fbae:	and    DWORD PTR ds:0xea4958b4,eax
  40fbb4:	pop    ds
  40fbb5:	sbb    BYTE PTR ds:0x7777bdb1,al
  40fbbb:	inc    ecx
  40fbbc:	popf   
  40fbbd:	jl     0x40fb8b
  40fbbf:	imul   esp,DWORD PTR [esi-0x3],0x39
  40fbc3:	iret   
  40fbc4:	add    edi,ebp
  40fbc6:	fld    TBYTE PTR [esi+0x32]
  40fbc9:	push   edi
  40fbca:	xchg   ebp,eax
  40fbcb:	scas   al,BYTE PTR es:[edi]
  40fbcc:	push   eax
  40fbcd:	loope  0x40fb6b
  40fbcf:	outs   dx,DWORD PTR ds:[esi]
  40fbd0:	add    eax,0x2318421e
  40fbd5:	add    bl,BYTE PTR [esi]
  40fbd7:	fisttp DWORD PTR [edi]
  40fbd9:	pop    edi
  40fbda:	sbb    ebp,DWORD PTR [ebp-0x25]
  40fbdd:	shl    BYTE PTR [ecx-0x2744003c],0x58
  40fbe4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbe5:	test   bl,ch
  40fbe7:	inc    edi
  40fbe8:	stc    
  40fbe9:	clc    
  40fbea:	xchg   WORD PTR cs:[ebx],bp
  40fbee:	sub    al,0x8f
  40fbf0:	sbb    DWORD PTR [eax+edx*1+0x7f22c5ef],0xffffff82
  40fbf8:	mov    ss,WORD PTR ds:0x8af6f8db
  40fbfe:	loope  0x40fc38
  40fc00:	and    ch,bh
  40fc02:	pop    ds
  40fc03:	inc    edi
  40fc04:	mov    ebp,0xe9835537
  40fc09:	inc    ebx
  40fc0a:	or     ch,ah
  40fc0c:	mov    dl,0x4
  40fc0e:	test   DWORD PTR [ecx-0x56e8836e],ecx
  40fc14:	fisubr WORD PTR [ebx+0x1b]
  40fc17:	mov    ebx,0xcaad3453
  40fc1c:	leave  
  40fc1d:	outs   dx,DWORD PTR ds:[esi]
  40fc1e:	lods   al,BYTE PTR ds:[esi]
  40fc1f:	retf   
  40fc20:	dec    esi
  40fc21:	loop   0x40fc48
  40fc23:	xchg   esi,eax
  40fc24:	add    ah,BYTE PTR [edx]
  40fc26:	fidivr WORD PTR [eax+0x63]
  40fc29:	out    0xa7,eax
  40fc2b:	adc    esi,edi
  40fc2d:	jmp    FWORD PTR [ebp-0x3b]
  40fc30:	aam    0x2b
  40fc32:	xor    bh,BYTE PTR [edx-0x2c]
  40fc35:	jl     0x40fbb7
  40fc37:	stos   BYTE PTR es:[edi],al
  40fc38:	mov    ebp,0x1993110a
  40fc3d:	daa    
  40fc3e:	das    
  40fc3f:	fimul  WORD PTR [eax+0x5048a232]
  40fc45:	mov    ds:0x2402cdb7,ax
  40fc4b:	xchg   edx,eax
  40fc4c:	xor    eax,0xf7476d1c
  40fc51:	fmul   QWORD PTR [edx+ecx*4+0x56da1b68]
  40fc58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc59:	sub    BYTE PTR [ebp+ebp*8-0x62],0x41
  40fc5e:	lods   al,BYTE PTR ds:[esi]
  40fc5f:	jle    0x40fbe9
  40fc61:	add    ebp,DWORD PTR [edx-0x1]
  40fc64:	in     eax,dx
  40fc65:	jg     0x40fcd3
  40fc67:	test   al,0x88
  40fc69:	pop    ds
  40fc6a:	ss cli 
  40fc6c:	add    eax,0xf766a7b5
  40fc71:	mov    ebp,0xc71b55e
  40fc76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc77:	mov    WORD PTR [edx-0x7e],cs
  40fc7a:	inc    edx
  40fc7b:	fdivr  QWORD PTR [edx-0x75f94312]
  40fc81:	sbb    DWORD PTR [edi+0x6e],edx
  40fc84:	or     BYTE PTR [eax-0x464ad8c9],ah
  40fc8a:	jnp    0x40fc93
  40fc8c:	retf   0x5d01
  40fc8f:	loope  0x40fcce
  40fc91:	mov    ecx,0x8f249630
  40fc96:	jbe    0x40fc72
  40fc98:	mov    esp,0x5fdd8e75
  40fc9d:	and    eax,DWORD PTR ds:0xf9584874
  40fca3:	xchg   esp,eax
  40fca4:	imul   eax,DWORD PTR [esi+0x29],0xe1e5ba1e
  40fcab:	adc    eax,0x64f429b4
  40fcb0:	cmp    al,ch
  40fcb2:	not    BYTE PTR [ebp+0x7b]
  40fcb5:	mov    ch,0x3
  40fcb7:	mov    dh,0x37
  40fcb9:	bound  edx,QWORD PTR [ebx+0x44]
  40fcbc:	imul   esp,ecx,0x55
  40fcbf:	test   eax,0x77f4e501
  40fcc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcc5:	xchg   ebp,eax
  40fcc6:	push   0x2b55d3da
  40fccb:	add    al,0x27
  40fccd:	pop    ebx
  40fcce:	or     DWORD PTR [ebx+eax*2-0x13],ecx
  40fcd2:	mov    ah,0xa0
  40fcd4:	mov    al,BYTE PTR [edx+ecx*8-0x2f660431]
  40fcdb:	jnp    0x40fd45
  40fcdd:	test   eax,0xdb1b0bc
  40fce2:	jo     0x40fcd1
  40fce4:	or     eax,0x8896535c
  40fce9:	jmp    0x444e:0xcddc595
  40fcf0:	dec    edx
  40fcf1:	inc    edi
  40fcf2:	pop    edx
  40fcf3:	or     al,BYTE PTR [ecx]
  40fcf5:	pop    DWORD PTR [edi-0x35f8e271]
  40fcfb:	imul   ebp,DWORD PTR [ebx],0xbf84244b
  40fd01:	fldenv [esi]
  40fd03:	(bad)  
  40fd04:	push   ebp
  40fd05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd06:	inc    esp
  40fd07:	dec    cx
  40fd09:	(bad)  
  40fd0a:	sub    ah,dl
  40fd0c:	nop
  40fd0d:	in     al,0x13
  40fd0f:	mov    esp,0xc03e5544
  40fd14:	add    bl,BYTE PTR [ebp+ebp*4-0x712c5e8f]
  40fd1b:	fistp  WORD PTR [ebp-0x43b5448b]
  40fd21:	cmp    BYTE PTR [eax-0x67],cl
  40fd24:	inc    ebx
  40fd25:	or     BYTE PTR [ebp+0x2d],cl
  40fd28:	sbb    eax,0x8598399c
  40fd2d:	sbb    DWORD PTR [ecx-0x2a],edi
  40fd30:	bound  ebp,QWORD PTR [ebx+eax*2]
  40fd33:	jle    0x40fcc5
  40fd35:	mov    esp,0x9c5bf634
  40fd3a:	std    
  40fd3b:	mov    eax,ds:0xdc3c50b8
  40fd40:	and    cl,dh
  40fd42:	or     ebx,DWORD PTR [ebx+0x25]
  40fd45:	push   ebp
  40fd46:	adc    eax,0xde3340fb
  40fd4b:	adc    ch,BYTE PTR [ebp+0x2288371c]
  40fd51:	mov    esi,DWORD PTR [ecx]
  40fd53:	mov    ch,0xb5
  40fd55:	dec    edx
  40fd56:	pop    ebx
  40fd57:	in     eax,dx
  40fd58:	sub    BYTE PTR [eax],bl
  40fd5a:	and    eax,0x25ffc29
  40fd5f:	ror    BYTE PTR [esi-0x76],cl
  40fd62:	stc    
  40fd63:	mov    dl,BYTE PTR ds:0xd9ed2d31
  40fd69:	lea    esp,[edi]
  40fd6b:	adc    al,0xde
  40fd6d:	out    dx,al
  40fd6e:	stc    
  40fd6f:	mov    ecx,0xeb0d5462
  40fd74:	into   
  40fd75:	dec    esp
  40fd76:	pop    eax
  40fd77:	fsubr  DWORD PTR [eax]
  40fd79:	lods   eax,DWORD PTR ds:[esi]
  40fd7a:	jg     0x40fd0f
  40fd7c:	xor    dl,dl
  40fd7e:	es xchg edi,eax
  40fd80:	fstp   QWORD PTR [edx+edi*2]
  40fd83:	push   0xffffffa7
  40fd85:	aad    0x5f
  40fd87:	adc    DWORD PTR [edx+0x778711c2],esp
  40fd8d:	sbb    eax,0x151a62d6
  40fd92:	imul   esi,DWORD PTR [ecx+0x1014c76],0xffffffbe
  40fd99:	in     eax,dx
  40fd9a:	adc    al,0x66
  40fd9c:	cmp    ecx,edx
  40fd9e:	sub    dh,BYTE PTR [edi+0x5452f837]
  40fda4:	mov    bl,0x1a
  40fda6:	mov    bl,0x4d
  40fda8:	imul   eax,DWORD PTR [edi],0xffffffbf
  40fdab:	xor    esi,DWORD PTR [ecx+0x5d90bd44]
  40fdb1:	les    esp,FWORD PTR [ebx+0x60]
  40fdb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdb5:	pop    edx
  40fdb6:	dec    ecx
  40fdb7:	loop   0x40fdf8
  40fdb9:	rcl    BYTE PTR gs:[esi+eiz*1-0x329feab2],0x4c
  40fdc2:	hlt    
  40fdc3:	ds ret 0xbe20
  40fdc7:	imul   ebx,ebp,0x8419f99
  40fdcd:	mov    ds:0x7eb3590e,eax
  40fdd2:	or     DWORD PTR [edi-0x60],esp
  40fdd5:	jno    0x40fdd6
  40fdd7:	pop    eax
  40fdd8:	jmp    0x40fe42
  40fdda:	mov    edi,0x6a37d421
  40fddf:	sub    DWORD PTR [edx-0x353a7b6a],ebp
  40fde5:	push   edx
  40fde6:	dec    ecx
  40fde7:	test   eax,0x43d33741
  40fdec:	rcl    DWORD PTR [ecx-0x7e],1
  40fdef:	loopne 0x40fdc6
  40fdf1:	mov    ch,0x3f
  40fdf3:	mov    bl,0xcf
  40fdf5:	or     al,0xa3
  40fdf7:	or     al,0x9d
  40fdf9:	sbb    eax,0x91c395a1
  40fdfe:	stos   BYTE PTR es:[edi],al
  40fdff:	jmp    0x40fde0
  40fe01:	mov    esi,0x5b9d7f55
  40fe06:	adc    al,0xfa
  40fe08:	cwde   
  40fe09:	lods   eax,DWORD PTR ds:[esi]
  40fe0a:	push   edi
  40fe0b:	pop    ebx
  40fe0c:	(bad)  
  40fe0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe0e:	jp     0x40fdcc
  40fe10:	in     al,0xa0
  40fe12:	mov    cl,BYTE PTR [edx]
  40fe14:	pop    ebx
  40fe15:	(bad)  
  40fe16:	mov    bh,0xf9
  40fe18:	test   DWORD PTR [eax+0x13e1a23b],ebp
  40fe1e:	adc    edx,DWORD PTR [edi-0x4ad2f99d]
  40fe24:	dec    esp
  40fe25:	in     al,0x7a
  40fe27:	and    esi,DWORD PTR [ecx+0x22fb59d5]
  40fe2d:	inc    eax
  40fe2e:	jmp    0x1529:0x9a0b
  40fe34:	loope  0x40fe98
  40fe36:	and    BYTE PTR [ebx],0x67
  40fe39:	jecxz  0x40fddf
  40fe3b:	scas   eax,DWORD PTR es:[edi]
  40fe3c:	cmp    DWORD PTR [ecx+0x36],0xffffffe8
  40fe40:	xor    eax,0x8dcee602
  40fe45:	mov    ds:0x99ed20ab,al
  40fe4a:	popa   
  40fe4b:	mov    ds:0xd599311b,eax
  40fe50:	sbb    al,0x14
  40fe52:	inc    ecx
  40fe53:	fstp   TBYTE PTR [edx]
  40fe55:	mov    al,0xfa
  40fe57:	jle    0x40fe74
  40fe59:	inc    ebp
  40fe5a:	jno    0x40fe63
  40fe5c:	cmp    bh,BYTE PTR [ebp+0x48]
  40fe5f:	push   cs
  40fe60:	and    eax,0x7db780b1
  40fe65:	add    ebx,0x63f0f064
  40fe6b:	cwde   
  40fe6c:	push   edi
  40fe6e:	pusha  
  40fe6f:	cmp    al,0xb5
  40fe71:	pavgw  mm7,QWORD PTR [ecx-0x1a1d26d5]
  40fe78:	je     0x40fe0f
  40fe7a:	dec    eax
  40fe7b:	mov    cl,0xb5
  40fe7d:	fiadd  DWORD PTR [ebp+0x19]
  40fe80:	dec    ebx
  40fe81:	push   ds
  40fe82:	cwde   
  40fe83:	mov    ebx,0x9f95d9fd
  40fe88:	xchg   DWORD PTR [edi],edx
  40fe8a:	retf   
  40fe8b:	jb     0x40fe83
  40fe8d:	cmp    BYTE PTR [esi+edi*8],bh
  40fe90:	int3   
  40fe91:	out    0x3e,eax
  40fe93:	pusha  
  40fe94:	in     al,0xb0
  40fe96:	in     eax,0xf
  40fe98:	push   edx
  40fe99:	xchg   edx,eax
  40fe9a:	dec    ebp
  40fe9b:	fnstcw WORD PTR [edx+0x7b]
  40fe9e:	test   BYTE PTR [ebx+0x4480f518],cl
  40fea4:	mov    ebx,0xb62e40bf
  40fea9:	mov    DWORD PTR [edx],ebx
  40feab:	xchg   esi,eax
  40feac:	repz mov ds:0x3025208a,al
  40feb2:	xchg   esp,eax
  40feb3:	mov    esi,edx
  40feb5:	push   0xc
  40feb7:	xchg   ebp,eax
  40feb8:	fldenv [ebx+edx*4]
  40febb:	push   0x2110f375
  40fec0:	dec    esp
  40fec1:	cli    
  40fec2:	mov    ah,0x5b
  40fec4:	iret   
  40fec5:	mov    eax,ds:0x31b6eb3c
  40feca:	push   edx
  40fecb:	mov    al,ds:0x21555c9c
  40fed0:	xor    BYTE PTR [esi],cl
  40fed2:	inc    di
  40fed4:	cmp    dh,BYTE PTR [ecx+0x10]
  40fed7:	aam    0x22
  40fed9:	mov    bh,0x24
  40fedb:	out    dx,al
  40fedc:	fdiv   QWORD PTR [eax]
  40fede:	jge    0x40feeb
  40fee0:	xchg   ebx,eax
  40fee1:	stc    
  40fee2:	in     eax,0xf4
  40fee4:	push   0x4bf63cf6
  40fee9:	sub    cl,BYTE PTR [ebx-0x5cd1cbb1]
  40feef:	push   ebx
  40fef0:	imul   ecx,DWORD PTR [eax+0x8fe316e],0xd70c1072
  40fefa:	push   cs
  40fefb:	xchg   ebx,eax
  40fefc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fefd:	ds push edx
  40feff:	xchg   ecx,eax
  40ff00:	gs int3 
  40ff02:	out    0xcc,al
  40ff04:	sub    eax,0xca728499
  40ff09:	add    al,al
  40ff0b:	pusha  
  40ff0c:	clc    
  40ff0d:	jb     0x40ff4c
  40ff0f:	stc    
  40ff10:	mov    BYTE PTR [ecx-0x47],cl
  40ff13:	push   ebx
  40ff14:	or     ebx,esi
  40ff16:	or     edx,0x90ad0a1a
  40ff1c:	jg     0x40ff77
  40ff1e:	or     ecx,DWORD PTR [edx+eax*2-0x15]
  40ff22:	sbb    dh,bh
  40ff24:	sbb    ebx,DWORD PTR [ecx]
  40ff26:	aam    0x36
  40ff28:	shl    DWORD PTR [ecx+0x71],0xe0
  40ff2c:	and    al,0xb0
  40ff2e:	rcr    BYTE PTR [edx-0x75d166f6],1
  40ff34:	cmp    DWORD PTR [ebp-0xd],esp
  40ff37:	das    
  40ff38:	lods   eax,DWORD PTR ds:[esi]
  40ff39:	(bad)  
  40ff3a:	mov    ah,0x78
  40ff3c:	and    ch,BYTE PTR [ecx+0x2d80bad5]
  40ff42:	adc    eax,0x6ce50079
  40ff47:	xchg   esp,eax
  40ff48:	in     al,dx
  40ff49:	mov    al,ds:0x98cade62
  40ff4e:	jmp    DWORD PTR [ebx]
  40ff50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff51:	mov    eax,0xef486dfe
  40ff56:	jmp    0x867c:0xb611284a
  40ff5d:	cmp    ecx,DWORD PTR [edi+ebp*8]
  40ff60:	mov    DWORD PTR [eax+0x3107ac33],ecx
  40ff66:	sahf   
  40ff67:	loop   0x40ffc7
  40ff69:	outs   dx,DWORD PTR ds:[esi]
  40ff6a:	sbb    DWORD PTR [edx+ecx*2+0x1539ff51],esi
  40ff71:	xchg   BYTE PTR [edx+edx*2-0x49],bh
  40ff75:	sub    ecx,DWORD PTR [edx+0x7]
  40ff78:	fnstenv [ebx-0x2d7ea1d8]
  40ff7e:	aam    0x82
  40ff80:	push   cs
  40ff81:	inc    edi
  40ff82:	call   0xa9420380
  40ff87:	out    0xc3,eax
  40ff89:	(bad)  
  40ff8a:	push   edi
  40ff8b:	jo     0x410001
  40ff8d:	pop    eax
  40ff8e:	sbb    DWORD PTR [ecx-0x249bba3],ebx
  40ff94:	(bad)  
  40ff96:	rep stos BYTE PTR es:[edi],al
  40ff98:	inc    DWORD PTR ds:0xe2715678
  40ff9e:	cmp    eax,0xfffffffb
  40ffa1:	(bad)  
  40ffa2:	test   al,0x21
  40ffa4:	jp     0x40fffb
  40ffa6:	adc    esp,ebx
  40ffa8:	lahf   
  40ffa9:	loop   0x410026
  40ffab:	pop    eax
  40ffac:	paddsb mm7,QWORD PTR [ebx-0x32]
  40ffb0:	cmp    al,0xae
  40ffb2:	div    bl
  40ffb4:	je     0x40ffca
  40ffb6:	out    dx,al
  40ffb7:	mov    edx,0x4f97ebad
  40ffbc:	fidiv  DWORD PTR [eax+0x3bf0931c]
  40ffc2:	clc    
  40ffc3:	into   
  40ffc4:	adc    BYTE PTR [edx],dh
  40ffc6:	aas    
  40ffc7:	mov    esp,0x3537b3f
  40ffcc:	shl    BYTE PTR ds:0x46283480,1
  40ffd2:	ins    BYTE PTR es:[edi],dx
  40ffd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffd4:	out    0x22,eax
  40ffd6:	cmc    
  40ffd7:	aad    0xb6
  40ffd9:	(bad)  
  40ffda:	fcomp  DWORD PTR [ebp+esi*1-0x419bd974]
  40ffe1:	mov    BYTE PTR [edx],dl
  40ffe3:	mov    ah,BYTE PTR [eax-0x4e]
  40ffe6:	imul   ebx,ebp,0x6247739
  40ffec:	mov    al,0x88
  40ffee:	ficomp DWORD PTR [edx]
  40fff0:	aas    
  40fff1:	sbb    bh,BYTE PTR [esi-0x5f]
  40fff4:	ret    0xaec2
  40fff7:	into   
  40fff8:	dec    edi
  40fff9:	and    BYTE PTR [ecx+ecx*2],ah
  40fffc:	and    ebp,DWORD PTR [ebp+0x9]
  40ffff:	ja     0x410043
  410001:	dec    ebp
  410002:	xchg   edi,eax
  410003:	enter  0x6b6d,0x8d
  410007:	loopne 0x40ffb6
  410009:	pop    ebx
  41000a:	ficom  WORD PTR [edx]
  41000c:	inc    edx
  41000d:	inc    ebp
  41000e:	pushf  
  41000f:	jmp    0xdfb414ed
  410014:	imul   ebp,DWORD PTR [eax-0x61],0x9cd66a84
  41001b:	aaa    
  41001c:	int    0xae
  41001e:	jp     0x410026
  410020:	mov    cl,0xce
  410022:	push   ecx
  410023:	idiv   BYTE PTR [eax]
  410025:	and    DWORD PTR [edi-0x2e0b9ad5],edi
  41002b:	cld    
  41002c:	cdq    
  41002d:	xchg   esp,eax
  41002e:	xchg   BYTE PTR [edi-0x20713641],bl
  410034:	xchg   edx,ebx
  410036:	xor    al,0xde
  410038:	cmp    al,ch
  41003a:	lds    eax,FWORD PTR [edi+0x3cad657e]
  410040:	ins    BYTE PTR es:[edi],dx
  410041:	dec    esp
  410042:	jl     0x41005b
  410044:	outs   dx,DWORD PTR ds:[esi]
  410045:	sub    eax,0xadfa5c69
  41004a:	and    eax,0x41c11c25
  41004f:	add    ecx,DWORD PTR [edi+0x4dc0d054]
  410055:	jmp    FWORD PTR [ebx]
  410057:	mov    ah,0xf0
  410059:	pop    esi
  41005a:	push   es
  41005b:	imul   esp,DWORD PTR [ebx-0xf8ebc1c],0x36c5392c
  410065:	mov    al,0xb
  410067:	xchg   ebp,eax
  410068:	push   ds
  410069:	lahf   
  41006a:	out    dx,al
  41006b:	mov    ds,WORD PTR [ebx-0x5c21ba47]
  410071:	imul   eax,DWORD PTR [ebx+ebx*1+0x48],0x4069cf11
  410079:	(bad)  
  41007a:	adc    al,BYTE PTR [ecx+0x286de0e9]
  410080:	call   0x56d1:0x3375a4fb
  410087:	pop    esp
  410088:	dec    esi
  410089:	push   ecx
  41008a:	cdq    
  41008b:	nop
  41008c:	pop    ebx
  41008d:	test   BYTE PTR [ecx-0xa],ah
  410090:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410091:	sub    DWORD PTR [edx-0x22258b6],ebx
  410097:	stos   BYTE PTR es:[edi],al
  410098:	adc    BYTE PTR gs:[ecx+0x2e],al
  41009c:	or     eax,edx
  41009e:	or     al,0x68
  4100a0:	and    edx,DWORD PTR [edi+0xd3e7d87]
  4100a6:	xchg   DWORD PTR [ebx],ecx
  4100a8:	jp     0x410091
  4100aa:	fs retf 0x9714
  4100ae:	mov    DWORD PTR [eax+0x5c8fbe06],edx
  4100b4:	xor    DWORD PTR [edi],edx
  4100b6:	ja     0x41003a
  4100b8:	sbb    edx,DWORD PTR [ebp+0xffeb8cd]
  4100be:	pushf  
  4100bf:	fimul  WORD PTR [ebp+0x4d]
  4100c2:	daa    
  4100c3:	xlat   BYTE PTR ds:[ebx]
  4100c4:	loop   0x410113
  4100c6:	push   esi
  4100c7:	sub    bh,ch
  4100c9:	cld    
  4100ca:	adc    esp,DWORD PTR [edx]
  4100cc:	aam    0xe8
  4100ce:	shl    BYTE PTR [edi+0x16],0x1a
  4100d2:	add    esi,eax
  4100d4:	mov    esp,0x733b79bb
  4100d9:	inc    esp
  4100da:	out    dx,al
  4100db:	into   
  4100dc:	clc    
  4100dd:	mov    eax,ds:0x111f8233
  4100e2:	test   bl,bl
  4100e4:	icebp  
  4100e5:	mov    ds:0x8ab7ef1a,al
  4100ea:	jle    0x410154
  4100ec:	in     eax,dx
  4100ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100ee:	es pop ebp
  4100f0:	into   
  4100f1:	cmc    
  4100f2:	xlat   BYTE PTR ds:[ebx]
  4100f3:	jnp    0x410111
  4100f5:	mov    edi,0xf4422495
  4100fa:	xchg   esi,eax
  4100fb:	adc    edi,DWORD PTR [edi+0x1c]
  4100fe:	add    ecx,DWORD PTR [eax-0x7b]
  410101:	jae    0x410120
  410103:	es in  eax,dx
  410105:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410106:	(bad)  
  410107:	adc    eax,0x7dcc8a29
  41010c:	sub    eax,0x4bde7c00
  410111:	xor    dh,ch
  410113:	jge    0x4100dc
  410115:	sti    
  410116:	adc    DWORD PTR [ebx+edx*2+0x5fa51450],ecx
  41011d:	call   0xc6242542
  410122:	retf   
  410123:	je     0x4100b1
  410125:	cs hlt 
  410127:	idiv   BYTE PTR [ebx]
  410129:	and    BYTE PTR [esi],dh
  41012b:	(bad)  
  41012c:	sbb    BYTE PTR [edx+0x7e],cl
  41012f:	mov    dh,0x5
  410131:	fs in  eax,0x57
  410134:	xchg   DWORD PTR [eax+esi*8-0x67],edx
  410138:	mov    edi,0xa324ce02
  41013d:	dec    esp
  41013e:	xlat   BYTE PTR ds:[ebx]
  41013f:	mov    bh,0xb3
  410141:	mov    cl,0xb2
  410143:	adc    al,cl
  410145:	outs   dx,DWORD PTR ds:[esi]
  410146:	out    dx,eax
  410147:	iret   
  410148:	lods   al,BYTE PTR ds:[esi]
  410149:	(bad)  
  41014a:	push   edi
  41014b:	sbb    eax,DWORD PTR [edi-0x2abd9b3b]
  410151:	jge    0x4101ad
  410153:	mov    eax,0x314a298b
  410158:	cmp    DWORD PTR [edx-0x4df56914],0xffffffb0
  41015f:	stc    
  410160:	int    0xeb
  410162:	mov    ah,0xcc
  410164:	mov    edi,eax
  410166:	(bad)  
  410168:	adc    DWORD PTR [ebx],ecx
  41016a:	cmp    ebx,DWORD PTR [edx-0x79]
  41016d:	cs std 
  41016f:	add    al,0xb8
  410171:	call   0xe65187b1
  410176:	xor    DWORD PTR [ebx+esi*8],edi
  410179:	mov    al,ds:0x710f2703
  41017e:	cmp    BYTE PTR [ebx],bh
  410180:	add    eax,0xb5483a5f
  410185:	sub    ebp,DWORD PTR [edi-0x22]
  410188:	fucomi st,st(7)
  41018a:	and    al,0x32
  41018c:	push   0xdf63953f
  410191:	mov    eax,ds:0x6f9260ca
  410196:	out    0x49,eax
  410198:	push   eax
  410199:	ins    DWORD PTR es:[edi],dx
  41019a:	pop    ebx
  41019b:	or     eax,0x49fc75bd
  4101a0:	xlat   BYTE PTR ds:[ebx]
  4101a1:	je     0x410126
  4101a3:	int    0xa2
  4101a5:	arpl   bp,di
  4101a7:	xor    dl,0x13
  4101aa:	or     al,0xe9
  4101ac:	push   ecx
  4101ad:	xlat   BYTE PTR ds:[ebx]
  4101ae:	mov    ah,0xd0
  4101b0:	cli    
  4101b1:	into   
  4101b2:	mov    edi,0x172599a5
  4101b7:	add    al,BYTE PTR [ebx]
  4101b9:	dec    esp
  4101ba:	xlat   BYTE PTR ds:[ebx]
  4101bb:	loopne 0x410142
  4101bd:	push   cs
  4101be:	sub    DWORD PTR [ebx-0x2d9c4481],ebp
  4101c4:	in     al,dx
  4101c5:	jmp    0xc463:0x6adbd956
  4101cc:	cmp    eax,0xdfae9f8c
  4101d1:	pusha  
  4101d2:	jl     0x410245
  4101d4:	clc    
  4101d5:	leave  
  4101d6:	mov    dl,0x65
  4101d8:	mov    ds:0xb4cc934c,al
  4101dd:	cmp    BYTE PTR [ebp+0x1f4c2290],cl
  4101e3:	leave  
  4101e4:	call   0xdc4ecf38
  4101e9:	dec    edi
  4101ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101eb:	xchg   edx,eax
  4101ec:	(bad)  
  4101ed:	push   0xb8f568e8
  4101f2:	and    edx,DWORD PTR [edx+eax*1+0x7b645c67]
  4101f9:	outs   dx,DWORD PTR ds:[esi]
  4101fa:	pop    ss
  4101fb:	sub    DWORD PTR [ebx-0x6d],ebx
  4101fe:	and    BYTE PTR [ecx+0x64eacd46],ch
  410204:	or     ebp,DWORD PTR [ebx]
  410206:	scas   eax,DWORD PTR es:[edi]
  410207:	add    al,0x1e
  410209:	dec    edi
  41020a:	test   bh,al
  41020c:	scas   eax,DWORD PTR es:[edi]
  41020d:	fisub  DWORD PTR [edi-0x547c821b]
  410213:	aaa    
  410214:	push   cs
  410215:	push   eax
  410216:	mov    esi,0x81083016
  41021b:	data16 ffree st(1)
  41021e:	jae    0x41020e
  410220:	clc    
  410221:	retf   
  410222:	mov    ecx,0x233d824b
  410227:	mov    edx,0x9adaf57e
  41022c:	inc    eax
  41022d:	fcomp  DWORD PTR [ebp+0x2]
  410230:	lea    ebx,[eax]
  410232:	cmp    al,0x67
  410234:	inc    ecx
  410235:	aad    0x43
  410237:	sub    al,0x7d
  410239:	ret    0x4c73
  41023c:	cdq    
  41023d:	lods   al,BYTE PTR ds:[esi]
  41023e:	icebp  
  41023f:	push   edx
  410240:	loop   0x410254
  410242:	mov    dh,dl
  410244:	outs   dx,BYTE PTR ds:[esi]
  410245:	add    ecx,0xffffff9b
  410248:	ret    0x6039
  41024b:	into   
  41024c:	push   ss
  41024d:	fst    DWORD PTR [eax-0x62]
  410250:	sub    DWORD PTR [edi-0x32807e13],esi
  410256:	icebp  
  410257:	(bad)  [edx-0x51]
  41025a:	xchg   DWORD PTR [eax],edx
  41025c:	sti    
  41025d:	add    dl,BYTE PTR [edx]
  41025f:	bound  esp,QWORD PTR [eax-0x7]
  410262:	sub    DWORD PTR [edx],ecx
  410264:	inc    eax
  410265:	stos   DWORD PTR es:[edi],eax
  410266:	fidivr WORD PTR [edx-0x3b0f7dff]
  41026c:	ret    
  41026d:	(bad)
  410270:	loope  0x410254
  410272:	or     al,0x74
  410274:	cmp    BYTE PTR [eax+0x5b066d53],bl
  41027a:	xor    DWORD PTR ds:0x2dd384cc,0x189aa677
  410284:	stos   DWORD PTR es:[edi],eax
  410285:	js     0x41020d
  410287:	xor    al,0x18
  410289:	or     bl,BYTE PTR [esp+esi*4+0x38]
  41028d:	push   esi
  41028e:	push   ebp
  41028f:	push   esi
  410290:	leave  
  410291:	aad    0xc0
  410293:	icebp  
  410294:	cmp    BYTE PTR [ebp+0x8],ah
  410297:	retf   
  410298:	adc    DWORD PTR [ebp-0x41],ebp
  41029b:	jb     0x4102ed
  41029d:	test   ch,bh
  41029f:	je     0x4102be
  4102a1:	fwait
  4102a2:	sub    ch,dh
  4102a4:	xchg   ecx,eax
  4102a5:	jge    0x4102aa
  4102a7:	in     eax,dx
  4102a8:	mov    ebp,0x6b155df5
  4102ad:	addr16 inc edi
  4102af:	test   BYTE PTR [ecx+edx*4-0x6260e042],ah
  4102b6:	push   0x6d649c57
  4102bb:	push   0x499cfb2d
  4102c0:	jle    0x410333
  4102c2:	call   0x13360194
  4102c7:	dec    edi
  4102c8:	pop    es
  4102c9:	dec    esp
  4102ca:	pop    es
  4102cb:	(bad)  
  4102cc:	sahf   
  4102cd:	adc    eax,0xcc95c52b
  4102d2:	aad    0x9d
  4102d4:	out    0x8c,al
  4102d6:	xor    DWORD PTR [eax],eax
  4102d8:	clc    
  4102d9:	mov    ds:0x200c98d,eax
  4102de:	das    
  4102df:	neg    DWORD PTR [esi+0x66650d2d]
  4102e5:	addr16 enter 0xa74a,0x78
  4102ea:	jne    0x4102ee
  4102ec:	int    0x55
  4102ee:	xchg   edi,eax
  4102ef:	xor    DWORD PTR [esp+edx*4],eax
  4102f2:	add    bh,bh
  4102f4:	cld    
  4102f5:	dec    ebp
  4102f6:	enter  0x2b23,0x29
  4102fa:	popf   
  4102fb:	adc    BYTE PTR [ebx-0x1f2dc70],ah
  410301:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410302:	std    
  410303:	js     0x4102f2
  410305:	jmp    0xea249e7d
  41030a:	jmp    0x4102ea
  41030c:	scas   al,BYTE PTR es:[edi]
  41030d:	add    bl,BYTE PTR [eax]
  41030f:	test   eax,0x62f0e6d
  410314:	jae    0x41037f
  410316:	mov    eax,0x224ecf7
  41031b:	outs   dx,DWORD PTR ds:[esi]
  41031c:	mov    bl,0x68
  41031e:	fstp   TBYTE PTR [esi+0xa4ffa3]
  410324:	pop    eax
  410325:	addr16 aaa 
  410327:	mov    al,ds:0xe8eb97de
  41032c:	sahf   
  41032d:	sub    edi,DWORD PTR [eax+0x44]
  410330:	test   eax,0x28e07dd8
  410335:	jecxz  0x4102f7
  410337:	and    al,0x3
  410339:	adc    eax,0xa96deb12
  41033e:	sub    esi,DWORD PTR [eax]
  410340:	and    ah,dh
  410342:	cmp    edx,ebx
  410344:	les    esi,FWORD PTR [edx-0x11]
  410347:	adc    eax,0x2aee4ae7
  41034c:	pop    ss
  41034d:	test   DWORD PTR [edi],eax
  41034f:	jo     0x41030b
  410351:	fmul   QWORD PTR [edi+0x5792ebcc]
  410357:	mov    eax,0x4c162bec
  41035c:	test   BYTE PTR [edi],bl
  41035e:	lea    esp,[esi+0x60bbe2da]
  410364:	in     eax,dx
  410365:	and    eax,0x828a4dcd
  41036a:	adc    eax,0x40d98e55
  41036f:	test   bl,bh
  410371:	sbb    eax,0xb32d9aeb
  410376:	loopne 0x4103dd
  410378:	pop    edx
  410379:	sub    BYTE PTR [edi-0x48642006],al
  41037f:	fucom  st(0)
  410381:	push   ebp
  410382:	pop    edx
  410383:	sub    bl,BYTE PTR [ebp-0x31d497be]
  410389:	mov    bl,0x4d
  41038b:	mov    eax,ds:0x8e95705e
  410390:	inc    esp
  410391:	lea    eax,[esi-0x5]
  410394:	test   DWORD PTR [edx-0x3e],esi
  410397:	jge    0x41039e
  410399:	add    DWORD PTR [edi+ebp*2+0x2],esi
  41039d:	add    dl,BYTE PTR [edx+edi*1]
  4103a0:	add    ah,bh
  4103a2:	mov    ah,0x88
  4103a4:	add    DWORD PTR ds:0x72868ef2,esi
  4103aa:	add    al,0xd7
  4103ac:	mov    ebp,0x6afee6f8
  4103b1:	inc    BYTE PTR [edx+edx*2]
  4103b4:	and    al,0xe5
  4103b6:	fldcw  WORD PTR [edx-0x7ebbc80f]
  4103bc:	cwde   
  4103bd:	dec    esp
  4103be:	xor    ch,al
  4103c0:	shl    BYTE PTR [edx-0x52],cl
  4103c3:	dec    ebx
  4103c4:	stc    
  4103c5:	pop    ss
  4103c6:	pop    eax
  4103c7:	jbe    0x410409
  4103c9:	in     eax,0x9
  4103cb:	mov    eax,0xd35875cc
  4103d0:	pop    ebp
  4103d1:	adc    BYTE PTR [edx+edi*1-0x79],bh
  4103d5:	or     al,0xc2
  4103d7:	jle    0x41042b
  4103d9:	jae    0x410383
  4103db:	icebp  
  4103dc:	rol    bh,0x9e
  4103df:	mov    dh,0xc
  4103e1:	xchg   ebp,eax
  4103e2:	mov    edi,esi
  4103e4:	addr16 mov ebp,0x68694e3e
  4103ea:	sbb    DWORD PTR [edx+0x67b4507b],edi
  4103f0:	inc    ebp
  4103f1:	mov    eax,ds:0x1adf075
  4103f6:	add    ch,BYTE PTR [ebx+0x38]
  4103f9:	jae    0x410399
  4103fb:	aaa    
  4103fc:	mov    dl,0x36
  4103fe:	mov    cl,0x7d
  410400:	bound  ebx,QWORD PTR [ecx-0x73]
  410403:	popa   
  410404:	adc    ecx,DWORD PTR [esi+0x5d69120a]
  41040a:	mul    BYTE PTR [edi-0x1cafebae]
  410410:	pop    ds
  410411:	icebp  
  410412:	adc    WORD PTR [esi+0x62],bx
  410416:	sub    edi,DWORD PTR [eax+0x10]
  410419:	push   ebx
  41041a:	inc    esp
  41041b:	test   BYTE PTR [ebp-0x42740b9a],0x37
  410422:	sbb    al,0x32
  410424:	sub    eax,0x84922e93
  410429:	lahf   
  41042a:	out    0x1,al
  41042c:	sbb    bl,BYTE PTR [ecx-0x39]
  41042f:	ins    BYTE PTR es:[edi],dx
  410430:	sub    ebx,DWORD PTR [ebx-0x57]
  410433:	mov    ds:0x9427b84,al
  410438:	add    DWORD PTR [edi],esi
  41043a:	ja     0x4103e2
  41043c:	test   eax,0x61e51e1a
  410441:	xchg   esp,eax
  410442:	jmp    0xde22:0x1bd00ec4
  410449:	outs   dx,BYTE PTR ds:[esi]
  41044a:	add    ebx,DWORD PTR [edi-0x55]
  41044d:	iret   
  41044e:	sbb    al,0xdc
  410450:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410451:	test   BYTE PTR [ebp+0x20d7a0bc],0x7c
  410458:	scas   eax,DWORD PTR es:[edi]
  410459:	das    
  41045a:	and    BYTE PTR [edx],ch
  41045c:	mov    ah,0xee
  41045e:	test   DWORD PTR [ebx-0x2f],0x4a98fde2
  410465:	pop    esi
  410466:	cmp    DWORD PTR [ebp+edi*4+0x360e0cc7],ebx
  41046d:	sbb    eax,0x93da95d6
  410472:	pushf  
  410473:	adc    al,0x5b
  410475:	fisubr WORD PTR es:0x78ce2d47
  41047c:	lods   al,BYTE PTR ds:[esi]
  41047d:	cwde   
  41047e:	std    
  41047f:	repnz mov ah,0x17
  410482:	xchg   ebp,eax
  410483:	adc    BYTE PTR [eax-0x38],cl
  410486:	inc    eax
  410487:	cmp    ebp,ecx
  410489:	retf   
  41048a:	push   eax
  41048b:	sbb    BYTE PTR [ecx-0x44],al
  41048e:	stos   DWORD PTR es:[edi],eax
  41048f:	dec    edi
  410490:	inc    edx
  410491:	iret   
  410492:	fwait
  410493:	push   esp
  410494:	inc    ebp
  410495:	lods   al,BYTE PTR ds:[esi]
  410496:	dec    ebx
  410497:	test   DWORD PTR [eax+0x19],ebx
  41049a:	xor    al,BYTE PTR [ecx+0x4f]
  41049d:	and    ebp,0xffffff9f
  4104a0:	loop   0x41046e
  4104a2:	ret    
  4104a3:	bswap  edi
  4104a5:	xchg   esi,eax
  4104a6:	out    0x18,al
  4104a8:	add    BYTE PTR [ebx-0x26],bh
  4104ab:	hlt    
  4104ac:	sbb    al,0xe4
  4104ae:	push   ss
  4104af:	jg     0x41047a
  4104b1:	mov    dh,0x74
  4104b3:	jb     0x41047c
  4104b5:	push   edx
  4104b6:	bound  ecx,QWORD PTR [edx-0x55c40d2e]
  4104bc:	pop    eax
  4104bd:	enter  0x502a,0xdd
  4104c1:	cwde   
  4104c2:	and    ecx,DWORD PTR [ecx+0x48]
  4104c5:	je     0x4104ef
  4104c7:	and    DWORD PTR [ebp-0x27a8de3],eax
  4104cd:	rol    edi,cl
  4104cf:	and    dh,BYTE PTR [eax+edi*8+0x1b]
  4104d3:	in     al,dx
  4104d4:	inc    esp
  4104d5:	add    al,0xc7
  4104d7:	pop    edx
  4104d8:	jmp    0xca5820a3
  4104dd:	and    DWORD PTR [edi],eax
  4104df:	cs dec edx
  4104e1:	inc    eax
  4104e3:	dec    ebp
  4104e4:	repz cwde 
  4104e6:	xor    eax,0x869e1ac8
  4104eb:	adc    edi,DWORD PTR [ebx]
  4104ed:	(bad)  
  4104ee:	adc    eax,0x72321f94
  4104f3:	jmp    0xe421169f
  4104f8:	xor    ebp,ebp
  4104fa:	fimul  DWORD PTR [ecx]
  4104fc:	(bad)  
  4104fd:	sbb    BYTE PTR [edx-0x6d],ch
  410500:	dec    ecx
  410501:	repnz out 0xfe,al
  410504:	in     al,0xc
  410506:	retf   
  410507:	mov    edi,DWORD PTR [edi+0x5f]
  41050a:	nop
  41050b:	sbb    eax,0x50aca6fc
  410510:	mov    es,edi
  410512:	xor    ch,dh
  410514:	int    0x6d
  410516:	cld    
  410517:	gs pop ebp
  410519:	dec    esi
  41051a:	loopne 0x4104bb
  41051c:	or     eax,DWORD PTR [edi-0x18]
  41051f:	outs   dx,DWORD PTR ds:[esi]
  410520:	sub    dl,BYTE PTR [ecx+0x7694023]
  410526:	inc    edx
  410527:	sar    DWORD PTR [eax+0xb],1
  41052a:	in     al,0xd9
  41052c:	sub    esi,DWORD PTR [esi]
  41052e:	dec    esp
  41052f:	test   DWORD PTR [edi-0x7a],ecx
  410532:	test   BYTE PTR [ebx-0x3892551c],dl
  410538:	sub    DWORD PTR [ebx+0x48],edi
  41053b:	jmp    0x410501
  41053d:	test   DWORD PTR [edx],0x195d98c2
  410543:	call   0xc9004d9
  410548:	icebp  
  410549:	xchg   esp,eax
  41054a:	dec    esi
  41054b:	jnp    0x41050a
  41054d:	loope  0x4104f0
  41054f:	aad    0x96
  410551:	jmp    0x4105c1
  410553:	xlat   BYTE PTR ds:[ebx]
  410554:	pop    esi
  410555:	shr    BYTE PTR [esi-0x4e8e87ef],0x15
  41055c:	int3   
  41055d:	cld    
  41055e:	cld    
  41055f:	push   ebx
  410560:	cwde   
  410561:	mov    ebx,0xe2dbdf77
  410566:	adc    ah,ah
  410568:	xor    ebx,DWORD PTR [ebx]
  41056a:	mov    eax,ds:0x5f8e9683
  41056f:	add    esp,DWORD PTR [eax-0x214d64e1]
  410575:	cld    
  410576:	mov    ebp,0xc0a6352d
  41057b:	dec    edi
  41057c:	dec    edx
  41057d:	fdiv   QWORD PTR [ecx+0x31ad221e]
  410583:	loope  0x4105fb
  410585:	xor    BYTE PTR [ecx],dl
  410587:	jnp    0x41053e
  410589:	hlt    
  41058a:	jns    0x410528
  41058c:	add    DWORD PTR [edx],0xffffff84
  41058f:	mov    dl,0x8c
  410591:	mov    eax,0x7019b837
  410596:	mov    fs,edx
  410598:	jle    0x410570
  41059a:	sub    eax,0xa2cbb1dc
  41059f:	stos   BYTE PTR es:[edi],al
  4105a0:	mov    cl,0x48
  4105a2:	out    0x1a,al
  4105a4:	mov    ?,WORD PTR [esi+0xb]
  4105a7:	test   DWORD PTR [ebp+0x5285459b],eax
  4105ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105ae:	and    eax,DWORD PTR [edi-0x36]
  4105b1:	cmp    ecx,DWORD PTR [ebp+0x4719a373]
  4105b7:	lock (bad) 
  4105b9:	mov    ds,WORD PTR es:[ecx]
  4105bc:	sub    al,0xe0
  4105be:	(bad)  
  4105bf:	pop    ebx
  4105c0:	cmp    eax,0x207ff3b5
  4105c5:	pop    ecx
  4105c6:	and    al,0x4e
  4105c8:	ja     0x410603
  4105ca:	imul   ebx,DWORD PTR [edx],0x6e
  4105cd:	ret    
  4105ce:	mov    bh,0xd0
  4105d0:	and    dl,BYTE PTR [edi+ebp*2+0x19]
  4105d4:	jne    0x4105de
  4105d6:	ja     0x410573
  4105d8:	push   es
  4105d9:	jmp    0xfb19c35e
  4105de:	retf   
  4105df:	add    al,0x1
  4105e1:	or     cl,BYTE PTR [ebx-0x144fd842]
  4105e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105e8:	fadd   QWORD PTR [edi+ebp*8+0x3591e41d]
  4105ef:	ret    
  4105f0:	or     ah,ch
  4105f2:	add    BYTE PTR [eax+0x5c],0x32
  4105f6:	mov    esp,0xe5262529
  4105fb:	adc    DWORD PTR [edi+0x2001669b],ebp
  410601:	iret   
  410602:	cdq    
  410603:	dec    ecx
  410604:	dec    edx
  410605:	push   ds
  410606:	gs loopne 0x410647
  410609:	jl     0x410637
  41060b:	retf   
  41060c:	mov    dh,BYTE PTR [esi-0x80]
  41060f:	repz dec ecx
  410611:	xor    BYTE PTR [esi-0x50],bh
  410614:	mov    eax,ds:0x8ff2ce5e
  410619:	dec    ebx
  41061a:	push   ebx
  41061b:	xor    edx,DWORD PTR [ecx]
  41061d:	(bad)  
  41061f:	xchg   edx,eax
  410620:	fnstenv [esi+ebp*2-0x7f]
  410624:	(bad)  [ebx-0x65e38a33]
  41062a:	push   ss
  41062b:	xchg   ebx,eax
  41062c:	mov    edx,DWORD PTR [edx+0x33]
  41062f:	in     al,0x6f
  410631:	inc    BYTE PTR [edx+eax*4]
  410634:	aas    
  410635:	or     BYTE PTR [eax-0x1a],dl
  410638:	jmp    DWORD PTR [eax]
  41063a:	and    BYTE PTR [esi+0x1a5620c6],ah
  410640:	inc    BYTE PTR [ecx-0x30]
  410643:	sbb    eax,0x16935e1a
  410648:	pop    esp
  410649:	stos   DWORD PTR es:[edi],eax
  41064a:	sbb    ch,bl
  41064c:	(bad)  
  41064e:	out    0x18,eax
  410650:	arpl   WORD PTR [edi-0x68ddbcc7],di
  410656:	daa    
  410657:	dec    edx
  410658:	jg     0x41069a
  41065a:	dec    edx
  41065b:	jecxz  0x410692
  41065d:	rcl    DWORD PTR ds:0xb5e58fa7,cl
  410663:	or     DWORD PTR [edi+0x52],ecx
  410666:	ret    0x5328
  410669:	scas   al,BYTE PTR es:[edi]
  41066a:	sub    eax,0xae6297e9
  41066f:	add    DWORD PTR [eax-0x40],0xfffffff6
  410673:	jecxz  0x410669
  410675:	adc    BYTE PTR [ebx+0x57ad5caa],al
  41067b:	enter  0xcc47,0xef
  41067f:	or     eax,DWORD PTR [ecx-0x3939cc17]
  410685:	(bad)  
  410686:	or     al,0x81
  410688:	(bad)
  41068b:	into   
  41068c:	pop    ss
  41068d:	jmp    0x377bff85
  410692:	sbb    ch,BYTE PTR ds:0xe96d792
  410698:	or     DWORD PTR [edx+0x1a],esp
  41069b:	jno    0x41069e
  41069d:	fld    DWORD PTR [edi+0x463c765a]
  4106a3:	mov    al,0x9a
  4106a5:	mov    ebp,0x5e5fa065
  4106aa:	(bad)  [ecx+0x13]
  4106ad:	jae    0x41067e
  4106af:	inc    edx
  4106b0:	repnz inc eax
  4106b2:	cs jne 0x410687
  4106b5:	mulps  xmm0,XMMWORD PTR [edx+ebx*8-0x63756f99]
  4106bd:	push   cs
  4106be:	sub    edx,edx
  4106c0:	mov    ds:0xd3fe0a8a,al
  4106c5:	lds    edi,FWORD PTR ds:0x78965f6e
  4106cb:	sbb    eax,0x4d09884c
  4106d0:	sbb    ecx,DWORD PTR [ecx-0x32]
  4106d3:	scas   al,BYTE PTR es:[edi]
  4106d4:	sbb    ebx,edi
  4106d6:	call   0x49cf:0x9070b5db
  4106dd:	sub    al,0x72
  4106df:	call   0xf9d460bd
  4106e4:	ja     0x410718
  4106e6:	fidivr DWORD PTR [edx-0x31b546df]
  4106ec:	popa   
  4106ed:	repz mov edi,0x4f136830
  4106f3:	add    eax,0xc661c73c
  4106f8:	clc    
  4106f9:	xchg   DWORD PTR [ecx],esp
  4106fb:	pop    es
  4106fc:	cmc    
  4106fd:	push   esp
  4106fe:	jp     0x41075d
  410700:	fdivr  st,st(7)
  410702:	push   ebx
  410703:	inc    eax
  410704:	(bad)  
  410705:	mov    bh,0xae
  410707:	and    al,0x54
  410709:	dec    ecx
  41070a:	push   ebx
  41070b:	popf   
  41070c:	and    al,0x7b
  41070e:	dec    ebp
  41070f:	xchg   edi,eax
  410710:	mov    ds,WORD PTR [edi-0x27]
  410713:	sbb    BYTE PTR [ecx],0x56
  410716:	rol    DWORD PTR [edx-0x43],cl
  410719:	test   bl,dh
  41071b:	hlt    
  41071c:	add    eax,0x527e5c66
  410721:	aas    
  410722:	stc    
  410723:	dec    edx
  410724:	mov    ah,0xc4
  410726:	out    0x3a,eax
  410728:	xor    cl,BYTE PTR [edi+0x56981390]
  41072e:	mov    ds:0xd1ae40c9,eax
  410733:	sub    DWORD PTR [ebp+0xe],esi
  410736:	sub    DWORD PTR [ebx],0xffffffdc
  410739:	retf   0x5689
  41073c:	cmp    al,BYTE PTR [ebx-0x51]
  41073f:	aad    0xc3
  410741:	hlt    
  410742:	pop    eax
  410743:	and    eax,0x3058900f
  410748:	sub    al,0x99
  41074a:	and    BYTE PTR [ebx-0x4b],ch
  41074d:	xchg   ecx,eax
  41074e:	add    dl,BYTE PTR [ebx+0x1f]
  410751:	outs   dx,BYTE PTR ds:[esi]
  410752:	loope  0x4107b2
  410754:	jne    0x410758
  410756:	retf   
  410757:	add    DWORD PTR [esi+0x347cda92],esi
  41075d:	popa   
  41075e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41075f:	adc    eax,0xfd5d7e0d
  410764:	and    edi,DWORD PTR [ebx+0x22]
  410767:	xor    BYTE PTR [ecx+0x22ad5193],cl
  41076d:	es inc ebp
  41076f:	cs daa 
  410771:	jge    0x4107b7
  410773:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410774:	mov    dh,0xb
  410776:	mov    bh,0x1b
  410778:	loop   0x41079b
  41077a:	pop    ebx
  41077b:	push   esp
  41077d:	fdiv   DWORD PTR [edx-0x3]
  410780:	push   eax
  410781:	push   es
  410782:	sti    
  410783:	xor    DWORD PTR [esi],0xfffffff8
  410786:	ins    DWORD PTR es:[edi],dx
  410787:	jge    0x410712
  410789:	or     al,0xa7
  41078b:	rol    dl,1
  41078d:	dec    edi
  41078e:	jne    0x410732
  410790:	push   esi
  410791:	pop    esi
  410792:	sti    
  410793:	push   edi
  410794:	mul    DWORD PTR [esi+0x281074fe]
  41079a:	or     BYTE PTR [esi-0x6c5edeff],ah
  4107a0:	mov    edx,gs
  4107a2:	sub    ebx,DWORD PTR [ebx+eiz*2]
  4107a5:	mov    dh,BYTE PTR [esi]
  4107a7:	pop    edi
  4107a8:	dec    BYTE PTR [esi+0xd7ac3a2]
  4107ae:	pop    ebx
  4107af:	xchg   esp,eax
  4107b0:	mov    al,0x7f
  4107b2:	mov    al,ds:0x505348bb
  4107b7:	fst    QWORD PTR [edi+0x78]
  4107ba:	arpl   bx,cx
  4107bc:	mov    eax,0x6b2b4bfc
  4107c1:	ret    0x437c
  4107c4:	pop    eax
  4107c5:	mov    edx,0x57aa1fb4
  4107ca:	outs   dx,BYTE PTR ds:[esi]
  4107cb:	sahf   
  4107cc:	mov    dh,0x60
  4107ce:	enter  0x6006,0x1c
  4107d2:	pop    edi
  4107d3:	push   esi
  4107d4:	(bad)  
  4107d5:	adc    eax,0x1d81a94
  4107da:	or     bh,dh
  4107dc:	mov    DWORD PTR [ecx+0x26],esi
  4107df:	adc    al,0x0
  4107e1:	daa    
  4107e2:	jns    0x4107aa
  4107e4:	test   DWORD PTR ds:0x96fbf8bd,0x9a33cb4c
  4107ee:	dec    ebp
  4107ef:	jl     0x4107f8
  4107f1:	add    eax,0x666bca65
  4107f6:	jo     0x41086a
  4107f8:	cli    
  4107f9:	pop    ebx
  4107fa:	cmp    al,0x5c
  4107fc:	add    al,0x1
  4107fe:	xchg   ebx,eax
  4107ff:	add    BYTE PTR [esi+0x4],dh
  410802:	inc    al
  410804:	adc    al,0x49
  410806:	jg     0x410810
  410808:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410809:	add    esp,edi
  41080b:	clc    
  41080c:	and    al,0x31
  41080e:	jp     0x4107d6
  410810:	add    eax,0x57c7d1e9
  410815:	pop    ebx
  410816:	scas   eax,DWORD PTR es:[edi]
  410817:	imul   edx,DWORD PTR [esp+esi*1-0x3b5455fd],0x377a1569
  410822:	jge    0x4107bd
  410824:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410825:	mov    ah,0x16
  410827:	push   ss
  410828:	inc    edi
  410829:	dec    esp
  41082a:	loopne 0x410812
  41082c:	aas    
  41082d:	jae    0x41081f
  41082f:	outs   dx,BYTE PTR ds:[esi]
  410830:	dec    esp
  410831:	and    dh,BYTE PTR [esi]
  410833:	fcmovnb st,st(3)
  410835:	mov    dl,0x42
  410837:	fstp   TBYTE PTR [eax-0x7ab56214]
  41083d:	scas   al,BYTE PTR es:[edi]
  41083e:	sahf   
  41083f:	test   BYTE PTR [eax-0x16],ch
  410842:	cmp    ebx,esi
  410844:	add    BYTE PTR [eax],0x12
  410847:	sti    
  410848:	aad    0x3e
  41084a:	in     al,dx
  41084b:	or     BYTE PTR [ebx],al
  41084d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41084e:	in     eax,0xfa
  410850:	(bad)  [ebx-0x74]
  410853:	push   edx
  410854:	sbb    al,0x41
  410856:	dec    esi
  410857:	das    
  410858:	in     al,dx
  410859:	aam    0x74
  41085b:	pop    edi
  41085c:	int    0xa3
  41085e:	fsubr  DWORD PTR [eax+0x13524795]
  410864:	test   al,0x99
  410866:	inc    edx
  410867:	jecxz  0x410800
  410869:	push   ebp
  41086a:	in     al,dx
  41086b:	xchg   ebx,eax
  41086c:	dec    edi
  41086d:	push   0x25b1e132
  410872:	ret    0xf726
  410875:	dec    ecx
  410876:	sti    
  410877:	ret    
  410878:	pop    ecx
  410879:	pop    edi
  41087a:	jns    0x410807
  41087c:	push   esi
  41087d:	cmc    
  41087e:	adc    eax,0x58e1a44
  410883:	sbb    al,0x42
  410885:	out    dx,eax
  410886:	mov    ebp,DWORD PTR [ebp-0x6a]
  410889:	outs   dx,DWORD PTR ds:[esi]
  41088a:	pand   mm2,QWORD PTR [ebp+0x73]
  41088e:	cmp    al,0x3c
  410890:	xor    dh,bl
  410892:	(bad)  
  410893:	jmp    0x7955:0x6babc7f5
  41089a:	lods   eax,DWORD PTR ds:[esi]
  41089b:	lahf   
  41089c:	inc    eax
  41089d:	pop    ecx
  41089e:	xchg   ebx,eax
  41089f:	(bad)  
  4108a0:	fs sub dh,0x4a
  4108a4:	fidiv  DWORD PTR [esi-0x75]
  4108a7:	xchg   edx,eax
  4108a8:	cmp    DWORD PTR [edx],ebp
  4108aa:	jecxz  0x41088f
  4108ac:	in     al,0xee
  4108ae:	loopne 0x410878
  4108b0:	loopne 0x41089d
  4108b2:	imul   esp,eax,0x997917a8
  4108b8:	adc    DWORD PTR [ebx+0x47e6379],ebp
  4108be:	xchg   esp,eax
  4108bf:	or     DWORD PTR [eax+esi*8-0x4e],0xcf9f3313
  4108c7:	add    eax,0x86b84023
  4108cc:	sbb    esp,edx
  4108ce:	cli    
  4108cf:	loop   0x410899
  4108d1:	mov    esi,0xce9f4466
  4108d6:	sbb    eax,0xb525a17
  4108db:	je     0x41086e
  4108dd:	sbb    DWORD PTR [esi+0x4564e1ac],esi
  4108e3:	ins    BYTE PTR es:[edi],dx
  4108e4:	jbe    0x410878
  4108e6:	sub    DWORD PTR [edi],ebx
  4108e8:	and    eax,0xbdaae5ce
  4108ed:	sbb    esi,eax
  4108ef:	jl     0x410928
  4108f1:	mov    ah,0x23
  4108f3:	outs   dx,BYTE PTR ds:[esi]
  4108f4:	dec    ecx
  4108f5:	aas    
  4108f6:	jmp    0x61cd29db
  4108fb:	test   al,0xcb
  4108fd:	jae    0x410969
  4108ff:	out    0xf0,eax
  410901:	(bad)  
  410902:	lock out 0xd9,al
  410905:	cmp    bl,al
  410907:	ins    BYTE PTR es:[edi],dx
  410908:	dec    ecx
  410909:	or     ch,al
  41090b:	dec    ebx
  41090c:	sahf   
  41090d:	sbb    al,0xc9
  41090f:	push   es
  410910:	lahf   
  410911:	in     al,0x16
  410913:	fimul  DWORD PTR [eax-0x46240dd4]
  410919:	sub    cl,BYTE PTR [ebx]
  41091b:	add    BYTE PTR [edi-0x1e6eb4c7],dl
  410921:	dec    esp
  410922:	inc    esp
  410923:	mov    ds:0x19daddc9,al
  410928:	int3   
  410929:	mov    edx,0x1c825652
  41092e:	mov    ebp,0x4ec3042f
  410933:	jecxz  0x410954
  410935:	dec    esi
  410936:	dec    esp
  410937:	dec    ebx
  410938:	(bad)  [edi+0x47c3e23]
  41093e:	mov    eax,ds:0x22722928
  410943:	call   0x746c:0xd30ab770
  41094a:	jbe    0x410933
  41094c:	inc    eax
  41094d:	je     0x4108f2
  41094f:	inc    BYTE PTR [edi+ebp*1+0x539a1a11]
  410956:	std    
  410957:	pop    es
  410958:	add    eax,0x6f4b65e3
  41095d:	mov    dl,0x90
  41095f:	test   eax,0x1a8e7953
  410964:	aaa    
  410965:	sub    eax,0x7339e8e2
  41096a:	hlt    
  41096b:	and    ah,0xc8
  41096e:	aad    0xda
  410970:	mov    BYTE PTR [esi-0x53],ch
  410973:	inc    DWORD PTR [edi]
  410975:	adc    al,BYTE PTR [bx+si]
  410978:	and    DWORD PTR [edx+ebp*1-0xe],ebp
  41097c:	inc    esi
  41097d:	popf   
  41097e:	xchg   dh,dh
  410980:	inc    ecx
  410981:	in     eax,0x3d
  410983:	clc    
  410984:	add    dl,BYTE PTR [eax+0x77f1f3af]
  41098a:	add    eax,0x2cd33619
  41098f:	sti    
  410990:	xor    al,0x67
  410992:	or     al,0x8
  410994:	les    eax,FWORD PTR [ecx-0x37]
  410997:	into   
  410998:	add    bl,BYTE PTR [ebx-0x7f]
  41099b:	into   
  41099c:	sub    DWORD PTR [eax-0x6f],eax
  41099f:	mov    esi,0xdec1c4d3
  4109a4:	sub    DWORD PTR [edi+eiz*2+0x452b5cb0],edx
  4109ab:	(bad)
  4109af:	jo     0x410a15
  4109b1:	addr16 inc ebp
  4109b3:	mov    ecx,0xdf28d035
  4109b8:	out    0x4d,eax
  4109ba:	jle    0x41095c
  4109bc:	jbe    0x4109be
  4109be:	adc    al,0x99
  4109c0:	xchg   ebp,eax
  4109c1:	jno    0x41094d
  4109c3:	pop    esp
  4109c4:	or     bh,ah
  4109c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109c7:	xchg   esi,eax
  4109c8:	lock xlat BYTE PTR ds:[ebx]
  4109ca:	lods   eax,DWORD PTR ds:[si]
  4109cc:	add    eax,0x76e78901
  4109d1:	ins    BYTE PTR es:[edi],dx
  4109d2:	cs sub eax,ebp
  4109d5:	mov    ecx,0x3f901fb3
  4109da:	into   
  4109db:	mov    bl,0xbd
  4109dd:	xchg   ebp,eax
  4109de:	xor    BYTE PTR [edi],dl
  4109e0:	push   DWORD PTR [ecx]
  4109e2:	sub    eax,0x4387310e
  4109e7:	xchg   esi,eax
  4109e8:	fild   QWORD PTR [edx+eax*8-0x36]
  4109ec:	cmp    DWORD PTR [edi],esi
  4109ee:	repnz or esi,edi
  4109f1:	adc    ebx,ebp
  4109f3:	inc    ebp
  4109f4:	rcr    BYTE PTR es:[edx],0x46
  4109f8:	call   0x9e4a9a78
  4109fd:	pop    ebp
  4109fe:	sub    eax,0xa5fd2a8a
  410a03:	retf   
  410a04:	nop
  410a05:	out    dx,eax
  410a06:	js     0x4109e3
  410a08:	fist   DWORD PTR [ebp+0x5b]
  410a0b:	dec    esi
  410a0c:	xor    al,0x0
  410a0e:	dec    edx
  410a0f:	xchg   esi,eax
  410a10:	shl    DWORD PTR [ebx-0x29],0x99
  410a14:	das    
  410a15:	int    0x9c
  410a17:	nop
  410a18:	pop    edx
  410a19:	cld    
  410a1a:	aas    
  410a1b:	sbb    eax,ecx
  410a1d:	cmp    DWORD PTR [esi-0x2d62b3cf],esp
  410a23:	jle    0x4109c3
  410a25:	xchg   edi,eax
  410a26:	pushf  
  410a27:	pop    esp
  410a28:	xor    ah,ah
  410a2a:	cmp    DWORD PTR [eax-0xb],0x18ce22b2
  410a31:	inc    DWORD PTR [ebp-0x54]
  410a34:	je     0x410a2c
  410a36:	ins    BYTE PTR es:[edi],dx
  410a37:	push   ds
  410a38:	(bad)  
  410a39:	push   esp
  410a3a:	sbb    edi,DWORD PTR [eax+0x34c7569d]
  410a40:	sbb    DWORD PTR [ebp+edx*2-0x3c],0xffffffd0
  410a45:	sbb    edi,eax
  410a47:	xor    esp,DWORD PTR [edx+0x191bffd5]
  410a4d:	sbb    BYTE PTR [esi+0x316cd80e],al
  410a53:	jbe    0x4109e3
  410a55:	es mov edx,0xa81b962
  410a5b:	mov    eax,0xd84ea929
  410a60:	mov    eax,0xf1e74e82
  410a65:	fstp   DWORD PTR [ecx+ebp*2-0x1b88dbc1]
  410a6c:	call   DWORD PTR [eax+0x31]
  410a6f:	or     al,BYTE PTR [ebx-0x69]
  410a72:	and    BYTE PTR [ebp+0x28d13656],bl
  410a78:	add    DWORD PTR [esi+0x65e96a95],0xe
  410a7f:	xchg   esi,eax
  410a80:	ja     0x410a91
  410a82:	stos   BYTE PTR es:[edi],al
  410a83:	dec    ebx
  410a84:	int    0x9a
  410a86:	imul   ebx,DWORD PTR [esi],0xffffff96
  410a89:	ja     0x410a89
  410a8b:	neg    DWORD PTR [eax+0xae9ffa8]
  410a91:	mov    al,BYTE PTR [eax-0x5]
  410a94:	pop    ss
  410a95:	sar    BYTE PTR [eax],cl
  410a97:	inc    edi
  410a98:	xor    BYTE PTR [edi+ebx*4-0x2b809313],ah
  410a9f:	les    edx,FWORD PTR [eax+0x66a7f2b9]
  410aa5:	(bad)
  410aa9:	cmp    BYTE PTR [esi+eax*1],bl
  410aac:	jmp    0x410aa6
  410aae:	ja     0x410afc
  410ab0:	dec    ecx
  410ab1:	nop
  410ab2:	or     bh,ch
  410ab4:	mov    BYTE PTR [edi],ch
  410ab6:	add    edx,esp
  410ab8:	(bad)  
  410aba:	faddp  st(4),st
  410abc:	pop    edi
  410abd:	imul   BYTE PTR [edi-0x2f]
  410ac0:	rcl    DWORD PTR [edx-0x7e9a4b88],0xc0
  410ac7:	setg   BYTE PTR [edi-0x75]
  410acb:	adc    dh,al
  410acd:	sbb    BYTE PTR [ebp-0x6e3d3db6],ch
  410ad3:	test   eax,0x484f30f3
  410ad8:	adc    eax,0x8bc3bc8c
  410add:	jg     0x410b4d
  410adf:	mov    eax,0xe9575963
  410ae4:	jmp    FWORD PTR [esi-0x6815ea67]
  410aea:	mov    esi,0x545bd584
  410aef:	jns    0x410af6
  410af1:	xlat   BYTE PTR ds:[ebx]
  410af2:	ds push 0x550fa34a
  410af8:	int3   
  410af9:	lock mov dl,BYTE PTR [eax+0x13]
  410afd:	icebp  
  410afe:	sbb    DWORD PTR [ecx],ecx
  410b00:	sti    
  410b01:	out    0x4f,al
  410b03:	pushf  
  410b04:	pop    edx
  410b05:	adc    al,0xab
  410b07:	sbb    eax,0x19e09dd4
  410b0c:	mov    bh,0x8e
  410b0e:	mov    fs,edi
  410b10:	leave  
  410b11:	(bad)  
  410b12:	and    ebp,DWORD PTR [edi]
  410b14:	push   cs
  410b15:	cmc    
  410b16:	call   0x9ed1:0x4df4950b
  410b1d:	repz adc eax,0xf18d81af
  410b23:	mov    esi,0x1e0d6ee3
  410b28:	jne    0x410b76
  410b2a:	dec    ebx
  410b2b:	xor    DWORD PTR [ebp+0x1fe83150],ebx
  410b31:	push   0x21bcb24a
  410b36:	sub    BYTE PTR [ecx-0x31],ah
  410b39:	stc    
  410b3a:	pop    ebp
  410b3b:	test   BYTE PTR ds:0xb6d6f4f7,ah
  410b41:	lahf   
  410b42:	sbb    al,0x71
  410b44:	shl    DWORD PTR [edi],1
  410b46:	out    dx,eax
  410b47:	call   0xe75b8f42
  410b4c:	into   
  410b4d:	inc    ebp
  410b4e:	js     0x410b0e
  410b50:	ror    DWORD PTR [edx],0x4e
  410b53:	dec    ebx
  410b54:	lock push 0xffffffd9
  410b57:	xor    eax,0x66e85b11
  410b5c:	pop    edi
  410b5d:	mov    dh,0x59
  410b5f:	test   DWORD PTR [edx-0x50],eax
  410b62:	retf   
  410b63:	push   eax
  410b64:	loope  0x410b0a
  410b66:	mov    ecx,0xd414f56
  410b6b:	xor    ah,bl
  410b6d:	ret    
  410b6e:	nop
  410b6f:	fs jne 0x410b2b
  410b72:	int3   
  410b73:	sub    DWORD PTR [ebx-0x2e],ecx
  410b76:	pop    ds
  410b77:	mov    esi,0xcc8199d8
  410b7c:	pop    eax
  410b7d:	not    BYTE PTR [bx+di-0xa6]
  410b82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b83:	fstp   DWORD PTR [edi-0x36]
  410b86:	sar    ch,0x3c
  410b89:	mov    ecx,0xb2979c67
  410b8e:	mov    al,0xca
  410b90:	mov    DWORD PTR [esi],edx
  410b92:	lock jmp 0x8f9984d4
  410b98:	sub    bh,BYTE PTR [ebx-0x19]
  410b9b:	xlat   BYTE PTR ds:[ebx]
  410b9c:	lahf   
  410b9d:	xchg   ch,ah
  410b9f:	mov    al,0xb1
  410ba1:	aam    0x27
  410ba3:	pop    edi
  410ba4:	adc    al,0x35
  410ba6:	shl    DWORD PTR [ecx],cl
  410ba8:	jmp    0xaa6d:0xa093bedf
  410baf:	jbe    0x410b46
  410bb1:	sar    BYTE PTR [ebx-0x5ef7c659],1
  410bb7:	inc    esi
  410bb8:	les    ebx,FWORD PTR [edi]
  410bba:	mov    bh,0x40
  410bbc:	push   ss
  410bbd:	fstp   QWORD PTR [ebx]
  410bbf:	mov    al,0xb
  410bc1:	icebp  
  410bc2:	push   0x7b
  410bc4:	jecxz  0x410ba0
  410bc6:	leave  
  410bc7:	xchg   esp,eax
  410bc8:	ret    
  410bc9:	pushf  
  410bca:	data16 aam 0xcb
  410bcd:	sbb    bh,BYTE PTR [edi-0xd]
  410bd0:	cmp    al,0x99
  410bd2:	mov    esi,0x75e7f6ef
  410bd7:	or     bl,al
  410bd9:	leave  
  410bda:	push   ebx
  410bdb:	add    ecx,ebp
  410bdd:	push   esp
  410bde:	jno    0x410c2f
  410be0:	js     0x410b71
  410be2:	push   0xb84740fe
  410be7:	cmp    BYTE PTR [edx-0x71],dl
  410bea:	loopne 0x410bcb
  410bec:	pop    eax
  410bed:	pop    eax
  410bee:	pop    ecx
  410bef:	in     eax,dx
  410bf0:	loop   0x410c71
  410bf2:	inc    edx
  410bf3:	mov    eax,ds:0x16c966c8
  410bf8:	pop    edx
  410bf9:	rcr    DWORD PTR [edi],1
  410bfb:	cli    
  410bfc:	stc    
  410bfd:	mov    al,ds:0xd12354a4
  410c02:	out    dx,eax
  410c03:	loop   0x410c68
  410c05:	adc    eax,0x225869be
  410c0a:	jns    0x410c12
  410c0c:	dec    esp
  410c0d:	bound  ebx,QWORD PTR [ebx+0x5d]
  410c10:	rol    DWORD PTR [edi],1
  410c12:	in     al,0x35
  410c14:	pop    ebp
  410c15:	mov    bh,0xc8
  410c17:	clc    
  410c18:	push   ss
  410c19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c1a:	mov    ebx,0x689eb7ad
  410c1f:	xchg   BYTE PTR ds:0x366de33c,dh
  410c25:	fwait
  410c26:	sbb    ch,cl
  410c28:	push   edx
  410c29:	mov    cl,0xe4
  410c2b:	call   DWORD PTR [ecx+0x1e]
  410c2e:	ret    
  410c2f:	aaa    
  410c30:	ins    DWORD PTR es:[edi],dx
  410c31:	mov    ah,0x2a
  410c33:	ja     0x410c7b
  410c35:	fmul   st,st(2)
  410c37:	bound  edx,QWORD PTR [ecx]
  410c39:	push   esp
  410c3a:	or     bh,BYTE PTR ss:[ebx]
  410c3d:	inc    esp
  410c3e:	pop    ss
  410c3f:	in     al,dx
  410c40:	pop    esi
  410c41:	add    dl,BYTE PTR [ebp+edi*1-0x34]
  410c45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c46:	mov    dh,0xe0
  410c48:	(bad)  
  410c49:	jge    0x410c22
  410c4b:	inc    ecx
  410c4c:	aad    0x45
  410c4e:	sbb    DWORD PTR [ecx+0x51],ebp
  410c51:	outs   dx,DWORD PTR ds:[esi]
  410c52:	xchg   edx,eax
  410c53:	fdivp  st(7),st
  410c55:	push   0x2a
  410c57:	gs sub al,0xe0
  410c5a:	bound  esp,QWORD PTR [ebp-0x4467c7dd]
  410c60:	dec    esi
  410c61:	adc    bh,BYTE PTR [eax+0x31]
  410c64:	icebp  
  410c65:	mov    bl,0xac
  410c67:	mov    ds:0x11153f9,al
  410c6c:	(bad)  
  410c6d:	xchg   esi,eax
  410c6e:	cmp    dh,0x20
  410c71:	xchg   ebp,eax
  410c72:	mov    ebp,0xc30f59ce
  410c77:	js     0x410ccf
  410c79:	jge    0x410c2f
  410c7b:	mov    al,ds:0xde6cd775
  410c80:	data16 mov dl,0x63
  410c83:	jne    0x410c3e
  410c85:	xchg   al,ch
  410c87:	push   ds
  410c88:	push   ecx
  410c89:	jle    0x410ccd
  410c8b:	dec    ebp
  410c8c:	das    
  410c8d:	jbe    0x410c21
  410c8f:	(bad)  
  410c90:	call   edi
  410c92:	xchg   bl,dh
  410c94:	xor    eax,0x3fd60665
  410c99:	dec    cx
  410c9b:	pop    esp
  410c9c:	cli    
  410c9d:	pop    ds
  410c9e:	jmp    0x31bbfa0d
  410ca3:	scas   eax,DWORD PTR es:[edi]
  410ca4:	gs stc 
  410ca6:	pop    ds
  410ca7:	cdq    
  410ca8:	mov    eax,0x8a049732
  410cad:	dec    edi
  410cae:	xchg   esi,eax
  410caf:	add    cl,BYTE PTR [eax]
  410cb1:	loopne 0x410c5f
  410cb3:	jp     0x410c35
  410cb5:	je     0x410cf4
  410cb7:	iret   
  410cb8:	mov    esi,0x6be14c74
  410cbd:	lock les esi,FWORD PTR [edi+0x6be5a829]
  410cc4:	and    BYTE PTR [eax],0xd9
  410cc7:	cs dec edx
  410cc9:	or     DWORD PTR [edx+0x5b],ebx
  410ccc:	stos   BYTE PTR es:[edi],al
  410ccd:	jo     0x410ccc
  410ccf:	fidiv  WORD PTR [esi-0x4bf870ef]
  410cd5:	sbb    DWORD PTR [edx+0x4d629964],0xfffffffa
  410cdc:	dec    ecx
  410cdd:	sub    esp,ecx
  410cdf:	jmp    0x7b0f:0x76c0c308
  410ce6:	aas    
  410ce7:	and    cl,bh
  410ce9:	lods   eax,DWORD PTR ds:[esi]
  410cea:	xor    al,0xc2
  410cec:	pop    edx
  410ced:	push   esp
  410cee:	enter  0x5393,0x62
  410cf2:	int    0xfd
  410cf4:	cmc    
  410cf5:	push   edi
  410cf6:	and    al,BYTE PTR [edx]
  410cf8:	(bad)  
  410cf9:	iret   
  410cfa:	dec    ebx
  410cfb:	cs adc eax,0x795667a7
  410d01:	mov    ecx,0xdfbfa007
  410d07:	std    
  410d08:	cmc    
  410d09:	adc    DWORD PTR [esi+0x1eb0887b],ecx
  410d0f:	inc    esp
  410d10:	bound  esi,QWORD PTR [esi+0x1e4e3b8]
  410d16:	pop    edi
  410d17:	(bad)  
  410d18:	dec    ebp
  410d19:	mov    ds,ecx
  410d1b:	mov    ds:0xc48d7edf,eax
  410d20:	iret   
  410d21:	mov    bh,0x1b
  410d23:	ror    BYTE PTR ds:0xb98b29f,0x27
  410d2a:	cmp    BYTE PTR [ebx-0x54],dh
  410d2d:	jp     0x410cb9
  410d2f:	mov    eax,0xdf84f483
  410d34:	(bad)  
  410d36:	clc    
  410d37:	sub    ebx,DWORD PTR [ebx-0x65792f0e]
  410d3d:	sbb    BYTE PTR [edi-0xf5bcb4e],ch
  410d43:	js     0x410d35
  410d45:	mov    ?,WORD PTR [ecx+0xffc8605]
  410d4b:	addr16 and al,0xeb
  410d4e:	mov    esi,0x28ffa8bc
  410d53:	lahf   
  410d54:	jp     0x410dc1
  410d56:	in     eax,dx
  410d57:	sahf   
  410d58:	rol    bh,0xff
  410d5b:	mov    esp,0xd4629e75
  410d60:	sub    eax,0xd1e2497f
  410d65:	int    0x1e
  410d67:	dec    ebp
  410d68:	mov    DWORD PTR [esp+ebp*4+0x9f72e0e],ecx
  410d6f:	push   esi
  410d70:	xchg   BYTE PTR [ecx],cl
  410d72:	mov    cl,BYTE PTR [esi+ebx*2]
  410d75:	mov    al,ds:0xe9f4e4a2
  410d7a:	into   
  410d7b:	leave  
  410d7c:	push   edx
  410d7d:	jle    0x410d8c
  410d7f:	jo     0x410db9
  410d81:	mov    ecx,0x88a70fa8
  410d86:	mov    ds:0x2efe9e55,eax
  410d8b:	xor    BYTE PTR [ebx-0x1e],0x8e
  410d8f:	xchg   edx,eax
  410d90:	or     DWORD PTR [ebx+0x3c20701f],eax
  410d96:	inc    esp
  410d97:	sbb    al,0xea
  410d99:	jmp    FWORD PTR [eax-0x3f]
  410d9c:	frndint 
  410d9e:	fmul   st(7),st
  410da0:	ret    0x6c0b
  410da3:	pop    ss
  410da4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410da5:	pop    ebp
  410da6:	add    DWORD PTR [esi],eax
  410da8:	or     eax,0x4f09d9d1
  410dad:	cmp    al,0xc5
  410daf:	mov    ah,0x58
  410db1:	mov    dh,0xf0
  410db3:	fdivr  DWORD PTR [esi+0x56]
  410db6:	jne    0x410d97
  410db8:	popf   
  410db9:	sbb    al,0x3d
  410dbb:	lock or BYTE PTR [ebx+edi*1+0x4],dl
  410dc0:	push   edi
  410dc1:	adc    DWORD PTR [eax+0x3d70fbbf],ecx
  410dc7:	pop    edi
  410dc8:	jne    0x410d91
  410dca:	(bad)  
  410dcb:	pusha  
  410dcc:	jmp    0xc0dc:0x2e07a586
  410dd3:	addr16 mov al,0x76
  410dd6:	mov    esp,esp
  410dd8:	imul   ebx,eax,0xffffffe9
  410ddb:	test   DWORD PTR [ecx+0xc],ebx
  410dde:	dec    ecx
  410ddf:	lods   eax,DWORD PTR ds:[esi]
  410de0:	pop    esp
  410de1:	call   FWORD PTR [ebp-0x13]
  410de4:	sar    DWORD PTR [ebx-0x4],0x0
  410de8:	cmp    ah,0xf8
  410deb:	inc    ebx
  410dec:	mov    ecx,0x8440c541
  410df1:	cmp    BYTE PTR [ecx+0x30c05d34],ch
  410df7:	js     0x410dc3
  410df9:	scas   eax,DWORD PTR es:[edi]
  410dfa:	xor    eax,DWORD PTR [ebp+0x377eb3b9]
  410e00:	mov    al,ds:0xc8fd2454
  410e05:	inc    eax
  410e06:	cmp    BYTE PTR [eax],ch
  410e08:	or     BYTE PTR [esi+0x73],dh
  410e0b:	mov    ebp,0x98c7d427
  410e10:	xchg   esi,eax
  410e11:	call   0x2b32a825
  410e16:	pusha  
  410e17:	imul   eax,eax,0x342beee8
  410e1d:	mov    ah,0x7d
  410e1f:	mov    DWORD PTR [ebp+ebx*1-0x120dc731],edx
  410e26:	data16 cld 
  410e28:	in     al,0xae
  410e2a:	cmp    eax,0xb1d155f7
  410e2f:	rcl    DWORD PTR [ecx+0x63],0x50
  410e33:	test   DWORD PTR [esp+edx*8+0xc],eax
  410e37:	in     eax,0x19
  410e39:	mov    ch,0xe6
  410e3b:	das    
  410e3c:	loop   0x410e59
  410e3e:	and    al,BYTE PTR [ebx]
  410e40:	mov    ch,0x5f
  410e42:	lods   al,BYTE PTR ds:[esi]
  410e43:	push   ss
  410e44:	lods   al,BYTE PTR ds:[esi]
  410e45:	mov    dh,0xcf
  410e47:	or     BYTE PTR [esi-0x49],al
  410e4a:	loop   0x410e7d
  410e4c:	mov    bl,0xe5
  410e4e:	mov    dh,BYTE PTR [esi-0x688b6b25]
  410e54:	jecxz  0x410dee
  410e56:	je     0x410e6c
  410e58:	mov    ?,WORD PTR [esi-0x60]
  410e5b:	sti    
  410e5c:	sahf   
  410e5d:	and    BYTE PTR [eax+0x1cf59371],dl
  410e63:	cmp    al,BYTE PTR [edi-0x6aed6d74]
  410e69:	jg     0x410ed3
  410e6b:	jmp    0x74ddf93a
  410e70:	popf   
  410e71:	adc    bl,dh
  410e73:	(bad)  
  410e75:	jnp    0x410e90
  410e77:	jg     0x410eaa
  410e79:	mov    BYTE PTR [edi+0x70],dl
  410e7c:	std    
  410e7d:	outs   dx,BYTE PTR ds:[esi]
  410e7e:	js     0x410e7b
  410e80:	sahf   
  410e81:	fidiv  DWORD PTR [edi+0x52]
  410e84:	bound  esi,QWORD PTR [eax]
  410e86:	push   es
  410e87:	and    ah,dl
  410e89:	and    DWORD PTR ds:0x4d7d2ea7,0xcccc5615
  410e93:	push   es
  410e94:	cli    
  410e95:	pusha  
  410e96:	div    DWORD PTR [ecx-0x27]
  410e99:	enter  0x9c38,0x72
  410e9d:	daa    
  410e9e:	mov    DWORD PTR [esi-0x5013a62c],edx
  410ea4:	daa    
  410ea5:	mov    edx,0x4663199
  410eaa:	jp     0x410e5c
  410eac:	dec    ax
  410eae:	fwait
  410eaf:	push   ebx
  410eb0:	dec    eax
  410eb1:	or     cl,BYTE PTR [ebp-0x6a25f849]
  410eb7:	jne    0x410ef4
  410eb9:	inc    edx
  410eba:	push   ss
  410ebb:	cli    
  410ebc:	xor    al,0xc8
  410ebe:	mov    edi,0x17588a31
  410ec3:	dec    ecx
  410ec4:	stos   DWORD PTR es:[edi],eax
  410ec5:	xor    edi,DWORD PTR [ebx]
  410ec7:	adc    al,0x16
  410ec9:	ret    
  410eca:	stc    
  410ecb:	addr16 jmp 0xd0b11e09
  410ed1:	leave  
  410ed2:	cwde   
  410ed3:	mov    cl,0x56
  410ed5:	lods   eax,DWORD PTR ds:[esi]
  410ed6:	xor    eax,0xedf324c2
  410edb:	fdiv   QWORD PTR [edi-0x5db33694]
  410ee1:	pushf  
  410ee2:	mov    esp,0x3d218804
  410ee7:	jns    0x410f20
  410ee9:	idiv   BYTE PTR [edx+0x38ee2c22]
  410eef:	test   BYTE PTR [esi],cl
  410ef1:	call   0x852f166c
  410ef6:	or     ecx,edx
  410ef8:	pop    ebp
  410ef9:	popf   
  410efa:	iret   
  410efb:	xor    DWORD PTR [edx-0x62],esi
  410efe:	add    al,BYTE PTR [edx]
  410f00:	pop    ss
  410f01:	in     eax,0x6b
  410f03:	dec    edx
  410f04:	xchg   esi,eax
  410f05:	dec    ebp
  410f06:	imul   ecx,esi,0xf9f885aa
  410f0c:	aas    
  410f0d:	mov    WORD PTR [edi-0x1e9e0c1b],fs
  410f13:	push   esp
  410f14:	lds    ebx,FWORD PTR [ebx-0x7d]
  410f17:	test   al,0x5b
  410f19:	sbb    DWORD PTR [esi+0x6ec40db5],esi
  410f1f:	and    al,0xe9
  410f21:	inc    edx
  410f22:	and    dl,dh
  410f24:	xchg   ecx,eax
  410f25:	in     al,0x73
  410f27:	jmp    0xe5154274
  410f2c:	je     0x410faa
  410f2e:	int    0x3a
  410f30:	adc    DWORD PTR [ecx+0x50020cb9],esp
  410f36:	imul   edi,DWORD PTR [ecx-0x7a309a3d],0xffffffad
  410f3d:	repz jg 0x410ee9
  410f40:	jl     0x410f1d
  410f42:	shr    DWORD PTR [esi],cl
  410f44:	mov    fs,WORD PTR [edx+ebp*8]
  410f47:	and    DWORD PTR [ebp-0x3ab258c4],edi
  410f4d:	jno    0x410f2d
  410f4f:	aaa    
  410f50:	fisubr DWORD PTR [ecx+0x5f]
  410f53:	jno    0x410fa9
  410f55:	adc    bl,cl
  410f57:	daa    
  410f58:	jno    0x410f15
  410f5a:	cdq    
  410f5b:	mov    esp,0x973ef548
  410f60:	js     0x410f58
  410f62:	xchg   BYTE PTR [ebx+0x550b0cb8],ah
  410f68:	xchg   DWORD PTR ds:[esi],ecx
  410f6b:	sub    DWORD PTR [esi-0x30],edi
  410f6e:	jbe    0x410f09
  410f70:	jmp    0x410f08
  410f72:	pushf  
  410f73:	or     al,0xad
  410f75:	cmp    bh,dh
  410f77:	xor    DWORD PTR [ecx+0x7b],esi
  410f7a:	xor    eax,0xb77f4512
  410f7f:	(bad)  
  410f80:	fld    QWORD PTR [eax]
  410f82:	cli    
  410f83:	push   ecx
  410f84:	and    al,0xd3
  410f86:	ss push edx
  410f88:	pop    edi
  410f89:	int3   
  410f8a:	mov    bl,0x8f
  410f8c:	in     al,0xdd
  410f8e:	mov    edi,0x133c5b4b
  410f93:	pusha  
  410f94:	in     al,dx
  410f95:	push   es
  410f96:	inc    edx
  410f97:	inc    eax
  410f98:	ja     0x410f37
  410f9a:	xchg   ecx,eax
  410f9b:	inc    ebx
  410f9c:	lods   al,BYTE PTR ds:[esi]
  410f9d:	dec    ebx
  410f9e:	push   ebp
  410f9f:	push   ecx
  410fa0:	mov    eax,0x568b37
  410fa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fa6:	mov    ecx,0x9a629362
  410fab:	fsub   st(1),st
  410fad:	ja     0x410f47
  410faf:	pop    ecx
  410fb0:	and    BYTE PTR [ecx+0x6e],ah
  410fb3:	mov    ds:0x6a6acb8c,eax
  410fb8:	jae    0x410fc0
  410fba:	(bad)  
  410fbb:	shr    DWORD PTR [ecx],1
  410fbd:	and    ebp,DWORD PTR [ebx+0xa1d3975]
  410fc3:	enter  0x90d,0xc9
  410fc7:	inc    esi
  410fc8:	cli    
  410fc9:	inc    ebp
  410fca:	outs   dx,DWORD PTR ds:[esi]
  410fcb:	icebp  
  410fcc:	pusha  
  410fcd:	test   al,0x74
  410fcf:	lahf   
  410fd0:	in     al,dx
  410fd1:	repnz into 
  410fd3:	loop   0x410f70
  410fd5:	out    0xd7,eax
  410fd7:	mov    ah,0x1b
  410fd9:	sbb    al,0x5b
  410fdb:	cdq    
  410fdc:	pop    ds
  410fdd:	adc    al,0x8d
  410fdf:	hlt    
  410fe0:	mov    WORD PTR ds:0x2847ba29,ds
  410fe6:	and    al,0x5c
  410fe8:	mov    al,0x4e
  410fea:	sub    ecx,DWORD PTR [ebx+eiz*2+0xca4da23]
  410ff1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ff2:	shl    DWORD PTR ds:0xb8e26f5b,1
  410ff8:	inc    ecx
  410ff9:	xchg   esp,eax
  410ffa:	mov    ds:0x224b7b8b,eax
  410fff:	inc    ecx
  411000:	xchg   eax,esi
  411002:	aam    0xbc
  411004:	push   ds
  411005:	jg     0x411052
  411007:	lea    esi,[ebx]
  411009:	mov    esi,0x5ab9fa03
  41100e:	cmp    BYTE PTR [ebp+0x5f23cfe8],dh
  411014:	jns    0x410fce
  411016:	pop    ecx
  411017:	pusha  
  411018:	sahf   
  411019:	sub    bh,BYTE PTR [ecx+0x77b04233]
  41101f:	(bad)  
  411020:	fcomp  DWORD PTR [ebx-0x24]
  411023:	pusha  
  411024:	das    
  411025:	test   cl,ch
  411027:	cld    
  411028:	call   0x56b1:0x2fae6ffc
  41102f:	mov    dh,0x40
  411031:	fldcw  WORD PTR [ebx]
  411033:	sbb    di,WORD PTR [edx-0x2a533ef8]
  41103a:	jnp    0x410fde
  41103c:	in     al,dx
  41103d:	adc    esp,ecx
  41103f:	ret    0x93b8
  411042:	neg    DWORD PTR [ebp+0x5b]
  411045:	arpl   WORD PTR [edi],di
  411047:	(bad)  
  411048:	fwait
  411049:	adc    cx,WORD PTR [esp+ebp*1+0x74]
  41104e:	push   edx
  41104f:	mov    DWORD PTR [ecx+0x27],esp
  411052:	iret   
  411053:	jl     0x41106f
  411055:	pop    es
  411056:	cwde   
  411057:	pop    edx
  411058:	mov    DWORD PTR [edx+0x19],0x73f4126f
  41105f:	xor    BYTE PTR [ebx],al
  411061:	or     cl,BYTE PTR [ebp+0xe]
  411064:	mov    esi,ecx
  411066:	mov    dl,0xf
  411068:	mov    bl,0xfd
  41106a:	(bad)
  41106d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41106e:	sbb    eax,edi
  411070:	arpl   WORD PTR [ebx+eax*1+0x100eae1e],dx
  411077:	test   BYTE PTR [esi+0x442b65ff],cl
  41107d:	sbb    dl,bl
  41107f:	xor    BYTE PTR [eax+edi*4-0xb8cf9d9],ch
  411086:	je     0x411069
  411088:	add    DWORD PTR [edi-0x7dd6a718],ebp
  41108e:	ret    
  41108f:	xor    bh,dh
  411091:	pop    ss
  411092:	and    DWORD PTR [ebx+esi*4-0x5d],ebp
  411096:	repz fsub st,st(7)
  411099:	xchg   edi,esp
  41109b:	fidivr WORD PTR [ecx+0x21]
  41109e:	mov    ds,WORD PTR [esi-0x4db76119]
  4110a4:	xchg   esp,eax
  4110a5:	add    BYTE PTR [eax-0x3b136440],dl
  4110ab:	and    al,0x6c
  4110ad:	(bad)  
  4110ae:	push   ss
  4110af:	and    eax,0x7e80fd85
  4110b4:	in     eax,0x1f
  4110b6:	jb     0x41112d
  4110b8:	repnz loop 0x411077
  4110bb:	adc    eax,DWORD PTR [eax-0x74]
  4110be:	xchg   edi,eax
  4110bf:	ins    BYTE PTR es:[edi],dx
  4110c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110c1:	mov    ebx,0xab489b2a
  4110c6:	imul   esp,DWORD PTR [esp+ebx*1-0x3b135eec],0xe84a270c
  4110d1:	rcl    BYTE PTR [ecx+0x1a],cl
  4110d4:	lods   al,BYTE PTR ds:[esi]
  4110d5:	sbb    ebp,DWORD PTR [ecx+0x16f1e2c]
  4110db:	jnp    0x411099
  4110dd:	scas   al,BYTE PTR es:[edi]
  4110de:	in     al,0x46
  4110e0:	push   esp
  4110e1:	call   0x53d8:0x2b97545a
  4110e8:	inc    eax
  4110e9:	retf   
  4110ea:	repz or al,dh
  4110ed:	aaa    
  4110ee:	jb     0x411114
  4110f0:	pop    ecx
  4110f1:	int    0x41
  4110f3:	ins    DWORD PTR es:[edi],dx
  4110f4:	mov    ebp,0x6a344431
  4110f9:	(bad)
  4110fc:	add    al,0x7e
  4110fe:	out    0x28,eax
  411100:	jl     0x411164
  411102:	rcl    esp,cl
  411104:	add    edx,DWORD PTR [ecx+0x1cc667f]
  41110a:	cdq    
  41110b:	bound  ecx,QWORD PTR [edi]
  41110d:	xlat   BYTE PTR ds:[ebx]
  41110e:	sub    cl,bh
  411110:	pop    ss
  411111:	sar    DWORD PTR [ebx-0x3b83b06e],cl
  411117:	ret    
  411118:	ja     0x411154
  41111a:	xor    DWORD PTR [ebx-0x1215ecb1],0xffffffbc
  411121:	repz (bad) 
  411124:	sub    BYTE PTR [eax-0x16],ah
  411127:	loope  0x4110ad
  411129:	pop    ss
  41112a:	push   ecx
  41112b:	cmp    al,0x9c
  41112d:	rol    BYTE PTR [ecx+0x17],0xe
  411131:	test   ebp,ecx
  411133:	mov    ebx,0x922a8f54
  411138:	pop    eax
  411139:	scas   eax,DWORD PTR es:[edi]
  41113a:	inc    eax
  41113b:	jmp    0x247b9608
  411140:	and    ebx,DWORD PTR [eax]
  411142:	push   ebp
  411143:	aas    
  411144:	and    dh,BYTE PTR [ebp-0x55]
  411147:	push   esi
  411148:	inc    eax
  411149:	ds cld 
  41114b:	inc    edi
  41114c:	retf   0xab84
  41114f:	mov    esp,0x9457962
  411154:	repnz sub DWORD PTR [esi+0x750c7ead],eax
  41115b:	jno    0x411131
  41115d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41115e:	push   ecx
  41115f:	pop    ebp
  411160:	cmp    DWORD PTR [ebp-0x4479d7db],ebp
  411166:	xor    esi,0xe
  411169:	add    ch,ch
  41116b:	scas   eax,DWORD PTR es:[edi]
  41116c:	sbb    al,0xb8
  41116e:	push   esp
  41116f:	hlt    
  411170:	xchg   esi,eax
  411171:	repz xchg ebx,eax
  411173:	xor    DWORD PTR cs:[edi+0x402a5b5e],edx
  41117a:	jp     0x411183
  41117c:	shr    BYTE PTR [edx],1
  41117e:	cmp    eax,0x194f550d
  411183:	inc    eax
  411184:	popa   
  411185:	add    bh,bh
  411187:	fcmovnu st,st(4)
  411189:	sbb    edx,DWORD PTR [esi]
  41118b:	xor    al,0xa0
  41118d:	pop    es
  41118e:	add    bh,BYTE PTR [edx+0x3d9467]
  411194:	mov    WORD PTR [esi+0x444e337a],ds
  41119a:	xor    edx,ebp
  41119c:	das    
  41119d:	es pop ds
  41119f:	cmp    esi,DWORD PTR [esi-0x6bc84f22]
  4111a5:	jbe    0x4111c8
  4111a7:	idiv   ecx
  4111a9:	shl    DWORD PTR [esi],cl
  4111ab:	(bad)  
  4111ac:	scas   al,BYTE PTR es:[edi]
  4111ad:	dec    esi
  4111ae:	not    DWORD PTR [edi+0x4769bf70]
  4111b4:	xlat   BYTE PTR ds:[ebx]
  4111b5:	cmp    BYTE PTR [edx+0x10],0x7c
  4111b9:	xlat   BYTE PTR ds:[ebx]
  4111ba:	scas   al,BYTE PTR es:[edi]
  4111bb:	xor    DWORD PTR es:[ecx-0x5],0xce1d1a98
  4111c3:	fst    QWORD PTR [ebx+eax*2+0x132f1f05]
  4111ca:	mov    ah,0xc
  4111cc:	sbb    ebx,DWORD PTR [edi-0x5b3ac57f]
  4111d2:	fdiv   DWORD PTR [ebx-0x1ea9d7d0]
  4111d8:	lock push 0xffffffe9
  4111db:	gs cmp al,0x9d
  4111de:	into   
  4111df:	jl     0x4111c8
  4111e1:	push   eax
  4111e2:	sub    al,0x86
  4111e4:	jg     0x4111af
  4111e6:	or     eax,0x73e97344
  4111eb:	inc    edx
  4111ec:	inc    esp
  4111ed:	push   ds
  4111ee:	stc    
  4111ef:	loop   0x4111f2
  4111f1:	xor    DWORD PTR [eax-0x1a],esp
  4111f4:	mov    ebp,0xb944591e
  4111f9:	sub    esi,DWORD PTR [eax+0x16]
  4111fc:	fld    TBYTE PTR [edi+0x48]
  4111ff:	stc    
  411200:	sbb    eax,0x8d664c1b
  411205:	aam    0x59
  411207:	outs   dx,BYTE PTR ds:[esi]
  411208:	lds    edi,FWORD PTR [eax+0x624ec422]
  41120e:	rol    BYTE PTR ds:0x1fd5f309,cl
  411214:	dec    ecx
  411215:	push   edi
  411216:	add    DWORD PTR [ebx-0x42],0xaba8bc8a
  41121d:	add    DWORD PTR [esi+0x26f865db],esp
  411223:	xchg   ecx,eax
  411224:	adc    eax,DWORD PTR [ebx-0x21]
  411227:	rep lods eax,DWORD PTR ds:[esi]
  411229:	sti    
  41122a:	fmul   DWORD PTR [ebx+0x61]
  41122d:	xchg   edx,eax
  41122e:	inc    eax
  41122f:	xor    BYTE PTR [ecx-0x6f040986],ch
  411235:	imul   BYTE PTR [ecx+0x30]
  411238:	jecxz  0x41124f
  41123a:	hlt    
  41123b:	addr16 ja 0x4111e2
  41123e:	or     esi,DWORD PTR [edi]
  411240:	das    
  411241:	inc    ebp
  411242:	fadd   st(2),st
  411244:	push   edx
  411245:	loope  0x4111fa
  411247:	ins    BYTE PTR es:[edi],dx
  411248:	and    DWORD PTR [eax+esi*2+0x45],0x47
  41124d:	pop    ds
  41124e:	sbb    BYTE PTR ds:0x5c73e4af,dh
  411254:	lock shl BYTE PTR [edi+0x36c48d71],0xa4
  41125c:	lods   eax,DWORD PTR ds:[esi]
  41125d:	pop    edx
  41125e:	or     BYTE PTR [esi-0x2],0xd5
  411262:	out    dx,eax
  411263:	xchg   esi,eax
  411264:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411265:	test   dh,bl
  411267:	test   eax,0x27ff7bf7
  41126c:	push   0x27f1dd27
  411271:	dec    edx
  411272:	inc    esi
  411273:	mov    dl,0x10
  411275:	inc    edi
  411276:	xor    eax,DWORD PTR [esi]
  411278:	mov    DWORD PTR [edi],ebx
  41127a:	cmp    al,0x8c
  41127c:	test   DWORD PTR [esi-0x5f247670],esi
  411282:	fst    st(4)
  411284:	daa    
  411285:	sbb    bl,0x25
  411288:	nop
  411289:	jbe    0x41125e
  41128b:	adc    ecx,DWORD PTR [eax+0x225f9d65]
  411291:	scas   eax,DWORD PTR es:[edi]
  411292:	push   ebx
  411293:	int3   
  411294:	mov    dl,0xd3
  411296:	std    
  411297:	jo     0x411313
  411299:	stos   DWORD PTR es:[edi],eax
  41129a:	imul   bh
  41129c:	pop    ds
  41129d:	add    al,0x63
  41129f:	popa   
  4112a0:	inc    edi
  4112a1:	xchg   edx,eax
  4112a2:	pop    esp
  4112a3:	push   DWORD PTR [ebx]
  4112a5:	std    
  4112a6:	mov    ch,0xf8
  4112a8:	xlat   BYTE PTR ds:[ebx]
  4112a9:	fadd   st,st(7)
  4112ab:	div    DWORD PTR [edi+ebx*4+0x31]
  4112af:	ret    0x40
  4112b2:	aam    0x79
  4112b4:	mov    dh,0x23
  4112b6:	aam    0x91
  4112b8:	sub    ebp,esp
  4112ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112bb:	inc    ecx
  4112bc:	mov    edi,0x38427137
  4112c1:	cmc    
  4112c2:	mov    al,0x5c
  4112c4:	js     0x41132d
  4112c6:	sbb    BYTE PTR [edi+0x7c],cl
  4112c9:	mov    bh,0xab
  4112cb:	pop    edi
  4112cc:	cmp    ch,BYTE PTR [ebp+0x574c370d]
  4112d2:	pop    ebx
  4112d3:	push   0x51cf9f6a
  4112d8:	xchg   BYTE PTR [esi+0x70],dl
  4112db:	js     0x4112f0
  4112dd:	dec    ebx
  4112de:	ds dec edi
  4112e0:	add    DWORD PTR [edx+0x44a52f5a],esi
  4112e6:	cmp    eax,0xc07838e5
  4112eb:	fistp  WORD PTR [ebp+ebx*1-0x9eb71eb]
  4112f2:	push   esi
  4112f3:	retf   
  4112f4:	dec    esi
  4112f5:	loope  0x4112f3
  4112f7:	mov    ecx,0x3cf8963e
  4112fc:	mov    bl,0x5
  4112fe:	in     al,0xcc
  411300:	aaa    
  411301:	push   edx
  411302:	mov    ecx,?
  411304:	cmc    
  411305:	xchg   ebx,eax
  411306:	pop    ecx
  411307:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411308:	bound  esi,QWORD PTR [ecx+0x36]
  41130b:	js     0x411312
  41130d:	int    0x17
  41130f:	jp     0x4112a7
  411311:	imul   ebp,ebx,0xdbd826df
  411317:	mov    al,0x7f
  411319:	dec    edi
  41131a:	addr16 jae 0x4112f6
  41131d:	cmp    eax,0x7aa85f62
  411322:	dec    ebx
  411323:	jp     0x4112ff
  411325:	xor    dh,BYTE PTR [ebp-0x5c]
  411328:	pop    edx
  411329:	test   BYTE PTR [edx-0x4a65cc79],dl
  41132f:	inc    edi
  411330:	jo     0x41139c
  411332:	mov    cl,0x36
  411334:	lea    ecx,[edi-0x5a]
  411337:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411338:	aad    0x5
  41133a:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41133c:	mov    bl,0xee
  41133e:	aaa    
  41133f:	cmp    esp,ebp
  411341:	int3   
  411342:	jnp    0x4112cc
  411344:	pop    esi
  411345:	push   esp
  411346:	cwde   
  411347:	dec    ch
  411349:	mov    ?,WORD PTR [ecx+0x2cec5225]
  41134f:	adc    al,0x91
  411351:	fcomp  DWORD PTR [esi-0x2d]
  411354:	inc    esp
  411355:	shr    esp,0xaf
  411358:	mov    dl,0x2d
  41135a:	scas   eax,DWORD PTR es:[edi]
  41135b:	dec    edi
  41135c:	and    BYTE PTR [eax],dh
  41135e:	xchg   esp,eax
  41135f:	dec    edx
  411360:	test   eax,0x549bcca4
  411365:	mov    DWORD PTR [ebp+0x5a],esi
  411368:	scas   al,BYTE PTR es:[edi]
  411369:	dec    esp
  41136a:	mov    dl,0xaf
  41136c:	ins    DWORD PTR es:[edi],dx
  41136d:	punpckldq mm0,DWORD PTR [ecx-0x31]
  411371:	inc    ebp
  411372:	pop    ds
  411373:	mov    edi,DWORD PTR [edx+0x77461f34]
  411379:	mov    eax,ds:0xede66e49
  41137e:	adc    al,0x5
  411380:	sbb    DWORD PTR [esi-0x1d],esi
  411383:	xchg   edx,eax
  411384:	leave  
  411385:	loope  0x4113a6
  411387:	xchg   ecx,eax
  411388:	jno    0x411392
  41138a:	js     0x411331
  41138c:	rol    DWORD PTR [eax+0x44609373],cl
  411392:	mov    esp,DWORD PTR [ecx+0x42]
  411395:	mov    edi,0x3ce2b306
  41139a:	push   0x24abed82
  41139f:	das    
  4113a0:	ficom  WORD PTR [ecx]
  4113a2:	mov    ch,0xd1
  4113a4:	jnp    0x41136c
  4113a6:	in     al,dx
  4113a7:	(bad)  [esi]
  4113a9:	or     al,0x99
  4113ab:	call   0x66ce:0x9d6e5bda
  4113b2:	mov    dl,BYTE PTR [edx]
  4113b4:	or     eax,0x1a3f2d19
  4113b9:	hlt    
  4113ba:	mov    bl,0xdf
  4113bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113bd:	ret    
  4113be:	imul   ecx,DWORD PTR [eax-0x2bc1894a],0xffffffcb
  4113c5:	sub    BYTE PTR [eax-0x5d36db24],0x5f
  4113cc:	inc    ebp
  4113cd:	adc    esp,ebx
  4113cf:	adc    eax,0x585c7693
  4113d4:	push   DWORD PTR [ecx+0x4]
  4113d7:	inc    eax
  4113d8:	sbb    edi,eax
  4113da:	xchg   ecx,eax
  4113db:	xor    bh,BYTE PTR [edx-0x22ae14df]
  4113e1:	xor    BYTE PTR [edx-0x12b84309],bh
  4113e7:	int    0x59
  4113e9:	cmp    BYTE PTR [esi],0x48
  4113ec:	int3   
  4113ed:	inc    ecx
  4113ee:	(bad)  
  4113ef:	fist   WORD PTR [esi+0x14ee60df]
  4113f5:	mov    eax,0x41d5e6e4
  4113fa:	dec    eax
  4113fb:	and    BYTE PTR [ebx],dl
  4113fd:	xor    al,BYTE PTR [esi+ebp*1-0x6c]
  411401:	in     al,0x84
  411403:	shl    ah,1
  411405:	test   dh,dh
  411407:	mov    al,ds:0xc1c52020
  41140c:	pop    eax
  41140d:	xchg   edi,eax
  41140e:	mov    al,ds:0x36e59d3
  411413:	cmp    BYTE PTR [ebx-0x2f9a68d5],dh
  411419:	mov    ds:0x149bdeca,eax
  41141e:	repnz adc eax,0x3b0246ce
  411424:	fwait
  411425:	punpckhdq mm3,QWORD PTR [edx+0x2e931cd2]
  41142c:	pop    eax
  41142d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41142e:	inc    ecx
  41142f:	mov    eax,ds:0x26fe5493
  411434:	scas   al,BYTE PTR es:[edi]
  411435:	adc    ebp,DWORD PTR [eax-0x716169ae]
  41143b:	mov    cl,0x68
  41143d:	xor    edi,edi
  41143f:	es and ah,ah
  411442:	(bad)  
  411444:	add    ebp,ecx
  411446:	cs call 0x92debaaf
  41144c:	fcom   QWORD PTR [eax+0x47ef0e5d]
  411452:	in     eax,0xb2
  411454:	shr    DWORD PTR [eax],cl
  411456:	in     eax,0x25
  411458:	xchg   esp,eax
  411459:	jmp    0x4340:0x3a5fc464
  411460:	sbb    ecx,DWORD PTR [eax+0x4a]
  411463:	(bad)  
  411464:	std    
  411465:	xor    al,0x28
  411467:	sub    BYTE PTR [ebx+0x2168cea],dl
  41146d:	test   al,0x9a
  41146f:	std    
  411470:	sbb    bl,BYTE PTR [eax]
  411472:	scas   eax,DWORD PTR es:[edi]
  411473:	out    0xc7,al
  411475:	lods   al,BYTE PTR ds:[esi]
  411476:	int    0xaf
  411478:	in     eax,0x1b
  41147a:	sbb    DWORD PTR [edx],ebx
  41147c:	xchg   edx,eax
  41147d:	jecxz  0x41140f
  41147f:	cmp    DWORD PTR [ecx-0x4d],ecx
  411482:	pop    ebx
  411483:	test   BYTE PTR [ebx],al
  411485:	pop    edi
  411486:	leave  
  411487:	mov    ch,0x9e
  411489:	xchg   al,dl
  41148b:	std    
  41148c:	mov    ebx,0x2095d323
  411491:	in     eax,0xbe
  411493:	icebp  
  411494:	(bad)  
  411495:	fmul   st,st(1)
  411497:	sub    al,0x56
  411499:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41149a:	dec    edx
  41149b:	push   es
  41149c:	scas   al,BYTE PTR es:[edi]
  41149d:	pop    ecx
  41149e:	scas   al,BYTE PTR es:[edi]
  41149f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114a0:	das    
  4114a1:	cmp    DWORD PTR [edx-0x65],ebx
  4114a4:	cli    
  4114a5:	fdivr  QWORD PTR [ecx+edx*1+0x15]
  4114a9:	dec    ebx
  4114aa:	retf   
  4114ab:	repz cwde 
  4114ad:	in     al,dx
  4114ae:	js     0x4114a5
  4114b0:	(bad)  
  4114b1:	and    eax,0x8902e745
  4114b6:	xlat   BYTE PTR ds:[ebx]
  4114b7:	push   edi
  4114b8:	ja     0x4114d2
  4114ba:	jbe    0x4114b4
  4114bc:	push   eax
  4114bd:	dec    edx
  4114be:	jnp    0x4114d4
  4114c0:	enter  0xd47,0x22
  4114c4:	sub    al,0x4e
  4114c6:	push   cs
  4114c7:	sub    eax,0x8e956cd6
  4114cc:	std    
  4114cd:	or     al,0x87
  4114cf:	adc    dl,BYTE PTR [esi]
  4114d1:	sbb    ch,BYTE PTR [ebp+0x7c]
  4114d4:	mov    dl,BYTE PTR [ebp+0x72d04be1]
  4114da:	or     esi,ebx
  4114dc:	mov    ds:0x31b5a686,al
  4114e1:	mov    BYTE PTR [ebp-0x15aa1697],bh
  4114e7:	out    0x7c,eax
  4114e9:	xchg   BYTE PTR [edx+0x62],cl
  4114ec:	xchg   ebp,eax
  4114ed:	mov    DWORD PTR [ecx],esp
  4114ef:	dec    ebp
  4114f0:	dec    esp
  4114f1:	clc    
  4114f2:	cmc    
  4114f3:	dec    ebp
  4114f4:	pop    ds
  4114f5:	cmp    cl,BYTE PTR [esi+0x2f6924b2]
  4114fb:	stos   BYTE PTR es:[edi],al
  4114fc:	adc    ebp,DWORD PTR [edi]
  4114fe:	jl     0x4114ed
  411500:	call   0xf729ab94
  411505:	add    BYTE PTR [edi+esi*1],dh
  411508:	pop    ecx
  411509:	inc    ebx
  41150a:	mov    ah,0x37
  41150c:	mov    edi,0x77059e20
  411511:	dec    esi
  411512:	sbb    dl,BYTE PTR [eax]
  411514:	ja     0x411523
  411516:	mov    bh,0x3e
  411518:	fs sahf 
  41151a:	inc    ebp
  41151b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41151c:	call   0x304c:0x1990d173
  411523:	inc    esp
  411524:	add    BYTE PTR [ebp+0x6],0x54
  411528:	sti    
  411529:	mov    edi,0x76167fb1
  41152e:	xlat   BYTE PTR ds:[ebx]
  41152f:	sub    eax,0x77483798
  411534:	mov    al,ds:0xd89be439
  411539:	outs   dx,DWORD PTR ds:[esi]
  41153a:	and    cl,BYTE PTR [esi]
  41153c:	fmul   st,st(5)
  41153e:	and    ah,ah
  411540:	int    0x2
  411542:	mov    bl,0x63
  411544:	xor    DWORD PTR [edi-0x4b],edx
  411547:	retf   0x3bdf
  41154a:	push   eax
  41154b:	adc    bl,0x54
  41154e:	pop    ax
  411550:	sbb    dh,BYTE PTR [eax]
  411552:	push   edi
  411553:	aad    0x61
  411555:	test   eax,0xc36f1de2
  41155a:	data16 sub bl,bl
  41155d:	in     al,0x24
  41155f:	imul   eax,DWORD PTR [esi+edx*4-0x3247f63],0xbc6dcb28
  41156a:	jge    0x411546
  41156c:	inc    edi
  41156d:	les    eax,FWORD PTR [edx]
  41156f:	push   edi
  411570:	mov    edi,0xa8bab97e
  411575:	stc    
  411576:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411577:	mov    ds:0x8a2bdc0c,al
  41157c:	and    dl,BYTE PTR [edx]
  41157e:	sub    edi,0xffffffc8
  411581:	sub    BYTE PTR [ebp+0x4db18fee],bl
  411587:	inc    esp
  411588:	jae    0x4115a9
  41158a:	lods   eax,DWORD PTR ds:[esi]
  41158b:	out    0xb5,al
  41158d:	jmp    0x98980b08
  411592:	adc    ah,BYTE PTR [eax-0x39df7851]
  411598:	clc    
  411599:	cli    
  41159a:	imul   edi,DWORD PTR [edi],0x6f81abe1
  4115a0:	and    BYTE PTR [ebx+0xe],al
  4115a3:	shr    DWORD PTR [esi-0x673436a],cl
  4115a9:	lods   al,BYTE PTR ds:[esi]
  4115aa:	pop    ecx
  4115ab:	fist   WORD PTR [esi-0x28]
  4115ae:	call   0x3eb:0xedeba471
  4115b5:	mov    ecx,DWORD PTR [ecx-0x35]
  4115b8:	mov    WORD PTR [ebp+0x5a61c1f4],?
  4115be:	sub    BYTE PTR [esi+edi*1+0xccfa131],bh
  4115c5:	fst    QWORD PTR [esi+0x7226a3d3]
  4115cb:	call   0x2e2b:0xde1aa523
  4115d2:	mov    ah,0x6a
  4115d4:	cmp    esi,DWORD PTR [ecx-0x78425505]
  4115da:	sub    edx,0xfffffffc
  4115dd:	sub    ebx,DWORD PTR [esi+0x457bc407]
  4115e3:	test   BYTE PTR [edi-0x50078da4],bl
  4115e9:	mov    dh,0x3e
  4115eb:	add    DWORD PTR [edx+ecx*2],edx
  4115ee:	xchg   esp,eax
  4115ef:	clc    
  4115f0:	ss out 0xe3,al
  4115f3:	adc    dh,BYTE PTR [esi+0x3]
  4115f6:	fwait
  4115f7:	mov    ch,0x33
  4115f9:	sahf   
  4115fa:	jle    0x41158e
  4115fc:	jg     0x41161e
  4115fe:	jl     0x4115ea
  411600:	ret    0x6ef8
  411603:	inc    esi
  411604:	adc    bh,cl
  411606:	fnsave [ebx-0x3fc0d683]
  41160c:	aam    0x3d
  41160e:	mov    al,BYTE PTR [edx-0x73c3bf8c]
  411614:	aas    
  411615:	lock repz mov esp,0xfe5cadaa
  41161c:	add    esi,DWORD PTR [ebp+0x76ad276d]
  411622:	jp     0x411630
  411624:	dec    ebx
  411625:	mov    esi,0xcea4303b
  41162a:	or     dh,bh
  41162c:	out    0x75,al
  41162e:	xchg   ebx,eax
  41162f:	rol    DWORD PTR [esi-0x28cf01a4],0x84
  411636:	jb     0x4115f2
  411638:	fdiv   st(6),st
  41163a:	dec    eax
  41163b:	and    eax,ebp
  41163d:	sub    ebx,0x72c44ef9
  411643:	sub    dl,BYTE PTR [ebx-0x2c]
  411646:	pushf  
  411647:	pusha  
  411648:	idiv   BYTE PTR [ecx]
  41164a:	pop    esp
  41164b:	lods   eax,DWORD PTR ds:[esi]
  41164c:	pop    es
  41164d:	retf   
  41164e:	adc    ecx,esp
  411650:	(bad)  
  411652:	xchg   esp,eax
  411653:	das    
  411654:	mov    edx,0x1fe33457
  411659:	stos   DWORD PTR es:[edi],eax
  41165a:	jmp    0x8b0f9220
  41165f:	inc    eax
  411660:	sbb    ecx,eax
  411662:	or     bh,BYTE PTR [ebx-0x77398246]
  411668:	out    0xc9,eax
  41166a:	xchg   ecx,eax
  41166b:	ins    BYTE PTR es:[edi],dx
  41166c:	or     eax,0x6de8b8b7
  411671:	ins    BYTE PTR es:[edi],dx
  411672:	mov    ebx,0xd74b6bea
  411677:	pop    edx
  411678:	mov    al,0xd3
  41167a:	cli    
  41167b:	add    BYTE PTR [edx-0x56],bl
  41167e:	adc    esp,DWORD PTR [edx+0x51ccb949]
  411684:	jbe    0x411705
  411686:	(bad)
  411689:	cli    
  41168a:	stc    
  41168b:	nop
  41168c:	fld    TBYTE PTR [ecx+0x348a8f56]
  411692:	mov    al,0x22
  411694:	lods   al,BYTE PTR ds:[esi]
  411695:	mov    DWORD PTR [edx-0x1e],esi
  411698:	add    eax,ecx
  41169a:	not    BYTE PTR [eax+ebx*1-0x18af971a]
  4116a1:	pop    ebp
  4116a2:	sbb    DWORD PTR [edx+0x45],ebx
  4116a5:	sub    dl,bh
  4116a7:	pop    edx
  4116a8:	fdiv   DWORD PTR [ecx-0x6ebfaa34]
  4116ae:	pop    ds
  4116af:	jbe    0x411704
  4116b1:	push   eax
  4116b2:	fucom  st(5)
  4116b4:	xchg   ebx,eax
  4116b5:	int3   
  4116b6:	mov    ds,WORD PTR [esi+eiz*1]
  4116b9:	inc    esp
  4116ba:	cmp    DWORD PTR [edi],ebp
  4116bc:	(bad)  
  4116bf:	lods   eax,DWORD PTR ds:[esi]
  4116c0:	sbb    BYTE PTR [ecx],cl
  4116c2:	cmp    dh,bh
  4116c4:	sar    DWORD PTR [eax+0x410eb62b],0x90
  4116cb:	call   0x4edb:0xcb8728cb
  4116d2:	retf   
  4116d3:	inc    edx
  4116d4:	jns    0x411683
  4116d6:	mov    dh,0x36
  4116d8:	sbb    esi,DWORD PTR [ecx+0x17]
  4116db:	dec    edi
  4116dc:	lods   eax,DWORD PTR ds:[esi]
  4116dd:	in     al,dx
  4116de:	out    dx,eax
  4116df:	push   eax
  4116e0:	push   ss
  4116e1:	sub    al,0x19
  4116e3:	push   ss
  4116e4:	sahf   
  4116e5:	xor    al,0x36
  4116e7:	sbb    BYTE PTR ds:0xd293f53c,cl
  4116ed:	jno    0x4116b9
  4116ef:	cwde   
  4116f0:	sbb    al,0x4e
  4116f2:	pop    es
  4116f3:	jb     0x41170b
  4116f5:	mov    ?,WORD PTR [edx+esi*4-0x5151ad77]
  4116fc:	(bad)  
  4116fd:	mov    WORD PTR [edx],?
  4116ff:	leave  
  411700:	stos   DWORD PTR es:[edi],eax
  411701:	test   DWORD PTR [esi],ebp
  411703:	mov    edx,0x44e83861
  411708:	pop    ebp
  411709:	jno    0x41168f
  41170b:	test   BYTE PTR [ebp+0x7c2a2f39],bh
  411711:	sbb    eax,esi
  411713:	push   edx
  411714:	je     0x411776
  411716:	push   edx
  411717:	frstor [esi-0x18e34f6e]
  41171d:	adc    dl,BYTE PTR [edi-0x1d750f1]
  411723:	ldmxcsr DWORD PTR [ebp-0x534d90bf]
  41172a:	movd   mm6,DWORD PTR ss:[ecx]
  41172e:	(bad)  
  411730:	xchg   esp,eax
  411731:	(bad)  
  411733:	ss or  ebx,edx
  411736:	xor    DWORD PTR [edi-0x1],0xffffff99
  41173a:	xchg   edx,eax
  41173b:	push   cs
  41173c:	in     eax,dx
  41173d:	loope  0x411732
  41173f:	in     eax,0xa3
  411741:	retf   0xa4a3
  411744:	test   DWORD PTR [ebx+0x23],edx
  411747:	sti    
  411748:	inc    ecx
  411749:	xor    DWORD PTR [ebp+0x1b],esp
  41174c:	nop
  41174d:	cs jmp 0x38b9:0xfbc68b07
  411755:	mov    ebp,edi
  411757:	popf   
  411758:	mov    bl,0x70
  41175a:	test   eax,0xf9ee13c
  41175f:	sahf   
  411760:	out    dx,eax
  411761:	(bad)  
  411763:	loope  0x411757
  411765:	outs   dx,DWORD PTR ds:[esi]
  411766:	hlt    
  411767:	popf   
  411768:	and    eax,0x9d66d6dd
  41176d:	icebp  
  41176e:	fisub  DWORD PTR [edx]
  411770:	push   es
  411771:	arpl   WORD PTR [eax+eiz*1+0x70a0be42],bx
  411778:	loop   0x41172e
  41177a:	or     BYTE PTR [esi-0x31ab368a],0x46
  411781:	outs   dx,DWORD PTR ds:[esi]
  411782:	xor    edi,DWORD PTR [ebx+0x505eaab2]
  411788:	mov    bl,0xb6
  41178a:	xchg   edx,eax
  41178b:	jmp    0x411767
  41178d:	js     0x41170f
  41178f:	jecxz  0x4117cf
  411791:	cmp    DWORD PTR [ebp+0x58],ebx
  411794:	inc    esi
  411795:	xor    DWORD PTR [ecx+ebp*1],esi
  411798:	lahf   
  411799:	xor    cl,BYTE PTR [edi+eiz*4+0x14]
  41179d:	mov    eax,ds:0x443e201a
  4117a2:	leave  
  4117a3:	ds push es
  4117a5:	fadd   QWORD PTR [edi+0x5051802e]
  4117ab:	je     0x4117eb
  4117ad:	add    DWORD PTR [eax],0xb4614efd
  4117b3:	pop    sp
  4117b5:	shl    eax,1
  4117b7:	or     eax,0x14d48322
  4117bc:	out    0x36,al
  4117be:	or     al,0x4e
  4117c0:	dec    edi
  4117c1:	mov    cl,0x44
  4117c3:	retf   
  4117c4:	ud1    ebx,eax
  4117c7:	mov    esi,0x10fd8c67
  4117cc:	repz pop edi
  4117ce:	push   es
  4117cf:	fs call 0x238e67c9
  4117d5:	pop    ss
  4117d6:	mov    dh,0xb6
  4117d8:	push   ebp
  4117d9:	jle    0x41179b
  4117db:	mov    cl,0x5d
  4117dd:	add    eax,0x41c73f63
  4117e2:	xchg   BYTE PTR [ebp-0x2a],ch
  4117e5:	adc    ecx,DWORD PTR ds:0x8720561
  4117eb:	dec    esi
  4117ec:	mov    edi,esp
  4117ee:	cmp    esp,DWORD PTR [esi+ebp*4+0x4393399f]
  4117f5:	into   
  4117f6:	out    dx,eax
  4117f7:	add    eax,0xa6b236bd
  4117fc:	push   es
  4117fd:	js     0x411864
  4117ff:	push   edi
  411800:	add    BYTE PTR [ebp+0x788e1c7a],dh
  411806:	adc    al,0x82
  411808:	popf   
  411809:	cmp    al,0x88
  41180b:	inc    ecx
  41180c:	add    BYTE PTR [esi+0x79],bh
  41180f:	rcl    BYTE PTR [esi-0x27],cl
  411812:	fsubr  DWORD PTR [ecx]
  411814:	stc    
  411815:	xor    BYTE PTR es:[ebp-0x37],bl
  411819:	jo     0x411879
  41181b:	mov    al,ds:0x3dc4a22d
  411820:	sahf   
  411821:	les    ecx,FWORD PTR [edx]
  411823:	imul   eax,DWORD PTR ds:0xec228749,0xffffffae
  41182a:	jmp    DWORD PTR [ebx]
  41182c:	dec    esp
  41182d:	add    edx,ebx
  41182f:	xchg   esi,eax
  411830:	sbb    dh,dl
  411832:	pop    ebx
  411833:	add    BYTE PTR [edx],cl
  411835:	sub    al,0x7e
  411837:	inc    ecx
  411838:	int3   
  411839:	jl     0x411828
  41183b:	leave  
  41183c:	test   BYTE PTR [eax+eax*2+0x4042207b],cl
  411843:	sbb    BYTE PTR [esi+0x53],cl
  411846:	cld    
  411847:	pop    edx
  411848:	std    
  411849:	cs out 0x35,al
  41184c:	and    dl,BYTE PTR [ebx+0x41]
  41184f:	mov    dl,0xe1
  411851:	mov    dh,0x93
  411854:	das    
  411855:	fwait
  411856:	and    eax,ecx
  411858:	scas   eax,DWORD PTR es:[edi]
  411859:	int    0x2b
  41185b:	sbb    dl,BYTE PTR [eax+0x19]
  41185e:	jp     0x4117ec
  411860:	call   0xc99d:0xf094df94
  411867:	mov    ds:0x7e0b7166,al
  41186c:	mov    ?,WORD PTR [esi+0x3e]
  41186f:	hlt    
  411870:	mov    bh,0x6d
  411872:	mov    bh,0xb5
  411874:	inc    edi
  411875:	retf   0xc821
  411878:	stc    
  411879:	loopne 0x4118ca
  41187b:	sbb    BYTE PTR [edx+eiz*2-0x45],bh
  41187f:	jge    0x4118d2
  411881:	mov    esi,0x97302e6c
  411886:	and    esi,DWORD PTR [edi+0xa]
  411889:	cmp    DWORD PTR [ebx-0x6f4179fb],0xffffffcf
  411890:	mov    bh,BYTE PTR [ecx+0x566f3959]
  411896:	aas    
  411897:	std    
  411898:	adc    dh,cl
  41189a:	inc    ebp
  41189b:	das    
  41189c:	mov    bl,0x4c
  41189e:	mov    esp,0x3af6dac3
  4118a3:	icebp  
  4118a4:	jecxz  0x41188a
  4118a6:	mov    esi,0x73b0a42f
  4118ab:	bound  esi,QWORD PTR [ebx-0x14]
  4118ae:	mov    ebx,0x468631b6
  4118b3:	xor    BYTE PTR [ebp+edx*1+0x1451fa53],bh
  4118ba:	xor    BYTE PTR [ebp-0x1964bd44],0x72
  4118c1:	ja     0x4118f3
  4118c3:	inc    ebx
  4118c4:	dec    edx
  4118c5:	xchg   esp,eax
  4118c6:	jmp    0x61fa2274
  4118cb:	je     0x41186e
  4118cd:	mov    ds,edi
  4118cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118d0:	fbld   TBYTE PTR [edi+eax*1]
  4118d3:	out    0x11,al
  4118d5:	arpl   WORD PTR [ecx+0x769ad0ce],cx
  4118db:	sub    edx,0xffffff89
  4118de:	das    
  4118df:	dec    ebp
  4118e0:	jge    0x411911
  4118e2:	sahf   
  4118e3:	inc    edx
  4118e4:	mov    DWORD PTR ds:0x4193940e,eax
  4118ea:	retf   0x6c54
  4118ed:	(bad)  [ebp-0x3095da30]
  4118f3:	inc    ebx
  4118f4:	in     al,0xe4
  4118f6:	outs   dx,DWORD PTR ds:[esi]
  4118f7:	repnz adc al,0x79
  4118fa:	cs pop esi
  4118fc:	mov    WORD PTR [edi+0x6d],cs
  4118ff:	arpl   WORD PTR [edi+eax*1-0xbba1d2b],si
  411906:	pop    ecx
  411907:	jle    0x4118a9
  411909:	jge    0x41192b
  41190b:	test   eax,0x29658667
  411910:	mov    ch,ch
  411912:	fs inc esp
  411914:	push   edx
  411915:	mov    eax,DWORD PTR [edi-0x480a84bd]
  41191b:	enter  0x8cee,0x99
  41191f:	push   ecx
  411920:	shl    DWORD PTR [ecx-0x6646e37e],1
  411926:	ror    DWORD PTR [edi],cl
  411928:	push   cs
  411929:	jae    0x4118ae
  41192b:	or     edi,DWORD PTR [esi-0x1646c03]
  411931:	sahf   
  411932:	mov    ebp,0x92956803
  411937:	bound  esi,QWORD PTR [ebx-0x61]
  41193a:	mov    al,ds:0xa8594939
  41193f:	jns    0x411992
  411941:	push   ebx
  411942:	fld    DWORD PTR [edx-0x75b76e4]
  411948:	hlt    
  411949:	jnp    0x41192b
  41194b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41194c:	nop
  41194d:	test   DWORD PTR [eax-0x4fbba918],0x33132e2a
  411957:	dec    edx
  411958:	mov    cl,0x91
  41195a:	rcr    BYTE PTR ds:[edi-0x663ad00a],cl
  411961:	cmp    DWORD PTR [edi+eax*1],0x1d
  411965:	xchg   edx,eax
  411966:	jmp    0xae95:0x57f2d965
  41196d:	mov    dh,0x4c
  41196f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411970:	idiv   BYTE PTR [edx+0x0]
  411973:	call   0xc9678884
  411978:	dec    edi
  411979:	mov    ebx,0x45da539f
  41197e:	mov    eax,ds:0x96b2e8f1
  411983:	data16 loopne 0x41196a
  411986:	leave  
  411987:	or     esi,0x7d
  41198a:	or     DWORD PTR [edx+0x25fd67f8],0x5d
  411991:	retf   0x2aa2
  411994:	mov    bl,0xd6
  411996:	pop    edx
  411997:	adc    ah,BYTE PTR [esi+0x70]
  41199a:	cmp    DWORD PTR [ebp-0x216a715f],edi
  4119a0:	pop    ss
  4119a1:	dec    esi
  4119a2:	ds popa 
  4119a4:	pop    ecx
  4119a5:	ss aas 
  4119a7:	cmp    dl,BYTE PTR [edi+esi*2+0x3e]
  4119ab:	mov    edi,0x54482063
  4119b0:	imul   eax,DWORD PTR [ecx-0x37],0xfffffffb
  4119b4:	lock lds ebx,FWORD PTR [edx+0x1351f9fb]
  4119bb:	push   cs
  4119bc:	mov    BYTE PTR [ecx+0x60],ah
  4119bf:	aaa    
  4119c0:	call   0x7e36:0x562bf38c
  4119c7:	mov    bh,BYTE PTR [esi]
  4119c9:	(bad)  
  4119ca:	hlt    
  4119cb:	mov    bl,0x86
  4119cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119ce:	xor    BYTE PTR gs:0x463e2014,cl
  4119d5:	dec    edx
  4119d6:	sub    cl,BYTE PTR [eax-0x7]
  4119d9:	and    BYTE PTR [edx-0x32],cl
  4119dc:	mov    dl,0x29
  4119de:	ins    BYTE PTR es:[edi],dx
  4119df:	mov    bl,0xc7
  4119e1:	sub    eax,0x764ec85
  4119e6:	push   0xe
  4119e8:	add    ecx,DWORD PTR [edx+0x11]
  4119eb:	rcr    DWORD PTR [esi-0x69],1
  4119ee:	add    al,0xe5
  4119f0:	or     ch,BYTE PTR [esp+esi*4]
  4119f3:	xchg   DWORD PTR [bx+di],ebx
  4119f6:	test   al,0xdf
  4119f8:	inc    edi
  4119f9:	fs inc edx
  4119fb:	out    dx,al
  4119fc:	jge    0x411a60
  4119fe:	mov    ds:0x91d381fe,al
  411a03:	mov    cl,0xb5
  411a05:	mov    eax,ds:0x8e39f142
  411a0a:	push   es
  411a0b:	inc    ebx
  411a0c:	pop    ebx
  411a0d:	xor    al,0x4b
  411a0f:	or     cl,BYTE PTR [ecx]
  411a11:	popa   
  411a12:	dec    eax
  411a13:	cmc    
  411a14:	push   edi
  411a15:	call   0x36ad58c8
  411a1a:	jl     0x4119c3
  411a1c:	push   ebp
  411a1d:	outs   dx,DWORD PTR ds:[esi]
  411a1e:	dec    ecx
  411a1f:	pop    esp
  411a20:	xor    ebp,DWORD PTR [esi+esi*4-0x41]
  411a24:	xor    eax,0xb65f91b0
  411a29:	bound  edx,QWORD PTR [ecx+0x49]
  411a2c:	mov    cl,0xda
  411a2e:	mov    eax,0xf05fd5ef
  411a33:	adc    edi,DWORD PTR [edx]
  411a35:	nop
  411a36:	sahf   
  411a37:	adc    DWORD PTR [ebx-0x6490248f],esp
  411a3d:	inc    DWORD PTR [ecx+0xa]
  411a40:	fwait
  411a41:	or     ecx,DWORD PTR [edx+0x414e2b60]
  411a47:	xchg   esp,eax
  411a48:	sbb    eax,0xd6ce6ae2
  411a4d:	ret    0xbe26
  411a50:	pop    ds
  411a51:	sub    ch,ah
  411a53:	pop    ebx
  411a54:	sar    esp,cl
  411a56:	lock aas 
  411a58:	cmp    bh,al
  411a5a:	jp     0x411a37
  411a5c:	sbb    al,0xb6
  411a5e:	(bad)  
  411a5f:	hlt    
  411a60:	mov    ebx,0xaabcd67
  411a65:	mov    ecx,DWORD PTR ds:0x3ca7ada6
  411a6b:	(bad)  
  411a6c:	cmp    dl,ch
  411a6e:	in     al,0x4d
  411a70:	bnd jb 0x411a2e
  411a73:	adc    dl,ch
  411a75:	mov    al,0x17
  411a77:	pop    ebx
  411a78:	fbld   TBYTE PTR [ebp-0x11]
  411a7b:	mov    BYTE PTR [ecx+0x27],bh
  411a7e:	xor    al,0xd
  411a80:	cmp    edx,DWORD PTR [edi*2+0x73657970]
  411a87:	push   esp
  411a88:	push   0xdb669caa
  411a8d:	lods   al,BYTE PTR ds:[esi]
  411a8e:	imul   ebx,DWORD PTR [edi],0x851d3c3b
  411a94:	fwait
  411a95:	xchg   BYTE PTR [edx+edi*2+0x5230c673],dh
  411a9c:	push   edx
  411a9d:	and    eax,0xa11dcce3
  411aa2:	push   ebp
  411aa3:	out    0x60,eax
  411aa5:	daa    
  411aa6:	push   es
  411aa7:	xchg   esp,eax
  411aa8:	adc    ch,bl
  411aaa:	or     al,0xc4
  411aac:	repnz repnz cmp DWORD PTR [ebp-0x66],eax
  411ab1:	xchg   BYTE PTR [eax+0x7706867a],dh
  411ab7:	(bad)  
  411ab9:	pop    edx
  411aba:	bound  esp,QWORD PTR [eax]
  411abc:	push   esp
  411abd:	rcr    BYTE PTR [ebx],0xf5
  411ac0:	int3   
  411ac1:	and    DWORD PTR [ebp-0x16cddccc],0x32
  411ac8:	jno    0x411b2a
  411aca:	sub    DWORD PTR [ebp-0x743b94b8],esp
  411ad0:	inc    esp
  411ad1:	dec    ebp
  411ad2:	push   edi
  411ad3:	mov    ecx,0xdafd98ec
  411ad8:	adc    al,0xb8
  411ada:	in     eax,dx
  411adb:	mov    bh,0x5b
  411add:	mov    bh,0xdd
  411adf:	inc    esp
  411ae0:	xchg   esi,eax
  411ae1:	adc    al,0x1c
  411ae3:	not    BYTE PTR [ecx+0x397259a7]
  411ae9:	mov    BYTE PTR [ecx+0x4b6619db],bl
  411aef:	lahf   
  411af0:	and    edx,edx
  411af2:	xchg   ecx,eax
  411af3:	dec    esi
  411af4:	push   esp
  411af5:	cld    
  411af6:	fild   QWORD PTR [esi-0x37104914]
  411afc:	call   0xd476:0x8933f4d4
  411b03:	imul   ebx,DWORD PTR [ebp-0x59],0xff629322
  411b0a:	xchg   esp,eax
  411b0b:	pushf  
  411b0c:	mov    eax,0x709d1398
  411b11:	push   cs
  411b12:	ins    DWORD PTR es:[edi],dx
  411b13:	inc    edx
  411b14:	repz xchg edx,eax
  411b16:	add    edx,DWORD PTR [edi-0x373b4f6d]
  411b1c:	int    0xb
  411b1e:	popa   
  411b1f:	push   esp
  411b20:	js     0x411b4f
  411b22:	lahf   
  411b23:	aad    0x43
  411b25:	shl    BYTE PTR [ebx+0x2c],0xbb
  411b29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b2a:	aad    0xff
  411b2c:	mov    eax,0xb13c4ffc
  411b31:	fdivr  st,st(1)
  411b33:	outs   dx,DWORD PTR ds:[esi]
  411b34:	ss pop esi
  411b36:	out    dx,eax
  411b37:	pop    esi
  411b38:	addr16 jp 0x411b1f
  411b3b:	mov    ah,0x1d
  411b3d:	or     cl,BYTE PTR [ebx+0x41]
  411b40:	pop    edx
  411b41:	jnp    0x411b9a
  411b43:	rol    DWORD PTR [ebx],0xd8
  411b46:	adc    dl,bl
  411b48:	add    DWORD PTR [eax+0x4b],esi
  411b4b:	xor    eax,0x7692edee
  411b50:	inc    eax
  411b51:	xor    eax,0x99ce81a1
  411b56:	sub    esp,DWORD PTR [ebx-0x75]
  411b59:	sysret 
  411b5b:	push   edx
  411b5c:	lods   eax,DWORD PTR ds:[esi]
  411b5d:	lea    esi,[ecx+0x1b9f5324]
  411b63:	mov    esi,0x308eb44
  411b68:	jmp    0xf8a645d4
  411b6d:	out    dx,eax
  411b6e:	or     bh,al
  411b70:	scas   al,BYTE PTR es:[edi]
  411b71:	adc    dl,BYTE PTR [edi]
  411b73:	ror    dl,0x1c
  411b76:	sbb    eax,0x78958a9e
  411b7b:	cli    
  411b7c:	mov    ds:0x1db6dfc1,eax
  411b81:	push   esi
  411b82:	cmp    al,BYTE PTR [ebx+0x14]
  411b85:	sub    eax,0xf38763ef
  411b8a:	retf   0xc8bf
  411b8d:	je     0x411bca
  411b8f:	inc    dx
  411b91:	(bad)  
  411b92:	jp     0x411bc6
  411b94:	scas   eax,DWORD PTR es:[edi]
  411b95:	shr    BYTE PTR [ebx-0x4c],cl
  411b98:	call   0x89ee5872
  411b9d:	out    dx,al
  411b9e:	dec    ecx
  411b9f:	aas    
  411ba0:	adc    BYTE PTR [eax],al
  411ba2:	arpl   ax,si
  411ba4:	dec    ecx
  411ba5:	push   ss
  411ba6:	mov    dh,0x0
  411ba8:	sub    eax,0xaa56ad42
  411bad:	sti    
  411bae:	std    
  411baf:	pop    edi
  411bb0:	popa   
  411bb1:	inc    edi
  411bb2:	adc    al,0x6b
  411bb4:	call   0x313a8247
  411bb9:	cdq    
  411bba:	pop    ecx
  411bbb:	iret   
  411bbc:	inc    edx
  411bbd:	rcr    ah,0xf0
  411bc0:	bound  ebp,QWORD PTR [eax+0x4a]
  411bc3:	and    al,0xbf
  411bc5:	adc    edi,DWORD PTR [ebx+ecx*1]
  411bc8:	jmp    0x411bf1
  411bca:	pop    ss
  411bcb:	pop    ss
  411bcc:	pop    ds
  411bcd:	les    edx,FWORD PTR [ebx-0x2f]
  411bd0:	xor    eax,0x2237d0a5
  411bd5:	cdq    
  411bd6:	test   BYTE PTR [ebp-0x51bba0b1],0xc1
  411bdd:	sti    
  411bde:	mov    edx,0xff2f7195
  411be3:	call   0x8607:0xa566f06f
  411bea:	add    eax,DWORD PTR [ecx-0x7efde598]
  411bf0:	xor    eax,DWORD PTR [edx+0x68]
  411bf3:	xchg   edx,eax
  411bf4:	in     al,dx
  411bf5:	cmp    esp,ecx
  411bf7:	sub    DWORD PTR [edx-0x42],ebp
  411bfa:	xchg   BYTE PTR [eax-0x7f76b5fe],bl
  411c00:	xor    esi,DWORD PTR [edi]
  411c02:	xor    DWORD PTR [edx+0x4990c590],esp
  411c08:	test   al,0x6d
  411c0a:	xor    DWORD PTR [ebp+0x406260e6],edx
  411c10:	inc    edx
  411c11:	dec    ebp
  411c12:	in     eax,0xff
  411c14:	jle    0x411c47
  411c16:	or     al,0xc1
  411c18:	ss loopne 0x411bd6
  411c1b:	add    eax,0x9fa01f9b
  411c20:	sti    
  411c21:	mov    ecx,0xd2ba905e
  411c26:	hlt    
  411c27:	pop    ds
  411c28:	or     al,0x6c
  411c2a:	push   0xffffffa4
  411c2c:	in     eax,0x7d
  411c2e:	rol    DWORD PTR [ebp-0x1e202679],1
  411c34:	mov    edi,0x801acacf
  411c39:	and    DWORD PTR [esi],ebp
  411c3b:	rcr    BYTE PTR [eax],0x52
  411c3e:	push   es
  411c3f:	sbb    BYTE PTR [eax+0x4f],ah
  411c42:	iret   
  411c43:	pop    ebx
  411c44:	pop    ss
  411c45:	faddp  st(4),st
  411c47:	or     bl,cl
  411c49:	(bad)  
  411c4a:	mov    ss,edx
  411c4c:	push   edi
  411c4d:	call   0x34c26078
  411c52:	sub    dl,BYTE PTR [edi-0x18f2ef8a]
  411c58:	jb     0x411be1
  411c5a:	adc    al,0xf3
  411c5c:	xchg   BYTE PTR [edi],ah
  411c5e:	xor    al,0xf4
  411c60:	xchg   edx,eax
  411c61:	cmp    BYTE PTR [eax+0x7c],0x4
  411c65:	or     eax,0x80a16c66
  411c6a:	or     al,0xaf
  411c6c:	mov    ah,0x1f
  411c6e:	add    al,0x8e
  411c70:	popf   
  411c71:	mov    bl,0x88
  411c73:	mov    ch,cl
  411c75:	jno    0x411c8d
  411c77:	add    al,0x92
  411c79:	mov    WORD PTR [esi-0x46],?
  411c7c:	adc    al,0x94
  411c7e:	cmc    
  411c7f:	jecxz  0x411c35
  411c81:	rol    ebx,1
  411c83:	test   eax,0xcec65540
  411c88:	int3   
  411c89:	fsub   DWORD PTR [edi+0x51]
  411c8c:	mov    WORD PTR [eax+0x3f591369],fs
  411c92:	in     al,dx
  411c93:	fistp  QWORD PTR [eax-0x4c7538ce]
  411c99:	inc    edi
  411c9a:	mov    dl,0x89
  411c9c:	cmp    eax,0x83223706
  411ca1:	mov    es,WORD PTR [edx+0x542ec41]
  411ca7:	aam    0x56
  411ca9:	xchg   ecx,eax
  411caa:	jmp    0x411c5a
  411cac:	mov    ecx,0x847a2e91
  411cb1:	inc    eax
  411cb2:	xor    eax,0x55193664
  411cb7:	push   ecx
  411cb8:	xor    dh,BYTE PTR [ebp-0x3]
  411cbb:	and    al,0xea
  411cbd:	popa   
  411cbe:	push   ss
  411cbf:	inc    esi
  411cc0:	adc    esp,DWORD PTR [edi-0x2d]
  411cc3:	jo     0x411cf2
  411cc5:	in     al,0x4a
  411cc7:	pop    ss
  411cc8:	jg     0x411cec
  411cca:	cmp    al,0x4
  411ccc:	adc    al,0x39
  411cce:	xor    ch,cl
  411cd0:	and    BYTE PTR ds:0x2c070523,bl
  411cd6:	cmp    al,0x3d
  411cd8:	test   bh,0xbb
  411cdb:	(bad)  
  411cdc:	pop    ds
  411cdd:	jb     0x411c6b
  411cdf:	lods   eax,DWORD PTR ds:[esi]
  411ce0:	sahf   
  411ce1:	shl    edx,cl
  411ce3:	(bad)  
  411ce4:	bound  ebp,QWORD PTR [ecx+0x6c713b9f]
  411cea:	add    DWORD PTR [eax+0x1c],0x5630f24
  411cf1:	call   0xe155:0x7dd5257f
  411cf8:	xchg   ecx,eax
  411cf9:	dec    esi
  411cfa:	aam    0xf
  411cfc:	or     ecx,DWORD PTR [ebx+ebp*4+0x7b574bdc]
  411d03:	mov    BYTE PTR [ebx+0x3d],0x76
  411d07:	and    eax,0x731cb359
  411d0c:	es xor eax,0x4b0f59a8
  411d12:	fbstp  TBYTE PTR [esi+0x7a77e729]
  411d18:	jb     0x411cf0
  411d1a:	sbb    BYTE PTR [esi-0x1b],bl
  411d1d:	sti    
  411d1e:	push   eax
  411d1f:	or     edi,DWORD PTR gs:[esi]
  411d22:	dec    esp
  411d23:	call   DWORD PTR [ecx-0x51]
  411d26:	pushf  
  411d27:	sbb    al,0x23
  411d29:	jns    0x411da0
  411d2b:	or     DWORD PTR [edx+0x1573c6ec],ebp
  411d31:	dec    esi
  411d32:	mov    cl,0xf
  411d34:	ins    DWORD PTR es:[edi],dx
  411d35:	xchg   esi,eax
  411d36:	add    al,0x56
  411d38:	bound  esp,QWORD PTR [esi-0x49]
  411d3b:	lods   al,BYTE PTR ds:[esi]
  411d3c:	dec    BYTE PTR es:[esp+ebp*4-0x4]
  411d41:	fwait
  411d42:	loopne 0x411cdb
  411d44:	pop    edi
  411d45:	adc    DWORD PTR [esi],esi
  411d47:	aad    0x8b
  411d49:	dec    ebp
  411d4a:	fldenv [ecx+0x3ec67f0e]
  411d50:	int3   
  411d51:	dec    ecx
  411d52:	dec    esp
  411d53:	xchg   ebx,eax
  411d54:	aam    0xbd
  411d56:	or     al,0xcd
  411d58:	fcom   QWORD PTR [edx-0x73ade1ae]
  411d5e:	xor    eax,0xbcf0e749
  411d63:	out    0xf6,eax
  411d65:	mov    BYTE PTR [eax+0x33d85927],bl
  411d6b:	jno    0x411d28
  411d6d:	lods   eax,DWORD PTR ds:[esi]
  411d6e:	fsub   DWORD PTR [edi-0x553e914a]
  411d74:	inc    edi
  411d75:	jno    0x411db1
  411d77:	js     0x411d00
  411d79:	inc    eax
  411d7a:	sahf   
  411d7b:	ret    
  411d7c:	add    ecx,ecx
  411d7e:	or     DWORD PTR [esi+0x0],ebp
  411d81:	sbb    ebx,DWORD PTR [eax+0x70]
  411d84:	xchg   ecx,eax
  411d85:	mov    eax,ds:0xacf585d5
  411d8a:	sar    BYTE PTR [esi-0x75f0f26d],cl
  411d90:	(bad)  
  411d91:	mov    eax,ds:0x5558b3ea
  411d96:	adc    dl,dl
  411d98:	adc    eax,0xf59fa3da
  411d9d:	push   ebp
  411d9e:	das    
  411d9f:	inc    ecx
  411da0:	push   0x3b
  411da2:	retf   0x820f
  411da5:	daa    
  411da6:	fdiv   st(7),st
  411da8:	(bad)  
  411da9:	jmp    0x411df3
  411dae:	mov    ecx,DWORD PTR [ebp-0xc]
  411db1:	mov    DWORD PTR [ebp+0x8],ecx
  411db4:	jmp    0x411de6
  411db9:	mov    ecx,DWORD PTR [ebp+0x8]
  411dbc:	mov    edx,DWORD PTR [ebp-0x8]
  411dbf:	xor    ecx,eax
  411dc1:	xor    edx,eax
  411dc3:	sub    ecx,edx
  411dc5:	sub    ecx,esi
  411dc7:	xor    ecx,eax
  411dc9:	mov    DWORD PTR [ebp+0x8],ecx
  411dcc:	mov    ecx,DWORD PTR [ebp+0x8]
  411dcf:	mov    edx,DWORD PTR [ebp+0x8]
  411dd2:	imul   edx,edx,0x5708f2
  411dd8:	xor    ecx,eax
  411dda:	add    ecx,esi
  411ddc:	lea    ecx,[ebp+ecx*4-0x64]
  411de0:	mov    edi,DWORD PTR [ecx]
  411de2:	add    edx,edi
  411de4:	mov    DWORD PTR [ecx],edx
  411de6:	mov    ecx,DWORD PTR [ebp+0x8]
  411de9:	xor    ecx,eax
  411deb:	add    ecx,esi
  411ded:	jne    0x411db9
  411df3:	mov    ecx,DWORD PTR [ebp-0xc]
  411df6:	mov    DWORD PTR [ebp+0x8],ecx
  411df9:	jmp    0x411e2b
  411dfe:	mov    ecx,DWORD PTR [ebp+0x8]
  411e01:	mov    edx,DWORD PTR [ebp-0x8]
  411e04:	xor    ecx,eax
  411e06:	xor    edx,eax
  411e08:	sub    ecx,edx
  411e0a:	sub    ecx,esi
  411e0c:	xor    ecx,eax
  411e0e:	mov    DWORD PTR [ebp+0x8],ecx
  411e11:	mov    ecx,DWORD PTR [ebp+0x8]
  411e14:	mov    edx,DWORD PTR [ebp+0x8]
  411e17:	imul   edx,edx,0x5708f2
  411e1d:	xor    ecx,eax
  411e1f:	add    ecx,esi
  411e21:	lea    ecx,[ebp+ecx*4-0x64]
  411e25:	mov    edi,DWORD PTR [ecx]
  411e27:	add    edx,edi
  411e29:	mov    DWORD PTR [ecx],edx
  411e2b:	mov    ecx,DWORD PTR [ebp+0x8]
  411e2e:	xor    ecx,eax
  411e30:	add    ecx,esi
  411e32:	jne    0x411dfe
  411e38:	mov    ecx,DWORD PTR [ebp-0x8]
  411e3b:	mov    edx,DWORD PTR [ebp-0x20]
  411e3e:	xor    ecx,eax
  411e40:	lea    ecx,[ecx+edx*1+0x3272dd]
  411e47:	mov    DWORD PTR [ebp-0x20],ecx
  411e4a:	inc    DWORD PTR [ebp+0xc]
  411e4d:	mov    ecx,DWORD PTR [ebp-0x1c]
  411e50:	xor    ecx,eax
  411e52:	add    ecx,esi
  411e54:	jne    0x40f7af
  411e5a:	jmp    0x411ee3
  411e5f:	mov    ecx,DWORD PTR [ebp-0xc]
  411e62:	mov    DWORD PTR [ebp+0x8],ecx
  411e65:	jmp    0x411e97
  411e6a:	mov    ecx,DWORD PTR [ebp+0x8]
  411e6d:	mov    edx,DWORD PTR [ebp-0x8]
  411e70:	xor    ecx,eax
  411e72:	xor    edx,eax
  411e74:	sub    ecx,edx
  411e76:	sub    ecx,esi
  411e78:	xor    ecx,eax
  411e7a:	mov    DWORD PTR [ebp+0x8],ecx
  411e7d:	mov    ecx,DWORD PTR [ebp+0x8]
  411e80:	mov    edx,DWORD PTR [ebp+0x8]
  411e83:	imul   edx,edx,0x5708f2
  411e89:	xor    ecx,eax
  411e8b:	add    ecx,esi
  411e8d:	lea    ecx,[ebp+ecx*4-0x64]
  411e91:	mov    edi,DWORD PTR [ecx]
  411e93:	add    edx,edi
  411e95:	mov    DWORD PTR [ecx],edx
  411e97:	mov    ecx,DWORD PTR [ebp+0x8]
  411e9a:	xor    ecx,eax
  411e9c:	add    ecx,esi
  411e9e:	jne    0x411e6a
  411ea4:	jmp    0x411eef
  411ea9:	mov    ecx,DWORD PTR [ebp+0x8]
  411eac:	mov    edx,DWORD PTR [ebp-0x8]
  411eaf:	xor    ecx,eax
  411eb1:	xor    edx,eax
  411eb3:	sub    ecx,edx
  411eb5:	sub    ecx,esi
  411eb7:	xor    ecx,eax
  411eb9:	mov    DWORD PTR [ebp+0x8],ecx
  411ebc:	mov    ecx,DWORD PTR [ebp+0x8]
  411ebf:	mov    edx,DWORD PTR [ebp+0x8]
  411ec2:	xor    ecx,eax
  411ec4:	imul   edx,edx,0x5708f2
  411eca:	add    ecx,esi
  411ecc:	lea    ecx,[ebp+ecx*4-0x64]
  411ed0:	mov    edi,DWORD PTR [ecx]
  411ed2:	add    edx,edi
  411ed4:	mov    DWORD PTR [ecx],edx
  411ed6:	mov    ecx,DWORD PTR [ebp+0x8]
  411ed9:	xor    ecx,eax
  411edb:	add    ecx,esi
  411edd:	jne    0x411ea9
  411ee3:	mov    ecx,DWORD PTR [ebp-0x8]
  411ee6:	xor    ecx,eax
  411ee8:	mov    eax,DWORD PTR [ebp+0x10]
  411eeb:	add    ecx,esi
  411eed:	mov    DWORD PTR [eax],ecx
  411eef:	pop    edi
  411ef0:	pop    esi
  411ef1:	pop    ebx
  411ef2:	leave  
  411ef3:	ret    0xc
	...
  411f02:	add    BYTE PTR [eax],al
  411f04:	pop    esi
  411f05:	mov    eax,0x4dd0
  411f0a:	add    BYTE PTR [eax],al
  411f0c:	xor    bl,BYTE PTR [edi]
  411f0e:	add    DWORD PTR [eax],eax
  411f10:	add    DWORD PTR [eax],eax
  411f12:	add    BYTE PTR [eax],al
  411f14:	add    DWORD PTR [eax],eax
  411f16:	add    BYTE PTR [eax],al
  411f18:	add    DWORD PTR [eax],eax
  411f1a:	add    BYTE PTR [eax],al
  411f1c:	sub    BYTE PTR [edi],bl
  411f1e:	add    DWORD PTR [eax],eax
  411f20:	sub    al,0x1f
  411f22:	add    DWORD PTR [eax],eax
  411f24:	xor    BYTE PTR [edi],bl
  411f26:	add    DWORD PTR [eax],eax
  411f28:	test   eax,0x3e000029
  411f2d:	pop    ds
  411f2e:	add    DWORD PTR [eax],eax
  411f30:	add    BYTE PTR [eax],al
  411f32:	push   ebx
  411f33:	jns    0x411fa2
  411f35:	bound  ebp,QWORD PTR [edi+0x6c]
  411f38:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  411f3f:	inc    ebx
  411f40:	ins    BYTE PTR es:[edi],dx
  411f41:	outs   dx,DWORD PTR ds:[esi]
  411f42:	jae    0x411fa9
  411f44:	push   edi
  411f45:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  411f4c:	popa   
  411f4d:	je     0x411fb8
  411f4f:	outs   dx,DWORD PTR ds:[esi]
  411f50:	outs   dx,BYTE PTR ds:[esi]
  411f51:	inc    ebx
  411f52:	ins    BYTE PTR es:[edi],dx
  411f53:	outs   dx,DWORD PTR ds:[esi]
  411f54:	jae    0x411fbb
  411f56:	push   edi
  411f57:	imul   eax,DWORD PTR [eax],0x40042a0
  411f5d:	mov    al,ds:0xa0080042
  411f62:	inc    edx
  411f63:	add    BYTE PTR [eax+eiz*4],cl
  411f66:	inc    edx
  411f67:	add    BYTE PTR [eax],dl
  411f69:	mov    al,ds:0xa0140042
  411f6e:	inc    edx
  411f6f:	add    BYTE PTR [eax],bl
  411f71:	mov    al,ds:0xa01c0042
  411f76:	inc    edx
  411f77:	add    BYTE PTR [eax],al
  411f79:	rol    BYTE PTR [edx+0x0],1
  411f7c:	add    al,0xd0
  411f7e:	inc    edx
  411f7f:	add    BYTE PTR [eax],cl
  411f81:	rol    BYTE PTR [edx+0x0],1
  411f84:	or     al,0xd0
  411f86:	inc    edx
  411f87:	add    BYTE PTR [eax],dl
  411f89:	rol    BYTE PTR [edx+0x0],1
  411f8c:	adc    al,0xd0
  411f8e:	inc    edx
  411f8f:	add    BYTE PTR [eax],bl
  411f91:	rol    BYTE PTR [edx+0x0],1
  411f94:	sbb    al,0xd0
  411f96:	inc    edx
	...
  411fa3:	add    BYTE PTR [esi-0x48],bl
  411fa6:	ror    BYTE PTR [ebp+0x0],1
  411fa9:	add    BYTE PTR [eax],al
  411fab:	add    BYTE PTR [edx],al
  411fad:	add    BYTE PTR [eax],al
  411faf:	add    BYTE PTR ds:0x30000000,bh
  411fb5:	and    BYTE PTR [ecx],al
  411fb7:	add    BYTE PTR [eax],dh
  411fb9:	adc    al,0x1
  411fbb:	add    BYTE PTR [eax],al
  411fbd:	nop
  411fbe:	inc    edx
  411fbf:	add    BYTE PTR [eax+edx*4],al
  411fc2:	inc    edx
  411fc3:	add    BYTE PTR [eax],cl
  411fc5:	nop
  411fc6:	inc    edx
  411fc7:	add    BYTE PTR [eax+edx*4],cl
  411fca:	inc    edx
  411fcb:	add    BYTE PTR [eax],dl
  411fcd:	nop
  411fce:	inc    edx
  411fcf:	add    BYTE PTR [eax+edx*4],dl
  411fd2:	inc    edx
  411fd3:	add    BYTE PTR [eax],bl
  411fd5:	nop
  411fd6:	inc    edx
  411fd7:	add    BYTE PTR [eax+edx*4],bl
  411fda:	inc    edx
  411fdb:	add    BYTE PTR [eax],ah
  411fdd:	nop
  411fde:	inc    edx
  411fdf:	add    BYTE PTR [eax+edx*4],ah
  411fe2:	inc    edx
  411fe3:	add    BYTE PTR [eax],ch
  411fe5:	nop
  411fe6:	inc    edx
  411fe7:	add    BYTE PTR [eax],al
  411fe9:	mov    al,0x42
  411feb:	add    BYTE PTR [eax+esi*4],al
  411fee:	inc    edx
  411fef:	add    BYTE PTR [eax],cl
  411ff1:	mov    al,0x42
  411ff3:	add    BYTE PTR [eax+esi*4],cl
  411ff6:	inc    edx
  411ff7:	add    BYTE PTR [eax],dl
  411ff9:	mov    al,0x42
  411ffb:	add    BYTE PTR [eax+esi*4],dl
  411ffe:	inc    edx
  411fff:	add    BYTE PTR [eax],bl
  412001:	mov    al,0x42
  412003:	add    BYTE PTR [eax+esi*4],bl
  412006:	inc    edx
  412007:	add    BYTE PTR [eax],al
  412009:	rol    BYTE PTR [edx+0x0],0x4
  41200d:	rol    BYTE PTR [edx+0x0],0x8
  412011:	rol    BYTE PTR [edx+0x0],0xc
  412015:	rol    BYTE PTR [edx+0x0],0x10
  412019:	rol    BYTE PTR [edx+0x0],0x14
  41201d:	rol    BYTE PTR [edx+0x0],0x18
  412021:	rol    BYTE PTR [edx+0x0],0x1c
  412025:	rol    BYTE PTR [edx+0x0],0x0
  412029:	add    BYTE PTR [eax],al
  41202b:	add    BYTE PTR [eax],al
  41202d:	add    BYTE PTR [eax],al
  41202f:	add    BYTE PTR [edx+0x53],dl
  412032:	inc    esp
  412033:	push   ebx
  412034:	mov    ds:0x5a2a7228,al
  412039:	mov    bh,0xc6
  41203b:	inc    ebx
  41203c:	mov    al,0xe2
  41203e:	fsub   DWORD PTR [eax+0x31]
  412041:	push   cs
  412042:	dec    ebx
  412043:	rol    DWORD PTR [ecx],0x0
  412046:	add    BYTE PTR [eax],al
  412048:	inc    ebx
  412049:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  41204d:	jb     0x4120c1
  41204f:	outs   dx,BYTE PTR gs:[esi]
  412051:	je     0x412097
  412053:	popa   
  412054:	je     0x4120b7
  412056:	pop    esp
  412057:	dec    ebp
  412058:	outs   dx,DWORD PTR ds:[esi]
  412059:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  412061:	ins    BYTE PTR es:[edi],dx
  412062:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  412069:	dec    esi
  41206a:	gs ja  0x41206d
  41206d:	mov    edx,DWORD PTR [ebp-0x14]
  412070:	sub    esp,0xe4
  412076:	push   ebx
  412077:	mov    eax,ebx
  412079:	xchg   ecx,eax
  41207a:	mov    eax,DWORD PTR [ebp+0x8]
  41207d:	cmp    eax,0xf89c85b5
  412082:	jne    0x412416
  412088:	mov    eax,DWORD PTR [ebp+0xc]
  41208b:	cmp    eax,0xf89c85b2
  412090:	jne    0x412416
  412096:	mov    eax,DWORD PTR [ebp+0x24]
  412099:	mov    DWORD PTR [ebp-0x4],eax
  41209c:	mov    BYTE PTR [ebp-0x18],0x3
  4120a0:	mov    BYTE PTR [ebp-0x17],0x1e
  4120a4:	mov    BYTE PTR [ebp-0x16],0x5
  4120a8:	mov    BYTE PTR [ebp-0x15],0x4f
  4120ac:	mov    BYTE PTR [ebp-0x14],0x4c
  4120b0:	mov    BYTE PTR [ebp-0x13],0x7a
  4120b4:	mov    BYTE PTR [ebp-0x20],0xf1
  4120b8:	mov    BYTE PTR [ebp-0x1f],0xf
  4120bc:	mov    BYTE PTR [ebp-0x1e],0x1
  4120c0:	mov    BYTE PTR [ebp-0x1d],0xc
  4120c4:	mov    BYTE PTR [ebp-0x1c],0x4f
  4120c8:	mov    BYTE PTR [ebp-0x1b],0x4c
  4120cc:	mov    BYTE PTR [ebp-0x1a],0x7a
  4120d0:	mov    BYTE PTR [ebp-0x28],0xf
  4120d4:	mov    BYTE PTR [ebp-0x27],0x2
  4120d8:	push   esi
  4120d9:	mov    BYTE PTR [ebp-0x26],0x6
  4120dd:	mov    BYTE PTR [ebp-0x25],0xf3
  4120e1:	push   edi
  4120e2:	mov    BYTE PTR [ebp-0x24],0x1d
  4120e6:	mov    BYTE PTR [ebp-0x23],0xa
  4120ea:	push   0x71
  4120ec:	mov    BYTE PTR [ebp-0x22],0x5
  4120f0:	xor    edi,edi
  4120f2:	mov    BYTE PTR [ebp-0x21],0x7a
  4120f6:	xor    esi,esi
  4120f8:	pop    edx
  4120f9:	mov    eax,0xf5
  4120fe:	lea    ecx,[ebp+esi*1-0x18]
  412102:	movzx  ebx,BYTE PTR [ecx]
  412105:	xor    ebx,edx
  412107:	add    ebx,eax
  412109:	inc    esi
  41210a:	mov    BYTE PTR [ecx],bl
  41210c:	cmp    esi,0x6
  41210f:	jb     0x4120fe
  412111:	xor    esi,esi
  412113:	lea    ecx,[ebp+esi*1-0x20]
  412117:	movzx  ebx,BYTE PTR [ecx]
  41211a:	xor    ebx,edx
  41211c:	add    ebx,eax
  41211e:	inc    esi
  41211f:	mov    BYTE PTR [ecx],bl
  412121:	cmp    esi,0x7
  412124:	jb     0x412113
  412126:	xor    esi,esi
  412128:	lea    ecx,[ebp+esi*1-0x28]
  41212c:	movzx  ebx,BYTE PTR [ecx]
  41212f:	xor    ebx,edx
  412131:	add    ebx,eax
  412133:	push   0x8
  412135:	mov    BYTE PTR [ecx],bl
  412137:	inc    esi
  412138:	pop    ecx
  412139:	cmp    esi,ecx
  41213b:	jb     0x412128
  41213d:	lea    eax,[ebp-0x2c]
  412140:	mov    DWORD PTR [ebp-0x8],eax
  412143:	mov    esi,DWORD PTR [ebp-0x8]
  412146:	mov    eax,0x7113fcef
  41214b:	mov    DWORD PTR [esi],eax
  41214d:	mov    esi,DWORD PTR [ebp-0x2c]
  412150:	cmp    esi,eax
  412152:	jne    0x412162
  412154:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41215b:	mov    DWORD PTR [ebp-0x8],0xf89c85e0
  412162:	mov    eax,DWORD PTR [ebp-0x4]
  412165:	mov    eax,DWORD PTR [eax+0x18c]
  41216b:	cmp    DWORD PTR [eax],edi
  41216d:	jne    0x4123bf
  412173:	mov    eax,DWORD PTR [ebp-0x4]
  412176:	mov    eax,DWORD PTR [eax+0x17c]
  41217c:	mov    DWORD PTR [eax],edi
  41217e:	mov    eax,DWORD PTR [ebp-0x4]
  412181:	mov    eax,DWORD PTR [eax+0x180]
  412187:	mov    DWORD PTR [eax],edi
  412189:	mov    edi,0x4e3d
  41218e:	mov    eax,0x4f8e
  412193:	mov    WORD PTR [ebp-0x78],ax
  412197:	mov    eax,edi
  412199:	mov    WORD PTR [ebp-0x76],ax
  41219d:	add    eax,0x41
  4121a0:	mov    WORD PTR [ebp-0x74],ax
  4121a4:	lea    eax,[edi+0x1]
  4121a7:	mov    WORD PTR [ebp-0x72],ax
  4121ab:	mov    eax,0x4fad
  4121b0:	mov    WORD PTR [ebp-0x70],ax
  4121b4:	lea    eax,[edi-0xc]
  4121b7:	mov    WORD PTR [ebp-0x6e],ax
  4121bb:	add    eax,0x4b
  4121be:	mov    WORD PTR [ebp-0x6c],ax
  4121c2:	lea    eax,[edi-0xa]
  4121c5:	mov    WORD PTR [ebp-0x6a],ax
  4121c9:	mov    eax,edi
  4121cb:	mov    WORD PTR [ebp-0x68],ax
  4121cf:	add    eax,0xfffffff5
  4121d2:	mov    WORD PTR [ebp-0x66],ax
  4121d6:	mov    eax,0x99fe
  4121db:	mov    WORD PTR [ebp-0x64],ax
  4121df:	mov    eax,0x8281
  4121e4:	mov    WORD PTR [ebp-0x62],ax
  4121e8:	mov    eax,0xd78c
  4121ed:	mov    WORD PTR [ebp-0x60],ax
  4121f1:	add    eax,0x14
  4121f4:	mov    WORD PTR [ebp-0x5e],ax
  4121f8:	mov    eax,0x27a3
  4121fd:	mov    WORD PTR [ebp-0x5c],ax
  412201:	mov    eax,0x47a3
  412206:	mov    WORD PTR [ebp-0x5a],ax
  41220a:	lea    eax,[edi-0xd]
  41220d:	mov    WORD PTR [ebp-0x58],ax
  412211:	mov    DWORD PTR [ebp-0x10],0xf306020f
  412218:	mov    DWORD PTR [ebp-0xc],0x7a050a1d
  41221f:	lea    eax,[ebp-0x10]
  412222:	mov    bl,BYTE PTR [eax]
  412224:	xor    bl,dl
  412226:	sub    bl,0xb
  412229:	mov    BYTE PTR [eax],bl
  41222b:	inc    eax
  41222c:	dec    ecx
  41222d:	jne    0x412222
  41222f:	lea    eax,[ebp-0x10]
  412232:	mov    DWORD PTR [ebp-0xb8],eax
  412238:	lea    eax,[ebp-0xbc]
  41223e:	push   eax
  41223f:	mov    eax,DWORD PTR [ebp+0xc]
  412242:	mov    ebx,0x7510896
  412247:	xor    eax,ebx
  412249:	mov    esi,0x3272dd
  41224e:	add    eax,esi
  412250:	push   eax
  412251:	mov    eax,DWORD PTR [ebp-0x4]
  412254:	add    eax,0x66
  412257:	push   eax
  412258:	mov    eax,DWORD PTR [ebp-0x4]
  41225b:	mov    eax,DWORD PTR [eax+0x198]
  412261:	mov    DWORD PTR [ebp-0xbc],0x1
  41226b:	push   DWORD PTR [eax]
  41226d:	mov    eax,DWORD PTR [ebp+0x10]
  412270:	call   eax
  412272:	mov    ecx,DWORD PTR [ebp+0x8]
  412275:	xor    ecx,ebx
  412277:	add    ecx,esi
  412279:	mov    DWORD PTR [ebp-0x8],eax
  41227c:	cmp    eax,ecx
  41227e:	jne    0x412299
  412280:	mov    eax,ds:0x33730bec
  412285:	or     eax,0x22150bef
  41228a:	mov    ds:0x33730bec,eax
  41228f:	add    eax,0x3372e90f
  412294:	mov    ds:0x33730bec,eax
  412299:	mov    ecx,0x4f85
  41229e:	mov    eax,ecx
  4122a0:	mov    WORD PTR [ebp-0x40],ax
  4122a4:	add    eax,0x3
  4122a7:	mov    edx,eax
  4122a9:	mov    WORD PTR [ebp-0x3e],dx
  4122ad:	lea    edx,[ecx+0xb]
  4122b0:	mov    WORD PTR [ebp-0x3c],dx
  4122b4:	add    edx,0x18
  4122b7:	mov    WORD PTR [ebp-0x3a],dx
  4122bb:	lea    edx,[ecx+0x25]
  4122be:	mov    WORD PTR [ebp-0x38],dx
  4122c2:	add    edx,0x5
  4122c5:	mov    WORD PTR [ebp-0x36],dx
  4122c9:	lea    edx,[ecx+0x1f]
  4122cc:	mov    WORD PTR [ebp-0x34],dx
  4122d0:	mov    WORD PTR [ebp-0x32],cx
  4122d4:	mov    ecx,edi
  4122d6:	mov    WORD PTR [ebp-0x30],cx
  4122da:	lea    ecx,[edx+0x1]
  4122dd:	mov    edx,ecx
  4122df:	mov    WORD PTR [ebp-0x54],dx
  4122e3:	mov    edx,eax
  4122e5:	mov    WORD PTR [ebp-0x52],dx
  4122e9:	mov    edx,0x4e70
  4122ee:	mov    WORD PTR [ebp-0x50],dx
  4122f2:	mov    WORD PTR [ebp-0x4e],ax
  4122f6:	lea    eax,[ecx-0x1b]
  4122f9:	mov    WORD PTR [ebp-0x4c],ax
  4122fd:	add    eax,0x5
  412300:	mov    WORD PTR [ebp-0x4a],ax
  412304:	lea    eax,[ecx-0x21]
  412307:	mov    WORD PTR [ebp-0x48],ax
  41230b:	mov    WORD PTR [ebp-0x46],cx
  41230f:	mov    WORD PTR [ebp-0x44],di
  412313:	mov    eax,DWORD PTR [ebp+0x8]
  412316:	movzx  ecx,WORD PTR [ebp-0x54]
  41231a:	xor    eax,ebx
  41231c:	add    eax,esi
  41231e:	xor    eax,ecx
  412320:	mov    WORD PTR [ebp-0x54],ax
  412324:	mov    eax,DWORD PTR [ebp+0x8]
  412327:	movzx  ecx,WORD PTR [ebp-0x40]
  41232b:	xor    eax,ebx
  41232d:	add    eax,esi
  41232f:	xor    eax,ecx
  412331:	mov    WORD PTR [ebp-0x40],ax
  412335:	xor    eax,eax
  412337:	mov    WORD PTR [ebp-0xd0],ax
  41233e:	mov    WORD PTR [ebp-0xe4],ax
  412345:	mov    edi,DWORD PTR [ebp+0x24]
  412348:	lea    eax,[ebp-0xd0]
  41234e:	lea    edx,[ebp-0x54]
  412351:	mov    DWORD PTR [ebp-0xbc],0x2
  41235b:	mov    DWORD PTR [ebp-0xb8],eax
  412361:	call   0x414b33
  412366:	mov    DWORD PTR [ebp-0xb4],eax
  41236c:	lea    eax,[ebp-0xbc]
  412372:	push   eax
  412373:	mov    eax,DWORD PTR [ebp+0xc]
  412376:	xor    eax,ebx
  412378:	add    eax,esi
  41237a:	push   eax
  41237b:	lea    eax,[ebp-0x78]
  41237e:	push   eax
  41237f:	push   DWORD PTR [ebp-0x8]
  412382:	mov    eax,DWORD PTR [ebp+0x10]
  412385:	call   eax
  412387:	mov    edi,DWORD PTR [ebp+0x24]
  41238a:	lea    eax,[ebp-0xe4]
  412390:	lea    edx,[ebp-0x40]
  412393:	mov    DWORD PTR [ebp-0xb8],eax
  412399:	call   0x414b33
  41239e:	mov    DWORD PTR [ebp-0xb4],eax
  4123a4:	lea    eax,[ebp-0xbc]
  4123aa:	push   eax
  4123ab:	mov    eax,DWORD PTR [ebp+0xc]
  4123ae:	xor    eax,ebx
  4123b0:	add    eax,esi
  4123b2:	push   eax
  4123b3:	lea    eax,[ebp-0x78]
  4123b6:	push   eax
  4123b7:	push   DWORD PTR [ebp-0x8]
  4123ba:	mov    eax,DWORD PTR [ebp+0x10]
  4123bd:	call   eax
  4123bf:	mov    eax,DWORD PTR [ebp+0x14]
  4123c2:	push   DWORD PTR [ebp-0x4]
  4123c5:	push   DWORD PTR [ebp+0x20]
  4123c8:	push   DWORD PTR [ebp+0x1c]
  4123cb:	push   DWORD PTR [ebp+0x18]
  4123ce:	push   DWORD PTR [ebp+0x10]
  4123d1:	push   DWORD PTR [ebp+0x8]
  4123d4:	push   DWORD PTR [ebp+0xc]
  4123d7:	call   0x4133d7
  4123dc:	add    DWORD PTR [ebp-0x4],eax
  4123df:	mov    eax,DWORD PTR [ebp-0x4]
  4123e2:	mov    eax,DWORD PTR [ebp-0x4]
  4123e5:	mov    edi,DWORD PTR [eax+0x190]
  4123eb:	mov    eax,DWORD PTR [ebp-0x4]
  4123ee:	mov    eax,DWORD PTR [eax+0x18c]
  4123f4:	mov    esi,DWORD PTR [eax]
  4123f6:	lea    ecx,[ebp+0x4]
  4123f9:	mov    edx,DWORD PTR [ecx]
  4123fb:	cmp    edx,esi
  4123fd:	jb     0x412414
  4123ff:	mov    eax,DWORD PTR [edi]
  412401:	mov    edi,DWORD PTR [eax+0x3c]
  412404:	mov    edi,DWORD PTR [edi+eax*1+0x50]
  412408:	add    edi,esi
  41240a:	cmp    edx,edi
  41240c:	jae    0x412414
  41240e:	sub    eax,esi
  412410:	add    eax,edx
  412412:	mov    DWORD PTR [ecx],eax
  412414:	pop    edi
  412415:	pop    esi
  412416:	pop    ebx
  412417:	leave  
  412418:	ret    0x20
  41241b:	push   edi
  41241c:	push   esi
  41241d:	push   ebx
  41241e:	push   ebp
  41241f:	mov    ebp,esp
  412421:	mov    eax,DWORD PTR [ebp+0x24]
  412424:	add    DWORD PTR [ebp+0x28],eax
  412427:	push   eax
  412428:	cld    
  412429:	mov    esi,DWORD PTR [ebp+0x18]
  41242c:	add    DWORD PTR [ebp+0x1c],esi
  41242f:	push   esi
  412430:	mov    esi,DWORD PTR [ebp+0x14]
  412433:	lods   eax,DWORD PTR ds:[esi]
  412434:	xchg   edx,eax
  412435:	push   edx
  412436:	mov    cl,BYTE PTR [esi-0x2]
  412439:	or     eax,0xffffffff
  41243c:	shl    eax,cl
  41243e:	not    eax
  412440:	push   eax
  412441:	mov    cl,dh
  412443:	or     eax,0xffffffff
  412446:	shl    eax,cl
  412448:	not    eax
  41244a:	push   eax
  41244b:	add    cl,dl
  41244d:	mov    edi,esi
  41244f:	sub    esp,0xc
  412452:	sub    eax,eax
  412454:	inc    eax
  412455:	push   eax
  412456:	push   eax
  412457:	push   eax
  412458:	push   eax
  412459:	push   eax
  41245a:	push   edi
  41245b:	sub    esi,esi
  41245d:	push   esi
  41245e:	or     ebx,0xffffffff
  412461:	mov    eax,0x300
  412466:	shl    eax,cl
  412468:	lea    ecx,[eax+0x736]
  41246e:	mov    eax,0x4000400
  412473:	shr    ecx,1
  412475:	rep stos DWORD PTR es:[edi],eax
  412477:	push   0x5
  412479:	pop    ecx
  41247a:	call   0x412765
  41247f:	loop   0x41247a
  412481:	lea    esi,[esi]
  412483:	lea    edi,[edi]
  412485:	mov    edi,DWORD PTR [ebp-0x4]
  412488:	mov    eax,DWORD PTR [ebp-0x10]
  41248b:	sub    edi,DWORD PTR [ebp+0x24]
  41248e:	and    eax,edi
  412490:	mov    DWORD PTR [ebp-0x18],eax
  412493:	mov    al,0x0
  412495:	call   0x41277d
  41249a:	jne    0x412535
  4124a0:	mov    cl,BYTE PTR [ebp-0xc]
  4124a3:	and    edi,DWORD PTR [ebp-0x14]
  4124a6:	shl    edi,cl
  4124a8:	sub    cl,0x8
  4124ab:	neg    cl
  4124ad:	shr    esi,cl
  4124af:	pop    eax
  4124b0:	add    edi,esi
  4124b2:	pop    esi
  4124b3:	lea    edi,[edi+edi*2]
  4124b6:	shl    edi,0x8
  4124b9:	cmp    al,0x7
  4124bb:	pop    edx
  4124bc:	lea    ecx,[esi+edi*2+0xe6c]
  4124c3:	push   ecx
  4124c4:	push   esi
  4124c5:	mov    esi,0x100
  4124ca:	push   eax
  4124cb:	mov    al,0x1
  4124cd:	jb     0x412503
  4124cf:	mov    edi,DWORD PTR [ebp-0x4]
  4124d2:	sub    edi,DWORD PTR [ebp-0x24]
  4124d5:	movzx  edi,BYTE PTR [edi]
  4124d8:	mov    ebp,DWORD PTR [ebp-0x34]
  4124db:	shl    edi,1
  4124dd:	mov    ecx,esi
  4124df:	and    esi,edi
  4124e1:	add    ecx,esi
  4124e3:	lea    ebp,[ebp+ecx*2+0x0]
  4124e7:	call   0x41279c
  4124ec:	mov    ecx,eax
  4124ee:	shr    esi,0x8
  4124f1:	and    ecx,0x1
  4124f4:	cmp    esi,ecx
  4124f6:	mov    esi,0x100
  4124fb:	jne    0x41250b
  4124fd:	cmp    eax,esi
  4124ff:	jb     0x4124d8
  412501:	jmp    0x412517
  412503:	mov    ebp,DWORD PTR [ebp-0x34]
  412506:	call   0x41279c
  41250b:	inc    eax
  41250c:	inc    esi
  41250d:	sub    eax,0x1
  412510:	sub    esi,0x1
  412513:	cmp    eax,esi
  412515:	jb     0x412503
  412517:	pop    edx
  412518:	inc    edx
  412519:	cmp    edx,0x5
  41251c:	dec    edx
  41251d:	mov    ecx,edx
  41251f:	jb     0x412530
  412521:	inc    edx
  412522:	cmp    edx,0xb
  412525:	dec    edx
  412526:	mov    cl,0x4
  412528:	dec    cl
  41252a:	jb     0x412530
  41252c:	mov    cl,0x7
  41252e:	dec    cl
  412530:	sub    edx,ecx
  412532:	push   edx
  412533:	jmp    0x412584
  412535:	mov    al,0xc1
  412537:	dec    al
  412539:	call   0x41278d
  41253e:	jne    0x412554
  412540:	pop    eax
  412541:	pop    edi
  412542:	pop    edx
  412543:	pop    ecx
  412544:	pop    edx
  412545:	pop    ecx
  412546:	push   DWORD PTR [esp]
  412549:	push   ecx
  41254a:	push   edx
  41254b:	mov    edx,0x664
  412550:	mov    cl,0x0
  412552:	jmp    0x4125c7
  412554:	mov    al,0xcd
  412556:	dec    al
  412558:	call   0x41278d
  41255d:	jne    0x41258d
  41255f:	mov    al,0xf1
  412561:	dec    al
  412563:	call   0x41277d
  412568:	jne    0x4125bd
  41256a:	pop    eax
  41256b:	cmp    al,0x7
  41256d:	mov    al,0x9
  41256f:	jb     0x412573
  412571:	mov    al,0xb
  412573:	push   eax
  412574:	mov    esi,DWORD PTR [ebp-0x4]
  412577:	sub    esi,DWORD PTR [ebp-0x24]
  41257a:	cmp    esi,DWORD PTR [ebp+0x24]
  41257d:	jb     0x412754
  412583:	lods   al,BYTE PTR ds:[esi]
  412584:	mov    edi,DWORD PTR [ebp-0x4]
  412587:	stos   BYTE PTR es:[edi],al
  412588:	jmp    0x41271b
  41258d:	mov    al,0xd8
  41258f:	call   0x41278d
  412594:	mov    esi,DWORD PTR [ebp-0x28]
  412597:	je     0x4125b4
  412599:	mov    al,0xe4
  41259b:	call   0x41278d
  4125a0:	mov    esi,DWORD PTR [ebp-0x2c]
  4125a3:	je     0x4125ae
  4125a5:	mov    esi,DWORD PTR [ebp-0x30]
  4125a8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4125ab:	mov    DWORD PTR [ebp-0x30],ecx
  4125ae:	mov    ecx,DWORD PTR [ebp-0x28]
  4125b1:	mov    DWORD PTR [ebp-0x2c],ecx
  4125b4:	mov    ecx,DWORD PTR [ebp-0x24]
  4125b7:	mov    DWORD PTR [ebp-0x28],ecx
  4125ba:	mov    DWORD PTR [ebp-0x24],esi
  4125bd:	pop    eax
  4125be:	pop    edi
  4125bf:	pop    ecx
  4125c0:	mov    edx,0xa68
  4125c5:	mov    cl,0x8
  4125c7:	add    edx,edi
  4125c9:	push   edx
  4125ca:	push   edi
  4125cb:	cmp    al,0x7
  4125cd:	mov    al,cl
  4125cf:	jb     0x4125d3
  4125d1:	add    al,0x3
  4125d3:	push   eax
  4125d4:	mov    ebp,DWORD PTR [ebp-0x34]
  4125d7:	call   0x41279a
  4125dc:	jne    0x4125f2
  4125de:	mov    eax,DWORD PTR [ebp-0x18]
  4125e1:	mov    edi,DWORD PTR [ebp-0x34]
  4125e4:	shl    eax,0x3
  4125e7:	sub    ecx,ecx
  4125e9:	push   0x8
  4125eb:	pop    esi
  4125ec:	lea    edi,[edi+eax*2+0x4]
  4125f0:	jmp    0x412627
  4125f2:	mov    ebp,DWORD PTR [ebp-0x34]
  4125f5:	add    ebp,0x2
  4125f8:	call   0x41279a
  4125fd:	jne    0x412617
  4125ff:	mov    eax,DWORD PTR [ebp-0x18]
  412602:	mov    edi,DWORD PTR [ebp-0x34]
  412605:	shl    eax,0x3
  412608:	push   0x8
  41260a:	pop    ecx
  41260b:	push   0x8
  41260d:	pop    esi
  41260e:	lea    edi,[edi+eax*2+0x104]
  412615:	jmp    0x412627
  412617:	mov    edi,0x204
  41261c:	add    edi,DWORD PTR [ebp-0x34]
  41261f:	push   0x10
  412621:	pop    ecx
  412622:	mov    esi,0x100
  412627:	mov    DWORD PTR [ebp-0x1c],ecx
  41262a:	sub    eax,eax
  41262c:	inc    eax
  41262d:	mov    ebp,edi
  41262f:	call   0x41279c
  412634:	mov    ecx,eax
  412636:	sub    ecx,esi
  412638:	jb     0x41262d
  41263a:	add    DWORD PTR [ebp-0x1c],ecx
  41263d:	cmp    DWORD PTR [ebp-0x3c],0x4
  412641:	jae    0x4126f7
  412647:	add    DWORD PTR [ebp-0x3c],0x7
  41264b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41264e:	cmp    ecx,0x4
  412651:	jb     0x412656
  412653:	push   0x3
  412655:	pop    ecx
  412656:	mov    edi,DWORD PTR [ebp-0x38]
  412659:	shl    ecx,0x6
  41265c:	sub    eax,eax
  41265e:	inc    eax
  41265f:	push   0x40
  412661:	pop    esi
  412662:	lea    edi,[edi+ecx*2+0x360]
  412669:	mov    ebp,edi
  41266b:	call   0x41279c
  412670:	mov    ecx,eax
  412672:	sub    ecx,esi
  412674:	jb     0x412669
  412676:	mov    DWORD PTR [ebp-0x18],ecx
  412679:	mov    DWORD PTR [ebp-0x24],ecx
  41267c:	cmp    ecx,0x4
  41267f:	jb     0x4126f4
  412681:	mov    esi,ecx
  412683:	and    DWORD PTR [ebp-0x24],0x1
  412687:	shr    esi,1
  412689:	or     DWORD PTR [ebp-0x24],0x2
  41268d:	dec    esi
  41268e:	cmp    ecx,0xe
  412691:	jae    0x4126ac
  412693:	mov    eax,0x2af
  412698:	sub    eax,ecx
  41269a:	mov    ecx,esi
  41269c:	shl    BYTE PTR [ebp-0x24],cl
  41269f:	add    eax,DWORD PTR [ebp-0x24]
  4126a2:	shl    eax,1
  4126a4:	add    eax,DWORD PTR [ebp-0x38]
  4126a7:	mov    DWORD PTR [ebp-0x34],eax
  4126aa:	jmp    0x4126d9
  4126ac:	sub    esi,0x4
  4126af:	call   0x412759
  4126b4:	shr    ebx,1
  4126b6:	shl    DWORD PTR [ebp-0x24],1
  4126b9:	cmp    DWORD PTR [ebp-0x20],ebx
  4126bc:	jb     0x4126c4
  4126be:	inc    DWORD PTR [ebp-0x24]
  4126c1:	sub    DWORD PTR [ebp-0x20],ebx
  4126c4:	dec    esi
  4126c5:	jne    0x4126af
  4126c7:	mov    eax,0x644
  4126cc:	add    eax,DWORD PTR [ebp-0x38]
  4126cf:	mov    DWORD PTR [ebp-0x34],eax
  4126d2:	shl    DWORD PTR [ebp-0x24],0x4
  4126d6:	push   0x4
  4126d8:	pop    esi
  4126d9:	sub    edi,edi
  4126db:	inc    edi
  4126dc:	mov    eax,edi
  4126de:	mov    ebp,DWORD PTR [ebp-0x34]
  4126e1:	call   0x41279c
  4126e6:	test   al,0x1
  4126e8:	je     0x4126ed
  4126ea:	or     DWORD PTR [ebp-0x24],edi
  4126ed:	shl    edi,1
  4126ef:	dec    esi
  4126f0:	jne    0x4126de
  4126f2:	jmp    0x4126f4
  4126f4:	inc    DWORD PTR [ebp-0x24]
  4126f7:	mov    ecx,DWORD PTR [ebp-0x1c]
  4126fa:	add    ecx,0x2
  4126fd:	mov    edi,DWORD PTR [ebp-0x4]
  412700:	mov    eax,edi
  412702:	sub    eax,DWORD PTR [ebp+0x24]
  412705:	cmp    DWORD PTR [ebp-0x24],eax
  412708:	ja     0x412754
  41270a:	mov    esi,edi
  41270c:	sub    esi,DWORD PTR [ebp-0x24]
  41270f:	mov    edx,DWORD PTR [ebp+0x28]
  412712:	lods   al,BYTE PTR ds:[esi]
  412713:	stos   BYTE PTR es:[edi],al
  412714:	cmp    edi,edx
  412716:	jae    0x41271b
  412718:	dec    ecx
  412719:	jne    0x412712
  41271b:	mov    DWORD PTR [ebp-0x4],edi
  41271e:	movzx  esi,al
  412721:	cmp    edi,DWORD PTR [ebp+0x28]
  412724:	jb     0x412485
  41272a:	call   0x412759
  41272f:	sub    eax,eax
  412731:	lea    ebp,[esp+0x3c]
  412735:	mov    edx,DWORD PTR [ebp+0x20]
  412738:	mov    esi,DWORD PTR [ebp-0x8]
  41273b:	sub    esi,DWORD PTR [ebp+0x18]
  41273e:	mov    DWORD PTR [edx],esi
  412740:	mov    edx,DWORD PTR [ebp+0x2c]
  412743:	mov    edi,DWORD PTR [ebp-0x4]
  412746:	sub    edi,DWORD PTR [ebp+0x24]
  412749:	mov    DWORD PTR [edx],edi
  41274b:	leave  
  41274c:	pop    ebx
  41274d:	pop    esi
  41274e:	pop    edi
  41274f:	ret    0x1c
  412752:	pop    esi
  412753:	pop    eax
  412754:	sub    eax,eax
  412756:	inc    eax
  412757:	jmp    0x412731
  412759:	cmp    ebx,0x1000000
  41275f:	jb     0x412762
  412761:	ret    
  412762:	shl    ebx,0x8
  412765:	push   esi
  412766:	mov    esi,DWORD PTR [ebp-0x8]
  412769:	cmp    esi,DWORD PTR [ebp+0x1c]
  41276c:	jae    0x412752
  41276e:	mov    eax,DWORD PTR [ebp-0x20]
  412771:	shl    eax,0x8
  412774:	lods   al,BYTE PTR ds:[esi]
  412775:	mov    DWORD PTR [ebp-0x20],eax
  412778:	mov    DWORD PTR [ebp-0x8],esi
  41277b:	pop    esi
  41277c:	ret    
  41277d:	mov    ecx,DWORD PTR [ebp-0x3c]
  412780:	movzx  eax,al
  412783:	shl    ecx,0x4
  412786:	add    eax,DWORD PTR [ebp-0x18]
  412789:	add    eax,ecx
  41278b:	jmp    0x412793
  41278d:	movzx  eax,al
  412790:	add    eax,DWORD PTR [ebp-0x3c]
  412793:	mov    ebp,DWORD PTR [ebp-0x38]
  412796:	lea    ebp,[ebp+eax*2+0x0]
  41279a:	sub    eax,eax
  41279c:	lea    ebp,[ebp+eax*2+0x0]
  4127a0:	cmp    ebx,0x1000000
  4127a6:	jae    0x4127c4
  4127a8:	mov    ecx,DWORD PTR [esp+0x38]
  4127ac:	shl    DWORD PTR [esp+0x20],0x8
  4127b1:	cmp    ecx,DWORD PTR [esp+0x5c]
  4127b5:	jae    0x412753
  4127b7:	mov    dl,BYTE PTR [ecx]
  4127b9:	inc    DWORD PTR [esp+0x38]
  4127bd:	shl    ebx,0x8
  4127c0:	mov    BYTE PTR [esp+0x20],dl
  4127c4:	mov    ecx,ebx
  4127c6:	movzx  edx,WORD PTR [ebp+0x0]
  4127ca:	shr    ecx,0xb
  4127cd:	imul   ecx,edx
  4127d0:	cmp    DWORD PTR [esp+0x20],ecx
  4127d4:	jae    0x4127ed
  4127d6:	mov    ebx,ecx
  4127d8:	mov    ecx,0x800
  4127dd:	sub    ecx,edx
  4127df:	shr    ecx,0x5
  4127e2:	add    WORD PTR [ebp+0x0],cx
  4127e6:	add    eax,eax
  4127e8:	lea    ebp,[esp+0x40]
  4127ec:	ret    
  4127ed:	shr    edx,0x5
  4127f0:	sub    DWORD PTR [esp+0x20],ecx
  4127f4:	sub    ebx,ecx
  4127f6:	sub    WORD PTR [ebp+0x0],dx
  4127fa:	add    eax,eax
  4127fc:	add    eax,0x1
  4127ff:	lea    ebp,[esp+0x40]
  412803:	ret    
  412804:	push   ebp
  412805:	mov    ebp,esp
  412807:	sub    esp,0xec
  41280d:	push   ebx
  41280e:	push   esi
  41280f:	push   edi
  412810:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  412817:	mov    DWORD PTR [ebp-0x34],0xf89c85b2
  41281e:	mov    eax,DWORD PTR [ebp+0x8]
  412821:	mov    DWORD PTR [ebp+0x8],eax
  412824:	mov    ecx,DWORD PTR [ebp-0x8]
  412827:	mov    ebx,0x7510896
  41282c:	xor    ecx,ebx
  41282e:	mov    eax,0x3272dd
  412833:	add    ecx,eax
  412835:	mov    DWORD PTR [ebp-0x20],ecx
  412838:	mov    ecx,DWORD PTR [ebp-0x8]
  41283b:	xor    ecx,ebx
  41283d:	add    ecx,eax
  41283f:	mov    DWORD PTR [ebp-0x30],ecx
  412842:	mov    ecx,DWORD PTR [ebp-0x8]
  412845:	xor    ecx,ebx
  412847:	add    ecx,eax
  412849:	mov    DWORD PTR [ebp-0x2c],ecx
  41284c:	mov    ecx,DWORD PTR [ebp-0x8]
  41284f:	xor    ecx,ebx
  412851:	add    ecx,eax
  412853:	mov    DWORD PTR [ebp-0xa0],ecx
  412859:	mov    DWORD PTR [ebp-0x48],0xf89f05b5
  412860:	mov    DWORD PTR [ebp-0x2c],0xf89cb5b5
  412867:	mov    DWORD PTR [ebp-0x3c],0xf89c85b1
  41286e:	push   0x24
  412870:	pop    ecx
  412871:	mov    DWORD PTR [ebp-0x28],ecx
  412874:	mov    DWORD PTR [ebp-0x28],ecx
  412877:	push   0x64
  412879:	pop    ecx
  41287a:	mov    DWORD PTR [ebp-0x28],ecx
  41287d:	mov    DWORD PTR [ebp-0x28],ecx
  412880:	mov    DWORD PTR [ebp-0x28],0x4c
  412887:	mov    DWORD PTR [ebp-0x28],0x42
  41288e:	mov    ecx,DWORD PTR [ebp-0x8]
  412891:	xor    ecx,ebx
  412893:	add    ecx,eax
  412895:	mov    DWORD PTR [ebp-0x28],ecx
  412898:	mov    ecx,DWORD PTR [ebp-0x8]
  41289b:	xor    ecx,ebx
  41289d:	add    ecx,eax
  41289f:	mov    DWORD PTR [ebp-0x28],ecx
  4128a2:	mov    DWORD PTR [ebp-0x24],0x256
  4128a9:	mov    DWORD PTR [ebp-0x1c],0x34
  4128b0:	mov    DWORD PTR [ebp-0xc],0x78
  4128b7:	lea    edi,[ebp-0xcc]
  4128bd:	lea    esi,[ebp-0xec]
  4128c3:	call   0x413346
  4128c8:	dec    DWORD PTR [ebp-0xc]
  4128cb:	jne    0x4128b7
  4128cd:	dec    DWORD PTR [ebp-0x1c]
  4128d0:	jne    0x4128b0
  4128d2:	dec    DWORD PTR [ebp-0x24]
  4128d5:	jne    0x4128a9
  4128d7:	mov    DWORD PTR [ebp-0x1c],0x400c
  4128de:	mov    eax,DWORD PTR [ebp-0x8]
  4128e1:	xor    eax,ebx
  4128e3:	mov    esi,0x3272dd
  4128e8:	add    eax,esi
  4128ea:	mov    DWORD PTR [ebp-0x14],eax
  4128ed:	mov    eax,DWORD PTR [ebp-0x8]
  4128f0:	and    DWORD PTR [ebp-0x8c],0x0
  4128f7:	xor    eax,ebx
  4128f9:	add    eax,esi
  4128fb:	mov    DWORD PTR [ebp-0x24],eax
  4128fe:	mov    eax,fs:0x18
  412904:	mov    DWORD PTR [ebp-0x8c],eax
  41290a:	mov    eax,DWORD PTR [eax+0x30]
  41290d:	mov    DWORD PTR [ebp-0x90],eax
  412913:	mov    eax,DWORD PTR [eax+0xc]
  412916:	mov    DWORD PTR [ebp-0x9c],eax
  41291c:	mov    eax,DWORD PTR [ebp+0x8]
  41291f:	lea    ecx,[ebp-0x8c]
  412925:	mov    DWORD PTR [eax+0x1a0],ecx
  41292b:	mov    eax,DWORD PTR [ebp+0x8]
  41292e:	lea    ecx,[ebp-0x90]
  412934:	mov    DWORD PTR [eax+0x1a4],ecx
  41293a:	mov    eax,DWORD PTR [ebp+0x8]
  41293d:	push   DWORD PTR [ebp+0x8]
  412940:	lea    ecx,[ebp-0x9c]
  412946:	mov    DWORD PTR [eax+0x1a8],ecx
  41294c:	call   0x414b04
  412951:	mov    ecx,DWORD PTR [ebp-0x8]
  412954:	xor    ecx,ebx
  412956:	add    ecx,esi
  412958:	cmp    ecx,eax
  41295a:	je     0x412c2e
  412960:	mov    eax,DWORD PTR [ebp+0x8]
  412963:	mov    eax,DWORD PTR [eax+0x194]
  412969:	mov    ecx,DWORD PTR [eax]
  41296b:	mov    eax,DWORD PTR [ebp+0x8]
  41296e:	mov    eax,DWORD PTR [eax+0x194]
  412974:	mov    eax,DWORD PTR [eax]
  412976:	add    eax,DWORD PTR [ecx+0x3c]
  412979:	mov    ecx,DWORD PTR [ebp+0x8]
  41297c:	mov    ecx,DWORD PTR [ecx+0x1d8]
  412982:	lea    edx,[ebp-0xac]
  412988:	push   edx
  412989:	mov    edx,DWORD PTR [ebp+0x8]
  41298c:	mov    edx,DWORD PTR [edx+0x18c]
  412992:	mov    edx,DWORD PTR [edx]
  412994:	add    edx,DWORD PTR [eax+0x88]
  41299a:	push   0x4
  41299c:	push   DWORD PTR [eax+0x8c]
  4129a2:	push   edx
  4129a3:	call   DWORD PTR [ecx+0x1c]
  4129a6:	push   DWORD PTR [ebp+0x8]
  4129a9:	mov    edi,DWORD PTR [ebp+0x8]
  4129ac:	mov    eax,DWORD PTR [ebp+0x8]
  4129af:	mov    edx,DWORD PTR [eax+0x1b8]
  4129b5:	mov    DWORD PTR [ebp-0x5c],0xc0e0f06
  4129bc:	mov    DWORD PTR [ebp-0x58],0x50a091f
  4129c3:	mov    WORD PTR [ebp-0x54],0x7a3d
  4129c9:	mov    DWORD PTR [ebp-0x70],0x23f0f25
  4129d0:	mov    DWORD PTR [ebp-0x6c],0x63d0c1d
  4129d7:	mov    DWORD PTR [ebp-0x68],0x281d020a
  4129de:	mov    DWORD PTR [ebp-0x64],0xc0109f1
  4129e5:	mov    DWORD PTR [ebp-0x60],0x7a3d1f05
  4129ec:	mov    DWORD PTR [ebp-0x84],0x23f0f25
  4129f6:	mov    DWORD PTR [ebp-0x80],0x63d0c1d
  4129fd:	mov    DWORD PTR [ebp-0x7c],0x281d020a
  412a04:	mov    DWORD PTR [ebp-0x78],0xc0109f1
  412a0b:	mov    DWORD PTR [ebp-0x74],0x7a131f05
  412a12:	call   0x414b33
  412a17:	push   eax
  412a18:	mov    eax,DWORD PTR [ebp+0x8]
  412a1b:	mov    eax,DWORD PTR [eax+0x1a8]
  412a21:	push   DWORD PTR [eax]
  412a23:	call   0x4147d5
  412a28:	test   eax,eax
  412a2a:	jne    0x412a7c
  412a2c:	mov    eax,DWORD PTR [ebp+0x8]
  412a2f:	mov    eax,DWORD PTR [eax+0x1d8]
  412a35:	mov    edi,DWORD PTR [ebp+0x8]
  412a38:	add    eax,0x4
  412a3b:	mov    DWORD PTR [ebp-0x18],eax
  412a3e:	mov    eax,DWORD PTR [ebp+0x8]
  412a41:	mov    edx,DWORD PTR [eax+0x1b8]
  412a47:	call   0x414b33
  412a4c:	push   eax
  412a4d:	mov    eax,DWORD PTR [ebp-0x18]
  412a50:	call   DWORD PTR [eax]
  412a52:	test   eax,eax
  412a54:	jne    0x412a7c
  412a56:	mov    eax,DWORD PTR [ebp+0x8]
  412a59:	mov    eax,DWORD PTR [eax+0x1d8]
  412a5f:	mov    edi,DWORD PTR [ebp+0x8]
  412a62:	add    eax,0x10
  412a65:	mov    DWORD PTR [ebp-0x18],eax
  412a68:	mov    eax,DWORD PTR [ebp+0x8]
  412a6b:	mov    edx,DWORD PTR [eax+0x1b8]
  412a71:	call   0x414b33
  412a76:	push   eax
  412a77:	mov    eax,DWORD PTR [ebp-0x18]
  412a7a:	call   DWORD PTR [eax]
  412a7c:	mov    eax,DWORD PTR [ebp-0x8]
  412a7f:	mov    ecx,DWORD PTR [ebp-0x1c]
  412a82:	xor    eax,ebx
  412a84:	add    eax,esi
  412a86:	cmp    eax,ecx
  412a88:	je     0x412c07
  412a8e:	mov    eax,DWORD PTR [ebp-0x34]
  412a91:	xor    eax,ebx
  412a93:	mov    ecx,0xffcd8d23
  412a98:	sub    ecx,eax
  412a9a:	add    ecx,DWORD PTR [ebp-0x1c]
  412a9d:	mov    eax,DWORD PTR [ebp-0x14]
  412aa0:	cmp    eax,ecx
  412aa2:	ja     0x412c07
  412aa8:	mov    DWORD PTR [ebp-0x4],0x0
  412aaf:	push   DWORD PTR [ebp+0x8]
  412ab2:	mov    edi,DWORD PTR [ebp+0x8]
  412ab5:	mov    eax,DWORD PTR [ebp+0x8]
  412ab8:	mov    edx,DWORD PTR [eax+0x1b4]
  412abe:	call   0x414b33
  412ac3:	push   eax
  412ac4:	mov    eax,DWORD PTR [ebp+0x8]
  412ac7:	mov    eax,DWORD PTR [eax+0x1a8]
  412acd:	push   DWORD PTR [eax]
  412acf:	call   0x4147d5
  412ad4:	mov    ecx,DWORD PTR [ebp+0x8]
  412ad7:	mov    ecx,DWORD PTR [ecx+0x19c]
  412add:	mov    DWORD PTR [ecx],eax
  412adf:	mov    eax,DWORD PTR [ebp+0x8]
  412ae2:	mov    edi,DWORD PTR [eax+0x1d8]
  412ae8:	mov    esi,DWORD PTR [ebp+0x8]
  412aeb:	xor    eax,eax
  412aed:	lea    edx,[ebp-0x84]
  412af3:	call   0x414b69
  412af8:	push   eax
  412af9:	mov    eax,DWORD PTR [ebp+0x8]
  412afc:	mov    eax,DWORD PTR [eax+0x19c]
  412b02:	push   DWORD PTR [eax]
  412b04:	call   DWORD PTR [edi+0x8]
  412b07:	mov    DWORD PTR [ebp-0x18],eax
  412b0a:	mov    eax,DWORD PTR [ebp+0x8]
  412b0d:	mov    edi,DWORD PTR [eax+0x1d8]
  412b13:	mov    esi,DWORD PTR [ebp+0x8]
  412b16:	xor    eax,eax
  412b18:	lea    edx,[ebp-0x70]
  412b1b:	call   0x414b69
  412b20:	push   eax
  412b21:	mov    eax,DWORD PTR [ebp+0x8]
  412b24:	mov    eax,DWORD PTR [eax+0x19c]
  412b2a:	push   DWORD PTR [eax]
  412b2c:	call   DWORD PTR [edi+0x8]
  412b2f:	and    DWORD PTR [ebp-0x10],0x0
  412b33:	mov    eax,DWORD PTR [ebp-0x10]
  412b36:	and    eax,0x7
  412b39:	add    eax,0x31
  412b3c:	push   eax
  412b3d:	call   DWORD PTR [ebp-0x18]
  412b40:	test   eax,eax
  412b42:	jne    0x412b49
  412b44:	and    DWORD PTR [ebp-0xc],eax
  412b47:	jmp    0x412b71
  412b49:	mov    eax,DWORD PTR [ebp+0x8]
  412b4c:	mov    edi,DWORD PTR [eax+0x1d8]
  412b52:	mov    esi,DWORD PTR [ebp+0x8]
  412b55:	xor    eax,eax
  412b57:	lea    edx,[ebp-0x5c]
  412b5a:	call   0x414b69
  412b5f:	push   eax
  412b60:	mov    eax,DWORD PTR [ebp+0x8]
  412b63:	mov    eax,DWORD PTR [eax+0x198]
  412b69:	push   DWORD PTR [eax]
  412b6b:	call   DWORD PTR [edi+0x8]
  412b6e:	mov    DWORD PTR [ebp-0xc],eax
  412b71:	inc    DWORD PTR [ebp-0x10]
  412b74:	cmp    DWORD PTR [ebp-0x10],0x10
  412b78:	jb     0x412b33
  412b7a:	mov    eax,DWORD PTR [ebp-0x34]
  412b7d:	mov    esi,DWORD PTR [ebp+0x8]
  412b80:	xor    eax,ebx
  412b82:	mov    edi,0x3272dd
  412b87:	add    eax,edi
  412b89:	lea    edx,[ebp-0xcc]
  412b8f:	call   0x414b69
  412b94:	push   eax
  412b95:	mov    eax,DWORD PTR [ebp-0x8]
  412b98:	mov    esi,DWORD PTR [ebp+0x8]
  412b9b:	xor    eax,ebx
  412b9d:	add    eax,edi
  412b9f:	lea    edx,[ebp-0xec]
  412ba5:	call   0x414b69
  412baa:	push   eax
  412bab:	call   DWORD PTR [ebp-0xc]
  412bae:	mov    ecx,DWORD PTR [ebp-0x8]
  412bb1:	xor    ecx,ebx
  412bb3:	add    ecx,edi
  412bb5:	cmp    ecx,eax
  412bb7:	jne    0x412bc0
  412bb9:	mov    DWORD PTR [ebp-0x4],0x1
  412bc0:	mov    eax,DWORD PTR [ebp-0x34]
  412bc3:	mov    ecx,DWORD PTR [ebp-0x14]
  412bc6:	xor    eax,ebx
  412bc8:	lea    eax,[eax+ecx*1+0x3272dd]
  412bcf:	mov    DWORD PTR [ebp-0x14],eax
  412bd2:	mov    eax,DWORD PTR [ebp-0x4]
  412bd5:	test   eax,eax
  412bd7:	je     0x412beb
  412bd9:	mov    eax,DWORD PTR [ebp-0x34]
  412bdc:	mov    ecx,DWORD PTR [ebp-0x24]
  412bdf:	xor    eax,ebx
  412be1:	lea    eax,[eax+ecx*1+0x3272dd]
  412be8:	mov    DWORD PTR [ebp-0x24],eax
  412beb:	mov    eax,DWORD PTR [ebp-0x34]
  412bee:	xor    eax,ebx
  412bf0:	mov    ecx,0xffcd8d23
  412bf5:	sub    ecx,eax
  412bf7:	add    ecx,DWORD PTR [ebp-0x1c]
  412bfa:	mov    eax,DWORD PTR [ebp-0x14]
  412bfd:	cmp    eax,ecx
  412bff:	jbe    0x412aa8
  412c05:	mov    esi,edi
  412c07:	mov    eax,DWORD PTR [ebp-0x24]
  412c0a:	mov    ecx,DWORD PTR [ebp-0x14]
  412c0d:	cmp    ecx,eax
  412c0f:	jne    0x412c22
  412c11:	push   DWORD PTR [ebp+0x8]
  412c14:	lea    eax,[ebp-0x30]
  412c17:	push   eax
  412c18:	call   0x4155e2
  412c1d:	mov    DWORD PTR [ebp-0x20],eax
  412c20:	jmp    0x412c2e
  412c22:	mov    eax,DWORD PTR [ebp-0x20]
  412c25:	mov    ecx,DWORD PTR [ebp-0x34]
  412c28:	xor    ecx,ebx
  412c2a:	add    ecx,esi
  412c2c:	xor    DWORD PTR [eax],ecx
  412c2e:	mov    eax,DWORD PTR [ebp-0x8]
  412c31:	mov    ecx,DWORD PTR [ebp-0x20]
  412c34:	xor    eax,ebx
  412c36:	add    eax,esi
  412c38:	cmp    eax,ecx
  412c3a:	je     0x413224
  412c40:	mov    eax,DWORD PTR [ebp-0x8]
  412c43:	mov    ecx,DWORD PTR [ebp-0x30]
  412c46:	xor    eax,ebx
  412c48:	add    eax,esi
  412c4a:	cmp    eax,ecx
  412c4c:	je     0x413224
  412c52:	mov    eax,DWORD PTR [ebp-0x8]
  412c55:	xor    eax,ebx
  412c57:	add    eax,esi
  412c59:	jmp    0x412c77
  412c5b:	mov    edi,DWORD PTR [ebp-0x20]
  412c5e:	mov    cl,al
  412c60:	and    cl,0x1f
  412c63:	or     dl,0xff
  412c66:	sub    dl,cl
  412c68:	add    BYTE PTR [edi+eax*1],dl
  412c6b:	mov    ecx,DWORD PTR [ebp-0x34]
  412c6e:	xor    ecx,ebx
  412c70:	lea    eax,[eax+ecx*1+0x3272dd]
  412c77:	mov    ecx,DWORD PTR [ebp-0x30]
  412c7a:	cmp    eax,ecx
  412c7c:	jb     0x412c5b
  412c7e:	mov    eax,DWORD PTR [ebp-0x30]
  412c81:	mov    DWORD PTR [ebp-0x1c],eax
  412c84:	mov    eax,DWORD PTR [ebp-0x20]
  412c87:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  412c8e:	mov    DWORD PTR [ebp-0xa8],eax
  412c94:	mov    ecx,0xf89c85b2
  412c99:	mov    DWORD PTR [ebp-0x14],ecx
  412c9c:	mov    eax,DWORD PTR [ebp-0x24]
  412c9f:	xor    eax,ebx
  412ca1:	add    eax,esi
  412ca3:	mov    DWORD PTR [ebp-0x4],eax
  412ca6:	mov    eax,DWORD PTR [ebp-0x24]
  412ca9:	xor    eax,ebx
  412cab:	add    eax,esi
  412cad:	mov    DWORD PTR [ebp-0x10],eax
  412cb0:	mov    DWORD PTR [ebp-0x40],0xf89c85d5
  412cb7:	mov    DWORD PTR [ebp-0x44],0xf89c85bc
  412cbe:	mov    eax,DWORD PTR [ebp-0x24]
  412cc1:	mov    edx,DWORD PTR [ebp-0x1c]
  412cc4:	xor    eax,ebx
  412cc6:	add    eax,esi
  412cc8:	cmp    edx,eax
  412cca:	je     0x412e02
  412cd0:	jmp    0x412dde
  412cd5:	mov    edx,DWORD PTR [ebp-0x4]
  412cd8:	mov    eax,DWORD PTR [ebp-0x1c]
  412cdb:	mov    edi,DWORD PTR [ebp-0x40]
  412cde:	sub    eax,edx
  412ce0:	xor    edi,ebx
  412ce2:	xor    edx,edx
  412ce4:	add    edi,esi
  412ce6:	div    edi
  412ce8:	mov    DWORD PTR [ebp-0x10],eax
  412ceb:	mov    eax,DWORD PTR [ebp-0x44]
  412cee:	mov    edx,DWORD PTR [ebp-0x10]
  412cf1:	xor    eax,ebx
  412cf3:	add    eax,esi
  412cf5:	cmp    edx,eax
  412cf7:	jbe    0x412d03
  412cf9:	mov    eax,DWORD PTR [ebp-0x44]
  412cfc:	xor    eax,ebx
  412cfe:	add    eax,esi
  412d00:	mov    DWORD PTR [ebp-0x10],eax
  412d03:	mov    eax,DWORD PTR [ebp-0x40]
  412d06:	mov    edx,DWORD PTR [ebp-0x10]
  412d09:	xor    eax,ebx
  412d0b:	add    eax,esi
  412d0d:	imul   eax,edx
  412d10:	mov    DWORD PTR [ebp-0x10],eax
  412d13:	mov    eax,DWORD PTR [ebp-0x24]
  412d16:	mov    edx,DWORD PTR [ebp-0x10]
  412d19:	xor    eax,ebx
  412d1b:	add    eax,esi
  412d1d:	cmp    edx,eax
  412d1f:	je     0x412dcc
  412d25:	mov    eax,DWORD PTR [ebp-0x10]
  412d28:	mov    DWORD PTR [ebp-0xc],eax
  412d2b:	mov    eax,DWORD PTR [ebp-0x4]
  412d2e:	add    eax,DWORD PTR [ebp-0xa8]
  412d34:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  412d3b:	mov    DWORD PTR [ebp-0x38],ecx
  412d3e:	mov    DWORD PTR [ebp-0x28],0xf89c85b3
  412d45:	mov    DWORD PTR [ebp-0x88],eax
  412d4b:	mov    DWORD PTR [ebp-0x28],0xf89c85b0
  412d52:	mov    DWORD PTR [ebp-0x94],ecx
  412d58:	mov    eax,DWORD PTR [ebp-0x18]
  412d5b:	xor    eax,ebx
  412d5d:	add    eax,esi
  412d5f:	jmp    0x412d8f
  412d61:	mov    eax,DWORD PTR [ebp-0x94]
  412d67:	mov    edx,DWORD PTR [ebp-0x10]
  412d6a:	xor    eax,ebx
  412d6c:	add    eax,esi
  412d6e:	imul   eax,edx
  412d71:	mov    edx,DWORD PTR [ebp-0x88]
  412d77:	mov    BYTE PTR [eax+edx*1],0x0
  412d7b:	mov    eax,DWORD PTR [ebp-0x28]
  412d7e:	mov    edx,DWORD PTR [ebp-0x38]
  412d81:	xor    eax,ebx
  412d83:	xor    edx,ebx
  412d85:	add    eax,esi
  412d87:	add    edx,esi
  412d89:	imul   eax,edx
  412d8c:	add    eax,DWORD PTR [ebp-0x10]
  412d8f:	mov    DWORD PTR [ebp-0x10],eax
  412d92:	mov    eax,DWORD PTR [ebp-0x10]
  412d95:	mov    edx,DWORD PTR [ebp-0xc]
  412d98:	cmp    edx,eax
  412d9a:	jb     0x412d61
  412d9c:	mov    eax,DWORD PTR [ebp-0x38]
  412d9f:	mov    edx,DWORD PTR [ebp-0xc]
  412da2:	xor    eax,ebx
  412da4:	add    eax,esi
  412da6:	imul   eax,edx
  412da9:	mov    edx,DWORD PTR [ebp-0x18]
  412dac:	xor    edx,ebx
  412dae:	add    edx,esi
  412db0:	or     eax,edx
  412db2:	mov    edx,DWORD PTR [ebp-0x14]
  412db5:	xor    edx,ebx
  412db7:	add    eax,edx
  412db9:	mov    edx,DWORD PTR [ebp-0x14]
  412dbc:	xor    edx,ebx
  412dbe:	add    eax,edx
  412dc0:	mov    edx,DWORD PTR [ebp-0x4]
  412dc3:	lea    eax,[eax+edx*1+0x64e5ba]
  412dca:	jmp    0x412ddb
  412dcc:	mov    eax,DWORD PTR [ebp-0x14]
  412dcf:	mov    edx,DWORD PTR [ebp-0x4]
  412dd2:	xor    eax,ebx
  412dd4:	lea    eax,[eax+edx*1+0x3272dd]
  412ddb:	mov    DWORD PTR [ebp-0x4],eax
  412dde:	mov    eax,DWORD PTR [ebp-0x14]
  412de1:	xor    eax,ebx
  412de3:	mov    edx,0xffcd8d23
  412de8:	sub    edx,eax
  412dea:	add    edx,DWORD PTR [ebp-0x1c]
  412ded:	mov    eax,DWORD PTR [ebp-0x14]
  412df0:	mov    edi,DWORD PTR [ebp-0x4]
  412df3:	xor    eax,ebx
  412df5:	add    eax,esi
  412df7:	imul   eax,edi
  412dfa:	cmp    eax,edx
  412dfc:	jbe    0x412cd5
  412e02:	mov    eax,DWORD PTR [ebp-0x8]
  412e05:	mov    ecx,DWORD PTR [ebp-0x30]
  412e08:	mov    eax,DWORD PTR [ebp+0x8]
  412e0b:	mov    edx,DWORD PTR [ebp-0x3c]
  412e0e:	mov    eax,DWORD PTR [eax+0x1d8]
  412e14:	xor    edx,ebx
  412e16:	add    edx,esi
  412e18:	push   edx
  412e19:	mov    edx,DWORD PTR [ebp-0x2c]
  412e1c:	xor    edx,ebx
  412e1e:	add    edx,esi
  412e20:	push   edx
  412e21:	push   ecx
  412e22:	mov    DWORD PTR [ebp-0x28],ecx
  412e25:	mov    ecx,DWORD PTR [ebp-0x8]
  412e28:	xor    ecx,ebx
  412e2a:	add    ecx,esi
  412e2c:	push   ecx
  412e2d:	call   DWORD PTR [eax+0x14]
  412e30:	mov    edi,eax
  412e32:	mov    eax,DWORD PTR [ebp-0x8]
  412e35:	xor    eax,ebx
  412e37:	add    eax,esi
  412e39:	cmp    eax,edi
  412e3b:	je     0x412e96
  412e3d:	mov    eax,DWORD PTR [ebp-0x8]
  412e40:	jmp    0x412e63
  412e42:	mov    ecx,DWORD PTR [ebp-0x20]
  412e45:	xor    eax,ebx
  412e47:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  412e4e:	mov    BYTE PTR [eax+edi*1+0x3272dd],cl
  412e55:	mov    ecx,DWORD PTR [ebp-0x34]
  412e58:	xor    ecx,ebx
  412e5a:	lea    eax,[ecx+eax*1+0x3272dd]
  412e61:	xor    eax,ebx
  412e63:	mov    ecx,DWORD PTR [ebp-0x30]
  412e66:	sub    ecx,esi
  412e68:	xor    ecx,ebx
  412e6a:	cmp    eax,ecx
  412e6c:	jne    0x412e42
  412e6e:	mov    eax,DWORD PTR [ebp+0x8]
  412e71:	mov    ecx,DWORD PTR [ebp-0x48]
  412e74:	mov    eax,DWORD PTR [eax+0x1d8]
  412e7a:	xor    ecx,ebx
  412e7c:	add    ecx,esi
  412e7e:	push   ecx
  412e7f:	mov    ecx,DWORD PTR [ebp-0x8]
  412e82:	xor    ecx,ebx
  412e84:	add    ecx,esi
  412e86:	push   ecx
  412e87:	push   DWORD PTR [ebp-0x20]
  412e8a:	call   DWORD PTR [eax+0x18]
  412e8d:	mov    eax,DWORD PTR [ebp-0x28]
  412e90:	mov    DWORD PTR [ebp-0x20],edi
  412e93:	mov    DWORD PTR [ebp-0x30],eax
  412e96:	mov    edi,DWORD PTR [ebp-0x20]
  412e99:	mov    eax,DWORD PTR [ebp-0x34]
  412e9c:	mov    ecx,DWORD PTR [ebp-0x8]
  412e9f:	xor    eax,ebx
  412ea1:	mov    DWORD PTR [ebp-0x28],edi
  412ea4:	add    eax,esi
  412ea6:	mov    DWORD PTR [ebp-0x50],0x3d122a12
  412ead:	mov    DWORD PTR [ebp-0x4c],0x27123f12
  412eb4:	jmp    0x412ee8
  412eb6:	xor    ecx,ebx
  412eb8:	mov    dl,BYTE PTR [ebp+ecx*1+0x32728d]
  412ebf:	xor    dl,0x71
  412ec2:	sub    dl,0xb
  412ec5:	mov    DWORD PTR [ebp-0x2c],ecx
  412ec8:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272dd]
  412ed0:	movzx  edx,dl
  412ed3:	cmp    ecx,edx
  412ed5:	jne    0x412ef2
  412ed7:	mov    ecx,DWORD PTR [ebp-0x34]
  412eda:	mov    edx,DWORD PTR [ebp-0x2c]
  412edd:	xor    ecx,ebx
  412edf:	lea    ecx,[ecx+edx*1+0x3272dd]
  412ee6:	xor    ecx,ebx
  412ee8:	cmp    ecx,0xf89c85bd
  412eee:	jne    0x412eb6
  412ef0:	jmp    0x412ef9
  412ef2:	mov    eax,DWORD PTR [ebp-0x8]
  412ef5:	xor    eax,ebx
  412ef7:	add    eax,esi
  412ef9:	mov    ecx,DWORD PTR [ebp-0x8]
  412efc:	xor    ecx,ebx
  412efe:	add    ecx,esi
  412f00:	cmp    ecx,eax
  412f02:	je     0x413075
  412f08:	mov    eax,DWORD PTR [edi+0x8]
  412f0b:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  412f12:	mov    DWORD PTR [ebp-0x2c],0xf89cc304
  412f19:	mov    DWORD PTR [ebp-0x38],0xf89cb5b5
  412f20:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  412f27:	mov    DWORD PTR [ebp-0xc],eax
  412f2a:	mov    eax,DWORD PTR [ebp+0x8]
  412f2d:	mov    ecx,DWORD PTR [ebp-0x18]
  412f30:	xor    ecx,ebx
  412f32:	add    ecx,esi
  412f34:	push   ecx
  412f35:	mov    ecx,DWORD PTR [ebp-0x38]
  412f38:	mov    eax,DWORD PTR [eax+0x1d8]
  412f3e:	xor    ecx,ebx
  412f40:	add    ecx,esi
  412f42:	push   ecx
  412f43:	mov    ecx,DWORD PTR [ebp-0x2c]
  412f46:	xor    ecx,ebx
  412f48:	add    ecx,esi
  412f4a:	push   ecx
  412f4b:	mov    ecx,DWORD PTR [ebp-0x4]
  412f4e:	xor    ecx,ebx
  412f50:	add    ecx,esi
  412f52:	push   ecx
  412f53:	call   DWORD PTR [eax+0x14]
  412f56:	mov    edi,eax
  412f58:	mov    eax,DWORD PTR [ebp+0x8]
  412f5b:	mov    ecx,DWORD PTR [ebp-0x18]
  412f5e:	mov    eax,DWORD PTR [eax+0x1d8]
  412f64:	xor    ecx,ebx
  412f66:	add    ecx,esi
  412f68:	push   ecx
  412f69:	mov    ecx,DWORD PTR [ebp-0x38]
  412f6c:	xor    ecx,ebx
  412f6e:	add    ecx,esi
  412f70:	push   ecx
  412f71:	mov    ecx,DWORD PTR [ebp-0x4]
  412f74:	push   DWORD PTR [ebp-0xc]
  412f77:	xor    ecx,ebx
  412f79:	add    ecx,esi
  412f7b:	push   ecx
  412f7c:	call   DWORD PTR [eax+0x14]
  412f7f:	mov    ecx,DWORD PTR [ebp-0x4]
  412f82:	xor    ecx,ebx
  412f84:	add    ecx,esi
  412f86:	mov    DWORD PTR [ebp-0x18],eax
  412f89:	cmp    ecx,edi
  412f8b:	je     0x413251
  412f91:	mov    ecx,DWORD PTR [ebp-0x4]
  412f94:	xor    ecx,ebx
  412f96:	add    ecx,esi
  412f98:	cmp    ecx,eax
  412f9a:	je     0x413251
  412fa0:	mov    DWORD PTR [ebp-0x2c],0xf89c85b0
  412fa7:	mov    DWORD PTR [ebp-0x3c],0xf89c85b3
  412fae:	mov    ecx,DWORD PTR [ebp-0x2c]
  412fb1:	xor    cl,0x96
  412fb4:	sub    cl,0x23
  412fb7:	mov    BYTE PTR [edi],cl
  412fb9:	mov    ecx,DWORD PTR [ebp-0x4]
  412fbc:	xor    cl,0x96
  412fbf:	sub    cl,0x23
  412fc2:	mov    BYTE PTR [edi+0x1],cl
  412fc5:	mov    ecx,DWORD PTR [ebp-0x3c]
  412fc8:	xor    cl,0x96
  412fcb:	sub    cl,0x23
  412fce:	mov    BYTE PTR [edi+0x2],cl
  412fd1:	and    DWORD PTR [ebp-0x98],0x0
  412fd8:	and    DWORD PTR [ebp-0xa4],0x0
  412fdf:	lea    ecx,[ebp-0xa4]
  412fe5:	push   ecx
  412fe6:	push   DWORD PTR [ebp-0xc]
  412fe9:	push   eax
  412fea:	lea    eax,[ebp-0x98]
  412ff0:	push   eax
  412ff1:	mov    eax,DWORD PTR [ebp-0x28]
  412ff4:	push   DWORD PTR [eax+0xc]
  412ff7:	mov    eax,DWORD PTR [ebp-0x20]
  412ffa:	add    eax,0x10
  412ffd:	push   eax
  412ffe:	push   edi
  412fff:	call   0x41241b
  413004:	mov    DWORD PTR [ebp-0x2c],eax
  413007:	mov    eax,DWORD PTR [ebp+0x8]
  41300a:	mov    ecx,DWORD PTR [ebp-0x48]
  41300d:	mov    eax,DWORD PTR [eax+0x1d8]
  413013:	xor    ecx,ebx
  413015:	add    ecx,esi
  413017:	push   ecx
  413018:	mov    ecx,DWORD PTR [ebp-0x4]
  41301b:	xor    ecx,ebx
  41301d:	add    ecx,esi
  41301f:	push   ecx
  413020:	push   edi
  413021:	call   DWORD PTR [eax+0x18]
  413024:	mov    eax,DWORD PTR [ebp-0x2c]
  413027:	add    eax,0xffcd8d23
  41302c:	xor    eax,ebx
  41302e:	cmp    eax,0xf89c85b5
  413033:	mov    eax,DWORD PTR [ebp+0x8]
  413036:	mov    eax,DWORD PTR [eax+0x1d8]
  41303c:	mov    ecx,DWORD PTR [ebp-0x48]
  41303f:	jne    0x413062
  413041:	xor    ecx,ebx
  413043:	add    ecx,esi
  413045:	push   ecx
  413046:	mov    ecx,DWORD PTR [ebp-0x4]
  413049:	xor    ecx,ebx
  41304b:	add    ecx,esi
  41304d:	push   ecx
  41304e:	push   DWORD PTR [ebp-0x20]
  413051:	call   DWORD PTR [eax+0x18]
  413054:	mov    eax,DWORD PTR [ebp-0x18]
  413057:	mov    DWORD PTR [ebp-0x20],eax
  41305a:	mov    eax,DWORD PTR [ebp-0xc]
  41305d:	mov    DWORD PTR [ebp-0x30],eax
  413060:	jmp    0x413075
  413062:	xor    ecx,ebx
  413064:	add    ecx,esi
  413066:	push   ecx
  413067:	mov    ecx,DWORD PTR [ebp-0x4]
  41306a:	xor    ecx,ebx
  41306c:	add    ecx,esi
  41306e:	push   ecx
  41306f:	push   DWORD PTR [ebp-0x18]
  413072:	call   DWORD PTR [eax+0x18]
  413075:	mov    eax,DWORD PTR [ebp-0x30]
  413078:	mov    DWORD PTR [ebp-0x24],eax
  41307b:	mov    eax,DWORD PTR [ebp-0x20]
  41307e:	mov    DWORD PTR [ebp-0x1c],0xf89c85b5
  413085:	mov    DWORD PTR [ebp-0x2c],eax
  413088:	mov    ecx,0xf89c85b2
  41308d:	mov    DWORD PTR [ebp-0x14],ecx
  413090:	mov    eax,DWORD PTR [ebp-0x1c]
  413093:	xor    eax,ebx
  413095:	add    eax,esi
  413097:	mov    DWORD PTR [ebp-0x4],eax
  41309a:	mov    eax,DWORD PTR [ebp-0x1c]
  41309d:	xor    eax,ebx
  41309f:	add    eax,esi
  4130a1:	mov    DWORD PTR [ebp-0xc],eax
  4130a4:	mov    DWORD PTR [ebp-0x38],0xf89c85d5
  4130ab:	mov    DWORD PTR [ebp-0x18],0xf89c85bc
  4130b2:	mov    eax,DWORD PTR [ebp-0x1c]
  4130b5:	mov    edx,DWORD PTR [ebp-0x24]
  4130b8:	xor    eax,ebx
  4130ba:	add    eax,esi
  4130bc:	cmp    edx,eax
  4130be:	je     0x4131ed
  4130c4:	jmp    0x4131c9
  4130c9:	mov    edx,DWORD PTR [ebp-0x4]
  4130cc:	mov    eax,DWORD PTR [ebp-0x24]
  4130cf:	mov    edi,DWORD PTR [ebp-0x38]
  4130d2:	sub    eax,edx
  4130d4:	xor    edi,ebx
  4130d6:	xor    edx,edx
  4130d8:	add    edi,esi
  4130da:	div    edi
  4130dc:	mov    DWORD PTR [ebp-0xc],eax
  4130df:	mov    eax,DWORD PTR [ebp-0x18]
  4130e2:	mov    edx,DWORD PTR [ebp-0xc]
  4130e5:	xor    eax,ebx
  4130e7:	add    eax,esi
  4130e9:	cmp    edx,eax
  4130eb:	jbe    0x4130f7
  4130ed:	mov    eax,DWORD PTR [ebp-0x18]
  4130f0:	xor    eax,ebx
  4130f2:	add    eax,esi
  4130f4:	mov    DWORD PTR [ebp-0xc],eax
  4130f7:	mov    eax,DWORD PTR [ebp-0x38]
  4130fa:	mov    edx,DWORD PTR [ebp-0xc]
  4130fd:	xor    eax,ebx
  4130ff:	add    eax,esi
  413101:	imul   eax,edx
  413104:	mov    DWORD PTR [ebp-0xc],eax
  413107:	mov    eax,DWORD PTR [ebp-0x1c]
  41310a:	mov    edx,DWORD PTR [ebp-0xc]
  41310d:	xor    eax,ebx
  41310f:	add    eax,esi
  413111:	cmp    edx,eax
  413113:	je     0x4131b7
  413119:	mov    eax,DWORD PTR [ebp-0xc]
  41311c:	mov    DWORD PTR [ebp-0xc],eax
  41311f:	mov    eax,DWORD PTR [ebp-0x4]
  413122:	add    eax,DWORD PTR [ebp-0x2c]
  413125:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  41312c:	mov    DWORD PTR [ebp-0x40],ecx
  41312f:	mov    DWORD PTR [ebp-0x3c],0xf89c85b3
  413136:	mov    DWORD PTR [ebp-0x28],eax
  413139:	mov    DWORD PTR [ebp-0x88],0xf89c85b0
  413143:	mov    DWORD PTR [ebp-0x3c],ecx
  413146:	mov    eax,DWORD PTR [ebp-0x44]
  413149:	xor    eax,ebx
  41314b:	add    eax,esi
  41314d:	jmp    0x41317a
  41314f:	mov    eax,DWORD PTR [ebp-0x3c]
  413152:	mov    edx,DWORD PTR [ebp-0x10]
  413155:	xor    eax,ebx
  413157:	add    eax,esi
  413159:	imul   eax,edx
  41315c:	mov    edx,DWORD PTR [ebp-0x28]
  41315f:	mov    BYTE PTR [eax+edx*1],0x0
  413163:	mov    eax,DWORD PTR [ebp-0x88]
  413169:	mov    edx,DWORD PTR [ebp-0x40]
  41316c:	xor    eax,ebx
  41316e:	xor    edx,ebx
  413170:	add    eax,esi
  413172:	add    edx,esi
  413174:	imul   eax,edx
  413177:	add    eax,DWORD PTR [ebp-0x10]
  41317a:	mov    DWORD PTR [ebp-0x10],eax
  41317d:	mov    eax,DWORD PTR [ebp-0x10]
  413180:	mov    edx,DWORD PTR [ebp-0xc]
  413183:	cmp    edx,eax
  413185:	jb     0x41314f
  413187:	mov    eax,DWORD PTR [ebp-0x40]
  41318a:	mov    edx,DWORD PTR [ebp-0xc]
  41318d:	xor    eax,ebx
  41318f:	add    eax,esi
  413191:	imul   eax,edx
  413194:	mov    edx,DWORD PTR [ebp-0x44]
  413197:	xor    edx,ebx
  413199:	add    edx,esi
  41319b:	or     eax,edx
  41319d:	mov    edx,DWORD PTR [ebp-0x14]
  4131a0:	xor    edx,ebx
  4131a2:	add    eax,edx
  4131a4:	mov    edx,DWORD PTR [ebp-0x14]
  4131a7:	xor    edx,ebx
  4131a9:	add    eax,edx
  4131ab:	mov    edx,DWORD PTR [ebp-0x4]
  4131ae:	lea    eax,[eax+edx*1+0x64e5ba]
  4131b5:	jmp    0x4131c6
  4131b7:	mov    eax,DWORD PTR [ebp-0x14]
  4131ba:	mov    edx,DWORD PTR [ebp-0x4]
  4131bd:	xor    eax,ebx
  4131bf:	lea    eax,[eax+edx*1+0x3272dd]
  4131c6:	mov    DWORD PTR [ebp-0x4],eax
  4131c9:	mov    eax,DWORD PTR [ebp-0x14]
  4131cc:	xor    eax,ebx
  4131ce:	mov    edx,0xffcd8d23
  4131d3:	sub    edx,eax
  4131d5:	add    edx,DWORD PTR [ebp-0x24]
  4131d8:	mov    eax,DWORD PTR [ebp-0x14]
  4131db:	mov    edi,DWORD PTR [ebp-0x4]
  4131de:	xor    eax,ebx
  4131e0:	add    eax,esi
  4131e2:	imul   eax,edi
  4131e5:	cmp    eax,edx
  4131e7:	jbe    0x4130c9
  4131ed:	push   DWORD PTR [ebp+0x8]
  4131f0:	mov    eax,DWORD PTR [ebp+0x8]
  4131f3:	push   DWORD PTR [eax+0x1cc]
  4131f9:	lea    eax,[ebp-0xa0]
  4131ff:	push   eax
  413200:	mov    eax,DWORD PTR [ebp+0x8]
  413203:	mov    eax,DWORD PTR [eax+0x1c4]
  413209:	push   DWORD PTR [eax]
  41320b:	mov    eax,DWORD PTR [ebp+0x8]
  41320e:	mov    eax,DWORD PTR [eax+0x1c0]
  413214:	push   DWORD PTR [eax]
  413216:	push   DWORD PTR [ebp-0x30]
  413219:	push   DWORD PTR [ebp-0x20]
  41321c:	call   0x413cf2
  413221:	mov    DWORD PTR [ebp-0x2c],eax
  413224:	mov    eax,DWORD PTR [ebp-0x8]
  413227:	mov    ecx,DWORD PTR [ebp-0x20]
  41322a:	xor    eax,ebx
  41322c:	add    eax,esi
  41322e:	cmp    eax,ecx
  413230:	je     0x413251
  413232:	mov    eax,DWORD PTR [ebp+0x8]
  413235:	mov    ecx,DWORD PTR [ebp-0x48]
  413238:	mov    eax,DWORD PTR [eax+0x1d8]
  41323e:	xor    ecx,ebx
  413240:	add    ecx,esi
  413242:	push   ecx
  413243:	mov    ecx,DWORD PTR [ebp-0x8]
  413246:	xor    ecx,ebx
  413248:	add    ecx,esi
  41324a:	push   ecx
  41324b:	push   DWORD PTR [ebp-0x20]
  41324e:	call   DWORD PTR [eax+0x18]
  413251:	pop    edi
  413252:	pop    esi
  413253:	pop    ebx
  413254:	leave  
  413255:	ret    0x4
  413258:	push   ebp
  413259:	mov    ebp,esp
  41325b:	push   ecx
  41325c:	push   ecx
  41325d:	lea    eax,[ebp-0x8]
  413260:	mov    DWORD PTR [ebp-0x4],eax
  413263:	push   esi
  413264:	mov    esi,DWORD PTR [ebp-0x4]
  413267:	mov    eax,0xf881ba0f
  41326c:	mov    DWORD PTR [esi],eax
  41326e:	mov    esi,DWORD PTR [ebp-0x8]
  413271:	cmp    esi,eax
  413273:	pop    esi
  413274:	jne    0x41327e
  413276:	mov    BYTE PTR [ecx+0xa],0x7a
  41327a:	mov    BYTE PTR [edx+0x8],0x2f
  41327e:	mov    BYTE PTR [edx+0xa],0x7a
  413282:	mov    BYTE PTR [ecx+0x2],0x8
  413286:	leave  
  413287:	ret    
  413288:	push   ebp
  413289:	mov    ebp,esp
  41328b:	push   ecx
  41328c:	push   ecx
  41328d:	lea    eax,[ebp-0x8]
  413290:	mov    DWORD PTR [ebp-0x4],eax
  413293:	mov    edx,DWORD PTR [ebp-0x4]
  413296:	mov    eax,0xf88b0beb
  41329b:	mov    DWORD PTR [edx],eax
  41329d:	mov    edx,DWORD PTR [ebp-0x8]
  4132a0:	cmp    edx,eax
  4132a2:	jne    0x4132b3
  4132a4:	mov    eax,DWORD PTR [ebp+0x8]
  4132a7:	mov    BYTE PTR [ecx+0x9],0xe
  4132ab:	mov    BYTE PTR [eax+0x7],0x47
  4132af:	mov    BYTE PTR [ecx+0x6],0xf
  4132b3:	mov    BYTE PTR [ecx+0x3],0x1e
  4132b7:	leave  
  4132b8:	ret    0x4
  4132bb:	push   ebp
  4132bc:	mov    ebp,esp
  4132be:	push   ecx
  4132bf:	push   ecx
  4132c0:	lea    eax,[ebp-0x8]
  4132c3:	mov    DWORD PTR [ebp-0x4],eax
  4132c6:	mov    edx,DWORD PTR [ebp-0x4]
  4132c9:	mov    eax,0x7e0da0f
  4132ce:	mov    DWORD PTR [edx],eax
  4132d0:	mov    edx,DWORD PTR [ebp-0x8]
  4132d3:	cmp    edx,eax
  4132d5:	jne    0x4132db
  4132d7:	mov    BYTE PTR [ecx+0x7],0x47
  4132db:	mov    eax,DWORD PTR [ebp+0x8]
  4132de:	mov    BYTE PTR [ecx+0x1],0x5
  4132e2:	mov    BYTE PTR [eax+0x9],0x2e
  4132e6:	leave  
  4132e7:	ret    0x4
  4132ea:	push   ebp
  4132eb:	mov    ebp,esp
  4132ed:	push   ecx
  4132ee:	push   ecx
  4132ef:	lea    eax,[ebp-0x8]
  4132f2:	mov    DWORD PTR [ebp-0x4],eax
  4132f5:	push   esi
  4132f6:	mov    esi,DWORD PTR [ebp-0x4]
  4132f9:	mov    eax,0x7060e3c
  4132fe:	mov    DWORD PTR [esi],eax
  413300:	mov    esi,DWORD PTR [ebp-0x8]
  413303:	cmp    esi,eax
  413305:	pop    esi
  413306:	jne    0x413312
  413308:	mov    BYTE PTR [edx+0x4],0xb
  41330c:	mov    WORD PTR [ecx+0x3],0xb1e
  413312:	mov    BYTE PTR [edx],0x3f
  413315:	leave  
  413316:	ret    
  413317:	push   ebp
  413318:	mov    ebp,esp
  41331a:	push   ecx
  41331b:	push   ecx
  41331c:	lea    eax,[ebp-0x8]
  41331f:	mov    DWORD PTR [ebp-0x4],eax
  413322:	mov    edx,DWORD PTR [ebp-0x4]
  413325:	mov    eax,0xf8870b3f
  41332a:	mov    DWORD PTR [edx],eax
  41332c:	mov    edx,DWORD PTR [ebp-0x8]
  41332f:	cmp    edx,eax
  413331:	jne    0x41333e
  413333:	mov    eax,DWORD PTR [ebp+0x8]
  413336:	mov    BYTE PTR [ecx+0x8],0xf
  41333a:	mov    BYTE PTR [eax+0x1],0x5
  41333e:	mov    BYTE PTR [ecx+0x5],0xf3
  413342:	leave  
  413343:	ret    0x4
  413346:	push   esi
  413347:	mov    ecx,edi
  413349:	call   0x413317
  41334e:	mov    edx,edi
  413350:	mov    ecx,esi
  413352:	mov    BYTE PTR [esi],0x1f
  413355:	call   0x4132ea
  41335a:	push   esi
  41335b:	mov    ecx,edi
  41335d:	mov    BYTE PTR [esi+0x5],0xf3
  413361:	call   0x4132bb
  413366:	push   esi
  413367:	mov    BYTE PTR [esi+0x6],0xf
  41336b:	call   0x413288
  413370:	mov    BYTE PTR [esi+0x2],0x8
  413374:	mov    edx,esi
  413376:	jmp    0x413258
  41337b:	push   ebp
  41337c:	mov    ebp,esp
  41337e:	push   ecx
  41337f:	mov    ecx,DWORD PTR [edx+0x194]
  413385:	push   esi
  413386:	mov    esi,DWORD PTR [ebp+0x8]
  413389:	mov    esi,DWORD PTR [esi]
  41338b:	mov    DWORD PTR [ecx],esi
  41338d:	mov    ecx,DWORD PTR [edx+0x194]
  413393:	mov    ecx,DWORD PTR [ecx]
  413395:	mov    esi,DWORD PTR [edx+0x190]
  41339b:	mov    DWORD PTR [esi],ecx
  41339d:	mov    eax,DWORD PTR [edx+0x194]
  4133a3:	mov    ecx,DWORD PTR [eax]
  4133a5:	mov    ecx,DWORD PTR [ecx+0x3c]
  4133a8:	add    ecx,DWORD PTR [eax]
  4133aa:	mov    DWORD PTR [ebp-0x4],0xf89ca5b5
  4133b1:	mov    eax,DWORD PTR [ebp-0x4]
  4133b4:	movzx  ecx,WORD PTR [ecx+0x16]
  4133b8:	xor    eax,0x7510896
  4133bd:	add    eax,0x3272dd
  4133c2:	pop    esi
  4133c3:	test   ecx,eax
  4133c5:	je     0x4133d3
  4133c7:	mov    eax,DWORD PTR [edx+0x1c8]
  4133cd:	mov    DWORD PTR [eax],0xf89c85b2
  4133d3:	leave  
  4133d4:	ret    0x4
  4133d7:	push   ebp
  4133d8:	mov    ebp,esp
  4133da:	sub    esp,0x70
  4133dd:	and    DWORD PTR [ebp-0x20],0x0
  4133e1:	mov    DWORD PTR [ebp-0x18],0xf89cb5b5
  4133e8:	mov    DWORD PTR [ebp-0x1c],0xf89c85f5
  4133ef:	mov    DWORD PTR [ebp-0x2c],0xf89c85b1
  4133f6:	mov    DWORD PTR [ebp-0x14],0xf89c85b3
  4133fd:	mov    DWORD PTR [ebp-0x2c],0xf89f05b5
  413404:	mov    eax,DWORD PTR [ebp+0x20]
  413407:	mov    eax,DWORD PTR [eax+0x194]
  41340d:	mov    DWORD PTR [ebp-0xc],eax
  413410:	mov    eax,DWORD PTR [ebp+0x20]
  413413:	push   ebx
  413414:	push   esi
  413415:	mov    esi,DWORD PTR [eax+0x190]
  41341b:	mov    eax,DWORD PTR [ebp+0x20]
  41341e:	mov    eax,DWORD PTR [eax+0x18c]
  413424:	mov    DWORD PTR [ebp-0x8],eax
  413427:	mov    eax,DWORD PTR [eax]
  413429:	push   edi
  41342a:	mov    DWORD PTR [ebp-0x4],esi
  41342d:	test   eax,eax
  41342f:	jne    0x41343c
  413431:	push   DWORD PTR [ebp+0x1c]
  413434:	mov    edx,DWORD PTR [ebp+0x20]
  413437:	call   0x41337b
  41343c:	mov    eax,DWORD PTR [esi]
  41343e:	mov    ebx,DWORD PTR [esi]
  413440:	add    ebx,DWORD PTR [eax+0x3c]
  413443:	mov    eax,DWORD PTR [ebp+0xc]
  413446:	mov    ecx,DWORD PTR [ebp-0x8]
  413449:	mov    ecx,DWORD PTR [ecx]
  41344b:	mov    esi,0x7510896
  413450:	xor    eax,esi
  413452:	mov    edi,0x3272dd
  413457:	add    eax,edi
  413459:	cmp    eax,ecx
  41345b:	jne    0x413693
  413461:	mov    eax,DWORD PTR [ebp-0xc]
  413464:	mov    eax,DWORD PTR [eax]
  413466:	mov    DWORD PTR [ebp-0x10],eax
  413469:	mov    eax,DWORD PTR [ebx+0x50]
  41346c:	mov    DWORD PTR [ebp-0x68],eax
  41346f:	mov    eax,DWORD PTR [ebp-0x18]
  413472:	xor    eax,esi
  413474:	add    eax,edi
  413476:	mov    DWORD PTR [ebp-0x64],eax
  413479:	mov    eax,DWORD PTR [ebp-0x14]
  41347c:	and    DWORD PTR [ebp-0x6c],0x0
  413480:	xor    eax,esi
  413482:	add    eax,edi
  413484:	mov    DWORD PTR [ebp-0x60],eax
  413487:	lea    eax,[ebp-0x70]
  41348a:	push   eax
  41348b:	mov    eax,DWORD PTR [ebp+0x8]
  41348e:	xor    eax,esi
  413490:	add    eax,edi
  413492:	push   eax
  413493:	mov    eax,DWORD PTR [ebp+0x20]
  413496:	add    eax,0xaa
  41349b:	push   eax
  41349c:	mov    eax,DWORD PTR [ebp+0x20]
  41349f:	mov    eax,DWORD PTR [eax+0x198]
  4134a5:	mov    DWORD PTR [ebp-0x70],0x4
  4134ac:	push   DWORD PTR [eax]
  4134ae:	mov    eax,DWORD PTR [ebp+0x10]
  4134b1:	call   eax
  4134b3:	mov    ecx,DWORD PTR [ebp-0xc]
  4134b6:	mov    ecx,DWORD PTR [ecx]
  4134b8:	mov    edx,DWORD PTR [ebp-0x8]
  4134bb:	mov    DWORD PTR [ebp-0x6c],eax
  4134be:	mov    DWORD PTR [ebp+0x1c],eax
  4134c1:	mov    DWORD PTR [edx],ecx
  4134c3:	mov    ecx,DWORD PTR [ebp-0x4]
  4134c6:	mov    DWORD PTR [ecx],eax
  4134c8:	mov    eax,DWORD PTR [ebx+0x50]
  4134cb:	mov    DWORD PTR [ebp-0x68],eax
  4134ce:	mov    eax,DWORD PTR [ebp-0x1c]
  4134d1:	xor    eax,esi
  4134d3:	add    eax,edi
  4134d5:	mov    DWORD PTR [ebp-0x64],eax
  4134d8:	lea    eax,[ebp-0x20]
  4134db:	mov    DWORD PTR [ebp-0x60],eax
  4134de:	lea    eax,[ebp-0x70]
  4134e1:	push   eax
  4134e2:	mov    eax,DWORD PTR [ebp+0x8]
  4134e5:	xor    eax,esi
  4134e7:	add    eax,edi
  4134e9:	push   eax
  4134ea:	mov    eax,DWORD PTR [ebp+0x20]
  4134ed:	add    eax,0xee
  4134f2:	push   eax
  4134f3:	mov    eax,DWORD PTR [ebp+0x20]
  4134f6:	mov    eax,DWORD PTR [eax+0x198]
  4134fc:	mov    DWORD PTR [ebp-0x70],0x4
  413503:	push   DWORD PTR [eax]
  413505:	mov    eax,DWORD PTR [ebp+0x10]
  413508:	call   eax
  41350a:	test   eax,eax
  41350c:	je     0x413531
  41350e:	and    DWORD PTR [ebp+0xc],0x0
  413512:	cmp    DWORD PTR [ebx+0x50],0x0
  413516:	jbe    0x413531
  413518:	mov    eax,DWORD PTR [ebp+0x1c]
  41351b:	mov    ecx,DWORD PTR [ebp-0x10]
  41351e:	sub    ecx,eax
  413520:	mov    dl,BYTE PTR [ecx+eax*1]
  413523:	inc    DWORD PTR [ebp+0xc]
  413526:	mov    BYTE PTR [eax],dl
  413528:	mov    edx,DWORD PTR [ebp+0xc]
  41352b:	inc    eax
  41352c:	cmp    edx,DWORD PTR [ebx+0x50]
  41352f:	jb     0x413520
  413531:	mov    edx,DWORD PTR [ebp+0x1c]
  413534:	mov    ecx,DWORD PTR [edx+0x3c]
  413537:	add    ecx,edx
  413539:	mov    eax,DWORD PTR [ecx+0xa0]
  41353f:	mov    ebx,DWORD PTR [ecx+0x28]
  413542:	add    eax,edx
  413544:	sub    edx,DWORD PTR [ebp-0x10]
  413547:	add    ebx,DWORD PTR [ebp+0x1c]
  41354a:	mov    DWORD PTR [ebp+0xc],edx
  41354d:	mov    DWORD PTR [ebp-0x2c],ecx
  413550:	mov    DWORD PTR [ebp-0x14],ebx
  413553:	mov    DWORD PTR [ebp-0x8],0x0
  41355a:	jmp    0x4135d6
  41355c:	add    edx,0xfffffff8
  41355f:	shr    edx,1
  413561:	mov    DWORD PTR [ebp-0x18],edx
  413564:	je     0x4135c2
  413566:	lea    edx,[eax+0x8]
  413569:	mov    DWORD PTR [ebp-0x4],edx
  41356c:	mov    edx,DWORD PTR [ebp-0x18]
  41356f:	mov    DWORD PTR [ebp-0x18],edx
  413572:	mov    edx,DWORD PTR [ebp-0x4]
  413575:	movzx  edx,WORD PTR [edx]
  413578:	mov    DWORD PTR [ebp-0x24],edx
  41357b:	and    edx,0xfff
  413581:	mov    DWORD PTR [ebp-0x28],edx
  413584:	mov    edx,DWORD PTR [ebp-0x24]
  413587:	shr    edx,0xc
  41358a:	add    edx,0xffcd8d23
  413590:	xor    edx,esi
  413592:	cmp    edx,0xf89c85b0
  413598:	jne    0x4135b9
  41359a:	mov    edx,DWORD PTR [ebp-0x28]
  41359d:	add    edx,DWORD PTR [ebp+0x1c]
  4135a0:	mov    ebx,DWORD PTR [eax]
  4135a2:	cmp    DWORD PTR [ebx+edx*1],0x0
  4135a6:	je     0x4135b6
  4135a8:	mov    ecx,DWORD PTR [ebp+0xc]
  4135ab:	add    ecx,DWORD PTR [ebx+edx*1]
  4135ae:	mov    ebx,DWORD PTR [eax]
  4135b0:	mov    DWORD PTR [edx+ebx*1],ecx
  4135b3:	mov    ecx,DWORD PTR [ebp-0x2c]
  4135b6:	mov    ebx,DWORD PTR [ebp-0x14]
  4135b9:	add    DWORD PTR [ebp-0x4],0x2
  4135bd:	dec    DWORD PTR [ebp-0x18]
  4135c0:	jne    0x413572
  4135c2:	mov    edx,DWORD PTR [ebp-0xc]
  4135c5:	add    DWORD PTR [ebp-0x8],edx
  4135c8:	mov    edx,DWORD PTR [ebp-0x8]
  4135cb:	cmp    edx,DWORD PTR [ecx+0xa4]
  4135d1:	jae    0x4135e4
  4135d3:	add    eax,DWORD PTR [ebp-0xc]
  4135d6:	mov    edx,DWORD PTR [eax+0x4]
  4135d9:	mov    DWORD PTR [ebp-0xc],edx
  4135dc:	test   edx,edx
  4135de:	jne    0x41355c
  4135e4:	mov    eax,DWORD PTR [ebp-0x10]
  4135e7:	mov    DWORD PTR [ebp-0x6c],eax
  4135ea:	mov    DWORD PTR [ebp-0x70],0x4
  4135f1:	mov    eax,DWORD PTR [ecx+0x50]
  4135f4:	mov    DWORD PTR [ebp-0x68],eax
  4135f7:	mov    eax,DWORD PTR [ebp-0x1c]
  4135fa:	xor    eax,esi
  4135fc:	add    eax,edi
  4135fe:	mov    DWORD PTR [ebp-0x64],eax
  413601:	lea    eax,[ebp-0x20]
  413604:	mov    DWORD PTR [ebp-0x60],eax
  413607:	lea    eax,[ebp-0x70]
  41360a:	push   eax
  41360b:	mov    eax,DWORD PTR [ebp+0x8]
  41360e:	xor    eax,esi
  413610:	add    eax,edi
  413612:	push   eax
  413613:	mov    eax,DWORD PTR [ebp+0x20]
  413616:	add    eax,0xee
  41361b:	push   eax
  41361c:	mov    eax,DWORD PTR [ebp+0x20]
  41361f:	mov    eax,DWORD PTR [eax+0x198]
  413625:	push   DWORD PTR [eax]
  413627:	mov    eax,DWORD PTR [ebp+0x10]
  41362a:	call   eax
  41362c:	mov    eax,DWORD PTR [ebp+0x20]
  41362f:	mov    eax,DWORD PTR [eax+0x180]
  413635:	add    eax,DWORD PTR [ebp+0xc]
  413638:	mov    ecx,DWORD PTR [ebp+0xc]
  41363b:	push   DWORD PTR [ebp+0x18]
  41363e:	mov    DWORD PTR [eax],ecx
  413640:	push   DWORD PTR [ebp+0x14]
  413643:	push   DWORD PTR [ebp+0x1c]
  413646:	call   ebx
  413648:	mov    eax,DWORD PTR [ebp+0xc]
  41364b:	add    eax,DWORD PTR [ebp+0x20]
  41364e:	lea    ecx,[ebp+0x4]
  413651:	mov    DWORD PTR [ebp+0x20],eax
  413654:	mov    eax,DWORD PTR [ebp+0x20]
  413657:	mov    eax,DWORD PTR [ebp+0x20]
  41365a:	mov    edx,DWORD PTR [eax+0x190]
  413660:	mov    eax,DWORD PTR [ebp+0x20]
  413663:	mov    eax,DWORD PTR [eax+0x18c]
  413669:	mov    esi,DWORD PTR [eax]
  41366b:	cmp    DWORD PTR [ecx],esi
  41366d:	jb     0x41368e
  41366f:	mov    esi,DWORD PTR [edx]
  413671:	mov    edi,DWORD PTR [edx]
  413673:	mov    esi,DWORD PTR [esi+0x3c]
  413676:	lea    esi,[edi+esi*1+0x50]
  41367a:	mov    edi,DWORD PTR [eax]
  41367c:	add    edi,DWORD PTR [esi]
  41367e:	cmp    DWORD PTR [ecx],edi
  413680:	jae    0x41368e
  413682:	mov    esi,DWORD PTR [eax]
  413684:	mov    eax,DWORD PTR [ecx]
  413686:	mov    edx,DWORD PTR [edx]
  413688:	sub    eax,esi
  41368a:	add    edx,eax
  41368c:	mov    DWORD PTR [ecx],edx
  41368e:	mov    eax,DWORD PTR [ebp+0xc]
  413691:	jmp    0x4136d4
  413693:	push   DWORD PTR [ebp+0x20]
  413696:	call   0x412804
  41369b:	mov    eax,DWORD PTR [ebp+0x20]
  41369e:	mov    eax,DWORD PTR [eax+0x1c8]
  4136a4:	mov    eax,DWORD PTR [eax]
  4136a6:	xor    eax,esi
  4136a8:	add    eax,edi
  4136aa:	mov    eax,DWORD PTR [ebp+0x20]
  4136ad:	jne    0x4136c5
  4136af:	mov    ecx,DWORD PTR [ebp+0x20]
  4136b2:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4136b8:	push   DWORD PTR [ecx]
  4136ba:	mov    eax,DWORD PTR [eax+0x1d8]
  4136c0:	call   DWORD PTR [eax+0x28]
  4136c3:	jmp    0x4136d2
  4136c5:	mov    eax,DWORD PTR [eax+0x17c]
  4136cb:	mov    ecx,DWORD PTR [eax]
  4136cd:	lea    eax,[ebp+0x4]
  4136d0:	add    DWORD PTR [eax],ecx
  4136d2:	xor    eax,eax
  4136d4:	pop    edi
  4136d5:	pop    esi
  4136d6:	pop    ebx
  4136d7:	leave  
  4136d8:	ret    0x1c
  4136db:	push   ebp
  4136dc:	mov    ebp,esp
  4136de:	sub    esp,0x1c
  4136e1:	push   esi
  4136e2:	mov    esi,eax
  4136e4:	mov    eax,DWORD PTR [ecx+0x190]
  4136ea:	cmp    DWORD PTR [eax],0x0
  4136ed:	je     0x4137fd
  4136f3:	test   edx,edx
  4136f5:	je     0x4137fd
  4136fb:	test   esi,esi
  4136fd:	je     0x4137fd
  413703:	mov    eax,DWORD PTR [esi+0x88]
  413709:	test   eax,eax
  41370b:	je     0x4137f8
  413711:	cmp    DWORD PTR [esi+0x8c],0x10
  413718:	je     0x4137f8
  41371e:	cmp    DWORD PTR [esi+0x34],edx
  413721:	je     0x4137f8
  413727:	mov    esi,DWORD PTR [ecx+0x18c]
  41372d:	and    DWORD PTR [ebp-0x10],0x0
  413731:	mov    ecx,edx
  413733:	sub    ecx,DWORD PTR [esi]
  413735:	add    eax,edx
  413737:	movzx  edx,WORD PTR [eax+0xc]
  41373b:	mov    DWORD PTR [ebp-0x1c],ecx
  41373e:	movzx  ecx,WORD PTR [eax+0xe]
  413742:	add    ecx,edx
  413744:	je     0x4137f8
  41374a:	lea    ecx,[eax+0x14]
  41374d:	push   ebx
  41374e:	mov    DWORD PTR [ebp-0x18],ecx
  413751:	mov    esi,0x7fffffff
  413756:	push   edi
  413757:	test   DWORD PTR [ecx],esi
  413759:	je     0x4137da
  41375b:	mov    edx,DWORD PTR [ecx]
  41375d:	and    DWORD PTR [ebp-0xc],0x0
  413761:	and    edx,esi
  413763:	add    edx,eax
  413765:	movzx  edi,WORD PTR [edx+0xe]
  413769:	movzx  ebx,WORD PTR [edx+0xc]
  41376d:	add    edi,ebx
  41376f:	je     0x4137da
  413771:	lea    ecx,[edx+0x14]
  413774:	mov    DWORD PTR [ebp-0x14],ecx
  413777:	test   DWORD PTR [ecx],esi
  413779:	je     0x4137bc
  41377b:	mov    ecx,DWORD PTR [ecx]
  41377d:	and    DWORD PTR [ebp-0x8],0x0
  413781:	and    ecx,esi
  413783:	add    ecx,eax
  413785:	movzx  edi,WORD PTR [ecx+0xe]
  413789:	movzx  ebx,WORD PTR [ecx+0xc]
  41378d:	add    edi,ebx
  41378f:	je     0x4137bc
  413791:	lea    edi,[ecx+0x14]
  413794:	mov    DWORD PTR [ebp-0x4],edi
  413797:	mov    edi,DWORD PTR [ebp-0x4]
  41379a:	mov    edi,DWORD PTR [edi]
  41379c:	test   edi,edi
  41379e:	je     0x4137a6
  4137a0:	mov    ebx,DWORD PTR [ebp-0x1c]
  4137a3:	add    DWORD PTR [edi+eax*1],ebx
  4137a6:	movzx  edi,WORD PTR [ecx+0xe]
  4137aa:	movzx  ebx,WORD PTR [ecx+0xc]
  4137ae:	inc    DWORD PTR [ebp-0x8]
  4137b1:	add    DWORD PTR [ebp-0x4],0x8
  4137b5:	add    edi,ebx
  4137b7:	cmp    DWORD PTR [ebp-0x8],edi
  4137ba:	jb     0x413797
  4137bc:	movzx  edi,WORD PTR [edx+0xe]
  4137c0:	movzx  ebx,WORD PTR [edx+0xc]
  4137c4:	mov    ecx,DWORD PTR [ebp-0x14]
  4137c7:	inc    DWORD PTR [ebp-0xc]
  4137ca:	add    ecx,0x8
  4137cd:	add    edi,ebx
  4137cf:	mov    DWORD PTR [ebp-0x14],ecx
  4137d2:	cmp    DWORD PTR [ebp-0xc],edi
  4137d5:	jb     0x413777
  4137d7:	mov    ecx,DWORD PTR [ebp-0x18]
  4137da:	movzx  edx,WORD PTR [eax+0xe]
  4137de:	movzx  edi,WORD PTR [eax+0xc]
  4137e2:	inc    DWORD PTR [ebp-0x10]
  4137e5:	add    ecx,0x8
  4137e8:	add    edx,edi
  4137ea:	mov    DWORD PTR [ebp-0x18],ecx
  4137ed:	cmp    DWORD PTR [ebp-0x10],edx
  4137f0:	jb     0x413757
  4137f6:	pop    edi
  4137f7:	pop    ebx
  4137f8:	xor    eax,eax
  4137fa:	inc    eax
  4137fb:	jmp    0x4137ff
  4137fd:	xor    eax,eax
  4137ff:	pop    esi
  413800:	leave  
  413801:	ret    
  413802:	push   ebp
  413803:	mov    ebp,esp
  413805:	mov    ecx,DWORD PTR [ecx+0x190]
  41380b:	mov    eax,DWORD PTR [ebp+0xc]
  41380e:	sub    esp,0x10
  413811:	push   ebx
  413812:	xor    ebx,ebx
  413814:	push   esi
  413815:	push   edi
  413816:	cmp    DWORD PTR [ecx],ebx
  413818:	je     0x4138a0
  41381e:	cmp    eax,ebx
  413820:	je     0x4138a0
  413822:	cmp    DWORD PTR [eax+0x78],ebx
  413825:	jne    0x41382c
  413827:	xor    eax,eax
  413829:	inc    eax
  41382a:	jmp    0x4138a2
  41382c:	mov    eax,DWORD PTR [eax+0x78]
  41382f:	add    eax,DWORD PTR [ebp+0x8]
  413832:	mov    ecx,DWORD PTR [eax+0x1c]
  413835:	mov    edx,DWORD PTR [eax+0x24]
  413838:	mov    esi,DWORD PTR [eax+0x14]
  41383b:	mov    edi,DWORD PTR [eax+0x18]
  41383e:	add    ecx,DWORD PTR [ebp+0x8]
  413841:	add    edx,DWORD PTR [ebp+0x8]
  413844:	mov    DWORD PTR [ebp-0x4],esi
  413847:	cmp    esi,edi
  413849:	ja     0x41384e
  41384b:	mov    DWORD PTR [ebp-0x4],edi
  41384e:	mov    DWORD PTR [ebp-0x8],ebx
  413851:	cmp    DWORD PTR [ebp-0x4],ebx
  413854:	jbe    0x413827
  413856:	cmp    ebx,DWORD PTR [eax+0x14]
  413859:	jae    0x413861
  41385b:	movzx  esi,WORD PTR [edx+ebx*2]
  41385f:	jmp    0x413863
  413861:	mov    esi,ebx
  413863:	lea    esi,[ecx+esi*4]
  413866:	mov    edi,DWORD PTR [esi]
  413868:	test   edi,edi
  41386a:	je     0x413895
  41386c:	add    edi,DWORD PTR [ebp+0x8]
  41386f:	mov    DWORD PTR [ebp-0x10],edi
  413872:	cmp    edi,eax
  413874:	jbe    0x413886
  413876:	mov    ebx,DWORD PTR [ebp+0xc]
  413879:	mov    ebx,DWORD PTR [ebx+0x7c]
  41387c:	add    ebx,eax
  41387e:	cmp    edi,ebx
  413880:	jae    0x413886
  413882:	mov    esi,DWORD PTR [esi]
  413884:	jmp    0x41388e
  413886:	sub    edi,DWORD PTR [ebp+0x8]
  413889:	mov    DWORD PTR [esi],edi
  41388b:	mov    esi,DWORD PTR [ebp-0x10]
  41388e:	test   esi,esi
  413890:	je     0x4138a0
  413892:	mov    ebx,DWORD PTR [ebp-0x8]
  413895:	inc    ebx
  413896:	mov    DWORD PTR [ebp-0x8],ebx
  413899:	cmp    ebx,DWORD PTR [ebp-0x4]
  41389c:	jb     0x413856
  41389e:	jmp    0x413827
  4138a0:	xor    eax,eax
  4138a2:	pop    edi
  4138a3:	pop    esi
  4138a4:	pop    ebx
  4138a5:	leave  
  4138a6:	ret    0x8
  4138a9:	push   ebp
  4138aa:	mov    ebp,esp
  4138ac:	sub    esp,0x2c
  4138af:	mov    edx,0xf89c85b5
  4138b4:	mov    DWORD PTR [ebp-0x4],edx
  4138b7:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  4138be:	mov    eax,DWORD PTR [ebp-0x4]
  4138c1:	mov    ecx,DWORD PTR [ebp-0x4]
  4138c4:	mov    ecx,DWORD PTR [ebp-0x4]
  4138c7:	mov    ecx,DWORD PTR [ebp-0x4]
  4138ca:	mov    ecx,DWORD PTR [ebp-0x4]
  4138cd:	mov    ecx,DWORD PTR [ebp-0x4]
  4138d0:	push   ebx
  4138d1:	mov    ebx,DWORD PTR [ebp+0x10]
  4138d4:	push   esi
  4138d5:	mov    esi,0x7510896
  4138da:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  4138e1:	mov    ecx,DWORD PTR [ebp-0x4]
  4138e4:	mov    ebx,DWORD PTR [ebx+0x190]
  4138ea:	push   edi
  4138eb:	mov    edi,0x3272dd
  4138f0:	xor    ecx,esi
  4138f2:	xor    eax,esi
  4138f4:	add    eax,edi
  4138f6:	add    ecx,edi
  4138f8:	mov    DWORD PTR [ebp-0x18],eax
  4138fb:	cmp    ecx,DWORD PTR [ebx]
  4138fd:	je     0x413b7e
  413903:	mov    ebx,DWORD PTR [ebp-0x4]
  413906:	mov    ecx,DWORD PTR [ebp+0xc]
  413909:	xor    ebx,esi
  41390b:	add    ebx,edi
  41390d:	cmp    ebx,ecx
  41390f:	je     0x413b7e
  413915:	mov    ebx,DWORD PTR [ebp-0x4]
  413918:	mov    ecx,DWORD PTR [ecx+0x80]
  41391e:	xor    ebx,esi
  413920:	add    ebx,edi
  413922:	cmp    ecx,ebx
  413924:	je     0x413b79
  41392a:	add    ecx,DWORD PTR [ebp+0x8]
  41392d:	mov    DWORD PTR [ebp-0x2c],ecx
  413930:	mov    ebx,edx
  413932:	xor    ebx,esi
  413934:	add    ebx,edi
  413936:	mov    DWORD PTR [ebp-0x10],ebx
  413939:	mov    ebx,DWORD PTR [ebp-0x10]
  41393c:	cmp    ebx,edx
  41393e:	je     0x413952
  413940:	mov    edx,DWORD PTR [ebp-0x10]
  413943:	mov    ebx,DWORD PTR [ebp-0x4]
  413946:	imul   edx,edx,0x14
  413949:	xor    ebx,esi
  41394b:	add    ebx,edi
  41394d:	cmp    DWORD PTR [edx+ecx*1],ebx
  413950:	jne    0x413969
  413952:	mov    edx,DWORD PTR [ebp-0x10]
  413955:	mov    ebx,DWORD PTR [ebp-0x4]
  413958:	imul   edx,edx,0x14
  41395b:	xor    ebx,esi
  41395d:	add    ebx,edi
  41395f:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  413963:	je     0x413b6b
  413969:	mov    eax,DWORD PTR [ebp-0x4]
  41396c:	mov    ebx,DWORD PTR [ebp-0x4]
  41396f:	mov    eax,DWORD PTR [ebp-0x10]
  413972:	imul   eax,eax,0x14
  413975:	add    eax,ecx
  413977:	mov    ecx,DWORD PTR [eax+0x10]
  41397a:	add    ecx,DWORD PTR [ebp+0x8]
  41397d:	xor    ebx,esi
  41397f:	mov    DWORD PTR [ebp-0x1c],ecx
  413982:	mov    ecx,DWORD PTR [ebp-0x4]
  413985:	mov    edx,DWORD PTR [ebp-0x4]
  413988:	xor    ecx,esi
  41398a:	add    ecx,edi
  41398c:	xor    edx,esi
  41398e:	mov    DWORD PTR [ebp-0x24],ecx
  413991:	mov    ecx,DWORD PTR [eax]
  413993:	add    edx,edi
  413995:	add    ebx,edi
  413997:	cmp    ecx,edx
  413999:	je     0x4139a1
  41399b:	add    ecx,DWORD PTR [ebp+0x8]
  41399e:	mov    DWORD PTR [ebp-0x24],ecx
  4139a1:	mov    ecx,DWORD PTR [ebp-0x4]
  4139a4:	xor    ecx,esi
  4139a6:	add    ecx,DWORD PTR [eax+0xc]
  4139a9:	mov    eax,DWORD PTR [ebp+0x8]
  4139ac:	lea    eax,[ecx+eax*1+0x3272dd]
  4139b3:	mov    DWORD PTR [ebp+0xc],eax
  4139b6:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  4139bd:	mov    eax,DWORD PTR [ebp+0x10]
  4139c0:	push   DWORD PTR [ebp+0xc]
  4139c3:	mov    eax,DWORD PTR [eax+0x1d8]
  4139c9:	call   DWORD PTR [eax]
  4139cb:	mov    ecx,DWORD PTR [ebp-0x4]
  4139ce:	xor    ecx,esi
  4139d0:	add    ecx,edi
  4139d2:	mov    DWORD PTR [ebp-0xc],eax
  4139d5:	cmp    ecx,eax
  4139d7:	jne    0x4139eb
  4139d9:	mov    eax,DWORD PTR [ebp+0x10]
  4139dc:	push   DWORD PTR [ebp+0xc]
  4139df:	mov    eax,DWORD PTR [eax+0x1d8]
  4139e5:	call   DWORD PTR [eax+0xc]
  4139e8:	mov    DWORD PTR [ebp-0xc],eax
  4139eb:	mov    DWORD PTR [ebp-0x20],0x7f661b0a
  4139f2:	mov    DWORD PTR [ebp-0x20],0xf89c999a
  4139f9:	mov    eax,DWORD PTR [ebp-0x4]
  4139fc:	xor    eax,esi
  4139fe:	add    eax,edi
  413a00:	cmp    eax,DWORD PTR [ebp-0xc]
  413a03:	jne    0x413a28
  413a05:	mov    eax,DWORD PTR [ebp-0x8]
  413a08:	mov    ecx,DWORD PTR [ebp-0x20]
  413a0b:	xor    eax,esi
  413a0d:	xor    ecx,esi
  413a0f:	lea    ebx,[ebx+eax*1+0x3272dd]
  413a16:	mov    eax,DWORD PTR [ebp+0x10]
  413a19:	mov    eax,DWORD PTR [eax+0x1d8]
  413a1f:	add    ecx,edi
  413a21:	imul   ecx,ebx
  413a24:	push   ecx
  413a25:	call   DWORD PTR [eax+0x24]
  413a28:	mov    eax,DWORD PTR [ebp-0x4]
  413a2b:	xor    eax,esi
  413a2d:	add    eax,edi
  413a2f:	cmp    eax,DWORD PTR [ebp-0xc]
  413a32:	jne    0x413a43
  413a34:	mov    eax,DWORD PTR [ebp-0x28]
  413a37:	xor    eax,esi
  413a39:	add    eax,edi
  413a3b:	cmp    ebx,eax
  413a3d:	jbe    0x4139bd
  413a43:	mov    eax,DWORD PTR [ebp-0x4]
  413a46:	xor    eax,esi
  413a48:	add    eax,edi
  413a4a:	cmp    eax,DWORD PTR [ebp-0xc]
  413a4d:	jne    0x413a66
  413a4f:	mov    eax,DWORD PTR [ebp-0x8]
  413a52:	mov    ecx,DWORD PTR [ebp-0x18]
  413a55:	xor    eax,esi
  413a57:	lea    eax,[ecx+eax*1+0x3272dd]
  413a5e:	mov    DWORD PTR [ebp-0x18],eax
  413a61:	jmp    0x413b55
  413a66:	mov    DWORD PTR [ebp-0x14],0x1121b0d
  413a6d:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  413a74:	mov    ebx,DWORD PTR [ebp-0x4]
  413a77:	xor    ebx,esi
  413a79:	add    ebx,edi
  413a7b:	jmp    0x413b42
  413a80:	mov    eax,DWORD PTR [ebp-0x4]
  413a83:	xor    eax,esi
  413a85:	add    eax,edi
  413a87:	mov    DWORD PTR [ebp-0x14],eax
  413a8a:	mov    eax,DWORD PTR [ebp-0x4]
  413a8d:	xor    eax,esi
  413a8f:	add    eax,edi
  413a91:	mov    DWORD PTR [ebp+0xc],eax
  413a94:	mov    ecx,DWORD PTR [ebp-0x4]
  413a97:	mov    eax,DWORD PTR [ebp-0x24]
  413a9a:	xor    ecx,esi
  413a9c:	add    ecx,edi
  413a9e:	cmp    ecx,eax
  413aa0:	je     0x413aa8
  413aa2:	mov    eax,DWORD PTR [eax+ebx*4]
  413aa5:	mov    DWORD PTR [ebp-0x14],eax
  413aa8:	mov    eax,DWORD PTR [ebp-0x1c]
  413aab:	mov    eax,DWORD PTR [eax+ebx*4]
  413aae:	mov    DWORD PTR [ebp+0xc],eax
  413ab1:	mov    eax,DWORD PTR [ebp-0x4]
  413ab4:	mov    ecx,DWORD PTR [ebp-0x14]
  413ab7:	xor    eax,esi
  413ab9:	add    eax,edi
  413abb:	cmp    eax,ecx
  413abd:	je     0x413ae8
  413abf:	mov    eax,DWORD PTR [ebp-0x4]
  413ac2:	mov    ecx,DWORD PTR [ebp-0x14]
  413ac5:	xor    eax,esi
  413ac7:	add    eax,edi
  413ac9:	shr    ecx,0x1f
  413acc:	cmp    eax,ecx
  413ace:	je     0x413ae8
  413ad0:	mov    ecx,DWORD PTR [ebp-0x14]
  413ad3:	mov    eax,DWORD PTR [ebp+0x10]
  413ad6:	mov    eax,DWORD PTR [eax+0x1d8]
  413adc:	movzx  ecx,cx
  413adf:	push   ecx
  413ae0:	push   DWORD PTR [ebp-0xc]
  413ae3:	call   DWORD PTR [eax+0x8]
  413ae6:	jmp    0x413b01
  413ae8:	mov    eax,DWORD PTR [ebp+0xc]
  413aeb:	add    eax,DWORD PTR [ebp+0x8]
  413aee:	mov    ecx,DWORD PTR [ebp+0x10]
  413af1:	mov    ecx,DWORD PTR [ecx+0x1d8]
  413af7:	add    eax,0x2
  413afa:	push   eax
  413afb:	push   DWORD PTR [ebp-0xc]
  413afe:	call   DWORD PTR [ecx+0x8]
  413b01:	mov    DWORD PTR [ebp+0xc],eax
  413b04:	mov    eax,DWORD PTR [ebp-0x4]
  413b07:	mov    ecx,DWORD PTR [ebp+0xc]
  413b0a:	xor    eax,esi
  413b0c:	add    eax,edi
  413b0e:	cmp    eax,ecx
  413b10:	mov    eax,DWORD PTR [ebp-0x8]
  413b13:	jne    0x413b26
  413b15:	mov    ecx,DWORD PTR [ebp-0x18]
  413b18:	xor    eax,esi
  413b1a:	lea    eax,[ecx+eax*1+0x3272dd]
  413b21:	mov    DWORD PTR [ebp-0x18],eax
  413b24:	jmp    0x413b36
  413b26:	mov    ecx,DWORD PTR [ebp+0xc]
  413b29:	xor    eax,esi
  413b2b:	add    eax,edi
  413b2d:	imul   eax,ecx
  413b30:	mov    ecx,DWORD PTR [ebp-0x1c]
  413b33:	mov    DWORD PTR [ecx+ebx*4],eax
  413b36:	mov    eax,DWORD PTR [ebp-0x8]
  413b39:	xor    eax,esi
  413b3b:	lea    ebx,[ebx+eax*1+0x3272dd]
  413b42:	mov    eax,DWORD PTR [ebp-0x4]
  413b45:	mov    ecx,DWORD PTR [ebp-0x1c]
  413b48:	xor    eax,esi
  413b4a:	add    eax,edi
  413b4c:	cmp    DWORD PTR [ecx+ebx*4],eax
  413b4f:	jne    0x413a80
  413b55:	mov    edx,DWORD PTR [ebp-0x10]
  413b58:	mov    eax,DWORD PTR [ebp-0x18]
  413b5b:	mov    ecx,DWORD PTR [ebp-0x2c]
  413b5e:	sub    edx,0x3272dc
  413b64:	xor    edx,esi
  413b66:	jmp    0x413930
  413b6b:	mov    ecx,DWORD PTR [ebp-0x4]
  413b6e:	xor    ecx,esi
  413b70:	add    ecx,edi
  413b72:	cmp    eax,ecx
  413b74:	mov    eax,DWORD PTR [ebp-0x4]
  413b77:	jne    0x413b81
  413b79:	mov    eax,DWORD PTR [ebp-0x8]
  413b7c:	jmp    0x413b81
  413b7e:	mov    eax,DWORD PTR [ebp-0x4]
  413b81:	xor    eax,esi
  413b83:	add    eax,edi
  413b85:	pop    edi
  413b86:	pop    esi
  413b87:	pop    ebx
  413b88:	leave  
  413b89:	ret    0xc
  413b8c:	push   ebp
  413b8d:	mov    ebp,esp
  413b8f:	sub    esp,0x28
  413b92:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  413b99:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  413ba0:	mov    eax,DWORD PTR [ebp+0xc]
  413ba3:	mov    DWORD PTR [ebp+0xc],eax
  413ba6:	push   esi
  413ba7:	mov    eax,eax
  413ba9:	mov    eax,DWORD PTR [ebp-0x4]
  413bac:	mov    esi,DWORD PTR [ebp+0x8]
  413baf:	mov    ecx,0x7510896
  413bb4:	xor    eax,ecx
  413bb6:	mov    edx,0x3272dd
  413bbb:	add    eax,edx
  413bbd:	cmp    esi,eax
  413bbf:	je     0x413ce6
  413bc5:	mov    eax,DWORD PTR [ebp+0x8]
  413bc8:	mov    esi,DWORD PTR [ebp+0x8]
  413bcb:	add    esi,DWORD PTR [eax+0x3c]
  413bce:	push   edi
  413bcf:	mov    DWORD PTR [ebp+0xc],esi
  413bd2:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  413bd9:	mov    eax,DWORD PTR [ebp-0x1c]
  413bdc:	mov    esi,DWORD PTR [ebp-0x4]
  413bdf:	mov    edi,DWORD PTR [ebp+0xc]
  413be2:	xor    esi,ecx
  413be4:	xor    eax,ecx
  413be6:	add    esi,edx
  413be8:	cmp    DWORD PTR [edi+eax*8+0x1939760],esi
  413bef:	je     0x413ce0
  413bf5:	mov    esi,DWORD PTR [ebp+0xc]
  413bf8:	mov    eax,DWORD PTR [ebp+0x8]
  413bfb:	add    eax,DWORD PTR [esi+0xa0]
  413c01:	mov    esi,DWORD PTR [ebp+0x8]
  413c04:	mov    edi,DWORD PTR [ebp+0xc]
  413c07:	sub    esi,DWORD PTR [edi+0x34]
  413c0a:	mov    edi,DWORD PTR [ebp-0x4]
  413c0d:	xor    edi,ecx
  413c0f:	add    edi,edx
  413c11:	mov    DWORD PTR [ebp-0x24],esi
  413c14:	cmp    esi,edi
  413c16:	je     0x413ce0
  413c1c:	mov    esi,DWORD PTR [ebp-0x4]
  413c1f:	xor    esi,ecx
  413c21:	add    esi,edx
  413c23:	mov    DWORD PTR [ebp-0x8],esi
  413c26:	push   ebx
  413c27:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  413c2e:	jmp    0x413cca
  413c33:	mov    esi,DWORD PTR [ebp-0x4]
  413c36:	xor    esi,ecx
  413c38:	lea    edi,[ebx-0x8]
  413c3b:	add    esi,edx
  413c3d:	shr    edi,1
  413c3f:	cmp    esi,edi
  413c41:	jae    0x413cb0
  413c43:	sub    edi,esi
  413c45:	lea    ebx,[eax+esi*2+0x8]
  413c49:	mov    DWORD PTR [ebp-0x18],edi
  413c4c:	movzx  esi,WORD PTR [ebx]
  413c4f:	and    esi,0xfff
  413c55:	mov    DWORD PTR [ebp-0x14],esi
  413c58:	mov    edi,DWORD PTR [ebp-0x14]
  413c5b:	mov    esi,DWORD PTR [eax]
  413c5d:	sub    esi,edx
  413c5f:	add    edi,esi
  413c61:	movzx  esi,WORD PTR [ebx]
  413c64:	shr    esi,0xc
  413c67:	xor    edi,ecx
  413c69:	mov    DWORD PTR [ebp-0x20],edi
  413c6c:	mov    DWORD PTR [ebp-0x14],esi
  413c6f:	mov    esi,DWORD PTR [ebp-0x20]
  413c72:	mov    edi,DWORD PTR [ebp+0x8]
  413c75:	xor    esi,ecx
  413c77:	lea    esi,[esi+edi*1+0x3272dd]
  413c7e:	mov    DWORD PTR [ebp-0x20],esi
  413c81:	mov    esi,DWORD PTR [ebp-0x10]
  413c84:	mov    edi,DWORD PTR [ebp-0x14]
  413c87:	xor    esi,ecx
  413c89:	add    esi,edx
  413c8b:	cmp    edi,esi
  413c8d:	jne    0x413ca5
  413c8f:	mov    esi,DWORD PTR [ebp-0x10]
  413c92:	mov    edi,DWORD PTR [ebp-0x14]
  413c95:	xor    esi,ecx
  413c97:	add    esi,edx
  413c99:	cmp    edi,esi
  413c9b:	jne    0x413ca5
  413c9d:	mov    esi,DWORD PTR [ebp-0x20]
  413ca0:	mov    edi,DWORD PTR [ebp-0x24]
  413ca3:	add    DWORD PTR [esi],edi
  413ca5:	add    ebx,0x2
  413ca8:	dec    DWORD PTR [ebp-0x18]
  413cab:	jne    0x413c4c
  413cad:	mov    ebx,DWORD PTR [ebp-0xc]
  413cb0:	add    DWORD PTR [ebp-0x8],ebx
  413cb3:	mov    esi,DWORD PTR [ebp-0x1c]
  413cb6:	mov    edi,DWORD PTR [ebp-0x8]
  413cb9:	mov    ebx,DWORD PTR [ebp+0xc]
  413cbc:	xor    esi,ecx
  413cbe:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939764]
  413cc5:	jae    0x413cdf
  413cc7:	add    eax,DWORD PTR [ebp-0xc]
  413cca:	mov    esi,DWORD PTR [ebp-0x4]
  413ccd:	mov    ebx,DWORD PTR [eax+0x4]
  413cd0:	xor    esi,ecx
  413cd2:	add    esi,edx
  413cd4:	mov    DWORD PTR [ebp-0xc],ebx
  413cd7:	cmp    ebx,esi
  413cd9:	jne    0x413c33
  413cdf:	pop    ebx
  413ce0:	mov    eax,DWORD PTR [ebp-0x28]
  413ce3:	pop    edi
  413ce4:	jmp    0x413ce9
  413ce6:	mov    eax,DWORD PTR [ebp-0x4]
  413ce9:	xor    eax,ecx
  413ceb:	add    eax,edx
  413ced:	pop    esi
  413cee:	leave  
  413cef:	ret    0x8
  413cf2:	push   ebp
  413cf3:	mov    ebp,esp
  413cf5:	sub    esp,0x54
  413cf8:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  413cff:	mov    DWORD PTR [ebp-0x24],0xf89c85b2
  413d06:	mov    eax,DWORD PTR [ebp-0x4]
  413d09:	push   ebx
  413d0a:	push   esi
  413d0b:	mov    esi,0x7510896
  413d10:	xor    eax,esi
  413d12:	mov    ebx,0x3272dd
  413d17:	add    eax,ebx
  413d19:	mov    DWORD PTR [ebp-0x18],eax
  413d1c:	mov    eax,DWORD PTR [ebp-0x4]
  413d1f:	xor    eax,esi
  413d21:	add    eax,ebx
  413d23:	mov    DWORD PTR [ebp-0x20],eax
  413d26:	push   edi
  413d27:	mov    edi,DWORD PTR [ebp+0x20]
  413d2a:	mov    eax,DWORD PTR [ebp-0x10]
  413d2d:	mov    ecx,DWORD PTR [ebp-0x10]
  413d30:	xor    eax,ecx
  413d32:	mov    DWORD PTR [ebp-0x10],eax
  413d35:	add    DWORD PTR [ebp-0x10],0xf89cb5b5
  413d3c:	mov    eax,DWORD PTR [ebp-0x8]
  413d3f:	mov    ecx,DWORD PTR [ebp-0x8]
  413d42:	xor    eax,ecx
  413d44:	mov    DWORD PTR [ebp-0x8],eax
  413d47:	add    DWORD PTR [ebp-0x8],0xf89c85f5
  413d4e:	mov    eax,DWORD PTR [ebp-0xc]
  413d51:	mov    ecx,DWORD PTR [ebp-0xc]
  413d54:	xor    eax,ecx
  413d56:	mov    DWORD PTR [ebp-0xc],eax
  413d59:	add    DWORD PTR [ebp-0xc],0xf89c85b1
  413d60:	mov    eax,DWORD PTR [ebp-0x14]
  413d63:	mov    ecx,DWORD PTR [ebp-0x14]
  413d66:	xor    eax,ecx
  413d68:	mov    DWORD PTR [ebp-0x14],eax
  413d6b:	add    DWORD PTR [ebp-0x14],0xf89f05b5
  413d72:	mov    eax,0x9588
  413d77:	mov    WORD PTR [ebp+0x20],ax
  413d7b:	mov    eax,DWORD PTR [ebp+0x8]
  413d7e:	test   eax,eax
  413d80:	je     0x414165
  413d86:	mov    eax,DWORD PTR [ebp+0xc]
  413d89:	test   eax,eax
  413d8b:	je     0x414165
  413d91:	mov    eax,DWORD PTR [ebp+0x18]
  413d94:	test   eax,eax
  413d96:	je     0x414165
  413d9c:	mov    ax,WORD PTR [ebp+0x20]
  413da0:	mov    ecx,0x8a89
  413da5:	xor    ax,cx
  413da8:	mov    ecx,0x3b4c
  413dad:	add    ax,cx
  413db0:	mov    ecx,DWORD PTR [ebp+0x8]
  413db3:	cmp    WORD PTR [ecx],ax
  413db6:	jne    0x414165
  413dbc:	mov    eax,DWORD PTR [ebp-0x4]
  413dbf:	mov    ecx,DWORD PTR [ebp+0x8]
  413dc2:	mov    eax,DWORD PTR [ebp+0x8]
  413dc5:	add    eax,DWORD PTR [ecx+0x3c]
  413dc8:	mov    DWORD PTR [ebp+0xc],eax
  413dcb:	mov    eax,DWORD PTR [eax+0x50]
  413dce:	test   eax,eax
  413dd0:	je     0x414165
  413dd6:	mov    DWORD PTR [ebp-0x2c],0xf88c85b5
  413ddd:	mov    eax,DWORD PTR [ebp-0x2c]
  413de0:	xor    eax,esi
  413de2:	add    eax,ebx
  413de4:	mov    DWORD PTR [ebp-0x2c],eax
  413de7:	mov    eax,DWORD PTR [ebp-0x4]
  413dea:	mov    eax,DWORD PTR [edi+0x190]
  413df0:	mov    ecx,DWORD PTR [eax]
  413df2:	mov    ecx,DWORD PTR [ecx+0x3c]
  413df5:	add    ecx,DWORD PTR [eax]
  413df7:	mov    eax,DWORD PTR [ebp-0x4]
  413dfa:	mov    eax,DWORD PTR [edi+0x18c]
  413e00:	mov    edx,DWORD PTR [eax]
  413e02:	mov    DWORD PTR [ebp-0x1c],ecx
  413e05:	mov    DWORD PTR [ebp+0x20],edx
  413e08:	cmp    edx,edx
  413e0a:	jne    0x413e3f
  413e0c:	mov    eax,DWORD PTR [edi+0x1d8]
  413e12:	lea    edx,[ebp-0x18]
  413e15:	push   edx
  413e16:	mov    edx,DWORD PTR [ebp-0x8]
  413e19:	xor    edx,esi
  413e1b:	add    edx,ebx
  413e1d:	push   edx
  413e1e:	push   DWORD PTR [ecx+0x50]
  413e21:	push   DWORD PTR [ebp+0x20]
  413e24:	call   DWORD PTR [eax+0x1c]
  413e27:	mov    ecx,DWORD PTR [ebp-0x1c]
  413e2a:	mov    eax,DWORD PTR [ecx+0x54]
  413e2d:	mov    ecx,DWORD PTR [ecx+0x50]
  413e30:	sub    ecx,eax
  413e32:	add    eax,DWORD PTR [ebp+0x20]
  413e35:	push   ecx
  413e36:	push   eax
  413e37:	call   0x414779
  413e3c:	mov    edx,DWORD PTR [ebp+0x20]
  413e3f:	mov    eax,DWORD PTR [edi+0x194]
  413e45:	mov    DWORD PTR [eax],edx
  413e47:	mov    eax,DWORD PTR [ebp+0xc]
  413e4a:	push   DWORD PTR [eax+0x54]
  413e4d:	push   DWORD PTR [ebp+0x8]
  413e50:	push   edx
  413e51:	call   0x414620
  413e56:	mov    ecx,DWORD PTR [ebp+0x20]
  413e59:	mov    eax,DWORD PTR [ecx+0x3c]
  413e5c:	add    eax,ecx
  413e5e:	movzx  ecx,WORD PTR [eax+0x14]
  413e62:	lea    ecx,[ecx+eax*1+0x18]
  413e66:	mov    DWORD PTR [ebp+0x18],ecx
  413e69:	mov    ecx,DWORD PTR [ebp-0x4]
  413e6c:	movzx  edx,WORD PTR [eax+0x6]
  413e70:	xor    ecx,esi
  413e72:	add    ecx,ebx
  413e74:	mov    DWORD PTR [ebp+0xc],eax
  413e77:	cmp    edx,ecx
  413e79:	je     0x413f27
  413e7f:	mov    ecx,DWORD PTR [ebp-0x4]
  413e82:	xor    ecx,esi
  413e84:	add    ecx,ebx
  413e86:	mov    DWORD PTR [ebp-0x20],ecx
  413e89:	mov    ecx,DWORD PTR [ebp-0x24]
  413e8c:	movzx  edx,WORD PTR [eax+0x6]
  413e90:	xor    ecx,esi
  413e92:	sub    edx,ecx
  413e94:	sub    edx,ebx
  413e96:	cmp    DWORD PTR [ebp-0x20],edx
  413e99:	ja     0x413f27
  413e9f:	mov    edx,DWORD PTR [ebp+0x18]
  413ea2:	add    edx,0x8
  413ea5:	mov    DWORD PTR [ebp+0x18],edx
  413ea8:	jmp    0x413ead
  413eaa:	mov    edx,DWORD PTR [ebp+0x18]
  413ead:	mov    eax,DWORD PTR [eax+0x38]
  413eb0:	lea    ecx,[eax-0x1]
  413eb3:	mov    DWORD PTR [ebp-0x30],eax
  413eb6:	mov    eax,DWORD PTR [edx]
  413eb8:	test   ecx,eax
  413eba:	je     0x413ec3
  413ebc:	not    ecx
  413ebe:	and    eax,ecx
  413ec0:	add    eax,DWORD PTR [ebp-0x30]
  413ec3:	push   eax
  413ec4:	mov    eax,DWORD PTR [edx+0x4]
  413ec7:	add    eax,DWORD PTR [ebp+0x20]
  413eca:	push   eax
  413ecb:	call   0x414779
  413ed0:	mov    edx,DWORD PTR [ebp-0x4]
  413ed3:	mov    eax,DWORD PTR [ebp+0x18]
  413ed6:	mov    ecx,DWORD PTR [eax+0x8]
  413ed9:	xor    edx,esi
  413edb:	add    edx,ebx
  413edd:	cmp    ecx,edx
  413edf:	je     0x413ef8
  413ee1:	push   ecx
  413ee2:	mov    ecx,DWORD PTR [ebp+0x8]
  413ee5:	add    ecx,DWORD PTR [eax+0xc]
  413ee8:	mov    eax,DWORD PTR [eax+0x4]
  413eeb:	add    eax,DWORD PTR [ebp+0x20]
  413eee:	push   ecx
  413eef:	push   eax
  413ef0:	call   0x414620
  413ef5:	mov    eax,DWORD PTR [ebp+0x18]
  413ef8:	mov    ecx,DWORD PTR [ebp-0x24]
  413efb:	mov    edx,DWORD PTR [ebp-0x20]
  413efe:	add    eax,0x28
  413f01:	xor    ecx,esi
  413f03:	lea    ecx,[edx+ecx*1+0x3272dd]
  413f0a:	mov    edx,DWORD PTR [ebp+0xc]
  413f0d:	mov    DWORD PTR [ebp+0x18],eax
  413f10:	mov    eax,DWORD PTR [ebp-0x24]
  413f13:	movzx  edx,WORD PTR [edx+0x6]
  413f17:	xor    eax,esi
  413f19:	sub    edx,eax
  413f1b:	mov    eax,DWORD PTR [ebp+0xc]
  413f1e:	sub    edx,ebx
  413f20:	mov    DWORD PTR [ebp-0x20],ecx
  413f23:	cmp    ecx,edx
  413f25:	jbe    0x413eaa
  413f27:	mov    ecx,DWORD PTR [ebp-0x4]
  413f2a:	mov    edx,DWORD PTR [edi+0x18c]
  413f30:	xor    ecx,esi
  413f32:	add    ecx,ebx
  413f34:	mov    DWORD PTR [ebp+0x18],ecx
  413f37:	mov    ecx,DWORD PTR [ebp+0x20]
  413f3a:	cmp    ecx,DWORD PTR [edx]
  413f3c:	jne    0x413f65
  413f3e:	mov    eax,DWORD PTR [edi+0x1d8]
  413f44:	lea    edx,[ebp-0x18]
  413f47:	push   edx
  413f48:	mov    edx,DWORD PTR [ebp-0xc]
  413f4b:	xor    edx,esi
  413f4d:	add    edx,ebx
  413f4f:	push   edx
  413f50:	mov    edx,DWORD PTR [ebp-0x1c]
  413f53:	push   DWORD PTR [edx+0x54]
  413f56:	push   ecx
  413f57:	call   DWORD PTR [eax+0x1c]
  413f5a:	test   eax,eax
  413f5c:	je     0x414156
  413f62:	mov    eax,DWORD PTR [ebp+0xc]
  413f65:	mov    ecx,DWORD PTR [edi+0x1c8]
  413f6b:	mov    ecx,DWORD PTR [ecx]
  413f6d:	xor    ecx,esi
  413f6f:	add    ecx,ebx
  413f71:	je     0x414081
  413f77:	and    DWORD PTR [ebp-0x28],0x0
  413f7b:	mov    eax,0x4fab
  413f80:	mov    WORD PTR [ebp-0x3c],ax
  413f84:	add    eax,0xfffffff6
  413f87:	mov    WORD PTR [ebp-0x3a],ax
  413f8b:	mov    eax,0x4f91
  413f90:	mov    WORD PTR [ebp-0x38],ax
  413f94:	add    eax,0x18
  413f97:	and    DWORD PTR [ebp+0x8],0x0
  413f9b:	mov    ecx,eax
  413f9d:	mov    WORD PTR [ebp-0x34],ax
  413fa1:	mov    eax,0x4e3d
  413fa6:	mov    WORD PTR [ebp-0x36],cx
  413faa:	mov    WORD PTR [ebp-0x32],ax
  413fae:	mov    eax,DWORD PTR [ebp+0x8]
  413fb1:	lea    eax,[ebp+eax*2-0x3c]
  413fb5:	mov    ecx,0x8a89
  413fba:	xor    cx,WORD PTR [eax]
  413fbd:	mov    edx,0x3b4c
  413fc2:	add    cx,dx
  413fc5:	inc    DWORD PTR [ebp+0x8]
  413fc8:	cmp    DWORD PTR [ebp+0x8],0x6
  413fcc:	mov    WORD PTR [eax],cx
  413fcf:	jb     0x413fae
  413fd1:	mov    DWORD PTR [ebp-0x54],0x200c1e26
  413fd8:	mov    DWORD PTR [ebp-0x50],0x211e0805
  413fdf:	mov    DWORD PTR [ebp-0x4c],0xf50c0e08
  413fe6:	mov    DWORD PTR [ebp-0x48],0x3d0c0b20
  413fed:	mov    DWORD PTR [ebp-0x44],0x10c1e1e
  413ff4:	mov    WORD PTR [ebp-0x40],0xf0f
  413ffa:	mov    BYTE PTR [ebp-0x3e],0x7a
  413ffe:	xor    ecx,ecx
  414000:	lea    eax,[ebp+ecx*1-0x54]
  414004:	mov    dl,BYTE PTR [eax]
  414006:	xor    dl,0x71
  414009:	sub    dl,0xb
  41400c:	inc    ecx
  41400d:	mov    BYTE PTR [eax],dl
  41400f:	cmp    ecx,0x17
  414012:	jb     0x414000
  414014:	mov    eax,DWORD PTR [edi+0x1d8]
  41401a:	lea    ecx,[ebp-0x3c]
  41401d:	push   ecx
  41401e:	call   DWORD PTR [eax+0x4]
  414021:	mov    ecx,DWORD PTR [edi+0x1d8]
  414027:	lea    edx,[ebp-0x54]
  41402a:	push   edx
  41402b:	push   eax
  41402c:	call   DWORD PTR [ecx+0x8]
  41402f:	lea    ecx,[ebp-0x28]
  414032:	push   ecx
  414033:	mov    ecx,DWORD PTR [edi+0x18c]
  414039:	push   DWORD PTR [ecx]
  41403b:	call   eax
  41403d:	mov    eax,DWORD PTR [ebp-0x28]
  414040:	test   eax,eax
  414042:	je     0x41407e
  414044:	mov    DWORD PTR [ebp+0x8],eax
  414047:	jmp    0x414053
  414049:	mov    eax,DWORD PTR [eax]
  41404b:	mov    DWORD PTR [ebp-0x28],eax
  41404e:	cmp    eax,DWORD PTR [ebp+0x8]
  414051:	je     0x414060
  414053:	mov    edx,DWORD PTR [eax+0x18]
  414056:	mov    ecx,DWORD PTR [edi+0x18c]
  41405c:	cmp    edx,DWORD PTR [ecx]
  41405e:	jne    0x414049
  414060:	mov    edx,DWORD PTR [eax+0x18]
  414063:	mov    ecx,DWORD PTR [edi+0x18c]
  414069:	cmp    edx,DWORD PTR [ecx]
  41406b:	jne    0x41407e
  41406d:	mov    edx,DWORD PTR [ebp-0x1c]
  414070:	mov    ecx,DWORD PTR [edi+0x190]
  414076:	mov    edx,DWORD PTR [edx+0x28]
  414079:	add    edx,DWORD PTR [ecx]
  41407b:	mov    DWORD PTR [eax+0x1c],edx
  41407e:	mov    eax,DWORD PTR [ebp+0xc]
  414081:	push   edi
  414082:	push   eax
  414083:	push   DWORD PTR [ebp+0x20]
  414086:	call   0x4138a9
  41408b:	test   eax,eax
  41408d:	je     0x414156
  414093:	push   DWORD PTR [ebp+0xc]
  414096:	mov    ecx,edi
  414098:	push   DWORD PTR [ebp+0x20]
  41409b:	call   0x413802
  4140a0:	test   eax,eax
  4140a2:	je     0x414156
  4140a8:	mov    eax,DWORD PTR [ebp+0xc]
  4140ab:	mov    edx,DWORD PTR [ebp+0x20]
  4140ae:	mov    ecx,edi
  4140b0:	call   0x4136db
  4140b5:	test   eax,eax
  4140b7:	je     0x414156
  4140bd:	push   edi
  4140be:	push   DWORD PTR [ebp+0x20]
  4140c1:	call   0x413b8c
  4140c6:	test   eax,eax
  4140c8:	je     0x414156
  4140ce:	mov    eax,DWORD PTR [edi+0x18c]
  4140d4:	mov    edx,DWORD PTR [ebp+0x20]
  4140d7:	cmp    edx,DWORD PTR [eax]
  4140d9:	jne    0x4140f5
  4140db:	mov    eax,DWORD PTR [edi+0x1d8]
  4140e1:	lea    ecx,[ebp-0x18]
  4140e4:	push   ecx
  4140e5:	push   DWORD PTR [ebp-0x18]
  4140e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4140eb:	push   DWORD PTR [ecx+0x54]
  4140ee:	push   edx
  4140ef:	call   DWORD PTR [eax+0x1c]
  4140f2:	mov    edx,DWORD PTR [ebp+0x20]
  4140f5:	mov    eax,DWORD PTR [edi+0x1c8]
  4140fb:	mov    eax,DWORD PTR [eax]
  4140fd:	xor    eax,esi
  4140ff:	add    eax,ebx
  414101:	je     0x41413a
  414103:	mov    ecx,DWORD PTR [ebp+0xc]
  414106:	mov    eax,DWORD PTR [ecx+0x28]
  414109:	mov    DWORD PTR [ebp+0x8],0xf89ca5b5
  414110:	mov    esi,DWORD PTR [ebp+0x8]
  414113:	push   DWORD PTR [ebp+0x14]
  414116:	xor    esi,0x896
  41411c:	push   DWORD PTR [ebp+0x10]
  41411f:	add    esi,0x72dd
  414125:	or     WORD PTR [ecx+0x16],si
  414129:	add    eax,edx
  41412b:	push   edx
  41412c:	call   eax
  41412e:	mov    DWORD PTR [edi+0x1d0],0xf89c85b2
  414138:	jmp    0x414144
  41413a:	mov    eax,DWORD PTR [ebp+0xc]
  41413d:	mov    eax,DWORD PTR [eax+0x28]
  414140:	add    eax,edx
  414142:	call   eax
  414144:	mov    DWORD PTR [ebp-0x20],eax
  414147:	mov    eax,DWORD PTR [ebp-0x20]
  41414a:	mov    ecx,DWORD PTR [ebp+0x1c]
  41414d:	mov    DWORD PTR [ecx],eax
  41414f:	mov    DWORD PTR [ebp+0x18],0x1
  414156:	cmp    DWORD PTR [ebp+0x18],0x0
  41415a:	jne    0x414160
  41415c:	and    DWORD PTR [ebp+0x20],0x0
  414160:	mov    eax,DWORD PTR [ebp+0x20]
  414163:	jmp    0x414167
  414165:	xor    eax,eax
  414167:	pop    edi
  414168:	pop    esi
  414169:	pop    ebx
  41416a:	leave  
  41416b:	ret    0x1c
  41416e:	push   ebp
  41416f:	mov    ebp,esp
  414171:	movzx  edx,WORD PTR [ecx+0x6]
  414175:	movzx  eax,WORD PTR [ecx+0x14]
  414179:	push   ebx
  41417a:	push   edi
  41417b:	xor    edi,edi
  41417d:	lea    eax,[eax+ecx*1+0x18]
  414181:	test   edx,edx
  414183:	je     0x4141a4
  414185:	mov    ecx,DWORD PTR [eax+0xc]
  414188:	lea    ebx,[ecx+esi*1]
  41418b:	cmp    DWORD PTR [ebp+0x8],ebx
  41418e:	jb     0x41419c
  414190:	mov    ebx,DWORD PTR [eax+0x8]
  414193:	add    ebx,ecx
  414195:	add    ebx,esi
  414197:	cmp    DWORD PTR [ebp+0x8],ebx
  41419a:	jb     0x4141a6
  41419c:	add    eax,0x28
  41419f:	inc    edi
  4141a0:	cmp    edi,edx
  4141a2:	jb     0x414185
  4141a4:	xor    eax,eax
  4141a6:	pop    edi
  4141a7:	pop    ebx
  4141a8:	pop    ebp
  4141a9:	ret    0x4
  4141ac:	push   ebp
  4141ad:	mov    ebp,esp
  4141af:	sub    esp,0x28
  4141b2:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  4141b9:	mov    DWORD PTR [ebp-0x1c],0xf89c85b2
  4141c0:	mov    DWORD PTR [ebp-0x28],0xf89c85b3
  4141c7:	mov    eax,0x4f9c
  4141cc:	mov    WORD PTR [ebp-0xc],ax
  4141d0:	mov    eax,0x4e7c
  4141d5:	mov    WORD PTR [ebp-0x4],ax
  4141d9:	mov    eax,0x4fa7
  4141de:	mov    WORD PTR [ebp-0x8],ax
  4141e2:	add    eax,0xffffffe0
  4141e5:	mov    WORD PTR [ebp-0x8],ax
  4141e9:	mov    eax,DWORD PTR [ebp+0x8]
  4141ec:	mov    DWORD PTR [ebp-0x14],eax
  4141ef:	mov    eax,DWORD PTR [ebp+0xc]
  4141f2:	mov    DWORD PTR [ebp-0x18],eax
  4141f5:	mov    eax,DWORD PTR [ebp-0x10]
  4141f8:	push   ebx
  4141f9:	mov    ecx,0x7510896
  4141fe:	xor    eax,ecx
  414200:	push   esi
  414201:	mov    esi,DWORD PTR [ebp-0x14]
  414204:	mov    edx,0x3272dd
  414209:	add    eax,edx
  41420b:	push   edi
  41420c:	cmp    esi,eax
  41420e:	je     0x41440c
  414214:	mov    eax,DWORD PTR [ebp-0x10]
  414217:	mov    esi,DWORD PTR [ebp-0x18]
  41421a:	xor    eax,ecx
  41421c:	add    eax,edx
  41421e:	cmp    esi,eax
  414220:	je     0x41440c
  414226:	mov    eax,DWORD PTR [ebp-0x10]
  414229:	xor    eax,ecx
  41422b:	add    eax,edx
  41422d:	mov    DWORD PTR [ebp-0x20],eax
  414230:	mov    eax,DWORD PTR [ebp-0x10]
  414233:	xor    eax,ecx
  414235:	add    eax,edx
  414237:	mov    DWORD PTR [ebp-0x24],eax
  41423a:	movzx  esi,WORD PTR [ebp-0x4]
  41423e:	movzx  edi,WORD PTR [ebp-0xc]
  414242:	mov    eax,0x8a89
  414247:	xor    si,ax
  41424a:	mov    ebx,0x8a89
  41424f:	xor    di,bx
  414252:	mov    eax,0x3b4c
  414257:	add    si,ax
  41425a:	add    di,ax
  41425d:	sub    edi,esi
  41425f:	mov    WORD PTR [ebp-0xc],di
  414263:	mov    esi,DWORD PTR [ebp-0x20]
  414266:	mov    edi,DWORD PTR [ebp-0x14]
  414269:	mov    si,WORD PTR [edi+esi*2]
  41426d:	mov    WORD PTR [ebp+0x8],si
  414271:	mov    esi,DWORD PTR [ebp-0x24]
  414274:	mov    edi,DWORD PTR [ebp-0x18]
  414277:	mov    si,WORD PTR [edi+esi*2]
  41427b:	mov    WORD PTR [ebp+0xc],si
  41427f:	mov    esi,0x72dd
  414284:	jmp    0x414391
  414289:	mov    edi,DWORD PTR [ebp-0x10]
  41428c:	mov    bx,WORD PTR [ebp+0xc]
  414290:	xor    edi,0x896
  414296:	add    edi,esi
  414298:	cmp    bx,di
  41429b:	je     0x4143bb
  4142a1:	mov    edi,DWORD PTR [ebp-0x10]
  4142a4:	mov    ebx,DWORD PTR [ebp+0x10]
  4142a7:	xor    edi,ecx
  4142a9:	add    edi,edx
  4142ab:	cmp    ebx,edi
  4142ad:	mov    di,WORD PTR [ebp+0xc]
  4142b1:	mov    bx,WORD PTR [ebp+0x8]
  4142b5:	je     0x414348
  4142bb:	cmp    bx,di
  4142be:	je     0x414351
  4142c4:	mov    di,WORD PTR [ebp-0x4]
  4142c8:	mov    ebx,0x8a89
  4142cd:	xor    di,bx
  4142d0:	mov    bx,WORD PTR [ebp+0x8]
  4142d4:	add    di,ax
  4142d7:	cmp    bx,di
  4142da:	jb     0x414302
  4142dc:	mov    di,WORD PTR [ebp-0x8]
  4142e0:	mov    ebx,0x8a89
  4142e5:	xor    di,bx
  4142e8:	mov    bx,WORD PTR [ebp+0x8]
  4142ec:	add    di,ax
  4142ef:	cmp    bx,di
  4142f2:	ja     0x414302
  4142f4:	movzx  edi,WORD PTR [ebp+0x8]
  4142f8:	movzx  ebx,WORD PTR [ebp-0xc]
  4142fc:	add    edi,ebx
  4142fe:	mov    WORD PTR [ebp+0x8],di
  414302:	mov    di,WORD PTR [ebp-0x4]
  414306:	mov    ebx,0x8a89
  41430b:	xor    di,bx
  41430e:	mov    bx,WORD PTR [ebp+0xc]
  414312:	add    di,ax
  414315:	cmp    bx,di
  414318:	jb     0x414340
  41431a:	mov    di,WORD PTR [ebp-0x8]
  41431e:	mov    ebx,0x8a89
  414323:	xor    di,bx
  414326:	mov    bx,WORD PTR [ebp+0xc]
  41432a:	add    di,ax
  41432d:	cmp    bx,di
  414330:	ja     0x414340
  414332:	movzx  edi,WORD PTR [ebp+0xc]
  414336:	movzx  ebx,WORD PTR [ebp-0xc]
  41433a:	add    edi,ebx
  41433c:	mov    WORD PTR [ebp+0xc],di
  414340:	mov    di,WORD PTR [ebp+0xc]
  414344:	mov    bx,WORD PTR [ebp+0x8]
  414348:	cmp    bx,di
  41434b:	jne    0x41440c
  414351:	mov    edi,DWORD PTR [ebp-0x28]
  414354:	mov    ebx,DWORD PTR [ebp-0x14]
  414357:	xor    edi,ecx
  414359:	lea    edi,[edi+ebx*1+0x3272dd]
  414360:	mov    DWORD PTR [ebp-0x14],edi
  414363:	mov    edi,DWORD PTR [ebp-0x28]
  414366:	mov    ebx,DWORD PTR [ebp-0x18]
  414369:	xor    edi,ecx
  41436b:	lea    edi,[edi+ebx*1+0x3272dd]
  414372:	mov    DWORD PTR [ebp-0x18],edi
  414375:	mov    edi,DWORD PTR [ebp-0x20]
  414378:	mov    ebx,DWORD PTR [ebp-0x14]
  41437b:	mov    di,WORD PTR [ebx+edi*2]
  41437f:	mov    WORD PTR [ebp+0x8],di
  414383:	mov    edi,DWORD PTR [ebp-0x24]
  414386:	mov    ebx,DWORD PTR [ebp-0x18]
  414389:	mov    di,WORD PTR [ebx+edi*2]
  41438d:	mov    WORD PTR [ebp+0xc],di
  414391:	mov    edi,DWORD PTR [ebp-0x10]
  414394:	mov    bx,WORD PTR [ebp+0x8]
  414398:	xor    edi,0x896
  41439e:	add    edi,esi
  4143a0:	cmp    bx,di
  4143a3:	jne    0x414289
  4143a9:	mov    esi,DWORD PTR [ebp-0x1c]
  4143ac:	xor    esi,ecx
  4143ae:	mov    ecx,DWORD PTR [ebp-0x10]
  4143b1:	add    esi,edx
  4143b3:	imul   esi,ecx
  4143b6:	mov    DWORD PTR [ebp-0x10],esi
  4143b9:	jmp    0x4143cd
  4143bb:	mov    edx,DWORD PTR [ebp-0x10]
  4143be:	xor    edx,ecx
  4143c0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4143c3:	lea    ecx,[edx+ecx*1+0x3272dd]
  4143ca:	mov    DWORD PTR [ebp-0x1c],ecx
  4143cd:	mov    edx,DWORD PTR [ebp-0x20]
  4143d0:	mov    esi,DWORD PTR [ebp-0x14]
  4143d3:	mov    si,WORD PTR [esi+edx*2]
  4143d7:	mov    ecx,eax
  4143d9:	sub    si,cx
  4143dc:	mov    edx,0x8a89
  4143e1:	xor    si,dx
  4143e4:	mov    ecx,0x4e3d
  4143e9:	cmp    si,cx
  4143ec:	jne    0x414407
  4143ee:	mov    esi,DWORD PTR [ebp-0x24]
  4143f1:	mov    edi,DWORD PTR [ebp-0x18]
  4143f4:	mov    si,WORD PTR [edi+esi*2]
  4143f8:	sub    si,ax
  4143fb:	xor    si,dx
  4143fe:	cmp    si,cx
  414401:	jne    0x414407
  414403:	xor    eax,eax
  414405:	jmp    0x414413
  414407:	xor    eax,eax
  414409:	inc    eax
  41440a:	jmp    0x414413
  41440c:	mov    eax,DWORD PTR [ebp-0x1c]
  41440f:	xor    eax,ecx
  414411:	add    eax,edx
  414413:	pop    edi
  414414:	pop    esi
  414415:	pop    ebx
  414416:	leave  
  414417:	ret    0xc
  41441a:	push   ebp
  41441b:	mov    ebp,esp
  41441d:	push   ecx
  41441e:	mov    cx,WORD PTR [eax]
  414421:	push   esi
  414422:	mov    esi,0x3b4c
  414427:	sub    cx,si
  41442a:	mov    esi,0x8a89
  41442f:	xor    cx,si
  414432:	mov    esi,0x4e3d
  414437:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41443e:	mov    edx,0xf89c85b5
  414443:	cmp    cx,si
  414446:	je     0x4144a5
  414448:	push   ebx
  414449:	push   edi
  41444a:	movzx  ecx,cx
  41444d:	mov    edi,0xffcd8d23
  414452:	mov    esi,0x7510896
  414457:	mov    ebx,0x4f99
  41445c:	cmp    cx,bx
  41445f:	jne    0x414464
  414461:	mov    DWORD PTR [ebp-0x4],edx
  414464:	lea    edx,[edi+0x1]
  414467:	xor    edx,esi
  414469:	mov    edi,edx
  41446b:	xor    edi,esi
  41446d:	mov    cx,WORD PTR [eax+edi*2+0x64e5ba]
  414475:	mov    ebx,0x3b4c
  41447a:	sub    cx,bx
  41447d:	mov    ebx,0x8a89
  414482:	xor    cx,bx
  414485:	mov    ebx,0x4e3d
  41448a:	cmp    cx,bx
  41448d:	jne    0x414457
  41448f:	mov    ecx,DWORD PTR [ebp-0x4]
  414492:	pop    edi
  414493:	pop    ebx
  414494:	cmp    ecx,0xf89c85b4
  41449a:	je     0x4144a5
  41449c:	xor    ecx,esi
  41449e:	lea    eax,[eax+ecx*2+0x64e5bc]
  4144a5:	pop    esi
  4144a6:	leave  
  4144a7:	ret    
  4144a8:	push   ebp
  4144a9:	mov    ebp,esp
  4144ab:	push   ecx
  4144ac:	push   esi
  4144ad:	push   edi
  4144ae:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  4144b5:	mov    esi,0xf89c85b5
  4144ba:	call   0x41441a
  4144bf:	mov    edi,eax
  4144c1:	mov    al,BYTE PTR [edi]
  4144c3:	add    al,0xb
  4144c5:	xor    al,0x71
  4144c7:	cmp    al,0x7a
  4144c9:	je     0x41452c
  4144cb:	mov    eax,edi
  4144cd:	mov    edx,0xffcd8d23
  4144d2:	mov    ecx,0x7510896
  4144d7:	push   ebx
  4144d8:	mov    ax,WORD PTR [eax]
  4144db:	mov    ebx,0x3b4c
  4144e0:	sub    ax,bx
  4144e3:	mov    ebx,0x8a89
  4144e8:	xor    ax,bx
  4144eb:	mov    ebx,0x4e6b
  4144f0:	cmp    ax,bx
  4144f3:	jne    0x4144f8
  4144f5:	mov    DWORD PTR [ebp-0x4],esi
  4144f8:	lea    esi,[edx+0x1]
  4144fb:	xor    esi,ecx
  4144fd:	mov    edx,esi
  4144ff:	xor    edx,ecx
  414501:	lea    eax,[edi+edx*2+0x64e5ba]
  414508:	mov    bl,BYTE PTR [eax]
  41450a:	add    bl,0xb
  41450d:	xor    bl,0x71
  414510:	cmp    bl,0x7a
  414513:	jne    0x4144d8
  414515:	mov    eax,DWORD PTR [ebp-0x4]
  414518:	pop    ebx
  414519:	cmp    eax,0xf89c85b4
  41451e:	je     0x41452c
  414520:	xor    eax,ecx
  414522:	xor    ecx,ecx
  414524:	mov    WORD PTR [edi+eax*2+0x64e5ba],cx
  41452c:	mov    eax,edi
  41452e:	pop    edi
  41452f:	pop    esi
  414530:	leave  
  414531:	ret    
  414532:	push   ebp
  414533:	mov    ebp,esp
  414535:	push   ecx
  414536:	push   esi
  414537:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41453e:	mov    esi,0xf89c85b5
  414543:	call   0x41441a
  414548:	mov    cx,WORD PTR [eax]
  41454b:	mov    edx,0x3b4c
  414550:	sub    cx,dx
  414553:	mov    edx,0x8a89
  414558:	xor    cx,dx
  41455b:	mov    edx,0x4e3d
  414560:	cmp    cx,dx
  414563:	je     0x4145bc
  414565:	push   ebx
  414566:	push   edi
  414567:	movzx  ecx,cx
  41456a:	mov    edx,0xffcd8d23
  41456f:	mov    edi,0x7510896
  414574:	mov    ebx,0x4e6b
  414579:	cmp    cx,bx
  41457c:	jne    0x414581
  41457e:	mov    DWORD PTR [ebp-0x4],esi
  414581:	lea    esi,[edx+0x1]
  414584:	xor    esi,edi
  414586:	mov    edx,esi
  414588:	xor    edx,edi
  41458a:	mov    cx,WORD PTR [eax+edx*2+0x64e5ba]
  414592:	mov    ebx,0x3b4c
  414597:	sub    cx,bx
  41459a:	mov    ebx,0x8a89
  41459f:	xor    cx,bx
  4145a2:	mov    ebx,0x4e3d
  4145a7:	cmp    cx,bx
  4145aa:	jne    0x414574
  4145ac:	cmp    DWORD PTR [ebp-0x4],0xf89c85b4
  4145b3:	pop    edi
  4145b4:	pop    ebx
  4145b5:	je     0x4145bc
  4145b7:	xor    eax,eax
  4145b9:	inc    eax
  4145ba:	jmp    0x4145be
  4145bc:	xor    eax,eax
  4145be:	pop    esi
  4145bf:	leave  
  4145c0:	ret    
  4145c1:	push   ebp
  4145c2:	mov    ebp,esp
  4145c4:	push   ecx
  4145c5:	mov    eax,DWORD PTR [ebp+0x8]
  4145c8:	movzx  ecx,WORD PTR [eax]
  4145cb:	push   esi
  4145cc:	lea    eax,[ecx-0x3b4c]
  4145d2:	mov    esi,0x8a89
  4145d7:	push   edi
  4145d8:	xor    eax,esi
  4145da:	mov    edi,0x4e3d
  4145df:	mov    DWORD PTR [ebp-0x4],edx
  4145e2:	cmp    ax,di
  4145e5:	je     0x414612
  4145e7:	mov    eax,DWORD PTR [ebp+0x8]
  4145ea:	sub    eax,edx
  4145ec:	mov    DWORD PTR [ebp+0x8],eax
  4145ef:	jmp    0x4145f4
  4145f1:	mov    eax,DWORD PTR [ebp+0x8]
  4145f4:	mov    WORD PTR [edx],cx
  4145f7:	add    edx,0x2
  4145fa:	movzx  edi,WORD PTR [eax+edx*1]
  4145fe:	mov    ecx,edi
  414600:	add    edi,0xffffc4b4
  414606:	xor    edi,esi
  414608:	mov    eax,0x4e3d
  41460d:	cmp    di,ax
  414610:	jne    0x4145f1
  414612:	xor    eax,eax
  414614:	pop    edi
  414615:	mov    WORD PTR [edx],ax
  414618:	mov    eax,DWORD PTR [ebp-0x4]
  41461b:	pop    esi
  41461c:	leave  
  41461d:	ret    0x4
  414620:	push   ebp
  414621:	mov    ebp,esp
  414623:	sub    esp,0x18
  414626:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  41462d:	mov    DWORD PTR [ebp-0x18],0xf89c85b2
  414634:	mov    eax,DWORD PTR [ebp-0x14]
  414637:	xor    eax,0x7510896
  41463c:	add    eax,0x3272dd
  414641:	mov    DWORD PTR [ebp-0x8],eax
  414644:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  41464b:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  414652:	mov    DWORD PTR [ebp-0x4],0xf89c85b3
  414659:	mov    eax,DWORD PTR [ebp-0x14]
  41465c:	xor    eax,0x7510896
  414661:	mov    ecx,DWORD PTR [ebp-0x8]
  414664:	lea    eax,[ecx+eax*1+0x3272dd]
  41466b:	mov    ecx,DWORD PTR [ebp-0x18]
  41466e:	xor    ecx,0x7510896
  414674:	add    ecx,0x3272dd
  41467a:	mov    edx,DWORD PTR [ebp+0x10]
  41467d:	imul   edx,ecx
  414680:	cmp    eax,edx
  414682:	jae    0x414775
  414688:	mov    eax,DWORD PTR [ebp+0x10]
  41468b:	mov    ecx,DWORD PTR [ebp-0x8]
  41468e:	sub    eax,ecx
  414690:	mov    ecx,DWORD PTR [ebp-0x10]
  414693:	xor    ecx,0x7510896
  414699:	add    ecx,0x3272dd
  41469f:	cmp    eax,ecx
  4146a1:	jbe    0x4146d3
  4146a3:	mov    eax,DWORD PTR [ebp+0x8]
  4146a6:	add    eax,DWORD PTR [ebp-0x8]
  4146a9:	mov    ecx,DWORD PTR [ebp+0xc]
  4146ac:	add    ecx,DWORD PTR [ebp-0x8]
  4146af:	mov    edx,DWORD PTR [ecx]
  4146b1:	mov    DWORD PTR [eax],edx
  4146b3:	mov    ecx,DWORD PTR [ecx+0x4]
  4146b6:	mov    DWORD PTR [eax+0x4],ecx
  4146b9:	mov    eax,DWORD PTR [ebp-0x10]
  4146bc:	xor    eax,0x7510896
  4146c1:	mov    ecx,DWORD PTR [ebp-0x8]
  4146c4:	lea    eax,[ecx+eax*1+0x3272dd]
  4146cb:	mov    DWORD PTR [ebp-0x8],eax
  4146ce:	jmp    0x414770
  4146d3:	mov    eax,DWORD PTR [ebp+0x10]
  4146d6:	mov    ecx,DWORD PTR [ebp-0x8]
  4146d9:	sub    eax,ecx
  4146db:	mov    ecx,DWORD PTR [ebp-0xc]
  4146de:	xor    ecx,0x7510896
  4146e4:	add    ecx,0x3272dd
  4146ea:	cmp    eax,ecx
  4146ec:	jbe    0x414715
  4146ee:	mov    eax,DWORD PTR [ebp+0x8]
  4146f1:	add    eax,DWORD PTR [ebp-0x8]
  4146f4:	mov    ecx,DWORD PTR [ebp+0xc]
  4146f7:	add    ecx,DWORD PTR [ebp-0x8]
  4146fa:	mov    ecx,DWORD PTR [ecx]
  4146fc:	mov    DWORD PTR [eax],ecx
  4146fe:	mov    eax,DWORD PTR [ebp-0xc]
  414701:	xor    eax,0x7510896
  414706:	mov    ecx,DWORD PTR [ebp-0x8]
  414709:	lea    eax,[ecx+eax*1+0x3272dd]
  414710:	mov    DWORD PTR [ebp-0x8],eax
  414713:	jmp    0x414770
  414715:	mov    eax,DWORD PTR [ebp+0x10]
  414718:	mov    ecx,DWORD PTR [ebp-0x8]
  41471b:	sub    eax,ecx
  41471d:	mov    ecx,DWORD PTR [ebp-0x4]
  414720:	xor    ecx,0x7510896
  414726:	add    ecx,0x3272dd
  41472c:	cmp    eax,ecx
  41472e:	jbe    0x414759
  414730:	mov    eax,DWORD PTR [ebp+0x8]
  414733:	add    eax,DWORD PTR [ebp-0x8]
  414736:	mov    ecx,DWORD PTR [ebp+0xc]
  414739:	add    ecx,DWORD PTR [ebp-0x8]
  41473c:	mov    cx,WORD PTR [ecx]
  41473f:	mov    WORD PTR [eax],cx
  414742:	mov    eax,DWORD PTR [ebp-0x4]
  414745:	xor    eax,0x7510896
  41474a:	mov    ecx,DWORD PTR [ebp-0x8]
  41474d:	lea    eax,[ecx+eax*1+0x3272dd]
  414754:	mov    DWORD PTR [ebp-0x8],eax
  414757:	jmp    0x414770
  414759:	mov    eax,DWORD PTR [ebp+0x8]
  41475c:	add    eax,DWORD PTR [ebp-0x8]
  41475f:	mov    ecx,DWORD PTR [ebp+0xc]
  414762:	add    ecx,DWORD PTR [ebp-0x8]
  414765:	mov    cl,BYTE PTR [ecx]
  414767:	mov    BYTE PTR [eax],cl
  414769:	mov    eax,DWORD PTR [ebp-0x8]
  41476c:	inc    eax
  41476d:	mov    DWORD PTR [ebp-0x8],eax
  414770:	jmp    0x414659
  414775:	leave  
  414776:	ret    0xc
  414779:	push   ebp
  41477a:	mov    ebp,esp
  41477c:	push   ecx
  41477d:	push   ecx
  41477e:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  414785:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  41478c:	xor    eax,eax
  41478e:	inc    eax
  41478f:	je     0x4147d1
  414791:	mov    eax,DWORD PTR [ebp-0x4]
  414794:	xor    eax,0x7510896
  414799:	add    eax,0x3272dd
  41479e:	cmp    DWORD PTR [ebp+0xc],eax
  4147a1:	jne    0x4147a5
  4147a3:	jmp    0x4147d1
  4147a5:	mov    eax,DWORD PTR [ebp-0x8]
  4147a8:	xor    eax,0x7510896
  4147ad:	add    eax,0x3272dd
  4147b2:	mov    ecx,DWORD PTR [ebp+0xc]
  4147b5:	sub    ecx,eax
  4147b7:	mov    DWORD PTR [ebp+0xc],ecx
  4147ba:	mov    eax,DWORD PTR [ebp-0x4]
  4147bd:	xor    eax,0x7510896
  4147c2:	add    eax,0x3272dd
  4147c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4147ca:	add    ecx,DWORD PTR [ebp+0xc]
  4147cd:	mov    BYTE PTR [ecx],al
  4147cf:	jmp    0x41478c
  4147d1:	leave  
  4147d2:	ret    0x8
  4147d5:	push   ebp
  4147d6:	mov    ebp,esp
  4147d8:	sub    esp,0x21c
  4147de:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4147e5:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  4147ec:	mov    eax,DWORD PTR [ebp+0x10]
  4147ef:	mov    eax,DWORD PTR [ebp-0x4]
  4147f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4147f5:	push   esi
  4147f6:	push   edi
  4147f7:	mov    edi,0x7510896
  4147fc:	xor    eax,edi
  4147fe:	mov    esi,0x3272dd
  414803:	add    eax,esi
  414805:	cmp    eax,ecx
  414807:	mov    eax,DWORD PTR [ebp-0x4]
  41480a:	jne    0x414815
  41480c:	xor    eax,edi
  41480e:	add    eax,esi
  414810:	jmp    0x4148c1
  414815:	mov    ecx,DWORD PTR [ebp+0xc]
  414818:	xor    eax,edi
  41481a:	add    eax,esi
  41481c:	cmp    eax,ecx
  41481e:	jne    0x414825
  414820:	mov    eax,DWORD PTR [ebp-0x4]
  414823:	jmp    0x41480c
  414825:	lea    eax,[ebp-0x21c]
  41482b:	mov    DWORD PTR [ebp-0x8],eax
  41482e:	mov    eax,DWORD PTR [ebp+0xc]
  414831:	mov    DWORD PTR [ebp-0x10],eax
  414834:	mov    eax,DWORD PTR [ebp-0x4]
  414837:	xor    eax,edi
  414839:	add    eax,esi
  41483b:	mov    DWORD PTR [ebp+0x10],eax
  41483e:	mov    eax,DWORD PTR [ebp+0xc]
  414841:	push   ebx
  414842:	call   0x414532
  414847:	mov    ebx,eax
  414849:	mov    eax,DWORD PTR [ebp+0x8]
  41484c:	mov    eax,DWORD PTR [eax+0x14]
  41484f:	jmp    0x4148a9
  414851:	mov    eax,DWORD PTR [ebp+0xc]
  414854:	sub    eax,0x8
  414857:	mov    DWORD PTR [ebp-0xc],eax
  41485a:	mov    eax,DWORD PTR [ebp-0xc]
  41485d:	mov    eax,DWORD PTR [eax+0x28]
  414860:	call   0x41441a
  414865:	mov    DWORD PTR [ebp+0x10],eax
  414868:	push   DWORD PTR [ebp+0x10]
  41486b:	mov    edx,DWORD PTR [ebp-0x8]
  41486e:	call   0x4145c1
  414873:	mov    eax,DWORD PTR [ebp-0x4]
  414876:	xor    eax,edi
  414878:	add    eax,esi
  41487a:	cmp    eax,ebx
  41487c:	jne    0x414886
  41487e:	mov    eax,DWORD PTR [ebp-0x8]
  414881:	call   0x4144a8
  414886:	mov    eax,DWORD PTR [ebp-0x14]
  414889:	xor    eax,edi
  41488b:	add    eax,esi
  41488d:	push   eax
  41488e:	push   DWORD PTR [ebp-0x10]
  414891:	push   DWORD PTR [ebp-0x8]
  414894:	call   0x4141ac
  414899:	mov    ecx,DWORD PTR [ebp-0x4]
  41489c:	xor    ecx,edi
  41489e:	add    ecx,esi
  4148a0:	cmp    eax,ecx
  4148a2:	je     0x4148c7
  4148a4:	mov    eax,DWORD PTR [ebp+0xc]
  4148a7:	mov    eax,DWORD PTR [eax]
  4148a9:	mov    DWORD PTR [ebp+0xc],eax
  4148ac:	mov    eax,DWORD PTR [ebp+0x8]
  4148af:	mov    ecx,DWORD PTR [ebp+0xc]
  4148b2:	add    eax,0x14
  4148b5:	cmp    ecx,eax
  4148b7:	jne    0x414851
  4148b9:	mov    eax,DWORD PTR [ebp-0x4]
  4148bc:	xor    eax,edi
  4148be:	add    eax,esi
  4148c0:	pop    ebx
  4148c1:	pop    edi
  4148c2:	pop    esi
  4148c3:	leave  
  4148c4:	ret    0xc
  4148c7:	mov    eax,DWORD PTR [ebp-0xc]
  4148ca:	mov    eax,DWORD PTR [eax+0x18]
  4148cd:	jmp    0x4148c0
  4148cf:	push   ebp
  4148d0:	mov    ebp,esp
  4148d2:	mov    eax,DWORD PTR [ebp+0xc]
  4148d5:	sub    esp,0x10
  4148d8:	cmp    DWORD PTR [ebp+0x8],0x0
  4148dc:	push   ebx
  4148dd:	push   esi
  4148de:	push   edi
  4148df:	je     0x414994
  4148e5:	test   eax,eax
  4148e7:	je     0x414994
  4148ed:	movzx  eax,WORD PTR [eax+0x20]
  4148f1:	mov    ecx,eax
  4148f3:	mov    DWORD PTR [ebp-0x10],eax
  4148f6:	xor    edx,edx
  4148f8:	and    DWORD PTR [ebp-0x8],edx
  4148fb:	mov    eax,0x8a89
  414900:	xor    ecx,eax
  414902:	add    ecx,0x3b4c
  414908:	mov    DWORD PTR [ebp-0xc],ecx
  41490b:	and    DWORD PTR [ebp-0x4],0x0
  41490f:	xor    ecx,ecx
  414911:	push   0x7c
  414913:	pop    edi
  414914:	cmp    cx,WORD PTR [ebp-0xc]
  414918:	jae    0x41497e
  41491a:	lea    esi,[edx-0x3b4c]
  414920:	xor    esi,eax
  414922:	movzx  ecx,WORD PTR [ebp-0x4]
  414926:	mov    ebx,DWORD PTR [ebp+0xc]
  414929:	lea    ecx,[ebx+ecx*4]
  41492c:	cmp    WORD PTR [ecx+0x2],si
  414930:	jne    0x414969
  414932:	movzx  ecx,WORD PTR [ecx]
  414935:	mov    edi,0x4e3d
  41493a:	cmp    cx,di
  41493d:	jne    0x41494b
  41493f:	mov    ebx,DWORD PTR [ebp+0x8]
  414942:	movzx  edi,dx
  414945:	cmp    BYTE PTR [edi+ebx*1],0x0
  414949:	je     0x414978
  41494b:	mov    ebx,DWORD PTR [ebp+0x8]
  41494e:	movzx  edi,dx
  414951:	movsx  di,BYTE PTR [edi+ebx*1]
  414956:	mov    ebx,0x3b4c
  41495b:	sub    di,bx
  41495e:	xor    di,ax
  414961:	cmp    cx,di
  414964:	je     0x414978
  414966:	push   0x7a
  414968:	pop    edi
  414969:	inc    DWORD PTR [ebp-0x4]
  41496c:	mov    cx,WORD PTR [ebp-0xc]
  414970:	cmp    WORD PTR [ebp-0x4],cx
  414974:	jb     0x414922
  414976:	jmp    0x41497e
  414978:	inc    DWORD PTR [ebp-0x8]
  41497b:	push   0x7d
  41497d:	pop    edi
  41497e:	mov    esi,DWORD PTR [ebp+0x8]
  414981:	movzx  ecx,dx
  414984:	cmp    BYTE PTR [ecx+esi*1],0x0
  414988:	je     0x41499d
  41498a:	inc    edx
  41498b:	cmp    edi,0x7a
  41498e:	jne    0x41490b
  414994:	xor    eax,eax
  414996:	pop    edi
  414997:	pop    esi
  414998:	pop    ebx
  414999:	leave  
  41499a:	ret    0x8
  41499d:	mov    ecx,DWORD PTR [ebp-0x8]
  4149a0:	add    ecx,0xffffc4b4
  4149a6:	xor    cx,ax
  4149a9:	xor    eax,eax
  4149ab:	cmp    cx,WORD PTR [ebp-0x10]
  4149af:	sete   al
  4149b2:	jmp    0x414996
  4149b4:	push   ebp
  4149b5:	mov    ebp,esp
  4149b7:	sub    esp,0x50
  4149ba:	push   edi
  4149bb:	mov    edi,eax
  4149bd:	mov    eax,DWORD PTR [edi+0x1a8]
  4149c3:	cmp    DWORD PTR [eax],0x0
  4149c6:	jne    0x4149cf
  4149c8:	xor    eax,eax
  4149ca:	jmp    0x414aff
  4149cf:	push   0x2c
  4149d1:	push   DWORD PTR [ebp+0x8]
  4149d4:	call   0x414779
  4149d9:	mov    edx,DWORD PTR [edi+0x1ac]
  4149df:	lea    eax,[edi+0x22]
  4149e2:	mov    DWORD PTR [ebp-0x4c],eax
  4149e5:	lea    eax,[edi+0x44]
  4149e8:	mov    DWORD PTR [ebp-0x48],eax
  4149eb:	lea    eax,[edi+0x66]
  4149ee:	mov    DWORD PTR [ebp-0x44],eax
  4149f1:	lea    eax,[edi+0x88]
  4149f7:	mov    DWORD PTR [ebp-0x40],eax
  4149fa:	lea    eax,[edi+0xaa]
  414a00:	mov    DWORD PTR [ebp-0x3c],eax
  414a03:	lea    eax,[edi+0xcc]
  414a09:	mov    DWORD PTR [ebp-0x38],eax
  414a0c:	lea    eax,[edi+0xee]
  414a12:	mov    DWORD PTR [ebp-0x34],eax
  414a15:	lea    eax,[edi+0x110]
  414a1b:	mov    DWORD PTR [ebp-0x30],eax
  414a1e:	lea    eax,[edi+0x132]
  414a24:	mov    DWORD PTR [ebp-0x2c],eax
  414a27:	lea    eax,[edi+0x154]
  414a2d:	push   edi
  414a2e:	mov    DWORD PTR [ebp-0x50],edi
  414a31:	mov    DWORD PTR [ebp-0x28],eax
  414a34:	call   0x414b33
  414a39:	push   eax
  414a3a:	mov    eax,DWORD PTR [edi+0x1a8]
  414a40:	push   DWORD PTR [eax]
  414a42:	call   0x4147d5
  414a47:	mov    DWORD PTR [ebp-0x10],eax
  414a4a:	test   eax,eax
  414a4c:	je     0x414aff
  414a52:	mov    ecx,DWORD PTR [eax+0x3c]
  414a55:	push   ebx
  414a56:	push   esi
  414a57:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  414a5b:	add    esi,eax
  414a5d:	mov    edi,DWORD PTR [esi+0x24]
  414a60:	mov    ecx,DWORD PTR [esi+0x1c]
  414a63:	mov    edx,DWORD PTR [esi+0x20]
  414a66:	mov    ebx,DWORD PTR [esi+0x18]
  414a69:	add    edi,eax
  414a6b:	mov    DWORD PTR [ebp-0x20],edi
  414a6e:	mov    edi,DWORD PTR [esi+0x14]
  414a71:	add    ecx,eax
  414a73:	add    edx,eax
  414a75:	mov    DWORD PTR [ebp-0xc],ecx
  414a78:	mov    DWORD PTR [ebp-0x1c],edx
  414a7b:	mov    DWORD PTR [ebp-0x8],edi
  414a7e:	cmp    edi,ebx
  414a80:	ja     0x414a85
  414a82:	mov    DWORD PTR [ebp-0x8],ebx
  414a85:	xor    ebx,ebx
  414a87:	mov    DWORD PTR [ebp-0x18],ebx
  414a8a:	cmp    DWORD PTR [ebp-0x8],ebx
  414a8d:	jbe    0x414afd
  414a8f:	jmp    0x414a94
  414a91:	mov    edx,DWORD PTR [ebp-0x1c]
  414a94:	mov    edi,DWORD PTR [ebp-0x20]
  414a97:	movzx  edi,WORD PTR [edi+ebx*2]
  414a9b:	cmp    ebx,DWORD PTR [esi+0x18]
  414a9e:	jae    0x414afd
  414aa0:	cmp    edi,DWORD PTR [esi+0x14]
  414aa3:	jae    0x414afd
  414aa5:	mov    ebx,DWORD PTR [edx+ebx*4]
  414aa8:	mov    edx,DWORD PTR [ebp+0x8]
  414aab:	mov    edi,DWORD PTR [ecx+edi*4]
  414aae:	mov    DWORD PTR [ebp-0x4],edx
  414ab1:	lea    edx,[ebp-0x50]
  414ab4:	add    ebx,eax
  414ab6:	add    edi,eax
  414ab8:	sub    edx,DWORD PTR [ebp+0x8]
  414abb:	mov    DWORD PTR [ebp-0x14],0xb
  414ac2:	mov    DWORD PTR [ebp-0x24],edx
  414ac5:	mov    edx,DWORD PTR [ebp-0x4]
  414ac8:	cmp    DWORD PTR [edx],0x0
  414acb:	jne    0x414ae8
  414acd:	mov    eax,DWORD PTR [ebp-0x24]
  414ad0:	push   DWORD PTR [eax+edx*1]
  414ad3:	push   ebx
  414ad4:	call   0x4148cf
  414ad9:	mov    ecx,DWORD PTR [ebp-0xc]
  414adc:	test   eax,eax
  414ade:	je     0x414ae5
  414ae0:	mov    eax,DWORD PTR [ebp-0x4]
  414ae3:	mov    DWORD PTR [eax],edi
  414ae5:	mov    eax,DWORD PTR [ebp-0x10]
  414ae8:	add    DWORD PTR [ebp-0x4],0x4
  414aec:	dec    DWORD PTR [ebp-0x14]
  414aef:	jne    0x414ac5
  414af1:	mov    ebx,DWORD PTR [ebp-0x18]
  414af4:	inc    ebx
  414af5:	mov    DWORD PTR [ebp-0x18],ebx
  414af8:	cmp    ebx,DWORD PTR [ebp-0x8]
  414afb:	jb     0x414a91
  414afd:	pop    esi
  414afe:	pop    ebx
  414aff:	pop    edi
  414b00:	leave  
  414b01:	ret    0x4
  414b04:	push   ebp
  414b05:	mov    ebp,esp
  414b07:	mov    eax,DWORD PTR [ebp+0x8]
  414b0a:	push   esi
  414b0b:	push   DWORD PTR [eax+0x1d8]
  414b11:	lea    esi,[eax+0x198]
  414b17:	mov    eax,DWORD PTR [ebp+0x8]
  414b1a:	call   0x4149b4
  414b1f:	mov    ecx,DWORD PTR [esi]
  414b21:	mov    DWORD PTR [ecx],eax
  414b23:	mov    eax,DWORD PTR [esi]
  414b25:	xor    ecx,ecx
  414b27:	cmp    DWORD PTR [eax],ecx
  414b29:	pop    esi
  414b2a:	setne  cl
  414b2d:	mov    eax,ecx
  414b2f:	pop    ebp
  414b30:	ret    0x4
  414b33:	mov    ecx,DWORD PTR [edi+0x188]
  414b39:	push   ebx
  414b3a:	jmp    0x414b4f
  414b3c:	xor    eax,0x8a89
  414b41:	add    eax,0x3b4c
  414b46:	mov    WORD PTR [ecx],ax
  414b49:	add    ecx,0x2
  414b4c:	add    edx,0x2
  414b4f:	movzx  eax,WORD PTR [edx]
  414b52:	mov    ebx,0x4e3d
  414b57:	cmp    ax,bx
  414b5a:	jne    0x414b3c
  414b5c:	xor    eax,eax
  414b5e:	mov    WORD PTR [ecx],ax
  414b61:	mov    eax,DWORD PTR [edi+0x188]
  414b67:	pop    ebx
  414b68:	ret    
  414b69:	push   edi
  414b6a:	mov    edi,eax
  414b6c:	mov    eax,DWORD PTR [esi+0x188]
  414b72:	shl    edi,0x6
  414b75:	add    eax,edi
  414b77:	jmp    0x414b83
  414b79:	xor    cl,0x71
  414b7c:	sub    cl,0xb
  414b7f:	mov    BYTE PTR [eax],cl
  414b81:	inc    eax
  414b82:	inc    edx
  414b83:	mov    cl,BYTE PTR [edx]
  414b85:	cmp    cl,0x7a
  414b88:	jne    0x414b79
  414b8a:	mov    BYTE PTR [eax],0x0
  414b8d:	mov    eax,DWORD PTR [esi+0x188]
  414b93:	add    eax,edi
  414b95:	pop    edi
  414b96:	ret    
  414b97:	push   ebp
  414b98:	mov    ebp,esp
  414b9a:	sub    esp,0x38
  414b9d:	push   ebx
  414b9e:	mov    ebx,0xf89c85b5
  414ba3:	mov    DWORD PTR [ebp-0x4],ebx
  414ba6:	lea    eax,[ebx-0x3]
  414ba9:	push   esi
  414baa:	mov    DWORD PTR [ebp-0x24],eax
  414bad:	mov    ecx,DWORD PTR [ebp-0x4]
  414bb0:	mov    edx,DWORD PTR [ebp+0x8]
  414bb3:	mov    esi,0x7510896
  414bb8:	push   edi
  414bb9:	xor    ecx,esi
  414bbb:	mov    edi,0x3272dd
  414bc0:	add    ecx,edi
  414bc2:	cmp    edx,ecx
  414bc4:	je     0x414d32
  414bca:	mov    ecx,DWORD PTR [ebp-0x4]
  414bcd:	mov    edx,DWORD PTR [ebp+0xc]
  414bd0:	xor    ecx,esi
  414bd2:	add    ecx,edi
  414bd4:	cmp    edx,ecx
  414bd6:	je     0x414d32
  414bdc:	mov    ecx,DWORD PTR [ebp+0x10]
  414bdf:	mov    DWORD PTR [ebp-0x18],ecx
  414be2:	mov    ecx,DWORD PTR [ebp+0xc]
  414be5:	mov    DWORD PTR [ebp-0x14],ecx
  414be8:	mov    ecx,DWORD PTR [ebp+0x8]
  414beb:	mov    DWORD PTR [ebp-0x1c],0xf89c8508
  414bf2:	mov    DWORD PTR [ebp-0x20],eax
  414bf5:	mov    DWORD PTR [ebp-0x10],ebx
  414bf8:	mov    DWORD PTR [ebp+0xc],eax
  414bfb:	mov    DWORD PTR [ebp+0x10],0xf89c85b3
  414c02:	mov    eax,DWORD PTR [ebp+0xc]
  414c05:	mov    DWORD PTR [ebp-0xc],ecx
  414c08:	xor    eax,esi
  414c0a:	mov    ecx,0xffcd8d23
  414c0f:	sub    ecx,eax
  414c11:	add    ecx,DWORD PTR [ebp-0x14]
  414c14:	mov    DWORD PTR [ebp+0x8],ecx
  414c17:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  414c1e:	jmp    0x414d22
  414c23:	mov    eax,DWORD PTR [ebp+0xc]
  414c26:	mov    ecx,DWORD PTR [ebp+0xc]
  414c29:	xor    eax,esi
  414c2b:	xor    ecx,esi
  414c2d:	lea    ecx,[eax+ecx*1+0x64e5ba]
  414c34:	mov    eax,DWORD PTR [ebp+0x8]
  414c37:	xor    edx,edx
  414c39:	div    ecx
  414c3b:	mov    eax,DWORD PTR [ebp+0x10]
  414c3e:	mov    ecx,DWORD PTR [ebp+0xc]
  414c41:	xor    eax,esi
  414c43:	xor    ecx,esi
  414c45:	sub    eax,ecx
  414c47:	cmp    edx,eax
  414c49:	jne    0x414cde
  414c4f:	mov    eax,DWORD PTR [ebp+0x8]
  414c52:	add    eax,DWORD PTR [ebp-0xc]
  414c55:	mov    dl,BYTE PTR [eax]
  414c57:	mov    eax,DWORD PTR [ebp-0x10]
  414c5a:	mov    ecx,DWORD PTR [ebp-0x8]
  414c5d:	xor    eax,esi
  414c5f:	xor    ecx,esi
  414c61:	add    eax,edi
  414c63:	add    ecx,edi
  414c65:	cmp    eax,ecx
  414c67:	jae    0x414caf
  414c69:	lea    ecx,[eax-0x3272dd]
  414c6f:	mov    DWORD PTR [ebp-0x4],ecx
  414c72:	mov    ebx,DWORD PTR [ebp-0x4]
  414c75:	xor    ebx,esi
  414c77:	add    ebx,0x7f55d8f3
  414c7d:	lea    ecx,[ebp+eax*4-0x38]
  414c81:	mov    DWORD PTR [ecx],ebx
  414c83:	mov    ebx,DWORD PTR [ecx]
  414c85:	cmp    ebx,0x244ecbd0
  414c8b:	jbe    0x414c95
  414c8d:	add    DWORD PTR [ecx],0x405fc11
  414c93:	jmp    0x414c9b
  414c95:	add    DWORD PTR [ecx],0xfdaf43ef
  414c9b:	mov    ecx,DWORD PTR [ebp-0x8]
  414c9e:	xor    ecx,esi
  414ca0:	inc    eax
  414ca1:	inc    DWORD PTR [ebp-0x4]
  414ca4:	add    ecx,edi
  414ca6:	cmp    eax,ecx
  414ca8:	jb     0x414c72
  414caa:	mov    ebx,0xf89c85b5
  414caf:	mov    eax,DWORD PTR [ebp-0x18]
  414cb2:	test   eax,eax
  414cb4:	jne    0x414cbe
  414cb6:	xor    dl,0x71
  414cb9:	sub    dl,0xb
  414cbc:	jmp    0x414cd4
  414cbe:	mov    eax,DWORD PTR [ebp-0x1c]
  414cc1:	xor    al,0x96
  414cc3:	mov    cl,0x23
  414cc5:	sub    cl,al
  414cc7:	add    dl,cl
  414cc9:	mov    ecx,DWORD PTR [ebp-0x20]
  414ccc:	xor    cl,0x96
  414ccf:	sub    cl,0x23
  414cd2:	ror    dl,cl
  414cd4:	xor    eax,eax
  414cd6:	mov    eax,DWORD PTR [ebp+0x8]
  414cd9:	add    eax,DWORD PTR [ebp-0xc]
  414cdc:	mov    BYTE PTR [eax],dl
  414cde:	mov    eax,DWORD PTR [ebp+0x8]
  414ce1:	mov    ecx,DWORD PTR [ebp-0x10]
  414ce4:	sub    eax,edi
  414ce6:	xor    eax,esi
  414ce8:	cmp    eax,ecx
  414cea:	jne    0x414d10
  414cec:	mov    eax,DWORD PTR [ebp+0x10]
  414cef:	mov    ecx,DWORD PTR [ebp+0xc]
  414cf2:	xor    eax,esi
  414cf4:	xor    ecx,esi
  414cf6:	sub    eax,ecx
  414cf8:	sub    eax,edi
  414cfa:	xor    eax,esi
  414cfc:	mov    DWORD PTR [ebp+0x10],eax
  414cff:	mov    eax,DWORD PTR [ebp+0xc]
  414d02:	xor    eax,esi
  414d04:	mov    ecx,0xffcd8d23
  414d09:	sub    ecx,eax
  414d0b:	add    ecx,DWORD PTR [ebp-0x14]
  414d0e:	jmp    0x414d1f
  414d10:	mov    eax,DWORD PTR [ebp+0xc]
  414d13:	xor    eax,esi
  414d15:	mov    ecx,0xffcd8d23
  414d1a:	sub    ecx,eax
  414d1c:	add    ecx,DWORD PTR [ebp+0x8]
  414d1f:	mov    DWORD PTR [ebp+0x8],ecx
  414d22:	mov    eax,DWORD PTR [ebp+0x10]
  414d25:	cmp    eax,ebx
  414d27:	jne    0x414c23
  414d2d:	mov    eax,DWORD PTR [ebp-0x24]
  414d30:	jmp    0x414d35
  414d32:	mov    eax,DWORD PTR [ebp-0x4]
  414d35:	xor    eax,esi
  414d37:	add    eax,edi
  414d39:	pop    edi
  414d3a:	pop    esi
  414d3b:	pop    ebx
  414d3c:	leave  
  414d3d:	ret    0xc
  414d40:	push   ebp
  414d41:	mov    ebp,esp
  414d43:	sub    esp,0x14
  414d46:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  414d4d:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  414d54:	mov    eax,DWORD PTR [ebx]
  414d56:	mov    DWORD PTR [ebp-0x8],eax
  414d59:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  414d60:	push   esi
  414d61:	push   edi
  414d62:	mov    DWORD PTR [ebp-0x14],0xead718d5
  414d69:	mov    edi,DWORD PTR [ebp-0x4]
  414d6c:	mov    ecx,DWORD PTR [ebp-0x10]
  414d6f:	mov    eax,0x7510896
  414d74:	xor    edi,eax
  414d76:	mov    edx,0x3272dd
  414d7b:	xor    ecx,eax
  414d7d:	add    edi,edx
  414d7f:	add    ecx,edx
  414d81:	imul   edi,ecx
  414d84:	jmp    0x414dcc
  414d86:	mov    ecx,DWORD PTR [ebp-0x8]
  414d89:	mov    esi,DWORD PTR [ebp-0x4]
  414d8c:	xor    ecx,eax
  414d8e:	xor    esi,eax
  414d90:	add    ecx,edx
  414d92:	add    esi,edx
  414d94:	test   esi,ecx
  414d96:	mov    esi,DWORD PTR [ebp-0x8]
  414d99:	mov    ecx,DWORD PTR [ebp-0x4]
  414d9c:	je     0x414db3
  414d9e:	xor    ecx,eax
  414da0:	xor    esi,eax
  414da2:	add    ecx,edx
  414da4:	add    esi,edx
  414da6:	shr    esi,cl
  414da8:	mov    ecx,DWORD PTR [ebp-0x14]
  414dab:	xor    ecx,eax
  414dad:	add    ecx,edx
  414daf:	xor    esi,ecx
  414db1:	jmp    0x414dbd
  414db3:	xor    esi,eax
  414db5:	xor    ecx,eax
  414db7:	add    esi,edx
  414db9:	add    ecx,edx
  414dbb:	shr    esi,cl
  414dbd:	mov    DWORD PTR [ebp-0x8],esi
  414dc0:	mov    ecx,DWORD PTR [ebp-0x4]
  414dc3:	xor    ecx,eax
  414dc5:	lea    edi,[edi+ecx*1+0x3272dd]
  414dcc:	mov    ecx,DWORD PTR [ebp-0xc]
  414dcf:	mov    esi,DWORD PTR [ebp-0x4]
  414dd2:	xor    esi,eax
  414dd4:	xor    ecx,eax
  414dd6:	sub    ecx,esi
  414dd8:	cmp    edi,ecx
  414dda:	jbe    0x414d86
  414ddc:	mov    eax,DWORD PTR [ebp-0x8]
  414ddf:	pop    edi
  414de0:	mov    DWORD PTR [ebx],eax
  414de2:	mov    eax,DWORD PTR [ebp-0x8]
  414de5:	pop    esi
  414de6:	leave  
  414de7:	ret    
  414de8:	push   ebp
  414de9:	mov    ebp,esp
  414deb:	sub    esp,0x420
  414df1:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  414df8:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  414dff:	mov    DWORD PTR [ebp-0x18],0xf89c86b5
  414e06:	push   ebx
  414e07:	mov    DWORD PTR [ebp-0x1c],0xf89c85b4
  414e0e:	mov    eax,DWORD PTR [ebp-0x14]
  414e11:	push   esi
  414e12:	mov    esi,0x7510896
  414e17:	push   edi
  414e18:	xor    eax,esi
  414e1a:	mov    edi,0x3272dd
  414e1f:	add    eax,edi
  414e21:	mov    DWORD PTR [ebp-0x8],eax
  414e24:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  414e2b:	mov    DWORD PTR [ebp-0x4],0xead718d5
  414e32:	mov    DWORD PTR [ebp-0x10],0x8
  414e39:	mov    ecx,ecx
  414e3b:	mov    eax,DWORD PTR [ebp-0xc]
  414e3e:	mov    ecx,DWORD PTR [ebp-0x14]
  414e41:	xor    eax,esi
  414e43:	xor    ecx,esi
  414e45:	add    eax,edi
  414e47:	add    ecx,edi
  414e49:	imul   eax,ecx
  414e4c:	jmp    0x414e7f
  414e4e:	mov    eax,DWORD PTR [ebp-0x4]
  414e51:	sub    eax,edi
  414e53:	xor    eax,esi
  414e55:	mov    DWORD PTR [ebp-0x8],eax
  414e58:	lea    ebx,[ebp-0x8]
  414e5b:	call   0x414d40
  414e60:	mov    DWORD PTR [ebp-0x8],eax
  414e63:	mov    eax,DWORD PTR [ebp-0x8]
  414e66:	mov    ecx,DWORD PTR [ebp-0x4]
  414e69:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  414e70:	mov    eax,DWORD PTR [ebp-0xc]
  414e73:	mov    ecx,DWORD PTR [ebp-0x4]
  414e76:	xor    eax,esi
  414e78:	lea    eax,[eax+ecx*1+0x3272dd]
  414e7f:	mov    DWORD PTR [ebp-0x4],eax
  414e82:	mov    eax,DWORD PTR [ebp-0x18]
  414e85:	mov    ecx,DWORD PTR [ebp-0xc]
  414e88:	xor    ecx,esi
  414e8a:	xor    eax,esi
  414e8c:	sub    eax,ecx
  414e8e:	mov    ecx,DWORD PTR [ebp-0x4]
  414e91:	cmp    ecx,eax
  414e93:	jbe    0x414e4e
  414e95:	mov    eax,DWORD PTR [ebp-0x1c]
  414e98:	xor    eax,esi
  414e9a:	add    eax,edi
  414e9c:	mov    DWORD PTR [ebp-0x8],eax
  414e9f:	mov    DWORD PTR [ebp-0x18],0xf89c86b4
  414ea6:	mov    ebx,ebx
  414ea8:	jmp    0x414f0b
  414eaa:	mov    ecx,DWORD PTR [ebp-0x20]
  414ead:	mov    eax,DWORD PTR [ebp-0x8]
  414eb0:	xor    ecx,esi
  414eb2:	add    ecx,edi
  414eb4:	shr    eax,cl
  414eb6:	mov    DWORD PTR [ebp-0x4],eax
  414eb9:	mov    eax,DWORD PTR [ebp+0x8]
  414ebc:	mov    cl,BYTE PTR [eax]
  414ebe:	mov    BYTE PTR [ebp+0xb],cl
  414ec1:	mov    cl,BYTE PTR [ebp+0xb]
  414ec4:	mov    edx,DWORD PTR [ebp-0x8]
  414ec7:	movzx  ecx,cl
  414eca:	xor    ecx,edx
  414ecc:	mov    DWORD PTR [ebp+0x8],ecx
  414ecf:	mov    ecx,DWORD PTR [ebp-0x18]
  414ed2:	mov    edx,DWORD PTR [ebp+0x8]
  414ed5:	xor    ecx,esi
  414ed7:	add    ecx,edi
  414ed9:	and    ecx,edx
  414edb:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  414ee2:	mov    edx,DWORD PTR [ebp-0x4]
  414ee5:	xor    ecx,edx
  414ee7:	mov    DWORD PTR [ebp-0x8],ecx
  414eea:	mov    ecx,DWORD PTR [ebp-0xc]
  414eed:	xor    ecx,esi
  414eef:	lea    eax,[eax+ecx*1+0x3272dd]
  414ef6:	mov    DWORD PTR [ebp+0x8],eax
  414ef9:	mov    eax,DWORD PTR [ebp-0xc]
  414efc:	xor    eax,esi
  414efe:	mov    ecx,0xffcd8d23
  414f03:	sub    ecx,eax
  414f05:	add    ecx,DWORD PTR [ebp-0x10]
  414f08:	mov    DWORD PTR [ebp-0x10],ecx
  414f0b:	mov    eax,DWORD PTR [ebp-0x14]
  414f0e:	mov    ecx,DWORD PTR [ebp-0x10]
  414f11:	xor    eax,esi
  414f13:	add    eax,edi
  414f15:	cmp    ecx,eax
  414f17:	jne    0x414eaa
  414f19:	mov    eax,DWORD PTR [ebp-0x1c]
  414f1c:	mov    ecx,DWORD PTR [ebp-0x8]
  414f1f:	xor    eax,esi
  414f21:	add    eax,edi
  414f23:	pop    edi
  414f24:	pop    esi
  414f25:	xor    eax,ecx
  414f27:	pop    ebx
  414f28:	leave  
  414f29:	ret    0x4
  414f2c:	push   ebp
  414f2d:	mov    ebp,esp
  414f2f:	mov    eax,DWORD PTR [ebp+0x1c]
  414f32:	mov    ecx,DWORD PTR [ebp+0x8]
  414f35:	mov    edx,DWORD PTR [ebp+0x10]
  414f38:	mov    eax,DWORD PTR [eax+0x190]
  414f3e:	mov    eax,DWORD PTR [eax]
  414f40:	sub    esp,0x64
  414f43:	push   ebx
  414f44:	push   esi
  414f45:	push   edi
  414f46:	mov    edi,0x7510896
  414f4b:	xor    ecx,edi
  414f4d:	mov    ebx,0x3272dd
  414f52:	add    ecx,ebx
  414f54:	cmp    ecx,edx
  414f56:	jne    0x414f67
  414f58:	or     DWORD PTR ds:0x3750c3f,0x4263eb0c
  414f62:	jmp    0x415464
  414f67:	mov    ecx,DWORD PTR [ebp+0x8]
  414f6a:	mov    esi,DWORD PTR [ebp+0x14]
  414f6d:	mov    edx,DWORD PTR [esi]
  414f6f:	xor    ecx,edi
  414f71:	add    ecx,ebx
  414f73:	cmp    edx,ecx
  414f75:	je     0x41541f
  414f7b:	mov    ecx,DWORD PTR [ebp+0x1c]
  414f7e:	mov    DWORD PTR [ebp-0x1c],eax
  414f81:	mov    DWORD PTR [ebp+0x1c],ecx
  414f84:	mov    ecx,DWORD PTR [ebp+0x18]
  414f87:	mov    eax,DWORD PTR [esi]
  414f89:	mov    DWORD PTR [ebp-0x20],eax
  414f8c:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  414f93:	mov    edx,0xf89c85b2
  414f98:	mov    DWORD PTR [ebp-0x8],edx
  414f9b:	mov    eax,DWORD PTR [ebp+0x1c]
  414f9e:	mov    DWORD PTR [ebp+0x1c],eax
  414fa1:	mov    eax,DWORD PTR [ebp+0x1c]
  414fa4:	mov    eax,DWORD PTR [eax+0x190]
  414faa:	mov    eax,DWORD PTR [eax]
  414fac:	mov    DWORD PTR [ebp-0x24],ecx
  414faf:	mov    ecx,DWORD PTR [ebp+0x1c]
  414fb2:	mov    ecx,DWORD PTR [ecx+0x190]
  414fb8:	mov    ecx,DWORD PTR [ecx]
  414fba:	add    ecx,DWORD PTR [eax+0x3c]
  414fbd:	mov    DWORD PTR [ebp+0x10],ecx
  414fc0:	mov    eax,DWORD PTR [ebp+0x8]
  414fc3:	xor    eax,edi
  414fc5:	add    eax,ebx
  414fc7:	mov    DWORD PTR [ebp-0x4],eax
  414fca:	mov    eax,DWORD PTR [ebp+0x8]
  414fcd:	xor    eax,edi
  414fcf:	add    eax,ebx
  414fd1:	mov    DWORD PTR [ebp+0x18],eax
  414fd4:	mov    eax,DWORD PTR [ebp+0x10]
  414fd7:	mov    eax,DWORD PTR [eax+0x50]
  414fda:	sub    eax,0xc
  414fdd:	mov    DWORD PTR [ebp-0x28],eax
  414fe0:	mov    eax,DWORD PTR [ebp+0x10]
  414fe3:	mov    eax,DWORD PTR [eax+0x38]
  414fe6:	mov    ecx,DWORD PTR [ebp+0x10]
  414fe9:	dec    eax
  414fea:	test   DWORD PTR [ecx+0x54],eax
  414fed:	mov    eax,DWORD PTR [ebp+0x10]
  414ff0:	je     0x41500a
  414ff2:	mov    eax,DWORD PTR [eax+0x38]
  414ff5:	mov    ecx,DWORD PTR [ebp+0x10]
  414ff8:	mov    ecx,DWORD PTR [ecx+0x54]
  414ffb:	dec    eax
  414ffc:	not    eax
  414ffe:	and    ecx,eax
  415000:	mov    eax,DWORD PTR [ebp+0x10]
  415003:	mov    eax,DWORD PTR [eax+0x38]
  415006:	add    eax,ecx
  415008:	jmp    0x41500d
  41500a:	mov    eax,DWORD PTR [eax+0x54]
  41500d:	mov    DWORD PTR [ebp+0x1c],eax
  415010:	mov    eax,DWORD PTR [ebp+0x8]
  415013:	xor    eax,edi
  415015:	add    eax,ebx
  415017:	mov    DWORD PTR [ebp+0x18],eax
  41501a:	mov    eax,DWORD PTR [ebp+0x8]
  41501d:	xor    eax,edi
  41501f:	add    eax,ebx
  415021:	mov    DWORD PTR [ebp+0x18],eax
  415024:	mov    eax,DWORD PTR [ebp+0x8]
  415027:	mov    ecx,DWORD PTR [ebp-0x24]
  41502a:	xor    eax,edi
  41502c:	add    eax,ebx
  41502e:	mov    DWORD PTR [ecx],eax
  415030:	mov    DWORD PTR [ebp+0x18],edx
  415033:	mov    DWORD PTR [ebp+0x18],0xf89c85b3
  41503a:	mov    DWORD PTR [ebp+0x18],0xf89c85b0
  415041:	mov    DWORD PTR [ebp+0x18],0xf89c85b1
  415048:	mov    eax,DWORD PTR [ebp-0x8]
  41504b:	mov    ecx,DWORD PTR [ebp+0x1c]
  41504e:	xor    eax,edi
  415050:	add    eax,ebx
  415052:	imul   eax,ecx
  415055:	mov    ecx,DWORD PTR [ebp+0x8]
  415058:	mov    edx,DWORD PTR [ebp-0x28]
  41505b:	xor    ecx,edi
  41505d:	lea    ecx,[ecx+edx*1+0x3272dd]
  415064:	cmp    eax,ecx
  415066:	jae    0x415418
  41506c:	mov    eax,DWORD PTR [ebp+0x8]
  41506f:	xor    eax,edi
  415071:	add    eax,ebx
  415073:	mov    DWORD PTR [ebp+0x18],eax
  415076:	mov    eax,DWORD PTR [ebp+0x1c]
  415079:	add    eax,DWORD PTR [ebp-0x1c]
  41507c:	mov    DWORD PTR [ebp-0x4],eax
  41507f:	push   DWORD PTR [ebp-0x4]
  415082:	mov    esi,DWORD PTR [ebp-0x1c]
  415085:	mov    ecx,DWORD PTR [ebp+0x10]
  415088:	call   0x41416e
  41508d:	mov    DWORD PTR [ebp+0xc],eax
  415090:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  415097:	mov    eax,DWORD PTR [ebp-0x18]
  41509a:	xor    eax,edi
  41509c:	add    eax,ebx
  41509e:	push   eax
  41509f:	lea    eax,[ebp-0x40]
  4150a2:	push   eax
  4150a3:	call   0x414779
  4150a8:	mov    eax,DWORD PTR [ebp+0xc]
  4150ab:	test   eax,eax
  4150ad:	je     0x4150fd
  4150af:	mov    eax,DWORD PTR [ebp-0x18]
  4150b2:	xor    eax,edi
  4150b4:	add    eax,ebx
  4150b6:	push   eax
  4150b7:	push   DWORD PTR [ebp+0xc]
  4150ba:	lea    eax,[ebp-0x40]
  4150bd:	push   eax
  4150be:	call   0x414620
  4150c3:	mov    eax,DWORD PTR [ebp-0x4]
  4150c6:	mov    DWORD PTR [ebp-0x18],eax
  4150c9:	mov    eax,DWORD PTR [ebp-0x18]
  4150cc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4150cf:	sub    eax,ecx
  4150d1:	mov    DWORD PTR [ebp-0x18],eax
  4150d4:	mov    eax,DWORD PTR [ebp+0xc]
  4150d7:	mov    ecx,DWORD PTR [ebp+0xc]
  4150da:	mov    eax,DWORD PTR [eax+0x10]
  4150dd:	add    eax,DWORD PTR [ecx+0xc]
  4150e0:	mov    ecx,DWORD PTR [ebp-0x18]
  4150e3:	cmp    ecx,eax
  4150e5:	jb     0x4150fd
  4150e7:	mov    eax,DWORD PTR [ebp+0xc]
  4150ea:	mov    eax,DWORD PTR [eax+0xc]
  4150ed:	mov    ecx,DWORD PTR [ebp+0xc]
  4150f0:	add    eax,DWORD PTR [ecx+0x8]
  4150f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4150f6:	sub    eax,ecx
  4150f8:	jmp    0x4153eb
  4150fd:	push   0xc
  4150ff:	push   DWORD PTR [ebp-0x4]
  415102:	lea    eax,[ebp-0x4c]
  415105:	push   eax
  415106:	call   0x414620
  41510b:	mov    eax,0xf89c85b5
  415110:	mov    DWORD PTR [ebp-0x2c],eax
  415113:	mov    DWORD PTR [ebp-0x30],0xf89c85b2
  41511a:	mov    DWORD PTR [ebp-0x34],0xf89c85b3
  415121:	mov    DWORD PTR [ebp-0x38],0xf89c85b0
  415128:	lea    ecx,[ebp-0x2c]
  41512b:	mov    DWORD PTR [ebp-0xc],ecx
  41512e:	lea    ecx,[ebp-0x30]
  415131:	mov    DWORD PTR [ebp-0x10],ecx
  415134:	lea    ecx,[ebp-0x34]
  415137:	mov    DWORD PTR [ebp+0xc],ecx
  41513a:	lea    ecx,[ebp-0x38]
  41513d:	mov    DWORD PTR [ebp-0x14],ecx
  415140:	mov    ecx,DWORD PTR [ebp+0x8]
  415143:	xor    ecx,edi
  415145:	add    ecx,ebx
  415147:	mov    DWORD PTR [ebp-0x18],ecx
  41514a:	jmp    0x415346
  41514f:	cmp    eax,0xf89c85b3
  415154:	je     0x415358
  41515a:	mov    ecx,DWORD PTR [ebp-0x8]
  41515d:	xor    ecx,edi
  41515f:	mov    esi,eax
  415161:	add    ecx,ebx
  415163:	mov    DWORD PTR [ebp+0x18],ecx
  415166:	mov    eax,DWORD PTR [ebp-0x18]
  415169:	xor    esi,edi
  41516b:	lea    eax,[eax+esi*1+0x3272dd]
  415172:	mov    DWORD PTR [ebp-0x18],eax
  415175:	mov    eax,DWORD PTR [ebp-0x8]
  415178:	mov    ecx,DWORD PTR [ebp-0x18]
  41517b:	xor    eax,edi
  41517d:	add    eax,ebx
  41517f:	cmp    ecx,eax
  415181:	jne    0x415196
  415183:	mov    eax,DWORD PTR [ebp+0x8]
  415186:	xor    eax,edi
  415188:	add    eax,ebx
  41518a:	push   eax
  41518b:	push   0xc
  41518d:	lea    eax,[ebp-0x4c]
  415190:	push   eax
  415191:	call   0x414b97
  415196:	mov    eax,DWORD PTR [ebp-0xc]
  415199:	mov    eax,DWORD PTR [eax]
  41519b:	xor    eax,edi
  41519d:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151a7:	xor    ecx,edi
  4151a9:	movzx  eax,al
  4151ac:	add    ecx,ebx
  4151ae:	cmp    eax,ecx
  4151b0:	je     0x41532e
  4151b6:	mov    eax,DWORD PTR [ebp-0x10]
  4151b9:	mov    eax,DWORD PTR [eax]
  4151bb:	xor    eax,edi
  4151bd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151c4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151c7:	xor    ecx,edi
  4151c9:	movzx  eax,al
  4151cc:	add    ecx,ebx
  4151ce:	cmp    eax,ecx
  4151d0:	je     0x41532e
  4151d6:	mov    eax,DWORD PTR [ebp+0xc]
  4151d9:	mov    eax,DWORD PTR [eax]
  4151db:	xor    eax,edi
  4151dd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151e7:	xor    ecx,edi
  4151e9:	movzx  eax,al
  4151ec:	add    ecx,ebx
  4151ee:	cmp    eax,ecx
  4151f0:	je     0x41532e
  4151f6:	mov    eax,DWORD PTR [ebp-0x14]
  4151f9:	mov    eax,DWORD PTR [eax]
  4151fb:	xor    eax,edi
  4151fd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415204:	mov    ecx,DWORD PTR [ebp+0x8]
  415207:	xor    ecx,edi
  415209:	movzx  eax,al
  41520c:	add    ecx,ebx
  41520e:	cmp    eax,ecx
  415210:	je     0x41532e
  415216:	mov    eax,DWORD PTR [ebp-0x10]
  415219:	mov    eax,DWORD PTR [eax]
  41521b:	xor    eax,edi
  41521d:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415224:	mov    ecx,DWORD PTR [ebp-0xc]
  415227:	mov    ecx,DWORD PTR [ecx]
  415229:	xor    ecx,edi
  41522b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415232:	xor    al,cl
  415234:	mov    ecx,DWORD PTR [ebp+0xc]
  415237:	mov    ecx,DWORD PTR [ecx]
  415239:	xor    ecx,edi
  41523b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415242:	or     al,cl
  415244:	mov    ecx,DWORD PTR [ebp-0xc]
  415247:	mov    ecx,DWORD PTR [ecx]
  415249:	xor    ecx,edi
  41524b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  415252:	cmp    cl,al
  415254:	jne    0x41532e
  41525a:	mov    eax,DWORD PTR [ebp+0xc]
  41525d:	mov    eax,DWORD PTR [eax]
  41525f:	xor    eax,edi
  415261:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415268:	mov    ecx,DWORD PTR [ebp-0x10]
  41526b:	mov    ecx,DWORD PTR [ecx]
  41526d:	xor    ecx,edi
  41526f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415276:	xor    al,cl
  415278:	mov    ecx,DWORD PTR [ebp-0x14]
  41527b:	mov    ecx,DWORD PTR [ecx]
  41527d:	xor    ecx,edi
  41527f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415286:	or     al,cl
  415288:	mov    ecx,DWORD PTR [ebp-0x10]
  41528b:	mov    ecx,DWORD PTR [ecx]
  41528d:	xor    ecx,edi
  41528f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  415296:	cmp    cl,al
  415298:	jne    0x41532e
  41529e:	mov    eax,DWORD PTR [ebp-0x14]
  4152a1:	mov    eax,DWORD PTR [eax]
  4152a3:	xor    eax,edi
  4152a5:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4152ac:	mov    ecx,DWORD PTR [ebp+0xc]
  4152af:	mov    ecx,DWORD PTR [ecx]
  4152b1:	xor    ecx,edi
  4152b3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152ba:	xor    al,cl
  4152bc:	mov    ecx,DWORD PTR [ebp-0xc]
  4152bf:	mov    ecx,DWORD PTR [ecx]
  4152c1:	xor    ecx,edi
  4152c3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152ca:	or     al,cl
  4152cc:	mov    ecx,DWORD PTR [ebp+0xc]
  4152cf:	mov    ecx,DWORD PTR [ecx]
  4152d1:	xor    ecx,edi
  4152d3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  4152da:	cmp    cl,al
  4152dc:	jne    0x41532e
  4152de:	mov    eax,DWORD PTR [ebp-0x14]
  4152e1:	mov    eax,DWORD PTR [eax]
  4152e3:	xor    eax,edi
  4152e5:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4152ec:	mov    ecx,DWORD PTR [ebp-0xc]
  4152ef:	mov    ecx,DWORD PTR [ecx]
  4152f1:	xor    ecx,edi
  4152f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152fa:	xor    al,cl
  4152fc:	mov    ecx,DWORD PTR [ebp-0x10]
  4152ff:	mov    ecx,DWORD PTR [ecx]
  415301:	xor    ecx,edi
  415303:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  41530a:	or     al,cl
  41530c:	mov    ecx,DWORD PTR [ebp-0x14]
  41530f:	mov    ecx,DWORD PTR [ecx]
  415311:	xor    ecx,edi
  415313:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  41531a:	cmp    cl,al
  41531c:	jne    0x41532e
  41531e:	lea    eax,[ebp-0x4c]
  415321:	push   eax
  415322:	call   0x414de8
  415327:	mov    ecx,DWORD PTR [ebp-0x44]
  41532a:	cmp    eax,ecx
  41532c:	je     0x415338
  41532e:	mov    eax,DWORD PTR [ebp+0x8]
  415331:	xor    eax,edi
  415333:	add    eax,ebx
  415335:	mov    DWORD PTR [ebp+0x18],eax
  415338:	mov    eax,DWORD PTR [ebp-0x8]
  41533b:	xor    eax,edi
  41533d:	lea    eax,[eax+esi*1+0x3272dd]
  415344:	xor    eax,edi
  415346:	mov    ecx,DWORD PTR [ebp+0x8]
  415349:	mov    edx,DWORD PTR [ebp+0x18]
  41534c:	xor    ecx,edi
  41534e:	add    ecx,ebx
  415350:	cmp    edx,ecx
  415352:	je     0x41514f
  415358:	mov    eax,DWORD PTR [ebp+0x8]
  41535b:	mov    ecx,DWORD PTR [ebp+0x18]
  41535e:	xor    eax,edi
  415360:	add    eax,ebx
  415362:	cmp    ecx,eax
  415364:	jne    0x415377
  415366:	mov    eax,DWORD PTR [ebp-0x8]
  415369:	mov    ecx,DWORD PTR [ebp+0x1c]
  41536c:	xor    eax,edi
  41536e:	lea    eax,[eax+ecx*1+0x3272dd]
  415375:	jmp    0x4153ee
  415377:	push   0x18
  415379:	push   DWORD PTR [ebp-0x4]
  41537c:	lea    eax,[ebp-0x64]
  41537f:	push   eax
  415380:	call   0x414620
  415385:	mov    eax,DWORD PTR [ebp+0x8]
  415388:	mov    ecx,DWORD PTR [ebp-0x18]
  41538b:	xor    eax,edi
  41538d:	add    eax,ebx
  41538f:	cmp    eax,ecx
  415391:	je     0x4153a6
  415393:	mov    eax,DWORD PTR [ebp+0x8]
  415396:	xor    eax,edi
  415398:	add    eax,ebx
  41539a:	push   eax
  41539b:	push   0x18
  41539d:	lea    eax,[ebp-0x64]
  4153a0:	push   eax
  4153a1:	call   0x414b97
  4153a6:	mov    eax,DWORD PTR [ebp-0x4]
  4153a9:	add    eax,0x18
  4153ac:	mov    DWORD PTR [ebp+0x18],eax
  4153af:	push   DWORD PTR [ebp-0x50]
  4153b2:	push   DWORD PTR [ebp+0x18]
  4153b5:	mov    eax,DWORD PTR [ebp-0x54]
  4153b8:	add    eax,DWORD PTR [ebp-0x20]
  4153bb:	push   eax
  4153bc:	call   0x414620
  4153c1:	mov    eax,DWORD PTR [ebp+0x8]
  4153c4:	mov    ecx,DWORD PTR [ebp-0x18]
  4153c7:	xor    eax,edi
  4153c9:	add    eax,ebx
  4153cb:	cmp    eax,ecx
  4153cd:	je     0x4153e0
  4153cf:	push   0x0
  4153d1:	push   DWORD PTR [ebp-0x50]
  4153d4:	mov    eax,DWORD PTR [ebp-0x54]
  4153d7:	add    eax,DWORD PTR [ebp-0x20]
  4153da:	push   eax
  4153db:	call   0x414b97
  4153e0:	mov    eax,DWORD PTR [ebp-0x24]
  4153e3:	mov    ecx,DWORD PTR [ebp-0x50]
  4153e6:	add    DWORD PTR [eax],ecx
  4153e8:	mov    eax,DWORD PTR [ebp-0x50]
  4153eb:	add    eax,DWORD PTR [ebp+0x1c]
  4153ee:	mov    DWORD PTR [ebp+0x1c],eax
  4153f1:	mov    eax,DWORD PTR [ebp-0x8]
  4153f4:	mov    ecx,DWORD PTR [ebp+0x1c]
  4153f7:	xor    eax,edi
  4153f9:	add    eax,ebx
  4153fb:	imul   eax,ecx
  4153fe:	mov    ecx,DWORD PTR [ebp+0x8]
  415401:	mov    edx,DWORD PTR [ebp-0x28]
  415404:	xor    ecx,edi
  415406:	lea    ecx,[ecx+edx*1+0x3272dd]
  41540d:	cmp    eax,ecx
  41540f:	jb     0x41506c
  415415:	mov    esi,DWORD PTR [ebp+0x14]
  415418:	mov    eax,DWORD PTR [ebp-0x20]
  41541b:	mov    DWORD PTR [esi],eax
  41541d:	jmp    0x415464
  41541f:	mov    ecx,DWORD PTR [ebp+0x8]
  415422:	mov    edx,DWORD PTR [ebp+0xc]
  415425:	xor    ecx,edi
  415427:	xor    edx,edi
  415429:	add    ecx,ebx
  41542b:	add    edx,ebx
  41542d:	cmp    ecx,edx
  41542f:	jne    0x415443
  415431:	mov    eax,ds:0x7f642d1c
  415436:	imul   eax,eax,0x9f15fcef
  41543c:	mov    ds:0x7f642d1c,eax
  415441:	jmp    0x415464
  415443:	mov    ecx,DWORD PTR [ebp+0x8]
  415446:	xor    ecx,edi
  415448:	add    ecx,ebx
  41544a:	cmp    eax,ecx
  41544c:	je     0x41545a
  41544e:	sub    DWORD PTR ds:0xf861e3c,0x709beac4
  415458:	jmp    0x415464
  41545a:	and    DWORD PTR ds:0x3343fa1c,0x5265ec3f
  415464:	pop    edi
  415465:	pop    esi
  415466:	pop    ebx
  415467:	leave  
  415468:	ret    0x18
  41546b:	push   ebp
  41546c:	mov    ebp,esp
  41546e:	and    esp,0xfffffff8
  415471:	mov    eax,DWORD PTR [ebp+0x20]
  415474:	sub    esp,0x14
  415477:	push   ebx
  415478:	mov    ebx,DWORD PTR [ebp+0x14]
  41547b:	push   esi
  41547c:	push   edi
  41547d:	cmp    eax,0xf89c85b5
  415482:	jne    0x41548e
  415484:	push   0xf89c85b2
  415489:	jmp    0x4155c0
  41548e:	mov    eax,DWORD PTR [ebp+0x20]
  415491:	cmp    eax,0xf89c85b2
  415496:	jne    0x4154a2
  415498:	push   0xf89c85b3
  41549d:	jmp    0x4155c0
  4154a2:	mov    eax,DWORD PTR [ebp+0x20]
  4154a5:	cmp    eax,0xf89c85b3
  4154aa:	jne    0x4154b6
  4154ac:	push   0xf89c85b0
  4154b1:	jmp    0x4155c0
  4154b6:	mov    eax,DWORD PTR [ebp+0x20]
  4154b9:	cmp    eax,0xf89c85b0
  4154be:	jne    0x4154ca
  4154c0:	push   0xf89c85b1
  4154c5:	jmp    0x4155c0
  4154ca:	mov    ecx,DWORD PTR [ebp+0x20]
  4154cd:	mov    eax,0xf89c85bc
  4154d2:	cmp    ecx,eax
  4154d4:	jne    0x415590
  4154da:	mov    eax,DWORD PTR [ebp+0x10]
  4154dd:	mov    DWORD PTR [esp+0xc],eax
  4154e1:	mov    eax,DWORD PTR [ebp+0x18]
  4154e4:	mov    DWORD PTR [esp+0x14],eax
  4154e8:	mov    eax,DWORD PTR [ebp+0xc]
  4154eb:	mov    DWORD PTR [esp+0x18],eax
  4154ef:	mov    eax,DWORD PTR [ebp+0x8]
  4154f2:	mov    DWORD PTR [esp+0x10],eax
  4154f6:	mov    eax,DWORD PTR [esp+0x10]
  4154fa:	mov    ecx,DWORD PTR [esp+0x14]
  4154fe:	mov    edi,0x7510896
  415503:	xor    eax,edi
  415505:	mov    esi,0x3272dd
  41550a:	add    eax,esi
  41550c:	mov    DWORD PTR [ecx],eax
  41550e:	mov    eax,DWORD PTR [esp+0xc]
  415512:	mov    eax,DWORD PTR [eax+0x194]
  415518:	mov    ecx,DWORD PTR [eax]
  41551a:	mov    eax,DWORD PTR [esp+0xc]
  41551e:	mov    eax,DWORD PTR [eax+0x194]
  415524:	mov    eax,DWORD PTR [eax]
  415526:	add    eax,DWORD PTR [ecx+0x3c]
  415529:	mov    ecx,DWORD PTR [esp+0xc]
  41552d:	mov    ecx,DWORD PTR [ecx+0x1d8]
  415533:	mov    ecx,DWORD PTR [ecx+0x14]
  415536:	push   0x4
  415538:	push   0x3000
  41553d:	push   DWORD PTR [eax+0x50]
  415540:	push   0x0
  415542:	call   ecx
  415544:	mov    DWORD PTR [ebx],eax
  415546:	mov    eax,DWORD PTR [esp+0x10]
  41554a:	push   DWORD PTR [esp+0xc]
  41554e:	xor    eax,edi
  415550:	add    eax,esi
  415552:	mov    DWORD PTR [esp+0x20],eax
  415556:	lea    eax,[esp+0x20]
  41555a:	push   eax
  41555b:	push   ebx
  41555c:	push   DWORD PTR [esp+0x20]
  415560:	push   DWORD PTR [esp+0x28]
  415564:	push   DWORD PTR [esp+0x24]
  415568:	call   0x414f2c
  41556d:	mov    eax,DWORD PTR [esp+0x10]
  415571:	mov    ecx,DWORD PTR [ebx]
  415573:	xor    eax,edi
  415575:	add    eax,esi
  415577:	cmp    ecx,eax
  415579:	je     0x4155d7
  41557b:	mov    eax,DWORD PTR [esp+0x18]
  41557f:	mov    ecx,DWORD PTR [esp+0x14]
  415583:	xor    eax,edi
  415585:	add    eax,esi
  415587:	imul   eax,DWORD PTR [esp+0x1c]
  41558c:	mov    DWORD PTR [ecx],eax
  41558e:	jmp    0x4155d7
  415590:	mov    ecx,DWORD PTR [ebp+0x20]
  415593:	cmp    ecx,0xf89c85b1
  415599:	jne    0x4155a2
  41559b:	push   0xf89c85be
  4155a0:	jmp    0x4155c0
  4155a2:	mov    ecx,DWORD PTR [ebp+0x20]
  4155a5:	cmp    ecx,0xf89c85be
  4155ab:	jne    0x4155b4
  4155ad:	push   0xf89c85bf
  4155b2:	jmp    0x4155c0
  4155b4:	mov    ecx,DWORD PTR [ebp+0x20]
  4155b7:	cmp    ecx,0xf89c85bf
  4155bd:	jne    0x4155d7
  4155bf:	push   eax
  4155c0:	push   DWORD PTR [ebp+0x1c]
  4155c3:	push   DWORD PTR [ebp+0x18]
  4155c6:	push   ebx
  4155c7:	push   DWORD PTR [ebp+0x10]
  4155ca:	push   DWORD PTR [ebp+0xc]
  4155cd:	push   DWORD PTR [ebp+0x8]
  4155d0:	call   0x41546b
  4155d5:	mov    DWORD PTR [ebx],eax
  4155d7:	mov    eax,DWORD PTR [ebx]
  4155d9:	pop    edi
  4155da:	pop    esi
  4155db:	pop    ebx
  4155dc:	mov    esp,ebp
  4155de:	pop    ebp
  4155df:	ret    0x1c
  4155e2:	push   ebp
  4155e3:	mov    ebp,esp
  4155e5:	sub    esp,0xc
  4155e8:	mov    eax,0xf89c85b5
  4155ed:	mov    DWORD PTR [ebp-0x8],eax
  4155f0:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  4155f7:	mov    ecx,DWORD PTR [ebp-0x8]
  4155fa:	xor    ecx,0x7510896
  415600:	add    ecx,0x3272dd
  415606:	mov    DWORD PTR [ebp-0x4],ecx
  415609:	mov    ecx,DWORD PTR [ebp+0xc]
  41560c:	push   eax
  41560d:	mov    DWORD PTR [ebp+0xc],ecx
  415610:	push   DWORD PTR [ebp+0xc]
  415613:	lea    eax,[ebp-0x4]
  415616:	push   DWORD PTR [ebp+0x8]
  415619:	push   eax
  41561a:	push   DWORD PTR [ebp+0xc]
  41561d:	push   DWORD PTR [ebp-0xc]
  415620:	push   DWORD PTR [ebp-0x8]
  415623:	call   0x41546b
  415628:	mov    DWORD PTR [ebp-0x4],eax
  41562b:	mov    eax,DWORD PTR [ebp-0x4]
  41562e:	leave  
  41562f:	ret    0x8
  415632:	mov    cl,0x27
  415634:	popa   
  415635:	test   bh,dh
  415637:	(bad)  
  415638:	cmc    
  415639:	aaa    
  41563a:	push   ss
  41563b:	shr    BYTE PTR [edi],0x1f
  41563e:	or     dl,BYTE PTR [esi-0x2b86aac9]
  415644:	add    BYTE PTR [eax],al
  415646:	hlt    
  415647:	add    al,0x0
  415649:	add    BYTE PTR [ebp+0x787d75df],dl
  41564f:	xchg   esi,eax
  415650:	mov    DWORD PTR [edx-0x5d],esi
  415653:	int3   
  415654:	xor    al,0xd7
  415656:	repz ja 0x41568a
  415659:	mov    eax,ds:0xfe455b53
  41565e:	test   eax,0xd3c2c675
  415663:	dec    ebx
  415664:	pop    ebx
  415665:	push   eax
  415666:	ds aas 
  415668:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415669:	cmp    bl,BYTE PTR [ecx-0xd]
  41566c:	imul   edx,ecx,0xf073eea9
  415672:	inc    eax
  415673:	ficom  WORD PTR [ebp-0x10]
  415676:	xchg   edx,eax
  415677:	enter  0x6995,0x2a
  41567b:	sbb    eax,esi
  41567d:	repnz adc ax,0x2bd0
  415682:	jbe    0x415629
  415684:	cmp    DWORD PTR [eax],ebx
  415686:	bound  ebx,QWORD PTR [esp]
  415689:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41568a:	loopne 0x415613
  41568c:	das    
  41568d:	push   0x502b5f37
  415692:	add    DWORD PTR [edx],edx
  415694:	xchg   ebp,eax
  415695:	repz push edi
  415697:	shl    dh,cl
  415699:	ins    BYTE PTR es:[edi],dx
  41569a:	sbb    DWORD PTR [esi],ebp
  41569c:	pextrw edi,mm4,0xc4
  4156a0:	mov    ebp,0x1b4f6510
  4156a5:	std    
  4156a6:	repz and eax,0xf6bfa12f
  4156ac:	adc    esp,DWORD PTR [ebp+0x6b]
  4156af:	sub    DWORD PTR [ecx],ecx
  4156b1:	jae    0x4156c1
  4156b3:	dec    edx
  4156b4:	mov    al,ds:0xdde75dfa
  4156b9:	mov    esp,0x3db8216e
  4156be:	mov    ah,0x37
  4156c0:	sbb    cl,cl
  4156c2:	push   ebx
  4156c3:	fldcw  WORD PTR ds:0x5f7e9759
  4156c9:	mov    ch,0x6f
  4156cb:	(bad)  
  4156cc:	add    edi,DWORD PTR [ebx+0x6d1707fd]
  4156d2:	scas   al,BYTE PTR es:[edi]
  4156d3:	int3   
  4156d4:	rcl    BYTE PTR [esi+0x3ff697c0],1
  4156da:	fnstcw WORD PTR [ebx-0xa0b048a]
  4156e0:	cdq    
  4156e1:	jmp    0x33b79d93
  4156e6:	mov    ch,BYTE PTR [ebx+0x115a13c]
  4156ec:	lock in eax,dx
  4156ee:	jne    0x415746
  4156f0:	xor    esi,DWORD PTR [esi]
  4156f2:	fild   DWORD PTR [ecx-0x803d796]
  4156f8:	iret   
  4156f9:	push   cs
  4156fa:	std    
  4156fb:	fcomp  QWORD PTR [eax+ebx*1-0x5c]
  4156ff:	push   es
  415700:	cmp    ebx,DWORD PTR [ebp-0x15edcda2]
  415706:	fidiv  WORD PTR [esp+ecx*8]
  415709:	mov    ebx,DWORD PTR [eax+ebx*4-0x1ccb19ae]
  415710:	jnp    0x4156e8
  415712:	and    eax,0x2aed3e5d
  415717:	div    BYTE PTR [ebx+0x52]
  41571a:	mov    dh,0x7d
  41571c:	stos   DWORD PTR es:[edi],eax
  41571d:	std    
  41571e:	inc    ebx
  41571f:	iret   
  415720:	shl    esi,0xc6
  415723:	mov    BYTE PTR [eax+esi*1+0x4402814e],ch
  41572a:	sbb    DWORD PTR [ecx],esi
  41572c:	inc    esi
  41572d:	daa    
  41572e:	or     eax,0xfa288797
  415733:	xchg   DWORD PTR [edi+0x54],ecx
  415736:	dec    eax
  415737:	cmp    ch,al
  415739:	mov    edi,0x834575b3
  41573e:	and    bh,al
  415740:	sub    ebx,edi
  415742:	ret    
  415743:	push   ss
  415744:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415745:	in     al,0xd5
  415747:	xchg   ebp,eax
  415748:	fsub   DWORD PTR [edi-0x423766ec]
  41574e:	fcmovu st,st(2)
  415750:	add    bl,BYTE PTR [ebx+0x7f]
  415753:	xchg   esp,eax
  415754:	xchg   ebx,eax
  415755:	mov    cs,edx
  415757:	in     eax,0x90
  415759:	arpl   WORD PTR [edi],si
  41575b:	pop    esp
  41575c:	pop    ebx
  41575d:	aad    0x2e
  41575f:	push   edx
  415760:	int    0x2e
  415762:	dec    DWORD PTR [ecx-0x26]
  415765:	jno    0x415792
  415767:	sbb    DWORD PTR [ebx],0xd6784190
  41576d:	shr    bl,1
  41576f:	scas   al,BYTE PTR es:[edi]
  415770:	test   al,0xc6
  415772:	ja     0x4157a8
  415774:	mov    ss,WORD PTR [ebp+0x21]
  415777:	dec    esp
  415778:	mov    bh,bh
  41577a:	arpl   WORD PTR [edi+ebp*1+0x12],dx
  41577e:	jle    0x4157a9
  415780:	adc    ecx,DWORD PTR [eax]
  415782:	sub    dh,0x3c
  415785:	in     eax,0x2b
  415787:	test   bh,ah
  415789:	push   esi
  41578a:	sti    
  41578b:	sbb    eax,0xccc0923b
  415790:	(bad)  
  415791:	ror    BYTE PTR [ebp+0x66],cl
  415794:	jno    0x41579c
  415796:	iret   
  415797:	outs   dx,DWORD PTR ds:[esi]
  415798:	scas   al,BYTE PTR es:[edi]
  415799:	mov    cl,0xb8
  41579b:	popf   
  41579c:	enter  0x7544,0x25
  4157a0:	fcomp  QWORD PTR [edx]
  4157a2:	or     BYTE PTR [edi-0x5d],bh
  4157a5:	pop    edx
  4157a6:	pop    ebp
  4157a7:	sbb    al,BYTE PTR [ecx-0x69e0f952]
  4157ad:	outs   dx,BYTE PTR ds:[esi]
  4157ae:	(bad)  
  4157af:	mov    cl,0xb8
  4157b1:	push   esi
  4157b2:	repz jb 0x415762
  4157b5:	dec    edi
  4157b6:	jl     0x4157af
  4157b8:	cmc    
  4157b9:	cmc    
  4157ba:	hlt    
  4157bb:	sbb    edi,ebx
  4157bd:	mov    ecx,0x522574b0
  4157c2:	sub    esp,esi
  4157c4:	leave  
  4157c5:	sub    BYTE PTR [ecx-0x7c9cea48],bl
  4157cb:	cdq    
  4157cc:	ficomp DWORD PTR [esi-0x58a118eb]
  4157d2:	xor    ah,BYTE PTR [ebp+0x75]
  4157d5:	xor    BYTE PTR [eax+0x367a4ddd],bl
  4157db:	fidiv  WORD PTR [eax+0x45]
  4157de:	repnz fcmove st,st(6)
  4157e1:	jne    0x415796
  4157e3:	js     0x415834
  4157e5:	rcr    DWORD PTR [ebx],0x4b
  4157e8:	fs jnp 0x41578c
  4157eb:	repnz adc al,BYTE PTR [ebp-0x111a2c7c]
  4157f2:	ret    
  4157f3:	add    DWORD PTR [eax],ebx
  4157f5:	leave  
  4157f6:	or     bh,0x1f
  4157f9:	test   al,0x53
  4157fb:	fs in  al,dx
  4157fd:	dec    ebp
  4157fe:	dec    esp
  4157ff:	xor    esp,esi
  415801:	sub    DWORD PTR [eax],eax
  415803:	xor    al,0x6e
  415805:	push   ss
  415806:	sti    
  415807:	call   0x563a:0x2662b853
  41580e:	mov    esi,0x2e4b5997
  415813:	cdq    
  415814:	xor    edx,esp
  415816:	xlat   BYTE PTR ds:[ebx]
  415817:	(bad)  
  415818:	mov    edx,0x9b1fc848
  41581d:	mov    edi,0x5aa75465
  415822:	(bad)  
  415823:	popa   
  415824:	pop    edi
  415825:	loop   0x4157d1
  415827:	push   esi
  415828:	test   DWORD PTR [ebx],ecx
  41582a:	jbe    0x415882
  41582c:	jl     0x415842
  41582e:	dec    edi
  41582f:	adc    cl,BYTE PTR [ecx-0x1ee22185]
  415835:	mov    BYTE PTR [ebx],ah
  415837:	pop    esi
  415838:	jo     0x415884
  41583a:	xchg   edx,eax
  41583b:	pop    ebx
  41583c:	and    al,0xc8
  41583e:	stc    
  41583f:	and    eax,0x14597abd
  415844:	xor    DWORD PTR [esi+edx*8+0x4a],0xffffffed
  415849:	mov    ebx,0x3c385ad0
  41584e:	fs lock test eax,0xa531007c
  415855:	shl    BYTE PTR ds:0x81c98e5a,1
  41585b:	call   0x4d59d4b9
  415860:	pushw  ss
  415862:	mov    WORD PTR [esi],ss
  415864:	dec    ebx
  415865:	jecxz  0x4158c4
  415867:	fwait
  415868:	iret   
  415869:	push   0xf70f0a8d
  41586e:	pushf  
  41586f:	add    al,0xaa
  415871:	shl    BYTE PTR [eax+0x1b376a58],cl
  415877:	xchg   ebp,eax
  415878:	and    BYTE PTR [ecx],bl
  41587a:	push   0x41
  41587c:	sub    al,0xc9
  41587e:	pop    ss
  41587f:	xor    BYTE PTR [esp+edi*4],cl
  415882:	xchg   ebx,eax
  415883:	aad    0xf1
  415885:	lods   al,BYTE PTR ds:[esi]
  415886:	outs   dx,BYTE PTR ds:[esi]
  415887:	adc    bl,BYTE PTR [esi+0x3de0073f]
  41588d:	dec    esi
  41588e:	call   FWORD PTR [ecx-0x6d]
  415891:	add    eax,0x3653d839
  415896:	mov    bh,0xb3
  415898:	or     edi,esi
  41589a:	pop    ss
  41589b:	lods   eax,DWORD PTR ds:[esi]
  41589c:	add    ecx,DWORD PTR [ecx-0x6a18739d]
  4158a2:	std    
  4158a3:	mov    esp,edx
  4158a5:	out    dx,al
  4158a6:	push   ebp
  4158a7:	popa   
  4158a8:	cmp    eax,0xded49063
  4158ad:	mov    dl,0xe2
  4158af:	jno    0x415842
  4158b1:	inc    edi
  4158b2:	push   0x3ba32420
  4158b7:	xor    eax,DWORD PTR [edx-0x2a4dc113]
  4158bd:	lahf   
  4158be:	xchg   esp,eax
  4158bf:	fisttp QWORD PTR [edx-0x30f83819]
  4158c5:	jp     0x4158f3
  4158c7:	test   al,0x82
  4158c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158ca:	sub    BYTE PTR [ebp-0x4f],dh
  4158cd:	sub    ebp,eax
  4158cf:	pop    ebp
  4158d0:	test   BYTE PTR [ebp+0x54605cb1],ch
  4158d6:	push   ebp
  4158d7:	push   eax
  4158d8:	sbb    eax,DWORD PTR [ebp-0x2]
  4158db:	xchg   DWORD PTR [edi],ebx
  4158dd:	sbb    edi,edi
  4158df:	dec    ebx
  4158e0:	pusha  
  4158e1:	cmp    eax,0x148517a
  4158e6:	hlt    
  4158e7:	ss dec edi
  4158e9:	mov    edx,0x8958829c
  4158ee:	int3   
  4158ef:	and    ebx,DWORD PTR [esi-0x601a05c3]
  4158f5:	mov    eax,ds:0xfa71f7f2
  4158fa:	push   edx
  4158fb:	inc    eax
  4158fc:	xchg   ebx,eax
  4158fd:	sub    BYTE PTR [ebx],dl
  4158ff:	push   0xbc5126c0
  415904:	cmp    DWORD PTR [edi],esi
  415906:	ret    0xfa15
  415909:	jae    0x4158a5
  41590b:	in     al,0x4e
  41590d:	shl    BYTE PTR [edx-0x15],1
  415910:	mov    esi,0xf5d2caa6
  415915:	xor    DWORD PTR [esi-0x7e],esp
  415918:	mov    dl,0x93
  41591a:	or     bl,BYTE PTR [esi]
  41591c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41591d:	push   esp
  41591e:	bound  eax,QWORD PTR [eax]
  415920:	mov    ebp,0x237371f7
  415925:	std    
  415926:	ret    
  415927:	test   eax,0xed9af960
  41592c:	inc    ecx
  41592d:	inc    ebp
  41592e:	xchg   edx,eax
  41592f:	add    bl,0x86
  415932:	dec    ebp
  415933:	out    dx,eax
  415934:	xor    DWORD PTR [ecx],eax
  415936:	push   edx
  415937:	hlt    
  415938:	les    edx,FWORD PTR [eax]
  41593a:	inc    esp
  41593b:	imul   eax,edi,0x8
  41593e:	dec    ebx
  41593f:	(bad)  
  415940:	(bad)  
  415941:	xor    BYTE PTR [ecx],al
  415943:	les    edi,FWORD PTR ds:0x9fd1dcd8
  415949:	call   0xd7340b04
  41594e:	in     al,dx
  41594f:	fild   QWORD PTR [edx+0x4d7cbae5]
  415955:	aam    0x1b
  415957:	fldcw  WORD PTR [ebx+ecx*1]
  41595a:	fisttp WORD PTR [esp+eiz*2-0x3176e268]
  415961:	cmp    ah,0x28
  415964:	in     al,0x64
  415966:	cld    
  415967:	lds    edi,FWORD PTR [esi+0x2287cafa]
  41596d:	pop    es
  41596e:	ret    
  41596f:	mov    ds:0x8c92d679,eax
  415974:	pop    es
  415975:	or     ch,BYTE PTR [ebx]
  415977:	xchg   edx,eax
  415978:	sub    BYTE PTR [edi],bh
  41597a:	mov    ebx,0xca411972
  41597f:	adc    eax,0xe3549787
  415984:	sbb    DWORD PTR [ecx-0x5c],esi
  415987:	jne    0x415912
  415989:	shl    BYTE PTR [esi-0x1ac328c8],cl
  41598f:	xor    al,0x18
  415991:	push   eax
  415992:	ins    BYTE PTR es:[edi],dx
  415993:	adc    al,0xc4
  415995:	or     DWORD PTR [ecx-0x10bfcb5d],ebp
  41599b:	push   edx
  41599c:	aam    0xac
  41599e:	dec    esi
  41599f:	repz jge 0x41598a
  4159a2:	int3   
  4159a3:	imul   eax,DWORD PTR [eax-0x67],0xf3b5f6a2
  4159aa:	dec    ebx
  4159ab:	inc    ebx
  4159ac:	stos   BYTE PTR es:[edi],al
  4159ad:	xor    ah,ah
  4159af:	aas    
  4159b0:	fwait
  4159b1:	sbb    eax,0x885e0f07
  4159b6:	imul   ecx,eax,0x97a0b865
  4159bc:	lea    ecx,[ecx-0x32699493]
  4159c2:	loop   0x41594b
  4159c4:	or     eax,0xcca79ee0
  4159c9:	sbb    DWORD PTR [edx+0x10],esp
  4159cc:	call   0x2e7b:0x4ecea1cb
  4159d3:	push   edx
  4159d4:	pop    esp
  4159d5:	inc    edx
  4159d6:	icebp  
  4159d7:	lea    ecx,[edi+eiz*4+0x4e]
  4159db:	mov    ch,0xb7
  4159dd:	fs add al,0xa
  4159e0:	mov    WORD PTR [esi-0x7c],gs
  4159e3:	add    BYTE PTR [edi+0x9a93069],ch
  4159e9:	and    DWORD PTR [esi],ecx
  4159eb:	mov    WORD PTR [esi+0x1c],?
  4159ee:	aad    0xac
  4159f0:	and    BYTE PTR [edi+0x41203569],cl
  4159f6:	push   0x2e
  4159f8:	xchg   ebp,eax
  4159f9:	daa    
  4159fa:	sub    eax,0x5883acf6
  4159ff:	pop    es
  415a00:	pop    es
  415a01:	xchg   esi,eax
  415a02:	fwait
  415a03:	pop    edi
  415a04:	aam    0x1c
  415a06:	retf   0x67bc
  415a09:	or     dh,BYTE PTR [eax]
  415a0b:	leave  
  415a0c:	xor    cl,BYTE PTR [edi-0x2a]
  415a0f:	cs dec esp
  415a11:	retf   0xd6c5
  415a14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a15:	inc    ecx
  415a16:	mov    esi,0x50f2e183
  415a1b:	mov    DWORD PTR [edi-0x51],esi
  415a1e:	mov    bh,0x98
  415a20:	cmp    BYTE PTR ds:0x306b338c,0x64
  415a27:	pop    esp
  415a28:	loop   0x415a89
  415a2a:	jo     0x415a2b
  415a2c:	xchg   esp,eax
  415a2d:	in     al,dx
  415a2e:	and    al,0x39
  415a30:	call   0x3c431662
  415a35:	fwait
  415a36:	lds    edx,FWORD PTR [ebx]
  415a38:	(bad)  
  415a39:	push   0xf822d34e
  415a3e:	call   0xc2ad:0xa6e4b63f
  415a45:	mov    eax,0xa031d2dd
  415a4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a4b:	or     bl,ah
  415a4d:	sbb    ch,BYTE PTR es:0xde63a6e1
  415a54:	fild   DWORD PTR [eax]
  415a56:	pop    ss
  415a57:	pop    ebp
  415a58:	mov    ebp,0x6c8385e3
  415a5d:	adc    BYTE PTR [ebp-0x2a6162de],cl
  415a63:	dec    eax
  415a64:	xchg   edi,eax
  415a65:	out    0x83,eax
  415a67:	xchg   ecx,esi
  415a69:	dec    DWORD PTR [edx]
  415a6b:	shr    dh,1
  415a6d:	mov    ah,al
  415a6f:	fnstenv [ebp+0x70]
  415a72:	inc    eax
  415a73:	sub    ebp,DWORD PTR [ecx+0x13]
  415a76:	pop    ss
  415a77:	(bad)  
  415a78:	mov    esi,0x6507d9d8
  415a7d:	std    
  415a7e:	inc    esi
  415a7f:	test   al,0x79
  415a81:	ror    BYTE PTR [edi],1
  415a83:	mov    ds:0x9df23000,al
  415a88:	ss or  cl,0x72
  415a8c:	jg     0x415b00
  415a8e:	push   eax
  415a8f:	mov    esp,0xbdffe24a
  415a94:	inc    esp
  415a95:	test   BYTE PTR [ebp+ebp*2-0x66],dh
  415a99:	pop    esi
  415a9a:	das    
  415a9b:	jp     0x415a34
  415a9d:	fadd   DWORD PTR [eax-0x3]
  415aa0:	sub    edi,DWORD PTR [edx+0x2b]
  415aa3:	or     eax,0x139a6f96
  415aa8:	mov    edi,0x977b09e3
  415aad:	xchg   ebx,eax
  415aae:	popa   
  415aaf:	mov    esp,0xcf20ae76
  415ab4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ab5:	xchg   edi,eax
  415ab6:	fimul  DWORD PTR [edi]
  415ab8:	adc    BYTE PTR [eax+0x25],0x6d
  415abc:	adc    ch,ah
  415abe:	ins    DWORD PTR es:[edi],dx
  415abf:	inc    ecx
  415ac0:	xor    BYTE PTR [esi+0x41086fe5],0x7d
  415ac7:	pop    ebx
  415ac8:	loop   0x415a4b
  415aca:	das    
  415acb:	mov    ds:0xa70fd045,al
  415ad0:	sbb    edx,DWORD PTR [edi]
  415ad2:	sub    al,ah
  415ad4:	iret   
  415ad5:	sub    DWORD PTR [ecx-0x7bdc7ee0],eax
  415adb:	and    al,BYTE PTR [edi]
  415add:	call   0xe8f8:0xff48a96e
  415ae4:	pop    ds
  415ae5:	adc    ecx,ecx
  415ae7:	and    DWORD PTR [ebp-0x2c],eax
  415aea:	daa    
  415aeb:	aam    0x5b
  415aed:	add    eax,0x6548175b
  415af2:	push   edi
  415af3:	xor    BYTE PTR [edx+ebx*8-0x776e8a5b],cl
  415afa:	jle    0x415a91
  415afc:	cmp    DWORD PTR [esi-0x3d803cb2],ebx
  415b02:	fcomp  DWORD PTR [esi-0x7adb3e13]
  415b08:	mov    eax,ds:0x20d99f65
  415b0d:	not    DWORD PTR [edi-0x63]
  415b10:	dec    BYTE PTR [esi-0x2e0a72bf]
  415b16:	shr    BYTE PTR ds:0x60616489,cl
  415b1c:	out    0x1b,al
  415b1e:	test   BYTE PTR [edx],dh
  415b20:	jnp    0x415b72
  415b22:	data16 fwait
  415b24:	cmp    eax,DWORD PTR [esi]
  415b26:	into   
  415b27:	int3   
  415b28:	jl     0x415b78
  415b2a:	outs   dx,BYTE PTR ds:[esi]
  415b2b:	adc    al,0x7b
  415b2d:	daa    
  415b2e:	push   es
  415b2f:	neg    BYTE PTR [esi+0x8]
  415b32:	hlt    
  415b33:	imul   eax,DWORD PTR [esi-0x6a],0xa439eb55
  415b3a:	mov    eax,ds:0x357177
  415b3f:	add    BYTE PTR [eax],al
  415b41:	add    al,al
  415b43:	push   ss
  415b44:	sbb    BYTE PTR [ebx-0x2a],0xdf
  415b48:	fistp  DWORD PTR [edi-0x239a6a81]
  415b4e:	stos   BYTE PTR es:[edi],al
  415b4f:	icebp  
  415b50:	retf   0x6d20
  415b53:	fld    DWORD PTR [eax]
  415b55:	add    ah,dh
  415b57:	add    al,0x0
  415b59:	add    BYTE PTR [ebp-0x2826bb72],dl
  415b5f:	sbb    BYTE PTR [esp+esi*2],0xae
  415b63:	test   al,0x9d
  415b65:	out    dx,al
  415b66:	or     al,0xcc
  415b68:	hlt    
  415b69:	and    ch,BYTE PTR [ebx+ebx*8+0x31d2dc29]
  415b70:	data16 or dl,bl
  415b73:	inc    esp
  415b74:	nop
  415b75:	mov    es,WORD PTR [ebx+0x9]
  415b78:	aam    0xda
  415b7a:	xlat   BYTE PTR ds:[ebx]
  415b7b:	aad    0x4e
  415b7d:	mov    ?,WORD PTR [ebx+0x8103b2d]
  415b83:	cmc    
  415b84:	cmp    ecx,DWORD PTR ds:0x7d900832
  415b8a:	out    0xe3,al
  415b8c:	mov    ecx,DWORD PTR [edx+0x36]
  415b8f:	jns    0x415bfb
  415b91:	je     0x415bb4
  415b93:	or     al,0x96
  415b95:	iret   
  415b96:	pop    edi
  415b97:	out    dx,al
  415b98:	sub    al,0x80
  415b9a:	pop    es
  415b9b:	sbb    esp,DWORD PTR [edi]
  415b9d:	(bad)
  415ba0:	inc    edi
  415ba1:	or     dh,BYTE PTR [edi-0x72]
  415ba4:	ror    BYTE PTR ds:0xa1b95c2,0xdb
  415bab:	jge    0x415b63
  415bad:	jmp    0x415be5
  415baf:	inc    ebx
  415bb0:	pop    ss
  415bb1:	pop    DWORD PTR [ebp-0x22]
  415bb4:	je     0x415bcd
  415bb6:	mov    DWORD PTR [edi+eax*4-0x6517f219],edx
  415bbd:	sar    DWORD PTR [ebx+ebp*4],0xdd
  415bc1:	std    
  415bc2:	in     al,0xae
  415bc4:	push   eax
  415bc5:	adc    al,0x52
  415bc7:	mov    eax,0xc273bad2
  415bcc:	or     al,0xa2
  415bce:	stos   BYTE PTR es:[edi],al
  415bcf:	jmp    0xbafd:0x223a9060
  415bd6:	push   ax
  415bd8:	push   es
  415bd9:	sbb    BYTE PTR [edi+0x2a],0xe6
  415bdd:	jo     0x415bc4
  415bdf:	cwde   
  415be0:	push   ecx
  415be1:	mov    DWORD PTR [eax-0x6],esp
  415be4:	dec    ecx
  415be5:	fldcw  WORD PTR [eax]
  415be7:	ins    BYTE PTR es:[edi],dx
  415be8:	mov    dh,0xd9
  415bea:	outs   dx,BYTE PTR ds:[esi]
  415beb:	push   0x2c0cac34
  415bf0:	xor    bl,BYTE PTR [edi+ecx*1]
  415bf3:	adc    esi,DWORD PTR [eax+0x7a]
  415bf6:	les    edi,FWORD PTR [eax+0xcb9c1d7]
  415bfc:	lds    ebx,FWORD PTR [ebx-0x64]
  415bff:	dec    esi
  415c00:	arpl   WORD PTR [ebp+ebp*1+0x2f],dx
  415c04:	adc    al,0x6b
  415c06:	not    BYTE PTR [edx-0x50f8cf09]
  415c0c:	inc    esp
  415c0d:	sub    ecx,DWORD PTR [ecx-0x50]
  415c10:	(bad)  
  415c11:	xchg   ecx,eax
  415c12:	outs   dx,BYTE PTR ds:[esi]
  415c13:	retf   0xf5b7
  415c16:	test   DWORD PTR [esp-0x79],edi
  415c1a:	iret   
  415c1b:	add    edx,ebx
  415c1d:	adc    eax,0x2f737b33
  415c22:	shl    BYTE PTR [ebp+0x40],cl
  415c25:	mov    al,0xbe
  415c27:	xchg   edx,eax
  415c28:	mov    ecx,0x8a182e45
  415c2d:	push   ss
  415c2e:	nop
  415c2f:	(bad)  
  415c30:	adc    al,BYTE PTR [eax+0x47]
  415c33:	sbb    ecx,DWORD PTR [ebx-0x7b]
  415c36:	cmp    bl,BYTE PTR [esi]
  415c38:	push   0x1b9587bd
  415c3d:	scas   al,BYTE PTR es:[edi]
  415c3e:	xchg   ecx,eax
  415c3f:	cs hlt 
  415c41:	je     0x415c68
  415c43:	dec    ebp
  415c44:	or     ah,bh
  415c46:	xor    edi,esp
  415c48:	popf   
  415c49:	inc    ebx
  415c4a:	iret   
  415c4b:	cmp    edi,DWORD PTR [ebp+ebp*1-0x9]
  415c4f:	repnz adc esp,edx
  415c52:	mov    bl,0xfc
  415c54:	xchg   ch,bh
  415c56:	mov    ds:0xde06a01b,eax
  415c5b:	add    eax,0x47d8a7f1
  415c60:	cwde   
  415c61:	mov    eax,ds:0xd72074e5
  415c66:	sahf   
  415c67:	jns    0x415c1a
  415c69:	jle    0x415ccf
  415c6b:	xchg   BYTE PTR [edx+0x3cfba69b],ch
  415c71:	jmp    0xd58f160
  415c76:	inc    eax
  415c77:	(bad)  
  415c78:	and    eax,0x77f39c2f
  415c7d:	in     eax,dx
  415c7e:	in     al,dx
  415c7f:	jo     0x415cea
  415c81:	neg    DWORD PTR [eax]
  415c83:	or     edi,DWORD PTR [edx+0x90f1f9e]
  415c89:	cmp    dl,BYTE PTR [ecx+0x24791778]
  415c8f:	pop    ebx
  415c90:	in     al,0x1d
  415c92:	jl     0x415ce8
  415c94:	push   ecx
  415c95:	xchg   edx,eax
  415c96:	int3   
  415c97:	mov    ebx,0xf41c52df
  415c9c:	and    BYTE PTR [edi+0x731b0c3b],ch
  415ca2:	aam    0x61
  415ca4:	mov    edi,0x9c64dce9
  415ca9:	les    edx,FWORD PTR [edi+ebp*1]
  415cac:	lock ja 0x415cde
  415caf:	mov    BYTE PTR [ebp-0x49f7b08c],dl
  415cb5:	cli    
  415cb6:	mov    ah,0xba
  415cb8:	in     eax,dx
  415cb9:	fs dec esp
  415cbb:	int3   
  415cbc:	mov    al,ds:0x30b784d9
  415cc1:	fstp   DWORD PTR [ebx+edi*4+0x51b8f6c3]
  415cc8:	outs   dx,BYTE PTR ds:[esi]
  415cc9:	or     eax,0x6d8db95f
  415cce:	push   ds
  415ccf:	je     0x415d43
  415cd1:	(bad)  
  415cd2:	ja     0x415d0e
  415cd4:	lods   al,BYTE PTR ds:[esi]
  415cd5:	(bad)  [ebx-0x69]
  415cd8:	pop    ds
  415cd9:	repz pop edx
  415cdb:	xchg   edi,eax
  415cdc:	push   cs
  415cdd:	in     al,dx
  415cde:	pop    esi
  415cdf:	rol    DWORD PTR cs:[edx],1
  415ce2:	push   esi
  415ce3:	jge    0x415cae
  415ce5:	lea    edx,[edi]
  415ce7:	shl    BYTE PTR [esi+0x61bd9e55],1
  415ced:	test   al,0xf9
  415cef:	imul   eax,DWORD PTR [ebx-0x3641d90f],0xbf5ae2a9
  415cf9:	xor    BYTE PTR [ebp-0x3ac4e164],dl
  415cff:	jle    0x415d4b
  415d01:	add    BYTE PTR [ebx],bh
  415d03:	or     ah,BYTE PTR [edx-0x38]
  415d06:	in     al,dx
  415d07:	nop
  415d08:	test   BYTE PTR ds:0x65c1324d,cl
  415d0e:	out    dx,al
  415d0f:	(bad)  
  415d10:	sbb    al,0x44
  415d12:	jp     0x415cdc
  415d14:	inc    edx
  415d15:	pop    edi
  415d16:	mov    ebx,0xa718c29a
  415d1b:	(bad)  
  415d1c:	aaa    
  415d1d:	fbstp  TBYTE PTR [eax]
  415d1f:	popf   
  415d20:	cmp    ch,bh
  415d22:	push   esi
  415d23:	jmp    0x77aed1fa
  415d28:	loope  0x415cdd
  415d2a:	xchg   DWORD PTR [ebx+esi*2-0xd],eax
  415d2e:	aam    0x89
  415d30:	mov    bl,0xb1
  415d32:	ja     0x415cc5
  415d34:	and    al,0x31
  415d36:	dec    ebp
  415d37:	push   es
  415d38:	xchg   esi,eax
  415d39:	popf   
  415d3a:	cmc    
  415d3b:	outs   dx,BYTE PTR ds:[esi]
  415d3c:	call   0x3c26:0x8afde2b6
  415d43:	mov    ecx,0x4dadf199
  415d48:	data16 mov al,0x3d
  415d4b:	pusha  
  415d4c:	fsub   st,st(2)
  415d4e:	add    BYTE PTR [ecx-0x1b],dh
  415d51:	sub    BYTE PTR [edi+0x3],0x24
  415d55:	jmp    0xc89:0xad9ae379
  415d5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d5d:	call   0x280a:0xb81f3b1
  415d64:	mov    bl,0x31
  415d66:	stos   DWORD PTR es:[edi],eax
  415d67:	jmp    0x25c1:0x45ba252c
  415d6e:	mov    esp,0xfaf634c0
  415d73:	scas   al,BYTE PTR es:[edi]
  415d74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d75:	xchg   edi,eax
  415d76:	pop    ss
  415d77:	adc    dl,dh
  415d79:	ins    BYTE PTR es:[edi],dx
  415d7a:	lahf   
  415d7b:	inc    eax
  415d7c:	adc    BYTE PTR [eax+0x5c],al
  415d7f:	mov    dh,0xe5
  415d81:	stos   BYTE PTR es:[edi],al
  415d82:	cmp    al,ah
  415d84:	inc    eax
  415d85:	loope  0x415d8d
  415d87:	jbe    0x415d16
  415d89:	mov    ebx,0xbc77e1df
  415d8e:	enter  0xbcf7,0x3a
  415d92:	pop    ecx
  415d93:	pop    ebx
  415d94:	iret   
  415d95:	mov    edx,0x8493d6e7
  415d9a:	jecxz  0x415d74
  415d9c:	pop    ss
  415d9d:	mov    ebp,0xfad3b989
  415da2:	popa   
  415da3:	mov    WORD PTR [edi+0x1a],ds
  415da6:	sar    al,cl
  415da8:	or     al,0xdf
  415daa:	and    DWORD PTR [esi+0x3c2e88c8],ebx
  415db0:	and    ch,BYTE PTR [ebx]
  415db2:	add    BYTE PTR [ebx-0x5e1f0445],cl
  415db8:	or     al,0xda
  415dba:	into   
  415dbb:	scas   al,BYTE PTR es:[edi]
  415dbc:	retf   0x8e33
  415dbf:	not    DWORD PTR [esi]
  415dc1:	hlt    
  415dc2:	in     eax,0x60
  415dc4:	jo     0x415dc6
  415dc6:	inc    edx
  415dc7:	into   
  415dc8:	adc    al,0x2d
  415dca:	add    DWORD PTR [edx+0x4daf5fe6],edi
  415dd0:	sbb    BYTE PTR [eax+0x6150eb66],ch
  415dd6:	pop    ss
  415dd7:	call   0x41556ff1
  415ddc:	mov    ebp,ecx
  415dde:	and    ah,dl
  415de0:	or     edi,DWORD PTR [edi]
  415de2:	xor    dh,al
  415de4:	repz mov edx,0xa1494fae
  415dea:	jp     0x415e3a
  415dec:	into   
  415ded:	(bad)  
  415dee:	fwait
  415def:	cmc    
  415df0:	mov    bh,0x21
  415df2:	adc    eax,0xb5b30b15
  415df7:	sbb    ecx,DWORD PTR [esi+0x43adae9f]
  415dfd:	mov    edx,0xe580202c
  415e02:	outs   dx,DWORD PTR ds:[esi]
  415e03:	xchg   esi,ebx
  415e05:	loop   0x415dc7
  415e07:	(bad)  
  415e09:	fdiv   QWORD PTR [ecx+eiz*1]
  415e0c:	add    DWORD PTR [ebx-0x16a5ae3],edi
  415e12:	mov    dh,BYTE PTR [ecx]
  415e14:	cwde   
  415e15:	inc    edx
  415e16:	cwde   
  415e17:	fucomp st(7)
  415e19:	or     al,0x3b
  415e1b:	test   al,0x26
  415e1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e1e:	mov    bh,0xd9
  415e20:	popa   
  415e21:	sti    
  415e22:	push   0xffffffc5
  415e24:	dec    esp
  415e25:	and    edx,DWORD PTR [ebx+edx*2+0x68710947]
  415e2c:	mov    bh,BYTE PTR [ebx+0x7c]
  415e2f:	dec    esi
  415e30:	fist   WORD PTR [edi]
  415e32:	out    0x5,al
  415e34:	cmp    DWORD PTR [eax-0x767bdb92],ebp
  415e3a:	fs test edx,0x962822f9
  415e41:	sbb    edi,DWORD PTR [edx]
  415e43:	(bad)
  415e46:	clc    
  415e47:	in     eax,dx
  415e48:	jnp    0x415df2
  415e4a:	mov    ds:0x2fe4ff30,al
  415e4f:	mov    WORD PTR ds:[ecx-0x52],fs
  415e53:	pop    esp
  415e54:	lea    edx,[esi+0x5f]
  415e57:	in     al,dx
  415e58:	adc    BYTE PTR [esi-0x4a],0x3b
  415e5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e5d:	xchg   esp,eax
  415e5e:	mov    dh,0xfb
  415e60:	inc    DWORD PTR [ebx+eiz*4-0x2d8f0b0b]
  415e67:	outs   dx,DWORD PTR ds:[esi]
  415e68:	out    dx,al
  415e69:	out    dx,al
  415e6a:	push   es
  415e6b:	pop    ss
  415e6c:	xlat   BYTE PTR ds:[ebx]
  415e6d:	sub    eax,0x559d3f15
  415e72:	into   
  415e73:	or     BYTE PTR [esi+eiz*1],0x53
  415e77:	clc    
  415e78:	pop    edi
  415e79:	cmp    al,0x3a
  415e7c:	add    edi,edi
  415e7e:	arpl   WORD PTR [ecx-0x4e],dx
  415e81:	(bad)  
  415e82:	xchg   edi,eax
  415e83:	and    esp,DWORD PTR [esi-0x61]
  415e86:	inc    ecx
  415e87:	mov    dl,0xea
  415e89:	inc    eax
  415e8a:	dec    edx
  415e8b:	mov    ch,0x94
  415e8d:	(bad)  
  415e8f:	inc    eax
  415e90:	cld    
  415e91:	repnz mov esp,0x244192f4
  415e97:	sar    dl,0xd3
  415e9a:	pusha  
  415e9b:	push   ss
  415e9c:	mov    edx,0x100b67af
  415ea1:	xchg   edx,eax
  415ea2:	push   esp
  415ea3:	mov    edx,0xd6d02b5a
  415ea8:	mov    ds:0x23104e95,al
  415ead:	int    0xc7
  415eaf:	jmp    0x415efd
  415eb1:	sub    bl,0x2d
  415eb4:	das    
  415eb5:	inc    edi
  415eb6:	jmp    DWORD PTR [ebp+0x73]
  415eb9:	rcl    dl,0x39
  415ebc:	scas   eax,DWORD PTR es:[edi]
  415ebd:	jbe    0x415ea2
  415ebf:	mov    bh,0x45
  415ec1:	sub    al,0xef
  415ec3:	bound  esp,QWORD PTR [esi+0x53]
  415ec6:	pop    esi
  415ec7:	arpl   WORD PTR [eax+ecx*4],di
  415eca:	sbb    DWORD PTR [esi-0x54],esi
  415ecd:	mov    bh,BYTE PTR [ecx+0x1ef2202c]
  415ed3:	je     0x415f53
  415ed5:	inc    esp
  415ed6:	fwait
  415ed7:	pop    edi
  415ed8:	int3   
  415ed9:	loopne 0x415ea1
  415edb:	mov    dl,0xd8
  415edd:	jg     0x415f30
  415edf:	mov    dh,0x29
  415ee1:	into   
  415ee2:	and    BYTE PTR [esi],bh
  415ee4:	lock pop es
  415ee6:	rol    DWORD PTR [ecx+0x7d],0xdc
  415eea:	repnz xchg ecx,eax
  415eec:	stc    
  415eed:	in     al,dx
  415eee:	mov    ch,0x50
  415ef0:	test   al,0x7f
  415ef2:	mov    ds:0xc2ba372,eax
  415ef7:	sbb    cl,BYTE PTR [edx]
  415ef9:	xchg   DWORD PTR [ebx],eax
  415efb:	inc    ebx
  415efc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415efd:	jns    0x415f4a
  415eff:	cmp    edx,DWORD PTR [edi+0x6a]
  415f02:	loopne 0x415ed3
  415f04:	cmp    ebx,DWORD PTR [edi-0x6e]
  415f07:	dec    eax
  415f08:	mov    ebx,0xa9d50e68
  415f0d:	mov    ebp,0xafbd3889
  415f12:	pop    ebp
  415f13:	or     ebp,edi
  415f15:	xchg   edx,eax
  415f16:	xchg   esp,esi
  415f18:	inc    edx
  415f19:	test   al,0x35
  415f1b:	jb     0x415f24
  415f1d:	jbe    0x415f95
  415f1f:	es clc 
  415f21:	adc    al,0x6c
  415f23:	or     bl,BYTE PTR [edx]
  415f25:	das    
  415f26:	div    ebx
  415f28:	icebp  
  415f29:	mov    ecx,DWORD PTR [edi]
  415f2b:	add    ebx,DWORD PTR [eax]
  415f2d:	sub    BYTE PTR [ebp-0x38],al
  415f30:	cld    
  415f31:	ja     0x415f23
  415f33:	lahf   
  415f34:	inc    BYTE PTR [esi+0x6570c904]
  415f3a:	(bad)  
  415f3c:	sub    BYTE PTR [edi],cl
  415f3e:	fnstcw WORD PTR [ecx]
  415f40:	sub    edi,DWORD PTR fs:[esi+0x263c6b9a]
  415f47:	jns    0x415fa7
  415f49:	popa   
  415f4a:	dec    edi
  415f4b:	jbe    0x415eee
  415f4d:	xor    BYTE PTR [ebx-0x58a1fc20],ch
  415f53:	xchg   esi,eax
  415f54:	fldcw  WORD PTR [edx]
  415f56:	popf   
  415f57:	add    eax,0x260b8abe
  415f5c:	xor    eax,esi
  415f5e:	(bad)  
  415f5f:	int3   
  415f60:	dec    esp
  415f61:	pusha  
  415f62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f63:	push   DWORD PTR [eax+0x4196b14d]
  415f69:	inc    edi
  415f6a:	das    
  415f6b:	push   0xc
  415f6d:	es mov al,dh
  415f70:	stos   BYTE PTR es:[edi],al
  415f71:	xchg   ebp,eax
  415f72:	jmp    0x415f77
  415f74:	(bad)  
  415f75:	retf   0x5330
  415f78:	aam    0x1f
  415f7a:	xchg   esp,eax
  415f7b:	aam    0xec
  415f7d:	or     al,0xf5
  415f7f:	xor    al,0x86
  415f81:	cmp    edx,esp
  415f83:	cmp    dl,cl
  415f85:	lahf   
  415f86:	and    cl,BYTE PTR [ebp-0x31]
  415f89:	stc    
  415f8a:	in     eax,dx
  415f8b:	ds jae 0x415f24
  415f8e:	cmp    al,BYTE PTR [edx]
  415f90:	call   0x5c3f:0x61f2d06d
  415f97:	dec    esp
  415f98:	adc    dh,BYTE PTR [ecx+0x42]
  415f9b:	push   cs
  415f9c:	ss aad 0x5
  415f9f:	out    dx,al
  415fa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fa1:	data16 mov BYTE PTR [ebx],0xa8
  415fa5:	push   es
  415fa6:	icebp  
  415fa7:	dec    eax
  415fa8:	int    0xb6
  415faa:	inc    BYTE PTR [esi+ebx*4]
  415fad:	xor    al,ah
  415faf:	loope  0x415fb6
  415fb1:	inc    al
  415fb3:	cdq    
  415fb4:	push   edi
  415fb5:	fiadd  DWORD PTR ss:[ebp+0x3e638873]
  415fbc:	and    al,0xac
  415fbe:	int    0x91
  415fc0:	bound  ebx,QWORD PTR [esi-0x6]
  415fc3:	or     BYTE PTR [eax+0x6a],0xf
  415fc7:	jg     0x415f96
  415fc9:	out    0xa0,al
  415fcb:	mov    dh,0xa7
  415fcd:	push   0xdd364fbf
  415fd2:	fst    QWORD PTR [eax]
  415fd4:	out    dx,eax
  415fd5:	jo     0x416011
  415fd7:	push   edx
  415fd8:	and    DWORD PTR [edx+0x3f],0x72
  415fdc:	push   eax
  415fdd:	out    0x62,eax
  415fdf:	das    
  415fe0:	pop    ebp
  415fe1:	adc    edx,DWORD PTR [edx]
  415fe3:	cld    
  415fe4:	sub    bh,BYTE PTR [ebp-0x3416f46d]
  415fea:	enter  0x393b,0x3d
  415fee:	mov    al,ds:0xba128204
  415ff3:	es das 
  415ff5:	xor    BYTE PTR [edx+0x1c0c2a37],dh
  415ffb:	js     0x415fc2
  415ffd:	in     al,dx
  415ffe:	test   BYTE PTR [edx-0x4f423deb],ah
  416004:	dec    eax
  416005:	sar    DWORD PTR [eax+edx*8],1
  416008:	faddp  st(4),st
  41600a:	push   ebx
  41600b:	into   
  41600c:	mov    ch,0xd0
  41600e:	push   ebx
  41600f:	outs   dx,DWORD PTR ds:[esi]
  416010:	push   ecx
  416011:	pop    edx
  416012:	inc    esp
  416013:	(bad)  
  416014:	in     eax,dx
  416015:	xor    DWORD PTR [ecx],edx
  416017:	adc    DWORD PTR [ecx-0x5c],edi
  41601a:	dec    ebx
  41601b:	push   eax
  41601c:	xor    BYTE PTR [esi+0x59],ah
  41601f:	jne    0x416034
  416021:	sahf   
  416022:	or     dh,BYTE PTR [edx+eiz*2]
  416025:	cli    
  416026:	sbb    al,0x50
  416028:	sbb    ch,ah
  41602a:	sbb    DWORD PTR [ebp+0x21],esi
  41602d:	(bad)  
  41602e:	int    0x52
  416030:	add    eax,0x30490ef2
  416035:	xor    eax,0x3c55c36f
  41603a:	into   
  41603b:	cli    
  41603c:	xor    ebp,DWORD PTR [ebx+ebx*4+0x3037b06f]
  416043:	inc    ebx
  416044:	mov    esp,0x1ae3dea1
  416049:	xchg   edi,eax
  41604a:	int    0xa0
  41604c:	jecxz  0x415fec
  41604e:	add    BYTE PTR [eax],al
  416050:	add    BYTE PTR [eax],al
  416052:	cmp    dh,BYTE PTR [ebp+0x3c]
  416055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416056:	jg     0x416047
  416058:	mov    edx,0xd72f5cfd
  41605d:	jae    0x4160ba
  41605f:	loopne 0x4160d8
  416061:	inc    esi
  416062:	popa   
  416063:	fiadd  WORD PTR [eax]
  416065:	add    ah,dh
  416067:	add    al,0x0
  416069:	add    ah,bh
  41606b:	call   0xe5c9:0x759ddf70
  416072:	lock and DWORD PTR [ecx-0x27091736],ecx
  416079:	icebp  
  41607a:	test   al,0xca
  41607c:	mov    bl,0x42
  41607e:	xlat   BYTE PTR ds:[ebx]
  41607f:	(bad)  
  416080:	cmp    al,0xca
  416082:	test   ebp,ebx
  416084:	dec    esp
  416085:	fmul   st(3),st
  416087:	adc    eax,0x9cd51967
  41608c:	mov    ds:0xbbbd5c3f,al
  416091:	pusha  
  416092:	and    edi,DWORD PTR [ebx-0x4e]
  416095:	cmp    eax,0x9152b99f
  41609a:	mov    WORD PTR [edx],ds
  41609c:	dec    esi
  41609d:	outs   dx,DWORD PTR ds:[esi]
  41609e:	jg     0x4160ba
  4160a0:	retf   0xb7e0
  4160a3:	mov    eax,ds:0xa5ec5b6e
  4160a8:	dec    edx
  4160a9:	sbb    BYTE PTR [esi+eax*4-0x37],dh
  4160ad:	adc    ch,cl
  4160af:	ins    DWORD PTR es:[edi],dx
  4160b0:	lea    eax,[ebp-0x52442d84]
  4160b6:	ret    0x6abf
  4160b9:	sbb    bh,BYTE PTR [ebp-0x6d57a0c3]
  4160bf:	push   0x13
  4160c1:	nop
  4160c2:	std    
  4160c3:	or     al,0x95
  4160c5:	hlt    
  4160c6:	cmp    ebx,DWORD PTR [ecx]
  4160c8:	xor    al,0xe4
  4160ca:	leave  
  4160cb:	in     eax,0x6b
  4160cd:	ficomp DWORD PTR [edx]
  4160cf:	pushf  
  4160d0:	stc    
  4160d1:	xchg   esi,eax
  4160d2:	mov    bl,cl
  4160d4:	xchg   ebp,eax
  4160d5:	and    eax,0x538086ca
  4160da:	ret    
  4160db:	mov    eax,0xa4061a8
  4160e0:	ficom  WORD PTR [ecx+0x49]
  4160e3:	ja     0x4160a1
  4160e5:	imul   esp,eax,0x3
  4160e8:	jle    0x4160be
  4160ea:	or     eax,0x38d79e2d
  4160ef:	int3   
  4160f0:	push   cs
  4160f1:	mov    esp,0xe3f7b4a
  4160f6:	adc    al,0x86
  4160f8:	addr16 mov bl,0x76
  4160fb:	and    eax,0xa8508f83
  416100:	inc    edx
  416101:	ds loope 0x41612a
  416104:	push   0x60
  416106:	in     eax,0xc1
  416108:	lea    edi,[ebx+0x394eb7da]
  41610e:	and    al,0xf4
  416110:	mov    BYTE PTR [ebp-0x43571d48],ah
  416116:	push   ebp
  416117:	mov    eax,ds:0xf951ca5b
  41611c:	fidivr WORD PTR [esi+0x35]
  41611f:	dec    esi
  416120:	dec    esi
  416121:	or     BYTE PTR [edi],0xe1
  416124:	add    eax,0x696df2cf
  416129:	jmp    0x416111
  41612b:	push   ecx
  41612c:	aas    
  41612d:	sub    al,bh
  41612f:	and    al,0x32
  416131:	sbb    edi,DWORD PTR [edx]
  416133:	xor    al,0xa2
  416135:	xchg   BYTE PTR [edx],dh
  416137:	fistp  QWORD PTR [ebx]
  416139:	enter  0xf916,0xa0
  41613d:	ror    BYTE PTR [ebp-0x75],0x91
  416141:	call   FWORD PTR [ebx+0x2f81dbfd]
  416147:	fldenv [edi+0x14]
  41614a:	inc    esi
  41614b:	sub    DWORD PTR [edx+edx*1],eax
  41614e:	and    eax,0xc31ba139
  416153:	add    ah,BYTE PTR [ebp+0x570226a2]
  416159:	bound  edi,QWORD PTR [esi]
  41615b:	hlt    
  41615c:	stc    
  41615d:	sub    esp,DWORD PTR [ecx]
  41615f:	push   edi
  416160:	jecxz  0x416190
  416162:	xor    dh,BYTE PTR [edi-0x23]
  416165:	inc    esp
  416166:	dec    esi
  416167:	xchg   ebp,eax
  416168:	add    BYTE PTR [edi-0x9],bl
  41616b:	cmp    eax,0xca293750
  416170:	ja     0x4161c9
  416172:	out    dx,eax
  416173:	pop    ebx
  416174:	(bad)  
  416175:	cmp    BYTE PTR [ebp-0x41],ch
  416178:	cld    
  416179:	and    al,0x3c
  41617b:	out    dx,al
  41617c:	imul   edx,DWORD PTR [esi-0x34],0xffffffcc
  416180:	xchg   ecx,eax
  416181:	xchg   ebx,eax
  416182:	mov    bh,0x81
  416184:	(bad)  
  416185:	mov    bh,0xed
  416187:	pusha  
  416188:	mov    ebp,0x5abfa245
  41618d:	or     al,0xa3
  41618f:	fnsave ss:[edi-0x7d2bee4a]
  416196:	aas    
  416197:	sahf   
  416198:	bound  ecx,QWORD PTR [ecx-0x6ae9c877]
  41619e:	push   ebp
  41619f:	retf   0x5b4d
  4161a2:	jbe    0x41617a
  4161a4:	pop    ecx
  4161a5:	sbb    al,0xd
  4161a7:	int3   
  4161a8:	dec    esi
  4161a9:	xor    dh,BYTE PTR [eax]
  4161ab:	dec    edx
  4161ac:	gs (bad) 
  4161ae:	das    
  4161af:	test   al,0x82
  4161b1:	add    edx,DWORD PTR [edi]
  4161b3:	inc    edi
  4161b4:	repz imul ebx,DWORD PTR [edi],0x3f
  4161b8:	and    al,0x7f
  4161ba:	rdtsc  
  4161bc:	test   eax,0x85803b54
  4161c1:	pushf  
  4161c2:	mov    esp,0x894844ed
  4161c7:	dec    ebx
  4161c8:	or     ah,BYTE PTR [eax]
  4161ca:	iret   
  4161cb:	jl     0x4161ac
  4161cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161ce:	and    bl,dl
  4161d0:	mov    edi,0x5e143d23
  4161d5:	lods   eax,DWORD PTR ds:[esi]
  4161d6:	outs   dx,BYTE PTR gs:[esi]
  4161d8:	sub    al,0x84
  4161da:	jo     0x416168
  4161dc:	jge    0x4161a7
  4161de:	xor    BYTE PTR [ebp+0x5b54e2d0],al
  4161e4:	lods   eax,DWORD PTR ds:[esi]
  4161e5:	repz mov bl,0xab
  4161e8:	das    
  4161e9:	mov    eax,ds:0xb7a81620
  4161ee:	dec    eax
  4161ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161f0:	ret    
  4161f1:	dec    ebx
  4161f2:	fwait
  4161f3:	dec    esp
  4161f4:	and    ah,BYTE PTR [ecx]
  4161f6:	fwait
  4161f7:	sub    eax,0x48cc1025
  4161fc:	adc    al,0x4d
  4161fe:	mov    dl,0xba
  416200:	inc    esi
  416201:	push   eax
  416202:	int3   
  416203:	inc    ebx
  416204:	and    eax,0xcb7e216f
  416209:	jnp    0x416261
  41620b:	sub    esp,edx
  41620d:	arpl   bp,si
  41620f:	jne    0x41619b
  416211:	sahf   
  416212:	fstp   DWORD PTR [eax]
  416214:	add    al,0xfb
  416216:	mov    ah,0x25
  416218:	retf   
  416219:	push   ebp
  41621a:	(bad)  
  41621b:	icebp  
  41621c:	(bad)  
  41621d:	cmc    
  41621e:	adc    ecx,DWORD PTR [ebx-0x24]
  416221:	lea    ebx,[ebx+eiz*1]
  416224:	mov    ah,0x82
  416226:	and    BYTE PTR [esp+edx*8],0x77
  41622a:	out    0x67,al
  41622c:	(bad)
  41622f:	push   ebx
  416230:	stos   BYTE PTR es:[edi],al
  416231:	jb     0x416242
  416233:	sbb    ebx,ebp
  416235:	dec    ebx
  416236:	enter  0x529e,0x90
  41623a:	adc    bh,BYTE PTR [eax]
  41623c:	jne    0x416295
  41623e:	push   ss
  41623f:	leave  
  416240:	outs   dx,DWORD PTR ds:[esi]
  416241:	cmc    
  416242:	mov    ds:0x4f3068d1,al
  416247:	jo     0x4161dd
  416249:	test   eax,0x51bbdae0
  41624e:	jno    0x4162a4
  416250:	fist   WORD PTR [ebx+ebx*4]
  416253:	call   0x3453:0x852c28be
  41625a:	pop    ss
  41625b:	popa   
  41625c:	clc    
  41625d:	push   ebp
  41625e:	and    BYTE PTR [ecx+eiz*4+0x139bd36d],dl
  416265:	inc    edx
  416266:	mov    ebx,0x8c368ed4
  41626b:	pop    ss
  41626c:	push   cs
  41626d:	outs   dx,DWORD PTR ds:[esi]
  41626e:	stos   DWORD PTR es:[edi],eax
  41626f:	ret    0xc1d3
  416272:	cmp    eax,0xfb5b5d4e
  416277:	sub    esi,eax
  416279:	dec    edx
  41627a:	jno    0x4162cf
  41627c:	cmp    eax,0xadfb960b
  416281:	or     edi,DWORD PTR [eax-0x6977411d]
  416287:	ja     0x416222
  416289:	imul   edx,edi,0x26c964ce
  41628f:	cwde   
  416290:	mov    ch,0x97
  416292:	out    0x4,eax
  416294:	dec    edi
  416295:	add    DWORD PTR [ecx-0x24efa704],esi
  41629b:	xor    BYTE PTR [ecx-0x35],cl
  41629e:	sbb    eax,0x446cf46a
  4162a3:	adc    BYTE PTR [esi+0xb2efbbe],0x87
  4162aa:	mov    ch,0xc5
  4162ac:	xor    ah,BYTE PTR [edi+0x2912b46a]
  4162b2:	push   ss
  4162b3:	ret    
  4162b4:	lock retf 
  4162b6:	rol    DWORD PTR [ecx],cl
  4162b8:	xchg   ecx,eax
  4162b9:	(bad)  
  4162ba:	jmp    0x4162d1
  4162bc:	into   
  4162bd:	pop    edx
  4162be:	jne    0x41630b
  4162c0:	jge    0x41625f
  4162c2:	mov    al,ds:0x1a87a442
  4162c7:	cli    
  4162c8:	loopne 0x4162fb
  4162ca:	ss pop ss
  4162cc:	sti    
  4162cd:	cmp    al,0x35
  4162cf:	fsub   QWORD PTR ds:0xe85bc8d5
  4162d5:	jmp    0x17d4812d
  4162da:	sbb    al,0x94
  4162dc:	mov    ecx,0xf32cccc1
  4162e1:	xchg   ebx,eax
  4162e2:	sbb    eax,0x6f753493
  4162e7:	fadd   DWORD PTR [esi+0x71]
  4162ea:	cmp    al,al
  4162ec:	sub    DWORD PTR [edx+0x46],esi
  4162ef:	ficomp WORD PTR [esp+ecx*8+0x569d2d29]
  4162f6:	sahf   
  4162f7:	addr16 pop ecx
  4162f9:	cmp    eax,0x7c73dce1
  4162fe:	or     eax,0x32be71f9
  416303:	adc    esp,DWORD PTR [ecx]
  416305:	jmp    0x59db:0x81ecae8b
  41630c:	hlt    
  41630d:	jae    0x41629a
  41630f:	cmp    al,0xfa
  416311:	xchg   ebx,eax
  416312:	pop    edx
  416313:	dec    esi
  416314:	ds pushf 
  416316:	pop    ss
  416317:	lods   eax,DWORD PTR ds:[esi]
  416318:	xor    DWORD PTR ds:0xf4413285,ecx
  41631e:	fisttp WORD PTR [edi+0x119973bc]
  416324:	or     dh,BYTE PTR [eax+0x5eee8ea3]
  41632a:	outs   dx,BYTE PTR ds:[esi]
  41632b:	mov    al,0x8d
  41632d:	mov    ebx,0x9980f2ef
  416332:	pop    eax
  416333:	inc    edx
  416334:	cmp    eax,0xffffffcb
  416337:	mov    ss,WORD PTR [ebp-0x36]
  41633a:	arpl   di,bx
  41633c:	fcmovu st,st(5)
  41633e:	pop    ebp
  41633f:	(bad)  
  416340:	int    0x1b
  416342:	xchg   ebp,eax
  416343:	test   eax,0x31298542
  416348:	cdq    
  416349:	call   0x3ec67451
  41634e:	outs   dx,BYTE PTR ds:[esi]
  41634f:	mov    dl,0x17
  416351:	cli    
  416352:	shr    BYTE PTR [eax+0x7c],0xbd
  416356:	sbb    dh,cl
  416358:	out    dx,eax
  416359:	stos   DWORD PTR es:[edi],eax
  41635a:	inc    BYTE PTR [ecx+0x29]
  41635d:	pop    edx
  41635e:	stos   BYTE PTR es:[edi],al
  41635f:	mov    ds:0xd8cde7bb,eax
  416364:	not    BYTE PTR [ecx+0x347cc956]
  41636a:	or     ecx,DWORD PTR [ebx+0x657ba46e]
  416370:	cmp    edi,DWORD PTR [ecx]
  416372:	xchg   ebp,eax
  416373:	pop    eax
  416374:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416375:	(bad)  
  416376:	jnp    0x4163bc
  416378:	pop    ds
  416379:	xlat   BYTE PTR ds:[ebx]
  41637a:	pop    ds
  41637b:	inc    ebp
  41637c:	push   esp
  41637d:	push   0x5a556a53
  416382:	lock test eax,0xaa3e14b5
  416388:	add    eax,0xa9036d5b
  41638d:	xlat   BYTE PTR ds:[ebx]
  41638e:	imul   edx,DWORD PTR [edx],0x3
  416391:	sub    ebx,DWORD PTR [ebp+0x250245ba]
  416397:	xor    eax,0xb980768e
  41639c:	repnz adc BYTE PTR [ebx+ebp*2-0x9],dl
  4163a1:	sti    
  4163a2:	fmul   st,st(5)
  4163a4:	xor    eax,eax
  4163a6:	mov    al,bh
  4163a8:	sar    edx,0xe4
  4163ab:	hlt    
  4163ac:	push   ebp
  4163ad:	retf   
  4163ae:	scas   eax,DWORD PTR es:[edi]
  4163af:	rol    DWORD PTR [ecx+ebp*1],cl
  4163b2:	adc    DWORD PTR fs:[eax+eiz*2-0x4df59eb8],esp
  4163ba:	or     DWORD PTR [esi-0x4e],edi
  4163bd:	scas   eax,DWORD PTR es:[edi]
  4163be:	mov    ds:0x671a3c66,al
  4163c3:	mov    eax,0xa63bf089
  4163c8:	cmp    al,0x29
  4163ca:	jne    0x41641f
  4163cc:	dec    ebp
  4163cd:	push   ecx
  4163ce:	adc    DWORD PTR [ebx],ecx
  4163d0:	push   ecx
  4163d1:	iret   
  4163d2:	and    bl,BYTE PTR [esi+eiz*1]
  4163d5:	pop    ecx
  4163d6:	adc    cl,BYTE PTR [eax-0x55b28102]
  4163dc:	mov    ch,0xbe
  4163de:	jmp    0x1fc7:0x1f292bf5
  4163e5:	call   0x3591:0xeb773ec7
  4163ec:	fist   DWORD PTR [edx]
  4163ee:	es loope 0x4163ee
  4163f1:	mov    al,0x76
  4163f3:	popa   
  4163f4:	clc    
  4163f5:	adc    al,0x5e
  4163f7:	cmp    dl,BYTE PTR es:[edi]
  4163fa:	xor    edi,DWORD PTR [edx-0x5d]
  4163fd:	mov    dh,dl
  4163ff:	aaa    
  416400:	imul   ecx,DWORD PTR [esi+0x6e64d3ab],0x7ba4097c
  41640a:	sbb    ebp,DWORD PTR [ebp+0xa]
  41640d:	adc    ebx,eax
  41640f:	sub    BYTE PTR [ebx-0x4],ah
  416412:	ja     0x4163eb
  416414:	fs jmp 0x41645e
  416417:	stos   BYTE PTR es:[edi],al
  416418:	mov    edx,0x2afdf4a5
  41641d:	xor    dh,BYTE PTR ds:0xa99fb2f1
  416423:	mov    DWORD PTR [ebp-0x4fb9b9e4],edi
  416429:	cli    
  41642a:	hlt    
  41642b:	ret    
  41642c:	mov    al,0xa0
  41642e:	jne    0x4164a2
  416430:	cli    
  416431:	and    esi,ecx
  416433:	stc    
  416434:	sub    BYTE PTR cs:[ebp+0x35a89e80],ch
  41643b:	call   0x2a911978
  416440:	dec    ecx
  416441:	pop    DWORD PTR [ebx+0x4]
  416444:	(bad)  
  416445:	call   0x399083ef
  41644a:	sub    al,0xbc
  41644c:	mov    ebp,0x3a0e1a28
  416451:	or     ebp,esi
  416453:	loopne 0x416455
  416455:	lahf   
  416456:	mov    dh,0xd2
  416458:	jae    0x4164b3
  41645a:	jo     0x41643a
  41645c:	mov    al,0xc0
  41645e:	icebp  
  41645f:	in     al,0x1c
  416461:	mov    WORD PTR [ebp-0x512bde75],ss
  416467:	mov    bl,0xe2
  416469:	sub    al,0xa9
  41646b:	push   ecx
  41646c:	neg    BYTE PTR [esi+0x10192c3]
  416472:	adc    DWORD PTR [edi+0x66],0xd36a5f6b
  416479:	mov    edx,0x91ca6972
  41647e:	mov    WORD PTR [edi],ss
  416480:	loope  0x41647c
  416482:	adc    ecx,DWORD PTR [esi+0x1a]
  416485:	imul   eax,DWORD PTR [ecx+0x38939e72],0xfffffff6
  41648c:	cmp    bl,cl
  41648e:	in     eax,0x92
  416490:	pop    ebx
  416491:	in     eax,dx
  416492:	sub    DWORD PTR [ebx],eax
  416494:	lea    ecx,fs:[ebp+ebp*2-0x11]
  416499:	dec    ebx
  41649a:	pop    eax
  41649b:	retf   
  41649c:	mov    ch,0x79
  41649e:	push   edi
  41649f:	cmp    DWORD PTR [ebp-0x4f],0xffffff90
  4164a3:	push   cs
  4164a4:	mov    ebp,0xbc877174
  4164a9:	(bad)  
  4164aa:	fwait
  4164ab:	or     al,BYTE PTR [ebx-0x46ee872]
  4164b1:	push   0x66f6c04d
  4164b6:	or     BYTE PTR [edi-0x224c71a1],0x7a
  4164bd:	daa    
  4164be:	mov    esp,0xffa0f6d
  4164c3:	in     eax,0x88
  4164c5:	mov    edi,0xd2e6b3e1
  4164ca:	cmp    BYTE PTR [eax+0x57116bc2],bl
  4164d0:	retf   0xfd9e
  4164d3:	mov    al,ds:0xd5dcc124
  4164d8:	fisub  DWORD PTR [esi]
  4164da:	sbb    edx,edx
  4164dc:	imul   eax,DWORD PTR [ecx],0xffffffe0
  4164df:	pop    ds
  4164e0:	sar    BYTE PTR [esi+ebx*4+0x4ec8c224],0xa3
  4164e8:	sahf   
  4164e9:	jb     0x416474
  4164eb:	inc    edx
  4164ec:	push   cs
  4164ed:	dec    cl
  4164ef:	stos   DWORD PTR es:[edi],eax
  4164f0:	in     al,0x7a
  4164f2:	mov    edx,0x9bbaafe7
  4164f7:	int    0xc3
  4164f9:	push   edi
  4164fa:	outs   dx,BYTE PTR ds:[esi]
  4164fb:	sub    dh,BYTE PTR [ebp+0xeb37bda]
  416501:	outs   dx,DWORD PTR ds:[esi]
  416502:	add    BYTE PTR [esp+edi*4],cl
  416505:	sti    
  416506:	daa    
  416507:	and    edx,DWORD PTR [ebp-0x32f23bfc]
  41650d:	dec    edi
  41650e:	dec    edx
  41650f:	das    
  416510:	jl     0x416506
  416512:	ret    
  416513:	cmc    
  416514:	push   ecx
  416515:	leave  
  416516:	imul   eax,DWORD PTR cs:[eax-0x641d5f5],0xc68ac8ef
  416521:	shl    BYTE PTR [esi+0x59],0x92
  416525:	push   0x4b
  416527:	mov    ?,WORD PTR [eax]
  416529:	neg    BYTE PTR [ebp-0x1630e0ae]
  41652f:	and    eax,0x64daa27c
  416534:	inc    edi
  416535:	add    eax,0x972a3620
  41653a:	or     dl,cl
  41653c:	and    ch,BYTE PTR [edx-0x7a]
  41653f:	sahf   
  416540:	sbb    al,0xca
  416542:	and    eax,0xbfc3d7b4
  416547:	cs jmp 0xc8dd6c0c
  41654d:	sub    DWORD PTR [ebx],0x7d
  416550:	out    0x4,al
  416552:	lods   eax,DWORD PTR ds:[esi]
  416553:	adc    DWORD PTR ds:0xeca2560,ecx
  416559:	cmc    
  41655a:	jno    0x416511
  41655c:	inc    edx
  41655d:	clc    
  41655e:	add    BYTE PTR [eax],al
  416560:	add    BYTE PTR [eax],al
  416562:	clc    
  416563:	pminsw mm6,QWORD PTR [edi-0x1]
  416567:	idiv   ebp
  416569:	(bad)  
  41656a:	repz push esi
  41656c:	retf   0xa0f1
  41656f:	hlt    
  416570:	pop    edx
  416571:	ins    BYTE PTR es:[edi],dx
  416572:	push   ebp
  416573:	jecxz  0x416575
  416575:	add    ah,dh
  416577:	add    al,0x0
  416579:	add    BYTE PTR [ebx+0x37022bf2],dl
  41657f:	in     eax,0xf9
  416581:	daa    
  416582:	sbb    BYTE PTR [esi],ch
  416584:	inc    edx
  416585:	dec    eax
  416586:	dec    esi
  416587:	ja     0x41659f
  416589:	jle    0x416542
  41658b:	iret   
  41658c:	cmp    ah,dl
  41658e:	sub    DWORD PTR [edi],0xfec12e32
  416594:	xchg   ebx,eax
  416595:	pop    es
  416596:	pop    esp
  416597:	inc    ecx
  416598:	dec    esp
  416599:	les    edi,FWORD PTR [edi+ecx*8-0x51236c59]
  4165a0:	fstp   DWORD PTR [edi-0x28]
  4165a3:	int    0xe0
  4165a5:	inc    eax
  4165a6:	jmp    0x416581
  4165a8:	popa   
  4165a9:	jnp    0x416610
  4165ab:	dec    ebp
  4165ac:	jnp    0x416576
  4165ae:	pop    edx
  4165af:	pop    edi
  4165b0:	xchg   edx,eax
  4165b1:	jle    0x416621
  4165b3:	scas   al,BYTE PTR es:[edi]
  4165b4:	sbb    edi,ebx
  4165b6:	pop    edx
  4165b7:	loopne 0x416568
  4165b9:	jno    0x4165d9
  4165bb:	retf   0x7637
  4165be:	xchg   esi,eax
  4165bf:	not    esp
  4165c1:	push   cs
  4165c2:	pop    esp
  4165c3:	or     DWORD PTR [ecx-0x3f],esp
  4165c6:	(bad)  
  4165c7:	retf   0x9a4f
  4165ca:	push   ecx
  4165cb:	iret   
  4165cc:	inc    eax
  4165cd:	scas   eax,DWORD PTR es:[edi]
  4165ce:	nop
  4165cf:	je     0x4165b9
  4165d1:	test   al,0xa4
  4165d3:	(bad)  
  4165d5:	mov    ecx,?
  4165d7:	mov    bh,0x11
  4165d9:	(bad)  
  4165da:	out    0x97,al
  4165dc:	inc    ebp
  4165dd:	loop   0x4165d5
  4165df:	adc    BYTE PTR [edi],0x55
  4165e2:	pusha  
  4165e3:	inc    edx
  4165e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165e5:	fild   DWORD PTR [ecx+0x214241f0]
  4165eb:	pop    eax
  4165ec:	mov    ecx,DWORD PTR [esi+0x6ba951b0]
  4165f2:	test   DWORD PTR [ecx+0x4c],0x4cf21b54
  4165f9:	push   ss
  4165fa:	inc    ebp
  4165fb:	pop    esp
  4165fc:	sahf   
  4165fd:	xchg   ecx,eax
  4165fe:	stos   BYTE PTR es:[edi],al
  4165ff:	out    dx,al
  416600:	in     eax,0xeb
  416602:	rol    dh,cl
  416604:	ucomiss xmm7,DWORD PTR [esi]
  416607:	mov    dh,BYTE PTR [ecx+0x6a]
  41660a:	xchg   ebx,eax
  41660b:	je     0x416593
  41660d:	jl     0x41658f
  41660f:	mov    al,0x68
  416611:	push   0x6a81dd7d
  416616:	popa   
  416617:	sbb    esi,DWORD PTR [edx-0x79]
  41661a:	aas    
  41661b:	bound  ebp,QWORD PTR ds:0x8b56d1d1
  416621:	jle    0x416648
  416623:	mov    eax,0xa99494ec
  416628:	cmp    edx,eax
  41662a:	inc    ebx
  41662b:	mov    edx,0x77aca8c8
  416630:	push   eax
  416631:	lahf   
  416632:	xchg   esp,eax
  416633:	add    eax,0xdfd85ef6
  416638:	push   es
  416639:	pop    eax
  41663a:	sub    al,0x83
  41663c:	lds    ebp,FWORD PTR [bx+si-0x7aaa]
  416641:	in     eax,0x8a
  416643:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416644:	sahf   
  416645:	push   edx
  416646:	add    BYTE PTR [ebp-0x53],0xf4
  41664a:	sbb    eax,DWORD PTR [ecx-0x4717b973]
  416650:	mov    edi,DWORD PTR [edi-0x55]
  416653:	stc    
  416654:	mov    DWORD PTR [edx+0x1e],ecx
  416657:	cmp    ebp,DWORD PTR [eax-0x74f3a107]
  41665d:	xchg   esp,eax
  41665e:	je     0x4165e1
  416660:	cmp    al,0x5b
  416662:	pop    ds
  416663:	inc    ebx
  416664:	pushf  
  416665:	sbb    BYTE PTR [ecx],ah
  416667:	adc    BYTE PTR [ecx],bh
  416669:	sub    bh,BYTE PTR [ebx-0x55]
  41666c:	into   
  41666d:	(bad)  
  41666e:	jle    0x416667
  416670:	and    DWORD PTR [ecx+0x6fe3a6da],edi
  416676:	mov    ebp,0xdca5d278
  41667b:	xor    ecx,0xff101af6
  416681:	std    
  416682:	xchg   esi,eax
  416683:	jmp    0xf3e370f1
  416688:	sub    edx,edx
  41668a:	mul    BYTE PTR [edi-0x503e34b9]
  416690:	xchg   bh,ch
  416692:	cld    
  416693:	cs and al,0x66
  416696:	jo     0x4166e9
  416698:	jns    0x416677
  41669a:	les    ecx,FWORD PTR [ebx]
  41669c:	jg     0x416678
  41669e:	test   eax,0xf9e25ff9
  4166a3:	pop    ecx
  4166a4:	shl    DWORD PTR [eax+edx*2+0x10],cl
  4166a8:	push   ebp
  4166a9:	lahf   
  4166aa:	pop    esp
  4166ab:	dec    esp
  4166ac:	dec    ecx
  4166ad:	xchg   BYTE PTR [eax+0x71],ah
  4166b0:	push   es
  4166b1:	in     eax,dx
  4166b2:	mov    edi,0x343bf681
  4166b7:	out    0x31,al
  4166b9:	dec    edi
  4166ba:	mov    ds:0x8b7eed4d,al
  4166bf:	stos   DWORD PTR es:[edi],eax
  4166c0:	leave  
  4166c1:	mov    ds:0x7c807f2d,eax
  4166c6:	sbb    eax,0xaba0a7
  4166cb:	sbb    bh,BYTE PTR [edx+0x6844ce52]
  4166d1:	pop    eax
  4166d2:	push   cs
  4166d3:	stc    
  4166d4:	iret   
  4166d5:	retw   
  4166d7:	out    dx,eax
  4166d8:	mov    ebp,0x53a27e73
  4166dd:	js     0x416713
  4166df:	stos   BYTE PTR es:[edi],al
  4166e0:	sbb    ch,BYTE PTR [ecx]
  4166e2:	clc    
  4166e3:	(bad)  
  4166e5:	not    BYTE PTR [ecx+0x60c24e25]
  4166eb:	fs scas eax,DWORD PTR es:[edi]
  4166ed:	pushf  
  4166ee:	jmp    FWORD PTR [ebx+ebx*2-0x26]
  4166f2:	jne    0x416697
  4166f4:	jnp    0x4166df
  4166f6:	jge    0x4166c0
  4166f8:	dec    edx
  4166f9:	and    esi,DWORD PTR [ecx+ebp*1-0x10]
  4166fd:	xlat   BYTE PTR ds:[ebx]
  4166fe:	clc    
  4166ff:	sar    bl,0x31
  416702:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416703:	pop    edi
  416704:	and    eax,DWORD PTR [esi-0x72]
  416707:	scas   al,BYTE PTR es:[edi]
  416708:	sar    bl,1
  41670a:	sbb    BYTE PTR [eax-0x5b520c68],ah
  416710:	int3   
  416711:	jbe    0x416771
  416713:	fs cli 
  416715:	scas   al,BYTE PTR es:[edi]
  416716:	xor    esi,ebx
  416718:	sbb    cl,BYTE PTR [ebx+0x136e6f8c]
  41671e:	mov    BYTE PTR [ebx+0x6ec515bb],dh
  416724:	test   DWORD PTR [ebp+0x6c],eax
  416727:	ins    DWORD PTR es:[edi],dx
  416728:	ins    DWORD PTR es:[edi],dx
  416729:	push   edi
  41672a:	js     0x4166c1
  41672c:	pop    esp
  41672d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41672e:	int3   
  41672f:	xlat   BYTE PTR ds:[ebx]
  416730:	test   BYTE PTR [edi+0x6637a723],al
  416736:	inc    ebp
  416737:	outs   dx,BYTE PTR ds:[esi]
  416738:	jno    0x416742
  41673a:	sbb    DWORD PTR [ebp-0x30492516],eax
  416740:	or     BYTE PTR [eax+0x7c],bl
  416743:	adc    eax,0x2af9e51a
  416748:	cwde   
  416749:	iret   
  41674a:	mov    ds:0xda918edb,al
  41674f:	inc    eax
  416750:	push   ss
  416751:	pop    ss
  416752:	retf   0x6753
  416755:	bound  ecx,QWORD PTR es:[edi+eax*2]
  416759:	test   bl,ah
  41675b:	cmp    BYTE PTR [eax+ecx*2-0x20],bh
  41675f:	adc    ebx,DWORD PTR [esi-0x41554f02]
  416765:	or     esi,DWORD PTR [edi+edx*1-0x1dc68348]
  41676c:	cmp    DWORD PTR [ebp+0x678dec3f],eax
  416772:	ror    eax,cl
  416774:	test   al,0xf
  416776:	mov    DWORD PTR ds:0x91329353,eax
  41677c:	mov    esi,0x7c871a04
  416781:	dec    ebx
  416782:	cdq    
  416783:	retf   
  416784:	(bad)  
  416785:	sbb    al,ch
  416787:	sti    
  416788:	sahf   
  416789:	leave  
  41678a:	lods   al,BYTE PTR ds:[esi]
  41678b:	push   edi
  41678c:	xchg   ecx,eax
  41678d:	pop    edi
  41678e:	aaa    
  41678f:	(bad)  
  416790:	adc    eax,0x84d96dca
  416795:	sub    DWORD PTR [esi+0x18],esi
  416798:	repnz pop ebp
  41679a:	mov    DWORD PTR [ecx-0x62],esp
  41679d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41679e:	and    ebp,ecx
  4167a0:	mov    ch,0x80
  4167a2:	jmp    0x4167f6
  4167a4:	sub    BYTE PTR ds:0x34a0d9b,ch
  4167aa:	xor    al,0x99
  4167ac:	sub    dl,0xad
  4167af:	ds mov bl,0xd
  4167b2:	aad    0x77
  4167b4:	clc    
  4167b5:	fisubr WORD PTR [ebx]
  4167b7:	retf   0xd7fc
  4167ba:	shr    DWORD PTR ds:0x17dd29b2,1
  4167c0:	pushf  
  4167c1:	sub    eax,0xbf646c50
  4167c6:	ret    0x424f
  4167c9:	mov    bl,0x6c
  4167cb:	fld    TBYTE PTR [esi]
  4167cd:	shr    BYTE PTR [ebx],cl
  4167cf:	imul   eax,DWORD PTR es:[esi+eiz*4-0x7bed926],0xd3cbdfa2
  4167db:	jo     0x416810
  4167dd:	lea    ecx,[eax]
  4167df:	in     eax,0xe4
  4167e1:	call   0xef9d:0x7935bc53
  4167e8:	sti    
  4167e9:	sub    bl,BYTE PTR [ecx+0xdc7e439]
  4167ef:	das    
  4167f0:	push   edx
  4167f1:	aaa    
  4167f2:	push   eax
  4167f3:	adc    DWORD PTR [edx-0x97ab291],esi
  4167f9:	in     al,dx
  4167fa:	mov    DWORD PTR ds:0x31792ded,ebp
  416800:	add    BYTE PTR [ebp-0x5c],0x20
  416804:	fcmovnu st,st(1)
  416806:	sbb    eax,0xb6839544
  41680b:	cmp    ebp,ecx
  41680d:	cmp    eax,0x3293735f
  416812:	(bad)  
  416813:	in     al,dx
  416814:	mov    ebp,0x51ab58e0
  416819:	fadd   DWORD PTR [ebp-0x7c]
  41681c:	loopne 0x416803
  41681e:	mov    cl,0xfa
  416820:	push   cs
  416821:	xchg   esi,ecx
  416823:	or     ah,bh
  416825:	test   BYTE PTR [ebx+eiz*1+0x2a3488b5],0x58
  41682d:	fistp  WORD PTR ds:[ebp-0x1ea77c01]
  416834:	jae    0x4167b8
  416836:	jns    0x41684b
  416838:	mov    dl,0xf8
  41683a:	out    0xfd,al
  41683c:	jg     0x416880
  41683e:	icebp  
  41683f:	fisttp QWORD PTR [ecx]
  416841:	sub    bl,BYTE PTR ds:0x520026a5
  416847:	mov    dh,0x51
  416849:	xor    DWORD PTR [edi-0x28],ebx
  41684c:	icebp  
  41684d:	or     eax,0xd4f08414
  416853:	ss cmp dl,cl
  416856:	inc    ecx
  416857:	sbb    DWORD PTR ds:0xaf9ef928,edx
  41685d:	push   ebx
  41685e:	aad    0xd0
  416860:	mov    eax,DWORD PTR [ecx+0x62]
  416863:	mov    al,ds:0x7a0b2270
  416868:	sub    bh,BYTE PTR [eax+0x71a5ddaf]
  41686e:	jne    0x41682e
  416870:	mov    dl,0xcf
  416872:	nop
  416873:	(bad)  
  416874:	ins    BYTE PTR es:[edi],dx
  416875:	xor    DWORD PTR [edi+edx*8-0x3f],0x9b2fda43
  41687d:	sbb    ecx,DWORD PTR [esi+0x6d1e2176]
  416883:	jno    0x4168b5
  416885:	out    0xe,al
  416887:	sub    DWORD PTR [eax],ebp
  416889:	sub    BYTE PTR [ebp-0x3e],dh
  41688c:	imul   esp,DWORD PTR [ecx-0x5a7a4b17],0x61e9bca7
  416896:	sub    eax,0xe1cc22e3
  41689b:	xchg   ebx,eax
  41689c:	loopne 0x4168d3
  41689e:	retf   
  41689f:	outs   dx,BYTE PTR ds:[esi]
  4168a0:	xchg   DWORD PTR [eax],ebp
  4168a2:	lods   al,BYTE PTR ds:[esi]
  4168a3:	les    eax,FWORD PTR [edx]
  4168a5:	jl     0x41684a
  4168a7:	mov    al,ds:0x92258277
  4168ac:	cwde   
  4168ad:	push   ebp
  4168ae:	pop    edx
  4168af:	sub    eax,0x92575d64
  4168b4:	jp     0x4168df
  4168b6:	sbb    al,0x3a
  4168b8:	mov    bl,0xea
  4168ba:	add    al,BYTE PTR [ebx+0x12]
  4168bd:	ror    BYTE PTR [eax],1
  4168bf:	mov    edx,0xef899d78
  4168c4:	pop    edx
  4168c5:	push   ds
  4168c6:	sub    al,0x6b
  4168c8:	sub    al,0x19
  4168ca:	cld    
  4168cb:	fcomip st,st(6)
  4168cd:	std    
  4168ce:	lea    ecx,[eax]
  4168d0:	sar    DWORD PTR [ecx-0x79],cl
  4168d3:	mov    dh,0x88
  4168d5:	test   DWORD PTR [ecx+edx*2],0x72294fa
  4168dc:	scas   al,BYTE PTR es:[edi]
  4168dd:	sahf   
  4168de:	mov    cl,0xaa
  4168e0:	add    DWORD PTR [edx-0x73],0xd5771dfc
  4168e7:	test   eax,0x5c63ff83
  4168ec:	and    al,0x90
  4168ee:	stos   BYTE PTR es:[edi],al
  4168ef:	pop    edx
  4168f0:	ja     0x41687c
  4168f2:	xchg   dl,ch
  4168f4:	fs and ebp,ecx
  4168f7:	mov    al,0x78
  4168f9:	dec    esi
  4168fa:	and    ch,dh
  4168fc:	fwait
  4168fd:	push   ss
  4168fe:	(bad)  
  4168ff:	sbb    al,0x37
  416901:	mov    ah,0xf1
  416903:	(bad)  
  416904:	loop   0x41697b
  416906:	loopne 0x416923
  416908:	data16 scas al,BYTE PTR es:[edi]
  41690a:	sbb    eax,0x6f327fec
  41690f:	push   ecx
  416910:	adc    DWORD PTR [ebp-0x54138384],ebp
  416916:	jb     0x4168ef
  416918:	add    ecx,edx
  41691a:	sbb    BYTE PTR ds:0x830d8590,dh
  416920:	push   es
  416921:	mov    DWORD PTR [esi+0x60f07661],edx
  416927:	push   eax
  416928:	stos   BYTE PTR es:[edi],al
  416929:	xor    DWORD PTR [ebx+0x751bbaac],0xb
  416930:	pushf  
  416931:	das    
  416932:	mov    dl,0x6c
  416934:	mov    ebp,0xf37fd996
  416939:	test   DWORD PTR [esi+0x2e],0x96dabe5c
  416940:	dec    ebx
  416941:	rol    BYTE PTR [esp+esi*8],1
  416944:	in     eax,0xd8
  416946:	mov    al,0x60
  416948:	jmp    0xdab0:0xb1f8de08
  41694f:	fcomp  DWORD PTR [ebx+0x6d]
  416952:	jno    0x416960
  416954:	jecxz  0x416925
  416956:	dec    esi
  416957:	mov    ds:0xc23b6188,eax
  41695c:	cmc    
  41695d:	jbe    0x41693f
  41695f:	push   edx
  416960:	mov    ds:0x84b6037c,al
  416965:	mov    ebp,0x72e87bce
  41696a:	dec    edx
  41696b:	xchg   ecx,eax
  41696c:	xchg   ebp,eax
  41696d:	add    eax,0xa47f51a9
  416972:	(bad)  
  416973:	nop
  416974:	xor    BYTE PTR [edx-0x7ce9c5fa],cl
  41697a:	es ret 
  41697c:	adc    eax,0xa7010a1f
  416981:	clc    
  416982:	mov    ecx,0x17114f74
  416987:	adc    eax,0xbea6d23a
  41698c:	jae    0x41692c
  41698e:	adc    eax,0x792203b4
  416993:	adc    al,0x31
  416995:	dec    esi
  416996:	dec    eax
  416997:	retf   0xb970
  41699a:	dec    ebp
  41699b:	les    ebx,FWORD PTR [edi+0x4a]
  41699e:	call   0x7aab:0xdab463d5
  4169a5:	xor    edx,DWORD PTR [ebx-0x65]
  4169a8:	enter  0x7d,0x5c
  4169ac:	dec    edi
  4169ad:	loop   0x4169db
  4169af:	nop
  4169b0:	adc    eax,0xbab21155
  4169b5:	cli    
  4169b6:	jmp    0xf4550047
  4169bb:	dec    DWORD PTR [edx-0x4f]
  4169be:	scas   eax,DWORD PTR es:[edi]
  4169bf:	popf   
  4169c0:	push   cs
  4169c1:	mov    dl,0x8d
  4169c3:	or     edi,DWORD PTR [ebx+edi*4]
  4169c6:	leave  
  4169c7:	jo     0x4169c5
  4169c9:	test   BYTE PTR [esi+0x2244daff],0x67
  4169d0:	mov    ?,esp
  4169d2:	sbb    eax,0x55918a5a
  4169d7:	xor    al,0x81
  4169d9:	stc    
  4169da:	retf   
  4169db:	in     eax,dx
  4169dc:	pop    ebp
  4169dd:	pop    ebx
  4169de:	xchg   ecx,eax
  4169df:	or     eax,0x1d21e56a
  4169e4:	xor    bh,BYTE PTR [esi-0x6149110b]
  4169ea:	dec    eax
  4169eb:	dec    ebx
  4169ec:	dec    esi
  4169ed:	xchg   ebp,eax
  4169ee:	cmp    al,0xfe
  4169f0:	push   cs
  4169f1:	mov    dl,0x6e
  4169f3:	repz rol BYTE PTR [eax],1
  4169f6:	ins    DWORD PTR es:[edi],dx
  4169f7:	inc    edx
  4169f8:	lea    ecx,fs:[ebp+0x1]
  4169fc:	rol    DWORD PTR [esi],0x1c
  4169ff:	xchg   ebx,eax
  416a00:	jle    0x4169a5
  416a02:	add    esi,edi
  416a04:	test   al,0x84
  416a06:	in     al,dx
  416a07:	pop    ebp
  416a08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a09:	inc    ecx
  416a0a:	push   ebx
  416a0b:	fs and dh,bl
  416a0e:	mov    ebp,0x28e04c47
  416a13:	lea    esi,[esp+ebp*1]
  416a16:	xchg   esp,eax
  416a17:	jp     0x416a09
  416a19:	iret   
  416a1a:	cmp    al,0xd3
  416a1c:	sub    eax,0xa79342cc
  416a21:	push   ebx
  416a22:	mov    ah,BYTE PTR [edi-0x22]
  416a25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a26:	or     BYTE PTR ds:0xc98b1f3d,dl
  416a2c:	sahf   
  416a2d:	popf   
  416a2e:	xchg   esi,eax
  416a2f:	ror    BYTE PTR [eax],1
  416a31:	sbb    al,0xaf
  416a33:	in     al,0x6
  416a35:	repz adc BYTE PTR [ebx],dl
  416a38:	ror    DWORD PTR es:[ebx-0x26],cl
  416a3c:	sbb    DWORD PTR [eax+0x3ca23c41],0x4a
  416a43:	leave  
  416a44:	stc    
  416a45:	adc    esi,0x7dd41bc0
  416a4b:	ret    
  416a4c:	iret   
  416a4d:	inc    edx
  416a4e:	pop    ebp
  416a4f:	xchg   esi,eax
  416a50:	sub    BYTE PTR [ebx-0x18],bh
  416a53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a54:	sahf   
  416a55:	clc    
  416a56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a57:	loop   0x416a5d
  416a59:	imul   esi,DWORD PTR [ebx-0x80],0xfffffffb
  416a5d:	lea    ecx,[edi*2-0x3789debc]
  416a64:	mov    ds:0xa29ad588,al
  416a69:	pop    edi
  416a6a:	inc    eax
  416a6b:	rol    BYTE PTR [esi],cl
  416a6d:	in     al,0x0
  416a6f:	add    BYTE PTR [eax],al
  416a71:	add    al,ch
  416a73:	xchg   ecx,eax
  416a74:	retf   0xfb3a
  416a77:	jnp    0x416a71
  416a79:	sar    DWORD PTR [edx-0x290c478b],cl
  416a7f:	ret    
  416a80:	xchg   ebp,eax
  416a81:	mov    al,0x49
  416a83:	call   0x5356a88
  416a88:	add    BYTE PTR [eax],al
  416a8a:	and    eax,0x4b6010de
  416a8f:	fwait
  416a90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a91:	mov    edi,0x3b617835
  416a96:	fwait
  416a97:	jae    0x416a8c
  416a99:	mov    ebx,0x4f546776
  416a9e:	(bad)  
  416a9f:	jmp    0x416af9
  416aa1:	in     al,0xff
  416aa3:	sub    eax,0xd0c41e2e
  416aa8:	sbb    al,0x91
  416aaa:	push   edx
  416aab:	jge    0x416adb
  416aad:	sub    BYTE PTR [bp+si+0x20],cl
  416ab1:	mov    ebp,cs
  416ab3:	popf   
  416ab4:	out    dx,al
  416ab5:	test   DWORD PTR [ebx],0x5a698862
  416abb:	push   esp
  416abc:	cdq    
  416abd:	fistp  WORD PTR [edi]
  416abf:	xchg   DWORD PTR [edi+ebp*1-0x29],ecx
  416ac3:	cli    
  416ac4:	xor    ah,BYTE PTR [edx]
  416ac6:	mov    eax,0xbebe9319
  416acb:	pop    ds
  416acc:	and    al,0x90
  416ace:	outs   dx,BYTE PTR ds:[esi]
  416acf:	arpl   WORD PTR [edi+ebx*2],bp
  416ad2:	in     eax,0xaf
  416ad4:	push   ebp
  416ad5:	xchg   edx,eax
  416ad6:	lods   al,BYTE PTR ds:[esi]
  416ad7:	push   edx
  416ad8:	out    dx,eax
  416ad9:	ja     0x416b17
  416adb:	mov    BYTE PTR [ebp+0x21d3bbaf],al
  416ae1:	push   esp
  416ae2:	ror    DWORD PTR [edi+0x4c207804],cl
  416ae8:	(bad)  
  416ae9:	aad    0xe8
  416aeb:	add    ebp,DWORD PTR [edx+ebx*1]
  416aee:	push   0xffffff9b
  416af0:	mov    ebp,0x7b51bd97
  416af5:	mov    ebx,DWORD PTR [esi]
  416af7:	jg     0x416b47
  416af9:	and    esi,DWORD PTR [edx-0x38801926]
  416aff:	or     BYTE PTR [ecx+esi*8],bl
  416b02:	xor    esi,DWORD PTR [edi]
  416b04:	enter  0xf6c,0xa6
  416b08:	or     edx,DWORD PTR [ebx-0x39714de4]
  416b0e:	cmp    al,0xda
  416b10:	inc    eax
  416b11:	inc    ecx
  416b12:	xor    DWORD PTR [edx-0x6ab7b4d9],ecx
  416b18:	into   
  416b19:	cmp    cl,BYTE PTR ds:0x6e9aad52
  416b1f:	nop
  416b20:	add    BYTE PTR [ecx+ebp*8-0x74],dl
  416b24:	mov    dl,0xea
  416b26:	es xor al,0xf5
  416b29:	ins    DWORD PTR es:[edi],dx
  416b2a:	stos   DWORD PTR es:[edi],eax
  416b2b:	add    DWORD PTR [edx+esi*2-0x50],edi
  416b2f:	or     cl,dl
  416b31:	xor    ch,al
  416b33:	mov    dh,dh
  416b35:	jno    0x416b9e
  416b37:	mov    eax,ds:0xc7a185d9
  416b3c:	retf   0x7b33
  416b3f:	bswap  eax
  416b41:	aas    
  416b42:	scas   al,BYTE PTR es:[edi]
  416b43:	and    ch,BYTE PTR ds:0x506a94f4
  416b49:	dec    esp
  416b4a:	pop    eax
  416b4b:	pop    ecx
  416b4c:	and    eax,DWORD PTR [ebp+0x46]
  416b4f:	mov    edi,0x12c50ef7
  416b54:	es push eax
  416b56:	in     al,0xd9
  416b58:	mov    al,0x50
  416b5a:	imul   ecx,DWORD PTR [esi+0x5f],0xffffff94
  416b5e:	adc    cl,BYTE PTR [eax]
  416b60:	jb     0x416baf
  416b62:	xor    BYTE PTR [eax],dh
  416b64:	xchg   ebx,eax
  416b65:	pop    ebp
  416b66:	mov    ch,BYTE PTR [edi]
  416b68:	jo     0x416afe
  416b6a:	ins    DWORD PTR es:[edi],dx
  416b6b:	xor    eax,0xf5d2f103
  416b70:	sub    BYTE PTR [edx-0x41],cl
  416b73:	fistp  DWORD PTR [edi+esi*1+0x23]
  416b77:	loopne 0x416b48
  416b79:	add    eax,0xd17b22a8
  416b7e:	fsubp  st(4),st
  416b80:	mov    ds:0x64737f3f,eax
  416b85:	into   
  416b86:	lds    eax,FWORD PTR ss:[eax+0x28]
  416b8a:	mov    ds:0xf3cd6ed7,eax
  416b8f:	mov    eax,0x8a062860
  416b94:	hlt    
  416b95:	sub    bh,bh
  416b97:	and    DWORD PTR [eax],0x2c
  416b9a:	repz in eax,0xc6
  416b9d:	cmc    
  416b9e:	xor    eax,0x8d7de6f4
  416ba3:	ret    0x52c7
  416ba6:	sub    ah,dl
  416ba8:	inc    edx
  416ba9:	sbb    BYTE PTR [esi+0xf5a0404],dh
  416baf:	or     ebp,DWORD PTR [ebx+0xd862cbb]
  416bb5:	or     ch,BYTE PTR [edi-0x335c90c7]
  416bbb:	cdq    
  416bbc:	shl    cl,1
  416bbe:	push   ebp
  416bbf:	je     0x416c0c
  416bc1:	mov    ebp,0xc0b502a9
  416bc7:	out    0xb0,al
  416bc9:	mul    BYTE PTR [eax-0xcf1f06]
  416bcf:	loope  0x416be1
  416bd1:	xor    DWORD PTR [ecx],esi
  416bd3:	or     eax,0x4d2205d9
  416bd8:	fild   WORD PTR [ebp+0x58f0381d]
  416bde:	out    dx,eax
  416bdf:	idiv   eax
  416be1:	test   eax,0x6b1d67c
  416be6:	push   ecx
  416be7:	stc    
  416be8:	cmp    BYTE PTR [eax-0x3c],cl
  416beb:	jns    0x416be3
  416bed:	add    BYTE PTR ds:0x87efd314,ch
  416bf3:	dec    edx
  416bf4:	ds pop ecx
  416bf6:	add    ah,BYTE PTR [ecx+0x5a61c42a]
  416bfc:	mov    ecx,0x4c69ba85
  416c01:	xlat   BYTE PTR ds:[ebx]
  416c02:	in     al,0x74
  416c04:	imul   ebx,DWORD PTR [ebx],0xb89cf9
  416c0a:	imul   esi,DWORD PTR [edi-0xbaf7685],0x6724e6eb
  416c14:	adc    DWORD PTR fs:[esi+esi*4],ecx
  416c18:	cmp    al,0xa8
  416c1a:	xchg   BYTE PTR [ebx-0x6f],ch
  416c1d:	push   fs
  416c1f:	cdq    
  416c20:	jmp    0x416c5c
  416c22:	push   ds
  416c23:	jnp    0x416c5d
  416c25:	jb     0x416ba9
  416c27:	pop    ds
  416c28:	loopne 0x416bad
  416c2a:	adc    eax,0x3e4e4a69
  416c2f:	mov    esp,0x9e29551b
  416c34:	ins    DWORD PTR es:[edi],dx
  416c35:	or     eax,0xdafad3f1
  416c3a:	sub    ch,BYTE PTR [edx]
  416c3c:	pop    ebp
  416c3d:	mov    esp,0x4e1c3235
  416c42:	mov    WORD PTR [edi],es
  416c44:	popf   
  416c45:	ja     0x416bfb
  416c47:	jmp    0x2370:0x26de2c8
  416c4e:	mov    BYTE PTR [edx],dh
  416c50:	jo     0x416c35
  416c52:	push   eax
  416c53:	mov    al,ds:0x59697a74
  416c58:	xchg   ecx,eax
  416c59:	mov    ?,WORD PTR [ebp+esi*8+0x79]
  416c5d:	stc    
  416c5e:	jge    0x416cdb
  416c60:	inc    esi
  416c61:	pop    esp
  416c62:	rol    DWORD PTR [edi],1
  416c64:	ins    DWORD PTR es:[edi],dx
  416c65:	popf   
  416c66:	repz sbb DWORD PTR ds:0x7f6fc090,ebp
  416c6d:	jno    0x416c3d
  416c6f:	xor    ebx,DWORD PTR [ecx]
  416c71:	cmp    al,0x2a
  416c73:	sub    al,0x9f
  416c75:	mov    esi,0x77286338
  416c7a:	or     al,0xd0
  416c7c:	inc    ebp
  416c7d:	add    ah,dh
  416c7f:	jae    0x416c74
  416c81:	imul   ecx,DWORD PTR [eax-0x7a67ac3a],0xa8a21aba
  416c8b:	adc    al,0x30
  416c8d:	sub    DWORD PTR [esi+0x7af63b4b],ebp
  416c93:	sbb    al,0xc5
  416c95:	int3   
  416c96:	push   edi
  416c97:	mov    edi,DWORD PTR [ebp-0x3a]
  416c9a:	(bad)  
  416c9b:	xor    eax,0xbcc007c0
  416ca0:	rcr    dh,0x0
  416ca3:	mov    ebp,0xe51b95a0
  416ca8:	mov    ecx,0xe304a46
  416cad:	add    cl,BYTE PTR [esp+ebp*1]
  416cb0:	daa    
  416cb1:	repnz mov ecx,0xc9bacbc2
  416cb7:	pop    es
  416cb8:	xchg   edi,eax
  416cb9:	and    DWORD PTR [eax],eax
  416cbb:	jo     0x416d27
  416cbd:	mov    DWORD PTR [eax-0x77],edi
  416cc0:	push   0xca07f0fe
  416cc5:	stc    
  416cc6:	fwait
  416cc7:	ds repz pop es
  416cca:	mov    ds:0x927476b5,eax
  416ccf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416cd0:	ror    BYTE PTR [edx+ecx*8-0x73814e94],1
  416cd7:	dec    ecx
  416cd8:	or     al,0x1b
  416cda:	icebp  
  416cdb:	pop    es
  416cdc:	push   edi
  416cdd:	leave  
  416cde:	inc    edi
  416cdf:	mov    ah,BYTE PTR [edi+0x4c]
  416ce2:	retf   
  416ce3:	outs   dx,BYTE PTR ds:[esi]
  416ce4:	jno    0x416d23
  416ce6:	push   edi
  416ce7:	mov    esp,?
  416ce9:	jmp    0xa627953f
  416cee:	ins    BYTE PTR es:[edi],dx
  416cef:	fisttp QWORD PTR [ecx-0x3e]
  416cf2:	shl    DWORD PTR [esi],cl
  416cf4:	add    eax,0x2179de0e
  416cf9:	sbb    DWORD PTR [esi+0xee00b2d],edi
  416cff:	add    eax,0xd903feda
  416d04:	xor    esi,DWORD PTR [edx+esi*2+0x6e0d04b7]
  416d0b:	inc    esp
  416d0c:	retf   0xd8b7
  416d0f:	mov    bh,BYTE PTR [edi]
  416d11:	adc    bh,0xb9
  416d14:	sbb    ebp,DWORD PTR [edx]
  416d16:	jbe    0x416cd7
  416d18:	push   eax
  416d19:	(bad)  
  416d1b:	inc    ebx
  416d1c:	sub    bh,bl
  416d1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d1f:	cs arpl sp,si
  416d22:	mov    bl,0x88
  416d24:	jb     0x416cc7
  416d26:	dec    edx
  416d27:	les    ebx,FWORD PTR [edi+0x7d459cb6]
  416d2d:	add    ecx,DWORD PTR [edi+ebp*1]
  416d30:	loope  0x416d59
  416d32:	jb     0x416d2d
  416d34:	mov    ?,WORD PTR [eax+0x323a938f]
  416d3a:	shr    BYTE PTR [edx],0x5a
  416d3d:	out    dx,eax
  416d3e:	add    esp,edx
  416d40:	dec    esi
  416d41:	sub    DWORD PTR [eax+ebp*4+0x6e],edi
  416d45:	jg     0x416d1b
  416d47:	pop    ebx
  416d48:	xor    BYTE PTR [ebp+eiz*4+0x18b2d1f7],0xb0
  416d50:	add    eax,0x9b37ddeb
  416d55:	mov    ecx,0x28df55e
  416d5a:	jge    0x416d36
  416d5c:	adc    eax,0x39bf82a7
  416d61:	and    BYTE PTR ds:[ecx+0x76f68afc],bh
  416d68:	sub    al,0x2
  416d6a:	adc    ebp,DWORD PTR [ebp+0x5f]
  416d6d:	cwde   
  416d6e:	add    al,0x41
  416d70:	test   eax,0x99a5e632
  416d75:	add    ebx,edi
  416d77:	sbb    eax,DWORD PTR [eax+0x4f]
  416d7a:	or     eax,0xc3e37400
  416d7f:	xor    ebp,DWORD PTR [eax+edx*4]
  416d82:	pop    edi
  416d83:	cli    
  416d84:	mov    WORD PTR [ebp-0x2088b82d],ss
  416d8a:	pop    es
  416d8b:	sub    DWORD PTR [ecx-0x25fd1721],0xffffffc7
  416d92:	inc    esp
  416d93:	sti    
  416d94:	jg     0x416db1
  416d96:	shl    ecx,0xb3
  416d99:	in     eax,dx
  416d9a:	mov    gs,WORD PTR [esi-0x12]
  416d9d:	pusha  
  416d9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d9f:	scas   eax,DWORD PTR es:[edi]
  416da0:	retf   0x1260
  416da3:	adc    ebp,esi
  416da5:	(bad)  
  416da6:	pop    ebx
  416da7:	and    DWORD PTR [ecx-0x65bdf104],esi
  416dad:	mov    ch,BYTE PTR [esi-0x3c6ce26e]
  416db3:	dec    ebx
  416db5:	mov    eax,0xba311b16
  416dba:	(bad)  
  416dbb:	in     eax,dx
  416dbc:	mov    BYTE PTR [ebx+edi*8+0x31],ch
  416dc0:	mov    al,ds:0x4f1d60c7
  416dc5:	aam    0xc1
  416dc7:	sub    esi,DWORD PTR [eax-0x80]
  416dca:	neg    cl
  416dcc:	out    dx,al
  416dcd:	in     al,0x95
  416dcf:	ret    
  416dd0:	xor    esi,edi
  416dd2:	sbb    ebp,0xffffffc3
  416dd5:	adc    al,0xe7
  416dd7:	push   0xffffffda
  416dd9:	sbb    dh,dh
  416ddb:	dec    esi
  416ddc:	call   0x52b45408
  416de1:	inc    bl
  416de3:	mov    edi,0xe8a12c4c
  416de8:	test   eax,0xcaa1e938
  416ded:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416dee:	call   0x6809bcb3
  416df3:	and    al,0x2d
  416df5:	mov    gs,esp
  416df7:	mov    esi,0x32413931
  416dfc:	or     bh,BYTE PTR [ecx]
  416dfe:	pop    ebp
  416dff:	dec    ebx
  416e00:	test   eax,0xab87a528
  416e05:	stc    
  416e06:	add    dl,0x3d
  416e09:	xor    eax,0x2c86e223
  416e0e:	push   cs
  416e0f:	adc    eax,0x4f8c132d
  416e14:	mov    dh,0xc8
  416e16:	mov    edx,0xf977a5af
  416e1b:	push   eax
  416e1c:	out    0x96,al
  416e1e:	xchg   ecx,eax
  416e1f:	aaa    
  416e20:	inc    edi
  416e21:	outs   dx,DWORD PTR ds:[esi]
  416e22:	cdq    
  416e23:	mov    al,BYTE PTR [esi+edx*8+0xae44d21]
  416e2a:	or     ch,BYTE PTR [ecx+0x66b3e659]
  416e30:	out    0x79,al
  416e32:	test   eax,0x774c0cb1
  416e37:	xchg   ecx,eax
  416e38:	pop    es
  416e39:	fdivr  DWORD PTR [ecx]
  416e3b:	and    ch,dh
  416e3d:	xchg   DWORD PTR [ebx-0x40856585],edx
  416e43:	mov    al,0x2e
  416e45:	inc    ecx
  416e46:	je     0x416eac
  416e48:	hlt    
  416e49:	xor    DWORD PTR [ecx-0x4f],ebp
  416e4c:	bnd jae 0x416e23
  416e4f:	adc    al,BYTE PTR [ebx-0x63]
  416e52:	lahf   
  416e53:	(bad)  
  416e54:	cld    
  416e55:	dec    esp
  416e56:	lods   eax,DWORD PTR ds:[esi]
  416e57:	aad    0x75
  416e59:	ss dec ebp
  416e5b:	push   es
  416e5c:	sahf   
  416e5d:	mov    ds:0x5d4bae6d,al
  416e62:	push   0x28d57ff
  416e67:	dec    ebx
  416e68:	mov    ah,0xc1
  416e6a:	sbb    al,0x2
  416e6c:	pop    ecx
  416e6d:	and    ah,BYTE PTR [edx+ebp*2]
  416e70:	jnp    0x416ee1
  416e72:	or     DWORD PTR [esi-0x4bd8cbb7],esp
  416e78:	mov    edx,0x36017aa
  416e7d:	push   ss
  416e7e:	das    
  416e7f:	cmp    BYTE PTR ds:0xc71468e,bh
  416e85:	inc    ecx
  416e86:	clc    
  416e87:	mov    ds:0x5b37b7c9,al
  416e8c:	cmp    al,0x60
  416e8e:	call   0x7d6c8029
  416e93:	int3   
  416e94:	push   eax
  416e95:	rol    esi,1
  416e97:	repnz mov ebx,0x1734d195
  416e9d:	dec    ecx
  416e9e:	mov    esi,0x9c30d91e
  416ea3:	push   cs
  416ea4:	test   al,0x58
  416ea6:	sub    BYTE PTR [ecx],bl
  416ea8:	outs   dx,BYTE PTR ds:[esi]
  416ea9:	jnp    0x416f1a
  416eab:	mov    bl,0xff
  416ead:	xor    BYTE PTR [edx+ebx*4+0x6d604148],cl
  416eb4:	(bad)  
  416eb5:	xlat   BYTE PTR ds:[ebx]
  416eb6:	xchg   ebp,eax
  416eb7:	rcl    esp,cl
  416eb9:	pop    ss
  416eba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ebb:	popf   
  416ebc:	jne    0x416ead
  416ebe:	call   0x67555cae
  416ec3:	cwde   
  416ec4:	mov    al,0x12
  416ec6:	or     DWORD PTR [ebp+0x56],0xe80dc5a3
  416ecd:	or     al,BYTE PTR [ebp+0x9]
  416ed0:	jbe    0x416eca
  416ed2:	fs cdq 
  416ed4:	jbe    0x416e6c
  416ed6:	mov    esp,DWORD PTR [eax+0x9]
  416ed9:	mov    esi,0x7fc640d4
  416ede:	sbb    eax,0x44da1ebe
  416ee3:	mov    edx,0x86856326
  416ee8:	mov    bl,0xac
  416eea:	push   0xe80d2cc1
  416eef:	xchg   esp,eax
  416ef0:	pop    es
  416ef1:	inc    edi
  416ef2:	stos   BYTE PTR es:[edi],al
  416ef3:	push   ebp
  416ef4:	mov    esi,0xd0bbd352
  416ef9:	jno    0x416f34
  416efb:	sbb    BYTE PTR [edx-0x7c6a5ce5],cl
  416f01:	xchg   edi,eax
  416f02:	(bad)  
  416f03:	pop    edi
  416f04:	mov    al,0x18
  416f06:	das    
  416f07:	ja     0x416ed4
  416f09:	mov    ah,0x93
  416f0b:	fcomp  DWORD PTR gs:[eax]
  416f0e:	mov    ah,0x48
  416f10:	call   0x55fcdb77
  416f15:	adc    al,0x80
  416f17:	and    al,0xfc
  416f19:	cs sahf 
  416f1b:	adc    ah,bh
  416f1d:	js     0x416f04
  416f1f:	adc    al,0x92
  416f21:	dec    edx
  416f22:	adc    edi,DWORD PTR [esp+ebp*2]
  416f25:	mov    eax,ds:0x58c3ef66
  416f2a:	call   0xbfa57c1f
  416f2f:	scas   eax,DWORD PTR es:[edi]
  416f30:	mov    esi,0x63285b3a
  416f35:	cld    
  416f36:	test   BYTE PTR [esi-0x1a],cl
  416f39:	jmp    0xcc264f6b
  416f3e:	aas    
  416f3f:	mov    edi,0x3083fb65
  416f44:	jae    0x416f49
  416f46:	jae    0x416f48
  416f48:	sbb    DWORD PTR [eax],0x3b
  416f4b:	jecxz  0x416fc4
  416f4d:	cli    
  416f4e:	push   ebp
  416f4f:	pop    ss
  416f50:	pop    ds
  416f51:	jl     0x416f09
  416f53:	inc    esi
  416f54:	cld    
  416f55:	addr16 inc edi
  416f57:	seta   BYTE PTR [edi-0x1d]
  416f5b:	jbe    0x416f5c
  416f5d:	xchg   ecx,eax
  416f5e:	sbb    edi,0x76
  416f61:	aam    0x3c
  416f63:	ror    BYTE PTR [ebp+eax*4-0x23],1
  416f67:	lods   eax,DWORD PTR ds:[esi]
  416f68:	push   ebp
  416f69:	xchg   ebp,eax
  416f6a:	mov    edi,0x98876e1a
  416f6f:	neg    BYTE PTR [eiz*1+0x1ddd6f9e]
  416f76:	jle    0x416fa6
  416f78:	sbb    eax,0x320d751e
  416f7d:	dec    eax
  416f7e:	add    BYTE PTR [eax],al
  416f80:	add    BYTE PTR [eax],al
  416f82:	push   ebp
  416f83:	sub    al,0x5f
  416f85:	test   DWORD PTR [edi-0x9],edi
  416f88:	(bad)  
  416f8a:	adc    dh,BYTE PTR [ecx+0x3708f626]
  416f90:	loopne 0x416f24
  416f92:	cmp    eax,0xf40000ed
  416f97:	add    al,0x0
  416f99:	add    BYTE PTR [edi+0x19],al
  416f9c:	dec    DWORD PTR [eax-0x7a]
  416f9f:	jmp    0x56a1f501
  416fa4:	into   
  416fa5:	cmp    BYTE PTR [eax+ebx*2],cl
  416fa8:	loop   0x417029
  416faa:	iret   
  416fab:	shr    DWORD PTR [ecx+0x63],0xb3
  416faf:	fidiv  DWORD PTR [edi-0x70]
  416fb2:	mov    ?,WORD PTR [esi]
  416fb4:	and    eax,DWORD PTR [ebx+0x31c7b414]
  416fba:	push   ecx
  416fbb:	mov    ecx,0x6561ccf6
  416fc0:	enter  0xcd5c,0xc6
  416fc4:	mov    dh,0x42
  416fc6:	push   edx
  416fc7:	and    ebx,DWORD PTR [esi+0x48]
  416fca:	pusha  
  416fcb:	adc    bh,bh
  416fcd:	or     DWORD PTR [ebx],esp
  416fcf:	pop    es
  416fd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fd1:	sub    ch,BYTE PTR [esi+0x52c7a634]
  416fd7:	jl     0x416fdf
  416fd9:	sub    BYTE PTR [eax],ch
  416fdb:	(bad)  
  416fdc:	iret   
  416fdd:	fwait
  416fde:	gs popf 
  416fe0:	add    eax,0xd6e8ca16
  416fe5:	pushf  
  416fe6:	mov    bh,0xb1
  416fe8:	lods   al,BYTE PTR ds:[esi]
  416fe9:	cmp    DWORD PTR [ecx+0x1b],esi
  416fec:	adc    eax,DWORD PTR [edi+0x157700aa]
  416ff2:	mov    esi,0x59a3a7bc
  416ff7:	and    dh,BYTE PTR [ebx-0x5]
  416ffa:	mov    ch,0x75
  416ffc:	shl    BYTE PTR [eax],cl
  416ffe:	and    DWORD PTR [ebx+eiz*2-0x4ab5fe1e],0xffffffb0
  417006:	mov    eax,ds:0x919b0f95
  41700b:	cld    
  41700c:	data16 sub BYTE PTR [eax+0x7cae164e],0x64
  417014:	push   ebp
  417015:	xchg   esp,eax
  417016:	or     BYTE PTR [esi],ah
  417018:	xchg   esp,eax
  417019:	or     ecx,DWORD PTR [ebp-0x74837c20]
  41701f:	mov    bl,0xed
  417021:	xor    edi,DWORD PTR [eax-0x33146639]
  417027:	aas    
  417028:	adc    BYTE PTR [ecx+0x4d],ch
  41702b:	loop   0x41708c
  41702d:	fwait
  41702e:	rcl    DWORD PTR [esi-0x80],0xc5
  417032:	jo     0x4170a3
  417034:	(bad)  [ebx+0x31]
  417037:	push   edx
  417038:	mov    bl,0xf1
  41703a:	loope  0x417020
  41703c:	inc    esi
  41703d:	jp     0x417031
  41703f:	mov    fs,eax
  417041:	cmc    
  417042:	inc    esp
  417043:	dec    eax
  417044:	sbb    ah,BYTE PTR [edx+0x618641aa]
  41704a:	dec    ebx
  41704b:	inc    esp
  41704c:	fisttp WORD PTR [esi-0x1a]
  41704f:	pop    eax
  417050:	inc    edi
  417051:	rcl    ebx,1
  417053:	push   cs
  417054:	hlt    
  417055:	mov    edi,0x107f545
  41705a:	sub    BYTE PTR [esi+0x3a],bl
  41705d:	or     esi,DWORD PTR [ebx-0x73a15525]
  417063:	je     0x4170a2
  417065:	sbb    esp,DWORD PTR [ebx+0x437fbbcd]
  41706b:	lea    eax,[ebp+0x28b78ae]
  417071:	adc    al,0xe2
  417073:	jg     0x416ffd
  417075:	jl     0x41707d
  417077:	xor    cl,bl
  417079:	xor    DWORD PTR [esi-0x32],eax
  41707c:	int    0x97
  41707e:	jnp    0x4170e6
  417080:	out    0xbd,al
  417082:	es into 
  417084:	imul   esi,DWORD PTR [esi],0x5166a1f1
  41708a:	pop    eax
  41708b:	pop    edx
  41708c:	xor    eax,0x324dabfb
  417091:	xor    ch,al
  417093:	sub    bh,0x5
  417096:	outs   dx,DWORD PTR ds:[esi]
  417097:	out    0x95,eax
  417099:	ins    BYTE PTR es:[edi],dx
  41709a:	pop    eax
  41709b:	stos   DWORD PTR es:[edi],eax
  41709c:	ret    0xa06a
  41709f:	icebp  
  4170a0:	shl    BYTE PTR [eax],1
  4170a2:	and    al,0x61
  4170a4:	mov    ds,WORD PTR [ebp+0x13f2b9de]
  4170aa:	and    DWORD PTR [ecx+0x6bcd9dc3],ebp
  4170b0:	jg     0x4170b1
  4170b2:	jno    0x41712b
  4170b4:	add    al,0x15
  4170b6:	pop    eax
  4170b7:	jge    0x4170ed
  4170b9:	pop    es
  4170ba:	sbb    bl,ah
  4170bc:	stos   BYTE PTR es:[edi],al
  4170bd:	sbb    edx,ecx
  4170bf:	inc    ebx
  4170c0:	sbb    ch,BYTE PTR [edi+0x60]
  4170c3:	lods   eax,DWORD PTR ds:[esi]
  4170c4:	lock fisttp QWORD PTR [edi+0x79799400]
  4170cb:	retf   0x10b0
  4170ce:	sub    al,0x9e
  4170d0:	pop    esi
  4170d1:	fistp  DWORD PTR [eax+0x1c]
  4170d4:	push   edi
  4170d5:	cs call 0x71c1ec7f
  4170db:	mov    DWORD PTR [ecx],edx
  4170dd:	bound  edx,QWORD PTR [edi]
  4170df:	stos   BYTE PTR es:[edi],al
  4170e0:	push   ebx
  4170e1:	xchg   edi,eax
  4170e2:	jg     0x417127
  4170e4:	cwde   
  4170e5:	dec    esi
  4170e6:	cmp    eax,0xf5106ae1
  4170eb:	fimul  WORD PTR [esi+0x76]
  4170ee:	ds retf 
  4170f0:	sbb    eax,0xdb7da07c
  4170f5:	les    edx,FWORD PTR [ebx+0x3a]
  4170f8:	call   0x341f0e72
  4170fd:	pop    es
  4170fe:	(bad)  
  4170ff:	clc    
  417100:	sbb    edi,DWORD PTR [ebx+ecx*1]
  417103:	sub    eax,0x787f1107
  417108:	ficom  DWORD PTR [eax-0x1107e5a6]
  41710e:	mov    eax,0x7a4ec8a
  417113:	idiv   bl
  417115:	dec    esi
  417116:	mov    edx,0xfa31722e
  41711b:	ret    0xd3c3
  41711e:	int    0x6d
  417120:	popa   
  417121:	mov    cl,BYTE PTR [edx-0x55]
  417124:	out    dx,eax
  417125:	loopne 0x417172
  417127:	imul   edi,DWORD PTR [ecx],0x27f0c939
  41712d:	cld    
  41712e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41712f:	or     al,0x4c
  417131:	adc    dh,al
  417133:	pop    ebx
  417134:	pop    esp
  417135:	mov    ecx,0xb409fbcd
  41713a:	inc    edx
  41713b:	dec    ecx
  41713c:	icebp  
  41713d:	imul   esi,DWORD PTR [esp+0x31357892],0x67
  417145:	rol    BYTE PTR [edi+0x4f],cl
  417148:	(bad)  
  417149:	bound  ebp,QWORD PTR [edi+0x17]
  41714c:	and    al,dh
  41714e:	test   al,0xe0
  417150:	mov    bh,0x9c
  417152:	inc    edi
  417153:	sar    BYTE PTR [ebx],1
  417155:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417156:	push   ecx
  417157:	dec    DWORD PTR [ebp-0x668691d]
  41715d:	jae    0x4170f0
  41715f:	inc    edx
  417160:	xchg   ecx,eax
  417161:	adc    ah,BYTE PTR [edi+ecx*1-0x23]
  417165:	inc    esi
  417166:	stos   BYTE PTR es:[edi],al
  417167:	sbb    DWORD PTR [ebp+0x2f],esp
  41716a:	push   eax
  41716b:	test   eax,0x6b8a8ad6
  417170:	sbb    eax,0xd057d765
  417175:	inc    esi
  417176:	jecxz  0x417141
  417178:	sub    cl,BYTE PTR [eax]
  41717a:	pop    eax
  41717b:	popf   
  41717c:	daa    
  41717d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41717e:	pusha  
  41717f:	in     eax,dx
  417180:	in     al,dx
  417181:	fisubr DWORD PTR [ecx]
  417183:	das    
  417184:	shr    BYTE PTR [esi+0x4b],cl
  417187:	mov    ds:0x6d22754d,al
  41718c:	retf   
  41718d:	ret    
  41718e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41718f:	retf   0x4e6c
  417192:	enter  0xb626,0xe4
  417196:	and    ch,bh
  417198:	aad    0x78
  41719a:	xor    edx,DWORD PTR [ecx]
  41719c:	div    DWORD PTR ds:0xcd1df7bf
  4171a2:	jno    0x4171a3
  4171a4:	jne    0x4171ba
  4171a6:	fcomp  QWORD PTR [ebx]
  4171a8:	jg     0x417216
  4171aa:	sbb    BYTE PTR [esi],dh
  4171ac:	sahf   
  4171ad:	inc    ecx
  4171ae:	cli    
  4171af:	aaa    
  4171b0:	pop    ebx
  4171b1:	pop    ss
  4171b2:	outs   dx,BYTE PTR ds:[esi]
  4171b3:	jb     0x4171dd
  4171b5:	div    esi
  4171b7:	popf   
  4171b8:	mov    cl,0x2c
  4171ba:	in     eax,dx
  4171bb:	inc    eax
  4171bc:	cmp    DWORD PTR [edx+0x2e6c60ad],esi
  4171c2:	fwait
  4171c3:	inc    esi
  4171c4:	adc    BYTE PTR [edi+edi*1],cl
  4171c7:	mov    ebp,0x893c874f
  4171cc:	rcr    BYTE PTR [esi+0x18],1
  4171cf:	test   eax,0x906127f3
  4171d4:	dec    BYTE PTR ss:[edx+0x14]
  4171d8:	call   0xd4e92a96
  4171dd:	or     cl,BYTE PTR [ebp-0x7d5fafb2]
  4171e3:	dec    edx
  4171e4:	jg     0x417236
  4171e6:	int3   
  4171e7:	add    BYTE PTR [eax+0x78a25ff5],bl
  4171ed:	mov    edx,gs
  4171ef:	in     al,dx
  4171f0:	sbb    DWORD PTR [ebx+edi*4+0x16f58025],eax
  4171f7:	and    ah,BYTE PTR [eax]
  4171f9:	pop    ss
  4171fa:	adc    al,0x89
  4171fc:	jge    0x4171e3
  4171fe:	std    
  4171ff:	jecxz  0x4171ea
  417201:	xchg   BYTE PTR [eax+0x7abd6922],dl
  417207:	xor    edi,ecx
  417209:	data16 jno 0x41726a
  41720c:	fistp  QWORD PTR [edi]
  41720e:	dec    edx
  41720f:	jl     0x41726c
  417211:	(bad)  
  417212:	pop    DWORD PTR [ebp+0x2197031b]
  417218:	arpl   sp,dx
  41721a:	test   DWORD PTR [ebp-0xe],0xb7ae9ccf
  417221:	lock push es
  417223:	test   BYTE PTR [edi+0x58],bl
  417226:	sub    eax,0x6c982dbf
  41722b:	lods   al,BYTE PTR ds:[esi]
  41722c:	fmulp  st(0),st
  41722e:	jmp    edi
  417230:	and    al,0x1c
  417232:	das    
  417233:	jg     0x41725b
  417235:	fnstsw WORD PTR [edi-0x72]
  417238:	retf   
  417239:	stos   DWORD PTR es:[edi],eax
  41723a:	sub    eax,0x6d5f70fa
  41723f:	and    DWORD PTR [ecx],0xe23afe0f
  417245:	mov    ch,0x92
  417247:	sbb    al,0xac
  417249:	inc    edi
  41724a:	out    dx,al
  41724b:	mov    ah,0xeb
  41724d:	jbe    0x41726b
  41724f:	mov    cl,0x38
  417251:	repnz loop 0x417213
  417254:	xor    eax,0x274ffa82
  417259:	cmp    edx,edi
  41725b:	ss (bad) 
  41725d:	stos   DWORD PTR es:[edi],eax
  41725e:	xor    al,0x2e
  417260:	dec    esp
  417261:	dec    esi
  417262:	leave  
  417263:	push   ecx
  417264:	push   edx
  417265:	pop    ebp
  417266:	lock scas eax,DWORD PTR es:[edi]
  417268:	(bad)  
  417269:	xor    DWORD PTR [esi-0x604fce17],ebp
  41726f:	out    0x41,eax
  417271:	push   eax
  417272:	lock es ins DWORD PTR es:[edi],dx
  417275:	in     eax,dx
  417276:	sbb    ebp,ebx
  417278:	dec    ebx
  417279:	cwde   
  41727a:	mov    ch,0xa5
  41727c:	pop    esp
  41727d:	push   edx
  41727e:	mov    ecx,DWORD PTR ds:0x6c03352c
  417284:	add    bh,BYTE PTR [ecx+0x19a04d12]
  41728a:	sub    BYTE PTR [esi-0x63],ch
  41728d:	loop   0x41727f
  41728f:	cdq    
  417290:	jmp    0x45353e2
  417295:	shr    DWORD PTR [ebx-0x4],cl
  417298:	jle    0x417247
  41729a:	loopne 0x417285
  41729c:	rcr    dl,cl
  41729e:	jmp    0x1ee819a7
  4172a3:	xchg   ecx,eax
  4172a4:	xchg   ebp,eax
  4172a5:	mov    ebp,0xca4d3b6d
  4172aa:	and    ah,bl
  4172ac:	stos   DWORD PTR es:[edi],eax
  4172ad:	popf   
  4172ae:	mov    ecx,0xac8a4c77
  4172b3:	inc    eax
  4172b4:	mov    bh,0x18
  4172b6:	jg     0x41731b
  4172b8:	and    al,ah
  4172ba:	pop    ds
  4172bb:	aam    0x8f
  4172bd:	repnz jmp 0x8b70:0x83bf62c3
  4172c5:	out    0x8f,al
  4172c7:	jnp    0x417264
  4172c9:	pusha  
  4172ca:	xlat   BYTE PTR ds:[ebx]
  4172cb:	mov    edx,0xb95a9652
  4172d0:	mov    dh,0xa2
  4172d2:	xchg   DWORD PTR [edi],ebx
  4172d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172d5:	jmp    0x5f5f:0x25c1829f
  4172dc:	mov    eax,DWORD PTR [eax]
  4172de:	mov    WORD PTR [esi+0x2f],?
  4172e1:	cmp    ecx,0xddb5b8e2
  4172e7:	arpl   dx,ax
  4172e9:	jns    0x41727a
  4172eb:	push   esp
  4172ec:	dec    ecx
  4172ed:	fistp  DWORD PTR [ebp+0x53]
  4172f0:	les    ebp,FWORD PTR [eax+0xcce8df5]
  4172f6:	pop    es
  4172f7:	cli    
  4172f8:	test   ah,0xac
  4172fb:	int3   
  4172fc:	repz pop edi
  4172fe:	mov    ch,BYTE PTR [ecx+0x1b2242a7]
  417304:	sbb    al,0x3b
  417306:	lods   eax,DWORD PTR ds:[esi]
  417307:	fild   DWORD PTR [eax-0x44]
  41730a:	lahf   
  41730b:	inc    eax
  41730c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41730d:	scas   al,BYTE PTR es:[edi]
  41730e:	(bad)  [ecx-0x31708f85]
  417314:	pop    ss
  417315:	jbe    0x417381
  417317:	jnp    0x41729c
  417319:	ficomp WORD PTR [edi+0x5b]
  41731c:	out    dx,al
  41731d:	sub    al,0x1b
  41731f:	mov    WORD PTR [ecx],ds
  417321:	add    al,0x22
  417323:	int    0x47
  417325:	sbb    dl,0x33
  417328:	xchg   edx,eax
  417329:	xchg   esp,eax
  41732a:	adc    BYTE PTR [ebx],cl
  41732c:	int3   
  41732d:	jmp    0x2de787b3
  417332:	jmp    0x46e3cd3f
  417337:	repnz rol ah,cl
  41733a:	test   DWORD PTR [edx+edx*1],ecx
  41733d:	inc    esp
  41733e:	js     0x417301
  417340:	in     eax,0xe6
  417342:	mov    dh,0x74
  417344:	xchg   ecx,eax
  417345:	daa    
  417346:	jg     0x41737f
  417348:	xor    al,0xd2
  41734a:	jne    0x41735d
  41734c:	inc    edx
  41734d:	mov    eax,0x286ff121
  417352:	fcmovu st,st(3)
  417354:	test   BYTE PTR [edi],dh
  417356:	push   cs
  417357:	push   esp
  417358:	dec    ebp
  417359:	sbb    eax,esi
  41735b:	or     BYTE PTR [ecx+0xf78eb41],0x1a
  417362:	std    
  417363:	inc    eax
  417364:	pop    eax
  417365:	inc    ebp
  417366:	(bad)  
  417368:	adc    ebx,DWORD PTR [edx+ebp*8-0x618035d5]
  41736f:	arpl   WORD PTR [edi],di
  417371:	sub    DWORD PTR [ebx+0x70],0x73
  417375:	iret   
  417376:	ja     0x417394
  417378:	cmp    DWORD PTR [ebx-0x559bc47d],ebx
  41737e:	div    bl
  417380:	bound  esp,QWORD PTR [eax+0x5ab1d4d5]
  417386:	adc    bl,BYTE PTR [edx]
  417388:	mov    al,BYTE PTR [ebx]
  41738a:	add    DWORD PTR [edi+eax*4+0x2156fc77],ebx
  417391:	retf   
  417392:	retf   0x9d86
  417395:	rol    edi,1
  417397:	mov    ds:0x2cde80f0,eax
  41739c:	mov    ah,BYTE PTR [edi-0xf]
  41739f:	xor    ebp,DWORD PTR [eax+0x2b33f6f7]
  4173a5:	and    eax,0x36fd8d2b
  4173aa:	mov    ch,0xeb
  4173ac:	and    DWORD PTR [edx+0x2d3dcf77],ecx
  4173b2:	inc    edx
  4173b3:	mov    dl,0x89
  4173b5:	repnz stos BYTE PTR es:[edi],al
  4173b7:	aas    
  4173b8:	fs arpl ax,cx
  4173bb:	or     BYTE PTR [edi+0x47a6dba4],0x67
  4173c2:	ins    DWORD PTR es:[edi],dx
  4173c3:	fld    TBYTE PTR [edi+0x6b9c30]
  4173c9:	and    esi,edx
  4173cb:	pop    eax
  4173cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173cd:	sahf   
  4173ce:	or     BYTE PTR [esi-0x7a5a5372],al
  4173d4:	arpl   WORD PTR [ebp+0x2b],dx
  4173d7:	mov    bl,0x2
  4173d9:	push   ss
  4173da:	lahf   
  4173db:	push   edx
  4173dc:	xlat   BYTE PTR ds:[ebx]
  4173dd:	or     DWORD PTR [ecx-0x73c55c3a],edx
  4173e3:	add    BYTE PTR [ebx+0x8fd456a],ch
  4173e9:	mov    ecx,DWORD PTR [esi-0x26]
  4173ec:	cmp    al,BYTE PTR [edi+ecx*1+0x6a]
  4173f0:	(bad)  
  4173f1:	pop    ebx
  4173f2:	sbb    bl,BYTE PTR ds:0xbccc213
  4173f8:	xchg   ebp,eax
  4173f9:	cmp    BYTE PTR [esi+eiz*8-0x71],dl
  4173fd:	jmp    0x3ccd617d
  417402:	mov    ebx,0xc70e3c41
  417407:	fstp   DWORD PTR [esi]
  417409:	cmp    DWORD PTR [edi],eax
  41740b:	pop    ds
  41740c:	xor    ebp,DWORD PTR [eax+0x4f03af52]
  417412:	xor    DWORD PTR [ecx+0x73a8b4ff],esi
  417418:	xor    dh,0x1c
  41741b:	xchg   esp,eax
  41741c:	add    al,0x4f
  41741e:	sub    BYTE PTR [edx+0x1e],ch
  417421:	fsubp  st(6),st
  417423:	retf   0x6748
  417426:	sub    esp,esi
  417428:	mov    ds:0xaddde600,eax
  41742d:	jne    0x417491
  41742f:	lock into 
  417431:	test   DWORD PTR [esi-0x3d],0xdcad4336
  417438:	stos   DWORD PTR es:[edi],eax
  417439:	mov    bh,0xc4
  41743b:	xchg   esi,eax
  41743c:	dec    eax
  41743d:	call   0x168f:0x5c93663
  417444:	jecxz  0x4173f6
  417446:	cmp    BYTE PTR [eax+edx*4-0x1],al
  41744a:	sub    al,0x9f
  41744c:	neg    eax
  41744e:	aaa    
  41744f:	fcom   QWORD PTR [edi-0x41]
  417452:	leave  
  417453:	mov    eax,0xa3284024
  417458:	xchg   edi,eax
  417459:	shr    edi,cl
  41745b:	or     DWORD PTR [ebp-0x5e],0x6da8da9f
  417462:	xchg   ecx,eax
  417463:	add    DWORD PTR [esi],edx
  417465:	xchg   edi,eax
  417466:	push   edx
  417467:	mov    bl,0x77
  417469:	mov    ch,0x71
  41746b:	jmp    0x676b:0xa29c6a1c
  417472:	sub    DWORD PTR [edx-0x57],ebx
  417475:	jne    0x41744d
  417477:	mov    dh,BYTE PTR [ecx]
  417479:	xchg   BYTE PTR [edi+ebx*8+0x29],ah
  41747d:	arpl   WORD PTR [ecx],ax
  41747f:	mov    ebp,DWORD PTR ds:0x387a0949
  417485:	cli    
  417486:	stos   BYTE PTR es:[edi],al
  417487:	mov    dl,0xb5
  417489:	enter  0x51dd,0xb6
  41748d:	add    BYTE PTR [eax],0x0
  417490:	add    BYTE PTR [eax],al
  417492:	fisttp WORD PTR [ebp-0x66]
  417495:	mov    DWORD PTR [edx+0x305fdfdf],ebx
  41749b:	adc    al,0x61
  41749d:	retf   0x9141
  4174a0:	pop    es
  4174a1:	(bad)  
  4174a2:	xor    edx,esi
  4174a4:	add    BYTE PTR [eax],al
  4174a6:	hlt    
  4174a7:	add    al,0x0
  4174a9:	add    BYTE PTR [edi+eiz*1-0x2e],dh
  4174ad:	mov    esp,0xbfdf99b8
  4174b2:	imul   ebp,DWORD PTR [ecx],0xffffffb9
  4174b5:	and    eax,DWORD PTR [ebx+0x63db11]
  4174bb:	not    BYTE PTR [eax+0x54]
  4174be:	mov    ecx,0xff2dade5
  4174c3:	push   ebx
  4174c4:	jmp    0x3eb7a5bc
  4174c9:	rcr    BYTE PTR [esi+0x792434d7],0xab
  4174d0:	div    DWORD PTR [edx+0x7e5170dd]
  4174d6:	mov    ch,0xb6
  4174d8:	push   cs
  4174d9:	dec    ebp
  4174da:	out    0x7b,eax
  4174dc:	mov    esi,0xcc466ef9
  4174e1:	mov    bh,0x64
  4174e3:	cs es in eax,dx
  4174e6:	imul   ecx,DWORD PTR [eax+0x3c17857c],0x7b
  4174ed:	sbb    eax,0x21afdaa6
  4174f2:	inc    esi
  4174f3:	imul   di,WORD PTR [ebx],0xc200
  4174f8:	enter  0x9fd,0xc6
  4174fc:	in     al,0xb
  4174fe:	sbb    ecx,ebx
  417500:	and    eax,0xf4042cee
  417505:	pop    ecx
  417506:	mov    ecx,0xc9e7084f
  41750b:	lods   al,BYTE PTR ds:[esi]
  41750c:	test   DWORD PTR [ebx-0x61e8b1ce],ecx
  417512:	sar    ecx,1
  417514:	pop    ecx
  417515:	push   cs
  417516:	mov    edi,ecx
  417518:	mul    cl
  41751a:	push   ss
  41751b:	dec    edx
  41751c:	frstor [eax-0x1a]
  41751f:	(bad)  
  417520:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417521:	lds    ebp,FWORD PTR [edi]
  417523:	stos   DWORD PTR es:[edi],eax
  417524:	fidivr WORD PTR [edi-0x4852a0b4]
  41752a:	lea    ebx,[ebx]
  41752c:	or     eax,0x3a918b89
  417531:	jge    0x417572
  417533:	mov    ds:0x1e6824e6,eax
  417538:	push   edx
  417539:	dec    DWORD PTR [eax]
  41753b:	xchg   DWORD PTR [edi-0x4241bd75],ebp
  417541:	mov    edi,0x261fcd42
  417546:	add    DWORD PTR [ebp-0x78],0xffffff82
  41754a:	jl     0x41759e
  41754c:	add    esi,esi
  41754e:	pop    edx
  41754f:	push   edx
  417551:	scas   eax,DWORD PTR es:[edi]
  417552:	jp     0x4175bd
  417554:	(bad)  
  417555:	leave  
  417556:	loope  0x41751a
  417558:	out    dx,al
  417559:	stc    
  41755a:	test   DWORD PTR [eax],ecx
  41755c:	push   ss
  41755d:	aas    
  41755e:	pop    edx
  41755f:	shl    DWORD PTR [ebx+0x6a],1
  417562:	fwait
  417563:	or     eax,0xa6bfe6aa
  417568:	mov    ebp,0xe7a1e472
  41756d:	mov    ds:0xd6cd9ed3,al
  417572:	push   ss
  417573:	les    esp,FWORD PTR [ebp-0xbe85044]
  417579:	xchg   edi,eax
  41757a:	mul    DWORD PTR [eax+0x4e9de6ca]
  417580:	inc    ebp
  417581:	jbe    0x41751f
  417583:	pop    es
  417584:	adc    al,0x7c
  417586:	mov    edi,0xe02da5eb
  41758b:	(bad)  
  41758c:	loopne 0x4175bb
  41758e:	push   ds
  41758f:	inc    eax
  417590:	pop    ebx
  417591:	sub    edx,DWORD PTR [edx-0x7c9cab0b]
  417597:	ja     0x41758e
  417599:	and    BYTE PTR [ecx-0x4af8d213],bl
  41759f:	out    dx,al
  4175a0:	mov    al,0x83
  4175a2:	inc    ebp
  4175a3:	into   
  4175a4:	push   edx
  4175a5:	lds    esp,FWORD PTR [ecx+0x6d]
  4175a8:	xchg   ecx,eax
  4175a9:	aam    0x9b
  4175ab:	mov    ecx,0xd107cea1
  4175b0:	and    al,0x4b
  4175b2:	lock stos BYTE PTR es:[edi],al
  4175b4:	scas   eax,DWORD PTR es:[edi]
  4175b5:	dec    edx
  4175b6:	arpl   WORD PTR [edx+0x52],sp
  4175b9:	retf   0x4c8
  4175bc:	sub    BYTE PTR [eax],dl
  4175be:	add    eax,0xab626684
  4175c3:	addr16 inc esi
  4175c5:	mov    ch,0x8e
  4175c7:	idiv   DWORD PTR [ebp-0x7a]
  4175ca:	push   esp
  4175cb:	(bad)  
  4175cd:	jno    0x417551
  4175cf:	cmp    dl,dh
  4175d1:	push   es
  4175d2:	int    0xb6
  4175d4:	adc    DWORD PTR [bx-0x55],ebx
  4175d8:	retf   0x35e9
  4175db:	popf   
  4175dc:	fdivrp st(6),st
  4175de:	out    dx,eax
  4175df:	mov    dl,0x8f
  4175e1:	cwde   
  4175e2:	scas   al,BYTE PTR es:[edi]
  4175e3:	das    
  4175e4:	jno    0x41761f
  4175e6:	xchg   ebx,eax
  4175e7:	repz fistp DWORD PTR [edx]
  4175ea:	jb     0x417650
  4175ec:	in     al,dx
  4175ed:	mov    al,ds:0x6d60ec4
  4175f2:	jl     0x417616
  4175f4:	daa    
  4175f5:	xor    DWORD PTR [ebp+0x45108bd5],esi
  4175fb:	jns    0x41760f
  4175fd:	dec    ebx
  4175fe:	or     bl,bh
  417600:	or     al,0x9c
  417602:	into   
  417603:	test   edi,esp
  417605:	cmp    eax,DWORD PTR [esi]
  417607:	push   esi
  417608:	retf   0xe991
  41760b:	iret   
  41760c:	jle    0x41759f
  41760e:	xor    al,0x4e
  417610:	add    al,0x8b
  417612:	mov    ecx,0x1feef918
  417617:	pop    ss
  417618:	into   
  417619:	xor    DWORD PTR [ecx-0x5642be29],ebp
  41761f:	out    dx,al
  417620:	and    al,0xbc
  417622:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417623:	fisttp WORD PTR [edi]
  417625:	shl    ah,1
  417627:	mov    ds:0x7c3b54c4,al
  41762c:	xchg   edx,eax
  41762d:	adc    ch,bl
  41762f:	aaa    
  417630:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417631:	dec    ebp
  417632:	call   0xb20c:0x4c98ab95
  417639:	into   
  41763a:	fnsave [ebp+0x2]
  41763d:	jle    0x417610
  41763f:	jecxz  0x417699
  417641:	dec    eax
  417642:	outs   dx,DWORD PTR ds:[esi]
  417643:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417644:	push   0xffffff8e
  417646:	stos   BYTE PTR es:[edi],al
  417647:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417648:	fwait
  417649:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41764a:	js     0x41768c
  41764c:	jl     0x4176a2
  41764e:	repnz retf 
  417650:	jle    0x4175f9
  417652:	pop    ds
  417653:	inc    esp
  417654:	mov    ah,BYTE PTR [edi+0x5d73fdcc]
  41765a:	out    0x2d,al
  41765c:	add    eax,0x48bc7034
  417661:	mov    dh,0x7e
  417663:	sub    eax,0xeac6bcc6
  417668:	fild   WORD PTR [ebx-0x3e]
  41766b:	pop    ebp
  41766c:	fisttp DWORD PTR [edx+0x2d216cdc]
  417672:	ret    
  417673:	mov    al,0xb8
  417675:	mov    eax,ds:0x39fb95aa
  41767a:	cmp    BYTE PTR [eax],cl
  41767c:	mov    eax,0xe7bb8277
  417681:	dec    ecx
  417682:	aas    
  417683:	inc    esi
  417684:	or     eax,0xa2eea014
  417689:	ins    BYTE PTR es:[edi],dx
  41768a:	dec    edi
  41768b:	adc    al,0xdc
  41768d:	aaa    
  41768e:	push   ebx
  41768f:	and    eax,0x55249722
  417694:	xchg   edi,eax
  417695:	or     BYTE PTR [ebp+0x3],dl
  417698:	adc    al,0x9f
  41769a:	inc    esp
  41769b:	(bad)  
  41769c:	(bad)  
  41769d:	in     eax,0x3a
  41769f:	loope  0x41768f
  4176a1:	adc    ebp,edi
  4176a3:	lahf   
  4176a4:	inc    eax
  4176a5:	mov    dl,0x85
  4176a7:	and    al,0x92
  4176a9:	retf   
  4176aa:	push   edx
  4176ab:	fldcw  WORD PTR [esp+edi*1]
  4176ae:	mov    dl,0xbc
  4176b1:	xchg   esi,eax
  4176b2:	ds mov ebx,0xc0bc878c
  4176b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176b9:	cld    
  4176ba:	arpl   WORD PTR [ebp+0x6f],ax
  4176bd:	cmp    al,0x6
  4176bf:	xchg   ecx,eax
  4176c0:	in     al,dx
  4176c1:	lods   eax,DWORD PTR ds:[esi]
  4176c2:	adc    eax,DWORD PTR [eax-0x2d]
  4176c5:	lahf   
  4176c6:	in     eax,dx
  4176c7:	xor    DWORD PTR [esi],esi
  4176c9:	sbb    al,0x8d
  4176cb:	outs   dx,BYTE PTR ds:[esi]
  4176cc:	adc    DWORD PTR [ebp-0x64],esp
  4176cf:	lds    ebx,FWORD PTR [edi+0x5d]
  4176d2:	stc    
  4176d3:	jbe    0x4176bb
  4176d5:	cli    
  4176d6:	inc    ebp
  4176d7:	add    eax,0x5fffe779
  4176dc:	bound  ecx,QWORD PTR [edi+0x70]
  4176df:	into   
  4176e0:	mov    ds:0x5669e36e,al
  4176e5:	xor    cl,ah
  4176e7:	or     DWORD PTR [esi+0x375af8d6],esi
  4176ed:	sbb    al,0xf7
  4176ef:	mov    bh,0xa8
  4176f1:	mov    BYTE PTR [ecx],dl
  4176f3:	xchg   esp,eax
  4176f4:	mov    ch,0xa7
  4176f6:	cwde   
  4176f7:	cmp    al,0x9
  4176f9:	jge    0x4176e3
  4176fb:	lock pop eax
  4176fd:	push   ebx
  4176fe:	test   DWORD PTR [ebx+0x3],eax
  417701:	loope  0x4176a6
  417703:	cli    
  417704:	sti    
  417705:	ffree  st(4)
  417707:	(bad)  
  417708:	jl     0x4176fd
  41770a:	sub    ch,BYTE PTR [edi]
  41770c:	mov    edi,0xa9e73252
  417711:	xor    bl,0x4a
  417714:	les    ebx,FWORD PTR [ebx+0x79]
  417717:	jb     0x417711
  417719:	mov    esp,0x891e217d
  41771e:	push   0x66
  417720:	dec    edx
  417721:	sub    DWORD PTR [ecx-0x41],eax
  417724:	mov    esp,0xbab05f5
  417729:	pop    edx
  41772a:	std    
  41772b:	fwait
  41772c:	lahf   
  41772d:	sub    BYTE PTR [edi-0x7],al
  417730:	pop    ecx
  417731:	outs   dx,BYTE PTR ds:[esi]
  417732:	mov    DWORD PTR ds:0x9570e21c,esp
  417738:	xchg   edi,eax
  417739:	mov    ebp,0xdaf66f1d
  41773e:	jno    0x4176fd
  417740:	loopne 0x41771d
  417742:	repz loopne 0x417789
  417745:	fisubr DWORD PTR [ecx+eiz*2+0x4f]
  417749:	ficom  DWORD PTR [ecx+0x56b1f389]
  41774f:	add    BYTE PTR [edx-0x1b],cl
  417752:	jmp    0xc116:0x63932b32
  417759:	and    bl,ch
  41775b:	hlt    
  41775c:	icebp  
  41775d:	shr    DWORD PTR [ebp+0x44],1
  417760:	xchg   esi,eax
  417761:	dec    ebp
  417762:	mov    edx,fs
  417764:	fdiv   QWORD PTR [eax]
  417766:	mov    ds:0xa2f6dc9c,eax
  41776b:	fdivr  st,st(5)
  41776d:	fist   DWORD PTR [edi+0x7beb3e57]
  417773:	sahf   
  417774:	pop    edx
  417775:	(bad)  
  417776:	mov    eax,0x6c5e21a6
  41777b:	xchg   ebp,eax
  41777c:	adc    eax,0x3ef2f1b5
  417781:	mov    ah,0x61
  417783:	sub    bl,bh
  417785:	xchg   edi,eax
  417786:	xor    al,0xf4
  417788:	sub    dl,BYTE PTR cs:[ecx]
  41778b:	mov    esp,0x3a18f9a7
  417790:	loopne 0x41776b
  417792:	or     esi,ebp
  417794:	pop    ds
  417795:	or     ecx,eax
  417797:	in     al,0xd4
  417799:	stc    
  41779a:	ds cs dec edi
  41779d:	adc    ecx,DWORD PTR gs:[ecx*1+0x1593fbdb]
  4177a5:	push   cs
  4177a6:	rcr    BYTE PTR [edi-0x6b8e55df],cl
  4177ac:	xor    BYTE PTR [ebx-0xe],bh
  4177af:	loopne 0x4177c5
  4177b1:	loopne 0x417811
  4177b3:	retf   
  4177b4:	lock aam 0x92
  4177b7:	fs dec esp
  4177b9:	lds    esp,FWORD PTR [ebx-0x3f]
  4177bc:	cmp    al,0xfd
  4177be:	ins    BYTE PTR es:[edi],dx
  4177bf:	rcr    DWORD PTR [edx+0x4c],cl
  4177c2:	loop   0x4177ea
  4177c4:	es call 0x62d80da4
  4177ca:	mul    BYTE PTR [esi+0x78d101d8]
  4177d0:	or     eax,0x8ad8c25
  4177d5:	std    
  4177d6:	mov    esi,0xd3e69a7
  4177db:	mov    esi,ebx
  4177dd:	scas   eax,DWORD PTR es:[edi]
  4177de:	or     bl,bh
  4177e0:	xchg   BYTE PTR [esi],bh
  4177e2:	cld    
  4177e3:	adc    ecx,0x70
  4177e6:	cmp    DWORD PTR [eax],esp
  4177e8:	xchg   ecx,eax
  4177e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177ea:	cmp    al,0xe2
  4177ec:	mov    ch,0x42
  4177ee:	ins    BYTE PTR es:[edi],dx
  4177ef:	outs   dx,BYTE PTR ds:[esi]
  4177f0:	xchg   BYTE PTR ds:0x29b62b9d,dh
  4177f6:	adc    DWORD PTR [edi+0x6b],0xe
  4177fa:	mov    ss,WORD PTR [ecx]
  4177fc:	mov    ecx,0x3ae0f1c7
  417801:	mov    dh,0xc8
  417803:	data16 aas 
  417805:	dec    edi
  417806:	aam    0xff
  417808:	fsub   DWORD PTR [esi-0x41991e02]
  41780e:	dec    ebp
  41780f:	stos   BYTE PTR es:[edi],al
  417810:	cmp    al,0xbd
  417812:	cmc    
  417813:	jae    0x417868
  417815:	sahf   
  417816:	jmp    0x417844
  417818:	mov    bh,0x3c
  41781a:	mov    ch,0x0
  41781c:	outs   dx,DWORD PTR ds:[esi]
  41781d:	xchg   ebp,eax
  41781e:	push   esi
  41781f:	or     eax,DWORD PTR [ecx+0x69ecd559]
  417825:	mov    ebp,DWORD PTR [edi]
  417827:	call   0x7dc4f988
  41782c:	and    ecx,edx
  41782e:	mov    WORD PTR [ebx-0x5d5c475d],fs
  417834:	in     al,0xab
  417836:	fwait
  417837:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417838:	leave  
  417839:	xchg   ebx,eax
  41783a:	std    
  41783b:	sti    
  41783c:	cmp    ah,dh
  41783e:	retf   
  41783f:	outs   dx,BYTE PTR ds:[esi]
  417840:	cld    
  417841:	pop    es
  417842:	pop    ebp
  417843:	mov    edi,DWORD PTR [ebp+0x1bd7053f]
  417849:	push   cs
  41784a:	iret   
  41784b:	cmc    
  41784c:	(bad)  
  41784d:	fcomp  st(1)
  41784f:	adc    eax,DWORD PTR [ecx]
  417851:	push   ebx
  417852:	rcr    DWORD PTR [ebp+0x7e50e90b],0x6a
  417859:	xor    DWORD PTR [ebp-0x3b],ecx
  41785c:	pusha  
  41785d:	push   ds
  41785e:	sub    DWORD PTR [ebx+esi*8-0x3f0e5d40],edx
  417865:	cwde   
  417866:	jne    0x417801
  417868:	mov    cl,0xe9
  41786a:	xchg   edx,eax
  41786b:	mov    WORD PTR [edx],?
  41786d:	sbb    al,0xea
  41786f:	pushf  
  417870:	rcl    ah,1
  417872:	in     al,0xea
  417874:	into   
  417875:	xor    ch,dl
  417877:	add    DWORD PTR [ecx+0x3964333a],edi
  41787d:	jmp    0x2c5d:0x995aef6a
  417884:	or     al,0xf6
  417886:	push   esi
  417887:	out    0x10,al
  417889:	dec    ebx
  41788a:	mov    ecx,ds
  41788c:	shr    DWORD PTR [ecx+0x2f20b991],1
  417892:	jne    0x41784d
  417894:	adc    esi,DWORD PTR [esp+eiz*8+0x5d]
  417898:	inc    eax
  417899:	scas   eax,DWORD PTR es:[edi]
  41789a:	test   BYTE PTR [esi+eax*8+0x5709b3dc],ah
  4178a1:	mov    DWORD PTR [ecx-0x4c],esp
  4178a4:	out    dx,eax
  4178a5:	in     al,0x93
  4178a7:	pushf  
  4178a8:	stos   BYTE PTR es:[edi],al
  4178a9:	xchg   BYTE PTR [ecx+0x71620d64],dh
  4178af:	mov    eax,0x65123bb8
  4178b4:	in     al,0xf1
  4178b6:	jp     0x41790e
  4178b8:	adc    bl,BYTE PTR [esi-0x59]
  4178bb:	pop    ebp
  4178bc:	retf   0x2e1a
  4178bf:	pop    ebx
  4178c0:	out    dx,eax
  4178c1:	ret    
  4178c2:	mov    bh,0xce
  4178c4:	sbb    edx,esi
  4178c6:	dec    esi
  4178c7:	stos   BYTE PTR es:[edi],al
  4178c8:	repnz add al,BYTE PTR [ecx-0x55fc8b10]
  4178cf:	xchg   BYTE PTR [eax],bl
  4178d1:	inc    esp
  4178d2:	stos   DWORD PTR es:[edi],eax
  4178d3:	mul    BYTE PTR [edx]
  4178d5:	aam    0x1c
  4178d7:	xor    DWORD PTR [ebp-0x6c1cc66c],0x58f25d73
  4178e1:	jne    0x41788b
  4178e3:	xchg   ebx,eax
  4178e4:	or     al,0x18
  4178e6:	and    BYTE PTR [ebp-0x62],ch
  4178e9:	jae    0x4178e3
  4178eb:	pop    ds
  4178ec:	out    dx,eax
  4178ed:	in     eax,0x16
  4178ef:	xchg   ecx,ebx
  4178f1:	mov    cl,0x73
  4178f3:	mov    ds:0xd4a12928,eax
  4178f8:	jbe    0x41796b
  4178fa:	std    
  4178fb:	ss jg  0x41790d
  4178fe:	addr16 pop edx
  417900:	jle    0x417932
  417902:	mov    al,0xc2
  417904:	scas   eax,DWORD PTR es:[edi]
  417905:	add    eax,ebx
  417907:	sub    al,0x97
  417909:	loopne 0x4178e6
  41790b:	push   esp
  41790c:	retf   
  41790d:	and    eax,0x114f23cf
  417912:	hlt    
  417913:	sub    ecx,esi
  417915:	inc    edx
  417916:	rcr    DWORD PTR [ebx],0x23
  417919:	fsub   st,st(1)
  41791b:	in     eax,0x6a
  41791d:	sbb    ecx,DWORD PTR [edi+0x11ee7f82]
  417923:	cmc    
  417924:	xchg   BYTE PTR [edx-0x23],bh
  417927:	dec    ebp
  417928:	mov    DWORD PTR [ebx-0x33],esi
  41792b:	mov    esi,0x7959ee4c
  417930:	popf   
  417931:	jbe    0x4178b4
  417933:	aam    0x90
  417935:	gs xchg edi,eax
  417937:	push   edx
  417938:	xchg   esi,eax
  417939:	lea    esp,[ecx-0x57]
  41793c:	lods   eax,DWORD PTR ds:[esi]
  41793d:	ret    0x594f
  417940:	outs   dx,BYTE PTR ds:[esi]
  417941:	(bad)  
  417942:	imul   ebx,DWORD PTR [esi-0x1a],0x16
  417946:	out    0x10,eax
  417948:	lods   eax,DWORD PTR ds:[esi]
  417949:	jmp    0x6f847927
  41794e:	pop    es
  41794f:	popa   
  417950:	cpuid  
  417952:	mov    dh,0xd
  417954:	(bad)  
  417955:	and    ch,BYTE PTR [esi]
  417957:	mov    edx,DWORD PTR [ebx-0x6f0c1e21]
  41795d:	mov    esp,0x8ccec50
  417962:	xchg   eax,edx
  417964:	dec    edi
  417965:	mov    ebp,0x188955f7
  41796a:	sub    BYTE PTR [ebp-0x68],bl
  41796d:	mov    WORD PTR ds:0x61648944,?
  417973:	(bad)  
  417974:	stos   DWORD PTR es:[edi],eax
  417975:	and    edi,edx
  417977:	or     ch,dl
  417979:	adc    DWORD PTR [esi],edx
  41797b:	call   0x4d80:0x2b54c574
  417982:	call   0xe741:0x9899b350
  417989:	jo     0x4179fb
  41798b:	jmp    0x417970
  41798d:	xlat   BYTE PTR ds:[ebx]
  41798e:	jo     0x417932
  417990:	cmp    al,0xb2
  417992:	xchg   ecx,eax
  417993:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417994:	jo     0x417a11
  417996:	sbb    al,0x18
  417998:	js     0x4179ca
  41799a:	sahf   
  41799b:	jmp    0x421852
  4179a0:	add    BYTE PTR [eax],al
  4179a2:	es mov ah,0x71
  4179a5:	jno    0x41799a
  4179a7:	cmc    
  4179a8:	div    DWORD PTR es:[edx+0x8]
  4179ac:	mov    eax,ds:0xf1a10575
  4179b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179b2:	and    eax,0xf40000f7
  4179b7:	add    al,0x0
  4179b9:	add    BYTE PTR [eax],bl
  4179bb:	into   
  4179bc:	arpl   WORD PTR [ebx+esi*4-0x7c],bx
  4179c0:	in     eax,dx
  4179c1:	xor    ecx,DWORD PTR [ebx]
  4179c3:	jmp    0x417a22
  4179c5:	sub    eax,0x8d2fc8f2
  4179ca:	sbb    edx,edi
  4179cc:	lahf   
  4179cd:	into   
  4179ce:	call   FWORD PTR [bx+si+0x6658]
  4179d3:	fs cld 
  4179d5:	and    BYTE PTR [eax+0x5577c597],cl
  4179db:	loop   0x41798c
  4179dd:	sub    eax,0xf96cad31
  4179e2:	jp     0x4179e7
  4179e4:	xchg   edx,eax
  4179e5:	inc    edi
  4179e6:	jns    0x417a18
  4179e8:	mov    bl,0x4a
  4179ea:	shr    DWORD PTR [ecx-0x36],0x75
  4179ee:	xchg   ebx,eax
  4179ef:	mov    ch,ch
  4179f1:	stos   BYTE PTR es:[edi],al
  4179f2:	mov    dh,0x97
  4179f4:	jnp    0x4179c6
  4179f6:	imul   ecx,DWORD PTR [esi-0x37],0xffffff9a
  4179fa:	cwde   
  4179fb:	push   eax
  4179fc:	iret   
  4179fd:	push   0x48
  4179ff:	std    
  417a00:	mov    ds:0xb8eb0d6d,al
  417a05:	out    dx,al
  417a06:	push   es
  417a07:	jle    0x4179e0
  417a09:	div    DWORD PTR [ecx+0x6ca2f523]
  417a0f:	xor    dh,BYTE PTR [eax-0x270f6bb3]
  417a15:	retf   0x1a6e
  417a18:	in     al,0x37
  417a1a:	leave  
  417a1b:	fwait
  417a1c:	mov    eax,0xe918a21
  417a21:	les    ebx,FWORD PTR [edx+0x64]
  417a24:	cdq    
  417a25:	push   cs
  417a26:	fwait
  417a27:	jl     0x417a49
  417a29:	test   DWORD PTR ds:0x38b08602,0x73a79bb1
  417a33:	out    dx,al
  417a34:	outs   dx,DWORD PTR ds:[esi]
  417a35:	mov    ebp,0xe198b8bc
  417a3a:	inc    esi
  417a3b:	cld    
  417a3c:	jmp    0x417a28
  417a3e:	enter  0x1fd6,0x78
  417a42:	or     DWORD PTR [esi-0x7aaf1ba7],esi
  417a48:	sahf   
  417a49:	mov    BYTE PTR [ebp+0x12fc7f1f],ah
  417a4f:	push   ebp
  417a50:	rcr    DWORD PTR [ecx],0xd7
  417a53:	sbb    al,0xd3
  417a55:	mov    ah,0xbd
  417a57:	lods   eax,DWORD PTR ds:[esi]
  417a58:	mov    eax,0x4fc218e9
  417a5d:	mov    bl,0xc4
  417a5f:	push   cs
  417a60:	jg     0x417a50
  417a62:	fwait
  417a63:	mov    eax,ds:0xcabd5d1b
  417a68:	xor    DWORD PTR [ebp+0xe69cad],edx
  417a6e:	imul   esi,DWORD PTR [ebx],0xffffffef
  417a71:	mov    eax,0x75ec3170
  417a76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a77:	xchg   esp,eax
  417a78:	sar    DWORD PTR [edi-0x49ce3889],0x36
  417a7f:	rol    DWORD PTR [edi-0x5f],cl
  417a82:	mov    ebp,0x94aa2ac3
  417a87:	aad    0xef
  417a89:	add    dl,BYTE PTR [edx]
  417a8b:	jmp    0x417a31
  417a8d:	ins    BYTE PTR es:[edi],dx
  417a8e:	xchg   ecx,eax
  417a8f:	iret   
  417a90:	mov    al,ds:0xfe1fb3b
  417a95:	push   esp
  417a96:	mov    bh,0x42
  417a98:	xor    BYTE PTR [ebp-0x1d706332],bh
  417a9e:	sub    DWORD PTR [edx-0xdfa1484],edx
  417aa4:	cmp    DWORD PTR es:[esp+eax*8],edi
  417aa8:	int3   
  417aa9:	fild   WORD PTR [eax-0x329f14d7]
  417aaf:	xchg   ebx,eax
  417ab0:	cmp    eax,0x2b3e9c29
  417ab5:	aaa    
  417ab6:	push   0x59
  417ab8:	cmp    BYTE PTR [edx],cl
  417aba:	repz inc edx
  417abc:	es push 0x5b4ff75f
  417ac2:	imul   edi,DWORD PTR [edi],0x75
  417ac5:	inc    esp
  417ac6:	push   cs
  417ac7:	mov    eax,0xcd9b2a62
  417acc:	mov    al,ds:0x735859ea
  417ad1:	dec    ecx
  417ad2:	out    dx,eax
  417ad3:	sbb    esi,ebx
  417ad5:	xlat   BYTE PTR ds:[ebx]
  417ad6:	pop    ebx
  417ad7:	stc    
  417ad8:	sub    DWORD PTR [edx],ebp
  417ada:	xlat   BYTE PTR ds:[ebx]
  417adb:	les    edi,FWORD PTR [ebx]
  417add:	ret    
  417ade:	add    al,0x74
  417ae0:	in     eax,0x1b
  417ae2:	test   BYTE PTR [ebx+eiz*4-0x36],dl
  417ae6:	xchg   DWORD PTR [ecx],ebx
  417ae8:	pusha  
  417ae9:	and    eax,DWORD PTR cs:[ecx]
  417aec:	pop    ds
  417aed:	push   0x9578a10d
  417af2:	sbb    ah,BYTE PTR [esi-0x4d]
  417af5:	pop    eax
  417af6:	jnp    0x417ab1
  417af8:	push   ds
  417af9:	test   DWORD PTR ds:0xd0762864,0x2422ff6c
  417b03:	push   0xffffffcd
  417b05:	iret   
  417b06:	js     0x417abf
  417b08:	sbb    eax,0x2c8ea1b6
  417b0d:	pop    ds
  417b0e:	push   ebx
  417b0f:	lods   al,BYTE PTR ds:[esi]
  417b10:	(bad)  
  417b11:	and    BYTE PTR [ebp-0x18],dh
  417b14:	sbb    bl,BYTE PTR [esi+0x183540c4]
  417b1a:	xchg   ecx,eax
  417b1b:	shl    BYTE PTR [edx-0x1188c171],0xe1
  417b22:	loop   0x417b95
  417b24:	inc    esi
  417b25:	std    
  417b26:	dec    eax
  417b27:	add    al,0x5c
  417b29:	rsqrtps xmm4,xmm7
  417b2c:	cmc    
  417b2d:	xor    al,0xea
  417b2f:	inc    ebp
  417b30:	mov    eax,ds:0x23a5f3d8
  417b35:	inc    ebx
  417b36:	data16 cli 
  417b38:	push   cs
  417b39:	(bad)  
  417b3a:	jns    0x417b63
  417b3c:	mov    BYTE PTR [edx-0x5fc87b85],bl
  417b42:	sbb    DWORD PTR [ebx],eax
  417b44:	mov    WORD PTR [ebx-0x27],fs
  417b47:	pop    ebp
  417b48:	xchg   edi,eax
  417b49:	adc    eax,0x551a544b
  417b4e:	in     eax,dx
  417b4f:	xchg   ebx,eax
  417b50:	mov    edx,0x326a0bb0
  417b55:	cmp    BYTE PTR [ebx+ebp*1-0x6b],bl
  417b59:	jae    0x417b6f
  417b5b:	rcr    BYTE PTR [edx-0xf3b3f05],0xe0
  417b62:	push   es
  417b63:	stos   DWORD PTR es:[edi],eax
  417b64:	or     eax,0x545cd755
  417b69:	in     al,0xa9
  417b6b:	arpl   WORD PTR [ebx-0x69c5e35b],dx
  417b71:	pop    esp
  417b72:	imul   edi,esi,0xffffffef
  417b75:	push   edx
  417b76:	je     0x417b7d
  417b78:	inc    esi
  417b79:	sub    eax,0x54b912a7
  417b7e:	add    eax,DWORD PTR [ebx-0x6491093b]
  417b84:	xor    ebx,ebp
  417b86:	and    BYTE PTR [eax],bh
  417b88:	cmp    al,dl
  417b8a:	ins    DWORD PTR es:[edi],dx
  417b8b:	push   edx
  417b8c:	adc    BYTE PTR [eax-0x611efb8],al
  417b92:	jo     0x417bb1
  417b94:	aam    0x8a
  417b96:	dec    eax
  417b97:	or     al,0xaf
  417b99:	mov    edi,0x8a56c80
  417b9e:	inc    esi
  417b9f:	and    bh,dh
  417ba1:	push   esp
  417ba2:	cmp    ebp,DWORD PTR [ecx+edx*2+0x7f]
  417ba6:	pop    eax
  417ba7:	dec    ebx
  417ba8:	hlt    
  417ba9:	mov    ah,0xd2
  417bab:	stos   BYTE PTR es:[edi],al
  417bac:	pop    ebp
  417bad:	scas   al,BYTE PTR es:[edi]
  417bae:	add    ebp,DWORD PTR [ebp-0x22a4582b]
  417bb4:	lods   al,BYTE PTR ds:[esi]
  417bb5:	xchg   ebx,eax
  417bb6:	jmp    0x417c25
  417bb8:	inc    esp
  417bb9:	jbe    0x417bc5
  417bbb:	call   0x71abbe93
  417bc0:	xor    BYTE PTR [edi],bl
  417bc2:	shl    BYTE PTR fs:[ecx+ecx*4+0x50],1
  417bc7:	jle    0x417b85
  417bc9:	push   ecx
  417bca:	xor    eax,DWORD PTR [eax]
  417bcc:	mov    cl,0x63
  417bce:	jmp    0xe7a1:0x9adef502
  417bd5:	clc    
  417bd6:	add    DWORD PTR [ecx],0xffffffcc
  417bd9:	jl     0x417b60
  417bdb:	jp     0x417be5
  417bdd:	mov    edx,0xade19102
  417be2:	test   eax,0x6aadd815
  417be7:	push   0x78c57f9e
  417bec:	add    BYTE PTR [ebx+0x36],0xb9
  417bf0:	mov    ebp,0xc564c667
  417bf5:	push   ecx
  417bf6:	sti    
  417bf7:	jg     0x417bf4
  417bf9:	ins    DWORD PTR es:[edi],dx
  417bfa:	mov    edi,cs
  417bfc:	mov    ds:0x3a8c476e,al
  417c01:	in     al,dx
  417c02:	mov    ah,0x89
  417c04:	test   BYTE PTR [edx],cl
  417c06:	(bad)  
  417c07:	rol    esp,1
  417c09:	jmp    0x417ba1
  417c0b:	js     0x417c4b
  417c0d:	sbb    ebx,DWORD PTR [edi-0xde26250]
  417c13:	inc    eax
  417c14:	jb     0x417c23
  417c16:	sbb    DWORD PTR [ebp+ebp*8-0x5c422229],ecx
  417c1d:	clc    
  417c1e:	mov    bl,0xfc
  417c20:	sbb    BYTE PTR [ebx+ebp*8],0xe
  417c24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c25:	dec    esp
  417c26:	mov    edi,0x45cbc415
  417c2b:	call   0xf210:0xa53eff53
  417c32:	cli    
  417c33:	daa    
  417c34:	jb     0x417c2f
  417c36:	adc    ebx,0xffffffee
  417c39:	mov    bl,0x4a
  417c3b:	add    al,ah
  417c3d:	cmp    al,0x3f
  417c3f:	mov    bh,al
  417c41:	push   0x98f360c4
  417c46:	xor    DWORD PTR [esi+0x51c3bd3],esi
  417c4c:	retf   0x1d5e
  417c4f:	jp     0x417c35
  417c51:	jp     0x417c2c
  417c53:	or     eax,0xe0dd1ab
  417c58:	cli    
  417c59:	cli    
  417c5a:	cmp    BYTE PTR [ebp+0xa081bc],cl
  417c60:	xchg   ebp,eax
  417c61:	add    al,0xe0
  417c63:	out    dx,al
  417c64:	xor    BYTE PTR [edi+0x6a],bh
  417c67:	js     0x417c2b
  417c69:	dec    eax
  417c6a:	adc    esi,DWORD PTR [eax+ebx*2+0x4f22949]
  417c71:	es ds jbe 0x417c65
  417c75:	sbb    al,0xf4
  417c77:	sbb    eax,0x38c89ba9
  417c7c:	and    eax,0xf1ec6dae
  417c81:	sub    bl,BYTE PTR [ebx+edi*2+0xf8b5f5e]
  417c88:	outs   dx,BYTE PTR ds:[esi]
  417c89:	popf   
  417c8a:	jmp    0xdefc:0x53f32bfc
  417c91:	and    al,0xb9
  417c93:	xlat   BYTE PTR ds:[ebx]
  417c94:	in     eax,0xa3
  417c96:	lods   eax,DWORD PTR ds:[esi]
  417c97:	nop
  417c98:	dec    eax
  417c99:	jge    0x417ca0
  417c9b:	xchg   ecx,eax
  417c9d:	dec    ebx
  417c9e:	mov    ah,0x76
  417ca0:	or     al,0x4b
  417ca2:	in     eax,0x1d
  417ca4:	pop    ebx
  417ca5:	add    esi,edx
  417ca7:	andnps xmm0,XMMWORD PTR [eax+edi*8+0x79e2ebe2]
  417caf:	push   0x34dab315
  417cb4:	loop   0x417c85
  417cb6:	sar    BYTE PTR ds:0x5540e143,0x5c
  417cbd:	imul   ebx,DWORD PTR [edi],0x9f05cefe
  417cc3:	pop    esi
  417cc4:	cmc    
  417cc5:	(bad)  
  417cc6:	lds    ebp,FWORD PTR [esi+0x34436c58]
  417ccc:	loope  0x417d20
  417cce:	(bad)
  417cd1:	iret   
  417cd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cd3:	xor    ecx,ebx
  417cd5:	xchg   BYTE PTR [edx+ebp*2+0x60],ah
  417cd9:	in     al,0xe3
  417cdb:	and    edi,DWORD PTR [esi+eiz*1+0x75d33d01]
  417ce2:	sbb    esi,eax
  417ce4:	mov    ch,0xcc
  417ce6:	xchg   DWORD PTR [eax+0x2ca09299],edi
  417cec:	jns    0x417cb2
  417cee:	ins    BYTE PTR es:[edi],dx
  417cef:	aaa    
  417cf0:	pop    edi
  417cf1:	loop   0x417d18
  417cf3:	dec    DWORD PTR [edx]
  417cf5:	mov    edx,0x9367dbcb
  417cfa:	add    al,0xde
  417cfc:	push   ebx
  417cfd:	ret    0x16ce
  417d00:	xchg   ebx,eax
  417d01:	push   es
  417d02:	les    esi,FWORD PTR [ecx-0x24d97e47]
  417d08:	out    0xb6,al
  417d0a:	adc    esi,DWORD PTR [edi-0x76]
  417d0d:	mov    edx,0x88cbdd1d
  417d12:	inc    ecx
  417d13:	mov    ebp,0xf7209fb9
  417d18:	out    dx,al
  417d19:	ss inc eax
  417d1b:	lods   al,BYTE PTR fs:[esi]
  417d1d:	cmp    DWORD PTR [ecx],ebx
  417d1f:	repz and eax,0xb272ae6c
  417d25:	jmp    0xa515:0x9e32b182
  417d2c:	fadd   QWORD PTR [ebx-0x7b7cc9f]
  417d32:	xor    DWORD PTR [edx+0x2b],esp
  417d35:	pushf  
  417d36:	mov    dh,0xea
  417d38:	mov    al,0xb9
  417d3a:	dec    esp
  417d3b:	fcmovbe st,st(5)
  417d3d:	add    BYTE PTR [eax-0x25],bh
  417d40:	pop    ss
  417d41:	xchg   BYTE PTR [ebx+0x25abc09b],dl
  417d47:	pop    ebx
  417d48:	les    edx,FWORD PTR [edx+0x5a09b722]
  417d4e:	sbb    edx,esp
  417d50:	mov    dh,0xb5
  417d52:	in     al,0x36
  417d54:	mov    ecx,0x9d3bac6a
  417d59:	(bad)  [ecx+0x55]
  417d5c:	sub    al,0x9f
  417d5e:	pop    ss
  417d5f:	sub    bl,bl
  417d61:	xchg   edx,eax
  417d62:	imul   ecx,DWORD PTR [ebp-0x59],0xffffff8a
  417d66:	cdq    
  417d67:	mov    ecx,0x1e01a185
  417d6c:	popf   
  417d6d:	leave  
  417d6e:	out    0xc5,eax
  417d70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d71:	mov    edx,0x165f76f6
  417d76:	iret   
  417d77:	dec    ebx
  417d78:	push   WORD PTR ds:[edi]
  417d7c:	or     DWORD PTR [edi-0x55e6b495],0xffffffcf
  417d83:	sbb    al,0x56
  417d85:	xchg   edx,eax
  417d86:	scas   eax,DWORD PTR es:[edi]
  417d87:	pop    esi
  417d88:	adc    al,0xf4
  417d8a:	pop    edi
  417d8b:	shl    DWORD PTR [ebp-0x296c25bd],0x5
  417d92:	push   eax
  417d93:	imul   ebx,esi,0xfffffffb
  417d96:	mov    BYTE PTR [ecx+0x7f],ah
  417d99:	jmp    0x96c6:0x12ab7d59
  417da0:	mov    bh,0xfe
  417da2:	div    BYTE PTR [ecx-0x1e3c4d]
  417da8:	pop    esp
  417da9:	sar    BYTE PTR [eax-0x22],cl
  417dac:	jno    0x417d4f
  417dae:	jb     0x417d48
  417db0:	xor    esi,DWORD PTR [ecx-0x1b]
  417db3:	aad    0xcf
  417db5:	lahf   
  417db6:	push   cs
  417db7:	iret   
  417db8:	(bad)  
  417db9:	mov    eax,ds:0xda852cd8
  417dbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417dbf:	sti    
  417dc0:	(bad)  
  417dc1:	ret    0xa084
  417dc4:	inc    ecx
  417dc5:	cmp    al,0x67
  417dc7:	mov    cl,0x3
  417dc9:	sahf   
  417dca:	cmp    BYTE PTR [ebx+0x455cea7c],dh
  417dd0:	fld    TBYTE PTR [edi-0xb]
  417dd3:	mov    dh,ah
  417dd5:	scas   al,BYTE PTR es:[edi]
  417dd6:	sub    al,BYTE PTR [ecx+0x26cec8e3]
  417ddc:	es mov esi,0x4e14f55e
  417de2:	scas   eax,DWORD PTR es:[edi]
  417de3:	pushw  ss
  417de5:	sub    eax,DWORD PTR [esi-0x336f1c61]
  417deb:	out    0xe8,eax
  417ded:	jnp    0x417e17
  417def:	jl     0x417e65
  417df1:	and    eax,0x8ebd5265
  417df6:	rol    DWORD PTR [ebp+0x38c0b942],cl
  417dfc:	dec    esp
  417dfd:	cmp    ebx,DWORD PTR [eax]
  417dff:	das    
  417e00:	sub    edi,ebx
  417e02:	xchg   dh,dl
  417e04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e05:	push   ebp
  417e06:	add    al,0x91
  417e08:	out    dx,al
  417e09:	retf   0xe5d7
  417e0c:	sbb    eax,0xf34279bc
  417e11:	jo     0x417dc2
  417e13:	jo     0x417dcc
  417e15:	jno    0x417e4d
  417e17:	pop    es
  417e18:	mov    ch,0xfb
  417e1a:	xor    esi,DWORD PTR [edx+0x48012f83]
  417e20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e21:	in     eax,dx
  417e22:	cmp    eax,0xcaff1db9
  417e27:	adc    bh,BYTE PTR [ebp+0xe]
  417e2a:	aaa    
  417e2b:	(bad)  
  417e2c:	sti    
  417e2d:	addr16 test al,0xdc
  417e30:	mov    bl,0x1d
  417e32:	(bad)  
  417e33:	mov    ecx,0x6a75ae4a
  417e38:	aaa    
  417e39:	or     edx,0xffffff97
  417e3c:	jae    0x417dd9
  417e3e:	and    BYTE PTR [edx],dl
  417e40:	dec    ebx
  417e41:	ja     0x417df2
  417e43:	add    edi,DWORD PTR [eax-0x6d]
  417e46:	imul   ebx,DWORD PTR [ebx+ebx*8-0x251e1ca6],0x6ab35540
  417e51:	cmp    ebx,DWORD PTR [ebp-0x3c67162d]
  417e57:	push   ebx
  417e58:	int    0x4e
  417e5a:	call   0x11e797fe
  417e5f:	or     eax,0xaf123b51
  417e64:	and    edx,eax
  417e66:	xor    DWORD PTR [ebx+0x54],0xffffffbd
  417e6a:	shl    dl,cl
  417e6c:	mov    dl,0x7e
  417e6e:	stc    
  417e6f:	sub    ebp,ebp
  417e71:	arpl   WORD PTR [eax+eiz*4-0x35d5b932],si
  417e78:	push   0x91b32b41
  417e7d:	xor    eax,DWORD PTR [ebp-0x21]
  417e80:	cli    
  417e81:	addr16 cs lahf 
  417e84:	mov    eax,0xbbef64d4
  417e89:	sub    ebx,ebx
  417e8b:	pop    ebp
  417e8c:	pop    DWORD PTR [ecx+0x26]
  417e8f:	cmp    esp,DWORD PTR [ecx+0x73628c40]
  417e95:	and    DWORD PTR [esi+0x433410cd],edx
  417e9b:	mov    al,0x8d
  417e9d:	clc    
  417e9e:	loope  0x417e74
  417ea0:	sbb    DWORD PTR [ecx],edi
  417ea2:	std    
  417ea3:	pop    ecx
  417ea4:	sbb    esi,esi
  417ea6:	xchg   ecx,eax
  417ea7:	and    DWORD PTR [edx],0x1b
  417eaa:	pusha  
  417eab:	add    BYTE PTR [eax+ebx*4],al
  417eae:	add    BYTE PTR [eax],al
  417eb0:	add    BYTE PTR [eax],al
  417eb2:	ret    0x939e
  417eb5:	inc    edi
  417eb6:	fisttp WORD PTR [edi-0x2a]
  417eb9:	lahf   
  417eba:	int    0x45
  417ebc:	push   eax
  417ebd:	maxps  xmm1,XMMWORD PTR [ebp-0x3e60bbc]
  417ec4:	add    BYTE PTR [eax],al
  417ec6:	hlt    
  417ec7:	add    al,0x0
  417ec9:	add    ah,dl
  417ecb:	xchg   edi,eax
  417ecc:	xchg   edi,eax
  417ecd:	mov    esi,0xaa05c063
  417ed2:	rcl    cl,0xc6
  417ed5:	adc    bl,BYTE PTR [esi+eiz*4-0x13892c09]
  417edc:	pavgw  mm4,QWORD PTR [eax+0x3434f564]
  417ee3:	int3   
  417ee4:	ror    BYTE PTR [ecx+esi*8-0x1c],0xec
  417ee9:	mov    ebp,0xfd612c4c
  417eee:	cwde   
  417eef:	sbb    DWORD PTR [ecx+0x2bccdbcb],0xffffffd4
  417ef6:	jne    0x417f77
  417ef8:	mov    al,0x1c
  417efa:	test   BYTE PTR ds:0x9ec5,0xb9
  417f00:	push   esi
  417f01:	mov    ah,0x0
  417f03:	push   edx
  417f04:	xchg   esp,eax
  417f05:	jne    0x306ad4a3
  417f0b:	stos   BYTE PTR es:[edi],al
  417f0c:	sbb    dh,ch
  417f0e:	loop   0x417f83
  417f10:	stc    
  417f11:	xor    BYTE PTR [eiz*4+0x5c1ee9aa],ch
  417f18:	idiv   ebp
  417f1a:	test   DWORD PTR [ebp-0x66],0xb5210eff
  417f21:	popf   
  417f22:	xor    DWORD PTR [ebx+ecx*8],ecx
  417f25:	mov    ebx,0x4bce4538
  417f2a:	jge    0x417f5e
  417f2c:	fdiv   QWORD PTR [esp+ebp*1-0x34ec3566]
  417f33:	lea    ebp,[esp+ecx*1-0x33]
  417f37:	and    DWORD PTR [edx-0x6223af66],ebp
  417f3d:	or     DWORD PTR ss:[edi-0x4ee13adb],esp
  417f44:	push   0xd621ff1b
  417f49:	mov    ds:0xe265c732,al
  417f4e:	xor    eax,0x9168d7a9
  417f53:	xchg   BYTE PTR [esi+0x689e0086],bl
  417f59:	repz test al,0x9
  417f5c:	cli    
  417f5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f5e:	xlat   BYTE PTR ds:[ebx]
  417f5f:	int3   
  417f60:	pop    esi
  417f61:	test   DWORD PTR [edx],edx
  417f63:	jnp    0x417f8e
  417f65:	jnp    0x417eef
  417f67:	or     BYTE PTR [ebp+0x34],0xf1
  417f6b:	add    al,ah
  417f6d:	push   ds
  417f6e:	outs   dx,BYTE PTR ds:[esi]
  417f6f:	in     eax,0x8c
  417f71:	mov    ch,0x44
  417f73:	inc    eax
  417f74:	or     BYTE PTR [edi],cl
  417f76:	sbb    al,BYTE PTR [edx+0x40]
  417f79:	push   ebx
  417f7a:	fdivr  QWORD PTR [edi]
  417f7c:	aad    0xc
  417f7e:	out    0x6d,al
  417f80:	xor    edx,DWORD PTR [ebx+0x49bf7875]
  417f86:	enter  0x7b50,0xd0
  417f8a:	add    BYTE PTR [eax+0x507ab384],dh
  417f90:	es nop
  417f92:	cwde   
  417f93:	mov    ch,0xa7
  417f95:	mov    ah,0xec
  417f97:	mov    dh,0x56
  417f99:	mov    ss,WORD PTR [ebp+0x16beed8c]
  417f9f:	sbb    eax,0xb60bfe62
  417fa4:	ret    
  417fa5:	pusha  
  417fa6:	fdiv   DWORD PTR ss:[edi+0x60]
  417faa:	in     eax,0x73
  417fac:	ror    BYTE PTR [ebx+0x39],0x1b
  417fb0:	mov    ecx,0x36b592
  417fb5:	jle    0x417fd1
  417fb7:	and    ch,BYTE PTR [ecx-0x49]
  417fba:	test   eax,0xcf8ee98f
  417fbf:	jp     0x417fd1
  417fc1:	adc    ch,BYTE PTR [ecx]
  417fc3:	jo     0x418007
  417fc5:	outs   dx,BYTE PTR ds:[esi]
  417fc6:	mov    cl,0x3d
  417fc8:	push   cs
  417fc9:	sbb    ebp,DWORD PTR [edi-0x56dedd9a]
  417fcf:	in     al,dx
  417fd0:	pop    esi
  417fd1:	push   0x50c3956c
  417fd6:	stos   BYTE PTR es:[edi],al
  417fd7:	test   BYTE PTR [edx-0x6a68e9c9],0xb1
  417fde:	jo     0x418042
  417fe0:	inc    ecx
  417fe1:	das    
  417fe2:	cmp    esp,ebp
  417fe4:	cmp    eax,0x19890df7
  417fe9:	jle    0x417f9a
  417feb:	dec    edi
  417fec:	cli    
  417fed:	sub    eax,0xef8702c1
  417ff2:	mov    DWORD PTR [esi-0x6fb58f7d],edx
  417ff8:	jb     0x41803d
  417ffa:	(bad)  
  417ffc:	sbb    al,0xe6
  417ffe:	push   ecx
  417fff:	addr16 mov ah,0xe1
  418002:	pop    ss
  418003:	inc    eax
  418004:	lods   eax,DWORD PTR ds:[esi]
  418005:	mov    ebx,0x218a884b
  41800a:	fistp  DWORD PTR ds:0x41db71d4
  418010:	mov    ecx,0x415323cf
  418015:	rcl    DWORD PTR [eax],1
  418017:	and    esp,DWORD PTR [esi-0x415ff5c6]
  41801d:	das    
  41801e:	mov    dh,BYTE PTR [edx]
  418020:	into   
  418021:	push   0x67046643
  418026:	ja     0x417fb3
  418028:	xchg   esi,eax
  418029:	std    
  41802a:	stos   DWORD PTR es:[edi],eax
  41802b:	dec    edi
  41802c:	pop    esp
  41802d:	mov    BYTE PTR [esi],dh
  41802f:	inc    esi
  418030:	xchg   BYTE PTR [ebx+0xa528fa5],ah
  418036:	popf   
  418037:	je     0x41806c
  418039:	mov    WORD PTR [ebx+0x24f16f8],gs
  41803f:	xchg   DWORD PTR [eax-0x63],eax
  418042:	outs   dx,BYTE PTR ds:[esi]
  418043:	xlat   BYTE PTR ds:[ebx]
  418044:	fbld   TBYTE PTR [edi]
  418046:	or     esp,DWORD PTR [eax-0x7c0addf8]
  41804c:	psubd  mm3,mm5
  41804f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418050:	fistp  WORD PTR [eax-0x65]
  418053:	jmp    0x88d7a1f2
  418058:	test   al,0x8f
  41805a:	sub    DWORD PTR [ebx+edx*2],ebp
  41805d:	or     al,0x4e
  41805f:	pop    ebx
  418060:	(bad)  
  418061:	std    
  418062:	pop    ss
  418063:	ja     0x417ff3
  418065:	add    DWORD PTR [edx+0x33],edi
  418068:	(bad)  [ecx+0x44c022f8]
  41806e:	jp     0x41806f
  418070:	jmp    0x7622:0xd3bac545
  418077:	jg     0x4180d1
  418079:	repnz pop ebp
  41807b:	mov    ds:0x7422381f,eax
  418080:	sgdtd  [edi+0x67]
  418084:	aaa    
  418085:	int3   
  418086:	inc    ebp
  418087:	cmovb  ebx,DWORD PTR [ecx-0x6a]
  41808b:	sbb    cl,BYTE PTR [ebp+0x38]
  41808e:	and    eax,0xee54181e
  418093:	cmp    eax,0x5dc8325f
  418098:	sub    eax,0x6b5ecc9
  41809d:	pop    ebp
  41809e:	jae    0x418075
  4180a0:	repz fmul QWORD PTR ds:[ecx-0x6f]
  4180a5:	inc    edx
  4180a6:	cmp    eax,0x8cf90213
  4180ab:	iret   
  4180ac:	cmc    
  4180ad:	jl     0x4180c5
  4180af:	push   ss
  4180b0:	outs   dx,DWORD PTR ds:[esi]
  4180b1:	and    eax,0xd1f4fb1e
  4180b6:	cmp    BYTE PTR [ebx+0x11],dh
  4180b9:	inc    esi
  4180ba:	adc    esp,DWORD PTR [edx+0x316183e2]
  4180c0:	push   ss
  4180c1:	call   0xa3e8:0xf6e5e378
  4180c8:	gs icebp 
  4180ca:	into   
  4180cb:	jge    0x41811e
  4180cd:	xor    edx,DWORD PTR [edx-0x4f]
  4180d0:	scas   eax,DWORD PTR es:[edi]
  4180d1:	xchg   ebx,eax
  4180d2:	cmp    BYTE PTR [ecx-0x72],ah
  4180d5:	xor    esp,ebp
  4180d7:	aas    
  4180d8:	gs push cs
  4180da:	(bad)
  4180de:	loop   0x418099
  4180e0:	add    bl,BYTE PTR [esi+0x27]
  4180e3:	popf   
  4180e4:	cmp    ah,BYTE PTR [eax]
  4180e6:	add    DWORD PTR [edi],edi
  4180e8:	hlt    
  4180e9:	xor    DWORD PTR [edx],esp
  4180eb:	mov    esi,0xf004e5e7
  4180f0:	ins    DWORD PTR es:[edi],dx
  4180f1:	pushf  
  4180f2:	std    
  4180f3:	in     eax,dx
  4180f4:	jb     0x418083
  4180f6:	in     al,dx
  4180f7:	dec    ebp
  4180f8:	aad    0xb4
  4180fa:	cdq    
  4180fb:	mov    edx,0x7c4f3f6e
  418100:	sub    ch,BYTE PTR [edi]
  418102:	fxch   st(2)
  418104:	or     eax,DWORD PTR [ecx]
  418106:	mov    edx,ebx
  418108:	loopne 0x41814e
  41810a:	or     eax,ebp
  41810c:	rcl    BYTE PTR [edi],0x45
  41810f:	jns    0x4180b5
  418111:	mov    ecx,0xc80cb035
  418116:	sbb    ebx,DWORD PTR [edi-0x186e783a]
  41811c:	pushf  
  41811d:	dec    ebp
  41811e:	out    dx,eax
  41811f:	fcom   DWORD PTR [ecx-0xe]
  418122:	xlat   BYTE PTR ds:[ebx]
  418123:	das    
  418124:	mov    eax,ds:0xb2a0623
  418129:	mov    esi,0x90ff0e98
  41812e:	xchg   esi,eax
  41812f:	or     al,0x6
  418131:	xchg   esp,eax
  418132:	and    esp,DWORD PTR ds:0xf62dedc5
  418138:	in     al,dx
  418139:	cmp    DWORD PTR [edi],ebp
  41813b:	scas   eax,DWORD PTR es:[edi]
  41813c:	imul   esp,DWORD PTR [ebp+0x33],0x44a9a399
  418143:	div    BYTE PTR [edx]
  418145:	scas   eax,DWORD PTR es:[edi]
  418146:	mov    cl,dl
  418148:	aad    0xc0
  41814a:	mov    ds:0x6326a93a,al
  41814f:	jmp    0x722c:0xa04c0bb4
  418156:	cmp    al,0x67
  418158:	inc    esi
  418159:	fisttp DWORD PTR [eax+0x7f37fe48]
  41815f:	sahf   
  418160:	data16 jmp 0x41810d
  418163:	icebp  
  418164:	push   edx
  418165:	or     DWORD PTR [edx-0x45555e47],eax
  41816b:	push   0xffffffcc
  41816d:	and    eax,0x69679238
  418172:	xor    BYTE PTR [edx+ebp*1-0x18],dl
  418176:	pushw  0x8c85
  41817a:	cmp    bh,BYTE PTR ss:[esi]
  41817d:	dec    edi
  41817e:	js     0x41816b
  418180:	stos   DWORD PTR es:[edi],eax
  418181:	cdq    
  418182:	jne    0xa4aaaf63
  418188:	loop   0x418138
  41818a:	cdq    
  41818b:	pop    ds
  41818c:	repz xor eax,0x91b9b0f2
  418192:	(bad)  
  418193:	sbb    ecx,DWORD PTR [edx]
  418195:	les    esp,FWORD PTR [ebp+0x3b]
  418198:	jno    0x4181a1
  41819a:	or     edi,DWORD PTR [esi]
  41819c:	mov    ecx,0x31afa7c8
  4181a1:	repnz stc 
  4181a3:	leave  
  4181a4:	xchg   edx,eax
  4181a5:	inc    ebx
  4181a6:	aad    0x3f
  4181a8:	test   al,0x49
  4181aa:	xchg   edi,eax
  4181ab:	jnp    0x418181
  4181ad:	inc    edx
  4181ae:	lods   eax,DWORD PTR ds:[esi]
  4181af:	ret    0x68b3
  4181b2:	mov    dh,0x30
  4181b4:	and    DWORD PTR [ebx+0x4c326b82],esp
  4181ba:	shr    DWORD PTR [eax+0xfb0bf24],1
  4181c0:	stos   DWORD PTR es:[edi],eax
  4181c1:	ret    
  4181c2:	cmp    eax,0xa1c9183b
  4181c7:	add    cl,BYTE PTR [ecx-0x72e3ef6b]
  4181cd:	add    DWORD PTR [edi],ecx
  4181cf:	mov    cl,0x22
  4181d1:	out    dx,eax
  4181d2:	sbb    ah,ah
  4181d4:	cmova  edi,esi
  4181d7:	lds    esi,FWORD PTR fs:[esi-0x290597c2]
  4181de:	iret   
  4181df:	push   ds
  4181e0:	xor    al,0x1
  4181e2:	loop   0x4181c1
  4181e4:	pop    ebx
  4181e5:	(bad)  
  4181e6:	aam    0xae
  4181e8:	repnz xlat BYTE PTR ds:[ebx]
  4181ea:	sub    al,0xf8
  4181ec:	fstp   TBYTE PTR [edi-0x67]
  4181ef:	pop    edx
  4181f0:	into   
  4181f1:	ret    0x5723
  4181f4:	or     BYTE PTR [edi+0xd9727af],ah
  4181fa:	std    
  4181fb:	pop    edi
  4181fc:	dec    ecx
  4181fd:	pop    eax
  4181fe:	fistp  WORD PTR [ecx]
  418200:	es (bad) 
  418202:	je     0x41821b
  418204:	jmp    0x9d8f:0x6b1a0a2a
  41820b:	(bad)  
  41820c:	ins    DWORD PTR es:[edi],dx
  41820d:	mov    esi,0x2007bcb9
  418212:	aaa    
  418213:	sbb    eax,0xfc3afa8a
  418218:	adc    esp,DWORD PTR [edx+0x1]
  41821b:	pop    es
  41821c:	adc    al,0xe5
  41821e:	xchg   edi,eax
  41821f:	call   0xa632:0xefb80e18
  418226:	sub    al,0x11
  418228:	imul   ebp,DWORD PTR [ecx],0x39
  41822b:	push   esi
  41822c:	hlt    
  41822d:	inc    edi
  41822e:	in     eax,0x32
  418230:	mov    bh,0xdb
  418232:	dec    ecx
  418233:	jp     0x418269
  418235:	cmp    al,0x9b
  418237:	sti    
  418238:	out    dx,eax
  418239:	sahf   
  41823a:	jle    0x4181d9
  41823c:	sbb    edi,DWORD PTR [ebp+0x4a]
  41823f:	dec    ecx
  418240:	addr16 mov ds:0x4d1c,al
  418244:	fmul   QWORD PTR [edi+0x31415dd5]
  41824a:	repz jne 0x418210
  41824d:	mov    dh,0xa0
  41824f:	adc    al,0x10
  418251:	sti    
  418252:	xlat   BYTE PTR ds:[ebx]
  418253:	and    eax,0x177a1b6b
  418258:	adc    DWORD PTR ds:0x9f9e3969,ecx
  41825e:	push   esp
  41825f:	mov    ecx,0xf861726c
  418264:	cmp    al,0x4a
  418266:	jecxz  0x418239
  418268:	and    BYTE PTR [esi+0x3e],al
  41826b:	mov    dl,al
  41826d:	jae    0x4182eb
  41826f:	add    edx,DWORD PTR [ebx-0x3055f2bc]
  418275:	repz retf 0x1658
  418279:	retf   0xcf65
  41827c:	jo     0x4182a8
  41827e:	xchg   ebx,eax
  41827f:	and    cl,dh
  418281:	in     al,dx
  418282:	shr    DWORD PTR [edi-0x7045aa63],1
  418288:	les    ebx,FWORD PTR [edx+0x42]
  41828b:	pop    ebp
  41828c:	stos   DWORD PTR es:[edi],eax
  41828d:	scas   eax,DWORD PTR es:[edi]
  41828e:	jge    0x418215
  418290:	inc    esp
  418291:	(bad)  
  418293:	push   0xe811ad15
  418298:	or     al,0xc9
  41829a:	jmp    0x41828b
  41829c:	mov    esp,0xc4db20
  4182a1:	jbe    0x418236
  4182a3:	sub    al,0x6
  4182a5:	jmp    0x2742:0x9a73ec99
  4182ac:	cld    
  4182ad:	imul   ecx,DWORD PTR [ebp+0x52],0xffffffe5
  4182b1:	cmp    dl,bl
  4182b3:	daa    
  4182b4:	pop    ecx
  4182b5:	fs jne 0x418325
  4182b8:	nop
  4182b9:	int    0x1
  4182bb:	out    dx,al
  4182bc:	inc    esp
  4182bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182be:	adc    al,0x4d
  4182c0:	js     0x4182e3
  4182c2:	push   ss
  4182c3:	cmp    BYTE PTR [esi],cl
  4182c5:	mov    ebp,0xfbd8e2b5
  4182ca:	add    al,0xa6
  4182cc:	out    dx,al
  4182cd:	jae    0x4182f8
  4182cf:	cmp    DWORD PTR [esi],esp
  4182d1:	sub    BYTE PTR [ebx*2-0x78b92ff1],al
  4182d8:	cmp    eax,0x9353fa97
  4182dd:	xor    eax,0x6b9dd5f9
  4182e2:	mov    edi,0x5e9ca805
  4182e7:	sbb    BYTE PTR [eax+0x6e],ch
  4182ea:	ret    
  4182eb:	jg     0x418301
  4182ed:	push   ebp
  4182ee:	add    ebx,DWORD PTR [edi]
  4182f0:	dec    esi
  4182f1:	mov    bl,0x40
  4182f3:	or     dh,BYTE PTR [esi+0x9064e9]
  4182f9:	shl    DWORD PTR ds:0x29cac585,0xe1
  418300:	int    0x30
  418302:	add    ch,BYTE PTR [ecx+esi*2-0x78]
  418306:	fld    DWORD PTR [eax+0x3ba8d655]
  41830c:	push   edi
  41830d:	pusha  
  41830e:	stc    
  41830f:	dec    eax
  418310:	mov    ebx,0xa4adf800
  418315:	mov    al,ds:0xd80bba2a
  41831a:	aas    
  41831b:	jnp    0x418390
  41831d:	bound  edi,QWORD PTR [esi+0x4e]
  418320:	fimul  WORD PTR gs:[edx+0x27f3d23f]
  418327:	mov    eax,ds:0x4d339725
  41832c:	adc    DWORD PTR [edx],eax
  41832e:	pop    esp
  41832f:	and    eax,0x7f715bb5
  418334:	out    0xcc,al
  418336:	push   ebp
  418337:	scas   al,BYTE PTR es:[edi]
  418338:	sbb    ebp,DWORD PTR [eax-0x427b475e]
  41833e:	mov    esi,0x4240053e
  418343:	mov    esp,edi
  418345:	daa    
  418346:	push   ss
  418347:	scas   eax,DWORD PTR es:[edi]
  418348:	xor    edi,esp
  41834a:	jo     0x418396
  41834c:	xor    BYTE PTR [edx-0x19],cl
  41834f:	stos   DWORD PTR es:[edi],eax
  418350:	cli    
  418351:	pop    ds
  418352:	cmp    DWORD PTR [ebp+0x4bf30ce3],ebp
  418358:	stc    
  418359:	mov    esp,0xcbd7e8d2
  41835e:	add    al,0x7
  418360:	mov    edx,0xaf2d6fb4
  418365:	lods   eax,DWORD PTR ds:[esi]
  418366:	popf   
  418367:	fwait
  418368:	mov    DWORD PTR [ebp+0x5370850c],0xd124a35a
  418372:	sbb    ecx,DWORD PTR [edi-0x3ab36a2b]
  418378:	ins    DWORD PTR es:[edi],dx
  418379:	mov    ebx,DWORD PTR [eax-0x3]
  41837c:	sub    ecx,DWORD PTR [ebx]
  41837e:	in     al,0xcd
  418380:	in     eax,dx
  418381:	xor    DWORD PTR [ecx-0x662bd6be],esi
  418387:	lahf   
  418388:	stos   BYTE PTR es:[edi],al
  418389:	loopne 0x418348
  41838b:	or     BYTE PTR [ebx+0x27],cl
  41838e:	inc    ebp
  41838f:	loopne 0x418397
  418391:	mov    DWORD PTR [ecx-0x546fd053],ebx
  418397:	leave  
  418398:	mov    ecx,0x905c3bd6
  41839d:	call   0x74a6fc5b
  4183a2:	sub    eax,0xb3b48fc3
  4183a7:	mov    ds:0x6c5f6860,eax
  4183ac:	test   al,0xf9
  4183ae:	retf   
  4183af:	and    DWORD PTR [esi+eax*4],ebx
  4183b2:	push   cs
  4183b3:	add    BYTE PTR [ebp+0x571dec06],ah
  4183b9:	cli    
  4183ba:	in     eax,0x53
  4183bc:	stc    
  4183bd:	sbb    eax,0x0
  4183c2:	xchg   esi,eax
  4183c3:	cmp    eax,0xffebb562
  4183c8:	xlat   BYTE PTR ds:[ebx]
  4183c9:	aas    
  4183ca:	popa   
  4183cb:	adc    ch,cl
  4183cd:	add    DWORD PTR [edx-0x5a],0xffffff86
  4183d1:	inc    esi
  4183d2:	or     eax,0xf4000101
  4183d7:	add    al,0x0
  4183d9:	add    BYTE PTR [edi-0x4519adf6],dl
  4183df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183e0:	lea    ebp,[esi-0x1ba8f2ed]
  4183e6:	jmp    0xc7e8bb5b
  4183eb:	cmp    DWORD PTR [ecx-0x38508543],0xfffffffe
  4183f2:	(bad)  
  4183f3:	adc    al,0xab
  4183f5:	mov    gs,WORD PTR [eax]
  4183f7:	fidiv  DWORD PTR [eax-0x4b23b8a7]
  4183fd:	loopne 0x41838a
  4183ff:	clc    
  418400:	cmc    
  418401:	xchg   DWORD PTR [edx-0x422897d5],edx
  418407:	fucomi st,st(3)
  418409:	dec    ebp
  41840a:	mov    cl,0x6
  41840c:	pop    es
  41840d:	fnop   
  41840f:	jo     0x41844e
  418411:	dec    ebp
  418412:	mov    ecx,0x62d86d64
  418417:	hlt    
  418418:	in     eax,dx
  418419:	jl     0x41847c
  41841b:	(bad)  
  41841d:	fcom   QWORD PTR [ecx+edx*2+0x402f710d]
  418424:	push   ecx
  418425:	cmp    esi,DWORD PTR [edx+0x3b]
  418428:	mov    dh,0x58
  41842a:	test   al,0x23
  41842c:	ins    BYTE PTR es:[edi],dx
  41842d:	addr16 das 
  41842f:	push   ds
  418430:	idiv   BYTE PTR [ebx+0x1775e0a]
  418436:	inc    ebx
  418437:	cmp    ah,bh
  418439:	daa    
  41843a:	aaa    
  41843b:	sub    BYTE PTR [eax-0x38],ah
  41843e:	xor    DWORD PTR [edi+ecx*4],eax
  418441:	dec    edx
  418442:	les    esp,FWORD PTR [ebp+0xdbbfce6]
  418448:	push   ebx
  418449:	cdq    
  41844a:	fs ins BYTE PTR es:[edi],dx
  41844c:	sbb    esp,DWORD PTR [esi]
  41844e:	push   ebp
  41844f:	in     eax,dx
  418450:	neg    DWORD PTR [eax-0x60da65b8]
  418456:	dec    eax
  418457:	push   0xd7de3f97
  41845c:	cmc    
  41845d:	retf   0xbfcf
  418460:	inc    ebp
  418461:	mov    ecx,0xeedb519
  418466:	sbb    al,0xf
  418468:	pop    edi
  418469:	inc    esp
  41846a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41846b:	jo     0x41842a
  41846d:	or     esp,DWORD PTR fs:[edi]
  418470:	and    eax,0x6f7ddf6c
  418475:	emms   
  418477:	pusha  
  418478:	mov    edi,0xd14247e6
  41847d:	push   ds
  41847e:	sbb    eax,DWORD PTR [ebx]
  418480:	arpl   WORD PTR [ebp+esi*2+0x4d8770e3],bx
  418487:	fstp   TBYTE PTR [esi]
  418489:	xchg   DWORD PTR [ebx+0x44],edx
  41848c:	cmp    DWORD PTR [ebx+0x1f],edx
  41848f:	add    eax,0x580404c8
  418494:	push   edi
  418495:	jo     0x41848a
  418497:	jne    0x418500
  418499:	push   esp
  41849a:	push   ds
  41849b:	add    eax,0xe8f1ad74
  4184a0:	jle    0x41848c
  4184a2:	adc    BYTE PTR [edx+0x78c66a0a],ch
  4184a8:	xchg   edi,eax
  4184a9:	jnp    0x4184bd
  4184ab:	js     0x41842e
  4184ad:	fcos   
  4184af:	cmp    ecx,eax
  4184b1:	xor    bl,BYTE PTR [edx]
  4184b3:	jecxz  0x4184d5
  4184b5:	nop
  4184b6:	mov    eax,0x6c681af8
  4184bb:	scas   al,BYTE PTR es:[edi]
  4184bc:	out    dx,eax
  4184bd:	xchg   ebp,eax
  4184be:	aaa    
  4184bf:	dec    ebp
  4184c0:	sub    eax,0xf9bbf87
  4184c5:	pop    edi
  4184c6:	add    ebp,DWORD PTR [ecx-0x479f228c]
  4184cc:	jmp    0x901a323a
  4184d1:	xchg   esp,eax
  4184d2:	mov    eax,0x45f2c1e1
  4184d7:	cmp    al,0xd
  4184d9:	mov    esi,0xc8e150d1
  4184de:	arpl   si,si
  4184e0:	stos   DWORD PTR es:[edi],eax
  4184e1:	cmc    
  4184e2:	mov    ebp,0xaaad55ff
  4184e7:	loopne 0x4184d2
  4184e9:	push   esi
  4184ea:	mov    ds:0xabeb663,al
  4184ef:	jge    0x418541
  4184f1:	aad    0xa3
  4184f3:	sub    eax,0xb08380a1
  4184f8:	faddp  st(0),st
  4184fa:	fsubr  DWORD PTR [eax-0x7d]
  4184fd:	loop   0x4184c4
  4184ff:	inc    eax
  418500:	inc    edx
  418501:	mov    BYTE PTR [esi],cl
  418503:	sar    DWORD PTR [esi],1
  418505:	test   DWORD PTR [ebp-0x338a43d5],0xf8a6cda8
  41850f:	mov    esi,0x11b89d3e
  418514:	(bad)  
  418515:	sahf   
  418516:	js     0x418498
  418518:	rol    BYTE PTR [edi+0x0],0x21
  41851c:	ds ins DWORD PTR es:[edi],dx
  41851e:	or     al,0xa7
  418520:	nop
  418521:	sub    esi,DWORD PTR [ebx-0x15]
  418524:	dec    esp
  418525:	lock scas al,BYTE PTR es:[edi]
  418527:	push   esp
  418528:	popf   
  418529:	xor    DWORD PTR [ecx],ebp
  41852b:	data16 loopne 0x418503
  41852e:	sub    eax,0x76aa93a9
  418533:	inc    edi
  418534:	xchg   esp,eax
  418535:	mov    eax,ds:0x8259d3ac
  41853a:	inc    esp
  41853b:	mov    esi,0x6515725f
  418540:	test   eax,0xe3bb74a
  418545:	gs inc esp
  418547:	cli    
  418548:	sti    
  418549:	jmp    0xbddf:0x6bbba29a
  418550:	jnp    0x418572
  418552:	into   
  418553:	mov    al,0xfd
  418555:	push   ss
  418556:	stos   BYTE PTR es:[edi],al
  418557:	pop    esp
  418558:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418559:	xor    al,0xcd
  41855b:	xchg   ecx,eax
  41855c:	sbb    BYTE PTR [ecx+0xbf3aa4a],al
  418562:	(bad)  
  418563:	retf   
  418564:	inc    eax
  418565:	retf   0xff04
  418568:	or     cl,BYTE PTR [edi+eiz*1-0x2293113]
  41856f:	jmp    0x19dd:0xa65c4cc1
  418576:	call   0xfe0b:0x1f7c4b2
  41857d:	pop    ebp
  41857e:	test   al,0xef
  418580:	scas   al,BYTE PTR es:[edi]
  418581:	push   esp
  418582:	inc    ebx
  418583:	pop    edx
  418584:	adc    DWORD PTR [ebx-0x18eff7be],edx
  41858a:	fs (bad) 
  41858c:	jmp    0x41854f
  41858e:	xor    BYTE PTR [esi],al
  418590:	fistp  DWORD PTR [ebp-0x5f126a0e]
  418596:	pop    ds
  418597:	lods   al,BYTE PTR ds:[esi]
  418598:	(bad)  
  418599:	and    eax,0xe893e85c
  41859e:	cmpxchg BYTE PTR [ebp-0x8be91b9],dl
  4185a5:	inc    edi
  4185a6:	xchg   DWORD PTR [esi+0x35],eax
  4185a9:	push   edi
  4185aa:	scas   al,BYTE PTR es:[edi]
  4185ab:	stc    
  4185ac:	mov    edi,0xcc48297c
  4185b1:	cmp    ebx,esp
  4185b3:	scas   eax,DWORD PTR es:[edi]
  4185b4:	pop    es
  4185b5:	adc    DWORD PTR [edx],edi
  4185b7:	cmp    cl,ah
  4185b9:	test   eax,0x87aa1901
  4185be:	test   al,0x93
  4185c0:	xor    cl,bh
  4185c2:	sbb    ebx,esp
  4185c4:	ret    
  4185c5:	jle    0x41854e
  4185c7:	or     eax,0x71bcee60
  4185cc:	jge    0x4185db
  4185ce:	xlat   BYTE PTR ds:[ebx]
  4185cf:	and    dh,BYTE PTR [esi]
  4185d1:	lahf   
  4185d2:	cli    
  4185d3:	inc    ebp
  4185d4:	fst    QWORD PTR [esi-0x7bc82a5b]
  4185da:	xor    al,BYTE PTR [ecx-0x300add2c]
  4185e0:	add    BYTE PTR [edx+0x37ee9940],0xcc
  4185e7:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185e9:	into   
  4185ea:	jb     0x418571
  4185ec:	addr16 add bh,dl
  4185ef:	inc    ebp
  4185f0:	and    edx,DWORD PTR [esi]
  4185f2:	clc    
  4185f3:	mov    ds:0x2547efee,al
  4185f8:	add    ecx,esp
  4185fa:	inc    esi
  4185fb:	mov    dh,cl
  4185fd:	in     al,dx
  4185fe:	jae    0x418657
  418600:	inc    esi
  418601:	sbb    ebp,esi
  418603:	in     al,dx
  418604:	push   0xffffff95
  418606:	push   ebx
  418607:	xor    eax,0x690ac058
  41860c:	inc    eax
  41860d:	scas   eax,DWORD PTR es:[edi]
  41860e:	jl     0x4185c7
  418610:	iret   
  418611:	std    
  418612:	mov    esp,0xa5b074b7
  418617:	mov    DWORD PTR [eax],edx
  418619:	inc    ecx
  41861a:	mov    dl,0xd5
  41861c:	sbb    al,0x21
  41861e:	cwde   
  41861f:	xrelease xchg DWORD PTR [ebx-0x342f7f29],ecx
  418626:	add    eax,0xe4453c7
  41862b:	iret   
  41862c:	or     eax,0x90fc4171
  418631:	shl    bl,0xf4
  418634:	mov    esp,0xd4a50e1a
  418639:	call   0x4a46efb
  41863e:	mov    cl,0x72
  418640:	cwde   
  418641:	cmp    al,0xcc
  418643:	xchg   ebp,eax
  418644:	ins    DWORD PTR es:[edi],dx
  418645:	cmp    edx,esp
  418647:	out    dx,eax
  418648:	aas    
  418649:	mov    bh,0xce
  41864b:	enter  0x133,0xc
  41864f:	jae    0x4186a9
  418651:	and    DWORD PTR [esi-0x64d3df53],ebx
  418657:	xchg   ebx,eax
  418658:	ror    DWORD PTR [ebp+0x3d],0x59
  41865c:	(bad)  [edx+0x2b]
  41865f:	mov    ds:0x581060b6,eax
  418664:	scas   al,BYTE PTR es:[edi]
  418665:	mov    fs,edi
  418667:	(bad)  
  418668:	addr16 int3 
  41866a:	fwait
  41866b:	sbb    eax,DWORD PTR [ebx-0x15]
  41866e:	addr16 jge 0x4186aa
  418671:	stc    
  418672:	pop    eax
  418673:	xchg   esi,eax
  418674:	push   edi
  418675:	push   ebx
  418676:	fmul   QWORD PTR [eax-0x22]
  418679:	jno    0x41868a
  41867b:	and    BYTE PTR [esi-0x15],ah
  41867e:	xor    DWORD PTR [ecx],eax
  418680:	scas   al,BYTE PTR es:[edi]
  418681:	fs inc ebp
  418683:	clc    
  418684:	mov    eax,0x13023c7c
  418689:	test   bl,cl
  41868b:	push   es
  41868c:	(bad)  
  41868d:	bound  ebp,QWORD PTR [ebp+0x6829a441]
  418693:	inc    ebx
  418694:	out    dx,eax
  418695:	(bad)  
  418696:	idiv   BYTE PTR [ecx+0xb]
  418699:	sub    dl,BYTE PTR [ecx]
  41869b:	in     eax,dx
  41869c:	retf   0x64c2
  41869f:	jp     0x41871a
  4186a1:	mov    al,0x63
  4186a3:	popa   
  4186a4:	test   DWORD PTR [edi-0x7ae29a7a],edx
  4186aa:	xlat   BYTE PTR ds:[ebx]
  4186ac:	inc    ecx
  4186ad:	out    0x56,al
  4186af:	jp     0x4186d0
  4186b1:	sub    al,0x68
  4186b3:	or     al,0x78
  4186b5:	dec    eax
  4186b6:	adc    DWORD PTR ds:0xe8968b71,esi
  4186bc:	push   ds
  4186bd:	mov    edx,0x8929bedd
  4186c2:	jg     0x418650
  4186c4:	mov    ds:0xc7b7ad21,al
  4186c9:	inc    ebp
  4186ca:	add    bh,BYTE PTR [eax-0x48e132ad]
  4186d0:	pop    ebp
  4186d1:	xchg   edi,eax
  4186d2:	(bad)  
  4186d4:	ins    DWORD PTR es:[edi],dx
  4186d5:	push   edx
  4186d6:	push   0x7b
  4186d8:	enter  0x3a41,0x87
  4186dc:	xor    edx,DWORD PTR [eax+0x7aacdeaf]
  4186e2:	xchg   edi,eax
  4186e3:	fbld   TBYTE PTR [ecx+0x13888c8e]
  4186e9:	pusha  
  4186ea:	test   eax,0x40553f80
  4186ef:	sbb    eax,0xc09fc763
  4186f4:	mov    esp,0x92f2ee97
  4186f9:	add    DWORD PTR [eax+0xfd18767],0x78
  418700:	scas   al,BYTE PTR es:[edi]
  418701:	retf   0x8574
  418704:	fwait
  418705:	stos   BYTE PTR es:[edi],al
  418706:	mov    esi,0x5e0c765f
  41870b:	neg    ah
  41870d:	jae    0x4186e4
  41870f:	or     al,al
  418711:	add    DWORD PTR [ebp+0x1c],eax
  418714:	bound  esi,QWORD PTR ds:0x432ebc93
  41871a:	push   ss
  41871b:	out    0x6f,eax
  41871d:	xlat   BYTE PTR ds:[ebx]
  41871e:	adc    ecx,DWORD PTR ds:0x919ac4b5
  418724:	pop    ebx
  418725:	scas   al,BYTE PTR es:[edi]
  418726:	push   ds
  418727:	rol    DWORD PTR [edx-0x36],1
  41872a:	dec    ebx
  41872b:	ja     0x4186d2
  41872d:	sahf   
  41872e:	lock pop ss
  418730:	es push eax
  418732:	and    al,0xbf
  418734:	repz mov esi,0x96c572b4
  41873a:	mov    cl,0xea
  41873c:	(bad)  
  41873d:	mov    DWORD PTR [edi+eax*2],ebp
  418740:	dec    esp
  418741:	ja     0x41871d
  418743:	inc    esi
  418744:	fistp  QWORD PTR [esi]
  418746:	shl    esi,1
  418748:	xor    cl,BYTE PTR [ebp-0x10]
  41874b:	adc    bh,0x1f
  41874e:	jmp    0x4187c5
  418750:	cmovs  edi,DWORD PTR [ebp+0xb0a0c1b]
  418757:	daa    
  418758:	jo     0x418747
  41875a:	int3   
  41875b:	inc    ecx
  41875c:	jp     0x4187c3
  41875e:	sbb    edx,0xffffffbc
  418761:	sub    edi,DWORD PTR [edi+0x71eb4883]
  418767:	ss pop ecx
  418769:	into   
  41876a:	fdivr  st,st(5)
  41876c:	stos   DWORD PTR es:[edi],eax
  41876d:	and    DWORD PTR [ecx],edx
  41876f:	push   eax
  418770:	push   ebp
  418771:	out    dx,eax
  418772:	push   ecx
  418773:	jmp    0x8fdfdf3
  418778:	cli    
  418779:	mov    edx,0x27a7df06
  41877e:	cmp    dl,0x5f
  418781:	mov    WORD PTR [ebx+0x2d],ds
  418784:	dec    esi
  418785:	outs   dx,DWORD PTR ds:[esi]
  418786:	sbb    al,0xbd
  418788:	enter  0x9cb9,0x65
  41878c:	inc    ecx
  41878d:	rol    BYTE PTR [ecx-0x42c39e0a],cl
  418793:	fs retf 
  418795:	xor    ch,ch
  418797:	adc    DWORD PTR [ebp+0x173607e4],ebx
  41879d:	retf   
  41879e:	fdivr  DWORD PTR ds:0x31aa701
  4187a4:	pop    esp
  4187a5:	(bad)  
  4187a6:	popa   
  4187a7:	sbb    bh,BYTE PTR [ecx+0x5deb2044]
  4187ad:	mov    ds:0x3b0a3096,al
  4187b2:	or     ch,BYTE PTR [esi-0x2a]
  4187b5:	dec    ecx
  4187b6:	gs xchg ebp,eax
  4187b8:	add    al,0x72
  4187ba:	push   ss
  4187bb:	fadd   QWORD PTR [esi]
  4187bd:	sub    ebx,ecx
  4187bf:	jnp    0x418801
  4187c1:	shr    bl,1
  4187c3:	mov    edx,0xa7ccce8b
  4187c8:	ins    BYTE PTR es:[edi],dx
  4187c9:	sub    eax,0xb2aff6c4
  4187ce:	mov    esi,0x331c4f13
  4187d3:	je     0x41879b
  4187d5:	std    
  4187d6:	dec    esi
  4187d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187d8:	inc    ecx
  4187d9:	mov    bh,0x4
  4187db:	push   0x6bb5de83
  4187e0:	mov    cl,0x5f
  4187e2:	test   al,0x45
  4187e4:	(bad)  
  4187e5:	add    DWORD PTR [ebx],esi
  4187e7:	(bad)  
  4187e8:	stos   BYTE PTR es:[edi],al
  4187e9:	ds aam 0xa8
  4187ec:	dec    ecx
  4187ed:	jns    0x4187ac
  4187ef:	lods   al,BYTE PTR ds:[esi]
  4187f0:	scas   eax,DWORD PTR es:[edi]
  4187f1:	data16 mov al,ds:0x73e82917
  4187f7:	pop    esi
  4187f8:	pushf  
  4187f9:	gs xor al,0x94
  4187fc:	dec    ebx
  4187fd:	add    cl,BYTE PTR [ebx]
  4187ff:	(bad)  
  418800:	jp     0x418850
  418802:	or     DWORD PTR [edx-0x50],edi
  418805:	mov    ebx,0x6befe3c3
  41880a:	or     al,0x17
  41880c:	shl    DWORD PTR [esi],cl
  41880e:	ss push ecx
  418810:	fisttp DWORD PTR [eax+ebx*2-0x32]
  418814:	loope  0x4187f9
  418816:	lahf   
  418817:	mov    dl,0x9a
  418819:	sbb    eax,0x5ff84327
  41881e:	mov    bh,0x78
  418820:	repz or al,0xca
  418823:	pusha  
  418824:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418825:	mov    esi,0x7918816e
  41882a:	mov    bh,0xc4
  41882c:	inc    edi
  41882d:	jno    0x4187f3
  41882f:	repnz xchg ecx,eax
  418831:	mov    cl,bh
  418833:	in     al,0xc
  418835:	in     eax,0x17
  418837:	push   eax
  418838:	mov    ds:0xc379be95,eax
  41883d:	jg     0x4187f7
  41883f:	xor    al,0xcd
  418841:	jns    0x418873
  418843:	call   0x2315:0x421d0341
  41884a:	add    DWORD PTR [edx+0x75],ebp
  41884d:	mov    DWORD PTR [eax],edi
  41884f:	dec    edx
  418850:	pop    ss
  418851:	dec    edx
  418852:	(bad)  
  418853:	stc    
  418854:	jne    0x418850
  418856:	or     ecx,DWORD PTR [esi]
  418858:	int3   
  418859:	imul   DWORD PTR [esi+0x34fb2041]
  41885f:	xchg   ebx,eax
  418860:	retf   
  418861:	mov    BYTE PTR [esi-0x27],bh
  418864:	and    al,0x1f
  418866:	test   al,0xeb
  418868:	(bad)  
  41886a:	cmc    
  41886b:	(bad)  
  41886c:	mov    ch,0xca
  41886e:	mov    edx,0xf1f17be9
  418873:	adc    DWORD PTR [edx],edi
  418875:	div    DWORD PTR [ecx]
  418877:	mov    WORD PTR [esi-0x5a],?
  41887a:	jmp    0xec7ab5c
  41887f:	jmp    0x995bf7f5
  418884:	scas   al,BYTE PTR es:[edi]
  418885:	xchg   edi,eax
  418886:	adc    ah,ch
  418888:	inc    ecx
  418889:	popf   
  41888a:	pop    eax
  41888b:	int3   
  41888c:	lea    ecx,[edx-0x677562ba]
  418892:	add    al,0x17
  418894:	dec    esi
  418895:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418896:	bound  edi,QWORD PTR [edi]
  418898:	inc    DWORD PTR [esi+esi*2-0x39]
  41889c:	retf   0x3141
  41889f:	jmp    0x2fb13c7e
  4188a4:	push   0x7f
  4188a6:	scas   eax,DWORD PTR es:[edi]
  4188a7:	and    al,0x1c
  4188a9:	in     al,dx
  4188aa:	mov    esp,0x3ee7d815
  4188af:	mov    ebp,0xb76ef577
  4188b4:	lods   eax,DWORD PTR ds:[esi]
  4188b5:	neg    DWORD PTR [edi+ebp*2+0xa]
  4188b9:	xor    DWORD PTR [esi],ebx
  4188bb:	cwde   
  4188bc:	in     al,dx
  4188bd:	leave  
  4188be:	call   0xfb91:0x5e2bc22f
  4188c5:	dec    ecx
  4188c6:	or     eax,0x95117af2
  4188cb:	jp     0x4188f9
  4188cd:	xor    eax,0x0
  4188d2:	sahf   
  4188d3:	ins    DWORD PTR es:[edi],dx
  4188d4:	not    esi
  4188d6:	neg    esi
  4188d8:	mov    edi,0x9e0bd66d
  4188dd:	int    0xd2
  4188df:	leave  
  4188e0:	stc    
  4188e1:	hlt    
  4188e2:	add    DWORD PTR [esi],eax
  4188e4:	add    DWORD PTR [eax],eax
  4188e6:	hlt    
  4188e7:	add    al,0x0
  4188e9:	add    dl,ah
  4188eb:	mov    eax,0xdd1d8028
  4188f0:	add    DWORD PTR [edi-0x46],0x1f
  4188f4:	mov    edi,edi
  4188f6:	loope  0x4188ac
  4188f8:	(bad)
  4188fc:	push   ds
  4188fd:	inc    edi
  4188fe:	daa    
  4188ff:	jae    0x4188be
  418901:	ds jg  0x41897f
  418904:	sbb    DWORD PTR [ecx+0x6c7a5c13],ebp
  41890a:	js     0x418981
  41890c:	clc    
  41890d:	test   al,0xb4
  41890f:	ins    DWORD PTR es:[edi],dx
  418910:	push   ss
  418911:	bnd ja 0x418924
  418914:	pop    ebp
  418915:	push   ds
  418916:	pop    esp
  418917:	in     al,dx
  418918:	test   al,0x65
  41891a:	(bad)  
  41891b:	mov    eax,0x4425fddc
  418920:	mov    BYTE PTR ds:0x63099ac6,ch
  418926:	pop    ds
  418927:	push   edi
  418928:	inc    edi
  418929:	jl     0x418917
  41892b:	xchg   ch,dh
  41892d:	jge    0x418986
  41892f:	and    BYTE PTR [edx-0x24],bl
  418932:	sub    esi,eax
  418934:	test   BYTE PTR [edi+edi*8-0x15],dh
  418938:	mov    ebx,0x508ba461
  41893d:	out    dx,eax
  41893e:	imul   eax,ebx,0x4d5b189d
  418944:	pop    ss
  418945:	inc    edi
  418946:	test   DWORD PTR [ecx],esp
  418948:	aam    0x66
  41894a:	mov    ebx,0xd0e999eb
  41894f:	shl    DWORD PTR [esi+0x32],0x60
  418953:	test   ah,bl
  418955:	or     DWORD PTR [esi-0x3d],esp
  418958:	add    BYTE PTR [esi-0x2671a629],dl
  41895e:	jge    0x418976
  418960:	mov    bh,0x8d
  418962:	adc    al,0xe3
  418964:	xchg   ebp,eax
  418965:	rol    BYTE PTR [edx],cl
  418967:	cmp    eax,0x235da636
  41896c:	stos   DWORD PTR es:[edi],eax
  41896d:	lods   al,BYTE PTR ds:[esi]
  41896e:	pop    ds
  41896f:	adc    eax,0x3703b679
  418974:	add    ch,BYTE PTR [ebx+eiz*1-0x6660cab1]
  41897b:	cld    
  41897c:	inc    ecx
  41897d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41897e:	xlat   BYTE PTR ds:[ebx]
  41897f:	daa    
  418980:	icebp  
  418981:	adc    DWORD PTR [ebp+eiz*8-0x2ffd68f9],0xf529c4bf
  41898c:	xor    eax,0xaad529aa
  418991:	add    edi,ecx
  418993:	mov    al,ds:0x20af80e6
  418998:	and    eax,DWORD PTR [ebx+0x3a1d8e74]
  41899e:	sub    eax,0xad242f86
  4189a3:	pop    edi
  4189a4:	dec    eax
  4189a5:	push   edx
  4189a6:	lahf   
  4189a7:	and    DWORD PTR [ebp-0x6e47cedf],0xffffffbb
  4189ae:	movsx  eax,dl
  4189b1:	push   ss
  4189b2:	xchg   DWORD PTR [ebx],eax
  4189b4:	cmp    ebp,DWORD PTR [ecx+0x78]
  4189b7:	in     eax,0xa2
  4189b9:	nop
  4189ba:	scas   al,BYTE PTR es:[edi]
  4189bb:	jb     0x41894f
  4189bd:	rol    eax,cl
  4189bf:	pusha  
  4189c0:	jae    0x418a29
  4189c2:	in     al,0x3e
  4189c4:	repnz sbb al,0x2b
  4189c7:	outs   dx,BYTE PTR ds:[esi]
  4189c8:	sub    eax,0xfe9e624f
  4189cd:	inc    ebx
  4189ce:	loope  0x418a44
  4189d0:	adc    esi,DWORD PTR [eax+0x6b83c63b]
  4189d6:	arpl   WORD PTR [eax],di
  4189d8:	xor    bl,dl
  4189da:	clc    
  4189db:	cmp    ebp,DWORD PTR [ebp+0x41]
  4189de:	xchg   edx,eax
  4189df:	icebp  
  4189e0:	mov    ebx,0x56a20f6d
  4189e5:	lahf   
  4189e6:	test   BYTE PTR [esi-0x6528f77],0xcf
  4189ed:	pop    eax
  4189ee:	mov    edi,0xf3ff9ff7
  4189f3:	int3   
  4189f4:	movntps XMMWORD PTR [esi-0x3e],xmm3
  4189f8:	scas   eax,DWORD PTR es:[edi]
  4189f9:	ret    
  4189fa:	arpl   WORD PTR [ecx-0x3488409a],cx
  418a00:	lahf   
  418a01:	push   ecx
  418a02:	dec    edx
  418a03:	push   eax
  418a04:	ja     0x4189b3
  418a06:	lahf   
  418a07:	imul   edi,eax,0x66b279fb
  418a0d:	inc    ebp
  418a0e:	and    al,bh
  418a10:	xor    al,0x72
  418a12:	icebp  
  418a13:	cs mov bh,0xfd
  418a16:	adc    eax,0xaeb2275f
  418a1b:	ins    BYTE PTR es:[edi],dx
  418a1c:	xlat   BYTE PTR ds:[ebx]
  418a1d:	jbe    0x4189c6
  418a1f:	mov    ebp,DWORD PTR [ebx+eax*2-0x687fbf1]
  418a26:	push   es
  418a27:	mov    eax,0x61bbf012
  418a2c:	mov    ss,ebx
  418a2e:	mov    WORD PTR [edx+0x68a9309c],?
  418a34:	cmp    ebp,DWORD PTR [ebx-0x5cd8511c]
  418a3a:	test   DWORD PTR [eax+0x4c3eb4d1],edi
  418a40:	fidivr WORD PTR [ebx]
  418a42:	dec    BYTE PTR [eax+0x40]
  418a45:	mov    ecx,0x93ac32ea
  418a4a:	scas   eax,DWORD PTR es:[edi]
  418a4b:	add    DWORD PTR [ebx-0x70],ecx
  418a4e:	(bad)  
  418a4f:	(bad)  
  418a51:	push   ebp
  418a52:	jmp    0xef30:0x3be3df79
  418a59:	stos   DWORD PTR es:[edi],eax
  418a5a:	inc    edi
  418a5b:	dec    eax
  418a5c:	lds    ebx,FWORD PTR [ebp+0x354d95a3]
  418a62:	scas   eax,DWORD PTR es:[edi]
  418a63:	mov    eax,ds:0x4fc0abc0
  418a68:	jge    0x418ab3
  418a6a:	mov    edx,0x7f18bb00
  418a6f:	add    edi,DWORD PTR [edx-0x7834e08f]
  418a75:	sub    DWORD PTR [ecx+0x68],0x6db0efe5
  418a7c:	and    DWORD PTR [ebp-0x52cf16a5],ebp
  418a82:	imul   edx,ebp,0x19be1906
  418a88:	mov    eax,ds:0x59c8ce5f
  418a8d:	jbe    0x418adb
  418a8f:	jle    0x418a81
  418a91:	arpl   WORD PTR [ecx+0x5639cfcf],dx
  418a97:	dec    ecx
  418a98:	cli    
  418a99:	pop    eax
  418a9a:	ss sbb eax,0x58bea447
  418aa0:	fiadd  DWORD PTR [ebp+0x2b607b30]
  418aa6:	mul    BYTE PTR [edi+0x1d]
  418aa9:	loop   0x418ac4
  418aab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418aac:	outs   dx,DWORD PTR ds:[esi]
  418aad:	das    
  418aae:	push   esp
  418aaf:	cmp    bl,BYTE PTR [edi-0x3e]
  418ab2:	ins    BYTE PTR es:[edi],dx
  418ab3:	pop    esi
  418ab4:	pop    ebp
  418ab5:	fcomp  DWORD PTR [edi]
  418ab7:	bound  eax,QWORD PTR [ebx+0xe2d003a]
  418abd:	pop    ebx
  418abe:	adc    bl,ch
  418ac0:	jmp    0x418a4c
  418ac2:	sbb    dl,dl
  418ac4:	call   0x91faaea9
  418ac9:	(bad)  
  418acb:	mov    esp,es
  418acd:	gs fs sbb eax,esp
  418ad1:	stos   DWORD PTR es:[edi],eax
  418ad2:	mov    ecx,0x169cb7de
  418ad7:	sbb    eax,0x658aad8f
  418adc:	jmp    0x23fd:0xa1b5a288
  418ae3:	out    dx,al
  418ae4:	out    0xb0,al
  418ae6:	cmp    DWORD PTR [ebp+0x661c7804],0x729a0330
  418af0:	add    BYTE PTR [ecx],dh
  418af2:	repnz fld DWORD PTR [ebx-0x89220d0]
  418af9:	push   es
  418afa:	and    eax,0x37868701
  418aff:	pop    ds
  418b00:	scas   al,BYTE PTR es:[edi]
  418b01:	rol    ah,cl
  418b03:	xchg   esp,eax
  418b04:	adc    al,0xe9
  418b06:	adc    eax,0x2f97ff78
  418b0b:	out    dx,eax
  418b0c:	fistp  WORD PTR [ebx+eax*1]
  418b0f:	adc    ecx,ebx
  418b11:	mov    dl,0xe9
  418b13:	in     al,0x1c
  418b15:	(bad)  
  418b16:	mov    ah,0x8b
  418b18:	inc    esi
  418b19:	pop    ds
  418b1a:	mov    dh,0x83
  418b1c:	push   ebp
  418b1d:	imul   ebx,esp,0xd6411fb4
  418b23:	and    al,0x97
  418b25:	outs   dx,BYTE PTR ds:[esi]
  418b26:	imul   esp,DWORD PTR [esi-0x519ac748],0xf666aff2
  418b30:	iret   
  418b31:	leave  
  418b32:	call   0x7ce9:0x223673a6
  418b39:	daa    
  418b3a:	xchg   ebp,eax
  418b3b:	in     al,dx
  418b3c:	stos   BYTE PTR es:[edi],al
  418b3d:	jmp    0x87422e45
  418b42:	outs   dx,BYTE PTR ds:[esi]
  418b43:	nop
  418b44:	and    al,0x48
  418b46:	sbb    esp,0x477e9c53
  418b4c:	push   edx
  418b4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b4e:	popa   
  418b4f:	into   
  418b50:	inc    ebx
  418b51:	imul   ecx,DWORD PTR [esi-0x10],0xeae80da7
  418b58:	pop    esi
  418b59:	pop    ds
  418b5a:	mov    ebp,0xe3e19cba
  418b5f:	sbb    cl,BYTE PTR [ecx+0x1e00b0e1]
  418b65:	add    BYTE PTR [edx+0x48a10608],ch
  418b6b:	pop    edi
  418b6c:	loop   0x418b74
  418b6e:	in     eax,0x7f
  418b70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b71:	sti    
  418b72:	daa    
  418b73:	stc    
  418b74:	jmp    0x279686f7
  418b79:	jne    0x418b26
  418b7b:	popa   
  418b7c:	sar    BYTE PTR [ebx+0x6e],1
  418b7f:	push   edi
  418b80:	cmp    eax,0xe84b649e
  418b85:	pop    es
  418b86:	add    al,0x3b
  418b88:	sbb    ebx,DWORD PTR [edx-0x452d541a]
  418b8e:	(bad)  
  418b8f:	xchg   esi,eax
  418b90:	push   esi
  418b91:	outs   dx,BYTE PTR ds:[esi]
  418b92:	jmp    0xab8fcf2d
  418b97:	gs add al,0x33
  418b9a:	add    BYTE PTR [edx-0x3],dl
  418b9d:	or     ah,BYTE PTR [eax]
  418b9f:	ficomp DWORD PTR [eax]
  418ba1:	mov    ss,esp
  418ba3:	pop    ds
  418ba4:	pop    edi
  418ba5:	icebp  
  418ba6:	outs   dx,DWORD PTR ds:[esi]
  418ba7:	test   BYTE PTR [ebp+0x6c0466a2],al
  418bad:	pop    eax
  418bae:	mov    ds:0xe36e2724,eax
  418bb3:	add    BYTE PTR ds:0x1e2b4120,0x4c
  418bba:	jmp    0xf6b7:0x9b48629f
  418bc1:	sahf   
  418bc2:	inc    edi
  418bc3:	out    0x8c,al
  418bc5:	jp     0x418bb7
  418bc7:	jle    0x418b88
  418bc9:	outs   dx,BYTE PTR ds:[esi]
  418bca:	xor    eax,0x48
  418bcd:	xor    eax,0x835be1e3
  418bd2:	mov    esi,0xea6657d7
  418bd7:	cmp    BYTE PTR [edx+0x4742cec7],al
  418bdd:	lahf   
  418bde:	sub    DWORD PTR [ecx-0x4a8ba73f],ebp
  418be4:	iret   
  418be5:	push   ebp
  418be6:	jg     0x418b9c
  418be8:	repnz sbb eax,0xa1ccd3f5
  418bee:	enter  0xaa3e,0x18
  418bf2:	cli    
  418bf3:	mov    edx,0x2029bf4f
  418bf8:	ins    DWORD PTR es:[edi],dx
  418bf9:	cld    
  418bfa:	dec    edx
  418bfb:	cmp    al,0x76
  418bfd:	mul    al
  418bff:	inc    eax
  418c00:	mov    ebp,0xff178283
  418c05:	jmp    0x418c59
  418c07:	aaa    
  418c08:	sbb    esi,edi
  418c0a:	les    edx,FWORD PTR es:[esi]
  418c0d:	in     al,dx
  418c0e:	and    DWORD PTR [ebp+0x8],edi
  418c11:	inc    eax
  418c12:	pop    esi
  418c13:	mov    eax,0x5afa45fa
  418c18:	xchg   DWORD PTR [esi-0x5b],esp
  418c1b:	cdq    
  418c1c:	lock jl 0x418c3b
  418c1f:	add    eax,0x20081c4
  418c24:	and    ah,BYTE PTR [ebp-0x23c8eeb2]
  418c2a:	jb     0x418c0f
  418c2c:	push   cs
  418c2d:	stos   BYTE PTR es:[edi],al
  418c2e:	dec    eax
  418c2f:	or     al,0x58
  418c31:	into   
  418c32:	fsub   QWORD PTR [edi+0x6e]
  418c35:	bnd jno 0x418cb6
  418c38:	xor    ebp,esp
  418c3a:	pop    ebx
  418c3b:	lods   al,BYTE PTR ds:[esi]
  418c3c:	jl     0x418c27
  418c3e:	jne    0x418c76
  418c40:	xor    eax,0xb9665158
  418c45:	dec    edx
  418c46:	call   0xf71a7630
  418c4b:	sar    DWORD PTR [esi],0x50
  418c4e:	jne    0x5ce9bb51
  418c54:	and    bh,ch
  418c56:	add    DWORD PTR ds:0x5917e2aa,ebx
  418c5c:	cli    
  418c5d:	(bad)  
  418c5e:	mov    edx,DWORD PTR [edx-0x2927d42c]
  418c64:	hlt    
  418c65:	lods   al,BYTE PTR ds:[esi]
  418c66:	xor    BYTE PTR [ebx-0x13],ch
  418c69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c6a:	and    edi,DWORD PTR [eax-0x4e]
  418c6d:	cmp    edi,DWORD PTR [edi]
  418c6f:	(bad)  
  418c71:	pop    edx
  418c72:	sub    ebx,eax
  418c74:	pop    edi
  418c75:	in     al,dx
  418c76:	in     al,0x3b
  418c78:	mov    al,0x76
  418c7a:	inc    DWORD PTR [ebx-0x79]
  418c7d:	(bad)  
  418c7e:	out    dx,al
  418c7f:	mov    esi,0x64c3f61b
  418c85:	stos   BYTE PTR es:[edi],al
  418c86:	xor    eax,0xc011d934
  418c8c:	jmp    0x418d0a
  418c8e:	sbb    ebx,DWORD PTR [ebp+0x751c9dec]
  418c94:	pop    ecx
  418c95:	inc    edi
  418c96:	outs   dx,DWORD PTR ds:[esi]
  418c97:	dec    ebx
  418c98:	xchg   edx,eax
  418c99:	pushf  
  418c9a:	test   DWORD PTR [esi-0x26874296],esi
  418ca0:	(bad)  
  418ca1:	(bad)  
  418ca2:	push   eax
  418ca3:	pusha  
  418ca4:	dec    ebx
  418ca5:	sub    DWORD PTR [ebx],esi
  418ca7:	sub    ch,dl
  418ca9:	fucompp 
  418cab:	jae    0x418cda
  418cad:	fisub  DWORD PTR [esi+ecx*4-0x2f]
  418cb1:	loopne 0x418c86
  418cb3:	mov    edi,0x3ec5e7e0
  418cb8:	cmp    DWORD PTR [edi-0x26a91003],0x81c5501d
  418cc2:	(bad)  
  418cc3:	pop    esp
  418cc4:	add    DWORD PTR [ebp+0x65fdbf77],ebp
  418cca:	sub    ebx,DWORD PTR [esi-0x77]
  418ccd:	ror    DWORD PTR [esi],cl
  418ccf:	mov    eax,ds:0x6127d0f7
  418cd4:	into   
  418cd5:	pop    ebx
  418cd6:	fiadd  WORD PTR es:[edi+0x5d3f7ffa]
  418cdd:	clc    
  418cde:	push   0x1486a369
  418ce3:	addr16 cmc 
  418ce5:	sub    al,0x6d
  418ce7:	mov    eax,0x6b6d2362
  418cec:	pop    ebx
  418ced:	push   ebp
  418cee:	adc    esi,DWORD PTR [edx]
  418cf0:	mov    ecx,0x35216da2
  418cf5:	lods   al,BYTE PTR cs:[esi]
  418cf7:	push   eax
  418cf8:	dec    edx
  418cf9:	jns    0x418d42
  418cfb:	pop    edi
  418cfc:	push   ds
  418cfd:	call   0x1d238588
  418d02:	enter  0x24ec,0x9a
  418d06:	adc    cl,BYTE PTR [ebp+0x3a50209d]
  418d0c:	mov    eax,0x49a59d4b
  418d11:	lods   eax,DWORD PTR ds:[esi]
  418d12:	cld    
  418d13:	or     dl,BYTE PTR [ecx]
  418d15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d16:	ss icebp 
  418d18:	nop
  418d19:	and    al,0x6f
  418d1b:	mov    al,BYTE PTR [edi-0x1bfd18ad]
  418d21:	pop    ecx
  418d22:	add    al,0xf1
  418d24:	loopne 0x418d50
  418d26:	mov    cl,0x10
  418d28:	jge    0x418d5e
  418d2a:	fs or  eax,0x659e2584
  418d30:	fs mov dl,0xc7
  418d33:	push   esp
  418d34:	gs loop 0x418cea
  418d37:	add    DWORD PTR [edx+0x2b96f64b],esi
  418d3d:	push   ds
  418d3e:	add    dh,dh
  418d40:	push   edx
  418d41:	fs or  al,cl
  418d44:	subps  xmm2,XMMWORD PTR [edi]
  418d47:	cmp    eax,0x40bb202c
  418d4c:	push   eax
  418d4d:	xlat   BYTE PTR ds:[ebx]
  418d4e:	dec    ebx
  418d4f:	shl    ebp,1
  418d51:	jb     0x418cda
  418d53:	shl    cl,cl
  418d55:	das    
  418d56:	mov    ah,0x5f
  418d58:	es inc ebx
  418d5a:	jecxz  0x418d83
  418d5c:	or     BYTE PTR [eax-0x4b3efd7e],ch
  418d62:	adc    ebx,ecx
  418d64:	ds iret 
  418d66:	mov    eax,ds:0x892c407
  418d6b:	add    eax,0x67e4806d
  418d70:	ror    BYTE PTR [edx-0x48bfc8e4],0x51
  418d77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d78:	xor    eax,0xa1c15040
  418d7d:	and    DWORD PTR [ebp+0x748b9267],eax
  418d83:	jo     0x418dce
  418d85:	cli    
  418d86:	xchg   ebp,eax
  418d87:	sub    BYTE PTR [ecx+0x1c],dh
  418d8a:	add    ah,BYTE PTR [esi-0x2a]
  418d8d:	sahf   
  418d8e:	enter  0x57ec,0xeb
  418d92:	pop    esi
  418d93:	jae    0x418dd3
  418d95:	jge    0x418e0a
  418d97:	ins    DWORD PTR es:[edi],dx
  418d98:	jno    0x418dfd
  418d9a:	loope  0x418dcd
  418d9c:	jno    0x418d72
  418d9e:	xchg   esi,eax
  418d9f:	aas    
  418da0:	mov    ch,0xf7
  418da2:	fs sub eax,0x8166002d
  418da8:	aas    
  418da9:	sbb    BYTE PTR [eax],dh
  418dab:	jp     0x418d7c
  418dad:	mov    al,0x83
  418daf:	pop    edx
  418db0:	mov    ebx,0xebfb4cb7
  418db5:	add    ebx,DWORD PTR [esi+0x6d]
  418db8:	ret    
  418db9:	mov    al,ds:0x9ae6b95b
  418dbe:	(bad)  [edx+edx*1]
  418dc1:	jnp    0x418d98
  418dc3:	mov    ebx,0xc1bc54ad
  418dc8:	in     eax,dx
  418dc9:	lock mov eax,0x631f9c14
  418dcf:	(bad)  
  418dd1:	rol    BYTE PTR [ebp+0x4bdfa9f8],cl
  418dd7:	mov    edx,0x73badd02
  418ddc:	call   0xb200:0x21
  418de3:	push   edi
  418de4:	push   0xffffffc9
  418de6:	out    dx,eax
  418de7:	std    
  418de8:	mov    bl,0x7f
  418dea:	push   ebx
  418deb:	jg     0x418e10
  418ded:	mov    ecx,0x982f3b7c
  418df2:	cmc    
  418df3:	or     al,BYTE PTR [ecx]
  418df5:	add    ah,dh
  418df7:	add    al,0x0
  418df9:	add    BYTE PTR [eax+0x22],cl
  418dfc:	lahf   
  418dfd:	mov    fs,WORD PTR ds:0x2f756774
  418e03:	out    0x19,eax
  418e05:	xor    BYTE PTR [esi-0x6c],bl
  418e08:	sbb    al,0x9a
  418e0a:	sub    esi,DWORD PTR [ebp-0x39]
  418e0d:	mov    edx,0x4e34bfc
  418e12:	and    al,0x2a
  418e14:	dec    edx
  418e15:	retf   0xc424
  418e18:	dec    esi
  418e19:	aaa    
  418e1a:	jmp    0xba4a1514
  418e1f:	xchg   ebp,eax
  418e20:	fnsave [ecx]
  418e22:	shr    DWORD PTR [ebx],cl
  418e24:	in     al,dx
  418e25:	push   esi
  418e26:	push   esi
  418e27:	fdiv   QWORD PTR [edx]
  418e29:	out    0x4a,eax
  418e2b:	repz xor bh,BYTE PTR [ecx]
  418e2e:	pushf  
  418e2f:	std    
  418e30:	and    BYTE PTR [ecx+edx*2+0x68573556],ch
  418e37:	jbe    0x418ea6
  418e39:	jmp    0x9b4d29e0
  418e3e:	push   edi
  418e3f:	dec    ebx
  418e40:	icebp  
  418e41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e43:	adc    BYTE PTR [eax+0x7cbc017a],ah
  418e49:	mov    es,WORD PTR [eax+0x3efd5abc]
  418e4f:	or     al,0xe2
  418e51:	lds    edi,FWORD PTR [edi]
  418e53:	pop    ss
  418e54:	and    ch,cl
  418e56:	int3   
  418e57:	xchg   edx,eax
  418e58:	xor    al,0x10
  418e5a:	das    
  418e5b:	mov    ch,0x7b
  418e5d:	scas   eax,DWORD PTR es:[edi]
  418e5e:	and    eax,0xb80c7fc7
  418e63:	adc    DWORD PTR [edx-0x32],esi
  418e66:	scas   eax,DWORD PTR es:[edi]
  418e67:	pop    esp
  418e68:	mov    cl,BYTE PTR [edx+ebp*1-0x54fed1d1]
  418e6f:	(bad)  
  418e70:	xor    eax,0xc9c1c97
  418e75:	repnz mov esi,0x109af0fa
  418e7b:	mov    ds:0xc921cb55,eax
  418e80:	into   
  418e81:	gs (bad) 
  418e83:	jecxz  0x418ee5
  418e85:	xor    edi,eax
  418e87:	and    DWORD PTR [edi-0x6c83e92c],ecx
  418e8d:	das    
  418e8e:	pop    eax
  418e8f:	lahf   
  418e90:	aam    0x2f
  418e92:	mov    edx,0x2e7790e9
  418e97:	stos   BYTE PTR es:[edi],al
  418e98:	push   ss
  418e99:	cmc    
  418e9a:	inc    edi
  418e9b:	add    BYTE PTR [eax-0xb6b4b1c],ah
  418ea1:	mov    ah,0x26
  418ea3:	mov    dl,0xcc
  418ea5:	clc    
  418ea6:	sub    ah,0x17
  418ea9:	pop    ss
  418eaa:	jle    0x418eb2
  418eac:	cmp    bl,ch
  418eae:	add    ch,ch
  418eb0:	sbb    bh,BYTE PTR [ebx]
  418eb2:	mov    esi,0xaac6a686
  418eb7:	lahf   
  418eb8:	mov    BYTE PTR [edi],ah
  418eba:	xchg   DWORD PTR [esi-0x508513c3],esp
  418ec0:	outs   dx,DWORD PTR ds:[esi]
  418ec1:	mov    ebp,0xd9665f2c
  418ec6:	mov    ss,WORD PTR [ecx-0x2a]
  418ec9:	mov    al,ds:0x60592b4e
  418ece:	or     eax,0x900bfb31
  418ed3:	add    DWORD PTR [esi],ebp
  418ed5:	test   BYTE PTR [eax],0x19
  418ed8:	push   ds
  418ed9:	ins    DWORD PTR es:[edi],dx
  418eda:	(bad)  
  418edb:	dec    ebp
  418edc:	xor    eax,0xdc2e65f
  418ee1:	ja     0x418f41
  418ee3:	xor    cl,BYTE PTR [ebp-0x7156aae4]
  418ee9:	scas   al,BYTE PTR es:[edi]
  418eea:	push   esp
  418eeb:	stos   BYTE PTR es:[edi],al
  418eec:	mov    ebx,0x494f9475
  418ef1:	push   eax
  418ef2:	setp   BYTE PTR [edx+0x2b]
  418ef6:	sbb    DWORD PTR [ebp+0x5a],0x25
  418efa:	repnz lock push 0x37a9bb4b
  418f01:	cmp    eax,0x526db7f2
  418f06:	rol    BYTE PTR [edi+0x36],0xc8
  418f0a:	jmp    0x418eab
  418f0c:	loope  0x418ea9
  418f0e:	add    eax,0x11bb72f5
  418f13:	dec    esp
  418f14:	cmp    BYTE PTR [ebp+0x5c364989],cl
  418f1a:	sti    
  418f1b:	cmp    cl,dh
  418f1d:	add    bh,BYTE PTR [eax+ebx*8-0x34]
  418f21:	cmp    ebp,DWORD PTR [edx-0x4f]
  418f24:	js     0x418f16
  418f26:	aad    0xea
  418f28:	into   
  418f29:	adc    al,0xc0
  418f2b:	into   
  418f2c:	and    DWORD PTR [ebx+ebp*4-0x66ae5ec8],eax
  418f33:	jl     0x418f08
  418f35:	arpl   WORD PTR [esi+0x15a794cc],ax
  418f3b:	repz adc eax,0x8b81c123
  418f41:	jl     0x418f5a
  418f43:	pusha  
  418f44:	jmp    0x984f:0xc2781744
  418f4b:	jg     0x418f81
  418f4d:	scas   eax,DWORD PTR es:[edi]
  418f4e:	push   0x3dbcb1a3
  418f53:	sbb    bl,bl
  418f55:	or     cl,cl
  418f57:	cmp    ebx,DWORD PTR [edi+0x51]
  418f5a:	pop    esi
  418f5b:	push   0xffffffaf
  418f5d:	sbb    dh,BYTE PTR [esi]
  418f5f:	jbe    0x418f69
  418f61:	retf   
  418f62:	mov    bh,0xc9
  418f64:	sub    DWORD PTR [eax-0x61],0x9db246c1
  418f6b:	add    BYTE PTR [edi],dh
  418f6d:	jp     0x418f50
  418f6f:	xchg   esp,eax
  418f70:	dec    edx
  418f71:	add    al,0xd5
  418f73:	and    eax,0x170ca3a3
  418f78:	pop    ds
  418f79:	clc    
  418f7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f7b:	push   ds
  418f7c:	pop    ss
  418f7d:	out    0xa9,al
  418f7f:	out    0x40,al
  418f81:	rol    BYTE PTR [esp+ebp*4],0xa3
  418f85:	fwait
  418f86:	jge    0x418f8e
  418f88:	mov    esi,0xa97982ec
  418f8d:	aad    0x30
  418f8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f90:	sub    eax,0x7163940d
  418f95:	ins    DWORD PTR es:[edi],dx
  418f96:	loope  0x418f3a
  418f98:	mov    eax,ds:0xae3d0c50
  418f9d:	xor    al,0x96
  418f9f:	shr    DWORD PTR [ebp+0x16],0xeb
  418fa3:	jno    0x419015
  418fa5:	repz pop ecx
  418fa7:	(bad)  
  418fa8:	jl     0x418f93
  418faa:	pop    ebp
  418fab:	sar    esp,0xcb
  418fae:	nop
  418faf:	mov    esp,0xf4f279ef
  418fb4:	pop    ecx
  418fb5:	jge    0x418f4a
  418fb7:	into   
  418fb8:	add    BYTE PTR [esi],dh
  418fba:	push   0x45
  418fbc:	dec    edx
  418fbd:	cmp    edx,ecx
  418fbf:	sub    DWORD PTR [esi+edx*8-0x67a7f6e0],eax
  418fc6:	(bad)  
  418fc7:	aas    
  418fc8:	shl    DWORD PTR [esi+0x7b],0xbb
  418fcc:	sub    al,0x65
  418fce:	jl     0x418fc0
  418fd0:	and    eax,0xeba0943c
  418fd5:	cwde   
  418fd6:	inc    ebx
  418fd7:	aas    
  418fd8:	pop    esi
  418fd9:	or     DWORD PTR [esi+0x2a],ebx
  418fdc:	pop    ds
  418fdd:	pop    ebp
  418fde:	fwait
  418fdf:	(bad)  
  418fe0:	aaa    
  418fe1:	pop    es
  418fe2:	or     bh,BYTE PTR [edi+esi*4+0x12]
  418fe6:	rol    eax,0x58
  418fe9:	inc    ebx
  418fea:	enter  0x269b,0x48
  418fee:	(bad)  
  418fef:	pusha  
  418ff0:	jne    0x419038
  418ff2:	mov    bh,0xcb
  418ff4:	nop
  418ff5:	test   al,0x3c
  418ff7:	add    BYTE PTR [ebx],ah
  418ff9:	popa   
  418ffa:	loop   0x418fba
  418ffc:	xor    DWORD PTR [esi],ebp
  418ffe:	repz je 0x418fdc
  419001:	ret    
  419002:	or     al,0xc1
  419004:	and    esp,edx
  419006:	inc    ebp
  419007:	mov    BYTE PTR [ecx],cl
  419009:	cs loop 0x419069
  41900c:	sub    BYTE PTR [ebp-0x89363db],cl
  419012:	pop    edi
  419013:	xchg   edx,eax
  419014:	push   esi
  419015:	push   ebp
  419016:	aas    
  419017:	aad    0x35
  419019:	retf   
  41901a:	inc    ebp
  41901b:	inc    esi
  41901c:	or     dh,BYTE PTR [ebx]
  41901e:	xchg   ecx,eax
  41901f:	rcl    edi,1
  419021:	stos   DWORD PTR es:[edi],eax
  419022:	idiv   BYTE PTR [ebp-0x4d]
  419025:	fcom   DWORD PTR [ebx-0x62]
  419028:	retf   
  419029:	cmp    ebp,esp
  41902b:	sub    al,0xa8
  41902d:	sbb    eax,esp
  41902f:	jno    0x419007
  419031:	and    eax,0x24fcebc3
  419036:	adc    al,BYTE PTR [ebx+0x3]
  419039:	push   es
  41903a:	jnp    0x41905f
  41903c:	idiv   al
  41903e:	xchg   esp,eax
  41903f:	xchg   DWORD PTR [edx+0x62b6a9ce],eax
  419045:	std    
  419046:	(bad)  
  419047:	jmp    0x522c:0xe32225ad
  41904e:	lock pop esp
  419050:	and    al,0xbc
  419052:	mov    eax,0x96e46e20
  419057:	rcr    DWORD PTR [edx],0x5c
  41905a:	ret    
  41905b:	das    
  41905c:	(bad)  
  41905d:	shl    BYTE PTR [ecx],0xae
  419060:	arpl   si,bx
  419062:	popa   
  419063:	gs sbb al,0xc5
  419066:	imul   ebp,esi,0x47
  419069:	fistp  WORD PTR [eax-0x7f904e36]
  41906f:	ficomp WORD PTR [edx+0x4afe02d6]
  419075:	pop    esi
  419076:	xchg   BYTE PTR [edi+0x51133f3a],cl
  41907c:	pop    ebx
  41907d:	pop    esi
  41907e:	sbb    eax,0xf5f9f577
  419083:	out    0x2e,al
  419085:	into   
  419086:	int3   
  419087:	shl    BYTE PTR [eax+0x52f4b9fb],cl
  41908d:	clc    
  41908e:	lahf   
  41908f:	add    BYTE PTR [edi+0x42],bh
  419092:	mov    al,ds:0x5310056d
  419097:	mov    WORD PTR [esi-0x51],?
  41909a:	lds    eax,FWORD PTR [ecx+0x13fce91a]
  4190a0:	xor    eax,0x8947502d
  4190a5:	and    eax,0xf50d132c
  4190aa:	fsubr  QWORD PTR [esi-0x477de9f4]
  4190b0:	popf   
  4190b1:	loope  0x419127
  4190b3:	push   ebp
  4190b4:	jle    0x4190fe
  4190b6:	sub    eax,0xe50e7f29
  4190bb:	int    0xcc
  4190bd:	mov    cl,0x18
  4190bf:	les    ebp,FWORD PTR [edx+0x7a52e17f]
  4190c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190c6:	pop    eax
  4190c7:	mov    cl,0x73
  4190c9:	stc    
  4190ca:	add    BYTE PTR [esi+0x27],al
  4190cd:	repnz dec ecx
  4190cf:	out    0x4b,al
  4190d1:	dec    ecx
  4190d2:	int3   
  4190d3:	push   eax
  4190d4:	jp     0x4190eb
  4190d6:	and    DWORD PTR [ebx+0x72707f40],ecx
  4190dc:	fwait
  4190dd:	mov    ah,0xd7
  4190df:	jg     0x419119
  4190e1:	cmp    al,0x34
  4190e3:	jnp    0x41906a
  4190e5:	jl     0x4190b6
  4190e7:	mov    ecx,0xa76bbf22
  4190ec:	adc    BYTE PTR [ecx],0x78
  4190ef:	fwait
  4190f0:	inc    edx
  4190f1:	xchg   ecx,eax
  4190f2:	mov    bl,0x82
  4190f4:	leave  
  4190f5:	mov    ecx,ss
  4190f7:	or     BYTE PTR [ecx-0x5cb5b31c],bl
  4190fd:	mov    dl,0x3
  4190ff:	and    DWORD PTR [edi+0x16],ecx
  419102:	jb     0x419173
  419104:	mov    ah,0xd1
  419106:	lock mov ebx,0x29ed43ba
  41910c:	mov    WORD PTR [ecx+0x73],fs
  41910f:	jmp    0xc90f:0x50bff16
  419116:	push   ds
  419117:	and    ebx,eax
  419119:	adc    eax,0xf822d
  41911e:	lock xchg esi,eax
  419120:	nop
  419121:	in     al,dx
  419122:	mov    al,0x9b
  419124:	dec    esi
  419125:	icebp  
  419126:	lods   eax,DWORD PTR fs:[esi]
  419128:	aad    0x94
  41912a:	(bad)
  41912e:	out    0x22,eax
  419130:	push   edx
  419131:	int    0xaa
  419133:	adc    ah,BYTE PTR [edi]
  419135:	std    
  419136:	loope  0x419118
  419138:	lds    eax,FWORD PTR [edx-0x360b099b]
  41913e:	shl    DWORD PTR [edx+0x572b2305],1
  419144:	mov    ds:0x4112cc5d,al
  419149:	pop    ss
  41914a:	icebp  
  41914b:	sbb    DWORD PTR ds:0xae8578ac,0x13
  419152:	mov    al,ds:0xc86ddf4c
  419157:	out    0x60,eax
  419159:	add    ch,ah
  41915b:	cmp    eax,0xbd66f64d
  419160:	xchg   DWORD PTR [esi+0x0],ecx
  419163:	lock xchg esi,eax
  419165:	jne    0x41918c
  419167:	xchg   esi,eax
  419168:	bound  edx,QWORD PTR [edi-0x4b]
  41916b:	bound  ebx,QWORD PTR [edx+0x75]
  41916e:	sub    eax,0x73d8055
  419173:	popa   
  419174:	loopne 0x4191ab
  419176:	xchg   esi,eax
  419177:	cmp    DWORD PTR [esi+0x16],edi
  41917a:	bound  ecx,QWORD PTR [esi+0x3908c117]
  419180:	rcl    BYTE PTR [eax*2-0x1af7499],0x33
  419188:	(bad)  
  419189:	mov    ds,WORD PTR [esi+0x5aa9a944]
  41918f:	(bad)  
  419191:	mov    al,ds:0x672e11a0
  419196:	shl    DWORD PTR [edi],1
  419198:	inc    ebx
  419199:	test   BYTE PTR [edx],dh
  41919b:	rol    DWORD PTR [ecx+ebx*1-0x25584b9f],cl
  4191a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191a3:	cwde   
  4191a4:	mov    WORD PTR [ebx+ebx*4+0x10],fs
  4191a8:	or     ch,BYTE PTR [edx]
  4191aa:	inc    edi
  4191ab:	inc    esp
  4191ac:	jnp    0x41921e
  4191ae:	jae    0x4191a9
  4191b0:	cmp    dl,BYTE PTR [ebp-0x5b]
  4191b3:	xchg   edi,esp
  4191b5:	js     0x419145
  4191b7:	sub    BYTE PTR [esi+0x127db6c8],bl
  4191bd:	xchg   ecx,eax
  4191be:	fldcw  WORD PTR [ebx+0x75715b08]
  4191c4:	push   cs
  4191c5:	retf   
  4191c6:	popf   
  4191c7:	(bad)  
  4191c8:	mov    WORD PTR [esi+0x6c],cs
  4191cb:	popa   
  4191cc:	jecxz  0x4191fc
  4191ce:	jge    0x419164
  4191d0:	jmp    DWORD PTR [edx]
  4191d2:	aas    
  4191d3:	cmc    
  4191d4:	mov    ch,0x20
  4191d6:	lds    ecx,FWORD PTR [ecx+0xc18f9e9]
  4191dc:	and    al,0x7c
  4191de:	cs xchg ecx,eax
  4191e0:	add    BYTE PTR [eax+edi*1+0x6a],dl
  4191e4:	cmp    BYTE PTR [ecx+ebx*4],ch
  4191e7:	mov    dl,0x72
  4191e9:	sahf   
  4191ea:	inc    edi
  4191eb:	lds    ecx,FWORD PTR [edi+0x37]
  4191ee:	arpl   WORD PTR [eax],dx
  4191f0:	fisub  DWORD PTR [ebp+0x3f88c754]
  4191f6:	mov    ebp,0xd806225e
  4191fb:	push   es
  4191fc:	std    
  4191fd:	aam    0xf1
  4191ff:	pushf  
  419200:	out    0xe5,eax
  419202:	js     0x41925e
  419204:	js     0x419250
  419206:	icebp  
  419207:	jg     0x419253
  419209:	or     ebp,ebx
  41920b:	(bad)
  419210:	in     al,0x7a
  419212:	xchg   edx,eax
  419213:	add    dl,0x5d
  419216:	cmp    DWORD PTR ds:0x38b1952f,edx
  41921c:	push   ecx
  41921d:	and    DWORD PTR [eax],ecx
  41921f:	pop    ds
  419220:	and    esi,DWORD PTR [edx+esi*8+0x1c]
  419224:	aaa    
  419225:	call   0xbbff:0xf5da817e
  41922c:	and    al,0xf
  41922e:	stos   DWORD PTR es:[edi],eax
  41922f:	mov    bh,0xdd
  419231:	jno    0x419299
  419233:	hlt    
  419234:	dec    ebx
  419235:	push   ds
  419236:	or     eax,0x2098949d
  41923b:	sbb    BYTE PTR [ecx+0x57],bh
  41923e:	stos   BYTE PTR es:[edi],al
  41923f:	adc    al,0xcd
  419241:	popa   
  419242:	mov    eax,ds:0xe32c284a
  419247:	push   ebx
  419248:	jno    0x4192ab
  41924a:	scas   al,BYTE PTR es:[edi]
  41924b:	sub    al,BYTE PTR [edi-0x4]
  41924e:	push   esp
  41924f:	jmp    0xec04e5ee
  419254:	push   ss
  419255:	in     al,0x9
  419257:	xchg   ebx,eax
  419258:	add    BYTE PTR [ebp-0x47],0xf6
  41925c:	dec    esp
  41925d:	dec    esp
  41925e:	and    eax,0xcaf5e5f7
  419263:	mov    bl,0x92
  419265:	ins    BYTE PTR es:[edi],dx
  419266:	mov    al,ds:0xb4f127cb
  41926b:	jno    0x419281
  41926d:	in     eax,dx
  41926e:	mov    edi,0x57fca5f4
  419273:	sahf   
  419274:	xchg   cl,dl
  419276:	xchg   ecx,eax
  419277:	outs   dx,BYTE PTR ds:[esi]
  419278:	pop    edx
  419279:	(bad)  
  41927a:	ss jo  0x419272
  41927d:	lock mov al,ds:0xbfb94e0d
  419283:	push   ebp
  419284:	in     al,dx
  419285:	sbb    DWORD PTR [ebp+0x1d],0x25885f16
  41928c:	adc    bl,BYTE PTR ds:0x92c74cff
  419292:	push   0x44
  419294:	scas   al,BYTE PTR es:[edi]
  419295:	sub    al,0xc8
  419297:	or     eax,0xa929960b
  41929c:	aaa    
  41929d:	sbb    eax,0x4f3a359d
  4192a2:	pusha  
  4192a3:	ret    
  4192a4:	popa   
  4192a5:	sbb    eax,0xf2b8505c
  4192aa:	lea    eax,[edx-0x61]
  4192ad:	hlt    
  4192ae:	pop    ecx
  4192af:	stc    
  4192b0:	cld    
  4192b1:	pusha  
  4192b2:	(bad)  
  4192b3:	push   ebp
  4192b4:	and    esi,DWORD PTR [ecx-0x12]
  4192b7:	inc    ebp
  4192b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192b9:	pop    ecx
  4192ba:	or     esi,DWORD PTR [ecx-0x29]
  4192bd:	xchg   esi,eax
  4192be:	loop   0x419273
  4192c0:	jnp    0x4192e8
  4192c2:	mov    ebp,edi
  4192c4:	jl     0x41926b
  4192c6:	fimul  WORD PTR [ebp+ebp*2+0x8]
  4192ca:	sbb    ebp,DWORD PTR [esi+0x5f63b2d9]
  4192d0:	xchg   edx,eax
  4192d1:	jnp    0x4192d0
  4192d3:	push   ds
  4192d4:	or     ebp,ecx
  4192d6:	dec    edi
  4192d7:	mov    dh,0x25
  4192d9:	sbb    ah,BYTE PTR [esi]
  4192db:	push   0x23
  4192dd:	and    BYTE PTR [ecx],dl
  4192df:	not    eax
  4192e1:	add    al,0x95
  4192e3:	loop   0x41926d
  4192e5:	xchg   esi,eax
  4192e6:	bound  ebx,QWORD PTR [ecx]
  4192e8:	scas   al,BYTE PTR es:[edi]
  4192e9:	inc    ecx
  4192ea:	out    dx,ax
  4192ec:	push   ebx
  4192ed:	test   BYTE PTR [eax],0x0
  4192f0:	add    BYTE PTR [eax],al
  4192f2:	inc    ebp
  4192f3:	push   cs
  4192f4:	retf   0xcb6c
  4192f7:	in     al,dx
  4192f8:	out    0x2f,eax
  4192fa:	dec    ecx
  4192fb:	add    eax,0x62075d81
  419300:	cli    
  419301:	xor    ch,cl
  419303:	sgdtd  [eax]
  419306:	hlt    
  419307:	add    al,0x0
  419309:	add    BYTE PTR [ebp+0x39],al
  41930c:	fisub  DWORD PTR [edx-0x6c]
  41930f:	adc    edi,DWORD PTR [eax]
  419311:	scas   eax,DWORD PTR es:[edi]
  419312:	das    
  419313:	pop    esp
  419314:	jmp    0x419298
  419316:	inc    edx
  419317:	xchg   esp,eax
  419318:	adc    cl,cl
  41931a:	mov    ch,0xa6
  41931c:	adc    eax,0x49be1e55
  419321:	sbb    esi,esp
  419323:	push   edi
  419324:	in     al,0xa6
  419326:	push   cs
  419327:	das    
  419328:	xor    ebp,DWORD PTR [ebp+0x5d]
  41932b:	clc    
  41932c:	xchg   edi,eax
  41932d:	xchg   ebp,eax
  41932e:	repz ja 0x419365
  419331:	int3   
  419332:	inc    esp
  419333:	push   eax
  419334:	sbb    BYTE PTR [ecx+0x65],bl
  419337:	xchg   esp,eax
  419338:	sub    al,0x37
  41933a:	jnp    0x419328
  41933c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41933d:	jbe    0x419367
  41933f:	dec    ebp
  419340:	pop    eax
  419341:	xchg   DWORD PTR [eax+0x69],edx
  419344:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419345:	mov    ah,al
  419347:	(bad)  
  419348:	jp     0x4193b9
  41934a:	loop   0x4192d0
  41934c:	div    eax
  41934e:	jbe    0x41932d
  419350:	imul   eax,DWORD PTR [ebp-0x61ce94a4],0xe636f90f
  41935a:	push   edx
  41935b:	mov    ch,0x9a
  41935d:	push   es
  41935e:	ds mov al,0x7d
  419361:	(bad)  
  419362:	dec    ebp
  419363:	mov    al,0xbd
  419365:	stc    
  419366:	mov    cl,0x91
  419368:	std    
  419369:	sar    DWORD PTR [edx],cl
  41936b:	push   esi
  41936c:	mov    WORD PTR [eax],gs
  41936e:	repz rol DWORD PTR [ecx+0x20],0xc1
  419373:	pop    esi
  419374:	std    
  419375:	fild   QWORD PTR [edi+0x374c4c32]
  41937b:	loope  0x4193b5
  41937d:	pop    ecx
  41937e:	and    DWORD PTR [ebx],ebp
  419380:	add    ch,ah
  419382:	push   eax
  419383:	icebp  
  419384:	mov    ch,0x4c
  419386:	pop    ecx
  419387:	data16 mov ds:0x617574b6,al
  41938d:	push   ss
  41938e:	lds    ecx,FWORD PTR [ebx+0x67]
  419391:	and    BYTE PTR [edi+0xa],dl
  419394:	mov    ah,0xd8
  419396:	push   ebp
  419397:	jnp    0x41935f
  419399:	pushf  
  41939a:	pop    esp
  41939b:	mov    fs,WORD PTR [ebx]
  41939d:	rol    esp,0x44
  4193a0:	pop    ss
  4193a1:	xchg   esi,eax
  4193a2:	fnsave [ebx]
  4193a4:	or     ebx,DWORD PTR [esi]
  4193a6:	pop    es
  4193a7:	jnp    0x419379
  4193a9:	loope  0x419374
  4193ab:	push   ds
  4193ac:	inc    esi
  4193ad:	xchg   edx,eax
  4193ae:	(bad)  
  4193af:	(bad)  
  4193b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193b2:	(bad)  
  4193b3:	and    al,0x3
  4193b5:	xlat   BYTE PTR ds:[ebx]
  4193b6:	fadd   DWORD PTR [ebx]
  4193b8:	clc    
  4193b9:	out    dx,al
  4193ba:	dec    ebp
  4193bb:	push   ss
  4193bc:	and    al,0xe8
  4193be:	jns    0x4193d1
  4193c0:	pop    edi
  4193c1:	jbe    0x419391
  4193c3:	int    0x9e
  4193c5:	inc    ebx
  4193c6:	popf   
  4193c7:	(bad)  
  4193c8:	pop    eax
  4193c9:	ins    BYTE PTR es:[edi],dx
  4193ca:	or     ebx,DWORD PTR [ecx-0x3c]
  4193cd:	sub    esi,DWORD PTR [edx-0x2a023e8]
  4193d3:	dec    ebx
  4193d4:	cmc    
  4193d5:	adc    esi,DWORD PTR [ebp-0x508c6df4]
  4193db:	inc    ebp
  4193dc:	ss fs enter 0xb620,0xf6
  4193e2:	push   esp
  4193e3:	cmp    BYTE PTR [ebp+eax*4+0x31],0x5d
  4193e8:	cmp    al,0xad
  4193ea:	cld    
  4193eb:	(bad)  
  4193ec:	out    0xb2,eax
  4193ee:	dec    edx
  4193ef:	sti    
  4193f0:	cdq    
  4193f1:	pop    edi
  4193f2:	push   ebp
  4193f3:	outs   dx,BYTE PTR ds:[esi]
  4193f4:	dec    esp
  4193f5:	ret    
  4193f6:	cmp    ch,BYTE PTR [esi-0x3b]
  4193f9:	idiv   ch
  4193fb:	imul   ecx,DWORD PTR [ebp+0x53],0x28
  4193ff:	xchg   edi,eax
  419400:	jns    0x41945e
  419402:	xor    DWORD PTR [ebp-0x1e],edx
  419405:	dec    DWORD PTR [ecx+0x47]
  419408:	inc    esp
  419409:	mov    dh,0x54
  41940b:	(bad)  
  41940c:	jbe    0x4193b0
  41940e:	shl    DWORD PTR [edx-0xfe194a4],1
  419414:	adc    DWORD PTR [edx+edx*4+0x5e3e79f9],ecx
  41941b:	mov    edi,0x3202e3ed
  419420:	cmp    BYTE PTR ds:0x6ace1b31,0x9e
  419427:	outs   dx,DWORD PTR ds:[esi]
  419428:	cmc    
  419429:	test   eax,0xc652d119
  41942e:	jbe    0x41943b
  419430:	je     0x41948f
  419432:	xor    edx,esi
  419434:	nop
  419435:	dec    edx
  419436:	shl    DWORD PTR [eax-0x7f9d27b8],cl
  41943c:	pusha  
  41943d:	loopne 0x4194b5
  41943f:	cld    
  419440:	int    0x69
  419442:	dec    ecx
  419443:	cdq    
  419444:	or     DWORD PTR [edi],0x39400e2b
  41944a:	xor    bh,BYTE PTR [ebx]
  41944c:	inc    edi
  41944d:	pop    esp
  41944e:	out    dx,eax
  41944f:	cdq    
  419450:	inc    ebp
  419451:	mov    ebx,0x799054f0
  419456:	xchg   ecx,eax
  419457:	popf   
  419458:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419459:	xor    BYTE PTR [ebp+ebx*1+0x63],bl
  41945d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41945e:	mov    ch,0x84
  419460:	fisttp WORD PTR [eax]
  419462:	jnp    0x4194d7
  419464:	jge    0x419404
  419466:	je     0x419481
  419468:	ds loope 0x4194a5
  41946b:	outs   dx,DWORD PTR ds:[esi]
  41946c:	mov    esp,es
  41946e:	dec    esi
  41946f:	pop    ds
  419470:	add    eax,0x18430992
  419475:	je     0x4194c5
  419477:	and    bl,ch
  419479:	div    BYTE PTR [ecx-0x6ec03427]
  41947f:	rcl    BYTE PTR [ecx-0x4f],1
  419482:	fld    DWORD PTR [edi+0xc850e57]
  419488:	and    BYTE PTR [eax-0x5b03398c],cl
  41948e:	add    bh,BYTE PTR [edx+0x72]
  419491:	ss pushf 
  419493:	xor    ebp,esi
  419495:	std    
  419496:	xor    cl,ch
  419498:	mov    cl,0x20
  41949a:	sahf   
  41949b:	retf   
  41949c:	inc    eax
  41949d:	push   ebp
  41949e:	xchg   esp,eax
  41949f:	xchg   esi,eax
  4194a0:	adc    DWORD PTR [esi],ebp
  4194a2:	xlat   BYTE PTR ds:[ebx]
  4194a3:	es dec esi
  4194a5:	cmp    al,0x29
  4194a7:	and    al,0xa3
  4194a9:	and    DWORD PTR [ebp+0x6ea53c49],0x17ccb956
  4194b3:	dec    eax
  4194b4:	movsx  ebp,BYTE PTR [ebx]
  4194b7:	mov    ?,WORD PTR [ecx+0x6a]
  4194ba:	xchg   edi,eax
  4194bb:	mov    esi,0xbe58aa60
  4194c0:	shl    eax,0x75
  4194c3:	scas   eax,DWORD PTR es:[edi]
  4194c4:	jb     0x4194f4
  4194c6:	in     al,dx
  4194c7:	push   ebx
  4194c8:	les    esp,FWORD PTR [ebx]
  4194ca:	jmp    0x6de5:0x30b566c3
  4194d1:	pop    ecx
  4194d2:	sub    DWORD PTR [ebx-0x44005a0],edi
  4194d8:	push   ss
  4194d9:	pusha  
  4194da:	adc    eax,0x8a8cd00c
  4194df:	xchg   edx,eax
  4194e0:	xlat   BYTE PTR ds:[ebx]
  4194e1:	xchg   DWORD PTR [ebp-0x2dd8293c],edx
  4194e7:	in     al,0x77
  4194e9:	xchg   esp,eax
  4194eb:	dec    ebx
  4194ec:	push   esi
  4194ed:	mov    ecx,DWORD PTR [ecx]
  4194ef:	mov    cl,0x92
  4194f1:	or     BYTE PTR [ebx],dl
  4194f3:	enter  0xa867,0x90
  4194f7:	xor    esi,DWORD PTR [edx-0x500e300f]
  4194fd:	xchg   BYTE PTR [esi],bh
  4194ff:	loope  0x419548
  419501:	xor    al,0x2e
  419503:	out    0x20,al
  419505:	jp     0x419513
  419507:	sbb    DWORD PTR [ecx+eiz*8+0xf],0x76
  41950c:	test   eax,0x5a2834b8
  419511:	sahf   
  419512:	xchg   esp,eax
  419513:	loopne 0x419580
  419515:	ins    DWORD PTR es:[edi],dx
  419516:	jne    0x419528
  419518:	pop    ecx
  419519:	loope  0x41950c
  41951b:	pop    ss
  41951c:	mov    ah,0x1a
  41951e:	pusha  
  41951f:	ret    0x7516
  419522:	sbb    bh,BYTE PTR [esi-0x72]
  419525:	add    DWORD PTR [ecx],ebx
  419527:	sbb    al,0x2a
  419529:	stos   BYTE PTR es:[edi],al
  41952a:	mov    BYTE PTR [ebp-0x76],ch
  41952d:	inc    ecx
  41952e:	lds    edx,FWORD PTR [eax-0x2a]
  419531:	ins    BYTE PTR es:[edi],dx
  419532:	sub    DWORD PTR [ecx+0x60a249f9],edi
  419538:	(bad)  
  41953a:	sub    BYTE PTR [ebx+0x39144ef8],cl
  419540:	jo     0x4194f8
  419542:	out    0xd0,eax
  419544:	cdq    
  419545:	je     0x419537
  419547:	fdiv   QWORD PTR [ebp-0x3c6aa155]
  41954d:	adc    eax,0x22bc96cf
  419552:	cdq    
  419553:	cmp    edi,esi
  419555:	aam    0xd7
  419557:	hlt    
  419558:	sbb    BYTE PTR [ebx+0x73],bl
  41955b:	mov    bl,0xb0
  41955d:	dec    ebx
  41955e:	stos   BYTE PTR es:[edi],al
  41955f:	xchg   edi,eax
  419560:	pop    ds
  419561:	dec    ebp
  419562:	or     dl,ch
  419564:	loopne 0x419572
  419566:	xchg   dh,bh
  419568:	or     ebx,DWORD PTR [ebx-0x54f57f1a]
  41956e:	enter  0x5dc1,0x8c
  419572:	loope  0x41956e
  419574:	sbb    DWORD PTR [eax-0x61],ebp
  419577:	(bad)  
  419578:	dec    edi
  419579:	mov    ch,0xae
  41957b:	add    al,0x48
  41957d:	mov    al,bh
  41957f:	pop    ecx
  419580:	cmp    eax,0xedb0ad8f
  419585:	dec    edx
  419586:	aas    
  419587:	arpl   WORD PTR [edx+ecx*4],di
  41958a:	and    BYTE PTR [eax+0x32566bd6],dl
  419590:	fimul  DWORD PTR [edi-0x41]
  419593:	shr    DWORD PTR [ebx+esi*2+0x28275333],1
  41959a:	push   ebx
  41959b:	jl     0x4195cc
  41959d:	push   0xbb841c
  4195a2:	fs jns 0x4195a0
  4195a5:	test   al,0xab
  4195a7:	imul   edi,DWORD PTR [ebp+0x6e766954],0x52
  4195ae:	mov    cl,0xa7
  4195b0:	xchg   ecx,eax
  4195b1:	repz pop ds
  4195b3:	xchg   ah,ah
  4195b5:	or     eax,0xa69ec126
  4195ba:	vmread DWORD PTR [eax-0x580b215d],ebp
  4195c1:	jle    0x419562
  4195c3:	jle    0x4195f7
  4195c5:	fwait
  4195c6:	jmp    0x3503:0x29fa0d6
  4195cd:	xchg   DWORD PTR [edi-0xb],ebx
  4195d0:	inc    esp
  4195d1:	pop    DWORD PTR [eax+0xb]
  4195d4:	push   esi
  4195d5:	and    DWORD PTR [edi+0xb4e4037],esp
  4195db:	inc    edx
  4195dc:	fwait
  4195dd:	jns    0x41960a
  4195df:	pop    ebp
  4195e0:	rol    DWORD PTR [esi+0x35],1
  4195e3:	jo     0x41961b
  4195e5:	shl    bl,cl
  4195e7:	idiv   BYTE PTR [edx-0x4e]
  4195ea:	mov    WORD PTR [ebx+0x2],ss
  4195ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195ee:	(bad)  [ebx+ebp*8]
  4195f1:	dec    edx
  4195f2:	push   0xffffffa6
  4195f4:	push   ecx
  4195f5:	std    
  4195f6:	shl    DWORD PTR [edi],1
  4195f8:	or     eax,0x9bb73ecc
  4195fd:	test   DWORD PTR [edi+0x48],edx
  419600:	inc    ebp
  419601:	xor    DWORD PTR [ecx+eax*4+0x46d53160],edx
  419608:	and    ebx,DWORD PTR [eax]
  41960a:	push   0x40
  41960c:	mov    eax,ds:0xa1854292
  419611:	rol    BYTE PTR [ecx],0x41
  419614:	xchg   esi,eax
  419615:	mov    edi,DWORD PTR [edx+0x73]
  419618:	enter  0xa35f,0x6c
  41961c:	mov    eax,cs
  41961e:	mov    bl,0x56
  419620:	sbb    al,BYTE PTR [edi-0x39cfa491]
  419626:	jns    0x4195c4
  419628:	retf   
  419629:	out    0x50,al
  41962b:	addr16 add eax,0xffffff91
  41962f:	sbb    bl,bl
  419631:	sti    
  419632:	xchg   edi,eax
  419633:	leave  
  419634:	sbb    ah,BYTE PTR [esi+0x62eee3c7]
  41963a:	retf   0xa59e
  41963d:	pop    ss
  41963e:	jl     0x419648
  419640:	(bad)  
  419641:	out    dx,eax
  419642:	or     dh,BYTE PTR [ecx-0x550a4ad4]
  419648:	aam    0x7b
  41964a:	(bad)  
  41964b:	sti    
  41964c:	xchg   edi,eax
  41964d:	xor    BYTE PTR [ebp+0x6d],bl
  419650:	je     0x419634
  419652:	jg     0x419611
  419654:	mov    ah,0x6e
  419656:	or     eax,0x37c45e57
  41965b:	(bad)  
  41965c:	enter  0x7b76,0x24
  419660:	or     bl,dh
  419662:	clc    
  419663:	adc    cl,BYTE PTR [edi]
  419665:	retf   0x8359
  419668:	out    dx,eax
  419669:	mov    cl,0x5b
  41966b:	hlt    
  41966c:	cld    
  41966d:	retf   
  41966e:	add    ebp,ebp
  419670:	ret    0x6718
  419673:	js     0x41960e
  419675:	or     eax,0x751199aa
  41967a:	inc    esi
  41967b:	cmp    al,0xc0
  41967d:	jb     0x419698
  41967f:	mov    ebx,DWORD PTR [ecx]
  419681:	or     dh,0xe2
  419684:	xchg   dh,ah
  419686:	mov    BYTE PTR ds:0x9afde215,dl
  41968c:	cmc    
  41968d:	jmp    0xca91feec
  419692:	call   0xf8be5d22
  419697:	and    al,0x7b
  419699:	in     eax,dx
  41969a:	adc    bl,BYTE PTR [esp+ebp*4-0x6af2f393]
  4196a1:	fs cmp eax,0x60378084
  4196a7:	sahf   
  4196a8:	pop    ebp
  4196a9:	mov    dh,0x58
  4196ab:	ss mov al,0x9b
  4196ae:	and    eax,0xa8e655b6
  4196b3:	daa    
  4196b4:	adc    DWORD PTR [esi],edx
  4196b6:	xchg   ebp,eax
  4196b7:	std    
  4196b8:	pop    eax
  4196b9:	sub    eax,0x83c51a15
  4196be:	cmp    DWORD PTR [edx+0x69],0xffffffc0
  4196c2:	mov    dh,BYTE PTR [eax]
  4196c4:	into   
  4196c5:	xchg   BYTE PTR [ecx+0x5e31f380],dh
  4196cb:	inc    esp
  4196cc:	cmp    BYTE PTR [ecx+0x66a1a543],bh
  4196d2:	mov    ds:0xfb1ed26f,al
  4196d7:	lods   al,BYTE PTR ds:[esi]
  4196d8:	or     eax,DWORD PTR [edx]
  4196da:	pop    ebp
  4196db:	sbb    ecx,ecx
  4196dd:	inc    ecx
  4196de:	imul   edi,DWORD PTR [ebx+0x26],0x87a8d81c
  4196e5:	mov    ?,WORD PTR [ebx+0x1]
  4196e8:	push   ecx
  4196e9:	in     eax,0x17
  4196eb:	xor    DWORD PTR [eax+0x18],edi
  4196ee:	in     eax,dx
  4196ef:	popf   
  4196f0:	inc    edi
  4196f1:	sub    ebx,DWORD PTR [eax+0x6]
  4196f4:	dec    edx
  4196f5:	rcr    BYTE PTR [ecx+0x2f743f31],0x4c
  4196fc:	out    0x74,al
  4196fe:	dec    edi
  4196ff:	icebp  
  419700:	adc    esi,edx
  419702:	es in  al,dx
  419704:	sti    
  419705:	bound  ecx,QWORD PTR [ebx-0x9]
  419708:	push   es
  419709:	pop    edx
  41970a:	xchg   ebp,eax
  41970b:	mov    edx,DWORD PTR [edx+0x7a252e32]
  419711:	(bad)  [ecx-0x6a]
  419714:	or     DWORD PTR [ecx],eax
  419716:	xor    edx,DWORD PTR gs:[ebp-0x2c]
  41971a:	std    
  41971b:	adc    bl,bl
  41971d:	js     0x4196d7
  41971f:	push   esp
  419720:	mov    ch,0x44
  419722:	iret   
  419723:	add    BYTE PTR [eax-0x12],ah
  419726:	push   0xe
  419728:	ja     0x419728
  41972a:	ds lahf 
  41972c:	cmp    ecx,DWORD PTR [ebx-0x1534cf84]
  419732:	push   ss
  419733:	and    esi,DWORD PTR ss:0xd9664bed
  41973a:	mov    edx,0xd83de3a8
  41973f:	enter  0xb0ec,0xad
  419743:	xchg   ebp,eax
  419744:	add    esp,DWORD PTR [ebp+0x147b358f]
  41974a:	mov    al,BYTE PTR [ebx]
  41974c:	imul   edx,DWORD PTR [ebx+0x1a],0xffffffd2
  419750:	shr    ch,1
  419752:	jecxz  0x419739
  419754:	out    0xb0,eax
  419756:	push   esi
  419757:	aas    
  419758:	stos   BYTE PTR es:[edi],al
  419759:	pop    es
  41975a:	jno    0x419723
  41975c:	sbb    cl,dl
  41975e:	sbb    BYTE PTR [ebp+0x2636bbad],cl
  419764:	jb     0x419795
  419766:	test   BYTE PTR [esi-0x60],al
  419769:	call   0xfe3bcb03
  41976e:	sub    bl,BYTE PTR [ecx+0x66]
  419771:	loopne 0x41974d
  419773:	or     bh,BYTE PTR [edx+0x22]
  419776:	lock and BYTE PTR [edx+0x499b56d3],al
  41977d:	loopne 0x4197c7
  41977f:	idiv   BYTE PTR [edx+0x3528fe96]
  419785:	inc    edx
  419786:	mov    eax,ds:0x5c7d442d
  41978b:	or     al,0xa9
  41978d:	mov    eax,ds:0xe942a45b
  419792:	cld    
  419793:	hlt    
  419794:	cdq    
  419795:	ins    BYTE PTR es:[edi],dx
  419796:	mov    ebp,eax
  419798:	pop    esp
  419799:	mov    ebp,0xc62c2e9f
  41979e:	xchg   BYTE PTR [ebx+0x7b],dl
  4197a1:	mov    eax,0x3cf281ce
  4197a6:	inc    esi
  4197a7:	popf   
  4197a8:	add    eax,0xfa716dfd
  4197ad:	mov    dl,0xb0
  4197af:	pop    esp
  4197b0:	mov    dl,0x8a
  4197b2:	repz mov dl,0x97
  4197b5:	xchg   DWORD PTR [eax+0x2f],esi
  4197b8:	int3   
  4197b9:	jge    0x4197d8
  4197bb:	es inc ebx
  4197bd:	arpl   WORD PTR [ebp+ecx*1-0x1cf7132d],dx
  4197c4:	bound  esp,QWORD PTR [edi]
  4197c6:	sub    BYTE PTR [edi],bh
  4197c8:	mov    cl,0x85
  4197ca:	add    BYTE PTR ds:0xf18cadf,dl
  4197d0:	push   esi
  4197d1:	xor    DWORD PTR [eax],ebx
  4197d3:	fadd   DWORD PTR [ebp+0x17bc9e6e]
  4197d9:	jb     0x4197d6
  4197db:	test   DWORD PTR [edx+0x202537f1],esi
  4197e1:	add    BYTE PTR [ebx],dl
  4197e3:	jae    0x419780
  4197e5:	das    
  4197e6:	add    ebp,ebx
  4197e8:	mov    ecx,0x8bffa5e8
  4197ed:	and    ebp,DWORD PTR [edi]
  4197ef:	out    dx,eax
  4197f0:	jmp    0x55fbdf3b
  4197f5:	pop    ebx
  4197f6:	xor    BYTE PTR [ebp-0x7e],dl
  4197f9:	cmp    DWORD PTR [ebx-0x24],esp
  4197fc:	dec    edi
  4197fd:	jmp    0x4197ff
  4197ff:	add    BYTE PTR [eax],al
  419801:	add    BYTE PTR [ecx+ebp*8],dl
  419804:	je     0x41982a
  419806:	std    
  419807:	mov    ebp,0x2ac7f954
  41980c:	(bad)  
  41980d:	shl    BYTE PTR [ecx],1
  41980f:	das    
  419810:	imul   edx,esp,0xffffffdd
  419813:	adc    al,0x1
  419815:	add    ah,dh
  419817:	add    al,0x0
  419819:	add    BYTE PTR [esi+eiz*1],al
  41981c:	(bad)
  41981f:	fisub  DWORD PTR [esi-0x2a4cde55]
  419825:	daa    
  419826:	js     0x419819
  419828:	adc    DWORD PTR [ebx],0xfc5d006c
  41982e:	xchg   esi,eax
  41982f:	push   esi
  419830:	lods   eax,DWORD PTR ds:[esi]
  419831:	dec    esp
  419832:	addr16 jo 0x419800
  419835:	cmp    eax,0x94f6c092
  41983a:	adc    al,0x7c
  41983c:	rol    DWORD PTR [esp+ebx*8],1
  41983f:	mov    bl,BYTE PTR [edx]
  419841:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419842:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419843:	pop    edi
  419844:	stos   DWORD PTR es:[edi],eax
  419845:	imul   esp,esp,0x6b0d6476
  41984b:	jmp    0xf670259d
  419850:	inc    ecx
  419851:	in     eax,dx
  419852:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419853:	out    0x6,al
  419855:	bound  ecx,QWORD PTR [esi*2+0x3ad84f46]
  41985c:	imul   esp,DWORD PTR [esi],0xdd23eb52
  419862:	mov    ds:0x13dd63f4,eax
  419867:	jmp    0xf577:0x2bf44359
  41986e:	repz in al,dx
  419870:	mov    eax,0x3709e1a
  419875:	mov    dl,0xe7
  419877:	jno    0x41984c
  419879:	cmp    eax,0x51e882b0
  41987e:	int3   
  41987f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419880:	mov    ds:0xd3a474eb,al
  419885:	jl     0x419889
  419887:	cmp    eax,0x62c20501
  41988c:	cld    
  41988d:	cmp    BYTE PTR es:[esi],dh
  419890:	push   ds
  419891:	dec    esp
  419892:	push   es
  419893:	or     al,BYTE PTR [esi]
  419895:	(bad)  
  419896:	push   eax
  419897:	addr16 sub al,0xd
  41989a:	outs   dx,DWORD PTR ds:[esi]
  41989b:	sti    
  41989c:	fist   DWORD PTR [edi]
  41989e:	xchg   edx,eax
  41989f:	push   ds
  4198a0:	xor    DWORD PTR [edx-0x5c],ebp
  4198a3:	push   es
  4198a4:	pop    ds
  4198a5:	jnp    0x41989f
  4198a7:	sub    edx,0xffffffe7
  4198aa:	add    al,BYTE PTR [edi]
  4198ac:	rcl    BYTE PTR [eax+ebp*2-0x7cbb898f],1
  4198b3:	pop    edi
  4198b4:	sbb    esp,esp
  4198b6:	mov    eax,ds:0x8ac4d834
  4198bb:	jg     0x4198f9
  4198bd:	dec    ebp
  4198be:	xor    dh,BYTE PTR [esi+0x74]
  4198c1:	test   al,0x9e
  4198c3:	jl     0x419926
  4198c5:	loopne 0x4198bf
  4198c7:	adc    ebx,DWORD PTR [ebp-0x575fd0b6]
  4198cd:	jle    0x419855
  4198cf:	sub    eax,0x4d9932f5
  4198d4:	cmp    eax,0xa16a5c6a
  4198d9:	push   edi
  4198da:	push   eax
  4198db:	dec    ecx
  4198dc:	push   cs
  4198dd:	dec    ecx
  4198de:	out    dx,al
  4198df:	in     al,dx
  4198e0:	push   eax
  4198e1:	je     0x4198a8
  4198e3:	lods   al,BYTE PTR ds:[esi]
  4198e4:	mov    ds:0xdd52b27b,eax
  4198e9:	add    DWORD PTR [ebp-0x4a87337],0xce0c6193
  4198f3:	or     eax,0x74d869a8
  4198f8:	xor    eax,0x4f5e1234
  4198fd:	sub    DWORD PTR [edx+0x817195b],esp
  419903:	inc    ebp
  419904:	shl    dl,1
  419906:	out    dx,eax
  419907:	repz clc 
  419909:	cmp    BYTE PTR ds:0x1c8c055c,al
  41990f:	mov    ah,0x73
  419911:	xchg   edx,eax
  419912:	dec    esi
  419913:	cmp    edx,DWORD PTR [ecx]
  419915:	xchg   ebx,eax
  419916:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419917:	mov    edi,0x804dcfba
  41991c:	and    al,0x74
  41991e:	jb     0x419986
  419920:	ins    BYTE PTR es:[edi],dx
  419921:	shl    cl,1
  419923:	cmc    
  419924:	sbb    ecx,edx
  419926:	push   ss
  419927:	out    dx,al
  419928:	push   es
  419929:	pop    DWORD PTR [esi]
  41992b:	dec    edx
  41992c:	and    bh,BYTE PTR [edi]
  41992e:	inc    ebp
  41992f:	pop    es
  419930:	fist   DWORD PTR [ebp-0x4f]
  419933:	mov    bh,0xe5
  419935:	stos   BYTE PTR es:[edi],al
  419936:	xchg   esp,eax
  419937:	xchg   ebx,eax
  419938:	adc    edx,DWORD PTR [edi+ebx*8+0x2d76ccf2]
  41993f:	jmp    0x840b1b32
  419944:	or     al,0xe6
  419946:	mov    BYTE PTR [ecx-0x4c],dl
  419949:	ret    
  41994a:	inc    ecx
  41994b:	cdq    
  41994c:	popa   
  41994d:	jns    0x419934
  41994f:	loop   0x419924
  419951:	sti    
  419952:	xchg   ebx,eax
  419953:	push   ecx
  419954:	clc    
  419955:	int3   
  419956:	jecxz  0x419917
  419958:	aas    
  419959:	int3   
  41995a:	lods   al,BYTE PTR ds:[esi]
  41995b:	jnp    0x41990a
  41995d:	data16 jbe 0x4199cc
  419960:	sbb    eax,0xbace538a
  419965:	mov    cl,0x89
  419967:	shr    DWORD PTR [edx],0x79
  41996a:	scas   al,BYTE PTR es:[edi]
  41996b:	add    ecx,DWORD PTR [ebx-0x7778a299]
  419971:	enter  0x10a8,0x21
  419975:	jmp    0x9eefed33
  41997a:	fsubr  QWORD PTR [esi]
  41997c:	mov    al,ds:0xee6a899b
  419981:	pop    ss
  419982:	call   0xc848:0xaa33745
  419989:	enter  0xa4ac,0xb9
  41998d:	jmp    0x41999c
  41998f:	addr16 sbb eax,ebp
  419992:	jmp    0x470e:0xb3489a1c
  419999:	test   al,0x7f
  41999b:	sbb    dh,BYTE PTR [ebx-0x3e6140af]
  4199a1:	mov    dl,BYTE PTR [ecx+0x7e]
  4199a4:	cmp    DWORD PTR [eax+0x7d3f6292],esp
  4199aa:	or     DWORD PTR [ebx-0x26],esi
  4199ad:	jns    0x4199db
  4199af:	pop    ss
  4199b0:	xor    al,0xb7
  4199b2:	hlt    
  4199b3:	fld    QWORD PTR [ecx-0x667fb7ec]
  4199b9:	dec    edx
  4199ba:	adc    ah,BYTE PTR [edi]
  4199bc:	jae    0x419967
  4199be:	cmp    dl,BYTE PTR [edi-0x3a]
  4199c1:	test   BYTE PTR [ebx],bh
  4199c3:	adc    ebp,ebp
  4199c5:	adc    eax,ecx
  4199c7:	xchg   esi,eax
  4199c8:	push   ebp
  4199c9:	out    dx,al
  4199ca:	dec    esi
  4199cb:	cs fwait
  4199cd:	inc    ebp
  4199ce:	jle    0x419a1b
  4199d0:	out    0x78,eax
  4199d2:	test   al,0x44
  4199d4:	and    bh,al
  4199d6:	retf   
  4199d7:	cmp    edx,esi
  4199d9:	push   edx
  4199da:	fnsave [esi]
  4199dc:	sar    bh,1
  4199de:	sar    BYTE PTR [eax+ebp*1-0x67741586],0x69
  4199e6:	aaa    
  4199e7:	inc    ebx
  4199e8:	add    eax,0x23823779
  4199ed:	cmp    eax,0xa0d9bb07
  4199f2:	inc    edi
  4199f3:	fmul   QWORD PTR ds:0xa832fd18
  4199f9:	mov    ah,cl
  4199fb:	test   al,0x36
  4199fd:	push   ebx
  4199fe:	push   ecx
  4199ff:	shr    BYTE PTR [ebx-0x63233935],0x75
  419a06:	aad    0x5f
  419a08:	lods   eax,DWORD PTR ds:[esi]
  419a09:	and    ecx,DWORD PTR [ecx]
  419a0b:	jmp    0xdb1b:0x7698fed
  419a12:	sub    cl,BYTE PTR [edx+0x1bb75662]
  419a18:	cs pop esi
  419a1a:	es sub esi,edi
  419a1d:	fbld   TBYTE PTR [ebx+0x6e]
  419a20:	mov    esi,0xdcbfcb88
  419a25:	jmp    0x419a40
  419a27:	hlt    
  419a28:	cs jg  0x419a46
  419a2b:	popf   
  419a2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a2d:	in     al,0x10
  419a2f:	cwde   
  419a30:	cli    
  419a31:	aad    0x16
  419a33:	test   BYTE PTR [edx],dl
  419a35:	cli    
  419a36:	pop    edx
  419a37:	ret    0x31b7
  419a3a:	jo     0x419a99
  419a3c:	push   0xffffffab
  419a3e:	xchg   DWORD PTR [edx+ebp*1],edi
  419a41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a42:	pop    edi
  419a43:	cmp    al,0xa6
  419a45:	gs int3 
  419a47:	leave  
  419a48:	ss sbb dh,bl
  419a4b:	out    0x9e,eax
  419a4d:	je     0x419a50
  419a4f:	cdq    
  419a50:	add    BYTE PTR [eax-0x19],dl
  419a53:	and    DWORD PTR [edx+0x10],ebp
  419a56:	retf   0xa81d
  419a59:	test   dh,bl
  419a5b:	jle    0x419a6b
  419a5d:	loope  0x419a6e
  419a5f:	xchg   BYTE PTR [eax+0x3f94b5d7],ah
  419a65:	jmp    FWORD PTR [ebp+0xf]
  419a68:	loop   0x419a72
  419a6a:	stos   DWORD PTR es:[edi],eax
  419a6b:	je     0x419abd
  419a6d:	fcom   DWORD PTR [ecx+0x48]
  419a70:	jg     0x4199f4
  419a72:	mov    cl,0xfa
  419a74:	push   edx
  419a75:	cli    
  419a76:	test   DWORD PTR [ecx],edx
  419a78:	out    dx,al
  419a79:	pop    ebp
  419a7a:	push   ds
  419a7b:	outs   dx,BYTE PTR ds:[esi]
  419a7c:	pop    esp
  419a7d:	and    al,0x9a
  419a7f:	pop    esi
  419a80:	mov    ds:0x7fa3d518,eax
  419a85:	in     al,dx
  419a86:	and    ah,BYTE PTR [ebx-0x58d7a515]
  419a8c:	inc    eax
  419a8d:	dec    edi
  419a8e:	pop    ebx
  419a8f:	mov    dl,0xf7
  419a91:	test   DWORD PTR [eax],esp
  419a93:	cmp    DWORD PTR [edx],0xe81f2059
  419a99:	sbb    ecx,ebx
  419a9b:	push   eax
  419a9c:	push   eax
  419a9d:	pop    ecx
  419a9e:	jle    0x419a2b
  419aa0:	push   0xffffffe8
  419aa2:	sub    eax,0xab827703
  419aa7:	or     esi,DWORD PTR ds:0x446e2548
  419aad:	ja     0x419acd
  419aaf:	push   ss
  419ab0:	push   edi
  419ab1:	jmp    0x73c4:0x746dbade
  419ab8:	or     bh,BYTE PTR [edi]
  419aba:	xchg   esi,eax
  419abb:	add    DWORD PTR [ecx-0x70],eax
  419abe:	pop    ebx
  419abf:	data16 daa 
  419ac1:	cmc    
  419ac2:	jns    0x419a4e
  419ac4:	scas   al,BYTE PTR es:[edi]
  419ac5:	retf   
  419ac6:	les    esp,FWORD PTR [eax]
  419ac8:	mov    BYTE PTR [ecx],cl
  419aca:	retf   0x4f50
  419acd:	sub    ebx,DWORD PTR [edx]
  419acf:	sbb    al,0xa3
  419ad1:	pushf  
  419ad2:	or     ebx,0x59c7f1cf
  419ad8:	jns    0x419b17
  419ada:	push   edx
  419adb:	mov    WORD PTR ds:0x2d073fbe,fs
  419ae1:	mov    bl,0xd1
  419ae3:	dec    esi
  419ae4:	shl    BYTE PTR [eax+0x43],cl
  419ae7:	ret    0xd995
  419aea:	(bad)  
  419aeb:	cld    
  419aec:	jmp    0xcdbf:0x84ff01f9
  419af3:	addr16 pop edx
  419af5:	mov    ss,WORD PTR [edx+0x4ea07ebb]
  419afb:	xor    ch,BYTE PTR ds:0x4619af3d
  419b01:	push   ss
  419b02:	stc    
  419b03:	rcl    BYTE PTR [edx],1
  419b05:	test   DWORD PTR [edi+0x32],edi
  419b08:	jb     0x419aba
  419b0a:	sbb    eax,0x5d42dfe3
  419b0f:	inc    eax
  419b10:	int3   
  419b11:	pop    ebp
  419b12:	mov    WORD PTR [esi-0x367dad95],?
  419b18:	loope  0x419ad3
  419b1a:	dec    esi
  419b1b:	cmp    dl,dl
  419b1d:	or     al,0xe7
  419b1f:	and    BYTE PTR [eax-0x45511fea],ah
  419b25:	shl    dl,0x10
  419b28:	push   edx
  419b29:	fadd   DWORD PTR [edi+eax*8-0x3694fc64]
  419b30:	mov    bl,0xc9
  419b32:	mov    bh,0xed
  419b34:	or     esp,DWORD PTR [esi+0x24]
  419b37:	dec    edi
  419b38:	and    DWORD PTR [ecx],0x47
  419b3b:	popf   
  419b3c:	int    0x6b
  419b3e:	sub    bh,dh
  419b40:	add    BYTE PTR [ebp-0x60],ah
  419b43:	je     0x419ba1
  419b45:	mov    ebx,0x1320bb71
  419b4a:	aam    0xc6
  419b4c:	add    ecx,ecx
  419b4e:	arpl   WORD PTR [ebx+0x65b7fac4],cx
  419b54:	sti    
  419b55:	push   es
  419b56:	out    dx,eax
  419b57:	push   0xffffffa9
  419b59:	adc    edx,DWORD PTR [esi]
  419b5b:	dec    esi
  419b5c:	push   ebp
  419b5d:	push   esp
  419b5e:	mov    cl,0x48
  419b60:	idiv   bl
  419b62:	jae    0x419b0a
  419b64:	push   esi
  419b65:	std    
  419b66:	das    
  419b67:	cmp    al,BYTE PTR [eax-0x1d]
  419b6a:	pushf  
  419b6b:	pop    esi
  419b6c:	push   ecx
  419b6d:	mov    bl,ah
  419b6f:	push   ss
  419b70:	into   
  419b71:	sub    eax,0x9dad7b08
  419b76:	xor    ch,dl
  419b78:	std    
  419b79:	pop    edx
  419b7a:	imul   ebx,DWORD PTR [esi-0x33],0xc42c77c5
  419b81:	scas   eax,DWORD PTR es:[edi]
  419b82:	scas   al,BYTE PTR es:[edi]
  419b83:	ret    
  419b84:	int3   
  419b85:	imul   esi,ebx,0xbc37e389
  419b8b:	xchg   BYTE PTR [edi-0x1eec5fc3],ch
  419b91:	sub    eax,0xe66eb512
  419b96:	or     BYTE PTR [eax],cl
  419b98:	xor    DWORD PTR [edx+0x6eb786a5],esi
  419b9e:	sub    eax,0x36ce3a0b
  419ba3:	mov    edx,0x5c7ec564
  419ba8:	ss repz mov dh,dh
  419bac:	pop    ebp
  419bad:	pop    esi
  419bae:	and    dl,BYTE PTR [edx]
  419bb0:	(bad)
  419bb3:	loop   0x419ba8
  419bb5:	mov    ch,0x34
  419bb7:	ss inc ebx
  419bb9:	cdq    
  419bba:	and    al,0xa9
  419bbc:	jo     0x419bdf
  419bbe:	xchg   esi,eax
  419bbf:	pop    esi
  419bc0:	cmp    al,0x73
  419bc2:	mov    ah,0x30
  419bc4:	(bad)  
  419bc6:	xor    BYTE PTR [edi-0x561d30ae],0xee
  419bcd:	add    edi,0x701373c4
  419bd3:	inc    edx
  419bd4:	and    DWORD PTR [edi-0x3bc41c42],ebx
  419bda:	add    al,0x28
  419bdc:	in     eax,dx
  419bdd:	push   0x6a
  419bdf:	std    
  419be0:	cs imul ebx,DWORD PTR cs:[eax-0x2],0x74
  419be6:	mov    ebp,0x664b469d
  419beb:	jno    0x419bdd
  419bed:	aaa    
  419bee:	inc    eax
  419bef:	jp     0x419c20
  419bf1:	sub    BYTE PTR [edi-0x38],al
  419bf4:	push   ecx
  419bf5:	jne    0x419bc3
  419bf7:	std    
  419bf8:	adc    eax,0xe7f7fd78
  419bfd:	mov    dl,bh
  419bff:	xchg   ebx,eax
  419c00:	ja     0x419c23
  419c02:	les    ebx,FWORD PTR [edi+edi*4-0x79a6d1f7]
  419c09:	in     al,dx
  419c0a:	mov    cl,0xcf
  419c0c:	push   ebp
  419c0d:	cmp    eax,0x5e423578
  419c12:	xor    BYTE PTR [edx-0x1f8ba6b3],cl
  419c18:	jmp    0x536b:0x6bf54658
  419c1f:	je     0x419c64
  419c21:	dec    eax
  419c22:	pop    edx
  419c23:	xchg   DWORD PTR [esi],eax
  419c25:	stc    
  419c26:	lahf   
  419c27:	bound  ebx,QWORD PTR [edx]
  419c29:	jo     0x419c47
  419c2b:	stos   DWORD PTR es:[edi],eax
  419c2c:	div    bh
  419c2e:	pusha  
  419c2f:	ins    BYTE PTR es:[edi],dx
  419c30:	test   BYTE PTR [edx+edi*1+0x38],0x13
  419c35:	dec    edx
  419c36:	cwde   
  419c37:	xor    bh,BYTE PTR [ebx-0x76]
  419c3a:	push   ds
  419c3b:	mov    WORD PTR [ebx-0xd508d67],fs
  419c41:	test   DWORD PTR [ecx],0x48ab683c
  419c47:	stc    
  419c48:	pop    ss
  419c49:	adc    BYTE PTR [ebx+0x76],dl
  419c4c:	pushf  
  419c4d:	sbb    BYTE PTR [ecx+0x49],0x31
  419c51:	xor    BYTE PTR [ebx+eax*2-0x63e8c371],bh
  419c58:	mov    edx,0x5a1ead45
  419c5d:	repz mov edx,0xc0b0837b
  419c63:	and    al,0x7e
  419c65:	push   edx
  419c66:	mov    ds:0x3daacded,al
  419c6b:	mov    gs:0x41f30a14,al
  419c71:	xor    DWORD PTR [eax-0x36715c4b],eax
  419c77:	pop    ss
  419c78:	cwde   
  419c79:	lods   al,BYTE PTR ds:[esi]
  419c7a:	cmc    
  419c7b:	(bad)  
  419c7c:	jbe    0x419c3f
  419c7e:	or     DWORD PTR [ebx],0x7e29f9cd
  419c84:	pop    ebx
  419c85:	daa    
  419c86:	jne    0x419c79
  419c88:	test   ch,cl
  419c8a:	cdq    
  419c8b:	or     BYTE PTR fs:[eax+0x4b],ah
  419c8f:	call   0xb8a118f8
  419c94:	push   es
  419c95:	nop
  419c96:	outs   dx,DWORD PTR ds:[esi]
  419c97:	fsub   QWORD PTR [esi]
  419c99:	add    BYTE PTR [esi+ebp*4],al
  419c9c:	inc    esi
  419c9d:	loop   0x419c35
  419c9f:	fwait
  419ca0:	mov    db0,edi
  419ca3:	pop    edi
  419ca4:	mov    ebp,0xb058da61
  419ca9:	lods   eax,DWORD PTR ds:[esi]
  419caa:	adc    edx,edi
  419cac:	(bad)  
  419cad:	inc    ebx
  419cae:	and    eax,0xba77585c
  419cb3:	mov    ch,0x6d
  419cb5:	ja     0x419cb5
  419cb7:	cmp    eax,0xfc3ab9b9
  419cbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cbd:	mov    ch,0x7b
  419cbf:	lahf   
  419cc0:	push   esi
  419cc1:	in     eax,dx
  419cc2:	retf   
  419cc3:	push   ss
  419cc4:	enter  0xc948,0x23
  419cc8:	xor    DWORD PTR [ebx-0x3e4d308f],ecx
  419cce:	push   edi
  419ccf:	pusha  
  419cd0:	inc    ecx
  419cd1:	fs leave 
  419cd3:	jne    0x419d16
  419cd5:	int    0x3
  419cd7:	push   eax
  419cd8:	mov    eax,0xbc61c8ff
  419cdd:	ss enter 0xbb55,0x46
  419ce2:	adc    esp,edi
  419ce4:	cmp    cl,dh
  419ce6:	iret   
  419ce7:	mov    edx,0xe2cf8abf
  419cec:	sub    ch,BYTE PTR [edx+0x23]
  419cef:	fidiv  DWORD PTR [ebx+0x31]
  419cf2:	cmp    DWORD PTR [edi+0x71],ecx
  419cf5:	(bad)  
  419cf6:	dec    ecx
  419cf7:	cmp    eax,0xfa95b10d
  419cfc:	mov    dl,0x88
  419cfe:	fwait
  419cff:	scas   eax,DWORD PTR es:[edi]
  419d00:	pop    esp
  419d01:	xor    eax,0x9b8298ab
  419d06:	enter  0x807,0x9
  419d0a:	sahf   
  419d0b:	sub    bl,bl
  419d0d:	xchg   ecx,eax
  419d0e:	add    BYTE PTR [eax],al
  419d10:	add    BYTE PTR [eax],al
  419d12:	mov    BYTE PTR [ebp-0x40],al
  419d15:	fs int 0xe5
  419d18:	lods   al,BYTE PTR ds:[esi]
  419d19:	in     eax,dx
  419d1a:	or     dh,BYTE PTR [ebp-0x5fc4f884]
  419d20:	sub    BYTE PTR [edi],cl
  419d22:	rcr    DWORD PTR [ecx],1
  419d24:	add    DWORD PTR [eax],eax
  419d26:	hlt    
  419d27:	add    al,0x0
  419d29:	add    BYTE PTR [esp+eax*2],cl
  419d2c:	nop
  419d2d:	cmp    BYTE PTR [ebx+ecx*4-0x2a],0x4b
  419d32:	imul   edi,esi,0xff4d3c71
  419d38:	sar    DWORD PTR [esp+edx*1-0x7285c54a],0x3a
  419d40:	fdivr  DWORD PTR [eax+0x42]
  419d43:	pop    esp
  419d44:	or     eax,0x5cef19bc
  419d49:	adc    ch,BYTE PTR [eax+0x2c287ae2]
  419d4f:	push   ebx
  419d50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d51:	xor    ah,BYTE PTR [esi]
  419d53:	or     BYTE PTR [ebx],cl
  419d55:	stc    
  419d56:	pop    esi
  419d57:	imul   edi,edi,0x33af497b
  419d5d:	lea    eax,[ebp-0x32]
  419d60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d61:	mov    eax,0x439d976a
  419d66:	test   eax,0xe58d0691
  419d6b:	pop    ebx
  419d6c:	mov    eax,0x40adf5d1
  419d71:	out    dx,al
  419d72:	cmp    dl,BYTE PTR [edx]
  419d74:	adc    edx,DWORD PTR [edx+edi*4-0x61280a4b]
  419d7b:	xchg   edx,eax
  419d7c:	adc    al,0x49
  419d7e:	mov    ch,0xc2
  419d80:	mov    ebp,0xf3548160
  419d85:	inc    ecx
  419d86:	popa   
  419d87:	sub    eax,edx
  419d89:	test   al,0x74
  419d8b:	xor    BYTE PTR [esi],bh
  419d8d:	test   al,0x9d
  419d8f:	and    DWORD PTR [bp-0x53],edi
  419d93:	rol    DWORD PTR [ebx+0x15],0x22
  419d97:	sub    eax,0x72d945bd
  419d9c:	fcom   DWORD PTR [edi]
  419d9e:	mov    edx,0xcd2d329
  419da3:	xchg   edx,eax
  419da4:	jnp    0x419d7b
  419da6:	addr16 popf 
  419da8:	int    0x26
  419daa:	sbb    BYTE PTR [ebp+0x38],0xab
  419dae:	arpl   WORD PTR ds:0xfe258ff7,sp
  419db4:	outs   dx,BYTE PTR ds:[esi]
  419db5:	mov    bh,0xd7
  419db7:	fs addr16 test al,0xb3
  419dbb:	add    ah,0x2b
  419dbe:	push   0xaf20cebc
  419dc3:	ret    
  419dc4:	push   ss
  419dc5:	iret   
  419dc6:	xlat   BYTE PTR ds:[ebx]
  419dc7:	addr16 cmp eax,0x8cfa48a7
  419dcd:	lahf   
  419dce:	pop    ds
  419dcf:	cmp    esp,DWORD PTR [eax+0x7a3884f6]
  419dd5:	inc    BYTE PTR cs:[esi+ecx*1-0x18b7cbaf]
  419ddd:	pmaxub mm6,QWORD PTR [ebx]
  419de0:	dec    ecx
  419de1:	mov    ebp,0x8536bbf0
  419de6:	es pop edi
  419de8:	or     al,0xcb
  419dea:	fisub  DWORD PTR [ecx+0x7fa8b159]
  419df0:	xchg   esp,eax
  419df1:	test   esi,edx
  419df3:	xchg   esp,eax
  419df4:	nop    DWORD PTR [ecx+0x5f41e244]
  419dfb:	iret   
  419dfc:	test   al,0x96
  419dfe:	push   es
  419dff:	cmp    dh,ah
  419e01:	mov    edx,0xb4b320bd
  419e06:	push   ebp
  419e07:	int    0xb3
  419e09:	not    DWORD PTR [ecx-0x13]
  419e0c:	jmp    0x419dcb
  419e0e:	in     al,0xe3
  419e10:	es iret 
  419e12:	xchg   esi,eax
  419e13:	aam    0xe0
  419e15:	xchg   ecx,eax
  419e16:	adc    cl,BYTE PTR [ebx-0x1a267187]
  419e1c:	out    0x2a,eax
  419e1e:	imul   ebp,ebx,0x2d
  419e21:	mov    dh,0x83
  419e23:	lds    ebx,FWORD PTR [edx]
  419e25:	xchg   esi,eax
  419e26:	adc    ebp,edi
  419e28:	imul   ecx,ebx,0x10
  419e2b:	push   esp
  419e2c:	sub    al,0x71
  419e2e:	ret    0xc3a
  419e31:	in     al,0xd9
  419e33:	aas    
  419e34:	and    al,0xa2
  419e36:	out    0x1f,al
  419e38:	sbb    cl,BYTE PTR [eax-0xe]
  419e3b:	int3   
  419e3c:	dec    esp
  419e3d:	sub    BYTE PTR [esi+0x1e46bac1],ah
  419e43:	aam    0xcc
  419e45:	ins    DWORD PTR es:[edi],dx
  419e46:	cmc    
  419e47:	aam    0x39
  419e49:	jbe    0x419df7
  419e4b:	jl     0x419e36
  419e4d:	xor    al,0x21
  419e4f:	pop    di
  419e51:	inc    edi
  419e52:	add    BYTE PTR [ebx-0x7f],bh
  419e55:	xchg   ecx,eax
  419e56:	jnp    0x419eca
  419e58:	je     0x419e94
  419e5a:	imul   edx,edi,0x74988c13
  419e60:	pop    eax
  419e61:	or     eax,0xf7a58cea
  419e66:	xchg   esp,eax
  419e67:	or     DWORD PTR [eax+eiz*8+0x7f5bfeb3],0x7d
  419e6f:	rcr    DWORD PTR [edi],0x11
  419e72:	out    0x88,al
  419e74:	fsubr  st,st(0)
  419e76:	aaa    
  419e77:	in     eax,dx
  419e78:	test   al,0x1a
  419e7a:	in     al,0xca
  419e7c:	mov    bh,0x17
  419e7e:	inc    ebp
  419e7f:	and    DWORD PTR ss:[edx+eiz*1-0x5b],eax
  419e84:	and    eax,ebp
  419e86:	mov    esp,0xdd5bed26
  419e8b:	stos   DWORD PTR es:[edi],eax
  419e8c:	inc    ebp
  419e8d:	inc    esp
  419e8e:	std    
  419e8f:	and    ecx,DWORD PTR [ebx-0x4]
  419e92:	push   esp
  419e93:	inc    ebp
  419e94:	mov    BYTE PTR [edx+0x6abe0136],0xe4
  419e9b:	inc    eax
  419e9c:	xchg   ebp,eax
  419e9d:	push   esi
  419e9e:	in     al,0xf
  419ea0:	out    dx,al
  419ea1:	ja     0x419e6a
  419ea3:	mov    edx,0xd55994b1
  419ea8:	fstp   TBYTE PTR [edx+0x7df2edd5]
  419eae:	adc    DWORD PTR [edi+0x5b],esp
  419eb1:	das    
  419eb2:	sbb    BYTE PTR [ebx-0x5ed47708],cl
  419eb8:	xchg   DWORD PTR [edi+0x4970d5fd],eax
  419ebe:	mov    ds:0xb4ff9998,eax
  419ec3:	inc    edi
  419ec4:	cmc    
  419ec5:	mov    cs,WORD PTR [esi+0x37]
  419ec8:	arpl   WORD PTR [ecx+0xa51b044],dx
  419ece:	push   eax
  419ecf:	sbb    edx,DWORD PTR [edi]
  419ed1:	adc    BYTE PTR [esi-0x1c],cl
  419ed4:	int    0x56
  419ed6:	enter  0x9e16,0x90
  419eda:	cmc    
  419edb:	mov    eax,0xeb1a6132
  419ee0:	das    
  419ee1:	ret    
  419ee2:	xchg   edx,eax
  419ee3:	loop   0x419f4b
  419ee5:	ins    DWORD PTR es:[edi],dx
  419ee6:	ja     0x419eef
  419ee8:	cli    
  419ee9:	sub    esi,DWORD PTR [eax]
  419eeb:	in     eax,dx
  419eec:	xlat   BYTE PTR ds:[ebx]
  419eed:	std    
  419eee:	int3   
  419eef:	mov    eax,0xc9a50953
  419ef4:	je     0x419f6d
  419ef6:	pop    esi
  419ef7:	aad    0x7b
  419ef9:	inc    eax
  419efa:	adc    DWORD PTR [ecx-0x9],esp
  419efd:	push   ecx
  419efe:	jmp    0xe13d:0x31211832
  419f05:	jl     0x419ec4
  419f07:	mov    cl,0x43
  419f09:	loope  0x419e94
  419f0b:	sub    BYTE PTR [esi+ecx*8+0x7074ab1e],al
  419f12:	loop   0x419ec4
  419f14:	mov    ah,0xd
  419f16:	mov    dl,0x5
  419f18:	into   
  419f19:	sbb    al,0x9f
  419f1b:	mov    ?,WORD PTR [esi+edx*2-0x2b31958e]
  419f22:	in     al,dx
  419f23:	lds    ecx,FWORD PTR [esi+0x2d]
  419f26:	addr16 adc bh,bl
  419f29:	dec    eax
  419f2a:	fstp   QWORD PTR [esi]
  419f2c:	push   es
  419f2d:	xchg   esi,eax
  419f2e:	dec    ecx
  419f2f:	outs   dx,BYTE PTR ds:[esi]
  419f30:	jne    0x419f68
  419f32:	or     BYTE PTR [ebp+0x4cd15431],al
  419f38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f39:	push   esp
  419f3a:	jae    0x419f6d
  419f3c:	es out 0x43,eax
  419f3f:	xchg   ebx,eax
  419f40:	sub    BYTE PTR [ecx+0x67d9df2d],dl
  419f46:	leave  
  419f47:	dec    esi
  419f48:	fnstenv [edi+0x6f1683ac]
  419f4e:	aad    0xd4
  419f50:	fcomp  QWORD PTR [edi]
  419f52:	dec    edx
  419f53:	dec    esi
  419f54:	loopne 0x419f5c
  419f56:	inc    eax
  419f57:	fiadd  WORD PTR [ebx-0x69b02d0e]
  419f5d:	push   ds
  419f5e:	les    ebx,FWORD PTR [edx-0xd31c3e]
  419f64:	popa   
  419f65:	popa   
  419f66:	jl     0x419f1d
  419f68:	pop    ebp
  419f69:	nop
  419f6a:	dec    esi
  419f6c:	ret    0x2580
  419f6f:	pop    ss
  419f70:	inc    esi
  419f71:	int    0x73
  419f73:	loop   0x419f9e
  419f75:	mov    cl,0x13
  419f77:	les    edi,FWORD PTR [esi-0x519f15d8]
  419f7d:	pop    edx
  419f7e:	leave  
  419f7f:	pop    es
  419f80:	arpl   WORD PTR [edx],bx
  419f82:	jmp    DWORD PTR [ecx-0xe1eabbd]
  419f88:	xchg   ebx,eax
  419f89:	push   0xffffffdf
  419f8b:	retf   0x2da1
  419f8e:	int    0xa5
  419f90:	pop    eax
  419f91:	mov    edx,0x61d38d12
  419f96:	push   0xffffffc2
  419f98:	loope  0x419f87
  419f9a:	call   0xe4e9:0x51e5b59e
  419fa1:	add    ch,0xa9
  419fa4:	das    
  419fa5:	(bad)  
  419fa6:	icebp  
  419fa7:	sti    
  419fa8:	cld    
  419fa9:	or     BYTE PTR [edx],ah
  419fab:	or     DWORD PTR [ecx-0x7cd14396],0xd337d6b2
  419fb5:	adc    ecx,DWORD PTR [edx+0x79]
  419fb8:	jns    0x41a014
  419fba:	test   al,0xd6
  419fbc:	or     esi,esi
  419fbe:	push   es
  419fbf:	inc    eax
  419fc0:	inc    edi
  419fc1:	sbb    BYTE PTR [esi],cl
  419fc3:	jns    0x419f6f
  419fc5:	test   eax,0x7853edc2
  419fca:	fdiv   QWORD PTR [edx-0x42]
  419fcd:	aam    0x9
  419fcf:	das    
  419fd0:	loop   0x41a02b
  419fd2:	push   esi
  419fd3:	mov    cl,0xdd
  419fd5:	pop    esp
  419fd6:	es jno 0x419f9e
  419fd9:	cmp    DWORD PTR [esi],eax
  419fdb:	mov    DWORD PTR [ebx],ecx
  419fdd:	repnz push ebp
  419fdf:	aad    0xd3
  419fe1:	or     DWORD PTR [ecx],ebp
  419fe3:	sub    DWORD PTR [edi+edi*8+0x632f582],ebp
  419fea:	int    0xfe
  419fec:	and    edx,ebp
  419fee:	aas    
  419fef:	mov    ch,0x39
  419ff1:	(bad)  
  419ff2:	xchg   edx,eax
  419ff3:	loop   0x41a003
  419ff5:	xchg   ecx,eax
  419ff6:	pmulhw mm2,QWORD PTR [ebx+edi*8+0x2]
  419ffb:	out    0x97,eax
  419ffd:	jo     0x41a028
  419fff:	xor    al,0x22
  41a001:	jge    0x41a07b
  41a003:	sub    al,0x65
  41a005:	out    dx,eax
  41a006:	mov    ds:0x27959345,al
  41a00b:	(bad)
  41a010:	xchg   DWORD PTR [ecx-0x24],ebp
  41a013:	out    dx,eax
  41a014:	sub    BYTE PTR [edx+0x36],dh
  41a017:	pop    ss
  41a018:	mov    ch,0xa3
  41a01a:	or     al,0xf5
  41a01d:	inc    eax
  41a01e:	ficom  DWORD PTR [ecx-0x19acd3b4]
  41a024:	neg    BYTE PTR [ebp-0x405e00d3]
  41a02a:	cmp    BYTE PTR [ebx-0x66],ch
  41a02d:	and    bh,BYTE PTR [edi+0x50]
  41a030:	cmc    
  41a031:	rol    DWORD PTR es:[esi-0x3b],cl
  41a035:	inc    edi
  41a036:	loopne 0x41a020
  41a038:	js     0x41a09e
  41a03a:	mov    eax,ds:0x4a429518
  41a03f:	or     ebx,DWORD PTR [ebp-0x52]
  41a042:	and    eax,0x163b33ec
  41a047:	xchg   esi,eax
  41a048:	pop    ebp
  41a049:	xchg   BYTE PTR [ecx+0x4fe262ba],bl
  41a04f:	add    eax,0xfde3898b
  41a054:	or     ch,BYTE PTR [ebp+0x48]
  41a057:	inc    edi
  41a058:	popf   
  41a059:	mov    al,0x3f
  41a05b:	pusha  
  41a05c:	loopne 0x419fef
  41a05e:	lds    eax,FWORD PTR [edi-0x19]
  41a061:	cmp    eax,0x7b0c7db5
  41a066:	push   esp
  41a067:	push   esi
  41a068:	or     esi,DWORD PTR [edx+0x5b]
  41a06b:	(bad)  
  41a06c:	cs jb  0x41a06a
  41a06f:	mov    bl,0xb5
  41a071:	and    dl,dl
  41a073:	sbb    DWORD PTR [eax+0x48],0xffffffd5
  41a077:	aad    0xc0
  41a079:	out    0xa,al
  41a07b:	push   0xbcf2facb
  41a080:	in     eax,0xa5
  41a082:	xor    esi,0xfffffff9
  41a085:	mov    ah,0xc3
  41a087:	in     al,dx
  41a088:	sbb    eax,0xdc3452b9
  41a08d:	sbb    eax,edi
  41a08f:	mov    esp,0x8c965365
  41a094:	lea    ebx,[ebx-0x7f972e1c]
  41a09a:	int    0xeb
  41a09c:	mov    cl,0x88
  41a09e:	shl    ah,0x34
  41a0a1:	jb     0x41a11c
  41a0a3:	xor    dl,BYTE PTR [esi]
  41a0a5:	inc    ecx
  41a0a6:	push   esi
  41a0a7:	outs   dx,DWORD PTR ds:[esi]
  41a0a8:	mov    edx,0x25850a25
  41a0ad:	pushf  
  41a0ae:	ret    0xac3d
  41a0b1:	out    dx,eax
  41a0b2:	nop
  41a0b3:	xchg   DWORD PTR [ebx+ebx*4+0x1f],esp
  41a0b7:	shl    DWORD PTR [esi],0xcf
  41a0ba:	fst    QWORD PTR [ebx+ebx*8-0x6f]
  41a0be:	iret   
  41a0bf:	adc    al,0x70
  41a0c1:	repnz pop DWORD PTR [edx]
  41a0c4:	pusha  
  41a0c5:	es mov esi,0x9b523ac7
  41a0cb:	shl    BYTE PTR [esi+eiz*2-0x11590f8e],cl
  41a0d2:	jno    0x41a0cf
  41a0d4:	xchg   ebp,eax
  41a0d5:	adc    BYTE PTR [ebp+0x78],0x1d
  41a0d9:	jecxz  0x41a151
  41a0db:	fiadd  WORD PTR [ecx-0x3c]
  41a0de:	jg     0x41a0cc
  41a0e0:	jecxz  0x41a119
  41a0e2:	mov    ebx,ecx
  41a0e4:	pop    edi
  41a0e5:	not    DWORD PTR [edi]
  41a0e7:	xchg   DWORD PTR [esi+eiz*4],esi
  41a0ea:	rcl    edi,cl
  41a0ec:	fsubrp st(5),st
  41a0ee:	push   edi
  41a0ef:	mov    esp,0x636b99fc
  41a0f4:	cmp    BYTE PTR [ebx],0xb4
  41a0f7:	stos   DWORD PTR es:[edi],eax
  41a0f8:	or     al,0x3b
  41a0fa:	in     al,0x6e
  41a0fc:	pop    edx
  41a0fd:	shr    BYTE PTR [esi+0x29e19077],cl
  41a103:	in     eax,dx
  41a104:	imul   ebp,ecx,0x60
  41a107:	jl     0x41a0c5
  41a109:	loop   0x41a112
  41a10b:	add    eax,0xd84aeb21
  41a110:	mov    ebp,0x3e96f57
  41a115:	loope  0x41a0f0
  41a117:	sbb    edx,ecx
  41a119:	out    dx,eax
  41a11a:	loop   0x41a189
  41a11c:	mov    dh,0x74
  41a11e:	fiadd  DWORD PTR [eax]
  41a120:	data16 fs jnp 0x41a135
  41a124:	clc    
  41a125:	stos   BYTE PTR es:[edi],al
  41a126:	xor    DWORD PTR [ecx],ecx
  41a128:	inc    edi
  41a129:	in     eax,0x2b
  41a12b:	dec    ebp
  41a12c:	cmp    DWORD PTR [ebp-0x58],esi
  41a12f:	mov    bl,0xe1
  41a131:	lock mov cl,0xc6
  41a134:	in     eax,dx
  41a135:	stos   BYTE PTR es:[edi],al
  41a136:	xchg   ebx,eax
  41a137:	test   BYTE PTR [edi-0x2ea4da88],bl
  41a13d:	and    eax,0x9b0f0b83
  41a142:	jecxz  0x41a0dc
  41a144:	test   ebp,ecx
  41a146:	adc    BYTE PTR [edx+0x4c542c07],dh
  41a14c:	mov    DWORD PTR [eax+0x6cb6065e],esp
  41a152:	inc    ebp
  41a153:	sub    al,0x4
  41a155:	gs xor al,0x1c
  41a158:	pop    eax
  41a159:	mov    al,dl
  41a15b:	push   ds
  41a15c:	adc    ebx,DWORD PTR [esi-0x704b4cf9]
  41a162:	outs   dx,DWORD PTR ds:[esi]
  41a163:	loope  0x41a108
  41a165:	jo     0x41a1de
  41a167:	jle    0x41a1e0
  41a169:	add    eax,0xfb0a4c1f
  41a16e:	push   0xbf230d6c
  41a173:	mov    esi,0x8e59a5bb
  41a178:	repz imul DWORD PTR [ebx-0x66c8b9ea]
  41a17f:	sbb    eax,0x1f1eea4d
  41a184:	(bad)
  41a188:	pop    es
  41a189:	mov    DWORD PTR [edx-0x6],esp
  41a18c:	mov    dl,0xd0
  41a18e:	pusha  
  41a18f:	pop    ss
  41a190:	ds cmc 
  41a192:	adc    DWORD PTR [ebx],ebx
  41a194:	dec    ecx
  41a195:	xor    BYTE PTR [edx],cl
  41a197:	out    0x4c,eax
  41a199:	fsub   DWORD PTR [ebp-0x17]
  41a19c:	jnp    0x41a1e9
  41a19e:	in     al,0xa2
  41a1a0:	mov    ch,0xbc
  41a1a2:	and    DWORD PTR [eax],edi
  41a1a4:	icebp  
  41a1a5:	xchg   esp,eax
  41a1a6:	xchg   DWORD PTR [ecx+edx*2+0x74],ebp
  41a1aa:	xor    al,0x3
  41a1ac:	retf   0xc2a
  41a1af:	sub    al,0xf
  41a1b1:	stos   BYTE PTR es:[edi],al
  41a1b2:	add    DWORD PTR [ebx],0xffffffc1
  41a1b5:	cmp    al,bl
  41a1b7:	repz wrmsr 
  41a1ba:	sub    al,BYTE PTR [esi-0x7e]
  41a1bd:	and    ecx,DWORD PTR ds:0x949658b2
  41a1c3:	std    
  41a1c4:	dec    ebp
  41a1c5:	jp     0x41a151
  41a1c7:	add    al,0x2
  41a1c9:	dec    ebx
  41a1ca:	xor    esi,0xec8de84c
  41a1d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1d1:	inc    esp
  41a1d2:	cmp    bh,0x22
  41a1d5:	pop    ds
  41a1d6:	call   0xde3fc08a
  41a1db:	sub    DWORD PTR [edi+ecx*4+0x7d],eax
  41a1df:	fild   WORD PTR [eax-0x5f]
  41a1e2:	retf   0x1cfa
  41a1e5:	sbb    edi,DWORD PTR [ecx]
  41a1e7:	and    BYTE PTR [edi-0x1514f6e9],bl
  41a1ed:	lock or esi,DWORD PTR [ebp+0x45]
  41a1f1:	into   
  41a1f2:	push   edx
  41a1f3:	scas   al,BYTE PTR es:[edi]
  41a1f4:	sub    al,0xe3
  41a1f6:	push   edi
  41a1f7:	les    esi,FWORD PTR [esi+0x76717261]
  41a1fd:	sbb    al,0xf1
  41a1ff:	dec    edi
  41a200:	test   eax,0xdc8a1e95
  41a205:	mov    ch,0xbd
  41a207:	outs   dx,DWORD PTR ds:[esi]
  41a208:	mov    ebx,ebp
  41a20a:	and    al,0xf
  41a20c:	out    0x9d,eax
  41a20e:	bnd jge 0x41a230
  41a211:	xchg   esi,eax
  41a212:	loope  0x41a25b
  41a214:	xchg   edi,eax
  41a215:	stos   DWORD PTR es:[edi],eax
  41a216:	jno    0x41a27a
  41a218:	and    ecx,DWORD PTR [edi-0x1e94123e]
  41a21e:	add    BYTE PTR [eax],al
  41a220:	add    BYTE PTR [eax],al
  41a222:	sbb    BYTE PTR [ebp+0xe],dl
  41a225:	add    eax,0x5d1b5f4f
  41a22a:	lods   eax,DWORD PTR ds:[esi]
  41a22b:	test   al,0x5b
  41a22d:	gs xchg esp,eax
  41a22f:	add    ecx,eax
  41a231:	sub    eax,0x11ec5
  41a236:	hlt    
  41a237:	add    al,0x0
  41a239:	add    BYTE PTR [edx+0x70],ch
  41a23c:	pop    esi
  41a23d:	inc    ecx
  41a23e:	mov    dh,0x98
  41a240:	dec    eax
  41a241:	jmp    0xb040:0x9c035fa2
  41a248:	addr16 dec edi
  41a24a:	dec    eax
  41a24b:	gs or  DWORD PTR gs:[ecx],esi
  41a24f:	jnp    0x41a21c
  41a251:	sbb    dl,bh
  41a253:	cmp    eax,0x9a232d5f
  41a258:	cmp    al,0xaa
  41a25a:	mov    esp,0xf1bcc28d
  41a25f:	or     DWORD PTR [ecx],ebp
  41a261:	es inc esp
  41a263:	and    DWORD PTR [ecx+0x29b87d4a],ebp
  41a269:	mov    dh,0xb5
  41a26b:	leave  
  41a26c:	pop    es
  41a26d:	mov    dh,0x6f
  41a26f:	shl    eax,cl
  41a271:	shl    BYTE PTR [edx+0x4a],1
  41a274:	inc    esp
  41a275:	ficom  WORD PTR [esp+eax*1-0x6c36769f]
  41a27c:	ja     0x41a2bd
  41a27e:	in     al,0x40
  41a280:	xor    ecx,eax
  41a282:	bound  esi,QWORD PTR [esi]
  41a284:	cld    
  41a285:	ins    DWORD PTR es:[edi],dx
  41a286:	cld    
  41a287:	mov    eax,ds:0x1975e419
  41a28c:	loope  0x41a28a
  41a28e:	adc    eax,0x4f81d821
  41a293:	push   ecx
  41a294:	xor    al,0xa1
  41a296:	mov    edi,0xf4beaf6e
  41a29b:	xor    DWORD PTR [ebx],0xb
  41a29e:	jmp    0x41a22d
  41a2a0:	xchg   edx,eax
  41a2a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2a2:	cld    
  41a2a3:	push   0xffffff9b
  41a2a5:	aaa    
  41a2a6:	xchg   esi,eax
  41a2a7:	push   0xd0529fce
  41a2ac:	push   es
  41a2ad:	and    eax,0x449ce28f
  41a2b2:	push   ecx
  41a2b3:	cld    
  41a2b4:	and    bh,BYTE PTR [edi+0x37]
  41a2b7:	daa    
  41a2b8:	scas   al,BYTE PTR es:[edi]
  41a2b9:	xchg   ecx,eax
  41a2ba:	das    
  41a2bb:	and    eax,0x3dfb45e0
  41a2c0:	push   esp
  41a2c1:	jae    0x41a31f
  41a2c3:	test   eax,0xd5d8070
  41a2c8:	adc    al,0x7b
  41a2ca:	inc    ebx
  41a2cb:	mov    edi,0xc593a449
  41a2d0:	sbb    ebp,DWORD PTR [edi-0x52]
  41a2d3:	pop    ds
  41a2d4:	push   cs
  41a2d5:	xchg   edx,eax
  41a2d6:	ds pop ecx
  41a2d8:	popf   
  41a2d9:	rcl    DWORD PTR [bx-0x55],0xd7
  41a2de:	in     al,0x4a
  41a2e0:	lds    edi,FWORD PTR [eax+0x42]
  41a2e3:	leave  
  41a2e4:	sub    BYTE PTR [ecx-0x5f2a0f3],bh
  41a2ea:	mov    eax,0x5cef5b60
  41a2ef:	popa   
  41a2f0:	adc    BYTE PTR [edx-0x77],bl
  41a2f3:	add    ecx,DWORD PTR cs:0xdf87740a
  41a2fa:	sub    BYTE PTR [edi],0x2b
  41a2fd:	loopne 0x41a2f1
  41a2ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a300:	fxch   st(5)
  41a302:	mov    dl,0xff
  41a304:	scas   al,BYTE PTR es:[edi]
  41a305:	jle    0x41a368
  41a307:	loopne 0x41a2f6
  41a309:	xor    al,0xf7
  41a30b:	inc    ebx
  41a30c:	jno    0x41a30a
  41a30e:	les    edx,FWORD PTR [ebx]
  41a310:	push   0xd2ae5780
  41a315:	dec    eax
  41a316:	int    0x86
  41a318:	push   ecx
  41a319:	adc    dl,BYTE PTR [ebx-0x4029c454]
  41a31f:	pop    ss
  41a320:	inc    BYTE PTR [edi+eax*4]
  41a323:	inc    esi
  41a324:	mov    ss,WORD PTR [eax]
  41a326:	stc    
  41a327:	icebp  
  41a328:	(bad)  
  41a32a:	or     ebp,eax
  41a32c:	mov    ecx,0xcd318f6f
  41a331:	pop    esp
  41a332:	jnp    0x41a2ca
  41a334:	lds    esi,FWORD PTR [ecx-0xa964750]
  41a33a:	pushf  
  41a33b:	ja     0x41a371
  41a33d:	cmc    
  41a33e:	mov    dl,BYTE PTR [edi+0x7a75be75]
  41a344:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a345:	mov    eax,ds:0xab2d448f
  41a34a:	test   eax,0x75e6b99a
  41a34f:	dec    esp
  41a350:	out    0x6d,al
  41a352:	xchg   BYTE PTR ds:0x5e16442a,ch
  41a358:	int3   
  41a359:	jge    0x41a2ef
  41a35b:	sub    al,0x6a
  41a35d:	rcr    cl,0x2
  41a360:	cmc    
  41a361:	arpl   WORD PTR es:[ebx-0x21],si
  41a365:	dec    edx
  41a366:	push   edx
  41a367:	(bad)  
  41a368:	sbb    ah,BYTE PTR [esi+0x52a92edc]
  41a36e:	sub    DWORD PTR [ebx],ecx
  41a370:	jmp    0x87c31d2a
  41a375:	push   ds
  41a376:	popf   
  41a377:	out    0x24,eax
  41a379:	in     al,dx
  41a37a:	fnsave [ebx+0x6a]
  41a37d:	cs jl  0x41a392
  41a380:	mov    eax,0xfa92529b
  41a385:	inc    eax
  41a386:	imul   eax,esp,0x7185c555
  41a38c:	jae    0x41a30e
  41a38e:	pop    esp
  41a38f:	dec    eax
  41a390:	lods   eax,DWORD PTR ds:[esi]
  41a391:	mov    cl,BYTE PTR [esi-0x1f]
  41a394:	mov    ch,0x38
  41a396:	test   BYTE PTR [esi],cl
  41a398:	setnp  al
  41a39b:	dec    edx
  41a39c:	int    0x4b
  41a39e:	xchg   ecx,eax
  41a39f:	fdivr  DWORD PTR [eax+ecx*4+0x7c]
  41a3a3:	dec    edi
  41a3a4:	xchg   BYTE PTR [esi+ecx*1+0xd275a64],dl
  41a3ab:	sahf   
  41a3ac:	push   esp
  41a3ad:	test   DWORD PTR [esi-0x21],0xc9ea1ded
  41a3b4:	pop    edx
  41a3b5:	mov    ebp,0x6d3e4e9
  41a3ba:	imul   eax,DWORD PTR [eax+0x703c159e],0x39afbf72
  41a3c4:	add    ebx,DWORD PTR ds:0x28e51d4c
  41a3ca:	pop    esp
  41a3cb:	mov    ds:0x7df90fbf,al
  41a3d0:	sbb    eax,0x784c28f6
  41a3d5:	popf   
  41a3d6:	and    DWORD PTR [edx-0x25],0x23
  41a3da:	mov    WORD PTR [ebx-0x2f],es
  41a3dd:	cmp    BYTE PTR [ecx+0x5d],dh
  41a3e0:	div    BYTE PTR [edi]
  41a3e2:	ds imul ebp,esi,0x3d
  41a3e6:	and    bl,0x82
  41a3e9:	ret    0x72b1
  41a3ec:	daa    
  41a3ed:	mov    ah,0x5c
  41a3ef:	lock dec ebp
  41a3f1:	jp     0x41a429
  41a3f3:	cmp    BYTE PTR [ebp+0x22],dl
  41a3f6:	mov    esp,0x9c71ae40
  41a3fb:	dec    edi
  41a3fc:	mov    ds:0x93e671ce,eax
  41a401:	xchg   esp,eax
  41a402:	pop    ds
  41a403:	icebp  
  41a404:	test   DWORD PTR [edi-0x29],0x53bf3c95
  41a40b:	ss dec di
  41a40e:	rcr    BYTE PTR ds:[edi-0x6ec9062b],cl
  41a415:	hlt    
  41a416:	inc    esi
  41a417:	mov    al,ds:0x46bb6554
  41a41c:	and    DWORD PTR [ebp+0x54],esi
  41a41f:	sbb    eax,0x7fbb745
  41a424:	push   es
  41a425:	ins    BYTE PTR es:[edi],dx
  41a426:	dec    esp
  41a427:	mov    edi,0xf6b1411d
  41a42c:	(bad)
  41a42f:	push   ecx
  41a430:	bound  ebx,QWORD PTR [esi]
  41a432:	retf   0xcfe2
  41a435:	sub    eax,0x500054fd
  41a43a:	dec    edi
  41a43b:	and    al,0x20
  41a43d:	shl    BYTE PTR [ebp+0x6a9cf940],cl
  41a443:	inc    edx
  41a444:	jo     0x41a448
  41a446:	dec    esi
  41a447:	loope  0x41a40f
  41a449:	jb     0x41a442
  41a44b:	pushf  
  41a44c:	rcr    DWORD PTR [ebx-0x51430d9e],0x75
  41a453:	adc    eax,DWORD PTR [eax]
  41a455:	leave  
  41a456:	mov    WORD PTR [eax+0xd],es
  41a459:	call   esp
  41a45b:	loope  0x41a4d7
  41a45d:	outs   dx,BYTE PTR ds:[esi]
  41a45e:	push   ss
  41a45f:	and    eax,0xb3db7b88
  41a464:	jns    0x41a4c8
  41a466:	mov    ch,0x47
  41a468:	int    0x9b
  41a46a:	sub    ch,BYTE PTR [ebx]
  41a46c:	push   ss
  41a46d:	shl    DWORD PTR [ecx+ecx*1],0x8d
  41a471:	pop    ds
  41a472:	mov    ?,WORD PTR [edi]
  41a474:	mov    eax,ds:0x508628f6
  41a479:	sub    cl,BYTE PTR [ecx+0x75df749d]
  41a47f:	lock call 0xe521:0x8e494309
  41a487:	xchg   edx,eax
  41a488:	loope  0x41a458
  41a48a:	mov    dl,0xff
  41a48c:	lahf   
  41a48d:	mov    ds:0x915f23f0,eax
  41a492:	push   edx
  41a493:	inc    edx
  41a494:	adc    ah,BYTE PTR [ebx+eax*4+0x23]
  41a498:	sbb    al,0xfd
  41a49a:	pop    esi
  41a49b:	in     eax,dx
  41a49c:	sbb    ecx,ebx
  41a49e:	xchg   ah,ah
  41a4a0:	je     0x41a48e
  41a4a2:	xor    al,0xea
  41a4a4:	ficom  DWORD PTR [esp+eax*1-0x49]
  41a4a8:	add    dh,BYTE PTR [ecx-0x11]
  41a4ab:	fbstp  TBYTE PTR [eax+0x61d353aa]
  41a4b1:	xchg   ecx,eax
  41a4b2:	lods   al,BYTE PTR ds:[esi]
  41a4b3:	sbb    ecx,DWORD PTR [edi-0x53780e55]
  41a4b9:	rcl    dh,1
  41a4bb:	les    ecx,FWORD PTR [ebx]
  41a4bd:	outs   dx,DWORD PTR ds:[esi]
  41a4be:	inc    esp
  41a4bf:	add    esp,eax
  41a4c1:	or     DWORD PTR [ecx+0x46],ebp
  41a4c4:	outs   dx,DWORD PTR ds:[esi]
  41a4c5:	and    al,0x5d
  41a4c7:	outs   dx,BYTE PTR ds:[esi]
  41a4c8:	mov    dl,ch
  41a4ca:	push   edi
  41a4cb:	out    0x30,al
  41a4cd:	mov    ?,eax
  41a4cf:	xchg   ebx,edi
  41a4d1:	pop    edi
  41a4d2:	ja     0x41a495
  41a4d4:	add    esi,DWORD PTR [ebx+0x3d]
  41a4d7:	dec    esi
  41a4d8:	repnz dec esi
  41a4db:	test   BYTE PTR [ebp-0x5e9d9296],ch
  41a4e1:	mov    dh,0xa6
  41a4e3:	xchg   edi,eax
  41a4e4:	push   eax
  41a4e5:	sbb    dl,BYTE PTR [edx+0x5a]
  41a4e8:	xor    BYTE PTR [esi+edi*4-0x3f5ec3f3],ch
  41a4ef:	mov    esp,0x39dee38e
  41a4f4:	ror    bh,cl
  41a4f6:	loopne 0x41a4ee
  41a4f8:	add    DWORD PTR [ebp+0x3594cbb1],edi
  41a4fe:	retf   0x54b8
  41a501:	in     al,0xd2
  41a503:	mov    dl,0x62
  41a505:	lods   eax,DWORD PTR ds:[esi]
  41a506:	dec    ebp
  41a507:	pop    eax
  41a508:	lock loopne 0x41a51d
  41a50b:	xlat   BYTE PTR ds:[ebx]
  41a50c:	loope  0x41a494
  41a50e:	and    ch,BYTE PTR [ebp+ecx*1+0x9]
  41a512:	mov    ecx,0xc733bbea
  41a517:	xchg   ebx,eax
  41a518:	or     al,0x9
  41a51a:	adc    cl,BYTE PTR [eax]
  41a51c:	adc    al,0x1b
  41a51e:	les    ecx,FWORD PTR [eax]
  41a520:	sbb    BYTE PTR [eax],0x57
  41a523:	(bad)  
  41a524:	cli    
  41a525:	scas   al,BYTE PTR es:[edi]
  41a526:	jmp    0x41a50c
  41a528:	loopne 0x41a4c7
  41a52a:	repz idiv esi
  41a52d:	shr    BYTE PTR ds:0x337207fc,1
  41a533:	jmp    0xbc687e1
  41a538:	aas    
  41a539:	sbb    bh,BYTE PTR [ebp+edi*8+0x1756f430]
  41a540:	cwde   
  41a541:	push   edx
  41a542:	cmp    BYTE PTR [esi+0x19f85f8e],cl
  41a548:	cmc    
  41a549:	idiv   BYTE PTR [edx-0x3b21fc86]
  41a54f:	stos   DWORD PTR es:[edi],eax
  41a550:	(bad)  
  41a551:	pop    edi
  41a552:	stc    
  41a553:	sbb    DWORD PTR fs:[edx-0x29],eax
  41a557:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a558:	es xor ecx,ebp
  41a55b:	push   esi
  41a55c:	das    
  41a55d:	ficomp WORD PTR [ebx-0x50fc23b4]
  41a563:	sbb    DWORD PTR [ecx],0x720f3587
  41a569:	sub    al,0x3d
  41a56b:	xchg   edx,eax
  41a56c:	add    esp,0xffffffac
  41a56f:	jo     0x41a54e
  41a571:	cld    
  41a572:	xchg   edx,eax
  41a573:	rcl    BYTE PTR [edi-0x4c],cl
  41a576:	sti    
  41a577:	bnd jae 0x41a558
  41a57a:	push   0x82a25797
  41a57f:	mov    DWORD PTR [edx+0x9],eax
  41a582:	imul   edi,DWORD PTR [ecx+eax*8-0x11791958],0xffffff8b
  41a58a:	fwait
  41a58b:	popa   
  41a58c:	and    ch,al
  41a58e:	in     al,dx
  41a58f:	popf   
  41a590:	cmp    edx,ebx
  41a592:	jge    0x41a5c7
  41a594:	push   DWORD PTR [edi-0x28]
  41a597:	sub    esp,DWORD PTR [esi]
  41a599:	out    dx,al
  41a59a:	sub    eax,0x627a90d6
  41a59f:	data16 adc al,0x83
  41a5a2:	pop    ebp
  41a5a3:	push   ss
  41a5a4:	push   0x61860ea9
  41a5a9:	(bad)  [esi]
  41a5ab:	and    al,0x42
  41a5ad:	sbb    ebp,esi
  41a5af:	or     al,0xed
  41a5b1:	data16 jbe 0x41a53e
  41a5b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5b5:	push   es
  41a5b6:	mov    bl,0x76
  41a5b8:	jp     0x41a62d
  41a5ba:	mov    ds:0x60287e75,al
  41a5bf:	mov    al,ds:0xf7f02d36
  41a5c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5c5:	inc    ecx
  41a5c6:	mov    ecx,0x2881ef91
  41a5cb:	add    DWORD PTR [ecx+0x1c],edi
  41a5ce:	cmp    eax,DWORD PTR [ebx]
  41a5d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5d1:	xor    DWORD PTR [edx+0xb],0xdd016e37
  41a5d8:	in     eax,0x2d
  41a5da:	sub    edi,0xba328e9
  41a5e0:	pop    es
  41a5e1:	xor    al,0x68
  41a5e3:	jo     0x41a589
  41a5e5:	mov    al,0x3e
  41a5e7:	push   esp
  41a5e8:	mov    es,WORD PTR ds:0xe8587ed5
  41a5ee:	rcr    dh,0x77
  41a5f1:	lds    edi,FWORD PTR [esi+eax*2]
  41a5f4:	sbb    esp,edi
  41a5f6:	inc    ebx
  41a5f7:	cmp    eax,DWORD PTR [ebp+ebp*2+0x7a7795e1]
  41a5fe:	push   eax
  41a5ff:	sbb    al,0x1b
  41a601:	adc    eax,0x1b244c77
  41a606:	popa   
  41a607:	out    0x65,eax
  41a609:	ror    eax,0x74
  41a60c:	xchg   BYTE PTR [edx],cl
  41a60e:	adc    DWORD PTR [edx],edi
  41a610:	(bad)  
  41a611:	push   ebx
  41a612:	xchg   ecx,eax
  41a613:	sbb    DWORD PTR [eax-0x53],eax
  41a616:	mov    ds:0xb6504580,al
  41a61b:	stos   BYTE PTR es:[edi],al
  41a61c:	sbb    ch,ch
  41a61e:	pusha  
  41a61f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a620:	pop    ebp
  41a621:	mov    ds:0x22d80f4d,al
  41a626:	dec    BYTE PTR [edx-0x70]
  41a629:	add    BYTE PTR [ebx-0x26030c8f],al
  41a62f:	cwde   
  41a630:	gs es cmp eax,0x28e687bd
  41a637:	inc    ebx
  41a638:	mov    eax,ds:0x77d274c4
  41a63d:	jae    0x41a676
  41a63f:	pop    es
  41a640:	mov    ds:0x58b20389,eax
  41a645:	mov    esi,0xc2a29a93
  41a64a:	dec    esp
  41a64b:	jo     0x41a6a0
  41a64d:	xchg   esi,eax
  41a64e:	call   0xa3985f8c
  41a653:	imul   DWORD PTR [ebp-0x44840594]
  41a659:	inc    ecx
  41a65a:	dec    ebp
  41a65b:	mov    edi,0xe06c95cc
  41a660:	cdq    
  41a661:	xchg   DWORD PTR [ebx+0x441b9315],eax
  41a667:	push   ecx
  41a668:	fnsave [esi+esi*1]
  41a66b:	push   es
  41a66c:	test   eax,0xed0929ed
  41a671:	jae    0x41a69f
  41a673:	ret    
  41a674:	xchg   esi,eax
  41a675:	inc    ebx
  41a676:	push   edx
  41a677:	adc    eax,0xa32e3915
  41a67c:	jo     0x41a60f
  41a67e:	mov    edx,0x1f1d8837
  41a683:	mov    ebx,0x9d8a46fd
  41a688:	int    0x2c
  41a68a:	pop    esp
  41a68b:	mov    ds:0x7901fc89,eax
  41a690:	imul   edx,DWORD PTR [ebx-0x5e],0x19
  41a694:	jno    0x41a711
  41a696:	test   ecx,esi
  41a698:	fdiv   DWORD PTR ss:[ecx-0x3c]
  41a69c:	nop
  41a69d:	push   edi
  41a69e:	lahf   
  41a69f:	rcr    DWORD PTR [ecx],0x22
  41a6a2:	cmp    BYTE PTR [edi+eax*1+0x6d26b63a],bl
  41a6a9:	js     0x41a6f0
  41a6ab:	ret    
  41a6ac:	pop    edx
  41a6ad:	retf   
  41a6ae:	fsubr  st(1),st
  41a6b0:	mov    dh,0x2
  41a6b2:	mov    dl,BYTE PTR [edx-0x3fb8ba85]
  41a6b8:	and    DWORD PTR ds:0x4b61a237,ecx
  41a6be:	dec    ebx
  41a6bf:	add    BYTE PTR [ebp+edx*8-0x55e9ce39],dh
  41a6c6:	mov    esi,gs
  41a6c8:	jg     0x41a6c8
  41a6ca:	popf   
  41a6cb:	leave  
  41a6cc:	inc    edx
  41a6cd:	push   esp
  41a6ce:	in     eax,0xc7
  41a6d0:	dec    edx
  41a6d1:	push   ecx
  41a6d2:	mov    dl,0x18
  41a6d4:	call   0xfd781bf2
  41a6d9:	outs   dx,DWORD PTR ds:[esi]
  41a6da:	hlt    
  41a6db:	fstp   DWORD PTR [ebp+0x785ee8c2]
  41a6e1:	test   al,0x65
  41a6e3:	pop    esp
  41a6e4:	xor    dl,dl
  41a6e6:	sbb    cl,BYTE PTR [ecx-0x2d]
  41a6e9:	inc    esi
  41a6ea:	lds    edx,FWORD PTR [eax+ecx*4-0x3e]
  41a6ee:	pusha  
  41a6ef:	sbb    DWORD PTR [esi+edx*8],edi
  41a6f2:	sbb    al,0x29
  41a6f4:	or     BYTE PTR [edx+ecx*1+0x75],al
  41a6f8:	mov    ds:0x78286baf,al
  41a6fd:	sub    BYTE PTR [eax],bh
  41a6ff:	cmp    edi,edi
  41a701:	arpl   WORD PTR [eax],dx
  41a703:	sbb    BYTE PTR [edx-0x7c],dl
  41a706:	gs sbb al,0xf9
  41a709:	in     eax,0xb6
  41a70b:	xor    al,0x8e
  41a70d:	out    dx,al
  41a70e:	jmp    0x41a778
  41a710:	xchg   esi,eax
  41a711:	or     ah,BYTE PTR [ebp-0x17666e66]
  41a717:	sub    edi,ecx
  41a719:	fwait
  41a71a:	shl    DWORD PTR [edi-0x5a7eff5b],cl
  41a720:	mov    dh,0xc
  41a722:	(bad)  
  41a724:	cwde   
  41a725:	xchg   BYTE PTR [edx],dl
  41a727:	(bad)  
  41a728:	stc    
  41a729:	sar    BYTE PTR [edx+0xd5e678],1
  41a72f:	add    BYTE PTR [eax],al
  41a731:	add    BYTE PTR [esi+0x6f],cl
  41a734:	je     0x41a75e
  41a736:	jne    0x41a773
  41a738:	pop    esi
  41a739:	outs   dx,DWORD PTR ds:[esi]
  41a73a:	out    dx,eax
  41a73b:	aaa    
  41a73c:	jae    0x41a716
  41a73e:	fmul   DWORD PTR [esi+ecx*1+0x123b9dd]
  41a745:	add    ah,dh
  41a747:	add    al,0x0
  41a749:	add    BYTE PTR [ebx+0x62c3da4b],al
  41a74f:	rcr    DWORD PTR [ecx+ebp*2],0xcd
  41a753:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a755:	xchg   ebx,eax
  41a756:	mov    eax,ds:0xe04e2355
  41a75b:	pop    ss
  41a75c:	(bad)  
  41a75d:	imul   edx
  41a75f:	aaa    
  41a760:	add    DWORD PTR [edx+0x4083459b],0x1d47707a
  41a76a:	jl     0x41a771
  41a76c:	loop   0x41a6fd
  41a76e:	ret    0xc5cf
  41a771:	adc    eax,0x5b5bf7a8
  41a776:	jbe    0x41a758
  41a778:	fldenv [eax+0x43]
  41a77b:	test   al,0x30
  41a77d:	jo     0x41a73a
  41a77f:	xchg   DWORD PTR [esi+0x3b],edx
  41a782:	ds mov dh,0x91
  41a785:	aas    
  41a786:	or     al,0x64
  41a788:	(bad)  
  41a789:	sar    BYTE PTR [ecx],1
  41a78b:	sub    BYTE PTR ds:0x4cb00ffd,0x8b
  41a792:	xor    dl,0xe1
  41a795:	mov    ch,0x45
  41a797:	and    eax,0x840fb7ab
  41a79c:	sbb    BYTE PTR [eax+0x15464263],dl
  41a7a2:	sbb    BYTE PTR [edi-0x4],bh
  41a7a5:	xor    BYTE PTR ds:0xa2d12b37,dh
  41a7ab:	xor    esp,edx
  41a7ad:	sbb    eax,0xc7b9c3d1
  41a7b2:	cwde   
  41a7b3:	cmp    eax,0x4dbf03c6
  41a7b8:	add    DWORD PTR [eax],0x57
  41a7bb:	js     0x41a7e9
  41a7bd:	cmp    BYTE PTR [ebx+0x1d],ch
  41a7c0:	mov    ebp,DWORD PTR [eax]
  41a7c2:	push   ss
  41a7c3:	ins    DWORD PTR es:[edi],dx
  41a7c4:	hlt    
  41a7c5:	sub    BYTE PTR [ebx-0x5a58314],ch
  41a7cb:	xchg   BYTE PTR [ebx-0x7bc46288],bl
  41a7d1:	int3   
  41a7d2:	push   edi
  41a7d3:	fisttp DWORD PTR [eax+0x57]
  41a7d6:	xor    BYTE PTR [ecx],0xeb
  41a7d9:	mov    edi,0x52c330da
  41a7de:	(bad)  
  41a7df:	mov    al,0xac
  41a7e1:	jp     0x41a80a
  41a7e3:	and    al,0x47
  41a7e5:	out    dx,al
  41a7e6:	push   esp
  41a7e7:	dec    esi
  41a7e8:	test   eax,0x3a126d03
  41a7ed:	sub    eax,0x323d23fd
  41a7f2:	adc    BYTE PTR fs:[edx-0x14],dh
  41a7f6:	es in  eax,0x19
  41a7f9:	push   0x1c
  41a7fb:	cld    
  41a7fc:	sbb    al,0xe1
  41a7fe:	and    eax,0xb4c18ae1
  41a803:	push   esi
  41a804:	sbb    eax,0x38d0ade4
  41a809:	xor    DWORD PTR [edi+0x2dcfb9cb],edx
  41a80f:	add    ebx,edx
  41a811:	and    DWORD PTR [esi-0x2d349357],eax
  41a817:	xchg   al,ah
  41a819:	in     eax,dx
  41a81a:	mov    BYTE PTR [ebx],bh
  41a81c:	sub    BYTE PTR [ebx],0xb5
  41a81f:	ja     0x41a854
  41a821:	inc    edx
  41a822:	outs   dx,BYTE PTR ds:[esi]
  41a823:	push   0xffffff84
  41a825:	inc    ebx
  41a826:	jb     0x41a7c2
  41a828:	lods   al,BYTE PTR ds:[esi]
  41a829:	mov    ah,0x82
  41a82b:	sbb    DWORD PTR [esp+eax*2-0x2fd3a42f],0xa09d2ac0
  41a836:	mov    ah,0xe3
  41a838:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a839:	cmp    BYTE PTR [ecx+edi*8-0x55],bh
  41a83d:	and    eax,0xbfe57b71
  41a842:	in     al,dx
  41a843:	sbb    al,0xf3
  41a845:	xlat   BYTE PTR ds:[ebx]
  41a846:	out    dx,al
  41a847:	add    eax,0xebcc7939
  41a84c:	(bad)  
  41a84d:	push   ss
  41a84e:	inc    edx
  41a84f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a850:	push   cs
  41a851:	call   0x2d82:0xfca6a805
  41a858:	xchg   edx,eax
  41a859:	and    esi,DWORD PTR [esi-0x7aa98ba1]
  41a85f:	or     al,0xb0
  41a861:	mov    ebx,0x3d6f8719
  41a866:	mov    es,ebp
  41a868:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a869:	dec    esi
  41a86a:	stos   BYTE PTR es:[edi],al
  41a86b:	push   ds
  41a86c:	ins    DWORD PTR es:[edi],dx
  41a86d:	fcmovnb st,st(3)
  41a86f:	mov    ebp,DWORD PTR [ebp+0x3e]
  41a872:	mov    bh,0x5b
  41a874:	xor    edi,esp
  41a876:	or     eax,0x6e63d35
  41a87b:	mov    edx,0x169a9159
  41a880:	pop    esp
  41a881:	dec    ecx
  41a882:	xlat   BYTE PTR ds:[ebx]
  41a883:	add    al,0xa
  41a885:	sub    dh,BYTE PTR [ebx+ebx*1]
  41a888:	xchg   ecx,eax
  41a889:	je     0x41a89d
  41a88b:	outs   dx,BYTE PTR ds:[esi]
  41a88c:	adc    DWORD PTR cs:[ebx+0x7ce4d0d4],edi
  41a893:	call   0x85907d23
  41a898:	rcr    BYTE PTR [edx+0x4a],1
  41a89b:	jne    0x41a8fe
  41a89d:	ret    
  41a89e:	ds jle 0x41a89c
  41a8a1:	mov    bl,0xe9
  41a8a3:	popa   
  41a8a4:	sub    al,0xac
  41a8a6:	ret    0x8f2b
  41a8a9:	adc    eax,DWORD PTR [edx-0x16]
  41a8ac:	add    DWORD PTR ds:[edx-0x53e0f5ef],eax
  41a8b3:	pop    ds
  41a8b4:	pop    ebx
  41a8b5:	repnz dec ebx
  41a8b7:	or     bl,bh
  41a8b9:	inc    edi
  41a8ba:	add    esp,esi
  41a8bc:	loopne 0x41a84d
  41a8be:	fwait
  41a8bf:	dec    edi
  41a8c0:	outs   dx,BYTE PTR ds:[esi]
  41a8c1:	loopne 0x41a866
  41a8c3:	stos   BYTE PTR es:[edi],al
  41a8c4:	shr    DWORD PTR [ebx+0x2b4086db],0x8c
  41a8cb:	adc    BYTE PTR [ebx+0x4626efdc],0x52
  41a8d2:	sbb    dl,BYTE PTR [esi]
  41a8d4:	and    al,0xdf
  41a8d6:	xchg   ebx,eax
  41a8d7:	inc    ebp
  41a8d8:	xor    WORD PTR [eax],di
  41a8db:	fcom   QWORD PTR [ecx+0x7aa909e]
  41a8e1:	fld    QWORD PTR [ebp+0x206d6e0b]
  41a8e7:	sub    eax,0x798eb1e1
  41a8ec:	push   ds
  41a8ed:	mov    al,ds:0x66da6033
  41a8f2:	shl    DWORD PTR [eax-0x65],cl
  41a8f5:	stos   DWORD PTR es:[edi],eax
  41a8f6:	adc    dh,BYTE PTR [ebx+0x2a46da19]
  41a8fc:	mov    es:0x2f17e285,eax
  41a902:	ins    BYTE PTR es:[edi],dx
  41a903:	inc    ebx
  41a904:	or     bl,al
  41a906:	xor    eax,0x4c295273
  41a90b:	push   0xffffff82
  41a90d:	mov    dl,0x8c
  41a90f:	and    bh,dh
  41a911:	jo     0x41a96a
  41a913:	jno    0x41a8a7
  41a915:	and    BYTE PTR [edi+esi*2+0x51],0x12
  41a91a:	or     BYTE PTR fs:[ebx+0x65],ah
  41a91e:	loope  0x41a968
  41a920:	shl    ch,0xc8
  41a923:	in     al,dx
  41a924:	das    
  41a925:	fist   DWORD PTR [ecx+0xe]
  41a928:	(bad)  
  41a929:	stc    
  41a92a:	mov    esi,0x32648a89
  41a92f:	xchg   ah,ah
  41a931:	jno    0x41a986
  41a933:	add    eax,0xb79d84d2
  41a938:	or     BYTE PTR [ebx],al
  41a93a:	mov    esi,0x77377e0e
  41a93f:	push   0xffffff8a
  41a941:	aam    0x68
  41a943:	aas    
  41a944:	and    ebp,DWORD PTR ds:0xd0333fbe
  41a94a:	bound  di,DWORD PTR [ebx+0x5c]
  41a94e:	xchg   edx,eax
  41a94f:	adc    edx,DWORD PTR [ebx+eax*8+0x11]
  41a953:	push   esi
  41a954:	xor    BYTE PTR [eax],dh
  41a956:	add    BYTE PTR [eax+0x35],bh
  41a959:	jp     0x41a8df
  41a95b:	sbb    BYTE PTR [ecx-0x5eaac247],bl
  41a961:	sbb    al,dh
  41a963:	cmp    al,0xbb
  41a965:	jnp    0x41a989
  41a967:	mov    fs,WORD PTR [esi]
  41a969:	adc    cl,BYTE PTR [esi-0x61]
  41a96c:	push   ss
  41a96d:	mov    eax,ds:0x7964e6dd
  41a972:	xchg   ecx,eax
  41a973:	ins    BYTE PTR es:[edi],dx
  41a974:	aad    0xed
  41a976:	pop    ss
  41a977:	in     al,dx
  41a978:	shr    BYTE PTR [edx-0x444bfd50],1
  41a97e:	out    0x98,al
  41a980:	cdq    
  41a981:	pop    eax
  41a982:	aad    0x2c
  41a984:	sub    al,0x43
  41a986:	in     eax,dx
  41a987:	fst    QWORD PTR [edx]
  41a989:	dec    DWORD PTR [edi+0x10bac899]
  41a98f:	fwait
  41a990:	lods   eax,DWORD PTR ds:[esi]
  41a991:	cmp    BYTE PTR [esi],dl
  41a993:	cld    
  41a994:	jnp    0x41a9d4
  41a996:	scas   eax,DWORD PTR es:[edi]
  41a997:	push   esp
  41a998:	div    ebx
  41a99a:	cmp    BYTE PTR [ecx-0x1c],ch
  41a99d:	jnp    0x41aa1d
  41a99f:	ss dec esp
  41a9a1:	xchg   ebp,eax
  41a9a2:	dec    edi
  41a9a3:	cmp    cl,bh
  41a9a5:	(bad)  
  41a9a6:	repz sbb esi,DWORD PTR [ecx-0x2]
  41a9aa:	pop    edx
  41a9ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9ac:	imul   ebp,ebx,0x63
  41a9af:	pop    ebp
  41a9b0:	lods   al,BYTE PTR ds:[esi]
  41a9b1:	add    al,0x36
  41a9b3:	xor    ecx,esp
  41a9b5:	leave  
  41a9b6:	pop    es
  41a9b7:	outs   dx,DWORD PTR ds:[esi]
  41a9b8:	or     BYTE PTR [edx],cl
  41a9ba:	mov    DWORD PTR [eax-0x29],esi
  41a9bd:	xor    dh,cl
  41a9bf:	sbb    al,BYTE PTR [edx-0x1d2cc353]
  41a9c5:	fmul   DWORD PTR [ebx-0x39]
  41a9c8:	outs   dx,BYTE PTR ds:[esi]
  41a9c9:	lea    edx,[ecx]
  41a9cb:	mov    ds:0xc9293f1f,al
  41a9d0:	or     eax,0x2d56e4c9
  41a9d5:	mov    esp,ecx
  41a9d7:	sub    eax,DWORD PTR [edx+0x6f]
  41a9da:	push   esp
  41a9db:	jae    0x41aa02
  41a9dd:	ficomp DWORD PTR [esi+0x46]
  41a9e0:	loope  0x41aa40
  41a9e2:	imul   ebx,DWORD PTR [ebx-0x6f],0xeb37dac8
  41a9e9:	popf   
  41a9ea:	sub    al,0x1e
  41a9ec:	dec    esp
  41a9ed:	mov    ds:0xd2af1a38,eax
  41a9f2:	fwait
  41a9f3:	into   
  41a9f4:	push   esi
  41a9f5:	sub    eax,0x83e7750b
  41a9fa:	mov    eax,ds:0x4b9b0f35
  41a9ff:	adc    al,0xbd
  41aa01:	div    DWORD PTR [ecx-0x3a3b3471]
  41aa07:	out    dx,al
  41aa08:	push   ds
  41aa09:	sub    esp,esp
  41aa0b:	cld    
  41aa0c:	pop    eax
  41aa0d:	dec    ecx
  41aa0e:	popa   
  41aa0f:	mov    al,0x88
  41aa11:	jne    0x41aa38
  41aa13:	ret    0xc701
  41aa16:	fidiv  DWORD PTR [esi]
  41aa18:	push   esp
  41aa19:	aam    0xfc
  41aa1b:	and    edx,DWORD PTR [eax-0x9]
  41aa1e:	push   cs
  41aa1f:	xor    al,0x66
  41aa21:	mov    bl,0x6b
  41aa23:	push   esp
  41aa24:	arpl   WORD PTR [ecx],ax
  41aa26:	scas   eax,DWORD PTR es:[edi]
  41aa27:	daa    
  41aa28:	out    0x52,al
  41aa2a:	mov    ?,ebx
  41aa2c:	pop    edx
  41aa2d:	adc    BYTE PTR [eax+0x3ad58cb3],dh
  41aa33:	fsubr  DWORD PTR es:[bp+di]
  41aa37:	add    eax,0x6b28b8db
  41aa3c:	fist   DWORD PTR [ecx+0x3f54a02]
  41aa42:	les    ebx,FWORD PTR [ebp+0x6f]
  41aa45:	pop    edx
  41aa46:	push   cs
  41aa47:	(bad)  
  41aa48:	jl     0x41aa9b
  41aa4a:	jbe    0x41a9f4
  41aa4c:	xor    al,0x9b
  41aa4e:	adc    BYTE PTR fs:[eax+ebp*8+0x67abb28c],bl
  41aa56:	fwait
  41aa57:	push   cs
  41aa58:	(bad)  
  41aa59:	pop    ebp
  41aa5a:	daa    
  41aa5b:	sar    dl,0x4c
  41aa5e:	jnp    0x41aa94
  41aa60:	adc    al,0xa6
  41aa62:	sbb    al,0xb4
  41aa64:	(bad)  
  41aa65:	pop    ss
  41aa66:	jb     0x41aa8f
  41aa68:	xor    al,0x37
  41aa6a:	mov    ebx,0x7d892be7
  41aa6f:	shr    DWORD PTR [eax-0x218004e3],0xd8
  41aa76:	repnz mov DWORD PTR [ebp-0x5e138a88],edi
  41aa7d:	mov    esp,0x5264c0d5
  41aa82:	nop
  41aa83:	xchg   edi,eax
  41aa84:	push   ebp
  41aa85:	fisubr DWORD PTR [edx+0x11]
  41aa88:	cmp    eax,0xe913827d
  41aa8d:	ins    BYTE PTR es:[edi],dx
  41aa8e:	mov    esp,0xac4749e6
  41aa93:	cwde   
  41aa94:	pop    esi
  41aa95:	mov    bh,0x6d
  41aa97:	arpl   WORD PTR [ecx],bx
  41aa99:	stos   DWORD PTR es:[edi],eax
  41aa9a:	cmp    bh,BYTE PTR [edx-0x7a]
  41aa9d:	and    cl,BYTE PTR [edi]
  41aa9f:	dec    ebp
  41aaa0:	mov    edi,0xaf9e9346
  41aaa5:	xor    dl,ch
  41aaa7:	test   eax,0x4290d9cb
  41aaac:	xchg   ebp,eax
  41aaad:	jg     0x41aade
  41aaaf:	add    DWORD PTR [ecx+0x1e],ebx
  41aab2:	call   FWORD PTR ds:0xa1d6a1
  41aab8:	mov    DWORD PTR [esi+0x5d],ebx
  41aabb:	(bad)  
  41aabc:	cmp    eax,0xa540f2c1
  41aac1:	and    BYTE PTR [edi+0x52a9943b],al
  41aac7:	in     eax,dx
  41aac8:	dec    edx
  41aac9:	mov    cl,0x52
  41aacb:	rol    BYTE PTR [ebp+0x1c],0x70
  41aacf:	add    BYTE PTR [edx+ebp*2-0x3b0289f9],ch
  41aad6:	mul    DWORD PTR [edx+0x60]
  41aad9:	dec    ebp
  41aada:	clc    
  41aadb:	call   0xdc1c3201
  41aae0:	cmp    ah,bl
  41aae2:	cli    
  41aae3:	adc    DWORD PTR [edx-0x80],ecx
  41aae6:	cmp    esp,DWORD PTR [esi-0x7b1816d1]
  41aaec:	int    0x8
  41aaee:	ins    DWORD PTR es:[edi],dx
  41aaef:	shl    DWORD PTR [ebx],0x8a
  41aaf2:	push   edi
  41aaf3:	sub    eax,0x9c1c6657
  41aaf8:	ror    BYTE PTR [edi+0x25],0xe5
  41aafc:	xchg   ecx,eax
  41aafd:	jp     0x41ab65
  41aaff:	pop    eax
  41ab00:	sub    ebx,esp
  41ab02:	gs push esi
  41ab04:	retf   
  41ab05:	sub    ecx,DWORD PTR [ecx-0x61849b8c]
  41ab0b:	sub    DWORD PTR [ebx],edi
  41ab0d:	call   0x1514:0x454f0009
  41ab14:	inc    esp
  41ab15:	not    DWORD PTR [edx]
  41ab17:	push   edi
  41ab18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab19:	and    BYTE PTR [eax+0x26],cl
  41ab1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab1d:	ret    0xa157
  41ab20:	sbb    ebp,ebp
  41ab22:	fwait
  41ab23:	cmp    BYTE PTR [ebp+0x78],0x66
  41ab27:	jbe    0x41aabf
  41ab29:	lods   al,BYTE PTR ds:[esi]
  41ab2a:	imul   eax,ebp,0xa89c07c8
  41ab30:	pop    ss
  41ab31:	sub    bh,dl
  41ab33:	mov    ds:0x7dc41c7a,eax
  41ab38:	inc    BYTE PTR [edi]
  41ab3a:	ins    DWORD PTR es:[edi],dx
  41ab3b:	and    dl,ah
  41ab3d:	das    
  41ab3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab3f:	stos   DWORD PTR es:[edi],eax
  41ab40:	addr16 jmp 0x55fe:0x6afee637
  41ab48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab49:	fcomp  DWORD PTR [edi]
  41ab4b:	addps  xmm0,XMMWORD PTR [ebp+0x6c]
  41ab4f:	mov    ebp,0x458b725
  41ab54:	imul   ebp,edx,0x26
  41ab57:	out    dx,eax
  41ab58:	addr16 xchg ebx,eax
  41ab5a:	jecxz  0x41ab3d
  41ab5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab5d:	mov    dh,0x59
  41ab5f:	vsubsd xmm5,xmm6,QWORD PTR [ecx-0x39ca158c]
  41ab67:	or     al,0x45
  41ab69:	lahf   
  41ab6a:	idiv   DWORD PTR [edx-0xe7c73e9]
  41ab70:	test   eax,0x8caf3cc0
  41ab75:	out    dx,eax
  41ab76:	inc    edx
  41ab77:	push   cs
  41ab78:	outs   dx,DWORD PTR ds:[esi]
  41ab79:	fisttp WORD PTR [edx-0x75]
  41ab7c:	lds    esi,FWORD PTR [ebx-0x25e3b3fe]
  41ab82:	inc    ebp
  41ab83:	pop    edi
  41ab84:	push   edi
  41ab85:	imul   edi,DWORD PTR [eax+0x3bf39981],0xa33c7245
  41ab8f:	cmp    BYTE PTR [edx],al
  41ab91:	js     0x41ab37
  41ab93:	rcl    edx,1
  41ab95:	or     edi,DWORD PTR [ebp-0x7fc5d34b]
  41ab9b:	aam    0xd0
  41ab9d:	fwait
  41ab9e:	in     eax,dx
  41ab9f:	cmp    DWORD PTR [edi-0x780050db],0x8b4fa153
  41aba9:	inc    ebp
  41abaa:	jmp    0xad8f88d5
  41abaf:	pop    ds
  41abb0:	cdq    
  41abb1:	push   esp
  41abb2:	popa   
  41abb3:	add    dl,dl
  41abb5:	retf   0x78c4
  41abb8:	out    dx,al
  41abb9:	mov    eax,ds:0x6941128e
  41abbe:	push   ss
  41abbf:	sbb    DWORD PTR [esi-0x45],0x4add64e0
  41abc6:	or     al,dh
  41abc8:	add    esp,edx
  41abca:	mov    ds:0x2776658,al
  41abcf:	into   
  41abd0:	mov    ebp,DWORD PTR [esi]
  41abd2:	xchg   ebp,eax
  41abd3:	jb     0x41ab92
  41abd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abd6:	mov    bh,0xf6
  41abd8:	cmp    ah,cl
  41abda:	pop    ds
  41abdb:	test   bl,al
  41abdd:	dec    esi
  41abde:	aas    
  41abdf:	jne    0x41ab71
  41abe1:	out    0x4f,al
  41abe3:	xor    ebp,esp
  41abe5:	ja     0x41ac5b
  41abe7:	(bad)  
  41abe8:	leave  
  41abe9:	jmp    0x124e1f97
  41abee:	dec    esi
  41abef:	das    
  41abf0:	pop    ss
  41abf1:	cli    
  41abf2:	into   
  41abf3:	rcl    esi,0x74
  41abf6:	iret   
  41abf7:	cli    
  41abf8:	pop    ebx
  41abf9:	xor    al,bl
  41abfb:	sub    DWORD PTR [edx-0xe],esp
  41abfe:	out    0x15,al
  41ac00:	jo     0x41ac65
  41ac02:	jnp    0x41abc2
  41ac04:	in     al,0x9b
  41ac06:	add    bh,ch
  41ac08:	sub    ecx,DWORD PTR [ecx+eiz*8]
  41ac0b:	inc    esp
  41ac0c:	sti    
  41ac0d:	enter  0xea07,0x2a
  41ac11:	fst    DWORD PTR [edx]
  41ac13:	and    eax,0xc279be01
  41ac18:	mov    bl,0x7e
  41ac1a:	xchg   esi,eax
  41ac1b:	inc    ebx
  41ac1c:	mov    DWORD PTR [edx-0x11],edi
  41ac1f:	mov    eax,ds:0xc6e5cf08
  41ac24:	mov    cl,bl
  41ac26:	leave  
  41ac27:	adc    DWORD PTR ds:0xdf9bb262,esi
  41ac2d:	lea    esp,[ebx]
  41ac2f:	leave  
  41ac30:	pop    ebx
  41ac31:	sbb    BYTE PTR [eax+0x45],bl
  41ac34:	or     ebp,DWORD PTR [esi]
  41ac36:	in     al,dx
  41ac37:	rol    BYTE PTR [ebx],0x83
  41ac3a:	rcr    ebp,0x32
  41ac3d:	inc    ebx
  41ac3e:	add    BYTE PTR [eax],al
  41ac40:	add    BYTE PTR [eax],al
  41ac42:	dec    ebp
  41ac43:	dec    ebp
  41ac44:	ss retf 0xfb36
  41ac48:	std    
  41ac49:	iret   
  41ac4a:	cmp    esp,DWORD PTR [edx]
  41ac4c:	(bad)  
  41ac4d:	cld    
  41ac4e:	lahf   
  41ac4f:	fwait
  41ac50:	in     eax,dx
  41ac51:	sub    ebp,DWORD PTR [ebp-0xbfffed8]
  41ac57:	add    al,0x0
  41ac59:	add    BYTE PTR [ebp-0x712dba8a],dh
  41ac5f:	outs   dx,BYTE PTR ds:[esi]
  41ac60:	in     eax,dx
  41ac61:	cs dec edi
  41ac63:	je     0x41acce
  41ac65:	call   0xff1e:0x2930e911
  41ac6c:	add    DWORD PTR [edi+0x66621afd],esi
  41ac72:	shl    ebx,0xbf
  41ac75:	sub    ah,BYTE PTR [ebp+ecx*1-0x19861fcf]
  41ac7c:	gs (bad) 
  41ac7e:	(bad)  
  41ac80:	lds    ebx,FWORD PTR [edx-0x4a]
  41ac83:	pushf  
  41ac84:	fs pop edx
  41ac86:	and    ebp,edi
  41ac88:	adc    edi,eax
  41ac8a:	sti    
  41ac8b:	push   edi
  41ac8c:	shl    dl,1
  41ac8e:	and    eax,esi
  41ac90:	in     al,dx
  41ac91:	or     dl,dl
  41ac93:	js     0x41ac68
  41ac95:	mov    ecx,edx
  41ac97:	or     bl,ah
  41ac99:	das    
  41ac9a:	inc    DWORD PTR gs:[edi]
  41ac9d:	outs   dx,BYTE PTR ds:[esi]
  41ac9e:	dec    ecx
  41ac9f:	loop   0x41ac87
  41aca1:	lock cld 
  41aca3:	inc    ebp
  41aca4:	and    BYTE PTR [edx+0x0],ch
  41aca7:	push   ecx
  41aca8:	cmp    al,0xb8
  41acaa:	push   ds
  41acab:	ins    BYTE PTR es:[edi],dx
  41acac:	push   ebx
  41acad:	enter  0x40b8,0x79
  41acb1:	mov    eax,0xcf1e6479
  41acb6:	or     DWORD PTR [ebp+0x36],edx
  41acb9:	mov    dh,0xda
  41acbb:	fmul   QWORD PTR [esi]
  41acbd:	xor    eax,0xc2aa2c14
  41acc2:	neg    ch
  41acc4:	mov    bh,0xb4
  41acc6:	int3   
  41acc7:	pop    ebx
  41acc8:	call   0x6c9f:0x2eda20fa
  41accf:	mov    ecx,0xd8883e49
  41acd4:	stos   BYTE PTR es:[edi],al
  41acd5:	sub    eax,0xd7f1a8e1
  41acda:	xchg   ah,al
  41acdc:	xor    BYTE PTR [ebx+0x74],0x73
  41ace0:	mov    esp,DWORD PTR [edx-0x7d]
  41ace3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ace4:	pop    edx
  41ace5:	daa    
  41ace6:	cmp    eax,0xabec07a5
  41aceb:	pop    ss
  41acec:	or     al,0x7b
  41acee:	dec    esi
  41acef:	repnz aad 0x63
  41acf2:	adc    esi,DWORD PTR [ebx+0x6c8f526e]
  41acf8:	jb     0x41ad0e
  41acfa:	in     eax,0xb5
  41acfc:	mov    dh,0xee
  41acfe:	stc    
  41acff:	imul   esp,DWORD PTR [eax],0x24
  41ad02:	inc    edx
  41ad03:	sub    esi,0x9d582657
  41ad09:	and    bl,BYTE PTR [ecx+0x713447bb]
  41ad0f:	ficomp DWORD PTR [ecx+0xc]
  41ad12:	sub    cl,dl
  41ad14:	(bad)  
  41ad15:	daa    
  41ad16:	xor    edx,DWORD PTR [eax-0xb]
  41ad19:	sbb    cl,ah
  41ad1b:	push   ebp
  41ad1c:	xchg   edx,eax
  41ad1d:	fwait
  41ad1e:	icebp  
  41ad1f:	outs   dx,BYTE PTR ds:[esi]
  41ad20:	pop    ds
  41ad21:	cdq    
  41ad22:	cmp    al,0x8a
  41ad24:	test   BYTE PTR [ebx-0x10428c0c],al
  41ad2a:	shl    BYTE PTR [ecx],cl
  41ad2c:	sbb    al,BYTE PTR [edx]
  41ad2e:	cwde   
  41ad2f:	ret    0x4361
  41ad32:	test   BYTE PTR [eax+0x79],bl
  41ad35:	jmp    0x41ad0b
  41ad37:	imul   DWORD PTR [edx-0x2b3cbb9d]
  41ad3d:	sti    
  41ad3e:	push   ebx
  41ad3f:	fcom   DWORD PTR [ecx-0x458f788c]
  41ad45:	or     edx,esi
  41ad47:	aad    0x66
  41ad49:	mov    ebp,0xd409e63e
  41ad4e:	xor    BYTE PTR [esi+0x761fa248],0x99
  41ad55:	dec    eax
  41ad56:	into   
  41ad57:	and    DWORD PTR [eax],edx
  41ad59:	in     eax,0xf7
  41ad5b:	inc    edx
  41ad5c:	and    al,0x84
  41ad5e:	or     dl,BYTE PTR [ebx+0x438785e4]
  41ad64:	dec    esp
  41ad65:	das    
  41ad66:	xor    DWORD PTR [eax+ebx*4-0x6b4ff2a3],esp
  41ad6d:	(bad)  
  41ad6f:	repz cdq 
  41ad71:	test   eax,0xea8adbe6
  41ad76:	div    BYTE PTR [edx+0x16ab9299]
  41ad7c:	sar    BYTE PTR [ebp+0x6d71b14],cl
  41ad82:	sub    dh,BYTE PTR [esp+ecx*8-0x4e]
  41ad86:	xor    ch,0xca
  41ad89:	xor    DWORD PTR [eax+0xb0cfebc],edi
  41ad8f:	popa   
  41ad90:	or     al,0x89
  41ad92:	daa    
  41ad93:	mov    WORD PTR cs:[eax],ds
  41ad96:	lea    esi,[edi+0x485b2082]
  41ad9c:	cmc    
  41ad9d:	cmp    bl,BYTE PTR [edx]
  41ad9f:	cwde   
  41ada0:	stos   DWORD PTR es:[edi],eax
  41ada1:	pop    ecx
  41ada2:	sti    
  41ada3:	sub    esi,edi
  41ada5:	idiv   BYTE PTR [eiz*8-0x2ff23798]
  41adac:	dec    ebp
  41adad:	jo     0x41ae01
  41adaf:	in     eax,dx
  41adb0:	mov    ecx,0xe9d4d70
  41adb5:	and    DWORD PTR [eax-0x11],ebx
  41adb8:	mov    WORD PTR [edx-0x54c6924d],gs
  41adbe:	cmc    
  41adbf:	inc    ecx
  41adc0:	xlat   BYTE PTR ds:[ebx]
  41adc1:	test   al,0x77
  41adc3:	sub    al,BYTE PTR [edi]
  41adc5:	push   esp
  41adc6:	rcl    DWORD PTR [edx+eiz*2-0x6c],cl
  41adca:	les    edi,FWORD PTR [ecx-0x520ba862]
  41add0:	arpl   di,ax
  41add2:	out    dx,al
  41add3:	fidivr DWORD PTR [eax-0x43d239da]
  41add9:	cmp    BYTE PTR [eax+0x4d],0x57
  41addd:	dec    eax
  41adde:	mov    al,0x6e
  41ade0:	cmp    BYTE PTR ds:0x6d1d6205,cl
  41ade6:	push   esp
  41ade7:	ss lahf 
  41ade9:	and    DWORD PTR [edi],esi
  41adeb:	ins    BYTE PTR es:[edi],dx
  41adec:	dec    edi
  41aded:	xor    al,0x77
  41adef:	outs   dx,DWORD PTR ds:[esi]
  41adf0:	leave  
  41adf1:	and    BYTE PTR [ecx-0x1c95769d],0xb
  41adf8:	mov    BYTE PTR [ecx],ch
  41adfa:	popf   
  41adfb:	shl    DWORD PTR [ebx+0x43],cl
  41adfe:	mov    dl,0x88
  41ae00:	cmc    
  41ae01:	pop    ss
  41ae02:	sub    DWORD PTR [edi+0xe446997],edx
  41ae08:	cs xor al,0xde
  41ae0b:	inc    ebx
  41ae0c:	adc    eax,0xf82771fc
  41ae11:	fstp   TBYTE PTR [ebx+0x56]
  41ae14:	iret   
  41ae15:	mov    ebp,DWORD PTR [ecx]
  41ae17:	xchg   ebx,eax
  41ae18:	xchg   ebx,eax
  41ae19:	adc    ecx,DWORD PTR [ebx-0x2fd002e7]
  41ae1f:	bswap  edx
  41ae21:	jle    0x41ae4b
  41ae23:	rol    DWORD PTR [ebp-0x7f],1
  41ae26:	lods   eax,DWORD PTR ds:[esi]
  41ae27:	jo     0x41ae34
  41ae29:	mov    BYTE PTR [ebx+0x39],bl
  41ae2c:	fidivr DWORD PTR [ecx-0x4f]
  41ae2f:	sti    
  41ae30:	test   DWORD PTR [ebx],esp
  41ae32:	arpl   WORD PTR ds:0xfd5dfae5,dx
  41ae38:	out    0x2,eax
  41ae3a:	push   cs
  41ae3b:	(bad)  
  41ae3c:	mov    ds:0x27c9bca6,eax
  41ae41:	mov    ds:0xafba403b,al
  41ae46:	gs mov edx,0xb94a8c88
  41ae4c:	mov    dh,0x7c
  41ae4e:	pop    edx
  41ae4f:	jle    0x41aec3
  41ae51:	adc    ecx,DWORD PTR [eax+0x66]
  41ae54:	pushf  
  41ae55:	dec    ebp
  41ae56:	int    0xc4
  41ae58:	int3   
  41ae59:	into   
  41ae5a:	push   ds
  41ae5b:	fxtract 
  41ae5d:	lods   eax,DWORD PTR ds:[esi]
  41ae5e:	popa   
  41ae5f:	or     edx,DWORD PTR [ecx-0x6f]
  41ae62:	add    BYTE PTR [ebx+0x40],al
  41ae65:	arpl   WORD PTR [eax-0x4e],ax
  41ae68:	pop    eax
  41ae69:	call   FWORD PTR [esp+esi*2-0x4863a08f]
  41ae70:	push   ecx
  41ae71:	loop   0x41ae24
  41ae73:	adc    ebp,DWORD PTR [edi]
  41ae75:	ja     0x41ae68
  41ae77:	daa    
  41ae78:	jne    0x41aea4
  41ae7a:	add    ch,BYTE PTR [ecx-0x93bbd8d]
  41ae80:	jbe    0x41aeb7
  41ae82:	retf   0x835e
  41ae85:	dec    ecx
  41ae86:	jmp    0x4a46f07b
  41ae8b:	adc    DWORD PTR [edx-0x10],0xddeff8c4
  41ae92:	ins    DWORD PTR es:[edi],dx
  41ae93:	xor    ch,BYTE PTR [ecx+ebx*8]
  41ae96:	adc    ah,BYTE PTR [ecx-0x7]
  41ae99:	lds    edi,FWORD PTR [ebp+0x7a]
  41ae9c:	cmp    bh,BYTE PTR [ecx]
  41ae9e:	mov    cl,0xe4
  41aea0:	mov    esi,edx
  41aea2:	(bad)  
  41aea4:	jmp    0x41aed8
  41aea6:	lahf   
  41aea7:	(bad)  
  41aea8:	xchg   ecx,eax
  41aea9:	add    al,0x26
  41aeab:	pop    edi
  41aeac:	imul   edx,DWORD PTR [ecx-0x77],0x703b3c1e
  41aeb3:	pop    esi
  41aeb4:	popa   
  41aeb5:	dec    edx
  41aeb6:	rol    DWORD PTR [eax-0x51dc9393],cl
  41aebc:	adc    edx,0xffffffc6
  41aebf:	inc    esi
  41aec0:	aaa    
  41aec1:	es pusha 
  41aec3:	inc    eax
  41aec4:	mov    dl,dh
  41aec6:	in     al,dx
  41aec7:	enter  0xe86b,0x53
  41aecb:	push   edx
  41aecc:	sbb    eax,0x1ca0f7db
  41aed1:	dec    esp
  41aed2:	cs pop es
  41aed4:	cld    
  41aed5:	mov    ebx,0x46263618
  41aeda:	xchg   esp,eax
  41aedb:	cs jbe 0x41aee2
  41aede:	fld    TBYTE PTR [edi-0x7e]
  41aee1:	jge    0x41af45
  41aee3:	dec    esp
  41aee4:	(bad)  
  41aee5:	lods   al,BYTE PTR ds:[esi]
  41aee6:	mov    ecx,0xb19f04b5
  41aeeb:	pushf  
  41aeec:	dec    edi
  41aeed:	xor    DWORD PTR [edi-0x14],edi
  41aef0:	xor    eax,DWORD PTR [edx+ebx*1-0x28]
  41aef4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aef5:	sbb    bl,BYTE PTR [eax]
  41aef7:	test   eax,0x4aaa3499
  41aefc:	lahf   
  41aefd:	je     0x41aee0
  41aeff:	lock mov cl,0x35
  41af02:	stos   DWORD PTR es:[edi],eax
  41af03:	mov    ebp,0xff945193
  41af08:	jecxz  0x41aee4
  41af0a:	bound  eax,QWORD PTR [esi+0x37]
  41af0d:	inc    ebp
  41af0e:	out    dx,eax
  41af0f:	jbe    0x41aed8
  41af11:	pop    eax
  41af12:	cwde   
  41af13:	enter  0xa12a,0x79
  41af17:	enter  0xd83b,0xb8
  41af1b:	inc    esp
  41af1c:	les    esp,FWORD PTR [edx+0x0]
  41af1f:	add    cl,BYTE PTR [esp+ebx*4]
  41af22:	mov    edi,0x5fdaf2e2
  41af27:	loope  0x41af35
  41af29:	clc    
  41af2a:	push   es
  41af2b:	jl     0x41aebc
  41af2d:	call   0x8205:0x600ddfad
  41af34:	scas   al,BYTE PTR es:[edi]
  41af35:	jns    0x41aeff
  41af37:	sbb    BYTE PTR [esi],dl
  41af39:	xchg   esi,eax
  41af3a:	inc    esi
  41af3b:	adc    eax,DWORD PTR [ebx]
  41af3d:	stos   BYTE PTR es:[edi],al
  41af3e:	add    eax,0x77f716e1
  41af43:	xor    ax,0x6a3b
  41af47:	sub    al,0xa7
  41af49:	int3   
  41af4a:	test   DWORD PTR [esi-0x78],esp
  41af4d:	aaa    
  41af4e:	cwde   
  41af4f:	enter  0x8ec3,0xab
  41af53:	jno    0x41af56
  41af55:	enter  0x7258,0x2e
  41af59:	xchg   ecx,eax
  41af5a:	jno    0x41af97
  41af5c:	iret   
  41af5d:	ja     0x41af71
  41af5f:	push   edx
  41af60:	xchg   DWORD PTR [ebp+0x1b],ebp
  41af63:	and    eax,0x8a20534f
  41af68:	mov    ah,0xcc
  41af6a:	fimul  DWORD PTR [ebx]
  41af6c:	(bad)  
  41af6e:	stc    
  41af6f:	test   al,0x2d
  41af71:	jo     0x41af7f
  41af73:	inc    edx
  41af74:	cdq    
  41af75:	repz mov dh,0x37
  41af78:	lds    ebx,FWORD PTR [edi+edi*8+0x25801256]
  41af7f:	push   cs
  41af80:	push   esp
  41af81:	push   edi
  41af82:	xchg   edi,eax
  41af83:	icebp  
  41af84:	add    al,0xe1
  41af86:	push   ebx
  41af87:	mov    ch,ah
  41af89:	imul   esp,edx,0x85e0bb34
  41af8f:	out    dx,eax
  41af90:	pop    ebx
  41af91:	outs   dx,DWORD PTR ds:[esi]
  41af92:	mov    al,ds:0xe7aca158
  41af97:	imul   eax,DWORD PTR [ebx],0x37309a6e
  41af9d:	add    esp,esp
  41af9f:	pop    edx
  41afa0:	cdq    
  41afa1:	cdq    
  41afa2:	scas   al,BYTE PTR es:[edi]
  41afa3:	sbb    DWORD PTR es:[ecx+0x36],ecx
  41afa7:	mov    dl,0xb
  41afa9:	pop    ss
  41afaa:	enter  0xa6be,0xf1
  41afae:	loop   0x41b02c
  41afb0:	mov    bl,BYTE PTR [ecx]
  41afb2:	sub    ebp,edi
  41afb4:	xor    eax,0xa5a65757
  41afb9:	mov    ds:0xc7f0b048,eax
  41afbe:	not    DWORD PTR [edi]
  41afc0:	daa    
  41afc1:	(bad)  
  41afc3:	fcmovne st,st(1)
  41afc5:	push   0x6
  41afc7:	adc    edx,ebx
  41afc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afca:	stos   BYTE PTR es:[edi],al
  41afcb:	(bad)  
  41afcc:	sti    
  41afcd:	dec    esi
  41afce:	mov    DWORD PTR [edi+ebp*2+0x8],ecx
  41afd2:	add    DWORD PTR [esi],edx
  41afd4:	or     DWORD PTR [esi],ebx
  41afd6:	inc    edx
  41afd7:	gs (bad) 
  41afd9:	mov    ?,WORD PTR ds:0x39c127f3
  41afdf:	cwde   
  41afe0:	lea    edx,[edi-0x6db281e6]
  41afe6:	xchg   BYTE PTR [edx],dh
  41afe8:	icebp  
  41afe9:	fnsave [edx]
  41afeb:	repz in al,dx
  41afed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afee:	arpl   WORD PTR ds:0x84faf900,bp
  41aff4:	sub    DWORD PTR [ebx],0xe603490c
  41affa:	and    eax,DWORD PTR [ecx]
  41affc:	jno    0x41b074
  41affe:	push   0xffffff81
  41b000:	fdiv   QWORD PTR [edx-0x4]
  41b003:	sub    al,0x19
  41b005:	clc    
  41b006:	jbe    0x41afde
  41b008:	jg     0x41af96
  41b00a:	jle    0x41b04a
  41b00c:	mov    ecx,0xae42b91c
  41b011:	lods   al,BYTE PTR ds:[esi]
  41b012:	push   es
  41b013:	and    ch,BYTE PTR [edi]
  41b015:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b016:	into   
  41b017:	cwde   
  41b018:	mov    eax,0x57bc1a46
  41b01d:	je     0x41b02a
  41b01f:	add    eax,0xb42fc094
  41b024:	into   
  41b025:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b026:	(bad)  
  41b027:	cld    
  41b028:	pop    ss
  41b029:	repnz pop es
  41b02b:	xchg   edx,eax
  41b02c:	inc    ecx
  41b02d:	jns    0x41afc2
  41b02f:	mov    es,WORD PTR [esi-0x5b]
  41b032:	cli    
  41b033:	jge    0x41b06a
  41b035:	std    
  41b036:	mov    al,0xb6
  41b038:	jbe    0x41afbd
  41b03a:	fucomp st(0)
  41b03c:	cmp    DWORD PTR [edi],esi
  41b03e:	ins    DWORD PTR es:[edi],dx
  41b03f:	xor    al,0x9a
  41b041:	repz pop eax
  41b043:	retf   0xeef8
  41b046:	in     eax,0x55
  41b048:	inc    eax
  41b049:	imul   ecx,DWORD PTR [esi-0x27e50edf],0x8548891a
  41b053:	stc    
  41b054:	pop    ss
  41b055:	mov    ecx,0x891cc340
  41b05a:	(bad)  
  41b05b:	retf   
  41b05c:	or     eax,0x85cf482a
  41b061:	mov    WORD PTR [edx+eax*2+0x245c1210],ss
  41b068:	add    esi,DWORD PTR [esi-0x245d7ba5]
  41b06e:	pop    ebx
  41b06f:	add    al,0x96
  41b071:	pop    edx
  41b072:	adc    bh,ah
  41b074:	push   0x7f
  41b076:	pop    esi
  41b077:	pushf  
  41b078:	ret    0xab9f
  41b07b:	(bad)  
  41b07c:	leave  
  41b07d:	xor    eax,0x760a8b6f
  41b082:	or     ebp,DWORD PTR [eax-0x6546bad0]
  41b088:	cdq    
  41b089:	mul    DWORD PTR [esi+edx*4-0x3]
  41b08d:	ds (bad) 
  41b08f:	and    al,0x47
  41b091:	pushf  
  41b092:	lock lods eax,DWORD PTR ds:[esi]
  41b094:	ror    BYTE PTR [ebx-0x4ab36eca],1
  41b09a:	pop    eax
  41b09b:	pusha  
  41b09c:	pop    es
  41b09d:	adc    BYTE PTR [ecx+0x10],0x2e
  41b0a1:	sbb    bh,bh
  41b0a3:	cmp    eax,0x48f9c015
  41b0a8:	out    dx,eax
  41b0a9:	stos   DWORD PTR es:[edi],eax
  41b0aa:	out    0x32,eax
  41b0ac:	ins    BYTE PTR es:[edi],dx
  41b0ad:	xor    ah,BYTE PTR [eax-0x75]
  41b0b0:	dec    ebx
  41b0b1:	or     DWORD PTR [ecx-0x39],esp
  41b0b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0b5:	js     0x41b076
  41b0b7:	cwde   
  41b0b8:	sbb    eax,0xcfea507f
  41b0bd:	into   
  41b0be:	jmp    0xfbb:0xda2b78de
  41b0c5:	pusha  
  41b0c6:	mov    edx,DWORD PTR [eax]
  41b0c8:	retf   0x2a28
  41b0cb:	bound  esp,QWORD PTR [eax]
  41b0cd:	nop
  41b0ce:	in     eax,dx
  41b0cf:	dec    ecx
  41b0d0:	sahf   
  41b0d1:	cmp    ebx,esp
  41b0d3:	gs clc 
  41b0d5:	jle    0x41b0a4
  41b0d7:	mov    eax,ds:0x25523600
  41b0dc:	out    0x2,eax
  41b0de:	adc    eax,0xf703a4c0
  41b0e3:	addr16 in al,dx
  41b0e5:	fdivr  st(4),st
  41b0e7:	loopne 0x41b0aa
  41b0e9:	(bad)  
  41b0ea:	mov    bh,0x0
  41b0ec:	jb     0x41b0ba
  41b0ee:	(bad)  
  41b0ef:	push   esp
  41b0f0:	outs   dx,BYTE PTR ds:[esi]
  41b0f1:	pop    edx
  41b0f2:	xchg   esi,eax
  41b0f3:	xor    esi,ebp
  41b0f5:	pushf  
  41b0f6:	(bad)  
  41b0f7:	in     al,dx
  41b0f8:	sbb    DWORD PTR [edx],ecx
  41b0fa:	dec    ebx
  41b0fb:	ss jo  0x41b12d
  41b0fe:	scas   al,BYTE PTR es:[edi]
  41b0ff:	dec    esi
  41b100:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b101:	cs jge 0x41b09d
  41b104:	jmp    0x41b08f
  41b106:	jnp    0x41b148
  41b108:	push   edx
  41b109:	adc    BYTE PTR [ebp+0x701a09ed],cl
  41b10f:	mov    WORD PTR [ebp+0x1a05f54d],cs
  41b115:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b117:	add    al,0x97
  41b119:	xchg   DWORD PTR [esi-0x1f],edi
  41b11c:	push   ebx
  41b11d:	scas   al,BYTE PTR es:[edi]
  41b11e:	pop    ds
  41b11f:	and    DWORD PTR [edx],esp
  41b121:	retf   0xdc3c
  41b124:	cmc    
  41b125:	leave  
  41b126:	xor    DWORD PTR cs:[edi+0x45],ebx
  41b12a:	je     0x41b0fe
  41b12c:	pushaw 
  41b12e:	add    ah,bh
  41b130:	jae    0x41b140
  41b132:	jno    0x41b178
  41b134:	(bad)  
  41b135:	pop    ebx
  41b136:	fucom  st(0)
  41b138:	aaa    
  41b139:	dec    esp
  41b13a:	neg    DWORD PTR [ebx-0x3c9f0eaa]
  41b140:	in     eax,dx
  41b141:	and    al,0x73
  41b143:	mov    eax,ds:0xf5b72e81
  41b148:	xchg   edi,eax
  41b149:	popf   
  41b14a:	test   al,0xba
  41b14c:	ror    BYTE PTR [eax+eax*1],1
  41b14f:	add    BYTE PTR [eax],al
  41b151:	add    ah,bh
  41b153:	es out dx,eax
  41b155:	mov    eax,ds:0x7ffee9ff
  41b15a:	jmp    edx
  41b15c:	fdivp  st(6),st
  41b15e:	call   0x12d:0xa111617f
  41b165:	add    ah,dh
  41b167:	add    al,0x0
  41b169:	add    dl,al
  41b16b:	aaa    
  41b16c:	fisttp WORD PTR [ebp-0x5a]
  41b16f:	push   eax
  41b170:	rcl    BYTE PTR [eax+ebp*8+0x6e91869f],cl
  41b177:	inc    esp
  41b178:	gs push 0xffffffdd
  41b17b:	or     eax,0xe476137a
  41b180:	or     bh,ah
  41b182:	(bad)  
  41b183:	stc    
  41b184:	sub    al,0xe6
  41b186:	ret    0xe005
  41b189:	je     0x41b133
  41b18b:	adc    edx,DWORD PTR [ebp-0x5d219f1a]
  41b191:	pusha  
  41b192:	outs   dx,DWORD PTR ds:[esi]
  41b193:	jae    0x41b174
  41b195:	dec    ebp
  41b196:	test   eax,0xac0a16d3
  41b19b:	dec    ecx
  41b19c:	inc    esi
  41b19d:	fs lahf 
  41b19f:	pushf  
  41b1a0:	xor    al,cl
  41b1a2:	mov    gs,WORD PTR [esi]
  41b1a4:	adc    eax,ecx
  41b1a6:	stc    
  41b1a7:	mov    al,BYTE PTR ds:0x14101620
  41b1ad:	adc    eax,0x67433698
  41b1b2:	push   0xffffffb0
  41b1b4:	adc    ebx,eax
  41b1b6:	jmp    0x41b1b8
  41b1b8:	jmp    0x41b1a4
  41b1ba:	jmp    0x41b1fe
  41b1bc:	push   edx
  41b1bd:	jl     0x41b22a
  41b1bf:	in     eax,0x19
  41b1c1:	push   edx
  41b1c2:	sub    eax,0x53da2a6
  41b1c7:	push   ds
  41b1c8:	mov    eax,0xbcd3a116
  41b1cd:	in     eax,dx
  41b1ce:	lods   eax,DWORD PTR ds:[esi]
  41b1cf:	push   edi
  41b1d0:	icebp  
  41b1d1:	mov    al,0xb3
  41b1d3:	mov    dl,0xcf
  41b1d5:	sbb    DWORD PTR [ecx-0x32730bdf],eax
  41b1db:	repz ret 0x88fc
  41b1df:	mov    cl,0xc8
  41b1e1:	mov    dh,0x59
  41b1e3:	enter  0x8a39,0xde
  41b1e7:	mov    ebx,?
  41b1e9:	gs xchg ebx,eax
  41b1eb:	jno    0x41b204
  41b1ed:	test   bl,dh
  41b1ef:	jno    0x41b24f
  41b1f1:	adc    BYTE PTR [edx],dh
  41b1f3:	(bad)  
  41b1f4:	mov    dl,0xf7
  41b1f6:	mov    dl,0xa7
  41b1f8:	lods   eax,DWORD PTR ds:[esi]
  41b1f9:	js     0x41b27a
  41b1fb:	fsubr  DWORD PTR [esi+0x650ca701]
  41b201:	enter  0x726,0x8b
  41b205:	in     al,dx
  41b206:	and    eax,0x66fb93c9
  41b20b:	pushf  
  41b20c:	unpcklps xmm1,XMMWORD PTR [ecx+ebx*2+0x9]
  41b211:	(bad)  
  41b213:	xor    edi,DWORD PTR [ecx]
  41b215:	mov    ch,0x7e
  41b217:	inc    esi
  41b218:	add    al,0x4f
  41b21a:	mov    WORD PTR [esp+eax*8-0x49],?
  41b21e:	and    BYTE PTR [edx-0x146002dd],dh
  41b224:	ins    DWORD PTR es:[edi],dx
  41b225:	pop    es
  41b226:	sub    DWORD PTR [edi],0x501e83de
  41b22c:	push   eax
  41b22d:	sar    BYTE PTR [eax],cl
  41b22f:	bound  ecx,QWORD PTR [ebx+0x2]
  41b232:	or     al,0x44
  41b234:	xchg   edi,eax
  41b235:	call   0xa3c090e3
  41b23a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b23b:	push   edx
  41b23c:	jnp    0x41b238
  41b23e:	xor    al,0xa1
  41b240:	and    DWORD PTR [edx],ecx
  41b242:	fild   WORD PTR ds:0xc0efaed1
  41b248:	cli    
  41b249:	xor    DWORD PTR [ecx+0x70ce3488],esi
  41b24f:	into   
  41b250:	mov    BYTE PTR [edi+0x45500e41],al
  41b256:	xchg   BYTE PTR [ecx+edi*4-0x4d],cl
  41b25a:	je     0x41b2bd
  41b25c:	leave  
  41b25d:	leave  
  41b25e:	jo     0x41b245
  41b260:	lds    ebp,FWORD PTR [esi+ecx*2]
  41b263:	data16 xlat BYTE PTR ds:[ebx]
  41b265:	je     0x41b1fd
  41b267:	inc    edx
  41b268:	sbb    eax,0xe41ea93c
  41b26d:	jbe    0x41b27c
  41b26f:	or     DWORD PTR [esi],edi
  41b271:	sbb    ebp,ecx
  41b273:	test   al,0x6a
  41b275:	jne    0x41b25f
  41b277:	scas   al,BYTE PTR es:[edi]
  41b278:	mov    al,ds:0xa2bc269e
  41b27d:	push   edx
  41b27e:	push   ds
  41b27f:	inc    ebx
  41b280:	stos   BYTE PTR es:[edi],al
  41b281:	outs   dx,BYTE PTR ds:[esi]
  41b282:	(bad)  
  41b283:	test   al,0xe6
  41b285:	shl    BYTE PTR [esi+0x40],cl
  41b288:	cmc    
  41b289:	jg     0x41b2bc
  41b28b:	daa    
  41b28c:	and    BYTE PTR [edi-0x7],ch
  41b28f:	arpl   WORD PTR [edx],ax
  41b291:	pop    eax
  41b292:	xchg   ecx,eax
  41b293:	cwde   
  41b294:	lahf   
  41b295:	pusha  
  41b296:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b297:	das    
  41b298:	inc    ebp
  41b299:	mov    esi,0xb5f725db
  41b29e:	xor    cl,BYTE PTR [ebx]
  41b2a0:	pop    edi
  41b2a1:	mov    ?,WORD PTR [edi]
  41b2a3:	push   ebx
  41b2a4:	jg     0x41b273
  41b2a6:	out    0xb7,eax
  41b2a8:	sbb    al,0x95
  41b2aa:	sbb    BYTE PTR [ebp+0x261eb612],dh
  41b2b0:	mov    ah,BYTE PTR [ebx+ecx*8-0x76]
  41b2b4:	xchg   esi,eax
  41b2b5:	inc    ebp
  41b2b6:	ret    
  41b2b7:	mov    ch,0xa8
  41b2b9:	pop    eax
  41b2ba:	add    BYTE PTR [eax],0xc8
  41b2bd:	cdq    
  41b2be:	shl    BYTE PTR [eax-0x69769c96],1
  41b2c4:	adc    DWORD PTR [ecx+0x15],eax
  41b2c7:	sub    DWORD PTR [eax-0x58754209],esi
  41b2cd:	dec    esp
  41b2ce:	cmp    eax,0x2bffaeb6
  41b2d3:	imul   ebx,DWORD PTR [ebx],0x4b3a444
  41b2d9:	add    BYTE PTR [edx],ch
  41b2db:	pop    ebp
  41b2dc:	cli    
  41b2dd:	inc    ecx
  41b2de:	pop    ebx
  41b2df:	sub    DWORD PTR [esi+0x7f],0x29
  41b2e3:	pop    ebx
  41b2e4:	pop    ebp
  41b2e5:	retf   
  41b2e6:	rcr    DWORD PTR [ecx-0x20],0xcb
  41b2ea:	retf   
  41b2eb:	add    edi,ebp
  41b2ed:	mov    es,WORD PTR [edx+0x67ea0159]
  41b2f3:	jnp    0x41b303
  41b2f5:	retf   0xfd28
  41b2f8:	adc    cl,BYTE PTR [ebp+ebp*1-0x4]
  41b2fc:	mov    al,0x1e
  41b2fe:	fsubr  st(7),st
  41b300:	add    esi,DWORD PTR [ecx]
  41b302:	xchg   esp,eax
  41b303:	sbb    BYTE PTR ds:0x7215f045,0x36
  41b30a:	xchg   ecx,eax
  41b30b:	pop    esi
  41b30c:	sub    eax,0x18486e17
  41b311:	dec    ecx
  41b312:	and    DWORD PTR [edx-0x7c],edx
  41b315:	imul   DWORD PTR [eax-0x54]
  41b318:	xchg   esi,eax
  41b319:	test   BYTE PTR [eax],ch
  41b31b:	ss pop eax
  41b31d:	jb     0x41b343
  41b31f:	sti    
  41b320:	jle    0x41b2b8
  41b322:	sti    
  41b323:	inc    edi
  41b324:	fcmovb st,st(0)
  41b326:	mov    ebp,0x79e3056a
  41b32b:	ret    
  41b32c:	cmc    
  41b32d:	push   edx
  41b32e:	sub    al,0x51
  41b330:	or     edi,DWORD PTR [ebx]
  41b332:	adc    eax,0xe547d069
  41b337:	cli    
  41b338:	xor    eax,0x5dde4125
  41b33d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b33e:	xchg   ecx,eax
  41b33f:	fldcw  WORD PTR [edx+0x3f22a781]
  41b345:	shl    DWORD PTR [esi-0x15b2b78a],1
  41b34b:	int    0xde
  41b34d:	cmc    
  41b34e:	dec    ebx
  41b34f:	pop    es
  41b350:	das    
  41b351:	shr    DWORD PTR [ecx-0x132959b8],cl
  41b357:	test   eax,0x69859441
  41b35c:	icebp  
  41b35d:	pop    edi
  41b35e:	push   ds
  41b35f:	jcxz   0x41b340
  41b362:	sub    eax,0x369b29f0
  41b367:	test   eax,0x17ca56a7
  41b36c:	fist   WORD PTR [edx+0x340d2abe]
  41b372:	push   0x5706881b
  41b377:	nop
  41b378:	mov    esp,0xa9ed4900
  41b37d:	ja     0x41b35d
  41b37f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b380:	xor    bh,ah
  41b382:	and    ebx,esi
  41b384:	ficomp DWORD PTR [esi+0x2535c715]
  41b38a:	xor    esp,DWORD PTR [eax-0x5e]
  41b38d:	jle    0x41b40b
  41b38f:	unpckhps xmm2,XMMWORD PTR [eax-0x4e3e72db]
  41b396:	popa   
  41b397:	retf   0x4391
  41b39a:	(bad)  
  41b39b:	enter  0xcc95,0x4b
  41b39f:	lahf   
  41b3a0:	repnz clc 
  41b3a2:	push   edx
  41b3a3:	add    eax,0xc34ea17a
  41b3a8:	lods   eax,DWORD PTR ds:[esi]
  41b3a9:	push   ebp
  41b3aa:	inc    ebx
  41b3ab:	inc    edx
  41b3ac:	shl    DWORD PTR [edi+0x33],1
  41b3af:	lods   al,BYTE PTR ds:[esi]
  41b3b0:	mov    ecx,0x333c2dce
  41b3b5:	(bad)
  41b3b8:	mov    esp,0x205f50af
  41b3bd:	pop    eax
  41b3be:	push   ebp
  41b3bf:	bound  esp,QWORD PTR [edx]
  41b3c1:	jns    0x41b355
  41b3c3:	or     BYTE PTR [edx-0x5e3bfc59],ah
  41b3c9:	pop    ebx
  41b3ca:	fwait
  41b3cb:	popa   
  41b3cc:	or     DWORD PTR [edx+esi*2+0x1c],ebp
  41b3d0:	jbe    0x41b430
  41b3d2:	mov    ebp,edi
  41b3d4:	mov    eax,DWORD PTR [edi+0x15]
  41b3d7:	dec    ebp
  41b3d8:	es scas eax,DWORD PTR es:[edi]
  41b3da:	std    
  41b3db:	mov    esi,0x687182b6
  41b3e0:	(bad)  
  41b3e1:	mov    ch,0x63
  41b3e3:	ss mov dh,0x4f
  41b3e6:	mov    ds:0x1ba47eb3,eax
  41b3eb:	xchg   esp,eax
  41b3ec:	dec    eax
  41b3ed:	test   eax,0x4dcd379b
  41b3f2:	cmp    edi,DWORD PTR [eax+0x34]
  41b3f5:	or     esp,esp
  41b3f7:	mov    edi,0x20bea2da
  41b3fc:	gs push ecx
  41b3fe:	pop    esp
  41b3ff:	pop    edi
  41b400:	jno    0x41b43a
  41b402:	or     BYTE PTR [ebx+0x3f],al
  41b405:	fwait
  41b406:	cmp    al,0xd6
  41b408:	inc    esp
  41b409:	cmp    eax,0x35c97888
  41b40e:	mov    ds:0x89960e89,al
  41b413:	and    edi,DWORD PTR [edi+0xf798aaf]
  41b419:	mov    WORD PTR [esi+0x35],gs
  41b41c:	(bad)  
  41b41d:	out    dx,al
  41b41e:	popf   
  41b41f:	lds    ebx,FWORD PTR [ecx+ebx*4-0x2f]
  41b423:	jno    0x41b3e2
  41b425:	sbb    eax,0xd24b97f3
  41b42a:	cwde   
  41b42b:	add    BYTE PTR [eax],bl
  41b42d:	js     0x41b412
  41b42f:	cmp    dh,bh
  41b431:	dec    esi
  41b432:	push   edi
  41b433:	les    esp,FWORD PTR [ebp-0x7b]
  41b436:	xor    DWORD PTR [edx+0x3d],ebx
  41b439:	mov    ch,0x33
  41b43b:	xchg   ebx,eax
  41b43c:	inc    edx
  41b43d:	fsubp  st(2),st
  41b43f:	xchg   DWORD PTR [ebp-0x1001165f],esi
  41b445:	mov    cs,ebx
  41b447:	dec    ecx
  41b448:	sbb    al,0x84
  41b44a:	dec    esp
  41b44b:	pop    es
  41b44c:	das    
  41b44d:	push   ebx
  41b44e:	loopne 0x41b46f
  41b450:	adc    BYTE PTR [edx+0x5a],0xa7
  41b454:	add    eax,0xed0ca4d7
  41b459:	mov    ds:0xd01c652b,al
  41b45e:	into   
  41b45f:	lahf   
  41b460:	sbb    al,0x2
  41b462:	outs   dx,DWORD PTR ds:[esi]
  41b463:	pop    edx
  41b464:	cmp    eax,0x15818a5a
  41b469:	std    
  41b46a:	push   ebp
  41b46b:	mov    esp,0x24688c17
  41b470:	mov    bh,0x6f
  41b472:	pop    eax
  41b473:	cmp    dh,BYTE PTR [eax]
  41b475:	xchg   BYTE PTR [ebx+0x92797f6],bl
  41b47b:	dec    ebx
  41b47c:	int3   
  41b47d:	push   esi
  41b47e:	fidivr DWORD PTR [ebp+0x55746306]
  41b484:	or     DWORD PTR [esi],esi
  41b486:	repnz xchg edi,eax
  41b488:	sub    DWORD PTR [ecx-0x37],esi
  41b48b:	imul   ebp,esp,0x65c590c3
  41b491:	jae    0x41b512
  41b493:	je     0x41b45b
  41b495:	sti    
  41b496:	push   ebp
  41b497:	xchg   edi,eax
  41b498:	mov    al,0x8d
  41b49a:	(bad)  
  41b49b:	mov    ds:0xbeb49fea,eax
  41b4a0:	add    eax,0xabecd86b
  41b4a5:	stc    
  41b4a6:	das    
  41b4a7:	fadd   DWORD PTR [ecx+0x39]
  41b4aa:	sti    
  41b4ab:	push   0x884073ee
  41b4b0:	add    eax,0x18828c26
  41b4b5:	mov    ds:0xea833fb8,eax
  41b4ba:	shr    DWORD PTR [edx+0x27c76a75],1
  41b4c0:	sbb    esp,esi
  41b4c2:	xor    al,0xaf
  41b4c4:	jl     0x41b52a
  41b4c6:	pop    edx
  41b4c7:	xchg   esp,eax
  41b4c8:	sub    al,0xc0
  41b4ca:	jmp    0x41b539
  41b4cc:	(bad)  
  41b4cd:	mov    ebp,0xae1f3eb6
  41b4d2:	hlt    
  41b4d3:	(bad)  
  41b4d4:	sub    edi,ebx
  41b4d6:	and    al,0x36
  41b4d8:	mov    edx,0x62aa4308
  41b4dd:	or     DWORD PTR [esi+0x4d9490ad],esi
  41b4e3:	push   0xffffffe8
  41b4e5:	mov    ecx,0xcaa55c4f
  41b4ea:	loop   0x41b4a9
  41b4ec:	jle    0x41b52f
  41b4ee:	pop    edx
  41b4ef:	mov    ah,0x6f
  41b4f1:	push   cs
  41b4f2:	test   ah,al
  41b4f4:	jbe    0x41b529
  41b4f6:	jmp    0x123e6d9
  41b4fb:	or     ah,BYTE PTR [esi+0x35]
  41b4fe:	test   eax,0x88dde5e5
  41b503:	mov    ?,esi
  41b505:	sub    al,0x25
  41b507:	pop    edx
  41b508:	shl    BYTE PTR ds:0x855e0a63,0xf5
  41b50f:	test   ecx,esp
  41b511:	mov    dh,0xb1
  41b513:	daa    
  41b514:	push   ss
  41b515:	cli    
  41b516:	and    ch,bh
  41b518:	fldenv [esi-0x62]
  41b51b:	add    ebx,DWORD PTR [ebx]
  41b51d:	jns    0x41b4e5
  41b51f:	out    dx,al
  41b520:	mov    bh,0x18
  41b522:	jg     0x41b4d5
  41b524:	jb     0x41b5a1
  41b526:	mov    eax,DWORD PTR [ecx+0x60448fc6]
  41b52c:	sub    BYTE PTR ds:0x78382647,0xa3
  41b533:	jo     0x41b59f
  41b535:	cli    
  41b536:	mov    ds:0x27bf1ec4,eax
  41b53b:	pushf  
  41b53c:	nop
  41b53d:	mov    ah,BYTE PTR [ebp+0x38]
  41b540:	ins    BYTE PTR es:[edi],dx
  41b541:	mov    bl,0xe3
  41b543:	data16 mov bl,0x2a
  41b546:	sbb    BYTE PTR [edx],0x1b
  41b549:	std    
  41b54a:	add    DWORD PTR [edi],esi
  41b54c:	fwait
  41b54d:	pop    ecx
  41b54e:	iret   
  41b54f:	retf   0xc299
  41b552:	fwait
  41b553:	nop
  41b554:	pop    ecx
  41b555:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b556:	lods   eax,DWORD PTR ds:[esi]
  41b557:	int3   
  41b558:	inc    ecx
  41b559:	mov    fs,edx
  41b55b:	shl    DWORD PTR [esi+0x40],1
  41b55e:	add    al,0x0
  41b560:	pop    ebp
  41b561:	out    dx,eax
  41b562:	inc    ebx
  41b563:	push   ecx
  41b564:	mov    edx,0x23718268
  41b569:	loope  0x41b552
  41b56b:	xor    eax,0x51270036
  41b570:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b571:	lods   eax,DWORD PTR ds:[esi]
  41b572:	loope  0x41b560
  41b574:	leave  
  41b575:	jb     0x41b525
  41b577:	mov    esp,DWORD PTR [ebx+0x40]
  41b57a:	pop    ebx
  41b57b:	pop    edi
  41b57c:	aam    0x6c
  41b57e:	sahf   
  41b57f:	adc    DWORD PTR [eax+0xdf04e28],ebx
  41b585:	rcr    BYTE PTR [ebx-0x57],cl
  41b588:	add    esi,DWORD PTR [edi+ebp*2]
  41b58b:	fsub   DWORD PTR ds:0x8c8c1943
  41b591:	popa   
  41b592:	(bad)  
  41b593:	test   eax,0x8b7bb37c
  41b598:	cmp    edx,DWORD PTR [edx+0x209dca13]
  41b59e:	sub    dl,BYTE PTR [esi+0xbf4fa0d]
  41b5a4:	xor    al,0xe7
  41b5a6:	aas    
  41b5a7:	xchg   edi,eax
  41b5a8:	test   al,0x1a
  41b5aa:	(bad)  ds:0x19e4a3ac
  41b5b0:	add    DWORD PTR es:[esi+0x1f],0x5a
  41b5b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5b6:	pushf  
  41b5b7:	xchg   esp,eax
  41b5b8:	gs mov dl,0x31
  41b5bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5bc:	jle    0x41b545
  41b5be:	in     eax,0x4
  41b5c0:	in     al,dx
  41b5c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5c2:	or     al,0x45
  41b5c4:	mov    cl,0xc0
  41b5c6:	sti    
  41b5c7:	sahf   
  41b5c8:	ins    BYTE PTR es:[edi],dx
  41b5c9:	xchg   bl,dh
  41b5cb:	neg    BYTE PTR [ecx+0x25]
  41b5ce:	inc    ecx
  41b5cf:	dec    edi
  41b5d0:	add    al,0xdd
  41b5d2:	jg     0x41b5a5
  41b5d4:	push   ebp
  41b5d5:	jno    0x41b597
  41b5d7:	push   esi
  41b5d8:	and    edx,esp
  41b5da:	(bad)  
  41b5db:	repnz test al,0x7f
  41b5de:	mul    BYTE PTR [ebp-0x5c]
  41b5e1:	test   DWORD PTR [esi-0x23],eax
  41b5e4:	or     DWORD PTR [ecx-0x67],ebp
  41b5e7:	adc    DWORD PTR [eax],ecx
  41b5e9:	int    0xa
  41b5eb:	push   ds
  41b5ec:	add    eax,DWORD PTR ds:0xba26a895
  41b5f2:	add    al,0x3b
  41b5f4:	dec    esi
  41b5f5:	pop    ss
  41b5f6:	add    ebp,ebx
  41b5f8:	jmp    0xeffcace1
  41b5fd:	pop    edx
  41b5fe:	int    0x2e
  41b600:	mov    ecx,0xc0db0014
  41b605:	pop    esp
  41b606:	pushf  
  41b607:	ins    BYTE PTR es:[edi],dx
  41b608:	call   0xf3a9e2a0
  41b60d:	xchg   edx,eax
  41b60e:	push   es
  41b60f:	test   al,0x0
  41b611:	test   DWORD PTR [ebp+0x79],eax
  41b614:	adc    BYTE PTR [edx+ecx*1],ch
  41b617:	xchg   ebp,eax
  41b618:	and    dh,BYTE PTR [eax]
  41b61a:	sti    
  41b61b:	(bad)  
  41b61c:	mov    bh,0x14
  41b61e:	mov    esp,0x22b7bf81
  41b623:	hlt    
  41b624:	pop    ss
  41b625:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b626:	lahf   
  41b627:	mov    ah,0x57
  41b629:	add    bh,BYTE PTR [ebx-0x4447251f]
  41b62f:	xchg   edx,eax
  41b630:	mov    ebx,0x6c2855e4
  41b635:	icebp  
  41b636:	mov    eax,ds:0x298384da
  41b63b:	xchg   edi,eax
  41b63c:	lea    eax,[ecx]
  41b63e:	adc    cl,BYTE PTR [ecx]
  41b640:	popf   
  41b641:	xchg   DWORD PTR [esi],esi
  41b643:	pop    eax
  41b644:	push   cs
  41b645:	cmc    
  41b646:	jb     0x41b5cc
  41b648:	adc    bl,BYTE PTR [ebx+0x265b8425]
  41b64e:	cmp    ecx,DWORD PTR [eax]
  41b650:	cli    
  41b651:	xchg   BYTE PTR [edi+0x70],dl
  41b654:	push   ds
  41b655:	pusha  
  41b656:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b657:	lea    edx,[esi+0x5b]
  41b65a:	aad    0xc7
  41b65c:	mov    ch,0x7a
  41b65e:	add    BYTE PTR [eax],al
  41b660:	add    BYTE PTR [eax],al
  41b662:	(bad)  
  41b663:	aaa    
  41b664:	sti    
  41b665:	addr16 sti 
  41b667:	out    dx,eax
  41b668:	fidiv  WORD PTR [edi-0x5c01975c]
  41b66e:	push   edx
  41b66f:	dec    ecx
  41b670:	aaa    
  41b671:	lods   al,BYTE PTR ds:[esi]
  41b672:	xchg   ebp,eax
  41b673:	xor    al,BYTE PTR [ecx]
  41b675:	add    ah,dh
  41b677:	add    al,0x0
  41b679:	add    BYTE PTR [eax-0x2a54e7be],bl
  41b67f:	mov    WORD PTR [eax-0x323aa677],gs
  41b685:	mov    ecx,0x58c47442
  41b68a:	xchg   edi,eax
  41b68b:	inc    ecx
  41b68c:	dec    ebx
  41b68d:	xchg   esi,eax
  41b68e:	dec    edx
  41b68f:	mov    dh,0x2c
  41b691:	sub    eax,0xf4d16596
  41b696:	mov    ecx,0xed11301e
  41b69b:	(bad)  
  41b69c:	adc    dh,ch
  41b69e:	imul   eax,DWORD PTR [ecx+eiz*8+0x48],0xffffffed
  41b6a3:	xor    ebx,eax
  41b6a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6a6:	fdivr  QWORD PTR [ebp-0x2d]
  41b6a9:	push   esp
  41b6aa:	dec    ecx
  41b6ac:	push   eax
  41b6ad:	pop    ecx
  41b6ae:	xchg   esi,eax
  41b6af:	dec    ecx
  41b6b0:	dec    esi
  41b6b1:	cmp    ecx,DWORD PTR [edx-0x362d4df4]
  41b6b7:	ja     0x41b6b1
  41b6b9:	and    eax,0xce572630
  41b6be:	dec    esi
  41b6bf:	int    0x16
  41b6c1:	dec    esp
  41b6c2:	jle    0x41b724
  41b6c4:	jle    0x41b685
  41b6c6:	repz jge 0x41b73c
  41b6c9:	lods   al,BYTE PTR ds:[esi]
  41b6ca:	or     BYTE PTR [edi],0x1c
  41b6cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6ce:	dec    ebp
  41b6cf:	push   esi
  41b6d0:	mov    bh,0xd2
  41b6d2:	call   0x22de:0xe3320518
  41b6d9:	or     DWORD PTR [eax+0x22],ebp
  41b6dc:	pop    es
  41b6dd:	fcmovnu st,st(4)
  41b6df:	mov    ch,0x43
  41b6e1:	adc    dh,BYTE PTR [ebx+ebx*1+0x22]
  41b6e5:	inc    ebp
  41b6e6:	adc    BYTE PTR [ecx-0x77],dh
  41b6e9:	or     ch,BYTE PTR [edx+0x11]
  41b6ec:	and    BYTE PTR [esi+0x13],al
  41b6ef:	or     eax,0xae66fb5
  41b6f4:	iret   
  41b6f5:	in     eax,0xb
  41b6f7:	int    0x47
  41b6f9:	sbb    DWORD PTR [ecx],0xffffffb8
  41b6fc:	dec    esi
  41b6fd:	arpl   WORD PTR [ecx-0x1b],si
  41b700:	pop    esp
  41b701:	inc    ecx
  41b702:	xchg   esi,eax
  41b703:	push   edi
  41b704:	stos   BYTE PTR es:[edi],al
  41b705:	enter  0x8266,0xb5
  41b709:	inc    BYTE PTR [eax]
  41b70b:	pop    ebx
  41b70c:	(bad)  
  41b70d:	aam    0xdb
  41b70f:	push   ebx
  41b710:	les    esi,FWORD PTR [ebx+0x49981164]
  41b716:	in     eax,dx
  41b717:	pusha  
  41b718:	sub    DWORD PTR [edx],edx
  41b71a:	test   eax,0x52129ad3
  41b71f:	pushf  
  41b720:	(bad)  
  41b721:	mov    ds:0x68f26599,al
  41b726:	mov    ebp,0x35145688
  41b72b:	and    esi,DWORD PTR [esi-0x3065144]
  41b731:	mov    ds:0xaf9d9e3e,al
  41b736:	add    ebp,edx
  41b738:	rcl    ch,cl
  41b73a:	out    0xbc,al
  41b73c:	jge    0x41b7b9
  41b73e:	mov    ds:0xe47e6923,eax
  41b743:	pop    ebx
  41b744:	js     0x41b748
  41b746:	inc    ecx
  41b747:	int3   
  41b748:	les    ebp,FWORD PTR [ecx]
  41b74a:	gs cli 
  41b74c:	jmp    0x41b78c
  41b74e:	xchg   BYTE PTR ds:0xbd7f21c,dl
  41b754:	repz sub eax,0xf735efdd
  41b75a:	mov    ah,0x15
  41b75c:	and    esi,DWORD PTR [ecx+0x1d]
  41b75f:	mov    ebp,0xe659f868
  41b764:	(bad)  
  41b765:	jle    0x41b7d5
  41b767:	mov    ecx,0x3cd8d664
  41b76c:	stos   BYTE PTR es:[edi],al
  41b76d:	(bad)  
  41b76e:	jo     0x41b7ea
  41b770:	fsub   DWORD PTR [edi+0x4c66d04f]
  41b776:	xchg   esp,eax
  41b777:	pop    es
  41b778:	cmp    DWORD PTR [ebx],ebx
  41b77a:	pop    esp
  41b77b:	sub    al,0x53
  41b77d:	push   ss
  41b77e:	mov    ecx,DWORD PTR [eax+0x8826b02]
  41b784:	inc    edi
  41b785:	dec    esi
  41b786:	xchg   BYTE PTR [edx-0xb],ah
  41b789:	in     al,dx
  41b78a:	in     eax,dx
  41b78b:	loope  0x41b726
  41b78d:	dec    ebp
  41b78e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b78f:	mov    WORD PTR [edi-0x2d],?
  41b792:	jmp    0x6e03e227
  41b797:	js     0x41b76d
  41b799:	or     al,0x92
  41b79b:	or     al,0x9f
  41b79d:	pop    ebp
  41b79e:	leave  
  41b79f:	mov    ecx,0x16591f9f
  41b7a4:	ror    BYTE PTR [edx+0x7ed2fbf6],0x3a
  41b7ab:	(bad)  
  41b7ac:	fwait
  41b7ad:	addr16 daa 
  41b7af:	mov    edx,0xb45442f7
  41b7b4:	xchg   ecx,eax
  41b7b5:	ficomp WORD PTR [ebx+0x75317a78]
  41b7bb:	cmp    edi,DWORD PTR [ecx+edi*2+0x56f88f02]
  41b7c2:	test   al,0x6f
  41b7c4:	and    BYTE PTR [ebx-0x5d2cbd41],dl
  41b7ca:	push   edx
  41b7cb:	mov    ecx,0xa4c37e42
  41b7d0:	(bad)  
  41b7d1:	das    
  41b7d2:	ins    BYTE PTR es:[edi],dx
  41b7d3:	loopne 0x41b833
  41b7d5:	test   al,0xe9
  41b7d7:	in     al,dx
  41b7d8:	pop    ecx
  41b7d9:	dec    ecx
  41b7da:	or     bl,0x7f
  41b7dd:	jbe    0x41b7f2
  41b7df:	lods   al,BYTE PTR ds:[esi]
  41b7e0:	les    esi,FWORD PTR [edi]
  41b7e2:	add    ecx,DWORD PTR [ebp+eiz*8-0x64]
  41b7e6:	mov    eax,0xccc77c1e
  41b7eb:	mov    ch,0xc1
  41b7ed:	aad    0x93
  41b7ef:	xchg   ecx,eax
  41b7f0:	add    BYTE PTR [esi+0x42bf8137],bh
  41b7f6:	sar    BYTE PTR [eax],cl
  41b7f8:	pop    esi
  41b7f9:	scas   al,BYTE PTR es:[edi]
  41b7fa:	mov    ebp,0xb4d678d6
  41b7ff:	arpl   bp,dx
  41b801:	push   edx
  41b802:	mov    ecx,0xffb6fc6d
  41b807:	mov    esp,0xb29be2e7
  41b80c:	pop    edi
  41b80d:	xchg   edx,eax
  41b80e:	dec    edx
  41b80f:	sbb    ebx,DWORD PTR [ecx-0x3f]
  41b812:	out    dx,al
  41b813:	mov    ebx,0xf0159131
  41b818:	mov    ds:0x2e616432,al
  41b81d:	in     al,0x3f
  41b81f:	pop    ss
  41b820:	lods   al,BYTE PTR ds:[esi]
  41b821:	jle    0x41b86b
  41b823:	outs   dx,BYTE PTR ds:[esi]
  41b824:	mov    dl,0x6d
  41b826:	pop    eax
  41b827:	js     0x41b898
  41b829:	test   al,0x4a
  41b82b:	repnz and esp,ebp
  41b82e:	in     al,0x9e
  41b830:	fld    QWORD PTR [edx+ebx*2]
  41b833:	fstp   QWORD PTR [eax+0x29843444]
  41b839:	or     eax,0xe0b326e1
  41b83e:	and    esp,ecx
  41b840:	pop    edi
  41b841:	dec    ecx
  41b842:	les    ebp,FWORD PTR [ebx+0x3e]
  41b845:	push   0xffffff98
  41b847:	ret    0x9c23
  41b84a:	mov    esp,0x68504ae4
  41b84f:	fbld   TBYTE PTR [ebx]
  41b851:	jge    0x41b85d
  41b853:	in     al,0x11
  41b855:	pop    es
  41b856:	(bad)  
  41b857:	je     0x41b851
  41b859:	sub    BYTE PTR [ecx+0x7a],bh
  41b85c:	jno    0x41b8b4
  41b85e:	leave  
  41b85f:	pop    esp
  41b860:	mov    al,0x30
  41b862:	addr16 jle 0x41b832
  41b865:	mov    edx,0x6cdc5409
  41b86a:	ret    
  41b86b:	test   DWORD PTR ds:0x8180c198,edx
  41b871:	adc    BYTE PTR [ebx],dh
  41b873:	sbb    BYTE PTR [ecx],dh
  41b875:	test   eax,0xca26f8bb
  41b87a:	sub    edi,DWORD PTR [eax]
  41b87c:	outs   dx,DWORD PTR ds:[esi]
  41b87d:	(bad)  
  41b87e:	loope  0x41b880
  41b880:	dec    ebp
  41b881:	mov    ds:0xc5352388,eax
  41b886:	aas    
  41b887:	cmp    ah,BYTE PTR [ecx-0x68]
  41b88a:	and    eax,0x453c4933
  41b88f:	mov    al,0xeb
  41b891:	xchg   ecx,eax
  41b892:	adc    cl,BYTE PTR [ebx+0x325d637a]
  41b898:	and    BYTE PTR [ecx],al
  41b89a:	icebp  
  41b89b:	and    edi,edi
  41b89d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b89e:	sbb    edi,DWORD PTR [ebx]
  41b8a0:	and    DWORD PTR [ebx+eiz*4],edx
  41b8a3:	je     0x41b8f8
  41b8a5:	xchg   edi,eax
  41b8a6:	xchg   edx,eax
  41b8a7:	mov    dl,0xcf
  41b8a9:	lods   al,BYTE PTR ds:[esi]
  41b8aa:	pusha  
  41b8ab:	ret    0x2a2f
  41b8ae:	sbb    al,dh
  41b8b0:	fs jb  0x41b919
  41b8b3:	out    0xb7,eax
  41b8b5:	push   es
  41b8b6:	mov    edi,0x3862ffb1
  41b8bb:	(bad)  
  41b8bc:	data16 out 0x8f,al
  41b8bf:	out    dx,eax
  41b8c0:	fmul   st,st(2)
  41b8c2:	(bad)  
  41b8c3:	fiadd  DWORD PTR [ebp+0x6433f336]
  41b8c9:	cmp    al,0xe2
  41b8cb:	jb     0x41b8b7
  41b8cd:	nop
  41b8ce:	or     DWORD PTR [esi],eax
  41b8d0:	add    eax,0xd61d3b7a
  41b8d5:	loopne 0x41b8a3
  41b8d7:	inc    ebx
  41b8d8:	push   es
  41b8d9:	inc    ecx
  41b8da:	retf   
  41b8db:	cli    
  41b8dc:	mov    eax,0xd2194144
  41b8e1:	jno    0x41b8fa
  41b8e3:	jns    0x41b8fe
  41b8e5:	imul   esi,DWORD PTR [esi-0x44],0x4fec93a6
  41b8ec:	add    al,0xc2
  41b8ee:	pop    ss
  41b8ef:	repnz inc ebp
  41b8f1:	rol    BYTE PTR [eax-0x66b75c99],cl
  41b8f7:	mov    ds:0xbe44e30d,al
  41b8fc:	je     0x41b892
  41b8fe:	pushf  
  41b8ff:	leave  
  41b900:	jl     0x41b89c
  41b902:	std    
  41b903:	daa    
  41b904:	add    eax,0xdad24f2a
  41b909:	jo     0x41b8ef
  41b90b:	sub    al,0xd2
  41b90d:	gs sub al,0x8
  41b910:	cwde   
  41b911:	push   ss
  41b912:	dec    ecx
  41b913:	or     BYTE PTR [esi+ebp*8-0x72],al
  41b917:	adc    esi,DWORD PTR [ebp-0x4277ad97]
  41b91d:	inc    esp
  41b91e:	sbb    DWORD PTR [ebx-0x62],0xfd42a09a
  41b925:	jb     0x41b94a
  41b927:	jb     0x41b935
  41b929:	ret    
  41b92a:	stos   BYTE PTR es:[edi],al
  41b92b:	inc    esp
  41b92c:	mov    al,0xfd
  41b92e:	pop    esi
  41b92f:	jnp    0x41b8e6
  41b931:	dec    eax
  41b932:	adc    al,BYTE PTR [ebx+0x3273ca70]
  41b938:	xchg   esi,esp
  41b93a:	in     eax,0xed
  41b93c:	mov    WORD PTR [ecx],?
  41b93e:	ins    DWORD PTR es:[edi],dx
  41b93f:	fmul   st,st(3)
  41b941:	inc    esi
  41b942:	xlat   BYTE PTR ds:[ebx]
  41b943:	imul   edi,edi,0xfffffff1
  41b946:	ret    
  41b947:	aam    0x17
  41b949:	jmp    DWORD PTR ds:0xf6babf6a
  41b94f:	and    ebx,DWORD PTR [ebx]
  41b951:	aam    0x89
  41b953:	(bad)  
  41b954:	jne    0x41b9a1
  41b956:	stos   BYTE PTR es:[edi],al
  41b957:	push   edi
  41b958:	inc    edx
  41b959:	icebp  
  41b95a:	icebp  
  41b95b:	in     al,dx
  41b95c:	sub    esi,DWORD PTR gs:[edi-0x5cc0cd06]
  41b963:	test   bl,dl
  41b965:	pop    ebp
  41b966:	(bad)
  41b969:	or     dl,BYTE PTR [edi+0xb41831f]
  41b96f:	xchg   BYTE PTR [esi-0x75],ah
  41b972:	lods   al,BYTE PTR ds:[esi]
  41b973:	js     0x41b960
  41b975:	stos   BYTE PTR es:[edi],al
  41b976:	es sub edx,esi
  41b979:	add    al,0xd2
  41b97b:	dec    esp
  41b97c:	jmp    0xd959:0x25653823
  41b983:	add    BYTE PTR [ecx-0x19fe45de],ah
  41b989:	cmp    al,0xbe
  41b98b:	scas   al,BYTE PTR es:[edi]
  41b98c:	lods   eax,DWORD PTR ds:[esi]
  41b98d:	sbb    DWORD PTR ds:0xa23c8cef,eax
  41b993:	lahf   
  41b994:	mov    al,0x6c
  41b996:	sub    al,0x65
  41b998:	adc    al,0x52
  41b99a:	test   DWORD PTR [ebx],edx
  41b99c:	adc    esp,DWORD PTR [ecx+0x50ad4ba0]
  41b9a2:	jge    0x41b9e5
  41b9a4:	xor    dh,BYTE PTR [ecx+0x38]
  41b9a7:	xor    BYTE PTR [ebx+0x6a],bh
  41b9aa:	dec    edx
  41b9ab:	repz loopne 0x41b9b6
  41b9ae:	mov    WORD PTR [eax+0x3a9e3c46],?
  41b9b4:	shl    DWORD PTR [esp+eiz*4-0x41],1
  41b9b8:	into   
  41b9b9:	stc    
  41b9ba:	pop    ds
  41b9bb:	adc    DWORD PTR [ebx],ebp
  41b9bd:	dec    esp
  41b9be:	jo     0x41b98c
  41b9c0:	mov    bh,0x68
  41b9c2:	mov    al,0xc1
  41b9c4:	xchg   esp,eax
  41b9c5:	fisub  WORD PTR ds:0xbbd14847
  41b9cb:	data16 (bad) 
  41b9cd:	hlt    
  41b9ce:	push   ebx
  41b9cf:	xchg   ecx,eax
  41b9d0:	mov    eax,ds:0xd053f0ec
  41b9d5:	outs   dx,BYTE PTR ds:[esi]
  41b9d6:	fild   QWORD PTR [esi]
  41b9d8:	inc    ebx
  41b9d9:	jmp    0x41ba32
  41b9db:	mov    al,ds:0xb3275d0d
  41b9e0:	in     eax,dx
  41b9e1:	dec    esi
  41b9e2:	jns    0x41ba01
  41b9e4:	sub    ebp,DWORD PTR [edx]
  41b9e6:	mov    ch,0xd8
  41b9e8:	mov    BYTE PTR [edi],dh
  41b9ea:	idiv   DWORD PTR [edx-0x55fd83a7]
  41b9f0:	push   0xfffffff9
  41b9f2:	cmp    BYTE PTR [ecx*4+0xc29db9b],ch
  41b9f9:	xchg   ebp,ebp
  41b9fb:	mov    ebx,0x97c762e6
  41ba00:	pop    ebx
  41ba01:	push   eax
  41ba02:	nop
  41ba03:	shr    DWORD PTR [ebp-0x1e473ae2],1
  41ba09:	dec    edi
  41ba0a:	mov    esp,DWORD PTR [ebx-0x5f]
  41ba0d:	ds pusha 
  41ba0f:	pop    ss
  41ba10:	lahf   
  41ba11:	add    bl,BYTE PTR [ebx+0x4b]
  41ba14:	adc    DWORD PTR ds:0xe643e356,0xffffffc1
  41ba1b:	aas    
  41ba1c:	mov    al,0xa5
  41ba1e:	iret   
  41ba1f:	sti    
  41ba20:	into   
  41ba21:	shl    DWORD PTR [ebx+0x1ce63ef0],0xe5
  41ba28:	push   ebx
  41ba29:	clc    
  41ba2a:	imul   edx,DWORD PTR ds:0x6f4ffaa9,0x56
  41ba31:	into   
  41ba32:	out    0xd3,eax
  41ba34:	pop    eax
  41ba35:	aaa    
  41ba36:	out    0xc7,eax
  41ba38:	je     0x41ba14
  41ba3a:	dec    ebx
  41ba3b:	jge    0x41bab7
  41ba3d:	mov    bl,0xcd
  41ba3f:	test   BYTE PTR [edi+0x714d9321],cl
  41ba45:	sbb    DWORD PTR [edx+0xdbc276a],esp
  41ba4b:	gs dec esi
  41ba4d:	inc    esi
  41ba4e:	ret    0x6cb5
  41ba51:	mov    dh,0x31
  41ba53:	enter  0xac9d,0x70
  41ba57:	ror    BYTE PTR [eax-0x1f],1
  41ba5a:	mov    ds:0x662fc599,eax
  41ba5f:	data16 xor BYTE PTR [ebp-0x788b6121],bh
  41ba66:	xor    eax,0xebc1f433
  41ba6b:	mov    esp,0xc963bbde
  41ba70:	mov    DWORD PTR [esi+esi*4-0x66],edi
  41ba74:	add    eax,0x4d5f2797
  41ba79:	adc    ch,bh
  41ba7b:	cbw    
  41ba7d:	(bad)  
  41ba7e:	pop    edi
  41ba7f:	jle    0x41baa9
  41ba81:	icebp  
  41ba82:	cmp    al,0xa5
  41ba84:	mov    BYTE PTR [ebx+0x74],bl
  41ba87:	add    dh,BYTE PTR [eax]
  41ba89:	xchg   edx,eax
  41ba8a:	jb     0x41bae5
  41ba8c:	xchg   esp,eax
  41ba8d:	stos   DWORD PTR es:[edi],eax
  41ba8e:	pusha  
  41ba8f:	bound  esi,QWORD PTR [ebx-0x554f2cb9]
  41ba95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba96:	fild   DWORD PTR [edi+0x31b85be5]
  41ba9c:	adc    BYTE PTR [ebx-0x696b70cd],bl
  41baa2:	not    DWORD PTR [ebx+0x42]
  41baa5:	jb     0x41bb08
  41baa7:	es push es
  41baa9:	sahf   
  41baaa:	pop    ds
  41baab:	rol    BYTE PTR [edx+0x171d4017],1
  41bab1:	aam    0xa2
  41bab3:	pop    esp
  41bab4:	inc    ebx
  41bab5:	jmp    0x41ba86
  41bab7:	data16 gs mov bl,ch
  41babb:	cmc    
  41babc:	dec    esp
  41babd:	test   BYTE PTR [esi],bh
  41babf:	xor    dl,BYTE PTR [ebx+0x2dc55d93]
  41bac5:	mov    cl,0xdd
  41bac7:	xor    al,0x8f
  41bac9:	sub    bh,BYTE PTR [ebp+0x4e4cdd66]
  41bacf:	xor    DWORD PTR [esi+0x1916623f],ebx
  41bad5:	add    ecx,esi
  41bad7:	retf   
  41bad8:	test   cl,bl
  41bada:	cmp    ebx,DWORD PTR [esp+ebp*8]
  41badd:	inc    edx
  41bade:	mov    bh,ah
  41bae0:	repnz icebp 
  41bae2:	cmp    al,0xe1
  41bae4:	add    eax,0xd1dd0a19
  41bae9:	sub    edx,DWORD PTR [eax]
  41baeb:	imul   esp,eax,0x5
  41baee:	add    ch,BYTE PTR [ebp+0x7b]
  41baf1:	pushf  
  41baf2:	imul   eax,DWORD PTR fs:[ebp+eiz*8+0x1a],0x53add256
  41bafb:	add    eax,0x2e383006
  41bb00:	mov    WORD PTR [ebx+0x2795c0cc],?
  41bb06:	not    DWORD PTR [esp+eiz*2+0x2e04dd3d]
  41bb0d:	div    BYTE PTR [ecx]
  41bb0f:	mul    BYTE PTR [esi+edi*8]
  41bb12:	addr16 mov bl,0xd5
  41bb15:	sti    
  41bb16:	pop    edi
  41bb17:	pop    esi
  41bb18:	sbb    eax,0xbd16ead8
  41bb1d:	adc    DWORD PTR [ebx-0x34423123],ebp
  41bb23:	imul   BYTE PTR [edx-0x6270b74e]
  41bb29:	xchg   esi,eax
  41bb2a:	inc    edi
  41bb2b:	adc    ebx,DWORD PTR [ebx]
  41bb2d:	mov    WORD PTR [ebx],gs
  41bb2f:	ss mov bh,0xf9
  41bb32:	jnp    0x41bb1e
  41bb34:	sbb    al,0x89
  41bb36:	pop    ebx
  41bb37:	fcom   DWORD PTR [edi+edi*2+0x50]
  41bb3b:	cmp    BYTE PTR [esi+0x42],0xf3
  41bb3f:	dec    ecx
  41bb40:	out    0xc9,eax
  41bb42:	stc    
  41bb43:	into   
  41bb44:	lea    esi,ds:0xca82d834
  41bb4a:	sub    al,0x3d
  41bb4c:	dec    ebp
  41bb4d:	pop    ds
  41bb4e:	push   ebp
  41bb4f:	std    
  41bb50:	repz (bad) 
  41bb52:	call   0xdfd93bb
  41bb57:	(bad)  
  41bb58:	cmc    
  41bb59:	shr    BYTE PTR [edx-0x58],0xfc
  41bb5d:	(bad)  
  41bb5f:	cmc    
  41bb60:	bswap  ecx
  41bb62:	cli    
  41bb63:	imul   esp,DWORD PTR [ebp+0x488d723],0x7257b5f5
  41bb6d:	and    eax,0x0
  41bb72:	out    0x40,al
  41bb74:	sbb    eax,0xee5dbf15
  41bb79:	repz adc eax,0xec442583
  41bb7f:	mov    esp,0x37892b83
  41bb84:	add    DWORD PTR [eax],eax
  41bb86:	hlt    
  41bb87:	add    al,0x0
  41bb89:	add    BYTE PTR [ebx+0x4c],dh
  41bb8c:	data16 xor BYTE PTR [eax],0x4e
  41bb90:	ins    BYTE PTR es:[edi],dx
  41bb91:	inc    ebx
  41bb92:	jo     0x41bb6e
  41bb94:	mov    ecx,0xa71146b6
  41bb99:	mov    ds:0xbd90cd8e,eax
  41bb9e:	add    DWORD PTR [esi+0x7],ecx
  41bba1:	into   
  41bba2:	lahf   
  41bba3:	mov    dl,0xa4
  41bba5:	xor    DWORD PTR [edi],ebp
  41bba7:	push   ebp
  41bba8:	pop    ecx
  41bba9:	cmc    
  41bbaa:	fnstcw WORD PTR [eax-0xc]
  41bbad:	js     0x41bbf7
  41bbaf:	mov    bl,BYTE PTR [esp+eiz*4+0x12e9194f]
  41bbb6:	inc    edi
  41bbb7:	push   ecx
  41bbb8:	dec    ebp
  41bbb9:	clc    
  41bbba:	xlat   BYTE PTR ds:[ebx]
  41bbbb:	jmp    0x53c74b42
  41bbc0:	psraw  mm3,QWORD PTR [ecx-0x5b]
  41bbc4:	movd   mm5,DWORD PTR [ebx+edi*4-0x31]
  41bbc9:	std    
  41bbca:	or     eax,0x11338456
  41bbcf:	dec    edx
  41bbd0:	js     0x41bb93
  41bbd2:	inc    esi
  41bbd3:	dec    ecx
  41bbd4:	ss xchg esi,eax
  41bbd6:	sbb    ebp,DWORD PTR [edx+0x78]
  41bbd9:	add    cl,ah
  41bbdb:	dec    esp
  41bbdc:	push   0xcb4a60c6
  41bbe1:	or     DWORD PTR [esi],ebx
  41bbe3:	popa   
  41bbe4:	mov    ch,0xd6
  41bbe6:	mov    eax,ds:0x63bad305
  41bbeb:	xor    BYTE PTR [esi-0x72],al
  41bbee:	adc    ebx,esp
  41bbf0:	daa    
  41bbf1:	adc    eax,0xe11516f3
  41bbf6:	dec    esi
  41bbf7:	call   0xee0852b1
  41bbfc:	retf   0xfa7
  41bbff:	or     eax,0xb8de755
  41bc04:	push   ecx
  41bc05:	std    
  41bc06:	cmp    edi,DWORD PTR [eax-0x7e]
  41bc09:	jl     0x41bbca
  41bc0b:	and    al,0xb8
  41bc0d:	lea    ebp,[edx+0x39]
  41bc10:	fucomp st(0)
  41bc12:	pop    ecx
  41bc13:	sbb    ebx,edx
  41bc15:	outs   dx,DWORD PTR ds:[esi]
  41bc16:	mov    gs,ecx
  41bc18:	sub    dl,BYTE PTR [edx+0x3a]
  41bc1b:	add    DWORD PTR [ebx+0x6cc22211],ebx
  41bc21:	out    dx,al
  41bc22:	mov    ebp,eax
  41bc24:	pop    edx
  41bc25:	xor    ecx,DWORD PTR [edi+0x46]
  41bc28:	pop    ecx
  41bc29:	push   ss
  41bc2a:	push   0x517e5f48
  41bc2f:	mov    bl,0x7b
  41bc31:	scas   eax,DWORD PTR es:[edi]
  41bc32:	imul   esi,DWORD PTR [ecx],0xffffffad
  41bc35:	adc    DWORD PTR [esp+ecx*8+0xd],ebx
  41bc39:	retf   0xe4bd
  41bc3c:	add    BYTE PTR [ebp+0x21d0f85a],0xf0
  41bc43:	cmc    
  41bc44:	daa    
  41bc45:	stc    
  41bc46:	enter  0x52fb,0x5
  41bc4a:	test   eax,0xd808c446
  41bc4f:	xor    dl,ch
  41bc51:	or     bh,al
  41bc53:	push   0x67
  41bc55:	shr    DWORD PTR [ebx+0x4db12cf],0x79
  41bc5c:	cmp    al,0x10
  41bc5e:	cmp    DWORD PTR [ebx-0x55],ecx
  41bc61:	fmulp  st(5),st
  41bc63:	mov    ebx,0x21d8ccc0
  41bc68:	js     0x41bca0
  41bc6a:	call   0x9c9d:0x8fec8a76
  41bc71:	jns    0x41bc26
  41bc73:	inc    edi
  41bc74:	mov    ecx,0x85ccb4d8
  41bc79:	xchg   ebp,eax
  41bc7a:	push   ebx
  41bc7b:	js     0x41bc68
  41bc7d:	push   ebp
  41bc7e:	outs   dx,DWORD PTR ds:[esi]
  41bc7f:	xor    DWORD PTR [edx-0x37],0xffffffbd
  41bc83:	xor    BYTE PTR [ebx-0x1d],dl
  41bc86:	loop   0x41bc8c
  41bc88:	js     0x41bc58
  41bc8a:	neg    DWORD PTR [ebp-0x1f]
  41bc8d:	push   0x34bfb4
  41bc92:	mov    WORD PTR [esi+0x58],cs
  41bc95:	arpl   WORD PTR [esi],sp
  41bc97:	mov    ds:0x68ebefb2,al
  41bc9c:	std    
  41bc9d:	pop    esp
  41bc9e:	cdq    
  41bc9f:	xchg   edx,eax
  41bca0:	(bad)  
  41bca2:	jb     0x41bcc3
  41bca4:	jge    0x41bc7d
  41bca6:	xor    al,0xab
  41bca8:	(bad)  
  41bca9:	pop    eax
  41bcaa:	repnz inc edi
  41bcac:	pop    edx
  41bcad:	enter  0xd610,0xf
  41bcb1:	lods   eax,DWORD PTR ds:[esi]
  41bcb2:	test   esp,esp
  41bcb4:	popf   
  41bcb5:	lds    edi,FWORD PTR [edi-0x15]
  41bcb8:	xor    cl,0x6c
  41bcbb:	or     eax,0xdcbc2b65
  41bcc0:	retf   0x1343
  41bcc3:	ds test eax,0x5557631b
  41bcc9:	push   ss
  41bcca:	shr    DWORD PTR [ecx-0x50543f6f],0x92
  41bcd1:	imul   esp,DWORD PTR [edi],0x4b
  41bcd4:	(bad)  
  41bcd6:	xor    dl,dl
  41bcd8:	scas   al,BYTE PTR es:[edi]
  41bcd9:	pop    ebp
  41bcda:	aad    0x21
  41bcdc:	fidivr DWORD PTR [esi-0x58e507b9]
  41bce2:	xchg   ebx,eax
  41bce3:	mov    ebp,0x3e0f0cc6
  41bce8:	sar    DWORD PTR [esi],1
  41bcea:	inc    esi
  41bceb:	sbb    eax,ebx
  41bced:	mov    ss,WORD PTR [ecx]
  41bcef:	dec    edi
  41bcf0:	pop    ebx
  41bcf1:	pop    ss
  41bcf2:	daa    
  41bcf3:	mov    bl,0x1a
  41bcf5:	loopne 0x41bcc5
  41bcf7:	jbe    0x41bcb6
  41bcf9:	and    DWORD PTR [ebp+0x126a968e],ebp
  41bcff:	jmp    0x41bd21
  41bd01:	sbb    al,ch
  41bd03:	xor    bl,cl
  41bd05:	das    
  41bd06:	test   al,0xda
  41bd08:	jne    0x41bd41
  41bd0a:	sbb    eax,0xee659f61
  41bd0f:	sbb    ah,dh
  41bd11:	shl    esp,0x23
  41bd14:	xor    ebp,ebp
  41bd16:	fmul   st(6),st
  41bd18:	ins    BYTE PTR es:[edi],dx
  41bd19:	jnp    0x41bd86
  41bd1b:	je     0x41bd70
  41bd1d:	sbb    eax,0x94384f96
  41bd22:	hlt    
  41bd23:	div    BYTE PTR [ecx]
  41bd25:	mov    eax,?
  41bd27:	pop    eax
  41bd28:	repnz xchg ecx,eax
  41bd2a:	adc    eax,0x7c4a1361
  41bd2f:	or     ebx,DWORD PTR [ebx]
  41bd31:	cdq    
  41bd32:	pop    edx
  41bd33:	jmp    0xe667abc6
  41bd38:	dec    esi
  41bd39:	int3   
  41bd3a:	pop    ebp
  41bd3b:	push   ebp
  41bd3c:	clc    
  41bd3d:	jg     0x41bcdb
  41bd3f:	mov    dh,0xcf
  41bd41:	push   edx
  41bd42:	pop    ebp
  41bd43:	adc    BYTE PTR [esi-0xc],dl
  41bd46:	and    edx,DWORD PTR [eax+0x1f8a6b2a]
  41bd4c:	gs ja  0x41bd66
  41bd4f:	(bad)  
  41bd50:	and    al,0xcd
  41bd52:	xchg   ebp,eax
  41bd53:	icebp  
  41bd54:	leave  
  41bd55:	cli    
  41bd56:	push   esi
  41bd57:	int    0x5e
  41bd59:	bnd jmp 0x5246df83
  41bd5f:	(bad)  
  41bd60:	loopne 0x41bd10
  41bd62:	cmp    ecx,ecx
  41bd64:	push   esp
  41bd65:	jmp    0x63859320
  41bd6a:	arpl   WORD PTR [esi],bx
  41bd6c:	and    dl,BYTE PTR [ebp+0x776a7f0d]
  41bd72:	mov    gs,WORD PTR [ecx]
  41bd74:	cmc    
  41bd75:	xor    ebp,DWORD PTR [edi-0x48689cd0]
  41bd7b:	fwait
  41bd7c:	push   esp
  41bd7d:	mov    esp,0x20e67478
  41bd82:	pop    esp
  41bd83:	imul   BYTE PTR [ebx-0x3f]
  41bd86:	int3   
  41bd87:	call   0x37a8:0x9bf7ecd4
  41bd8e:	add    esi,DWORD PTR [edx]
  41bd90:	push   es
  41bd91:	add    cl,BYTE PTR [eax+0x4]
  41bd94:	adc    cl,BYTE PTR [ecx-0x1c8e01e0]
  41bd9a:	mov    bl,0x47
  41bd9c:	outs   dx,DWORD PTR ds:[esi]
  41bd9d:	imul   edi,DWORD PTR [ebx],0xffffff91
  41bda0:	cmp    BYTE PTR [ebx-0x147c3776],cl
  41bda6:	hlt    
  41bda7:	add    DWORD PTR [ebp-0x301c166a],eax
  41bdad:	mov    ah,0x95
  41bdaf:	add    BYTE PTR [edx],ah
  41bdb1:	dec    esp
  41bdb2:	mov    edx,0x7cdd51f2
  41bdb7:	mov    eax,ds:0x9d3c306a
  41bdbc:	and    BYTE PTR [edi+0x68d1de74],0x7d
  41bdc3:	scas   eax,DWORD PTR es:[edi]
  41bdc4:	ret    
  41bdc5:	imul   ecx,ecx,0xefe1a643
  41bdcb:	push   edx
  41bdcc:	hlt    
  41bdcd:	mov    BYTE PTR [ebx-0x791314aa],0x1b
  41bdd4:	in     eax,dx
  41bdd5:	retf   
  41bdd6:	xchg   edi,eax
  41bdd7:	dec    ecx
  41bdd8:	(bad)  
  41bdd9:	cmp    BYTE PTR [edx],dl
  41bddb:	mov    ch,0x33
  41bddd:	inc    edx
  41bdde:	pusha  
  41bddf:	cli    
  41bde0:	xor    ah,bh
  41bde2:	jns    0x41bd8c
  41bde4:	sub    eax,0xa29b240
  41bde9:	shl    BYTE PTR [edi+0x72],0x4b
  41bded:	mov    dl,0x5f
  41bdef:	cmp    BYTE PTR [ecx+eiz*1],bh
  41bdf2:	mov    WORD PTR [edx-0x2198dd1f],?
  41bdf8:	push   ecx
  41bdf9:	and    cl,BYTE PTR [edi-0x7f]
  41bdfc:	pop    edi
  41bdfd:	sti    
  41bdfe:	fld    st(3)
  41be00:	lea    esp,[ebp+0x2c0a8036]
  41be06:	ss push ebp
  41be08:	xchg   BYTE PTR [edx-0x737d007e],dl
  41be0e:	lods   eax,DWORD PTR ds:[esi]
  41be0f:	stos   BYTE PTR es:[edi],al
  41be10:	ret    0x33c8
  41be13:	(bad)  
  41be14:	mov    bl,0xf6
  41be16:	pusha  
  41be17:	ror    BYTE PTR [esi+0x7774f54b],1
  41be1d:	fcmovnb st,st(2)
  41be1f:	adc    al,0x21
  41be22:	mov    al,0xc7
  41be24:	mov    ?,WORD PTR [edi+0x5c421e72]
  41be2a:	adc    ecx,0x4172719e
  41be30:	mov    cl,0x39
  41be32:	js     0x41bdef
  41be34:	test   al,0xe5
  41be36:	out    dx,eax
  41be37:	or     BYTE PTR [ecx-0x18fc8c21],dh
  41be3d:	xor    al,0x94
  41be3f:	dec    edx
  41be40:	stos   BYTE PTR es:[edi],al
  41be41:	xor    cl,BYTE PTR [esi+0x13727e54]
  41be47:	push   0xffffffcc
  41be49:	jmp    0x41be86
  41be4b:	fcomp  DWORD PTR [eax+0x279b63aa]
  41be51:	adc    BYTE PTR [edi],bh
  41be53:	pop    ebx
  41be54:	(bad)  
  41be55:	mov    ebp,0x1e9a7309
  41be5a:	nop
  41be5b:	mov    ebx,0xdfaf1f02
  41be60:	mov    ch,0xf5
  41be62:	pusha  
  41be63:	ret    0xf8a9
  41be66:	mov    eax,DWORD PTR [bp+di+0x72]
  41be6a:	in     al,dx
  41be6b:	dec    esp
  41be6c:	cmp    esi,ebp
  41be6e:	mov    esp,0x238ebd07
  41be73:	addr16 mov edi,0x6b01d501
  41be79:	or     esi,DWORD PTR [edi]
  41be7b:	cmc    
  41be7c:	jno    0x41be95
  41be7e:	aad    0xb1
  41be80:	cmc    
  41be81:	aad    0xec
  41be83:	lahf   
  41be84:	sub    dl,BYTE PTR [eax]
  41be86:	xchg   DWORD PTR ds:0x55c3a8be,esi
  41be8c:	(bad)  
  41be8e:	ret    0x209f
  41be91:	push   esi
  41be92:	sub    ebp,DWORD PTR [esi-0x696b591b]
  41be98:	mov    eax,0xb3750f8d
  41be9d:	fcomp  DWORD PTR [eax+0x4cd2ba67]
  41bea3:	mov    esi,0x832a96e1
  41bea8:	shl    BYTE PTR [ecx+0x5d82a438],1
  41beae:	or     BYTE PTR [edi-0x57],dh
  41beb1:	aaa    
  41beb2:	lea    ecx,[eax]
  41beb4:	mov    eax,ds:0x9b4f3fec
  41beb9:	jae    0x41becd
  41bebb:	hlt    
  41bebc:	push   0xfffffff4
  41bebe:	sbb    eax,0x81e678a9
  41bec3:	jo     0x41bf04
  41bec5:	inc    esi
  41bec6:	je     0x41be54
  41bec8:	imul   ecx,DWORD PTR [esi],0x2e
  41becb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41becc:	xchg   DWORD PTR [ecx-0x391c3c93],ebp
  41bed2:	inc    ebx
  41bed3:	inc    esi
  41bed4:	jae    0x41bea1
  41bed6:	and    al,0xc5
  41bed8:	pop    edi
  41bed9:	loop   0x41be6d
  41bedb:	sub    DWORD PTR [edi+0x74],ecx
  41bede:	icebp  
  41bedf:	int    0xfa
  41bee1:	ficomp DWORD PTR gs:[esi-0x1f]
  41bee5:	cli    
  41bee6:	xchg   edx,eax
  41bee7:	call   0xb29d6c5d
  41beec:	sub    al,0xc0
  41beee:	call   0xe473105
  41bef3:	imul   ebp,DWORD PTR [eax+edx*4-0x26fbdeed],0xf0775798
  41befe:	jg     0x41bec9
  41bf00:	add    ch,BYTE PTR [eax-0x2daed709]
  41bf06:	sbb    al,0x4d
  41bf08:	cmp    al,0x26
  41bf0a:	or     al,0x26
  41bf0c:	ficomp WORD PTR [edi+edx*8-0x4af1a616]
  41bf13:	dec    eax
  41bf14:	dec    eax
  41bf15:	dec    ebp
  41bf16:	in     eax,dx
  41bf17:	bound  edx,QWORD PTR [edx+ebp*8+0x12]
  41bf1b:	sbb    eax,0xa36c01d7
  41bf20:	pop    ebp
  41bf21:	pusha  
  41bf22:	inc    edi
  41bf23:	bound  ecx,QWORD PTR [ebx-0x62855b0d]
  41bf29:	xor    al,0x5b
  41bf2b:	(bad)  
  41bf2c:	dec    esi
  41bf2d:	push   es
  41bf2e:	ror    bh,cl
  41bf30:	jmp    0xfd065283
  41bf35:	aaa    
  41bf36:	sti    
  41bf37:	adc    eax,0xfc3d8808
  41bf3c:	out    0xef,eax
  41bf3e:	sbb    DWORD PTR [edi-0x71],0x5
  41bf42:	retf   
  41bf43:	xlat   BYTE PTR ds:[ebx]
  41bf44:	or     eax,DWORD PTR [edi+0x6a]
  41bf47:	pop    ecx
  41bf48:	jno    0x41bf67
  41bf4a:	gs test DWORD PTR es:[ecx],edx
  41bf4e:	mov    bl,0xc5
  41bf50:	mov    dh,0xfd
  41bf52:	icebp  
  41bf53:	lea    esp,[ecx]
  41bf55:	mov    esp,ebx
  41bf57:	mov    esi,0x154cf708
  41bf5c:	mov    gs,WORD PTR [ebx]
  41bf5e:	rcr    BYTE PTR [eax+edx*2+0x50],cl
  41bf62:	add    edx,esi
  41bf64:	pop    ebx
  41bf65:	dec    edi
  41bf66:	xchg   bh,ch
  41bf68:	xchg   ecx,eax
  41bf69:	jge    0x41bf85
  41bf6b:	(bad)  
  41bf6c:	rcr    BYTE PTR [eax+0x6414b15e],cl
  41bf72:	ret    
  41bf73:	(bad)  
  41bf74:	aam    0x51
  41bf76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf77:	or     eax,0xe21dc7dd
  41bf7c:	sub    eax,0x1cc775bb
  41bf81:	pop    ebx
  41bf82:	rcr    BYTE PTR [ecx-0x76],0xfc
  41bf86:	fwait
  41bf87:	ret    
  41bf88:	pushf  
  41bf89:	pop    ecx
  41bf8a:	ins    DWORD PTR es:[edi],dx
  41bf8b:	sbb    al,0x56
  41bf8d:	lock repnz call 0xe8fe:0xa965e125
  41bf96:	push   0x9ca1e522
  41bf9b:	jae    0x41bfa1
  41bf9d:	inc    edx
  41bf9e:	pop    eax
  41bf9f:	push   ebx
  41bfa0:	loope  0x41bfed
  41bfa2:	sbb    DWORD PTR [edx],edi
  41bfa4:	add    BYTE PTR [edx+0x46dc3c4b],0x8e
  41bfab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfac:	pop    ds
  41bfad:	or     dl,BYTE PTR [ecx]
  41bfaf:	rol    DWORD PTR [eax-0x8f16e5a],cl
  41bfb5:	push   0x79
  41bfb7:	mov    ds:0x15ad47b4,al
  41bfbc:	js     0x41bfeb
  41bfbe:	pop    eax
  41bfbf:	into   
  41bfc0:	dec    ecx
  41bfc1:	inc    ebp
  41bfc2:	dec    esi
  41bfc3:	jae    0x41c004
  41bfc5:	add    ecx,DWORD PTR [ecx+0x3d]
  41bfc8:	xchg   ecx,eax
  41bfc9:	cmc    
  41bfca:	mov    edi,0x6d82b89
  41bfcf:	push   ecx
  41bfd0:	int3   
  41bfd1:	adc    BYTE PTR fs:[ebp-0x495a7227],cl
  41bfd8:	mov    WORD PTR [edi],fs
  41bfda:	pop    esi
  41bfdb:	test   al,0xbb
  41bfdd:	out    dx,eax
  41bfde:	daa    
  41bfdf:	shl    DWORD PTR [ebp+ebp*2-0x23cc976b],1
  41bfe6:	pusha  
  41bfe7:	mov    esi,0x4567bc7f
  41bfec:	rcr    BYTE PTR [ecx],cl
  41bfee:	out    0x2,eax
  41bff0:	inc    esp
  41bff1:	push   ds
  41bff2:	jg     0x41c065
  41bff4:	inc    ebp
  41bff5:	sub    ebp,DWORD PTR [esi]
  41bff7:	and    ebp,esp
  41bff9:	(bad)  
  41bffb:	mov    ds:0xb436e17d,eax
  41c000:	xor    al,0x43
  41c002:	js     0x41bfda
  41c004:	push   0xfffffffc
  41c006:	rcl    BYTE PTR [edx],0xae
  41c009:	mov    dl,0x30
  41c00b:	daa    
  41c00c:	enter  0xdf10,0xe1
  41c010:	sahf   
  41c011:	push   esp
  41c012:	cmp    eax,0x1da7df
  41c017:	jmp    FWORD PTR [edi]
  41c019:	rcl    BYTE PTR [ebx+esi*2-0x73],0xe5
  41c01e:	shr    BYTE PTR [ebp+0x59169420],1
  41c024:	jge    0x41c085
  41c026:	call   edx
  41c028:	adc    al,0x5
  41c02a:	inc    edi
  41c02b:	push   ecx
  41c02c:	jbe    0x41bfc1
  41c02e:	cmp    bl,ah
  41c030:	add    BYTE PTR ds:0x69fa860f,cl
  41c036:	lods   al,BYTE PTR ds:[esi]
  41c037:	xlat   BYTE PTR ds:[ebx]
  41c038:	sub    edx,DWORD PTR ds:[edi-0xe]
  41c03c:	imul   esp,DWORD PTR [eax-0x1494dd25],0x407beff6
  41c046:	scas   eax,DWORD PTR es:[edi]
  41c047:	enter  0x2874,0x51
  41c04b:	(bad)  
  41c04c:	lods   al,BYTE PTR ds:[esi]
  41c04d:	mov    al,ds:0xd4bf306f
  41c052:	jae    0x41c00c
  41c054:	cld    
  41c055:	mov    ecx,?
  41c057:	inc    ebp
  41c058:	jne    0x41c0b2
  41c05a:	xchg   ebp,eax
  41c05b:	aas    
  41c05c:	dec    esp
  41c05d:	pop    ebp
  41c05e:	test   DWORD PTR [esi-0x6d],0x30faccf3
  41c065:	push   ebp
  41c066:	push   0x2a8e2501
  41c06b:	add    BYTE PTR [ebp+0x13],0x1a
  41c06f:	cmc    
  41c070:	jno    0x41c064
  41c072:	int    0xaa
  41c074:	or     al,0x73
  41c076:	pop    ss
  41c077:	cmp    DWORD PTR [edi+0x3d95e437],esi
  41c07d:	rol    DWORD PTR [eax],1
  41c07f:	add    BYTE PTR [eax],al
  41c081:	add    BYTE PTR [esi-0x10fe18c6],dh
  41c087:	(bad)  
  41c089:	mov    edi,0xdf2dff43
  41c08e:	mov    BYTE PTR [esi-0x29],0x25
  41c092:	jge    0x41c0d0
  41c094:	add    DWORD PTR [eax],eax
  41c096:	hlt    
  41c097:	add    al,0x0
  41c099:	add    BYTE PTR [eax],bl
  41c09b:	jmp    0x41c063
  41c09d:	aad    0xe2
  41c09f:	or     ch,BYTE PTR [ebp+0x29e48fdf]
  41c0a5:	repnz push 0xccdcc404
  41c0ab:	js     0x41c12c
  41c0ad:	add    esi,esi
  41c0af:	mov    cl,bl
  41c0b1:	xchg   ebp,eax
  41c0b2:	xchg   ecx,eax
  41c0b3:	mov    al,ds:0xa69a5f74
  41c0b8:	fsubr  DWORD PTR [esi+edx*2-0x2c2e95f9]
  41c0bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0c0:	sbb    eax,0x418d8d52
  41c0c5:	cs aaa 
  41c0c7:	stos   DWORD PTR es:[edi],eax
  41c0c8:	or     eax,0x5449d0f5
  41c0cd:	rcl    DWORD PTR [ecx+0x10],0x25
  41c0d1:	inc    esi
  41c0d2:	dec    edx
  41c0d3:	mov    dl,0x22
  41c0d5:	mov    al,ds:0xe84974b5
  41c0da:	cwde   
  41c0db:	xchg   edi,eax
  41c0dc:	cwde   
  41c0dd:	mov    ebp,0xa6179297
  41c0e2:	out    0xa3,eax
  41c0e4:	jle    0x41c0a6
  41c0e6:	es pop esp
  41c0e8:	cmp    ecx,edx
  41c0ea:	adc    al,0xae
  41c0ec:	sbb    DWORD PTR [ebx],ecx
  41c0ee:	lods   al,BYTE PTR ds:[esi]
  41c0ef:	ficom  WORD PTR [esi-0x2e475a5a]
  41c0f5:	jmp    0x77cf:0xe6aff0db
  41c0fc:	loopne 0x41c0d0
  41c0fe:	push   eax
  41c0ff:	cli    
  41c100:	jnp    0x41c0ac
  41c102:	inc    edx
  41c103:	test   eax,0x49a7495d
  41c108:	add    al,0x77
  41c10a:	add    ebx,DWORD PTR [edx-0x530f154d]
  41c110:	fs (bad) 
  41c112:	cli    
  41c113:	sbb    eax,0x20afafdd
  41c118:	mov    ds,WORD PTR [edx]
  41c11a:	sub    ebx,esi
  41c11c:	and    al,BYTE PTR [esi]
  41c11e:	(bad)  
  41c11f:	dec    esi
  41c120:	push   0xffffff88
  41c122:	aaa    
  41c123:	sbb    eax,0x5ebed9d4
  41c128:	(bad)  ds:0xff2f1ece
  41c12e:	dec    edi
  41c12f:	inc    edx
  41c130:	add    edx,ecx
  41c132:	(bad)  
  41c133:	pop    esp
  41c134:	je     0x41c122
  41c136:	and    ecx,DWORD PTR [ebp-0x4f]
  41c139:	mov    edi,0x968a6f5f
  41c13e:	push   0xffffff92
  41c140:	xor    dl,BYTE PTR [esi]
  41c142:	popa   
  41c143:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c144:	out    dx,al
  41c145:	out    0x9d,al
  41c147:	out    dx,al
  41c148:	push   ebp
  41c149:	stos   DWORD PTR es:[edi],eax
  41c14a:	sbb    BYTE PTR [esi],0x6
  41c14d:	mov    cl,0x4d
  41c14f:	dec    ebx
  41c150:	xor    eax,0x9558c330
  41c155:	pop    ds
  41c156:	adc    DWORD PTR [ebp-0x684fa7b2],eax
  41c15c:	jne    0x41c107
  41c15e:	cvtpi2ps xmm6,mm6
  41c161:	stos   BYTE PTR es:[edi],al
  41c162:	and    bl,BYTE PTR [ebp-0x21]
  41c165:	xchg   ebx,eax
  41c166:	jl     0x41c1e3
  41c168:	push   ds
  41c169:	out    dx,al
  41c16a:	outs   dx,BYTE PTR ds:[esi]
  41c16b:	adc    al,0xbc
  41c16d:	out    dx,eax
  41c16e:	cmc    
  41c16f:	call   0x4540cdae
  41c174:	add    al,0x82
  41c176:	cmp    BYTE PTR [ecx-0x39],al
  41c179:	mov    ah,0x1d
  41c17b:	iret   
  41c17c:	cwde   
  41c17d:	out    0x86,eax
  41c17f:	xor    ah,bl
  41c181:	pushf  
  41c182:	jmp    FWORD PTR [ecx]
  41c184:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c185:	js     0x41c1d6
  41c187:	sbb    cl,BYTE PTR [esi-0x68]
  41c18a:	mov    ebp,0x79a6c691
  41c18f:	pop    ecx
  41c190:	sahf   
  41c191:	and    bh,bh
  41c193:	ret    
  41c194:	xchg   esi,eax
  41c195:	lds    edx,FWORD PTR [ebp+0x25]
  41c198:	pusha  
  41c199:	stc    
  41c19a:	loopne 0x41c17d
  41c19c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c19d:	sahf   
  41c19e:	out    0xf0,eax
  41c1a0:	cmp    ch,BYTE PTR [ebx+0x15]
  41c1a3:	fst    QWORD PTR [edi+0x18c0a453]
  41c1a9:	jecxz  0x41c19d
  41c1ab:	mov    eax,ds:0x22b65283
  41c1b0:	imul   DWORD PTR [ebp+0x14]
  41c1b3:	mov    ch,0x6d
  41c1b5:	or     eax,0x6ec638c1
  41c1ba:	or     al,0xf
  41c1bc:	sbb    BYTE PTR [esp+eax*1-0x59],cl
  41c1c0:	shr    DWORD PTR [ecx],cl
  41c1c2:	leave  
  41c1c3:	pop    ss
  41c1c4:	or     al,cl
  41c1c6:	inc    edi
  41c1c7:	je     0x41c1bc
  41c1c9:	fbstp  TBYTE PTR [eax+esi*8+0x45e4082]
  41c1d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1d1:	add    ah,BYTE PTR [eax]
  41c1d3:	test   BYTE PTR [ebp-0x35],al
  41c1d6:	pop    eax
  41c1d7:	iret   
  41c1d8:	rol    DWORD PTR [esi-0x24763c14],cl
  41c1de:	js     0x41c165
  41c1e0:	inc    esi
  41c1e1:	daa    
  41c1e2:	and    al,0x1e
  41c1e4:	aam    0x58
  41c1e6:	imul   BYTE PTR [edi-0x15cf94e4]
  41c1ec:	mov    al,0x8a
  41c1ee:	repz push ecx
  41c1f0:	loop   0x41c190
  41c1f2:	stos   BYTE PTR es:[edi],al
  41c1f3:	push   esi
  41c1f4:	pop    ebx
  41c1f5:	mov    dh,BYTE PTR [ebx-0x56]
  41c1f8:	dec    edx
  41c1f9:	or     edx,DWORD PTR [eax]
  41c1fb:	loop   0x41c24a
  41c1fd:	cmp    al,BYTE PTR [eax-0x46df5545]
  41c203:	sbb    cl,BYTE PTR ds:0xb180280
  41c209:	pop    ss
  41c20a:	(bad)  [edx+0x64]
  41c20d:	push   0xfffffffd
  41c20f:	sahf   
  41c210:	jp     0x41c214
  41c212:	les    ecx,FWORD PTR [esi+0x7a]
  41c215:	sub    BYTE PTR [ebx],bh
  41c217:	pop    eax
  41c218:	mov    esi,0xe8502d99
  41c21d:	or     eax,0x82b787ea
  41c222:	not    bh
  41c224:	dec    eax
  41c225:	dec    edi
  41c226:	int    0x32
  41c228:	es retf 0x4f7b
  41c22c:	mov    ch,0xa0
  41c22e:	mov    ds:0x2dfc4253,eax
  41c233:	les    edx,FWORD PTR [ebp+0x58]
  41c236:	ins    BYTE PTR es:[edi],dx
  41c237:	or     al,0x25
  41c239:	pop    eax
  41c23a:	pop    ss
  41c23b:	push   esi
  41c23c:	ret    0x80dc
  41c23f:	pop    ebp
  41c240:	repz mul DWORD PTR [edx]
  41c243:	(bad)  
  41c244:	lods   eax,DWORD PTR ds:[esi]
  41c245:	pop    esp
  41c246:	jecxz  0x41c2ba
  41c248:	sbb    al,0xb2
  41c24a:	std    
  41c24b:	pop    ebp
  41c24c:	fs sub al,0xf8
  41c24f:	arpl   WORD PTR [edi+0x7b8b4d9f],sp
  41c255:	xchg   ebp,eax
  41c256:	push   es
  41c257:	push   esp
  41c258:	inc    ecx
  41c259:	inc    edi
  41c25a:	sbb    ecx,eax
  41c25c:	bound  edx,QWORD PTR [ebp+ebx*1+0x12]
  41c260:	jae    0x41c1e7
  41c262:	jb     0x41c236
  41c264:	xchg   ebx,eax
  41c265:	mov    dh,0x63
  41c267:	and    ecx,DWORD PTR [esi-0x426e456d]
  41c26d:	cmp    ah,BYTE PTR [esi-0x51]
  41c270:	mov    edx,0xa13d6d0a
  41c275:	call   0x7a461d60
  41c27a:	inc    eax
  41c27b:	mov    ah,0x2c
  41c27d:	arpl   WORD PTR [ecx],ax
  41c27f:	sub    ebx,DWORD PTR [ecx-0x4e70bdf]
  41c285:	and    BYTE PTR [ebx+0x53],ch
  41c288:	ror    BYTE PTR [edi],cl
  41c28a:	cmp    DWORD PTR [esi+0x1a],ebp
  41c28d:	jp     0x41c226
  41c28f:	imul   ebp,DWORD PTR [ecx],0x6a9dcd71
  41c295:	push   ds
  41c296:	ror    BYTE PTR [ebp-0x22c3db39],1
  41c29c:	cmp    DWORD PTR [esi+0x66],eax
  41c29f:	pusha  
  41c2a0:	xchg   edi,eax
  41c2a1:	jmp    0x41c2d9
  41c2a3:	push   edi
  41c2a4:	pop    ss
  41c2a5:	jecxz  0x41c29b
  41c2a7:	nop
  41c2a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2a9:	rol    DWORD PTR [esi-0x34],1
  41c2ac:	mov    eax,DWORD PTR [eiz*2-0x20fd1448]
  41c2b3:	les    edi,FWORD PTR [eax+edx*1]
  41c2b6:	mov    al,0xc8
  41c2b8:	imul   eax,DWORD PTR [ecx+ebp*4],0xffffff98
  41c2bc:	stos   DWORD PTR es:[edi],eax
  41c2bd:	xor    ch,al
  41c2bf:	pop    ebx
  41c2c0:	jle    0x41c298
  41c2c2:	scas   eax,DWORD PTR es:[edi]
  41c2c3:	and    al,0x2e
  41c2c5:	sub    DWORD PTR [ecx-0x2d],edx
  41c2c8:	fs call 0x71609906
  41c2ce:	fild   DWORD PTR [ebp+ecx*4+0x6c]
  41c2d2:	mov    ch,0x28
  41c2d4:	gs mov al,0x77
  41c2d7:	jno    0x41c337
  41c2d9:	nop
  41c2da:	stc    
  41c2db:	(bad)  [edx]
  41c2dd:	inc    esi
  41c2de:	push   es
  41c2df:	retf   0xdc69
  41c2e2:	push   ebx
  41c2e3:	push   edi
  41c2e4:	cdq    
  41c2e5:	in     eax,0x70
  41c2e7:	les    ebx,FWORD PTR [ebx+ebp*4]
  41c2ea:	push   ecx
  41c2eb:	push   cs
  41c2ec:	fwait
  41c2ed:	and    eax,0xf7b0aa9c
  41c2f2:	idiv   al
  41c2f4:	test   eax,0x22feded2
  41c2f9:	or     eax,0xfe391183
  41c2fe:	mov    WORD PTR [edi],?
  41c300:	(bad)  
  41c302:	pusha  
  41c303:	fcom   DWORD PTR [edi+0x1ae60a7e]
  41c309:	sbb    BYTE PTR [edx],al
  41c30b:	in     eax,dx
  41c30c:	xchg   edi,eax
  41c30d:	jge    0x41c372
  41c30f:	jne    0x41c2f2
  41c311:	dec    edx
  41c312:	nop
  41c313:	jbe    0x41c2fa
  41c315:	dec    edi
  41c316:	ins    DWORD PTR es:[edi],dx
  41c317:	adc    dh,BYTE PTR ds:[ebp-0x651fe764]
  41c31e:	aad    0x3a
  41c320:	push   edx
  41c321:	ds adc eax,0xcfbd3983
  41c327:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c328:	stos   BYTE PTR es:[edi],al
  41c329:	and    ah,dh
  41c32b:	mov    dh,0x49
  41c32d:	pop    esp
  41c32e:	movlps xmm2,QWORD PTR ds:0x3fdc85c2
  41c335:	mov    gs,esp
  41c337:	push   ss
  41c338:	sahf   
  41c339:	xlat   BYTE PTR ds:[ebx]
  41c33a:	xchg   al,dl
  41c33c:	inc    ebp
  41c33d:	jl     0x41c37a
  41c33f:	mov    ah,0xdf
  41c341:	icebp  
  41c342:	les    ebx,FWORD PTR [edx+edi*4+0x3]
  41c346:	pop    ebx
  41c347:	mov    bl,0xc5
  41c349:	outs   dx,BYTE PTR ds:[esi]
  41c34a:	pop    ds
  41c34b:	(bad)  [ebp+0x3b]
  41c34e:	cdq    
  41c34f:	add    ch,BYTE PTR [edx+ebx*4]
  41c352:	jmp    0x41c324
  41c354:	sub    eax,DWORD PTR [edi]
  41c356:	jb     0x41c31c
  41c358:	inc    esi
  41c359:	ins    DWORD PTR es:[edi],dx
  41c35a:	shr    DWORD PTR [edx-0x31],0xd8
  41c35e:	pop    ss
  41c35f:	dec    esp
  41c360:	pop    es
  41c361:	pop    ebx
  41c362:	hlt    
  41c363:	mov    eax,ds:0xe60231bc
  41c368:	les    ecx,FWORD PTR [edi+0x74]
  41c36b:	pop    ss
  41c36c:	dec    esp
  41c36d:	jecxz  0x41c377
  41c36f:	ja     0x41c376
  41c371:	aas    
  41c372:	shl    DWORD PTR [ecx+0xfec5c64],1
  41c378:	push   esp
  41c379:	mov    ecx,0x99fdfb65
  41c37e:	inc    ecx
  41c37f:	xor    eax,DWORD PTR ds:0x22379f73
  41c385:	pusha  
  41c386:	out    0x4d,eax
  41c388:	mov    al,ds:0x22916679
  41c38d:	stc    
  41c38e:	add    BYTE PTR [esi],ch
  41c390:	cmp    al,0x91
  41c392:	cmovle edx,DWORD PTR [eax-0x4637cd0e]
  41c399:	sub    DWORD PTR ds:0xb4b77ec5,ebx
  41c39f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3a0:	push   edx
  41c3a1:	ins    BYTE PTR es:[edi],dx
  41c3a2:	fcmove st,st(0)
  41c3a4:	push   ebx
  41c3a5:	sti    
  41c3a6:	lahf   
  41c3a7:	or     al,0x6a
  41c3a9:	mov    al,0x7b
  41c3ab:	call   0x5b8:0xe4290c5a
  41c3b2:	imul   ecx,esi,0xffffffc6
  41c3b5:	inc    ebp
  41c3b6:	outs   dx,DWORD PTR ds:[esi]
  41c3b7:	sbb    ebp,ebp
  41c3b9:	mov    edi,0x1faac263
  41c3be:	pop    ss
  41c3bf:	push   cs
  41c3c0:	push   ebx
  41c3c1:	jno    0x41c420
  41c3c3:	mov    esi,0xd8b1facc
  41c3c8:	retf   
  41c3c9:	jno    0x41c3af
  41c3cb:	and    ebx,0xffffff86
  41c3ce:	sbb    DWORD PTR [ecx+0x69dd5a1e],esp
  41c3d4:	jb     0x41c38b
  41c3d6:	add    bh,ch
  41c3d8:	xor    al,0x5d
  41c3da:	mov    esp,0x641d69a7
  41c3df:	test   eax,0x3165f5a5
  41c3e4:	(bad)  
  41c3e5:	adc    eax,0xa6c8d352
  41c3ea:	adc    DWORD PTR [edx-0x3b1d09bf],0xccd49c5
  41c3f4:	sub    eax,0x3e1ad009
  41c3f9:	jl     0x41c3a3
  41c3fb:	xor    al,BYTE PTR [ecx+ecx*1]
  41c3fe:	mov    eax,0xb594ba95
  41c403:	jmp    0x4451:0x3237a2ae
  41c40a:	ja     0x41c3cf
  41c40c:	in     al,0x51
  41c40e:	lods   eax,DWORD PTR ds:[esi]
  41c40f:	iret   
  41c410:	sbb    ecx,DWORD PTR [ebp+0x1302c1eb]
  41c416:	mov    ah,0xf4
  41c418:	jp     0x41c43c
  41c41a:	jl     0x41c49b
  41c41c:	scas   eax,DWORD PTR es:[edi]
  41c41d:	pop    ds
  41c41e:	iret   
  41c41f:	lods   al,BYTE PTR ds:[esi]
  41c420:	dec    esp
  41c421:	cmp    al,0x62
  41c423:	push   ss
  41c424:	mov    BYTE PTR [esi-0x46],dl
  41c427:	lea    ebx,[edx-0x6fca7ed3]
  41c42d:	cmp    DWORD PTR [ecx+ecx*8+0x3c],ebx
  41c431:	mov    ds:0x5f7551be,eax
  41c436:	sub    DWORD PTR [ecx+0x7c663ead],edi
  41c43c:	clc    
  41c43d:	xor    BYTE PTR fs:[esi+0x39],ah
  41c441:	xchg   BYTE PTR [edx-0x16],cl
  41c444:	xor    dh,BYTE PTR [eax]
  41c446:	add    BYTE PTR ds:0x2799f58e,bh
  41c44c:	mov    ds:0xb010db8e,al
  41c451:	sbb    al,0x9c
  41c453:	add    DWORD PTR [edi+0x6f38636d],0xffffff84
  41c45a:	or     eax,0xa4a754ea
  41c45f:	fsubr  QWORD PTR ss:[edi]
  41c462:	jmp    0x41c448
  41c464:	jl     0x41c4b7
  41c466:	add    bl,BYTE PTR [ecx+0x1218529b]
  41c46c:	cmc    
  41c46d:	stos   BYTE PTR es:[edi],al
  41c46e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c46f:	push   ss
  41c470:	push   ecx
  41c471:	into   
  41c472:	ds adc ebp,ebx
  41c475:	mov    edi,eax
  41c477:	aam    0xa9
  41c479:	mov    bl,0x3a
  41c47b:	cmp    eax,0x78a6cf91
  41c480:	into   
  41c481:	mov    dl,0x0
  41c483:	test   BYTE PTR [ebp-0x7080e1a5],ah
  41c489:	mov    ah,0xdf
  41c48b:	xor    eax,0x1aae9aa5
  41c490:	jno    0x41c495
  41c492:	sub    al,0xc0
  41c494:	fist   WORD PTR [edx-0x78dde7f2]
  41c49a:	cwde   
  41c49b:	sbb    BYTE PTR ds:0x981b6d1e,dh
  41c4a1:	icebp  
  41c4a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4a3:	sbb    DWORD PTR [eax],ebp
  41c4a5:	mov    BYTE PTR [edi],ah
  41c4a7:	pop    esi
  41c4a8:	icebp  
  41c4a9:	mov    dh,0xe7
  41c4ab:	or     DWORD PTR [esp+ebp*1-0x125b31ce],edx
  41c4b2:	ja     0x41c445
  41c4b4:	outs   dx,BYTE PTR ds:[esi]
  41c4b5:	add    al,0x0
  41c4b7:	invd   
  41c4b9:	stc    
  41c4ba:	sahf   
  41c4bb:	add    eax,0x3234e2f4
  41c4c0:	adc    DWORD PTR [edx],eax
  41c4c2:	jnp    0x41c4d0
  41c4c4:	xchg   ebp,eax
  41c4c5:	sahf   
  41c4c6:	or     dh,BYTE PTR ds:0x7e7a3871
  41c4cc:	aam    0xbd
  41c4ce:	sub    al,BYTE PTR [edi-0x147362bf]
  41c4d4:	call   0xab95fba5
  41c4d9:	push   DWORD PTR [esi]
  41c4db:	push   cs
  41c4dc:	and    eax,0xe83431e0
  41c4e1:	mov    ecx,0xec2e627a
  41c4e6:	jge    0x41c49e
  41c4e8:	and    DWORD PTR [eax+eiz*1-0x55],edx
  41c4ec:	mov    edi,0x300eb8d0
  41c4f1:	out    0xa,eax
  41c4f3:	pop    ecx
  41c4f4:	test   bh,ch
  41c4f6:	aad    0x46
  41c4f8:	push   esi
  41c4f9:	mov    edx,0x75e76e77
  41c4fe:	out    0x5d,eax
  41c500:	inc    eax
  41c501:	push   ss
  41c502:	xor    dl,BYTE PTR [ebx+esi*2-0x43]
  41c506:	pusha  
  41c507:	sub    al,ah
  41c509:	daa    
  41c50a:	lods   eax,DWORD PTR cs:[esi]
  41c50c:	scas   eax,DWORD PTR es:[edi]
  41c50d:	mov    sp,0x3501
  41c511:	rol    esi,1
  41c513:	cmp    BYTE PTR [eax],ch
  41c515:	stos   DWORD PTR es:[edi],eax
  41c516:	clc    
  41c517:	add    BYTE PTR [edx-0x2a7cc0ac],bl
  41c51d:	jmp    0xb7d8:0x3f7405b6
  41c524:	sti    
  41c525:	sbb    eax,0xb776dfa1
  41c52a:	aad    0xc2
  41c52c:	sbb    eax,0x5c0496d9
  41c531:	xlat   BYTE PTR ds:[ebx]
  41c532:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c533:	sbb    al,0x20
  41c535:	rcr    DWORD PTR [eax+0x3b],1
  41c538:	push   ecx
  41c539:	mov    ah,0xd8
  41c53b:	nop
  41c53c:	mov    cl,0x9f
  41c53e:	(bad)  
  41c53f:	cmc    
  41c540:	shl    DWORD PTR es:[ebx-0x22],0xdd
  41c545:	imul   edi,DWORD PTR [edx-0x315849ac],0xffffffbe
  41c54c:	mov    al,ds:0xccce64db
  41c551:	mov    edi,0xef209ccc
  41c556:	xchg   edx,eax
  41c557:	jbe    0x41c4e1
  41c559:	xchg   ecx,eax
  41c55a:	test   DWORD PTR [eax+0x5f1c254e],esi
  41c560:	jae    0x41c54e
  41c562:	or     al,0x3b
  41c564:	daa    
  41c565:	push   ebx
  41c566:	repz or dl,BYTE PTR [eax-0x4]
  41c56a:	cmp    al,0x17
  41c56c:	push   cs
  41c56d:	aam    0x67
  41c56f:	xor    edx,esi
  41c571:	popf   
  41c572:	jae    0x41c5c4
  41c574:	in     al,dx
  41c575:	mov    bl,0x59
  41c577:	jle    0x41c52a
  41c579:	mov    al,ds:0x7104d344
  41c57e:	loop   0x41c58a
  41c580:	out    dx,eax
  41c581:	xor    bl,BYTE PTR [esp+esi*8+0x63ca51b0]
  41c588:	gs xchg edi,eax
  41c58a:	(bad)  [ebx+edi*8]
  41c58d:	add    eax,DWORD PTR [eax]
  41c58f:	add    BYTE PTR [eax],al
  41c591:	add    ch,ah
  41c593:	adc    al,BYTE PTR [edi]
  41c595:	dec    ebx
  41c596:	neg    DWORD PTR [edi-0x13]
  41c599:	mov    esi,0xd2d3b943
  41c59e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c59f:	cld    
  41c5a0:	(bad)  
  41c5a1:	call   0x430717
  41c5a6:	hlt    
  41c5a7:	add    al,0x0
  41c5a9:	add    BYTE PTR [edi-0xe],al
  41c5ac:	pop    ds
  41c5ad:	jp     0x41c5ed
  41c5af:	pushf  
  41c5b0:	jp     0x41c5f4
  41c5b2:	lods   al,BYTE PTR ds:[esi]
  41c5b3:	or     al,0x1d
  41c5b5:	imul   ebp,DWORD PTR [ecx-0xb9c5d17],0x46de02cc
  41c5bf:	xchg   edx,eax
  41c5c0:	out    0x1,al
  41c5c2:	fchs   
  41c5c4:	cmp    al,BYTE PTR [ebx+0x497bac34]
  41c5ca:	cmp    al,0x45
  41c5cc:	xchg   ecx,eax
  41c5cd:	ds push 0xcd2a3d94
  41c5d3:	pop    esi
  41c5d4:	rcl    BYTE PTR [esi+0x7c],0x88
  41c5d8:	mov    eax,ds:0x60792f49
  41c5dd:	mov    dl,BYTE PTR [edx-0xd484650]
  41c5e3:	mov    ecx,0x2087ad4c
  41c5e8:	int    0xe5
  41c5ea:	inc    ebp
  41c5eb:	dec    edx
  41c5ec:	xchg   ebx,eax
  41c5ed:	js     0x41c577
  41c5ef:	dec    eax
  41c5f0:	dec    edx
  41c5f1:	idiv   ebx
  41c5f3:	ins    BYTE PTR es:[edi],dx
  41c5f4:	xchg   esi,eax
  41c5f5:	sub    DWORD PTR [ebx+0x334d5d01],esi
  41c5fb:	jae    0x41c5a7
  41c5fd:	and    esp,DWORD PTR [edi+0x3028898f]
  41c603:	pop    esi
  41c604:	fs nop
  41c606:	push   cs
  41c607:	xor    eax,0xb0e2305c
  41c60c:	adc    esp,DWORD PTR [ecx]
  41c60e:	push   es
  41c60f:	dec    edx
  41c610:	inc    ebx
  41c611:	xlat   BYTE PTR ds:[ebx]
  41c612:	(bad)  
  41c613:	push   ss
  41c614:	cmp    BYTE PTR [ebx+0x74ee80c6],cl
  41c61a:	lea    ecx,[ebx+0x5c259691]
  41c620:	add    BYTE PTR [ebx],bh
  41c622:	retf   0x142d
  41c625:	push   eax
  41c626:	adc    bh,dh
  41c628:	xor    esp,DWORD PTR [edx]
  41c62a:	nop
  41c62b:	loop   0x41c66d
  41c62d:	ret    
  41c62e:	add    ecx,DWORD PTR [edi-0x42]
  41c631:	mov    ch,0x56
  41c633:	add    bl,dh
  41c635:	rcl    BYTE PTR [edx+ebx*2+0x4c801edc],1
  41c63c:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41c63e:	sbb    dl,ch
  41c640:	sub    dh,dl
  41c642:	mov    eax,ds:0x12d22a0c
  41c647:	cmp    al,0x10
  41c649:	int    0x55
  41c64b:	pop    esp
  41c64c:	rcr    DWORD PTR [ecx+0x74],1
  41c64f:	aad    0xa0
  41c651:	shr    BYTE PTR [esi],0x96
  41c654:	mov    ah,0x2d
  41c656:	ins    DWORD PTR es:[edi],dx
  41c657:	xchg   ecx,eax
  41c658:	test   al,0x75
  41c65a:	ja     0x41c605
  41c65c:	and    al,0x22
  41c65e:	mov    esi,DWORD PTR [ebx+ecx*4+0x39]
  41c662:	xchg   esi,eax
  41c663:	xor    eax,0xd3d21263
  41c668:	mov    edi,0xfbf57d20
  41c66d:	inc    edx
  41c66e:	gs mov dl,0xc7
  41c671:	jmp    0x946273c1
  41c676:	ds ins DWORD PTR es:[edi],dx
  41c678:	mov    dh,0x79
  41c67a:	fld    TBYTE PTR ds:0x7b85b41a
  41c680:	add    eax,0x3341577c
  41c685:	call   0x4eea2a26
  41c68a:	cld    
  41c68b:	adc    eax,0x751e0f33
  41c690:	sbb    BYTE PTR [esi+0x3226649f],0x4e
  41c697:	stc    
  41c698:	xchg   BYTE PTR [esp+edx*2+0x4ddac080],ah
  41c69f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6a0:	xor    al,0xd7
  41c6a2:	repz push 0x4f
  41c6a5:	jns    0x41c704
  41c6a7:	aas    
  41c6a8:	mov    bl,0xd9
  41c6aa:	call   0x9024:0x64c416e4
  41c6b1:	test   DWORD PTR [ebx],0xc7f1f0ad
  41c6b7:	or     bl,BYTE PTR [ecx+0x2d]
  41c6ba:	xor    ebp,DWORD PTR [edi-0x71e412c1]
  41c6c0:	in     al,0xe
  41c6c2:	imul   edi,eax,0x4237ef36
  41c6c8:	cmp    DWORD PTR [esp+edx*4-0x1ee2bc29],0x24
  41c6d0:	(bad)  
  41c6d1:	sub    BYTE PTR [eax-0x69706633],0xbc
  41c6d8:	mov    esp,0xb5fce15e
  41c6dd:	push   cs
  41c6de:	xor    al,0xd5
  41c6e0:	xchg   esi,eax
  41c6e1:	jl     0x41c71e
  41c6e3:	xor    BYTE PTR [ecx],0x83
  41c6e6:	imul   edi,esi,0x4b
  41c6e9:	push   ebx
  41c6ea:	clc    
  41c6eb:	or     esp,DWORD PTR [esi]
  41c6ed:	dec    ebx
  41c6ee:	ret    
  41c6ef:	adc    cl,ch
  41c6f1:	loop   0x41c71a
  41c6f3:	imul   esp,DWORD PTR [ebx+0x5dbddc24],0x5
  41c6fa:	scas   eax,DWORD PTR es:[edi]
  41c6fb:	mov    WORD PTR [eax+0x6b],ds
  41c6fe:	adc    al,0x9a
  41c700:	shr    BYTE PTR [ebx+esi*4],0x5f
  41c704:	jo     0x41c697
  41c706:	sub    dl,BYTE PTR [esi]
  41c708:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c709:	mov    ds:0x55ecaedb,al
  41c70e:	inc    esp
  41c70f:	outs   dx,DWORD PTR ds:[esi]
  41c710:	xchg   ebx,eax
  41c711:	pop    edx
  41c712:	cli    
  41c713:	xchg   ecx,eax
  41c714:	rol    DWORD PTR [esi+0xd9e2036],0x80
  41c71b:	call   0x42ba:0x37e7
  41c721:	daa    
  41c722:	pop    edx
  41c723:	fcmovnb st,st(1)
  41c725:	mov    esp,0xad51a028
  41c72a:	in     eax,0xff
  41c72c:	or     ebp,DWORD PTR fs:[eax-0x75]
  41c730:	into   
  41c731:	fld    QWORD PTR [ebp+0x7e]
  41c734:	lods   al,BYTE PTR ds:[esi]
  41c735:	pop    ss
  41c736:	pusha  
  41c737:	(bad)  
  41c738:	lahf   
  41c739:	inc    ebp
  41c73a:	xchg   DWORD PTR [eax+0x1],ebx
  41c73d:	gs jae 0x41c6ed
  41c740:	ret    0x5e2f
  41c743:	pop    ebx
  41c744:	jbe    0x41c72b
  41c746:	and    al,0xc1
  41c748:	cmp    bl,dh
  41c74a:	cmp    BYTE PTR [ecx-0x56],dl
  41c74d:	xor    al,0x86
  41c74f:	mov    ds,WORD PTR [edx-0x1d]
  41c752:	jb     0x41c6ff
  41c754:	sbb    bl,al
  41c756:	es popa 
  41c758:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c759:	mov    edx,0x41c1b69a
  41c75e:	mov    ecx,0x9181081d
  41c763:	sbb    ch,BYTE PTR [ebx+edx*2-0x36]
  41c767:	mov    dh,0x4b
  41c769:	adc    ch,BYTE PTR [edx]
  41c76b:	es jae 0x41c798
  41c76e:	das    
  41c76f:	push   edx
  41c770:	jp     0x41c7c9
  41c772:	xor    ebp,esi
  41c774:	jns    0x41c737
  41c776:	in     al,dx
  41c777:	stos   BYTE PTR es:[edi],al
  41c778:	stos   BYTE PTR es:[edi],al
  41c779:	int3   
  41c77a:	inc    ebp
  41c77b:	mov    dl,0x65
  41c77d:	inc    ebx
  41c77e:	dec    eax
  41c77f:	pop    edi
  41c780:	pop    edx
  41c781:	sbb    cl,ah
  41c783:	pop    ecx
  41c784:	into   
  41c785:	(bad)  
  41c786:	jo     0x41c750
  41c788:	jb     0x41c718
  41c78a:	mov    edi,DWORD PTR [esi+0x580f012d]
  41c790:	mov    edx,0x61ee08da
  41c795:	stc    
  41c796:	mov    DWORD PTR [ebp+0x27],eax
  41c799:	and    al,0x74
  41c79b:	adc    DWORD PTR [ecx+ebp*4+0x5d],edi
  41c79f:	call   0x1acf:0x71f3238
  41c7a6:	xor    BYTE PTR [ecx+0x69],cl
  41c7a9:	mov    dl,0x9f
  41c7ab:	cli    
  41c7ac:	outs   dx,DWORD PTR ds:[esi]
  41c7ad:	mov    esp,0xaac92ec6
  41c7b2:	inc    ecx
  41c7b3:	cwde   
  41c7b4:	mov    al,0x86
  41c7b6:	aaa    
  41c7b7:	(bad)  
  41c7b8:	adc    dh,BYTE PTR ds:0xed97444
  41c7be:	stc    
  41c7bf:	and    dh,dh
  41c7c1:	cmp    BYTE PTR [eax+eax*4-0x67da8238],0x4f
  41c7c9:	or     BYTE PTR [edi+0xe],ch
  41c7cc:	mov    ds:0xad2b1e03,eax
  41c7d1:	pop    ecx
  41c7d2:	push   esi
  41c7d3:	inc    eax
  41c7d4:	jno    0x41c7c8
  41c7d6:	sub    eax,0x1a78f49e
  41c7db:	inc    ecx
  41c7dc:	or     BYTE PTR [edi+0x657d8442],ch
  41c7e2:	push   ds
  41c7e3:	lods   eax,DWORD PTR ds:[esi]
  41c7e4:	jp     0x41c827
  41c7e6:	xor    al,0xfe
  41c7e8:	inc    ecx
  41c7e9:	pop    edi
  41c7ea:	cwde   
  41c7eb:	ins    DWORD PTR es:[edi],dx
  41c7ec:	add    eax,0xa3426f6c
  41c7f1:	nop
  41c7f2:	repnz repnz sti 
  41c7f5:	sbb    esp,ebp
  41c7f7:	mov    ds:0x8bf97c97,al
  41c7fc:	test   eax,0xa41133a
  41c801:	lods   al,BYTE PTR ds:[esi]
  41c802:	jo     0x41c841
  41c804:	dec    esi
  41c805:	lea    edi,[edi-0x38b1a8e7]
  41c80b:	fxch   st(3)
  41c80d:	mov    edx,0x70a6bb3a
  41c812:	mov    eax,ds:0xa9044a2a
  41c817:	adc    dl,ah
  41c819:	inc    edx
  41c81a:	ins    DWORD PTR es:[edi],dx
  41c81b:	lods   al,BYTE PTR ds:[esi]
  41c81c:	sub    DWORD PTR [esi-0x44],edx
  41c81f:	scas   al,BYTE PTR es:[edi]
  41c820:	and    edx,esp
  41c822:	aas    
  41c823:	xchg   ecx,eax
  41c824:	inc    eax
  41c825:	xchg   BYTE PTR [ebp-0x3e],bh
  41c828:	pop    edi
  41c829:	lods   al,BYTE PTR ds:[esi]
  41c82a:	or     dl,BYTE PTR [esi-0x1704fbf0]
  41c830:	pusha  
  41c831:	imul   ebp,DWORD PTR [edx-0x324cc5e8],0x53
  41c838:	mov    bh,0x5e
  41c83a:	xchg   ebx,eax
  41c83b:	jge    0x41c8a6
  41c83d:	loope  0x41c858
  41c83f:	jbe    0x41c89e
  41c841:	mov    bh,0x4c
  41c843:	popa   
  41c844:	jp     0x41c868
  41c846:	adc    DWORD PTR [ebx+0x6c],eax
  41c849:	mul    DWORD PTR [esi]
  41c84b:	rol    DWORD PTR [edx+esi*8+0x1da0cc38],cl
  41c852:	cmp    BYTE PTR [ecx],bh
  41c854:	xchg   BYTE PTR [ecx+0x338ae7a0],ah
  41c85a:	push   es
  41c85b:	adc    edx,esp
  41c85d:	jmp    0x39ad:0x441d3a86
  41c864:	mov    edi,0x76e40912
  41c869:	(bad)  
  41c86a:	ds add al,0xb1
  41c86d:	add    esi,DWORD PTR [ebx+0x28]
  41c870:	clc    
  41c871:	aas    
  41c872:	xor    DWORD PTR ds:0x12930660,ebx
  41c878:	pop    ebp
  41c879:	mov    al,0xe2
  41c87b:	xchg   edi,eax
  41c87c:	repz aam 0x15
  41c87f:	ins    DWORD PTR es:[edi],dx
  41c880:	and    al,0xe8
  41c882:	mov    eax,ds:0x5a72c435
  41c887:	test   al,0xb1
  41c889:	dec    eax
  41c88a:	lea    esi,[ebx]
  41c88c:	mul    BYTE PTR [ebx]
  41c88e:	jmp    0x5cd9:0xf717ffc7
  41c895:	loopne 0x41c8e5
  41c897:	mov    bh,0xd1
  41c899:	mov    bl,0x42
  41c89c:	and    al,0xd0
  41c89e:	aaa    
  41c89f:	leave  
  41c8a0:	(bad)  
  41c8a2:	ss mov cl,0xc0
  41c8a5:	sub    BYTE PTR [ebx+0x76a1b516],bl
  41c8ab:	outs   dx,BYTE PTR ds:[esi]
  41c8ac:	mov    edi,DWORD PTR [edx+0x1e]
  41c8af:	test   eax,0x2d45a159
  41c8b4:	mov    ch,0x76
  41c8b6:	inc    eax
  41c8b7:	mov    eax,0x5f8844ee
  41c8bc:	cmc    
  41c8bd:	pop    ebx
  41c8be:	adc    al,0xcd
  41c8c0:	jge    0x41c8b7
  41c8c2:	rol    BYTE PTR [edx+0x22],cl
  41c8c5:	push   0xe
  41c8c7:	fxam   
  41c8c9:	and    eax,0xba3622f1
  41c8ce:	pop    esi
  41c8cf:	ret    
  41c8d0:	fsubr  st(0),st
  41c8d2:	push   es
  41c8d3:	pop    edx
  41c8d4:	mov    bl,0x39
  41c8d6:	push   es
  41c8d7:	neg    edi
  41c8d9:	cld    
  41c8da:	icebp  
  41c8db:	dec    ebx
  41c8dc:	or     BYTE PTR [esi],dl
  41c8de:	fxch   st(0)
  41c8e0:	inc    esi
  41c8e1:	(bad)  [esi+0x2d76196f]
  41c8e7:	add    ebp,DWORD PTR [esi+ebp*8+0x2e]
  41c8eb:	fcmovnb st,st(2)
  41c8ed:	test   al,0x57
  41c8ef:	iret   
  41c8f0:	push   es
  41c8f1:	stos   BYTE PTR es:[edi],al
  41c8f2:	pop    edi
  41c8f3:	gs nop
  41c8f5:	stc    
  41c8f6:	popa   
  41c8f7:	arpl   WORD PTR [esi+0x62],bp
  41c8fa:	fwait
  41c8fb:	(bad)  
  41c8fd:	inc    eax
  41c8fe:	cdq    
  41c8ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c900:	aaa    
  41c901:	push   ss
  41c902:	mov    ds:0xa104d269,eax
  41c907:	(bad)
  41c90a:	or     ch,BYTE PTR [ebp+0xe]
  41c90d:	push   ss
  41c90e:	inc    esi
  41c90f:	xlat   BYTE PTR ds:[ebx]
  41c910:	call   0xf7278f95
  41c915:	pushf  
  41c916:	inc    edx
  41c917:	inc    esp
  41c918:	xchg   edx,eax
  41c919:	mov    ecx,DWORD PTR [edx]
  41c91b:	hlt    
  41c91c:	fst    QWORD PTR [eax+0x5567b649]
  41c922:	and    bh,BYTE PTR [edi+eax*8+0x2c39c978]
  41c929:	cmp    eax,0x3a41bf78
  41c92e:	add    DWORD PTR [edi],0x5d
  41c931:	pop    ebp
  41c932:	call   0x2102eaf7
  41c937:	cmc    
  41c938:	dec    ebx
  41c939:	or     eax,0x4c0e1713
  41c93e:	sti    
  41c93f:	fldcw  WORD PTR [eax+0x7470c510]
  41c945:	ret    
  41c946:	push   ebx
  41c947:	or     eax,0x1503ad7
  41c94c:	cld    
  41c94d:	shl    DWORD PTR [edx-0x61],1
  41c950:	jmp    0xc174e3cc
  41c955:	repz fcmovb st,st(2)
  41c958:	cmp    bh,BYTE PTR [edi+0x5f]
  41c95b:	mov    bh,BYTE PTR [edx]
  41c95d:	jo     0x41c8fa
  41c95f:	stc    
  41c960:	lods   al,BYTE PTR ds:[esi]
  41c961:	daa    
  41c962:	jg     0x41c9d1
  41c964:	pop    edi
  41c965:	push   ecx
  41c966:	mov    esp,DWORD PTR [edi+ebp*4+0x5de1b693]
  41c96d:	mov    ds:0x5dcae2df,al
  41c972:	adc    ah,BYTE PTR [ebx+ebx*2]
  41c975:	cs xor eax,0xd2d172f3
  41c97b:	addr16 mov edx,0x5a0dcea4
  41c981:	popa   
  41c982:	sub    eax,0x71cdc606
  41c987:	jmp    0x41c91b
  41c989:	sub    dh,bl
  41c98b:	inc    ecx
  41c98c:	mov    ss,WORD PTR [ecx+edi*1]
  41c98f:	and    al,0x9e
  41c991:	sbb    DWORD PTR [ecx],eax
  41c993:	pusha  
  41c994:	xor    eax,0x81d95aa6
  41c999:	cmc    
  41c99a:	data16 cld 
  41c99c:	loopne 0x41c9fc
  41c99e:	dec    ecx
  41c99f:	out    0x85,eax
  41c9a1:	pop    edi
  41c9a2:	(bad)  
  41c9a3:	ins    DWORD PTR es:[edi],dx
  41c9a4:	push   edx
  41c9a5:	sub    al,0xad
  41c9a7:	mov    bh,0xdb
  41c9a9:	mov    ecx,0xbee41e
  41c9ae:	push   cs
  41c9af:	je     0x41c9cc
  41c9b1:	xor    cl,al
  41c9b3:	neg    esi
  41c9b5:	fistp  WORD PTR [edi+edx*1]
  41c9b8:	adc    cl,dl
  41c9ba:	iret   
  41c9bb:	es call 0xd619:0xcca61083
  41c9c3:	(bad)  
  41c9c5:	push   edx
  41c9c6:	ds in  al,dx
  41c9c8:	push   ss
  41c9c9:	xor    BYTE PTR [edi-0x57],0x2c
  41c9cd:	out    dx,ax
  41c9cf:	cmp    eax,0x6dad6660
  41c9d4:	mov    al,0xa3
  41c9d6:	in     eax,0xfc
  41c9d8:	loope  0x41c999
  41c9da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9db:	idiv   BYTE PTR [eax-0x50226dcc]
  41c9e1:	inc    eax
  41c9e2:	xor    al,0xca
  41c9e4:	cld    
  41c9e5:	adc    al,0xaa
  41c9e7:	scas   al,BYTE PTR es:[edi]
  41c9e8:	fcom   QWORD PTR fs:[ecx-0x3d]
  41c9ec:	push   ds
  41c9ed:	cmp    eax,ecx
  41c9ef:	mov    DWORD PTR [eax+0x7e7231ea],edi
  41c9f5:	jns    0x41c9fb
  41c9f7:	xor    al,0x77
  41c9f9:	fidivr DWORD PTR [eax]
  41c9fb:	xor    DWORD PTR [esi+ecx*1+0x5521c2cf],ebx
  41ca02:	cs cli 
  41ca04:	mov    ah,0x1e
  41ca06:	pop    ss
  41ca07:	dec    ecx
  41ca08:	add    BYTE PTR [edi],cl
  41ca0a:	ja     0x41c9f8
  41ca0c:	(bad)  
  41ca0d:	dec    eax
  41ca0e:	dec    edi
  41ca0f:	test   DWORD PTR [eax+0x148724a4],ecx
  41ca15:	inc    esp
  41ca16:	ret    
  41ca17:	mov    bh,0x41
  41ca19:	mov    ecx,0xd53b941f
  41ca1e:	pop    ds
  41ca1f:	sub    edx,0xc978a427
  41ca25:	in     eax,0xd9
  41ca27:	es jg  0x41ca56
  41ca2a:	inc    edi
  41ca2b:	xchg   BYTE PTR [edx+0x17],al
  41ca2e:	jb     0x41ca33
  41ca30:	xor    dl,BYTE PTR [ecx]
  41ca32:	cmc    
  41ca33:	mov    dl,0x22
  41ca35:	ss ss mov ebp,0x33de97ad
  41ca3d:	mov    dh,0xa7
  41ca3f:	mov    ds:0x37d99e4a,al
  41ca44:	xchg   DWORD PTR [edx+0x7d],esi
  41ca47:	xor    bh,BYTE PTR [eax+0x47]
  41ca4a:	adc    BYTE PTR [edx+0x418d4899],dl
  41ca50:	clc    
  41ca51:	xor    BYTE PTR [ebx],bh
  41ca53:	out    dx,al
  41ca54:	cmp    DWORD PTR [edx+0x1d],esp
  41ca57:	jecxz  0x41ca3a
  41ca59:	cmp    bh,bl
  41ca5b:	js     0x41ca40
  41ca5d:	imul   edi,eax,0x9b333e9d
  41ca63:	fstp   DWORD PTR [ecx+0x1d008b9b]
  41ca69:	mov    ah,BYTE PTR [ecx-0x1e]
  41ca6c:	xor    BYTE PTR [ecx],ah
  41ca6e:	mov    ah,0xcf
  41ca70:	pop    ecx
  41ca71:	out    0x3a,al
  41ca73:	bound  edi,QWORD PTR [ecx-0x417c7e7d]
  41ca79:	imul   ebx,DWORD PTR [eax+ecx*2-0x570a6220],0xffffffeb
  41ca81:	loope  0x41ca10
  41ca83:	jne    0x41caa6
  41ca85:	pop    eax
  41ca86:	ss inc edi
  41ca88:	jecxz  0x41ca29
  41ca8a:	and    esi,DWORD PTR [edx+eax*2+0x33]
  41ca8e:	push   0xffffff81
  41ca90:	int3   
  41ca91:	ins    BYTE PTR es:[edi],dx
  41ca92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca93:	dec    edx
  41ca94:	add    al,0x4a
  41ca96:	pop    esp
  41ca97:	aas    
  41ca98:	jmp    0x41caab
  41ca9a:	add    ah,0x8f
  41ca9d:	pop    eax
  41ca9e:	add    BYTE PTR [eax],al
  41caa0:	add    BYTE PTR [eax],al
  41caa2:	in     al,0x3e
  41caa4:	mov    esp,ss
  41caa6:	fdivrp st(6),st
  41caa8:	cld    
  41caa9:	ds push esp
  41caab:	daa    
  41caac:	cmp    esi,DWORD PTR [edx-0x29]
  41caaf:	cmp    al,0x12
  41cab1:	(bad)  
  41cab2:	gs inc esi
  41cab4:	add    DWORD PTR [eax],eax
  41cab6:	hlt    
  41cab7:	add    al,0x0
  41cab9:	add    BYTE PTR [ebx+0x28539248],bh
  41cabf:	ins    BYTE PTR es:[edi],dx
  41cac0:	xchg   esp,eax
  41cac1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cac2:	mov    bh,0x89
  41cac4:	rcr    BYTE PTR [edi+0x6abc755a],cl
  41caca:	jnp    0x41cb21
  41cacc:	sub    al,0xfd
  41cace:	leave  
  41cacf:	cmp    DWORD PTR [eax],edi
  41cad1:	add    DWORD PTR [ebx-0x3e],0xfffffff5
  41cad5:	das    
  41cad6:	lea    edi,[ebx-0x6b1705c6]
  41cadc:	repz cmovae ebx,DWORD PTR [ecx]
  41cae0:	push   ds
  41cae1:	jbe    0x41caf5
  41cae3:	mov    ecx,0x73fa916f
  41cae8:	mov    DWORD PTR [si-0x13],0xf1606645
  41caf0:	jg     0x41cb36
  41caf2:	retf   
  41caf3:	jp     0x41cb65
  41caf5:	es mov ecx,0x932636e7
  41cafb:	outs   dx,BYTE PTR ds:[esi]
  41cafc:	sub    al,0xfc
  41cafe:	call   0x425ae1b7
  41cb03:	mov    dh,0x54
  41cb05:	pusha  
  41cb06:	mov    esp,0x9db31c67
  41cb0b:	cmc    
  41cb0c:	xlat   BYTE PTR ds:[ebx]
  41cb0d:	jp     0x41cab3
  41cb0f:	xor    BYTE PTR [eax],ch
  41cb11:	add    al,0x24
  41cb13:	inc    edx
  41cb14:	je     0x41cb17
  41cb16:	xchg   ebx,eax
  41cb17:	addr16 jno 0x41cabd
  41cb1a:	addr16 sub cl,ah
  41cb1d:	jle    0x41cac8
  41cb1f:	mov    ds:0xc222d837,eax
  41cb24:	out    dx,eax
  41cb25:	push   0xe8bac4ae
  41cb2a:	repz and al,0x6a
  41cb2d:	adc    eax,0x5301668b
  41cb32:	retf   0x6974
  41cb35:	fld    st(0)
  41cb37:	mov    ah,0x48
  41cb39:	jo     0x41cad5
  41cb3b:	lahf   
  41cb3c:	test   al,0x53
  41cb3e:	mov    ecx,0xba4776c
  41cb43:	fmul   QWORD PTR [esi+0x7250686d]
  41cb49:	ja     0x41cb9b
  41cb4b:	enter  0x60d5,0xd0
  41cb4f:	nop
  41cb50:	xor    al,BYTE PTR [eax-0x66b210c1]
  41cb56:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41cb58:	adc    bh,BYTE PTR [ebx-0x5f]
  41cb5b:	or     eax,0xaab0e71d
  41cb60:	popf   
  41cb61:	fst    DWORD PTR [ebx-0x11f7e25f]
  41cb67:	push   ebp
  41cb68:	mov    ch,0x42
  41cb6a:	push   ebx
  41cb6b:	bound  eax,QWORD PTR [esi+0x541a4c80]
  41cb71:	or     al,0x5f
  41cb73:	adc    eax,0xbba6d624
  41cb78:	or     al,BYTE PTR [esi-0x45]
  41cb7b:	dec    esi
  41cb7c:	pop    edi
  41cb7d:	pop    edi
  41cb7e:	sub    eax,0xdd49e8ce
  41cb83:	mov    dh,0x46
  41cb85:	sahf   
  41cb86:	jns    0x41cbca
  41cb88:	mov    WORD PTR [edi-0x21],cs
  41cb8b:	and    eax,0xdcfdb823
  41cb90:	xor    eax,0xa690e557
  41cb95:	xor    edx,ebp
  41cb97:	xchg   edi,eax
  41cb98:	pusha  
  41cb99:	xchg   ebx,eax
  41cb9a:	test   DWORD PTR [si],ecx
  41cb9d:	jae    0x41cb6c
  41cb9f:	sbb    dh,bh
  41cba1:	leave  
  41cba2:	out    dx,eax
  41cba3:	mov    ebp,DWORD PTR [esi+0x3b]
  41cba6:	int3   
  41cba7:	push   ecx
  41cba8:	js     0x41cc15
  41cbaa:	cs test ebp,eax
  41cbad:	mov    ebp,0xe46ed5a1
  41cbb2:	retf   0x6453
  41cbb5:	push   0xffffff97
  41cbb7:	lods   al,BYTE PTR ds:[esi]
  41cbb8:	int3   
  41cbb9:	adc    BYTE PTR [edx-0x6],dh
  41cbbc:	mov    DWORD PTR [ebp+esi*2+0x61],0x59feda4d
  41cbc4:	push   ss
  41cbc5:	sub    dl,BYTE PTR [ebp+eax*8+0x29c637b4]
  41cbcc:	int3   
  41cbcd:	in     al,dx
  41cbce:	stos   DWORD PTR es:[edi],eax
  41cbcf:	fsubr  QWORD PTR [edi+0x6e]
  41cbd2:	loopne 0x41cb65
  41cbd4:	xchg   esp,eax
  41cbd5:	add    BYTE PTR [ebx-0x173b4cca],ch
  41cbdb:	add    al,0xdd
  41cbdd:	jb     0x41cbeb
  41cbdf:	repnz mov WORD PTR [ecx-0x2e05a320],ss
  41cbe6:	jae    0x41cc3d
  41cbe8:	mov    esp,0x9a8c0d12
  41cbee:	xor    BYTE PTR [eax],al
  41cbf0:	dec    edi
  41cbf1:	or     al,0xa1
  41cbf3:	je     0x41cba7
  41cbf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbf6:	and    al,0xa3
  41cbf8:	imul   ecx,ebx,0xffffff8b
  41cbfb:	push   esp
  41cbfc:	adc    bh,BYTE PTR [ecx+eax*8-0x2a]
  41cc00:	int    0x76
  41cc02:	and    ebp,edi
  41cc04:	test   DWORD PTR [ecx+ecx*1+0x76],ecx
  41cc08:	xor    bh,BYTE PTR [ebp-0x1c]
  41cc0b:	stos   DWORD PTR es:[edi],eax
  41cc0c:	adc    bh,dh
  41cc0e:	jno    0x41cc06
  41cc10:	(bad)  
  41cc12:	jae    0x41cc19
  41cc14:	or     al,0x98
  41cc16:	sbb    eax,0x2a36f682
  41cc1b:	mov    dh,0x89
  41cc1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc1e:	popf   
  41cc1f:	popa   
  41cc20:	jb     0x41cc20
  41cc22:	neg    ebx
  41cc24:	ins    BYTE PTR es:[edi],dx
  41cc25:	jbe    0x41cc6d
  41cc27:	test   eax,0x6dc45f8
  41cc2c:	mov    ?,WORD PTR [esi+0x74af5f7]
  41cc32:	jmp    FWORD PTR [ebx+ecx*4+0x5c]
  41cc36:	dec    esp
  41cc37:	mov    ds:0x43b1f37a,al
  41cc3c:	sar    BYTE PTR [edi+eiz*4-0xdfee676],cl
  41cc43:	mov    dl,0x7
  41cc45:	and    esi,ebp
  41cc47:	jmp    0xb5417d84
  41cc4c:	mov    eax,ds:0x4c91229f
  41cc51:	(bad)  
  41cc52:	std    
  41cc53:	sbb    DWORD PTR [edx-0x5],edi
  41cc56:	mov    al,ds:0xf8353e8
  41cc5b:	out    dx,al
  41cc5c:	cmp    al,0xd
  41cc5e:	pop    ss
  41cc5f:	(bad)  
  41cc60:	mov    ds:0xa7eea03d,al
  41cc65:	inc    edi
  41cc66:	sbb    eax,0xa73ee13b
  41cc6b:	call   0x626991a0
  41cc70:	data16 jge 0x41cc2f
  41cc73:	inc    esi
  41cc74:	test   BYTE PTR [ebp+0x7a2ee347],0x48
  41cc7b:	ins    BYTE PTR es:[edi],dx
  41cc7c:	pop    es
  41cc7d:	or     eax,0x75928816
  41cc82:	mov    ah,0xd6
  41cc84:	cld    
  41cc85:	mov    ah,0x3
  41cc87:	add    eax,0xdb24da66
  41cc8c:	push   ecx
  41cc8d:	in     eax,dx
  41cc8e:	mov    ebx,0x7346dd8
  41cc93:	arpl   WORD PTR [eax-0x7cf1bfdb],si
  41cc99:	xor    eax,0x6b4cca82
  41cc9e:	xor    eax,0x8ebcfabc
  41cca3:	pusha  
  41cca4:	mov    ecx,0xa5c649eb
  41cca9:	loop   0x41ccc9
  41ccab:	daa    
  41ccac:	push   ss
  41ccad:	lea    ebp,[eax+0x3e]
  41ccb0:	push   0x3e
  41ccb2:	mov    eax,0x3eac5fcc
  41ccb7:	push   eax
  41ccb8:	mov    dh,0x6e
  41ccba:	fst    QWORD PTR [esi-0xe42f498]
  41ccc0:	mov    ebp,ecx
  41ccc2:	xchg   edx,eax
  41ccc3:	and    dl,BYTE PTR ds:0x1bc3d839
  41ccc9:	xchg   BYTE PTR [ebx+0x51],cl
  41cccc:	jle    0x41cd10
  41ccce:	aam    0x47
  41ccd0:	jmp    0x8e41c97b
  41ccd5:	sub    ah,BYTE PTR [ecx+ecx*2]
  41ccd8:	cmp    esp,DWORD PTR [eax+ecx*8]
  41ccdb:	adc    al,BYTE PTR [edi+0x10]
  41ccde:	pop    edx
  41ccdf:	pop    ss
  41cce0:	clc    
  41cce1:	jg     0x41cd5b
  41cce3:	fst    QWORD PTR [eax-0x7e7c5453]
  41cce9:	add    edi,DWORD PTR [ebp+eax*1+0x4017eb58]
  41ccf0:	dec    ebx
  41ccf1:	pop    ecx
  41ccf2:	pop    esp
  41ccf3:	mov    dl,BYTE PTR [edx]
  41ccf5:	in     eax,dx
  41ccf6:	xchg   esp,eax
  41ccf7:	outs   dx,DWORD PTR ds:[esi]
  41ccf8:	pop    eax
  41ccf9:	std    
  41ccfa:	mov    eax,ds:0xb9075c11
  41ccff:	mov    eax,ds:0x4c743d2d
  41cd04:	add    edx,DWORD PTR [esp+eiz*8+0x801474]
  41cd0b:	or     esp,DWORD PTR [ecx]
  41cd0d:	das    
  41cd0e:	out    dx,al
  41cd0f:	outs   dx,BYTE PTR ds:[esi]
  41cd10:	cmp    ebp,DWORD PTR [eax-0x47aacb6b]
  41cd16:	mov    gs,WORD PTR es:[edi]
  41cd19:	nop
  41cd1a:	push   esp
  41cd1b:	shl    BYTE PTR [ebx+0x3],1
  41cd1e:	jbe    0x41ccdb
  41cd20:	sbb    eax,0x4feb61ae
  41cd25:	shl    BYTE PTR [ecx+0x42],1
  41cd28:	loope  0x41cccd
  41cd2a:	pop    ss
  41cd2b:	cs mov dl,0xa1
  41cd2e:	cli    
  41cd2f:	sub    ch,bl
  41cd31:	stos   DWORD PTR es:[edi],eax
  41cd32:	xor    al,0x4f
  41cd34:	(bad)  [esi-0x3e]
  41cd37:	add    edi,edi
  41cd39:	sbb    al,0xb1
  41cd3b:	xor    DWORD PTR [eax+edx*2-0x25ff61f8],0xffffffa9
  41cd43:	out    0x99,eax
  41cd45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd46:	es push 0xb8c18995
  41cd4c:	xchg   ebx,eax
  41cd4d:	dec    edx
  41cd4e:	sub    al,0x93
  41cd50:	dec    ecx
  41cd51:	xor    esi,DWORD PTR [ebp+0x2e]
  41cd54:	sub    DWORD PTR [eax+0x51],ecx
  41cd57:	xchg   DWORD PTR [esi-0x36145dee],ebp
  41cd5d:	lahf   
  41cd5e:	or     al,0x4f
  41cd60:	cs ss aad 0x11
  41cd64:	pushf  
  41cd65:	xor    esp,DWORD PTR [eax+0x1]
  41cd68:	ret    
  41cd69:	scas   al,BYTE PTR es:[edi]
  41cd6a:	jo     0x41cdbf
  41cd6c:	idiv   BYTE PTR [ecx+ebx*2+0xb]
  41cd70:	jg     0x41cd74
  41cd72:	cmp    al,ah
  41cd74:	(bad)
  41cd78:	adc    dh,al
  41cd7a:	add    ebp,ecx
  41cd7c:	xchg   esp,eax
  41cd7d:	lahf   
  41cd7e:	push   ebp
  41cd7f:	dec    ebp
  41cd80:	(bad)  
  41cd82:	icebp  
  41cd83:	cdq    
  41cd84:	out    0xae,eax
  41cd86:	mov    bh,BYTE PTR [ebx]
  41cd88:	jmp    DWORD PTR [edx-0x4e]
  41cd8b:	aas    
  41cd8c:	call   0x7ffe4597
  41cd91:	add    BYTE PTR [ebx],bh
  41cd93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd94:	xlat   BYTE PTR ds:[ebx]
  41cd95:	or     BYTE PTR [ebx-0x6],dl
  41cd98:	adc    dl,BYTE PTR [edi+eax*8]
  41cd9b:	jae    0x41cd95
  41cd9d:	sub    esp,DWORD PTR [eax-0x1b]
  41cda0:	xchg   edx,eax
  41cda1:	and    ebx,ecx
  41cda3:	jp     0x41cd69
  41cda5:	pop    DWORD PTR [edi]
  41cda7:	leave  
  41cda8:	(bad)  
  41cda9:	cli    
  41cdaa:	pop    ebx
  41cdab:	lock xor al,0x9c
  41cdae:	das    
  41cdaf:	icebp  
  41cdb0:	xchg   BYTE PTR [ebx],bh
  41cdb2:	or     dh,BYTE PTR [ebx+0x32]
  41cdb5:	popa   
  41cdb6:	mov    WORD PTR ds:0x8830af4c,fs
  41cdbc:	ins    BYTE PTR es:[edi],dx
  41cdbd:	add    BYTE PTR [edi*8+0x3b9e5372],al
  41cdc4:	(bad)  
  41cdc5:	push   0xecdf7b87
  41cdca:	push   ecx
  41cdcb:	mov    bl,0x47
  41cdcd:	loopne 0x41cdea
  41cdcf:	mov    bl,0x48
  41cdd1:	cwde   
  41cdd2:	sbb    bh,BYTE PTR [ecx]
  41cdd4:	pop    ebx
  41cdd5:	xor    BYTE PTR ds:0x3781,cl
  41cdda:	clc    
  41cddb:	and    al,0x32
  41cddd:	cld    
  41cdde:	cmp    BYTE PTR [ebx+0x22cf1bc9],ch
  41cde4:	dec    ebx
  41cde5:	fs aam 0xf
  41cde8:	xchg   ecx,eax
  41cde9:	xchg   esi,eax
  41cdea:	xchg   edx,eax
  41cdeb:	(bad)  [ebx+0x6213f544]
  41cdf1:	jmp    0xb095:0xb38f318
  41cdf8:	in     al,dx
  41cdf9:	jp     0x41cddc
  41cdfb:	inc    ebx
  41cdfc:	ret    0x6cf5
  41cdff:	mov    ch,0xf0
  41ce01:	mov    fs,esi
  41ce03:	mov    bl,0x82
  41ce05:	mov    dl,0xa1
  41ce07:	sub    ebx,ebx
  41ce09:	loopne 0x41ce3f
  41ce0b:	pop    es
  41ce0c:	push   ebp
  41ce0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce0f:	push   0x65
  41ce11:	ins    DWORD PTR es:[edi],dx
  41ce12:	jno    0x41ce56
  41ce14:	jns    0x41cdf3
  41ce16:	pop    eax
  41ce17:	ret    0xbe03
  41ce1a:	je     0x41ce82
  41ce1c:	out    0x23,al
  41ce1e:	test   al,0x5c
  41ce20:	jle    0x41ce89
  41ce22:	sub    edx,ebp
  41ce24:	lods   al,BYTE PTR ds:[esi]
  41ce25:	stc    
  41ce26:	pop    edi
  41ce27:	mov    cl,0xa7
  41ce29:	mov    bh,0xe5
  41ce2b:	daa    
  41ce2c:	enter  0xc01b,0xb8
  41ce30:	fistp  DWORD PTR [edi+esi*1-0xf]
  41ce34:	mov    al,ds:0xb621018
  41ce39:	cld    
  41ce3a:	dec    edi
  41ce3b:	lods   eax,DWORD PTR ds:[esi]
  41ce3c:	shr    DWORD PTR [ebp-0x78],1
  41ce3f:	aad    0xdf
  41ce41:	jmp    0x41cde3
  41ce43:	call   ecx
  41ce45:	(bad)  
  41ce46:	pop    edi
  41ce47:	(bad)  
  41ce48:	in     eax,dx
  41ce49:	and    BYTE PTR [eax],dh
  41ce4b:	add    ebp,edi
  41ce4d:	push   eax
  41ce4e:	xchg   BYTE PTR [edi],bh
  41ce50:	push   eax
  41ce51:	mov    BYTE PTR [ebx-0x80],ch
  41ce54:	mov    eax,ds:0x22be2d94
  41ce59:	adc    al,0x15
  41ce5b:	arpl   WORD PTR [esi+0xbd178f0],cx
  41ce61:	push   edx
  41ce62:	xor    al,0x6b
  41ce64:	dec    ebx
  41ce65:	cmp    DWORD PTR [esi],esi
  41ce67:	sub    DWORD PTR ds:0x22b9aff1,0x1f
  41ce6e:	jmp    0x7ab:0x5912f8a2
  41ce75:	fstp   st(0)
  41ce77:	push   eax
  41ce78:	loope  0x41ce89
  41ce7a:	add    cl,BYTE PTR [eax]
  41ce7c:	fldpi  
  41ce7e:	mov    bh,0x36
  41ce80:	push   es
  41ce81:	jmp    0x7ba58ea5
  41ce86:	jno    0x41ced7
  41ce88:	lds    esi,FWORD PTR [ebx-0xe]
  41ce8b:	iret   
  41ce8c:	cdq    
  41ce8d:	sbb    DWORD PTR [ebp+0x21],ebx
  41ce90:	stc    
  41ce91:	test   al,0x51
  41ce93:	cmp    ebp,DWORD PTR [eax-0x5147dc00]
  41ce99:	add    al,0x26
  41ce9b:	push   ds
  41ce9c:	sub    al,0xef
  41ce9e:	inc    eax
  41ce9f:	push   ss
  41cea0:	dec    ebp
  41cea1:	inc    eax
  41cea2:	je     0x41ce45
  41cea4:	in     al,dx
  41cea5:	(bad)  
  41cea6:	sbb    eax,0x3daecce7
  41ceab:	pop    ebx
  41ceac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cead:	xlat   BYTE PTR ds:[ebx]
  41ceae:	pushf  
  41ceaf:	cmp    eax,0x2593abb3
  41ceb4:	add    cl,bh
  41ceb6:	lahf   
  41ceb7:	jmp    0xe934144e
  41cebc:	pushf  
  41cebd:	out    0xfc,eax
  41cebf:	add    ebp,DWORD PTR [edx]
  41cec1:	retf   
  41cec2:	and    DWORD PTR [ecx],ecx
  41cec4:	mov    edi,0xf57c342b
  41cec9:	add    ch,dh
  41cecb:	jp     0x41cf02
  41cecd:	fistp  DWORD PTR [ecx+0xc]
  41ced0:	xchg   ecx,eax
  41ced1:	mov    eax,ds:0x680ad069
  41ced6:	int3   
  41ced7:	mov    esi,0xc20fa0f5
  41cedc:	js     0x41cf04
  41cede:	es mov dh,0x7b
  41cee1:	push   0x9594c044
  41cee6:	test   DWORD PTR [ebx+ecx*4-0xae04a67],0xb08fdc99
  41cef1:	jb     0x41ce97
  41cef3:	shl    BYTE PTR [ecx-0x50],1
  41cef6:	sbb    BYTE PTR [edx-0x5a],dl
  41cef9:	sub    bh,BYTE PTR [ecx]
  41cefb:	push   0x28c2cbb0
  41cf00:	jb     0x41cf6a
  41cf02:	aad    0x5e
  41cf04:	fwait
  41cf05:	sub    ebp,ebp
  41cf07:	xchg   BYTE PTR [edi],dl
  41cf09:	inc    esi
  41cf0a:	rol    DWORD PTR [edi-0x62],cl
  41cf0d:	xchg   ebp,eax
  41cf0e:	out    0xe1,eax
  41cf10:	dec    ebp
  41cf11:	inc    eax
  41cf12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf13:	adc    DWORD PTR [edi+0x7a73b795],edx
  41cf19:	ins    BYTE PTR es:[edi],dx
  41cf1a:	daa    
  41cf1b:	icebp  
  41cf1c:	or     DWORD PTR [edx+0x6c261768],ecx
  41cf22:	pop    ebx
  41cf23:	pop    ds
  41cf24:	loopne 0x41cf46
  41cf26:	aas    
  41cf27:	jns    0x41cf06
  41cf29:	push   eax
  41cf2a:	sbb    ah,BYTE PTR [ebx-0x3]
  41cf2d:	xchg   DWORD PTR [edx],eax
  41cf2f:	inc    esp
  41cf30:	xchg   esp,eax
  41cf31:	mov    ds:0xaec2c2e9,eax
  41cf36:	outs   dx,BYTE PTR ds:[esi]
  41cf37:	and    bl,BYTE PTR [edi-0x39e58077]
  41cf3d:	pop    esi
  41cf3e:	cdq    
  41cf3f:	jne    0x41ceed
  41cf41:	stos   BYTE PTR es:[edi],al
  41cf42:	int3   
  41cf43:	loope  0x41cedb
  41cf45:	jp     0x41cf8a
  41cf47:	movsx  ebx,WORD PTR [edi+0x54]
  41cf4b:	loopne 0x41cf4e
  41cf4d:	mov    bh,0xcb
  41cf4f:	or     BYTE PTR [esi],0xca
  41cf52:	std    
  41cf53:	imul   ecx,edi,0xffffffad
  41cf56:	fld    DWORD PTR [ebx-0x3]
  41cf59:	lods   eax,DWORD PTR ds:[esi]
  41cf5a:	and    BYTE PTR [ecx-0x59],al
  41cf5d:	fcomp  DWORD PTR [eax]
  41cf5f:	inc    ebp
  41cf60:	xor    eax,0xc3ada60a
  41cf65:	mov    al,0x32
  41cf67:	clc    
  41cf68:	mov    ch,0x22
  41cf6a:	xchg   ebp,eax
  41cf6b:	dec    edi
  41cf6c:	ins    BYTE PTR es:[edi],dx
  41cf6d:	inc    esi
  41cf6e:	cmp    ah,ch
  41cf70:	cmp    BYTE PTR [ecx+0x4fc667c2],0x7d
  41cf77:	mov    ebp,esi
  41cf79:	div    esp
  41cf7b:	add    BYTE PTR [edx],ah
  41cf7d:	xchg   ecx,eax
  41cf7e:	fld    DWORD PTR [edx+ebp*4]
  41cf81:	add    eax,DWORD PTR [esi+0x74]
  41cf84:	mov    dl,0xf3
  41cf86:	xchg   ebx,eax
  41cf87:	outs   dx,BYTE PTR ds:[esi]
  41cf88:	dec    eax
  41cf89:	imul   BYTE PTR [bp+si]
  41cf8c:	iret   
  41cf8d:	out    0x67,al
  41cf8f:	jge    0x41cf3b
  41cf91:	out    0x8,al
  41cf93:	inc    esi
  41cf94:	(bad)  
  41cf95:	mov    ebp,0x52c7214a
  41cf9a:	test   BYTE PTR [ecx-0x49],bh
  41cf9d:	sub    eax,0xb83e199c
  41cfa2:	jnp    0x41d023
  41cfa4:	mov    dh,0x20
  41cfa6:	ret    
  41cfa7:	cmc    
  41cfa8:	(bad)  
  41cfaa:	or     eax,0x7f9301
  41cfaf:	add    BYTE PTR [eax],al
  41cfb1:	add    BYTE PTR [ebx-0x37],bh
  41cfb4:	xor    bh,0xb2
  41cfb7:	(bad)  
  41cfb8:	jg     0x41cf87
  41cfba:	sbb    DWORD PTR [esp+esi*1-0x5b],0xc20e5978
  41cfc2:	pop    ecx
  41cfc3:	dec    ebx
  41cfc4:	add    DWORD PTR [eax],eax
  41cfc6:	hlt    
  41cfc7:	add    al,0x0
  41cfc9:	add    BYTE PTR [ebx],bh
  41cfcb:	ficomp WORD PTR [edx]
  41cfcd:	add    eax,0xcd82987a
  41cfd2:	inc    edx
  41cfd3:	cdq    
  41cfd4:	mov    esp,0x90626c65
  41cfd9:	test   BYTE PTR ds:0xf4ef5c3,ah
  41cfdf:	sub    dh,BYTE PTR [edi-0x56]
  41cfe2:	sbb    eax,0xf02ee9f1
  41cfe7:	in     eax,dx
  41cfe8:	adc    DWORD PTR [edi+eiz*4],esi
  41cfeb:	test   DWORD PTR [edx-0x7f],edx
  41cfee:	cmp    eax,0xc0b47b0d
  41cff3:	ret    0xa846
  41cff6:	and    eax,0x263d1236
  41cffb:	jl     0x41d004
  41cffd:	dec    edi
  41cffe:	das    
  41cfff:	adc    al,0x17
  41d001:	jmp    0x6b380d94
  41d006:	imul   ebx,DWORD PTR [edi+0x3a],0xffffffb5
  41d00a:	fld    QWORD PTR [ebx+0x58]
  41d00d:	mov    cl,0x2d
  41d00f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d010:	mov    esp,0x58e31bd7
  41d015:	mov    ebp,0xb85a1466
  41d01a:	dec    edx
  41d01b:	add    eax,0x5807cf8a
  41d020:	xchg   ebp,eax
  41d021:	cmp    edi,edx
  41d023:	pop    ecx
  41d024:	in     al,0xbf
  41d026:	xchg   edi,eax
  41d027:	loope  0x41cfa9
  41d029:	mov    ah,0x3b
  41d02b:	adc    BYTE PTR [ebx+eiz*2+0x38],dh
  41d02f:	out    0x3,al
  41d031:	add    esi,ecx
  41d033:	repnz push 0x210f0ac4
  41d039:	adc    eax,0xc246bbd2
  41d03e:	(bad)  
  41d03f:	push   ebp
  41d040:	adc    bl,ah
  41d042:	je     0x41d023
  41d044:	adc    bl,BYTE PTR [edx+0x4a]
  41d047:	or     esi,ebp
  41d049:	cmp    edx,DWORD PTR [eax]
  41d04b:	dec    esp
  41d04c:	jne    0x41d033
  41d04e:	(bad)  
  41d04f:	xlat   BYTE PTR ds:[ebx]
  41d050:	adc    DWORD PTR [ebp+0x30],esp
  41d053:	je     0x41d0c1
  41d055:	fstp   TBYTE PTR [ebp+0x17]
  41d058:	adc    edx,DWORD PTR [edi]
  41d05a:	jno    0x41d03e
  41d05c:	pop    ecx
  41d05d:	inc    ebx
  41d05e:	arpl   WORD PTR [esi+ebx*4],sp
  41d061:	pop    edx
  41d062:	sar    DWORD PTR [ecx+0x622ece80],cl
  41d068:	pop    eax
  41d069:	jp     0x41d056
  41d06b:	adc    ebx,DWORD PTR [ecx]
  41d06d:	add    al,0xd1
  41d06f:	cli    
  41d070:	imul   ecx,esi,0xffffffa6
  41d073:	mov    ch,0x30
  41d075:	adc    DWORD PTR [esi+0x9],ebp
  41d078:	das    
  41d079:	repnz clc 
  41d07b:	sbb    DWORD PTR [esp+ebp*4+0x7],ebx
  41d07f:	cmp    esp,DWORD PTR [edx]
  41d081:	jne    0x41d0ee
  41d083:	and    edx,DWORD PTR [eax+0x235ff0eb]
  41d089:	loope  0x41d0b8
  41d08b:	jae    0x41d0f2
  41d08d:	xor    bl,ch
  41d08f:	mov    bl,0x18
  41d091:	cmp    DWORD PTR [edx+ecx*8-0x1134c318],esi
  41d098:	mov    bh,0x86
  41d09a:	mov    ecx,0x824448c0
  41d09f:	addr16 pop ecx
  41d0a1:	pushf  
  41d0a2:	xchg   edi,eax
  41d0a3:	lods   eax,DWORD PTR ds:[esi]
  41d0a5:	jae    0x7b58d18b
  41d0ab:	pop    ebp
  41d0ac:	dec    edx
  41d0ad:	fdiv   DWORD PTR [ecx]
  41d0af:	call   0xccf0:0x90d39e88
  41d0b6:	loop   0x41d04d
  41d0b8:	enter  0x9ad5,0x49
  41d0bc:	xchg   esp,eax
  41d0bd:	imul   edx,edi,0xffffffa4
  41d0c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0c1:	je     0x41d0df
  41d0c3:	imul   DWORD PTR [eax]
  41d0c5:	rcl    dh,cl
  41d0c7:	lahf   
  41d0c8:	pop    ebx
  41d0c9:	jae    0x41d120
  41d0cb:	xor    al,0xc9
  41d0cd:	mov    esp,0xd3be35e3
  41d0d2:	cs dec ebp
  41d0d4:	aam    0x75
  41d0d6:	or     esp,esp
  41d0d8:	iret   
  41d0d9:	push   0x6d
  41d0db:	mov    esi,0xb7edb043
  41d0e0:	mov    esi,0x3fb1bdfd
  41d0e5:	aaa    
  41d0e6:	sub    edi,edi
  41d0e8:	jbe    0x41d0c9
  41d0ea:	out    dx,eax
  41d0eb:	inc    ecx
  41d0ec:	fsub   DWORD PTR [esi]
  41d0ee:	add    eax,0x393e7ff5
  41d0f3:	out    0x8c,al
  41d0f5:	mov    esi,0x29ce9752
  41d0fa:	das    
  41d0fb:	fucomip st,st(6)
  41d0fd:	je     0x41d0ad
  41d0ff:	and    edx,DWORD PTR [edi]
  41d101:	cmovb  ebx,DWORD PTR [ebx-0x2d0b0d56]
  41d108:	in     eax,0x8c
  41d10a:	nop
  41d10b:	arpl   WORD PTR [ecx],di
  41d10d:	ja     0x41d092
  41d10f:	push   edi
  41d110:	out    0x9f,al
  41d112:	inc    ebx
  41d113:	nop
  41d114:	in     al,0x6e
  41d116:	sbb    eax,0xf7d4944d
  41d11b:	aam    0xfd
  41d11d:	pop    ss
  41d11e:	mov    edi,es
  41d120:	out    0xd9,al
  41d122:	fstp   TBYTE PTR [esp+ebp*1]
  41d125:	mov    ds:0x11779f3f,eax
  41d12a:	(bad)  
  41d12b:	jmp    0x8fe0:0x66388d8d
  41d132:	popf   
  41d133:	out    0xf0,eax
  41d135:	jb     0x41d0e8
  41d137:	dec    ebp
  41d138:	jb     0x41d10e
  41d13a:	push   ecx
  41d13b:	xchg   BYTE PTR [ebx],ch
  41d13d:	mov    al,0x5f
  41d13f:	inc    edx
  41d140:	sbb    DWORD PTR [ecx],edx
  41d142:	jb     0x41d0f8
  41d144:	sub    edx,DWORD PTR [esi+0xfbf2eed]
  41d14a:	or     ch,0x38
  41d14d:	push   ecx
  41d14e:	enter  0xdf9c,0x60
  41d152:	pop    ecx
  41d153:	and    eax,DWORD PTR [edx+0x61]
  41d156:	cmp    bl,BYTE PTR [ebp+0x4e]
  41d159:	out    0x1d,eax
  41d15b:	dec    esi
  41d15c:	jecxz  0x41d128
  41d15e:	cli    
  41d15f:	pop    ds
  41d160:	mov    ds:0x169eadfa,eax
  41d165:	scas   eax,DWORD PTR es:[edi]
  41d166:	fwait
  41d167:	pop    ds
  41d168:	loop   0x41d16e
  41d16a:	fadd   DWORD PTR [edi-0x80]
  41d16d:	addr16 call 0x9c07:0x6702adfe
  41d175:	pop    esp
  41d176:	inc    edi
  41d177:	(bad)  
  41d179:	ja     0x41d1f4
  41d17b:	adc    al,0xc0
  41d17d:	sbb    al,0xc7
  41d17f:	lods   eax,DWORD PTR ds:[esi]
  41d180:	cs (bad) 
  41d184:	fcomp  QWORD PTR [ecx-0x48a73845]
  41d18a:	data16 fst DWORD PTR [edx+ebx*8+0x0]
  41d18f:	rcr    DWORD PTR [esi],0x93
  41d192:	in     eax,0xc6
  41d194:	js     0x41d14b
  41d196:	ins    BYTE PTR es:[edi],dx
  41d197:	jnp    0x41d16f
  41d199:	repnz pop edi
  41d19b:	lahf   
  41d19c:	xor    DWORD PTR [edi+edx*4-0x1c],ebx
  41d1a0:	mov    dh,0x7b
  41d1a2:	add    eax,0x11d30e93
  41d1a7:	or     cl,BYTE PTR [ecx]
  41d1a9:	xor    ah,BYTE PTR [edi+ebx*4+0x3d]
  41d1ad:	arpl   WORD PTR [eax+0x2f],si
  41d1b0:	shl    DWORD PTR [edi+0x2],cl
  41d1b3:	jbe    0x41d1c9
  41d1b5:	inc    esp
  41d1b6:	cs int 0xa9
  41d1b9:	xor    bh,dh
  41d1bb:	aaa    
  41d1bc:	adc    BYTE PTR [ebx],0xa5
  41d1bf:	leave  
  41d1c0:	(bad)  
  41d1c1:	dec    edx
  41d1c2:	ins    BYTE PTR es:[edi],dx
  41d1c3:	iret   
  41d1c4:	dec    ecx
  41d1c5:	pop    ecx
  41d1c6:	sbb    eax,0xb2585fcb
  41d1cb:	aam    0x69
  41d1cd:	cmp    eax,0x85364e3b
  41d1d2:	dec    eax
  41d1d3:	lods   al,BYTE PTR ds:[esi]
  41d1d4:	sub    ax,0x8729
  41d1d8:	push   cs
  41d1d9:	aad    0xd9
  41d1db:	pusha  
  41d1dc:	test   BYTE PTR [eax*4+0x7634f17d],al
  41d1e3:	sub    eax,0xcd25e0ab
  41d1e8:	fist   WORD PTR [edi-0x405d20a0]
  41d1ee:	int    0x3f
  41d1f0:	ficomp WORD PTR [edi+eiz*4]
  41d1f3:	aaa    
  41d1f4:	push   ss
  41d1f5:	push   ecx
  41d1f6:	pop    ds
  41d1f7:	cmp    edi,DWORD PTR [esi-0x80]
  41d1fa:	stos   DWORD PTR es:[edi],eax
  41d1fb:	jmp    0x81fbf68f
  41d200:	loope  0x41d25d
  41d202:	fadd   QWORD PTR [ecx]
  41d204:	push   esi
  41d205:	sbb    BYTE PTR [esp+ebx*1],bl
  41d208:	xlat   BYTE PTR ds:[ebx]
  41d209:	jne    0x41d1d8
  41d20b:	inc    esi
  41d20c:	xchg   edi,eax
  41d20d:	(bad)  
  41d20e:	sub    eax,0x5f0061c7
  41d213:	lds    edi,FWORD PTR [eax]
  41d215:	and    eax,0xbcd68284
  41d21a:	inc    esp
  41d21b:	pop    ebx
  41d21c:	sub    DWORD PTR [esi],ebp
  41d21e:	mov    BYTE PTR [ebx+0x4a],dl
  41d221:	pop    esi
  41d222:	mov    edi,0xa3ada7cb
  41d227:	mov    al,ds:0x3cac188e
  41d22c:	ror    BYTE PTR [edx],cl
  41d22e:	adc    eax,0xed160799
  41d233:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d234:	add    ebx,DWORD PTR [ecx-0x16]
  41d237:	mov    ch,0xc7
  41d239:	rcl    DWORD PTR ds:[edx-0x6c],1
  41d23d:	daa    
  41d23e:	or     cl,ah
  41d240:	add    al,0xce
  41d242:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d243:	jp     0x41d1d3
  41d245:	mov    edx,0xa7e5880
  41d24a:	push   ebp
  41d24b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d24c:	mov    al,ds:0x35c6f7a2
  41d251:	cmp    esi,edi
  41d253:	outs   dx,DWORD PTR ds:[esi]
  41d254:	jae    0x41d2c3
  41d256:	or     ch,cl
  41d258:	mov    eax,ds:0xc8914e74
  41d25d:	ret    
  41d25e:	inc    ebx
  41d25f:	pop    edi
  41d260:	inc    ebp
  41d261:	popa   
  41d262:	in     eax,dx
  41d263:	jl     0x41d26b
  41d265:	and    eax,DWORD PTR [ebx]
  41d267:	or     eax,0x57245aed
  41d26c:	xchg   esp,eax
  41d26d:	mov    ds:0xb70385b2,al
  41d272:	mov    ds:0x13f920e1,eax
  41d277:	xchg   esp,eax
  41d278:	inc    esp
  41d279:	clc    
  41d27a:	add    ecx,ebx
  41d27c:	pop    es
  41d27d:	push   edi
  41d27e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d27f:	sub    al,0xf1
  41d281:	mov    ch,0xa0
  41d283:	dec    ecx
  41d284:	(bad)  
  41d285:	jmp    0x41d26d
  41d287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d288:	or     DWORD PTR [edx-0x23b54913],eax
  41d28e:	adc    cl,BYTE PTR [ecx-0x7c]
  41d291:	dec    esi
  41d292:	sbb    al,0xb9
  41d294:	sub    DWORD PTR gs:[esi+ebx*2],0x27ce0f51
  41d29c:	loopne 0x41d223
  41d29e:	ror    BYTE PTR [eax+edi*1-0x4d51d321],cl
  41d2a5:	shr    al,cl
  41d2a7:	or     DWORD PTR [edx-0x3feccfc1],ecx
  41d2ad:	cmp    al,BYTE PTR [esi]
  41d2af:	ds xchg ebx,eax
  41d2b1:	and    esp,esi
  41d2b3:	sbb    DWORD PTR [ecx+0xa9c122e],esi
  41d2b9:	imul   edx,DWORD PTR [edi],0xaf9bcb70
  41d2bf:	mov    dl,0xb4
  41d2c1:	add    eax,0x8ae6f613
  41d2c6:	sub    BYTE PTR [edi],dh
  41d2c8:	xchg   edi,eax
  41d2c9:	inc    edi
  41d2ca:	mov    edx,0xbb8a0319
  41d2cf:	(bad)  
  41d2d0:	cmp    edx,ebp
  41d2d2:	mov    al,0xfa
  41d2d4:	push   eax
  41d2d5:	sahf   
  41d2d6:	out    dx,al
  41d2d7:	sub    ecx,DWORD PTR [ebp+0x11]
  41d2da:	jo     0x41d309
  41d2dc:	out    dx,eax
  41d2dd:	lock lea ebx,ds:0xe927e6e3
  41d2e4:	xor    esp,DWORD PTR [edi+0x78]
  41d2e7:	push   0xc926c021
  41d2ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2ed:	shl    BYTE PTR [eax+0x68a7cadd],cl
  41d2f3:	stc    
  41d2f4:	push   0xfdc9b6f1
  41d2f9:	inc    ebp
  41d2fa:	xor    BYTE PTR [edi],bl
  41d2fc:	pushf  
  41d2fd:	out    dx,eax
  41d2fe:	repz pop esp
  41d300:	xchg   esp,eax
  41d301:	inc    esi
  41d302:	or     eax,0x618b37bd
  41d307:	xchg   esi,eax
  41d308:	pop    ss
  41d309:	dec    esp
  41d30a:	cmp    esi,ecx
  41d30c:	lea    eax,[eax+0x41]
  41d30f:	adc    BYTE PTR [eax-0x32128e5a],bl
  41d315:	pop    ebx
  41d316:	cwde   
  41d317:	aam    0x7f
  41d319:	dec    ebp
  41d31a:	and    BYTE PTR [esi+0x6918249b],0x5b
  41d321:	xchg   ecx,eax
  41d322:	mov    ebx,0x8a4ebfb3
  41d327:	sbb    eax,0x2a1d0f44
  41d32c:	inc    edx
  41d32d:	or     BYTE PTR [ebx-0x4e],bh
  41d330:	cmc    
  41d331:	sub    esi,esp
  41d333:	pop    ds
  41d334:	jmp    0xf8f8:0xe02a567d
  41d33b:	adc    al,0x38
  41d33d:	data16 je 0x41d37f
  41d340:	imul   ebx,DWORD PTR [eax-0x6b358fba],0x3f13c34a
  41d34a:	cmc    
  41d34b:	ds or  eax,0x79e73712
  41d351:	sbb    eax,0xf5e01c13
  41d356:	dec    esp
  41d357:	jle    0x41d2ea
  41d359:	jg     0x41d317
  41d35b:	sbb    DWORD PTR [ecx+ebp*2-0x7b6b4dbd],ebx
  41d362:	mov    eax,0x9fd6c8ac
  41d367:	stos   DWORD PTR es:[edi],eax
  41d368:	push   edx
  41d369:	add    BYTE PTR ds:0x3b2e2c3e,ah
  41d36f:	mov    ch,0x2d
  41d371:	lea    eax,[ecx]
  41d373:	popa   
  41d374:	and    BYTE PTR [edx-0x69f8cbc],ah
  41d37a:	xchg   edx,eax
  41d37b:	inc    ebp
  41d37c:	adc    ch,BYTE PTR [edx-0x10e2d704]
  41d382:	add    DWORD PTR [edx],edi
  41d384:	add    edi,DWORD PTR [esi+0x25d828a8]
  41d38a:	enter  0x60a5,0x74
  41d38e:	pop    ebx
  41d38f:	sbb    ebx,DWORD PTR ds:0xd98b1d71
  41d395:	loopne 0x41d35e
  41d397:	and    DWORD PTR [ecx-0x5978ae3f],ecx
  41d39d:	mov    ah,0x3b
  41d39f:	and    ch,BYTE PTR [ecx]
  41d3a1:	add    bh,BYTE PTR [edx-0x32]
  41d3a4:	fild   DWORD PTR [eax-0x14053e55]
  41d3aa:	mov    dh,0xff
  41d3ac:	adc    eax,DWORD PTR [eax+0x1]
  41d3af:	sub    al,0x9
  41d3b1:	mov    dl,0x9d
  41d3b3:	mov    bl,0x33
  41d3b5:	mov    ah,0x1b
  41d3b7:	pop    ebx
  41d3b8:	fs hlt 
  41d3ba:	test   eax,0xfddffcc5
  41d3bf:	or     ebp,ecx
  41d3c1:	sub    eax,0xcf2a867b
  41d3c6:	jmp    0xa9d:0x389c00e7
  41d3cd:	cmp    esi,DWORD PTR [ebx-0x6139d926]
  41d3d3:	add    cl,0x65
  41d3d6:	pop    ebp
  41d3d7:	mov    ds:0x9b68c072,eax
  41d3dc:	scas   eax,DWORD PTR es:[edi]
  41d3dd:	and    al,0xd5
  41d3df:	xchg   edi,eax
  41d3e0:	retf   0xc3c4
  41d3e3:	adc    al,0x40
  41d3e5:	repz or DWORD PTR [edi],ecx
  41d3e8:	outs   dx,BYTE PTR ds:[esi]
  41d3e9:	xchg   ecx,eax
  41d3ea:	mov    bh,0xf2
  41d3ec:	mov    edi,0xb0315c75
  41d3f1:	outs   dx,BYTE PTR ds:[esi]
  41d3f2:	repnz mov edx,0x4f9a7c47
  41d3f8:	mov    eax,ds:0x3bbb5d5e
  41d3fd:	inc    ebp
  41d3fe:	test   DWORD PTR [edi+0x60c563f3],ebp
  41d404:	add    DWORD PTR [ecx],edx
  41d406:	push   ebp
  41d407:	pop    eax
  41d408:	shl    BYTE PTR [esp+ebp*4+0x71],1
  41d40c:	push   ebp
  41d40d:	dec    ebp
  41d40e:	jl     0x41d40b
  41d410:	test   DWORD PTR [ebx],ebx
  41d412:	(bad)  
  41d413:	retf   
  41d414:	mov    esp,0x92ea0cca
  41d419:	shl    DWORD PTR [esi],0x6c
  41d41c:	retf   0x36ec
  41d41f:	lea    ebx,[esi]
  41d421:	pop    edx
  41d422:	mov    cl,al
  41d424:	pop    ebp
  41d425:	add    BYTE PTR [ecx],dh
  41d427:	ffree  st(7)
  41d429:	fsubr  QWORD PTR [edi+0x12]
  41d42c:	jg     0x41d45b
  41d42e:	add    al,0x32
  41d430:	ins    DWORD PTR es:[edi],dx
  41d431:	or     BYTE PTR [edx+0x6061831e],ah
  41d437:	aas    
  41d438:	imul   ecx,DWORD PTR [ecx],0x6
  41d43b:	sahf   
  41d43c:	push   0x30eba1e
  41d441:	push   ecx
  41d442:	cli    
  41d443:	fidivr WORD PTR [edx+0x6c200937]
  41d449:	mov    ah,0xa1
  41d44b:	and    al,BYTE PTR [ebp+0x1e07adc7]
  41d451:	mov    dl,0x39
  41d453:	mov    DWORD PTR [edx+0x4c119074],edi
  41d459:	and    esp,DWORD PTR [edx]
  41d45b:	es stc 
  41d45d:	push   es
  41d45e:	dec    ebp
  41d45f:	imul   esi,DWORD PTR [ebp+eiz*8+0x4ab31db2],0xcb661502
  41d46a:	pop    ebp
  41d46b:	push   edx
  41d46c:	sar    ch,0x92
  41d46f:	cdq    
  41d470:	aaa    
  41d471:	es mov ebp,0xb8633ee4
  41d477:	(bad)  
  41d478:	div    BYTE PTR [ecx-0x6e29418f]
  41d47e:	stos   BYTE PTR es:[edi],al
  41d47f:	jnp    0x41d4f9
  41d481:	popf   
  41d482:	jge    0x41d453
  41d484:	popa   
  41d485:	cmc    
  41d486:	and    bl,BYTE PTR [edi]
  41d488:	jle    0x41d42b
  41d48a:	shr    DWORD PTR [eax+0x428edd1b],cl
  41d490:	mov    ecx,0x60e29e5f
  41d495:	scas   al,BYTE PTR es:[edi]
  41d496:	in     al,dx
  41d497:	pop    eax
  41d498:	pop    edx
  41d499:	cli    
  41d49a:	ficomp WORD PTR [ebx+0x7f]
  41d49d:	mov    ch,BYTE PTR [ebx]
  41d49f:	sub    eax,0xeb4cc5f
  41d4a4:	call   0xd73b50ad
  41d4a9:	jno    0x41d47c
  41d4ab:	xlat   BYTE PTR ds:[ebx]
  41d4ac:	ins    DWORD PTR es:[edi],dx
  41d4ad:	dec    ecx
  41d4ae:	fwait
  41d4af:	jg     0x41d4b0
  41d4b1:	push   esp
  41d4b2:	into   
  41d4b3:	and    ebp,ebp
  41d4b5:	aaa    
  41d4b6:	nop
  41d4b7:	sbb    edx,DWORD PTR [edi]
  41d4b9:	add    eax,0xec440677
  41d4be:	add    BYTE PTR [eax],al
  41d4c0:	add    BYTE PTR [eax],al
  41d4c2:	loop   0x41d4ce
  41d4c4:	add    DWORD PTR [ecx+0x7bf29be9],edx
  41d4ca:	mov    ebp,0x485ff411
  41d4cf:	pop    ss
  41d4d0:	and    ch,BYTE PTR [ebx+0x1504d]
  41d4d6:	hlt    
  41d4d7:	add    al,0x0
  41d4d9:	add    ch,bl
  41d4db:	aam    0x8c
  41d4dd:	jae    0x41d4a8
  41d4df:	jns    0x41d53b
  41d4e1:	cs push esi
  41d4e3:	add    eax,0x25dc89fc
  41d4e8:	shl    BYTE PTR [ecx+0x7a194e19],cl
  41d4ee:	lea    ebp,[edx-0x14]
  41d4f1:	xchg   ecx,eax
  41d4f2:	test   BYTE PTR [ebx],cl
  41d4f4:	loopne 0x41d53d
  41d4f6:	outs   dx,DWORD PTR ds:[esi]
  41d4f7:	test   al,0xc5
  41d4f9:	inc    eax
  41d4fa:	repnz push ds
  41d4fc:	mov    esi,0x66221605
  41d501:	dec    ecx
  41d502:	arpl   bx,dx
  41d504:	cmp    edi,edi
  41d506:	dec    ebp
  41d507:	mov    ?,edx
  41d509:	shl    bh,1
  41d50b:	and    bh,BYTE PTR [eax]
  41d50d:	xchg   BYTE PTR [edi],dh
  41d50f:	test   BYTE PTR [edx+0x2f],al
  41d512:	jge    0x41d54d
  41d514:	mov    esi,0xce086e58
  41d519:	mov    bh,0x4f
  41d51b:	mov    DWORD PTR [esi-0x685903cd],edx
  41d521:	xor    ch,BYTE PTR [ebx-0x5ea5aad7]
  41d527:	les    edx,FWORD PTR [esi+0x45680e62]
  41d52d:	xor    dl,BYTE PTR [esi+edx*4]
  41d530:	add    cl,bh
  41d532:	pop    ss
  41d533:	mov    edx,0x83e162fc
  41d538:	pop    es
  41d539:	fidiv  DWORD PTR [edx+0x5e188715]
  41d53f:	gs or  esp,ebp
  41d542:	mov    esi,0xa444c080
  41d547:	mov    ds,WORD PTR [edx+eiz*1-0x4b]
  41d54b:	sbb    DWORD PTR [ebp+0x3f5238a4],0xfffffff0
  41d552:	pushf  
  41d553:	mov    edi,0x62d4f821
  41d558:	and    BYTE PTR [edi+0x31],cl
  41d55b:	test   eax,0xc5bdf859
  41d560:	mov    bh,0x1c
  41d562:	inc    ebp
  41d563:	adc    ecx,esp
  41d565:	adc    eax,0x1741c06
  41d56a:	mov    bl,0x32
  41d56c:	out    dx,eax
  41d56d:	cmp    DWORD PTR [ecx+0x5c],ebp
  41d570:	cmp    DWORD PTR [ecx+0x5a1dab6b],ebp
  41d576:	ret    
  41d577:	sub    al,0x9f
  41d579:	clc    
  41d57a:	daa    
  41d57b:	in     eax,dx
  41d57c:	or     ah,BYTE PTR [edi+0x61b108d4]
  41d582:	mov    edx,0x882d4c3b
  41d587:	push   esi
  41d588:	jno    0x41d5ac
  41d58a:	fld    QWORD PTR [edx-0x4f72877e]
  41d590:	sbb    BYTE PTR [esi-0x2a37557],bl
  41d596:	das    
  41d597:	icebp  
  41d598:	mov    al,ds:0xb754c130
  41d59d:	push   esi
  41d59e:	(bad)  [eax]
  41d5a0:	add    esp,DWORD PTR [ebp+0x38621ab3]
  41d5a6:	sbb    eax,0xdef6bf30
  41d5ab:	in     al,dx
  41d5ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5ad:	sub    DWORD PTR [esi+0xb],esp
  41d5b0:	mov    ebx,ebx
  41d5b2:	cdq    
  41d5b3:	std    
  41d5b4:	out    0x26,al
  41d5b6:	and    bh,BYTE PTR ds:0xca1d023c
  41d5bc:	mov    eax,ds:0xa2b42782
  41d5c1:	fs jge 0x41d55b
  41d5c4:	jbe    0x41d621
  41d5c6:	cmp    ah,BYTE PTR [ebx]
  41d5c8:	add    eax,0xbba8c773
  41d5cd:	adc    edx,DWORD PTR ds:[ebp+0x35]
  41d5d1:	jno    0x41d596
  41d5d3:	dec    eax
  41d5d4:	fistp  QWORD PTR [eax+ebx*4+0x55256309]
  41d5db:	imul   edx,eax,0x36afc408
  41d5e1:	mov    eax,0x1c187687
  41d5e6:	pop    ebx
  41d5e7:	adc    BYTE PTR [ebx-0x133952bb],dh
  41d5ed:	js     0x41d5fd
  41d5ef:	mov    esi,0x639ffcc
  41d5f4:	ror    DWORD PTR [esi+ecx*4],1
  41d5f7:	adc    edx,DWORD PTR [ebp+0x58cfdccd]
  41d5fd:	xchg   ebp,eax
  41d5fe:	aam    0x25
  41d600:	jnp    0x41d5fd
  41d602:	sub    esp,DWORD PTR ds:0xc837361
  41d608:	adc    eax,0xca386abc
  41d60d:	and    esi,0x66
  41d610:	sahf   
  41d611:	test   al,0x40
  41d613:	cmp    ebx,esi
  41d615:	ret    0x7c5f
  41d618:	ins    DWORD PTR es:[edi],dx
  41d619:	push   0xffffff87
  41d61b:	outs   dx,DWORD PTR ds:[esi]
  41d61c:	jb     0x41d623
  41d61e:	repnz sar DWORD PTR [ecx+0x74a38fd2],1
  41d625:	repz ret 
  41d627:	cmp    cl,BYTE PTR [ecx]
  41d629:	mul    BYTE PTR [eax]
  41d62b:	leave  
  41d62c:	sahf   
  41d62d:	in     eax,0x1f
  41d62f:	fiadd  DWORD PTR [edx+0xc]
  41d632:	push   ebp
  41d633:	pop    ds
  41d634:	jmp    0x41d6a0
  41d636:	leave  
  41d637:	jmp    0x49c9b3c8
  41d63c:	xchg   BYTE PTR [ecx-0x20],dh
  41d63f:	test   WORD PTR [edi],0xeca3
  41d644:	cli    
  41d645:	out    0x10,eax
  41d647:	add    al,0x2e
  41d649:	adc    ebx,DWORD PTR [ecx-0x7bcbd0be]
  41d64f:	push   eax
  41d650:	adc    ah,dl
  41d652:	sub    bl,ah
  41d654:	clc    
  41d655:	jg     0x41d651
  41d657:	add    eax,0xebdd9676
  41d65c:	repnz or edi,eax
  41d65f:	dec    ebp
  41d660:	mov    esi,0x8a984c9a
  41d665:	or     al,0xa1
  41d667:	xchg   edi,eax
  41d668:	mov    ebx,0x1baeee00
  41d66d:	mov    esp,0x585318b7
  41d672:	xchg   BYTE PTR [ecx],dl
  41d674:	xor    DWORD PTR [ecx-0xdbd9d39],0xba885735
  41d67e:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41d680:	mov    edx,0xcac1a09c
  41d685:	inc    eax
  41d686:	or     eax,0xa4198da2
  41d68b:	inc    esi
  41d68c:	jmp    0xdd34d754
  41d691:	into   
  41d692:	les    edi,FWORD PTR [edi-0x64]
  41d695:	xor    BYTE PTR [eax+0x19],dl
  41d698:	dec    edi
  41d699:	stos   DWORD PTR es:[edi],eax
  41d69a:	fld    DWORD PTR [edi+0x39d550cc]
  41d6a0:	ja     0x41d6d3
  41d6a2:	cli    
  41d6a3:	xor    DWORD PTR [esi],edi
  41d6a5:	test   BYTE PTR [edx+0x7ac77323],bh
  41d6ab:	cwde   
  41d6ac:	stos   DWORD PTR es:[edi],eax
  41d6ad:	push   ds
  41d6ae:	mov    dl,0x89
  41d6b0:	mov    edi,0xeaa4f8d3
  41d6b5:	mov    edx,0x31f7002c
  41d6ba:	(bad)  
  41d6bb:	lea    esi,[eax]
  41d6bd:	nop
  41d6be:	pushf  
  41d6bf:	pop    eax
  41d6c0:	fiadd  DWORD PTR [edi-0x47]
  41d6c3:	loopne 0x41d64a
  41d6c5:	push   edi
  41d6c6:	stc    
  41d6c7:	dec    DWORD PTR ss:[ecx+0x56b6be92]
  41d6ce:	and    dl,dl
  41d6d0:	(bad)  
  41d6d1:	int    0xfe
  41d6d3:	mov    edi,0xdab5b90d
  41d6d8:	addr16 inc eax
  41d6da:	push   ebp
  41d6dc:	fcomp  QWORD PTR [ebp-0x4f274af1]
  41d6e2:	xchg   dl,cl
  41d6e4:	test   al,0x81
  41d6e6:	pushf  
  41d6e7:	xchg   bh,al
  41d6e9:	(bad)  
  41d6ea:	cmp    eax,ebp
  41d6ec:	call   0xf7f8:0x3a5a2aaa
  41d6f3:	out    0x9c,al
  41d6f5:	push   es
  41d6f6:	mov    ah,0xd2
  41d6f8:	xor    eax,0xdc790584
  41d6fd:	cs je  0x41d6ac
  41d700:	int3   
  41d701:	mov    ah,0x1f
  41d703:	mov    ebx,DWORD PTR [ebx-0x5a]
  41d706:	arpl   sp,di
  41d708:	sbb    ah,BYTE PTR [ebp-0x23]
  41d70b:	and    DWORD PTR [edi+0x24],esi
  41d70e:	dec    ebx
  41d70f:	sti    
  41d710:	shr    BYTE PTR [ebp-0x529909de],1
  41d716:	mov    ebp,0xab1472e2
  41d71b:	ret    0xfa76
  41d71e:	dec    edi
  41d71f:	(bad)
  41d722:	add    BYTE PTR fs:[eax+0x0],ch
  41d726:	rcl    BYTE PTR ds:0x1599c508,1
  41d72c:	sub    eax,0xc6533802
  41d731:	pop    ebp
  41d732:	test   al,0xa2
  41d734:	retf   0x187d
  41d737:	std    
  41d738:	stos   BYTE PTR es:[edi],al
  41d739:	or     eax,DWORD PTR [ebp+0x42]
  41d73c:	test   eax,0x77e896e3
  41d741:	rcl    BYTE PTR [edi],cl
  41d743:	or     DWORD PTR [esi+esi*2-0x42c2d14b],ecx
  41d74a:	dec    ebx
  41d74b:	sbb    eax,0xe9f663fb
  41d750:	jg     0x41d7bd
  41d752:	fist   DWORD PTR [ebx-0xaa218d8]
  41d758:	xchg   esi,eax
  41d759:	mov    esi,ds
  41d75b:	outs   dx,BYTE PTR ds:[esi]
  41d75c:	in     eax,dx
  41d75d:	adc    ecx,DWORD PTR [ebp-0x3f]
  41d760:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d761:	(bad)
  41d765:	dec    DWORD PTR [ebx+ebx*2+0x799723f2]
  41d76c:	hlt    
  41d76d:	icebp  
  41d76e:	xor    DWORD PTR ds:0x3d05ff8f,ebp
  41d774:	mov    esi,0x809da64a
  41d779:	dec    edi
  41d77a:	fidiv  WORD PTR [ebp-0x1b]
  41d77d:	leave  
  41d77e:	jg     0x41d7f4
  41d780:	aad    0x1b
  41d782:	fmulp  st(5),st
  41d784:	push   eax
  41d785:	add    eax,0xc5288192
  41d78a:	xchg   edx,eax
  41d78b:	mov    ebx,0x5aaf7308
  41d790:	sub    ebp,edi
  41d792:	retf   
  41d793:	ds loope 0x41d755
  41d796:	test   BYTE PTR ds:0x7f861355,al
  41d79c:	fs xchg edi,eax
  41d79e:	ss dec edx
  41d7a0:	pop    esi
  41d7a1:	inc    esi
  41d7a2:	cld    
  41d7a3:	mov    esp,0xbfafb062
  41d7a8:	adc    BYTE PTR [eax+0x23],dh
  41d7ab:	stos   DWORD PTR es:[edi],eax
  41d7ac:	jg     0x41d828
  41d7ae:	popa   
  41d7af:	jo     0x41d7b7
  41d7b1:	cmc    
  41d7b2:	shl    DWORD PTR [ecx+0x1095a538],1
  41d7b8:	adc    BYTE PTR [edx+0x4c90336b],cl
  41d7be:	std    
  41d7bf:	sbb    eax,0xd2fa2f58
  41d7c4:	jno    0x41d7ba
  41d7c6:	xlat   BYTE PTR ds:[ebx]
  41d7c7:	mov    esp,ebp
  41d7c9:	prefetchw (bad)
  41d7ca:	or     eax,0x2cf594c9
  41d7cf:	cld    
  41d7d0:	retf   0xabd0
  41d7d3:	bound  ebp,QWORD PTR [ebx]
  41d7d5:	adc    al,0xdf
  41d7d7:	imul   edi,DWORD PTR ds:0xceb8a6c4,0xffffffa6
  41d7de:	xor    DWORD PTR [edx+ebx*4+0x66],esp
  41d7e2:	dec    ecx
  41d7e3:	pop    edi
  41d7e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7e5:	lahf   
  41d7e6:	push   edi
  41d7e7:	popf   
  41d7e8:	mov    bl,0x84
  41d7ea:	das    
  41d7eb:	sbb    ebx,esp
  41d7ed:	adc    eax,0xbacd4fb9
  41d7f2:	cmovo  esp,DWORD PTR [esp+ecx*8]
  41d7f6:	aas    
  41d7f7:	mov    dl,0x17
  41d7f9:	enter  0x86eb,0x60
  41d7fd:	push   cs
  41d7fe:	imul   ebx,eax,0x9b8e6a80
  41d804:	pop    eax
  41d805:	test   al,0x71
  41d807:	mov    ebx,0xd79c3d94
  41d80c:	outs   dx,DWORD PTR ds:[esi]
  41d80d:	inc    edi
  41d80e:	test   eax,0x5e5d69e0
  41d813:	add    cl,BYTE PTR [ecx+0x72777aea]
  41d819:	push   0xfffffff7
  41d81b:	push   edi
  41d81c:	adc    ecx,DWORD PTR [edi+eiz*1+0x535859b3]
  41d823:	rcl    esp,1
  41d825:	dec    ecx
  41d826:	xchg   ecx,eax
  41d827:	ret    0x58d5
  41d82a:	mov    esp,0xc12f3fb0
  41d82f:	inc    esi
  41d830:	loopne 0x41d7e4
  41d832:	and    dh,BYTE PTR [ecx+ebx*1]
  41d835:	xor    eax,0x8badf5a
  41d83a:	fisttp WORD PTR [ebx+0x3b]
  41d83d:	sub    ah,dh
  41d83f:	ins    BYTE PTR es:[edi],dx
  41d840:	cmp    DWORD PTR [esi],eax
  41d842:	sub    eax,DWORD PTR [eax]
  41d844:	das    
  41d845:	xor    DWORD PTR [edi+edx*8],0x76d86065
  41d84c:	test   eax,0x3f10c6ea
  41d851:	cwde   
  41d852:	xor    al,0xac
  41d854:	xchg   BYTE PTR [eax],cl
  41d856:	(bad)  
  41d858:	pop    ebx
  41d859:	pop    edx
  41d85a:	and    al,0xd3
  41d85c:	fdiv   st(6),st
  41d85e:	cmp    bh,BYTE PTR [eax+0x4a]
  41d861:	lds    eax,FWORD PTR [ecx]
  41d863:	mov    ebp,0x79c09a92
  41d868:	push   esp
  41d869:	mov    bl,0x59
  41d86b:	jb     0x41d831
  41d86d:	retf   
  41d86e:	test   dh,ch
  41d870:	adc    ecx,0x46
  41d873:	dec    BYTE PTR [esi+0x4b]
  41d876:	add    dl,BYTE PTR [esi+eiz*4+0x25]
  41d87a:	bnd js 0x41d8b8
  41d87d:	push   esp
  41d87e:	js     0x41d897
  41d880:	mov    eax,db0
  41d883:	outs   dx,DWORD PTR ds:[esi]
  41d884:	inc    ebp
  41d885:	leave  
  41d886:	jg     0x41d819
  41d888:	inc    esp
  41d889:	cmp    BYTE PTR [esi-0x28],bh
  41d88c:	jae    0x41d8e3
  41d88e:	sar    DWORD PTR [ebp+0x5f966329],cl
  41d894:	stc    
  41d895:	jmp    0x41d825
  41d897:	out    dx,al
  41d898:	scas   eax,DWORD PTR es:[edi]
  41d899:	and    al,0xb7
  41d89b:	push   cs
  41d89c:	xchg   ebx,eax
  41d89d:	mov    ?,eax
  41d89f:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8a1:	jnp    0x41d83b
  41d8a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8a4:	inc    ebx
  41d8a5:	inc    DWORD PTR [eax+eiz*4-0x31e9058]
  41d8ac:	(bad)  
  41d8ad:	out    0x2d,al
  41d8af:	outs   dx,DWORD PTR ds:[esi]
  41d8b0:	and    dl,bl
  41d8b2:	pushf  
  41d8b3:	mov    bl,BYTE PTR [esi]
  41d8b5:	sbb    bl,ch
  41d8b7:	and    BYTE PTR [ecx-0x647d180],ch
  41d8bd:	ficom  DWORD PTR ds:0xf62ef6ec
  41d8c3:	shl    DWORD PTR [ecx],cl
  41d8c5:	mov    al,0x27
  41d8c7:	jns    0x41d89c
  41d8c9:	push   cs
  41d8ca:	cmp    DWORD PTR [edi],esi
  41d8cc:	xor    eax,0x5fc8ca60
  41d8d1:	es inc eax
  41d8d3:	ds std 
  41d8d5:	mov    ecx,0xcc2b16ce
  41d8da:	mov    al,ds:0x79482ddd
  41d8df:	pop    edx
  41d8e0:	mov    eax,0xe7abed99
  41d8e5:	leave  
  41d8e6:	jle    0x41d8cd
  41d8e8:	mov    eax,ds:0x300db259
  41d8ed:	ja     0x41d94d
  41d8ef:	jnp    0x41d876
  41d8f1:	adc    ebx,DWORD PTR [ebx-0x4c7eb7a9]
  41d8f7:	(bad)  
  41d8f8:	call   0x96d4:0x76e08263
  41d8ff:	les    esp,FWORD PTR [edx]
  41d901:	push   ds
  41d902:	lods   eax,DWORD PTR ds:[esi]
  41d903:	dec    edi
  41d904:	jbe    0x41d985
  41d906:	inc    edi
  41d907:	out    0x5e,al
  41d909:	test   BYTE PTR [esi+0x15],ch
  41d90c:	test   BYTE PTR [esi+ebp*1],dh
  41d90f:	sbb    BYTE PTR [edi-0x6],cl
  41d912:	push   esi
  41d913:	inc    ebx
  41d914:	push   ds
  41d915:	loope  0x41d93f
  41d917:	mov    al,0xbd
  41d919:	dec    esp
  41d91a:	lock mov bh,BYTE PTR ds:0x7cfeb83b
  41d921:	ja     0x41d94a
  41d923:	lock sbb DWORD PTR [esi+ebp*1],esp
  41d927:	dec    ecx
  41d928:	and    ebx,DWORD PTR [eax]
  41d92a:	loop   0x41d970
  41d92c:	cmp    eax,0xd8f432c6
  41d931:	psubusb mm3,QWORD PTR [esi+0x70]
  41d935:	(bad)  
  41d936:	call   0x603eced0
  41d93b:	out    0x11,al
  41d93d:	xor    eax,0xc14eec22
  41d942:	out    0x1c,al
  41d944:	adc    eax,0x37cea288
  41d949:	ss scas eax,DWORD PTR es:[edi]
  41d94b:	mov    ds:0x30fe82fa,al
  41d950:	fsubr  DWORD PTR [edi-0x689d7168]
  41d956:	dec    esp
  41d957:	adc    BYTE PTR [ecx],0xd7
  41d95a:	jmp    0x41d8ee
  41d95c:	push   ds
  41d95d:	jb     0x41d969
  41d95f:	es cli 
  41d961:	int    0x93
  41d963:	stos   BYTE PTR es:[edi],al
  41d964:	xor    bh,dh
  41d966:	jb     0x41d9c3
  41d968:	mov    ecx,0xc5c2deba
  41d96d:	jae    0x41d9c4
  41d96f:	in     al,0x2a
  41d971:	mov    esp,0x4a4c985f
  41d976:	pop    ebx
  41d977:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d978:	dec    ecx
  41d979:	jo     0x41d921
  41d97b:	stc    
  41d97c:	add    al,0xbf
  41d97e:	test   BYTE PTR [edi+0xbb345d],bh
  41d984:	sub    eax,0x36d596b8
  41d989:	popa   
  41d98a:	mov    dl,BYTE PTR [edx+0x8e2a886]
  41d990:	inc    BYTE PTR [esi+ebx*8]
  41d993:	adc    ch,dl
  41d995:	pop    ebx
  41d996:	sub    al,0x4f
  41d998:	mov    cl,0xe2
  41d99a:	push   ecx
  41d99b:	jp     0x41d922
  41d99d:	cmp    eax,0xfba440d
  41d9a2:	sub    DWORD PTR [edx+0x6e],esp
  41d9a5:	add    DWORD PTR [esi+eax*2-0x18],0xffffffe2
  41d9aa:	fistp  QWORD PTR [ebx-0x3c]
  41d9ae:	jmp    0x41da1d
  41d9b0:	sub    BYTE PTR [ecx+0xc],ah
  41d9b3:	pop    edx
  41d9b4:	and    al,0xab
  41d9b6:	and    DWORD PTR [esp+edi*4],eax
  41d9b9:	aad    0x93
  41d9bb:	mov    al,ds:0x3d5a21c7
  41d9c0:	dec    ebp
  41d9c1:	pusha  
  41d9c2:	mov    ds:0xa854a0ba,eax
  41d9c7:	pushf  
  41d9c8:	cmp    dh,BYTE PTR [edi]
  41d9ca:	inc    edi
  41d9cb:	jno    0x41da1e
  41d9cd:	and    al,BYTE PTR [eax]
  41d9cf:	add    BYTE PTR [eax],al
  41d9d1:	add    BYTE PTR [esi+0x5e],bl
  41d9d4:	loope  0x41da44
  41d9d6:	loope  0x41d9d7
  41d9d8:	fistp  QWORD PTR [esi-0x6e]
  41d9db:	adc    DWORD PTR [esi],0xa
  41d9de:	cld    
  41d9df:	leave  
  41d9e0:	jmp    0x41da21
  41d9e2:	inc    ecx
  41d9e3:	push   ebp
  41d9e4:	add    DWORD PTR [eax],eax
  41d9e6:	hlt    
  41d9e7:	add    al,0x0
  41d9e9:	add    BYTE PTR ds:0xa2e4c71a,dl
  41d9ef:	xor    edx,DWORD PTR [esi-0x313ec175]
  41d9f5:	inc    ebx
  41d9f6:	arpl   dx,sp
  41d9f8:	xlat   BYTE PTR ds:[ebx]
  41d9f9:	imul   ebx,DWORD PTR [esi+esi*2],0xffffffaa
  41d9fd:	aas    
  41d9fe:	int3   
  41d9ff:	push   ss
  41da00:	cwde   
  41da01:	outs   dx,BYTE PTR ds:[esi]
  41da02:	fdivrp st(7),st
  41da04:	jecxz  0x41d9f0
  41da06:	jmp    0x41da1d
  41da08:	mov    edx,0x840a953c
  41da0d:	lods   al,BYTE PTR ds:[esi]
  41da0e:	pop    eax
  41da0f:	sbb    dl,al
  41da11:	push   0x23
  41da13:	aas    
  41da14:	push   ds
  41da15:	sub    edx,ebx
  41da17:	add    BYTE PTR [esi-0x4b04b48f],ch
  41da1d:	aas    
  41da1e:	or     cl,bh
  41da20:	fstp   QWORD PTR ds:0xcd3bc030
  41da26:	sub    ah,dl
  41da28:	idiv   WORD PTR [ebx-0x42]
  41da2c:	aas    
  41da2d:	push   ds
  41da2e:	sub    ah,BYTE PTR [ebx+0x1a]
  41da31:	sbb    DWORD PTR fs:[esi+esi*8+0x55b95f59],eax
  41da39:	out    dx,al
  41da3a:	pop    ds
  41da3b:	or     al,0x9e
  41da3d:	(bad)  
  41da3e:	into   
  41da3f:	test   eax,0x55482a45
  41da44:	(bad)  
  41da45:	sub    eax,0x2752a764
  41da4a:	lahf   
  41da4b:	jp     0x41dacc
  41da4d:	fwait
  41da4e:	jns    0x41da92
  41da50:	mov    ds:0x719ee0cd,eax
  41da55:	jne    0x41da55
  41da57:	inc    ecx
  41da58:	hlt    
  41da59:	sti    
  41da5a:	cmp    DWORD PTR ds:0xabc5b9e1,eax
  41da61:	mov    edx,0x8492b897
  41da66:	sbb    al,BYTE PTR [ebp+0x31d66d42]
  41da6c:	mov    bh,0x0
  41da6e:	jge    0x41daee
  41da70:	cmp    ch,bh
  41da72:	(bad)  
  41da73:	cmp    dh,dh
  41da75:	ja     0x41da07
  41da77:	mov    esi,DWORD PTR [ebx+esi*8-0x6d984edc]
  41da7e:	mov    esi,0x7aa54a66
  41da83:	xor    al,0xb3
  41da85:	ins    DWORD PTR es:[edi],dx
  41da86:	dec    ecx
  41da87:	jl     0x41da18
  41da89:	mov    al,ds:0xbea89653
  41da8e:	pushf  
  41da8f:	cmc    
  41da90:	or     edi,DWORD PTR [ebx+0x71]
  41da93:	arpl   sp,bp
  41da95:	adc    eax,0xd9619148
  41da9a:	sahf   
  41da9b:	pop    eax
  41da9c:	iret   
  41da9d:	and    BYTE PTR [edx-0x233581fe],ch
  41daa3:	inc    esp
  41daa4:	mov    al,0x12
  41daa6:	add    eax,0x688b4bfa
  41daab:	and    bl,BYTE PTR [eax+0x12]
  41daae:	mov    ds:0xcbf8d1e0,al
  41dab3:	sbb    BYTE PTR es:[ebx],ah
  41dab6:	and    eax,0x7eb4feb
  41dabb:	jp     0x41da7a
  41dabd:	rcr    dh,1
  41dabf:	inc    edx
  41dac0:	sub    ch,BYTE PTR [eax+0x3a]
  41dac3:	rcl    BYTE PTR [eax-0x14b80b1],cl
  41dac9:	add    dh,dh
  41dacb:	out    dx,eax
  41dacc:	lds    esi,FWORD PTR [ecx]
  41dace:	add    BYTE PTR [edi-0x1ba195c8],cl
  41dad4:	jne    0x41daf9
  41dad6:	dec    ecx
  41dad7:	aam    0xa6
  41dad9:	adc    BYTE PTR [esi],dl
  41dadb:	mov    dh,dh
  41dadd:	std    
  41dade:	mov    cl,0x2a
  41dae0:	arpl   WORD PTR [edi+0x56bf052a],sp
  41dae6:	jle    0x41da6d
  41dae8:	inc    ebx
  41dae9:	sti    
  41daea:	mov    ebp,0xc872e770
  41daef:	or     eax,DWORD PTR [ecx-0x1f7ace0]
  41daf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41daf6:	mov    bh,0x60
  41daf8:	xchg   esi,eax
  41daf9:	in     eax,0xfc
  41dafb:	jne    0x41daab
  41dafd:	aas    
  41dafe:	jns    0x41da9b
  41db00:	scas   al,BYTE PTR es:[edi]
  41db01:	fwait
  41db02:	inc    eax
  41db03:	lods   al,BYTE PTR ds:[esi]
  41db04:	mov    ebp,ebx
  41db06:	lea    edx,[edi+0x46]
  41db09:	cmp    edx,0x9c309ffd
  41db0f:	sub    eax,DWORD PTR [esi+0x1030bec9]
  41db15:	xchg   ebx,eax
  41db16:	push   edi
  41db17:	add    DWORD PTR [edx+0x2734b499],ebx
  41db1d:	xor    DWORD PTR [ebp-0x50],esi
  41db20:	paddsw mm4,QWORD PTR [ecx+0x459e2595]
  41db27:	dec    ecx
  41db28:	cld    
  41db29:	or     ebx,DWORD PTR [edx+0x7a]
  41db2c:	sbb    eax,0xe1d30099
  41db31:	mov    dh,0xda
  41db33:	rcr    DWORD PTR [esi],0x7a
  41db36:	test   eax,0x9383d6f4
  41db3b:	sbb    esp,DWORD PTR [ebp+0x3d]
  41db3e:	pop    ecx
  41db3f:	test   eax,edi
  41db41:	xchg   ebx,eax
  41db42:	pop    es
  41db43:	call   0xcffd:0xba98efb8
  41db4a:	add    dl,BYTE PTR [edi+0x47]
  41db4d:	dec    ecx
  41db4e:	sbb    ch,cl
  41db50:	dec    esi
  41db51:	daa    
  41db52:	pop    esi
  41db53:	inc    ebp
  41db54:	add    bl,BYTE PTR ds:0x69abe311
  41db5a:	sub    edi,DWORD PTR [eax+0x64f6bc4c]
  41db60:	and    al,0xde
  41db62:	inc    ebp
  41db63:	sub    al,0x86
  41db65:	adc    ecx,ebp
  41db67:	iret   
  41db68:	mov    al,0xb8
  41db6a:	jle    0x41daf1
  41db6c:	pop    es
  41db6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db6e:	enter  0x49ee,0x58
  41db72:	cmp    DWORD PTR [edx-0x1aa21e40],ecx
  41db78:	scas   al,BYTE PTR es:[edi]
  41db79:	push   ebx
  41db7a:	sub    BYTE PTR [edx],ah
  41db7c:	xor    BYTE PTR [ecx],ch
  41db7e:	mov    esp,0x9c429799
  41db83:	mov    ah,0x6d
  41db85:	sub    al,0x9e
  41db87:	aaa    
  41db88:	dec    ebx
  41db89:	das    
  41db8a:	adc    edi,DWORD PTR [ecx-0x50e3b9b]
  41db90:	mov    edx,0xca12dc72
  41db95:	outs   dx,BYTE PTR ds:[esi]
  41db96:	test   al,0x55
  41db98:	cmp    bl,BYTE PTR ds:0xbf5600af
  41db9e:	sbb    eax,0xbc8fb372
  41dba3:	shl    DWORD PTR [ecx],0xcd
  41dba6:	adc    eax,0xd8291f9c
  41dbab:	jno    0x41db77
  41dbad:	adc    cl,BYTE PTR [edx+0x7a]
  41dbb0:	pop    ecx
  41dbb1:	retf   
  41dbb2:	pop    ecx
  41dbb3:	and    al,0x1e
  41dbb5:	xor    eax,eax
  41dbb7:	jne    0x41dc36
  41dbb9:	int3   
  41dbba:	mov    edx,0xaf1c04e7
  41dbbf:	mov    eax,ds:0x75126e88
  41dbc4:	nop
  41dbc5:	mov    eax,0x594bc517
  41dbca:	jmp    0xaaa9605f
  41dbcf:	in     eax,0x9c
  41dbd1:	jp     0x41dbb4
  41dbd3:	cdq    
  41dbd4:	aaa    
  41dbd5:	stos   DWORD PTR es:[edi],eax
  41dbd6:	adc    ebx,DWORD PTR [edi+0x5da83ef0]
  41dbdc:	add    ebx,esi
  41dbde:	gs jmp 0xf329a5a7
  41dbe4:	add    al,0xd9
  41dbe6:	jne    0x41dbc1
  41dbe8:	adc    ebx,DWORD PTR [esi-0x7e376543]
  41dbee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbef:	push   esi
  41dbf0:	in     eax,0xc6
  41dbf2:	push   cs
  41dbf3:	push   edx
  41dbf4:	mov    ch,0xe3
  41dbf6:	mov    DWORD PTR [ebx-0x12],eax
  41dbf9:	lea    ebp,[edx]
  41dbfb:	ins    BYTE PTR es:[edi],dx
  41dbfc:	gs add eax,0x8616cb23
  41dc02:	js     0x41dc16
  41dc04:	repz sbb BYTE PTR [ebp+0x26],ch
  41dc08:	mov    DWORD PTR ds:0xe5a0a019,esi
  41dc0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc0f:	imul   ecx,DWORD PTR [eiz*1-0xcb381c],0x68
  41dc17:	jbe    0x41dc7e
  41dc19:	(bad)  
  41dc1a:	(bad)  
  41dc1b:	mov    edx,0x4c6aa4ce
  41dc20:	stos   BYTE PTR es:[di],al
  41dc22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc23:	push   esi
  41dc24:	nop
  41dc25:	cmc    
  41dc26:	in     eax,dx
  41dc27:	imul   edi,eax,0x75
  41dc2a:	fnop   
  41dc2c:	pop    ebp
  41dc2d:	inc    edi
  41dc2e:	addr16 ret 
  41dc30:	push   ebp
  41dc31:	js     0x41dbca
  41dc33:	jnp    0x41dc87
  41dc35:	scas   eax,DWORD PTR es:[edi]
  41dc36:	cmp    DWORD PTR gs:[esi],esp
  41dc39:	enter  0x29fe,0xaf
  41dc3d:	out    0x1b,al
  41dc3f:	dec    edi
  41dc40:	adc    ah,BYTE PTR [eax]
  41dc42:	cmp    eax,eax
  41dc44:	cs pop ecx
  41dc46:	mov    esp,0x6aa70e71
  41dc4b:	call   0xa4ccbe48
  41dc50:	aas    
  41dc51:	pop    eax
  41dc52:	mov    esi,0x82442323
  41dc57:	test   DWORD PTR [ecx+0x33],edx
  41dc5a:	bswap  ecx
  41dc5c:	cld    
  41dc5d:	ret    0xd13
  41dc60:	rol    ecx,cl
  41dc62:	test   al,0xdf
  41dc64:	cdq    
  41dc65:	(bad)  
  41dc66:	shl    ah,0x1a
  41dc69:	aad    0xf7
  41dc6b:	loopne 0x41dbf1
  41dc6d:	in     eax,0x2
  41dc6f:	xchg   esp,eax
  41dc70:	and    ah,BYTE PTR [ebx+0x557de08b]
  41dc76:	test   BYTE PTR [ebx],0x9c
  41dc79:	psubd  mm5,QWORD PTR [edi+0x4552b0ac]
  41dc80:	pushf  
  41dc81:	fdivrp st(5),st
  41dc83:	mov    cl,0x9c
  41dc85:	xor    edx,esp
  41dc87:	or     esi,DWORD PTR [esi+0x58]
  41dc8a:	xor    dl,BYTE PTR [ecx]
  41dc8c:	sbb    al,cl
  41dc8e:	int3   
  41dc8f:	ins    BYTE PTR es:[edi],dx
  41dc90:	ret    0x2643
  41dc93:	push   ebx
  41dc94:	imul   DWORD PTR [ebp+0xb]
  41dc97:	adc    dl,BYTE PTR [ebp-0x468bb68c]
  41dc9d:	xor    BYTE PTR [edx],ah
  41dc9f:	loopne 0x41dcf9
  41dca1:	adc    BYTE PTR [esi-0x3b],cl
  41dca4:	or     eax,0xc28d51c5
  41dca9:	mov    ?,WORD PTR [ebp-0x6b]
  41dcac:	sub    ah,BYTE PTR [eax]
  41dcae:	and    ebp,DWORD PTR [edx+0x20]
  41dcb1:	jnp    0x41dd27
  41dcb3:	mov    ecx,0x3b273d5f
  41dcb8:	(bad)  
  41dcb9:	sbb    eax,0xcb6d12d8
  41dcbe:	mov    edx,esp
  41dcc0:	fsub   QWORD PTR ds:0x97aeaa73
  41dcc6:	sub    ah,0x65
  41dcc9:	add    ecx,DWORD PTR [ebp+0x56e4d101]
  41dccf:	xor    eax,0x925a23db
  41dcd4:	leave  
  41dcd5:	addr16 in al,dx
  41dcd7:	xor    esi,edx
  41dcd9:	sahf   
  41dcda:	fld    QWORD PTR [ecx]
  41dcdc:	push   0xffffffba
  41dcde:	mov    eax,0xda69ed65
  41dce3:	inc    edi
  41dce4:	shr    ecx,0x6
  41dce7:	add    edx,DWORD PTR [esi-0x28]
  41dcea:	xchg   BYTE PTR [ebx-0x2e],bh
  41dced:	push   ecx
  41dcee:	test   BYTE PTR [edi],dl
  41dcf0:	mov    ch,0x4
  41dcf2:	push   esi
  41dcf3:	repnz sub BYTE PTR [ecx],ah
  41dcf6:	jl     0x41dd61
  41dcf8:	repz test BYTE PTR [ecx-0x506c2301],cl
  41dcff:	or     esi,eax
  41dd01:	xchg   ebp,eax
  41dd02:	mov    edi,DWORD PTR [edx]
  41dd04:	(bad)  
  41dd05:	dec    esp
  41dd06:	dec    eax
  41dd07:	in     al,dx
  41dd08:	mov    ebx,0x8bc63806
  41dd0d:	dec    ecx
  41dd0e:	inc    esi
  41dd0f:	ror    BYTE PTR [esp+edi*8-0x3c0a714c],1
  41dd16:	test   al,0x96
  41dd18:	inc    ebx
  41dd19:	cli    
  41dd1a:	and    bl,BYTE PTR [eax+0x2f]
  41dd1d:	(bad)  
  41dd1f:	jg     0x41dd20
  41dd21:	lods   eax,DWORD PTR ds:[esi]
  41dd22:	xor    edx,DWORD PTR [eax-0x6e93d0a7]
  41dd28:	mov    ch,0xd8
  41dd2a:	int3   
  41dd2b:	or     eax,0x9768ea6d
  41dd30:	xchg   BYTE PTR [esi],dl
  41dd32:	xchg   ebp,eax
  41dd33:	pop    ebx
  41dd34:	xchg   ebp,eax
  41dd35:	sbb    DWORD PTR [ebx+edx*2+0x71c6c48],0x20657013
  41dd40:	je     0x41dd45
  41dd42:	xchg   esp,eax
  41dd43:	rol    esi,1
  41dd45:	mov    ch,0xc1
  41dd47:	arpl   WORD PTR [ecx+edi*8+0x55],bx
  41dd4b:	hlt    
  41dd4c:	adc    al,cl
  41dd4e:	sahf   
  41dd4f:	ins    BYTE PTR es:[edi],dx
  41dd50:	in     eax,0x2d
  41dd52:	or     DWORD PTR [edi+0x56],ecx
  41dd55:	jnp    0x41dd55
  41dd57:	pop    ds
  41dd58:	sub    dh,al
  41dd5a:	mov    edi,0xf90432bd
  41dd5f:	pop    esi
  41dd60:	push   ecx
  41dd61:	pop    ebx
  41dd62:	rcr    DWORD PTR ds:0xf7386750,cl
  41dd68:	fild   WORD PTR [eax+ebx*1-0x15]
  41dd6c:	adc    BYTE PTR [ebx+0x1859376a],ah
  41dd72:	jno    0x41dd60
  41dd74:	lock in al,0x19
  41dd77:	aas    
  41dd78:	pop    edi
  41dd79:	xchg   edi,eax
  41dd7a:	pop    ebp
  41dd7b:	push   ecx
  41dd7c:	jnp    0x41ddb1
  41dd7e:	stos   DWORD PTR es:[edi],eax
  41dd7f:	adc    edx,DWORD PTR [esi]
  41dd81:	jns    0x41dd80
  41dd83:	in     eax,0xe2
  41dd85:	and    al,0xbe
  41dd87:	(bad)  
  41dd88:	and    BYTE PTR ds:0xd3e962dd,ah
  41dd8e:	inc    esi
  41dd8f:	push   eax
  41dd90:	pop    ds
  41dd91:	adc    dl,BYTE PTR [edx]
  41dd93:	call   0xf525:0x32c5fd35
  41dd9a:	shl    DWORD PTR [eax],1
  41dd9c:	out    0x44,al
  41dd9e:	mov    bl,0x66
  41dda0:	or     DWORD PTR [ecx],edx
  41dda2:	xor    eax,0x29847a0a
  41dda7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dda8:	pop    ebx
  41dda9:	or     DWORD PTR [eax+0x7cac9b74],ebx
  41ddaf:	xor    dh,BYTE PTR [edx]
  41ddb1:	jge    0x41de22
  41ddb3:	jge    0x41ddda
  41ddb5:	scas   eax,DWORD PTR es:[edi]
  41ddb6:	fdiv   QWORD PTR [eax-0x7304fc7a]
  41ddbc:	in     al,dx
  41ddbd:	nop
  41ddbe:	adc    BYTE PTR [edi-0x40aa80fd],al
  41ddc4:	mov    esi,0xe8b468ef
  41ddc9:	adc    BYTE PTR [ebx+esi*8-0x7f],cl
  41ddcd:	in     al,dx
  41ddce:	pusha  
  41ddcf:	pushf  
  41ddd0:	lods   eax,DWORD PTR ds:[esi]
  41ddd1:	push   esi
  41ddd2:	cmp    al,0xd3
  41ddd4:	test   eax,0x56f4e6be
  41ddd9:	aad    0xdb
  41dddb:	icebp  
  41dddc:	adc    esp,DWORD PTR [ebp+0x6a]
  41dddf:	dec    eax
  41dde0:	repz add ecx,DWORD PTR ss:[ebx]
  41dde4:	das    
  41dde5:	dec    edi
  41dde6:	test   ebx,0x6bf3c83d
  41ddec:	stc    
  41dded:	sub    cl,BYTE PTR [edi+0x6eedd0e7]
  41ddf3:	mov    ebp,0x49e37559
  41ddf8:	sbb    al,0x5c
  41ddfa:	mov    WORD PTR [esi-0x22],ss
  41ddfd:	retf   0x84ee
  41de00:	lea    edx,[edx-0x2]
  41de03:	cmp    BYTE PTR [ebp+0x685d4745],ch
  41de09:	adc    dl,cl
  41de0b:	addr16 xchg ecx,eax
  41de0d:	sub    BYTE PTR [ecx],bh
  41de0f:	xchg   ecx,eax
  41de10:	mov    ecx,0xe9d081eb
  41de15:	mov    edi,0xe1dcaa9f
  41de1a:	mov    ds:0x8f7c8373,al
  41de1f:	(bad)  
  41de20:	ds mov edx,0xe394248f
  41de26:	hlt    
  41de27:	mov    ebp,0x38a43c66
  41de2c:	xchg   ecx,eax
  41de2d:	arpl   WORD PTR [eax+0xc],ax
  41de30:	jmp    0x41dde2
  41de32:	iret   
  41de33:	pop    ds
  41de34:	shl    BYTE PTR [bx+0x7d],0xae
  41de39:	sbb    bh,0x5b
  41de3c:	(bad)  
  41de3d:	sub    al,0xd0
  41de3f:	push   ebp
  41de40:	out    dx,al
  41de41:	test   eax,0x48ab9309
  41de46:	mov    esi,0x3398b98
  41de4b:	mov    ah,0x63
  41de4d:	and    al,0xfc
  41de4f:	pop    esi
  41de50:	jp     0x41de6f
  41de52:	pop    eax
  41de53:	into   
  41de54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de55:	out    0x72,eax
  41de57:	push   0xffffffdd
  41de59:	sub    ebx,esi
  41de5b:	loopne 0x41debe
  41de5d:	fs or  al,ah
  41de60:	inc    ebp
  41de61:	frstor [esi-0x7]
  41de64:	popa   
  41de65:	loopne 0x41de6f
  41de67:	adc    al,0xf2
  41de69:	jae    0x41de22
  41de6b:	add    al,0x96
  41de6d:	mov    DWORD PTR [ecx+0x3fd27b19],eax
  41de73:	mov    al,ds:0xeba2bcdc
  41de78:	sub    edx,DWORD PTR [ecx]
  41de7a:	inc    esp
  41de7b:	iret   
  41de7c:	popa   
  41de7d:	iret   
  41de7e:	sbb    ebp,DWORD PTR [esi]
  41de80:	jno    0x41deb4
  41de82:	pop    esp
  41de83:	adc    ecx,DWORD PTR [edx]
  41de85:	adc    eax,0xdecbcd30
  41de8a:	mov    cl,0xc9
  41de8c:	test   BYTE PTR [eax-0x7fc323d6],bh
  41de92:	or     al,0xf2
  41de94:	cs jb  0x41de44
  41de97:	adc    DWORD PTR [eax+ebx*8-0x66],edi
  41de9b:	in     al,0x81
  41de9d:	int3   
  41de9e:	scas   eax,DWORD PTR es:[edi]
  41de9f:	dec    eax
  41dea0:	or     edi,0xffffffe3
  41dea3:	fucom  st(1)
  41dea5:	mov    dl,0x2f
  41dea7:	rcr    BYTE PTR [edx],0x68
  41deaa:	push   es
  41deab:	hlt    
  41deac:	jg     0x41defb
  41deae:	mov    ds,WORD PTR [eax-0xa]
  41deb1:	adc    BYTE PTR [eax],cl
  41deb3:	cs faddp st(6),st
  41deb6:	lds    ebp,FWORD PTR [esi-0x65]
  41deb9:	xchg   ebx,eax
  41deba:	test   al,0xfb
  41debc:	pushf  
  41debd:	pop    esi
  41debe:	ins    DWORD PTR es:[edi],dx
  41debf:	mov    dh,0x88
  41dec1:	add    al,0xfa
  41dec3:	cmc    
  41dec4:	xchg   edi,eax
  41dec5:	sub    al,0x18
  41dec7:	ins    DWORD PTR es:[edi],dx
  41dec8:	(bad)
  41decc:	data16 (bad) 
  41decf:	push   ebp
  41ded0:	outs   dx,BYTE PTR ds:[esi]
  41ded1:	movlps xmm5,QWORD PTR [ecx+eax*8-0xbaf9a7a]
  41ded9:	and    ebx,ecx
  41dedb:	push   ss
  41dedc:	nop
  41dedd:	jmp    0x41dee2
  41dee2:	loope  0x41de68
  41dee4:	xchg   al,dh
  41dee6:	out    0xf2,eax
  41dee8:	not    DWORD PTR [ebp-0x25c4ffdf]
  41deee:	hlt    
  41deef:	dec    esi
  41def0:	ror    edx,0x35
  41def3:	pop    edx
  41def4:	add    DWORD PTR [eax],eax
  41def6:	hlt    
  41def7:	add    al,0x0
  41def9:	add    ah,bl
  41defb:	ret    
  41defc:	sub    al,0x70
  41defe:	adc    al,0x38
  41df00:	js     0x41df07
  41df02:	loopne 0x41df7f
  41df04:	pop    ebx
  41df05:	jbe    0x41de8e
  41df07:	inc    edi
  41df08:	and    BYTE PTR [eax+0x79],bh
  41df0b:	in     al,dx
  41df0c:	ret    
  41df0d:	sar    DWORD PTR [ecx-0x31],0xa2
  41df11:	jno    0x41df92
  41df13:	cwde   
  41df14:	retf   
  41df15:	dec    eax
  41df16:	rcr    BYTE PTR gs:[ebx+0x5f974319],0x24
  41df1e:	xchg   BYTE PTR [ebp+0x75548459],bh
  41df24:	or     DWORD PTR [esi],ebp
  41df26:	push   0xffffff98
  41df28:	and    bl,ch
  41df2a:	sbb    ebp,edi
  41df2c:	pop    es
  41df2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df2e:	jae    0x41df5f
  41df30:	fsubr  QWORD PTR [eax]
  41df32:	ds (bad) 
  41df34:	out    0x3c,eax
  41df36:	cmp    dl,dl
  41df38:	mov    cl,0xf7
  41df3a:	jge    0x41dede
  41df3c:	fidivr DWORD PTR es:[ecx-0x56ac2224]
  41df43:	cs jl  0x41df70
  41df46:	or     eax,ebx
  41df48:	pop    edx
  41df49:	in     eax,dx
  41df4a:	add    eax,0xa07e34b5
  41df4f:	mov    eax,0x72fd9447
  41df54:	adc    DWORD PTR [eax],esp
  41df56:	dec    ebx
  41df57:	int3   
  41df58:	mov    esi,ds
  41df5a:	inc    ebp
  41df5b:	ret    
  41df5c:	dec    ebx
  41df5d:	and    al,0x42
  41df5f:	(bad)  
  41df60:	into   
  41df61:	lds    ebx,FWORD PTR [edi+0x70485e39]
  41df67:	retfw  
  41df69:	lahf   
  41df6a:	shl    DWORD PTR [esi],cl
  41df6c:	push   cs
  41df6d:	push   0xac275331
  41df72:	pop    ebp
  41df73:	jp     0x41df52
  41df75:	adc    DWORD PTR [eax-0x64],edi
  41df78:	pop    ds
  41df79:	in     al,dx
  41df7a:	add    esi,edx
  41df7c:	div    DWORD PTR [ecx+0x77]
  41df7f:	(bad)  
  41df80:	mov    ecx,DWORD PTR [edx-0x66d67e12]
  41df86:	adc    al,0x3f
  41df88:	mov    ah,0x4a
  41df8a:	and    al,0x86
  41df8c:	sti    
  41df8d:	ret    0x5fc2
  41df90:	imul   ebp,DWORD PTR [ecx+eax*2],0xa2aaaa8d
  41df97:	loop   0x41dffc
  41df99:	hlt    
  41df9a:	xor    eax,0x42d3019a
  41df9f:	push   edi
  41dfa0:	dec    ebx
  41dfa1:	cmc    
  41dfa2:	push   ebp
  41dfa3:	add    BYTE PTR es:[ebx],0x87
  41dfa7:	repz sahf 
  41dfa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfaa:	in     eax,0xf3
  41dfac:	dec    eax
  41dfad:	ret    0x3c6c
  41dfb0:	mov    esi,0xf92f55f0
  41dfb5:	lea    edx,[edi+0x41cfb6b7]
  41dfbb:	in     al,0x45
  41dfbd:	xchg   ebx,eax
  41dfbe:	sub    eax,0x48aa0c33
  41dfc3:	jo     0x41dfb8
  41dfc5:	(bad)  
  41dfc6:	xor    dh,dh
  41dfc8:	lea    esp,[edi-0x2]
  41dfcb:	sub    DWORD PTR [ebp-0x7446bf24],esi
  41dfd1:	push   edi
  41dfd2:	and    BYTE PTR [edi],ah
  41dfd4:	cmp    ebp,eax
  41dfd6:	xchg   DWORD PTR [ebx-0x7d4a58db],ebp
  41dfdc:	hlt    
  41dfdd:	fldl2e 
  41dfdf:	inc    esi
  41dfe0:	ss retf 
  41dfe2:	cmp    al,0xe1
  41dfe4:	xor    DWORD PTR [edi],0x38
  41dfe7:	mov    esp,0xfc01c83f
  41dfec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfed:	shl    DWORD PTR [edi-0x17ee036e],0x87
  41dff4:	adc    esp,DWORD PTR [ebx]
  41dff6:	mov    esp,0xc9db4f85
  41dffb:	in     al,0x1f
  41dffd:	sbb    BYTE PTR [esi-0x6b],0xec
  41e001:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e002:	shr    DWORD PTR [esp+esi*2+0x17],0xa0
  41e007:	cmp    ebp,esp
  41e009:	data16 mov bl,BYTE PTR [esi]
  41e00c:	add    al,0xac
  41e00e:	mov    ebx,DWORD PTR [edx+ebp*4+0x41]
  41e012:	into   
  41e013:	mov    bl,0x97
  41e015:	cmc    
  41e016:	jae    0x41dfe3
  41e018:	xor    DWORD PTR ds:[edx-0x42272e7d],eax
  41e01f:	stos   DWORD PTR es:[edi],eax
  41e020:	xchg   esp,eax
  41e021:	inc    ebp
  41e022:	mov    al,BYTE PTR [edx-0x3e]
  41e025:	mov    ss,WORD PTR [ecx-0x6c]
  41e028:	dec    edx
  41e029:	cmp    DWORD PTR [ecx+0x38],edx
  41e02c:	sbb    DWORD PTR [ebx+0xd2a8df6],0xfffffff3
  41e033:	or     ch,BYTE PTR [esi+0x3b3b1cd6]
  41e039:	and    DWORD PTR [edi-0x25],eax
  41e03c:	shl    BYTE PTR ds:[ebp-0x682cc4e],1
  41e043:	icebp  
  41e044:	ja     0x41e0ae
  41e046:	xchg   esp,eax
  41e047:	out    dx,al
  41e048:	adc    al,0xc2
  41e04a:	and    ecx,edx
  41e04c:	imul   edx,DWORD PTR [ecx-0x77],0xffffff95
  41e050:	xlat   BYTE PTR ds:[ebx]
  41e051:	mov    eax,0x587d8d4b
  41e056:	jbe    0x41e0c5
  41e058:	mov    ah,0x58
  41e05a:	mov    al,ah
  41e05c:	mov    dh,0x7f
  41e05e:	xor    ah,ch
  41e060:	jmp    0x745a:0xb1c60ae5
  41e067:	out    0x31,al
  41e069:	aad    0x58
  41e06b:	bound  esi,QWORD PTR [ecx-0x23acf894]
  41e071:	into   
  41e072:	xor    eax,0x10a56d3b
  41e077:	rcr    BYTE PTR [ecx+0x6],0xe2
  41e07b:	in     al,dx
  41e07c:	or     DWORD PTR [esp+ecx*1],esi
  41e07f:	push   esi
  41e080:	mov    ch,0x6f
  41e082:	repz scas eax,DWORD PTR es:[edi]
  41e084:	in     al,dx
  41e085:	jmp    0x2e8a4f1
  41e08a:	out    0xfd,al
  41e08c:	ins    DWORD PTR es:[edi],dx
  41e08d:	and    BYTE PTR [esi+0x60ea459b],bl
  41e093:	idiv   BYTE PTR [ebp+0x73]
  41e096:	dec    eax
  41e097:	xor    ebp,DWORD PTR [esi+0x7f38238f]
  41e09d:	fidiv  DWORD PTR [ebx-0x30]
  41e0a0:	popf   
  41e0a1:	test   eax,0x36c07b85
  41e0a6:	jl     0x41e0da
  41e0a8:	pop    ss
  41e0a9:	dec    edx
  41e0aa:	imul   ebx,DWORD PTR [ecx+ebp*1+0x75],0xcba88362
  41e0b2:	mov    ds:0x45a7dfb3,al
  41e0b7:	pusha  
  41e0b8:	push   0x1e
  41e0ba:	or     ebx,DWORD PTR [esi+eax*4-0x6b]
  41e0be:	aam    0x56
  41e0c0:	ror    bl,1
  41e0c2:	rol    esi,cl
  41e0c4:	jns    0x41e13d
  41e0c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0c7:	adc    ch,ch
  41e0c9:	call   0x4665:0x3c5e530d
  41e0d0:	rcr    DWORD PTR [edx+0x61],1
  41e0d3:	(bad)  
  41e0d4:	out    dx,al
  41e0d5:	cmp    ah,al
  41e0d7:	xchg   esp,eax
  41e0d8:	mov    DWORD PTR [ecx-0x72],ecx
  41e0db:	dec    edx
  41e0dc:	push   es
  41e0dd:	dec    ecx
  41e0de:	xlat   BYTE PTR ds:[ebx]
  41e0df:	js     0x41e127
  41e0e1:	sbb    BYTE PTR ds:0x353a87f6,bh
  41e0e7:	mov    edi,0x82217038
  41e0ec:	cmp    DWORD PTR [ebx+0x46],eax
  41e0ef:	lea    edx,[eax+edi*4+0x6b]
  41e0f3:	in     eax,dx
  41e0f4:	and    bl,BYTE PTR [ebp-0x5f]
  41e0f7:	call   0xa493ced4
  41e0fc:	mov    dh,0xf8
  41e0fe:	stos   BYTE PTR es:[edi],al
  41e0ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e100:	imul   edi,DWORD PTR [esi],0xffffffe5
  41e103:	jp     0x41e09f
  41e105:	lahf   
  41e106:	mov    edi,0x3a7b25c
  41e10b:	cmp    esi,DWORD PTR [ecx]
  41e10d:	xlat   BYTE PTR ds:[ebx]
  41e10e:	and    al,BYTE PTR [ecx-0x47fa0986]
  41e114:	js     0x41e098
  41e116:	add    eax,0x228cda31
  41e11b:	fwait
  41e11c:	cmp    al,0x6e
  41e11e:	cdq    
  41e11f:	mov    cl,0xbf
  41e121:	push   edx
  41e122:	dec    esp
  41e123:	scas   eax,DWORD PTR es:[edi]
  41e124:	bound  edx,QWORD PTR [eax+0x33]
  41e127:	cmp    BYTE PTR [ecx+edx*8+0x60419878],ah
  41e12e:	push   0x7c2557ad
  41e133:	stos   BYTE PTR es:[edi],al
  41e134:	mov    dh,0x39
  41e136:	ret    0x2a53
  41e139:	loop   0x41e131
  41e13b:	jmp    0x41e104
  41e13d:	sbb    ecx,DWORD PTR [edx+0x30]
  41e140:	xchg   ecx,eax
  41e141:	pop    ebp
  41e142:	(bad)  
  41e143:	sahf   
  41e144:	push   ebp
  41e145:	imul   DWORD PTR [esi+0x2d]
  41e148:	xchg   edx,eax
  41e149:	iret   
  41e14a:	and    edx,ebp
  41e14c:	add    dl,BYTE PTR [ecx-0x2e]
  41e14f:	cmp    al,0xd3
  41e151:	pop    es
  41e152:	mov    cl,0x9f
  41e154:	jmp    0x41e151
  41e156:	daa    
  41e157:	pushf  
  41e158:	daa    
  41e159:	lock mov edi,0xae3329b1
  41e15f:	test   ecx,esi
  41e161:	sub    al,0x41
  41e163:	rcr    DWORD PTR [edi-0x16bc271a],cl
  41e169:	pop    esi
  41e16a:	adc    ax,0x6bed
  41e16e:	rcl    DWORD PTR [eax+0x7db3adf4],cl
  41e174:	fcmovb st,st(2)
  41e176:	mov    bl,0x2f
  41e178:	mul    BYTE PTR [eax-0xd]
  41e17b:	push   edi
  41e17c:	xchg   BYTE PTR [ebx-0x48a0c286],bl
  41e182:	je     0x41e1dd
  41e184:	xchg   esp,eax
  41e185:	xchg   ebx,eax
  41e186:	mov    al,0x50
  41e188:	jns    0x41e1c5
  41e18a:	xor    eax,0xdf88f9cc
  41e18f:	stos   BYTE PTR es:[edi],al
  41e190:	pop    eax
  41e191:	inc    ecx
  41e192:	xor    ah,BYTE PTR [ebx-0x12e7ee8e]
  41e198:	(bad)  
  41e199:	(bad)  
  41e19a:	cmp    eax,0x5a901ff5
  41e19f:	dec    edi
  41e1a0:	sub    bl,BYTE PTR [edi-0x5d27ec68]
  41e1a6:	push   ebp
  41e1a7:	out    dx,eax
  41e1a8:	push   ebx
  41e1a9:	addr16 (bad) 
  41e1ab:	test   al,0x99
  41e1ad:	jge    0x41e18c
  41e1af:	dec    ecx
  41e1b0:	dec    edx
  41e1b1:	test   WORD PTR [ebx],sp
  41e1b4:	push   edi
  41e1b5:	add    cl,BYTE PTR [ebx+0x31]
  41e1b8:	dec    ebp
  41e1b9:	pop    ecx
  41e1ba:	pushf  
  41e1bb:	or     al,0x6d
  41e1bd:	dec    ecx
  41e1be:	jmp    0xce39:0x2187b6e2
  41e1c5:	scas   eax,DWORD PTR es:[edi]
  41e1c6:	adc    al,0x19
  41e1c8:	(bad)  
  41e1c9:	xor    edx,ecx
  41e1cb:	pop    esp
  41e1cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1cd:	fsubp  st(4),st
  41e1cf:	xchg   ebx,eax
  41e1d0:	or     ebx,DWORD PTR [esi]
  41e1d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1d3:	fisttp WORD PTR [ecx-0x272e903f]
  41e1d9:	push   0x60575d62
  41e1de:	fild   QWORD PTR [ebx]
  41e1e0:	mov    edi,0xa921bde3
  41e1e5:	aas    
  41e1e6:	push   0xae2bd5ab
  41e1eb:	shl    DWORD PTR [edx],0xfa
  41e1ee:	retf   
  41e1ef:	xchg   DWORD PTR [ebp-0x7ab73ff2],esi
  41e1f5:	(bad)  
  41e1f6:	call   0x336b52a
  41e1fb:	jg     0x41e1c1
  41e1fd:	jle    0x41e1a3
  41e1ff:	add    al,0xb4
  41e201:	inc    edi
  41e202:	adc    eax,0xfb06fc27
  41e207:	cmp    DWORD PTR [ebp-0x48],esp
  41e20a:	add    DWORD PTR [edx-0x5a7ee2d0],ebp
  41e210:	gs (bad) 
  41e212:	test   eax,0x754d1b24
  41e217:	aaa    
  41e218:	imul   eax,DWORD PTR [esi-0x31],0x2b7803c6
  41e21f:	dec    esp
  41e220:	aam    0x96
  41e222:	mov    dh,0x85
  41e224:	add    BYTE PTR [ebx],bh
  41e226:	(bad)  
  41e227:	cmc    
  41e228:	sahf   
  41e229:	aad    0xc1
  41e22b:	inc    eax
  41e22c:	pop    ss
  41e22d:	jg     0x41e22d
  41e22f:	cmp    BYTE PTR [edx],cl
  41e231:	xor    al,0x77
  41e233:	xlat   BYTE PTR ds:[ebx]
  41e234:	sbb    al,0xe0
  41e236:	sub    esi,DWORD PTR [esi]
  41e238:	add    al,BYTE PTR [eax+0x47]
  41e23b:	call   0xbd240433
  41e240:	sti    
  41e241:	push   eax
  41e242:	jnp    0x41e1cf
  41e244:	push   eax
  41e245:	pop    eax
  41e246:	cmp    al,0xc
  41e248:	jo     0x41e26b
  41e24a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e24b:	aas    
  41e24c:	sahf   
  41e24d:	lahf   
  41e24e:	sub    ebp,DWORD PTR [eax]
  41e250:	pushf  
  41e251:	cld    
  41e252:	jne    0x41e24f
  41e254:	jg     0x41e218
  41e256:	xchg   edi,eax
  41e257:	mov    ebp,?
  41e259:	push   edx
  41e25a:	nop
  41e25b:	or     al,0x33
  41e25d:	aad    0xbb
  41e25f:	mov    ah,0x3c
  41e261:	xor    edx,DWORD PTR [esp+eax*1-0x2d]
  41e265:	mov    ds:0x3b324e6c,al
  41e26a:	cwde   
  41e26b:	and    BYTE PTR [esi+0x659f206c],cl
  41e271:	dec    edx
  41e272:	cdq    
  41e273:	jp     0x41e23f
  41e275:	popf   
  41e276:	stos   BYTE PTR es:[edi],al
  41e277:	mov    bh,0xec
  41e279:	cmp    al,0x30
  41e27b:	(bad)  
  41e27c:	(bad)  
  41e27e:	cmp    DWORD PTR [eax+ebx*4+0x44],eax
  41e282:	mov    eax,0x84458762
  41e287:	test   DWORD PTR [eax+0x18],esi
  41e28a:	inc    ebx
  41e28b:	in     eax,dx
  41e28c:	pop    ebx
  41e28d:	add    BYTE PTR [ebx-0x6a],dh
  41e290:	retf   
  41e291:	xchg   BYTE PTR [edi],ch
  41e293:	jno    0x41e2ca
  41e295:	mov    ch,0x75
  41e297:	icebp  
  41e298:	pop    esi
  41e299:	jmp    0x41e26d
  41e29b:	and    BYTE PTR [ecx-0xa892b9a],dl
  41e2a1:	mov    esp,0x419e8b04
  41e2a6:	jg     0x41e2e2
  41e2a8:	or     al,0x7f
  41e2aa:	popa   
  41e2ab:	add    edx,DWORD PTR [edx+esi*2+0x75]
  41e2af:	aaa    
  41e2b0:	pop    ecx
  41e2b1:	out    0x45,eax
  41e2b3:	stos   DWORD PTR es:[edi],eax
  41e2b4:	or     dh,bh
  41e2b6:	out    0xd4,eax
  41e2b8:	sbb    esi,ebp
  41e2ba:	js     0x41e249
  41e2bc:	jne    0x41e2a2
  41e2be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2bf:	adc    al,0x8d
  41e2c1:	or     al,0xe1
  41e2c3:	enter  0xaac0,0xd4
  41e2c7:	mov    eax,0x9ea8a561
  41e2cc:	add    eax,0x5df51dd6
  41e2d1:	mov    bl,0xe7
  41e2d3:	in     eax,dx
  41e2d4:	mov    dl,0xbe
  41e2d6:	xchg   edx,eax
  41e2d7:	jns    0x41e298
  41e2d9:	or     dh,bl
  41e2db:	mov    eax,0x2f8b413d
  41e2e0:	mov    al,0xc4
  41e2e2:	and    ah,bh
  41e2e4:	mov    ah,0x45
  41e2e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2e8:	data16 sub BYTE PTR [ebx],al
  41e2eb:	in     al,0x1f
  41e2ed:	and    esi,DWORD PTR [ecx+edi*8+0x6d7c870f]
  41e2f4:	je     0x41e2fa
  41e2f6:	and    BYTE PTR [ebp+0x14],bh
  41e2f9:	xor    ebp,DWORD PTR [esi-0x64]
  41e2fc:	popf   
  41e2fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e2fe:	jmp    0xfe2947b7
  41e303:	mov    dl,0x25
  41e305:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e306:	int    0x57
  41e308:	les    esi,FWORD PTR [edi]
  41e30a:	cdq    
  41e30b:	and    ah,BYTE PTR [ecx+0x64]
  41e30e:	dec    esi
  41e30f:	outs   dx,DWORD PTR ds:[esi]
  41e310:	test   eax,0x57874188
  41e315:	idiv   DWORD PTR [edx-0x4e]
  41e318:	xchg   esi,eax
  41e319:	(bad)  
  41e31a:	fstp   TBYTE PTR [edx]
  41e31c:	fild   DWORD PTR [edi-0x5a041e5]
  41e322:	(bad)  
  41e323:	fild   DWORD PTR [ecx+0x71fce0f8]
  41e329:	sahf   
  41e32a:	int    0xfc
  41e32c:	imul   ebp,DWORD PTR [eax],0x6b2df28e
  41e332:	pop    ebx
  41e333:	or     DWORD PTR [ecx-0x48],esp
  41e336:	push   ecx
  41e337:	test   al,0xba
  41e339:	xor    al,0xb5
  41e33b:	sub    esi,edi
  41e33d:	push   ss
  41e33e:	cmp    bl,BYTE PTR [edi-0xcddc740]
  41e344:	sahf   
  41e345:	push   es
  41e346:	pop    ds
  41e347:	mov    eax,0x911ac707
  41e34c:	xor    ecx,DWORD PTR [esi]
  41e34e:	and    ebx,DWORD PTR [edi]
  41e350:	leave  
  41e351:	cmp    DWORD PTR [ebp+0x669a356b],esp
  41e357:	std    
  41e358:	(bad)  
  41e359:	mov    esi,0x7a9295cf
  41e35e:	pop    ecx
  41e35f:	jne    0x41e307
  41e361:	in     al,0xb5
  41e363:	out    dx,eax
  41e364:	mov    esi,0xde8e0983
  41e369:	xor    ecx,DWORD PTR [eax]
  41e36b:	mov    cl,0x34
  41e36d:	cmp    al,0x43
  41e36f:	push   ebp
  41e370:	leave  
  41e371:	stc    
  41e372:	pusha  
  41e373:	jg     0x41e3ca
  41e375:	or     al,0xec
  41e377:	stc    
  41e378:	xor    al,0xe3
  41e37a:	lds    eax,FWORD PTR [edi]
  41e37c:	sbb    DWORD PTR [edi],edx
  41e37e:	sti    
  41e37f:	push   esi
  41e380:	inc    ebp
  41e381:	mov    WORD PTR [ecx],ss
  41e383:	mov    cl,0x83
  41e385:	mov    WORD PTR [eax-0x49],?
  41e388:	xchg   edx,eax
  41e389:	(bad)
  41e38c:	xchg   esp,eax
  41e38d:	jp     0x41e3fa
  41e38f:	sbb    eax,0xf4d19e6d
  41e394:	leave  
  41e395:	mov    bl,0xa8
  41e397:	daa    
  41e398:	push   ebp
  41e399:	lods   eax,DWORD PTR ds:[esi]
  41e39a:	mov    dh,0x72
  41e39c:	das    
  41e39d:	pop    es
  41e39e:	and    DWORD PTR [ebx-0x719e73b0],0x53
  41e3a5:	int3   
  41e3a6:	and    BYTE PTR [eax-0x554b4585],al
  41e3ac:	xor    BYTE PTR [eax+edi*1+0x73],dl
  41e3b0:	and    al,BYTE PTR [ebx+0x76]
  41e3b3:	in     eax,0x37
  41e3b5:	mov    ecx,0x63000053
  41e3ba:	ss mov ecx,0x23087cca
  41e3c0:	push   ebx
  41e3c1:	pop    eax
  41e3c2:	dec    di
  41e3c4:	es neg esi
  41e3c7:	fdivr  DWORD PTR [edi-0x44]
  41e3ca:	dec    ecx
  41e3cb:	adc    al,0x2c
  41e3cd:	and    al,0xbf
  41e3cf:	mov    WORD PTR [esi+0x0],ss
  41e3d2:	repnz inc edi
  41e3d4:	inc    ebp
  41e3d5:	test   eax,0x9b8051aa
  41e3da:	cmp    bl,BYTE PTR [ecx]
  41e3dc:	xor    al,0xfe
  41e3de:	sti    
  41e3df:	ds push ss
  41e3e1:	dec    esp
  41e3e2:	test   eax,0xd9fc591d
  41e3e7:	mov    ch,0xcd
  41e3e9:	lock adc eax,0x751b90
  41e3ef:	add    BYTE PTR [eax],al
  41e3f1:	add    BYTE PTR [eax-0x7de0740],al
  41e3f7:	cmp    ecx,ebx
  41e3f9:	loope  0x41e3df
  41e3fb:	mov    esi,0x1662fc94
  41e400:	leave  
  41e401:	xor    BYTE PTR [ecx],ch
  41e403:	pop    edi
  41e404:	add    DWORD PTR [eax],eax
  41e406:	hlt    
  41e407:	add    al,0x0
  41e409:	add    BYTE PTR [edx+0x3af60c03],dl
  41e40f:	fild   DWORD PTR [ecx+edi*8]
  41e412:	jp     0x41e3ab
  41e414:	xor    DWORD PTR [edx+esi*1],0x6bfe1010
  41e41b:	ins    DWORD PTR es:[edi],dx
  41e41c:	lahf   
  41e41d:	call   0xc33149dd
  41e422:	pop    ebp
  41e423:	add    dl,BYTE PTR [edx]
  41e425:	retf   0x634
  41e428:	fneni(8087 only) 
  41e42a:	adc    BYTE PTR [edx],al
  41e42c:	outs   dx,BYTE PTR ds:[esi]
  41e42d:	iret   
  41e42e:	sar    BYTE PTR [eax+0x54335b35],0xf3
  41e435:	ret    0x220d
  41e438:	ins    BYTE PTR es:[edi],dx
  41e439:	scas   eax,DWORD PTR es:[edi]
  41e43a:	(bad)  
  41e43c:	mov    ebx,0xda2d6725
  41e441:	cli    
  41e442:	lods   eax,DWORD PTR ds:[esi]
  41e443:	fnstenv [ecx-0x57]
  41e446:	out    dx,al
  41e447:	and    edi,esp
  41e449:	add    DWORD PTR [esi+ecx*1+0x67],ecx
  41e44d:	int    0x72
  41e44f:	push   0xbd580b0e
  41e454:	pop    ebx
  41e455:	pop    ds
  41e456:	mov    cs,edi
  41e458:	ss daa 
  41e45a:	mov    esi,DWORD PTR [esi+0x1039c39d]
  41e460:	std    
  41e461:	xchg   DWORD PTR [edx-0x767d20f4],edx
  41e467:	dec    esp
  41e468:	stos   DWORD PTR es:[edi],eax
  41e469:	loope  0x41e4a0
  41e46b:	push   edx
  41e46c:	push   ebx
  41e46d:	popf   
  41e46e:	mov    ebp,0xda48fd7c
  41e473:	push   esi
  41e474:	xor    DWORD PTR [ebx],edi
  41e476:	cmp    DWORD PTR [eax+ecx*4],edx
  41e479:	lods   al,BYTE PTR ds:[esi]
  41e47a:	repz xchg ecx,esp
  41e47d:	jnp    0x41e4e4
  41e47f:	mul    DWORD PTR [eax+0x5246df63]
  41e485:	popa   
  41e486:	mov    ebp,0xc6ffe1cb
  41e48b:	cmp    ch,BYTE PTR [esi+0x11]
  41e48e:	jae    0x41e4e6
  41e490:	and    al,0x7b
  41e492:	mov    al,ds:0xe993525d
  41e497:	mov    cl,0xaf
  41e499:	sbb    DWORD PTR [eax+0x1e],0x56def181
  41e4a0:	dec    edi
  41e4a1:	test   BYTE PTR [ebx],cl
  41e4a3:	das    
  41e4a4:	mov    ch,0xf4
  41e4a6:	cmp    al,0xf4
  41e4a8:	out    dx,eax
  41e4a9:	jmp    0x8b46:0x52947df6
  41e4b0:	jo     0x41e502
  41e4b2:	pop    esi
  41e4b3:	push   ss
  41e4b4:	lea    ecx,[edi]
  41e4b6:	test   DWORD PTR [ebx],edi
  41e4b8:	jne    0x41e494
  41e4ba:	pop    edx
  41e4bb:	iret   
  41e4bc:	frstor [ecx]
  41e4be:	mov    edx,0x9899de7c
  41e4c3:	push   0xfffffff2
  41e4c5:	loopne 0x41e50b
  41e4c7:	mov    esp,0x921337fa
  41e4cc:	and    bl,BYTE PTR [edi+0x28]
  41e4cf:	mov    BYTE PTR [edi-0x4e],dl
  41e4d2:	dec    esp
  41e4d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4d4:	push   0x71
  41e4d6:	stos   BYTE PTR es:[edi],al
  41e4d7:	inc    esp
  41e4d8:	clc    
  41e4d9:	inc    eax
  41e4da:	pusha  
  41e4db:	and    al,0x71
  41e4dd:	xor    cl,al
  41e4df:	dec    ecx
  41e4e0:	push   ecx
  41e4e1:	mov    ds:0x9218af,eax
  41e4e6:	xchg   edx,eax
  41e4e7:	ins    DWORD PTR es:[edi],dx
  41e4e8:	and    BYTE PTR [edi+eiz*8],dl
  41e4eb:	lock push esp
  41e4ed:	pop    ebp
  41e4ee:	mov    ds:0xa8fa70a0,al
  41e4f3:	and    eax,0xc4ab2384
  41e4f8:	frstor [edi-0x2e]
  41e4fb:	add    ch,BYTE PTR [ecx]
  41e4fd:	sub    dl,bh
  41e4ff:	enter  0x7899,0x97
  41e503:	xchg   ebp,eax
  41e504:	xchg   DWORD PTR [edi-0x1],esi
  41e507:	jecxz  0x41e53a
  41e509:	push   ds
  41e50a:	ds xchg edx,eax
  41e50c:	aam    0x8d
  41e50e:	or     bh,BYTE PTR [ebp+0x49]
  41e511:	scas   eax,DWORD PTR es:[edi]
  41e512:	cmc    
  41e513:	mov    bh,0x7c
  41e515:	or     eax,0x1021cbe3
  41e51a:	inc    ebp
  41e51b:	push   ecx
  41e51c:	push   cs
  41e51d:	inc    edi
  41e51e:	and    BYTE PTR [edx-0x80],ch
  41e521:	(bad)  
  41e522:	repnz rol BYTE PTR [eax+0x78389faa],0x34
  41e52a:	sub    BYTE PTR [edi],ah
  41e52c:	sbb    al,0x37
  41e52e:	jecxz  0x41e4ee
  41e530:	aas    
  41e531:	or     eax,0x34999c86
  41e536:	fnstsw WORD PTR [edi]
  41e538:	pop    eax
  41e539:	lea    edi,[esi-0x63e08aec]
  41e53f:	mov    ?,WORD PTR [ecx+0x4d]
  41e542:	sbb    ecx,ebp
  41e544:	cmp    al,0xa
  41e546:	cld    
  41e547:	inc    esp
  41e548:	loope  0x41e4cc
  41e54a:	gs xor al,0x20
  41e54d:	mov    bl,0x8a
  41e54f:	jle    0x41e591
  41e551:	dec    edx
  41e552:	test   eax,0x4efef7a3
  41e557:	icebp  
  41e558:	jp     0x41e509
  41e55a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e55b:	out    dx,al
  41e55c:	xor    eax,0x3299fe1e
  41e561:	xchg   ebx,eax
  41e562:	fnstsw ax
  41e564:	mov    cl,0x7f
  41e566:	cld    
  41e567:	dec    esp
  41e568:	ja     0x41e4f5
  41e56a:	or     DWORD PTR [ebx-0x4c072418],ecx
  41e570:	dec    ebx
  41e571:	int3   
  41e572:	xor    edi,DWORD PTR [ebx]
  41e574:	shl    bh,1
  41e576:	jmp    0x41e5e4
  41e578:	aam    0xe0
  41e57a:	jmp    0x6172:0x794b2dc
  41e581:	lods   eax,DWORD PTR ds:[esi]
  41e582:	inc    esi
  41e583:	push   0x58120527
  41e588:	add    ch,dh
  41e58a:	xlat   BYTE PTR ds:[ebx]
  41e58b:	outs   dx,DWORD PTR ds:[esi]
  41e58c:	std    
  41e58d:	stos   DWORD PTR es:[edi],eax
  41e58e:	inc    edi
  41e58f:	or     dh,dl
  41e591:	push   edx
  41e592:	mov    dl,al
  41e594:	and    eax,0xb601d990
  41e599:	or     eax,0xda2df72b
  41e59e:	(bad)  
  41e59f:	mov    eax,ds:0x2daac686
  41e5a4:	mov    eax,ds:0x745ad2d1
  41e5a9:	and    eax,DWORD PTR [ebx-0x1d]
  41e5ac:	inc    edi
  41e5ad:	stc    
  41e5ae:	(bad)  
  41e5af:	pop    eax
  41e5b0:	dec    edx
  41e5b1:	in     eax,0x31
  41e5b3:	xchg   DWORD PTR [ebp+0x5165a0af],edi
  41e5b9:	in     al,dx
  41e5ba:	push   ebp
  41e5bb:	stos   DWORD PTR es:[edi],eax
  41e5bc:	jno    0x41e598
  41e5be:	(bad)
  41e5c2:	add    DWORD PTR [edi],edx
  41e5c4:	inc    edi
  41e5c5:	(bad)  
  41e5c7:	cmp    cl,BYTE PTR [ebx]
  41e5c9:	fdivr  QWORD PTR gs:[edi+0x58a0fdb9]
  41e5d0:	mov    ebx,DWORD PTR [esi]
  41e5d2:	leave  
  41e5d3:	add    dh,BYTE PTR [esp+ebx*1]
  41e5d6:	int3   
  41e5d7:	pop    ecx
  41e5d8:	loop   0x41e568
  41e5da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5db:	mov    ds:0xfd7880fd,eax
  41e5e0:	mov    es,WORD PTR ds:0x1bf66c55
  41e5e6:	je     0x41e64a
  41e5e8:	adc    eax,0x3e346e74
  41e5ed:	jecxz  0x41e625
  41e5ef:	mov    bl,0xaf
  41e5f1:	test   eax,0xad5ee6c5
  41e5f6:	sbb    eax,0x69768272
  41e5fb:	jns    0x41e5af
  41e5fd:	push   es
  41e5fe:	sub    al,0x8b
  41e600:	adc    esp,DWORD PTR [ebp+0x26]
  41e603:	pushf  
  41e604:	scas   eax,DWORD PTR es:[edi]
  41e605:	out    dx,eax
  41e606:	dec    edx
  41e607:	mov    al,ds:0xa58a2645
  41e60c:	pop    esi
  41e60d:	or     cl,BYTE PTR [ebp-0xf]
  41e610:	push   cs
  41e611:	shl    esp,1
  41e613:	mov    cl,0x5f
  41e615:	pop    esp
  41e616:	leave  
  41e617:	(bad)  
  41e618:	fdiv   DWORD PTR [eax-0x1c46d43]
  41e61e:	inc    esp
  41e61f:	lahf   
  41e620:	cmp    BYTE PTR [ebp-0x66],bl
  41e623:	test   al,0x22
  41e625:	int3   
  41e626:	fmul   DWORD PTR [edx]
  41e628:	(bad)  
  41e629:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e62a:	adc    BYTE PTR [edi+0x27],bl
  41e62d:	(bad)  
  41e62e:	inc    DWORD PTR [esi+esi*2-0x10]
  41e632:	in     al,0x6d
  41e634:	mov    ebx,0xda5ba8af
  41e639:	sbb    BYTE PTR [edi+0x16],dl
  41e63c:	mov    dl,0x20
  41e63e:	dec    edx
  41e63f:	shl    DWORD PTR [edx+0x1e],1
  41e642:	or     eax,0xa3e5fbb9
  41e647:	call   0x2735:0x9fc429ed
  41e64e:	adc    eax,0xb4bbb1a9
  41e653:	mov    DWORD PTR [ebx],eax
  41e655:	lahf   
  41e656:	pusha  
  41e657:	jmp    0x961f15f2
  41e65c:	inc    ecx
  41e65d:	mov    cs,WORD PTR [ecx]
  41e65f:	pop    ecx
  41e660:	leave  
  41e661:	imul   edx,DWORD PTR [ebx-0xe],0xfb454495
  41e668:	mov    eax,0x73c57b42
  41e66d:	loopne 0x41e6a2
  41e66f:	in     eax,dx
  41e670:	in     eax,dx
  41e671:	imul   eax,DWORD PTR [eax-0x183df25],0x5d5e5a
  41e67b:	data16 sti 
  41e67d:	lds    edx,FWORD PTR [edx+0x11957685]
  41e683:	push   eax
  41e684:	test   eax,0x96034ff6
  41e689:	loop   0x41e6c5
  41e68b:	int3   
  41e68c:	aas    
  41e68d:	and    esi,DWORD PTR [eax+0xb67e2cc]
  41e693:	xor    eax,0x44b925bf
  41e698:	ret    0x36d6
  41e69b:	sti    
  41e69c:	or     eax,0xfb8cb91c
  41e6a1:	add    ebp,0xee43e114
  41e6a7:	lods   al,BYTE PTR ds:[esi]
  41e6a8:	test   eax,0xb999feb
  41e6ad:	test   al,0x29
  41e6af:	xchg   ebx,eax
  41e6b0:	inc    edi
  41e6b1:	sbb    edx,DWORD PTR [edi+0x1ff65b9e]
  41e6b7:	aam    0x7b
  41e6b9:	add    DWORD PTR [ebx+ecx*8-0x6a],ebp
  41e6bd:	scas   eax,DWORD PTR es:[edi]
  41e6be:	stos   DWORD PTR es:[edi],eax
  41e6bf:	js     0x41e676
  41e6c1:	scas   eax,DWORD PTR es:[edi]
  41e6c2:	shl    DWORD PTR [eax],1
  41e6c4:	inc    esp
  41e6c5:	fwait
  41e6c6:	ret    
  41e6c7:	xor    BYTE PTR [edi],0x82
  41e6ca:	mov    dl,0x79
  41e6cc:	std    
  41e6cd:	jge    0x41e686
  41e6cf:	jg     0x41e714
  41e6d1:	outs   dx,BYTE PTR ds:[esi]
  41e6d2:	sbb    DWORD PTR [edi+0xf15c15a],ebx
  41e6d8:	mov    ebx,0xfe11cce6
  41e6dd:	idiv   DWORD PTR [eax+ebp*8]
  41e6e0:	cli    
  41e6e1:	outs   dx,BYTE PTR ds:[esi]
  41e6e2:	in     eax,dx
  41e6e3:	mov    bl,0x8
  41e6e5:	mov    eax,ds:0xcfb974d3
  41e6ea:	add    al,0x15
  41e6ec:	push   esi
  41e6ed:	push   esp
  41e6ee:	stos   DWORD PTR es:[edi],eax
  41e6ef:	mov    dh,0xf2
  41e6f1:	popa   
  41e6f2:	mov    edx,esp
  41e6f4:	jo     0x41e76c
  41e6f6:	out    0x16,al
  41e6f8:	mov    al,BYTE PTR [ebp-0x20]
  41e6fb:	mov    cl,BYTE PTR [edi+0x6cd6f9b]
  41e701:	lock sti 
  41e703:	loop   0x41e753
  41e705:	call   0xa2e116f3
  41e70a:	dec    esp
  41e70b:	outs   dx,BYTE PTR ds:[esi]
  41e70c:	mov    edi,0x122de455
  41e711:	es xchg cx,ax
  41e714:	jo     0x41e6d4
  41e716:	inc    sp
  41e718:	mov    bh,0x60
  41e71a:	cmp    eax,0x275b4cf8
  41e71f:	call   0x29bf:0x41a99fb1
  41e726:	scas   eax,DWORD PTR es:[edi]
  41e727:	in     al,0xb9
  41e729:	push   edi
  41e72a:	dec    ebp
  41e72b:	and    eax,0x7034a524
  41e730:	ins    DWORD PTR es:[edi],dx
  41e731:	adc    eax,0xfc92a267
  41e736:	sahf   
  41e737:	data16 and dh,BYTE PTR [edx+edx*8-0x77e7c920]
  41e73f:	push   eax
  41e740:	and    DWORD PTR [ebx],eax
  41e742:	adc    DWORD PTR [esi-0x6b],edi
  41e745:	mov    bh,ch
  41e747:	mov    eax,0xb6fbb4ee
  41e74c:	mov    esp,0xaddb549f
  41e751:	mov    ebx,0x64093446
  41e756:	push   edi
  41e757:	and    eax,0xb8ce010d
  41e75c:	sti    
  41e75d:	adc    edi,DWORD PTR [edx+0x2552219a]
  41e763:	je     0x41e769
  41e765:	les    eax,FWORD PTR [edx-0x3e]
  41e768:	ja     0x41e76b
  41e76a:	xchg   ebx,eax
  41e76b:	data16 jne 0x41e73f
  41e76e:	sti    
  41e76f:	push   esi
  41e770:	push   esi
  41e771:	xchg   ecx,eax
  41e772:	std    
  41e773:	mov    bh,0x12
  41e775:	aam    0x7b
  41e777:	pop    ss
  41e778:	rcl    BYTE PTR [esi],1
  41e77a:	mov    ds:0xf9b3c859,eax
  41e77f:	test   DWORD PTR [esi+0x6495d58],ebx
  41e785:	inc    ebx
  41e786:	cmp    BYTE PTR [eax],ch
  41e788:	mov    ah,0xf9
  41e78a:	push   esi
  41e78b:	imul   edx,DWORD PTR [ecx],0x1b5bf2ae
  41e791:	enter  0x8d4,0x1b
  41e795:	das    
  41e796:	dec    esi
  41e797:	inc    ebp
  41e798:	pop    DWORD PTR [edx-0x2]
  41e79b:	retf   
  41e79c:	mov    ah,0x7f
  41e79e:	dec    esp
  41e79f:	pop    esi
  41e7a0:	cmc    
  41e7a1:	(bad)  
  41e7a2:	sbb    BYTE PTR [esi+0x2],cl
  41e7a5:	out    dx,eax
  41e7a6:	cdq    
  41e7a7:	inc    ebp
  41e7a8:	das    
  41e7a9:	rcl    esp,1
  41e7ab:	mov    BYTE PTR [esi+ebp*1-0x36],dh
  41e7af:	push   esp
  41e7b0:	or     bh,BYTE PTR [ebx]
  41e7b2:	retf   
  41e7b3:	jb     0x41e762
  41e7b5:	jnp    0x41e7f8
  41e7b7:	(bad)  
  41e7b8:	aas    
  41e7b9:	adc    al,0x42
  41e7bb:	stos   DWORD PTR es:[edi],eax
  41e7bc:	shr    DWORD PTR ds:0x6a647175,1
  41e7c2:	and    ebx,DWORD PTR [edx-0x5a7fcf92]
  41e7c8:	dec    edx
  41e7c9:	or     BYTE PTR [edx],al
  41e7cb:	leave  
  41e7cc:	dec    ebx
  41e7cd:	mov    edi,0x32e5ea79
  41e7d2:	jae    0x41e810
  41e7d4:	fbstp  TBYTE PTR [ebp-0x48]
  41e7d7:	int3   
  41e7d8:	sbb    edi,0x43
  41e7db:	xor    DWORD PTR ss:[eax+edi*2],esp
  41e7df:	and    DWORD PTR [esi],ebp
  41e7e1:	jecxz  0x41e7a1
  41e7e3:	cmp    al,0x13
  41e7e5:	imul   esi,edi,0xffffffa1
  41e7e8:	hlt    
  41e7e9:	xchg   BYTE PTR [ecx],al
  41e7eb:	push   edi
  41e7ec:	push   es
  41e7ed:	adc    eax,0xa1696b28
  41e7f2:	inc    ecx
  41e7f3:	lahf   
  41e7f4:	inc    edi
  41e7f5:	add    ch,cl
  41e7f7:	idiv   DWORD PTR [ecx+0x77]
  41e7fa:	adc    edi,DWORD PTR [edi]
  41e7fc:	adc    BYTE PTR gs:[eax+0x6a],ch
  41e800:	mov    eax,ds:0xd121224a
  41e805:	ins    DWORD PTR es:[edi],dx
  41e806:	call   0xb634ee9f
  41e80b:	mov    cl,0x37
  41e80d:	mov    ecx,0x8eb3a733
  41e812:	(bad)  
  41e813:	out    0x2a,eax
  41e815:	std    
  41e816:	jnp    0x41e821
  41e818:	call   0xa7ec:0xfd4b8608
  41e81f:	pop    ss
  41e820:	add    al,0xab
  41e822:	addr16 leave 
  41e824:	push   esi
  41e825:	inc    esi
  41e826:	mov    ebx,0x1870cce5
  41e82b:	sbb    dl,BYTE PTR [edi]
  41e82d:	xchg   ecx,eax
  41e82e:	ds push ebx
  41e830:	pusha  
  41e831:	cwde   
  41e832:	or     BYTE PTR [ebp-0x5a5719ae],0x27
  41e839:	idiv   BYTE PTR [ecx+eiz*4]
  41e83c:	test   BYTE PTR [edi+0x5],ch
  41e83f:	out    0x99,eax
  41e841:	or     al,0xb0
  41e843:	sbb    ah,BYTE PTR [edx-0x20]
  41e846:	stc    
  41e847:	hlt    
  41e848:	icebp  
  41e849:	inc    esp
  41e84a:	in     al,dx
  41e84b:	sti    
  41e84c:	adc    BYTE PTR [edx+ebx*2+0x19],al
  41e850:	jo     0x41e819
  41e852:	add    BYTE PTR [esi-0x2e],0x14
  41e856:	jae    0x41e7df
  41e858:	imul   ecx,DWORD PTR [ecx],0x1b
  41e85b:	ins    BYTE PTR es:[edi],dx
  41e85c:	les    edx,FWORD PTR [si-0x5368]
  41e861:	call   DWORD PTR [esi+0x4a0d22b5]
  41e867:	sbb    ah,BYTE PTR [edi-0x6e]
  41e86a:	(bad)  
  41e86b:	loopne 0x41e889
  41e86d:	jecxz  0x41e88e
  41e86f:	jg     0x41e862
  41e871:	ds loopne 0x41e8bd
  41e874:	inc    ebp
  41e875:	mov    BYTE PTR [ebx+ebx*8],ch
  41e878:	xchg   edx,eax
  41e879:	es inc ebp
  41e87b:	xlat   BYTE PTR ds:[ebx]
  41e87c:	cli    
  41e87d:	clc    
  41e87e:	call   0xe8e5cd93
  41e883:	popa   
  41e884:	addr16 in eax,dx
  41e886:	je     0x41e8a8
  41e888:	ss pop es
  41e88a:	ins    BYTE PTR es:[edi],dx
  41e88b:	sbb    eax,0x22c0a63c
  41e890:	imul   ebp,DWORD PTR [eax+0x12],0xffffffd3
  41e894:	test   bh,bl
  41e896:	jno    0x41e8f4
  41e898:	(bad)  
  41e89a:	mov    ds:0x6661d07c,eax
  41e89f:	fnstenv [ebx+0x48df6ef9]
  41e8a5:	inc    ecx
  41e8a6:	sbb    dl,BYTE PTR [eax]
  41e8a8:	jp     0x41e870
  41e8aa:	mov    ds,eax
  41e8ac:	add    eax,0x7dc0a02a
  41e8b1:	cld    
  41e8b2:	mov    ch,0x1c
  41e8b4:	pop    ds
  41e8b5:	cmp    DWORD PTR [esi],edi
  41e8b7:	jl     0x41e8bc
  41e8b9:	retfw  
  41e8bb:	and    DWORD PTR [ecx],eax
  41e8bd:	and    BYTE PTR [edx+0x66cac855],dh
  41e8c3:	stos   DWORD PTR es:[edi],eax
  41e8c4:	leavew 
  41e8c6:	push   esi
  41e8c7:	ds (bad) 
  41e8c9:	retf   0x407b
  41e8cc:	mov    bh,0xd4
  41e8ce:	call   0x5659:0xfa7af288
  41e8d5:	jbe    0x41e91c
  41e8d7:	cmp    BYTE PTR [eax],cl
  41e8d9:	push   edi
  41e8da:	lock xchg ebx,eax
  41e8dc:	test   dl,ah
  41e8de:	xchg   edx,eax
  41e8df:	aaa    
  41e8e0:	pop    esi
  41e8e1:	jae    0x41e8c0
  41e8e3:	inc    esi
  41e8e4:	ja     0x41e8d0
  41e8e6:	lahf   
  41e8e7:	jecxz  0x41e92b
  41e8e9:	xor    ecx,esi
  41e8eb:	(bad)  
  41e8ec:	into   
  41e8ed:	mov    ecx,0x87da780
  41e8f2:	mov    ebp,0xf3439e2a
  41e8f7:	mov    ch,0x3c
  41e8f9:	mov    al,ds:0xdcd7b685
  41e8fe:	add    BYTE PTR [eax],al
  41e900:	add    BYTE PTR [eax],al
  41e902:	jg     0x41e97c
  41e904:	mov    ecx,0xffd5bf55
  41e909:	jp     0x41e931
  41e90b:	ret    0x676d
  41e90e:	jge    0x41e987
  41e910:	or     ebx,DWORD PTR [ebx]
  41e912:	sbb    eax,0xf4000164
  41e917:	add    al,0x0
  41e919:	add    BYTE PTR [ecx+0xb],ch
  41e91c:	int    0xc7
  41e91e:	iret   
  41e91f:	imul   ebx,DWORD PTR [edi],0x7914ac3a
  41e925:	pop    esp
  41e926:	add    al,0x5c
  41e928:	fidiv  WORD PTR [eax]
  41e92a:	xchg   esi,eax
  41e92b:	aad    0xdb
  41e92d:	in     eax,dx
  41e92e:	pop    ebp
  41e92f:	jp     0x41e9a8
  41e931:	repnz mov esp,0xf765b2b0
  41e937:	add    ah,dl
  41e939:	cmp    DWORD PTR [edx],esi
  41e93b:	mov    ebx,0x13d77aa6
  41e940:	std    
  41e941:	stos   DWORD PTR es:[edi],eax
  41e942:	mov    al,0x7c
  41e944:	inc    eax
  41e945:	cmp    al,0x70
  41e947:	mov    bl,0xe5
  41e949:	and    DWORD PTR [edi],0xffffff98
  41e94c:	add    ecx,esp
  41e94e:	xor    eax,DWORD PTR [edx+0x47f2bb90]
  41e954:	mov    esi,0x769a7540
  41e959:	push   0xa
  41e95b:	jl     0x41e98f
  41e95d:	dec    edx
  41e95e:	sbb    ebp,edi
  41e960:	pop    ebp
  41e961:	push   ebp
  41e962:	out    0x7d,eax
  41e964:	push   ebp
  41e965:	sar    BYTE PTR [eax+eiz*1-0x1b],cl
  41e969:	repnz sar edx,0x7a
  41e96d:	push   0xffffff94
  41e96f:	nop
  41e970:	and    al,0x34
  41e972:	mov    al,0x9e
  41e974:	push   eax
  41e975:	sbb    eax,0x783e1ed5
  41e97a:	(bad)  
  41e97b:	lds    ecx,FWORD PTR [esi+0x3a07dde]
  41e981:	mov    ds:0x678d105f,al
  41e986:	hlt    
  41e987:	or     DWORD PTR ds:0x11b02747,0x7f
  41e98e:	dec    edx
  41e98f:	cwde   
  41e990:	enter  0x64e9,0xe4
  41e994:	and    dl,BYTE PTR [edi-0x4ae40574]
  41e99a:	(bad)  
  41e99b:	push   edx
  41e99c:	mov    ebp,DWORD PTR [esi-0x999bcd1]
  41e9a2:	pop    ecx
  41e9a3:	adc    eax,0xcb098a0c
  41e9a8:	ret    0xc0f4
  41e9ab:	loop   0x41e98d
  41e9ad:	rol    BYTE PTR ds:0xfc42536d,0xd2
  41e9b4:	jno    0x41e938
  41e9b6:	fwait
  41e9b7:	leave  
  41e9b8:	lock mov eax,0x922820c7
  41e9be:	fidivr DWORD PTR [edx]
  41e9c0:	sbb    bh,BYTE PTR [ecx]
  41e9c2:	pop    ebp
  41e9c3:	cdq    
  41e9c4:	adc    DWORD PTR [edi],edi
  41e9c6:	mov    ah,BYTE PTR cs:[ebp+esi*8-0x46]
  41e9cb:	mov    BYTE PTR [ebx-0x70c97417],bh
  41e9d1:	mov    ch,0x61
  41e9d3:	call   0x1a51:0xc62600e9
  41e9da:	pop    ebx
  41e9db:	push   esp
  41e9dc:	(bad)  
  41e9dd:	sbb    DWORD PTR [eax],edx
  41e9df:	jmp    0xb095e491
  41e9e4:	cmp    ecx,edi
  41e9e6:	popf   
  41e9e7:	pmulhw mm3,mm7
  41e9ea:	fwait
  41e9eb:	xchg   esi,eax
  41e9ec:	jb     0x41e9c6
  41e9ee:	(bad)  
  41e9ef:	das    
  41e9f0:	out    dx,al
  41e9f1:	mov    ah,0x7
  41e9f3:	out    0x8d,eax
  41e9f5:	xor    edx,esp
  41e9f7:	or     bh,ch
  41e9f9:	mov    ds:0x6d849ce5,eax
  41e9fe:	sbb    eax,0x2621d5b
  41ea03:	mov    ecx,0x59af6434
  41ea08:	repnz popa 
  41ea0a:	inc    edi
  41ea0b:	sbb    al,0xdd
  41ea0d:	hlt    
  41ea0e:	fwait
  41ea0f:	into   
  41ea10:	and    ebp,ecx
  41ea12:	and    al,0xf5
  41ea14:	(bad)  
  41ea15:	xchg   edi,eax
  41ea16:	dec    ebp
  41ea17:	scas   al,BYTE PTR es:[edi]
  41ea18:	jo     0x41e9bf
  41ea1a:	add    ebx,ebp
  41ea1c:	mov    dl,0x63
  41ea1e:	(bad)  
  41ea1f:	mov    dl,0x12
  41ea21:	sbb    esi,ebp
  41ea23:	mov    bl,0x41
  41ea25:	sbb    al,0xfe
  41ea27:	push   ebx
  41ea28:	test   BYTE PTR [eax],al
  41ea2a:	dec    ecx
  41ea2b:	and    edx,esi
  41ea2d:	and    DWORD PTR [ebx-0x35],ebx
  41ea30:	xchg   edi,eax
  41ea31:	mov    edx,0x7b0d5bc2
  41ea36:	jno    0x41e9e9
  41ea38:	xchg   edi,eax
  41ea39:	fisttp QWORD PTR [ecx+0x45abe8aa]
  41ea3f:	lds    eax,FWORD PTR [ebx-0x4e]
  41ea42:	jne    0x41ea3c
  41ea44:	jl     0x41e9c8
  41ea46:	mov    ecx,0x8547ee11
  41ea4b:	mov    al,ds:0xfff36cc0
  41ea50:	jno    0x41e9e1
  41ea52:	push   es
  41ea53:	lock into 
  41ea55:	leave  
  41ea56:	add    bh,BYTE PTR [esi]
  41ea58:	(bad)  
  41ea59:	cmp    BYTE PTR ds:0x4792f69b,dh
  41ea5f:	loop   0x41ea55
  41ea61:	sar    DWORD PTR [eax],1
  41ea63:	clc    
  41ea64:	or     ebp,DWORD PTR [edi+0x6e]
  41ea67:	cld    
  41ea68:	push   es
  41ea69:	stos   DWORD PTR es:[edi],eax
  41ea6a:	adc    BYTE PTR [ecx-0x342af007],0x3e
  41ea71:	push   0xffffffd5
  41ea73:	hlt    
  41ea74:	fstp   TBYTE PTR [esi+0x2e3efb90]
  41ea7a:	out    0x7e,eax
  41ea7c:	jmp    0x550396e2
  41ea81:	sub    bl,BYTE PTR [edi]
  41ea83:	fs jl  0x41eaec
  41ea86:	fisubr DWORD PTR [ebp-0x5e4fe7e8]
  41ea8c:	jne    0x41eaaa
  41ea8e:	hlt    
  41ea8f:	outs   dx,BYTE PTR ds:[esi]
  41ea90:	ret    0xa25c
  41ea93:	cwde   
  41ea94:	mov    ah,0x19
  41ea96:	jnp    0x41ea60
  41ea98:	cs inc ebx
  41ea9a:	mov    bl,0xcc
  41ea9c:	sub    eax,0x3b1e5b1f
  41eaa1:	nop
  41eaa2:	dec    eax
  41eaa3:	jno    0x41ea73
  41eaa5:	call   0x80fe:0x6be7e37c
  41eaac:	jno    0x41ea87
  41eaae:	cmc    
  41eaaf:	and    ch,0xae
  41eab2:	mov    eax,0xf61a5fc
  41eab7:	inc    esp
  41eab8:	jb     0x41eb0b
  41eaba:	jnp    0x41eaf8
  41eabc:	cdq    
  41eabd:	call   0xd9328d37
  41eac2:	sub    esi,DWORD PTR [esi]
  41eac4:	push   cs
  41eac5:	add    DWORD PTR [ebx+edx*4+0x49],ecx
  41eac9:	imul   ecx,DWORD PTR [ebx+0x12fd5561],0x69
  41ead0:	jne    0x41eb1b
  41ead2:	aaa    
  41ead3:	push   edx
  41ead4:	mov    WORD PTR [edi-0x34b6d9ad],ds
  41eada:	fild   QWORD PTR [eax-0x53be63a6]
  41eae0:	jae    0x41eb07
  41eae2:	rol    DWORD PTR [eax-0x34],1
  41eae5:	push   ss
  41eae6:	mov    esi,0xf011c78b
  41eaeb:	shl    BYTE PTR [ebp+0x42ab9460],0x6e
  41eaf2:	(bad)  
  41eaf3:	fisttp QWORD PTR [edi+ebp*1-0x3baf4732]
  41eafa:	fs jp  0x41eaa3
  41eafd:	or     dh,BYTE PTR ds:0x8abf444
  41eb03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb04:	shl    ebp,1
  41eb06:	fistp  WORD PTR [ecx+0x7d]
  41eb09:	retf   
  41eb0a:	inc    eax
  41eb0b:	push   0xd3745235
  41eb10:	jmp    0x30b698c
  41eb15:	jmp    0x41eb36
  41eb17:	(bad)  
  41eb18:	jmp    0x41eb18
  41eb1a:	fistp  QWORD PTR [eax]
  41eb1c:	and    al,0xb8
  41eb1e:	(bad)  
  41eb20:	outs   dx,BYTE PTR ds:[esi]
  41eb21:	test   DWORD PTR [edi+0x6b9e1fff],edx
  41eb27:	inc    esp
  41eb28:	inc    ebp
  41eb29:	cmp    eax,0xa71b620b
  41eb2e:	ins    BYTE PTR es:[edi],dx
  41eb2f:	gs jae 0x41eac7
  41eb32:	fimul  DWORD PTR [edx]
  41eb34:	add    esi,edi
  41eb36:	adc    eax,0x74cc0c43
  41eb3b:	inc    edx
  41eb3c:	outs   dx,BYTE PTR ds:[esi]
  41eb3d:	inc    eax
  41eb3e:	xor    al,0xc6
  41eb40:	ret    0x9986
  41eb43:	mov    WORD PTR gs:[edi-0x363b859d],?
  41eb4a:	test   eax,0xebcb6eea
  41eb4f:	cmp    BYTE PTR [edx+0x54],ch
  41eb52:	scas   eax,DWORD PTR es:[edi]
  41eb53:	or     ebp,esp
  41eb55:	nop
  41eb56:	and    DWORD PTR [ebp-0x38],0xffffffe1
  41eb5a:	push   es
  41eb5b:	and    al,0x99
  41eb5d:	hlt    
  41eb5e:	jnp    0x41eb95
  41eb60:	xor    DWORD PTR [ebx+0x5c],0x1c78f973
  41eb67:	aam    0x29
  41eb69:	neg    al
  41eb6b:	pop    edx
  41eb6c:	cmp    BYTE PTR [esi+eiz*2+0x6da8909f],bl
  41eb73:	fdiv   DWORD PTR [eax+ebp*2]
  41eb76:	loopne 0x41eba8
  41eb78:	ror    DWORD PTR gs:0x9f6ea228,cl
  41eb7f:	push   edx
  41eb80:	pop    ss
  41eb81:	pop    ecx
  41eb82:	scas   eax,DWORD PTR es:[edi]
  41eb83:	xchg   ebx,eax
  41eb84:	fwait
  41eb85:	jge    0x41ebae
  41eb87:	mov    ebp,0xf30e433b
  41eb8c:	sub    cl,BYTE PTR [edi+esi*1+0x62]
  41eb90:	sub    BYTE PTR [ebx-0x3dbe6479],0xa9
  41eb97:	repz test BYTE PTR [eax+0x40d83bc9],ah
  41eb9e:	outs   dx,BYTE PTR ds:[esi]
  41eb9f:	and    esp,DWORD PTR [ecx]
  41eba1:	ficom  WORD PTR [edx]
  41eba3:	cmc    
  41eba4:	add    ch,al
  41eba6:	fisubr WORD PTR [edi+0x6f]
  41eba9:	(bad)  
  41ebaa:	cmc    
  41ebab:	popa   
  41ebac:	pop    ebp
  41ebad:	aas    
  41ebae:	lods   al,BYTE PTR ds:[esi]
  41ebaf:	retf   
  41ebb0:	push   ebp
  41ebb1:	mov    ds:0xa93600a6,al
  41ebb6:	fwait
  41ebb7:	lods   eax,DWORD PTR ds:[esi]
  41ebb8:	fnsave [esi+ebx*8]
  41ebbb:	out    0x99,eax
  41ebbd:	sbb    bl,BYTE PTR [ebx]
  41ebbf:	cmc    
  41ebc0:	push   esi
  41ebc1:	jp     0x41ebb8
  41ebc3:	and    DWORD PTR [esi+0x593d2772],esi
  41ebc9:	into   
  41ebca:	gs xor edx,eax
  41ebcd:	mov    esi,0xed2b51b5
  41ebd2:	lods   al,BYTE PTR ds:[esi]
  41ebd3:	repnz inc esi
  41ebd5:	adc    al,0xb0
  41ebd7:	or     al,0xb8
  41ebd9:	repnz fidivr WORD PTR [eax]
  41ebdc:	mov    cl,0xb
  41ebde:	or     ch,bh
  41ebe0:	and    ecx,DWORD PTR [esi-0x24]
  41ebe3:	ret    
  41ebe4:	or     eax,eax
  41ebe6:	xor    al,0x12
  41ebe8:	popf   
  41ebe9:	sar    BYTE PTR [edx-0x80],0x9f
  41ebed:	push   ds
  41ebee:	xor    esi,DWORD PTR [ecx+0x5c57794f]
  41ebf4:	or     edx,ebx
  41ebf6:	mov    eax,0xdb4c5b73
  41ebfb:	out    0xc,eax
  41ebfd:	push   ebx
  41ebfe:	pop    ebx
  41ebff:	ret    
  41ec00:	fiadd  DWORD PTR [eax+0x59c33066]
  41ec06:	jbe    0x41ec0b
  41ec08:	in     eax,0x9b
  41ec0a:	ins    BYTE PTR es:[edi],dx
  41ec0b:	lods   eax,DWORD PTR ds:[esi]
  41ec0c:	xchg   esi,eax
  41ec0d:	mov    BYTE PTR [ebx-0x3e7612c2],ah
  41ec13:	and    edx,ebx
  41ec15:	bts    DWORD PTR [ebx-0x2b],esi
  41ec19:	mov    dl,0x6d
  41ec1b:	push   edx
  41ec1c:	mov    edx,0x317cc913
  41ec21:	wrmsr  
  41ec23:	pop    ecx
  41ec24:	mov    BYTE PTR [eax-0x723c2dc5],al
  41ec2a:	and    al,0xe2
  41ec2c:	dec    ecx
  41ec2d:	das    
  41ec2e:	sbb    DWORD PTR [edi+edi*1],eax
  41ec31:	sub    dl,BYTE PTR [eax+0x6f1404bb]
  41ec37:	mov    DWORD PTR [eax-0x3b2b7734],edx
  41ec3d:	fstp   st(4)
  41ec3f:	repz push cs
  41ec41:	outs   dx,DWORD PTR ds:[esi]
  41ec42:	mov    bl,0xf0
  41ec44:	mov    ch,0x9
  41ec46:	test   eax,0x740d628f
  41ec4b:	ret    0xd137
  41ec4e:	aad    0x85
  41ec50:	push   cs
  41ec51:	mov    ecx,0x98d7c109
  41ec56:	and    bh,BYTE PTR [ecx+ebx*2-0x21]
  41ec5a:	scas   eax,DWORD PTR es:[edi]
  41ec5b:	fld1   
  41ec5d:	xlat   BYTE PTR ds:[ebx]
  41ec5e:	arpl   WORD PTR [esi],bp
  41ec60:	in     al,0xde
  41ec62:	push   esp
  41ec63:	xor    ah,BYTE PTR [esi]
  41ec65:	(bad)  
  41ec67:	retf   
  41ec68:	or     al,0xc4
  41ec6a:	clc    
  41ec6b:	jnp    0x41ec58
  41ec6d:	(bad)  cs:0x8ae8e33d
  41ec74:	sbb    dh,BYTE PTR [esp+ebx*1-0x549b3082]
  41ec7b:	stos   DWORD PTR es:[edi],eax
  41ec7c:	(bad)  
  41ec7d:	es push ecx
  41ec7f:	stos   BYTE PTR es:[edi],al
  41ec80:	pop    ss
  41ec81:	dec    ecx
  41ec82:	push   ebx
  41ec83:	inc    edi
  41ec84:	add    BYTE PTR [edi+ebx*2-0x14],dl
  41ec88:	xor    bl,BYTE PTR [esi-0x18]
  41ec8b:	mov    BYTE PTR [ebx+0x52d8a4c3],ch
  41ec91:	xor    eax,eax
  41ec93:	push   ebp
  41ec94:	jl     0x41ec5d
  41ec96:	mov    cl,0x7f
  41ec99:	sub    BYTE PTR [eax+0x12fc9683],ah
  41ec9f:	jmp    0x41ec56
  41eca1:	cs dec ecx
  41eca3:	cmc    
  41eca4:	inc    ebp
  41eca5:	mov    ebp,0xbf81e93c
  41ecaa:	mov    cl,BYTE PTR [ecx+0xb5bb1b]
  41ecb0:	mov    dh,0x55
  41ecb2:	into   
  41ecb3:	add    esp,DWORD PTR ds:0xa5baabe
  41ecb9:	ret    0x9e5e
  41ecbc:	fwait
  41ecbd:	js     0x41ecba
  41ecbf:	push   ebp
  41ecc0:	sub    al,0xe7
  41ecc2:	and    esi,DWORD PTR [edi+edx*2+0x218dd396]
  41ecc9:	mov    edx,0x2d15be82
  41ecce:	jo     0x41ec6e
  41ecd0:	fisttp WORD PTR [edx-0x36]
  41ecd3:	test   ch,al
  41ecd5:	loop   0x41ed39
  41ecd7:	mov    ah,0x96
  41ecd9:	adc    DWORD PTR [edx],esp
  41ecdb:	loopne 0x41ed18
  41ecdd:	push   ebp
  41ecde:	push   ebp
  41ecdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ece0:	mov    ds:0x6fc9938e,al
  41ece5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ece6:	sub    BYTE PTR [ecx-0x21],0x44
  41ecea:	ds push ss
  41ecec:	add    ah,BYTE PTR [edi]
  41ecee:	sbb    al,0x7b
  41ecf0:	push   es
  41ecf1:	adc    esp,DWORD PTR [ebp+0x5283919]
  41ecf7:	mov    DWORD PTR [edx+0x6e],esi
  41ecfa:	sti    
  41ecfb:	inc    ecx
  41ecfc:	test   al,0xd9
  41ecfe:	ins    BYTE PTR es:[edi],dx
  41ecff:	fadd   DWORD PTR [ebx+0x10]
  41ed02:	pop    edi
  41ed03:	dec    esi
  41ed04:	pushf  
  41ed05:	push   eax
  41ed06:	sub    al,0x32
  41ed08:	retf   
  41ed09:	test   BYTE PTR [eax],ah
  41ed0b:	ror    BYTE PTR [esi-0x1b],0x8a
  41ed0f:	push   ss
  41ed10:	fadd   DWORD PTR [eax-0x27feda70]
  41ed16:	mov    edx,0x617a2011
  41ed1b:	pop    esi
  41ed1c:	test   al,0xf
  41ed1e:	sbb    eax,0x9140fb8c
  41ed23:	jb     0x41ed97
  41ed25:	push   edx
  41ed26:	xchg   BYTE PTR [esi+0x19],ah
  41ed29:	cs in  al,dx
  41ed2b:	bswap  esi
  41ed2d:	retf   0x5796
  41ed30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed31:	xor    ebx,ecx
  41ed33:	xor    BYTE PTR [eax+0x75ce1636],al
  41ed39:	or     DWORD PTR [edx-0xd],esi
  41ed3c:	pop    edx
  41ed3d:	scas   eax,DWORD PTR es:[edi]
  41ed3e:	push   cs
  41ed3f:	rol    DWORD PTR [ecx],0x48
  41ed42:	es fdiv st(6),st
  41ed45:	cmp    eax,0xf42c3f7f
  41ed4a:	ins    BYTE PTR es:[edi],dx
  41ed4b:	test   al,0xe8
  41ed4d:	mov    BYTE PTR [esi],bh
  41ed4f:	xchg   esp,eax
  41ed50:	pop    edx
  41ed51:	int3   
  41ed52:	loopne 0x41edaa
  41ed54:	jns    0x41ed22
  41ed56:	jl     0x41ed9c
  41ed58:	dec    ebp
  41ed59:	mov    edx,0x595ff035
  41ed5e:	jl     0x41ed8e
  41ed60:	lock js 0x41ed81
  41ed63:	jmp    0xe495:0xadf1a504
  41ed6a:	inc    ecx
  41ed6b:	jns    0xbe315ea4
  41ed71:	sbb    al,0x87
  41ed73:	xchg   DWORD PTR [ecx],ecx
  41ed75:	ss jecxz 0x41edb2
  41ed78:	scas   al,BYTE PTR es:[edi]
  41ed79:	je     0x41ed0a
  41ed7b:	(bad)  
  41ed7c:	ror    DWORD PTR [ebx+0x6561c5b1],1
  41ed82:	pop    ebp
  41ed83:	inc    DWORD PTR [eax-0x35]
  41ed86:	in     al,0x87
  41ed88:	mov    dl,0x56
  41ed8a:	xor    cl,BYTE PTR [edi+eiz*1]
  41ed8d:	cmp    ebx,ebx
  41ed8f:	xor    eax,0xc83ac472
  41ed94:	loopne 0x41ed33
  41ed96:	sbb    esp,DWORD PTR ds:[ebx-0x1b64fa81]
  41ed9d:	push   ecx
  41ed9e:	xor    edi,DWORD PTR [esi]
  41eda0:	repz jl 0x41ed7a
  41eda3:	pop    esi
  41eda4:	pop    es
  41eda5:	mov    al,0xe2
  41eda7:	je     0x41edef
  41eda9:	fnstenv [edi+0x7]
  41edac:	push   edi
  41edad:	dec    esi
  41edae:	lods   eax,DWORD PTR ds:[esi]
  41edaf:	shl    DWORD PTR [edi],cl
  41edb1:	cmp    DWORD PTR [edx+0x5cb79ebe],edx
  41edb7:	enter  0xdcb8,0x92
  41edbb:	sbb    eax,0xe8b08ad2
  41edc0:	mov    ebx,0x54df5091
  41edc5:	fisubr WORD PTR [edx+0x5d]
  41edc8:	mov    bl,0xb6
  41edca:	xor    BYTE PTR [ebx],bl
  41edcc:	cwde   
  41edcd:	out    dx,al
  41edce:	jg     0x41ee05
  41edd0:	pop    ebx
  41edd1:	(bad)  
  41edd2:	and    cl,BYTE PTR [edx]
  41edd4:	push   edx
  41edd5:	cdq    
  41edd6:	inc    edx
  41edd7:	mov    edi,0x7bb30f96
  41eddc:	rol    DWORD PTR [eax+0x1be9e2b3],cl
  41ede2:	adc    eax,0x1b960fa3
  41ede7:	test   DWORD PTR [edi-0x3f],edi
  41edea:	bound  eax,QWORD PTR [edx*8-0x2a8fe520]
  41edf1:	push   0x58
  41edf3:	pop    esi
  41edf4:	int    0x69
  41edf6:	mov    bh,0x51
  41edf8:	pushf  
  41edf9:	mov    edi,0xc10d922a
  41edfe:	sar    BYTE PTR [eax+0x5daa651b],cl
  41ee04:	adc    ch,bl
  41ee06:	sti    
  41ee07:	xchg   BYTE PTR [ebx],ah
  41ee09:	pop    esi
  41ee0a:	add    DWORD PTR [edi+0x1fa2],0x0
  41ee11:	add    BYTE PTR [edx+0x51],dl
  41ee14:	cmp    BYTE PTR [ebx],al
  41ee16:	cmp    ebp,DWORD PTR [ebx+0x7b]
  41ee19:	push   ecx
  41ee1a:	pop    edx
  41ee1b:	mov    ch,0xf5
  41ee1d:	lahf   
  41ee1e:	sbb    DWORD PTR [edi+0x69118873],ebx
  41ee24:	add    DWORD PTR [eax],eax
  41ee26:	hlt    
  41ee27:	add    al,0x0
  41ee29:	add    cl,dl
  41ee2b:	sahf   
  41ee2c:	mov    al,0x49
  41ee2e:	jae    0x41ee67
  41ee30:	xchg   ebx,eax
  41ee31:	inc    ecx
  41ee32:	loopne 0x41ee51
  41ee34:	fcomp  st(3)
  41ee36:	inc    ebx
  41ee37:	or     DWORD PTR [ebx-0x6cafc348],0x554e6cee
  41ee41:	js     0x41ee7f
  41ee43:	inc    edi
  41ee44:	rol    dl,cl
  41ee46:	inc    esp
  41ee47:	mov    ebp,0x465ddac3
  41ee4c:	pop    ebp
  41ee4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee4e:	mov    ebp,edx
  41ee50:	(bad)  
  41ee51:	sbb    cl,BYTE PTR [ebp+0x39]
  41ee54:	xchg   ecx,eax
  41ee55:	mov    ah,0x26
  41ee57:	(bad)  
  41ee58:	mov    esi,0x7995e205
  41ee5d:	pop    ds
  41ee5e:	pop    ds
  41ee5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee60:	aam    0x54
  41ee62:	cwde   
  41ee63:	daa    
  41ee64:	sub    al,0x82
  41ee66:	push   ecx
  41ee67:	aaa    
  41ee68:	test   eax,0x855dbf77
  41ee6d:	mov    bh,0xb2
  41ee6f:	out    0x92,eax
  41ee71:	mov    ?,WORD PTR [ecx+0x167b8cb1]
  41ee77:	sar    DWORD PTR [esi],cl
  41ee79:	pop    ebx
  41ee7a:	xchg   edx,esp
  41ee7c:	jmp    0x59b0b1ae
  41ee81:	arpl   WORD PTR [edx],si
  41ee83:	retf   
  41ee84:	dec    eax
  41ee85:	shr    DWORD PTR [edi-0x1d],0x8a
  41ee89:	les    ecx,FWORD PTR [ecx]
  41ee8b:	jecxz  0x41ee77
  41ee8d:	xchg   esp,eax
  41ee8e:	adc    al,0x4b
  41ee90:	ds jns 0x41ee5c
  41ee93:	adc    DWORD PTR [edi-0x4e8df5ca],esp
  41ee99:	dec    edx
  41ee9a:	test   BYTE PTR [ecx-0x7a],0xc
  41ee9e:	stos   BYTE PTR es:[edi],al
  41ee9f:	mov    DWORD PTR [esi+0x2bffcad],ebp
  41eea5:	mov    esi,0xf59213c4
  41eeaa:	div    DWORD PTR [ebx-0x7f10f49b]
  41eeb0:	xor    al,0xe5
  41eeb2:	dec    esi
  41eeb3:	sub    ch,BYTE PTR [esi]
  41eeb5:	push   edi
  41eeb6:	ja     0x41eeb3
  41eeb8:	gs inc ecx
  41eeba:	sbb    eax,0x11c6ffa4
  41eebf:	mov    BYTE PTR ds:0x1d905d2e,bl
  41eec5:	pop    esi
  41eec6:	xor    cl,BYTE PTR [ebx-0x6fc9b9ea]
  41eecc:	mov    ch,0x2b
  41eece:	ja     0x41eef2
  41eed0:	add    eax,DWORD PTR [edi]
  41eed2:	out    dx,al
  41eed3:	fdivr  DWORD PTR [esi]
  41eed5:	js     0x41eeda
  41eed7:	int    0xce
  41eed9:	(bad)  
  41eeda:	pop    ss
  41eedb:	or     eax,0x318235f7
  41eee0:	aas    
  41eee1:	outs   dx,DWORD PTR ds:[esi]
  41eee2:	sub    al,0x21
  41eee4:	enter  0x40cd,0x8b
  41eee8:	push   esi
  41eee9:	fnstenv [ecx+eiz*8-0x363a365f]
  41eef0:	push   ebx
  41eef1:	bound  ecx,QWORD PTR [ebx+edx*1]
  41eef4:	jl     0x41ee8f
  41eef6:	cmp    eax,0x104d8140
  41eefb:	les    ebp,FWORD PTR ss:[ebx-0x5e]
  41eeff:	and    BYTE PTR [eax+ebp*4+0x2220f7f1],cl
  41ef06:	les    esp,FWORD PTR [eax-0xaeb20cd]
  41ef0c:	outs   dx,BYTE PTR ds:[esi]
  41ef0d:	addr16 retf 
  41ef0f:	aam    0xd0
  41ef11:	add    eax,0x7e36caf
  41ef16:	mov    al,0x5c
  41ef18:	push   edx
  41ef19:	in     eax,dx
  41ef1a:	mov    dl,0x35
  41ef1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef1d:	pop    ds
  41ef1e:	add    eax,0xfbb647bb
  41ef23:	stos   DWORD PTR es:[edi],eax
  41ef24:	mov    bh,0x97
  41ef26:	adc    al,0xfe
  41ef28:	dec    esi
  41ef29:	jle    0x41ef5e
  41ef2b:	(bad)  
  41ef2c:	mov    esp,0x801cdf1
  41ef31:	stc    
  41ef32:	push   cs
  41ef33:	test   DWORD PTR [esi+0x73],edx
  41ef36:	mov    ds:0x4cddbbc9,eax
  41ef3b:	or     ah,bl
  41ef3d:	mov    ch,0x83
  41ef3f:	clc    
  41ef40:	sbb    eax,0x9a55b40b
  41ef45:	ret    0x2ab7
  41ef48:	xlat   BYTE PTR ds:[ebx]
  41ef49:	lea    esp,[ecx]
  41ef4b:	lea    eax,[esi+0x16]
  41ef4e:	dec    edx
  41ef4f:	jge    0x41eef0
  41ef51:	mov    esp,0x8b7d3258
  41ef56:	ficomp WORD PTR [ecx+0xa19c976]
  41ef5c:	sub    dl,bl
  41ef5e:	dec    eax
  41ef5f:	push   0xb
  41ef61:	push   ebx
  41ef62:	dec    eax
  41ef63:	scas   al,BYTE PTR es:[edi]
  41ef64:	adc    eax,DWORD PTR [ebp-0x3b280e0c]
  41ef6a:	xor    dl,dl
  41ef6c:	inc    esp
  41ef6d:	mov    ebx,0xef2735b8
  41ef72:	nop
  41ef73:	fcos   
  41ef75:	out    0xdc,al
  41ef77:	and    BYTE PTR [ecx+0x33f1587],ch
  41ef7d:	cs push ebp
  41ef7f:	mov    dl,0x8e
  41ef81:	jb     0x41ef0a
  41ef83:	adc    al,0x18
  41ef85:	cmc    
  41ef86:	es dec sp
  41ef89:	outs   dx,DWORD PTR ds:[esi]
  41ef8a:	retf   
  41ef8b:	jno    0x41efe0
  41ef8d:	imul   esp,DWORD PTR ds:0x239b3540,0x3e5e2861
  41ef97:	cmp    al,0xa5
  41ef99:	jo     0x41efe3
  41ef9b:	jecxz  0x41ef62
  41ef9d:	out    0xd5,al
  41ef9f:	repnz sbb DWORD PTR [edi-0x6d1d2e08],0x8f8e40ff
  41efaa:	cmc    
  41efab:	jb     0x41efc8
  41efad:	(bad)  
  41efae:	dec    esp
  41efaf:	test   eax,0x8db00dd9
  41efb4:	stos   DWORD PTR es:[edi],eax
  41efb5:	pop    DWORD PTR [edx+0x54]
  41efb8:	xor    esp,DWORD PTR [esi]
  41efba:	cmp    DWORD PTR [eax-0x2965b54a],0xba4c00e
  41efc4:	inc    ebx
  41efc5:	mov    eax,0xeae619c
  41efca:	mov    WORD PTR [edx-0x35],cs
  41efcd:	ss int 0x72
  41efd0:	ret    0xb6c4
  41efd3:	and    bl,ch
  41efd5:	les    edx,FWORD PTR [eax+eiz*2]
  41efd8:	imul   ebp,DWORD PTR [edi+0x494a3e08],0xa2c41220
  41efe2:	jmp    0xe36ade46
  41efe7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efe8:	or     al,0x69
  41efea:	inc    edx
  41efeb:	jns    0x41f06c
  41efed:	inc    ebx
  41efee:	xor    edx,ebp
  41eff0:	ins    DWORD PTR es:[edi],dx
  41eff1:	test   eax,0x4b2a41ec
  41eff6:	call   0x15a8:0xb8aa21
  41effd:	sbb    dh,BYTE PTR [ecx+ecx*1-0x3093c1e6]
  41f004:	pop    ecx
  41f005:	inc    edx
  41f006:	(bad)  
  41f007:	clc    
  41f008:	pop    edi
  41f009:	out    0x54,al
  41f00b:	mov    gs,WORD PTR [esi-0x636b3095]
  41f011:	test   eax,0xb323f2e3
  41f016:	adc    DWORD PTR [edx+0x43],ecx
  41f019:	lods   al,BYTE PTR ds:[esi]
  41f01a:	std    
  41f01b:	mov    eax,ds:0x246e3ec6
  41f020:	adc    eax,0x3b4c074a
  41f025:	xlat   BYTE PTR ds:[ebx]
  41f026:	les    ebp,FWORD PTR [ebp+edi*4+0x7]
  41f02a:	les    edx,FWORD PTR [esi]
  41f02c:	das    
  41f02d:	pop    esp
  41f02e:	addr16 sti 
  41f030:	in     al,0xd
  41f032:	fnsave [edi]
  41f034:	jo     0x41efe2
  41f036:	ss dec esp
  41f038:	jle    0x41f022
  41f03a:	add    ecx,DWORD PTR [ecx-0x764af773]
  41f040:	add    ah,BYTE PTR [edx+0x3234e291]
  41f046:	jo     0x41efd8
  41f048:	outs   dx,DWORD PTR ds:[esi]
  41f049:	leave  
  41f04a:	sbb    dl,BYTE PTR [esi+ebx*8-0x1ef38846]
  41f051:	rcr    DWORD PTR [ebx],0x64
  41f054:	rol    eax,1
  41f056:	dec    esi
  41f057:	xchg   ebx,eax
  41f058:	xchg   edx,eax
  41f059:	add    BYTE PTR [edi-0x4c],al
  41f05c:	pop    ds
  41f05d:	stos   BYTE PTR es:[edi],al
  41f05e:	mov    ss,WORD PTR [eax+0x4f]
  41f061:	mov    ebp,0x70f0b37
  41f066:	mov    esp,0x6f6fe279
  41f06b:	cmp    BYTE PTR [edi],0x55
  41f06e:	and    edi,DWORD PTR [edx+0x45]
  41f071:	adc    DWORD PTR [ebp-0x50],eax
  41f074:	mov    ah,0x31
  41f076:	test   eax,0xf87c6da2
  41f07b:	xchg   edx,eax
  41f07c:	mov    esp,0xdd095033
  41f081:	or     DWORD PTR [esi],eax
  41f083:	xor    eax,0xb73bdad3
  41f088:	or     BYTE PTR [esi+0x14],al
  41f08b:	stos   DWORD PTR es:[edi],eax
  41f08c:	imul   esi,edi,0x5e
  41f08f:	or     esi,DWORD PTR [ebx]
  41f091:	test   eax,0x402cf387
  41f096:	mov    dl,0x85
  41f098:	mul    BYTE PTR [ebx-0x744ebfa4]
  41f09e:	addr16 xchg edi,eax
  41f0a0:	add    DWORD PTR ds:0x1ec4d0a3,esp
  41f0a6:	jno    0x41f0fb
  41f0a8:	data16 stc 
  41f0aa:	sub    DWORD PTR [ebp-0xc],eax
  41f0ad:	mov    al,ds:0x6f79b9a2
  41f0b2:	dec    ebp
  41f0b3:	and    al,0xc0
  41f0b5:	mov    dl,0x6a
  41f0b7:	jbe    0x41f0a1
  41f0b9:	mov    al,0x4
  41f0bb:	sub    eax,eax
  41f0bd:	sub    eax,0x973f2132
  41f0c2:	pop    ds
  41f0c3:	xor    eax,0xaa55ca2a
  41f0c8:	sub    BYTE PTR [ecx+ebx*8+0x74],ah
  41f0cc:	inc    eax
  41f0cd:	and    BYTE PTR [esi],bl
  41f0cf:	xchg   BYTE PTR ds:0x3d0449e6,cl
  41f0d5:	push   ds
  41f0d6:	inc    edi
  41f0d7:	lds    edi,FWORD PTR [ebx]
  41f0d9:	push   edx
  41f0da:	sbb    al,0xc8
  41f0dc:	int3   
  41f0dd:	gs jmp 0x41f097
  41f0e0:	loopne 0x41f131
  41f0e2:	cmp    DWORD PTR [esi],0x595cb534
  41f0e8:	das    
  41f0e9:	sub    DWORD PTR [edx+0x4f],0x32
  41f0ed:	sub    eax,0x2a251c44
  41f0f2:	sbb    ecx,DWORD PTR [ebx]
  41f0f4:	repnz sub ch,ah
  41f0f7:	in     al,0x69
  41f0f9:	xchg   ebx,eax
  41f0fa:	xor    al,0x9c
  41f0fc:	outs   dx,DWORD PTR ds:[esi]
  41f0fd:	jg     0x41f107
  41f0ff:	jns    0x41f0cd
  41f101:	mov    ds:0x94e2aa0e,al
  41f106:	fnstenv [esi]
  41f108:	or     DWORD PTR [ecx],edi
  41f10a:	mov    esp,0x733059da
  41f10f:	cmc    
  41f110:	cdq    
  41f111:	(bad)  
  41f112:	cli    
  41f113:	loop   0x41f0a0
  41f115:	daa    
  41f116:	mov    WORD PTR [ebp+0x10],cs
  41f119:	jbe    0x41f0ab
  41f11b:	or     eax,0x59c98b35
  41f120:	pop    esp
  41f121:	fs sub BYTE PTR ss:[ebp-0x15],ah
  41f126:	mov    ds:0x2f722b2f,eax
  41f12b:	sbb    eax,0x96eece94
  41f130:	mov    al,ds:0x39e582fa
  41f135:	inc    eax
  41f136:	fwait
  41f137:	and    edi,ebx
  41f139:	sub    BYTE PTR [eax],dl
  41f13b:	pop    esi
  41f13c:	int3   
  41f13d:	add    al,0xce
  41f13f:	pushf  
  41f140:	ror    DWORD PTR [edi],1
  41f142:	sar    BYTE PTR [ebp+0x45],1
  41f145:	lahf   
  41f146:	and    DWORD PTR [ecx-0x6e],ecx
  41f149:	pusha  
  41f14a:	push   esp
  41f14b:	test   BYTE PTR [ecx+0x364ea11],ch
  41f151:	xchg   BYTE PTR [edx-0x20],al
  41f154:	pop    es
  41f155:	scas   al,BYTE PTR es:[edi]
  41f156:	in     eax,dx
  41f157:	push   esp
  41f158:	jbe    0x41f1c4
  41f15a:	out    0x95,eax
  41f15c:	push   ss
  41f15d:	and    al,0xb1
  41f15f:	mov    ch,0x43
  41f161:	out    0xea,eax
  41f163:	mov    dl,0xb4
  41f165:	in     al,0x27
  41f167:	dec    edi
  41f168:	lds    edi,FWORD PTR [esi]
  41f16a:	(bad)  
  41f16b:	mov    esp,0xab5f37e5
  41f170:	mov    dl,0xe0
  41f172:	add    DWORD PTR [esp+0x62],edx
  41f176:	adc    DWORD PTR [eax],esp
  41f178:	adc    DWORD PTR [ebx-0x1076a00b],ecx
  41f17e:	pusha  
  41f17f:	pop    es
  41f180:	sub    DWORD PTR [esi+0xcd5d7e7],eax
  41f186:	add    esi,eax
  41f188:	pop    edi
  41f189:	dec    edx
  41f18a:	ins    DWORD PTR es:[edi],dx
  41f18b:	adc    dl,BYTE PTR [ecx-0x6a]
  41f18e:	jl     0x41f1c7
  41f190:	push   edx
  41f191:	push   esp
  41f192:	cs jmp 0xd0357558
  41f198:	(bad)  
  41f19b:	outs   dx,DWORD PTR ds:[esi]
  41f19c:	dec    ebp
  41f19d:	scas   al,BYTE PTR es:[edi]
  41f19e:	dec    ebx
  41f19f:	in     al,0xb3
  41f1a1:	pop    edi
  41f1a2:	(bad)  
  41f1a3:	fadd   DWORD PTR [ecx]
  41f1a5:	ss push esi
  41f1a7:	shr    ebx,1
  41f1a9:	icebp  
  41f1aa:	std    
  41f1ab:	retf   
  41f1ac:	mov    al,ds:0x8e2c2c04
  41f1b1:	mov    es,WORD PTR [ecx+0x7e]
  41f1b4:	adc    DWORD PTR [edi+0x7b],edi
  41f1b7:	adc    ebp,edx
  41f1b9:	mov    dh,0x9d
  41f1bb:	out    0x58,al
  41f1bd:	mov    cl,0x82
  41f1bf:	xchg   esp,eax
  41f1c0:	push   esp
  41f1c1:	mov    dl,0x65
  41f1c3:	stc    
  41f1c4:	into   
  41f1c5:	jg     0x41f14a
  41f1c7:	aaa    
  41f1c8:	out    dx,al
  41f1c9:	(bad)  
  41f1ca:	scas   eax,DWORD PTR es:[edi]
  41f1cb:	retf   0x6a83
  41f1ce:	fistp  WORD PTR [esi]
  41f1d0:	in     eax,0x26
  41f1d2:	int    0xb3
  41f1d4:	push   es
  41f1d5:	lock inc esi
  41f1d7:	ror    esp,1
  41f1d9:	sbb    DWORD PTR [eax+0x13b33f4f],ebp
  41f1df:	icebp  
  41f1e0:	std    
  41f1e1:	jge    0x41f218
  41f1e3:	int    0x6d
  41f1e5:	and    DWORD PTR [edx],edi
  41f1e7:	fild   DWORD PTR [esi]
  41f1e9:	out    0x4d,eax
  41f1eb:	mov    ecx,0xc556c550
  41f1f0:	(bad)  
  41f1f1:	int    0x88
  41f1f3:	xor    dh,BYTE PTR [eax+edi*1+0x36]
  41f1f7:	dec    DWORD PTR [ebx-0x7c43a13]
  41f1fd:	fld    QWORD PTR [esi-0x68]
  41f200:	lock inc BYTE PTR ds:0x8786ee04
  41f207:	lods   eax,DWORD PTR es:[esi]
  41f209:	dec    esi
  41f20a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f20b:	scas   al,BYTE PTR es:[edi]
  41f20c:	jecxz  0x41f27f
  41f20e:	daa    
  41f20f:	call   0xf0bb:0xfbad7a7d
  41f216:	jecxz  0x41f20d
  41f218:	adc    esp,DWORD PTR [eax+ebx*1-0x30769336]
  41f21f:	mov    ch,BYTE PTR [esi+edx*4-0x39]
  41f223:	test   ch,ah
  41f225:	sub    al,0xa2
  41f227:	neg    al
  41f229:	adc    edx,edx
  41f22b:	mov    dh,0x5a
  41f22d:	jbe    0x41f27a
  41f22f:	or     eax,0x5ebc9cee
  41f234:	ss call 0x6e6dc8de
  41f23a:	inc    ebx
  41f23b:	and    cl,al
  41f23d:	xchg   ah,cl
  41f23f:	mov    ebp,0x645118e6
  41f244:	dec    edi
  41f245:	loope  0x41f261
  41f247:	enter  0x776b,0xfb
  41f24b:	loopne 0x41f21d
  41f24d:	fild   QWORD PTR [esi+eiz*1-0x25]
  41f251:	repnz xchg edi,eax
  41f253:	push   es
  41f254:	xchg   edi,eax
  41f255:	adc    ch,BYTE PTR [ebp+0x1e]
  41f258:	test   DWORD PTR [ecx-0x9036f98],edi
  41f25e:	mov    ah,0xd6
  41f260:	push   eax
  41f261:	stos   BYTE PTR es:[edi],al
  41f262:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f263:	push   0x42
  41f265:	mov    WORD PTR [edi+0x28],ds
  41f268:	sub    ch,BYTE PTR [edx+0x5dda32cc]
  41f26e:	ins    BYTE PTR es:[edi],dx
  41f26f:	sbb    al,0x5b
  41f271:	leave  
  41f272:	xlat   BYTE PTR ds:[ebx]
  41f273:	(bad)  
  41f274:	mov    bl,0x41
  41f276:	push   ebp
  41f277:	loope  0x41f221
  41f279:	inc    ebp
  41f27a:	call   ecx
  41f27c:	adc    dl,BYTE PTR [ecx]
  41f27e:	ds aad 0x53
  41f281:	mov    esi,0x120d27cb
  41f286:	sub    DWORD PTR [ebp+eiz*4-0xe],0xffffffeb
  41f28b:	mov    ebx,DWORD PTR [eax-0x59056bee]
  41f291:	inc    ebp
  41f292:	add    esi,DWORD PTR [edi]
  41f294:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f295:	retf   
  41f296:	popa   
  41f297:	cdq    
  41f298:	jge    0x41f272
  41f29a:	xchg   ebx,eax
  41f29b:	or     cl,dh
  41f29d:	scas   eax,DWORD PTR es:[edi]
  41f29e:	mov    ebp,0xba58a0f7
  41f2a3:	fsub   DWORD PTR [ecx+0x6b]
  41f2a6:	sub    dh,BYTE PTR [ebp+0x62ed5106]
  41f2ac:	xlat   BYTE PTR ds:[ebx]
  41f2ad:	(bad)  
  41f2ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2af:	dec    ebx
  41f2b0:	ficomp WORD PTR [eax]
  41f2b2:	add    BYTE PTR [eax-0x6bc23837],ah
  41f2b8:	lds    esp,FWORD PTR [edi-0x2c]
  41f2bb:	(bad)  
  41f2bc:	aad    0x5c
  41f2be:	data16 aam 0xf2
  41f2c1:	add    al,0x4a
  41f2c3:	loopne 0x41f31b
  41f2c5:	sahf   
  41f2c6:	mov    bh,0x96
  41f2c8:	fbld   TBYTE PTR [eax+0x24b31502]
  41f2ce:	sub    ebp,DWORD PTR [ecx]
  41f2d0:	mov    BYTE PTR [ecx-0x6d271124],0x21
  41f2d7:	loope  0x41f2d6
  41f2d9:	arpl   WORD PTR [ecx+0x142c4085],cx
  41f2df:	inc    ebp
  41f2e0:	mov    ch,BYTE PTR [ecx]
  41f2e2:	mov    dh,0x20
  41f2e4:	or     BYTE PTR [ecx+0x24],0x18
  41f2e8:	add    eax,0x3e73a9db
  41f2ed:	leave  
  41f2ee:	inc    edi
  41f2ef:	fiadd  WORD PTR [eax]
  41f2f1:	and    al,0xa9
  41f2f3:	push   esi
  41f2f4:	call   0xf4d117c1
  41f2f9:	push   ebx
  41f2fa:	outs   dx,DWORD PTR ds:[esi]
  41f2fb:	lock mov bh,0x29
  41f2fe:	repz push ebx
  41f300:	stc    
  41f301:	adc    BYTE PTR ds:0x2219d97f,dl
  41f307:	inc    esi
  41f308:	or     ah,BYTE PTR [ebp+0x75dbf288]
  41f30e:	push   es
  41f30f:	inc    ecx
  41f310:	xchg   BYTE PTR [eax-0x7da50a6d],cl
  41f316:	mov    bl,0x20
  41f318:	mov    bl,0x9
  41f31a:	push   edi
  41f31b:	lods   eax,DWORD PTR ds:[esi]
  41f31c:	sbb    DWORD PTR [edx],0x0
  41f322:	sub    esp,DWORD PTR [ecx-0x934ebbd]
  41f328:	jg     0x41f2e9
  41f32a:	test   ch,ch
  41f32c:	out    dx,al
  41f32d:	adc    BYTE PTR [edx],0xdf
  41f330:	arpl   WORD PTR [ebp+eax*1-0xbfffe92],si
  41f337:	add    al,0x0
  41f339:	add    BYTE PTR [eax+0x5c1f607],bl
  41f33f:	dec    ebp
  41f340:	lahf   
  41f341:	into   
  41f342:	inc    ecx
  41f343:	ins    BYTE PTR es:[edi],dx
  41f344:	into   
  41f345:	sar    BYTE PTR [edx+0x52],1
  41f348:	ss jne 0x41f2cf
  41f34b:	ss addr16 js 0x41f3c5
  41f34f:	cmp    al,0x85
  41f351:	xor    eax,0xd001896c
  41f356:	out    0xc,eax
  41f358:	mov    fs,WORD PTR [ebp+0x29cc146f]
  41f35e:	and    eax,0xb9dfd31a
  41f363:	mov    esp,0xbe8d4873
  41f368:	leave  
  41f369:	jbe    0x41f3ac
  41f36b:	sar    al,1
  41f36d:	mov    dh,0x7b
  41f36f:	sub    ebp,0xffffffc1
  41f372:	nop
  41f373:	push   eax
  41f374:	fistp  DWORD PTR [ecx]
  41f376:	jae    0x41f368
  41f378:	push   esi
  41f379:	daa    
  41f37a:	xchg   edx,eax
  41f37b:	test   dl,cl
  41f37d:	imul   eax,DWORD PTR ds:0x14ef47a,0x2a1fe002
  41f387:	mov    al,ds:0xa6e5dcd0
  41f38d:	cmp    al,0x8c
  41f38f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f390:	test   DWORD PTR [esi-0x60e56096],eax
  41f396:	push   0x46
  41f398:	and    edx,DWORD PTR ds:0x22a5cca2
  41f39e:	push   ebx
  41f39f:	int    0x9c
  41f3a1:	fwait
  41f3a2:	shl    DWORD PTR [esi],cl
  41f3a4:	and    al,0x67
  41f3a6:	in     eax,dx
  41f3a7:	jb     0x41f3f6
  41f3a9:	lods   al,BYTE PTR ds:[esi]
  41f3aa:	cmp    edi,edx
  41f3ac:	dec    ecx
  41f3ad:	adc    eax,0x37535b68
  41f3b2:	test   ecx,ebp
  41f3b4:	or     eax,0xc1bd0510
  41f3b9:	cmp    ebp,DWORD PTR fs:[ebx]
  41f3bc:	imul   edi,DWORD PTR es:[eax+0x45],0xfc2198e5
  41f3c4:	xlat   BYTE PTR ds:[ebx]
  41f3c5:	ins    DWORD PTR es:[edi],dx
  41f3c6:	mov    bl,0x12
  41f3c8:	jne    0x41f417
  41f3ca:	aas    
  41f3cb:	mov    dh,0x31
  41f3cd:	mov    eax,ds:0x298108dd
  41f3d2:	fldcw  WORD PTR [ecx+0x6f]
  41f3d5:	test   DWORD PTR [edi-0x5e45aed7],eax
  41f3db:	adc    eax,0xc64cfab5
  41f3e0:	pop    es
  41f3e1:	int    0x8b
  41f3e3:	pusha  
  41f3e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3e5:	xlat   BYTE PTR ds:[ebx]
  41f3e6:	test   eax,0x7e7e3a16
  41f3eb:	sbb    cl,ch
  41f3ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3ee:	out    0x5,al
  41f3f0:	cs push ds
  41f3f2:	inc    ebp
  41f3f3:	fistp  QWORD PTR [edi]
  41f3f5:	cmp    eax,0xe8614ae3
  41f3fa:	dec    esi
  41f3fb:	xor    DWORD PTR [esi],eax
  41f3fd:	and    eax,0x9e1b232
  41f402:	sbb    al,0xc3
  41f404:	jmp    0x74459a9d
  41f409:	iret   
  41f40a:	aaa    
  41f40b:	ret    0x58c2
  41f40e:	in     al,0x77
  41f410:	pushf  
  41f411:	xor    DWORD PTR [edi],edi
  41f413:	jb     0x41f458
  41f415:	jno    0x41f485
  41f417:	xlat   BYTE PTR ds:[ebx]
  41f418:	cmp    DWORD PTR [edx+ebx*8+0x46],ebp
  41f41c:	ja     0x41f40c
  41f41e:	outs   dx,DWORD PTR ds:[esi]
  41f41f:	jge    0x41f493
  41f421:	int    0xed
  41f423:	mov    al,BYTE PTR ds:0xd9a01e91
  41f429:	pop    ebx
  41f42a:	pop    edi
  41f42b:	and    DWORD PTR [esp+ebx*2+0x43c6c7a3],esp
  41f432:	hlt    
  41f433:	mov    WORD PTR [ebp+eax*8+0x61a3dfd2],es
  41f43a:	mov    dl,0x4b
  41f43c:	mov    bh,0x42
  41f43e:	int    0xfb
  41f440:	xchg   edx,eax
  41f441:	jmp    0xed0e84d2
  41f446:	sbb    ebp,DWORD PTR [esi-0x3c]
  41f449:	in     al,0x49
  41f44b:	out    dx,al
  41f44c:	leave  
  41f44d:	push   0xfffffff0
  41f44f:	dec    edi
  41f450:	enter  0x9ac0,0xbf
  41f454:	lock add BYTE PTR [ebx],al
  41f457:	jns    0x41f449
  41f459:	fisub  WORD PTR [edi+0x6d56574b]
  41f45f:	cld    
  41f460:	int    0xba
  41f462:	xchg   esi,eax
  41f463:	push   ds
  41f464:	lahf   
  41f465:	pusha  
  41f466:	sub    al,0x58
  41f468:	inc    eax
  41f469:	pmaxsw mm7,QWORD PTR [edi-0x77806853]
  41f470:	or     DWORD PTR [esi-0x28cef35],0x51
  41f477:	jmp    0x71ab:0xdbf1ce10
  41f47e:	jbe    0x41f4c2
  41f480:	inc    esp
  41f481:	mov    ds:0xf797dfe3,al
  41f486:	dec    edi
  41f487:	inc    eax
  41f488:	cmp    bh,ah
  41f48a:	sbb    dh,dl
  41f48c:	or     BYTE PTR [edx+edx*8+0x7],dl
  41f490:	push   cs
  41f491:	ds icebp 
  41f493:	outs   dx,BYTE PTR ds:[esi]
  41f494:	or     BYTE PTR [ecx-0x74],0x3d
  41f498:	loope  0x41f45b
  41f49a:	and    al,0x20
  41f49c:	fs jnp 0x41f4ff
  41f49f:	add    cl,BYTE PTR [edi+ebp*4]
  41f4a2:	xor    al,0x29
  41f4a4:	cli    
  41f4a5:	inc    eax
  41f4a6:	mov    eax,0xf5124f6d
  41f4ab:	mov    bh,0xd5
  41f4ad:	push   edi
  41f4ae:	data16 (bad) 
  41f4b0:	xor    eax,0x48ab7da7
  41f4b5:	fdivr  QWORD PTR [edi+0x71]
  41f4b8:	pop    ebx
  41f4b9:	mov    dl,0x77
  41f4bb:	and    eax,0x37c81f37
  41f4c0:	(bad)  
  41f4c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4c2:	lods   eax,DWORD PTR ds:[esi]
  41f4c3:	pop    ebp
  41f4c4:	mov    dl,0xa1
  41f4c6:	pop    edi
  41f4c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4c8:	call   0x423cfcd0
  41f4cd:	xchg   edx,eax
  41f4ce:	rcl    BYTE PTR [ebx+0x7d],0xb1
  41f4d2:	cmp    eax,0x5d86307f
  41f4d7:	mov    dh,0x6c
  41f4d9:	pop    eax
  41f4da:	fwait
  41f4db:	and    BYTE PTR [eax],bh
  41f4dd:	push   cs
  41f4de:	mov    ah,0x89
  41f4e0:	sbb    eax,0xc8ef0ba2
  41f4e5:	push   esi
  41f4e6:	push   edi
  41f4e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4e8:	add    bl,BYTE PTR [ebp-0x35c6c688]
  41f4ee:	sub    ecx,DWORD PTR [ebp-0x58]
  41f4f1:	(bad)  
  41f4f2:	daa    
  41f4f3:	nop
  41f4f4:	test   BYTE PTR [esp+edi*1-0x580698fe],al
  41f4fb:	fld    DWORD PTR [edi+0x2d]
  41f4fe:	popf   
  41f4ff:	inc    ecx
  41f500:	shl    esi,cl
  41f502:	mov    al,ds:0x2af18021
  41f507:	bound  eax,QWORD PTR [eax]
  41f509:	cmp    ch,BYTE PTR [ecx-0x7e1b7b8e]
  41f50f:	leave  
  41f510:	test   eax,0xe6eb8eb1
  41f515:	pop    eax
  41f516:	dec    ebp
  41f517:	and    bl,bl
  41f519:	sub    ebp,DWORD PTR [edi+0x61234913]
  41f51f:	xor    esi,edx
  41f521:	pop    esi
  41f522:	sbb    DWORD PTR [edx+0x6],0x13e20ed7
  41f529:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f52a:	stos   BYTE PTR es:[edi],al
  41f52b:	ja     0x41f55c
  41f52d:	scas   al,BYTE PTR es:[edi]
  41f52e:	adc    edi,DWORD PTR ds:0x9d125c27
  41f534:	dec    ebx
  41f535:	sahf   
  41f536:	push   ss
  41f537:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f538:	jge    0x41f4be
  41f53a:	sbb    al,0x78
  41f53c:	jmp    0x41f4ff
  41f53e:	mov    esp,edi
  41f540:	(bad)  
  41f541:	cmp    DWORD PTR [esi],ebx
  41f543:	push   ecx
  41f544:	stc    
  41f545:	test   dh,bl
  41f547:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f548:	sub    edi,edi
  41f54a:	mov    al,0x72
  41f54c:	or     cl,BYTE PTR [ecx]
  41f54e:	test   al,0xa7
  41f550:	ret    
  41f551:	sahf   
  41f552:	sbb    dh,BYTE PTR [ecx-0x3c]
  41f555:	out    dx,al
  41f556:	psadbw mm5,QWORD PTR [esi+0x3d4d97c1]
  41f55d:	ror    dl,cl
  41f55f:	ins    DWORD PTR es:[edi],dx
  41f560:	rcl    DWORD PTR [ebp-0x16fdba0b],cl
  41f566:	lahf   
  41f567:	cli    
  41f568:	xchg   edi,eax
  41f569:	test   al,0x56
  41f56b:	lock outs dx,BYTE PTR ds:[esi]
  41f56d:	push   ebp
  41f56e:	nop
  41f56f:	and    BYTE PTR [edi],dl
  41f571:	xor    DWORD PTR [ebp-0x29a91a87],esp
  41f577:	fimul  DWORD PTR [edi]
  41f579:	dec    ecx
  41f57a:	pop    esi
  41f57b:	shl    bl,0x11
  41f57e:	cmp    al,0x93
  41f580:	cmp    dh,BYTE PTR [edi]
  41f582:	test   BYTE PTR [esi],dl
  41f584:	call   0x5ea99302
  41f589:	in     eax,0x23
  41f58b:	sub    al,0x76
  41f58d:	dec    eax
  41f58e:	(bad)  
  41f58f:	(bad)  
  41f590:	xchg   ebp,eax
  41f591:	fbld   TBYTE PTR [ebp-0x5a]
  41f594:	mov    dl,0x1b
  41f596:	push   eax
  41f597:	push   0x6fba7102
  41f59c:	xchg   esp,eax
  41f59d:	mov    cl,0x4c
  41f59f:	ja     0x41f613
  41f5a1:	cmc    
  41f5a2:	sub    eax,DWORD PTR [edx]
  41f5a4:	stos   DWORD PTR es:[edi],eax
  41f5a5:	shr    DWORD PTR [ebp+0x6ad9f2fe],1
  41f5ab:	pop    es
  41f5ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5ad:	daa    
  41f5ae:	xor    ecx,DWORD PTR [ecx+eax*8]
  41f5b1:	test   BYTE PTR [ecx],al
  41f5b3:	std    
  41f5b4:	jne    0x41f58c
  41f5b6:	shl    BYTE PTR [edi+0x4a],1
  41f5b9:	scas   eax,DWORD PTR es:[edi]
  41f5ba:	and    bl,BYTE PTR [eax+0x3dde3819]
  41f5c0:	push   eax
  41f5c2:	fbstp  TBYTE PTR [ebp-0x2]
  41f5c5:	fbstp  TBYTE PTR [edx-0x78]
  41f5c8:	mov    WORD PTR [edx+edx*8],es
  41f5cb:	scas   al,BYTE PTR es:[edi]
  41f5cc:	xchg   ecx,eax
  41f5cd:	add    al,0xb2
  41f5cf:	mov    esp,0xf64c781c
  41f5d4:	test   DWORD PTR [edx+0x5e5e4e34],esp
  41f5da:	mov    esi,0x3c070b6c
  41f5df:	xchg   ecx,eax
  41f5e0:	add    eax,0x6330650f
  41f5e5:	mov    eax,0xa3b3504d
  41f5ea:	push   ds
  41f5eb:	loope  0x41f5ad
  41f5ed:	pop    ecx
  41f5ee:	xlat   BYTE PTR ds:[ebx]
  41f5ef:	mov    ebx,0x74ca622e
  41f5f4:	shl    DWORD PTR [edx],cl
  41f5f6:	inc    edi
  41f5f7:	stos   DWORD PTR es:[edi],eax
  41f5f8:	sub    DWORD PTR [edx],edi
  41f5fa:	inc    ebx
  41f5fb:	gs into 
  41f5fd:	int3   
  41f5fe:	dec    ecx
  41f5ff:	xchg   edx,eax
  41f600:	out    0x64,al
  41f602:	scas   eax,DWORD PTR es:[edi]
  41f603:	data16 jp 0x41f673
  41f606:	cmp    ecx,ecx
  41f608:	retf   
  41f609:	jecxz  0x41f58f
  41f60b:	pop    ebp
  41f60c:	mov    bl,0x23
  41f60e:	pop    eax
  41f60f:	jle    0x41f5ed
  41f611:	push   ds
  41f612:	out    0x28,al
  41f614:	pop    es
  41f615:	jge    0x41f641
  41f617:	xor    BYTE PTR [edi-0x6a],ch
  41f61a:	add    eax,DWORD PTR [edi]
  41f61c:	pusha  
  41f61d:	pop    ebx
  41f61e:	jb     0x41f67d
  41f620:	stc    
  41f621:	jecxz  0x41f60b
  41f623:	cwde   
  41f624:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f625:	data16 add bh,BYTE PTR [esi+0x7161be11]
  41f62c:	cmp    esp,DWORD PTR es:[ebp+0x2b]
  41f630:	push   cs
  41f631:	mov    bl,0x8c
  41f633:	xor    al,0x1e
  41f635:	inc    edi
  41f636:	mov    dh,0x7f
  41f638:	xor    eax,0xca1955af
  41f63d:	arpl   di,ax
  41f63f:	cmp    DWORD PTR [edx+0x16],ebx
  41f642:	int3   
  41f643:	enter  0xeab2,0x1e
  41f647:	mov    bl,0x4e
  41f649:	out    0x57,eax
  41f64b:	xchg   edx,eax
  41f64c:	(bad)  
  41f64d:	stos   DWORD PTR es:[edi],eax
  41f64e:	adc    edx,esi
  41f650:	icebp  
  41f651:	push   ss
  41f652:	mov    WORD PTR [esi-0x246f9b3c],es
  41f658:	mov    dh,0x4a
  41f65a:	test   al,0xe6
  41f65c:	int    0xd4
  41f65e:	(bad)  
  41f65f:	test   al,0x25
  41f661:	test   DWORD PTR [edi],edx
  41f663:	xchg   edi,eax
  41f664:	jns    0x41f6e4
  41f666:	cmp    al,0x6b
  41f668:	cli    
  41f669:	xor    BYTE PTR [ebp-0x36be1a59],0x7f
  41f670:	in     al,0xb8
  41f672:	call   0x2571:0xae2c4913
  41f679:	imul   BYTE PTR [esi-0x63]
  41f67c:	aad    0xf3
  41f67e:	lock jb 0x41f61a
  41f681:	xchg   ebp,eax
  41f682:	fmul   DWORD PTR [ebx]
  41f684:	stos   BYTE PTR es:[edi],al
  41f685:	mov    edx,0xfde4aed
  41f68a:	jbe    0x41f6e8
  41f68c:	jno    0x41f69e
  41f68e:	jge    0x41f62c
  41f690:	mov    al,0x7d
  41f692:	nop
  41f693:	retf   
  41f694:	inc    eax
  41f695:	mov    edx,DWORD PTR [edx]
  41f697:	adc    al,0x7c
  41f699:	nop
  41f69a:	mov    esp,0x7489d051
  41f69f:	inc    BYTE PTR [ebx]
  41f6a1:	inc    ebp
  41f6a2:	(bad)  
  41f6a3:	rol    BYTE PTR [ebx-0xd],1
  41f6a6:	ror    BYTE PTR [ebx],cl
  41f6a8:	sbb    ch,BYTE PTR [ecx]
  41f6aa:	outs   dx,DWORD PTR ds:[esi]
  41f6ab:	add    edx,ecx
  41f6ad:	xchg   esi,eax
  41f6ae:	fisubr WORD PTR [eax]
  41f6b0:	scas   al,BYTE PTR es:[edi]
  41f6b1:	ret    
  41f6b2:	cmp    dh,BYTE PTR [ebp+esi*8+0x67]
  41f6b6:	dec    esi
  41f6b7:	mov    edx,0x6f4ae47a
  41f6bc:	stos   DWORD PTR es:[edi],eax
  41f6bd:	imul   esp,DWORD PTR [ebx+edx*1+0x6],0x5c
  41f6c2:	sbb    BYTE PTR [edi-0x36],al
  41f6c5:	sbb    eax,0x4f8cbb6b
  41f6ca:	xor    DWORD PTR [ecx+0x54],eax
  41f6cd:	sti    
  41f6ce:	ror    BYTE PTR [eax],cl
  41f6d0:	scas   eax,DWORD PTR es:[edi]
  41f6d1:	int    0xe0
  41f6d3:	adc    DWORD PTR [edx+0x10],eax
  41f6d6:	loopne 0x41f676
  41f6d8:	ins    DWORD PTR es:[edi],dx
  41f6d9:	xchg   esi,eax
  41f6da:	int    0x20
  41f6dc:	test   dl,dl
  41f6de:	das    
  41f6df:	fdivr  QWORD PTR [eax+0x18749f40]
  41f6e5:	dec    ebp
  41f6e6:	inc    eax
  41f6e7:	pop    ebp
  41f6e8:	(bad)  
  41f6e9:	jmp    0x41f720
  41f6eb:	pop    ebx
  41f6ec:	push   cs
  41f6ed:	jb     0x41f72e
  41f6ef:	inc    ebx
  41f6f0:	and    ebp,edx
  41f6f2:	and    ebp,edi
  41f6f4:	push   ss
  41f6f5:	fcom   st(6)
  41f6f7:	int3   
  41f6f8:	add    eax,0x8944978d
  41f6fd:	jle    0x41f6ee
  41f6ff:	call   DWORD PTR [edi+0x264fa706]
  41f705:	or     eax,0x7d08a25e
  41f70a:	mov    ecx,0x32fb0f6c
  41f70f:	mov    ch,0x6d
  41f711:	dec    edx
  41f712:	mov    ah,0xd
  41f714:	icebp  
  41f715:	inc    ebp
  41f716:	pushf  
  41f717:	in     eax,dx
  41f718:	sub    BYTE PTR [ecx],dh
  41f71a:	cdq    
  41f71b:	daa    
  41f71c:	je     0x41f6e6
  41f71e:	mov    DWORD PTR [esi+0x23],edi
  41f721:	cwde   
  41f722:	fwait
  41f723:	dec    ebp
  41f724:	xor    DWORD PTR [ebx],esi
  41f726:	mov    WORD PTR [ebx-0x70],cs
  41f729:	or     BYTE PTR [ecx+0x3adbeb72],cl
  41f72f:	jge    0x41f789
  41f731:	inc    esi
  41f732:	retf   
  41f733:	and    al,cl
  41f735:	jmp    DWORD PTR [edi]
  41f737:	sub    esi,DWORD PTR [ebx-0xbcfd7cd]
  41f73d:	das    
  41f73e:	jo     0x41f765
  41f740:	push   cs
  41f741:	test   bl,dh
  41f743:	sbb    BYTE PTR [ebx-0x3e87aa61],0x1a
  41f74a:	mov    bh,0x25
  41f74c:	leave  
  41f74d:	and    esi,eax
  41f74f:	dec    ebp
  41f751:	push   es
  41f752:	shr    ah,1
  41f754:	pusha  
  41f755:	mov    eax,0xa78d7582
  41f75a:	pop    ebx
  41f75b:	cwde   
  41f75c:	jg     0x41f6f7
  41f75e:	cs stos BYTE PTR es:[edi],al
  41f760:	test   ah,al
  41f762:	and    ecx,DWORD PTR [ebx+0x13ea0800]
  41f768:	fisubr DWORD PTR [edi+0x7c77a1e7]
  41f76e:	in     al,0xed
  41f770:	add    eax,0xe5005f6c
  41f775:	icebp  
  41f776:	push   edx
  41f777:	div    BYTE PTR [eax+0x2bc06bbf]
  41f77d:	adc    eax,0xe922fd96
  41f782:	out    0x64,al
  41f784:	shl    DWORD PTR [edi],1
  41f786:	jge    0x41f7c4
  41f788:	(bad)  
  41f789:	mov    ch,0x62
  41f78b:	mov    cl,0x1c
  41f78d:	inc    esi
  41f78e:	push   ebx
  41f78f:	icebp  
  41f790:	int    0x8c
  41f792:	in     eax,0x44
  41f794:	iret   
  41f795:	retf   
  41f796:	xlat   BYTE PTR ds:[ebx]
  41f797:	mov    DWORD PTR [edi-0x374ea49],edx
  41f79d:	or     ecx,0x43cbd1c4
  41f7a3:	and    edx,DWORD PTR [ebx-0x39]
  41f7a6:	dec    edx
  41f7a7:	ficomp WORD PTR [esi+0x6c]
  41f7aa:	test   BYTE PTR [edi],dl
  41f7ac:	mov    ch,0x8a
  41f7ae:	sti    
  41f7af:	sbb    al,0xd3
  41f7b2:	stos   BYTE PTR es:[edi],al
  41f7b3:	adc    BYTE PTR [eax-0x35],ch
  41f7b6:	cmp    ecx,DWORD PTR [esi+0x12]
  41f7b9:	or     al,0xbc
  41f7bb:	push   edi
  41f7bc:	fistp  QWORD PTR ds:0x3f28f4ed
  41f7c2:	in     al,0xf0
  41f7c4:	lock fs or eax,0xc6537c3e
  41f7cb:	pop    edx
  41f7cc:	(bad)  
  41f7ce:	ins    DWORD PTR es:[edi],dx
  41f7cf:	call   0xe94efa47
  41f7d4:	nop
  41f7d5:	adc    eax,0xd0de5652
  41f7da:	cmp    eax,0x7bbd76f7
  41f7df:	sbb    esi,DWORD PTR [ebp+0x3f]
  41f7e2:	popf   
  41f7e3:	pop    eax
  41f7e4:	xor    BYTE PTR ds:0x906467b7,0x54
  41f7eb:	sub    DWORD PTR [eax+0x18768ca2],eax
  41f7f1:	shl    esp,0x4c
  41f7f4:	dec    esp
  41f7f5:	out    0x77,al
  41f7f7:	(bad)  
  41f7f8:	mov    ch,0xeb
  41f7fa:	in     al,dx
  41f7fb:	outs   dx,BYTE PTR ds:[esi]
  41f7fc:	inc    edx
  41f7fd:	dec    ebp
  41f7fe:	dec    ecx
  41f7ff:	adc    ecx,DWORD PTR [ebp-0x22dd2813]
  41f805:	push   0x70fb7d85
  41f80a:	addr16 lock test eax,0x64c1ac95
  41f811:	lods   al,BYTE PTR ds:[esi]
  41f812:	mov    al,0x9a
  41f814:	mov    edx,0xaf570d80
  41f819:	enter  0x4a85,0x6b
  41f81d:	stc    
  41f81e:	aam    0xf9
  41f820:	xor    eax,0x81f69709
  41f825:	mov    bh,BYTE PTR [ebp+edx*2-0x7e731a3a]
  41f82c:	outs   dx,DWORD PTR ds:[esi]
  41f82d:	cmp    eax,DWORD PTR [eax]
  41f82f:	add    BYTE PTR [eax],al
  41f831:	add    BYTE PTR [eax+0x64],cl
  41f834:	mul    BYTE PTR [eax-0x2]
  41f837:	repnz fisubr WORD PTR [ecx+eiz*8-0x64]
  41f83c:	out    0x52,eax
  41f83e:	xor    al,0x9f
  41f840:	repnz xchg edi,eax
  41f842:	stc    
  41f843:	jb     0x41f846
  41f845:	add    ah,dh
  41f847:	add    al,0x0
  41f849:	add    ch,bh
  41f84b:	sysret 
  41f84d:	add    eax,0x486f70c1
  41f852:	nop
  41f853:	mov    eax,ds:0xf51ab9c0
  41f858:	xchg   BYTE PTR [esi-0x535153b8],bl
  41f85e:	loope  0x41f891
  41f860:	pop    ds
  41f861:	fsubr  DWORD PTR [edi-0x690a1742]
  41f867:	test   al,0x1d
  41f869:	add    eax,0xacc493d3
  41f86e:	aas    
  41f86f:	retf   
  41f870:	std    
  41f871:	adc    al,0xf2
  41f873:	nop
  41f874:	test   dh,ah
  41f876:	daa    
  41f877:	adc    eax,0xb31e0aba
  41f87c:	pop    esp
  41f87d:	data16 std 
  41f87f:	mov    BYTE PTR [edi+0xff2b72],ch
  41f885:	(bad)  
  41f886:	fisttp WORD PTR [ebp+0x5f]
  41f889:	in     al,dx
  41f88a:	or     al,0x7b
  41f88c:	pop    ebp
  41f88d:	xlat   BYTE PTR ds:[ebx]
  41f88e:	int    0x93
  41f890:	cmp    edi,edx
  41f892:	frstor [eax]
  41f894:	inc    edx
  41f895:	gs cs push ebp
  41f898:	push   ecx
  41f899:	aam    0xf4
  41f89b:	push   ebp
  41f89c:	inc    ebp
  41f89d:	aam    0x20
  41f89f:	mov    dh,0xef
  41f8a1:	loopne 0x41f8bc
  41f8a3:	mov    bl,0x69
  41f8a5:	push   ds
  41f8a6:	sbb    al,0xda
  41f8a8:	push   edi
  41f8a9:	mov    ebp,0x4f92173b
  41f8ae:	cdq    
  41f8af:	xchg   DWORD PTR [eax-0x108e5021],eax
  41f8b5:	add    al,0x36
  41f8b7:	ins    DWORD PTR es:[edi],dx
  41f8b8:	xchg   esi,edx
  41f8ba:	repnz mov ebp,0xfd0ea55a
  41f8c0:	xor    al,0x1c
  41f8c2:	add    esi,DWORD PTR [ebp+0x2f31128e]
  41f8c8:	js     0x41f913
  41f8ca:	jg     0x41f8b9
  41f8cc:	cli    
  41f8cd:	lock ret 
  41f8cf:	sbb    eax,DWORD PTR [edi]
  41f8d1:	shl    BYTE PTR [edx+0x56],cl
  41f8d4:	sbb    DWORD PTR [ebp+0x2e96a33],ecx
  41f8da:	repnz aas 
  41f8dc:	aam    0x27
  41f8de:	cs dec esi
  41f8e0:	xchg   ebx,eax
  41f8e1:	daa    
  41f8e2:	imul   dh
  41f8e4:	adc    eax,edx
  41f8e6:	sub    DWORD PTR [edx],0xffffffe9
  41f8e9:	dec    ecx
  41f8ea:	mov    WORD PTR [ecx-0x43],?
  41f8ed:	xor    eax,0xf388a542
  41f8f2:	mov    dl,0x4c
  41f8f4:	push   ebp
  41f8f5:	mov    dh,0x6
  41f8f7:	setne  bl
  41f8fa:	xchg   ebp,eax
  41f8fb:	jg     0x41f933
  41f8fd:	pop    ss
  41f8fe:	adc    bh,bl
  41f900:	mov    edx,0x441c339b
  41f905:	enter  0x75bb,0x7f
  41f909:	or     BYTE PTR [ecx-0x40],ch
  41f90c:	dec    ebx
  41f90d:	xor    eax,0xa8b17b13
  41f912:	shl    DWORD PTR [edi-0x1a30d85c],0xfa
  41f919:	jne    0x41f8b6
  41f91b:	icebp  
  41f91c:	push   eax
  41f91d:	mov    DWORD PTR [ebx-0x10],ecx
  41f920:	or     DWORD PTR [esi-0x19f99364],ebp
  41f926:	mov    bl,0x8a
  41f928:	leave  
  41f929:	push   ebx
  41f92a:	pop    edi
  41f92b:	push   es
  41f92c:	(bad)  
  41f92e:	xlat   BYTE PTR ds:[ebx]
  41f92f:	lods   al,BYTE PTR ds:[esi]
  41f930:	sti    
  41f931:	repz pop esi
  41f933:	xchg   edi,eax
  41f934:	je     0x41f8f1
  41f936:	es or  esp,esi
  41f939:	fsub   QWORD PTR [edx+0x2b]
  41f93c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f93d:	std    
  41f93e:	jle    0x41f981
  41f940:	xchg   ebx,eax
  41f941:	in     eax,dx
  41f942:	jmp    0xa3a50f07
  41f947:	outs   dx,DWORD PTR ds:[esi]
  41f948:	or     ah,BYTE PTR [ebx]
  41f94a:	and    DWORD PTR [esi],ecx
  41f94c:	jno    0x41f953
  41f94e:	adc    ch,bl
  41f950:	ss push ecx
  41f952:	outs   dx,BYTE PTR ds:[esi]
  41f953:	jo     0x41f980
  41f955:	fnstsw WORD PTR [esi+eiz*4+0x24bc4042]
  41f95c:	aas    
  41f95d:	cld    
  41f95e:	xor    BYTE PTR [ebx+eiz*1-0x7af336fb],0xc0
  41f966:	daa    
  41f967:	adc    ebp,edi
  41f969:	dec    ecx
  41f96a:	adc    eax,0x74b21ba0
  41f96f:	push   0x4e6a754c
  41f974:	jmp    0xd13837d1
  41f979:	iret   
  41f97a:	test   ch,cl
  41f97c:	mov    edi,0x218d000
  41f981:	stos   BYTE PTR es:[edi],al
  41f982:	dec    esi
  41f983:	lock and ah,ch
  41f986:	stos   BYTE PTR es:[edi],al
  41f987:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f988:	lods   eax,DWORD PTR ds:[esi]
  41f989:	outs   dx,DWORD PTR ds:[esi]
  41f98a:	cs (bad) 
  41f98d:	jne    0x41f99d
  41f98f:	outs   dx,DWORD PTR ds:[esi]
  41f990:	mov    WORD PTR [ebx],es
  41f992:	jmp    DWORD PTR [edi+esi*2]
  41f995:	pop    ss
  41f996:	js     0x41f9f5
  41f998:	retf   
  41f999:	add    eax,0x65c58202
  41f99e:	out    dx,eax
  41f99f:	dec    esi
  41f9a0:	out    0x69,eax
  41f9a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9a3:	xchg   BYTE PTR [ecx-0x749c153b],al
  41f9a9:	mov    ecx,0xc694e00a
  41f9ae:	rcr    eax,1
  41f9b0:	int3   
  41f9b1:	xor    eax,DWORD PTR [edx]
  41f9b3:	shl    cl,1
  41f9b5:	xor    bl,BYTE PTR [esi+ebx*4+0x72ce3c18]
  41f9bc:	or     BYTE PTR [edi],0xc2
  41f9bf:	mov    ah,0x4d
  41f9c1:	mov    dl,0x2f
  41f9c3:	xchg   edx,eax
  41f9c4:	scas   eax,DWORD PTR es:[edi]
  41f9c5:	nop
  41f9c6:	xchg   esi,eax
  41f9c7:	(bad)  
  41f9c8:	push   esp
  41f9c9:	cmp    eax,0xdfa8e1bd
  41f9ce:	jge    0x41f9d4
  41f9d0:	lods   al,BYTE PTR ds:[esi]
  41f9d1:	xlat   BYTE PTR ds:[ebx]
  41f9d2:	pop    edx
  41f9d3:	mov    DWORD PTR [esi],esi
  41f9d5:	(bad)  
  41f9d6:	jae    0x41f9d2
  41f9d8:	js     0x41fa24
  41f9da:	lods   eax,DWORD PTR ds:[esi]
  41f9db:	inc    esp
  41f9dc:	xchg   esp,eax
  41f9dd:	cmp    eax,0x1aa6dd86
  41f9e2:	out    0x13,al
  41f9e4:	pusha  
  41f9e5:	jp     0x41f995
  41f9e7:	pop    edi
  41f9e8:	dec    edi
  41f9e9:	xlat   BYTE PTR ds:[ebx]
  41f9ea:	leave  
  41f9eb:	sbb    bh,BYTE PTR [edx-0x78]
  41f9ee:	mov    ebx,0x4b721efd
  41f9f3:	and    DWORD PTR [ebp-0x46819ea],0xffffffc5
  41f9fa:	es fwait
  41f9fc:	mov    edx,0x446725f5
  41fa01:	popa   
  41fa02:	xor    dl,al
  41fa04:	xor    eax,DWORD PTR [edi+0x532c22b4]
  41fa0a:	push   0x33f4250b
  41fa0f:	jne    0x41f993
  41fa11:	pop    esp
  41fa12:	(bad)  
  41fa13:	fild   QWORD PTR [esi]
  41fa15:	jne    0x41fa6a
  41fa17:	push   edi
  41fa18:	mov    ecx,0x70b70183
  41fa1d:	jns    0x41fa2c
  41fa1f:	cmp    eax,0xeca800ef
  41fa24:	sub    ah,al
  41fa26:	push   ss
  41fa27:	adc    BYTE PTR [ebx],ch
  41fa29:	fidivr WORD PTR [ecx-0x691be68e]
  41fa2f:	(bad)  
  41fa30:	std    
  41fa31:	mov    ds:0x20b87f7,al
  41fa36:	mov    bl,0x77
  41fa38:	addr16 ds xchg edi,eax
  41fa3b:	ror    BYTE PTR [ebp-0x171d678f],1
  41fa41:	lea    ebx,[esi]
  41fa43:	and    al,0x86
  41fa45:	cwde   
  41fa46:	retf   0x3077
  41fa49:	ret    0xd7ba
  41fa4c:	mov    dl,0x6c
  41fa4e:	rcr    bh,cl
  41fa50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa51:	outs   dx,BYTE PTR ds:[esi]
  41fa52:	stos   BYTE PTR es:[edi],al
  41fa53:	or     ebx,edi
  41fa55:	push   edi
  41fa56:	fst    DWORD PTR [ebp+esi*8-0x27]
  41fa5a:	lods   al,BYTE PTR cs:[esi]
  41fa5c:	pusha  
  41fa5d:	les    edx,FWORD PTR [esi-0x4f0bb4da]
  41fa63:	mov    dl,0x9e
  41fa65:	cmp    cl,BYTE PTR [esi-0x4f758dcc]
  41fa6b:	dec    edi
  41fa6c:	iret   
  41fa6d:	out    0x39,eax
  41fa6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa70:	mov    ebp,ss
  41fa72:	sbb    ebx,DWORD PTR [edx]
  41fa74:	and    eax,0x84114976
  41fa79:	inc    ecx
  41fa7a:	fmul   QWORD PTR [edi]
  41fa7c:	loope  0x41fa99
  41fa7e:	cmp    al,dl
  41fa80:	into   
  41fa81:	sahf   
  41fa82:	iret   
  41fa83:	jns    0x41fa72
  41fa85:	jp     0x41fadb
  41fa87:	lock mov DWORD PTR [ebp+ecx*8-0x45],edx
  41fa8c:	cwde   
  41fa8d:	outs   dx,BYTE PTR ds:[esi]
  41fa8e:	sbb    al,0xa2
  41fa90:	lock inc ebx
  41fa92:	outs   dx,BYTE PTR ds:[esi]
  41fa93:	or     edx,DWORD PTR [esi-0x2e3de1e6]
  41fa99:	ins    BYTE PTR es:[edi],dx
  41fa9a:	test   al,0x7c
  41fa9d:	dec    esp
  41fa9e:	aad    0xd0
  41faa0:	push   esp
  41faa1:	xchg   ebp,eax
  41faa2:	cmc    
  41faa3:	sbb    al,0xff
  41faa5:	inc    esi
  41faa6:	iret   
  41faa7:	cmovs  edx,DWORD PTR [edi+0x5834c74f]
  41faae:	jb     0x41faa7
  41fab0:	clc    
  41fab1:	(bad)  
  41fab2:	cmp    BYTE PTR [ebx+0x1f],bh
  41fab5:	mov    ?,ebx
  41fab7:	pop    esi
  41fab8:	mov    ebx,0x98c2074b
  41fabd:	inc    esi
  41fabe:	ret    
  41fabf:	add    ebp,DWORD PTR ds:0x3bf2bbfe
  41fac5:	shl    BYTE PTR [esi-0x29],0xae
  41fac9:	and    eax,0xd53d4ac0
  41face:	push   esi
  41facf:	push   ss
  41fad0:	int    0xd8
  41fad2:	and    esp,DWORD PTR [ebp+0x17]
  41fad5:	pop    ecx
  41fad6:	loopne 0x41faf6
  41fad8:	stos   BYTE PTR es:[edi],al
  41fad9:	cli    
  41fada:	adc    ebx,DWORD PTR [esp+ebx*8]
  41fadd:	scas   eax,DWORD PTR es:[edi]
  41fade:	clc    
  41fadf:	push   cs
  41fae0:	jae    0x41fa93
  41fae2:	push   dx
  41fae4:	xchg   edi,eax
  41fae5:	jns    0x41fb0b
  41fae7:	sbb    dl,BYTE PTR [eax]
  41fae9:	cmp    eax,0x143c033b
  41faee:	hlt    
  41faef:	retf   0x99a1
  41faf2:	lahf   
  41faf3:	add    eax,DWORD PTR [ebx+0x157aecda]
  41faf9:	leave  
  41fafa:	jg     0x41fb38
  41fafc:	jmp    0x181e:0x9aa78685
  41fb03:	and    BYTE PTR cs:[esi+0x4c5096c3],al
  41fb0a:	fidiv  DWORD PTR [eax-0x3634423a]
  41fb11:	or     dl,cl
  41fb13:	outs   dx,DWORD PTR ds:[esi]
  41fb14:	inc    BYTE PTR [eax-0x2721524d]
  41fb1a:	es xchg edi,ebx
  41fb1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb1e:	jb     0x41fb6d
  41fb20:	pop    edi
  41fb21:	jae    0x41fb8a
  41fb23:	push   eax
  41fb24:	pop    eax
  41fb25:	ja     0x41fb26
  41fb27:	repz mov WORD PTR [edx],ss
  41fb2a:	test   esi,edi
  41fb2c:	xor    cl,0x78
  41fb2f:	mov    ah,BYTE PTR [ebx+ebp*8]
  41fb32:	test   DWORD PTR [ebx-0x3c],esi
  41fb35:	nop
  41fb36:	and    eax,0x255bc5d2
  41fb3b:	shr    DWORD PTR [esp+ebx*4-0x5],0x9f
  41fb40:	nop
  41fb41:	mov    ebx,0xe27b0c40
  41fb46:	push   edi
  41fb47:	cmp    al,0x8e
  41fb49:	stc    
  41fb4a:	pop    es
  41fb4b:	jne    0x41fb08
  41fb4d:	sbb    DWORD PTR [esi-0x58],eax
  41fb50:	dec    esp
  41fb51:	std    
  41fb52:	cwde   
  41fb53:	out    0x5e,eax
  41fb55:	(bad)  
  41fb56:	ds push ebp
  41fb58:	sub    eax,0xfef7f1e4
  41fb5d:	cmp    ebp,esp
  41fb5f:	fimul  WORD PTR [ebp-0x54e40a2e]
  41fb65:	dec    ebx
  41fb66:	iret   
  41fb67:	xchg   esi,eax
  41fb68:	push   ss
  41fb69:	inc    esp
  41fb6a:	xchg   DWORD PTR [esi+0x39],ebp
  41fb6d:	neg    DWORD PTR [ebp+0x19]
  41fb70:	es sub eax,0x62dcd99f
  41fb76:	push   esp
  41fb77:	mov    DWORD PTR [edi+0x28],edx
  41fb7a:	pop    edi
  41fb7b:	xchg   edi,eax
  41fb7c:	outs   dx,DWORD PTR ds:[esi]
  41fb7d:	or     esp,edx
  41fb7f:	jae    0x41fbbe
  41fb81:	dec    esp
  41fb82:	jge    0x41fb28
  41fb84:	scas   eax,DWORD PTR es:[edi]
  41fb85:	mov    ?,WORD PTR [ebp-0x42]
  41fb88:	in     al,0x6
  41fb8a:	test   DWORD PTR [edx-0x7d08e944],ecx
  41fb90:	or     esp,DWORD PTR [ecx+0x69]
  41fb93:	int3   
  41fb94:	push   ebx
  41fb95:	cmp    ecx,esi
  41fb97:	sbb    BYTE PTR [edi+0x9],ch
  41fb9a:	mov    al,ds:0xd87dc37d
  41fb9f:	in     al,0xd6
  41fba1:	lods   eax,DWORD PTR ds:[esi]
  41fba2:	mov    bl,0xba
  41fba4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fba5:	fdiv   QWORD PTR [ebx+0x5f]
  41fba8:	nop    DWORD PTR [eax-0xe]
  41fbac:	fnsave [edx+0x1f]
  41fbaf:	inc    ebx
  41fbb0:	pop    ebx
  41fbb1:	or     eax,0x7dc74623
  41fbb6:	cmc    
  41fbb7:	dec    ebx
  41fbb8:	arpl   WORD PTR [ebp+0xd],si
  41fbbb:	xor    cl,BYTE PTR [edx]
  41fbbd:	es sbb al,0x0
  41fbc0:	stos   BYTE PTR es:[edi],al
  41fbc1:	aas    
  41fbc2:	pusha  
  41fbc3:	or     DWORD PTR [edx-0x6d480c4d],0xffffff90
  41fbca:	shr    DWORD PTR [ecx],1
  41fbcc:	sbb    BYTE PTR [ebp-0x4],0xc7
  41fbd0:	(bad)  
  41fbd1:	clc    
  41fbd2:	xchg   edx,eax
  41fbd3:	fsub   QWORD PTR [edi+0x55]
  41fbd6:	out    dx,eax
  41fbd7:	test   bl,dh
  41fbd9:	call   0x77ea:0x24990b5c
  41fbe0:	adc    eax,0xe5e7f9be
  41fbe5:	sbb    eax,0xdeae46d2
  41fbea:	daa    
  41fbeb:	imul   esp,edx,0x3637969e
  41fbf1:	outs   dx,DWORD PTR ds:[esi]
  41fbf2:	mov    eax,ds:0xae436397
  41fbf7:	mov    ah,0x6e
  41fbf9:	popa   
  41fbfa:	mov    BYTE PTR [esi-0x5e4b815a],dh
  41fc00:	push   edi
  41fc01:	outs   dx,BYTE PTR ds:[esi]
  41fc02:	stos   BYTE PTR es:[edi],al
  41fc03:	call   0x260a:0x6a878fe9
  41fc0a:	dec    ecx
  41fc0b:	jmp    0x942:0x9f420460
  41fc12:	mov    al,ds:0xccb25053
  41fc17:	ret    0x4bfb
  41fc1a:	ja     0x41fbf5
  41fc1c:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41fc1e:	fwait
  41fc1f:	leave  
  41fc20:	adc    eax,0x9f83c664
  41fc25:	sub    bl,BYTE PTR [edx]
  41fc27:	push   eax
  41fc28:	jae    0x41fc74
  41fc2a:	add    DWORD PTR [edx+edx*8],edx
  41fc2d:	push   ebx
  41fc2e:	(bad)  
  41fc2f:	loopne 0x41fc63
  41fc31:	sub    al,0x37
  41fc33:	stc    
  41fc34:	int    0xc7
  41fc36:	js     0x41fc19
  41fc38:	fucom  st(0)
  41fc3a:	and    al,0xfa
  41fc3c:	aas    
  41fc3d:	inc    edx
  41fc3e:	cmp    DWORD PTR [ebp+0x2fac15f],0x469a36da
  41fc48:	push   eax
  41fc49:	inc    ebp
  41fc4a:	aam    0x26
  41fc4c:	mov    WORD PTR [edx],es
  41fc4e:	(bad)  
  41fc4f:	add    ecx,DWORD PTR [ebp+0x5d]
  41fc52:	lods   eax,DWORD PTR ds:[esi]
  41fc53:	sub    al,0x1b
  41fc55:	inc    edx
  41fc56:	adc    BYTE PTR [esi-0x71],ah
  41fc59:	dec    DWORD PTR [ebx-0x1c]
  41fc5c:	or     ecx,0xffffff9a
  41fc5f:	adc    esp,ebx
  41fc61:	push   esi
  41fc62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc63:	outs   dx,BYTE PTR ds:[esi]
  41fc64:	mov    bl,0xc2
  41fc66:	adc    al,0x1e
  41fc68:	in     al,0x39
  41fc6a:	adc    bh,BYTE PTR [esi]
  41fc6c:	leave  
  41fc6d:	dec    edi
  41fc6e:	je     0x41fcaf
  41fc70:	push   es
  41fc71:	lahf   
  41fc72:	add    DWORD PTR [ebx],ecx
  41fc74:	mov    esi,0xe69d4224
  41fc79:	xor    al,0x19
  41fc7b:	pop    es
  41fc7c:	or     eax,0xbeb958da
  41fc81:	pop    ss
  41fc82:	cmp    ch,BYTE PTR [edx+0x323591e5]
  41fc88:	add    DWORD PTR [ebp-0x20db9c85],0xffffff82
  41fc8f:	xor    eax,0xed7db5f2
  41fc94:	stos   DWORD PTR es:[edi],eax
  41fc95:	mov    eax,0x8348ca57
  41fc9a:	ja     0x41fc46
  41fc9c:	jae    0x41fca3
  41fc9e:	xlat   BYTE PTR ds:[ebx]
  41fc9f:	cmp    ecx,DWORD PTR [edx+0x36]
  41fca2:	stc    
  41fca3:	and    edx,ebp
  41fca5:	and    BYTE PTR [esi-0x67],ch
  41fca8:	push   es
  41fca9:	arpl   WORD PTR [edi+edi*1],cx
  41fcac:	mov    ds:0x5854814,eax
  41fcb1:	repnz fld TBYTE PTR [ebp+0x36]
  41fcb5:	(bad)  
  41fcb6:	stos   BYTE PTR es:[edi],al
  41fcb7:	vpand  ymm5,ymm4,ymm0
  41fcbb:	mov    BYTE PTR [edx-0x15],cl
  41fcbe:	adc    ebp,DWORD PTR fs:[edi+0x3a]
  41fcc2:	stc    
  41fcc3:	out    0x67,al
  41fcc5:	pop    edi
  41fcc6:	fldenv [ebx+0x10]
  41fcc9:	cdq    
  41fcca:	mov    al,ds:0x3d03cf67
  41fccf:	scas   al,BYTE PTR es:[edi]
  41fcd0:	push   ecx
  41fcd1:	add    DWORD PTR [ebp+0x3f],edx
  41fcd4:	std    
  41fcd5:	bound  eax,QWORD PTR [edx-0x2e]
  41fcd8:	ret    
  41fcd9:	scas   al,BYTE PTR es:[edi]
  41fcda:	adc    edx,DWORD PTR [edi-0x3e00a9e0]
  41fce0:	sbb    dh,bh
  41fce2:	jns    0x41fd2f
  41fce4:	loopne 0x41fd12
  41fce6:	mov    bh,0xa4
  41fce8:	sbb    BYTE PTR [esi+ebx*4+0x25],al
  41fcec:	popa   
  41fced:	fadd   st,st(5)
  41fcef:	push   eax
  41fcf0:	in     eax,0xe4
  41fcf2:	sar    DWORD PTR [ebp-0x28],1
  41fcf5:	sbb    eax,0x501ea8d1
  41fcfa:	test   DWORD PTR [eax+0x398f7f33],0x16ef934a
  41fd04:	xchg   ebx,eax
  41fd05:	fistp  QWORD PTR [ecx-0x3db1803a]
  41fd0b:	xchg   DWORD PTR [ebx-0x18],ebx
  41fd0e:	jmp    0x41fcd2
  41fd10:	sbb    BYTE PTR [esi+0x1a],bh
  41fd13:	pop    edi
  41fd14:	inc    eax
  41fd15:	fisubr WORD PTR [ecx]
  41fd17:	adc    al,0xc7
  41fd19:	(bad)  
  41fd1a:	and    DWORD PTR ds:0xa05d076e,edi
  41fd20:	loopne 0x41fd5d
  41fd22:	mov    edi,DWORD PTR [edx-0x34]
  41fd25:	dec    edi
  41fd26:	outs   dx,DWORD PTR ds:[esi]
  41fd27:	cmp    BYTE PTR [esi],ch
  41fd29:	adc    dl,BYTE PTR [ecx+0x26]
  41fd2c:	mov    ebp,0x61062e91
  41fd31:	out    0xf4,eax
  41fd33:	cli    
  41fd34:	dec    esi
  41fd35:	xor    cl,BYTE PTR [eax-0x10]
  41fd38:	iret   
  41fd39:	and    eax,0x31421d26
  41fd3e:	add    BYTE PTR [eax],al
  41fd40:	add    BYTE PTR [eax],al
  41fd42:	mov    ds:0xb713b617,al
  41fd47:	mov    bl,0xa7
  41fd49:	mov    bh,0xb
  41fd4b:	add    BYTE PTR [edi-0x23442824],dh
  41fd51:	cmp    ch,ch
  41fd53:	ja     0x41fd56
  41fd55:	add    ah,dh
  41fd57:	add    al,0x0
  41fd59:	add    BYTE PTR [ebx+eax*2+0x29],bh
  41fd5d:	pop    edi
  41fd5e:	scas   al,BYTE PTR es:[edi]
  41fd5f:	mov    al,ds:0x1d7ca50b
  41fd64:	push   esp
  41fd65:	jmp    0x601c:0xc2fb7942
  41fd6c:	or     al,0xa2
  41fd6e:	pop    esi
  41fd6f:	daa    
  41fd70:	out    0xed,al
  41fd72:	ins    BYTE PTR es:[edi],dx
  41fd73:	jle    0x41fd00
  41fd75:	fcomip st,st(1)
  41fd77:	mov    BYTE PTR [edi-0x92fc226],dl
  41fd7d:	hlt    
  41fd7e:	jae    0x41fd3b
  41fd80:	xchg   edx,eax
  41fd81:	sbb    BYTE PTR [ebx-0x2d895de6],cl
  41fd87:	mov    edi,0x9105baf2
  41fd8c:	pop    edi
  41fd8d:	xchg   dl,dh
  41fd8f:	sbb    BYTE PTR [esi+0x79],cl
  41fd92:	mov    bh,0xfb
  41fd94:	sbb    al,0x98
  41fd96:	mov    ebp,0x8ad73a37
  41fd9b:	jmp    0xef7aca38
  41fda0:	add    BYTE PTR [edi+0x23ea632],dh
  41fda6:	out    dx,al
  41fda7:	push   ebx
  41fda8:	jne    0x41fda5
  41fdaa:	sub    eax,0x5b902e37
  41fdaf:	cld    
  41fdb0:	repz imul ecx,DWORD PTR [esi+0x30],0xc889cc92
  41fdb8:	ret    
  41fdb9:	test   BYTE PTR [ecx-0x7b801e55],bh
  41fdbf:	xchg   edi,eax
  41fdc0:	cmp    DWORD PTR ds:0x84263330,ebx
  41fdc6:	sub    ebx,DWORD PTR [edx]
  41fdc8:	jecxz  0x41fd91
  41fdca:	jnp    0x41fdc0
  41fdcc:	mov    eax,ds:0x36e102d9
  41fdd1:	inc    ecx
  41fdd2:	adc    esp,eax
  41fdd4:	in     al,0x5a
  41fdd6:	adc    esi,esp
  41fdd8:	dec    edi
  41fdd9:	pusha  
  41fdda:	add    eax,0x21044e7a
  41fddf:	sub    eax,0xbfa7b982
  41fde4:	jmp    0x1bf7:0xeb95464a
  41fdeb:	sub    al,BYTE PTR [edx+0x34]
  41fdee:	sti    
  41fdef:	and    DWORD PTR [edx+ebp*2+0xb],ebx
  41fdf3:	or     cl,BYTE PTR [esi+0x39626c46]
  41fdf9:	sbb    bl,BYTE PTR [ebx-0x12]
  41fdfc:	outs   dx,BYTE PTR ds:[esi]
  41fdfd:	mov    al,0xba
  41fdff:	inc    esi
  41fe00:	rol    DWORD PTR [esi],cl
  41fe02:	mov    ds:0x9fa43d90,al
  41fe07:	jmp    0x1895:0x82630b1a
  41fe0e:	push   edi
  41fe0f:	in     eax,dx
  41fe10:	xchg   edi,eax
  41fe11:	js     0x41fe81
  41fe13:	jl     0x41fe94
  41fe15:	aad    0x6e
  41fe17:	mov    ds,WORD PTR [eax-0xb4677a6]
  41fe1d:	icebp  
  41fe1e:	jns    0x41fe42
  41fe20:	push   esi
  41fe21:	push   ebp
  41fe22:	sbb    DWORD PTR [eax-0x48],edx
  41fe25:	and    bl,dh
  41fe27:	xor    BYTE PTR [ebx-0x15da79e7],ah
  41fe2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe2e:	mov    ah,0x4d
  41fe30:	ins    BYTE PTR es:[edi],dx
  41fe31:	aad    0x7f
  41fe33:	pop    ecx
  41fe34:	(bad)  
  41fe35:	frstpm(287 only) 
  41fe37:	cmc    
  41fe38:	jle    0x41fe9e
  41fe3a:	push   edi
  41fe3b:	sub    al,0x59
  41fe3d:	ins    DWORD PTR es:[edi],dx
  41fe3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe3f:	and    dl,bl
  41fe41:	sbb    ecx,esi
  41fe43:	pop    ds
  41fe44:	mov    eax,0x74ba70bd
  41fe49:	jmp    0x46:0x9742cfb6
  41fe50:	fwait
  41fe51:	inc    edi
  41fe52:	xchg   DWORD PTR [ecx+0x2c],edi
  41fe55:	or     BYTE PTR [ecx],dh
  41fe57:	in     al,0xee
  41fe59:	and    BYTE PTR [ecx],bl
  41fe5b:	ud1    edx,DWORD PTR [ebp+0x34]
  41fe5f:	cdq    
  41fe60:	aaa    
  41fe61:	push   0x9085e35a
  41fe66:	xchg   edx,eax
  41fe67:	dec    ebx
  41fe68:	mov    cl,0xf3
  41fe6a:	imul   edi,DWORD PTR [edi-0xb],0x6b
  41fe6e:	xchg   bh,bh
  41fe70:	in     eax,0xf2
  41fe72:	xchg   edi,eax
  41fe73:	loopne 0x41feee
  41fe75:	inc    edi
  41fe76:	mov    ecx,0x200505e3
  41fe7b:	xchg   esp,eax
  41fe7c:	lahf   
  41fe7d:	fs hlt 
  41fe7f:	retf   0x18de
  41fe82:	sti    
  41fe83:	sub    al,0x51
  41fe85:	(bad)  
  41fe87:	xchg   ebp,eax
  41fe88:	(bad)  
  41fe89:	xor    cl,cl
  41fe8b:	and    DWORD PTR [ebx+0x2c49c9ee],0x75
  41fe92:	xor    eax,edx
  41fe94:	pop    ecx
  41fe95:	push   0x8263bdeb
  41fe9a:	inc    ecx
  41fe9b:	add    ebp,eax
  41fe9d:	das    
  41fe9e:	stos   BYTE PTR es:[edi],al
  41fe9f:	mov    bl,0xc4
  41fea1:	ror    esp,0x50
  41fea4:	rol    DWORD PTR ss:[esi*2-0x70ec7051],cl
  41feac:	je     0x41febc
  41feae:	mov    ecx,0x277baafe
  41feb3:	loope  0x41fe37
  41feb5:	mov    esp,0x6e04ef5f
  41feba:	xchg   edx,eax
  41febb:	adc    eax,0x243e47d1
  41fec0:	and    eax,0xcfdad72e
  41fec5:	test   DWORD PTR [edx-0x5b],esi
  41fec8:	and    BYTE PTR [esp+edi*1],dl
  41fecb:	pop    es
  41fecc:	pop    edx
  41fecd:	sub    ah,BYTE PTR [edx+edi*4+0x62f41388]
  41fed4:	push   edi
  41fed5:	xchg   ecx,eax
  41fed6:	daa    
  41fed7:	jecxz  0x41ff0a
  41fed9:	stos   BYTE PTR es:[edi],al
  41feda:	dec    ebp
  41fedb:	push   0x36db37ef
  41fee0:	rcl    DWORD PTR ds:0xdb9f0ef9,0x98
  41fee7:	mov    ebx,0x4763c2a1
  41feec:	cmp    al,0x75
  41feee:	mov    ebp,0x4b4fefda
  41fef3:	mov    ebp,0x6c61d670
  41fef8:	int    0x5a
  41fefa:	mov    cl,0x9
  41fefc:	inc    ebx
  41fefd:	cmp    al,0x8
  41feff:	mov    eax,0x61b32d5f
  41ff04:	push   esp
  41ff05:	bound  ebp,QWORD PTR [ebx-0x4874e565]
  41ff0b:	cmp    BYTE PTR [ebp+0x48],cl
  41ff0e:	adc    esi,esi
  41ff10:	enter  0xaeda,0x5
  41ff14:	mov    BYTE PTR [ebx+0x2a],0xff
  41ff18:	mov    esp,0xa244d0da
  41ff1d:	(bad)
  41ff20:	jae    0x41fecf
  41ff22:	mov    al,ds:0x56cc744f
  41ff27:	out    0x62,al
  41ff29:	bound  edx,QWORD PTR [edi+0x208b1f37]
  41ff2f:	stos   DWORD PTR es:[edi],eax
  41ff30:	sar    DWORD PTR [ebp-0x1a538d0e],cl
  41ff36:	std    
  41ff37:	fdiv   DWORD PTR [eax-0x6af8db15]
  41ff3d:	dec    edi
  41ff3e:	mov    ebx,0x58d0fb64
  41ff43:	inc    eax
  41ff44:	loop   0x41fee9
  41ff46:	pop    esp
  41ff47:	(bad)  
  41ff48:	test   DWORD PTR [edx+0x57],esi
  41ff4b:	push   edi
  41ff4c:	adc    ch,BYTE PTR [esi]
  41ff4e:	retf   0x18e7
  41ff51:	mov    esi,0xe8b06c86
  41ff56:	cmp    ebp,DWORD PTR [edi-0x55]
  41ff59:	es inc ebx
  41ff5b:	pop    DWORD PTR [ecx+0x388134fb]
  41ff61:	repz or al,0xaf
  41ff64:	popf   
  41ff65:	mov    dl,0x16
  41ff67:	retf   0x4f9
  41ff6a:	lock int 0x87
  41ff6d:	jno    0x41ffe8
  41ff6f:	scas   eax,DWORD PTR es:[edi]
  41ff70:	inc    edi
  41ff71:	push   esi
  41ff72:	jne    0x41fef9
  41ff74:	pushf  
  41ff75:	sbb    DWORD PTR [edi-0x33a263fb],ebp
  41ff7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff7c:	aam    0xf4
  41ff7e:	(bad)  
  41ff7f:	cdq    
  41ff80:	sbb    al,0x5c
  41ff82:	and    BYTE PTR ds:0xfb2cecf2,al
  41ff88:	cmc    
  41ff89:	(bad)  
  41ff8a:	mov    ebp,0x6b035250
  41ff8f:	(bad)  
  41ff90:	sbb    BYTE PTR [ebx+0x3fd986fd],ch
  41ff96:	inc    edx
  41ff97:	jno    0x41ff4c
  41ff99:	push   cs
  41ff9a:	mov    ds:0x147c827c,eax
  41ff9f:	seta   dl
  41ffa2:	in     eax,0x14
  41ffa4:	mov    al,ds:0xc95ecdd1
  41ffa9:	les    edi,FWORD PTR [esi-0x4308b1b2]
  41ffaf:	ja     0x41ffb9
  41ffb1:	mov    ah,0x3f
  41ffb3:	out    dx,al
  41ffb4:	push   esi
  41ffb5:	mov    dh,0x6f
  41ffb7:	fmul   DWORD PTR [edi-0x2494a222]
  41ffbd:	add    DWORD PTR [ebx-0x7b],ecx
  41ffc0:	mov    eax,0xa6ad9f3d
  41ffc5:	test   BYTE PTR ds:0xdabe,ch
  41ffca:	push   esi
  41ffcb:	lock fimul DWORD PTR [edi]
  41ffce:	aam    0x8c
  41ffd0:	push   esp
  41ffd1:	xchg   edi,eax
  41ffd2:	clc    
  41ffd3:	jns    0x41ffbd
  41ffd5:	mov    DWORD PTR [ebx],eax
  41ffd7:	test   BYTE PTR [edi+edi*1+0x6644409],0x81
  41ffdf:	push   cs
  41ffe0:	add    dl,bh
  41ffe2:	mov    dh,0x12
  41ffe4:	(bad)  
  41ffe5:	jl     0x41ffd5
  41ffe7:	lea    ecx,[edi+0x78]
  41ffea:	loop   0x420058
  41ffec:	data16 in al,0xff
  41ffef:	std    
  41fff0:	arpl   bx,ax
  41fff2:	nop
  41fff3:	push   0x3e
  41fff5:	mov    ?,WORD PTR [ebp+0x7e796048]
  41fffb:	bound  edi,QWORD PTR [ebx]
  41fffd:	push   ebp
  41fffe:	jge    0x41ff88
  420000:	cmp    edi,DWORD PTR [esi+0x7b]
  420003:	xor    esi,ebx
  420005:	xchg   edx,eax
  420006:	jecxz  0x420013
  420008:	(bad)  
  420009:	dec    ebx
  42000a:	les    ebp,FWORD PTR [esi+0x6f]
  42000d:	mov    ds:0x9090a912,al
  420012:	cdq    
  420013:	xchg   BYTE PTR [esi],bl
  420015:	aaa    
  420016:	popa   
  420017:	out    0x58,al
  420019:	xor    ebp,DWORD PTR [edx-0x37935124]
  42001f:	in     al,dx
  420020:	(bad)  
  420021:	out    0x63,eax
  420023:	fmulp  st(7),st
  420025:	mov    esi,0x399d25c8
  42002a:	jns    0x42007b
  42002c:	add    eax,0x1a667af3
  420031:	in     al,dx
  420032:	imul   BYTE PTR [ecx+0x3a]
  420035:	pop    edx
  420036:	idiv   BYTE PTR [esi+0x1d]
  420039:	repz jno 0x420015
  42003c:	test   al,0x5b
  42003e:	add    al,0x27
  420040:	jl     0x41fff1
  420042:	cmc    
  420043:	push   esp
  420044:	add    al,0x16
  420046:	mov    ds:0x332bc102,al
  42004b:	cmp    ah,bl
  42004d:	ffreep st(4)
  42004f:	mov    edx,0x4989c01c
  420054:	sub    BYTE PTR [eax-0x33798a4e],cl
  42005a:	inc    ecx
  42005b:	pop    eax
  42005c:	xchg   edi,eax
  42005d:	stos   DWORD PTR es:[edi],eax
  42005e:	repnz rol DWORD PTR [ebx],0xdc
  420062:	inc    edi
  420063:	xlat   BYTE PTR ds:[ebx]
  420064:	add    BYTE PTR [eax],cl
  420066:	cs sbb ecx,eax
  420069:	pop    edx
  42006a:	jecxz  0x42000f
  42006c:	cmp    al,0x26
  42006e:	push   ebp
  42006f:	ins    DWORD PTR es:[edi],dx
  420070:	or     BYTE PTR [edx-0x3a],bh
  420073:	xchg   ecx,eax
  420074:	(bad)  
  420075:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420076:	cmp    eax,DWORD PTR [ecx-0x78]
  420079:	mov    esi,0x4e154124
  42007e:	or     al,0x24
  420080:	and    ecx,DWORD PTR [ecx]
  420082:	cmp    dh,BYTE PTR [esi+0x11a7e6b5]
  420088:	jno    0x420031
  42008a:	xlat   BYTE PTR ds:[ebx]
  42008b:	mov    WORD PTR [ebx*2-0x3453c23d],?
  420092:	jp     0x420101
  420094:	push   eax
  420095:	scas   al,BYTE PTR es:[edi]
  420096:	cmp    ah,bl
  420098:	sub    edx,esp
  42009a:	and    al,0x9
  42009c:	outs   dx,DWORD PTR ds:[esi]
  42009d:	repz pusha 
  42009f:	mov    dl,BYTE PTR [ebx-0xa2b0272]
  4200a5:	dec    ebp
  4200a6:	fs push esi
  4200a8:	sub    eax,0x8f39e8
  4200ad:	jae    0x420082
  4200af:	fist   WORD PTR [edx]
  4200b1:	call   0xc567:0xbf03c44f
  4200b8:	nop
  4200b9:	sbb    al,0x37
  4200bb:	sbb    al,0x2b
  4200bd:	push   edi
  4200be:	adc    eax,0x7cbba893
  4200c3:	sahf   
  4200c4:	xor    dh,BYTE PTR [ebp+0x6d]
  4200c7:	sbb    dl,BYTE PTR [edi-0x75]
  4200ca:	addr16 pushf 
  4200cc:	cmp    bh,cl
  4200ce:	cdq    
  4200cf:	aam    0x8a
  4200d1:	gs and eax,0x9b37355e
  4200d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200d8:	enter  0x5266,0x70
  4200dc:	sbb    DWORD PTR [eax],esp
  4200de:	ret    
  4200df:	xchg   edi,eax
  4200e0:	mov    gs,WORD PTR [esi-0x2437fa9]
  4200e6:	mov    dl,0x57
  4200e8:	out    0xc4,eax
  4200ea:	push   ebx
  4200eb:	jns    0x420109
  4200ed:	mov    edi,0x64e4525f
  4200f2:	stos   DWORD PTR es:[edi],eax
  4200f3:	dec    DWORD PTR [ecx-0x5e0a6c71]
  4200f9:	jae    0x420140
  4200fb:	push   ss
  4200fc:	xor    bl,BYTE PTR [esi-0x390ad01]
  420102:	arpl   WORD PTR [eax+eiz*1+0x3f001f89],di
  420109:	into   
  42010a:	add    cl,BYTE PTR [esi-0x26b8c644]
  420110:	cmp    BYTE PTR [edx+0x4f9678ae],0x59
  420117:	aam    0x33
  420119:	shl    DWORD PTR [esi-0x1],1
  42011c:	pop    ebp
  42011d:	std    
  42011e:	and    BYTE PTR [edx+0x77],bl
  420121:	int    0x30
  420123:	loop   0x420118
  420125:	xor    esi,ebx
  420127:	mov    dh,0x3
  420129:	loope  0x42014c
  42012b:	fs fs pop edx
  42012e:	cmp    BYTE PTR [edx-0x36],cl
  420131:	and    DWORD PTR [eax+0x2],edi
  420134:	fiadd  DWORD PTR [ebx-0x6c]
  420137:	mov    bh,0xd3
  420139:	loop   0x42019b
  42013b:	aad    0x7a
  42013d:	push   edx
  42013e:	aaa    
  42013f:	jg     0x420156
  420141:	into   
  420142:	popf   
  420143:	shl    BYTE PTR [edx+eiz*4-0x41a322fd],0x6c
  42014b:	call   0xea755940
  420150:	push   0xfffffff4
  420152:	(bad)  
  420153:	in     al,0xb7
  420155:	pusha  
  420156:	adc    BYTE PTR [edx-0x30e65742],dh
  42015c:	sub    DWORD PTR [ecx-0x199ea560],edi
  420162:	dec    eax
  420163:	(bad)  
  420164:	jmp    0x42017e
  420166:	xchg   esp,eax
  420167:	rol    DWORD PTR [ecx+ebx*4-0x7feece3e],cl
  42016e:	mov    edi,DWORD PTR ds:0x98a89663
  420174:	mov    ecx,0x7c3b5bc8
  420179:	popa   
  42017a:	pop    edi
  42017b:	retf   0xb8e9
  42017e:	data16 cld 
  420180:	icebp  
  420181:	retf   
  420182:	out    dx,al
  420183:	and    al,0xe5
  420185:	jmp    DWORD PTR ds:0xabc83b56
  42018b:	jb     0x420184
  42018d:	xlat   BYTE PTR ds:[ebx]
  42018e:	inc    ebx
  42018f:	mov    dl,0xb
  420191:	aas    
  420192:	push   cs
  420193:	adc    ah,bh
  420195:	mov    ds,WORD PTR [ebp+0x3b]
  420198:	sahf   
  420199:	push   ds
  42019a:	push   ebp
  42019b:	adc    dh,ch
  42019d:	ja     0x42021c
  42019f:	outs   dx,BYTE PTR ds:[esi]
  4201a0:	(bad)  
  4201a2:	stos   DWORD PTR es:[edi],eax
  4201a3:	push   ds
  4201a4:	daa    
  4201a5:	add    al,0xc6
  4201a7:	leave  
  4201a8:	sub    esi,0x53f21723
  4201ae:	inc    esi
  4201af:	imul   ebx,edx,0x7e
  4201b2:	test   ebp,edi
  4201b4:	add    al,0x41
  4201b6:	es cwde 
  4201b8:	test   bl,dh
  4201ba:	fmul   QWORD PTR [edx+0x44ad491f]
  4201c0:	loopne 0x42022e
  4201c2:	dec    edi
  4201c3:	ret    
  4201c4:	cmp    DWORD PTR [ebp-0x1a02bf6b],ebx
  4201ca:	sbb    ebx,DWORD PTR [eax]
  4201cc:	mov    ecx,DWORD PTR [ebx]
  4201ce:	xchg   ebp,eax
  4201cf:	jo     0x420179
  4201d1:	out    0xc2,eax
  4201d3:	mov    edx,0x36b3adcf
  4201d8:	jbe    0x42023c
  4201da:	mov    bl,0x82
  4201dc:	dec    ebx
  4201dd:	and    DWORD PTR [esp+edi*8+0x79],esp
  4201e1:	jmp    0x39bc:0x4f4c6882
  4201e8:	sub    BYTE PTR [ebp+0x1547261c],cl
  4201ee:	or     DWORD PTR [ecx+ebx*4+0x42a87689],esp
  4201f5:	mov    cl,0xa7
  4201f7:	and    dh,al
  4201f9:	dec    esp
  4201fa:	mul    DWORD PTR [ebp+0x1a]
  4201fd:	jmp    0x8b66:0xb37a31ca
  420204:	call   0xc47d:0x5ce42646
  42020b:	adc    ch,BYTE PTR [ecx]
  42020d:	test   DWORD PTR [ecx+0x77],ebx
  420210:	jb     0x4201a5
  420212:	pushf  
  420213:	out    0x7c,eax
  420215:	or     eax,0xe240137a
  42021a:	arpl   WORD PTR [edi-0x39],bx
  42021d:	mov    esi,0x1a00185c
  420222:	pop    ds
  420223:	or     al,0x56
  420225:	mov    ecx,0xd580a95
  42022a:	stos   BYTE PTR es:[edi],al
  42022b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42022c:	push   ds
  42022d:	or     BYTE PTR [edi],bh
  42022f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420230:	pop    eax
  420231:	adc    al,0x46
  420233:	mov    cl,BYTE PTR [eax+0x7b]
  420236:	jecxz  0x42021e
  420238:	aam    0xa3
  42023a:	inc    edx
  42023b:	call   0xac9c3d0e
  420240:	test   DWORD PTR [ecx+0x4f],edi
  420243:	mov    al,ds:0x1d834c47
  420248:	jbe    0x42020d
  42024a:	xor    al,0xf
  42024c:	and    BYTE PTR [ebp+0x0],cl
  420252:	xchg   esi,eax
  420253:	test   BYTE PTR [ebp-0x2],al
  420256:	push   edi
  420257:	(bad)  
  420258:	mov    edi,0xa59b80ec
  42025d:	and    BYTE PTR [ebx],ah
  42025f:	push   ds
  420260:	js     0x437f47
  420266:	hlt    
  420267:	add    al,0x0
  420269:	add    BYTE PTR [eax-0x59],dl
  42026c:	enter  0x2d8f,0x6a
  420270:	jl     0x42025e
  420272:	dec    ax
  420274:	addr16 aad 0xf1
  420277:	jmp    0x75f7603b
  42027c:	icebp  
  42027d:	jp     0x420231
  42027f:	fisttp QWORD PTR [ebx+0x2c]
  420282:	push   0x7cdc00e1
  420287:	dec    edx
  420288:	mov    bl,0xc2
  42028a:	or     BYTE PTR [edi],bl
  42028c:	and    BYTE PTR [ecx+0x17],cl
  42028f:	js     0x4202a6
  420291:	sar    BYTE PTR [edi+0x31],0xec
  420295:	push   es
  420296:	in     eax,dx
  420297:	cmp    cl,cl
  420299:	push   es
  42029a:	in     al,0x78
  42029c:	pop    esp
  42029d:	ins    BYTE PTR es:[edi],dx
  42029e:	data16 mov cl,0xc4
  4202a1:	push   ebp
  4202a2:	inc    eax
  4202a3:	arpl   WORD PTR [ecx],si
  4202a5:	fisubr DWORD PTR [eax]
  4202a7:	jle    0x4202d8
  4202a9:	xor    DWORD PTR [ebx+0x2a],esi
  4202ac:	int3   
  4202ad:	loopne 0x4202db
  4202af:	inc    edi
  4202b0:	mov    ds:0xc912e75c,eax
  4202b5:	jne    0x420323
  4202b7:	ins    BYTE PTR es:[edi],dx
  4202b8:	and    dh,BYTE PTR ds:0xabfdeaa7
  4202be:	test   BYTE PTR [eax-0x54b092c8],ah
  4202c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202c5:	inc    eax
  4202c6:	push   edx
  4202c7:	cld    
  4202c8:	in     al,0xf0
  4202ca:	inc    ebx
  4202cb:	add    dh,BYTE PTR [ecx-0x6d59aa2d]
  4202d1:	jl     0x42025e
  4202d3:	mov    bl,0x36
  4202d5:	pop    ebp
  4202d6:	xor    al,BYTE PTR [edi]
  4202d8:	jecxz  0x4202be
  4202da:	iret   
  4202db:	inc    eax
  4202dc:	mov    ds:0x59ec5a7f,al
  4202e1:	cmp    bl,ah
  4202e3:	lods   al,BYTE PTR ds:[esi]
  4202e4:	mov    ebx,DWORD PTR [ebx]
  4202e6:	mov    dl,0xc0
  4202e8:	inc    ebp
  4202e9:	push   es
  4202ea:	jo     0x420299
  4202ec:	or     eax,0xcd74c085
  4202f1:	jp     0x420349
  4202f3:	outs   dx,BYTE PTR ds:[esi]
  4202f4:	ror    BYTE PTR [ecx+eiz*1+0x64],1
  4202f8:	adc    DWORD PTR [ebx+0x3],eax
  4202fb:	hlt    
  4202fc:	ins    BYTE PTR es:[edi],dx
  4202fd:	dec    esi
  4202fe:	call   0xa265:0xa9769fae
  420305:	call   0x710de638
  42030a:	call   0x5f8f:0x2ab22657
  420311:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420312:	mov    ecx,0xbd696a6d
  420317:	(bad)  
  420318:	mul    DWORD PTR [eax]
  42031a:	aas    
  42031b:	sub    al,0x82
  42031d:	dec    ecx
  42031e:	outs   dx,DWORD PTR ds:[esi]
  42031f:	lods   eax,DWORD PTR ds:[esi]
  420320:	mov    cl,0x10
  420322:	sbb    DWORD PTR [edx+0x26202ed1],esp
  420328:	enter  0xa9d5,0x20
  42032c:	add    al,0x88
  42032e:	in     eax,0xbe
  420330:	jp     0x42030c
  420332:	dec    edi
  420333:	sahf   
  420334:	loop   0x4202eb
  420336:	jns    0x4202ce
  420338:	inc    edx
  420339:	mov    ch,0x8e
  42033b:	loop   0x4202e5
  42033d:	and    bh,BYTE PTR [eax-0x4e]
  420340:	pop    edx
  420341:	dec    ebx
  420342:	mov    edx,0xe584c150
  420347:	push   edi
  420348:	repz shr BYTE PTR [esi+edi*8-0x1a],cl
  42034d:	xlat   BYTE PTR ds:[ebx]
  42034e:	inc    edi
  42034f:	ret    0x1ed7
  420352:	shr    dl,1
  420354:	js     0x420328
  420356:	fwait
  420357:	sub    al,0x3c
  420359:	mov    eax,ds:0x950ec608
  42035e:	std    
  42035f:	push   ebp
  420360:	xchg   esp,eax
  420361:	sbb    bl,ah
  420363:	fldcw  WORD PTR [edi+ebx*8+0x4f]
  420367:	xchg   ebx,eax
  420368:	cmc    
  420369:	neg    DWORD PTR ds:0x2bbfdfc4
  42036f:	push   0x4b043286
  420374:	(bad)
  420377:	into   
  420378:	xchg   edx,ebp
  42037a:	out    0x4b,eax
  42037c:	dec    esp
  42037d:	mov    edi,0x9c12db05
  420382:	or     al,0x3e
  420384:	fsub   DWORD PTR [edx]
  420386:	sub    dh,BYTE PTR [ebx]
  420388:	call   0xe0657aef
  42038d:	clc    
  42038e:	fcmove st,st(1)
  420390:	call   0x323b06d
  420395:	aam    0x73
  420397:	sub    al,0x57
  420399:	mov    ch,0x93
  42039b:	cmp    ecx,DWORD PTR [eax-0xecda9fe]
  4203a1:	mov    al,ds:0x3f91423d
  4203a6:	add    edi,DWORD PTR [edx-0x68]
  4203a9:	xlat   BYTE PTR ds:[ebx]
  4203aa:	dec    edx
  4203ab:	out    0xa6,eax
  4203ad:	stos   DWORD PTR es:[edi],eax
  4203ae:	addr16 pushf 
  4203b0:	push   0xffffff93
  4203b2:	lods   al,BYTE PTR ds:[esi]
  4203b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203b4:	sub    BYTE PTR [ebx+0x38],dh
  4203b7:	mov    dl,dl
  4203b9:	xchg   ebx,eax
  4203ba:	ins    BYTE PTR es:[edi],dx
  4203bb:	mov    ds:0xe5fe0b30,al
  4203c0:	xchg   esp,eax
  4203c1:	inc    ebx
  4203c2:	jbe    0x420434
  4203c4:	xor    DWORD PTR [edi-0x4bad9058],esi
  4203ca:	ja     0x420366
  4203cc:	lds    eax,FWORD PTR [ebp+0x40]
  4203cf:	mov    esi,esi
  4203d1:	or     esi,edx
  4203d3:	inc    ebp
  4203d4:	aaa    
  4203d5:	mov    dh,0x87
  4203d7:	out    dx,eax
  4203d8:	push   esi
  4203d9:	repnz lods al,BYTE PTR ds:[esi]
  4203db:	pop    ds
  4203dc:	push   0x724f9a5e
  4203e1:	push   es
  4203e2:	xchg   edi,eax
  4203e3:	xchg   edi,eax
  4203e4:	out    0x72,eax
  4203e6:	retf   0xe3b7
  4203e9:	pushf  
  4203ea:	neg    edx
  4203ec:	fcom   DWORD PTR [ecx-0x68]
  4203ef:	push   cs
  4203f0:	es push es
  4203f2:	pop    ecx
  4203f3:	arpl   dx,cx
  4203f5:	pop    ds
  4203f6:	push   ebx
  4203f7:	lahf   
  4203f8:	popf   
  4203f9:	push   esi
  4203fa:	(bad)  
  4203fb:	shr    DWORD PTR ds:0x487e7276,1
  420401:	ins    DWORD PTR es:[edi],dx
  420402:	push   0x28
  420404:	mov    WORD PTR [ebx-0x65],?
  420407:	dec    ebx
  420408:	jecxz  0x420459
  42040a:	sub    dl,dl
  42040c:	xchg   BYTE PTR [ecx-0x52bd07ad],cl
  420412:	outs   dx,DWORD PTR ds:[esi]
  420413:	mov    eax,ds:0x2fce14a3
  420418:	xchg   ebx,eax
  420419:	je     0x420412
  42041b:	loopne 0x420495
  42041d:	in     eax,dx
  42041e:	pop    ds
  42041f:	push   es
  420420:	xor    al,0x94
  420422:	ror    DWORD PTR ss:[ebx+0x71],1
  420426:	nop
  420427:	dec    edi
  420428:	inc    edi
  420429:	arpl   WORD PTR [edx-0x18],sp
  42042c:	pushf  
  42042d:	add    BYTE PTR [eax+ecx*4+0x40510a0e],dl
  420434:	mul    ah
  420436:	mov    ebp,0x9e31e24f
  42043b:	dec    esi
  42043c:	or     ebp,esi
  42043e:	mov    al,ds:0xb9775efe
  420443:	add    DWORD PTR [edi-0x7d],eax
  420446:	icebp  
  420447:	cwde   
  420448:	fisubr WORD PTR [ecx]
  42044a:	inc    ecx
  42044b:	ror    DWORD PTR [edi+0x418b92e7],0x81
  420452:	push   ebx
  420453:	jno    0x42041b
  420455:	pop    ss
  420456:	cmp    eax,0x1ad48e36
  42045b:	push   esp
  42045c:	in     eax,dx
  42045d:	sub    BYTE PTR [edx-0x5b],dl
  420460:	rcr    BYTE PTR [ebx-0x10],1
  420463:	test   eax,0xbbd24814
  420468:	jge    0x42047c
  42046a:	shr    DWORD PTR [ecx-0x6493e097],0x19
  420471:	fdivr  st,st(2)
  420473:	xchg   ebx,eax
  420474:	imul   edx,DWORD PTR [ecx+eiz*1+0x54],0x7733fead
  42047c:	dec    cx
  42047e:	shl    DWORD PTR [esi+eiz*1+0xc],cl
  420482:	lahf   
  420483:	cmp    esi,0xb0aed92a
  420489:	lock or BYTE PTR [ecx-0x32d617d7],0xa8
  420491:	cwde   
  420492:	rcr    BYTE PTR [ebp+eax*4-0x36a2f396],0x97
  42049a:	jl     0x4204e4
  42049c:	push   ds
  42049d:	in     eax,0xe8
  42049f:	xor    dh,bh
  4204a1:	inc    ebp
  4204a2:	fwait
  4204a3:	xchg   esi,eax
  4204a4:	fdivr  QWORD PTR [eax+0x5212d6c6]
  4204aa:	mov    dh,0x64
  4204ac:	jmp    0x4204a0
  4204ae:	inc    ebx
  4204af:	(bad)  
  4204b0:	out    dx,eax
  4204b1:	addr16 or eax,ebx
  4204b4:	ins    DWORD PTR es:[edi],dx
  4204b5:	pop    esp
  4204b6:	ins    BYTE PTR es:[edi],dx
  4204b7:	cmc    
  4204b8:	inc    ebx
  4204b9:	mov    ds:0xa1a8d33d,al
  4204be:	dec    esp
  4204bf:	mov    BYTE PTR [esi-0x5c],ch
  4204c2:	inc    esi
  4204c3:	(bad)  
  4204c4:	mov    esp,0x39c7baaf
  4204c9:	adc    dl,BYTE PTR ds:0xb6cc52c0
  4204cf:	inc    esi
  4204d0:	inc    ebp
  4204d1:	div    DWORD PTR [ebp-0x184358be]
  4204d7:	mov    eax,ss:0xcb3c4476
  4204dd:	adc    BYTE PTR [ebx],al
  4204df:	(bad)  
  4204e0:	jp     0x420482
  4204e2:	in     eax,dx
  4204e3:	addr16 dec ebp
  4204e5:	or     cl,bl
  4204e7:	dec    ebp
  4204e8:	inc    ebp
  4204e9:	sub    BYTE PTR [ecx-0x21],ah
  4204ec:	push   ebp
  4204ed:	mov    esp,DWORD PTR [edi]
  4204ef:	retf   
  4204f0:	jle    0x420484
  4204f2:	test   eax,0x2f3e3d6d
  4204f7:	xchg   esp,ecx
  4204f9:	cmp    dl,BYTE PTR [edi+ecx*1+0x4e8536dd]
  420500:	fiadd  WORD PTR [edi+0x6e1a86c6]
  420506:	sti    
  420507:	cmp    eax,0x15e50671
  42050c:	mov    esp,0xddca1230
  420511:	fcomp  DWORD PTR [esi+0x1f]
  420514:	icebp  
  420515:	shl    BYTE PTR [ebx+0x40f2e88b],1
  42051b:	mov    edi,0x5004364a
  420520:	retf   
  420521:	or     ebx,DWORD PTR [ecx]
  420523:	mov    esp,0x30613cf4
  420528:	out    dx,al
  420529:	(bad)  
  42052a:	test   al,0x41
  42052c:	hlt    
  42052d:	xor    ecx,DWORD PTR [esi-0x7d70ab2e]
  420533:	call   0x3bcb84b4
  420538:	rcl    DWORD PTR [eax-0x55c2bc94],cl
  42053e:	int3   
  42053f:	mov    di,0xc9fd
  420543:	push   ebp
  420544:	adc    al,0x1
  420546:	int    0x36
  420548:	in     al,dx
  420549:	in     al,0x2
  42054b:	fiadd  DWORD PTR [edx-0x24]
  42054e:	popf   
  42054f:	push   eax
  420550:	and    eax,0x2052f1b8
  420555:	pushf  
  420556:	rol    BYTE PTR [ecx],0xd9
  420559:	stos   BYTE PTR es:[edi],al
  42055a:	cmp    BYTE PTR [ebp+0x71],bh
  42055d:	pop    es
  42055e:	dec    eax
  42055f:	jno    0x42054c
  420561:	ja     0x42056b
  420563:	mov    ds,WORD PTR ds:[ebx+0x7a]
  420567:	jno    0x420577
  420569:	stos   DWORD PTR es:[edi],eax
  42056a:	or     DWORD PTR [edi-0x44b12d11],0xd3522d32
  420574:	adc    ecx,DWORD PTR [edi+0x60e78892]
  42057a:	mov    ebx,cs
  42057c:	std    
  42057d:	sub    eax,0x5fc2870b
  420582:	mov    al,ds:0xb0d48218
  420587:	ror    DWORD PTR [edi-0x19f79225],0x6c
  42058e:	inc    edx
  42058f:	mov    DWORD PTR ds:0xed25e80c,ebp
  420595:	retf   0xf3ee
  420598:	mov    dh,0xba
  42059a:	fwait
  42059b:	dec    ebp
  42059c:	sbb    esp,DWORD PTR [ebx-0x7]
  42059f:	outs   dx,BYTE PTR ds:[esi]
  4205a0:	adc    BYTE PTR [edi],0x1d
  4205a3:	inc    eax
  4205a4:	cs out dx,eax
  4205a6:	push   0x61
  4205a8:	icebp  
  4205a9:	push   eax
  4205aa:	pop    edx
  4205ab:	jae    0x420560
  4205ad:	xchg   ebx,eax
  4205ae:	xchg   BYTE PTR [eax],ch
  4205b0:	cli    
  4205b1:	add    BYTE PTR [ecx+0x294e6a12],dh
  4205b7:	mov    cs,WORD PTR [esi+esi*1]
  4205ba:	faddp  st(1),st
  4205bc:	fidivr DWORD PTR [edi]
  4205be:	retf   0xdeea
  4205c1:	arpl   ax,si
  4205c3:	lods   eax,DWORD PTR ds:[esi]
  4205c4:	in     eax,0x2b
  4205c6:	mov    eax,0x3ab65251
  4205cb:	ja     0x4205ae
  4205cd:	sub    DWORD PTR [eax+0x3cf8a231],edi
  4205d3:	mov    ds:0x3646a178,eax
  4205d8:	jmp    0x4dcc33f3
  4205dd:	xchg   ebp,eax
  4205de:	pop    es
  4205df:	adc    BYTE PTR [edi+0x17],dl
  4205e2:	or     DWORD PTR [ecx-0x7d97c9a],0x49ea7424
  4205ec:	pushf  
  4205ed:	jb     0x4205e0
  4205ef:	adc    edi,esi
  4205f1:	push   ebp
  4205f2:	inc    edi
  4205f3:	in     al,0xab
  4205f5:	or     BYTE PTR [edx-0x255c2ad8],0x7a
  4205fc:	jmp    0x420623
  4205fe:	push   ecx
  4205ff:	hlt    
  420600:	add    al,0xa4
  420602:	clc    
  420603:	jo     0x4205dc
  420605:	addr16 gs mov eax,0xd235bfb5
  42060c:	hlt    
  42060d:	xor    al,0x75
  42060f:	xor    DWORD PTR [edx+0x56],edx
  420612:	dec    esp
  420613:	xor    eax,0x58852a7b
  420618:	dec    ecx
  420619:	inc    ebp
  42061a:	fwait
  42061b:	test   al,0xc9
  42061d:	test   al,0x80
  42061f:	pusha  
  420620:	fsubr  QWORD PTR ds:0x2d02534a
  420626:	mov    ah,0x3e
  420628:	loop   0x420682
  42062a:	xchg   BYTE PTR [ecx-0x3ad937e2],cl
  420630:	test   ecx,0x9e7cd5d9
  420636:	in     eax,dx
  420637:	mov    ch,BYTE PTR [eax+0x7b]
  42063a:	imul   edx,DWORD PTR [ebx],0xffffffdb
  42063d:	dec    edx
  42063e:	mov    bl,0x52
  420640:	inc    eax
  420641:	leavew 
  420643:	mov    bl,0x52
  420645:	push   ss
  420646:	ins    DWORD PTR es:[edi],dx
  420647:	lds    ebx,FWORD PTR [esi-0x42290ea7]
  42064d:	addr16 cmc 
  42064f:	rol    DWORD PTR [esi],0xf9
  420652:	hlt    
  420653:	pop    es
  420654:	cdq    
  420655:	lds    eax,FWORD PTR [edi+edi*1-0x29]
  420659:	sahf   
  42065a:	sbb    al,0xea
  42065c:	adc    ebx,eax
  42065e:	xor    eax,0x13983e0b
  420663:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420664:	jo     0x42061f
  420666:	sub    DWORD PTR [eax],ebx
  420668:	jge    0x42068d
  42066a:	mov    esi,0xa8e629af
  42066f:	cwde   
  420670:	repz xchg ebp,eax
  420672:	jge    0x420658
  420674:	call   0xbb07:0x6c57eeae
  42067b:	mov    ebx,0xafce1c1a
  420680:	dec    edi
  420681:	mov    ecx,?
  420683:	mov    BYTE PTR [edi-0x62],ah
  420686:	inc    edi
  420687:	cmp    eax,0x54b62787
  42068c:	loop   0x4206da
  42068e:	xchg   BYTE PTR [edx+0x17c70989],cl
  420694:	inc    edx
  420695:	or     BYTE PTR [eax+0x5b],al
  420698:	inc    ebx
  420699:	iret   
  42069a:	sub    al,0xea
  42069c:	sahf   
  42069d:	test   BYTE PTR [esi+0x5236c411],ch
  4206a3:	out    dx,eax
  4206a4:	cs and al,0xf2
  4206a7:	jp     0x4206f2
  4206a9:	fwait
  4206aa:	xchg   eax,esi
  4206ac:	popa   
  4206ad:	add    al,BYTE PTR [esi]
  4206af:	push   ss
  4206b0:	rcr    BYTE PTR [eax],1
  4206b2:	stc    
  4206b3:	cmp    BYTE PTR [edx+0x37a2d702],ch
  4206b9:	pop    ds
  4206ba:	sbb    al,0xa9
  4206bc:	cmc    
  4206bd:	pop    esp
  4206be:	(bad)  
  4206bf:	out    0x2c,eax
  4206c1:	push   edi
  4206c2:	xor    al,0x5e
  4206c4:	mov    dh,bl
  4206c6:	dec    esp
  4206c7:	jo     0x42064e
  4206c9:	mov    eax,0x4ea1fac6
  4206ce:	sti    
  4206cf:	bnd je 0x42072a
  4206d2:	ja     0x4206de
  4206d4:	out    0x97,al
  4206d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206d7:	stos   DWORD PTR es:[edi],eax
  4206d8:	jnp    0x42066b
  4206da:	xchg   esi,eax
  4206db:	call   0xba23:0xe28118ae
  4206e2:	jmp    0xf9ff836e
  4206e7:	jg     0x420684
  4206e9:	arpl   dx,di
  4206eb:	sub    al,0xdf
  4206ed:	dec    esp
  4206ee:	rol    esp,1
  4206f0:	cmp    DWORD PTR [esi],ebx
  4206f2:	retf   
  4206f3:	popa   
  4206f4:	icebp  
  4206f5:	jmp    0x7b5e4c7d
  4206fa:	cld    
  4206fb:	addr16 push edi
  4206fd:	scas   eax,DWORD PTR es:[edi]
  4206fe:	mov    bl,0x97
  420700:	clc    
  420701:	out    0x68,al
  420703:	outs   dx,DWORD PTR ds:[esi]
  420704:	data16 (bad) 
  420706:	jp     0x4206be
  420708:	fld    QWORD PTR [edx-0x546e7bc8]
  42070e:	xchg   edx,eax
  42070f:	dec    ecx
  420710:	(bad)  
  420711:	sbb    al,0x9e
  420713:	lds    esp,FWORD PTR [ebx]
  420715:	jne    0x420764
  420717:	dec    eax
  420718:	das    
  420719:	clc    
  42071a:	xor    bh,BYTE PTR [edx+ebp*1-0x30]
  42071e:	cmp    eax,0xaacd6c92
  420723:	cmp    al,0xed
  420725:	pop    eax
  420726:	std    
  420727:	outs   dx,DWORD PTR ds:[esi]
  420728:	ins    BYTE PTR es:[edi],dx
  420729:	in     al,0x33
  42072b:	out    0x0,al
  42072d:	adc    ch,BYTE PTR [ecx+ebp*2-0x12]
  420731:	xchg   edi,eax
  420732:	cmp    dl,BYTE PTR [esi-0x7610d7d]
  420738:	adc    edx,DWORD PTR [ebx]
  42073a:	es dec ebx
  42073c:	mov    edx,0x630c916a
  420741:	mov    al,ds:0x608194c5
  420746:	fwait
  420747:	pop    es
  420748:	mov    ebp,0xdcf32f85
  42074d:	mov    esp,0xc29be6da
  420752:	jg     0x42076f
  420754:	dec    ebx
  420755:	icebp  
  420756:	imul   esp,DWORD PTR [edx+esi*2+0x37],0x18
  42075b:	cld    
  42075c:	mov    bl,0xcf
  42075e:	add    BYTE PTR [eax],al
  420760:	add    BYTE PTR [eax],al
  420762:	and    DWORD PTR [edi],ebx
  420764:	fld    QWORD PTR [esi]
  420766:	inc    esi
  420768:	sti    
  420769:	aas    
  42076a:	jb     0x42078b
  42076c:	add    edx,edx
  42076e:	(bad)  
  42076f:	test   BYTE PTR [edx+0x4e],ah
  420772:	aad    0x81
  420774:	add    DWORD PTR [eax],eax
  420776:	hlt    
  420777:	add    al,0x0
  420779:	add    BYTE PTR [edx],bl
  42077b:	mov    ah,0xf3
  42077d:	int3   
  42077e:	mov    ah,bl
  420780:	loop   0x4207b4
  420782:	lahf   
  420783:	in     al,0xe6
  420785:	stc    
  420786:	pusha  
  420787:	fdivr  st,st(0)
  420789:	mov    edx,DWORD PTR [ecx-0x46]
  42078c:	fld    DWORD PTR [edi-0x4c]
  42078f:	test   BYTE PTR [ebx-0x2f],ch
  420792:	in     eax,0x99
  420794:	and    BYTE PTR [esi],al
  420796:	inc    ebp
  420797:	mov    ebx,0x63af6f06
  42079c:	fcmove st,st(1)
  42079e:	jmp    0x7389b487
  4207a3:	jmp    0x56e3ed9
  4207a8:	add    bh,BYTE PTR [ebx+eax*2-0x17d93c2f]
  4207af:	xor    eax,0x1ccff226
  4207b4:	dec    esi
  4207b5:	cmp    edi,DWORD PTR [esi+0x7c]
  4207b8:	mov    dl,BYTE PTR [edi-0x6f]
  4207bb:	sti    
  4207bc:	push   cs
  4207bd:	jb     0x4207f0
  4207bf:	add    eax,0x85ceac79
  4207c4:	sbb    dh,BYTE PTR [esi]
  4207c6:	daa    
  4207c7:	cmp    DWORD PTR [edi],esi
  4207c9:	xchg   edi,eax
  4207ca:	ja     0x42077a
  4207cc:	xor    BYTE PTR [esi-0x4c],al
  4207cf:	addr16 mov ebx,0x4d523cba
  4207d5:	xchg   BYTE PTR [ebp+edi*4-0x56cf3cc9],cl
  4207dc:	push   0x9
  4207de:	inc    esi
  4207df:	hlt    
  4207e0:	pushf  
  4207e1:	test   BYTE PTR [ebx-0x2e1d21e3],bl
  4207e7:	addr16 in eax,0x4b
  4207ea:	mov    ah,0x76
  4207ec:	aaa    
  4207ed:	lods   eax,DWORD PTR ds:[esi]
  4207ee:	scas   al,BYTE PTR es:[edi]
  4207ef:	outs   dx,BYTE PTR ds:[esi]
  4207f0:	ja     0x4207ad
  4207f2:	pop    ebp
  4207f3:	sub    al,0x95
  4207f5:	dec    edx
  4207f6:	hlt    
  4207f7:	mov    BYTE PTR [edx+ebp*2+0x58],dl
  4207fb:	adc    al,BYTE PTR [esi]
  4207fd:	out    0x9f,eax
  4207ff:	add    eax,0xac2460cf
  420804:	push   edi
  420805:	or     al,dl
  420807:	lods   eax,DWORD PTR ds:[esi]
  420808:	or     ecx,DWORD PTR [edx-0x3a]
  42080b:	sti    
  42080c:	out    0x81,eax
  42080e:	cwde   
  42080f:	inc    eax
  420810:	out    dx,eax
  420811:	ror    DWORD PTR [ecx+0x3343411],0xfe
  420818:	in     eax,0x30
  42081a:	(bad)  
  42081b:	and    eax,0x52d0f585
  420820:	push   cs
  420821:	hlt    
  420822:	mov    cl,BYTE PTR [bx-0x3]
  420826:	push   ecx
  420827:	jo     0x420863
  420829:	push   edi
  42082a:	mov    bl,0xa7
  42082c:	rcr    BYTE PTR [esi+edi*2+0x3e],0x45
  420831:	pop    esp
  420832:	and    al,0xdc
  420834:	inc    ebp
  420835:	dec    eax
  420836:	push   ds
  420837:	scas   ax,WORD PTR es:[edi]
  420839:	mov    eax,0x6338dce4
  42083e:	in     al,0xcf
  420840:	loop   0x420891
  420842:	bound  esi,QWORD PTR [edi+0x259bb85f]
  420848:	cli    
  420849:	fs popf 
  42084b:	xchg   edx,eax
  42084c:	jecxz  0x4208b3
  42084e:	jmp    FWORD PTR [edi]
  420850:	cmc    
  420851:	fcom   DWORD PTR [ebx-0x6c]
  420854:	nop
  420855:	cmp    cl,BYTE PTR [eax+0xc]
  420858:	cmp    al,0xa6
  42085a:	nop
  42085b:	test   al,0xb
  42085d:	xchg   ebp,eax
  42085e:	adc    eax,0x26413c66
  420863:	sbb    eax,0x2cf070c3
  420868:	jo     0x42081b
  42086a:	pop    ss
  42086b:	xor    eax,0xf19b3110
  420870:	rcr    DWORD PTR [eax+0x1c89d81d],1
  420876:	inc    ecx
  420878:	leave  
  420879:	add    BYTE PTR [ecx+0x25d1747a],0xb8
  420880:	xchg   esi,eax
  420881:	add    DWORD PTR [eax+0x2c261443],ebx
  420887:	xchg   DWORD PTR [ebx+0x3f445b1b],ebp
  42088d:	adc    edx,DWORD PTR [edx+0x27]
  420890:	test   dl,ah
  420892:	pop    edi
  420893:	fiadd  WORD PTR [esi-0x4e]
  420896:	push   es
  420897:	jno    0x420863
  420899:	aaa    
  42089a:	push   ss
  42089b:	and    eax,0x644a8e3
  4208a0:	xchg   esi,ebx
  4208a2:	fidivr DWORD PTR [ebx+0x6a]
  4208a5:	jp     0x4208cb
  4208a7:	hlt    
  4208a8:	jg     0x4208e7
  4208aa:	outs   dx,DWORD PTR ds:[esi]
  4208ab:	shr    ebx,0x2
  4208ae:	push   ecx
  4208af:	and    eax,0x52853858
  4208b4:	or     DWORD PTR [edx+0x75],ebp
  4208b7:	ja     0x420919
  4208b9:	mov    cl,0x49
  4208bb:	cmp    DWORD PTR [esi+eiz*4+0x6456caec],esp
  4208c2:	sti    
  4208c3:	shr    DWORD PTR [edi+0x2f],1
  4208c6:	and    ecx,esi
  4208c8:	cmp    eax,0x23a2b684
  4208cd:	inc    ecx
  4208ce:	pop    ds
  4208cf:	pushf  
  4208d0:	push   es
  4208d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208d2:	pop    edx
  4208d3:	inc    esp
  4208d4:	daa    
  4208d5:	ss dec esi
  4208d7:	and    al,0x4f
  4208d9:	mov    eax,ds:0x78769e26
  4208de:	sbb    eax,0x70619f88
  4208e3:	pop    edx
  4208e4:	xchg   ebp,eax
  4208e5:	in     al,0x2e
  4208e7:	imul   eax,DWORD PTR [eax+0x51],0x8979bb00
  4208ee:	push   DWORD PTR [esp+eiz*8+0x11a66ae0]
  4208f5:	std    
  4208f6:	add    edx,DWORD PTR [ebx]
  4208f8:	xor    dh,BYTE PTR [ebx-0x5c]
  4208fb:	jno    0x42092f
  4208fd:	push   eax
  4208fe:	cwde   
  4208ff:	test   DWORD PTR [eax+0x7b],esi
  420902:	inc    esp
  420903:	int    0xd9
  420905:	xchg   DWORD PTR [ecx-0x982df12],esp
  42090b:	jno    0x4208ef
  42090d:	and    DWORD PTR [ebx+0x6dd944db],ebx
  420913:	push   ebx
  420914:	mul    BYTE PTR [edx+0x30]
  420917:	in     eax,dx
  420918:	ret    0x4902
  42091b:	sbb    ebx,DWORD PTR [ecx+0x7c]
  42091e:	adc    BYTE PTR [ecx],al
  420920:	mov    esp,0x88e26397
  420925:	gs (bad) 
  420927:	or     eax,0xc0b6fca
  42092c:	mov    ds:0x229edf52,al
  420931:	rol    BYTE PTR [edx-0x19e6018c],cl
  420937:	cmc    
  420938:	lock dec ecx
  42093a:	inc    ebp
  42093b:	sub    eax,0x4b1c6ebc
  420940:	int3   
  420941:	adc    DWORD PTR [esi+0x5b],edx
  420944:	int3   
  420945:	pop    ecx
  420946:	fdivr  st(6),st
  420948:	mov    ch,0xe9
  42094a:	mov    bl,0x7
  42094c:	sbb    bh,dh
  42094e:	imul   ecx,DWORD PTR [edi+0x0],0x6986fd7
  420955:	outs   dx,BYTE PTR ds:[esi]
  420956:	shr    ecx,0x96
  420959:	cdq    
  42095a:	(bad)
  42095e:	dec    edx
  42095f:	cld    
  420960:	nop
  420961:	in     al,0x48
  420963:	rcl    BYTE PTR [ebp-0x42],0xbc
  420967:	test   BYTE PTR [eax+0x3],dl
  42096a:	mov    bh,0x84
  42096c:	adc    eax,0xcc19851a
  420971:	mov    ch,0x92
  420973:	dec    esi
  420974:	gs rol dx,cl
  420978:	icebp  
  420979:	ror    DWORD PTR [esi],1
  42097b:	lea    esp,[ecx-0x56e65b42]
  420981:	scas   eax,DWORD PTR es:[edi]
  420982:	fs adc eax,0xf224c982
  420988:	sbb    BYTE PTR [ebx],0x4f
  42098b:	jns    0x420940
  42098d:	arpl   si,bx
  42098f:	push   0x11f016f1
  420994:	add    edi,DWORD PTR [edi]
  420996:	sub    eax,0x76661253
  42099b:	or     edi,DWORD PTR [edi]
  42099d:	jne    0x42092d
  42099f:	jns    0x4209e6
  4209a1:	jg     0x4209e3
  4209a3:	mov    cl,0xc4
  4209a5:	ins    DWORD PTR es:[edi],dx
  4209a6:	push   cs
  4209a7:	pop    ebx
  4209a8:	add    al,0x87
  4209aa:	mov    ebp,0xd786d2c4
  4209af:	test   DWORD PTR [ecx+0x51],esp
  4209b2:	lds    eax,FWORD PTR [ebp-0x25]
  4209b5:	add    BYTE PTR [ecx],bl
  4209b7:	fsubp  st(4),st
  4209b9:	xor    cl,ch
  4209bb:	(bad)  
  4209bd:	and    eax,0x6b0b42fc
  4209c2:	or     edi,DWORD PTR [eax+esi*2-0x8]
  4209c6:	dec    esp
  4209c7:	sbb    DWORD PTR [eax],0x5889b3be
  4209cd:	stc    
  4209ce:	jb     0x42095d
  4209d0:	mov    DWORD PTR [eax],ecx
  4209d2:	push   bx
  4209d4:	jae    0x4209e7
  4209d6:	jge    0x4209ea
  4209d8:	jbe    0xcfcdffe8
  4209de:	inc    esp
  4209df:	xlat   BYTE PTR ds:[ebx]
  4209e0:	fstp   st(5)
  4209e2:	lahf   
  4209e3:	push   0x3c037418
  4209e8:	pop    esi
  4209e9:	sub    dl,BYTE PTR [ebx]
  4209eb:	cmp    al,0xc1
  4209ed:	pop    edx
  4209ee:	inc    esi
  4209ef:	stos   DWORD PTR es:[edi],eax
  4209f0:	fstp   QWORD PTR [edi-0x2b]
  4209f3:	aam    0xe5
  4209f5:	bound  ebx,QWORD PTR [edx+edi*1+0x7]
  4209f9:	xchg   ebp,eax
  4209fa:	stos   DWORD PTR es:[edi],eax
  4209fb:	imul   ecx,DWORD PTR [esi-0x1a],0xffffffde
  4209ff:	jne    0x420a51
  420a01:	dec    edi
  420a02:	xchg   ebx,eax
  420a03:	icebp  
  420a04:	daa    
  420a05:	lock sbb ch,0x9f
  420a09:	sub    BYTE PTR [ecx],al
  420a0b:	xchg   esi,eax
  420a0c:	in     al,dx
  420a0d:	shr    DWORD PTR ds:0x2fb578fe,0x38
  420a14:	xchg   ebx,eax
  420a15:	fbstp  TBYTE PTR [eax-0x268e0326]
  420a1b:	xchg   edi,eax
  420a1c:	adc    cl,BYTE PTR [ebx-0x1201fce8]
  420a22:	push   ecx
  420a23:	sub    DWORD PTR [esp+ecx*2-0x365ceb5a],ebx
  420a2a:	sub    DWORD PTR [ecx-0x4e],esi
  420a2d:	mov    bh,0xee
  420a2f:	cmp    al,0x8e
  420a31:	dec    edx
  420a32:	adc    dh,0xb
  420a35:	jmp    0x4a21:0xba433ece
  420a3c:	pop    ds
  420a3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a3e:	out    dx,al
  420a3f:	cs cs or eax,0x206eee16
  420a46:	mov    bh,0x18
  420a48:	jle    0x420a55
  420a4a:	jl     0x420a77
  420a4c:	mov    BYTE PTR [eax-0x5c9db71b],ch
  420a52:	sub    eax,ebp
  420a54:	inc    esi
  420a55:	dec    edx
  420a56:	nop
  420a57:	addr16 mov al,ds:0xcedf
  420a5c:	cmp    al,0xeb
  420a5e:	cmp    al,0xdf
  420a60:	(bad)  
  420a61:	jg     0x420a2a
  420a63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a64:	cmp    ebx,DWORD PTR [ebx+edi*1-0x34]
  420a68:	pop    ds
  420a69:	ss ret 0x8064
  420a6d:	int3   
  420a6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a6f:	dec    ebp
  420a70:	cmc    
  420a71:	shr    BYTE PTR [eax+0x39],0xf4
  420a75:	mov    edi,0xe99703fe
  420a7a:	sub    al,0x84
  420a7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a7d:	xchg   esi,eax
  420a7e:	jl     0x420a29
  420a80:	je     0x420a38
  420a82:	inc    edi
  420a83:	js     0x420a8d
  420a85:	test   ah,dh
  420a87:	hlt    
  420a88:	ds mov cl,0x77
  420a8b:	mov    eax,0xe2494885
  420a90:	inc    esp
  420a91:	push   0xd22cfc4a
  420a96:	inc    esi
  420a97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a98:	jne    0x420a91
  420a9a:	xchg   edi,eax
  420a9b:	pop    es
  420a9c:	jbe    0x420ad2
  420a9e:	mov    DWORD PTR [ebp+0x3ae04394],esi
  420aa4:	aaa    
  420aa5:	test   bh,bh
  420aa7:	loop   0x420a39
  420aa9:	mov    ecx,0x455f1b0d
  420aae:	or     BYTE PTR [ebp-0x1d],cl
  420ab1:	cs aaa 
  420ab3:	xchg   BYTE PTR [edi],ch
  420ab5:	retf   0x94ef
  420ab8:	ins    BYTE PTR es:[edi],dx
  420ab9:	jo     0x420a7a
  420abb:	in     eax,0x8
  420abd:	inc    edx
  420abe:	xchg   esi,eax
  420abf:	test   DWORD PTR [eax-0x6a20ed7],ecx
  420ac5:	mov    ebp,0x1fa6bbb7
  420aca:	addr16 aas 
  420acc:	fidiv  WORD PTR [edi-0x7ad43bb]
  420ad2:	mov    WORD PTR [esi-0x4bd24c34],?
  420ad8:	jb     0x420aab
  420ada:	lea    ecx,[esi+esi*2]
  420add:	test   DWORD PTR [esi-0x1d],ecx
  420ae0:	xor    dl,dl
  420ae2:	in     al,dx
  420ae3:	aam    0x2e
  420ae5:	xchg   esi,eax
  420ae6:	pop    eax
  420ae7:	cdq    
  420ae8:	mov    bl,0xdb
  420aea:	int    0xa3
  420aec:	add    eax,0xd8747f33
  420af1:	fist   WORD PTR [edx+0x44]
  420af4:	xchg   ecx,eax
  420af5:	iret   
  420af6:	cdq    
  420af7:	out    0x35,al
  420af9:	jmp    0x420b55
  420afb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420afc:	cli    
  420afd:	aas    
  420afe:	pop    edx
  420aff:	mov    al,0x2b
  420b01:	mul    esi
  420b03:	sbb    DWORD PTR [ebp-0x39],edx
  420b06:	aad    0xe0
  420b08:	xchg   edi,edi
  420b0a:	push   eax
  420b0b:	sbb    edi,ecx
  420b0d:	retf   
  420b0e:	loope  0x420ae2
  420b10:	scas   al,BYTE PTR es:[edi]
  420b11:	jmp    0x420b33
  420b13:	int3   
  420b14:	arpl   bp,di
  420b16:	sbb    eax,0xdbdad437
  420b1b:	loope  0x420b50
  420b1d:	call   0xf303a8f4
  420b22:	pop    esp
  420b23:	pushf  
  420b24:	gs (bad) 
  420b26:	cdq    
  420b27:	adc    esi,esi
  420b29:	dec    esp
  420b2a:	ins    DWORD PTR es:[edi],dx
  420b2b:	(bad)  
  420b2c:	hlt    
  420b2d:	repnz or esi,DWORD PTR [ebx]
  420b30:	in     eax,0xae
  420b32:	mov    bh,0xe6
  420b34:	ins    DWORD PTR es:[edi],dx
  420b35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b36:	clc    
  420b37:	stos   DWORD PTR es:[edi],eax
  420b38:	xor    ch,BYTE PTR [edx+eiz*4-0x7387e8bd]
  420b3f:	push   esp
  420b40:	pop    ds
  420b41:	lock xor BYTE PTR [esi+0x344b1f2c],bh
  420b48:	mov    bl,0xa4
  420b4a:	retf   0xe462
  420b4d:	jae    0x420b1f
  420b4f:	pop    DWORD PTR [ebx+edi*8]
  420b52:	sub    ch,ah
  420b54:	stos   BYTE PTR es:[edi],al
  420b55:	int3   
  420b56:	sub    dh,BYTE PTR [ebp-0x5a]
  420b59:	xor    BYTE PTR [esi],0xe8
  420b5c:	data16 daa 
  420b5e:	ins    DWORD PTR es:[edi],dx
  420b5f:	stos   BYTE PTR es:[edi],al
  420b60:	cmp    eax,0xb76ba03a
  420b65:	(bad)  
  420b67:	test   eax,0x79e897f1
  420b6c:	mov    ds:0xa1b6a968,al
  420b71:	or     BYTE PTR [eax+0xb98bb4],bh
  420b77:	mov    edi,0x79c4fd8b
  420b7c:	shr    DWORD PTR [esi+0x663249f1],0xe5
  420b83:	hlt    
  420b84:	adc    al,BYTE PTR [esi-0x5a]
  420b87:	jae    0x420ba5
  420b89:	test   DWORD PTR ds:[ebx],edi
  420b8c:	jp     0x420b71
  420b8e:	push   ds
  420b8f:	cmc    
  420b90:	inc    ebx
  420b91:	loope  0x420bed
  420b93:	(bad)  
  420b94:	out    dx,eax
  420b95:	loopne 0x420be9
  420b97:	pop    ecx
  420b98:	pop    ds
  420b99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b9a:	jge    0x420b8e
  420b9c:	fsub   DWORD PTR [esp+edi*2+0x492d1ab8]
  420ba3:	repnz loop 0x420b36
  420ba6:	imul   esi,DWORD PTR [esi],0xffffffd4
  420ba9:	nop
  420baa:	mov    bh,0x33
  420bac:	test   DWORD PTR cs:[eax-0x32],edx
  420bb0:	mov    edx,0x526aa55b
  420bb5:	xchg   esi,eax
  420bb6:	daa    
  420bb7:	test   eax,0x27c4ae6c
  420bbc:	addr16 test al,0xd4
  420bbf:	fwait
  420bc0:	ins    DWORD PTR es:[edi],dx
  420bc1:	ins    BYTE PTR es:[edi],dx
  420bc2:	mul    ecx
  420bc4:	and    edx,DWORD PTR [ebx]
  420bc6:	mov    ecx,0xf7d54432
  420bcb:	fdiv   QWORD PTR ds:[ebx-0x5d759fc6]
  420bd2:	mov    bh,0x48
  420bd4:	mov    ds:0xc80c5b4f,eax
  420bd9:	rcr    BYTE PTR [ebx-0x79cf7178],0x43
  420be0:	pop    esp
  420be1:	dec    edx
  420be2:	push   edi
  420be3:	cld    
  420be4:	out    dx,al
  420be5:	sub    eax,0xc42eb473
  420bea:	sub    DWORD PTR [edx+0x31],eax
  420bed:	dec    eax
  420bee:	enter  0xe70f,0xe2
  420bf2:	mov    DWORD PTR [eax+0x1e],eax
  420bf5:	cmp    al,0xae
  420bf7:	push   cs
  420bf8:	test   eax,0xdf73bd8f
  420bfd:	jns    0x420c64
  420bff:	pop    esp
  420c00:	adc    DWORD PTR [ebx+eax*1-0x5c],edx
  420c04:	and    ah,BYTE PTR [edx]
  420c06:	ss push eax
  420c08:	jnp    0x420bdd
  420c0a:	hlt    
  420c0b:	(bad)  
  420c0c:	push   cs
  420c0d:	cwde   
  420c0e:	xor    ecx,0x1a
  420c11:	popf   
  420c12:	mov    dh,0xd2
  420c14:	sbb    esp,DWORD PTR [eax-0x8]
  420c17:	push   esp
  420c18:	ret    0x5586
  420c1b:	push   esi
  420c1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c1d:	dec    al
  420c1f:	jae    0x420c90
  420c21:	repz mov esp,0xcdcbf4fb
  420c27:	in     al,0x68
  420c29:	mov    dl,0xe1
  420c2b:	mov    cl,0x7
  420c2d:	mov    al,0xc8
  420c2f:	fxam   
  420c31:	pop    edi
  420c32:	and    eax,0x451406ac
  420c37:	push   0x11
  420c39:	pop    ecx
  420c3a:	adc    bx,di
  420c3d:	and    DWORD PTR [edi+esi*2],0xe31dc589
  420c44:	fwait
  420c45:	jle    0x420c2c
  420c47:	push   edx
  420c48:	jmp    0x650714a3
  420c4d:	xchg   BYTE PTR [edx-0x28],al
  420c50:	fs push cs
  420c52:	ret    
  420c53:	cld    
  420c54:	mov    eax,0xe0cfb8ea
  420c59:	push   es
  420c5a:	test   esi,esp
  420c5c:	fidiv  DWORD PTR [eax-0x1655e757]
  420c62:	sbb    al,0x4a
  420c64:	add    DWORD PTR [edi+0x2414f41a],eax
  420c6a:	xchg   edi,eax
  420c6b:	scas   eax,DWORD PTR es:[edi]
  420c6c:	loopne 0x420c08
  420c6e:	add    BYTE PTR [eax],al
  420c70:	add    BYTE PTR [eax],al
  420c72:	add    DWORD PTR [ebp-0x28],edi
  420c75:	mov    ebp,0xfd65bdfc
  420c7a:	or     cl,BYTE PTR [ecx-0x4dcd47a9]
  420c80:	(bad)  
  420c81:	push   eax
  420c82:	leave  
  420c83:	xchg   BYTE PTR [ecx],al
  420c85:	add    ah,dh
  420c87:	add    al,0x0
  420c89:	add    BYTE PTR [ecx+edx*1-0x5d37e3c6],bh
  420c90:	fmul   DWORD PTR [eax+0x78]
  420c93:	jmp    0x420ca8
  420c95:	jae    0x420c87
  420c97:	call   0x8a240eb2
  420c9c:	icebp  
  420c9d:	and    DWORD PTR [ebp+0x41720675],ebp
  420ca3:	lods   al,BYTE PTR ds:[esi]
  420ca4:	jmp    0xfb15:0x69a57c55
  420cab:	push   es
  420cac:	jnp    0x420ce9
  420cae:	sub    cl,BYTE PTR [ebx-0x6]
  420cb1:	jnp    0x420c9e
  420cb3:	iret   
  420cb4:	ins    DWORD PTR es:[edi],dx
  420cb5:	mov    eax,0x6a1c74ee
  420cba:	xchg   ebx,eax
  420cbb:	jecxz  0x420cd3
  420cbd:	data16 fdiv DWORD PTR [edi-0x5a8a1834]
  420cc4:	(bad)  
  420cc5:	xchg   ecx,eax
  420cc6:	aam    0x7
  420cc8:	inc    ebp
  420cc9:	shl    DWORD PTR [esi-0x45],0x80
  420ccd:	inc    eax
  420cce:	pop    edi
  420ccf:	sti    
  420cd0:	or     ecx,esp
  420cd2:	jno    0x420d40
  420cd4:	test   BYTE PTR [edx-0x45],ah
  420cd7:	mov    DWORD PTR [ebx+0x54],0x64263be0
  420cde:	stos   BYTE PTR es:[edi],al
  420cdf:	mov    al,0x87
  420ce1:	nop
  420ce2:	fimul  DWORD PTR [edx+0x1480c30f]
  420ce8:	sar    BYTE PTR [edi],0x79
  420ceb:	lds    eax,FWORD PTR [edx-0x18cd814]
  420cf1:	lods   al,BYTE PTR ds:[esi]
  420cf2:	push   esi
  420cf3:	mov    bl,0x2e
  420cf5:	xchg   BYTE PTR [edi],cl
  420cf7:	sbb    eax,0xb6ea626
  420cfc:	popf   
  420cfd:	ret    
  420cfe:	(bad)  
  420cff:	sbb    eax,0xac45590a
  420d04:	adc    DWORD PTR [ebx],esi
  420d06:	inc    ebx
  420d07:	dec    ecx
  420d08:	dec    ecx
  420d09:	sahf   
  420d0a:	int    0xfd
  420d0c:	retf   
  420d0d:	mov    edi,0xae20a7ac
  420d12:	mov    edx,0x19b28dd0
  420d17:	stos   BYTE PTR es:[edi],al
  420d18:	xchg   ebp,eax
  420d19:	addr16 dec esi
  420d1b:	out    dx,eax
  420d1c:	jp     0x420cae
  420d1e:	stos   BYTE PTR es:[edi],al
  420d1f:	stos   DWORD PTR es:[edi],eax
  420d20:	xchg   ebx,eax
  420d21:	xrelease mov DWORD PTR [edi],eax
  420d24:	push   cs
  420d25:	and    ch,BYTE PTR [esi+0x75]
  420d28:	jae    0x420cd0
  420d2a:	sbb    ch,BYTE PTR [edx]
  420d2c:	aam    0x54
  420d2e:	cmp    al,al
  420d30:	xchg   edi,eax
  420d31:	xor    BYTE PTR [ebp-0x1a],al
  420d34:	mov    ch,0xc4
  420d36:	sbb    DWORD PTR [eax-0x4f782a8e],0xffffffe8
  420d3d:	mov    bl,BYTE PTR [esi+ebx*1+0x4c409db6]
  420d44:	je     0x420d4e
  420d46:	scas   eax,DWORD PTR es:[edi]
  420d47:	add    esp,DWORD PTR [ebx]
  420d49:	rcr    dh,cl
  420d4b:	sub    esi,DWORD PTR [edi]
  420d4d:	mov    ah,0x17
  420d4f:	dec    esp
  420d50:	js     0x420d14
  420d52:	inc    edi
  420d53:	scas   eax,DWORD PTR es:[edi]
  420d54:	dec    eax
  420d55:	sbb    BYTE PTR [edx-0x52],ah
  420d58:	mov    bh,0x8c
  420d5a:	sbb    eax,0xd9f13b25
  420d5f:	add    al,cl
  420d61:	cmp    BYTE PTR [ebx+0x1ec4a1ce],ah
  420d67:	adc    DWORD PTR ss:[esi-0x5b],edx
  420d6b:	hlt    
  420d6c:	sbb    BYTE PTR [esi-0x29c6f98d],dh
  420d72:	and    DWORD PTR [eax-0x4d],0xffffffa2
  420d76:	pop    esp
  420d77:	adc    BYTE PTR [edi-0x7a3d207c],ch
  420d7d:	jnp    0x420d5c
  420d7f:	hlt    
  420d80:	push   ss
  420d81:	repnz sub bl,BYTE PTR [ebx+0x563f361d]
  420d88:	(bad)  
  420d89:	push   edx
  420d8a:	and    al,0xab
  420d8c:	shl    BYTE PTR [esi],0x99
  420d8f:	je     0x420dba
  420d91:	dec    esi
  420d92:	or     dl,cl
  420d94:	sub    ebp,edi
  420d96:	and    ebp,DWORD PTR [eax-0x318c0f66]
  420d9c:	jae    0x420d3b
  420d9e:	loop   0x420dd9
  420da0:	jae    0x420d83
  420da2:	sub    BYTE PTR [edx+0x720559dd],bh
  420da8:	mov    eax,0xb46e7f2a
  420dad:	add    al,0x7d
  420daf:	xor    dh,BYTE PTR [edx]
  420db1:	fadd   DWORD PTR [ecx-0x71]
  420db4:	sub    DWORD PTR [ebx],ebx
  420db6:	retf   0xf1f3
  420db9:	fdivr  st,st(3)
  420dbb:	inc    esi
  420dbc:	es inc esi
  420dbe:	sbb    dl,BYTE PTR [esi-0x10be0232]
  420dc4:	lahf   
  420dc5:	(bad)  
  420dc7:	sbb    eax,0xdbba7cd
  420dcc:	jp     0x420e17
  420dce:	mov    WORD PTR [ebp+esi*8-0x4ffba3b6],fs
  420dd5:	push   eax
  420dd6:	inc    edi
  420dd7:	into   
  420dd8:	mov    eax,ds:0xc33e367c
  420ddd:	add    eax,0x50ef50aa
  420de2:	mov    gs,WORD PTR [edi-0x28]
  420de5:	in     eax,0x9e
  420de7:	jecxz  0x420de6
  420de9:	je     0x420dcb
  420deb:	jno    0x420d8e
  420ded:	inc    esp
  420dee:	iret   
  420def:	push   eax
  420df0:	jmp    0x4315d5a4
  420df5:	adc    BYTE PTR [esi],0x86
  420df8:	sbb    eax,0xfb06be8d
  420dfd:	retf   0x55de
  420e00:	push   ebp
  420e01:	je     0x420e5b
  420e03:	or     edi,DWORD PTR [eax]
  420e05:	add    al,0x88
  420e07:	scas   eax,DWORD PTR es:[edi]
  420e08:	or     ch,dl
  420e0a:	jl     0x420da6
  420e0c:	xor    eax,DWORD PTR [ebp+0x28f3a885]
  420e12:	cs loopne 0x420dad
  420e15:	mov    ch,0x16
  420e17:	xchg   esp,eax
  420e18:	ficomp DWORD PTR ds:0x64a7fcd3
  420e1e:	out    0xbc,eax
  420e20:	test   al,0xc0
  420e22:	fwait
  420e23:	in     al,dx
  420e24:	nop
  420e25:	imul   BYTE PTR [ebx-0x76]
  420e28:	dec    edi
  420e29:	lock gs arpl di,cx
  420e2d:	or     BYTE PTR [ecx],dh
  420e2f:	arpl   WORD PTR [ebx],dx
  420e31:	ss or  esp,DWORD PTR cs:[ebp+edx*1+0x77]
  420e37:	mov    eax,0x7f4b01e9
  420e3c:	mov    esi,0x78b14e9c
  420e41:	mov    bl,0x95
  420e43:	cmp    al,0xe0
  420e45:	xor    al,0x20
  420e47:	int    0x52
  420e49:	jge    0x420e23
  420e4b:	sti    
  420e4c:	dec    ebx
  420e4d:	pop    edx
  420e4e:	pop    ss
  420e4f:	retf   
  420e50:	cld    
  420e51:	adc    edi,DWORD PTR [edi+0x1]
  420e54:	(bad)  
  420e55:	push   esp
  420e56:	mov    ds:0x9f70fe08,eax
  420e5b:	outs   dx,BYTE PTR ds:[esi]
  420e5c:	fld    DWORD PTR [edi]
  420e5e:	adc    cl,BYTE PTR [ecx]
  420e60:	add    ebp,DWORD PTR [ebx+eax*1-0x51908338]
  420e67:	push   ebp
  420e68:	add    DWORD PTR gs:[edx],0x1d
  420e6c:	subps  xmm2,XMMWORD PTR [eax]
  420e6f:	mov    ebp,0xc258115
  420e74:	push   es
  420e75:	push   es
  420e76:	mov    ebx,0xfef5dbab
  420e7b:	mov    esi,0xf68b370f
  420e80:	aam    0x9e
  420e82:	ins    BYTE PTR es:[edi],dx
  420e83:	mov    ecx,0x3d9df03b
  420e88:	sbb    DWORD PTR [eax-0x36d9ce51],eax
  420e8e:	add    dl,BYTE PTR [ebp+0x2be51446]
  420e94:	in     al,0x49
  420e96:	mov    ebp,0xce8cc5de
  420e9b:	sbb    esp,esp
  420e9d:	or     dl,al
  420e9f:	addr16 fld st(4)
  420ea2:	inc    ecx
  420ea3:	scas   eax,DWORD PTR es:[edi]
  420ea4:	jne    0x420e73
  420ea6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ea7:	loopne 0x420e48
  420ea9:	lods   al,BYTE PTR ds:[esi]
  420eaa:	xchg   ecx,eax
  420eab:	in     al,dx
  420eac:	repz cdq 
  420eae:	popa   
  420eaf:	lds    esp,FWORD PTR ds:0x96336f85
  420eb5:	(bad)  
  420eb6:	sbb    esp,DWORD PTR [ebx]
  420eb8:	stc    
  420eb9:	push   es
  420eba:	rcr    DWORD PTR [edx],0x40
  420ebd:	test   eax,0x8a9cd188
  420ec2:	loop   0x420f3e
  420ec4:	cmp    dh,BYTE PTR [ebx]
  420ec6:	out    0xbd,eax
  420ec8:	imul   ebp,DWORD PTR [edi-0x2ec0f098],0xd9f39a54
  420ed2:	out    dx,eax
  420ed3:	inc    ecx
  420ed4:	mov    edx,0xffdf42d1
  420ed9:	jnp    0x420f4f
  420edb:	(bad)  
  420edc:	mov    esp,0xf34395c
  420ee1:	repz fisubr DWORD PTR [ebp-0x3b]
  420ee5:	es mov ebp,ecx
  420ee8:	invd   
  420eea:	mov    bh,0x9a
  420eec:	add    eax,0xbc66190
  420ef1:	sub    BYTE PTR [ecx+ecx*8],0x5f
  420ef5:	mov    eax,ds:0x6ea8c518
  420efa:	pop    ebx
  420efb:	mov    eax,ds:0x4caaa168
  420f00:	rcr    DWORD PTR [ebx-0x79],0xa1
  420f04:	xchg   BYTE PTR [ecx+ecx*8],cl
  420f07:	nop
  420f08:	xchg   edx,eax
  420f09:	aam    0xf8
  420f0b:	rcr    ah,cl
  420f0d:	mov    bh,0x68
  420f0f:	xor    DWORD PTR [esi-0x32],edi
  420f12:	rcr    ah,cl
  420f14:	adc    DWORD PTR [eax+ecx*2+0x61],eax
  420f18:	jbe    0x420ead
  420f1a:	out    dx,eax
  420f1b:	aad    0x6c
  420f1d:	hlt    
  420f1e:	xor    cl,BYTE PTR [ecx+eiz*2+0x7d8403a2]
  420f25:	imul   DWORD PTR [eax]
  420f27:	enter  0xe0ad,0x37
  420f2b:	xor    DWORD PTR [edi-0x2563050b],ecx
  420f31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f32:	test   eax,0x669d634
  420f37:	inc    esp
  420f38:	leave  
  420f39:	fimul  WORD PTR [edi+0x9f3f948]
  420f3f:	push   ds
  420f40:	pop    ebx
  420f41:	and    BYTE PTR [esi],cl
  420f43:	out    0xde,al
  420f45:	sub    DWORD PTR [edx-0x1a],0xffffff9c
  420f49:	aam    0x8f
  420f4b:	inc    ecx
  420f4c:	pop    esp
  420f4d:	adc    eax,0xc77de2f
  420f52:	push   esi
  420f53:	retf   
  420f54:	std    
  420f55:	retf   
  420f56:	stos   DWORD PTR es:[edi],eax
  420f57:	xchg   BYTE PTR [esi+edx*8+0x73],al
  420f5b:	in     al,0xc5
  420f5d:	out    0x6d,al
  420f5f:	aad    0xac
  420f61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f62:	and    al,cl
  420f64:	cmp    eax,0x306ff202
  420f69:	pop    es
  420f6a:	ret    
  420f6b:	add    bl,BYTE PTR [ecx-0x509c7cd9]
  420f71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f72:	sub    bh,BYTE PTR [edx]
  420f74:	jmp    0x420f8c
  420f76:	mov    ecx,0x495f63e7
  420f7b:	leave  
  420f7c:	sub    eax,0x7376913e
  420f81:	jno    0x420fdb
  420f83:	push   ss
  420f84:	out    0x42,al
  420f86:	or     ecx,ebx
  420f88:	pop    ebx
  420f89:	xor    DWORD PTR [ebp+0x308049a8],edi
  420f8f:	xor    eax,DWORD PTR [ecx+ebp*4-0x58]
  420f93:	test   al,0x73
  420f95:	fsubr  st(2),st
  420f97:	mov    bl,0xc7
  420f99:	xor    eax,DWORD PTR [esi+0x6b]
  420f9c:	mov    DWORD PTR [edx+0x56],esp
  420f9f:	xor    DWORD PTR [ecx+0x7bcdeba6],eax
  420fa5:	std    
  420fa6:	test   eax,0x21f72c01
  420fab:	jg     0x421011
  420fad:	out    0xd5,eax
  420faf:	cmc    
  420fb0:	les    ecx,FWORD PTR [esi-0x156bf988]
  420fb6:	fxch   st(3)
  420fb8:	clc    
  420fb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420fba:	lock test DWORD PTR [ebx],esi
  420fbd:	(bad)
  420fc1:	mov    esi,0xdb3d85b
  420fc6:	cmp    DWORD PTR ss:[ecx+ebp*4+0x58],ebp
  420fcb:	stos   DWORD PTR es:[edi],eax
  420fcc:	ds adc esi,ebp
  420fcf:	cmp    al,0xa
  420fd1:	pop    ebx
  420fd2:	mov    esp,0xce9e5f34
  420fd7:	xchg   edi,eax
  420fd8:	sar    BYTE PTR [ecx-0x52eefa3f],0x3e
  420fdf:	push   esi
  420fe0:	jnp    0x420fe6
  420fe2:	or     eax,DWORD PTR [edx-0x32]
  420fe5:	jns    0x420fd6
  420fe7:	sub    edi,esi
  420fe9:	or     BYTE PTR [eax-0x7a],ch
  420fec:	jmp    0x420ff6
  420fee:	(bad)  
  420fef:	inc    eax
  420ff0:	cwde   
  420ff1:	mov    eax,0x7dcea363
  420ff6:	push   0xffffff80
  420ff8:	dec    edx
  420ff9:	aam    0x7c
  420ffb:	aaa    
  420ffc:	hlt    
  420ffd:	cwde   
  420ffe:	call   0xa45f:0x6c937608
  421005:	sbb    al,0xda
  421007:	dec    ebp
  421008:	pop    ebp
  421009:	mov    DWORD PTR [eax+edi*4+0x4e],esp
  42100d:	and    BYTE PTR [edx+ebp*4+0x64],0x92
  421012:	repnz hlt 
  421014:	addr16 iret 
  421016:	push   es
  421017:	inc    esi
  421018:	xor    dh,bh
  42101a:	nop
  42101b:	outs   dx,DWORD PTR ds:[esi]
  42101c:	das    
  42101d:	(bad)  
  42101e:	mov    ?,WORD PTR [bp+si-0x14]
  421022:	outs   dx,DWORD PTR ds:[esi]
  421023:	xor    DWORD PTR [edi],0xffffff86
  421026:	adc    edx,esi
  421028:	(bad)  
  42102a:	outs   dx,DWORD PTR ds:[esi]
  42102b:	cli    
  42102c:	and    DWORD PTR [ebx],ecx
  42102e:	mov    es,edi
  421030:	imul   edi,DWORD PTR [edx],0x80b581b0
  421036:	add    ch,BYTE PTR [esi]
  421038:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421039:	ror    DWORD PTR ds:0xe90e1d33,1
  42103f:	lss    esp,FWORD PTR [ebx]
  421042:	loop   0x42101b
  421044:	arpl   WORD PTR [ecx+0x26db5546],sp
  42104a:	pop    ds
  42104b:	push   cs
  42104c:	test   al,0xd7
  42104e:	repz sub al,0xfb
  421051:	dec    ecx
  421052:	jbe    0x42101a
  421054:	fild   WORD PTR [ecx+0x24]
  421057:	fcom   QWORD PTR [edi]
  421059:	sahf   
  42105a:	outs   dx,BYTE PTR ds:[esi]
  42105b:	jecxz  0x420ffd
  42105d:	jo     0x421053
  42105f:	jbe    0x4210c0
  421061:	sub    ebp,0x1c
  421064:	mov    ecx,0xfb0c3c2
  421069:	and    DWORD PTR [eax],ebp
  42106b:	push   esp
  42106c:	sahf   
  42106d:	mov    ds:0x714608c,al
  421072:	jae    0x421097
  421074:	cmp    edx,0x78e0ee7a
  42107a:	adc    al,dl
  42107c:	sub    ebp,esp
  42107e:	pop    es
  42107f:	mov    esp,ebx
  421081:	push   0xfffffff7
  421083:	push   edx
  421084:	sahf   
  421085:	jo     0x4210ff
  421087:	ror    DWORD PTR [ebx-0x154871e0],1
  42108d:	jecxz  0x4210ce
  42108f:	adc    eax,0x39619ca5
  421094:	jp     0x421074
  421096:	fwait
  421097:	xchg   esi,eax
  421098:	pusha  
  421099:	shl    ebx,0xda
  42109c:	push   es
  42109d:	add    WORD PTR [eax-0xa],di
  4210a1:	mov    ecx,0xcf318425
  4210a6:	sahf   
  4210a7:	xchg   ebp,eax
  4210a8:	mov    bh,0xc3
  4210aa:	push   ecx
  4210ab:	or     ebx,DWORD PTR [ecx+0x6d]
  4210ae:	aaa    
  4210af:	cmp    DWORD PTR [esi-0x68],eax
  4210b2:	adc    BYTE PTR [ebx-0x5e45d6a1],ah
  4210b8:	jb     0x42111a
  4210ba:	dec    ebx
  4210bb:	out    dx,eax
  4210bc:	outs   dx,DWORD PTR ds:[esi]
  4210bd:	es jb  0x421072
  4210c0:	lahf   
  4210c1:	in     al,dx
  4210c2:	dec    edi
  4210c3:	aas    
  4210c4:	pop    es
  4210c5:	scas   eax,DWORD PTR es:[edi]
  4210c6:	test   BYTE PTR [ecx+0x67],0x40
  4210ca:	push   edi
  4210cb:	mov    ch,0xb7
  4210cd:	push   esp
  4210ce:	adc    BYTE PTR [ebp+0x25],0xa7
  4210d2:	mov    ah,0x4a
  4210d4:	clc    
  4210d5:	pop    es
  4210d6:	call   0xab68:0x60167d6f
  4210dd:	and    cl,BYTE PTR [ebx]
  4210df:	ins    DWORD PTR es:[edi],dx
  4210e0:	mov    dh,0x53
  4210e2:	fiadd  DWORD PTR [edi-0x275732fa]
  4210e8:	(bad)  
  4210e9:	jne    0x42107b
  4210eb:	hlt    
  4210ec:	in     al,0xd5
  4210ee:	pop    es
  4210ef:	xchg   ecx,eax
  4210f0:	dec    ebx
  4210f1:	adc    BYTE PTR [eax],0xee
  4210f4:	or     DWORD PTR [edi+0x28694480],edx
  4210fa:	dec    ecx
  4210fb:	jo     0x42107e
  4210fd:	adc    BYTE PTR [edi],ah
  4210ff:	loop   0x4210f4
  421101:	fnstenv [eax+0x635c3e58]
  421107:	xchg   esp,eax
  421108:	and    eax,0xeb8cee37
  42110d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42110e:	fsubr  st(5),st
  421110:	je     0x421123
  421112:	inc    ebx
  421113:	lods   al,BYTE PTR ds:[esi]
  421114:	out    0x97,eax
  421116:	xor    DWORD PTR [edi],ecx
  421118:	inc    ebp
  421119:	pop    edx
  42111a:	aam    0xa6
  42111c:	dec    eax
  42111d:	imul   ebx,DWORD PTR [eax],0xfffffffd
  421120:	add    eax,0x16b92637
  421125:	pop    ebx
  421126:	into   
  421127:	call   0x343c:0xafd512a3
  42112e:	push   0xe39b3051
  421133:	pop    ebx
  421134:	clc    
  421135:	out    dx,al
  421136:	jo     0x42112a
  421138:	test   edi,0xc803711d
  42113e:	add    dl,dh
  421140:	lds    esi,FWORD PTR [ecx+0x58f858d6]
  421146:	test   BYTE PTR ds:0x918e9346,cl
  42114d:	hlt    
  42114e:	mov    esi,0xd65387b0
  421153:	imul   eax,DWORD PTR [eax+0x6bfa67f6],0xffffffeb
  42115a:	into   
  42115b:	data16 int 0x7c
  42115e:	pop    edi
  42115f:	gs leave 
  421161:	pop    edi
  421162:	push   0xfffffff6
  421164:	push   0x31
  421166:	in     eax,dx
  421167:	sub    cl,al
  421169:	sti    
  42116a:	cdq    
  42116b:	mov    edi,0xda6dbc68
  421170:	call   0x583a:0x47e1de6f
  421177:	fbstp  TBYTE PTR [ebp+ebx*1+0x29]
  42117b:	pushf  
  42117c:	or     DWORD PTR [edi+0x0],esi
  42117f:	add    BYTE PTR [eax],al
  421181:	add    BYTE PTR [edi+0x5b2a13cf],al
  421187:	(bad)  
  421188:	mov    edi,0x5549c1ef
  42118d:	cmp    BYTE PTR [esi],dl
  42118f:	push   0x8bbd6ecd
  421194:	add    DWORD PTR [eax],eax
  421196:	hlt    
  421197:	add    al,0x0
  421199:	add    BYTE PTR [esi],al
  42119b:	mov    ebp,0xa105e858
  4211a0:	or     edx,ebp
  4211a2:	xchg   ebx,eax
  4211a3:	inc    edx
  4211a4:	(bad)  
  4211a5:	outs   dx,BYTE PTR ds:[esi]
  4211a6:	out    dx,al
  4211a7:	xchg   edx,eax
  4211a8:	int    0x90
  4211aa:	dec    ecx
  4211ab:	lock jbe 0x42122c
  4211ae:	fmul   DWORD PTR [eax]
  4211b0:	data16 mov ah,0xab
  4211b3:	inc    ebp
  4211b4:	adc    eax,0x2d4a5fcf
  4211b9:	mov    bh,0x0
  4211bb:	mov    eax,ds:0x70b0c19a
  4211c0:	stc    
  4211c1:	dec    edx
  4211c2:	inc    ebp
  4211c3:	jl     0x421177
  4211c5:	pop    ss
  4211c6:	icebp  
  4211c7:	and    eax,0x7203fbd8
  4211cc:	in     eax,dx
  4211cd:	fisubr WORD PTR [edx]
  4211cf:	das    
  4211d0:	pop    ebp
  4211d1:	or     al,0x61
  4211d3:	and    BYTE PTR [ebx+eax*4+0x2c175623],dh
  4211da:	mov    esp,0x49329c56
  4211df:	out    dx,eax
  4211e0:	push   ebp
  4211e1:	addr16 jb 0x421241
  4211e4:	out    dx,al
  4211e5:	fld    st(3)
  4211e7:	cwde   
  4211e8:	push   cs
  4211e9:	(bad)  
  4211ea:	pop    eax
  4211eb:	fadd   QWORD PTR [ecx+0x6b92d76c]
  4211f1:	inc    edi
  4211f2:	push   ss
  4211f3:	daa    
  4211f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211f5:	xchg   edx,eax
  4211f6:	push   eax
  4211f7:	fcom   QWORD PTR [eax]
  4211f9:	bound  edi,QWORD PTR [esi+0x71f35a8c]
  4211ff:	add    BYTE PTR ds:0xb4036287,cl
  421205:	sbb    dh,dh
  421207:	push   edx
  421208:	retf   
  421209:	int    0x3b
  42120b:	push   cs
  42120c:	pushf  
  42120d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42120e:	xor    ah,BYTE PTR [ebp+0x3f]
  421211:	(bad)  
  421212:	into   
  421213:	and    BYTE PTR [edi-0x52f4bed],0xe6
  42121a:	xchg   ebp,eax
  42121b:	pop    esi
  42121c:	fild   QWORD PTR [ebp-0x12]
  42121f:	sub    esi,DWORD PTR [ebx-0x7f]
  421222:	jno    0x421295
  421224:	inc    ebx
  421225:	cwde   
  421226:	rcr    DWORD PTR [esp+edx*1-0x2955b32d],cl
  42122d:	add    ebp,0x22
  421230:	push   edi
  421231:	sti    
  421232:	(bad)  
  421233:	fsub   DWORD PTR [ebx-0x69]
  421236:	xchg   edx,eax
  421237:	das    
  421238:	int    0x9a
  42123a:	outs   dx,BYTE PTR ds:[esi]
  42123b:	das    
  42123c:	sub    eax,0x8cdad064
  421241:	mov    cl,bh
  421243:	addr16 shl cl,1
  421246:	mov    bh,0x9c
  421248:	pop    es
  421249:	dec    ecx
  42124a:	out    0x52,eax
  42124c:	add    al,0x13
  42124e:	pop    ss
  42124f:	sti    
  421250:	xchg   BYTE PTR [esi+0x4d],dh
  421253:	mov    ds,WORD PTR [edi-0x246e83f2]
  421259:	je     0x421217
  42125b:	cld    
  42125c:	jle    0x4211f3
  42125e:	cld    
  42125f:	cmp    cl,BYTE PTR [ebx]
  421261:	call   0xe94969e4
  421266:	jo     0x42125e
  421268:	or     eax,0xe4c45073
  42126d:	imul   esp,eax,0xed60e8b7
  421273:	dec    edx
  421274:	adc    eax,DWORD PTR [ecx-0x52]
  421277:	cdq    
  421278:	call   FWORD PTR [ebp-0x2cc91a9c]
  42127e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42127f:	lock addr16 stc 
  421282:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421283:	scas   al,BYTE PTR es:[edi]
  421284:	pop    es
  421285:	pop    ebx
  421286:	ja     0x4212f7
  421288:	jo     0x4212fa
  42128a:	sbb    BYTE PTR [eax+0x6a],cl
  42128d:	xchg   edi,eax
  42128e:	bound  ebx,QWORD PTR [eax+0x4c81aaf]
  421294:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421295:	sbb    BYTE PTR [eax-0x16],dh
  421298:	lock ins BYTE PTR es:[edi],dx
  42129a:	shl    BYTE PTR [edx-0x69],cl
  42129d:	adc    eax,DWORD PTR [ecx]
  42129f:	inc    ebp
  4212a0:	sub    al,0x2b
  4212a2:	sahf   
  4212a3:	sar    BYTE PTR [ebp+0x41050d04],0x81
  4212aa:	outs   dx,DWORD PTR ds:[esi]
  4212ab:	cmc    
  4212ac:	ins    DWORD PTR es:[edi],dx
  4212ad:	js     0x421302
  4212af:	pop    es
  4212b0:	adc    ch,ah
  4212b2:	jge    0x42128b
  4212b4:	cld    
  4212b5:	sti    
  4212b6:	arpl   WORD PTR [ecx+edx*1+0x5fee9f57],ax
  4212bd:	leave  
  4212be:	cmp    esp,edi
  4212c0:	mov    ecx,0xf3652e10
  4212c5:	cmp    BYTE PTR [esi+0x76],ch
  4212c8:	sbb    DWORD PTR [ecx],0xbec58fa
  4212ce:	iret   
  4212cf:	mov    ds:0x9e361df,al
  4212d4:	(bad)  
  4212d5:	mov    BYTE PTR [edi-0x6e],ah
  4212d8:	inc    ecx
  4212d9:	(bad)
  4212dd:	mov    dl,0xae
  4212df:	enter  0x8fa6,0x42
  4212e3:	add    al,0x29
  4212e5:	inc    esp
  4212e6:	push   ds
  4212e7:	mov    al,0x58
  4212e9:	out    0x21,eax
  4212eb:	jne    0x42126d
  4212ed:	cs std 
  4212ef:	mov    esp,0x67a133ff
  4212f4:	or     BYTE PTR [ebp-0x21],ah
  4212f7:	and    dh,bl
  4212f9:	mov    ecx,0x7616a2ae
  4212fe:	xchg   BYTE PTR es:[esi-0x52656493],dh
  421305:	xor    al,0x92
  421307:	ret    0xd765
  42130a:	dec    eax
  42130b:	stc    
  42130c:	sbb    edi,ebx
  42130e:	and    ah,dh
  421310:	mov    ds:0x4764263d,eax
  421315:	(bad)  
  421316:	xchg   ebx,eax
  421317:	stos   DWORD PTR es:[edi],eax
  421318:	call   0xe3d1:0x80c3ffac
  42131f:	je     0x4212d0
  421321:	jg     0x421365
  421323:	fimul  WORD PTR [esi+0x4f12235f]
  421329:	mov    dh,0x1f
  42132b:	out    0xaf,al
  42132d:	dec    ebx
  42132e:	xor    DWORD PTR [esi+0x15],esp
  421331:	mov    ch,dl
  421333:	repnz cmp BYTE PTR fs:[esi+ebp*1-0x79],ah
  421339:	sbb    cl,ch
  42133b:	dec    eax
  42133c:	out    0x34,eax
  42133e:	mov    ds:0x40eccdb7,eax
  421343:	xor    al,BYTE PTR [edi+0x36b80fcd]
  421349:	cmp    DWORD PTR [edx-0x23],ebx
  42134c:	shr    DWORD PTR [edx-0x53b94b6],cl
  421352:	sbb    eax,0x4f96c16a
  421357:	or     eax,0x313f83a8
  42135c:	out    0x47,al
  42135e:	popa   
  42135f:	shl    DWORD PTR [esi-0x2e73f4c6],0xf5
  421366:	mov    cl,0x41
  421368:	(bad)  
  421369:	repz into 
  42136b:	push   esi
  42136c:	lea    eax,[eax]
  42136e:	sub    BYTE PTR [eax+edi*4+0x5f3d939e],ch
  421375:	pop    ebx
  421376:	jnp    0x4213e2
  421378:	jmp    DWORD PTR [ecx-0x2d4bae9d]
  42137e:	in     eax,dx
  42137f:	cmp    bl,ch
  421381:	out    dx,al
  421382:	sub    DWORD PTR [edi],edi
  421384:	pop    edx
  421385:	iret   
  421386:	into   
  421387:	pop    ebx
  421388:	in     al,dx
  421389:	mov    ah,0xe8
  42138b:	push   eax
  42138c:	jno    0x421351
  42138e:	popa   
  42138f:	add    al,0xed
  421391:	test   bl,bh
  421393:	retf   
  421394:	xchg   edi,eax
  421395:	add    BYTE PTR [ecx-0x3d],ah
  421398:	into   
  421399:	xchg   edi,eax
  42139a:	outs   dx,DWORD PTR ds:[esi]
  42139b:	jo     0x4213e5
  42139d:	ds xchg edx,eax
  42139f:	xor    DWORD PTR [edi+eiz*8+0x5019f8e5],eax
  4213a6:	mov    ebx,0xa5e7e57c
  4213ab:	mov    ecx,0xd9fd3490
  4213b0:	aam    0x9
  4213b2:	cmc    
  4213b3:	pop    edx
  4213b4:	push   ebx
  4213b5:	cmp    ah,ah
  4213b7:	jne    0x4213f3
  4213b9:	add    eax,DWORD PTR [eax-0x6fa5b9a1]
  4213bf:	daa    
  4213c0:	cli    
  4213c1:	jne    0x4213ae
  4213c3:	sbb    ebx,DWORD PTR [edi]
  4213c5:	cli    
  4213c6:	mov    bl,dh
  4213c8:	jns    0x421412
  4213ca:	popf   
  4213cb:	mov    edi,0x33315ffc
  4213d0:	dec    ebp
  4213d1:	pop    edx
  4213d2:	stos   BYTE PTR es:[edi],al
  4213d3:	fadd   QWORD PTR [edi]
  4213d5:	mov    ds:0x194ede16,al
  4213da:	xchg   eax,ecx
  4213dc:	popf   
  4213dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213de:	retf   0x620d
  4213e1:	je     0x421454
  4213e3:	imul   esp,DWORD PTR [ecx],0x9cd6fe94
  4213e9:	idiv   BYTE PTR [ecx+0x6ff3e328]
  4213ef:	cmp    BYTE PTR [esi+eax*8],cl
  4213f2:	fadd   st(0),st
  4213f4:	add    DWORD PTR [edx],0x362922d1
  4213fa:	ss jg  0x421424
  4213fd:	scas   eax,DWORD PTR es:[edi]
  4213fe:	push   ebx
  4213ff:	adc    al,0x3c
  421401:	out    dx,al
  421402:	stos   BYTE PTR es:[edi],al
  421403:	sar    DWORD PTR [esi],cl
  421405:	adc    eax,DWORD PTR [eax-0x34]
  421408:	jmp    0x42141a
  42140a:	icebp  
  42140b:	mov    esp,0x9080d986
  421410:	fisttp WORD PTR [edi-0x79]
  421413:	push   ss
  421414:	gs jbe 0x42145b
  421417:	inc    esp
  421418:	test   al,0xd4
  42141a:	lds    ebp,FWORD PTR [ebx-0x37]
  42141d:	lods   al,BYTE PTR ds:[esi]
  42141e:	shl    DWORD PTR [edi+0x3d],0xde
  421422:	cmp    esi,DWORD PTR [edx]
  421424:	(bad)  
  421425:	and    ah,BYTE PTR [ecx+0x755e2737]
  42142b:	lea    edi,ss:[edx-0x55]
  42142f:	jnp    0x42144d
  421431:	arpl   bp,ax
  421433:	ror    BYTE PTR [esi+0x26],cl
  421436:	push   ecx
  421437:	add    eax,DWORD PTR [ebp-0x20]
  42143a:	mov    ds:0xf0ee969b,eax
  42143f:	and    al,0xfd
  421441:	ds sub al,0xa8
  421444:	in     al,dx
  421445:	or     edi,DWORD PTR [ebp+0x4585dd3f]
  42144b:	push   0x153737ff
  421450:	jle    0x4214bc
  421452:	push   0xffffff9e
  421454:	mov    esp,0x4d6d458b
  421459:	stos   DWORD PTR es:[edi],eax
  42145a:	adc    ebp,0x63
  42145d:	xchg   edx,eax
  42145e:	jmp    0x42142d
  421460:	jb     0x421448
  421462:	lods   eax,DWORD PTR ds:[esi]
  421463:	add    cl,bh
  421465:	aam    0x13
  421467:	pop    ds
  421468:	mov    ebp,0x877fcf54
  42146d:	test   ebx,esp
  42146f:	retf   
  421470:	fcom   DWORD PTR [esi-0x5c]
  421473:	add    DWORD PTR [edi-0x51],ebp
  421476:	sti    
  421477:	push   0xffffff99
  421479:	icebp  
  42147a:	(bad)  
  42147c:	add    al,0x13
  42147e:	daa    
  42147f:	loope  0x42145c
  421481:	addr16 and al,0x48
  421484:	xlat   BYTE PTR ds:[ebx]
  421485:	mov    edx,0x2d116b05
  42148a:	addr16 out dx,al
  42148c:	pop    ecx
  42148d:	mov    ch,0x2e
  42148f:	out    dx,al
  421490:	setb   BYTE PTR [ebx+ecx*2]
  421494:	(bad)  [ebp+0x5f]
  421497:	out    dx,eax
  421498:	inc    esp
  421499:	call   0x2591:0x3bcdc428
  4214a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214a1:	lods   eax,DWORD PTR ds:[esi]
  4214a2:	push   ebp
  4214a3:	ror    bh,cl
  4214a5:	xchg   esp,eax
  4214a6:	ret    0x2df8
  4214a9:	sbb    al,0x20
  4214ab:	or     BYTE PTR [ecx-0x5c],dl
  4214ae:	pop    esp
  4214af:	jg     0x421435
  4214b1:	jno    0x4214aa
  4214b3:	popf   
  4214b4:	pop    ss
  4214b5:	push   es
  4214b6:	dec    edx
  4214b7:	clc    
  4214b8:	dec    ebp
  4214b9:	ror    BYTE PTR [ebx-0xb],1
  4214bc:	das    
  4214bd:	out    dx,al
  4214be:	cwde   
  4214bf:	cmp    BYTE PTR [esi+0x70],ch
  4214c2:	and    DWORD PTR [esi+0x136eefbc],esi
  4214c8:	lahf   
  4214c9:	int3   
  4214ca:	mov    BYTE PTR [esi],0x3e
  4214cd:	cdq    
  4214ce:	inc    esp
  4214cf:	or     eax,0x44d6c1dd
  4214d4:	outs   dx,DWORD PTR ds:[esi]
  4214d5:	das    
  4214d6:	int3   
  4214d7:	aam    0xd8
  4214d9:	pushf  
  4214da:	lahf   
  4214db:	ins    BYTE PTR es:[edi],dx
  4214dc:	lea    ebx,[eax+edi*8]
  4214df:	shl    BYTE PTR [edx],cl
  4214e1:	fwait
  4214e2:	jp     0x42154e
  4214e4:	cmp    ah,dl
  4214e6:	cmp    esi,DWORD PTR [edi]
  4214e8:	dec    ecx
  4214e9:	mov    esi,0xf20531ab
  4214ee:	adc    BYTE PTR [ebx+0xab2de18],ch
  4214f4:	push   cs
  4214f5:	loope  0x421477
  4214f7:	mov    dl,0x25
  4214f9:	mov    dh,bh
  4214fb:	inc    esp
  4214fc:	das    
  4214fd:	aaa    
  4214fe:	mov    dh,0xb2
  421500:	pop    es
  421501:	lfs    ebp,FWORD PTR [edx]
  421504:	add    eax,0xd4e5d9eb
  421509:	ja     0x4214a8
  42150b:	cmc    
  42150c:	mov    bl,0xd4
  42150e:	mov    WORD PTR [edi],gs
  421510:	and    al,0xc
  421512:	dec    edi
  421513:	lods   eax,DWORD PTR ds:[esi]
  421514:	fwait
  421515:	call   0x326b3df2
  42151a:	jno    0x421537
  42151c:	pop    esi
  42151d:	pop    edi
  42151e:	int    0xd6
  421520:	jo     0x4214de
  421522:	out    dx,eax
  421523:	sbb    eax,0x98f40753
  421528:	push   0x1594c334
  42152d:	sbb    BYTE PTR [esi+0x43c64df2],ah
  421533:	dec    edx
  421534:	ret    0x2f83
  421537:	jne    0x421598
  421539:	repz xor BYTE PTR [eax+0x70],bl
  42153d:	cli    
  42153e:	cld    
  42153f:	and    DWORD PTR [esi],edi
  421541:	sbb    BYTE PTR [eax-0x37],0xb
  421545:	jle    0x421582
  421547:	jb     0x42157e
  421549:	xchg   esi,eax
  42154a:	pop    edi
  42154b:	xchg   edx,eax
  42154c:	icebp  
  42154d:	mov    ebx,0x78d52e52
  421552:	xchg   DWORD PTR [ecx+0x57],ebx
  421555:	nop
  421556:	cs pop ebp
  421558:	aad    0x4c
  42155a:	loope  0x421576
  42155c:	pusha  
  42155d:	leave  
  42155e:	xchg   ebx,eax
  42155f:	xor    al,0x62
  421561:	(bad)  
  421562:	mov    cl,0xe7
  421564:	retf   
  421565:	xchg   edx,eax
  421566:	add    eax,0x73d2fd3f
  42156b:	pusha  
  42156c:	inc    ebx
  42156d:	mov    ebp,ecx
  42156f:	mov    eax,DWORD PTR [ebx-0x1b6ed9a]
  421575:	push   esp
  421576:	mov    edx,0xaec45c01
  42157b:	jge    0x4215e8
  42157d:	mov    edx,0x7f3d928e
  421582:	cmp    BYTE PTR [ebp+0x7fbd2778],dl
  421588:	lock or dl,BYTE PTR [ecx]
  42158b:	les    edi,FWORD PTR [edx-0x3d6b1e63]
  421591:	or     ebx,DWORD PTR ds:[esi+edi*1+0x41]
  421596:	emms   
  421598:	xchg   ebp,eax
  421599:	dec    ecx
  42159a:	nop
  42159b:	ds es push 0xf4ba6e97
  4215a2:	mov    bl,0xa1
  4215a4:	mov    edi,0xb431fbc3
  4215a9:	gs sti 
  4215ab:	mov    bl,0x9a
  4215ad:	adc    eax,0x320501aa
  4215b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215b3:	test   ch,ah
  4215b5:	addr16 or eax,0x199d5e5f
  4215bb:	and    ebp,DWORD PTR [eax+0x225d9c16]
  4215c1:	cmp    BYTE PTR [ebx],cl
  4215c3:	repnz rcr DWORD PTR [eax+0x21af9c5f],0x79
  4215cb:	bound  esp,QWORD PTR [ebx+0x64]
  4215ce:	dec    eax
  4215cf:	add    DWORD PTR [ebx-0x2],eax
  4215d2:	and    eax,0x55df5629
  4215d7:	or     DWORD PTR [edx],ebx
  4215d9:	and    ebp,esi
  4215db:	mov    ebp,0x4ccbadce
  4215e0:	and    edi,DWORD PTR [esi]
  4215e2:	in     al,0x38
  4215e4:	sub    BYTE PTR [ebp-0x13],dl
  4215e7:	in     al,dx
  4215e8:	xlat   BYTE PTR ds:[ebx]
  4215e9:	test   eax,0x9d6daca1
  4215ee:	xchg   edi,eax
  4215ef:	cmp    ecx,DWORD PTR [ecx+ebx*8+0x32]
  4215f3:	nop
  4215f4:	aam    0x40
  4215f6:	out    dx,al
  4215f7:	nop
  4215f8:	fs sub eax,0xe6f5ee52
  4215fe:	mov    al,ds:0x4e0ff3d8
  421603:	mov    esp,0x172d8194
  421608:	xchg   ebx,eax
  421609:	out    0x37,eax
  42160b:	mov    esi,0x883632d6
  421610:	push   ds
  421611:	lea    edi,[esi-0x49]
  421614:	push   0x7aa9b342
  421619:	outs   dx,DWORD PTR ds:[esi]
  42161a:	jle    0x4215c2
  42161c:	pushf  
  42161d:	int3   
  42161e:	es jecxz 0x4215ba
  421621:	(bad)  [esi+ebx*8-0x7a]
  421625:	xor    ecx,DWORD PTR [bx+0x5958]
  42162a:	sahf   
  42162b:	mov    ds:0x541209ea,eax
  421630:	lods   eax,DWORD PTR ds:[esi]
  421631:	add    esp,edx
  421633:	enter  0x285f,0xea
  421637:	jle    0x4215f3
  421639:	test   eax,0xf863815a
  42163e:	out    dx,eax
  42163f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421640:	mov    cl,BYTE PTR [ebx+0x44cf4f1e]
  421646:	xchg   BYTE PTR [ecx+0x1b639a74],ch
  42164c:	mov    al,0x85
  42164e:	(bad)  
  42164f:	imul   esi,eax,0x34
  421652:	imul   edi,DWORD PTR [edx+0x4c],0xffffffa5
  421656:	dec    esi
  421657:	fcom   QWORD PTR [edx+0x76]
  42165a:	add    BYTE PTR [esi+0xd],cl
  42165d:	shl    BYTE PTR [ecx+edx*4+0x35],0xed
  421662:	in     al,dx
  421663:	or     DWORD PTR [edi-0x4a],ebp
  421666:	shr    BYTE PTR [esi-0xc],0x50
  42166a:	imul   edx,DWORD PTR [edi+0x4e26d753],0x53d58ad9
  421674:	adc    eax,0x216e4c72
  421679:	fldenv [ebx-0x68]
  42167c:	push   esp
  42167d:	(bad)  
  42167e:	shr    DWORD PTR [edx+0x2a],cl
  421681:	arpl   WORD PTR [ecx+0x6f],dx
  421684:	jmp    0xd8a81ba
  421689:	out    dx,eax
  42168a:	iret   
  42168b:	or     esi,esi
  42168d:	test   DWORD PTR [eax],0xfb000000
  421693:	and    al,0xdc
  421695:	es (bad) 
  421698:	sti    
  421699:	std    
  42169a:	sbb    ch,BYTE PTR [edx]
  42169c:	adc    eax,0x4fa828c6
  4216a1:	lods   al,BYTE PTR ds:[esi]
  4216a2:	mov    cl,0x90
  4216a4:	add    DWORD PTR [eax],eax
  4216a6:	hlt    
  4216a7:	add    al,0x0
  4216a9:	add    dh,dh
  4216ab:	fdiv   QWORD PTR [edi]
  4216ad:	fistp  QWORD PTR [ecx+0x6e]
  4216b0:	neg    BYTE PTR [edi-0xe]
  4216b3:	pusha  
  4216b4:	push   eax
  4216b5:	inc    eax
  4216b6:	pop    ecx
  4216b7:	push   esp
  4216b8:	and    al,0x49
  4216ba:	and    esi,eax
  4216bc:	lds    ecx,FWORD PTR [ebp+0x6bca7558]
  4216c2:	outs   dx,DWORD PTR ds:[esi]
  4216c3:	xor    eax,0x2acdd528
  4216c8:	xor    eax,ebx
  4216ca:	ds mov ch,dl
  4216cd:	call   0xd80cd876
  4216d2:	or     DWORD PTR [edi+eiz*4],0x8a18dca5
  4216d9:	sbb    al,0xc
  4216db:	inc    eax
  4216dc:	test   edi,ecx
  4216de:	sti    
  4216df:	and    BYTE PTR [ebp-0x17],cl
  4216e2:	xlat   BYTE PTR ds:[ebx]
  4216e3:	mov    al,0xb2
  4216e5:	cmp    BYTE PTR [eax],0x77
  4216e8:	mov    ch,0xbe
  4216ea:	dec    eax
  4216eb:	pop    edi
  4216ec:	adc    eax,0xb2b5a1a8
  4216f1:	bound  ebx,QWORD PTR [ebp+0x4fd29622]
  4216f7:	mov    al,ds:0xd933e0ff
  4216fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4216fd:	push   esi
  4216fe:	in     al,dx
  4216ff:	xchg   dh,dl
  421701:	dec    edi
  421702:	scas   al,BYTE PTR es:[edi]
  421703:	dec    esp
  421704:	cdq    
  421705:	pop    es
  421706:	adc    al,0xb4
  421708:	jl     0x42176d
  42170a:	xor    DWORD PTR [edx+0x2f1d1865],ebp
  421710:	jl     0x42175a
  421712:	xor    BYTE PTR [esi-0x6],dh
  421715:	js     0x42176c
  421717:	fdiv   DWORD PTR [edx+0x6a49eed3]
  42171d:	mov    BYTE PTR [esi],dl
  42171f:	int    0x1
  421721:	clc    
  421722:	and    DWORD PTR [ebp+edx*1+0x4],esp
  421726:	ret    
  421727:	std    
  421728:	pop    ss
  421729:	stos   DWORD PTR es:[edi],eax
  42172a:	addr16 mov al,0x74
  42172d:	mov    ds:0xf5709d99,al
  421732:	sub    al,0x93
  421734:	adc    eax,0xeace98fd
  421739:	leave  
  42173a:	sbb    DWORD PTR [edi],esi
  42173c:	add    al,0xf3
  42173e:	hlt    
  42173f:	scas   al,BYTE PTR es:[edi]
  421740:	addr16 push ecx
  421742:	outs   dx,DWORD PTR gs:[esi]
  421744:	scas   eax,DWORD PTR es:[edi]
  421745:	push   ss
  421746:	(bad)  
  421747:	push   0xa90fe8ea
  42174c:	outs   dx,BYTE PTR ds:[esi]
  42174d:	and    ch,BYTE PTR [ecx-0x39bae7c5]
  421753:	mov    al,0x1f
  421755:	and    edx,esi
  421757:	push   ecx
  421758:	popa   
  421759:	shr    ch,1
  42175b:	rcl    DWORD PTR [eax-0x628799be],1
  421761:	cld    
  421762:	cdq    
  421763:	scas   eax,DWORD PTR es:[edi]
  421764:	push   ebx
  421765:	scas   eax,DWORD PTR es:[edi]
  421766:	xor    ah,BYTE PTR [ebx-0xc3d852c]
  42176c:	retf   
  42176d:	or     eax,0x34e4cf4f
  421772:	sub    eax,0x98e70a8b
  421777:	jmp    0xab4a:0x15023107
  42177e:	test   al,0x86
  421780:	scas   eax,DWORD PTR es:[edi]
  421781:	push   cs
  421782:	icebp  
  421783:	pusha  
  421784:	mov    ebp,0x4211640c
  421789:	jae    0x4217c5
  42178b:	xor    ah,cl
  42178d:	enter  0x5611,0x47
  421791:	sbb    al,0x85
  421793:	in     eax,0x53
  421795:	out    0xc1,eax
  421797:	fmul   DWORD PTR [ecx+0x438446a4]
  42179d:	fwait
  42179e:	ss push ss
  4217a0:	pop    ss
  4217a1:	mov    cl,0x2
  4217a3:	and    edx,DWORD PTR [edx+0x78d9cecd]
  4217a9:	adc    ecx,DWORD PTR [ebx-0x57fb8290]
  4217af:	scas   al,BYTE PTR es:[edi]
  4217b0:	in     al,0x2a
  4217b2:	(bad)  
  4217b3:	pushf  
  4217b4:	dec    esp
  4217b5:	fs fwait
  4217b7:	mov    edi,0xa9aee46b
  4217bc:	push   edi
  4217bd:	js     0x42175e
  4217bf:	retf   0x87d4
  4217c2:	jne    0x4217dc
  4217c4:	jno    0x4217c8
  4217c6:	ret    0x864d
  4217c9:	(bad)
  4217cc:	scas   eax,DWORD PTR es:[edi]
  4217cd:	mov    edi,0x1dd7171a
  4217d2:	loop   0x421834
  4217d4:	popf   
  4217d5:	ret    0x269b
  4217d8:	es clc 
  4217da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217db:	cmp    bh,BYTE PTR [ecx+ebx*2]
  4217de:	lds    edx,FWORD PTR [edi-0x36]
  4217e1:	xor    eax,0x3feddb60
  4217e6:	xchg   esi,eax
  4217e7:	jmp    0x36a543fd
  4217ec:	pop    esp
  4217ed:	mov    es,WORD PTR [edi]
  4217ef:	sahf   
  4217f0:	or     eax,0x9b0255a
  4217f5:	into   
  4217f6:	jbe    0x421832
  4217f8:	mov    ah,0xd
  4217fa:	jle    0x4217d8
  4217fc:	push   edi
  4217fd:	mov    dl,0xb6
  4217ff:	das    
  421800:	ret    
  421801:	int3   
  421802:	js     0x421821
  421804:	pop    es
  421805:	cdq    
  421806:	xchg   dl,dl
  421808:	mov    esp,ecx
  42180a:	mov    eax,ds:0x1a369099
  42180f:	xchg   DWORD PTR [esi-0x3743eb6f],ebx
  421815:	ret    
  421816:	in     al,0xcb
  421818:	bound  edx,QWORD PTR [ebx-0x7deb3f7c]
  42181e:	inc    esi
  42181f:	jb     0x421886
  421821:	push   edi
  421822:	lods   al,BYTE PTR ds:[esi]
  421823:	inc    esp
  421824:	dec    eax
  421825:	pop    ds
  421826:	sbb    edx,ebx
  421828:	mov    ds:0x29d3aadd,al
  42182d:	outs   dx,BYTE PTR ds:[esi]
  42182e:	mov    ecx,0x576a5fa6
  421833:	mov    edi,DWORD PTR [edx+0x58]
  421836:	and    BYTE PTR ds:0xdfef2beb,al
  42183c:	xchg   DWORD PTR [ecx+0x7a],ebx
  42183f:	popf   
  421840:	rol    ah,0x87
  421843:	mov    ecx,0x70e6817c
  421848:	fistp  WORD PTR [esi+0x9f37e]
  42184e:	cli    
  42184f:	fwait
  421850:	lahf   
  421851:	les    ecx,FWORD PTR [esi+0x6]
  421854:	aaa    
  421855:	sub    ah,BYTE PTR [edi+0x6f5e22d8]
  42185b:	mov    al,ds:0xe511ea21
  421860:	xor    ecx,DWORD PTR [edx]
  421862:	ja     0x4217ec
  421864:	ss test al,0x1d
  421867:	jo     0x4218e3
  421869:	lea    ebx,[ebx-0x21ea0fca]
  42186f:	mul    DWORD PTR [edi+0x8]
  421872:	cld    
  421873:	sub    dh,BYTE PTR [ebp+0x2390733b]
  421879:	out    dx,al
  42187a:	sbb    ebx,ebp
  42187c:	leave  
  42187d:	xor    dh,BYTE PTR [ecx+0xfd8c90a]
  421883:	inc    ebx
  421884:	xchg   esp,eax
  421885:	push   ds
  421886:	sub    esi,DWORD PTR [edx]
  421888:	adc    edx,eax
  42188a:	mov    esi,0x1605ce8a
  42188f:	adc    bh,BYTE PTR [ebx+0x7d]
  421892:	cmp    DWORD PTR [edi+eax*4],edx
  421895:	into   
  421896:	jmp    0x42183c
  421898:	or     eax,0xc2333b8f
  42189d:	jmp    DWORD PTR [edx+eax*4+0x4a]
  4218a1:	add    al,0xf2
  4218a3:	es inc esi
  4218a5:	test   DWORD PTR [esi],0xaab9005e
  4218ab:	and    bh,BYTE PTR [edx+0x2461c7dd]
  4218b1:	dec    esp
  4218b2:	sbb    DWORD PTR [edx],ecx
  4218b4:	bnd jb 0x4218ed
  4218b7:	mul    BYTE PTR fs:[ecx]
  4218ba:	retf   0x44f3
  4218bd:	adc    ch,bl
  4218bf:	and    al,0xa1
  4218c1:	out    0x10,al
  4218c3:	stos   DWORD PTR es:[edi],eax
  4218c4:	xor    bl,BYTE PTR [ebx-0x52]
  4218c7:	jns    0x4218af
  4218c9:	cmp    eax,0xfb82f4be
  4218ce:	ret    0xd7bc
  4218d1:	fadd   DWORD PTR [esp+edi*2+0x5458cc17]
  4218d8:	adc    BYTE PTR [ecx-0x5b49b376],al
  4218de:	pop    ebp
  4218df:	push   cs
  4218e0:	not    DWORD PTR [edi]
  4218e2:	push   esp
  4218e3:	inc    ebx
  4218e4:	pop    esp
  4218e5:	mov    bl,0xde
  4218e7:	push   ebx
  4218e8:	jo     0x421908
  4218ea:	mov    ds:0xd00bc639,eax
  4218ef:	shl    BYTE PTR [eax+0x6c90203],cl
  4218f5:	arpl   si,di
  4218f7:	std    
  4218f8:	cmp    BYTE PTR [edx-0x4af59c4d],al
  4218fe:	fninit 
  421900:	add    BYTE PTR [esi+0x6b438741],dl
  421906:	shl    DWORD PTR [ebp-0x12344768],1
  42190c:	or     BYTE PTR [edx+0x70615a26],ah
  421912:	xor    DWORD PTR ds:0x10f81ccc,esp
  421918:	add    DWORD PTR [ecx+0x61],ebx
  42191b:	psraw  mm5,QWORD PTR ss:[eax+0x7b]
  421920:	mov    ah,0xae
  421922:	pop    esp
  421923:	test   eax,0x657427e8
  421928:	xor    DWORD PTR [eax],ebp
  42192a:	or     DWORD PTR [esi-0x611fd486],ecx
  421930:	(bad)  
  421931:	imul   edi,DWORD PTR [edx-0x69342a6b],0xa7547099
  42193b:	fs sbb eax,esi
  42193e:	sbb    ebx,edx
  421940:	inc    ebp
  421941:	xchg   ebx,eax
  421942:	ja     0x4219c3
  421944:	out    0xad,eax
  421946:	lods   eax,DWORD PTR ds:[esi]
  421947:	in     eax,0xb4
  421949:	retf   
  42194a:	fadd   DWORD PTR [ebx+0x7d]
  42194d:	loop   0x421987
  42194f:	cdq    
  421950:	sbb    BYTE PTR [ebx-0x1be21f56],ah
  421956:	dec    ebx
  421957:	mov    dh,0x36
  421959:	fst    DWORD PTR [ebp+0x1aecda0]
  42195f:	jl     0x4218ec
  421961:	push   eax
  421962:	push   ebx
  421963:	mov    BYTE PTR [ebp+0x68],ah
  421966:	cmp    DWORD PTR [ebx+0x6067cd02],edx
  42196c:	(bad)  
  42196d:	sbb    edi,ebx
  42196f:	test   BYTE PTR [esi+0x2ea3ab64],ch
  421975:	retf   
  421976:	push   edx
  421977:	imul   edx,DWORD PTR [ebx],0x42
  42197a:	add    dh,BYTE PTR [ecx+edi*8]
  42197d:	adc    esp,ebp
  42197f:	add    eax,0x50b740b4
  421984:	dec    ecx
  421985:	push   ss
  421986:	sub    eax,eax
  421988:	cwde   
  421989:	pushf  
  42198a:	xor    BYTE PTR [ecx],0x79
  42198d:	cmc    
  42198e:	ror    DWORD PTR [eax-0x9],1
  421991:	mov    cs,esi
  421993:	aaa    
  421994:	scas   eax,DWORD PTR es:[edi]
  421995:	sahf   
  421996:	imul   edx,edi,0x2e
  421999:	sti    
  42199a:	push   cs
  42199b:	test   eax,0x58956621
  4219a0:	and    eax,0x5fa0e907
  4219a5:	or     DWORD PTR [ebp+0x6fea1c9d],esi
  4219ab:	jbe    0x4219be
  4219ad:	add    al,0x32
  4219af:	ins    BYTE PTR es:[edi],dx
  4219b0:	xchg   ah,al
  4219b2:	leave  
  4219b3:	imul   esi,DWORD PTR [edx+0x43],0xffffffa5
  4219b7:	push   0xffffffb4
  4219b9:	pop    ebp
  4219ba:	cmp    ecx,DWORD PTR [edx+eax*8]
  4219bd:	mov    eax,0x4f93831b
  4219c2:	pop    ebp
  4219c3:	sub    al,0x74
  4219c5:	bound  edi,QWORD PTR [ebx-0x53412afb]
  4219cb:	cmp    BYTE PTR [eax+0x583df171],cl
  4219d1:	adc    al,0x87
  4219d3:	gs mov ebx,0xe417be5d
  4219d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4219da:	pop    ecx
  4219db:	idiv   bh
  4219dd:	add    eax,0xf717d1c6
  4219e2:	jnp    0x421a59
  4219e4:	mov    dl,0x8
  4219e6:	stc    
  4219e7:	and    DWORD PTR [ebx+0x61],0xffffffdc
  4219eb:	sahf   
  4219ec:	xchg   edx,eax
  4219ed:	jne    0x4219da
  4219ef:	dec    ebp
  4219f0:	dec    ebp
  4219f1:	jmp    0xdd8eda1
  4219f6:	lods   al,BYTE PTR ds:[esi]
  4219f7:	test   eax,0x69f85542
  4219fc:	call   0xd46f:0xe3b2bd65
  421a03:	(bad)  
  421a04:	popf   
  421a05:	or     edx,DWORD PTR [ecx+0x66]
  421a08:	ins    DWORD PTR es:[edi],dx
  421a09:	adc    esp,esi
  421a0b:	mov    esi,0xe5584a20
  421a10:	pop    esi
  421a11:	and    BYTE PTR [edx],cl
  421a13:	xchg   ebx,eax
  421a14:	push   0x8
  421a16:	jle    0x4219cb
  421a18:	push   ss
  421a19:	(bad)  
  421a1b:	jp     0x421a82
  421a1d:	push   esi
  421a1e:	sbb    BYTE PTR [esi],bl
  421a20:	(bad)  
  421a21:	or     eax,0xce109cf3
  421a26:	lods   al,BYTE PTR ds:[esi]
  421a27:	fdivp  st(5),st
  421a29:	inc    eax
  421a2a:	popf   
  421a2b:	push   ss
  421a2c:	ror    BYTE PTR [ecx+eax*4],1
  421a2f:	inc    esp
  421a30:	jecxz  0x421a58
  421a32:	les    ecx,FWORD PTR [edi+0x14]
  421a35:	mov    al,ds:0x6df9b7b7
  421a3a:	push   ebp
  421a3b:	jp     0x4219c0
  421a3d:	scas   eax,DWORD PTR es:[edi]
  421a3e:	div    edi
  421a40:	mov    DWORD PTR [ecx+edx*8],ebx
  421a43:	cmc    
  421a44:	jb     0x421a52
  421a46:	pop    edx
  421a47:	scas   eax,DWORD PTR es:[edi]
  421a48:	pop    esi
  421a49:	jge    0x421a10
  421a4b:	(bad)  
  421a4c:	sbb    al,0x5f
  421a4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a4f:	xor    DWORD PTR [ebx-0x41],ecx
  421a52:	xor    al,0x1
  421a54:	or     esp,DWORD PTR [edi+0x441f02a2]
  421a5a:	call   0xc37e55ff
  421a5f:	test   BYTE PTR [ecx],ch
  421a61:	mov    edx,0xe36558d
  421a66:	push   esi
  421a67:	mov    esp,0x5eb0c1d7
  421a6c:	mov    ah,BYTE PTR [ebx-0x2d]
  421a6f:	mov    bh,0xc9
  421a71:	daa    
  421a72:	cmp    BYTE PTR [esi+0x47],bl
  421a75:	adc    eax,0x41dc417e
  421a7a:	in     eax,0xd8
  421a7c:	sar    BYTE PTR [edx-0x5d],1
  421a7f:	push   ebp
  421a80:	outs   dx,BYTE PTR ds:[esi]
  421a81:	repz ds sbb al,0xb3
  421a85:	call   0x42ba:0x75491aec
  421a8c:	mov    ah,0xab
  421a8e:	add    bl,BYTE PTR [ebx]
  421a90:	fdivr  QWORD PTR [edi+0x60]
  421a93:	mov    ds:0x4e5ba6a,eax
  421a98:	add    edx,DWORD PTR [eax]
  421a9a:	scas   al,BYTE PTR es:[edi]
  421a9b:	cmp    eax,0xcd2fe597
  421aa0:	mov    bh,0xd5
  421aa2:	and    al,0x61
  421aa4:	sub    eax,0x59470205
  421aa9:	int    0xbc
  421aab:	dec    ecx
  421aac:	mov    esi,0x1aa3102e
  421ab1:	loope  0x421af7
  421ab3:	add    BYTE PTR [ebp-0x469c25d5],0x8a
  421aba:	and    DWORD PTR [eax+0x69],ebx
  421abd:	neg    DWORD PTR [ecx-0x64e10d6c]
  421ac3:	mov    cl,0xa4
  421ac5:	pop    esp
  421ac6:	inc    eax
  421ac7:	scas   eax,DWORD PTR es:[edi]
  421ac8:	fmul   st(1),st
  421aca:	push   0x38
  421acc:	les    esi,FWORD PTR [ecx]
  421ace:	sub    esi,DWORD PTR [ecx+0x387df201]
  421ad4:	loop   0x421ac2
  421ad6:	test   al,0xba
  421ad8:	out    dx,al
  421ad9:	mov    esp,ecx
  421adb:	jbe    0x421ae8
  421add:	sub    BYTE PTR [edi-0x3d],dl
  421ae0:	lods   eax,DWORD PTR ds:[esi]
  421ae1:	pop    ebp
  421ae2:	inc    eax
  421ae3:	ret    
  421ae4:	(bad)  
  421ae5:	das    
  421ae6:	cwde   
  421ae7:	inc    esi
  421ae8:	push   DWORD PTR [ebx-0x2a1460ce]
  421aee:	fcmovbe st,st(4)
  421af0:	jae    0x421a7d
  421af2:	fild   DWORD PTR cs:[edi]
  421af5:	jge    0x421a7b
  421af7:	xor    BYTE PTR [ebx],ch
  421af9:	sub    al,0x11
  421afb:	push   edx
  421afc:	nop    DWORD PTR [ebx]
  421aff:	push   edi
  421b00:	lock outs dx,BYTE PTR ds:[esi]
  421b02:	outs   dx,BYTE PTR ds:[esi]
  421b03:	lods   eax,DWORD PTR ds:[esi]
  421b04:	xor    DWORD PTR [esi-0x57],esi
  421b07:	aaa    
  421b08:	rcr    BYTE PTR [esi+0x1d],cl
  421b0b:	test   eax,0x4f54cb52
  421b10:	pop    ds
  421b11:	mov    eax,ds:0xdcbc2be2
  421b16:	int    0xb4
  421b18:	add    esi,DWORD PTR [esi+eax*2+0x56ad1eb8]
  421b1f:	mov    dl,0x88
  421b21:	popf   
  421b22:	out    0x6,eax
  421b24:	fadd   QWORD PTR [esi-0x59]
  421b27:	cs ins DWORD PTR es:[edi],dx
  421b29:	cmp    eax,0x580eab5b
  421b2e:	dec    esi
  421b2f:	jp     0x421ae5
  421b31:	repnz mov ds:0xdbb3e795,al
  421b37:	add    DWORD PTR [edi],ebx
  421b39:	xchg   DWORD PTR [eax],ebp
  421b3b:	mov    dl,0xe
  421b3d:	push   esp
  421b3e:	mov    ecx,0xbe617894
  421b43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b44:	gs out 0x35,al
  421b47:	dec    esi
  421b48:	data16 mov BYTE PTR [ebx-0x5220161b],ah
  421b4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b50:	cs fwait
  421b52:	or     eax,0xaf64ed4e
  421b57:	loop   0x421b70
  421b59:	int3   
  421b5a:	mov    cl,dl
  421b5c:	cld    
  421b5d:	sbb    bh,ah
  421b5f:	das    
  421b60:	arpl   WORD PTR [eax-0x74100797],bp
  421b66:	xlat   BYTE PTR ds:[ebx]
  421b67:	loopne 0x421b58
  421b69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b6a:	stos   DWORD PTR es:[edi],eax
  421b6b:	xor    al,0x6
  421b6d:	rep stos BYTE PTR es:[edi],al
  421b6f:	retf   0xdd42
  421b72:	mov    ds:0x5bb4c75c,al
  421b77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b78:	jmp    0x61034475
  421b7d:	jge    0x421b9a
  421b7f:	xor    dh,BYTE PTR [esi]
  421b81:	adc    dh,BYTE PTR [ebp-0x66e85852]
  421b87:	(bad)  
  421b88:	mov    cl,0x8c
  421b8a:	fstp   st(5)
  421b8c:	mov    dl,BYTE PTR [edx-0x50]
  421b8f:	daa    
  421b90:	push   es
  421b91:	adc    ebp,DWORD PTR [eax+0x3dedcb3]
  421b97:	mov    cl,BYTE PTR [eax-0x43e86ed7]
  421b9d:	add    DWORD PTR [eax],0x0
  421ba0:	add    BYTE PTR [eax],al
  421ba2:	sbb    edi,DWORD PTR [esi-0x25106512]
  421ba8:	jg     0x421b69
  421baa:	call   0xd39b:0x98770da0
  421bb1:	dec    esi
  421bb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bb3:	xchg   ebp,eax
  421bb4:	add    DWORD PTR [eax],eax
  421bb6:	hlt    
  421bb7:	add    al,0x0
  421bb9:	add    bl,dh
  421bbb:	pop    ds
  421bbc:	or     al,0xfb
  421bbe:	daa    
  421bbf:	call   0xb8db5e9e
  421bc4:	push   es
  421bc5:	sub    al,0x46
  421bc7:	push   ds
  421bc8:	loope  0x421bb2
  421bca:	or     BYTE PTR [ebp-0x15],dl
  421bcd:	ins    DWORD PTR es:[edi],dx
  421bce:	jmp    0x421b93
  421bd0:	retf   0xf40b
  421bd3:	retf   
  421bd4:	rcr    BYTE PTR [edi+edi*4+0x74fe098b],1
  421bdb:	cmp    bh,0xc7
  421bde:	repnz lahf 
  421be0:	mov    cl,0x99
  421be2:	ret    
  421be3:	or     al,0x2a
  421be5:	mov    eax,0xfaaa67ca
  421bea:	add    ah,BYTE PTR [edx-0x19]
  421bed:	das    
  421bee:	inc    ecx
  421bef:	retf   0x85e8
  421bf2:	mov    ecx,0x4942f7f4
  421bf7:	jns    0x421bdb
  421bf9:	push   es
  421bfa:	aam    0xa2
  421bfc:	fisubr WORD PTR [edx+0x5c950fd4]
  421c02:	dec    ebx
  421c03:	jg     0x421ba2
  421c05:	pop    ebp
  421c06:	loop   0x421c56
  421c08:	cwde   
  421c09:	and    BYTE PTR [edx+0x2a],cl
  421c0c:	test   eax,0xf06c9047
  421c11:	ficom  DWORD PTR [ecx+0x4]
  421c14:	(bad)  [eax+0x7101b98c]
  421c1a:	inc    edi
  421c1b:	rol    BYTE PTR [ebx],0x18
  421c1e:	inc    ebx
  421c1f:	outs   dx,BYTE PTR ds:[esi]
  421c20:	ret    
  421c21:	sahf   
  421c22:	aam    0xb7
  421c24:	add    BYTE PTR [ebp-0x1ccbc232],0x2e
  421c2b:	mov    ebx,0x630cd007
  421c30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c31:	adc    DWORD PTR [edx+esi*4],ecx
  421c34:	in     eax,0x17
  421c36:	push   eax
  421c37:	ins    BYTE PTR es:[edi],dx
  421c38:	pop    ebx
  421c39:	push   0x3bd6b8fa
  421c3e:	xor    BYTE PTR [eax],dh
  421c40:	adc    ah,0xf5
  421c43:	jns    0x421c38
  421c45:	ret    0xaad9
  421c48:	lock std 
  421c4a:	jp     0x421c60
  421c4c:	int3   
  421c4d:	or     dh,BYTE PTR [eax-0x1c]
  421c50:	sbb    DWORD PTR [ebp+0x46fbe4a5],ebx
  421c56:	jmp    0xcc90d657
  421c5b:	add    eax,0xc7cb39dd
  421c60:	sub    edi,0x38
  421c63:	xor    BYTE PTR [edi],dh
  421c65:	xor    dl,al
  421c67:	push   ebp
  421c68:	or     dl,BYTE PTR [ecx]
  421c6a:	pusha  
  421c6b:	push   es
  421c6c:	mov    bl,BYTE PTR [edi]
  421c6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c6f:	xor    bh,cl
  421c71:	dec    esi
  421c72:	imul   esp,esi,0x1b
  421c75:	hlt    
  421c76:	aas    
  421c77:	lods   eax,DWORD PTR ds:[esi]
  421c78:	or     BYTE PTR [ebp-0x7b0df9cd],bh
  421c7e:	mov    bh,0x57
  421c80:	daa    
  421c81:	pop    esi
  421c82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c83:	cs pop edx
  421c85:	adc    al,dl
  421c87:	push   esp
  421c88:	js     0x421c8f
  421c8a:	fisub  DWORD PTR [eax+esi*2-0xc4c5821]
  421c91:	mov    dl,0x58
  421c93:	or     eax,0xd3e9b4c4
  421c98:	stc    
  421c99:	jmp    0x9c05:0xced2336c
  421ca0:	push   esi
  421ca1:	int    0xf0
  421ca3:	mov    esp,0x28f2e6ce
  421ca8:	and    eax,DWORD PTR [ecx-0x5bd83bbb]
  421cae:	jg     0x421ce2
  421cb0:	sbb    eax,0xa023f792
  421cb5:	xor    eax,0xcfb6432b
  421cba:	push   ebp
  421cbb:	loopne 0x421cde
  421cbd:	sub    al,0xde
  421cbf:	les    edx,FWORD PTR [ecx]
  421cc1:	repz mov ebp,0xba5fa087
  421cc7:	nop
  421cc8:	cmp    edx,DWORD PTR ss:[eax+ecx*8-0x2d]
  421ccd:	(bad)  
  421cce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ccf:	ins    DWORD PTR es:[edi],dx
  421cd0:	(bad)  
  421cd1:	int    0x35
  421cd3:	cmp    esi,DWORD PTR [ecx-0x42]
  421cd6:	xchg   ecx,eax
  421cd7:	jns    0x421cc5
  421cd9:	scas   al,BYTE PTR es:[edi]
  421cda:	push   ecx
  421cdb:	and    al,0xff
  421cdd:	pop    eax
  421cde:	enter  0xfd,0x8a
  421ce2:	imul   edx,DWORD PTR [eax],0xb34d19fa
  421ce8:	xor    DWORD PTR [ecx-0x238ed55d],esp
  421cee:	popa   
  421cef:	clc    
  421cf0:	xor    BYTE PTR [eax+0xe],ch
  421cf3:	sbb    edx,DWORD PTR [eax]
  421cf5:	ret    0xaef1
  421cf8:	cli    
  421cf9:	adc    dl,BYTE PTR [eax]
  421cfb:	fst    QWORD PTR [esi+ecx*2]
  421cfe:	adc    eax,DWORD PTR [ebp-0x7e]
  421d01:	pop    ecx
  421d02:	xchg   edi,eax
  421d03:	push   0x37e8fdc3
  421d08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d09:	fimul  WORD PTR [esi]
  421d0b:	popa   
  421d0c:	popa   
  421d0d:	ins    BYTE PTR es:[edi],dx
  421d0e:	mov    edx,0x96ac1aa8
  421d13:	xor    al,0x1c
  421d15:	sub    ecx,DWORD PTR cs:[ebx]
  421d18:	lods   al,BYTE PTR ds:[esi]
  421d19:	and    ebp,DWORD PTR [esi]
  421d1b:	js     0x421cf8
  421d1d:	mov    esp,0xdf999bf1
  421d23:	jno    0x421ccf
  421d25:	pop    ebp
  421d26:	jp     0x421d5f
  421d28:	out    dx,al
  421d29:	or     eax,0x82484a60
  421d2e:	scas   al,BYTE PTR es:[edi]
  421d2f:	inc    eax
  421d30:	aad    0xe1
  421d32:	hlt    
  421d33:	push   eax
  421d34:	sub    eax,0xc89b4ff7
  421d39:	ja     0x421d3f
  421d3b:	and    cl,ch
  421d3d:	adc    BYTE PTR [ecx],0x8d
  421d40:	cs (bad) 
  421d42:	pop    edx
  421d43:	in     al,0xdc
  421d45:	xchg   dl,cl
  421d47:	repz std 
  421d49:	cmp    BYTE PTR [ebx+edi*1-0x60],al
  421d4d:	nop/reserved BYTE PTR [ecx-0x6a]
  421d51:	popa   
  421d52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d53:	jno    0x421dbc
  421d55:	shr    BYTE PTR [bp+di],cl
  421d58:	push   esp
  421d59:	addr16 push ecx
  421d5b:	push   esi
  421d5c:	add    eax,0xebed9fa2
  421d61:	dec    esp
  421d62:	mov    dl,0x86
  421d64:	ds mov ah,0x8d
  421d67:	(bad)  
  421d68:	imul   esp,DWORD PTR [ebp-0x53],0xe1ae90c9
  421d6f:	pop    edx
  421d70:	cmp    al,0x78
  421d72:	stos   DWORD PTR es:[edi],eax
  421d73:	adc    al,0x6
  421d75:	outs   dx,BYTE PTR ds:[esi]
  421d76:	imul   ebx,DWORD PTR [edi],0xeb79aa45
  421d7c:	fs jns 0x421dd0
  421d7f:	sbb    BYTE PTR [ebx-0x94edf43],bl
  421d85:	cmc    
  421d86:	push   es
  421d87:	ds fwait
  421d89:	jge    0x421df7
  421d8b:	mov    ebx,0xd4f42a02
  421d90:	and    esp,DWORD PTR [ebx+ebx*4-0x7a1cdfd2]
  421d97:	gs sub eax,0x4e5e3b7a
  421d9d:	sub    BYTE PTR fs:[esi],dl
  421da0:	xchg   esp,eax
  421da1:	test   DWORD PTR [ebp+0x271bfef2],ecx
  421da7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421da8:	out    0x18,eax
  421daa:	dec    edi
  421dab:	je     0x421d4f
  421dad:	test   al,0x58
  421daf:	lods   eax,DWORD PTR ds:[esi]
  421db0:	out    0xef,eax
  421db2:	pop    ebp
  421db3:	mov    bl,0x5f
  421db5:	pop    esp
  421db6:	das    
  421db7:	lahf   
  421db8:	jge    0x421dd8
  421dba:	(bad)  
  421dbb:	test   BYTE PTR [ebp+edi*2+0x28],ch
  421dbf:	jmp    0xb5c859aa
  421dc4:	lea    ebp,[ecx+0x7c114c05]
  421dca:	add    cl,cl
  421dcc:	test   BYTE PTR [esi-0x5e831e9a],bl
  421dd2:	jmp    0xa4be:0x202c51e3
  421dd9:	and    al,0xe9
  421ddb:	dec    eax
  421ddc:	mov    bh,0x64
  421dde:	repz pop es
  421de0:	push   ds
  421de1:	aas    
  421de2:	into   
  421de3:	sub    DWORD PTR [edx+0x28],0x7565204
  421dea:	mov    al,ds:0xbf38adae
  421def:	retf   
  421df0:	in     al,dx
  421df1:	pushf  
  421df2:	inc    esi
  421df3:	jbe    0x421e01
  421df5:	pop    esp
  421df6:	pop    esi
  421df7:	sbb    BYTE PTR [edx-0x29616661],0x82
  421dfe:	imul   esi,edx,0x575bad65
  421e04:	xor    eax,0xc157cb8c
  421e09:	mov    dl,0x64
  421e0b:	out    dx,al
  421e0c:	jns    0x421de9
  421e0e:	inc    esp
  421e0f:	cld    
  421e10:	test   BYTE PTR [eax+0x73],cl
  421e13:	arpl   WORD PTR [ecx+0xc776ec6],bx
  421e19:	jle    0x421e1c
  421e1b:	int3   
  421e1c:	das    
  421e1d:	push   esi
  421e1e:	push   cs
  421e1f:	(bad)  
  421e20:	jo     0x421e57
  421e22:	push   edi
  421e23:	mov    edx,0xe90dfbc5
  421e28:	mov    ebx,0xb0f593ef
  421e2d:	jge    0x421e14
  421e2f:	mov    DWORD PTR [ebp-0x2c],edx
  421e32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e33:	ins    BYTE PTR es:[edi],dx
  421e34:	xchg   edi,eax
  421e35:	pusha  
  421e36:	into   
  421e37:	mov    edx,0x512d0433
  421e3c:	xor    BYTE PTR [ecx-0x71],ah
  421e3f:	xor    al,0x5c
  421e41:	and    eax,0x28ea4693
  421e46:	lods   eax,DWORD PTR ds:[esi]
  421e47:	push   edx
  421e48:	loope  0x421ebf
  421e4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e4b:	adc    BYTE PTR [edx+0xc525a64],0xfa
  421e52:	mov    eax,0xcdb27b8c
  421e57:	or     bl,cl
  421e59:	mov    ebp,DWORD PTR [esi-0x590f2060]
  421e5f:	mov    ah,0x47
  421e61:	cwde   
  421e62:	inc    ebp
  421e63:	mov    cl,bh
  421e65:	adc    ebx,ebx
  421e67:	cmp    cl,BYTE PTR [edi-0x50]
  421e6a:	inc    ecx
  421e6b:	inc    esp
  421e6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e6d:	div    edi
  421e6f:	add    al,0x5a
  421e71:	add    al,0x31
  421e73:	adc    eax,0x7b3aea4a
  421e78:	add    eax,0x4506bb06
  421e7d:	jecxz  0x421e3a
  421e7f:	sbb    eax,0x539c7326
  421e84:	inc    esp
  421e85:	or     ecx,DWORD PTR [edx]
  421e87:	fst    QWORD PTR [esi]
  421e89:	and    bh,0xf5
  421e8c:	mov    ds:0xece4835d,al
  421e91:	mov    cl,0xe2
  421e93:	loop   0x421e7b
  421e95:	and    al,0xf
  421e97:	pop    esp
  421e98:	(bad)  
  421e99:	cmp    cl,bl
  421e9b:	and    ch,BYTE PTR [edi]
  421e9d:	es out dx,al
  421e9f:	push   0xffffffa8
  421ea1:	pop    ds
  421ea2:	lds    ebx,FWORD PTR [edx]
  421ea4:	xor    cl,bl
  421ea6:	(bad)  
  421ea7:	ins    BYTE PTR es:[edi],dx
  421ea8:	leave  
  421ea9:	push   es
  421eaa:	loopne 0x421ec7
  421eac:	rcl    DWORD PTR [ebx-0x50fd8501],0x80
  421eb3:	sub    ebp,ebx
  421eb5:	pop    edx
  421eb6:	(bad)  
  421eb7:	mov    esp,0x391d05f7
  421ebc:	jns    0x421eb0
  421ebe:	xchg   esp,eax
  421ebf:	mov    ch,0x70
  421ec1:	pop    ebp
  421ec2:	add    eax,0xe7d29f19
  421ec7:	int3   
  421ec8:	inc    esi
  421ec9:	or     eax,0xd29a5794
  421ece:	stc    
  421ecf:	and    eax,0xed51b058
  421ed4:	or     bl,dl
  421ed6:	imul   esp,edi,0xd927e638
  421edc:	sar    DWORD PTR [ecx+ebx*1+0x62],1
  421ee0:	fsubr  QWORD PTR [ebp-0xd539baf]
  421ee6:	popa   
  421ee7:	in     al,0xcc
  421ee9:	imul   bl
  421eeb:	test   eax,0xafbddae5
  421ef0:	mov    esi,0x3b81a964
  421ef5:	rcl    BYTE PTR [edx+0x1a],cl
  421ef8:	test   eax,0x33da8930
  421efd:	and    bh,BYTE PTR [esi]
  421eff:	mov    esp,0xc35f76ad
  421f04:	into   
  421f05:	xor    DWORD PTR [esi+0x5c033ee3],ecx
  421f0b:	or     dl,bh
  421f0d:	xchg   edi,eax
  421f0e:	in     eax,dx
  421f0f:	mov    ds:0x42a29d2a,al
  421f14:	nop
  421f15:	fst    DWORD PTR [eax]
  421f17:	add    ah,al
  421f19:	or     DWORD PTR ds:0x8b3fbf40,0x26142bf6
  421f23:	in     eax,0x86
  421f25:	jae    0x421ed0
  421f27:	mov    dl,0xa1
  421f29:	leave  
  421f2a:	cs or  ebp,ebx
  421f2d:	out    dx,al
  421f2e:	test   DWORD PTR [eax-0x1a],0x6838d52e
  421f35:	inc    edx
  421f36:	mov    cl,0xfc
  421f38:	mov    bh,0xe7
  421f3a:	xor    al,0x80
  421f3c:	bound  eax,QWORD PTR [ecx+eiz*4+0x624f1765]
  421f43:	dec    esp
  421f44:	jp     0x421f06
  421f46:	pop    ss
  421f47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f48:	ret    0xa670
  421f4b:	push   ebp
  421f4c:	rol    BYTE PTR [edi-0x1e],1
  421f4f:	outs   dx,DWORD PTR ds:[esi]
  421f50:	repnz inc edx
  421f52:	aaa    
  421f53:	sbb    al,0x69
  421f55:	push   cs
  421f56:	fs push ds
  421f58:	jmp    0x2200:0x4856252a
  421f5f:	mov    cl,0xf4
  421f61:	mov    dh,0x8
  421f63:	jg     0x421f47
  421f65:	stos   DWORD PTR es:[edi],eax
  421f66:	rcl    DWORD PTR [eax+0x793d9677],cl
  421f6c:	dec    esp
  421f6d:	dec    ebp
  421f6e:	repz clc 
  421f70:	lock ficom WORD PTR [edi+0x59a9127f]
  421f77:	push   es
  421f78:	ins    DWORD PTR es:[edi],dx
  421f79:	cmp    edi,DWORD PTR [edx]
  421f7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f7c:	mov    al,ds:0xe451fe6a
  421f81:	inc    edx
  421f82:	mov    eax,0xe487dd3a
  421f87:	sti    
  421f88:	and    BYTE PTR [eax+0x301d6a6f],al
  421f8e:	call   0x637f:0xcd5030e
  421f95:	fs xchg edx,eax
  421f97:	cdq    
  421f98:	cli    
  421f99:	xor    edi,DWORD PTR [eax]
  421f9b:	popf   
  421f9c:	xchg   BYTE PTR [ebp+0x4c0786b4],ah
  421fa2:	sti    
  421fa3:	or     edi,ecx
  421fa5:	xchg   ebx,eax
  421fa6:	mov    ebx,DWORD PTR [ebx-0x6f]
  421fa9:	fist   DWORD PTR [esi-0x2]
  421fac:	pop    edi
  421fad:	inc    ebp
  421fae:	mov    esp,0x652b4a61
  421fb3:	pop    es
  421fb4:	jae    0x421f6b
  421fb6:	div    BYTE PTR [eax-0x5f]
  421fb9:	(bad)  
  421fba:	ss push eax
  421fbc:	mov    ebp,0x15187ea2
  421fc1:	pop    edx
  421fc2:	inc    edx
  421fc3:	ret    
  421fc4:	mov    dh,0xa5
  421fc6:	mov    eax,ds:0xc4a9edd0
  421fcb:	js     0x42203b
  421fcd:	fiadd  WORD PTR [eax+eax*1+0x66]
  421fd1:	in     eax,0x6e
  421fd3:	mov    bh,0x15
  421fd5:	push   cs
  421fd6:	add    ecx,DWORD PTR [esi-0x752226df]
  421fdc:	(bad)  
  421fdd:	cdq    
  421fde:	iret   
  421fdf:	mov    esp,0xcef855d
  421fe4:	add    al,0x2c
  421fe6:	or     edi,esi
  421fe8:	clc    
  421fe9:	iret   
  421fea:	mov    bh,0x55
  421fec:	mov    bh,0x52
  421fee:	push   0x69
  421ff0:	xlat   BYTE PTR ds:[ebx]
  421ff1:	mov    al,0xb6
  421ff3:	mov    bh,0x96
  421ff5:	in     al,0xa1
  421ff7:	xchg   edx,eax
  421ff8:	and    al,0xaf
  421ffa:	or     eax,0x74865199
  421fff:	xchg   BYTE PTR [edi+eax*1+0x61],bh
  422003:	dec    esi
  422004:	add    cl,dh
  422006:	mov    dh,0x9d
  422008:	cmc    
  422009:	sbb    eax,0x2aa09468
  42200e:	out    dx,eax
  42200f:	aas    
  422010:	mov    WORD PTR [ecx-0x2e1b13e0],cs
  422016:	frstor [edi]
  422018:	popf   
  422019:	retf   0xe646
  42201c:	push   eax
  42201d:	leave  
  42201e:	xor    dh,BYTE PTR [edi]
  422020:	dec    esi
  422021:	daa    
  422022:	dec    esi
  422023:	retf   
  422024:	enter  0x64b5,0xcb
  422028:	xchg   esi,esi
  42202a:	hlt    
  42202b:	jnp    0x422053
  42202d:	retf   0x1813
  422030:	imul   ebx,DWORD PTR [esi-0x3c],0x1f
  422034:	adc    cl,BYTE PTR [edx+0x46b7f849]
  42203a:	(bad)  
  42203b:	lods   al,BYTE PTR ds:[esi]
  42203c:	xchg   ebx,eax
  42203d:	inc    BYTE PTR [edi+eax*1]
  422040:	mov    ds:0x30e2da82,eax
  422045:	ret    
  422046:	push   eax
  422047:	mov    ecx,0x8bf71a1
  42204c:	mov    BYTE PTR [ebp-0x7f],ah
  42204f:	loopne 0x4220c0
  422051:	mov    ?,ebp
  422053:	sbb    DWORD PTR [ebx],0x8beee490
  422059:	int3   
  42205a:	jb     0x422000
  42205c:	cli    
  42205d:	sub    al,0x63
  42205f:	cmc    
  422060:	adc    edi,DWORD PTR [esi+0x29]
  422063:	clc    
  422064:	fstp   QWORD PTR [ebp+0x11bd5a89]
  42206a:	cs cwde 
  42206c:	test   BYTE PTR [ebp+0x34],cl
  42206f:	repz or al,0xf6
  422072:	bound  ecx,QWORD PTR [ecx-0x65fc26ee]
  422078:	cmp    bl,BYTE PTR ds:0x62273181
  42207e:	mov    ebx,0xdf87f7aa
  422083:	sub    al,0xa1
  422085:	sti    
  422086:	push   ds
  422087:	inc    ebx
  422088:	sbb    ebp,DWORD PTR [ebx-0x55bce534]
  42208e:	fidivr WORD PTR [ebx*4+0x7854be67]
  422095:	xchg   ebx,eax
  422096:	nop
  422097:	repnz and al,BYTE PTR [edi-0x1c]
  42209b:	pusha  
  42209c:	xchg   ecx,eax
  42209d:	cmp    BYTE PTR [ebx],cl
  42209f:	cmp    eax,0xee947400
  4220a4:	sub    bl,dh
  4220a6:	xor    BYTE PTR ds:0xe777c6cd,ch
  4220ac:	stc    
  4220ad:	and    al,BYTE PTR [eax]
  4220af:	add    BYTE PTR [eax],al
  4220b1:	add    BYTE PTR [ecx],bh
  4220b3:	stc    
  4220b4:	pop    ebx
  4220b5:	sub    ebx,ebx
  4220b7:	stos   DWORD PTR es:[edi],eax
  4220b8:	jns    0x4220b5
  4220ba:	dec    edx
  4220bb:	sub    bl,0xe9
  4220be:	pusha  
  4220bf:	fidiv  WORD PTR [ebx-0x23]
  4220c2:	cdq    
  4220c3:	call   0x0:0x4f40001
  4220ca:	mov    bl,0x1a
  4220cc:	mov    al,ds:0xb63cd277
  4220d1:	test   al,0x73
  4220d3:	(bad)  
  4220d5:	mov    al,ds:0xe0067f3
  4220da:	mov    esp,0x70f3f0b
  4220df:	sti    
  4220e0:	ins    BYTE PTR es:[edi],dx
  4220e1:	or     eax,0xda9e074b
  4220e6:	jle    0x4220da
  4220e8:	jg     0x4220b3
  4220ea:	mov    eax,0xe9f17075
  4220ef:	(bad)  
  4220f0:	outs   dx,DWORD PTR ds:[esi]
  4220f1:	adc    eax,0x16388c4c
  4220f6:	(bad)  
  4220f8:	outs   dx,DWORD PTR ds:[esi]
  4220f9:	aas    
  4220fa:	test   DWORD PTR [edx+ecx*1],0x8cb62e17
  422101:	outs   dx,BYTE PTR ds:[esi]
  422102:	xchg   ebp,eax
  422103:	rol    BYTE PTR [ebp+ecx*8+0x1454e493],cl
  42210a:	cmp    ebp,ebx
  42210c:	mov    al,BYTE PTR [eax+0xd606be5]
  422112:	dec    edi
  422113:	out    dx,al
  422114:	lds    ecx,FWORD PTR [ecx]
  422116:	xchg   edx,eax
  422117:	ds jae 0x422121
  42211a:	and    al,0xf
  42211c:	mov    fs,WORD PTR [ebp-0x46eca390]
  422122:	js     0x422192
  422124:	pop    esp
  422125:	xchg   edx,eax
  422126:	dec    edi
  422127:	ds fwait
  422129:	xor    BYTE PTR [edx-0x7],al
  42212c:	aam    0x90
  42212e:	jge    0x42211b
  422130:	sbb    dl,BYTE PTR es:[ecx+0x24af5589]
  422137:	std    
  422138:	(bad)  
  422139:	fldcw  WORD PTR [eax+0x12]
  42213c:	mov    al,0x23
  42213e:	adc    DWORD PTR [edi],esp
  422140:	add    al,0x2a
  422142:	mov    DWORD PTR [esi-0x724cb32c],ebx
  422148:	cwde   
  422149:	pop    esp
  42214a:	xchg   esp,eax
  42214b:	or     eax,0xe84ca4a2
  422150:	fcom   DWORD PTR [ecx+0x73]
  422153:	push   edi
  422154:	in     al,dx
  422155:	xor    eax,0x1d27974
  42215a:	inc    ebx
  42215b:	loope  0x42219e
  42215d:	xchg   edx,eax
  42215e:	xor    al,0x6e
  422160:	mov    ds:0x484af792,al
  422165:	int3   
  422166:	sbb    ecx,DWORD PTR [ecx-0xe]
  422169:	in     eax,dx
  42216a:	push   edi
  42216b:	push   eax
  42216c:	sub    DWORD PTR [eax],ebx
  42216e:	fwait
  42216f:	stos   BYTE PTR es:[edi],al
  422170:	or     DWORD PTR [bx+0x7a2d],ecx
  422175:	jmp    0x42219d
  422177:	push   ebx
  422178:	cwde   
  422179:	inc    esp
  42217a:	fs jnp 0x42217c
  42217d:	adc    ebx,DWORD PTR [edx]
  42217f:	aam    0xcb
  422181:	leave  
  422182:	stos   DWORD PTR es:[edi],eax
  422183:	mov    ebx,0xddc02149
  422188:	jns    0x422124
  42218a:	iret   
  42218b:	std    
  42218c:	sti    
  42218d:	mul    DWORD PTR [ebx+0xf]
  422190:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422191:	pop    esi
  422192:	lea    eax,[edx-0x19]
  422195:	jns    0x4221d9
  422197:	xchg   BYTE PTR [ebx-0x3c962147],cl
  42219d:	mov    edi,0x3855a9f9
  4221a2:	inc    ebp
  4221a3:	xor    al,0xc7
  4221a5:	neg    al
  4221a7:	popa   
  4221a8:	scas   eax,DWORD PTR es:[edi]
  4221a9:	push   edx
  4221aa:	and    DWORD PTR [edi],ebx
  4221ac:	call   eax
  4221ae:	leave  
  4221af:	cmp    dl,BYTE PTR [edi-0x40]
  4221b2:	cli    
  4221b3:	inc    eax
  4221b4:	mov    al,ds:0xf00b3c37
  4221ba:	xchg   ebp,eax
  4221bb:	cmp    edx,DWORD PTR [ecx+ebx*1+0x55]
  4221bf:	in     eax,0x7d
  4221c1:	repz mov edx,0x8b961199
  4221c7:	adc    al,0x45
  4221c9:	cld    
  4221ca:	cs push ecx
  4221cc:	push   edi
  4221cd:	adc    cl,BYTE PTR [edx+0x92d1834]
  4221d3:	jmp    0x6f97:0xe83f2fdb
  4221da:	loope  0x42224a
  4221dc:	call   0xb110:0xdea64d32
  4221e3:	or     BYTE PTR [ecx],bl
  4221e5:	iret   
  4221e6:	je     0x4221ea
  4221e8:	mov    ah,0x41
  4221ea:	mov    ecx,0x560a5c8f
  4221ef:	imul   edi,eax,0x892f250c
  4221f5:	and    DWORD PTR [esi-0x17],ebx
  4221f8:	jl     0x4221db
  4221fa:	sbb    eax,ebp
  4221fc:	test   al,0x33
  4221fe:	imul   eax,DWORD PTR [edx+0x40],0xfffffffe
  422202:	mov    eax,ds:0x1d462133
  422207:	(bad)  
  422208:	sar    cl,1
  42220a:	retf   
  42220b:	call   0xdb5b:0x1572a35
  422212:	xchg   edx,eax
  422213:	adc    dh,BYTE PTR [ecx-0x73]
  422216:	xchg   DWORD PTR [ecx+0x85a7b56],ecx
  42221c:	je     0x4221c3
  42221e:	push   ds
  42221f:	jo     0x42223e
  422221:	sbb    bl,BYTE PTR [ebx-0x5c3f3338]
  422227:	sbb    ecx,0x29fe6e9d
  42222d:	arpl   WORD PTR [ecx+0x76197dbd],di
  422233:	mov    WORD PTR [esp+edi*2+0x52],fs
  422237:	push   edx
  422238:	push   0x1d057070
  42223d:	daa    
  42223e:	repz les esp,FWORD PTR [ebx+0x3ba0f7a0]
  422245:	fst    QWORD PTR [ebx+edx*4+0x690822e]
  42224c:	mov    edx,0x65d86b4b
  422251:	mov    WORD PTR [ecx+eiz*8+0x6c492516],ds
  422258:	pop    eax
  422259:	mov    al,ds:0x43702e6b
  42225e:	mov    ebx,0x854bd283
  422263:	retf   
  422264:	adc    bl,BYTE PTR [edi-0x65]
  422267:	lods   eax,DWORD PTR ds:[esi]
  422268:	pop    eax
  422269:	jg     0x42227c
  42226b:	mov    edi,0x7288e74f
  422270:	mov    al,ds:0x61e76851
  422275:	std    
  422276:	cmp    esi,DWORD PTR [ebx]
  422278:	aas    
  422279:	add    esp,DWORD PTR [edi-0x3bebf85a]
  42227f:	dec    esi
  422280:	cmp    BYTE PTR [esp+ecx*8+0x32],bl
  422284:	call   FWORD PTR [ebx]
  422286:	xchg   BYTE PTR [edx+0x33],ah
  422289:	add    ch,BYTE PTR [edi-0x3f993dfa]
  42228f:	xchg   edx,eax
  422290:	out    0x22,al
  422292:	cs in  eax,0xbd
  422295:	cld    
  422296:	jp     0x42225c
  422298:	ds dec esp
  42229a:	sub    ah,bl
  42229c:	ss mov edi,0x9ab27edb
  4222a2:	shl    BYTE PTR [edi],cl
  4222a4:	mov    bh,0x1a
  4222a6:	cmp    BYTE PTR [edi-0x4],ch
  4222a9:	xchg   DWORD PTR [ebp+0x7461eef],esi
  4222af:	cmp    al,0x2b
  4222b1:	std    
  4222b2:	cmc    
  4222b3:	add    dl,BYTE PTR [ecx]
  4222b5:	fisttp QWORD PTR [edx-0x2299fdbc]
  4222bb:	fucomp st(6)
  4222bd:	cmp    al,bh
  4222bf:	imul   edi,DWORD PTR [eax+0x2d01e7cb],0x7ec68079
  4222c9:	jp     0x4222c4
  4222cb:	cwde   
  4222cc:	add    ch,ch
  4222ce:	nop
  4222cf:	hlt    
  4222d0:	mov    esp,0x47ab470c
  4222d5:	sar    BYTE PTR [edx+0x66],1
  4222d8:	daa    
  4222d9:	shl    eax,1
  4222db:	mov    ebp,0xc97c6ea7
  4222e0:	inc    esp
  4222e1:	fidiv  DWORD PTR [ecx+0x24]
  4222e4:	scas   eax,DWORD PTR es:[edi]
  4222e5:	test   DWORD PTR [esi+edi*8-0x6fef8002],ebx
  4222ec:	enter  0xd254,0x80
  4222f0:	sahf   
  4222f1:	fsub   QWORD PTR [esi+0x69]
  4222f4:	cs int3 
  4222f6:	repnz sub BYTE PTR [eax],0x83
  4222fa:	cmovge eax,DWORD PTR [edx+0x3d]
  4222fe:	jnp    0x4222af
  422300:	mov    ds:0x864a59b3,al
  422305:	jns    0x4222bf
  422307:	xchg   esp,eax
  422308:	xchg   ecx,eax
  42230a:	lea    ecx,[edi+ecx*4+0x5ef1cab6]
  422311:	arpl   WORD PTR [ecx-0x4b34a520],si
  422317:	sub    DWORD PTR fs:[edi+0x3113ae97],ebp
  42231e:	dec    DWORD PTR [ebx-0x1e69ed8]
  422324:	or     eax,0xf21e6462
  422329:	mov    DWORD PTR ds:0xd5f00b38,ebx
  42232f:	pushf  
  422330:	aad    0xaf
  422332:	xor    ch,BYTE PTR [eax-0x56040400]
  422338:	fnsave [ebp-0x2f2d5fd3]
  42233e:	jp     0x4222f3
  422340:	test   eax,0xdda54aa2
  422345:	mov    eax,ds:0xe9c72b37
  42234a:	and    eax,0x54451e3d
  42234f:	xchg   esp,eax
  422350:	rcr    DWORD PTR [esi-0x23],0x95
  422354:	loopne 0x4223a0
  422356:	jo     0x4222ed
  422358:	jmp    0xc24e13de
  42235d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42235e:	call   0xaa40:0x7a47987a
  422365:	sub    DWORD PTR [esi],eax
  422367:	push   cs
  422368:	sbb    DWORD PTR [eax+0x12aa70d8],ecx
  42236e:	paddusw mm0,QWORD PTR [ebp+0x6d72a32c]
  422375:	lahf   
  422376:	xchg   edx,eax
  422377:	push   es
  422378:	pop    edi
  422379:	leave  
  42237a:	sub    eax,0x91207e95
  42237f:	jo     0x4223be
  422381:	hlt    
  422382:	ds ss dec ecx
  422385:	and    ebx,edi
  422387:	cmp    al,0xf0
  422389:	pop    es
  42238a:	xchg   esi,eax
  42238b:	in     al,0xf0
  42238d:	leave  
  42238e:	hlt    
  42238f:	retf   
  422390:	inc    esi
  422391:	mov    eax,0xd2410a41
  422396:	js     0x422356
  422398:	pusha  
  422399:	icebp  
  42239a:	dec    ebx
  42239b:	sbb    dl,bh
  42239d:	mov    BYTE PTR [ebp-0x7a],cl
  4223a0:	stc    
  4223a1:	inc    eax
  4223a2:	pop    edi
  4223a3:	cld    
  4223a4:	push   0x892bedf
  4223a9:	pop    ebp
  4223aa:	sub    eax,0xbf771743
  4223af:	(bad)  
  4223b0:	mov    esi,0xa1a73cdd
  4223b5:	mov    cl,0x4e
  4223b7:	adc    BYTE PTR [edi+0x57],bh
  4223ba:	xchg   esp,eax
  4223bb:	(bad)
  4223be:	mov    eax,0x559995ea
  4223c3:	fsub   QWORD PTR [eiz*2-0x67f75c06]
  4223ca:	mov    ds:0xc85b0a59,eax
  4223cf:	daa    
  4223d0:	fwait
  4223d1:	mov    ebp,0xf42b0531
  4223d6:	out    dx,eax
  4223d7:	mov    al,0x6c
  4223d9:	clc    
  4223da:	pop    esi
  4223db:	push   esi
  4223dc:	xor    ah,dh
  4223de:	dec    DWORD PTR [ebx+0x2a2fece8]
  4223e4:	sbb    al,BYTE PTR [esi+0x27]
  4223e7:	push   eax
  4223e8:	or     eax,0x163300b4
  4223ed:	sub    edi,ecx
  4223ef:	mov    ebx,0xf5e6cab6
  4223f4:	call   0x17e56346
  4223f9:	cld    
  4223fa:	or     DWORD PTR [ebx-0x3d709e0d],esi
  422400:	dec    esi
  422401:	cwde   
  422402:	icebp  
  422403:	lods   eax,DWORD PTR ds:[esi]
  422404:	out    0x59,eax
  422406:	retf   
  422407:	out    dx,eax
  422408:	dec    edi
  422409:	pop    ebp
  42240a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42240b:	pushf  
  42240c:	sub    BYTE PTR [ecx+0x69a75850],ah
  422412:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422413:	cmp    eax,DWORD PTR ds:0xdc4bf889
  422419:	in     eax,dx
  42241a:	je     0x42246f
  42241c:	push   ebp
  42241d:	js     0x42243c
  42241f:	sbb    al,0xd3
  422421:	jne    0x422472
  422423:	sbb    al,0x9a
  422425:	(bad)  
  422426:	test   eax,0xd945814
  42242b:	fidiv  WORD PTR [ebp-0x7b37274]
  422431:	xchg   edi,eax
  422432:	push   es
  422433:	(bad)  
  422434:	mov    ecx,ebp
  422436:	mov    ebx,0xe42005ae
  42243b:	mov    BYTE PTR [eax-0x748e29e1],0x9f
  422442:	rcl    DWORD PTR [ecx-0x6c],1
  422445:	mov    al,ds:0x3089dbd6
  42244a:	lods   al,BYTE PTR ds:[esi]
  42244b:	xchg   edi,eax
  42244c:	ret    
  42244d:	out    dx,al
  42244e:	in     eax,dx
  42244f:	(bad)  
  422450:	xlat   BYTE PTR ds:[ebx]
  422451:	cmp    esi,edx
  422453:	ret    
  422454:	lods   al,BYTE PTR ds:[esi]
  422455:	dec    ebp
  422456:	fmul   QWORD PTR [ebx+edx*1+0x73ccf903]
  42245d:	pop    ds
  42245e:	sbb    ebp,DWORD PTR [esi-0x26]
  422461:	arpl   WORD PTR ds:0xdb07cb5d,sp
  422467:	outs   dx,DWORD PTR ds:[esi]
  422468:	(bad)  
  422469:	iret   
  42246a:	sti    
  42246b:	and    eax,0xf3b092a2
  422470:	xor    esi,esi
  422472:	out    dx,al
  422473:	aas    
  422474:	push   ss
  422475:	into   
  422476:	or     dh,BYTE PTR [eax+0x683609a3]
  42247c:	dec    edx
  42247d:	jecxz  0x422430
  42247f:	and    eax,DWORD PTR [ecx]
  422481:	dec    ecx
  422482:	and    edx,DWORD PTR [ebx+ebx*1]
  422485:	les    esi,FWORD PTR [edx-0x71fcf82e]
  42248b:	fld    QWORD PTR [eax]
  42248d:	xchg   edx,eax
  42248e:	fsubr  DWORD PTR [eax]
  422490:	in     al,0x2c
  422492:	mov    BYTE PTR [ebx+0x71],cl
  422495:	les    ebp,FWORD PTR [eax]
  422497:	jp     0x4224fd
  422499:	jb     0x42244e
  42249b:	xor    eax,0x651302d2
  4224a0:	dec    ebx
  4224a1:	and    al,0xca
  4224a3:	mov    ch,0xd9
  4224a5:	fdivr  QWORD PTR [edi]
  4224a7:	mov    esp,0x8b227393
  4224ac:	mov    bh,0xac
  4224ae:	hlt    
  4224af:	add    ebp,DWORD PTR [edx+0x21642bc6]
  4224b5:	push   edx
  4224b6:	mov    ah,0x59
  4224b8:	shl    BYTE PTR [edx+0x75],1
  4224bb:	cli    
  4224bc:	inc    ebp
  4224bd:	out    0x48,al
  4224bf:	pushf  
  4224c0:	cdq    
  4224c1:	sbb    DWORD PTR [ebx+0x709142db],edi
  4224c7:	dec    edi
  4224c8:	xchg   DWORD PTR [esi+ecx*4-0x2f64bf2f],edi
  4224cf:	jge    0x422523
  4224d1:	pop    ecx
  4224d2:	imul   esp,DWORD PTR [edi],0x9752857b
  4224d8:	(bad)  
  4224d9:	mov    bh,BYTE PTR [edx+esi*2-0x14235fb9]
  4224e0:	enter  0x6875,0x7a
  4224e4:	dec    esp
  4224e5:	xchg   edx,eax
  4224e6:	jl     0x42253e
  4224e8:	xchg   BYTE PTR [esi-0x2f],ch
  4224eb:	mov    edi,0xe9455776
  4224f0:	xor    al,0xb8
  4224f2:	loope  0x422475
  4224f4:	mov    fs,WORD PTR [ecx]
  4224f6:	or     edx,DWORD PTR [edi+ebx*4+0x75]
  4224fa:	loope  0x422533
  4224fc:	lods   eax,DWORD PTR ds:[esi]
  4224fd:	xor    esp,ebx
  4224ff:	or     DWORD PTR [edi+0x151a659f],ebp
  422505:	in     eax,0x58
  422507:	repnz out dx,eax
  422509:	cli    
  42250a:	scas   eax,DWORD PTR es:[edi]
  42250b:	inc    ecx
  42250c:	cmp    BYTE PTR [ecx+ecx*2],bl
  42250f:	adc    BYTE PTR [edx+0x7ec51712],dl
  422515:	xor    edx,0x1b
  422518:	sbb    BYTE PTR [ebp-0x18a67f5a],0x4c
  42251f:	add    eax,0xc9656ffb
  422524:	stos   DWORD PTR es:[edi],eax
  422525:	mov    eax,0x276d63f1
  42252a:	es mov dl,0x8f
  42252d:	jmp    0x4a6b:0x93c1b7e4
  422534:	enter  0xfb38,0x77
  422538:	stos   DWORD PTR es:[edi],eax
  422539:	lea    eax,[edx-0x7b9dc74e]
  42253f:	cmp    esp,eax
  422541:	cmp    DWORD PTR [eax-0x45255dd4],eax
  422547:	mov    edi,0x850d21d2
  42254c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42254d:	daa    
  42254e:	aad    0x25
  422550:	mov    eax,ebp
  422552:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  422554:	icebp  
  422555:	and    BYTE PTR [ebp-0x9],bh
  422558:	push   esp
  422559:	mov    WORD PTR [edx+0xd56b08b],cs
  42255f:	mov    esi,0xf68d72f0
  422564:	and    DWORD PTR [ebp-0x50],esi
  422567:	and    al,0xdf
  422569:	and    edx,ebp
  42256b:	mov    cl,0xc8
  42256d:	sbb    BYTE PTR ds:0x7f9d5069,bl
  422573:	mov    cs,WORD PTR [esi+0x3be02b9c]
  422579:	retf   0xe2ff
  42257c:	sbb    eax,DWORD PTR [ecx+0x12]
  42257f:	into   
  422580:	cmp    BYTE PTR [edx+0x6fd3748],bl
  422586:	stc    
  422587:	fbstp  TBYTE PTR [eax+0x5265f004]
  42258d:	cmc    
  42258e:	fwait
  42258f:	xchg   BYTE PTR [edi+0x71],bh
  422592:	jo     0x4225af
  422594:	mov    ah,0xc4
  422596:	(bad)  
  422597:	rol    BYTE PTR [ecx+0x45],cl
  42259a:	hlt    
  42259b:	fbstp  TBYTE PTR [edi-0x1eb4477e]
  4225a1:	xor    bl,BYTE PTR [edi-0x2f3c0b79]
  4225a7:	xor    cl,BYTE PTR [ecx-0x70]
  4225aa:	loopne 0x422573
  4225ac:	aaa    
  4225ad:	jo     0x422617
  4225af:	aaa    
  4225b0:	icebp  
  4225b1:	retf   
  4225b2:	mov    ebp,0x5f9dcb98
  4225b7:	mov    ebx,0x3b9f43c
  4225bc:	push   ds
  4225bd:	xchg   ecx,eax
  4225be:	add    BYTE PTR [eax],al
  4225c0:	add    BYTE PTR [eax],al
  4225c2:	retf   0x6914
  4225c5:	dec    ecx
  4225c6:	(bad)  
  4225c7:	jge    0x4225b3
  4225c9:	xchg   edi,eax
  4225ca:	outs   dx,DWORD PTR ds:[esi]
  4225cb:	jge    0x422555
  4225cd:	call   0x9f8d:0x21d12cb7
  4225d4:	add    DWORD PTR [eax],eax
  4225d6:	hlt    
  4225d7:	add    al,0x0
  4225d9:	add    BYTE PTR [ebp+0x56],al
  4225dc:	mov    esi,eax
  4225de:	popw   ss
  4225e0:	or     BYTE PTR [eax+0x53],cl
  4225e3:	ins    DWORD PTR es:[edi],dx
  4225e4:	sub    dl,dl
  4225e6:	out    0x2f,eax
  4225e8:	adc    al,0x7f
  4225ea:	xchg   ebp,eax
  4225eb:	xchg   ecx,eax
  4225ec:	fcomi  st,st(6)
  4225ee:	and    eax,0x234e8241
  4225f3:	push   0xf19a72ee
  4225f8:	fnstenv [edi+0x0]
  4225fb:	xchg   edx,eax
  4225fc:	jl     0x42258b
  4225fe:	pop    edi
  4225ff:	enter  0x89d2,0xc1
  422603:	and    cl,ah
  422605:	lods   eax,DWORD PTR ds:[esi]
  422606:	jl     0x422642
  422608:	pop    ebp
  422609:	cmc    
  42260a:	mov    al,ds:0xf33eabc1
  42260f:	fild   QWORD PTR ds:0xaed3851c
  422615:	adc    ecx,esp
  422617:	int    0x99
  422619:	fbld   TBYTE PTR [edx+0x77]
  42261c:	pusha  
  42261d:	test   al,0x57
  42261f:	ins    BYTE PTR es:[edi],dx
  422620:	fmulp  st(2),st
  422622:	jp     0x422685
  422624:	test   dh,0xdd
  422627:	adc    cl,BYTE PTR [eax+0x74]
  42262a:	fcomp  QWORD PTR [ebx-0x2a773d67]
  422630:	ret    0x4a68
  422633:	sub    ch,cl
  422635:	ficomp DWORD PTR [eax]
  422637:	pop    ss
  422638:	xor    BYTE PTR [esi+0xe87567b],bl
  42263e:	jp     0x422627
  422640:	mov    ecx,0x8ed1a07e
  422645:	pop    ecx
  422646:	imul   ecx,DWORD PTR [ebx-0x63],0xc
  42264a:	nop
  42264b:	fidiv  WORD PTR [ecx-0x360ac7c3]
  422651:	nop
  422652:	jmp    0x41618708
  422657:	(bad)  
  422659:	lods   eax,DWORD PTR ds:[esi]
  42265a:	sti    
  42265b:	outs   dx,BYTE PTR ds:[esi]
  42265c:	jp     0x4226b7
  42265e:	fbstp  TBYTE PTR [ebx+0x6accd519]
  422664:	adc    BYTE PTR [ecx+0x485564f3],0xdb
  42266b:	je     0x4226b3
  42266d:	pop    ds
  42266e:	or     bl,cl
  422670:	mov    fs,WORD PTR [edi-0x1e9b1dd7]
  422676:	test   DWORD PTR [eax+ebp*1],edi
  422679:	jns    0x4226e9
  42267b:	xchg   edx,eax
  42267c:	test   eax,0x673b3f2e
  422681:	mov    ebx,0xbdae413a
  422686:	mov    bh,0x6a
  422688:	or     eax,0x369dafcf
  42268d:	mov    DWORD PTR [ecx-0x76ec7559],ecx
  422693:	jnp    0x4226f9
  422695:	and    BYTE PTR ds:0x59079b21,bh
  42269b:	jmp    0x3ed8:0x1bfac07f
  4226a2:	in     eax,dx
  4226a3:	scas   al,BYTE PTR es:[edi]
  4226a4:	jo     0x422644
  4226a6:	mov    ds:0x65cbafa4,al
  4226ab:	repz mov al,ds:0x2bd8353a
  4226b1:	fisub  WORD PTR [ebx-0x3b3e47be]
  4226b7:	fsub   st(3),st
  4226b9:	add    BYTE PTR [edi-0x76],cl
  4226bc:	sub    al,0xee
  4226be:	cli    
  4226bf:	outs   dx,BYTE PTR ds:[esi]
  4226c0:	leave  
  4226c1:	out    dx,eax
  4226c2:	dec    eax
  4226c3:	in     al,0xb
  4226c5:	pop    ebp
  4226c6:	adc    ebx,DWORD PTR [edi+0x40]
  4226c9:	sub    DWORD PTR [ebp+0x5373ce4f],0x66191ea9
  4226d3:	popf   
  4226d4:	lods   al,BYTE PTR ds:[esi]
  4226d5:	rcr    BYTE PTR [ecx-0x7fcc4f4],1
  4226db:	data16 test al,0x40
  4226de:	mov    ebx,DWORD PTR [eax]
  4226e0:	ret    
  4226e1:	jne    0x422747
  4226e3:	ds dec ebp
  4226e5:	test   al,0xb7
  4226e7:	inc    eax
  4226e8:	ror    BYTE PTR ds:[ebx+ebx*1+0x2d],cl
  4226ed:	outs   dx,BYTE PTR ds:[esi]
  4226ee:	cmc    
  4226ef:	xchg   esp,eax
  4226f0:	push   0x44c93dbc
  4226f5:	cs rcr ebp,1
  4226f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226f9:	adc    eax,0x8dded2c9
  4226fe:	(bad)  
  4226ff:	jl     0x422756
  422701:	ret    0xd16f
  422704:	popa   
  422705:	test   al,0x1f
  422707:	mov    esp,0x7d51f3cb
  42270c:	retf   
  42270d:	hlt    
  42270e:	inc    ah
  422710:	push   0xbf63dfcd
  422715:	inc    eax
  422716:	out    0x2f,eax
  422718:	mov    bl,0x61
  42271a:	dec    esi
  42271b:	aad    0x46
  42271d:	ins    DWORD PTR es:[edi],dx
  42271e:	stos   DWORD PTR es:[edi],eax
  42271f:	sbb    BYTE PTR [ecx],bl
  422721:	pop    ecx
  422722:	mov    al,cl
  422724:	pop    ss
  422725:	sub    al,BYTE PTR [edi]
  422727:	mov    esp,0x961d3b62
  42272c:	scas   eax,DWORD PTR es:[edi]
  42272d:	jo     0x42278c
  42272f:	jecxz  0x42276d
  422731:	push   cs
  422732:	inc    edx
  422733:	jecxz  0x42278b
  422735:	inc    ebx
  422736:	aaa    
  422737:	sbb    al,0x7e
  422739:	icebp  
  42273a:	push   esp
  42273b:	ins    BYTE PTR es:[edi],dx
  42273c:	test   eax,0x1a42654e
  422741:	jbe    0x42277f
  422743:	imul   eax,edx,0x6a
  422746:	sbb    DWORD PTR ds:0x4ba688e1,0x16
  42274d:	les    esp,FWORD PTR [ebx-0x36]
  422750:	ror    DWORD PTR [esi-0x4ea64ea],cl
  422756:	inc    eax
  422757:	or     al,0xdc
  422759:	or     BYTE PTR [esi+0x29e5008],bl
  42275f:	test   BYTE PTR [eax],cl
  422761:	mov    ch,0x65
  422763:	or     eax,0x1a2d3f64
  422768:	pop    ebx
  422769:	test   al,0xa8
  42276b:	push   edi
  42276c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42276d:	(bad)  
  42276f:	loopne 0x4227a1
  422771:	popf   
  422772:	daa    
  422773:	mov    al,ds:0xced5077b
  422778:	push   eax
  422779:	fstp   TBYTE PTR [esi]
  42277b:	repz push edx
  42277d:	(bad)  
  42277e:	push   edx
  42277f:	sar    BYTE PTR [ebx],0x4a
  422782:	out    dx,al
  422783:	fwait
  422784:	pop    ebx
  422785:	add    ecx,ecx
  422787:	pop    ss
  422788:	test   DWORD PTR [esi+0x79],esp
  42278b:	loopne 0x42271f
  42278d:	pushf  
  42278e:	addr16 dec edx
  422790:	popf   
  422791:	push   esi
  422792:	retf   0x788e
  422795:	daa    
  422796:	xchg   ecx,eax
  422797:	jecxz  0x422792
  422799:	cdq    
  42279a:	xchg   sp,ax
  42279c:	jne    0x4227eb
  42279e:	sub    al,0x61
  4227a0:	push   eax
  4227a1:	add    BYTE PTR [ecx],bl
  4227a3:	xchg   ebp,eax
  4227a4:	mov    ss,WORD PTR [ebp+eax*1+0x5f]
  4227a8:	add    ah,BYTE PTR [edx+0x15]
  4227ab:	out    dx,eax
  4227ac:	and    BYTE PTR [edx-0xddedb37],bh
  4227b2:	push   0x36
  4227b4:	dec    esp
  4227b5:	or     eax,0x34cce96c
  4227ba:	ret    
  4227bb:	arpl   WORD PTR [ecx],di
  4227bd:	jg     0x42279d
  4227bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227c0:	ins    BYTE PTR es:[edi],dx
  4227c1:	adc    al,0xf
  4227c3:	pop    esp
  4227c4:	or     BYTE PTR [ebx+ecx*4],bh
  4227c7:	pop    edi
  4227c8:	xchg   ebp,eax
  4227c9:	cwde   
  4227ca:	dec    esp
  4227cb:	xor    cl,dh
  4227cd:	xor    al,0x90
  4227cf:	call   0x9413:0xca866d52
  4227d6:	lock pushf 
  4227d8:	jl     0x42284d
  4227da:	in     eax,dx
  4227db:	and    dl,BYTE PTR [eax]
  4227dd:	pop    ss
  4227de:	mov    BYTE PTR [ebx+0x32],cl
  4227e1:	retf   0x2462
  4227e4:	xchg   edi,eax
  4227e5:	ror    DWORD PTR [eax],cl
  4227e7:	not    BYTE PTR [ecx-0x4ce6fc59]
  4227ed:	and    eax,0x99fd1bca
  4227f2:	and    dl,dh
  4227f4:	cli    
  4227f5:	(bad)  
  4227f6:	adc    esp,DWORD PTR [edx]
  4227f8:	cmp    ah,BYTE PTR [edx+0x5a]
  4227fb:	mov    ch,ch
  4227fd:	and    eax,0x32fef099
  422802:	jecxz  0x422880
  422804:	in     al,dx
  422805:	(bad)  
  422806:	clc    
  422807:	cmp    ecx,esi
  422809:	add    dh,dl
  42280b:	or     eax,0x4236a366
  422810:	das    
  422811:	pusha  
  422812:	pop    ecx
  422813:	loope  0x4227a3
  422815:	loopne 0x4227e6
  422817:	xor    eax,0x1eaeb1ce
  42281c:	div    ebx
  42281e:	enter  0xb57d,0x3b
  422822:	or     eax,0xf96b254
  422827:	push   ebp
  422828:	dec    ebx
  422829:	sbb    eax,0xd5107160
  42282e:	icebp  
  42282f:	sub    al,0xb2
  422831:	jmp    0xf0a6:0xc2e89152
  422838:	imul   esp,DWORD PTR [esi+0x761d4b4a],0xffffffe0
  42283f:	pop    ss
  422840:	pop    ds
  422841:	(bad)  
  422842:	push   edx
  422843:	aaa    
  422844:	lahf   
  422845:	jl     0x4227d1
  422847:	shl    DWORD PTR [eax+0x2e],0x8b
  42284b:	cmc    
  42284c:	push   ebp
  42284d:	cld    
  42284e:	fcmovnbe st,st(7)
  422850:	mov    al,ds:0x75f47273
  422855:	xor    bh,cl
  422857:	pop    es
  422858:	dec    eax
  422859:	cld    
  42285a:	scas   eax,DWORD PTR es:[edi]
  42285b:	fdiv   DWORD PTR [esi-0x28]
  42285e:	jae    0x422803
  422860:	jp     0x42289b
  422862:	mov    esp,0x644d7f61
  422867:	mov    cl,0x1e
  422869:	int    0x64
  42286b:	push   eax
  42286c:	lock repnz mov edi,0xbe37a19e
  422873:	mov    edi,0xc8caaae2
  422878:	pop    edx
  422879:	push   ss
  42287a:	sbb    bl,al
  42287c:	fisttp QWORD PTR [ebx+edi*2]
  42287f:	sbb    eax,0x63e73de1
  422884:	fisubr DWORD PTR [esi]
  422886:	add    eax,0x53c31df3
  42288b:	gs push esp
  42288d:	sti    
  42288e:	retf   
  42288f:	cmp    al,0x27
  422891:	adc    eax,0x17630153
  422896:	(bad)  
  422897:	aam    0xbd
  422899:	jp     0x422898
  42289b:	push   edi
  42289c:	(bad)  
  42289d:	push   esp
  42289e:	pop    eax
  42289f:	and    eax,0x7cbcdc46
  4228a4:	shr    ebp,cl
  4228a6:	ret    
  4228a7:	sahf   
  4228a8:	cmp    al,al
  4228aa:	xchg   esi,eax
  4228ab:	mov    bl,0xbf
  4228ad:	jmp    0x48e7:0x28e573db
  4228b4:	out    dx,eax
  4228b5:	(bad)  
  4228b7:	test   DWORD PTR [ecx+edi*8-0x6ded38d3],eax
  4228be:	push   DWORD PTR [ebx-0x2946ed57]
  4228c4:	adc    ah,BYTE PTR [ebx]
  4228c6:	pop    esi
  4228c7:	sub    BYTE PTR [ebx-0x27ba6fda],cl
  4228cd:	or     DWORD PTR [esi],ebx
  4228cf:	sti    
  4228d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228d1:	add    eax,DWORD PTR [eax+0xc]
  4228d4:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4228d6:	mov    al,ds:0x3691b201
  4228db:	push   ebx
  4228dc:	sbb    eax,0xace118a0
  4228e1:	add    BYTE PTR [ecx-0x2858d058],dl
  4228e7:	in     eax,dx
  4228e8:	dec    eax
  4228e9:	and    DWORD PTR [ebp+0x3a7fd137],0x6bf64acd
  4228f3:	das    
  4228f4:	ror    eax,0x8b
  4228f7:	or     eax,0x1f14d48e
  4228fc:	or     eax,esp
  4228fe:	jmp    0xf015:0xae3bd4d7
  422905:	enter  0x5946,0x98
  422909:	sub    DWORD PTR [ebx+0x41],0xffffffd9
  42290d:	enter  0xcbf1,0x26
  422911:	test   al,0x69
  422913:	mov    ebx,0x14f2876
  422918:	pop    esi
  422919:	je     0x422957
  42291b:	mov    bh,0xa5
  42291d:	cli    
  42291e:	out    dx,al
  42291f:	fistp  QWORD PTR [edx-0x7ab832a5]
  422925:	rol    BYTE PTR [edi-0x208288a6],0x9e
  42292c:	or     ebx,DWORD PTR [edi-0x5ac00e0d]
  422932:	fnstsw WORD PTR [ebx+0x3d]
  422935:	mov    ebp,0x4ed1df41
  42293a:	fstp   DWORD PTR [ebx-0x4e]
  42293d:	out    dx,al
  42293e:	adc    edx,DWORD PTR ds:0xdcdc8669
  422945:	mov    dl,0xb2
  422947:	aam    0xc
  422949:	(bad)  
  42294a:	push   ss
  42294b:	xchg   DWORD PTR [ecx-0x35],ebx
  42294e:	ja     0x422983
  422950:	or     bh,BYTE PTR [edi+0x0]
  422953:	loopne 0x422996
  422955:	loope  0x4228f0
  422957:	ret    0x9359
  42295a:	pop    ss
  42295b:	pusha  
  42295c:	es popf 
  42295e:	fcmovne st,st(6)
  422960:	in     al,0xab
  422962:	bswap  ebx
  422964:	dec    esp
  422965:	jge    0x4229e1
  422967:	inc    edi
  422968:	mov    bl,0xa6
  42296a:	outs   dx,BYTE PTR ds:[esi]
  42296b:	in     al,dx
  42296c:	cdq    
  42296d:	icebp  
  42296e:	inc    esp
  42296f:	mov    ch,0x7c
  422971:	sub    ah,ah
  422973:	jb     0x422937
  422975:	adc    DWORD PTR [edx-0x3c24779a],ebp
  42297b:	mov    ds:0x4d389e62,al
  422980:	out    0xbb,eax
  422982:	xchg   ebx,eax
  422983:	add    DWORD PTR [eax-0x4d],0x11
  422987:	cmp    dl,cl
  422989:	sbb    DWORD PTR [ecx],edx
  42298b:	inc    esp
  42298c:	aad    0xe1
  42298e:	out    0xf,eax
  422990:	sbb    al,BYTE PTR [ebp-0x33]
  422993:	mov    ch,bl
  422995:	inc    edx
  422996:	mov    ds:0xbd516d2,eax
  42299b:	jnp    0x422999
  42299d:	sub    BYTE PTR [edx-0x6b],ah
  4229a0:	clc    
  4229a1:	xor    eax,0xcbe69a7b
  4229a6:	push   ds
  4229a7:	mov    ebx,0xc9cc30ba
  4229ac:	xchg   BYTE PTR [eax+0x3056f128],dh
  4229b2:	call   DWORD PTR [esi]
  4229b4:	sub    eax,0x1528fd64
  4229b9:	and    DWORD PTR [edi],0xd3c8621a
  4229bf:	mov    eax,0xb157fd7c
  4229c4:	add    eax,0xbb444f92
  4229c9:	lahf   
  4229ca:	les    ecx,FWORD PTR [edi+0x49]
  4229cd:	jge    0x4229f5
  4229cf:	rcl    BYTE PTR [eax],cl
  4229d1:	push   0x20
  4229d3:	add    BYTE PTR [edi-0x4ac25493],dh
  4229d9:	or     eax,0xb5ff82a3
  4229de:	jnp    0x422974
  4229e0:	not    al
  4229e2:	retf   0xb110
  4229e5:	push   ebx
  4229e6:	mov    edx,0x9fe002a1
  4229eb:	daa    
  4229ec:	call   0xc973cd
  4229f1:	or     ebp,DWORD PTR [edi-0x61]
  4229f4:	pusha  
  4229f5:	sar    DWORD PTR [edi+0x20],0xbf
  4229f9:	out    dx,al
  4229fa:	shl    BYTE PTR [edx],1
  4229fc:	inc    edx
  4229fd:	ss test eax,0xb3169988
  422a03:	push   edi
  422a04:	popf   
  422a05:	or     dh,BYTE PTR [ebx]
  422a07:	cs (bad) 
  422a09:	mov    al,ds:0x219d3fef
  422a0e:	adc    eax,0x78b68e5b
  422a13:	jle    0x422a2d
  422a15:	retf   
  422a16:	inc    ebx
  422a17:	mov    esi,0x2fdc618d
  422a1c:	xchg   BYTE PTR [ebx+0x42],bl
  422a1f:	push   ds
  422a20:	sti    
  422a21:	xchg   cl,bh
  422a23:	jge    0x4229f7
  422a25:	xchg   ebp,eax
  422a26:	hlt    
  422a27:	arpl   WORD PTR [edx+0x7dc96daf],sp
  422a2d:	inc    esi
  422a2e:	enter  0xc1f3,0x9c
  422a32:	lahf   
  422a33:	cmp    dh,ch
  422a35:	repnz stos DWORD PTR es:[edi],eax
  422a37:	sbb    cl,BYTE PTR [eax+0x358872d3]
  422a3d:	inc    edx
  422a3e:	push   edx
  422a3f:	shl    ch,cl
  422a41:	pop    eax
  422a42:	sub    dl,dh
  422a44:	sub    eax,0x539775d3
  422a49:	or     al,cl
  422a4b:	pop    ss
  422a4c:	test   eax,0x7dbf41e3
  422a51:	std    
  422a52:	scas   al,BYTE PTR es:[edi]
  422a53:	imul   eax,ecx,0x9baa1292
  422a59:	int3   
  422a5a:	mov    dl,0xf
  422a5c:	mov    al,ds:0x81d0d0ed
  422a61:	icebp  
  422a62:	das    
  422a63:	arpl   bp,bp
  422a65:	cmp    eax,0xad430327
  422a6a:	and    al,0x21
  422a6c:	inc    edi
  422a6d:	and    esi,ebx
  422a6f:	mov    edi,DWORD PTR [esi-0x2b5acb48]
  422a75:	add    al,0xfd
  422a77:	scas   eax,DWORD PTR es:[edi]
  422a78:	imul   ecx,ebx,0xf5caebc5
  422a7e:	fwait
  422a7f:	push   esi
  422a80:	gs retf 
  422a82:	fdivr  st,st(3)
  422a84:	loope  0x422a96
  422a86:	cwde   
  422a87:	je     0x422af8
  422a89:	xor    eax,0xf9539f0d
  422a8e:	xor    eax,0x4185460c
  422a93:	jo     0x422a41
  422a95:	shr    DWORD PTR [ecx+ebx*8+0x7ed9c663],cl
  422a9c:	in     al,dx
  422a9d:	aaa    
  422a9e:	test   eax,0xf61d796a
  422aa3:	mov    eax,0x3e9226ac
  422aa8:	jnp    0x422a32
  422aaa:	push   0xb4996245
  422aaf:	adc    DWORD PTR [ebp-0x2e],ebx
  422ab2:	(bad)  
  422ab3:	cld    
  422ab4:	(bad)  
  422ab5:	call   0xad47:0x6768c893
  422abc:	add    esi,ebp
  422abe:	or     eax,0xf3573fd6
  422ac3:	jl     0x422a8d
  422ac5:	loopne 0x422a6f
  422ac7:	sbb    al,0xf
  422ac9:	mov    al,0xcf
  422acb:	pop    ss
  422acc:	sub    cl,BYTE PTR [edx]
  422ace:	add    BYTE PTR [eax],al
  422ad0:	add    BYTE PTR [eax],al
  422ad2:	(bad)  
  422ad3:	xlat   BYTE PTR ds:[ebx]
  422ad4:	hlt    
  422ad5:	push   ebp
  422ad7:	jmp    FWORD PTR [ebx-0x21]
  422ada:	sub    al,0x7c
  422adc:	cmp    BYTE PTR [edx-0x71722d42],bh
  422ae2:	and    DWORD PTR [ecx+eax*1+0x4f400],0xb4e93f00
  422aed:	inc    esp
  422aee:	out    0xac,al
  422af0:	mov    ebx,0x90a7018a
  422af5:	lahf   
  422af6:	xor    BYTE PTR [esi-0x21883f9d],ch
  422afc:	call   0x8e3e3235
  422b01:	loopne 0x422afa
  422b03:	imul   esi,DWORD PTR ds:0xab0cddf0,0xb6d4314f
  422b0d:	mov    bl,BYTE PTR [ebp+0x6d93395e]
  422b13:	push   ecx
  422b14:	call   0xc8edc53
  422b19:	push   0x520ee4b8
  422b1e:	pop    edi
  422b1f:	pusha  
  422b20:	or     ecx,eax
  422b22:	sub    al,0xfd
  422b24:	pop    eax
  422b25:	xor    dl,ch
  422b27:	jmp    0x42a5:0x613a7f6a
  422b2e:	mov    cl,0xf9
  422b30:	out    dx,al
  422b31:	pop    esi
  422b32:	jnp    0x422af2
  422b34:	popa   
  422b35:	test   eax,0x7ac234b5
  422b3a:	xchg   BYTE PTR [ebx-0x25],bl
  422b3d:	inc    ecx
  422b3e:	sbb    al,BYTE PTR [esi+eiz*2-0x11af6732]
  422b45:	adc    ch,BYTE PTR [edi]
  422b47:	cld    
  422b48:	jbe    0x422b1a
  422b4a:	jmp    0xc05d:0x5f2211f1
  422b51:	scas   eax,DWORD PTR es:[edi]
  422b52:	daa    
  422b53:	xor    al,0xbf
  422b55:	or     DWORD PTR [ebp+0x70],esi
  422b58:	lds    esi,FWORD PTR [edi]
  422b5a:	adc    DWORD PTR ds:0x61407239,edx
  422b60:	and    BYTE PTR [esp+ebx*4+0x6653ede8],bh
  422b67:	sub    DWORD PTR ds:0xa150a3f8,edi
  422b6d:	sub    BYTE PTR [edi],bh
  422b6f:	dec    ecx
  422b70:	push   cs
  422b71:	or     al,dl
  422b73:	xor    ebx,DWORD PTR [esi]
  422b75:	xlat   BYTE PTR ds:[ebx]
  422b76:	ror    DWORD PTR [ebp-0xd0e9ead],1
  422b7c:	icebp  
  422b7d:	pusha  
  422b7e:	loop   0x422bee
  422b80:	dec    esp
  422b81:	dec    ebx
  422b82:	push   edi
  422b83:	xchg   ecx,eax
  422b84:	cmp    al,0xfd
  422b86:	ins    DWORD PTR es:[edi],dx
  422b87:	adc    DWORD PTR ds:0xc1a78323,ebp
  422b8d:	fstp   TBYTE PTR ds:0xe13cb98e
  422b93:	enter  0x531c,0x1
  422b97:	pop    ecx
  422b98:	adc    ebp,DWORD PTR [ebx-0x9]
  422b9b:	dec    edi
  422b9c:	mov    eax,ds:0xce4e7cbc
  422ba1:	add    dl,BYTE PTR [eax]
  422ba3:	in     eax,dx
  422ba4:	into   
  422ba5:	jp     0x422bcb
  422ba7:	mov    ecx,0xaa204c59
  422bac:	lods   eax,DWORD PTR ds:[esi]
  422bad:	add    ebx,DWORD PTR [ecx]
  422baf:	call   FWORD PTR [ebx+0x2e]
  422bb2:	in     eax,0x1d
  422bb4:	popa   
  422bb5:	cmp    al,0xe1
  422bb7:	lods   al,BYTE PTR ds:[esi]
  422bb8:	sub    al,0xe0
  422bba:	dec    ecx
  422bbb:	hlt    
  422bbc:	mov    ch,ah
  422bbe:	add    dl,BYTE PTR [edi]
  422bc0:	pushf  
  422bc1:	cmp    ebx,ebx
  422bc3:	push   es
  422bc4:	fistp  DWORD PTR [eax+0x49]
  422bc7:	xchg   DWORD PTR [ebx+0x73],edx
  422bca:	ins    DWORD PTR es:[edi],dx
  422bcb:	fst    QWORD PTR [ebx+ebx*1+0x15]
  422bcf:	mov    al,ds:0x4438b803
  422bd4:	mov    dl,0xed
  422bd6:	push   esp
  422bd7:	xor    DWORD PTR [eax+eax*1-0x283af377],ebx
  422bde:	iret   
  422bdf:	jp     0x422be1
  422be1:	add    dh,ch
  422be3:	sub    dl,BYTE PTR [edi]
  422be5:	jb     0x422bd9
  422be7:	dec    ebp
  422be8:	push   ecx
  422be9:	fcomi  st,st(6)
  422beb:	dec    esp
  422bec:	in     eax,dx
  422bed:	clc    
  422bee:	or     DWORD PTR [edi-0x5de6ccb6],edi
  422bf4:	dec    BYTE PTR [eax-0x20]
  422bf7:	push   ds
  422bf8:	retf   
  422bf9:	dec    esi
  422bfa:	xchg   edi,eax
  422bfb:	out    dx,eax
  422bfc:	test   eax,0x32f1483c
  422c01:	fs icebp 
  422c03:	test   DWORD PTR [ebp+0x4d2b309f],ebx
  422c09:	sub    ah,BYTE PTR [edx]
  422c0b:	and    BYTE PTR [esi],ch
  422c0d:	jae    0x422c4a
  422c0f:	(bad)
  422c12:	xor    ch,BYTE PTR [eax]
  422c14:	xlat   BYTE PTR ds:[ebx]
  422c15:	ret    0xf973
  422c18:	(bad)  
  422c19:	call   DWORD PTR [ecx-0x4b]
  422c1c:	lods   eax,DWORD PTR cs:[esi]
  422c1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c1f:	sub    al,0x12
  422c21:	lea    eax,ds:0x4dd8bc5b
  422c27:	push   eax
  422c28:	ret    0xa699
  422c2b:	adc    BYTE PTR [ebx+0x2c6a6080],dh
  422c31:	in     eax,0x8a
  422c33:	call   0xe589c4bf
  422c38:	inc    ecx
  422c39:	dec    ebp
  422c3a:	sub    DWORD PTR [ebp-0x5c4b5679],0x1b
  422c41:	pop    esp
  422c42:	xor    DWORD PTR [eax+edi*2-0x4e],ebx
  422c46:	sub    ah,0xae
  422c49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c4a:	enter  0x4ba3,0x69
  422c4e:	cld    
  422c4f:	dec    ebp
  422c50:	add    BYTE PTR [ebp+0x4e2af32d],al
  422c56:	shl    DWORD PTR [ebp+0x57],0x8
  422c5a:	sub    bh,BYTE PTR [ebx]
  422c5c:	adc    edx,DWORD PTR [edx]
  422c5e:	pop    ss
  422c5f:	das    
  422c60:	sbb    eax,0x2c244d69
  422c65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c66:	loopne 0x422c52
  422c68:	push   es
  422c69:	outs   dx,BYTE PTR ds:[esi]
  422c6a:	jge    0x422ca3
  422c6c:	dec    esi
  422c6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c6e:	or     BYTE PTR [ecx-0x51d6fa10],0xbf
  422c75:	retf   
  422c76:	xchg   DWORD PTR [edi-0x6fa5594e],edx
  422c7c:	jmp    0x1a853891
  422c81:	addr16 loope 0x422cbf
  422c84:	call   0x55575993
  422c89:	sub    bh,bh
  422c8b:	add    eax,0xdb800d29
  422c90:	mov    esp,eax
  422c92:	das    
  422c93:	cmp    eax,0xa445ed10
  422c98:	add    al,0x39
  422c9a:	neg    DWORD PTR [edx+edx*1+0x5c]
  422c9e:	jle    0x422cc0
  422ca0:	or     al,0x16
  422ca2:	or     al,0x51
  422ca4:	mov    eax,ds:0x234312ae
  422ca9:	in     eax,dx
  422caa:	push   ds
  422cab:	aad    0x76
  422cad:	jg     0x422cd7
  422caf:	sub    DWORD PTR [esi],edx
  422cb1:	pop    ds
  422cb2:	inc    ebx
  422cb3:	adc    BYTE PTR [edi+0x4f],al
  422cb6:	and    al,0xfa
  422cb8:	push   0x71
  422cba:	sbb    edx,DWORD PTR [ecx]
  422cbc:	ror    esp,0xce
  422cbf:	out    0x60,eax
  422cc1:	and    al,0xab
  422cc3:	add    BYTE PTR [ebp-0x1d],0x9f
  422cc7:	retf   0x114c
  422cca:	adc    al,0x1b
  422ccc:	xchg   edi,eax
  422ccd:	xchg   esi,edx
  422ccf:	les    esi,FWORD PTR [ecx-0x22]
  422cd2:	imul   ecx,DWORD PTR [esi],0xffffffda
  422cd5:	(bad)  
  422cd7:	xor    ch,BYTE PTR [esp+edi*4-0x2b57559e]
  422cde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422cdf:	push   ebx
  422ce0:	cs das 
  422ce2:	mov    edx,0x5a120e1b
  422ce7:	jno    0x422d5a
  422ce9:	pop    edx
  422cea:	fcomp  QWORD PTR [esi-0x77c5fb03]
  422cf0:	arpl   cx,bx
  422cf2:	jecxz  0x422cef
  422cf4:	mov    DWORD PTR [edx],ecx
  422cf6:	imul   eax,ebp,0xdeb4f993
  422cfc:	repnz or ah,bh
  422cff:	push   0x8a362913
  422d04:	pusha  
  422d05:	bt     DWORD PTR gs:[eax+eax*2],ebx
  422d0a:	push   edx
  422d0b:	sub    BYTE PTR [edi],ah
  422d0d:	dec    ebx
  422d0e:	dec    ax
  422d10:	inc    esi
  422d11:	icebp  
  422d12:	popf   
  422d13:	cmp    eax,0x36d55631
  422d18:	push   ds
  422d19:	mov    cl,0x41
  422d1b:	mov    bh,0xe2
  422d1d:	inc    edx
  422d1e:	pop    esp
  422d1f:	xor    DWORD PTR [edx-0x1e8d843c],0x642cd590
  422d29:	push   ebx
  422d2a:	out    dx,eax
  422d2b:	mov    BYTE PTR [ebx+0x59],bh
  422d2e:	xchg   ebp,eax
  422d2f:	sub    eax,0xb0d7ab7f
  422d34:	add    DWORD PTR [esi-0x7a],edi
  422d37:	test   DWORD PTR ds:0x46857749,ebp
  422d3d:	sub    BYTE PTR [edx+0x55],dh
  422d40:	sbb    cl,BYTE PTR [ebx]
  422d42:	pop    ebp
  422d43:	push   cs
  422d44:	faddp  st(1),st
  422d46:	jg     0x422cd4
  422d48:	jp     0x422d81
  422d4a:	sar    BYTE PTR ss:[ecx-0x4],cl
  422d4e:	jne    0x422d79
  422d50:	jle    0x422d70
  422d52:	fcom   st(6)
  422d54:	cld    
  422d55:	cli    
  422d56:	nop
  422d57:	outs   dx,BYTE PTR ds:[esi]
  422d58:	jno    0x422d21
  422d5a:	mov    ds:0xa76d4235,al
  422d5f:	addr16 (bad) 
  422d61:	jp     0x422cf2
  422d63:	jmp    0x422db3
  422d65:	repnz (bad)
  422d68:	pushf  
  422d69:	xor    edi,edi
  422d6b:	out    dx,eax
  422d6c:	inc    esp
  422d6d:	sub    eax,0x8dd69a21
  422d72:	xchg   DWORD PTR [ebp+0x5a],esi
  422d75:	pop    esi
  422d76:	shl    BYTE PTR [esi+0x72a3f15a],1
  422d7c:	xchg   BYTE PTR ds:0xc0757c67,dl
  422d82:	mov    dl,ch
  422d84:	(bad)  
  422d85:	jge    0x422d58
  422d87:	sub    DWORD PTR [esi+0x5c],eax
  422d8a:	pop    ecx
  422d8b:	jle    0x422d48
  422d8d:	fxch   st(7)
  422d8f:	loop   0x422d41
  422d91:	mov    ah,BYTE PTR [edx]
  422d93:	imul   eax,eax,0x20470de8
  422d99:	fdiv   QWORD PTR [ecx]
  422d9b:	pushf  
  422d9c:	xor    bl,BYTE PTR fs:[ebx+0x3b8b80db]
  422da3:	pop    edi
  422da4:	arpl   dx,bp
  422da6:	mov    es,ebx
  422da8:	fs xchg ebx,eax
  422daa:	cld    
  422dab:	push   es
  422dac:	lahf   
  422dad:	inc    edx
  422dae:	jge    0x422d39
  422db0:	mov    ebp,esp
  422db2:	jb     0x422d40
  422db4:	or     eax,0xf9417fff
  422db9:	ret    
  422dba:	and    DWORD PTR [ecx-0x331e8db7],0x42
  422dc1:	in     eax,dx
  422dc2:	and    eax,0xf737b4f4
  422dc7:	xchg   ah,ch
  422dc9:	jne    0x422e0b
  422dcb:	fisubr WORD PTR [ebx]
  422dcd:	sbb    BYTE PTR [edi+ebp*4-0x3],bh
  422dd1:	std    
  422dd2:	and    al,0xbd
  422dd4:	and    al,0xa7
  422dd6:	nop
  422dd7:	mov    eax,ds:0x4140e4a6
  422ddc:	or     edi,ebx
  422dde:	lahf   
  422ddf:	arpl   WORD PTR [eax+0x14],ax
  422de2:	lods   eax,DWORD PTR ds:[esi]
  422de3:	and    esp,ecx
  422de5:	pop    ecx
  422de6:	push   ebp
  422de7:	mov    edx,0x40812cdb
  422dec:	fwait
  422ded:	mov    bl,0xbb
  422def:	pop    ecx
  422df0:	push   0xffffffed
  422df2:	lea    ebx,ds:[esi]
  422df5:	sahf   
  422df6:	dec    edi
  422df7:	imul   esi,ecx,0x4f
  422dfa:	and    cl,ch
  422dfc:	push   edx
  422dfd:	cld    
  422dfe:	mov    cl,0x28
  422e00:	ins    BYTE PTR es:[edi],dx
  422e01:	leave  
  422e02:	inc    edx
  422e03:	jmp    0x422df4
  422e05:	std    
  422e06:	cwde   
  422e07:	stc    
  422e08:	mov    ds:0x42d06c24,eax
  422e0d:	nop
  422e0e:	test   al,0xbc
  422e10:	in     eax,dx
  422e11:	mov    dh,0x16
  422e13:	dec    edi
  422e14:	repnz leave 
  422e16:	mov    al,0x3a
  422e18:	les    edi,FWORD PTR [ebx]
  422e1a:	inc    ecx
  422e1b:	adc    BYTE PTR es:[esi],al
  422e1e:	pop    esp
  422e1f:	adc    eax,0xa71308ce
  422e24:	adc    DWORD PTR [esi],edx
  422e26:	in     eax,dx
  422e27:	inc    ebx
  422e28:	cmp    BYTE PTR [ecx-0x5cc13d6e],dh
  422e2e:	dec    edx
  422e2f:	sub    eax,0x512aa7f1
  422e34:	dec    esi
  422e35:	pop    esi
  422e36:	adc    dl,cl
  422e38:	scas   al,BYTE PTR es:[edi]
  422e39:	xor    DWORD PTR [edx],ebx
  422e3b:	cmp    DWORD PTR [edx],esi
  422e3d:	stos   BYTE PTR es:[edi],al
  422e3e:	lock push edi
  422e40:	cmp    dl,BYTE PTR [ecx+esi*4-0x6f]
  422e44:	pop    ebp
  422e45:	mov    bl,0x43
  422e47:	xor    al,0x78
  422e49:	pop    edi
  422e4a:	xchg   esi,eax
  422e4b:	cdq    
  422e4c:	fdivr  st,st(6)
  422e4e:	cli    
  422e4f:	pop    ebp
  422e50:	sbb    DWORD PTR [edi],0x417e4d0c
  422e56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e57:	sti    
  422e58:	inc    esi
  422e59:	sbb    BYTE PTR [ebp-0x18695292],al
  422e5f:	into   
  422e60:	pop    ss
  422e61:	ret    
  422e62:	inc    ecx
  422e63:	js     0x422e3e
  422e65:	test   DWORD PTR [ebx+0x411d062e],0xb28a67a
  422e6f:	fbstp  TBYTE PTR ds:0xc9c71be5
  422e75:	fsubr  DWORD PTR [edi-0x692a69a7]
  422e7b:	pop    eax
  422e7c:	jge    0x422ed7
  422e7e:	jmp    0xcfee:0x4ac38e23
  422e85:	sbb    bl,BYTE PTR [edi+0x2b]
  422e88:	je     0x422ec5
  422e8a:	js     0x422ea8
  422e8c:	push   ebp
  422e8d:	jmp    0x3e39:0xa6d4fba8
  422e94:	loop   0x422e3f
  422e96:	lds    edx,FWORD PTR [ebx-0x3b5c7cbe]
  422e9c:	sub    ecx,eax
  422e9e:	inc    edx
  422e9f:	ds retf 
  422ea1:	mov    ebx,ebp
  422ea3:	xchg   DWORD PTR [eax],ecx
  422ea5:	cmp    BYTE PTR [ecx+0x78],dh
  422ea8:	inc    ecx
  422ea9:	dec    esp
  422eaa:	mov    edi,0xc258724c
  422eaf:	lea    edx,[ebx+0x3f31fce5]
  422eb5:	ja     0x422e8c
  422eb7:	adc    eax,0x893a756f
  422ebc:	sbb    DWORD PTR gs:[edi+0x34f53469],esi
  422ec3:	cwde   
  422ec4:	xor    al,0xee
  422ec6:	mov    esp,0xdbec3143
  422ecb:	lods   eax,DWORD PTR ds:[esi]
  422ecc:	daa    
  422ecd:	pop    ds
  422ece:	jo     0x422e9f
  422ed0:	mov    BYTE PTR ds:[ebx],cl
  422ed3:	call   0x14d7ec2c
  422ed8:	hlt    
  422ed9:	lods   al,BYTE PTR ds:[esi]
  422eda:	dec    edx
  422edb:	or     edx,DWORD PTR [eax+0x56]
  422ede:	xor    ah,BYTE PTR [ebx-0x63]
  422ee1:	inc    ebx
  422ee2:	cld    
  422ee3:	call   0x5116a12e
  422ee8:	fwait
  422ee9:	mov    cl,0x77
  422eeb:	add    ecx,DWORD PTR [ebx-0x68cea650]
  422ef1:	imul   esp,eax,0x79
  422ef4:	mov    ebx,0x445e0e7
  422ef9:	jnp    0x422f78
  422efb:	ds call 0xe6c2:0x3c717894
  422f03:	lods   eax,DWORD PTR ds:[esi]
  422f04:	mov    esp,0xeeea94bc
  422f09:	mov    bl,0x55
  422f0b:	das    
  422f0c:	mov    ecx,0x5af0b7d9
  422f11:	out    0x43,al
  422f13:	mov    cl,0x8f
  422f15:	iret   
  422f16:	loopne 0x422f5f
  422f18:	lods   al,BYTE PTR ds:[esi]
  422f19:	loope  0x422ebb
  422f1b:	sbb    DWORD PTR [ebp+0xd44813],esi
  422f21:	imul   edi,DWORD PTR [ebx-0x4afebc38],0xffffffe3
  422f28:	jno    0x422f73
  422f2a:	in     al,dx
  422f2b:	ret    0xf1f7
  422f2e:	jae    0x422ee1
  422f30:	pop    edx
  422f31:	pop    ss
  422f32:	test   eax,0xc52dcad4
  422f37:	or     eax,0x5553f717
  422f3c:	js     0x422f6c
  422f3e:	sbb    al,0x44
  422f40:	xchg   ecx,eax
  422f41:	xor    dh,BYTE PTR [edi-0x173376aa]
  422f47:	test   eax,0x20e72338
  422f4c:	aas    
  422f4d:	cmp    bh,BYTE PTR [eax]
  422f4f:	mov    dh,0x39
  422f51:	addr16 inc esi
  422f53:	inc    esp
  422f54:	div    BYTE PTR [edi+edi*1+0x267710ca]
  422f5b:	addr16 lahf 
  422f5d:	inc    esp
  422f5e:	jno    0x422f14
  422f60:	mov    ebx,0x2b5c06a2
  422f65:	(bad)
  422f68:	mov    al,0xf9
  422f6a:	mov    bh,BYTE PTR [esi-0x10]
  422f6d:	pop    ebp
  422f6e:	and    eax,0x86481737
  422f73:	mov    edx,0x659e5a8e
  422f78:	call   0x1c62eb92
  422f7d:	shl    BYTE PTR [ecx+0x1f46c24a],0xdd
  422f84:	loop   0x422feb
  422f86:	jnp    0x422f28
  422f88:	mov    cl,0xaa
  422f8a:	mov    ecx,0x3a651eb8
  422f8f:	cs push ebx
  422f91:	sti    
  422f92:	aam    0x57
  422f94:	fs dec ebp
  422f96:	dec    edx
  422f97:	loope  0x422f9f
  422f99:	or     eax,0xe6d351ba
  422f9e:	mov    bl,0x49
  422fa0:	outs   dx,BYTE PTR ds:[esi]
  422fa1:	pushf  
  422fa2:	mov    dh,0x70
  422fa4:	sbb    ah,BYTE PTR [eax+ecx*4-0x15]
  422fa8:	jne    0x422fda
  422faa:	imul   ebx,DWORD PTR [esi+0x3a],0x7a92df40
  422fb1:	ret    
  422fb2:	sbb    bl,BYTE PTR [ebp-0x6a577761]
  422fb8:	mov    cl,0x4a
  422fba:	das    
  422fbb:	cmp    bh,dh
  422fbd:	sub    al,0x94
  422fbf:	retf   
  422fc0:	inc    DWORD PTR ds:0xe7667c83
  422fc6:	xchg   ebx,eax
  422fc7:	and    al,bl
  422fc9:	das    
  422fca:	imul   edx,DWORD PTR [esp+ecx*8+0x43efc3f2],0xffffff94
  422fd2:	sub    ebp,DWORD PTR [edx+0x53]
  422fd5:	call   0xcd64:0x6fbb5619
  422fdc:	sbb    BYTE PTR [edi+0x0],bl
  422fe2:	cvtdq2ps xmm0,XMMWORD PTR [esi+edx*1+0x5b9fdfd4]
  422fea:	dec    ebp
  422feb:	sar    ebx,cl
  422fed:	adc    ebp,DWORD PTR [edi+0x75f90ae3]
  422ff3:	test   eax,0x4f40001
  422ff8:	add    BYTE PTR [eax],al
  422ffa:	add    eax,0xde25b3af
  422fff:	cmp    BYTE PTR ds:0x6e90a2ed,0x7f
  423006:	icebp  
  423007:	cmp    cl,BYTE PTR ds:0xfe71c46d
  42300d:	loop   0x422fe7
  42300f:	jg     0x42300c
  423011:	inc    esi
  423012:	pop    edx
  423013:	xor    ah,bh
  423015:	xchg   esi,eax
  423016:	or     al,BYTE PTR [ecx-0x11]
  423019:	sub    BYTE PTR [edx+ebp*8],al
  42301c:	dec    esp
  42301d:	xor    ecx,edi
  42301f:	xchg   ebx,eax
  423020:	xchg   al,dh
  423022:	out    0x32,al
  423024:	mov    ecx,0x6c9d22dc
  423029:	mov    esp,0xc0d8608e
  42302e:	stc    
  42302f:	inc    eax
  423030:	adc    DWORD PTR [ebx+0x55aedb40],0xffffffb5
  423037:	mov    bl,0x50
  423039:	daa    
  42303a:	jmp    esp
  42303c:	push   edi
  42303d:	out    dx,al
  42303e:	add    cl,ah
  423040:	cli    
  423041:	pusha  
  423042:	neg    BYTE PTR [edi+0x2afe9bab]
  423048:	lods   eax,DWORD PTR ds:[esi]
  423049:	mov    bh,0xee
  42304b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42304c:	fcom   DWORD PTR [edx+0x23]
  42304f:	mov    al,ds:0xd66b3472
  423054:	fild   WORD PTR [edx]
  423056:	xchg   ebx,eax
  423057:	ins    BYTE PTR es:[edi],dx
  423058:	call   0xa882d201
  42305d:	cs (bad) 
  42305f:	adc    bl,dh
  423061:	or     BYTE PTR [eax+0x2c509179],0x3b
  423068:	in     al,dx
  423069:	adc    eax,0x4001a9c6
  42306e:	gs lahf 
  423070:	scas   eax,DWORD PTR es:[edi]
  423071:	sbb    DWORD PTR [ecx+0xe],0xc89a3cc2
  423078:	xchg   esi,eax
  423079:	mov    esi,DWORD PTR [ecx+0x77]
  42307c:	inc    ecx
  42307d:	pop    ds
  42307e:	or     DWORD PTR ds:0x3f8ac9e9,0x34
  423085:	mov    ch,0xf0
  423087:	call   0xae74476b
  42308c:	dec    ecx
  42308d:	dec    ecx
  42308e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42308f:	dec    ebp
  423090:	dec    ebp
  423091:	jmp    0x423108
  423093:	add    esp,DWORD PTR [ecx+ebp*8+0x4a0d4a8e]
  42309a:	mov    WORD PTR [ebx],fs
  42309c:	sti    
  42309d:	popf   
  42309e:	push   es
  42309f:	popa   
  4230a0:	packssdw mm4,QWORD PTR [bp-0x4a]
  4230a5:	hlt    
  4230a6:	xchg   edx,eax
  4230a7:	loopne 0x4230e5
  4230a9:	rol    ecx,1
  4230ab:	pop    esp
  4230ac:	pop    edi
  4230ad:	mov    edi,0x3d03258a
  4230b2:	cmp    edi,ebx
  4230b4:	mov    DWORD PTR [ebx],0x409922bd
  4230ba:	ins    DWORD PTR es:[edi],dx
  4230bb:	enter  0xa1ec,0xa2
  4230bf:	(bad)  
  4230c0:	repnz mov dl,0xc9
  4230c3:	add    ah,dh
  4230c5:	mov    ecx,DWORD PTR [esi+esi*1-0x172394e0]
  4230cc:	aam    0xbd
  4230ce:	jmp    0x4230a6
  4230d0:	jns    0x4230f7
  4230d2:	sub    esi,DWORD PTR [edx]
  4230d4:	(bad)  
  4230d5:	(bad)  
  4230d6:	adc    al,BYTE PTR [esi-0x19c3115d]
  4230dc:	popf   
  4230dd:	mov    ch,BYTE PTR cs:[ecx+0x63]
  4230e1:	ret    
  4230e2:	or     eax,0x65681591
  4230e7:	mov    edx,DWORD PTR [ebp+0x44cd2eca]
  4230ed:	mov    edi,DWORD PTR [ecx-0x2008e93f]
  4230f3:	jge    0x42311f
  4230f5:	fdiv   QWORD PTR [ebp-0x27]
  4230f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230f9:	push   ss
  4230fa:	icebp  
  4230fb:	into   
  4230fc:	xchg   ebp,eax
  4230fd:	and    eax,0x3d3e7a33
  423102:	ja     0x4230a1
  423104:	fsub   st(5),st
  423106:	pop    ss
  423107:	in     al,0x99
  423109:	scas   eax,DWORD PTR es:[edi]
  42310a:	inc    esp
  42310b:	jp     0x4230d1
  42310d:	jle    0x4230fb
  42310f:	ja     0x4230a2
  423111:	mov    dh,0x12
  423113:	adc    eax,0x1b3c956d
  423118:	cld    
  423119:	pop    esi
  42311a:	repz mov dh,0x19
  42311d:	mov    ebp,0x9b845702
  423122:	inc    ebp
  423123:	mov    ebp,DWORD PTR [esi+0x73]
  423126:	pop    es
  423127:	fild   DWORD PTR [ecx]
  423129:	(bad)  [ecx]
  42312b:	jecxz  0x423100
  42312d:	iret   
  42312e:	rcl    DWORD PTR [esi+0x13359e71],cl
  423134:	cld    
  423135:	and    ebx,esi
  423137:	sahf   
  423138:	xchg   edx,eax
  423139:	scas   al,BYTE PTR es:[edi]
  42313a:	adc    edx,esp
  42313c:	addr16 dec ecx
  42313e:	pop    ebp
  42313f:	ds mov ebx,0x8746cc24
  423145:	add    BYTE PTR [esi+0x5ac211d0],ch
  42314b:	add    DWORD PTR [edx],eax
  42314d:	stc    
  42314e:	int    0xeb
  423150:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423151:	sbb    eax,eax
  423153:	inc    ebx
  423154:	push   ebp
  423155:	popa   
  423156:	nop
  423157:	pop    ebx
  423158:	out    dx,al
  423159:	and    ch,BYTE PTR [ebp-0x2ef314b1]
  42315f:	dec    edi
  423160:	lahf   
  423161:	cld    
  423162:	mov    ch,BYTE PTR [ecx]
  423164:	and    DWORD PTR [ebx+ebp*1+0x2c],0xa5c27931
  42316c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42316d:	scas   al,BYTE PTR es:[edi]
  42316e:	push   cs
  42316f:	aas    
  423170:	(bad)  
  423173:	sub    DWORD PTR ds:0xc20661e5,ebp
  423179:	xchg   esp,eax
  42317a:	popf   
  42317b:	or     al,0x7c
  42317d:	bswap  esi
  42317f:	jecxz  0x42317e
  423181:	(bad)  
  423182:	jno    0x423151
  423184:	lods   eax,DWORD PTR ds:[esi]
  423185:	or     BYTE PTR es:[ecx+eax*1],ah
  423189:	add    DWORD PTR [esi+edx*1+0x4b6522fd],edi
  423190:	cmc    
  423191:	or     BYTE PTR [edx+0x27],ah
  423194:	into   
  423195:	into   
  423196:	and    eax,0x78c6e190
  42319b:	sbb    al,0xda
  42319d:	cmp    ch,bh
  42319f:	mov    al,0x92
  4231a1:	ins    BYTE PTR es:[edi],dx
  4231a2:	js     0x423189
  4231a4:	dec    edi
  4231a5:	in     eax,0xf2
  4231a7:	fisub  DWORD PTR [ebx+0x663bde22]
  4231ad:	jmp    0xff439c7b
  4231b2:	dec    BYTE PTR [eax]
  4231b4:	dec    ecx
  4231b5:	fcomp  DWORD PTR [edi-0x127b39d8]
  4231bb:	hlt    
  4231bc:	mov    dh,bh
  4231be:	int3   
  4231bf:	popf   
  4231c0:	pmuludq mm0,QWORD PTR [esi-0x4]
  4231c4:	mov    WORD PTR [edx-0x5212e47a],fs
  4231ca:	xchg   edx,eax
  4231cb:	sar    DWORD PTR [ebp+0x783de02a],0x48
  4231d2:	adc    BYTE PTR [esi-0x38cfff0],dl
  4231d8:	fild   WORD PTR ds:0x9a9e7315
  4231de:	ret    
  4231df:	cli    
  4231e0:	mov    al,0x3d
  4231e2:	sub    DWORD PTR [edx+0x25e1acc0],ebx
  4231e8:	or     al,0xa4
  4231ea:	jecxz  0x4231e4
  4231ec:	pop    es
  4231ed:	repz retf 
  4231ef:	pop    edi
  4231f0:	lock jbe 0x4231d4
  4231f3:	int    0x31
  4231f5:	adc    al,0x3
  4231f7:	lods   al,BYTE PTR ds:[esi]
  4231f8:	ins    BYTE PTR es:[edi],dx
  4231f9:	mov    esi,0x6fc571a4
  4231fe:	repz inc ecx
  423200:	or     al,0x6d
  423202:	(bad)  
  423203:	(bad)  
  423204:	call   DWORD PTR [eax+0x21b26352]
  42320a:	inc    ebx
  42320b:	out    dx,al
  42320c:	pushf  
  42320d:	cwde   
  42320e:	xchg   edx,eax
  42320f:	pop    ecx
  423210:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423211:	cmc    
  423212:	cs icebp 
  423214:	stc    
  423215:	push   ds
  423216:	mov    DWORD PTR [edi+0x1fb8dc9a],edi
  42321c:	loop   0x4231a3
  42321e:	jl     0x4231b2
  423220:	jmp    0x1a99:0x115dbead
  423227:	jge    0x423227
  423229:	or     BYTE PTR [ecx],dl
  42322b:	rol    bl,0x6b
  42322e:	cmp    ebx,0xffffffe5
  423231:	mov    esp,0xc8d6791a
  423236:	mov    dh,0x4d
  423238:	ss adc eax,0xa0049f52
  42323e:	retf   0x3c66
  423241:	mov    esp,DWORD PTR [esi]
  423243:	fild   QWORD PTR [ebp+0x28]
  423246:	fwait
  423247:	loopne 0x423254
  423249:	dec    eax
  42324a:	clc    
  42324b:	cli    
  42324c:	pop    esp
  42324d:	xor    DWORD PTR [ebx-0x2fc50ea7],edi
  423253:	sub    al,0x67
  423255:	jl     0x423216
  423257:	pop    esi
  423258:	push   ecx
  423259:	outs   dx,BYTE PTR ds:[esi]
  42325a:	mov    bl,0x11
  42325c:	mov    esp,0x6b2f7be0
  423261:	jge    0x4232c6
  423263:	xchg   edx,eax
  423264:	mov    edx,0x43911c52
  423269:	inc    ebx
  42326a:	and    ah,BYTE PTR ds:0x79b5f399
  423270:	inc    esp
  423271:	daa    
  423272:	mov    ds:0xd28b3bcc,eax
  423277:	and    ebp,edx
  423279:	mov    ah,0x9d
  42327b:	xor    ebp,0x4
  42327e:	or     al,0x48
  423280:	bound  edi,QWORD PTR [ebp+0x72c06873]
  423286:	jl     0x42327d
  423288:	push   0x209fc15
  42328d:	fmulp  st(2),st
  42328f:	(bad)  
  423290:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423291:	xor    edx,DWORD PTR [edx-0x1d4604d2]
  423297:	lock fwait
  423299:	in     al,dx
  42329a:	adc    eax,edx
  42329c:	or     al,0xfa
  42329e:	fstp   TBYTE PTR [eax+edx*2]
  4232a1:	imul   ebp,DWORD PTR [ebx+0x7],0x79271ff9
  4232a8:	sbb    al,0x28
  4232aa:	push   edi
  4232ab:	mov    BYTE PTR [edi+ebp*2-0x7e],ah
  4232af:	(bad)  
  4232b0:	stos   BYTE PTR es:[edi],al
  4232b1:	call   0xf915:0x7532c782
  4232b8:	mov    edx,0x13bc5cc8
  4232bd:	push   ss
  4232be:	and    DWORD PTR [edx],0xffffffa7
  4232c1:	adc    DWORD PTR [eax],eax
  4232c3:	xor    eax,0xfd60d640
  4232c8:	inc    edx
  4232c9:	popf   
  4232ca:	jbe    0x423331
  4232cc:	ins    BYTE PTR es:[edi],dx
  4232cd:	jg     0x423330
  4232cf:	iret   
  4232d0:	sbb    dh,BYTE PTR [edx+0x68]
  4232d3:	xchg   dh,bh
  4232d5:	mov    eax,0x47d175f5
  4232da:	sub    BYTE PTR [eax],bl
  4232dc:	(bad)  
  4232dd:	ss jle 0x4232a4
  4232e0:	bnd jle 0x4232a6
  4232e3:	jnp    0x42334f
  4232e5:	add    eax,0x6cc0d4ed
  4232ea:	test   DWORD PTR [edi-0x7245ed27],esi
  4232f0:	jns    0x423336
  4232f2:	into   
  4232f3:	mov    ebx,0x39d314ab
  4232f8:	or     eax,0x8ddd40f2
  4232fd:	pop    edx
  4232fe:	repnz pushf 
  423300:	mov    edi,0xa879a0ba
  423305:	aad    0x45
  423307:	popa   
  423308:	push   ebp
  423309:	sti    
  42330a:	pop    ds
  42330b:	dec    edi
  42330c:	cmp    eax,0xf68e0a71
  423311:	into   
  423312:	push   edi
  423313:	cmp    al,0x7b
  423315:	sbb    DWORD PTR [eax],ecx
  423317:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423318:	add    al,0x1d
  42331a:	or     edi,ebx
  42331c:	or     ecx,edx
  42331e:	or     dl,BYTE PTR [ebx+0x445d133f]
  423324:	push   0xe39b80b2
  423329:	mov    ebp,0x83c55b22
  42332e:	(bad)  
  42332f:	jmp    0x5509:0x40736081
  423336:	mov    BYTE PTR [ebx],bh
  423338:	test   eax,0xa5a86b7d
  42333d:	js     0x4233a6
  42333f:	or     BYTE PTR [esi-0x22],0x9f
  423343:	retf   0x54dc
  423346:	fs pusha 
  423348:	mov    eax,ds:0x5c82ce7
  42334d:	inc    ebx
  42334e:	int3   
  42334f:	aaa    
  423350:	test   al,0x6d
  423352:	dec    ebp
  423353:	fisub  WORD PTR [ecx-0x63]
  423356:	cmp    eax,DWORD PTR [edx+0xc919c9a]
  42335c:	in     al,dx
  42335d:	sub    eax,0x4dcec09f
  423362:	jae    0x4233a8
  423364:	mov    dl,0x36
  423366:	dec    ebx
  423367:	ss idiv esi
  42336a:	call   0x944c:0x708d862e
  423371:	jle    0x423342
  423373:	jg     0x423345
  423375:	xor    DWORD PTR [esp+esi*2-0x3a1fae87],0xb91d7c02
  423380:	or     dl,bh
  423382:	(bad)  
  423383:	cli    
  423384:	xor    BYTE PTR [edi-0x538472b2],dl
  42338a:	fwait
  42338b:	mov    edi,0xf50bb8c9
  423390:	adc    eax,0x10dc462b
  423395:	and    al,0x6b
  423397:	sbb    al,0x60
  423399:	test   al,0xe0
  42339b:	and    eax,0x5b6bd77f
  4233a0:	cmp    ebp,DWORD PTR [edx]
  4233a2:	cmp    DWORD PTR [eax-0xb],0xef20f23b
  4233a9:	jp     0x4233d4
  4233ab:	int3   
  4233ac:	call   0x93ed:0x3c649604
  4233b3:	ja     0x42336a
  4233b5:	mov    BYTE PTR [edi+0x2afef504],ch
  4233bb:	sbb    al,0x4
  4233bd:	jecxz  0x4233ee
  4233bf:	push   ss
  4233c0:	test   al,0x2f
  4233c2:	push   ecx
  4233c3:	jae    0x4233d0
  4233c5:	rcr    DWORD PTR [ebp+0x61],1
  4233c8:	xchg   ecx,eax
  4233c9:	loope  0x423431
  4233cb:	cmp    ch,ch
  4233cd:	(bad)  
  4233ce:	in     eax,dx
  4233cf:	imul   edi,DWORD PTR [edx],0x65a1c4ca
  4233d5:	je     0x423421
  4233d7:	int3   
  4233d8:	mov    ds:0x3c30ad,al
  4233dd:	inc    esi
  4233de:	dec    esi
  4233df:	sti    
  4233e0:	xchg   esp,eax
  4233e1:	mov    ecx,0x1900116
  4233e6:	in     al,0x14
  4233e8:	sub    DWORD PTR ds:0x511219,0x21
  4233ef:	mov    eax,ds:0xfed61b5a
  4233f4:	pop    ds
  4233f5:	jp     0x42344d
  4233f7:	xchg   edx,esi
  4233f9:	cli    
  4233fa:	movups XMMWORD PTR [ecx-0x52],xmm7
  4233fe:	xor    bl,BYTE PTR [edi+esi*2]
  423401:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423402:	pop    ebp
  423403:	pop    ss
  423404:	cld    
  423405:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423406:	xlat   BYTE PTR ds:[ebx]
  423407:	fcom   QWORD PTR [esi-0x67]
  42340a:	pop    eax
  42340b:	push   es
  42340c:	gs sti 
  42340e:	xchg   ebp,eax
  42340f:	out    dx,al
  423410:	pop    ss
  423411:	cmp    al,0x64
  423413:	mov    dl,bh
  423415:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423416:	jns    0x42341c
  423418:	mov    al,0x62
  42341a:	loopne 0x4233f3
  42341c:	pop    ebp
  42341d:	pop    eax
  42341e:	sbb    cl,ah
  423420:	jns    0x423414
  423422:	mov    bl,0x98
  423424:	ror    edx,1
  423426:	push   eax
  423427:	push   ecx
  423428:	mul    edi
  42342a:	in     al,0xbc
  42342c:	loope  0x42347d
  42342e:	sub    DWORD PTR [ecx],edx
  423430:	iret   
  423431:	dec    edx
  423432:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423433:	daa    
  423434:	mov    ch,BYTE PTR [ebp-0x16]
  423437:	jg     0x423479
  423439:	in     eax,0x79
  42343b:	cwde   
  42343c:	inc    eax
  42343d:	ins    DWORD PTR es:[edi],dx
  42343e:	pop    esi
  42343f:	stc    
  423440:	adc    dl,BYTE PTR [edx-0x68]
  423443:	mov    cl,0x46
  423445:	xor    al,0x8d
  423447:	outs   dx,BYTE PTR ds:[esi]
  423448:	jae    0x423448
  42344a:	cmp    eax,0x93cb5326
  42344f:	out    dx,eax
  423450:	cmp    dh,0xbc
  423453:	xor    al,dl
  423455:	(bad)  
  423456:	out    dx,al
  423457:	inc    eax
  423458:	pop    ss
  423459:	call   0x9d4b:0x25869c8a
  423460:	mov    edx,DWORD PTR [eax+0x3dfc3cc1]
  423466:	das    
  423467:	imul   esi,edi,0xd4401f68
  42346d:	imul   eax,DWORD PTR [edi],0xb15799e8
  423473:	push   es
  423474:	fst    QWORD PTR [eax+0x3c1800]
  42347a:	les    edx,FWORD PTR [esi-0x6]
  42347d:	push   DWORD PTR ds:0x893942d9
  423483:	add    esi,ebp
  423485:	fst    st(7)
  423487:	repz xchg ebx,eax
  423489:	and    al,0x47
  42348b:	mov    dl,0x4
  42348d:	cmp    cl,cl
  42348f:	sbb    al,0xc1
  423491:	(bad)  [ebp-0x2833ec72]
  423497:	fisttp QWORD PTR [ecx]
  423499:	mov    ds:0x56a6d1db,al
  42349e:	pop    edi
  42349f:	cmp    BYTE PTR ds:0xc49068a9,0xa1
  4234a6:	inc    ebx
  4234a7:	ins    BYTE PTR es:[edi],dx
  4234a8:	xor    ecx,DWORD PTR [esi-0x4f]
  4234ab:	mov    al,ds:0x1d5c0780
  4234b0:	add    BYTE PTR [ecx],bh
  4234b2:	mov    esp,0x595b9ce1
  4234b7:	les    ebp,FWORD PTR [ecx]
  4234b9:	je     0x423442
  4234bb:	into   
  4234bc:	mov    ah,0x7c
  4234be:	pop    es
  4234bf:	(bad)  
  4234c0:	mov    eax,0x6a788abf
  4234c5:	test   edi,0x4f8fd14b
  4234cb:	(bad)  
  4234cc:	hlt    
  4234cd:	add    cl,BYTE PTR [esi+0x5a82bd04]
  4234d3:	sbb    eax,0x44745b6a
  4234d8:	daa    
  4234d9:	popa   
  4234da:	cmp    edx,edi
  4234dc:	jl     0x423520
  4234de:	sub    al,0x40
  4234e0:	xchg   ebx,eax
  4234e1:	(bad)  
  4234e2:	test   eax,0x927e80f5
  4234e7:	test   esp,0x7547e0da
  4234ed:	push   0x0
  4234f2:	dec    ecx
  4234f3:	mov    ds:0xf6ffd655,eax
  4234f8:	retf   
  4234f9:	mov    edi,0x3f1d56c2
  4234fe:	fistp  DWORD PTR [ebp+0x3d]
  423501:	xor    BYTE PTR [ecx-0x52],ch
  423504:	add    DWORD PTR [eax],eax
  423506:	hlt    
  423507:	add    al,0x0
  423509:	add    ah,cl
  42350b:	out    dx,eax
  42350c:	adc    bh,BYTE PTR [edi+ecx*2+0x41db0cc8]
  423513:	fistp  QWORD PTR [esi+0x28ec3b6c]
  423519:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42351a:	hlt    
  42351b:	xor    DWORD PTR [ebx],edi
  42351d:	mov    cl,0x14
  42351f:	mov    ebx,0x9b2d04c3
  423524:	jl     0x423575
  423526:	rol    bl,cl
  423528:	inc    esi
  423529:	test   DWORD PTR [edi+0xf],esp
  42352c:	mov    eax,ds:0xcba4723a
  423531:	mov    cl,0xf
  423533:	pop    esi
  423534:	xchg   BYTE PTR [ecx],ah
  423536:	lods   al,BYTE PTR ds:[esi]
  423537:	shl    DWORD PTR [edx-0x6c7e6977],1
  42353d:	aas    
  42353e:	loopne 0x42353a
  423540:	ins    BYTE PTR es:[edi],dx
  423541:	jae    0x42359e
  423543:	mov    dl,0xc8
  423545:	adc    BYTE PTR [edx+eax*2],dh
  423548:	mov    ebp,0xa2310824
  42354d:	dec    eax
  42354e:	fiadd  WORD PTR [edx+ebp*1-0x6820a5d4]
  423555:	cmp    BYTE PTR [ebx+ebp*1-0x23],dh
  423559:	dec    ebx
  42355a:	mov    ebp,0x4dcd5356
  42355f:	stos   DWORD PTR es:[edi],eax
  423560:	mov    ds:0xafed2a38,eax
  423565:	or     BYTE PTR [ebx],bl
  423567:	lds    esp,FWORD PTR [ebx+0xbaa3e71]
  42356d:	(bad)  
  42356e:	psubw  mm6,QWORD PTR [eax-0x40]
  423572:	jg     0x42358e
  423574:	std    
  423575:	ja     0x4235a2
  423577:	(bad)  
  423578:	iret   
  423579:	adc    DWORD PTR [eax-0x516ef17f],eax
  42357f:	mov    ds:0xc0947e37,eax
  423584:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423585:	pop    eax
  423586:	leave  
  423587:	lahf   
  423588:	cmp    edi,DWORD PTR [ebp-0x4a]
  42358b:	xchg   esp,eax
  42358c:	sub    bh,0x11
  42358f:	xchg   ecx,eax
  423590:	pop    esi
  423591:	inc    esi
  423592:	pop    ss
  423593:	rol    DWORD PTR [edx+0x12],cl
  423596:	or     bl,dh
  423598:	mov    ebp,0xe508bcee
  42359d:	(bad)  
  42359e:	xchg   esp,eax
  42359f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235a0:	out    0xd1,eax
  4235a2:	xchg   edi,eax
  4235a3:	adc    cx,si
  4235a6:	mov    dl,0xec
  4235a8:	xor    dl,BYTE PTR [ebp+esi*8+0x7]
  4235ac:	dec    ebx
  4235ad:	jp     0x423609
  4235af:	adc    eax,0x301a2a3c
  4235b4:	cmc    
  4235b5:	out    dx,eax
  4235b6:	push   edx
  4235b7:	in     eax,0xe3
  4235b9:	gs (bad) 
  4235bb:	sub    al,BYTE PTR [edi+0x46]
  4235be:	push   ebp
  4235bf:	push   edi
  4235c0:	add    cl,BYTE PTR [edx-0x50fc2a97]
  4235c6:	or     ebp,0x2b
  4235c9:	nop
  4235ca:	lds    esi,FWORD PTR [ecx-0x3d0dcd5a]
  4235d0:	inc    esp
  4235d1:	jo     0x423575
  4235d3:	js     0x423574
  4235d5:	in     al,0xc5
  4235d7:	xor    cl,BYTE PTR [ebp-0x12]
  4235da:	mov    ecx,DWORD PTR [eax]
  4235dc:	sub    al,dl
  4235de:	xor    bl,BYTE PTR [esp+edi*4-0x6a5811eb]
  4235e5:	jecxz  0x423588
  4235e7:	cld    
  4235e8:	cld    
  4235e9:	dec    edi
  4235ea:	ins    DWORD PTR es:[edi],dx
  4235eb:	jne    0x4235a2
  4235ed:	inc    ecx
  4235ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4235ef:	mov    ecx,0x4ae19e2a
  4235f4:	into   
  4235f5:	aad    0xfb
  4235f7:	push   edi
  4235f8:	sub    bl,BYTE PTR [ecx]
  4235fa:	push   0xffffff9d
  4235fc:	repnz dec ecx
  4235fe:	int    0xde
  423600:	xor    ah,dl
  423602:	fs inc ecx
  423604:	mov    ds:0xecb24605,eax
  423609:	or     ecx,ebx
  42360b:	loop   0x423599
  42360d:	pop    edi
  42360e:	adc    al,0x4
  423610:	sbb    ebp,DWORD PTR [edx]
  423612:	xor    edx,ebp
  423614:	fst    DWORD PTR [ebp+0x5f]
  423617:	add    ebp,DWORD PTR [ebx+0x61]
  42361a:	stos   BYTE PTR es:[edi],al
  42361b:	pop    es
  42361c:	adc    eax,0x4024d136
  423621:	ret    0x33f6
  423624:	(bad)  
  423625:	(bad)  
  423626:	fild   DWORD PTR [edx-0x42]
  423629:	shl    dl,1
  42362b:	xor    DWORD PTR [edx-0x26],0x3d
  42362f:	push   cs
  423630:	or     al,0x89
  423632:	sub    esp,ecx
  423634:	inc    edx
  423635:	xor    esi,DWORD PTR [ebp-0x33]
  423638:	mov    dl,0x95
  42363a:	les    esi,FWORD PTR [esi-0x4c]
  42363d:	in     al,dx
  42363e:	xor    al,0x23
  423640:	aad    0x84
  423642:	pop    esp
  423643:	xchg   BYTE PTR [ebx+0x15],al
  423646:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423647:	call   0x2c21:0x692b1279
  42364e:	or     eax,0xa437e491
  423653:	mov    eax,ds:0x2c17c48d
  423658:	pop    eax
  423659:	scas   eax,DWORD PTR es:[edi]
  42365a:	rcr    DWORD PTR [ecx],0xef
  42365d:	fcmovne st,st(4)
  42365f:	pop    ebp
  423660:	mov    dl,0xdd
  423662:	pusha  
  423663:	int    0xbc
  423665:	cmp    edx,DWORD PTR [edx-0x61]
  423668:	mov    BYTE PTR [edx-0x5f],dl
  42366b:	sti    
  42366c:	test   ecx,ebp
  42366e:	xor    DWORD PTR fs:[esi-0x42ae12fb],ebx
  423675:	push   ss
  423676:	jmp    0x305266ca
  42367b:	push   ecx
  42367c:	dec    esi
  42367d:	out    0xae,eax
  42367f:	inc    ebx
  423680:	xchg   BYTE PTR [esi+0x33a6ea7c],bh
  423686:	fwait
  423687:	xchg   edx,eax
  423688:	fbstp  TBYTE PTR [eax+0x7a]
  42368b:	imul   edi,DWORD PTR [ebp-0x21],0x19
  42368f:	xchg   BYTE PTR [edi-0x183425b2],ah
  423695:	shl    DWORD PTR [eax+0x3e],cl
  423698:	inc    edi
  423699:	sub    BYTE PTR [ebx+0x44afdfa],ch
  42369f:	push   DWORD PTR [ebx+0x15]
  4236a2:	pushf  
  4236a3:	or     BYTE PTR [ebx],cl
  4236a5:	or     al,0xc6
  4236a7:	mov    ch,0x55
  4236a9:	jnp    0x42362b
  4236ab:	xchg   edx,eax
  4236ac:	mov    al,ds:0xe0a481db
  4236b1:	ret    
  4236b2:	(bad)  
  4236b3:	adc    DWORD PTR [ebx],0x469d02bd
  4236b9:	mov    eax,0x46bf1845
  4236be:	rcr    eax,1
  4236c0:	sbb    eax,0x997216b6
  4236c5:	jmp    0xe1fc0945
  4236ca:	sbb    BYTE PTR [ebx],dh
  4236cc:	pop    es
  4236cd:	clc    
  4236ce:	adc    bh,BYTE PTR [edx+0x41]
  4236d1:	mov    edx,0x3b92a37b
  4236d6:	lahf   
  4236d7:	mov    BYTE PTR [ebx+0x58],al
  4236da:	fisubr WORD PTR [esp+edi*4+0x3e]
  4236de:	inc    ebp
  4236df:	jp     0x4236b0
  4236e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4236e2:	jg     0x423684
  4236e4:	mov    ebp,0x73805f31
  4236e9:	or     BYTE PTR [esi-0x5527e6cd],bl
  4236ef:	or     bh,cl
  4236f1:	inc    ebp
  4236f2:	cwde   
  4236f3:	rcr    DWORD PTR [edx+0x54],cl
  4236f6:	mov    ?,WORD PTR [ebp+0x62]
  4236f9:	and    DWORD PTR [ebx-0x79],0x5d63b503
  423700:	add    al,0x84
  423702:	xor    cl,al
  423704:	pop    edx
  423705:	cmp    eax,0xd581ec90
  42370a:	mov    edx,0x450b275c
  42370f:	retf   0x68ae
  423712:	mov    edi,edi
  423714:	sbb    esp,DWORD PTR [ebx-0x1f8fddad]
  42371a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42371b:	sbb    al,0xe
  42371d:	and    al,0xd1
  42371f:	jmp    0xb0f2dac4
  423724:	ins    BYTE PTR es:[edi],dx
  423725:	addr16 test al,0xc2
  423728:	ja     0x423723
  42372a:	fistp  WORD PTR [esi+0x6f]
  42372d:	ret    0x6c1
  423730:	lods   al,BYTE PTR ds:[esi]
  423731:	jecxz  0x4236d8
  423733:	sub    eax,0x728ac7dc
  423738:	mov    bl,0xb
  42373a:	scas   eax,DWORD PTR es:[edi]
  42373b:	cli    
  42373c:	adc    bl,dh
  42373e:	out    dx,al
  42373f:	rcl    BYTE PTR [edx-0x510bebcf],0xef
  423746:	nop
  423747:	cdq    
  423748:	(bad)  
  42374a:	mov    dh,0xaa
  42374c:	dec    esp
  42374d:	in     al,dx
  42374e:	inc    esp
  423750:	and    eax,0xffffff9a
  423753:	jmp    0x423723
  423755:	(bad)  [ecx+0x2f184ccb]
  42375b:	mov    ebp,0x9dfa0149
  423760:	or     ebp,ebx
  423762:	mov    dh,0x41
  423764:	mov    BYTE PTR [ebp-0x3e],dl
  423767:	cdq    
  423768:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423769:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42376a:	test   DWORD PTR [eax+0x20f59b4b],eax
  423770:	outs   dx,BYTE PTR ds:[esi]
  423771:	ret    0xa0a6
  423774:	hlt    
  423775:	and    al,0x86
  423777:	sub    al,BYTE PTR [ebp+0x3c]
  42377a:	pop    ebp
  42377b:	shl    cl,cl
  42377d:	les    edi,FWORD PTR [esi+0x78fd489a]
  423783:	pop    es
  423784:	adc    al,0xc6
  423786:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423787:	mov    BYTE PTR [esp+esi*1-0xa],ch
  42378b:	(bad)  
  42378c:	xchg   edi,eax
  42378d:	mov    fs,ebp
  42378f:	repz fbstp TBYTE PTR [edx+esi*1-0x5a829f20]
  423797:	mov    fs,WORD PTR [ebx+eiz*2+0x5]
  42379b:	add    esi,edi
  42379d:	scas   eax,DWORD PTR es:[edi]
  42379e:	or     bh,dh
  4237a0:	add    ah,BYTE PTR [edi+0x35]
  4237a3:	mov    BYTE PTR [esi],0x10
  4237a6:	adc    al,BYTE PTR es:[ecx]
  4237a9:	cwde   
  4237aa:	test   eax,0x6c8021f1
  4237af:	push   0x2c
  4237b1:	gs xor al,0xc
  4237b4:	test   al,0x79
  4237b6:	jns    0x4237c3
  4237b8:	jae    0x423836
  4237ba:	sbb    bh,dl
  4237bc:	jns    0x423817
  4237be:	imul   esi,DWORD PTR [ebx+ebp*4],0x224d8ec3
  4237c5:	cs inc edi
  4237c7:	jmp    0x508f5464
  4237cc:	jnp    0x423787
  4237ce:	(bad)  
  4237cf:	fiadd  DWORD PTR [ebx]
  4237d1:	adc    bl,BYTE PTR [esi+0x1e]
  4237d4:	dec    ebx
  4237d5:	jmp    0xad50:0x57996abe
  4237dc:	mov    ch,0x3a
  4237de:	fisubr WORD PTR [eax-0x3c99f316]
  4237e4:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4237e6:	lock inc ebx
  4237e8:	xor    al,0x1b
  4237ea:	test   DWORD PTR [ebx+edi*1-0x71],ebx
  4237ee:	and    edx,DWORD PTR [edi]
  4237f0:	xor    eax,0x3c9978bf
  4237f5:	lds    esp,FWORD PTR [edi-0xaeadd3c]
  4237fb:	out    dx,eax
  4237fc:	cmp    DWORD PTR [ecx],ebp
  4237fe:	dec    esp
  4237ff:	(bad)  
  423800:	in     eax,dx
  423801:	pop    edx
  423802:	cld    
  423803:	out    dx,al
  423804:	mov    ds:0x50632eca,eax
  423809:	lahf   
  42380a:	mov    eax,ds:0x64579217
  42380f:	fcomp  QWORD PTR [edx+eax*2]
  423812:	mov    ds:0xe3949c06,eax
  423817:	rcl    ebp,0x61
  42381a:	inc    edi
  42381b:	daa    
  42381c:	sub    esp,DWORD PTR [esi+0x289907c0]
  423822:	pop    esi
  423823:	jp     0x4237ba
  423825:	sbb    bl,BYTE PTR [esi]
  423827:	ret    
  423828:	bound  esp,QWORD PTR [edi]
  42382a:	xor    al,0x93
  42382c:	jae    0x423865
  42382e:	imul   edx,DWORD PTR [edx+0x4e04510e],0x5b
  423835:	(bad)  
  423836:	das    
  423837:	and    al,al
  423839:	mov    ebp,0xec0f94e2
  42383e:	cdq    
  42383f:	mov    ebp,0xcf4ac669
  423844:	loope  0x4237d5
  423846:	test   eax,0x17a0f545
  42384b:	cdq    
  42384c:	bound  edi,QWORD PTR [edi+0x61]
  42384f:	sbb    eax,0x5c7cadc3
  423854:	and    eax,0x7ca02b4d
  423859:	and    dl,BYTE PTR [edi]
  42385b:	adc    ecx,DWORD PTR [ebx+0x6787bbe8]
  423861:	ret    
  423862:	stc    
  423863:	and    dl,bh
  423865:	out    0x5c,eax
  423867:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423868:	outs   dx,DWORD PTR ds:[esi]
  423869:	jne    0x4237f9
  42386b:	stos   DWORD PTR es:[edi],eax
  42386c:	ds mov edx,0x3a8feb96
  423872:	gs inc esi
  423874:	mov    dh,0x86
  423876:	inc    edx
  423877:	test   al,0xe8
  423879:	in     al,0x17
  42387b:	mov    ds:0xe565bd4,eax
  423880:	xor    BYTE PTR [esp+edi*2-0x213ee730],bh
  423887:	cmp    eax,0x7364f65f
  42388c:	dec    esi
  42388d:	ds je  0x423884
  423890:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423891:	icebp  
  423892:	push   dx
  423894:	call   0x9699b9df
  423899:	cwde   
  42389a:	inc    ebx
  42389b:	fst    QWORD PTR [ecx+edi*1]
  42389e:	out    dx,eax
  42389f:	iret   
  4238a0:	in     eax,dx
  4238a1:	xchg   edx,eax
  4238a2:	imul   edi,esp,0x5f964c36
  4238a8:	mov    ebp,0xf4c66d4c
  4238ad:	ins    DWORD PTR es:[edi],dx
  4238ae:	push   edx
  4238af:	icebp  
  4238b0:	fidivr DWORD PTR [eax+0x448ae4d6]
  4238b6:	shr    DWORD PTR [esi-0x1dc25c0d],cl
  4238bc:	test   eax,0x6a2ce26c
  4238c1:	ja     0x423882
  4238c3:	outs   dx,BYTE PTR ds:[esi]
  4238c4:	mov    eax,ds:0x74e03cc8
  4238c9:	(bad)  
  4238ca:	cmp    bl,BYTE PTR [ecx+0x2d]
  4238cd:	push   ebp
  4238ce:	repz and ebx,DWORD PTR [eax-0x43]
  4238d2:	sbb    DWORD PTR [edi],0xd1cad72f
  4238d8:	sahf   
  4238d9:	mov    fs,WORD PTR [edx+0x69]
  4238dc:	xor    al,BYTE PTR [esi+eiz*4-0x2251a54e]
  4238e3:	adc    eax,0x481a5d4b
  4238e8:	mov    ch,BYTE PTR [eax]
  4238ea:	xor    al,0x96
  4238ec:	fs xor esp,ebx
  4238ef:	or     al,0xc0
  4238f1:	or     DWORD PTR [eax-0x74],esp
  4238f4:	inc    ebp
  4238f5:	psrlq  mm1,QWORD PTR [edi+0x38]
  4238f9:	sbb    al,0x6d
  4238fb:	dec    ebx
  4238fc:	inc    ecx
  4238fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4238fe:	mov    ch,BYTE PTR [ebx]
  423900:	push   0x4d
  423902:	test   BYTE PTR [eax+0x18],al
  423905:	push   es
  423906:	and    BYTE PTR [esp+ebp*1+0x29fe171d],ch
  42390d:	sub    eax,0x5b578a5c
  423912:	pusha  
  423913:	pop    ebp
  423914:	jecxz  0x423976
  423916:	pminsw mm5,mm6
  423919:	or     cl,cl
  42391b:	and    al,0x50
  42391d:	fistp  DWORD PTR [edx+edi*2-0x75]
  423921:	and    ch,cl
  423923:	xchg   DWORD PTR ss:[edx+0x52501e8e],ebp
  42392a:	mov    ecx,0x9a556178
  42392f:	add    al,0xd9
  423931:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423932:	mov    ebx,ebx
  423934:	stos   BYTE PTR es:[edi],al
  423935:	int3   
  423936:	xor    ebx,0xfffffff9
  423939:	jge    0x423965
  42393b:	xchg   ebx,eax
  42393c:	xor    DWORD PTR [edi],esi
  42393e:	fstp   st(3)
  423940:	fcmove st,st(3)
  423942:	push   ebp
  423943:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423944:	pusha  
  423945:	and    BYTE PTR [edx-0x2338989d],dl
  42394b:	frstor [eax+0x2]
  42394e:	sbb    BYTE PTR [edi-0x4d],0x12
  423952:	push   0x16
  423954:	sti    
  423955:	push   es
  423956:	div    DWORD PTR [eax-0x66e6292a]
  42395c:	xor    al,0x8d
  42395e:	mov    ds:0x9680769,al
  423963:	jle    0x423987
  423965:	or     eax,0xea0b413d
  42396a:	sbb    DWORD PTR [eax],ebx
  42396c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42396d:	add    DWORD PTR [ecx+0x6f],eax
  423970:	sbb    al,0x98
  423972:	cs jl  0x4239e0
  423975:	or     al,bh
  423977:	jns    0x423984
  423979:	or     cl,0xb3
  42397c:	adc    eax,0x9e747fef
  423981:	inc    ecx
  423982:	mov    ch,0xd5
  423984:	pusha  
  423985:	cmp    BYTE PTR [edi+ebx*1],0x8d
  423989:	dec    edx
  42398a:	xchg   BYTE PTR [ecx-0x34],cl
  42398d:	lods   al,BYTE PTR ds:[esi]
  42398e:	bound  ecx,QWORD PTR [eax+edx*1+0x5]
  423992:	les    ebp,FWORD PTR [ebp+0x559aa9af]
  423998:	inc    ecx
  423999:	xor    eax,0xcdc9f59
  42399e:	stos   BYTE PTR es:[edi],al
  42399f:	hlt    
  4239a0:	mov    bh,0xf2
  4239a2:	jbe    0x42392d
  4239a4:	adc    ecx,ebx
  4239a6:	pusha  
  4239a7:	mov    ?,edi
  4239a9:	pop    ds
  4239aa:	pop    eax
  4239ab:	adc    bh,dh
  4239ad:	shl    DWORD PTR [ebp+0x1f],0x9d
  4239b1:	lahf   
  4239b2:	fistp  WORD PTR ds:0x2be14305
  4239b8:	daa    
  4239b9:	pushf  
  4239ba:	scas   al,BYTE PTR es:[edi]
  4239bb:	aam    0x13
  4239bd:	pop    eax
  4239be:	aam    0x79
  4239c0:	stos   BYTE PTR es:[edi],al
  4239c1:	inc    edx
  4239c2:	sbb    esi,DWORD PTR [esi+0x18c4bd78]
  4239c8:	test   DWORD PTR [edx],edi
  4239ca:	mov    edx,0x15cc7707
  4239cf:	out    0x61,al
  4239d1:	inc    edx
  4239d2:	out    dx,eax
  4239d3:	dec    ecx
  4239d4:	rcr    BYTE PTR [ecx+esi*8-0x5f],cl
  4239d8:	xlat   BYTE PTR ds:[ebx]
  4239d9:	sti    
  4239da:	test   al,0xaa
  4239dc:	call   0x8398:0x9c9b47d
  4239e3:	stc    
  4239e4:	jg     0x423a24
  4239e6:	mov    ds:0xf8db8506,al
  4239eb:	cwde   
  4239ec:	repz dec ebp
  4239ee:	mov    dh,0x28
  4239f0:	dec    edx
  4239f1:	retf   
  4239f2:	sbb    ebp,DWORD PTR [edi+0x73622efd]
  4239f8:	push   ss
  4239f9:	adc    al,0xb5
  4239fb:	lahf   
  4239fc:	aas    
  4239fd:	aaa    
  4239fe:	add    BYTE PTR [eax],al
  423a00:	add    BYTE PTR [eax],al
  423a02:	inc    esi
  423a03:	xchg   edi,eax
  423a04:	daa    
  423a05:	cmp    esi,edi
  423a07:	mov    ebx,0x9b53ff5e
  423a0c:	and    ebx,DWORD PTR [ebp-0x7d608574]
  423a12:	pop    ebp
  423a13:	mov    bl,0x1
  423a15:	add    ah,dh
  423a17:	add    al,0x0
  423a19:	add    ah,dl
  423a1b:	jbe    0x423a09
  423a1d:	shr    dh,0xa1
  423a20:	add    BYTE PTR [ecx],ah
  423a22:	and    ah,BYTE PTR [edi]
  423a24:	push   eax
  423a25:	in     eax,dx
  423a26:	cwde   
  423a27:	arpl   WORD PTR [esi+0x7c],ax
  423a2a:	jmp    0xc6fa:0xd9a283f8
  423a31:	in     eax,dx
  423a32:	(bad)  
  423a33:	fldcw  WORD PTR [edi-0xe]
  423a36:	xor    al,0x35
  423a38:	daa    
  423a39:	test   BYTE PTR [edi+0x68],cl
  423a3c:	xor    eax,0xb047ab05
  423a41:	call   edi
  423a43:	push   0x358b01d2
  423a48:	in     eax,dx
  423a49:	(bad)  
  423a4a:	sbb    al,BYTE PTR fs:[ebp+0x5a5be61e]
  423a51:	out    dx,al
  423a52:	stos   BYTE PTR es:[edi],al
  423a53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a54:	or     eax,0xad998183
  423a59:	xlat   BYTE PTR ds:[ebx]
  423a5a:	inc    edx
  423a5b:	cmp    BYTE PTR [eax-0x49],0x59
  423a5f:	and    BYTE PTR [esp+ebp*4-0x34],bh
  423a63:	mov    esp,0x7dfbbdbf
  423a68:	dec    ecx
  423a69:	adc    BYTE PTR ds:0x3c984931,bh
  423a6f:	popa   
  423a70:	out    dx,al
  423a71:	mov    ah,BYTE PTR [eax-0x44e2e15a]
  423a77:	and    edi,DWORD PTR [ebx-0x71]
  423a7a:	jbe    0x423ae1
  423a7c:	aad    0xd3
  423a7e:	or     eax,0x556c48e4
  423a83:	jecxz  0x423a24
  423a85:	sbb    ah,0x5a
  423a88:	cmp    esp,esi
  423a8a:	add    cl,bh
  423a8c:	and    DWORD PTR [eax+0x36],0xae0033d
  423a93:	pop    ebx
  423a94:	pushf  
  423a95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a96:	sbb    ebx,DWORD PTR [edx]
  423a98:	or     al,BYTE PTR [eax+0x48]
  423a9b:	sub    ebp,eax
  423a9d:	xchg   ebx,eax
  423a9e:	xor    edx,DWORD PTR [ebx-0x6d401811]
  423aa4:	sbb    eax,0x78eaf156
  423aa9:	jnp    0x423afd
  423aab:	stos   DWORD PTR es:[edi],eax
  423aac:	rol    DWORD PTR [ecx+0x2d54768e],0xa9
  423ab3:	ror    BYTE PTR [esp+edx*1],0x4d
  423ab7:	mov    edi,0x4b5225be
  423abc:	cmp    ebx,DWORD PTR [edi]
  423abe:	push   ecx
  423abf:	pushf  
  423ac0:	pop    esp
  423ac1:	loopne 0x423a56
  423ac3:	mov    ebx,0x99d6edde
  423ac8:	es jmp 0xc77a6656
  423ace:	jge    0x423abb
  423ad0:	xor    DWORD PTR [ecx],esp
  423ad2:	mov    edx,0x55f6bd48
  423ad7:	out    dx,al
  423ad8:	gs jmp 0x5aa96d64
  423ade:	outs   dx,BYTE PTR ds:[esi]
  423adf:	or     BYTE PTR [eax+0x73],dl
  423ae2:	shl    BYTE PTR [esi-0x5e2c02d],cl
  423ae8:	hlt    
  423ae9:	mov    al,0xec
  423aeb:	(bad)  
  423aec:	jmp    edx
  423aee:	mov    esi,0xff1b09a2
  423af3:	ins    DWORD PTR es:[edi],dx
  423af4:	int3   
  423af5:	outs   dx,DWORD PTR ds:[esi]
  423af6:	stc    
  423af7:	or     dh,BYTE PTR [edi]
  423af9:	mov    ecx,0xfe1fd9aa
  423afe:	fiadd  WORD PTR [esi+edi*2]
  423b01:	adc    DWORD PTR [esi-0x3b],0x7dc5e09e
  423b08:	xor    edx,DWORD PTR [ebx-0x4758f3af]
  423b0e:	and    DWORD PTR [ecx],esi
  423b10:	imul   edx,DWORD PTR [edx-0x25],0xc1ea6380
  423b17:	test   DWORD PTR gs:[edi-0x6a330fd3],esp
  423b1e:	call   0x3ba95ce
  423b23:	pop    eax
  423b24:	fmulp  st(6),st
  423b26:	pop    eax
  423b27:	jg     0x423aab
  423b29:	push   eax
  423b2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b2b:	jnp    0x423ba1
  423b2d:	test   eax,0x8e4e8f41
  423b32:	out    dx,eax
  423b33:	(bad)  
  423b34:	adc    al,0xf1
  423b36:	or     eax,0x22ecd1a0
  423b3b:	leave  
  423b3c:	pop    ebp
  423b3d:	les    ebx,FWORD PTR [ecx]
  423b3f:	xor    eax,0xe05c34d2
  423b44:	and    esp,esi
  423b46:	fwait
  423b47:	add    ebx,eax
  423b49:	addr16 aad 0x52
  423b4c:	xchg   edi,edx
  423b4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b4f:	lds    esi,FWORD PTR [edx+0x72]
  423b52:	jmp    0xbb85:0xc233d923
  423b59:	cwde   
  423b5a:	jne    0x423b1d
  423b5c:	fistp  DWORD PTR [ebx+0x6c]
  423b5f:	lock ret 
  423b61:	adc    ah,BYTE PTR [ebp-0x7f]
  423b64:	push   edx
  423b65:	ret    0xa7e6
  423b68:	mov    bl,0x8b
  423b6a:	pop    edx
  423b6b:	ins    DWORD PTR es:[edi],dx
  423b6c:	arpl   WORD PTR [esi+0x5075408c],sp
  423b72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b73:	hlt    
  423b74:	jnp    0x423b4b
  423b76:	mov    edx,0x49df8931
  423b7b:	sti    
  423b7c:	bound  edi,QWORD PTR [edx+0x6ef1c732]
  423b82:	outs   dx,DWORD PTR ds:[esi]
  423b83:	in     eax,dx
  423b84:	jns    0x423b43
  423b86:	add    ch,cl
  423b88:	mov    ebx,DWORD PTR [ecx+eax*1]
  423b8b:	or     bh,ch
  423b8d:	out    dx,eax
  423b8e:	js     0x423b6d
  423b90:	mov    ebx,DWORD PTR [esi-0x6070b77e]
  423b96:	fnstenv [ecx-0x23cafbfe]
  423b9c:	xor    al,0xfc
  423b9e:	fwait
  423b9f:	mov    eax,0xbfea5cf4
  423ba4:	mov    ebx,DWORD PTR [ebp-0x9]
  423ba7:	xchg   esp,eax
  423ba8:	mov    es,edx
  423baa:	ficomp DWORD PTR ds:0x9cec17a6
  423bb0:	lods   eax,DWORD PTR ds:[esi]
  423bb1:	mov    ecx,0xd0ae9b1a
  423bb6:	cld    
  423bb7:	aam    0xfe
  423bb9:	push   es
  423bba:	popa   
  423bbb:	stos   BYTE PTR es:[edi],al
  423bbc:	(bad)  
  423bbd:	fidivr DWORD PTR [ebx+0xd]
  423bc0:	rcr    DWORD PTR [ebx-0x7e],cl
  423bc3:	xor    DWORD PTR [ecx],ebp
  423bc5:	lea    ecx,[ebp-0x419004c5]
  423bcb:	rcr    BYTE PTR [eax+0x61745bc6],cl
  423bd1:	and    DWORD PTR fs:[ecx+0x5c],eax
  423bd5:	xchg   ecx,eax
  423bd6:	arpl   WORD PTR [esi-0x2],di
  423bd9:	mov    ch,0x2a
  423bdb:	pop    ecx
  423bdc:	mov    ds,WORD PTR [edi+0x3b]
  423bdf:	pop    edx
  423be0:	hlt    
  423be1:	or     DWORD PTR [edx-0x6235a9cf],eax
  423be7:	push   esp
  423be8:	shr    BYTE PTR [ecx-0x5fda8865],cl
  423bee:	sbb    bh,BYTE PTR [ecx]
  423bf0:	jo     0x423b82
  423bf2:	adc    eax,0x5918c1b6
  423bf7:	ss push edx
  423bf9:	fmul   QWORD PTR [ecx-0x219de9be]
  423bff:	mov    esp,esi
  423c01:	inc    ebp
  423c02:	lock je 0x423b98
  423c05:	and    dl,dl
  423c07:	leave  
  423c08:	dec    esi
  423c09:	xchg   esp,eax
  423c0a:	dec    esp
  423c0b:	fdivr  DWORD PTR [edx+0x70bfcd57]
  423c11:	sub    ah,BYTE PTR [eax-0x18]
  423c14:	cli    
  423c15:	xchg   esi,eax
  423c16:	call   0x1a0d980
  423c1b:	jbe    0x423c56
  423c1d:	lods   al,BYTE PTR ds:[esi]
  423c1e:	mov    esi,0x8df53bba
  423c23:	rcl    BYTE PTR [ecx+0x5141df4a],0x73
  423c2a:	and    BYTE PTR [bx+si-0x2e],dh
  423c2e:	mov    al,0xbb
  423c30:	xor    eax,0xa8f34e22
  423c35:	mov    WORD PTR [ebx+esi*2-0x3d8a4bcd],?
  423c3c:	push   0x75bc0307
  423c41:	cmp    DWORD PTR [ebp+0x34],esi
  423c44:	es aas 
  423c46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c47:	pop    eax
  423c48:	leave  
  423c49:	jg     0x423c0e
  423c4b:	mov    cl,0xc4
  423c4d:	(bad)  
  423c4e:	fstp   st(0)
  423c50:	pop    esi
  423c51:	xor    eax,0xd4e8e9d5
  423c56:	clc    
  423c57:	call   0xcf25:0xa53dc601
  423c5e:	nop
  423c5f:	out    0x31,eax
  423c61:	mov    bh,0xa7
  423c63:	and    DWORD PTR [ebx+0x53],ebp
  423c66:	ds push esp
  423c68:	pop    ecx
  423c69:	popa   
  423c6a:	pop    edx
  423c6b:	dec    ebx
  423c6c:	jae    0x423ce2
  423c6e:	outs   dx,BYTE PTR ds:[esi]
  423c6f:	sub    DWORD PTR [esi+edx*8-0x429e32e8],ebp
  423c76:	(bad)  
  423c77:	sub    eax,0x515e98f0
  423c7c:	lea    ebp,ds:0x4212b22b
  423c82:	shl    DWORD PTR [eax+0x32288147],0xb
  423c89:	fsub   QWORD PTR [edx-0x16]
  423c8c:	add    DWORD PTR [esi+ecx*4],edx
  423c8f:	add    eax,0x50f362c
  423c94:	pop    esp
  423c95:	popf   
  423c96:	mov    es,WORD PTR [ecx+edi*2+0x276b2297]
  423c9d:	jg     0x423cfa
  423c9f:	stos   BYTE PTR es:[edi],al
  423ca0:	jns    0x423cd4
  423ca2:	dec    esp
  423ca3:	jp     0x423c84
  423ca5:	and    bl,BYTE PTR [edi+esi*4]
  423ca8:	inc    esi
  423ca9:	lods   eax,DWORD PTR ds:[esi]
  423caa:	and    ah,ch
  423cac:	sub    ch,bh
  423cae:	sbb    DWORD PTR [esp+ebp*1+0x114c0846],ecx
  423cb5:	aam    0xb4
  423cb7:	pop    ebx
  423cb8:	arpl   WORD PTR [edi-0x342d179c],bx
  423cbe:	jno    0x423d22
  423cc0:	sahf   
  423cc1:	push   ss
  423cc2:	mov    cl,BYTE PTR [ebx]
  423cc4:	leave  
  423cc5:	ds cmp al,0x1a
  423cc8:	mov    ebx,DWORD PTR es:[edi+0x6]
  423ccc:	(bad)  
  423ccf:	jg     0x423c66
  423cd1:	out    0x64,al
  423cd3:	or     DWORD PTR [ecx+edi*2+0x1c],0xffffffd3
  423cd8:	scas   eax,DWORD PTR es:[edi]
  423cd9:	and    BYTE PTR [edx],dl
  423cdb:	out    dx,eax
  423cdc:	cdq    
  423cdd:	and    ebp,esi
  423cdf:	mov    cl,BYTE PTR [eax]
  423ce1:	xchg   ecx,eax
  423ce2:	mov    esp,0xac430471
  423ce7:	pop    esi
  423ce8:	push   ebp
  423ce9:	test   al,0xe7
  423ceb:	and    dl,BYTE PTR [ebx-0x72]
  423cee:	into   
  423cef:	xor    eax,0x693bfb9c
  423cf4:	mov    ecx,0x332fb641
  423cf9:	mov    dh,0xce
  423cfb:	or     ecx,ebx
  423cfd:	pop    eax
  423cfe:	mov    bh,0x67
  423d00:	dec    ebx
  423d01:	pop    es
  423d02:	adc    eax,0xa2b3deaa
  423d07:	adc    edi,DWORD PTR [esi+0x79]
  423d0a:	mov    al,ds:0xf3bac2e2
  423d0f:	jbe    0x423cdc
  423d11:	push   esp
  423d12:	push   0xb582dad2
  423d17:	(bad)  
  423d18:	fwait
  423d19:	mov    bl,0x6e
  423d1b:	jo     0x423d0a
  423d1d:	dec    esi
  423d1e:	mov    ds:0x7939e4fa,al
  423d23:	adc    eax,0xb7bc43f0
  423d28:	je     0x423d55
  423d2a:	fld    DWORD PTR [edx-0x46]
  423d2d:	sub    eax,0x1de8636a
  423d32:	mov    esi,0xaa9bf6f0
  423d37:	xchg   ebx,eax
  423d38:	ins    DWORD PTR es:[edi],dx
  423d39:	mov    esp,0xe3b544b0
  423d3e:	jne    0x423da8
  423d40:	or     al,0x51
  423d42:	les    edx,FWORD PTR [ebx+0x1c185449]
  423d48:	retf   
  423d49:	ins    DWORD PTR es:[edi],dx
  423d4a:	or     bh,BYTE PTR [edx+0x45235146]
  423d50:	dec    eax
  423d51:	adc    eax,0x9cad26b9
  423d56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d57:	push   ebx
  423d58:	in     al,0xa2
  423d5a:	sub    eax,0x8057b9e
  423d5f:	sub    eax,DWORD PTR [eax+0x624acc27]
  423d65:	jge    0x423dd6
  423d67:	imul   edi,DWORD PTR ds:0x527d4d1e,0x4e
  423d6e:	or     ah,cl
  423d70:	test   al,0xbd
  423d72:	fsub   st,st(4)
  423d74:	dec    ecx
  423d75:	adc    esp,DWORD PTR [eax+0x51]
  423d78:	sub    edx,DWORD PTR [eax]
  423d7a:	out    dx,al
  423d7b:	cwde   
  423d7c:	out    0x42,eax
  423d7e:	test   DWORD PTR [ebx],esp
  423d80:	cli    
  423d81:	mov    ah,0xb7
  423d83:	jno    0x423dce
  423d85:	and    DWORD PTR [esi],0x3
  423d88:	inc    ecx
  423d89:	sbb    eax,0xfdcc5441
  423d8e:	fdivr  QWORD PTR [esi-0x31]
  423d91:	and    edi,edx
  423d93:	adc    cl,BYTE PTR [ebx]
  423d95:	scas   eax,DWORD PTR es:[edi]
  423d96:	jle    0x423d1c
  423d98:	aam    0xda
  423d9a:	in     eax,0xfc
  423d9c:	dec    edi
  423d9d:	pop    ecx
  423d9e:	inc    edi
  423d9f:	mov    bl,0xb3
  423da1:	cdq    
  423da2:	mov    eax,0xf1065249
  423da7:	sub    al,0x65
  423da9:	or     bl,BYTE PTR [eax-0x32ed4055]
  423daf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423db0:	adc    cl,ch
  423db2:	add    eax,0x8ee216b7
  423db7:	mov    edi,0xc666235f
  423dbc:	push   ss
  423dbd:	jo     0x423d4f
  423dbf:	popf   
  423dc0:	cmp    ch,BYTE PTR [ecx+0x37]
  423dc3:	cmp    eax,0x6caa356b
  423dc8:	xor    BYTE PTR [eax-0x5ff40f6e],ch
  423dce:	inc    edx
  423dcf:	xchg   edx,eax
  423dd0:	dec    edx
  423dd1:	or     bh,BYTE PTR [ebp-0x52]
  423dd4:	xor    BYTE PTR ds:0x656c16d,bl
  423dda:	in     al,dx
  423ddb:	mov    al,ds:0x3dc6b33f
  423de0:	repnz pop ds
  423de2:	cmp    edx,DWORD PTR cs:[eax]
  423de5:	jp     0x423e40
  423de7:	in     al,dx
  423de8:	sbb    al,0xeb
  423dea:	adc    eax,0xd66ad638
  423def:	sbb    BYTE PTR [eax],bh
  423df1:	push   ss
  423df2:	mov    esi,0x8016d3a4
  423df7:	sub    eax,0x1c2f54f6
  423dfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423dfd:	and    dh,BYTE PTR [edx-0x49]
  423e00:	sahf   
  423e01:	inc    esp
  423e02:	adc    eax,0x651e28db
  423e07:	pushf  
  423e08:	cmp    eax,0x61b55b3d
  423e0d:	push   cs
  423e0e:	xlat   BYTE PTR ds:[ebx]
  423e0f:	jns    0x423e6d
  423e11:	sub    eax,0x7f7a3c02
  423e16:	out    0x2c,eax
  423e18:	aam    0x44
  423e1a:	add    BYTE PTR [edx],0xea
  423e1d:	nop
  423e1e:	test   eax,0xe6fb6ce9
  423e23:	imul   esp,DWORD PTR [ecx+0x10],0xffffffaa
  423e27:	aaa    
  423e28:	pop    ebx
  423e29:	fdivp  st(3),st
  423e2b:	push   es
  423e2c:	sbb    BYTE PTR [esi-0x6],al
  423e2f:	cmp    BYTE PTR [ebp+0x108c2f04],0x43
  423e36:	idiv   DWORD PTR [edi+0x51]
  423e39:	sar    DWORD PTR [ecx+0x7175d234],0x1b
  423e40:	mov    ds:0x45d58646,al
  423e45:	jns    0x423e98
  423e47:	add    al,0x21
  423e49:	jp     0x423e39
  423e4b:	nop    DWORD PTR [ecx-0x14]
  423e4f:	xchg   BYTE PTR [eax+ebx*8-0x354b0fd],dl
  423e56:	(bad)  
  423e58:	add    DWORD PTR [eax-0xb06f52b],ecx
  423e5e:	xor    DWORD PTR [ecx+0x7d1353fb],eax
  423e64:	pop    ebx
  423e65:	call   0x56605c83
  423e6a:	iret   
  423e6b:	mov    ebx,0xaee0879d
  423e70:	mov    ds:0xfd048ae2,al
  423e75:	mov    eax,0xd2e6d762
  423e7a:	sahf   
  423e7b:	loopne 0x423e8c
  423e7d:	adc    eax,0xcdacab24
  423e82:	xor    BYTE PTR [edi],0xb1
  423e85:	ss push ecx
  423e87:	xchg   edi,eax
  423e88:	fistp  DWORD PTR [ecx+0x14]
  423e8b:	and    BYTE PTR [esp+eax*4],dh
  423e8e:	sub    eax,0xfab7388a
  423e93:	cdq    
  423e94:	in     al,dx
  423e95:	cmp    DWORD PTR [ebp+eiz*8-0x37],esi
  423e99:	and    al,0x7a
  423e9b:	les    ebp,FWORD PTR [ecx-0x1e]
  423e9e:	pop    esi
  423e9f:	inc    esi
  423ea0:	fsub   st(2),st
  423ea2:	(bad)  
  423ea3:	loope  0x423e78
  423ea5:	xchg   BYTE PTR [edx+0x67],al
  423ea8:	cmp    bh,BYTE PTR [esi-0x4af3e850]
  423eae:	adc    al,0x8b
  423eb0:	cmc    
  423eb1:	cli    
  423eb2:	out    0x5e,eax
  423eb4:	int    0xde
  423eb6:	ret    0x3c55
  423eb9:	xor    DWORD PTR [ecx+0x10],ebx
  423ebc:	sbb    eax,0xf18a792c
  423ec1:	sbb    al,0xbe
  423ec3:	out    0x7f,ax
  423ec6:	call   0xa0d45e57
  423ecb:	pop    ds
  423ecc:	mov    esi,0x866e036e
  423ed1:	mov    cl,al
  423ed3:	test   al,0xd3
  423ed5:	aas    
  423ed6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ed7:	jb     0x423ec7
  423ed9:	call   FWORD PTR [eax+0x23]
  423edc:	jb     0x423e9d
  423ede:	jno    0x423ed4
  423ee0:	add    edi,ebp
  423ee2:	arpl   si,bp
  423ee4:	push   es
  423ee5:	retf   0xb653
  423ee8:	fistp  DWORD PTR [eax-0x73]
  423eeb:	sbb    DWORD PTR [edx],esp
  423eed:	les    ebp,FWORD PTR [ebp-0x78]
  423ef0:	mov    ah,0xd9
  423ef2:	in     al,dx
  423ef3:	not    DWORD PTR [esi*2-0x52005db0]
  423efa:	out    dx,eax
  423efb:	mov    ds:0xfd886a52,eax
  423f00:	jp     0x423f60
  423f02:	sbb    eax,0xed9c0b1b
  423f07:	xor    al,0x2b
  423f09:	jmp    0x0:0x164daef5
  423f10:	add    BYTE PTR [eax],al
  423f12:	sar    al,cl
  423f14:	data16 outs dx,BYTE PTR es:[esi]
  423f17:	mov    esi,0x8c85fcd2
  423f1c:	out    dx,al
  423f1d:	fimul  DWORD PTR [ebx+0x2c]
  423f20:	fidivr WORD PTR [eax+0x51]
  423f23:	mov    eax,0x4f40001
  423f28:	add    BYTE PTR [eax],al
  423f2a:	dec    esi
  423f2b:	jle    0x423f07
  423f2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423f2e:	mov    esi,0xfdb58695
  423f33:	push   es
  423f34:	int3   
  423f35:	jne    0x423eb9
  423f37:	inc    ecx
  423f38:	jg     0x423f77
  423f3a:	cld    
  423f3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423f3c:	outs   dx,DWORD PTR ds:[esi]
  423f3d:	lds    esi,FWORD PTR [esi+0x4a85264c]
  423f43:	mov    cl,0xc7
  423f45:	lock mov dl,ch
  423f48:	xchg   edi,eax
  423f49:	ror    dl,cl
  423f4b:	sub    al,0xfd
  423f4d:	aad    0xb5
  423f4f:	xchg   ecx,eax
  423f50:	sbb    ebp,ebx
  423f52:	xchg   esi,eax
  423f53:	arpl   sp,di
  423f55:	cmp    BYTE PTR [ebx+esi*2+0xb5ad7d4],dh
  423f5c:	jmp    0x8f5a7a8a
  423f61:	clc    
  423f62:	out    0xf0,al
  423f64:	ja     0x423fdf
  423f66:	jge    0x423f21
  423f68:	push   ds
  423f69:	cmp    al,0xe3
  423f6b:	je     0x423f14
  423f6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423f6e:	cld    
  423f6f:	or     eax,0x55dfed00
  423f74:	xlat   BYTE PTR ds:[ebx]
  423f75:	loop   0x423f7b
  423f77:	ja     0x423f0d
  423f79:	repz push 0xffffffd6
  423f7c:	jmp    0x6c5ca693
  423f81:	loop   0x423fe5
  423f83:	add    al,0x1e
  423f85:	loopne 0x423f40
  423f87:	loope  0x423f4f
  423f89:	mov    edx,0x12d93a8c
  423f8e:	or     BYTE PTR ds:0x36168e77,0xde
  423f95:	imul   edx,DWORD PTR [edi+0x4b],0x3e
  423f99:	or     edi,DWORD PTR [eax+0x36bc5cd3]
  423f9f:	lds    esp,FWORD PTR [ebp-0x3d]
  423fa2:	adc    al,bh
  423fa4:	es pusha 
  423fa6:	outs   dx,DWORD PTR ds:[esi]
  423fa7:	jle    0x423f2e
  423fa9:	(bad)  
  423faa:	stos   DWORD PTR es:[edi],eax
  423fab:	cmp    eax,0xaf1843ce
  423fb0:	add    ah,BYTE PTR [edi-0x53]
  423fb3:	ins    DWORD PTR es:[edi],dx
  423fb4:	xor    DWORD PTR [esi+0x59],ebx
  423fb7:	sub    al,0x2e
  423fb9:	cmp    ah,BYTE PTR [ebp+edx*2+0x1b]
  423fbd:	mov    ebx,DWORD PTR [esi-0x3c]
  423fc0:	push   0xffffffd1
  423fc2:	mov    ds:0xdb8a2048,al
  423fc7:	ins    DWORD PTR es:[edi],dx
  423fc8:	stc    
  423fc9:	push   0xffffff8d
  423fcb:	push   ss
  423fcc:	aas    
  423fcd:	pop    esi
  423fce:	dec    edi
  423fcf:	test   BYTE PTR [eax],dl
  423fd1:	jo     0x424016
  423fd3:	rcr    DWORD PTR [eax],1
  423fd5:	sub    BYTE PTR [esi+0x48f9795],cl
  423fdb:	sub    BYTE PTR [edi+0x5e],cl
  423fde:	inc    esi
  423fdf:	test   eax,0x963d7fb8
  423fe4:	std    
  423fe5:	add    al,BYTE PTR ds:0xdb0c658d
  423feb:	jno    0x423fd2
  423fed:	lahf   
  423fee:	adc    al,0x5c
  423ff0:	mov    eax,ds:0xea9f7189
  423ff5:	in     al,0x37
  423ff7:	jmp    0x695e:0xa0453e7a
  423ffe:	mov    dh,0x8c
  424000:	jnp    0x42407c
  424002:	pop    edi
  424003:	cmp    BYTE PTR [eax-0x543bbd88],dl
  424009:	hlt    
  42400a:	xor    ebx,DWORD PTR [ebx]
  42400c:	rol    DWORD PTR [edi-0x19],0x69
  424010:	arpl   WORD PTR [ebx+0x54],si
  424013:	fbstp  TBYTE PTR [edx+esi*8+0x7a]
  424017:	xor    bl,al
  424019:	ret    0x7adb
  42401c:	mov    ecx,0x8e0fa0c6
  424021:	cli    
  424022:	jge    0x42404c
  424024:	and    BYTE PTR [edi],0x51
  424027:	xor    BYTE PTR [ebx],dh
  424029:	inc    ebx
  42402a:	leave  
  42402b:	and    DWORD PTR [ecx+0x48],ecx
  42402e:	aaa    
  42402f:	arpl   sp,bp
  424031:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424032:	or     DWORD PTR es:[esi],eax
  424035:	cmp    ah,dh
  424037:	push   eax
  424038:	ss pop esi
  42403a:	inc    esi
  42403b:	sbb    al,0x22
  42403d:	popa   
  42403e:	ins    BYTE PTR es:[edi],dx
  42403f:	out    0x8d,al
  424041:	adc    eax,0x50e8e424
  424046:	std    
  424047:	imul   edi,DWORD PTR [edi-0x8],0x4688d800
  42404e:	cmp    DWORD PTR [ebp+0x7],eax
  424051:	js     0x42401e
  424053:	or     BYTE PTR [edi+0x6c10fcb4],ah
  424059:	cmp    ah,BYTE PTR ds:0xb1b70ab1
  42405f:	repz clc 
  424061:	fcmovnu st,st(4)
  424063:	pop    ebp
  424064:	mov    ah,0xf8
  424066:	ja     0x4240c9
  424068:	mov    al,ds:0xf42d65af
  42406d:	das    
  42406e:	xchg   edx,eax
  42406f:	inc    ebx
  424070:	jl     0x424015
  424072:	pop    ds
  424073:	and    eax,0x71d2ee8f
  424078:	lahf   
  424079:	ins    DWORD PTR es:[edi],dx
  42407a:	mov    ah,0x63
  42407c:	mov    dh,0xd7
  42407e:	hlt    
  42407f:	mov    bh,0xca
  424081:	retf   0x480a
  424084:	cdq    
  424085:	nop
  424086:	fdivr  QWORD PTR [ebx-0x43]
  424089:	sub    eax,0x663bff08
  42408e:	push   edi
  42408f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424090:	mov    esi,0x6f39a145
  424095:	jge    0x4240d9
  424097:	call   0x302154d3
  42409c:	fwait
  42409d:	lahf   
  42409e:	xlat   BYTE PTR ds:[ebx]
  42409f:	jp     0x424022
  4240a1:	push   ebp
  4240a2:	push   ecx
  4240a3:	aam    0xfc
  4240a5:	outs   dx,BYTE PTR ds:[esi]
  4240a6:	dec    ecx
  4240a7:	ret    
  4240a8:	div    BYTE PTR [ebx-0x5]
  4240ab:	push   ss
  4240ac:	clc    
  4240ad:	sbb    ch,cl
  4240af:	xchg   ebx,eax
  4240b0:	push   edx
  4240b1:	jne    0x424100
  4240b3:	out    dx,eax
  4240b4:	push   edi
  4240b5:	sbb    cl,bh
  4240b7:	or     ebp,ebp
  4240b9:	push   es
  4240ba:	sti    
  4240bb:	mov    cs,esi
  4240bd:	pop    ds
  4240be:	sbb    DWORD PTR [ebx],ecx
  4240c0:	mov    eax,ds:0x611fba14
  4240c5:	loopne 0x42411a
  4240c7:	mov    ch,0x7b
  4240c9:	in     al,dx
  4240ca:	jno    0x424138
  4240cc:	dec    BYTE PTR [eax+0x71f23356]
  4240d2:	enter  0x2214,0xc9
  4240d6:	sbb    al,0xdc
  4240d8:	lds    ebp,FWORD PTR [edx+ebp*8]
  4240db:	ins    BYTE PTR es:[edi],dx
  4240dc:	dec    ecx
  4240dd:	in     al,dx
  4240de:	pop    ds
  4240df:	jle    0x4240d0
  4240e1:	imul   esp,DWORD PTR [ebp-0x3c],0xffffff80
  4240e5:	sbb    al,0x55
  4240e7:	(bad)  
  4240e8:	fsubr  st,st(2)
  4240ea:	xchg   ecx,eax
  4240eb:	leave  
  4240ec:	test   BYTE PTR [ebp-0x47],al
  4240ef:	pop    edx
  4240f0:	out    dx,al
  4240f1:	lds    edx,FWORD PTR [eax-0x44]
  4240f4:	sbb    eax,0xd5eef8c4
  4240f9:	mov    al,ds:0x418a7256
  4240fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240ff:	xchg   edi,esi
  424101:	xor    ebp,ebp
  424103:	mov    eax,0xb2f82ec8
  424108:	iret   
  424109:	mov    al,0x25
  42410b:	and    dh,ah
  42410d:	iret   
  42410e:	stos   BYTE PTR es:[edi],al
  42410f:	std    
  424110:	pusha  
  424111:	add    DWORD PTR [ecx+0x2b],edx
  424114:	pop    ebp
  424115:	dec    edi
  424116:	mov    ebx,DWORD PTR [ecx+ebx*4+0x320c468c]
  42411d:	rcl    DWORD PTR [esi],0x8a
  424120:	dec    ecx
  424121:	pop    edx
  424122:	mov    ecx,0x165a359e
  424127:	mov    edi,0x1328569c
  42412c:	pop    ss
  42412d:	leave  
  42412e:	mov    DWORD PTR [ecx+ecx*4-0x2e],0xf5303c92
  424136:	jecxz  0x4241a7
  424138:	daa    
  424139:	mov    ch,BYTE PTR [ebx]
  42413b:	aad    0xb1
  42413d:	xor    BYTE PTR [eax+0x76],0xe4
  424141:	std    
  424142:	and    al,0x12
  424144:	inc    ecx
  424145:	push   eax
  424146:	push   0x21
  424148:	jnp    0x42412b
  42414a:	pop    es
  42414b:	pop    ebp
  42414c:	fwait
  42414d:	test   DWORD PTR ds:0x51dc5ad7,edi
  424153:	(bad)  
  424154:	xchg   BYTE PTR [ecx],ch
  424156:	sub    eax,DWORD PTR [edi-0x4983fd2a]
  42415c:	or     eax,0x2ae4c5fe
  424161:	push   eax
  424162:	mov    WORD PTR [ebx+0x77],fs
  424165:	aaa    
  424166:	ja     0x424159
  424168:	mov    esi,0xf36867e0
  42416d:	add    eax,0x59c0cbf1
  424172:	les    esp,FWORD PTR [ebp-0x3b]
  424175:	jbe    0x424193
  424177:	jb     0x42413e
  424179:	pop    ebp
  42417a:	dec    eax
  42417b:	imul   edi,esi,0x1cadf8b2
  424181:	lock mov ebx,0xcb23731d
  424187:	popf   
  424188:	add    al,BYTE PTR [eax]
  42418a:	aam    0x63
  42418c:	adc    BYTE PTR gs:[eax-0x52],dh
  424190:	outs   dx,DWORD PTR ds:[esi]
  424191:	in     al,0x64
  424193:	fstp   TBYTE PTR [ecx]
  424195:	fdivr  st,st(5)
  424197:	ret    0xa408
  42419a:	add    eax,0xb1ed2caf
  42419f:	lods   al,BYTE PTR ds:[esi]
  4241a0:	sub    dl,bl
  4241a2:	jle    0x4241f3
  4241a4:	jmp    0xd46d126f
  4241a9:	sub    DWORD PTR [ebx+0x33],ecx
  4241ac:	and    eax,0x951a76c1
  4241b1:	sub    DWORD PTR ds:0x56fe8cfe,ebx
  4241b7:	pusha  
  4241b8:	shr    BYTE PTR [edx+esi*4-0x5],0x5e
  4241bd:	(bad)  
  4241be:	scas   al,BYTE PTR es:[edi]
  4241bf:	xor    DWORD PTR [ebx],ebp
  4241c1:	shl    DWORD PTR [ebx-0x64],1
  4241c4:	mov    es,edx
  4241c6:	fst    QWORD PTR [eax-0x51fb7af1]
  4241cc:	mov    ebx,0x684f19d9
  4241d1:	add    eax,0xc3777a07
  4241d6:	push   eax
  4241d7:	stos   DWORD PTR es:[edi],eax
  4241d8:	pusha  
  4241d9:	stc    
  4241da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4241db:	jo     0x4241da
  4241dd:	outs   dx,BYTE PTR ds:[esi]
  4241de:	xor    edi,DWORD PTR [ebp-0x10b9d37d]
  4241e4:	xor    eax,0x2ed302a8
  4241e9:	add    BYTE PTR [ebx+esi*4+0x4a09d81],cl
  4241f0:	fimul  WORD PTR [eax+0x8]
  4241f3:	pop    ecx
  4241f4:	push   esi
  4241f5:	es sbb al,0x31
  4241f8:	mul    DWORD PTR [edx]
  4241fa:	lea    esp,ds:0xf0df15bc
  424200:	fs dec esi
  424202:	or     esi,DWORD PTR [ebp-0x7a]
  424205:	pop    ss
  424206:	adc    eax,0x7f8a5d53
  42420b:	xchg   esp,eax
  42420c:	xor    eax,DWORD PTR [ebp+0x6152ffde]
  424212:	ins    BYTE PTR es:[edi],dx
  424213:	ror    cl,1
  424215:	popa   
  424216:	lods   al,BYTE PTR ds:[esi]
  424217:	sbb    BYTE PTR [ecx],ah
  424219:	repnz stc 
  42421b:	test   eax,0x3b9733a9
  424220:	xchg   edx,eax
  424221:	out    dx,eax
  424222:	pop    edi
  424223:	popa   
  424224:	retf   
  424225:	pop    eax
  424226:	sahf   
  424227:	bound  esi,QWORD PTR ds:0x1e15daed
  42422d:	add    ebp,ebx
  42422f:	imul   ecx,DWORD PTR [edi+0x932682],0x456f6968
  424239:	and    bh,0xa8
  42423c:	dec    ecx
  42423d:	jb     0x4242ad
  42423f:	jmp    0x42427c
  424241:	data16 int 0x87
  424244:	outs   dx,DWORD PTR ds:[esi]
  424245:	add    esp,DWORD PTR [edx+0x187e285e]
  42424b:	xor    DWORD PTR [edi-0x6ae5f7e],eax
  424251:	xchg   edi,eax
  424252:	xchg   ebp,eax
  424253:	push   cs
  424254:	test   DWORD PTR [ebx+ebp*8],edi
  424257:	leave  
  424258:	cld    
  424259:	pushf  
  42425a:	test   DWORD PTR [ebx-0x20],edx
  42425d:	xchg   edx,eax
  42425e:	add    eax,0xbcfe078c
  424263:	mov    edx,0xff8d2ade
  424268:	loopne 0x4242b7
  42426a:	out    dx,eax
  42426b:	mov    fs,WORD PTR [esi-0x3891a38]
  424271:	and    BYTE PTR [eax],ah
  424273:	call   0x4901:0x75ac1734
  42427a:	lea    edx,[ebp-0x71]
  42427d:	or     BYTE PTR [edx-0x45e3b537],0x33
  424284:	and    edi,eax
  424286:	dec    eax
  424287:	pop    ds
  424288:	add    eax,0xbf3abd10
  42428d:	setae  BYTE PTR [eax+0x32]
  424291:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424292:	push   0xffffffd1
  424294:	sbb    edi,eax
  424296:	add    eax,0x75993cb7
  42429b:	outs   dx,BYTE PTR ds:[esi]
  42429c:	inc    esi
  42429d:	out    0xad,al
  42429f:	jnp    0x424301
  4242a1:	es das 
  4242a3:	jl     0x42423e
  4242a5:	adc    DWORD PTR [esi+0x554a3f78],esi
  4242ab:	mov    dl,0xbf
  4242ad:	cmc    
  4242ae:	jmp    eax
  4242b0:	fcom   DWORD PTR [esi]
  4242b2:	addr16 retf 
  4242b4:	aas    
  4242b5:	aad    0x88
  4242b7:	pop    edx
  4242b8:	pop    eax
  4242b9:	in     eax,dx
  4242ba:	cmp    eax,0x64305845
  4242bf:	idiv   bl
  4242c1:	push   es
  4242c2:	int3   
  4242c3:	mov    cl,bh
  4242c5:	xor    DWORD PTR [edi],ecx
  4242c7:	cwde   
  4242c8:	push   esi
  4242c9:	inc    eax
  4242ca:	xor    DWORD PTR [esp+eax*8],ecx
  4242cd:	dec    esp
  4242ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4242cf:	iret   
  4242d0:	and    al,0x9a
  4242d2:	rcr    bh,cl
  4242d4:	sahf   
  4242d5:	call   0xf6e9:0xffbff2df
  4242dc:	jno    0x424308
  4242de:	imul   DWORD PTR [ebp+0x3b]
  4242e1:	jae    0x424356
  4242e3:	test   DWORD PTR [esi+0x5a7979a2],ebp
  4242e9:	out    0xd0,al
  4242eb:	call   0x3a7b:0x9b8d0cce
  4242f2:	into   
  4242f3:	jb     0x4242e2
  4242f5:	iret   
  4242f6:	popf   
  4242f7:	sub    edx,eax
  4242f9:	push   ds
  4242fa:	fnstcw WORD PTR [eax+ecx*1+0x7c]
  4242fe:	dec    esp
  4242ff:	mov    gs,WORD PTR [edx]
  424301:	jmp    0x424317
  424303:	cli    
  424304:	sbb    BYTE PTR ds:0x393c683f,bl
  42430a:	and    BYTE PTR [ebp+0x22ce7f60],0x68
  424311:	jecxz  0x424318
  424313:	mov    al,0x4c
  424315:	int3   
  424316:	mov    DWORD PTR [ebx+0x3c],esi
  424319:	adc    eax,0x4371a621
  42431e:	arpl   WORD PTR [ebx+0x499ef9c6],bx
  424324:	rol    DWORD PTR [ecx+esi*1+0xe],cl
  424328:	mov    bl,0x11
  42432a:	es or  edi,esp
  42432d:	sahf   
  42432e:	dec    esi
  42432f:	inc    ecx
  424330:	out    dx,eax
  424331:	inc    edi
  424332:	mov    dl,ch
  424334:	pusha  
  424335:	jge    0x4242bf
  424337:	mov    ch,0xa3
  424339:	xchg   esi,eax
  42433a:	icebp  
  42433b:	out    0xed,eax
  42433d:	out    0x1f,eax
  42433f:	push   esi
  424340:	ins    DWORD PTR es:[edi],dx
  424341:	into   
  424342:	fstp   TBYTE PTR [ebx-0x2d]
  424345:	xor    eax,0x9f36f6aa
  42434a:	jne    0x4243a4
  42434c:	mov    al,ds:0x4f75d305
  424351:	xor    DWORD PTR [eax+0x6d],esp
  424354:	dec    esp
  424356:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424357:	(bad)  
  424358:	cmp    DWORD PTR [edx+0x10],ebp
  42435b:	adc    cl,BYTE PTR [esi+0x7aa0e046]
  424361:	xchg   ebp,eax
  424362:	(bad)  
  424364:	cmp    BYTE PTR [esi+0x61],ch
  424367:	or     DWORD PTR [edx-0x41],0xcfa5d34
  42436e:	cmp    al,0xd
  424370:	push   0x45b2b978
  424375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424376:	popf   
  424377:	rcr    DWORD PTR [edx],cl
  424379:	pop    esi
  42437a:	mov    edx,0x28c01721
  42437f:	hlt    
  424380:	inc    edi
  424381:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424382:	imul   esi,ebp,0x65
  424385:	push   edi
  424386:	cmp    al,0x2a
  424388:	mov    ds:0x62ea5acb,al
  42438d:	icebp  
  42438e:	fld    DWORD PTR [edi+0x35f453c4]
  424394:	lods   eax,DWORD PTR ds:[esi]
  424395:	stos   DWORD PTR es:[edi],eax
  424396:	lods   al,BYTE PTR ds:[esi]
  424397:	pop    ds
  424398:	inc    ebp
  424399:	sbb    al,0x0
  42439b:	mov    ss,WORD PTR [edi+0x28e4aea5]
  4243a1:	jno    0x42432c
  4243a3:	jecxz  0x42433c
  4243a5:	mov    ecx,0x622494a6
  4243aa:	mov    bl,0xb0
  4243ac:	mov    ds:0xe5955489,al
  4243b1:	cs ret 0xc21b
  4243b5:	mov    ds:0x617d8f06,al
  4243ba:	ja     0x4243cf
  4243bc:	outs   dx,BYTE PTR ds:[esi]
  4243bd:	rol    BYTE PTR [ecx+eiz*4],cl
  4243c0:	cli    
  4243c1:	dec    BYTE PTR [edx-0x70]
  4243c4:	fild   WORD PTR [ecx+0x7a]
  4243c7:	into   
  4243c8:	and    DWORD PTR [eax+0x34b3b960],esi
  4243ce:	xor    DWORD PTR [ebx],ebx
  4243d0:	add    al,dl
  4243d2:	mov    BYTE PTR [ebx+0x52],0xed
  4243d6:	push   ds
  4243d7:	add    al,0x10
  4243d9:	(bad)  
  4243da:	repz inc ebp
  4243dc:	outs   dx,DWORD PTR ds:[esi]
  4243dd:	pushf  
  4243de:	sbb    BYTE PTR [eax+0x2e],bh
  4243e1:	ss sub al,0x98
  4243e4:	stos   BYTE PTR es:[edi],al
  4243e5:	adc    DWORD PTR [ecx-0x3a],edx
  4243e8:	fistp  WORD PTR [eax-0x285133bd]
  4243ee:	add    DWORD PTR [ebp+0x60],eax
  4243f1:	fs ja  0x4243de
  4243f4:	sbb    eax,0x7177e187
  4243f9:	jbe    0x4243c8
  4243fb:	fcmovnbe st,st(2)
  4243fd:	xor    ebx,ebp
  4243ff:	or     al,0xf8
  424401:	jmp    0x424427
  424403:	cmp    bh,bl
  424405:	js     0x424408
  424407:	aas    
  424408:	pop    edi
  424409:	jb     0x424402
  42440b:	scas   al,BYTE PTR es:[edi]
  42440c:	jb     0x424439
  42440e:	sbb    al,0x88
  424410:	(bad)  
  424411:	not    BYTE PTR [edi-0x68]
  424414:	(bad)  [esi+0x250ffe35]
  42441a:	lahf   
  42441b:	sbb    DWORD PTR [eax+ecx*1+0x0],eax
  424422:	sub    al,0xda
  424424:	iret   
  424425:	cmp    bh,0x95
  424428:	outs   dx,DWORD PTR ds:[esi]
  424429:	(bad)  
  42442a:	jecxz  0x4243f5
  42442c:	push   ds
  42442d:	ins    DWORD PTR es:[edi],dx
  42442e:	out    dx,al
  42442f:	retf   0x81f8
  424432:	inc    ebp
  424433:	mov    ebp,0x4f40001
  424438:	add    BYTE PTR [eax],al
  42443a:	inc    ebx
  42443b:	(bad)  
  42443d:	daa    
  42443e:	xchg   ebp,eax
  42443f:	into   
  424440:	arpl   WORD PTR [eax-0xb],di
  424443:	ins    DWORD PTR es:[edi],dx
  424444:	shl    BYTE PTR [ebx+0x70],0xc3
  424448:	cmp    ebp,DWORD PTR [ebp+0x28]
  42444b:	xchg   edi,eax
  42444c:	and    DWORD PTR [edi+0x2d7659f0],esi
  424452:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424453:	inc    eax
  424454:	test   ah,ah
  424456:	sub    eax,0xf0450a7e
  42445c:	ds inc edx
  42445e:	pop    esi
  42445f:	lods   eax,DWORD PTR ds:[esi]
  424460:	hlt    
  424461:	push   ss
  424462:	lods   eax,DWORD PTR ds:[esi]
  424463:	pop    ds
  424464:	dec    edi
  424465:	clc    
  424466:	pop    eax
  424467:	cmp    eax,0xbdf67fe8
  42446c:	out    0x61,al
  42446e:	dec    esi
  42446f:	and    eax,0xa125ed62
  424474:	popa   
  424475:	xchg   ecx,eax
  424476:	retf   0x9993
  424479:	(bad)  
  42447a:	mov    eax,ds:0x4c98fbe4
  42447f:	jo     0x4244ba
  424481:	push   edx
  424482:	pop    ss
  424483:	cmp    ecx,DWORD PTR [ebx-0x5d]
  424486:	jle    0x4244cb
  424488:	jp     0x4244eb
  42448a:	dec    eax
  42448b:	or     ch,BYTE PTR ds:0xeb96ab4a
  424491:	mov    ah,0xb5
  424493:	shr    BYTE PTR [ecx*8+0x4913d7c3],cl
  42449a:	mov    ebp,DWORD PTR [edx]
  42449c:	ins    DWORD PTR es:[edi],dx
  42449d:	shr    ebp,cl
  42449f:	sti    
  4244a0:	sbb    cl,BYTE PTR [esi+0x89801ab]
  4244a6:	(bad)
  4244a9:	je     0x4244f5
  4244ab:	jmp    0xd5b3:0xfde24788
  4244b2:	into   
  4244b3:	lods   al,BYTE PTR ds:[esi]
  4244b4:	pop    esp
  4244b5:	not    bl
  4244b7:	pop    edi
  4244b8:	ret    0xcad1
  4244bb:	cdq    
  4244bc:	stos   DWORD PTR es:[edi],eax
  4244bd:	sub    al,0xc0
  4244bf:	lea    esp,[ecx]
  4244c1:	lods   eax,DWORD PTR ds:[esi]
  4244c2:	imul   BYTE PTR [ebx]
  4244c4:	adc    BYTE PTR [esi-0x4d12dc91],dh
  4244ca:	std    
  4244cb:	pop    edi
  4244cc:	and    bh,bl
  4244ce:	ret    0xd5e6
  4244d1:	mov    al,ds:0x59529e90
  4244d6:	adc    edi,DWORD PTR [esi+0x7c]
  4244d9:	mov    ch,0x99
  4244db:	stos   DWORD PTR es:[edi],eax
  4244dc:	xchg   esi,eax
  4244dd:	rol    edi,cl
  4244df:	daa    
  4244e0:	int3   
  4244e1:	pop    ecx
  4244e2:	aaa    
  4244e3:	scas   eax,DWORD PTR es:[edi]
  4244e4:	sbb    esi,DWORD PTR [edx]
  4244e6:	pop    ebp
  4244e7:	pushf  
  4244e8:	mov    ecx,0xc7b288d1
  4244ed:	mov    ds:0x384462c1,al
  4244f2:	and    eax,0x3a5968aa
  4244f7:	lock in eax,0x46
  4244fa:	sub    eax,0x89e5d42f
  4244ff:	aas    
  424500:	or     esp,0x7f8fc750
  424506:	pop    eax
  424507:	(bad)  
  424508:	mov    BYTE PTR [esi+0x7a],dh
  42450b:	aad    0xef
  42450d:	lods   al,BYTE PTR ds:[esi]
  42450e:	xor    edx,DWORD PTR [edx+0x492e1973]
  424514:	fimul  DWORD PTR fs:[ecx]
  424517:	out    0x2f,al
  424519:	fisub  DWORD PTR [ebp-0x6c262966]
  42451f:	sbb    al,0xc4
  424521:	aaa    
  424522:	inc    esi
  424523:	cmc    
  424524:	(bad)  
  424525:	mov    ds:0xce084fdf,al
  42452a:	jle    0x4244c5
  42452c:	sub    eax,esp
  42452e:	aaa    
  42452f:	push   edi
  424530:	imul   eax,DWORD PTR [esi],0x35
  424533:	adc    ch,dl
  424535:	inc    edx
  424536:	arpl   WORD PTR [edx+0x68c62e31],bp
  42453c:	jle    0x42452c
  42453e:	pop    ebp
  42453f:	dec    esp
  424540:	in     eax,dx
  424541:	inc    ecx
  424542:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424543:	out    dx,eax
  424544:	aas    
  424545:	in     al,dx
  424546:	ret    
  424547:	arpl   bp,bp
  424549:	div    BYTE PTR [edx]
  42454b:	or     BYTE PTR [ecx-0x2e],ah
  42454e:	xchg   edi,eax
  42454f:	pop    esp
  424550:	pop    ds
  424551:	loopne 0x42451f
  424553:	sbb    BYTE PTR [ebx+0x67c86232],0xe6
  42455a:	icebp  
  42455b:	mov    DWORD PTR [eax+eax*2+0x1a851b56],edi
  424562:	aad    0x55
  424564:	mov    ah,0x2d
  424566:	xor    BYTE PTR [eax-0x25],dl
  424569:	scas   al,BYTE PTR es:[edi]
  42456a:	stos   DWORD PTR es:[edi],eax
  42456b:	sbb    DWORD PTR [eax],0xf44cc37d
  424571:	int    0xac
  424573:	loopne 0x4245b1
  424575:	push   esp
  424576:	int    0xcc
  424578:	ret    0x7366
  42457b:	pop    ebx
  42457c:	jge    0x42459a
  42457e:	cmc    
  42457f:	cmc    
  424580:	push   ds
  424581:	test   DWORD PTR [eax+0x6fe5953f],edx
  424587:	retf   0x6fa1
  42458a:	enter  0xdc6a,0x1a
  42458e:	jmp    0x42452b
  424590:	in     eax,dx
  424591:	jae    0x42455d
  424593:	aam    0xc1
  424595:	test   BYTE PTR [esi-0x41a25dd0],0x17
  42459c:	outs   dx,BYTE PTR ds:[esi]
  42459d:	enter  0x4f4e,0x3a
  4245a1:	les    edi,FWORD PTR [eax-0x17]
  4245a4:	iret   
  4245a5:	mov    dh,0x6f
  4245a7:	dec    ebx
  4245a8:	sbb    esi,DWORD PTR [edx]
  4245aa:	cmp    DWORD PTR [edi-0x46],eax
  4245ad:	push   ebp
  4245ae:	js     0x424615
  4245b0:	sbb    al,0x4f
  4245b2:	dec    eax
  4245b3:	xchg   DWORD PTR [ebx],esp
  4245b5:	cs xchg ebp,eax
  4245b7:	inc    esp
  4245b8:	test   BYTE PTR [edx],0x46
  4245bb:	inc    edi
  4245bc:	pop    ebp
  4245bd:	mov    al,ds:0xad51ee0b
  4245c2:	in     al,dx
  4245c3:	inc    esp
  4245c4:	popf   
  4245c5:	in     al,0x86
  4245c7:	mov    ds:0x85b6fae6,al
  4245cc:	ja     0x4245f2
  4245ce:	sub    DWORD PTR [edi+0x329455e5],ecx
  4245d4:	retf   0xca86
  4245d7:	in     eax,dx
  4245d8:	cs sbb al,0xa7
  4245db:	shl    DWORD PTR [edi+0xf921226],1
  4245e1:	mov    edx,0x31c7c450
  4245e6:	dec    esi
  4245e7:	(bad)  
  4245e8:	addr16 mov ds:0xa787,al
  4245ec:	rol    BYTE PTR [edx+ebx*1+0x1c],0x5
  4245f1:	jmp    0x6d7ca463
  4245f6:	push   ds
  4245f7:	icebp  
  4245f8:	sahf   
  4245f9:	or     BYTE PTR [eax-0x51],al
  4245fc:	mov    al,0x63
  4245fe:	ret    
  4245ff:	ins    DWORD PTR es:[edi],dx
  424600:	enter  0xca0d,0xb9
  424604:	inc    ecx
  424605:	and    al,0xf7
  424607:	and    dl,0xd7
  42460a:	leave  
  42460b:	and    eax,0x46511a04
  424610:	xor    BYTE PTR [esi],bh
  424612:	ja     0x4245d8
  424614:	inc    ecx
  424615:	rcl    DWORD PTR [edx],cl
  424617:	addr16 cli 
  424619:	adc    eax,0xd4a13092
  42461e:	(bad)  
  42461f:	stos   BYTE PTR es:[edi],al
  424620:	loope  0x4245aa
  424622:	fbstp  TBYTE PTR [eax+0x30]
  424625:	mov    DWORD PTR [ecx+esi*1-0x27be0097],esp
  42462c:	and    cl,BYTE PTR [ebx+eax*1-0x2f]
  424630:	mov    al,ds:0xd9e52e9b
  424635:	xchg   ebx,eax
  424636:	xchg   ecx,eax
  424637:	adc    eax,0xd4a533bc
  42463c:	js     0x4245c6
  42463e:	mov    cl,0x14
  424640:	push   ss
  424641:	ins    DWORD PTR es:[edi],dx
  424642:	ss push es
  424644:	ins    BYTE PTR es:[edi],dx
  424645:	stos   DWORD PTR es:[edi],eax
  424646:	mov    ebx,0xf3ee477a
  42464b:	sub    eax,0x679fc9a1
  424650:	shr    DWORD PTR [edi],cl
  424652:	adc    eax,0xcf164402
  424657:	mov    BYTE PTR [ecx-0x1e],0x7e
  42465b:	je     0x1083a4f2
  424661:	imul   esp,DWORD PTR [eax+0x1a],0xa2789806
  424668:	sub    BYTE PTR [edx+0x69],al
  42466b:	cs test ah,0x8b
  42466f:	push   cs
  424670:	add    edi,DWORD PTR [edi-0x7bc4393f]
  424676:	or     cl,BYTE PTR [esi+0xd36eb7b]
  42467c:	call   0xc8da:0x1874630a
  424683:	test   eax,0xb747bc27
  424688:	dec    ebp
  424689:	cmp    DWORD PTR [esi+0x40fa7d18],eax
  42468f:	int    0x1
  424691:	cwde   
  424692:	sub    eax,0xd9ae2b92
  424697:	push   ebx
  424698:	sub    ch,cl
  42469a:	jne    0x42467b
  42469c:	add    ch,BYTE PTR [edx]
  42469e:	push   ecx
  42469f:	cdq    
  4246a0:	aad    0x18
  4246a2:	sub    dl,0x6f
  4246a5:	gs push edx
  4246a7:	mov    ecx,0x7d28ef1c
  4246ac:	icebp  
  4246ad:	loop   0x424646
  4246af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4246b0:	mov    al,ds:0x66cb241e
  4246b5:	jmp    0xf9c11aae
  4246ba:	inc    edx
  4246bb:	and    DWORD PTR [ebx],ebp
  4246bd:	loopne 0x424700
  4246bf:	xchg   ebp,eax
  4246c0:	enter  0x6ee1,0xf5
  4246c4:	add    ebp,DWORD PTR [edi+eax*1-0x69b224b1]
  4246cb:	mov    ecx,DWORD PTR [ecx]
  4246cd:	arpl   WORD PTR [edi-0x2a],sp
  4246d0:	push   cs
  4246d1:	mov    edx,0xa383e6b9
  4246d6:	adc    eax,0x82b61d96
  4246db:	adc    DWORD PTR [ecx],0xfffffffd
  4246de:	ins    DWORD PTR es:[edi],dx
  4246df:	sub    ah,BYTE PTR [edx+0x1b8ad48c]
  4246e5:	pop    eax
  4246e6:	sbb    ah,BYTE PTR [eax]
  4246e8:	and    BYTE PTR [eax-0x76],cl
  4246eb:	clc    
  4246ec:	jp     0x4246e0
  4246ee:	dec    esp
  4246ef:	rcl    DWORD PTR [edx+0x32c2545c],0x42
  4246f6:	inc    esp
  4246f7:	aas    
  4246f8:	cmp    eax,0xe8d83bcd
  4246fd:	mov    esp,0x1dede39c
  424702:	rol    BYTE PTR [esi+edi*1+0x65],cl
  424706:	or     edi,DWORD PTR [ebx+0x719bd6d1]
  42470c:	scas   eax,DWORD PTR es:[edi]
  42470d:	leave  
  42470e:	mov    WORD PTR [eax],?
  424710:	xor    DWORD PTR [esi+esi*1],esi
  424713:	scas   eax,DWORD PTR es:[edi]
  424714:	mov    ah,0xe5
  424716:	loopne 0x4246c4
  424718:	xchg   esp,eax
  424719:	inc    ecx
  42471a:	mov    cs,WORD PTR [eax]
  42471c:	xor    eax,0x469e9ad1
  424721:	mov    DWORD PTR [ebp-0x31],edi
  424724:	gs inc edx
  424726:	sbb    bl,ch
  424728:	or     BYTE PTR [esi],bh
  42472a:	sub    bl,dh
  42472c:	or     BYTE PTR [esi-0x7b],bl
  42472f:	adc    ebp,ebp
  424731:	sbb    BYTE PTR [esp+ebx*4],ch
  424734:	jl     0x42479a
  424736:	inc    ecx
  424737:	push   es
  424738:	xchg   DWORD PTR [ebx+0x7ac3a58c],esi
  42473e:	push   eax
  42473f:	mov    dh,ch
  424741:	or     ah,BYTE PTR [ebp+0x16]
  424744:	push   edi
  424745:	sub    bl,BYTE PTR [edi-0x14]
  424748:	push   cs
  424749:	xchg   ebx,eax
  42474a:	fwait
  42474b:	or     bh,al
  42474d:	loope  0x42478a
  42474f:	mov    esi,0x3c9ab764
  424754:	lds    eax,FWORD PTR ds:0x449431fd
  42475a:	jle    0x4246e0
  42475c:	retf   0x5d5c
  42475f:	in     al,dx
  424760:	add    bl,bh
  424762:	cmp    edx,esp
  424764:	inc    ebp
  424765:	add    ebx,DWORD PTR [edx-0x248e58c4]
  42476b:	es mov DWORD PTR es:[esi],ebx
  42476f:	cmp    BYTE PTR [edx+0x3af3289c],bl
  424775:	mov    bl,0x1e
  424777:	push   ss
  424778:	ds jp  0x42472b
  42477b:	pop    edx
  42477c:	push   ecx
  42477d:	loopne 0x42475b
  42477f:	ds push ebx
  424781:	sar    DWORD PTR [esp+esi*1],cl
  424784:	(bad)  
  424785:	(bad)  
  424786:	push   ebp
  424787:	cmp    DWORD PTR [ecx+0x46],ecx
  42478a:	dec    esi
  42478b:	sti    
  42478c:	push   eax
  42478d:	jns    0x424750
  42478f:	mov    ah,0xdc
  424791:	adc    edx,DWORD PTR [ebp+0x7003976b]
  424797:	cmp    DWORD PTR [edx+0x7a],esp
  42479a:	dec    esi
  42479b:	ret    
  42479c:	mov    WORD PTR [edx+0x44734705],?
  4247a2:	lea    edi,[eax-0x482254c5]
  4247a8:	mov    esi,0x3c57cd
  4247ad:	sbb    al,0x60
  4247af:	out    dx,al
  4247b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247b1:	cmp    al,0xac
  4247b3:	int3   
  4247b4:	and    BYTE PTR [eax],bh
  4247b6:	shl    BYTE PTR [ebx],0xdd
  4247b9:	aad    0xf1
  4247bb:	ins    DWORD PTR es:[edi],dx
  4247bc:	std    
  4247bd:	pop    ds
  4247be:	mov    esp,0xddb5e622
  4247c3:	xchg   ebx,eax
  4247c4:	jl     0x4247b7
  4247c6:	ins    BYTE PTR es:[edi],dx
  4247c7:	enter  0x4535,0x32
  4247cb:	xlat   BYTE PTR ds:[ebx]
  4247cc:	fsub   DWORD PTR [esp+esi*4+0x1232f3b5]
  4247d3:	add    al,0x77
  4247d5:	push   ecx
  4247d6:	call   0x45ed:0xb6b8f858
  4247dd:	push   edx
  4247de:	mov    dh,0x17
  4247e0:	push   ds
  4247e1:	and    edi,DWORD PTR [ebx-0x628ea598]
  4247e7:	and    BYTE PTR [eax+0x31],dh
  4247ea:	sti    
  4247eb:	mov    bl,0x63
  4247ed:	stc    
  4247ee:	inc    esi
  4247ef:	mov    DWORD PTR [esi],eax
  4247f1:	fdiv   QWORD PTR [ebx-0x20]
  4247f4:	pop    edx
  4247f5:	jle    0x424795
  4247f7:	push   edi
  4247f8:	outs   dx,DWORD PTR ds:[esi]
  4247f9:	or     DWORD PTR [edx+0x72],edx
  4247fc:	or     ecx,DWORD PTR [esi-0x533f5c8]
  424802:	pop    ebx
  424803:	or     eax,0x9413ac6b
  424808:	push   ebx
  424809:	pop    eax
  42480a:	and    esp,DWORD PTR [eax+edx*2]
  42480d:	cmc    
  42480e:	jns    0x4247cb
  424810:	les    esi,FWORD PTR [edi-0x27]
  424813:	loop   0x4247b6
  424815:	sub    DWORD PTR [esp+ecx*4-0x5d],ebx
  424819:	xor    BYTE PTR [esi],0x9f
  42481c:	data16 in al,dx
  42481e:	dec    ecx
  42481f:	sub    WORD PTR gs:[edx],sp
  424823:	jns    0x42480d
  424825:	es push 0xefd9b339
  42482b:	fsub   QWORD PTR [ecx-0x14]
  42482e:	xchg   ebx,eax
  42482f:	jg     0x4247e2
  424831:	cmp    DWORD PTR [ebx],eax
  424833:	lock rcr DWORD PTR [eax],1
  424836:	mov    esp,0x97fba4fe
  42483b:	adc    al,0x12
  42483d:	ror    DWORD PTR [esi],cl
  42483f:	jns    0x424846
  424841:	aad    0x53
  424843:	add    DWORD PTR [ecx-0x304e69c5],esp
  424849:	clc    
  42484a:	(bad)  
  42484b:	scas   eax,DWORD PTR es:[edi]
  42484c:	mov    eax,ds:0x1ab87699
  424851:	sub    BYTE PTR [ecx-0x73879df1],dh
  424857:	aam    0x48
  424859:	aas    
  42485a:	out    0xf2,eax
  42485c:	out    0x17,al
  42485e:	popf   
  42485f:	fimul  DWORD PTR [edi-0x55]
  424862:	cmp    dh,al
  424864:	js     0x424824
  424866:	xor    DWORD PTR [ebx],edx
  424868:	mov    ah,BYTE PTR [edi+0x6cfc11e5]
  42486e:	add    al,0xd3
  424870:	fld    TBYTE PTR [ebp+0x2c]
  424873:	mov    WORD PTR [esi+edx*8],fs
  424876:	push   ss
  424877:	pop    ebx
  424878:	in     al,dx
  424879:	iret   
  42487a:	sbb    dh,0xdd
  42487d:	loopne 0x424881
  42487f:	jle    0x4248fb
  424881:	inc    ebx
  424882:	inc    esi
  424883:	shl    DWORD PTR [edx+0x38],1
  424886:	inc    eax
  424887:	pop    eax
  424888:	push   esi
  424889:	rcr    BYTE PTR [eax],1
  42488b:	mov    eax,DWORD PTR [esi-0x1368a472]
  424891:	call   DWORD PTR [esi+0xf]
  424894:	pop    ecx
  424895:	js     0x4248ad
  424897:	out    0x48,eax
  424899:	dec    edi
  42489a:	popa   
  42489b:	ins    BYTE PTR es:[edi],dx
  42489c:	xor    DWORD PTR [eax-0x49],0xffffffcb
  4248a0:	xor    DWORD PTR [esi],ebp
  4248a2:	call   0x12adee29
  4248a7:	pop    edx
  4248a8:	ins    DWORD PTR es:[edi],dx
  4248a9:	into   
  4248aa:	ror    DWORD PTR [ecx-0x30],cl
  4248ad:	mov    fs,WORD PTR [eax+0xd]
  4248b0:	hlt    
  4248b1:	adc    eax,0x4445cd4d
  4248b6:	mov    DWORD PTR [ebp+0x54381223],esi
  4248bc:	push   es
  4248bd:	enter  0xffde,0x52
  4248c1:	je     0x424941
  4248c3:	push   0xbe3126b2
  4248c8:	fidiv  WORD PTR [ebx+0x7575fa1]
  4248ce:	push   0xffffffe2
  4248d0:	pop    esp
  4248d1:	aam    0xca
  4248d3:	sub    esi,0xe105b798
  4248d9:	xor    edi,esi
  4248db:	sbb    al,0x6f
  4248dd:	loop   0x424877
  4248df:	adc    al,0x74
  4248e1:	mov    ecx,0x29156272
  4248e6:	mov    esp,ds
  4248e8:	cmp    al,0xa4
  4248ea:	iret   
  4248eb:	xor    eax,0x47a6ba56
  4248f0:	das    
  4248f1:	xchg   BYTE PTR [edi-0x2a8790c5],ah
  4248f7:	jge    0x42488c
  4248f9:	push   esp
  4248fa:	scas   eax,DWORD PTR es:[edi]
  4248fb:	xchg   BYTE PTR [esi-0x1d],al
  4248fe:	gs sbb al,0x44
  424901:	xchg   ecx,eax
  424902:	xor    al,0x91
  424904:	cmp    cl,BYTE PTR [ebx+0x5d493701]
  42490a:	sbb    eax,0x293be2b3
  42490f:	(bad)  
  424911:	mov    bh,0x67
  424913:	test   BYTE PTR [ecx-0x9],bl
  424916:	loop   0x424978
  424918:	std    
  424919:	out    dx,al
  42491a:	push   esi
  42491b:	mov    ebp,0x7ec70704
  424920:	pusha  
  424921:	mov    dl,0xc1
  424923:	mov    ch,0xfe
  424925:	popf   
  424926:	lahf   
  424927:	add    esp,eax
  424929:	push   ecx
  42492a:	inc    ebx
  42492b:	inc    esi
  42492c:	add    al,0xa6
  42492e:	add    BYTE PTR [eax],al
  424930:	add    BYTE PTR [eax],al
  424932:	adc    ecx,DWORD PTR [ebp-0x104094d7]
  424938:	push   ebx
  424939:	std    
  42493a:	and    ebp,DWORD PTR [ebx-0x25]
  42493d:	(bad)  
  42493e:	fwait
  42493f:	mov    eax,ds:0xc239c0df
  424944:	add    DWORD PTR [eax],eax
  424946:	hlt    
  424947:	add    al,0x0
  424949:	add    dh,al
  42494b:	and    al,0x72
  42494d:	ss add eax,0x59c9cce4
  424953:	mov    esi,0x70da1f0a
  424958:	jl     0x42493d
  42495a:	cmp    DWORD PTR [esi-0x3fb57199],esi
  424960:	inc    edx
  424961:	popf   
  424962:	ins    DWORD PTR es:[edi],dx
  424963:	pusha  
  424964:	dec    esi
  424965:	jg     0x42495a
  424967:	stos   DWORD PTR es:[edi],eax
  424968:	mov    esi,0xb0eb4440
  42496d:	xchg   esp,eax
  42496e:	loope  0x4249a2
  424970:	jno    0x424972
  424972:	xchg   edx,eax
  424973:	cld    
  424974:	(bad)  
  424975:	into   
  424976:	cmp    al,0x55
  424979:	test   edx,edi
  42497b:	mov    eax,0xc15633de
  424980:	ror    DWORD PTR [ecx],0xc7
  424983:	out    0x36,al
  424985:	push   ebp
  424986:	xchg   esi,eax
  424987:	shl    DWORD PTR [esi-0x77],cl
  42498a:	pop    ebp
  42498b:	imul   edx,DWORD PTR [edi-0x38],0xffffff8d
  42498f:	sub    DWORD PTR [esp+edx*8+0x9fbc142],0x3e
  424997:	inc    esi
  424998:	cmp    ebp,DWORD PTR [eax+0x1de1a53c]
  42499e:	xor    eax,0xdba46483
  4249a3:	push   0xffffffb2
  4249a5:	inc    ecx
  4249a6:	mov    dl,0xa
  4249a8:	and    BYTE PTR cs:[edi],al
  4249ab:	xor    eax,0xdcdaf925
  4249b0:	jl     0x424a06
  4249b2:	inc    eax
  4249b3:	imul   ecx,DWORD PTR [edx+0x45d02943],0x30
  4249ba:	sub    eax,0xf966c67f
  4249bf:	jmp    0x424995
  4249c1:	fcmovnb st,st(3)
  4249c3:	jmp    0x94bf7ce5
  4249c8:	std    
  4249c9:	leave  
  4249ca:	push   eax
  4249cb:	lock and eax,0x44eb7220
  4249d1:	leave  
  4249d2:	dec    ebx
  4249d3:	ficom  DWORD PTR [edx]
  4249d5:	pop    eax
  4249d6:	jno    0x424a16
  4249d8:	stos   BYTE PTR es:[edi],al
  4249d9:	test   eax,0xf3e8f3d7
  4249de:	or     BYTE PTR [ecx+0x45371888],ch
  4249e4:	notrack call DWORD PTR [edi-0x20aa2fd4]
  4249eb:	retf   
  4249ec:	mov    edi,0xc91ecf34
  4249f1:	push   ds
  4249f2:	mov    BYTE PTR [edx],bh
  4249f4:	cs inc edi
  4249f6:	push   ecx
  4249f7:	push   edx
  4249f8:	mov    WORD PTR [ecx],?
  4249fa:	enter  0xbdf0,0xd7
  4249fe:	inc    esi
  4249ff:	cmp    esi,DWORD PTR [ebp-0x6e]
  424a02:	or     edi,esp
  424a04:	push   esp
  424a05:	cmp    ecx,DWORD PTR [edi+eax*8]
  424a08:	sub    DWORD PTR [esi+0x51],0x536d4d25
  424a0f:	jecxz  0x4249a7
  424a11:	dec    esp
  424a12:	xor    BYTE PTR [edx+0x6b434880],ch
  424a18:	scas   al,BYTE PTR es:[edi]
  424a19:	xchg   ebx,eax
  424a1a:	lods   eax,DWORD PTR ds:[esi]
  424a1b:	call   0x6d611248
  424a20:	jb     0x4249e9
  424a22:	push   esi
  424a23:	push   ecx
  424a24:	cmp    ch,BYTE PTR [ecx]
  424a26:	dec    ebp
  424a27:	loopne 0x424a2b
  424a29:	in     al,0xf1
  424a2b:	stc    
  424a2c:	ins    DWORD PTR es:[edi],dx
  424a2d:	mov    al,0xd2
  424a2f:	xchg   esp,eax
  424a30:	jle    0x4249c9
  424a32:	popa   
  424a33:	push   eax
  424a34:	xlat   BYTE PTR ds:[ebx]
  424a35:	add    BYTE PTR [ebx],0xe
  424a38:	inc    esp
  424a39:	jp     0x424a80
  424a3b:	and    BYTE PTR [ebx-0x72a7aa22],ah
  424a41:	lods   eax,DWORD PTR ds:[esi]
  424a42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424a43:	test   eax,0xb5a39b4c
  424a48:	repnz pop ss
  424a4a:	sub    dh,ch
  424a4c:	fadd   QWORD PTR [esi+0x4a]
  424a4f:	xchg   ebp,eax
  424a50:	dec    esp
  424a51:	jmp    0xa3c291bf
  424a56:	fcmove st,st(0)
  424a58:	pushf  
  424a59:	jl     0x424aaf
  424a5b:	addr16 cmp al,0x4f
  424a5e:	test   DWORD PTR [edx],edx
  424a60:	lahf   
  424a61:	sbb    DWORD PTR [esp+ebp*1],eax
  424a64:	bnd ja 0x4249f1
  424a67:	sahf   
  424a68:	add    dl,dh
  424a6a:	dec    ebx
  424a6b:	push   ebx
  424a6c:	sar    ecx,cl
  424a6e:	sub    eax,0x1daacdc8
  424a73:	fs inc eax
  424a75:	test   BYTE PTR fs:[esi],0xfd
  424a79:	iret   
  424a7a:	outs   dx,BYTE PTR ds:[esi]
  424a7b:	pop    ecx
  424a7c:	push   esp
  424a7d:	add    eax,0xb846c04d
  424a82:	inc    esp
  424a83:	sub    BYTE PTR ds:0xeabf2ed1,0x62
  424a8a:	idiv   BYTE PTR [eax-0x58]
  424a8d:	idiv   bh
  424a8f:	cld    
  424a90:	ficomp WORD PTR [ecx+0x773c07d8]
  424a96:	cmp    BYTE PTR [ecx+0x17],bl
  424a99:	or     eax,0xde30340d
  424a9e:	sub    DWORD PTR [edx+0x2a],eax
  424aa1:	das    
  424aa2:	sub    al,0xf3
  424aa4:	out    0x32,al
  424aa6:	popf   
  424aa7:	(bad)  
  424aa8:	outs   dx,DWORD PTR ds:[esi]
  424aa9:	out    0xbe,eax
  424aab:	test   DWORD PTR [ebx-0x1c],ecx
  424aae:	popf   
  424aaf:	mov    al,BYTE PTR ds:0xa5c4016a
  424ab5:	jmp    0xdf0e:0x5764ca4
  424abc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424abd:	outs   dx,BYTE PTR ds:[si]
  424abf:	jmp    0x8d94:0xe3f3
  424ac5:	sbb    ah,BYTE PTR [di-0x5888]
  424aca:	(bad)  
  424acb:	cmp    ebx,DWORD PTR [esi-0x65]
  424ace:	mov    edi,0xfbdd5757
  424ad3:	or     BYTE PTR [eax+0x30],dh
  424ad6:	ror    ch,cl
  424ad8:	ficomp DWORD PTR [esi+edx*1]
  424adb:	xor    BYTE PTR [esi+0x5f11d598],0x52
  424ae2:	push   esp
  424ae3:	fisttp WORD PTR ds:0x71c47ace
  424ae9:	call   0xfba7:0xc23aefa6
  424af0:	jb     0x424aa0
  424af2:	stc    
  424af3:	jo     0x424ac5
  424af5:	mov    BYTE PTR [edx-0x79],ah
  424af8:	inc    esp
  424af9:	inc    eax
  424afa:	out    dx,al
  424afb:	test   DWORD PTR [ebp+ebx*4-0x41d1d9b8],edx
  424b02:	adc    eax,0xef8e7baf
  424b07:	lock xchg ebx,eax
  424b09:	jecxz  0x424a98
  424b0b:	ds pushf 
  424b0d:	cmp    BYTE PTR [ecx+0x64],dl
  424b10:	dec    ebx
  424b11:	bound  eax,QWORD PTR [edx-0x66db8894]
  424b17:	unpcklps xmm3,XMMWORD PTR [esp+eax*2-0x1b]
  424b1c:	cmp    DWORD PTR ds:0x58fe901b,edi
  424b22:	cmp    DWORD PTR [ebx-0x5144dc78],edx
  424b28:	loopne 0x424b0e
  424b2a:	inc    edi
  424b2b:	call   0xc295b57c
  424b30:	pusha  
  424b31:	enter  0x5209,0x8c
  424b35:	lods   al,BYTE PTR ds:[esi]
  424b36:	fbstp  TBYTE PTR [eax]
  424b38:	mov    dl,0xee
  424b3a:	call   DWORD PTR [ebx-0x2721b003]
  424b40:	test   BYTE PTR [esi-0x4a],bl
  424b43:	or     esi,DWORD PTR [ebp-0x25976505]
  424b49:	mov    esp,0x8b784881
  424b4e:	sbb    ebp,DWORD PTR [esi+0x47de1749]
  424b54:	rol    bl,1
  424b56:	sbb    al,0x2c
  424b58:	ficom  DWORD PTR [edx+esi*8+0x3a]
  424b5c:	imul   edx,DWORD PTR [ebp+0x40c62a76],0x3e
  424b63:	jg     0x424b96
  424b65:	push   eax
  424b66:	mov    dh,0xad
  424b68:	push   eax
  424b69:	jae    0x424bc0
  424b6b:	dec    ecx
  424b6c:	push   ebx
  424b6d:	retf   
  424b6e:	fisttp QWORD PTR [ecx-0x48]
  424b71:	and    DWORD PTR [ecx+0xf],ebx
  424b74:	add    eax,0x4e8c271
  424b79:	xchg   esp,eax
  424b7a:	push   ebx
  424b7b:	leave  
  424b7c:	ja     0x424be7
  424b7e:	pop    eax
  424b7f:	out    0x29,eax
  424b81:	scas   eax,DWORD PTR es:[edi]
  424b82:	in     eax,dx
  424b83:	xor    bh,BYTE PTR [ebp-0x24]
  424b86:	cmp    eax,0x5ef7a6a9
  424b8b:	or     eax,0x12ae236
  424b90:	mov    bl,0xb4
  424b92:	scas   eax,DWORD PTR es:[edi]
  424b93:	jle    0x424bb7
  424b95:	mov    ebp,0xae1c8a0c
  424b9a:	mov    esi,0x8f134344
  424b9f:	dec    ecx
  424ba0:	jecxz  0x424b84
  424ba2:	ror    BYTE PTR [ebx+0x241e9d4f],cl
  424ba8:	pop    eax
  424ba9:	inc    ecx
  424baa:	inc    ebx
  424bab:	arpl   WORD PTR [ebx+0x1f],bx
  424bae:	add    al,0xb1
  424bb0:	mov    ecx,0xdbaa3027
  424bb5:	jns    0x424b68
  424bb7:	(bad)  
  424bb8:	out    dx,al
  424bb9:	jp     0x424c23
  424bbb:	mov    al,ds:0x82cd8ab1
  424bc0:	iret   
  424bc1:	sub    BYTE PTR [ebx-0x4e],0xc5
  424bc5:	test   WORD PTR [esi+ecx*1-0x69],si
  424bca:	xchg   edi,eax
  424bcb:	call   eax
  424bcd:	ret    0xab31
  424bd0:	dec    ecx
  424bd1:	repz inc eax
  424bd3:	inc    esi
  424bd4:	jmp    0x424c18
  424bd6:	scas   al,BYTE PTR es:[edi]
  424bd7:	jg     0x424c26
  424bd9:	fcomp  DWORD PTR [ecx-0x65a5b0d4]
  424bdf:	iret   
  424be0:	sbb    DWORD PTR [edx+0x1c6e548e],esp
  424be6:	std    
  424be7:	adc    esp,DWORD PTR [ebp-0x30c85406]
  424bed:	and    DWORD PTR [esp+edx*4],ebp
  424bf0:	adc    cl,ch
  424bf2:	and    ebx,ecx
  424bf4:	fistp  QWORD PTR [esi+0x79968043]
  424bfa:	fild   WORD PTR [edi+ecx*4+0x74]
  424bfe:	(bad)  
  424bff:	test   BYTE PTR [edi+edi*4-0x1eabf6b],0x3b
  424c07:	lods   eax,DWORD PTR ds:[esi]
  424c08:	stc    
  424c09:	push   edi
  424c0a:	pop    ebx
  424c0b:	xor    dl,BYTE PTR [eax]
  424c0d:	lahf   
  424c0e:	stos   BYTE PTR es:[edi],al
  424c0f:	or     al,0x24
  424c11:	pop    ebp
  424c12:	cmc    
  424c13:	retf   0xcc7a
  424c16:	sub    ch,BYTE PTR [eax-0x79e702bc]
  424c1c:	mov    dh,0x86
  424c1e:	pop    ebx
  424c1f:	(bad)  
  424c20:	popa   
  424c21:	inc    ecx
  424c22:	mov    ds:0x4aa2edfe,al
  424c27:	dec    edx
  424c28:	inc    esp
  424c29:	push   esi
  424c2a:	popa   
  424c2b:	call   ecx
  424c2d:	fincstp 
  424c2f:	dec    ecx
  424c30:	cmp    ah,BYTE PTR [ebx]
  424c32:	out    dx,al
  424c33:	ret    
  424c34:	mov    ecx,0xbe09adb7
  424c39:	adc    eax,0x23fe7325
  424c3e:	and    eax,esp
  424c40:	test   BYTE PTR ds:[edx-0x71],ah
  424c44:	push   0xaee38105
  424c49:	xor    eax,0xaa31f3e4
  424c4e:	bound  ecx,QWORD PTR [edx-0x76]
  424c51:	pop    edi
  424c52:	leave  
  424c53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c54:	test   eax,0xab20b2b5
  424c59:	mov    ch,0xff
  424c5b:	fisubr DWORD PTR [ebx]
  424c5d:	pop    edi
  424c5e:	push   cs
  424c5f:	xor    eax,0x9e1d1197
  424c64:	aam    0x4b
  424c66:	(bad)  
  424c67:	mov    esp,0xf219be36
  424c6c:	jne    0x424c83
  424c6e:	sub    al,0xee
  424c70:	repnz (bad) 
  424c72:	cmp    al,dl
  424c74:	(bad)  
  424c75:	mov    edx,0xcffbe175
  424c7a:	clc    
  424c7b:	lahf   
  424c7c:	iret   
  424c7d:	aad    0x3e
  424c7f:	jnp    0x424c95
  424c81:	mov    edi,0x58175ac7
  424c86:	push   ebp
  424c87:	enter  0x7a00,0x94
  424c8b:	mov    al,0x42
  424c8d:	xlat   BYTE PTR ds:[ebx]
  424c8e:	adc    BYTE PTR [edx-0x2d0b16ff],al
  424c94:	scas   al,BYTE PTR es:[edi]
  424c95:	sahf   
  424c96:	jg     0x424cd4
  424c98:	popf   
  424c99:	(bad)  
  424c9a:	js     0x424ce1
  424c9c:	sbb    BYTE PTR [ecx+eax*2],bh
  424c9f:	jge    0x424c7b
  424ca1:	retf   0x49d2
  424ca4:	pushf  
  424ca5:	mov    DWORD PTR [ecx],esp
  424ca7:	sbb    ah,BYTE PTR [ecx]
  424ca9:	in     eax,0x51
  424cab:	iret   
  424cac:	xlat   BYTE PTR ds:[ebx]
  424cad:	inc    edi
  424cae:	xlat   BYTE PTR ds:[ebx]
  424caf:	sar    ch,1
  424cb1:	inc    esp
  424cb2:	ja     0x424d01
  424cb4:	pop    ebp
  424cb5:	add    DWORD PTR [ecx],esp
  424cb7:	sbb    ah,ah
  424cb9:	call   0xab96:0x7af76a64
  424cc0:	rcr    DWORD PTR fs:[ebx-0x1e],0xa8
  424cc5:	aad    0x2d
  424cc7:	call   0x46787833
  424ccc:	jecxz  0x424d37
  424cce:	jb     0x424cf0
  424cd0:	mov    eax,0xe8f10977
  424cd5:	or     edi,DWORD PTR [ecx]
  424cd7:	lods   eax,DWORD PTR ds:[esi]
  424cd8:	(bad)  
  424cda:	(bad)  
  424cdb:	ins    BYTE PTR es:[edi],dx
  424cdc:	gs jno 0x424d2a
  424cdf:	(bad)  
  424ce1:	daa    
  424ce2:	adc    ah,dh
  424ce4:	mov    BYTE PTR [ebx],bh
  424ce6:	xchg   edx,eax
  424ce7:	les    ebx,FWORD PTR ds:0x70de7f05
  424ced:	mov    ebx,0x2c708b46
  424cf2:	xchg   esp,eax
  424cf3:	dec    esi
  424cf4:	cli    
  424cf5:	dec    ebx
  424cf6:	dec    ebx
  424cf7:	dec    esi
  424cf8:	and    al,BYTE PTR [eax-0x2a]
  424cfb:	xchg   edi,eax
  424cfc:	outs   dx,BYTE PTR ds:[esi]
  424cfd:	or     DWORD PTR ss:[ebp-0xd51c624],ecx
  424d04:	mov    eax,0xf7fdf52e
  424d09:	ins    BYTE PTR es:[edi],dx
  424d0a:	push   ss
  424d0b:	pop    edi
  424d0c:	sub    BYTE PTR [ebx-0x7a],ch
  424d0f:	ror    BYTE PTR [eax],0x72
  424d12:	pushf  
  424d13:	or     BYTE PTR [edx],al
  424d15:	iret   
  424d16:	and    eax,0xcf70eaa6
  424d1b:	stos   BYTE PTR es:[edi],al
  424d1c:	(bad)
  424d1f:	aaa    
  424d20:	push   ss
  424d21:	mov    edx,ds
  424d23:	test   eax,0x4f751124
  424d28:	cmp    esp,DWORD PTR [edx-0x230afa6d]
  424d2e:	push   esi
  424d2f:	ins    DWORD PTR es:[edi],dx
  424d30:	icebp  
  424d31:	sbb    dh,BYTE PTR [esi]
  424d33:	gs xchg esi,eax
  424d35:	inc    ebp
  424d36:	mov    ah,0x95
  424d38:	imul   esi,DWORD PTR [esi-0x477fde9c],0x35
  424d3f:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424d41:	inc    edx
  424d42:	dec    edx
  424d43:	repz pushf 
  424d45:	fistp  WORD PTR [eax+edx*1-0x2587ef6c]
  424d4c:	xor    al,0xf9
  424d4e:	(bad)  
  424d4f:	out    0x13,al
  424d51:	add    BYTE PTR [ebp+0x2],al
  424d54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d55:	pop    DWORD PTR [esi+edx*4-0x325f5166]
  424d5c:	inc    edx
  424d5d:	push   es
  424d5e:	(bad)  
  424d5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d60:	xor    eax,0xb6f8d4de
  424d65:	add    eax,0xd8677b53
  424d6a:	and    eax,DWORD PTR [edx]
  424d6c:	test   BYTE PTR [ebx+esi*2-0x440d5395],ah
  424d73:	pop    esp
  424d74:	adc    dh,bh
  424d76:	dec    edx
  424d77:	mov    edx,esp
  424d79:	rcr    DWORD PTR [ecx-0x1a],1
  424d7c:	jnp    0x424db0
  424d7e:	mov    esi,esi
  424d80:	shl    edi,0xee
  424d83:	dec    DWORD PTR [ecx]
  424d85:	xchg   ebp,eax
  424d86:	inc    esi
  424d87:	push   es
  424d88:	fidivr WORD PTR ds:0x6b9db303
  424d8e:	ret    0x32bb
  424d91:	push   esp
  424d92:	cmp    al,0xe0
  424d94:	pop    es
  424d95:	and    esp,DWORD PTR [eax+eax*1+0x69]
  424d99:	pop    edi
  424d9a:	or     eax,0x49c34121
  424d9f:	or     al,ah
  424da1:	mov    esp,0xd869098
  424da6:	iret   
  424da7:	push   cs
  424da8:	not    BYTE PTR [ecx-0x34e41860]
  424dae:	xchg   BYTE PTR [ebp-0x9],al
  424db1:	push   cs
  424db2:	jne    0x424d3a
  424db4:	pop    eax
  424db5:	fs out 0xe1,eax
  424db8:	std    
  424db9:	dec    ecx
  424dba:	fnstsw WORD PTR [ecx-0x2cbe29df]
  424dc0:	fiadd  WORD PTR [ebp+0x314c807f]
  424dc6:	fst    DWORD PTR [edx]
  424dc8:	(bad)  
  424dc9:	aad    0x35
  424dcb:	int    0xf7
  424dcd:	gs add al,0x7
  424dd0:	xlat   BYTE PTR ds:[ebx]
  424dd1:	add    edx,esi
  424dd3:	rep lods al,BYTE PTR ds:[si]
  424dd6:	and    esp,esp
  424dd8:	cmc    
  424dd9:	inc    ebp
  424dda:	pop    ecx
  424ddb:	pushf  
  424ddc:	push   es
  424ddd:	call   0xe2a5a1ab
  424de2:	fld    DWORD PTR [edx+0x57779bdb]
  424de8:	out    dx,al
  424de9:	pop    ds
  424dea:	mov    bl,0xd8
  424dec:	push   eax
  424ded:	cdq    
  424dee:	jp     0x424e4c
  424df0:	or     ch,BYTE PTR [ecx+0x267c9513]
  424df6:	or     eax,0x16f42843
  424dfb:	sub    eax,0x8cd82aa2
  424e00:	cmp    al,0x6f
  424e02:	add    BYTE PTR [edi+0x25513ede],al
  424e08:	lock out dx,eax
  424e0a:	xor    al,BYTE PTR [ebp+ebx*4+0xa]
  424e0e:	call   0x5afd4ea5
  424e13:	ja     0x424e2f
  424e15:	xor    eax,0xeae1ad6a
  424e1a:	xchg   ebx,eax
  424e1b:	adc    ebx,DWORD PTR [eax-0x61e60fa0]
  424e21:	xlat   BYTE PTR ds:[ebx]
  424e22:	nop
  424e23:	xor    edx,esi
  424e25:	xchg   edi,eax
  424e26:	jnp    0x424e74
  424e28:	mov    ds:0x41258eb0,al
  424e2d:	loopne 0x424e73
  424e2f:	and    ch,ah
  424e31:	mov    ebp,0x895a8348
  424e36:	sbb    bh,BYTE PTR [esp+eax*2-0x51fd959e]
  424e3d:	mov    esp,0x0
  424e42:	add    BYTE PTR [edi+ecx*2+0x7],0xcf
  424e47:	bswap  eax
  424e49:	(bad)  
  424e4a:	test   al,0x2c
  424e4c:	dec    eax
  424e4d:	or     esp,DWORD PTR [edx-0x49]
  424e50:	clc    
  424e51:	call   0x4f4:0x1c72d
  424e58:	add    BYTE PTR [eax],al
  424e5a:	push   ebx
  424e5b:	mov    cs,WORD PTR [edx]
  424e5d:	push   ecx
  424e5e:	lods   al,BYTE PTR ds:[esi]
  424e5f:	add    DWORD PTR [edx-0x6d],esi
  424e62:	cdq    
  424e63:	push   0x64
  424e65:	leave  
  424e66:	cmc    
  424e67:	test   eax,0xe40da26c
  424e6c:	imul   dh
  424e6e:	dec    edx
  424e6f:	popa   
  424e70:	sahf   
  424e71:	mov    al,ds:0xa5b4f8ff
  424e76:	loop   0x424eaa
  424e78:	cli    
  424e79:	and    BYTE PTR [ecx+0xb],ah
  424e7c:	into   
  424e7d:	or     ebx,0x655a89a2
  424e83:	ret    
  424e84:	and    DWORD PTR [ebx+0x7790323f],esi
  424e8a:	sub    al,0x22
  424e8c:	clc    
  424e8d:	and    BYTE PTR [esi+0x12],0x22
  424e91:	shr    BYTE PTR [ebp-0x4bf93442],1
  424e97:	push   eax
  424e99:	push   edi
  424e9a:	jbe    0x424e71
  424e9c:	mov    bl,0x62
  424e9e:	push   ds
  424e9f:	fisubr WORD PTR [edx-0x241fd492]
  424ea5:	mov    ch,0x40
  424ea7:	jmp    0x62bed8fb
  424eac:	cdq    
  424ead:	mov    eax,DWORD PTR [esi]
  424eaf:	cmp    eax,0x56744db4
  424eb4:	ins    BYTE PTR es:[edi],dx
  424eb5:	fnstcw WORD PTR [esi]
  424eb7:	or     BYTE PTR [ecx],dl
  424eb9:	sti    
  424eba:	out    0xa3,eax
  424ebc:	test   BYTE PTR [ecx],al
  424ebe:	cmp    BYTE PTR [esi+0xa],bh
  424ec1:	and    al,0x78
  424ec3:	jo     0x424f15
  424ec5:	ja     0x424e67
  424ec7:	xor    al,0x1f
  424ec9:	dec    eax
  424eca:	(bad)  
  424ecb:	cld    
  424ecc:	loope  0x424f2d
  424ece:	mov    esi,0x5ac3b6f5
  424ed3:	xchg   DWORD PTR [ecx-0x77daa414],ebx
  424ed9:	or     ch,BYTE PTR [edx-0x4d]
  424edc:	jmp    0xf83e:0xf87435f5
  424ee3:	outs   dx,BYTE PTR ds:[esi]
  424ee4:	and    DWORD PTR [edx],0x26
  424ee7:	lahf   
  424ee8:	je     0x424f2a
  424eea:	cmp    BYTE PTR [eax],dh
  424eec:	data16 cld 
  424eee:	mov    al,0xe3
  424ef0:	sub    esp,DWORD PTR [edx]
  424ef2:	jp     0x424f17
  424ef4:	fs clc 
  424ef6:	dec    esi
  424ef7:	xchg   edi,eax
  424ef8:	or     eax,0x71075018
  424efd:	cmc    
  424efe:	shl    WORD PTR [eax-0x53286552],cl
  424f05:	xlat   BYTE PTR ds:[ebx]
  424f06:	sub    bl,bl
  424f08:	pop    eax
  424f09:	adc    ebp,DWORD PTR [ebx+0x2b]
  424f0c:	jge    0x424f80
  424f0e:	xchg   BYTE PTR [edi+0x588e041d],cl
  424f14:	jbe    0x424f40
  424f16:	or     eax,0x1c782a0
  424f1b:	call   0xc119c57d
  424f20:	mov    eax,0xf8f46973
  424f25:	mov    al,ds:0xc2a2ec93
  424f2a:	xchg   DWORD PTR [edi+0x59e26d03],eax
  424f30:	shl    DWORD PTR [esi],cl
  424f32:	jecxz  0x424f21
  424f34:	push   esp
  424f35:	or     BYTE PTR [ecx+0x2d8fcbcc],ah
  424f3b:	shr    BYTE PTR [bx+di+0x54],0x75
  424f40:	sbb    BYTE PTR [edx+0x3d],ah
  424f43:	std    
  424f44:	and    eax,0x6551cf90
  424f49:	call   0xf6f2:0xccfc9c76
  424f50:	ins    DWORD PTR es:[edi],dx
  424f51:	and    BYTE PTR [eax],bh
  424f53:	push   ecx
  424f54:	popf   
  424f55:	out    0xba,al
  424f57:	xchg   esi,eax
  424f58:	fcmovnb st,st(5)
  424f5a:	adc    eax,DWORD PTR [ebp-0x71e603fb]
  424f60:	test   DWORD PTR [ebx+0x59ce4e44],0x202702ce
  424f6a:	push   es
  424f6b:	dec    edi
  424f6c:	and    eax,0x8e92d46
  424f71:	add    BYTE PTR [edi+0x546d94fd],ch
  424f77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f78:	ins    BYTE PTR es:[edi],dx
  424f79:	dec    edi
  424f7a:	imul   esp,DWORD PTR [ecx+0x40],0xffffffc0
  424f7e:	idiv   DWORD PTR [edi]
  424f80:	(bad)  [ebx+0x72663bc]
  424f86:	sahf   
  424f87:	push   ebx
  424f88:	mov    edi,0xd8cb0541
  424f8d:	dec    ebx
  424f8e:	jmp    0x52c4:0x3b0f2261
  424f95:	stc    
  424f96:	(bad)  
  424f97:	xlat   BYTE PTR ds:[ebx]
  424f98:	cmc    
  424f99:	cmp    BYTE PTR [esi-0x70],0xcf
  424f9d:	or     bh,dl
  424f9f:	and    cl,BYTE PTR [ebx+esi*2-0x3b290af9]
  424fa6:	dec    ebp
  424fa7:	push   edi
  424fa8:	mov    dh,0x13
  424faa:	xor    ah,BYTE PTR [edi]
  424fac:	inc    esi
  424fad:	pop    ecx
  424fae:	leave  
  424faf:	jg     0x425006
  424fb1:	sub    BYTE PTR [ebp-0x7b0a559b],0x5e
  424fb8:	bound  eax,QWORD PTR [ebx]
  424fba:	aas    
  424fbb:	call   0xed75c709
  424fc0:	xchg   DWORD PTR [esi+0x30],eax
  424fc3:	sbb    edi,DWORD PTR [ebx-0x2a]
  424fc6:	push   esp
  424fc7:	sar    DWORD PTR [edi+0x75],0x4b
  424fcb:	fidiv  DWORD PTR [ebx+esi*4]
  424fce:	stos   DWORD PTR es:[edi],eax
  424fcf:	das    
  424fd0:	fwait
  424fd1:	jbe    0x424fa2
  424fd3:	push   edx
  424fd4:	dec    eax
  424fd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424fd7:	call   0xfef78dbf
  424fdc:	aad    0xff
  424fde:	fidiv  WORD PTR [esi-0x12]
  424fe1:	and    al,0xd4
  424fe3:	and    eax,0xc161ea96
  424fe8:	mov    dh,BYTE PTR [edi]
  424fea:	add    BYTE PTR [ecx-0x61],cl
  424fed:	inc    eax
  424fee:	enter  0x94ed,0xaf
  424ff2:	stos   BYTE PTR es:[edi],al
  424ff3:	add    esi,DWORD PTR [edx+0x72a88c04]
  424ff9:	jl     0x425015
  424ffb:	push   edx
  424ffc:	pop    ebx
  424ffd:	je     0x424fca
  424fff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425000:	mov    edi,0x35934ff7
  425005:	sbb    dl,BYTE PTR [edi+0x62]
  425008:	and    BYTE PTR [esi+0x5d],ch
  42500b:	test   al,0xdc
  42500d:	add    al,BYTE PTR [ebx]
  42500f:	sbb    eax,0x3d10167a
  425014:	std    
  425015:	cld    
  425016:	in     eax,dx
  425017:	sar    eax,1
  425019:	cld    
  42501a:	inc    edx
  42501b:	sub    ah,BYTE PTR [edx+edx*2-0x3a]
  42501f:	dec    eax
  425020:	ins    BYTE PTR es:[edi],dx
  425021:	shr    DWORD PTR [eax+ebp*1+0x4759ab2],1
  425028:	add    BYTE PTR [eax+eiz*1],cl
  42502b:	mul    DWORD PTR [ebx]
  42502d:	hlt    
  42502e:	shl    DWORD PTR [ecx-0x125f5c68],cl
  425034:	popf   
  425035:	dec    ecx
  425036:	or     edx,DWORD PTR [ecx]
  425038:	jnp    0x42507e
  42503a:	pop    edx
  42503b:	xor    BYTE PTR [edi+eiz*2],bh
  42503e:	xor    DWORD PTR [ebp+0x43],edx
  425041:	fptan  
  425043:	js     0x42500e
  425045:	mov    ebx,0x9297d0c0
  42504a:	das    
  42504b:	inc    esp
  42504c:	jae    0x4250bf
  42504e:	pop    es
  42504f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425050:	mov    esi,0xdfefb1b0
  425055:	adc    BYTE PTR [ebx+0x2a],0xa2
  425059:	jg     0x4250a5
  42505b:	out    dx,al
  42505c:	data16 add al,0x7e
  42505f:	retf   
  425060:	mov    cl,0x94
  425062:	stc    
  425063:	xchg   ecx,eax
  425064:	add    al,0xd9
  425066:	idiv   al
  425068:	inc    esi
  425069:	out    0x36,al
  42506b:	jo     0x425058
  42506d:	es cs dec esp
  425070:	pushf  
  425071:	fwait
  425072:	jl     0x425048
  425074:	fwait
  425075:	xchg   esp,eax
  425076:	nop
  425077:	data16 (bad) 
  425079:	mov    edx,0x5e64ab62
  42507e:	ror    BYTE PTR [edx],1
  425080:	(bad)
  425083:	ins    DWORD PTR es:[edi],dx
  425084:	popf   
  425085:	ror    BYTE PTR [eax],cl
  425087:	jo     0x4250b8
  425089:	lds    esp,FWORD PTR [edx]
  42508b:	add    eax,0xec1f1e49
  425090:	pusha  
  425091:	jnp    0x4250d9
  425093:	push   0xc
  425095:	int3   
  425096:	(bad)  
  425097:	add    DWORD PTR fs:[ebx+0x3fd8c50a],0xf8083ff
  4250a2:	mov    BYTE PTR [ecx-0x721d074f],dl
  4250a8:	jecxz  0x425048
  4250aa:	sahf   
  4250ab:	xchg   edi,eax
  4250ac:	rcr    BYTE PTR [ebx+0x1],1
  4250af:	aas    
  4250b0:	sub    cl,BYTE PTR [eax+0x11b9ec80]
  4250b6:	jge    0x4250ba
  4250b8:	jnp    0x425070
  4250ba:	sti    
  4250bb:	dec    eax
  4250bc:	(bad)  
  4250bd:	mov    dh,0xa7
  4250bf:	call   0x545db43a
  4250c4:	inc    ecx
  4250c5:	cwde   
  4250c6:	mov    al,0xd4
  4250c8:	jbe    0x42507c
  4250ca:	das    
  4250cb:	xor    esi,ebx
  4250cd:	or     BYTE PTR [ecx+0x77],dl
  4250d0:	cmp    ebx,DWORD PTR [ebp-0x6b]
  4250d3:	js     0x425072
  4250d5:	pop    ebp
  4250d6:	cmp    ah,cl
  4250d8:	jo     0x425060
  4250da:	mov    eax,0x40b84116
  4250df:	and    bl,BYTE PTR [ecx-0x71ab04f9]
  4250e5:	in     al,dx
  4250e6:	mov    edi,DWORD PTR [esi]
  4250e8:	leave  
  4250e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4250ea:	(bad)  
  4250eb:	pop    ebx
  4250ec:	sbb    BYTE PTR [esi+eiz*1+0x18],bh
  4250f0:	add    ecx,DWORD PTR [edi+edi*2]
  4250f3:	popa   
  4250f4:	lds    ecx,FWORD PTR [edi-0x2]
  4250f7:	fsubrp st(1),st
  4250f9:	push   0x68
  4250fb:	or     edx,ebp
  4250fd:	pushf  
  4250fe:	test   BYTE PTR [edi],bh
  425100:	dec    BYTE PTR [edx-0x4d]
  425103:	scas   eax,DWORD PTR es:[edi]
  425104:	mov    al,ds:0x6c3cea9c
  425109:	out    dx,eax
  42510a:	mov    ss,WORD PTR [edi]
  42510c:	mov    al,ds:0x817e5be6
  425111:	sub    DWORD PTR [edi+0x4bf7152d],ecx
  425117:	mov    al,0xe3
  425119:	and    ch,BYTE PTR es:[eax]
  42511c:	jo     0x4250a8
  42511e:	out    dx,eax
  42511f:	popf   
  425120:	and    edx,edx
  425122:	dec    ebx
  425123:	fs js  0x4250e9
  425126:	je     0x4250f7
  425128:	or     BYTE PTR [eax+ebx*8],dl
  42512b:	out    0x85,eax
  42512d:	cwde   
  42512e:	and    eax,0x45fb0688
  425133:	(bad)  
  425134:	and    cl,al
  425136:	stos   BYTE PTR es:[edi],al
  425137:	daa    
  425138:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425139:	push   esi
  42513a:	push   ecx
  42513b:	pop    ebp
  42513c:	pop    ss
  42513d:	or     BYTE PTR [eax],ch
  42513f:	xchg   ebx,eax
  425140:	nop
  425141:	mov    esi,0x41e14b23
  425146:	xor    BYTE PTR [ebp+esi*8+0x2f],ch
  42514a:	stc    
  42514b:	int3   
  42514c:	jb     0x42514b
  42514e:	mov    al,BYTE PTR [ecx]
  425150:	xchg   BYTE PTR [ebx+0x52637524],dl
  425156:	popf   
  425157:	xchg   DWORD PTR [edi-0x46fa1e4b],ebp
  42515d:	in     eax,dx
  42515e:	pop    es
  42515f:	inc    ebp
  425160:	jl     0x425177
  425162:	push   ds
  425163:	sbb    eax,0x57d6bcf2
  425168:	imul   ecx,DWORD PTR [edi+edx*1-0x1d638aa4],0xa656bb96
  425173:	arpl   WORD PTR [ecx+ebp*1+0x32f660dc],dx
  42517a:	inc    esp
  42517b:	outs   dx,BYTE PTR ds:[esi]
  42517c:	inc    ebp
  42517d:	fwait
  42517e:	stos   BYTE PTR es:[edi],al
  42517f:	xchg   ebx,eax
  425180:	sub    BYTE PTR [ebx],ah
  425182:	cmp    dh,ah
  425184:	test   BYTE PTR [edx],bh
  425186:	or     al,0xee
  425188:	aad    0x89
  42518a:	neg    BYTE PTR ds:0x8b3712b
  425190:	cmc    
  425191:	mov    ss,WORD PTR [ebx+0x56]
  425194:	adc    eax,0x23e7eadd
  425199:	pusha  
  42519a:	mov    ds:0x259042e8,al
  42519f:	dec    eax
  4251a0:	adc    ah,BYTE PTR ds:0x159bdfd1
  4251a6:	sub    al,0x40
  4251a8:	mov    esp,0x2852440a
  4251ad:	xchg   ecx,eax
  4251ae:	mov    eax,0x9be25e00
  4251b3:	leave  
  4251b4:	xor    eax,0x8691e371
  4251b9:	cmp    al,bh
  4251bb:	popf   
  4251bc:	mov    bl,BYTE PTR [ebx+0x5767c56c]
  4251c2:	aas    
  4251c3:	xchg   edx,eax
  4251c5:	(bad)  
  4251c6:	imul   ebp,DWORD PTR [ebx-0x1e],0x9b770ebe
  4251cd:	call   0xd618:0xa0a2d122
  4251d4:	sub    al,0x93
  4251d6:	dec    esp
  4251d7:	enter  0xd036,0xae
  4251db:	bound  ecx,QWORD PTR [edi+0xb]
  4251de:	mov    ebx,0x611d0412
  4251e3:	psllq  mm7,mm5
  4251e6:	loope  0x425192
  4251e8:	xchg   esi,eax
  4251e9:	and    eax,0xa24f082d
  4251ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251ef:	fsubr  DWORD PTR [ebx+0x2393e216]
  4251f5:	test   al,0xb9
  4251f7:	(bad)  
  4251f8:	push   edx
  4251f9:	popf   
  4251fa:	out    dx,eax
  4251fb:	aam    0x71
  4251fd:	into   
  4251fe:	cwde   
  4251ff:	nop
  425200:	pop    eax
  425201:	add    DWORD PTR [ecx],eax
  425203:	cld    
  425204:	mov    bl,dl
  425206:	jmp    0x4251c5
  425208:	stos   DWORD PTR es:[edi],eax
  425209:	ss push 0x68
  42520c:	xlat   BYTE PTR ds:[ebx]
  42520d:	push   0x9
  42520f:	inc    esp
  425210:	xchg   ecx,eax
  425211:	sbb    BYTE PTR [eax],dh
  425213:	(bad)  
  425216:	inc    ebp
  425217:	sub    bl,BYTE PTR [edi+0x3c]
  42521a:	pop    ebp
  42521b:	repz push edx
  42521d:	push   eax
  42521e:	popf   
  42521f:	push   edi
  425220:	dec    ebp
  425221:	fld    TBYTE PTR [ebx+0x25]
  425224:	mov    eax,0xf81288b1
  425229:	scas   al,BYTE PTR es:[edi]
  42522a:	inc    edx
  42522b:	repnz out 0xc7,eax
  42522e:	test   ebx,esi
  425230:	mov    bl,0xd6
  425232:	push   esp
  425233:	fisttp QWORD PTR [esi+0x79]
  425236:	(bad)  
  425237:	adc    edx,DWORD PTR [edx-0x26]
  42523a:	and    eax,0xff3d5229
  42523f:	add    eax,ecx
  425241:	jle    0x42520c
  425243:	dec    esi
  425244:	shl    bh,cl
  425246:	in     eax,0xa6
  425248:	jl     0x425233
  42524a:	cmp    al,0xed
  42524c:	scas   eax,DWORD PTR es:[edi]
  42524d:	scas   al,BYTE PTR es:[edi]
  42524e:	xor    BYTE PTR [edx],dh
  425250:	push   edi
  425251:	jge    0x425235
  425253:	cmp    BYTE PTR [esi-0x77],0xc2
  425257:	ja     0x425207
  425259:	mov    DWORD PTR [edi],ebp
  42525b:	mov    edx,0x8b345286
  425260:	and    al,0x1b
  425262:	gs sbb dh,ch
  425265:	cmp    esi,esi
  425267:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425268:	mov    bh,0x7a
  42526a:	add    eax,0xdb126bb9
  42526f:	iret   
  425270:	clc    
  425271:	pushf  
  425272:	push   cs
  425273:	inc    ebx
  425274:	test   DWORD PTR [ebp-0x1e2e1804],ebp
  42527a:	pop    ebp
  42527b:	xchg   ecx,eax
  42527c:	sbb    ebx,ebp
  42527e:	pop    edx
  42527f:	fisubr DWORD PTR [ebx-0x495515e6]
  425285:	test   DWORD PTR ds:0xafa9c01d,0xad006a56
  42528f:	js     0x4252ba
  425291:	mov    bh,0x95
  425293:	push   0xc
  425295:	and    DWORD PTR [eax+0x312cb8e3],0xacd0773
  42529f:	shl    DWORD PTR [ecx-0x46589010],0x17
  4252a6:	mov    eax,DWORD PTR [ebp+0x12c7f28b]
  4252ac:	cmp    al,0xc6
  4252ae:	cwde   
  4252af:	out    dx,al
  4252b0:	stos   DWORD PTR es:[edi],eax
  4252b1:	push   esi
  4252b2:	xchg   edx,eax
  4252b3:	mov    dh,0xe4
  4252b5:	mov    ah,0x2c
  4252b7:	into   
  4252b8:	add    bl,ah
  4252ba:	adc    DWORD PTR [ebx-0x17202f5d],edi
  4252c0:	add    ebp,DWORD PTR ds:0xcdbec369
  4252c6:	adc    BYTE PTR [edx],bl
  4252c8:	shl    BYTE PTR [ebp+0x58],1
  4252cb:	jg     0x42531a
  4252cd:	ret    0x762d
  4252d0:	fst    QWORD PTR [edi-0x3a8680f3]
  4252d6:	ret    
  4252d7:	lahf   
  4252d8:	xor    BYTE PTR [edx],al
  4252da:	mov    ch,0x67
  4252dc:	mov    eax,DWORD PTR [eax+eiz*8]
  4252df:	add    BYTE PTR [ecx+0x7b74eda],bl
  4252e5:	mov    ah,BYTE PTR [ecx+0x69ccbd81]
  4252eb:	arpl   di,si
  4252ed:	inc    edi
  4252ee:	pop    ds
  4252ef:	jns    0x4252e7
  4252f1:	push   ebp
  4252f2:	repnz inc eax
  4252f4:	test   DWORD PTR [ecx+0x3b2aed41],ecx
  4252fa:	shr    BYTE PTR [eax-0x40],cl
  4252fd:	loope  0x4252bf
  4252ff:	or     edi,DWORD PTR [esi+ecx*8-0x3d9ee3c8]
  425306:	imul   ebp,DWORD PTR [eax-0x4c73fbb9],0xba8aa15e
  425310:	mov    BYTE PTR [ebx],dl
  425312:	fnstenv [ebx-0x173d3a6b]
  425318:	dec    ebp
  425319:	xor    al,0x91
  42531b:	sub    esp,esi
  42531d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42531e:	xlat   BYTE PTR ds:[ebx]
  42531f:	shl    BYTE PTR [esi-0x729cd29a],cl
  425325:	and    DWORD PTR [ecx],edx
  425327:	lea    edi,[edx-0x3b]
  42532a:	loopne 0x4252f5
  42532c:	div    BYTE PTR [edx]
  42532e:	xchg   BYTE PTR [ebx+0x58],bl
  425331:	mov    al,0x6e
  425333:	mov    DWORD PTR [esi],edx
  425335:	add    eax,0xce2a7dd3
  42533a:	scas   eax,DWORD PTR es:[edi]
  42533b:	(bad)  
  42533c:	or     dh,BYTE PTR [esi+0x63d84db0]
  425342:	push   edx
  425343:	or     esp,DWORD PTR [edx-0x7f]
  425346:	jns    0x425345
  425348:	ins    BYTE PTR es:[edi],dx
  425349:	jne    0x425397
  42534b:	ficomp DWORD PTR [esi+ebp*1]
  42534e:	add    BYTE PTR [eax],al
  425350:	add    BYTE PTR [eax],al
  425352:	fwait
  425353:	push   ebp
  425354:	pusha  
  425355:	outs   dx,DWORD PTR ds:[esi]
  425356:	out    dx,al
  425357:	jg     0x4252f8
  425359:	cmc    
  42535a:	or     DWORD PTR fs:[edi+0x22],ebx
  42535e:	shl    ah,1
  425360:	fild   DWORD PTR [ecx+eiz*1-0xbfffe34]
  425367:	add    al,0x0
  425369:	add    al,al
  42536b:	or     eax,0xf98066dc
  425370:	xchg   esi,eax
  425371:	outs   dx,DWORD PTR ds:[esi]
  425372:	dec    ebp
  425373:	ss cli 
  425375:	daa    
  425376:	js     0x4253e4
  425378:	xor    DWORD PTR [esi+0x62],0xffffffbb
  42537c:	(bad)  
  42537d:	adc    ebx,ebp
  42537f:	shl    DWORD PTR [edi+0x25a5a849],1
  425385:	dec    ebp
  425386:	and    edx,esp
  425388:	xlat   BYTE PTR ds:[ebx]
  425389:	and    DWORD PTR [ebp+0x30be7384],edi
  42538f:	(bad)  
  425390:	out    0xb9,al
  425392:	jge    0x425404
  425394:	inc    edi
  425395:	xor    eax,0x5fc7b599
  42539a:	dec    edx
  42539b:	bound  ebp,QWORD PTR [esi-0x70bc4054]
  4253a1:	push   cs
  4253a2:	std    
  4253a3:	ins    BYTE PTR es:[edi],dx
  4253a4:	fild   WORD PTR [eax]
  4253a6:	aam    0x90
  4253a8:	(bad)  
  4253a9:	adc    bh,BYTE PTR [edx]
  4253ab:	rcl    DWORD PTR [edi+ecx*4+0x46df96d1],1
  4253b2:	dec    ebp
  4253b3:	pop    ds
  4253b4:	xchg   ebx,eax
  4253b5:	sub    eax,0x7007c46d
  4253ba:	or     DWORD PTR [ebp-0x434fce7f],esp
  4253c0:	fs sbb eax,0xac796aa8
  4253c6:	add    bh,dh
  4253c8:	in     al,dx
  4253c9:	inc    eax
  4253ca:	jae    0x425415
  4253cc:	sbb    edi,DWORD PTR [ebp-0x15]
  4253cf:	sub    bl,BYTE PTR [eax-0x6ec2299b]
  4253d5:	jmp    0xf5ae:0x1ca99530
  4253dc:	xor    BYTE PTR [ecx],0x1
  4253df:	sahf   
  4253e0:	and    cl,dh
  4253e2:	xchg   ecx,eax
  4253e3:	jge    0x42544c
  4253e5:	xlat   BYTE PTR ds:[ebx]
  4253e6:	in     al,0xdf
  4253e8:	test   eax,0x2fa10d26
  4253ed:	dec    ebp
  4253ee:	pop    esp
  4253ef:	mul    ebp
  4253f1:	push   edi
  4253f2:	xchg   esp,eax
  4253f3:	sub    ah,ch
  4253f5:	mov    ch,0x3
  4253f7:	push   edx
  4253f8:	push   ebp
  4253f9:	sub    al,al
  4253fb:	adc    BYTE PTR [esi],dh
  4253fd:	cmc    
  4253fe:	and    DWORD PTR [eax-0x5540799e],edi
  425404:	sti    
  425405:	inc    eax
  425406:	or     al,0x10
  425408:	jl     0x4253c4
  42540a:	xchg   ecx,eax
  42540b:	in     eax,0xf7
  42540d:	add    DWORD PTR [ecx],ebp
  42540f:	(bad)  
  425410:	jle    0x4253f4
  425412:	ja     0x42542b
  425414:	mov    esp,0x23f2751
  425419:	test   ah,bh
  42541b:	je     0x425456
  42541d:	(bad)  
  42541e:	repz jecxz 0x425432
  425421:	in     al,dx
  425422:	jle    0x4253f0
  425424:	adc    eax,0xd8f13eb3
  425429:	dec    eax
  42542a:	fisttp DWORD PTR [esi]
  42542c:	adc    BYTE PTR [esi+0x119be6af],bl
  425432:	nop
  425433:	fs ins BYTE PTR es:[edi],dx
  425435:	mov    bl,0xc1
  425437:	pushf  
  425438:	pop    edi
  425439:	and    DWORD PTR [esi-0x7ff7a82a],0xff2ac785
  425443:	popf   
  425444:	sub    BYTE PTR [ebx+ecx*1-0x70774c3c],cl
  42544b:	or     al,0x6b
  42544d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42544e:	add    DWORD PTR [edi-0x1b3691b2],esp
  425454:	cmp    BYTE PTR [ecx*1+0xb9254f0],cl
  42545b:	and    al,0x7
  42545d:	je     0x42549b
  42545f:	aaa    
  425460:	pop    edi
  425461:	inc    ebx
  425462:	add    edx,edi
  425464:	arpl   WORD PTR [edi],sp
  425466:	mov    ch,BYTE PTR [esi-0x6]
  425469:	adc    DWORD PTR [edx],ebp
  42546b:	inc    edx
  42546c:	cmp    esi,ebp
  42546e:	test   DWORD PTR [eax+0x52cc23aa],ecx
  425474:	cdq    
  425475:	enter  0xd597,0xa1
  425479:	mov    cl,0x50
  42547b:	push   ds
  42547c:	lods   eax,DWORD PTR ds:[esi]
  42547d:	pop    ecx
  42547e:	aaa    
  42547f:	pusha  
  425480:	or     eax,0xd7b0cd87
  425485:	push   edx
  425486:	mov    dl,0x8c
  425488:	push   ecx
  425489:	inc    ebp
  42548a:	jne    0x425442
  42548c:	cld    
  42548d:	pop    edi
  42548e:	(bad)  
  42548f:	cmp    eax,0xcf47e2e4
  425494:	sbb    eax,0x206dc88f
  425499:	shl    esp,cl
  42549b:	push   esp
  42549c:	jbe    0x42550b
  42549e:	outs   dx,BYTE PTR ds:[esi]
  42549f:	popa   
  4254a0:	xor    ecx,DWORD PTR [esi+0x2c5b7da5]
  4254a6:	icebp  
  4254a7:	jae    0x42544c
  4254a9:	jecxz  0x425471
  4254ab:	mov    esi,0x3b6c5f47
  4254b0:	stc    
  4254b1:	jp     0x4254f8
  4254b3:	mov    bl,0xf9
  4254b5:	(bad)  [ecx+0x7843c3f0]
  4254bb:	lds    ebp,FWORD PTR [ecx]
  4254bd:	jns    0x4254d5
  4254bf:	mov    ebx,0x289ce55f
  4254c4:	pop    edi
  4254c5:	xchg   ebx,eax
  4254c6:	xchg   bl,bl
  4254c8:	adc    BYTE PTR es:[ebx-0x45],bl
  4254cc:	adc    esi,DWORD PTR [edi-0x525469b0]
  4254d2:	xor    al,0x41
  4254d4:	(bad)  
  4254d6:	cld    
  4254d7:	pop    eax
  4254d8:	fldenv [eax]
  4254da:	ins    BYTE PTR es:[edi],dx
  4254db:	aas    
  4254dc:	int    0x49
  4254de:	enter  0xabe4,0x8b
  4254e2:	nop
  4254e3:	add    cl,dh
  4254e5:	loope  0x4254af
  4254e7:	mov    edi,DWORD PTR [edi+0x2d]
  4254ea:	popa   
  4254eb:	fistp  WORD PTR [ecx+0x10]
  4254ee:	retf   0x2f02
  4254f1:	loop   0x4254f7
  4254f3:	in     al,dx
  4254f4:	mov    al,0xf2
  4254f6:	rcr    bl,cl
  4254f8:	imul   ecx,DWORD PTR [esi-0x1631876b],0x7e
  4254ff:	jb     0x4254ae
  425501:	mov    WORD PTR [esi+0x4e],es
  425504:	rcr    DWORD PTR [eax],1
  425506:	pop    eax
  425507:	push   ecx
  425508:	jp     0x425563
  42550a:	cmp    BYTE PTR [ebx+0x403b32ff],bl
  425510:	loop   0x42551c
  425512:	out    dx,al
  425513:	pusha  
  425514:	xor    ch,ch
  425516:	(bad)  
  425517:	imul   ebx,edx,0x835c6c2d
  42551d:	and    DWORD PTR [eax-0x46],0xffffffea
  425521:	out    0xdb,eax
  425523:	ss push edx
  425525:	cwde   
  425526:	cdq    
  425527:	adc    edi,DWORD PTR [ecx]
  425529:	inc    esi
  42552a:	sbb    BYTE PTR [ecx-0x644ed4f2],bh
  425530:	jmp    0x425558
  425532:	jge    0x425569
  425534:	mov    ecx,0xb702871d
  425539:	mov    bl,0xa3
  42553b:	fiadd  DWORD PTR [esi-0x8]
  42553e:	ror    DWORD PTR [ebx-0xb],cl
  425541:	adc    eax,0xe0265db8
  425546:	enter  0x57f3,0x97
  42554a:	jb     0x425502
  42554c:	or     al,0xe9
  42554e:	hlt    
  42554f:	in     eax,0x38
  425551:	dec    ebp
  425552:	out    dx,al
  425553:	pop    eax
  425554:	inc    esp
  425555:	jns    0x4255c8
  425557:	ret    
  425558:	je     0x4254ea
  42555a:	cvtps2pi mm1,QWORD PTR [esi+0x786589a9]
  425561:	fsubr  DWORD PTR fs:[edx+0x23746fcd]
  425568:	push   edi
  425569:	xchg   esi,eax
  42556a:	xchg   DWORD PTR [edx+0x36],ebp
  42556d:	pop    ecx
  42556e:	lds    edi,FWORD PTR [edx]
  425570:	js     0x42554b
  425572:	das    
  425573:	push   ss
  425574:	ret    
  425575:	jnp    0x4255d1
  425577:	fmul   QWORD PTR [ebx]
  425579:	jae    0x425539
  42557b:	in     eax,0x2
  42557d:	mov    esp,0x382febff
  425582:	fist   WORD PTR ds:[ecx]
  425585:	jecxz  0x425592
  425587:	das    
  425588:	or     BYTE PTR [ebp-0x78010ffd],cl
  42558e:	sbb    esp,edi
  425590:	mov    dl,0x87
  425592:	mov    ds:0x1ecac95e,eax
  425597:	aad    0xb
  425599:	add    al,0x6f
  42559b:	and    edx,DWORD PTR [edi-0x53]
  42559e:	adc    bl,bh
  4255a0:	or     BYTE PTR [ebp+0xf],bh
  4255a3:	and    ebx,DWORD PTR [edx+0x62]
  4255a6:	(bad)  
  4255a7:	xor    edx,DWORD PTR [edi]
  4255a9:	ja     0x42553c
  4255ab:	jmp    0x42558f
  4255ad:	ins    BYTE PTR es:[edi],dx
  4255ae:	or     al,0xd6
  4255b0:	sub    dh,BYTE PTR [eax-0x3275ed0b]
  4255b6:	adc    al,BYTE PTR [edi+0x5bf791c9]
  4255bc:	cld    
  4255bd:	jno    0x42556a
  4255bf:	pop    dx
  4255c1:	mov    ebx,esi
  4255c3:	xchg   esp,eax
  4255c4:	fisttp WORD PTR [ecx+0x16]
  4255c7:	cmp    bh,BYTE PTR [edi]
  4255c9:	fsubr  QWORD PTR [ebx]
  4255cb:	push   cs
  4255cc:	bound  edi,QWORD PTR [esi+0x57]
  4255cf:	(bad)
  4255d2:	lock sub dh,al
  4255d5:	xor    al,0x97
  4255d7:	push   ds
  4255d8:	or     eax,0xb4030a13
  4255dd:	push   edx
  4255de:	lock push ss
  4255e0:	push   ebx
  4255e1:	(bad)  
  4255e3:	inc    edx
  4255e4:	imul   esi,DWORD PTR [esi],0xddc74ddd
  4255ea:	adc    BYTE PTR [ebx+0x56],ch
  4255ed:	xor    bl,dh
  4255ef:	cdq    
  4255f0:	fmul   QWORD PTR gs:[ecx]
  4255f3:	dec    edx
  4255f4:	mov    ah,BYTE PTR [ebx-0x29]
  4255f7:	pop    es
  4255f8:	fwait
  4255f9:	or     al,0x4d
  4255fb:	xor    eax,0xf674f217
  425600:	mov    bl,0x4
  425602:	push   cs
  425603:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425604:	addr16 jg 0x425624
  425607:	add    cl,bh
  425609:	mov    bl,0xfc
  42560b:	inc    BYTE PTR [edx+0x79]
  42560e:	xchg   ecx,eax
  42560f:	stos   DWORD PTR es:[edi],eax
  425610:	bound  edx,QWORD PTR [ebp+0x45eb221a]
  425616:	sti    
  425617:	iret   
  425618:	dec    ecx
  425619:	ret    0x7ef1
  42561c:	sbb    dh,BYTE PTR [ecx+0x591603ca]
  425622:	jle    0x4255b7
  425624:	mov    bl,0x74
  425626:	mov    bh,bl
  425628:	sub    al,0xc9
  42562a:	pop    esp
  42562b:	add    al,0xdc
  42562d:	pop    eax
  42562e:	in     eax,0xe9
  425630:	mov    cl,bh
  425632:	dec    ebx
  425633:	add    BYTE PTR [eax-0x6a73df54],0x42
  42563a:	cmp    al,0x20
  42563c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42563d:	adc    BYTE PTR [esi],ch
  42563f:	pop    edi
  425640:	sbb    eax,0xf4382ad2
  425645:	xor    ebx,DWORD PTR [edx+0xf0a4758]
  42564b:	xor    DWORD PTR [edx-0x9],esp
  42564e:	les    esi,FWORD PTR [edx+0x7cf8565c]
  425654:	popf   
  425655:	mov    esp,0x6e914fe8
  42565a:	xor    DWORD PTR [ecx+edx*1-0x3d],esi
  42565e:	cmc    
  42565f:	cmovl  edi,DWORD PTR [ebp-0x3f7f2ebc]
  425666:	cs test eax,0xfa6460ef
  42566c:	mov    ds:0x8c0e8cd0,al
  425671:	mov    ecx,0xb92b483f
  425676:	enter  0x20af,0xbd
  42567a:	lods   al,BYTE PTR ds:[esi]
  42567b:	adc    eax,0xa9e7daa6
  425680:	jae    0x425649
  425682:	test   eax,0xb621750d
  425687:	out    0xd1,al
  425689:	and    al,0x29
  42568b:	xchg   al,al
  42568d:	jae    0x425627
  42568f:	xor    al,0xd8
  425691:	aas    
  425692:	out    dx,al
  425693:	dec    eax
  425694:	fild   QWORD PTR [edx]
  425696:	icebp  
  425697:	and    BYTE PTR [ebx-0x5],al
  42569a:	xlat   BYTE PTR ds:[ebx]
  42569b:	das    
  42569c:	shl    esi,1
  42569e:	div    dl
  4256a0:	mov    ecx,0x7a238c94
  4256a5:	nop
  4256a6:	cmp    dl,BYTE PTR [eax]
  4256a8:	xor    bh,0x6e
  4256ab:	mov    DWORD PTR [edi-0x76],edx
  4256ae:	adc    dh,ch
  4256b0:	fisttp WORD PTR [edx-0x58b4fc9c]
  4256b6:	addr16 pop edx
  4256b8:	rcl    DWORD PTR [edi+0x1],cl
  4256bb:	and    DWORD PTR [ebx],esi
  4256bd:	outs   dx,DWORD PTR ds:[esi]
  4256be:	out    0x9b,al
  4256c0:	inc    ebx
  4256c1:	ds xchg esi,eax
  4256c3:	or     esp,esi
  4256c5:	loope  0x4256cd
  4256c7:	push   esp
  4256c8:	mov    bl,0x60
  4256ca:	push   ebp
  4256cb:	ss (bad) 
  4256cd:	mov    edx,0x17578535
  4256d2:	inc    esi
  4256d3:	jmp    0x16011631
  4256d8:	sti    
  4256d9:	mov    ebp,DWORD PTR [eax-0x41]
  4256dc:	(bad)  
  4256dd:	leave  
  4256de:	sub    edi,0x40c198fb
  4256e4:	stos   DWORD PTR es:[edi],eax
  4256e5:	lods   al,BYTE PTR ds:[esi]
  4256e6:	fdivr  st(0),st
  4256e8:	mov    edx,0xa961f881
  4256ed:	or     DWORD PTR [edi-0x7e],esi
  4256f0:	iret   
  4256f1:	mov    ch,0x7c
  4256f3:	jmp    0xf8d9:0x5d58383c
  4256fa:	clc    
  4256fb:	mov    edx,0x96a0d4d3
  425700:	jo     0x4256bf
  425702:	gs push edi
  425704:	sub    DWORD PTR [edi+0x77],ebx
  425707:	sbb    al,0x5a
  425709:	xor    al,0x45
  42570b:	into   
  42570c:	adc    esp,DWORD PTR [edi]
  42570e:	xchg   ecx,eax
  42570f:	add    ebp,DWORD PTR [ecx]
  425711:	jne    0x425784
  425713:	lahf   
  425714:	pusha  
  425715:	jo     0x425735
  425717:	mov    ds:0xe3749375,eax
  42571c:	out    dx,eax
  42571d:	push   esi
  42571e:	sbb    BYTE PTR [edi+0x4a1329c3],ah
  425724:	out    dx,al
  425725:	mov    ebp,0x1a7120c7
  42572a:	xor    edx,DWORD PTR ds:0xbae10c0f
  425730:	inc    ebx
  425731:	dec    ebx
  425732:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425733:	frstor [edi+ebx*2+0x1d48ca79]
  42573a:	jne    0x42577a
  42573c:	imul   ebp,DWORD PTR [eax-0x4f1731ee],0x9af5675a
  425746:	test   BYTE PTR [edi],ah
  425748:	add    BYTE PTR [edx-0x10],cl
  42574b:	cmp    BYTE PTR [edx-0x4508f44f],dh
  425751:	hlt    
  425752:	xchg   DWORD PTR [edi-0x54],edi
  425755:	call   0xbe5c:0x62613416
  42575c:	mov    ?,WORD PTR [ecx+eax*4-0x54]
  425760:	(bad)  
  425762:	xor    eax,0x96986ce8
  425767:	pop    esi
  425768:	test   eax,0x845ac835
  42576d:	scas   al,BYTE PTR es:[edi]
  42576e:	xchg   ebx,eax
  42576f:	dec    esi
  425770:	inc    edx
  425771:	mov    al,0x51
  425773:	xchg   esi,eax
  425774:	lock scas eax,DWORD PTR es:[edi]
  425776:	or     eax,0xa027f483
  42577b:	stc    
  42577c:	dec    ebp
  42577d:	scas   al,BYTE PTR es:[edi]
  42577e:	nop
  42577f:	stc    
  425780:	das    
  425781:	inc    ebp
  425782:	enter  0xf2a1,0x1e
  425786:	jg     0x425786
  425788:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425789:	cmp    al,0x55
  42578b:	and    DWORD PTR [ecx],edi
  42578d:	popf   
  42578e:	pusha  
  42578f:	xor    BYTE PTR [edx-0x24bf1fdb],ah
  425795:	mov    al,0x89
  425797:	adc    ah,bh
  425799:	inc    bx
  42579b:	jnp    0x425789
  42579d:	scas   al,BYTE PTR es:[edi]
  42579e:	stos   DWORD PTR es:[edi],eax
  42579f:	aam    0x98
  4257a1:	cmp    eax,0x245a67e0
  4257a6:	loope  0x425762
  4257a8:	mov    cl,BYTE PTR [ebx+0x1c]
  4257ab:	icebp  
  4257ac:	outs   dx,DWORD PTR ds:[esi]
  4257ad:	cmp    DWORD PTR [edx+ebp*2],0xb7ed1137
  4257b4:	push   esp
  4257b5:	retf   
  4257b6:	repnz mov al,ds:0x5b06e3fb
  4257bc:	enter  0xbb2,0x87
  4257c0:	adc    al,cl
  4257c2:	shr    dh,cl
  4257c4:	pusha  
  4257c5:	xchg   BYTE PTR fs:[ecx-0x44],ah
  4257c9:	jge    0x4257a0
  4257cb:	xor    al,ah
  4257cd:	add    eax,0x7c7a03e5
  4257d2:	add    ch,cl
  4257d4:	sub    edx,DWORD PTR [ebx]
  4257d6:	inc    esp
  4257d7:	rcl    BYTE PTR [ebp-0x45],cl
  4257da:	inc    ebx
  4257db:	retf   0xbfb6
  4257de:	in     eax,0x8d
  4257e0:	jno    0x425827
  4257e2:	dec    esp
  4257e3:	popf   
  4257e4:	fbstp  TBYTE PTR [edx-0x9]
  4257e7:	push   ss
  4257e8:	cmp    DWORD PTR gs:[ebp+0x26],esi
  4257ec:	xchg   edx,eax
  4257ed:	or     bl,BYTE PTR [ebx]
  4257ef:	cld    
  4257f0:	cmp    bl,BYTE PTR [eax-0x35]
  4257f3:	dec    ecx
  4257f4:	inc    ebp
  4257f5:	and    DWORD PTR [ebx+0x67],ebp
  4257f8:	push   edx
  4257f9:	xor    eax,0xbb9f8694
  4257fe:	addr16 aad 0xa0
  425801:	in     al,0x92
  425803:	pop    edi
  425804:	mov    DWORD PTR [edi],esp
  425806:	jl     0x4257cc
  425808:	push   es
  425809:	mov    ecx,0x3d8efbc
  42580e:	cmp    esp,DWORD PTR [esp+eiz*4-0x50700cc2]
  425815:	pusha  
  425816:	je     0x4257ea
  425818:	sub    al,0xf3
  42581a:	test   al,0xa9
  42581c:	mov    ds:0xa25140,eax
  425821:	lea    ecx,[ebx+0xf051f65]
  425827:	movlps xmm1,QWORD PTR [esi+0x50]
  42582b:	push   ss
  42582c:	fst    QWORD PTR [ecx]
  42582e:	add    WORD PTR [edx],dx
  425831:	iret   
  425832:	ja     0x42588a
  425834:	jns    0x4257cd
  425836:	and    al,0x45
  425838:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425839:	mov    cl,0xf3
  42583b:	les    eax,FWORD PTR [esi+0x239eecb1]
  425841:	cmp    al,0xe6
  425843:	adc    ch,BYTE PTR [edi-0x2a733d72]
  425849:	inc    esi
  42584a:	lock mov dh,0xe1
  42584d:	dec    edx
  42584e:	mov    ah,0x48
  425850:	in     al,dx
  425851:	mov    ds:0x5872a13c,al
  425856:	xlat   BYTE PTR ds:[ebx]
  425857:	lods   al,BYTE PTR ds:[esi]
  425858:	and    DWORD PTR [eax-0x53],eax
  42585b:	lods   al,BYTE PTR ds:[esi]
  42585c:	or     al,0x31
  42585e:	add    BYTE PTR [eax],al
  425860:	add    BYTE PTR [eax],al
  425862:	add    eax,0xaf44af85
  425867:	outs   dx,BYTE PTR ds:[esi]
  425868:	out    dx,eax
  425869:	lds    ecx,FWORD PTR [ecx+0x565d36f8]
  42586f:	push   edi
  425870:	or     ebx,DWORD PTR ds:0x1d115
  425876:	hlt    
  425877:	add    al,0x0
  425879:	add    BYTE PTR [edx+edx*4],al
  42587c:	and    esi,DWORD PTR [ebx]
  42587e:	dec    ebp
  42587f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425880:	scas   al,BYTE PTR es:[edi]
  425881:	sbb    esp,DWORD PTR [edi+0x29]
  425884:	in     al,dx
  425885:	xor    dl,ah
  425887:	retf   
  425888:	dec    ecx
  425889:	and    cl,BYTE PTR [edx]
  42588b:	(bad)  
  42588c:	sbb    dl,BYTE PTR [ebx-0x635a80a8]
  425892:	jno    0x4258f2
  425894:	jo     0x4258d3
  425896:	call   0xe354:0xa182dda7
  42589d:	data16 jne 0x425885
  4258a0:	xchg   esi,eax
  4258a1:	jns    0x425867
  4258a3:	mov    ds:0x9a1e36b1,al
  4258a8:	mov    fs,WORD PTR [edx+esi*2+0x66ba9c19]
  4258af:	lods   al,BYTE PTR ds:[esi]
  4258b0:	test   al,0x59
  4258b2:	or     al,0xff
  4258b4:	and    edi,DWORD PTR [ebx]
  4258b6:	push   cs
  4258b7:	add    DWORD PTR [esi+0x2aab980c],ebx
  4258bd:	mov    esi,0xe2b9c439
  4258c2:	push   es
  4258c3:	sbb    edx,DWORD PTR [edi-0x2c]
  4258c6:	sbb    eax,0x1de3bf8a
  4258cb:	mov    esp,DWORD PTR [ecx]
  4258cd:	jo     0x4258fb
  4258cf:	dec    esp
  4258d0:	xor    dh,0x8d
  4258d3:	popa   
  4258d4:	nop
  4258d5:	xchg   esp,eax
  4258d6:	fdivp  st(2),st
  4258d8:	ret    0xc74b
  4258db:	inc    esp
  4258dc:	lods   eax,DWORD PTR ds:[esi]
  4258dd:	or     BYTE PTR [eax+ecx*1-0x78df49e1],0x50
  4258e5:	pop    ds
  4258e6:	pshufw mm2,QWORD PTR [ebx-0x76],0x5a
  4258eb:	sub    eax,0x67234a7
  4258f0:	push   edx
  4258f1:	adc    cl,BYTE PTR [eax-0x70b0ccb2]
  4258f7:	cmp    eax,0x4103786d
  4258fc:	ficomp WORD PTR [edi]
  4258fe:	xchg   esp,eax
  4258ff:	sbb    DWORD PTR ds:0xce1fde69,esi
  425905:	xor    edx,DWORD PTR [edi+0x69778a78]
  42590b:	mov    ds,WORD PTR [edx+0x8]
  42590e:	dec    ebx
  42590f:	(bad)  
  425911:	push   0x1362cf13
  425916:	fisttp DWORD PTR [edi-0x6e]
  425919:	jmp    0xe263:0x41d1b591
  425920:	out    dx,al
  425921:	lods   al,BYTE PTR ds:[esi]
  425922:	mov    esi,0x1815989b
  425927:	add    ebx,DWORD PTR [edx-0x22]
  42592a:	rcr    bh,0xa1
  42592d:	sub    DWORD PTR [ebx+0x3c6813c4],0xc2176ecf
  425937:	push   ds
  425938:	push   ebx
  425939:	add    dl,BYTE PTR [ebp-0x2bc9c048]
  42593f:	cmc    
  425940:	fsub   DWORD PTR [esi+0x57f08b59]
  425946:	les    ebp,FWORD PTR [eax+0x7385841a]
  42594c:	push   esi
  42594d:	jno    0x42590c
  42594f:	mov    esi,0x4bd69a58
  425954:	sar    DWORD PTR [esi+edx*1+0x2],0x3a
  425959:	leave  
  42595a:	and    DWORD PTR ds:0xb2bd6f4e,edx
  425960:	jmp    DWORD PTR [ecx]
  425962:	je     0x425918
  425964:	mov    ch,0x3f
  425966:	push   0xffffff94
  425968:	call   0x1f379afd
  42596d:	xor    BYTE PTR ds:0x2d65c38a,0xb6
  425974:	mov    bh,0xaf
  425976:	ja     0x425907
  425978:	cmp    al,0x39
  42597a:	(bad)  
  42597b:	pop    edx
  42597c:	mov    bh,0xd6
  42597e:	pop    edx
  42597f:	pushf  
  425980:	not    BYTE PTR [edi+0x2daeb7c8]
  425986:	lock pushf 
  425988:	cmp    edx,edi
  42598a:	in     al,dx
  42598b:	push   esp
  42598c:	test   al,0x2e
  42598e:	xor    esp,edi
  425990:	(bad)  
  425992:	jp     0x4259c3
  425994:	aad    0x2f
  425996:	xor    edi,DWORD PTR [ecx+0x7fdc14e2]
  42599c:	outs   dx,BYTE PTR ds:[esi]
  42599d:	add    BYTE PTR [esi+0x4f4360e4],cl
  4259a3:	shr    DWORD PTR [ecx+0x3cf9029a],cl
  4259a9:	stos   DWORD PTR es:[edi],eax
  4259aa:	jbe    0x425933
  4259ac:	inc    eax
  4259ad:	outs   dx,BYTE PTR ds:[esi]
  4259ae:	les    ecx,FWORD PTR [ebx]
  4259b0:	imul   eax,DWORD PTR [esi+0x8],0x2e
  4259b4:	aad    0x1e
  4259b6:	xchg   esi,eax
  4259b7:	cdq    
  4259b8:	lock ja 0x4259b2
  4259bb:	xchg   BYTE PTR [ecx-0x51],dh
  4259be:	je     0x4259b5
  4259c0:	(bad)  
  4259c1:	into   
  4259c2:	test   dl,dh
  4259c4:	ror    BYTE PTR [ebx+0x73],1
  4259c7:	add    dl,BYTE PTR [edx+0x78]
  4259ca:	retf   
  4259cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4259cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4259cd:	imul   ebx,ecx,0x10
  4259d0:	xor    eax,0xbc4d4ff6
  4259d5:	mov    bl,0x43
  4259d7:	xlat   BYTE PTR ds:[ebx]
  4259d8:	sub    ebx,DWORD PTR [ebp+0xa406fb5]
  4259de:	xor    DWORD PTR [ecx-0x17],0xffffffc4
  4259e2:	xor    BYTE PTR [edx+0x4652e0b9],0xb5
  4259e9:	aad    0xa5
  4259eb:	sub    ebp,DWORD PTR [ebx]
  4259ed:	sub    eax,0x1861be02
  4259f2:	inc    ebp
  4259f3:	rcr    DWORD PTR [ecx],cl
  4259f5:	sbb    esp,edi
  4259f7:	lock pop esi
  4259f9:	data16 jbe 0x425980
  4259fc:	or     ah,BYTE PTR [eax-0x4c]
  4259ff:	and    eax,0xacec57fe
  425a04:	stos   DWORD PTR es:[edi],eax
  425a05:	aam    0x93
  425a07:	(bad)  
  425a08:	cli    
  425a09:	pop    esi
  425a0a:	outs   dx,BYTE PTR ds:[esi]
  425a0b:	gs jmp 0x5591:0xc4bed3c2
  425a13:	or     edx,ebx
  425a15:	pushf  
  425a16:	mov    BYTE PTR [eax],ah
  425a18:	stos   DWORD PTR es:[edi],eax
  425a19:	pop    ds
  425a1a:	mov    BYTE PTR [esi+0x562d1cd7],ch
  425a20:	lea    ebp,[eax-0x2b]
  425a23:	xchg   DWORD PTR [ebx-0x65],esi
  425a26:	sub    BYTE PTR [eax-0x1012dcaa],cl
  425a2c:	lea    eax,[ebx]
  425a2e:	mov    eax,0x193ba7fc
  425a33:	push   ebp
  425a34:	lahf   
  425a35:	jmp    0x425a99
  425a37:	inc    eax
  425a38:	mov    ?,WORD PTR [ebp-0x784cdabd]
  425a3e:	fs xchg esi,ebp
  425a41:	add    al,BYTE PTR [edi+0x7c26fba5]
  425a47:	adc    BYTE PTR [edi],dh
  425a49:	popa   
  425a4a:	mov    esp,0x29611ce4
  425a4f:	fidiv  WORD PTR [ecx+0x7a]
  425a52:	push   es
  425a53:	jl     0x425a2c
  425a55:	bnd jge 0x425a2e
  425a58:	and    al,0x80
  425a5a:	and    DWORD PTR [edi-0x68658794],ebp
  425a60:	push   ss
  425a61:	mov    cl,0xc
  425a63:	fimul  WORD PTR [eax+0x6d3d875]
  425a69:	cs mov eax,0xd87253d3
  425a6f:	mov    esi,0xebbcd297
  425a74:	jp     0x425aad
  425a76:	mov    BYTE PTR [esi+eax*2],bl
  425a79:	xor    DWORD PTR [ebx+0x3c],esi
  425a7c:	inc    ebp
  425a7d:	rcl    DWORD PTR [edi],cl
  425a7f:	imul   ebp,ebx,0xffffffcc
  425a82:	inc    edi
  425a83:	sub    dh,BYTE PTR [edx-0x58]
  425a86:	shl    DWORD PTR [esi],cl
  425a88:	loopne 0x425a2e
  425a8a:	and    ch,BYTE PTR [edx-0x67]
  425a8d:	and    DWORD PTR ds:0xe82b54de,ecx
  425a93:	popa   
  425a94:	call   0xfbbb:0x332bfd2d
  425a9b:	sub    DWORD PTR [esi],edx
  425a9d:	and    BYTE PTR [edx],cl
  425a9f:	rol    BYTE PTR [eax*8+0x5494ac22],0x1b
  425aa7:	lahf   
  425aa8:	adc    eax,DWORD PTR [edi-0x5d3df724]
  425aae:	adc    ch,dh
  425ab0:	cmc    
  425ab1:	inc    eax
  425ab2:	mov    ebx,0xcc421d6b
  425ab7:	es mov dh,0x77
  425aba:	repz es ret 0x68a3
  425abf:	sbb    eax,0x48253ffd
  425ac4:	dec    edi
  425ac5:	push   eax
  425ac6:	or     cl,cl
  425ac8:	jae    0x425b13
  425aca:	push   0xda66c9ef
  425acf:	add    ah,bl
  425ad1:	and    al,0x39
  425ad3:	xchg   ecx,eax
  425ad4:	mov    esp,0x8728478e
  425ad9:	push   esp
  425ada:	sbb    BYTE PTR fs:[ebx+0x6889cec5],0x82
  425ae2:	cld    
  425ae3:	mov    dl,0xc7
  425ae5:	adc    BYTE PTR [edi-0x49],cl
  425ae8:	cmp    al,0xfc
  425aea:	iret   
  425aeb:	mov    esi,0x84671c43
  425af0:	xor    DWORD PTR [ecx+0x276c3225],edi
  425af6:	push   0xffffffe5
  425af8:	enter  0x7c7a,0x5b
  425afc:	in     eax,0x95
  425afe:	pop    ebp
  425aff:	or     BYTE PTR [ebx+0x64],dh
  425b02:	jp     0x425aa1
  425b04:	imul   esp,DWORD PTR [edi],0x607ab40a
  425b0a:	dec    esi
  425b0b:	js     0x425aab
  425b0d:	ins    DWORD PTR es:[edi],dx
  425b0e:	sbb    eax,0xb865100c
  425b13:	xchg   edi,eax
  425b14:	xor    eax,0xf1739b6e
  425b19:	fdiv   QWORD PTR [edi-0x5816fe50]
  425b1f:	sub    ch,al
  425b21:	jno    0x425afb
  425b23:	neg    DWORD PTR [ebx+0x182f2202]
  425b29:	push   esi
  425b2a:	(bad)  [edi-0x5bf7582b]
  425b30:	es dec eax
  425b32:	(bad)  
  425b33:	jnp    0x425ad3
  425b35:	pusha  
  425b36:	jmp    0x425b18
  425b38:	(bad)  
  425b39:	xchg   ebx,eax
  425b3a:	ficom  DWORD PTR [edx+0x65]
  425b3d:	aam    0xe1
  425b3f:	xlat   BYTE PTR ds:[ebx]
  425b40:	mov    esi,0xb51a52ee
  425b45:	cmp    DWORD PTR [ecx-0x3849f6e2],esi
  425b4b:	dec    edx
  425b4c:	iret   
  425b4d:	push   0xffffff9e
  425b4f:	or     DWORD PTR [ecx+0x3d],eax
  425b52:	inc    edi
  425b53:	dec    edi
  425b54:	sub    eax,0x4476b164
  425b59:	sbb    al,0x39
  425b5b:	jmp    0x425b5b
  425b5d:	dec    ebp
  425b5e:	shl    BYTE PTR [edx+0xa],0x10
  425b62:	in     eax,dx
  425b63:	cs mov edx,0xb6fa6a85
  425b69:	and    eax,0xdc1e0370
  425b6e:	(bad)  
  425b70:	imul   edx,DWORD PTR fs:[edi-0x50],0xffffffe0
  425b75:	(bad)  
  425b77:	mov    ds:0x4c7553c2,eax
  425b7c:	mov    eax,ds:0x6e03e223
  425b81:	jmp    0x49a8:0xdb6dcb01
  425b88:	sub    edx,DWORD PTR [eax-0x6b]
  425b8b:	and    esp,DWORD PTR [ebx]
  425b8d:	xchg   ebx,eax
  425b8e:	push   esi
  425b8f:	ja     0x425b5d
  425b91:	mov    ch,0xb5
  425b93:	adc    al,0x23
  425b95:	into   
  425b96:	jo     0x425beb
  425b98:	push   ebx
  425b99:	in     eax,0x53
  425b9b:	call   0xb08962a7
  425ba0:	out    dx,al
  425ba1:	xor    bh,BYTE PTR [edi-0x428bd544]
  425ba7:	and    bh,0xcd
  425baa:	cmp    eax,0x8e1cbdab
  425baf:	sub    cl,BYTE PTR [edx-0x5ba9b000]
  425bb5:	je     0x425c21
  425bb7:	jecxz  0x425c31
  425bb9:	fcmovbe st,st(4)
  425bbb:	push   cs
  425bbc:	fsubp  st(5),st
  425bbe:	das    
  425bbf:	sub    BYTE PTR [edi-0x52],ch
  425bc2:	or     ch,bl
  425bc4:	sub    BYTE PTR [ecx+0x3b494e2f],bl
  425bca:	fisubr DWORD PTR [esi]
  425bcc:	mov    cl,0xf
  425bce:	xor    al,0x65
  425bd0:	std    
  425bd1:	cmp    eax,0xa564811c
  425bd6:	(bad)  
  425bd7:	inc    ecx
  425bd8:	or     eax,0x5fd74d8a
  425bdd:	adc    ecx,DWORD PTR [eax]
  425bdf:	dec    ecx
  425be0:	cmc    
  425be1:	sbb    eax,0x8b857ee7
  425be6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425be7:	add    DWORD PTR [ebx+esi*8-0x28],0xffffff88
  425bec:	add    BYTE PTR [ebx],al
  425bee:	dec    ebp
  425bef:	daa    
  425bf0:	jb     0x425c52
  425bf2:	out    0x6d,eax
  425bf4:	popa   
  425bf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425bf6:	jbe    0x425b87
  425bf8:	hlt    
  425bf9:	fst    DWORD PTR [ecx]
  425bfb:	add    BYTE PTR [ecx-0x12],al
  425bfe:	shl    BYTE PTR [edx+eiz*4+0x4382194b],1
  425c05:	mov    cl,0xb1
  425c07:	dec    edi
  425c08:	ret    
  425c09:	and    DWORD PTR [edx+0x477d32a],edx
  425c0f:	adc    eax,0x2ec3ad3b
  425c14:	cld    
  425c15:	add    edx,DWORD PTR [ecx+0x43]
  425c18:	or     eax,0xdcd40722
  425c1d:	div    ch
  425c1f:	mov    eax,ds:0x5a2d0fb9
  425c24:	xchg   esp,eax
  425c25:	adc    BYTE PTR ds:0xd128a275,0xbc
  425c2c:	xor    DWORD PTR [eax+eiz*8],esi
  425c2f:	mov    ebx,0x4099964e
  425c34:	jge    0x425c33
  425c36:	sub    al,0x39
  425c38:	out    dx,eax
  425c39:	fs pop edi
  425c3b:	ja     0x425bff
  425c3d:	jg     0x9f63bed9
  425c43:	cld    
  425c44:	imul   ecx,DWORD PTR [ebx],0x33
  425c47:	xor    ebp,ecx
  425c49:	jb     0x425c32
  425c4b:	inc    esi
  425c4c:	mov    WORD PTR [ebx+0x634feb8c],ss
  425c52:	add    edx,esp
  425c54:	mov    edi,0x401f026e
  425c59:	lock test BYTE PTR [edi],dh
  425c5c:	aad    0x1a
  425c5e:	jno    0x425bfa
  425c60:	sar    DWORD PTR [ebp-0x2c],cl
  425c63:	push   esi
  425c64:	mov    edx,0x409047b1
  425c69:	idiv   BYTE PTR [esi+ebx*4-0x2aee4481]
  425c70:	jno    0x425ce8
  425c72:	dec    esp
  425c73:	(bad)  
  425c74:	push   ebp
  425c75:	push   cs
  425c76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c77:	outs   dx,BYTE PTR ds:[esi]
  425c78:	pop    ebx
  425c79:	(bad)  
  425c7a:	sub    edx,DWORD PTR [ecx]
  425c7c:	mov    ebp,0x24669b85
  425c81:	pop    ecx
  425c82:	ins    DWORD PTR es:[edi],dx
  425c83:	mov    dh,0x57
  425c85:	inc    ecx
  425c86:	or     DWORD PTR [edi+eax*4+0xb05e39c],ebp
  425c8d:	cs xor ah,bh
  425c90:	loop   0x425c99
  425c92:	aad    0x80
  425c94:	and    al,0xee
  425c96:	fistp  DWORD PTR ds:0x1fb4c266
  425c9c:	pop    ss
  425c9d:	push   eax
  425c9e:	add    al,0xc
  425ca0:	outs   dx,DWORD PTR ds:[esi]
  425ca1:	rcr    DWORD PTR [esi+eax*1],cl
  425ca4:	push   ebp
  425ca5:	out    0x62,eax
  425ca7:	or     al,BYTE PTR [ebx-0x43c017a9]
  425cad:	sub    al,dl
  425caf:	xchg   DWORD PTR [ebx-0x2d],edi
  425cb2:	lds    ebp,FWORD PTR ds:0x76cf64e0
  425cb8:	sahf   
  425cb9:	xchg   DWORD PTR ds:0x8718725,ecx
  425cbf:	hlt    
  425cc0:	mov    ebx,0xe204f1c4
  425cc5:	dec    ecx
  425cc6:	outs   dx,DWORD PTR ds:[esi]
  425cc7:	push   edx
  425cc8:	cld    
  425cc9:	stc    
  425cca:	xchg   DWORD PTR [esi+0x6b9de6d5],esi
  425cd0:	push   ss
  425cd1:	push   ebp
  425cd2:	mov    ch,0x6a
  425cd4:	mov    edx,0x79138c8c
  425cd9:	pop    es
  425cda:	push   0xfffffff8
  425cdc:	(bad)  
  425cdd:	js     0x425cb0
  425cdf:	sar    DWORD PTR [ebx],1
  425ce1:	cli    
  425ce2:	or     esi,ecx
  425ce4:	sub    edi,DWORD PTR [edi-0x41]
  425ce7:	mov    al,cs:0x1d7338ec
  425ced:	jno    0x425d33
  425cef:	pop    DWORD PTR [edx+0x6]
  425cf2:	in     eax,0xd4
  425cf4:	(bad)  
  425cf5:	out    0xbc,eax
  425cf7:	dec    esi
  425cf8:	cmp    DWORD PTR [ebx],eax
  425cfa:	mov    eax,ds:0x5c8a07
  425cff:	out    dx,al
  425d00:	(bad)  
  425d01:	cmp    edx,DWORD PTR [edi]
  425d03:	dec    esp
  425d04:	call   0xa41cede5
  425d09:	cld    
  425d0a:	aam    0x14
  425d0c:	sub    cl,ch
  425d0e:	cwde   
  425d0f:	lds    edi,FWORD PTR [edi+0x3922580b]
  425d15:	sbb    BYTE PTR [edx],0x9
  425d18:	lds    esp,FWORD PTR [ebx+ebp*1]
  425d1b:	xchg   ebp,eax
  425d1c:	aad    0x13
  425d1e:	(bad)  
  425d20:	push   cs
  425d21:	ret    0x78d
  425d24:	(bad)  [eax]
  425d26:	int3   
  425d27:	retf   
  425d28:	inc    ecx
  425d29:	in     al,dx
  425d2a:	icebp  
  425d2b:	jno    0x425ce9
  425d2d:	push   0xbf534aab
  425d32:	and    eax,0xb5ae6b5d
  425d37:	pushf  
  425d38:	or     esi,DWORD PTR [ebp-0x501f2180]
  425d3e:	cmp    bl,BYTE PTR [eax+ecx*8]
  425d41:	or     cl,bl
  425d43:	mov    eax,0xc645e810
  425d48:	popa   
  425d49:	mov    ds:0x900af65,eax
  425d4e:	icebp  
  425d4f:	xchg   ebp,eax
  425d50:	push   0xa4392db0
  425d55:	fisubr DWORD PTR [edx-0x13c193b0]
  425d5b:	jne    0x425dc0
  425d5d:	(bad)  
  425d5e:	stc    
  425d5f:	test   eax,0xb36126ac
  425d64:	repnz push es
  425d66:	leave  
  425d67:	adc    ecx,0x7d
  425d6a:	adc    cl,ch
  425d6c:	test   eax,0xf6
  425d71:	add    dh,ch
  425d73:	retf   0xd589
  425d76:	lods   eax,DWORD PTR ds:[esi]
  425d77:	xlat   BYTE PTR ds:[ebx]
  425d78:	(bad)  
  425d79:	sti    
  425d7a:	(bad)  
  425d7c:	mov    ss,WORD PTR [esi+edx*8-0x15]
  425d80:	out    0x91,eax
  425d82:	or     esi,edx
  425d84:	add    DWORD PTR [eax],eax
  425d86:	hlt    
  425d87:	add    al,0x0
  425d89:	add    BYTE PTR [eax-0x4a],al
  425d8c:	hlt    
  425d8d:	icebp  
  425d8e:	loop   0x425d8a
  425d90:	xor    BYTE PTR [ecx+0x0],cl
  425d93:	loopne 0x425d33
  425d95:	jecxz  0x425da6
  425d97:	or     DWORD PTR [edi+0x461db0cc],esi
  425d9d:	ret    
  425d9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425d9f:	not    BYTE PTR [ebp-0x5cea9762]
  425da5:	aam    0xb9
  425da7:	add    dh,dl
  425da9:	outs   dx,DWORD PTR ds:[esi]
  425daa:	gs jns 0x425db4
  425dad:	jbe    0x425db0
  425daf:	push   edi
  425db0:	(bad)  
  425db2:	pop    edx
  425db3:	lods   al,BYTE PTR ds:[esi]
  425db4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425db5:	call   FWORD PTR [edx-0x39]
  425db8:	pop    ebx
  425db9:	pusha  
  425dba:	mov    ch,0x27
  425dbc:	aam    0x4e
  425dbe:	dec    ebx
  425dbf:	mov    eax,ds:0xfbc18c1c
  425dc4:	mov    ecx,0x51d2b7fb
  425dc9:	(bad)  
  425dca:	cmp    eax,ebp
  425dcc:	pop    ebx
  425dcd:	adc    eax,0x1e8a5596
  425dd2:	rol    BYTE PTR [ebx-0x62],1
  425dd5:	adc    esp,DWORD PTR [edx]
  425dd7:	add    ch,BYTE PTR [edx-0x61]
  425dda:	fwait
  425ddb:	mov    BYTE PTR [ecx-0x4b],bh
  425dde:	xor    BYTE PTR [ebp-0x54],bl
  425de1:	ds xchg ebx,eax
  425de3:	xchg   edx,eax
  425de4:	aad    0x74
  425de6:	pop    esi
  425de7:	jnp    0x425da5
  425de9:	xchg   esp,eax
  425dea:	xor    DWORD PTR [ebp+0x2e],eax
  425ded:	sar    BYTE PTR [ecx],1
  425def:	fsubp  st(2),st
  425df1:	push   ebp
  425df2:	jmp    0x425e64
  425df4:	(bad)  
  425df5:	push   edx
  425df6:	jne    0x425de7
  425df8:	inc    ecx
  425df9:	push   ds
  425dfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425dfb:	push   ss
  425dfc:	cdq    
  425dfd:	in     al,dx
  425dfe:	in     al,0x78
  425e00:	sub    eax,0xe2cb4d1
  425e05:	pop    ebp
  425e06:	pop    ebp
  425e07:	pusha  
  425e08:	(bad)  
  425e09:	lods   eax,DWORD PTR ds:[esi]
  425e0a:	ja     0x425e21
  425e0c:	mov    al,ds:0x452d64a3
  425e11:	std    
  425e12:	and    eax,0x7e4692fc
  425e17:	add    eax,DWORD PTR [esi-0x5b]
  425e1a:	dec    ebx
  425e1b:	xlat   BYTE PTR ds:[ebx]
  425e1c:	lahf   
  425e1d:	jb     0x425dec
  425e1f:	cmp    BYTE PTR [ecx],dl
  425e21:	fnsave [edx+0x1d9f1f01]
  425e27:	xchg   esi,eax
  425e28:	push   0xffffffa6
  425e2a:	sub    esp,ecx
  425e2c:	rcr    BYTE PTR [eax-0x60],cl
  425e2f:	mov    edx,0x37bf6a15
  425e34:	cmp    BYTE PTR [ebx+0x71fccd4a],ch
  425e3a:	popf   
  425e3b:	dec    esi
  425e3c:	int    0x88
  425e3e:	jl     0x425e99
  425e40:	jno    0x425e56
  425e42:	inc    ebx
  425e43:	into   
  425e44:	outs   dx,BYTE PTR ds:[esi]
  425e45:	sub    edi,esi
  425e47:	sbb    ebp,DWORD PTR [ebp-0x64]
  425e4a:	js     0x425eba
  425e4c:	push   0xf713b737
  425e51:	xor    esp,DWORD PTR [eax+0x79]
  425e54:	pop    edx
  425e55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e56:	sub    ecx,DWORD PTR ds:0xd9cc28a
  425e5c:	jnp    0x425ed4
  425e5e:	aad    0xe6
  425e60:	test   al,0xc9
  425e62:	and    al,0x21
  425e64:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  425e66:	int    0xc
  425e68:	add    al,0xd
  425e6a:	inc    edx
  425e6b:	jae    0x425ec7
  425e6d:	mov    al,ds:0x701cde31
  425e72:	and    al,0x16
  425e74:	inc    ebx
  425e75:	fsubr  QWORD PTR [eax-0x36c01451]
  425e7b:	ss fucom st(5)
  425e7e:	sub    eax,DWORD PTR [ecx+0x2a]
  425e81:	out    0xc,al
  425e83:	repnz add ah,BYTE PTR [edi]
  425e86:	aad    0x66
  425e88:	dec    eax
  425e89:	sub    DWORD PTR [esi+0x70],esi
  425e8c:	mov    WORD PTR [ebx],ss
  425e8e:	add    edi,DWORD PTR [edi]
  425e90:	loope  0x425eb3
  425e92:	xor    al,0x72
  425e94:	mov    ebp,0x8a4a4177
  425e99:	pop    ebp
  425e9a:	int3   
  425e9b:	mov    ah,0x1b
  425e9d:	push   cs
  425e9e:	adc    DWORD PTR [ebp-0xd0035d4],ecx
  425ea4:	mov    ds:0x52ee8fcf,eax
  425ea9:	leave  
  425eaa:	cli    
  425eab:	push   eax
  425eac:	test   DWORD PTR [ebp-0x1deb6838],eax
  425eb2:	loope  0x425e92
  425eb4:	rcr    DWORD PTR [edi],1
  425eb6:	sbb    eax,0xe80a0549
  425ebb:	add    eax,0x1607e2be
  425ec0:	pop    ebx
  425ec1:	lods   eax,DWORD PTR ds:[esi]
  425ec2:	std    
  425ec3:	mov    BYTE PTR [esi],bl
  425ec5:	add    ebx,DWORD PTR [eax+0x64]
  425ec8:	or     DWORD PTR [edi-0x47511676],ecx
  425ece:	pop    esi
  425ecf:	hlt    
  425ed0:	add    al,0x1f
  425ed2:	(bad)  
  425ed4:	mov    ebp,0xb3f91851
  425ed9:	test   esi,0xbfcff73a
  425edf:	mov    cl,0x99
  425ee1:	fnsetpm(287 only) 
  425ee3:	(bad)  
  425ee4:	out    dx,eax
  425ee5:	push   0x323aeb77
  425eea:	sbb    BYTE PTR [ebx],ch
  425eec:	out    dx,al
  425eed:	mov    esp,0xa089a6f9
  425ef2:	(bad)  
  425ef3:	aas    
  425ef4:	mov    BYTE PTR [ecx+esi*4-0x10],dl
  425ef8:	sti    
  425ef9:	cmp    edi,DWORD PTR [edi+0x67]
  425efc:	sbb    DWORD PTR [esi+ebx*2],eax
  425eff:	aam    0x2
  425f01:	les    esi,FWORD PTR [edx]
  425f03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425f04:	push   esi
  425f05:	jmp    0x8ea:0xe9a76bf5
  425f0c:	lods   eax,DWORD PTR ds:[esi]
  425f0d:	xchg   ebp,eax
  425f0e:	test   cl,0x3e
  425f11:	lods   eax,DWORD PTR ds:[esi]
  425f12:	fdivr  st(3),st
  425f14:	in     al,0x59
  425f16:	push   0xf1436b7e
  425f1b:	mov    eax,0x67b32873
  425f20:	adc    esi,DWORD PTR [ebx-0x36]
  425f23:	dec    eax
  425f24:	adc    cl,BYTE PTR ds:0x7d043b
  425f2a:	out    0xa1,eax
  425f2c:	xor    DWORD PTR [ebx+0x51],edi
  425f2f:	cdq    
  425f30:	lea    edi,[ebp+0x638d041b]
  425f36:	xlat   BYTE PTR ds:[ebx]
  425f37:	push   edx
  425f38:	popa   
  425f39:	jae    0x425f38
  425f3b:	sub    eax,0x67d6d3ef
  425f40:	sbb    ebp,DWORD PTR [esi]
  425f42:	ds xor bh,dl
  425f45:	add    dh,BYTE PTR [edi+0x4d]
  425f48:	xor    ah,BYTE PTR [ebx]
  425f4a:	sbb    al,BYTE PTR [esi]
  425f4c:	jne    0x425f95
  425f4e:	cwde   
  425f4f:	ror    DWORD PTR [edx-0x2a58eba3],cl
  425f55:	pop    esp
  425f56:	add    DWORD PTR [ebx-0xfb850f2],esp
  425f5c:	and    eax,0x43694d06
  425f61:	fst    QWORD PTR [ecx]
  425f63:	into   
  425f64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425f65:	clc    
  425f66:	push   ds
  425f67:	mov    ss,ebp
  425f69:	int    0xdf
  425f6b:	int3   
  425f6c:	pop    edi
  425f6d:	inc    edi
  425f6e:	dec    esp
  425f6f:	ficom  WORD PTR [ebx]
  425f71:	in     al,dx
  425f72:	push   edx
  425f73:	push   ebp
  425f74:	xlat   BYTE PTR ds:[ebx]
  425f75:	and    eax,0x4180ee63
  425f7a:	loopne 0x425fa8
  425f7c:	pop    ebx
  425f7d:	xchg   ebp,eax
  425f7e:	idiv   BYTE PTR [eax+0x74]
  425f81:	adc    ah,BYTE PTR [esi-0x1b]
  425f84:	sbb    cl,ch
  425f86:	or     esp,DWORD PTR [ecx-0x7d]
  425f89:	shr    ebx,cl
  425f8b:	stc    
  425f8c:	out    dx,eax
  425f8d:	push   ecx
  425f8e:	xchg   ebp,eax
  425f8f:	mov    ebp,0x31197397
  425f94:	sti    
  425f95:	sbb    eax,0xae46a567
  425f9a:	dec    edi
  425f9b:	jno    0x425f9f
  425f9d:	stos   BYTE PTR es:[edi],al
  425f9e:	scas   eax,DWORD PTR es:[edi]
  425f9f:	inc    esi
  425fa0:	adc    BYTE PTR [ebx+0x15],ch
  425fa3:	imul   esp,DWORD PTR [eax-0x7a2a173f],0x53e37be
  425fad:	mov    esi,0xb3f86147
  425fb2:	sahf   
  425fb3:	outs   dx,BYTE PTR ds:[esi]
  425fb4:	mov    esi,0xa713f72e
  425fb9:	dec    ebp
  425fba:	push   0x55
  425fbc:	jne    0x425fdc
  425fbe:	pop    esi
  425fbf:	hlt    
  425fc0:	call   0x191f58c9
  425fc5:	addr16 pop es
  425fc7:	std    
  425fc8:	neg    eax
  425fca:	xchg   ebx,eax
  425fcb:	jl     0x426020
  425fcd:	hlt    
  425fce:	clc    
  425fcf:	jne    0x425fe9
  425fd1:	xchg   ecx,eax
  425fd2:	pop    esp
  425fd3:	aam    0x26
  425fd5:	jns    0x425f7f
  425fd7:	imul   ebx,DWORD PTR ds:0xf38f76fe,0x3c
  425fde:	fbstp  TBYTE PTR [edi]
  425fe0:	inc    ecx
  425fe1:	outs   dx,DWORD PTR ds:[esi]
  425fe2:	std    
  425fe3:	mov    edx,0x81cc9191
  425fe8:	imul   edi,DWORD PTR [edi],0xffffffc5
  425feb:	call   0xfcfbc867
  425ff0:	jmp    0x426019
  425ff2:	pop    eax
  425ff3:	hlt    
  425ff4:	(bad)  
  425ff5:	cli    
  425ff6:	pop    esi
  425ff7:	rcr    cl,0x31
  425ffa:	popa   
  425ffb:	mov    ch,0x5c
  425ffd:	arpl   WORD PTR ss:[ebp-0x33e09db7],cx
  426004:	jle    0x426058
  426006:	retf   
  426007:	or     esp,DWORD PTR [ebp+0x5cdc6219]
  42600d:	mov    eax,0x5518b6ca
  426012:	adc    BYTE PTR [edi],cl
  426014:	adc    al,0xed
  426016:	call   0xe238d3b3
  42601b:	pop    es
  42601c:	cmp    bh,BYTE PTR [esi-0x5b]
  42601f:	add    BYTE PTR [ebx],dh
  426021:	shr    dh,1
  426023:	push   esi
  426024:	add    edi,0xbf90044a
  42602a:	mov    edx,0x5a6ba465
  42602f:	push   cs
  426030:	ds test ecx,ebx
  426033:	repz dec esp
  426035:	mov    eax,ds:0x487807fd
  42603a:	fsub   DWORD PTR [edx+0x1d]
  42603d:	add    al,0x24
  42603f:	pop    es
  426040:	fsubrp st(5),st
  426042:	jne    0x426041
  426044:	mov    ch,0xf7
  426046:	cmp    DWORD PTR [eax+ecx*1-0x60b7610],esp
  42604d:	idiv   ebx
  42604f:	stos   BYTE PTR es:[edi],al
  426050:	xor    edx,ebx
  426052:	and    BYTE PTR [eax+0x3e97fc12],0x9a
  426059:	rcl    BYTE PTR [ebp-0x78e37835],cl
  42605f:	xchg   ecx,eax
  426060:	xor    BYTE PTR [edx-0x48312942],bl
  426066:	inc    ecx
  426067:	scas   al,BYTE PTR es:[edi]
  426068:	pop    esi
  426069:	push   es
  42606a:	aas    
  42606b:	push   es
  42606c:	ret    
  42606d:	pop    ebp
  42606e:	xchg   ebp,eax
  42606f:	scas   eax,DWORD PTR es:[edi]
  426070:	inc    edi
  426071:	(bad)  
  426072:	xchg   edx,eax
  426073:	push   esi
  426074:	ficom  DWORD PTR [ebx+0x1d]
  426077:	inc    esi
  426078:	jl     0x426027
  42607a:	mov    dl,0x66
  42607c:	jae    0x426069
  42607e:	(bad)  [ebp-0x44db4309]
  426084:	ss into 
  426086:	mov    al,0x51
  426088:	rol    cl,0x2c
  42608b:	(bad)  
  42608c:	xchg   edx,eax
  42608d:	mov    eax,0x65f88fab
  426092:	or     dl,BYTE PTR [edi]
  426094:	popfw  
  426096:	ss inc esp
  426098:	fwait
  426099:	sar    DWORD PTR [esi-0x2c],1
  42609c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42609d:	mov    cl,BYTE PTR [esi+0x19]
  4260a0:	mov    edi,0x64e7ec6f
  4260a5:	aas    
  4260a6:	popa   
  4260a7:	enter  0xc5e6,0x3a
  4260ab:	(bad)  
  4260ac:	out    dx,eax
  4260ad:	mov    bl,0x5c
  4260af:	sub    BYTE PTR [eax],dl
  4260b1:	cmp    bh,cl
  4260b3:	sub    BYTE PTR gs:[eax+0x6011954f],cl
  4260ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260bb:	fst    QWORD PTR [edi-0x4bedf60b]
  4260c1:	mov    eax,0x9b9b92cd
  4260c6:	xor    BYTE PTR [eax],0x92
  4260c9:	sbb    dh,BYTE PTR [ecx-0x14beb918]
  4260cf:	xchg   ecx,eax
  4260d0:	xor    DWORD PTR [eax-0x3f],eax
  4260d3:	adc    ebx,0x1eeb2146
  4260d9:	adc    eax,0x246df847
  4260de:	loope  0x4260b3
  4260e0:	lock scas eax,DWORD PTR es:[edi]
  4260e2:	cmp    edx,edi
  4260e4:	mov    ecx,0x33e3c7cf
  4260e9:	and    DWORD PTR [ecx-0x4f1e91cc],ecx
  4260ef:	mov    dl,BYTE PTR [ebp+0x74]
  4260f2:	shl    DWORD PTR [ecx-0xc],cl
  4260f5:	xor    DWORD PTR [esi],eax
  4260f7:	mov    ds:0xf96c0872,eax
  4260fc:	mov    eax,esi
  4260fe:	sub    al,0x74
  426100:	mov    cl,0xbe
  426102:	xor    ch,BYTE PTR [ecx]
  426104:	call   0x6365c6d5
  426109:	stc    
  42610a:	and    DWORD PTR [edi-0x1f83546d],ecx
  426110:	loop   0x426158
  426112:	test   eax,0x5edd4502
  426117:	lock push ebx
  426119:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42611a:	js     0x426167
  42611c:	xor    ebx,DWORD PTR [edi-0xb]
  42611f:	rol    eax,1
  426121:	or     al,0x1a
  426123:	xor    DWORD PTR [ebx+ebp*4],ebp
  426126:	les    eax,FWORD PTR [ebp-0x41ea82bf]
  42612c:	rcl    DWORD PTR [edi],cl
  42612e:	gs arpl bp,bp
  426131:	mov    ds:0xc8ac3824,eax
  426136:	out    dx,eax
  426137:	push   es
  426138:	mov    BYTE PTR [edx+0x69],bl
  42613b:	push   cs
  42613c:	imul   edx,DWORD PTR [eax-0x1a1afb57],0xffffffbe
  426143:	jmp    0x5a720e2f
  426148:	(bad)  
  426149:	retf   
  42614a:	jo     0x42611f
  42614c:	clc    
  42614d:	lods   al,BYTE PTR ds:[esi]
  42614e:	jns    0x426162
  426150:	scas   al,BYTE PTR es:[edi]
  426151:	leave  
  426152:	push   ecx
  426153:	dec    ebx
  426154:	cmp    eax,0x3af17d90
  426159:	cmp    DWORD PTR [ecx+edi*1-0x4f],0x6195c3c6
  426161:	mov    eax,0x6e4be72b
  426166:	pop    edx
  426167:	ficomp DWORD PTR [edx+0x2f]
  42616a:	push   edi
  42616b:	retf   
  42616c:	sbb    eax,ecx
  42616e:	and    eax,0xfa396145
  426173:	pop    esi
  426174:	mov    dl,0x28
  426176:	jb     0x4261d2
  426178:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426179:	jl     0x42612f
  42617b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42617c:	ja     0x42611e
  42617e:	imul   eax,ebx,0xffffff91
  426181:	sub    al,0x13
  426183:	xchg   edx,eax
  426184:	mov    bh,0x6e
  426186:	mov    eax,ds:0x39d51aa6
  42618b:	cwde   
  42618c:	cmp    eax,0x21edacca
  426191:	adc    DWORD PTR [ebx-0x70a7becc],eax
  426197:	pop    ebx
  426198:	cwde   
  426199:	(bad)  
  42619b:	pop    esp
  42619c:	retf   0x625d
  42619f:	imul   edx,DWORD PTR ds:0x5185c73d,0xaed30075
  4261a9:	push   es
  4261aa:	js     0x426180
  4261ac:	sub    DWORD PTR [eax+0x18],edx
  4261af:	bsf    ebx,DWORD PTR [esi+0x51]
  4261b3:	ror    BYTE PTR [edi],0x17
  4261b6:	cmp    ebp,DWORD PTR [ebp-0x51d215de]
  4261bc:	adc    eax,DWORD PTR [ebx-0x637e2c]
  4261c2:	dec    ecx
  4261c3:	addr16 inc esp
  4261c5:	(bad)  
  4261c7:	xchg   ecx,edi
  4261c9:	out    0x5,eax
  4261cb:	xor    BYTE PTR [esi+0x6c2b4744],bl
  4261d1:	cmc    
  4261d2:	ins    BYTE PTR es:[edi],dx
  4261d3:	ins    DWORD PTR es:[edi],dx
  4261d4:	add    al,0x9
  4261d6:	shl    DWORD PTR [esp+edi*1-0x21],0x70
  4261db:	mov    ds:0xc15d92ed,eax
  4261e0:	mov    ch,0xe8
  4261e2:	rol    DWORD PTR [ecx],0x1f
  4261e5:	mov    edx,ebp
  4261e7:	inc    edx
  4261e8:	mov    DWORD PTR [edi+0x59da1c86],ebp
  4261ee:	dec    ebp
  4261ef:	xor    DWORD PTR [ebp+0x4],ebx
  4261f2:	and    al,0x7
  4261f4:	sub    DWORD PTR [eax+eiz*8+0x79],esi
  4261f8:	(bad)  
  4261f9:	mov    cl,0x0
  4261fb:	mov    cl,0x7e
  4261fd:	dec    ebx
  4261fe:	sub    al,ah
  426200:	sub    BYTE PTR [ebx-0x5b],0xb1
  426204:	dec    eax
  426205:	dec    esp
  426206:	sub    DWORD PTR [ecx],esi
  426208:	and    esi,ebx
  42620a:	nop
  42620b:	xchg   ebx,eax
  42620c:	ror    DWORD PTR [ebx+eiz*2],0x4e
  426210:	adc    al,0xd9
  426212:	div    DWORD PTR [edi]
  426214:	inc    edi
  426215:	hlt    
  426216:	imul   esp,DWORD PTR [edi-0x7131f9c7],0xffffffda
  42621d:	and    BYTE PTR [ecx+0x62],bl
  426220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426221:	jmp    0x4261db
  426223:	push   ecx
  426224:	cmc    
  426225:	ds aam 0x4
  426228:	mov    WORD PTR [ebx+0x529c675],es
  42622e:	(bad)  
  42622f:	sbb    al,0x1f
  426231:	fsub   DWORD PTR [edx]
  426233:	scas   al,BYTE PTR es:[edi]
  426234:	pop    edi
  426235:	retf   0x7af7
  426238:	clc    
  426239:	into   
  42623a:	pusha  
  42623b:	repz repnz adc bh,BYTE PTR [eax+eiz*1+0x66d075ab]
  426244:	jecxz  0x426242
  426246:	in     eax,0xa2
  426248:	ds dec eax
  42624a:	fist   WORD PTR [ecx-0x2e]
  42624d:	pop    ebx
  42624e:	aas    
  42624f:	xchg   BYTE PTR [ebx+ebx*8],dl
  426252:	xor    dl,BYTE PTR [edi+ecx*8-0x69]
  426256:	rol    BYTE PTR [edi+ebp*1+0x439bf975],1
  42625d:	jge    0x42627e
  42625f:	into   
  426260:	adc    eax,0xab2055c0
  426265:	lahf   
  426266:	and    DWORD PTR [esi+0x35],esi
  426269:	mov    DWORD PTR [ecx],0xab4599a9
  42626f:	rcl    DWORD PTR [edx+0x71a6c545],0x97
  426276:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426277:	push   ss
  426278:	fwait
  426279:	call   0x0:0xd6582af6
  426280:	add    BYTE PTR [eax],al
  426282:	jno    0x426247
  426284:	loop   0x426271
  426286:	bnd jmp 0x426302
  426289:	fcomi  st,st(7)
  42628b:	mov    edi,db7
  42628e:	mov    ebx,0xfd70efa3
  426293:	fiadd  DWORD PTR [ecx]
  426295:	add    ah,dh
  426297:	add    al,0x0
  426299:	add    BYTE PTR [edx-0x38],bh
  42629c:	inc    esi
  42629d:	adc    al,0x45
  42629f:	mov    bh,0xab
  4262a1:	fisub  WORD PTR [edx*4-0x6f48b95b]
  4262a8:	mov    esi,0xdb17097e
  4262ad:	xchg   ebx,eax
  4262ae:	fsub   st,st(6)
  4262b0:	ror    BYTE PTR [esi],cl
  4262b2:	fcom   st(6)
  4262b4:	xchg   edx,eax
  4262b5:	aas    
  4262b6:	push   0x1ec7ba91
  4262bb:	ins    BYTE PTR es:[edi],dx
  4262bc:	xor    eax,0x1bc31a7b
  4262c1:	push   ds
  4262c2:	stos   BYTE PTR es:[edi],al
  4262c3:	dec    ebp
  4262c5:	xchg   esi,eax
  4262c6:	stos   BYTE PTR es:[edi],al
  4262c7:	stos   DWORD PTR es:[edi],eax
  4262c8:	pushf  
  4262c9:	push   ds
  4262ca:	popf   
  4262cb:	add    ch,ch
  4262cd:	or     BYTE PTR [ecx],dh
  4262cf:	or     eax,0xa298965c
  4262d4:	xcrypt-ofb (bad)
  4262d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4262d6:	outs   dx,DWORD PTR ds:[esi]
  4262d7:	out    0xa4,al
  4262d9:	bound  edx,QWORD PTR [eax+esi*4-0x386f4010]
  4262e0:	sbb    al,BYTE PTR [eax+0xe87786b]
  4262e6:	sbb    eax,0xe50b15a
  4262eb:	sub    BYTE PTR [esi-0x24],0xb9
  4262ef:	sahf   
  4262f0:	out    0x3,al
  4262f2:	lock enter 0xe626,0xd1
  4262f7:	aad    0x76
  4262f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4262fa:	jno    0x4262a6
  4262fc:	xor    BYTE PTR [esi+0x5c4b1cc9],dl
  426302:	and    eax,0xd8ed6c8b
  426307:	test   eax,0x216d0a5b
  42630c:	mov    ebp,0xb3e38045
  426311:	jecxz  0x426299
  426313:	outs   dx,BYTE PTR ds:[esi]
  426314:	sahf   
  426315:	inc    edx
  426316:	in     al,dx
  426317:	adc    al,BYTE PTR [edi]
  426319:	mov    ebx,0x44c2cb03
  42631e:	or     esi,0xffffffef
  426321:	jge    0x426346
  426323:	adc    DWORD PTR [eax],ebx
  426325:	cs add eax,0xc057b4d0
  42632b:	fisttp DWORD PTR [edi-0x16]
  42632e:	jg     0x42638d
  426330:	mov    ch,0xc3
  426332:	ret    
  426333:	js     0x426337
  426335:	xchg   esp,eax
  426336:	xlat   BYTE PTR ds:[ebx]
  426337:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426338:	mov    ebp,0x3d69301e
  42633d:	jmp    0xa6be6fc8
  426342:	test   eax,0x4d519898
  426347:	xor    DWORD PTR [esi-0xa9d8b1e],edx
  42634d:	mov    ds:0x1c8937ce,eax
  426352:	scas   eax,DWORD PTR es:[edi]
  426353:	jl     0x4263ba
  426355:	and    BYTE PTR [edx],bh
  426357:	movq   QWORD PTR [eax+0x46025114],mm6
  42635e:	(bad)  
  42635f:	(bad)  
  426360:	inc    ecx
  426361:	sbb    al,0xce
  426363:	mov    dh,0xb6
  426365:	mov    ecx,0xe5ee40be
  42636a:	(bad)  
  42636b:	add    eax,0x9fba2969
  426370:	dec    ebp
  426371:	dec    esi
  426372:	pop    eax
  426373:	mov    ecx,0x8c4a03b4
  426378:	(bad)  
  426379:	sbb    al,0x3b
  42637b:	cmp    BYTE PTR [edx],bh
  42637d:	repz (bad) 
  42637f:	and    al,0xb4
  426381:	ja     0x4263c0
  426383:	into   
  426384:	mov    bl,0x2c
  426386:	aas    
  426387:	jnp    0x426344
  426389:	and    dh,bh
  42638b:	test   BYTE PTR [edx],bh
  42638d:	add    ah,bl
  42638f:	ins    BYTE PTR es:[edi],dx
  426390:	scas   al,BYTE PTR es:[edi]
  426391:	fisubr WORD PTR [edx-0x5444849a]
  426397:	(bad)  
  426398:	mov    eax,ds:0xc94711e0
  42639d:	ficom  DWORD PTR [esi]
  42639f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4263a0:	or     dl,BYTE PTR [eax-0x15]
  4263a3:	inc    ecx
  4263a4:	jecxz  0x426350
  4263a6:	or     dl,BYTE PTR [edx+0x64]
  4263a9:	jbe    0x426355
  4263ab:	mov    ebp,0xd8d50bd
  4263b0:	pop    edi
  4263b1:	xor    eax,0x5a085c3c
  4263b6:	mov    ah,0x5
  4263b8:	add    edx,DWORD PTR [esi]
  4263ba:	add    BYTE PTR [esi+0x1e],al
  4263bd:	jmp    DWORD PTR [ebx]
  4263bf:	sar    DWORD PTR [ecx-0x87ac07c],cl
  4263c5:	push   cs
  4263c6:	mov    ds:0x8b482e11,eax
  4263cb:	cmc    
  4263cc:	stos   DWORD PTR es:[edi],eax
  4263cd:	add    bh,cl
  4263cf:	rcl    BYTE PTR [esi+0x17],cl
  4263d2:	(bad)  
  4263d3:	int3   
  4263d4:	xor    esp,eax
  4263d6:	nop
  4263d7:	fucomp st(6)
  4263d9:	push   0x2e344593
  4263de:	adc    al,0x3d
  4263e0:	xor    eax,0xb7b53034
  4263e5:	clc    
  4263e6:	scas   al,BYTE PTR es:[edi]
  4263e7:	jns    0x42641c
  4263e9:	clc    
  4263ea:	call   0x77b1:0x5850c6c1
  4263f1:	daa    
  4263f2:	retf   0xd89d
  4263f5:	imul   edi,ecx,0x6d
  4263f8:	jmp    0x42c213b4
  4263fd:	fist   DWORD PTR [esi]
  4263ff:	loope  0x42639d
  426401:	mov    DWORD PTR [ebp+eax*1-0x36],edx
  426405:	stc    
  426406:	or     eax,DWORD PTR [edi+0x1d8cf172]
  42640c:	mov    bl,0x5
  42640e:	push   edi
  42640f:	push   ecx
  426410:	jmp    0x7389:0x731207c2
  426417:	inc    ebx
  426418:	cmp    al,0x24
  42641a:	inc    ebx
  42641b:	sub    al,0xcf
  42641d:	add    BYTE PTR [eax+ebp*1-0x6d8d79f8],ch
  426424:	dec    esi
  426425:	imul   edi,ecx,0xde277756
  42642b:	cmc    
  42642c:	mov    ch,0x65
  42642e:	sub    ecx,DWORD PTR [edx+0x2b716f46]
  426434:	jp     0x4263ef
  426436:	inc    edi
  426437:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426438:	mov    bl,al
  42643a:	pop    es
  42643b:	inc    ebp
  42643c:	push   esi
  42643d:	push   0xffffffce
  42643f:	xor    al,0x85
  426441:	arpl   WORD PTR [edi-0xb],si
  426444:	icebp  
  426445:	in     eax,dx
  426446:	dec    ecx
  426447:	inc    ebx
  426448:	aam    0x29
  42644a:	sub    eax,DWORD PTR [ecx-0x6]
  42644d:	cmp    edx,DWORD PTR [eax+0x63ea3acb]
  426453:	ror    BYTE PTR [ebx],1
  426455:	scas   eax,DWORD PTR es:[edi]
  426456:	out    0xd7,eax
  426458:	lahf   
  426459:	and    al,0x30
  42645b:	repnz outs dx,BYTE PTR ds:[esi]
  42645d:	(bad)  
  42645f:	fidiv  WORD PTR [esi]
  426461:	rcl    DWORD PTR [eax-0xaf87833],0x9d
  426468:	push   0xffffff95
  42646a:	sbb    edx,DWORD PTR [ebp-0x5c]
  42646d:	lea    edx,[edx*2+0x175b6ae6]
  426474:	out    dx,al
  426475:	add    BYTE PTR [eax],bl
  426477:	call   0x411b:0xe7c63f44
  42647e:	jmp    0x22599db6
  426483:	xor    DWORD PTR [eiz*2+0x639f7f46],esp
  42648a:	dec    esi
  42648b:	push   ss
  42648c:	xchg   ecx,eax
  42648d:	in     al,dx
  42648e:	xchg   edi,eax
  42648f:	push   edx
  426490:	mov    edx,0xc4904f78
  426495:	leave  
  426496:	pop    esi
  426497:	popa   
  426498:	int    0x7d
  42649a:	(bad)  
  42649b:	retf   0x941d
  42649e:	cmp    al,ch
  4264a0:	pop    ecx
  4264a1:	push   0x35
  4264a3:	stos   BYTE PTR es:[edi],al
  4264a4:	pop    ds
  4264a5:	jbe    0x42645a
  4264a7:	popf   
  4264a8:	jb     0x42643b
  4264aa:	sbb    DWORD PTR [esi],esp
  4264ac:	push   eax
  4264ad:	mov    ds:0xace8cd7d,eax
  4264b2:	pop    edx
  4264b3:	fstp   DWORD PTR ds:[edi+0x5f]
  4264b7:	inc    edi
  4264b8:	int3   
  4264b9:	jae    0x4264ed
  4264bb:	pusha  
  4264bc:	ss ins BYTE PTR es:[edi],dx
  4264be:	call   0xa5dda79c
  4264c3:	repnz (bad) 
  4264c5:	ins    DWORD PTR es:[edi],dx
  4264c6:	cli    
  4264c7:	xor    eax,0xe839e521
  4264cc:	jmp    0x4264e8
  4264ce:	and    ah,al
  4264d0:	scas   al,BYTE PTR es:[edi]
  4264d1:	xor    DWORD PTR ds:0xd2316cc9,esi
  4264d7:	mov    ch,0x94
  4264d9:	ret    
  4264da:	or     al,0x43
  4264dc:	nop
  4264dd:	adc    al,0xa2
  4264df:	sbb    edx,esp
  4264e1:	sti    
  4264e2:	mov    ch,0xb
  4264e4:	jmp    0xc7a73650
  4264e9:	ja     0x4264e0
  4264eb:	push   ds
  4264ec:	jmp    0xed570421
  4264f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4264f2:	call   0x93e1d0c3
  4264f7:	(bad)  
  4264f8:	jo     0x426558
  4264fa:	sub    ebp,ebp
  4264fc:	jae    0x4264a8
  4264fe:	lds    esi,FWORD PTR [ebp+0x3c]
  426501:	shl    ebx,1
  426503:	out    0x6f,al
  426505:	adc    ch,dh
  426507:	fstp   TBYTE PTR [edi+ebx*1+0x6f4d39c8]
  42650e:	pop    esi
  42650f:	and    al,0x7e
  426511:	into   
  426512:	test   eax,0x6d3a99e3
  426517:	call   0x8625:0x15afd485
  42651e:	pop    ds
  42651f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426520:	ins    DWORD PTR es:[edi],dx
  426521:	and    esi,DWORD PTR [esi]
  426523:	scas   al,BYTE PTR es:[edi]
  426524:	das    
  426525:	and    DWORD PTR [ecx],ecx
  426527:	out    dx,eax
  426528:	push   0x44
  42652a:	pop    ss
  42652b:	cmp    al,0xad
  42652d:	xchg   esp,eax
  42652e:	mov    bl,0x9d
  426530:	jno    0x4264ba
  426532:	enter  0x45e2,0x12
  426536:	sub    DWORD PTR [edx],edx
  426538:	(bad)  [ebx+0x11]
  42653b:	iret   
  42653c:	xor    al,bl
  42653e:	shr    bh,0x1
  426541:	mov    ecx,0x9ac45cf1
  426546:	ds in  al,dx
  426548:	dec    edx
  426549:	je     0x4264d1
  42654b:	adc    al,BYTE PTR [ebx-0x6a44cf15]
  426551:	mov    edx,0x991c8c71
  426556:	and    ebx,esp
  426558:	pop    ebx
  426559:	dec    esi
  42655a:	fisub  WORD PTR [edx-0x3f]
  42655d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42655e:	push   ss
  42655f:	(bad)  
  426560:	data16 add ch,dl
  426563:	ret    0xfbc9
  426566:	and    DWORD PTR [ecx+0x7861a276],eax
  42656c:	mov    db1,esp
  42656f:	fcom   QWORD PTR [edx+0x48]
  426572:	mov    bl,0xe
  426574:	test   eax,0x91ff8ce0
  426579:	xor    esi,DWORD PTR [esi-0x5cd35dd7]
  42657f:	push   esp
  426580:	jmp    0x71d5:0x42512fc2
  426587:	adc    dh,BYTE PTR ds:[edx+0x6e2c1a9]
  42658e:	fcmovnu st,st(0)
  426590:	fldenv [ebp+ebx*2-0x54]
  426594:	xor    ah,dl
  426596:	add    DWORD PTR [ecx],edx
  426598:	dec    ecx
  426599:	pop    ss
  42659a:	xchg   esi,eax
  42659b:	sti    
  42659c:	sbb    al,BYTE PTR [esi-0x138fee6f]
  4265a2:	jle    0x42655e
  4265a4:	(bad)  
  4265a6:	mov    cl,0x44
  4265a8:	jmp    0x2441:0x92dfda8e
  4265af:	and    al,0xf
  4265b1:	cmc    
  4265b2:	cmp    BYTE PTR ds:[edx-0x47ec1e3d],bh
  4265b9:	mov    ds:0x8bc42998,eax
  4265be:	sub    ah,BYTE PTR [ebx]
  4265c0:	xchg   ebx,eax
  4265c1:	add    al,0xb3
  4265c3:	aaa    
  4265c4:	mov    ds:0x91958f3,al
  4265c9:	enter  0x45a0,0xe2
  4265cd:	inc    ebp
  4265ce:	mov    bl,0x46
  4265d0:	outs   dx,DWORD PTR ds:[esi]
  4265d1:	add    ebp,DWORD PTR [ebx-0x55ac3808]
  4265d7:	mov    dl,0x1a
  4265d9:	mov    BYTE PTR [esi-0x1be77ff9],dl
  4265df:	cmp    dl,0x54
  4265e2:	add    eax,0x8b85629a
  4265e7:	daa    
  4265e8:	dec    edi
  4265e9:	imul   esi,DWORD PTR [ecx+0x74],0xc
  4265ed:	mov    cl,BYTE PTR [ebp+0x1d03c5be]
  4265f3:	jecxz  0x426673
  4265f5:	cld    
  4265f6:	aam    0x3e
  4265f8:	mov    BYTE PTR ds:0x4e1822b1,dl
  4265fe:	adc    esp,DWORD PTR [esi]
  426600:	setbe  BYTE PTR [edi]
  426603:	out    0x93,eax
  426605:	push   esi
  426606:	mov    cl,0x84
  426608:	or     DWORD PTR [eax+0x63738f0],esp
  42660e:	dec    eax
  42660f:	xor    DWORD PTR [esi+0x2635be58],eax
  426615:	test   DWORD PTR gs:[ecx],0x8c71026d
  42661c:	dec    edi
  42661d:	push   ebx
  42661e:	xchg   edi,eax
  42661f:	repz adc al,cl
  426622:	sbb    eax,esp
  426624:	sahf   
  426625:	and    ah,BYTE PTR [ecx-0x6b13b79f]
  42662b:	fs jne 0x4265e4
  42662e:	lods   al,BYTE PTR ds:[esi]
  42662f:	dec    esp
  426630:	push   esp
  426631:	aad    0xeb
  426633:	pop    ss
  426634:	fwait
  426635:	and    dl,bh
  426637:	lods   eax,DWORD PTR ds:[esi]
  426638:	xchg   ecx,eax
  426639:	inc    edi
  42663a:	or     edi,ecx
  42663c:	leave  
  42663d:	mov    ?,ecx
  42663f:	push   esi
  426640:	mov    ecx,0xefbcb58a
  426645:	das    
  426646:	add    eax,esi
  426648:	mov    esp,ecx
  42664a:	jnp    0x42667e
  42664c:	push   ebx
  42664d:	cld    
  42664e:	fbld   TBYTE PTR [ebp-0x41]
  426651:	(bad)  
  426652:	in     al,0x13
  426654:	fdiv   DWORD PTR [ebx-0x5a2ff39b]
  42665a:	sti    
  42665b:	dec    ebp
  42665c:	cmp    ah,BYTE PTR [edi]
  42665e:	jne    0x426637
  426660:	in     eax,dx
  426661:	div    DWORD PTR [ebp+0x17d620cb]
  426667:	mov    WORD PTR [ebp-0x1856a3ff],ss
  42666d:	adc    eax,0x2fded5a3
  426672:	sbb    eax,0xf03805c
  426677:	sbb    BYTE PTR [ecx-0x4b5aec11],bh
  42667d:	ficomp DWORD PTR [esi]
  42667f:	scas   eax,DWORD PTR es:[edi]
  426680:	cmp    BYTE PTR [ebx-0x5533666c],ch
  426686:	push   ebx
  426687:	and    cl,BYTE PTR [esi]
  426689:	push   edi
  42668a:	pop    edx
  42668b:	xchg   esi,eax
  42668c:	aam    0x4b
  42668e:	mov    esp,DWORD PTR [ecx+0x49f6dc62]
  426694:	scas   eax,DWORD PTR es:[edi]
  426695:	clc    
  426696:	dec    esp
  426697:	pop    edx
  426698:	adc    ch,0xd8
  42669b:	aaa    
  42669c:	ins    BYTE PTR es:[edi],dx
  42669d:	mov    eax,0x11c2e189
  4266a2:	pop    DWORD PTR [eax+0x2928f1f7]
  4266a8:	in     eax,0xf2
  4266aa:	jne    0x42671c
  4266ac:	adc    eax,0x995cba41
  4266b1:	sub    eax,0x8ac08045
  4266b6:	shl    ch,1
  4266b8:	push   ss
  4266b9:	out    0x4d,eax
  4266bb:	stc    
  4266bc:	dec    edi
  4266bd:	repz add eax,0x839ea449
  4266c3:	dec    edi
  4266c4:	push   esi
  4266c5:	pop    ss
  4266c6:	jbe    0x426657
  4266c8:	ret    0x296c
  4266cb:	xor    eax,0x9671f9bd
  4266d0:	add    ebx,DWORD PTR [edi+0x934e56b]
  4266d6:	mov    DWORD PTR [ecx],eax
  4266d8:	mov    dh,0x5b
  4266da:	test   DWORD PTR [eax-0x6],esp
  4266dd:	mov    esp,0x8ea3f714
  4266e2:	lahf   
  4266e3:	nop
  4266e4:	dec    edx
  4266e5:	call   0x891c:0xf26abb54
  4266ec:	pop    es
  4266ed:	mov    BYTE PTR [ebp+0x733ffc50],cl
  4266f3:	xor    eax,DWORD PTR [ecx+0x73]
  4266f6:	inc    ebp
  4266f7:	fstp   QWORD PTR [esi]
  4266fa:	jecxz  0x4266e8
  4266fc:	or     cl,BYTE PTR [edx+0x16]
  4266ff:	jmp    0x426717
  426701:	dec    eax
  426702:	lea    ebx,[ebp-0x2bedabc3]
  426708:	sar    DWORD PTR [edx-0x51],1
  42670b:	mov    DWORD PTR [ecx+0x5f8fc97a],esp
  426711:	aad    0x38
  426713:	mov    eax,ebp
  426715:	jno    0x4266a7
  426717:	pushf  
  426718:	add    ebp,0x5372dc16
  42671e:	ins    BYTE PTR es:[edi],dx
  42671f:	les    edx,FWORD PTR [ebp-0x5b]
  426722:	add    DWORD PTR [edx-0x16696db1],esp
  426728:	pop    edx
  426729:	ja     0x42675d
  42672b:	iret   
  42672c:	mov    WORD PTR [esi+0x17],gs
  42672f:	sbb    bh,BYTE PTR [esi+0x50a8e057]
  426735:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426736:	jp     0x42678b
  426738:	xchg   esp,eax
  426739:	repnz push 0x1416a82
  42673f:	fild   WORD PTR [ebp+0x5d]
  426742:	pop    ss
  426743:	aas    
  426744:	push   es
  426745:	loopne 0x426752
  426747:	pusha  
  426748:	fidiv  WORD PTR [ebp+0x7df5825]
  42674e:	adc    BYTE PTR [ebp+0x4c],bl
  426751:	cmp    DWORD PTR [esi],esp
  426753:	shr    DWORD PTR [ebx],1
  426755:	mov    dh,ah
  426757:	push   eax
  426758:	test   eax,0x18964c8b
  42675d:	fsub   DWORD PTR [ebp+0x1f]
  426760:	adc    ah,dh
  426762:	and    edi,DWORD PTR [ebx]
  426764:	leave  
  426765:	cmp    dh,BYTE PTR [ecx]
  426767:	in     eax,0x1c
  426769:	and    al,0xed
  42676b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42676c:	fcom   QWORD PTR [ebx]
  42676e:	push   esi
  42676f:	cwde   
  426770:	xchg   BYTE PTR ds:0xf994ab8d,cl
  426776:	aad    0x11
  426778:	aad    0x64
  42677a:	clc    
  42677b:	sub    DWORD PTR [esi+esi*8-0x4cd4628e],ecx
  426782:	sub    ah,BYTE PTR [ebx]
  426784:	in     eax,0x79
  426786:	scas   eax,DWORD PTR es:[edi]
  426787:	sbb    al,0x61
  426789:	jb     0x4267ea
  42678b:	push   ss
  42678c:	mov    ebx,esi
  42678e:	add    BYTE PTR [eax],al
  426790:	add    BYTE PTR [eax],al
  426792:	and    DWORD PTR [ecx+ebp*8],0xfbdfed93
  426799:	ss cwde 
  42679b:	in     eax,0x27
  42679d:	inc    esp
  42679e:	xor    eax,0xf1ec9a7f
  4267a3:	fild   WORD PTR [ecx]
  4267a5:	add    ah,dh
  4267a7:	add    al,0x0
  4267a9:	add    BYTE PTR [ebx-0x79c8cf54],ah
  4267af:	dec    edi
  4267b0:	outs   dx,DWORD PTR ds:[esi]
  4267b1:	fsub   QWORD PTR [edx]
  4267b3:	inc    edx
  4267b4:	in     al,dx
  4267b5:	stc    
  4267b6:	inc    edi
  4267b7:	shr    al,1
  4267b9:	popf   
  4267ba:	clc    
  4267bb:	es mov al,0x6f
  4267be:	push   edi
  4267bf:	cmp    ebp,ecx
  4267c1:	inc    esp
  4267c2:	or     eax,0x711c9f73
  4267c7:	jmp    ebp
  4267c9:	pop    esp
  4267ca:	and    DWORD PTR [edx],edi
  4267cc:	fadd   QWORD PTR [eax-0x8]
  4267cf:	dec    eax
  4267d0:	js     0x4267a4
  4267d2:	es jb  0x426826
  4267d5:	test   ebx,edx
  4267d7:	and    esi,esi
  4267d9:	sahf   
  4267da:	out    0x7e,al
  4267dc:	jns    0x4267e3
  4267de:	xor    eax,0x663cca6a
  4267e3:	fmul   QWORD PTR [ecx]
  4267e5:	dec    edi
  4267e6:	pop    edx
  4267e7:	in     al,0x1a
  4267e9:	inc    ecx
  4267ea:	(bad)  
  4267eb:	and    DWORD PTR [eax+ebp*1+0x3346b4df],ecx
  4267f2:	jne    0x426778
  4267f4:	xor    eax,0xc9f689ca
  4267f9:	fldcw  WORD PTR [ebp+edi*1-0x142d07f9]
  426800:	jle    0x4267a8
  426802:	ret    0x44d
  426805:	cmp    BYTE PTR [esi+0x6798ba85],al
  42680b:	add    ecx,DWORD PTR ds:0x7913b847
  426811:	push   ebp
  426812:	xchg   DWORD PTR [eax],edx
  426814:	fwait
  426815:	test   al,0xfa
  426817:	jnp    0x4267bf
  426819:	clc    
  42681a:	xchg   BYTE PTR [edx],cl
  42681c:	pop    ebx
  42681d:	sub    ebx,DWORD PTR [ecx+0x14bbc78a]
  426823:	add    al,0x85
  426825:	test   BYTE PTR [esi],0xf9
  426828:	jbe    0x426800
  42682a:	(bad)  
  42682b:	sbb    eax,0x20e8b696
  426830:	cmc    
  426831:	adc    al,0xc9
  426833:	and    al,bl
  426835:	xor    BYTE PTR ds:0xb177e8f4,bl
  42683b:	inc    ebx
  42683c:	sub    eax,0x9f26c23f
  426841:	and    ah,dh
  426843:	mov    esp,0xec60e6a6
  426848:	repz mov edi,DWORD PTR [ebp+0x7d69a3d2]
  42684f:	dec    eax
  426850:	dec    esi
  426851:	sub    esi,eax
  426853:	adc    al,0x76
  426855:	add    DWORD PTR [ebp+0x5c],eax
  426858:	adc    dl,BYTE PTR [ebp+0x1e7298d7]
  42685e:	xchg   DWORD PTR [ecx-0x18],eax
  426861:	shr    BYTE PTR [ebx+eiz*8-0x231c2bd7],cl
  426868:	jne    0x4268d9
  42686a:	sub    dh,BYTE PTR [edi-0x3c]
  42686d:	arpl   dx,di
  42686f:	add    ecx,ecx
  426871:	test   al,0x63
  426873:	push   0xffffffca
  426875:	imul   edx,DWORD PTR [eax+eiz*4],0xfffffff7
  426879:	enter  0xe7d9,0xaf
  42687d:	dec    ebp
  42687e:	push   cs
  42687f:	and    esp,0x205135f5
  426885:	push   eax
  426886:	dec    esp
  426887:	les    edx,FWORD PTR [esi+0x46]
  42688a:	inc    edx
  42688b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42688c:	repz inc esi
  42688e:	sbb    eax,0xa01d8bfa
  426893:	pushf  
  426894:	mov    ch,0x4c
  426896:	cmp    al,0xdb
  426898:	sub    ebp,DWORD PTR [ecx-0x58710f0]
  42689e:	xchg   ebp,eax
  42689f:	cdq    
  4268a0:	nop
  4268a1:	or     BYTE PTR ds:0xf1da8764,cl
  4268a7:	adc    eax,0xcdee5554
  4268ac:	dec    esi
  4268ad:	out    dx,al
  4268ae:	ret    0xea5f
  4268b1:	xchg   ecx,eax
  4268b2:	das    
  4268b3:	fiadd  DWORD PTR [edi]
  4268b5:	outs   dx,DWORD PTR ds:[esi]
  4268b6:	xchg   edi,eax
  4268b7:	mov    ebp,DWORD PTR [ecx+0x69f04835]
  4268bd:	jo     0x4268e1
  4268bf:	ds jecxz 0x426874
  4268c2:	shl    ch,0x5a
  4268c5:	test   dl,ah
  4268c7:	scas   al,BYTE PTR es:[edi]
  4268c8:	(bad)  
  4268c9:	fwait
  4268ca:	repz pop esp
  4268cc:	imul   BYTE PTR [ecx-0x31]
  4268cf:	inc    esi
  4268d0:	add    al,0xc7
  4268d2:	aam    0xa2
  4268d4:	jp     0x4268b1
  4268d6:	sub    DWORD PTR [ebp+0x41],edi
  4268d9:	mov    ebx,0x35262930
  4268de:	repz loop 0x4268a1
  4268e1:	lds    ebx,FWORD PTR [edx+0x792c8a7e]
  4268e7:	clc    
  4268e8:	in     al,dx
  4268e9:	jae    0x426969
  4268eb:	jg     0x426877
  4268ed:	jp     0x426959
  4268ef:	pusha  
  4268f0:	scas   eax,DWORD PTR es:[edi]
  4268f1:	ins    DWORD PTR es:[edi],dx
  4268f2:	ins    BYTE PTR es:[edi],dx
  4268f3:	pushf  
  4268f4:	repz cmp BYTE PTR [ecx],bl
  4268f7:	dec    ebp
  4268f8:	cmp    al,0x2c
  4268fa:	adc    al,0x15
  4268fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4268fd:	pop    eax
  4268fe:	arpl   WORD PTR ds:0x3eb671ee,si
  426904:	jne    0x4268c4
  426906:	fnstsw WORD PTR [edx]
  426908:	inc    ebx
  426909:	sub    al,0x7e
  42690b:	aas    
  42690c:	aas    
  42690d:	aad    0xc5
  42690f:	push   eax
  426910:	in     eax,0x35
  426912:	sub    dh,cl
  426914:	push   ebx
  426915:	jns    0x4268b3
  426917:	push   ebx
  426918:	in     al,0x3c
  42691a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42691b:	popa   
  42691c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42691d:	lock repz push esi
  426920:	js     0x426965
  426922:	out    0xdd,al
  426924:	adc    BYTE PTR [eax],cl
  426926:	sti    
  426927:	ja     0x42695a
  426929:	adc    BYTE PTR [esi],0x7d
  42692c:	ja     0x42698b
  42692e:	cmp    al,0x18
  426930:	mov    esi,0x582a44e3
  426935:	adc    DWORD PTR [ebx-0xcd5d0d5],esi
  42693b:	(bad)  
  42693c:	(bad)  
  42693d:	enter  0x48bf,0xa4
  426941:	mov    edx,0x3db0f486
  426946:	mov    al,0xa1
  426948:	and    edi,DWORD PTR [esi-0x86e6c1b]
  42694e:	mov    ch,0x4b
  426950:	jns    0x42691d
  426952:	ins    BYTE PTR es:[edi],dx
  426953:	fsub   QWORD PTR [edi]
  426955:	jo     0x42694a
  426957:	mov    al,ds:0x3e6eb35b
  42695c:	jns    0x4269d7
  42695e:	inc    ebx
  42695f:	or     DWORD PTR [eax+0x5827362b],ebp
  426965:	add    al,0x21
  426967:	pop    eax
  426968:	sbb    BYTE PTR [edx+0x3c],cl
  42696b:	in     eax,0xef
  42696d:	repz rcr DWORD PTR [ebx-0x252b6eed],0x38
  426975:	(bad)  
  426977:	push   ebp
  426978:	int3   
  426979:	sub    al,0x8c
  42697b:	mov    eax,ds:0x550dab67
  426980:	mov    ecx,DWORD PTR [edi+0x2c603003]
  426986:	or     al,0x59
  426988:	repnz int3 
  42698a:	nop
  42698b:	popf   
  42698c:	jle    0x42693e
  42698e:	dec    eax
  42698f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426990:	ins    DWORD PTR es:[edi],dx
  426991:	in     al,dx
  426992:	push   edi
  426993:	loop   0x426983
  426995:	mov    edi,0xded65d76
  42699a:	int    0x42
  42699c:	aad    0x1a
  42699e:	and    eax,0x1eea9b2f
  4269a3:	jle    0x426a22
  4269a5:	in     eax,dx
  4269a6:	out    dx,al
  4269a7:	pop    edx
  4269a8:	in     al,dx
  4269a9:	fwait
  4269aa:	mov    dl,0x97
  4269ac:	bound  eax,QWORD PTR [ebx+0x29eca712]
  4269b2:	shl    BYTE PTR [ecx+0x35b73ccd],1
  4269b8:	ins    DWORD PTR es:[edi],dx
  4269b9:	in     al,0xfe
  4269bb:	fnsave [ebp+0x1]
  4269be:	push   esi
  4269bf:	push   esp
  4269c0:	inc    ebp
  4269c1:	fmul   QWORD PTR [ecx-0x5d]
  4269c4:	push   0xa405cf77
  4269c9:	mov    esi,0x9cf39ef8
  4269ce:	mov    ebx,0x8bf5af76
  4269d3:	jmp    0x426a1d
  4269d5:	cmp    DWORD PTR [ebx+ebx*4-0x7af48860],ebp
  4269dc:	scas   eax,DWORD PTR es:[edi]
  4269dd:	stc    
  4269de:	sbb    ebp,ebx
  4269e0:	in     al,dx
  4269e1:	xchg   ebx,eax
  4269e2:	and    cl,BYTE PTR [esi]
  4269e4:	push   0xffffffb2
  4269e6:	or     edi,edi
  4269e8:	ins    BYTE PTR es:[edi],dx
  4269e9:	sub    eax,DWORD PTR [ebx-0x59c70392]
  4269ef:	cmp    BYTE PTR [ecx+0x526210e0],0x1e
  4269f6:	out    0xbf,al
  4269f8:	stos   BYTE PTR es:[edi],al
  4269f9:	jmp    0x426a27
  4269fb:	mov    cl,0x53
  4269fd:	push   esp
  4269fe:	daa    
  4269ff:	fdivrp st(0),st
  426a01:	(bad)  [ecx+0x47]
  426a04:	sbb    al,0x1f
  426a06:	js     0x426990
  426a08:	dec    eax
  426a09:	lock lahf 
  426a0b:	(bad)  
  426a0c:	mov    edi,0x1f90f9ac
  426a11:	sahf   
  426a12:	clc    
  426a13:	xchg   edi,eax
  426a14:	inc    edi
  426a15:	in     eax,0xe
  426a17:	mov    bl,0x99
  426a19:	mov    dl,bh
  426a1b:	mov    ebp,0xdbc72b2b
  426a20:	sti    
  426a21:	cmp    eax,0x8cbb6ff2
  426a26:	jl     0x426a54
  426a28:	ja     0x426a96
  426a2a:	or     ch,BYTE PTR [ebp+0x6]
  426a2d:	js     0x4269f5
  426a2f:	enter  0x5eed,0xf6
  426a33:	cmp    DWORD PTR ds:0x2bd09988,eax
  426a39:	jp     0x426a4a
  426a3b:	aam    0x6d
  426a3d:	mov    ebp,0x13d835fe
  426a42:	les    esp,FWORD PTR [eax+0x5094139d]
  426a48:	inc    ebx
  426a49:	out    0x83,eax
  426a4b:	sub    ebx,edi
  426a4d:	jmp    0x426a1f
  426a4f:	clc    
  426a50:	lock push ebx
  426a52:	je     0x4269eb
  426a54:	push   cs
  426a55:	aam    0x87
  426a57:	cld    
  426a58:	adc    BYTE PTR [eax+0x48],al
  426a5b:	test   eax,0xef7af4cd
  426a60:	shl    BYTE PTR [esi+0x7ba17ce5],1
  426a66:	ror    ebx,cl
  426a68:	sbb    ecx,DWORD PTR [ebx]
  426a6a:	pop    ebx
  426a6b:	outs   dx,DWORD PTR ds:[esi]
  426a6c:	dec    ecx
  426a6d:	scas   eax,DWORD PTR es:[edi]
  426a6e:	cmc    
  426a6f:	inc    ecx
  426a70:	jne    0x426a90
  426a72:	repnz dec edx
  426a74:	cld    
  426a75:	inc    ecx
  426a76:	jmp    0xfc3cd36e
  426a7b:	iret   
  426a7c:	sbb    ebp,esi
  426a7e:	lahf   
  426a7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a80:	leave  
  426a81:	in     al,0xd6
  426a83:	inc    esi
  426a84:	cld    
  426a85:	xchg   ebx,edi
  426a87:	cmp    DWORD PTR [edi-0x5c161cf7],0x56
  426a8e:	push   edx
  426a8f:	and    al,0x39
  426a91:	and    al,0xf8
  426a93:	hlt    
  426a94:	adc    ah,BYTE PTR [esi]
  426a96:	lds    esp,FWORD PTR [ebx-0x78d1af61]
  426a9c:	adc    eax,0x83833ff6
  426aa1:	inc    edx
  426aa2:	(bad)  
  426aa4:	sbb    DWORD PTR [eax+eax*1],esp
  426aa7:	jg     0x426ab6
  426aa9:	or     cl,BYTE PTR ds:0xe50a573e
  426aaf:	je     0x426a61
  426ab1:	mov    edx,0xb49bc211
  426ab6:	sub    ebx,edx
  426ab8:	pusha  
  426ab9:	sub    DWORD PTR [ecx],eax
  426abb:	inc    edi
  426abc:	pop    ss
  426abd:	and    DWORD PTR ss:[edi+0x0],edx
  426ac1:	mov    DWORD PTR [edx-0x229d8f04],0x897bd4e3
  426acb:	mov    ecx,0x6cde1886
  426ad0:	shr    DWORD PTR cs:[ecx],cl
  426ad3:	xchg   ebp,eax
  426ad4:	jmp    0x426ab0
  426ad6:	aaa    
  426ad7:	dec    edx
  426ad8:	cmp    bh,BYTE PTR [esi]
  426ada:	sbb    eax,0xa280b968
  426adf:	shl    DWORD PTR [edx+edx*1],cl
  426ae2:	cwde   
  426ae3:	pushw  0x7
  426ae6:	jp     0x426b16
  426ae8:	pop    ds
  426ae9:	mov    ebx,0xf65aa87b
  426aee:	mov    ds:0x431cc8c8,al
  426af3:	sub    eax,0x8fb43de7
  426af8:	pusha  
  426af9:	sti    
  426afa:	xor    edi,DWORD PTR [ecx-0x7c83a92c]
  426b00:	push   ecx
  426b01:	mov    edi,0xdd4730c6
  426b06:	in     al,dx
  426b07:	mov    esp,0xe63af546
  426b0c:	enter  0x67aa,0xa4
  426b10:	(bad)  
  426b11:	ror    esi,1
  426b13:	push   DWORD PTR [ebp+0x8efc93e]
  426b19:	jb     0x426afb
  426b1b:	int    0xd3
  426b1d:	retf   0xdb8b
  426b20:	iret   
  426b21:	mov    dl,0x42
  426b23:	dec    ebx
  426b24:	scas   al,BYTE PTR es:[edi]
  426b25:	call   0xe1d8189e
  426b2a:	push   edi
  426b2b:	cmp    dl,BYTE PTR [ebx]
  426b2d:	call   0x718c:0xd91b50f8
  426b34:	sbb    eax,0x80fec49d
  426b39:	jae    0x426b50
  426b3b:	fdivp  st(5),st
  426b3d:	cmp    edx,edi
  426b3f:	cs push ecx
  426b41:	shr    dl,cl
  426b43:	leave  
  426b44:	or     DWORD PTR [eax-0x22],edx
  426b47:	int3   
  426b48:	(bad)  
  426b49:	out    dx,al
  426b4a:	fist   WORD PTR [ebx-0x5d340665]
  426b50:	pop    ebp
  426b51:	mov    eax,0xb01d467b
  426b56:	test   al,0x49
  426b58:	inc    edx
  426b59:	push   ebx
  426b5a:	fstp   DWORD PTR [ebx-0x2729c476]
  426b60:	mov    eax,0xdb1441f5
  426b65:	cmp    al,0xdc
  426b67:	ror    DWORD PTR [ebx],1
  426b69:	addr16 popa 
  426b6b:	jle    0x426af8
  426b6d:	jecxz  0x426b0e
  426b6f:	xchg   esp,eax
  426b70:	stc    
  426b71:	dec    ecx
  426b72:	loopne 0x426b23
  426b74:	cmp    eax,DWORD PTR [eax-0x7f]
  426b77:	loope  0x426b70
  426b79:	cli    
  426b7a:	add    BYTE PTR [edi+0x2622f3fb],bl
  426b80:	or     BYTE PTR [ecx+0x38],ch
  426b83:	sbb    bl,BYTE PTR [esp+eax*8+0xc]
  426b87:	xor    BYTE PTR [ebx+0x41dc83b3],0xcc
  426b8e:	jne    0x426b85
  426b90:	aad    0xbd
  426b92:	aaa    
  426b93:	mov    bl,0x39
  426b95:	imul   edx,DWORD PTR [ebx+0x42],0xffffffdb
  426b99:	call   0x5d92:0xccf9caf6
  426ba0:	adc    DWORD PTR [edx],edi
  426ba2:	cmp    BYTE PTR [ecx],dl
  426ba4:	and    ebp,DWORD PTR [ecx]
  426ba6:	rcr    BYTE PTR [ecx],0xe7
  426ba9:	cdq    
  426baa:	ss nop
  426bac:	into   
  426bad:	mov    cl,0xbe
  426baf:	stos   BYTE PTR es:[edi],al
  426bb0:	mov    edi,0xa6594068
  426bb5:	and    al,cl
  426bb7:	imul   ecx,DWORD PTR [ecx+eiz*4+0x6cb195f],0xffffff85
  426bbf:	add    eax,0x9cab12ff
  426bc4:	cdq    
  426bc5:	and    ecx,ebp
  426bc7:	mov    ch,0xb3
  426bc9:	and    DWORD PTR [ebx],edi
  426bcb:	es hlt 
  426bcd:	sbb    al,0xc6
  426bcf:	pushf  
  426bd0:	ins    BYTE PTR es:[edi],dx
  426bd1:	fistp  WORD PTR [eax-0x64]
  426bd4:	pop    edi
  426bd5:	mov    BYTE PTR [ebp-0x2a],ah
  426bd8:	and    BYTE PTR fs:[edx+0x9dbcb15],cl
  426bdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426be0:	push   ebx
  426be1:	sbb    DWORD PTR [edx+0x6],edx
  426be4:	mov    ds:0x7672a203,al
  426be9:	ds repnz pop eax
  426bec:	cmp    al,0x3b
  426bee:	xchg   ebp,eax
  426bef:	mov    WORD PTR [ecx],?
  426bf1:	cmc    
  426bf2:	daa    
  426bf3:	pop    es
  426bf4:	pop    fs
  426bf6:	inc    ebx
  426bf7:	mov    bl,0x59
  426bf9:	push   edi
  426bfa:	lock mov ecx,0x610b0612
  426c00:	sbb    edx,esp
  426c02:	prefetcht1 BYTE PTR [esi+0x8]
  426c06:	data16 je 0x426ba0
  426c09:	push   0x5015a9f7
  426c0e:	daa    
  426c0f:	inc    edi
  426c10:	push   ss
  426c11:	xchg   ecx,eax
  426c12:	in     al,dx
  426c13:	and    eax,0x94671a4
  426c18:	add    DWORD PTR [esp+esi*8],ecx
  426c1b:	xor    dh,ah
  426c1d:	cmc    
  426c1e:	mov    ds:0xccbdd6f4,eax
  426c23:	out    0xdd,eax
  426c25:	inc    ecx
  426c26:	daa    
  426c27:	xor    eax,0xcab27b84
  426c2c:	sbb    eax,0xd38a421
  426c31:	adc    DWORD PTR [ebx],esp
  426c33:	or     BYTE PTR [ebx+0x3c],dl
  426c36:	push   esp
  426c37:	ja     0x426c71
  426c39:	inc    edx
  426c3a:	shr    BYTE PTR [ecx-0x54c13c68],cl
  426c40:	std    
  426c41:	test   al,0x40
  426c43:	inc    eax
  426c44:	repz adc DWORD PTR [ebx],eax
  426c47:	(bad)
  426c4b:	jecxz  0x426c7e
  426c4d:	sbb    eax,0xf0b035c
  426c52:	mov    edx,DWORD PTR [edx+ebx*1-0x17]
  426c56:	and    al,0x72
  426c58:	add    ah,ch
  426c5a:	adc    esi,DWORD PTR [ecx-0x5acc78c8]
  426c60:	sar    al,1
  426c62:	pusha  
  426c63:	sbb    al,0x14
  426c65:	push   0xffffffa9
  426c67:	lods   eax,DWORD PTR ds:[esi]
  426c68:	std    
  426c69:	adc    BYTE PTR [edi+ebp*2-0x12],ah
  426c6d:	es loopne 0x426cbb
  426c70:	pop    ds
  426c71:	adc    al,0xbc
  426c73:	mov    ds:0xf5e6782f,eax
  426c78:	add    edx,DWORD PTR [eax-0x13]
  426c7b:	pop    ecx
  426c7c:	jno    0x426cb7
  426c7e:	es fwait
  426c80:	std    
  426c81:	jbe    0x426ce9
  426c83:	addr16 mov ecx,0xd6f2ed1b
  426c89:	pop    ecx
  426c8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426c8b:	mov    edx,esi
  426c8d:	xchg   bl,bl
  426c8f:	pop    esi
  426c90:	pop    ecx
  426c91:	fbstp  TBYTE PTR [ecx]
  426c93:	cmp    ebp,DWORD PTR [ebx+0x5ec5863]
  426c99:	dec    eax
  426c9a:	mov    edi,0xdd9052
  426c9f:	add    BYTE PTR [eax],al
  426ca1:	add    BYTE PTR [esi+0x5f451fc0],dl
  426ca7:	(bad)  
  426ca9:	rol    DWORD PTR [ebx-0x561771f0],cl
  426caf:	lock sub esp,edx
  426cb2:	in     eax,0xe4
  426cb4:	add    DWORD PTR [eax],eax
  426cb6:	hlt    
  426cb7:	add    al,0x0
  426cb9:	add    BYTE PTR [ecx-0x71968be8],al
  426cbf:	int    0x85
  426cc1:	ja     0x426d1d
  426cc3:	pop    esi
  426cc4:	call   0x4690:0x2d8bdf09
  426ccb:	mov    cl,0xe9
  426ccd:	jno    0x426d07
  426ccf:	cmp    DWORD PTR [edi+0x7024c540],0x3188fe7f
  426cd9:	inc    ebx
  426cda:	jmp    0x799a651
  426cdf:	mov    edx,0xe404567e
  426ce4:	sahf   
  426ce5:	push   ebp
  426ce6:	(bad)  
  426ce8:	ja     0x426c80
  426cea:	add    BYTE PTR [ebp-0x34],bl
  426ced:	scas   al,BYTE PTR es:[edi]
  426cee:	adc    eax,DWORD PTR [ebp+0x4ff23c73]
  426cf4:	scas   al,BYTE PTR es:[edi]
  426cf5:	sbb    DWORD PTR [ebp+0x7f],0xffffffa6
  426cf9:	push   edi
  426cfa:	jnp    0x426ccc
  426cfc:	lock push ecx
  426cfe:	jmp    0x426cd4
  426d00:	dec    esi
  426d01:	aas    
  426d02:	mov    esp,0xb93d021a
  426d07:	dec    eax
  426d08:	mov    ebp,DWORD PTR [ebp+0x38]
  426d0b:	test   eax,0x58a0a504
  426d10:	sub    eax,0x73470b72
  426d15:	rol    BYTE PTR ds:0x64e1ef89,cl
  426d1b:	outs   dx,DWORD PTR ds:[esi]
  426d1c:	call   0xd437:0x25e92d31
  426d23:	call   0x6ca7:0x7e2deb73
  426d2a:	lea    eax,[edi]
  426d2c:	or     ebp,esi
  426d2e:	jmp    0x98376e34
  426d33:	inc    BYTE PTR [edx+0x6c6351a5]
  426d39:	or     BYTE PTR [edx+ebp*4-0x35],dl
  426d3d:	les    esp,FWORD PTR [edx-0x1b]
  426d40:	lds    esi,FWORD PTR [edi]
  426d42:	hlt    
  426d43:	inc    ebx
  426d44:	inc    ebp
  426d45:	shr    BYTE PTR [eax],0xe3
  426d48:	xchg   BYTE PTR [edx],bl
  426d4a:	mov    ch,0x49
  426d4c:	push   es
  426d4d:	xchg   edx,eax
  426d4e:	cmc    
  426d4f:	jnp    0x426d3c
  426d51:	lods   eax,DWORD PTR ds:[esi]
  426d52:	add    dh,BYTE PTR [edi-0x6aaad433]
  426d58:	test   al,0xbd
  426d5a:	test   eax,0xdd2fe834
  426d5f:	xlat   BYTE PTR ds:[ebx]
  426d60:	push   esi
  426d61:	jmp    0x426d6f
  426d63:	addr16 inc eax
  426d65:	mov    esp,DWORD PTR [edi-0x2d]
  426d68:	arpl   WORD PTR [edi-0xd],bx
  426d6b:	xor    eax,0xad1abf7a
  426d70:	mov    WORD PTR [ebx+0x74],cs
  426d73:	in     eax,dx
  426d74:	pusha  
  426d75:	test   BYTE PTR [edx-0x80],bh
  426d78:	jbe    0x426d18
  426d7a:	loopne 0x426d60
  426d7c:	je     0x426dee
  426d7e:	or     esp,esi
  426d80:	xor    ecx,DWORD PTR [esi+0x48436ae9]
  426d86:	loop   0x426d6a
  426d88:	bound  edi,QWORD PTR [edx-0x1e]
  426d8b:	int    0x6c
  426d8d:	pop    ebp
  426d8e:	cs mov eax,0x9118d2a5
  426d94:	pop    eax
  426d95:	adc    eax,0x3e646181
  426d9a:	inc    ecx
  426d9b:	mov    DWORD PTR [eax-0x4d],eax
  426d9e:	mov    dh,0xe
  426da0:	in     al,dx
  426da1:	dec    ebp
  426da2:	mov    eax,ds:0x9758c856
  426da7:	sar    DWORD PTR [ecx],0xdb
  426daa:	pop    edi
  426dab:	je     0x426e2a
  426dad:	(bad)  
  426dae:	push   ds
  426daf:	jo     0x426d3f
  426db1:	or     DWORD PTR [ebp+0x4a],ebx
  426db4:	imul   ebp,eax,0x7eabd237
  426dba:	cs sub ecx,ebx
  426dbd:	je     0x426db1
  426dbf:	jbe    0x426e06
  426dc1:	xchg   ecx,eax
  426dc2:	ss adc eax,0x1cd1b14e
  426dc8:	inc    edi
  426dc9:	and    ebx,DWORD PTR [edx+ebp*1-0xec7841a]
  426dd0:	xchg   esp,eax
  426dd1:	push   edx
  426dd2:	inc    esi
  426dd3:	fist   DWORD PTR [eax]
  426dd5:	leave  
  426dd6:	jno    0x426e52
  426dd8:	and    al,0x8c
  426dda:	mov    ebx,0x8ad29c9a
  426ddf:	mov    BYTE PTR [edx-0x3f],cl
  426de2:	data16 (bad) 
  426de4:	xchg   DWORD PTR [eax+edx*8-0x15],edx
  426de8:	loopne 0x426dae
  426dea:	test   ebp,eax
  426dec:	push   eax
  426ded:	push   ebx
  426dee:	mov    edi,0x915c1916
  426df3:	mov    esi,0xea911aaf
  426df8:	jg     0x426e5e
  426dfa:	xor    eax,0x1b5214ea
  426dff:	repnz pop es
  426e01:	idiv   ah
  426e03:	mov    ah,0x34
  426e05:	lock sbb DWORD PTR [edx-0x53dc385c],edi
  426e0c:	in     al,0xab
  426e0e:	and    esp,DWORD PTR [ecx+eiz*4-0x25ce7949]
  426e15:	leave  
  426e16:	daa    
  426e17:	jno    0x426dfa
  426e19:	push   edx
  426e1a:	add    al,0xec
  426e1c:	pop    ds
  426e1d:	pop    edi
  426e1e:	mov    dl,0x1b
  426e20:	xlat   BYTE PTR ds:[ebx]
  426e21:	jno    0x426e48
  426e23:	dec    esp
  426e24:	add    dh,BYTE PTR [edx+0x39a6101f]
  426e2a:	lock cmp eax,0x317a7716
  426e30:	mov    ds:0x54383528,al
  426e35:	(bad)  
  426e36:	push   0xffffff88
  426e38:	sub    BYTE PTR [ecx],bh
  426e3a:	mov    ebp,DWORD PTR [ebp+0x70]
  426e3d:	das    
  426e3e:	imul   edx,DWORD PTR [esi+0x13],0xfffffff7
  426e42:	inc    ebp
  426e43:	cmp    al,0x82
  426e45:	out    0xe2,al
  426e47:	outs   dx,DWORD PTR ds:[esi]
  426e48:	mov    ebx,0xa18d5332
  426e4d:	mov    ch,0x2c
  426e4f:	imul   edi,DWORD PTR [eax-0x12],0xfffffff6
  426e53:	xor    BYTE PTR ds:0xfca6b064,dl
  426e59:	adc    al,0x9c
  426e5b:	jne    0x426e0a
  426e5d:	ror    BYTE PTR [esi],0x6c
  426e60:	jnp    0x426e88
  426e62:	mov    esi,0xe752c4a3
  426e67:	adc    DWORD PTR [edi],esi
  426e69:	sahf   
  426e6a:	sub    dl,bl
  426e6c:	jb     0x426e2b
  426e6e:	fdiv   DWORD PTR [esi-0x71]
  426e71:	test   DWORD PTR [eax],eax
  426e73:	inc    esp
  426e74:	adc    al,0x2d
  426e76:	pop    ds
  426e77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426e78:	std    
  426e79:	cmc    
  426e7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e7b:	and    al,0xdd
  426e7d:	fst    QWORD PTR [esi*8+0x526838a0]
  426e84:	and    BYTE PTR [edi-0x3],dl
  426e87:	into   
  426e88:	mov    ebx,0x8cff0338
  426e8d:	loopne 0x426e1a
  426e8f:	popf   
  426e90:	inc    eax
  426e91:	jp     0x426e33
  426e93:	adc    eax,0x6e7e2825
  426e98:	sahf   
  426e99:	fisubr DWORD PTR [edi+esi*1-0x66a02281]
  426ea0:	mov    ebx,0x2be8c0e8
  426ea5:	xchg   edx,eax
  426ea6:	fwait
  426ea7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426ea8:	scas   eax,DWORD PTR es:[edi]
  426ea9:	iret   
  426eaa:	fistp  QWORD PTR [edi-0x1991e8a9]
  426eb0:	inc    esp
  426eb1:	in     eax,dx
  426eb2:	sbb    bh,BYTE PTR [esp]
  426eb5:	pop    ebp
  426eb6:	test   bl,dh
  426eb8:	pusha  
  426eb9:	inc    esp
  426eba:	mov    WORD PTR [ebx+esi*8+0x9579a3a],es
  426ec1:	dec    eax
  426ec2:	loopne 0x426f27
  426ec4:	and    DWORD PTR [edi],edi
  426ec6:	stos   BYTE PTR es:[edi],al
  426ec7:	dec    edx
  426ec8:	pop    edi
  426ec9:	in     eax,0x4e
  426ecb:	test   al,bh
  426ecd:	stos   DWORD PTR es:[edi],eax
  426ece:	int    0xa1
  426ed0:	jg     0x426ee6
  426ed2:	fmulp  st(4),st
  426ed4:	pop    edx
  426ed5:	leave  
  426ed6:	sbb    BYTE PTR [ecx+0x739e697f],0x8d
  426edd:	adc    DWORD PTR [ebp+0x2ce3df18],edi
  426ee3:	dec    esi
  426ee4:	and    bh,BYTE PTR [edx]
  426ee6:	cmp    al,0x96
  426ee8:	arpl   bp,dx
  426eea:	adc    eax,0xfebaf3d6
  426eef:	pop    edi
  426ef0:	stos   DWORD PTR es:[edi],eax
  426ef1:	mov    ?,WORD PTR [eax+0x19]
  426ef4:	push   0x9c1a6660
  426ef9:	or     bh,BYTE PTR [bp+si-0x6c]
  426efd:	adc    BYTE PTR [edx-0x3d],al
  426f00:	rcr    dh,0x21
  426f03:	and    al,0x11
  426f05:	scas   eax,DWORD PTR es:[edi]
  426f06:	cli    
  426f07:	jbe    0x426f4a
  426f09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f0a:	jmp    0x426ea5
  426f0c:	jnp    0x426ee2
  426f0e:	fwait
  426f0f:	mov    al,ds:0x5fca5b8f
  426f14:	cmp    eax,0x9bfd5f44
  426f19:	and    eax,0x83d5ff7b
  426f1e:	add    BYTE PTR [esi-0x33],ah
  426f21:	lods   eax,DWORD PTR ds:[esi]
  426f22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426f23:	std    
  426f24:	xor    eax,ebx
  426f26:	das    
  426f27:	jmp    0x426f99
  426f29:	pop    edi
  426f2a:	jb     0x426f56
  426f2c:	mov    esp,0x69e5666
  426f31:	dec    edi
  426f32:	push   0xd1f57338
  426f37:	push   ecx
  426f38:	mov    esi,0x4c05933c
  426f3d:	mov    WORD PTR [ecx+ebx*8+0x69ca85a5],ds
  426f44:	iret   
  426f45:	js     0x426f56
  426f47:	not    DWORD PTR [edx]
  426f49:	pop    eax
  426f4a:	int    0xa
  426f4c:	push   esi
  426f4d:	add    bl,bh
  426f4f:	sahf   
  426f50:	and    edi,ebp
  426f52:	adc    DWORD PTR [eax-0x5a5e113f],edx
  426f58:	cmp    ebx,DWORD PTR [eax-0x34a31468]
  426f5e:	imul   esp,DWORD PTR [ebx+0x70],0x7045ea54
  426f65:	add    al,0x5f
  426f67:	lock loope 0x426ef4
  426f6a:	stos   BYTE PTR es:[edi],al
  426f6b:	retf   0x78cc
  426f6e:	sbb    ah,al
  426f70:	ret    
  426f71:	rcr    DWORD PTR [eax],1
  426f73:	mov    WORD PTR [eax+ebx*8],fs
  426f76:	rcl    DWORD PTR [edi],cl
  426f78:	dec    edi
  426f79:	repnz add edi,DWORD PTR [esi]
  426f7c:	mov    bh,0xce
  426f7e:	fdiv   DWORD PTR ds:0x2f7820d0
  426f84:	adc    eax,0xd99bc7ac
  426f89:	gs leave 
  426f8b:	rcr    BYTE PTR [ecx],0xb1
  426f8e:	adc    eax,0x88e2b0a8
  426f93:	jb     0x426fbf
  426f95:	pusha  
  426f96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f97:	jmp    esi
  426f99:	das    
  426f9a:	mov    ebp,0xb1215a5e
  426f9f:	(bad)  
  426fa0:	cmp    eax,0xd67b0df6
  426fa5:	add    cl,BYTE PTR [eax-0x324a975]
  426fab:	sbb    DWORD PTR [ebp-0x3a],0x3d
  426faf:	retf   0xff9b
  426fb2:	add    ch,al
  426fb4:	cli    
  426fb5:	in     eax,0x82
  426fb7:	inc    ebx
  426fb8:	mov    bh,0x33
  426fba:	stos   DWORD PTR es:[edi],eax
  426fbb:	(bad)  
  426fbc:	retf   0x97a0
  426fbf:	lods   al,BYTE PTR ds:[esi]
  426fc0:	test   BYTE PTR [ecx-0x3b],dl
  426fc3:	popf   
  426fc4:	mov    ah,0xba
  426fc6:	and    al,0x5c
  426fc8:	dec    esi
  426fc9:	adc    BYTE PTR [eax+esi*1+0x747587c1],dl
  426fd0:	bound  edx,QWORD PTR ds:0x97b62099
  426fd6:	xchg   edi,eax
  426fd7:	call   0xb638df50
  426fdc:	fidivr WORD PTR [eax+0x15]
  426fdf:	ret    
  426fe0:	lahf   
  426fe1:	cwde   
  426fe2:	rcr    BYTE PTR [eax-0xd],0x46
  426fe6:	dec    esi
  426fe7:	sar    BYTE PTR [ecx],cl
  426fe9:	(bad)  
  426fea:	adc    ch,BYTE PTR [ebp+0x1dee3dd]
  426ff0:	jno    0x427040
  426ff2:	aam    0xd2
  426ff4:	sbb    DWORD PTR [edx+0x7e],0xffffffd4
  426ff8:	pop    ss
  426ff9:	(bad)  
  426ffa:	mov    ebp,DWORD PTR [edx-0x3]
  426ffd:	jmp    0xb32ab8ed
  427002:	std    
  427003:	pop    edi
  427004:	ins    BYTE PTR es:[edi],dx
  427005:	dec    edx
  427006:	sub    eax,0xc95e4bcf
  42700b:	repz and dl,0xbe
  42700f:	lods   al,BYTE PTR ds:[esi]
  427010:	dec    edi
  427011:	outs   dx,DWORD PTR ds:[esi]
  427012:	bound  esi,QWORD PTR [ebp+0x28866b03]
  427018:	into   
  427019:	and    esi,esp
  42701b:	repnz or al,dh
  42701e:	dec    eax
  42701f:	fs out 0x5e,eax
  427022:	fistp  WORD PTR [ecx-0xbf06584]
  427028:	jle    0x427094
  42702a:	and    dl,BYTE PTR [edx]
  42702c:	shl    DWORD PTR [ecx-0x33f20c1a],0x1
  427033:	int    0x21
  427035:	(bad)  
  427036:	jp     0x42709f
  427038:	jno    0x426fce
  42703a:	stos   BYTE PTR es:[edi],al
  42703b:	repz shl ch,0x35
  42703f:	bound  ebp,QWORD PTR [edx]
  427041:	add    eax,0x35a1b048
  427046:	cmp    eax,0x57f2ed9b
  42704b:	sub    DWORD PTR [edi+0x3449846],ecx
  427051:	jle    0x427061
  427053:	fwait
  427054:	mov    cl,0xc2
  427056:	lea    esi,[edi+0x705af028]
  42705c:	xchg   edi,eax
  42705d:	fcom   QWORD PTR [edi+esi*8]
  427060:	jg     0x4270a0
  427062:	push   edx
  427063:	push   edx
  427064:	rcr    BYTE PTR [ecx-0x4],1
  427067:	pop    esp
  427068:	pop    ds
  427069:	fcomp  DWORD PTR [edi+0x39]
  42706c:	fldcw  WORD PTR [edi-0x1dd23c43]
  427072:	xor    dh,dl
  427074:	popa   
  427075:	jecxz  0x4270de
  427077:	or     ebx,DWORD PTR [eax-0x5db04a02]
  42707d:	call   0xb31d:0xb607934a
  427084:	and    al,0x7b
  427086:	les    ebp,FWORD PTR [eax+0x1f9f72dc]
  42708c:	addr16 test al,0xbe
  42708f:	mov    ds:0xdbdc6054,al
  427094:	mov    al,0x38
  427096:	adc    esi,DWORD PTR [edx+0xf]
  427099:	mov    cl,0x1
  42709b:	or     al,BYTE PTR [edi+edi*8+0x54]
  42709f:	xchg   esi,eax
  4270a0:	sbb    al,BYTE PTR [eax+0x1931ed1d]
  4270a6:	lahf   
  4270a7:	mov    cl,0xfa
  4270a9:	loope  0x427045
  4270ab:	clc    
  4270ac:	test   eax,0xe9d09b69
  4270b1:	jo     0x4270c5
  4270b3:	adc    dl,BYTE PTR [ebx-0x2c455a80]
  4270b9:	cld    
  4270ba:	push   eax
  4270bb:	mov    edi,0xe6cd7100
  4270c0:	scas   al,BYTE PTR es:[edi]
  4270c1:	push   edx
  4270c2:	aas    
  4270c3:	inc    eax
  4270c4:	fdivr  DWORD PTR fs:[edi-0x3bf515b9]
  4270cb:	and    DWORD PTR [edx+ecx*8-0xb0d36b5],ebx
  4270d2:	add    BYTE PTR [edx],0x7
  4270d5:	retf   0x4596
  4270d8:	das    
  4270d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4270da:	jg     0x427126
  4270dc:	sub    DWORD PTR [esi],ebx
  4270de:	jecxz  0x427150
  4270e0:	jecxz  0x42711d
  4270e2:	jne    0x427099
  4270e4:	mov    al,0xcb
  4270e6:	jnp    0x427113
  4270e8:	rcr    DWORD PTR [esi+esi*8-0x653276db],cl
  4270ef:	push   ecx
  4270f0:	jl     0x4270f1
  4270f2:	cs iret 
  4270f4:	adc    edi,DWORD PTR [edi+ebx*1-0x1c]
  4270f8:	inc    ebp
  4270f9:	mov    cl,0x13
  4270fb:	loopne 0x42716a
  4270fd:	int3   
  4270fe:	ins    BYTE PTR es:[edi],dx
  4270ff:	in     eax,dx
  427100:	jle    0x42712f
  427102:	mov    ch,0xe7
  427104:	call   0x7d6e:0x6514b801
  42710b:	xor    ecx,DWORD PTR [edx]
  42710d:	or     dl,BYTE PTR [edi]
  42710f:	push   eax
  427110:	sub    BYTE PTR [eax+0x25c05cb6],ch
  427116:	fwait
  427117:	cmp    edx,DWORD PTR [edi+0x1afea5fa]
  42711d:	pushf  
  42711e:	test   eax,0x87b22b59
  427123:	jno    0x427199
  427125:	popf   
  427126:	jbe    0x4270b1
  427128:	inc    edi
  427129:	jecxz  0x427112
  42712b:	or     BYTE PTR [ebx+0x3],dl
  42712e:	jmp    0x427164
  427130:	fs sti 
  427132:	xchg   esi,eax
  427133:	inc    eax
  427134:	dec    esp
  427135:	jle    0x427114
  427137:	icebp  
  427138:	push   edi
  427139:	mov    eax,0x309f5562
  42713e:	mov    edi,0x7f6707f7
  427143:	arpl   WORD PTR [ecx+0x7c3c9e56],bx
  427149:	popa   
  42714a:	out    0x41,al
  42714c:	sbb    dl,BYTE PTR [edx+0x5]
  42714f:	aad    0x66
  427151:	xchg   edx,eax
  427152:	loop   0x4271ae
  427154:	daa    
  427155:	test   BYTE PTR [eax-0x32d6a5c0],ah
  42715b:	fimul  WORD PTR [ebx+0x56]
  42715e:	mov    esp,0xa5e6c0fb
  427163:	in     eax,0x83
  427165:	outs   dx,DWORD PTR ds:[esi]
  427166:	imul   edi,ebp,0xf88f37ad
  42716c:	mov    bl,0xf8
  42716e:	(bad)  
  42716f:	fstp   TBYTE PTR [ecx-0x3124ef70]
  427175:	lods   eax,DWORD PTR ds:[esi]
  427176:	das    
  427177:	mov    ch,0x6c
  427179:	and    edx,DWORD PTR [esi+esi*4+0x2210575c]
  427180:	mov    dh,0x32
  427182:	fisub  DWORD PTR [edx]
  427184:	mov    ah,0x38
  427186:	mov    WORD PTR [edx-0x61],gs
  427189:	mov    WORD PTR ds:0xf2bcf224,gs
  42718f:	jmp    0x4271e9
  427191:	popa   
  427192:	pop    eax
  427193:	push   0xffffffb2
  427195:	aad    0x4e
  427197:	hlt    
  427198:	lods   eax,DWORD PTR ds:[esi]
  427199:	sub    eax,0xe39a24a8
  42719e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42719f:	add    DWORD PTR [edi+0x1a9eb501],edi
  4271a5:	push   ds
  4271a6:	pushf  
  4271a7:	in     al,dx
  4271a8:	mov    ds:0xb8894f53,al
  4271ad:	mov    dl,0x0
  4271af:	add    BYTE PTR [eax],al
  4271b1:	add    BYTE PTR [ebx],ch
  4271b3:	xchg   DWORD PTR [ebp-0x1f],esi
  4271b6:	std    
  4271b7:	repz mov edi,0x7da68ccf
  4271bd:	inc    ecx
  4271be:	test   BYTE PTR [ecx],ah
  4271c0:	xor    eax,0x1e9d996
  4271c5:	add    ah,dh
  4271c7:	add    al,0x0
  4271c9:	add    al,bh
  4271cb:	scas   al,BYTE PTR es:[edi]
  4271cc:	sub    ah,ah
  4271ce:	shl    BYTE PTR [edi+eax*1+0x67],0xfe
  4271d3:	and    esi,edi
  4271d5:	(bad)  
  4271d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4271d7:	out    0xb4,al
  4271d9:	scas   al,BYTE PTR es:[edi]
  4271da:	test   DWORD PTR [edi-0x5a],eax
  4271dd:	cs mov edx,0xf813273e
  4271e3:	cmp    cl,dl
  4271e5:	cmp    DWORD PTR [ebp+0x19],0xe3e58369
  4271ec:	dec    edi
  4271ed:	xchg   ecx,eax
  4271ee:	es out dx,al
  4271f0:	sub    eax,0xfad6034d
  4271f5:	xchg   ebx,eax
  4271f6:	bound  eax,QWORD PTR [esi]
  4271f8:	push   0xf
  4271fa:	shl    BYTE PTR [ebx+eiz*8],cl
  4271fd:	inc    ebp
  4271fe:	push   eax
  4271ff:	cmp    bh,BYTE PTR [edx]
  427201:	xor    DWORD PTR [esi-0x7b42f09f],0xc7cde97
  42720b:	adc    bl,BYTE PTR [ecx+0x49821e0e]
  427211:	fadd   st,st(7)
  427213:	stos   BYTE PTR es:[edi],al
  427214:	jno    0x427235
  427216:	in     al,0x49
  427218:	push   ss
  427219:	mov    al,ds:0xa66a8133
  42721e:	mov    dl,0xc4
  427220:	xlat   BYTE PTR ds:[ebx]
  427221:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427222:	push   esi
  427223:	jns    0x427227
  427225:	xor    ch,dl
  427227:	ins    DWORD PTR es:[edi],dx
  427228:	(bad)  [eax+0x7ae9d9fe]
  42722e:	cmp    eax,0x9b8b797e
  427233:	xchg   ebx,eax
  427234:	fstp   QWORD PTR [eax+0x62f9d5e8]
  42723a:	pusha  
  42723b:	mov    eax,0xd0f19452
  427240:	jl     0x4272a1
  427242:	aam    0x34
  427244:	xchg   esp,eax
  427245:	ret    
  427246:	pop    es
  427247:	xchg   esp,eax
  427248:	in     eax,dx
  427249:	pop    es
  42724a:	sbb    al,0xfe
  42724c:	adc    ch,BYTE PTR [ecx-0x2b59cafe]
  427252:	and    eax,0xb2f7628e
  427257:	mov    ah,0x1f
  427259:	push   ss
  42725a:	std    
  42725b:	into   
  42725c:	dec    ecx
  42725d:	stc    
  42725e:	dec    edi
  42725f:	mov    fs,WORD PTR [bx]
  427262:	pushf  
  427263:	rcl    BYTE PTR [ecx+0x7f],1
  427266:	(bad)  
  427267:	sbb    dl,BYTE PTR [eax]
  427269:	xchg   ebx,eax
  42726a:	and    dl,bl
  42726c:	pop    edi
  42726d:	jo     0x42721f
  42726f:	xchg   DWORD PTR [ebp-0x6b],esp
  427272:	aad    0x35
  427274:	mov    bl,0xb6
  427276:	test   DWORD PTR [edi],edx
  427278:	sbb    ah,BYTE PTR [esi+eax*4+0x26123eb3]
  42727f:	aad    0xb7
  427281:	adc    DWORD PTR ds:0x948ef69a,esp
  427287:	sbb    edx,DWORD PTR [ebx+ebx*8-0x56c13d98]
  42728e:	shr    DWORD PTR [esi+0x43],cl
  427291:	dec    esi
  427292:	xor    eax,0x41bc500b
  427297:	inc    esp
  427298:	inc    ecx
  427299:	ds (bad) 
  42729c:	mov    dl,0x7b
  42729e:	inc    edi
  42729f:	sub    eax,0x3fc468f3
  4272a4:	adc    al,0xc8
  4272a6:	shl    BYTE PTR [ecx+0x57314251],0xa1
  4272ad:	sbb    al,0x3d
  4272af:	js     0x4272ba
  4272b1:	dec    edi
  4272b2:	adc    DWORD PTR [eax+0x55],0xbaa97f74
  4272b9:	jne    0x427303
  4272bb:	(bad)  [eax+0xb648894]
  4272c1:	add    edx,0xeffb59ee
  4272c7:	cmp    cl,al
  4272c9:	inc    ecx
  4272ca:	lock jmp 0x9708:0xaec756fb
  4272d2:	popa   
  4272d3:	pop    edi
  4272d4:	mov    edi,0x113dd5d4
  4272d9:	lods   eax,DWORD PTR ds:[esi]
  4272da:	js     0x427347
  4272dc:	(bad)  
  4272de:	repz push ebp
  4272e0:	fld    DWORD PTR [esi]
  4272e2:	es cmp eax,0xc1d54a69
  4272e8:	push   es
  4272e9:	cwde   
  4272ea:	or     ch,BYTE PTR [esp+ecx*4]
  4272ed:	rol    BYTE PTR [ebx+ebx*8-0x4ae8e2ed],cl
  4272f4:	iret   
  4272f5:	jecxz  0x4272f8
  4272f7:	mov    ?,edi
  4272f9:	imul   esp,esi,0xa6974782
  4272ff:	cdq    
  427300:	retf   
  427301:	loopne 0x42735d
  427303:	enter  0xad20,0x20
  427307:	push   0xffffff9c
  427309:	(bad)  cs:[esi-0xd]
  42730d:	mov    cl,0x39
  42730f:	(bad)  
  427310:	dec    ebp
  427311:	adc    eax,0xf8fdb1fa
  427316:	mov    ds:0x66819907,eax
  42731b:	dec    edi
  42731c:	inc    edi
  42731d:	addr16 dec edx
  42731f:	mov    ch,0xa3
  427321:	(bad)  
  427323:	adc    ebp,esi
  427325:	loopne 0x427397
  427327:	add    esp,esi
  427329:	push   ss
  42732a:	ins    BYTE PTR es:[edi],dx
  42732b:	xor    eax,0xe897fd79
  427330:	jecxz  0x427366
  427332:	scas   eax,DWORD PTR es:[edi]
  427333:	cmp    DWORD PTR [edx],0x8e052669
  427339:	fnstenv [edx+eiz*1-0x70f94d7e]
  427340:	(bad)  
  427343:	cmp    edi,eax
  427345:	out    dx,eax
  427346:	push   esi
  427347:	xchg   BYTE PTR [edx+0x4cba990b],ch
  42734d:	push   edi
  42734e:	sub    BYTE PTR [eax-0x5d2b5fd1],bl
  427354:	sbb    al,0x66
  427356:	ss push esi
  427358:	mov    dh,0xab
  42735a:	sub    BYTE PTR [esi-0x28],0x23
  42735e:	cli    
  42735f:	repnz pop ebx
  427361:	mov    eax,edi
  427363:	ins    BYTE PTR es:[edi],dx
  427364:	pop    ds
  427365:	out    0x26,eax
  427367:	dec    ecx
  427368:	retf   
  427369:	push   ss
  42736a:	push   edx
  42736b:	fisub  DWORD PTR [esi]
  42736d:	addr16 or eax,0xa3e903e6
  427373:	mov    esp,0x1bba9b53
  427378:	sbb    al,0xf9
  42737a:	cmp    eax,0x27fc1d6f
  42737f:	retf   0xbbdf
  427382:	mov    WORD PTR [esi-0x6e],?
  427385:	sbb    BYTE PTR [ebp+0x2f9677],dl
  42738b:	jae    0x427317
  42738d:	add    eax,0x9480ffe6
  427392:	shl    DWORD PTR ds:0xf1d80188,1
  427398:	sbb    eax,0xa5b4af46
  42739d:	jae    0x4273f2
  42739f:	sahf   
  4273a0:	sub    al,0x52
  4273a2:	adc    BYTE PTR [ebp+0x7d],0x6a
  4273a6:	stc    
  4273a7:	cmp    bl,BYTE PTR [esi+0x14]
  4273aa:	sub    cl,BYTE PTR [esi+0x15]
  4273ad:	nop
  4273ae:	mov    al,0x46
  4273b0:	mov    eax,ds:0x4875381d
  4273b5:	lds    esi,FWORD PTR [esi+0x417dd341]
  4273bb:	xchg   ebp,eax
  4273bc:	test   eax,0x291de004
  4273c1:	push   0xa0afeb89
  4273c6:	test   dh,dh
  4273c8:	in     al,dx
  4273c9:	push   es
  4273ca:	jecxz  0x4273e0
  4273cc:	xor    edx,edi
  4273ce:	jl     0x427443
  4273d0:	xchg   BYTE PTR [edi-0x60],dh
  4273d3:	jge    0x4273c3
  4273d5:	stc    
  4273d6:	add    edx,DWORD PTR [ebx-0x6d]
  4273d9:	push   0x1b
  4273db:	jg     0x4273d1
  4273dd:	test   dh,0xba
  4273e0:	push   esi
  4273e1:	push   0x4b
  4273e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4273e4:	mov    eax,0xd23880e5
  4273e9:	mov    edi,0xa6225bb
  4273ee:	repnz and ah,BYTE PTR [ecx-0x55]
  4273f2:	daa    
  4273f3:	push   ebx
  4273f4:	xchg   esi,eax
  4273f5:	sar    BYTE PTR [ebp+0x584633fb],1
  4273fb:	out    dx,eax
  4273fc:	nop
  4273fd:	aad    0x23
  4273ff:	outs   dx,BYTE PTR ds:[esi]
  427400:	fild   WORD PTR [eax+ebx*1+0x2]
  427404:	mov    esi,0x3c36cb5a
  427409:	arpl   WORD PTR [ebp+0x42654982],bp
  42740f:	jns    0x427421
  427411:	cli    
  427412:	out    0x6f,eax
  427414:	into   
  427415:	repz cdq 
  427417:	sbb    DWORD PTR [edx],ebp
  427419:	cld    
  42741a:	sub    edi,DWORD PTR [eax+0x39]
  42741d:	(bad)  
  42741e:	push   edx
  42741f:	fisttp QWORD PTR [ebx]
  427421:	xchg   esi,eax
  427422:	add    cl,BYTE PTR [ebp-0x16]
  427425:	mov    eax,ds:0x1297719
  42742a:	test   DWORD PTR [eax],ebx
  42742c:	jne    0x427474
  42742e:	xchg   esi,eax
  42742f:	dec    edi
  427430:	or     edi,DWORD PTR [eax-0x508a543c]
  427436:	arpl   WORD PTR [esi+eiz*8+0x14],dx
  42743a:	jno    0x4273c5
  42743c:	mov    DWORD PTR [edi-0x39],edi
  42743f:	jl     0x427425
  427441:	xor    ah,BYTE PTR [ecx-0x8]
  427444:	shl    BYTE PTR [ecx],1
  427446:	dec    ecx
  427447:	out    dx,eax
  427448:	test   eax,0x1658d8b1
  42744d:	loop   0x427447
  42744f:	loopne 0x427473
  427451:	fisttp DWORD PTR [ecx]
  427453:	sub    eax,0xb70dc285
  427458:	mov    bh,0xb3
  42745a:	cmp    dl,ah
  42745c:	call   0xe7ebf867
  427461:	test   BYTE PTR [esi+0x7c6c6c1c],dl
  427467:	sahf   
  427468:	lock mov ah,0x2e
  42746b:	dec    edx
  42746c:	jecxz  0x4274bf
  42746e:	fs (bad) 
  427470:	out    0x15,eax
  427472:	pop    ds
  427473:	mov    cl,0x84
  427475:	cmp    al,0x31
  427477:	or     al,0xa1
  427479:	xchg   BYTE PTR [edi+0x32],al
  42747c:	mov    edx,0xa0748074
  427481:	adc    edx,esi
  427483:	sub    edi,DWORD PTR [ebx+eiz*1+0x56]
  427487:	sub    BYTE PTR [edx],dh
  427489:	and    al,al
  42748b:	data16 jg 0x427493
  42748e:	popa   
  42748f:	sub    eax,0x56d4901b
  427494:	mov    cl,cl
  427496:	dec    esp
  427497:	test   esi,esp
  427499:	adc    DWORD PTR [ecx],ecx
  42749b:	sub    ebp,ecx
  42749d:	stc    
  42749e:	jge    0x42742c
  4274a0:	out    dx,eax
  4274a1:	push   eax
  4274a2:	jle    0x4274bc
  4274a4:	(bad)  
  4274a5:	jo     0x427463
  4274a7:	lea    esp,[esi-0xd]
  4274aa:	xor    cl,al
  4274ac:	lock sbb dh,al
  4274af:	std    
  4274b0:	push   ebp
  4274b1:	arpl   si,di
  4274b3:	call   0x68a0:0xc37432b3
  4274ba:	mov    ebx,esp
  4274bc:	fild   QWORD PTR [eax+0x588dc77f]
  4274c2:	sub    eax,0x73655576
  4274c7:	retf   
  4274c8:	or     bh,BYTE PTR [ebx]
  4274ca:	mov    dl,0x8e
  4274cc:	outs   dx,BYTE PTR ds:[esi]
  4274cd:	shl    DWORD PTR [eax],0x6
  4274d0:	test   al,0xe3
  4274d2:	xchg   esi,eax
  4274d3:	sub    eax,DWORD PTR [ecx+0x38c15d6c]
  4274d9:	imul   ecx,DWORD PTR [ebx+0x1d],0x45
  4274dd:	in     al,dx
  4274de:	or     eax,0x85891331
  4274e3:	add    esp,DWORD PTR [ecx-0x12]
  4274e6:	and    al,0x37
  4274e8:	mov    esp,0xd02d0463
  4274ed:	rcr    BYTE PTR [edx],cl
  4274ef:	daa    
  4274f0:	out    0xdd,al
  4274f2:	xor    eax,0xa4ceffe7
  4274f7:	mov    ds:0x49ffbb,al
  4274fc:	jg     0x42748a
  4274fe:	xchg   esi,esi
  427500:	daa    
  427501:	aam    0xab
  427503:	add    dl,ah
  427505:	inc    ebp
  427506:	jl     0x42753c
  427508:	lock push ds
  42750a:	dec    eax
  42750b:	push   cs
  42750c:	cmp    cl,0x40
  42750f:	xchg   ebx,eax
  427510:	mov    ds,WORD PTR [edi-0x604491de]
  427516:	dec    esi
  427517:	pcmpgtd mm7,QWORD PTR [eax-0x4e81eb1b]
  42751e:	int3   
  42751f:	cmp    DWORD PTR [eax+0x4e],ebx
  427522:	mov    ecx,DWORD PTR [esi+0x66c642e2]
  427528:	mov    ah,0xce
  42752a:	inc    edx
  42752b:	(bad)  
  42752c:	jmp    0x5eb6:0xba65695b
  427533:	ficom  WORD PTR [ebp-0x14]
  427536:	jmp    DWORD PTR [eax]
  427538:	popa   
  427539:	push   edx
  42753a:	push   edi
  42753b:	push   ss
  42753c:	fs add al,0xe6
  42753f:	mov    ebp,0x6156369e
  427544:	xchg   ebx,eax
  427545:	pop    esi
  427546:	mov    edx,0xe7b9338c
  42754b:	cwde   
  42754c:	xchg   ebp,eax
  42754d:	push   eax
  42754e:	into   
  42754f:	sub    edi,DWORD PTR [ebx]
  427551:	pushf  
  427552:	mov    bl,0x94
  427554:	pop    es
  427555:	sbb    BYTE PTR [edx],cl
  427557:	repz and eax,DWORD PTR ds:0x5338a9c9
  42755e:	(bad)  
  42755f:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  427561:	dec    eax
  427562:	leave  
  427563:	ss aaa 
  427565:	cld    
  427566:	mov    bh,0xfb
  427568:	cmp    ch,BYTE PTR [ebx+0x4825f8ab]
  42756e:	or     ebp,DWORD PTR [edx*4+0x52f86c6a]
  427575:	retf   0xdc3b
  427578:	sub    eax,0x71e6f624
  42757d:	mov    al,0x0
  42757f:	sub    ecx,esp
  427581:	add    eax,0x745d4620
  427586:	pusha  
  427587:	mov    ch,0x9a
  427589:	(bad)
  42758c:	(bad)  
  42758d:	stos   BYTE PTR es:[edi],al
  42758e:	xchg   BYTE PTR [ebx],bl
  427590:	mov    esi,0xee8483e9
  427595:	lock mov eax,ds:0x3e6e1066
  42759b:	inc    edx
  42759c:	inc    ebp
  42759d:	fidivr WORD PTR [ebp+0x24]
  4275a0:	sahf   
  4275a1:	out    dx,al
  4275a2:	pop    ss
  4275a3:	fistp  DWORD PTR [ebp+0x63f55d8b]
  4275a9:	pop    ecx
  4275aa:	inc    eax
  4275ab:	das    
  4275ac:	or     eax,0xfee7a51e
  4275b1:	fst    DWORD PTR [ebp-0x36]
  4275b4:	sti    
  4275b5:	jmp    0x4275b0
  4275b7:	cwde   
  4275b8:	(bad)  
  4275b9:	cmp    dl,BYTE PTR [ebx+0x3a]
  4275bc:	nop
  4275bd:	(bad)  
  4275be:	das    
  4275bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4275c0:	loop   0x427573
  4275c2:	cld    
  4275c3:	sahf   
  4275c4:	mov    bh,0xa1
  4275c6:	jecxz  0x42758e
  4275c8:	lods   eax,DWORD PTR ds:[esi]
  4275c9:	inc    BYTE PTR [ebp+0x562c53ab]
  4275cf:	outs   dx,BYTE PTR ds:[esi]
  4275d0:	pop    esi
  4275d1:	mov    al,ds:0xa26a0b61
  4275d6:	jmp    0xa0e3:0x9e24050c
  4275dd:	sub    edi,DWORD PTR [ecx]
  4275df:	mov    ds:0xb118293f,al
  4275e4:	push   ss
  4275e5:	push   ecx
  4275e6:	popf   
  4275e7:	lea    esp,[esi-0x73a3ccbe]
  4275ed:	out    dx,eax
  4275ee:	jle    0x42765e
  4275f0:	sbb    al,BYTE PTR [edx-0x23ca3294]
  4275f6:	lock (bad) 
  4275f8:	cmp    esi,DWORD PTR [ebp+0x31]
  4275fb:	mov    edi,0x4f59f77
  427600:	add    DWORD PTR [esi+0x13],edx
  427603:	call   0xe8d7:0xbe4fab08
  42760a:	out    dx,eax
  42760b:	push   es
  42760c:	dec    edi
  42760d:	fdivr  DWORD PTR [edx+0x4526b708]
  427613:	mov    dl,0xaa
  427615:	adc    esp,DWORD PTR [ebp+0x53]
  427618:	inc    esi
  427619:	mov    dl,0x43
  42761b:	cwde   
  42761c:	push   esi
  42761d:	es sar bl,1
  427620:	es jg  0x4275ba
  427623:	sub    eax,ebx
  427625:	pop    eax
  427626:	or     eax,0x568aa3c8
  42762b:	cli    
  42762c:	out    0x12,eax
  42762e:	(bad)  [esi]
  427630:	push   0x9198097d
  427635:	sbb    bh,BYTE PTR [esi+esi*4-0x4e]
  427639:	and    al,0xd6
  42763b:	hlt    
  42763c:	mov    al,ds:0x192a670d
  427641:	pop    esi
  427642:	mov    esi,0xf1bafffb
  427647:	aas    
  427648:	frstor [edi]
  42764a:	ss inc esp
  42764c:	fwait
  42764d:	js     0x42768f
  42764f:	rcl    DWORD PTR [edx],1
  427651:	pop    eax
  427652:	mov    esp,0x838702fb
  427657:	imul   esp,DWORD PTR [esp+eax*2+0xf],0xffffff8f
  42765c:	xchg   ebp,eax
  42765d:	xor    BYTE PTR [ebx],0x5c
  427660:	mov    ebp,0x4cee211c
  427665:	das    
  427666:	test   al,0xe0
  427668:	sub    DWORD PTR [eax-0x70f393bf],edi
  42766e:	retf   0x1fda
  427671:	mov    dl,0xb4
  427673:	mov    ecx,DWORD PTR [esi-0x5b]
  427676:	inc    esp
  427677:	outs   dx,BYTE PTR ds:[esi]
  427678:	ja     0x427660
  42767a:	and    DWORD PTR [esi],esi
  42767c:	sub    BYTE PTR [esi],ah
  42767e:	jns    0x42767b
  427680:	pushf  
  427681:	mov    ecx,0x5b471df3
  427686:	xchg   edx,eax
  427687:	adc    DWORD PTR [esp+ebp*4+0x64448e20],ecx
  42768e:	mov    dl,0xa7
  427690:	iret   
  427691:	pop    edx
  427692:	pop    eax
  427693:	sub    al,0x33
  427696:	scas   al,BYTE PTR es:[edi]
  427697:	and    bh,BYTE PTR [ecx-0x31]
  42769a:	popf   
  42769b:	ret    
  42769c:	nop
  42769d:	aas    
  42769e:	ds in  eax,0xc5
  4276a1:	outs   dx,WORD PTR ds:[esi]
  4276a3:	mov    ds:0xc8cf585,eax
  4276a8:	test   al,0x3a
  4276aa:	mov    ah,0x26
  4276ac:	jge    0x42765c
  4276ae:	cwde   
  4276af:	adc    bl,BYTE PTR [edx+0x6cfb93f8]
  4276b5:	test   eax,0xcd21ef31
  4276ba:	cld    
  4276bb:	jg     0x4276e6
  4276bd:	into   
  4276be:	add    BYTE PTR [eax],al
  4276c0:	add    BYTE PTR [eax],al
  4276c2:	or     al,ah
  4276c4:	mov    eax,ds:0x5ef7eff7
  4276c9:	std    
  4276ca:	mov    ebp,0x1ef91c3b
  4276cf:	xchg   ebp,eax
  4276d0:	inc    edi
  4276d1:	xchg   ebp,eax
  4276d2:	int    0xee
  4276d4:	add    DWORD PTR [eax],eax
  4276d6:	hlt    
  4276d7:	add    al,0x0
  4276d9:	add    BYTE PTR [ecx+0x6d46390a],ah
  4276df:	mov    al,0x69
  4276e1:	es xchg ebx,eax
  4276e3:	or     bh,BYTE PTR [edx-0x33]
  4276e6:	leave  
  4276e7:	out    0x10,eax
  4276e9:	sbb    DWORD PTR [esi+0x123a719f],ebp
  4276ef:	aam    0xb
  4276f1:	xchg   BYTE PTR [esi],cl
  4276f3:	and    al,0x1f
  4276f5:	mov    ch,0x7e
  4276f7:	(bad)  
  4276f8:	(bad)  
  4276f9:	cdq    
  4276fa:	sbb    al,BYTE PTR [ebp+edx*1-0x65]
  4276fe:	inc    ebp
  4276ff:	loope  0x427771
  427701:	sub    BYTE PTR [edi-0x6],cl
  427704:	or     BYTE PTR [ecx+0x4f],dh
  427707:	(bad)  
  427708:	xlat   BYTE PTR ds:[ebx]
  427709:	mov    ebx,0x81df8a90
  42770e:	(bad)  
  42770f:	xchg   edi,eax
  427710:	aaa    
  427711:	mov    al,0xad
  427713:	(bad)  
  427714:	cmp    BYTE PTR [edx+0x2f],cl
  427717:	xchg   edi,eax
  427718:	mov    DWORD PTR [ebx-0x25630c9b],ebx
  42771e:	std    
  42771f:	add    eax,0xe43a9205
  427724:	add    DWORD PTR [ecx+0x5454762d],0xffffffaf
  42772b:	int    0xc9
  42772d:	je     0x4276c1
  42772f:	push   eax
  427730:	test   DWORD PTR [edx],edx
  427732:	in     al,0x7d
  427734:	loopne 0x4276c3
  427736:	nop
  427737:	and    ebx,eax
  427739:	or     al,0xec
  42773b:	stos   BYTE PTR es:[edi],al
  42773c:	mov    eax,0xdd05ed62
  427741:	lahf   
  427742:	mov    edx,0x2138b9b5
  427747:	les    esp,FWORD PTR [ebx-0x13b17e4d]
  42774d:	inc    eax
  42774e:	mov    bh,BYTE PTR [ebx-0x6c]
  427751:	in     ax,dx
  427753:	mov    esp,DWORD PTR [ecx-0x4]
  427756:	xor    al,0xd4
  427758:	mov    DWORD PTR [eax+0x74782834],0x887e10d5
  427762:	push   ds
  427763:	and    al,0x9f
  427765:	cmp    DWORD PTR [esi+eiz*8+0x25],0x62
  42776a:	adc    ah,BYTE PTR [ecx]
  42776c:	rcr    bh,0x90
  42776f:	ret    0xbdf3
  427772:	out    dx,eax
  427773:	fisubr WORD PTR ds:0x3ac82cd7
  427779:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42777a:	mov    ecx,0x3b52d89c
  42777f:	stos   DWORD PTR es:[edi],eax
  427780:	lock ins DWORD PTR es:[edi],dx
  427782:	data16 cmc 
  427784:	stc    
  427785:	push   cs
  427786:	repnz push ss
  427788:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427789:	inc    eax
  42778a:	sti    
  42778b:	and    DWORD PTR [eax-0x49644c07],esp
  427791:	or     DWORD PTR [esi-0x51],ebx
  427794:	(bad)  
  427795:	(bad)  
  427796:	and    eax,0xc19e0325
  42779b:	jg     0x427751
  42779d:	arpl   WORD PTR [eax],di
  42779f:	xchg   DWORD PTR [ebp+0x17],ebp
  4277a2:	int    0x3e
  4277a4:	push   cs
  4277a5:	call   0xfdbc258c
  4277aa:	push   ebx
  4277ab:	xchg   edx,eax
  4277ac:	lock in al,0x8
  4277af:	push   ebx
  4277b0:	ret    
  4277b1:	out    0x82,eax
  4277b3:	and    al,0x27
  4277b5:	dec    esp
  4277b6:	adc    BYTE PTR [ecx+0x1],dl
  4277b9:	push   cs
  4277ba:	xor    edi,esi
  4277bc:	ret    
  4277bd:	xchg   BYTE PTR [edi],bh
  4277bf:	popa   
  4277c0:	retf   
  4277c1:	inc    esp
  4277c3:	add    DWORD PTR [ebp-0x7ff8cb8f],esi
  4277c9:	mov    dl,0xa3
  4277cb:	adc    DWORD PTR [esi-0x71],ebp
  4277ce:	adc    esi,esi
  4277d0:	push   0x42
  4277d2:	sub    BYTE PTR [ecx+0xb],bh
  4277d5:	stos   DWORD PTR es:[edi],eax
  4277d6:	std    
  4277d7:	fs hlt 
  4277d9:	loope  0x4277cf
  4277db:	jecxz  0x427838
  4277dd:	push   ss
  4277de:	cli    
  4277df:	sbb    BYTE PTR [edi],bl
  4277e1:	pop    edi
  4277e2:	addr16 das 
  4277e4:	fld    QWORD PTR [edi-0x71]
  4277e7:	mov    ss,eax
  4277e9:	xchg   edi,eax
  4277ea:	adc    cl,0x69
  4277ed:	into   
  4277ee:	imul   ebx,DWORD PTR [ebp-0x4dd1447a],0x75627ea6
  4277f8:	pop    edx
  4277f9:	inc    eax
  4277fa:	xor    BYTE PTR [edi+0x361d91a1],dh
  427800:	pop    ss
  427801:	inc    edi
  427802:	xor    ah,BYTE PTR [ecx]
  427804:	inc    edi
  427805:	mov    ebx,0x1e5fd18b
  42780a:	dec    edx
  42780b:	ins    BYTE PTR es:[edi],dx
  42780c:	sub    al,0x74
  42780e:	leave  
  42780f:	xchg   DWORD PTR [esi],ecx
  427811:	or     esp,DWORD PTR [edx]
  427813:	fcom   DWORD PTR [ebx-0x19dc2227]
  427819:	or     ebx,esi
  42781b:	popa   
  42781c:	aas    
  42781d:	call   0x1003:0xebd53bb9
  427824:	ja     0x427854
  427826:	jmp    0x1ec4:0x1f4cfea0
  42782d:	jmp    0x42785c
  42782f:	das    
  427830:	pusha  
  427831:	sbb    al,0xf4
  427833:	and    eax,0xa21e1f9c
  427838:	bound  edx,QWORD PTR [edx-0x70]
  42783b:	cmp    ebp,edx
  42783d:	add    edi,DWORD PTR [esi]
  42783f:	idiv   DWORD PTR [esi+ebp*1]
  427842:	fcom   QWORD PTR ds:0xc089a5f1
  427848:	out    0x3c,eax
  42784a:	mov    ah,0x82
  42784c:	ds pusha 
  42784e:	aad    0xf9
  427850:	jle    0x42783a
  427852:	icebp  
  427853:	mov    es,WORD PTR [esp+edi*2]
  427856:	push   es
  427857:	sahf   
  427858:	pop    ebx
  427859:	nop
  42785a:	pop    ebp
  42785b:	dec    edx
  42785c:	xchg   esp,eax
  42785d:	sub    DWORD PTR [edx-0x58],esp
  427860:	outs   dx,BYTE PTR ds:[esi]
  427861:	popa   
  427862:	fcom   QWORD PTR [edx+0x5]
  427865:	pop    edi
  427866:	dec    esp
  427867:	sub    BYTE PTR [edx+0x29],dl
  42786a:	xchg   ebx,eax
  42786b:	adc    cl,BYTE PTR [esi]
  42786d:	dec    edx
  42786e:	scas   eax,DWORD PTR es:[edi]
  42786f:	jge    0x427808
  427871:	out    0x5e,eax
  427873:	jg     0x42785f
  427875:	push   ecx
  427876:	sub    al,dh
  427878:	outs   dx,BYTE PTR ds:[esi]
  427879:	fimul  DWORD PTR [eax]
  42787b:	mov    edx,0xca5f39ae
  427880:	lods   al,BYTE PTR ds:[esi]
  427881:	popf   
  427882:	jo     0x42785b
  427884:	xor    ah,BYTE PTR [edx]
  427886:	sar    BYTE PTR [edx-0x60],1
  427889:	jnp    0x42782f
  42788b:	retf   
  42788c:	adc    ch,BYTE PTR [ecx]
  42788e:	int3   
  42788f:	imul   edx
  427891:	and    eax,0xe40a93a3
  427896:	sti    
  427897:	cdq    
  427898:	int    0xaa
  42789a:	ins    BYTE PTR es:[edi],dx
  42789b:	mov    ds:0x21bc8284,eax
  4278a0:	jns    0x4278cd
  4278a2:	not    DWORD PTR [esp+eax*1-0x303952b]
  4278a9:	sbb    eax,0x2c3a6d2
  4278ae:	sub    ebx,edi
  4278b0:	ja     0x427855
  4278b2:	jae    0x4278c2
  4278b4:	mov    esi,0x4c309ba7
  4278b9:	push   0x1f7acc28
  4278be:	jmp    0x4278b5
  4278c0:	(bad)  
  4278c1:	(bad)  
  4278c3:	sbb    eax,DWORD PTR [esi+0x64b7391]
  4278c9:	sbb    eax,0xa610dfd4
  4278ce:	mov    dh,0x23
  4278d0:	in     eax,0xb6
  4278d2:	jmp    DWORD PTR [esi-0x69]
  4278d5:	pop    ebp
  4278d6:	jnp    0x427900
  4278d8:	arpl   WORD PTR fs:[edi-0x60731194],cx
  4278df:	xor    eax,0xae380de3
  4278e4:	stc    
  4278e5:	js     0x427946
  4278e7:	ret    0xfce2
  4278ea:	popf   
  4278eb:	jno    0x427927
  4278ed:	pushf  
  4278ee:	inc    bp
  4278f0:	jmp    0xb52b:0xcd151d65
  4278f7:	xchg   ecx,eax
  4278f8:	fidiv  DWORD PTR [eax+0x2e]
  4278fb:	in     al,dx
  4278fc:	xor    DWORD PTR ds:0x696f0630,ebp
  427902:	test   ebx,ebp
  427904:	pop    eax
  427905:	xchg   ax,ax
  427907:	mov    ds:0x8efc222,al
  42790c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42790d:	repnz and eax,0x9e72fcf6
  427913:	sub    ebp,DWORD PTR [ebp+0x47]
  427916:	ins    DWORD PTR es:[edi],dx
  427917:	(bad)  
  427918:	fnstcw WORD PTR [ebp+0x2ec2d51e]
  42791e:	ins    DWORD PTR es:[edi],dx
  42791f:	sub    DWORD PTR [edx-0x63],esi
  427922:	retf   
  427923:	mov    WORD PTR cs:[ebx],?
  427926:	or     DWORD PTR ds:0x6124e645,edx
  42792c:	daa    
  42792d:	bnd jno 0x4279a9
  427930:	fmul   st(5),st
  427932:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427933:	push   ebp
  427934:	add    DWORD PTR [edi],esp
  427936:	dec    esi
  427937:	outs   dx,DWORD PTR ds:[esi]
  427938:	loop   0x4278d1
  42793a:	mov    bl,0x4f
  42793c:	outs   dx,BYTE PTR ds:[esi]
  42793d:	add    BYTE PTR [eax-0x74],0x47
  427941:	fsubr  DWORD PTR [ebp-0xc]
  427944:	iret   
  427945:	push   edx
  427946:	adc    edx,edi
  427948:	ss pop edx
  42794a:	shr    DWORD PTR [ebp+0x2cf9afd8],1
  427950:	call   0x8a96b647
  427955:	iret   
  427956:	jg     0x4279d7
  427958:	outs   dx,DWORD PTR ds:[esi]
  427959:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42795a:	add    DWORD PTR [esi],ecx
  42795c:	out    dx,al
  42795d:	jle    0x42797c
  42795f:	push   es
  427960:	shl    DWORD PTR [esi+0x47],1
  427963:	gs ds pop edx
  427966:	mov    eax,ds:0xd76dfd5b
  42796b:	imul   esi,DWORD PTR [edi],0xffffffb7
  42796e:	dec    ecx
  42796f:	nop
  427970:	push   eax
  427971:	sub    al,0x61
  427973:	icebp  
  427974:	xor    cl,BYTE PTR [edx+0x40]
  427977:	sub    al,0x1d
  427979:	cmp    DWORD PTR [edi],ecx
  42797b:	add    cl,BYTE PTR [edx]
  42797d:	mov    al,0xf
  42797f:	ret    
  427980:	movhps xmm5,QWORD PTR [esi+0x6f]
  427984:	xchg   ecx,eax
  427985:	push   0xffffffcd
  427987:	cmp    cl,BYTE PTR [ebx]
  427989:	sub    al,0xee
  42798b:	add    esi,ecx
  42798d:	jge    0x427955
  42798f:	inc    edi
  427990:	mov    edx,0xe7c6ed42
  427995:	dec    edi
  427996:	xchg   esi,eax
  427997:	sub    BYTE PTR [edx],cl
  427999:	mov    ebx,DWORD PTR [ebx-0x5687ac42]
  42799f:	dec    edi
  4279a0:	inc    ecx
  4279a1:	cmp    dh,BYTE PTR [ebx-0x29]
  4279a4:	xor    edx,edx
  4279a6:	retf   
  4279a7:	sub    ebx,DWORD PTR [ebx+ebx*2+0x1edd83b1]
  4279ae:	cs enter 0x7b9d,0xb0
  4279b3:	cld    
  4279b4:	push   0x300172b6
  4279b9:	cmp    ebx,DWORD PTR [eax-0x2631b00d]
  4279bf:	icebp  
  4279c0:	sbb    eax,0xba169fa3
  4279c5:	frstor ds:0x62b8b21
  4279cb:	mov    WORD PTR [esi],cs
  4279cd:	ficom  WORD PTR [edx-0x267aa2d2]
  4279d3:	sbb    DWORD PTR [esi],ebp
  4279d5:	(bad)  
  4279d6:	adc    eax,DWORD PTR [ebp-0x337d7528]
  4279dc:	arpl   WORD PTR [esi],bp
  4279de:	sbb    bh,ah
  4279e0:	mov    ah,0x3f
  4279e2:	sub    dl,BYTE PTR [edi+0x4d45e42e]
  4279e8:	ss mov esp,fs
  4279eb:	ret    0x8920
  4279ee:	in     al,0x52
  4279f0:	bound  esp,QWORD PTR [edi+0x61]
  4279f3:	adc    edi,DWORD PTR [ecx-0x6e]
  4279f6:	daa    
  4279f7:	ds test al,0xa5
  4279fa:	repz push es
  4279fc:	mov    esi,0xdfeba923
  427a01:	dec    edx
  427a02:	sar    ebp,1
  427a04:	sbb    eax,eax
  427a06:	xchg   esi,eax
  427a07:	push   esp
  427a08:	icebp  
  427a09:	inc    eax
  427a0a:	imul   edx,DWORD PTR [edx],0xffffffc1
  427a0d:	call   DWORD PTR ds:0x5f1eaab8
  427a13:	mov    DWORD PTR [ecx-0x2a],0x9e643db4
  427a1a:	xchg   edx,eax
  427a1b:	pop    ebx
  427a1c:	pop    es
  427a1d:	stos   BYTE PTR es:[edi],al
  427a1e:	repnz repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a22:	push   cs
  427a23:	push   0x2c
  427a25:	(bad)  
  427a27:	pusha  
  427a28:	int    0xfd
  427a2a:	mov    ?,WORD PTR [ebp+ecx*1+0x23]
  427a2e:	sbb    al,0x52
  427a30:	rcl    eax,0xba
  427a33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a34:	cs add edx,ebp
  427a37:	adc    eax,0x4a33ebbc
  427a3c:	lds    ebx,FWORD PTR [edi]
  427a3e:	adc    cl,bl
  427a40:	xor    eax,0xbaa9ef72
  427a45:	mov    ch,BYTE PTR [ecx+0x2b]
  427a48:	rcr    DWORD PTR [ecx],0xce
  427a4b:	xchg   edi,eax
  427a4c:	sub    eax,0x3a04a131
  427a51:	mov    dh,0x37
  427a53:	jl     0x427a2d
  427a55:	mov    bh,BYTE PTR [ecx+0x360f1cbc]
  427a5b:	(bad)  
  427a5c:	push   ebp
  427a5d:	data16 jle 0x427a9c
  427a60:	sub    dh,bh
  427a62:	out    0xc2,al
  427a64:	fnstenv [ebx]
  427a66:	xor    eax,ebp
  427a68:	out    0xc0,eax
  427a6a:	outs   dx,BYTE PTR ds:[esi]
  427a6b:	sub    dh,0xa9
  427a6e:	and    al,0x49
  427a70:	mov    bl,0xc1
  427a72:	dec    esp
  427a73:	retf   
  427a74:	mov    bh,0x5d
  427a76:	je     0x427ae1
  427a78:	inc    edx
  427a79:	sbb    edx,DWORD PTR [edx+0x58]
  427a7c:	inc    ecx
  427a7d:	in     al,dx
  427a7e:	or     esi,DWORD PTR [esi-0x1c]
  427a81:	or     edx,DWORD PTR [esi]
  427a83:	inc    ebp
  427a84:	mov    ?,WORD PTR [ecx+0x25]
  427a87:	push   0x1b
  427a89:	pop    ebx
  427a8a:	lods   eax,DWORD PTR ds:[esi]
  427a8b:	push   0x7e
  427a8d:	sahf   
  427a8e:	xor    DWORD PTR [edx-0x47],ebp
  427a91:	rcl    DWORD PTR [edx+ebx*4+0x35e9f248],0xa7
  427a99:	shl    DWORD PTR [ebx-0x3],cl
  427a9c:	add    eax,0x5dd80eb5
  427aa1:	je     0x427a83
  427aa3:	inc    esi
  427aa4:	xchg   edi,eax
  427aa5:	cmp    DWORD PTR [eax],0x55736df6
  427aab:	pop    edx
  427aac:	or     eax,0xc6d9f818
  427ab1:	sbb    eax,esi
  427ab3:	mov    eax,0x3a82b7d3
  427ab8:	gs ins DWORD PTR es:[edi],dx
  427aba:	popa   
  427abb:	arpl   WORD PTR [eax-0x663cd118],bp
  427ac1:	sti    
  427ac2:	add    eax,0x6482214e
  427ac7:	cmp    eax,0xbe94c37b
  427acc:	stc    
  427acd:	jmp    0xb30ed7ae
  427ad2:	mov    DWORD PTR [edi+0x587e4496],ebp
  427ad8:	inc    esi
  427ad9:	outs   dx,DWORD PTR ds:[esi]
  427ada:	movaps xmm6,xmm6
  427add:	je     0x427a92
  427adf:	pushf  
  427ae0:	xchg   esp,eax
  427ae1:	in     eax,0x49
  427ae3:	fxch   st(7)
  427ae5:	jbe    0x427a9c
  427ae7:	cdq    
  427ae8:	xchg   ebx,eax
  427ae9:	loopne 0x427af9
  427aeb:	mov    ss,edx
  427aed:	pop    ss
  427aee:	aam    0xe3
  427af0:	cs or  eax,0x1e0c6a12
  427af6:	mov    eax,0x44bd6c56
  427afb:	jo     0x427b69
  427afd:	sub    dh,BYTE PTR [esi+0x4a2e43b]
  427b03:	mov    esp,0xa91ff1d4
  427b08:	cmp    al,0x5b
  427b0a:	push   edi
  427b0b:	inc    eax
  427b0c:	pop    es
  427b0d:	sub    al,0xd0
  427b0f:	scas   eax,DWORD PTR es:[edi]
  427b10:	jb     0x427aa8
  427b12:	sub    dl,BYTE PTR [edi]
  427b14:	pop    edi
  427b15:	into   
  427b16:	push   ss
  427b17:	mov    edx,0x37fae568
  427b1c:	push   es
  427b1d:	aam    0x3
  427b1f:	push   es
  427b20:	jo     0x427af7
  427b22:	scas   eax,DWORD PTR es:[edi]
  427b23:	sbb    eax,0x105b5fca
  427b28:	aad    0xc3
  427b2a:	int3   
  427b2b:	or     DWORD PTR [ecx],edi
  427b2d:	sub    BYTE PTR [esi-0x6c],ch
  427b30:	inc    esi
  427b31:	data16 sub al,0x22
  427b34:	stos   DWORD PTR es:[edi],eax
  427b35:	xchg   esi,eax
  427b36:	pop    esp
  427b37:	mov    al,0xf4
  427b39:	mov    ah,0xc4
  427b3b:	lods   eax,DWORD PTR ds:[esi]
  427b3c:	pop    edi
  427b3d:	test   al,0x34
  427b3f:	mov    ebp,0xf320c578
  427b44:	pop    eax
  427b45:	mov    cl,0xde
  427b47:	lock mov ebp,0x9ec0fbb9
  427b4d:	cs sti 
  427b4f:	mov    esi,0x76dee10a
  427b54:	xor    dl,BYTE PTR ds:0xb2d81a73
  427b5a:	sub    esp,DWORD PTR [eax+edi*8+0x1b]
  427b5e:	ds (bad) 
  427b61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427b62:	push   cs
  427b63:	jo     0x427be0
  427b65:	add    eax,0x293306cb
  427b6a:	int3   
  427b6b:	test   DWORD PTR [ebx-0x6227d2ea],edx
  427b71:	cs leave 
  427b73:	test   DWORD PTR [ebp-0x57],edi
  427b76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427b77:	dec    esi
  427b78:	(bad)  
  427b79:	call   0xe226e6a9
  427b7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b7f:	mov    dl,0x41
  427b81:	cs sahf 
  427b83:	sbb    eax,DWORD PTR [edx-0x53aae041]
  427b89:	pop    eax
  427b8a:	jns    0x427b26
  427b8c:	ds mov ebx,es
  427b8f:	shr    edi,1
  427b91:	sub    BYTE PTR [eax],dl
  427b93:	in     eax,0x2
  427b95:	mov    bl,BYTE PTR [edi]
  427b97:	pop    eax
  427b98:	(bad)  
  427b99:	dec    esp
  427b9a:	dec    ecx
  427b9b:	aam    0xe4
  427b9d:	mov    ah,0x2c
  427b9f:	repnz xchg ebx,eax
  427ba1:	xchg   esi,eax
  427ba2:	add    DWORD PTR [edx-0x60],ecx
  427ba5:	push   edx
  427ba6:	xchg   al,dl
  427ba8:	in     al,dx
  427ba9:	es mov bh,al
  427bac:	add    bl,BYTE PTR [esi]
  427bae:	loop   0x427b31
  427bb0:	jo     0x427c15
  427bb2:	mov    ds:0x6707f582,al
  427bb7:	mov    edx,0x1b51be1e
  427bbc:	inc    ebx
  427bbd:	xchg   DWORD PTR [ecx+ebp*1-0x351e11e3],ebp
  427bc4:	jg     0x427bd1
  427bc6:	dec    esi
  427bc7:	or     DWORD PTR [edx+0x14],edx
  427bca:	out    dx,al
  427bcb:	out    dx,al
  427bcc:	or     dh,BYTE PTR ds:0x0
  427bd2:	ja     0x427bca
  427bd4:	push   ecx
  427bd5:	dec    edi
  427bd6:	shr    edi,1
  427bd8:	jg     0x427bd8
  427bda:	push   cs
  427bdb:	mov    edi,0xa519e2d0
  427be0:	retf   0xc18f
  427be3:	repz add DWORD PTR [eax],eax
  427be6:	hlt    
  427be7:	add    al,0x0
  427be9:	add    BYTE PTR [edx-0x451f7633],ah
  427bef:	scas   eax,DWORD PTR es:[edi]
  427bf0:	inc    ecx
  427bf1:	outs   dx,DWORD PTR ds:[esi]
  427bf2:	cmp    ebx,esi
  427bf4:	cmp    BYTE PTR [eax+0xb],dh
  427bf7:	jl     0x427c37
  427bf9:	jb     0x427c0a
  427bfb:	mov    ecx,DWORD PTR ds:0xfd62ce3
  427c01:	stos   DWORD PTR es:[edi],eax
  427c02:	sar    BYTE PTR [ecx+ebx*1],cl
  427c05:	pusha  
  427c06:	cs sub bl,ah
  427c09:	ror    DWORD PTR [ebx],cl
  427c0b:	cmp    BYTE PTR [edi-0x16],dh
  427c0e:	lods   eax,DWORD PTR ds:[esi]
  427c0f:	and    DWORD PTR [esi-0x353778d9],ecx
  427c15:	inc    ecx
  427c16:	test   BYTE PTR [esi+0x347a9ffc],al
  427c1c:	ins    BYTE PTR es:[edi],dx
  427c1d:	push   ds
  427c1e:	scas   al,BYTE PTR es:[edi]
  427c1f:	ret    
  427c20:	mov    eax,ds:0xe70aea22
  427c25:	mov    ds:0x9865d238,al
  427c2a:	div    BYTE PTR ds:0xcfced644
  427c30:	or     esp,ebp
  427c32:	inc    ebp
  427c33:	mov    ecx,0x9b45b534
  427c38:	pop    esi
  427c39:	cmp    BYTE PTR [edx-0x47af8dfe],al
  427c3f:	stc    
  427c40:	test   al,0x69
  427c42:	add    eax,0xf986cbbe
  427c47:	call   FWORD PTR [ebx-0x400bec58]
  427c4d:	adc    edx,edi
  427c4f:	dec    edi
  427c50:	outs   dx,DWORD PTR ds:[esi]
  427c51:	jo     0x427bd4
  427c53:	add    BYTE PTR ds:0x216c228e,ah
  427c59:	jmp    0x50dca081
  427c5e:	and    BYTE PTR [ebx-0x37],bh
  427c61:	in     al,dx
  427c62:	test   al,0xa9
  427c64:	lock fist WORD PTR [esi-0x1cb709f2]
  427c6b:	push   ecx
  427c6c:	rol    esi,0x4f
  427c6f:	scas   eax,DWORD PTR es:[edi]
  427c70:	inc    eax
  427c71:	mov    bh,0x12
  427c73:	les    ebp,FWORD PTR [edi+0x25]
  427c76:	sbb    eax,0x39dc5e88
  427c7b:	nop
  427c7c:	push   edx
  427c7d:	jnp    0x427ca7
  427c7f:	retf   0xdb7a
  427c82:	in     eax,dx
  427c83:	xor    DWORD PTR [ebp*8+0x153b1a61],ebx
  427c8a:	outs   dx,DWORD PTR ds:[esi]
  427c8b:	sbb    al,BYTE PTR [esi+0x6af9a9a]
  427c91:	adc    eax,0x4825c5e7
  427c96:	xchg   ecx,eax
  427c97:	xchg   ebx,eax
  427c98:	pop    esi
  427c99:	jnp    0x427cd2
  427c9b:	popa   
  427c9c:	sar    DWORD PTR [edi],0x57
  427c9f:	fsub   st,st(2)
  427ca1:	test   eax,0xe0c1d5dc
  427ca6:	mov    BYTE PTR [ebp-0x110944d0],ah
  427cac:	sbb    edx,0x7550be5b
  427cb2:	popf   
  427cb3:	dec    esi
  427cb4:	adc    DWORD PTR [ebx],esp
  427cb6:	ds in  eax,dx
  427cb8:	scas   al,BYTE PTR es:[edi]
  427cb9:	cdq    
  427cba:	xchg   eax,ebx
  427cbc:	push   ss
  427cbd:	clc    
  427cbe:	inc    ebp
  427cbf:	repz loopne 0x427c92
  427cc2:	sbb    al,0x24
  427cc4:	jmp    0x3b2c:0x4c4adb47
  427ccb:	pop    edx
  427ccc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427ccd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427cce:	lea    esi,[edi+0x2b826907]
  427cd4:	scas   eax,DWORD PTR es:[edi]
  427cd5:	xchg   DWORD PTR [edx+0x4a68e022],esi
  427cdb:	mov    ds:0xa769849a,al
  427ce0:	sbb    dh,BYTE PTR [edx+0x77]
  427ce3:	xchg   esp,eax
  427ce4:	jns    0x427c91
  427ce6:	push   ss
  427ce7:	mov    ?,eax
  427ce9:	jle    0x427c8c
  427ceb:	loopne 0x427d39
  427ced:	gs xchg esp,eax
  427cef:	mov    esp,0xab6ddb4c
  427cf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427cf5:	mov    ebx,0xc8730c50
  427cfa:	jle    0x427d42
  427cfc:	stc    
  427cfd:	or     al,0x7c
  427cff:	and    dl,BYTE PTR [ecx+0x29]
  427d02:	fwait
  427d03:	pop    esp
  427d04:	dec    edi
  427d05:	mov    ds:0xd26c3d65,al
  427d0a:	loop   0x427d5e
  427d0c:	(bad)  
  427d0d:	mov    al,ds:0x5d9886c7
  427d12:	outs   dx,BYTE PTR ds:[esi]
  427d13:	ja     0x427c9c
  427d15:	adc    eax,0xdd5b58f2
  427d1a:	cld    
  427d1b:	les    esi,FWORD PTR [eax-0x8]
  427d1e:	adc    ebp,DWORD PTR [ebx-0x4b]
  427d21:	adc    BYTE PTR fs:0x44a2a46c,0x4
  427d29:	jno    0x427cbc
  427d2b:	std    
  427d2c:	push   es
  427d2d:	sbb    al,0x70
  427d2f:	dec    ebx
  427d30:	fild   QWORD PTR [esi+ebp*4-0x7e]
  427d34:	push   esi
  427d35:	or     DWORD PTR [edi-0x42a3c5ea],esp
  427d3b:	inc    eax
  427d3c:	sbb    edx,DWORD PTR [edx+0x695d68b8]
  427d42:	add    DWORD PTR [edi+ebx*8+0x2a8fe847],ecx
  427d49:	(bad)  
  427d4a:	ja     0x427d1c
  427d4c:	das    
  427d4d:	popa   
  427d4e:	cs jl  0x427d97
  427d51:	add    DWORD PTR [ecx-0x7d],ecx
  427d54:	es dec edx
  427d56:	popf   
  427d57:	bound  edx,QWORD PTR [ecx-0x27ff1899]
  427d5d:	dec    edi
  427d5e:	adc    eax,0x984a366d
  427d63:	dec    edi
  427d64:	dec    edi
  427d65:	sub    BYTE PTR [ebp-0x21e301b3],cl
  427d6b:	outs   dx,DWORD PTR ds:[esi]
  427d6c:	js     0x427daf
  427d6e:	sti    
  427d6f:	bound  ebp,QWORD PTR [ebx+0x7a]
  427d72:	add    BYTE PTR [si+0x2c],al
  427d76:	jnp    0x427df1
  427d78:	pop    ss
  427d79:	fisttp DWORD PTR [ebx+0x5d82f26d]
  427d7f:	aam    0x3b
  427d81:	pop    ebp
  427d82:	nop
  427d83:	lahf   
  427d84:	cmp    eax,0x12c08161
  427d89:	out    dx,al
  427d8a:	add    ecx,DWORD PTR [ebp+0x6f4293fb]
  427d90:	cwde   
  427d91:	xchg   ebp,eax
  427d92:	cmp    BYTE PTR [edx-0x34],ah
  427d95:	jns    0x427dbe
  427d97:	scas   al,BYTE PTR es:[edi]
  427d98:	je     0x427d4a
  427d9a:	bound  eax,QWORD PTR [edi-0x5a]
  427d9d:	pop    ebp
  427d9e:	aam    0xdd
  427da0:	mov    DWORD PTR [ebx],esp
  427da2:	icebp  
  427da3:	aam    0x74
  427da5:	js     0x427d3a
  427da7:	push   eax
  427da8:	int    0xcb
  427daa:	sbb    eax,0x9811ff05
  427daf:	xchg   esi,eax
  427db0:	repz cdq 
  427db2:	dec    esi
  427db3:	inc    ecx
  427db4:	mov    esp,0x8d84e25a
  427db9:	and    DWORD PTR [edi+0x4ceba447],eax
  427dbf:	mov    bl,0x20
  427dc1:	jge    0x427db6
  427dc3:	push   ebp
  427dc4:	mov    dl,0x35
  427dc6:	xchg   edx,eax
  427dc7:	(bad)  
  427dc8:	(bad)  
  427dca:	jns    0x427d73
  427dcc:	push   cs
  427dcd:	test   al,0x83
  427dcf:	push   0xffffff95
  427dd1:	jbe    0x427dd5
  427dd3:	cli    
  427dd4:	fcmovnbe st,st(6)
  427dd6:	inc    edx
  427dd7:	mov    ebx,DWORD PTR [ebp-0x6bfe7130]
  427ddd:	adc    al,0x12
  427ddf:	or     al,0xc3
  427de1:	cli    
  427de2:	jbe    0x427dde
  427de4:	lea    ecx,[esi-0x42bad83a]
  427dea:	inc    edi
  427deb:	and    eax,0xebf42d4f
  427df0:	lahf   
  427df1:	rcl    BYTE PTR [esi+0x3717eeac],1
  427df7:	ins    BYTE PTR es:[edi],dx
  427df8:	inc    edx
  427df9:	clc    
  427dfa:	jp     0x427e37
  427dfc:	int3   
  427dfd:	lahf   
  427dfe:	data16 xor al,0xbc
  427e01:	pop    ebp
  427e02:	sbb    ecx,DWORD PTR [edi]
  427e04:	add    BYTE PTR [ebx-0x5a156447],ch
  427e0a:	retf   
  427e0b:	pop    edi
  427e0c:	adc    ecx,edi
  427e0e:	jle    0x427e14
  427e10:	fld    QWORD PTR [ebp-0x5449a35c]
  427e16:	mov    edi,0xca331f5
  427e1b:	rcr    BYTE PTR [ecx+0x7b35d875],1
  427e21:	adc    eax,DWORD PTR [edx]
  427e23:	jno    0x427dcd
  427e25:	inc    ebp
  427e26:	stos   BYTE PTR es:[edi],al
  427e27:	cli    
  427e28:	jbe    0x427e82
  427e2a:	inc    ebp
  427e2b:	ins    DWORD PTR es:[edi],dx
  427e2c:	xor    DWORD PTR ds:0x4d7e2376,edi
  427e32:	and    BYTE PTR [ecx-0x4617c50e],dh
  427e38:	lahf   
  427e39:	ins    BYTE PTR es:[edi],dx
  427e3a:	pop    edi
  427e3b:	cmp    BYTE PTR [ebp-0x46],dh
  427e3e:	pop    eax
  427e3f:	mov    edi,DWORD PTR [esi+0x5f919d13]
  427e45:	and    al,0x61
  427e47:	push   ss
  427e48:	jae    0x427ded
  427e4a:	in     al,0x61
  427e4c:	fnsave [ecx+edx*4+0x15]
  427e50:	pop    ds
  427e51:	push   esp
  427e52:	sub    eax,0xff30ae66
  427e57:	repnz sar BYTE PTR [ebx-0x5da3043],cl
  427e5e:	inc    edx
  427e5f:	scas   eax,DWORD PTR es:[edi]
  427e60:	call   0x66b70567
  427e65:	mov    edx,0xd78a2c18
  427e6a:	dec    ecx
  427e6b:	dec    esp
  427e6c:	outs   dx,BYTE PTR es:[esi]
  427e6e:	and    al,0x6d
  427e70:	retf   
  427e71:	loopne 0x427eed
  427e73:	pop    ecx
  427e74:	cmp    al,0x41
  427e76:	dec    edx
  427e77:	push   0x13
  427e79:	xlat   BYTE PTR ds:[ebx]
  427e7a:	cdq    
  427e7b:	push   esi
  427e7c:	xchg   ebx,eax
  427e7d:	sub    BYTE PTR [edi-0xf1d5b81],0x5d
  427e84:	repnz pop ebx
  427e86:	dec    esi
  427e87:	stc    
  427e88:	lahf   
  427e89:	sub    al,0x2a
  427e8b:	aas    
  427e8c:	sbb    ch,dh
  427e8e:	shl    ch,0x7
  427e91:	pcmpeqd mm0,QWORD PTR [edx+0x40a05566]
  427e98:	dec    edx
  427e99:	cmp    BYTE PTR [edx],dh
  427e9b:	jg     0x427e81
  427e9d:	outs   dx,DWORD PTR ds:[esi]
  427e9e:	dec    ebx
  427e9f:	(bad)  
  427ea1:	mov    BYTE PTR [edi+0x43],al
  427ea4:	retf   0x3e6b
  427ea7:	out    0x1e,al
  427ea9:	into   
  427eaa:	out    dx,eax
  427eab:	push   ds
  427eac:	repz sub BYTE PTR [eax+0x36],cl
  427eb0:	xor    eax,esp
  427eb2:	jle    0x427ef1
  427eb4:	clc    
  427eb5:	sbb    eax,0xf780824e
  427eba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427ebb:	xor    BYTE PTR [ecx+0x3d],al
  427ebe:	in     eax,dx
  427ebf:	add    al,0x62
  427ec1:	int3   
  427ec2:	adc    ebp,DWORD PTR [edi+0x51]
  427ec5:	sbb    al,0x94
  427ec7:	inc    ebx
  427ec8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427ec9:	push   eax
  427eca:	sbb    ebx,ebp
  427ecc:	jmp    0xa22a:0x11d01baf
  427ed3:	add    eax,ebp
  427ed5:	push   edx
  427ed6:	ret    
  427ed7:	js     0x427ec3
  427ed9:	fdiv   QWORD PTR [edi]
  427edb:	sub    dh,ah
  427edd:	into   
  427ede:	shr    BYTE PTR [ebx+0x298bb03a],1
  427ee4:	mov    edx,0x17f3da2f
  427ee9:	ss int3 
  427eeb:	push   ss
  427eec:	jnp    0x427ee6
  427eee:	lds    esi,FWORD PTR [edx*1+0x6ea21dfe]
  427ef5:	cwde   
  427ef6:	mov    ebp,DWORD PTR [ebp+0x65]
  427ef9:	adc    esp,eax
  427efb:	in     al,dx
  427efc:	mov    eax,ds:0x8d0f42b4
  427f01:	xchg   DWORD PTR [edi+0x78877cbf],edi
  427f07:	mov    ah,0x39
  427f09:	and    DWORD PTR ds:0xfdebe2c8,esp
  427f0f:	pop    edx
  427f10:	stos   BYTE PTR es:[edi],al
  427f11:	sbb    al,0x53
  427f13:	fdiv   QWORD PTR [ecx]
  427f15:	push   eax
  427f16:	fldl2t 
  427f18:	in     al,dx
  427f19:	pop    ds
  427f1a:	icebp  
  427f1b:	sub    ch,0x69
  427f1e:	adc    BYTE PTR [ecx+0x34],bl
  427f21:	jge    0x427f78
  427f23:	mov    eax,0x6097c893
  427f28:	addr16 mov esp,0x497fdd20
  427f2e:	loope  0x427f40
  427f30:	add    dh,ch
  427f32:	mov    DWORD PTR [ebx+0x16],edi
  427f35:	jno    0x427ef0
  427f37:	rcr    BYTE PTR [ebx+0x1186c6cd],1
  427f3d:	push   cs
  427f3e:	sbb    eax,0xbbe16000
  427f43:	cdq    
  427f44:	sbb    cl,BYTE PTR [eax-0x5a]
  427f47:	sub    ebp,DWORD PTR [ebx-0x72]
  427f4a:	mov    edx,0x7b6e6369
  427f4f:	and    eax,0x6191e4ae
  427f54:	outs   dx,DWORD PTR ds:[esi]
  427f55:	mov    ah,BYTE PTR [edi-0x1b]
  427f58:	adc    BYTE PTR [edx-0x2e42ffe7],0xdd
  427f5f:	jns    0x427fc9
  427f61:	mov    ebx,0x4f2d55de
  427f66:	in     al,dx
  427f67:	rcr    BYTE PTR [ebx],0x42
  427f6a:	jb     0x427f3a
  427f6c:	xor    al,0x53
  427f6e:	scas   eax,DWORD PTR es:[edi]
  427f6f:	jmp    0x427feb
  427f71:	dec    eax
  427f72:	cmp    ecx,DWORD PTR [esi+edx*4]
  427f75:	mov    cl,0xd4
  427f77:	adc    BYTE PTR [esi],0xce
  427f7a:	test   eax,0x426e0330
  427f7f:	addr16 inc edx
  427f81:	mov    esp,0x469a5cb7
  427f86:	jge    0x427f30
  427f88:	cli    
  427f89:	jle    0x427fed
  427f8b:	cmc    
  427f8c:	xchg   esi,eax
  427f8d:	cmp    DWORD PTR [ebp+0x30],esi
  427f90:	(bad)  
  427f91:	pop    esi
  427f92:	xor    ch,bl
  427f94:	inc    ecx
  427f95:	clc    
  427f96:	sub    BYTE PTR [edx+eax*2-0x59c3e079],ch
  427f9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427f9e:	rol    DWORD PTR [ebx],1
  427fa0:	adc    ecx,eax
  427fa2:	mov    edx,0x98c3a7f2
  427fa7:	adc    al,0x88
  427fa9:	and    bh,BYTE PTR [esp+edi*8-0x5db54821]
  427fb0:	cmp    al,0xa3
  427fb2:	push   es
  427fb3:	dec    esp
  427fb4:	xor    DWORD PTR [ebx-0x5c],ecx
  427fb7:	mov    eax,ds:0xb7d08c7f
  427fbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427fbd:	push   0xe0d1253d
  427fc2:	xchg   BYTE PTR [esi-0x6da4a573],ch
  427fc8:	(bad)  
  427fc9:	sbb    ebx,DWORD PTR [ecx+0x18]
  427fcc:	out    dx,al
  427fcd:	lods   al,BYTE PTR ds:[esi]
  427fce:	mov    ebx,0xd0448a56
  427fd3:	sub    DWORD PTR [esi-0x46],edi
  427fd6:	je     0x427fac
  427fd8:	inc    eax
  427fd9:	int    0x2f
  427fdb:	cmp    ebx,DWORD PTR [ecx-0x25c43db6]
  427fe1:	test   BYTE PTR [ebp+0x57eedfe9],dh
  427fe7:	dec    esp
  427fe8:	dec    edi
  427fe9:	test   DWORD PTR [eax*4+0x6773f754],0xf6b8dbdc
  427ff4:	test   al,0x5f
  427ff6:	sar    DWORD PTR [eax+0x47],0x56
  427ffa:	inc    sp
  427ffc:	add    esi,DWORD PTR [ebx]
  427ffe:	lahf   
  427fff:	loop   0x428028
  428001:	shl    al,1
  428003:	cld    
  428004:	inc    ebp
  428005:	jbe    0x428069
  428007:	and    ecx,DWORD PTR ds:0x4db6aeb0
  42800d:	test   al,0x6b
  42800f:	sbb    DWORD PTR [eax-0x71],esp
  428012:	add    dh,BYTE PTR [ebp-0x2632b9a9]
  428018:	xchg   ebx,eax
  428019:	les    esp,FWORD PTR [edx-0xe]
  42801c:	daa    
  42801d:	xor    esi,DWORD PTR [esi-0x2714e1a5]
  428023:	pop    ecx
  428024:	shl    esp,1
  428026:	and    bh,al
  428028:	jno    0x428066
  42802a:	std    
  42802b:	pushf  
  42802c:	(bad)  
  42802d:	fst    DWORD PTR [ebp+0x2972c6a2]
  428033:	and    BYTE PTR [eax],dl
  428035:	sbb    eax,0x1f0a95e7
  42803a:	js     0x4280b4
  42803c:	jbe    0x42803d
  42803e:	ret    0x24e4
  428041:	popf   
  428042:	cmp    cl,BYTE PTR [ebx-0xa]
  428045:	push   cs
  428046:	pushf  
  428047:	and    al,BYTE PTR [ecx-0x6c]
  42804a:	or     ah,BYTE PTR [edi]
  42804c:	push   0x58e5bc8f
  428051:	jmp    0x3fcb6b0c
  428056:	jecxz  0x42802a
  428058:	fdiv   DWORD PTR [edi-0x45a7fbf7]
  42805e:	and    BYTE PTR [ebx],cl
  428060:	aam    0x13
  428062:	xchg   edi,eax
  428063:	xchg   esi,eax
  428064:	mov    ebx,0x98b297cd
  428069:	xchg   ch,al
  42806b:	xor    ah,BYTE PTR [ebp+0x5b]
  42806e:	mov    eax,0xbbcc6a9c
  428073:	rdpmc  
  428075:	not    BYTE PTR [ebp-0x323d2c5]
  42807b:	xor    ah,cl
  42807d:	lds    esp,FWORD PTR [edx+ebx*8]
  428080:	gs iret 
  428082:	nop
  428083:	or     eax,0x4573a80c
  428088:	sti    
  428089:	mov    dl,0x1d
  42808b:	sub    al,0xa3
  42808d:	or     bh,bl
  42808f:	leave  
  428090:	loopne 0x4280b3
  428092:	add    eax,0x647a4553
  428097:	shr    BYTE PTR [ebx+0x36],cl
  42809a:	lea    ebx,[edx+ebx*1]
  42809d:	dec    edx
  42809e:	lea    eax,[ecx+esi*1-0x1e]
  4280a2:	jne    0x428106
  4280a4:	imul   edi,DWORD PTR [edi],0x3c
  4280a7:	mov    ah,0xdc
  4280a9:	sub    bh,BYTE PTR [esi+0x3c59bc7]
  4280af:	dec    esi
  4280b0:	scas   eax,DWORD PTR es:[edi]
  4280b1:	std    
  4280b2:	mov    edx,ds
  4280b4:	pop    eax
  4280b5:	into   
  4280b6:	ds push eax
  4280b8:	std    
  4280b9:	loope  0x42804d
  4280bb:	dec    eax
  4280bc:	iret   
  4280bd:	rcl    edi,0x79
  4280c0:	mov    dh,0xa1
  4280c2:	rsm    
  4280c4:	and    DWORD PTR [edi+0x3c],esi
  4280c7:	xchg   BYTE PTR [ecx-0x685cf0bd],dl
  4280cd:	cwde   
  4280ce:	(bad)  
  4280cf:	and    al,0x49
  4280d1:	push   ebp
  4280d2:	lods   eax,DWORD PTR ds:[esi]
  4280d3:	test   ecx,edi
  4280d5:	xor    dl,dh
  4280d7:	ds mov edx,0x2d39324f
  4280dd:	sbb    al,BYTE PTR [eax]
  4280df:	add    BYTE PTR [eax],al
  4280e1:	add    dh,al
  4280e3:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4280e5:	push   eax
  4280e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4280e7:	shl    bh,cl
  4280e9:	div    DWORD PTR [ebx-0x33d89742]
  4280ef:	add    esp,DWORD PTR [edi]
  4280f1:	push   0x1f8b5
  4280f6:	call   0xa34280ff
  4280fb:	push   es
  4280fc:	and    edx,DWORD PTR [ecx+0x15679760]
  428102:	mov    al,ds:0x144e7ce2
  428107:	cmp    DWORD PTR [ebp+0x37],0xffffffb8
  42810b:	and    eax,DWORD PTR [edi]
  42810d:	dec    eax
  42810e:	(bad)  
  42810f:	rcl    DWORD PTR [edi],1
  428111:	sti    
  428112:	and    cl,BYTE PTR [eax-0x2a2b10ab]
  428118:	jge    0x4280ac
  42811a:	lods   eax,DWORD PTR ds:[esi]
  42811b:	inc    ax
  42811d:	ds mov ecx,0xa94afa2e
  428123:	jp     0x42814a
  428125:	test   eax,0x8c6d5669
  42812a:	fidivr DWORD PTR [edx-0x6bcc193d]
  428130:	mov    eax,ds:0xbc7dd318
  428135:	out    dx,al
  428136:	retf   0xbe62
  428139:	jnp    0x4280bf
  42813b:	inc    edx
  42813c:	mov    bh,0x41
  42813e:	mov    ds:0xf19a6c20,al
  428143:	or     al,BYTE PTR [eax+0x42]
  428146:	fstp   QWORD PTR [ebx]
  428148:	and    esi,DWORD PTR [eax-0x21]
  42814b:	sar    esp,0x93
  42814e:	and    DWORD PTR [edx+ecx*2-0x33],0xffffffde
  428153:	out    0xf,al
  428155:	ins    DWORD PTR es:[edi],dx
  428156:	mov    ds:0x62ef38f8,eax
  42815b:	retf   0x59b4
  42815e:	adc    DWORD PTR [ebx+eax*4-0x530267c3],esp
  428165:	ds dec edi
  428167:	loop   0x4280f8
  428169:	cmp    al,0xbd
  42816b:	sar    DWORD PTR [edi-0x3572e784],cl
  428171:	lods   al,BYTE PTR ds:[esi]
  428172:	imul   DWORD PTR ds:0xc5dc2771
  428178:	das    
  428179:	scas   eax,DWORD PTR es:[edi]
  42817a:	xor    esi,DWORD PTR [edi]
  42817c:	jnp    0x42811f
  42817e:	cmp    dl,BYTE PTR [ebx]
  428180:	sub    dl,BYTE PTR [edi-0x5db1704f]
  428186:	into   
  428187:	shl    BYTE PTR ds:0x11e6d5b8,0x42
  42818e:	aad    0x84
  428190:	jmp    0xa0bea3fa
  428195:	push   ebp
  428196:	popa   
  428197:	test   BYTE PTR [ebx-0x35],bl
  42819a:	aas    
  42819b:	push   ebx
  42819c:	das    
  42819d:	call   0x557b:0x453d4108
  4281a4:	mov    DWORD PTR [ebx-0x5c30af7b],edi
  4281aa:	out    dx,eax
  4281ab:	pop    esp
  4281ac:	mov    al,0xc6
  4281ae:	push   ss
  4281af:	jg     0x428150
  4281b1:	adc    eax,0x70a1b759
  4281b6:	or     al,0x4e
  4281b8:	in     eax,dx
  4281b9:	sub    eax,0x261440af
  4281be:	jecxz  0x4281e9
  4281c0:	aam    0x76
  4281c2:	daa    
  4281c3:	adc    BYTE PTR [edx-0x30f8517c],ah
  4281c9:	mov    ebx,0x857f066
  4281ce:	fwait
  4281cf:	or     eax,DWORD PTR [ecx+0x747b0fe7]
  4281d5:	ja     0x428231
  4281d7:	test   esp,edx
  4281d9:	sub    edi,DWORD PTR [ebx]
  4281db:	add    esp,eax
  4281dd:	mov    cl,0x4e
  4281df:	xchg   DWORD PTR [esi+0x7875fb1c],edx
  4281e5:	and    al,0x8a
  4281e7:	aam    0x2c
  4281e9:	and    al,0x96
  4281eb:	lods   eax,DWORD PTR ds:[esi]
  4281ec:	pushf  
  4281ed:	xor    eax,0xd08d8ab
  4281f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4281f3:	xchg   esp,eax
  4281f4:	test   DWORD PTR [ebx],edx
  4281f6:	push   0xffffff81
  4281f8:	sbb    BYTE PTR [ebx],dl
  4281fa:	je     0x4281ec
  4281fc:	jnp    0x4281ee
  4281fe:	test   BYTE PTR [ecx+0x35c90897],ah
  428204:	shr    DWORD PTR [ebp+ebx*1-0x4e],1
  428208:	adc    dl,bh
  42820a:	ret    0x1234
  42820d:	loopne 0x428213
  42820f:	and    DWORD PTR [eax+ebx*4],eax
  428212:	jl     0x4281f8
  428214:	mov    esi,0x5d6c6cab
  428219:	fnsave [ebx]
  42821b:	test   BYTE PTR [eax+0x8],bh
  42821e:	fnstenv ds:[ecx]
  428221:	lock cli 
  428223:	(bad)  
  428224:	fucomi st,st(0)
  428226:	mov    ah,0x71
  428228:	mov    bh,0x4b
  42822a:	loope  0x428220
  42822c:	and    eax,0xbcac2c31
  428231:	mov    cl,0x71
  428233:	xchg   DWORD PTR [eax+0x4b],esi
  428236:	dec    ecx
  428237:	cmp    DWORD PTR [esi-0x2a2f4953],ebx
  42823d:	stc    
  42823e:	push   ecx
  42823f:	lods   al,BYTE PTR ds:[esi]
  428240:	clc    
  428241:	cmp    BYTE PTR [edi+0x47c754a6],dh
  428247:	dec    ecx
  428248:	mov    ebp,0x928d39d5
  42824d:	pop    es
  42824e:	int    0x5c
  428250:	mov    esi,es
  428252:	les    ebx,FWORD PTR [eax+0x508fffee]
  428258:	add    eax,0xd0cf7bf2
  42825d:	sahf   
  42825e:	push   edx
  42825f:	aam    0xa7
  428261:	and    edx,DWORD PTR [eax]
  428263:	pop    ecx
  428264:	sub    al,0xfd
  428266:	xchg   edi,eax
  428267:	dec    ebp
  428268:	sbb    edi,edi
  42826a:	pop    esp
  42826b:	add    eax,DWORD PTR [ebx]
  42826d:	add    al,0xd7
  42826f:	jbe    0x428260
  428271:	push   es
  428272:	push   ebx
  428273:	adc    dl,dl
  428275:	test   esp,esi
  428277:	loop   0x428225
  428279:	icebp  
  42827a:	jo     0x42828a
  42827c:	arpl   WORD PTR [ecx],di
  42827e:	dec    esi
  42827f:	xor    ah,BYTE PTR [esi-0x21]
  428282:	leave  
  428283:	in     al,0x1b
  428285:	or     DWORD PTR [edx+0x4426012d],ecx
  42828b:	adc    esp,DWORD PTR [ebp-0x15b0e108]
  428291:	(bad)  
  428293:	jo     0x4282c4
  428295:	push   es
  428296:	fisttp QWORD PTR [ebp-0x4133b839]
  42829c:	push   ecx
  42829d:	jg     0x42828b
  42829f:	dec    ecx
  4282a0:	imul   eax,DWORD PTR [ebx-0x57],0x28f4b821
  4282a7:	sub    eax,0x4274cbc5
  4282ac:	hlt    
  4282ad:	pop    ss
  4282ae:	(bad)  
  4282af:	jns    0x428247
  4282b1:	mov    ch,0x65
  4282b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4282b4:	aaa    
  4282b5:	fcomp  DWORD PTR [ebp-0xe564c65]
  4282bb:	popf   
  4282bc:	in     eax,dx
  4282bd:	push   ebx
  4282be:	or     eax,0x8bfeb56e
  4282c3:	jl     0x428308
  4282c5:	push   cs
  4282c6:	jbe    0x428304
  4282c8:	dec    edi
  4282c9:	leave  
  4282ca:	cmp    ecx,edi
  4282cc:	mov    ebp,0x5ecefed8
  4282d1:	enter  0x5034,0x7d
  4282d5:	mov    dl,0x9e
  4282d7:	loop   0x42830c
  4282d9:	pop    edx
  4282da:	out    0xec,eax
  4282dc:	mov    ch,0xf8
  4282de:	ins    BYTE PTR es:[edi],dx
  4282df:	arpl   WORD PTR [eax],bx
  4282e1:	xlat   BYTE PTR ds:[ebx]
  4282e2:	je     0x428358
  4282e4:	adc    al,0x1a
  4282e6:	fadd   DWORD PTR [esi]
  4282e8:	loope  0x42834b
  4282ea:	sub    BYTE PTR [edx-0x1a],cl
  4282ed:	les    ecx,FWORD PTR [eax+0x6a]
  4282f0:	mov    ebx,0xa296b937
  4282f5:	fild   DWORD PTR [ebx]
  4282f7:	inc    ecx
  4282f8:	pop    esi
  4282f9:	ja     0x428293
  4282fb:	adc    eax,DWORD PTR [ebp-0x5f]
  4282fe:	outs   dx,DWORD PTR ds:[esi]
  4282ff:	call   0xde2f6344
  428304:	mov    esp,0x21a2d501
  428309:	sub    edx,DWORD PTR [eax+0x27303e5]
  42830f:	and    ch,BYTE PTR [edx+0x1f]
  428312:	sbb    al,0xb9
  428314:	add    DWORD PTR [eax],ecx
  428316:	jae    0x4282bd
  428318:	push   ss
  428319:	outs   dx,DWORD PTR ds:[esi]
  42831a:	(bad)  
  42831b:	push   edi
  42831c:	retf   0x6e98
  42831f:	pop    esp
  428320:	mov    BYTE PTR [eax+edi*1-0x56],bl
  428324:	cwde   
  428325:	add    bl,cl
  428327:	adc    bh,BYTE PTR gs:[edx-0x2d]
  42832b:	dec    ecx
  42832c:	addr16 cmp dl,0x77
  428330:	pushf  
  428331:	sub    BYTE PTR [ebx],bh
  428333:	cmp    edi,DWORD PTR fs:[esi]
  428336:	jbe    0x428329
  428338:	add    esi,DWORD PTR [ecx-0x34]
  42833b:	mov    dl,0x39
  42833d:	rcr    ebp,cl
  42833f:	xchg   BYTE PTR [esp+ebp*1-0x3d1aea3b],dl
  428346:	jg     0x4283b0
  428348:	rol    DWORD PTR [eax-0x5e],0x79
  42834c:	add    BYTE PTR [esi],ch
  42834e:	aam    0xbf
  428350:	ss sbb eax,0xe98f054c
  428356:	mov    dh,0xa9
  428358:	xor    al,0x82
  42835a:	dec    edi
  42835b:	inc    esp
  42835c:	and    eax,0x39a940e0
  428361:	xchg   BYTE PTR es:[ebp-0x27],ch
  428365:	into   
  428366:	and    al,0x7b
  428368:	enter  0x6e72,0xc5
  42836c:	sub    eax,0x6d0a15ac
  428371:	push   es
  428372:	xor    eax,0xea270da0
  428377:	xchg   esp,eax
  428378:	inc    edi
  428379:	adc    edx,DWORD PTR [ebx-0x58]
  42837c:	push   ecx
  42837d:	sbb    eax,DWORD PTR [ebx+0xd]
  428380:	xchg   esp,eax
  428381:	adc    al,0x9f
  428383:	xchg   edx,eax
  428384:	ret    0x26e3
  428387:	mov    BYTE PTR [ebx],ah
  428389:	jmp    0x428341
  42838b:	es mov dh,0xc6
  42838e:	aas    
  42838f:	sbb    edi,DWORD PTR [esp+eax*2]
  428392:	and    ch,dl
  428394:	std    
  428395:	hlt    
  428396:	fimul  WORD PTR [edi]
  428398:	sbb    BYTE PTR [eax],bh
  42839a:	adc    al,bh
  42839c:	daa    
  42839d:	lahf   
  42839e:	fstp   DWORD PTR [edx+edx*2+0x362af7c2]
  4283a5:	clc    
  4283a6:	mov    bh,0x67
  4283a8:	not    DWORD PTR [eax-0x3]
  4283ab:	dec    ecx
  4283ac:	inc    edi
  4283ad:	rol    esi,cl
  4283af:	div    BYTE PTR [ecx+esi*4+0x17e4081b]
  4283b6:	fist   DWORD PTR [edx-0x2e]
  4283b9:	cmp    edi,DWORD PTR [ebx]
  4283bb:	(bad)  
  4283bd:	and    al,0x51
  4283bf:	fcomp  DWORD PTR [ebx+0x62b534d5]
  4283c5:	cdq    
  4283c6:	fbld   TBYTE PTR [ebp+0x29]
  4283c9:	lock jle 0x4283b0
  4283cc:	aam    0xf4
  4283ce:	pop    es
  4283cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4283d0:	mov    edi,0xd681ec71
  4283d5:	xor    eax,0x4fbe283
  4283da:	mov    ds:0xc9806ac0,al
  4283df:	push   esi
  4283e0:	pop    ebx
  4283e1:	cmp    BYTE PTR [edi-0x41],ah
  4283e4:	xchg   sp,ax
  4283e6:	in     al,dx
  4283e7:	xchg   ecx,eax
  4283e8:	pop    es
  4283e9:	addr16 pop cx
  4283ec:	js     0x42842a
  4283ee:	mov    ch,0xc
  4283f0:	adc    esi,DWORD PTR [ebx+edi*1]
  4283f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4283f4:	cmp    bh,BYTE PTR [esi-0x4db7e37c]
  4283fa:	pop    es
  4283fb:	pshufw mm2,QWORD PTR [esi+0x6d7f415a],0x2e
  428403:	push   DWORD PTR [edi+esi*1-0x63]
  428407:	outs   dx,BYTE PTR ds:[esi]
  428408:	mov    ds:0xc826141,al
  42840d:	bound  ebp,QWORD PTR [edx+0x36cbff83]
  428413:	mov    al,ds:0x3e562d09
  428418:	or     ch,BYTE PTR [ebp-0x66]
  42841b:	pop    ss
  42841c:	xchg   edi,eax
  42841d:	leave  
  42841e:	push   ecx
  42841f:	(bad)  
  428420:	(bad)  
  428421:	fs das 
  428423:	mov    WORD PTR [ecx+0x58fefc3e],?
  428429:	mov    eax,ds:0xabe74f7e
  42842e:	add    eax,0xc19dc9e4
  428433:	lds    ebp,FWORD PTR [ecx+ecx*1+0x13]
  428437:	clc    
  428438:	pushf  
  428439:	arpl   WORD PTR [ebx-0x39],bx
  42843c:	xchg   esp,eax
  42843d:	(bad)  
  42843e:	cmp    dl,BYTE PTR [esi+0x70]
  428441:	cmc    
  428442:	push   eax
  428443:	mov    ch,0x97
  428445:	pop    eax
  428446:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428447:	sar    DWORD PTR [edi-0x14],0xa7
  42844b:	adc    DWORD PTR [ecx+0x738406fe],0x7e
  428452:	mov    fs,WORD PTR [ebx-0x254a1ea3]
  428458:	inc    edi
  428459:	or     eax,0xdc64710b
  42845e:	sub    DWORD PTR [esi],esp
  428460:	pusha  
  428461:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428462:	icebp  
  428463:	mov    bh,0x61
  428465:	es sbb eax,0x772c4509
  42846b:	test   DWORD PTR [esi-0x29],0xf5c675c4
  428472:	mov    ebp,0xc020622a
  428477:	sub    edi,esi
  428479:	dec    esp
  42847a:	lock test DWORD PTR [edi-0x24],esi
  42847e:	fisubr WORD PTR [ebp-0x34]
  428481:	mov    al,ds:0xb0788392
  428486:	test   DWORD PTR ds:0xfd78ae67,ebx
  42848c:	retf   
  42848d:	add    BYTE PTR [ebx+eax*8+0x78f04e28],cl
  428494:	or     al,0x7e
  428496:	mul    DWORD PTR [ecx-0x4c]
  428499:	mov    ebx,0xb77249e4
  42849e:	inc    edx
  42849f:	int    0x6d
  4284a1:	sbb    BYTE PTR [ecx],0x24
  4284a4:	jno    0x428520
  4284a6:	ret    0x9485
  4284a9:	sub    BYTE PTR [eax-0x39c9ca61],ah
  4284af:	ficomp WORD PTR [eax-0x2d]
  4284b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4284b3:	popf   
  4284b4:	enter  0x1f9c,0x9e
  4284b8:	push   0x986b411a
  4284bd:	movhps xmm2,QWORD PTR [eax-0x3f]
  4284c1:	pop    eax
  4284c2:	fld    TBYTE PTR [bx+0x9d5]
  4284c7:	scas   eax,DWORD PTR es:[edi]
  4284c8:	cs stc 
  4284ca:	pop    edx
  4284cb:	xor    al,0xef
  4284cd:	pop    DWORD PTR [edx-0x67]
  4284d0:	(bad)  
  4284d1:	std    
  4284d2:	test   al,0x90
  4284d4:	mov    ds:0xf2528199,al
  4284d9:	mov    bh,0x60
  4284db:	int3   
  4284dc:	or     DWORD PTR [ebx],0xf0e81a18
  4284e2:	mov    ecx,0xefc2ec27
  4284e7:	jno    0x4284fa
  4284e9:	aaa    
  4284ea:	cmp    DWORD PTR [edx],esp
  4284ec:	lahf   
  4284ed:	mov    dl,0x9a
  4284ef:	pop    ss
  4284f0:	sub    al,0x2
  4284f2:	cmp    cl,BYTE PTR [eax+edi*2-0x9]
  4284f6:	outs   dx,BYTE PTR fs:[esi]
  4284f8:	cld    
  4284f9:	adc    eax,0x973bdee1
  4284fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284ff:	sub    ecx,esi
  428501:	mov    dh,0xdc
  428503:	test   DWORD PTR [edx+eiz*2-0x3e],0xbde2c64c
  42850b:	xor    ah,ah
  42850d:	inc    edi
  42850e:	cdq    
  42850f:	pop    ss
  428510:	push   0xb4f5001
  428515:	xchg   edi,eax
  428516:	stc    
  428517:	dec    ecx
  428518:	fcomi  st,st(0)
  42851a:	push   esp
  42851b:	in     eax,dx
  42851c:	sub    dl,BYTE PTR [edx+ebp*2+0x22e74fab]
  428523:	cmp    esi,DWORD PTR [ebx]
  428525:	fbstp  TBYTE PTR [ebx]
  428527:	mov    edx,0x9b5df170
  42852c:	mov    ah,0xe8
  42852e:	arpl   WORD PTR [edx+0x4dab2675],di
  428534:	jne    0x428550
  428536:	and    eax,0x36a112e0
  42853b:	rol    BYTE PTR [eax],1
  42853d:	mov    bh,dl
  42853f:	mov    ecx,0xf3f2bd2b
  428544:	aas    
  428545:	in     eax,0x4e
  428547:	int    0x58
  428549:	dec    eax
  42854a:	or     BYTE PTR [edx+0x1b],ah
  42854d:	xchg   edi,eax
  42854e:	popf   
  42854f:	jo     0x4284fe
  428551:	inc    esi
  428552:	call   0x1bb1:0x6e428846
  428559:	fwait
  42855a:	call   0x8cc6:0xb983cded
  428561:	fidiv  DWORD PTR ds:0xbaed3d90
  428567:	push   ds
  428568:	pop    edi
  428569:	scas   al,BYTE PTR es:[edi]
  42856a:	and    bl,bh
  42856c:	dec    ebx
  42856d:	fdivr  st(0),st
  42856f:	dec    ecx
  428570:	dec    edi
  428571:	stc    
  428572:	or     bh,BYTE PTR ds:0x55f34db1
  428578:	jle    0x42852e
  42857a:	daa    
  42857b:	xor    eax,esi
  42857d:	mov    ecx,0x8eca911f
  428582:	nop    DWORD PTR ds:0xdce5041d
  428589:	aas    
  42858a:	cmp    BYTE PTR [edx],0x96
  42858d:	xlat   BYTE PTR ds:[ebx]
  42858e:	retf   0x4665
  428591:	outs   dx,WORD PTR ds:[esi]
  428593:	mov    cl,0x86
  428595:	dec    ebp
  428596:	pop    ss
  428597:	rcl    DWORD PTR [edx],cl
  428599:	fsub   QWORD PTR [esi-0x1c]
  42859c:	ret    
  42859d:	retf   0x302f
  4285a0:	jmp    0xf2aa462a
  4285a5:	in     eax,0xb4
  4285a7:	pop    es
  4285a8:	frstor [edi]
  4285aa:	mov    BYTE PTR [ebx+0x2b],dh
  4285ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4285ae:	cld    
  4285af:	cmp    BYTE PTR ss:[edx],0xf8
  4285b3:	add    eax,0xf35c86dc
  4285b8:	and    bh,BYTE PTR [esi+0x464ac514]
  4285be:	and    al,0x3
  4285c0:	jmp    0x816e:0xbe2dcbf1
  4285c7:	jo     0x4285b1
  4285c9:	lods   al,BYTE PTR ds:[esi]
  4285ca:	std    
  4285cb:	aad    0x9
  4285cd:	mov    ds,esp
  4285cf:	fst    QWORD PTR [esi]
  4285d1:	in     al,dx
  4285d2:	mov    ebp,0x95dd7246
  4285d7:	shl    DWORD PTR [edi-0x40],0x59
  4285db:	retf   0x1ffb
  4285de:	fwait
  4285df:	cmc    
  4285e0:	pop    esp
  4285e1:	.byte 0x1d
